
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

000013ec <_init>:
    13ec:	push	{r3, lr}
    13f0:	bl	16c8 <call_weak_fn>
    13f4:	pop	{r3, pc}

Disassembly of section .plt:

000013f8 <.plt>:
    13f8:	push	{lr}		; (str lr, [sp, #-4]!)
    13fc:	ldr	lr, [pc, #4]	; 1408 <.plt+0x10>
    1400:	add	lr, pc, lr
    1404:	ldr	pc, [lr, #8]!
    1408:	.word	0x0005fbf8

0000140c <calloc@plt>:
    140c:	add	ip, pc, #0, 12
    1410:	add	ip, ip, #389120	; 0x5f000
    1414:	ldr	pc, [ip, #3064]!	; 0xbf8

00001418 <Mat_VarReadNext@plt>:
    1418:	add	ip, pc, #0, 12
    141c:	add	ip, ip, #389120	; 0x5f000
    1420:	ldr	pc, [ip, #3056]!	; 0xbf0

00001424 <strcmp@plt>:
    1424:	add	ip, pc, #0, 12
    1428:	add	ip, ip, #389120	; 0x5f000
    142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00001430 <__cxa_finalize@plt>:
    1430:	add	ip, pc, #0, 12
    1434:	add	ip, ip, #389120	; 0x5f000
    1438:	ldr	pc, [ip, #3040]!	; 0xbe0

0000143c <Mat_Open@plt>:
    143c:	add	ip, pc, #0, 12
    1440:	add	ip, ip, #389120	; 0x5f000
    1444:	ldr	pc, [ip, #3032]!	; 0xbd8

00001448 <printf@plt>:
    1448:	add	ip, pc, #0, 12
    144c:	add	ip, ip, #389120	; 0x5f000
    1450:	ldr	pc, [ip, #3024]!	; 0xbd0

00001454 <fopen@plt>:
    1454:	add	ip, pc, #0, 12
    1458:	add	ip, ip, #389120	; 0x5f000
    145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00001460 <inflate@plt>:
    1460:	add	ip, pc, #0, 12
    1464:	add	ip, ip, #389120	; 0x5f000
    1468:	ldr	pc, [ip, #3008]!	; 0xbc0

0000146c <fflush@plt>:
    146c:	add	ip, pc, #0, 12
    1470:	add	ip, ip, #389120	; 0x5f000
    1474:	ldr	pc, [ip, #3000]!	; 0xbb8

00001478 <free@plt>:
    1478:	add	ip, pc, #0, 12
    147c:	add	ip, ip, #389120	; 0x5f000
    1480:	ldr	pc, [ip, #2992]!	; 0xbb0

00001484 <Mat_Warning@plt>:
    1484:	add	ip, pc, #0, 12
    1488:	add	ip, ip, #389120	; 0x5f000
    148c:	ldr	pc, [ip, #2984]!	; 0xba8

00001490 <memcpy@plt>:
    1490:	add	ip, pc, #0, 12
    1494:	add	ip, ip, #389120	; 0x5f000
    1498:	ldr	pc, [ip, #2976]!	; 0xba0

0000149c <Mat_VarWrite@plt>:
    149c:	add	ip, pc, #0, 12
    14a0:	add	ip, ip, #389120	; 0x5f000
    14a4:	ldr	pc, [ip, #2968]!	; 0xb98

000014a8 <time@plt>:
    14a8:	add	ip, pc, #0, 12
    14ac:	add	ip, ip, #389120	; 0x5f000
    14b0:	ldr	pc, [ip, #2960]!	; 0xb90

000014b4 <ftell@plt>:
    14b4:	add	ip, pc, #0, 12
    14b8:	add	ip, ip, #389120	; 0x5f000
    14bc:	ldr	pc, [ip, #2952]!	; 0xb88

000014c0 <ctime@plt>:
    14c0:	add	ip, pc, #0, 12
    14c4:	add	ip, ip, #389120	; 0x5f000
    14c8:	ldr	pc, [ip, #2944]!	; 0xb80

000014cc <strdup@plt>:
    14cc:	add	ip, pc, #0, 12
    14d0:	add	ip, ip, #389120	; 0x5f000
    14d4:	ldr	pc, [ip, #2936]!	; 0xb78

000014d8 <realloc@plt>:
    14d8:	add	ip, pc, #0, 12
    14dc:	add	ip, ip, #389120	; 0x5f000
    14e0:	ldr	pc, [ip, #2928]!	; 0xb70

000014e4 <Mat_VarReadInfo@plt>:
    14e4:	add	ip, pc, #0, 12
    14e8:	add	ip, ip, #389120	; 0x5f000
    14ec:	ldr	pc, [ip, #2920]!	; 0xb68

000014f0 <zError@plt>:
    14f0:	add	ip, pc, #0, 12
    14f4:	add	ip, ip, #389120	; 0x5f000
    14f8:	ldr	pc, [ip, #2912]!	; 0xb60

000014fc <deflate@plt>:
    14fc:	add	ip, pc, #0, 12
    1500:	add	ip, ip, #389120	; 0x5f000
    1504:	ldr	pc, [ip, #2904]!	; 0xb58

00001508 <Mat_VarCalloc@plt>:
    1508:	add	ip, pc, #0, 12
    150c:	add	ip, ip, #389120	; 0x5f000
    1510:	ldr	pc, [ip, #2896]!	; 0xb50

00001514 <fwrite@plt>:
    1514:	add	ip, pc, #0, 12
    1518:	add	ip, ip, #389120	; 0x5f000
    151c:	ldr	pc, [ip, #2888]!	; 0xb48

00001520 <fread@plt>:
    1520:	add	ip, pc, #0, 12
    1524:	add	ip, ip, #389120	; 0x5f000
    1528:	ldr	pc, [ip, #2880]!	; 0xb40

0000152c <floor@plt>:
    152c:	add	ip, pc, #0, 12
    1530:	add	ip, ip, #389120	; 0x5f000
    1534:	ldr	pc, [ip, #2872]!	; 0xb38

00001538 <puts@plt>:
    1538:	add	ip, pc, #0, 12
    153c:	add	ip, ip, #389120	; 0x5f000
    1540:	ldr	pc, [ip, #2864]!	; 0xb30

00001544 <malloc@plt>:
    1544:	add	ip, pc, #0, 12
    1548:	add	ip, ip, #389120	; 0x5f000
    154c:	ldr	pc, [ip, #2856]!	; 0xb28

00001550 <deflateInit_@plt>:
    1550:	add	ip, pc, #0, 12
    1554:	add	ip, ip, #389120	; 0x5f000
    1558:	ldr	pc, [ip, #2848]!	; 0xb20

0000155c <mktemp@plt>:
    155c:	add	ip, pc, #0, 12
    1560:	add	ip, ip, #389120	; 0x5f000
    1564:	ldr	pc, [ip, #2840]!	; 0xb18

00001568 <__gmon_start__@plt>:
    1568:	add	ip, pc, #0, 12
    156c:	add	ip, ip, #389120	; 0x5f000
    1570:	ldr	pc, [ip, #2832]!	; 0xb10

00001574 <exit@plt>:
    1574:	add	ip, pc, #0, 12
    1578:	add	ip, ip, #389120	; 0x5f000
    157c:	ldr	pc, [ip, #2824]!	; 0xb08

00001580 <feof@plt>:
    1580:	add	ip, pc, #0, 12
    1584:	add	ip, ip, #389120	; 0x5f000
    1588:	ldr	pc, [ip, #2816]!	; 0xb00

0000158c <Mat_VarFree@plt>:
    158c:	add	ip, pc, #0, 12
    1590:	add	ip, ip, #389120	; 0x5f000
    1594:	ldr	pc, [ip, #2808]!	; 0xaf8

00001598 <Mat_SizeOf@plt>:
    1598:	add	ip, pc, #0, 12
    159c:	add	ip, ip, #389120	; 0x5f000
    15a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000015a4 <Mat_GetDir@plt>:
    15a4:	add	ip, pc, #0, 12
    15a8:	add	ip, ip, #389120	; 0x5f000
    15ac:	ldr	pc, [ip, #2792]!	; 0xae8

000015b0 <inflateEnd@plt>:
    15b0:	add	ip, pc, #0, 12
    15b4:	add	ip, ip, #389120	; 0x5f000
    15b8:	ldr	pc, [ip, #2784]!	; 0xae0

000015bc <inflateCopy@plt>:
    15bc:	add	ip, pc, #0, 12
    15c0:	add	ip, ip, #389120	; 0x5f000
    15c4:	ldr	pc, [ip, #2776]!	; 0xad8

000015c8 <strlen@plt>:
    15c8:	add	ip, pc, #0, 12
    15cc:	add	ip, ip, #389120	; 0x5f000
    15d0:	ldr	pc, [ip, #2768]!	; 0xad0

000015d4 <fprintf@plt>:
    15d4:	add	ip, pc, #0, 12
    15d8:	add	ip, ip, #389120	; 0x5f000
    15dc:	ldr	pc, [ip, #2760]!	; 0xac8

000015e0 <snprintf@plt>:
    15e0:	add	ip, pc, #0, 12
    15e4:	add	ip, ip, #389120	; 0x5f000
    15e8:	ldr	pc, [ip, #2752]!	; 0xac0

000015ec <Mat_Rewind@plt>:
    15ec:	add	ip, pc, #0, 12
    15f0:	add	ip, ip, #389120	; 0x5f000
    15f4:	ldr	pc, [ip, #2744]!	; 0xab8

000015f8 <memset@plt>:
    15f8:	add	ip, pc, #0, 12
    15fc:	add	ip, ip, #389120	; 0x5f000
    1600:	ldr	pc, [ip, #2736]!	; 0xab0

00001604 <putchar@plt>:
    1604:	add	ip, pc, #0, 12
    1608:	add	ip, ip, #389120	; 0x5f000
    160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00001610 <Mat_Close@plt>:
    1610:	add	ip, pc, #0, 12
    1614:	add	ip, ip, #389120	; 0x5f000
    1618:	ldr	pc, [ip, #2720]!	; 0xaa0

0000161c <Mat_Critical@plt>:
    161c:	add	ip, pc, #0, 12
    1620:	add	ip, ip, #389120	; 0x5f000
    1624:	ldr	pc, [ip, #2712]!	; 0xa98

00001628 <deflateEnd@plt>:
    1628:	add	ip, pc, #0, 12
    162c:	add	ip, ip, #389120	; 0x5f000
    1630:	ldr	pc, [ip, #2704]!	; 0xa90

00001634 <fclose@plt>:
    1634:	add	ip, pc, #0, 12
    1638:	add	ip, ip, #389120	; 0x5f000
    163c:	ldr	pc, [ip, #2696]!	; 0xa88

00001640 <inflateInit_@plt>:
    1640:	add	ip, pc, #0, 12
    1644:	add	ip, ip, #389120	; 0x5f000
    1648:	ldr	pc, [ip, #2688]!	; 0xa80

0000164c <Mat_CreateVer@plt>:
    164c:	add	ip, pc, #0, 12
    1650:	add	ip, ip, #389120	; 0x5f000
    1654:	ldr	pc, [ip, #2680]!	; 0xa78

00001658 <remove@plt>:
    1658:	add	ip, pc, #0, 12
    165c:	add	ip, ip, #389120	; 0x5f000
    1660:	ldr	pc, [ip, #2672]!	; 0xa70

00001664 <vsnprintf@plt>:
    1664:	add	ip, pc, #0, 12
    1668:	add	ip, ip, #389120	; 0x5f000
    166c:	ldr	pc, [ip, #2664]!	; 0xa68

00001670 <Mat_VarGetStructFieldByName@plt>:
    1670:	add	ip, pc, #0, 12
    1674:	add	ip, ip, #389120	; 0x5f000
    1678:	ldr	pc, [ip, #2656]!	; 0xa60

0000167c <Mat_SizeOfClass@plt>:
    167c:	add	ip, pc, #0, 12
    1680:	add	ip, ip, #389120	; 0x5f000
    1684:	ldr	pc, [ip, #2648]!	; 0xa58

00001688 <Mat_VarGetStructFieldByIndex@plt>:
    1688:	add	ip, pc, #0, 12
    168c:	add	ip, ip, #389120	; 0x5f000
    1690:	ldr	pc, [ip, #2640]!	; 0xa50

00001694 <fseek@plt>:
    1694:	add	ip, pc, #0, 12
    1698:	add	ip, ip, #389120	; 0x5f000
    169c:	ldr	pc, [ip, #2632]!	; 0xa48

000016a0 <abort@plt>:
    16a0:	add	ip, pc, #0, 12
    16a4:	add	ip, ip, #389120	; 0x5f000
    16a8:	ldr	pc, [ip, #2624]!	; 0xa40

000016ac <Mat_VarDuplicate@plt>:
    16ac:	add	ip, pc, #0, 12
    16b0:	add	ip, ip, #389120	; 0x5f000
    16b4:	ldr	pc, [ip, #2616]!	; 0xa38

000016b8 <Mat_VarReadNextInfo@plt>:
    16b8:	add	ip, pc, #0, 12
    16bc:	add	ip, ip, #389120	; 0x5f000
    16c0:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

000016c8 <call_weak_fn>:
    16c8:	ldr	r3, [pc, #20]	; 16e4 <call_weak_fn+0x1c>
    16cc:	ldr	r2, [pc, #20]	; 16e8 <call_weak_fn+0x20>
    16d0:	add	r3, pc, r3
    16d4:	ldr	r2, [r3, r2]
    16d8:	cmp	r2, #0
    16dc:	bxeq	lr
    16e0:	b	1568 <__gmon_start__@plt>
    16e4:	.word	0x0005f928
    16e8:	.word	0x00000100

000016ec <deregister_tm_clones>:
    16ec:	ldr	r0, [pc, #44]	; 1720 <deregister_tm_clones+0x34>
    16f0:	ldr	r3, [pc, #44]	; 1724 <deregister_tm_clones+0x38>
    16f4:	add	r0, pc, r0
    16f8:	add	r3, pc, r3
    16fc:	cmp	r3, r0
    1700:	ldr	r3, [pc, #32]	; 1728 <deregister_tm_clones+0x3c>
    1704:	add	r3, pc, r3
    1708:	bxeq	lr
    170c:	ldr	r2, [pc, #24]	; 172c <deregister_tm_clones+0x40>
    1710:	ldr	r3, [r3, r2]
    1714:	cmp	r3, #0
    1718:	bxeq	lr
    171c:	bx	r3
    1720:	.word	0x0005fac0
    1724:	.word	0x0005fabc
    1728:	.word	0x0005f8f4
    172c:	.word	0x000000f8

00001730 <register_tm_clones>:
    1730:	ldr	r0, [pc, #56]	; 1770 <register_tm_clones+0x40>
    1734:	ldr	r3, [pc, #56]	; 1774 <register_tm_clones+0x44>
    1738:	add	r0, pc, r0
    173c:	add	r3, pc, r3
    1740:	sub	r1, r3, r0
    1744:	ldr	r3, [pc, #44]	; 1778 <register_tm_clones+0x48>
    1748:	asr	r1, r1, #2
    174c:	add	r3, pc, r3
    1750:	add	r1, r1, r1, lsr #31
    1754:	asrs	r1, r1, #1
    1758:	bxeq	lr
    175c:	ldr	r2, [pc, #24]	; 177c <register_tm_clones+0x4c>
    1760:	ldr	r3, [r3, r2]
    1764:	cmp	r3, #0
    1768:	bxeq	lr
    176c:	bx	r3
    1770:	.word	0x0005fa7c
    1774:	.word	0x0005fa78
    1778:	.word	0x0005f8ac
    177c:	.word	0x00000108

00001780 <__do_global_dtors_aux>:
    1780:	ldr	r3, [pc, #76]	; 17d4 <__do_global_dtors_aux+0x54>
    1784:	ldr	r2, [pc, #76]	; 17d8 <__do_global_dtors_aux+0x58>
    1788:	add	r3, pc, r3
    178c:	add	r2, pc, r2
    1790:	ldrb	r3, [r3]
    1794:	cmp	r3, #0
    1798:	bxne	lr
    179c:	ldr	r3, [pc, #56]	; 17dc <__do_global_dtors_aux+0x5c>
    17a0:	push	{r4, lr}
    17a4:	ldr	r3, [r2, r3]
    17a8:	cmp	r3, #0
    17ac:	beq	17bc <__do_global_dtors_aux+0x3c>
    17b0:	ldr	r3, [pc, #40]	; 17e0 <__do_global_dtors_aux+0x60>
    17b4:	ldr	r0, [pc, r3]
    17b8:	bl	1430 <__cxa_finalize@plt>
    17bc:	bl	16ec <deregister_tm_clones>
    17c0:	ldr	r3, [pc, #28]	; 17e4 <__do_global_dtors_aux+0x64>
    17c4:	mov	r2, #1
    17c8:	add	r3, pc, r3
    17cc:	strb	r2, [r3]
    17d0:	pop	{r4, pc}
    17d4:	.word	0x0005fa2c
    17d8:	.word	0x0005f86c
    17dc:	.word	0x000000f4
    17e0:	.word	0x0005f950
    17e4:	.word	0x0005f9ec

000017e8 <frame_dummy>:
    17e8:	b	1730 <register_tm_clones>

000017ec <Mat_int64Swap>:
    17ec:	push	{lr}		; (str lr, [sp, #-4]!)
    17f0:	ldr	r2, [r0]
    17f4:	ldr	ip, [r0, #4]
    17f8:	mov	r1, #0
    17fc:	bfi	r1, r2, #24, #8
    1800:	asr	lr, ip, #24
    1804:	mov	r3, #0
    1808:	bfi	r3, lr, #0, #8
    180c:	sbfx	lr, r2, #8, #8
    1810:	bfi	r1, lr, #16, #8
    1814:	sbfx	lr, ip, #16, #8
    1818:	bfi	r3, lr, #8, #8
    181c:	sbfx	lr, r2, #16, #8
    1820:	bfi	r1, lr, #8, #8
    1824:	sbfx	lr, ip, #8, #8
    1828:	bfi	r3, lr, #16, #8
    182c:	asr	r2, r2, #24
    1830:	bfi	r1, r2, #0, #8
    1834:	bfi	r3, ip, #24, #8
    1838:	str	r3, [r0]
    183c:	str	r1, [r0, #4]
    1840:	mov	r0, r3
    1844:	pop	{pc}		; (ldr pc, [sp], #4)

00001848 <Mat_uint64Swap>:
    1848:	push	{lr}		; (str lr, [sp, #-4]!)
    184c:	ldr	r2, [r0]
    1850:	ldr	ip, [r0, #4]
    1854:	mov	r1, #0
    1858:	bfi	r1, r2, #24, #8
    185c:	lsr	lr, ip, #24
    1860:	mov	r3, #0
    1864:	bfi	r3, lr, #0, #8
    1868:	ubfx	lr, r2, #8, #8
    186c:	bfi	r1, lr, #16, #8
    1870:	ubfx	lr, ip, #16, #8
    1874:	bfi	r3, lr, #8, #8
    1878:	ubfx	lr, r2, #16, #8
    187c:	bfi	r1, lr, #8, #8
    1880:	ubfx	lr, ip, #8, #8
    1884:	bfi	r3, lr, #16, #8
    1888:	lsr	r2, r2, #24
    188c:	bfi	r1, r2, #0, #8
    1890:	bfi	r3, ip, #24, #8
    1894:	str	r3, [r0]
    1898:	str	r1, [r0, #4]
    189c:	mov	r0, r3
    18a0:	pop	{pc}		; (ldr pc, [sp], #4)

000018a4 <Mat_int32Swap>:
    18a4:	ldr	r2, [r0]
    18a8:	mov	r3, #0
    18ac:	bfi	r3, r2, #24, #8
    18b0:	asr	r1, r2, #24
    18b4:	bfi	r3, r1, #0, #8
    18b8:	sbfx	r1, r2, #8, #8
    18bc:	bfi	r3, r1, #16, #8
    18c0:	sbfx	r2, r2, #16, #8
    18c4:	bfi	r3, r2, #8, #8
    18c8:	str	r3, [r0]
    18cc:	mov	r0, r3
    18d0:	bx	lr

000018d4 <Mat_uint32Swap>:
    18d4:	ldr	r2, [r0]
    18d8:	mov	r3, #0
    18dc:	bfi	r3, r2, #24, #8
    18e0:	lsr	r1, r2, #24
    18e4:	bfi	r3, r1, #0, #8
    18e8:	ubfx	r1, r2, #8, #8
    18ec:	bfi	r3, r1, #16, #8
    18f0:	ubfx	r2, r2, #16, #8
    18f4:	bfi	r3, r2, #8, #8
    18f8:	str	r3, [r0]
    18fc:	mov	r0, r3
    1900:	bx	lr

00001904 <Mat_int16Swap>:
    1904:	ldrsh	r2, [r0]
    1908:	mov	r3, #0
    190c:	bfi	r3, r2, #8, #8
    1910:	asr	r2, r2, #8
    1914:	bfi	r3, r2, #0, #8
    1918:	strh	r3, [r0]
    191c:	sxth	r0, r3
    1920:	bx	lr

00001924 <Mat_uint16Swap>:
    1924:	ldrh	r2, [r0]
    1928:	mov	r3, #0
    192c:	bfi	r3, r2, #8, #8
    1930:	lsr	r2, r2, #8
    1934:	bfi	r3, r2, #0, #8
    1938:	strh	r3, [r0]
    193c:	uxth	r0, r3
    1940:	bx	lr

00001944 <Mat_floatSwap>:
    1944:	ldr	r2, [r0]
    1948:	mov	r3, #0
    194c:	bfi	r3, r2, #24, #8
    1950:	lsr	r1, r2, #24
    1954:	bfi	r3, r1, #0, #8
    1958:	ubfx	r1, r2, #8, #8
    195c:	bfi	r3, r1, #16, #8
    1960:	ubfx	r2, r2, #16, #8
    1964:	bfi	r3, r2, #8, #8
    1968:	vmov	s0, r3
    196c:	str	r3, [r0]
    1970:	bx	lr

00001974 <Mat_doubleSwap>:
    1974:	push	{lr}		; (str lr, [sp, #-4]!)
    1978:	ldr	r1, [r0]
    197c:	mov	r2, #0
    1980:	mov	r3, #0
    1984:	bfi	r3, r1, #24, #8
    1988:	ldr	ip, [r0, #4]
    198c:	lsr	lr, ip, #24
    1990:	bfi	r2, lr, #0, #8
    1994:	ubfx	lr, r1, #8, #8
    1998:	bfi	r3, lr, #16, #8
    199c:	ubfx	lr, ip, #16, #8
    19a0:	bfi	r2, lr, #8, #8
    19a4:	ubfx	lr, r1, #16, #8
    19a8:	bfi	r3, lr, #8, #8
    19ac:	ubfx	lr, ip, #8, #8
    19b0:	bfi	r2, lr, #16, #8
    19b4:	lsr	r1, r1, #24
    19b8:	bfi	r3, r1, #0, #8
    19bc:	bfi	r2, ip, #24, #8
    19c0:	vmov	d0, r2, r3
    19c4:	vstr	d0, [r0]
    19c8:	pop	{pc}		; (ldr pc, [sp], #4)

000019cc <mat_logfunc>:
    19cc:	str	r4, [sp, #-8]!
    19d0:	str	lr, [sp, #4]
    19d4:	ldr	ip, [pc, #508]	; 1bd8 <mat_logfunc+0x20c>
    19d8:	add	ip, pc, ip
    19dc:	ldr	lr, [pc, #504]	; 1bdc <mat_logfunc+0x210>
    19e0:	add	lr, pc, lr
    19e4:	ldr	r2, [lr]
    19e8:	cmp	r2, #0
    19ec:	beq	1ae8 <mat_logfunc+0x11c>
    19f0:	tst	r0, #2
    19f4:	bne	1a40 <mat_logfunc+0x74>
    19f8:	tst	r0, #1
    19fc:	bne	1a70 <mat_logfunc+0xa4>
    1a00:	tst	r0, #4
    1a04:	bne	1a98 <mat_logfunc+0xcc>
    1a08:	tst	r0, #16
    1a0c:	bne	1ac0 <mat_logfunc+0xf4>
    1a10:	tst	r0, #8
    1a14:	beq	1a64 <mat_logfunc+0x98>
    1a18:	ldr	r3, [pc, #448]	; 1be0 <mat_logfunc+0x214>
    1a1c:	ldr	r4, [ip, r3]
    1a20:	mov	r2, r1
    1a24:	ldr	r1, [pc, #440]	; 1be4 <mat_logfunc+0x218>
    1a28:	add	r1, pc, r1
    1a2c:	ldr	r0, [r4]
    1a30:	bl	15d4 <fprintf@plt>
    1a34:	ldr	r0, [r4]
    1a38:	bl	146c <fflush@plt>
    1a3c:	b	1a64 <mat_logfunc+0x98>
    1a40:	ldr	r3, [pc, #416]	; 1be8 <mat_logfunc+0x21c>
    1a44:	ldr	r4, [ip, r3]
    1a48:	mov	r3, r1
    1a4c:	ldr	r1, [pc, #408]	; 1bec <mat_logfunc+0x220>
    1a50:	add	r1, pc, r1
    1a54:	ldr	r0, [r4]
    1a58:	bl	15d4 <fprintf@plt>
    1a5c:	ldr	r0, [r4]
    1a60:	bl	146c <fflush@plt>
    1a64:	ldr	r4, [sp]
    1a68:	add	sp, sp, #4
    1a6c:	pop	{pc}		; (ldr pc, [sp], #4)
    1a70:	ldr	r3, [pc, #368]	; 1be8 <mat_logfunc+0x21c>
    1a74:	ldr	r4, [ip, r3]
    1a78:	mov	r3, r1
    1a7c:	ldr	r1, [pc, #364]	; 1bf0 <mat_logfunc+0x224>
    1a80:	add	r1, pc, r1
    1a84:	ldr	r0, [r4]
    1a88:	bl	15d4 <fprintf@plt>
    1a8c:	ldr	r0, [r4]
    1a90:	bl	146c <fflush@plt>
    1a94:	bl	16a0 <abort@plt>
    1a98:	ldr	r3, [pc, #328]	; 1be8 <mat_logfunc+0x21c>
    1a9c:	ldr	r4, [ip, r3]
    1aa0:	mov	r3, r1
    1aa4:	ldr	r1, [pc, #328]	; 1bf4 <mat_logfunc+0x228>
    1aa8:	add	r1, pc, r1
    1aac:	ldr	r0, [r4]
    1ab0:	bl	15d4 <fprintf@plt>
    1ab4:	ldr	r0, [r4]
    1ab8:	bl	146c <fflush@plt>
    1abc:	b	1a64 <mat_logfunc+0x98>
    1ac0:	ldr	r3, [pc, #288]	; 1be8 <mat_logfunc+0x21c>
    1ac4:	ldr	r4, [ip, r3]
    1ac8:	mov	r3, r1
    1acc:	ldr	r1, [pc, #292]	; 1bf8 <mat_logfunc+0x22c>
    1ad0:	add	r1, pc, r1
    1ad4:	ldr	r0, [r4]
    1ad8:	bl	15d4 <fprintf@plt>
    1adc:	ldr	r0, [r4]
    1ae0:	bl	146c <fflush@plt>
    1ae4:	b	1a64 <mat_logfunc+0x98>
    1ae8:	tst	r0, #2
    1aec:	bne	1b38 <mat_logfunc+0x16c>
    1af0:	tst	r0, #1
    1af4:	bne	1b60 <mat_logfunc+0x194>
    1af8:	tst	r0, #4
    1afc:	bne	1b88 <mat_logfunc+0x1bc>
    1b00:	tst	r0, #16
    1b04:	bne	1bb0 <mat_logfunc+0x1e4>
    1b08:	tst	r0, #8
    1b0c:	beq	1a64 <mat_logfunc+0x98>
    1b10:	ldr	r3, [pc, #200]	; 1be0 <mat_logfunc+0x214>
    1b14:	ldr	r4, [ip, r3]
    1b18:	mov	r2, r1
    1b1c:	ldr	r1, [pc, #216]	; 1bfc <mat_logfunc+0x230>
    1b20:	add	r1, pc, r1
    1b24:	ldr	r0, [r4]
    1b28:	bl	15d4 <fprintf@plt>
    1b2c:	ldr	r0, [r4]
    1b30:	bl	146c <fflush@plt>
    1b34:	b	1a64 <mat_logfunc+0x98>
    1b38:	ldr	r3, [pc, #168]	; 1be8 <mat_logfunc+0x21c>
    1b3c:	ldr	r4, [ip, r3]
    1b40:	mov	r2, r1
    1b44:	ldr	r1, [pc, #180]	; 1c00 <mat_logfunc+0x234>
    1b48:	add	r1, pc, r1
    1b4c:	ldr	r0, [r4]
    1b50:	bl	15d4 <fprintf@plt>
    1b54:	ldr	r0, [r4]
    1b58:	bl	146c <fflush@plt>
    1b5c:	b	1a64 <mat_logfunc+0x98>
    1b60:	ldr	r3, [pc, #128]	; 1be8 <mat_logfunc+0x21c>
    1b64:	ldr	r4, [ip, r3]
    1b68:	mov	r2, r1
    1b6c:	ldr	r1, [pc, #144]	; 1c04 <mat_logfunc+0x238>
    1b70:	add	r1, pc, r1
    1b74:	ldr	r0, [r4]
    1b78:	bl	15d4 <fprintf@plt>
    1b7c:	ldr	r0, [r4]
    1b80:	bl	146c <fflush@plt>
    1b84:	bl	16a0 <abort@plt>
    1b88:	ldr	r3, [pc, #88]	; 1be8 <mat_logfunc+0x21c>
    1b8c:	ldr	r4, [ip, r3]
    1b90:	mov	r2, r1
    1b94:	ldr	r1, [pc, #108]	; 1c08 <mat_logfunc+0x23c>
    1b98:	add	r1, pc, r1
    1b9c:	ldr	r0, [r4]
    1ba0:	bl	15d4 <fprintf@plt>
    1ba4:	ldr	r0, [r4]
    1ba8:	bl	146c <fflush@plt>
    1bac:	b	1a64 <mat_logfunc+0x98>
    1bb0:	ldr	r3, [pc, #48]	; 1be8 <mat_logfunc+0x21c>
    1bb4:	ldr	r4, [ip, r3]
    1bb8:	mov	r2, r1
    1bbc:	ldr	r1, [pc, #72]	; 1c0c <mat_logfunc+0x240>
    1bc0:	add	r1, pc, r1
    1bc4:	ldr	r0, [r4]
    1bc8:	bl	15d4 <fprintf@plt>
    1bcc:	ldr	r0, [r4]
    1bd0:	bl	146c <fflush@plt>
    1bd4:	b	1a64 <mat_logfunc+0x98>
    1bd8:	.word	0x0005f620
    1bdc:	.word	0x0005f7d8
    1be0:	.word	0x00000104
    1be4:	.word	0x0004e194
    1be8:	.word	0x000000fc
    1bec:	.word	0x0004d698
    1bf0:	.word	0x0004d668
    1bf4:	.word	0x0004d64c
    1bf8:	.word	0x0004d630
    1bfc:	.word	0x0004e09c
    1c00:	.word	0x0004d5c4
    1c04:	.word	0x0004d59c
    1c08:	.word	0x0004d580
    1c0c:	.word	0x0004d564

00001c10 <strdup_vprintf>:
    1c10:	strd	r4, [sp, #-20]!	; 0xffffffec
    1c14:	strd	r6, [sp, #8]
    1c18:	str	lr, [sp, #16]
    1c1c:	sub	sp, sp, #12
    1c20:	mov	r6, r0
    1c24:	mov	r4, r1
    1c28:	str	r1, [sp, #4]
    1c2c:	mov	r3, r1
    1c30:	mov	r2, r0
    1c34:	mov	r1, #0
    1c38:	mov	r0, r1
    1c3c:	bl	1664 <vsnprintf@plt>
    1c40:	add	r7, r0, #1
    1c44:	add	r0, r0, #2
    1c48:	bl	1544 <malloc@plt>
    1c4c:	subs	r5, r0, #0
    1c50:	beq	1c68 <strdup_vprintf+0x58>
    1c54:	mov	r3, r4
    1c58:	mov	r2, r6
    1c5c:	mov	r1, r7
    1c60:	mov	r0, r5
    1c64:	bl	1664 <vsnprintf@plt>
    1c68:	mov	r0, r5
    1c6c:	add	sp, sp, #12
    1c70:	ldrd	r4, [sp]
    1c74:	ldrd	r6, [sp, #8]
    1c78:	add	sp, sp, #16
    1c7c:	pop	{pc}		; (ldr pc, [sp], #4)

00001c80 <mat_log>:
    1c80:	ldr	r3, [pc, #96]	; 1ce8 <mat_log+0x68>
    1c84:	add	r3, pc, r3
    1c88:	ldr	r3, [r3, #4]
    1c8c:	cmp	r3, #0
    1c90:	bxeq	lr
    1c94:	strd	r4, [sp, #-16]!
    1c98:	str	r6, [sp, #8]
    1c9c:	str	lr, [sp, #12]
    1ca0:	mov	r3, r1
    1ca4:	mov	r4, r0
    1ca8:	mov	r1, r2
    1cac:	mov	r0, r3
    1cb0:	bl	1c10 <strdup_vprintf>
    1cb4:	mov	r5, r0
    1cb8:	ldr	r3, [pc, #44]	; 1cec <mat_log+0x6c>
    1cbc:	add	r3, pc, r3
    1cc0:	ldr	r3, [r3, #4]
    1cc4:	mov	r1, r0
    1cc8:	mov	r0, r4
    1ccc:	blx	r3
    1cd0:	mov	r0, r5
    1cd4:	bl	1478 <free@plt>
    1cd8:	ldrd	r4, [sp]
    1cdc:	ldr	r6, [sp, #8]
    1ce0:	add	sp, sp, #12
    1ce4:	pop	{pc}		; (ldr pc, [sp], #4)
    1ce8:	.word	0x0005f534
    1cec:	.word	0x0005f4fc

00001cf0 <strdup_printf>:
    1cf0:	push	{r0, r1, r2, r3}
    1cf4:	push	{lr}		; (str lr, [sp, #-4]!)
    1cf8:	sub	sp, sp, #12
    1cfc:	add	r1, sp, #20
    1d00:	str	r1, [sp, #4]
    1d04:	ldr	r0, [sp, #16]
    1d08:	bl	1c10 <strdup_vprintf>
    1d0c:	add	sp, sp, #12
    1d10:	pop	{lr}		; (ldr lr, [sp], #4)
    1d14:	add	sp, sp, #16
    1d18:	bx	lr

00001d1c <Mat_SetVerbose>:
    1d1c:	ldr	r3, [pc, #16]	; 1d34 <Mat_SetVerbose+0x18>
    1d20:	add	r3, pc, r3
    1d24:	str	r0, [r3, #8]
    1d28:	str	r1, [r3, #12]
    1d2c:	mov	r0, #0
    1d30:	bx	lr
    1d34:	.word	0x0005f498

00001d38 <Mat_SetDebug>:
    1d38:	ldr	r3, [pc, #12]	; 1d4c <Mat_SetDebug+0x14>
    1d3c:	add	r3, pc, r3
    1d40:	str	r0, [r3, #16]
    1d44:	mov	r0, #0
    1d48:	bx	lr
    1d4c:	.word	0x0005f47c

00001d50 <Mat_Message>:
    1d50:	push	{r0, r1, r2, r3}
    1d54:	push	{lr}		; (str lr, [sp, #-4]!)
    1d58:	sub	sp, sp, #12
    1d5c:	ldr	r3, [pc, #72]	; 1dac <Mat_Message+0x5c>
    1d60:	add	r3, pc, r3
    1d64:	ldr	r3, [r3, #12]
    1d68:	cmp	r3, #0
    1d6c:	bne	1d98 <Mat_Message+0x48>
    1d70:	ldr	r3, [pc, #56]	; 1db0 <Mat_Message+0x60>
    1d74:	add	r3, pc, r3
    1d78:	ldr	r3, [r3, #4]
    1d7c:	cmp	r3, #0
    1d80:	beq	1d98 <Mat_Message+0x48>
    1d84:	add	r2, sp, #20
    1d88:	str	r2, [sp, #4]
    1d8c:	ldr	r1, [sp, #16]
    1d90:	mov	r0, #8
    1d94:	bl	1c80 <mat_log>
    1d98:	mov	r0, #0
    1d9c:	add	sp, sp, #12
    1da0:	pop	{lr}		; (ldr lr, [sp], #4)
    1da4:	add	sp, sp, #16
    1da8:	bx	lr
    1dac:	.word	0x0005f458
    1db0:	.word	0x0005f444

00001db4 <Mat_DebugMessage>:
    1db4:	push	{r1, r2, r3}
    1db8:	push	{lr}		; (str lr, [sp, #-4]!)
    1dbc:	sub	sp, sp, #8
    1dc0:	ldr	r3, [pc, #76]	; 1e14 <Mat_DebugMessage+0x60>
    1dc4:	add	r3, pc, r3
    1dc8:	ldr	r3, [r3, #12]
    1dcc:	cmp	r3, #0
    1dd0:	bne	1de8 <Mat_DebugMessage+0x34>
    1dd4:	ldr	r3, [pc, #60]	; 1e18 <Mat_DebugMessage+0x64>
    1dd8:	add	r3, pc, r3
    1ddc:	ldr	r3, [r3, #16]
    1de0:	cmp	r3, r0
    1de4:	bge	1dfc <Mat_DebugMessage+0x48>
    1de8:	mov	r0, #0
    1dec:	add	sp, sp, #8
    1df0:	pop	{lr}		; (ldr lr, [sp], #4)
    1df4:	add	sp, sp, #12
    1df8:	bx	lr
    1dfc:	add	r2, sp, #16
    1e00:	str	r2, [sp, #4]
    1e04:	ldr	r1, [sp, #12]
    1e08:	mov	r0, #16
    1e0c:	bl	1c80 <mat_log>
    1e10:	b	1de8 <Mat_DebugMessage+0x34>
    1e14:	.word	0x0005f3f4
    1e18:	.word	0x0005f3e0

00001e1c <Mat_VerbMessage>:
    1e1c:	push	{r1, r2, r3}
    1e20:	push	{lr}		; (str lr, [sp, #-4]!)
    1e24:	sub	sp, sp, #8
    1e28:	ldr	r3, [pc, #76]	; 1e7c <Mat_VerbMessage+0x60>
    1e2c:	add	r3, pc, r3
    1e30:	ldr	r3, [r3, #12]
    1e34:	cmp	r3, #0
    1e38:	bne	1e50 <Mat_VerbMessage+0x34>
    1e3c:	ldr	r3, [pc, #60]	; 1e80 <Mat_VerbMessage+0x64>
    1e40:	add	r3, pc, r3
    1e44:	ldr	r3, [r3, #8]
    1e48:	cmp	r3, r0
    1e4c:	bge	1e64 <Mat_VerbMessage+0x48>
    1e50:	mov	r0, #0
    1e54:	add	sp, sp, #8
    1e58:	pop	{lr}		; (ldr lr, [sp], #4)
    1e5c:	add	sp, sp, #12
    1e60:	bx	lr
    1e64:	add	r2, sp, #16
    1e68:	str	r2, [sp, #4]
    1e6c:	ldr	r1, [sp, #12]
    1e70:	mov	r0, #8
    1e74:	bl	1c80 <mat_log>
    1e78:	b	1e50 <Mat_VerbMessage+0x34>
    1e7c:	.word	0x0005f38c
    1e80:	.word	0x0005f378

00001e84 <Mat_Critical>:
    1e84:	push	{r0, r1, r2, r3}
    1e88:	push	{lr}		; (str lr, [sp, #-4]!)
    1e8c:	sub	sp, sp, #12
    1e90:	add	r2, sp, #20
    1e94:	str	r2, [sp, #4]
    1e98:	ldr	r1, [sp, #16]
    1e9c:	mov	r0, #2
    1ea0:	bl	1c80 <mat_log>
    1ea4:	add	sp, sp, #12
    1ea8:	pop	{lr}		; (ldr lr, [sp], #4)
    1eac:	add	sp, sp, #16
    1eb0:	bx	lr

00001eb4 <Mat_Error>:
    1eb4:	push	{r0, r1, r2, r3}
    1eb8:	push	{lr}		; (str lr, [sp, #-4]!)
    1ebc:	sub	sp, sp, #12
    1ec0:	add	r2, sp, #20
    1ec4:	str	r2, [sp, #4]
    1ec8:	ldr	r1, [sp, #16]
    1ecc:	mov	r0, #1
    1ed0:	bl	1c80 <mat_log>
    1ed4:	bl	16a0 <abort@plt>

00001ed8 <Mat_Help>:
    1ed8:	str	r4, [sp, #-8]!
    1edc:	str	lr, [sp, #4]
    1ee0:	mov	r4, r0
    1ee4:	ldr	r0, [r0]
    1ee8:	cmp	r0, #0
    1eec:	beq	1f00 <Mat_Help+0x28>
    1ef0:	bl	1538 <puts@plt>
    1ef4:	ldr	r0, [r4, #4]!
    1ef8:	cmp	r0, #0
    1efc:	bne	1ef0 <Mat_Help+0x18>
    1f00:	mov	r0, #0
    1f04:	bl	1574 <exit@plt>

00001f08 <Mat_LogClose>:
    1f08:	ldr	r3, [pc, #16]	; 1f20 <Mat_LogClose+0x18>
    1f0c:	add	r3, pc, r3
    1f10:	mov	r2, #0
    1f14:	str	r2, [r3, #4]
    1f18:	mov	r0, #1
    1f1c:	bx	lr
    1f20:	.word	0x0005f2ac

00001f24 <Mat_LogInit>:
    1f24:	ldr	r3, [pc, #28]	; 1f48 <Mat_LogInit+0x24>
    1f28:	add	r3, pc, r3
    1f2c:	ldr	r2, [pc, #24]	; 1f4c <Mat_LogInit+0x28>
    1f30:	add	r2, pc, r2
    1f34:	str	r2, [r3, #4]
    1f38:	mov	r0, #0
    1f3c:	str	r0, [r3, #8]
    1f40:	str	r0, [r3, #12]
    1f44:	bx	lr
    1f48:	.word	0x0005f290
    1f4c:	.word	0xfffffa94

00001f50 <Mat_LogInitFunc>:
    1f50:	ldr	r3, [pc, #24]	; 1f70 <Mat_LogInitFunc+0x20>
    1f54:	add	r3, pc, r3
    1f58:	str	r1, [r3, #4]
    1f5c:	str	r0, [r3]
    1f60:	mov	r0, #0
    1f64:	str	r0, [r3, #8]
    1f68:	str	r0, [r3, #12]
    1f6c:	bx	lr
    1f70:	.word	0x0005f264

00001f74 <Mat_Warning>:
    1f74:	push	{r0, r1, r2, r3}
    1f78:	push	{lr}		; (str lr, [sp, #-4]!)
    1f7c:	sub	sp, sp, #12
    1f80:	add	r2, sp, #20
    1f84:	str	r2, [sp, #4]
    1f88:	ldr	r1, [sp, #16]
    1f8c:	mov	r0, #4
    1f90:	bl	1c80 <mat_log>
    1f94:	add	sp, sp, #12
    1f98:	pop	{lr}		; (ldr lr, [sp], #4)
    1f9c:	add	sp, sp, #16
    1fa0:	bx	lr

00001fa4 <Mat_SizeOf>:
    1fa4:	sub	r3, r0, #1
    1fa8:	cmp	r3, #17
    1fac:	addls	pc, pc, r3, lsl #2
    1fb0:	b	202c <Mat_SizeOf+0x88>
    1fb4:	b	2038 <Mat_SizeOf+0x94>
    1fb8:	b	2014 <Mat_SizeOf+0x70>
    1fbc:	b	2004 <Mat_SizeOf+0x60>
    1fc0:	b	200c <Mat_SizeOf+0x68>
    1fc4:	b	1ffc <Mat_SizeOf+0x58>
    1fc8:	b	1ffc <Mat_SizeOf+0x58>
    1fcc:	b	1ffc <Mat_SizeOf+0x58>
    1fd0:	b	202c <Mat_SizeOf+0x88>
    1fd4:	b	2034 <Mat_SizeOf+0x90>
    1fd8:	b	202c <Mat_SizeOf+0x88>
    1fdc:	b	202c <Mat_SizeOf+0x88>
    1fe0:	b	2034 <Mat_SizeOf+0x90>
    1fe4:	b	2034 <Mat_SizeOf+0x90>
    1fe8:	b	202c <Mat_SizeOf+0x88>
    1fec:	b	202c <Mat_SizeOf+0x88>
    1ff0:	b	201c <Mat_SizeOf+0x78>
    1ff4:	b	2024 <Mat_SizeOf+0x80>
    1ff8:	b	1ffc <Mat_SizeOf+0x58>
    1ffc:	mov	r0, #4
    2000:	bx	lr
    2004:	mov	r0, #2
    2008:	bx	lr
    200c:	mov	r0, #2
    2010:	bx	lr
    2014:	mov	r0, #1
    2018:	bx	lr
    201c:	mov	r0, #1
    2020:	bx	lr
    2024:	mov	r0, #2
    2028:	bx	lr
    202c:	mov	r0, #0
    2030:	bx	lr
    2034:	mov	r0, #8
    2038:	bx	lr

0000203c <InflateSkip>:
    203c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2040:	strd	r6, [sp, #8]
    2044:	strd	r8, [sp, #16]
    2048:	strd	sl, [sp, #24]
    204c:	str	lr, [sp, #32]
    2050:	sub	sp, sp, #1024	; 0x400
    2054:	sub	sp, sp, #4
    2058:	subs	r7, r2, #0
    205c:	movle	r8, #0
    2060:	ble	2190 <InflateSkip+0x154>
    2064:	mov	r4, r1
    2068:	mov	r9, r0
    206c:	cmp	r7, #512	; 0x200
    2070:	movlt	r5, r7
    2074:	movge	r5, #512	; 0x200
    2078:	ldr	r3, [r1, #4]
    207c:	cmp	r3, #0
    2080:	movne	r8, #0
    2084:	beq	20f4 <InflateSkip+0xb8>
    2088:	str	r5, [r4, #16]
    208c:	mov	r3, sp
    2090:	str	r3, [r4, #12]
    2094:	mov	r1, #3
    2098:	mov	r0, r4
    209c:	bl	1460 <inflate@plt>
    20a0:	mov	r6, r0
    20a4:	cmp	r0, #1
    20a8:	beq	2190 <InflateSkip+0x154>
    20ac:	cmp	r0, #0
    20b0:	bne	211c <InflateSkip+0xe0>
    20b4:	ldr	r3, [r4, #16]
    20b8:	cmp	r3, #0
    20bc:	bne	20e8 <InflateSkip+0xac>
    20c0:	sub	r3, r7, r5
    20c4:	cmp	r3, #512	; 0x200
    20c8:	movge	r3, #512	; 0x200
    20cc:	str	r3, [r4, #16]
    20d0:	mov	r2, sp
    20d4:	str	r2, [r4, #12]
    20d8:	cmp	r7, r5
    20dc:	ble	2184 <InflateSkip+0x148>
    20e0:	mov	r6, r5
    20e4:	mov	r5, r3
    20e8:	add	fp, sp, #512	; 0x200
    20ec:	mov	sl, #3
    20f0:	b	21bc <InflateSkip+0x180>
    20f4:	add	r0, sp, #512	; 0x200
    20f8:	str	r0, [r1]
    20fc:	ldr	r3, [r9]
    2100:	mov	r2, r5
    2104:	mov	r1, #1
    2108:	bl	1520 <fread@plt>
    210c:	ldr	r8, [r4, #4]
    2110:	add	r8, r0, r8
    2114:	str	r8, [r4, #4]
    2118:	b	2088 <InflateSkip+0x4c>
    211c:	cmp	r0, #2
    2120:	mvneq	r0, #2
    2124:	bl	14f0 <zError@plt>
    2128:	mov	r1, r0
    212c:	ldr	r0, [pc, #256]	; 2234 <InflateSkip+0x1f8>
    2130:	add	r0, pc, r0
    2134:	bl	161c <Mat_Critical@plt>
    2138:	b	2190 <InflateSkip+0x154>
    213c:	str	fp, [r4]
    2140:	ldr	r3, [r9]
    2144:	mov	r2, r5
    2148:	mov	r1, #1
    214c:	mov	r0, fp
    2150:	bl	1520 <fread@plt>
    2154:	ldr	r3, [r4, #4]
    2158:	add	r0, r0, r3
    215c:	str	r0, [r4, #4]
    2160:	add	r8, r8, r0
    2164:	b	21c8 <InflateSkip+0x18c>
    2168:	cmp	r0, #2
    216c:	mvneq	r0, #2
    2170:	bl	14f0 <zError@plt>
    2174:	mov	r1, r0
    2178:	ldr	r0, [pc, #184]	; 2238 <InflateSkip+0x1fc>
    217c:	add	r0, pc, r0
    2180:	bl	161c <Mat_Critical@plt>
    2184:	ldr	r1, [r4, #4]
    2188:	cmp	r1, #0
    218c:	bne	2210 <InflateSkip+0x1d4>
    2190:	mov	r0, r8
    2194:	add	sp, sp, #1024	; 0x400
    2198:	add	sp, sp, #4
    219c:	ldrd	r4, [sp]
    21a0:	ldrd	r6, [sp, #8]
    21a4:	ldrd	r8, [sp, #16]
    21a8:	ldrd	sl, [sp, #24]
    21ac:	add	sp, sp, #32
    21b0:	pop	{pc}		; (ldr pc, [sp], #4)
    21b4:	cmp	r7, r6
    21b8:	ble	2184 <InflateSkip+0x148>
    21bc:	ldr	r3, [r4, #4]
    21c0:	cmp	r3, #0
    21c4:	beq	213c <InflateSkip+0x100>
    21c8:	mov	r1, sl
    21cc:	mov	r0, r4
    21d0:	bl	1460 <inflate@plt>
    21d4:	cmp	r0, #1
    21d8:	beq	2184 <InflateSkip+0x148>
    21dc:	cmp	r0, #0
    21e0:	bne	2168 <InflateSkip+0x12c>
    21e4:	ldr	r3, [r4, #16]
    21e8:	cmp	r3, #0
    21ec:	bne	21b4 <InflateSkip+0x178>
    21f0:	add	r6, r6, r5
    21f4:	sub	r5, r7, r6
    21f8:	cmp	r5, #512	; 0x200
    21fc:	movge	r5, #512	; 0x200
    2200:	str	r5, [r4, #16]
    2204:	mov	r3, sp
    2208:	str	r3, [r4, #12]
    220c:	b	21b4 <InflateSkip+0x178>
    2210:	mov	r2, #1
    2214:	rsb	r1, r1, #0
    2218:	ldr	r0, [r9]
    221c:	bl	1694 <fseek@plt>
    2220:	ldr	r3, [r4, #4]
    2224:	sub	r8, r8, r3
    2228:	mov	r3, #0
    222c:	str	r3, [r4, #4]
    2230:	b	2190 <InflateSkip+0x154>
    2234:	.word	0x0004d000
    2238:	.word	0x0004cfb4

0000223c <InflateSkip2>:
    223c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2240:	strd	r6, [sp, #8]
    2244:	strd	r8, [sp, #16]
    2248:	strd	sl, [sp, #24]
    224c:	str	lr, [sp, #32]
    2250:	sub	sp, sp, #68	; 0x44
    2254:	mov	fp, r0
    2258:	mov	r4, r1
    225c:	mov	r7, r2
    2260:	ldr	r3, [r1, #52]	; 0x34
    2264:	ldr	r3, [r3, #12]
    2268:	ldr	r2, [r3, #4]
    226c:	cmp	r2, #0
    2270:	movne	r9, #0
    2274:	beq	22f4 <InflateSkip2+0xb8>
    2278:	ldr	r3, [r4, #52]	; 0x34
    227c:	ldr	r3, [r3, #12]
    2280:	mov	r2, #1
    2284:	str	r2, [r3, #16]
    2288:	ldr	r3, [r4, #52]	; 0x34
    228c:	ldr	r3, [r3, #12]
    2290:	mov	r2, sp
    2294:	str	r2, [r3, #12]
    2298:	ldr	r3, [r4, #52]	; 0x34
    229c:	mov	r1, #0
    22a0:	ldr	r0, [r3, #12]
    22a4:	bl	1460 <inflate@plt>
    22a8:	subs	r5, r0, #0
    22ac:	bne	2320 <InflateSkip2+0xe4>
    22b0:	ldr	r3, [r4, #52]	; 0x34
    22b4:	ldr	r3, [r3, #12]
    22b8:	ldr	r2, [r3, #16]
    22bc:	cmp	r2, #0
    22c0:	bne	22dc <InflateSkip2+0xa0>
    22c4:	mov	r2, #1
    22c8:	str	r2, [r3, #16]
    22cc:	ldr	r3, [r4, #52]	; 0x34
    22d0:	ldr	r3, [r3, #12]
    22d4:	mov	r2, sp
    22d8:	str	r2, [r3, #12]
    22dc:	cmp	r7, #0
    22e0:	ble	2420 <InflateSkip2+0x1e4>
    22e4:	mov	r6, #1
    22e8:	add	sl, sp, #32
    22ec:	mov	r8, #0
    22f0:	b	23c8 <InflateSkip2+0x18c>
    22f4:	mov	r1, #1
    22f8:	str	r1, [r3, #4]
    22fc:	ldr	r3, [r4, #52]	; 0x34
    2300:	ldr	r3, [r3, #12]
    2304:	add	r0, sp, #32
    2308:	str	r0, [r3]
    230c:	ldr	r3, [fp]
    2310:	mov	r2, r1
    2314:	bl	1520 <fread@plt>
    2318:	mov	r9, r0
    231c:	b	2278 <InflateSkip2+0x3c>
    2320:	ldr	r4, [r4, #36]	; 0x24
    2324:	cmp	r5, #2
    2328:	movne	r0, r5
    232c:	mvneq	r0, #2
    2330:	bl	14f0 <zError@plt>
    2334:	mov	r2, r0
    2338:	mov	r1, r4
    233c:	ldr	r0, [pc, #284]	; 2460 <InflateSkip2+0x224>
    2340:	add	r0, pc, r0
    2344:	bl	161c <Mat_Critical@plt>
    2348:	mov	r0, r9
    234c:	add	sp, sp, #68	; 0x44
    2350:	ldrd	r4, [sp]
    2354:	ldrd	r6, [sp, #8]
    2358:	ldrd	r8, [sp, #16]
    235c:	ldrd	sl, [sp, #24]
    2360:	add	sp, sp, #32
    2364:	pop	{pc}		; (ldr pc, [sp], #4)
    2368:	str	r6, [r3, #4]
    236c:	ldr	r3, [r4, #52]	; 0x34
    2370:	ldr	r3, [r3, #12]
    2374:	str	sl, [r3]
    2378:	ldr	r3, [fp]
    237c:	mov	r2, r6
    2380:	mov	r1, r6
    2384:	mov	r0, sl
    2388:	bl	1520 <fread@plt>
    238c:	add	r9, r9, r0
    2390:	add	r5, r5, #1
    2394:	b	23dc <InflateSkip2+0x1a0>
    2398:	ldr	r4, [r4, #36]	; 0x24
    239c:	cmp	r0, #2
    23a0:	mvneq	r0, #2
    23a4:	bl	14f0 <zError@plt>
    23a8:	mov	r2, r0
    23ac:	mov	r1, r4
    23b0:	ldr	r0, [pc, #172]	; 2464 <InflateSkip2+0x228>
    23b4:	add	r0, pc, r0
    23b8:	bl	161c <Mat_Critical@plt>
    23bc:	b	2348 <InflateSkip2+0x10c>
    23c0:	cmp	r5, r7
    23c4:	bge	2420 <InflateSkip2+0x1e4>
    23c8:	ldr	r3, [r4, #52]	; 0x34
    23cc:	ldr	r3, [r3, #12]
    23d0:	ldr	r2, [r3, #4]
    23d4:	cmp	r2, #0
    23d8:	beq	2368 <InflateSkip2+0x12c>
    23dc:	ldr	r3, [r4, #52]	; 0x34
    23e0:	mov	r1, r8
    23e4:	ldr	r0, [r3, #12]
    23e8:	bl	1460 <inflate@plt>
    23ec:	cmp	r0, #0
    23f0:	bne	2398 <InflateSkip2+0x15c>
    23f4:	ldr	r3, [r4, #52]	; 0x34
    23f8:	ldr	r3, [r3, #12]
    23fc:	ldr	r2, [r3, #16]
    2400:	cmp	r2, #0
    2404:	bne	23c0 <InflateSkip2+0x184>
    2408:	str	r6, [r3, #16]
    240c:	ldr	r3, [r4, #52]	; 0x34
    2410:	ldr	r3, [r3, #12]
    2414:	mov	r2, sp
    2418:	str	r2, [r3, #12]
    241c:	b	23c0 <InflateSkip2+0x184>
    2420:	ldr	r3, [r4, #52]	; 0x34
    2424:	ldr	r3, [r3, #12]
    2428:	ldr	r1, [r3, #4]
    242c:	cmp	r1, #0
    2430:	beq	2348 <InflateSkip2+0x10c>
    2434:	mov	r2, #1
    2438:	rsb	r1, r1, #0
    243c:	ldr	r0, [fp]
    2440:	bl	1694 <fseek@plt>
    2444:	ldr	r3, [r4, #52]	; 0x34
    2448:	ldr	r3, [r3, #12]
    244c:	ldr	r2, [r3, #4]
    2450:	sub	r9, r9, r2
    2454:	mov	r2, #0
    2458:	str	r2, [r3, #4]
    245c:	b	2348 <InflateSkip2+0x10c>
    2460:	.word	0x0004ce14
    2464:	.word	0x0004cda0

00002468 <InflateSkipData>:
    2468:	strd	r4, [sp, #-16]!
    246c:	str	r6, [sp, #8]
    2470:	str	lr, [sp, #12]
    2474:	subs	r4, r3, #0
    2478:	movle	ip, #1
    247c:	movgt	ip, #0
    2480:	cmp	r1, #0
    2484:	moveq	ip, #1
    2488:	cmp	r0, #0
    248c:	moveq	ip, #1
    2490:	cmp	ip, #0
    2494:	movne	r0, #0
    2498:	beq	24ac <InflateSkipData+0x44>
    249c:	ldrd	r4, [sp]
    24a0:	ldr	r6, [sp, #8]
    24a4:	add	sp, sp, #12
    24a8:	pop	{pc}		; (ldr pc, [sp], #4)
    24ac:	mov	r5, r1
    24b0:	mov	lr, r0
    24b4:	sub	r2, r2, #1
    24b8:	cmp	r2, #12
    24bc:	addls	pc, pc, r2, lsl #2
    24c0:	b	253c <InflateSkipData+0xd4>
    24c4:	b	252c <InflateSkipData+0xc4>
    24c8:	b	2524 <InflateSkipData+0xbc>
    24cc:	b	2514 <InflateSkipData+0xac>
    24d0:	b	251c <InflateSkipData+0xb4>
    24d4:	b	24f8 <InflateSkipData+0x90>
    24d8:	b	24f8 <InflateSkipData+0x90>
    24dc:	b	24f8 <InflateSkipData+0x90>
    24e0:	b	253c <InflateSkipData+0xd4>
    24e4:	b	2534 <InflateSkipData+0xcc>
    24e8:	b	253c <InflateSkipData+0xd4>
    24ec:	b	253c <InflateSkipData+0xd4>
    24f0:	b	2534 <InflateSkipData+0xcc>
    24f4:	b	2534 <InflateSkipData+0xcc>
    24f8:	mov	r2, #4
    24fc:	mov	r0, lr
    2500:	mov	r1, r5
    2504:	mul	r2, r4, r2
    2508:	bl	203c <InflateSkip>
    250c:	mov	r0, r4
    2510:	b	249c <InflateSkipData+0x34>
    2514:	mov	r2, #2
    2518:	b	24fc <InflateSkipData+0x94>
    251c:	mov	r2, #2
    2520:	b	24fc <InflateSkipData+0x94>
    2524:	mov	r2, #1
    2528:	b	24fc <InflateSkipData+0x94>
    252c:	mov	r2, #1
    2530:	b	24fc <InflateSkipData+0x94>
    2534:	mov	r2, #8
    2538:	b	24fc <InflateSkipData+0x94>
    253c:	mov	r0, #0
    2540:	b	249c <InflateSkipData+0x34>

00002544 <InflateVarTag>:
    2544:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2548:	strd	r6, [sp, #8]
    254c:	strd	r8, [sp, #16]
    2550:	str	sl, [sp, #24]
    2554:	str	lr, [sp, #28]
    2558:	sub	sp, sp, #32
    255c:	subs	r5, r2, #0
    2560:	moveq	r7, #0
    2564:	beq	269c <InflateVarTag+0x158>
    2568:	mov	r4, r1
    256c:	mov	r9, r0
    2570:	ldr	r3, [r1, #52]	; 0x34
    2574:	ldr	r3, [r3, #12]
    2578:	ldr	r2, [r3, #4]
    257c:	cmp	r2, #0
    2580:	movne	r7, #0
    2584:	beq	2654 <InflateVarTag+0x110>
    2588:	ldr	r3, [r4, #52]	; 0x34
    258c:	ldr	r3, [r3, #12]
    2590:	mov	r2, #8
    2594:	str	r2, [r3, #16]
    2598:	ldr	r3, [r4, #52]	; 0x34
    259c:	ldr	r3, [r3, #12]
    25a0:	str	r5, [r3, #12]
    25a4:	ldr	r3, [r4, #52]	; 0x34
    25a8:	mov	r1, #0
    25ac:	ldr	r0, [r3, #12]
    25b0:	bl	1460 <inflate@plt>
    25b4:	cmp	r0, #0
    25b8:	bne	2680 <InflateVarTag+0x13c>
    25bc:	mov	r5, #1
    25c0:	mov	r6, r5
    25c4:	mov	r8, sp
    25c8:	mov	sl, #0
    25cc:	ldr	r3, [r4, #52]	; 0x34
    25d0:	ldr	r3, [r3, #12]
    25d4:	ldr	r2, [r3, #16]
    25d8:	cmp	r2, #0
    25dc:	beq	26bc <InflateVarTag+0x178>
    25e0:	ldr	r2, [r3, #4]
    25e4:	cmp	r2, #0
    25e8:	cmpeq	r5, #1
    25ec:	bne	26bc <InflateVarTag+0x178>
    25f0:	str	r6, [r3, #4]
    25f4:	ldr	r3, [r4, #52]	; 0x34
    25f8:	ldr	r3, [r3, #12]
    25fc:	str	r8, [r3]
    2600:	ldr	r3, [r9]
    2604:	mov	r2, r6
    2608:	mov	r1, r6
    260c:	mov	r0, r8
    2610:	bl	1520 <fread@plt>
    2614:	mov	r5, r0
    2618:	add	r7, r7, r0
    261c:	ldr	r3, [r4, #52]	; 0x34
    2620:	mov	r1, sl
    2624:	ldr	r0, [r3, #12]
    2628:	bl	1460 <inflate@plt>
    262c:	cmp	r0, #0
    2630:	beq	25cc <InflateVarTag+0x88>
    2634:	cmp	r0, #2
    2638:	mvneq	r0, #2
    263c:	bl	14f0 <zError@plt>
    2640:	mov	r1, r0
    2644:	ldr	r0, [pc, #168]	; 26f4 <InflateVarTag+0x1b0>
    2648:	add	r0, pc, r0
    264c:	bl	161c <Mat_Critical@plt>
    2650:	b	269c <InflateVarTag+0x158>
    2654:	mov	r1, #1
    2658:	str	r1, [r3, #4]
    265c:	ldr	r3, [r4, #52]	; 0x34
    2660:	ldr	r3, [r3, #12]
    2664:	mov	r0, sp
    2668:	str	r0, [r3]
    266c:	ldr	r3, [r9]
    2670:	mov	r2, r1
    2674:	bl	1520 <fread@plt>
    2678:	mov	r7, r0
    267c:	b	2588 <InflateVarTag+0x44>
    2680:	cmp	r0, #2
    2684:	mvneq	r0, #2
    2688:	bl	14f0 <zError@plt>
    268c:	mov	r1, r0
    2690:	ldr	r0, [pc, #96]	; 26f8 <InflateVarTag+0x1b4>
    2694:	add	r0, pc, r0
    2698:	bl	161c <Mat_Critical@plt>
    269c:	mov	r0, r7
    26a0:	add	sp, sp, #32
    26a4:	ldrd	r4, [sp]
    26a8:	ldrd	r6, [sp, #8]
    26ac:	ldrd	r8, [sp, #16]
    26b0:	ldr	sl, [sp, #24]
    26b4:	add	sp, sp, #28
    26b8:	pop	{pc}		; (ldr pc, [sp], #4)
    26bc:	ldr	r1, [r3, #4]
    26c0:	cmp	r1, #0
    26c4:	beq	269c <InflateVarTag+0x158>
    26c8:	mov	r2, #1
    26cc:	rsb	r1, r1, #0
    26d0:	ldr	r0, [r9]
    26d4:	bl	1694 <fseek@plt>
    26d8:	ldr	r3, [r4, #52]	; 0x34
    26dc:	ldr	r3, [r3, #12]
    26e0:	ldr	r2, [r3, #4]
    26e4:	sub	r7, r7, r2
    26e8:	mov	r2, #0
    26ec:	str	r2, [r3, #4]
    26f0:	b	269c <InflateVarTag+0x158>
    26f4:	.word	0x0004cb34
    26f8:	.word	0x0004cae8

000026fc <InflateArrayFlags>:
    26fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2700:	strd	r6, [sp, #8]
    2704:	strd	r8, [sp, #16]
    2708:	str	sl, [sp, #24]
    270c:	str	lr, [sp, #28]
    2710:	sub	sp, sp, #32
    2714:	subs	r5, r2, #0
    2718:	moveq	r7, #0
    271c:	beq	2854 <InflateArrayFlags+0x158>
    2720:	mov	r4, r1
    2724:	mov	r9, r0
    2728:	ldr	r3, [r1, #52]	; 0x34
    272c:	ldr	r3, [r3, #12]
    2730:	ldr	r2, [r3, #4]
    2734:	cmp	r2, #0
    2738:	movne	r7, #0
    273c:	beq	280c <InflateArrayFlags+0x110>
    2740:	ldr	r3, [r4, #52]	; 0x34
    2744:	ldr	r3, [r3, #12]
    2748:	mov	r2, #16
    274c:	str	r2, [r3, #16]
    2750:	ldr	r3, [r4, #52]	; 0x34
    2754:	ldr	r3, [r3, #12]
    2758:	str	r5, [r3, #12]
    275c:	ldr	r3, [r4, #52]	; 0x34
    2760:	mov	r1, #0
    2764:	ldr	r0, [r3, #12]
    2768:	bl	1460 <inflate@plt>
    276c:	cmp	r0, #0
    2770:	bne	2838 <InflateArrayFlags+0x13c>
    2774:	mov	r5, #1
    2778:	mov	r6, r5
    277c:	mov	r8, sp
    2780:	mov	sl, #0
    2784:	ldr	r3, [r4, #52]	; 0x34
    2788:	ldr	r3, [r3, #12]
    278c:	ldr	r2, [r3, #16]
    2790:	cmp	r2, #0
    2794:	beq	2874 <InflateArrayFlags+0x178>
    2798:	ldr	r2, [r3, #4]
    279c:	cmp	r2, #0
    27a0:	cmpeq	r5, #1
    27a4:	bne	2874 <InflateArrayFlags+0x178>
    27a8:	str	r6, [r3, #4]
    27ac:	ldr	r3, [r4, #52]	; 0x34
    27b0:	ldr	r3, [r3, #12]
    27b4:	str	r8, [r3]
    27b8:	ldr	r3, [r9]
    27bc:	mov	r2, r6
    27c0:	mov	r1, r6
    27c4:	mov	r0, r8
    27c8:	bl	1520 <fread@plt>
    27cc:	mov	r5, r0
    27d0:	add	r7, r7, r0
    27d4:	ldr	r3, [r4, #52]	; 0x34
    27d8:	mov	r1, sl
    27dc:	ldr	r0, [r3, #12]
    27e0:	bl	1460 <inflate@plt>
    27e4:	cmp	r0, #0
    27e8:	beq	2784 <InflateArrayFlags+0x88>
    27ec:	cmp	r0, #2
    27f0:	mvneq	r0, #2
    27f4:	bl	14f0 <zError@plt>
    27f8:	mov	r1, r0
    27fc:	ldr	r0, [pc, #168]	; 28ac <InflateArrayFlags+0x1b0>
    2800:	add	r0, pc, r0
    2804:	bl	161c <Mat_Critical@plt>
    2808:	b	2854 <InflateArrayFlags+0x158>
    280c:	mov	r1, #1
    2810:	str	r1, [r3, #4]
    2814:	ldr	r3, [r4, #52]	; 0x34
    2818:	ldr	r3, [r3, #12]
    281c:	mov	r0, sp
    2820:	str	r0, [r3]
    2824:	ldr	r3, [r9]
    2828:	mov	r2, r1
    282c:	bl	1520 <fread@plt>
    2830:	mov	r7, r0
    2834:	b	2740 <InflateArrayFlags+0x44>
    2838:	cmp	r0, #2
    283c:	mvneq	r0, #2
    2840:	bl	14f0 <zError@plt>
    2844:	mov	r1, r0
    2848:	ldr	r0, [pc, #96]	; 28b0 <InflateArrayFlags+0x1b4>
    284c:	add	r0, pc, r0
    2850:	bl	161c <Mat_Critical@plt>
    2854:	mov	r0, r7
    2858:	add	sp, sp, #32
    285c:	ldrd	r4, [sp]
    2860:	ldrd	r6, [sp, #8]
    2864:	ldrd	r8, [sp, #16]
    2868:	ldr	sl, [sp, #24]
    286c:	add	sp, sp, #28
    2870:	pop	{pc}		; (ldr pc, [sp], #4)
    2874:	ldr	r1, [r3, #4]
    2878:	cmp	r1, #0
    287c:	beq	2854 <InflateArrayFlags+0x158>
    2880:	mov	r2, #1
    2884:	rsb	r1, r1, #0
    2888:	ldr	r0, [r9]
    288c:	bl	1694 <fseek@plt>
    2890:	ldr	r3, [r4, #52]	; 0x34
    2894:	ldr	r3, [r3, #12]
    2898:	ldr	r2, [r3, #4]
    289c:	sub	r7, r7, r2
    28a0:	mov	r2, #0
    28a4:	str	r2, [r3, #4]
    28a8:	b	2854 <InflateArrayFlags+0x158>
    28ac:	.word	0x0004c9a0
    28b0:	.word	0x0004c954

000028b4 <InflateRankDims>:
    28b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    28b8:	strd	r6, [sp, #8]
    28bc:	strd	r8, [sp, #16]
    28c0:	strd	sl, [sp, #24]
    28c4:	str	lr, [sp, #32]
    28c8:	sub	sp, sp, #52	; 0x34
    28cc:	subs	sl, r2, #0
    28d0:	moveq	r6, #0
    28d4:	beq	2a10 <InflateRankDims+0x15c>
    28d8:	str	r3, [sp, #4]
    28dc:	mov	r4, r1
    28e0:	mov	r9, r0
    28e4:	ldr	r3, [r1, #52]	; 0x34
    28e8:	ldr	r3, [r3, #12]
    28ec:	ldr	r2, [r3, #4]
    28f0:	cmp	r2, #0
    28f4:	movne	r6, #0
    28f8:	beq	29c4 <InflateRankDims+0x110>
    28fc:	ldr	r3, [r4, #52]	; 0x34
    2900:	ldr	r3, [r3, #12]
    2904:	mov	r2, #8
    2908:	str	r2, [r3, #16]
    290c:	ldr	r3, [r4, #52]	; 0x34
    2910:	ldr	r3, [r3, #12]
    2914:	str	sl, [r3, #12]
    2918:	ldr	r3, [r4, #52]	; 0x34
    291c:	mov	r1, #0
    2920:	ldr	r0, [r3, #12]
    2924:	bl	1460 <inflate@plt>
    2928:	subs	fp, r0, #0
    292c:	moveq	r5, #1
    2930:	moveq	r7, r5
    2934:	addeq	r8, sp, #16
    2938:	bne	29f0 <InflateRankDims+0x13c>
    293c:	ldr	r3, [r4, #52]	; 0x34
    2940:	ldr	r3, [r3, #12]
    2944:	ldr	r2, [r3, #16]
    2948:	cmp	r2, #0
    294c:	beq	2a30 <InflateRankDims+0x17c>
    2950:	ldr	r2, [r3, #4]
    2954:	cmp	r2, #0
    2958:	cmpeq	r5, #1
    295c:	bne	2a30 <InflateRankDims+0x17c>
    2960:	str	r7, [r3, #4]
    2964:	ldr	r3, [r4, #52]	; 0x34
    2968:	ldr	r3, [r3, #12]
    296c:	str	r8, [r3]
    2970:	ldr	r3, [r9]
    2974:	mov	r2, r7
    2978:	mov	r1, r7
    297c:	mov	r0, r8
    2980:	bl	1520 <fread@plt>
    2984:	mov	r5, r0
    2988:	add	r6, r6, r0
    298c:	ldr	r3, [r4, #52]	; 0x34
    2990:	mov	r1, #0
    2994:	ldr	r0, [r3, #12]
    2998:	bl	1460 <inflate@plt>
    299c:	cmp	r0, #0
    29a0:	beq	293c <InflateRankDims+0x88>
    29a4:	cmp	r0, #2
    29a8:	mvneq	r0, #2
    29ac:	bl	14f0 <zError@plt>
    29b0:	mov	r1, r0
    29b4:	ldr	r0, [pc, #668]	; 2c58 <InflateRankDims+0x3a4>
    29b8:	add	r0, pc, r0
    29bc:	bl	161c <Mat_Critical@plt>
    29c0:	b	2a10 <InflateRankDims+0x15c>
    29c4:	mov	r1, #1
    29c8:	str	r1, [r3, #4]
    29cc:	ldr	r3, [r4, #52]	; 0x34
    29d0:	ldr	r3, [r3, #12]
    29d4:	add	r0, sp, #16
    29d8:	str	r0, [r3]
    29dc:	ldr	r3, [r9]
    29e0:	mov	r2, r1
    29e4:	bl	1520 <fread@plt>
    29e8:	mov	r6, r0
    29ec:	b	28fc <InflateRankDims+0x48>
    29f0:	cmp	fp, #2
    29f4:	movne	r0, fp
    29f8:	mvneq	r0, #2
    29fc:	bl	14f0 <zError@plt>
    2a00:	mov	r1, r0
    2a04:	ldr	r0, [pc, #592]	; 2c5c <InflateRankDims+0x3a8>
    2a08:	add	r0, pc, r0
    2a0c:	bl	161c <Mat_Critical@plt>
    2a10:	mov	r0, r6
    2a14:	add	sp, sp, #52	; 0x34
    2a18:	ldrd	r4, [sp]
    2a1c:	ldrd	r6, [sp, #8]
    2a20:	ldrd	r8, [sp, #16]
    2a24:	ldrd	sl, [sp, #24]
    2a28:	add	sp, sp, #32
    2a2c:	pop	{pc}		; (ldr pc, [sp], #4)
    2a30:	ldr	r3, [sl]
    2a34:	str	r3, [sp, #8]
    2a38:	ldr	r3, [sl, #4]
    2a3c:	str	r3, [sp, #12]
    2a40:	ldr	r3, [r9, #20]
    2a44:	cmp	r3, #0
    2a48:	bne	2b6c <InflateRankDims+0x2b8>
    2a4c:	ldrh	r3, [sp, #8]
    2a50:	cmp	r3, #5
    2a54:	bne	2b80 <InflateRankDims+0x2cc>
    2a58:	ldr	r3, [sp, #12]
    2a5c:	tst	r3, #7
    2a60:	beq	2a78 <InflateRankDims+0x1c4>
    2a64:	rsbs	r2, r3, #0
    2a68:	and	fp, r3, #7
    2a6c:	and	r2, r2, #7
    2a70:	rsbpl	fp, r2, #0
    2a74:	rsb	fp, fp, #8
    2a78:	add	fp, fp, r3
    2a7c:	ldr	r3, [r4, #52]	; 0x34
    2a80:	ldr	r3, [r3, #12]
    2a84:	ldr	r2, [r3, #4]
    2a88:	cmp	r2, #0
    2a8c:	beq	2b90 <InflateRankDims+0x2dc>
    2a90:	ldr	r3, [r4, #52]	; 0x34
    2a94:	ldr	r3, [r3, #12]
    2a98:	str	fp, [r3, #16]
    2a9c:	add	r3, fp, #2
    2aa0:	ldr	r2, [sp, #4]
    2aa4:	cmp	r2, r3, lsl #2
    2aa8:	bcc	2bbc <InflateRankDims+0x308>
    2aac:	ldr	r3, [r4, #52]	; 0x34
    2ab0:	ldr	r3, [r3, #12]
    2ab4:	add	sl, sl, #8
    2ab8:	str	sl, [r3, #12]
    2abc:	ldr	r3, [r4, #52]	; 0x34
    2ac0:	mov	r1, #0
    2ac4:	ldr	r0, [r3, #12]
    2ac8:	bl	1460 <inflate@plt>
    2acc:	cmp	r0, #0
    2ad0:	bne	2c00 <InflateRankDims+0x34c>
    2ad4:	mov	r5, #1
    2ad8:	mov	r7, r5
    2adc:	add	r8, sp, #16
    2ae0:	mov	sl, #0
    2ae4:	ldr	r3, [r4, #52]	; 0x34
    2ae8:	ldr	r3, [r3, #12]
    2aec:	ldr	r2, [r3, #16]
    2af0:	cmp	r2, #0
    2af4:	beq	2c20 <InflateRankDims+0x36c>
    2af8:	ldr	r2, [r3, #4]
    2afc:	cmp	r2, #0
    2b00:	cmpeq	r5, #1
    2b04:	bne	2c20 <InflateRankDims+0x36c>
    2b08:	str	r7, [r3, #4]
    2b0c:	ldr	r3, [r4, #52]	; 0x34
    2b10:	ldr	r3, [r3, #12]
    2b14:	str	r8, [r3]
    2b18:	ldr	r3, [r9]
    2b1c:	mov	r2, r7
    2b20:	mov	r1, r7
    2b24:	mov	r0, r8
    2b28:	bl	1520 <fread@plt>
    2b2c:	mov	r5, r0
    2b30:	add	r6, r6, r0
    2b34:	ldr	r3, [r4, #52]	; 0x34
    2b38:	mov	r1, sl
    2b3c:	ldr	r0, [r3, #12]
    2b40:	bl	1460 <inflate@plt>
    2b44:	cmp	r0, #0
    2b48:	beq	2ae4 <InflateRankDims+0x230>
    2b4c:	cmp	r0, #2
    2b50:	mvneq	r0, #2
    2b54:	bl	14f0 <zError@plt>
    2b58:	mov	r1, r0
    2b5c:	ldr	r0, [pc, #252]	; 2c60 <InflateRankDims+0x3ac>
    2b60:	add	r0, pc, r0
    2b64:	bl	161c <Mat_Critical@plt>
    2b68:	b	2a10 <InflateRankDims+0x15c>
    2b6c:	add	r0, sp, #8
    2b70:	bl	18a4 <Mat_int32Swap>
    2b74:	add	r0, sp, #12
    2b78:	bl	18a4 <Mat_int32Swap>
    2b7c:	b	2a4c <InflateRankDims+0x198>
    2b80:	ldr	r0, [pc, #220]	; 2c64 <InflateRankDims+0x3b0>
    2b84:	add	r0, pc, r0
    2b88:	bl	161c <Mat_Critical@plt>
    2b8c:	b	2a10 <InflateRankDims+0x15c>
    2b90:	mov	r1, #1
    2b94:	str	r1, [r3, #4]
    2b98:	ldr	r3, [r4, #52]	; 0x34
    2b9c:	ldr	r3, [r3, #12]
    2ba0:	add	r0, sp, #16
    2ba4:	str	r0, [r3]
    2ba8:	ldr	r3, [r9]
    2bac:	mov	r2, r1
    2bb0:	bl	1520 <fread@plt>
    2bb4:	add	r6, r6, r0
    2bb8:	b	2a90 <InflateRankDims+0x1dc>
    2bbc:	mov	r1, #4
    2bc0:	mov	r0, fp
    2bc4:	bl	140c <calloc@plt>
    2bc8:	ldr	r3, [sp, #88]	; 0x58
    2bcc:	str	r0, [r3]
    2bd0:	cmp	r0, #0
    2bd4:	beq	2be8 <InflateRankDims+0x334>
    2bd8:	ldr	r3, [r4, #52]	; 0x34
    2bdc:	ldr	r3, [r3, #12]
    2be0:	str	r0, [r3, #12]
    2be4:	b	2abc <InflateRankDims+0x208>
    2be8:	mov	r3, #0
    2bec:	str	r3, [sl, #4]
    2bf0:	ldr	r0, [pc, #112]	; 2c68 <InflateRankDims+0x3b4>
    2bf4:	add	r0, pc, r0
    2bf8:	bl	161c <Mat_Critical@plt>
    2bfc:	b	2a10 <InflateRankDims+0x15c>
    2c00:	cmp	r0, #2
    2c04:	mvneq	r0, #2
    2c08:	bl	14f0 <zError@plt>
    2c0c:	mov	r1, r0
    2c10:	ldr	r0, [pc, #84]	; 2c6c <InflateRankDims+0x3b8>
    2c14:	add	r0, pc, r0
    2c18:	bl	161c <Mat_Critical@plt>
    2c1c:	b	2a10 <InflateRankDims+0x15c>
    2c20:	ldr	r1, [r3, #4]
    2c24:	cmp	r1, #0
    2c28:	beq	2a10 <InflateRankDims+0x15c>
    2c2c:	mov	r2, #1
    2c30:	rsb	r1, r1, #0
    2c34:	ldr	r0, [r9]
    2c38:	bl	1694 <fseek@plt>
    2c3c:	ldr	r3, [r4, #52]	; 0x34
    2c40:	ldr	r3, [r3, #12]
    2c44:	ldr	r2, [r3, #4]
    2c48:	sub	r6, r6, r2
    2c4c:	mov	r2, #0
    2c50:	str	r2, [r3, #4]
    2c54:	b	2a10 <InflateRankDims+0x15c>
    2c58:	.word	0x0004c810
    2c5c:	.word	0x0004c7c0
    2c60:	.word	0x0004c668
    2c64:	.word	0x0004c66c
    2c68:	.word	0x0004c63c
    2c6c:	.word	0x0004c5b4

00002c70 <InflateVarNameTag>:
    2c70:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2c74:	strd	r6, [sp, #8]
    2c78:	strd	r8, [sp, #16]
    2c7c:	str	sl, [sp, #24]
    2c80:	str	lr, [sp, #28]
    2c84:	sub	sp, sp, #32
    2c88:	subs	r5, r2, #0
    2c8c:	moveq	r7, #0
    2c90:	beq	2dc8 <InflateVarNameTag+0x158>
    2c94:	mov	r4, r1
    2c98:	mov	r9, r0
    2c9c:	ldr	r3, [r1, #52]	; 0x34
    2ca0:	ldr	r3, [r3, #12]
    2ca4:	ldr	r2, [r3, #4]
    2ca8:	cmp	r2, #0
    2cac:	movne	r7, #0
    2cb0:	beq	2d80 <InflateVarNameTag+0x110>
    2cb4:	ldr	r3, [r4, #52]	; 0x34
    2cb8:	ldr	r3, [r3, #12]
    2cbc:	mov	r2, #8
    2cc0:	str	r2, [r3, #16]
    2cc4:	ldr	r3, [r4, #52]	; 0x34
    2cc8:	ldr	r3, [r3, #12]
    2ccc:	str	r5, [r3, #12]
    2cd0:	ldr	r3, [r4, #52]	; 0x34
    2cd4:	mov	r1, #0
    2cd8:	ldr	r0, [r3, #12]
    2cdc:	bl	1460 <inflate@plt>
    2ce0:	cmp	r0, #0
    2ce4:	bne	2dac <InflateVarNameTag+0x13c>
    2ce8:	mov	r5, #1
    2cec:	mov	r6, r5
    2cf0:	mov	r8, sp
    2cf4:	mov	sl, #0
    2cf8:	ldr	r3, [r4, #52]	; 0x34
    2cfc:	ldr	r3, [r3, #12]
    2d00:	ldr	r2, [r3, #16]
    2d04:	cmp	r2, #0
    2d08:	beq	2de8 <InflateVarNameTag+0x178>
    2d0c:	ldr	r2, [r3, #4]
    2d10:	cmp	r2, #0
    2d14:	cmpeq	r5, #1
    2d18:	bne	2de8 <InflateVarNameTag+0x178>
    2d1c:	str	r6, [r3, #4]
    2d20:	ldr	r3, [r4, #52]	; 0x34
    2d24:	ldr	r3, [r3, #12]
    2d28:	str	r8, [r3]
    2d2c:	ldr	r3, [r9]
    2d30:	mov	r2, r6
    2d34:	mov	r1, r6
    2d38:	mov	r0, r8
    2d3c:	bl	1520 <fread@plt>
    2d40:	mov	r5, r0
    2d44:	add	r7, r7, r0
    2d48:	ldr	r3, [r4, #52]	; 0x34
    2d4c:	mov	r1, sl
    2d50:	ldr	r0, [r3, #12]
    2d54:	bl	1460 <inflate@plt>
    2d58:	cmp	r0, #0
    2d5c:	beq	2cf8 <InflateVarNameTag+0x88>
    2d60:	cmp	r0, #2
    2d64:	mvneq	r0, #2
    2d68:	bl	14f0 <zError@plt>
    2d6c:	mov	r1, r0
    2d70:	ldr	r0, [pc, #168]	; 2e20 <InflateVarNameTag+0x1b0>
    2d74:	add	r0, pc, r0
    2d78:	bl	161c <Mat_Critical@plt>
    2d7c:	b	2dc8 <InflateVarNameTag+0x158>
    2d80:	mov	r1, #1
    2d84:	str	r1, [r3, #4]
    2d88:	ldr	r3, [r4, #52]	; 0x34
    2d8c:	ldr	r3, [r3, #12]
    2d90:	mov	r0, sp
    2d94:	str	r0, [r3]
    2d98:	ldr	r3, [r9]
    2d9c:	mov	r2, r1
    2da0:	bl	1520 <fread@plt>
    2da4:	mov	r7, r0
    2da8:	b	2cb4 <InflateVarNameTag+0x44>
    2dac:	cmp	r0, #2
    2db0:	mvneq	r0, #2
    2db4:	bl	14f0 <zError@plt>
    2db8:	mov	r1, r0
    2dbc:	ldr	r0, [pc, #96]	; 2e24 <InflateVarNameTag+0x1b4>
    2dc0:	add	r0, pc, r0
    2dc4:	bl	161c <Mat_Critical@plt>
    2dc8:	mov	r0, r7
    2dcc:	add	sp, sp, #32
    2dd0:	ldrd	r4, [sp]
    2dd4:	ldrd	r6, [sp, #8]
    2dd8:	ldrd	r8, [sp, #16]
    2ddc:	ldr	sl, [sp, #24]
    2de0:	add	sp, sp, #28
    2de4:	pop	{pc}		; (ldr pc, [sp], #4)
    2de8:	ldr	r1, [r3, #4]
    2dec:	cmp	r1, #0
    2df0:	beq	2dc8 <InflateVarNameTag+0x158>
    2df4:	mov	r2, #1
    2df8:	rsb	r1, r1, #0
    2dfc:	ldr	r0, [r9]
    2e00:	bl	1694 <fseek@plt>
    2e04:	ldr	r3, [r4, #52]	; 0x34
    2e08:	ldr	r3, [r3, #12]
    2e0c:	ldr	r2, [r3, #4]
    2e10:	sub	r7, r7, r2
    2e14:	mov	r2, #0
    2e18:	str	r2, [r3, #4]
    2e1c:	b	2dc8 <InflateVarNameTag+0x158>
    2e20:	.word	0x0004c4e0
    2e24:	.word	0x0004c494

00002e28 <InflateVarName>:
    2e28:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2e2c:	strd	r6, [sp, #8]
    2e30:	strd	r8, [sp, #16]
    2e34:	str	sl, [sp, #24]
    2e38:	str	lr, [sp, #28]
    2e3c:	sub	sp, sp, #32
    2e40:	subs	r5, r2, #0
    2e44:	moveq	r7, #0
    2e48:	beq	2f80 <InflateVarName+0x158>
    2e4c:	mov	r6, r3
    2e50:	mov	r4, r1
    2e54:	mov	r9, r0
    2e58:	ldr	r3, [r1, #52]	; 0x34
    2e5c:	ldr	r2, [r3, #12]
    2e60:	ldr	r3, [r2, #4]
    2e64:	cmp	r3, #0
    2e68:	movne	r7, #0
    2e6c:	beq	2f38 <InflateVarName+0x110>
    2e70:	ldr	r3, [r4, #52]	; 0x34
    2e74:	ldr	r3, [r3, #12]
    2e78:	str	r6, [r3, #16]
    2e7c:	ldr	r3, [r4, #52]	; 0x34
    2e80:	ldr	r3, [r3, #12]
    2e84:	str	r5, [r3, #12]
    2e88:	ldr	r3, [r4, #52]	; 0x34
    2e8c:	mov	r1, #0
    2e90:	ldr	r0, [r3, #12]
    2e94:	bl	1460 <inflate@plt>
    2e98:	cmp	r0, #0
    2e9c:	bne	2f64 <InflateVarName+0x13c>
    2ea0:	mov	r5, #1
    2ea4:	mov	r6, r5
    2ea8:	mov	r8, sp
    2eac:	mov	sl, #0
    2eb0:	ldr	r3, [r4, #52]	; 0x34
    2eb4:	ldr	r3, [r3, #12]
    2eb8:	ldr	r2, [r3, #16]
    2ebc:	cmp	r2, #0
    2ec0:	beq	2fa0 <InflateVarName+0x178>
    2ec4:	ldr	r2, [r3, #4]
    2ec8:	cmp	r2, #0
    2ecc:	cmpeq	r5, #1
    2ed0:	bne	2fa0 <InflateVarName+0x178>
    2ed4:	str	r6, [r3, #4]
    2ed8:	ldr	r3, [r4, #52]	; 0x34
    2edc:	ldr	r3, [r3, #12]
    2ee0:	str	r8, [r3]
    2ee4:	ldr	r3, [r9]
    2ee8:	mov	r2, r6
    2eec:	mov	r1, r6
    2ef0:	mov	r0, r8
    2ef4:	bl	1520 <fread@plt>
    2ef8:	mov	r5, r0
    2efc:	add	r7, r7, r0
    2f00:	ldr	r3, [r4, #52]	; 0x34
    2f04:	mov	r1, sl
    2f08:	ldr	r0, [r3, #12]
    2f0c:	bl	1460 <inflate@plt>
    2f10:	cmp	r0, #0
    2f14:	beq	2eb0 <InflateVarName+0x88>
    2f18:	cmp	r0, #2
    2f1c:	mvneq	r0, #2
    2f20:	bl	14f0 <zError@plt>
    2f24:	mov	r1, r0
    2f28:	ldr	r0, [pc, #168]	; 2fd8 <InflateVarName+0x1b0>
    2f2c:	add	r0, pc, r0
    2f30:	bl	161c <Mat_Critical@plt>
    2f34:	b	2f80 <InflateVarName+0x158>
    2f38:	mov	r1, #1
    2f3c:	str	r1, [r2, #4]
    2f40:	ldr	r3, [r4, #52]	; 0x34
    2f44:	ldr	r3, [r3, #12]
    2f48:	mov	r0, sp
    2f4c:	str	r0, [r3]
    2f50:	ldr	r3, [r9]
    2f54:	mov	r2, r1
    2f58:	bl	1520 <fread@plt>
    2f5c:	mov	r7, r0
    2f60:	b	2e70 <InflateVarName+0x48>
    2f64:	cmp	r0, #2
    2f68:	mvneq	r0, #2
    2f6c:	bl	14f0 <zError@plt>
    2f70:	mov	r1, r0
    2f74:	ldr	r0, [pc, #96]	; 2fdc <InflateVarName+0x1b4>
    2f78:	add	r0, pc, r0
    2f7c:	bl	161c <Mat_Critical@plt>
    2f80:	mov	r0, r7
    2f84:	add	sp, sp, #32
    2f88:	ldrd	r4, [sp]
    2f8c:	ldrd	r6, [sp, #8]
    2f90:	ldrd	r8, [sp, #16]
    2f94:	ldr	sl, [sp, #24]
    2f98:	add	sp, sp, #28
    2f9c:	pop	{pc}		; (ldr pc, [sp], #4)
    2fa0:	ldr	r1, [r3, #4]
    2fa4:	cmp	r1, #0
    2fa8:	beq	2f80 <InflateVarName+0x158>
    2fac:	mov	r2, #1
    2fb0:	rsb	r1, r1, #0
    2fb4:	ldr	r0, [r9]
    2fb8:	bl	1694 <fseek@plt>
    2fbc:	ldr	r3, [r4, #52]	; 0x34
    2fc0:	ldr	r3, [r3, #12]
    2fc4:	ldr	r2, [r3, #4]
    2fc8:	sub	r7, r7, r2
    2fcc:	mov	r2, #0
    2fd0:	str	r2, [r3, #4]
    2fd4:	b	2f80 <InflateVarName+0x158>
    2fd8:	.word	0x0004c350
    2fdc:	.word	0x0004c304

00002fe0 <InflateDataTag>:
    2fe0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    2fe4:	strd	r6, [sp, #8]
    2fe8:	strd	r8, [sp, #16]
    2fec:	str	sl, [sp, #24]
    2ff0:	str	lr, [sp, #28]
    2ff4:	sub	sp, sp, #32
    2ff8:	subs	r5, r2, #0
    2ffc:	moveq	r7, #0
    3000:	beq	3170 <InflateDataTag+0x190>
    3004:	mov	r4, r1
    3008:	mov	r9, r0
    300c:	ldr	r3, [r1, #52]	; 0x34
    3010:	ldr	r3, [r3, #12]
    3014:	ldr	r2, [r3, #4]
    3018:	cmp	r2, #0
    301c:	movne	r7, #0
    3020:	beq	3108 <InflateDataTag+0x128>
    3024:	ldr	r3, [r4, #52]	; 0x34
    3028:	ldr	r3, [r3, #12]
    302c:	mov	r2, #8
    3030:	str	r2, [r3, #16]
    3034:	ldr	r3, [r4, #52]	; 0x34
    3038:	ldr	r3, [r3, #12]
    303c:	str	r5, [r3, #12]
    3040:	ldr	r3, [r4, #52]	; 0x34
    3044:	mov	r1, #0
    3048:	ldr	r0, [r3, #12]
    304c:	bl	1460 <inflate@plt>
    3050:	cmp	r0, #1
    3054:	beq	3170 <InflateDataTag+0x190>
    3058:	cmp	r0, #0
    305c:	bne	3134 <InflateDataTag+0x154>
    3060:	mov	r5, #1
    3064:	mov	r6, r5
    3068:	mov	r8, sp
    306c:	mov	sl, #0
    3070:	ldr	r3, [r4, #52]	; 0x34
    3074:	ldr	r3, [r3, #12]
    3078:	ldr	r2, [r3, #16]
    307c:	cmp	r2, #0
    3080:	beq	315c <InflateDataTag+0x17c>
    3084:	ldr	r2, [r3, #4]
    3088:	cmp	r2, #0
    308c:	cmpeq	r5, #1
    3090:	bne	315c <InflateDataTag+0x17c>
    3094:	str	r6, [r3, #4]
    3098:	ldr	r3, [r4, #52]	; 0x34
    309c:	ldr	r3, [r3, #12]
    30a0:	str	r8, [r3]
    30a4:	ldr	r3, [r9]
    30a8:	mov	r2, r6
    30ac:	mov	r1, r6
    30b0:	mov	r0, r8
    30b4:	bl	1520 <fread@plt>
    30b8:	mov	r5, r0
    30bc:	add	r7, r7, r0
    30c0:	ldr	r3, [r4, #52]	; 0x34
    30c4:	mov	r1, sl
    30c8:	ldr	r0, [r3, #12]
    30cc:	bl	1460 <inflate@plt>
    30d0:	cmp	r0, #1
    30d4:	beq	315c <InflateDataTag+0x17c>
    30d8:	cmp	r0, #0
    30dc:	beq	3070 <InflateDataTag+0x90>
    30e0:	ldr	r4, [r4, #36]	; 0x24
    30e4:	cmp	r0, #2
    30e8:	mvneq	r0, #2
    30ec:	bl	14f0 <zError@plt>
    30f0:	mov	r2, r0
    30f4:	mov	r1, r4
    30f8:	ldr	r0, [pc, #188]	; 31bc <InflateDataTag+0x1dc>
    30fc:	add	r0, pc, r0
    3100:	bl	161c <Mat_Critical@plt>
    3104:	b	3170 <InflateDataTag+0x190>
    3108:	mov	r1, #1
    310c:	str	r1, [r3, #4]
    3110:	ldr	r3, [r4, #52]	; 0x34
    3114:	ldr	r3, [r3, #12]
    3118:	mov	r0, sp
    311c:	str	r0, [r3]
    3120:	ldr	r3, [r9]
    3124:	mov	r2, r1
    3128:	bl	1520 <fread@plt>
    312c:	mov	r7, r0
    3130:	b	3024 <InflateDataTag+0x44>
    3134:	ldr	r4, [r4, #36]	; 0x24
    3138:	cmp	r0, #2
    313c:	mvneq	r0, #2
    3140:	bl	14f0 <zError@plt>
    3144:	mov	r2, r0
    3148:	mov	r1, r4
    314c:	ldr	r0, [pc, #108]	; 31c0 <InflateDataTag+0x1e0>
    3150:	add	r0, pc, r0
    3154:	bl	161c <Mat_Critical@plt>
    3158:	b	3170 <InflateDataTag+0x190>
    315c:	ldr	r3, [r4, #52]	; 0x34
    3160:	ldr	r3, [r3, #12]
    3164:	ldr	r1, [r3, #4]
    3168:	cmp	r1, #0
    316c:	bne	3190 <InflateDataTag+0x1b0>
    3170:	mov	r0, r7
    3174:	add	sp, sp, #32
    3178:	ldrd	r4, [sp]
    317c:	ldrd	r6, [sp, #8]
    3180:	ldrd	r8, [sp, #16]
    3184:	ldr	sl, [sp, #24]
    3188:	add	sp, sp, #28
    318c:	pop	{pc}		; (ldr pc, [sp], #4)
    3190:	mov	r2, #1
    3194:	rsb	r1, r1, #0
    3198:	ldr	r0, [r9]
    319c:	bl	1694 <fseek@plt>
    31a0:	ldr	r3, [r4, #52]	; 0x34
    31a4:	ldr	r3, [r3, #12]
    31a8:	ldr	r2, [r3, #4]
    31ac:	sub	r7, r7, r2
    31b0:	mov	r2, #0
    31b4:	str	r2, [r3, #4]
    31b8:	b	3170 <InflateDataTag+0x190>
    31bc:	.word	0x0004c1a4
    31c0:	.word	0x0004c150

000031c4 <InflateDataType>:
    31c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    31c8:	strd	r6, [sp, #8]
    31cc:	strd	r8, [sp, #16]
    31d0:	str	sl, [sp, #24]
    31d4:	str	lr, [sp, #28]
    31d8:	sub	sp, sp, #32
    31dc:	subs	r5, r2, #0
    31e0:	moveq	r7, #0
    31e4:	beq	32e4 <InflateDataType+0x120>
    31e8:	mov	r4, r1
    31ec:	mov	r9, r0
    31f0:	ldr	r3, [r1, #4]
    31f4:	cmp	r3, #0
    31f8:	movne	r7, #0
    31fc:	beq	32a4 <InflateDataType+0xe0>
    3200:	mov	r3, #4
    3204:	str	r3, [r4, #16]
    3208:	str	r5, [r4, #12]
    320c:	mov	r1, #0
    3210:	mov	r0, r4
    3214:	bl	1460 <inflate@plt>
    3218:	cmp	r0, #0
    321c:	bne	32c8 <InflateDataType+0x104>
    3220:	mov	r5, #1
    3224:	mov	r6, r5
    3228:	mov	r8, sp
    322c:	mov	sl, #0
    3230:	ldr	r3, [r4, #16]
    3234:	cmp	r3, #0
    3238:	beq	3304 <InflateDataType+0x140>
    323c:	ldr	r3, [r4, #4]
    3240:	cmp	r3, #0
    3244:	cmpeq	r5, #1
    3248:	bne	3304 <InflateDataType+0x140>
    324c:	str	r6, [r4, #4]
    3250:	str	r8, [r4]
    3254:	ldr	r3, [r9]
    3258:	mov	r2, r6
    325c:	mov	r1, r6
    3260:	mov	r0, r8
    3264:	bl	1520 <fread@plt>
    3268:	mov	r5, r0
    326c:	add	r7, r7, r0
    3270:	mov	r1, sl
    3274:	mov	r0, r4
    3278:	bl	1460 <inflate@plt>
    327c:	cmp	r0, #0
    3280:	beq	3230 <InflateDataType+0x6c>
    3284:	cmp	r0, #2
    3288:	mvneq	r0, #2
    328c:	bl	14f0 <zError@plt>
    3290:	mov	r1, r0
    3294:	ldr	r0, [pc, #152]	; 3334 <InflateDataType+0x170>
    3298:	add	r0, pc, r0
    329c:	bl	161c <Mat_Critical@plt>
    32a0:	b	32e4 <InflateDataType+0x120>
    32a4:	mov	r1, #1
    32a8:	str	r1, [r4, #4]
    32ac:	mov	r0, sp
    32b0:	str	r0, [r4]
    32b4:	ldr	r3, [r9]
    32b8:	mov	r2, r1
    32bc:	bl	1520 <fread@plt>
    32c0:	mov	r7, r0
    32c4:	b	3200 <InflateDataType+0x3c>
    32c8:	cmp	r0, #2
    32cc:	mvneq	r0, #2
    32d0:	bl	14f0 <zError@plt>
    32d4:	mov	r1, r0
    32d8:	ldr	r0, [pc, #88]	; 3338 <InflateDataType+0x174>
    32dc:	add	r0, pc, r0
    32e0:	bl	161c <Mat_Critical@plt>
    32e4:	mov	r0, r7
    32e8:	add	sp, sp, #32
    32ec:	ldrd	r4, [sp]
    32f0:	ldrd	r6, [sp, #8]
    32f4:	ldrd	r8, [sp, #16]
    32f8:	ldr	sl, [sp, #24]
    32fc:	add	sp, sp, #28
    3300:	pop	{pc}		; (ldr pc, [sp], #4)
    3304:	ldr	r1, [r4, #4]
    3308:	cmp	r1, #0
    330c:	beq	32e4 <InflateDataType+0x120>
    3310:	mov	r2, #1
    3314:	rsb	r1, r1, #0
    3318:	ldr	r0, [r9]
    331c:	bl	1694 <fseek@plt>
    3320:	ldr	r3, [r4, #4]
    3324:	sub	r7, r7, r3
    3328:	mov	r3, #0
    332c:	str	r3, [r4, #4]
    3330:	b	32e4 <InflateDataType+0x120>
    3334:	.word	0x0004c034
    3338:	.word	0x0004bff0

0000333c <InflateData>:
    333c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3340:	strd	r6, [sp, #8]
    3344:	strd	r8, [sp, #16]
    3348:	str	sl, [sp, #24]
    334c:	str	lr, [sp, #28]
    3350:	sub	sp, sp, #1024	; 0x400
    3354:	cmp	r2, #0
    3358:	cmpne	r3, #0
    335c:	moveq	r5, #0
    3360:	beq	34c4 <InflateData+0x188>
    3364:	mov	r6, r3
    3368:	mov	r7, r2
    336c:	mov	r4, r1
    3370:	mov	r8, r0
    3374:	ldr	r3, [r1, #4]
    3378:	cmp	r3, #0
    337c:	bne	33b0 <InflateData+0x74>
    3380:	cmp	r6, #1024	; 0x400
    3384:	ldr	r3, [r0]
    3388:	movhi	r2, #1024	; 0x400
    338c:	movls	r2, r6
    3390:	mov	r1, #1
    3394:	mov	r0, sp
    3398:	bl	1520 <fread@plt>
    339c:	str	r0, [r4, #4]
    33a0:	ldr	r5, [r4, #4]
    33a4:	mov	r3, sp
    33a8:	str	r3, [r4]
    33ac:	b	33b4 <InflateData+0x78>
    33b0:	mov	r5, #0
    33b4:	str	r6, [r4, #16]
    33b8:	str	r7, [r4, #12]
    33bc:	mov	r1, #3
    33c0:	mov	r0, r4
    33c4:	bl	1460 <inflate@plt>
    33c8:	cmp	r0, #1
    33cc:	beq	34c4 <InflateData+0x188>
    33d0:	cmp	r0, #0
    33d4:	bne	33e8 <InflateData+0xac>
    33d8:	mov	r7, sp
    33dc:	mov	r9, #1
    33e0:	mov	sl, #1024	; 0x400
    33e4:	b	344c <InflateData+0x110>
    33e8:	cmp	r0, #2
    33ec:	mvneq	r0, #2
    33f0:	bl	14f0 <zError@plt>
    33f4:	mov	r1, r0
    33f8:	ldr	r0, [pc, #264]	; 3508 <InflateData+0x1cc>
    33fc:	add	r0, pc, r0
    3400:	bl	161c <Mat_Critical@plt>
    3404:	b	34c4 <InflateData+0x188>
    3408:	ldr	r3, [r8]
    340c:	mov	r2, sl
    3410:	mov	r1, r9
    3414:	mov	r0, r7
    3418:	bl	1520 <fread@plt>
    341c:	str	r0, [r4, #4]
    3420:	ldr	r3, [r4, #4]
    3424:	add	r5, r5, r3
    3428:	str	r7, [r4]
    342c:	mov	r1, #3
    3430:	mov	r0, r4
    3434:	bl	1460 <inflate@plt>
    3438:	cmp	r0, #1
    343c:	beq	34b8 <InflateData+0x17c>
    3440:	cmp	r0, #0
    3444:	cmnne	r0, #5
    3448:	bne	349c <InflateData+0x160>
    344c:	ldr	r3, [r4, #16]
    3450:	cmp	r3, #0
    3454:	beq	34b8 <InflateData+0x17c>
    3458:	ldr	r1, [r4, #4]
    345c:	cmp	r1, #0
    3460:	bne	34e4 <InflateData+0x1a8>
    3464:	add	r3, r5, #1024	; 0x400
    3468:	cmp	r3, r6
    346c:	bcc	3408 <InflateData+0xcc>
    3470:	add	r3, r5, #1
    3474:	cmp	r3, r6
    3478:	ldr	r3, [r8]
    347c:	movhi	r2, r9
    3480:	movhi	r1, r2
    3484:	subls	r2, r6, r5
    3488:	movls	r1, r9
    348c:	mov	r0, r7
    3490:	bl	1520 <fread@plt>
    3494:	str	r0, [r4, #4]
    3498:	b	3420 <InflateData+0xe4>
    349c:	cmp	r0, #2
    34a0:	mvneq	r0, #2
    34a4:	bl	14f0 <zError@plt>
    34a8:	mov	r1, r0
    34ac:	ldr	r0, [pc, #88]	; 350c <InflateData+0x1d0>
    34b0:	add	r0, pc, r0
    34b4:	bl	161c <Mat_Critical@plt>
    34b8:	ldr	r1, [r4, #4]
    34bc:	cmp	r1, #0
    34c0:	bne	34e4 <InflateData+0x1a8>
    34c4:	mov	r0, r5
    34c8:	add	sp, sp, #1024	; 0x400
    34cc:	ldrd	r4, [sp]
    34d0:	ldrd	r6, [sp, #8]
    34d4:	ldrd	r8, [sp, #16]
    34d8:	ldr	sl, [sp, #24]
    34dc:	add	sp, sp, #28
    34e0:	pop	{pc}		; (ldr pc, [sp], #4)
    34e4:	mov	r2, #1
    34e8:	rsb	r1, r1, #0
    34ec:	ldr	r0, [r8]
    34f0:	bl	1694 <fseek@plt>
    34f4:	ldr	r3, [r4, #4]
    34f8:	sub	r5, r5, r3
    34fc:	mov	r3, #0
    3500:	str	r3, [r4, #4]
    3504:	b	34c4 <InflateData+0x188>
    3508:	.word	0x0004bef8
    350c:	.word	0x0004be44

00003510 <InflateFieldNameLength>:
    3510:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3514:	strd	r6, [sp, #8]
    3518:	strd	r8, [sp, #16]
    351c:	str	sl, [sp, #24]
    3520:	str	lr, [sp, #28]
    3524:	sub	sp, sp, #32
    3528:	subs	r5, r2, #0
    352c:	moveq	r7, #0
    3530:	beq	3668 <InflateFieldNameLength+0x158>
    3534:	mov	r4, r1
    3538:	mov	r9, r0
    353c:	ldr	r3, [r1, #52]	; 0x34
    3540:	ldr	r3, [r3, #12]
    3544:	ldr	r2, [r3, #4]
    3548:	cmp	r2, #0
    354c:	movne	r7, #0
    3550:	beq	3620 <InflateFieldNameLength+0x110>
    3554:	ldr	r3, [r4, #52]	; 0x34
    3558:	ldr	r3, [r3, #12]
    355c:	mov	r2, #8
    3560:	str	r2, [r3, #16]
    3564:	ldr	r3, [r4, #52]	; 0x34
    3568:	ldr	r3, [r3, #12]
    356c:	str	r5, [r3, #12]
    3570:	ldr	r3, [r4, #52]	; 0x34
    3574:	mov	r1, #0
    3578:	ldr	r0, [r3, #12]
    357c:	bl	1460 <inflate@plt>
    3580:	cmp	r0, #0
    3584:	bne	364c <InflateFieldNameLength+0x13c>
    3588:	mov	r5, #1
    358c:	mov	r6, r5
    3590:	mov	r8, sp
    3594:	mov	sl, #0
    3598:	ldr	r3, [r4, #52]	; 0x34
    359c:	ldr	r3, [r3, #12]
    35a0:	ldr	r2, [r3, #16]
    35a4:	cmp	r2, #0
    35a8:	beq	3688 <InflateFieldNameLength+0x178>
    35ac:	ldr	r2, [r3, #4]
    35b0:	cmp	r2, #0
    35b4:	cmpeq	r5, #1
    35b8:	bne	3688 <InflateFieldNameLength+0x178>
    35bc:	str	r6, [r3, #4]
    35c0:	ldr	r3, [r4, #52]	; 0x34
    35c4:	ldr	r3, [r3, #12]
    35c8:	str	r8, [r3]
    35cc:	ldr	r3, [r9]
    35d0:	mov	r2, r6
    35d4:	mov	r1, r6
    35d8:	mov	r0, r8
    35dc:	bl	1520 <fread@plt>
    35e0:	mov	r5, r0
    35e4:	add	r7, r7, r0
    35e8:	ldr	r3, [r4, #52]	; 0x34
    35ec:	mov	r1, sl
    35f0:	ldr	r0, [r3, #12]
    35f4:	bl	1460 <inflate@plt>
    35f8:	cmp	r0, #0
    35fc:	beq	3598 <InflateFieldNameLength+0x88>
    3600:	cmp	r0, #2
    3604:	mvneq	r0, #2
    3608:	bl	14f0 <zError@plt>
    360c:	mov	r1, r0
    3610:	ldr	r0, [pc, #168]	; 36c0 <InflateFieldNameLength+0x1b0>
    3614:	add	r0, pc, r0
    3618:	bl	161c <Mat_Critical@plt>
    361c:	b	3668 <InflateFieldNameLength+0x158>
    3620:	mov	r1, #1
    3624:	str	r1, [r3, #4]
    3628:	ldr	r3, [r4, #52]	; 0x34
    362c:	ldr	r3, [r3, #12]
    3630:	mov	r0, sp
    3634:	str	r0, [r3]
    3638:	ldr	r3, [r9]
    363c:	mov	r2, r1
    3640:	bl	1520 <fread@plt>
    3644:	mov	r7, r0
    3648:	b	3554 <InflateFieldNameLength+0x44>
    364c:	cmp	r0, #2
    3650:	mvneq	r0, #2
    3654:	bl	14f0 <zError@plt>
    3658:	mov	r1, r0
    365c:	ldr	r0, [pc, #96]	; 36c4 <InflateFieldNameLength+0x1b4>
    3660:	add	r0, pc, r0
    3664:	bl	161c <Mat_Critical@plt>
    3668:	mov	r0, r7
    366c:	add	sp, sp, #32
    3670:	ldrd	r4, [sp]
    3674:	ldrd	r6, [sp, #8]
    3678:	ldrd	r8, [sp, #16]
    367c:	ldr	sl, [sp, #24]
    3680:	add	sp, sp, #28
    3684:	pop	{pc}		; (ldr pc, [sp], #4)
    3688:	ldr	r1, [r3, #4]
    368c:	cmp	r1, #0
    3690:	beq	3668 <InflateFieldNameLength+0x158>
    3694:	mov	r2, #1
    3698:	rsb	r1, r1, #0
    369c:	ldr	r0, [r9]
    36a0:	bl	1694 <fseek@plt>
    36a4:	ldr	r3, [r4, #52]	; 0x34
    36a8:	ldr	r3, [r3, #12]
    36ac:	ldr	r2, [r3, #4]
    36b0:	sub	r7, r7, r2
    36b4:	mov	r2, #0
    36b8:	str	r2, [r3, #4]
    36bc:	b	3668 <InflateFieldNameLength+0x158>
    36c0:	.word	0x0004bd04
    36c4:	.word	0x0004bcb8

000036c8 <InflateFieldNamesTag>:
    36c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    36cc:	strd	r6, [sp, #8]
    36d0:	strd	r8, [sp, #16]
    36d4:	str	sl, [sp, #24]
    36d8:	str	lr, [sp, #28]
    36dc:	sub	sp, sp, #32
    36e0:	subs	r5, r2, #0
    36e4:	moveq	r7, #0
    36e8:	beq	3820 <InflateFieldNamesTag+0x158>
    36ec:	mov	r4, r1
    36f0:	mov	r9, r0
    36f4:	ldr	r3, [r1, #52]	; 0x34
    36f8:	ldr	r3, [r3, #12]
    36fc:	ldr	r2, [r3, #4]
    3700:	cmp	r2, #0
    3704:	movne	r7, #0
    3708:	beq	37d8 <InflateFieldNamesTag+0x110>
    370c:	ldr	r3, [r4, #52]	; 0x34
    3710:	ldr	r3, [r3, #12]
    3714:	mov	r2, #8
    3718:	str	r2, [r3, #16]
    371c:	ldr	r3, [r4, #52]	; 0x34
    3720:	ldr	r3, [r3, #12]
    3724:	str	r5, [r3, #12]
    3728:	ldr	r3, [r4, #52]	; 0x34
    372c:	mov	r1, #0
    3730:	ldr	r0, [r3, #12]
    3734:	bl	1460 <inflate@plt>
    3738:	cmp	r0, #0
    373c:	bne	3804 <InflateFieldNamesTag+0x13c>
    3740:	mov	r5, #1
    3744:	mov	r6, r5
    3748:	mov	r8, sp
    374c:	mov	sl, #0
    3750:	ldr	r3, [r4, #52]	; 0x34
    3754:	ldr	r3, [r3, #12]
    3758:	ldr	r2, [r3, #16]
    375c:	cmp	r2, #0
    3760:	beq	3840 <InflateFieldNamesTag+0x178>
    3764:	ldr	r2, [r3, #4]
    3768:	cmp	r2, #0
    376c:	cmpeq	r5, #1
    3770:	bne	3840 <InflateFieldNamesTag+0x178>
    3774:	str	r6, [r3, #4]
    3778:	ldr	r3, [r4, #52]	; 0x34
    377c:	ldr	r3, [r3, #12]
    3780:	str	r8, [r3]
    3784:	ldr	r3, [r9]
    3788:	mov	r2, r6
    378c:	mov	r1, r6
    3790:	mov	r0, r8
    3794:	bl	1520 <fread@plt>
    3798:	mov	r5, r0
    379c:	add	r7, r7, r0
    37a0:	ldr	r3, [r4, #52]	; 0x34
    37a4:	mov	r1, sl
    37a8:	ldr	r0, [r3, #12]
    37ac:	bl	1460 <inflate@plt>
    37b0:	cmp	r0, #0
    37b4:	beq	3750 <InflateFieldNamesTag+0x88>
    37b8:	cmp	r0, #2
    37bc:	mvneq	r0, #2
    37c0:	bl	14f0 <zError@plt>
    37c4:	mov	r1, r0
    37c8:	ldr	r0, [pc, #168]	; 3878 <InflateFieldNamesTag+0x1b0>
    37cc:	add	r0, pc, r0
    37d0:	bl	161c <Mat_Critical@plt>
    37d4:	b	3820 <InflateFieldNamesTag+0x158>
    37d8:	mov	r1, #1
    37dc:	str	r1, [r3, #4]
    37e0:	ldr	r3, [r4, #52]	; 0x34
    37e4:	ldr	r3, [r3, #12]
    37e8:	mov	r0, sp
    37ec:	str	r0, [r3]
    37f0:	ldr	r3, [r9]
    37f4:	mov	r2, r1
    37f8:	bl	1520 <fread@plt>
    37fc:	mov	r7, r0
    3800:	b	370c <InflateFieldNamesTag+0x44>
    3804:	cmp	r0, #2
    3808:	mvneq	r0, #2
    380c:	bl	14f0 <zError@plt>
    3810:	mov	r1, r0
    3814:	ldr	r0, [pc, #96]	; 387c <InflateFieldNamesTag+0x1b4>
    3818:	add	r0, pc, r0
    381c:	bl	161c <Mat_Critical@plt>
    3820:	mov	r0, r7
    3824:	add	sp, sp, #32
    3828:	ldrd	r4, [sp]
    382c:	ldrd	r6, [sp, #8]
    3830:	ldrd	r8, [sp, #16]
    3834:	ldr	sl, [sp, #24]
    3838:	add	sp, sp, #28
    383c:	pop	{pc}		; (ldr pc, [sp], #4)
    3840:	ldr	r1, [r3, #4]
    3844:	cmp	r1, #0
    3848:	beq	3820 <InflateFieldNamesTag+0x158>
    384c:	mov	r2, #1
    3850:	rsb	r1, r1, #0
    3854:	ldr	r0, [r9]
    3858:	bl	1694 <fseek@plt>
    385c:	ldr	r3, [r4, #52]	; 0x34
    3860:	ldr	r3, [r3, #12]
    3864:	ldr	r2, [r3, #4]
    3868:	sub	r7, r7, r2
    386c:	mov	r2, #0
    3870:	str	r2, [r3, #4]
    3874:	b	3820 <InflateFieldNamesTag+0x158>
    3878:	.word	0x0004bb78
    387c:	.word	0x0004bb2c

00003880 <InflateFieldNames>:
    3880:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3884:	strd	r6, [sp, #8]
    3888:	strd	r8, [sp, #16]
    388c:	str	sl, [sp, #24]
    3890:	str	lr, [sp, #28]
    3894:	sub	sp, sp, #32
    3898:	subs	r5, r2, #0
    389c:	moveq	r7, #0
    38a0:	beq	39e4 <InflateFieldNames+0x164>
    38a4:	mov	r6, r3
    38a8:	mov	r4, r1
    38ac:	mov	r9, r0
    38b0:	ldr	r3, [r1, #52]	; 0x34
    38b4:	ldr	r2, [r3, #12]
    38b8:	ldr	r3, [r2, #4]
    38bc:	cmp	r3, #0
    38c0:	movne	r7, #0
    38c4:	beq	399c <InflateFieldNames+0x11c>
    38c8:	ldr	r3, [r4, #52]	; 0x34
    38cc:	ldr	r2, [r3, #12]
    38d0:	ldr	r1, [sp, #64]	; 0x40
    38d4:	ldr	r3, [sp, #68]	; 0x44
    38d8:	mla	r3, r1, r6, r3
    38dc:	str	r3, [r2, #16]
    38e0:	ldr	r3, [r4, #52]	; 0x34
    38e4:	ldr	r3, [r3, #12]
    38e8:	str	r5, [r3, #12]
    38ec:	ldr	r3, [r4, #52]	; 0x34
    38f0:	mov	r1, #0
    38f4:	ldr	r0, [r3, #12]
    38f8:	bl	1460 <inflate@plt>
    38fc:	cmp	r0, #0
    3900:	bne	39c8 <InflateFieldNames+0x148>
    3904:	mov	r5, #1
    3908:	mov	r6, r5
    390c:	mov	r8, sp
    3910:	mov	sl, #0
    3914:	ldr	r3, [r4, #52]	; 0x34
    3918:	ldr	r3, [r3, #12]
    391c:	ldr	r2, [r3, #16]
    3920:	cmp	r2, #0
    3924:	beq	3a04 <InflateFieldNames+0x184>
    3928:	ldr	r2, [r3, #4]
    392c:	cmp	r2, #0
    3930:	cmpeq	r5, #1
    3934:	bne	3a04 <InflateFieldNames+0x184>
    3938:	str	r6, [r3, #4]
    393c:	ldr	r3, [r4, #52]	; 0x34
    3940:	ldr	r3, [r3, #12]
    3944:	str	r8, [r3]
    3948:	ldr	r3, [r9]
    394c:	mov	r2, r6
    3950:	mov	r1, r6
    3954:	mov	r0, r8
    3958:	bl	1520 <fread@plt>
    395c:	mov	r5, r0
    3960:	add	r7, r7, r0
    3964:	ldr	r3, [r4, #52]	; 0x34
    3968:	mov	r1, sl
    396c:	ldr	r0, [r3, #12]
    3970:	bl	1460 <inflate@plt>
    3974:	cmp	r0, #0
    3978:	beq	3914 <InflateFieldNames+0x94>
    397c:	cmp	r0, #2
    3980:	mvneq	r0, #2
    3984:	bl	14f0 <zError@plt>
    3988:	mov	r1, r0
    398c:	ldr	r0, [pc, #168]	; 3a3c <InflateFieldNames+0x1bc>
    3990:	add	r0, pc, r0
    3994:	bl	161c <Mat_Critical@plt>
    3998:	b	39e4 <InflateFieldNames+0x164>
    399c:	mov	r1, #1
    39a0:	str	r1, [r2, #4]
    39a4:	ldr	r3, [r4, #52]	; 0x34
    39a8:	ldr	r3, [r3, #12]
    39ac:	mov	r0, sp
    39b0:	str	r0, [r3]
    39b4:	ldr	r3, [r9]
    39b8:	mov	r2, r1
    39bc:	bl	1520 <fread@plt>
    39c0:	mov	r7, r0
    39c4:	b	38c8 <InflateFieldNames+0x48>
    39c8:	cmp	r0, #2
    39cc:	mvneq	r0, #2
    39d0:	bl	14f0 <zError@plt>
    39d4:	mov	r1, r0
    39d8:	ldr	r0, [pc, #96]	; 3a40 <InflateFieldNames+0x1c0>
    39dc:	add	r0, pc, r0
    39e0:	bl	161c <Mat_Critical@plt>
    39e4:	mov	r0, r7
    39e8:	add	sp, sp, #32
    39ec:	ldrd	r4, [sp]
    39f0:	ldrd	r6, [sp, #8]
    39f4:	ldrd	r8, [sp, #16]
    39f8:	ldr	sl, [sp, #24]
    39fc:	add	sp, sp, #28
    3a00:	pop	{pc}		; (ldr pc, [sp], #4)
    3a04:	ldr	r1, [r3, #4]
    3a08:	cmp	r1, #0
    3a0c:	beq	39e4 <InflateFieldNames+0x164>
    3a10:	mov	r2, #1
    3a14:	rsb	r1, r1, #0
    3a18:	ldr	r0, [r9]
    3a1c:	bl	1694 <fseek@plt>
    3a20:	ldr	r3, [r4, #52]	; 0x34
    3a24:	ldr	r3, [r3, #12]
    3a28:	ldr	r2, [r3, #4]
    3a2c:	sub	r7, r7, r2
    3a30:	mov	r2, #0
    3a34:	str	r2, [r3, #4]
    3a38:	b	39e4 <InflateFieldNames+0x164>
    3a3c:	.word	0x0004b9e0
    3a40:	.word	0x0004b994

00003a44 <ReadDoubleData>:
    3a44:	cmp	r1, #0
    3a48:	cmpne	r0, #0
    3a4c:	beq	4fb4 <ReadDoubleData+0x1570>
    3a50:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3a54:	strd	r6, [sp, #8]
    3a58:	strd	r8, [sp, #16]
    3a5c:	strd	sl, [sp, #24]
    3a60:	str	lr, [sp, #32]
    3a64:	sub	sp, sp, #2064	; 0x810
    3a68:	sub	sp, sp, #12
    3a6c:	mov	r7, r0
    3a70:	mov	ip, r1
    3a74:	ldr	r1, [r0]
    3a78:	cmp	r1, #0
    3a7c:	moveq	r0, #0
    3a80:	beq	4dbc <ReadDoubleData+0x1378>
    3a84:	str	ip, [sp, #4]
    3a88:	mov	fp, r3
    3a8c:	mov	r4, r2
    3a90:	mov	r0, r2
    3a94:	bl	1598 <Mat_SizeOf@plt>
    3a98:	str	r0, [sp]
    3a9c:	sub	r2, r4, #1
    3aa0:	cmp	r2, #12
    3aa4:	addls	pc, pc, r2, lsl #2
    3aa8:	b	4fbc <ReadDoubleData+0x1578>
    3aac:	b	4d1c <ReadDoubleData+0x12d8>
    3ab0:	b	4e7c <ReadDoubleData+0x1438>
    3ab4:	b	47ec <ReadDoubleData+0xda8>
    3ab8:	b	4a84 <ReadDoubleData+0x1040>
    3abc:	b	42bc <ReadDoubleData+0x878>
    3ac0:	b	4554 <ReadDoubleData+0xb10>
    3ac4:	b	3b2c <ReadDoubleData+0xe8>
    3ac8:	b	4fbc <ReadDoubleData+0x1578>
    3acc:	b	3ae0 <ReadDoubleData+0x9c>
    3ad0:	b	4fbc <ReadDoubleData+0x1578>
    3ad4:	b	4fbc <ReadDoubleData+0x1578>
    3ad8:	b	3da4 <ReadDoubleData+0x360>
    3adc:	b	4030 <ReadDoubleData+0x5ec>
    3ae0:	ldr	r3, [r7]
    3ae4:	mov	r2, fp
    3ae8:	ldr	r1, [sp]
    3aec:	ldr	r4, [sp, #4]
    3af0:	mov	r0, r4
    3af4:	bl	1520 <fread@plt>
    3af8:	mov	r6, r0
    3afc:	ldr	r3, [r7, #20]
    3b00:	cmp	r3, #0
    3b04:	beq	4db4 <ReadDoubleData+0x1370>
    3b08:	cmp	fp, #0
    3b0c:	ble	4db4 <ReadDoubleData+0x1370>
    3b10:	add	fp, r4, fp, lsl #3
    3b14:	mov	r0, r4
    3b18:	bl	1974 <Mat_doubleSwap>
    3b1c:	add	r4, r4, #8
    3b20:	cmp	r4, fp
    3b24:	bne	3b14 <ReadDoubleData+0xd0>
    3b28:	b	4db4 <ReadDoubleData+0x1370>
    3b2c:	ldr	r6, [r7, #20]
    3b30:	cmp	r6, #0
    3b34:	beq	3c84 <ReadDoubleData+0x240>
    3b38:	cmp	fp, #256	; 0x100
    3b3c:	ble	3c34 <ReadDoubleData+0x1f0>
    3b40:	sub	r3, fp, #256	; 0x100
    3b44:	ldr	sl, [sp, #4]
    3b48:	mov	r9, #0
    3b4c:	mov	r6, r9
    3b50:	add	r2, sp, #24
    3b54:	str	r2, [sp, #16]
    3b58:	add	r8, sp, #1040	; 0x410
    3b5c:	add	r8, r8, #8
    3b60:	str	fp, [sp, #20]
    3b64:	mov	fp, r3
    3b68:	ldr	r3, [r7]
    3b6c:	mov	r2, #256	; 0x100
    3b70:	ldr	r1, [sp]
    3b74:	ldr	r4, [sp, #16]
    3b78:	mov	r0, r4
    3b7c:	bl	1520 <fread@plt>
    3b80:	add	r6, r6, r0
    3b84:	str	r6, [sp, #8]
    3b88:	str	r4, [sp, #12]
    3b8c:	mov	r5, sl
    3b90:	mov	r0, r4
    3b94:	bl	1944 <Mat_floatSwap>
    3b98:	vcvt.f64.f32	d0, s0
    3b9c:	vstmia	r5!, {d0}
    3ba0:	add	r4, r4, #4
    3ba4:	cmp	r4, r8
    3ba8:	bne	3b90 <ReadDoubleData+0x14c>
    3bac:	add	r9, r9, #256	; 0x100
    3bb0:	add	sl, sl, #2048	; 0x800
    3bb4:	cmp	r9, fp
    3bb8:	blt	3b68 <ReadDoubleData+0x124>
    3bbc:	ldr	fp, [sp, #20]
    3bc0:	sub	r3, fp, #256	; 0x100
    3bc4:	sub	r3, r3, #1
    3bc8:	bic	r3, r3, #255	; 0xff
    3bcc:	add	r4, r3, #256	; 0x100
    3bd0:	cmp	fp, r4
    3bd4:	ble	4db4 <ReadDoubleData+0x1370>
    3bd8:	sub	fp, fp, r4
    3bdc:	ldr	r3, [r7]
    3be0:	mov	r2, fp
    3be4:	ldr	r1, [sp]
    3be8:	add	r0, sp, #24
    3bec:	bl	1520 <fread@plt>
    3bf0:	ldr	r3, [sp, #8]
    3bf4:	add	r6, r3, r0
    3bf8:	cmp	fp, #0
    3bfc:	ble	4db4 <ReadDoubleData+0x1370>
    3c00:	ldr	r3, [sp, #4]
    3c04:	add	r7, r3, r4, lsl #3
    3c08:	add	r4, fp, r4
    3c0c:	add	r4, r3, r4, lsl #3
    3c10:	ldr	r5, [sp, #12]
    3c14:	mov	r0, r5
    3c18:	bl	1944 <Mat_floatSwap>
    3c1c:	vcvt.f64.f32	d0, s0
    3c20:	vstmia	r7!, {d0}
    3c24:	add	r5, r5, #4
    3c28:	cmp	r7, r4
    3c2c:	bne	3c14 <ReadDoubleData+0x1d0>
    3c30:	b	4db4 <ReadDoubleData+0x1370>
    3c34:	ldr	r3, [r7]
    3c38:	mov	r2, fp
    3c3c:	ldr	r1, [sp]
    3c40:	add	r0, sp, #24
    3c44:	bl	1520 <fread@plt>
    3c48:	mov	r6, r0
    3c4c:	cmp	fp, #0
    3c50:	ble	4db4 <ReadDoubleData+0x1370>
    3c54:	add	r5, sp, #24
    3c58:	ldr	r3, [sp, #4]
    3c5c:	mov	r4, r3
    3c60:	add	fp, r3, fp, lsl #3
    3c64:	mov	r0, r5
    3c68:	bl	1944 <Mat_floatSwap>
    3c6c:	vcvt.f64.f32	d0, s0
    3c70:	vstmia	r4!, {d0}
    3c74:	add	r5, r5, #4
    3c78:	cmp	r4, fp
    3c7c:	bne	3c64 <ReadDoubleData+0x220>
    3c80:	b	4db4 <ReadDoubleData+0x1370>
    3c84:	cmp	fp, #256	; 0x100
    3c88:	ble	3d5c <ReadDoubleData+0x318>
    3c8c:	sub	r9, fp, #256	; 0x100
    3c90:	ldr	r8, [sp, #4]
    3c94:	mov	r5, r6
    3c98:	add	sl, sp, #24
    3c9c:	add	r4, sp, #1040	; 0x410
    3ca0:	add	r4, r4, #8
    3ca4:	ldr	r3, [r7]
    3ca8:	mov	r2, #256	; 0x100
    3cac:	ldr	r1, [sp]
    3cb0:	mov	r0, sl
    3cb4:	bl	1520 <fread@plt>
    3cb8:	add	r6, r6, r0
    3cbc:	str	r6, [sp, #8]
    3cc0:	str	sl, [sp, #12]
    3cc4:	mov	r2, r8
    3cc8:	mov	r3, sl
    3ccc:	vldmia	r3!, {s14}
    3cd0:	vcvt.f64.f32	d7, s14
    3cd4:	vstmia	r2!, {d7}
    3cd8:	cmp	r3, r4
    3cdc:	bne	3ccc <ReadDoubleData+0x288>
    3ce0:	add	r5, r5, #256	; 0x100
    3ce4:	add	r8, r8, #2048	; 0x800
    3ce8:	cmp	r5, r9
    3cec:	blt	3ca4 <ReadDoubleData+0x260>
    3cf0:	sub	r3, fp, #256	; 0x100
    3cf4:	sub	r3, r3, #1
    3cf8:	bic	r3, r3, #255	; 0xff
    3cfc:	add	r4, r3, #256	; 0x100
    3d00:	cmp	fp, r4
    3d04:	ble	4db4 <ReadDoubleData+0x1370>
    3d08:	sub	fp, fp, r4
    3d0c:	ldr	r3, [r7]
    3d10:	mov	r2, fp
    3d14:	ldr	r1, [sp]
    3d18:	add	r0, sp, #24
    3d1c:	bl	1520 <fread@plt>
    3d20:	ldr	r3, [sp, #8]
    3d24:	add	r6, r3, r0
    3d28:	cmp	fp, #0
    3d2c:	ble	4db4 <ReadDoubleData+0x1370>
    3d30:	ldr	r1, [sp, #4]
    3d34:	add	r2, r1, r4, lsl #3
    3d38:	add	r3, fp, r4
    3d3c:	add	r3, r1, r3, lsl #3
    3d40:	ldr	r1, [sp, #12]
    3d44:	vldmia	r1!, {s14}
    3d48:	vcvt.f64.f32	d7, s14
    3d4c:	vstmia	r2!, {d7}
    3d50:	cmp	r2, r3
    3d54:	bne	3d44 <ReadDoubleData+0x300>
    3d58:	b	4db4 <ReadDoubleData+0x1370>
    3d5c:	ldr	r3, [r7]
    3d60:	mov	r2, fp
    3d64:	ldr	r1, [sp]
    3d68:	add	r0, sp, #24
    3d6c:	bl	1520 <fread@plt>
    3d70:	mov	r6, r0
    3d74:	cmp	fp, #0
    3d78:	ble	4db4 <ReadDoubleData+0x1370>
    3d7c:	add	r2, sp, #24
    3d80:	ldr	r1, [sp, #4]
    3d84:	mov	r3, r1
    3d88:	add	r1, r1, fp, lsl #3
    3d8c:	vldmia	r2!, {s14}
    3d90:	vcvt.f64.f32	d7, s14
    3d94:	vstmia	r3!, {d7}
    3d98:	cmp	r3, r1
    3d9c:	bne	3d8c <ReadDoubleData+0x348>
    3da0:	b	4db4 <ReadDoubleData+0x1370>
    3da4:	ldr	r6, [r7, #20]
    3da8:	cmp	r6, #0
    3dac:	beq	3efc <ReadDoubleData+0x4b8>
    3db0:	cmp	fp, #256	; 0x100
    3db4:	ble	3eac <ReadDoubleData+0x468>
    3db8:	sub	r3, fp, #256	; 0x100
    3dbc:	ldr	sl, [sp, #4]
    3dc0:	mov	r9, #0
    3dc4:	mov	r6, r9
    3dc8:	add	r2, sp, #24
    3dcc:	str	r2, [sp, #16]
    3dd0:	add	r8, sp, #2064	; 0x810
    3dd4:	add	r8, r8, #8
    3dd8:	str	fp, [sp, #20]
    3ddc:	mov	fp, r3
    3de0:	ldr	r3, [r7]
    3de4:	mov	r2, #256	; 0x100
    3de8:	ldr	r1, [sp]
    3dec:	ldr	r4, [sp, #16]
    3df0:	mov	r0, r4
    3df4:	bl	1520 <fread@plt>
    3df8:	add	r6, r6, r0
    3dfc:	str	r6, [sp, #8]
    3e00:	str	r4, [sp, #12]
    3e04:	mov	r5, sl
    3e08:	mov	r0, r4
    3e0c:	bl	17ec <Mat_int64Swap>
    3e10:	bl	4ed5c <__aeabi_l2d>
    3e14:	strd	r0, [r5], #8
    3e18:	add	r4, r4, #8
    3e1c:	cmp	r4, r8
    3e20:	bne	3e08 <ReadDoubleData+0x3c4>
    3e24:	add	r9, r9, #256	; 0x100
    3e28:	add	sl, sl, #2048	; 0x800
    3e2c:	cmp	r9, fp
    3e30:	blt	3de0 <ReadDoubleData+0x39c>
    3e34:	ldr	fp, [sp, #20]
    3e38:	sub	r3, fp, #256	; 0x100
    3e3c:	sub	r3, r3, #1
    3e40:	bic	r3, r3, #255	; 0xff
    3e44:	add	r4, r3, #256	; 0x100
    3e48:	cmp	fp, r4
    3e4c:	ble	4db4 <ReadDoubleData+0x1370>
    3e50:	sub	fp, fp, r4
    3e54:	ldr	r3, [r7]
    3e58:	mov	r2, fp
    3e5c:	ldr	r1, [sp]
    3e60:	add	r0, sp, #24
    3e64:	bl	1520 <fread@plt>
    3e68:	ldr	r3, [sp, #8]
    3e6c:	add	r6, r3, r0
    3e70:	cmp	fp, #0
    3e74:	ble	4db4 <ReadDoubleData+0x1370>
    3e78:	ldr	r3, [sp, #4]
    3e7c:	add	r7, r3, r4, lsl #3
    3e80:	add	r4, fp, r4
    3e84:	add	r4, r3, r4, lsl #3
    3e88:	ldr	r5, [sp, #12]
    3e8c:	mov	r0, r5
    3e90:	bl	17ec <Mat_int64Swap>
    3e94:	bl	4ed5c <__aeabi_l2d>
    3e98:	strd	r0, [r7], #8
    3e9c:	add	r5, r5, #8
    3ea0:	cmp	r7, r4
    3ea4:	bne	3e8c <ReadDoubleData+0x448>
    3ea8:	b	4db4 <ReadDoubleData+0x1370>
    3eac:	ldr	r3, [r7]
    3eb0:	mov	r2, fp
    3eb4:	ldr	r1, [sp]
    3eb8:	add	r0, sp, #24
    3ebc:	bl	1520 <fread@plt>
    3ec0:	mov	r6, r0
    3ec4:	cmp	fp, #0
    3ec8:	ble	4db4 <ReadDoubleData+0x1370>
    3ecc:	add	r5, sp, #24
    3ed0:	ldr	r3, [sp, #4]
    3ed4:	mov	r4, r3
    3ed8:	add	fp, r3, fp, lsl #3
    3edc:	mov	r0, r5
    3ee0:	bl	17ec <Mat_int64Swap>
    3ee4:	bl	4ed5c <__aeabi_l2d>
    3ee8:	strd	r0, [r4], #8
    3eec:	add	r5, r5, #8
    3ef0:	cmp	r4, fp
    3ef4:	bne	3edc <ReadDoubleData+0x498>
    3ef8:	b	4db4 <ReadDoubleData+0x1370>
    3efc:	cmp	fp, #256	; 0x100
    3f00:	ble	3fe8 <ReadDoubleData+0x5a4>
    3f04:	sub	r3, fp, #256	; 0x100
    3f08:	str	r3, [sp, #12]
    3f0c:	ldr	sl, [sp, #4]
    3f10:	mov	r9, r6
    3f14:	add	r3, sp, #24
    3f18:	add	r8, sp, #2064	; 0x810
    3f1c:	str	fp, [sp, #20]
    3f20:	mov	fp, r3
    3f24:	ldr	r3, [r7]
    3f28:	mov	r2, #256	; 0x100
    3f2c:	ldr	r1, [sp]
    3f30:	mov	r0, fp
    3f34:	bl	1520 <fread@plt>
    3f38:	add	r6, r6, r0
    3f3c:	str	r6, [sp, #8]
    3f40:	sub	r3, fp, #8
    3f44:	str	r3, [sp, #16]
    3f48:	mov	r5, sl
    3f4c:	mov	r4, r3
    3f50:	ldrd	r0, [r4, #8]!
    3f54:	bl	4ed5c <__aeabi_l2d>
    3f58:	strd	r0, [r5], #8
    3f5c:	cmp	r4, r8
    3f60:	bne	3f50 <ReadDoubleData+0x50c>
    3f64:	add	r9, r9, #256	; 0x100
    3f68:	add	sl, sl, #2048	; 0x800
    3f6c:	ldr	r3, [sp, #12]
    3f70:	cmp	r9, r3
    3f74:	blt	3f24 <ReadDoubleData+0x4e0>
    3f78:	ldr	fp, [sp, #20]
    3f7c:	sub	r3, fp, #256	; 0x100
    3f80:	sub	r3, r3, #1
    3f84:	bic	r3, r3, #255	; 0xff
    3f88:	add	r4, r3, #256	; 0x100
    3f8c:	cmp	fp, r4
    3f90:	ble	4db4 <ReadDoubleData+0x1370>
    3f94:	sub	fp, fp, r4
    3f98:	ldr	r3, [r7]
    3f9c:	mov	r2, fp
    3fa0:	ldr	r1, [sp]
    3fa4:	add	r0, sp, #24
    3fa8:	bl	1520 <fread@plt>
    3fac:	ldr	r3, [sp, #8]
    3fb0:	add	r6, r3, r0
    3fb4:	cmp	fp, #0
    3fb8:	ble	4db4 <ReadDoubleData+0x1370>
    3fbc:	ldr	r3, [sp, #4]
    3fc0:	add	r7, r3, r4, lsl #3
    3fc4:	add	r4, fp, r4
    3fc8:	add	r4, r3, r4, lsl #3
    3fcc:	ldr	r5, [sp, #16]
    3fd0:	ldrd	r0, [r5, #8]!
    3fd4:	bl	4ed5c <__aeabi_l2d>
    3fd8:	strd	r0, [r7], #8
    3fdc:	cmp	r7, r4
    3fe0:	bne	3fd0 <ReadDoubleData+0x58c>
    3fe4:	b	4db4 <ReadDoubleData+0x1370>
    3fe8:	ldr	r3, [r7]
    3fec:	mov	r2, fp
    3ff0:	ldr	r1, [sp]
    3ff4:	add	r0, sp, #24
    3ff8:	bl	1520 <fread@plt>
    3ffc:	mov	r6, r0
    4000:	cmp	fp, #0
    4004:	ble	4db4 <ReadDoubleData+0x1370>
    4008:	add	r5, sp, #16
    400c:	ldr	r3, [sp, #4]
    4010:	mov	r4, r3
    4014:	add	fp, r3, fp, lsl #3
    4018:	ldrd	r0, [r5, #8]!
    401c:	bl	4ed5c <__aeabi_l2d>
    4020:	strd	r0, [r4], #8
    4024:	cmp	r4, fp
    4028:	bne	4018 <ReadDoubleData+0x5d4>
    402c:	b	4db4 <ReadDoubleData+0x1370>
    4030:	ldr	r6, [r7, #20]
    4034:	cmp	r6, #0
    4038:	beq	4188 <ReadDoubleData+0x744>
    403c:	cmp	fp, #256	; 0x100
    4040:	ble	4138 <ReadDoubleData+0x6f4>
    4044:	sub	r3, fp, #256	; 0x100
    4048:	ldr	sl, [sp, #4]
    404c:	mov	r9, #0
    4050:	mov	r6, r9
    4054:	add	r2, sp, #24
    4058:	str	r2, [sp, #16]
    405c:	add	r8, sp, #2064	; 0x810
    4060:	add	r8, r8, #8
    4064:	str	fp, [sp, #20]
    4068:	mov	fp, r3
    406c:	ldr	r3, [r7]
    4070:	mov	r2, #256	; 0x100
    4074:	ldr	r1, [sp]
    4078:	ldr	r4, [sp, #16]
    407c:	mov	r0, r4
    4080:	bl	1520 <fread@plt>
    4084:	add	r6, r6, r0
    4088:	str	r6, [sp, #8]
    408c:	str	r4, [sp, #12]
    4090:	mov	r5, sl
    4094:	mov	r0, r4
    4098:	bl	1848 <Mat_uint64Swap>
    409c:	bl	4ed48 <__aeabi_ul2d>
    40a0:	strd	r0, [r5], #8
    40a4:	add	r4, r4, #8
    40a8:	cmp	r4, r8
    40ac:	bne	4094 <ReadDoubleData+0x650>
    40b0:	add	r9, r9, #256	; 0x100
    40b4:	add	sl, sl, #2048	; 0x800
    40b8:	cmp	r9, fp
    40bc:	blt	406c <ReadDoubleData+0x628>
    40c0:	ldr	fp, [sp, #20]
    40c4:	sub	r3, fp, #256	; 0x100
    40c8:	sub	r3, r3, #1
    40cc:	bic	r3, r3, #255	; 0xff
    40d0:	add	r4, r3, #256	; 0x100
    40d4:	cmp	fp, r4
    40d8:	ble	4db4 <ReadDoubleData+0x1370>
    40dc:	sub	fp, fp, r4
    40e0:	ldr	r3, [r7]
    40e4:	mov	r2, fp
    40e8:	ldr	r1, [sp]
    40ec:	add	r0, sp, #24
    40f0:	bl	1520 <fread@plt>
    40f4:	ldr	r3, [sp, #8]
    40f8:	add	r6, r3, r0
    40fc:	cmp	fp, #0
    4100:	ble	4db4 <ReadDoubleData+0x1370>
    4104:	ldr	r3, [sp, #4]
    4108:	add	r7, r3, r4, lsl #3
    410c:	add	r4, fp, r4
    4110:	add	r4, r3, r4, lsl #3
    4114:	ldr	r5, [sp, #12]
    4118:	mov	r0, r5
    411c:	bl	1848 <Mat_uint64Swap>
    4120:	bl	4ed48 <__aeabi_ul2d>
    4124:	strd	r0, [r7], #8
    4128:	add	r5, r5, #8
    412c:	cmp	r7, r4
    4130:	bne	4118 <ReadDoubleData+0x6d4>
    4134:	b	4db4 <ReadDoubleData+0x1370>
    4138:	ldr	r3, [r7]
    413c:	mov	r2, fp
    4140:	ldr	r1, [sp]
    4144:	add	r0, sp, #24
    4148:	bl	1520 <fread@plt>
    414c:	mov	r6, r0
    4150:	cmp	fp, #0
    4154:	ble	4db4 <ReadDoubleData+0x1370>
    4158:	add	r5, sp, #24
    415c:	ldr	r3, [sp, #4]
    4160:	mov	r4, r3
    4164:	add	fp, r3, fp, lsl #3
    4168:	mov	r0, r5
    416c:	bl	1848 <Mat_uint64Swap>
    4170:	bl	4ed48 <__aeabi_ul2d>
    4174:	strd	r0, [r4], #8
    4178:	add	r5, r5, #8
    417c:	cmp	r4, fp
    4180:	bne	4168 <ReadDoubleData+0x724>
    4184:	b	4db4 <ReadDoubleData+0x1370>
    4188:	cmp	fp, #256	; 0x100
    418c:	ble	4274 <ReadDoubleData+0x830>
    4190:	sub	r3, fp, #256	; 0x100
    4194:	str	r3, [sp, #12]
    4198:	ldr	sl, [sp, #4]
    419c:	mov	r9, r6
    41a0:	add	r3, sp, #24
    41a4:	add	r8, sp, #2064	; 0x810
    41a8:	str	fp, [sp, #20]
    41ac:	mov	fp, r3
    41b0:	ldr	r3, [r7]
    41b4:	mov	r2, #256	; 0x100
    41b8:	ldr	r1, [sp]
    41bc:	mov	r0, fp
    41c0:	bl	1520 <fread@plt>
    41c4:	add	r6, r6, r0
    41c8:	str	r6, [sp, #8]
    41cc:	sub	r3, fp, #8
    41d0:	str	r3, [sp, #16]
    41d4:	mov	r5, sl
    41d8:	mov	r4, r3
    41dc:	ldrd	r0, [r4, #8]!
    41e0:	bl	4ed48 <__aeabi_ul2d>
    41e4:	strd	r0, [r5], #8
    41e8:	cmp	r4, r8
    41ec:	bne	41dc <ReadDoubleData+0x798>
    41f0:	add	r9, r9, #256	; 0x100
    41f4:	add	sl, sl, #2048	; 0x800
    41f8:	ldr	r3, [sp, #12]
    41fc:	cmp	r9, r3
    4200:	blt	41b0 <ReadDoubleData+0x76c>
    4204:	ldr	fp, [sp, #20]
    4208:	sub	r3, fp, #256	; 0x100
    420c:	sub	r3, r3, #1
    4210:	bic	r3, r3, #255	; 0xff
    4214:	add	r4, r3, #256	; 0x100
    4218:	cmp	fp, r4
    421c:	ble	4db4 <ReadDoubleData+0x1370>
    4220:	sub	fp, fp, r4
    4224:	ldr	r3, [r7]
    4228:	mov	r2, fp
    422c:	ldr	r1, [sp]
    4230:	add	r0, sp, #24
    4234:	bl	1520 <fread@plt>
    4238:	ldr	r3, [sp, #8]
    423c:	add	r6, r3, r0
    4240:	cmp	fp, #0
    4244:	ble	4db4 <ReadDoubleData+0x1370>
    4248:	ldr	r3, [sp, #4]
    424c:	add	r7, r3, r4, lsl #3
    4250:	add	r4, fp, r4
    4254:	add	r4, r3, r4, lsl #3
    4258:	ldr	r5, [sp, #16]
    425c:	ldrd	r0, [r5, #8]!
    4260:	bl	4ed48 <__aeabi_ul2d>
    4264:	strd	r0, [r7], #8
    4268:	cmp	r7, r4
    426c:	bne	425c <ReadDoubleData+0x818>
    4270:	b	4db4 <ReadDoubleData+0x1370>
    4274:	ldr	r3, [r7]
    4278:	mov	r2, fp
    427c:	ldr	r1, [sp]
    4280:	add	r0, sp, #24
    4284:	bl	1520 <fread@plt>
    4288:	mov	r6, r0
    428c:	cmp	fp, #0
    4290:	ble	4db4 <ReadDoubleData+0x1370>
    4294:	add	r5, sp, #16
    4298:	ldr	r3, [sp, #4]
    429c:	mov	r4, r3
    42a0:	add	fp, r3, fp, lsl #3
    42a4:	ldrd	r0, [r5, #8]!
    42a8:	bl	4ed48 <__aeabi_ul2d>
    42ac:	strd	r0, [r4], #8
    42b0:	cmp	r4, fp
    42b4:	bne	42a4 <ReadDoubleData+0x860>
    42b8:	b	4db4 <ReadDoubleData+0x1370>
    42bc:	ldr	r6, [r7, #20]
    42c0:	cmp	r6, #0
    42c4:	beq	4420 <ReadDoubleData+0x9dc>
    42c8:	cmp	fp, #256	; 0x100
    42cc:	ble	43cc <ReadDoubleData+0x988>
    42d0:	sub	r3, fp, #256	; 0x100
    42d4:	ldr	sl, [sp, #4]
    42d8:	mov	r9, #0
    42dc:	mov	r6, r9
    42e0:	add	r2, sp, #24
    42e4:	str	r2, [sp, #16]
    42e8:	add	r8, sp, #1040	; 0x410
    42ec:	add	r8, r8, #8
    42f0:	str	fp, [sp, #20]
    42f4:	mov	fp, r3
    42f8:	ldr	r3, [r7]
    42fc:	mov	r2, #256	; 0x100
    4300:	ldr	r1, [sp]
    4304:	ldr	r4, [sp, #16]
    4308:	mov	r0, r4
    430c:	bl	1520 <fread@plt>
    4310:	add	r6, r6, r0
    4314:	str	r6, [sp, #8]
    4318:	str	r4, [sp, #12]
    431c:	mov	r5, sl
    4320:	mov	r0, r4
    4324:	bl	18a4 <Mat_int32Swap>
    4328:	vmov	s15, r0
    432c:	vcvt.f64.s32	d7, s15
    4330:	vstmia	r5!, {d7}
    4334:	add	r4, r4, #4
    4338:	cmp	r4, r8
    433c:	bne	4320 <ReadDoubleData+0x8dc>
    4340:	add	r9, r9, #256	; 0x100
    4344:	add	sl, sl, #2048	; 0x800
    4348:	cmp	r9, fp
    434c:	blt	42f8 <ReadDoubleData+0x8b4>
    4350:	ldr	fp, [sp, #20]
    4354:	sub	r3, fp, #256	; 0x100
    4358:	sub	r3, r3, #1
    435c:	bic	r3, r3, #255	; 0xff
    4360:	add	r4, r3, #256	; 0x100
    4364:	cmp	fp, r4
    4368:	ble	4db4 <ReadDoubleData+0x1370>
    436c:	sub	fp, fp, r4
    4370:	ldr	r3, [r7]
    4374:	mov	r2, fp
    4378:	ldr	r1, [sp]
    437c:	add	r0, sp, #24
    4380:	bl	1520 <fread@plt>
    4384:	ldr	r3, [sp, #8]
    4388:	add	r6, r3, r0
    438c:	cmp	fp, #0
    4390:	ble	4db4 <ReadDoubleData+0x1370>
    4394:	ldr	r3, [sp, #4]
    4398:	add	r7, r3, r4, lsl #3
    439c:	add	r4, fp, r4
    43a0:	add	r4, r3, r4, lsl #3
    43a4:	ldr	r5, [sp, #12]
    43a8:	mov	r0, r5
    43ac:	bl	18a4 <Mat_int32Swap>
    43b0:	vmov	s15, r0
    43b4:	vcvt.f64.s32	d7, s15
    43b8:	vstmia	r7!, {d7}
    43bc:	add	r5, r5, #4
    43c0:	cmp	r7, r4
    43c4:	bne	43a8 <ReadDoubleData+0x964>
    43c8:	b	4db4 <ReadDoubleData+0x1370>
    43cc:	ldr	r3, [r7]
    43d0:	mov	r2, fp
    43d4:	ldr	r1, [sp]
    43d8:	add	r0, sp, #24
    43dc:	bl	1520 <fread@plt>
    43e0:	mov	r6, r0
    43e4:	cmp	fp, #0
    43e8:	ble	4db4 <ReadDoubleData+0x1370>
    43ec:	add	r5, sp, #24
    43f0:	ldr	r3, [sp, #4]
    43f4:	mov	r4, r3
    43f8:	add	fp, r3, fp, lsl #3
    43fc:	mov	r0, r5
    4400:	bl	18a4 <Mat_int32Swap>
    4404:	vmov	s15, r0
    4408:	vcvt.f64.s32	d7, s15
    440c:	vstmia	r4!, {d7}
    4410:	add	r5, r5, #4
    4414:	cmp	r4, fp
    4418:	bne	43fc <ReadDoubleData+0x9b8>
    441c:	b	4db4 <ReadDoubleData+0x1370>
    4420:	cmp	fp, #256	; 0x100
    4424:	ble	4508 <ReadDoubleData+0xac4>
    4428:	sub	r3, fp, #256	; 0x100
    442c:	ldr	r8, [sp, #4]
    4430:	mov	r5, r6
    4434:	add	sl, sp, #24
    4438:	add	r4, sl, #1020	; 0x3fc
    443c:	mov	r9, r7
    4440:	mov	r7, r3
    4444:	ldr	r3, [r9]
    4448:	mov	r2, #256	; 0x100
    444c:	ldr	r1, [sp]
    4450:	mov	r0, sl
    4454:	bl	1520 <fread@plt>
    4458:	add	r6, r6, r0
    445c:	str	r6, [sp, #8]
    4460:	sub	r1, sl, #4
    4464:	mov	r2, r8
    4468:	mov	r3, r1
    446c:	ldr	r0, [r3, #4]!
    4470:	vmov	s14, r0
    4474:	vcvt.f64.s32	d7, s14
    4478:	vstmia	r2!, {d7}
    447c:	cmp	r3, r4
    4480:	bne	446c <ReadDoubleData+0xa28>
    4484:	add	r5, r5, #256	; 0x100
    4488:	add	r8, r8, #2048	; 0x800
    448c:	cmp	r5, r7
    4490:	blt	4444 <ReadDoubleData+0xa00>
    4494:	mov	r7, r9
    4498:	mov	r9, r1
    449c:	sub	r3, fp, #256	; 0x100
    44a0:	sub	r3, r3, #1
    44a4:	bic	r3, r3, #255	; 0xff
    44a8:	add	r4, r3, #256	; 0x100
    44ac:	cmp	fp, r4
    44b0:	ble	4db4 <ReadDoubleData+0x1370>
    44b4:	sub	fp, fp, r4
    44b8:	ldr	r3, [r7]
    44bc:	mov	r2, fp
    44c0:	ldr	r1, [sp]
    44c4:	add	r0, sp, #24
    44c8:	bl	1520 <fread@plt>
    44cc:	ldr	r3, [sp, #8]
    44d0:	add	r6, r3, r0
    44d4:	cmp	fp, #0
    44d8:	ble	4db4 <ReadDoubleData+0x1370>
    44dc:	ldr	r1, [sp, #4]
    44e0:	add	r2, r1, r4, lsl #3
    44e4:	add	r3, fp, r4
    44e8:	add	r3, r1, r3, lsl #3
    44ec:	ldr	r1, [r9, #4]!
    44f0:	vmov	s14, r1
    44f4:	vcvt.f64.s32	d7, s14
    44f8:	vstmia	r2!, {d7}
    44fc:	cmp	r2, r3
    4500:	bne	44ec <ReadDoubleData+0xaa8>
    4504:	b	4db4 <ReadDoubleData+0x1370>
    4508:	ldr	r3, [r7]
    450c:	mov	r2, fp
    4510:	ldr	r1, [sp]
    4514:	add	r0, sp, #24
    4518:	bl	1520 <fread@plt>
    451c:	mov	r6, r0
    4520:	cmp	fp, #0
    4524:	ble	4db4 <ReadDoubleData+0x1370>
    4528:	add	r2, sp, #20
    452c:	ldr	r1, [sp, #4]
    4530:	mov	r3, r1
    4534:	add	r1, r1, fp, lsl #3
    4538:	ldr	r0, [r2, #4]!
    453c:	vmov	s14, r0
    4540:	vcvt.f64.s32	d7, s14
    4544:	vstmia	r3!, {d7}
    4548:	cmp	r3, r1
    454c:	bne	4538 <ReadDoubleData+0xaf4>
    4550:	b	4db4 <ReadDoubleData+0x1370>
    4554:	ldr	r6, [r7, #20]
    4558:	cmp	r6, #0
    455c:	beq	46b8 <ReadDoubleData+0xc74>
    4560:	cmp	fp, #256	; 0x100
    4564:	ble	4664 <ReadDoubleData+0xc20>
    4568:	sub	r3, fp, #256	; 0x100
    456c:	ldr	sl, [sp, #4]
    4570:	mov	r9, #0
    4574:	mov	r6, r9
    4578:	add	r2, sp, #24
    457c:	str	r2, [sp, #16]
    4580:	add	r8, sp, #1040	; 0x410
    4584:	add	r8, r8, #8
    4588:	str	fp, [sp, #20]
    458c:	mov	fp, r3
    4590:	ldr	r3, [r7]
    4594:	mov	r2, #256	; 0x100
    4598:	ldr	r1, [sp]
    459c:	ldr	r4, [sp, #16]
    45a0:	mov	r0, r4
    45a4:	bl	1520 <fread@plt>
    45a8:	add	r6, r6, r0
    45ac:	str	r6, [sp, #8]
    45b0:	str	r4, [sp, #12]
    45b4:	mov	r5, sl
    45b8:	mov	r0, r4
    45bc:	bl	18d4 <Mat_uint32Swap>
    45c0:	vmov	s15, r0
    45c4:	vcvt.f64.u32	d7, s15
    45c8:	vstmia	r5!, {d7}
    45cc:	add	r4, r4, #4
    45d0:	cmp	r4, r8
    45d4:	bne	45b8 <ReadDoubleData+0xb74>
    45d8:	add	r9, r9, #256	; 0x100
    45dc:	add	sl, sl, #2048	; 0x800
    45e0:	cmp	r9, fp
    45e4:	blt	4590 <ReadDoubleData+0xb4c>
    45e8:	ldr	fp, [sp, #20]
    45ec:	sub	r3, fp, #256	; 0x100
    45f0:	sub	r3, r3, #1
    45f4:	bic	r3, r3, #255	; 0xff
    45f8:	add	r4, r3, #256	; 0x100
    45fc:	cmp	fp, r4
    4600:	ble	4db4 <ReadDoubleData+0x1370>
    4604:	sub	fp, fp, r4
    4608:	ldr	r3, [r7]
    460c:	mov	r2, fp
    4610:	ldr	r1, [sp]
    4614:	add	r0, sp, #24
    4618:	bl	1520 <fread@plt>
    461c:	ldr	r3, [sp, #8]
    4620:	add	r6, r3, r0
    4624:	cmp	fp, #0
    4628:	ble	4db4 <ReadDoubleData+0x1370>
    462c:	ldr	r3, [sp, #4]
    4630:	add	r7, r3, r4, lsl #3
    4634:	add	r4, fp, r4
    4638:	add	r4, r3, r4, lsl #3
    463c:	ldr	r5, [sp, #12]
    4640:	mov	r0, r5
    4644:	bl	18d4 <Mat_uint32Swap>
    4648:	vmov	s15, r0
    464c:	vcvt.f64.u32	d7, s15
    4650:	vstmia	r7!, {d7}
    4654:	add	r5, r5, #4
    4658:	cmp	r7, r4
    465c:	bne	4640 <ReadDoubleData+0xbfc>
    4660:	b	4db4 <ReadDoubleData+0x1370>
    4664:	ldr	r3, [r7]
    4668:	mov	r2, fp
    466c:	ldr	r1, [sp]
    4670:	add	r0, sp, #24
    4674:	bl	1520 <fread@plt>
    4678:	mov	r6, r0
    467c:	cmp	fp, #0
    4680:	ble	4db4 <ReadDoubleData+0x1370>
    4684:	add	r5, sp, #24
    4688:	ldr	r3, [sp, #4]
    468c:	mov	r4, r3
    4690:	add	fp, r3, fp, lsl #3
    4694:	mov	r0, r5
    4698:	bl	18d4 <Mat_uint32Swap>
    469c:	vmov	s15, r0
    46a0:	vcvt.f64.u32	d7, s15
    46a4:	vstmia	r4!, {d7}
    46a8:	add	r5, r5, #4
    46ac:	cmp	r4, fp
    46b0:	bne	4694 <ReadDoubleData+0xc50>
    46b4:	b	4db4 <ReadDoubleData+0x1370>
    46b8:	cmp	fp, #256	; 0x100
    46bc:	ble	47a0 <ReadDoubleData+0xd5c>
    46c0:	sub	r3, fp, #256	; 0x100
    46c4:	ldr	r8, [sp, #4]
    46c8:	mov	r5, r6
    46cc:	add	sl, sp, #24
    46d0:	add	r4, sl, #1020	; 0x3fc
    46d4:	mov	r9, r7
    46d8:	mov	r7, r3
    46dc:	ldr	r3, [r9]
    46e0:	mov	r2, #256	; 0x100
    46e4:	ldr	r1, [sp]
    46e8:	mov	r0, sl
    46ec:	bl	1520 <fread@plt>
    46f0:	add	r6, r6, r0
    46f4:	str	r6, [sp, #8]
    46f8:	sub	r1, sl, #4
    46fc:	mov	r2, r8
    4700:	mov	r3, r1
    4704:	ldr	r0, [r3, #4]!
    4708:	vmov	s14, r0
    470c:	vcvt.f64.u32	d7, s14
    4710:	vstmia	r2!, {d7}
    4714:	cmp	r3, r4
    4718:	bne	4704 <ReadDoubleData+0xcc0>
    471c:	add	r5, r5, #256	; 0x100
    4720:	add	r8, r8, #2048	; 0x800
    4724:	cmp	r5, r7
    4728:	blt	46dc <ReadDoubleData+0xc98>
    472c:	mov	r7, r9
    4730:	mov	r9, r1
    4734:	sub	r3, fp, #256	; 0x100
    4738:	sub	r3, r3, #1
    473c:	bic	r3, r3, #255	; 0xff
    4740:	add	r4, r3, #256	; 0x100
    4744:	cmp	fp, r4
    4748:	ble	4db4 <ReadDoubleData+0x1370>
    474c:	sub	fp, fp, r4
    4750:	ldr	r3, [r7]
    4754:	mov	r2, fp
    4758:	ldr	r1, [sp]
    475c:	add	r0, sp, #24
    4760:	bl	1520 <fread@plt>
    4764:	ldr	r3, [sp, #8]
    4768:	add	r6, r3, r0
    476c:	cmp	fp, #0
    4770:	ble	4db4 <ReadDoubleData+0x1370>
    4774:	ldr	r1, [sp, #4]
    4778:	add	r2, r1, r4, lsl #3
    477c:	add	r3, fp, r4
    4780:	add	r3, r1, r3, lsl #3
    4784:	ldr	r1, [r9, #4]!
    4788:	vmov	s14, r1
    478c:	vcvt.f64.u32	d7, s14
    4790:	vstmia	r2!, {d7}
    4794:	cmp	r2, r3
    4798:	bne	4784 <ReadDoubleData+0xd40>
    479c:	b	4db4 <ReadDoubleData+0x1370>
    47a0:	ldr	r3, [r7]
    47a4:	mov	r2, fp
    47a8:	ldr	r1, [sp]
    47ac:	add	r0, sp, #24
    47b0:	bl	1520 <fread@plt>
    47b4:	mov	r6, r0
    47b8:	cmp	fp, #0
    47bc:	ble	4db4 <ReadDoubleData+0x1370>
    47c0:	add	r2, sp, #20
    47c4:	ldr	r1, [sp, #4]
    47c8:	mov	r3, r1
    47cc:	add	r1, r1, fp, lsl #3
    47d0:	ldr	r0, [r2, #4]!
    47d4:	vmov	s14, r0
    47d8:	vcvt.f64.u32	d7, s14
    47dc:	vstmia	r3!, {d7}
    47e0:	cmp	r3, r1
    47e4:	bne	47d0 <ReadDoubleData+0xd8c>
    47e8:	b	4db4 <ReadDoubleData+0x1370>
    47ec:	ldr	r6, [r7, #20]
    47f0:	cmp	r6, #0
    47f4:	beq	494c <ReadDoubleData+0xf08>
    47f8:	cmp	fp, #256	; 0x100
    47fc:	ble	48f8 <ReadDoubleData+0xeb4>
    4800:	sub	r3, fp, #256	; 0x100
    4804:	ldr	sl, [sp, #4]
    4808:	mov	r9, #0
    480c:	mov	r6, r9
    4810:	add	r2, sp, #24
    4814:	str	r2, [sp, #16]
    4818:	add	r8, sp, #536	; 0x218
    481c:	str	fp, [sp, #20]
    4820:	mov	fp, r3
    4824:	ldr	r3, [r7]
    4828:	mov	r2, #256	; 0x100
    482c:	ldr	r1, [sp]
    4830:	ldr	r4, [sp, #16]
    4834:	mov	r0, r4
    4838:	bl	1520 <fread@plt>
    483c:	add	r6, r6, r0
    4840:	str	r6, [sp, #8]
    4844:	str	r4, [sp, #12]
    4848:	mov	r5, sl
    484c:	mov	r0, r4
    4850:	bl	1904 <Mat_int16Swap>
    4854:	vmov	s15, r0
    4858:	vcvt.f64.s32	d7, s15
    485c:	vstmia	r5!, {d7}
    4860:	add	r4, r4, #2
    4864:	cmp	r4, r8
    4868:	bne	484c <ReadDoubleData+0xe08>
    486c:	add	r9, r9, #256	; 0x100
    4870:	add	sl, sl, #2048	; 0x800
    4874:	cmp	r9, fp
    4878:	blt	4824 <ReadDoubleData+0xde0>
    487c:	ldr	fp, [sp, #20]
    4880:	sub	r3, fp, #256	; 0x100
    4884:	sub	r3, r3, #1
    4888:	bic	r3, r3, #255	; 0xff
    488c:	add	r4, r3, #256	; 0x100
    4890:	cmp	fp, r4
    4894:	ble	4db4 <ReadDoubleData+0x1370>
    4898:	sub	fp, fp, r4
    489c:	ldr	r3, [r7]
    48a0:	mov	r2, fp
    48a4:	ldr	r1, [sp]
    48a8:	add	r0, sp, #24
    48ac:	bl	1520 <fread@plt>
    48b0:	ldr	r3, [sp, #8]
    48b4:	add	r6, r3, r0
    48b8:	cmp	fp, #0
    48bc:	ble	4db4 <ReadDoubleData+0x1370>
    48c0:	ldr	r3, [sp, #4]
    48c4:	add	r7, r3, r4, lsl #3
    48c8:	add	r4, fp, r4
    48cc:	add	r4, r3, r4, lsl #3
    48d0:	ldr	r5, [sp, #12]
    48d4:	mov	r0, r5
    48d8:	bl	1904 <Mat_int16Swap>
    48dc:	vmov	s15, r0
    48e0:	vcvt.f64.s32	d7, s15
    48e4:	vstmia	r7!, {d7}
    48e8:	add	r5, r5, #2
    48ec:	cmp	r4, r7
    48f0:	bne	48d4 <ReadDoubleData+0xe90>
    48f4:	b	4db4 <ReadDoubleData+0x1370>
    48f8:	ldr	r3, [r7]
    48fc:	mov	r2, fp
    4900:	ldr	r1, [sp]
    4904:	add	r0, sp, #24
    4908:	bl	1520 <fread@plt>
    490c:	mov	r6, r0
    4910:	cmp	fp, #0
    4914:	ble	4db4 <ReadDoubleData+0x1370>
    4918:	add	r5, sp, #24
    491c:	ldr	r3, [sp, #4]
    4920:	mov	r4, r3
    4924:	add	fp, r3, fp, lsl #3
    4928:	mov	r0, r5
    492c:	bl	1904 <Mat_int16Swap>
    4930:	vmov	s15, r0
    4934:	vcvt.f64.s32	d7, s15
    4938:	vstmia	r4!, {d7}
    493c:	add	r5, r5, #2
    4940:	cmp	r4, fp
    4944:	bne	4928 <ReadDoubleData+0xee4>
    4948:	b	4db4 <ReadDoubleData+0x1370>
    494c:	cmp	fp, #256	; 0x100
    4950:	ble	4a38 <ReadDoubleData+0xff4>
    4954:	sub	r3, fp, #256	; 0x100
    4958:	ldr	r8, [sp, #4]
    495c:	mov	r5, r6
    4960:	add	sl, sp, #24
    4964:	add	r4, sl, #508	; 0x1fc
    4968:	add	r4, r4, #2
    496c:	mov	r9, r7
    4970:	mov	r7, r3
    4974:	ldr	r3, [r9]
    4978:	mov	r2, #256	; 0x100
    497c:	ldr	r1, [sp]
    4980:	mov	r0, sl
    4984:	bl	1520 <fread@plt>
    4988:	add	r6, r6, r0
    498c:	str	r6, [sp, #8]
    4990:	sub	r1, sl, #2
    4994:	mov	r2, r8
    4998:	mov	r3, r1
    499c:	ldrsh	r0, [r3, #2]!
    49a0:	vmov	s14, r0
    49a4:	vcvt.f64.s32	d7, s14
    49a8:	vstmia	r2!, {d7}
    49ac:	cmp	r3, r4
    49b0:	bne	499c <ReadDoubleData+0xf58>
    49b4:	add	r5, r5, #256	; 0x100
    49b8:	add	r8, r8, #2048	; 0x800
    49bc:	cmp	r5, r7
    49c0:	blt	4974 <ReadDoubleData+0xf30>
    49c4:	mov	r7, r9
    49c8:	mov	r9, r1
    49cc:	sub	r3, fp, #256	; 0x100
    49d0:	sub	r3, r3, #1
    49d4:	bic	r3, r3, #255	; 0xff
    49d8:	add	r4, r3, #256	; 0x100
    49dc:	cmp	fp, r4
    49e0:	ble	4db4 <ReadDoubleData+0x1370>
    49e4:	sub	fp, fp, r4
    49e8:	ldr	r3, [r7]
    49ec:	mov	r2, fp
    49f0:	ldr	r1, [sp]
    49f4:	add	r0, sp, #24
    49f8:	bl	1520 <fread@plt>
    49fc:	ldr	r3, [sp, #8]
    4a00:	add	r6, r3, r0
    4a04:	cmp	fp, #0
    4a08:	ble	4db4 <ReadDoubleData+0x1370>
    4a0c:	ldr	r1, [sp, #4]
    4a10:	add	r2, r1, r4, lsl #3
    4a14:	add	r3, fp, r4
    4a18:	add	r3, r1, r3, lsl #3
    4a1c:	ldrsh	r1, [r9, #2]!
    4a20:	vmov	s14, r1
    4a24:	vcvt.f64.s32	d7, s14
    4a28:	vstmia	r2!, {d7}
    4a2c:	cmp	r3, r2
    4a30:	bne	4a1c <ReadDoubleData+0xfd8>
    4a34:	b	4db4 <ReadDoubleData+0x1370>
    4a38:	ldr	r3, [r7]
    4a3c:	mov	r2, fp
    4a40:	ldr	r1, [sp]
    4a44:	add	r0, sp, #24
    4a48:	bl	1520 <fread@plt>
    4a4c:	mov	r6, r0
    4a50:	cmp	fp, #0
    4a54:	ble	4db4 <ReadDoubleData+0x1370>
    4a58:	add	r2, sp, #22
    4a5c:	ldr	r1, [sp, #4]
    4a60:	mov	r3, r1
    4a64:	add	r1, r1, fp, lsl #3
    4a68:	ldrsh	r0, [r2, #2]!
    4a6c:	vmov	s14, r0
    4a70:	vcvt.f64.s32	d7, s14
    4a74:	vstmia	r3!, {d7}
    4a78:	cmp	r1, r3
    4a7c:	bne	4a68 <ReadDoubleData+0x1024>
    4a80:	b	4db4 <ReadDoubleData+0x1370>
    4a84:	ldr	r6, [r7, #20]
    4a88:	cmp	r6, #0
    4a8c:	beq	4be4 <ReadDoubleData+0x11a0>
    4a90:	cmp	fp, #256	; 0x100
    4a94:	ble	4b90 <ReadDoubleData+0x114c>
    4a98:	sub	r3, fp, #256	; 0x100
    4a9c:	ldr	sl, [sp, #4]
    4aa0:	mov	r9, #0
    4aa4:	mov	r6, r9
    4aa8:	add	r2, sp, #24
    4aac:	str	r2, [sp, #16]
    4ab0:	add	r8, sp, #536	; 0x218
    4ab4:	str	fp, [sp, #20]
    4ab8:	mov	fp, r3
    4abc:	ldr	r3, [r7]
    4ac0:	mov	r2, #256	; 0x100
    4ac4:	ldr	r1, [sp]
    4ac8:	ldr	r4, [sp, #16]
    4acc:	mov	r0, r4
    4ad0:	bl	1520 <fread@plt>
    4ad4:	add	r6, r6, r0
    4ad8:	str	r6, [sp, #8]
    4adc:	str	r4, [sp, #12]
    4ae0:	mov	r5, sl
    4ae4:	mov	r0, r4
    4ae8:	bl	1924 <Mat_uint16Swap>
    4aec:	vmov	s15, r0
    4af0:	vcvt.f64.u32	d7, s15
    4af4:	vstmia	r5!, {d7}
    4af8:	add	r4, r4, #2
    4afc:	cmp	r4, r8
    4b00:	bne	4ae4 <ReadDoubleData+0x10a0>
    4b04:	add	r9, r9, #256	; 0x100
    4b08:	add	sl, sl, #2048	; 0x800
    4b0c:	cmp	r9, fp
    4b10:	blt	4abc <ReadDoubleData+0x1078>
    4b14:	ldr	fp, [sp, #20]
    4b18:	sub	r3, fp, #256	; 0x100
    4b1c:	sub	r3, r3, #1
    4b20:	bic	r3, r3, #255	; 0xff
    4b24:	add	r4, r3, #256	; 0x100
    4b28:	cmp	fp, r4
    4b2c:	ble	4db4 <ReadDoubleData+0x1370>
    4b30:	sub	fp, fp, r4
    4b34:	ldr	r3, [r7]
    4b38:	mov	r2, fp
    4b3c:	ldr	r1, [sp]
    4b40:	add	r0, sp, #24
    4b44:	bl	1520 <fread@plt>
    4b48:	ldr	r3, [sp, #8]
    4b4c:	add	r6, r3, r0
    4b50:	cmp	fp, #0
    4b54:	ble	4db4 <ReadDoubleData+0x1370>
    4b58:	ldr	r3, [sp, #4]
    4b5c:	add	r7, r3, r4, lsl #3
    4b60:	add	r4, fp, r4
    4b64:	add	r4, r3, r4, lsl #3
    4b68:	ldr	r5, [sp, #12]
    4b6c:	mov	r0, r5
    4b70:	bl	1924 <Mat_uint16Swap>
    4b74:	vmov	s15, r0
    4b78:	vcvt.f64.u32	d7, s15
    4b7c:	vstmia	r7!, {d7}
    4b80:	add	r5, r5, #2
    4b84:	cmp	r7, r4
    4b88:	bne	4b6c <ReadDoubleData+0x1128>
    4b8c:	b	4db4 <ReadDoubleData+0x1370>
    4b90:	ldr	r3, [r7]
    4b94:	mov	r2, fp
    4b98:	ldr	r1, [sp]
    4b9c:	add	r0, sp, #24
    4ba0:	bl	1520 <fread@plt>
    4ba4:	mov	r6, r0
    4ba8:	cmp	fp, #0
    4bac:	ble	4db4 <ReadDoubleData+0x1370>
    4bb0:	add	r5, sp, #24
    4bb4:	ldr	r3, [sp, #4]
    4bb8:	mov	r4, r3
    4bbc:	add	fp, r3, fp, lsl #3
    4bc0:	mov	r0, r5
    4bc4:	bl	1924 <Mat_uint16Swap>
    4bc8:	vmov	s15, r0
    4bcc:	vcvt.f64.u32	d7, s15
    4bd0:	vstmia	r4!, {d7}
    4bd4:	add	r5, r5, #2
    4bd8:	cmp	r4, fp
    4bdc:	bne	4bc0 <ReadDoubleData+0x117c>
    4be0:	b	4db4 <ReadDoubleData+0x1370>
    4be4:	cmp	fp, #256	; 0x100
    4be8:	ble	4cd0 <ReadDoubleData+0x128c>
    4bec:	sub	r3, fp, #256	; 0x100
    4bf0:	ldr	r8, [sp, #4]
    4bf4:	mov	r5, r6
    4bf8:	add	sl, sp, #24
    4bfc:	add	r4, sl, #508	; 0x1fc
    4c00:	add	r4, r4, #2
    4c04:	mov	r9, r7
    4c08:	mov	r7, r3
    4c0c:	ldr	r3, [r9]
    4c10:	mov	r2, #256	; 0x100
    4c14:	ldr	r1, [sp]
    4c18:	mov	r0, sl
    4c1c:	bl	1520 <fread@plt>
    4c20:	add	r6, r6, r0
    4c24:	str	r6, [sp, #8]
    4c28:	sub	r1, sl, #2
    4c2c:	mov	r2, r8
    4c30:	mov	r3, r1
    4c34:	ldrh	r0, [r3, #2]!
    4c38:	vmov	s14, r0
    4c3c:	vcvt.f64.u32	d7, s14
    4c40:	vstmia	r2!, {d7}
    4c44:	cmp	r3, r4
    4c48:	bne	4c34 <ReadDoubleData+0x11f0>
    4c4c:	add	r5, r5, #256	; 0x100
    4c50:	add	r8, r8, #2048	; 0x800
    4c54:	cmp	r5, r7
    4c58:	blt	4c0c <ReadDoubleData+0x11c8>
    4c5c:	mov	r7, r9
    4c60:	mov	r9, r1
    4c64:	sub	r3, fp, #256	; 0x100
    4c68:	sub	r3, r3, #1
    4c6c:	bic	r3, r3, #255	; 0xff
    4c70:	add	r4, r3, #256	; 0x100
    4c74:	cmp	fp, r4
    4c78:	ble	4db4 <ReadDoubleData+0x1370>
    4c7c:	sub	fp, fp, r4
    4c80:	ldr	r3, [r7]
    4c84:	mov	r2, fp
    4c88:	ldr	r1, [sp]
    4c8c:	add	r0, sp, #24
    4c90:	bl	1520 <fread@plt>
    4c94:	ldr	r3, [sp, #8]
    4c98:	add	r6, r3, r0
    4c9c:	cmp	fp, #0
    4ca0:	ble	4db4 <ReadDoubleData+0x1370>
    4ca4:	ldr	r1, [sp, #4]
    4ca8:	add	r2, r1, r4, lsl #3
    4cac:	add	r3, fp, r4
    4cb0:	add	r3, r1, r3, lsl #3
    4cb4:	ldrh	r1, [r9, #2]!
    4cb8:	vmov	s14, r1
    4cbc:	vcvt.f64.u32	d7, s14
    4cc0:	vstmia	r2!, {d7}
    4cc4:	cmp	r2, r3
    4cc8:	bne	4cb4 <ReadDoubleData+0x1270>
    4ccc:	b	4db4 <ReadDoubleData+0x1370>
    4cd0:	ldr	r3, [r7]
    4cd4:	mov	r2, fp
    4cd8:	ldr	r1, [sp]
    4cdc:	add	r0, sp, #24
    4ce0:	bl	1520 <fread@plt>
    4ce4:	mov	r6, r0
    4ce8:	cmp	fp, #0
    4cec:	ble	4db4 <ReadDoubleData+0x1370>
    4cf0:	add	r2, sp, #22
    4cf4:	ldr	r1, [sp, #4]
    4cf8:	mov	r3, r1
    4cfc:	add	r1, r1, fp, lsl #3
    4d00:	ldrh	r0, [r2, #2]!
    4d04:	vmov	s14, r0
    4d08:	vcvt.f64.u32	d7, s14
    4d0c:	vstmia	r3!, {d7}
    4d10:	cmp	r3, r1
    4d14:	bne	4d00 <ReadDoubleData+0x12bc>
    4d18:	b	4db4 <ReadDoubleData+0x1370>
    4d1c:	cmp	fp, #256	; 0x100
    4d20:	ble	4ddc <ReadDoubleData+0x1398>
    4d24:	sub	r3, fp, #256	; 0x100
    4d28:	ldr	r8, [sp, #4]
    4d2c:	mov	r5, #0
    4d30:	mov	r6, r5
    4d34:	add	sl, sp, #24
    4d38:	add	r4, sl, #255	; 0xff
    4d3c:	mov	r9, r7
    4d40:	mov	r7, r3
    4d44:	ldr	r3, [r9]
    4d48:	mov	r2, #256	; 0x100
    4d4c:	ldr	r1, [sp]
    4d50:	mov	r0, sl
    4d54:	bl	1520 <fread@plt>
    4d58:	add	r6, r6, r0
    4d5c:	str	r6, [sp, #8]
    4d60:	sub	r1, sl, #1
    4d64:	mov	r2, r8
    4d68:	mov	r3, r1
    4d6c:	ldrsb	r0, [r3, #1]!
    4d70:	vmov	s14, r0
    4d74:	vcvt.f64.s32	d7, s14
    4d78:	vstmia	r2!, {d7}
    4d7c:	cmp	r3, r4
    4d80:	bne	4d6c <ReadDoubleData+0x1328>
    4d84:	add	r5, r5, #256	; 0x100
    4d88:	add	r8, r8, #2048	; 0x800
    4d8c:	cmp	r5, r7
    4d90:	blt	4d44 <ReadDoubleData+0x1300>
    4d94:	mov	r7, r9
    4d98:	mov	r9, r1
    4d9c:	sub	r3, fp, #256	; 0x100
    4da0:	sub	r3, r3, #1
    4da4:	bic	r3, r3, #255	; 0xff
    4da8:	add	r4, r3, #256	; 0x100
    4dac:	cmp	fp, r4
    4db0:	bgt	4e28 <ReadDoubleData+0x13e4>
    4db4:	ldr	r3, [sp]
    4db8:	mul	r0, r3, r6
    4dbc:	add	sp, sp, #2064	; 0x810
    4dc0:	add	sp, sp, #12
    4dc4:	ldrd	r4, [sp]
    4dc8:	ldrd	r6, [sp, #8]
    4dcc:	ldrd	r8, [sp, #16]
    4dd0:	ldrd	sl, [sp, #24]
    4dd4:	add	sp, sp, #32
    4dd8:	pop	{pc}		; (ldr pc, [sp], #4)
    4ddc:	ldr	r3, [r7]
    4de0:	mov	r2, fp
    4de4:	ldr	r1, [sp]
    4de8:	add	r0, sp, #24
    4dec:	bl	1520 <fread@plt>
    4df0:	mov	r6, r0
    4df4:	cmp	fp, #0
    4df8:	ble	4db4 <ReadDoubleData+0x1370>
    4dfc:	add	r2, sp, #23
    4e00:	ldr	r1, [sp, #4]
    4e04:	mov	r3, r1
    4e08:	add	r1, r1, fp, lsl #3
    4e0c:	ldrsb	r0, [r2, #1]!
    4e10:	vmov	s14, r0
    4e14:	vcvt.f64.s32	d7, s14
    4e18:	vstmia	r3!, {d7}
    4e1c:	cmp	r1, r3
    4e20:	bne	4e0c <ReadDoubleData+0x13c8>
    4e24:	b	4db4 <ReadDoubleData+0x1370>
    4e28:	sub	fp, fp, r4
    4e2c:	ldr	r3, [r7]
    4e30:	mov	r2, fp
    4e34:	ldr	r1, [sp]
    4e38:	add	r0, sp, #24
    4e3c:	bl	1520 <fread@plt>
    4e40:	ldr	r3, [sp, #8]
    4e44:	add	r6, r3, r0
    4e48:	cmp	fp, #0
    4e4c:	ble	4db4 <ReadDoubleData+0x1370>
    4e50:	ldr	r1, [sp, #4]
    4e54:	add	r2, r1, r4, lsl #3
    4e58:	add	r3, fp, r4
    4e5c:	add	r3, r1, r3, lsl #3
    4e60:	ldrsb	r1, [r9, #1]!
    4e64:	vmov	s14, r1
    4e68:	vcvt.f64.s32	d7, s14
    4e6c:	vstmia	r2!, {d7}
    4e70:	cmp	r3, r2
    4e74:	bne	4e60 <ReadDoubleData+0x141c>
    4e78:	b	4db4 <ReadDoubleData+0x1370>
    4e7c:	cmp	fp, #256	; 0x100
    4e80:	ble	4f68 <ReadDoubleData+0x1524>
    4e84:	sub	r3, fp, #256	; 0x100
    4e88:	ldr	r8, [sp, #4]
    4e8c:	mov	r5, #0
    4e90:	mov	r6, r5
    4e94:	add	sl, sp, #24
    4e98:	add	r4, sl, #255	; 0xff
    4e9c:	mov	r9, r7
    4ea0:	mov	r7, r3
    4ea4:	ldr	r3, [r9]
    4ea8:	mov	r2, #256	; 0x100
    4eac:	ldr	r1, [sp]
    4eb0:	mov	r0, sl
    4eb4:	bl	1520 <fread@plt>
    4eb8:	add	r6, r6, r0
    4ebc:	str	r6, [sp, #8]
    4ec0:	sub	r1, sl, #1
    4ec4:	mov	r2, r8
    4ec8:	mov	r3, r1
    4ecc:	ldrb	r0, [r3, #1]!
    4ed0:	vmov	s14, r0
    4ed4:	vcvt.f64.u32	d7, s14
    4ed8:	vstmia	r2!, {d7}
    4edc:	cmp	r3, r4
    4ee0:	bne	4ecc <ReadDoubleData+0x1488>
    4ee4:	add	r5, r5, #256	; 0x100
    4ee8:	add	r8, r8, #2048	; 0x800
    4eec:	cmp	r5, r7
    4ef0:	blt	4ea4 <ReadDoubleData+0x1460>
    4ef4:	mov	r7, r9
    4ef8:	mov	r9, r1
    4efc:	sub	r3, fp, #256	; 0x100
    4f00:	sub	r3, r3, #1
    4f04:	bic	r3, r3, #255	; 0xff
    4f08:	add	r4, r3, #256	; 0x100
    4f0c:	cmp	fp, r4
    4f10:	ble	4db4 <ReadDoubleData+0x1370>
    4f14:	sub	r5, fp, r4
    4f18:	ldr	r3, [r7]
    4f1c:	mov	r2, r5
    4f20:	ldr	r1, [sp]
    4f24:	add	r0, sp, #24
    4f28:	bl	1520 <fread@plt>
    4f2c:	ldr	r3, [sp, #8]
    4f30:	add	r6, r3, r0
    4f34:	cmp	r5, #0
    4f38:	ble	4db4 <ReadDoubleData+0x1370>
    4f3c:	ldr	r1, [sp, #4]
    4f40:	add	r2, r1, r4, lsl #3
    4f44:	add	r3, r5, r4
    4f48:	add	r3, r1, r3, lsl #3
    4f4c:	ldrb	r1, [r9, #1]!
    4f50:	vmov	s14, r1
    4f54:	vcvt.f64.u32	d7, s14
    4f58:	vstmia	r2!, {d7}
    4f5c:	cmp	r3, r2
    4f60:	bne	4f4c <ReadDoubleData+0x1508>
    4f64:	b	4db4 <ReadDoubleData+0x1370>
    4f68:	ldr	r3, [r7]
    4f6c:	mov	r2, fp
    4f70:	ldr	r1, [sp]
    4f74:	add	r0, sp, #24
    4f78:	bl	1520 <fread@plt>
    4f7c:	mov	r6, r0
    4f80:	cmp	fp, #0
    4f84:	ble	4db4 <ReadDoubleData+0x1370>
    4f88:	add	r2, sp, #23
    4f8c:	ldr	r1, [sp, #4]
    4f90:	mov	r3, r1
    4f94:	add	r1, r1, fp, lsl #3
    4f98:	ldrb	r0, [r2, #1]!
    4f9c:	vmov	s14, r0
    4fa0:	vcvt.f64.u32	d7, s14
    4fa4:	vstmia	r3!, {d7}
    4fa8:	cmp	r1, r3
    4fac:	bne	4f98 <ReadDoubleData+0x1554>
    4fb0:	b	4db4 <ReadDoubleData+0x1370>
    4fb4:	mov	r0, #0
    4fb8:	bx	lr
    4fbc:	mov	r0, #0
    4fc0:	b	4dbc <ReadDoubleData+0x1378>

00004fc4 <ReadCompressedDoubleData>:
    4fc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4fc8:	strd	r6, [sp, #8]
    4fcc:	strd	r8, [sp, #16]
    4fd0:	strd	sl, [sp, #24]
    4fd4:	str	lr, [sp, #32]
    4fd8:	sub	sp, sp, #1040	; 0x410
    4fdc:	sub	sp, sp, #12
    4fe0:	str	r0, [sp, #4]
    4fe4:	str	r1, [sp, #8]
    4fe8:	str	r2, [sp, #12]
    4fec:	mov	r4, r3
    4ff0:	ldr	r7, [sp, #1088]	; 0x440
    4ff4:	mov	r0, r3
    4ff8:	bl	1598 <Mat_SizeOf@plt>
    4ffc:	mov	fp, r0
    5000:	sub	r4, r4, #1
    5004:	cmp	r4, #12
    5008:	addls	pc, pc, r4, lsl #2
    500c:	b	6358 <ReadCompressedDoubleData+0x1394>
    5010:	b	6240 <ReadCompressedDoubleData+0x127c>
    5014:	b	6108 <ReadCompressedDoubleData+0x1144>
    5018:	b	5c40 <ReadCompressedDoubleData+0xc7c>
    501c:	b	5ea4 <ReadCompressedDoubleData+0xee0>
    5020:	b	5788 <ReadCompressedDoubleData+0x7c4>
    5024:	b	59e4 <ReadCompressedDoubleData+0xa20>
    5028:	b	50a4 <ReadCompressedDoubleData+0xe0>
    502c:	b	6358 <ReadCompressedDoubleData+0x1394>
    5030:	b	5044 <ReadCompressedDoubleData+0x80>
    5034:	b	6358 <ReadCompressedDoubleData+0x1394>
    5038:	b	6358 <ReadCompressedDoubleData+0x1394>
    503c:	b	52e8 <ReadCompressedDoubleData+0x324>
    5040:	b	5538 <ReadCompressedDoubleData+0x574>
    5044:	ldr	r0, [sp, #4]
    5048:	ldr	r3, [r0, #20]
    504c:	cmp	r3, #0
    5050:	beq	508c <ReadCompressedDoubleData+0xc8>
    5054:	mul	r3, fp, r7
    5058:	ldr	r4, [sp, #12]
    505c:	mov	r2, r4
    5060:	ldr	r1, [sp, #8]
    5064:	bl	333c <InflateData>
    5068:	cmp	r7, #0
    506c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5070:	add	r5, r4, r7, lsl #3
    5074:	mov	r0, r4
    5078:	bl	1974 <Mat_doubleSwap>
    507c:	add	r4, r4, #8
    5080:	cmp	r4, r5
    5084:	bne	5074 <ReadCompressedDoubleData+0xb0>
    5088:	b	61d4 <ReadCompressedDoubleData+0x1210>
    508c:	mul	r3, fp, r7
    5090:	ldr	r2, [sp, #12]
    5094:	ldr	r1, [sp, #8]
    5098:	ldr	r0, [sp, #4]
    509c:	bl	333c <InflateData>
    50a0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    50a4:	ldr	r3, [sp, #4]
    50a8:	ldr	r5, [r3, #20]
    50ac:	cmp	r5, #0
    50b0:	beq	51e4 <ReadCompressedDoubleData+0x220>
    50b4:	cmp	r7, #256	; 0x100
    50b8:	ble	5198 <ReadCompressedDoubleData+0x1d4>
    50bc:	sub	r3, r7, #256	; 0x100
    50c0:	lsl	r2, r0, #8
    50c4:	str	r2, [sp, #16]
    50c8:	ldr	sl, [sp, #12]
    50cc:	mov	r9, #0
    50d0:	add	r2, sp, #24
    50d4:	str	r2, [sp, #20]
    50d8:	add	r6, sp, #1040	; 0x410
    50dc:	add	r6, r6, #8
    50e0:	str	r7, [sp, #1088]	; 0x440
    50e4:	mov	r7, r3
    50e8:	ldr	r3, [sp, #16]
    50ec:	ldr	r4, [sp, #20]
    50f0:	mov	r2, r4
    50f4:	ldr	r1, [sp, #8]
    50f8:	ldr	r0, [sp, #4]
    50fc:	bl	333c <InflateData>
    5100:	mov	r8, r4
    5104:	mov	r5, sl
    5108:	mov	r0, r4
    510c:	bl	1944 <Mat_floatSwap>
    5110:	vcvt.f64.f32	d0, s0
    5114:	vstmia	r5!, {d0}
    5118:	add	r4, r4, #4
    511c:	cmp	r4, r6
    5120:	bne	5108 <ReadCompressedDoubleData+0x144>
    5124:	add	r9, r9, #256	; 0x100
    5128:	add	sl, sl, #2048	; 0x800
    512c:	cmp	r7, r9
    5130:	bgt	50e8 <ReadCompressedDoubleData+0x124>
    5134:	ldr	r7, [sp, #1088]	; 0x440
    5138:	sub	r3, r7, #256	; 0x100
    513c:	sub	r3, r3, #1
    5140:	bic	r3, r3, #255	; 0xff
    5144:	add	r4, r3, #256	; 0x100
    5148:	sub	r7, r7, r4
    514c:	mul	r3, fp, r7
    5150:	add	r2, sp, #24
    5154:	ldr	r1, [sp, #8]
    5158:	ldr	r0, [sp, #4]
    515c:	bl	333c <InflateData>
    5160:	cmp	r7, #0
    5164:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5168:	ldr	r3, [sp, #12]
    516c:	add	r5, r3, r4, lsl #3
    5170:	add	r4, r7, r4
    5174:	add	r4, r3, r4, lsl #3
    5178:	mov	r0, r8
    517c:	bl	1944 <Mat_floatSwap>
    5180:	vcvt.f64.f32	d0, s0
    5184:	vstmia	r5!, {d0}
    5188:	add	r8, r8, #4
    518c:	cmp	r5, r4
    5190:	bne	5178 <ReadCompressedDoubleData+0x1b4>
    5194:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5198:	mul	r3, r0, r7
    519c:	add	r2, sp, #24
    51a0:	ldr	r1, [sp, #8]
    51a4:	ldr	r0, [sp, #4]
    51a8:	bl	333c <InflateData>
    51ac:	cmp	r7, #0
    51b0:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    51b4:	add	r5, sp, #24
    51b8:	ldr	r3, [sp, #12]
    51bc:	mov	r4, r3
    51c0:	add	r6, r3, r7, lsl #3
    51c4:	mov	r0, r5
    51c8:	bl	1944 <Mat_floatSwap>
    51cc:	vcvt.f64.f32	d0, s0
    51d0:	vstmia	r4!, {d0}
    51d4:	add	r5, r5, #4
    51d8:	cmp	r4, r6
    51dc:	bne	51c4 <ReadCompressedDoubleData+0x200>
    51e0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    51e4:	cmp	r7, #256	; 0x100
    51e8:	ble	52a4 <ReadCompressedDoubleData+0x2e0>
    51ec:	sub	sl, r7, #256	; 0x100
    51f0:	lsl	r3, r0, #8
    51f4:	str	r3, [sp, #16]
    51f8:	ldr	r8, [sp, #12]
    51fc:	add	r6, sp, #24
    5200:	add	r4, sp, #1040	; 0x410
    5204:	add	r4, r4, #8
    5208:	ldr	r3, [sp, #16]
    520c:	mov	r2, r6
    5210:	ldr	r1, [sp, #8]
    5214:	ldr	r0, [sp, #4]
    5218:	bl	333c <InflateData>
    521c:	mov	r9, r6
    5220:	mov	r2, r8
    5224:	mov	r3, r6
    5228:	vldmia	r3!, {s14}
    522c:	vcvt.f64.f32	d7, s14
    5230:	vstmia	r2!, {d7}
    5234:	cmp	r3, r4
    5238:	bne	5228 <ReadCompressedDoubleData+0x264>
    523c:	add	r5, r5, #256	; 0x100
    5240:	add	r8, r8, #2048	; 0x800
    5244:	cmp	sl, r5
    5248:	bgt	5208 <ReadCompressedDoubleData+0x244>
    524c:	sub	r3, r7, #256	; 0x100
    5250:	sub	r3, r3, #1
    5254:	bic	r3, r3, #255	; 0xff
    5258:	add	r4, r3, #256	; 0x100
    525c:	sub	r7, r7, r4
    5260:	mul	r3, fp, r7
    5264:	add	r2, sp, #24
    5268:	ldr	r1, [sp, #8]
    526c:	ldr	r0, [sp, #4]
    5270:	bl	333c <InflateData>
    5274:	cmp	r7, #0
    5278:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    527c:	ldr	r1, [sp, #12]
    5280:	add	r2, r1, r4, lsl #3
    5284:	add	r3, r7, r4
    5288:	add	r3, r1, r3, lsl #3
    528c:	vldmia	r9!, {s14}
    5290:	vcvt.f64.f32	d7, s14
    5294:	vstmia	r2!, {d7}
    5298:	cmp	r2, r3
    529c:	bne	528c <ReadCompressedDoubleData+0x2c8>
    52a0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    52a4:	mul	r3, r0, r7
    52a8:	add	r2, sp, #24
    52ac:	ldr	r1, [sp, #8]
    52b0:	ldr	r0, [sp, #4]
    52b4:	bl	333c <InflateData>
    52b8:	cmp	r7, #0
    52bc:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    52c0:	add	r2, sp, #24
    52c4:	ldr	r1, [sp, #12]
    52c8:	mov	r3, r1
    52cc:	add	r1, r1, r7, lsl #3
    52d0:	vldmia	r2!, {s14}
    52d4:	vcvt.f64.f32	d7, s14
    52d8:	vstmia	r3!, {d7}
    52dc:	cmp	r3, r1
    52e0:	bne	52d0 <ReadCompressedDoubleData+0x30c>
    52e4:	b	61d4 <ReadCompressedDoubleData+0x1210>
    52e8:	ldr	r3, [sp, #4]
    52ec:	ldr	r9, [r3, #20]
    52f0:	cmp	r9, #0
    52f4:	beq	5424 <ReadCompressedDoubleData+0x460>
    52f8:	cmp	r7, #128	; 0x80
    52fc:	ble	53d8 <ReadCompressedDoubleData+0x414>
    5300:	sub	r3, r7, #128	; 0x80
    5304:	lsl	r2, r0, #7
    5308:	str	r2, [sp, #16]
    530c:	ldr	sl, [sp, #12]
    5310:	mov	r9, #0
    5314:	add	r2, sp, #24
    5318:	str	r2, [sp, #20]
    531c:	add	r6, sp, #1040	; 0x410
    5320:	add	r6, r6, #8
    5324:	str	r7, [sp, #1088]	; 0x440
    5328:	mov	r7, r3
    532c:	ldr	r3, [sp, #16]
    5330:	ldr	r4, [sp, #20]
    5334:	mov	r2, r4
    5338:	ldr	r1, [sp, #8]
    533c:	ldr	r0, [sp, #4]
    5340:	bl	333c <InflateData>
    5344:	mov	r8, r4
    5348:	mov	r5, sl
    534c:	mov	r0, r4
    5350:	bl	17ec <Mat_int64Swap>
    5354:	bl	4ed5c <__aeabi_l2d>
    5358:	strd	r0, [r5], #8
    535c:	add	r4, r4, #8
    5360:	cmp	r4, r6
    5364:	bne	534c <ReadCompressedDoubleData+0x388>
    5368:	add	r9, r9, #128	; 0x80
    536c:	add	sl, sl, #1024	; 0x400
    5370:	cmp	r7, r9
    5374:	bgt	532c <ReadCompressedDoubleData+0x368>
    5378:	ldr	r7, [sp, #1088]	; 0x440
    537c:	sub	r4, r7, #129	; 0x81
    5380:	bic	r4, r4, #127	; 0x7f
    5384:	add	r4, r4, #128	; 0x80
    5388:	sub	r7, r7, r4
    538c:	mul	r3, fp, r7
    5390:	add	r2, sp, #24
    5394:	ldr	r1, [sp, #8]
    5398:	ldr	r0, [sp, #4]
    539c:	bl	333c <InflateData>
    53a0:	cmp	r7, #0
    53a4:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    53a8:	ldr	r3, [sp, #12]
    53ac:	add	r5, r3, r4, lsl #3
    53b0:	add	r4, r7, r4
    53b4:	add	r4, r3, r4, lsl #3
    53b8:	mov	r0, r8
    53bc:	bl	17ec <Mat_int64Swap>
    53c0:	bl	4ed5c <__aeabi_l2d>
    53c4:	strd	r0, [r5], #8
    53c8:	add	r8, r8, #8
    53cc:	cmp	r5, r4
    53d0:	bne	53b8 <ReadCompressedDoubleData+0x3f4>
    53d4:	b	61d4 <ReadCompressedDoubleData+0x1210>
    53d8:	mul	r3, r0, r7
    53dc:	add	r2, sp, #24
    53e0:	ldr	r1, [sp, #8]
    53e4:	ldr	r0, [sp, #4]
    53e8:	bl	333c <InflateData>
    53ec:	cmp	r7, #0
    53f0:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    53f4:	add	r5, sp, #24
    53f8:	ldr	r3, [sp, #12]
    53fc:	mov	r4, r3
    5400:	add	r6, r3, r7, lsl #3
    5404:	mov	r0, r5
    5408:	bl	17ec <Mat_int64Swap>
    540c:	bl	4ed5c <__aeabi_l2d>
    5410:	strd	r0, [r4], #8
    5414:	add	r5, r5, #8
    5418:	cmp	r4, r6
    541c:	bne	5404 <ReadCompressedDoubleData+0x440>
    5420:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5424:	cmp	r7, #128	; 0x80
    5428:	ble	54f4 <ReadCompressedDoubleData+0x530>
    542c:	sub	r3, r7, #128	; 0x80
    5430:	lsl	r2, r0, #7
    5434:	str	r2, [sp, #16]
    5438:	ldr	sl, [sp, #12]
    543c:	add	r2, sp, #24
    5440:	add	r6, sp, #1040	; 0x410
    5444:	str	r0, [sp, #20]
    5448:	str	r7, [sp, #1088]	; 0x440
    544c:	mov	r7, r3
    5450:	mov	fp, r2
    5454:	ldr	r3, [sp, #16]
    5458:	mov	r2, fp
    545c:	ldr	r1, [sp, #8]
    5460:	ldr	r0, [sp, #4]
    5464:	bl	333c <InflateData>
    5468:	sub	r8, fp, #8
    546c:	mov	r5, sl
    5470:	mov	r4, r8
    5474:	ldrd	r0, [r4, #8]!
    5478:	bl	4ed5c <__aeabi_l2d>
    547c:	strd	r0, [r5], #8
    5480:	cmp	r4, r6
    5484:	bne	5474 <ReadCompressedDoubleData+0x4b0>
    5488:	add	r9, r9, #128	; 0x80
    548c:	add	sl, sl, #1024	; 0x400
    5490:	cmp	r7, r9
    5494:	bgt	5454 <ReadCompressedDoubleData+0x490>
    5498:	ldr	fp, [sp, #20]
    549c:	ldr	r7, [sp, #1088]	; 0x440
    54a0:	sub	r4, r7, #129	; 0x81
    54a4:	bic	r4, r4, #127	; 0x7f
    54a8:	add	r4, r4, #128	; 0x80
    54ac:	sub	r7, r7, r4
    54b0:	mul	r3, fp, r7
    54b4:	add	r2, sp, #24
    54b8:	ldr	r1, [sp, #8]
    54bc:	ldr	r0, [sp, #4]
    54c0:	bl	333c <InflateData>
    54c4:	cmp	r7, #0
    54c8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    54cc:	ldr	r3, [sp, #12]
    54d0:	add	r5, r3, r4, lsl #3
    54d4:	add	r4, r7, r4
    54d8:	add	r4, r3, r4, lsl #3
    54dc:	ldrd	r0, [r8, #8]!
    54e0:	bl	4ed5c <__aeabi_l2d>
    54e4:	strd	r0, [r5], #8
    54e8:	cmp	r5, r4
    54ec:	bne	54dc <ReadCompressedDoubleData+0x518>
    54f0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    54f4:	mul	r3, r0, r7
    54f8:	add	r2, sp, #24
    54fc:	ldr	r1, [sp, #8]
    5500:	ldr	r0, [sp, #4]
    5504:	bl	333c <InflateData>
    5508:	cmp	r7, #0
    550c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5510:	add	r5, sp, #16
    5514:	ldr	r3, [sp, #12]
    5518:	mov	r4, r3
    551c:	add	r6, r3, r7, lsl #3
    5520:	ldrd	r0, [r5, #8]!
    5524:	bl	4ed5c <__aeabi_l2d>
    5528:	strd	r0, [r4], #8
    552c:	cmp	r4, r6
    5530:	bne	5520 <ReadCompressedDoubleData+0x55c>
    5534:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5538:	ldr	r3, [sp, #4]
    553c:	ldr	r9, [r3, #20]
    5540:	cmp	r9, #0
    5544:	beq	5674 <ReadCompressedDoubleData+0x6b0>
    5548:	cmp	r7, #128	; 0x80
    554c:	ble	5628 <ReadCompressedDoubleData+0x664>
    5550:	sub	r3, r7, #128	; 0x80
    5554:	lsl	r2, r0, #7
    5558:	str	r2, [sp, #16]
    555c:	ldr	sl, [sp, #12]
    5560:	mov	r9, #0
    5564:	add	r2, sp, #24
    5568:	str	r2, [sp, #20]
    556c:	add	r6, sp, #1040	; 0x410
    5570:	add	r6, r6, #8
    5574:	str	r7, [sp, #1088]	; 0x440
    5578:	mov	r7, r3
    557c:	ldr	r3, [sp, #16]
    5580:	ldr	r4, [sp, #20]
    5584:	mov	r2, r4
    5588:	ldr	r1, [sp, #8]
    558c:	ldr	r0, [sp, #4]
    5590:	bl	333c <InflateData>
    5594:	mov	r8, r4
    5598:	mov	r5, sl
    559c:	mov	r0, r4
    55a0:	bl	1848 <Mat_uint64Swap>
    55a4:	bl	4ed48 <__aeabi_ul2d>
    55a8:	strd	r0, [r5], #8
    55ac:	add	r4, r4, #8
    55b0:	cmp	r4, r6
    55b4:	bne	559c <ReadCompressedDoubleData+0x5d8>
    55b8:	add	r9, r9, #128	; 0x80
    55bc:	add	sl, sl, #1024	; 0x400
    55c0:	cmp	r7, r9
    55c4:	bgt	557c <ReadCompressedDoubleData+0x5b8>
    55c8:	ldr	r7, [sp, #1088]	; 0x440
    55cc:	sub	r4, r7, #129	; 0x81
    55d0:	bic	r4, r4, #127	; 0x7f
    55d4:	add	r4, r4, #128	; 0x80
    55d8:	sub	r7, r7, r4
    55dc:	mul	r3, fp, r7
    55e0:	add	r2, sp, #24
    55e4:	ldr	r1, [sp, #8]
    55e8:	ldr	r0, [sp, #4]
    55ec:	bl	333c <InflateData>
    55f0:	cmp	r7, #0
    55f4:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    55f8:	ldr	r3, [sp, #12]
    55fc:	add	r5, r3, r4, lsl #3
    5600:	add	r4, r7, r4
    5604:	add	r4, r3, r4, lsl #3
    5608:	mov	r0, r8
    560c:	bl	1848 <Mat_uint64Swap>
    5610:	bl	4ed48 <__aeabi_ul2d>
    5614:	strd	r0, [r5], #8
    5618:	add	r8, r8, #8
    561c:	cmp	r5, r4
    5620:	bne	5608 <ReadCompressedDoubleData+0x644>
    5624:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5628:	mul	r3, r0, r7
    562c:	add	r2, sp, #24
    5630:	ldr	r1, [sp, #8]
    5634:	ldr	r0, [sp, #4]
    5638:	bl	333c <InflateData>
    563c:	cmp	r7, #0
    5640:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5644:	add	r5, sp, #24
    5648:	ldr	r3, [sp, #12]
    564c:	mov	r4, r3
    5650:	add	r6, r3, r7, lsl #3
    5654:	mov	r0, r5
    5658:	bl	1848 <Mat_uint64Swap>
    565c:	bl	4ed48 <__aeabi_ul2d>
    5660:	strd	r0, [r4], #8
    5664:	add	r5, r5, #8
    5668:	cmp	r4, r6
    566c:	bne	5654 <ReadCompressedDoubleData+0x690>
    5670:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5674:	cmp	r7, #128	; 0x80
    5678:	ble	5744 <ReadCompressedDoubleData+0x780>
    567c:	sub	r3, r7, #128	; 0x80
    5680:	lsl	r2, r0, #7
    5684:	str	r2, [sp, #16]
    5688:	ldr	sl, [sp, #12]
    568c:	add	r2, sp, #24
    5690:	add	r6, sp, #1040	; 0x410
    5694:	str	r0, [sp, #20]
    5698:	str	r7, [sp, #1088]	; 0x440
    569c:	mov	r7, r3
    56a0:	mov	fp, r2
    56a4:	ldr	r3, [sp, #16]
    56a8:	mov	r2, fp
    56ac:	ldr	r1, [sp, #8]
    56b0:	ldr	r0, [sp, #4]
    56b4:	bl	333c <InflateData>
    56b8:	sub	r8, fp, #8
    56bc:	mov	r5, sl
    56c0:	mov	r4, r8
    56c4:	ldrd	r0, [r4, #8]!
    56c8:	bl	4ed48 <__aeabi_ul2d>
    56cc:	strd	r0, [r5], #8
    56d0:	cmp	r4, r6
    56d4:	bne	56c4 <ReadCompressedDoubleData+0x700>
    56d8:	add	r9, r9, #128	; 0x80
    56dc:	add	sl, sl, #1024	; 0x400
    56e0:	cmp	r7, r9
    56e4:	bgt	56a4 <ReadCompressedDoubleData+0x6e0>
    56e8:	ldr	fp, [sp, #20]
    56ec:	ldr	r7, [sp, #1088]	; 0x440
    56f0:	sub	r4, r7, #129	; 0x81
    56f4:	bic	r4, r4, #127	; 0x7f
    56f8:	add	r4, r4, #128	; 0x80
    56fc:	sub	r7, r7, r4
    5700:	mul	r3, fp, r7
    5704:	add	r2, sp, #24
    5708:	ldr	r1, [sp, #8]
    570c:	ldr	r0, [sp, #4]
    5710:	bl	333c <InflateData>
    5714:	cmp	r7, #0
    5718:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    571c:	ldr	r3, [sp, #12]
    5720:	add	r5, r3, r4, lsl #3
    5724:	add	r4, r7, r4
    5728:	add	r4, r3, r4, lsl #3
    572c:	ldrd	r0, [r8, #8]!
    5730:	bl	4ed48 <__aeabi_ul2d>
    5734:	strd	r0, [r5], #8
    5738:	cmp	r5, r4
    573c:	bne	572c <ReadCompressedDoubleData+0x768>
    5740:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5744:	mul	r3, r0, r7
    5748:	add	r2, sp, #24
    574c:	ldr	r1, [sp, #8]
    5750:	ldr	r0, [sp, #4]
    5754:	bl	333c <InflateData>
    5758:	cmp	r7, #0
    575c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5760:	add	r5, sp, #16
    5764:	ldr	r3, [sp, #12]
    5768:	mov	r4, r3
    576c:	add	r6, r3, r7, lsl #3
    5770:	ldrd	r0, [r5, #8]!
    5774:	bl	4ed48 <__aeabi_ul2d>
    5778:	strd	r0, [r4], #8
    577c:	cmp	r4, r6
    5780:	bne	5770 <ReadCompressedDoubleData+0x7ac>
    5784:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5788:	ldr	r3, [sp, #4]
    578c:	ldr	r6, [r3, #20]
    5790:	cmp	r6, #0
    5794:	beq	58d4 <ReadCompressedDoubleData+0x910>
    5798:	cmp	r7, #256	; 0x100
    579c:	ble	5884 <ReadCompressedDoubleData+0x8c0>
    57a0:	sub	r3, r7, #256	; 0x100
    57a4:	lsl	r2, r0, #8
    57a8:	str	r2, [sp, #16]
    57ac:	ldr	sl, [sp, #12]
    57b0:	mov	r9, #0
    57b4:	add	r2, sp, #24
    57b8:	str	r2, [sp, #20]
    57bc:	add	r6, sp, #1040	; 0x410
    57c0:	add	r6, r6, #8
    57c4:	str	r7, [sp, #1088]	; 0x440
    57c8:	mov	r7, r3
    57cc:	ldr	r3, [sp, #16]
    57d0:	ldr	r4, [sp, #20]
    57d4:	mov	r2, r4
    57d8:	ldr	r1, [sp, #8]
    57dc:	ldr	r0, [sp, #4]
    57e0:	bl	333c <InflateData>
    57e4:	mov	r8, r4
    57e8:	mov	r5, sl
    57ec:	mov	r0, r4
    57f0:	bl	18a4 <Mat_int32Swap>
    57f4:	vmov	s15, r0
    57f8:	vcvt.f64.s32	d7, s15
    57fc:	vstmia	r5!, {d7}
    5800:	add	r4, r4, #4
    5804:	cmp	r4, r6
    5808:	bne	57ec <ReadCompressedDoubleData+0x828>
    580c:	add	r9, r9, #256	; 0x100
    5810:	add	sl, sl, #2048	; 0x800
    5814:	cmp	r7, r9
    5818:	bgt	57cc <ReadCompressedDoubleData+0x808>
    581c:	ldr	r7, [sp, #1088]	; 0x440
    5820:	sub	r3, r7, #256	; 0x100
    5824:	sub	r3, r3, #1
    5828:	bic	r3, r3, #255	; 0xff
    582c:	add	r4, r3, #256	; 0x100
    5830:	sub	r7, r7, r4
    5834:	mul	r3, fp, r7
    5838:	add	r2, sp, #24
    583c:	ldr	r1, [sp, #8]
    5840:	ldr	r0, [sp, #4]
    5844:	bl	333c <InflateData>
    5848:	cmp	r7, #0
    584c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5850:	ldr	r3, [sp, #12]
    5854:	add	r5, r3, r4, lsl #3
    5858:	add	r4, r7, r4
    585c:	add	r4, r3, r4, lsl #3
    5860:	mov	r0, r8
    5864:	bl	18a4 <Mat_int32Swap>
    5868:	vmov	s15, r0
    586c:	vcvt.f64.s32	d7, s15
    5870:	vstmia	r5!, {d7}
    5874:	add	r8, r8, #4
    5878:	cmp	r5, r4
    587c:	bne	5860 <ReadCompressedDoubleData+0x89c>
    5880:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5884:	mul	r3, r0, r7
    5888:	add	r2, sp, #24
    588c:	ldr	r1, [sp, #8]
    5890:	ldr	r0, [sp, #4]
    5894:	bl	333c <InflateData>
    5898:	cmp	r7, #0
    589c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    58a0:	add	r5, sp, #24
    58a4:	ldr	r3, [sp, #12]
    58a8:	mov	r4, r3
    58ac:	add	r6, r3, r7, lsl #3
    58b0:	mov	r0, r5
    58b4:	bl	18a4 <Mat_int32Swap>
    58b8:	vmov	s15, r0
    58bc:	vcvt.f64.s32	d7, s15
    58c0:	vstmia	r4!, {d7}
    58c4:	add	r5, r5, #4
    58c8:	cmp	r4, r6
    58cc:	bne	58b0 <ReadCompressedDoubleData+0x8ec>
    58d0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    58d4:	cmp	r7, #256	; 0x100
    58d8:	ble	599c <ReadCompressedDoubleData+0x9d8>
    58dc:	sub	sl, r7, #256	; 0x100
    58e0:	lsl	r3, r0, #8
    58e4:	str	r3, [sp, #16]
    58e8:	ldr	r8, [sp, #12]
    58ec:	add	r9, sp, #24
    58f0:	add	r4, sp, #1040	; 0x410
    58f4:	add	r4, r4, #4
    58f8:	ldr	r3, [sp, #16]
    58fc:	mov	r2, r9
    5900:	ldr	r1, [sp, #8]
    5904:	ldr	r0, [sp, #4]
    5908:	bl	333c <InflateData>
    590c:	sub	r5, r9, #4
    5910:	mov	r2, r8
    5914:	mov	r3, r5
    5918:	ldr	r1, [r3, #4]!
    591c:	vmov	s14, r1
    5920:	vcvt.f64.s32	d7, s14
    5924:	vstmia	r2!, {d7}
    5928:	cmp	r3, r4
    592c:	bne	5918 <ReadCompressedDoubleData+0x954>
    5930:	add	r6, r6, #256	; 0x100
    5934:	add	r8, r8, #2048	; 0x800
    5938:	cmp	sl, r6
    593c:	bgt	58f8 <ReadCompressedDoubleData+0x934>
    5940:	sub	r3, r7, #256	; 0x100
    5944:	sub	r3, r3, #1
    5948:	bic	r3, r3, #255	; 0xff
    594c:	add	r4, r3, #256	; 0x100
    5950:	sub	r7, r7, r4
    5954:	mul	r3, fp, r7
    5958:	add	r2, sp, #24
    595c:	ldr	r1, [sp, #8]
    5960:	ldr	r0, [sp, #4]
    5964:	bl	333c <InflateData>
    5968:	cmp	r7, #0
    596c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5970:	ldr	r1, [sp, #12]
    5974:	add	r2, r1, r4, lsl #3
    5978:	add	r3, r7, r4
    597c:	add	r3, r1, r3, lsl #3
    5980:	ldr	r1, [r5, #4]!
    5984:	vmov	s14, r1
    5988:	vcvt.f64.s32	d7, s14
    598c:	vstmia	r2!, {d7}
    5990:	cmp	r2, r3
    5994:	bne	5980 <ReadCompressedDoubleData+0x9bc>
    5998:	b	61d4 <ReadCompressedDoubleData+0x1210>
    599c:	mul	r3, r0, r7
    59a0:	add	r2, sp, #24
    59a4:	ldr	r1, [sp, #8]
    59a8:	ldr	r0, [sp, #4]
    59ac:	bl	333c <InflateData>
    59b0:	cmp	r7, #0
    59b4:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    59b8:	add	r2, sp, #20
    59bc:	ldr	r1, [sp, #12]
    59c0:	mov	r3, r1
    59c4:	add	r1, r1, r7, lsl #3
    59c8:	ldr	r0, [r2, #4]!
    59cc:	vmov	s14, r0
    59d0:	vcvt.f64.s32	d7, s14
    59d4:	vstmia	r3!, {d7}
    59d8:	cmp	r3, r1
    59dc:	bne	59c8 <ReadCompressedDoubleData+0xa04>
    59e0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    59e4:	ldr	r3, [sp, #4]
    59e8:	ldr	r6, [r3, #20]
    59ec:	cmp	r6, #0
    59f0:	beq	5b30 <ReadCompressedDoubleData+0xb6c>
    59f4:	cmp	r7, #256	; 0x100
    59f8:	ble	5ae0 <ReadCompressedDoubleData+0xb1c>
    59fc:	sub	r3, r7, #256	; 0x100
    5a00:	lsl	r2, r0, #8
    5a04:	str	r2, [sp, #16]
    5a08:	ldr	sl, [sp, #12]
    5a0c:	mov	r9, #0
    5a10:	add	r2, sp, #24
    5a14:	str	r2, [sp, #20]
    5a18:	add	r6, sp, #1040	; 0x410
    5a1c:	add	r6, r6, #8
    5a20:	str	r7, [sp, #1088]	; 0x440
    5a24:	mov	r7, r3
    5a28:	ldr	r3, [sp, #16]
    5a2c:	ldr	r4, [sp, #20]
    5a30:	mov	r2, r4
    5a34:	ldr	r1, [sp, #8]
    5a38:	ldr	r0, [sp, #4]
    5a3c:	bl	333c <InflateData>
    5a40:	mov	r8, r4
    5a44:	mov	r5, sl
    5a48:	mov	r0, r4
    5a4c:	bl	18d4 <Mat_uint32Swap>
    5a50:	vmov	s15, r0
    5a54:	vcvt.f64.u32	d7, s15
    5a58:	vstmia	r5!, {d7}
    5a5c:	add	r4, r4, #4
    5a60:	cmp	r4, r6
    5a64:	bne	5a48 <ReadCompressedDoubleData+0xa84>
    5a68:	add	r9, r9, #256	; 0x100
    5a6c:	add	sl, sl, #2048	; 0x800
    5a70:	cmp	r7, r9
    5a74:	bgt	5a28 <ReadCompressedDoubleData+0xa64>
    5a78:	ldr	r7, [sp, #1088]	; 0x440
    5a7c:	sub	r3, r7, #256	; 0x100
    5a80:	sub	r3, r3, #1
    5a84:	bic	r3, r3, #255	; 0xff
    5a88:	add	r4, r3, #256	; 0x100
    5a8c:	sub	r7, r7, r4
    5a90:	mul	r3, fp, r7
    5a94:	add	r2, sp, #24
    5a98:	ldr	r1, [sp, #8]
    5a9c:	ldr	r0, [sp, #4]
    5aa0:	bl	333c <InflateData>
    5aa4:	cmp	r7, #0
    5aa8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5aac:	ldr	r3, [sp, #12]
    5ab0:	add	r5, r3, r4, lsl #3
    5ab4:	add	r4, r7, r4
    5ab8:	add	r4, r3, r4, lsl #3
    5abc:	mov	r0, r8
    5ac0:	bl	18d4 <Mat_uint32Swap>
    5ac4:	vmov	s15, r0
    5ac8:	vcvt.f64.u32	d7, s15
    5acc:	vstmia	r5!, {d7}
    5ad0:	add	r8, r8, #4
    5ad4:	cmp	r5, r4
    5ad8:	bne	5abc <ReadCompressedDoubleData+0xaf8>
    5adc:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5ae0:	mul	r3, r0, r7
    5ae4:	add	r2, sp, #24
    5ae8:	ldr	r1, [sp, #8]
    5aec:	ldr	r0, [sp, #4]
    5af0:	bl	333c <InflateData>
    5af4:	cmp	r7, #0
    5af8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5afc:	add	r5, sp, #24
    5b00:	ldr	r3, [sp, #12]
    5b04:	mov	r4, r3
    5b08:	add	r6, r3, r7, lsl #3
    5b0c:	mov	r0, r5
    5b10:	bl	18d4 <Mat_uint32Swap>
    5b14:	vmov	s15, r0
    5b18:	vcvt.f64.u32	d7, s15
    5b1c:	vstmia	r4!, {d7}
    5b20:	add	r5, r5, #4
    5b24:	cmp	r4, r6
    5b28:	bne	5b0c <ReadCompressedDoubleData+0xb48>
    5b2c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5b30:	cmp	r7, #256	; 0x100
    5b34:	ble	5bf8 <ReadCompressedDoubleData+0xc34>
    5b38:	sub	sl, r7, #256	; 0x100
    5b3c:	lsl	r3, r0, #8
    5b40:	str	r3, [sp, #16]
    5b44:	ldr	r8, [sp, #12]
    5b48:	add	r9, sp, #24
    5b4c:	add	r4, sp, #1040	; 0x410
    5b50:	add	r4, r4, #4
    5b54:	ldr	r3, [sp, #16]
    5b58:	mov	r2, r9
    5b5c:	ldr	r1, [sp, #8]
    5b60:	ldr	r0, [sp, #4]
    5b64:	bl	333c <InflateData>
    5b68:	sub	r5, r9, #4
    5b6c:	mov	r2, r8
    5b70:	mov	r3, r5
    5b74:	ldr	r1, [r3, #4]!
    5b78:	vmov	s14, r1
    5b7c:	vcvt.f64.u32	d7, s14
    5b80:	vstmia	r2!, {d7}
    5b84:	cmp	r3, r4
    5b88:	bne	5b74 <ReadCompressedDoubleData+0xbb0>
    5b8c:	add	r6, r6, #256	; 0x100
    5b90:	add	r8, r8, #2048	; 0x800
    5b94:	cmp	sl, r6
    5b98:	bgt	5b54 <ReadCompressedDoubleData+0xb90>
    5b9c:	sub	r3, r7, #256	; 0x100
    5ba0:	sub	r3, r3, #1
    5ba4:	bic	r3, r3, #255	; 0xff
    5ba8:	add	r4, r3, #256	; 0x100
    5bac:	sub	r7, r7, r4
    5bb0:	mul	r3, fp, r7
    5bb4:	add	r2, sp, #24
    5bb8:	ldr	r1, [sp, #8]
    5bbc:	ldr	r0, [sp, #4]
    5bc0:	bl	333c <InflateData>
    5bc4:	cmp	r7, #0
    5bc8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5bcc:	ldr	r1, [sp, #12]
    5bd0:	add	r2, r1, r4, lsl #3
    5bd4:	add	r3, r7, r4
    5bd8:	add	r3, r1, r3, lsl #3
    5bdc:	ldr	r1, [r5, #4]!
    5be0:	vmov	s14, r1
    5be4:	vcvt.f64.u32	d7, s14
    5be8:	vstmia	r2!, {d7}
    5bec:	cmp	r2, r3
    5bf0:	bne	5bdc <ReadCompressedDoubleData+0xc18>
    5bf4:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5bf8:	mul	r3, r0, r7
    5bfc:	add	r2, sp, #24
    5c00:	ldr	r1, [sp, #8]
    5c04:	ldr	r0, [sp, #4]
    5c08:	bl	333c <InflateData>
    5c0c:	cmp	r7, #0
    5c10:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5c14:	add	r2, sp, #20
    5c18:	ldr	r1, [sp, #12]
    5c1c:	mov	r3, r1
    5c20:	add	r1, r1, r7, lsl #3
    5c24:	ldr	r0, [r2, #4]!
    5c28:	vmov	s14, r0
    5c2c:	vcvt.f64.u32	d7, s14
    5c30:	vstmia	r3!, {d7}
    5c34:	cmp	r3, r1
    5c38:	bne	5c24 <ReadCompressedDoubleData+0xc60>
    5c3c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5c40:	ldr	r3, [sp, #4]
    5c44:	ldr	r6, [r3, #20]
    5c48:	cmp	r6, #0
    5c4c:	beq	5d90 <ReadCompressedDoubleData+0xdcc>
    5c50:	cmp	r7, #512	; 0x200
    5c54:	ble	5d40 <ReadCompressedDoubleData+0xd7c>
    5c58:	sub	r3, r7, #512	; 0x200
    5c5c:	lsl	r2, r0, #9
    5c60:	str	r2, [sp, #16]
    5c64:	ldr	sl, [sp, #12]
    5c68:	mov	r9, #0
    5c6c:	add	r2, sp, #24
    5c70:	str	r2, [sp, #20]
    5c74:	add	r6, sp, #1040	; 0x410
    5c78:	add	r6, r6, #8
    5c7c:	str	r7, [sp, #1088]	; 0x440
    5c80:	mov	r7, r3
    5c84:	ldr	r3, [sp, #16]
    5c88:	ldr	r4, [sp, #20]
    5c8c:	mov	r2, r4
    5c90:	ldr	r1, [sp, #8]
    5c94:	ldr	r0, [sp, #4]
    5c98:	bl	333c <InflateData>
    5c9c:	mov	r8, r4
    5ca0:	mov	r5, sl
    5ca4:	mov	r0, r4
    5ca8:	bl	1904 <Mat_int16Swap>
    5cac:	vmov	s15, r0
    5cb0:	vcvt.f64.s32	d7, s15
    5cb4:	vstmia	r5!, {d7}
    5cb8:	add	r4, r4, #2
    5cbc:	cmp	r6, r4
    5cc0:	bne	5ca4 <ReadCompressedDoubleData+0xce0>
    5cc4:	add	r9, r9, #512	; 0x200
    5cc8:	add	sl, sl, #4096	; 0x1000
    5ccc:	cmp	r7, r9
    5cd0:	bgt	5c84 <ReadCompressedDoubleData+0xcc0>
    5cd4:	ldr	r7, [sp, #1088]	; 0x440
    5cd8:	sub	r4, r7, #512	; 0x200
    5cdc:	sub	r4, r4, #1
    5ce0:	bic	r4, r4, #508	; 0x1fc
    5ce4:	bic	r4, r4, #3
    5ce8:	add	r4, r4, #512	; 0x200
    5cec:	sub	r7, r7, r4
    5cf0:	mul	r3, fp, r7
    5cf4:	add	r2, sp, #24
    5cf8:	ldr	r1, [sp, #8]
    5cfc:	ldr	r0, [sp, #4]
    5d00:	bl	333c <InflateData>
    5d04:	cmp	r7, #0
    5d08:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5d0c:	ldr	r3, [sp, #12]
    5d10:	add	r5, r3, r4, lsl #3
    5d14:	add	r4, r7, r4
    5d18:	add	r4, r3, r4, lsl #3
    5d1c:	mov	r0, r8
    5d20:	bl	1904 <Mat_int16Swap>
    5d24:	vmov	s15, r0
    5d28:	vcvt.f64.s32	d7, s15
    5d2c:	vstmia	r5!, {d7}
    5d30:	add	r8, r8, #2
    5d34:	cmp	r4, r5
    5d38:	bne	5d1c <ReadCompressedDoubleData+0xd58>
    5d3c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5d40:	mul	r3, r0, r7
    5d44:	add	r2, sp, #24
    5d48:	ldr	r1, [sp, #8]
    5d4c:	ldr	r0, [sp, #4]
    5d50:	bl	333c <InflateData>
    5d54:	cmp	r7, #0
    5d58:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5d5c:	add	r5, sp, #24
    5d60:	ldr	r3, [sp, #12]
    5d64:	mov	r4, r3
    5d68:	add	r6, r3, r7, lsl #3
    5d6c:	mov	r0, r5
    5d70:	bl	1904 <Mat_int16Swap>
    5d74:	vmov	s15, r0
    5d78:	vcvt.f64.s32	d7, s15
    5d7c:	vstmia	r4!, {d7}
    5d80:	add	r5, r5, #2
    5d84:	cmp	r4, r6
    5d88:	bne	5d6c <ReadCompressedDoubleData+0xda8>
    5d8c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5d90:	cmp	r7, #512	; 0x200
    5d94:	ble	5e5c <ReadCompressedDoubleData+0xe98>
    5d98:	sub	sl, r7, #512	; 0x200
    5d9c:	lsl	r3, r0, #9
    5da0:	str	r3, [sp, #16]
    5da4:	ldr	r8, [sp, #12]
    5da8:	add	r9, sp, #24
    5dac:	add	r4, sp, #1040	; 0x410
    5db0:	add	r4, r4, #6
    5db4:	ldr	r3, [sp, #16]
    5db8:	mov	r2, r9
    5dbc:	ldr	r1, [sp, #8]
    5dc0:	ldr	r0, [sp, #4]
    5dc4:	bl	333c <InflateData>
    5dc8:	sub	r5, r9, #2
    5dcc:	mov	r2, r8
    5dd0:	mov	r3, r5
    5dd4:	ldrsh	r1, [r3, #2]!
    5dd8:	vmov	s14, r1
    5ddc:	vcvt.f64.s32	d7, s14
    5de0:	vstmia	r2!, {d7}
    5de4:	cmp	r3, r4
    5de8:	bne	5dd4 <ReadCompressedDoubleData+0xe10>
    5dec:	add	r6, r6, #512	; 0x200
    5df0:	add	r8, r8, #4096	; 0x1000
    5df4:	cmp	sl, r6
    5df8:	bgt	5db4 <ReadCompressedDoubleData+0xdf0>
    5dfc:	sub	r4, r7, #512	; 0x200
    5e00:	sub	r4, r4, #1
    5e04:	bic	r4, r4, #508	; 0x1fc
    5e08:	bic	r4, r4, #3
    5e0c:	add	r4, r4, #512	; 0x200
    5e10:	sub	r7, r7, r4
    5e14:	mul	r3, fp, r7
    5e18:	add	r2, sp, #24
    5e1c:	ldr	r1, [sp, #8]
    5e20:	ldr	r0, [sp, #4]
    5e24:	bl	333c <InflateData>
    5e28:	cmp	r7, #0
    5e2c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5e30:	ldr	r1, [sp, #12]
    5e34:	add	r2, r1, r4, lsl #3
    5e38:	add	r3, r7, r4
    5e3c:	add	r3, r1, r3, lsl #3
    5e40:	ldrsh	r1, [r5, #2]!
    5e44:	vmov	s14, r1
    5e48:	vcvt.f64.s32	d7, s14
    5e4c:	vstmia	r2!, {d7}
    5e50:	cmp	r2, r3
    5e54:	bne	5e40 <ReadCompressedDoubleData+0xe7c>
    5e58:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5e5c:	mul	r3, r0, r7
    5e60:	add	r2, sp, #24
    5e64:	ldr	r1, [sp, #8]
    5e68:	ldr	r0, [sp, #4]
    5e6c:	bl	333c <InflateData>
    5e70:	cmp	r7, #0
    5e74:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5e78:	add	r2, sp, #22
    5e7c:	ldr	r1, [sp, #12]
    5e80:	mov	r3, r1
    5e84:	add	r1, r1, r7, lsl #3
    5e88:	ldrsh	r0, [r2, #2]!
    5e8c:	vmov	s14, r0
    5e90:	vcvt.f64.s32	d7, s14
    5e94:	vstmia	r3!, {d7}
    5e98:	cmp	r1, r3
    5e9c:	bne	5e88 <ReadCompressedDoubleData+0xec4>
    5ea0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5ea4:	ldr	r3, [sp, #4]
    5ea8:	ldr	r6, [r3, #20]
    5eac:	cmp	r6, #0
    5eb0:	beq	5ff4 <ReadCompressedDoubleData+0x1030>
    5eb4:	cmp	r7, #512	; 0x200
    5eb8:	ble	5fa4 <ReadCompressedDoubleData+0xfe0>
    5ebc:	sub	r3, r7, #512	; 0x200
    5ec0:	lsl	r2, r0, #9
    5ec4:	str	r2, [sp, #16]
    5ec8:	ldr	sl, [sp, #12]
    5ecc:	mov	r9, #0
    5ed0:	add	r2, sp, #24
    5ed4:	str	r2, [sp, #20]
    5ed8:	add	r6, sp, #1040	; 0x410
    5edc:	add	r6, r6, #8
    5ee0:	str	r7, [sp, #1088]	; 0x440
    5ee4:	mov	r7, r3
    5ee8:	ldr	r3, [sp, #16]
    5eec:	ldr	r4, [sp, #20]
    5ef0:	mov	r2, r4
    5ef4:	ldr	r1, [sp, #8]
    5ef8:	ldr	r0, [sp, #4]
    5efc:	bl	333c <InflateData>
    5f00:	mov	r8, r4
    5f04:	mov	r5, sl
    5f08:	mov	r0, r4
    5f0c:	bl	1924 <Mat_uint16Swap>
    5f10:	vmov	s15, r0
    5f14:	vcvt.f64.u32	d7, s15
    5f18:	vstmia	r5!, {d7}
    5f1c:	add	r4, r4, #2
    5f20:	cmp	r4, r6
    5f24:	bne	5f08 <ReadCompressedDoubleData+0xf44>
    5f28:	add	r9, r9, #512	; 0x200
    5f2c:	add	sl, sl, #4096	; 0x1000
    5f30:	cmp	r7, r9
    5f34:	bgt	5ee8 <ReadCompressedDoubleData+0xf24>
    5f38:	ldr	r7, [sp, #1088]	; 0x440
    5f3c:	sub	r4, r7, #512	; 0x200
    5f40:	sub	r4, r4, #1
    5f44:	bic	r4, r4, #508	; 0x1fc
    5f48:	bic	r4, r4, #3
    5f4c:	add	r4, r4, #512	; 0x200
    5f50:	sub	r7, r7, r4
    5f54:	mul	r3, fp, r7
    5f58:	add	r2, sp, #24
    5f5c:	ldr	r1, [sp, #8]
    5f60:	ldr	r0, [sp, #4]
    5f64:	bl	333c <InflateData>
    5f68:	cmp	r7, #0
    5f6c:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5f70:	ldr	r3, [sp, #12]
    5f74:	add	r5, r3, r4, lsl #3
    5f78:	add	r4, r7, r4
    5f7c:	add	r4, r3, r4, lsl #3
    5f80:	mov	r0, r8
    5f84:	bl	1924 <Mat_uint16Swap>
    5f88:	vmov	s15, r0
    5f8c:	vcvt.f64.u32	d7, s15
    5f90:	vstmia	r5!, {d7}
    5f94:	add	r8, r8, #2
    5f98:	cmp	r5, r4
    5f9c:	bne	5f80 <ReadCompressedDoubleData+0xfbc>
    5fa0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5fa4:	mul	r3, r0, r7
    5fa8:	add	r2, sp, #24
    5fac:	ldr	r1, [sp, #8]
    5fb0:	ldr	r0, [sp, #4]
    5fb4:	bl	333c <InflateData>
    5fb8:	cmp	r7, #0
    5fbc:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    5fc0:	add	r5, sp, #24
    5fc4:	ldr	r3, [sp, #12]
    5fc8:	mov	r4, r3
    5fcc:	add	r6, r3, r7, lsl #3
    5fd0:	mov	r0, r5
    5fd4:	bl	1924 <Mat_uint16Swap>
    5fd8:	vmov	s15, r0
    5fdc:	vcvt.f64.u32	d7, s15
    5fe0:	vstmia	r4!, {d7}
    5fe4:	add	r5, r5, #2
    5fe8:	cmp	r4, r6
    5fec:	bne	5fd0 <ReadCompressedDoubleData+0x100c>
    5ff0:	b	61d4 <ReadCompressedDoubleData+0x1210>
    5ff4:	cmp	r7, #512	; 0x200
    5ff8:	ble	60c0 <ReadCompressedDoubleData+0x10fc>
    5ffc:	sub	sl, r7, #512	; 0x200
    6000:	lsl	r3, r0, #9
    6004:	str	r3, [sp, #16]
    6008:	ldr	r8, [sp, #12]
    600c:	add	r9, sp, #24
    6010:	add	r4, sp, #1040	; 0x410
    6014:	add	r4, r4, #6
    6018:	ldr	r3, [sp, #16]
    601c:	mov	r2, r9
    6020:	ldr	r1, [sp, #8]
    6024:	ldr	r0, [sp, #4]
    6028:	bl	333c <InflateData>
    602c:	sub	r5, r9, #2
    6030:	mov	r2, r8
    6034:	mov	r3, r5
    6038:	ldrh	r1, [r3, #2]!
    603c:	vmov	s14, r1
    6040:	vcvt.f64.u32	d7, s14
    6044:	vstmia	r2!, {d7}
    6048:	cmp	r3, r4
    604c:	bne	6038 <ReadCompressedDoubleData+0x1074>
    6050:	add	r6, r6, #512	; 0x200
    6054:	add	r8, r8, #4096	; 0x1000
    6058:	cmp	sl, r6
    605c:	bgt	6018 <ReadCompressedDoubleData+0x1054>
    6060:	sub	r4, r7, #512	; 0x200
    6064:	sub	r4, r4, #1
    6068:	bic	r4, r4, #508	; 0x1fc
    606c:	bic	r4, r4, #3
    6070:	add	r4, r4, #512	; 0x200
    6074:	sub	r7, r7, r4
    6078:	mul	r3, fp, r7
    607c:	add	r2, sp, #24
    6080:	ldr	r1, [sp, #8]
    6084:	ldr	r0, [sp, #4]
    6088:	bl	333c <InflateData>
    608c:	cmp	r7, #0
    6090:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    6094:	ldr	r1, [sp, #12]
    6098:	add	r2, r1, r4, lsl #3
    609c:	add	r3, r7, r4
    60a0:	add	r3, r1, r3, lsl #3
    60a4:	ldrh	r1, [r5, #2]!
    60a8:	vmov	s14, r1
    60ac:	vcvt.f64.u32	d7, s14
    60b0:	vstmia	r2!, {d7}
    60b4:	cmp	r2, r3
    60b8:	bne	60a4 <ReadCompressedDoubleData+0x10e0>
    60bc:	b	61d4 <ReadCompressedDoubleData+0x1210>
    60c0:	mul	r3, r0, r7
    60c4:	add	r2, sp, #24
    60c8:	ldr	r1, [sp, #8]
    60cc:	ldr	r0, [sp, #4]
    60d0:	bl	333c <InflateData>
    60d4:	cmp	r7, #0
    60d8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    60dc:	add	r2, sp, #22
    60e0:	ldr	r1, [sp, #12]
    60e4:	mov	r3, r1
    60e8:	add	r1, r1, r7, lsl #3
    60ec:	ldrh	r0, [r2, #2]!
    60f0:	vmov	s14, r0
    60f4:	vcvt.f64.u32	d7, s14
    60f8:	vstmia	r3!, {d7}
    60fc:	cmp	r3, r1
    6100:	bne	60ec <ReadCompressedDoubleData+0x1128>
    6104:	b	61d4 <ReadCompressedDoubleData+0x1210>
    6108:	cmp	r7, #1024	; 0x400
    610c:	ble	61f8 <ReadCompressedDoubleData+0x1234>
    6110:	sub	sl, r7, #1024	; 0x400
    6114:	lsl	r3, r0, #10
    6118:	str	r3, [sp, #16]
    611c:	ldr	r8, [sp, #12]
    6120:	mov	r6, #0
    6124:	add	r9, sp, #24
    6128:	add	r4, sp, #1040	; 0x410
    612c:	add	r4, r4, #7
    6130:	ldr	r3, [sp, #16]
    6134:	mov	r2, r9
    6138:	ldr	r1, [sp, #8]
    613c:	ldr	r0, [sp, #4]
    6140:	bl	333c <InflateData>
    6144:	sub	r5, r9, #1
    6148:	mov	r2, r8
    614c:	mov	r3, r5
    6150:	ldrb	r1, [r3, #1]!
    6154:	vmov	s14, r1
    6158:	vcvt.f64.u32	d7, s14
    615c:	vstmia	r2!, {d7}
    6160:	cmp	r4, r3
    6164:	bne	6150 <ReadCompressedDoubleData+0x118c>
    6168:	add	r6, r6, #1024	; 0x400
    616c:	add	r8, r8, #8192	; 0x2000
    6170:	cmp	sl, r6
    6174:	bgt	6130 <ReadCompressedDoubleData+0x116c>
    6178:	sub	r4, r7, #1024	; 0x400
    617c:	sub	r4, r4, #1
    6180:	bic	r4, r4, #1020	; 0x3fc
    6184:	bic	r4, r4, #3
    6188:	add	r4, r4, #1024	; 0x400
    618c:	sub	r7, r7, r4
    6190:	mul	r3, fp, r7
    6194:	add	r2, sp, #24
    6198:	ldr	r1, [sp, #8]
    619c:	ldr	r0, [sp, #4]
    61a0:	bl	333c <InflateData>
    61a4:	cmp	r7, #0
    61a8:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    61ac:	ldr	r1, [sp, #12]
    61b0:	add	r3, r1, r4, lsl #3
    61b4:	add	r2, r7, r4
    61b8:	add	r2, r1, r2, lsl #3
    61bc:	ldrb	r1, [r5, #1]!
    61c0:	vmov	s14, r1
    61c4:	vcvt.f64.u32	d7, s14
    61c8:	vstmia	r3!, {d7}
    61cc:	cmp	r2, r3
    61d0:	bne	61bc <ReadCompressedDoubleData+0x11f8>
    61d4:	mul	r0, fp, r7
    61d8:	add	sp, sp, #1040	; 0x410
    61dc:	add	sp, sp, #12
    61e0:	ldrd	r4, [sp]
    61e4:	ldrd	r6, [sp, #8]
    61e8:	ldrd	r8, [sp, #16]
    61ec:	ldrd	sl, [sp, #24]
    61f0:	add	sp, sp, #32
    61f4:	pop	{pc}		; (ldr pc, [sp], #4)
    61f8:	mul	r3, r0, r7
    61fc:	add	r2, sp, #24
    6200:	ldr	r1, [sp, #8]
    6204:	ldr	r0, [sp, #4]
    6208:	bl	333c <InflateData>
    620c:	cmp	r7, #0
    6210:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    6214:	add	r2, sp, #23
    6218:	ldr	r1, [sp, #12]
    621c:	mov	r3, r1
    6220:	add	r1, r1, r7, lsl #3
    6224:	ldrb	r0, [r2, #1]!
    6228:	vmov	s14, r0
    622c:	vcvt.f64.u32	d7, s14
    6230:	vstmia	r3!, {d7}
    6234:	cmp	r3, r1
    6238:	bne	6224 <ReadCompressedDoubleData+0x1260>
    623c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    6240:	cmp	r7, #1024	; 0x400
    6244:	ble	6310 <ReadCompressedDoubleData+0x134c>
    6248:	sub	sl, r7, #1024	; 0x400
    624c:	lsl	r3, r0, #10
    6250:	str	r3, [sp, #16]
    6254:	ldr	r8, [sp, #12]
    6258:	mov	r6, #0
    625c:	add	r9, sp, #24
    6260:	add	r4, sp, #1040	; 0x410
    6264:	add	r4, r4, #7
    6268:	ldr	r3, [sp, #16]
    626c:	mov	r2, r9
    6270:	ldr	r1, [sp, #8]
    6274:	ldr	r0, [sp, #4]
    6278:	bl	333c <InflateData>
    627c:	sub	r5, r9, #1
    6280:	mov	r2, r8
    6284:	mov	r3, r5
    6288:	ldrsb	r1, [r3, #1]!
    628c:	vmov	s14, r1
    6290:	vcvt.f64.s32	d7, s14
    6294:	vstmia	r2!, {d7}
    6298:	cmp	r4, r3
    629c:	bne	6288 <ReadCompressedDoubleData+0x12c4>
    62a0:	add	r6, r6, #1024	; 0x400
    62a4:	add	r8, r8, #8192	; 0x2000
    62a8:	cmp	sl, r6
    62ac:	bgt	6268 <ReadCompressedDoubleData+0x12a4>
    62b0:	sub	r4, r7, #1024	; 0x400
    62b4:	sub	r4, r4, #1
    62b8:	bic	r4, r4, #1020	; 0x3fc
    62bc:	bic	r4, r4, #3
    62c0:	add	r4, r4, #1024	; 0x400
    62c4:	sub	r7, r7, r4
    62c8:	mul	r3, fp, r7
    62cc:	add	r2, sp, #24
    62d0:	ldr	r1, [sp, #8]
    62d4:	ldr	r0, [sp, #4]
    62d8:	bl	333c <InflateData>
    62dc:	cmp	r7, #0
    62e0:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    62e4:	ldr	r1, [sp, #12]
    62e8:	add	r2, r1, r4, lsl #3
    62ec:	add	r3, r7, r4
    62f0:	add	r3, r1, r3, lsl #3
    62f4:	ldrsb	r1, [r5, #1]!
    62f8:	vmov	s14, r1
    62fc:	vcvt.f64.s32	d7, s14
    6300:	vstmia	r2!, {d7}
    6304:	cmp	r3, r2
    6308:	bne	62f4 <ReadCompressedDoubleData+0x1330>
    630c:	b	61d4 <ReadCompressedDoubleData+0x1210>
    6310:	mul	r3, r0, r7
    6314:	add	r2, sp, #24
    6318:	ldr	r1, [sp, #8]
    631c:	ldr	r0, [sp, #4]
    6320:	bl	333c <InflateData>
    6324:	cmp	r7, #0
    6328:	ble	61d4 <ReadCompressedDoubleData+0x1210>
    632c:	add	r2, sp, #23
    6330:	ldr	r1, [sp, #12]
    6334:	mov	r3, r1
    6338:	add	r1, r1, r7, lsl #3
    633c:	ldrsb	r0, [r2, #1]!
    6340:	vmov	s14, r0
    6344:	vcvt.f64.s32	d7, s14
    6348:	vstmia	r3!, {d7}
    634c:	cmp	r3, r1
    6350:	bne	633c <ReadCompressedDoubleData+0x1378>
    6354:	b	61d4 <ReadCompressedDoubleData+0x1210>
    6358:	mov	r0, #0
    635c:	b	61d8 <ReadCompressedDoubleData+0x1214>

00006360 <ReadSingleData>:
    6360:	cmp	r1, #0
    6364:	cmpne	r0, #0
    6368:	beq	7ae0 <ReadSingleData+0x1780>
    636c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6370:	strd	r6, [sp, #8]
    6374:	strd	r8, [sp, #16]
    6378:	strd	sl, [sp, #24]
    637c:	str	lr, [sp, #32]
    6380:	sub	sp, sp, #2064	; 0x810
    6384:	sub	sp, sp, #12
    6388:	mov	r6, r0
    638c:	mov	ip, r1
    6390:	ldr	r1, [r0]
    6394:	cmp	r1, #0
    6398:	moveq	r0, #0
    639c:	beq	73c4 <ReadSingleData+0x1064>
    63a0:	str	ip, [sp, #4]
    63a4:	mov	fp, r3
    63a8:	mov	r4, r2
    63ac:	mov	r0, r2
    63b0:	bl	1598 <Mat_SizeOf@plt>
    63b4:	str	r0, [sp]
    63b8:	sub	r3, r4, #1
    63bc:	cmp	r3, #8
    63c0:	addls	pc, pc, r3, lsl #2
    63c4:	b	75bc <ReadSingleData+0x125c>
    63c8:	b	7324 <ReadSingleData+0xfc4>
    63cc:	b	7484 <ReadSingleData+0x1124>
    63d0:	b	6df4 <ReadSingleData+0xa94>
    63d4:	b	708c <ReadSingleData+0xd2c>
    63d8:	b	68c4 <ReadSingleData+0x564>
    63dc:	b	6b5c <ReadSingleData+0x7fc>
    63e0:	b	6664 <ReadSingleData+0x304>
    63e4:	b	75bc <ReadSingleData+0x125c>
    63e8:	b	63ec <ReadSingleData+0x8c>
    63ec:	ldr	r5, [r6, #20]
    63f0:	cmp	r5, #0
    63f4:	beq	6544 <ReadSingleData+0x1e4>
    63f8:	cmp	fp, #256	; 0x100
    63fc:	ble	64f4 <ReadSingleData+0x194>
    6400:	sub	r3, fp, #256	; 0x100
    6404:	ldr	sl, [sp, #4]
    6408:	mov	r9, #0
    640c:	mov	r5, r9
    6410:	add	r2, sp, #24
    6414:	str	r2, [sp, #16]
    6418:	add	r8, sp, #2064	; 0x810
    641c:	add	r8, r8, #8
    6420:	str	fp, [sp, #20]
    6424:	mov	fp, r3
    6428:	ldr	r3, [r6]
    642c:	mov	r2, #256	; 0x100
    6430:	ldr	r1, [sp]
    6434:	ldr	r4, [sp, #16]
    6438:	mov	r0, r4
    643c:	bl	1520 <fread@plt>
    6440:	add	r5, r5, r0
    6444:	str	r5, [sp, #8]
    6448:	str	r4, [sp, #12]
    644c:	mov	r7, sl
    6450:	mov	r0, r4
    6454:	bl	1974 <Mat_doubleSwap>
    6458:	vcvt.f32.f64	s0, d0
    645c:	vstmia	r7!, {s0}
    6460:	add	r4, r4, #8
    6464:	cmp	r4, r8
    6468:	bne	6450 <ReadSingleData+0xf0>
    646c:	add	r9, r9, #256	; 0x100
    6470:	add	sl, sl, #1024	; 0x400
    6474:	cmp	r9, fp
    6478:	blt	6428 <ReadSingleData+0xc8>
    647c:	ldr	fp, [sp, #20]
    6480:	sub	r3, fp, #256	; 0x100
    6484:	sub	r3, r3, #1
    6488:	bic	r3, r3, #255	; 0xff
    648c:	add	r4, r3, #256	; 0x100
    6490:	cmp	fp, r4
    6494:	ble	73bc <ReadSingleData+0x105c>
    6498:	sub	fp, fp, r4
    649c:	ldr	r3, [r6]
    64a0:	mov	r2, fp
    64a4:	ldr	r1, [sp]
    64a8:	add	r0, sp, #24
    64ac:	bl	1520 <fread@plt>
    64b0:	ldr	r3, [sp, #8]
    64b4:	add	r5, r3, r0
    64b8:	cmp	fp, #0
    64bc:	ble	73bc <ReadSingleData+0x105c>
    64c0:	ldr	r3, [sp, #4]
    64c4:	add	r6, r3, r4, lsl #2
    64c8:	add	r4, fp, r4
    64cc:	add	r4, r3, r4, lsl #2
    64d0:	ldr	r7, [sp, #12]
    64d4:	mov	r0, r7
    64d8:	bl	1974 <Mat_doubleSwap>
    64dc:	vcvt.f32.f64	s0, d0
    64e0:	vstmia	r6!, {s0}
    64e4:	add	r7, r7, #8
    64e8:	cmp	r6, r4
    64ec:	bne	64d4 <ReadSingleData+0x174>
    64f0:	b	73bc <ReadSingleData+0x105c>
    64f4:	ldr	r3, [r6]
    64f8:	mov	r2, fp
    64fc:	ldr	r1, [sp]
    6500:	add	r0, sp, #24
    6504:	bl	1520 <fread@plt>
    6508:	mov	r5, r0
    650c:	cmp	fp, #0
    6510:	ble	73bc <ReadSingleData+0x105c>
    6514:	add	r6, sp, #24
    6518:	ldr	r3, [sp, #4]
    651c:	mov	r4, r3
    6520:	add	fp, r3, fp, lsl #2
    6524:	mov	r0, r6
    6528:	bl	1974 <Mat_doubleSwap>
    652c:	vcvt.f32.f64	s0, d0
    6530:	vstmia	r4!, {s0}
    6534:	add	r6, r6, #8
    6538:	cmp	r4, fp
    653c:	bne	6524 <ReadSingleData+0x1c4>
    6540:	b	73bc <ReadSingleData+0x105c>
    6544:	cmp	fp, #256	; 0x100
    6548:	ble	661c <ReadSingleData+0x2bc>
    654c:	sub	r9, fp, #256	; 0x100
    6550:	ldr	r8, [sp, #4]
    6554:	mov	r7, r5
    6558:	add	sl, sp, #24
    655c:	add	r4, sp, #2064	; 0x810
    6560:	add	r4, r4, #8
    6564:	ldr	r3, [r6]
    6568:	mov	r2, #256	; 0x100
    656c:	ldr	r1, [sp]
    6570:	mov	r0, sl
    6574:	bl	1520 <fread@plt>
    6578:	add	r5, r5, r0
    657c:	str	r5, [sp, #8]
    6580:	str	sl, [sp, #12]
    6584:	mov	r2, r8
    6588:	mov	r3, sl
    658c:	vldmia	r3!, {d7}
    6590:	vcvt.f32.f64	s14, d7
    6594:	vstmia	r2!, {s14}
    6598:	cmp	r3, r4
    659c:	bne	658c <ReadSingleData+0x22c>
    65a0:	add	r7, r7, #256	; 0x100
    65a4:	add	r8, r8, #1024	; 0x400
    65a8:	cmp	r7, r9
    65ac:	blt	6564 <ReadSingleData+0x204>
    65b0:	sub	r3, fp, #256	; 0x100
    65b4:	sub	r3, r3, #1
    65b8:	bic	r3, r3, #255	; 0xff
    65bc:	add	r4, r3, #256	; 0x100
    65c0:	cmp	fp, r4
    65c4:	ble	73bc <ReadSingleData+0x105c>
    65c8:	sub	fp, fp, r4
    65cc:	ldr	r3, [r6]
    65d0:	mov	r2, fp
    65d4:	ldr	r1, [sp]
    65d8:	add	r0, sp, #24
    65dc:	bl	1520 <fread@plt>
    65e0:	ldr	r3, [sp, #8]
    65e4:	add	r5, r3, r0
    65e8:	cmp	fp, #0
    65ec:	ble	73bc <ReadSingleData+0x105c>
    65f0:	ldr	r1, [sp, #4]
    65f4:	add	r2, r1, r4, lsl #2
    65f8:	add	r3, fp, r4
    65fc:	add	r3, r1, r3, lsl #2
    6600:	ldr	r1, [sp, #12]
    6604:	vldmia	r1!, {d7}
    6608:	vcvt.f32.f64	s14, d7
    660c:	vstmia	r2!, {s14}
    6610:	cmp	r2, r3
    6614:	bne	6604 <ReadSingleData+0x2a4>
    6618:	b	73bc <ReadSingleData+0x105c>
    661c:	ldr	r3, [r6]
    6620:	mov	r2, fp
    6624:	ldr	r1, [sp]
    6628:	add	r0, sp, #24
    662c:	bl	1520 <fread@plt>
    6630:	mov	r5, r0
    6634:	cmp	fp, #0
    6638:	ble	73bc <ReadSingleData+0x105c>
    663c:	add	r2, sp, #24
    6640:	ldr	r1, [sp, #4]
    6644:	mov	r3, r1
    6648:	add	r1, r1, fp, lsl #2
    664c:	vldmia	r2!, {d7}
    6650:	vcvt.f32.f64	s14, d7
    6654:	vstmia	r3!, {s14}
    6658:	cmp	r3, r1
    665c:	bne	664c <ReadSingleData+0x2ec>
    6660:	b	73bc <ReadSingleData+0x105c>
    6664:	ldr	r5, [r6, #20]
    6668:	cmp	r5, #0
    666c:	beq	67b0 <ReadSingleData+0x450>
    6670:	cmp	fp, #256	; 0x100
    6674:	ble	6764 <ReadSingleData+0x404>
    6678:	sub	r3, fp, #256	; 0x100
    667c:	ldr	sl, [sp, #4]
    6680:	mov	r9, #0
    6684:	mov	r5, r9
    6688:	add	r2, sp, #24
    668c:	str	r2, [sp, #16]
    6690:	add	r8, sp, #1040	; 0x410
    6694:	add	r8, r8, #8
    6698:	str	fp, [sp, #20]
    669c:	mov	fp, r3
    66a0:	ldr	r3, [r6]
    66a4:	mov	r2, #256	; 0x100
    66a8:	ldr	r1, [sp]
    66ac:	ldr	r4, [sp, #16]
    66b0:	mov	r0, r4
    66b4:	bl	1520 <fread@plt>
    66b8:	add	r5, r5, r0
    66bc:	str	r5, [sp, #8]
    66c0:	str	r4, [sp, #12]
    66c4:	mov	r7, sl
    66c8:	mov	r0, r4
    66cc:	bl	1944 <Mat_floatSwap>
    66d0:	vstmia	r7!, {s0}
    66d4:	add	r4, r4, #4
    66d8:	cmp	r4, r8
    66dc:	bne	66c8 <ReadSingleData+0x368>
    66e0:	add	r9, r9, #256	; 0x100
    66e4:	add	sl, sl, #1024	; 0x400
    66e8:	cmp	r9, fp
    66ec:	blt	66a0 <ReadSingleData+0x340>
    66f0:	ldr	fp, [sp, #20]
    66f4:	sub	r3, fp, #256	; 0x100
    66f8:	sub	r3, r3, #1
    66fc:	bic	r3, r3, #255	; 0xff
    6700:	add	r4, r3, #256	; 0x100
    6704:	cmp	fp, r4
    6708:	ble	73bc <ReadSingleData+0x105c>
    670c:	sub	fp, fp, r4
    6710:	ldr	r3, [r6]
    6714:	mov	r2, fp
    6718:	ldr	r1, [sp]
    671c:	add	r0, sp, #24
    6720:	bl	1520 <fread@plt>
    6724:	ldr	r3, [sp, #8]
    6728:	add	r5, r3, r0
    672c:	cmp	fp, #0
    6730:	ble	73bc <ReadSingleData+0x105c>
    6734:	ldr	r3, [sp, #4]
    6738:	add	r6, r3, r4, lsl #2
    673c:	add	r4, fp, r4
    6740:	add	r4, r3, r4, lsl #2
    6744:	ldr	r7, [sp, #12]
    6748:	mov	r0, r7
    674c:	bl	1944 <Mat_floatSwap>
    6750:	vstmia	r6!, {s0}
    6754:	add	r7, r7, #4
    6758:	cmp	r6, r4
    675c:	bne	6748 <ReadSingleData+0x3e8>
    6760:	b	73bc <ReadSingleData+0x105c>
    6764:	ldr	r3, [r6]
    6768:	mov	r2, fp
    676c:	ldr	r1, [sp]
    6770:	add	r0, sp, #24
    6774:	bl	1520 <fread@plt>
    6778:	mov	r5, r0
    677c:	cmp	fp, #0
    6780:	ble	73bc <ReadSingleData+0x105c>
    6784:	add	r6, sp, #24
    6788:	ldr	r3, [sp, #4]
    678c:	mov	r4, r3
    6790:	add	fp, r3, fp, lsl #2
    6794:	mov	r0, r6
    6798:	bl	1944 <Mat_floatSwap>
    679c:	vstmia	r4!, {s0}
    67a0:	add	r6, r6, #4
    67a4:	cmp	r4, fp
    67a8:	bne	6794 <ReadSingleData+0x434>
    67ac:	b	73bc <ReadSingleData+0x105c>
    67b0:	cmp	fp, #256	; 0x100
    67b4:	ble	6880 <ReadSingleData+0x520>
    67b8:	sub	r9, fp, #256	; 0x100
    67bc:	ldr	r8, [sp, #4]
    67c0:	mov	r7, r5
    67c4:	add	sl, sp, #24
    67c8:	add	r4, sp, #1040	; 0x410
    67cc:	add	r4, r4, #8
    67d0:	ldr	r3, [r6]
    67d4:	mov	r2, #256	; 0x100
    67d8:	ldr	r1, [sp]
    67dc:	mov	r0, sl
    67e0:	bl	1520 <fread@plt>
    67e4:	add	r5, r5, r0
    67e8:	str	r5, [sp, #8]
    67ec:	str	sl, [sp, #12]
    67f0:	mov	r2, r8
    67f4:	mov	r3, sl
    67f8:	ldr	r1, [r3], #4
    67fc:	str	r1, [r2], #4
    6800:	cmp	r3, r4
    6804:	bne	67f8 <ReadSingleData+0x498>
    6808:	add	r7, r7, #256	; 0x100
    680c:	add	r8, r8, #1024	; 0x400
    6810:	cmp	r7, r9
    6814:	blt	67d0 <ReadSingleData+0x470>
    6818:	sub	r3, fp, #256	; 0x100
    681c:	sub	r3, r3, #1
    6820:	bic	r3, r3, #255	; 0xff
    6824:	add	r4, r3, #256	; 0x100
    6828:	cmp	fp, r4
    682c:	ble	73bc <ReadSingleData+0x105c>
    6830:	sub	fp, fp, r4
    6834:	ldr	r3, [r6]
    6838:	mov	r2, fp
    683c:	ldr	r1, [sp]
    6840:	add	r0, sp, #24
    6844:	bl	1520 <fread@plt>
    6848:	ldr	r3, [sp, #8]
    684c:	add	r5, r3, r0
    6850:	cmp	fp, #0
    6854:	ble	73bc <ReadSingleData+0x105c>
    6858:	ldr	r1, [sp, #4]
    685c:	add	r2, r1, r4, lsl #2
    6860:	add	r3, fp, r4
    6864:	add	r3, r1, r3, lsl #2
    6868:	ldr	r1, [sp, #12]
    686c:	ldr	r0, [r1], #4
    6870:	str	r0, [r2], #4
    6874:	cmp	r2, r3
    6878:	bne	686c <ReadSingleData+0x50c>
    687c:	b	73bc <ReadSingleData+0x105c>
    6880:	ldr	r3, [r6]
    6884:	mov	r2, fp
    6888:	ldr	r1, [sp]
    688c:	add	r0, sp, #24
    6890:	bl	1520 <fread@plt>
    6894:	mov	r5, r0
    6898:	cmp	fp, #0
    689c:	ble	73bc <ReadSingleData+0x105c>
    68a0:	add	r2, sp, #24
    68a4:	ldr	r1, [sp, #4]
    68a8:	mov	r3, r1
    68ac:	add	r0, r1, fp, lsl #2
    68b0:	ldr	r1, [r2], #4
    68b4:	str	r1, [r3], #4
    68b8:	cmp	r3, r0
    68bc:	bne	68b0 <ReadSingleData+0x550>
    68c0:	b	73bc <ReadSingleData+0x105c>
    68c4:	ldr	r5, [r6, #20]
    68c8:	cmp	r5, #0
    68cc:	beq	6a28 <ReadSingleData+0x6c8>
    68d0:	cmp	fp, #256	; 0x100
    68d4:	ble	69d4 <ReadSingleData+0x674>
    68d8:	sub	r3, fp, #256	; 0x100
    68dc:	ldr	sl, [sp, #4]
    68e0:	mov	r9, #0
    68e4:	mov	r5, r9
    68e8:	add	r2, sp, #24
    68ec:	str	r2, [sp, #16]
    68f0:	add	r8, sp, #1040	; 0x410
    68f4:	add	r8, r8, #8
    68f8:	str	fp, [sp, #20]
    68fc:	mov	fp, r3
    6900:	ldr	r3, [r6]
    6904:	mov	r2, #256	; 0x100
    6908:	ldr	r1, [sp]
    690c:	ldr	r4, [sp, #16]
    6910:	mov	r0, r4
    6914:	bl	1520 <fread@plt>
    6918:	add	r5, r5, r0
    691c:	str	r5, [sp, #8]
    6920:	str	r4, [sp, #12]
    6924:	mov	r7, sl
    6928:	mov	r0, r4
    692c:	bl	18a4 <Mat_int32Swap>
    6930:	vmov	s15, r0
    6934:	vcvt.f32.s32	s15, s15
    6938:	vstmia	r7!, {s15}
    693c:	add	r4, r4, #4
    6940:	cmp	r4, r8
    6944:	bne	6928 <ReadSingleData+0x5c8>
    6948:	add	r9, r9, #256	; 0x100
    694c:	add	sl, sl, #1024	; 0x400
    6950:	cmp	r9, fp
    6954:	blt	6900 <ReadSingleData+0x5a0>
    6958:	ldr	fp, [sp, #20]
    695c:	sub	r3, fp, #256	; 0x100
    6960:	sub	r3, r3, #1
    6964:	bic	r3, r3, #255	; 0xff
    6968:	add	r4, r3, #256	; 0x100
    696c:	cmp	fp, r4
    6970:	ble	73bc <ReadSingleData+0x105c>
    6974:	sub	fp, fp, r4
    6978:	ldr	r3, [r6]
    697c:	mov	r2, fp
    6980:	ldr	r1, [sp]
    6984:	add	r0, sp, #24
    6988:	bl	1520 <fread@plt>
    698c:	ldr	r3, [sp, #8]
    6990:	add	r5, r3, r0
    6994:	cmp	fp, #0
    6998:	ble	73bc <ReadSingleData+0x105c>
    699c:	ldr	r3, [sp, #4]
    69a0:	add	r6, r3, r4, lsl #2
    69a4:	add	r4, fp, r4
    69a8:	add	r4, r3, r4, lsl #2
    69ac:	ldr	r7, [sp, #12]
    69b0:	mov	r0, r7
    69b4:	bl	18a4 <Mat_int32Swap>
    69b8:	vmov	s15, r0
    69bc:	vcvt.f32.s32	s15, s15
    69c0:	vstmia	r6!, {s15}
    69c4:	add	r7, r7, #4
    69c8:	cmp	r6, r4
    69cc:	bne	69b0 <ReadSingleData+0x650>
    69d0:	b	73bc <ReadSingleData+0x105c>
    69d4:	ldr	r3, [r6]
    69d8:	mov	r2, fp
    69dc:	ldr	r1, [sp]
    69e0:	add	r0, sp, #24
    69e4:	bl	1520 <fread@plt>
    69e8:	mov	r5, r0
    69ec:	cmp	fp, #0
    69f0:	ble	73bc <ReadSingleData+0x105c>
    69f4:	add	r6, sp, #24
    69f8:	ldr	r3, [sp, #4]
    69fc:	mov	r4, r3
    6a00:	add	fp, r3, fp, lsl #2
    6a04:	mov	r0, r6
    6a08:	bl	18a4 <Mat_int32Swap>
    6a0c:	vmov	s15, r0
    6a10:	vcvt.f32.s32	s15, s15
    6a14:	vstmia	r4!, {s15}
    6a18:	add	r6, r6, #4
    6a1c:	cmp	r4, fp
    6a20:	bne	6a04 <ReadSingleData+0x6a4>
    6a24:	b	73bc <ReadSingleData+0x105c>
    6a28:	cmp	fp, #256	; 0x100
    6a2c:	ble	6b10 <ReadSingleData+0x7b0>
    6a30:	sub	r3, fp, #256	; 0x100
    6a34:	ldr	r8, [sp, #4]
    6a38:	mov	r7, r5
    6a3c:	add	sl, sp, #24
    6a40:	add	r4, sl, #1020	; 0x3fc
    6a44:	mov	r9, r6
    6a48:	mov	r6, r3
    6a4c:	ldr	r3, [r9]
    6a50:	mov	r2, #256	; 0x100
    6a54:	ldr	r1, [sp]
    6a58:	mov	r0, sl
    6a5c:	bl	1520 <fread@plt>
    6a60:	add	r5, r5, r0
    6a64:	str	r5, [sp, #8]
    6a68:	sub	r1, sl, #4
    6a6c:	mov	r2, r8
    6a70:	mov	r3, r1
    6a74:	ldr	r0, [r3, #4]!
    6a78:	vmov	s15, r0
    6a7c:	vcvt.f32.s32	s15, s15
    6a80:	vstmia	r2!, {s15}
    6a84:	cmp	r3, r4
    6a88:	bne	6a74 <ReadSingleData+0x714>
    6a8c:	add	r7, r7, #256	; 0x100
    6a90:	add	r8, r8, #1024	; 0x400
    6a94:	cmp	r7, r6
    6a98:	blt	6a4c <ReadSingleData+0x6ec>
    6a9c:	mov	r6, r9
    6aa0:	mov	r9, r1
    6aa4:	sub	r3, fp, #256	; 0x100
    6aa8:	sub	r3, r3, #1
    6aac:	bic	r3, r3, #255	; 0xff
    6ab0:	add	r4, r3, #256	; 0x100
    6ab4:	cmp	fp, r4
    6ab8:	ble	73bc <ReadSingleData+0x105c>
    6abc:	sub	fp, fp, r4
    6ac0:	ldr	r3, [r6]
    6ac4:	mov	r2, fp
    6ac8:	ldr	r1, [sp]
    6acc:	add	r0, sp, #24
    6ad0:	bl	1520 <fread@plt>
    6ad4:	ldr	r3, [sp, #8]
    6ad8:	add	r5, r3, r0
    6adc:	cmp	fp, #0
    6ae0:	ble	73bc <ReadSingleData+0x105c>
    6ae4:	ldr	r1, [sp, #4]
    6ae8:	add	r2, r1, r4, lsl #2
    6aec:	add	r3, fp, r4
    6af0:	add	r3, r1, r3, lsl #2
    6af4:	ldr	r1, [r9, #4]!
    6af8:	vmov	s15, r1
    6afc:	vcvt.f32.s32	s15, s15
    6b00:	vstmia	r2!, {s15}
    6b04:	cmp	r2, r3
    6b08:	bne	6af4 <ReadSingleData+0x794>
    6b0c:	b	73bc <ReadSingleData+0x105c>
    6b10:	ldr	r3, [r6]
    6b14:	mov	r2, fp
    6b18:	ldr	r1, [sp]
    6b1c:	add	r0, sp, #24
    6b20:	bl	1520 <fread@plt>
    6b24:	mov	r5, r0
    6b28:	cmp	fp, #0
    6b2c:	ble	73bc <ReadSingleData+0x105c>
    6b30:	add	r2, sp, #20
    6b34:	ldr	r1, [sp, #4]
    6b38:	mov	r3, r1
    6b3c:	add	r1, r1, fp, lsl #2
    6b40:	ldr	r0, [r2, #4]!
    6b44:	vmov	s15, r0
    6b48:	vcvt.f32.s32	s15, s15
    6b4c:	vstmia	r3!, {s15}
    6b50:	cmp	r3, r1
    6b54:	bne	6b40 <ReadSingleData+0x7e0>
    6b58:	b	73bc <ReadSingleData+0x105c>
    6b5c:	ldr	r5, [r6, #20]
    6b60:	cmp	r5, #0
    6b64:	beq	6cc0 <ReadSingleData+0x960>
    6b68:	cmp	fp, #256	; 0x100
    6b6c:	ble	6c6c <ReadSingleData+0x90c>
    6b70:	sub	r3, fp, #256	; 0x100
    6b74:	ldr	sl, [sp, #4]
    6b78:	mov	r9, #0
    6b7c:	mov	r5, r9
    6b80:	add	r2, sp, #24
    6b84:	str	r2, [sp, #16]
    6b88:	add	r8, sp, #1040	; 0x410
    6b8c:	add	r8, r8, #8
    6b90:	str	fp, [sp, #20]
    6b94:	mov	fp, r3
    6b98:	ldr	r3, [r6]
    6b9c:	mov	r2, #256	; 0x100
    6ba0:	ldr	r1, [sp]
    6ba4:	ldr	r4, [sp, #16]
    6ba8:	mov	r0, r4
    6bac:	bl	1520 <fread@plt>
    6bb0:	add	r5, r5, r0
    6bb4:	str	r5, [sp, #8]
    6bb8:	str	r4, [sp, #12]
    6bbc:	mov	r7, sl
    6bc0:	mov	r0, r4
    6bc4:	bl	18d4 <Mat_uint32Swap>
    6bc8:	vmov	s15, r0
    6bcc:	vcvt.f32.u32	s15, s15
    6bd0:	vstmia	r7!, {s15}
    6bd4:	add	r4, r4, #4
    6bd8:	cmp	r4, r8
    6bdc:	bne	6bc0 <ReadSingleData+0x860>
    6be0:	add	r9, r9, #256	; 0x100
    6be4:	add	sl, sl, #1024	; 0x400
    6be8:	cmp	r9, fp
    6bec:	blt	6b98 <ReadSingleData+0x838>
    6bf0:	ldr	fp, [sp, #20]
    6bf4:	sub	r3, fp, #256	; 0x100
    6bf8:	sub	r3, r3, #1
    6bfc:	bic	r3, r3, #255	; 0xff
    6c00:	add	r4, r3, #256	; 0x100
    6c04:	cmp	fp, r4
    6c08:	ble	73bc <ReadSingleData+0x105c>
    6c0c:	sub	fp, fp, r4
    6c10:	ldr	r3, [r6]
    6c14:	mov	r2, fp
    6c18:	ldr	r1, [sp]
    6c1c:	add	r0, sp, #24
    6c20:	bl	1520 <fread@plt>
    6c24:	ldr	r3, [sp, #8]
    6c28:	add	r5, r3, r0
    6c2c:	cmp	fp, #0
    6c30:	ble	73bc <ReadSingleData+0x105c>
    6c34:	ldr	r3, [sp, #4]
    6c38:	add	r6, r3, r4, lsl #2
    6c3c:	add	r4, fp, r4
    6c40:	add	r4, r3, r4, lsl #2
    6c44:	ldr	r7, [sp, #12]
    6c48:	mov	r0, r7
    6c4c:	bl	18d4 <Mat_uint32Swap>
    6c50:	vmov	s15, r0
    6c54:	vcvt.f32.u32	s15, s15
    6c58:	vstmia	r6!, {s15}
    6c5c:	add	r7, r7, #4
    6c60:	cmp	r6, r4
    6c64:	bne	6c48 <ReadSingleData+0x8e8>
    6c68:	b	73bc <ReadSingleData+0x105c>
    6c6c:	ldr	r3, [r6]
    6c70:	mov	r2, fp
    6c74:	ldr	r1, [sp]
    6c78:	add	r0, sp, #24
    6c7c:	bl	1520 <fread@plt>
    6c80:	mov	r5, r0
    6c84:	cmp	fp, #0
    6c88:	ble	73bc <ReadSingleData+0x105c>
    6c8c:	add	r6, sp, #24
    6c90:	ldr	r3, [sp, #4]
    6c94:	mov	r4, r3
    6c98:	add	fp, r3, fp, lsl #2
    6c9c:	mov	r0, r6
    6ca0:	bl	18d4 <Mat_uint32Swap>
    6ca4:	vmov	s15, r0
    6ca8:	vcvt.f32.u32	s15, s15
    6cac:	vstmia	r4!, {s15}
    6cb0:	add	r6, r6, #4
    6cb4:	cmp	r4, fp
    6cb8:	bne	6c9c <ReadSingleData+0x93c>
    6cbc:	b	73bc <ReadSingleData+0x105c>
    6cc0:	cmp	fp, #256	; 0x100
    6cc4:	ble	6da8 <ReadSingleData+0xa48>
    6cc8:	sub	r3, fp, #256	; 0x100
    6ccc:	ldr	r8, [sp, #4]
    6cd0:	mov	r7, r5
    6cd4:	add	sl, sp, #24
    6cd8:	add	r4, sl, #1020	; 0x3fc
    6cdc:	mov	r9, r6
    6ce0:	mov	r6, r3
    6ce4:	ldr	r3, [r9]
    6ce8:	mov	r2, #256	; 0x100
    6cec:	ldr	r1, [sp]
    6cf0:	mov	r0, sl
    6cf4:	bl	1520 <fread@plt>
    6cf8:	add	r5, r5, r0
    6cfc:	str	r5, [sp, #8]
    6d00:	sub	r1, sl, #4
    6d04:	mov	r2, r8
    6d08:	mov	r3, r1
    6d0c:	ldr	r0, [r3, #4]!
    6d10:	vmov	s15, r0
    6d14:	vcvt.f32.u32	s15, s15
    6d18:	vstmia	r2!, {s15}
    6d1c:	cmp	r3, r4
    6d20:	bne	6d0c <ReadSingleData+0x9ac>
    6d24:	add	r7, r7, #256	; 0x100
    6d28:	add	r8, r8, #1024	; 0x400
    6d2c:	cmp	r7, r6
    6d30:	blt	6ce4 <ReadSingleData+0x984>
    6d34:	mov	r6, r9
    6d38:	mov	r9, r1
    6d3c:	sub	r3, fp, #256	; 0x100
    6d40:	sub	r3, r3, #1
    6d44:	bic	r3, r3, #255	; 0xff
    6d48:	add	r4, r3, #256	; 0x100
    6d4c:	cmp	fp, r4
    6d50:	ble	73bc <ReadSingleData+0x105c>
    6d54:	sub	fp, fp, r4
    6d58:	ldr	r3, [r6]
    6d5c:	mov	r2, fp
    6d60:	ldr	r1, [sp]
    6d64:	add	r0, sp, #24
    6d68:	bl	1520 <fread@plt>
    6d6c:	ldr	r3, [sp, #8]
    6d70:	add	r5, r3, r0
    6d74:	cmp	fp, #0
    6d78:	ble	73bc <ReadSingleData+0x105c>
    6d7c:	ldr	r1, [sp, #4]
    6d80:	add	r2, r1, r4, lsl #2
    6d84:	add	r3, fp, r4
    6d88:	add	r3, r1, r3, lsl #2
    6d8c:	ldr	r1, [r9, #4]!
    6d90:	vmov	s15, r1
    6d94:	vcvt.f32.u32	s15, s15
    6d98:	vstmia	r2!, {s15}
    6d9c:	cmp	r2, r3
    6da0:	bne	6d8c <ReadSingleData+0xa2c>
    6da4:	b	73bc <ReadSingleData+0x105c>
    6da8:	ldr	r3, [r6]
    6dac:	mov	r2, fp
    6db0:	ldr	r1, [sp]
    6db4:	add	r0, sp, #24
    6db8:	bl	1520 <fread@plt>
    6dbc:	mov	r5, r0
    6dc0:	cmp	fp, #0
    6dc4:	ble	73bc <ReadSingleData+0x105c>
    6dc8:	add	r2, sp, #20
    6dcc:	ldr	r1, [sp, #4]
    6dd0:	mov	r3, r1
    6dd4:	add	r1, r1, fp, lsl #2
    6dd8:	ldr	r0, [r2, #4]!
    6ddc:	vmov	s15, r0
    6de0:	vcvt.f32.u32	s15, s15
    6de4:	vstmia	r3!, {s15}
    6de8:	cmp	r3, r1
    6dec:	bne	6dd8 <ReadSingleData+0xa78>
    6df0:	b	73bc <ReadSingleData+0x105c>
    6df4:	ldr	r5, [r6, #20]
    6df8:	cmp	r5, #0
    6dfc:	beq	6f54 <ReadSingleData+0xbf4>
    6e00:	cmp	fp, #256	; 0x100
    6e04:	ble	6f00 <ReadSingleData+0xba0>
    6e08:	sub	r3, fp, #256	; 0x100
    6e0c:	ldr	sl, [sp, #4]
    6e10:	mov	r9, #0
    6e14:	mov	r5, r9
    6e18:	add	r2, sp, #24
    6e1c:	str	r2, [sp, #16]
    6e20:	add	r8, sp, #536	; 0x218
    6e24:	str	fp, [sp, #20]
    6e28:	mov	fp, r3
    6e2c:	ldr	r3, [r6]
    6e30:	mov	r2, #256	; 0x100
    6e34:	ldr	r1, [sp]
    6e38:	ldr	r4, [sp, #16]
    6e3c:	mov	r0, r4
    6e40:	bl	1520 <fread@plt>
    6e44:	add	r5, r5, r0
    6e48:	str	r5, [sp, #8]
    6e4c:	str	r4, [sp, #12]
    6e50:	mov	r7, sl
    6e54:	mov	r0, r4
    6e58:	bl	1904 <Mat_int16Swap>
    6e5c:	vmov	s15, r0
    6e60:	vcvt.f32.s32	s15, s15
    6e64:	vstmia	r7!, {s15}
    6e68:	add	r4, r4, #2
    6e6c:	cmp	r4, r8
    6e70:	bne	6e54 <ReadSingleData+0xaf4>
    6e74:	add	r9, r9, #256	; 0x100
    6e78:	add	sl, sl, #1024	; 0x400
    6e7c:	cmp	r9, fp
    6e80:	blt	6e2c <ReadSingleData+0xacc>
    6e84:	ldr	fp, [sp, #20]
    6e88:	sub	r3, fp, #256	; 0x100
    6e8c:	sub	r3, r3, #1
    6e90:	bic	r3, r3, #255	; 0xff
    6e94:	add	r4, r3, #256	; 0x100
    6e98:	cmp	fp, r4
    6e9c:	ble	73bc <ReadSingleData+0x105c>
    6ea0:	sub	fp, fp, r4
    6ea4:	ldr	r3, [r6]
    6ea8:	mov	r2, fp
    6eac:	ldr	r1, [sp]
    6eb0:	add	r0, sp, #24
    6eb4:	bl	1520 <fread@plt>
    6eb8:	ldr	r3, [sp, #8]
    6ebc:	add	r5, r3, r0
    6ec0:	cmp	fp, #0
    6ec4:	ble	73bc <ReadSingleData+0x105c>
    6ec8:	ldr	r3, [sp, #4]
    6ecc:	add	r6, r3, r4, lsl #2
    6ed0:	add	r4, fp, r4
    6ed4:	add	r4, r3, r4, lsl #2
    6ed8:	ldr	r7, [sp, #12]
    6edc:	mov	r0, r7
    6ee0:	bl	1904 <Mat_int16Swap>
    6ee4:	vmov	s15, r0
    6ee8:	vcvt.f32.s32	s15, s15
    6eec:	vstmia	r6!, {s15}
    6ef0:	add	r7, r7, #2
    6ef4:	cmp	r6, r4
    6ef8:	bne	6edc <ReadSingleData+0xb7c>
    6efc:	b	73bc <ReadSingleData+0x105c>
    6f00:	ldr	r3, [r6]
    6f04:	mov	r2, fp
    6f08:	ldr	r1, [sp]
    6f0c:	add	r0, sp, #24
    6f10:	bl	1520 <fread@plt>
    6f14:	mov	r5, r0
    6f18:	cmp	fp, #0
    6f1c:	ble	73bc <ReadSingleData+0x105c>
    6f20:	add	r6, sp, #24
    6f24:	ldr	r3, [sp, #4]
    6f28:	mov	r4, r3
    6f2c:	add	fp, r3, fp, lsl #2
    6f30:	mov	r0, r6
    6f34:	bl	1904 <Mat_int16Swap>
    6f38:	vmov	s15, r0
    6f3c:	vcvt.f32.s32	s15, s15
    6f40:	vstmia	r4!, {s15}
    6f44:	add	r6, r6, #2
    6f48:	cmp	r4, fp
    6f4c:	bne	6f30 <ReadSingleData+0xbd0>
    6f50:	b	73bc <ReadSingleData+0x105c>
    6f54:	cmp	fp, #256	; 0x100
    6f58:	ble	7040 <ReadSingleData+0xce0>
    6f5c:	sub	r3, fp, #256	; 0x100
    6f60:	ldr	r8, [sp, #4]
    6f64:	mov	r7, r5
    6f68:	add	sl, sp, #24
    6f6c:	add	r4, sl, #508	; 0x1fc
    6f70:	add	r4, r4, #2
    6f74:	mov	r9, r6
    6f78:	mov	r6, r3
    6f7c:	ldr	r3, [r9]
    6f80:	mov	r2, #256	; 0x100
    6f84:	ldr	r1, [sp]
    6f88:	mov	r0, sl
    6f8c:	bl	1520 <fread@plt>
    6f90:	add	r5, r5, r0
    6f94:	str	r5, [sp, #8]
    6f98:	sub	r1, sl, #2
    6f9c:	mov	r2, r8
    6fa0:	mov	r3, r1
    6fa4:	ldrsh	r0, [r3, #2]!
    6fa8:	vmov	s15, r0
    6fac:	vcvt.f32.s32	s15, s15
    6fb0:	vstmia	r2!, {s15}
    6fb4:	cmp	r3, r4
    6fb8:	bne	6fa4 <ReadSingleData+0xc44>
    6fbc:	add	r7, r7, #256	; 0x100
    6fc0:	add	r8, r8, #1024	; 0x400
    6fc4:	cmp	r7, r6
    6fc8:	blt	6f7c <ReadSingleData+0xc1c>
    6fcc:	mov	r6, r9
    6fd0:	mov	r9, r1
    6fd4:	sub	r3, fp, #256	; 0x100
    6fd8:	sub	r3, r3, #1
    6fdc:	bic	r3, r3, #255	; 0xff
    6fe0:	add	r4, r3, #256	; 0x100
    6fe4:	cmp	fp, r4
    6fe8:	ble	73bc <ReadSingleData+0x105c>
    6fec:	sub	fp, fp, r4
    6ff0:	ldr	r3, [r6]
    6ff4:	mov	r2, fp
    6ff8:	ldr	r1, [sp]
    6ffc:	add	r0, sp, #24
    7000:	bl	1520 <fread@plt>
    7004:	ldr	r3, [sp, #8]
    7008:	add	r5, r3, r0
    700c:	cmp	fp, #0
    7010:	ble	73bc <ReadSingleData+0x105c>
    7014:	ldr	r1, [sp, #4]
    7018:	add	r2, r1, r4, lsl #2
    701c:	add	r3, fp, r4
    7020:	add	r3, r1, r3, lsl #2
    7024:	ldrsh	r1, [r9, #2]!
    7028:	vmov	s15, r1
    702c:	vcvt.f32.s32	s15, s15
    7030:	vstmia	r2!, {s15}
    7034:	cmp	r2, r3
    7038:	bne	7024 <ReadSingleData+0xcc4>
    703c:	b	73bc <ReadSingleData+0x105c>
    7040:	ldr	r3, [r6]
    7044:	mov	r2, fp
    7048:	ldr	r1, [sp]
    704c:	add	r0, sp, #24
    7050:	bl	1520 <fread@plt>
    7054:	mov	r5, r0
    7058:	cmp	fp, #0
    705c:	ble	73bc <ReadSingleData+0x105c>
    7060:	add	r2, sp, #22
    7064:	ldr	r1, [sp, #4]
    7068:	mov	r3, r1
    706c:	add	r1, r1, fp, lsl #2
    7070:	ldrsh	r0, [r2, #2]!
    7074:	vmov	s15, r0
    7078:	vcvt.f32.s32	s15, s15
    707c:	vstmia	r3!, {s15}
    7080:	cmp	r3, r1
    7084:	bne	7070 <ReadSingleData+0xd10>
    7088:	b	73bc <ReadSingleData+0x105c>
    708c:	ldr	r5, [r6, #20]
    7090:	cmp	r5, #0
    7094:	beq	71ec <ReadSingleData+0xe8c>
    7098:	cmp	fp, #256	; 0x100
    709c:	ble	7198 <ReadSingleData+0xe38>
    70a0:	sub	r3, fp, #256	; 0x100
    70a4:	ldr	sl, [sp, #4]
    70a8:	mov	r9, #0
    70ac:	mov	r5, r9
    70b0:	add	r2, sp, #24
    70b4:	str	r2, [sp, #16]
    70b8:	add	r8, sp, #536	; 0x218
    70bc:	str	fp, [sp, #20]
    70c0:	mov	fp, r3
    70c4:	ldr	r3, [r6]
    70c8:	mov	r2, #256	; 0x100
    70cc:	ldr	r1, [sp]
    70d0:	ldr	r4, [sp, #16]
    70d4:	mov	r0, r4
    70d8:	bl	1520 <fread@plt>
    70dc:	add	r5, r5, r0
    70e0:	str	r5, [sp, #8]
    70e4:	str	r4, [sp, #12]
    70e8:	mov	r7, sl
    70ec:	mov	r0, r4
    70f0:	bl	1924 <Mat_uint16Swap>
    70f4:	vmov	s15, r0
    70f8:	vcvt.f32.u32	s15, s15
    70fc:	vstmia	r7!, {s15}
    7100:	add	r4, r4, #2
    7104:	cmp	r4, r8
    7108:	bne	70ec <ReadSingleData+0xd8c>
    710c:	add	r9, r9, #256	; 0x100
    7110:	add	sl, sl, #1024	; 0x400
    7114:	cmp	r9, fp
    7118:	blt	70c4 <ReadSingleData+0xd64>
    711c:	ldr	fp, [sp, #20]
    7120:	sub	r3, fp, #256	; 0x100
    7124:	sub	r3, r3, #1
    7128:	bic	r3, r3, #255	; 0xff
    712c:	add	r4, r3, #256	; 0x100
    7130:	cmp	fp, r4
    7134:	ble	73bc <ReadSingleData+0x105c>
    7138:	sub	fp, fp, r4
    713c:	ldr	r3, [r6]
    7140:	mov	r2, fp
    7144:	ldr	r1, [sp]
    7148:	add	r0, sp, #24
    714c:	bl	1520 <fread@plt>
    7150:	ldr	r3, [sp, #8]
    7154:	add	r5, r3, r0
    7158:	cmp	fp, #0
    715c:	ble	73bc <ReadSingleData+0x105c>
    7160:	ldr	r3, [sp, #4]
    7164:	add	r6, r3, r4, lsl #2
    7168:	add	r4, fp, r4
    716c:	add	r4, r3, r4, lsl #2
    7170:	ldr	r7, [sp, #12]
    7174:	mov	r0, r7
    7178:	bl	1924 <Mat_uint16Swap>
    717c:	vmov	s15, r0
    7180:	vcvt.f32.u32	s15, s15
    7184:	vstmia	r6!, {s15}
    7188:	add	r7, r7, #2
    718c:	cmp	r6, r4
    7190:	bne	7174 <ReadSingleData+0xe14>
    7194:	b	73bc <ReadSingleData+0x105c>
    7198:	ldr	r3, [r6]
    719c:	mov	r2, fp
    71a0:	ldr	r1, [sp]
    71a4:	add	r0, sp, #24
    71a8:	bl	1520 <fread@plt>
    71ac:	mov	r5, r0
    71b0:	cmp	fp, #0
    71b4:	ble	73bc <ReadSingleData+0x105c>
    71b8:	add	r6, sp, #24
    71bc:	ldr	r3, [sp, #4]
    71c0:	mov	r4, r3
    71c4:	add	fp, r3, fp, lsl #2
    71c8:	mov	r0, r6
    71cc:	bl	1924 <Mat_uint16Swap>
    71d0:	vmov	s15, r0
    71d4:	vcvt.f32.u32	s15, s15
    71d8:	vstmia	r4!, {s15}
    71dc:	add	r6, r6, #2
    71e0:	cmp	r4, fp
    71e4:	bne	71c8 <ReadSingleData+0xe68>
    71e8:	b	73bc <ReadSingleData+0x105c>
    71ec:	cmp	fp, #256	; 0x100
    71f0:	ble	72d8 <ReadSingleData+0xf78>
    71f4:	sub	r3, fp, #256	; 0x100
    71f8:	ldr	r8, [sp, #4]
    71fc:	mov	r7, r5
    7200:	add	sl, sp, #24
    7204:	add	r4, sl, #508	; 0x1fc
    7208:	add	r4, r4, #2
    720c:	mov	r9, r6
    7210:	mov	r6, r3
    7214:	ldr	r3, [r9]
    7218:	mov	r2, #256	; 0x100
    721c:	ldr	r1, [sp]
    7220:	mov	r0, sl
    7224:	bl	1520 <fread@plt>
    7228:	add	r5, r5, r0
    722c:	str	r5, [sp, #8]
    7230:	sub	r1, sl, #2
    7234:	mov	r2, r8
    7238:	mov	r3, r1
    723c:	ldrh	r0, [r3, #2]!
    7240:	vmov	s15, r0
    7244:	vcvt.f32.u32	s15, s15
    7248:	vstmia	r2!, {s15}
    724c:	cmp	r3, r4
    7250:	bne	723c <ReadSingleData+0xedc>
    7254:	add	r7, r7, #256	; 0x100
    7258:	add	r8, r8, #1024	; 0x400
    725c:	cmp	r7, r6
    7260:	blt	7214 <ReadSingleData+0xeb4>
    7264:	mov	r6, r9
    7268:	mov	r9, r1
    726c:	sub	r3, fp, #256	; 0x100
    7270:	sub	r3, r3, #1
    7274:	bic	r3, r3, #255	; 0xff
    7278:	add	r4, r3, #256	; 0x100
    727c:	cmp	fp, r4
    7280:	ble	73bc <ReadSingleData+0x105c>
    7284:	sub	fp, fp, r4
    7288:	ldr	r3, [r6]
    728c:	mov	r2, fp
    7290:	ldr	r1, [sp]
    7294:	add	r0, sp, #24
    7298:	bl	1520 <fread@plt>
    729c:	ldr	r3, [sp, #8]
    72a0:	add	r5, r3, r0
    72a4:	cmp	fp, #0
    72a8:	ble	73bc <ReadSingleData+0x105c>
    72ac:	ldr	r1, [sp, #4]
    72b0:	add	r2, r1, r4, lsl #2
    72b4:	add	r3, fp, r4
    72b8:	add	r3, r1, r3, lsl #2
    72bc:	ldrh	r1, [r9, #2]!
    72c0:	vmov	s15, r1
    72c4:	vcvt.f32.u32	s15, s15
    72c8:	vstmia	r2!, {s15}
    72cc:	cmp	r2, r3
    72d0:	bne	72bc <ReadSingleData+0xf5c>
    72d4:	b	73bc <ReadSingleData+0x105c>
    72d8:	ldr	r3, [r6]
    72dc:	mov	r2, fp
    72e0:	ldr	r1, [sp]
    72e4:	add	r0, sp, #24
    72e8:	bl	1520 <fread@plt>
    72ec:	mov	r5, r0
    72f0:	cmp	fp, #0
    72f4:	ble	73bc <ReadSingleData+0x105c>
    72f8:	add	r2, sp, #22
    72fc:	ldr	r1, [sp, #4]
    7300:	mov	r3, r1
    7304:	add	r1, r1, fp, lsl #2
    7308:	ldrh	r0, [r2, #2]!
    730c:	vmov	s15, r0
    7310:	vcvt.f32.u32	s15, s15
    7314:	vstmia	r3!, {s15}
    7318:	cmp	r3, r1
    731c:	bne	7308 <ReadSingleData+0xfa8>
    7320:	b	73bc <ReadSingleData+0x105c>
    7324:	cmp	fp, #256	; 0x100
    7328:	ble	73e4 <ReadSingleData+0x1084>
    732c:	sub	r3, fp, #256	; 0x100
    7330:	ldr	r8, [sp, #4]
    7334:	mov	r7, #0
    7338:	mov	r5, r7
    733c:	add	sl, sp, #24
    7340:	add	r4, sl, #255	; 0xff
    7344:	mov	r9, r6
    7348:	mov	r6, r3
    734c:	ldr	r3, [r9]
    7350:	mov	r2, #256	; 0x100
    7354:	ldr	r1, [sp]
    7358:	mov	r0, sl
    735c:	bl	1520 <fread@plt>
    7360:	add	r5, r5, r0
    7364:	str	r5, [sp, #8]
    7368:	sub	r1, sl, #1
    736c:	mov	r2, r8
    7370:	mov	r3, r1
    7374:	ldrsb	r0, [r3, #1]!
    7378:	vmov	s15, r0
    737c:	vcvt.f32.s32	s15, s15
    7380:	vstmia	r2!, {s15}
    7384:	cmp	r3, r4
    7388:	bne	7374 <ReadSingleData+0x1014>
    738c:	add	r7, r7, #256	; 0x100
    7390:	add	r8, r8, #1024	; 0x400
    7394:	cmp	r7, r6
    7398:	blt	734c <ReadSingleData+0xfec>
    739c:	mov	r6, r9
    73a0:	mov	r9, r1
    73a4:	sub	r3, fp, #256	; 0x100
    73a8:	sub	r3, r3, #1
    73ac:	bic	r3, r3, #255	; 0xff
    73b0:	add	r4, r3, #256	; 0x100
    73b4:	cmp	fp, r4
    73b8:	bgt	7430 <ReadSingleData+0x10d0>
    73bc:	ldr	r3, [sp]
    73c0:	mul	r0, r3, r5
    73c4:	add	sp, sp, #2064	; 0x810
    73c8:	add	sp, sp, #12
    73cc:	ldrd	r4, [sp]
    73d0:	ldrd	r6, [sp, #8]
    73d4:	ldrd	r8, [sp, #16]
    73d8:	ldrd	sl, [sp, #24]
    73dc:	add	sp, sp, #32
    73e0:	pop	{pc}		; (ldr pc, [sp], #4)
    73e4:	ldr	r3, [r6]
    73e8:	mov	r2, fp
    73ec:	ldr	r1, [sp]
    73f0:	add	r0, sp, #24
    73f4:	bl	1520 <fread@plt>
    73f8:	mov	r5, r0
    73fc:	cmp	fp, #0
    7400:	ble	73bc <ReadSingleData+0x105c>
    7404:	add	r2, sp, #23
    7408:	ldr	r1, [sp, #4]
    740c:	mov	r3, r1
    7410:	add	r1, r1, fp, lsl #2
    7414:	ldrsb	r0, [r2, #1]!
    7418:	vmov	s15, r0
    741c:	vcvt.f32.s32	s15, s15
    7420:	vstmia	r3!, {s15}
    7424:	cmp	r3, r1
    7428:	bne	7414 <ReadSingleData+0x10b4>
    742c:	b	73bc <ReadSingleData+0x105c>
    7430:	sub	fp, fp, r4
    7434:	ldr	r3, [r6]
    7438:	mov	r2, fp
    743c:	ldr	r1, [sp]
    7440:	add	r0, sp, #24
    7444:	bl	1520 <fread@plt>
    7448:	ldr	r3, [sp, #8]
    744c:	add	r5, r3, r0
    7450:	cmp	fp, #0
    7454:	ble	73bc <ReadSingleData+0x105c>
    7458:	ldr	r1, [sp, #4]
    745c:	add	r2, r1, r4, lsl #2
    7460:	add	r3, fp, r4
    7464:	add	r3, r1, r3, lsl #2
    7468:	ldrsb	r1, [r9, #1]!
    746c:	vmov	s15, r1
    7470:	vcvt.f32.s32	s15, s15
    7474:	vstmia	r2!, {s15}
    7478:	cmp	r2, r3
    747c:	bne	7468 <ReadSingleData+0x1108>
    7480:	b	73bc <ReadSingleData+0x105c>
    7484:	cmp	fp, #256	; 0x100
    7488:	ble	7570 <ReadSingleData+0x1210>
    748c:	sub	r3, fp, #256	; 0x100
    7490:	ldr	r8, [sp, #4]
    7494:	mov	r7, #0
    7498:	mov	r5, r7
    749c:	add	sl, sp, #24
    74a0:	add	r4, sl, #255	; 0xff
    74a4:	mov	r9, r6
    74a8:	mov	r6, r3
    74ac:	ldr	r3, [r9]
    74b0:	mov	r2, #256	; 0x100
    74b4:	ldr	r1, [sp]
    74b8:	mov	r0, sl
    74bc:	bl	1520 <fread@plt>
    74c0:	add	r5, r5, r0
    74c4:	str	r5, [sp, #8]
    74c8:	sub	r1, sl, #1
    74cc:	mov	r2, r8
    74d0:	mov	r3, r1
    74d4:	ldrb	r0, [r3, #1]!
    74d8:	vmov	s15, r0
    74dc:	vcvt.f32.u32	s15, s15
    74e0:	vstmia	r2!, {s15}
    74e4:	cmp	r3, r4
    74e8:	bne	74d4 <ReadSingleData+0x1174>
    74ec:	add	r7, r7, #256	; 0x100
    74f0:	add	r8, r8, #1024	; 0x400
    74f4:	cmp	r7, r6
    74f8:	blt	74ac <ReadSingleData+0x114c>
    74fc:	mov	r6, r9
    7500:	mov	r9, r1
    7504:	sub	r3, fp, #256	; 0x100
    7508:	sub	r3, r3, #1
    750c:	bic	r3, r3, #255	; 0xff
    7510:	add	r4, r3, #256	; 0x100
    7514:	cmp	fp, r4
    7518:	ble	73bc <ReadSingleData+0x105c>
    751c:	sub	fp, fp, r4
    7520:	ldr	r3, [r6]
    7524:	mov	r2, fp
    7528:	ldr	r1, [sp]
    752c:	add	r0, sp, #24
    7530:	bl	1520 <fread@plt>
    7534:	ldr	r3, [sp, #8]
    7538:	add	r5, r3, r0
    753c:	cmp	fp, #0
    7540:	ble	73bc <ReadSingleData+0x105c>
    7544:	ldr	r1, [sp, #4]
    7548:	add	r2, r1, r4, lsl #2
    754c:	add	r3, fp, r4
    7550:	add	r3, r1, r3, lsl #2
    7554:	ldrb	r1, [r9, #1]!
    7558:	vmov	s15, r1
    755c:	vcvt.f32.u32	s15, s15
    7560:	vstmia	r2!, {s15}
    7564:	cmp	r2, r3
    7568:	bne	7554 <ReadSingleData+0x11f4>
    756c:	b	73bc <ReadSingleData+0x105c>
    7570:	ldr	r3, [r6]
    7574:	mov	r2, fp
    7578:	ldr	r1, [sp]
    757c:	add	r0, sp, #24
    7580:	bl	1520 <fread@plt>
    7584:	mov	r5, r0
    7588:	cmp	fp, #0
    758c:	ble	73bc <ReadSingleData+0x105c>
    7590:	add	r2, sp, #23
    7594:	ldr	r1, [sp, #4]
    7598:	mov	r3, r1
    759c:	add	r1, r1, fp, lsl #2
    75a0:	ldrb	r0, [r2, #1]!
    75a4:	vmov	s15, r0
    75a8:	vcvt.f32.u32	s15, s15
    75ac:	vstmia	r3!, {s15}
    75b0:	cmp	r3, r1
    75b4:	bne	75a0 <ReadSingleData+0x1240>
    75b8:	b	73bc <ReadSingleData+0x105c>
    75bc:	cmp	r4, #12
    75c0:	beq	76d4 <ReadSingleData+0x1374>
    75c4:	cmp	r4, #13
    75c8:	movne	r5, #0
    75cc:	bne	73bc <ReadSingleData+0x105c>
    75d0:	ldr	r5, [r6, #20]
    75d4:	cmp	r5, #0
    75d8:	beq	79ac <ReadSingleData+0x164c>
    75dc:	cmp	fp, #256	; 0x100
    75e0:	ble	795c <ReadSingleData+0x15fc>
    75e4:	sub	r3, fp, #256	; 0x100
    75e8:	str	r3, [sp, #16]
    75ec:	ldr	sl, [sp, #4]
    75f0:	mov	r9, #0
    75f4:	mov	r5, r9
    75f8:	add	r3, sp, #24
    75fc:	str	r3, [sp, #20]
    7600:	add	r8, sp, #2064	; 0x810
    7604:	add	r8, r8, #8
    7608:	ldr	r3, [r6]
    760c:	mov	r2, #256	; 0x100
    7610:	ldr	r1, [sp]
    7614:	ldr	r4, [sp, #20]
    7618:	mov	r0, r4
    761c:	bl	1520 <fread@plt>
    7620:	add	r5, r5, r0
    7624:	str	r5, [sp, #8]
    7628:	str	r4, [sp, #12]
    762c:	mov	r7, sl
    7630:	mov	r0, r4
    7634:	bl	1848 <Mat_uint64Swap>
    7638:	bl	4ef80 <__aeabi_ul2f>
    763c:	str	r0, [r7], #4
    7640:	add	r4, r4, #8
    7644:	cmp	r8, r4
    7648:	bne	7630 <ReadSingleData+0x12d0>
    764c:	add	r9, r9, #256	; 0x100
    7650:	add	sl, sl, #1024	; 0x400
    7654:	ldr	r3, [sp, #16]
    7658:	cmp	r9, r3
    765c:	blt	7608 <ReadSingleData+0x12a8>
    7660:	sub	r3, fp, #256	; 0x100
    7664:	sub	r3, r3, #1
    7668:	bic	r3, r3, #255	; 0xff
    766c:	add	r4, r3, #256	; 0x100
    7670:	cmp	fp, r4
    7674:	ble	73bc <ReadSingleData+0x105c>
    7678:	sub	fp, fp, r4
    767c:	ldr	r3, [r6]
    7680:	mov	r2, fp
    7684:	ldr	r1, [sp]
    7688:	add	r0, sp, #24
    768c:	bl	1520 <fread@plt>
    7690:	ldr	r3, [sp, #8]
    7694:	add	r5, r3, r0
    7698:	cmp	fp, #0
    769c:	ble	73bc <ReadSingleData+0x105c>
    76a0:	ldr	r3, [sp, #4]
    76a4:	add	r6, r3, r4, lsl #2
    76a8:	add	r4, fp, r4
    76ac:	add	r4, r3, r4, lsl #2
    76b0:	ldr	r7, [sp, #12]
    76b4:	mov	r0, r7
    76b8:	bl	1848 <Mat_uint64Swap>
    76bc:	bl	4ef80 <__aeabi_ul2f>
    76c0:	str	r0, [r6], #4
    76c4:	add	r7, r7, #8
    76c8:	cmp	r4, r6
    76cc:	bne	76b4 <ReadSingleData+0x1354>
    76d0:	b	73bc <ReadSingleData+0x105c>
    76d4:	ldr	r5, [r6, #20]
    76d8:	cmp	r5, #0
    76dc:	beq	7828 <ReadSingleData+0x14c8>
    76e0:	cmp	fp, #256	; 0x100
    76e4:	ble	77d8 <ReadSingleData+0x1478>
    76e8:	sub	r3, fp, #256	; 0x100
    76ec:	str	r3, [sp, #16]
    76f0:	ldr	sl, [sp, #4]
    76f4:	mov	r9, #0
    76f8:	mov	r5, r9
    76fc:	add	r3, sp, #24
    7700:	str	r3, [sp, #20]
    7704:	add	r8, sp, #2064	; 0x810
    7708:	add	r8, r8, #8
    770c:	ldr	r3, [r6]
    7710:	mov	r2, #256	; 0x100
    7714:	ldr	r1, [sp]
    7718:	ldr	r4, [sp, #20]
    771c:	mov	r0, r4
    7720:	bl	1520 <fread@plt>
    7724:	add	r5, r5, r0
    7728:	str	r5, [sp, #8]
    772c:	str	r4, [sp, #12]
    7730:	mov	r7, sl
    7734:	mov	r0, r4
    7738:	bl	17ec <Mat_int64Swap>
    773c:	bl	4ef90 <__aeabi_l2f>
    7740:	str	r0, [r7], #4
    7744:	add	r4, r4, #8
    7748:	cmp	r8, r4
    774c:	bne	7734 <ReadSingleData+0x13d4>
    7750:	add	r9, r9, #256	; 0x100
    7754:	add	sl, sl, #1024	; 0x400
    7758:	ldr	r3, [sp, #16]
    775c:	cmp	r9, r3
    7760:	blt	770c <ReadSingleData+0x13ac>
    7764:	sub	r3, fp, #256	; 0x100
    7768:	sub	r3, r3, #1
    776c:	bic	r3, r3, #255	; 0xff
    7770:	add	r4, r3, #256	; 0x100
    7774:	cmp	fp, r4
    7778:	ble	73bc <ReadSingleData+0x105c>
    777c:	sub	fp, fp, r4
    7780:	ldr	r3, [r6]
    7784:	mov	r2, fp
    7788:	ldr	r1, [sp]
    778c:	add	r0, sp, #24
    7790:	bl	1520 <fread@plt>
    7794:	ldr	r3, [sp, #8]
    7798:	add	r5, r3, r0
    779c:	cmp	fp, #0
    77a0:	ble	73bc <ReadSingleData+0x105c>
    77a4:	ldr	r3, [sp, #4]
    77a8:	add	r6, r3, r4, lsl #2
    77ac:	add	r4, fp, r4
    77b0:	add	r4, r3, r4, lsl #2
    77b4:	ldr	r7, [sp, #12]
    77b8:	mov	r0, r7
    77bc:	bl	17ec <Mat_int64Swap>
    77c0:	bl	4ef90 <__aeabi_l2f>
    77c4:	str	r0, [r6], #4
    77c8:	add	r7, r7, #8
    77cc:	cmp	r4, r6
    77d0:	bne	77b8 <ReadSingleData+0x1458>
    77d4:	b	73bc <ReadSingleData+0x105c>
    77d8:	ldr	r3, [r6]
    77dc:	mov	r2, fp
    77e0:	ldr	r1, [sp]
    77e4:	add	r0, sp, #24
    77e8:	bl	1520 <fread@plt>
    77ec:	mov	r5, r0
    77f0:	cmp	fp, #0
    77f4:	ble	73bc <ReadSingleData+0x105c>
    77f8:	add	r6, sp, #24
    77fc:	ldr	r3, [sp, #4]
    7800:	mov	r4, r3
    7804:	add	fp, r3, fp, lsl #2
    7808:	mov	r0, r6
    780c:	bl	17ec <Mat_int64Swap>
    7810:	bl	4ef90 <__aeabi_l2f>
    7814:	str	r0, [r4], #4
    7818:	add	r6, r6, #8
    781c:	cmp	r4, fp
    7820:	bne	7808 <ReadSingleData+0x14a8>
    7824:	b	73bc <ReadSingleData+0x105c>
    7828:	cmp	fp, #256	; 0x100
    782c:	ble	7914 <ReadSingleData+0x15b4>
    7830:	sub	r3, fp, #256	; 0x100
    7834:	str	r3, [sp, #16]
    7838:	ldr	r3, [sp, #4]
    783c:	str	r3, [sp, #8]
    7840:	mov	r9, r5
    7844:	add	r3, sp, #24
    7848:	str	r3, [sp, #20]
    784c:	add	r8, sp, #2064	; 0x810
    7850:	ldr	r3, [r6]
    7854:	mov	r2, #256	; 0x100
    7858:	ldr	r1, [sp]
    785c:	ldr	r4, [sp, #20]
    7860:	mov	r0, r4
    7864:	bl	1520 <fread@plt>
    7868:	add	r5, r5, r0
    786c:	str	r5, [sp, #12]
    7870:	sub	sl, r4, #8
    7874:	ldr	r7, [sp, #8]
    7878:	mov	r4, sl
    787c:	ldrd	r0, [r4, #8]!
    7880:	bl	4ef90 <__aeabi_l2f>
    7884:	str	r0, [r7], #4
    7888:	cmp	r8, r4
    788c:	bne	787c <ReadSingleData+0x151c>
    7890:	add	r9, r9, #256	; 0x100
    7894:	ldr	r3, [sp, #8]
    7898:	add	r3, r3, #1024	; 0x400
    789c:	str	r3, [sp, #8]
    78a0:	ldr	r3, [sp, #16]
    78a4:	cmp	r9, r3
    78a8:	blt	7850 <ReadSingleData+0x14f0>
    78ac:	sub	r3, fp, #256	; 0x100
    78b0:	sub	r3, r3, #1
    78b4:	bic	r3, r3, #255	; 0xff
    78b8:	add	r4, r3, #256	; 0x100
    78bc:	cmp	fp, r4
    78c0:	ble	73bc <ReadSingleData+0x105c>
    78c4:	sub	fp, fp, r4
    78c8:	ldr	r3, [r6]
    78cc:	mov	r2, fp
    78d0:	ldr	r1, [sp]
    78d4:	add	r0, sp, #24
    78d8:	bl	1520 <fread@plt>
    78dc:	ldr	r3, [sp, #12]
    78e0:	add	r5, r3, r0
    78e4:	cmp	fp, #0
    78e8:	ble	73bc <ReadSingleData+0x105c>
    78ec:	ldr	r3, [sp, #4]
    78f0:	add	r6, r3, r4, lsl #2
    78f4:	add	r4, fp, r4
    78f8:	add	r4, r3, r4, lsl #2
    78fc:	ldrd	r0, [sl, #8]!
    7900:	bl	4ef90 <__aeabi_l2f>
    7904:	str	r0, [r6], #4
    7908:	cmp	r4, r6
    790c:	bne	78fc <ReadSingleData+0x159c>
    7910:	b	73bc <ReadSingleData+0x105c>
    7914:	ldr	r3, [r6]
    7918:	mov	r2, fp
    791c:	ldr	r1, [sp]
    7920:	add	r0, sp, #24
    7924:	bl	1520 <fread@plt>
    7928:	mov	r5, r0
    792c:	cmp	fp, #0
    7930:	ble	73bc <ReadSingleData+0x105c>
    7934:	add	r6, sp, #16
    7938:	ldr	r3, [sp, #4]
    793c:	mov	r4, r3
    7940:	add	fp, r3, fp, lsl #2
    7944:	ldrd	r0, [r6, #8]!
    7948:	bl	4ef90 <__aeabi_l2f>
    794c:	str	r0, [r4], #4
    7950:	cmp	r4, fp
    7954:	bne	7944 <ReadSingleData+0x15e4>
    7958:	b	73bc <ReadSingleData+0x105c>
    795c:	ldr	r3, [r6]
    7960:	mov	r2, fp
    7964:	ldr	r1, [sp]
    7968:	add	r0, sp, #24
    796c:	bl	1520 <fread@plt>
    7970:	mov	r5, r0
    7974:	cmp	fp, #0
    7978:	ble	73bc <ReadSingleData+0x105c>
    797c:	add	r6, sp, #24
    7980:	ldr	r3, [sp, #4]
    7984:	mov	r4, r3
    7988:	add	fp, r3, fp, lsl #2
    798c:	mov	r0, r6
    7990:	bl	1848 <Mat_uint64Swap>
    7994:	bl	4ef80 <__aeabi_ul2f>
    7998:	str	r0, [r4], #4
    799c:	add	r6, r6, #8
    79a0:	cmp	r4, fp
    79a4:	bne	798c <ReadSingleData+0x162c>
    79a8:	b	73bc <ReadSingleData+0x105c>
    79ac:	cmp	fp, #256	; 0x100
    79b0:	ble	7a98 <ReadSingleData+0x1738>
    79b4:	sub	r3, fp, #256	; 0x100
    79b8:	str	r3, [sp, #16]
    79bc:	ldr	r3, [sp, #4]
    79c0:	str	r3, [sp, #8]
    79c4:	mov	r9, r5
    79c8:	add	r3, sp, #24
    79cc:	str	r3, [sp, #20]
    79d0:	add	r8, sp, #2064	; 0x810
    79d4:	ldr	r3, [r6]
    79d8:	mov	r2, #256	; 0x100
    79dc:	ldr	r1, [sp]
    79e0:	ldr	r4, [sp, #20]
    79e4:	mov	r0, r4
    79e8:	bl	1520 <fread@plt>
    79ec:	add	r5, r5, r0
    79f0:	str	r5, [sp, #12]
    79f4:	sub	sl, r4, #8
    79f8:	ldr	r7, [sp, #8]
    79fc:	mov	r4, sl
    7a00:	ldrd	r0, [r4, #8]!
    7a04:	bl	4ef80 <__aeabi_ul2f>
    7a08:	str	r0, [r7], #4
    7a0c:	cmp	r8, r4
    7a10:	bne	7a00 <ReadSingleData+0x16a0>
    7a14:	add	r9, r9, #256	; 0x100
    7a18:	ldr	r3, [sp, #8]
    7a1c:	add	r3, r3, #1024	; 0x400
    7a20:	str	r3, [sp, #8]
    7a24:	ldr	r3, [sp, #16]
    7a28:	cmp	r9, r3
    7a2c:	blt	79d4 <ReadSingleData+0x1674>
    7a30:	sub	r3, fp, #256	; 0x100
    7a34:	sub	r3, r3, #1
    7a38:	bic	r3, r3, #255	; 0xff
    7a3c:	add	r4, r3, #256	; 0x100
    7a40:	cmp	fp, r4
    7a44:	ble	73bc <ReadSingleData+0x105c>
    7a48:	sub	r7, fp, r4
    7a4c:	ldr	r3, [r6]
    7a50:	mov	r2, r7
    7a54:	ldr	r1, [sp]
    7a58:	add	r0, sp, #24
    7a5c:	bl	1520 <fread@plt>
    7a60:	ldr	r3, [sp, #12]
    7a64:	add	r5, r3, r0
    7a68:	cmp	r7, #0
    7a6c:	ble	73bc <ReadSingleData+0x105c>
    7a70:	ldr	r3, [sp, #4]
    7a74:	add	r6, r3, r4, lsl #2
    7a78:	add	r4, r7, r4
    7a7c:	add	r4, r3, r4, lsl #2
    7a80:	ldrd	r0, [sl, #8]!
    7a84:	bl	4ef80 <__aeabi_ul2f>
    7a88:	str	r0, [r6], #4
    7a8c:	cmp	r4, r6
    7a90:	bne	7a80 <ReadSingleData+0x1720>
    7a94:	b	73bc <ReadSingleData+0x105c>
    7a98:	ldr	r3, [r6]
    7a9c:	mov	r2, fp
    7aa0:	ldr	r1, [sp]
    7aa4:	add	r0, sp, #24
    7aa8:	bl	1520 <fread@plt>
    7aac:	mov	r5, r0
    7ab0:	cmp	fp, #0
    7ab4:	ble	73bc <ReadSingleData+0x105c>
    7ab8:	add	r6, sp, #16
    7abc:	ldr	r3, [sp, #4]
    7ac0:	mov	r4, r3
    7ac4:	add	fp, r3, fp, lsl #2
    7ac8:	ldrd	r0, [r6, #8]!
    7acc:	bl	4ef80 <__aeabi_ul2f>
    7ad0:	str	r0, [r4], #4
    7ad4:	cmp	r4, fp
    7ad8:	bne	7ac8 <ReadSingleData+0x1768>
    7adc:	b	73bc <ReadSingleData+0x105c>
    7ae0:	mov	r0, #0
    7ae4:	bx	lr

00007ae8 <ReadCompressedSingleData>:
    7ae8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7aec:	strd	r6, [sp, #8]
    7af0:	strd	r8, [sp, #16]
    7af4:	str	sl, [sp, #24]
    7af8:	str	lr, [sp, #28]
    7afc:	sub	sp, sp, #8
    7b00:	ldr	r5, [sp, #40]	; 0x28
    7b04:	mov	r8, r2
    7b08:	mov	r7, r1
    7b0c:	clz	r1, r1
    7b10:	lsr	r1, r1, #5
    7b14:	cmp	r2, #0
    7b18:	movne	r2, r1
    7b1c:	moveq	r2, #1
    7b20:	cmp	r0, #0
    7b24:	moveq	r2, #1
    7b28:	cmp	r2, #0
    7b2c:	movne	r0, #0
    7b30:	beq	7b50 <ReadCompressedSingleData+0x68>
    7b34:	add	sp, sp, #8
    7b38:	ldrd	r4, [sp]
    7b3c:	ldrd	r6, [sp, #8]
    7b40:	ldrd	r8, [sp, #16]
    7b44:	ldr	sl, [sp, #24]
    7b48:	add	sp, sp, #28
    7b4c:	pop	{pc}		; (ldr pc, [sp], #4)
    7b50:	mov	r6, r0
    7b54:	mov	r4, r3
    7b58:	mov	r0, r3
    7b5c:	bl	1598 <Mat_SizeOf@plt>
    7b60:	mov	r9, r0
    7b64:	sub	r3, r4, #1
    7b68:	cmp	r3, #8
    7b6c:	addls	pc, pc, r3, lsl #2
    7b70:	b	7f94 <ReadCompressedSingleData+0x4ac>
    7b74:	b	7be0 <ReadCompressedSingleData+0xf8>
    7b78:	b	7b98 <ReadCompressedSingleData+0xb0>
    7b7c:	b	7e64 <ReadCompressedSingleData+0x37c>
    7b80:	b	7efc <ReadCompressedSingleData+0x414>
    7b84:	b	7d3c <ReadCompressedSingleData+0x254>
    7b88:	b	7dd0 <ReadCompressedSingleData+0x2e8>
    7b8c:	b	7cb4 <ReadCompressedSingleData+0x1cc>
    7b90:	b	7f94 <ReadCompressedSingleData+0x4ac>
    7b94:	b	7c24 <ReadCompressedSingleData+0x13c>
    7b98:	cmp	r5, #0
    7b9c:	movgt	r4, r8
    7ba0:	addgt	r8, r8, r5, lsl #2
    7ba4:	movgt	sl, sp
    7ba8:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7bac:	mov	r3, r9
    7bb0:	mov	r2, sl
    7bb4:	mov	r1, r7
    7bb8:	mov	r0, r6
    7bbc:	bl	333c <InflateData>
    7bc0:	ldrb	r3, [sp]
    7bc4:	vmov	s15, r3
    7bc8:	vcvt.f32.u32	s15, s15
    7bcc:	vstmia	r4!, {s15}
    7bd0:	cmp	r8, r4
    7bd4:	bne	7bac <ReadCompressedSingleData+0xc4>
    7bd8:	mul	r0, r9, r5
    7bdc:	b	7b34 <ReadCompressedSingleData+0x4c>
    7be0:	cmp	r5, #0
    7be4:	movgt	r4, r8
    7be8:	addgt	r8, r8, r5, lsl #2
    7bec:	movgt	sl, sp
    7bf0:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7bf4:	mov	r3, r9
    7bf8:	mov	r2, sl
    7bfc:	mov	r1, r7
    7c00:	mov	r0, r6
    7c04:	bl	333c <InflateData>
    7c08:	ldrsb	r3, [sp]
    7c0c:	vmov	s15, r3
    7c10:	vcvt.f32.s32	s15, s15
    7c14:	vstmia	r4!, {s15}
    7c18:	cmp	r8, r4
    7c1c:	bne	7bf4 <ReadCompressedSingleData+0x10c>
    7c20:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7c24:	ldr	r3, [r6, #20]
    7c28:	cmp	r3, #0
    7c2c:	bne	7c70 <ReadCompressedSingleData+0x188>
    7c30:	cmp	r5, #0
    7c34:	movgt	r4, r8
    7c38:	addgt	r8, r8, r5, lsl #2
    7c3c:	movgt	sl, sp
    7c40:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7c44:	mov	r3, r9
    7c48:	mov	r2, sl
    7c4c:	mov	r1, r7
    7c50:	mov	r0, r6
    7c54:	bl	333c <InflateData>
    7c58:	vldr	d7, [sp]
    7c5c:	vcvt.f32.f64	s14, d7
    7c60:	vstmia	r4!, {s14}
    7c64:	cmp	r4, r8
    7c68:	bne	7c44 <ReadCompressedSingleData+0x15c>
    7c6c:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7c70:	cmp	r5, #0
    7c74:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7c78:	mov	r4, r8
    7c7c:	add	r8, r8, r5, lsl #2
    7c80:	mov	sl, sp
    7c84:	mov	r3, r9
    7c88:	mov	r2, sl
    7c8c:	mov	r1, r7
    7c90:	mov	r0, r6
    7c94:	bl	333c <InflateData>
    7c98:	mov	r0, sl
    7c9c:	bl	1974 <Mat_doubleSwap>
    7ca0:	vcvt.f32.f64	s0, d0
    7ca4:	vstmia	r4!, {s0}
    7ca8:	cmp	r4, r8
    7cac:	bne	7c84 <ReadCompressedSingleData+0x19c>
    7cb0:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7cb4:	ldr	r3, [r6, #20]
    7cb8:	cmp	r3, #0
    7cbc:	bne	7cfc <ReadCompressedSingleData+0x214>
    7cc0:	cmp	r5, #0
    7cc4:	movgt	r4, r8
    7cc8:	addgt	r8, r8, r5, lsl #2
    7ccc:	movgt	sl, sp
    7cd0:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7cd4:	mov	r3, r9
    7cd8:	mov	r2, sl
    7cdc:	mov	r1, r7
    7ce0:	mov	r0, r6
    7ce4:	bl	333c <InflateData>
    7ce8:	ldr	r3, [sp]
    7cec:	str	r3, [r4], #4
    7cf0:	cmp	r4, r8
    7cf4:	bne	7cd4 <ReadCompressedSingleData+0x1ec>
    7cf8:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7cfc:	cmp	r5, #0
    7d00:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7d04:	mov	r4, r8
    7d08:	add	r8, r8, r5, lsl #2
    7d0c:	mov	sl, sp
    7d10:	mov	r3, r9
    7d14:	mov	r2, sl
    7d18:	mov	r1, r7
    7d1c:	mov	r0, r6
    7d20:	bl	333c <InflateData>
    7d24:	mov	r0, sl
    7d28:	bl	1944 <Mat_floatSwap>
    7d2c:	vstmia	r4!, {s0}
    7d30:	cmp	r4, r8
    7d34:	bne	7d10 <ReadCompressedSingleData+0x228>
    7d38:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7d3c:	ldr	r3, [r6, #20]
    7d40:	cmp	r3, #0
    7d44:	bne	7d88 <ReadCompressedSingleData+0x2a0>
    7d48:	cmp	r5, #0
    7d4c:	movgt	r4, r8
    7d50:	addgt	r8, r8, r5, lsl #2
    7d54:	movgt	sl, sp
    7d58:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7d5c:	mov	r3, r9
    7d60:	mov	r2, sl
    7d64:	mov	r1, r7
    7d68:	mov	r0, r6
    7d6c:	bl	333c <InflateData>
    7d70:	vldr	s15, [sp]
    7d74:	vcvt.f32.s32	s15, s15
    7d78:	vstmia	r4!, {s15}
    7d7c:	cmp	r4, r8
    7d80:	bne	7d5c <ReadCompressedSingleData+0x274>
    7d84:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7d88:	cmp	r5, #0
    7d8c:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7d90:	mov	r4, r8
    7d94:	add	r8, r8, r5, lsl #2
    7d98:	mov	sl, sp
    7d9c:	mov	r3, r9
    7da0:	mov	r2, sl
    7da4:	mov	r1, r7
    7da8:	mov	r0, r6
    7dac:	bl	333c <InflateData>
    7db0:	mov	r0, sl
    7db4:	bl	18a4 <Mat_int32Swap>
    7db8:	vmov	s15, r0
    7dbc:	vcvt.f32.s32	s15, s15
    7dc0:	vstmia	r4!, {s15}
    7dc4:	cmp	r4, r8
    7dc8:	bne	7d9c <ReadCompressedSingleData+0x2b4>
    7dcc:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7dd0:	ldr	r3, [r6, #20]
    7dd4:	cmp	r3, #0
    7dd8:	bne	7e1c <ReadCompressedSingleData+0x334>
    7ddc:	cmp	r5, #0
    7de0:	movgt	r4, r8
    7de4:	addgt	r8, r8, r5, lsl #2
    7de8:	movgt	sl, sp
    7dec:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7df0:	mov	r3, r9
    7df4:	mov	r2, sl
    7df8:	mov	r1, r7
    7dfc:	mov	r0, r6
    7e00:	bl	333c <InflateData>
    7e04:	vldr	s15, [sp]
    7e08:	vcvt.f32.u32	s15, s15
    7e0c:	vstmia	r4!, {s15}
    7e10:	cmp	r4, r8
    7e14:	bne	7df0 <ReadCompressedSingleData+0x308>
    7e18:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7e1c:	cmp	r5, #0
    7e20:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7e24:	mov	r4, r8
    7e28:	add	r8, r8, r5, lsl #2
    7e2c:	mov	sl, sp
    7e30:	mov	r3, r9
    7e34:	mov	r2, sl
    7e38:	mov	r1, r7
    7e3c:	mov	r0, r6
    7e40:	bl	333c <InflateData>
    7e44:	mov	r0, sl
    7e48:	bl	18d4 <Mat_uint32Swap>
    7e4c:	vmov	s15, r0
    7e50:	vcvt.f32.u32	s15, s15
    7e54:	vstmia	r4!, {s15}
    7e58:	cmp	r4, r8
    7e5c:	bne	7e30 <ReadCompressedSingleData+0x348>
    7e60:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7e64:	ldr	r3, [r6, #20]
    7e68:	cmp	r3, #0
    7e6c:	bne	7eb4 <ReadCompressedSingleData+0x3cc>
    7e70:	cmp	r5, #0
    7e74:	movgt	r4, r8
    7e78:	addgt	r8, r8, r5, lsl #2
    7e7c:	movgt	sl, sp
    7e80:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7e84:	mov	r3, r9
    7e88:	mov	r2, sl
    7e8c:	mov	r1, r7
    7e90:	mov	r0, r6
    7e94:	bl	333c <InflateData>
    7e98:	ldrsh	r3, [sp]
    7e9c:	vmov	s15, r3
    7ea0:	vcvt.f32.s32	s15, s15
    7ea4:	vstmia	r4!, {s15}
    7ea8:	cmp	r8, r4
    7eac:	bne	7e84 <ReadCompressedSingleData+0x39c>
    7eb0:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7eb4:	cmp	r5, #0
    7eb8:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7ebc:	mov	r4, r8
    7ec0:	add	r8, r8, r5, lsl #2
    7ec4:	mov	sl, sp
    7ec8:	mov	r3, r9
    7ecc:	mov	r2, sl
    7ed0:	mov	r1, r7
    7ed4:	mov	r0, r6
    7ed8:	bl	333c <InflateData>
    7edc:	mov	r0, sl
    7ee0:	bl	1904 <Mat_int16Swap>
    7ee4:	vmov	s15, r0
    7ee8:	vcvt.f32.s32	s15, s15
    7eec:	vstmia	r4!, {s15}
    7ef0:	cmp	r8, r4
    7ef4:	bne	7ec8 <ReadCompressedSingleData+0x3e0>
    7ef8:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7efc:	ldr	r3, [r6, #20]
    7f00:	cmp	r3, #0
    7f04:	bne	7f4c <ReadCompressedSingleData+0x464>
    7f08:	cmp	r5, #0
    7f0c:	movgt	r4, r8
    7f10:	addgt	r8, r8, r5, lsl #2
    7f14:	movgt	sl, sp
    7f18:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7f1c:	mov	r3, r9
    7f20:	mov	r2, sl
    7f24:	mov	r1, r7
    7f28:	mov	r0, r6
    7f2c:	bl	333c <InflateData>
    7f30:	ldrh	r3, [sp]
    7f34:	vmov	s15, r3
    7f38:	vcvt.f32.u32	s15, s15
    7f3c:	vstmia	r4!, {s15}
    7f40:	cmp	r4, r8
    7f44:	bne	7f1c <ReadCompressedSingleData+0x434>
    7f48:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7f4c:	cmp	r5, #0
    7f50:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7f54:	mov	r4, r8
    7f58:	add	r8, r8, r5, lsl #2
    7f5c:	mov	sl, sp
    7f60:	mov	r3, r9
    7f64:	mov	r2, sl
    7f68:	mov	r1, r7
    7f6c:	mov	r0, r6
    7f70:	bl	333c <InflateData>
    7f74:	mov	r0, sl
    7f78:	bl	1924 <Mat_uint16Swap>
    7f7c:	vmov	s15, r0
    7f80:	vcvt.f32.u32	s15, s15
    7f84:	vstmia	r4!, {s15}
    7f88:	cmp	r8, r4
    7f8c:	bne	7f60 <ReadCompressedSingleData+0x478>
    7f90:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7f94:	cmp	r4, #12
    7f98:	beq	7ff0 <ReadCompressedSingleData+0x508>
    7f9c:	cmp	r4, #13
    7fa0:	bne	7bd8 <ReadCompressedSingleData+0xf0>
    7fa4:	ldr	r3, [r6, #20]
    7fa8:	cmp	r3, #0
    7fac:	bne	8080 <ReadCompressedSingleData+0x598>
    7fb0:	cmp	r5, #0
    7fb4:	movgt	r4, r8
    7fb8:	addgt	r8, r8, r5, lsl #2
    7fbc:	movgt	sl, sp
    7fc0:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    7fc4:	mov	r3, r9
    7fc8:	mov	r2, sl
    7fcc:	mov	r1, r7
    7fd0:	mov	r0, r6
    7fd4:	bl	333c <InflateData>
    7fd8:	ldrd	r0, [sp]
    7fdc:	bl	4ef80 <__aeabi_ul2f>
    7fe0:	str	r0, [r4], #4
    7fe4:	cmp	r8, r4
    7fe8:	bne	7fc4 <ReadCompressedSingleData+0x4dc>
    7fec:	b	7bd8 <ReadCompressedSingleData+0xf0>
    7ff0:	ldr	r3, [r6, #20]
    7ff4:	cmp	r3, #0
    7ff8:	bne	803c <ReadCompressedSingleData+0x554>
    7ffc:	cmp	r5, #0
    8000:	movgt	r4, r8
    8004:	addgt	r8, r8, r5, lsl #2
    8008:	movgt	sl, sp
    800c:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    8010:	mov	r3, r9
    8014:	mov	r2, sl
    8018:	mov	r1, r7
    801c:	mov	r0, r6
    8020:	bl	333c <InflateData>
    8024:	ldrd	r0, [sp]
    8028:	bl	4ef90 <__aeabi_l2f>
    802c:	str	r0, [r4], #4
    8030:	cmp	r8, r4
    8034:	bne	8010 <ReadCompressedSingleData+0x528>
    8038:	b	7bd8 <ReadCompressedSingleData+0xf0>
    803c:	cmp	r5, #0
    8040:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    8044:	mov	r4, r8
    8048:	add	r8, r8, r5, lsl #2
    804c:	mov	sl, sp
    8050:	mov	r3, r9
    8054:	mov	r2, sl
    8058:	mov	r1, r7
    805c:	mov	r0, r6
    8060:	bl	333c <InflateData>
    8064:	mov	r0, sl
    8068:	bl	17ec <Mat_int64Swap>
    806c:	bl	4ef90 <__aeabi_l2f>
    8070:	str	r0, [r4], #4
    8074:	cmp	r4, r8
    8078:	bne	8050 <ReadCompressedSingleData+0x568>
    807c:	b	7bd8 <ReadCompressedSingleData+0xf0>
    8080:	cmp	r5, #0
    8084:	ble	7bd8 <ReadCompressedSingleData+0xf0>
    8088:	mov	r4, r8
    808c:	add	r8, r8, r5, lsl #2
    8090:	mov	sl, sp
    8094:	mov	r3, r9
    8098:	mov	r2, sl
    809c:	mov	r1, r7
    80a0:	mov	r0, r6
    80a4:	bl	333c <InflateData>
    80a8:	mov	r0, sl
    80ac:	bl	1848 <Mat_uint64Swap>
    80b0:	bl	4ef80 <__aeabi_ul2f>
    80b4:	str	r0, [r4], #4
    80b8:	cmp	r8, r4
    80bc:	bne	8094 <ReadCompressedSingleData+0x5ac>
    80c0:	b	7bd8 <ReadCompressedSingleData+0xf0>

000080c4 <ReadInt64Data>:
    80c4:	cmp	r1, #0
    80c8:	cmpne	r0, #0
    80cc:	beq	97fc <ReadInt64Data+0x1738>
    80d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    80d4:	strd	r6, [sp, #8]
    80d8:	strd	r8, [sp, #16]
    80dc:	strd	sl, [sp, #24]
    80e0:	str	lr, [sp, #32]
    80e4:	sub	sp, sp, #2080	; 0x820
    80e8:	sub	sp, sp, #4
    80ec:	mov	r9, r0
    80f0:	mov	ip, r1
    80f4:	ldr	r1, [r0]
    80f8:	cmp	r1, #0
    80fc:	moveq	r0, #0
    8100:	beq	913c <ReadInt64Data+0x1078>
    8104:	str	ip, [sp, #8]
    8108:	mov	fp, r3
    810c:	mov	r4, r2
    8110:	mov	r0, r2
    8114:	bl	1598 <Mat_SizeOf@plt>
    8118:	str	r0, [sp, #4]
    811c:	sub	r3, r4, #1
    8120:	cmp	r3, #8
    8124:	addls	pc, pc, r3, lsl #2
    8128:	b	9318 <ReadInt64Data+0x1254>
    812c:	b	90a8 <ReadInt64Data+0xfe4>
    8130:	b	91f4 <ReadInt64Data+0x1130>
    8134:	b	8b98 <ReadInt64Data+0xad4>
    8138:	b	8e20 <ReadInt64Data+0xd5c>
    813c:	b	8678 <ReadInt64Data+0x5b4>
    8140:	b	88f0 <ReadInt64Data+0x82c>
    8144:	b	83e4 <ReadInt64Data+0x320>
    8148:	b	9318 <ReadInt64Data+0x1254>
    814c:	b	8150 <ReadInt64Data+0x8c>
    8150:	ldr	r8, [r9, #20]
    8154:	cmp	r8, #0
    8158:	beq	82b4 <ReadInt64Data+0x1f0>
    815c:	cmp	fp, #256	; 0x100
    8160:	ble	8260 <ReadInt64Data+0x19c>
    8164:	sub	r3, fp, #256	; 0x100
    8168:	ldr	r2, [sp, #8]
    816c:	sub	sl, r2, #8
    8170:	mov	r7, #0
    8174:	mov	r8, r7
    8178:	add	r2, sp, #32
    817c:	str	r2, [sp, #20]
    8180:	add	r6, sp, #2080	; 0x820
    8184:	str	fp, [sp, #24]
    8188:	mov	fp, r3
    818c:	ldr	r3, [r9]
    8190:	mov	r2, #256	; 0x100
    8194:	ldr	r1, [sp, #4]
    8198:	ldr	r4, [sp, #20]
    819c:	mov	r0, r4
    81a0:	bl	1520 <fread@plt>
    81a4:	add	r8, r8, r0
    81a8:	str	r8, [sp, #12]
    81ac:	str	r4, [sp, #16]
    81b0:	mov	r5, sl
    81b4:	mov	r0, r4
    81b8:	bl	1974 <Mat_doubleSwap>
    81bc:	vmov	r0, r1, d0
    81c0:	bl	4f038 <__aeabi_d2lz>
    81c4:	strd	r0, [r5, #8]!
    81c8:	add	r4, r4, #8
    81cc:	cmp	r4, r6
    81d0:	bne	81b4 <ReadInt64Data+0xf0>
    81d4:	add	r7, r7, #256	; 0x100
    81d8:	add	sl, sl, #2048	; 0x800
    81dc:	cmp	r7, fp
    81e0:	blt	818c <ReadInt64Data+0xc8>
    81e4:	ldr	fp, [sp, #24]
    81e8:	sub	r3, fp, #256	; 0x100
    81ec:	sub	r3, r3, #1
    81f0:	bic	r3, r3, #255	; 0xff
    81f4:	add	r4, r3, #256	; 0x100
    81f8:	cmp	fp, r4
    81fc:	ble	9134 <ReadInt64Data+0x1070>
    8200:	sub	fp, fp, r4
    8204:	ldr	r3, [r9]
    8208:	mov	r2, fp
    820c:	ldr	r1, [sp, #4]
    8210:	add	r0, sp, #32
    8214:	bl	1520 <fread@plt>
    8218:	ldr	r3, [sp, #12]
    821c:	add	r8, r3, r0
    8220:	cmp	fp, #0
    8224:	ble	9134 <ReadInt64Data+0x1070>
    8228:	ldr	r3, [sp, #8]
    822c:	add	r6, r3, r4, lsl #3
    8230:	add	r4, fp, r4
    8234:	add	r4, r3, r4, lsl #3
    8238:	ldr	r5, [sp, #16]
    823c:	mov	r0, r5
    8240:	bl	1974 <Mat_doubleSwap>
    8244:	vmov	r0, r1, d0
    8248:	bl	4f038 <__aeabi_d2lz>
    824c:	strd	r0, [r6], #8
    8250:	add	r5, r5, #8
    8254:	cmp	r6, r4
    8258:	bne	823c <ReadInt64Data+0x178>
    825c:	b	9134 <ReadInt64Data+0x1070>
    8260:	ldr	r3, [r9]
    8264:	mov	r2, fp
    8268:	ldr	r1, [sp, #4]
    826c:	add	r0, sp, #32
    8270:	bl	1520 <fread@plt>
    8274:	mov	r8, r0
    8278:	cmp	fp, #0
    827c:	ble	9134 <ReadInt64Data+0x1070>
    8280:	add	r5, sp, #32
    8284:	ldr	r3, [sp, #8]
    8288:	mov	r4, r3
    828c:	add	fp, r3, fp, lsl #3
    8290:	mov	r0, r5
    8294:	bl	1974 <Mat_doubleSwap>
    8298:	vmov	r0, r1, d0
    829c:	bl	4f038 <__aeabi_d2lz>
    82a0:	strd	r0, [r4], #8
    82a4:	add	r5, r5, #8
    82a8:	cmp	r4, fp
    82ac:	bne	8290 <ReadInt64Data+0x1cc>
    82b0:	b	9134 <ReadInt64Data+0x1070>
    82b4:	cmp	fp, #256	; 0x100
    82b8:	ble	839c <ReadInt64Data+0x2d8>
    82bc:	sub	r3, fp, #256	; 0x100
    82c0:	ldr	r2, [sp, #8]
    82c4:	sub	sl, r2, #8
    82c8:	mov	r7, r8
    82cc:	add	r2, sp, #32
    82d0:	str	r2, [sp, #20]
    82d4:	add	r6, sp, #2080	; 0x820
    82d8:	str	fp, [sp, #24]
    82dc:	mov	fp, r3
    82e0:	ldr	r3, [r9]
    82e4:	mov	r2, #256	; 0x100
    82e8:	ldr	r1, [sp, #4]
    82ec:	ldr	r4, [sp, #20]
    82f0:	mov	r0, r4
    82f4:	bl	1520 <fread@plt>
    82f8:	add	r8, r8, r0
    82fc:	str	r8, [sp, #12]
    8300:	str	r4, [sp, #16]
    8304:	mov	r5, sl
    8308:	ldrd	r0, [r4], #8
    830c:	bl	4f038 <__aeabi_d2lz>
    8310:	strd	r0, [r5, #8]!
    8314:	cmp	r4, r6
    8318:	bne	8308 <ReadInt64Data+0x244>
    831c:	add	r7, r7, #256	; 0x100
    8320:	add	sl, sl, #2048	; 0x800
    8324:	cmp	r7, fp
    8328:	blt	82e0 <ReadInt64Data+0x21c>
    832c:	ldr	fp, [sp, #24]
    8330:	sub	r3, fp, #256	; 0x100
    8334:	sub	r3, r3, #1
    8338:	bic	r3, r3, #255	; 0xff
    833c:	add	r4, r3, #256	; 0x100
    8340:	cmp	fp, r4
    8344:	ble	9134 <ReadInt64Data+0x1070>
    8348:	sub	fp, fp, r4
    834c:	ldr	r3, [r9]
    8350:	mov	r2, fp
    8354:	ldr	r1, [sp, #4]
    8358:	add	r0, sp, #32
    835c:	bl	1520 <fread@plt>
    8360:	ldr	r3, [sp, #12]
    8364:	add	r8, r3, r0
    8368:	cmp	fp, #0
    836c:	ble	9134 <ReadInt64Data+0x1070>
    8370:	ldr	r3, [sp, #8]
    8374:	add	r6, r3, r4, lsl #3
    8378:	add	r4, fp, r4
    837c:	add	r4, r3, r4, lsl #3
    8380:	ldr	r5, [sp, #16]
    8384:	ldrd	r0, [r5], #8
    8388:	bl	4f038 <__aeabi_d2lz>
    838c:	strd	r0, [r6], #8
    8390:	cmp	r6, r4
    8394:	bne	8384 <ReadInt64Data+0x2c0>
    8398:	b	9134 <ReadInt64Data+0x1070>
    839c:	ldr	r3, [r9]
    83a0:	mov	r2, fp
    83a4:	ldr	r1, [sp, #4]
    83a8:	add	r0, sp, #32
    83ac:	bl	1520 <fread@plt>
    83b0:	mov	r8, r0
    83b4:	cmp	fp, #0
    83b8:	ble	9134 <ReadInt64Data+0x1070>
    83bc:	add	r5, sp, #32
    83c0:	ldr	r3, [sp, #8]
    83c4:	mov	r4, r3
    83c8:	add	fp, r3, fp, lsl #3
    83cc:	ldrd	r0, [r5], #8
    83d0:	bl	4f038 <__aeabi_d2lz>
    83d4:	strd	r0, [r4], #8
    83d8:	cmp	r4, fp
    83dc:	bne	83cc <ReadInt64Data+0x308>
    83e0:	b	9134 <ReadInt64Data+0x1070>
    83e4:	ldr	r8, [r9, #20]
    83e8:	cmp	r8, #0
    83ec:	beq	8548 <ReadInt64Data+0x484>
    83f0:	cmp	fp, #256	; 0x100
    83f4:	ble	84f4 <ReadInt64Data+0x430>
    83f8:	sub	r3, fp, #256	; 0x100
    83fc:	ldr	r2, [sp, #8]
    8400:	sub	sl, r2, #8
    8404:	mov	r7, #0
    8408:	mov	r8, r7
    840c:	add	r2, sp, #32
    8410:	str	r2, [sp, #20]
    8414:	add	r6, sp, #1056	; 0x420
    8418:	str	fp, [sp, #24]
    841c:	mov	fp, r3
    8420:	ldr	r3, [r9]
    8424:	mov	r2, #256	; 0x100
    8428:	ldr	r1, [sp, #4]
    842c:	ldr	r4, [sp, #20]
    8430:	mov	r0, r4
    8434:	bl	1520 <fread@plt>
    8438:	add	r8, r8, r0
    843c:	str	r8, [sp, #12]
    8440:	str	r4, [sp, #16]
    8444:	mov	r5, sl
    8448:	mov	r0, r4
    844c:	bl	1944 <Mat_floatSwap>
    8450:	vmov	r0, s0
    8454:	bl	4f00c <__aeabi_f2lz>
    8458:	strd	r0, [r5, #8]!
    845c:	add	r4, r4, #4
    8460:	cmp	r4, r6
    8464:	bne	8448 <ReadInt64Data+0x384>
    8468:	add	r7, r7, #256	; 0x100
    846c:	add	sl, sl, #2048	; 0x800
    8470:	cmp	r7, fp
    8474:	blt	8420 <ReadInt64Data+0x35c>
    8478:	ldr	fp, [sp, #24]
    847c:	sub	r3, fp, #256	; 0x100
    8480:	sub	r3, r3, #1
    8484:	bic	r3, r3, #255	; 0xff
    8488:	add	r4, r3, #256	; 0x100
    848c:	cmp	fp, r4
    8490:	ble	9134 <ReadInt64Data+0x1070>
    8494:	sub	fp, fp, r4
    8498:	ldr	r3, [r9]
    849c:	mov	r2, fp
    84a0:	ldr	r1, [sp, #4]
    84a4:	add	r0, sp, #32
    84a8:	bl	1520 <fread@plt>
    84ac:	ldr	r3, [sp, #12]
    84b0:	add	r8, r3, r0
    84b4:	cmp	fp, #0
    84b8:	ble	9134 <ReadInt64Data+0x1070>
    84bc:	ldr	r3, [sp, #8]
    84c0:	add	r6, r3, r4, lsl #3
    84c4:	add	r4, fp, r4
    84c8:	add	r4, r3, r4, lsl #3
    84cc:	ldr	r5, [sp, #16]
    84d0:	mov	r0, r5
    84d4:	bl	1944 <Mat_floatSwap>
    84d8:	vmov	r0, s0
    84dc:	bl	4f00c <__aeabi_f2lz>
    84e0:	strd	r0, [r6], #8
    84e4:	add	r5, r5, #4
    84e8:	cmp	r6, r4
    84ec:	bne	84d0 <ReadInt64Data+0x40c>
    84f0:	b	9134 <ReadInt64Data+0x1070>
    84f4:	ldr	r3, [r9]
    84f8:	mov	r2, fp
    84fc:	ldr	r1, [sp, #4]
    8500:	add	r0, sp, #32
    8504:	bl	1520 <fread@plt>
    8508:	mov	r8, r0
    850c:	cmp	fp, #0
    8510:	ble	9134 <ReadInt64Data+0x1070>
    8514:	add	r5, sp, #32
    8518:	ldr	r3, [sp, #8]
    851c:	mov	r4, r3
    8520:	add	fp, r3, fp, lsl #3
    8524:	mov	r0, r5
    8528:	bl	1944 <Mat_floatSwap>
    852c:	vmov	r0, s0
    8530:	bl	4f00c <__aeabi_f2lz>
    8534:	strd	r0, [r4], #8
    8538:	add	r5, r5, #4
    853c:	cmp	r4, fp
    8540:	bne	8524 <ReadInt64Data+0x460>
    8544:	b	9134 <ReadInt64Data+0x1070>
    8548:	cmp	fp, #256	; 0x100
    854c:	ble	8630 <ReadInt64Data+0x56c>
    8550:	sub	r3, fp, #256	; 0x100
    8554:	ldr	r2, [sp, #8]
    8558:	sub	sl, r2, #8
    855c:	mov	r7, r8
    8560:	add	r2, sp, #32
    8564:	str	r2, [sp, #20]
    8568:	add	r6, sp, #1056	; 0x420
    856c:	str	fp, [sp, #24]
    8570:	mov	fp, r3
    8574:	ldr	r3, [r9]
    8578:	mov	r2, #256	; 0x100
    857c:	ldr	r1, [sp, #4]
    8580:	ldr	r4, [sp, #20]
    8584:	mov	r0, r4
    8588:	bl	1520 <fread@plt>
    858c:	add	r8, r8, r0
    8590:	str	r8, [sp, #12]
    8594:	str	r4, [sp, #16]
    8598:	mov	r5, sl
    859c:	ldr	r0, [r4], #4
    85a0:	bl	4f00c <__aeabi_f2lz>
    85a4:	strd	r0, [r5, #8]!
    85a8:	cmp	r4, r6
    85ac:	bne	859c <ReadInt64Data+0x4d8>
    85b0:	add	r7, r7, #256	; 0x100
    85b4:	add	sl, sl, #2048	; 0x800
    85b8:	cmp	r7, fp
    85bc:	blt	8574 <ReadInt64Data+0x4b0>
    85c0:	ldr	fp, [sp, #24]
    85c4:	sub	r3, fp, #256	; 0x100
    85c8:	sub	r3, r3, #1
    85cc:	bic	r3, r3, #255	; 0xff
    85d0:	add	r4, r3, #256	; 0x100
    85d4:	cmp	fp, r4
    85d8:	ble	9134 <ReadInt64Data+0x1070>
    85dc:	sub	fp, fp, r4
    85e0:	ldr	r3, [r9]
    85e4:	mov	r2, fp
    85e8:	ldr	r1, [sp, #4]
    85ec:	add	r0, sp, #32
    85f0:	bl	1520 <fread@plt>
    85f4:	ldr	r3, [sp, #12]
    85f8:	add	r8, r3, r0
    85fc:	cmp	fp, #0
    8600:	ble	9134 <ReadInt64Data+0x1070>
    8604:	ldr	r3, [sp, #8]
    8608:	add	r6, r3, r4, lsl #3
    860c:	add	r4, fp, r4
    8610:	add	r4, r3, r4, lsl #3
    8614:	ldr	r5, [sp, #16]
    8618:	ldr	r0, [r5], #4
    861c:	bl	4f00c <__aeabi_f2lz>
    8620:	strd	r0, [r6], #8
    8624:	cmp	r6, r4
    8628:	bne	8618 <ReadInt64Data+0x554>
    862c:	b	9134 <ReadInt64Data+0x1070>
    8630:	ldr	r3, [r9]
    8634:	mov	r2, fp
    8638:	ldr	r1, [sp, #4]
    863c:	add	r0, sp, #32
    8640:	bl	1520 <fread@plt>
    8644:	mov	r8, r0
    8648:	cmp	fp, #0
    864c:	ble	9134 <ReadInt64Data+0x1070>
    8650:	add	r5, sp, #32
    8654:	ldr	r3, [sp, #8]
    8658:	mov	r4, r3
    865c:	add	fp, r3, fp, lsl #3
    8660:	ldr	r0, [r5], #4
    8664:	bl	4f00c <__aeabi_f2lz>
    8668:	strd	r0, [r4], #8
    866c:	cmp	r4, fp
    8670:	bne	8660 <ReadInt64Data+0x59c>
    8674:	b	9134 <ReadInt64Data+0x1070>
    8678:	ldr	r8, [r9, #20]
    867c:	cmp	r8, #0
    8680:	beq	87d0 <ReadInt64Data+0x70c>
    8684:	cmp	fp, #256	; 0x100
    8688:	ble	8780 <ReadInt64Data+0x6bc>
    868c:	sub	r3, fp, #256	; 0x100
    8690:	ldr	r2, [sp, #8]
    8694:	sub	sl, r2, #8
    8698:	mov	r7, #0
    869c:	mov	r8, r7
    86a0:	add	r2, sp, #32
    86a4:	str	r2, [sp, #20]
    86a8:	add	r6, sp, #1056	; 0x420
    86ac:	str	fp, [sp, #24]
    86b0:	mov	fp, r3
    86b4:	ldr	r3, [r9]
    86b8:	mov	r2, #256	; 0x100
    86bc:	ldr	r1, [sp, #4]
    86c0:	ldr	r4, [sp, #20]
    86c4:	mov	r0, r4
    86c8:	bl	1520 <fread@plt>
    86cc:	add	r8, r8, r0
    86d0:	str	r8, [sp, #12]
    86d4:	str	r4, [sp, #16]
    86d8:	mov	r5, sl
    86dc:	mov	r0, r4
    86e0:	bl	18a4 <Mat_int32Swap>
    86e4:	asr	r1, r0, #31
    86e8:	strd	r0, [r5, #8]!
    86ec:	add	r4, r4, #4
    86f0:	cmp	r4, r6
    86f4:	bne	86dc <ReadInt64Data+0x618>
    86f8:	add	r7, r7, #256	; 0x100
    86fc:	add	sl, sl, #2048	; 0x800
    8700:	cmp	r7, fp
    8704:	blt	86b4 <ReadInt64Data+0x5f0>
    8708:	ldr	fp, [sp, #24]
    870c:	sub	r3, fp, #256	; 0x100
    8710:	sub	r3, r3, #1
    8714:	bic	r3, r3, #255	; 0xff
    8718:	add	r4, r3, #256	; 0x100
    871c:	cmp	fp, r4
    8720:	ble	9134 <ReadInt64Data+0x1070>
    8724:	sub	fp, fp, r4
    8728:	ldr	r3, [r9]
    872c:	mov	r2, fp
    8730:	ldr	r1, [sp, #4]
    8734:	add	r0, sp, #32
    8738:	bl	1520 <fread@plt>
    873c:	ldr	r3, [sp, #12]
    8740:	add	r8, r3, r0
    8744:	cmp	fp, #0
    8748:	ble	9134 <ReadInt64Data+0x1070>
    874c:	ldr	r3, [sp, #8]
    8750:	add	r6, r3, r4, lsl #3
    8754:	add	r4, fp, r4
    8758:	add	r4, r3, r4, lsl #3
    875c:	ldr	r5, [sp, #16]
    8760:	mov	r0, r5
    8764:	bl	18a4 <Mat_int32Swap>
    8768:	asr	r1, r0, #31
    876c:	strd	r0, [r6], #8
    8770:	add	r5, r5, #4
    8774:	cmp	r6, r4
    8778:	bne	8760 <ReadInt64Data+0x69c>
    877c:	b	9134 <ReadInt64Data+0x1070>
    8780:	ldr	r3, [r9]
    8784:	mov	r2, fp
    8788:	ldr	r1, [sp, #4]
    878c:	add	r0, sp, #32
    8790:	bl	1520 <fread@plt>
    8794:	mov	r8, r0
    8798:	cmp	fp, #0
    879c:	ble	9134 <ReadInt64Data+0x1070>
    87a0:	add	r5, sp, #32
    87a4:	ldr	r3, [sp, #8]
    87a8:	mov	r4, r3
    87ac:	add	fp, r3, fp, lsl #3
    87b0:	mov	r0, r5
    87b4:	bl	18a4 <Mat_int32Swap>
    87b8:	asr	r1, r0, #31
    87bc:	strd	r0, [r4], #8
    87c0:	add	r5, r5, #4
    87c4:	cmp	r4, fp
    87c8:	bne	87b0 <ReadInt64Data+0x6ec>
    87cc:	b	9134 <ReadInt64Data+0x1070>
    87d0:	cmp	fp, #256	; 0x100
    87d4:	ble	88a8 <ReadInt64Data+0x7e4>
    87d8:	sub	r7, fp, #256	; 0x100
    87dc:	ldr	r3, [sp, #8]
    87e0:	sub	r6, r3, #8
    87e4:	mov	r5, r8
    87e8:	add	sl, sp, #32
    87ec:	add	r4, sl, #1020	; 0x3fc
    87f0:	ldr	r3, [r9]
    87f4:	mov	r2, #256	; 0x100
    87f8:	ldr	r1, [sp, #4]
    87fc:	mov	r0, sl
    8800:	bl	1520 <fread@plt>
    8804:	add	r8, r8, r0
    8808:	str	r8, [sp, #12]
    880c:	sub	ip, sl, #4
    8810:	mov	r0, r6
    8814:	mov	r1, ip
    8818:	ldr	r2, [r1, #4]!
    881c:	asr	r3, r2, #31
    8820:	strd	r2, [r0, #8]!
    8824:	cmp	r1, r4
    8828:	bne	8818 <ReadInt64Data+0x754>
    882c:	add	r5, r5, #256	; 0x100
    8830:	add	r6, r6, #2048	; 0x800
    8834:	cmp	r5, r7
    8838:	blt	87f0 <ReadInt64Data+0x72c>
    883c:	mov	r7, ip
    8840:	sub	r3, fp, #256	; 0x100
    8844:	sub	r3, r3, #1
    8848:	bic	r3, r3, #255	; 0xff
    884c:	add	r4, r3, #256	; 0x100
    8850:	cmp	fp, r4
    8854:	ble	9134 <ReadInt64Data+0x1070>
    8858:	sub	fp, fp, r4
    885c:	ldr	r3, [r9]
    8860:	mov	r2, fp
    8864:	ldr	r1, [sp, #4]
    8868:	add	r0, sp, #32
    886c:	bl	1520 <fread@plt>
    8870:	ldr	r3, [sp, #12]
    8874:	add	r8, r3, r0
    8878:	cmp	fp, #0
    887c:	ble	9134 <ReadInt64Data+0x1070>
    8880:	ldr	r1, [sp, #8]
    8884:	add	r2, r1, r4, lsl #3
    8888:	add	r3, fp, r4
    888c:	add	r3, r1, r3, lsl #3
    8890:	ldr	r0, [r7, #4]!
    8894:	asr	r1, r0, #31
    8898:	strd	r0, [r2], #8
    889c:	cmp	r2, r3
    88a0:	bne	8890 <ReadInt64Data+0x7cc>
    88a4:	b	9134 <ReadInt64Data+0x1070>
    88a8:	ldr	r3, [r9]
    88ac:	mov	r2, fp
    88b0:	ldr	r1, [sp, #4]
    88b4:	add	r0, sp, #32
    88b8:	bl	1520 <fread@plt>
    88bc:	mov	r8, r0
    88c0:	cmp	fp, #0
    88c4:	ble	9134 <ReadInt64Data+0x1070>
    88c8:	add	r0, sp, #28
    88cc:	ldr	r3, [sp, #8]
    88d0:	mov	r1, r3
    88d4:	add	ip, r3, fp, lsl #3
    88d8:	ldr	r2, [r0, #4]!
    88dc:	asr	r3, r2, #31
    88e0:	strd	r2, [r1], #8
    88e4:	cmp	r1, ip
    88e8:	bne	88d8 <ReadInt64Data+0x814>
    88ec:	b	9134 <ReadInt64Data+0x1070>
    88f0:	ldr	r8, [r9, #20]
    88f4:	cmp	r8, #0
    88f8:	beq	8a64 <ReadInt64Data+0x9a0>
    88fc:	cmp	fp, #256	; 0x100
    8900:	ble	8a0c <ReadInt64Data+0x948>
    8904:	sub	r3, fp, #256	; 0x100
    8908:	str	r3, [sp, #16]
    890c:	ldr	r3, [sp, #8]
    8910:	sub	r3, r3, #8
    8914:	mov	sl, #0
    8918:	mov	r8, sl
    891c:	add	r2, sp, #32
    8920:	str	r2, [sp, #24]
    8924:	add	r7, sp, #1056	; 0x420
    8928:	str	fp, [sp, #28]
    892c:	mov	fp, r3
    8930:	ldr	r3, [r9]
    8934:	mov	r2, #256	; 0x100
    8938:	ldr	r1, [sp, #4]
    893c:	ldr	r4, [sp, #24]
    8940:	mov	r0, r4
    8944:	bl	1520 <fread@plt>
    8948:	add	r8, r8, r0
    894c:	str	r8, [sp, #12]
    8950:	str	r4, [sp, #20]
    8954:	mov	r5, fp
    8958:	mov	r6, #0
    895c:	mov	r0, r4
    8960:	bl	18d4 <Mat_uint32Swap>
    8964:	str	r0, [r5, #8]!
    8968:	str	r6, [r5, #4]
    896c:	add	r4, r4, #4
    8970:	cmp	r4, r7
    8974:	bne	895c <ReadInt64Data+0x898>
    8978:	add	sl, sl, #256	; 0x100
    897c:	add	fp, fp, #2048	; 0x800
    8980:	ldr	r3, [sp, #16]
    8984:	cmp	sl, r3
    8988:	blt	8930 <ReadInt64Data+0x86c>
    898c:	ldr	fp, [sp, #28]
    8990:	sub	r3, fp, #256	; 0x100
    8994:	sub	r3, r3, #1
    8998:	bic	r3, r3, #255	; 0xff
    899c:	add	r4, r3, #256	; 0x100
    89a0:	cmp	fp, r4
    89a4:	ble	9134 <ReadInt64Data+0x1070>
    89a8:	sub	fp, fp, r4
    89ac:	ldr	r3, [r9]
    89b0:	mov	r2, fp
    89b4:	ldr	r1, [sp, #4]
    89b8:	add	r0, sp, #32
    89bc:	bl	1520 <fread@plt>
    89c0:	ldr	r3, [sp, #12]
    89c4:	add	r8, r3, r0
    89c8:	cmp	fp, #0
    89cc:	ble	9134 <ReadInt64Data+0x1070>
    89d0:	ldr	r3, [sp, #8]
    89d4:	add	r6, r3, r4, lsl #3
    89d8:	add	r4, fp, r4
    89dc:	add	r4, r3, r4, lsl #3
    89e0:	mov	r5, #0
    89e4:	ldr	r7, [sp, #20]
    89e8:	mov	r0, r7
    89ec:	bl	18d4 <Mat_uint32Swap>
    89f0:	str	r0, [r6]
    89f4:	str	r5, [r6, #4]
    89f8:	add	r6, r6, #8
    89fc:	add	r7, r7, #4
    8a00:	cmp	r6, r4
    8a04:	bne	89e8 <ReadInt64Data+0x924>
    8a08:	b	9134 <ReadInt64Data+0x1070>
    8a0c:	ldr	r3, [r9]
    8a10:	mov	r2, fp
    8a14:	ldr	r1, [sp, #4]
    8a18:	add	r0, sp, #32
    8a1c:	bl	1520 <fread@plt>
    8a20:	mov	r8, r0
    8a24:	cmp	fp, #0
    8a28:	ble	9134 <ReadInt64Data+0x1070>
    8a2c:	add	r5, sp, #32
    8a30:	ldr	r3, [sp, #8]
    8a34:	mov	r4, r3
    8a38:	add	fp, r3, fp, lsl #3
    8a3c:	mov	r6, #0
    8a40:	mov	r0, r5
    8a44:	bl	18d4 <Mat_uint32Swap>
    8a48:	str	r0, [r4]
    8a4c:	str	r6, [r4, #4]
    8a50:	add	r4, r4, #8
    8a54:	add	r5, r5, #4
    8a58:	cmp	r4, fp
    8a5c:	bne	8a40 <ReadInt64Data+0x97c>
    8a60:	b	9134 <ReadInt64Data+0x1070>
    8a64:	cmp	fp, #256	; 0x100
    8a68:	ble	8b48 <ReadInt64Data+0xa84>
    8a6c:	sub	r7, fp, #256	; 0x100
    8a70:	ldr	r3, [sp, #8]
    8a74:	sub	r6, r3, #8
    8a78:	mov	r5, r8
    8a7c:	add	sl, sp, #32
    8a80:	add	r4, sl, #1020	; 0x3fc
    8a84:	ldr	r3, [r9]
    8a88:	mov	r2, #256	; 0x100
    8a8c:	ldr	r1, [sp, #4]
    8a90:	mov	r0, sl
    8a94:	bl	1520 <fread@plt>
    8a98:	add	r8, r8, r0
    8a9c:	str	r8, [sp, #12]
    8aa0:	sub	ip, sl, #4
    8aa4:	mov	r2, r6
    8aa8:	mov	r3, ip
    8aac:	mov	r0, #0
    8ab0:	ldr	r1, [r3, #4]!
    8ab4:	str	r1, [r2, #8]!
    8ab8:	str	r0, [r2, #4]
    8abc:	cmp	r3, r4
    8ac0:	bne	8ab0 <ReadInt64Data+0x9ec>
    8ac4:	add	r5, r5, #256	; 0x100
    8ac8:	add	r6, r6, #2048	; 0x800
    8acc:	cmp	r5, r7
    8ad0:	blt	8a84 <ReadInt64Data+0x9c0>
    8ad4:	mov	r7, ip
    8ad8:	sub	r3, fp, #256	; 0x100
    8adc:	sub	r3, r3, #1
    8ae0:	bic	r3, r3, #255	; 0xff
    8ae4:	add	r4, r3, #256	; 0x100
    8ae8:	cmp	fp, r4
    8aec:	ble	9134 <ReadInt64Data+0x1070>
    8af0:	sub	fp, fp, r4
    8af4:	ldr	r3, [r9]
    8af8:	mov	r2, fp
    8afc:	ldr	r1, [sp, #4]
    8b00:	add	r0, sp, #32
    8b04:	bl	1520 <fread@plt>
    8b08:	ldr	r3, [sp, #12]
    8b0c:	add	r8, r3, r0
    8b10:	cmp	fp, #0
    8b14:	ble	9134 <ReadInt64Data+0x1070>
    8b18:	ldr	r1, [sp, #8]
    8b1c:	add	r2, r1, r4, lsl #3
    8b20:	add	r3, fp, r4
    8b24:	add	r3, r1, r3, lsl #3
    8b28:	mov	r1, #0
    8b2c:	ldr	r0, [r7, #4]!
    8b30:	str	r0, [r2]
    8b34:	str	r1, [r2, #4]
    8b38:	add	r2, r2, #8
    8b3c:	cmp	r2, r3
    8b40:	bne	8b2c <ReadInt64Data+0xa68>
    8b44:	b	9134 <ReadInt64Data+0x1070>
    8b48:	ldr	r3, [r9]
    8b4c:	mov	r2, fp
    8b50:	ldr	r1, [sp, #4]
    8b54:	add	r0, sp, #32
    8b58:	bl	1520 <fread@plt>
    8b5c:	mov	r8, r0
    8b60:	cmp	fp, #0
    8b64:	ble	9134 <ReadInt64Data+0x1070>
    8b68:	add	r2, sp, #28
    8b6c:	ldr	r1, [sp, #8]
    8b70:	mov	r3, r1
    8b74:	add	ip, r1, fp, lsl #3
    8b78:	mov	r0, #0
    8b7c:	ldr	r1, [r2, #4]!
    8b80:	str	r1, [r3]
    8b84:	str	r0, [r3, #4]
    8b88:	add	r3, r3, #8
    8b8c:	cmp	r3, ip
    8b90:	bne	8b7c <ReadInt64Data+0xab8>
    8b94:	b	9134 <ReadInt64Data+0x1070>
    8b98:	ldr	r8, [r9, #20]
    8b9c:	cmp	r8, #0
    8ba0:	beq	8cfc <ReadInt64Data+0xc38>
    8ba4:	cmp	fp, #256	; 0x100
    8ba8:	ble	8ca8 <ReadInt64Data+0xbe4>
    8bac:	sub	r3, fp, #256	; 0x100
    8bb0:	ldr	r2, [sp, #8]
    8bb4:	sub	sl, r2, #8
    8bb8:	mov	r7, #0
    8bbc:	mov	r8, r7
    8bc0:	add	r2, sp, #32
    8bc4:	str	r2, [sp, #20]
    8bc8:	add	r6, sp, #544	; 0x220
    8bcc:	str	fp, [sp, #24]
    8bd0:	mov	fp, r3
    8bd4:	ldr	r3, [r9]
    8bd8:	mov	r2, #256	; 0x100
    8bdc:	ldr	r1, [sp, #4]
    8be0:	ldr	r4, [sp, #20]
    8be4:	mov	r0, r4
    8be8:	bl	1520 <fread@plt>
    8bec:	add	r8, r8, r0
    8bf0:	str	r8, [sp, #12]
    8bf4:	str	r4, [sp, #16]
    8bf8:	mov	r5, sl
    8bfc:	mov	r0, r4
    8c00:	bl	1904 <Mat_int16Swap>
    8c04:	sxth	r0, r0
    8c08:	asr	r1, r0, #31
    8c0c:	strd	r0, [r5, #8]!
    8c10:	add	r4, r4, #2
    8c14:	cmp	r4, r6
    8c18:	bne	8bfc <ReadInt64Data+0xb38>
    8c1c:	add	r7, r7, #256	; 0x100
    8c20:	add	sl, sl, #2048	; 0x800
    8c24:	cmp	r7, fp
    8c28:	blt	8bd4 <ReadInt64Data+0xb10>
    8c2c:	ldr	fp, [sp, #24]
    8c30:	sub	r3, fp, #256	; 0x100
    8c34:	sub	r3, r3, #1
    8c38:	bic	r3, r3, #255	; 0xff
    8c3c:	add	r4, r3, #256	; 0x100
    8c40:	cmp	fp, r4
    8c44:	ble	9134 <ReadInt64Data+0x1070>
    8c48:	sub	fp, fp, r4
    8c4c:	ldr	r3, [r9]
    8c50:	mov	r2, fp
    8c54:	ldr	r1, [sp, #4]
    8c58:	add	r0, sp, #32
    8c5c:	bl	1520 <fread@plt>
    8c60:	ldr	r3, [sp, #12]
    8c64:	add	r8, r3, r0
    8c68:	cmp	fp, #0
    8c6c:	ble	9134 <ReadInt64Data+0x1070>
    8c70:	ldr	r3, [sp, #8]
    8c74:	add	r6, r3, r4, lsl #3
    8c78:	add	r4, fp, r4
    8c7c:	add	r4, r3, r4, lsl #3
    8c80:	ldr	r5, [sp, #16]
    8c84:	mov	r0, r5
    8c88:	bl	1904 <Mat_int16Swap>
    8c8c:	sxth	r0, r0
    8c90:	asr	r1, r0, #31
    8c94:	strd	r0, [r6], #8
    8c98:	add	r5, r5, #2
    8c9c:	cmp	r6, r4
    8ca0:	bne	8c84 <ReadInt64Data+0xbc0>
    8ca4:	b	9134 <ReadInt64Data+0x1070>
    8ca8:	ldr	r3, [r9]
    8cac:	mov	r2, fp
    8cb0:	ldr	r1, [sp, #4]
    8cb4:	add	r0, sp, #32
    8cb8:	bl	1520 <fread@plt>
    8cbc:	mov	r8, r0
    8cc0:	cmp	fp, #0
    8cc4:	ble	9134 <ReadInt64Data+0x1070>
    8cc8:	add	r5, sp, #32
    8ccc:	ldr	r3, [sp, #8]
    8cd0:	mov	r4, r3
    8cd4:	add	fp, r3, fp, lsl #3
    8cd8:	mov	r0, r5
    8cdc:	bl	1904 <Mat_int16Swap>
    8ce0:	sxth	r0, r0
    8ce4:	asr	r1, r0, #31
    8ce8:	strd	r0, [r4], #8
    8cec:	add	r5, r5, #2
    8cf0:	cmp	r4, fp
    8cf4:	bne	8cd8 <ReadInt64Data+0xc14>
    8cf8:	b	9134 <ReadInt64Data+0x1070>
    8cfc:	cmp	fp, #256	; 0x100
    8d00:	ble	8dd8 <ReadInt64Data+0xd14>
    8d04:	sub	r7, fp, #256	; 0x100
    8d08:	ldr	r3, [sp, #8]
    8d0c:	sub	r6, r3, #8
    8d10:	mov	r5, r8
    8d14:	add	sl, sp, #32
    8d18:	add	r4, sl, #508	; 0x1fc
    8d1c:	add	r4, r4, #2
    8d20:	ldr	r3, [r9]
    8d24:	mov	r2, #256	; 0x100
    8d28:	ldr	r1, [sp, #4]
    8d2c:	mov	r0, sl
    8d30:	bl	1520 <fread@plt>
    8d34:	add	r8, r8, r0
    8d38:	str	r8, [sp, #12]
    8d3c:	sub	ip, sl, #2
    8d40:	mov	r2, r6
    8d44:	mov	r3, ip
    8d48:	ldrsh	r0, [r3, #2]!
    8d4c:	asr	r1, r0, #31
    8d50:	strd	r0, [r2, #8]!
    8d54:	cmp	r3, r4
    8d58:	bne	8d48 <ReadInt64Data+0xc84>
    8d5c:	add	r5, r5, #256	; 0x100
    8d60:	add	r6, r6, #2048	; 0x800
    8d64:	cmp	r5, r7
    8d68:	blt	8d20 <ReadInt64Data+0xc5c>
    8d6c:	mov	r7, ip
    8d70:	sub	r3, fp, #256	; 0x100
    8d74:	sub	r3, r3, #1
    8d78:	bic	r3, r3, #255	; 0xff
    8d7c:	add	r4, r3, #256	; 0x100
    8d80:	cmp	fp, r4
    8d84:	ble	9134 <ReadInt64Data+0x1070>
    8d88:	sub	fp, fp, r4
    8d8c:	ldr	r3, [r9]
    8d90:	mov	r2, fp
    8d94:	ldr	r1, [sp, #4]
    8d98:	add	r0, sp, #32
    8d9c:	bl	1520 <fread@plt>
    8da0:	ldr	r3, [sp, #12]
    8da4:	add	r8, r3, r0
    8da8:	cmp	fp, #0
    8dac:	ble	9134 <ReadInt64Data+0x1070>
    8db0:	ldr	r1, [sp, #8]
    8db4:	add	r2, r1, r4, lsl #3
    8db8:	add	r3, fp, r4
    8dbc:	add	r3, r1, r3, lsl #3
    8dc0:	ldrsh	r0, [r7, #2]!
    8dc4:	asr	r1, r0, #31
    8dc8:	strd	r0, [r2], #8
    8dcc:	cmp	r2, r3
    8dd0:	bne	8dc0 <ReadInt64Data+0xcfc>
    8dd4:	b	9134 <ReadInt64Data+0x1070>
    8dd8:	ldr	r3, [r9]
    8ddc:	mov	r2, fp
    8de0:	ldr	r1, [sp, #4]
    8de4:	add	r0, sp, #32
    8de8:	bl	1520 <fread@plt>
    8dec:	mov	r8, r0
    8df0:	cmp	fp, #0
    8df4:	ble	9134 <ReadInt64Data+0x1070>
    8df8:	add	r2, sp, #30
    8dfc:	ldr	r1, [sp, #8]
    8e00:	mov	r3, r1
    8e04:	add	ip, r1, fp, lsl #3
    8e08:	ldrsh	r0, [r2, #2]!
    8e0c:	asr	r1, r0, #31
    8e10:	strd	r0, [r3], #8
    8e14:	cmp	r3, ip
    8e18:	bne	8e08 <ReadInt64Data+0xd44>
    8e1c:	b	9134 <ReadInt64Data+0x1070>
    8e20:	ldr	r8, [r9, #20]
    8e24:	cmp	r8, #0
    8e28:	beq	8f84 <ReadInt64Data+0xec0>
    8e2c:	cmp	fp, #256	; 0x100
    8e30:	ble	8f30 <ReadInt64Data+0xe6c>
    8e34:	sub	r3, fp, #256	; 0x100
    8e38:	ldr	r2, [sp, #8]
    8e3c:	sub	sl, r2, #8
    8e40:	mov	r7, #0
    8e44:	mov	r8, r7
    8e48:	add	r2, sp, #32
    8e4c:	str	r2, [sp, #20]
    8e50:	add	r6, sp, #544	; 0x220
    8e54:	str	fp, [sp, #24]
    8e58:	mov	fp, r3
    8e5c:	ldr	r3, [r9]
    8e60:	mov	r2, #256	; 0x100
    8e64:	ldr	r1, [sp, #4]
    8e68:	ldr	r4, [sp, #20]
    8e6c:	mov	r0, r4
    8e70:	bl	1520 <fread@plt>
    8e74:	add	r8, r8, r0
    8e78:	str	r8, [sp, #12]
    8e7c:	str	r4, [sp, #16]
    8e80:	mov	r5, sl
    8e84:	mov	r0, r4
    8e88:	bl	1924 <Mat_uint16Swap>
    8e8c:	uxth	r0, r0
    8e90:	mov	r1, #0
    8e94:	strd	r0, [r5, #8]!
    8e98:	add	r4, r4, #2
    8e9c:	cmp	r4, r6
    8ea0:	bne	8e84 <ReadInt64Data+0xdc0>
    8ea4:	add	r7, r7, #256	; 0x100
    8ea8:	add	sl, sl, #2048	; 0x800
    8eac:	cmp	r7, fp
    8eb0:	blt	8e5c <ReadInt64Data+0xd98>
    8eb4:	ldr	fp, [sp, #24]
    8eb8:	sub	r3, fp, #256	; 0x100
    8ebc:	sub	r3, r3, #1
    8ec0:	bic	r3, r3, #255	; 0xff
    8ec4:	add	r4, r3, #256	; 0x100
    8ec8:	cmp	fp, r4
    8ecc:	ble	9134 <ReadInt64Data+0x1070>
    8ed0:	sub	fp, fp, r4
    8ed4:	ldr	r3, [r9]
    8ed8:	mov	r2, fp
    8edc:	ldr	r1, [sp, #4]
    8ee0:	add	r0, sp, #32
    8ee4:	bl	1520 <fread@plt>
    8ee8:	ldr	r3, [sp, #12]
    8eec:	add	r8, r3, r0
    8ef0:	cmp	fp, #0
    8ef4:	ble	9134 <ReadInt64Data+0x1070>
    8ef8:	ldr	r3, [sp, #8]
    8efc:	add	r6, r3, r4, lsl #3
    8f00:	add	r4, fp, r4
    8f04:	add	r4, r3, r4, lsl #3
    8f08:	ldr	r5, [sp, #16]
    8f0c:	mov	r0, r5
    8f10:	bl	1924 <Mat_uint16Swap>
    8f14:	uxth	r0, r0
    8f18:	mov	r1, #0
    8f1c:	strd	r0, [r6], #8
    8f20:	add	r5, r5, #2
    8f24:	cmp	r6, r4
    8f28:	bne	8f0c <ReadInt64Data+0xe48>
    8f2c:	b	9134 <ReadInt64Data+0x1070>
    8f30:	ldr	r3, [r9]
    8f34:	mov	r2, fp
    8f38:	ldr	r1, [sp, #4]
    8f3c:	add	r0, sp, #32
    8f40:	bl	1520 <fread@plt>
    8f44:	mov	r8, r0
    8f48:	cmp	fp, #0
    8f4c:	ble	9134 <ReadInt64Data+0x1070>
    8f50:	add	r5, sp, #32
    8f54:	ldr	r3, [sp, #8]
    8f58:	mov	r4, r3
    8f5c:	add	fp, r3, fp, lsl #3
    8f60:	mov	r0, r5
    8f64:	bl	1924 <Mat_uint16Swap>
    8f68:	uxth	r0, r0
    8f6c:	mov	r1, #0
    8f70:	strd	r0, [r4], #8
    8f74:	add	r5, r5, #2
    8f78:	cmp	r4, fp
    8f7c:	bne	8f60 <ReadInt64Data+0xe9c>
    8f80:	b	9134 <ReadInt64Data+0x1070>
    8f84:	cmp	fp, #256	; 0x100
    8f88:	ble	9060 <ReadInt64Data+0xf9c>
    8f8c:	sub	r7, fp, #256	; 0x100
    8f90:	ldr	r3, [sp, #8]
    8f94:	sub	r6, r3, #8
    8f98:	mov	r5, r8
    8f9c:	add	sl, sp, #32
    8fa0:	add	r4, sl, #508	; 0x1fc
    8fa4:	add	r4, r4, #2
    8fa8:	ldr	r3, [r9]
    8fac:	mov	r2, #256	; 0x100
    8fb0:	ldr	r1, [sp, #4]
    8fb4:	mov	r0, sl
    8fb8:	bl	1520 <fread@plt>
    8fbc:	add	r8, r8, r0
    8fc0:	str	r8, [sp, #12]
    8fc4:	sub	ip, sl, #2
    8fc8:	mov	r2, r6
    8fcc:	mov	r3, ip
    8fd0:	ldrh	r0, [r3, #2]!
    8fd4:	mov	r1, #0
    8fd8:	strd	r0, [r2, #8]!
    8fdc:	cmp	r3, r4
    8fe0:	bne	8fd0 <ReadInt64Data+0xf0c>
    8fe4:	add	r5, r5, #256	; 0x100
    8fe8:	add	r6, r6, #2048	; 0x800
    8fec:	cmp	r5, r7
    8ff0:	blt	8fa8 <ReadInt64Data+0xee4>
    8ff4:	mov	r7, ip
    8ff8:	sub	r3, fp, #256	; 0x100
    8ffc:	sub	r3, r3, #1
    9000:	bic	r3, r3, #255	; 0xff
    9004:	add	r4, r3, #256	; 0x100
    9008:	cmp	fp, r4
    900c:	ble	9134 <ReadInt64Data+0x1070>
    9010:	sub	fp, fp, r4
    9014:	ldr	r3, [r9]
    9018:	mov	r2, fp
    901c:	ldr	r1, [sp, #4]
    9020:	add	r0, sp, #32
    9024:	bl	1520 <fread@plt>
    9028:	ldr	r3, [sp, #12]
    902c:	add	r8, r3, r0
    9030:	cmp	fp, #0
    9034:	ble	9134 <ReadInt64Data+0x1070>
    9038:	ldr	r1, [sp, #8]
    903c:	add	r2, r1, r4, lsl #3
    9040:	add	r3, fp, r4
    9044:	add	r3, r1, r3, lsl #3
    9048:	ldrh	r0, [r7, #2]!
    904c:	mov	r1, #0
    9050:	strd	r0, [r2], #8
    9054:	cmp	r2, r3
    9058:	bne	9048 <ReadInt64Data+0xf84>
    905c:	b	9134 <ReadInt64Data+0x1070>
    9060:	ldr	r3, [r9]
    9064:	mov	r2, fp
    9068:	ldr	r1, [sp, #4]
    906c:	add	r0, sp, #32
    9070:	bl	1520 <fread@plt>
    9074:	mov	r8, r0
    9078:	cmp	fp, #0
    907c:	ble	9134 <ReadInt64Data+0x1070>
    9080:	add	r2, sp, #30
    9084:	ldr	r1, [sp, #8]
    9088:	mov	r3, r1
    908c:	add	ip, r1, fp, lsl #3
    9090:	ldrh	r0, [r2, #2]!
    9094:	mov	r1, #0
    9098:	strd	r0, [r3], #8
    909c:	cmp	r3, ip
    90a0:	bne	9090 <ReadInt64Data+0xfcc>
    90a4:	b	9134 <ReadInt64Data+0x1070>
    90a8:	cmp	fp, #256	; 0x100
    90ac:	ble	915c <ReadInt64Data+0x1098>
    90b0:	sub	r7, fp, #256	; 0x100
    90b4:	ldr	r3, [sp, #8]
    90b8:	sub	r6, r3, #8
    90bc:	mov	r5, #0
    90c0:	mov	r8, r5
    90c4:	add	sl, sp, #32
    90c8:	add	r4, sl, #255	; 0xff
    90cc:	ldr	r3, [r9]
    90d0:	mov	r2, #256	; 0x100
    90d4:	ldr	r1, [sp, #4]
    90d8:	mov	r0, sl
    90dc:	bl	1520 <fread@plt>
    90e0:	add	r8, r8, r0
    90e4:	str	r8, [sp, #12]
    90e8:	sub	ip, sl, #1
    90ec:	mov	r2, r6
    90f0:	mov	r3, ip
    90f4:	ldrsb	r0, [r3, #1]!
    90f8:	asr	r1, r0, #31
    90fc:	strd	r0, [r2, #8]!
    9100:	cmp	r3, r4
    9104:	bne	90f4 <ReadInt64Data+0x1030>
    9108:	add	r5, r5, #256	; 0x100
    910c:	add	r6, r6, #2048	; 0x800
    9110:	cmp	r5, r7
    9114:	blt	90cc <ReadInt64Data+0x1008>
    9118:	mov	r7, ip
    911c:	sub	r3, fp, #256	; 0x100
    9120:	sub	r3, r3, #1
    9124:	bic	r3, r3, #255	; 0xff
    9128:	add	r4, r3, #256	; 0x100
    912c:	cmp	fp, r4
    9130:	bgt	91a4 <ReadInt64Data+0x10e0>
    9134:	ldr	r3, [sp, #4]
    9138:	mul	r0, r3, r8
    913c:	add	sp, sp, #2080	; 0x820
    9140:	add	sp, sp, #4
    9144:	ldrd	r4, [sp]
    9148:	ldrd	r6, [sp, #8]
    914c:	ldrd	r8, [sp, #16]
    9150:	ldrd	sl, [sp, #24]
    9154:	add	sp, sp, #32
    9158:	pop	{pc}		; (ldr pc, [sp], #4)
    915c:	ldr	r3, [r9]
    9160:	mov	r2, fp
    9164:	ldr	r1, [sp, #4]
    9168:	add	r0, sp, #32
    916c:	bl	1520 <fread@plt>
    9170:	mov	r8, r0
    9174:	cmp	fp, #0
    9178:	ble	9134 <ReadInt64Data+0x1070>
    917c:	add	r2, sp, #31
    9180:	ldr	r1, [sp, #8]
    9184:	mov	r3, r1
    9188:	add	ip, r1, fp, lsl #3
    918c:	ldrsb	r0, [r2, #1]!
    9190:	asr	r1, r0, #31
    9194:	strd	r0, [r3], #8
    9198:	cmp	ip, r3
    919c:	bne	918c <ReadInt64Data+0x10c8>
    91a0:	b	9134 <ReadInt64Data+0x1070>
    91a4:	sub	fp, fp, r4
    91a8:	ldr	r3, [r9]
    91ac:	mov	r2, fp
    91b0:	ldr	r1, [sp, #4]
    91b4:	add	r0, sp, #32
    91b8:	bl	1520 <fread@plt>
    91bc:	ldr	r3, [sp, #12]
    91c0:	add	r8, r3, r0
    91c4:	cmp	fp, #0
    91c8:	ble	9134 <ReadInt64Data+0x1070>
    91cc:	ldr	r1, [sp, #8]
    91d0:	add	r2, r1, r4, lsl #3
    91d4:	add	r3, fp, r4
    91d8:	add	r3, r1, r3, lsl #3
    91dc:	ldrsb	r0, [r7, #1]!
    91e0:	asr	r1, r0, #31
    91e4:	strd	r0, [r2], #8
    91e8:	cmp	r2, r3
    91ec:	bne	91dc <ReadInt64Data+0x1118>
    91f0:	b	9134 <ReadInt64Data+0x1070>
    91f4:	cmp	fp, #256	; 0x100
    91f8:	ble	92d0 <ReadInt64Data+0x120c>
    91fc:	sub	r7, fp, #256	; 0x100
    9200:	ldr	r3, [sp, #8]
    9204:	sub	r6, r3, #8
    9208:	mov	r5, #0
    920c:	mov	r8, r5
    9210:	add	sl, sp, #32
    9214:	add	r4, sl, #255	; 0xff
    9218:	ldr	r3, [r9]
    921c:	mov	r2, #256	; 0x100
    9220:	ldr	r1, [sp, #4]
    9224:	mov	r0, sl
    9228:	bl	1520 <fread@plt>
    922c:	add	r8, r8, r0
    9230:	str	r8, [sp, #12]
    9234:	sub	ip, sl, #1
    9238:	mov	r2, r6
    923c:	mov	r3, ip
    9240:	ldrb	r0, [r3, #1]!
    9244:	mov	r1, #0
    9248:	strd	r0, [r2, #8]!
    924c:	cmp	r3, r4
    9250:	bne	9240 <ReadInt64Data+0x117c>
    9254:	add	r5, r5, #256	; 0x100
    9258:	add	r6, r6, #2048	; 0x800
    925c:	cmp	r5, r7
    9260:	blt	9218 <ReadInt64Data+0x1154>
    9264:	mov	r7, ip
    9268:	sub	r3, fp, #256	; 0x100
    926c:	sub	r3, r3, #1
    9270:	bic	r3, r3, #255	; 0xff
    9274:	add	r4, r3, #256	; 0x100
    9278:	cmp	fp, r4
    927c:	ble	9134 <ReadInt64Data+0x1070>
    9280:	sub	fp, fp, r4
    9284:	ldr	r3, [r9]
    9288:	mov	r2, fp
    928c:	ldr	r1, [sp, #4]
    9290:	add	r0, sp, #32
    9294:	bl	1520 <fread@plt>
    9298:	ldr	r3, [sp, #12]
    929c:	add	r8, r3, r0
    92a0:	cmp	fp, #0
    92a4:	ble	9134 <ReadInt64Data+0x1070>
    92a8:	ldr	r1, [sp, #8]
    92ac:	add	r2, r1, r4, lsl #3
    92b0:	add	r3, fp, r4
    92b4:	add	r3, r1, r3, lsl #3
    92b8:	ldrb	r0, [r7, #1]!
    92bc:	mov	r1, #0
    92c0:	strd	r0, [r2], #8
    92c4:	cmp	r2, r3
    92c8:	bne	92b8 <ReadInt64Data+0x11f4>
    92cc:	b	9134 <ReadInt64Data+0x1070>
    92d0:	ldr	r3, [r9]
    92d4:	mov	r2, fp
    92d8:	ldr	r1, [sp, #4]
    92dc:	add	r0, sp, #32
    92e0:	bl	1520 <fread@plt>
    92e4:	mov	r8, r0
    92e8:	cmp	fp, #0
    92ec:	ble	9134 <ReadInt64Data+0x1070>
    92f0:	add	r2, sp, #31
    92f4:	ldr	r1, [sp, #8]
    92f8:	mov	r3, r1
    92fc:	add	ip, r1, fp, lsl #3
    9300:	ldrb	r0, [r2, #1]!
    9304:	mov	r1, #0
    9308:	strd	r0, [r3], #8
    930c:	cmp	r3, ip
    9310:	bne	9300 <ReadInt64Data+0x123c>
    9314:	b	9134 <ReadInt64Data+0x1070>
    9318:	cmp	r4, #12
    931c:	beq	9428 <ReadInt64Data+0x1364>
    9320:	cmp	r4, #13
    9324:	movne	r8, #0
    9328:	bne	9134 <ReadInt64Data+0x1070>
    932c:	ldr	r8, [r9, #20]
    9330:	cmp	r8, #0
    9334:	beq	96dc <ReadInt64Data+0x1618>
    9338:	cmp	fp, #256	; 0x100
    933c:	ble	9690 <ReadInt64Data+0x15cc>
    9340:	sub	r3, fp, #256	; 0x100
    9344:	str	r3, [sp, #20]
    9348:	ldr	r3, [sp, #8]
    934c:	sub	sl, r3, #8
    9350:	mov	r7, #0
    9354:	mov	r8, r7
    9358:	add	r3, sp, #32
    935c:	str	r3, [sp, #24]
    9360:	add	r6, sp, #2080	; 0x820
    9364:	ldr	r3, [r9]
    9368:	mov	r2, #256	; 0x100
    936c:	ldr	r1, [sp, #4]
    9370:	ldr	r4, [sp, #24]
    9374:	mov	r0, r4
    9378:	bl	1520 <fread@plt>
    937c:	add	r8, r8, r0
    9380:	str	r8, [sp, #12]
    9384:	str	r4, [sp, #16]
    9388:	mov	r5, sl
    938c:	mov	r0, r4
    9390:	bl	1848 <Mat_uint64Swap>
    9394:	strd	r0, [r5, #8]!
    9398:	add	r4, r4, #8
    939c:	cmp	r6, r4
    93a0:	bne	938c <ReadInt64Data+0x12c8>
    93a4:	add	r7, r7, #256	; 0x100
    93a8:	add	sl, sl, #2048	; 0x800
    93ac:	ldr	r3, [sp, #20]
    93b0:	cmp	r7, r3
    93b4:	blt	9364 <ReadInt64Data+0x12a0>
    93b8:	sub	r3, fp, #256	; 0x100
    93bc:	sub	r3, r3, #1
    93c0:	bic	r3, r3, #255	; 0xff
    93c4:	add	r4, r3, #256	; 0x100
    93c8:	cmp	fp, r4
    93cc:	ble	9134 <ReadInt64Data+0x1070>
    93d0:	sub	fp, fp, r4
    93d4:	ldr	r3, [r9]
    93d8:	mov	r2, fp
    93dc:	ldr	r1, [sp, #4]
    93e0:	add	r0, sp, #32
    93e4:	bl	1520 <fread@plt>
    93e8:	ldr	r3, [sp, #12]
    93ec:	add	r8, r3, r0
    93f0:	cmp	fp, #0
    93f4:	ble	9134 <ReadInt64Data+0x1070>
    93f8:	ldr	r3, [sp, #8]
    93fc:	add	r6, r3, r4, lsl #3
    9400:	add	r4, fp, r4
    9404:	add	r4, r3, r4, lsl #3
    9408:	ldr	r5, [sp, #16]
    940c:	mov	r0, r5
    9410:	bl	1848 <Mat_uint64Swap>
    9414:	strd	r0, [r6], #8
    9418:	add	r5, r5, #8
    941c:	cmp	r4, r6
    9420:	bne	940c <ReadInt64Data+0x1348>
    9424:	b	9134 <ReadInt64Data+0x1070>
    9428:	ldr	r8, [r9, #20]
    942c:	cmp	r8, #0
    9430:	beq	9570 <ReadInt64Data+0x14ac>
    9434:	cmp	fp, #256	; 0x100
    9438:	ble	9524 <ReadInt64Data+0x1460>
    943c:	sub	r3, fp, #256	; 0x100
    9440:	str	r3, [sp, #20]
    9444:	ldr	r3, [sp, #8]
    9448:	sub	sl, r3, #8
    944c:	mov	r7, #0
    9450:	mov	r8, r7
    9454:	add	r3, sp, #32
    9458:	str	r3, [sp, #24]
    945c:	add	r6, sp, #2080	; 0x820
    9460:	ldr	r3, [r9]
    9464:	mov	r2, #256	; 0x100
    9468:	ldr	r1, [sp, #4]
    946c:	ldr	r4, [sp, #24]
    9470:	mov	r0, r4
    9474:	bl	1520 <fread@plt>
    9478:	add	r8, r8, r0
    947c:	str	r8, [sp, #12]
    9480:	str	r4, [sp, #16]
    9484:	mov	r5, sl
    9488:	mov	r0, r4
    948c:	bl	17ec <Mat_int64Swap>
    9490:	strd	r0, [r5, #8]!
    9494:	add	r4, r4, #8
    9498:	cmp	r4, r6
    949c:	bne	9488 <ReadInt64Data+0x13c4>
    94a0:	add	r7, r7, #256	; 0x100
    94a4:	add	sl, sl, #2048	; 0x800
    94a8:	ldr	r3, [sp, #20]
    94ac:	cmp	r7, r3
    94b0:	blt	9460 <ReadInt64Data+0x139c>
    94b4:	sub	r3, fp, #256	; 0x100
    94b8:	sub	r3, r3, #1
    94bc:	bic	r3, r3, #255	; 0xff
    94c0:	add	r4, r3, #256	; 0x100
    94c4:	cmp	fp, r4
    94c8:	ble	9134 <ReadInt64Data+0x1070>
    94cc:	sub	fp, fp, r4
    94d0:	ldr	r3, [r9]
    94d4:	mov	r2, fp
    94d8:	ldr	r1, [sp, #4]
    94dc:	add	r0, sp, #32
    94e0:	bl	1520 <fread@plt>
    94e4:	ldr	r3, [sp, #12]
    94e8:	add	r8, r3, r0
    94ec:	cmp	fp, #0
    94f0:	ble	9134 <ReadInt64Data+0x1070>
    94f4:	ldr	r3, [sp, #8]
    94f8:	add	r6, r3, r4, lsl #3
    94fc:	add	r4, fp, r4
    9500:	add	r4, r3, r4, lsl #3
    9504:	ldr	r5, [sp, #16]
    9508:	mov	r0, r5
    950c:	bl	17ec <Mat_int64Swap>
    9510:	strd	r0, [r6], #8
    9514:	add	r5, r5, #8
    9518:	cmp	r4, r6
    951c:	bne	9508 <ReadInt64Data+0x1444>
    9520:	b	9134 <ReadInt64Data+0x1070>
    9524:	ldr	r3, [r9]
    9528:	mov	r2, fp
    952c:	ldr	r1, [sp, #4]
    9530:	add	r0, sp, #32
    9534:	bl	1520 <fread@plt>
    9538:	mov	r8, r0
    953c:	cmp	fp, #0
    9540:	ble	9134 <ReadInt64Data+0x1070>
    9544:	add	r5, sp, #32
    9548:	ldr	r3, [sp, #8]
    954c:	mov	r4, r3
    9550:	add	fp, r3, fp, lsl #3
    9554:	mov	r0, r5
    9558:	bl	17ec <Mat_int64Swap>
    955c:	strd	r0, [r4], #8
    9560:	add	r5, r5, #8
    9564:	cmp	r4, fp
    9568:	bne	9554 <ReadInt64Data+0x1490>
    956c:	b	9134 <ReadInt64Data+0x1070>
    9570:	cmp	fp, #256	; 0x100
    9574:	ble	9648 <ReadInt64Data+0x1584>
    9578:	sub	r3, fp, #256	; 0x100
    957c:	str	r3, [sp, #16]
    9580:	ldr	r3, [sp, #8]
    9584:	sub	r7, r3, #8
    9588:	mov	r6, r8
    958c:	add	sl, sp, #32
    9590:	add	r4, sp, #2064	; 0x810
    9594:	add	r4, r4, #8
    9598:	ldr	r3, [r9]
    959c:	mov	r2, #256	; 0x100
    95a0:	ldr	r1, [sp, #4]
    95a4:	mov	r0, sl
    95a8:	bl	1520 <fread@plt>
    95ac:	add	r8, r8, r0
    95b0:	str	r8, [sp, #12]
    95b4:	sub	r5, sl, #8
    95b8:	mov	r2, r7
    95bc:	mov	r3, r5
    95c0:	ldrd	r0, [r3, #8]!
    95c4:	strd	r0, [r2, #8]!
    95c8:	cmp	r3, r4
    95cc:	bne	95c0 <ReadInt64Data+0x14fc>
    95d0:	add	r6, r6, #256	; 0x100
    95d4:	add	r7, r7, #2048	; 0x800
    95d8:	ldr	r3, [sp, #16]
    95dc:	cmp	r6, r3
    95e0:	blt	9598 <ReadInt64Data+0x14d4>
    95e4:	sub	r3, fp, #256	; 0x100
    95e8:	sub	r3, r3, #1
    95ec:	bic	r3, r3, #255	; 0xff
    95f0:	add	r4, r3, #256	; 0x100
    95f4:	cmp	fp, r4
    95f8:	ble	9134 <ReadInt64Data+0x1070>
    95fc:	sub	fp, fp, r4
    9600:	ldr	r3, [r9]
    9604:	mov	r2, fp
    9608:	ldr	r1, [sp, #4]
    960c:	add	r0, sp, #32
    9610:	bl	1520 <fread@plt>
    9614:	ldr	r3, [sp, #12]
    9618:	add	r8, r3, r0
    961c:	cmp	fp, #0
    9620:	ble	9134 <ReadInt64Data+0x1070>
    9624:	ldr	r1, [sp, #8]
    9628:	add	r2, r1, r4, lsl #3
    962c:	add	r3, fp, r4
    9630:	add	r3, r1, r3, lsl #3
    9634:	ldrd	r0, [r5, #8]!
    9638:	strd	r0, [r2], #8
    963c:	cmp	r3, r2
    9640:	bne	9634 <ReadInt64Data+0x1570>
    9644:	b	9134 <ReadInt64Data+0x1070>
    9648:	ldr	r3, [r9]
    964c:	mov	r2, fp
    9650:	ldr	r1, [sp, #4]
    9654:	add	r0, sp, #32
    9658:	bl	1520 <fread@plt>
    965c:	mov	r8, r0
    9660:	cmp	fp, #0
    9664:	ble	9134 <ReadInt64Data+0x1070>
    9668:	add	r2, sp, #24
    966c:	ldr	r1, [sp, #8]
    9670:	mov	r3, r1
    9674:	add	r1, r1, fp, lsl #3
    9678:	mov	ip, r1
    967c:	ldrd	r0, [r2, #8]!
    9680:	strd	r0, [r3], #8
    9684:	cmp	ip, r3
    9688:	bne	967c <ReadInt64Data+0x15b8>
    968c:	b	9134 <ReadInt64Data+0x1070>
    9690:	ldr	r3, [r9]
    9694:	mov	r2, fp
    9698:	ldr	r1, [sp, #4]
    969c:	add	r0, sp, #32
    96a0:	bl	1520 <fread@plt>
    96a4:	mov	r8, r0
    96a8:	cmp	fp, #0
    96ac:	ble	9134 <ReadInt64Data+0x1070>
    96b0:	add	r5, sp, #32
    96b4:	ldr	r3, [sp, #8]
    96b8:	mov	r4, r3
    96bc:	add	fp, r3, fp, lsl #3
    96c0:	mov	r0, r5
    96c4:	bl	1848 <Mat_uint64Swap>
    96c8:	strd	r0, [r4], #8
    96cc:	add	r5, r5, #8
    96d0:	cmp	r4, fp
    96d4:	bne	96c0 <ReadInt64Data+0x15fc>
    96d8:	b	9134 <ReadInt64Data+0x1070>
    96dc:	cmp	fp, #256	; 0x100
    96e0:	ble	97b4 <ReadInt64Data+0x16f0>
    96e4:	sub	r3, fp, #256	; 0x100
    96e8:	str	r3, [sp, #16]
    96ec:	ldr	r3, [sp, #8]
    96f0:	sub	r7, r3, #8
    96f4:	mov	r6, r8
    96f8:	add	sl, sp, #32
    96fc:	add	r4, sp, #2064	; 0x810
    9700:	add	r4, r4, #8
    9704:	ldr	r3, [r9]
    9708:	mov	r2, #256	; 0x100
    970c:	ldr	r1, [sp, #4]
    9710:	mov	r0, sl
    9714:	bl	1520 <fread@plt>
    9718:	add	r8, r8, r0
    971c:	str	r8, [sp, #12]
    9720:	sub	r5, sl, #8
    9724:	mov	r2, r7
    9728:	mov	r3, r5
    972c:	ldrd	r0, [r3, #8]!
    9730:	strd	r0, [r2, #8]!
    9734:	cmp	r3, r4
    9738:	bne	972c <ReadInt64Data+0x1668>
    973c:	add	r6, r6, #256	; 0x100
    9740:	add	r7, r7, #2048	; 0x800
    9744:	ldr	r3, [sp, #16]
    9748:	cmp	r6, r3
    974c:	blt	9704 <ReadInt64Data+0x1640>
    9750:	sub	r3, fp, #256	; 0x100
    9754:	sub	r3, r3, #1
    9758:	bic	r3, r3, #255	; 0xff
    975c:	add	r4, r3, #256	; 0x100
    9760:	cmp	fp, r4
    9764:	ble	9134 <ReadInt64Data+0x1070>
    9768:	sub	r6, fp, r4
    976c:	ldr	r3, [r9]
    9770:	mov	r2, r6
    9774:	ldr	r1, [sp, #4]
    9778:	add	r0, sp, #32
    977c:	bl	1520 <fread@plt>
    9780:	ldr	r3, [sp, #12]
    9784:	add	r8, r3, r0
    9788:	cmp	r6, #0
    978c:	ble	9134 <ReadInt64Data+0x1070>
    9790:	ldr	r1, [sp, #8]
    9794:	add	r2, r1, r4, lsl #3
    9798:	add	r3, r6, r4
    979c:	add	r3, r1, r3, lsl #3
    97a0:	ldrd	r0, [r5, #8]!
    97a4:	strd	r0, [r2], #8
    97a8:	cmp	r2, r3
    97ac:	bne	97a0 <ReadInt64Data+0x16dc>
    97b0:	b	9134 <ReadInt64Data+0x1070>
    97b4:	ldr	r3, [r9]
    97b8:	mov	r2, fp
    97bc:	ldr	r1, [sp, #4]
    97c0:	add	r0, sp, #32
    97c4:	bl	1520 <fread@plt>
    97c8:	mov	r8, r0
    97cc:	cmp	fp, #0
    97d0:	ble	9134 <ReadInt64Data+0x1070>
    97d4:	add	r2, sp, #24
    97d8:	ldr	r1, [sp, #8]
    97dc:	mov	r3, r1
    97e0:	add	r1, r1, fp, lsl #3
    97e4:	mov	ip, r1
    97e8:	ldrd	r0, [r2, #8]!
    97ec:	strd	r0, [r3], #8
    97f0:	cmp	r3, ip
    97f4:	bne	97e8 <ReadInt64Data+0x1724>
    97f8:	b	9134 <ReadInt64Data+0x1070>
    97fc:	mov	r0, #0
    9800:	bx	lr

00009804 <ReadCompressedInt64Data>:
    9804:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9808:	strd	r6, [sp, #8]
    980c:	strd	r8, [sp, #16]
    9810:	strd	sl, [sp, #24]
    9814:	str	lr, [sp, #32]
    9818:	sub	sp, sp, #12
    981c:	ldr	r6, [sp, #48]	; 0x30
    9820:	mov	r7, r2
    9824:	mov	r9, r1
    9828:	clz	r1, r1
    982c:	lsr	r1, r1, #5
    9830:	cmp	r2, #0
    9834:	movne	r2, r1
    9838:	moveq	r2, #1
    983c:	cmp	r0, #0
    9840:	moveq	r2, #1
    9844:	cmp	r2, #0
    9848:	movne	r0, #0
    984c:	beq	986c <ReadCompressedInt64Data+0x68>
    9850:	add	sp, sp, #12
    9854:	ldrd	r4, [sp]
    9858:	ldrd	r6, [sp, #8]
    985c:	ldrd	r8, [sp, #16]
    9860:	ldrd	sl, [sp, #24]
    9864:	add	sp, sp, #32
    9868:	pop	{pc}		; (ldr pc, [sp], #4)
    986c:	mov	r8, r0
    9870:	mov	r5, r3
    9874:	mov	r0, r3
    9878:	bl	1598 <Mat_SizeOf@plt>
    987c:	mov	r4, r0
    9880:	sub	r3, r5, #1
    9884:	cmp	r3, #8
    9888:	addls	pc, pc, r3, lsl #2
    988c:	b	9cb8 <ReadCompressedInt64Data+0x4b4>
    9890:	b	98f8 <ReadCompressedInt64Data+0xf4>
    9894:	b	98b4 <ReadCompressedInt64Data+0xb0>
    9898:	b	9b90 <ReadCompressedInt64Data+0x38c>
    989c:	b	9c24 <ReadCompressedInt64Data+0x420>
    98a0:	b	9a60 <ReadCompressedInt64Data+0x25c>
    98a4:	b	9af0 <ReadCompressedInt64Data+0x2ec>
    98a8:	b	99cc <ReadCompressedInt64Data+0x1c8>
    98ac:	b	9cb8 <ReadCompressedInt64Data+0x4b4>
    98b0:	b	9938 <ReadCompressedInt64Data+0x134>
    98b4:	cmp	r6, #0
    98b8:	movgt	r5, r7
    98bc:	addgt	r7, r7, r6, lsl #3
    98c0:	movgt	sl, sp
    98c4:	ble	98f0 <ReadCompressedInt64Data+0xec>
    98c8:	mov	r3, r4
    98cc:	mov	r2, sl
    98d0:	mov	r1, r9
    98d4:	mov	r0, r8
    98d8:	bl	333c <InflateData>
    98dc:	ldrb	r2, [sp]
    98e0:	mov	r3, #0
    98e4:	strd	r2, [r5], #8
    98e8:	cmp	r7, r5
    98ec:	bne	98c8 <ReadCompressedInt64Data+0xc4>
    98f0:	mul	r0, r4, r6
    98f4:	b	9850 <ReadCompressedInt64Data+0x4c>
    98f8:	cmp	r6, #0
    98fc:	movgt	r5, r7
    9900:	addgt	r7, r7, r6, lsl #3
    9904:	movgt	sl, sp
    9908:	ble	98f0 <ReadCompressedInt64Data+0xec>
    990c:	mov	r3, r4
    9910:	mov	r2, sl
    9914:	mov	r1, r9
    9918:	mov	r0, r8
    991c:	bl	333c <InflateData>
    9920:	ldrsb	r2, [sp]
    9924:	asr	r3, r2, #31
    9928:	strd	r2, [r5], #8
    992c:	cmp	r7, r5
    9930:	bne	990c <ReadCompressedInt64Data+0x108>
    9934:	b	98f0 <ReadCompressedInt64Data+0xec>
    9938:	ldr	r3, [r8, #20]
    993c:	cmp	r3, #0
    9940:	bne	9984 <ReadCompressedInt64Data+0x180>
    9944:	cmp	r6, #0
    9948:	movgt	r5, r7
    994c:	addgt	r7, r7, r6, lsl #3
    9950:	movgt	sl, sp
    9954:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9958:	mov	r3, r4
    995c:	mov	r2, sl
    9960:	mov	r1, r9
    9964:	mov	r0, r8
    9968:	bl	333c <InflateData>
    996c:	ldrd	r0, [sp]
    9970:	bl	4f038 <__aeabi_d2lz>
    9974:	strd	r0, [r5], #8
    9978:	cmp	r5, r7
    997c:	bne	9958 <ReadCompressedInt64Data+0x154>
    9980:	b	98f0 <ReadCompressedInt64Data+0xec>
    9984:	cmp	r6, #0
    9988:	ble	98f0 <ReadCompressedInt64Data+0xec>
    998c:	mov	r5, r7
    9990:	add	r7, r7, r6, lsl #3
    9994:	mov	sl, sp
    9998:	mov	r3, r4
    999c:	mov	r2, sl
    99a0:	mov	r1, r9
    99a4:	mov	r0, r8
    99a8:	bl	333c <InflateData>
    99ac:	mov	r0, sl
    99b0:	bl	1974 <Mat_doubleSwap>
    99b4:	vmov	r0, r1, d0
    99b8:	bl	4f038 <__aeabi_d2lz>
    99bc:	strd	r0, [r5], #8
    99c0:	cmp	r5, r7
    99c4:	bne	9998 <ReadCompressedInt64Data+0x194>
    99c8:	b	98f0 <ReadCompressedInt64Data+0xec>
    99cc:	ldr	r3, [r8, #20]
    99d0:	cmp	r3, #0
    99d4:	bne	9a18 <ReadCompressedInt64Data+0x214>
    99d8:	cmp	r6, #0
    99dc:	movgt	r5, r7
    99e0:	addgt	r7, r7, r6, lsl #3
    99e4:	movgt	sl, sp
    99e8:	ble	98f0 <ReadCompressedInt64Data+0xec>
    99ec:	mov	r3, r4
    99f0:	mov	r2, sl
    99f4:	mov	r1, r9
    99f8:	mov	r0, r8
    99fc:	bl	333c <InflateData>
    9a00:	ldr	r0, [sp]
    9a04:	bl	4f00c <__aeabi_f2lz>
    9a08:	strd	r0, [r5], #8
    9a0c:	cmp	r5, r7
    9a10:	bne	99ec <ReadCompressedInt64Data+0x1e8>
    9a14:	b	98f0 <ReadCompressedInt64Data+0xec>
    9a18:	cmp	r6, #0
    9a1c:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9a20:	mov	r5, r7
    9a24:	add	r7, r7, r6, lsl #3
    9a28:	mov	sl, sp
    9a2c:	mov	r3, r4
    9a30:	mov	r2, sl
    9a34:	mov	r1, r9
    9a38:	mov	r0, r8
    9a3c:	bl	333c <InflateData>
    9a40:	mov	r0, sl
    9a44:	bl	1944 <Mat_floatSwap>
    9a48:	vmov	r0, s0
    9a4c:	bl	4f00c <__aeabi_f2lz>
    9a50:	strd	r0, [r5], #8
    9a54:	cmp	r5, r7
    9a58:	bne	9a2c <ReadCompressedInt64Data+0x228>
    9a5c:	b	98f0 <ReadCompressedInt64Data+0xec>
    9a60:	ldr	r3, [r8, #20]
    9a64:	cmp	r3, #0
    9a68:	bne	9aac <ReadCompressedInt64Data+0x2a8>
    9a6c:	cmp	r6, #0
    9a70:	movgt	r5, r7
    9a74:	addgt	r7, r7, r6, lsl #3
    9a78:	movgt	sl, sp
    9a7c:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9a80:	mov	r3, r4
    9a84:	mov	r2, sl
    9a88:	mov	r1, r9
    9a8c:	mov	r0, r8
    9a90:	bl	333c <InflateData>
    9a94:	ldr	r2, [sp]
    9a98:	asr	r3, r2, #31
    9a9c:	strd	r2, [r5], #8
    9aa0:	cmp	r5, r7
    9aa4:	bne	9a80 <ReadCompressedInt64Data+0x27c>
    9aa8:	b	98f0 <ReadCompressedInt64Data+0xec>
    9aac:	cmp	r6, #0
    9ab0:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9ab4:	mov	r5, r7
    9ab8:	add	r7, r7, r6, lsl #3
    9abc:	mov	sl, sp
    9ac0:	mov	r3, r4
    9ac4:	mov	r2, sl
    9ac8:	mov	r1, r9
    9acc:	mov	r0, r8
    9ad0:	bl	333c <InflateData>
    9ad4:	mov	r0, sl
    9ad8:	bl	18a4 <Mat_int32Swap>
    9adc:	asr	r1, r0, #31
    9ae0:	strd	r0, [r5], #8
    9ae4:	cmp	r5, r7
    9ae8:	bne	9ac0 <ReadCompressedInt64Data+0x2bc>
    9aec:	b	98f0 <ReadCompressedInt64Data+0xec>
    9af0:	ldr	r3, [r8, #20]
    9af4:	cmp	r3, #0
    9af8:	bne	9b44 <ReadCompressedInt64Data+0x340>
    9afc:	cmp	r6, #0
    9b00:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9b04:	mov	r5, r7
    9b08:	add	r7, r7, r6, lsl #3
    9b0c:	mov	fp, sp
    9b10:	mov	sl, #0
    9b14:	mov	r3, r4
    9b18:	mov	r2, fp
    9b1c:	mov	r1, r9
    9b20:	mov	r0, r8
    9b24:	bl	333c <InflateData>
    9b28:	ldr	r3, [sp]
    9b2c:	str	r3, [r5]
    9b30:	str	sl, [r5, #4]
    9b34:	add	r5, r5, #8
    9b38:	cmp	r5, r7
    9b3c:	bne	9b14 <ReadCompressedInt64Data+0x310>
    9b40:	b	98f0 <ReadCompressedInt64Data+0xec>
    9b44:	cmp	r6, #0
    9b48:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9b4c:	mov	r5, r7
    9b50:	add	r7, r7, r6, lsl #3
    9b54:	mov	sl, sp
    9b58:	mov	fp, #0
    9b5c:	mov	r3, r4
    9b60:	mov	r2, sl
    9b64:	mov	r1, r9
    9b68:	mov	r0, r8
    9b6c:	bl	333c <InflateData>
    9b70:	mov	r0, sl
    9b74:	bl	18d4 <Mat_uint32Swap>
    9b78:	str	r0, [r5]
    9b7c:	str	fp, [r5, #4]
    9b80:	add	r5, r5, #8
    9b84:	cmp	r5, r7
    9b88:	bne	9b5c <ReadCompressedInt64Data+0x358>
    9b8c:	b	98f0 <ReadCompressedInt64Data+0xec>
    9b90:	ldr	r3, [r8, #20]
    9b94:	cmp	r3, #0
    9b98:	bne	9bdc <ReadCompressedInt64Data+0x3d8>
    9b9c:	cmp	r6, #0
    9ba0:	movgt	r5, r7
    9ba4:	addgt	r7, r7, r6, lsl #3
    9ba8:	movgt	sl, sp
    9bac:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9bb0:	mov	r3, r4
    9bb4:	mov	r2, sl
    9bb8:	mov	r1, r9
    9bbc:	mov	r0, r8
    9bc0:	bl	333c <InflateData>
    9bc4:	ldrsh	r2, [sp]
    9bc8:	asr	r3, r2, #31
    9bcc:	strd	r2, [r5], #8
    9bd0:	cmp	r7, r5
    9bd4:	bne	9bb0 <ReadCompressedInt64Data+0x3ac>
    9bd8:	b	98f0 <ReadCompressedInt64Data+0xec>
    9bdc:	cmp	r6, #0
    9be0:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9be4:	mov	r5, r7
    9be8:	add	r7, r7, r6, lsl #3
    9bec:	mov	sl, sp
    9bf0:	mov	r3, r4
    9bf4:	mov	r2, sl
    9bf8:	mov	r1, r9
    9bfc:	mov	r0, r8
    9c00:	bl	333c <InflateData>
    9c04:	mov	r0, sl
    9c08:	bl	1904 <Mat_int16Swap>
    9c0c:	sxth	r0, r0
    9c10:	asr	r1, r0, #31
    9c14:	strd	r0, [r5], #8
    9c18:	cmp	r7, r5
    9c1c:	bne	9bf0 <ReadCompressedInt64Data+0x3ec>
    9c20:	b	98f0 <ReadCompressedInt64Data+0xec>
    9c24:	ldr	r3, [r8, #20]
    9c28:	cmp	r3, #0
    9c2c:	bne	9c70 <ReadCompressedInt64Data+0x46c>
    9c30:	cmp	r6, #0
    9c34:	movgt	r5, r7
    9c38:	addgt	r7, r7, r6, lsl #3
    9c3c:	movgt	sl, sp
    9c40:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9c44:	mov	r3, r4
    9c48:	mov	r2, sl
    9c4c:	mov	r1, r9
    9c50:	mov	r0, r8
    9c54:	bl	333c <InflateData>
    9c58:	ldrh	r2, [sp]
    9c5c:	mov	r3, #0
    9c60:	strd	r2, [r5], #8
    9c64:	cmp	r5, r7
    9c68:	bne	9c44 <ReadCompressedInt64Data+0x440>
    9c6c:	b	98f0 <ReadCompressedInt64Data+0xec>
    9c70:	cmp	r6, #0
    9c74:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9c78:	mov	r5, r7
    9c7c:	add	r7, r7, r6, lsl #3
    9c80:	mov	sl, sp
    9c84:	mov	r3, r4
    9c88:	mov	r2, sl
    9c8c:	mov	r1, r9
    9c90:	mov	r0, r8
    9c94:	bl	333c <InflateData>
    9c98:	mov	r0, sl
    9c9c:	bl	1924 <Mat_uint16Swap>
    9ca0:	uxth	r0, r0
    9ca4:	mov	r1, #0
    9ca8:	strd	r0, [r5], #8
    9cac:	cmp	r7, r5
    9cb0:	bne	9c84 <ReadCompressedInt64Data+0x480>
    9cb4:	b	98f0 <ReadCompressedInt64Data+0xec>
    9cb8:	cmp	r5, #12
    9cbc:	beq	9d10 <ReadCompressedInt64Data+0x50c>
    9cc0:	cmp	r5, #13
    9cc4:	bne	98f0 <ReadCompressedInt64Data+0xec>
    9cc8:	ldr	r3, [r8, #20]
    9ccc:	cmp	r3, #0
    9cd0:	bne	9d98 <ReadCompressedInt64Data+0x594>
    9cd4:	cmp	r6, #0
    9cd8:	movgt	r5, r7
    9cdc:	addgt	r7, r7, r6, lsl #3
    9ce0:	movgt	sl, sp
    9ce4:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9ce8:	mov	r3, r4
    9cec:	mov	r2, sl
    9cf0:	mov	r1, r9
    9cf4:	mov	r0, r8
    9cf8:	bl	333c <InflateData>
    9cfc:	ldrd	r2, [sp]
    9d00:	strd	r2, [r5], #8
    9d04:	cmp	r7, r5
    9d08:	bne	9ce8 <ReadCompressedInt64Data+0x4e4>
    9d0c:	b	98f0 <ReadCompressedInt64Data+0xec>
    9d10:	ldr	r3, [r8, #20]
    9d14:	cmp	r3, #0
    9d18:	bne	9d58 <ReadCompressedInt64Data+0x554>
    9d1c:	cmp	r6, #0
    9d20:	movgt	r5, r7
    9d24:	addgt	r7, r7, r6, lsl #3
    9d28:	movgt	sl, sp
    9d2c:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9d30:	mov	r3, r4
    9d34:	mov	r2, sl
    9d38:	mov	r1, r9
    9d3c:	mov	r0, r8
    9d40:	bl	333c <InflateData>
    9d44:	ldrd	r2, [sp]
    9d48:	strd	r2, [r5], #8
    9d4c:	cmp	r7, r5
    9d50:	bne	9d30 <ReadCompressedInt64Data+0x52c>
    9d54:	b	98f0 <ReadCompressedInt64Data+0xec>
    9d58:	cmp	r6, #0
    9d5c:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9d60:	mov	r5, r7
    9d64:	add	r7, r7, r6, lsl #3
    9d68:	mov	sl, sp
    9d6c:	mov	r3, r4
    9d70:	mov	r2, sl
    9d74:	mov	r1, r9
    9d78:	mov	r0, r8
    9d7c:	bl	333c <InflateData>
    9d80:	mov	r0, sl
    9d84:	bl	17ec <Mat_int64Swap>
    9d88:	strd	r0, [r5], #8
    9d8c:	cmp	r5, r7
    9d90:	bne	9d6c <ReadCompressedInt64Data+0x568>
    9d94:	b	98f0 <ReadCompressedInt64Data+0xec>
    9d98:	cmp	r6, #0
    9d9c:	ble	98f0 <ReadCompressedInt64Data+0xec>
    9da0:	mov	r5, r7
    9da4:	add	r7, r7, r6, lsl #3
    9da8:	mov	sl, sp
    9dac:	mov	r3, r4
    9db0:	mov	r2, sl
    9db4:	mov	r1, r9
    9db8:	mov	r0, r8
    9dbc:	bl	333c <InflateData>
    9dc0:	mov	r0, sl
    9dc4:	bl	1848 <Mat_uint64Swap>
    9dc8:	strd	r0, [r5], #8
    9dcc:	cmp	r7, r5
    9dd0:	bne	9dac <ReadCompressedInt64Data+0x5a8>
    9dd4:	b	98f0 <ReadCompressedInt64Data+0xec>

00009dd8 <ReadUInt64Data>:
    9dd8:	cmp	r1, #0
    9ddc:	cmpne	r0, #0
    9de0:	beq	b510 <ReadUInt64Data+0x1738>
    9de4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9de8:	strd	r6, [sp, #8]
    9dec:	strd	r8, [sp, #16]
    9df0:	strd	sl, [sp, #24]
    9df4:	str	lr, [sp, #32]
    9df8:	sub	sp, sp, #2080	; 0x820
    9dfc:	sub	sp, sp, #4
    9e00:	mov	r9, r0
    9e04:	mov	ip, r1
    9e08:	ldr	r1, [r0]
    9e0c:	cmp	r1, #0
    9e10:	moveq	r0, #0
    9e14:	beq	ae50 <ReadUInt64Data+0x1078>
    9e18:	str	ip, [sp, #8]
    9e1c:	mov	fp, r3
    9e20:	mov	r4, r2
    9e24:	mov	r0, r2
    9e28:	bl	1598 <Mat_SizeOf@plt>
    9e2c:	str	r0, [sp, #4]
    9e30:	sub	r3, r4, #1
    9e34:	cmp	r3, #8
    9e38:	addls	pc, pc, r3, lsl #2
    9e3c:	b	b02c <ReadUInt64Data+0x1254>
    9e40:	b	adbc <ReadUInt64Data+0xfe4>
    9e44:	b	af08 <ReadUInt64Data+0x1130>
    9e48:	b	a8ac <ReadUInt64Data+0xad4>
    9e4c:	b	ab34 <ReadUInt64Data+0xd5c>
    9e50:	b	a38c <ReadUInt64Data+0x5b4>
    9e54:	b	a604 <ReadUInt64Data+0x82c>
    9e58:	b	a0f8 <ReadUInt64Data+0x320>
    9e5c:	b	b02c <ReadUInt64Data+0x1254>
    9e60:	b	9e64 <ReadUInt64Data+0x8c>
    9e64:	ldr	r8, [r9, #20]
    9e68:	cmp	r8, #0
    9e6c:	beq	9fc8 <ReadUInt64Data+0x1f0>
    9e70:	cmp	fp, #256	; 0x100
    9e74:	ble	9f74 <ReadUInt64Data+0x19c>
    9e78:	sub	r3, fp, #256	; 0x100
    9e7c:	ldr	r2, [sp, #8]
    9e80:	sub	sl, r2, #8
    9e84:	mov	r7, #0
    9e88:	mov	r8, r7
    9e8c:	add	r2, sp, #32
    9e90:	str	r2, [sp, #20]
    9e94:	add	r6, sp, #2080	; 0x820
    9e98:	str	fp, [sp, #24]
    9e9c:	mov	fp, r3
    9ea0:	ldr	r3, [r9]
    9ea4:	mov	r2, #256	; 0x100
    9ea8:	ldr	r1, [sp, #4]
    9eac:	ldr	r4, [sp, #20]
    9eb0:	mov	r0, r4
    9eb4:	bl	1520 <fread@plt>
    9eb8:	add	r8, r8, r0
    9ebc:	str	r8, [sp, #12]
    9ec0:	str	r4, [sp, #16]
    9ec4:	mov	r5, sl
    9ec8:	mov	r0, r4
    9ecc:	bl	1974 <Mat_doubleSwap>
    9ed0:	vmov	r0, r1, d0
    9ed4:	bl	4f0a8 <__aeabi_d2ulz>
    9ed8:	strd	r0, [r5, #8]!
    9edc:	add	r4, r4, #8
    9ee0:	cmp	r4, r6
    9ee4:	bne	9ec8 <ReadUInt64Data+0xf0>
    9ee8:	add	r7, r7, #256	; 0x100
    9eec:	add	sl, sl, #2048	; 0x800
    9ef0:	cmp	r7, fp
    9ef4:	blt	9ea0 <ReadUInt64Data+0xc8>
    9ef8:	ldr	fp, [sp, #24]
    9efc:	sub	r3, fp, #256	; 0x100
    9f00:	sub	r3, r3, #1
    9f04:	bic	r3, r3, #255	; 0xff
    9f08:	add	r4, r3, #256	; 0x100
    9f0c:	cmp	fp, r4
    9f10:	ble	ae48 <ReadUInt64Data+0x1070>
    9f14:	sub	fp, fp, r4
    9f18:	ldr	r3, [r9]
    9f1c:	mov	r2, fp
    9f20:	ldr	r1, [sp, #4]
    9f24:	add	r0, sp, #32
    9f28:	bl	1520 <fread@plt>
    9f2c:	ldr	r3, [sp, #12]
    9f30:	add	r8, r3, r0
    9f34:	cmp	fp, #0
    9f38:	ble	ae48 <ReadUInt64Data+0x1070>
    9f3c:	ldr	r3, [sp, #8]
    9f40:	add	r6, r3, r4, lsl #3
    9f44:	add	r4, fp, r4
    9f48:	add	r4, r3, r4, lsl #3
    9f4c:	ldr	r5, [sp, #16]
    9f50:	mov	r0, r5
    9f54:	bl	1974 <Mat_doubleSwap>
    9f58:	vmov	r0, r1, d0
    9f5c:	bl	4f0a8 <__aeabi_d2ulz>
    9f60:	strd	r0, [r6], #8
    9f64:	add	r5, r5, #8
    9f68:	cmp	r6, r4
    9f6c:	bne	9f50 <ReadUInt64Data+0x178>
    9f70:	b	ae48 <ReadUInt64Data+0x1070>
    9f74:	ldr	r3, [r9]
    9f78:	mov	r2, fp
    9f7c:	ldr	r1, [sp, #4]
    9f80:	add	r0, sp, #32
    9f84:	bl	1520 <fread@plt>
    9f88:	mov	r8, r0
    9f8c:	cmp	fp, #0
    9f90:	ble	ae48 <ReadUInt64Data+0x1070>
    9f94:	add	r5, sp, #32
    9f98:	ldr	r3, [sp, #8]
    9f9c:	mov	r4, r3
    9fa0:	add	fp, r3, fp, lsl #3
    9fa4:	mov	r0, r5
    9fa8:	bl	1974 <Mat_doubleSwap>
    9fac:	vmov	r0, r1, d0
    9fb0:	bl	4f0a8 <__aeabi_d2ulz>
    9fb4:	strd	r0, [r4], #8
    9fb8:	add	r5, r5, #8
    9fbc:	cmp	r4, fp
    9fc0:	bne	9fa4 <ReadUInt64Data+0x1cc>
    9fc4:	b	ae48 <ReadUInt64Data+0x1070>
    9fc8:	cmp	fp, #256	; 0x100
    9fcc:	ble	a0b0 <ReadUInt64Data+0x2d8>
    9fd0:	sub	r3, fp, #256	; 0x100
    9fd4:	ldr	r2, [sp, #8]
    9fd8:	sub	sl, r2, #8
    9fdc:	mov	r7, r8
    9fe0:	add	r2, sp, #32
    9fe4:	str	r2, [sp, #20]
    9fe8:	add	r6, sp, #2080	; 0x820
    9fec:	str	fp, [sp, #24]
    9ff0:	mov	fp, r3
    9ff4:	ldr	r3, [r9]
    9ff8:	mov	r2, #256	; 0x100
    9ffc:	ldr	r1, [sp, #4]
    a000:	ldr	r4, [sp, #20]
    a004:	mov	r0, r4
    a008:	bl	1520 <fread@plt>
    a00c:	add	r8, r8, r0
    a010:	str	r8, [sp, #12]
    a014:	str	r4, [sp, #16]
    a018:	mov	r5, sl
    a01c:	ldrd	r0, [r4], #8
    a020:	bl	4f0a8 <__aeabi_d2ulz>
    a024:	strd	r0, [r5, #8]!
    a028:	cmp	r4, r6
    a02c:	bne	a01c <ReadUInt64Data+0x244>
    a030:	add	r7, r7, #256	; 0x100
    a034:	add	sl, sl, #2048	; 0x800
    a038:	cmp	r7, fp
    a03c:	blt	9ff4 <ReadUInt64Data+0x21c>
    a040:	ldr	fp, [sp, #24]
    a044:	sub	r3, fp, #256	; 0x100
    a048:	sub	r3, r3, #1
    a04c:	bic	r3, r3, #255	; 0xff
    a050:	add	r4, r3, #256	; 0x100
    a054:	cmp	fp, r4
    a058:	ble	ae48 <ReadUInt64Data+0x1070>
    a05c:	sub	fp, fp, r4
    a060:	ldr	r3, [r9]
    a064:	mov	r2, fp
    a068:	ldr	r1, [sp, #4]
    a06c:	add	r0, sp, #32
    a070:	bl	1520 <fread@plt>
    a074:	ldr	r3, [sp, #12]
    a078:	add	r8, r3, r0
    a07c:	cmp	fp, #0
    a080:	ble	ae48 <ReadUInt64Data+0x1070>
    a084:	ldr	r3, [sp, #8]
    a088:	add	r6, r3, r4, lsl #3
    a08c:	add	r4, fp, r4
    a090:	add	r4, r3, r4, lsl #3
    a094:	ldr	r5, [sp, #16]
    a098:	ldrd	r0, [r5], #8
    a09c:	bl	4f0a8 <__aeabi_d2ulz>
    a0a0:	strd	r0, [r6], #8
    a0a4:	cmp	r6, r4
    a0a8:	bne	a098 <ReadUInt64Data+0x2c0>
    a0ac:	b	ae48 <ReadUInt64Data+0x1070>
    a0b0:	ldr	r3, [r9]
    a0b4:	mov	r2, fp
    a0b8:	ldr	r1, [sp, #4]
    a0bc:	add	r0, sp, #32
    a0c0:	bl	1520 <fread@plt>
    a0c4:	mov	r8, r0
    a0c8:	cmp	fp, #0
    a0cc:	ble	ae48 <ReadUInt64Data+0x1070>
    a0d0:	add	r5, sp, #32
    a0d4:	ldr	r3, [sp, #8]
    a0d8:	mov	r4, r3
    a0dc:	add	fp, r3, fp, lsl #3
    a0e0:	ldrd	r0, [r5], #8
    a0e4:	bl	4f0a8 <__aeabi_d2ulz>
    a0e8:	strd	r0, [r4], #8
    a0ec:	cmp	r4, fp
    a0f0:	bne	a0e0 <ReadUInt64Data+0x308>
    a0f4:	b	ae48 <ReadUInt64Data+0x1070>
    a0f8:	ldr	r8, [r9, #20]
    a0fc:	cmp	r8, #0
    a100:	beq	a25c <ReadUInt64Data+0x484>
    a104:	cmp	fp, #256	; 0x100
    a108:	ble	a208 <ReadUInt64Data+0x430>
    a10c:	sub	r3, fp, #256	; 0x100
    a110:	ldr	r2, [sp, #8]
    a114:	sub	sl, r2, #8
    a118:	mov	r7, #0
    a11c:	mov	r8, r7
    a120:	add	r2, sp, #32
    a124:	str	r2, [sp, #20]
    a128:	add	r6, sp, #1056	; 0x420
    a12c:	str	fp, [sp, #24]
    a130:	mov	fp, r3
    a134:	ldr	r3, [r9]
    a138:	mov	r2, #256	; 0x100
    a13c:	ldr	r1, [sp, #4]
    a140:	ldr	r4, [sp, #20]
    a144:	mov	r0, r4
    a148:	bl	1520 <fread@plt>
    a14c:	add	r8, r8, r0
    a150:	str	r8, [sp, #12]
    a154:	str	r4, [sp, #16]
    a158:	mov	r5, sl
    a15c:	mov	r0, r4
    a160:	bl	1944 <Mat_floatSwap>
    a164:	vmov	r0, s0
    a168:	bl	4f068 <__aeabi_f2ulz>
    a16c:	strd	r0, [r5, #8]!
    a170:	add	r4, r4, #4
    a174:	cmp	r4, r6
    a178:	bne	a15c <ReadUInt64Data+0x384>
    a17c:	add	r7, r7, #256	; 0x100
    a180:	add	sl, sl, #2048	; 0x800
    a184:	cmp	r7, fp
    a188:	blt	a134 <ReadUInt64Data+0x35c>
    a18c:	ldr	fp, [sp, #24]
    a190:	sub	r3, fp, #256	; 0x100
    a194:	sub	r3, r3, #1
    a198:	bic	r3, r3, #255	; 0xff
    a19c:	add	r4, r3, #256	; 0x100
    a1a0:	cmp	fp, r4
    a1a4:	ble	ae48 <ReadUInt64Data+0x1070>
    a1a8:	sub	fp, fp, r4
    a1ac:	ldr	r3, [r9]
    a1b0:	mov	r2, fp
    a1b4:	ldr	r1, [sp, #4]
    a1b8:	add	r0, sp, #32
    a1bc:	bl	1520 <fread@plt>
    a1c0:	ldr	r3, [sp, #12]
    a1c4:	add	r8, r3, r0
    a1c8:	cmp	fp, #0
    a1cc:	ble	ae48 <ReadUInt64Data+0x1070>
    a1d0:	ldr	r3, [sp, #8]
    a1d4:	add	r6, r3, r4, lsl #3
    a1d8:	add	r4, fp, r4
    a1dc:	add	r4, r3, r4, lsl #3
    a1e0:	ldr	r5, [sp, #16]
    a1e4:	mov	r0, r5
    a1e8:	bl	1944 <Mat_floatSwap>
    a1ec:	vmov	r0, s0
    a1f0:	bl	4f068 <__aeabi_f2ulz>
    a1f4:	strd	r0, [r6], #8
    a1f8:	add	r5, r5, #4
    a1fc:	cmp	r6, r4
    a200:	bne	a1e4 <ReadUInt64Data+0x40c>
    a204:	b	ae48 <ReadUInt64Data+0x1070>
    a208:	ldr	r3, [r9]
    a20c:	mov	r2, fp
    a210:	ldr	r1, [sp, #4]
    a214:	add	r0, sp, #32
    a218:	bl	1520 <fread@plt>
    a21c:	mov	r8, r0
    a220:	cmp	fp, #0
    a224:	ble	ae48 <ReadUInt64Data+0x1070>
    a228:	add	r5, sp, #32
    a22c:	ldr	r3, [sp, #8]
    a230:	mov	r4, r3
    a234:	add	fp, r3, fp, lsl #3
    a238:	mov	r0, r5
    a23c:	bl	1944 <Mat_floatSwap>
    a240:	vmov	r0, s0
    a244:	bl	4f068 <__aeabi_f2ulz>
    a248:	strd	r0, [r4], #8
    a24c:	add	r5, r5, #4
    a250:	cmp	r4, fp
    a254:	bne	a238 <ReadUInt64Data+0x460>
    a258:	b	ae48 <ReadUInt64Data+0x1070>
    a25c:	cmp	fp, #256	; 0x100
    a260:	ble	a344 <ReadUInt64Data+0x56c>
    a264:	sub	r3, fp, #256	; 0x100
    a268:	ldr	r2, [sp, #8]
    a26c:	sub	sl, r2, #8
    a270:	mov	r7, r8
    a274:	add	r2, sp, #32
    a278:	str	r2, [sp, #20]
    a27c:	add	r6, sp, #1056	; 0x420
    a280:	str	fp, [sp, #24]
    a284:	mov	fp, r3
    a288:	ldr	r3, [r9]
    a28c:	mov	r2, #256	; 0x100
    a290:	ldr	r1, [sp, #4]
    a294:	ldr	r4, [sp, #20]
    a298:	mov	r0, r4
    a29c:	bl	1520 <fread@plt>
    a2a0:	add	r8, r8, r0
    a2a4:	str	r8, [sp, #12]
    a2a8:	str	r4, [sp, #16]
    a2ac:	mov	r5, sl
    a2b0:	ldr	r0, [r4], #4
    a2b4:	bl	4f068 <__aeabi_f2ulz>
    a2b8:	strd	r0, [r5, #8]!
    a2bc:	cmp	r4, r6
    a2c0:	bne	a2b0 <ReadUInt64Data+0x4d8>
    a2c4:	add	r7, r7, #256	; 0x100
    a2c8:	add	sl, sl, #2048	; 0x800
    a2cc:	cmp	r7, fp
    a2d0:	blt	a288 <ReadUInt64Data+0x4b0>
    a2d4:	ldr	fp, [sp, #24]
    a2d8:	sub	r3, fp, #256	; 0x100
    a2dc:	sub	r3, r3, #1
    a2e0:	bic	r3, r3, #255	; 0xff
    a2e4:	add	r4, r3, #256	; 0x100
    a2e8:	cmp	fp, r4
    a2ec:	ble	ae48 <ReadUInt64Data+0x1070>
    a2f0:	sub	fp, fp, r4
    a2f4:	ldr	r3, [r9]
    a2f8:	mov	r2, fp
    a2fc:	ldr	r1, [sp, #4]
    a300:	add	r0, sp, #32
    a304:	bl	1520 <fread@plt>
    a308:	ldr	r3, [sp, #12]
    a30c:	add	r8, r3, r0
    a310:	cmp	fp, #0
    a314:	ble	ae48 <ReadUInt64Data+0x1070>
    a318:	ldr	r3, [sp, #8]
    a31c:	add	r6, r3, r4, lsl #3
    a320:	add	r4, fp, r4
    a324:	add	r4, r3, r4, lsl #3
    a328:	ldr	r5, [sp, #16]
    a32c:	ldr	r0, [r5], #4
    a330:	bl	4f068 <__aeabi_f2ulz>
    a334:	strd	r0, [r6], #8
    a338:	cmp	r6, r4
    a33c:	bne	a32c <ReadUInt64Data+0x554>
    a340:	b	ae48 <ReadUInt64Data+0x1070>
    a344:	ldr	r3, [r9]
    a348:	mov	r2, fp
    a34c:	ldr	r1, [sp, #4]
    a350:	add	r0, sp, #32
    a354:	bl	1520 <fread@plt>
    a358:	mov	r8, r0
    a35c:	cmp	fp, #0
    a360:	ble	ae48 <ReadUInt64Data+0x1070>
    a364:	add	r5, sp, #32
    a368:	ldr	r3, [sp, #8]
    a36c:	mov	r4, r3
    a370:	add	fp, r3, fp, lsl #3
    a374:	ldr	r0, [r5], #4
    a378:	bl	4f068 <__aeabi_f2ulz>
    a37c:	strd	r0, [r4], #8
    a380:	cmp	r4, fp
    a384:	bne	a374 <ReadUInt64Data+0x59c>
    a388:	b	ae48 <ReadUInt64Data+0x1070>
    a38c:	ldr	r8, [r9, #20]
    a390:	cmp	r8, #0
    a394:	beq	a4e4 <ReadUInt64Data+0x70c>
    a398:	cmp	fp, #256	; 0x100
    a39c:	ble	a494 <ReadUInt64Data+0x6bc>
    a3a0:	sub	r3, fp, #256	; 0x100
    a3a4:	ldr	r2, [sp, #8]
    a3a8:	sub	sl, r2, #8
    a3ac:	mov	r7, #0
    a3b0:	mov	r8, r7
    a3b4:	add	r2, sp, #32
    a3b8:	str	r2, [sp, #20]
    a3bc:	add	r6, sp, #1056	; 0x420
    a3c0:	str	fp, [sp, #24]
    a3c4:	mov	fp, r3
    a3c8:	ldr	r3, [r9]
    a3cc:	mov	r2, #256	; 0x100
    a3d0:	ldr	r1, [sp, #4]
    a3d4:	ldr	r4, [sp, #20]
    a3d8:	mov	r0, r4
    a3dc:	bl	1520 <fread@plt>
    a3e0:	add	r8, r8, r0
    a3e4:	str	r8, [sp, #12]
    a3e8:	str	r4, [sp, #16]
    a3ec:	mov	r5, sl
    a3f0:	mov	r0, r4
    a3f4:	bl	18a4 <Mat_int32Swap>
    a3f8:	asr	r1, r0, #31
    a3fc:	strd	r0, [r5, #8]!
    a400:	add	r4, r4, #4
    a404:	cmp	r4, r6
    a408:	bne	a3f0 <ReadUInt64Data+0x618>
    a40c:	add	r7, r7, #256	; 0x100
    a410:	add	sl, sl, #2048	; 0x800
    a414:	cmp	r7, fp
    a418:	blt	a3c8 <ReadUInt64Data+0x5f0>
    a41c:	ldr	fp, [sp, #24]
    a420:	sub	r3, fp, #256	; 0x100
    a424:	sub	r3, r3, #1
    a428:	bic	r3, r3, #255	; 0xff
    a42c:	add	r4, r3, #256	; 0x100
    a430:	cmp	fp, r4
    a434:	ble	ae48 <ReadUInt64Data+0x1070>
    a438:	sub	fp, fp, r4
    a43c:	ldr	r3, [r9]
    a440:	mov	r2, fp
    a444:	ldr	r1, [sp, #4]
    a448:	add	r0, sp, #32
    a44c:	bl	1520 <fread@plt>
    a450:	ldr	r3, [sp, #12]
    a454:	add	r8, r3, r0
    a458:	cmp	fp, #0
    a45c:	ble	ae48 <ReadUInt64Data+0x1070>
    a460:	ldr	r3, [sp, #8]
    a464:	add	r6, r3, r4, lsl #3
    a468:	add	r4, fp, r4
    a46c:	add	r4, r3, r4, lsl #3
    a470:	ldr	r5, [sp, #16]
    a474:	mov	r0, r5
    a478:	bl	18a4 <Mat_int32Swap>
    a47c:	asr	r1, r0, #31
    a480:	strd	r0, [r6], #8
    a484:	add	r5, r5, #4
    a488:	cmp	r6, r4
    a48c:	bne	a474 <ReadUInt64Data+0x69c>
    a490:	b	ae48 <ReadUInt64Data+0x1070>
    a494:	ldr	r3, [r9]
    a498:	mov	r2, fp
    a49c:	ldr	r1, [sp, #4]
    a4a0:	add	r0, sp, #32
    a4a4:	bl	1520 <fread@plt>
    a4a8:	mov	r8, r0
    a4ac:	cmp	fp, #0
    a4b0:	ble	ae48 <ReadUInt64Data+0x1070>
    a4b4:	add	r5, sp, #32
    a4b8:	ldr	r3, [sp, #8]
    a4bc:	mov	r4, r3
    a4c0:	add	fp, r3, fp, lsl #3
    a4c4:	mov	r0, r5
    a4c8:	bl	18a4 <Mat_int32Swap>
    a4cc:	asr	r1, r0, #31
    a4d0:	strd	r0, [r4], #8
    a4d4:	add	r5, r5, #4
    a4d8:	cmp	r4, fp
    a4dc:	bne	a4c4 <ReadUInt64Data+0x6ec>
    a4e0:	b	ae48 <ReadUInt64Data+0x1070>
    a4e4:	cmp	fp, #256	; 0x100
    a4e8:	ble	a5bc <ReadUInt64Data+0x7e4>
    a4ec:	sub	r7, fp, #256	; 0x100
    a4f0:	ldr	r3, [sp, #8]
    a4f4:	sub	r6, r3, #8
    a4f8:	mov	r5, r8
    a4fc:	add	sl, sp, #32
    a500:	add	r4, sl, #1020	; 0x3fc
    a504:	ldr	r3, [r9]
    a508:	mov	r2, #256	; 0x100
    a50c:	ldr	r1, [sp, #4]
    a510:	mov	r0, sl
    a514:	bl	1520 <fread@plt>
    a518:	add	r8, r8, r0
    a51c:	str	r8, [sp, #12]
    a520:	sub	ip, sl, #4
    a524:	mov	r0, r6
    a528:	mov	r1, ip
    a52c:	ldr	r2, [r1, #4]!
    a530:	asr	r3, r2, #31
    a534:	strd	r2, [r0, #8]!
    a538:	cmp	r1, r4
    a53c:	bne	a52c <ReadUInt64Data+0x754>
    a540:	add	r5, r5, #256	; 0x100
    a544:	add	r6, r6, #2048	; 0x800
    a548:	cmp	r5, r7
    a54c:	blt	a504 <ReadUInt64Data+0x72c>
    a550:	mov	r7, ip
    a554:	sub	r3, fp, #256	; 0x100
    a558:	sub	r3, r3, #1
    a55c:	bic	r3, r3, #255	; 0xff
    a560:	add	r4, r3, #256	; 0x100
    a564:	cmp	fp, r4
    a568:	ble	ae48 <ReadUInt64Data+0x1070>
    a56c:	sub	fp, fp, r4
    a570:	ldr	r3, [r9]
    a574:	mov	r2, fp
    a578:	ldr	r1, [sp, #4]
    a57c:	add	r0, sp, #32
    a580:	bl	1520 <fread@plt>
    a584:	ldr	r3, [sp, #12]
    a588:	add	r8, r3, r0
    a58c:	cmp	fp, #0
    a590:	ble	ae48 <ReadUInt64Data+0x1070>
    a594:	ldr	r1, [sp, #8]
    a598:	add	r2, r1, r4, lsl #3
    a59c:	add	r3, fp, r4
    a5a0:	add	r3, r1, r3, lsl #3
    a5a4:	ldr	r0, [r7, #4]!
    a5a8:	asr	r1, r0, #31
    a5ac:	strd	r0, [r2], #8
    a5b0:	cmp	r2, r3
    a5b4:	bne	a5a4 <ReadUInt64Data+0x7cc>
    a5b8:	b	ae48 <ReadUInt64Data+0x1070>
    a5bc:	ldr	r3, [r9]
    a5c0:	mov	r2, fp
    a5c4:	ldr	r1, [sp, #4]
    a5c8:	add	r0, sp, #32
    a5cc:	bl	1520 <fread@plt>
    a5d0:	mov	r8, r0
    a5d4:	cmp	fp, #0
    a5d8:	ble	ae48 <ReadUInt64Data+0x1070>
    a5dc:	add	r0, sp, #28
    a5e0:	ldr	r3, [sp, #8]
    a5e4:	mov	r1, r3
    a5e8:	add	ip, r3, fp, lsl #3
    a5ec:	ldr	r2, [r0, #4]!
    a5f0:	asr	r3, r2, #31
    a5f4:	strd	r2, [r1], #8
    a5f8:	cmp	r1, ip
    a5fc:	bne	a5ec <ReadUInt64Data+0x814>
    a600:	b	ae48 <ReadUInt64Data+0x1070>
    a604:	ldr	r8, [r9, #20]
    a608:	cmp	r8, #0
    a60c:	beq	a778 <ReadUInt64Data+0x9a0>
    a610:	cmp	fp, #256	; 0x100
    a614:	ble	a720 <ReadUInt64Data+0x948>
    a618:	sub	r3, fp, #256	; 0x100
    a61c:	str	r3, [sp, #16]
    a620:	ldr	r3, [sp, #8]
    a624:	sub	r3, r3, #8
    a628:	mov	sl, #0
    a62c:	mov	r8, sl
    a630:	add	r2, sp, #32
    a634:	str	r2, [sp, #24]
    a638:	add	r7, sp, #1056	; 0x420
    a63c:	str	fp, [sp, #28]
    a640:	mov	fp, r3
    a644:	ldr	r3, [r9]
    a648:	mov	r2, #256	; 0x100
    a64c:	ldr	r1, [sp, #4]
    a650:	ldr	r4, [sp, #24]
    a654:	mov	r0, r4
    a658:	bl	1520 <fread@plt>
    a65c:	add	r8, r8, r0
    a660:	str	r8, [sp, #12]
    a664:	str	r4, [sp, #20]
    a668:	mov	r5, fp
    a66c:	mov	r6, #0
    a670:	mov	r0, r4
    a674:	bl	18d4 <Mat_uint32Swap>
    a678:	str	r0, [r5, #8]!
    a67c:	str	r6, [r5, #4]
    a680:	add	r4, r4, #4
    a684:	cmp	r4, r7
    a688:	bne	a670 <ReadUInt64Data+0x898>
    a68c:	add	sl, sl, #256	; 0x100
    a690:	add	fp, fp, #2048	; 0x800
    a694:	ldr	r3, [sp, #16]
    a698:	cmp	sl, r3
    a69c:	blt	a644 <ReadUInt64Data+0x86c>
    a6a0:	ldr	fp, [sp, #28]
    a6a4:	sub	r3, fp, #256	; 0x100
    a6a8:	sub	r3, r3, #1
    a6ac:	bic	r3, r3, #255	; 0xff
    a6b0:	add	r4, r3, #256	; 0x100
    a6b4:	cmp	fp, r4
    a6b8:	ble	ae48 <ReadUInt64Data+0x1070>
    a6bc:	sub	fp, fp, r4
    a6c0:	ldr	r3, [r9]
    a6c4:	mov	r2, fp
    a6c8:	ldr	r1, [sp, #4]
    a6cc:	add	r0, sp, #32
    a6d0:	bl	1520 <fread@plt>
    a6d4:	ldr	r3, [sp, #12]
    a6d8:	add	r8, r3, r0
    a6dc:	cmp	fp, #0
    a6e0:	ble	ae48 <ReadUInt64Data+0x1070>
    a6e4:	ldr	r3, [sp, #8]
    a6e8:	add	r6, r3, r4, lsl #3
    a6ec:	add	r4, fp, r4
    a6f0:	add	r4, r3, r4, lsl #3
    a6f4:	mov	r5, #0
    a6f8:	ldr	r7, [sp, #20]
    a6fc:	mov	r0, r7
    a700:	bl	18d4 <Mat_uint32Swap>
    a704:	str	r0, [r6]
    a708:	str	r5, [r6, #4]
    a70c:	add	r6, r6, #8
    a710:	add	r7, r7, #4
    a714:	cmp	r6, r4
    a718:	bne	a6fc <ReadUInt64Data+0x924>
    a71c:	b	ae48 <ReadUInt64Data+0x1070>
    a720:	ldr	r3, [r9]
    a724:	mov	r2, fp
    a728:	ldr	r1, [sp, #4]
    a72c:	add	r0, sp, #32
    a730:	bl	1520 <fread@plt>
    a734:	mov	r8, r0
    a738:	cmp	fp, #0
    a73c:	ble	ae48 <ReadUInt64Data+0x1070>
    a740:	add	r5, sp, #32
    a744:	ldr	r3, [sp, #8]
    a748:	mov	r4, r3
    a74c:	add	fp, r3, fp, lsl #3
    a750:	mov	r6, #0
    a754:	mov	r0, r5
    a758:	bl	18d4 <Mat_uint32Swap>
    a75c:	str	r0, [r4]
    a760:	str	r6, [r4, #4]
    a764:	add	r4, r4, #8
    a768:	add	r5, r5, #4
    a76c:	cmp	r4, fp
    a770:	bne	a754 <ReadUInt64Data+0x97c>
    a774:	b	ae48 <ReadUInt64Data+0x1070>
    a778:	cmp	fp, #256	; 0x100
    a77c:	ble	a85c <ReadUInt64Data+0xa84>
    a780:	sub	r7, fp, #256	; 0x100
    a784:	ldr	r3, [sp, #8]
    a788:	sub	r6, r3, #8
    a78c:	mov	r5, r8
    a790:	add	sl, sp, #32
    a794:	add	r4, sl, #1020	; 0x3fc
    a798:	ldr	r3, [r9]
    a79c:	mov	r2, #256	; 0x100
    a7a0:	ldr	r1, [sp, #4]
    a7a4:	mov	r0, sl
    a7a8:	bl	1520 <fread@plt>
    a7ac:	add	r8, r8, r0
    a7b0:	str	r8, [sp, #12]
    a7b4:	sub	ip, sl, #4
    a7b8:	mov	r2, r6
    a7bc:	mov	r3, ip
    a7c0:	mov	r0, #0
    a7c4:	ldr	r1, [r3, #4]!
    a7c8:	str	r1, [r2, #8]!
    a7cc:	str	r0, [r2, #4]
    a7d0:	cmp	r3, r4
    a7d4:	bne	a7c4 <ReadUInt64Data+0x9ec>
    a7d8:	add	r5, r5, #256	; 0x100
    a7dc:	add	r6, r6, #2048	; 0x800
    a7e0:	cmp	r5, r7
    a7e4:	blt	a798 <ReadUInt64Data+0x9c0>
    a7e8:	mov	r7, ip
    a7ec:	sub	r3, fp, #256	; 0x100
    a7f0:	sub	r3, r3, #1
    a7f4:	bic	r3, r3, #255	; 0xff
    a7f8:	add	r4, r3, #256	; 0x100
    a7fc:	cmp	fp, r4
    a800:	ble	ae48 <ReadUInt64Data+0x1070>
    a804:	sub	fp, fp, r4
    a808:	ldr	r3, [r9]
    a80c:	mov	r2, fp
    a810:	ldr	r1, [sp, #4]
    a814:	add	r0, sp, #32
    a818:	bl	1520 <fread@plt>
    a81c:	ldr	r3, [sp, #12]
    a820:	add	r8, r3, r0
    a824:	cmp	fp, #0
    a828:	ble	ae48 <ReadUInt64Data+0x1070>
    a82c:	ldr	r1, [sp, #8]
    a830:	add	r2, r1, r4, lsl #3
    a834:	add	r3, fp, r4
    a838:	add	r3, r1, r3, lsl #3
    a83c:	mov	r1, #0
    a840:	ldr	r0, [r7, #4]!
    a844:	str	r0, [r2]
    a848:	str	r1, [r2, #4]
    a84c:	add	r2, r2, #8
    a850:	cmp	r2, r3
    a854:	bne	a840 <ReadUInt64Data+0xa68>
    a858:	b	ae48 <ReadUInt64Data+0x1070>
    a85c:	ldr	r3, [r9]
    a860:	mov	r2, fp
    a864:	ldr	r1, [sp, #4]
    a868:	add	r0, sp, #32
    a86c:	bl	1520 <fread@plt>
    a870:	mov	r8, r0
    a874:	cmp	fp, #0
    a878:	ble	ae48 <ReadUInt64Data+0x1070>
    a87c:	add	r2, sp, #28
    a880:	ldr	r1, [sp, #8]
    a884:	mov	r3, r1
    a888:	add	ip, r1, fp, lsl #3
    a88c:	mov	r0, #0
    a890:	ldr	r1, [r2, #4]!
    a894:	str	r1, [r3]
    a898:	str	r0, [r3, #4]
    a89c:	add	r3, r3, #8
    a8a0:	cmp	r3, ip
    a8a4:	bne	a890 <ReadUInt64Data+0xab8>
    a8a8:	b	ae48 <ReadUInt64Data+0x1070>
    a8ac:	ldr	r8, [r9, #20]
    a8b0:	cmp	r8, #0
    a8b4:	beq	aa10 <ReadUInt64Data+0xc38>
    a8b8:	cmp	fp, #256	; 0x100
    a8bc:	ble	a9bc <ReadUInt64Data+0xbe4>
    a8c0:	sub	r3, fp, #256	; 0x100
    a8c4:	ldr	r2, [sp, #8]
    a8c8:	sub	sl, r2, #8
    a8cc:	mov	r7, #0
    a8d0:	mov	r8, r7
    a8d4:	add	r2, sp, #32
    a8d8:	str	r2, [sp, #20]
    a8dc:	add	r6, sp, #544	; 0x220
    a8e0:	str	fp, [sp, #24]
    a8e4:	mov	fp, r3
    a8e8:	ldr	r3, [r9]
    a8ec:	mov	r2, #256	; 0x100
    a8f0:	ldr	r1, [sp, #4]
    a8f4:	ldr	r4, [sp, #20]
    a8f8:	mov	r0, r4
    a8fc:	bl	1520 <fread@plt>
    a900:	add	r8, r8, r0
    a904:	str	r8, [sp, #12]
    a908:	str	r4, [sp, #16]
    a90c:	mov	r5, sl
    a910:	mov	r0, r4
    a914:	bl	1904 <Mat_int16Swap>
    a918:	sxth	r0, r0
    a91c:	asr	r1, r0, #31
    a920:	strd	r0, [r5, #8]!
    a924:	add	r4, r4, #2
    a928:	cmp	r4, r6
    a92c:	bne	a910 <ReadUInt64Data+0xb38>
    a930:	add	r7, r7, #256	; 0x100
    a934:	add	sl, sl, #2048	; 0x800
    a938:	cmp	r7, fp
    a93c:	blt	a8e8 <ReadUInt64Data+0xb10>
    a940:	ldr	fp, [sp, #24]
    a944:	sub	r3, fp, #256	; 0x100
    a948:	sub	r3, r3, #1
    a94c:	bic	r3, r3, #255	; 0xff
    a950:	add	r4, r3, #256	; 0x100
    a954:	cmp	fp, r4
    a958:	ble	ae48 <ReadUInt64Data+0x1070>
    a95c:	sub	fp, fp, r4
    a960:	ldr	r3, [r9]
    a964:	mov	r2, fp
    a968:	ldr	r1, [sp, #4]
    a96c:	add	r0, sp, #32
    a970:	bl	1520 <fread@plt>
    a974:	ldr	r3, [sp, #12]
    a978:	add	r8, r3, r0
    a97c:	cmp	fp, #0
    a980:	ble	ae48 <ReadUInt64Data+0x1070>
    a984:	ldr	r3, [sp, #8]
    a988:	add	r6, r3, r4, lsl #3
    a98c:	add	r4, fp, r4
    a990:	add	r4, r3, r4, lsl #3
    a994:	ldr	r5, [sp, #16]
    a998:	mov	r0, r5
    a99c:	bl	1904 <Mat_int16Swap>
    a9a0:	sxth	r0, r0
    a9a4:	asr	r1, r0, #31
    a9a8:	strd	r0, [r6], #8
    a9ac:	add	r5, r5, #2
    a9b0:	cmp	r6, r4
    a9b4:	bne	a998 <ReadUInt64Data+0xbc0>
    a9b8:	b	ae48 <ReadUInt64Data+0x1070>
    a9bc:	ldr	r3, [r9]
    a9c0:	mov	r2, fp
    a9c4:	ldr	r1, [sp, #4]
    a9c8:	add	r0, sp, #32
    a9cc:	bl	1520 <fread@plt>
    a9d0:	mov	r8, r0
    a9d4:	cmp	fp, #0
    a9d8:	ble	ae48 <ReadUInt64Data+0x1070>
    a9dc:	add	r5, sp, #32
    a9e0:	ldr	r3, [sp, #8]
    a9e4:	mov	r4, r3
    a9e8:	add	fp, r3, fp, lsl #3
    a9ec:	mov	r0, r5
    a9f0:	bl	1904 <Mat_int16Swap>
    a9f4:	sxth	r0, r0
    a9f8:	asr	r1, r0, #31
    a9fc:	strd	r0, [r4], #8
    aa00:	add	r5, r5, #2
    aa04:	cmp	r4, fp
    aa08:	bne	a9ec <ReadUInt64Data+0xc14>
    aa0c:	b	ae48 <ReadUInt64Data+0x1070>
    aa10:	cmp	fp, #256	; 0x100
    aa14:	ble	aaec <ReadUInt64Data+0xd14>
    aa18:	sub	r7, fp, #256	; 0x100
    aa1c:	ldr	r3, [sp, #8]
    aa20:	sub	r6, r3, #8
    aa24:	mov	r5, r8
    aa28:	add	sl, sp, #32
    aa2c:	add	r4, sl, #508	; 0x1fc
    aa30:	add	r4, r4, #2
    aa34:	ldr	r3, [r9]
    aa38:	mov	r2, #256	; 0x100
    aa3c:	ldr	r1, [sp, #4]
    aa40:	mov	r0, sl
    aa44:	bl	1520 <fread@plt>
    aa48:	add	r8, r8, r0
    aa4c:	str	r8, [sp, #12]
    aa50:	sub	ip, sl, #2
    aa54:	mov	r2, r6
    aa58:	mov	r3, ip
    aa5c:	ldrsh	r0, [r3, #2]!
    aa60:	asr	r1, r0, #31
    aa64:	strd	r0, [r2, #8]!
    aa68:	cmp	r3, r4
    aa6c:	bne	aa5c <ReadUInt64Data+0xc84>
    aa70:	add	r5, r5, #256	; 0x100
    aa74:	add	r6, r6, #2048	; 0x800
    aa78:	cmp	r5, r7
    aa7c:	blt	aa34 <ReadUInt64Data+0xc5c>
    aa80:	mov	r7, ip
    aa84:	sub	r3, fp, #256	; 0x100
    aa88:	sub	r3, r3, #1
    aa8c:	bic	r3, r3, #255	; 0xff
    aa90:	add	r4, r3, #256	; 0x100
    aa94:	cmp	fp, r4
    aa98:	ble	ae48 <ReadUInt64Data+0x1070>
    aa9c:	sub	fp, fp, r4
    aaa0:	ldr	r3, [r9]
    aaa4:	mov	r2, fp
    aaa8:	ldr	r1, [sp, #4]
    aaac:	add	r0, sp, #32
    aab0:	bl	1520 <fread@plt>
    aab4:	ldr	r3, [sp, #12]
    aab8:	add	r8, r3, r0
    aabc:	cmp	fp, #0
    aac0:	ble	ae48 <ReadUInt64Data+0x1070>
    aac4:	ldr	r1, [sp, #8]
    aac8:	add	r2, r1, r4, lsl #3
    aacc:	add	r3, fp, r4
    aad0:	add	r3, r1, r3, lsl #3
    aad4:	ldrsh	r0, [r7, #2]!
    aad8:	asr	r1, r0, #31
    aadc:	strd	r0, [r2], #8
    aae0:	cmp	r2, r3
    aae4:	bne	aad4 <ReadUInt64Data+0xcfc>
    aae8:	b	ae48 <ReadUInt64Data+0x1070>
    aaec:	ldr	r3, [r9]
    aaf0:	mov	r2, fp
    aaf4:	ldr	r1, [sp, #4]
    aaf8:	add	r0, sp, #32
    aafc:	bl	1520 <fread@plt>
    ab00:	mov	r8, r0
    ab04:	cmp	fp, #0
    ab08:	ble	ae48 <ReadUInt64Data+0x1070>
    ab0c:	add	r2, sp, #30
    ab10:	ldr	r1, [sp, #8]
    ab14:	mov	r3, r1
    ab18:	add	ip, r1, fp, lsl #3
    ab1c:	ldrsh	r0, [r2, #2]!
    ab20:	asr	r1, r0, #31
    ab24:	strd	r0, [r3], #8
    ab28:	cmp	r3, ip
    ab2c:	bne	ab1c <ReadUInt64Data+0xd44>
    ab30:	b	ae48 <ReadUInt64Data+0x1070>
    ab34:	ldr	r8, [r9, #20]
    ab38:	cmp	r8, #0
    ab3c:	beq	ac98 <ReadUInt64Data+0xec0>
    ab40:	cmp	fp, #256	; 0x100
    ab44:	ble	ac44 <ReadUInt64Data+0xe6c>
    ab48:	sub	r3, fp, #256	; 0x100
    ab4c:	ldr	r2, [sp, #8]
    ab50:	sub	sl, r2, #8
    ab54:	mov	r7, #0
    ab58:	mov	r8, r7
    ab5c:	add	r2, sp, #32
    ab60:	str	r2, [sp, #20]
    ab64:	add	r6, sp, #544	; 0x220
    ab68:	str	fp, [sp, #24]
    ab6c:	mov	fp, r3
    ab70:	ldr	r3, [r9]
    ab74:	mov	r2, #256	; 0x100
    ab78:	ldr	r1, [sp, #4]
    ab7c:	ldr	r4, [sp, #20]
    ab80:	mov	r0, r4
    ab84:	bl	1520 <fread@plt>
    ab88:	add	r8, r8, r0
    ab8c:	str	r8, [sp, #12]
    ab90:	str	r4, [sp, #16]
    ab94:	mov	r5, sl
    ab98:	mov	r0, r4
    ab9c:	bl	1924 <Mat_uint16Swap>
    aba0:	uxth	r0, r0
    aba4:	mov	r1, #0
    aba8:	strd	r0, [r5, #8]!
    abac:	add	r4, r4, #2
    abb0:	cmp	r4, r6
    abb4:	bne	ab98 <ReadUInt64Data+0xdc0>
    abb8:	add	r7, r7, #256	; 0x100
    abbc:	add	sl, sl, #2048	; 0x800
    abc0:	cmp	r7, fp
    abc4:	blt	ab70 <ReadUInt64Data+0xd98>
    abc8:	ldr	fp, [sp, #24]
    abcc:	sub	r3, fp, #256	; 0x100
    abd0:	sub	r3, r3, #1
    abd4:	bic	r3, r3, #255	; 0xff
    abd8:	add	r4, r3, #256	; 0x100
    abdc:	cmp	fp, r4
    abe0:	ble	ae48 <ReadUInt64Data+0x1070>
    abe4:	sub	fp, fp, r4
    abe8:	ldr	r3, [r9]
    abec:	mov	r2, fp
    abf0:	ldr	r1, [sp, #4]
    abf4:	add	r0, sp, #32
    abf8:	bl	1520 <fread@plt>
    abfc:	ldr	r3, [sp, #12]
    ac00:	add	r8, r3, r0
    ac04:	cmp	fp, #0
    ac08:	ble	ae48 <ReadUInt64Data+0x1070>
    ac0c:	ldr	r3, [sp, #8]
    ac10:	add	r6, r3, r4, lsl #3
    ac14:	add	r4, fp, r4
    ac18:	add	r4, r3, r4, lsl #3
    ac1c:	ldr	r5, [sp, #16]
    ac20:	mov	r0, r5
    ac24:	bl	1924 <Mat_uint16Swap>
    ac28:	uxth	r0, r0
    ac2c:	mov	r1, #0
    ac30:	strd	r0, [r6], #8
    ac34:	add	r5, r5, #2
    ac38:	cmp	r6, r4
    ac3c:	bne	ac20 <ReadUInt64Data+0xe48>
    ac40:	b	ae48 <ReadUInt64Data+0x1070>
    ac44:	ldr	r3, [r9]
    ac48:	mov	r2, fp
    ac4c:	ldr	r1, [sp, #4]
    ac50:	add	r0, sp, #32
    ac54:	bl	1520 <fread@plt>
    ac58:	mov	r8, r0
    ac5c:	cmp	fp, #0
    ac60:	ble	ae48 <ReadUInt64Data+0x1070>
    ac64:	add	r5, sp, #32
    ac68:	ldr	r3, [sp, #8]
    ac6c:	mov	r4, r3
    ac70:	add	fp, r3, fp, lsl #3
    ac74:	mov	r0, r5
    ac78:	bl	1924 <Mat_uint16Swap>
    ac7c:	uxth	r0, r0
    ac80:	mov	r1, #0
    ac84:	strd	r0, [r4], #8
    ac88:	add	r5, r5, #2
    ac8c:	cmp	r4, fp
    ac90:	bne	ac74 <ReadUInt64Data+0xe9c>
    ac94:	b	ae48 <ReadUInt64Data+0x1070>
    ac98:	cmp	fp, #256	; 0x100
    ac9c:	ble	ad74 <ReadUInt64Data+0xf9c>
    aca0:	sub	r7, fp, #256	; 0x100
    aca4:	ldr	r3, [sp, #8]
    aca8:	sub	r6, r3, #8
    acac:	mov	r5, r8
    acb0:	add	sl, sp, #32
    acb4:	add	r4, sl, #508	; 0x1fc
    acb8:	add	r4, r4, #2
    acbc:	ldr	r3, [r9]
    acc0:	mov	r2, #256	; 0x100
    acc4:	ldr	r1, [sp, #4]
    acc8:	mov	r0, sl
    accc:	bl	1520 <fread@plt>
    acd0:	add	r8, r8, r0
    acd4:	str	r8, [sp, #12]
    acd8:	sub	ip, sl, #2
    acdc:	mov	r2, r6
    ace0:	mov	r3, ip
    ace4:	ldrh	r0, [r3, #2]!
    ace8:	mov	r1, #0
    acec:	strd	r0, [r2, #8]!
    acf0:	cmp	r3, r4
    acf4:	bne	ace4 <ReadUInt64Data+0xf0c>
    acf8:	add	r5, r5, #256	; 0x100
    acfc:	add	r6, r6, #2048	; 0x800
    ad00:	cmp	r5, r7
    ad04:	blt	acbc <ReadUInt64Data+0xee4>
    ad08:	mov	r7, ip
    ad0c:	sub	r3, fp, #256	; 0x100
    ad10:	sub	r3, r3, #1
    ad14:	bic	r3, r3, #255	; 0xff
    ad18:	add	r4, r3, #256	; 0x100
    ad1c:	cmp	fp, r4
    ad20:	ble	ae48 <ReadUInt64Data+0x1070>
    ad24:	sub	fp, fp, r4
    ad28:	ldr	r3, [r9]
    ad2c:	mov	r2, fp
    ad30:	ldr	r1, [sp, #4]
    ad34:	add	r0, sp, #32
    ad38:	bl	1520 <fread@plt>
    ad3c:	ldr	r3, [sp, #12]
    ad40:	add	r8, r3, r0
    ad44:	cmp	fp, #0
    ad48:	ble	ae48 <ReadUInt64Data+0x1070>
    ad4c:	ldr	r1, [sp, #8]
    ad50:	add	r2, r1, r4, lsl #3
    ad54:	add	r3, fp, r4
    ad58:	add	r3, r1, r3, lsl #3
    ad5c:	ldrh	r0, [r7, #2]!
    ad60:	mov	r1, #0
    ad64:	strd	r0, [r2], #8
    ad68:	cmp	r2, r3
    ad6c:	bne	ad5c <ReadUInt64Data+0xf84>
    ad70:	b	ae48 <ReadUInt64Data+0x1070>
    ad74:	ldr	r3, [r9]
    ad78:	mov	r2, fp
    ad7c:	ldr	r1, [sp, #4]
    ad80:	add	r0, sp, #32
    ad84:	bl	1520 <fread@plt>
    ad88:	mov	r8, r0
    ad8c:	cmp	fp, #0
    ad90:	ble	ae48 <ReadUInt64Data+0x1070>
    ad94:	add	r2, sp, #30
    ad98:	ldr	r1, [sp, #8]
    ad9c:	mov	r3, r1
    ada0:	add	ip, r1, fp, lsl #3
    ada4:	ldrh	r0, [r2, #2]!
    ada8:	mov	r1, #0
    adac:	strd	r0, [r3], #8
    adb0:	cmp	r3, ip
    adb4:	bne	ada4 <ReadUInt64Data+0xfcc>
    adb8:	b	ae48 <ReadUInt64Data+0x1070>
    adbc:	cmp	fp, #256	; 0x100
    adc0:	ble	ae70 <ReadUInt64Data+0x1098>
    adc4:	sub	r7, fp, #256	; 0x100
    adc8:	ldr	r3, [sp, #8]
    adcc:	sub	r6, r3, #8
    add0:	mov	r5, #0
    add4:	mov	r8, r5
    add8:	add	sl, sp, #32
    addc:	add	r4, sl, #255	; 0xff
    ade0:	ldr	r3, [r9]
    ade4:	mov	r2, #256	; 0x100
    ade8:	ldr	r1, [sp, #4]
    adec:	mov	r0, sl
    adf0:	bl	1520 <fread@plt>
    adf4:	add	r8, r8, r0
    adf8:	str	r8, [sp, #12]
    adfc:	sub	ip, sl, #1
    ae00:	mov	r2, r6
    ae04:	mov	r3, ip
    ae08:	ldrsb	r0, [r3, #1]!
    ae0c:	asr	r1, r0, #31
    ae10:	strd	r0, [r2, #8]!
    ae14:	cmp	r3, r4
    ae18:	bne	ae08 <ReadUInt64Data+0x1030>
    ae1c:	add	r5, r5, #256	; 0x100
    ae20:	add	r6, r6, #2048	; 0x800
    ae24:	cmp	r5, r7
    ae28:	blt	ade0 <ReadUInt64Data+0x1008>
    ae2c:	mov	r7, ip
    ae30:	sub	r3, fp, #256	; 0x100
    ae34:	sub	r3, r3, #1
    ae38:	bic	r3, r3, #255	; 0xff
    ae3c:	add	r4, r3, #256	; 0x100
    ae40:	cmp	fp, r4
    ae44:	bgt	aeb8 <ReadUInt64Data+0x10e0>
    ae48:	ldr	r3, [sp, #4]
    ae4c:	mul	r0, r3, r8
    ae50:	add	sp, sp, #2080	; 0x820
    ae54:	add	sp, sp, #4
    ae58:	ldrd	r4, [sp]
    ae5c:	ldrd	r6, [sp, #8]
    ae60:	ldrd	r8, [sp, #16]
    ae64:	ldrd	sl, [sp, #24]
    ae68:	add	sp, sp, #32
    ae6c:	pop	{pc}		; (ldr pc, [sp], #4)
    ae70:	ldr	r3, [r9]
    ae74:	mov	r2, fp
    ae78:	ldr	r1, [sp, #4]
    ae7c:	add	r0, sp, #32
    ae80:	bl	1520 <fread@plt>
    ae84:	mov	r8, r0
    ae88:	cmp	fp, #0
    ae8c:	ble	ae48 <ReadUInt64Data+0x1070>
    ae90:	add	r2, sp, #31
    ae94:	ldr	r1, [sp, #8]
    ae98:	mov	r3, r1
    ae9c:	add	ip, r1, fp, lsl #3
    aea0:	ldrsb	r0, [r2, #1]!
    aea4:	asr	r1, r0, #31
    aea8:	strd	r0, [r3], #8
    aeac:	cmp	ip, r3
    aeb0:	bne	aea0 <ReadUInt64Data+0x10c8>
    aeb4:	b	ae48 <ReadUInt64Data+0x1070>
    aeb8:	sub	fp, fp, r4
    aebc:	ldr	r3, [r9]
    aec0:	mov	r2, fp
    aec4:	ldr	r1, [sp, #4]
    aec8:	add	r0, sp, #32
    aecc:	bl	1520 <fread@plt>
    aed0:	ldr	r3, [sp, #12]
    aed4:	add	r8, r3, r0
    aed8:	cmp	fp, #0
    aedc:	ble	ae48 <ReadUInt64Data+0x1070>
    aee0:	ldr	r1, [sp, #8]
    aee4:	add	r2, r1, r4, lsl #3
    aee8:	add	r3, fp, r4
    aeec:	add	r3, r1, r3, lsl #3
    aef0:	ldrsb	r0, [r7, #1]!
    aef4:	asr	r1, r0, #31
    aef8:	strd	r0, [r2], #8
    aefc:	cmp	r2, r3
    af00:	bne	aef0 <ReadUInt64Data+0x1118>
    af04:	b	ae48 <ReadUInt64Data+0x1070>
    af08:	cmp	fp, #256	; 0x100
    af0c:	ble	afe4 <ReadUInt64Data+0x120c>
    af10:	sub	r7, fp, #256	; 0x100
    af14:	ldr	r3, [sp, #8]
    af18:	sub	r6, r3, #8
    af1c:	mov	r5, #0
    af20:	mov	r8, r5
    af24:	add	sl, sp, #32
    af28:	add	r4, sl, #255	; 0xff
    af2c:	ldr	r3, [r9]
    af30:	mov	r2, #256	; 0x100
    af34:	ldr	r1, [sp, #4]
    af38:	mov	r0, sl
    af3c:	bl	1520 <fread@plt>
    af40:	add	r8, r8, r0
    af44:	str	r8, [sp, #12]
    af48:	sub	ip, sl, #1
    af4c:	mov	r2, r6
    af50:	mov	r3, ip
    af54:	ldrb	r0, [r3, #1]!
    af58:	mov	r1, #0
    af5c:	strd	r0, [r2, #8]!
    af60:	cmp	r3, r4
    af64:	bne	af54 <ReadUInt64Data+0x117c>
    af68:	add	r5, r5, #256	; 0x100
    af6c:	add	r6, r6, #2048	; 0x800
    af70:	cmp	r5, r7
    af74:	blt	af2c <ReadUInt64Data+0x1154>
    af78:	mov	r7, ip
    af7c:	sub	r3, fp, #256	; 0x100
    af80:	sub	r3, r3, #1
    af84:	bic	r3, r3, #255	; 0xff
    af88:	add	r4, r3, #256	; 0x100
    af8c:	cmp	fp, r4
    af90:	ble	ae48 <ReadUInt64Data+0x1070>
    af94:	sub	fp, fp, r4
    af98:	ldr	r3, [r9]
    af9c:	mov	r2, fp
    afa0:	ldr	r1, [sp, #4]
    afa4:	add	r0, sp, #32
    afa8:	bl	1520 <fread@plt>
    afac:	ldr	r3, [sp, #12]
    afb0:	add	r8, r3, r0
    afb4:	cmp	fp, #0
    afb8:	ble	ae48 <ReadUInt64Data+0x1070>
    afbc:	ldr	r1, [sp, #8]
    afc0:	add	r2, r1, r4, lsl #3
    afc4:	add	r3, fp, r4
    afc8:	add	r3, r1, r3, lsl #3
    afcc:	ldrb	r0, [r7, #1]!
    afd0:	mov	r1, #0
    afd4:	strd	r0, [r2], #8
    afd8:	cmp	r2, r3
    afdc:	bne	afcc <ReadUInt64Data+0x11f4>
    afe0:	b	ae48 <ReadUInt64Data+0x1070>
    afe4:	ldr	r3, [r9]
    afe8:	mov	r2, fp
    afec:	ldr	r1, [sp, #4]
    aff0:	add	r0, sp, #32
    aff4:	bl	1520 <fread@plt>
    aff8:	mov	r8, r0
    affc:	cmp	fp, #0
    b000:	ble	ae48 <ReadUInt64Data+0x1070>
    b004:	add	r2, sp, #31
    b008:	ldr	r1, [sp, #8]
    b00c:	mov	r3, r1
    b010:	add	ip, r1, fp, lsl #3
    b014:	ldrb	r0, [r2, #1]!
    b018:	mov	r1, #0
    b01c:	strd	r0, [r3], #8
    b020:	cmp	r3, ip
    b024:	bne	b014 <ReadUInt64Data+0x123c>
    b028:	b	ae48 <ReadUInt64Data+0x1070>
    b02c:	cmp	r4, #12
    b030:	beq	b13c <ReadUInt64Data+0x1364>
    b034:	cmp	r4, #13
    b038:	movne	r8, #0
    b03c:	bne	ae48 <ReadUInt64Data+0x1070>
    b040:	ldr	r8, [r9, #20]
    b044:	cmp	r8, #0
    b048:	beq	b3f0 <ReadUInt64Data+0x1618>
    b04c:	cmp	fp, #256	; 0x100
    b050:	ble	b3a4 <ReadUInt64Data+0x15cc>
    b054:	sub	r3, fp, #256	; 0x100
    b058:	str	r3, [sp, #20]
    b05c:	ldr	r3, [sp, #8]
    b060:	sub	sl, r3, #8
    b064:	mov	r7, #0
    b068:	mov	r8, r7
    b06c:	add	r3, sp, #32
    b070:	str	r3, [sp, #24]
    b074:	add	r6, sp, #2080	; 0x820
    b078:	ldr	r3, [r9]
    b07c:	mov	r2, #256	; 0x100
    b080:	ldr	r1, [sp, #4]
    b084:	ldr	r4, [sp, #24]
    b088:	mov	r0, r4
    b08c:	bl	1520 <fread@plt>
    b090:	add	r8, r8, r0
    b094:	str	r8, [sp, #12]
    b098:	str	r4, [sp, #16]
    b09c:	mov	r5, sl
    b0a0:	mov	r0, r4
    b0a4:	bl	1848 <Mat_uint64Swap>
    b0a8:	strd	r0, [r5, #8]!
    b0ac:	add	r4, r4, #8
    b0b0:	cmp	r6, r4
    b0b4:	bne	b0a0 <ReadUInt64Data+0x12c8>
    b0b8:	add	r7, r7, #256	; 0x100
    b0bc:	add	sl, sl, #2048	; 0x800
    b0c0:	ldr	r3, [sp, #20]
    b0c4:	cmp	r7, r3
    b0c8:	blt	b078 <ReadUInt64Data+0x12a0>
    b0cc:	sub	r3, fp, #256	; 0x100
    b0d0:	sub	r3, r3, #1
    b0d4:	bic	r3, r3, #255	; 0xff
    b0d8:	add	r4, r3, #256	; 0x100
    b0dc:	cmp	fp, r4
    b0e0:	ble	ae48 <ReadUInt64Data+0x1070>
    b0e4:	sub	fp, fp, r4
    b0e8:	ldr	r3, [r9]
    b0ec:	mov	r2, fp
    b0f0:	ldr	r1, [sp, #4]
    b0f4:	add	r0, sp, #32
    b0f8:	bl	1520 <fread@plt>
    b0fc:	ldr	r3, [sp, #12]
    b100:	add	r8, r3, r0
    b104:	cmp	fp, #0
    b108:	ble	ae48 <ReadUInt64Data+0x1070>
    b10c:	ldr	r3, [sp, #8]
    b110:	add	r6, r3, r4, lsl #3
    b114:	add	r4, fp, r4
    b118:	add	r4, r3, r4, lsl #3
    b11c:	ldr	r5, [sp, #16]
    b120:	mov	r0, r5
    b124:	bl	1848 <Mat_uint64Swap>
    b128:	strd	r0, [r6], #8
    b12c:	add	r5, r5, #8
    b130:	cmp	r4, r6
    b134:	bne	b120 <ReadUInt64Data+0x1348>
    b138:	b	ae48 <ReadUInt64Data+0x1070>
    b13c:	ldr	r8, [r9, #20]
    b140:	cmp	r8, #0
    b144:	beq	b284 <ReadUInt64Data+0x14ac>
    b148:	cmp	fp, #256	; 0x100
    b14c:	ble	b238 <ReadUInt64Data+0x1460>
    b150:	sub	r3, fp, #256	; 0x100
    b154:	str	r3, [sp, #20]
    b158:	ldr	r3, [sp, #8]
    b15c:	sub	sl, r3, #8
    b160:	mov	r7, #0
    b164:	mov	r8, r7
    b168:	add	r3, sp, #32
    b16c:	str	r3, [sp, #24]
    b170:	add	r6, sp, #2080	; 0x820
    b174:	ldr	r3, [r9]
    b178:	mov	r2, #256	; 0x100
    b17c:	ldr	r1, [sp, #4]
    b180:	ldr	r4, [sp, #24]
    b184:	mov	r0, r4
    b188:	bl	1520 <fread@plt>
    b18c:	add	r8, r8, r0
    b190:	str	r8, [sp, #12]
    b194:	str	r4, [sp, #16]
    b198:	mov	r5, sl
    b19c:	mov	r0, r4
    b1a0:	bl	17ec <Mat_int64Swap>
    b1a4:	strd	r0, [r5, #8]!
    b1a8:	add	r4, r4, #8
    b1ac:	cmp	r4, r6
    b1b0:	bne	b19c <ReadUInt64Data+0x13c4>
    b1b4:	add	r7, r7, #256	; 0x100
    b1b8:	add	sl, sl, #2048	; 0x800
    b1bc:	ldr	r3, [sp, #20]
    b1c0:	cmp	r7, r3
    b1c4:	blt	b174 <ReadUInt64Data+0x139c>
    b1c8:	sub	r3, fp, #256	; 0x100
    b1cc:	sub	r3, r3, #1
    b1d0:	bic	r3, r3, #255	; 0xff
    b1d4:	add	r4, r3, #256	; 0x100
    b1d8:	cmp	fp, r4
    b1dc:	ble	ae48 <ReadUInt64Data+0x1070>
    b1e0:	sub	fp, fp, r4
    b1e4:	ldr	r3, [r9]
    b1e8:	mov	r2, fp
    b1ec:	ldr	r1, [sp, #4]
    b1f0:	add	r0, sp, #32
    b1f4:	bl	1520 <fread@plt>
    b1f8:	ldr	r3, [sp, #12]
    b1fc:	add	r8, r3, r0
    b200:	cmp	fp, #0
    b204:	ble	ae48 <ReadUInt64Data+0x1070>
    b208:	ldr	r3, [sp, #8]
    b20c:	add	r6, r3, r4, lsl #3
    b210:	add	r4, fp, r4
    b214:	add	r4, r3, r4, lsl #3
    b218:	ldr	r5, [sp, #16]
    b21c:	mov	r0, r5
    b220:	bl	17ec <Mat_int64Swap>
    b224:	strd	r0, [r6], #8
    b228:	add	r5, r5, #8
    b22c:	cmp	r4, r6
    b230:	bne	b21c <ReadUInt64Data+0x1444>
    b234:	b	ae48 <ReadUInt64Data+0x1070>
    b238:	ldr	r3, [r9]
    b23c:	mov	r2, fp
    b240:	ldr	r1, [sp, #4]
    b244:	add	r0, sp, #32
    b248:	bl	1520 <fread@plt>
    b24c:	mov	r8, r0
    b250:	cmp	fp, #0
    b254:	ble	ae48 <ReadUInt64Data+0x1070>
    b258:	add	r5, sp, #32
    b25c:	ldr	r3, [sp, #8]
    b260:	mov	r4, r3
    b264:	add	fp, r3, fp, lsl #3
    b268:	mov	r0, r5
    b26c:	bl	17ec <Mat_int64Swap>
    b270:	strd	r0, [r4], #8
    b274:	add	r5, r5, #8
    b278:	cmp	r4, fp
    b27c:	bne	b268 <ReadUInt64Data+0x1490>
    b280:	b	ae48 <ReadUInt64Data+0x1070>
    b284:	cmp	fp, #256	; 0x100
    b288:	ble	b35c <ReadUInt64Data+0x1584>
    b28c:	sub	r3, fp, #256	; 0x100
    b290:	str	r3, [sp, #16]
    b294:	ldr	r3, [sp, #8]
    b298:	sub	r7, r3, #8
    b29c:	mov	r6, r8
    b2a0:	add	sl, sp, #32
    b2a4:	add	r4, sp, #2064	; 0x810
    b2a8:	add	r4, r4, #8
    b2ac:	ldr	r3, [r9]
    b2b0:	mov	r2, #256	; 0x100
    b2b4:	ldr	r1, [sp, #4]
    b2b8:	mov	r0, sl
    b2bc:	bl	1520 <fread@plt>
    b2c0:	add	r8, r8, r0
    b2c4:	str	r8, [sp, #12]
    b2c8:	sub	r5, sl, #8
    b2cc:	mov	r2, r7
    b2d0:	mov	r3, r5
    b2d4:	ldrd	r0, [r3, #8]!
    b2d8:	strd	r0, [r2, #8]!
    b2dc:	cmp	r3, r4
    b2e0:	bne	b2d4 <ReadUInt64Data+0x14fc>
    b2e4:	add	r6, r6, #256	; 0x100
    b2e8:	add	r7, r7, #2048	; 0x800
    b2ec:	ldr	r3, [sp, #16]
    b2f0:	cmp	r6, r3
    b2f4:	blt	b2ac <ReadUInt64Data+0x14d4>
    b2f8:	sub	r3, fp, #256	; 0x100
    b2fc:	sub	r3, r3, #1
    b300:	bic	r3, r3, #255	; 0xff
    b304:	add	r4, r3, #256	; 0x100
    b308:	cmp	fp, r4
    b30c:	ble	ae48 <ReadUInt64Data+0x1070>
    b310:	sub	fp, fp, r4
    b314:	ldr	r3, [r9]
    b318:	mov	r2, fp
    b31c:	ldr	r1, [sp, #4]
    b320:	add	r0, sp, #32
    b324:	bl	1520 <fread@plt>
    b328:	ldr	r3, [sp, #12]
    b32c:	add	r8, r3, r0
    b330:	cmp	fp, #0
    b334:	ble	ae48 <ReadUInt64Data+0x1070>
    b338:	ldr	r1, [sp, #8]
    b33c:	add	r2, r1, r4, lsl #3
    b340:	add	r3, fp, r4
    b344:	add	r3, r1, r3, lsl #3
    b348:	ldrd	r0, [r5, #8]!
    b34c:	strd	r0, [r2], #8
    b350:	cmp	r3, r2
    b354:	bne	b348 <ReadUInt64Data+0x1570>
    b358:	b	ae48 <ReadUInt64Data+0x1070>
    b35c:	ldr	r3, [r9]
    b360:	mov	r2, fp
    b364:	ldr	r1, [sp, #4]
    b368:	add	r0, sp, #32
    b36c:	bl	1520 <fread@plt>
    b370:	mov	r8, r0
    b374:	cmp	fp, #0
    b378:	ble	ae48 <ReadUInt64Data+0x1070>
    b37c:	add	r2, sp, #24
    b380:	ldr	r1, [sp, #8]
    b384:	mov	r3, r1
    b388:	add	r1, r1, fp, lsl #3
    b38c:	mov	ip, r1
    b390:	ldrd	r0, [r2, #8]!
    b394:	strd	r0, [r3], #8
    b398:	cmp	ip, r3
    b39c:	bne	b390 <ReadUInt64Data+0x15b8>
    b3a0:	b	ae48 <ReadUInt64Data+0x1070>
    b3a4:	ldr	r3, [r9]
    b3a8:	mov	r2, fp
    b3ac:	ldr	r1, [sp, #4]
    b3b0:	add	r0, sp, #32
    b3b4:	bl	1520 <fread@plt>
    b3b8:	mov	r8, r0
    b3bc:	cmp	fp, #0
    b3c0:	ble	ae48 <ReadUInt64Data+0x1070>
    b3c4:	add	r5, sp, #32
    b3c8:	ldr	r3, [sp, #8]
    b3cc:	mov	r4, r3
    b3d0:	add	fp, r3, fp, lsl #3
    b3d4:	mov	r0, r5
    b3d8:	bl	1848 <Mat_uint64Swap>
    b3dc:	strd	r0, [r4], #8
    b3e0:	add	r5, r5, #8
    b3e4:	cmp	r4, fp
    b3e8:	bne	b3d4 <ReadUInt64Data+0x15fc>
    b3ec:	b	ae48 <ReadUInt64Data+0x1070>
    b3f0:	cmp	fp, #256	; 0x100
    b3f4:	ble	b4c8 <ReadUInt64Data+0x16f0>
    b3f8:	sub	r3, fp, #256	; 0x100
    b3fc:	str	r3, [sp, #16]
    b400:	ldr	r3, [sp, #8]
    b404:	sub	r7, r3, #8
    b408:	mov	r6, r8
    b40c:	add	sl, sp, #32
    b410:	add	r4, sp, #2064	; 0x810
    b414:	add	r4, r4, #8
    b418:	ldr	r3, [r9]
    b41c:	mov	r2, #256	; 0x100
    b420:	ldr	r1, [sp, #4]
    b424:	mov	r0, sl
    b428:	bl	1520 <fread@plt>
    b42c:	add	r8, r8, r0
    b430:	str	r8, [sp, #12]
    b434:	sub	r5, sl, #8
    b438:	mov	r2, r7
    b43c:	mov	r3, r5
    b440:	ldrd	r0, [r3, #8]!
    b444:	strd	r0, [r2, #8]!
    b448:	cmp	r3, r4
    b44c:	bne	b440 <ReadUInt64Data+0x1668>
    b450:	add	r6, r6, #256	; 0x100
    b454:	add	r7, r7, #2048	; 0x800
    b458:	ldr	r3, [sp, #16]
    b45c:	cmp	r6, r3
    b460:	blt	b418 <ReadUInt64Data+0x1640>
    b464:	sub	r3, fp, #256	; 0x100
    b468:	sub	r3, r3, #1
    b46c:	bic	r3, r3, #255	; 0xff
    b470:	add	r4, r3, #256	; 0x100
    b474:	cmp	fp, r4
    b478:	ble	ae48 <ReadUInt64Data+0x1070>
    b47c:	sub	r6, fp, r4
    b480:	ldr	r3, [r9]
    b484:	mov	r2, r6
    b488:	ldr	r1, [sp, #4]
    b48c:	add	r0, sp, #32
    b490:	bl	1520 <fread@plt>
    b494:	ldr	r3, [sp, #12]
    b498:	add	r8, r3, r0
    b49c:	cmp	r6, #0
    b4a0:	ble	ae48 <ReadUInt64Data+0x1070>
    b4a4:	ldr	r1, [sp, #8]
    b4a8:	add	r2, r1, r4, lsl #3
    b4ac:	add	r3, r6, r4
    b4b0:	add	r3, r1, r3, lsl #3
    b4b4:	ldrd	r0, [r5, #8]!
    b4b8:	strd	r0, [r2], #8
    b4bc:	cmp	r2, r3
    b4c0:	bne	b4b4 <ReadUInt64Data+0x16dc>
    b4c4:	b	ae48 <ReadUInt64Data+0x1070>
    b4c8:	ldr	r3, [r9]
    b4cc:	mov	r2, fp
    b4d0:	ldr	r1, [sp, #4]
    b4d4:	add	r0, sp, #32
    b4d8:	bl	1520 <fread@plt>
    b4dc:	mov	r8, r0
    b4e0:	cmp	fp, #0
    b4e4:	ble	ae48 <ReadUInt64Data+0x1070>
    b4e8:	add	r2, sp, #24
    b4ec:	ldr	r1, [sp, #8]
    b4f0:	mov	r3, r1
    b4f4:	add	r1, r1, fp, lsl #3
    b4f8:	mov	ip, r1
    b4fc:	ldrd	r0, [r2, #8]!
    b500:	strd	r0, [r3], #8
    b504:	cmp	r3, ip
    b508:	bne	b4fc <ReadUInt64Data+0x1724>
    b50c:	b	ae48 <ReadUInt64Data+0x1070>
    b510:	mov	r0, #0
    b514:	bx	lr

0000b518 <ReadCompressedUInt64Data>:
    b518:	strd	r4, [sp, #-36]!	; 0xffffffdc
    b51c:	strd	r6, [sp, #8]
    b520:	strd	r8, [sp, #16]
    b524:	strd	sl, [sp, #24]
    b528:	str	lr, [sp, #32]
    b52c:	sub	sp, sp, #12
    b530:	ldr	r6, [sp, #48]	; 0x30
    b534:	mov	r7, r2
    b538:	mov	r9, r1
    b53c:	clz	r1, r1
    b540:	lsr	r1, r1, #5
    b544:	cmp	r2, #0
    b548:	movne	r2, r1
    b54c:	moveq	r2, #1
    b550:	cmp	r0, #0
    b554:	moveq	r2, #1
    b558:	cmp	r2, #0
    b55c:	movne	r0, #0
    b560:	beq	b580 <ReadCompressedUInt64Data+0x68>
    b564:	add	sp, sp, #12
    b568:	ldrd	r4, [sp]
    b56c:	ldrd	r6, [sp, #8]
    b570:	ldrd	r8, [sp, #16]
    b574:	ldrd	sl, [sp, #24]
    b578:	add	sp, sp, #32
    b57c:	pop	{pc}		; (ldr pc, [sp], #4)
    b580:	mov	r8, r0
    b584:	mov	r5, r3
    b588:	mov	r0, r3
    b58c:	bl	1598 <Mat_SizeOf@plt>
    b590:	mov	r4, r0
    b594:	sub	r3, r5, #1
    b598:	cmp	r3, #8
    b59c:	addls	pc, pc, r3, lsl #2
    b5a0:	b	b9cc <ReadCompressedUInt64Data+0x4b4>
    b5a4:	b	b60c <ReadCompressedUInt64Data+0xf4>
    b5a8:	b	b5c8 <ReadCompressedUInt64Data+0xb0>
    b5ac:	b	b8a4 <ReadCompressedUInt64Data+0x38c>
    b5b0:	b	b938 <ReadCompressedUInt64Data+0x420>
    b5b4:	b	b774 <ReadCompressedUInt64Data+0x25c>
    b5b8:	b	b804 <ReadCompressedUInt64Data+0x2ec>
    b5bc:	b	b6e0 <ReadCompressedUInt64Data+0x1c8>
    b5c0:	b	b9cc <ReadCompressedUInt64Data+0x4b4>
    b5c4:	b	b64c <ReadCompressedUInt64Data+0x134>
    b5c8:	cmp	r6, #0
    b5cc:	movgt	r5, r7
    b5d0:	addgt	r7, r7, r6, lsl #3
    b5d4:	movgt	sl, sp
    b5d8:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b5dc:	mov	r3, r4
    b5e0:	mov	r2, sl
    b5e4:	mov	r1, r9
    b5e8:	mov	r0, r8
    b5ec:	bl	333c <InflateData>
    b5f0:	ldrb	r2, [sp]
    b5f4:	mov	r3, #0
    b5f8:	strd	r2, [r5], #8
    b5fc:	cmp	r7, r5
    b600:	bne	b5dc <ReadCompressedUInt64Data+0xc4>
    b604:	mul	r0, r4, r6
    b608:	b	b564 <ReadCompressedUInt64Data+0x4c>
    b60c:	cmp	r6, #0
    b610:	movgt	r5, r7
    b614:	addgt	r7, r7, r6, lsl #3
    b618:	movgt	sl, sp
    b61c:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b620:	mov	r3, r4
    b624:	mov	r2, sl
    b628:	mov	r1, r9
    b62c:	mov	r0, r8
    b630:	bl	333c <InflateData>
    b634:	ldrsb	r2, [sp]
    b638:	asr	r3, r2, #31
    b63c:	strd	r2, [r5], #8
    b640:	cmp	r7, r5
    b644:	bne	b620 <ReadCompressedUInt64Data+0x108>
    b648:	b	b604 <ReadCompressedUInt64Data+0xec>
    b64c:	ldr	r3, [r8, #20]
    b650:	cmp	r3, #0
    b654:	bne	b698 <ReadCompressedUInt64Data+0x180>
    b658:	cmp	r6, #0
    b65c:	movgt	r5, r7
    b660:	addgt	r7, r7, r6, lsl #3
    b664:	movgt	sl, sp
    b668:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b66c:	mov	r3, r4
    b670:	mov	r2, sl
    b674:	mov	r1, r9
    b678:	mov	r0, r8
    b67c:	bl	333c <InflateData>
    b680:	ldrd	r0, [sp]
    b684:	bl	4f0a8 <__aeabi_d2ulz>
    b688:	strd	r0, [r5], #8
    b68c:	cmp	r5, r7
    b690:	bne	b66c <ReadCompressedUInt64Data+0x154>
    b694:	b	b604 <ReadCompressedUInt64Data+0xec>
    b698:	cmp	r6, #0
    b69c:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b6a0:	mov	r5, r7
    b6a4:	add	r7, r7, r6, lsl #3
    b6a8:	mov	sl, sp
    b6ac:	mov	r3, r4
    b6b0:	mov	r2, sl
    b6b4:	mov	r1, r9
    b6b8:	mov	r0, r8
    b6bc:	bl	333c <InflateData>
    b6c0:	mov	r0, sl
    b6c4:	bl	1974 <Mat_doubleSwap>
    b6c8:	vmov	r0, r1, d0
    b6cc:	bl	4f0a8 <__aeabi_d2ulz>
    b6d0:	strd	r0, [r5], #8
    b6d4:	cmp	r5, r7
    b6d8:	bne	b6ac <ReadCompressedUInt64Data+0x194>
    b6dc:	b	b604 <ReadCompressedUInt64Data+0xec>
    b6e0:	ldr	r3, [r8, #20]
    b6e4:	cmp	r3, #0
    b6e8:	bne	b72c <ReadCompressedUInt64Data+0x214>
    b6ec:	cmp	r6, #0
    b6f0:	movgt	r5, r7
    b6f4:	addgt	r7, r7, r6, lsl #3
    b6f8:	movgt	sl, sp
    b6fc:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b700:	mov	r3, r4
    b704:	mov	r2, sl
    b708:	mov	r1, r9
    b70c:	mov	r0, r8
    b710:	bl	333c <InflateData>
    b714:	ldr	r0, [sp]
    b718:	bl	4f068 <__aeabi_f2ulz>
    b71c:	strd	r0, [r5], #8
    b720:	cmp	r5, r7
    b724:	bne	b700 <ReadCompressedUInt64Data+0x1e8>
    b728:	b	b604 <ReadCompressedUInt64Data+0xec>
    b72c:	cmp	r6, #0
    b730:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b734:	mov	r5, r7
    b738:	add	r7, r7, r6, lsl #3
    b73c:	mov	sl, sp
    b740:	mov	r3, r4
    b744:	mov	r2, sl
    b748:	mov	r1, r9
    b74c:	mov	r0, r8
    b750:	bl	333c <InflateData>
    b754:	mov	r0, sl
    b758:	bl	1944 <Mat_floatSwap>
    b75c:	vmov	r0, s0
    b760:	bl	4f068 <__aeabi_f2ulz>
    b764:	strd	r0, [r5], #8
    b768:	cmp	r5, r7
    b76c:	bne	b740 <ReadCompressedUInt64Data+0x228>
    b770:	b	b604 <ReadCompressedUInt64Data+0xec>
    b774:	ldr	r3, [r8, #20]
    b778:	cmp	r3, #0
    b77c:	bne	b7c0 <ReadCompressedUInt64Data+0x2a8>
    b780:	cmp	r6, #0
    b784:	movgt	r5, r7
    b788:	addgt	r7, r7, r6, lsl #3
    b78c:	movgt	sl, sp
    b790:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b794:	mov	r3, r4
    b798:	mov	r2, sl
    b79c:	mov	r1, r9
    b7a0:	mov	r0, r8
    b7a4:	bl	333c <InflateData>
    b7a8:	ldr	r2, [sp]
    b7ac:	asr	r3, r2, #31
    b7b0:	strd	r2, [r5], #8
    b7b4:	cmp	r5, r7
    b7b8:	bne	b794 <ReadCompressedUInt64Data+0x27c>
    b7bc:	b	b604 <ReadCompressedUInt64Data+0xec>
    b7c0:	cmp	r6, #0
    b7c4:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b7c8:	mov	r5, r7
    b7cc:	add	r7, r7, r6, lsl #3
    b7d0:	mov	sl, sp
    b7d4:	mov	r3, r4
    b7d8:	mov	r2, sl
    b7dc:	mov	r1, r9
    b7e0:	mov	r0, r8
    b7e4:	bl	333c <InflateData>
    b7e8:	mov	r0, sl
    b7ec:	bl	18a4 <Mat_int32Swap>
    b7f0:	asr	r1, r0, #31
    b7f4:	strd	r0, [r5], #8
    b7f8:	cmp	r5, r7
    b7fc:	bne	b7d4 <ReadCompressedUInt64Data+0x2bc>
    b800:	b	b604 <ReadCompressedUInt64Data+0xec>
    b804:	ldr	r3, [r8, #20]
    b808:	cmp	r3, #0
    b80c:	bne	b858 <ReadCompressedUInt64Data+0x340>
    b810:	cmp	r6, #0
    b814:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b818:	mov	r5, r7
    b81c:	add	r7, r7, r6, lsl #3
    b820:	mov	fp, sp
    b824:	mov	sl, #0
    b828:	mov	r3, r4
    b82c:	mov	r2, fp
    b830:	mov	r1, r9
    b834:	mov	r0, r8
    b838:	bl	333c <InflateData>
    b83c:	ldr	r3, [sp]
    b840:	str	r3, [r5]
    b844:	str	sl, [r5, #4]
    b848:	add	r5, r5, #8
    b84c:	cmp	r5, r7
    b850:	bne	b828 <ReadCompressedUInt64Data+0x310>
    b854:	b	b604 <ReadCompressedUInt64Data+0xec>
    b858:	cmp	r6, #0
    b85c:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b860:	mov	r5, r7
    b864:	add	r7, r7, r6, lsl #3
    b868:	mov	sl, sp
    b86c:	mov	fp, #0
    b870:	mov	r3, r4
    b874:	mov	r2, sl
    b878:	mov	r1, r9
    b87c:	mov	r0, r8
    b880:	bl	333c <InflateData>
    b884:	mov	r0, sl
    b888:	bl	18d4 <Mat_uint32Swap>
    b88c:	str	r0, [r5]
    b890:	str	fp, [r5, #4]
    b894:	add	r5, r5, #8
    b898:	cmp	r5, r7
    b89c:	bne	b870 <ReadCompressedUInt64Data+0x358>
    b8a0:	b	b604 <ReadCompressedUInt64Data+0xec>
    b8a4:	ldr	r3, [r8, #20]
    b8a8:	cmp	r3, #0
    b8ac:	bne	b8f0 <ReadCompressedUInt64Data+0x3d8>
    b8b0:	cmp	r6, #0
    b8b4:	movgt	r5, r7
    b8b8:	addgt	r7, r7, r6, lsl #3
    b8bc:	movgt	sl, sp
    b8c0:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b8c4:	mov	r3, r4
    b8c8:	mov	r2, sl
    b8cc:	mov	r1, r9
    b8d0:	mov	r0, r8
    b8d4:	bl	333c <InflateData>
    b8d8:	ldrsh	r2, [sp]
    b8dc:	asr	r3, r2, #31
    b8e0:	strd	r2, [r5], #8
    b8e4:	cmp	r7, r5
    b8e8:	bne	b8c4 <ReadCompressedUInt64Data+0x3ac>
    b8ec:	b	b604 <ReadCompressedUInt64Data+0xec>
    b8f0:	cmp	r6, #0
    b8f4:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b8f8:	mov	r5, r7
    b8fc:	add	r7, r7, r6, lsl #3
    b900:	mov	sl, sp
    b904:	mov	r3, r4
    b908:	mov	r2, sl
    b90c:	mov	r1, r9
    b910:	mov	r0, r8
    b914:	bl	333c <InflateData>
    b918:	mov	r0, sl
    b91c:	bl	1904 <Mat_int16Swap>
    b920:	sxth	r0, r0
    b924:	asr	r1, r0, #31
    b928:	strd	r0, [r5], #8
    b92c:	cmp	r7, r5
    b930:	bne	b904 <ReadCompressedUInt64Data+0x3ec>
    b934:	b	b604 <ReadCompressedUInt64Data+0xec>
    b938:	ldr	r3, [r8, #20]
    b93c:	cmp	r3, #0
    b940:	bne	b984 <ReadCompressedUInt64Data+0x46c>
    b944:	cmp	r6, #0
    b948:	movgt	r5, r7
    b94c:	addgt	r7, r7, r6, lsl #3
    b950:	movgt	sl, sp
    b954:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b958:	mov	r3, r4
    b95c:	mov	r2, sl
    b960:	mov	r1, r9
    b964:	mov	r0, r8
    b968:	bl	333c <InflateData>
    b96c:	ldrh	r2, [sp]
    b970:	mov	r3, #0
    b974:	strd	r2, [r5], #8
    b978:	cmp	r5, r7
    b97c:	bne	b958 <ReadCompressedUInt64Data+0x440>
    b980:	b	b604 <ReadCompressedUInt64Data+0xec>
    b984:	cmp	r6, #0
    b988:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b98c:	mov	r5, r7
    b990:	add	r7, r7, r6, lsl #3
    b994:	mov	sl, sp
    b998:	mov	r3, r4
    b99c:	mov	r2, sl
    b9a0:	mov	r1, r9
    b9a4:	mov	r0, r8
    b9a8:	bl	333c <InflateData>
    b9ac:	mov	r0, sl
    b9b0:	bl	1924 <Mat_uint16Swap>
    b9b4:	uxth	r0, r0
    b9b8:	mov	r1, #0
    b9bc:	strd	r0, [r5], #8
    b9c0:	cmp	r7, r5
    b9c4:	bne	b998 <ReadCompressedUInt64Data+0x480>
    b9c8:	b	b604 <ReadCompressedUInt64Data+0xec>
    b9cc:	cmp	r5, #12
    b9d0:	beq	ba24 <ReadCompressedUInt64Data+0x50c>
    b9d4:	cmp	r5, #13
    b9d8:	bne	b604 <ReadCompressedUInt64Data+0xec>
    b9dc:	ldr	r3, [r8, #20]
    b9e0:	cmp	r3, #0
    b9e4:	bne	baac <ReadCompressedUInt64Data+0x594>
    b9e8:	cmp	r6, #0
    b9ec:	movgt	r5, r7
    b9f0:	addgt	r7, r7, r6, lsl #3
    b9f4:	movgt	sl, sp
    b9f8:	ble	b604 <ReadCompressedUInt64Data+0xec>
    b9fc:	mov	r3, r4
    ba00:	mov	r2, sl
    ba04:	mov	r1, r9
    ba08:	mov	r0, r8
    ba0c:	bl	333c <InflateData>
    ba10:	ldrd	r2, [sp]
    ba14:	strd	r2, [r5], #8
    ba18:	cmp	r7, r5
    ba1c:	bne	b9fc <ReadCompressedUInt64Data+0x4e4>
    ba20:	b	b604 <ReadCompressedUInt64Data+0xec>
    ba24:	ldr	r3, [r8, #20]
    ba28:	cmp	r3, #0
    ba2c:	bne	ba6c <ReadCompressedUInt64Data+0x554>
    ba30:	cmp	r6, #0
    ba34:	movgt	r5, r7
    ba38:	addgt	r7, r7, r6, lsl #3
    ba3c:	movgt	sl, sp
    ba40:	ble	b604 <ReadCompressedUInt64Data+0xec>
    ba44:	mov	r3, r4
    ba48:	mov	r2, sl
    ba4c:	mov	r1, r9
    ba50:	mov	r0, r8
    ba54:	bl	333c <InflateData>
    ba58:	ldrd	r2, [sp]
    ba5c:	strd	r2, [r5], #8
    ba60:	cmp	r7, r5
    ba64:	bne	ba44 <ReadCompressedUInt64Data+0x52c>
    ba68:	b	b604 <ReadCompressedUInt64Data+0xec>
    ba6c:	cmp	r6, #0
    ba70:	ble	b604 <ReadCompressedUInt64Data+0xec>
    ba74:	mov	r5, r7
    ba78:	add	r7, r7, r6, lsl #3
    ba7c:	mov	sl, sp
    ba80:	mov	r3, r4
    ba84:	mov	r2, sl
    ba88:	mov	r1, r9
    ba8c:	mov	r0, r8
    ba90:	bl	333c <InflateData>
    ba94:	mov	r0, sl
    ba98:	bl	17ec <Mat_int64Swap>
    ba9c:	strd	r0, [r5], #8
    baa0:	cmp	r5, r7
    baa4:	bne	ba80 <ReadCompressedUInt64Data+0x568>
    baa8:	b	b604 <ReadCompressedUInt64Data+0xec>
    baac:	cmp	r6, #0
    bab0:	ble	b604 <ReadCompressedUInt64Data+0xec>
    bab4:	mov	r5, r7
    bab8:	add	r7, r7, r6, lsl #3
    babc:	mov	sl, sp
    bac0:	mov	r3, r4
    bac4:	mov	r2, sl
    bac8:	mov	r1, r9
    bacc:	mov	r0, r8
    bad0:	bl	333c <InflateData>
    bad4:	mov	r0, sl
    bad8:	bl	1848 <Mat_uint64Swap>
    badc:	strd	r0, [r5], #8
    bae0:	cmp	r7, r5
    bae4:	bne	bac0 <ReadCompressedUInt64Data+0x5a8>
    bae8:	b	b604 <ReadCompressedUInt64Data+0xec>

0000baec <ReadInt32Data>:
    baec:	cmp	r1, #0
    baf0:	cmpne	r0, #0
    baf4:	beq	d194 <ReadInt32Data+0x16a8>
    baf8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    bafc:	strd	r6, [sp, #8]
    bb00:	strd	r8, [sp, #16]
    bb04:	strd	sl, [sp, #24]
    bb08:	str	lr, [sp, #32]
    bb0c:	sub	sp, sp, #2064	; 0x810
    bb10:	sub	sp, sp, #12
    bb14:	mov	r6, r0
    bb18:	mov	ip, r1
    bb1c:	ldr	r1, [r0]
    bb20:	cmp	r1, #0
    bb24:	moveq	r0, #0
    bb28:	beq	cae4 <ReadInt32Data+0xff8>
    bb2c:	str	ip, [sp, #4]
    bb30:	mov	fp, r3
    bb34:	mov	r4, r2
    bb38:	mov	r0, r2
    bb3c:	bl	1598 <Mat_SizeOf@plt>
    bb40:	str	r0, [sp]
    bb44:	sub	r3, r4, #1
    bb48:	cmp	r3, #8
    bb4c:	addls	pc, pc, r3, lsl #2
    bb50:	b	ccb8 <ReadInt32Data+0x11cc>
    bb54:	b	ca48 <ReadInt32Data+0xf5c>
    bb58:	b	cb94 <ReadInt32Data+0x10a8>
    bb5c:	b	c568 <ReadInt32Data+0xa7c>
    bb60:	b	c7d8 <ReadInt32Data+0xcec>
    bb64:	b	c088 <ReadInt32Data+0x59c>
    bb68:	b	c2f8 <ReadInt32Data+0x80c>
    bb6c:	b	be00 <ReadInt32Data+0x314>
    bb70:	b	ccb8 <ReadInt32Data+0x11cc>
    bb74:	b	bb78 <ReadInt32Data+0x8c>
    bb78:	ldr	r5, [r6, #20]
    bb7c:	cmp	r5, #0
    bb80:	beq	bcd8 <ReadInt32Data+0x1ec>
    bb84:	cmp	fp, #256	; 0x100
    bb88:	ble	bc88 <ReadInt32Data+0x19c>
    bb8c:	sub	r3, fp, #256	; 0x100
    bb90:	ldr	r2, [sp, #4]
    bb94:	sub	sl, r2, #4
    bb98:	mov	r9, #0
    bb9c:	mov	r5, r9
    bba0:	add	r2, sp, #24
    bba4:	str	r2, [sp, #16]
    bba8:	add	r8, sp, #2064	; 0x810
    bbac:	add	r8, r8, #8
    bbb0:	str	fp, [sp, #20]
    bbb4:	mov	fp, r3
    bbb8:	ldr	r3, [r6]
    bbbc:	mov	r2, #256	; 0x100
    bbc0:	ldr	r1, [sp]
    bbc4:	ldr	r4, [sp, #16]
    bbc8:	mov	r0, r4
    bbcc:	bl	1520 <fread@plt>
    bbd0:	add	r5, r5, r0
    bbd4:	str	r5, [sp, #8]
    bbd8:	str	r4, [sp, #12]
    bbdc:	mov	r7, sl
    bbe0:	mov	r0, r4
    bbe4:	bl	1974 <Mat_doubleSwap>
    bbe8:	vcvt.s32.f64	s0, d0
    bbec:	vmov	r3, s0
    bbf0:	str	r3, [r7, #4]!
    bbf4:	add	r4, r4, #8
    bbf8:	cmp	r4, r8
    bbfc:	bne	bbe0 <ReadInt32Data+0xf4>
    bc00:	add	r9, r9, #256	; 0x100
    bc04:	add	sl, sl, #1024	; 0x400
    bc08:	cmp	r9, fp
    bc0c:	blt	bbb8 <ReadInt32Data+0xcc>
    bc10:	ldr	fp, [sp, #20]
    bc14:	sub	r3, fp, #256	; 0x100
    bc18:	sub	r3, r3, #1
    bc1c:	bic	r3, r3, #255	; 0xff
    bc20:	add	r4, r3, #256	; 0x100
    bc24:	cmp	fp, r4
    bc28:	ble	cadc <ReadInt32Data+0xff0>
    bc2c:	sub	fp, fp, r4
    bc30:	ldr	r3, [r6]
    bc34:	mov	r2, fp
    bc38:	ldr	r1, [sp]
    bc3c:	add	r0, sp, #24
    bc40:	bl	1520 <fread@plt>
    bc44:	ldr	r3, [sp, #8]
    bc48:	add	r5, r3, r0
    bc4c:	cmp	fp, #0
    bc50:	ble	cadc <ReadInt32Data+0xff0>
    bc54:	ldr	r3, [sp, #4]
    bc58:	add	r6, r3, r4, lsl #2
    bc5c:	add	r4, fp, r4
    bc60:	add	r4, r3, r4, lsl #2
    bc64:	ldr	r7, [sp, #12]
    bc68:	mov	r0, r7
    bc6c:	bl	1974 <Mat_doubleSwap>
    bc70:	vcvt.s32.f64	s0, d0
    bc74:	vstmia	r6!, {s0}
    bc78:	add	r7, r7, #8
    bc7c:	cmp	r6, r4
    bc80:	bne	bc68 <ReadInt32Data+0x17c>
    bc84:	b	cadc <ReadInt32Data+0xff0>
    bc88:	ldr	r3, [r6]
    bc8c:	mov	r2, fp
    bc90:	ldr	r1, [sp]
    bc94:	add	r0, sp, #24
    bc98:	bl	1520 <fread@plt>
    bc9c:	mov	r5, r0
    bca0:	cmp	fp, #0
    bca4:	ble	cadc <ReadInt32Data+0xff0>
    bca8:	add	r6, sp, #24
    bcac:	ldr	r3, [sp, #4]
    bcb0:	mov	r4, r3
    bcb4:	add	fp, r3, fp, lsl #2
    bcb8:	mov	r0, r6
    bcbc:	bl	1974 <Mat_doubleSwap>
    bcc0:	vcvt.s32.f64	s0, d0
    bcc4:	vstmia	r4!, {s0}
    bcc8:	add	r6, r6, #8
    bccc:	cmp	r4, fp
    bcd0:	bne	bcb8 <ReadInt32Data+0x1cc>
    bcd4:	b	cadc <ReadInt32Data+0xff0>
    bcd8:	cmp	fp, #256	; 0x100
    bcdc:	ble	bdb8 <ReadInt32Data+0x2cc>
    bce0:	sub	r9, fp, #256	; 0x100
    bce4:	ldr	r3, [sp, #4]
    bce8:	sub	r8, r3, #4
    bcec:	mov	r7, r5
    bcf0:	add	sl, sp, #24
    bcf4:	add	r4, sp, #2064	; 0x810
    bcf8:	add	r4, r4, #8
    bcfc:	ldr	r3, [r6]
    bd00:	mov	r2, #256	; 0x100
    bd04:	ldr	r1, [sp]
    bd08:	mov	r0, sl
    bd0c:	bl	1520 <fread@plt>
    bd10:	add	r5, r5, r0
    bd14:	str	r5, [sp, #8]
    bd18:	str	sl, [sp, #12]
    bd1c:	mov	r2, r8
    bd20:	mov	r3, sl
    bd24:	vldmia	r3!, {d7}
    bd28:	vcvt.s32.f64	s14, d7
    bd2c:	vmov	r1, s14
    bd30:	str	r1, [r2, #4]!
    bd34:	cmp	r3, r4
    bd38:	bne	bd24 <ReadInt32Data+0x238>
    bd3c:	add	r7, r7, #256	; 0x100
    bd40:	add	r8, r8, #1024	; 0x400
    bd44:	cmp	r7, r9
    bd48:	blt	bcfc <ReadInt32Data+0x210>
    bd4c:	sub	r3, fp, #256	; 0x100
    bd50:	sub	r3, r3, #1
    bd54:	bic	r3, r3, #255	; 0xff
    bd58:	add	r4, r3, #256	; 0x100
    bd5c:	cmp	fp, r4
    bd60:	ble	cadc <ReadInt32Data+0xff0>
    bd64:	sub	fp, fp, r4
    bd68:	ldr	r3, [r6]
    bd6c:	mov	r2, fp
    bd70:	ldr	r1, [sp]
    bd74:	add	r0, sp, #24
    bd78:	bl	1520 <fread@plt>
    bd7c:	ldr	r3, [sp, #8]
    bd80:	add	r5, r3, r0
    bd84:	cmp	fp, #0
    bd88:	ble	cadc <ReadInt32Data+0xff0>
    bd8c:	ldr	r1, [sp, #4]
    bd90:	add	r2, r1, r4, lsl #2
    bd94:	add	r3, fp, r4
    bd98:	add	r3, r1, r3, lsl #2
    bd9c:	ldr	r1, [sp, #12]
    bda0:	vldmia	r1!, {d7}
    bda4:	vcvt.s32.f64	s14, d7
    bda8:	vstmia	r2!, {s14}
    bdac:	cmp	r2, r3
    bdb0:	bne	bda0 <ReadInt32Data+0x2b4>
    bdb4:	b	cadc <ReadInt32Data+0xff0>
    bdb8:	ldr	r3, [r6]
    bdbc:	mov	r2, fp
    bdc0:	ldr	r1, [sp]
    bdc4:	add	r0, sp, #24
    bdc8:	bl	1520 <fread@plt>
    bdcc:	mov	r5, r0
    bdd0:	cmp	fp, #0
    bdd4:	ble	cadc <ReadInt32Data+0xff0>
    bdd8:	add	r2, sp, #24
    bddc:	ldr	r1, [sp, #4]
    bde0:	mov	r3, r1
    bde4:	add	r1, r1, fp, lsl #2
    bde8:	vldmia	r2!, {d7}
    bdec:	vcvt.s32.f64	s14, d7
    bdf0:	vstmia	r3!, {s14}
    bdf4:	cmp	r3, r1
    bdf8:	bne	bde8 <ReadInt32Data+0x2fc>
    bdfc:	b	cadc <ReadInt32Data+0xff0>
    be00:	ldr	r5, [r6, #20]
    be04:	cmp	r5, #0
    be08:	beq	bf60 <ReadInt32Data+0x474>
    be0c:	cmp	fp, #256	; 0x100
    be10:	ble	bf10 <ReadInt32Data+0x424>
    be14:	sub	r3, fp, #256	; 0x100
    be18:	ldr	r2, [sp, #4]
    be1c:	sub	sl, r2, #4
    be20:	mov	r9, #0
    be24:	mov	r5, r9
    be28:	add	r2, sp, #24
    be2c:	str	r2, [sp, #16]
    be30:	add	r8, sp, #1040	; 0x410
    be34:	add	r8, r8, #8
    be38:	str	fp, [sp, #20]
    be3c:	mov	fp, r3
    be40:	ldr	r3, [r6]
    be44:	mov	r2, #256	; 0x100
    be48:	ldr	r1, [sp]
    be4c:	ldr	r4, [sp, #16]
    be50:	mov	r0, r4
    be54:	bl	1520 <fread@plt>
    be58:	add	r5, r5, r0
    be5c:	str	r5, [sp, #8]
    be60:	str	r4, [sp, #12]
    be64:	mov	r7, sl
    be68:	mov	r0, r4
    be6c:	bl	1944 <Mat_floatSwap>
    be70:	vcvt.s32.f32	s0, s0
    be74:	vmov	r3, s0
    be78:	str	r3, [r7, #4]!
    be7c:	add	r4, r4, #4
    be80:	cmp	r4, r8
    be84:	bne	be68 <ReadInt32Data+0x37c>
    be88:	add	r9, r9, #256	; 0x100
    be8c:	add	sl, sl, #1024	; 0x400
    be90:	cmp	r9, fp
    be94:	blt	be40 <ReadInt32Data+0x354>
    be98:	ldr	fp, [sp, #20]
    be9c:	sub	r3, fp, #256	; 0x100
    bea0:	sub	r3, r3, #1
    bea4:	bic	r3, r3, #255	; 0xff
    bea8:	add	r4, r3, #256	; 0x100
    beac:	cmp	fp, r4
    beb0:	ble	cadc <ReadInt32Data+0xff0>
    beb4:	sub	fp, fp, r4
    beb8:	ldr	r3, [r6]
    bebc:	mov	r2, fp
    bec0:	ldr	r1, [sp]
    bec4:	add	r0, sp, #24
    bec8:	bl	1520 <fread@plt>
    becc:	ldr	r3, [sp, #8]
    bed0:	add	r5, r3, r0
    bed4:	cmp	fp, #0
    bed8:	ble	cadc <ReadInt32Data+0xff0>
    bedc:	ldr	r3, [sp, #4]
    bee0:	add	r6, r3, r4, lsl #2
    bee4:	add	r4, fp, r4
    bee8:	add	r4, r3, r4, lsl #2
    beec:	ldr	r7, [sp, #12]
    bef0:	mov	r0, r7
    bef4:	bl	1944 <Mat_floatSwap>
    bef8:	vcvt.s32.f32	s0, s0
    befc:	vstmia	r6!, {s0}
    bf00:	add	r7, r7, #4
    bf04:	cmp	r6, r4
    bf08:	bne	bef0 <ReadInt32Data+0x404>
    bf0c:	b	cadc <ReadInt32Data+0xff0>
    bf10:	ldr	r3, [r6]
    bf14:	mov	r2, fp
    bf18:	ldr	r1, [sp]
    bf1c:	add	r0, sp, #24
    bf20:	bl	1520 <fread@plt>
    bf24:	mov	r5, r0
    bf28:	cmp	fp, #0
    bf2c:	ble	cadc <ReadInt32Data+0xff0>
    bf30:	add	r6, sp, #24
    bf34:	ldr	r3, [sp, #4]
    bf38:	mov	r4, r3
    bf3c:	add	fp, r3, fp, lsl #2
    bf40:	mov	r0, r6
    bf44:	bl	1944 <Mat_floatSwap>
    bf48:	vcvt.s32.f32	s0, s0
    bf4c:	vstmia	r4!, {s0}
    bf50:	add	r6, r6, #4
    bf54:	cmp	r4, fp
    bf58:	bne	bf40 <ReadInt32Data+0x454>
    bf5c:	b	cadc <ReadInt32Data+0xff0>
    bf60:	cmp	fp, #256	; 0x100
    bf64:	ble	c040 <ReadInt32Data+0x554>
    bf68:	sub	r9, fp, #256	; 0x100
    bf6c:	ldr	r3, [sp, #4]
    bf70:	sub	r8, r3, #4
    bf74:	mov	r7, r5
    bf78:	add	sl, sp, #24
    bf7c:	add	r4, sp, #1040	; 0x410
    bf80:	add	r4, r4, #8
    bf84:	ldr	r3, [r6]
    bf88:	mov	r2, #256	; 0x100
    bf8c:	ldr	r1, [sp]
    bf90:	mov	r0, sl
    bf94:	bl	1520 <fread@plt>
    bf98:	add	r5, r5, r0
    bf9c:	str	r5, [sp, #8]
    bfa0:	str	sl, [sp, #12]
    bfa4:	mov	r2, r8
    bfa8:	mov	r3, sl
    bfac:	vldmia	r3!, {s15}
    bfb0:	vcvt.s32.f32	s15, s15
    bfb4:	vmov	r1, s15
    bfb8:	str	r1, [r2, #4]!
    bfbc:	cmp	r3, r4
    bfc0:	bne	bfac <ReadInt32Data+0x4c0>
    bfc4:	add	r7, r7, #256	; 0x100
    bfc8:	add	r8, r8, #1024	; 0x400
    bfcc:	cmp	r7, r9
    bfd0:	blt	bf84 <ReadInt32Data+0x498>
    bfd4:	sub	r3, fp, #256	; 0x100
    bfd8:	sub	r3, r3, #1
    bfdc:	bic	r3, r3, #255	; 0xff
    bfe0:	add	r4, r3, #256	; 0x100
    bfe4:	cmp	fp, r4
    bfe8:	ble	cadc <ReadInt32Data+0xff0>
    bfec:	sub	fp, fp, r4
    bff0:	ldr	r3, [r6]
    bff4:	mov	r2, fp
    bff8:	ldr	r1, [sp]
    bffc:	add	r0, sp, #24
    c000:	bl	1520 <fread@plt>
    c004:	ldr	r3, [sp, #8]
    c008:	add	r5, r3, r0
    c00c:	cmp	fp, #0
    c010:	ble	cadc <ReadInt32Data+0xff0>
    c014:	ldr	r1, [sp, #4]
    c018:	add	r2, r1, r4, lsl #2
    c01c:	add	r3, fp, r4
    c020:	add	r3, r1, r3, lsl #2
    c024:	ldr	r1, [sp, #12]
    c028:	vldmia	r1!, {s15}
    c02c:	vcvt.s32.f32	s15, s15
    c030:	vstmia	r2!, {s15}
    c034:	cmp	r2, r3
    c038:	bne	c028 <ReadInt32Data+0x53c>
    c03c:	b	cadc <ReadInt32Data+0xff0>
    c040:	ldr	r3, [r6]
    c044:	mov	r2, fp
    c048:	ldr	r1, [sp]
    c04c:	add	r0, sp, #24
    c050:	bl	1520 <fread@plt>
    c054:	mov	r5, r0
    c058:	cmp	fp, #0
    c05c:	ble	cadc <ReadInt32Data+0xff0>
    c060:	add	r2, sp, #24
    c064:	ldr	r1, [sp, #4]
    c068:	mov	r3, r1
    c06c:	add	r1, r1, fp, lsl #2
    c070:	vldmia	r2!, {s15}
    c074:	vcvt.s32.f32	s15, s15
    c078:	vstmia	r3!, {s15}
    c07c:	cmp	r3, r1
    c080:	bne	c070 <ReadInt32Data+0x584>
    c084:	b	cadc <ReadInt32Data+0xff0>
    c088:	ldr	r5, [r6, #20]
    c08c:	cmp	r5, #0
    c090:	beq	c1d8 <ReadInt32Data+0x6ec>
    c094:	cmp	fp, #256	; 0x100
    c098:	ble	c18c <ReadInt32Data+0x6a0>
    c09c:	sub	r3, fp, #256	; 0x100
    c0a0:	ldr	r2, [sp, #4]
    c0a4:	sub	sl, r2, #4
    c0a8:	mov	r9, #0
    c0ac:	mov	r5, r9
    c0b0:	add	r2, sp, #24
    c0b4:	str	r2, [sp, #16]
    c0b8:	add	r8, sp, #1040	; 0x410
    c0bc:	add	r8, r8, #8
    c0c0:	str	fp, [sp, #20]
    c0c4:	mov	fp, r3
    c0c8:	ldr	r3, [r6]
    c0cc:	mov	r2, #256	; 0x100
    c0d0:	ldr	r1, [sp]
    c0d4:	ldr	r4, [sp, #16]
    c0d8:	mov	r0, r4
    c0dc:	bl	1520 <fread@plt>
    c0e0:	add	r5, r5, r0
    c0e4:	str	r5, [sp, #8]
    c0e8:	str	r4, [sp, #12]
    c0ec:	mov	r7, sl
    c0f0:	mov	r0, r4
    c0f4:	bl	18a4 <Mat_int32Swap>
    c0f8:	str	r0, [r7, #4]!
    c0fc:	add	r4, r4, #4
    c100:	cmp	r4, r8
    c104:	bne	c0f0 <ReadInt32Data+0x604>
    c108:	add	r9, r9, #256	; 0x100
    c10c:	add	sl, sl, #1024	; 0x400
    c110:	cmp	r9, fp
    c114:	blt	c0c8 <ReadInt32Data+0x5dc>
    c118:	ldr	fp, [sp, #20]
    c11c:	sub	r3, fp, #256	; 0x100
    c120:	sub	r3, r3, #1
    c124:	bic	r3, r3, #255	; 0xff
    c128:	add	r4, r3, #256	; 0x100
    c12c:	cmp	fp, r4
    c130:	ble	cadc <ReadInt32Data+0xff0>
    c134:	sub	fp, fp, r4
    c138:	ldr	r3, [r6]
    c13c:	mov	r2, fp
    c140:	ldr	r1, [sp]
    c144:	add	r0, sp, #24
    c148:	bl	1520 <fread@plt>
    c14c:	ldr	r3, [sp, #8]
    c150:	add	r5, r3, r0
    c154:	cmp	fp, #0
    c158:	ble	cadc <ReadInt32Data+0xff0>
    c15c:	ldr	r3, [sp, #4]
    c160:	add	r6, r3, r4, lsl #2
    c164:	add	r4, fp, r4
    c168:	add	r4, r3, r4, lsl #2
    c16c:	ldr	r7, [sp, #12]
    c170:	mov	r0, r7
    c174:	bl	18a4 <Mat_int32Swap>
    c178:	str	r0, [r6], #4
    c17c:	add	r7, r7, #4
    c180:	cmp	r6, r4
    c184:	bne	c170 <ReadInt32Data+0x684>
    c188:	b	cadc <ReadInt32Data+0xff0>
    c18c:	ldr	r3, [r6]
    c190:	mov	r2, fp
    c194:	ldr	r1, [sp]
    c198:	add	r0, sp, #24
    c19c:	bl	1520 <fread@plt>
    c1a0:	mov	r5, r0
    c1a4:	cmp	fp, #0
    c1a8:	ble	cadc <ReadInt32Data+0xff0>
    c1ac:	add	r6, sp, #24
    c1b0:	ldr	r3, [sp, #4]
    c1b4:	mov	r4, r3
    c1b8:	add	fp, r3, fp, lsl #2
    c1bc:	mov	r0, r6
    c1c0:	bl	18a4 <Mat_int32Swap>
    c1c4:	str	r0, [r4], #4
    c1c8:	add	r6, r6, #4
    c1cc:	cmp	r4, fp
    c1d0:	bne	c1bc <ReadInt32Data+0x6d0>
    c1d4:	b	cadc <ReadInt32Data+0xff0>
    c1d8:	cmp	fp, #256	; 0x100
    c1dc:	ble	c2b4 <ReadInt32Data+0x7c8>
    c1e0:	sub	r3, fp, #256	; 0x100
    c1e4:	ldr	r2, [sp, #4]
    c1e8:	sub	r8, r2, #4
    c1ec:	mov	r7, r5
    c1f0:	add	sl, sp, #24
    c1f4:	add	r4, sl, #1020	; 0x3fc
    c1f8:	mov	r9, r6
    c1fc:	mov	r6, r3
    c200:	ldr	r3, [r9]
    c204:	mov	r2, #256	; 0x100
    c208:	ldr	r1, [sp]
    c20c:	mov	r0, sl
    c210:	bl	1520 <fread@plt>
    c214:	add	r5, r5, r0
    c218:	str	r5, [sp, #8]
    c21c:	sub	r0, sl, #4
    c220:	mov	r2, r8
    c224:	mov	r3, r0
    c228:	ldr	r1, [r3, #4]!
    c22c:	str	r1, [r2, #4]!
    c230:	cmp	r3, r4
    c234:	bne	c228 <ReadInt32Data+0x73c>
    c238:	add	r7, r7, #256	; 0x100
    c23c:	add	r8, r8, #1024	; 0x400
    c240:	cmp	r7, r6
    c244:	blt	c200 <ReadInt32Data+0x714>
    c248:	mov	r6, r9
    c24c:	mov	r9, r0
    c250:	sub	r3, fp, #256	; 0x100
    c254:	sub	r3, r3, #1
    c258:	bic	r3, r3, #255	; 0xff
    c25c:	add	r4, r3, #256	; 0x100
    c260:	cmp	fp, r4
    c264:	ble	cadc <ReadInt32Data+0xff0>
    c268:	sub	fp, fp, r4
    c26c:	ldr	r3, [r6]
    c270:	mov	r2, fp
    c274:	ldr	r1, [sp]
    c278:	add	r0, sp, #24
    c27c:	bl	1520 <fread@plt>
    c280:	ldr	r3, [sp, #8]
    c284:	add	r5, r3, r0
    c288:	cmp	fp, #0
    c28c:	ble	cadc <ReadInt32Data+0xff0>
    c290:	ldr	r1, [sp, #4]
    c294:	add	r2, r1, r4, lsl #2
    c298:	add	r3, fp, r4
    c29c:	add	r3, r1, r3, lsl #2
    c2a0:	ldr	r1, [r9, #4]!
    c2a4:	str	r1, [r2], #4
    c2a8:	cmp	r2, r3
    c2ac:	bne	c2a0 <ReadInt32Data+0x7b4>
    c2b0:	b	cadc <ReadInt32Data+0xff0>
    c2b4:	ldr	r3, [r6]
    c2b8:	mov	r2, fp
    c2bc:	ldr	r1, [sp]
    c2c0:	add	r0, sp, #24
    c2c4:	bl	1520 <fread@plt>
    c2c8:	mov	r5, r0
    c2cc:	cmp	fp, #0
    c2d0:	ble	cadc <ReadInt32Data+0xff0>
    c2d4:	add	r2, sp, #20
    c2d8:	ldr	r1, [sp, #4]
    c2dc:	mov	r3, r1
    c2e0:	add	r0, r1, fp, lsl #2
    c2e4:	ldr	r1, [r2, #4]!
    c2e8:	str	r1, [r3], #4
    c2ec:	cmp	r3, r0
    c2f0:	bne	c2e4 <ReadInt32Data+0x7f8>
    c2f4:	b	cadc <ReadInt32Data+0xff0>
    c2f8:	ldr	r5, [r6, #20]
    c2fc:	cmp	r5, #0
    c300:	beq	c448 <ReadInt32Data+0x95c>
    c304:	cmp	fp, #256	; 0x100
    c308:	ble	c3fc <ReadInt32Data+0x910>
    c30c:	sub	r3, fp, #256	; 0x100
    c310:	ldr	r2, [sp, #4]
    c314:	sub	sl, r2, #4
    c318:	mov	r9, #0
    c31c:	mov	r5, r9
    c320:	add	r2, sp, #24
    c324:	str	r2, [sp, #16]
    c328:	add	r8, sp, #1040	; 0x410
    c32c:	add	r8, r8, #8
    c330:	str	fp, [sp, #20]
    c334:	mov	fp, r3
    c338:	ldr	r3, [r6]
    c33c:	mov	r2, #256	; 0x100
    c340:	ldr	r1, [sp]
    c344:	ldr	r4, [sp, #16]
    c348:	mov	r0, r4
    c34c:	bl	1520 <fread@plt>
    c350:	add	r5, r5, r0
    c354:	str	r5, [sp, #8]
    c358:	str	r4, [sp, #12]
    c35c:	mov	r7, sl
    c360:	mov	r0, r4
    c364:	bl	18d4 <Mat_uint32Swap>
    c368:	str	r0, [r7, #4]!
    c36c:	add	r4, r4, #4
    c370:	cmp	r4, r8
    c374:	bne	c360 <ReadInt32Data+0x874>
    c378:	add	r9, r9, #256	; 0x100
    c37c:	add	sl, sl, #1024	; 0x400
    c380:	cmp	r9, fp
    c384:	blt	c338 <ReadInt32Data+0x84c>
    c388:	ldr	fp, [sp, #20]
    c38c:	sub	r3, fp, #256	; 0x100
    c390:	sub	r3, r3, #1
    c394:	bic	r3, r3, #255	; 0xff
    c398:	add	r4, r3, #256	; 0x100
    c39c:	cmp	fp, r4
    c3a0:	ble	cadc <ReadInt32Data+0xff0>
    c3a4:	sub	fp, fp, r4
    c3a8:	ldr	r3, [r6]
    c3ac:	mov	r2, fp
    c3b0:	ldr	r1, [sp]
    c3b4:	add	r0, sp, #24
    c3b8:	bl	1520 <fread@plt>
    c3bc:	ldr	r3, [sp, #8]
    c3c0:	add	r5, r3, r0
    c3c4:	cmp	fp, #0
    c3c8:	ble	cadc <ReadInt32Data+0xff0>
    c3cc:	ldr	r3, [sp, #4]
    c3d0:	add	r6, r3, r4, lsl #2
    c3d4:	add	r4, fp, r4
    c3d8:	add	r4, r3, r4, lsl #2
    c3dc:	ldr	r7, [sp, #12]
    c3e0:	mov	r0, r7
    c3e4:	bl	18d4 <Mat_uint32Swap>
    c3e8:	str	r0, [r6], #4
    c3ec:	add	r7, r7, #4
    c3f0:	cmp	r6, r4
    c3f4:	bne	c3e0 <ReadInt32Data+0x8f4>
    c3f8:	b	cadc <ReadInt32Data+0xff0>
    c3fc:	ldr	r3, [r6]
    c400:	mov	r2, fp
    c404:	ldr	r1, [sp]
    c408:	add	r0, sp, #24
    c40c:	bl	1520 <fread@plt>
    c410:	mov	r5, r0
    c414:	cmp	fp, #0
    c418:	ble	cadc <ReadInt32Data+0xff0>
    c41c:	add	r6, sp, #24
    c420:	ldr	r3, [sp, #4]
    c424:	mov	r4, r3
    c428:	add	fp, r3, fp, lsl #2
    c42c:	mov	r0, r6
    c430:	bl	18d4 <Mat_uint32Swap>
    c434:	str	r0, [r4], #4
    c438:	add	r6, r6, #4
    c43c:	cmp	r4, fp
    c440:	bne	c42c <ReadInt32Data+0x940>
    c444:	b	cadc <ReadInt32Data+0xff0>
    c448:	cmp	fp, #256	; 0x100
    c44c:	ble	c524 <ReadInt32Data+0xa38>
    c450:	sub	r3, fp, #256	; 0x100
    c454:	ldr	r2, [sp, #4]
    c458:	sub	r8, r2, #4
    c45c:	mov	r7, r5
    c460:	add	sl, sp, #24
    c464:	add	r4, sl, #1020	; 0x3fc
    c468:	mov	r9, r6
    c46c:	mov	r6, r3
    c470:	ldr	r3, [r9]
    c474:	mov	r2, #256	; 0x100
    c478:	ldr	r1, [sp]
    c47c:	mov	r0, sl
    c480:	bl	1520 <fread@plt>
    c484:	add	r5, r5, r0
    c488:	str	r5, [sp, #8]
    c48c:	sub	r0, sl, #4
    c490:	mov	r2, r8
    c494:	mov	r3, r0
    c498:	ldr	r1, [r3, #4]!
    c49c:	str	r1, [r2, #4]!
    c4a0:	cmp	r3, r4
    c4a4:	bne	c498 <ReadInt32Data+0x9ac>
    c4a8:	add	r7, r7, #256	; 0x100
    c4ac:	add	r8, r8, #1024	; 0x400
    c4b0:	cmp	r7, r6
    c4b4:	blt	c470 <ReadInt32Data+0x984>
    c4b8:	mov	r6, r9
    c4bc:	mov	r9, r0
    c4c0:	sub	r3, fp, #256	; 0x100
    c4c4:	sub	r3, r3, #1
    c4c8:	bic	r3, r3, #255	; 0xff
    c4cc:	add	r4, r3, #256	; 0x100
    c4d0:	cmp	fp, r4
    c4d4:	ble	cadc <ReadInt32Data+0xff0>
    c4d8:	sub	fp, fp, r4
    c4dc:	ldr	r3, [r6]
    c4e0:	mov	r2, fp
    c4e4:	ldr	r1, [sp]
    c4e8:	add	r0, sp, #24
    c4ec:	bl	1520 <fread@plt>
    c4f0:	ldr	r3, [sp, #8]
    c4f4:	add	r5, r3, r0
    c4f8:	cmp	fp, #0
    c4fc:	ble	cadc <ReadInt32Data+0xff0>
    c500:	ldr	r1, [sp, #4]
    c504:	add	r2, r1, r4, lsl #2
    c508:	add	r3, fp, r4
    c50c:	add	r3, r1, r3, lsl #2
    c510:	ldr	r1, [r9, #4]!
    c514:	str	r1, [r2], #4
    c518:	cmp	r2, r3
    c51c:	bne	c510 <ReadInt32Data+0xa24>
    c520:	b	cadc <ReadInt32Data+0xff0>
    c524:	ldr	r3, [r6]
    c528:	mov	r2, fp
    c52c:	ldr	r1, [sp]
    c530:	add	r0, sp, #24
    c534:	bl	1520 <fread@plt>
    c538:	mov	r5, r0
    c53c:	cmp	fp, #0
    c540:	ble	cadc <ReadInt32Data+0xff0>
    c544:	add	r2, sp, #20
    c548:	ldr	r1, [sp, #4]
    c54c:	mov	r3, r1
    c550:	add	r0, r1, fp, lsl #2
    c554:	ldr	r1, [r2, #4]!
    c558:	str	r1, [r3], #4
    c55c:	cmp	r3, r0
    c560:	bne	c554 <ReadInt32Data+0xa68>
    c564:	b	cadc <ReadInt32Data+0xff0>
    c568:	ldr	r5, [r6, #20]
    c56c:	cmp	r5, #0
    c570:	beq	c6b4 <ReadInt32Data+0xbc8>
    c574:	cmp	fp, #256	; 0x100
    c578:	ble	c668 <ReadInt32Data+0xb7c>
    c57c:	sub	r3, fp, #256	; 0x100
    c580:	ldr	r2, [sp, #4]
    c584:	sub	sl, r2, #4
    c588:	mov	r9, #0
    c58c:	mov	r5, r9
    c590:	add	r2, sp, #24
    c594:	str	r2, [sp, #16]
    c598:	add	r8, sp, #536	; 0x218
    c59c:	str	fp, [sp, #20]
    c5a0:	mov	fp, r3
    c5a4:	ldr	r3, [r6]
    c5a8:	mov	r2, #256	; 0x100
    c5ac:	ldr	r1, [sp]
    c5b0:	ldr	r4, [sp, #16]
    c5b4:	mov	r0, r4
    c5b8:	bl	1520 <fread@plt>
    c5bc:	add	r5, r5, r0
    c5c0:	str	r5, [sp, #8]
    c5c4:	str	r4, [sp, #12]
    c5c8:	mov	r7, sl
    c5cc:	mov	r0, r4
    c5d0:	bl	1904 <Mat_int16Swap>
    c5d4:	str	r0, [r7, #4]!
    c5d8:	add	r4, r4, #2
    c5dc:	cmp	r4, r8
    c5e0:	bne	c5cc <ReadInt32Data+0xae0>
    c5e4:	add	r9, r9, #256	; 0x100
    c5e8:	add	sl, sl, #1024	; 0x400
    c5ec:	cmp	r9, fp
    c5f0:	blt	c5a4 <ReadInt32Data+0xab8>
    c5f4:	ldr	fp, [sp, #20]
    c5f8:	sub	r3, fp, #256	; 0x100
    c5fc:	sub	r3, r3, #1
    c600:	bic	r3, r3, #255	; 0xff
    c604:	add	r4, r3, #256	; 0x100
    c608:	cmp	fp, r4
    c60c:	ble	cadc <ReadInt32Data+0xff0>
    c610:	sub	fp, fp, r4
    c614:	ldr	r3, [r6]
    c618:	mov	r2, fp
    c61c:	ldr	r1, [sp]
    c620:	add	r0, sp, #24
    c624:	bl	1520 <fread@plt>
    c628:	ldr	r3, [sp, #8]
    c62c:	add	r5, r3, r0
    c630:	cmp	fp, #0
    c634:	ble	cadc <ReadInt32Data+0xff0>
    c638:	ldr	r3, [sp, #4]
    c63c:	add	r6, r3, r4, lsl #2
    c640:	add	r4, fp, r4
    c644:	add	r4, r3, r4, lsl #2
    c648:	ldr	r7, [sp, #12]
    c64c:	mov	r0, r7
    c650:	bl	1904 <Mat_int16Swap>
    c654:	str	r0, [r6], #4
    c658:	add	r7, r7, #2
    c65c:	cmp	r6, r4
    c660:	bne	c64c <ReadInt32Data+0xb60>
    c664:	b	cadc <ReadInt32Data+0xff0>
    c668:	ldr	r3, [r6]
    c66c:	mov	r2, fp
    c670:	ldr	r1, [sp]
    c674:	add	r0, sp, #24
    c678:	bl	1520 <fread@plt>
    c67c:	mov	r5, r0
    c680:	cmp	fp, #0
    c684:	ble	cadc <ReadInt32Data+0xff0>
    c688:	add	r6, sp, #24
    c68c:	ldr	r3, [sp, #4]
    c690:	mov	r4, r3
    c694:	add	fp, r3, fp, lsl #2
    c698:	mov	r0, r6
    c69c:	bl	1904 <Mat_int16Swap>
    c6a0:	str	r0, [r4], #4
    c6a4:	add	r6, r6, #2
    c6a8:	cmp	r4, fp
    c6ac:	bne	c698 <ReadInt32Data+0xbac>
    c6b0:	b	cadc <ReadInt32Data+0xff0>
    c6b4:	cmp	fp, #256	; 0x100
    c6b8:	ble	c794 <ReadInt32Data+0xca8>
    c6bc:	sub	r3, fp, #256	; 0x100
    c6c0:	ldr	r2, [sp, #4]
    c6c4:	sub	r8, r2, #4
    c6c8:	mov	r7, r5
    c6cc:	add	sl, sp, #24
    c6d0:	add	r4, sl, #508	; 0x1fc
    c6d4:	add	r4, r4, #2
    c6d8:	mov	r9, r6
    c6dc:	mov	r6, r3
    c6e0:	ldr	r3, [r9]
    c6e4:	mov	r2, #256	; 0x100
    c6e8:	ldr	r1, [sp]
    c6ec:	mov	r0, sl
    c6f0:	bl	1520 <fread@plt>
    c6f4:	add	r5, r5, r0
    c6f8:	str	r5, [sp, #8]
    c6fc:	sub	r0, sl, #2
    c700:	mov	r2, r8
    c704:	mov	r3, r0
    c708:	ldrsh	r1, [r3, #2]!
    c70c:	str	r1, [r2, #4]!
    c710:	cmp	r3, r4
    c714:	bne	c708 <ReadInt32Data+0xc1c>
    c718:	add	r7, r7, #256	; 0x100
    c71c:	add	r8, r8, #1024	; 0x400
    c720:	cmp	r7, r6
    c724:	blt	c6e0 <ReadInt32Data+0xbf4>
    c728:	mov	r6, r9
    c72c:	mov	r9, r0
    c730:	sub	r3, fp, #256	; 0x100
    c734:	sub	r3, r3, #1
    c738:	bic	r3, r3, #255	; 0xff
    c73c:	add	r4, r3, #256	; 0x100
    c740:	cmp	fp, r4
    c744:	ble	cadc <ReadInt32Data+0xff0>
    c748:	sub	fp, fp, r4
    c74c:	ldr	r3, [r6]
    c750:	mov	r2, fp
    c754:	ldr	r1, [sp]
    c758:	add	r0, sp, #24
    c75c:	bl	1520 <fread@plt>
    c760:	ldr	r3, [sp, #8]
    c764:	add	r5, r3, r0
    c768:	cmp	fp, #0
    c76c:	ble	cadc <ReadInt32Data+0xff0>
    c770:	ldr	r1, [sp, #4]
    c774:	add	r2, r1, r4, lsl #2
    c778:	add	r3, fp, r4
    c77c:	add	r3, r1, r3, lsl #2
    c780:	ldrsh	r1, [r9, #2]!
    c784:	str	r1, [r2], #4
    c788:	cmp	r2, r3
    c78c:	bne	c780 <ReadInt32Data+0xc94>
    c790:	b	cadc <ReadInt32Data+0xff0>
    c794:	ldr	r3, [r6]
    c798:	mov	r2, fp
    c79c:	ldr	r1, [sp]
    c7a0:	add	r0, sp, #24
    c7a4:	bl	1520 <fread@plt>
    c7a8:	mov	r5, r0
    c7ac:	cmp	fp, #0
    c7b0:	ble	cadc <ReadInt32Data+0xff0>
    c7b4:	add	r2, sp, #22
    c7b8:	ldr	r1, [sp, #4]
    c7bc:	mov	r3, r1
    c7c0:	add	r0, r1, fp, lsl #2
    c7c4:	ldrsh	r1, [r2, #2]!
    c7c8:	str	r1, [r3], #4
    c7cc:	cmp	r3, r0
    c7d0:	bne	c7c4 <ReadInt32Data+0xcd8>
    c7d4:	b	cadc <ReadInt32Data+0xff0>
    c7d8:	ldr	r5, [r6, #20]
    c7dc:	cmp	r5, #0
    c7e0:	beq	c924 <ReadInt32Data+0xe38>
    c7e4:	cmp	fp, #256	; 0x100
    c7e8:	ble	c8d8 <ReadInt32Data+0xdec>
    c7ec:	sub	r3, fp, #256	; 0x100
    c7f0:	ldr	r2, [sp, #4]
    c7f4:	sub	sl, r2, #4
    c7f8:	mov	r9, #0
    c7fc:	mov	r5, r9
    c800:	add	r2, sp, #24
    c804:	str	r2, [sp, #16]
    c808:	add	r8, sp, #536	; 0x218
    c80c:	str	fp, [sp, #20]
    c810:	mov	fp, r3
    c814:	ldr	r3, [r6]
    c818:	mov	r2, #256	; 0x100
    c81c:	ldr	r1, [sp]
    c820:	ldr	r4, [sp, #16]
    c824:	mov	r0, r4
    c828:	bl	1520 <fread@plt>
    c82c:	add	r5, r5, r0
    c830:	str	r5, [sp, #8]
    c834:	str	r4, [sp, #12]
    c838:	mov	r7, sl
    c83c:	mov	r0, r4
    c840:	bl	1924 <Mat_uint16Swap>
    c844:	str	r0, [r7, #4]!
    c848:	add	r4, r4, #2
    c84c:	cmp	r4, r8
    c850:	bne	c83c <ReadInt32Data+0xd50>
    c854:	add	r9, r9, #256	; 0x100
    c858:	add	sl, sl, #1024	; 0x400
    c85c:	cmp	r9, fp
    c860:	blt	c814 <ReadInt32Data+0xd28>
    c864:	ldr	fp, [sp, #20]
    c868:	sub	r3, fp, #256	; 0x100
    c86c:	sub	r3, r3, #1
    c870:	bic	r3, r3, #255	; 0xff
    c874:	add	r4, r3, #256	; 0x100
    c878:	cmp	fp, r4
    c87c:	ble	cadc <ReadInt32Data+0xff0>
    c880:	sub	fp, fp, r4
    c884:	ldr	r3, [r6]
    c888:	mov	r2, fp
    c88c:	ldr	r1, [sp]
    c890:	add	r0, sp, #24
    c894:	bl	1520 <fread@plt>
    c898:	ldr	r3, [sp, #8]
    c89c:	add	r5, r3, r0
    c8a0:	cmp	fp, #0
    c8a4:	ble	cadc <ReadInt32Data+0xff0>
    c8a8:	ldr	r3, [sp, #4]
    c8ac:	add	r6, r3, r4, lsl #2
    c8b0:	add	r4, fp, r4
    c8b4:	add	r4, r3, r4, lsl #2
    c8b8:	ldr	r7, [sp, #12]
    c8bc:	mov	r0, r7
    c8c0:	bl	1924 <Mat_uint16Swap>
    c8c4:	str	r0, [r6], #4
    c8c8:	add	r7, r7, #2
    c8cc:	cmp	r6, r4
    c8d0:	bne	c8bc <ReadInt32Data+0xdd0>
    c8d4:	b	cadc <ReadInt32Data+0xff0>
    c8d8:	ldr	r3, [r6]
    c8dc:	mov	r2, fp
    c8e0:	ldr	r1, [sp]
    c8e4:	add	r0, sp, #24
    c8e8:	bl	1520 <fread@plt>
    c8ec:	mov	r5, r0
    c8f0:	cmp	fp, #0
    c8f4:	ble	cadc <ReadInt32Data+0xff0>
    c8f8:	add	r6, sp, #24
    c8fc:	ldr	r3, [sp, #4]
    c900:	mov	r4, r3
    c904:	add	fp, r3, fp, lsl #2
    c908:	mov	r0, r6
    c90c:	bl	1924 <Mat_uint16Swap>
    c910:	str	r0, [r4], #4
    c914:	add	r6, r6, #2
    c918:	cmp	r4, fp
    c91c:	bne	c908 <ReadInt32Data+0xe1c>
    c920:	b	cadc <ReadInt32Data+0xff0>
    c924:	cmp	fp, #256	; 0x100
    c928:	ble	ca04 <ReadInt32Data+0xf18>
    c92c:	sub	r3, fp, #256	; 0x100
    c930:	ldr	r2, [sp, #4]
    c934:	sub	r8, r2, #4
    c938:	mov	r7, r5
    c93c:	add	sl, sp, #24
    c940:	add	r4, sl, #508	; 0x1fc
    c944:	add	r4, r4, #2
    c948:	mov	r9, r6
    c94c:	mov	r6, r3
    c950:	ldr	r3, [r9]
    c954:	mov	r2, #256	; 0x100
    c958:	ldr	r1, [sp]
    c95c:	mov	r0, sl
    c960:	bl	1520 <fread@plt>
    c964:	add	r5, r5, r0
    c968:	str	r5, [sp, #8]
    c96c:	sub	r0, sl, #2
    c970:	mov	r2, r8
    c974:	mov	r3, r0
    c978:	ldrh	r1, [r3, #2]!
    c97c:	str	r1, [r2, #4]!
    c980:	cmp	r3, r4
    c984:	bne	c978 <ReadInt32Data+0xe8c>
    c988:	add	r7, r7, #256	; 0x100
    c98c:	add	r8, r8, #1024	; 0x400
    c990:	cmp	r7, r6
    c994:	blt	c950 <ReadInt32Data+0xe64>
    c998:	mov	r6, r9
    c99c:	mov	r9, r0
    c9a0:	sub	r3, fp, #256	; 0x100
    c9a4:	sub	r3, r3, #1
    c9a8:	bic	r3, r3, #255	; 0xff
    c9ac:	add	r4, r3, #256	; 0x100
    c9b0:	cmp	fp, r4
    c9b4:	ble	cadc <ReadInt32Data+0xff0>
    c9b8:	sub	fp, fp, r4
    c9bc:	ldr	r3, [r6]
    c9c0:	mov	r2, fp
    c9c4:	ldr	r1, [sp]
    c9c8:	add	r0, sp, #24
    c9cc:	bl	1520 <fread@plt>
    c9d0:	ldr	r3, [sp, #8]
    c9d4:	add	r5, r3, r0
    c9d8:	cmp	fp, #0
    c9dc:	ble	cadc <ReadInt32Data+0xff0>
    c9e0:	ldr	r1, [sp, #4]
    c9e4:	add	r2, r1, r4, lsl #2
    c9e8:	add	r3, fp, r4
    c9ec:	add	r3, r1, r3, lsl #2
    c9f0:	ldrh	r1, [r9, #2]!
    c9f4:	str	r1, [r2], #4
    c9f8:	cmp	r2, r3
    c9fc:	bne	c9f0 <ReadInt32Data+0xf04>
    ca00:	b	cadc <ReadInt32Data+0xff0>
    ca04:	ldr	r3, [r6]
    ca08:	mov	r2, fp
    ca0c:	ldr	r1, [sp]
    ca10:	add	r0, sp, #24
    ca14:	bl	1520 <fread@plt>
    ca18:	mov	r5, r0
    ca1c:	cmp	fp, #0
    ca20:	ble	cadc <ReadInt32Data+0xff0>
    ca24:	add	r2, sp, #22
    ca28:	ldr	r1, [sp, #4]
    ca2c:	mov	r3, r1
    ca30:	add	r0, r1, fp, lsl #2
    ca34:	ldrh	r1, [r2, #2]!
    ca38:	str	r1, [r3], #4
    ca3c:	cmp	r3, r0
    ca40:	bne	ca34 <ReadInt32Data+0xf48>
    ca44:	b	cadc <ReadInt32Data+0xff0>
    ca48:	cmp	fp, #256	; 0x100
    ca4c:	ble	cb04 <ReadInt32Data+0x1018>
    ca50:	sub	r3, fp, #256	; 0x100
    ca54:	ldr	r2, [sp, #4]
    ca58:	sub	r8, r2, #4
    ca5c:	mov	r7, #0
    ca60:	mov	r5, r7
    ca64:	add	sl, sp, #24
    ca68:	add	r4, sl, #255	; 0xff
    ca6c:	mov	r9, r6
    ca70:	mov	r6, r3
    ca74:	ldr	r3, [r9]
    ca78:	mov	r2, #256	; 0x100
    ca7c:	ldr	r1, [sp]
    ca80:	mov	r0, sl
    ca84:	bl	1520 <fread@plt>
    ca88:	add	r5, r5, r0
    ca8c:	str	r5, [sp, #8]
    ca90:	sub	r0, sl, #1
    ca94:	mov	r2, r8
    ca98:	mov	r3, r0
    ca9c:	ldrsb	r1, [r3, #1]!
    caa0:	str	r1, [r2, #4]!
    caa4:	cmp	r3, r4
    caa8:	bne	ca9c <ReadInt32Data+0xfb0>
    caac:	add	r7, r7, #256	; 0x100
    cab0:	add	r8, r8, #1024	; 0x400
    cab4:	cmp	r7, r6
    cab8:	blt	ca74 <ReadInt32Data+0xf88>
    cabc:	mov	r6, r9
    cac0:	mov	r9, r0
    cac4:	sub	r3, fp, #256	; 0x100
    cac8:	sub	r3, r3, #1
    cacc:	bic	r3, r3, #255	; 0xff
    cad0:	add	r4, r3, #256	; 0x100
    cad4:	cmp	fp, r4
    cad8:	bgt	cb48 <ReadInt32Data+0x105c>
    cadc:	ldr	r3, [sp]
    cae0:	mul	r0, r3, r5
    cae4:	add	sp, sp, #2064	; 0x810
    cae8:	add	sp, sp, #12
    caec:	ldrd	r4, [sp]
    caf0:	ldrd	r6, [sp, #8]
    caf4:	ldrd	r8, [sp, #16]
    caf8:	ldrd	sl, [sp, #24]
    cafc:	add	sp, sp, #32
    cb00:	pop	{pc}		; (ldr pc, [sp], #4)
    cb04:	ldr	r3, [r6]
    cb08:	mov	r2, fp
    cb0c:	ldr	r1, [sp]
    cb10:	add	r0, sp, #24
    cb14:	bl	1520 <fread@plt>
    cb18:	mov	r5, r0
    cb1c:	cmp	fp, #0
    cb20:	ble	cadc <ReadInt32Data+0xff0>
    cb24:	add	r2, sp, #23
    cb28:	ldr	r1, [sp, #4]
    cb2c:	mov	r3, r1
    cb30:	add	r0, r1, fp, lsl #2
    cb34:	ldrsb	r1, [r2, #1]!
    cb38:	str	r1, [r3], #4
    cb3c:	cmp	r0, r3
    cb40:	bne	cb34 <ReadInt32Data+0x1048>
    cb44:	b	cadc <ReadInt32Data+0xff0>
    cb48:	sub	fp, fp, r4
    cb4c:	ldr	r3, [r6]
    cb50:	mov	r2, fp
    cb54:	ldr	r1, [sp]
    cb58:	add	r0, sp, #24
    cb5c:	bl	1520 <fread@plt>
    cb60:	ldr	r3, [sp, #8]
    cb64:	add	r5, r3, r0
    cb68:	cmp	fp, #0
    cb6c:	ble	cadc <ReadInt32Data+0xff0>
    cb70:	ldr	r1, [sp, #4]
    cb74:	add	r2, r1, r4, lsl #2
    cb78:	add	r3, fp, r4
    cb7c:	add	r3, r1, r3, lsl #2
    cb80:	ldrsb	r1, [r9, #1]!
    cb84:	str	r1, [r2], #4
    cb88:	cmp	r2, r3
    cb8c:	bne	cb80 <ReadInt32Data+0x1094>
    cb90:	b	cadc <ReadInt32Data+0xff0>
    cb94:	cmp	fp, #256	; 0x100
    cb98:	ble	cc74 <ReadInt32Data+0x1188>
    cb9c:	sub	r3, fp, #256	; 0x100
    cba0:	ldr	r2, [sp, #4]
    cba4:	sub	r8, r2, #4
    cba8:	mov	r7, #0
    cbac:	mov	r5, r7
    cbb0:	add	sl, sp, #24
    cbb4:	add	r4, sl, #255	; 0xff
    cbb8:	mov	r9, r6
    cbbc:	mov	r6, r3
    cbc0:	ldr	r3, [r9]
    cbc4:	mov	r2, #256	; 0x100
    cbc8:	ldr	r1, [sp]
    cbcc:	mov	r0, sl
    cbd0:	bl	1520 <fread@plt>
    cbd4:	add	r5, r5, r0
    cbd8:	str	r5, [sp, #8]
    cbdc:	sub	r0, sl, #1
    cbe0:	mov	r2, r8
    cbe4:	mov	r3, r0
    cbe8:	ldrb	r1, [r3, #1]!
    cbec:	str	r1, [r2, #4]!
    cbf0:	cmp	r3, r4
    cbf4:	bne	cbe8 <ReadInt32Data+0x10fc>
    cbf8:	add	r7, r7, #256	; 0x100
    cbfc:	add	r8, r8, #1024	; 0x400
    cc00:	cmp	r7, r6
    cc04:	blt	cbc0 <ReadInt32Data+0x10d4>
    cc08:	mov	r6, r9
    cc0c:	mov	r9, r0
    cc10:	sub	r3, fp, #256	; 0x100
    cc14:	sub	r3, r3, #1
    cc18:	bic	r3, r3, #255	; 0xff
    cc1c:	add	r4, r3, #256	; 0x100
    cc20:	cmp	fp, r4
    cc24:	ble	cadc <ReadInt32Data+0xff0>
    cc28:	sub	fp, fp, r4
    cc2c:	ldr	r3, [r6]
    cc30:	mov	r2, fp
    cc34:	ldr	r1, [sp]
    cc38:	add	r0, sp, #24
    cc3c:	bl	1520 <fread@plt>
    cc40:	ldr	r3, [sp, #8]
    cc44:	add	r5, r3, r0
    cc48:	cmp	fp, #0
    cc4c:	ble	cadc <ReadInt32Data+0xff0>
    cc50:	ldr	r1, [sp, #4]
    cc54:	add	r2, r1, r4, lsl #2
    cc58:	add	r3, fp, r4
    cc5c:	add	r3, r1, r3, lsl #2
    cc60:	ldrb	r1, [r9, #1]!
    cc64:	str	r1, [r2], #4
    cc68:	cmp	r2, r3
    cc6c:	bne	cc60 <ReadInt32Data+0x1174>
    cc70:	b	cadc <ReadInt32Data+0xff0>
    cc74:	ldr	r3, [r6]
    cc78:	mov	r2, fp
    cc7c:	ldr	r1, [sp]
    cc80:	add	r0, sp, #24
    cc84:	bl	1520 <fread@plt>
    cc88:	mov	r5, r0
    cc8c:	cmp	fp, #0
    cc90:	ble	cadc <ReadInt32Data+0xff0>
    cc94:	add	r2, sp, #23
    cc98:	ldr	r1, [sp, #4]
    cc9c:	mov	r3, r1
    cca0:	add	r0, r1, fp, lsl #2
    cca4:	ldrb	r1, [r2, #1]!
    cca8:	str	r1, [r3], #4
    ccac:	cmp	r3, r0
    ccb0:	bne	cca4 <ReadInt32Data+0x11b8>
    ccb4:	b	cadc <ReadInt32Data+0xff0>
    ccb8:	cmp	r4, #12
    ccbc:	beq	cdcc <ReadInt32Data+0x12e0>
    ccc0:	cmp	r4, #13
    ccc4:	movne	r5, #0
    ccc8:	bne	cadc <ReadInt32Data+0xff0>
    cccc:	ldr	r5, [r6, #20]
    ccd0:	cmp	r5, #0
    ccd4:	beq	d07c <ReadInt32Data+0x1590>
    ccd8:	cmp	fp, #256	; 0x100
    ccdc:	ble	d030 <ReadInt32Data+0x1544>
    cce0:	sub	r3, fp, #256	; 0x100
    cce4:	str	r3, [sp, #16]
    cce8:	ldr	r3, [sp, #4]
    ccec:	sub	sl, r3, #4
    ccf0:	mov	r9, #0
    ccf4:	mov	r5, r9
    ccf8:	add	r3, sp, #24
    ccfc:	str	r3, [sp, #20]
    cd00:	add	r8, sp, #2064	; 0x810
    cd04:	add	r8, r8, #8
    cd08:	ldr	r3, [r6]
    cd0c:	mov	r2, #256	; 0x100
    cd10:	ldr	r1, [sp]
    cd14:	ldr	r4, [sp, #20]
    cd18:	mov	r0, r4
    cd1c:	bl	1520 <fread@plt>
    cd20:	add	r5, r5, r0
    cd24:	str	r5, [sp, #8]
    cd28:	str	r4, [sp, #12]
    cd2c:	mov	r7, sl
    cd30:	mov	r0, r4
    cd34:	bl	1848 <Mat_uint64Swap>
    cd38:	str	r0, [r7, #4]!
    cd3c:	add	r4, r4, #8
    cd40:	cmp	r8, r4
    cd44:	bne	cd30 <ReadInt32Data+0x1244>
    cd48:	add	r9, r9, #256	; 0x100
    cd4c:	add	sl, sl, #1024	; 0x400
    cd50:	ldr	r3, [sp, #16]
    cd54:	cmp	r9, r3
    cd58:	blt	cd08 <ReadInt32Data+0x121c>
    cd5c:	sub	r3, fp, #256	; 0x100
    cd60:	sub	r3, r3, #1
    cd64:	bic	r3, r3, #255	; 0xff
    cd68:	add	r4, r3, #256	; 0x100
    cd6c:	cmp	fp, r4
    cd70:	ble	cadc <ReadInt32Data+0xff0>
    cd74:	sub	fp, fp, r4
    cd78:	ldr	r3, [r6]
    cd7c:	mov	r2, fp
    cd80:	ldr	r1, [sp]
    cd84:	add	r0, sp, #24
    cd88:	bl	1520 <fread@plt>
    cd8c:	ldr	r3, [sp, #8]
    cd90:	add	r5, r3, r0
    cd94:	cmp	fp, #0
    cd98:	ble	cadc <ReadInt32Data+0xff0>
    cd9c:	ldr	r3, [sp, #4]
    cda0:	add	r6, r3, r4, lsl #2
    cda4:	add	r4, fp, r4
    cda8:	add	r4, r3, r4, lsl #2
    cdac:	ldr	r7, [sp, #12]
    cdb0:	mov	r0, r7
    cdb4:	bl	1848 <Mat_uint64Swap>
    cdb8:	str	r0, [r6], #4
    cdbc:	add	r7, r7, #8
    cdc0:	cmp	r4, r6
    cdc4:	bne	cdb0 <ReadInt32Data+0x12c4>
    cdc8:	b	cadc <ReadInt32Data+0xff0>
    cdcc:	ldr	r5, [r6, #20]
    cdd0:	cmp	r5, #0
    cdd4:	beq	cf18 <ReadInt32Data+0x142c>
    cdd8:	cmp	fp, #256	; 0x100
    cddc:	ble	cecc <ReadInt32Data+0x13e0>
    cde0:	sub	r3, fp, #256	; 0x100
    cde4:	str	r3, [sp, #16]
    cde8:	ldr	r3, [sp, #4]
    cdec:	sub	sl, r3, #4
    cdf0:	mov	r9, #0
    cdf4:	mov	r5, r9
    cdf8:	add	r3, sp, #24
    cdfc:	str	r3, [sp, #20]
    ce00:	add	r8, sp, #2064	; 0x810
    ce04:	add	r8, r8, #8
    ce08:	ldr	r3, [r6]
    ce0c:	mov	r2, #256	; 0x100
    ce10:	ldr	r1, [sp]
    ce14:	ldr	r4, [sp, #20]
    ce18:	mov	r0, r4
    ce1c:	bl	1520 <fread@plt>
    ce20:	add	r5, r5, r0
    ce24:	str	r5, [sp, #8]
    ce28:	str	r4, [sp, #12]
    ce2c:	mov	r7, sl
    ce30:	mov	r0, r4
    ce34:	bl	17ec <Mat_int64Swap>
    ce38:	str	r0, [r7, #4]!
    ce3c:	add	r4, r4, #8
    ce40:	cmp	r4, r8
    ce44:	bne	ce30 <ReadInt32Data+0x1344>
    ce48:	add	r9, r9, #256	; 0x100
    ce4c:	add	sl, sl, #1024	; 0x400
    ce50:	ldr	r3, [sp, #16]
    ce54:	cmp	r9, r3
    ce58:	blt	ce08 <ReadInt32Data+0x131c>
    ce5c:	sub	r3, fp, #256	; 0x100
    ce60:	sub	r3, r3, #1
    ce64:	bic	r3, r3, #255	; 0xff
    ce68:	add	r4, r3, #256	; 0x100
    ce6c:	cmp	fp, r4
    ce70:	ble	cadc <ReadInt32Data+0xff0>
    ce74:	sub	fp, fp, r4
    ce78:	ldr	r3, [r6]
    ce7c:	mov	r2, fp
    ce80:	ldr	r1, [sp]
    ce84:	add	r0, sp, #24
    ce88:	bl	1520 <fread@plt>
    ce8c:	ldr	r3, [sp, #8]
    ce90:	add	r5, r3, r0
    ce94:	cmp	fp, #0
    ce98:	ble	cadc <ReadInt32Data+0xff0>
    ce9c:	ldr	r3, [sp, #4]
    cea0:	add	r6, r3, r4, lsl #2
    cea4:	add	r4, fp, r4
    cea8:	add	r4, r3, r4, lsl #2
    ceac:	ldr	r7, [sp, #12]
    ceb0:	mov	r0, r7
    ceb4:	bl	17ec <Mat_int64Swap>
    ceb8:	str	r0, [r6], #4
    cebc:	add	r7, r7, #8
    cec0:	cmp	r4, r6
    cec4:	bne	ceb0 <ReadInt32Data+0x13c4>
    cec8:	b	cadc <ReadInt32Data+0xff0>
    cecc:	ldr	r3, [r6]
    ced0:	mov	r2, fp
    ced4:	ldr	r1, [sp]
    ced8:	add	r0, sp, #24
    cedc:	bl	1520 <fread@plt>
    cee0:	mov	r5, r0
    cee4:	cmp	fp, #0
    cee8:	ble	cadc <ReadInt32Data+0xff0>
    ceec:	add	r6, sp, #24
    cef0:	ldr	r3, [sp, #4]
    cef4:	mov	r4, r3
    cef8:	add	fp, r3, fp, lsl #2
    cefc:	mov	r0, r6
    cf00:	bl	17ec <Mat_int64Swap>
    cf04:	str	r0, [r4], #4
    cf08:	add	r6, r6, #8
    cf0c:	cmp	r4, fp
    cf10:	bne	cefc <ReadInt32Data+0x1410>
    cf14:	b	cadc <ReadInt32Data+0xff0>
    cf18:	cmp	fp, #256	; 0x100
    cf1c:	ble	cfec <ReadInt32Data+0x1500>
    cf20:	sub	r3, fp, #256	; 0x100
    cf24:	str	r3, [sp, #12]
    cf28:	ldr	r3, [sp, #4]
    cf2c:	sub	r9, r3, #4
    cf30:	mov	r8, r5
    cf34:	add	sl, sp, #24
    cf38:	add	r4, sp, #2064	; 0x810
    cf3c:	ldr	r3, [r6]
    cf40:	mov	r2, #256	; 0x100
    cf44:	ldr	r1, [sp]
    cf48:	mov	r0, sl
    cf4c:	bl	1520 <fread@plt>
    cf50:	add	r5, r5, r0
    cf54:	str	r5, [sp, #8]
    cf58:	sub	r7, sl, #8
    cf5c:	mov	r2, r9
    cf60:	mov	r3, r7
    cf64:	ldr	r1, [r3, #8]!
    cf68:	str	r1, [r2, #4]!
    cf6c:	cmp	r3, r4
    cf70:	bne	cf64 <ReadInt32Data+0x1478>
    cf74:	add	r8, r8, #256	; 0x100
    cf78:	add	r9, r9, #1024	; 0x400
    cf7c:	ldr	r3, [sp, #12]
    cf80:	cmp	r8, r3
    cf84:	blt	cf3c <ReadInt32Data+0x1450>
    cf88:	sub	r3, fp, #256	; 0x100
    cf8c:	sub	r3, r3, #1
    cf90:	bic	r3, r3, #255	; 0xff
    cf94:	add	r4, r3, #256	; 0x100
    cf98:	cmp	fp, r4
    cf9c:	ble	cadc <ReadInt32Data+0xff0>
    cfa0:	sub	fp, fp, r4
    cfa4:	ldr	r3, [r6]
    cfa8:	mov	r2, fp
    cfac:	ldr	r1, [sp]
    cfb0:	add	r0, sp, #24
    cfb4:	bl	1520 <fread@plt>
    cfb8:	ldr	r3, [sp, #8]
    cfbc:	add	r5, r3, r0
    cfc0:	cmp	fp, #0
    cfc4:	ble	cadc <ReadInt32Data+0xff0>
    cfc8:	ldr	r1, [sp, #4]
    cfcc:	add	r2, r1, r4, lsl #2
    cfd0:	add	r3, fp, r4
    cfd4:	add	r3, r1, r3, lsl #2
    cfd8:	ldr	r1, [r7, #8]!
    cfdc:	str	r1, [r2], #4
    cfe0:	cmp	r3, r2
    cfe4:	bne	cfd8 <ReadInt32Data+0x14ec>
    cfe8:	b	cadc <ReadInt32Data+0xff0>
    cfec:	ldr	r3, [r6]
    cff0:	mov	r2, fp
    cff4:	ldr	r1, [sp]
    cff8:	add	r0, sp, #24
    cffc:	bl	1520 <fread@plt>
    d000:	mov	r5, r0
    d004:	cmp	fp, #0
    d008:	ble	cadc <ReadInt32Data+0xff0>
    d00c:	add	r2, sp, #16
    d010:	ldr	r1, [sp, #4]
    d014:	mov	r3, r1
    d018:	add	r1, r1, fp, lsl #2
    d01c:	ldr	r0, [r2, #8]!
    d020:	str	r0, [r3], #4
    d024:	cmp	r1, r3
    d028:	bne	d01c <ReadInt32Data+0x1530>
    d02c:	b	cadc <ReadInt32Data+0xff0>
    d030:	ldr	r3, [r6]
    d034:	mov	r2, fp
    d038:	ldr	r1, [sp]
    d03c:	add	r0, sp, #24
    d040:	bl	1520 <fread@plt>
    d044:	mov	r5, r0
    d048:	cmp	fp, #0
    d04c:	ble	cadc <ReadInt32Data+0xff0>
    d050:	add	r6, sp, #24
    d054:	ldr	r3, [sp, #4]
    d058:	mov	r4, r3
    d05c:	add	fp, r3, fp, lsl #2
    d060:	mov	r0, r6
    d064:	bl	1848 <Mat_uint64Swap>
    d068:	str	r0, [r4], #4
    d06c:	add	r6, r6, #8
    d070:	cmp	r4, fp
    d074:	bne	d060 <ReadInt32Data+0x1574>
    d078:	b	cadc <ReadInt32Data+0xff0>
    d07c:	cmp	fp, #256	; 0x100
    d080:	ble	d150 <ReadInt32Data+0x1664>
    d084:	sub	r3, fp, #256	; 0x100
    d088:	str	r3, [sp, #12]
    d08c:	ldr	r3, [sp, #4]
    d090:	sub	r9, r3, #4
    d094:	mov	r8, r5
    d098:	add	sl, sp, #24
    d09c:	add	r4, sp, #2064	; 0x810
    d0a0:	ldr	r3, [r6]
    d0a4:	mov	r2, #256	; 0x100
    d0a8:	ldr	r1, [sp]
    d0ac:	mov	r0, sl
    d0b0:	bl	1520 <fread@plt>
    d0b4:	add	r5, r5, r0
    d0b8:	str	r5, [sp, #8]
    d0bc:	sub	r7, sl, #8
    d0c0:	mov	r2, r9
    d0c4:	mov	r3, r7
    d0c8:	ldr	r1, [r3, #8]!
    d0cc:	str	r1, [r2, #4]!
    d0d0:	cmp	r3, r4
    d0d4:	bne	d0c8 <ReadInt32Data+0x15dc>
    d0d8:	add	r8, r8, #256	; 0x100
    d0dc:	add	r9, r9, #1024	; 0x400
    d0e0:	ldr	r3, [sp, #12]
    d0e4:	cmp	r8, r3
    d0e8:	blt	d0a0 <ReadInt32Data+0x15b4>
    d0ec:	sub	r3, fp, #256	; 0x100
    d0f0:	sub	r3, r3, #1
    d0f4:	bic	r3, r3, #255	; 0xff
    d0f8:	add	r4, r3, #256	; 0x100
    d0fc:	cmp	fp, r4
    d100:	ble	cadc <ReadInt32Data+0xff0>
    d104:	sub	r8, fp, r4
    d108:	ldr	r3, [r6]
    d10c:	mov	r2, r8
    d110:	ldr	r1, [sp]
    d114:	add	r0, sp, #24
    d118:	bl	1520 <fread@plt>
    d11c:	ldr	r3, [sp, #8]
    d120:	add	r5, r3, r0
    d124:	cmp	r8, #0
    d128:	ble	cadc <ReadInt32Data+0xff0>
    d12c:	ldr	r1, [sp, #4]
    d130:	add	r2, r1, r4, lsl #2
    d134:	add	r3, r8, r4
    d138:	add	r3, r1, r3, lsl #2
    d13c:	ldr	r1, [r7, #8]!
    d140:	str	r1, [r2], #4
    d144:	cmp	r2, r3
    d148:	bne	d13c <ReadInt32Data+0x1650>
    d14c:	b	cadc <ReadInt32Data+0xff0>
    d150:	ldr	r3, [r6]
    d154:	mov	r2, fp
    d158:	ldr	r1, [sp]
    d15c:	add	r0, sp, #24
    d160:	bl	1520 <fread@plt>
    d164:	mov	r5, r0
    d168:	cmp	fp, #0
    d16c:	ble	cadc <ReadInt32Data+0xff0>
    d170:	add	r2, sp, #16
    d174:	ldr	r1, [sp, #4]
    d178:	mov	r3, r1
    d17c:	add	r1, r1, fp, lsl #2
    d180:	ldr	r0, [r2, #8]!
    d184:	str	r0, [r3], #4
    d188:	cmp	r3, r1
    d18c:	bne	d180 <ReadInt32Data+0x1694>
    d190:	b	cadc <ReadInt32Data+0xff0>
    d194:	mov	r0, #0
    d198:	bx	lr

0000d19c <ReadCompressedInt32Data>:
    d19c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    d1a0:	strd	r6, [sp, #8]
    d1a4:	strd	r8, [sp, #16]
    d1a8:	str	sl, [sp, #24]
    d1ac:	str	lr, [sp, #28]
    d1b0:	sub	sp, sp, #8
    d1b4:	ldr	r6, [sp, #40]	; 0x28
    d1b8:	mov	r7, r2
    d1bc:	mov	r9, r1
    d1c0:	clz	r1, r1
    d1c4:	lsr	r1, r1, #5
    d1c8:	cmp	r2, #0
    d1cc:	movne	r2, r1
    d1d0:	moveq	r2, #1
    d1d4:	cmp	r0, #0
    d1d8:	moveq	r2, #1
    d1dc:	cmp	r2, #0
    d1e0:	movne	r0, #0
    d1e4:	beq	d204 <ReadCompressedInt32Data+0x68>
    d1e8:	add	sp, sp, #8
    d1ec:	ldrd	r4, [sp]
    d1f0:	ldrd	r6, [sp, #8]
    d1f4:	ldrd	r8, [sp, #16]
    d1f8:	ldr	sl, [sp, #24]
    d1fc:	add	sp, sp, #28
    d200:	pop	{pc}		; (ldr pc, [sp], #4)
    d204:	mov	r8, r0
    d208:	mov	r5, r3
    d20c:	mov	r0, r3
    d210:	bl	1598 <Mat_SizeOf@plt>
    d214:	mov	r4, r0
    d218:	sub	r3, r5, #1
    d21c:	cmp	r3, #8
    d220:	addls	pc, pc, r3, lsl #2
    d224:	b	d608 <ReadCompressedInt32Data+0x46c>
    d228:	b	d28c <ReadCompressedInt32Data+0xf0>
    d22c:	b	d24c <ReadCompressedInt32Data+0xb0>
    d230:	b	d4f8 <ReadCompressedInt32Data+0x35c>
    d234:	b	d580 <ReadCompressedInt32Data+0x3e4>
    d238:	b	d3e8 <ReadCompressedInt32Data+0x24c>
    d23c:	b	d470 <ReadCompressedInt32Data+0x2d4>
    d240:	b	d358 <ReadCompressedInt32Data+0x1bc>
    d244:	b	d608 <ReadCompressedInt32Data+0x46c>
    d248:	b	d2c8 <ReadCompressedInt32Data+0x12c>
    d24c:	cmp	r6, #0
    d250:	movgt	r5, r7
    d254:	addgt	r7, r7, r6, lsl #2
    d258:	movgt	sl, sp
    d25c:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d260:	mov	r3, r4
    d264:	mov	r2, sl
    d268:	mov	r1, r9
    d26c:	mov	r0, r8
    d270:	bl	333c <InflateData>
    d274:	ldrb	r3, [sp]
    d278:	str	r3, [r5], #4
    d27c:	cmp	r7, r5
    d280:	bne	d260 <ReadCompressedInt32Data+0xc4>
    d284:	mul	r0, r4, r6
    d288:	b	d1e8 <ReadCompressedInt32Data+0x4c>
    d28c:	cmp	r6, #0
    d290:	movgt	r5, r7
    d294:	addgt	r7, r7, r6, lsl #2
    d298:	movgt	sl, sp
    d29c:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d2a0:	mov	r3, r4
    d2a4:	mov	r2, sl
    d2a8:	mov	r1, r9
    d2ac:	mov	r0, r8
    d2b0:	bl	333c <InflateData>
    d2b4:	ldrsb	r3, [sp]
    d2b8:	str	r3, [r5], #4
    d2bc:	cmp	r7, r5
    d2c0:	bne	d2a0 <ReadCompressedInt32Data+0x104>
    d2c4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d2c8:	ldr	r3, [r8, #20]
    d2cc:	cmp	r3, #0
    d2d0:	bne	d314 <ReadCompressedInt32Data+0x178>
    d2d4:	cmp	r6, #0
    d2d8:	movgt	r5, r7
    d2dc:	addgt	r7, r7, r6, lsl #2
    d2e0:	movgt	sl, sp
    d2e4:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d2e8:	mov	r3, r4
    d2ec:	mov	r2, sl
    d2f0:	mov	r1, r9
    d2f4:	mov	r0, r8
    d2f8:	bl	333c <InflateData>
    d2fc:	vldr	d7, [sp]
    d300:	vcvt.s32.f64	s14, d7
    d304:	vstmia	r5!, {s14}
    d308:	cmp	r5, r7
    d30c:	bne	d2e8 <ReadCompressedInt32Data+0x14c>
    d310:	b	d284 <ReadCompressedInt32Data+0xe8>
    d314:	cmp	r6, #0
    d318:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d31c:	mov	r5, r7
    d320:	add	r7, r7, r6, lsl #2
    d324:	mov	sl, sp
    d328:	mov	r3, r4
    d32c:	mov	r2, sl
    d330:	mov	r1, r9
    d334:	mov	r0, r8
    d338:	bl	333c <InflateData>
    d33c:	mov	r0, sl
    d340:	bl	1974 <Mat_doubleSwap>
    d344:	vcvt.s32.f64	s0, d0
    d348:	vstmia	r5!, {s0}
    d34c:	cmp	r5, r7
    d350:	bne	d328 <ReadCompressedInt32Data+0x18c>
    d354:	b	d284 <ReadCompressedInt32Data+0xe8>
    d358:	ldr	r3, [r8, #20]
    d35c:	cmp	r3, #0
    d360:	bne	d3a4 <ReadCompressedInt32Data+0x208>
    d364:	cmp	r6, #0
    d368:	movgt	r5, r7
    d36c:	addgt	r7, r7, r6, lsl #2
    d370:	movgt	sl, sp
    d374:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d378:	mov	r3, r4
    d37c:	mov	r2, sl
    d380:	mov	r1, r9
    d384:	mov	r0, r8
    d388:	bl	333c <InflateData>
    d38c:	vldr	s15, [sp]
    d390:	vcvt.s32.f32	s15, s15
    d394:	vstmia	r5!, {s15}
    d398:	cmp	r5, r7
    d39c:	bne	d378 <ReadCompressedInt32Data+0x1dc>
    d3a0:	b	d284 <ReadCompressedInt32Data+0xe8>
    d3a4:	cmp	r6, #0
    d3a8:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d3ac:	mov	r5, r7
    d3b0:	add	r7, r7, r6, lsl #2
    d3b4:	mov	sl, sp
    d3b8:	mov	r3, r4
    d3bc:	mov	r2, sl
    d3c0:	mov	r1, r9
    d3c4:	mov	r0, r8
    d3c8:	bl	333c <InflateData>
    d3cc:	mov	r0, sl
    d3d0:	bl	1944 <Mat_floatSwap>
    d3d4:	vcvt.s32.f32	s0, s0
    d3d8:	vstmia	r5!, {s0}
    d3dc:	cmp	r5, r7
    d3e0:	bne	d3b8 <ReadCompressedInt32Data+0x21c>
    d3e4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d3e8:	ldr	r3, [r8, #20]
    d3ec:	cmp	r3, #0
    d3f0:	bne	d430 <ReadCompressedInt32Data+0x294>
    d3f4:	cmp	r6, #0
    d3f8:	movgt	r5, r7
    d3fc:	addgt	r7, r7, r6, lsl #2
    d400:	movgt	sl, sp
    d404:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d408:	mov	r3, r4
    d40c:	mov	r2, sl
    d410:	mov	r1, r9
    d414:	mov	r0, r8
    d418:	bl	333c <InflateData>
    d41c:	ldr	r3, [sp]
    d420:	str	r3, [r5], #4
    d424:	cmp	r5, r7
    d428:	bne	d408 <ReadCompressedInt32Data+0x26c>
    d42c:	b	d284 <ReadCompressedInt32Data+0xe8>
    d430:	cmp	r6, #0
    d434:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d438:	mov	r5, r7
    d43c:	add	r7, r7, r6, lsl #2
    d440:	mov	sl, sp
    d444:	mov	r3, r4
    d448:	mov	r2, sl
    d44c:	mov	r1, r9
    d450:	mov	r0, r8
    d454:	bl	333c <InflateData>
    d458:	mov	r0, sl
    d45c:	bl	18a4 <Mat_int32Swap>
    d460:	str	r0, [r5], #4
    d464:	cmp	r5, r7
    d468:	bne	d444 <ReadCompressedInt32Data+0x2a8>
    d46c:	b	d284 <ReadCompressedInt32Data+0xe8>
    d470:	ldr	r3, [r8, #20]
    d474:	cmp	r3, #0
    d478:	bne	d4b8 <ReadCompressedInt32Data+0x31c>
    d47c:	cmp	r6, #0
    d480:	movgt	r5, r7
    d484:	addgt	r7, r7, r6, lsl #2
    d488:	movgt	sl, sp
    d48c:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d490:	mov	r3, r4
    d494:	mov	r2, sl
    d498:	mov	r1, r9
    d49c:	mov	r0, r8
    d4a0:	bl	333c <InflateData>
    d4a4:	ldr	r3, [sp]
    d4a8:	str	r3, [r5], #4
    d4ac:	cmp	r5, r7
    d4b0:	bne	d490 <ReadCompressedInt32Data+0x2f4>
    d4b4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d4b8:	cmp	r6, #0
    d4bc:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d4c0:	mov	r5, r7
    d4c4:	add	r7, r7, r6, lsl #2
    d4c8:	mov	sl, sp
    d4cc:	mov	r3, r4
    d4d0:	mov	r2, sl
    d4d4:	mov	r1, r9
    d4d8:	mov	r0, r8
    d4dc:	bl	333c <InflateData>
    d4e0:	mov	r0, sl
    d4e4:	bl	18d4 <Mat_uint32Swap>
    d4e8:	str	r0, [r5], #4
    d4ec:	cmp	r5, r7
    d4f0:	bne	d4cc <ReadCompressedInt32Data+0x330>
    d4f4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d4f8:	ldr	r3, [r8, #20]
    d4fc:	cmp	r3, #0
    d500:	bne	d540 <ReadCompressedInt32Data+0x3a4>
    d504:	cmp	r6, #0
    d508:	movgt	r5, r7
    d50c:	addgt	r7, r7, r6, lsl #2
    d510:	movgt	sl, sp
    d514:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d518:	mov	r3, r4
    d51c:	mov	r2, sl
    d520:	mov	r1, r9
    d524:	mov	r0, r8
    d528:	bl	333c <InflateData>
    d52c:	ldrsh	r3, [sp]
    d530:	str	r3, [r5], #4
    d534:	cmp	r7, r5
    d538:	bne	d518 <ReadCompressedInt32Data+0x37c>
    d53c:	b	d284 <ReadCompressedInt32Data+0xe8>
    d540:	cmp	r6, #0
    d544:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d548:	mov	r5, r7
    d54c:	add	r7, r7, r6, lsl #2
    d550:	mov	sl, sp
    d554:	mov	r3, r4
    d558:	mov	r2, sl
    d55c:	mov	r1, r9
    d560:	mov	r0, r8
    d564:	bl	333c <InflateData>
    d568:	mov	r0, sl
    d56c:	bl	1904 <Mat_int16Swap>
    d570:	str	r0, [r5], #4
    d574:	cmp	r7, r5
    d578:	bne	d554 <ReadCompressedInt32Data+0x3b8>
    d57c:	b	d284 <ReadCompressedInt32Data+0xe8>
    d580:	ldr	r3, [r8, #20]
    d584:	cmp	r3, #0
    d588:	bne	d5c8 <ReadCompressedInt32Data+0x42c>
    d58c:	cmp	r6, #0
    d590:	movgt	r5, r7
    d594:	addgt	r7, r7, r6, lsl #2
    d598:	movgt	sl, sp
    d59c:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d5a0:	mov	r3, r4
    d5a4:	mov	r2, sl
    d5a8:	mov	r1, r9
    d5ac:	mov	r0, r8
    d5b0:	bl	333c <InflateData>
    d5b4:	ldrh	r3, [sp]
    d5b8:	str	r3, [r5], #4
    d5bc:	cmp	r5, r7
    d5c0:	bne	d5a0 <ReadCompressedInt32Data+0x404>
    d5c4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d5c8:	cmp	r6, #0
    d5cc:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d5d0:	mov	r5, r7
    d5d4:	add	r7, r7, r6, lsl #2
    d5d8:	mov	sl, sp
    d5dc:	mov	r3, r4
    d5e0:	mov	r2, sl
    d5e4:	mov	r1, r9
    d5e8:	mov	r0, r8
    d5ec:	bl	333c <InflateData>
    d5f0:	mov	r0, sl
    d5f4:	bl	1924 <Mat_uint16Swap>
    d5f8:	str	r0, [r5], #4
    d5fc:	cmp	r7, r5
    d600:	bne	d5dc <ReadCompressedInt32Data+0x440>
    d604:	b	d284 <ReadCompressedInt32Data+0xe8>
    d608:	cmp	r5, #12
    d60c:	beq	d660 <ReadCompressedInt32Data+0x4c4>
    d610:	cmp	r5, #13
    d614:	bne	d284 <ReadCompressedInt32Data+0xe8>
    d618:	ldr	r3, [r8, #20]
    d61c:	cmp	r3, #0
    d620:	bne	d6e8 <ReadCompressedInt32Data+0x54c>
    d624:	cmp	r6, #0
    d628:	movgt	r5, r7
    d62c:	addgt	r7, r7, r6, lsl #2
    d630:	movgt	sl, sp
    d634:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d638:	mov	r3, r4
    d63c:	mov	r2, sl
    d640:	mov	r1, r9
    d644:	mov	r0, r8
    d648:	bl	333c <InflateData>
    d64c:	ldr	r3, [sp]
    d650:	str	r3, [r5], #4
    d654:	cmp	r7, r5
    d658:	bne	d638 <ReadCompressedInt32Data+0x49c>
    d65c:	b	d284 <ReadCompressedInt32Data+0xe8>
    d660:	ldr	r3, [r8, #20]
    d664:	cmp	r3, #0
    d668:	bne	d6a8 <ReadCompressedInt32Data+0x50c>
    d66c:	cmp	r6, #0
    d670:	movgt	r5, r7
    d674:	addgt	r7, r7, r6, lsl #2
    d678:	movgt	sl, sp
    d67c:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d680:	mov	r3, r4
    d684:	mov	r2, sl
    d688:	mov	r1, r9
    d68c:	mov	r0, r8
    d690:	bl	333c <InflateData>
    d694:	ldr	r3, [sp]
    d698:	str	r3, [r5], #4
    d69c:	cmp	r7, r5
    d6a0:	bne	d680 <ReadCompressedInt32Data+0x4e4>
    d6a4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d6a8:	cmp	r6, #0
    d6ac:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d6b0:	mov	r5, r7
    d6b4:	add	r7, r7, r6, lsl #2
    d6b8:	mov	sl, sp
    d6bc:	mov	r3, r4
    d6c0:	mov	r2, sl
    d6c4:	mov	r1, r9
    d6c8:	mov	r0, r8
    d6cc:	bl	333c <InflateData>
    d6d0:	mov	r0, sl
    d6d4:	bl	17ec <Mat_int64Swap>
    d6d8:	str	r0, [r5], #4
    d6dc:	cmp	r5, r7
    d6e0:	bne	d6bc <ReadCompressedInt32Data+0x520>
    d6e4:	b	d284 <ReadCompressedInt32Data+0xe8>
    d6e8:	cmp	r6, #0
    d6ec:	ble	d284 <ReadCompressedInt32Data+0xe8>
    d6f0:	mov	r5, r7
    d6f4:	add	r7, r7, r6, lsl #2
    d6f8:	mov	sl, sp
    d6fc:	mov	r3, r4
    d700:	mov	r2, sl
    d704:	mov	r1, r9
    d708:	mov	r0, r8
    d70c:	bl	333c <InflateData>
    d710:	mov	r0, sl
    d714:	bl	1848 <Mat_uint64Swap>
    d718:	str	r0, [r5], #4
    d71c:	cmp	r7, r5
    d720:	bne	d6fc <ReadCompressedInt32Data+0x560>
    d724:	b	d284 <ReadCompressedInt32Data+0xe8>

0000d728 <ReadUInt32Data>:
    d728:	cmp	r1, #0
    d72c:	cmpne	r0, #0
    d730:	beq	edd0 <ReadUInt32Data+0x16a8>
    d734:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d738:	strd	r6, [sp, #8]
    d73c:	strd	r8, [sp, #16]
    d740:	strd	sl, [sp, #24]
    d744:	str	lr, [sp, #32]
    d748:	sub	sp, sp, #2064	; 0x810
    d74c:	sub	sp, sp, #12
    d750:	mov	r6, r0
    d754:	mov	ip, r1
    d758:	ldr	r1, [r0]
    d75c:	cmp	r1, #0
    d760:	moveq	r0, #0
    d764:	beq	e720 <ReadUInt32Data+0xff8>
    d768:	str	ip, [sp, #4]
    d76c:	mov	fp, r3
    d770:	mov	r4, r2
    d774:	mov	r0, r2
    d778:	bl	1598 <Mat_SizeOf@plt>
    d77c:	str	r0, [sp]
    d780:	sub	r3, r4, #1
    d784:	cmp	r3, #8
    d788:	addls	pc, pc, r3, lsl #2
    d78c:	b	e8f4 <ReadUInt32Data+0x11cc>
    d790:	b	e684 <ReadUInt32Data+0xf5c>
    d794:	b	e7d0 <ReadUInt32Data+0x10a8>
    d798:	b	e1a4 <ReadUInt32Data+0xa7c>
    d79c:	b	e414 <ReadUInt32Data+0xcec>
    d7a0:	b	dcc4 <ReadUInt32Data+0x59c>
    d7a4:	b	df34 <ReadUInt32Data+0x80c>
    d7a8:	b	da3c <ReadUInt32Data+0x314>
    d7ac:	b	e8f4 <ReadUInt32Data+0x11cc>
    d7b0:	b	d7b4 <ReadUInt32Data+0x8c>
    d7b4:	ldr	r5, [r6, #20]
    d7b8:	cmp	r5, #0
    d7bc:	beq	d914 <ReadUInt32Data+0x1ec>
    d7c0:	cmp	fp, #256	; 0x100
    d7c4:	ble	d8c4 <ReadUInt32Data+0x19c>
    d7c8:	sub	r3, fp, #256	; 0x100
    d7cc:	ldr	r2, [sp, #4]
    d7d0:	sub	sl, r2, #4
    d7d4:	mov	r9, #0
    d7d8:	mov	r5, r9
    d7dc:	add	r2, sp, #24
    d7e0:	str	r2, [sp, #16]
    d7e4:	add	r8, sp, #2064	; 0x810
    d7e8:	add	r8, r8, #8
    d7ec:	str	fp, [sp, #20]
    d7f0:	mov	fp, r3
    d7f4:	ldr	r3, [r6]
    d7f8:	mov	r2, #256	; 0x100
    d7fc:	ldr	r1, [sp]
    d800:	ldr	r4, [sp, #16]
    d804:	mov	r0, r4
    d808:	bl	1520 <fread@plt>
    d80c:	add	r5, r5, r0
    d810:	str	r5, [sp, #8]
    d814:	str	r4, [sp, #12]
    d818:	mov	r7, sl
    d81c:	mov	r0, r4
    d820:	bl	1974 <Mat_doubleSwap>
    d824:	vcvt.u32.f64	s0, d0
    d828:	vmov	r3, s0
    d82c:	str	r3, [r7, #4]!
    d830:	add	r4, r4, #8
    d834:	cmp	r4, r8
    d838:	bne	d81c <ReadUInt32Data+0xf4>
    d83c:	add	r9, r9, #256	; 0x100
    d840:	add	sl, sl, #1024	; 0x400
    d844:	cmp	r9, fp
    d848:	blt	d7f4 <ReadUInt32Data+0xcc>
    d84c:	ldr	fp, [sp, #20]
    d850:	sub	r3, fp, #256	; 0x100
    d854:	sub	r3, r3, #1
    d858:	bic	r3, r3, #255	; 0xff
    d85c:	add	r4, r3, #256	; 0x100
    d860:	cmp	fp, r4
    d864:	ble	e718 <ReadUInt32Data+0xff0>
    d868:	sub	fp, fp, r4
    d86c:	ldr	r3, [r6]
    d870:	mov	r2, fp
    d874:	ldr	r1, [sp]
    d878:	add	r0, sp, #24
    d87c:	bl	1520 <fread@plt>
    d880:	ldr	r3, [sp, #8]
    d884:	add	r5, r3, r0
    d888:	cmp	fp, #0
    d88c:	ble	e718 <ReadUInt32Data+0xff0>
    d890:	ldr	r3, [sp, #4]
    d894:	add	r6, r3, r4, lsl #2
    d898:	add	r4, fp, r4
    d89c:	add	r4, r3, r4, lsl #2
    d8a0:	ldr	r7, [sp, #12]
    d8a4:	mov	r0, r7
    d8a8:	bl	1974 <Mat_doubleSwap>
    d8ac:	vcvt.u32.f64	s0, d0
    d8b0:	vstmia	r6!, {s0}
    d8b4:	add	r7, r7, #8
    d8b8:	cmp	r6, r4
    d8bc:	bne	d8a4 <ReadUInt32Data+0x17c>
    d8c0:	b	e718 <ReadUInt32Data+0xff0>
    d8c4:	ldr	r3, [r6]
    d8c8:	mov	r2, fp
    d8cc:	ldr	r1, [sp]
    d8d0:	add	r0, sp, #24
    d8d4:	bl	1520 <fread@plt>
    d8d8:	mov	r5, r0
    d8dc:	cmp	fp, #0
    d8e0:	ble	e718 <ReadUInt32Data+0xff0>
    d8e4:	add	r6, sp, #24
    d8e8:	ldr	r3, [sp, #4]
    d8ec:	mov	r4, r3
    d8f0:	add	fp, r3, fp, lsl #2
    d8f4:	mov	r0, r6
    d8f8:	bl	1974 <Mat_doubleSwap>
    d8fc:	vcvt.u32.f64	s0, d0
    d900:	vstmia	r4!, {s0}
    d904:	add	r6, r6, #8
    d908:	cmp	r4, fp
    d90c:	bne	d8f4 <ReadUInt32Data+0x1cc>
    d910:	b	e718 <ReadUInt32Data+0xff0>
    d914:	cmp	fp, #256	; 0x100
    d918:	ble	d9f4 <ReadUInt32Data+0x2cc>
    d91c:	sub	r9, fp, #256	; 0x100
    d920:	ldr	r3, [sp, #4]
    d924:	sub	r8, r3, #4
    d928:	mov	r7, r5
    d92c:	add	sl, sp, #24
    d930:	add	r4, sp, #2064	; 0x810
    d934:	add	r4, r4, #8
    d938:	ldr	r3, [r6]
    d93c:	mov	r2, #256	; 0x100
    d940:	ldr	r1, [sp]
    d944:	mov	r0, sl
    d948:	bl	1520 <fread@plt>
    d94c:	add	r5, r5, r0
    d950:	str	r5, [sp, #8]
    d954:	str	sl, [sp, #12]
    d958:	mov	r2, r8
    d95c:	mov	r3, sl
    d960:	vldmia	r3!, {d7}
    d964:	vcvt.u32.f64	s14, d7
    d968:	vmov	r1, s14
    d96c:	str	r1, [r2, #4]!
    d970:	cmp	r3, r4
    d974:	bne	d960 <ReadUInt32Data+0x238>
    d978:	add	r7, r7, #256	; 0x100
    d97c:	add	r8, r8, #1024	; 0x400
    d980:	cmp	r7, r9
    d984:	blt	d938 <ReadUInt32Data+0x210>
    d988:	sub	r3, fp, #256	; 0x100
    d98c:	sub	r3, r3, #1
    d990:	bic	r3, r3, #255	; 0xff
    d994:	add	r4, r3, #256	; 0x100
    d998:	cmp	fp, r4
    d99c:	ble	e718 <ReadUInt32Data+0xff0>
    d9a0:	sub	fp, fp, r4
    d9a4:	ldr	r3, [r6]
    d9a8:	mov	r2, fp
    d9ac:	ldr	r1, [sp]
    d9b0:	add	r0, sp, #24
    d9b4:	bl	1520 <fread@plt>
    d9b8:	ldr	r3, [sp, #8]
    d9bc:	add	r5, r3, r0
    d9c0:	cmp	fp, #0
    d9c4:	ble	e718 <ReadUInt32Data+0xff0>
    d9c8:	ldr	r1, [sp, #4]
    d9cc:	add	r2, r1, r4, lsl #2
    d9d0:	add	r3, fp, r4
    d9d4:	add	r3, r1, r3, lsl #2
    d9d8:	ldr	r1, [sp, #12]
    d9dc:	vldmia	r1!, {d7}
    d9e0:	vcvt.u32.f64	s14, d7
    d9e4:	vstmia	r2!, {s14}
    d9e8:	cmp	r2, r3
    d9ec:	bne	d9dc <ReadUInt32Data+0x2b4>
    d9f0:	b	e718 <ReadUInt32Data+0xff0>
    d9f4:	ldr	r3, [r6]
    d9f8:	mov	r2, fp
    d9fc:	ldr	r1, [sp]
    da00:	add	r0, sp, #24
    da04:	bl	1520 <fread@plt>
    da08:	mov	r5, r0
    da0c:	cmp	fp, #0
    da10:	ble	e718 <ReadUInt32Data+0xff0>
    da14:	add	r2, sp, #24
    da18:	ldr	r1, [sp, #4]
    da1c:	mov	r3, r1
    da20:	add	r1, r1, fp, lsl #2
    da24:	vldmia	r2!, {d7}
    da28:	vcvt.u32.f64	s14, d7
    da2c:	vstmia	r3!, {s14}
    da30:	cmp	r3, r1
    da34:	bne	da24 <ReadUInt32Data+0x2fc>
    da38:	b	e718 <ReadUInt32Data+0xff0>
    da3c:	ldr	r5, [r6, #20]
    da40:	cmp	r5, #0
    da44:	beq	db9c <ReadUInt32Data+0x474>
    da48:	cmp	fp, #256	; 0x100
    da4c:	ble	db4c <ReadUInt32Data+0x424>
    da50:	sub	r3, fp, #256	; 0x100
    da54:	ldr	r2, [sp, #4]
    da58:	sub	sl, r2, #4
    da5c:	mov	r9, #0
    da60:	mov	r5, r9
    da64:	add	r2, sp, #24
    da68:	str	r2, [sp, #16]
    da6c:	add	r8, sp, #1040	; 0x410
    da70:	add	r8, r8, #8
    da74:	str	fp, [sp, #20]
    da78:	mov	fp, r3
    da7c:	ldr	r3, [r6]
    da80:	mov	r2, #256	; 0x100
    da84:	ldr	r1, [sp]
    da88:	ldr	r4, [sp, #16]
    da8c:	mov	r0, r4
    da90:	bl	1520 <fread@plt>
    da94:	add	r5, r5, r0
    da98:	str	r5, [sp, #8]
    da9c:	str	r4, [sp, #12]
    daa0:	mov	r7, sl
    daa4:	mov	r0, r4
    daa8:	bl	1944 <Mat_floatSwap>
    daac:	vcvt.u32.f32	s0, s0
    dab0:	vmov	r3, s0
    dab4:	str	r3, [r7, #4]!
    dab8:	add	r4, r4, #4
    dabc:	cmp	r4, r8
    dac0:	bne	daa4 <ReadUInt32Data+0x37c>
    dac4:	add	r9, r9, #256	; 0x100
    dac8:	add	sl, sl, #1024	; 0x400
    dacc:	cmp	r9, fp
    dad0:	blt	da7c <ReadUInt32Data+0x354>
    dad4:	ldr	fp, [sp, #20]
    dad8:	sub	r3, fp, #256	; 0x100
    dadc:	sub	r3, r3, #1
    dae0:	bic	r3, r3, #255	; 0xff
    dae4:	add	r4, r3, #256	; 0x100
    dae8:	cmp	fp, r4
    daec:	ble	e718 <ReadUInt32Data+0xff0>
    daf0:	sub	fp, fp, r4
    daf4:	ldr	r3, [r6]
    daf8:	mov	r2, fp
    dafc:	ldr	r1, [sp]
    db00:	add	r0, sp, #24
    db04:	bl	1520 <fread@plt>
    db08:	ldr	r3, [sp, #8]
    db0c:	add	r5, r3, r0
    db10:	cmp	fp, #0
    db14:	ble	e718 <ReadUInt32Data+0xff0>
    db18:	ldr	r3, [sp, #4]
    db1c:	add	r6, r3, r4, lsl #2
    db20:	add	r4, fp, r4
    db24:	add	r4, r3, r4, lsl #2
    db28:	ldr	r7, [sp, #12]
    db2c:	mov	r0, r7
    db30:	bl	1944 <Mat_floatSwap>
    db34:	vcvt.u32.f32	s0, s0
    db38:	vstmia	r6!, {s0}
    db3c:	add	r7, r7, #4
    db40:	cmp	r6, r4
    db44:	bne	db2c <ReadUInt32Data+0x404>
    db48:	b	e718 <ReadUInt32Data+0xff0>
    db4c:	ldr	r3, [r6]
    db50:	mov	r2, fp
    db54:	ldr	r1, [sp]
    db58:	add	r0, sp, #24
    db5c:	bl	1520 <fread@plt>
    db60:	mov	r5, r0
    db64:	cmp	fp, #0
    db68:	ble	e718 <ReadUInt32Data+0xff0>
    db6c:	add	r6, sp, #24
    db70:	ldr	r3, [sp, #4]
    db74:	mov	r4, r3
    db78:	add	fp, r3, fp, lsl #2
    db7c:	mov	r0, r6
    db80:	bl	1944 <Mat_floatSwap>
    db84:	vcvt.u32.f32	s0, s0
    db88:	vstmia	r4!, {s0}
    db8c:	add	r6, r6, #4
    db90:	cmp	r4, fp
    db94:	bne	db7c <ReadUInt32Data+0x454>
    db98:	b	e718 <ReadUInt32Data+0xff0>
    db9c:	cmp	fp, #256	; 0x100
    dba0:	ble	dc7c <ReadUInt32Data+0x554>
    dba4:	sub	r9, fp, #256	; 0x100
    dba8:	ldr	r3, [sp, #4]
    dbac:	sub	r8, r3, #4
    dbb0:	mov	r7, r5
    dbb4:	add	sl, sp, #24
    dbb8:	add	r4, sp, #1040	; 0x410
    dbbc:	add	r4, r4, #8
    dbc0:	ldr	r3, [r6]
    dbc4:	mov	r2, #256	; 0x100
    dbc8:	ldr	r1, [sp]
    dbcc:	mov	r0, sl
    dbd0:	bl	1520 <fread@plt>
    dbd4:	add	r5, r5, r0
    dbd8:	str	r5, [sp, #8]
    dbdc:	str	sl, [sp, #12]
    dbe0:	mov	r2, r8
    dbe4:	mov	r3, sl
    dbe8:	vldmia	r3!, {s15}
    dbec:	vcvt.u32.f32	s15, s15
    dbf0:	vmov	r1, s15
    dbf4:	str	r1, [r2, #4]!
    dbf8:	cmp	r3, r4
    dbfc:	bne	dbe8 <ReadUInt32Data+0x4c0>
    dc00:	add	r7, r7, #256	; 0x100
    dc04:	add	r8, r8, #1024	; 0x400
    dc08:	cmp	r7, r9
    dc0c:	blt	dbc0 <ReadUInt32Data+0x498>
    dc10:	sub	r3, fp, #256	; 0x100
    dc14:	sub	r3, r3, #1
    dc18:	bic	r3, r3, #255	; 0xff
    dc1c:	add	r4, r3, #256	; 0x100
    dc20:	cmp	fp, r4
    dc24:	ble	e718 <ReadUInt32Data+0xff0>
    dc28:	sub	fp, fp, r4
    dc2c:	ldr	r3, [r6]
    dc30:	mov	r2, fp
    dc34:	ldr	r1, [sp]
    dc38:	add	r0, sp, #24
    dc3c:	bl	1520 <fread@plt>
    dc40:	ldr	r3, [sp, #8]
    dc44:	add	r5, r3, r0
    dc48:	cmp	fp, #0
    dc4c:	ble	e718 <ReadUInt32Data+0xff0>
    dc50:	ldr	r1, [sp, #4]
    dc54:	add	r2, r1, r4, lsl #2
    dc58:	add	r3, fp, r4
    dc5c:	add	r3, r1, r3, lsl #2
    dc60:	ldr	r1, [sp, #12]
    dc64:	vldmia	r1!, {s15}
    dc68:	vcvt.u32.f32	s15, s15
    dc6c:	vstmia	r2!, {s15}
    dc70:	cmp	r2, r3
    dc74:	bne	dc64 <ReadUInt32Data+0x53c>
    dc78:	b	e718 <ReadUInt32Data+0xff0>
    dc7c:	ldr	r3, [r6]
    dc80:	mov	r2, fp
    dc84:	ldr	r1, [sp]
    dc88:	add	r0, sp, #24
    dc8c:	bl	1520 <fread@plt>
    dc90:	mov	r5, r0
    dc94:	cmp	fp, #0
    dc98:	ble	e718 <ReadUInt32Data+0xff0>
    dc9c:	add	r2, sp, #24
    dca0:	ldr	r1, [sp, #4]
    dca4:	mov	r3, r1
    dca8:	add	r1, r1, fp, lsl #2
    dcac:	vldmia	r2!, {s15}
    dcb0:	vcvt.u32.f32	s15, s15
    dcb4:	vstmia	r3!, {s15}
    dcb8:	cmp	r3, r1
    dcbc:	bne	dcac <ReadUInt32Data+0x584>
    dcc0:	b	e718 <ReadUInt32Data+0xff0>
    dcc4:	ldr	r5, [r6, #20]
    dcc8:	cmp	r5, #0
    dccc:	beq	de14 <ReadUInt32Data+0x6ec>
    dcd0:	cmp	fp, #256	; 0x100
    dcd4:	ble	ddc8 <ReadUInt32Data+0x6a0>
    dcd8:	sub	r3, fp, #256	; 0x100
    dcdc:	ldr	r2, [sp, #4]
    dce0:	sub	sl, r2, #4
    dce4:	mov	r9, #0
    dce8:	mov	r5, r9
    dcec:	add	r2, sp, #24
    dcf0:	str	r2, [sp, #16]
    dcf4:	add	r8, sp, #1040	; 0x410
    dcf8:	add	r8, r8, #8
    dcfc:	str	fp, [sp, #20]
    dd00:	mov	fp, r3
    dd04:	ldr	r3, [r6]
    dd08:	mov	r2, #256	; 0x100
    dd0c:	ldr	r1, [sp]
    dd10:	ldr	r4, [sp, #16]
    dd14:	mov	r0, r4
    dd18:	bl	1520 <fread@plt>
    dd1c:	add	r5, r5, r0
    dd20:	str	r5, [sp, #8]
    dd24:	str	r4, [sp, #12]
    dd28:	mov	r7, sl
    dd2c:	mov	r0, r4
    dd30:	bl	18a4 <Mat_int32Swap>
    dd34:	str	r0, [r7, #4]!
    dd38:	add	r4, r4, #4
    dd3c:	cmp	r4, r8
    dd40:	bne	dd2c <ReadUInt32Data+0x604>
    dd44:	add	r9, r9, #256	; 0x100
    dd48:	add	sl, sl, #1024	; 0x400
    dd4c:	cmp	r9, fp
    dd50:	blt	dd04 <ReadUInt32Data+0x5dc>
    dd54:	ldr	fp, [sp, #20]
    dd58:	sub	r3, fp, #256	; 0x100
    dd5c:	sub	r3, r3, #1
    dd60:	bic	r3, r3, #255	; 0xff
    dd64:	add	r4, r3, #256	; 0x100
    dd68:	cmp	fp, r4
    dd6c:	ble	e718 <ReadUInt32Data+0xff0>
    dd70:	sub	fp, fp, r4
    dd74:	ldr	r3, [r6]
    dd78:	mov	r2, fp
    dd7c:	ldr	r1, [sp]
    dd80:	add	r0, sp, #24
    dd84:	bl	1520 <fread@plt>
    dd88:	ldr	r3, [sp, #8]
    dd8c:	add	r5, r3, r0
    dd90:	cmp	fp, #0
    dd94:	ble	e718 <ReadUInt32Data+0xff0>
    dd98:	ldr	r3, [sp, #4]
    dd9c:	add	r6, r3, r4, lsl #2
    dda0:	add	r4, fp, r4
    dda4:	add	r4, r3, r4, lsl #2
    dda8:	ldr	r7, [sp, #12]
    ddac:	mov	r0, r7
    ddb0:	bl	18a4 <Mat_int32Swap>
    ddb4:	str	r0, [r6], #4
    ddb8:	add	r7, r7, #4
    ddbc:	cmp	r6, r4
    ddc0:	bne	ddac <ReadUInt32Data+0x684>
    ddc4:	b	e718 <ReadUInt32Data+0xff0>
    ddc8:	ldr	r3, [r6]
    ddcc:	mov	r2, fp
    ddd0:	ldr	r1, [sp]
    ddd4:	add	r0, sp, #24
    ddd8:	bl	1520 <fread@plt>
    dddc:	mov	r5, r0
    dde0:	cmp	fp, #0
    dde4:	ble	e718 <ReadUInt32Data+0xff0>
    dde8:	add	r6, sp, #24
    ddec:	ldr	r3, [sp, #4]
    ddf0:	mov	r4, r3
    ddf4:	add	fp, r3, fp, lsl #2
    ddf8:	mov	r0, r6
    ddfc:	bl	18a4 <Mat_int32Swap>
    de00:	str	r0, [r4], #4
    de04:	add	r6, r6, #4
    de08:	cmp	r4, fp
    de0c:	bne	ddf8 <ReadUInt32Data+0x6d0>
    de10:	b	e718 <ReadUInt32Data+0xff0>
    de14:	cmp	fp, #256	; 0x100
    de18:	ble	def0 <ReadUInt32Data+0x7c8>
    de1c:	sub	r3, fp, #256	; 0x100
    de20:	ldr	r2, [sp, #4]
    de24:	sub	r8, r2, #4
    de28:	mov	r7, r5
    de2c:	add	sl, sp, #24
    de30:	add	r4, sl, #1020	; 0x3fc
    de34:	mov	r9, r6
    de38:	mov	r6, r3
    de3c:	ldr	r3, [r9]
    de40:	mov	r2, #256	; 0x100
    de44:	ldr	r1, [sp]
    de48:	mov	r0, sl
    de4c:	bl	1520 <fread@plt>
    de50:	add	r5, r5, r0
    de54:	str	r5, [sp, #8]
    de58:	sub	r0, sl, #4
    de5c:	mov	r2, r8
    de60:	mov	r3, r0
    de64:	ldr	r1, [r3, #4]!
    de68:	str	r1, [r2, #4]!
    de6c:	cmp	r3, r4
    de70:	bne	de64 <ReadUInt32Data+0x73c>
    de74:	add	r7, r7, #256	; 0x100
    de78:	add	r8, r8, #1024	; 0x400
    de7c:	cmp	r7, r6
    de80:	blt	de3c <ReadUInt32Data+0x714>
    de84:	mov	r6, r9
    de88:	mov	r9, r0
    de8c:	sub	r3, fp, #256	; 0x100
    de90:	sub	r3, r3, #1
    de94:	bic	r3, r3, #255	; 0xff
    de98:	add	r4, r3, #256	; 0x100
    de9c:	cmp	fp, r4
    dea0:	ble	e718 <ReadUInt32Data+0xff0>
    dea4:	sub	fp, fp, r4
    dea8:	ldr	r3, [r6]
    deac:	mov	r2, fp
    deb0:	ldr	r1, [sp]
    deb4:	add	r0, sp, #24
    deb8:	bl	1520 <fread@plt>
    debc:	ldr	r3, [sp, #8]
    dec0:	add	r5, r3, r0
    dec4:	cmp	fp, #0
    dec8:	ble	e718 <ReadUInt32Data+0xff0>
    decc:	ldr	r1, [sp, #4]
    ded0:	add	r2, r1, r4, lsl #2
    ded4:	add	r3, fp, r4
    ded8:	add	r3, r1, r3, lsl #2
    dedc:	ldr	r1, [r9, #4]!
    dee0:	str	r1, [r2], #4
    dee4:	cmp	r2, r3
    dee8:	bne	dedc <ReadUInt32Data+0x7b4>
    deec:	b	e718 <ReadUInt32Data+0xff0>
    def0:	ldr	r3, [r6]
    def4:	mov	r2, fp
    def8:	ldr	r1, [sp]
    defc:	add	r0, sp, #24
    df00:	bl	1520 <fread@plt>
    df04:	mov	r5, r0
    df08:	cmp	fp, #0
    df0c:	ble	e718 <ReadUInt32Data+0xff0>
    df10:	add	r2, sp, #20
    df14:	ldr	r1, [sp, #4]
    df18:	mov	r3, r1
    df1c:	add	r0, r1, fp, lsl #2
    df20:	ldr	r1, [r2, #4]!
    df24:	str	r1, [r3], #4
    df28:	cmp	r3, r0
    df2c:	bne	df20 <ReadUInt32Data+0x7f8>
    df30:	b	e718 <ReadUInt32Data+0xff0>
    df34:	ldr	r5, [r6, #20]
    df38:	cmp	r5, #0
    df3c:	beq	e084 <ReadUInt32Data+0x95c>
    df40:	cmp	fp, #256	; 0x100
    df44:	ble	e038 <ReadUInt32Data+0x910>
    df48:	sub	r3, fp, #256	; 0x100
    df4c:	ldr	r2, [sp, #4]
    df50:	sub	sl, r2, #4
    df54:	mov	r9, #0
    df58:	mov	r5, r9
    df5c:	add	r2, sp, #24
    df60:	str	r2, [sp, #16]
    df64:	add	r8, sp, #1040	; 0x410
    df68:	add	r8, r8, #8
    df6c:	str	fp, [sp, #20]
    df70:	mov	fp, r3
    df74:	ldr	r3, [r6]
    df78:	mov	r2, #256	; 0x100
    df7c:	ldr	r1, [sp]
    df80:	ldr	r4, [sp, #16]
    df84:	mov	r0, r4
    df88:	bl	1520 <fread@plt>
    df8c:	add	r5, r5, r0
    df90:	str	r5, [sp, #8]
    df94:	str	r4, [sp, #12]
    df98:	mov	r7, sl
    df9c:	mov	r0, r4
    dfa0:	bl	18d4 <Mat_uint32Swap>
    dfa4:	str	r0, [r7, #4]!
    dfa8:	add	r4, r4, #4
    dfac:	cmp	r4, r8
    dfb0:	bne	df9c <ReadUInt32Data+0x874>
    dfb4:	add	r9, r9, #256	; 0x100
    dfb8:	add	sl, sl, #1024	; 0x400
    dfbc:	cmp	r9, fp
    dfc0:	blt	df74 <ReadUInt32Data+0x84c>
    dfc4:	ldr	fp, [sp, #20]
    dfc8:	sub	r3, fp, #256	; 0x100
    dfcc:	sub	r3, r3, #1
    dfd0:	bic	r3, r3, #255	; 0xff
    dfd4:	add	r4, r3, #256	; 0x100
    dfd8:	cmp	fp, r4
    dfdc:	ble	e718 <ReadUInt32Data+0xff0>
    dfe0:	sub	fp, fp, r4
    dfe4:	ldr	r3, [r6]
    dfe8:	mov	r2, fp
    dfec:	ldr	r1, [sp]
    dff0:	add	r0, sp, #24
    dff4:	bl	1520 <fread@plt>
    dff8:	ldr	r3, [sp, #8]
    dffc:	add	r5, r3, r0
    e000:	cmp	fp, #0
    e004:	ble	e718 <ReadUInt32Data+0xff0>
    e008:	ldr	r3, [sp, #4]
    e00c:	add	r6, r3, r4, lsl #2
    e010:	add	r4, fp, r4
    e014:	add	r4, r3, r4, lsl #2
    e018:	ldr	r7, [sp, #12]
    e01c:	mov	r0, r7
    e020:	bl	18d4 <Mat_uint32Swap>
    e024:	str	r0, [r6], #4
    e028:	add	r7, r7, #4
    e02c:	cmp	r6, r4
    e030:	bne	e01c <ReadUInt32Data+0x8f4>
    e034:	b	e718 <ReadUInt32Data+0xff0>
    e038:	ldr	r3, [r6]
    e03c:	mov	r2, fp
    e040:	ldr	r1, [sp]
    e044:	add	r0, sp, #24
    e048:	bl	1520 <fread@plt>
    e04c:	mov	r5, r0
    e050:	cmp	fp, #0
    e054:	ble	e718 <ReadUInt32Data+0xff0>
    e058:	add	r6, sp, #24
    e05c:	ldr	r3, [sp, #4]
    e060:	mov	r4, r3
    e064:	add	fp, r3, fp, lsl #2
    e068:	mov	r0, r6
    e06c:	bl	18d4 <Mat_uint32Swap>
    e070:	str	r0, [r4], #4
    e074:	add	r6, r6, #4
    e078:	cmp	r4, fp
    e07c:	bne	e068 <ReadUInt32Data+0x940>
    e080:	b	e718 <ReadUInt32Data+0xff0>
    e084:	cmp	fp, #256	; 0x100
    e088:	ble	e160 <ReadUInt32Data+0xa38>
    e08c:	sub	r3, fp, #256	; 0x100
    e090:	ldr	r2, [sp, #4]
    e094:	sub	r8, r2, #4
    e098:	mov	r7, r5
    e09c:	add	sl, sp, #24
    e0a0:	add	r4, sl, #1020	; 0x3fc
    e0a4:	mov	r9, r6
    e0a8:	mov	r6, r3
    e0ac:	ldr	r3, [r9]
    e0b0:	mov	r2, #256	; 0x100
    e0b4:	ldr	r1, [sp]
    e0b8:	mov	r0, sl
    e0bc:	bl	1520 <fread@plt>
    e0c0:	add	r5, r5, r0
    e0c4:	str	r5, [sp, #8]
    e0c8:	sub	r0, sl, #4
    e0cc:	mov	r2, r8
    e0d0:	mov	r3, r0
    e0d4:	ldr	r1, [r3, #4]!
    e0d8:	str	r1, [r2, #4]!
    e0dc:	cmp	r3, r4
    e0e0:	bne	e0d4 <ReadUInt32Data+0x9ac>
    e0e4:	add	r7, r7, #256	; 0x100
    e0e8:	add	r8, r8, #1024	; 0x400
    e0ec:	cmp	r7, r6
    e0f0:	blt	e0ac <ReadUInt32Data+0x984>
    e0f4:	mov	r6, r9
    e0f8:	mov	r9, r0
    e0fc:	sub	r3, fp, #256	; 0x100
    e100:	sub	r3, r3, #1
    e104:	bic	r3, r3, #255	; 0xff
    e108:	add	r4, r3, #256	; 0x100
    e10c:	cmp	fp, r4
    e110:	ble	e718 <ReadUInt32Data+0xff0>
    e114:	sub	fp, fp, r4
    e118:	ldr	r3, [r6]
    e11c:	mov	r2, fp
    e120:	ldr	r1, [sp]
    e124:	add	r0, sp, #24
    e128:	bl	1520 <fread@plt>
    e12c:	ldr	r3, [sp, #8]
    e130:	add	r5, r3, r0
    e134:	cmp	fp, #0
    e138:	ble	e718 <ReadUInt32Data+0xff0>
    e13c:	ldr	r1, [sp, #4]
    e140:	add	r2, r1, r4, lsl #2
    e144:	add	r3, fp, r4
    e148:	add	r3, r1, r3, lsl #2
    e14c:	ldr	r1, [r9, #4]!
    e150:	str	r1, [r2], #4
    e154:	cmp	r2, r3
    e158:	bne	e14c <ReadUInt32Data+0xa24>
    e15c:	b	e718 <ReadUInt32Data+0xff0>
    e160:	ldr	r3, [r6]
    e164:	mov	r2, fp
    e168:	ldr	r1, [sp]
    e16c:	add	r0, sp, #24
    e170:	bl	1520 <fread@plt>
    e174:	mov	r5, r0
    e178:	cmp	fp, #0
    e17c:	ble	e718 <ReadUInt32Data+0xff0>
    e180:	add	r2, sp, #20
    e184:	ldr	r1, [sp, #4]
    e188:	mov	r3, r1
    e18c:	add	r0, r1, fp, lsl #2
    e190:	ldr	r1, [r2, #4]!
    e194:	str	r1, [r3], #4
    e198:	cmp	r3, r0
    e19c:	bne	e190 <ReadUInt32Data+0xa68>
    e1a0:	b	e718 <ReadUInt32Data+0xff0>
    e1a4:	ldr	r5, [r6, #20]
    e1a8:	cmp	r5, #0
    e1ac:	beq	e2f0 <ReadUInt32Data+0xbc8>
    e1b0:	cmp	fp, #256	; 0x100
    e1b4:	ble	e2a4 <ReadUInt32Data+0xb7c>
    e1b8:	sub	r3, fp, #256	; 0x100
    e1bc:	ldr	r2, [sp, #4]
    e1c0:	sub	sl, r2, #4
    e1c4:	mov	r9, #0
    e1c8:	mov	r5, r9
    e1cc:	add	r2, sp, #24
    e1d0:	str	r2, [sp, #16]
    e1d4:	add	r8, sp, #536	; 0x218
    e1d8:	str	fp, [sp, #20]
    e1dc:	mov	fp, r3
    e1e0:	ldr	r3, [r6]
    e1e4:	mov	r2, #256	; 0x100
    e1e8:	ldr	r1, [sp]
    e1ec:	ldr	r4, [sp, #16]
    e1f0:	mov	r0, r4
    e1f4:	bl	1520 <fread@plt>
    e1f8:	add	r5, r5, r0
    e1fc:	str	r5, [sp, #8]
    e200:	str	r4, [sp, #12]
    e204:	mov	r7, sl
    e208:	mov	r0, r4
    e20c:	bl	1904 <Mat_int16Swap>
    e210:	str	r0, [r7, #4]!
    e214:	add	r4, r4, #2
    e218:	cmp	r4, r8
    e21c:	bne	e208 <ReadUInt32Data+0xae0>
    e220:	add	r9, r9, #256	; 0x100
    e224:	add	sl, sl, #1024	; 0x400
    e228:	cmp	r9, fp
    e22c:	blt	e1e0 <ReadUInt32Data+0xab8>
    e230:	ldr	fp, [sp, #20]
    e234:	sub	r3, fp, #256	; 0x100
    e238:	sub	r3, r3, #1
    e23c:	bic	r3, r3, #255	; 0xff
    e240:	add	r4, r3, #256	; 0x100
    e244:	cmp	fp, r4
    e248:	ble	e718 <ReadUInt32Data+0xff0>
    e24c:	sub	fp, fp, r4
    e250:	ldr	r3, [r6]
    e254:	mov	r2, fp
    e258:	ldr	r1, [sp]
    e25c:	add	r0, sp, #24
    e260:	bl	1520 <fread@plt>
    e264:	ldr	r3, [sp, #8]
    e268:	add	r5, r3, r0
    e26c:	cmp	fp, #0
    e270:	ble	e718 <ReadUInt32Data+0xff0>
    e274:	ldr	r3, [sp, #4]
    e278:	add	r6, r3, r4, lsl #2
    e27c:	add	r4, fp, r4
    e280:	add	r4, r3, r4, lsl #2
    e284:	ldr	r7, [sp, #12]
    e288:	mov	r0, r7
    e28c:	bl	1904 <Mat_int16Swap>
    e290:	str	r0, [r6], #4
    e294:	add	r7, r7, #2
    e298:	cmp	r6, r4
    e29c:	bne	e288 <ReadUInt32Data+0xb60>
    e2a0:	b	e718 <ReadUInt32Data+0xff0>
    e2a4:	ldr	r3, [r6]
    e2a8:	mov	r2, fp
    e2ac:	ldr	r1, [sp]
    e2b0:	add	r0, sp, #24
    e2b4:	bl	1520 <fread@plt>
    e2b8:	mov	r5, r0
    e2bc:	cmp	fp, #0
    e2c0:	ble	e718 <ReadUInt32Data+0xff0>
    e2c4:	add	r6, sp, #24
    e2c8:	ldr	r3, [sp, #4]
    e2cc:	mov	r4, r3
    e2d0:	add	fp, r3, fp, lsl #2
    e2d4:	mov	r0, r6
    e2d8:	bl	1904 <Mat_int16Swap>
    e2dc:	str	r0, [r4], #4
    e2e0:	add	r6, r6, #2
    e2e4:	cmp	r4, fp
    e2e8:	bne	e2d4 <ReadUInt32Data+0xbac>
    e2ec:	b	e718 <ReadUInt32Data+0xff0>
    e2f0:	cmp	fp, #256	; 0x100
    e2f4:	ble	e3d0 <ReadUInt32Data+0xca8>
    e2f8:	sub	r3, fp, #256	; 0x100
    e2fc:	ldr	r2, [sp, #4]
    e300:	sub	r8, r2, #4
    e304:	mov	r7, r5
    e308:	add	sl, sp, #24
    e30c:	add	r4, sl, #508	; 0x1fc
    e310:	add	r4, r4, #2
    e314:	mov	r9, r6
    e318:	mov	r6, r3
    e31c:	ldr	r3, [r9]
    e320:	mov	r2, #256	; 0x100
    e324:	ldr	r1, [sp]
    e328:	mov	r0, sl
    e32c:	bl	1520 <fread@plt>
    e330:	add	r5, r5, r0
    e334:	str	r5, [sp, #8]
    e338:	sub	r0, sl, #2
    e33c:	mov	r2, r8
    e340:	mov	r3, r0
    e344:	ldrsh	r1, [r3, #2]!
    e348:	str	r1, [r2, #4]!
    e34c:	cmp	r3, r4
    e350:	bne	e344 <ReadUInt32Data+0xc1c>
    e354:	add	r7, r7, #256	; 0x100
    e358:	add	r8, r8, #1024	; 0x400
    e35c:	cmp	r7, r6
    e360:	blt	e31c <ReadUInt32Data+0xbf4>
    e364:	mov	r6, r9
    e368:	mov	r9, r0
    e36c:	sub	r3, fp, #256	; 0x100
    e370:	sub	r3, r3, #1
    e374:	bic	r3, r3, #255	; 0xff
    e378:	add	r4, r3, #256	; 0x100
    e37c:	cmp	fp, r4
    e380:	ble	e718 <ReadUInt32Data+0xff0>
    e384:	sub	fp, fp, r4
    e388:	ldr	r3, [r6]
    e38c:	mov	r2, fp
    e390:	ldr	r1, [sp]
    e394:	add	r0, sp, #24
    e398:	bl	1520 <fread@plt>
    e39c:	ldr	r3, [sp, #8]
    e3a0:	add	r5, r3, r0
    e3a4:	cmp	fp, #0
    e3a8:	ble	e718 <ReadUInt32Data+0xff0>
    e3ac:	ldr	r1, [sp, #4]
    e3b0:	add	r2, r1, r4, lsl #2
    e3b4:	add	r3, fp, r4
    e3b8:	add	r3, r1, r3, lsl #2
    e3bc:	ldrsh	r1, [r9, #2]!
    e3c0:	str	r1, [r2], #4
    e3c4:	cmp	r2, r3
    e3c8:	bne	e3bc <ReadUInt32Data+0xc94>
    e3cc:	b	e718 <ReadUInt32Data+0xff0>
    e3d0:	ldr	r3, [r6]
    e3d4:	mov	r2, fp
    e3d8:	ldr	r1, [sp]
    e3dc:	add	r0, sp, #24
    e3e0:	bl	1520 <fread@plt>
    e3e4:	mov	r5, r0
    e3e8:	cmp	fp, #0
    e3ec:	ble	e718 <ReadUInt32Data+0xff0>
    e3f0:	add	r2, sp, #22
    e3f4:	ldr	r1, [sp, #4]
    e3f8:	mov	r3, r1
    e3fc:	add	r0, r1, fp, lsl #2
    e400:	ldrsh	r1, [r2, #2]!
    e404:	str	r1, [r3], #4
    e408:	cmp	r3, r0
    e40c:	bne	e400 <ReadUInt32Data+0xcd8>
    e410:	b	e718 <ReadUInt32Data+0xff0>
    e414:	ldr	r5, [r6, #20]
    e418:	cmp	r5, #0
    e41c:	beq	e560 <ReadUInt32Data+0xe38>
    e420:	cmp	fp, #256	; 0x100
    e424:	ble	e514 <ReadUInt32Data+0xdec>
    e428:	sub	r3, fp, #256	; 0x100
    e42c:	ldr	r2, [sp, #4]
    e430:	sub	sl, r2, #4
    e434:	mov	r9, #0
    e438:	mov	r5, r9
    e43c:	add	r2, sp, #24
    e440:	str	r2, [sp, #16]
    e444:	add	r8, sp, #536	; 0x218
    e448:	str	fp, [sp, #20]
    e44c:	mov	fp, r3
    e450:	ldr	r3, [r6]
    e454:	mov	r2, #256	; 0x100
    e458:	ldr	r1, [sp]
    e45c:	ldr	r4, [sp, #16]
    e460:	mov	r0, r4
    e464:	bl	1520 <fread@plt>
    e468:	add	r5, r5, r0
    e46c:	str	r5, [sp, #8]
    e470:	str	r4, [sp, #12]
    e474:	mov	r7, sl
    e478:	mov	r0, r4
    e47c:	bl	1924 <Mat_uint16Swap>
    e480:	str	r0, [r7, #4]!
    e484:	add	r4, r4, #2
    e488:	cmp	r4, r8
    e48c:	bne	e478 <ReadUInt32Data+0xd50>
    e490:	add	r9, r9, #256	; 0x100
    e494:	add	sl, sl, #1024	; 0x400
    e498:	cmp	r9, fp
    e49c:	blt	e450 <ReadUInt32Data+0xd28>
    e4a0:	ldr	fp, [sp, #20]
    e4a4:	sub	r3, fp, #256	; 0x100
    e4a8:	sub	r3, r3, #1
    e4ac:	bic	r3, r3, #255	; 0xff
    e4b0:	add	r4, r3, #256	; 0x100
    e4b4:	cmp	fp, r4
    e4b8:	ble	e718 <ReadUInt32Data+0xff0>
    e4bc:	sub	fp, fp, r4
    e4c0:	ldr	r3, [r6]
    e4c4:	mov	r2, fp
    e4c8:	ldr	r1, [sp]
    e4cc:	add	r0, sp, #24
    e4d0:	bl	1520 <fread@plt>
    e4d4:	ldr	r3, [sp, #8]
    e4d8:	add	r5, r3, r0
    e4dc:	cmp	fp, #0
    e4e0:	ble	e718 <ReadUInt32Data+0xff0>
    e4e4:	ldr	r3, [sp, #4]
    e4e8:	add	r6, r3, r4, lsl #2
    e4ec:	add	r4, fp, r4
    e4f0:	add	r4, r3, r4, lsl #2
    e4f4:	ldr	r7, [sp, #12]
    e4f8:	mov	r0, r7
    e4fc:	bl	1924 <Mat_uint16Swap>
    e500:	str	r0, [r6], #4
    e504:	add	r7, r7, #2
    e508:	cmp	r6, r4
    e50c:	bne	e4f8 <ReadUInt32Data+0xdd0>
    e510:	b	e718 <ReadUInt32Data+0xff0>
    e514:	ldr	r3, [r6]
    e518:	mov	r2, fp
    e51c:	ldr	r1, [sp]
    e520:	add	r0, sp, #24
    e524:	bl	1520 <fread@plt>
    e528:	mov	r5, r0
    e52c:	cmp	fp, #0
    e530:	ble	e718 <ReadUInt32Data+0xff0>
    e534:	add	r6, sp, #24
    e538:	ldr	r3, [sp, #4]
    e53c:	mov	r4, r3
    e540:	add	fp, r3, fp, lsl #2
    e544:	mov	r0, r6
    e548:	bl	1924 <Mat_uint16Swap>
    e54c:	str	r0, [r4], #4
    e550:	add	r6, r6, #2
    e554:	cmp	r4, fp
    e558:	bne	e544 <ReadUInt32Data+0xe1c>
    e55c:	b	e718 <ReadUInt32Data+0xff0>
    e560:	cmp	fp, #256	; 0x100
    e564:	ble	e640 <ReadUInt32Data+0xf18>
    e568:	sub	r3, fp, #256	; 0x100
    e56c:	ldr	r2, [sp, #4]
    e570:	sub	r8, r2, #4
    e574:	mov	r7, r5
    e578:	add	sl, sp, #24
    e57c:	add	r4, sl, #508	; 0x1fc
    e580:	add	r4, r4, #2
    e584:	mov	r9, r6
    e588:	mov	r6, r3
    e58c:	ldr	r3, [r9]
    e590:	mov	r2, #256	; 0x100
    e594:	ldr	r1, [sp]
    e598:	mov	r0, sl
    e59c:	bl	1520 <fread@plt>
    e5a0:	add	r5, r5, r0
    e5a4:	str	r5, [sp, #8]
    e5a8:	sub	r0, sl, #2
    e5ac:	mov	r2, r8
    e5b0:	mov	r3, r0
    e5b4:	ldrh	r1, [r3, #2]!
    e5b8:	str	r1, [r2, #4]!
    e5bc:	cmp	r3, r4
    e5c0:	bne	e5b4 <ReadUInt32Data+0xe8c>
    e5c4:	add	r7, r7, #256	; 0x100
    e5c8:	add	r8, r8, #1024	; 0x400
    e5cc:	cmp	r7, r6
    e5d0:	blt	e58c <ReadUInt32Data+0xe64>
    e5d4:	mov	r6, r9
    e5d8:	mov	r9, r0
    e5dc:	sub	r3, fp, #256	; 0x100
    e5e0:	sub	r3, r3, #1
    e5e4:	bic	r3, r3, #255	; 0xff
    e5e8:	add	r4, r3, #256	; 0x100
    e5ec:	cmp	fp, r4
    e5f0:	ble	e718 <ReadUInt32Data+0xff0>
    e5f4:	sub	fp, fp, r4
    e5f8:	ldr	r3, [r6]
    e5fc:	mov	r2, fp
    e600:	ldr	r1, [sp]
    e604:	add	r0, sp, #24
    e608:	bl	1520 <fread@plt>
    e60c:	ldr	r3, [sp, #8]
    e610:	add	r5, r3, r0
    e614:	cmp	fp, #0
    e618:	ble	e718 <ReadUInt32Data+0xff0>
    e61c:	ldr	r1, [sp, #4]
    e620:	add	r2, r1, r4, lsl #2
    e624:	add	r3, fp, r4
    e628:	add	r3, r1, r3, lsl #2
    e62c:	ldrh	r1, [r9, #2]!
    e630:	str	r1, [r2], #4
    e634:	cmp	r2, r3
    e638:	bne	e62c <ReadUInt32Data+0xf04>
    e63c:	b	e718 <ReadUInt32Data+0xff0>
    e640:	ldr	r3, [r6]
    e644:	mov	r2, fp
    e648:	ldr	r1, [sp]
    e64c:	add	r0, sp, #24
    e650:	bl	1520 <fread@plt>
    e654:	mov	r5, r0
    e658:	cmp	fp, #0
    e65c:	ble	e718 <ReadUInt32Data+0xff0>
    e660:	add	r2, sp, #22
    e664:	ldr	r1, [sp, #4]
    e668:	mov	r3, r1
    e66c:	add	r0, r1, fp, lsl #2
    e670:	ldrh	r1, [r2, #2]!
    e674:	str	r1, [r3], #4
    e678:	cmp	r3, r0
    e67c:	bne	e670 <ReadUInt32Data+0xf48>
    e680:	b	e718 <ReadUInt32Data+0xff0>
    e684:	cmp	fp, #256	; 0x100
    e688:	ble	e740 <ReadUInt32Data+0x1018>
    e68c:	sub	r3, fp, #256	; 0x100
    e690:	ldr	r2, [sp, #4]
    e694:	sub	r8, r2, #4
    e698:	mov	r7, #0
    e69c:	mov	r5, r7
    e6a0:	add	sl, sp, #24
    e6a4:	add	r4, sl, #255	; 0xff
    e6a8:	mov	r9, r6
    e6ac:	mov	r6, r3
    e6b0:	ldr	r3, [r9]
    e6b4:	mov	r2, #256	; 0x100
    e6b8:	ldr	r1, [sp]
    e6bc:	mov	r0, sl
    e6c0:	bl	1520 <fread@plt>
    e6c4:	add	r5, r5, r0
    e6c8:	str	r5, [sp, #8]
    e6cc:	sub	r0, sl, #1
    e6d0:	mov	r2, r8
    e6d4:	mov	r3, r0
    e6d8:	ldrsb	r1, [r3, #1]!
    e6dc:	str	r1, [r2, #4]!
    e6e0:	cmp	r3, r4
    e6e4:	bne	e6d8 <ReadUInt32Data+0xfb0>
    e6e8:	add	r7, r7, #256	; 0x100
    e6ec:	add	r8, r8, #1024	; 0x400
    e6f0:	cmp	r7, r6
    e6f4:	blt	e6b0 <ReadUInt32Data+0xf88>
    e6f8:	mov	r6, r9
    e6fc:	mov	r9, r0
    e700:	sub	r3, fp, #256	; 0x100
    e704:	sub	r3, r3, #1
    e708:	bic	r3, r3, #255	; 0xff
    e70c:	add	r4, r3, #256	; 0x100
    e710:	cmp	fp, r4
    e714:	bgt	e784 <ReadUInt32Data+0x105c>
    e718:	ldr	r3, [sp]
    e71c:	mul	r0, r3, r5
    e720:	add	sp, sp, #2064	; 0x810
    e724:	add	sp, sp, #12
    e728:	ldrd	r4, [sp]
    e72c:	ldrd	r6, [sp, #8]
    e730:	ldrd	r8, [sp, #16]
    e734:	ldrd	sl, [sp, #24]
    e738:	add	sp, sp, #32
    e73c:	pop	{pc}		; (ldr pc, [sp], #4)
    e740:	ldr	r3, [r6]
    e744:	mov	r2, fp
    e748:	ldr	r1, [sp]
    e74c:	add	r0, sp, #24
    e750:	bl	1520 <fread@plt>
    e754:	mov	r5, r0
    e758:	cmp	fp, #0
    e75c:	ble	e718 <ReadUInt32Data+0xff0>
    e760:	add	r2, sp, #23
    e764:	ldr	r1, [sp, #4]
    e768:	mov	r3, r1
    e76c:	add	r0, r1, fp, lsl #2
    e770:	ldrsb	r1, [r2, #1]!
    e774:	str	r1, [r3], #4
    e778:	cmp	r0, r3
    e77c:	bne	e770 <ReadUInt32Data+0x1048>
    e780:	b	e718 <ReadUInt32Data+0xff0>
    e784:	sub	fp, fp, r4
    e788:	ldr	r3, [r6]
    e78c:	mov	r2, fp
    e790:	ldr	r1, [sp]
    e794:	add	r0, sp, #24
    e798:	bl	1520 <fread@plt>
    e79c:	ldr	r3, [sp, #8]
    e7a0:	add	r5, r3, r0
    e7a4:	cmp	fp, #0
    e7a8:	ble	e718 <ReadUInt32Data+0xff0>
    e7ac:	ldr	r1, [sp, #4]
    e7b0:	add	r2, r1, r4, lsl #2
    e7b4:	add	r3, fp, r4
    e7b8:	add	r3, r1, r3, lsl #2
    e7bc:	ldrsb	r1, [r9, #1]!
    e7c0:	str	r1, [r2], #4
    e7c4:	cmp	r2, r3
    e7c8:	bne	e7bc <ReadUInt32Data+0x1094>
    e7cc:	b	e718 <ReadUInt32Data+0xff0>
    e7d0:	cmp	fp, #256	; 0x100
    e7d4:	ble	e8b0 <ReadUInt32Data+0x1188>
    e7d8:	sub	r3, fp, #256	; 0x100
    e7dc:	ldr	r2, [sp, #4]
    e7e0:	sub	r8, r2, #4
    e7e4:	mov	r7, #0
    e7e8:	mov	r5, r7
    e7ec:	add	sl, sp, #24
    e7f0:	add	r4, sl, #255	; 0xff
    e7f4:	mov	r9, r6
    e7f8:	mov	r6, r3
    e7fc:	ldr	r3, [r9]
    e800:	mov	r2, #256	; 0x100
    e804:	ldr	r1, [sp]
    e808:	mov	r0, sl
    e80c:	bl	1520 <fread@plt>
    e810:	add	r5, r5, r0
    e814:	str	r5, [sp, #8]
    e818:	sub	r0, sl, #1
    e81c:	mov	r2, r8
    e820:	mov	r3, r0
    e824:	ldrb	r1, [r3, #1]!
    e828:	str	r1, [r2, #4]!
    e82c:	cmp	r3, r4
    e830:	bne	e824 <ReadUInt32Data+0x10fc>
    e834:	add	r7, r7, #256	; 0x100
    e838:	add	r8, r8, #1024	; 0x400
    e83c:	cmp	r7, r6
    e840:	blt	e7fc <ReadUInt32Data+0x10d4>
    e844:	mov	r6, r9
    e848:	mov	r9, r0
    e84c:	sub	r3, fp, #256	; 0x100
    e850:	sub	r3, r3, #1
    e854:	bic	r3, r3, #255	; 0xff
    e858:	add	r4, r3, #256	; 0x100
    e85c:	cmp	fp, r4
    e860:	ble	e718 <ReadUInt32Data+0xff0>
    e864:	sub	fp, fp, r4
    e868:	ldr	r3, [r6]
    e86c:	mov	r2, fp
    e870:	ldr	r1, [sp]
    e874:	add	r0, sp, #24
    e878:	bl	1520 <fread@plt>
    e87c:	ldr	r3, [sp, #8]
    e880:	add	r5, r3, r0
    e884:	cmp	fp, #0
    e888:	ble	e718 <ReadUInt32Data+0xff0>
    e88c:	ldr	r1, [sp, #4]
    e890:	add	r2, r1, r4, lsl #2
    e894:	add	r3, fp, r4
    e898:	add	r3, r1, r3, lsl #2
    e89c:	ldrb	r1, [r9, #1]!
    e8a0:	str	r1, [r2], #4
    e8a4:	cmp	r2, r3
    e8a8:	bne	e89c <ReadUInt32Data+0x1174>
    e8ac:	b	e718 <ReadUInt32Data+0xff0>
    e8b0:	ldr	r3, [r6]
    e8b4:	mov	r2, fp
    e8b8:	ldr	r1, [sp]
    e8bc:	add	r0, sp, #24
    e8c0:	bl	1520 <fread@plt>
    e8c4:	mov	r5, r0
    e8c8:	cmp	fp, #0
    e8cc:	ble	e718 <ReadUInt32Data+0xff0>
    e8d0:	add	r2, sp, #23
    e8d4:	ldr	r1, [sp, #4]
    e8d8:	mov	r3, r1
    e8dc:	add	r0, r1, fp, lsl #2
    e8e0:	ldrb	r1, [r2, #1]!
    e8e4:	str	r1, [r3], #4
    e8e8:	cmp	r3, r0
    e8ec:	bne	e8e0 <ReadUInt32Data+0x11b8>
    e8f0:	b	e718 <ReadUInt32Data+0xff0>
    e8f4:	cmp	r4, #12
    e8f8:	beq	ea08 <ReadUInt32Data+0x12e0>
    e8fc:	cmp	r4, #13
    e900:	movne	r5, #0
    e904:	bne	e718 <ReadUInt32Data+0xff0>
    e908:	ldr	r5, [r6, #20]
    e90c:	cmp	r5, #0
    e910:	beq	ecb8 <ReadUInt32Data+0x1590>
    e914:	cmp	fp, #256	; 0x100
    e918:	ble	ec6c <ReadUInt32Data+0x1544>
    e91c:	sub	r3, fp, #256	; 0x100
    e920:	str	r3, [sp, #16]
    e924:	ldr	r3, [sp, #4]
    e928:	sub	sl, r3, #4
    e92c:	mov	r9, #0
    e930:	mov	r5, r9
    e934:	add	r3, sp, #24
    e938:	str	r3, [sp, #20]
    e93c:	add	r8, sp, #2064	; 0x810
    e940:	add	r8, r8, #8
    e944:	ldr	r3, [r6]
    e948:	mov	r2, #256	; 0x100
    e94c:	ldr	r1, [sp]
    e950:	ldr	r4, [sp, #20]
    e954:	mov	r0, r4
    e958:	bl	1520 <fread@plt>
    e95c:	add	r5, r5, r0
    e960:	str	r5, [sp, #8]
    e964:	str	r4, [sp, #12]
    e968:	mov	r7, sl
    e96c:	mov	r0, r4
    e970:	bl	1848 <Mat_uint64Swap>
    e974:	str	r0, [r7, #4]!
    e978:	add	r4, r4, #8
    e97c:	cmp	r8, r4
    e980:	bne	e96c <ReadUInt32Data+0x1244>
    e984:	add	r9, r9, #256	; 0x100
    e988:	add	sl, sl, #1024	; 0x400
    e98c:	ldr	r3, [sp, #16]
    e990:	cmp	r9, r3
    e994:	blt	e944 <ReadUInt32Data+0x121c>
    e998:	sub	r3, fp, #256	; 0x100
    e99c:	sub	r3, r3, #1
    e9a0:	bic	r3, r3, #255	; 0xff
    e9a4:	add	r4, r3, #256	; 0x100
    e9a8:	cmp	fp, r4
    e9ac:	ble	e718 <ReadUInt32Data+0xff0>
    e9b0:	sub	fp, fp, r4
    e9b4:	ldr	r3, [r6]
    e9b8:	mov	r2, fp
    e9bc:	ldr	r1, [sp]
    e9c0:	add	r0, sp, #24
    e9c4:	bl	1520 <fread@plt>
    e9c8:	ldr	r3, [sp, #8]
    e9cc:	add	r5, r3, r0
    e9d0:	cmp	fp, #0
    e9d4:	ble	e718 <ReadUInt32Data+0xff0>
    e9d8:	ldr	r3, [sp, #4]
    e9dc:	add	r6, r3, r4, lsl #2
    e9e0:	add	r4, fp, r4
    e9e4:	add	r4, r3, r4, lsl #2
    e9e8:	ldr	r7, [sp, #12]
    e9ec:	mov	r0, r7
    e9f0:	bl	1848 <Mat_uint64Swap>
    e9f4:	str	r0, [r6], #4
    e9f8:	add	r7, r7, #8
    e9fc:	cmp	r4, r6
    ea00:	bne	e9ec <ReadUInt32Data+0x12c4>
    ea04:	b	e718 <ReadUInt32Data+0xff0>
    ea08:	ldr	r5, [r6, #20]
    ea0c:	cmp	r5, #0
    ea10:	beq	eb54 <ReadUInt32Data+0x142c>
    ea14:	cmp	fp, #256	; 0x100
    ea18:	ble	eb08 <ReadUInt32Data+0x13e0>
    ea1c:	sub	r3, fp, #256	; 0x100
    ea20:	str	r3, [sp, #16]
    ea24:	ldr	r3, [sp, #4]
    ea28:	sub	sl, r3, #4
    ea2c:	mov	r9, #0
    ea30:	mov	r5, r9
    ea34:	add	r3, sp, #24
    ea38:	str	r3, [sp, #20]
    ea3c:	add	r8, sp, #2064	; 0x810
    ea40:	add	r8, r8, #8
    ea44:	ldr	r3, [r6]
    ea48:	mov	r2, #256	; 0x100
    ea4c:	ldr	r1, [sp]
    ea50:	ldr	r4, [sp, #20]
    ea54:	mov	r0, r4
    ea58:	bl	1520 <fread@plt>
    ea5c:	add	r5, r5, r0
    ea60:	str	r5, [sp, #8]
    ea64:	str	r4, [sp, #12]
    ea68:	mov	r7, sl
    ea6c:	mov	r0, r4
    ea70:	bl	17ec <Mat_int64Swap>
    ea74:	str	r0, [r7, #4]!
    ea78:	add	r4, r4, #8
    ea7c:	cmp	r4, r8
    ea80:	bne	ea6c <ReadUInt32Data+0x1344>
    ea84:	add	r9, r9, #256	; 0x100
    ea88:	add	sl, sl, #1024	; 0x400
    ea8c:	ldr	r3, [sp, #16]
    ea90:	cmp	r9, r3
    ea94:	blt	ea44 <ReadUInt32Data+0x131c>
    ea98:	sub	r3, fp, #256	; 0x100
    ea9c:	sub	r3, r3, #1
    eaa0:	bic	r3, r3, #255	; 0xff
    eaa4:	add	r4, r3, #256	; 0x100
    eaa8:	cmp	fp, r4
    eaac:	ble	e718 <ReadUInt32Data+0xff0>
    eab0:	sub	fp, fp, r4
    eab4:	ldr	r3, [r6]
    eab8:	mov	r2, fp
    eabc:	ldr	r1, [sp]
    eac0:	add	r0, sp, #24
    eac4:	bl	1520 <fread@plt>
    eac8:	ldr	r3, [sp, #8]
    eacc:	add	r5, r3, r0
    ead0:	cmp	fp, #0
    ead4:	ble	e718 <ReadUInt32Data+0xff0>
    ead8:	ldr	r3, [sp, #4]
    eadc:	add	r6, r3, r4, lsl #2
    eae0:	add	r4, fp, r4
    eae4:	add	r4, r3, r4, lsl #2
    eae8:	ldr	r7, [sp, #12]
    eaec:	mov	r0, r7
    eaf0:	bl	17ec <Mat_int64Swap>
    eaf4:	str	r0, [r6], #4
    eaf8:	add	r7, r7, #8
    eafc:	cmp	r4, r6
    eb00:	bne	eaec <ReadUInt32Data+0x13c4>
    eb04:	b	e718 <ReadUInt32Data+0xff0>
    eb08:	ldr	r3, [r6]
    eb0c:	mov	r2, fp
    eb10:	ldr	r1, [sp]
    eb14:	add	r0, sp, #24
    eb18:	bl	1520 <fread@plt>
    eb1c:	mov	r5, r0
    eb20:	cmp	fp, #0
    eb24:	ble	e718 <ReadUInt32Data+0xff0>
    eb28:	add	r6, sp, #24
    eb2c:	ldr	r3, [sp, #4]
    eb30:	mov	r4, r3
    eb34:	add	fp, r3, fp, lsl #2
    eb38:	mov	r0, r6
    eb3c:	bl	17ec <Mat_int64Swap>
    eb40:	str	r0, [r4], #4
    eb44:	add	r6, r6, #8
    eb48:	cmp	r4, fp
    eb4c:	bne	eb38 <ReadUInt32Data+0x1410>
    eb50:	b	e718 <ReadUInt32Data+0xff0>
    eb54:	cmp	fp, #256	; 0x100
    eb58:	ble	ec28 <ReadUInt32Data+0x1500>
    eb5c:	sub	r3, fp, #256	; 0x100
    eb60:	str	r3, [sp, #12]
    eb64:	ldr	r3, [sp, #4]
    eb68:	sub	r9, r3, #4
    eb6c:	mov	r8, r5
    eb70:	add	sl, sp, #24
    eb74:	add	r4, sp, #2064	; 0x810
    eb78:	ldr	r3, [r6]
    eb7c:	mov	r2, #256	; 0x100
    eb80:	ldr	r1, [sp]
    eb84:	mov	r0, sl
    eb88:	bl	1520 <fread@plt>
    eb8c:	add	r5, r5, r0
    eb90:	str	r5, [sp, #8]
    eb94:	sub	r7, sl, #8
    eb98:	mov	r2, r9
    eb9c:	mov	r3, r7
    eba0:	ldr	r1, [r3, #8]!
    eba4:	str	r1, [r2, #4]!
    eba8:	cmp	r3, r4
    ebac:	bne	eba0 <ReadUInt32Data+0x1478>
    ebb0:	add	r8, r8, #256	; 0x100
    ebb4:	add	r9, r9, #1024	; 0x400
    ebb8:	ldr	r3, [sp, #12]
    ebbc:	cmp	r8, r3
    ebc0:	blt	eb78 <ReadUInt32Data+0x1450>
    ebc4:	sub	r3, fp, #256	; 0x100
    ebc8:	sub	r3, r3, #1
    ebcc:	bic	r3, r3, #255	; 0xff
    ebd0:	add	r4, r3, #256	; 0x100
    ebd4:	cmp	fp, r4
    ebd8:	ble	e718 <ReadUInt32Data+0xff0>
    ebdc:	sub	fp, fp, r4
    ebe0:	ldr	r3, [r6]
    ebe4:	mov	r2, fp
    ebe8:	ldr	r1, [sp]
    ebec:	add	r0, sp, #24
    ebf0:	bl	1520 <fread@plt>
    ebf4:	ldr	r3, [sp, #8]
    ebf8:	add	r5, r3, r0
    ebfc:	cmp	fp, #0
    ec00:	ble	e718 <ReadUInt32Data+0xff0>
    ec04:	ldr	r1, [sp, #4]
    ec08:	add	r2, r1, r4, lsl #2
    ec0c:	add	r3, fp, r4
    ec10:	add	r3, r1, r3, lsl #2
    ec14:	ldr	r1, [r7, #8]!
    ec18:	str	r1, [r2], #4
    ec1c:	cmp	r3, r2
    ec20:	bne	ec14 <ReadUInt32Data+0x14ec>
    ec24:	b	e718 <ReadUInt32Data+0xff0>
    ec28:	ldr	r3, [r6]
    ec2c:	mov	r2, fp
    ec30:	ldr	r1, [sp]
    ec34:	add	r0, sp, #24
    ec38:	bl	1520 <fread@plt>
    ec3c:	mov	r5, r0
    ec40:	cmp	fp, #0
    ec44:	ble	e718 <ReadUInt32Data+0xff0>
    ec48:	add	r2, sp, #16
    ec4c:	ldr	r1, [sp, #4]
    ec50:	mov	r3, r1
    ec54:	add	r1, r1, fp, lsl #2
    ec58:	ldr	r0, [r2, #8]!
    ec5c:	str	r0, [r3], #4
    ec60:	cmp	r1, r3
    ec64:	bne	ec58 <ReadUInt32Data+0x1530>
    ec68:	b	e718 <ReadUInt32Data+0xff0>
    ec6c:	ldr	r3, [r6]
    ec70:	mov	r2, fp
    ec74:	ldr	r1, [sp]
    ec78:	add	r0, sp, #24
    ec7c:	bl	1520 <fread@plt>
    ec80:	mov	r5, r0
    ec84:	cmp	fp, #0
    ec88:	ble	e718 <ReadUInt32Data+0xff0>
    ec8c:	add	r6, sp, #24
    ec90:	ldr	r3, [sp, #4]
    ec94:	mov	r4, r3
    ec98:	add	fp, r3, fp, lsl #2
    ec9c:	mov	r0, r6
    eca0:	bl	1848 <Mat_uint64Swap>
    eca4:	str	r0, [r4], #4
    eca8:	add	r6, r6, #8
    ecac:	cmp	r4, fp
    ecb0:	bne	ec9c <ReadUInt32Data+0x1574>
    ecb4:	b	e718 <ReadUInt32Data+0xff0>
    ecb8:	cmp	fp, #256	; 0x100
    ecbc:	ble	ed8c <ReadUInt32Data+0x1664>
    ecc0:	sub	r3, fp, #256	; 0x100
    ecc4:	str	r3, [sp, #12]
    ecc8:	ldr	r3, [sp, #4]
    eccc:	sub	r9, r3, #4
    ecd0:	mov	r8, r5
    ecd4:	add	sl, sp, #24
    ecd8:	add	r4, sp, #2064	; 0x810
    ecdc:	ldr	r3, [r6]
    ece0:	mov	r2, #256	; 0x100
    ece4:	ldr	r1, [sp]
    ece8:	mov	r0, sl
    ecec:	bl	1520 <fread@plt>
    ecf0:	add	r5, r5, r0
    ecf4:	str	r5, [sp, #8]
    ecf8:	sub	r7, sl, #8
    ecfc:	mov	r2, r9
    ed00:	mov	r3, r7
    ed04:	ldr	r1, [r3, #8]!
    ed08:	str	r1, [r2, #4]!
    ed0c:	cmp	r3, r4
    ed10:	bne	ed04 <ReadUInt32Data+0x15dc>
    ed14:	add	r8, r8, #256	; 0x100
    ed18:	add	r9, r9, #1024	; 0x400
    ed1c:	ldr	r3, [sp, #12]
    ed20:	cmp	r8, r3
    ed24:	blt	ecdc <ReadUInt32Data+0x15b4>
    ed28:	sub	r3, fp, #256	; 0x100
    ed2c:	sub	r3, r3, #1
    ed30:	bic	r3, r3, #255	; 0xff
    ed34:	add	r4, r3, #256	; 0x100
    ed38:	cmp	fp, r4
    ed3c:	ble	e718 <ReadUInt32Data+0xff0>
    ed40:	sub	r8, fp, r4
    ed44:	ldr	r3, [r6]
    ed48:	mov	r2, r8
    ed4c:	ldr	r1, [sp]
    ed50:	add	r0, sp, #24
    ed54:	bl	1520 <fread@plt>
    ed58:	ldr	r3, [sp, #8]
    ed5c:	add	r5, r3, r0
    ed60:	cmp	r8, #0
    ed64:	ble	e718 <ReadUInt32Data+0xff0>
    ed68:	ldr	r1, [sp, #4]
    ed6c:	add	r2, r1, r4, lsl #2
    ed70:	add	r3, r8, r4
    ed74:	add	r3, r1, r3, lsl #2
    ed78:	ldr	r1, [r7, #8]!
    ed7c:	str	r1, [r2], #4
    ed80:	cmp	r2, r3
    ed84:	bne	ed78 <ReadUInt32Data+0x1650>
    ed88:	b	e718 <ReadUInt32Data+0xff0>
    ed8c:	ldr	r3, [r6]
    ed90:	mov	r2, fp
    ed94:	ldr	r1, [sp]
    ed98:	add	r0, sp, #24
    ed9c:	bl	1520 <fread@plt>
    eda0:	mov	r5, r0
    eda4:	cmp	fp, #0
    eda8:	ble	e718 <ReadUInt32Data+0xff0>
    edac:	add	r2, sp, #16
    edb0:	ldr	r1, [sp, #4]
    edb4:	mov	r3, r1
    edb8:	add	r1, r1, fp, lsl #2
    edbc:	ldr	r0, [r2, #8]!
    edc0:	str	r0, [r3], #4
    edc4:	cmp	r3, r1
    edc8:	bne	edbc <ReadUInt32Data+0x1694>
    edcc:	b	e718 <ReadUInt32Data+0xff0>
    edd0:	mov	r0, #0
    edd4:	bx	lr

0000edd8 <ReadCompressedUInt32Data>:
    edd8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    eddc:	strd	r6, [sp, #8]
    ede0:	strd	r8, [sp, #16]
    ede4:	str	sl, [sp, #24]
    ede8:	str	lr, [sp, #28]
    edec:	sub	sp, sp, #8
    edf0:	ldr	r6, [sp, #40]	; 0x28
    edf4:	mov	r7, r2
    edf8:	mov	r9, r1
    edfc:	clz	r1, r1
    ee00:	lsr	r1, r1, #5
    ee04:	cmp	r2, #0
    ee08:	movne	r2, r1
    ee0c:	moveq	r2, #1
    ee10:	cmp	r0, #0
    ee14:	moveq	r2, #1
    ee18:	cmp	r2, #0
    ee1c:	movne	r0, #0
    ee20:	beq	ee40 <ReadCompressedUInt32Data+0x68>
    ee24:	add	sp, sp, #8
    ee28:	ldrd	r4, [sp]
    ee2c:	ldrd	r6, [sp, #8]
    ee30:	ldrd	r8, [sp, #16]
    ee34:	ldr	sl, [sp, #24]
    ee38:	add	sp, sp, #28
    ee3c:	pop	{pc}		; (ldr pc, [sp], #4)
    ee40:	mov	r8, r0
    ee44:	mov	r5, r3
    ee48:	mov	r0, r3
    ee4c:	bl	1598 <Mat_SizeOf@plt>
    ee50:	mov	r4, r0
    ee54:	sub	r3, r5, #1
    ee58:	cmp	r3, #8
    ee5c:	addls	pc, pc, r3, lsl #2
    ee60:	b	f244 <ReadCompressedUInt32Data+0x46c>
    ee64:	b	eec8 <ReadCompressedUInt32Data+0xf0>
    ee68:	b	ee88 <ReadCompressedUInt32Data+0xb0>
    ee6c:	b	f134 <ReadCompressedUInt32Data+0x35c>
    ee70:	b	f1bc <ReadCompressedUInt32Data+0x3e4>
    ee74:	b	f024 <ReadCompressedUInt32Data+0x24c>
    ee78:	b	f0ac <ReadCompressedUInt32Data+0x2d4>
    ee7c:	b	ef94 <ReadCompressedUInt32Data+0x1bc>
    ee80:	b	f244 <ReadCompressedUInt32Data+0x46c>
    ee84:	b	ef04 <ReadCompressedUInt32Data+0x12c>
    ee88:	cmp	r6, #0
    ee8c:	movgt	r5, r7
    ee90:	addgt	r7, r7, r6, lsl #2
    ee94:	movgt	sl, sp
    ee98:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    ee9c:	mov	r3, r4
    eea0:	mov	r2, sl
    eea4:	mov	r1, r9
    eea8:	mov	r0, r8
    eeac:	bl	333c <InflateData>
    eeb0:	ldrb	r3, [sp]
    eeb4:	str	r3, [r5], #4
    eeb8:	cmp	r7, r5
    eebc:	bne	ee9c <ReadCompressedUInt32Data+0xc4>
    eec0:	mul	r0, r4, r6
    eec4:	b	ee24 <ReadCompressedUInt32Data+0x4c>
    eec8:	cmp	r6, #0
    eecc:	movgt	r5, r7
    eed0:	addgt	r7, r7, r6, lsl #2
    eed4:	movgt	sl, sp
    eed8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    eedc:	mov	r3, r4
    eee0:	mov	r2, sl
    eee4:	mov	r1, r9
    eee8:	mov	r0, r8
    eeec:	bl	333c <InflateData>
    eef0:	ldrsb	r3, [sp]
    eef4:	str	r3, [r5], #4
    eef8:	cmp	r7, r5
    eefc:	bne	eedc <ReadCompressedUInt32Data+0x104>
    ef00:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    ef04:	ldr	r3, [r8, #20]
    ef08:	cmp	r3, #0
    ef0c:	bne	ef50 <ReadCompressedUInt32Data+0x178>
    ef10:	cmp	r6, #0
    ef14:	movgt	r5, r7
    ef18:	addgt	r7, r7, r6, lsl #2
    ef1c:	movgt	sl, sp
    ef20:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    ef24:	mov	r3, r4
    ef28:	mov	r2, sl
    ef2c:	mov	r1, r9
    ef30:	mov	r0, r8
    ef34:	bl	333c <InflateData>
    ef38:	vldr	d7, [sp]
    ef3c:	vcvt.u32.f64	s14, d7
    ef40:	vstmia	r5!, {s14}
    ef44:	cmp	r5, r7
    ef48:	bne	ef24 <ReadCompressedUInt32Data+0x14c>
    ef4c:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    ef50:	cmp	r6, #0
    ef54:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    ef58:	mov	r5, r7
    ef5c:	add	r7, r7, r6, lsl #2
    ef60:	mov	sl, sp
    ef64:	mov	r3, r4
    ef68:	mov	r2, sl
    ef6c:	mov	r1, r9
    ef70:	mov	r0, r8
    ef74:	bl	333c <InflateData>
    ef78:	mov	r0, sl
    ef7c:	bl	1974 <Mat_doubleSwap>
    ef80:	vcvt.u32.f64	s0, d0
    ef84:	vstmia	r5!, {s0}
    ef88:	cmp	r5, r7
    ef8c:	bne	ef64 <ReadCompressedUInt32Data+0x18c>
    ef90:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    ef94:	ldr	r3, [r8, #20]
    ef98:	cmp	r3, #0
    ef9c:	bne	efe0 <ReadCompressedUInt32Data+0x208>
    efa0:	cmp	r6, #0
    efa4:	movgt	r5, r7
    efa8:	addgt	r7, r7, r6, lsl #2
    efac:	movgt	sl, sp
    efb0:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    efb4:	mov	r3, r4
    efb8:	mov	r2, sl
    efbc:	mov	r1, r9
    efc0:	mov	r0, r8
    efc4:	bl	333c <InflateData>
    efc8:	vldr	s15, [sp]
    efcc:	vcvt.u32.f32	s15, s15
    efd0:	vstmia	r5!, {s15}
    efd4:	cmp	r5, r7
    efd8:	bne	efb4 <ReadCompressedUInt32Data+0x1dc>
    efdc:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    efe0:	cmp	r6, #0
    efe4:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    efe8:	mov	r5, r7
    efec:	add	r7, r7, r6, lsl #2
    eff0:	mov	sl, sp
    eff4:	mov	r3, r4
    eff8:	mov	r2, sl
    effc:	mov	r1, r9
    f000:	mov	r0, r8
    f004:	bl	333c <InflateData>
    f008:	mov	r0, sl
    f00c:	bl	1944 <Mat_floatSwap>
    f010:	vcvt.u32.f32	s0, s0
    f014:	vstmia	r5!, {s0}
    f018:	cmp	r5, r7
    f01c:	bne	eff4 <ReadCompressedUInt32Data+0x21c>
    f020:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f024:	ldr	r3, [r8, #20]
    f028:	cmp	r3, #0
    f02c:	bne	f06c <ReadCompressedUInt32Data+0x294>
    f030:	cmp	r6, #0
    f034:	movgt	r5, r7
    f038:	addgt	r7, r7, r6, lsl #2
    f03c:	movgt	sl, sp
    f040:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f044:	mov	r3, r4
    f048:	mov	r2, sl
    f04c:	mov	r1, r9
    f050:	mov	r0, r8
    f054:	bl	333c <InflateData>
    f058:	ldr	r3, [sp]
    f05c:	str	r3, [r5], #4
    f060:	cmp	r5, r7
    f064:	bne	f044 <ReadCompressedUInt32Data+0x26c>
    f068:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f06c:	cmp	r6, #0
    f070:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f074:	mov	r5, r7
    f078:	add	r7, r7, r6, lsl #2
    f07c:	mov	sl, sp
    f080:	mov	r3, r4
    f084:	mov	r2, sl
    f088:	mov	r1, r9
    f08c:	mov	r0, r8
    f090:	bl	333c <InflateData>
    f094:	mov	r0, sl
    f098:	bl	18a4 <Mat_int32Swap>
    f09c:	str	r0, [r5], #4
    f0a0:	cmp	r5, r7
    f0a4:	bne	f080 <ReadCompressedUInt32Data+0x2a8>
    f0a8:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f0ac:	ldr	r3, [r8, #20]
    f0b0:	cmp	r3, #0
    f0b4:	bne	f0f4 <ReadCompressedUInt32Data+0x31c>
    f0b8:	cmp	r6, #0
    f0bc:	movgt	r5, r7
    f0c0:	addgt	r7, r7, r6, lsl #2
    f0c4:	movgt	sl, sp
    f0c8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f0cc:	mov	r3, r4
    f0d0:	mov	r2, sl
    f0d4:	mov	r1, r9
    f0d8:	mov	r0, r8
    f0dc:	bl	333c <InflateData>
    f0e0:	ldr	r3, [sp]
    f0e4:	str	r3, [r5], #4
    f0e8:	cmp	r5, r7
    f0ec:	bne	f0cc <ReadCompressedUInt32Data+0x2f4>
    f0f0:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f0f4:	cmp	r6, #0
    f0f8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f0fc:	mov	r5, r7
    f100:	add	r7, r7, r6, lsl #2
    f104:	mov	sl, sp
    f108:	mov	r3, r4
    f10c:	mov	r2, sl
    f110:	mov	r1, r9
    f114:	mov	r0, r8
    f118:	bl	333c <InflateData>
    f11c:	mov	r0, sl
    f120:	bl	18d4 <Mat_uint32Swap>
    f124:	str	r0, [r5], #4
    f128:	cmp	r5, r7
    f12c:	bne	f108 <ReadCompressedUInt32Data+0x330>
    f130:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f134:	ldr	r3, [r8, #20]
    f138:	cmp	r3, #0
    f13c:	bne	f17c <ReadCompressedUInt32Data+0x3a4>
    f140:	cmp	r6, #0
    f144:	movgt	r5, r7
    f148:	addgt	r7, r7, r6, lsl #2
    f14c:	movgt	sl, sp
    f150:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f154:	mov	r3, r4
    f158:	mov	r2, sl
    f15c:	mov	r1, r9
    f160:	mov	r0, r8
    f164:	bl	333c <InflateData>
    f168:	ldrsh	r3, [sp]
    f16c:	str	r3, [r5], #4
    f170:	cmp	r7, r5
    f174:	bne	f154 <ReadCompressedUInt32Data+0x37c>
    f178:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f17c:	cmp	r6, #0
    f180:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f184:	mov	r5, r7
    f188:	add	r7, r7, r6, lsl #2
    f18c:	mov	sl, sp
    f190:	mov	r3, r4
    f194:	mov	r2, sl
    f198:	mov	r1, r9
    f19c:	mov	r0, r8
    f1a0:	bl	333c <InflateData>
    f1a4:	mov	r0, sl
    f1a8:	bl	1904 <Mat_int16Swap>
    f1ac:	str	r0, [r5], #4
    f1b0:	cmp	r7, r5
    f1b4:	bne	f190 <ReadCompressedUInt32Data+0x3b8>
    f1b8:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f1bc:	ldr	r3, [r8, #20]
    f1c0:	cmp	r3, #0
    f1c4:	bne	f204 <ReadCompressedUInt32Data+0x42c>
    f1c8:	cmp	r6, #0
    f1cc:	movgt	r5, r7
    f1d0:	addgt	r7, r7, r6, lsl #2
    f1d4:	movgt	sl, sp
    f1d8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f1dc:	mov	r3, r4
    f1e0:	mov	r2, sl
    f1e4:	mov	r1, r9
    f1e8:	mov	r0, r8
    f1ec:	bl	333c <InflateData>
    f1f0:	ldrh	r3, [sp]
    f1f4:	str	r3, [r5], #4
    f1f8:	cmp	r5, r7
    f1fc:	bne	f1dc <ReadCompressedUInt32Data+0x404>
    f200:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f204:	cmp	r6, #0
    f208:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f20c:	mov	r5, r7
    f210:	add	r7, r7, r6, lsl #2
    f214:	mov	sl, sp
    f218:	mov	r3, r4
    f21c:	mov	r2, sl
    f220:	mov	r1, r9
    f224:	mov	r0, r8
    f228:	bl	333c <InflateData>
    f22c:	mov	r0, sl
    f230:	bl	1924 <Mat_uint16Swap>
    f234:	str	r0, [r5], #4
    f238:	cmp	r7, r5
    f23c:	bne	f218 <ReadCompressedUInt32Data+0x440>
    f240:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f244:	cmp	r5, #12
    f248:	beq	f29c <ReadCompressedUInt32Data+0x4c4>
    f24c:	cmp	r5, #13
    f250:	bne	eec0 <ReadCompressedUInt32Data+0xe8>
    f254:	ldr	r3, [r8, #20]
    f258:	cmp	r3, #0
    f25c:	bne	f324 <ReadCompressedUInt32Data+0x54c>
    f260:	cmp	r6, #0
    f264:	movgt	r5, r7
    f268:	addgt	r7, r7, r6, lsl #2
    f26c:	movgt	sl, sp
    f270:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f274:	mov	r3, r4
    f278:	mov	r2, sl
    f27c:	mov	r1, r9
    f280:	mov	r0, r8
    f284:	bl	333c <InflateData>
    f288:	ldr	r3, [sp]
    f28c:	str	r3, [r5], #4
    f290:	cmp	r7, r5
    f294:	bne	f274 <ReadCompressedUInt32Data+0x49c>
    f298:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f29c:	ldr	r3, [r8, #20]
    f2a0:	cmp	r3, #0
    f2a4:	bne	f2e4 <ReadCompressedUInt32Data+0x50c>
    f2a8:	cmp	r6, #0
    f2ac:	movgt	r5, r7
    f2b0:	addgt	r7, r7, r6, lsl #2
    f2b4:	movgt	sl, sp
    f2b8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f2bc:	mov	r3, r4
    f2c0:	mov	r2, sl
    f2c4:	mov	r1, r9
    f2c8:	mov	r0, r8
    f2cc:	bl	333c <InflateData>
    f2d0:	ldr	r3, [sp]
    f2d4:	str	r3, [r5], #4
    f2d8:	cmp	r7, r5
    f2dc:	bne	f2bc <ReadCompressedUInt32Data+0x4e4>
    f2e0:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f2e4:	cmp	r6, #0
    f2e8:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f2ec:	mov	r5, r7
    f2f0:	add	r7, r7, r6, lsl #2
    f2f4:	mov	sl, sp
    f2f8:	mov	r3, r4
    f2fc:	mov	r2, sl
    f300:	mov	r1, r9
    f304:	mov	r0, r8
    f308:	bl	333c <InflateData>
    f30c:	mov	r0, sl
    f310:	bl	17ec <Mat_int64Swap>
    f314:	str	r0, [r5], #4
    f318:	cmp	r5, r7
    f31c:	bne	f2f8 <ReadCompressedUInt32Data+0x520>
    f320:	b	eec0 <ReadCompressedUInt32Data+0xe8>
    f324:	cmp	r6, #0
    f328:	ble	eec0 <ReadCompressedUInt32Data+0xe8>
    f32c:	mov	r5, r7
    f330:	add	r7, r7, r6, lsl #2
    f334:	mov	sl, sp
    f338:	mov	r3, r4
    f33c:	mov	r2, sl
    f340:	mov	r1, r9
    f344:	mov	r0, r8
    f348:	bl	333c <InflateData>
    f34c:	mov	r0, sl
    f350:	bl	1848 <Mat_uint64Swap>
    f354:	str	r0, [r5], #4
    f358:	cmp	r7, r5
    f35c:	bne	f338 <ReadCompressedUInt32Data+0x560>
    f360:	b	eec0 <ReadCompressedUInt32Data+0xe8>

0000f364 <ReadInt16Data>:
    f364:	cmp	r1, #0
    f368:	cmpne	r0, #0
    f36c:	beq	10a2c <ReadInt16Data+0x16c8>
    f370:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f374:	strd	r6, [sp, #8]
    f378:	strd	r8, [sp, #16]
    f37c:	strd	sl, [sp, #24]
    f380:	str	lr, [sp, #32]
    f384:	sub	sp, sp, #2064	; 0x810
    f388:	sub	sp, sp, #12
    f38c:	mov	r7, r0
    f390:	mov	ip, r1
    f394:	ldr	r1, [r0]
    f398:	cmp	r1, #0
    f39c:	moveq	r0, #0
    f3a0:	beq	10370 <ReadInt16Data+0x100c>
    f3a4:	str	ip, [sp, #4]
    f3a8:	mov	r5, r3
    f3ac:	mov	r4, r2
    f3b0:	mov	r0, r2
    f3b4:	bl	1598 <Mat_SizeOf@plt>
    f3b8:	str	r0, [sp]
    f3bc:	sub	r3, r4, #1
    f3c0:	cmp	r3, #8
    f3c4:	addls	pc, pc, r3, lsl #2
    f3c8:	b	10540 <ReadInt16Data+0x11dc>
    f3cc:	b	102d8 <ReadInt16Data+0xf74>
    f3d0:	b	10420 <ReadInt16Data+0x10bc>
    f3d4:	b	fe00 <ReadInt16Data+0xa9c>
    f3d8:	b	1006c <ReadInt16Data+0xd08>
    f3dc:	b	f928 <ReadInt16Data+0x5c4>
    f3e0:	b	fb94 <ReadInt16Data+0x830>
    f3e4:	b	f68c <ReadInt16Data+0x328>
    f3e8:	b	10540 <ReadInt16Data+0x11dc>
    f3ec:	b	f3f0 <ReadInt16Data+0x8c>
    f3f0:	ldr	r6, [r7, #20]
    f3f4:	cmp	r6, #0
    f3f8:	beq	f558 <ReadInt16Data+0x1f4>
    f3fc:	cmp	r5, #256	; 0x100
    f400:	ble	f504 <ReadInt16Data+0x1a0>
    f404:	ldr	r2, [sp, #4]
    f408:	sub	sl, r2, #2
    f40c:	sub	r3, r5, #256	; 0x100
    f410:	sub	r3, r3, #1
    f414:	lsr	r3, r3, #8
    f418:	str	r3, [sp, #20]
    f41c:	add	fp, r2, r3, lsl #9
    f420:	add	fp, fp, #508	; 0x1fc
    f424:	add	fp, fp, #2
    f428:	mov	r6, #0
    f42c:	add	r3, sp, #24
    f430:	str	r3, [sp, #16]
    f434:	add	r9, sp, #2064	; 0x810
    f438:	add	r9, r9, #8
    f43c:	ldr	r3, [r7]
    f440:	mov	r2, #256	; 0x100
    f444:	ldr	r1, [sp]
    f448:	ldr	r4, [sp, #16]
    f44c:	mov	r0, r4
    f450:	bl	1520 <fread@plt>
    f454:	add	r6, r6, r0
    f458:	str	r6, [sp, #8]
    f45c:	str	r4, [sp, #12]
    f460:	mov	r8, sl
    f464:	mov	r0, r4
    f468:	bl	1974 <Mat_doubleSwap>
    f46c:	vcvt.s32.f64	s0, d0
    f470:	vmov	r3, s0
    f474:	strh	r3, [r8, #2]!
    f478:	add	r4, r4, #8
    f47c:	cmp	r4, r9
    f480:	bne	f464 <ReadInt16Data+0x100>
    f484:	add	sl, sl, #512	; 0x200
    f488:	cmp	sl, fp
    f48c:	bne	f43c <ReadInt16Data+0xd8>
    f490:	ldr	r3, [sp, #20]
    f494:	add	r4, r3, #1
    f498:	lsl	r4, r4, #8
    f49c:	cmp	r5, r4
    f4a0:	ble	10368 <ReadInt16Data+0x1004>
    f4a4:	sub	r5, r5, r4
    f4a8:	ldr	r3, [r7]
    f4ac:	mov	r2, r5
    f4b0:	ldr	r1, [sp]
    f4b4:	add	r0, sp, #24
    f4b8:	bl	1520 <fread@plt>
    f4bc:	ldr	r3, [sp, #8]
    f4c0:	add	r6, r3, r0
    f4c4:	cmp	r5, #0
    f4c8:	ble	10368 <ReadInt16Data+0x1004>
    f4cc:	ldr	r3, [sp, #4]
    f4d0:	add	r7, r3, r4, lsl #1
    f4d4:	add	r4, r5, r4
    f4d8:	add	r4, r3, r4, lsl #1
    f4dc:	ldr	r5, [sp, #12]
    f4e0:	mov	r0, r5
    f4e4:	bl	1974 <Mat_doubleSwap>
    f4e8:	vcvt.s32.f64	s0, d0
    f4ec:	vmov	r3, s0
    f4f0:	strh	r3, [r7], #2
    f4f4:	add	r5, r5, #8
    f4f8:	cmp	r7, r4
    f4fc:	bne	f4e0 <ReadInt16Data+0x17c>
    f500:	b	10368 <ReadInt16Data+0x1004>
    f504:	ldr	r3, [r7]
    f508:	mov	r2, r5
    f50c:	ldr	r1, [sp]
    f510:	add	r0, sp, #24
    f514:	bl	1520 <fread@plt>
    f518:	mov	r6, r0
    f51c:	cmp	r5, #0
    f520:	ble	10368 <ReadInt16Data+0x1004>
    f524:	add	r7, sp, #24
    f528:	ldr	r3, [sp, #4]
    f52c:	mov	r4, r3
    f530:	add	r5, r3, r5, lsl #1
    f534:	mov	r0, r7
    f538:	bl	1974 <Mat_doubleSwap>
    f53c:	vcvt.s32.f64	s0, d0
    f540:	vmov	r3, s0
    f544:	strh	r3, [r4], #2
    f548:	add	r7, r7, #8
    f54c:	cmp	r4, r5
    f550:	bne	f534 <ReadInt16Data+0x1d0>
    f554:	b	10368 <ReadInt16Data+0x1004>
    f558:	cmp	r5, #256	; 0x100
    f55c:	ble	f640 <ReadInt16Data+0x2dc>
    f560:	ldr	r3, [sp, #4]
    f564:	sub	r8, r3, #2
    f568:	sub	r9, r5, #256	; 0x100
    f56c:	sub	r9, r9, #1
    f570:	lsr	r9, r9, #8
    f574:	add	sl, r3, r9, lsl #9
    f578:	add	sl, sl, #508	; 0x1fc
    f57c:	add	sl, sl, #2
    f580:	add	fp, sp, #24
    f584:	add	r4, sp, #2064	; 0x810
    f588:	add	r4, r4, #8
    f58c:	ldr	r3, [r7]
    f590:	mov	r2, #256	; 0x100
    f594:	ldr	r1, [sp]
    f598:	mov	r0, fp
    f59c:	bl	1520 <fread@plt>
    f5a0:	add	r6, r6, r0
    f5a4:	str	r6, [sp, #8]
    f5a8:	str	fp, [sp, #12]
    f5ac:	mov	r2, r8
    f5b0:	mov	r3, fp
    f5b4:	vldmia	r3!, {d7}
    f5b8:	vcvt.s32.f64	s14, d7
    f5bc:	vmov	r1, s14
    f5c0:	strh	r1, [r2, #2]!
    f5c4:	cmp	r3, r4
    f5c8:	bne	f5b4 <ReadInt16Data+0x250>
    f5cc:	add	r8, r8, #512	; 0x200
    f5d0:	cmp	r8, sl
    f5d4:	bne	f58c <ReadInt16Data+0x228>
    f5d8:	add	r4, r9, #1
    f5dc:	lsl	r4, r4, #8
    f5e0:	cmp	r5, r4
    f5e4:	ble	10368 <ReadInt16Data+0x1004>
    f5e8:	sub	r5, r5, r4
    f5ec:	ldr	r3, [r7]
    f5f0:	mov	r2, r5
    f5f4:	ldr	r1, [sp]
    f5f8:	add	r0, sp, #24
    f5fc:	bl	1520 <fread@plt>
    f600:	ldr	r3, [sp, #8]
    f604:	add	r6, r3, r0
    f608:	cmp	r5, #0
    f60c:	ble	10368 <ReadInt16Data+0x1004>
    f610:	ldr	r3, [sp, #4]
    f614:	add	r2, r3, r4, lsl #1
    f618:	add	r5, r5, r4
    f61c:	add	r3, r3, r5, lsl #1
    f620:	ldr	r1, [sp, #12]
    f624:	vldmia	r1!, {d7}
    f628:	vcvt.s32.f64	s14, d7
    f62c:	vmov	r0, s14
    f630:	strh	r0, [r2], #2
    f634:	cmp	r2, r3
    f638:	bne	f624 <ReadInt16Data+0x2c0>
    f63c:	b	10368 <ReadInt16Data+0x1004>
    f640:	ldr	r3, [r7]
    f644:	mov	r2, r5
    f648:	ldr	r1, [sp]
    f64c:	add	r0, sp, #24
    f650:	bl	1520 <fread@plt>
    f654:	mov	r6, r0
    f658:	cmp	r5, #0
    f65c:	ble	10368 <ReadInt16Data+0x1004>
    f660:	add	r2, sp, #24
    f664:	ldr	r1, [sp, #4]
    f668:	mov	r3, r1
    f66c:	add	r5, r1, r5, lsl #1
    f670:	vldmia	r2!, {d7}
    f674:	vcvt.s32.f64	s14, d7
    f678:	vmov	r1, s14
    f67c:	strh	r1, [r3], #2
    f680:	cmp	r3, r5
    f684:	bne	f670 <ReadInt16Data+0x30c>
    f688:	b	10368 <ReadInt16Data+0x1004>
    f68c:	ldr	r6, [r7, #20]
    f690:	cmp	r6, #0
    f694:	beq	f7f4 <ReadInt16Data+0x490>
    f698:	cmp	r5, #256	; 0x100
    f69c:	ble	f7a0 <ReadInt16Data+0x43c>
    f6a0:	ldr	r2, [sp, #4]
    f6a4:	sub	sl, r2, #2
    f6a8:	sub	r3, r5, #256	; 0x100
    f6ac:	sub	r3, r3, #1
    f6b0:	lsr	r3, r3, #8
    f6b4:	str	r3, [sp, #20]
    f6b8:	add	fp, r2, r3, lsl #9
    f6bc:	add	fp, fp, #508	; 0x1fc
    f6c0:	add	fp, fp, #2
    f6c4:	mov	r6, #0
    f6c8:	add	r3, sp, #24
    f6cc:	str	r3, [sp, #16]
    f6d0:	add	r9, sp, #1040	; 0x410
    f6d4:	add	r9, r9, #8
    f6d8:	ldr	r3, [r7]
    f6dc:	mov	r2, #256	; 0x100
    f6e0:	ldr	r1, [sp]
    f6e4:	ldr	r4, [sp, #16]
    f6e8:	mov	r0, r4
    f6ec:	bl	1520 <fread@plt>
    f6f0:	add	r6, r6, r0
    f6f4:	str	r6, [sp, #8]
    f6f8:	str	r4, [sp, #12]
    f6fc:	mov	r8, sl
    f700:	mov	r0, r4
    f704:	bl	1944 <Mat_floatSwap>
    f708:	vcvt.s32.f32	s0, s0
    f70c:	vmov	r3, s0
    f710:	strh	r3, [r8, #2]!
    f714:	add	r4, r4, #4
    f718:	cmp	r4, r9
    f71c:	bne	f700 <ReadInt16Data+0x39c>
    f720:	add	sl, sl, #512	; 0x200
    f724:	cmp	sl, fp
    f728:	bne	f6d8 <ReadInt16Data+0x374>
    f72c:	ldr	r3, [sp, #20]
    f730:	add	r4, r3, #1
    f734:	lsl	r4, r4, #8
    f738:	cmp	r5, r4
    f73c:	ble	10368 <ReadInt16Data+0x1004>
    f740:	sub	r5, r5, r4
    f744:	ldr	r3, [r7]
    f748:	mov	r2, r5
    f74c:	ldr	r1, [sp]
    f750:	add	r0, sp, #24
    f754:	bl	1520 <fread@plt>
    f758:	ldr	r3, [sp, #8]
    f75c:	add	r6, r3, r0
    f760:	cmp	r5, #0
    f764:	ble	10368 <ReadInt16Data+0x1004>
    f768:	ldr	r3, [sp, #4]
    f76c:	add	r7, r3, r4, lsl #1
    f770:	add	r4, r5, r4
    f774:	add	r4, r3, r4, lsl #1
    f778:	ldr	r5, [sp, #12]
    f77c:	mov	r0, r5
    f780:	bl	1944 <Mat_floatSwap>
    f784:	vcvt.s32.f32	s0, s0
    f788:	vmov	r3, s0
    f78c:	strh	r3, [r7], #2
    f790:	add	r5, r5, #4
    f794:	cmp	r7, r4
    f798:	bne	f77c <ReadInt16Data+0x418>
    f79c:	b	10368 <ReadInt16Data+0x1004>
    f7a0:	ldr	r3, [r7]
    f7a4:	mov	r2, r5
    f7a8:	ldr	r1, [sp]
    f7ac:	add	r0, sp, #24
    f7b0:	bl	1520 <fread@plt>
    f7b4:	mov	r6, r0
    f7b8:	cmp	r5, #0
    f7bc:	ble	10368 <ReadInt16Data+0x1004>
    f7c0:	add	r7, sp, #24
    f7c4:	ldr	r3, [sp, #4]
    f7c8:	mov	r4, r3
    f7cc:	add	r5, r3, r5, lsl #1
    f7d0:	mov	r0, r7
    f7d4:	bl	1944 <Mat_floatSwap>
    f7d8:	vcvt.s32.f32	s0, s0
    f7dc:	vmov	r3, s0
    f7e0:	strh	r3, [r4], #2
    f7e4:	add	r7, r7, #4
    f7e8:	cmp	r4, r5
    f7ec:	bne	f7d0 <ReadInt16Data+0x46c>
    f7f0:	b	10368 <ReadInt16Data+0x1004>
    f7f4:	cmp	r5, #256	; 0x100
    f7f8:	ble	f8dc <ReadInt16Data+0x578>
    f7fc:	ldr	r3, [sp, #4]
    f800:	sub	r8, r3, #2
    f804:	sub	r9, r5, #256	; 0x100
    f808:	sub	r9, r9, #1
    f80c:	lsr	r9, r9, #8
    f810:	add	sl, r3, r9, lsl #9
    f814:	add	sl, sl, #508	; 0x1fc
    f818:	add	sl, sl, #2
    f81c:	add	fp, sp, #24
    f820:	add	r4, sp, #1040	; 0x410
    f824:	add	r4, r4, #8
    f828:	ldr	r3, [r7]
    f82c:	mov	r2, #256	; 0x100
    f830:	ldr	r1, [sp]
    f834:	mov	r0, fp
    f838:	bl	1520 <fread@plt>
    f83c:	add	r6, r6, r0
    f840:	str	r6, [sp, #8]
    f844:	str	fp, [sp, #12]
    f848:	mov	r2, r8
    f84c:	mov	r3, fp
    f850:	vldmia	r3!, {s15}
    f854:	vcvt.s32.f32	s15, s15
    f858:	vmov	r1, s15
    f85c:	strh	r1, [r2, #2]!
    f860:	cmp	r3, r4
    f864:	bne	f850 <ReadInt16Data+0x4ec>
    f868:	add	r8, r8, #512	; 0x200
    f86c:	cmp	r8, sl
    f870:	bne	f828 <ReadInt16Data+0x4c4>
    f874:	add	r4, r9, #1
    f878:	lsl	r4, r4, #8
    f87c:	cmp	r5, r4
    f880:	ble	10368 <ReadInt16Data+0x1004>
    f884:	sub	r5, r5, r4
    f888:	ldr	r3, [r7]
    f88c:	mov	r2, r5
    f890:	ldr	r1, [sp]
    f894:	add	r0, sp, #24
    f898:	bl	1520 <fread@plt>
    f89c:	ldr	r3, [sp, #8]
    f8a0:	add	r6, r3, r0
    f8a4:	cmp	r5, #0
    f8a8:	ble	10368 <ReadInt16Data+0x1004>
    f8ac:	ldr	r3, [sp, #4]
    f8b0:	add	r2, r3, r4, lsl #1
    f8b4:	add	r5, r5, r4
    f8b8:	add	r3, r3, r5, lsl #1
    f8bc:	ldr	r1, [sp, #12]
    f8c0:	vldmia	r1!, {s15}
    f8c4:	vcvt.s32.f32	s15, s15
    f8c8:	vmov	r0, s15
    f8cc:	strh	r0, [r2], #2
    f8d0:	cmp	r2, r3
    f8d4:	bne	f8c0 <ReadInt16Data+0x55c>
    f8d8:	b	10368 <ReadInt16Data+0x1004>
    f8dc:	ldr	r3, [r7]
    f8e0:	mov	r2, r5
    f8e4:	ldr	r1, [sp]
    f8e8:	add	r0, sp, #24
    f8ec:	bl	1520 <fread@plt>
    f8f0:	mov	r6, r0
    f8f4:	cmp	r5, #0
    f8f8:	ble	10368 <ReadInt16Data+0x1004>
    f8fc:	add	r2, sp, #24
    f900:	ldr	r1, [sp, #4]
    f904:	mov	r3, r1
    f908:	add	r5, r1, r5, lsl #1
    f90c:	vldmia	r2!, {s15}
    f910:	vcvt.s32.f32	s15, s15
    f914:	vmov	r1, s15
    f918:	strh	r1, [r3], #2
    f91c:	cmp	r3, r5
    f920:	bne	f90c <ReadInt16Data+0x5a8>
    f924:	b	10368 <ReadInt16Data+0x1004>
    f928:	ldr	r6, [r7, #20]
    f92c:	cmp	r6, #0
    f930:	beq	fa78 <ReadInt16Data+0x714>
    f934:	cmp	r5, #256	; 0x100
    f938:	ble	fa2c <ReadInt16Data+0x6c8>
    f93c:	ldr	r2, [sp, #4]
    f940:	sub	sl, r2, #2
    f944:	sub	r3, r5, #256	; 0x100
    f948:	sub	r3, r3, #1
    f94c:	lsr	r3, r3, #8
    f950:	str	r3, [sp, #20]
    f954:	add	fp, r2, r3, lsl #9
    f958:	add	fp, fp, #508	; 0x1fc
    f95c:	add	fp, fp, #2
    f960:	mov	r6, #0
    f964:	add	r3, sp, #24
    f968:	str	r3, [sp, #16]
    f96c:	add	r9, sp, #1040	; 0x410
    f970:	add	r9, r9, #8
    f974:	ldr	r3, [r7]
    f978:	mov	r2, #256	; 0x100
    f97c:	ldr	r1, [sp]
    f980:	ldr	r4, [sp, #16]
    f984:	mov	r0, r4
    f988:	bl	1520 <fread@plt>
    f98c:	add	r6, r6, r0
    f990:	str	r6, [sp, #8]
    f994:	str	r4, [sp, #12]
    f998:	mov	r8, sl
    f99c:	mov	r0, r4
    f9a0:	bl	18a4 <Mat_int32Swap>
    f9a4:	strh	r0, [r8, #2]!
    f9a8:	add	r4, r4, #4
    f9ac:	cmp	r4, r9
    f9b0:	bne	f99c <ReadInt16Data+0x638>
    f9b4:	add	sl, sl, #512	; 0x200
    f9b8:	cmp	sl, fp
    f9bc:	bne	f974 <ReadInt16Data+0x610>
    f9c0:	ldr	r3, [sp, #20]
    f9c4:	add	r4, r3, #1
    f9c8:	lsl	r4, r4, #8
    f9cc:	cmp	r5, r4
    f9d0:	ble	10368 <ReadInt16Data+0x1004>
    f9d4:	sub	r5, r5, r4
    f9d8:	ldr	r3, [r7]
    f9dc:	mov	r2, r5
    f9e0:	ldr	r1, [sp]
    f9e4:	add	r0, sp, #24
    f9e8:	bl	1520 <fread@plt>
    f9ec:	ldr	r3, [sp, #8]
    f9f0:	add	r6, r3, r0
    f9f4:	cmp	r5, #0
    f9f8:	ble	10368 <ReadInt16Data+0x1004>
    f9fc:	ldr	r3, [sp, #4]
    fa00:	add	r7, r3, r4, lsl #1
    fa04:	add	r4, r5, r4
    fa08:	add	r4, r3, r4, lsl #1
    fa0c:	ldr	r5, [sp, #12]
    fa10:	mov	r0, r5
    fa14:	bl	18a4 <Mat_int32Swap>
    fa18:	strh	r0, [r7], #2
    fa1c:	add	r5, r5, #4
    fa20:	cmp	r7, r4
    fa24:	bne	fa10 <ReadInt16Data+0x6ac>
    fa28:	b	10368 <ReadInt16Data+0x1004>
    fa2c:	ldr	r3, [r7]
    fa30:	mov	r2, r5
    fa34:	ldr	r1, [sp]
    fa38:	add	r0, sp, #24
    fa3c:	bl	1520 <fread@plt>
    fa40:	mov	r6, r0
    fa44:	cmp	r5, #0
    fa48:	ble	10368 <ReadInt16Data+0x1004>
    fa4c:	add	r7, sp, #24
    fa50:	ldr	r3, [sp, #4]
    fa54:	mov	r4, r3
    fa58:	add	r5, r3, r5, lsl #1
    fa5c:	mov	r0, r7
    fa60:	bl	18a4 <Mat_int32Swap>
    fa64:	strh	r0, [r4], #2
    fa68:	add	r7, r7, #4
    fa6c:	cmp	r4, r5
    fa70:	bne	fa5c <ReadInt16Data+0x6f8>
    fa74:	b	10368 <ReadInt16Data+0x1004>
    fa78:	cmp	r5, #256	; 0x100
    fa7c:	ble	fb50 <ReadInt16Data+0x7ec>
    fa80:	ldr	r2, [sp, #4]
    fa84:	sub	r8, r2, #2
    fa88:	sub	r3, r5, #256	; 0x100
    fa8c:	sub	r3, r3, #1
    fa90:	lsr	r3, r3, #8
    fa94:	str	r3, [sp, #12]
    fa98:	add	fp, r2, r3, lsl #9
    fa9c:	add	fp, fp, #508	; 0x1fc
    faa0:	add	fp, fp, #2
    faa4:	add	sl, sp, #24
    faa8:	add	r4, sl, #1020	; 0x3fc
    faac:	ldr	r3, [r7]
    fab0:	mov	r2, #256	; 0x100
    fab4:	ldr	r1, [sp]
    fab8:	mov	r0, sl
    fabc:	bl	1520 <fread@plt>
    fac0:	add	r6, r6, r0
    fac4:	str	r6, [sp, #8]
    fac8:	sub	r9, sl, #4
    facc:	mov	r2, r8
    fad0:	mov	r3, r9
    fad4:	ldr	r1, [r3, #4]!
    fad8:	strh	r1, [r2, #2]!
    fadc:	cmp	r3, r4
    fae0:	bne	fad4 <ReadInt16Data+0x770>
    fae4:	add	r8, r8, #512	; 0x200
    fae8:	cmp	r8, fp
    faec:	bne	faac <ReadInt16Data+0x748>
    faf0:	ldr	r3, [sp, #12]
    faf4:	add	r4, r3, #1
    faf8:	lsl	r4, r4, #8
    fafc:	cmp	r5, r4
    fb00:	ble	10368 <ReadInt16Data+0x1004>
    fb04:	sub	r5, r5, r4
    fb08:	ldr	r3, [r7]
    fb0c:	mov	r2, r5
    fb10:	ldr	r1, [sp]
    fb14:	add	r0, sp, #24
    fb18:	bl	1520 <fread@plt>
    fb1c:	ldr	r3, [sp, #8]
    fb20:	add	r6, r3, r0
    fb24:	cmp	r5, #0
    fb28:	ble	10368 <ReadInt16Data+0x1004>
    fb2c:	ldr	r3, [sp, #4]
    fb30:	add	r2, r3, r4, lsl #1
    fb34:	add	r5, r5, r4
    fb38:	add	r3, r3, r5, lsl #1
    fb3c:	ldr	r1, [r9, #4]!
    fb40:	strh	r1, [r2], #2
    fb44:	cmp	r2, r3
    fb48:	bne	fb3c <ReadInt16Data+0x7d8>
    fb4c:	b	10368 <ReadInt16Data+0x1004>
    fb50:	ldr	r3, [r7]
    fb54:	mov	r2, r5
    fb58:	ldr	r1, [sp]
    fb5c:	add	r0, sp, #24
    fb60:	bl	1520 <fread@plt>
    fb64:	mov	r6, r0
    fb68:	cmp	r5, #0
    fb6c:	ble	10368 <ReadInt16Data+0x1004>
    fb70:	add	r2, sp, #20
    fb74:	ldr	r1, [sp, #4]
    fb78:	mov	r3, r1
    fb7c:	add	r5, r1, r5, lsl #1
    fb80:	ldr	r1, [r2, #4]!
    fb84:	strh	r1, [r3], #2
    fb88:	cmp	r3, r5
    fb8c:	bne	fb80 <ReadInt16Data+0x81c>
    fb90:	b	10368 <ReadInt16Data+0x1004>
    fb94:	ldr	r6, [r7, #20]
    fb98:	cmp	r6, #0
    fb9c:	beq	fce4 <ReadInt16Data+0x980>
    fba0:	cmp	r5, #256	; 0x100
    fba4:	ble	fc98 <ReadInt16Data+0x934>
    fba8:	ldr	r2, [sp, #4]
    fbac:	sub	sl, r2, #2
    fbb0:	sub	r3, r5, #256	; 0x100
    fbb4:	sub	r3, r3, #1
    fbb8:	lsr	r3, r3, #8
    fbbc:	str	r3, [sp, #20]
    fbc0:	add	fp, r2, r3, lsl #9
    fbc4:	add	fp, fp, #508	; 0x1fc
    fbc8:	add	fp, fp, #2
    fbcc:	mov	r6, #0
    fbd0:	add	r3, sp, #24
    fbd4:	str	r3, [sp, #16]
    fbd8:	add	r9, sp, #1040	; 0x410
    fbdc:	add	r9, r9, #8
    fbe0:	ldr	r3, [r7]
    fbe4:	mov	r2, #256	; 0x100
    fbe8:	ldr	r1, [sp]
    fbec:	ldr	r4, [sp, #16]
    fbf0:	mov	r0, r4
    fbf4:	bl	1520 <fread@plt>
    fbf8:	add	r6, r6, r0
    fbfc:	str	r6, [sp, #8]
    fc00:	str	r4, [sp, #12]
    fc04:	mov	r8, sl
    fc08:	mov	r0, r4
    fc0c:	bl	18d4 <Mat_uint32Swap>
    fc10:	strh	r0, [r8, #2]!
    fc14:	add	r4, r4, #4
    fc18:	cmp	r4, r9
    fc1c:	bne	fc08 <ReadInt16Data+0x8a4>
    fc20:	add	sl, sl, #512	; 0x200
    fc24:	cmp	sl, fp
    fc28:	bne	fbe0 <ReadInt16Data+0x87c>
    fc2c:	ldr	r3, [sp, #20]
    fc30:	add	r4, r3, #1
    fc34:	lsl	r4, r4, #8
    fc38:	cmp	r5, r4
    fc3c:	ble	10368 <ReadInt16Data+0x1004>
    fc40:	sub	r5, r5, r4
    fc44:	ldr	r3, [r7]
    fc48:	mov	r2, r5
    fc4c:	ldr	r1, [sp]
    fc50:	add	r0, sp, #24
    fc54:	bl	1520 <fread@plt>
    fc58:	ldr	r3, [sp, #8]
    fc5c:	add	r6, r3, r0
    fc60:	cmp	r5, #0
    fc64:	ble	10368 <ReadInt16Data+0x1004>
    fc68:	ldr	r3, [sp, #4]
    fc6c:	add	r7, r3, r4, lsl #1
    fc70:	add	r4, r5, r4
    fc74:	add	r4, r3, r4, lsl #1
    fc78:	ldr	r5, [sp, #12]
    fc7c:	mov	r0, r5
    fc80:	bl	18d4 <Mat_uint32Swap>
    fc84:	strh	r0, [r7], #2
    fc88:	add	r5, r5, #4
    fc8c:	cmp	r7, r4
    fc90:	bne	fc7c <ReadInt16Data+0x918>
    fc94:	b	10368 <ReadInt16Data+0x1004>
    fc98:	ldr	r3, [r7]
    fc9c:	mov	r2, r5
    fca0:	ldr	r1, [sp]
    fca4:	add	r0, sp, #24
    fca8:	bl	1520 <fread@plt>
    fcac:	mov	r6, r0
    fcb0:	cmp	r5, #0
    fcb4:	ble	10368 <ReadInt16Data+0x1004>
    fcb8:	add	r7, sp, #24
    fcbc:	ldr	r3, [sp, #4]
    fcc0:	mov	r4, r3
    fcc4:	add	r5, r3, r5, lsl #1
    fcc8:	mov	r0, r7
    fccc:	bl	18d4 <Mat_uint32Swap>
    fcd0:	strh	r0, [r4], #2
    fcd4:	add	r7, r7, #4
    fcd8:	cmp	r4, r5
    fcdc:	bne	fcc8 <ReadInt16Data+0x964>
    fce0:	b	10368 <ReadInt16Data+0x1004>
    fce4:	cmp	r5, #256	; 0x100
    fce8:	ble	fdbc <ReadInt16Data+0xa58>
    fcec:	ldr	r2, [sp, #4]
    fcf0:	sub	r8, r2, #2
    fcf4:	sub	r3, r5, #256	; 0x100
    fcf8:	sub	r3, r3, #1
    fcfc:	lsr	r3, r3, #8
    fd00:	str	r3, [sp, #12]
    fd04:	add	fp, r2, r3, lsl #9
    fd08:	add	fp, fp, #508	; 0x1fc
    fd0c:	add	fp, fp, #2
    fd10:	add	sl, sp, #24
    fd14:	add	r4, sl, #1020	; 0x3fc
    fd18:	ldr	r3, [r7]
    fd1c:	mov	r2, #256	; 0x100
    fd20:	ldr	r1, [sp]
    fd24:	mov	r0, sl
    fd28:	bl	1520 <fread@plt>
    fd2c:	add	r6, r6, r0
    fd30:	str	r6, [sp, #8]
    fd34:	sub	r9, sl, #4
    fd38:	mov	r2, r8
    fd3c:	mov	r3, r9
    fd40:	ldr	r1, [r3, #4]!
    fd44:	strh	r1, [r2, #2]!
    fd48:	cmp	r3, r4
    fd4c:	bne	fd40 <ReadInt16Data+0x9dc>
    fd50:	add	r8, r8, #512	; 0x200
    fd54:	cmp	r8, fp
    fd58:	bne	fd18 <ReadInt16Data+0x9b4>
    fd5c:	ldr	r3, [sp, #12]
    fd60:	add	r4, r3, #1
    fd64:	lsl	r4, r4, #8
    fd68:	cmp	r5, r4
    fd6c:	ble	10368 <ReadInt16Data+0x1004>
    fd70:	sub	r5, r5, r4
    fd74:	ldr	r3, [r7]
    fd78:	mov	r2, r5
    fd7c:	ldr	r1, [sp]
    fd80:	add	r0, sp, #24
    fd84:	bl	1520 <fread@plt>
    fd88:	ldr	r3, [sp, #8]
    fd8c:	add	r6, r3, r0
    fd90:	cmp	r5, #0
    fd94:	ble	10368 <ReadInt16Data+0x1004>
    fd98:	ldr	r3, [sp, #4]
    fd9c:	add	r2, r3, r4, lsl #1
    fda0:	add	r5, r5, r4
    fda4:	add	r3, r3, r5, lsl #1
    fda8:	ldr	r1, [r9, #4]!
    fdac:	strh	r1, [r2], #2
    fdb0:	cmp	r2, r3
    fdb4:	bne	fda8 <ReadInt16Data+0xa44>
    fdb8:	b	10368 <ReadInt16Data+0x1004>
    fdbc:	ldr	r3, [r7]
    fdc0:	mov	r2, r5
    fdc4:	ldr	r1, [sp]
    fdc8:	add	r0, sp, #24
    fdcc:	bl	1520 <fread@plt>
    fdd0:	mov	r6, r0
    fdd4:	cmp	r5, #0
    fdd8:	ble	10368 <ReadInt16Data+0x1004>
    fddc:	add	r2, sp, #20
    fde0:	ldr	r1, [sp, #4]
    fde4:	mov	r3, r1
    fde8:	add	r5, r1, r5, lsl #1
    fdec:	ldr	r1, [r2, #4]!
    fdf0:	strh	r1, [r3], #2
    fdf4:	cmp	r3, r5
    fdf8:	bne	fdec <ReadInt16Data+0xa88>
    fdfc:	b	10368 <ReadInt16Data+0x1004>
    fe00:	ldr	r6, [r7, #20]
    fe04:	cmp	r6, #0
    fe08:	beq	ff4c <ReadInt16Data+0xbe8>
    fe0c:	cmp	r5, #256	; 0x100
    fe10:	ble	ff00 <ReadInt16Data+0xb9c>
    fe14:	ldr	r2, [sp, #4]
    fe18:	sub	sl, r2, #2
    fe1c:	sub	r3, r5, #256	; 0x100
    fe20:	sub	r3, r3, #1
    fe24:	lsr	r3, r3, #8
    fe28:	str	r3, [sp, #20]
    fe2c:	add	fp, r2, r3, lsl #9
    fe30:	add	fp, fp, #508	; 0x1fc
    fe34:	add	fp, fp, #2
    fe38:	mov	r6, #0
    fe3c:	add	r3, sp, #24
    fe40:	str	r3, [sp, #16]
    fe44:	add	r9, sp, #536	; 0x218
    fe48:	ldr	r3, [r7]
    fe4c:	mov	r2, #256	; 0x100
    fe50:	ldr	r1, [sp]
    fe54:	ldr	r4, [sp, #16]
    fe58:	mov	r0, r4
    fe5c:	bl	1520 <fread@plt>
    fe60:	add	r6, r6, r0
    fe64:	str	r6, [sp, #8]
    fe68:	str	r4, [sp, #12]
    fe6c:	mov	r8, sl
    fe70:	mov	r0, r4
    fe74:	bl	1904 <Mat_int16Swap>
    fe78:	strh	r0, [r8, #2]!
    fe7c:	add	r4, r4, #2
    fe80:	cmp	r4, r9
    fe84:	bne	fe70 <ReadInt16Data+0xb0c>
    fe88:	add	sl, sl, #512	; 0x200
    fe8c:	cmp	sl, fp
    fe90:	bne	fe48 <ReadInt16Data+0xae4>
    fe94:	ldr	r3, [sp, #20]
    fe98:	add	r4, r3, #1
    fe9c:	lsl	r4, r4, #8
    fea0:	cmp	r5, r4
    fea4:	ble	10368 <ReadInt16Data+0x1004>
    fea8:	sub	r5, r5, r4
    feac:	ldr	r3, [r7]
    feb0:	mov	r2, r5
    feb4:	ldr	r1, [sp]
    feb8:	add	r0, sp, #24
    febc:	bl	1520 <fread@plt>
    fec0:	ldr	r3, [sp, #8]
    fec4:	add	r6, r3, r0
    fec8:	cmp	r5, #0
    fecc:	ble	10368 <ReadInt16Data+0x1004>
    fed0:	ldr	r3, [sp, #4]
    fed4:	add	r7, r3, r4, lsl #1
    fed8:	add	r4, r5, r4
    fedc:	add	r4, r3, r4, lsl #1
    fee0:	ldr	r5, [sp, #12]
    fee4:	mov	r0, r5
    fee8:	bl	1904 <Mat_int16Swap>
    feec:	strh	r0, [r7], #2
    fef0:	add	r5, r5, #2
    fef4:	cmp	r7, r4
    fef8:	bne	fee4 <ReadInt16Data+0xb80>
    fefc:	b	10368 <ReadInt16Data+0x1004>
    ff00:	ldr	r3, [r7]
    ff04:	mov	r2, r5
    ff08:	ldr	r1, [sp]
    ff0c:	add	r0, sp, #24
    ff10:	bl	1520 <fread@plt>
    ff14:	mov	r6, r0
    ff18:	cmp	r5, #0
    ff1c:	ble	10368 <ReadInt16Data+0x1004>
    ff20:	add	r7, sp, #24
    ff24:	ldr	r3, [sp, #4]
    ff28:	mov	r4, r3
    ff2c:	add	r5, r3, r5, lsl #1
    ff30:	mov	r0, r7
    ff34:	bl	1904 <Mat_int16Swap>
    ff38:	strh	r0, [r4], #2
    ff3c:	add	r7, r7, #2
    ff40:	cmp	r4, r5
    ff44:	bne	ff30 <ReadInt16Data+0xbcc>
    ff48:	b	10368 <ReadInt16Data+0x1004>
    ff4c:	cmp	r5, #256	; 0x100
    ff50:	ble	10028 <ReadInt16Data+0xcc4>
    ff54:	ldr	r2, [sp, #4]
    ff58:	sub	r8, r2, #2
    ff5c:	sub	r3, r5, #256	; 0x100
    ff60:	sub	r3, r3, #1
    ff64:	lsr	r3, r3, #8
    ff68:	str	r3, [sp, #12]
    ff6c:	add	fp, r2, r3, lsl #9
    ff70:	add	fp, fp, #508	; 0x1fc
    ff74:	add	fp, fp, #2
    ff78:	add	sl, sp, #24
    ff7c:	add	r4, sl, #508	; 0x1fc
    ff80:	add	r4, r4, #2
    ff84:	ldr	r3, [r7]
    ff88:	mov	r2, #256	; 0x100
    ff8c:	ldr	r1, [sp]
    ff90:	mov	r0, sl
    ff94:	bl	1520 <fread@plt>
    ff98:	add	r6, r6, r0
    ff9c:	str	r6, [sp, #8]
    ffa0:	sub	r9, sl, #2
    ffa4:	mov	r2, r8
    ffa8:	mov	r3, r9
    ffac:	ldrh	r1, [r3, #2]!
    ffb0:	strh	r1, [r2, #2]!
    ffb4:	cmp	r3, r4
    ffb8:	bne	ffac <ReadInt16Data+0xc48>
    ffbc:	add	r8, r8, #512	; 0x200
    ffc0:	cmp	r8, fp
    ffc4:	bne	ff84 <ReadInt16Data+0xc20>
    ffc8:	ldr	r3, [sp, #12]
    ffcc:	add	r4, r3, #1
    ffd0:	lsl	r4, r4, #8
    ffd4:	cmp	r5, r4
    ffd8:	ble	10368 <ReadInt16Data+0x1004>
    ffdc:	sub	r5, r5, r4
    ffe0:	ldr	r3, [r7]
    ffe4:	mov	r2, r5
    ffe8:	ldr	r1, [sp]
    ffec:	add	r0, sp, #24
    fff0:	bl	1520 <fread@plt>
    fff4:	ldr	r3, [sp, #8]
    fff8:	add	r6, r3, r0
    fffc:	cmp	r5, #0
   10000:	ble	10368 <ReadInt16Data+0x1004>
   10004:	ldr	r3, [sp, #4]
   10008:	add	r2, r3, r4, lsl #1
   1000c:	add	r5, r5, r4
   10010:	add	r3, r3, r5, lsl #1
   10014:	ldrh	r1, [r9, #2]!
   10018:	strh	r1, [r2], #2
   1001c:	cmp	r2, r3
   10020:	bne	10014 <ReadInt16Data+0xcb0>
   10024:	b	10368 <ReadInt16Data+0x1004>
   10028:	ldr	r3, [r7]
   1002c:	mov	r2, r5
   10030:	ldr	r1, [sp]
   10034:	add	r0, sp, #24
   10038:	bl	1520 <fread@plt>
   1003c:	mov	r6, r0
   10040:	cmp	r5, #0
   10044:	ble	10368 <ReadInt16Data+0x1004>
   10048:	add	r2, sp, #22
   1004c:	ldr	r1, [sp, #4]
   10050:	mov	r3, r1
   10054:	add	r5, r1, r5, lsl #1
   10058:	ldrh	r1, [r2, #2]!
   1005c:	strh	r1, [r3], #2
   10060:	cmp	r3, r5
   10064:	bne	10058 <ReadInt16Data+0xcf4>
   10068:	b	10368 <ReadInt16Data+0x1004>
   1006c:	ldr	r6, [r7, #20]
   10070:	cmp	r6, #0
   10074:	beq	101b8 <ReadInt16Data+0xe54>
   10078:	cmp	r5, #256	; 0x100
   1007c:	ble	1016c <ReadInt16Data+0xe08>
   10080:	ldr	r2, [sp, #4]
   10084:	sub	sl, r2, #2
   10088:	sub	r3, r5, #256	; 0x100
   1008c:	sub	r3, r3, #1
   10090:	lsr	r3, r3, #8
   10094:	str	r3, [sp, #20]
   10098:	add	fp, r2, r3, lsl #9
   1009c:	add	fp, fp, #508	; 0x1fc
   100a0:	add	fp, fp, #2
   100a4:	mov	r6, #0
   100a8:	add	r3, sp, #24
   100ac:	str	r3, [sp, #16]
   100b0:	add	r9, sp, #536	; 0x218
   100b4:	ldr	r3, [r7]
   100b8:	mov	r2, #256	; 0x100
   100bc:	ldr	r1, [sp]
   100c0:	ldr	r4, [sp, #16]
   100c4:	mov	r0, r4
   100c8:	bl	1520 <fread@plt>
   100cc:	add	r6, r6, r0
   100d0:	str	r6, [sp, #8]
   100d4:	str	r4, [sp, #12]
   100d8:	mov	r8, sl
   100dc:	mov	r0, r4
   100e0:	bl	1924 <Mat_uint16Swap>
   100e4:	strh	r0, [r8, #2]!
   100e8:	add	r4, r4, #2
   100ec:	cmp	r4, r9
   100f0:	bne	100dc <ReadInt16Data+0xd78>
   100f4:	add	sl, sl, #512	; 0x200
   100f8:	cmp	sl, fp
   100fc:	bne	100b4 <ReadInt16Data+0xd50>
   10100:	ldr	r3, [sp, #20]
   10104:	add	r4, r3, #1
   10108:	lsl	r4, r4, #8
   1010c:	cmp	r5, r4
   10110:	ble	10368 <ReadInt16Data+0x1004>
   10114:	sub	r5, r5, r4
   10118:	ldr	r3, [r7]
   1011c:	mov	r2, r5
   10120:	ldr	r1, [sp]
   10124:	add	r0, sp, #24
   10128:	bl	1520 <fread@plt>
   1012c:	ldr	r3, [sp, #8]
   10130:	add	r6, r3, r0
   10134:	cmp	r5, #0
   10138:	ble	10368 <ReadInt16Data+0x1004>
   1013c:	ldr	r3, [sp, #4]
   10140:	add	r7, r3, r4, lsl #1
   10144:	add	r4, r5, r4
   10148:	add	r4, r3, r4, lsl #1
   1014c:	ldr	r5, [sp, #12]
   10150:	mov	r0, r5
   10154:	bl	1924 <Mat_uint16Swap>
   10158:	strh	r0, [r7], #2
   1015c:	add	r5, r5, #2
   10160:	cmp	r7, r4
   10164:	bne	10150 <ReadInt16Data+0xdec>
   10168:	b	10368 <ReadInt16Data+0x1004>
   1016c:	ldr	r3, [r7]
   10170:	mov	r2, r5
   10174:	ldr	r1, [sp]
   10178:	add	r0, sp, #24
   1017c:	bl	1520 <fread@plt>
   10180:	mov	r6, r0
   10184:	cmp	r5, #0
   10188:	ble	10368 <ReadInt16Data+0x1004>
   1018c:	add	r7, sp, #24
   10190:	ldr	r3, [sp, #4]
   10194:	mov	r4, r3
   10198:	add	r5, r3, r5, lsl #1
   1019c:	mov	r0, r7
   101a0:	bl	1924 <Mat_uint16Swap>
   101a4:	strh	r0, [r4], #2
   101a8:	add	r7, r7, #2
   101ac:	cmp	r4, r5
   101b0:	bne	1019c <ReadInt16Data+0xe38>
   101b4:	b	10368 <ReadInt16Data+0x1004>
   101b8:	cmp	r5, #256	; 0x100
   101bc:	ble	10294 <ReadInt16Data+0xf30>
   101c0:	ldr	r2, [sp, #4]
   101c4:	sub	r8, r2, #2
   101c8:	sub	r3, r5, #256	; 0x100
   101cc:	sub	r3, r3, #1
   101d0:	lsr	r3, r3, #8
   101d4:	str	r3, [sp, #12]
   101d8:	add	fp, r2, r3, lsl #9
   101dc:	add	fp, fp, #508	; 0x1fc
   101e0:	add	fp, fp, #2
   101e4:	add	sl, sp, #24
   101e8:	add	r4, sl, #508	; 0x1fc
   101ec:	add	r4, r4, #2
   101f0:	ldr	r3, [r7]
   101f4:	mov	r2, #256	; 0x100
   101f8:	ldr	r1, [sp]
   101fc:	mov	r0, sl
   10200:	bl	1520 <fread@plt>
   10204:	add	r6, r6, r0
   10208:	str	r6, [sp, #8]
   1020c:	sub	r9, sl, #2
   10210:	mov	r2, r8
   10214:	mov	r3, r9
   10218:	ldrh	r1, [r3, #2]!
   1021c:	strh	r1, [r2, #2]!
   10220:	cmp	r3, r4
   10224:	bne	10218 <ReadInt16Data+0xeb4>
   10228:	add	r8, r8, #512	; 0x200
   1022c:	cmp	r8, fp
   10230:	bne	101f0 <ReadInt16Data+0xe8c>
   10234:	ldr	r3, [sp, #12]
   10238:	add	r4, r3, #1
   1023c:	lsl	r4, r4, #8
   10240:	cmp	r5, r4
   10244:	ble	10368 <ReadInt16Data+0x1004>
   10248:	sub	r5, r5, r4
   1024c:	ldr	r3, [r7]
   10250:	mov	r2, r5
   10254:	ldr	r1, [sp]
   10258:	add	r0, sp, #24
   1025c:	bl	1520 <fread@plt>
   10260:	ldr	r3, [sp, #8]
   10264:	add	r6, r3, r0
   10268:	cmp	r5, #0
   1026c:	ble	10368 <ReadInt16Data+0x1004>
   10270:	ldr	r3, [sp, #4]
   10274:	add	r2, r3, r4, lsl #1
   10278:	add	r5, r5, r4
   1027c:	add	r3, r3, r5, lsl #1
   10280:	ldrh	r1, [r9, #2]!
   10284:	strh	r1, [r2], #2
   10288:	cmp	r2, r3
   1028c:	bne	10280 <ReadInt16Data+0xf1c>
   10290:	b	10368 <ReadInt16Data+0x1004>
   10294:	ldr	r3, [r7]
   10298:	mov	r2, r5
   1029c:	ldr	r1, [sp]
   102a0:	add	r0, sp, #24
   102a4:	bl	1520 <fread@plt>
   102a8:	mov	r6, r0
   102ac:	cmp	r5, #0
   102b0:	ble	10368 <ReadInt16Data+0x1004>
   102b4:	add	r2, sp, #22
   102b8:	ldr	r1, [sp, #4]
   102bc:	mov	r3, r1
   102c0:	add	r5, r1, r5, lsl #1
   102c4:	ldrh	r1, [r2, #2]!
   102c8:	strh	r1, [r3], #2
   102cc:	cmp	r3, r5
   102d0:	bne	102c4 <ReadInt16Data+0xf60>
   102d4:	b	10368 <ReadInt16Data+0x1004>
   102d8:	cmp	r5, #256	; 0x100
   102dc:	ble	10390 <ReadInt16Data+0x102c>
   102e0:	ldr	r2, [sp, #4]
   102e4:	sub	r8, r2, #2
   102e8:	sub	r3, r5, #256	; 0x100
   102ec:	sub	r3, r3, #1
   102f0:	lsr	r3, r3, #8
   102f4:	str	r3, [sp, #12]
   102f8:	add	fp, r2, r3, lsl #9
   102fc:	add	fp, fp, #508	; 0x1fc
   10300:	add	fp, fp, #2
   10304:	mov	r6, #0
   10308:	add	sl, sp, #24
   1030c:	add	r4, sl, #255	; 0xff
   10310:	ldr	r3, [r7]
   10314:	mov	r2, #256	; 0x100
   10318:	ldr	r1, [sp]
   1031c:	mov	r0, sl
   10320:	bl	1520 <fread@plt>
   10324:	add	r6, r6, r0
   10328:	str	r6, [sp, #8]
   1032c:	sub	r9, sl, #1
   10330:	mov	r2, r8
   10334:	mov	r3, r9
   10338:	ldrsb	r1, [r3, #1]!
   1033c:	strh	r1, [r2, #2]!
   10340:	cmp	r3, r4
   10344:	bne	10338 <ReadInt16Data+0xfd4>
   10348:	add	r8, r8, #512	; 0x200
   1034c:	cmp	r8, fp
   10350:	bne	10310 <ReadInt16Data+0xfac>
   10354:	ldr	r3, [sp, #12]
   10358:	add	r4, r3, #1
   1035c:	lsl	r4, r4, #8
   10360:	cmp	r5, r4
   10364:	bgt	103d4 <ReadInt16Data+0x1070>
   10368:	ldr	r3, [sp]
   1036c:	mul	r0, r3, r6
   10370:	add	sp, sp, #2064	; 0x810
   10374:	add	sp, sp, #12
   10378:	ldrd	r4, [sp]
   1037c:	ldrd	r6, [sp, #8]
   10380:	ldrd	r8, [sp, #16]
   10384:	ldrd	sl, [sp, #24]
   10388:	add	sp, sp, #32
   1038c:	pop	{pc}		; (ldr pc, [sp], #4)
   10390:	ldr	r3, [r7]
   10394:	mov	r2, r5
   10398:	ldr	r1, [sp]
   1039c:	add	r0, sp, #24
   103a0:	bl	1520 <fread@plt>
   103a4:	mov	r6, r0
   103a8:	cmp	r5, #0
   103ac:	ble	10368 <ReadInt16Data+0x1004>
   103b0:	add	r2, sp, #23
   103b4:	ldr	r1, [sp, #4]
   103b8:	mov	r3, r1
   103bc:	add	r5, r1, r5, lsl #1
   103c0:	ldrsb	r1, [r2, #1]!
   103c4:	strh	r1, [r3], #2
   103c8:	cmp	r3, r5
   103cc:	bne	103c0 <ReadInt16Data+0x105c>
   103d0:	b	10368 <ReadInt16Data+0x1004>
   103d4:	sub	r5, r5, r4
   103d8:	ldr	r3, [r7]
   103dc:	mov	r2, r5
   103e0:	ldr	r1, [sp]
   103e4:	add	r0, sp, #24
   103e8:	bl	1520 <fread@plt>
   103ec:	ldr	r3, [sp, #8]
   103f0:	add	r6, r3, r0
   103f4:	cmp	r5, #0
   103f8:	ble	10368 <ReadInt16Data+0x1004>
   103fc:	ldr	r3, [sp, #4]
   10400:	add	r2, r3, r4, lsl #1
   10404:	add	r5, r5, r4
   10408:	add	r3, r3, r5, lsl #1
   1040c:	ldrsb	r1, [r9, #1]!
   10410:	strh	r1, [r2], #2
   10414:	cmp	r2, r3
   10418:	bne	1040c <ReadInt16Data+0x10a8>
   1041c:	b	10368 <ReadInt16Data+0x1004>
   10420:	cmp	r5, #256	; 0x100
   10424:	ble	104fc <ReadInt16Data+0x1198>
   10428:	ldr	r2, [sp, #4]
   1042c:	sub	r8, r2, #2
   10430:	sub	r3, r5, #256	; 0x100
   10434:	sub	r3, r3, #1
   10438:	lsr	r3, r3, #8
   1043c:	str	r3, [sp, #12]
   10440:	add	fp, r2, r3, lsl #9
   10444:	add	fp, fp, #508	; 0x1fc
   10448:	add	fp, fp, #2
   1044c:	mov	r6, #0
   10450:	add	sl, sp, #24
   10454:	add	r4, sl, #255	; 0xff
   10458:	ldr	r3, [r7]
   1045c:	mov	r2, #256	; 0x100
   10460:	ldr	r1, [sp]
   10464:	mov	r0, sl
   10468:	bl	1520 <fread@plt>
   1046c:	add	r6, r6, r0
   10470:	str	r6, [sp, #8]
   10474:	sub	r9, sl, #1
   10478:	mov	r2, r8
   1047c:	mov	r3, r9
   10480:	ldrb	r1, [r3, #1]!
   10484:	strh	r1, [r2, #2]!
   10488:	cmp	r3, r4
   1048c:	bne	10480 <ReadInt16Data+0x111c>
   10490:	add	r8, r8, #512	; 0x200
   10494:	cmp	r8, fp
   10498:	bne	10458 <ReadInt16Data+0x10f4>
   1049c:	ldr	r3, [sp, #12]
   104a0:	add	r4, r3, #1
   104a4:	lsl	r4, r4, #8
   104a8:	cmp	r5, r4
   104ac:	ble	10368 <ReadInt16Data+0x1004>
   104b0:	sub	r5, r5, r4
   104b4:	ldr	r3, [r7]
   104b8:	mov	r2, r5
   104bc:	ldr	r1, [sp]
   104c0:	add	r0, sp, #24
   104c4:	bl	1520 <fread@plt>
   104c8:	ldr	r3, [sp, #8]
   104cc:	add	r6, r3, r0
   104d0:	cmp	r5, #0
   104d4:	ble	10368 <ReadInt16Data+0x1004>
   104d8:	ldr	r3, [sp, #4]
   104dc:	add	r2, r3, r4, lsl #1
   104e0:	add	r5, r5, r4
   104e4:	add	r3, r3, r5, lsl #1
   104e8:	ldrb	r1, [r9, #1]!
   104ec:	strh	r1, [r2], #2
   104f0:	cmp	r2, r3
   104f4:	bne	104e8 <ReadInt16Data+0x1184>
   104f8:	b	10368 <ReadInt16Data+0x1004>
   104fc:	ldr	r3, [r7]
   10500:	mov	r2, r5
   10504:	ldr	r1, [sp]
   10508:	add	r0, sp, #24
   1050c:	bl	1520 <fread@plt>
   10510:	mov	r6, r0
   10514:	cmp	r5, #0
   10518:	ble	10368 <ReadInt16Data+0x1004>
   1051c:	add	r2, sp, #23
   10520:	ldr	r1, [sp, #4]
   10524:	mov	r3, r1
   10528:	add	r5, r1, r5, lsl #1
   1052c:	ldrb	r1, [r2, #1]!
   10530:	strh	r1, [r3], #2
   10534:	cmp	r3, r5
   10538:	bne	1052c <ReadInt16Data+0x11c8>
   1053c:	b	10368 <ReadInt16Data+0x1004>
   10540:	cmp	r4, #12
   10544:	beq	10658 <ReadInt16Data+0x12f4>
   10548:	cmp	r4, #13
   1054c:	movne	r6, #0
   10550:	bne	10368 <ReadInt16Data+0x1004>
   10554:	ldr	r6, [r7, #20]
   10558:	cmp	r6, #0
   1055c:	beq	10910 <ReadInt16Data+0x15ac>
   10560:	cmp	r5, #256	; 0x100
   10564:	ble	108c4 <ReadInt16Data+0x1560>
   10568:	ldr	r2, [sp, #4]
   1056c:	sub	sl, r2, #2
   10570:	sub	r3, r5, #256	; 0x100
   10574:	sub	r3, r3, #1
   10578:	lsr	r3, r3, #8
   1057c:	str	r3, [sp, #12]
   10580:	add	fp, r2, r3, lsl #9
   10584:	add	fp, fp, #508	; 0x1fc
   10588:	add	fp, fp, #2
   1058c:	mov	r6, #0
   10590:	add	r3, sp, #24
   10594:	str	r3, [sp, #20]
   10598:	add	r9, sp, #2064	; 0x810
   1059c:	add	r9, r9, #8
   105a0:	ldr	r3, [r7]
   105a4:	mov	r2, #256	; 0x100
   105a8:	ldr	r1, [sp]
   105ac:	ldr	r4, [sp, #20]
   105b0:	mov	r0, r4
   105b4:	bl	1520 <fread@plt>
   105b8:	add	r6, r6, r0
   105bc:	str	r6, [sp, #8]
   105c0:	str	r4, [sp, #16]
   105c4:	mov	r8, sl
   105c8:	mov	r0, r4
   105cc:	bl	1848 <Mat_uint64Swap>
   105d0:	strh	r0, [r8, #2]!
   105d4:	add	r4, r4, #8
   105d8:	cmp	r9, r4
   105dc:	bne	105c8 <ReadInt16Data+0x1264>
   105e0:	add	sl, sl, #512	; 0x200
   105e4:	cmp	fp, sl
   105e8:	bne	105a0 <ReadInt16Data+0x123c>
   105ec:	ldr	r3, [sp, #12]
   105f0:	add	r4, r3, #1
   105f4:	lsl	r4, r4, #8
   105f8:	cmp	r5, r4
   105fc:	ble	10368 <ReadInt16Data+0x1004>
   10600:	sub	r5, r5, r4
   10604:	ldr	r3, [r7]
   10608:	mov	r2, r5
   1060c:	ldr	r1, [sp]
   10610:	add	r0, sp, #24
   10614:	bl	1520 <fread@plt>
   10618:	ldr	r3, [sp, #8]
   1061c:	add	r6, r3, r0
   10620:	cmp	r5, #0
   10624:	ble	10368 <ReadInt16Data+0x1004>
   10628:	ldr	r3, [sp, #4]
   1062c:	add	r7, r3, r4, lsl #1
   10630:	add	r4, r5, r4
   10634:	add	r4, r3, r4, lsl #1
   10638:	ldr	r5, [sp, #16]
   1063c:	mov	r0, r5
   10640:	bl	1848 <Mat_uint64Swap>
   10644:	strh	r0, [r7], #2
   10648:	add	r5, r5, #8
   1064c:	cmp	r4, r7
   10650:	bne	1063c <ReadInt16Data+0x12d8>
   10654:	b	10368 <ReadInt16Data+0x1004>
   10658:	ldr	r6, [r7, #20]
   1065c:	cmp	r6, #0
   10660:	beq	107a8 <ReadInt16Data+0x1444>
   10664:	cmp	r5, #256	; 0x100
   10668:	ble	1075c <ReadInt16Data+0x13f8>
   1066c:	ldr	r2, [sp, #4]
   10670:	sub	sl, r2, #2
   10674:	sub	r3, r5, #256	; 0x100
   10678:	sub	r3, r3, #1
   1067c:	lsr	r3, r3, #8
   10680:	str	r3, [sp, #12]
   10684:	add	fp, r2, r3, lsl #9
   10688:	add	fp, fp, #508	; 0x1fc
   1068c:	add	fp, fp, #2
   10690:	mov	r6, #0
   10694:	add	r3, sp, #24
   10698:	str	r3, [sp, #20]
   1069c:	add	r9, sp, #2064	; 0x810
   106a0:	add	r9, r9, #8
   106a4:	ldr	r3, [r7]
   106a8:	mov	r2, #256	; 0x100
   106ac:	ldr	r1, [sp]
   106b0:	ldr	r4, [sp, #20]
   106b4:	mov	r0, r4
   106b8:	bl	1520 <fread@plt>
   106bc:	add	r6, r6, r0
   106c0:	str	r6, [sp, #8]
   106c4:	str	r4, [sp, #16]
   106c8:	mov	r8, sl
   106cc:	mov	r0, r4
   106d0:	bl	17ec <Mat_int64Swap>
   106d4:	strh	r0, [r8, #2]!
   106d8:	add	r4, r4, #8
   106dc:	cmp	r4, r9
   106e0:	bne	106cc <ReadInt16Data+0x1368>
   106e4:	add	sl, sl, #512	; 0x200
   106e8:	cmp	fp, sl
   106ec:	bne	106a4 <ReadInt16Data+0x1340>
   106f0:	ldr	r3, [sp, #12]
   106f4:	add	r4, r3, #1
   106f8:	lsl	r4, r4, #8
   106fc:	cmp	r5, r4
   10700:	ble	10368 <ReadInt16Data+0x1004>
   10704:	sub	r5, r5, r4
   10708:	ldr	r3, [r7]
   1070c:	mov	r2, r5
   10710:	ldr	r1, [sp]
   10714:	add	r0, sp, #24
   10718:	bl	1520 <fread@plt>
   1071c:	ldr	r3, [sp, #8]
   10720:	add	r6, r3, r0
   10724:	cmp	r5, #0
   10728:	ble	10368 <ReadInt16Data+0x1004>
   1072c:	ldr	r3, [sp, #4]
   10730:	add	r7, r3, r4, lsl #1
   10734:	add	r4, r5, r4
   10738:	add	r4, r3, r4, lsl #1
   1073c:	ldr	r5, [sp, #16]
   10740:	mov	r0, r5
   10744:	bl	17ec <Mat_int64Swap>
   10748:	strh	r0, [r7], #2
   1074c:	add	r5, r5, #8
   10750:	cmp	r4, r7
   10754:	bne	10740 <ReadInt16Data+0x13dc>
   10758:	b	10368 <ReadInt16Data+0x1004>
   1075c:	ldr	r3, [r7]
   10760:	mov	r2, r5
   10764:	ldr	r1, [sp]
   10768:	add	r0, sp, #24
   1076c:	bl	1520 <fread@plt>
   10770:	mov	r6, r0
   10774:	cmp	r5, #0
   10778:	ble	10368 <ReadInt16Data+0x1004>
   1077c:	add	r7, sp, #24
   10780:	ldr	r3, [sp, #4]
   10784:	mov	r4, r3
   10788:	add	r5, r3, r5, lsl #1
   1078c:	mov	r0, r7
   10790:	bl	17ec <Mat_int64Swap>
   10794:	strh	r0, [r4], #2
   10798:	add	r7, r7, #8
   1079c:	cmp	r4, r5
   107a0:	bne	1078c <ReadInt16Data+0x1428>
   107a4:	b	10368 <ReadInt16Data+0x1004>
   107a8:	cmp	r5, #256	; 0x100
   107ac:	ble	10880 <ReadInt16Data+0x151c>
   107b0:	ldr	r3, [sp, #4]
   107b4:	sub	r9, r3, #2
   107b8:	sub	fp, r5, #256	; 0x100
   107bc:	sub	fp, fp, #1
   107c0:	lsr	fp, fp, #8
   107c4:	add	r8, r3, fp, lsl #9
   107c8:	add	r8, r8, #508	; 0x1fc
   107cc:	add	r8, r8, #2
   107d0:	add	r3, sp, #24
   107d4:	str	r3, [sp, #12]
   107d8:	add	r4, sp, #2064	; 0x810
   107dc:	ldr	r3, [r7]
   107e0:	mov	r2, #256	; 0x100
   107e4:	ldr	r1, [sp]
   107e8:	ldr	sl, [sp, #12]
   107ec:	mov	r0, sl
   107f0:	bl	1520 <fread@plt>
   107f4:	add	r6, r6, r0
   107f8:	str	r6, [sp, #8]
   107fc:	sub	sl, sl, #8
   10800:	mov	r2, r9
   10804:	mov	r3, sl
   10808:	ldr	r1, [r3, #8]!
   1080c:	strh	r1, [r2, #2]!
   10810:	cmp	r4, r3
   10814:	bne	10808 <ReadInt16Data+0x14a4>
   10818:	add	r9, r9, #512	; 0x200
   1081c:	cmp	r9, r8
   10820:	bne	107dc <ReadInt16Data+0x1478>
   10824:	add	r4, fp, #1
   10828:	lsl	r4, r4, #8
   1082c:	cmp	r5, r4
   10830:	ble	10368 <ReadInt16Data+0x1004>
   10834:	sub	r5, r5, r4
   10838:	ldr	r3, [r7]
   1083c:	mov	r2, r5
   10840:	ldr	r1, [sp]
   10844:	add	r0, sp, #24
   10848:	bl	1520 <fread@plt>
   1084c:	ldr	r3, [sp, #8]
   10850:	add	r6, r3, r0
   10854:	cmp	r5, #0
   10858:	ble	10368 <ReadInt16Data+0x1004>
   1085c:	ldr	r3, [sp, #4]
   10860:	add	r2, r3, r4, lsl #1
   10864:	add	r5, r5, r4
   10868:	add	r3, r3, r5, lsl #1
   1086c:	ldr	r1, [sl, #8]!
   10870:	strh	r1, [r2], #2
   10874:	cmp	r3, r2
   10878:	bne	1086c <ReadInt16Data+0x1508>
   1087c:	b	10368 <ReadInt16Data+0x1004>
   10880:	ldr	r3, [r7]
   10884:	mov	r2, r5
   10888:	ldr	r1, [sp]
   1088c:	add	r0, sp, #24
   10890:	bl	1520 <fread@plt>
   10894:	mov	r6, r0
   10898:	cmp	r5, #0
   1089c:	ble	10368 <ReadInt16Data+0x1004>
   108a0:	add	r2, sp, #16
   108a4:	ldr	r1, [sp, #4]
   108a8:	mov	r3, r1
   108ac:	add	r5, r1, r5, lsl #1
   108b0:	ldr	r1, [r2, #8]!
   108b4:	strh	r1, [r3], #2
   108b8:	cmp	r3, r5
   108bc:	bne	108b0 <ReadInt16Data+0x154c>
   108c0:	b	10368 <ReadInt16Data+0x1004>
   108c4:	ldr	r3, [r7]
   108c8:	mov	r2, r5
   108cc:	ldr	r1, [sp]
   108d0:	add	r0, sp, #24
   108d4:	bl	1520 <fread@plt>
   108d8:	mov	r6, r0
   108dc:	cmp	r5, #0
   108e0:	ble	10368 <ReadInt16Data+0x1004>
   108e4:	add	r7, sp, #24
   108e8:	ldr	r3, [sp, #4]
   108ec:	mov	r4, r3
   108f0:	add	r5, r3, r5, lsl #1
   108f4:	mov	r0, r7
   108f8:	bl	1848 <Mat_uint64Swap>
   108fc:	strh	r0, [r4], #2
   10900:	add	r7, r7, #8
   10904:	cmp	r4, r5
   10908:	bne	108f4 <ReadInt16Data+0x1590>
   1090c:	b	10368 <ReadInt16Data+0x1004>
   10910:	cmp	r5, #256	; 0x100
   10914:	ble	109e8 <ReadInt16Data+0x1684>
   10918:	ldr	r3, [sp, #4]
   1091c:	sub	r9, r3, #2
   10920:	sub	fp, r5, #256	; 0x100
   10924:	sub	fp, fp, #1
   10928:	lsr	fp, fp, #8
   1092c:	add	r8, r3, fp, lsl #9
   10930:	add	r8, r8, #508	; 0x1fc
   10934:	add	r8, r8, #2
   10938:	add	r3, sp, #24
   1093c:	str	r3, [sp, #12]
   10940:	add	r4, sp, #2064	; 0x810
   10944:	ldr	r3, [r7]
   10948:	mov	r2, #256	; 0x100
   1094c:	ldr	r1, [sp]
   10950:	ldr	sl, [sp, #12]
   10954:	mov	r0, sl
   10958:	bl	1520 <fread@plt>
   1095c:	add	r6, r6, r0
   10960:	str	r6, [sp, #8]
   10964:	sub	sl, sl, #8
   10968:	mov	r2, r9
   1096c:	mov	r3, sl
   10970:	ldr	r1, [r3, #8]!
   10974:	strh	r1, [r2, #2]!
   10978:	cmp	r3, r4
   1097c:	bne	10970 <ReadInt16Data+0x160c>
   10980:	add	r9, r9, #512	; 0x200
   10984:	cmp	r9, r8
   10988:	bne	10944 <ReadInt16Data+0x15e0>
   1098c:	add	r4, fp, #1
   10990:	lsl	r4, r4, #8
   10994:	cmp	r5, r4
   10998:	ble	10368 <ReadInt16Data+0x1004>
   1099c:	sub	r5, r5, r4
   109a0:	ldr	r3, [r7]
   109a4:	mov	r2, r5
   109a8:	ldr	r1, [sp]
   109ac:	add	r0, sp, #24
   109b0:	bl	1520 <fread@plt>
   109b4:	ldr	r3, [sp, #8]
   109b8:	add	r6, r3, r0
   109bc:	cmp	r5, #0
   109c0:	ble	10368 <ReadInt16Data+0x1004>
   109c4:	ldr	r3, [sp, #4]
   109c8:	add	r2, r3, r4, lsl #1
   109cc:	add	r5, r5, r4
   109d0:	add	r3, r3, r5, lsl #1
   109d4:	ldr	r1, [sl, #8]!
   109d8:	strh	r1, [r2], #2
   109dc:	cmp	r2, r3
   109e0:	bne	109d4 <ReadInt16Data+0x1670>
   109e4:	b	10368 <ReadInt16Data+0x1004>
   109e8:	ldr	r3, [r7]
   109ec:	mov	r2, r5
   109f0:	ldr	r1, [sp]
   109f4:	add	r0, sp, #24
   109f8:	bl	1520 <fread@plt>
   109fc:	mov	r6, r0
   10a00:	cmp	r5, #0
   10a04:	ble	10368 <ReadInt16Data+0x1004>
   10a08:	add	r2, sp, #16
   10a0c:	ldr	r1, [sp, #4]
   10a10:	mov	r3, r1
   10a14:	add	r5, r1, r5, lsl #1
   10a18:	ldr	r1, [r2, #8]!
   10a1c:	strh	r1, [r3], #2
   10a20:	cmp	r5, r3
   10a24:	bne	10a18 <ReadInt16Data+0x16b4>
   10a28:	b	10368 <ReadInt16Data+0x1004>
   10a2c:	mov	r0, #0
   10a30:	bx	lr

00010a34 <ReadCompressedInt16Data>:
   10a34:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10a38:	strd	r6, [sp, #8]
   10a3c:	strd	r8, [sp, #16]
   10a40:	str	sl, [sp, #24]
   10a44:	str	lr, [sp, #28]
   10a48:	sub	sp, sp, #8
   10a4c:	ldr	r6, [sp, #40]	; 0x28
   10a50:	mov	r7, r2
   10a54:	mov	r9, r1
   10a58:	clz	r1, r1
   10a5c:	lsr	r1, r1, #5
   10a60:	cmp	r2, #0
   10a64:	movne	r2, r1
   10a68:	moveq	r2, #1
   10a6c:	cmp	r0, #0
   10a70:	moveq	r2, #1
   10a74:	cmp	r2, #0
   10a78:	movne	r0, #0
   10a7c:	beq	10a9c <ReadCompressedInt16Data+0x68>
   10a80:	add	sp, sp, #8
   10a84:	ldrd	r4, [sp]
   10a88:	ldrd	r6, [sp, #8]
   10a8c:	ldrd	r8, [sp, #16]
   10a90:	ldr	sl, [sp, #24]
   10a94:	add	sp, sp, #28
   10a98:	pop	{pc}		; (ldr pc, [sp], #4)
   10a9c:	mov	r8, r0
   10aa0:	mov	r5, r3
   10aa4:	mov	r0, r3
   10aa8:	bl	1598 <Mat_SizeOf@plt>
   10aac:	mov	r4, r0
   10ab0:	sub	r3, r5, #1
   10ab4:	cmp	r3, #8
   10ab8:	addls	pc, pc, r3, lsl #2
   10abc:	b	10eb0 <ReadCompressedInt16Data+0x47c>
   10ac0:	b	10b24 <ReadCompressedInt16Data+0xf0>
   10ac4:	b	10ae4 <ReadCompressedInt16Data+0xb0>
   10ac8:	b	10da0 <ReadCompressedInt16Data+0x36c>
   10acc:	b	10e28 <ReadCompressedInt16Data+0x3f4>
   10ad0:	b	10c90 <ReadCompressedInt16Data+0x25c>
   10ad4:	b	10d18 <ReadCompressedInt16Data+0x2e4>
   10ad8:	b	10bf8 <ReadCompressedInt16Data+0x1c4>
   10adc:	b	10eb0 <ReadCompressedInt16Data+0x47c>
   10ae0:	b	10b60 <ReadCompressedInt16Data+0x12c>
   10ae4:	cmp	r6, #0
   10ae8:	movgt	r5, r7
   10aec:	addgt	r7, r7, r6, lsl #1
   10af0:	movgt	sl, sp
   10af4:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10af8:	mov	r3, r4
   10afc:	mov	r2, sl
   10b00:	mov	r1, r9
   10b04:	mov	r0, r8
   10b08:	bl	333c <InflateData>
   10b0c:	ldrb	r3, [sp]
   10b10:	strh	r3, [r5], #2
   10b14:	cmp	r7, r5
   10b18:	bne	10af8 <ReadCompressedInt16Data+0xc4>
   10b1c:	mul	r0, r4, r6
   10b20:	b	10a80 <ReadCompressedInt16Data+0x4c>
   10b24:	cmp	r6, #0
   10b28:	movgt	r5, r7
   10b2c:	addgt	r7, r7, r6, lsl #1
   10b30:	movgt	sl, sp
   10b34:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10b38:	mov	r3, r4
   10b3c:	mov	r2, sl
   10b40:	mov	r1, r9
   10b44:	mov	r0, r8
   10b48:	bl	333c <InflateData>
   10b4c:	ldrsb	r3, [sp]
   10b50:	strh	r3, [r5], #2
   10b54:	cmp	r7, r5
   10b58:	bne	10b38 <ReadCompressedInt16Data+0x104>
   10b5c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10b60:	ldr	r3, [r8, #20]
   10b64:	cmp	r3, #0
   10b68:	bne	10bb0 <ReadCompressedInt16Data+0x17c>
   10b6c:	cmp	r6, #0
   10b70:	movgt	r5, r7
   10b74:	addgt	r7, r7, r6, lsl #1
   10b78:	movgt	sl, sp
   10b7c:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10b80:	mov	r3, r4
   10b84:	mov	r2, sl
   10b88:	mov	r1, r9
   10b8c:	mov	r0, r8
   10b90:	bl	333c <InflateData>
   10b94:	vldr	d7, [sp]
   10b98:	vcvt.s32.f64	s14, d7
   10b9c:	vmov	r3, s14
   10ba0:	strh	r3, [r5], #2
   10ba4:	cmp	r5, r7
   10ba8:	bne	10b80 <ReadCompressedInt16Data+0x14c>
   10bac:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10bb0:	cmp	r6, #0
   10bb4:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10bb8:	mov	r5, r7
   10bbc:	add	r7, r7, r6, lsl #1
   10bc0:	mov	sl, sp
   10bc4:	mov	r3, r4
   10bc8:	mov	r2, sl
   10bcc:	mov	r1, r9
   10bd0:	mov	r0, r8
   10bd4:	bl	333c <InflateData>
   10bd8:	mov	r0, sl
   10bdc:	bl	1974 <Mat_doubleSwap>
   10be0:	vcvt.s32.f64	s0, d0
   10be4:	vmov	r3, s0
   10be8:	strh	r3, [r5], #2
   10bec:	cmp	r5, r7
   10bf0:	bne	10bc4 <ReadCompressedInt16Data+0x190>
   10bf4:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10bf8:	ldr	r3, [r8, #20]
   10bfc:	cmp	r3, #0
   10c00:	bne	10c48 <ReadCompressedInt16Data+0x214>
   10c04:	cmp	r6, #0
   10c08:	movgt	r5, r7
   10c0c:	addgt	r7, r7, r6, lsl #1
   10c10:	movgt	sl, sp
   10c14:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10c18:	mov	r3, r4
   10c1c:	mov	r2, sl
   10c20:	mov	r1, r9
   10c24:	mov	r0, r8
   10c28:	bl	333c <InflateData>
   10c2c:	vldr	s15, [sp]
   10c30:	vcvt.s32.f32	s15, s15
   10c34:	vmov	r3, s15
   10c38:	strh	r3, [r5], #2
   10c3c:	cmp	r5, r7
   10c40:	bne	10c18 <ReadCompressedInt16Data+0x1e4>
   10c44:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10c48:	cmp	r6, #0
   10c4c:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10c50:	mov	r5, r7
   10c54:	add	r7, r7, r6, lsl #1
   10c58:	mov	sl, sp
   10c5c:	mov	r3, r4
   10c60:	mov	r2, sl
   10c64:	mov	r1, r9
   10c68:	mov	r0, r8
   10c6c:	bl	333c <InflateData>
   10c70:	mov	r0, sl
   10c74:	bl	1944 <Mat_floatSwap>
   10c78:	vcvt.s32.f32	s0, s0
   10c7c:	vmov	r3, s0
   10c80:	strh	r3, [r5], #2
   10c84:	cmp	r5, r7
   10c88:	bne	10c5c <ReadCompressedInt16Data+0x228>
   10c8c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10c90:	ldr	r3, [r8, #20]
   10c94:	cmp	r3, #0
   10c98:	bne	10cd8 <ReadCompressedInt16Data+0x2a4>
   10c9c:	cmp	r6, #0
   10ca0:	movgt	r5, r7
   10ca4:	addgt	r7, r7, r6, lsl #1
   10ca8:	movgt	sl, sp
   10cac:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10cb0:	mov	r3, r4
   10cb4:	mov	r2, sl
   10cb8:	mov	r1, r9
   10cbc:	mov	r0, r8
   10cc0:	bl	333c <InflateData>
   10cc4:	ldr	r3, [sp]
   10cc8:	strh	r3, [r5], #2
   10ccc:	cmp	r5, r7
   10cd0:	bne	10cb0 <ReadCompressedInt16Data+0x27c>
   10cd4:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10cd8:	cmp	r6, #0
   10cdc:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10ce0:	mov	r5, r7
   10ce4:	add	r7, r7, r6, lsl #1
   10ce8:	mov	sl, sp
   10cec:	mov	r3, r4
   10cf0:	mov	r2, sl
   10cf4:	mov	r1, r9
   10cf8:	mov	r0, r8
   10cfc:	bl	333c <InflateData>
   10d00:	mov	r0, sl
   10d04:	bl	18a4 <Mat_int32Swap>
   10d08:	strh	r0, [r5], #2
   10d0c:	cmp	r5, r7
   10d10:	bne	10cec <ReadCompressedInt16Data+0x2b8>
   10d14:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10d18:	ldr	r3, [r8, #20]
   10d1c:	cmp	r3, #0
   10d20:	bne	10d60 <ReadCompressedInt16Data+0x32c>
   10d24:	cmp	r6, #0
   10d28:	movgt	r5, r7
   10d2c:	addgt	r7, r7, r6, lsl #1
   10d30:	movgt	sl, sp
   10d34:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10d38:	mov	r3, r4
   10d3c:	mov	r2, sl
   10d40:	mov	r1, r9
   10d44:	mov	r0, r8
   10d48:	bl	333c <InflateData>
   10d4c:	ldr	r3, [sp]
   10d50:	strh	r3, [r5], #2
   10d54:	cmp	r5, r7
   10d58:	bne	10d38 <ReadCompressedInt16Data+0x304>
   10d5c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10d60:	cmp	r6, #0
   10d64:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10d68:	mov	r5, r7
   10d6c:	add	r7, r7, r6, lsl #1
   10d70:	mov	sl, sp
   10d74:	mov	r3, r4
   10d78:	mov	r2, sl
   10d7c:	mov	r1, r9
   10d80:	mov	r0, r8
   10d84:	bl	333c <InflateData>
   10d88:	mov	r0, sl
   10d8c:	bl	18d4 <Mat_uint32Swap>
   10d90:	strh	r0, [r5], #2
   10d94:	cmp	r5, r7
   10d98:	bne	10d74 <ReadCompressedInt16Data+0x340>
   10d9c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10da0:	ldr	r3, [r8, #20]
   10da4:	cmp	r3, #0
   10da8:	bne	10de8 <ReadCompressedInt16Data+0x3b4>
   10dac:	cmp	r6, #0
   10db0:	movgt	r5, r7
   10db4:	addgt	r7, r7, r6, lsl #1
   10db8:	movgt	sl, sp
   10dbc:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10dc0:	mov	r3, r4
   10dc4:	mov	r2, sl
   10dc8:	mov	r1, r9
   10dcc:	mov	r0, r8
   10dd0:	bl	333c <InflateData>
   10dd4:	ldrh	r3, [sp]
   10dd8:	strh	r3, [r5], #2
   10ddc:	cmp	r7, r5
   10de0:	bne	10dc0 <ReadCompressedInt16Data+0x38c>
   10de4:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10de8:	cmp	r6, #0
   10dec:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10df0:	mov	r5, r7
   10df4:	add	r7, r7, r6, lsl #1
   10df8:	mov	sl, sp
   10dfc:	mov	r3, r4
   10e00:	mov	r2, sl
   10e04:	mov	r1, r9
   10e08:	mov	r0, r8
   10e0c:	bl	333c <InflateData>
   10e10:	mov	r0, sl
   10e14:	bl	1904 <Mat_int16Swap>
   10e18:	strh	r0, [r5], #2
   10e1c:	cmp	r7, r5
   10e20:	bne	10dfc <ReadCompressedInt16Data+0x3c8>
   10e24:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10e28:	ldr	r3, [r8, #20]
   10e2c:	cmp	r3, #0
   10e30:	bne	10e70 <ReadCompressedInt16Data+0x43c>
   10e34:	cmp	r6, #0
   10e38:	movgt	r5, r7
   10e3c:	addgt	r7, r7, r6, lsl #1
   10e40:	movgt	sl, sp
   10e44:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10e48:	mov	r3, r4
   10e4c:	mov	r2, sl
   10e50:	mov	r1, r9
   10e54:	mov	r0, r8
   10e58:	bl	333c <InflateData>
   10e5c:	ldrh	r3, [sp]
   10e60:	strh	r3, [r5], #2
   10e64:	cmp	r5, r7
   10e68:	bne	10e48 <ReadCompressedInt16Data+0x414>
   10e6c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10e70:	cmp	r6, #0
   10e74:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10e78:	mov	r5, r7
   10e7c:	add	r7, r7, r6, lsl #1
   10e80:	mov	sl, sp
   10e84:	mov	r3, r4
   10e88:	mov	r2, sl
   10e8c:	mov	r1, r9
   10e90:	mov	r0, r8
   10e94:	bl	333c <InflateData>
   10e98:	mov	r0, sl
   10e9c:	bl	1924 <Mat_uint16Swap>
   10ea0:	strh	r0, [r5], #2
   10ea4:	cmp	r7, r5
   10ea8:	bne	10e84 <ReadCompressedInt16Data+0x450>
   10eac:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10eb0:	cmp	r5, #12
   10eb4:	beq	10f08 <ReadCompressedInt16Data+0x4d4>
   10eb8:	cmp	r5, #13
   10ebc:	bne	10b1c <ReadCompressedInt16Data+0xe8>
   10ec0:	ldr	r3, [r8, #20]
   10ec4:	cmp	r3, #0
   10ec8:	bne	10f90 <ReadCompressedInt16Data+0x55c>
   10ecc:	cmp	r6, #0
   10ed0:	movgt	r5, r7
   10ed4:	addgt	r7, r7, r6, lsl #1
   10ed8:	movgt	sl, sp
   10edc:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10ee0:	mov	r3, r4
   10ee4:	mov	r2, sl
   10ee8:	mov	r1, r9
   10eec:	mov	r0, r8
   10ef0:	bl	333c <InflateData>
   10ef4:	ldr	r3, [sp]
   10ef8:	strh	r3, [r5], #2
   10efc:	cmp	r7, r5
   10f00:	bne	10ee0 <ReadCompressedInt16Data+0x4ac>
   10f04:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10f08:	ldr	r3, [r8, #20]
   10f0c:	cmp	r3, #0
   10f10:	bne	10f50 <ReadCompressedInt16Data+0x51c>
   10f14:	cmp	r6, #0
   10f18:	movgt	r5, r7
   10f1c:	addgt	r7, r7, r6, lsl #1
   10f20:	movgt	sl, sp
   10f24:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10f28:	mov	r3, r4
   10f2c:	mov	r2, sl
   10f30:	mov	r1, r9
   10f34:	mov	r0, r8
   10f38:	bl	333c <InflateData>
   10f3c:	ldr	r3, [sp]
   10f40:	strh	r3, [r5], #2
   10f44:	cmp	r7, r5
   10f48:	bne	10f28 <ReadCompressedInt16Data+0x4f4>
   10f4c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10f50:	cmp	r6, #0
   10f54:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10f58:	mov	r5, r7
   10f5c:	add	r7, r7, r6, lsl #1
   10f60:	mov	sl, sp
   10f64:	mov	r3, r4
   10f68:	mov	r2, sl
   10f6c:	mov	r1, r9
   10f70:	mov	r0, r8
   10f74:	bl	333c <InflateData>
   10f78:	mov	r0, sl
   10f7c:	bl	17ec <Mat_int64Swap>
   10f80:	strh	r0, [r5], #2
   10f84:	cmp	r5, r7
   10f88:	bne	10f64 <ReadCompressedInt16Data+0x530>
   10f8c:	b	10b1c <ReadCompressedInt16Data+0xe8>
   10f90:	cmp	r6, #0
   10f94:	ble	10b1c <ReadCompressedInt16Data+0xe8>
   10f98:	mov	r5, r7
   10f9c:	add	r7, r7, r6, lsl #1
   10fa0:	mov	sl, sp
   10fa4:	mov	r3, r4
   10fa8:	mov	r2, sl
   10fac:	mov	r1, r9
   10fb0:	mov	r0, r8
   10fb4:	bl	333c <InflateData>
   10fb8:	mov	r0, sl
   10fbc:	bl	1848 <Mat_uint64Swap>
   10fc0:	strh	r0, [r5], #2
   10fc4:	cmp	r7, r5
   10fc8:	bne	10fa4 <ReadCompressedInt16Data+0x570>
   10fcc:	b	10b1c <ReadCompressedInt16Data+0xe8>

00010fd0 <ReadUInt16Data>:
   10fd0:	cmp	r1, #0
   10fd4:	cmpne	r0, #0
   10fd8:	beq	12698 <ReadUInt16Data+0x16c8>
   10fdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10fe0:	strd	r6, [sp, #8]
   10fe4:	strd	r8, [sp, #16]
   10fe8:	strd	sl, [sp, #24]
   10fec:	str	lr, [sp, #32]
   10ff0:	sub	sp, sp, #2064	; 0x810
   10ff4:	sub	sp, sp, #12
   10ff8:	mov	r7, r0
   10ffc:	mov	ip, r1
   11000:	ldr	r1, [r0]
   11004:	cmp	r1, #0
   11008:	moveq	r0, #0
   1100c:	beq	11fdc <ReadUInt16Data+0x100c>
   11010:	str	ip, [sp, #4]
   11014:	mov	r5, r3
   11018:	mov	r4, r2
   1101c:	mov	r0, r2
   11020:	bl	1598 <Mat_SizeOf@plt>
   11024:	str	r0, [sp]
   11028:	sub	r3, r4, #1
   1102c:	cmp	r3, #8
   11030:	addls	pc, pc, r3, lsl #2
   11034:	b	121ac <ReadUInt16Data+0x11dc>
   11038:	b	11f44 <ReadUInt16Data+0xf74>
   1103c:	b	1208c <ReadUInt16Data+0x10bc>
   11040:	b	11a6c <ReadUInt16Data+0xa9c>
   11044:	b	11cd8 <ReadUInt16Data+0xd08>
   11048:	b	11594 <ReadUInt16Data+0x5c4>
   1104c:	b	11800 <ReadUInt16Data+0x830>
   11050:	b	112f8 <ReadUInt16Data+0x328>
   11054:	b	121ac <ReadUInt16Data+0x11dc>
   11058:	b	1105c <ReadUInt16Data+0x8c>
   1105c:	ldr	r6, [r7, #20]
   11060:	cmp	r6, #0
   11064:	beq	111c4 <ReadUInt16Data+0x1f4>
   11068:	cmp	r5, #256	; 0x100
   1106c:	ble	11170 <ReadUInt16Data+0x1a0>
   11070:	ldr	r2, [sp, #4]
   11074:	sub	sl, r2, #2
   11078:	sub	r3, r5, #256	; 0x100
   1107c:	sub	r3, r3, #1
   11080:	lsr	r3, r3, #8
   11084:	str	r3, [sp, #20]
   11088:	add	fp, r2, r3, lsl #9
   1108c:	add	fp, fp, #508	; 0x1fc
   11090:	add	fp, fp, #2
   11094:	mov	r6, #0
   11098:	add	r3, sp, #24
   1109c:	str	r3, [sp, #16]
   110a0:	add	r9, sp, #2064	; 0x810
   110a4:	add	r9, r9, #8
   110a8:	ldr	r3, [r7]
   110ac:	mov	r2, #256	; 0x100
   110b0:	ldr	r1, [sp]
   110b4:	ldr	r4, [sp, #16]
   110b8:	mov	r0, r4
   110bc:	bl	1520 <fread@plt>
   110c0:	add	r6, r6, r0
   110c4:	str	r6, [sp, #8]
   110c8:	str	r4, [sp, #12]
   110cc:	mov	r8, sl
   110d0:	mov	r0, r4
   110d4:	bl	1974 <Mat_doubleSwap>
   110d8:	vcvt.u32.f64	s0, d0
   110dc:	vmov	r3, s0
   110e0:	strh	r3, [r8, #2]!
   110e4:	add	r4, r4, #8
   110e8:	cmp	r4, r9
   110ec:	bne	110d0 <ReadUInt16Data+0x100>
   110f0:	add	sl, sl, #512	; 0x200
   110f4:	cmp	sl, fp
   110f8:	bne	110a8 <ReadUInt16Data+0xd8>
   110fc:	ldr	r3, [sp, #20]
   11100:	add	r4, r3, #1
   11104:	lsl	r4, r4, #8
   11108:	cmp	r5, r4
   1110c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11110:	sub	r5, r5, r4
   11114:	ldr	r3, [r7]
   11118:	mov	r2, r5
   1111c:	ldr	r1, [sp]
   11120:	add	r0, sp, #24
   11124:	bl	1520 <fread@plt>
   11128:	ldr	r3, [sp, #8]
   1112c:	add	r6, r3, r0
   11130:	cmp	r5, #0
   11134:	ble	11fd4 <ReadUInt16Data+0x1004>
   11138:	ldr	r3, [sp, #4]
   1113c:	add	r7, r3, r4, lsl #1
   11140:	add	r4, r5, r4
   11144:	add	r4, r3, r4, lsl #1
   11148:	ldr	r5, [sp, #12]
   1114c:	mov	r0, r5
   11150:	bl	1974 <Mat_doubleSwap>
   11154:	vcvt.u32.f64	s0, d0
   11158:	vmov	r3, s0
   1115c:	strh	r3, [r7], #2
   11160:	add	r5, r5, #8
   11164:	cmp	r7, r4
   11168:	bne	1114c <ReadUInt16Data+0x17c>
   1116c:	b	11fd4 <ReadUInt16Data+0x1004>
   11170:	ldr	r3, [r7]
   11174:	mov	r2, r5
   11178:	ldr	r1, [sp]
   1117c:	add	r0, sp, #24
   11180:	bl	1520 <fread@plt>
   11184:	mov	r6, r0
   11188:	cmp	r5, #0
   1118c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11190:	add	r7, sp, #24
   11194:	ldr	r3, [sp, #4]
   11198:	mov	r4, r3
   1119c:	add	r5, r3, r5, lsl #1
   111a0:	mov	r0, r7
   111a4:	bl	1974 <Mat_doubleSwap>
   111a8:	vcvt.u32.f64	s0, d0
   111ac:	vmov	r3, s0
   111b0:	strh	r3, [r4], #2
   111b4:	add	r7, r7, #8
   111b8:	cmp	r4, r5
   111bc:	bne	111a0 <ReadUInt16Data+0x1d0>
   111c0:	b	11fd4 <ReadUInt16Data+0x1004>
   111c4:	cmp	r5, #256	; 0x100
   111c8:	ble	112ac <ReadUInt16Data+0x2dc>
   111cc:	ldr	r3, [sp, #4]
   111d0:	sub	r8, r3, #2
   111d4:	sub	r9, r5, #256	; 0x100
   111d8:	sub	r9, r9, #1
   111dc:	lsr	r9, r9, #8
   111e0:	add	sl, r3, r9, lsl #9
   111e4:	add	sl, sl, #508	; 0x1fc
   111e8:	add	sl, sl, #2
   111ec:	add	fp, sp, #24
   111f0:	add	r4, sp, #2064	; 0x810
   111f4:	add	r4, r4, #8
   111f8:	ldr	r3, [r7]
   111fc:	mov	r2, #256	; 0x100
   11200:	ldr	r1, [sp]
   11204:	mov	r0, fp
   11208:	bl	1520 <fread@plt>
   1120c:	add	r6, r6, r0
   11210:	str	r6, [sp, #8]
   11214:	str	fp, [sp, #12]
   11218:	mov	r2, r8
   1121c:	mov	r3, fp
   11220:	vldmia	r3!, {d7}
   11224:	vcvt.u32.f64	s14, d7
   11228:	vmov	r1, s14
   1122c:	strh	r1, [r2, #2]!
   11230:	cmp	r3, r4
   11234:	bne	11220 <ReadUInt16Data+0x250>
   11238:	add	r8, r8, #512	; 0x200
   1123c:	cmp	r8, sl
   11240:	bne	111f8 <ReadUInt16Data+0x228>
   11244:	add	r4, r9, #1
   11248:	lsl	r4, r4, #8
   1124c:	cmp	r5, r4
   11250:	ble	11fd4 <ReadUInt16Data+0x1004>
   11254:	sub	r5, r5, r4
   11258:	ldr	r3, [r7]
   1125c:	mov	r2, r5
   11260:	ldr	r1, [sp]
   11264:	add	r0, sp, #24
   11268:	bl	1520 <fread@plt>
   1126c:	ldr	r3, [sp, #8]
   11270:	add	r6, r3, r0
   11274:	cmp	r5, #0
   11278:	ble	11fd4 <ReadUInt16Data+0x1004>
   1127c:	ldr	r3, [sp, #4]
   11280:	add	r2, r3, r4, lsl #1
   11284:	add	r5, r5, r4
   11288:	add	r3, r3, r5, lsl #1
   1128c:	ldr	r1, [sp, #12]
   11290:	vldmia	r1!, {d7}
   11294:	vcvt.u32.f64	s14, d7
   11298:	vmov	r0, s14
   1129c:	strh	r0, [r2], #2
   112a0:	cmp	r2, r3
   112a4:	bne	11290 <ReadUInt16Data+0x2c0>
   112a8:	b	11fd4 <ReadUInt16Data+0x1004>
   112ac:	ldr	r3, [r7]
   112b0:	mov	r2, r5
   112b4:	ldr	r1, [sp]
   112b8:	add	r0, sp, #24
   112bc:	bl	1520 <fread@plt>
   112c0:	mov	r6, r0
   112c4:	cmp	r5, #0
   112c8:	ble	11fd4 <ReadUInt16Data+0x1004>
   112cc:	add	r2, sp, #24
   112d0:	ldr	r1, [sp, #4]
   112d4:	mov	r3, r1
   112d8:	add	r5, r1, r5, lsl #1
   112dc:	vldmia	r2!, {d7}
   112e0:	vcvt.u32.f64	s14, d7
   112e4:	vmov	r1, s14
   112e8:	strh	r1, [r3], #2
   112ec:	cmp	r3, r5
   112f0:	bne	112dc <ReadUInt16Data+0x30c>
   112f4:	b	11fd4 <ReadUInt16Data+0x1004>
   112f8:	ldr	r6, [r7, #20]
   112fc:	cmp	r6, #0
   11300:	beq	11460 <ReadUInt16Data+0x490>
   11304:	cmp	r5, #256	; 0x100
   11308:	ble	1140c <ReadUInt16Data+0x43c>
   1130c:	ldr	r2, [sp, #4]
   11310:	sub	sl, r2, #2
   11314:	sub	r3, r5, #256	; 0x100
   11318:	sub	r3, r3, #1
   1131c:	lsr	r3, r3, #8
   11320:	str	r3, [sp, #20]
   11324:	add	fp, r2, r3, lsl #9
   11328:	add	fp, fp, #508	; 0x1fc
   1132c:	add	fp, fp, #2
   11330:	mov	r6, #0
   11334:	add	r3, sp, #24
   11338:	str	r3, [sp, #16]
   1133c:	add	r9, sp, #1040	; 0x410
   11340:	add	r9, r9, #8
   11344:	ldr	r3, [r7]
   11348:	mov	r2, #256	; 0x100
   1134c:	ldr	r1, [sp]
   11350:	ldr	r4, [sp, #16]
   11354:	mov	r0, r4
   11358:	bl	1520 <fread@plt>
   1135c:	add	r6, r6, r0
   11360:	str	r6, [sp, #8]
   11364:	str	r4, [sp, #12]
   11368:	mov	r8, sl
   1136c:	mov	r0, r4
   11370:	bl	1944 <Mat_floatSwap>
   11374:	vcvt.u32.f32	s0, s0
   11378:	vmov	r3, s0
   1137c:	strh	r3, [r8, #2]!
   11380:	add	r4, r4, #4
   11384:	cmp	r4, r9
   11388:	bne	1136c <ReadUInt16Data+0x39c>
   1138c:	add	sl, sl, #512	; 0x200
   11390:	cmp	sl, fp
   11394:	bne	11344 <ReadUInt16Data+0x374>
   11398:	ldr	r3, [sp, #20]
   1139c:	add	r4, r3, #1
   113a0:	lsl	r4, r4, #8
   113a4:	cmp	r5, r4
   113a8:	ble	11fd4 <ReadUInt16Data+0x1004>
   113ac:	sub	r5, r5, r4
   113b0:	ldr	r3, [r7]
   113b4:	mov	r2, r5
   113b8:	ldr	r1, [sp]
   113bc:	add	r0, sp, #24
   113c0:	bl	1520 <fread@plt>
   113c4:	ldr	r3, [sp, #8]
   113c8:	add	r6, r3, r0
   113cc:	cmp	r5, #0
   113d0:	ble	11fd4 <ReadUInt16Data+0x1004>
   113d4:	ldr	r3, [sp, #4]
   113d8:	add	r7, r3, r4, lsl #1
   113dc:	add	r4, r5, r4
   113e0:	add	r4, r3, r4, lsl #1
   113e4:	ldr	r5, [sp, #12]
   113e8:	mov	r0, r5
   113ec:	bl	1944 <Mat_floatSwap>
   113f0:	vcvt.u32.f32	s0, s0
   113f4:	vmov	r3, s0
   113f8:	strh	r3, [r7], #2
   113fc:	add	r5, r5, #4
   11400:	cmp	r7, r4
   11404:	bne	113e8 <ReadUInt16Data+0x418>
   11408:	b	11fd4 <ReadUInt16Data+0x1004>
   1140c:	ldr	r3, [r7]
   11410:	mov	r2, r5
   11414:	ldr	r1, [sp]
   11418:	add	r0, sp, #24
   1141c:	bl	1520 <fread@plt>
   11420:	mov	r6, r0
   11424:	cmp	r5, #0
   11428:	ble	11fd4 <ReadUInt16Data+0x1004>
   1142c:	add	r7, sp, #24
   11430:	ldr	r3, [sp, #4]
   11434:	mov	r4, r3
   11438:	add	r5, r3, r5, lsl #1
   1143c:	mov	r0, r7
   11440:	bl	1944 <Mat_floatSwap>
   11444:	vcvt.u32.f32	s0, s0
   11448:	vmov	r3, s0
   1144c:	strh	r3, [r4], #2
   11450:	add	r7, r7, #4
   11454:	cmp	r4, r5
   11458:	bne	1143c <ReadUInt16Data+0x46c>
   1145c:	b	11fd4 <ReadUInt16Data+0x1004>
   11460:	cmp	r5, #256	; 0x100
   11464:	ble	11548 <ReadUInt16Data+0x578>
   11468:	ldr	r3, [sp, #4]
   1146c:	sub	r8, r3, #2
   11470:	sub	r9, r5, #256	; 0x100
   11474:	sub	r9, r9, #1
   11478:	lsr	r9, r9, #8
   1147c:	add	sl, r3, r9, lsl #9
   11480:	add	sl, sl, #508	; 0x1fc
   11484:	add	sl, sl, #2
   11488:	add	fp, sp, #24
   1148c:	add	r4, sp, #1040	; 0x410
   11490:	add	r4, r4, #8
   11494:	ldr	r3, [r7]
   11498:	mov	r2, #256	; 0x100
   1149c:	ldr	r1, [sp]
   114a0:	mov	r0, fp
   114a4:	bl	1520 <fread@plt>
   114a8:	add	r6, r6, r0
   114ac:	str	r6, [sp, #8]
   114b0:	str	fp, [sp, #12]
   114b4:	mov	r2, r8
   114b8:	mov	r3, fp
   114bc:	vldmia	r3!, {s15}
   114c0:	vcvt.u32.f32	s15, s15
   114c4:	vmov	r1, s15
   114c8:	strh	r1, [r2, #2]!
   114cc:	cmp	r3, r4
   114d0:	bne	114bc <ReadUInt16Data+0x4ec>
   114d4:	add	r8, r8, #512	; 0x200
   114d8:	cmp	r8, sl
   114dc:	bne	11494 <ReadUInt16Data+0x4c4>
   114e0:	add	r4, r9, #1
   114e4:	lsl	r4, r4, #8
   114e8:	cmp	r5, r4
   114ec:	ble	11fd4 <ReadUInt16Data+0x1004>
   114f0:	sub	r5, r5, r4
   114f4:	ldr	r3, [r7]
   114f8:	mov	r2, r5
   114fc:	ldr	r1, [sp]
   11500:	add	r0, sp, #24
   11504:	bl	1520 <fread@plt>
   11508:	ldr	r3, [sp, #8]
   1150c:	add	r6, r3, r0
   11510:	cmp	r5, #0
   11514:	ble	11fd4 <ReadUInt16Data+0x1004>
   11518:	ldr	r3, [sp, #4]
   1151c:	add	r2, r3, r4, lsl #1
   11520:	add	r5, r5, r4
   11524:	add	r3, r3, r5, lsl #1
   11528:	ldr	r1, [sp, #12]
   1152c:	vldmia	r1!, {s15}
   11530:	vcvt.u32.f32	s15, s15
   11534:	vmov	r0, s15
   11538:	strh	r0, [r2], #2
   1153c:	cmp	r2, r3
   11540:	bne	1152c <ReadUInt16Data+0x55c>
   11544:	b	11fd4 <ReadUInt16Data+0x1004>
   11548:	ldr	r3, [r7]
   1154c:	mov	r2, r5
   11550:	ldr	r1, [sp]
   11554:	add	r0, sp, #24
   11558:	bl	1520 <fread@plt>
   1155c:	mov	r6, r0
   11560:	cmp	r5, #0
   11564:	ble	11fd4 <ReadUInt16Data+0x1004>
   11568:	add	r2, sp, #24
   1156c:	ldr	r1, [sp, #4]
   11570:	mov	r3, r1
   11574:	add	r5, r1, r5, lsl #1
   11578:	vldmia	r2!, {s15}
   1157c:	vcvt.u32.f32	s15, s15
   11580:	vmov	r1, s15
   11584:	strh	r1, [r3], #2
   11588:	cmp	r3, r5
   1158c:	bne	11578 <ReadUInt16Data+0x5a8>
   11590:	b	11fd4 <ReadUInt16Data+0x1004>
   11594:	ldr	r6, [r7, #20]
   11598:	cmp	r6, #0
   1159c:	beq	116e4 <ReadUInt16Data+0x714>
   115a0:	cmp	r5, #256	; 0x100
   115a4:	ble	11698 <ReadUInt16Data+0x6c8>
   115a8:	ldr	r2, [sp, #4]
   115ac:	sub	sl, r2, #2
   115b0:	sub	r3, r5, #256	; 0x100
   115b4:	sub	r3, r3, #1
   115b8:	lsr	r3, r3, #8
   115bc:	str	r3, [sp, #20]
   115c0:	add	fp, r2, r3, lsl #9
   115c4:	add	fp, fp, #508	; 0x1fc
   115c8:	add	fp, fp, #2
   115cc:	mov	r6, #0
   115d0:	add	r3, sp, #24
   115d4:	str	r3, [sp, #16]
   115d8:	add	r9, sp, #1040	; 0x410
   115dc:	add	r9, r9, #8
   115e0:	ldr	r3, [r7]
   115e4:	mov	r2, #256	; 0x100
   115e8:	ldr	r1, [sp]
   115ec:	ldr	r4, [sp, #16]
   115f0:	mov	r0, r4
   115f4:	bl	1520 <fread@plt>
   115f8:	add	r6, r6, r0
   115fc:	str	r6, [sp, #8]
   11600:	str	r4, [sp, #12]
   11604:	mov	r8, sl
   11608:	mov	r0, r4
   1160c:	bl	18a4 <Mat_int32Swap>
   11610:	strh	r0, [r8, #2]!
   11614:	add	r4, r4, #4
   11618:	cmp	r4, r9
   1161c:	bne	11608 <ReadUInt16Data+0x638>
   11620:	add	sl, sl, #512	; 0x200
   11624:	cmp	sl, fp
   11628:	bne	115e0 <ReadUInt16Data+0x610>
   1162c:	ldr	r3, [sp, #20]
   11630:	add	r4, r3, #1
   11634:	lsl	r4, r4, #8
   11638:	cmp	r5, r4
   1163c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11640:	sub	r5, r5, r4
   11644:	ldr	r3, [r7]
   11648:	mov	r2, r5
   1164c:	ldr	r1, [sp]
   11650:	add	r0, sp, #24
   11654:	bl	1520 <fread@plt>
   11658:	ldr	r3, [sp, #8]
   1165c:	add	r6, r3, r0
   11660:	cmp	r5, #0
   11664:	ble	11fd4 <ReadUInt16Data+0x1004>
   11668:	ldr	r3, [sp, #4]
   1166c:	add	r7, r3, r4, lsl #1
   11670:	add	r4, r5, r4
   11674:	add	r4, r3, r4, lsl #1
   11678:	ldr	r5, [sp, #12]
   1167c:	mov	r0, r5
   11680:	bl	18a4 <Mat_int32Swap>
   11684:	strh	r0, [r7], #2
   11688:	add	r5, r5, #4
   1168c:	cmp	r7, r4
   11690:	bne	1167c <ReadUInt16Data+0x6ac>
   11694:	b	11fd4 <ReadUInt16Data+0x1004>
   11698:	ldr	r3, [r7]
   1169c:	mov	r2, r5
   116a0:	ldr	r1, [sp]
   116a4:	add	r0, sp, #24
   116a8:	bl	1520 <fread@plt>
   116ac:	mov	r6, r0
   116b0:	cmp	r5, #0
   116b4:	ble	11fd4 <ReadUInt16Data+0x1004>
   116b8:	add	r7, sp, #24
   116bc:	ldr	r3, [sp, #4]
   116c0:	mov	r4, r3
   116c4:	add	r5, r3, r5, lsl #1
   116c8:	mov	r0, r7
   116cc:	bl	18a4 <Mat_int32Swap>
   116d0:	strh	r0, [r4], #2
   116d4:	add	r7, r7, #4
   116d8:	cmp	r4, r5
   116dc:	bne	116c8 <ReadUInt16Data+0x6f8>
   116e0:	b	11fd4 <ReadUInt16Data+0x1004>
   116e4:	cmp	r5, #256	; 0x100
   116e8:	ble	117bc <ReadUInt16Data+0x7ec>
   116ec:	ldr	r2, [sp, #4]
   116f0:	sub	r8, r2, #2
   116f4:	sub	r3, r5, #256	; 0x100
   116f8:	sub	r3, r3, #1
   116fc:	lsr	r3, r3, #8
   11700:	str	r3, [sp, #12]
   11704:	add	fp, r2, r3, lsl #9
   11708:	add	fp, fp, #508	; 0x1fc
   1170c:	add	fp, fp, #2
   11710:	add	sl, sp, #24
   11714:	add	r4, sl, #1020	; 0x3fc
   11718:	ldr	r3, [r7]
   1171c:	mov	r2, #256	; 0x100
   11720:	ldr	r1, [sp]
   11724:	mov	r0, sl
   11728:	bl	1520 <fread@plt>
   1172c:	add	r6, r6, r0
   11730:	str	r6, [sp, #8]
   11734:	sub	r9, sl, #4
   11738:	mov	r2, r8
   1173c:	mov	r3, r9
   11740:	ldr	r1, [r3, #4]!
   11744:	strh	r1, [r2, #2]!
   11748:	cmp	r3, r4
   1174c:	bne	11740 <ReadUInt16Data+0x770>
   11750:	add	r8, r8, #512	; 0x200
   11754:	cmp	r8, fp
   11758:	bne	11718 <ReadUInt16Data+0x748>
   1175c:	ldr	r3, [sp, #12]
   11760:	add	r4, r3, #1
   11764:	lsl	r4, r4, #8
   11768:	cmp	r5, r4
   1176c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11770:	sub	r5, r5, r4
   11774:	ldr	r3, [r7]
   11778:	mov	r2, r5
   1177c:	ldr	r1, [sp]
   11780:	add	r0, sp, #24
   11784:	bl	1520 <fread@plt>
   11788:	ldr	r3, [sp, #8]
   1178c:	add	r6, r3, r0
   11790:	cmp	r5, #0
   11794:	ble	11fd4 <ReadUInt16Data+0x1004>
   11798:	ldr	r3, [sp, #4]
   1179c:	add	r2, r3, r4, lsl #1
   117a0:	add	r5, r5, r4
   117a4:	add	r3, r3, r5, lsl #1
   117a8:	ldr	r1, [r9, #4]!
   117ac:	strh	r1, [r2], #2
   117b0:	cmp	r2, r3
   117b4:	bne	117a8 <ReadUInt16Data+0x7d8>
   117b8:	b	11fd4 <ReadUInt16Data+0x1004>
   117bc:	ldr	r3, [r7]
   117c0:	mov	r2, r5
   117c4:	ldr	r1, [sp]
   117c8:	add	r0, sp, #24
   117cc:	bl	1520 <fread@plt>
   117d0:	mov	r6, r0
   117d4:	cmp	r5, #0
   117d8:	ble	11fd4 <ReadUInt16Data+0x1004>
   117dc:	add	r2, sp, #20
   117e0:	ldr	r1, [sp, #4]
   117e4:	mov	r3, r1
   117e8:	add	r5, r1, r5, lsl #1
   117ec:	ldr	r1, [r2, #4]!
   117f0:	strh	r1, [r3], #2
   117f4:	cmp	r3, r5
   117f8:	bne	117ec <ReadUInt16Data+0x81c>
   117fc:	b	11fd4 <ReadUInt16Data+0x1004>
   11800:	ldr	r6, [r7, #20]
   11804:	cmp	r6, #0
   11808:	beq	11950 <ReadUInt16Data+0x980>
   1180c:	cmp	r5, #256	; 0x100
   11810:	ble	11904 <ReadUInt16Data+0x934>
   11814:	ldr	r2, [sp, #4]
   11818:	sub	sl, r2, #2
   1181c:	sub	r3, r5, #256	; 0x100
   11820:	sub	r3, r3, #1
   11824:	lsr	r3, r3, #8
   11828:	str	r3, [sp, #20]
   1182c:	add	fp, r2, r3, lsl #9
   11830:	add	fp, fp, #508	; 0x1fc
   11834:	add	fp, fp, #2
   11838:	mov	r6, #0
   1183c:	add	r3, sp, #24
   11840:	str	r3, [sp, #16]
   11844:	add	r9, sp, #1040	; 0x410
   11848:	add	r9, r9, #8
   1184c:	ldr	r3, [r7]
   11850:	mov	r2, #256	; 0x100
   11854:	ldr	r1, [sp]
   11858:	ldr	r4, [sp, #16]
   1185c:	mov	r0, r4
   11860:	bl	1520 <fread@plt>
   11864:	add	r6, r6, r0
   11868:	str	r6, [sp, #8]
   1186c:	str	r4, [sp, #12]
   11870:	mov	r8, sl
   11874:	mov	r0, r4
   11878:	bl	18d4 <Mat_uint32Swap>
   1187c:	strh	r0, [r8, #2]!
   11880:	add	r4, r4, #4
   11884:	cmp	r4, r9
   11888:	bne	11874 <ReadUInt16Data+0x8a4>
   1188c:	add	sl, sl, #512	; 0x200
   11890:	cmp	sl, fp
   11894:	bne	1184c <ReadUInt16Data+0x87c>
   11898:	ldr	r3, [sp, #20]
   1189c:	add	r4, r3, #1
   118a0:	lsl	r4, r4, #8
   118a4:	cmp	r5, r4
   118a8:	ble	11fd4 <ReadUInt16Data+0x1004>
   118ac:	sub	r5, r5, r4
   118b0:	ldr	r3, [r7]
   118b4:	mov	r2, r5
   118b8:	ldr	r1, [sp]
   118bc:	add	r0, sp, #24
   118c0:	bl	1520 <fread@plt>
   118c4:	ldr	r3, [sp, #8]
   118c8:	add	r6, r3, r0
   118cc:	cmp	r5, #0
   118d0:	ble	11fd4 <ReadUInt16Data+0x1004>
   118d4:	ldr	r3, [sp, #4]
   118d8:	add	r7, r3, r4, lsl #1
   118dc:	add	r4, r5, r4
   118e0:	add	r4, r3, r4, lsl #1
   118e4:	ldr	r5, [sp, #12]
   118e8:	mov	r0, r5
   118ec:	bl	18d4 <Mat_uint32Swap>
   118f0:	strh	r0, [r7], #2
   118f4:	add	r5, r5, #4
   118f8:	cmp	r7, r4
   118fc:	bne	118e8 <ReadUInt16Data+0x918>
   11900:	b	11fd4 <ReadUInt16Data+0x1004>
   11904:	ldr	r3, [r7]
   11908:	mov	r2, r5
   1190c:	ldr	r1, [sp]
   11910:	add	r0, sp, #24
   11914:	bl	1520 <fread@plt>
   11918:	mov	r6, r0
   1191c:	cmp	r5, #0
   11920:	ble	11fd4 <ReadUInt16Data+0x1004>
   11924:	add	r7, sp, #24
   11928:	ldr	r3, [sp, #4]
   1192c:	mov	r4, r3
   11930:	add	r5, r3, r5, lsl #1
   11934:	mov	r0, r7
   11938:	bl	18d4 <Mat_uint32Swap>
   1193c:	strh	r0, [r4], #2
   11940:	add	r7, r7, #4
   11944:	cmp	r4, r5
   11948:	bne	11934 <ReadUInt16Data+0x964>
   1194c:	b	11fd4 <ReadUInt16Data+0x1004>
   11950:	cmp	r5, #256	; 0x100
   11954:	ble	11a28 <ReadUInt16Data+0xa58>
   11958:	ldr	r2, [sp, #4]
   1195c:	sub	r8, r2, #2
   11960:	sub	r3, r5, #256	; 0x100
   11964:	sub	r3, r3, #1
   11968:	lsr	r3, r3, #8
   1196c:	str	r3, [sp, #12]
   11970:	add	fp, r2, r3, lsl #9
   11974:	add	fp, fp, #508	; 0x1fc
   11978:	add	fp, fp, #2
   1197c:	add	sl, sp, #24
   11980:	add	r4, sl, #1020	; 0x3fc
   11984:	ldr	r3, [r7]
   11988:	mov	r2, #256	; 0x100
   1198c:	ldr	r1, [sp]
   11990:	mov	r0, sl
   11994:	bl	1520 <fread@plt>
   11998:	add	r6, r6, r0
   1199c:	str	r6, [sp, #8]
   119a0:	sub	r9, sl, #4
   119a4:	mov	r2, r8
   119a8:	mov	r3, r9
   119ac:	ldr	r1, [r3, #4]!
   119b0:	strh	r1, [r2, #2]!
   119b4:	cmp	r3, r4
   119b8:	bne	119ac <ReadUInt16Data+0x9dc>
   119bc:	add	r8, r8, #512	; 0x200
   119c0:	cmp	r8, fp
   119c4:	bne	11984 <ReadUInt16Data+0x9b4>
   119c8:	ldr	r3, [sp, #12]
   119cc:	add	r4, r3, #1
   119d0:	lsl	r4, r4, #8
   119d4:	cmp	r5, r4
   119d8:	ble	11fd4 <ReadUInt16Data+0x1004>
   119dc:	sub	r5, r5, r4
   119e0:	ldr	r3, [r7]
   119e4:	mov	r2, r5
   119e8:	ldr	r1, [sp]
   119ec:	add	r0, sp, #24
   119f0:	bl	1520 <fread@plt>
   119f4:	ldr	r3, [sp, #8]
   119f8:	add	r6, r3, r0
   119fc:	cmp	r5, #0
   11a00:	ble	11fd4 <ReadUInt16Data+0x1004>
   11a04:	ldr	r3, [sp, #4]
   11a08:	add	r2, r3, r4, lsl #1
   11a0c:	add	r5, r5, r4
   11a10:	add	r3, r3, r5, lsl #1
   11a14:	ldr	r1, [r9, #4]!
   11a18:	strh	r1, [r2], #2
   11a1c:	cmp	r2, r3
   11a20:	bne	11a14 <ReadUInt16Data+0xa44>
   11a24:	b	11fd4 <ReadUInt16Data+0x1004>
   11a28:	ldr	r3, [r7]
   11a2c:	mov	r2, r5
   11a30:	ldr	r1, [sp]
   11a34:	add	r0, sp, #24
   11a38:	bl	1520 <fread@plt>
   11a3c:	mov	r6, r0
   11a40:	cmp	r5, #0
   11a44:	ble	11fd4 <ReadUInt16Data+0x1004>
   11a48:	add	r2, sp, #20
   11a4c:	ldr	r1, [sp, #4]
   11a50:	mov	r3, r1
   11a54:	add	r5, r1, r5, lsl #1
   11a58:	ldr	r1, [r2, #4]!
   11a5c:	strh	r1, [r3], #2
   11a60:	cmp	r3, r5
   11a64:	bne	11a58 <ReadUInt16Data+0xa88>
   11a68:	b	11fd4 <ReadUInt16Data+0x1004>
   11a6c:	ldr	r6, [r7, #20]
   11a70:	cmp	r6, #0
   11a74:	beq	11bb8 <ReadUInt16Data+0xbe8>
   11a78:	cmp	r5, #256	; 0x100
   11a7c:	ble	11b6c <ReadUInt16Data+0xb9c>
   11a80:	ldr	r2, [sp, #4]
   11a84:	sub	sl, r2, #2
   11a88:	sub	r3, r5, #256	; 0x100
   11a8c:	sub	r3, r3, #1
   11a90:	lsr	r3, r3, #8
   11a94:	str	r3, [sp, #20]
   11a98:	add	fp, r2, r3, lsl #9
   11a9c:	add	fp, fp, #508	; 0x1fc
   11aa0:	add	fp, fp, #2
   11aa4:	mov	r6, #0
   11aa8:	add	r3, sp, #24
   11aac:	str	r3, [sp, #16]
   11ab0:	add	r9, sp, #536	; 0x218
   11ab4:	ldr	r3, [r7]
   11ab8:	mov	r2, #256	; 0x100
   11abc:	ldr	r1, [sp]
   11ac0:	ldr	r4, [sp, #16]
   11ac4:	mov	r0, r4
   11ac8:	bl	1520 <fread@plt>
   11acc:	add	r6, r6, r0
   11ad0:	str	r6, [sp, #8]
   11ad4:	str	r4, [sp, #12]
   11ad8:	mov	r8, sl
   11adc:	mov	r0, r4
   11ae0:	bl	1904 <Mat_int16Swap>
   11ae4:	strh	r0, [r8, #2]!
   11ae8:	add	r4, r4, #2
   11aec:	cmp	r4, r9
   11af0:	bne	11adc <ReadUInt16Data+0xb0c>
   11af4:	add	sl, sl, #512	; 0x200
   11af8:	cmp	sl, fp
   11afc:	bne	11ab4 <ReadUInt16Data+0xae4>
   11b00:	ldr	r3, [sp, #20]
   11b04:	add	r4, r3, #1
   11b08:	lsl	r4, r4, #8
   11b0c:	cmp	r5, r4
   11b10:	ble	11fd4 <ReadUInt16Data+0x1004>
   11b14:	sub	r5, r5, r4
   11b18:	ldr	r3, [r7]
   11b1c:	mov	r2, r5
   11b20:	ldr	r1, [sp]
   11b24:	add	r0, sp, #24
   11b28:	bl	1520 <fread@plt>
   11b2c:	ldr	r3, [sp, #8]
   11b30:	add	r6, r3, r0
   11b34:	cmp	r5, #0
   11b38:	ble	11fd4 <ReadUInt16Data+0x1004>
   11b3c:	ldr	r3, [sp, #4]
   11b40:	add	r7, r3, r4, lsl #1
   11b44:	add	r4, r5, r4
   11b48:	add	r4, r3, r4, lsl #1
   11b4c:	ldr	r5, [sp, #12]
   11b50:	mov	r0, r5
   11b54:	bl	1904 <Mat_int16Swap>
   11b58:	strh	r0, [r7], #2
   11b5c:	add	r5, r5, #2
   11b60:	cmp	r7, r4
   11b64:	bne	11b50 <ReadUInt16Data+0xb80>
   11b68:	b	11fd4 <ReadUInt16Data+0x1004>
   11b6c:	ldr	r3, [r7]
   11b70:	mov	r2, r5
   11b74:	ldr	r1, [sp]
   11b78:	add	r0, sp, #24
   11b7c:	bl	1520 <fread@plt>
   11b80:	mov	r6, r0
   11b84:	cmp	r5, #0
   11b88:	ble	11fd4 <ReadUInt16Data+0x1004>
   11b8c:	add	r7, sp, #24
   11b90:	ldr	r3, [sp, #4]
   11b94:	mov	r4, r3
   11b98:	add	r5, r3, r5, lsl #1
   11b9c:	mov	r0, r7
   11ba0:	bl	1904 <Mat_int16Swap>
   11ba4:	strh	r0, [r4], #2
   11ba8:	add	r7, r7, #2
   11bac:	cmp	r4, r5
   11bb0:	bne	11b9c <ReadUInt16Data+0xbcc>
   11bb4:	b	11fd4 <ReadUInt16Data+0x1004>
   11bb8:	cmp	r5, #256	; 0x100
   11bbc:	ble	11c94 <ReadUInt16Data+0xcc4>
   11bc0:	ldr	r2, [sp, #4]
   11bc4:	sub	r8, r2, #2
   11bc8:	sub	r3, r5, #256	; 0x100
   11bcc:	sub	r3, r3, #1
   11bd0:	lsr	r3, r3, #8
   11bd4:	str	r3, [sp, #12]
   11bd8:	add	fp, r2, r3, lsl #9
   11bdc:	add	fp, fp, #508	; 0x1fc
   11be0:	add	fp, fp, #2
   11be4:	add	sl, sp, #24
   11be8:	add	r4, sl, #508	; 0x1fc
   11bec:	add	r4, r4, #2
   11bf0:	ldr	r3, [r7]
   11bf4:	mov	r2, #256	; 0x100
   11bf8:	ldr	r1, [sp]
   11bfc:	mov	r0, sl
   11c00:	bl	1520 <fread@plt>
   11c04:	add	r6, r6, r0
   11c08:	str	r6, [sp, #8]
   11c0c:	sub	r9, sl, #2
   11c10:	mov	r2, r8
   11c14:	mov	r3, r9
   11c18:	ldrh	r1, [r3, #2]!
   11c1c:	strh	r1, [r2, #2]!
   11c20:	cmp	r3, r4
   11c24:	bne	11c18 <ReadUInt16Data+0xc48>
   11c28:	add	r8, r8, #512	; 0x200
   11c2c:	cmp	r8, fp
   11c30:	bne	11bf0 <ReadUInt16Data+0xc20>
   11c34:	ldr	r3, [sp, #12]
   11c38:	add	r4, r3, #1
   11c3c:	lsl	r4, r4, #8
   11c40:	cmp	r5, r4
   11c44:	ble	11fd4 <ReadUInt16Data+0x1004>
   11c48:	sub	r5, r5, r4
   11c4c:	ldr	r3, [r7]
   11c50:	mov	r2, r5
   11c54:	ldr	r1, [sp]
   11c58:	add	r0, sp, #24
   11c5c:	bl	1520 <fread@plt>
   11c60:	ldr	r3, [sp, #8]
   11c64:	add	r6, r3, r0
   11c68:	cmp	r5, #0
   11c6c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11c70:	ldr	r3, [sp, #4]
   11c74:	add	r2, r3, r4, lsl #1
   11c78:	add	r5, r5, r4
   11c7c:	add	r3, r3, r5, lsl #1
   11c80:	ldrh	r1, [r9, #2]!
   11c84:	strh	r1, [r2], #2
   11c88:	cmp	r2, r3
   11c8c:	bne	11c80 <ReadUInt16Data+0xcb0>
   11c90:	b	11fd4 <ReadUInt16Data+0x1004>
   11c94:	ldr	r3, [r7]
   11c98:	mov	r2, r5
   11c9c:	ldr	r1, [sp]
   11ca0:	add	r0, sp, #24
   11ca4:	bl	1520 <fread@plt>
   11ca8:	mov	r6, r0
   11cac:	cmp	r5, #0
   11cb0:	ble	11fd4 <ReadUInt16Data+0x1004>
   11cb4:	add	r2, sp, #22
   11cb8:	ldr	r1, [sp, #4]
   11cbc:	mov	r3, r1
   11cc0:	add	r5, r1, r5, lsl #1
   11cc4:	ldrh	r1, [r2, #2]!
   11cc8:	strh	r1, [r3], #2
   11ccc:	cmp	r3, r5
   11cd0:	bne	11cc4 <ReadUInt16Data+0xcf4>
   11cd4:	b	11fd4 <ReadUInt16Data+0x1004>
   11cd8:	ldr	r6, [r7, #20]
   11cdc:	cmp	r6, #0
   11ce0:	beq	11e24 <ReadUInt16Data+0xe54>
   11ce4:	cmp	r5, #256	; 0x100
   11ce8:	ble	11dd8 <ReadUInt16Data+0xe08>
   11cec:	ldr	r2, [sp, #4]
   11cf0:	sub	sl, r2, #2
   11cf4:	sub	r3, r5, #256	; 0x100
   11cf8:	sub	r3, r3, #1
   11cfc:	lsr	r3, r3, #8
   11d00:	str	r3, [sp, #20]
   11d04:	add	fp, r2, r3, lsl #9
   11d08:	add	fp, fp, #508	; 0x1fc
   11d0c:	add	fp, fp, #2
   11d10:	mov	r6, #0
   11d14:	add	r3, sp, #24
   11d18:	str	r3, [sp, #16]
   11d1c:	add	r9, sp, #536	; 0x218
   11d20:	ldr	r3, [r7]
   11d24:	mov	r2, #256	; 0x100
   11d28:	ldr	r1, [sp]
   11d2c:	ldr	r4, [sp, #16]
   11d30:	mov	r0, r4
   11d34:	bl	1520 <fread@plt>
   11d38:	add	r6, r6, r0
   11d3c:	str	r6, [sp, #8]
   11d40:	str	r4, [sp, #12]
   11d44:	mov	r8, sl
   11d48:	mov	r0, r4
   11d4c:	bl	1924 <Mat_uint16Swap>
   11d50:	strh	r0, [r8, #2]!
   11d54:	add	r4, r4, #2
   11d58:	cmp	r4, r9
   11d5c:	bne	11d48 <ReadUInt16Data+0xd78>
   11d60:	add	sl, sl, #512	; 0x200
   11d64:	cmp	sl, fp
   11d68:	bne	11d20 <ReadUInt16Data+0xd50>
   11d6c:	ldr	r3, [sp, #20]
   11d70:	add	r4, r3, #1
   11d74:	lsl	r4, r4, #8
   11d78:	cmp	r5, r4
   11d7c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11d80:	sub	r5, r5, r4
   11d84:	ldr	r3, [r7]
   11d88:	mov	r2, r5
   11d8c:	ldr	r1, [sp]
   11d90:	add	r0, sp, #24
   11d94:	bl	1520 <fread@plt>
   11d98:	ldr	r3, [sp, #8]
   11d9c:	add	r6, r3, r0
   11da0:	cmp	r5, #0
   11da4:	ble	11fd4 <ReadUInt16Data+0x1004>
   11da8:	ldr	r3, [sp, #4]
   11dac:	add	r7, r3, r4, lsl #1
   11db0:	add	r4, r5, r4
   11db4:	add	r4, r3, r4, lsl #1
   11db8:	ldr	r5, [sp, #12]
   11dbc:	mov	r0, r5
   11dc0:	bl	1924 <Mat_uint16Swap>
   11dc4:	strh	r0, [r7], #2
   11dc8:	add	r5, r5, #2
   11dcc:	cmp	r7, r4
   11dd0:	bne	11dbc <ReadUInt16Data+0xdec>
   11dd4:	b	11fd4 <ReadUInt16Data+0x1004>
   11dd8:	ldr	r3, [r7]
   11ddc:	mov	r2, r5
   11de0:	ldr	r1, [sp]
   11de4:	add	r0, sp, #24
   11de8:	bl	1520 <fread@plt>
   11dec:	mov	r6, r0
   11df0:	cmp	r5, #0
   11df4:	ble	11fd4 <ReadUInt16Data+0x1004>
   11df8:	add	r7, sp, #24
   11dfc:	ldr	r3, [sp, #4]
   11e00:	mov	r4, r3
   11e04:	add	r5, r3, r5, lsl #1
   11e08:	mov	r0, r7
   11e0c:	bl	1924 <Mat_uint16Swap>
   11e10:	strh	r0, [r4], #2
   11e14:	add	r7, r7, #2
   11e18:	cmp	r4, r5
   11e1c:	bne	11e08 <ReadUInt16Data+0xe38>
   11e20:	b	11fd4 <ReadUInt16Data+0x1004>
   11e24:	cmp	r5, #256	; 0x100
   11e28:	ble	11f00 <ReadUInt16Data+0xf30>
   11e2c:	ldr	r2, [sp, #4]
   11e30:	sub	r8, r2, #2
   11e34:	sub	r3, r5, #256	; 0x100
   11e38:	sub	r3, r3, #1
   11e3c:	lsr	r3, r3, #8
   11e40:	str	r3, [sp, #12]
   11e44:	add	fp, r2, r3, lsl #9
   11e48:	add	fp, fp, #508	; 0x1fc
   11e4c:	add	fp, fp, #2
   11e50:	add	sl, sp, #24
   11e54:	add	r4, sl, #508	; 0x1fc
   11e58:	add	r4, r4, #2
   11e5c:	ldr	r3, [r7]
   11e60:	mov	r2, #256	; 0x100
   11e64:	ldr	r1, [sp]
   11e68:	mov	r0, sl
   11e6c:	bl	1520 <fread@plt>
   11e70:	add	r6, r6, r0
   11e74:	str	r6, [sp, #8]
   11e78:	sub	r9, sl, #2
   11e7c:	mov	r2, r8
   11e80:	mov	r3, r9
   11e84:	ldrh	r1, [r3, #2]!
   11e88:	strh	r1, [r2, #2]!
   11e8c:	cmp	r3, r4
   11e90:	bne	11e84 <ReadUInt16Data+0xeb4>
   11e94:	add	r8, r8, #512	; 0x200
   11e98:	cmp	r8, fp
   11e9c:	bne	11e5c <ReadUInt16Data+0xe8c>
   11ea0:	ldr	r3, [sp, #12]
   11ea4:	add	r4, r3, #1
   11ea8:	lsl	r4, r4, #8
   11eac:	cmp	r5, r4
   11eb0:	ble	11fd4 <ReadUInt16Data+0x1004>
   11eb4:	sub	r5, r5, r4
   11eb8:	ldr	r3, [r7]
   11ebc:	mov	r2, r5
   11ec0:	ldr	r1, [sp]
   11ec4:	add	r0, sp, #24
   11ec8:	bl	1520 <fread@plt>
   11ecc:	ldr	r3, [sp, #8]
   11ed0:	add	r6, r3, r0
   11ed4:	cmp	r5, #0
   11ed8:	ble	11fd4 <ReadUInt16Data+0x1004>
   11edc:	ldr	r3, [sp, #4]
   11ee0:	add	r2, r3, r4, lsl #1
   11ee4:	add	r5, r5, r4
   11ee8:	add	r3, r3, r5, lsl #1
   11eec:	ldrh	r1, [r9, #2]!
   11ef0:	strh	r1, [r2], #2
   11ef4:	cmp	r2, r3
   11ef8:	bne	11eec <ReadUInt16Data+0xf1c>
   11efc:	b	11fd4 <ReadUInt16Data+0x1004>
   11f00:	ldr	r3, [r7]
   11f04:	mov	r2, r5
   11f08:	ldr	r1, [sp]
   11f0c:	add	r0, sp, #24
   11f10:	bl	1520 <fread@plt>
   11f14:	mov	r6, r0
   11f18:	cmp	r5, #0
   11f1c:	ble	11fd4 <ReadUInt16Data+0x1004>
   11f20:	add	r2, sp, #22
   11f24:	ldr	r1, [sp, #4]
   11f28:	mov	r3, r1
   11f2c:	add	r5, r1, r5, lsl #1
   11f30:	ldrh	r1, [r2, #2]!
   11f34:	strh	r1, [r3], #2
   11f38:	cmp	r3, r5
   11f3c:	bne	11f30 <ReadUInt16Data+0xf60>
   11f40:	b	11fd4 <ReadUInt16Data+0x1004>
   11f44:	cmp	r5, #256	; 0x100
   11f48:	ble	11ffc <ReadUInt16Data+0x102c>
   11f4c:	ldr	r2, [sp, #4]
   11f50:	sub	r8, r2, #2
   11f54:	sub	r3, r5, #256	; 0x100
   11f58:	sub	r3, r3, #1
   11f5c:	lsr	r3, r3, #8
   11f60:	str	r3, [sp, #12]
   11f64:	add	fp, r2, r3, lsl #9
   11f68:	add	fp, fp, #508	; 0x1fc
   11f6c:	add	fp, fp, #2
   11f70:	mov	r6, #0
   11f74:	add	sl, sp, #24
   11f78:	add	r4, sl, #255	; 0xff
   11f7c:	ldr	r3, [r7]
   11f80:	mov	r2, #256	; 0x100
   11f84:	ldr	r1, [sp]
   11f88:	mov	r0, sl
   11f8c:	bl	1520 <fread@plt>
   11f90:	add	r6, r6, r0
   11f94:	str	r6, [sp, #8]
   11f98:	sub	r9, sl, #1
   11f9c:	mov	r2, r8
   11fa0:	mov	r3, r9
   11fa4:	ldrsb	r1, [r3, #1]!
   11fa8:	strh	r1, [r2, #2]!
   11fac:	cmp	r3, r4
   11fb0:	bne	11fa4 <ReadUInt16Data+0xfd4>
   11fb4:	add	r8, r8, #512	; 0x200
   11fb8:	cmp	r8, fp
   11fbc:	bne	11f7c <ReadUInt16Data+0xfac>
   11fc0:	ldr	r3, [sp, #12]
   11fc4:	add	r4, r3, #1
   11fc8:	lsl	r4, r4, #8
   11fcc:	cmp	r5, r4
   11fd0:	bgt	12040 <ReadUInt16Data+0x1070>
   11fd4:	ldr	r3, [sp]
   11fd8:	mul	r0, r3, r6
   11fdc:	add	sp, sp, #2064	; 0x810
   11fe0:	add	sp, sp, #12
   11fe4:	ldrd	r4, [sp]
   11fe8:	ldrd	r6, [sp, #8]
   11fec:	ldrd	r8, [sp, #16]
   11ff0:	ldrd	sl, [sp, #24]
   11ff4:	add	sp, sp, #32
   11ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ffc:	ldr	r3, [r7]
   12000:	mov	r2, r5
   12004:	ldr	r1, [sp]
   12008:	add	r0, sp, #24
   1200c:	bl	1520 <fread@plt>
   12010:	mov	r6, r0
   12014:	cmp	r5, #0
   12018:	ble	11fd4 <ReadUInt16Data+0x1004>
   1201c:	add	r2, sp, #23
   12020:	ldr	r1, [sp, #4]
   12024:	mov	r3, r1
   12028:	add	r5, r1, r5, lsl #1
   1202c:	ldrsb	r1, [r2, #1]!
   12030:	strh	r1, [r3], #2
   12034:	cmp	r3, r5
   12038:	bne	1202c <ReadUInt16Data+0x105c>
   1203c:	b	11fd4 <ReadUInt16Data+0x1004>
   12040:	sub	r5, r5, r4
   12044:	ldr	r3, [r7]
   12048:	mov	r2, r5
   1204c:	ldr	r1, [sp]
   12050:	add	r0, sp, #24
   12054:	bl	1520 <fread@plt>
   12058:	ldr	r3, [sp, #8]
   1205c:	add	r6, r3, r0
   12060:	cmp	r5, #0
   12064:	ble	11fd4 <ReadUInt16Data+0x1004>
   12068:	ldr	r3, [sp, #4]
   1206c:	add	r2, r3, r4, lsl #1
   12070:	add	r5, r5, r4
   12074:	add	r3, r3, r5, lsl #1
   12078:	ldrsb	r1, [r9, #1]!
   1207c:	strh	r1, [r2], #2
   12080:	cmp	r2, r3
   12084:	bne	12078 <ReadUInt16Data+0x10a8>
   12088:	b	11fd4 <ReadUInt16Data+0x1004>
   1208c:	cmp	r5, #256	; 0x100
   12090:	ble	12168 <ReadUInt16Data+0x1198>
   12094:	ldr	r2, [sp, #4]
   12098:	sub	r8, r2, #2
   1209c:	sub	r3, r5, #256	; 0x100
   120a0:	sub	r3, r3, #1
   120a4:	lsr	r3, r3, #8
   120a8:	str	r3, [sp, #12]
   120ac:	add	fp, r2, r3, lsl #9
   120b0:	add	fp, fp, #508	; 0x1fc
   120b4:	add	fp, fp, #2
   120b8:	mov	r6, #0
   120bc:	add	sl, sp, #24
   120c0:	add	r4, sl, #255	; 0xff
   120c4:	ldr	r3, [r7]
   120c8:	mov	r2, #256	; 0x100
   120cc:	ldr	r1, [sp]
   120d0:	mov	r0, sl
   120d4:	bl	1520 <fread@plt>
   120d8:	add	r6, r6, r0
   120dc:	str	r6, [sp, #8]
   120e0:	sub	r9, sl, #1
   120e4:	mov	r2, r8
   120e8:	mov	r3, r9
   120ec:	ldrb	r1, [r3, #1]!
   120f0:	strh	r1, [r2, #2]!
   120f4:	cmp	r3, r4
   120f8:	bne	120ec <ReadUInt16Data+0x111c>
   120fc:	add	r8, r8, #512	; 0x200
   12100:	cmp	r8, fp
   12104:	bne	120c4 <ReadUInt16Data+0x10f4>
   12108:	ldr	r3, [sp, #12]
   1210c:	add	r4, r3, #1
   12110:	lsl	r4, r4, #8
   12114:	cmp	r5, r4
   12118:	ble	11fd4 <ReadUInt16Data+0x1004>
   1211c:	sub	r5, r5, r4
   12120:	ldr	r3, [r7]
   12124:	mov	r2, r5
   12128:	ldr	r1, [sp]
   1212c:	add	r0, sp, #24
   12130:	bl	1520 <fread@plt>
   12134:	ldr	r3, [sp, #8]
   12138:	add	r6, r3, r0
   1213c:	cmp	r5, #0
   12140:	ble	11fd4 <ReadUInt16Data+0x1004>
   12144:	ldr	r3, [sp, #4]
   12148:	add	r2, r3, r4, lsl #1
   1214c:	add	r5, r5, r4
   12150:	add	r3, r3, r5, lsl #1
   12154:	ldrb	r1, [r9, #1]!
   12158:	strh	r1, [r2], #2
   1215c:	cmp	r2, r3
   12160:	bne	12154 <ReadUInt16Data+0x1184>
   12164:	b	11fd4 <ReadUInt16Data+0x1004>
   12168:	ldr	r3, [r7]
   1216c:	mov	r2, r5
   12170:	ldr	r1, [sp]
   12174:	add	r0, sp, #24
   12178:	bl	1520 <fread@plt>
   1217c:	mov	r6, r0
   12180:	cmp	r5, #0
   12184:	ble	11fd4 <ReadUInt16Data+0x1004>
   12188:	add	r2, sp, #23
   1218c:	ldr	r1, [sp, #4]
   12190:	mov	r3, r1
   12194:	add	r5, r1, r5, lsl #1
   12198:	ldrb	r1, [r2, #1]!
   1219c:	strh	r1, [r3], #2
   121a0:	cmp	r3, r5
   121a4:	bne	12198 <ReadUInt16Data+0x11c8>
   121a8:	b	11fd4 <ReadUInt16Data+0x1004>
   121ac:	cmp	r4, #12
   121b0:	beq	122c4 <ReadUInt16Data+0x12f4>
   121b4:	cmp	r4, #13
   121b8:	movne	r6, #0
   121bc:	bne	11fd4 <ReadUInt16Data+0x1004>
   121c0:	ldr	r6, [r7, #20]
   121c4:	cmp	r6, #0
   121c8:	beq	1257c <ReadUInt16Data+0x15ac>
   121cc:	cmp	r5, #256	; 0x100
   121d0:	ble	12530 <ReadUInt16Data+0x1560>
   121d4:	ldr	r2, [sp, #4]
   121d8:	sub	sl, r2, #2
   121dc:	sub	r3, r5, #256	; 0x100
   121e0:	sub	r3, r3, #1
   121e4:	lsr	r3, r3, #8
   121e8:	str	r3, [sp, #12]
   121ec:	add	fp, r2, r3, lsl #9
   121f0:	add	fp, fp, #508	; 0x1fc
   121f4:	add	fp, fp, #2
   121f8:	mov	r6, #0
   121fc:	add	r3, sp, #24
   12200:	str	r3, [sp, #20]
   12204:	add	r9, sp, #2064	; 0x810
   12208:	add	r9, r9, #8
   1220c:	ldr	r3, [r7]
   12210:	mov	r2, #256	; 0x100
   12214:	ldr	r1, [sp]
   12218:	ldr	r4, [sp, #20]
   1221c:	mov	r0, r4
   12220:	bl	1520 <fread@plt>
   12224:	add	r6, r6, r0
   12228:	str	r6, [sp, #8]
   1222c:	str	r4, [sp, #16]
   12230:	mov	r8, sl
   12234:	mov	r0, r4
   12238:	bl	1848 <Mat_uint64Swap>
   1223c:	strh	r0, [r8, #2]!
   12240:	add	r4, r4, #8
   12244:	cmp	r9, r4
   12248:	bne	12234 <ReadUInt16Data+0x1264>
   1224c:	add	sl, sl, #512	; 0x200
   12250:	cmp	fp, sl
   12254:	bne	1220c <ReadUInt16Data+0x123c>
   12258:	ldr	r3, [sp, #12]
   1225c:	add	r4, r3, #1
   12260:	lsl	r4, r4, #8
   12264:	cmp	r5, r4
   12268:	ble	11fd4 <ReadUInt16Data+0x1004>
   1226c:	sub	r5, r5, r4
   12270:	ldr	r3, [r7]
   12274:	mov	r2, r5
   12278:	ldr	r1, [sp]
   1227c:	add	r0, sp, #24
   12280:	bl	1520 <fread@plt>
   12284:	ldr	r3, [sp, #8]
   12288:	add	r6, r3, r0
   1228c:	cmp	r5, #0
   12290:	ble	11fd4 <ReadUInt16Data+0x1004>
   12294:	ldr	r3, [sp, #4]
   12298:	add	r7, r3, r4, lsl #1
   1229c:	add	r4, r5, r4
   122a0:	add	r4, r3, r4, lsl #1
   122a4:	ldr	r5, [sp, #16]
   122a8:	mov	r0, r5
   122ac:	bl	1848 <Mat_uint64Swap>
   122b0:	strh	r0, [r7], #2
   122b4:	add	r5, r5, #8
   122b8:	cmp	r4, r7
   122bc:	bne	122a8 <ReadUInt16Data+0x12d8>
   122c0:	b	11fd4 <ReadUInt16Data+0x1004>
   122c4:	ldr	r6, [r7, #20]
   122c8:	cmp	r6, #0
   122cc:	beq	12414 <ReadUInt16Data+0x1444>
   122d0:	cmp	r5, #256	; 0x100
   122d4:	ble	123c8 <ReadUInt16Data+0x13f8>
   122d8:	ldr	r2, [sp, #4]
   122dc:	sub	sl, r2, #2
   122e0:	sub	r3, r5, #256	; 0x100
   122e4:	sub	r3, r3, #1
   122e8:	lsr	r3, r3, #8
   122ec:	str	r3, [sp, #12]
   122f0:	add	fp, r2, r3, lsl #9
   122f4:	add	fp, fp, #508	; 0x1fc
   122f8:	add	fp, fp, #2
   122fc:	mov	r6, #0
   12300:	add	r3, sp, #24
   12304:	str	r3, [sp, #20]
   12308:	add	r9, sp, #2064	; 0x810
   1230c:	add	r9, r9, #8
   12310:	ldr	r3, [r7]
   12314:	mov	r2, #256	; 0x100
   12318:	ldr	r1, [sp]
   1231c:	ldr	r4, [sp, #20]
   12320:	mov	r0, r4
   12324:	bl	1520 <fread@plt>
   12328:	add	r6, r6, r0
   1232c:	str	r6, [sp, #8]
   12330:	str	r4, [sp, #16]
   12334:	mov	r8, sl
   12338:	mov	r0, r4
   1233c:	bl	17ec <Mat_int64Swap>
   12340:	strh	r0, [r8, #2]!
   12344:	add	r4, r4, #8
   12348:	cmp	r4, r9
   1234c:	bne	12338 <ReadUInt16Data+0x1368>
   12350:	add	sl, sl, #512	; 0x200
   12354:	cmp	fp, sl
   12358:	bne	12310 <ReadUInt16Data+0x1340>
   1235c:	ldr	r3, [sp, #12]
   12360:	add	r4, r3, #1
   12364:	lsl	r4, r4, #8
   12368:	cmp	r5, r4
   1236c:	ble	11fd4 <ReadUInt16Data+0x1004>
   12370:	sub	r5, r5, r4
   12374:	ldr	r3, [r7]
   12378:	mov	r2, r5
   1237c:	ldr	r1, [sp]
   12380:	add	r0, sp, #24
   12384:	bl	1520 <fread@plt>
   12388:	ldr	r3, [sp, #8]
   1238c:	add	r6, r3, r0
   12390:	cmp	r5, #0
   12394:	ble	11fd4 <ReadUInt16Data+0x1004>
   12398:	ldr	r3, [sp, #4]
   1239c:	add	r7, r3, r4, lsl #1
   123a0:	add	r4, r5, r4
   123a4:	add	r4, r3, r4, lsl #1
   123a8:	ldr	r5, [sp, #16]
   123ac:	mov	r0, r5
   123b0:	bl	17ec <Mat_int64Swap>
   123b4:	strh	r0, [r7], #2
   123b8:	add	r5, r5, #8
   123bc:	cmp	r4, r7
   123c0:	bne	123ac <ReadUInt16Data+0x13dc>
   123c4:	b	11fd4 <ReadUInt16Data+0x1004>
   123c8:	ldr	r3, [r7]
   123cc:	mov	r2, r5
   123d0:	ldr	r1, [sp]
   123d4:	add	r0, sp, #24
   123d8:	bl	1520 <fread@plt>
   123dc:	mov	r6, r0
   123e0:	cmp	r5, #0
   123e4:	ble	11fd4 <ReadUInt16Data+0x1004>
   123e8:	add	r7, sp, #24
   123ec:	ldr	r3, [sp, #4]
   123f0:	mov	r4, r3
   123f4:	add	r5, r3, r5, lsl #1
   123f8:	mov	r0, r7
   123fc:	bl	17ec <Mat_int64Swap>
   12400:	strh	r0, [r4], #2
   12404:	add	r7, r7, #8
   12408:	cmp	r4, r5
   1240c:	bne	123f8 <ReadUInt16Data+0x1428>
   12410:	b	11fd4 <ReadUInt16Data+0x1004>
   12414:	cmp	r5, #256	; 0x100
   12418:	ble	124ec <ReadUInt16Data+0x151c>
   1241c:	ldr	r3, [sp, #4]
   12420:	sub	r9, r3, #2
   12424:	sub	fp, r5, #256	; 0x100
   12428:	sub	fp, fp, #1
   1242c:	lsr	fp, fp, #8
   12430:	add	r8, r3, fp, lsl #9
   12434:	add	r8, r8, #508	; 0x1fc
   12438:	add	r8, r8, #2
   1243c:	add	r3, sp, #24
   12440:	str	r3, [sp, #12]
   12444:	add	r4, sp, #2064	; 0x810
   12448:	ldr	r3, [r7]
   1244c:	mov	r2, #256	; 0x100
   12450:	ldr	r1, [sp]
   12454:	ldr	sl, [sp, #12]
   12458:	mov	r0, sl
   1245c:	bl	1520 <fread@plt>
   12460:	add	r6, r6, r0
   12464:	str	r6, [sp, #8]
   12468:	sub	sl, sl, #8
   1246c:	mov	r2, r9
   12470:	mov	r3, sl
   12474:	ldr	r1, [r3, #8]!
   12478:	strh	r1, [r2, #2]!
   1247c:	cmp	r4, r3
   12480:	bne	12474 <ReadUInt16Data+0x14a4>
   12484:	add	r9, r9, #512	; 0x200
   12488:	cmp	r9, r8
   1248c:	bne	12448 <ReadUInt16Data+0x1478>
   12490:	add	r4, fp, #1
   12494:	lsl	r4, r4, #8
   12498:	cmp	r5, r4
   1249c:	ble	11fd4 <ReadUInt16Data+0x1004>
   124a0:	sub	r5, r5, r4
   124a4:	ldr	r3, [r7]
   124a8:	mov	r2, r5
   124ac:	ldr	r1, [sp]
   124b0:	add	r0, sp, #24
   124b4:	bl	1520 <fread@plt>
   124b8:	ldr	r3, [sp, #8]
   124bc:	add	r6, r3, r0
   124c0:	cmp	r5, #0
   124c4:	ble	11fd4 <ReadUInt16Data+0x1004>
   124c8:	ldr	r3, [sp, #4]
   124cc:	add	r2, r3, r4, lsl #1
   124d0:	add	r5, r5, r4
   124d4:	add	r3, r3, r5, lsl #1
   124d8:	ldr	r1, [sl, #8]!
   124dc:	strh	r1, [r2], #2
   124e0:	cmp	r3, r2
   124e4:	bne	124d8 <ReadUInt16Data+0x1508>
   124e8:	b	11fd4 <ReadUInt16Data+0x1004>
   124ec:	ldr	r3, [r7]
   124f0:	mov	r2, r5
   124f4:	ldr	r1, [sp]
   124f8:	add	r0, sp, #24
   124fc:	bl	1520 <fread@plt>
   12500:	mov	r6, r0
   12504:	cmp	r5, #0
   12508:	ble	11fd4 <ReadUInt16Data+0x1004>
   1250c:	add	r2, sp, #16
   12510:	ldr	r1, [sp, #4]
   12514:	mov	r3, r1
   12518:	add	r5, r1, r5, lsl #1
   1251c:	ldr	r1, [r2, #8]!
   12520:	strh	r1, [r3], #2
   12524:	cmp	r3, r5
   12528:	bne	1251c <ReadUInt16Data+0x154c>
   1252c:	b	11fd4 <ReadUInt16Data+0x1004>
   12530:	ldr	r3, [r7]
   12534:	mov	r2, r5
   12538:	ldr	r1, [sp]
   1253c:	add	r0, sp, #24
   12540:	bl	1520 <fread@plt>
   12544:	mov	r6, r0
   12548:	cmp	r5, #0
   1254c:	ble	11fd4 <ReadUInt16Data+0x1004>
   12550:	add	r7, sp, #24
   12554:	ldr	r3, [sp, #4]
   12558:	mov	r4, r3
   1255c:	add	r5, r3, r5, lsl #1
   12560:	mov	r0, r7
   12564:	bl	1848 <Mat_uint64Swap>
   12568:	strh	r0, [r4], #2
   1256c:	add	r7, r7, #8
   12570:	cmp	r4, r5
   12574:	bne	12560 <ReadUInt16Data+0x1590>
   12578:	b	11fd4 <ReadUInt16Data+0x1004>
   1257c:	cmp	r5, #256	; 0x100
   12580:	ble	12654 <ReadUInt16Data+0x1684>
   12584:	ldr	r3, [sp, #4]
   12588:	sub	r9, r3, #2
   1258c:	sub	fp, r5, #256	; 0x100
   12590:	sub	fp, fp, #1
   12594:	lsr	fp, fp, #8
   12598:	add	r8, r3, fp, lsl #9
   1259c:	add	r8, r8, #508	; 0x1fc
   125a0:	add	r8, r8, #2
   125a4:	add	r3, sp, #24
   125a8:	str	r3, [sp, #12]
   125ac:	add	r4, sp, #2064	; 0x810
   125b0:	ldr	r3, [r7]
   125b4:	mov	r2, #256	; 0x100
   125b8:	ldr	r1, [sp]
   125bc:	ldr	sl, [sp, #12]
   125c0:	mov	r0, sl
   125c4:	bl	1520 <fread@plt>
   125c8:	add	r6, r6, r0
   125cc:	str	r6, [sp, #8]
   125d0:	sub	sl, sl, #8
   125d4:	mov	r2, r9
   125d8:	mov	r3, sl
   125dc:	ldr	r1, [r3, #8]!
   125e0:	strh	r1, [r2, #2]!
   125e4:	cmp	r3, r4
   125e8:	bne	125dc <ReadUInt16Data+0x160c>
   125ec:	add	r9, r9, #512	; 0x200
   125f0:	cmp	r9, r8
   125f4:	bne	125b0 <ReadUInt16Data+0x15e0>
   125f8:	add	r4, fp, #1
   125fc:	lsl	r4, r4, #8
   12600:	cmp	r5, r4
   12604:	ble	11fd4 <ReadUInt16Data+0x1004>
   12608:	sub	r5, r5, r4
   1260c:	ldr	r3, [r7]
   12610:	mov	r2, r5
   12614:	ldr	r1, [sp]
   12618:	add	r0, sp, #24
   1261c:	bl	1520 <fread@plt>
   12620:	ldr	r3, [sp, #8]
   12624:	add	r6, r3, r0
   12628:	cmp	r5, #0
   1262c:	ble	11fd4 <ReadUInt16Data+0x1004>
   12630:	ldr	r3, [sp, #4]
   12634:	add	r2, r3, r4, lsl #1
   12638:	add	r5, r5, r4
   1263c:	add	r3, r3, r5, lsl #1
   12640:	ldr	r1, [sl, #8]!
   12644:	strh	r1, [r2], #2
   12648:	cmp	r2, r3
   1264c:	bne	12640 <ReadUInt16Data+0x1670>
   12650:	b	11fd4 <ReadUInt16Data+0x1004>
   12654:	ldr	r3, [r7]
   12658:	mov	r2, r5
   1265c:	ldr	r1, [sp]
   12660:	add	r0, sp, #24
   12664:	bl	1520 <fread@plt>
   12668:	mov	r6, r0
   1266c:	cmp	r5, #0
   12670:	ble	11fd4 <ReadUInt16Data+0x1004>
   12674:	add	r2, sp, #16
   12678:	ldr	r1, [sp, #4]
   1267c:	mov	r3, r1
   12680:	add	r5, r1, r5, lsl #1
   12684:	ldr	r1, [r2, #8]!
   12688:	strh	r1, [r3], #2
   1268c:	cmp	r5, r3
   12690:	bne	12684 <ReadUInt16Data+0x16b4>
   12694:	b	11fd4 <ReadUInt16Data+0x1004>
   12698:	mov	r0, #0
   1269c:	bx	lr

000126a0 <ReadCompressedUInt16Data>:
   126a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   126a4:	strd	r6, [sp, #8]
   126a8:	strd	r8, [sp, #16]
   126ac:	str	sl, [sp, #24]
   126b0:	str	lr, [sp, #28]
   126b4:	sub	sp, sp, #8
   126b8:	ldr	r6, [sp, #40]	; 0x28
   126bc:	mov	r7, r2
   126c0:	mov	r9, r1
   126c4:	clz	r1, r1
   126c8:	lsr	r1, r1, #5
   126cc:	cmp	r2, #0
   126d0:	movne	r2, r1
   126d4:	moveq	r2, #1
   126d8:	cmp	r0, #0
   126dc:	moveq	r2, #1
   126e0:	cmp	r2, #0
   126e4:	movne	r0, #0
   126e8:	beq	12708 <ReadCompressedUInt16Data+0x68>
   126ec:	add	sp, sp, #8
   126f0:	ldrd	r4, [sp]
   126f4:	ldrd	r6, [sp, #8]
   126f8:	ldrd	r8, [sp, #16]
   126fc:	ldr	sl, [sp, #24]
   12700:	add	sp, sp, #28
   12704:	pop	{pc}		; (ldr pc, [sp], #4)
   12708:	mov	r8, r0
   1270c:	mov	r5, r3
   12710:	mov	r0, r3
   12714:	bl	1598 <Mat_SizeOf@plt>
   12718:	mov	r4, r0
   1271c:	sub	r3, r5, #1
   12720:	cmp	r3, #8
   12724:	addls	pc, pc, r3, lsl #2
   12728:	b	12b1c <ReadCompressedUInt16Data+0x47c>
   1272c:	b	12790 <ReadCompressedUInt16Data+0xf0>
   12730:	b	12750 <ReadCompressedUInt16Data+0xb0>
   12734:	b	12a0c <ReadCompressedUInt16Data+0x36c>
   12738:	b	12a94 <ReadCompressedUInt16Data+0x3f4>
   1273c:	b	128fc <ReadCompressedUInt16Data+0x25c>
   12740:	b	12984 <ReadCompressedUInt16Data+0x2e4>
   12744:	b	12864 <ReadCompressedUInt16Data+0x1c4>
   12748:	b	12b1c <ReadCompressedUInt16Data+0x47c>
   1274c:	b	127cc <ReadCompressedUInt16Data+0x12c>
   12750:	cmp	r6, #0
   12754:	movgt	r5, r7
   12758:	addgt	r7, r7, r6, lsl #1
   1275c:	movgt	sl, sp
   12760:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12764:	mov	r3, r4
   12768:	mov	r2, sl
   1276c:	mov	r1, r9
   12770:	mov	r0, r8
   12774:	bl	333c <InflateData>
   12778:	ldrb	r3, [sp]
   1277c:	strh	r3, [r5], #2
   12780:	cmp	r7, r5
   12784:	bne	12764 <ReadCompressedUInt16Data+0xc4>
   12788:	mul	r0, r4, r6
   1278c:	b	126ec <ReadCompressedUInt16Data+0x4c>
   12790:	cmp	r6, #0
   12794:	movgt	r5, r7
   12798:	addgt	r7, r7, r6, lsl #1
   1279c:	movgt	sl, sp
   127a0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   127a4:	mov	r3, r4
   127a8:	mov	r2, sl
   127ac:	mov	r1, r9
   127b0:	mov	r0, r8
   127b4:	bl	333c <InflateData>
   127b8:	ldrsb	r3, [sp]
   127bc:	strh	r3, [r5], #2
   127c0:	cmp	r7, r5
   127c4:	bne	127a4 <ReadCompressedUInt16Data+0x104>
   127c8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   127cc:	ldr	r3, [r8, #20]
   127d0:	cmp	r3, #0
   127d4:	bne	1281c <ReadCompressedUInt16Data+0x17c>
   127d8:	cmp	r6, #0
   127dc:	movgt	r5, r7
   127e0:	addgt	r7, r7, r6, lsl #1
   127e4:	movgt	sl, sp
   127e8:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   127ec:	mov	r3, r4
   127f0:	mov	r2, sl
   127f4:	mov	r1, r9
   127f8:	mov	r0, r8
   127fc:	bl	333c <InflateData>
   12800:	vldr	d7, [sp]
   12804:	vcvt.u32.f64	s14, d7
   12808:	vmov	r3, s14
   1280c:	strh	r3, [r5], #2
   12810:	cmp	r5, r7
   12814:	bne	127ec <ReadCompressedUInt16Data+0x14c>
   12818:	b	12788 <ReadCompressedUInt16Data+0xe8>
   1281c:	cmp	r6, #0
   12820:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12824:	mov	r5, r7
   12828:	add	r7, r7, r6, lsl #1
   1282c:	mov	sl, sp
   12830:	mov	r3, r4
   12834:	mov	r2, sl
   12838:	mov	r1, r9
   1283c:	mov	r0, r8
   12840:	bl	333c <InflateData>
   12844:	mov	r0, sl
   12848:	bl	1974 <Mat_doubleSwap>
   1284c:	vcvt.u32.f64	s0, d0
   12850:	vmov	r3, s0
   12854:	strh	r3, [r5], #2
   12858:	cmp	r5, r7
   1285c:	bne	12830 <ReadCompressedUInt16Data+0x190>
   12860:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12864:	ldr	r3, [r8, #20]
   12868:	cmp	r3, #0
   1286c:	bne	128b4 <ReadCompressedUInt16Data+0x214>
   12870:	cmp	r6, #0
   12874:	movgt	r5, r7
   12878:	addgt	r7, r7, r6, lsl #1
   1287c:	movgt	sl, sp
   12880:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12884:	mov	r3, r4
   12888:	mov	r2, sl
   1288c:	mov	r1, r9
   12890:	mov	r0, r8
   12894:	bl	333c <InflateData>
   12898:	vldr	s15, [sp]
   1289c:	vcvt.u32.f32	s15, s15
   128a0:	vmov	r3, s15
   128a4:	strh	r3, [r5], #2
   128a8:	cmp	r5, r7
   128ac:	bne	12884 <ReadCompressedUInt16Data+0x1e4>
   128b0:	b	12788 <ReadCompressedUInt16Data+0xe8>
   128b4:	cmp	r6, #0
   128b8:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   128bc:	mov	r5, r7
   128c0:	add	r7, r7, r6, lsl #1
   128c4:	mov	sl, sp
   128c8:	mov	r3, r4
   128cc:	mov	r2, sl
   128d0:	mov	r1, r9
   128d4:	mov	r0, r8
   128d8:	bl	333c <InflateData>
   128dc:	mov	r0, sl
   128e0:	bl	1944 <Mat_floatSwap>
   128e4:	vcvt.u32.f32	s0, s0
   128e8:	vmov	r3, s0
   128ec:	strh	r3, [r5], #2
   128f0:	cmp	r5, r7
   128f4:	bne	128c8 <ReadCompressedUInt16Data+0x228>
   128f8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   128fc:	ldr	r3, [r8, #20]
   12900:	cmp	r3, #0
   12904:	bne	12944 <ReadCompressedUInt16Data+0x2a4>
   12908:	cmp	r6, #0
   1290c:	movgt	r5, r7
   12910:	addgt	r7, r7, r6, lsl #1
   12914:	movgt	sl, sp
   12918:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   1291c:	mov	r3, r4
   12920:	mov	r2, sl
   12924:	mov	r1, r9
   12928:	mov	r0, r8
   1292c:	bl	333c <InflateData>
   12930:	ldr	r3, [sp]
   12934:	strh	r3, [r5], #2
   12938:	cmp	r5, r7
   1293c:	bne	1291c <ReadCompressedUInt16Data+0x27c>
   12940:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12944:	cmp	r6, #0
   12948:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   1294c:	mov	r5, r7
   12950:	add	r7, r7, r6, lsl #1
   12954:	mov	sl, sp
   12958:	mov	r3, r4
   1295c:	mov	r2, sl
   12960:	mov	r1, r9
   12964:	mov	r0, r8
   12968:	bl	333c <InflateData>
   1296c:	mov	r0, sl
   12970:	bl	18a4 <Mat_int32Swap>
   12974:	strh	r0, [r5], #2
   12978:	cmp	r5, r7
   1297c:	bne	12958 <ReadCompressedUInt16Data+0x2b8>
   12980:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12984:	ldr	r3, [r8, #20]
   12988:	cmp	r3, #0
   1298c:	bne	129cc <ReadCompressedUInt16Data+0x32c>
   12990:	cmp	r6, #0
   12994:	movgt	r5, r7
   12998:	addgt	r7, r7, r6, lsl #1
   1299c:	movgt	sl, sp
   129a0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   129a4:	mov	r3, r4
   129a8:	mov	r2, sl
   129ac:	mov	r1, r9
   129b0:	mov	r0, r8
   129b4:	bl	333c <InflateData>
   129b8:	ldr	r3, [sp]
   129bc:	strh	r3, [r5], #2
   129c0:	cmp	r5, r7
   129c4:	bne	129a4 <ReadCompressedUInt16Data+0x304>
   129c8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   129cc:	cmp	r6, #0
   129d0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   129d4:	mov	r5, r7
   129d8:	add	r7, r7, r6, lsl #1
   129dc:	mov	sl, sp
   129e0:	mov	r3, r4
   129e4:	mov	r2, sl
   129e8:	mov	r1, r9
   129ec:	mov	r0, r8
   129f0:	bl	333c <InflateData>
   129f4:	mov	r0, sl
   129f8:	bl	18d4 <Mat_uint32Swap>
   129fc:	strh	r0, [r5], #2
   12a00:	cmp	r5, r7
   12a04:	bne	129e0 <ReadCompressedUInt16Data+0x340>
   12a08:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12a0c:	ldr	r3, [r8, #20]
   12a10:	cmp	r3, #0
   12a14:	bne	12a54 <ReadCompressedUInt16Data+0x3b4>
   12a18:	cmp	r6, #0
   12a1c:	movgt	r5, r7
   12a20:	addgt	r7, r7, r6, lsl #1
   12a24:	movgt	sl, sp
   12a28:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12a2c:	mov	r3, r4
   12a30:	mov	r2, sl
   12a34:	mov	r1, r9
   12a38:	mov	r0, r8
   12a3c:	bl	333c <InflateData>
   12a40:	ldrh	r3, [sp]
   12a44:	strh	r3, [r5], #2
   12a48:	cmp	r7, r5
   12a4c:	bne	12a2c <ReadCompressedUInt16Data+0x38c>
   12a50:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12a54:	cmp	r6, #0
   12a58:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12a5c:	mov	r5, r7
   12a60:	add	r7, r7, r6, lsl #1
   12a64:	mov	sl, sp
   12a68:	mov	r3, r4
   12a6c:	mov	r2, sl
   12a70:	mov	r1, r9
   12a74:	mov	r0, r8
   12a78:	bl	333c <InflateData>
   12a7c:	mov	r0, sl
   12a80:	bl	1904 <Mat_int16Swap>
   12a84:	strh	r0, [r5], #2
   12a88:	cmp	r7, r5
   12a8c:	bne	12a68 <ReadCompressedUInt16Data+0x3c8>
   12a90:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12a94:	ldr	r3, [r8, #20]
   12a98:	cmp	r3, #0
   12a9c:	bne	12adc <ReadCompressedUInt16Data+0x43c>
   12aa0:	cmp	r6, #0
   12aa4:	movgt	r5, r7
   12aa8:	addgt	r7, r7, r6, lsl #1
   12aac:	movgt	sl, sp
   12ab0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12ab4:	mov	r3, r4
   12ab8:	mov	r2, sl
   12abc:	mov	r1, r9
   12ac0:	mov	r0, r8
   12ac4:	bl	333c <InflateData>
   12ac8:	ldrh	r3, [sp]
   12acc:	strh	r3, [r5], #2
   12ad0:	cmp	r5, r7
   12ad4:	bne	12ab4 <ReadCompressedUInt16Data+0x414>
   12ad8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12adc:	cmp	r6, #0
   12ae0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12ae4:	mov	r5, r7
   12ae8:	add	r7, r7, r6, lsl #1
   12aec:	mov	sl, sp
   12af0:	mov	r3, r4
   12af4:	mov	r2, sl
   12af8:	mov	r1, r9
   12afc:	mov	r0, r8
   12b00:	bl	333c <InflateData>
   12b04:	mov	r0, sl
   12b08:	bl	1924 <Mat_uint16Swap>
   12b0c:	strh	r0, [r5], #2
   12b10:	cmp	r7, r5
   12b14:	bne	12af0 <ReadCompressedUInt16Data+0x450>
   12b18:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12b1c:	cmp	r5, #12
   12b20:	beq	12b74 <ReadCompressedUInt16Data+0x4d4>
   12b24:	cmp	r5, #13
   12b28:	bne	12788 <ReadCompressedUInt16Data+0xe8>
   12b2c:	ldr	r3, [r8, #20]
   12b30:	cmp	r3, #0
   12b34:	bne	12bfc <ReadCompressedUInt16Data+0x55c>
   12b38:	cmp	r6, #0
   12b3c:	movgt	r5, r7
   12b40:	addgt	r7, r7, r6, lsl #1
   12b44:	movgt	sl, sp
   12b48:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12b4c:	mov	r3, r4
   12b50:	mov	r2, sl
   12b54:	mov	r1, r9
   12b58:	mov	r0, r8
   12b5c:	bl	333c <InflateData>
   12b60:	ldr	r3, [sp]
   12b64:	strh	r3, [r5], #2
   12b68:	cmp	r7, r5
   12b6c:	bne	12b4c <ReadCompressedUInt16Data+0x4ac>
   12b70:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12b74:	ldr	r3, [r8, #20]
   12b78:	cmp	r3, #0
   12b7c:	bne	12bbc <ReadCompressedUInt16Data+0x51c>
   12b80:	cmp	r6, #0
   12b84:	movgt	r5, r7
   12b88:	addgt	r7, r7, r6, lsl #1
   12b8c:	movgt	sl, sp
   12b90:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12b94:	mov	r3, r4
   12b98:	mov	r2, sl
   12b9c:	mov	r1, r9
   12ba0:	mov	r0, r8
   12ba4:	bl	333c <InflateData>
   12ba8:	ldr	r3, [sp]
   12bac:	strh	r3, [r5], #2
   12bb0:	cmp	r7, r5
   12bb4:	bne	12b94 <ReadCompressedUInt16Data+0x4f4>
   12bb8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12bbc:	cmp	r6, #0
   12bc0:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12bc4:	mov	r5, r7
   12bc8:	add	r7, r7, r6, lsl #1
   12bcc:	mov	sl, sp
   12bd0:	mov	r3, r4
   12bd4:	mov	r2, sl
   12bd8:	mov	r1, r9
   12bdc:	mov	r0, r8
   12be0:	bl	333c <InflateData>
   12be4:	mov	r0, sl
   12be8:	bl	17ec <Mat_int64Swap>
   12bec:	strh	r0, [r5], #2
   12bf0:	cmp	r5, r7
   12bf4:	bne	12bd0 <ReadCompressedUInt16Data+0x530>
   12bf8:	b	12788 <ReadCompressedUInt16Data+0xe8>
   12bfc:	cmp	r6, #0
   12c00:	ble	12788 <ReadCompressedUInt16Data+0xe8>
   12c04:	mov	r5, r7
   12c08:	add	r7, r7, r6, lsl #1
   12c0c:	mov	sl, sp
   12c10:	mov	r3, r4
   12c14:	mov	r2, sl
   12c18:	mov	r1, r9
   12c1c:	mov	r0, r8
   12c20:	bl	333c <InflateData>
   12c24:	mov	r0, sl
   12c28:	bl	1848 <Mat_uint64Swap>
   12c2c:	strh	r0, [r5], #2
   12c30:	cmp	r7, r5
   12c34:	bne	12c10 <ReadCompressedUInt16Data+0x570>
   12c38:	b	12788 <ReadCompressedUInt16Data+0xe8>

00012c3c <ReadInt8Data>:
   12c3c:	cmp	r1, #0
   12c40:	cmpne	r0, #0
   12c44:	beq	14274 <ReadInt8Data+0x1638>
   12c48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12c4c:	strd	r6, [sp, #8]
   12c50:	strd	r8, [sp, #16]
   12c54:	strd	sl, [sp, #24]
   12c58:	str	lr, [sp, #32]
   12c5c:	sub	sp, sp, #2064	; 0x810
   12c60:	sub	sp, sp, #12
   12c64:	mov	r7, r0
   12c68:	mov	ip, r1
   12c6c:	ldr	r1, [r0]
   12c70:	cmp	r1, #0
   12c74:	moveq	r0, #0
   12c78:	beq	13be0 <ReadInt8Data+0xfa4>
   12c7c:	str	ip, [sp, #4]
   12c80:	mov	r5, r3
   12c84:	mov	r4, r2
   12c88:	mov	r0, r2
   12c8c:	bl	1598 <Mat_SizeOf@plt>
   12c90:	str	r0, [sp]
   12c94:	sub	r3, r4, #1
   12c98:	cmp	r3, #8
   12c9c:	addls	pc, pc, r3, lsl #2
   12ca0:	b	13da8 <ReadInt8Data+0x116c>
   12ca4:	b	13b50 <ReadInt8Data+0xf14>
   12ca8:	b	13c90 <ReadInt8Data+0x1054>
   12cac:	b	13698 <ReadInt8Data+0xa5c>
   12cb0:	b	138f4 <ReadInt8Data+0xcb8>
   12cb4:	b	131e0 <ReadInt8Data+0x5a4>
   12cb8:	b	1343c <ReadInt8Data+0x800>
   12cbc:	b	12f54 <ReadInt8Data+0x318>
   12cc0:	b	13da8 <ReadInt8Data+0x116c>
   12cc4:	b	12cc8 <ReadInt8Data+0x8c>
   12cc8:	ldr	r6, [r7, #20]
   12ccc:	cmp	r6, #0
   12cd0:	beq	12e28 <ReadInt8Data+0x1ec>
   12cd4:	cmp	r5, #256	; 0x100
   12cd8:	ble	12dd0 <ReadInt8Data+0x194>
   12cdc:	ldr	r3, [sp, #4]
   12ce0:	sub	sl, r3, #1
   12ce4:	sub	r2, r5, #256	; 0x100
   12ce8:	sub	r2, r2, #1
   12cec:	str	r2, [sp, #20]
   12cf0:	orr	fp, r2, #255	; 0xff
   12cf4:	add	fp, fp, r3
   12cf8:	mov	r6, #0
   12cfc:	add	r3, sp, #24
   12d00:	str	r3, [sp, #16]
   12d04:	add	r9, sp, #2064	; 0x810
   12d08:	add	r9, r9, #8
   12d0c:	ldr	r3, [r7]
   12d10:	mov	r2, #256	; 0x100
   12d14:	ldr	r1, [sp]
   12d18:	ldr	r4, [sp, #16]
   12d1c:	mov	r0, r4
   12d20:	bl	1520 <fread@plt>
   12d24:	add	r6, r6, r0
   12d28:	str	r6, [sp, #8]
   12d2c:	str	r4, [sp, #12]
   12d30:	mov	r8, sl
   12d34:	mov	r0, r4
   12d38:	bl	1974 <Mat_doubleSwap>
   12d3c:	vcvt.s32.f64	s15, d0
   12d40:	vmov	r3, s15
   12d44:	strb	r3, [r8, #1]!
   12d48:	add	r4, r4, #8
   12d4c:	cmp	r4, r9
   12d50:	bne	12d34 <ReadInt8Data+0xf8>
   12d54:	add	sl, sl, #256	; 0x100
   12d58:	cmp	sl, fp
   12d5c:	bne	12d0c <ReadInt8Data+0xd0>
   12d60:	ldr	r3, [sp, #20]
   12d64:	bic	r4, r3, #255	; 0xff
   12d68:	add	r4, r4, #256	; 0x100
   12d6c:	cmp	r5, r4
   12d70:	ble	13bd8 <ReadInt8Data+0xf9c>
   12d74:	sub	r5, r5, r4
   12d78:	ldr	r3, [r7]
   12d7c:	mov	r2, r5
   12d80:	ldr	r1, [sp]
   12d84:	add	r0, sp, #24
   12d88:	bl	1520 <fread@plt>
   12d8c:	ldr	r3, [sp, #8]
   12d90:	add	r6, r3, r0
   12d94:	cmp	r5, #0
   12d98:	ble	13bd8 <ReadInt8Data+0xf9c>
   12d9c:	ldr	r3, [sp, #4]
   12da0:	add	r7, r3, r4
   12da4:	add	r4, r7, r5
   12da8:	ldr	r5, [sp, #12]
   12dac:	mov	r0, r5
   12db0:	bl	1974 <Mat_doubleSwap>
   12db4:	vcvt.s32.f64	s15, d0
   12db8:	vmov	r3, s15
   12dbc:	strb	r3, [r7], #1
   12dc0:	add	r5, r5, #8
   12dc4:	cmp	r7, r4
   12dc8:	bne	12dac <ReadInt8Data+0x170>
   12dcc:	b	13bd8 <ReadInt8Data+0xf9c>
   12dd0:	ldr	r3, [r7]
   12dd4:	mov	r2, r5
   12dd8:	ldr	r1, [sp]
   12ddc:	add	r0, sp, #24
   12de0:	bl	1520 <fread@plt>
   12de4:	mov	r6, r0
   12de8:	cmp	r5, #0
   12dec:	ble	13bd8 <ReadInt8Data+0xf9c>
   12df0:	add	r7, sp, #24
   12df4:	ldr	r3, [sp, #4]
   12df8:	sub	r4, r3, #1
   12dfc:	sub	r5, r5, #1
   12e00:	add	r5, r3, r5
   12e04:	mov	r0, r7
   12e08:	bl	1974 <Mat_doubleSwap>
   12e0c:	vcvt.s32.f64	s15, d0
   12e10:	vmov	r3, s15
   12e14:	strb	r3, [r4, #1]!
   12e18:	add	r7, r7, #8
   12e1c:	cmp	r4, r5
   12e20:	bne	12e04 <ReadInt8Data+0x1c8>
   12e24:	b	13bd8 <ReadInt8Data+0xf9c>
   12e28:	cmp	r5, #256	; 0x100
   12e2c:	ble	12f04 <ReadInt8Data+0x2c8>
   12e30:	ldr	r3, [sp, #4]
   12e34:	sub	r8, r3, #1
   12e38:	sub	r9, r5, #256	; 0x100
   12e3c:	sub	r9, r9, #1
   12e40:	orr	sl, r9, #255	; 0xff
   12e44:	add	sl, sl, r3
   12e48:	add	fp, sp, #24
   12e4c:	add	r4, sp, #2064	; 0x810
   12e50:	add	r4, r4, #8
   12e54:	ldr	r3, [r7]
   12e58:	mov	r2, #256	; 0x100
   12e5c:	ldr	r1, [sp]
   12e60:	mov	r0, fp
   12e64:	bl	1520 <fread@plt>
   12e68:	add	r6, r6, r0
   12e6c:	str	r6, [sp, #8]
   12e70:	str	fp, [sp, #12]
   12e74:	mov	r1, r8
   12e78:	mov	r2, fp
   12e7c:	vldmia	r2!, {d7}
   12e80:	vcvt.s32.f64	s15, d7
   12e84:	vmov	r3, s15
   12e88:	strb	r3, [r1, #1]!
   12e8c:	cmp	r2, r4
   12e90:	bne	12e7c <ReadInt8Data+0x240>
   12e94:	add	r8, r8, #256	; 0x100
   12e98:	cmp	r8, sl
   12e9c:	bne	12e54 <ReadInt8Data+0x218>
   12ea0:	bic	r4, r9, #255	; 0xff
   12ea4:	add	r4, r4, #256	; 0x100
   12ea8:	cmp	r5, r4
   12eac:	ble	13bd8 <ReadInt8Data+0xf9c>
   12eb0:	sub	r5, r5, r4
   12eb4:	ldr	r3, [r7]
   12eb8:	mov	r2, r5
   12ebc:	ldr	r1, [sp]
   12ec0:	add	r0, sp, #24
   12ec4:	bl	1520 <fread@plt>
   12ec8:	ldr	r3, [sp, #8]
   12ecc:	add	r6, r3, r0
   12ed0:	cmp	r5, #0
   12ed4:	ble	13bd8 <ReadInt8Data+0xf9c>
   12ed8:	ldr	r3, [sp, #4]
   12edc:	add	r2, r3, r4
   12ee0:	add	r3, r2, r5
   12ee4:	ldr	r0, [sp, #12]
   12ee8:	vldmia	r0!, {d7}
   12eec:	vcvt.s32.f64	s15, d7
   12ef0:	vmov	r1, s15
   12ef4:	strb	r1, [r2], #1
   12ef8:	cmp	r2, r3
   12efc:	bne	12ee8 <ReadInt8Data+0x2ac>
   12f00:	b	13bd8 <ReadInt8Data+0xf9c>
   12f04:	ldr	r3, [r7]
   12f08:	mov	r2, r5
   12f0c:	ldr	r1, [sp]
   12f10:	add	r0, sp, #24
   12f14:	bl	1520 <fread@plt>
   12f18:	mov	r6, r0
   12f1c:	cmp	r5, #0
   12f20:	ble	13bd8 <ReadInt8Data+0xf9c>
   12f24:	add	r0, sp, #24
   12f28:	ldr	r3, [sp, #4]
   12f2c:	sub	r2, r3, #1
   12f30:	sub	r1, r5, #1
   12f34:	add	r1, r3, r1
   12f38:	vldmia	r0!, {d7}
   12f3c:	vcvt.s32.f64	s15, d7
   12f40:	vmov	r3, s15
   12f44:	strb	r3, [r2, #1]!
   12f48:	cmp	r2, r1
   12f4c:	bne	12f38 <ReadInt8Data+0x2fc>
   12f50:	b	13bd8 <ReadInt8Data+0xf9c>
   12f54:	ldr	r6, [r7, #20]
   12f58:	cmp	r6, #0
   12f5c:	beq	130b4 <ReadInt8Data+0x478>
   12f60:	cmp	r5, #256	; 0x100
   12f64:	ble	1305c <ReadInt8Data+0x420>
   12f68:	ldr	r3, [sp, #4]
   12f6c:	sub	sl, r3, #1
   12f70:	sub	r2, r5, #256	; 0x100
   12f74:	sub	r2, r2, #1
   12f78:	str	r2, [sp, #20]
   12f7c:	orr	fp, r2, #255	; 0xff
   12f80:	add	fp, fp, r3
   12f84:	mov	r6, #0
   12f88:	add	r3, sp, #24
   12f8c:	str	r3, [sp, #16]
   12f90:	add	r9, sp, #1040	; 0x410
   12f94:	add	r9, r9, #8
   12f98:	ldr	r3, [r7]
   12f9c:	mov	r2, #256	; 0x100
   12fa0:	ldr	r1, [sp]
   12fa4:	ldr	r4, [sp, #16]
   12fa8:	mov	r0, r4
   12fac:	bl	1520 <fread@plt>
   12fb0:	add	r6, r6, r0
   12fb4:	str	r6, [sp, #8]
   12fb8:	str	r4, [sp, #12]
   12fbc:	mov	r8, sl
   12fc0:	mov	r0, r4
   12fc4:	bl	1944 <Mat_floatSwap>
   12fc8:	vcvt.s32.f32	s15, s0
   12fcc:	vmov	r3, s15
   12fd0:	strb	r3, [r8, #1]!
   12fd4:	add	r4, r4, #4
   12fd8:	cmp	r4, r9
   12fdc:	bne	12fc0 <ReadInt8Data+0x384>
   12fe0:	add	sl, sl, #256	; 0x100
   12fe4:	cmp	sl, fp
   12fe8:	bne	12f98 <ReadInt8Data+0x35c>
   12fec:	ldr	r3, [sp, #20]
   12ff0:	bic	r4, r3, #255	; 0xff
   12ff4:	add	r4, r4, #256	; 0x100
   12ff8:	cmp	r5, r4
   12ffc:	ble	13bd8 <ReadInt8Data+0xf9c>
   13000:	sub	r5, r5, r4
   13004:	ldr	r3, [r7]
   13008:	mov	r2, r5
   1300c:	ldr	r1, [sp]
   13010:	add	r0, sp, #24
   13014:	bl	1520 <fread@plt>
   13018:	ldr	r3, [sp, #8]
   1301c:	add	r6, r3, r0
   13020:	cmp	r5, #0
   13024:	ble	13bd8 <ReadInt8Data+0xf9c>
   13028:	ldr	r3, [sp, #4]
   1302c:	add	r7, r3, r4
   13030:	add	r4, r7, r5
   13034:	ldr	r5, [sp, #12]
   13038:	mov	r0, r5
   1303c:	bl	1944 <Mat_floatSwap>
   13040:	vcvt.s32.f32	s15, s0
   13044:	vmov	r3, s15
   13048:	strb	r3, [r7], #1
   1304c:	add	r5, r5, #4
   13050:	cmp	r7, r4
   13054:	bne	13038 <ReadInt8Data+0x3fc>
   13058:	b	13bd8 <ReadInt8Data+0xf9c>
   1305c:	ldr	r3, [r7]
   13060:	mov	r2, r5
   13064:	ldr	r1, [sp]
   13068:	add	r0, sp, #24
   1306c:	bl	1520 <fread@plt>
   13070:	mov	r6, r0
   13074:	cmp	r5, #0
   13078:	ble	13bd8 <ReadInt8Data+0xf9c>
   1307c:	add	r7, sp, #24
   13080:	ldr	r3, [sp, #4]
   13084:	sub	r4, r3, #1
   13088:	sub	r5, r5, #1
   1308c:	add	r5, r3, r5
   13090:	mov	r0, r7
   13094:	bl	1944 <Mat_floatSwap>
   13098:	vcvt.s32.f32	s15, s0
   1309c:	vmov	r3, s15
   130a0:	strb	r3, [r4, #1]!
   130a4:	add	r7, r7, #4
   130a8:	cmp	r4, r5
   130ac:	bne	13090 <ReadInt8Data+0x454>
   130b0:	b	13bd8 <ReadInt8Data+0xf9c>
   130b4:	cmp	r5, #256	; 0x100
   130b8:	ble	13190 <ReadInt8Data+0x554>
   130bc:	ldr	r3, [sp, #4]
   130c0:	sub	r8, r3, #1
   130c4:	sub	r9, r5, #256	; 0x100
   130c8:	sub	r9, r9, #1
   130cc:	orr	sl, r9, #255	; 0xff
   130d0:	add	sl, sl, r3
   130d4:	add	fp, sp, #24
   130d8:	add	r4, sp, #1040	; 0x410
   130dc:	add	r4, r4, #8
   130e0:	ldr	r3, [r7]
   130e4:	mov	r2, #256	; 0x100
   130e8:	ldr	r1, [sp]
   130ec:	mov	r0, fp
   130f0:	bl	1520 <fread@plt>
   130f4:	add	r6, r6, r0
   130f8:	str	r6, [sp, #8]
   130fc:	str	fp, [sp, #12]
   13100:	mov	r1, r8
   13104:	mov	r2, fp
   13108:	vldmia	r2!, {s15}
   1310c:	vcvt.s32.f32	s15, s15
   13110:	vmov	r3, s15
   13114:	strb	r3, [r1, #1]!
   13118:	cmp	r2, r4
   1311c:	bne	13108 <ReadInt8Data+0x4cc>
   13120:	add	r8, r8, #256	; 0x100
   13124:	cmp	r8, sl
   13128:	bne	130e0 <ReadInt8Data+0x4a4>
   1312c:	bic	r4, r9, #255	; 0xff
   13130:	add	r4, r4, #256	; 0x100
   13134:	cmp	r5, r4
   13138:	ble	13bd8 <ReadInt8Data+0xf9c>
   1313c:	sub	r5, r5, r4
   13140:	ldr	r3, [r7]
   13144:	mov	r2, r5
   13148:	ldr	r1, [sp]
   1314c:	add	r0, sp, #24
   13150:	bl	1520 <fread@plt>
   13154:	ldr	r3, [sp, #8]
   13158:	add	r6, r3, r0
   1315c:	cmp	r5, #0
   13160:	ble	13bd8 <ReadInt8Data+0xf9c>
   13164:	ldr	r3, [sp, #4]
   13168:	add	r2, r3, r4
   1316c:	add	r3, r2, r5
   13170:	ldr	r0, [sp, #12]
   13174:	vldmia	r0!, {s15}
   13178:	vcvt.s32.f32	s15, s15
   1317c:	vmov	r1, s15
   13180:	strb	r1, [r2], #1
   13184:	cmp	r2, r3
   13188:	bne	13174 <ReadInt8Data+0x538>
   1318c:	b	13bd8 <ReadInt8Data+0xf9c>
   13190:	ldr	r3, [r7]
   13194:	mov	r2, r5
   13198:	ldr	r1, [sp]
   1319c:	add	r0, sp, #24
   131a0:	bl	1520 <fread@plt>
   131a4:	mov	r6, r0
   131a8:	cmp	r5, #0
   131ac:	ble	13bd8 <ReadInt8Data+0xf9c>
   131b0:	add	r0, sp, #24
   131b4:	ldr	r3, [sp, #4]
   131b8:	sub	r2, r3, #1
   131bc:	sub	r1, r5, #1
   131c0:	add	r1, r3, r1
   131c4:	vldmia	r0!, {s15}
   131c8:	vcvt.s32.f32	s15, s15
   131cc:	vmov	r3, s15
   131d0:	strb	r3, [r2, #1]!
   131d4:	cmp	r2, r1
   131d8:	bne	131c4 <ReadInt8Data+0x588>
   131dc:	b	13bd8 <ReadInt8Data+0xf9c>
   131e0:	ldr	r6, [r7, #20]
   131e4:	cmp	r6, #0
   131e8:	beq	13328 <ReadInt8Data+0x6ec>
   131ec:	cmp	r5, #256	; 0x100
   131f0:	ble	132d8 <ReadInt8Data+0x69c>
   131f4:	ldr	r3, [sp, #4]
   131f8:	sub	sl, r3, #1
   131fc:	sub	r2, r5, #256	; 0x100
   13200:	sub	r2, r2, #1
   13204:	str	r2, [sp, #20]
   13208:	orr	fp, r2, #255	; 0xff
   1320c:	add	fp, fp, r3
   13210:	mov	r6, #0
   13214:	add	r3, sp, #24
   13218:	str	r3, [sp, #16]
   1321c:	add	r9, sp, #1040	; 0x410
   13220:	add	r9, r9, #8
   13224:	ldr	r3, [r7]
   13228:	mov	r2, #256	; 0x100
   1322c:	ldr	r1, [sp]
   13230:	ldr	r4, [sp, #16]
   13234:	mov	r0, r4
   13238:	bl	1520 <fread@plt>
   1323c:	add	r6, r6, r0
   13240:	str	r6, [sp, #8]
   13244:	str	r4, [sp, #12]
   13248:	mov	r8, sl
   1324c:	mov	r0, r4
   13250:	bl	18a4 <Mat_int32Swap>
   13254:	strb	r0, [r8, #1]!
   13258:	add	r4, r4, #4
   1325c:	cmp	r4, r9
   13260:	bne	1324c <ReadInt8Data+0x610>
   13264:	add	sl, sl, #256	; 0x100
   13268:	cmp	sl, fp
   1326c:	bne	13224 <ReadInt8Data+0x5e8>
   13270:	ldr	r3, [sp, #20]
   13274:	bic	r4, r3, #255	; 0xff
   13278:	add	r4, r4, #256	; 0x100
   1327c:	cmp	r5, r4
   13280:	ble	13bd8 <ReadInt8Data+0xf9c>
   13284:	sub	r5, r5, r4
   13288:	ldr	r3, [r7]
   1328c:	mov	r2, r5
   13290:	ldr	r1, [sp]
   13294:	add	r0, sp, #24
   13298:	bl	1520 <fread@plt>
   1329c:	ldr	r3, [sp, #8]
   132a0:	add	r6, r3, r0
   132a4:	cmp	r5, #0
   132a8:	ble	13bd8 <ReadInt8Data+0xf9c>
   132ac:	ldr	r3, [sp, #4]
   132b0:	add	r7, r3, r4
   132b4:	add	r4, r7, r5
   132b8:	ldr	r5, [sp, #12]
   132bc:	mov	r0, r5
   132c0:	bl	18a4 <Mat_int32Swap>
   132c4:	strb	r0, [r7], #1
   132c8:	add	r5, r5, #4
   132cc:	cmp	r7, r4
   132d0:	bne	132bc <ReadInt8Data+0x680>
   132d4:	b	13bd8 <ReadInt8Data+0xf9c>
   132d8:	ldr	r3, [r7]
   132dc:	mov	r2, r5
   132e0:	ldr	r1, [sp]
   132e4:	add	r0, sp, #24
   132e8:	bl	1520 <fread@plt>
   132ec:	mov	r6, r0
   132f0:	cmp	r5, #0
   132f4:	ble	13bd8 <ReadInt8Data+0xf9c>
   132f8:	add	r7, sp, #24
   132fc:	ldr	r3, [sp, #4]
   13300:	sub	r4, r3, #1
   13304:	sub	r5, r5, #1
   13308:	add	r5, r3, r5
   1330c:	mov	r0, r7
   13310:	bl	18a4 <Mat_int32Swap>
   13314:	strb	r0, [r4, #1]!
   13318:	add	r7, r7, #4
   1331c:	cmp	r4, r5
   13320:	bne	1330c <ReadInt8Data+0x6d0>
   13324:	b	13bd8 <ReadInt8Data+0xf9c>
   13328:	cmp	r5, #256	; 0x100
   1332c:	ble	133f4 <ReadInt8Data+0x7b8>
   13330:	ldr	r3, [sp, #4]
   13334:	sub	r8, r3, #1
   13338:	sub	r2, r5, #256	; 0x100
   1333c:	sub	r2, r2, #1
   13340:	str	r2, [sp, #12]
   13344:	orr	fp, r2, #255	; 0xff
   13348:	add	fp, fp, r3
   1334c:	add	sl, sp, #24
   13350:	add	r4, sl, #1020	; 0x3fc
   13354:	ldr	r3, [r7]
   13358:	mov	r2, #256	; 0x100
   1335c:	ldr	r1, [sp]
   13360:	mov	r0, sl
   13364:	bl	1520 <fread@plt>
   13368:	add	r6, r6, r0
   1336c:	str	r6, [sp, #8]
   13370:	sub	r9, sl, #4
   13374:	mov	r2, r8
   13378:	mov	r3, r9
   1337c:	ldr	r1, [r3, #4]!
   13380:	strb	r1, [r2, #1]!
   13384:	cmp	r3, r4
   13388:	bne	1337c <ReadInt8Data+0x740>
   1338c:	add	r8, r8, #256	; 0x100
   13390:	cmp	r8, fp
   13394:	bne	13354 <ReadInt8Data+0x718>
   13398:	ldr	r3, [sp, #12]
   1339c:	bic	r4, r3, #255	; 0xff
   133a0:	add	r4, r4, #256	; 0x100
   133a4:	cmp	r5, r4
   133a8:	ble	13bd8 <ReadInt8Data+0xf9c>
   133ac:	sub	r5, r5, r4
   133b0:	ldr	r3, [r7]
   133b4:	mov	r2, r5
   133b8:	ldr	r1, [sp]
   133bc:	add	r0, sp, #24
   133c0:	bl	1520 <fread@plt>
   133c4:	ldr	r3, [sp, #8]
   133c8:	add	r6, r3, r0
   133cc:	cmp	r5, #0
   133d0:	ble	13bd8 <ReadInt8Data+0xf9c>
   133d4:	ldr	r3, [sp, #4]
   133d8:	add	r2, r3, r4
   133dc:	add	r3, r2, r5
   133e0:	ldr	r1, [r9, #4]!
   133e4:	strb	r1, [r2], #1
   133e8:	cmp	r2, r3
   133ec:	bne	133e0 <ReadInt8Data+0x7a4>
   133f0:	b	13bd8 <ReadInt8Data+0xf9c>
   133f4:	ldr	r3, [r7]
   133f8:	mov	r2, r5
   133fc:	ldr	r1, [sp]
   13400:	add	r0, sp, #24
   13404:	bl	1520 <fread@plt>
   13408:	mov	r6, r0
   1340c:	cmp	r5, #0
   13410:	ble	13bd8 <ReadInt8Data+0xf9c>
   13414:	add	r1, sp, #20
   13418:	ldr	r0, [sp, #4]
   1341c:	sub	r3, r0, #1
   13420:	sub	r2, r5, #1
   13424:	add	r2, r0, r2
   13428:	ldr	r0, [r1, #4]!
   1342c:	strb	r0, [r3, #1]!
   13430:	cmp	r3, r2
   13434:	bne	13428 <ReadInt8Data+0x7ec>
   13438:	b	13bd8 <ReadInt8Data+0xf9c>
   1343c:	ldr	r6, [r7, #20]
   13440:	cmp	r6, #0
   13444:	beq	13584 <ReadInt8Data+0x948>
   13448:	cmp	r5, #256	; 0x100
   1344c:	ble	13534 <ReadInt8Data+0x8f8>
   13450:	ldr	r3, [sp, #4]
   13454:	sub	sl, r3, #1
   13458:	sub	r2, r5, #256	; 0x100
   1345c:	sub	r2, r2, #1
   13460:	str	r2, [sp, #20]
   13464:	orr	fp, r2, #255	; 0xff
   13468:	add	fp, fp, r3
   1346c:	mov	r6, #0
   13470:	add	r3, sp, #24
   13474:	str	r3, [sp, #16]
   13478:	add	r9, sp, #1040	; 0x410
   1347c:	add	r9, r9, #8
   13480:	ldr	r3, [r7]
   13484:	mov	r2, #256	; 0x100
   13488:	ldr	r1, [sp]
   1348c:	ldr	r4, [sp, #16]
   13490:	mov	r0, r4
   13494:	bl	1520 <fread@plt>
   13498:	add	r6, r6, r0
   1349c:	str	r6, [sp, #8]
   134a0:	str	r4, [sp, #12]
   134a4:	mov	r8, sl
   134a8:	mov	r0, r4
   134ac:	bl	18d4 <Mat_uint32Swap>
   134b0:	strb	r0, [r8, #1]!
   134b4:	add	r4, r4, #4
   134b8:	cmp	r4, r9
   134bc:	bne	134a8 <ReadInt8Data+0x86c>
   134c0:	add	sl, sl, #256	; 0x100
   134c4:	cmp	sl, fp
   134c8:	bne	13480 <ReadInt8Data+0x844>
   134cc:	ldr	r3, [sp, #20]
   134d0:	bic	r4, r3, #255	; 0xff
   134d4:	add	r4, r4, #256	; 0x100
   134d8:	cmp	r5, r4
   134dc:	ble	13bd8 <ReadInt8Data+0xf9c>
   134e0:	sub	r5, r5, r4
   134e4:	ldr	r3, [r7]
   134e8:	mov	r2, r5
   134ec:	ldr	r1, [sp]
   134f0:	add	r0, sp, #24
   134f4:	bl	1520 <fread@plt>
   134f8:	ldr	r3, [sp, #8]
   134fc:	add	r6, r3, r0
   13500:	cmp	r5, #0
   13504:	ble	13bd8 <ReadInt8Data+0xf9c>
   13508:	ldr	r3, [sp, #4]
   1350c:	add	r7, r3, r4
   13510:	add	r4, r7, r5
   13514:	ldr	r5, [sp, #12]
   13518:	mov	r0, r5
   1351c:	bl	18d4 <Mat_uint32Swap>
   13520:	strb	r0, [r7], #1
   13524:	add	r5, r5, #4
   13528:	cmp	r7, r4
   1352c:	bne	13518 <ReadInt8Data+0x8dc>
   13530:	b	13bd8 <ReadInt8Data+0xf9c>
   13534:	ldr	r3, [r7]
   13538:	mov	r2, r5
   1353c:	ldr	r1, [sp]
   13540:	add	r0, sp, #24
   13544:	bl	1520 <fread@plt>
   13548:	mov	r6, r0
   1354c:	cmp	r5, #0
   13550:	ble	13bd8 <ReadInt8Data+0xf9c>
   13554:	add	r7, sp, #24
   13558:	ldr	r3, [sp, #4]
   1355c:	sub	r4, r3, #1
   13560:	sub	r5, r5, #1
   13564:	add	r5, r3, r5
   13568:	mov	r0, r7
   1356c:	bl	18d4 <Mat_uint32Swap>
   13570:	strb	r0, [r4, #1]!
   13574:	add	r7, r7, #4
   13578:	cmp	r4, r5
   1357c:	bne	13568 <ReadInt8Data+0x92c>
   13580:	b	13bd8 <ReadInt8Data+0xf9c>
   13584:	cmp	r5, #256	; 0x100
   13588:	ble	13650 <ReadInt8Data+0xa14>
   1358c:	ldr	r3, [sp, #4]
   13590:	sub	r8, r3, #1
   13594:	sub	r2, r5, #256	; 0x100
   13598:	sub	r2, r2, #1
   1359c:	str	r2, [sp, #12]
   135a0:	orr	fp, r2, #255	; 0xff
   135a4:	add	fp, fp, r3
   135a8:	add	sl, sp, #24
   135ac:	add	r4, sl, #1020	; 0x3fc
   135b0:	ldr	r3, [r7]
   135b4:	mov	r2, #256	; 0x100
   135b8:	ldr	r1, [sp]
   135bc:	mov	r0, sl
   135c0:	bl	1520 <fread@plt>
   135c4:	add	r6, r6, r0
   135c8:	str	r6, [sp, #8]
   135cc:	sub	r9, sl, #4
   135d0:	mov	r2, r8
   135d4:	mov	r3, r9
   135d8:	ldr	r1, [r3, #4]!
   135dc:	strb	r1, [r2, #1]!
   135e0:	cmp	r3, r4
   135e4:	bne	135d8 <ReadInt8Data+0x99c>
   135e8:	add	r8, r8, #256	; 0x100
   135ec:	cmp	r8, fp
   135f0:	bne	135b0 <ReadInt8Data+0x974>
   135f4:	ldr	r3, [sp, #12]
   135f8:	bic	r4, r3, #255	; 0xff
   135fc:	add	r4, r4, #256	; 0x100
   13600:	cmp	r5, r4
   13604:	ble	13bd8 <ReadInt8Data+0xf9c>
   13608:	sub	r5, r5, r4
   1360c:	ldr	r3, [r7]
   13610:	mov	r2, r5
   13614:	ldr	r1, [sp]
   13618:	add	r0, sp, #24
   1361c:	bl	1520 <fread@plt>
   13620:	ldr	r3, [sp, #8]
   13624:	add	r6, r3, r0
   13628:	cmp	r5, #0
   1362c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13630:	ldr	r3, [sp, #4]
   13634:	add	r2, r3, r4
   13638:	add	r3, r2, r5
   1363c:	ldr	r1, [r9, #4]!
   13640:	strb	r1, [r2], #1
   13644:	cmp	r2, r3
   13648:	bne	1363c <ReadInt8Data+0xa00>
   1364c:	b	13bd8 <ReadInt8Data+0xf9c>
   13650:	ldr	r3, [r7]
   13654:	mov	r2, r5
   13658:	ldr	r1, [sp]
   1365c:	add	r0, sp, #24
   13660:	bl	1520 <fread@plt>
   13664:	mov	r6, r0
   13668:	cmp	r5, #0
   1366c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13670:	add	r1, sp, #20
   13674:	ldr	r0, [sp, #4]
   13678:	sub	r3, r0, #1
   1367c:	sub	r2, r5, #1
   13680:	add	r2, r0, r2
   13684:	ldr	r0, [r1, #4]!
   13688:	strb	r0, [r3, #1]!
   1368c:	cmp	r3, r2
   13690:	bne	13684 <ReadInt8Data+0xa48>
   13694:	b	13bd8 <ReadInt8Data+0xf9c>
   13698:	ldr	r6, [r7, #20]
   1369c:	cmp	r6, #0
   136a0:	beq	137dc <ReadInt8Data+0xba0>
   136a4:	cmp	r5, #256	; 0x100
   136a8:	ble	1378c <ReadInt8Data+0xb50>
   136ac:	ldr	r3, [sp, #4]
   136b0:	sub	sl, r3, #1
   136b4:	sub	r2, r5, #256	; 0x100
   136b8:	sub	r2, r2, #1
   136bc:	str	r2, [sp, #20]
   136c0:	orr	fp, r2, #255	; 0xff
   136c4:	add	fp, fp, r3
   136c8:	mov	r6, #0
   136cc:	add	r3, sp, #24
   136d0:	str	r3, [sp, #16]
   136d4:	add	r9, sp, #536	; 0x218
   136d8:	ldr	r3, [r7]
   136dc:	mov	r2, #256	; 0x100
   136e0:	ldr	r1, [sp]
   136e4:	ldr	r4, [sp, #16]
   136e8:	mov	r0, r4
   136ec:	bl	1520 <fread@plt>
   136f0:	add	r6, r6, r0
   136f4:	str	r6, [sp, #8]
   136f8:	str	r4, [sp, #12]
   136fc:	mov	r8, sl
   13700:	mov	r0, r4
   13704:	bl	1904 <Mat_int16Swap>
   13708:	strb	r0, [r8, #1]!
   1370c:	add	r4, r4, #2
   13710:	cmp	r4, r9
   13714:	bne	13700 <ReadInt8Data+0xac4>
   13718:	add	sl, sl, #256	; 0x100
   1371c:	cmp	sl, fp
   13720:	bne	136d8 <ReadInt8Data+0xa9c>
   13724:	ldr	r3, [sp, #20]
   13728:	bic	r4, r3, #255	; 0xff
   1372c:	add	r4, r4, #256	; 0x100
   13730:	cmp	r5, r4
   13734:	ble	13bd8 <ReadInt8Data+0xf9c>
   13738:	sub	r5, r5, r4
   1373c:	ldr	r3, [r7]
   13740:	mov	r2, r5
   13744:	ldr	r1, [sp]
   13748:	add	r0, sp, #24
   1374c:	bl	1520 <fread@plt>
   13750:	ldr	r3, [sp, #8]
   13754:	add	r6, r3, r0
   13758:	cmp	r5, #0
   1375c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13760:	ldr	r3, [sp, #4]
   13764:	add	r7, r3, r4
   13768:	add	r4, r7, r5
   1376c:	ldr	r5, [sp, #12]
   13770:	mov	r0, r5
   13774:	bl	1904 <Mat_int16Swap>
   13778:	strb	r0, [r7], #1
   1377c:	add	r5, r5, #2
   13780:	cmp	r7, r4
   13784:	bne	13770 <ReadInt8Data+0xb34>
   13788:	b	13bd8 <ReadInt8Data+0xf9c>
   1378c:	ldr	r3, [r7]
   13790:	mov	r2, r5
   13794:	ldr	r1, [sp]
   13798:	add	r0, sp, #24
   1379c:	bl	1520 <fread@plt>
   137a0:	mov	r6, r0
   137a4:	cmp	r5, #0
   137a8:	ble	13bd8 <ReadInt8Data+0xf9c>
   137ac:	add	r7, sp, #24
   137b0:	ldr	r3, [sp, #4]
   137b4:	sub	r4, r3, #1
   137b8:	sub	r5, r5, #1
   137bc:	add	r5, r3, r5
   137c0:	mov	r0, r7
   137c4:	bl	1904 <Mat_int16Swap>
   137c8:	strb	r0, [r4, #1]!
   137cc:	add	r7, r7, #2
   137d0:	cmp	r4, r5
   137d4:	bne	137c0 <ReadInt8Data+0xb84>
   137d8:	b	13bd8 <ReadInt8Data+0xf9c>
   137dc:	cmp	r5, #256	; 0x100
   137e0:	ble	138ac <ReadInt8Data+0xc70>
   137e4:	ldr	r3, [sp, #4]
   137e8:	sub	r8, r3, #1
   137ec:	sub	r2, r5, #256	; 0x100
   137f0:	sub	r2, r2, #1
   137f4:	str	r2, [sp, #12]
   137f8:	orr	fp, r2, #255	; 0xff
   137fc:	add	fp, fp, r3
   13800:	add	sl, sp, #24
   13804:	add	r4, sl, #508	; 0x1fc
   13808:	add	r4, r4, #2
   1380c:	ldr	r3, [r7]
   13810:	mov	r2, #256	; 0x100
   13814:	ldr	r1, [sp]
   13818:	mov	r0, sl
   1381c:	bl	1520 <fread@plt>
   13820:	add	r6, r6, r0
   13824:	str	r6, [sp, #8]
   13828:	sub	r9, sl, #2
   1382c:	mov	r2, r8
   13830:	mov	r3, r9
   13834:	ldrh	r1, [r3, #2]!
   13838:	strb	r1, [r2, #1]!
   1383c:	cmp	r3, r4
   13840:	bne	13834 <ReadInt8Data+0xbf8>
   13844:	add	r8, r8, #256	; 0x100
   13848:	cmp	r8, fp
   1384c:	bne	1380c <ReadInt8Data+0xbd0>
   13850:	ldr	r3, [sp, #12]
   13854:	bic	r4, r3, #255	; 0xff
   13858:	add	r4, r4, #256	; 0x100
   1385c:	cmp	r5, r4
   13860:	ble	13bd8 <ReadInt8Data+0xf9c>
   13864:	sub	r5, r5, r4
   13868:	ldr	r3, [r7]
   1386c:	mov	r2, r5
   13870:	ldr	r1, [sp]
   13874:	add	r0, sp, #24
   13878:	bl	1520 <fread@plt>
   1387c:	ldr	r3, [sp, #8]
   13880:	add	r6, r3, r0
   13884:	cmp	r5, #0
   13888:	ble	13bd8 <ReadInt8Data+0xf9c>
   1388c:	ldr	r3, [sp, #4]
   13890:	add	r2, r3, r4
   13894:	add	r3, r2, r5
   13898:	ldrh	r1, [r9, #2]!
   1389c:	strb	r1, [r2], #1
   138a0:	cmp	r2, r3
   138a4:	bne	13898 <ReadInt8Data+0xc5c>
   138a8:	b	13bd8 <ReadInt8Data+0xf9c>
   138ac:	ldr	r3, [r7]
   138b0:	mov	r2, r5
   138b4:	ldr	r1, [sp]
   138b8:	add	r0, sp, #24
   138bc:	bl	1520 <fread@plt>
   138c0:	mov	r6, r0
   138c4:	cmp	r5, #0
   138c8:	ble	13bd8 <ReadInt8Data+0xf9c>
   138cc:	add	r1, sp, #22
   138d0:	ldr	r0, [sp, #4]
   138d4:	sub	r3, r0, #1
   138d8:	sub	r2, r5, #1
   138dc:	add	r2, r0, r2
   138e0:	ldrh	r0, [r1, #2]!
   138e4:	strb	r0, [r3, #1]!
   138e8:	cmp	r3, r2
   138ec:	bne	138e0 <ReadInt8Data+0xca4>
   138f0:	b	13bd8 <ReadInt8Data+0xf9c>
   138f4:	ldr	r6, [r7, #20]
   138f8:	cmp	r6, #0
   138fc:	beq	13a38 <ReadInt8Data+0xdfc>
   13900:	cmp	r5, #256	; 0x100
   13904:	ble	139e8 <ReadInt8Data+0xdac>
   13908:	ldr	r3, [sp, #4]
   1390c:	sub	sl, r3, #1
   13910:	sub	r2, r5, #256	; 0x100
   13914:	sub	r2, r2, #1
   13918:	str	r2, [sp, #20]
   1391c:	orr	fp, r2, #255	; 0xff
   13920:	add	fp, fp, r3
   13924:	mov	r6, #0
   13928:	add	r3, sp, #24
   1392c:	str	r3, [sp, #16]
   13930:	add	r9, sp, #536	; 0x218
   13934:	ldr	r3, [r7]
   13938:	mov	r2, #256	; 0x100
   1393c:	ldr	r1, [sp]
   13940:	ldr	r4, [sp, #16]
   13944:	mov	r0, r4
   13948:	bl	1520 <fread@plt>
   1394c:	add	r6, r6, r0
   13950:	str	r6, [sp, #8]
   13954:	str	r4, [sp, #12]
   13958:	mov	r8, sl
   1395c:	mov	r0, r4
   13960:	bl	1924 <Mat_uint16Swap>
   13964:	strb	r0, [r8, #1]!
   13968:	add	r4, r4, #2
   1396c:	cmp	r4, r9
   13970:	bne	1395c <ReadInt8Data+0xd20>
   13974:	add	sl, sl, #256	; 0x100
   13978:	cmp	sl, fp
   1397c:	bne	13934 <ReadInt8Data+0xcf8>
   13980:	ldr	r3, [sp, #20]
   13984:	bic	r4, r3, #255	; 0xff
   13988:	add	r4, r4, #256	; 0x100
   1398c:	cmp	r5, r4
   13990:	ble	13bd8 <ReadInt8Data+0xf9c>
   13994:	sub	r5, r5, r4
   13998:	ldr	r3, [r7]
   1399c:	mov	r2, r5
   139a0:	ldr	r1, [sp]
   139a4:	add	r0, sp, #24
   139a8:	bl	1520 <fread@plt>
   139ac:	ldr	r3, [sp, #8]
   139b0:	add	r6, r3, r0
   139b4:	cmp	r5, #0
   139b8:	ble	13bd8 <ReadInt8Data+0xf9c>
   139bc:	ldr	r3, [sp, #4]
   139c0:	add	r7, r3, r4
   139c4:	add	r4, r7, r5
   139c8:	ldr	r5, [sp, #12]
   139cc:	mov	r0, r5
   139d0:	bl	1924 <Mat_uint16Swap>
   139d4:	strb	r0, [r7], #1
   139d8:	add	r5, r5, #2
   139dc:	cmp	r7, r4
   139e0:	bne	139cc <ReadInt8Data+0xd90>
   139e4:	b	13bd8 <ReadInt8Data+0xf9c>
   139e8:	ldr	r3, [r7]
   139ec:	mov	r2, r5
   139f0:	ldr	r1, [sp]
   139f4:	add	r0, sp, #24
   139f8:	bl	1520 <fread@plt>
   139fc:	mov	r6, r0
   13a00:	cmp	r5, #0
   13a04:	ble	13bd8 <ReadInt8Data+0xf9c>
   13a08:	add	r7, sp, #24
   13a0c:	ldr	r3, [sp, #4]
   13a10:	sub	r4, r3, #1
   13a14:	sub	r5, r5, #1
   13a18:	add	r5, r3, r5
   13a1c:	mov	r0, r7
   13a20:	bl	1924 <Mat_uint16Swap>
   13a24:	strb	r0, [r4, #1]!
   13a28:	add	r7, r7, #2
   13a2c:	cmp	r4, r5
   13a30:	bne	13a1c <ReadInt8Data+0xde0>
   13a34:	b	13bd8 <ReadInt8Data+0xf9c>
   13a38:	cmp	r5, #256	; 0x100
   13a3c:	ble	13b08 <ReadInt8Data+0xecc>
   13a40:	ldr	r3, [sp, #4]
   13a44:	sub	r8, r3, #1
   13a48:	sub	r2, r5, #256	; 0x100
   13a4c:	sub	r2, r2, #1
   13a50:	str	r2, [sp, #12]
   13a54:	orr	fp, r2, #255	; 0xff
   13a58:	add	fp, fp, r3
   13a5c:	add	sl, sp, #24
   13a60:	add	r4, sl, #508	; 0x1fc
   13a64:	add	r4, r4, #2
   13a68:	ldr	r3, [r7]
   13a6c:	mov	r2, #256	; 0x100
   13a70:	ldr	r1, [sp]
   13a74:	mov	r0, sl
   13a78:	bl	1520 <fread@plt>
   13a7c:	add	r6, r6, r0
   13a80:	str	r6, [sp, #8]
   13a84:	sub	r9, sl, #2
   13a88:	mov	r2, r8
   13a8c:	mov	r3, r9
   13a90:	ldrh	r1, [r3, #2]!
   13a94:	strb	r1, [r2, #1]!
   13a98:	cmp	r3, r4
   13a9c:	bne	13a90 <ReadInt8Data+0xe54>
   13aa0:	add	r8, r8, #256	; 0x100
   13aa4:	cmp	r8, fp
   13aa8:	bne	13a68 <ReadInt8Data+0xe2c>
   13aac:	ldr	r3, [sp, #12]
   13ab0:	bic	r4, r3, #255	; 0xff
   13ab4:	add	r4, r4, #256	; 0x100
   13ab8:	cmp	r5, r4
   13abc:	ble	13bd8 <ReadInt8Data+0xf9c>
   13ac0:	sub	r5, r5, r4
   13ac4:	ldr	r3, [r7]
   13ac8:	mov	r2, r5
   13acc:	ldr	r1, [sp]
   13ad0:	add	r0, sp, #24
   13ad4:	bl	1520 <fread@plt>
   13ad8:	ldr	r3, [sp, #8]
   13adc:	add	r6, r3, r0
   13ae0:	cmp	r5, #0
   13ae4:	ble	13bd8 <ReadInt8Data+0xf9c>
   13ae8:	ldr	r3, [sp, #4]
   13aec:	add	r2, r3, r4
   13af0:	add	r3, r2, r5
   13af4:	ldrh	r1, [r9, #2]!
   13af8:	strb	r1, [r2], #1
   13afc:	cmp	r2, r3
   13b00:	bne	13af4 <ReadInt8Data+0xeb8>
   13b04:	b	13bd8 <ReadInt8Data+0xf9c>
   13b08:	ldr	r3, [r7]
   13b0c:	mov	r2, r5
   13b10:	ldr	r1, [sp]
   13b14:	add	r0, sp, #24
   13b18:	bl	1520 <fread@plt>
   13b1c:	mov	r6, r0
   13b20:	cmp	r5, #0
   13b24:	ble	13bd8 <ReadInt8Data+0xf9c>
   13b28:	add	r1, sp, #22
   13b2c:	ldr	r0, [sp, #4]
   13b30:	sub	r3, r0, #1
   13b34:	sub	r2, r5, #1
   13b38:	add	r2, r0, r2
   13b3c:	ldrh	r0, [r1, #2]!
   13b40:	strb	r0, [r3, #1]!
   13b44:	cmp	r3, r2
   13b48:	bne	13b3c <ReadInt8Data+0xf00>
   13b4c:	b	13bd8 <ReadInt8Data+0xf9c>
   13b50:	cmp	r5, #256	; 0x100
   13b54:	ble	13c00 <ReadInt8Data+0xfc4>
   13b58:	ldr	r3, [sp, #4]
   13b5c:	sub	r8, r3, #1
   13b60:	sub	r2, r5, #256	; 0x100
   13b64:	sub	r2, r2, #1
   13b68:	str	r2, [sp, #12]
   13b6c:	orr	fp, r2, #255	; 0xff
   13b70:	add	fp, fp, r3
   13b74:	mov	r6, #0
   13b78:	add	sl, sp, #24
   13b7c:	add	r4, sl, #255	; 0xff
   13b80:	ldr	r3, [r7]
   13b84:	mov	r2, #256	; 0x100
   13b88:	ldr	r1, [sp]
   13b8c:	mov	r0, sl
   13b90:	bl	1520 <fread@plt>
   13b94:	add	r6, r6, r0
   13b98:	str	r6, [sp, #8]
   13b9c:	sub	r9, sl, #1
   13ba0:	mov	r2, r8
   13ba4:	mov	r3, r9
   13ba8:	ldrb	r1, [r3, #1]!
   13bac:	strb	r1, [r2, #1]!
   13bb0:	cmp	r3, r4
   13bb4:	bne	13ba8 <ReadInt8Data+0xf6c>
   13bb8:	add	r8, r8, #256	; 0x100
   13bbc:	cmp	r8, fp
   13bc0:	bne	13b80 <ReadInt8Data+0xf44>
   13bc4:	ldr	r3, [sp, #12]
   13bc8:	bic	r4, r3, #255	; 0xff
   13bcc:	add	r4, r4, #256	; 0x100
   13bd0:	cmp	r5, r4
   13bd4:	bgt	13c48 <ReadInt8Data+0x100c>
   13bd8:	ldr	r3, [sp]
   13bdc:	mul	r0, r3, r6
   13be0:	add	sp, sp, #2064	; 0x810
   13be4:	add	sp, sp, #12
   13be8:	ldrd	r4, [sp]
   13bec:	ldrd	r6, [sp, #8]
   13bf0:	ldrd	r8, [sp, #16]
   13bf4:	ldrd	sl, [sp, #24]
   13bf8:	add	sp, sp, #32
   13bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   13c00:	ldr	r3, [r7]
   13c04:	mov	r2, r5
   13c08:	ldr	r1, [sp]
   13c0c:	add	r0, sp, #24
   13c10:	bl	1520 <fread@plt>
   13c14:	mov	r6, r0
   13c18:	cmp	r5, #0
   13c1c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13c20:	add	r2, sp, #23
   13c24:	ldr	r1, [sp, #4]
   13c28:	sub	r3, r1, #1
   13c2c:	sub	r0, r5, #1
   13c30:	add	r0, r1, r0
   13c34:	ldrb	r1, [r2, #1]!
   13c38:	strb	r1, [r3, #1]!
   13c3c:	cmp	r3, r0
   13c40:	bne	13c34 <ReadInt8Data+0xff8>
   13c44:	b	13bd8 <ReadInt8Data+0xf9c>
   13c48:	sub	r5, r5, r4
   13c4c:	ldr	r3, [r7]
   13c50:	mov	r2, r5
   13c54:	ldr	r1, [sp]
   13c58:	add	r0, sp, #24
   13c5c:	bl	1520 <fread@plt>
   13c60:	ldr	r3, [sp, #8]
   13c64:	add	r6, r3, r0
   13c68:	cmp	r5, #0
   13c6c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13c70:	ldr	r3, [sp, #4]
   13c74:	add	r2, r3, r4
   13c78:	add	r3, r2, r5
   13c7c:	ldrb	r1, [r9, #1]!
   13c80:	strb	r1, [r2], #1
   13c84:	cmp	r2, r3
   13c88:	bne	13c7c <ReadInt8Data+0x1040>
   13c8c:	b	13bd8 <ReadInt8Data+0xf9c>
   13c90:	cmp	r5, #256	; 0x100
   13c94:	ble	13d60 <ReadInt8Data+0x1124>
   13c98:	ldr	r3, [sp, #4]
   13c9c:	sub	r8, r3, #1
   13ca0:	sub	r2, r5, #256	; 0x100
   13ca4:	sub	r2, r2, #1
   13ca8:	str	r2, [sp, #12]
   13cac:	orr	fp, r2, #255	; 0xff
   13cb0:	add	fp, fp, r3
   13cb4:	mov	r6, #0
   13cb8:	add	sl, sp, #24
   13cbc:	add	r4, sl, #255	; 0xff
   13cc0:	ldr	r3, [r7]
   13cc4:	mov	r2, #256	; 0x100
   13cc8:	ldr	r1, [sp]
   13ccc:	mov	r0, sl
   13cd0:	bl	1520 <fread@plt>
   13cd4:	add	r6, r6, r0
   13cd8:	str	r6, [sp, #8]
   13cdc:	sub	r9, sl, #1
   13ce0:	mov	r2, r8
   13ce4:	mov	r3, r9
   13ce8:	ldrb	r1, [r3, #1]!
   13cec:	strb	r1, [r2, #1]!
   13cf0:	cmp	r3, r4
   13cf4:	bne	13ce8 <ReadInt8Data+0x10ac>
   13cf8:	add	r8, r8, #256	; 0x100
   13cfc:	cmp	r8, fp
   13d00:	bne	13cc0 <ReadInt8Data+0x1084>
   13d04:	ldr	r3, [sp, #12]
   13d08:	bic	r4, r3, #255	; 0xff
   13d0c:	add	r4, r4, #256	; 0x100
   13d10:	cmp	r5, r4
   13d14:	ble	13bd8 <ReadInt8Data+0xf9c>
   13d18:	sub	r5, r5, r4
   13d1c:	ldr	r3, [r7]
   13d20:	mov	r2, r5
   13d24:	ldr	r1, [sp]
   13d28:	add	r0, sp, #24
   13d2c:	bl	1520 <fread@plt>
   13d30:	ldr	r3, [sp, #8]
   13d34:	add	r6, r3, r0
   13d38:	cmp	r5, #0
   13d3c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13d40:	ldr	r3, [sp, #4]
   13d44:	add	r2, r3, r4
   13d48:	add	r3, r2, r5
   13d4c:	ldrb	r1, [r9, #1]!
   13d50:	strb	r1, [r2], #1
   13d54:	cmp	r2, r3
   13d58:	bne	13d4c <ReadInt8Data+0x1110>
   13d5c:	b	13bd8 <ReadInt8Data+0xf9c>
   13d60:	ldr	r3, [r7]
   13d64:	mov	r2, r5
   13d68:	ldr	r1, [sp]
   13d6c:	add	r0, sp, #24
   13d70:	bl	1520 <fread@plt>
   13d74:	mov	r6, r0
   13d78:	cmp	r5, #0
   13d7c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13d80:	add	r2, sp, #23
   13d84:	ldr	r1, [sp, #4]
   13d88:	sub	r3, r1, #1
   13d8c:	sub	r0, r5, #1
   13d90:	add	r0, r1, r0
   13d94:	ldrb	r1, [r2, #1]!
   13d98:	strb	r1, [r3, #1]!
   13d9c:	cmp	r3, r0
   13da0:	bne	13d94 <ReadInt8Data+0x1158>
   13da4:	b	13bd8 <ReadInt8Data+0xf9c>
   13da8:	cmp	r4, #12
   13dac:	beq	13eb4 <ReadInt8Data+0x1278>
   13db0:	cmp	r4, #13
   13db4:	movne	r6, #0
   13db8:	bne	13bd8 <ReadInt8Data+0xf9c>
   13dbc:	ldr	r6, [r7, #20]
   13dc0:	cmp	r6, #0
   13dc4:	beq	14160 <ReadInt8Data+0x1524>
   13dc8:	cmp	r5, #256	; 0x100
   13dcc:	ble	14110 <ReadInt8Data+0x14d4>
   13dd0:	ldr	r2, [sp, #4]
   13dd4:	sub	fp, r2, #1
   13dd8:	sub	sl, r5, #256	; 0x100
   13ddc:	sub	sl, sl, #1
   13de0:	orr	r3, sl, #255	; 0xff
   13de4:	add	r3, r3, r2
   13de8:	str	r3, [sp, #12]
   13dec:	mov	r6, #0
   13df0:	add	r3, sp, #24
   13df4:	str	r3, [sp, #20]
   13df8:	add	r9, sp, #2064	; 0x810
   13dfc:	add	r9, r9, #8
   13e00:	ldr	r3, [r7]
   13e04:	mov	r2, #256	; 0x100
   13e08:	ldr	r1, [sp]
   13e0c:	ldr	r4, [sp, #20]
   13e10:	mov	r0, r4
   13e14:	bl	1520 <fread@plt>
   13e18:	add	r6, r6, r0
   13e1c:	str	r6, [sp, #8]
   13e20:	str	r4, [sp, #16]
   13e24:	mov	r8, fp
   13e28:	mov	r0, r4
   13e2c:	bl	1848 <Mat_uint64Swap>
   13e30:	strb	r0, [r8, #1]!
   13e34:	add	r4, r4, #8
   13e38:	cmp	r9, r4
   13e3c:	bne	13e28 <ReadInt8Data+0x11ec>
   13e40:	add	fp, fp, #256	; 0x100
   13e44:	ldr	r3, [sp, #12]
   13e48:	cmp	fp, r3
   13e4c:	bne	13e00 <ReadInt8Data+0x11c4>
   13e50:	bic	r4, sl, #255	; 0xff
   13e54:	add	r4, r4, #256	; 0x100
   13e58:	cmp	r5, r4
   13e5c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13e60:	sub	r5, r5, r4
   13e64:	ldr	r3, [r7]
   13e68:	mov	r2, r5
   13e6c:	ldr	r1, [sp]
   13e70:	add	r0, sp, #24
   13e74:	bl	1520 <fread@plt>
   13e78:	ldr	r3, [sp, #8]
   13e7c:	add	r6, r3, r0
   13e80:	cmp	r5, #0
   13e84:	ble	13bd8 <ReadInt8Data+0xf9c>
   13e88:	ldr	r3, [sp, #4]
   13e8c:	add	r7, r3, r4
   13e90:	add	r4, r7, r5
   13e94:	ldr	r5, [sp, #16]
   13e98:	mov	r0, r5
   13e9c:	bl	1848 <Mat_uint64Swap>
   13ea0:	strb	r0, [r7], #1
   13ea4:	add	r5, r5, #8
   13ea8:	cmp	r4, r7
   13eac:	bne	13e98 <ReadInt8Data+0x125c>
   13eb0:	b	13bd8 <ReadInt8Data+0xf9c>
   13eb4:	ldr	r6, [r7, #20]
   13eb8:	cmp	r6, #0
   13ebc:	beq	13ffc <ReadInt8Data+0x13c0>
   13ec0:	cmp	r5, #256	; 0x100
   13ec4:	ble	13fac <ReadInt8Data+0x1370>
   13ec8:	ldr	r2, [sp, #4]
   13ecc:	sub	fp, r2, #1
   13ed0:	sub	sl, r5, #256	; 0x100
   13ed4:	sub	sl, sl, #1
   13ed8:	orr	r3, sl, #255	; 0xff
   13edc:	add	r3, r3, r2
   13ee0:	str	r3, [sp, #16]
   13ee4:	mov	r6, #0
   13ee8:	add	r3, sp, #24
   13eec:	str	r3, [sp, #20]
   13ef0:	add	r9, sp, #2064	; 0x810
   13ef4:	add	r9, r9, #8
   13ef8:	ldr	r3, [r7]
   13efc:	mov	r2, #256	; 0x100
   13f00:	ldr	r1, [sp]
   13f04:	ldr	r4, [sp, #20]
   13f08:	mov	r0, r4
   13f0c:	bl	1520 <fread@plt>
   13f10:	add	r6, r6, r0
   13f14:	str	r6, [sp, #8]
   13f18:	str	r4, [sp, #12]
   13f1c:	mov	r8, fp
   13f20:	mov	r0, r4
   13f24:	bl	17ec <Mat_int64Swap>
   13f28:	strb	r0, [r8, #1]!
   13f2c:	add	r4, r4, #8
   13f30:	cmp	r4, r9
   13f34:	bne	13f20 <ReadInt8Data+0x12e4>
   13f38:	add	fp, fp, #256	; 0x100
   13f3c:	ldr	r3, [sp, #16]
   13f40:	cmp	r3, fp
   13f44:	bne	13ef8 <ReadInt8Data+0x12bc>
   13f48:	bic	r4, sl, #255	; 0xff
   13f4c:	add	r4, r4, #256	; 0x100
   13f50:	cmp	r5, r4
   13f54:	ble	13bd8 <ReadInt8Data+0xf9c>
   13f58:	sub	r5, r5, r4
   13f5c:	ldr	r3, [r7]
   13f60:	mov	r2, r5
   13f64:	ldr	r1, [sp]
   13f68:	add	r0, sp, #24
   13f6c:	bl	1520 <fread@plt>
   13f70:	ldr	r3, [sp, #8]
   13f74:	add	r6, r3, r0
   13f78:	cmp	r5, #0
   13f7c:	ble	13bd8 <ReadInt8Data+0xf9c>
   13f80:	ldr	r3, [sp, #4]
   13f84:	add	r7, r3, r4
   13f88:	add	r4, r7, r5
   13f8c:	ldr	r5, [sp, #12]
   13f90:	mov	r0, r5
   13f94:	bl	17ec <Mat_int64Swap>
   13f98:	strb	r0, [r7], #1
   13f9c:	add	r5, r5, #8
   13fa0:	cmp	r7, r4
   13fa4:	bne	13f90 <ReadInt8Data+0x1354>
   13fa8:	b	13bd8 <ReadInt8Data+0xf9c>
   13fac:	ldr	r3, [r7]
   13fb0:	mov	r2, r5
   13fb4:	ldr	r1, [sp]
   13fb8:	add	r0, sp, #24
   13fbc:	bl	1520 <fread@plt>
   13fc0:	mov	r6, r0
   13fc4:	cmp	r5, #0
   13fc8:	ble	13bd8 <ReadInt8Data+0xf9c>
   13fcc:	add	r8, sp, #24
   13fd0:	ldr	r3, [sp, #4]
   13fd4:	sub	r7, r3, #1
   13fd8:	sub	r4, r5, #1
   13fdc:	add	r4, r3, r4
   13fe0:	mov	r0, r8
   13fe4:	bl	17ec <Mat_int64Swap>
   13fe8:	strb	r0, [r7, #1]!
   13fec:	add	r8, r8, #8
   13ff0:	cmp	r4, r7
   13ff4:	bne	13fe0 <ReadInt8Data+0x13a4>
   13ff8:	b	13bd8 <ReadInt8Data+0xf9c>
   13ffc:	cmp	r5, #256	; 0x100
   14000:	ble	140c8 <ReadInt8Data+0x148c>
   14004:	ldr	r2, [sp, #4]
   14008:	sub	r9, r2, #1
   1400c:	sub	r8, r5, #256	; 0x100
   14010:	sub	r8, r8, #1
   14014:	orr	r3, r8, #255	; 0xff
   14018:	add	r3, r3, r2
   1401c:	str	r3, [sp, #12]
   14020:	add	fp, sp, #24
   14024:	add	r4, sp, #2064	; 0x810
   14028:	ldr	r3, [r7]
   1402c:	mov	r2, #256	; 0x100
   14030:	ldr	r1, [sp]
   14034:	mov	r0, fp
   14038:	bl	1520 <fread@plt>
   1403c:	add	r6, r6, r0
   14040:	str	r6, [sp, #8]
   14044:	sub	sl, fp, #8
   14048:	mov	r2, r9
   1404c:	mov	r3, sl
   14050:	ldr	r1, [r3, #8]!
   14054:	strb	r1, [r2, #1]!
   14058:	cmp	r4, r3
   1405c:	bne	14050 <ReadInt8Data+0x1414>
   14060:	add	r9, r9, #256	; 0x100
   14064:	ldr	r3, [sp, #12]
   14068:	cmp	r3, r9
   1406c:	bne	14028 <ReadInt8Data+0x13ec>
   14070:	bic	r4, r8, #255	; 0xff
   14074:	add	r4, r4, #256	; 0x100
   14078:	cmp	r5, r4
   1407c:	ble	13bd8 <ReadInt8Data+0xf9c>
   14080:	sub	r5, r5, r4
   14084:	ldr	r3, [r7]
   14088:	mov	r2, r5
   1408c:	ldr	r1, [sp]
   14090:	add	r0, sp, #24
   14094:	bl	1520 <fread@plt>
   14098:	ldr	r3, [sp, #8]
   1409c:	add	r6, r3, r0
   140a0:	cmp	r5, #0
   140a4:	ble	13bd8 <ReadInt8Data+0xf9c>
   140a8:	ldr	r3, [sp, #4]
   140ac:	add	r2, r3, r4
   140b0:	add	r3, r2, r5
   140b4:	ldr	r1, [sl, #8]!
   140b8:	strb	r1, [r2], #1
   140bc:	cmp	r2, r3
   140c0:	bne	140b4 <ReadInt8Data+0x1478>
   140c4:	b	13bd8 <ReadInt8Data+0xf9c>
   140c8:	ldr	r3, [r7]
   140cc:	mov	r2, r5
   140d0:	ldr	r1, [sp]
   140d4:	add	r0, sp, #24
   140d8:	bl	1520 <fread@plt>
   140dc:	mov	r6, r0
   140e0:	cmp	r5, #0
   140e4:	ble	13bd8 <ReadInt8Data+0xf9c>
   140e8:	add	r1, sp, #16
   140ec:	ldr	r0, [sp, #4]
   140f0:	sub	r2, r0, #1
   140f4:	sub	r3, r5, #1
   140f8:	add	r3, r0, r3
   140fc:	ldr	r0, [r1, #8]!
   14100:	strb	r0, [r2, #1]!
   14104:	cmp	r3, r2
   14108:	bne	140fc <ReadInt8Data+0x14c0>
   1410c:	b	13bd8 <ReadInt8Data+0xf9c>
   14110:	ldr	r3, [r7]
   14114:	mov	r2, r5
   14118:	ldr	r1, [sp]
   1411c:	add	r0, sp, #24
   14120:	bl	1520 <fread@plt>
   14124:	mov	r6, r0
   14128:	cmp	r5, #0
   1412c:	ble	13bd8 <ReadInt8Data+0xf9c>
   14130:	add	r8, sp, #24
   14134:	ldr	r3, [sp, #4]
   14138:	sub	r7, r3, #1
   1413c:	sub	r4, r5, #1
   14140:	add	r4, r3, r4
   14144:	mov	r0, r8
   14148:	bl	1848 <Mat_uint64Swap>
   1414c:	strb	r0, [r7, #1]!
   14150:	add	r8, r8, #8
   14154:	cmp	r4, r7
   14158:	bne	14144 <ReadInt8Data+0x1508>
   1415c:	b	13bd8 <ReadInt8Data+0xf9c>
   14160:	cmp	r5, #256	; 0x100
   14164:	ble	1422c <ReadInt8Data+0x15f0>
   14168:	ldr	r2, [sp, #4]
   1416c:	sub	r9, r2, #1
   14170:	sub	r8, r5, #256	; 0x100
   14174:	sub	r8, r8, #1
   14178:	orr	r3, r8, #255	; 0xff
   1417c:	add	r3, r3, r2
   14180:	str	r3, [sp, #12]
   14184:	add	fp, sp, #24
   14188:	add	r4, sp, #2064	; 0x810
   1418c:	ldr	r3, [r7]
   14190:	mov	r2, #256	; 0x100
   14194:	ldr	r1, [sp]
   14198:	mov	r0, fp
   1419c:	bl	1520 <fread@plt>
   141a0:	add	r6, r6, r0
   141a4:	str	r6, [sp, #8]
   141a8:	sub	sl, fp, #8
   141ac:	mov	r2, r9
   141b0:	mov	r3, sl
   141b4:	ldr	r1, [r3, #8]!
   141b8:	strb	r1, [r2, #1]!
   141bc:	cmp	r3, r4
   141c0:	bne	141b4 <ReadInt8Data+0x1578>
   141c4:	add	r9, r9, #256	; 0x100
   141c8:	ldr	r3, [sp, #12]
   141cc:	cmp	r3, r9
   141d0:	bne	1418c <ReadInt8Data+0x1550>
   141d4:	bic	r4, r8, #255	; 0xff
   141d8:	add	r4, r4, #256	; 0x100
   141dc:	cmp	r5, r4
   141e0:	ble	13bd8 <ReadInt8Data+0xf9c>
   141e4:	sub	r5, r5, r4
   141e8:	ldr	r3, [r7]
   141ec:	mov	r2, r5
   141f0:	ldr	r1, [sp]
   141f4:	add	r0, sp, #24
   141f8:	bl	1520 <fread@plt>
   141fc:	ldr	r3, [sp, #8]
   14200:	add	r6, r3, r0
   14204:	cmp	r5, #0
   14208:	ble	13bd8 <ReadInt8Data+0xf9c>
   1420c:	ldr	r3, [sp, #4]
   14210:	add	r2, r3, r4
   14214:	add	r3, r2, r5
   14218:	ldr	r1, [sl, #8]!
   1421c:	strb	r1, [r2], #1
   14220:	cmp	r2, r3
   14224:	bne	14218 <ReadInt8Data+0x15dc>
   14228:	b	13bd8 <ReadInt8Data+0xf9c>
   1422c:	ldr	r3, [r7]
   14230:	mov	r2, r5
   14234:	ldr	r1, [sp]
   14238:	add	r0, sp, #24
   1423c:	bl	1520 <fread@plt>
   14240:	mov	r6, r0
   14244:	cmp	r5, #0
   14248:	ble	13bd8 <ReadInt8Data+0xf9c>
   1424c:	add	r1, sp, #16
   14250:	ldr	r0, [sp, #4]
   14254:	sub	r2, r0, #1
   14258:	sub	r3, r5, #1
   1425c:	add	r3, r0, r3
   14260:	ldr	r0, [r1, #8]!
   14264:	strb	r0, [r2, #1]!
   14268:	cmp	r2, r3
   1426c:	bne	14260 <ReadInt8Data+0x1624>
   14270:	b	13bd8 <ReadInt8Data+0xf9c>
   14274:	mov	r0, #0
   14278:	bx	lr

0001427c <ReadCompressedInt8Data>:
   1427c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14280:	strd	r6, [sp, #8]
   14284:	strd	r8, [sp, #16]
   14288:	str	sl, [sp, #24]
   1428c:	str	lr, [sp, #28]
   14290:	sub	sp, sp, #8
   14294:	ldr	r7, [sp, #40]	; 0x28
   14298:	mov	r9, r2
   1429c:	mov	r6, r1
   142a0:	clz	r1, r1
   142a4:	lsr	r1, r1, #5
   142a8:	cmp	r2, #0
   142ac:	movne	r2, r1
   142b0:	moveq	r2, #1
   142b4:	cmp	r0, #0
   142b8:	moveq	r2, #1
   142bc:	cmp	r2, #0
   142c0:	movne	r0, #0
   142c4:	beq	142e4 <ReadCompressedInt8Data+0x68>
   142c8:	add	sp, sp, #8
   142cc:	ldrd	r4, [sp]
   142d0:	ldrd	r6, [sp, #8]
   142d4:	ldrd	r8, [sp, #16]
   142d8:	ldr	sl, [sp, #24]
   142dc:	add	sp, sp, #28
   142e0:	pop	{pc}		; (ldr pc, [sp], #4)
   142e4:	mov	r5, r0
   142e8:	mov	r8, r3
   142ec:	mov	r0, r3
   142f0:	bl	1598 <Mat_SizeOf@plt>
   142f4:	mov	r4, r0
   142f8:	sub	r3, r8, #1
   142fc:	cmp	r3, #8
   14300:	addls	pc, pc, r3, lsl #2
   14304:	b	14730 <ReadCompressedInt8Data+0x4b4>
   14308:	b	14370 <ReadCompressedInt8Data+0xf4>
   1430c:	b	1432c <ReadCompressedInt8Data+0xb0>
   14310:	b	14610 <ReadCompressedInt8Data+0x394>
   14314:	b	146a0 <ReadCompressedInt8Data+0x424>
   14318:	b	144f0 <ReadCompressedInt8Data+0x274>
   1431c:	b	14580 <ReadCompressedInt8Data+0x304>
   14320:	b	14450 <ReadCompressedInt8Data+0x1d4>
   14324:	b	14730 <ReadCompressedInt8Data+0x4b4>
   14328:	b	143b0 <ReadCompressedInt8Data+0x134>
   1432c:	cmp	r7, #0
   14330:	subgt	r8, r9, #1
   14334:	subgt	ip, r7, #1
   14338:	addgt	r9, r9, ip
   1433c:	movgt	sl, sp
   14340:	ble	14368 <ReadCompressedInt8Data+0xec>
   14344:	mov	r3, r4
   14348:	mov	r2, sl
   1434c:	mov	r1, r6
   14350:	mov	r0, r5
   14354:	bl	333c <InflateData>
   14358:	ldrb	r3, [sp]
   1435c:	strb	r3, [r8, #1]!
   14360:	cmp	r8, r9
   14364:	bne	14344 <ReadCompressedInt8Data+0xc8>
   14368:	mul	r0, r4, r7
   1436c:	b	142c8 <ReadCompressedInt8Data+0x4c>
   14370:	cmp	r7, #0
   14374:	subgt	r8, r9, #1
   14378:	subgt	ip, r7, #1
   1437c:	addgt	r9, r9, ip
   14380:	movgt	sl, sp
   14384:	ble	14368 <ReadCompressedInt8Data+0xec>
   14388:	mov	r3, r4
   1438c:	mov	r2, sl
   14390:	mov	r1, r6
   14394:	mov	r0, r5
   14398:	bl	333c <InflateData>
   1439c:	ldrb	r3, [sp]
   143a0:	strb	r3, [r8, #1]!
   143a4:	cmp	r9, r8
   143a8:	bne	14388 <ReadCompressedInt8Data+0x10c>
   143ac:	b	14368 <ReadCompressedInt8Data+0xec>
   143b0:	ldr	r3, [r5, #20]
   143b4:	cmp	r3, #0
   143b8:	bne	14404 <ReadCompressedInt8Data+0x188>
   143bc:	cmp	r7, #0
   143c0:	subgt	r8, r9, #1
   143c4:	subgt	ip, r7, #1
   143c8:	addgt	r9, r9, ip
   143cc:	movgt	sl, sp
   143d0:	ble	14368 <ReadCompressedInt8Data+0xec>
   143d4:	mov	r3, r4
   143d8:	mov	r2, sl
   143dc:	mov	r1, r6
   143e0:	mov	r0, r5
   143e4:	bl	333c <InflateData>
   143e8:	vldr	d7, [sp]
   143ec:	vcvt.s32.f64	s15, d7
   143f0:	vmov	r3, s15
   143f4:	strb	r3, [r8, #1]!
   143f8:	cmp	r8, r9
   143fc:	bne	143d4 <ReadCompressedInt8Data+0x158>
   14400:	b	14368 <ReadCompressedInt8Data+0xec>
   14404:	cmp	r7, #0
   14408:	ble	14368 <ReadCompressedInt8Data+0xec>
   1440c:	sub	r8, r9, #1
   14410:	sub	ip, r7, #1
   14414:	add	r9, r9, ip
   14418:	mov	sl, sp
   1441c:	mov	r3, r4
   14420:	mov	r2, sl
   14424:	mov	r1, r6
   14428:	mov	r0, r5
   1442c:	bl	333c <InflateData>
   14430:	mov	r0, sl
   14434:	bl	1974 <Mat_doubleSwap>
   14438:	vcvt.s32.f64	s15, d0
   1443c:	vmov	r3, s15
   14440:	strb	r3, [r8, #1]!
   14444:	cmp	r8, r9
   14448:	bne	1441c <ReadCompressedInt8Data+0x1a0>
   1444c:	b	14368 <ReadCompressedInt8Data+0xec>
   14450:	ldr	r3, [r5, #20]
   14454:	cmp	r3, #0
   14458:	bne	144a4 <ReadCompressedInt8Data+0x228>
   1445c:	cmp	r7, #0
   14460:	subgt	r8, r9, #1
   14464:	subgt	ip, r7, #1
   14468:	addgt	r9, r9, ip
   1446c:	movgt	sl, sp
   14470:	ble	14368 <ReadCompressedInt8Data+0xec>
   14474:	mov	r3, r4
   14478:	mov	r2, sl
   1447c:	mov	r1, r6
   14480:	mov	r0, r5
   14484:	bl	333c <InflateData>
   14488:	vldr	s15, [sp]
   1448c:	vcvt.s32.f32	s15, s15
   14490:	vmov	r3, s15
   14494:	strb	r3, [r8, #1]!
   14498:	cmp	r8, r9
   1449c:	bne	14474 <ReadCompressedInt8Data+0x1f8>
   144a0:	b	14368 <ReadCompressedInt8Data+0xec>
   144a4:	cmp	r7, #0
   144a8:	ble	14368 <ReadCompressedInt8Data+0xec>
   144ac:	sub	r8, r9, #1
   144b0:	sub	ip, r7, #1
   144b4:	add	r9, r9, ip
   144b8:	mov	sl, sp
   144bc:	mov	r3, r4
   144c0:	mov	r2, sl
   144c4:	mov	r1, r6
   144c8:	mov	r0, r5
   144cc:	bl	333c <InflateData>
   144d0:	mov	r0, sl
   144d4:	bl	1944 <Mat_floatSwap>
   144d8:	vcvt.s32.f32	s15, s0
   144dc:	vmov	r3, s15
   144e0:	strb	r3, [r8, #1]!
   144e4:	cmp	r8, r9
   144e8:	bne	144bc <ReadCompressedInt8Data+0x240>
   144ec:	b	14368 <ReadCompressedInt8Data+0xec>
   144f0:	ldr	r3, [r5, #20]
   144f4:	cmp	r3, #0
   144f8:	bne	1453c <ReadCompressedInt8Data+0x2c0>
   144fc:	cmp	r7, #0
   14500:	subgt	r8, r9, #1
   14504:	subgt	ip, r7, #1
   14508:	addgt	r9, r9, ip
   1450c:	movgt	sl, sp
   14510:	ble	14368 <ReadCompressedInt8Data+0xec>
   14514:	mov	r3, r4
   14518:	mov	r2, sl
   1451c:	mov	r1, r6
   14520:	mov	r0, r5
   14524:	bl	333c <InflateData>
   14528:	ldr	r3, [sp]
   1452c:	strb	r3, [r8, #1]!
   14530:	cmp	r8, r9
   14534:	bne	14514 <ReadCompressedInt8Data+0x298>
   14538:	b	14368 <ReadCompressedInt8Data+0xec>
   1453c:	cmp	r7, #0
   14540:	ble	14368 <ReadCompressedInt8Data+0xec>
   14544:	sub	r8, r9, #1
   14548:	sub	ip, r7, #1
   1454c:	add	r9, r9, ip
   14550:	mov	sl, sp
   14554:	mov	r3, r4
   14558:	mov	r2, sl
   1455c:	mov	r1, r6
   14560:	mov	r0, r5
   14564:	bl	333c <InflateData>
   14568:	mov	r0, sl
   1456c:	bl	18a4 <Mat_int32Swap>
   14570:	strb	r0, [r8, #1]!
   14574:	cmp	r8, r9
   14578:	bne	14554 <ReadCompressedInt8Data+0x2d8>
   1457c:	b	14368 <ReadCompressedInt8Data+0xec>
   14580:	ldr	r3, [r5, #20]
   14584:	cmp	r3, #0
   14588:	bne	145cc <ReadCompressedInt8Data+0x350>
   1458c:	cmp	r7, #0
   14590:	subgt	r8, r9, #1
   14594:	subgt	ip, r7, #1
   14598:	addgt	r9, r9, ip
   1459c:	movgt	sl, sp
   145a0:	ble	14368 <ReadCompressedInt8Data+0xec>
   145a4:	mov	r3, r4
   145a8:	mov	r2, sl
   145ac:	mov	r1, r6
   145b0:	mov	r0, r5
   145b4:	bl	333c <InflateData>
   145b8:	ldr	r3, [sp]
   145bc:	strb	r3, [r8, #1]!
   145c0:	cmp	r8, r9
   145c4:	bne	145a4 <ReadCompressedInt8Data+0x328>
   145c8:	b	14368 <ReadCompressedInt8Data+0xec>
   145cc:	cmp	r7, #0
   145d0:	ble	14368 <ReadCompressedInt8Data+0xec>
   145d4:	sub	r8, r9, #1
   145d8:	sub	ip, r7, #1
   145dc:	add	r9, r9, ip
   145e0:	mov	sl, sp
   145e4:	mov	r3, r4
   145e8:	mov	r2, sl
   145ec:	mov	r1, r6
   145f0:	mov	r0, r5
   145f4:	bl	333c <InflateData>
   145f8:	mov	r0, sl
   145fc:	bl	18d4 <Mat_uint32Swap>
   14600:	strb	r0, [r8, #1]!
   14604:	cmp	r8, r9
   14608:	bne	145e4 <ReadCompressedInt8Data+0x368>
   1460c:	b	14368 <ReadCompressedInt8Data+0xec>
   14610:	ldr	r3, [r5, #20]
   14614:	cmp	r3, #0
   14618:	bne	1465c <ReadCompressedInt8Data+0x3e0>
   1461c:	cmp	r7, #0
   14620:	subgt	r8, r9, #1
   14624:	subgt	ip, r7, #1
   14628:	addgt	r9, r9, ip
   1462c:	movgt	sl, sp
   14630:	ble	14368 <ReadCompressedInt8Data+0xec>
   14634:	mov	r3, r4
   14638:	mov	r2, sl
   1463c:	mov	r1, r6
   14640:	mov	r0, r5
   14644:	bl	333c <InflateData>
   14648:	ldrh	r3, [sp]
   1464c:	strb	r3, [r8, #1]!
   14650:	cmp	r8, r9
   14654:	bne	14634 <ReadCompressedInt8Data+0x3b8>
   14658:	b	14368 <ReadCompressedInt8Data+0xec>
   1465c:	cmp	r7, #0
   14660:	ble	14368 <ReadCompressedInt8Data+0xec>
   14664:	sub	r8, r9, #1
   14668:	sub	ip, r7, #1
   1466c:	add	r9, r9, ip
   14670:	mov	sl, sp
   14674:	mov	r3, r4
   14678:	mov	r2, sl
   1467c:	mov	r1, r6
   14680:	mov	r0, r5
   14684:	bl	333c <InflateData>
   14688:	mov	r0, sl
   1468c:	bl	1904 <Mat_int16Swap>
   14690:	strb	r0, [r8, #1]!
   14694:	cmp	r9, r8
   14698:	bne	14674 <ReadCompressedInt8Data+0x3f8>
   1469c:	b	14368 <ReadCompressedInt8Data+0xec>
   146a0:	ldr	r3, [r5, #20]
   146a4:	cmp	r3, #0
   146a8:	bne	146ec <ReadCompressedInt8Data+0x470>
   146ac:	cmp	r7, #0
   146b0:	subgt	r8, r9, #1
   146b4:	subgt	ip, r7, #1
   146b8:	addgt	r9, r9, ip
   146bc:	movgt	sl, sp
   146c0:	ble	14368 <ReadCompressedInt8Data+0xec>
   146c4:	mov	r3, r4
   146c8:	mov	r2, sl
   146cc:	mov	r1, r6
   146d0:	mov	r0, r5
   146d4:	bl	333c <InflateData>
   146d8:	ldrh	r3, [sp]
   146dc:	strb	r3, [r8, #1]!
   146e0:	cmp	r8, r9
   146e4:	bne	146c4 <ReadCompressedInt8Data+0x448>
   146e8:	b	14368 <ReadCompressedInt8Data+0xec>
   146ec:	cmp	r7, #0
   146f0:	ble	14368 <ReadCompressedInt8Data+0xec>
   146f4:	sub	r8, r9, #1
   146f8:	sub	ip, r7, #1
   146fc:	add	r9, r9, ip
   14700:	mov	sl, sp
   14704:	mov	r3, r4
   14708:	mov	r2, sl
   1470c:	mov	r1, r6
   14710:	mov	r0, r5
   14714:	bl	333c <InflateData>
   14718:	mov	r0, sl
   1471c:	bl	1924 <Mat_uint16Swap>
   14720:	strb	r0, [r8, #1]!
   14724:	cmp	r8, r9
   14728:	bne	14704 <ReadCompressedInt8Data+0x488>
   1472c:	b	14368 <ReadCompressedInt8Data+0xec>
   14730:	cmp	r8, #12
   14734:	beq	1478c <ReadCompressedInt8Data+0x510>
   14738:	cmp	r8, #13
   1473c:	bne	14368 <ReadCompressedInt8Data+0xec>
   14740:	ldr	r3, [r5, #20]
   14744:	cmp	r3, #0
   14748:	bne	1481c <ReadCompressedInt8Data+0x5a0>
   1474c:	cmp	r7, #0
   14750:	subgt	r8, r9, #1
   14754:	subgt	r3, r7, #1
   14758:	addgt	r9, r9, r3
   1475c:	movgt	sl, sp
   14760:	ble	14368 <ReadCompressedInt8Data+0xec>
   14764:	mov	r3, r4
   14768:	mov	r2, sl
   1476c:	mov	r1, r6
   14770:	mov	r0, r5
   14774:	bl	333c <InflateData>
   14778:	ldr	r3, [sp]
   1477c:	strb	r3, [r8, #1]!
   14780:	cmp	r9, r8
   14784:	bne	14764 <ReadCompressedInt8Data+0x4e8>
   14788:	b	14368 <ReadCompressedInt8Data+0xec>
   1478c:	ldr	r3, [r5, #20]
   14790:	cmp	r3, #0
   14794:	bne	147d8 <ReadCompressedInt8Data+0x55c>
   14798:	cmp	r7, #0
   1479c:	subgt	r8, r9, #1
   147a0:	subgt	r3, r7, #1
   147a4:	addgt	r9, r9, r3
   147a8:	movgt	sl, sp
   147ac:	ble	14368 <ReadCompressedInt8Data+0xec>
   147b0:	mov	r3, r4
   147b4:	mov	r2, sl
   147b8:	mov	r1, r6
   147bc:	mov	r0, r5
   147c0:	bl	333c <InflateData>
   147c4:	ldr	r3, [sp]
   147c8:	strb	r3, [r8, #1]!
   147cc:	cmp	r9, r8
   147d0:	bne	147b0 <ReadCompressedInt8Data+0x534>
   147d4:	b	14368 <ReadCompressedInt8Data+0xec>
   147d8:	cmp	r7, #0
   147dc:	ble	14368 <ReadCompressedInt8Data+0xec>
   147e0:	sub	r8, r9, #1
   147e4:	sub	sl, r7, #1
   147e8:	add	sl, r9, sl
   147ec:	mov	r9, sp
   147f0:	mov	r3, r4
   147f4:	mov	r2, r9
   147f8:	mov	r1, r6
   147fc:	mov	r0, r5
   14800:	bl	333c <InflateData>
   14804:	mov	r0, r9
   14808:	bl	17ec <Mat_int64Swap>
   1480c:	strb	r0, [r8, #1]!
   14810:	cmp	r8, sl
   14814:	bne	147f0 <ReadCompressedInt8Data+0x574>
   14818:	b	14368 <ReadCompressedInt8Data+0xec>
   1481c:	cmp	r7, #0
   14820:	ble	14368 <ReadCompressedInt8Data+0xec>
   14824:	sub	r8, r9, #1
   14828:	sub	sl, r7, #1
   1482c:	add	sl, r9, sl
   14830:	mov	r9, sp
   14834:	mov	r3, r4
   14838:	mov	r2, r9
   1483c:	mov	r1, r6
   14840:	mov	r0, r5
   14844:	bl	333c <InflateData>
   14848:	mov	r0, r9
   1484c:	bl	1848 <Mat_uint64Swap>
   14850:	strb	r0, [r8, #1]!
   14854:	cmp	sl, r8
   14858:	bne	14834 <ReadCompressedInt8Data+0x5b8>
   1485c:	b	14368 <ReadCompressedInt8Data+0xec>

00014860 <ReadUInt8Data>:
   14860:	cmp	r1, #0
   14864:	cmpne	r0, #0
   14868:	beq	15e98 <ReadUInt8Data+0x1638>
   1486c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14870:	strd	r6, [sp, #8]
   14874:	strd	r8, [sp, #16]
   14878:	strd	sl, [sp, #24]
   1487c:	str	lr, [sp, #32]
   14880:	sub	sp, sp, #2064	; 0x810
   14884:	sub	sp, sp, #12
   14888:	mov	r7, r0
   1488c:	mov	ip, r1
   14890:	ldr	r1, [r0]
   14894:	cmp	r1, #0
   14898:	moveq	r0, #0
   1489c:	beq	15804 <ReadUInt8Data+0xfa4>
   148a0:	str	ip, [sp, #4]
   148a4:	mov	r5, r3
   148a8:	mov	r4, r2
   148ac:	mov	r0, r2
   148b0:	bl	1598 <Mat_SizeOf@plt>
   148b4:	str	r0, [sp]
   148b8:	sub	r3, r4, #1
   148bc:	cmp	r3, #8
   148c0:	addls	pc, pc, r3, lsl #2
   148c4:	b	159cc <ReadUInt8Data+0x116c>
   148c8:	b	15774 <ReadUInt8Data+0xf14>
   148cc:	b	158b4 <ReadUInt8Data+0x1054>
   148d0:	b	152bc <ReadUInt8Data+0xa5c>
   148d4:	b	15518 <ReadUInt8Data+0xcb8>
   148d8:	b	14e04 <ReadUInt8Data+0x5a4>
   148dc:	b	15060 <ReadUInt8Data+0x800>
   148e0:	b	14b78 <ReadUInt8Data+0x318>
   148e4:	b	159cc <ReadUInt8Data+0x116c>
   148e8:	b	148ec <ReadUInt8Data+0x8c>
   148ec:	ldr	r6, [r7, #20]
   148f0:	cmp	r6, #0
   148f4:	beq	14a4c <ReadUInt8Data+0x1ec>
   148f8:	cmp	r5, #256	; 0x100
   148fc:	ble	149f4 <ReadUInt8Data+0x194>
   14900:	ldr	r3, [sp, #4]
   14904:	sub	sl, r3, #1
   14908:	sub	r2, r5, #256	; 0x100
   1490c:	sub	r2, r2, #1
   14910:	str	r2, [sp, #20]
   14914:	orr	fp, r2, #255	; 0xff
   14918:	add	fp, fp, r3
   1491c:	mov	r6, #0
   14920:	add	r3, sp, #24
   14924:	str	r3, [sp, #16]
   14928:	add	r9, sp, #2064	; 0x810
   1492c:	add	r9, r9, #8
   14930:	ldr	r3, [r7]
   14934:	mov	r2, #256	; 0x100
   14938:	ldr	r1, [sp]
   1493c:	ldr	r4, [sp, #16]
   14940:	mov	r0, r4
   14944:	bl	1520 <fread@plt>
   14948:	add	r6, r6, r0
   1494c:	str	r6, [sp, #8]
   14950:	str	r4, [sp, #12]
   14954:	mov	r8, sl
   14958:	mov	r0, r4
   1495c:	bl	1974 <Mat_doubleSwap>
   14960:	vcvt.u32.f64	s15, d0
   14964:	vmov	r3, s15
   14968:	strb	r3, [r8, #1]!
   1496c:	add	r4, r4, #8
   14970:	cmp	r4, r9
   14974:	bne	14958 <ReadUInt8Data+0xf8>
   14978:	add	sl, sl, #256	; 0x100
   1497c:	cmp	sl, fp
   14980:	bne	14930 <ReadUInt8Data+0xd0>
   14984:	ldr	r3, [sp, #20]
   14988:	bic	r4, r3, #255	; 0xff
   1498c:	add	r4, r4, #256	; 0x100
   14990:	cmp	r5, r4
   14994:	ble	157fc <ReadUInt8Data+0xf9c>
   14998:	sub	r5, r5, r4
   1499c:	ldr	r3, [r7]
   149a0:	mov	r2, r5
   149a4:	ldr	r1, [sp]
   149a8:	add	r0, sp, #24
   149ac:	bl	1520 <fread@plt>
   149b0:	ldr	r3, [sp, #8]
   149b4:	add	r6, r3, r0
   149b8:	cmp	r5, #0
   149bc:	ble	157fc <ReadUInt8Data+0xf9c>
   149c0:	ldr	r3, [sp, #4]
   149c4:	add	r7, r3, r4
   149c8:	add	r4, r7, r5
   149cc:	ldr	r5, [sp, #12]
   149d0:	mov	r0, r5
   149d4:	bl	1974 <Mat_doubleSwap>
   149d8:	vcvt.u32.f64	s15, d0
   149dc:	vmov	r3, s15
   149e0:	strb	r3, [r7], #1
   149e4:	add	r5, r5, #8
   149e8:	cmp	r7, r4
   149ec:	bne	149d0 <ReadUInt8Data+0x170>
   149f0:	b	157fc <ReadUInt8Data+0xf9c>
   149f4:	ldr	r3, [r7]
   149f8:	mov	r2, r5
   149fc:	ldr	r1, [sp]
   14a00:	add	r0, sp, #24
   14a04:	bl	1520 <fread@plt>
   14a08:	mov	r6, r0
   14a0c:	cmp	r5, #0
   14a10:	ble	157fc <ReadUInt8Data+0xf9c>
   14a14:	add	r7, sp, #24
   14a18:	ldr	r3, [sp, #4]
   14a1c:	sub	r4, r3, #1
   14a20:	sub	r5, r5, #1
   14a24:	add	r5, r3, r5
   14a28:	mov	r0, r7
   14a2c:	bl	1974 <Mat_doubleSwap>
   14a30:	vcvt.u32.f64	s15, d0
   14a34:	vmov	r3, s15
   14a38:	strb	r3, [r4, #1]!
   14a3c:	add	r7, r7, #8
   14a40:	cmp	r4, r5
   14a44:	bne	14a28 <ReadUInt8Data+0x1c8>
   14a48:	b	157fc <ReadUInt8Data+0xf9c>
   14a4c:	cmp	r5, #256	; 0x100
   14a50:	ble	14b28 <ReadUInt8Data+0x2c8>
   14a54:	ldr	r3, [sp, #4]
   14a58:	sub	r8, r3, #1
   14a5c:	sub	r9, r5, #256	; 0x100
   14a60:	sub	r9, r9, #1
   14a64:	orr	sl, r9, #255	; 0xff
   14a68:	add	sl, sl, r3
   14a6c:	add	fp, sp, #24
   14a70:	add	r4, sp, #2064	; 0x810
   14a74:	add	r4, r4, #8
   14a78:	ldr	r3, [r7]
   14a7c:	mov	r2, #256	; 0x100
   14a80:	ldr	r1, [sp]
   14a84:	mov	r0, fp
   14a88:	bl	1520 <fread@plt>
   14a8c:	add	r6, r6, r0
   14a90:	str	r6, [sp, #8]
   14a94:	str	fp, [sp, #12]
   14a98:	mov	r1, r8
   14a9c:	mov	r2, fp
   14aa0:	vldmia	r2!, {d7}
   14aa4:	vcvt.u32.f64	s15, d7
   14aa8:	vmov	r3, s15
   14aac:	strb	r3, [r1, #1]!
   14ab0:	cmp	r2, r4
   14ab4:	bne	14aa0 <ReadUInt8Data+0x240>
   14ab8:	add	r8, r8, #256	; 0x100
   14abc:	cmp	r8, sl
   14ac0:	bne	14a78 <ReadUInt8Data+0x218>
   14ac4:	bic	r4, r9, #255	; 0xff
   14ac8:	add	r4, r4, #256	; 0x100
   14acc:	cmp	r5, r4
   14ad0:	ble	157fc <ReadUInt8Data+0xf9c>
   14ad4:	sub	r5, r5, r4
   14ad8:	ldr	r3, [r7]
   14adc:	mov	r2, r5
   14ae0:	ldr	r1, [sp]
   14ae4:	add	r0, sp, #24
   14ae8:	bl	1520 <fread@plt>
   14aec:	ldr	r3, [sp, #8]
   14af0:	add	r6, r3, r0
   14af4:	cmp	r5, #0
   14af8:	ble	157fc <ReadUInt8Data+0xf9c>
   14afc:	ldr	r3, [sp, #4]
   14b00:	add	r2, r3, r4
   14b04:	add	r3, r2, r5
   14b08:	ldr	r0, [sp, #12]
   14b0c:	vldmia	r0!, {d7}
   14b10:	vcvt.u32.f64	s15, d7
   14b14:	vmov	r1, s15
   14b18:	strb	r1, [r2], #1
   14b1c:	cmp	r2, r3
   14b20:	bne	14b0c <ReadUInt8Data+0x2ac>
   14b24:	b	157fc <ReadUInt8Data+0xf9c>
   14b28:	ldr	r3, [r7]
   14b2c:	mov	r2, r5
   14b30:	ldr	r1, [sp]
   14b34:	add	r0, sp, #24
   14b38:	bl	1520 <fread@plt>
   14b3c:	mov	r6, r0
   14b40:	cmp	r5, #0
   14b44:	ble	157fc <ReadUInt8Data+0xf9c>
   14b48:	add	r0, sp, #24
   14b4c:	ldr	r3, [sp, #4]
   14b50:	sub	r2, r3, #1
   14b54:	sub	r1, r5, #1
   14b58:	add	r1, r3, r1
   14b5c:	vldmia	r0!, {d7}
   14b60:	vcvt.u32.f64	s15, d7
   14b64:	vmov	r3, s15
   14b68:	strb	r3, [r2, #1]!
   14b6c:	cmp	r2, r1
   14b70:	bne	14b5c <ReadUInt8Data+0x2fc>
   14b74:	b	157fc <ReadUInt8Data+0xf9c>
   14b78:	ldr	r6, [r7, #20]
   14b7c:	cmp	r6, #0
   14b80:	beq	14cd8 <ReadUInt8Data+0x478>
   14b84:	cmp	r5, #256	; 0x100
   14b88:	ble	14c80 <ReadUInt8Data+0x420>
   14b8c:	ldr	r3, [sp, #4]
   14b90:	sub	sl, r3, #1
   14b94:	sub	r2, r5, #256	; 0x100
   14b98:	sub	r2, r2, #1
   14b9c:	str	r2, [sp, #20]
   14ba0:	orr	fp, r2, #255	; 0xff
   14ba4:	add	fp, fp, r3
   14ba8:	mov	r6, #0
   14bac:	add	r3, sp, #24
   14bb0:	str	r3, [sp, #16]
   14bb4:	add	r9, sp, #1040	; 0x410
   14bb8:	add	r9, r9, #8
   14bbc:	ldr	r3, [r7]
   14bc0:	mov	r2, #256	; 0x100
   14bc4:	ldr	r1, [sp]
   14bc8:	ldr	r4, [sp, #16]
   14bcc:	mov	r0, r4
   14bd0:	bl	1520 <fread@plt>
   14bd4:	add	r6, r6, r0
   14bd8:	str	r6, [sp, #8]
   14bdc:	str	r4, [sp, #12]
   14be0:	mov	r8, sl
   14be4:	mov	r0, r4
   14be8:	bl	1944 <Mat_floatSwap>
   14bec:	vcvt.u32.f32	s15, s0
   14bf0:	vmov	r3, s15
   14bf4:	strb	r3, [r8, #1]!
   14bf8:	add	r4, r4, #4
   14bfc:	cmp	r4, r9
   14c00:	bne	14be4 <ReadUInt8Data+0x384>
   14c04:	add	sl, sl, #256	; 0x100
   14c08:	cmp	sl, fp
   14c0c:	bne	14bbc <ReadUInt8Data+0x35c>
   14c10:	ldr	r3, [sp, #20]
   14c14:	bic	r4, r3, #255	; 0xff
   14c18:	add	r4, r4, #256	; 0x100
   14c1c:	cmp	r5, r4
   14c20:	ble	157fc <ReadUInt8Data+0xf9c>
   14c24:	sub	r5, r5, r4
   14c28:	ldr	r3, [r7]
   14c2c:	mov	r2, r5
   14c30:	ldr	r1, [sp]
   14c34:	add	r0, sp, #24
   14c38:	bl	1520 <fread@plt>
   14c3c:	ldr	r3, [sp, #8]
   14c40:	add	r6, r3, r0
   14c44:	cmp	r5, #0
   14c48:	ble	157fc <ReadUInt8Data+0xf9c>
   14c4c:	ldr	r3, [sp, #4]
   14c50:	add	r7, r3, r4
   14c54:	add	r4, r7, r5
   14c58:	ldr	r5, [sp, #12]
   14c5c:	mov	r0, r5
   14c60:	bl	1944 <Mat_floatSwap>
   14c64:	vcvt.u32.f32	s15, s0
   14c68:	vmov	r3, s15
   14c6c:	strb	r3, [r7], #1
   14c70:	add	r5, r5, #4
   14c74:	cmp	r7, r4
   14c78:	bne	14c5c <ReadUInt8Data+0x3fc>
   14c7c:	b	157fc <ReadUInt8Data+0xf9c>
   14c80:	ldr	r3, [r7]
   14c84:	mov	r2, r5
   14c88:	ldr	r1, [sp]
   14c8c:	add	r0, sp, #24
   14c90:	bl	1520 <fread@plt>
   14c94:	mov	r6, r0
   14c98:	cmp	r5, #0
   14c9c:	ble	157fc <ReadUInt8Data+0xf9c>
   14ca0:	add	r7, sp, #24
   14ca4:	ldr	r3, [sp, #4]
   14ca8:	sub	r4, r3, #1
   14cac:	sub	r5, r5, #1
   14cb0:	add	r5, r3, r5
   14cb4:	mov	r0, r7
   14cb8:	bl	1944 <Mat_floatSwap>
   14cbc:	vcvt.u32.f32	s15, s0
   14cc0:	vmov	r3, s15
   14cc4:	strb	r3, [r4, #1]!
   14cc8:	add	r7, r7, #4
   14ccc:	cmp	r4, r5
   14cd0:	bne	14cb4 <ReadUInt8Data+0x454>
   14cd4:	b	157fc <ReadUInt8Data+0xf9c>
   14cd8:	cmp	r5, #256	; 0x100
   14cdc:	ble	14db4 <ReadUInt8Data+0x554>
   14ce0:	ldr	r3, [sp, #4]
   14ce4:	sub	r8, r3, #1
   14ce8:	sub	r9, r5, #256	; 0x100
   14cec:	sub	r9, r9, #1
   14cf0:	orr	sl, r9, #255	; 0xff
   14cf4:	add	sl, sl, r3
   14cf8:	add	fp, sp, #24
   14cfc:	add	r4, sp, #1040	; 0x410
   14d00:	add	r4, r4, #8
   14d04:	ldr	r3, [r7]
   14d08:	mov	r2, #256	; 0x100
   14d0c:	ldr	r1, [sp]
   14d10:	mov	r0, fp
   14d14:	bl	1520 <fread@plt>
   14d18:	add	r6, r6, r0
   14d1c:	str	r6, [sp, #8]
   14d20:	str	fp, [sp, #12]
   14d24:	mov	r1, r8
   14d28:	mov	r2, fp
   14d2c:	vldmia	r2!, {s15}
   14d30:	vcvt.u32.f32	s15, s15
   14d34:	vmov	r3, s15
   14d38:	strb	r3, [r1, #1]!
   14d3c:	cmp	r2, r4
   14d40:	bne	14d2c <ReadUInt8Data+0x4cc>
   14d44:	add	r8, r8, #256	; 0x100
   14d48:	cmp	r8, sl
   14d4c:	bne	14d04 <ReadUInt8Data+0x4a4>
   14d50:	bic	r4, r9, #255	; 0xff
   14d54:	add	r4, r4, #256	; 0x100
   14d58:	cmp	r5, r4
   14d5c:	ble	157fc <ReadUInt8Data+0xf9c>
   14d60:	sub	r5, r5, r4
   14d64:	ldr	r3, [r7]
   14d68:	mov	r2, r5
   14d6c:	ldr	r1, [sp]
   14d70:	add	r0, sp, #24
   14d74:	bl	1520 <fread@plt>
   14d78:	ldr	r3, [sp, #8]
   14d7c:	add	r6, r3, r0
   14d80:	cmp	r5, #0
   14d84:	ble	157fc <ReadUInt8Data+0xf9c>
   14d88:	ldr	r3, [sp, #4]
   14d8c:	add	r2, r3, r4
   14d90:	add	r3, r2, r5
   14d94:	ldr	r0, [sp, #12]
   14d98:	vldmia	r0!, {s15}
   14d9c:	vcvt.u32.f32	s15, s15
   14da0:	vmov	r1, s15
   14da4:	strb	r1, [r2], #1
   14da8:	cmp	r2, r3
   14dac:	bne	14d98 <ReadUInt8Data+0x538>
   14db0:	b	157fc <ReadUInt8Data+0xf9c>
   14db4:	ldr	r3, [r7]
   14db8:	mov	r2, r5
   14dbc:	ldr	r1, [sp]
   14dc0:	add	r0, sp, #24
   14dc4:	bl	1520 <fread@plt>
   14dc8:	mov	r6, r0
   14dcc:	cmp	r5, #0
   14dd0:	ble	157fc <ReadUInt8Data+0xf9c>
   14dd4:	add	r0, sp, #24
   14dd8:	ldr	r3, [sp, #4]
   14ddc:	sub	r2, r3, #1
   14de0:	sub	r1, r5, #1
   14de4:	add	r1, r3, r1
   14de8:	vldmia	r0!, {s15}
   14dec:	vcvt.u32.f32	s15, s15
   14df0:	vmov	r3, s15
   14df4:	strb	r3, [r2, #1]!
   14df8:	cmp	r2, r1
   14dfc:	bne	14de8 <ReadUInt8Data+0x588>
   14e00:	b	157fc <ReadUInt8Data+0xf9c>
   14e04:	ldr	r6, [r7, #20]
   14e08:	cmp	r6, #0
   14e0c:	beq	14f4c <ReadUInt8Data+0x6ec>
   14e10:	cmp	r5, #256	; 0x100
   14e14:	ble	14efc <ReadUInt8Data+0x69c>
   14e18:	ldr	r3, [sp, #4]
   14e1c:	sub	sl, r3, #1
   14e20:	sub	r2, r5, #256	; 0x100
   14e24:	sub	r2, r2, #1
   14e28:	str	r2, [sp, #20]
   14e2c:	orr	fp, r2, #255	; 0xff
   14e30:	add	fp, fp, r3
   14e34:	mov	r6, #0
   14e38:	add	r3, sp, #24
   14e3c:	str	r3, [sp, #16]
   14e40:	add	r9, sp, #1040	; 0x410
   14e44:	add	r9, r9, #8
   14e48:	ldr	r3, [r7]
   14e4c:	mov	r2, #256	; 0x100
   14e50:	ldr	r1, [sp]
   14e54:	ldr	r4, [sp, #16]
   14e58:	mov	r0, r4
   14e5c:	bl	1520 <fread@plt>
   14e60:	add	r6, r6, r0
   14e64:	str	r6, [sp, #8]
   14e68:	str	r4, [sp, #12]
   14e6c:	mov	r8, sl
   14e70:	mov	r0, r4
   14e74:	bl	18a4 <Mat_int32Swap>
   14e78:	strb	r0, [r8, #1]!
   14e7c:	add	r4, r4, #4
   14e80:	cmp	r4, r9
   14e84:	bne	14e70 <ReadUInt8Data+0x610>
   14e88:	add	sl, sl, #256	; 0x100
   14e8c:	cmp	sl, fp
   14e90:	bne	14e48 <ReadUInt8Data+0x5e8>
   14e94:	ldr	r3, [sp, #20]
   14e98:	bic	r4, r3, #255	; 0xff
   14e9c:	add	r4, r4, #256	; 0x100
   14ea0:	cmp	r5, r4
   14ea4:	ble	157fc <ReadUInt8Data+0xf9c>
   14ea8:	sub	r5, r5, r4
   14eac:	ldr	r3, [r7]
   14eb0:	mov	r2, r5
   14eb4:	ldr	r1, [sp]
   14eb8:	add	r0, sp, #24
   14ebc:	bl	1520 <fread@plt>
   14ec0:	ldr	r3, [sp, #8]
   14ec4:	add	r6, r3, r0
   14ec8:	cmp	r5, #0
   14ecc:	ble	157fc <ReadUInt8Data+0xf9c>
   14ed0:	ldr	r3, [sp, #4]
   14ed4:	add	r7, r3, r4
   14ed8:	add	r4, r7, r5
   14edc:	ldr	r5, [sp, #12]
   14ee0:	mov	r0, r5
   14ee4:	bl	18a4 <Mat_int32Swap>
   14ee8:	strb	r0, [r7], #1
   14eec:	add	r5, r5, #4
   14ef0:	cmp	r7, r4
   14ef4:	bne	14ee0 <ReadUInt8Data+0x680>
   14ef8:	b	157fc <ReadUInt8Data+0xf9c>
   14efc:	ldr	r3, [r7]
   14f00:	mov	r2, r5
   14f04:	ldr	r1, [sp]
   14f08:	add	r0, sp, #24
   14f0c:	bl	1520 <fread@plt>
   14f10:	mov	r6, r0
   14f14:	cmp	r5, #0
   14f18:	ble	157fc <ReadUInt8Data+0xf9c>
   14f1c:	add	r7, sp, #24
   14f20:	ldr	r3, [sp, #4]
   14f24:	sub	r4, r3, #1
   14f28:	sub	r5, r5, #1
   14f2c:	add	r5, r3, r5
   14f30:	mov	r0, r7
   14f34:	bl	18a4 <Mat_int32Swap>
   14f38:	strb	r0, [r4, #1]!
   14f3c:	add	r7, r7, #4
   14f40:	cmp	r4, r5
   14f44:	bne	14f30 <ReadUInt8Data+0x6d0>
   14f48:	b	157fc <ReadUInt8Data+0xf9c>
   14f4c:	cmp	r5, #256	; 0x100
   14f50:	ble	15018 <ReadUInt8Data+0x7b8>
   14f54:	ldr	r3, [sp, #4]
   14f58:	sub	r8, r3, #1
   14f5c:	sub	r2, r5, #256	; 0x100
   14f60:	sub	r2, r2, #1
   14f64:	str	r2, [sp, #12]
   14f68:	orr	fp, r2, #255	; 0xff
   14f6c:	add	fp, fp, r3
   14f70:	add	sl, sp, #24
   14f74:	add	r4, sl, #1020	; 0x3fc
   14f78:	ldr	r3, [r7]
   14f7c:	mov	r2, #256	; 0x100
   14f80:	ldr	r1, [sp]
   14f84:	mov	r0, sl
   14f88:	bl	1520 <fread@plt>
   14f8c:	add	r6, r6, r0
   14f90:	str	r6, [sp, #8]
   14f94:	sub	r9, sl, #4
   14f98:	mov	r2, r8
   14f9c:	mov	r3, r9
   14fa0:	ldr	r1, [r3, #4]!
   14fa4:	strb	r1, [r2, #1]!
   14fa8:	cmp	r3, r4
   14fac:	bne	14fa0 <ReadUInt8Data+0x740>
   14fb0:	add	r8, r8, #256	; 0x100
   14fb4:	cmp	r8, fp
   14fb8:	bne	14f78 <ReadUInt8Data+0x718>
   14fbc:	ldr	r3, [sp, #12]
   14fc0:	bic	r4, r3, #255	; 0xff
   14fc4:	add	r4, r4, #256	; 0x100
   14fc8:	cmp	r5, r4
   14fcc:	ble	157fc <ReadUInt8Data+0xf9c>
   14fd0:	sub	r5, r5, r4
   14fd4:	ldr	r3, [r7]
   14fd8:	mov	r2, r5
   14fdc:	ldr	r1, [sp]
   14fe0:	add	r0, sp, #24
   14fe4:	bl	1520 <fread@plt>
   14fe8:	ldr	r3, [sp, #8]
   14fec:	add	r6, r3, r0
   14ff0:	cmp	r5, #0
   14ff4:	ble	157fc <ReadUInt8Data+0xf9c>
   14ff8:	ldr	r3, [sp, #4]
   14ffc:	add	r2, r3, r4
   15000:	add	r3, r2, r5
   15004:	ldr	r1, [r9, #4]!
   15008:	strb	r1, [r2], #1
   1500c:	cmp	r2, r3
   15010:	bne	15004 <ReadUInt8Data+0x7a4>
   15014:	b	157fc <ReadUInt8Data+0xf9c>
   15018:	ldr	r3, [r7]
   1501c:	mov	r2, r5
   15020:	ldr	r1, [sp]
   15024:	add	r0, sp, #24
   15028:	bl	1520 <fread@plt>
   1502c:	mov	r6, r0
   15030:	cmp	r5, #0
   15034:	ble	157fc <ReadUInt8Data+0xf9c>
   15038:	add	r1, sp, #20
   1503c:	ldr	r0, [sp, #4]
   15040:	sub	r3, r0, #1
   15044:	sub	r2, r5, #1
   15048:	add	r2, r0, r2
   1504c:	ldr	r0, [r1, #4]!
   15050:	strb	r0, [r3, #1]!
   15054:	cmp	r3, r2
   15058:	bne	1504c <ReadUInt8Data+0x7ec>
   1505c:	b	157fc <ReadUInt8Data+0xf9c>
   15060:	ldr	r6, [r7, #20]
   15064:	cmp	r6, #0
   15068:	beq	151a8 <ReadUInt8Data+0x948>
   1506c:	cmp	r5, #256	; 0x100
   15070:	ble	15158 <ReadUInt8Data+0x8f8>
   15074:	ldr	r3, [sp, #4]
   15078:	sub	sl, r3, #1
   1507c:	sub	r2, r5, #256	; 0x100
   15080:	sub	r2, r2, #1
   15084:	str	r2, [sp, #20]
   15088:	orr	fp, r2, #255	; 0xff
   1508c:	add	fp, fp, r3
   15090:	mov	r6, #0
   15094:	add	r3, sp, #24
   15098:	str	r3, [sp, #16]
   1509c:	add	r9, sp, #1040	; 0x410
   150a0:	add	r9, r9, #8
   150a4:	ldr	r3, [r7]
   150a8:	mov	r2, #256	; 0x100
   150ac:	ldr	r1, [sp]
   150b0:	ldr	r4, [sp, #16]
   150b4:	mov	r0, r4
   150b8:	bl	1520 <fread@plt>
   150bc:	add	r6, r6, r0
   150c0:	str	r6, [sp, #8]
   150c4:	str	r4, [sp, #12]
   150c8:	mov	r8, sl
   150cc:	mov	r0, r4
   150d0:	bl	18d4 <Mat_uint32Swap>
   150d4:	strb	r0, [r8, #1]!
   150d8:	add	r4, r4, #4
   150dc:	cmp	r4, r9
   150e0:	bne	150cc <ReadUInt8Data+0x86c>
   150e4:	add	sl, sl, #256	; 0x100
   150e8:	cmp	sl, fp
   150ec:	bne	150a4 <ReadUInt8Data+0x844>
   150f0:	ldr	r3, [sp, #20]
   150f4:	bic	r4, r3, #255	; 0xff
   150f8:	add	r4, r4, #256	; 0x100
   150fc:	cmp	r5, r4
   15100:	ble	157fc <ReadUInt8Data+0xf9c>
   15104:	sub	r5, r5, r4
   15108:	ldr	r3, [r7]
   1510c:	mov	r2, r5
   15110:	ldr	r1, [sp]
   15114:	add	r0, sp, #24
   15118:	bl	1520 <fread@plt>
   1511c:	ldr	r3, [sp, #8]
   15120:	add	r6, r3, r0
   15124:	cmp	r5, #0
   15128:	ble	157fc <ReadUInt8Data+0xf9c>
   1512c:	ldr	r3, [sp, #4]
   15130:	add	r7, r3, r4
   15134:	add	r4, r7, r5
   15138:	ldr	r5, [sp, #12]
   1513c:	mov	r0, r5
   15140:	bl	18d4 <Mat_uint32Swap>
   15144:	strb	r0, [r7], #1
   15148:	add	r5, r5, #4
   1514c:	cmp	r7, r4
   15150:	bne	1513c <ReadUInt8Data+0x8dc>
   15154:	b	157fc <ReadUInt8Data+0xf9c>
   15158:	ldr	r3, [r7]
   1515c:	mov	r2, r5
   15160:	ldr	r1, [sp]
   15164:	add	r0, sp, #24
   15168:	bl	1520 <fread@plt>
   1516c:	mov	r6, r0
   15170:	cmp	r5, #0
   15174:	ble	157fc <ReadUInt8Data+0xf9c>
   15178:	add	r7, sp, #24
   1517c:	ldr	r3, [sp, #4]
   15180:	sub	r4, r3, #1
   15184:	sub	r5, r5, #1
   15188:	add	r5, r3, r5
   1518c:	mov	r0, r7
   15190:	bl	18d4 <Mat_uint32Swap>
   15194:	strb	r0, [r4, #1]!
   15198:	add	r7, r7, #4
   1519c:	cmp	r4, r5
   151a0:	bne	1518c <ReadUInt8Data+0x92c>
   151a4:	b	157fc <ReadUInt8Data+0xf9c>
   151a8:	cmp	r5, #256	; 0x100
   151ac:	ble	15274 <ReadUInt8Data+0xa14>
   151b0:	ldr	r3, [sp, #4]
   151b4:	sub	r8, r3, #1
   151b8:	sub	r2, r5, #256	; 0x100
   151bc:	sub	r2, r2, #1
   151c0:	str	r2, [sp, #12]
   151c4:	orr	fp, r2, #255	; 0xff
   151c8:	add	fp, fp, r3
   151cc:	add	sl, sp, #24
   151d0:	add	r4, sl, #1020	; 0x3fc
   151d4:	ldr	r3, [r7]
   151d8:	mov	r2, #256	; 0x100
   151dc:	ldr	r1, [sp]
   151e0:	mov	r0, sl
   151e4:	bl	1520 <fread@plt>
   151e8:	add	r6, r6, r0
   151ec:	str	r6, [sp, #8]
   151f0:	sub	r9, sl, #4
   151f4:	mov	r2, r8
   151f8:	mov	r3, r9
   151fc:	ldr	r1, [r3, #4]!
   15200:	strb	r1, [r2, #1]!
   15204:	cmp	r3, r4
   15208:	bne	151fc <ReadUInt8Data+0x99c>
   1520c:	add	r8, r8, #256	; 0x100
   15210:	cmp	r8, fp
   15214:	bne	151d4 <ReadUInt8Data+0x974>
   15218:	ldr	r3, [sp, #12]
   1521c:	bic	r4, r3, #255	; 0xff
   15220:	add	r4, r4, #256	; 0x100
   15224:	cmp	r5, r4
   15228:	ble	157fc <ReadUInt8Data+0xf9c>
   1522c:	sub	r5, r5, r4
   15230:	ldr	r3, [r7]
   15234:	mov	r2, r5
   15238:	ldr	r1, [sp]
   1523c:	add	r0, sp, #24
   15240:	bl	1520 <fread@plt>
   15244:	ldr	r3, [sp, #8]
   15248:	add	r6, r3, r0
   1524c:	cmp	r5, #0
   15250:	ble	157fc <ReadUInt8Data+0xf9c>
   15254:	ldr	r3, [sp, #4]
   15258:	add	r2, r3, r4
   1525c:	add	r3, r2, r5
   15260:	ldr	r1, [r9, #4]!
   15264:	strb	r1, [r2], #1
   15268:	cmp	r2, r3
   1526c:	bne	15260 <ReadUInt8Data+0xa00>
   15270:	b	157fc <ReadUInt8Data+0xf9c>
   15274:	ldr	r3, [r7]
   15278:	mov	r2, r5
   1527c:	ldr	r1, [sp]
   15280:	add	r0, sp, #24
   15284:	bl	1520 <fread@plt>
   15288:	mov	r6, r0
   1528c:	cmp	r5, #0
   15290:	ble	157fc <ReadUInt8Data+0xf9c>
   15294:	add	r1, sp, #20
   15298:	ldr	r0, [sp, #4]
   1529c:	sub	r3, r0, #1
   152a0:	sub	r2, r5, #1
   152a4:	add	r2, r0, r2
   152a8:	ldr	r0, [r1, #4]!
   152ac:	strb	r0, [r3, #1]!
   152b0:	cmp	r3, r2
   152b4:	bne	152a8 <ReadUInt8Data+0xa48>
   152b8:	b	157fc <ReadUInt8Data+0xf9c>
   152bc:	ldr	r6, [r7, #20]
   152c0:	cmp	r6, #0
   152c4:	beq	15400 <ReadUInt8Data+0xba0>
   152c8:	cmp	r5, #256	; 0x100
   152cc:	ble	153b0 <ReadUInt8Data+0xb50>
   152d0:	ldr	r3, [sp, #4]
   152d4:	sub	sl, r3, #1
   152d8:	sub	r2, r5, #256	; 0x100
   152dc:	sub	r2, r2, #1
   152e0:	str	r2, [sp, #20]
   152e4:	orr	fp, r2, #255	; 0xff
   152e8:	add	fp, fp, r3
   152ec:	mov	r6, #0
   152f0:	add	r3, sp, #24
   152f4:	str	r3, [sp, #16]
   152f8:	add	r9, sp, #536	; 0x218
   152fc:	ldr	r3, [r7]
   15300:	mov	r2, #256	; 0x100
   15304:	ldr	r1, [sp]
   15308:	ldr	r4, [sp, #16]
   1530c:	mov	r0, r4
   15310:	bl	1520 <fread@plt>
   15314:	add	r6, r6, r0
   15318:	str	r6, [sp, #8]
   1531c:	str	r4, [sp, #12]
   15320:	mov	r8, sl
   15324:	mov	r0, r4
   15328:	bl	1904 <Mat_int16Swap>
   1532c:	strb	r0, [r8, #1]!
   15330:	add	r4, r4, #2
   15334:	cmp	r4, r9
   15338:	bne	15324 <ReadUInt8Data+0xac4>
   1533c:	add	sl, sl, #256	; 0x100
   15340:	cmp	sl, fp
   15344:	bne	152fc <ReadUInt8Data+0xa9c>
   15348:	ldr	r3, [sp, #20]
   1534c:	bic	r4, r3, #255	; 0xff
   15350:	add	r4, r4, #256	; 0x100
   15354:	cmp	r5, r4
   15358:	ble	157fc <ReadUInt8Data+0xf9c>
   1535c:	sub	r5, r5, r4
   15360:	ldr	r3, [r7]
   15364:	mov	r2, r5
   15368:	ldr	r1, [sp]
   1536c:	add	r0, sp, #24
   15370:	bl	1520 <fread@plt>
   15374:	ldr	r3, [sp, #8]
   15378:	add	r6, r3, r0
   1537c:	cmp	r5, #0
   15380:	ble	157fc <ReadUInt8Data+0xf9c>
   15384:	ldr	r3, [sp, #4]
   15388:	add	r7, r3, r4
   1538c:	add	r4, r7, r5
   15390:	ldr	r5, [sp, #12]
   15394:	mov	r0, r5
   15398:	bl	1904 <Mat_int16Swap>
   1539c:	strb	r0, [r7], #1
   153a0:	add	r5, r5, #2
   153a4:	cmp	r7, r4
   153a8:	bne	15394 <ReadUInt8Data+0xb34>
   153ac:	b	157fc <ReadUInt8Data+0xf9c>
   153b0:	ldr	r3, [r7]
   153b4:	mov	r2, r5
   153b8:	ldr	r1, [sp]
   153bc:	add	r0, sp, #24
   153c0:	bl	1520 <fread@plt>
   153c4:	mov	r6, r0
   153c8:	cmp	r5, #0
   153cc:	ble	157fc <ReadUInt8Data+0xf9c>
   153d0:	add	r7, sp, #24
   153d4:	ldr	r3, [sp, #4]
   153d8:	sub	r4, r3, #1
   153dc:	sub	r5, r5, #1
   153e0:	add	r5, r3, r5
   153e4:	mov	r0, r7
   153e8:	bl	1904 <Mat_int16Swap>
   153ec:	strb	r0, [r4, #1]!
   153f0:	add	r7, r7, #2
   153f4:	cmp	r4, r5
   153f8:	bne	153e4 <ReadUInt8Data+0xb84>
   153fc:	b	157fc <ReadUInt8Data+0xf9c>
   15400:	cmp	r5, #256	; 0x100
   15404:	ble	154d0 <ReadUInt8Data+0xc70>
   15408:	ldr	r3, [sp, #4]
   1540c:	sub	r8, r3, #1
   15410:	sub	r2, r5, #256	; 0x100
   15414:	sub	r2, r2, #1
   15418:	str	r2, [sp, #12]
   1541c:	orr	fp, r2, #255	; 0xff
   15420:	add	fp, fp, r3
   15424:	add	sl, sp, #24
   15428:	add	r4, sl, #508	; 0x1fc
   1542c:	add	r4, r4, #2
   15430:	ldr	r3, [r7]
   15434:	mov	r2, #256	; 0x100
   15438:	ldr	r1, [sp]
   1543c:	mov	r0, sl
   15440:	bl	1520 <fread@plt>
   15444:	add	r6, r6, r0
   15448:	str	r6, [sp, #8]
   1544c:	sub	r9, sl, #2
   15450:	mov	r2, r8
   15454:	mov	r3, r9
   15458:	ldrh	r1, [r3, #2]!
   1545c:	strb	r1, [r2, #1]!
   15460:	cmp	r3, r4
   15464:	bne	15458 <ReadUInt8Data+0xbf8>
   15468:	add	r8, r8, #256	; 0x100
   1546c:	cmp	r8, fp
   15470:	bne	15430 <ReadUInt8Data+0xbd0>
   15474:	ldr	r3, [sp, #12]
   15478:	bic	r4, r3, #255	; 0xff
   1547c:	add	r4, r4, #256	; 0x100
   15480:	cmp	r5, r4
   15484:	ble	157fc <ReadUInt8Data+0xf9c>
   15488:	sub	r5, r5, r4
   1548c:	ldr	r3, [r7]
   15490:	mov	r2, r5
   15494:	ldr	r1, [sp]
   15498:	add	r0, sp, #24
   1549c:	bl	1520 <fread@plt>
   154a0:	ldr	r3, [sp, #8]
   154a4:	add	r6, r3, r0
   154a8:	cmp	r5, #0
   154ac:	ble	157fc <ReadUInt8Data+0xf9c>
   154b0:	ldr	r3, [sp, #4]
   154b4:	add	r2, r3, r4
   154b8:	add	r3, r2, r5
   154bc:	ldrh	r1, [r9, #2]!
   154c0:	strb	r1, [r2], #1
   154c4:	cmp	r2, r3
   154c8:	bne	154bc <ReadUInt8Data+0xc5c>
   154cc:	b	157fc <ReadUInt8Data+0xf9c>
   154d0:	ldr	r3, [r7]
   154d4:	mov	r2, r5
   154d8:	ldr	r1, [sp]
   154dc:	add	r0, sp, #24
   154e0:	bl	1520 <fread@plt>
   154e4:	mov	r6, r0
   154e8:	cmp	r5, #0
   154ec:	ble	157fc <ReadUInt8Data+0xf9c>
   154f0:	add	r1, sp, #22
   154f4:	ldr	r0, [sp, #4]
   154f8:	sub	r3, r0, #1
   154fc:	sub	r2, r5, #1
   15500:	add	r2, r0, r2
   15504:	ldrh	r0, [r1, #2]!
   15508:	strb	r0, [r3, #1]!
   1550c:	cmp	r3, r2
   15510:	bne	15504 <ReadUInt8Data+0xca4>
   15514:	b	157fc <ReadUInt8Data+0xf9c>
   15518:	ldr	r6, [r7, #20]
   1551c:	cmp	r6, #0
   15520:	beq	1565c <ReadUInt8Data+0xdfc>
   15524:	cmp	r5, #256	; 0x100
   15528:	ble	1560c <ReadUInt8Data+0xdac>
   1552c:	ldr	r3, [sp, #4]
   15530:	sub	sl, r3, #1
   15534:	sub	r2, r5, #256	; 0x100
   15538:	sub	r2, r2, #1
   1553c:	str	r2, [sp, #20]
   15540:	orr	fp, r2, #255	; 0xff
   15544:	add	fp, fp, r3
   15548:	mov	r6, #0
   1554c:	add	r3, sp, #24
   15550:	str	r3, [sp, #16]
   15554:	add	r9, sp, #536	; 0x218
   15558:	ldr	r3, [r7]
   1555c:	mov	r2, #256	; 0x100
   15560:	ldr	r1, [sp]
   15564:	ldr	r4, [sp, #16]
   15568:	mov	r0, r4
   1556c:	bl	1520 <fread@plt>
   15570:	add	r6, r6, r0
   15574:	str	r6, [sp, #8]
   15578:	str	r4, [sp, #12]
   1557c:	mov	r8, sl
   15580:	mov	r0, r4
   15584:	bl	1924 <Mat_uint16Swap>
   15588:	strb	r0, [r8, #1]!
   1558c:	add	r4, r4, #2
   15590:	cmp	r4, r9
   15594:	bne	15580 <ReadUInt8Data+0xd20>
   15598:	add	sl, sl, #256	; 0x100
   1559c:	cmp	sl, fp
   155a0:	bne	15558 <ReadUInt8Data+0xcf8>
   155a4:	ldr	r3, [sp, #20]
   155a8:	bic	r4, r3, #255	; 0xff
   155ac:	add	r4, r4, #256	; 0x100
   155b0:	cmp	r5, r4
   155b4:	ble	157fc <ReadUInt8Data+0xf9c>
   155b8:	sub	r5, r5, r4
   155bc:	ldr	r3, [r7]
   155c0:	mov	r2, r5
   155c4:	ldr	r1, [sp]
   155c8:	add	r0, sp, #24
   155cc:	bl	1520 <fread@plt>
   155d0:	ldr	r3, [sp, #8]
   155d4:	add	r6, r3, r0
   155d8:	cmp	r5, #0
   155dc:	ble	157fc <ReadUInt8Data+0xf9c>
   155e0:	ldr	r3, [sp, #4]
   155e4:	add	r7, r3, r4
   155e8:	add	r4, r7, r5
   155ec:	ldr	r5, [sp, #12]
   155f0:	mov	r0, r5
   155f4:	bl	1924 <Mat_uint16Swap>
   155f8:	strb	r0, [r7], #1
   155fc:	add	r5, r5, #2
   15600:	cmp	r7, r4
   15604:	bne	155f0 <ReadUInt8Data+0xd90>
   15608:	b	157fc <ReadUInt8Data+0xf9c>
   1560c:	ldr	r3, [r7]
   15610:	mov	r2, r5
   15614:	ldr	r1, [sp]
   15618:	add	r0, sp, #24
   1561c:	bl	1520 <fread@plt>
   15620:	mov	r6, r0
   15624:	cmp	r5, #0
   15628:	ble	157fc <ReadUInt8Data+0xf9c>
   1562c:	add	r7, sp, #24
   15630:	ldr	r3, [sp, #4]
   15634:	sub	r4, r3, #1
   15638:	sub	r5, r5, #1
   1563c:	add	r5, r3, r5
   15640:	mov	r0, r7
   15644:	bl	1924 <Mat_uint16Swap>
   15648:	strb	r0, [r4, #1]!
   1564c:	add	r7, r7, #2
   15650:	cmp	r4, r5
   15654:	bne	15640 <ReadUInt8Data+0xde0>
   15658:	b	157fc <ReadUInt8Data+0xf9c>
   1565c:	cmp	r5, #256	; 0x100
   15660:	ble	1572c <ReadUInt8Data+0xecc>
   15664:	ldr	r3, [sp, #4]
   15668:	sub	r8, r3, #1
   1566c:	sub	r2, r5, #256	; 0x100
   15670:	sub	r2, r2, #1
   15674:	str	r2, [sp, #12]
   15678:	orr	fp, r2, #255	; 0xff
   1567c:	add	fp, fp, r3
   15680:	add	sl, sp, #24
   15684:	add	r4, sl, #508	; 0x1fc
   15688:	add	r4, r4, #2
   1568c:	ldr	r3, [r7]
   15690:	mov	r2, #256	; 0x100
   15694:	ldr	r1, [sp]
   15698:	mov	r0, sl
   1569c:	bl	1520 <fread@plt>
   156a0:	add	r6, r6, r0
   156a4:	str	r6, [sp, #8]
   156a8:	sub	r9, sl, #2
   156ac:	mov	r2, r8
   156b0:	mov	r3, r9
   156b4:	ldrh	r1, [r3, #2]!
   156b8:	strb	r1, [r2, #1]!
   156bc:	cmp	r3, r4
   156c0:	bne	156b4 <ReadUInt8Data+0xe54>
   156c4:	add	r8, r8, #256	; 0x100
   156c8:	cmp	r8, fp
   156cc:	bne	1568c <ReadUInt8Data+0xe2c>
   156d0:	ldr	r3, [sp, #12]
   156d4:	bic	r4, r3, #255	; 0xff
   156d8:	add	r4, r4, #256	; 0x100
   156dc:	cmp	r5, r4
   156e0:	ble	157fc <ReadUInt8Data+0xf9c>
   156e4:	sub	r5, r5, r4
   156e8:	ldr	r3, [r7]
   156ec:	mov	r2, r5
   156f0:	ldr	r1, [sp]
   156f4:	add	r0, sp, #24
   156f8:	bl	1520 <fread@plt>
   156fc:	ldr	r3, [sp, #8]
   15700:	add	r6, r3, r0
   15704:	cmp	r5, #0
   15708:	ble	157fc <ReadUInt8Data+0xf9c>
   1570c:	ldr	r3, [sp, #4]
   15710:	add	r2, r3, r4
   15714:	add	r3, r2, r5
   15718:	ldrh	r1, [r9, #2]!
   1571c:	strb	r1, [r2], #1
   15720:	cmp	r2, r3
   15724:	bne	15718 <ReadUInt8Data+0xeb8>
   15728:	b	157fc <ReadUInt8Data+0xf9c>
   1572c:	ldr	r3, [r7]
   15730:	mov	r2, r5
   15734:	ldr	r1, [sp]
   15738:	add	r0, sp, #24
   1573c:	bl	1520 <fread@plt>
   15740:	mov	r6, r0
   15744:	cmp	r5, #0
   15748:	ble	157fc <ReadUInt8Data+0xf9c>
   1574c:	add	r1, sp, #22
   15750:	ldr	r0, [sp, #4]
   15754:	sub	r3, r0, #1
   15758:	sub	r2, r5, #1
   1575c:	add	r2, r0, r2
   15760:	ldrh	r0, [r1, #2]!
   15764:	strb	r0, [r3, #1]!
   15768:	cmp	r3, r2
   1576c:	bne	15760 <ReadUInt8Data+0xf00>
   15770:	b	157fc <ReadUInt8Data+0xf9c>
   15774:	cmp	r5, #256	; 0x100
   15778:	ble	15824 <ReadUInt8Data+0xfc4>
   1577c:	ldr	r3, [sp, #4]
   15780:	sub	r8, r3, #1
   15784:	sub	r2, r5, #256	; 0x100
   15788:	sub	r2, r2, #1
   1578c:	str	r2, [sp, #12]
   15790:	orr	fp, r2, #255	; 0xff
   15794:	add	fp, fp, r3
   15798:	mov	r6, #0
   1579c:	add	sl, sp, #24
   157a0:	add	r4, sl, #255	; 0xff
   157a4:	ldr	r3, [r7]
   157a8:	mov	r2, #256	; 0x100
   157ac:	ldr	r1, [sp]
   157b0:	mov	r0, sl
   157b4:	bl	1520 <fread@plt>
   157b8:	add	r6, r6, r0
   157bc:	str	r6, [sp, #8]
   157c0:	sub	r9, sl, #1
   157c4:	mov	r2, r8
   157c8:	mov	r3, r9
   157cc:	ldrb	r1, [r3, #1]!
   157d0:	strb	r1, [r2, #1]!
   157d4:	cmp	r3, r4
   157d8:	bne	157cc <ReadUInt8Data+0xf6c>
   157dc:	add	r8, r8, #256	; 0x100
   157e0:	cmp	r8, fp
   157e4:	bne	157a4 <ReadUInt8Data+0xf44>
   157e8:	ldr	r3, [sp, #12]
   157ec:	bic	r4, r3, #255	; 0xff
   157f0:	add	r4, r4, #256	; 0x100
   157f4:	cmp	r5, r4
   157f8:	bgt	1586c <ReadUInt8Data+0x100c>
   157fc:	ldr	r3, [sp]
   15800:	mul	r0, r3, r6
   15804:	add	sp, sp, #2064	; 0x810
   15808:	add	sp, sp, #12
   1580c:	ldrd	r4, [sp]
   15810:	ldrd	r6, [sp, #8]
   15814:	ldrd	r8, [sp, #16]
   15818:	ldrd	sl, [sp, #24]
   1581c:	add	sp, sp, #32
   15820:	pop	{pc}		; (ldr pc, [sp], #4)
   15824:	ldr	r3, [r7]
   15828:	mov	r2, r5
   1582c:	ldr	r1, [sp]
   15830:	add	r0, sp, #24
   15834:	bl	1520 <fread@plt>
   15838:	mov	r6, r0
   1583c:	cmp	r5, #0
   15840:	ble	157fc <ReadUInt8Data+0xf9c>
   15844:	add	r2, sp, #23
   15848:	ldr	r1, [sp, #4]
   1584c:	sub	r3, r1, #1
   15850:	sub	r0, r5, #1
   15854:	add	r0, r1, r0
   15858:	ldrb	r1, [r2, #1]!
   1585c:	strb	r1, [r3, #1]!
   15860:	cmp	r3, r0
   15864:	bne	15858 <ReadUInt8Data+0xff8>
   15868:	b	157fc <ReadUInt8Data+0xf9c>
   1586c:	sub	r5, r5, r4
   15870:	ldr	r3, [r7]
   15874:	mov	r2, r5
   15878:	ldr	r1, [sp]
   1587c:	add	r0, sp, #24
   15880:	bl	1520 <fread@plt>
   15884:	ldr	r3, [sp, #8]
   15888:	add	r6, r3, r0
   1588c:	cmp	r5, #0
   15890:	ble	157fc <ReadUInt8Data+0xf9c>
   15894:	ldr	r3, [sp, #4]
   15898:	add	r2, r3, r4
   1589c:	add	r3, r2, r5
   158a0:	ldrb	r1, [r9, #1]!
   158a4:	strb	r1, [r2], #1
   158a8:	cmp	r2, r3
   158ac:	bne	158a0 <ReadUInt8Data+0x1040>
   158b0:	b	157fc <ReadUInt8Data+0xf9c>
   158b4:	cmp	r5, #256	; 0x100
   158b8:	ble	15984 <ReadUInt8Data+0x1124>
   158bc:	ldr	r3, [sp, #4]
   158c0:	sub	r8, r3, #1
   158c4:	sub	r2, r5, #256	; 0x100
   158c8:	sub	r2, r2, #1
   158cc:	str	r2, [sp, #12]
   158d0:	orr	fp, r2, #255	; 0xff
   158d4:	add	fp, fp, r3
   158d8:	mov	r6, #0
   158dc:	add	sl, sp, #24
   158e0:	add	r4, sl, #255	; 0xff
   158e4:	ldr	r3, [r7]
   158e8:	mov	r2, #256	; 0x100
   158ec:	ldr	r1, [sp]
   158f0:	mov	r0, sl
   158f4:	bl	1520 <fread@plt>
   158f8:	add	r6, r6, r0
   158fc:	str	r6, [sp, #8]
   15900:	sub	r9, sl, #1
   15904:	mov	r2, r8
   15908:	mov	r3, r9
   1590c:	ldrb	r1, [r3, #1]!
   15910:	strb	r1, [r2, #1]!
   15914:	cmp	r3, r4
   15918:	bne	1590c <ReadUInt8Data+0x10ac>
   1591c:	add	r8, r8, #256	; 0x100
   15920:	cmp	r8, fp
   15924:	bne	158e4 <ReadUInt8Data+0x1084>
   15928:	ldr	r3, [sp, #12]
   1592c:	bic	r4, r3, #255	; 0xff
   15930:	add	r4, r4, #256	; 0x100
   15934:	cmp	r5, r4
   15938:	ble	157fc <ReadUInt8Data+0xf9c>
   1593c:	sub	r5, r5, r4
   15940:	ldr	r3, [r7]
   15944:	mov	r2, r5
   15948:	ldr	r1, [sp]
   1594c:	add	r0, sp, #24
   15950:	bl	1520 <fread@plt>
   15954:	ldr	r3, [sp, #8]
   15958:	add	r6, r3, r0
   1595c:	cmp	r5, #0
   15960:	ble	157fc <ReadUInt8Data+0xf9c>
   15964:	ldr	r3, [sp, #4]
   15968:	add	r2, r3, r4
   1596c:	add	r3, r2, r5
   15970:	ldrb	r1, [r9, #1]!
   15974:	strb	r1, [r2], #1
   15978:	cmp	r2, r3
   1597c:	bne	15970 <ReadUInt8Data+0x1110>
   15980:	b	157fc <ReadUInt8Data+0xf9c>
   15984:	ldr	r3, [r7]
   15988:	mov	r2, r5
   1598c:	ldr	r1, [sp]
   15990:	add	r0, sp, #24
   15994:	bl	1520 <fread@plt>
   15998:	mov	r6, r0
   1599c:	cmp	r5, #0
   159a0:	ble	157fc <ReadUInt8Data+0xf9c>
   159a4:	add	r2, sp, #23
   159a8:	ldr	r1, [sp, #4]
   159ac:	sub	r3, r1, #1
   159b0:	sub	r0, r5, #1
   159b4:	add	r0, r1, r0
   159b8:	ldrb	r1, [r2, #1]!
   159bc:	strb	r1, [r3, #1]!
   159c0:	cmp	r3, r0
   159c4:	bne	159b8 <ReadUInt8Data+0x1158>
   159c8:	b	157fc <ReadUInt8Data+0xf9c>
   159cc:	cmp	r4, #12
   159d0:	beq	15ad8 <ReadUInt8Data+0x1278>
   159d4:	cmp	r4, #13
   159d8:	movne	r6, #0
   159dc:	bne	157fc <ReadUInt8Data+0xf9c>
   159e0:	ldr	r6, [r7, #20]
   159e4:	cmp	r6, #0
   159e8:	beq	15d84 <ReadUInt8Data+0x1524>
   159ec:	cmp	r5, #256	; 0x100
   159f0:	ble	15d34 <ReadUInt8Data+0x14d4>
   159f4:	ldr	r2, [sp, #4]
   159f8:	sub	fp, r2, #1
   159fc:	sub	sl, r5, #256	; 0x100
   15a00:	sub	sl, sl, #1
   15a04:	orr	r3, sl, #255	; 0xff
   15a08:	add	r3, r3, r2
   15a0c:	str	r3, [sp, #12]
   15a10:	mov	r6, #0
   15a14:	add	r3, sp, #24
   15a18:	str	r3, [sp, #20]
   15a1c:	add	r9, sp, #2064	; 0x810
   15a20:	add	r9, r9, #8
   15a24:	ldr	r3, [r7]
   15a28:	mov	r2, #256	; 0x100
   15a2c:	ldr	r1, [sp]
   15a30:	ldr	r4, [sp, #20]
   15a34:	mov	r0, r4
   15a38:	bl	1520 <fread@plt>
   15a3c:	add	r6, r6, r0
   15a40:	str	r6, [sp, #8]
   15a44:	str	r4, [sp, #16]
   15a48:	mov	r8, fp
   15a4c:	mov	r0, r4
   15a50:	bl	1848 <Mat_uint64Swap>
   15a54:	strb	r0, [r8, #1]!
   15a58:	add	r4, r4, #8
   15a5c:	cmp	r9, r4
   15a60:	bne	15a4c <ReadUInt8Data+0x11ec>
   15a64:	add	fp, fp, #256	; 0x100
   15a68:	ldr	r3, [sp, #12]
   15a6c:	cmp	fp, r3
   15a70:	bne	15a24 <ReadUInt8Data+0x11c4>
   15a74:	bic	r4, sl, #255	; 0xff
   15a78:	add	r4, r4, #256	; 0x100
   15a7c:	cmp	r5, r4
   15a80:	ble	157fc <ReadUInt8Data+0xf9c>
   15a84:	sub	r5, r5, r4
   15a88:	ldr	r3, [r7]
   15a8c:	mov	r2, r5
   15a90:	ldr	r1, [sp]
   15a94:	add	r0, sp, #24
   15a98:	bl	1520 <fread@plt>
   15a9c:	ldr	r3, [sp, #8]
   15aa0:	add	r6, r3, r0
   15aa4:	cmp	r5, #0
   15aa8:	ble	157fc <ReadUInt8Data+0xf9c>
   15aac:	ldr	r3, [sp, #4]
   15ab0:	add	r7, r3, r4
   15ab4:	add	r4, r7, r5
   15ab8:	ldr	r5, [sp, #16]
   15abc:	mov	r0, r5
   15ac0:	bl	1848 <Mat_uint64Swap>
   15ac4:	strb	r0, [r7], #1
   15ac8:	add	r5, r5, #8
   15acc:	cmp	r4, r7
   15ad0:	bne	15abc <ReadUInt8Data+0x125c>
   15ad4:	b	157fc <ReadUInt8Data+0xf9c>
   15ad8:	ldr	r6, [r7, #20]
   15adc:	cmp	r6, #0
   15ae0:	beq	15c20 <ReadUInt8Data+0x13c0>
   15ae4:	cmp	r5, #256	; 0x100
   15ae8:	ble	15bd0 <ReadUInt8Data+0x1370>
   15aec:	ldr	r2, [sp, #4]
   15af0:	sub	fp, r2, #1
   15af4:	sub	sl, r5, #256	; 0x100
   15af8:	sub	sl, sl, #1
   15afc:	orr	r3, sl, #255	; 0xff
   15b00:	add	r3, r3, r2
   15b04:	str	r3, [sp, #16]
   15b08:	mov	r6, #0
   15b0c:	add	r3, sp, #24
   15b10:	str	r3, [sp, #20]
   15b14:	add	r9, sp, #2064	; 0x810
   15b18:	add	r9, r9, #8
   15b1c:	ldr	r3, [r7]
   15b20:	mov	r2, #256	; 0x100
   15b24:	ldr	r1, [sp]
   15b28:	ldr	r4, [sp, #20]
   15b2c:	mov	r0, r4
   15b30:	bl	1520 <fread@plt>
   15b34:	add	r6, r6, r0
   15b38:	str	r6, [sp, #8]
   15b3c:	str	r4, [sp, #12]
   15b40:	mov	r8, fp
   15b44:	mov	r0, r4
   15b48:	bl	17ec <Mat_int64Swap>
   15b4c:	strb	r0, [r8, #1]!
   15b50:	add	r4, r4, #8
   15b54:	cmp	r4, r9
   15b58:	bne	15b44 <ReadUInt8Data+0x12e4>
   15b5c:	add	fp, fp, #256	; 0x100
   15b60:	ldr	r3, [sp, #16]
   15b64:	cmp	r3, fp
   15b68:	bne	15b1c <ReadUInt8Data+0x12bc>
   15b6c:	bic	r4, sl, #255	; 0xff
   15b70:	add	r4, r4, #256	; 0x100
   15b74:	cmp	r5, r4
   15b78:	ble	157fc <ReadUInt8Data+0xf9c>
   15b7c:	sub	r5, r5, r4
   15b80:	ldr	r3, [r7]
   15b84:	mov	r2, r5
   15b88:	ldr	r1, [sp]
   15b8c:	add	r0, sp, #24
   15b90:	bl	1520 <fread@plt>
   15b94:	ldr	r3, [sp, #8]
   15b98:	add	r6, r3, r0
   15b9c:	cmp	r5, #0
   15ba0:	ble	157fc <ReadUInt8Data+0xf9c>
   15ba4:	ldr	r3, [sp, #4]
   15ba8:	add	r7, r3, r4
   15bac:	add	r4, r7, r5
   15bb0:	ldr	r5, [sp, #12]
   15bb4:	mov	r0, r5
   15bb8:	bl	17ec <Mat_int64Swap>
   15bbc:	strb	r0, [r7], #1
   15bc0:	add	r5, r5, #8
   15bc4:	cmp	r7, r4
   15bc8:	bne	15bb4 <ReadUInt8Data+0x1354>
   15bcc:	b	157fc <ReadUInt8Data+0xf9c>
   15bd0:	ldr	r3, [r7]
   15bd4:	mov	r2, r5
   15bd8:	ldr	r1, [sp]
   15bdc:	add	r0, sp, #24
   15be0:	bl	1520 <fread@plt>
   15be4:	mov	r6, r0
   15be8:	cmp	r5, #0
   15bec:	ble	157fc <ReadUInt8Data+0xf9c>
   15bf0:	add	r8, sp, #24
   15bf4:	ldr	r3, [sp, #4]
   15bf8:	sub	r7, r3, #1
   15bfc:	sub	r4, r5, #1
   15c00:	add	r4, r3, r4
   15c04:	mov	r0, r8
   15c08:	bl	17ec <Mat_int64Swap>
   15c0c:	strb	r0, [r7, #1]!
   15c10:	add	r8, r8, #8
   15c14:	cmp	r4, r7
   15c18:	bne	15c04 <ReadUInt8Data+0x13a4>
   15c1c:	b	157fc <ReadUInt8Data+0xf9c>
   15c20:	cmp	r5, #256	; 0x100
   15c24:	ble	15cec <ReadUInt8Data+0x148c>
   15c28:	ldr	r2, [sp, #4]
   15c2c:	sub	r9, r2, #1
   15c30:	sub	r8, r5, #256	; 0x100
   15c34:	sub	r8, r8, #1
   15c38:	orr	r3, r8, #255	; 0xff
   15c3c:	add	r3, r3, r2
   15c40:	str	r3, [sp, #12]
   15c44:	add	fp, sp, #24
   15c48:	add	r4, sp, #2064	; 0x810
   15c4c:	ldr	r3, [r7]
   15c50:	mov	r2, #256	; 0x100
   15c54:	ldr	r1, [sp]
   15c58:	mov	r0, fp
   15c5c:	bl	1520 <fread@plt>
   15c60:	add	r6, r6, r0
   15c64:	str	r6, [sp, #8]
   15c68:	sub	sl, fp, #8
   15c6c:	mov	r2, r9
   15c70:	mov	r3, sl
   15c74:	ldr	r1, [r3, #8]!
   15c78:	strb	r1, [r2, #1]!
   15c7c:	cmp	r4, r3
   15c80:	bne	15c74 <ReadUInt8Data+0x1414>
   15c84:	add	r9, r9, #256	; 0x100
   15c88:	ldr	r3, [sp, #12]
   15c8c:	cmp	r3, r9
   15c90:	bne	15c4c <ReadUInt8Data+0x13ec>
   15c94:	bic	r4, r8, #255	; 0xff
   15c98:	add	r4, r4, #256	; 0x100
   15c9c:	cmp	r5, r4
   15ca0:	ble	157fc <ReadUInt8Data+0xf9c>
   15ca4:	sub	r5, r5, r4
   15ca8:	ldr	r3, [r7]
   15cac:	mov	r2, r5
   15cb0:	ldr	r1, [sp]
   15cb4:	add	r0, sp, #24
   15cb8:	bl	1520 <fread@plt>
   15cbc:	ldr	r3, [sp, #8]
   15cc0:	add	r6, r3, r0
   15cc4:	cmp	r5, #0
   15cc8:	ble	157fc <ReadUInt8Data+0xf9c>
   15ccc:	ldr	r3, [sp, #4]
   15cd0:	add	r2, r3, r4
   15cd4:	add	r3, r2, r5
   15cd8:	ldr	r1, [sl, #8]!
   15cdc:	strb	r1, [r2], #1
   15ce0:	cmp	r2, r3
   15ce4:	bne	15cd8 <ReadUInt8Data+0x1478>
   15ce8:	b	157fc <ReadUInt8Data+0xf9c>
   15cec:	ldr	r3, [r7]
   15cf0:	mov	r2, r5
   15cf4:	ldr	r1, [sp]
   15cf8:	add	r0, sp, #24
   15cfc:	bl	1520 <fread@plt>
   15d00:	mov	r6, r0
   15d04:	cmp	r5, #0
   15d08:	ble	157fc <ReadUInt8Data+0xf9c>
   15d0c:	add	r1, sp, #16
   15d10:	ldr	r0, [sp, #4]
   15d14:	sub	r2, r0, #1
   15d18:	sub	r3, r5, #1
   15d1c:	add	r3, r0, r3
   15d20:	ldr	r0, [r1, #8]!
   15d24:	strb	r0, [r2, #1]!
   15d28:	cmp	r3, r2
   15d2c:	bne	15d20 <ReadUInt8Data+0x14c0>
   15d30:	b	157fc <ReadUInt8Data+0xf9c>
   15d34:	ldr	r3, [r7]
   15d38:	mov	r2, r5
   15d3c:	ldr	r1, [sp]
   15d40:	add	r0, sp, #24
   15d44:	bl	1520 <fread@plt>
   15d48:	mov	r6, r0
   15d4c:	cmp	r5, #0
   15d50:	ble	157fc <ReadUInt8Data+0xf9c>
   15d54:	add	r8, sp, #24
   15d58:	ldr	r3, [sp, #4]
   15d5c:	sub	r7, r3, #1
   15d60:	sub	r4, r5, #1
   15d64:	add	r4, r3, r4
   15d68:	mov	r0, r8
   15d6c:	bl	1848 <Mat_uint64Swap>
   15d70:	strb	r0, [r7, #1]!
   15d74:	add	r8, r8, #8
   15d78:	cmp	r4, r7
   15d7c:	bne	15d68 <ReadUInt8Data+0x1508>
   15d80:	b	157fc <ReadUInt8Data+0xf9c>
   15d84:	cmp	r5, #256	; 0x100
   15d88:	ble	15e50 <ReadUInt8Data+0x15f0>
   15d8c:	ldr	r2, [sp, #4]
   15d90:	sub	r9, r2, #1
   15d94:	sub	r8, r5, #256	; 0x100
   15d98:	sub	r8, r8, #1
   15d9c:	orr	r3, r8, #255	; 0xff
   15da0:	add	r3, r3, r2
   15da4:	str	r3, [sp, #12]
   15da8:	add	fp, sp, #24
   15dac:	add	r4, sp, #2064	; 0x810
   15db0:	ldr	r3, [r7]
   15db4:	mov	r2, #256	; 0x100
   15db8:	ldr	r1, [sp]
   15dbc:	mov	r0, fp
   15dc0:	bl	1520 <fread@plt>
   15dc4:	add	r6, r6, r0
   15dc8:	str	r6, [sp, #8]
   15dcc:	sub	sl, fp, #8
   15dd0:	mov	r2, r9
   15dd4:	mov	r3, sl
   15dd8:	ldr	r1, [r3, #8]!
   15ddc:	strb	r1, [r2, #1]!
   15de0:	cmp	r3, r4
   15de4:	bne	15dd8 <ReadUInt8Data+0x1578>
   15de8:	add	r9, r9, #256	; 0x100
   15dec:	ldr	r3, [sp, #12]
   15df0:	cmp	r3, r9
   15df4:	bne	15db0 <ReadUInt8Data+0x1550>
   15df8:	bic	r4, r8, #255	; 0xff
   15dfc:	add	r4, r4, #256	; 0x100
   15e00:	cmp	r5, r4
   15e04:	ble	157fc <ReadUInt8Data+0xf9c>
   15e08:	sub	r5, r5, r4
   15e0c:	ldr	r3, [r7]
   15e10:	mov	r2, r5
   15e14:	ldr	r1, [sp]
   15e18:	add	r0, sp, #24
   15e1c:	bl	1520 <fread@plt>
   15e20:	ldr	r3, [sp, #8]
   15e24:	add	r6, r3, r0
   15e28:	cmp	r5, #0
   15e2c:	ble	157fc <ReadUInt8Data+0xf9c>
   15e30:	ldr	r3, [sp, #4]
   15e34:	add	r2, r3, r4
   15e38:	add	r3, r2, r5
   15e3c:	ldr	r1, [sl, #8]!
   15e40:	strb	r1, [r2], #1
   15e44:	cmp	r2, r3
   15e48:	bne	15e3c <ReadUInt8Data+0x15dc>
   15e4c:	b	157fc <ReadUInt8Data+0xf9c>
   15e50:	ldr	r3, [r7]
   15e54:	mov	r2, r5
   15e58:	ldr	r1, [sp]
   15e5c:	add	r0, sp, #24
   15e60:	bl	1520 <fread@plt>
   15e64:	mov	r6, r0
   15e68:	cmp	r5, #0
   15e6c:	ble	157fc <ReadUInt8Data+0xf9c>
   15e70:	add	r1, sp, #16
   15e74:	ldr	r0, [sp, #4]
   15e78:	sub	r2, r0, #1
   15e7c:	sub	r3, r5, #1
   15e80:	add	r3, r0, r3
   15e84:	ldr	r0, [r1, #8]!
   15e88:	strb	r0, [r2, #1]!
   15e8c:	cmp	r2, r3
   15e90:	bne	15e84 <ReadUInt8Data+0x1624>
   15e94:	b	157fc <ReadUInt8Data+0xf9c>
   15e98:	mov	r0, #0
   15e9c:	bx	lr

00015ea0 <ReadCompressedUInt8Data>:
   15ea0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15ea4:	strd	r6, [sp, #8]
   15ea8:	strd	r8, [sp, #16]
   15eac:	str	sl, [sp, #24]
   15eb0:	str	lr, [sp, #28]
   15eb4:	sub	sp, sp, #8
   15eb8:	ldr	r7, [sp, #40]	; 0x28
   15ebc:	mov	r9, r2
   15ec0:	mov	r6, r1
   15ec4:	clz	r1, r1
   15ec8:	lsr	r1, r1, #5
   15ecc:	cmp	r2, #0
   15ed0:	movne	r2, r1
   15ed4:	moveq	r2, #1
   15ed8:	cmp	r0, #0
   15edc:	moveq	r2, #1
   15ee0:	cmp	r2, #0
   15ee4:	movne	r0, #0
   15ee8:	beq	15f08 <ReadCompressedUInt8Data+0x68>
   15eec:	add	sp, sp, #8
   15ef0:	ldrd	r4, [sp]
   15ef4:	ldrd	r6, [sp, #8]
   15ef8:	ldrd	r8, [sp, #16]
   15efc:	ldr	sl, [sp, #24]
   15f00:	add	sp, sp, #28
   15f04:	pop	{pc}		; (ldr pc, [sp], #4)
   15f08:	mov	r5, r0
   15f0c:	mov	r8, r3
   15f10:	mov	r0, r3
   15f14:	bl	1598 <Mat_SizeOf@plt>
   15f18:	mov	r4, r0
   15f1c:	sub	r3, r8, #1
   15f20:	cmp	r3, #8
   15f24:	addls	pc, pc, r3, lsl #2
   15f28:	b	16354 <ReadCompressedUInt8Data+0x4b4>
   15f2c:	b	15f94 <ReadCompressedUInt8Data+0xf4>
   15f30:	b	15f50 <ReadCompressedUInt8Data+0xb0>
   15f34:	b	16234 <ReadCompressedUInt8Data+0x394>
   15f38:	b	162c4 <ReadCompressedUInt8Data+0x424>
   15f3c:	b	16114 <ReadCompressedUInt8Data+0x274>
   15f40:	b	161a4 <ReadCompressedUInt8Data+0x304>
   15f44:	b	16074 <ReadCompressedUInt8Data+0x1d4>
   15f48:	b	16354 <ReadCompressedUInt8Data+0x4b4>
   15f4c:	b	15fd4 <ReadCompressedUInt8Data+0x134>
   15f50:	cmp	r7, #0
   15f54:	subgt	r8, r9, #1
   15f58:	subgt	ip, r7, #1
   15f5c:	addgt	r9, r9, ip
   15f60:	movgt	sl, sp
   15f64:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   15f68:	mov	r3, r4
   15f6c:	mov	r2, sl
   15f70:	mov	r1, r6
   15f74:	mov	r0, r5
   15f78:	bl	333c <InflateData>
   15f7c:	ldrb	r3, [sp]
   15f80:	strb	r3, [r8, #1]!
   15f84:	cmp	r8, r9
   15f88:	bne	15f68 <ReadCompressedUInt8Data+0xc8>
   15f8c:	mul	r0, r4, r7
   15f90:	b	15eec <ReadCompressedUInt8Data+0x4c>
   15f94:	cmp	r7, #0
   15f98:	subgt	r8, r9, #1
   15f9c:	subgt	ip, r7, #1
   15fa0:	addgt	r9, r9, ip
   15fa4:	movgt	sl, sp
   15fa8:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   15fac:	mov	r3, r4
   15fb0:	mov	r2, sl
   15fb4:	mov	r1, r6
   15fb8:	mov	r0, r5
   15fbc:	bl	333c <InflateData>
   15fc0:	ldrb	r3, [sp]
   15fc4:	strb	r3, [r8, #1]!
   15fc8:	cmp	r9, r8
   15fcc:	bne	15fac <ReadCompressedUInt8Data+0x10c>
   15fd0:	b	15f8c <ReadCompressedUInt8Data+0xec>
   15fd4:	ldr	r3, [r5, #20]
   15fd8:	cmp	r3, #0
   15fdc:	bne	16028 <ReadCompressedUInt8Data+0x188>
   15fe0:	cmp	r7, #0
   15fe4:	subgt	r8, r9, #1
   15fe8:	subgt	ip, r7, #1
   15fec:	addgt	r9, r9, ip
   15ff0:	movgt	sl, sp
   15ff4:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   15ff8:	mov	r3, r4
   15ffc:	mov	r2, sl
   16000:	mov	r1, r6
   16004:	mov	r0, r5
   16008:	bl	333c <InflateData>
   1600c:	vldr	d7, [sp]
   16010:	vcvt.u32.f64	s15, d7
   16014:	vmov	r3, s15
   16018:	strb	r3, [r8, #1]!
   1601c:	cmp	r8, r9
   16020:	bne	15ff8 <ReadCompressedUInt8Data+0x158>
   16024:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16028:	cmp	r7, #0
   1602c:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16030:	sub	r8, r9, #1
   16034:	sub	ip, r7, #1
   16038:	add	r9, r9, ip
   1603c:	mov	sl, sp
   16040:	mov	r3, r4
   16044:	mov	r2, sl
   16048:	mov	r1, r6
   1604c:	mov	r0, r5
   16050:	bl	333c <InflateData>
   16054:	mov	r0, sl
   16058:	bl	1974 <Mat_doubleSwap>
   1605c:	vcvt.u32.f64	s15, d0
   16060:	vmov	r3, s15
   16064:	strb	r3, [r8, #1]!
   16068:	cmp	r8, r9
   1606c:	bne	16040 <ReadCompressedUInt8Data+0x1a0>
   16070:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16074:	ldr	r3, [r5, #20]
   16078:	cmp	r3, #0
   1607c:	bne	160c8 <ReadCompressedUInt8Data+0x228>
   16080:	cmp	r7, #0
   16084:	subgt	r8, r9, #1
   16088:	subgt	ip, r7, #1
   1608c:	addgt	r9, r9, ip
   16090:	movgt	sl, sp
   16094:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16098:	mov	r3, r4
   1609c:	mov	r2, sl
   160a0:	mov	r1, r6
   160a4:	mov	r0, r5
   160a8:	bl	333c <InflateData>
   160ac:	vldr	s15, [sp]
   160b0:	vcvt.u32.f32	s15, s15
   160b4:	vmov	r3, s15
   160b8:	strb	r3, [r8, #1]!
   160bc:	cmp	r8, r9
   160c0:	bne	16098 <ReadCompressedUInt8Data+0x1f8>
   160c4:	b	15f8c <ReadCompressedUInt8Data+0xec>
   160c8:	cmp	r7, #0
   160cc:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   160d0:	sub	r8, r9, #1
   160d4:	sub	ip, r7, #1
   160d8:	add	r9, r9, ip
   160dc:	mov	sl, sp
   160e0:	mov	r3, r4
   160e4:	mov	r2, sl
   160e8:	mov	r1, r6
   160ec:	mov	r0, r5
   160f0:	bl	333c <InflateData>
   160f4:	mov	r0, sl
   160f8:	bl	1944 <Mat_floatSwap>
   160fc:	vcvt.u32.f32	s15, s0
   16100:	vmov	r3, s15
   16104:	strb	r3, [r8, #1]!
   16108:	cmp	r8, r9
   1610c:	bne	160e0 <ReadCompressedUInt8Data+0x240>
   16110:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16114:	ldr	r3, [r5, #20]
   16118:	cmp	r3, #0
   1611c:	bne	16160 <ReadCompressedUInt8Data+0x2c0>
   16120:	cmp	r7, #0
   16124:	subgt	r8, r9, #1
   16128:	subgt	ip, r7, #1
   1612c:	addgt	r9, r9, ip
   16130:	movgt	sl, sp
   16134:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16138:	mov	r3, r4
   1613c:	mov	r2, sl
   16140:	mov	r1, r6
   16144:	mov	r0, r5
   16148:	bl	333c <InflateData>
   1614c:	ldr	r3, [sp]
   16150:	strb	r3, [r8, #1]!
   16154:	cmp	r8, r9
   16158:	bne	16138 <ReadCompressedUInt8Data+0x298>
   1615c:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16160:	cmp	r7, #0
   16164:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16168:	sub	r8, r9, #1
   1616c:	sub	ip, r7, #1
   16170:	add	r9, r9, ip
   16174:	mov	sl, sp
   16178:	mov	r3, r4
   1617c:	mov	r2, sl
   16180:	mov	r1, r6
   16184:	mov	r0, r5
   16188:	bl	333c <InflateData>
   1618c:	mov	r0, sl
   16190:	bl	18a4 <Mat_int32Swap>
   16194:	strb	r0, [r8, #1]!
   16198:	cmp	r8, r9
   1619c:	bne	16178 <ReadCompressedUInt8Data+0x2d8>
   161a0:	b	15f8c <ReadCompressedUInt8Data+0xec>
   161a4:	ldr	r3, [r5, #20]
   161a8:	cmp	r3, #0
   161ac:	bne	161f0 <ReadCompressedUInt8Data+0x350>
   161b0:	cmp	r7, #0
   161b4:	subgt	r8, r9, #1
   161b8:	subgt	ip, r7, #1
   161bc:	addgt	r9, r9, ip
   161c0:	movgt	sl, sp
   161c4:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   161c8:	mov	r3, r4
   161cc:	mov	r2, sl
   161d0:	mov	r1, r6
   161d4:	mov	r0, r5
   161d8:	bl	333c <InflateData>
   161dc:	ldr	r3, [sp]
   161e0:	strb	r3, [r8, #1]!
   161e4:	cmp	r8, r9
   161e8:	bne	161c8 <ReadCompressedUInt8Data+0x328>
   161ec:	b	15f8c <ReadCompressedUInt8Data+0xec>
   161f0:	cmp	r7, #0
   161f4:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   161f8:	sub	r8, r9, #1
   161fc:	sub	ip, r7, #1
   16200:	add	r9, r9, ip
   16204:	mov	sl, sp
   16208:	mov	r3, r4
   1620c:	mov	r2, sl
   16210:	mov	r1, r6
   16214:	mov	r0, r5
   16218:	bl	333c <InflateData>
   1621c:	mov	r0, sl
   16220:	bl	18d4 <Mat_uint32Swap>
   16224:	strb	r0, [r8, #1]!
   16228:	cmp	r8, r9
   1622c:	bne	16208 <ReadCompressedUInt8Data+0x368>
   16230:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16234:	ldr	r3, [r5, #20]
   16238:	cmp	r3, #0
   1623c:	bne	16280 <ReadCompressedUInt8Data+0x3e0>
   16240:	cmp	r7, #0
   16244:	subgt	r8, r9, #1
   16248:	subgt	ip, r7, #1
   1624c:	addgt	r9, r9, ip
   16250:	movgt	sl, sp
   16254:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16258:	mov	r3, r4
   1625c:	mov	r2, sl
   16260:	mov	r1, r6
   16264:	mov	r0, r5
   16268:	bl	333c <InflateData>
   1626c:	ldrh	r3, [sp]
   16270:	strb	r3, [r8, #1]!
   16274:	cmp	r8, r9
   16278:	bne	16258 <ReadCompressedUInt8Data+0x3b8>
   1627c:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16280:	cmp	r7, #0
   16284:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16288:	sub	r8, r9, #1
   1628c:	sub	ip, r7, #1
   16290:	add	r9, r9, ip
   16294:	mov	sl, sp
   16298:	mov	r3, r4
   1629c:	mov	r2, sl
   162a0:	mov	r1, r6
   162a4:	mov	r0, r5
   162a8:	bl	333c <InflateData>
   162ac:	mov	r0, sl
   162b0:	bl	1904 <Mat_int16Swap>
   162b4:	strb	r0, [r8, #1]!
   162b8:	cmp	r9, r8
   162bc:	bne	16298 <ReadCompressedUInt8Data+0x3f8>
   162c0:	b	15f8c <ReadCompressedUInt8Data+0xec>
   162c4:	ldr	r3, [r5, #20]
   162c8:	cmp	r3, #0
   162cc:	bne	16310 <ReadCompressedUInt8Data+0x470>
   162d0:	cmp	r7, #0
   162d4:	subgt	r8, r9, #1
   162d8:	subgt	ip, r7, #1
   162dc:	addgt	r9, r9, ip
   162e0:	movgt	sl, sp
   162e4:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   162e8:	mov	r3, r4
   162ec:	mov	r2, sl
   162f0:	mov	r1, r6
   162f4:	mov	r0, r5
   162f8:	bl	333c <InflateData>
   162fc:	ldrh	r3, [sp]
   16300:	strb	r3, [r8, #1]!
   16304:	cmp	r8, r9
   16308:	bne	162e8 <ReadCompressedUInt8Data+0x448>
   1630c:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16310:	cmp	r7, #0
   16314:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16318:	sub	r8, r9, #1
   1631c:	sub	ip, r7, #1
   16320:	add	r9, r9, ip
   16324:	mov	sl, sp
   16328:	mov	r3, r4
   1632c:	mov	r2, sl
   16330:	mov	r1, r6
   16334:	mov	r0, r5
   16338:	bl	333c <InflateData>
   1633c:	mov	r0, sl
   16340:	bl	1924 <Mat_uint16Swap>
   16344:	strb	r0, [r8, #1]!
   16348:	cmp	r8, r9
   1634c:	bne	16328 <ReadCompressedUInt8Data+0x488>
   16350:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16354:	cmp	r8, #12
   16358:	beq	163b0 <ReadCompressedUInt8Data+0x510>
   1635c:	cmp	r8, #13
   16360:	bne	15f8c <ReadCompressedUInt8Data+0xec>
   16364:	ldr	r3, [r5, #20]
   16368:	cmp	r3, #0
   1636c:	bne	16440 <ReadCompressedUInt8Data+0x5a0>
   16370:	cmp	r7, #0
   16374:	subgt	r8, r9, #1
   16378:	subgt	r3, r7, #1
   1637c:	addgt	r9, r9, r3
   16380:	movgt	sl, sp
   16384:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16388:	mov	r3, r4
   1638c:	mov	r2, sl
   16390:	mov	r1, r6
   16394:	mov	r0, r5
   16398:	bl	333c <InflateData>
   1639c:	ldr	r3, [sp]
   163a0:	strb	r3, [r8, #1]!
   163a4:	cmp	r9, r8
   163a8:	bne	16388 <ReadCompressedUInt8Data+0x4e8>
   163ac:	b	15f8c <ReadCompressedUInt8Data+0xec>
   163b0:	ldr	r3, [r5, #20]
   163b4:	cmp	r3, #0
   163b8:	bne	163fc <ReadCompressedUInt8Data+0x55c>
   163bc:	cmp	r7, #0
   163c0:	subgt	r8, r9, #1
   163c4:	subgt	r3, r7, #1
   163c8:	addgt	r9, r9, r3
   163cc:	movgt	sl, sp
   163d0:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   163d4:	mov	r3, r4
   163d8:	mov	r2, sl
   163dc:	mov	r1, r6
   163e0:	mov	r0, r5
   163e4:	bl	333c <InflateData>
   163e8:	ldr	r3, [sp]
   163ec:	strb	r3, [r8, #1]!
   163f0:	cmp	r9, r8
   163f4:	bne	163d4 <ReadCompressedUInt8Data+0x534>
   163f8:	b	15f8c <ReadCompressedUInt8Data+0xec>
   163fc:	cmp	r7, #0
   16400:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16404:	sub	r8, r9, #1
   16408:	sub	sl, r7, #1
   1640c:	add	sl, r9, sl
   16410:	mov	r9, sp
   16414:	mov	r3, r4
   16418:	mov	r2, r9
   1641c:	mov	r1, r6
   16420:	mov	r0, r5
   16424:	bl	333c <InflateData>
   16428:	mov	r0, r9
   1642c:	bl	17ec <Mat_int64Swap>
   16430:	strb	r0, [r8, #1]!
   16434:	cmp	r8, sl
   16438:	bne	16414 <ReadCompressedUInt8Data+0x574>
   1643c:	b	15f8c <ReadCompressedUInt8Data+0xec>
   16440:	cmp	r7, #0
   16444:	ble	15f8c <ReadCompressedUInt8Data+0xec>
   16448:	sub	r8, r9, #1
   1644c:	sub	sl, r7, #1
   16450:	add	sl, r9, sl
   16454:	mov	r9, sp
   16458:	mov	r3, r4
   1645c:	mov	r2, r9
   16460:	mov	r1, r6
   16464:	mov	r0, r5
   16468:	bl	333c <InflateData>
   1646c:	mov	r0, r9
   16470:	bl	1848 <Mat_uint64Swap>
   16474:	strb	r0, [r8, #1]!
   16478:	cmp	sl, r8
   1647c:	bne	16458 <ReadCompressedUInt8Data+0x5b8>
   16480:	b	15f8c <ReadCompressedUInt8Data+0xec>

00016484 <ReadCompressedCharData>:
   16484:	cmp	r2, #0
   16488:	cmpne	r0, #0
   1648c:	beq	165b4 <ReadCompressedCharData+0x130>
   16490:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16494:	strd	r6, [sp, #8]
   16498:	str	r8, [sp, #16]
   1649c:	str	lr, [sp, #20]
   164a0:	mov	r6, r0
   164a4:	mov	r5, r2
   164a8:	ldr	r2, [r0]
   164ac:	cmp	r2, #0
   164b0:	moveq	r0, #0
   164b4:	beq	1653c <ReadCompressedCharData+0xb8>
   164b8:	mov	r7, r3
   164bc:	mov	r8, r1
   164c0:	mov	r0, r3
   164c4:	bl	1598 <Mat_SizeOf@plt>
   164c8:	mov	r4, r0
   164cc:	sub	r3, r7, #2
   164d0:	cmp	r3, #15
   164d4:	addls	pc, pc, r3, lsl #2
   164d8:	b	165a0 <ReadCompressedCharData+0x11c>
   164dc:	b	1651c <ReadCompressedCharData+0x98>
   164e0:	b	165a0 <ReadCompressedCharData+0x11c>
   164e4:	b	16550 <ReadCompressedCharData+0xcc>
   164e8:	b	165a0 <ReadCompressedCharData+0x11c>
   164ec:	b	165a0 <ReadCompressedCharData+0x11c>
   164f0:	b	165a0 <ReadCompressedCharData+0x11c>
   164f4:	b	165a0 <ReadCompressedCharData+0x11c>
   164f8:	b	165a0 <ReadCompressedCharData+0x11c>
   164fc:	b	165a0 <ReadCompressedCharData+0x11c>
   16500:	b	165a0 <ReadCompressedCharData+0x11c>
   16504:	b	165a0 <ReadCompressedCharData+0x11c>
   16508:	b	165a0 <ReadCompressedCharData+0x11c>
   1650c:	b	165a0 <ReadCompressedCharData+0x11c>
   16510:	b	165a0 <ReadCompressedCharData+0x11c>
   16514:	b	1651c <ReadCompressedCharData+0x98>
   16518:	b	16550 <ReadCompressedCharData+0xcc>
   1651c:	ldr	r3, [sp, #24]
   16520:	mul	r3, r0, r3
   16524:	mov	r2, r5
   16528:	mov	r1, r8
   1652c:	mov	r0, r6
   16530:	bl	333c <InflateData>
   16534:	ldr	r3, [sp, #24]
   16538:	mul	r0, r4, r3
   1653c:	ldrd	r4, [sp]
   16540:	ldrd	r6, [sp, #8]
   16544:	ldr	r8, [sp, #16]
   16548:	add	sp, sp, #20
   1654c:	pop	{pc}		; (ldr pc, [sp], #4)
   16550:	ldr	r3, [sp, #24]
   16554:	mul	r3, r0, r3
   16558:	mov	r2, r5
   1655c:	mov	r1, r8
   16560:	mov	r0, r6
   16564:	bl	333c <InflateData>
   16568:	ldr	r3, [r6, #20]
   1656c:	cmp	r3, #0
   16570:	beq	16534 <ReadCompressedCharData+0xb0>
   16574:	ldr	r3, [sp, #24]
   16578:	cmp	r3, #0
   1657c:	ble	16534 <ReadCompressedCharData+0xb0>
   16580:	mov	r6, r5
   16584:	add	r5, r5, r3, lsl #1
   16588:	mov	r0, r6
   1658c:	bl	1924 <Mat_uint16Swap>
   16590:	add	r6, r6, #2
   16594:	cmp	r6, r5
   16598:	bne	16588 <ReadCompressedCharData+0x104>
   1659c:	b	16534 <ReadCompressedCharData+0xb0>
   165a0:	mov	r1, r7
   165a4:	ldr	r0, [pc, #16]	; 165bc <ReadCompressedCharData+0x138>
   165a8:	add	r0, pc, r0
   165ac:	bl	1484 <Mat_Warning@plt>
   165b0:	b	16534 <ReadCompressedCharData+0xb0>
   165b4:	mov	r0, #0
   165b8:	bx	lr
   165bc:	.word	0x00038df0

000165c0 <ReadCharData>:
   165c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   165c4:	strd	r6, [sp, #8]
   165c8:	strd	r8, [sp, #16]
   165cc:	str	sl, [sp, #24]
   165d0:	str	lr, [sp, #28]
   165d4:	sub	sp, sp, #8
   165d8:	cmp	r1, #0
   165dc:	cmpne	r0, #0
   165e0:	moveq	r4, #0
   165e4:	beq	1667c <ReadCharData+0xbc>
   165e8:	mov	r5, r0
   165ec:	mov	r7, r1
   165f0:	ldr	r1, [r0]
   165f4:	cmp	r1, #0
   165f8:	moveq	r4, #0
   165fc:	beq	1667c <ReadCharData+0xbc>
   16600:	mov	r6, r3
   16604:	mov	r4, r2
   16608:	mov	r0, r2
   1660c:	bl	1598 <Mat_SizeOf@plt>
   16610:	mov	r9, r0
   16614:	sub	r3, r4, #2
   16618:	cmp	r3, #15
   1661c:	addls	pc, pc, r3, lsl #2
   16620:	b	16748 <ReadCharData+0x188>
   16624:	b	16664 <ReadCharData+0xa4>
   16628:	b	16748 <ReadCharData+0x188>
   1662c:	b	1669c <ReadCharData+0xdc>
   16630:	b	16748 <ReadCharData+0x188>
   16634:	b	16748 <ReadCharData+0x188>
   16638:	b	16748 <ReadCharData+0x188>
   1663c:	b	16748 <ReadCharData+0x188>
   16640:	b	16748 <ReadCharData+0x188>
   16644:	b	16748 <ReadCharData+0x188>
   16648:	b	16748 <ReadCharData+0x188>
   1664c:	b	16748 <ReadCharData+0x188>
   16650:	b	16748 <ReadCharData+0x188>
   16654:	b	16748 <ReadCharData+0x188>
   16658:	b	16748 <ReadCharData+0x188>
   1665c:	b	16664 <ReadCharData+0xa4>
   16660:	b	1669c <ReadCharData+0xdc>
   16664:	ldr	r3, [r5]
   16668:	mov	r2, r6
   1666c:	mov	r1, r0
   16670:	mov	r0, r7
   16674:	bl	1520 <fread@plt>
   16678:	mov	r4, r0
   1667c:	mov	r0, r4
   16680:	add	sp, sp, #8
   16684:	ldrd	r4, [sp]
   16688:	ldrd	r6, [sp, #8]
   1668c:	ldrd	r8, [sp, #16]
   16690:	ldr	sl, [sp, #24]
   16694:	add	sp, sp, #28
   16698:	pop	{pc}		; (ldr pc, [sp], #4)
   1669c:	ldr	r4, [r5, #20]
   166a0:	cmp	r4, #0
   166a4:	bne	166f0 <ReadCharData+0x130>
   166a8:	cmp	r6, #0
   166ac:	ble	1667c <ReadCharData+0xbc>
   166b0:	sub	r8, r7, #1
   166b4:	sub	r6, r6, #1
   166b8:	add	r7, r7, r6
   166bc:	add	sl, sp, #6
   166c0:	mov	r6, #1
   166c4:	ldr	r3, [r5]
   166c8:	mov	r2, r6
   166cc:	mov	r1, r9
   166d0:	mov	r0, sl
   166d4:	bl	1520 <fread@plt>
   166d8:	add	r4, r4, r0
   166dc:	ldrh	r3, [sp, #6]
   166e0:	strb	r3, [r8, #1]!
   166e4:	cmp	r8, r7
   166e8:	bne	166c4 <ReadCharData+0x104>
   166ec:	b	1667c <ReadCharData+0xbc>
   166f0:	cmp	r6, #0
   166f4:	ble	16740 <ReadCharData+0x180>
   166f8:	sub	r8, r7, #1
   166fc:	sub	r6, r6, #1
   16700:	add	r7, r7, r6
   16704:	mov	r4, #0
   16708:	add	sl, sp, #6
   1670c:	mov	r6, #1
   16710:	ldr	r3, [r5]
   16714:	mov	r2, r6
   16718:	mov	r1, r9
   1671c:	mov	r0, sl
   16720:	bl	1520 <fread@plt>
   16724:	add	r4, r4, r0
   16728:	mov	r0, sl
   1672c:	bl	1924 <Mat_uint16Swap>
   16730:	strb	r0, [r8, #1]!
   16734:	cmp	r7, r8
   16738:	bne	16710 <ReadCharData+0x150>
   1673c:	b	1667c <ReadCharData+0xbc>
   16740:	mov	r4, #0
   16744:	b	1667c <ReadCharData+0xbc>
   16748:	mov	r1, r4
   1674c:	ldr	r0, [pc, #12]	; 16760 <ReadCharData+0x1a0>
   16750:	add	r0, pc, r0
   16754:	bl	1484 <Mat_Warning@plt>
   16758:	mov	r4, #0
   1675c:	b	1667c <ReadCharData+0xbc>
   16760:	.word	0x00038c94

00016764 <ReadDataSlabN>:
   16764:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16768:	strd	r6, [sp, #8]
   1676c:	strd	r8, [sp, #16]
   16770:	strd	sl, [sp, #24]
   16774:	str	lr, [sp, #32]
   16778:	sub	sp, sp, #156	; 0x9c
   1677c:	ldr	fp, [sp, #200]	; 0xc8
   16780:	ldr	r4, [sp, #204]	; 0xcc
   16784:	mov	r6, #0
   16788:	mov	r7, #0
   1678c:	strd	r6, [sp, #112]	; 0x70
   16790:	strd	r6, [sp, #120]	; 0x78
   16794:	strd	r6, [sp, #128]	; 0x80
   16798:	strd	r6, [sp, #136]	; 0x88
   1679c:	strd	r6, [sp, #144]	; 0x90
   167a0:	strd	r6, [sp, #72]	; 0x48
   167a4:	strd	r6, [sp, #80]	; 0x50
   167a8:	strd	r6, [sp, #88]	; 0x58
   167ac:	strd	r6, [sp, #96]	; 0x60
   167b0:	strd	r6, [sp, #104]	; 0x68
   167b4:	strd	r6, [sp, #32]
   167b8:	strd	r6, [sp, #40]	; 0x28
   167bc:	strd	r6, [sp, #48]	; 0x30
   167c0:	strd	r6, [sp, #56]	; 0x38
   167c4:	strd	r6, [sp, #64]	; 0x40
   167c8:	cmp	r1, #0
   167cc:	cmpne	r0, #0
   167d0:	beq	19694 <ReadDataSlabN+0x2f30>
   167d4:	mov	ip, r0
   167d8:	mov	lr, r1
   167dc:	ldr	r1, [r0]
   167e0:	cmp	r1, #0
   167e4:	beq	1969c <ReadDataSlabN+0x2f38>
   167e8:	clz	r1, r4
   167ec:	lsr	r1, r1, #5
   167f0:	cmp	fp, #0
   167f4:	moveq	r1, #1
   167f8:	ldr	r0, [sp, #208]	; 0xd0
   167fc:	cmp	r0, #0
   16800:	moveq	r1, #1
   16804:	ldr	r0, [sp, #192]	; 0xc0
   16808:	cmp	r0, #10
   1680c:	orrgt	r1, r1, #1
   16810:	cmp	r1, #0
   16814:	bne	196a4 <ReadDataSlabN+0x2f40>
   16818:	str	lr, [sp, #12]
   1681c:	str	ip, [sp, #4]
   16820:	str	r3, [sp, #8]
   16824:	mov	r5, r2
   16828:	mov	r0, r3
   1682c:	bl	1598 <Mat_SizeOf@plt>
   16830:	str	r0, [sp]
   16834:	sub	r5, r5, #6
   16838:	cmp	r5, #9
   1683c:	addls	pc, pc, r5, lsl #2
   16840:	b	196ac <ReadDataSlabN+0x2f48>
   16844:	b	1686c <ReadDataSlabN+0x108>
   16848:	b	16d20 <ReadDataSlabN+0x5bc>
   1684c:	b	18d64 <ReadDataSlabN+0x2600>
   16850:	b	191fc <ReadDataSlabN+0x2a98>
   16854:	b	1842c <ReadDataSlabN+0x1cc8>
   16858:	b	188c8 <ReadDataSlabN+0x2164>
   1685c:	b	17af4 <ReadDataSlabN+0x1390>
   16860:	b	17f90 <ReadDataSlabN+0x182c>
   16864:	b	171bc <ReadDataSlabN+0xa58>
   16868:	b	17658 <ReadDataSlabN+0xef4>
   1686c:	ldr	r3, [r4]
   16870:	sub	r3, r3, #1
   16874:	str	r3, [sp, #112]	; 0x70
   16878:	ldr	r3, [sp, #196]	; 0xc4
   1687c:	ldr	r3, [r3]
   16880:	str	r3, [sp, #32]
   16884:	ldr	r3, [sp, #208]	; 0xd0
   16888:	ldr	r3, [r3]
   1688c:	str	r3, [sp, #16]
   16890:	ldr	r3, [sp, #192]	; 0xc0
   16894:	cmp	r3, #1
   16898:	ble	168c0 <ReadDataSlabN+0x15c>
   1689c:	mov	r8, r4
   168a0:	add	sl, sp, #116	; 0x74
   168a4:	ldr	lr, [sp, #196]	; 0xc4
   168a8:	add	r7, sp, #32
   168ac:	mov	r9, lr
   168b0:	mov	r6, #1
   168b4:	mov	r5, #0
   168b8:	str	r4, [sp, #204]	; 0xcc
   168bc:	b	19728 <ReadDataSlabN+0x2fc4>
   168c0:	mov	r5, #0
   168c4:	b	197b8 <ReadDataSlabN+0x3054>
   168c8:	ldr	r3, [sp, #16]
   168cc:	cmp	r3, #0
   168d0:	ble	196b4 <ReadDataSlabN+0x2f50>
   168d4:	mov	r3, #0
   168d8:	str	r3, [sp, #24]
   168dc:	mov	sl, r3
   168e0:	b	16a10 <ReadDataSlabN+0x2ac>
   168e4:	mov	r2, #1
   168e8:	ldr	r3, [sp]
   168ec:	mul	r1, r3, r1
   168f0:	ldr	r3, [sp, #4]
   168f4:	ldr	r0, [r3]
   168f8:	bl	1694 <fseek@plt>
   168fc:	ldr	r3, [fp]
   16900:	add	r5, r5, r3
   16904:	b	16a1c <ReadDataSlabN+0x2b8>
   16908:	sub	r6, r6, r3
   1690c:	ldr	r3, [r8, #-8]
   16910:	ldr	r1, [fp, r4, lsl #2]
   16914:	str	r3, [sp, #20]
   16918:	mla	r1, r1, r3, r6
   1691c:	mov	r2, #1
   16920:	ldr	r0, [sp]
   16924:	mul	r1, r0, r1
   16928:	ldr	r0, [sp, #4]
   1692c:	ldr	r0, [r0]
   16930:	bl	1694 <fseek@plt>
   16934:	ldr	r3, [fp, r4, lsl #2]
   16938:	ldr	r2, [sp, #20]
   1693c:	mla	r6, r3, r2, r6
   16940:	add	r5, r5, r6
   16944:	add	r4, r4, #1
   16948:	ldr	r3, [sp, #192]	; 0xc0
   1694c:	cmp	r3, r4
   16950:	beq	169f0 <ReadDataSlabN+0x28c>
   16954:	ldr	r3, [r7]
   16958:	add	r3, r3, #1
   1695c:	str	r3, [r7]
   16960:	ldr	r1, [r9, #4]!
   16964:	sdiv	r2, r3, r1
   16968:	mls	r3, r1, r2, r3
   1696c:	cmp	r3, #0
   16970:	bne	169c8 <ReadDataSlabN+0x264>
   16974:	str	sl, [r7], #4
   16978:	ldr	r6, [r8], #4
   1697c:	sdiv	r3, r5, r6
   16980:	mls	r3, r6, r3, r5
   16984:	cmp	r3, #0
   16988:	bne	16908 <ReadDataSlabN+0x1a4>
   1698c:	ldr	r1, [fp, r4, lsl #2]
   16990:	cmp	r1, #0
   16994:	beq	16944 <ReadDataSlabN+0x1e0>
   16998:	ldr	r6, [r8, #-8]
   1699c:	mul	r1, r6, r1
   169a0:	mov	r2, #1
   169a4:	ldr	r3, [sp]
   169a8:	mul	r1, r3, r1
   169ac:	ldr	r3, [sp, #4]
   169b0:	ldr	r0, [r3]
   169b4:	bl	1694 <fseek@plt>
   169b8:	ldr	r3, [fp, r4, lsl #2]
   169bc:	mla	r5, r3, r6, r5
   169c0:	b	16944 <ReadDataSlabN+0x1e0>
   169c4:	ldr	r4, [sp, #28]
   169c8:	add	r3, sp, #152	; 0x98
   169cc:	add	r4, r3, r4, lsl #2
   169d0:	ldr	r1, [r4, #-40]	; 0xffffffd8
   169d4:	add	r5, r5, r1
   169d8:	mov	r2, #1
   169dc:	ldr	r3, [sp]
   169e0:	mul	r1, r3, r1
   169e4:	ldr	r3, [sp, #4]
   169e8:	ldr	r0, [r3]
   169ec:	bl	1694 <fseek@plt>
   169f0:	ldr	r3, [sp, #208]	; 0xd0
   169f4:	ldr	r3, [r3]
   169f8:	ldr	r2, [sp, #24]
   169fc:	add	r3, r2, r3
   16a00:	str	r3, [sp, #24]
   16a04:	ldr	r2, [sp, #16]
   16a08:	cmp	r3, r2
   16a0c:	bge	16ac0 <ReadDataSlabN+0x35c>
   16a10:	ldr	r1, [fp]
   16a14:	cmp	r1, #0
   16a18:	bne	168e4 <ReadDataSlabN+0x180>
   16a1c:	ldr	r3, [sp, #208]	; 0xd0
   16a20:	ldr	r3, [r3]
   16a24:	ldr	r2, [sp, #8]
   16a28:	ldr	r1, [sp, #12]
   16a2c:	ldr	r0, [sp, #24]
   16a30:	add	r1, r1, r0, lsl #3
   16a34:	ldr	r4, [sp, #4]
   16a38:	mov	r0, r4
   16a3c:	bl	3a44 <ReadDoubleData>
   16a40:	ldr	r3, [sp, #196]	; 0xc4
   16a44:	ldr	r3, [r3]
   16a48:	ldr	r1, [fp]
   16a4c:	sub	r2, r3, r1
   16a50:	add	r5, r2, r5
   16a54:	ldr	r2, [sp, #208]	; 0xd0
   16a58:	ldr	r2, [r2]
   16a5c:	sub	r3, r3, r2
   16a60:	sub	r1, r3, r1
   16a64:	mov	r2, #1
   16a68:	ldr	r3, [sp]
   16a6c:	mul	r1, r3, r1
   16a70:	ldr	r0, [r4]
   16a74:	bl	1694 <fseek@plt>
   16a78:	ldr	r3, [sp, #192]	; 0xc0
   16a7c:	cmp	r3, #1
   16a80:	ble	169f0 <ReadDataSlabN+0x28c>
   16a84:	ldr	r3, [sp, #76]	; 0x4c
   16a88:	add	r3, r3, #1
   16a8c:	str	r3, [sp, #76]	; 0x4c
   16a90:	ldr	r2, [sp, #208]	; 0xd0
   16a94:	ldr	r1, [r2, #4]
   16a98:	sdiv	r2, r3, r1
   16a9c:	mls	r3, r1, r2, r3
   16aa0:	cmp	r3, #0
   16aa4:	bne	169c4 <ReadDataSlabN+0x260>
   16aa8:	add	r7, sp, #76	; 0x4c
   16aac:	ldr	r3, [sp, #208]	; 0xd0
   16ab0:	add	r9, r3, #4
   16ab4:	add	r8, sp, #36	; 0x24
   16ab8:	ldr	r4, [sp, #28]
   16abc:	b	16974 <ReadDataSlabN+0x210>
   16ac0:	mov	r0, #0
   16ac4:	b	16d04 <ReadDataSlabN+0x5a0>
   16ac8:	mov	r2, #1
   16acc:	ldr	r3, [sp]
   16ad0:	mul	r1, r3, r1
   16ad4:	ldr	r3, [sp, #4]
   16ad8:	ldr	r0, [r3]
   16adc:	bl	1694 <fseek@plt>
   16ae0:	ldr	r3, [fp]
   16ae4:	add	r5, r5, r3
   16ae8:	b	16c04 <ReadDataSlabN+0x4a0>
   16aec:	sub	r4, r4, r3
   16af0:	ldr	r7, [r9, #-8]
   16af4:	ldr	r1, [fp, r6, lsl #2]
   16af8:	mla	r1, r1, r7, r4
   16afc:	mov	r2, #1
   16b00:	ldr	r3, [sp]
   16b04:	mul	r1, r3, r1
   16b08:	ldr	r3, [sp, #4]
   16b0c:	ldr	r0, [r3]
   16b10:	bl	1694 <fseek@plt>
   16b14:	ldr	r3, [fp, r6, lsl #2]
   16b18:	mla	r4, r3, r7, r4
   16b1c:	add	r5, r5, r4
   16b20:	add	r6, r6, #1
   16b24:	ldr	r3, [sp, #192]	; 0xc0
   16b28:	cmp	r3, r6
   16b2c:	beq	16cf8 <ReadDataSlabN+0x594>
   16b30:	ldr	r3, [r8]
   16b34:	add	r3, r3, #1
   16b38:	str	r3, [r8]
   16b3c:	ldr	r1, [sl, #4]!
   16b40:	sdiv	r2, r3, r1
   16b44:	mls	r3, r1, r2, r3
   16b48:	cmp	r3, #0
   16b4c:	bne	16bac <ReadDataSlabN+0x448>
   16b50:	mov	r3, #0
   16b54:	str	r3, [r8], #4
   16b58:	ldr	r4, [r9], #4
   16b5c:	sdiv	r3, r5, r4
   16b60:	mls	r3, r4, r3, r5
   16b64:	cmp	r3, #0
   16b68:	bne	16aec <ReadDataSlabN+0x388>
   16b6c:	ldr	r1, [fp, r6, lsl #2]
   16b70:	cmp	r1, #0
   16b74:	beq	16b20 <ReadDataSlabN+0x3bc>
   16b78:	ldr	r4, [r9, #-8]
   16b7c:	mul	r1, r4, r1
   16b80:	mov	r2, #1
   16b84:	ldr	r3, [sp]
   16b88:	mul	r1, r3, r1
   16b8c:	ldr	r3, [sp, #4]
   16b90:	ldr	r0, [r3]
   16b94:	bl	1694 <fseek@plt>
   16b98:	ldr	r3, [fp, r6, lsl #2]
   16b9c:	mla	r5, r3, r4, r5
   16ba0:	b	16b20 <ReadDataSlabN+0x3bc>
   16ba4:	mov	r6, #1
   16ba8:	b	16bb0 <ReadDataSlabN+0x44c>
   16bac:	ldr	r4, [sp, #204]	; 0xcc
   16bb0:	add	r3, sp, #152	; 0x98
   16bb4:	add	r6, r3, r6, lsl #2
   16bb8:	ldr	r1, [r6, #-40]	; 0xffffffd8
   16bbc:	add	r5, r5, r1
   16bc0:	mov	r2, #1
   16bc4:	ldr	r3, [sp]
   16bc8:	mul	r1, r3, r1
   16bcc:	ldr	r3, [sp, #4]
   16bd0:	ldr	r0, [r3]
   16bd4:	bl	1694 <fseek@plt>
   16bd8:	ldr	r3, [sp, #208]	; 0xd0
   16bdc:	ldr	r3, [r3]
   16be0:	ldr	r2, [sp, #20]
   16be4:	add	r3, r2, r3
   16be8:	str	r3, [sp, #20]
   16bec:	ldr	r2, [sp, #16]
   16bf0:	cmp	r3, r2
   16bf4:	bge	16d00 <ReadDataSlabN+0x59c>
   16bf8:	ldr	r1, [fp]
   16bfc:	cmp	r1, #0
   16c00:	bne	16ac8 <ReadDataSlabN+0x364>
   16c04:	ldr	r3, [sp, #208]	; 0xd0
   16c08:	ldr	r1, [r3]
   16c0c:	cmp	r1, #0
   16c10:	ble	16c78 <ReadDataSlabN+0x514>
   16c14:	ldr	r3, [sp, #12]
   16c18:	ldr	r2, [sp, #20]
   16c1c:	add	r7, r3, r2, lsl #3
   16c20:	mov	r6, #0
   16c24:	ldr	r9, [sp]
   16c28:	ldr	sl, [sp, #208]	; 0xd0
   16c2c:	ldr	r8, [sp, #4]
   16c30:	mov	r3, #1
   16c34:	ldr	r2, [sp, #8]
   16c38:	mov	r1, r7
   16c3c:	mov	r0, r8
   16c40:	bl	3a44 <ReadDoubleData>
   16c44:	ldr	r1, [r4]
   16c48:	sub	r1, r1, #1
   16c4c:	mov	r2, #1
   16c50:	mul	r1, r9, r1
   16c54:	ldr	r0, [r8]
   16c58:	bl	1694 <fseek@plt>
   16c5c:	ldr	r3, [r4]
   16c60:	add	r5, r5, r3
   16c64:	add	r6, r6, #1
   16c68:	ldr	r1, [sl]
   16c6c:	add	r7, r7, #8
   16c70:	cmp	r1, r6
   16c74:	bgt	16c30 <ReadDataSlabN+0x4cc>
   16c78:	ldr	r3, [sp, #196]	; 0xc4
   16c7c:	ldr	r3, [r3]
   16c80:	ldr	r2, [fp]
   16c84:	sub	r3, r3, r2
   16c88:	ldr	r2, [r4]
   16c8c:	mls	r1, r2, r1, r3
   16c90:	add	r5, r5, r1
   16c94:	mov	r2, #1
   16c98:	ldr	r3, [sp]
   16c9c:	mul	r1, r3, r1
   16ca0:	ldr	r3, [sp, #4]
   16ca4:	ldr	r0, [r3]
   16ca8:	bl	1694 <fseek@plt>
   16cac:	ldr	r3, [sp, #192]	; 0xc0
   16cb0:	cmp	r3, #1
   16cb4:	ble	16bd8 <ReadDataSlabN+0x474>
   16cb8:	ldr	r3, [sp, #76]	; 0x4c
   16cbc:	add	r3, r3, #1
   16cc0:	str	r3, [sp, #76]	; 0x4c
   16cc4:	ldr	r2, [sp, #208]	; 0xd0
   16cc8:	ldr	r1, [r2, #4]
   16ccc:	sdiv	r2, r3, r1
   16cd0:	mls	r3, r1, r2, r3
   16cd4:	cmp	r3, #0
   16cd8:	bne	16ba4 <ReadDataSlabN+0x440>
   16cdc:	add	r8, sp, #76	; 0x4c
   16ce0:	ldr	r3, [sp, #208]	; 0xd0
   16ce4:	add	sl, r3, #4
   16ce8:	add	r9, sp, #36	; 0x24
   16cec:	mov	r6, #1
   16cf0:	str	r4, [sp, #204]	; 0xcc
   16cf4:	b	16b50 <ReadDataSlabN+0x3ec>
   16cf8:	ldr	r4, [sp, #204]	; 0xcc
   16cfc:	b	16bd8 <ReadDataSlabN+0x474>
   16d00:	mov	r0, #0
   16d04:	add	sp, sp, #156	; 0x9c
   16d08:	ldrd	r4, [sp]
   16d0c:	ldrd	r6, [sp, #8]
   16d10:	ldrd	r8, [sp, #16]
   16d14:	ldrd	sl, [sp, #24]
   16d18:	add	sp, sp, #32
   16d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d20:	ldr	r3, [r4]
   16d24:	sub	r3, r3, #1
   16d28:	str	r3, [sp, #112]	; 0x70
   16d2c:	ldr	r3, [sp, #196]	; 0xc4
   16d30:	ldr	r3, [r3]
   16d34:	str	r3, [sp, #32]
   16d38:	ldr	r3, [sp, #208]	; 0xd0
   16d3c:	ldr	r3, [r3]
   16d40:	str	r3, [sp, #16]
   16d44:	ldr	r3, [sp, #192]	; 0xc0
   16d48:	cmp	r3, #1
   16d4c:	ble	16d74 <ReadDataSlabN+0x610>
   16d50:	mov	r8, r4
   16d54:	add	sl, sp, #116	; 0x74
   16d58:	ldr	lr, [sp, #196]	; 0xc4
   16d5c:	add	r7, sp, #32
   16d60:	mov	r9, lr
   16d64:	mov	r6, #1
   16d68:	mov	r5, #0
   16d6c:	str	r4, [sp, #204]	; 0xcc
   16d70:	b	19820 <ReadDataSlabN+0x30bc>
   16d74:	mov	r5, #0
   16d78:	b	198b0 <ReadDataSlabN+0x314c>
   16d7c:	ldr	r3, [sp, #16]
   16d80:	cmp	r3, #0
   16d84:	ble	196bc <ReadDataSlabN+0x2f58>
   16d88:	mov	r3, #0
   16d8c:	str	r3, [sp, #24]
   16d90:	mov	sl, r3
   16d94:	b	16ec4 <ReadDataSlabN+0x760>
   16d98:	mov	r2, #1
   16d9c:	ldr	r3, [sp]
   16da0:	mul	r1, r3, r1
   16da4:	ldr	r3, [sp, #4]
   16da8:	ldr	r0, [r3]
   16dac:	bl	1694 <fseek@plt>
   16db0:	ldr	r3, [fp]
   16db4:	add	r5, r5, r3
   16db8:	b	16ed0 <ReadDataSlabN+0x76c>
   16dbc:	sub	r6, r6, r3
   16dc0:	ldr	r3, [r8, #-8]
   16dc4:	ldr	r1, [fp, r4, lsl #2]
   16dc8:	str	r3, [sp, #20]
   16dcc:	mla	r1, r1, r3, r6
   16dd0:	mov	r2, #1
   16dd4:	ldr	r0, [sp]
   16dd8:	mul	r1, r0, r1
   16ddc:	ldr	r0, [sp, #4]
   16de0:	ldr	r0, [r0]
   16de4:	bl	1694 <fseek@plt>
   16de8:	ldr	r3, [fp, r4, lsl #2]
   16dec:	ldr	r2, [sp, #20]
   16df0:	mla	r6, r3, r2, r6
   16df4:	add	r5, r5, r6
   16df8:	add	r4, r4, #1
   16dfc:	ldr	r3, [sp, #192]	; 0xc0
   16e00:	cmp	r3, r4
   16e04:	beq	16ea4 <ReadDataSlabN+0x740>
   16e08:	ldr	r3, [r7]
   16e0c:	add	r3, r3, #1
   16e10:	str	r3, [r7]
   16e14:	ldr	r1, [r9, #4]!
   16e18:	sdiv	r2, r3, r1
   16e1c:	mls	r3, r1, r2, r3
   16e20:	cmp	r3, #0
   16e24:	bne	16e7c <ReadDataSlabN+0x718>
   16e28:	str	sl, [r7], #4
   16e2c:	ldr	r6, [r8], #4
   16e30:	sdiv	r3, r5, r6
   16e34:	mls	r3, r6, r3, r5
   16e38:	cmp	r3, #0
   16e3c:	bne	16dbc <ReadDataSlabN+0x658>
   16e40:	ldr	r1, [fp, r4, lsl #2]
   16e44:	cmp	r1, #0
   16e48:	beq	16df8 <ReadDataSlabN+0x694>
   16e4c:	ldr	r6, [r8, #-8]
   16e50:	mul	r1, r6, r1
   16e54:	mov	r2, #1
   16e58:	ldr	r3, [sp]
   16e5c:	mul	r1, r3, r1
   16e60:	ldr	r3, [sp, #4]
   16e64:	ldr	r0, [r3]
   16e68:	bl	1694 <fseek@plt>
   16e6c:	ldr	r3, [fp, r4, lsl #2]
   16e70:	mla	r5, r3, r6, r5
   16e74:	b	16df8 <ReadDataSlabN+0x694>
   16e78:	ldr	r4, [sp, #28]
   16e7c:	add	r3, sp, #152	; 0x98
   16e80:	add	r4, r3, r4, lsl #2
   16e84:	ldr	r1, [r4, #-40]	; 0xffffffd8
   16e88:	add	r5, r5, r1
   16e8c:	mov	r2, #1
   16e90:	ldr	r3, [sp]
   16e94:	mul	r1, r3, r1
   16e98:	ldr	r3, [sp, #4]
   16e9c:	ldr	r0, [r3]
   16ea0:	bl	1694 <fseek@plt>
   16ea4:	ldr	r3, [sp, #208]	; 0xd0
   16ea8:	ldr	r3, [r3]
   16eac:	ldr	r2, [sp, #24]
   16eb0:	add	r3, r2, r3
   16eb4:	str	r3, [sp, #24]
   16eb8:	ldr	r2, [sp, #16]
   16ebc:	cmp	r3, r2
   16ec0:	bge	16f74 <ReadDataSlabN+0x810>
   16ec4:	ldr	r1, [fp]
   16ec8:	cmp	r1, #0
   16ecc:	bne	16d98 <ReadDataSlabN+0x634>
   16ed0:	ldr	r3, [sp, #208]	; 0xd0
   16ed4:	ldr	r3, [r3]
   16ed8:	ldr	r2, [sp, #8]
   16edc:	ldr	r1, [sp, #12]
   16ee0:	ldr	r0, [sp, #24]
   16ee4:	add	r1, r1, r0, lsl #2
   16ee8:	ldr	r4, [sp, #4]
   16eec:	mov	r0, r4
   16ef0:	bl	6360 <ReadSingleData>
   16ef4:	ldr	r3, [sp, #196]	; 0xc4
   16ef8:	ldr	r3, [r3]
   16efc:	ldr	r1, [fp]
   16f00:	sub	r2, r3, r1
   16f04:	add	r5, r2, r5
   16f08:	ldr	r2, [sp, #208]	; 0xd0
   16f0c:	ldr	r2, [r2]
   16f10:	sub	r3, r3, r2
   16f14:	sub	r1, r3, r1
   16f18:	mov	r2, #1
   16f1c:	ldr	r3, [sp]
   16f20:	mul	r1, r3, r1
   16f24:	ldr	r0, [r4]
   16f28:	bl	1694 <fseek@plt>
   16f2c:	ldr	r3, [sp, #192]	; 0xc0
   16f30:	cmp	r3, #1
   16f34:	ble	16ea4 <ReadDataSlabN+0x740>
   16f38:	ldr	r3, [sp, #76]	; 0x4c
   16f3c:	add	r3, r3, #1
   16f40:	str	r3, [sp, #76]	; 0x4c
   16f44:	ldr	r2, [sp, #208]	; 0xd0
   16f48:	ldr	r1, [r2, #4]
   16f4c:	sdiv	r2, r3, r1
   16f50:	mls	r3, r1, r2, r3
   16f54:	cmp	r3, #0
   16f58:	bne	16e78 <ReadDataSlabN+0x714>
   16f5c:	add	r7, sp, #76	; 0x4c
   16f60:	ldr	r3, [sp, #208]	; 0xd0
   16f64:	add	r9, r3, #4
   16f68:	add	r8, sp, #36	; 0x24
   16f6c:	ldr	r4, [sp, #28]
   16f70:	b	16e28 <ReadDataSlabN+0x6c4>
   16f74:	mov	r0, #0
   16f78:	b	16d04 <ReadDataSlabN+0x5a0>
   16f7c:	mov	r2, #1
   16f80:	ldr	r3, [sp]
   16f84:	mul	r1, r3, r1
   16f88:	ldr	r3, [sp, #4]
   16f8c:	ldr	r0, [r3]
   16f90:	bl	1694 <fseek@plt>
   16f94:	ldr	r3, [fp]
   16f98:	add	r5, r5, r3
   16f9c:	b	170b8 <ReadDataSlabN+0x954>
   16fa0:	sub	r4, r4, r3
   16fa4:	ldr	r7, [r9, #-8]
   16fa8:	ldr	r1, [fp, r6, lsl #2]
   16fac:	mla	r1, r1, r7, r4
   16fb0:	mov	r2, #1
   16fb4:	ldr	r3, [sp]
   16fb8:	mul	r1, r3, r1
   16fbc:	ldr	r3, [sp, #4]
   16fc0:	ldr	r0, [r3]
   16fc4:	bl	1694 <fseek@plt>
   16fc8:	ldr	r3, [fp, r6, lsl #2]
   16fcc:	mla	r4, r3, r7, r4
   16fd0:	add	r5, r5, r4
   16fd4:	add	r6, r6, #1
   16fd8:	ldr	r3, [sp, #192]	; 0xc0
   16fdc:	cmp	r3, r6
   16fe0:	beq	171ac <ReadDataSlabN+0xa48>
   16fe4:	ldr	r3, [r8]
   16fe8:	add	r3, r3, #1
   16fec:	str	r3, [r8]
   16ff0:	ldr	r1, [sl, #4]!
   16ff4:	sdiv	r2, r3, r1
   16ff8:	mls	r3, r1, r2, r3
   16ffc:	cmp	r3, #0
   17000:	bne	17060 <ReadDataSlabN+0x8fc>
   17004:	mov	r3, #0
   17008:	str	r3, [r8], #4
   1700c:	ldr	r4, [r9], #4
   17010:	sdiv	r3, r5, r4
   17014:	mls	r3, r4, r3, r5
   17018:	cmp	r3, #0
   1701c:	bne	16fa0 <ReadDataSlabN+0x83c>
   17020:	ldr	r1, [fp, r6, lsl #2]
   17024:	cmp	r1, #0
   17028:	beq	16fd4 <ReadDataSlabN+0x870>
   1702c:	ldr	r4, [r9, #-8]
   17030:	mul	r1, r4, r1
   17034:	mov	r2, #1
   17038:	ldr	r3, [sp]
   1703c:	mul	r1, r3, r1
   17040:	ldr	r3, [sp, #4]
   17044:	ldr	r0, [r3]
   17048:	bl	1694 <fseek@plt>
   1704c:	ldr	r3, [fp, r6, lsl #2]
   17050:	mla	r5, r3, r4, r5
   17054:	b	16fd4 <ReadDataSlabN+0x870>
   17058:	mov	r6, #1
   1705c:	b	17064 <ReadDataSlabN+0x900>
   17060:	ldr	r4, [sp, #204]	; 0xcc
   17064:	add	r3, sp, #152	; 0x98
   17068:	add	r6, r3, r6, lsl #2
   1706c:	ldr	r1, [r6, #-40]	; 0xffffffd8
   17070:	add	r5, r5, r1
   17074:	mov	r2, #1
   17078:	ldr	r3, [sp]
   1707c:	mul	r1, r3, r1
   17080:	ldr	r3, [sp, #4]
   17084:	ldr	r0, [r3]
   17088:	bl	1694 <fseek@plt>
   1708c:	ldr	r3, [sp, #208]	; 0xd0
   17090:	ldr	r3, [r3]
   17094:	ldr	r2, [sp, #20]
   17098:	add	r3, r2, r3
   1709c:	str	r3, [sp, #20]
   170a0:	ldr	r2, [sp, #16]
   170a4:	cmp	r3, r2
   170a8:	bge	171b4 <ReadDataSlabN+0xa50>
   170ac:	ldr	r1, [fp]
   170b0:	cmp	r1, #0
   170b4:	bne	16f7c <ReadDataSlabN+0x818>
   170b8:	ldr	r3, [sp, #208]	; 0xd0
   170bc:	ldr	r1, [r3]
   170c0:	cmp	r1, #0
   170c4:	ble	1712c <ReadDataSlabN+0x9c8>
   170c8:	ldr	r3, [sp, #12]
   170cc:	ldr	r2, [sp, #20]
   170d0:	add	r7, r3, r2, lsl #2
   170d4:	mov	r6, #0
   170d8:	ldr	r9, [sp]
   170dc:	ldr	sl, [sp, #208]	; 0xd0
   170e0:	ldr	r8, [sp, #4]
   170e4:	mov	r3, #1
   170e8:	ldr	r2, [sp, #8]
   170ec:	mov	r1, r7
   170f0:	mov	r0, r8
   170f4:	bl	6360 <ReadSingleData>
   170f8:	ldr	r1, [r4]
   170fc:	sub	r1, r1, #1
   17100:	mov	r2, #1
   17104:	mul	r1, r9, r1
   17108:	ldr	r0, [r8]
   1710c:	bl	1694 <fseek@plt>
   17110:	ldr	r3, [r4]
   17114:	add	r5, r5, r3
   17118:	add	r6, r6, #1
   1711c:	ldr	r1, [sl]
   17120:	add	r7, r7, #4
   17124:	cmp	r1, r6
   17128:	bgt	170e4 <ReadDataSlabN+0x980>
   1712c:	ldr	r3, [sp, #196]	; 0xc4
   17130:	ldr	r3, [r3]
   17134:	ldr	r2, [fp]
   17138:	sub	r3, r3, r2
   1713c:	ldr	r2, [r4]
   17140:	mls	r1, r2, r1, r3
   17144:	add	r5, r5, r1
   17148:	mov	r2, #1
   1714c:	ldr	r3, [sp]
   17150:	mul	r1, r3, r1
   17154:	ldr	r3, [sp, #4]
   17158:	ldr	r0, [r3]
   1715c:	bl	1694 <fseek@plt>
   17160:	ldr	r3, [sp, #192]	; 0xc0
   17164:	cmp	r3, #1
   17168:	ble	1708c <ReadDataSlabN+0x928>
   1716c:	ldr	r3, [sp, #76]	; 0x4c
   17170:	add	r3, r3, #1
   17174:	str	r3, [sp, #76]	; 0x4c
   17178:	ldr	r2, [sp, #208]	; 0xd0
   1717c:	ldr	r1, [r2, #4]
   17180:	sdiv	r2, r3, r1
   17184:	mls	r3, r1, r2, r3
   17188:	cmp	r3, #0
   1718c:	bne	17058 <ReadDataSlabN+0x8f4>
   17190:	add	r8, sp, #76	; 0x4c
   17194:	ldr	r3, [sp, #208]	; 0xd0
   17198:	add	sl, r3, #4
   1719c:	add	r9, sp, #36	; 0x24
   171a0:	mov	r6, #1
   171a4:	str	r4, [sp, #204]	; 0xcc
   171a8:	b	17004 <ReadDataSlabN+0x8a0>
   171ac:	ldr	r4, [sp, #204]	; 0xcc
   171b0:	b	1708c <ReadDataSlabN+0x928>
   171b4:	mov	r0, #0
   171b8:	b	16d04 <ReadDataSlabN+0x5a0>
   171bc:	ldr	r3, [r4]
   171c0:	sub	r3, r3, #1
   171c4:	str	r3, [sp, #112]	; 0x70
   171c8:	ldr	r3, [sp, #196]	; 0xc4
   171cc:	ldr	r3, [r3]
   171d0:	str	r3, [sp, #32]
   171d4:	ldr	r3, [sp, #208]	; 0xd0
   171d8:	ldr	r3, [r3]
   171dc:	str	r3, [sp, #16]
   171e0:	ldr	r3, [sp, #192]	; 0xc0
   171e4:	cmp	r3, #1
   171e8:	ble	17210 <ReadDataSlabN+0xaac>
   171ec:	mov	r8, r4
   171f0:	add	sl, sp, #116	; 0x74
   171f4:	ldr	lr, [sp, #196]	; 0xc4
   171f8:	add	r7, sp, #32
   171fc:	mov	r9, lr
   17200:	mov	r6, #1
   17204:	mov	r5, #0
   17208:	str	r4, [sp, #204]	; 0xcc
   1720c:	b	19ee8 <ReadDataSlabN+0x3784>
   17210:	mov	r5, #0
   17214:	b	19f78 <ReadDataSlabN+0x3814>
   17218:	ldr	r3, [sp, #16]
   1721c:	cmp	r3, #0
   17220:	ble	196c4 <ReadDataSlabN+0x2f60>
   17224:	mov	r3, #0
   17228:	str	r3, [sp, #24]
   1722c:	mov	sl, r3
   17230:	b	17360 <ReadDataSlabN+0xbfc>
   17234:	mov	r2, #1
   17238:	ldr	r3, [sp]
   1723c:	mul	r1, r3, r1
   17240:	ldr	r3, [sp, #4]
   17244:	ldr	r0, [r3]
   17248:	bl	1694 <fseek@plt>
   1724c:	ldr	r3, [fp]
   17250:	add	r5, r5, r3
   17254:	b	1736c <ReadDataSlabN+0xc08>
   17258:	sub	r6, r6, r3
   1725c:	ldr	r3, [r8, #-8]
   17260:	ldr	r1, [fp, r4, lsl #2]
   17264:	str	r3, [sp, #20]
   17268:	mla	r1, r1, r3, r6
   1726c:	mov	r2, #1
   17270:	ldr	r0, [sp]
   17274:	mul	r1, r0, r1
   17278:	ldr	r0, [sp, #4]
   1727c:	ldr	r0, [r0]
   17280:	bl	1694 <fseek@plt>
   17284:	ldr	r3, [fp, r4, lsl #2]
   17288:	ldr	r2, [sp, #20]
   1728c:	mla	r6, r3, r2, r6
   17290:	add	r5, r5, r6
   17294:	add	r4, r4, #1
   17298:	ldr	r3, [sp, #192]	; 0xc0
   1729c:	cmp	r3, r4
   172a0:	beq	17340 <ReadDataSlabN+0xbdc>
   172a4:	ldr	r3, [r7]
   172a8:	add	r3, r3, #1
   172ac:	str	r3, [r7]
   172b0:	ldr	r1, [r9, #4]!
   172b4:	sdiv	r2, r3, r1
   172b8:	mls	r3, r1, r2, r3
   172bc:	cmp	r3, #0
   172c0:	bne	17318 <ReadDataSlabN+0xbb4>
   172c4:	str	sl, [r7], #4
   172c8:	ldr	r6, [r8], #4
   172cc:	sdiv	r3, r5, r6
   172d0:	mls	r3, r6, r3, r5
   172d4:	cmp	r3, #0
   172d8:	bne	17258 <ReadDataSlabN+0xaf4>
   172dc:	ldr	r1, [fp, r4, lsl #2]
   172e0:	cmp	r1, #0
   172e4:	beq	17294 <ReadDataSlabN+0xb30>
   172e8:	ldr	r6, [r8, #-8]
   172ec:	mul	r1, r6, r1
   172f0:	mov	r2, #1
   172f4:	ldr	r3, [sp]
   172f8:	mul	r1, r3, r1
   172fc:	ldr	r3, [sp, #4]
   17300:	ldr	r0, [r3]
   17304:	bl	1694 <fseek@plt>
   17308:	ldr	r3, [fp, r4, lsl #2]
   1730c:	mla	r5, r3, r6, r5
   17310:	b	17294 <ReadDataSlabN+0xb30>
   17314:	ldr	r4, [sp, #28]
   17318:	add	r3, sp, #152	; 0x98
   1731c:	add	r4, r3, r4, lsl #2
   17320:	ldr	r1, [r4, #-40]	; 0xffffffd8
   17324:	add	r5, r5, r1
   17328:	mov	r2, #1
   1732c:	ldr	r3, [sp]
   17330:	mul	r1, r3, r1
   17334:	ldr	r3, [sp, #4]
   17338:	ldr	r0, [r3]
   1733c:	bl	1694 <fseek@plt>
   17340:	ldr	r3, [sp, #208]	; 0xd0
   17344:	ldr	r3, [r3]
   17348:	ldr	r2, [sp, #24]
   1734c:	add	r3, r2, r3
   17350:	str	r3, [sp, #24]
   17354:	ldr	r2, [sp, #16]
   17358:	cmp	r3, r2
   1735c:	bge	17410 <ReadDataSlabN+0xcac>
   17360:	ldr	r1, [fp]
   17364:	cmp	r1, #0
   17368:	bne	17234 <ReadDataSlabN+0xad0>
   1736c:	ldr	r3, [sp, #208]	; 0xd0
   17370:	ldr	r3, [r3]
   17374:	ldr	r2, [sp, #8]
   17378:	ldr	r1, [sp, #12]
   1737c:	ldr	r0, [sp, #24]
   17380:	add	r1, r1, r0, lsl #3
   17384:	ldr	r4, [sp, #4]
   17388:	mov	r0, r4
   1738c:	bl	80c4 <ReadInt64Data>
   17390:	ldr	r3, [sp, #196]	; 0xc4
   17394:	ldr	r3, [r3]
   17398:	ldr	r1, [fp]
   1739c:	sub	r2, r3, r1
   173a0:	add	r5, r2, r5
   173a4:	ldr	r2, [sp, #208]	; 0xd0
   173a8:	ldr	r2, [r2]
   173ac:	sub	r3, r3, r2
   173b0:	sub	r1, r3, r1
   173b4:	mov	r2, #1
   173b8:	ldr	r3, [sp]
   173bc:	mul	r1, r3, r1
   173c0:	ldr	r0, [r4]
   173c4:	bl	1694 <fseek@plt>
   173c8:	ldr	r3, [sp, #192]	; 0xc0
   173cc:	cmp	r3, #1
   173d0:	ble	17340 <ReadDataSlabN+0xbdc>
   173d4:	ldr	r3, [sp, #76]	; 0x4c
   173d8:	add	r3, r3, #1
   173dc:	str	r3, [sp, #76]	; 0x4c
   173e0:	ldr	r2, [sp, #208]	; 0xd0
   173e4:	ldr	r1, [r2, #4]
   173e8:	sdiv	r2, r3, r1
   173ec:	mls	r3, r1, r2, r3
   173f0:	cmp	r3, #0
   173f4:	bne	17314 <ReadDataSlabN+0xbb0>
   173f8:	add	r7, sp, #76	; 0x4c
   173fc:	ldr	r3, [sp, #208]	; 0xd0
   17400:	add	r9, r3, #4
   17404:	add	r8, sp, #36	; 0x24
   17408:	ldr	r4, [sp, #28]
   1740c:	b	172c4 <ReadDataSlabN+0xb60>
   17410:	mov	r0, #0
   17414:	b	16d04 <ReadDataSlabN+0x5a0>
   17418:	mov	r2, #1
   1741c:	ldr	r3, [sp]
   17420:	mul	r1, r3, r1
   17424:	ldr	r3, [sp, #4]
   17428:	ldr	r0, [r3]
   1742c:	bl	1694 <fseek@plt>
   17430:	ldr	r3, [fp]
   17434:	add	r5, r5, r3
   17438:	b	17554 <ReadDataSlabN+0xdf0>
   1743c:	sub	r4, r4, r3
   17440:	ldr	r7, [r9, #-8]
   17444:	ldr	r1, [fp, r6, lsl #2]
   17448:	mla	r1, r1, r7, r4
   1744c:	mov	r2, #1
   17450:	ldr	r3, [sp]
   17454:	mul	r1, r3, r1
   17458:	ldr	r3, [sp, #4]
   1745c:	ldr	r0, [r3]
   17460:	bl	1694 <fseek@plt>
   17464:	ldr	r3, [fp, r6, lsl #2]
   17468:	mla	r4, r3, r7, r4
   1746c:	add	r5, r5, r4
   17470:	add	r6, r6, #1
   17474:	ldr	r3, [sp, #192]	; 0xc0
   17478:	cmp	r3, r6
   1747c:	beq	17648 <ReadDataSlabN+0xee4>
   17480:	ldr	r3, [r8]
   17484:	add	r3, r3, #1
   17488:	str	r3, [r8]
   1748c:	ldr	r1, [sl, #4]!
   17490:	sdiv	r2, r3, r1
   17494:	mls	r3, r1, r2, r3
   17498:	cmp	r3, #0
   1749c:	bne	174fc <ReadDataSlabN+0xd98>
   174a0:	mov	r3, #0
   174a4:	str	r3, [r8], #4
   174a8:	ldr	r4, [r9], #4
   174ac:	sdiv	r3, r5, r4
   174b0:	mls	r3, r4, r3, r5
   174b4:	cmp	r3, #0
   174b8:	bne	1743c <ReadDataSlabN+0xcd8>
   174bc:	ldr	r1, [fp, r6, lsl #2]
   174c0:	cmp	r1, #0
   174c4:	beq	17470 <ReadDataSlabN+0xd0c>
   174c8:	ldr	r4, [r9, #-8]
   174cc:	mul	r1, r4, r1
   174d0:	mov	r2, #1
   174d4:	ldr	r3, [sp]
   174d8:	mul	r1, r3, r1
   174dc:	ldr	r3, [sp, #4]
   174e0:	ldr	r0, [r3]
   174e4:	bl	1694 <fseek@plt>
   174e8:	ldr	r3, [fp, r6, lsl #2]
   174ec:	mla	r5, r3, r4, r5
   174f0:	b	17470 <ReadDataSlabN+0xd0c>
   174f4:	mov	r6, #1
   174f8:	b	17500 <ReadDataSlabN+0xd9c>
   174fc:	ldr	r4, [sp, #204]	; 0xcc
   17500:	add	r3, sp, #152	; 0x98
   17504:	add	r6, r3, r6, lsl #2
   17508:	ldr	r1, [r6, #-40]	; 0xffffffd8
   1750c:	add	r5, r5, r1
   17510:	mov	r2, #1
   17514:	ldr	r3, [sp]
   17518:	mul	r1, r3, r1
   1751c:	ldr	r3, [sp, #4]
   17520:	ldr	r0, [r3]
   17524:	bl	1694 <fseek@plt>
   17528:	ldr	r3, [sp, #208]	; 0xd0
   1752c:	ldr	r3, [r3]
   17530:	ldr	r2, [sp, #20]
   17534:	add	r3, r2, r3
   17538:	str	r3, [sp, #20]
   1753c:	ldr	r2, [sp, #16]
   17540:	cmp	r3, r2
   17544:	bge	17650 <ReadDataSlabN+0xeec>
   17548:	ldr	r1, [fp]
   1754c:	cmp	r1, #0
   17550:	bne	17418 <ReadDataSlabN+0xcb4>
   17554:	ldr	r3, [sp, #208]	; 0xd0
   17558:	ldr	r1, [r3]
   1755c:	cmp	r1, #0
   17560:	ble	175c8 <ReadDataSlabN+0xe64>
   17564:	ldr	r3, [sp, #12]
   17568:	ldr	r2, [sp, #20]
   1756c:	add	r7, r3, r2, lsl #3
   17570:	mov	r6, #0
   17574:	ldr	r9, [sp]
   17578:	ldr	sl, [sp, #208]	; 0xd0
   1757c:	ldr	r8, [sp, #4]
   17580:	mov	r3, #1
   17584:	ldr	r2, [sp, #8]
   17588:	mov	r1, r7
   1758c:	mov	r0, r8
   17590:	bl	80c4 <ReadInt64Data>
   17594:	ldr	r1, [r4]
   17598:	sub	r1, r1, #1
   1759c:	mov	r2, #1
   175a0:	mul	r1, r9, r1
   175a4:	ldr	r0, [r8]
   175a8:	bl	1694 <fseek@plt>
   175ac:	ldr	r3, [r4]
   175b0:	add	r5, r5, r3
   175b4:	add	r6, r6, #1
   175b8:	ldr	r1, [sl]
   175bc:	add	r7, r7, #8
   175c0:	cmp	r1, r6
   175c4:	bgt	17580 <ReadDataSlabN+0xe1c>
   175c8:	ldr	r3, [sp, #196]	; 0xc4
   175cc:	ldr	r3, [r3]
   175d0:	ldr	r2, [fp]
   175d4:	sub	r3, r3, r2
   175d8:	ldr	r2, [r4]
   175dc:	mls	r1, r2, r1, r3
   175e0:	add	r5, r5, r1
   175e4:	mov	r2, #1
   175e8:	ldr	r3, [sp]
   175ec:	mul	r1, r3, r1
   175f0:	ldr	r3, [sp, #4]
   175f4:	ldr	r0, [r3]
   175f8:	bl	1694 <fseek@plt>
   175fc:	ldr	r3, [sp, #192]	; 0xc0
   17600:	cmp	r3, #1
   17604:	ble	17528 <ReadDataSlabN+0xdc4>
   17608:	ldr	r3, [sp, #76]	; 0x4c
   1760c:	add	r3, r3, #1
   17610:	str	r3, [sp, #76]	; 0x4c
   17614:	ldr	r2, [sp, #208]	; 0xd0
   17618:	ldr	r1, [r2, #4]
   1761c:	sdiv	r2, r3, r1
   17620:	mls	r3, r1, r2, r3
   17624:	cmp	r3, #0
   17628:	bne	174f4 <ReadDataSlabN+0xd90>
   1762c:	add	r8, sp, #76	; 0x4c
   17630:	ldr	r3, [sp, #208]	; 0xd0
   17634:	add	sl, r3, #4
   17638:	add	r9, sp, #36	; 0x24
   1763c:	mov	r6, #1
   17640:	str	r4, [sp, #204]	; 0xcc
   17644:	b	174a0 <ReadDataSlabN+0xd3c>
   17648:	ldr	r4, [sp, #204]	; 0xcc
   1764c:	b	17528 <ReadDataSlabN+0xdc4>
   17650:	mov	r0, #0
   17654:	b	16d04 <ReadDataSlabN+0x5a0>
   17658:	ldr	r3, [r4]
   1765c:	sub	r3, r3, #1
   17660:	str	r3, [sp, #112]	; 0x70
   17664:	ldr	r3, [sp, #196]	; 0xc4
   17668:	ldr	r3, [r3]
   1766c:	str	r3, [sp, #32]
   17670:	ldr	r3, [sp, #208]	; 0xd0
   17674:	ldr	r3, [r3]
   17678:	str	r3, [sp, #16]
   1767c:	ldr	r3, [sp, #192]	; 0xc0
   17680:	cmp	r3, #1
   17684:	ble	176ac <ReadDataSlabN+0xf48>
   17688:	mov	r8, r4
   1768c:	add	sl, sp, #116	; 0x74
   17690:	ldr	lr, [sp, #196]	; 0xc4
   17694:	add	r7, sp, #32
   17698:	mov	r9, lr
   1769c:	mov	r6, #1
   176a0:	mov	r5, #0
   176a4:	str	r4, [sp, #204]	; 0xcc
   176a8:	b	19fe0 <ReadDataSlabN+0x387c>
   176ac:	mov	r5, #0
   176b0:	b	1a070 <ReadDataSlabN+0x390c>
   176b4:	ldr	r3, [sp, #16]
   176b8:	cmp	r3, #0
   176bc:	ble	196cc <ReadDataSlabN+0x2f68>
   176c0:	mov	r3, #0
   176c4:	str	r3, [sp, #24]
   176c8:	mov	sl, r3
   176cc:	b	177fc <ReadDataSlabN+0x1098>
   176d0:	mov	r2, #1
   176d4:	ldr	r3, [sp]
   176d8:	mul	r1, r3, r1
   176dc:	ldr	r3, [sp, #4]
   176e0:	ldr	r0, [r3]
   176e4:	bl	1694 <fseek@plt>
   176e8:	ldr	r3, [fp]
   176ec:	add	r5, r5, r3
   176f0:	b	17808 <ReadDataSlabN+0x10a4>
   176f4:	sub	r6, r6, r3
   176f8:	ldr	r3, [r8, #-8]
   176fc:	ldr	r1, [fp, r4, lsl #2]
   17700:	str	r3, [sp, #20]
   17704:	mla	r1, r1, r3, r6
   17708:	mov	r2, #1
   1770c:	ldr	r0, [sp]
   17710:	mul	r1, r0, r1
   17714:	ldr	r0, [sp, #4]
   17718:	ldr	r0, [r0]
   1771c:	bl	1694 <fseek@plt>
   17720:	ldr	r3, [fp, r4, lsl #2]
   17724:	ldr	r2, [sp, #20]
   17728:	mla	r6, r3, r2, r6
   1772c:	add	r5, r5, r6
   17730:	add	r4, r4, #1
   17734:	ldr	r3, [sp, #192]	; 0xc0
   17738:	cmp	r3, r4
   1773c:	beq	177dc <ReadDataSlabN+0x1078>
   17740:	ldr	r3, [r7]
   17744:	add	r3, r3, #1
   17748:	str	r3, [r7]
   1774c:	ldr	r1, [r9, #4]!
   17750:	sdiv	r2, r3, r1
   17754:	mls	r3, r1, r2, r3
   17758:	cmp	r3, #0
   1775c:	bne	177b4 <ReadDataSlabN+0x1050>
   17760:	str	sl, [r7], #4
   17764:	ldr	r6, [r8], #4
   17768:	sdiv	r3, r5, r6
   1776c:	mls	r3, r6, r3, r5
   17770:	cmp	r3, #0
   17774:	bne	176f4 <ReadDataSlabN+0xf90>
   17778:	ldr	r1, [fp, r4, lsl #2]
   1777c:	cmp	r1, #0
   17780:	beq	17730 <ReadDataSlabN+0xfcc>
   17784:	ldr	r6, [r8, #-8]
   17788:	mul	r1, r6, r1
   1778c:	mov	r2, #1
   17790:	ldr	r3, [sp]
   17794:	mul	r1, r3, r1
   17798:	ldr	r3, [sp, #4]
   1779c:	ldr	r0, [r3]
   177a0:	bl	1694 <fseek@plt>
   177a4:	ldr	r3, [fp, r4, lsl #2]
   177a8:	mla	r5, r3, r6, r5
   177ac:	b	17730 <ReadDataSlabN+0xfcc>
   177b0:	ldr	r4, [sp, #28]
   177b4:	add	r3, sp, #152	; 0x98
   177b8:	add	r4, r3, r4, lsl #2
   177bc:	ldr	r1, [r4, #-40]	; 0xffffffd8
   177c0:	add	r5, r5, r1
   177c4:	mov	r2, #1
   177c8:	ldr	r3, [sp]
   177cc:	mul	r1, r3, r1
   177d0:	ldr	r3, [sp, #4]
   177d4:	ldr	r0, [r3]
   177d8:	bl	1694 <fseek@plt>
   177dc:	ldr	r3, [sp, #208]	; 0xd0
   177e0:	ldr	r3, [r3]
   177e4:	ldr	r2, [sp, #24]
   177e8:	add	r3, r2, r3
   177ec:	str	r3, [sp, #24]
   177f0:	ldr	r2, [sp, #16]
   177f4:	cmp	r3, r2
   177f8:	bge	178ac <ReadDataSlabN+0x1148>
   177fc:	ldr	r1, [fp]
   17800:	cmp	r1, #0
   17804:	bne	176d0 <ReadDataSlabN+0xf6c>
   17808:	ldr	r3, [sp, #208]	; 0xd0
   1780c:	ldr	r3, [r3]
   17810:	ldr	r2, [sp, #8]
   17814:	ldr	r1, [sp, #12]
   17818:	ldr	r0, [sp, #24]
   1781c:	add	r1, r1, r0, lsl #3
   17820:	ldr	r4, [sp, #4]
   17824:	mov	r0, r4
   17828:	bl	9dd8 <ReadUInt64Data>
   1782c:	ldr	r3, [sp, #196]	; 0xc4
   17830:	ldr	r3, [r3]
   17834:	ldr	r1, [fp]
   17838:	sub	r2, r3, r1
   1783c:	add	r5, r2, r5
   17840:	ldr	r2, [sp, #208]	; 0xd0
   17844:	ldr	r2, [r2]
   17848:	sub	r3, r3, r2
   1784c:	sub	r1, r3, r1
   17850:	mov	r2, #1
   17854:	ldr	r3, [sp]
   17858:	mul	r1, r3, r1
   1785c:	ldr	r0, [r4]
   17860:	bl	1694 <fseek@plt>
   17864:	ldr	r3, [sp, #192]	; 0xc0
   17868:	cmp	r3, #1
   1786c:	ble	177dc <ReadDataSlabN+0x1078>
   17870:	ldr	r3, [sp, #76]	; 0x4c
   17874:	add	r3, r3, #1
   17878:	str	r3, [sp, #76]	; 0x4c
   1787c:	ldr	r2, [sp, #208]	; 0xd0
   17880:	ldr	r1, [r2, #4]
   17884:	sdiv	r2, r3, r1
   17888:	mls	r3, r1, r2, r3
   1788c:	cmp	r3, #0
   17890:	bne	177b0 <ReadDataSlabN+0x104c>
   17894:	add	r7, sp, #76	; 0x4c
   17898:	ldr	r3, [sp, #208]	; 0xd0
   1789c:	add	r9, r3, #4
   178a0:	add	r8, sp, #36	; 0x24
   178a4:	ldr	r4, [sp, #28]
   178a8:	b	17760 <ReadDataSlabN+0xffc>
   178ac:	mov	r0, #0
   178b0:	b	16d04 <ReadDataSlabN+0x5a0>
   178b4:	mov	r2, #1
   178b8:	ldr	r3, [sp]
   178bc:	mul	r1, r3, r1
   178c0:	ldr	r3, [sp, #4]
   178c4:	ldr	r0, [r3]
   178c8:	bl	1694 <fseek@plt>
   178cc:	ldr	r3, [fp]
   178d0:	add	r5, r5, r3
   178d4:	b	179f0 <ReadDataSlabN+0x128c>
   178d8:	sub	r4, r4, r3
   178dc:	ldr	r7, [r9, #-8]
   178e0:	ldr	r1, [fp, r6, lsl #2]
   178e4:	mla	r1, r1, r7, r4
   178e8:	mov	r2, #1
   178ec:	ldr	r3, [sp]
   178f0:	mul	r1, r3, r1
   178f4:	ldr	r3, [sp, #4]
   178f8:	ldr	r0, [r3]
   178fc:	bl	1694 <fseek@plt>
   17900:	ldr	r3, [fp, r6, lsl #2]
   17904:	mla	r4, r3, r7, r4
   17908:	add	r5, r5, r4
   1790c:	add	r6, r6, #1
   17910:	ldr	r3, [sp, #192]	; 0xc0
   17914:	cmp	r3, r6
   17918:	beq	17ae4 <ReadDataSlabN+0x1380>
   1791c:	ldr	r3, [r8]
   17920:	add	r3, r3, #1
   17924:	str	r3, [r8]
   17928:	ldr	r1, [sl, #4]!
   1792c:	sdiv	r2, r3, r1
   17930:	mls	r3, r1, r2, r3
   17934:	cmp	r3, #0
   17938:	bne	17998 <ReadDataSlabN+0x1234>
   1793c:	mov	r3, #0
   17940:	str	r3, [r8], #4
   17944:	ldr	r4, [r9], #4
   17948:	sdiv	r3, r5, r4
   1794c:	mls	r3, r4, r3, r5
   17950:	cmp	r3, #0
   17954:	bne	178d8 <ReadDataSlabN+0x1174>
   17958:	ldr	r1, [fp, r6, lsl #2]
   1795c:	cmp	r1, #0
   17960:	beq	1790c <ReadDataSlabN+0x11a8>
   17964:	ldr	r4, [r9, #-8]
   17968:	mul	r1, r4, r1
   1796c:	mov	r2, #1
   17970:	ldr	r3, [sp]
   17974:	mul	r1, r3, r1
   17978:	ldr	r3, [sp, #4]
   1797c:	ldr	r0, [r3]
   17980:	bl	1694 <fseek@plt>
   17984:	ldr	r3, [fp, r6, lsl #2]
   17988:	mla	r5, r3, r4, r5
   1798c:	b	1790c <ReadDataSlabN+0x11a8>
   17990:	mov	r6, #1
   17994:	b	1799c <ReadDataSlabN+0x1238>
   17998:	ldr	r4, [sp, #204]	; 0xcc
   1799c:	add	r3, sp, #152	; 0x98
   179a0:	add	r6, r3, r6, lsl #2
   179a4:	ldr	r1, [r6, #-40]	; 0xffffffd8
   179a8:	add	r5, r5, r1
   179ac:	mov	r2, #1
   179b0:	ldr	r3, [sp]
   179b4:	mul	r1, r3, r1
   179b8:	ldr	r3, [sp, #4]
   179bc:	ldr	r0, [r3]
   179c0:	bl	1694 <fseek@plt>
   179c4:	ldr	r3, [sp, #208]	; 0xd0
   179c8:	ldr	r3, [r3]
   179cc:	ldr	r2, [sp, #20]
   179d0:	add	r3, r2, r3
   179d4:	str	r3, [sp, #20]
   179d8:	ldr	r2, [sp, #16]
   179dc:	cmp	r3, r2
   179e0:	bge	17aec <ReadDataSlabN+0x1388>
   179e4:	ldr	r1, [fp]
   179e8:	cmp	r1, #0
   179ec:	bne	178b4 <ReadDataSlabN+0x1150>
   179f0:	ldr	r3, [sp, #208]	; 0xd0
   179f4:	ldr	r1, [r3]
   179f8:	cmp	r1, #0
   179fc:	ble	17a64 <ReadDataSlabN+0x1300>
   17a00:	ldr	r3, [sp, #12]
   17a04:	ldr	r2, [sp, #20]
   17a08:	add	r7, r3, r2, lsl #3
   17a0c:	mov	r6, #0
   17a10:	ldr	r9, [sp]
   17a14:	ldr	sl, [sp, #208]	; 0xd0
   17a18:	ldr	r8, [sp, #4]
   17a1c:	mov	r3, #1
   17a20:	ldr	r2, [sp, #8]
   17a24:	mov	r1, r7
   17a28:	mov	r0, r8
   17a2c:	bl	9dd8 <ReadUInt64Data>
   17a30:	ldr	r1, [r4]
   17a34:	sub	r1, r1, #1
   17a38:	mov	r2, #1
   17a3c:	mul	r1, r9, r1
   17a40:	ldr	r0, [r8]
   17a44:	bl	1694 <fseek@plt>
   17a48:	ldr	r3, [r4]
   17a4c:	add	r5, r5, r3
   17a50:	add	r6, r6, #1
   17a54:	ldr	r1, [sl]
   17a58:	add	r7, r7, #8
   17a5c:	cmp	r1, r6
   17a60:	bgt	17a1c <ReadDataSlabN+0x12b8>
   17a64:	ldr	r3, [sp, #196]	; 0xc4
   17a68:	ldr	r3, [r3]
   17a6c:	ldr	r2, [fp]
   17a70:	sub	r3, r3, r2
   17a74:	ldr	r2, [r4]
   17a78:	mls	r1, r2, r1, r3
   17a7c:	add	r5, r5, r1
   17a80:	mov	r2, #1
   17a84:	ldr	r3, [sp]
   17a88:	mul	r1, r3, r1
   17a8c:	ldr	r3, [sp, #4]
   17a90:	ldr	r0, [r3]
   17a94:	bl	1694 <fseek@plt>
   17a98:	ldr	r3, [sp, #192]	; 0xc0
   17a9c:	cmp	r3, #1
   17aa0:	ble	179c4 <ReadDataSlabN+0x1260>
   17aa4:	ldr	r3, [sp, #76]	; 0x4c
   17aa8:	add	r3, r3, #1
   17aac:	str	r3, [sp, #76]	; 0x4c
   17ab0:	ldr	r2, [sp, #208]	; 0xd0
   17ab4:	ldr	r1, [r2, #4]
   17ab8:	sdiv	r2, r3, r1
   17abc:	mls	r3, r1, r2, r3
   17ac0:	cmp	r3, #0
   17ac4:	bne	17990 <ReadDataSlabN+0x122c>
   17ac8:	add	r8, sp, #76	; 0x4c
   17acc:	ldr	r3, [sp, #208]	; 0xd0
   17ad0:	add	sl, r3, #4
   17ad4:	add	r9, sp, #36	; 0x24
   17ad8:	mov	r6, #1
   17adc:	str	r4, [sp, #204]	; 0xcc
   17ae0:	b	1793c <ReadDataSlabN+0x11d8>
   17ae4:	ldr	r4, [sp, #204]	; 0xcc
   17ae8:	b	179c4 <ReadDataSlabN+0x1260>
   17aec:	mov	r0, #0
   17af0:	b	16d04 <ReadDataSlabN+0x5a0>
   17af4:	ldr	r3, [r4]
   17af8:	sub	r3, r3, #1
   17afc:	str	r3, [sp, #112]	; 0x70
   17b00:	ldr	r3, [sp, #196]	; 0xc4
   17b04:	ldr	r3, [r3]
   17b08:	str	r3, [sp, #32]
   17b0c:	ldr	r3, [sp, #208]	; 0xd0
   17b10:	ldr	r3, [r3]
   17b14:	str	r3, [sp, #16]
   17b18:	ldr	r3, [sp, #192]	; 0xc0
   17b1c:	cmp	r3, #1
   17b20:	ble	17b48 <ReadDataSlabN+0x13e4>
   17b24:	mov	r8, r4
   17b28:	add	sl, sp, #116	; 0x74
   17b2c:	ldr	lr, [sp, #196]	; 0xc4
   17b30:	add	r7, sp, #32
   17b34:	mov	r9, lr
   17b38:	mov	r6, #1
   17b3c:	mov	r5, #0
   17b40:	str	r4, [sp, #204]	; 0xcc
   17b44:	b	19cf8 <ReadDataSlabN+0x3594>
   17b48:	mov	r5, #0
   17b4c:	b	19d88 <ReadDataSlabN+0x3624>
   17b50:	ldr	r3, [sp, #16]
   17b54:	cmp	r3, #0
   17b58:	ble	196d4 <ReadDataSlabN+0x2f70>
   17b5c:	mov	r3, #0
   17b60:	str	r3, [sp, #24]
   17b64:	mov	sl, r3
   17b68:	b	17c98 <ReadDataSlabN+0x1534>
   17b6c:	mov	r2, #1
   17b70:	ldr	r3, [sp]
   17b74:	mul	r1, r3, r1
   17b78:	ldr	r3, [sp, #4]
   17b7c:	ldr	r0, [r3]
   17b80:	bl	1694 <fseek@plt>
   17b84:	ldr	r3, [fp]
   17b88:	add	r5, r5, r3
   17b8c:	b	17ca4 <ReadDataSlabN+0x1540>
   17b90:	sub	r6, r6, r3
   17b94:	ldr	r3, [r8, #-8]
   17b98:	ldr	r1, [fp, r4, lsl #2]
   17b9c:	str	r3, [sp, #20]
   17ba0:	mla	r1, r1, r3, r6
   17ba4:	mov	r2, #1
   17ba8:	ldr	r0, [sp]
   17bac:	mul	r1, r0, r1
   17bb0:	ldr	r0, [sp, #4]
   17bb4:	ldr	r0, [r0]
   17bb8:	bl	1694 <fseek@plt>
   17bbc:	ldr	r3, [fp, r4, lsl #2]
   17bc0:	ldr	r2, [sp, #20]
   17bc4:	mla	r6, r3, r2, r6
   17bc8:	add	r5, r5, r6
   17bcc:	add	r4, r4, #1
   17bd0:	ldr	r3, [sp, #192]	; 0xc0
   17bd4:	cmp	r3, r4
   17bd8:	beq	17c78 <ReadDataSlabN+0x1514>
   17bdc:	ldr	r3, [r7]
   17be0:	add	r3, r3, #1
   17be4:	str	r3, [r7]
   17be8:	ldr	r1, [r9, #4]!
   17bec:	sdiv	r2, r3, r1
   17bf0:	mls	r3, r1, r2, r3
   17bf4:	cmp	r3, #0
   17bf8:	bne	17c50 <ReadDataSlabN+0x14ec>
   17bfc:	str	sl, [r7], #4
   17c00:	ldr	r6, [r8], #4
   17c04:	sdiv	r3, r5, r6
   17c08:	mls	r3, r6, r3, r5
   17c0c:	cmp	r3, #0
   17c10:	bne	17b90 <ReadDataSlabN+0x142c>
   17c14:	ldr	r1, [fp, r4, lsl #2]
   17c18:	cmp	r1, #0
   17c1c:	beq	17bcc <ReadDataSlabN+0x1468>
   17c20:	ldr	r6, [r8, #-8]
   17c24:	mul	r1, r6, r1
   17c28:	mov	r2, #1
   17c2c:	ldr	r3, [sp]
   17c30:	mul	r1, r3, r1
   17c34:	ldr	r3, [sp, #4]
   17c38:	ldr	r0, [r3]
   17c3c:	bl	1694 <fseek@plt>
   17c40:	ldr	r3, [fp, r4, lsl #2]
   17c44:	mla	r5, r3, r6, r5
   17c48:	b	17bcc <ReadDataSlabN+0x1468>
   17c4c:	ldr	r4, [sp, #28]
   17c50:	add	r3, sp, #152	; 0x98
   17c54:	add	r4, r3, r4, lsl #2
   17c58:	ldr	r1, [r4, #-40]	; 0xffffffd8
   17c5c:	add	r5, r5, r1
   17c60:	mov	r2, #1
   17c64:	ldr	r3, [sp]
   17c68:	mul	r1, r3, r1
   17c6c:	ldr	r3, [sp, #4]
   17c70:	ldr	r0, [r3]
   17c74:	bl	1694 <fseek@plt>
   17c78:	ldr	r3, [sp, #208]	; 0xd0
   17c7c:	ldr	r3, [r3]
   17c80:	ldr	r2, [sp, #24]
   17c84:	add	r3, r2, r3
   17c88:	str	r3, [sp, #24]
   17c8c:	ldr	r2, [sp, #16]
   17c90:	cmp	r3, r2
   17c94:	bge	17d48 <ReadDataSlabN+0x15e4>
   17c98:	ldr	r1, [fp]
   17c9c:	cmp	r1, #0
   17ca0:	bne	17b6c <ReadDataSlabN+0x1408>
   17ca4:	ldr	r3, [sp, #208]	; 0xd0
   17ca8:	ldr	r3, [r3]
   17cac:	ldr	r2, [sp, #8]
   17cb0:	ldr	r1, [sp, #12]
   17cb4:	ldr	r0, [sp, #24]
   17cb8:	add	r1, r1, r0, lsl #2
   17cbc:	ldr	r4, [sp, #4]
   17cc0:	mov	r0, r4
   17cc4:	bl	baec <ReadInt32Data>
   17cc8:	ldr	r3, [sp, #196]	; 0xc4
   17ccc:	ldr	r3, [r3]
   17cd0:	ldr	r1, [fp]
   17cd4:	sub	r2, r3, r1
   17cd8:	add	r5, r2, r5
   17cdc:	ldr	r2, [sp, #208]	; 0xd0
   17ce0:	ldr	r2, [r2]
   17ce4:	sub	r3, r3, r2
   17ce8:	sub	r1, r3, r1
   17cec:	mov	r2, #1
   17cf0:	ldr	r3, [sp]
   17cf4:	mul	r1, r3, r1
   17cf8:	ldr	r0, [r4]
   17cfc:	bl	1694 <fseek@plt>
   17d00:	ldr	r3, [sp, #192]	; 0xc0
   17d04:	cmp	r3, #1
   17d08:	ble	17c78 <ReadDataSlabN+0x1514>
   17d0c:	ldr	r3, [sp, #76]	; 0x4c
   17d10:	add	r3, r3, #1
   17d14:	str	r3, [sp, #76]	; 0x4c
   17d18:	ldr	r2, [sp, #208]	; 0xd0
   17d1c:	ldr	r1, [r2, #4]
   17d20:	sdiv	r2, r3, r1
   17d24:	mls	r3, r1, r2, r3
   17d28:	cmp	r3, #0
   17d2c:	bne	17c4c <ReadDataSlabN+0x14e8>
   17d30:	add	r7, sp, #76	; 0x4c
   17d34:	ldr	r3, [sp, #208]	; 0xd0
   17d38:	add	r9, r3, #4
   17d3c:	add	r8, sp, #36	; 0x24
   17d40:	ldr	r4, [sp, #28]
   17d44:	b	17bfc <ReadDataSlabN+0x1498>
   17d48:	mov	r0, #0
   17d4c:	b	16d04 <ReadDataSlabN+0x5a0>
   17d50:	mov	r2, #1
   17d54:	ldr	r3, [sp]
   17d58:	mul	r1, r3, r1
   17d5c:	ldr	r3, [sp, #4]
   17d60:	ldr	r0, [r3]
   17d64:	bl	1694 <fseek@plt>
   17d68:	ldr	r3, [fp]
   17d6c:	add	r5, r5, r3
   17d70:	b	17e8c <ReadDataSlabN+0x1728>
   17d74:	sub	r4, r4, r3
   17d78:	ldr	r7, [r9, #-8]
   17d7c:	ldr	r1, [fp, r6, lsl #2]
   17d80:	mla	r1, r1, r7, r4
   17d84:	mov	r2, #1
   17d88:	ldr	r3, [sp]
   17d8c:	mul	r1, r3, r1
   17d90:	ldr	r3, [sp, #4]
   17d94:	ldr	r0, [r3]
   17d98:	bl	1694 <fseek@plt>
   17d9c:	ldr	r3, [fp, r6, lsl #2]
   17da0:	mla	r4, r3, r7, r4
   17da4:	add	r5, r5, r4
   17da8:	add	r6, r6, #1
   17dac:	ldr	r3, [sp, #192]	; 0xc0
   17db0:	cmp	r3, r6
   17db4:	beq	17f80 <ReadDataSlabN+0x181c>
   17db8:	ldr	r3, [r8]
   17dbc:	add	r3, r3, #1
   17dc0:	str	r3, [r8]
   17dc4:	ldr	r1, [sl, #4]!
   17dc8:	sdiv	r2, r3, r1
   17dcc:	mls	r3, r1, r2, r3
   17dd0:	cmp	r3, #0
   17dd4:	bne	17e34 <ReadDataSlabN+0x16d0>
   17dd8:	mov	r3, #0
   17ddc:	str	r3, [r8], #4
   17de0:	ldr	r4, [r9], #4
   17de4:	sdiv	r3, r5, r4
   17de8:	mls	r3, r4, r3, r5
   17dec:	cmp	r3, #0
   17df0:	bne	17d74 <ReadDataSlabN+0x1610>
   17df4:	ldr	r1, [fp, r6, lsl #2]
   17df8:	cmp	r1, #0
   17dfc:	beq	17da8 <ReadDataSlabN+0x1644>
   17e00:	ldr	r4, [r9, #-8]
   17e04:	mul	r1, r4, r1
   17e08:	mov	r2, #1
   17e0c:	ldr	r3, [sp]
   17e10:	mul	r1, r3, r1
   17e14:	ldr	r3, [sp, #4]
   17e18:	ldr	r0, [r3]
   17e1c:	bl	1694 <fseek@plt>
   17e20:	ldr	r3, [fp, r6, lsl #2]
   17e24:	mla	r5, r3, r4, r5
   17e28:	b	17da8 <ReadDataSlabN+0x1644>
   17e2c:	mov	r6, #1
   17e30:	b	17e38 <ReadDataSlabN+0x16d4>
   17e34:	ldr	r4, [sp, #204]	; 0xcc
   17e38:	add	r3, sp, #152	; 0x98
   17e3c:	add	r6, r3, r6, lsl #2
   17e40:	ldr	r1, [r6, #-40]	; 0xffffffd8
   17e44:	add	r5, r5, r1
   17e48:	mov	r2, #1
   17e4c:	ldr	r3, [sp]
   17e50:	mul	r1, r3, r1
   17e54:	ldr	r3, [sp, #4]
   17e58:	ldr	r0, [r3]
   17e5c:	bl	1694 <fseek@plt>
   17e60:	ldr	r3, [sp, #208]	; 0xd0
   17e64:	ldr	r3, [r3]
   17e68:	ldr	r2, [sp, #20]
   17e6c:	add	r3, r2, r3
   17e70:	str	r3, [sp, #20]
   17e74:	ldr	r2, [sp, #16]
   17e78:	cmp	r3, r2
   17e7c:	bge	17f88 <ReadDataSlabN+0x1824>
   17e80:	ldr	r1, [fp]
   17e84:	cmp	r1, #0
   17e88:	bne	17d50 <ReadDataSlabN+0x15ec>
   17e8c:	ldr	r3, [sp, #208]	; 0xd0
   17e90:	ldr	r1, [r3]
   17e94:	cmp	r1, #0
   17e98:	ble	17f00 <ReadDataSlabN+0x179c>
   17e9c:	ldr	r3, [sp, #12]
   17ea0:	ldr	r2, [sp, #20]
   17ea4:	add	r7, r3, r2, lsl #2
   17ea8:	mov	r6, #0
   17eac:	ldr	r9, [sp]
   17eb0:	ldr	sl, [sp, #208]	; 0xd0
   17eb4:	ldr	r8, [sp, #4]
   17eb8:	mov	r3, #1
   17ebc:	ldr	r2, [sp, #8]
   17ec0:	mov	r1, r7
   17ec4:	mov	r0, r8
   17ec8:	bl	baec <ReadInt32Data>
   17ecc:	ldr	r1, [r4]
   17ed0:	sub	r1, r1, #1
   17ed4:	mov	r2, #1
   17ed8:	mul	r1, r9, r1
   17edc:	ldr	r0, [r8]
   17ee0:	bl	1694 <fseek@plt>
   17ee4:	ldr	r3, [r4]
   17ee8:	add	r5, r5, r3
   17eec:	add	r6, r6, #1
   17ef0:	ldr	r1, [sl]
   17ef4:	add	r7, r7, #4
   17ef8:	cmp	r1, r6
   17efc:	bgt	17eb8 <ReadDataSlabN+0x1754>
   17f00:	ldr	r3, [sp, #196]	; 0xc4
   17f04:	ldr	r3, [r3]
   17f08:	ldr	r2, [fp]
   17f0c:	sub	r3, r3, r2
   17f10:	ldr	r2, [r4]
   17f14:	mls	r1, r2, r1, r3
   17f18:	add	r5, r5, r1
   17f1c:	mov	r2, #1
   17f20:	ldr	r3, [sp]
   17f24:	mul	r1, r3, r1
   17f28:	ldr	r3, [sp, #4]
   17f2c:	ldr	r0, [r3]
   17f30:	bl	1694 <fseek@plt>
   17f34:	ldr	r3, [sp, #192]	; 0xc0
   17f38:	cmp	r3, #1
   17f3c:	ble	17e60 <ReadDataSlabN+0x16fc>
   17f40:	ldr	r3, [sp, #76]	; 0x4c
   17f44:	add	r3, r3, #1
   17f48:	str	r3, [sp, #76]	; 0x4c
   17f4c:	ldr	r2, [sp, #208]	; 0xd0
   17f50:	ldr	r1, [r2, #4]
   17f54:	sdiv	r2, r3, r1
   17f58:	mls	r3, r1, r2, r3
   17f5c:	cmp	r3, #0
   17f60:	bne	17e2c <ReadDataSlabN+0x16c8>
   17f64:	add	r8, sp, #76	; 0x4c
   17f68:	ldr	r3, [sp, #208]	; 0xd0
   17f6c:	add	sl, r3, #4
   17f70:	add	r9, sp, #36	; 0x24
   17f74:	mov	r6, #1
   17f78:	str	r4, [sp, #204]	; 0xcc
   17f7c:	b	17dd8 <ReadDataSlabN+0x1674>
   17f80:	ldr	r4, [sp, #204]	; 0xcc
   17f84:	b	17e60 <ReadDataSlabN+0x16fc>
   17f88:	mov	r0, #0
   17f8c:	b	16d04 <ReadDataSlabN+0x5a0>
   17f90:	ldr	r3, [r4]
   17f94:	sub	r3, r3, #1
   17f98:	str	r3, [sp, #112]	; 0x70
   17f9c:	ldr	r3, [sp, #196]	; 0xc4
   17fa0:	ldr	r3, [r3]
   17fa4:	str	r3, [sp, #32]
   17fa8:	ldr	r3, [sp, #208]	; 0xd0
   17fac:	ldr	r3, [r3]
   17fb0:	str	r3, [sp, #16]
   17fb4:	ldr	r3, [sp, #192]	; 0xc0
   17fb8:	cmp	r3, #1
   17fbc:	ble	17fe4 <ReadDataSlabN+0x1880>
   17fc0:	mov	r8, r4
   17fc4:	add	sl, sp, #116	; 0x74
   17fc8:	ldr	lr, [sp, #196]	; 0xc4
   17fcc:	add	r7, sp, #32
   17fd0:	mov	r9, lr
   17fd4:	mov	r6, #1
   17fd8:	mov	r5, #0
   17fdc:	str	r4, [sp, #204]	; 0xcc
   17fe0:	b	19df0 <ReadDataSlabN+0x368c>
   17fe4:	mov	r5, #0
   17fe8:	b	19e80 <ReadDataSlabN+0x371c>
   17fec:	ldr	r3, [sp, #16]
   17ff0:	cmp	r3, #0
   17ff4:	ble	196dc <ReadDataSlabN+0x2f78>
   17ff8:	mov	r3, #0
   17ffc:	str	r3, [sp, #24]
   18000:	mov	sl, r3
   18004:	b	18134 <ReadDataSlabN+0x19d0>
   18008:	mov	r2, #1
   1800c:	ldr	r3, [sp]
   18010:	mul	r1, r3, r1
   18014:	ldr	r3, [sp, #4]
   18018:	ldr	r0, [r3]
   1801c:	bl	1694 <fseek@plt>
   18020:	ldr	r3, [fp]
   18024:	add	r5, r5, r3
   18028:	b	18140 <ReadDataSlabN+0x19dc>
   1802c:	sub	r6, r6, r3
   18030:	ldr	r3, [r8, #-8]
   18034:	ldr	r1, [fp, r4, lsl #2]
   18038:	str	r3, [sp, #20]
   1803c:	mla	r1, r1, r3, r6
   18040:	mov	r2, #1
   18044:	ldr	r0, [sp]
   18048:	mul	r1, r0, r1
   1804c:	ldr	r0, [sp, #4]
   18050:	ldr	r0, [r0]
   18054:	bl	1694 <fseek@plt>
   18058:	ldr	r3, [fp, r4, lsl #2]
   1805c:	ldr	r2, [sp, #20]
   18060:	mla	r6, r3, r2, r6
   18064:	add	r5, r5, r6
   18068:	add	r4, r4, #1
   1806c:	ldr	r3, [sp, #192]	; 0xc0
   18070:	cmp	r3, r4
   18074:	beq	18114 <ReadDataSlabN+0x19b0>
   18078:	ldr	r3, [r7]
   1807c:	add	r3, r3, #1
   18080:	str	r3, [r7]
   18084:	ldr	r1, [r9, #4]!
   18088:	sdiv	r2, r3, r1
   1808c:	mls	r3, r1, r2, r3
   18090:	cmp	r3, #0
   18094:	bne	180ec <ReadDataSlabN+0x1988>
   18098:	str	sl, [r7], #4
   1809c:	ldr	r6, [r8], #4
   180a0:	sdiv	r3, r5, r6
   180a4:	mls	r3, r6, r3, r5
   180a8:	cmp	r3, #0
   180ac:	bne	1802c <ReadDataSlabN+0x18c8>
   180b0:	ldr	r1, [fp, r4, lsl #2]
   180b4:	cmp	r1, #0
   180b8:	beq	18068 <ReadDataSlabN+0x1904>
   180bc:	ldr	r6, [r8, #-8]
   180c0:	mul	r1, r6, r1
   180c4:	mov	r2, #1
   180c8:	ldr	r3, [sp]
   180cc:	mul	r1, r3, r1
   180d0:	ldr	r3, [sp, #4]
   180d4:	ldr	r0, [r3]
   180d8:	bl	1694 <fseek@plt>
   180dc:	ldr	r3, [fp, r4, lsl #2]
   180e0:	mla	r5, r3, r6, r5
   180e4:	b	18068 <ReadDataSlabN+0x1904>
   180e8:	ldr	r4, [sp, #28]
   180ec:	add	r3, sp, #152	; 0x98
   180f0:	add	r4, r3, r4, lsl #2
   180f4:	ldr	r1, [r4, #-40]	; 0xffffffd8
   180f8:	add	r5, r5, r1
   180fc:	mov	r2, #1
   18100:	ldr	r3, [sp]
   18104:	mul	r1, r3, r1
   18108:	ldr	r3, [sp, #4]
   1810c:	ldr	r0, [r3]
   18110:	bl	1694 <fseek@plt>
   18114:	ldr	r3, [sp, #208]	; 0xd0
   18118:	ldr	r3, [r3]
   1811c:	ldr	r2, [sp, #24]
   18120:	add	r3, r2, r3
   18124:	str	r3, [sp, #24]
   18128:	ldr	r2, [sp, #16]
   1812c:	cmp	r3, r2
   18130:	bge	181e4 <ReadDataSlabN+0x1a80>
   18134:	ldr	r1, [fp]
   18138:	cmp	r1, #0
   1813c:	bne	18008 <ReadDataSlabN+0x18a4>
   18140:	ldr	r3, [sp, #208]	; 0xd0
   18144:	ldr	r3, [r3]
   18148:	ldr	r2, [sp, #8]
   1814c:	ldr	r1, [sp, #12]
   18150:	ldr	r0, [sp, #24]
   18154:	add	r1, r1, r0, lsl #2
   18158:	ldr	r4, [sp, #4]
   1815c:	mov	r0, r4
   18160:	bl	d728 <ReadUInt32Data>
   18164:	ldr	r3, [sp, #196]	; 0xc4
   18168:	ldr	r3, [r3]
   1816c:	ldr	r1, [fp]
   18170:	sub	r2, r3, r1
   18174:	add	r5, r2, r5
   18178:	ldr	r2, [sp, #208]	; 0xd0
   1817c:	ldr	r2, [r2]
   18180:	sub	r3, r3, r2
   18184:	sub	r1, r3, r1
   18188:	mov	r2, #1
   1818c:	ldr	r3, [sp]
   18190:	mul	r1, r3, r1
   18194:	ldr	r0, [r4]
   18198:	bl	1694 <fseek@plt>
   1819c:	ldr	r3, [sp, #192]	; 0xc0
   181a0:	cmp	r3, #1
   181a4:	ble	18114 <ReadDataSlabN+0x19b0>
   181a8:	ldr	r3, [sp, #76]	; 0x4c
   181ac:	add	r3, r3, #1
   181b0:	str	r3, [sp, #76]	; 0x4c
   181b4:	ldr	r2, [sp, #208]	; 0xd0
   181b8:	ldr	r1, [r2, #4]
   181bc:	sdiv	r2, r3, r1
   181c0:	mls	r3, r1, r2, r3
   181c4:	cmp	r3, #0
   181c8:	bne	180e8 <ReadDataSlabN+0x1984>
   181cc:	add	r7, sp, #76	; 0x4c
   181d0:	ldr	r3, [sp, #208]	; 0xd0
   181d4:	add	r9, r3, #4
   181d8:	add	r8, sp, #36	; 0x24
   181dc:	ldr	r4, [sp, #28]
   181e0:	b	18098 <ReadDataSlabN+0x1934>
   181e4:	mov	r0, #0
   181e8:	b	16d04 <ReadDataSlabN+0x5a0>
   181ec:	mov	r2, #1
   181f0:	ldr	r3, [sp]
   181f4:	mul	r1, r3, r1
   181f8:	ldr	r3, [sp, #4]
   181fc:	ldr	r0, [r3]
   18200:	bl	1694 <fseek@plt>
   18204:	ldr	r3, [fp]
   18208:	add	r5, r5, r3
   1820c:	b	18328 <ReadDataSlabN+0x1bc4>
   18210:	sub	r4, r4, r3
   18214:	ldr	r7, [r9, #-8]
   18218:	ldr	r1, [fp, r6, lsl #2]
   1821c:	mla	r1, r1, r7, r4
   18220:	mov	r2, #1
   18224:	ldr	r3, [sp]
   18228:	mul	r1, r3, r1
   1822c:	ldr	r3, [sp, #4]
   18230:	ldr	r0, [r3]
   18234:	bl	1694 <fseek@plt>
   18238:	ldr	r3, [fp, r6, lsl #2]
   1823c:	mla	r4, r3, r7, r4
   18240:	add	r5, r5, r4
   18244:	add	r6, r6, #1
   18248:	ldr	r3, [sp, #192]	; 0xc0
   1824c:	cmp	r3, r6
   18250:	beq	1841c <ReadDataSlabN+0x1cb8>
   18254:	ldr	r3, [r8]
   18258:	add	r3, r3, #1
   1825c:	str	r3, [r8]
   18260:	ldr	r1, [sl, #4]!
   18264:	sdiv	r2, r3, r1
   18268:	mls	r3, r1, r2, r3
   1826c:	cmp	r3, #0
   18270:	bne	182d0 <ReadDataSlabN+0x1b6c>
   18274:	mov	r3, #0
   18278:	str	r3, [r8], #4
   1827c:	ldr	r4, [r9], #4
   18280:	sdiv	r3, r5, r4
   18284:	mls	r3, r4, r3, r5
   18288:	cmp	r3, #0
   1828c:	bne	18210 <ReadDataSlabN+0x1aac>
   18290:	ldr	r1, [fp, r6, lsl #2]
   18294:	cmp	r1, #0
   18298:	beq	18244 <ReadDataSlabN+0x1ae0>
   1829c:	ldr	r4, [r9, #-8]
   182a0:	mul	r1, r4, r1
   182a4:	mov	r2, #1
   182a8:	ldr	r3, [sp]
   182ac:	mul	r1, r3, r1
   182b0:	ldr	r3, [sp, #4]
   182b4:	ldr	r0, [r3]
   182b8:	bl	1694 <fseek@plt>
   182bc:	ldr	r3, [fp, r6, lsl #2]
   182c0:	mla	r5, r3, r4, r5
   182c4:	b	18244 <ReadDataSlabN+0x1ae0>
   182c8:	mov	r6, #1
   182cc:	b	182d4 <ReadDataSlabN+0x1b70>
   182d0:	ldr	r4, [sp, #204]	; 0xcc
   182d4:	add	r3, sp, #152	; 0x98
   182d8:	add	r6, r3, r6, lsl #2
   182dc:	ldr	r1, [r6, #-40]	; 0xffffffd8
   182e0:	add	r5, r5, r1
   182e4:	mov	r2, #1
   182e8:	ldr	r3, [sp]
   182ec:	mul	r1, r3, r1
   182f0:	ldr	r3, [sp, #4]
   182f4:	ldr	r0, [r3]
   182f8:	bl	1694 <fseek@plt>
   182fc:	ldr	r3, [sp, #208]	; 0xd0
   18300:	ldr	r3, [r3]
   18304:	ldr	r2, [sp, #20]
   18308:	add	r3, r2, r3
   1830c:	str	r3, [sp, #20]
   18310:	ldr	r2, [sp, #16]
   18314:	cmp	r3, r2
   18318:	bge	18424 <ReadDataSlabN+0x1cc0>
   1831c:	ldr	r1, [fp]
   18320:	cmp	r1, #0
   18324:	bne	181ec <ReadDataSlabN+0x1a88>
   18328:	ldr	r3, [sp, #208]	; 0xd0
   1832c:	ldr	r1, [r3]
   18330:	cmp	r1, #0
   18334:	ble	1839c <ReadDataSlabN+0x1c38>
   18338:	ldr	r3, [sp, #12]
   1833c:	ldr	r2, [sp, #20]
   18340:	add	r7, r3, r2, lsl #2
   18344:	mov	r6, #0
   18348:	ldr	r9, [sp]
   1834c:	ldr	sl, [sp, #208]	; 0xd0
   18350:	ldr	r8, [sp, #4]
   18354:	mov	r3, #1
   18358:	ldr	r2, [sp, #8]
   1835c:	mov	r1, r7
   18360:	mov	r0, r8
   18364:	bl	d728 <ReadUInt32Data>
   18368:	ldr	r1, [r4]
   1836c:	sub	r1, r1, #1
   18370:	mov	r2, #1
   18374:	mul	r1, r9, r1
   18378:	ldr	r0, [r8]
   1837c:	bl	1694 <fseek@plt>
   18380:	ldr	r3, [r4]
   18384:	add	r5, r5, r3
   18388:	add	r6, r6, #1
   1838c:	ldr	r1, [sl]
   18390:	add	r7, r7, #4
   18394:	cmp	r1, r6
   18398:	bgt	18354 <ReadDataSlabN+0x1bf0>
   1839c:	ldr	r3, [sp, #196]	; 0xc4
   183a0:	ldr	r3, [r3]
   183a4:	ldr	r2, [fp]
   183a8:	sub	r3, r3, r2
   183ac:	ldr	r2, [r4]
   183b0:	mls	r1, r2, r1, r3
   183b4:	add	r5, r5, r1
   183b8:	mov	r2, #1
   183bc:	ldr	r3, [sp]
   183c0:	mul	r1, r3, r1
   183c4:	ldr	r3, [sp, #4]
   183c8:	ldr	r0, [r3]
   183cc:	bl	1694 <fseek@plt>
   183d0:	ldr	r3, [sp, #192]	; 0xc0
   183d4:	cmp	r3, #1
   183d8:	ble	182fc <ReadDataSlabN+0x1b98>
   183dc:	ldr	r3, [sp, #76]	; 0x4c
   183e0:	add	r3, r3, #1
   183e4:	str	r3, [sp, #76]	; 0x4c
   183e8:	ldr	r2, [sp, #208]	; 0xd0
   183ec:	ldr	r1, [r2, #4]
   183f0:	sdiv	r2, r3, r1
   183f4:	mls	r3, r1, r2, r3
   183f8:	cmp	r3, #0
   183fc:	bne	182c8 <ReadDataSlabN+0x1b64>
   18400:	add	r8, sp, #76	; 0x4c
   18404:	ldr	r3, [sp, #208]	; 0xd0
   18408:	add	sl, r3, #4
   1840c:	add	r9, sp, #36	; 0x24
   18410:	mov	r6, #1
   18414:	str	r4, [sp, #204]	; 0xcc
   18418:	b	18274 <ReadDataSlabN+0x1b10>
   1841c:	ldr	r4, [sp, #204]	; 0xcc
   18420:	b	182fc <ReadDataSlabN+0x1b98>
   18424:	mov	r0, #0
   18428:	b	16d04 <ReadDataSlabN+0x5a0>
   1842c:	ldr	r3, [r4]
   18430:	sub	r3, r3, #1
   18434:	str	r3, [sp, #112]	; 0x70
   18438:	ldr	r3, [sp, #196]	; 0xc4
   1843c:	ldr	r3, [r3]
   18440:	str	r3, [sp, #32]
   18444:	ldr	r3, [sp, #208]	; 0xd0
   18448:	ldr	r3, [r3]
   1844c:	str	r3, [sp, #16]
   18450:	ldr	r3, [sp, #192]	; 0xc0
   18454:	cmp	r3, #1
   18458:	ble	18480 <ReadDataSlabN+0x1d1c>
   1845c:	mov	r8, r4
   18460:	add	sl, sp, #116	; 0x74
   18464:	ldr	lr, [sp, #196]	; 0xc4
   18468:	add	r7, sp, #32
   1846c:	mov	r9, lr
   18470:	mov	r6, #1
   18474:	mov	r5, #0
   18478:	str	r4, [sp, #204]	; 0xcc
   1847c:	b	19b08 <ReadDataSlabN+0x33a4>
   18480:	mov	r5, #0
   18484:	b	19b98 <ReadDataSlabN+0x3434>
   18488:	ldr	r3, [sp, #16]
   1848c:	cmp	r3, #0
   18490:	ble	196e4 <ReadDataSlabN+0x2f80>
   18494:	mov	r3, #0
   18498:	str	r3, [sp, #24]
   1849c:	mov	sl, r3
   184a0:	b	185d0 <ReadDataSlabN+0x1e6c>
   184a4:	mov	r2, #1
   184a8:	ldr	r3, [sp]
   184ac:	mul	r1, r3, r1
   184b0:	ldr	r3, [sp, #4]
   184b4:	ldr	r0, [r3]
   184b8:	bl	1694 <fseek@plt>
   184bc:	ldr	r3, [fp]
   184c0:	add	r5, r5, r3
   184c4:	b	185dc <ReadDataSlabN+0x1e78>
   184c8:	sub	r6, r6, r3
   184cc:	ldr	r3, [r8, #-8]
   184d0:	ldr	r1, [fp, r4, lsl #2]
   184d4:	str	r3, [sp, #20]
   184d8:	mla	r1, r1, r3, r6
   184dc:	mov	r2, #1
   184e0:	ldr	r0, [sp]
   184e4:	mul	r1, r0, r1
   184e8:	ldr	r0, [sp, #4]
   184ec:	ldr	r0, [r0]
   184f0:	bl	1694 <fseek@plt>
   184f4:	ldr	r3, [fp, r4, lsl #2]
   184f8:	ldr	r2, [sp, #20]
   184fc:	mla	r6, r3, r2, r6
   18500:	add	r5, r5, r6
   18504:	add	r4, r4, #1
   18508:	ldr	r3, [sp, #192]	; 0xc0
   1850c:	cmp	r3, r4
   18510:	beq	185b0 <ReadDataSlabN+0x1e4c>
   18514:	ldr	r3, [r7]
   18518:	add	r3, r3, #1
   1851c:	str	r3, [r7]
   18520:	ldr	r1, [r9, #4]!
   18524:	sdiv	r2, r3, r1
   18528:	mls	r3, r1, r2, r3
   1852c:	cmp	r3, #0
   18530:	bne	18588 <ReadDataSlabN+0x1e24>
   18534:	str	sl, [r7], #4
   18538:	ldr	r6, [r8], #4
   1853c:	sdiv	r3, r5, r6
   18540:	mls	r3, r6, r3, r5
   18544:	cmp	r3, #0
   18548:	bne	184c8 <ReadDataSlabN+0x1d64>
   1854c:	ldr	r1, [fp, r4, lsl #2]
   18550:	cmp	r1, #0
   18554:	beq	18504 <ReadDataSlabN+0x1da0>
   18558:	ldr	r6, [r8, #-8]
   1855c:	mul	r1, r6, r1
   18560:	mov	r2, #1
   18564:	ldr	r3, [sp]
   18568:	mul	r1, r3, r1
   1856c:	ldr	r3, [sp, #4]
   18570:	ldr	r0, [r3]
   18574:	bl	1694 <fseek@plt>
   18578:	ldr	r3, [fp, r4, lsl #2]
   1857c:	mla	r5, r3, r6, r5
   18580:	b	18504 <ReadDataSlabN+0x1da0>
   18584:	ldr	r4, [sp, #28]
   18588:	add	r3, sp, #152	; 0x98
   1858c:	add	r4, r3, r4, lsl #2
   18590:	ldr	r1, [r4, #-40]	; 0xffffffd8
   18594:	add	r5, r5, r1
   18598:	mov	r2, #1
   1859c:	ldr	r3, [sp]
   185a0:	mul	r1, r3, r1
   185a4:	ldr	r3, [sp, #4]
   185a8:	ldr	r0, [r3]
   185ac:	bl	1694 <fseek@plt>
   185b0:	ldr	r3, [sp, #208]	; 0xd0
   185b4:	ldr	r3, [r3]
   185b8:	ldr	r2, [sp, #24]
   185bc:	add	r3, r2, r3
   185c0:	str	r3, [sp, #24]
   185c4:	ldr	r2, [sp, #16]
   185c8:	cmp	r3, r2
   185cc:	bge	18680 <ReadDataSlabN+0x1f1c>
   185d0:	ldr	r1, [fp]
   185d4:	cmp	r1, #0
   185d8:	bne	184a4 <ReadDataSlabN+0x1d40>
   185dc:	ldr	r3, [sp, #208]	; 0xd0
   185e0:	ldr	r3, [r3]
   185e4:	ldr	r2, [sp, #8]
   185e8:	ldr	r1, [sp, #12]
   185ec:	ldr	r0, [sp, #24]
   185f0:	add	r1, r1, r0, lsl #1
   185f4:	ldr	r4, [sp, #4]
   185f8:	mov	r0, r4
   185fc:	bl	f364 <ReadInt16Data>
   18600:	ldr	r3, [sp, #196]	; 0xc4
   18604:	ldr	r3, [r3]
   18608:	ldr	r1, [fp]
   1860c:	sub	r2, r3, r1
   18610:	add	r5, r2, r5
   18614:	ldr	r2, [sp, #208]	; 0xd0
   18618:	ldr	r2, [r2]
   1861c:	sub	r3, r3, r2
   18620:	sub	r1, r3, r1
   18624:	mov	r2, #1
   18628:	ldr	r3, [sp]
   1862c:	mul	r1, r3, r1
   18630:	ldr	r0, [r4]
   18634:	bl	1694 <fseek@plt>
   18638:	ldr	r3, [sp, #192]	; 0xc0
   1863c:	cmp	r3, #1
   18640:	ble	185b0 <ReadDataSlabN+0x1e4c>
   18644:	ldr	r3, [sp, #76]	; 0x4c
   18648:	add	r3, r3, #1
   1864c:	str	r3, [sp, #76]	; 0x4c
   18650:	ldr	r2, [sp, #208]	; 0xd0
   18654:	ldr	r1, [r2, #4]
   18658:	sdiv	r2, r3, r1
   1865c:	mls	r3, r1, r2, r3
   18660:	cmp	r3, #0
   18664:	bne	18584 <ReadDataSlabN+0x1e20>
   18668:	add	r7, sp, #76	; 0x4c
   1866c:	ldr	r3, [sp, #208]	; 0xd0
   18670:	add	r9, r3, #4
   18674:	add	r8, sp, #36	; 0x24
   18678:	ldr	r4, [sp, #28]
   1867c:	b	18534 <ReadDataSlabN+0x1dd0>
   18680:	mov	r0, #0
   18684:	b	16d04 <ReadDataSlabN+0x5a0>
   18688:	mov	r2, #1
   1868c:	ldr	r3, [sp]
   18690:	mul	r1, r3, r1
   18694:	ldr	r3, [sp, #4]
   18698:	ldr	r0, [r3]
   1869c:	bl	1694 <fseek@plt>
   186a0:	ldr	r3, [fp]
   186a4:	add	r5, r5, r3
   186a8:	b	187c4 <ReadDataSlabN+0x2060>
   186ac:	sub	r4, r4, r3
   186b0:	ldr	r7, [r9, #-8]
   186b4:	ldr	r1, [fp, r6, lsl #2]
   186b8:	mla	r1, r1, r7, r4
   186bc:	mov	r2, #1
   186c0:	ldr	r3, [sp]
   186c4:	mul	r1, r3, r1
   186c8:	ldr	r3, [sp, #4]
   186cc:	ldr	r0, [r3]
   186d0:	bl	1694 <fseek@plt>
   186d4:	ldr	r3, [fp, r6, lsl #2]
   186d8:	mla	r4, r3, r7, r4
   186dc:	add	r5, r5, r4
   186e0:	add	r6, r6, #1
   186e4:	ldr	r3, [sp, #192]	; 0xc0
   186e8:	cmp	r3, r6
   186ec:	beq	188b8 <ReadDataSlabN+0x2154>
   186f0:	ldr	r3, [r8]
   186f4:	add	r3, r3, #1
   186f8:	str	r3, [r8]
   186fc:	ldr	r1, [sl, #4]!
   18700:	sdiv	r2, r3, r1
   18704:	mls	r3, r1, r2, r3
   18708:	cmp	r3, #0
   1870c:	bne	1876c <ReadDataSlabN+0x2008>
   18710:	mov	r3, #0
   18714:	str	r3, [r8], #4
   18718:	ldr	r4, [r9], #4
   1871c:	sdiv	r3, r5, r4
   18720:	mls	r3, r4, r3, r5
   18724:	cmp	r3, #0
   18728:	bne	186ac <ReadDataSlabN+0x1f48>
   1872c:	ldr	r1, [fp, r6, lsl #2]
   18730:	cmp	r1, #0
   18734:	beq	186e0 <ReadDataSlabN+0x1f7c>
   18738:	ldr	r4, [r9, #-8]
   1873c:	mul	r1, r4, r1
   18740:	mov	r2, #1
   18744:	ldr	r3, [sp]
   18748:	mul	r1, r3, r1
   1874c:	ldr	r3, [sp, #4]
   18750:	ldr	r0, [r3]
   18754:	bl	1694 <fseek@plt>
   18758:	ldr	r3, [fp, r6, lsl #2]
   1875c:	mla	r5, r3, r4, r5
   18760:	b	186e0 <ReadDataSlabN+0x1f7c>
   18764:	mov	r6, #1
   18768:	b	18770 <ReadDataSlabN+0x200c>
   1876c:	ldr	r4, [sp, #204]	; 0xcc
   18770:	add	r3, sp, #152	; 0x98
   18774:	add	r6, r3, r6, lsl #2
   18778:	ldr	r1, [r6, #-40]	; 0xffffffd8
   1877c:	add	r5, r5, r1
   18780:	mov	r2, #1
   18784:	ldr	r3, [sp]
   18788:	mul	r1, r3, r1
   1878c:	ldr	r3, [sp, #4]
   18790:	ldr	r0, [r3]
   18794:	bl	1694 <fseek@plt>
   18798:	ldr	r3, [sp, #208]	; 0xd0
   1879c:	ldr	r3, [r3]
   187a0:	ldr	r2, [sp, #20]
   187a4:	add	r3, r2, r3
   187a8:	str	r3, [sp, #20]
   187ac:	ldr	r2, [sp, #16]
   187b0:	cmp	r3, r2
   187b4:	bge	188c0 <ReadDataSlabN+0x215c>
   187b8:	ldr	r1, [fp]
   187bc:	cmp	r1, #0
   187c0:	bne	18688 <ReadDataSlabN+0x1f24>
   187c4:	ldr	r3, [sp, #208]	; 0xd0
   187c8:	ldr	r1, [r3]
   187cc:	cmp	r1, #0
   187d0:	ble	18838 <ReadDataSlabN+0x20d4>
   187d4:	ldr	r3, [sp, #12]
   187d8:	ldr	r2, [sp, #20]
   187dc:	add	r7, r3, r2, lsl #1
   187e0:	mov	r6, #0
   187e4:	ldr	r9, [sp]
   187e8:	ldr	sl, [sp, #208]	; 0xd0
   187ec:	ldr	r8, [sp, #4]
   187f0:	mov	r3, #1
   187f4:	ldr	r2, [sp, #8]
   187f8:	mov	r1, r7
   187fc:	mov	r0, r8
   18800:	bl	f364 <ReadInt16Data>
   18804:	ldr	r1, [r4]
   18808:	sub	r1, r1, #1
   1880c:	mov	r2, #1
   18810:	mul	r1, r9, r1
   18814:	ldr	r0, [r8]
   18818:	bl	1694 <fseek@plt>
   1881c:	ldr	r3, [r4]
   18820:	add	r5, r5, r3
   18824:	add	r6, r6, #1
   18828:	ldr	r1, [sl]
   1882c:	add	r7, r7, #2
   18830:	cmp	r1, r6
   18834:	bgt	187f0 <ReadDataSlabN+0x208c>
   18838:	ldr	r3, [sp, #196]	; 0xc4
   1883c:	ldr	r3, [r3]
   18840:	ldr	r2, [fp]
   18844:	sub	r3, r3, r2
   18848:	ldr	r2, [r4]
   1884c:	mls	r1, r2, r1, r3
   18850:	add	r5, r5, r1
   18854:	mov	r2, #1
   18858:	ldr	r3, [sp]
   1885c:	mul	r1, r3, r1
   18860:	ldr	r3, [sp, #4]
   18864:	ldr	r0, [r3]
   18868:	bl	1694 <fseek@plt>
   1886c:	ldr	r3, [sp, #192]	; 0xc0
   18870:	cmp	r3, #1
   18874:	ble	18798 <ReadDataSlabN+0x2034>
   18878:	ldr	r3, [sp, #76]	; 0x4c
   1887c:	add	r3, r3, #1
   18880:	str	r3, [sp, #76]	; 0x4c
   18884:	ldr	r2, [sp, #208]	; 0xd0
   18888:	ldr	r1, [r2, #4]
   1888c:	sdiv	r2, r3, r1
   18890:	mls	r3, r1, r2, r3
   18894:	cmp	r3, #0
   18898:	bne	18764 <ReadDataSlabN+0x2000>
   1889c:	add	r8, sp, #76	; 0x4c
   188a0:	ldr	r3, [sp, #208]	; 0xd0
   188a4:	add	sl, r3, #4
   188a8:	add	r9, sp, #36	; 0x24
   188ac:	mov	r6, #1
   188b0:	str	r4, [sp, #204]	; 0xcc
   188b4:	b	18710 <ReadDataSlabN+0x1fac>
   188b8:	ldr	r4, [sp, #204]	; 0xcc
   188bc:	b	18798 <ReadDataSlabN+0x2034>
   188c0:	mov	r0, #0
   188c4:	b	16d04 <ReadDataSlabN+0x5a0>
   188c8:	ldr	r3, [r4]
   188cc:	sub	r3, r3, #1
   188d0:	str	r3, [sp, #112]	; 0x70
   188d4:	ldr	r3, [sp, #196]	; 0xc4
   188d8:	ldr	r3, [r3]
   188dc:	str	r3, [sp, #32]
   188e0:	ldr	r3, [sp, #208]	; 0xd0
   188e4:	ldr	r3, [r3]
   188e8:	str	r3, [sp, #16]
   188ec:	ldr	r3, [sp, #192]	; 0xc0
   188f0:	cmp	r3, #1
   188f4:	ble	1891c <ReadDataSlabN+0x21b8>
   188f8:	mov	r8, r4
   188fc:	add	sl, sp, #116	; 0x74
   18900:	ldr	lr, [sp, #196]	; 0xc4
   18904:	add	r7, sp, #32
   18908:	mov	r9, lr
   1890c:	mov	r6, #1
   18910:	mov	r5, #0
   18914:	str	r4, [sp, #204]	; 0xcc
   18918:	b	19c00 <ReadDataSlabN+0x349c>
   1891c:	mov	r5, #0
   18920:	b	19c90 <ReadDataSlabN+0x352c>
   18924:	ldr	r3, [sp, #16]
   18928:	cmp	r3, #0
   1892c:	ble	196ec <ReadDataSlabN+0x2f88>
   18930:	mov	r3, #0
   18934:	str	r3, [sp, #24]
   18938:	mov	sl, r3
   1893c:	b	18a6c <ReadDataSlabN+0x2308>
   18940:	mov	r2, #1
   18944:	ldr	r3, [sp]
   18948:	mul	r1, r3, r1
   1894c:	ldr	r3, [sp, #4]
   18950:	ldr	r0, [r3]
   18954:	bl	1694 <fseek@plt>
   18958:	ldr	r3, [fp]
   1895c:	add	r5, r5, r3
   18960:	b	18a78 <ReadDataSlabN+0x2314>
   18964:	sub	r6, r6, r3
   18968:	ldr	r3, [r8, #-8]
   1896c:	ldr	r1, [fp, r4, lsl #2]
   18970:	str	r3, [sp, #20]
   18974:	mla	r1, r1, r3, r6
   18978:	mov	r2, #1
   1897c:	ldr	r0, [sp]
   18980:	mul	r1, r0, r1
   18984:	ldr	r0, [sp, #4]
   18988:	ldr	r0, [r0]
   1898c:	bl	1694 <fseek@plt>
   18990:	ldr	r3, [fp, r4, lsl #2]
   18994:	ldr	r2, [sp, #20]
   18998:	mla	r6, r3, r2, r6
   1899c:	add	r5, r5, r6
   189a0:	add	r4, r4, #1
   189a4:	ldr	r3, [sp, #192]	; 0xc0
   189a8:	cmp	r3, r4
   189ac:	beq	18a4c <ReadDataSlabN+0x22e8>
   189b0:	ldr	r3, [r7]
   189b4:	add	r3, r3, #1
   189b8:	str	r3, [r7]
   189bc:	ldr	r1, [r9, #4]!
   189c0:	sdiv	r2, r3, r1
   189c4:	mls	r3, r1, r2, r3
   189c8:	cmp	r3, #0
   189cc:	bne	18a24 <ReadDataSlabN+0x22c0>
   189d0:	str	sl, [r7], #4
   189d4:	ldr	r6, [r8], #4
   189d8:	sdiv	r3, r5, r6
   189dc:	mls	r3, r6, r3, r5
   189e0:	cmp	r3, #0
   189e4:	bne	18964 <ReadDataSlabN+0x2200>
   189e8:	ldr	r1, [fp, r4, lsl #2]
   189ec:	cmp	r1, #0
   189f0:	beq	189a0 <ReadDataSlabN+0x223c>
   189f4:	ldr	r6, [r8, #-8]
   189f8:	mul	r1, r6, r1
   189fc:	mov	r2, #1
   18a00:	ldr	r3, [sp]
   18a04:	mul	r1, r3, r1
   18a08:	ldr	r3, [sp, #4]
   18a0c:	ldr	r0, [r3]
   18a10:	bl	1694 <fseek@plt>
   18a14:	ldr	r3, [fp, r4, lsl #2]
   18a18:	mla	r5, r3, r6, r5
   18a1c:	b	189a0 <ReadDataSlabN+0x223c>
   18a20:	ldr	r4, [sp, #28]
   18a24:	add	r3, sp, #152	; 0x98
   18a28:	add	r4, r3, r4, lsl #2
   18a2c:	ldr	r1, [r4, #-40]	; 0xffffffd8
   18a30:	add	r5, r5, r1
   18a34:	mov	r2, #1
   18a38:	ldr	r3, [sp]
   18a3c:	mul	r1, r3, r1
   18a40:	ldr	r3, [sp, #4]
   18a44:	ldr	r0, [r3]
   18a48:	bl	1694 <fseek@plt>
   18a4c:	ldr	r3, [sp, #208]	; 0xd0
   18a50:	ldr	r3, [r3]
   18a54:	ldr	r2, [sp, #24]
   18a58:	add	r3, r2, r3
   18a5c:	str	r3, [sp, #24]
   18a60:	ldr	r2, [sp, #16]
   18a64:	cmp	r3, r2
   18a68:	bge	18b1c <ReadDataSlabN+0x23b8>
   18a6c:	ldr	r1, [fp]
   18a70:	cmp	r1, #0
   18a74:	bne	18940 <ReadDataSlabN+0x21dc>
   18a78:	ldr	r3, [sp, #208]	; 0xd0
   18a7c:	ldr	r3, [r3]
   18a80:	ldr	r2, [sp, #8]
   18a84:	ldr	r1, [sp, #12]
   18a88:	ldr	r0, [sp, #24]
   18a8c:	add	r1, r1, r0, lsl #1
   18a90:	ldr	r4, [sp, #4]
   18a94:	mov	r0, r4
   18a98:	bl	10fd0 <ReadUInt16Data>
   18a9c:	ldr	r3, [sp, #196]	; 0xc4
   18aa0:	ldr	r3, [r3]
   18aa4:	ldr	r1, [fp]
   18aa8:	sub	r2, r3, r1
   18aac:	add	r5, r2, r5
   18ab0:	ldr	r2, [sp, #208]	; 0xd0
   18ab4:	ldr	r2, [r2]
   18ab8:	sub	r3, r3, r2
   18abc:	sub	r1, r3, r1
   18ac0:	mov	r2, #1
   18ac4:	ldr	r3, [sp]
   18ac8:	mul	r1, r3, r1
   18acc:	ldr	r0, [r4]
   18ad0:	bl	1694 <fseek@plt>
   18ad4:	ldr	r3, [sp, #192]	; 0xc0
   18ad8:	cmp	r3, #1
   18adc:	ble	18a4c <ReadDataSlabN+0x22e8>
   18ae0:	ldr	r3, [sp, #76]	; 0x4c
   18ae4:	add	r3, r3, #1
   18ae8:	str	r3, [sp, #76]	; 0x4c
   18aec:	ldr	r2, [sp, #208]	; 0xd0
   18af0:	ldr	r1, [r2, #4]
   18af4:	sdiv	r2, r3, r1
   18af8:	mls	r3, r1, r2, r3
   18afc:	cmp	r3, #0
   18b00:	bne	18a20 <ReadDataSlabN+0x22bc>
   18b04:	add	r7, sp, #76	; 0x4c
   18b08:	ldr	r3, [sp, #208]	; 0xd0
   18b0c:	add	r9, r3, #4
   18b10:	add	r8, sp, #36	; 0x24
   18b14:	ldr	r4, [sp, #28]
   18b18:	b	189d0 <ReadDataSlabN+0x226c>
   18b1c:	mov	r0, #0
   18b20:	b	16d04 <ReadDataSlabN+0x5a0>
   18b24:	mov	r2, #1
   18b28:	ldr	r3, [sp]
   18b2c:	mul	r1, r3, r1
   18b30:	ldr	r3, [sp, #4]
   18b34:	ldr	r0, [r3]
   18b38:	bl	1694 <fseek@plt>
   18b3c:	ldr	r3, [fp]
   18b40:	add	r5, r5, r3
   18b44:	b	18c60 <ReadDataSlabN+0x24fc>
   18b48:	sub	r4, r4, r3
   18b4c:	ldr	r7, [r9, #-8]
   18b50:	ldr	r1, [fp, r6, lsl #2]
   18b54:	mla	r1, r1, r7, r4
   18b58:	mov	r2, #1
   18b5c:	ldr	r3, [sp]
   18b60:	mul	r1, r3, r1
   18b64:	ldr	r3, [sp, #4]
   18b68:	ldr	r0, [r3]
   18b6c:	bl	1694 <fseek@plt>
   18b70:	ldr	r3, [fp, r6, lsl #2]
   18b74:	mla	r4, r3, r7, r4
   18b78:	add	r5, r5, r4
   18b7c:	add	r6, r6, #1
   18b80:	ldr	r3, [sp, #192]	; 0xc0
   18b84:	cmp	r3, r6
   18b88:	beq	18d54 <ReadDataSlabN+0x25f0>
   18b8c:	ldr	r3, [r8]
   18b90:	add	r3, r3, #1
   18b94:	str	r3, [r8]
   18b98:	ldr	r1, [sl, #4]!
   18b9c:	sdiv	r2, r3, r1
   18ba0:	mls	r3, r1, r2, r3
   18ba4:	cmp	r3, #0
   18ba8:	bne	18c08 <ReadDataSlabN+0x24a4>
   18bac:	mov	r3, #0
   18bb0:	str	r3, [r8], #4
   18bb4:	ldr	r4, [r9], #4
   18bb8:	sdiv	r3, r5, r4
   18bbc:	mls	r3, r4, r3, r5
   18bc0:	cmp	r3, #0
   18bc4:	bne	18b48 <ReadDataSlabN+0x23e4>
   18bc8:	ldr	r1, [fp, r6, lsl #2]
   18bcc:	cmp	r1, #0
   18bd0:	beq	18b7c <ReadDataSlabN+0x2418>
   18bd4:	ldr	r4, [r9, #-8]
   18bd8:	mul	r1, r4, r1
   18bdc:	mov	r2, #1
   18be0:	ldr	r3, [sp]
   18be4:	mul	r1, r3, r1
   18be8:	ldr	r3, [sp, #4]
   18bec:	ldr	r0, [r3]
   18bf0:	bl	1694 <fseek@plt>
   18bf4:	ldr	r3, [fp, r6, lsl #2]
   18bf8:	mla	r5, r3, r4, r5
   18bfc:	b	18b7c <ReadDataSlabN+0x2418>
   18c00:	mov	r6, #1
   18c04:	b	18c0c <ReadDataSlabN+0x24a8>
   18c08:	ldr	r4, [sp, #204]	; 0xcc
   18c0c:	add	r3, sp, #152	; 0x98
   18c10:	add	r6, r3, r6, lsl #2
   18c14:	ldr	r1, [r6, #-40]	; 0xffffffd8
   18c18:	add	r5, r5, r1
   18c1c:	mov	r2, #1
   18c20:	ldr	r3, [sp]
   18c24:	mul	r1, r3, r1
   18c28:	ldr	r3, [sp, #4]
   18c2c:	ldr	r0, [r3]
   18c30:	bl	1694 <fseek@plt>
   18c34:	ldr	r3, [sp, #208]	; 0xd0
   18c38:	ldr	r3, [r3]
   18c3c:	ldr	r2, [sp, #20]
   18c40:	add	r3, r2, r3
   18c44:	str	r3, [sp, #20]
   18c48:	ldr	r2, [sp, #16]
   18c4c:	cmp	r3, r2
   18c50:	bge	18d5c <ReadDataSlabN+0x25f8>
   18c54:	ldr	r1, [fp]
   18c58:	cmp	r1, #0
   18c5c:	bne	18b24 <ReadDataSlabN+0x23c0>
   18c60:	ldr	r3, [sp, #208]	; 0xd0
   18c64:	ldr	r1, [r3]
   18c68:	cmp	r1, #0
   18c6c:	ble	18cd4 <ReadDataSlabN+0x2570>
   18c70:	ldr	r3, [sp, #12]
   18c74:	ldr	r2, [sp, #20]
   18c78:	add	r7, r3, r2, lsl #1
   18c7c:	mov	r6, #0
   18c80:	ldr	r9, [sp]
   18c84:	ldr	sl, [sp, #208]	; 0xd0
   18c88:	ldr	r8, [sp, #4]
   18c8c:	mov	r3, #1
   18c90:	ldr	r2, [sp, #8]
   18c94:	mov	r1, r7
   18c98:	mov	r0, r8
   18c9c:	bl	10fd0 <ReadUInt16Data>
   18ca0:	ldr	r1, [r4]
   18ca4:	sub	r1, r1, #1
   18ca8:	mov	r2, #1
   18cac:	mul	r1, r9, r1
   18cb0:	ldr	r0, [r8]
   18cb4:	bl	1694 <fseek@plt>
   18cb8:	ldr	r3, [r4]
   18cbc:	add	r5, r5, r3
   18cc0:	add	r6, r6, #1
   18cc4:	ldr	r1, [sl]
   18cc8:	add	r7, r7, #2
   18ccc:	cmp	r1, r6
   18cd0:	bgt	18c8c <ReadDataSlabN+0x2528>
   18cd4:	ldr	r3, [sp, #196]	; 0xc4
   18cd8:	ldr	r3, [r3]
   18cdc:	ldr	r2, [fp]
   18ce0:	sub	r3, r3, r2
   18ce4:	ldr	r2, [r4]
   18ce8:	mls	r1, r2, r1, r3
   18cec:	add	r5, r5, r1
   18cf0:	mov	r2, #1
   18cf4:	ldr	r3, [sp]
   18cf8:	mul	r1, r3, r1
   18cfc:	ldr	r3, [sp, #4]
   18d00:	ldr	r0, [r3]
   18d04:	bl	1694 <fseek@plt>
   18d08:	ldr	r3, [sp, #192]	; 0xc0
   18d0c:	cmp	r3, #1
   18d10:	ble	18c34 <ReadDataSlabN+0x24d0>
   18d14:	ldr	r3, [sp, #76]	; 0x4c
   18d18:	add	r3, r3, #1
   18d1c:	str	r3, [sp, #76]	; 0x4c
   18d20:	ldr	r2, [sp, #208]	; 0xd0
   18d24:	ldr	r1, [r2, #4]
   18d28:	sdiv	r2, r3, r1
   18d2c:	mls	r3, r1, r2, r3
   18d30:	cmp	r3, #0
   18d34:	bne	18c00 <ReadDataSlabN+0x249c>
   18d38:	add	r8, sp, #76	; 0x4c
   18d3c:	ldr	r3, [sp, #208]	; 0xd0
   18d40:	add	sl, r3, #4
   18d44:	add	r9, sp, #36	; 0x24
   18d48:	mov	r6, #1
   18d4c:	str	r4, [sp, #204]	; 0xcc
   18d50:	b	18bac <ReadDataSlabN+0x2448>
   18d54:	ldr	r4, [sp, #204]	; 0xcc
   18d58:	b	18c34 <ReadDataSlabN+0x24d0>
   18d5c:	mov	r0, #0
   18d60:	b	16d04 <ReadDataSlabN+0x5a0>
   18d64:	ldr	r3, [r4]
   18d68:	sub	r3, r3, #1
   18d6c:	str	r3, [sp, #112]	; 0x70
   18d70:	ldr	r3, [sp, #196]	; 0xc4
   18d74:	ldr	r3, [r3]
   18d78:	str	r3, [sp, #32]
   18d7c:	ldr	r3, [sp, #208]	; 0xd0
   18d80:	ldr	r3, [r3]
   18d84:	str	r3, [sp, #16]
   18d88:	ldr	r3, [sp, #192]	; 0xc0
   18d8c:	cmp	r3, #1
   18d90:	ble	18db8 <ReadDataSlabN+0x2654>
   18d94:	mov	r8, r4
   18d98:	add	sl, sp, #116	; 0x74
   18d9c:	ldr	lr, [sp, #196]	; 0xc4
   18da0:	add	r7, sp, #32
   18da4:	mov	r9, lr
   18da8:	mov	r6, #1
   18dac:	mov	r5, #0
   18db0:	str	r4, [sp, #204]	; 0xcc
   18db4:	b	19918 <ReadDataSlabN+0x31b4>
   18db8:	mov	r5, #0
   18dbc:	b	199a8 <ReadDataSlabN+0x3244>
   18dc0:	ldr	r3, [sp, #16]
   18dc4:	cmp	r3, #0
   18dc8:	ble	196f4 <ReadDataSlabN+0x2f90>
   18dcc:	mov	r3, #0
   18dd0:	str	r3, [sp, #24]
   18dd4:	mov	sl, r3
   18dd8:	b	18f08 <ReadDataSlabN+0x27a4>
   18ddc:	mov	r2, #1
   18de0:	ldr	r3, [sp]
   18de4:	mul	r1, r3, r1
   18de8:	ldr	r3, [sp, #4]
   18dec:	ldr	r0, [r3]
   18df0:	bl	1694 <fseek@plt>
   18df4:	ldr	r3, [fp]
   18df8:	add	r5, r5, r3
   18dfc:	b	18f14 <ReadDataSlabN+0x27b0>
   18e00:	sub	r6, r6, r3
   18e04:	ldr	r3, [r8, #-8]
   18e08:	ldr	r1, [fp, r4, lsl #2]
   18e0c:	str	r3, [sp, #20]
   18e10:	mla	r1, r1, r3, r6
   18e14:	mov	r2, #1
   18e18:	ldr	r0, [sp]
   18e1c:	mul	r1, r0, r1
   18e20:	ldr	r0, [sp, #4]
   18e24:	ldr	r0, [r0]
   18e28:	bl	1694 <fseek@plt>
   18e2c:	ldr	r3, [fp, r4, lsl #2]
   18e30:	ldr	r2, [sp, #20]
   18e34:	mla	r6, r3, r2, r6
   18e38:	add	r5, r5, r6
   18e3c:	add	r4, r4, #1
   18e40:	ldr	r3, [sp, #192]	; 0xc0
   18e44:	cmp	r3, r4
   18e48:	beq	18ee8 <ReadDataSlabN+0x2784>
   18e4c:	ldr	r3, [r7]
   18e50:	add	r3, r3, #1
   18e54:	str	r3, [r7]
   18e58:	ldr	r1, [r9, #4]!
   18e5c:	sdiv	r2, r3, r1
   18e60:	mls	r3, r1, r2, r3
   18e64:	cmp	r3, #0
   18e68:	bne	18ec0 <ReadDataSlabN+0x275c>
   18e6c:	str	sl, [r7], #4
   18e70:	ldr	r6, [r8], #4
   18e74:	sdiv	r3, r5, r6
   18e78:	mls	r3, r6, r3, r5
   18e7c:	cmp	r3, #0
   18e80:	bne	18e00 <ReadDataSlabN+0x269c>
   18e84:	ldr	r1, [fp, r4, lsl #2]
   18e88:	cmp	r1, #0
   18e8c:	beq	18e3c <ReadDataSlabN+0x26d8>
   18e90:	ldr	r6, [r8, #-8]
   18e94:	mul	r1, r6, r1
   18e98:	mov	r2, #1
   18e9c:	ldr	r3, [sp]
   18ea0:	mul	r1, r3, r1
   18ea4:	ldr	r3, [sp, #4]
   18ea8:	ldr	r0, [r3]
   18eac:	bl	1694 <fseek@plt>
   18eb0:	ldr	r3, [fp, r4, lsl #2]
   18eb4:	mla	r5, r3, r6, r5
   18eb8:	b	18e3c <ReadDataSlabN+0x26d8>
   18ebc:	ldr	r4, [sp, #28]
   18ec0:	add	r3, sp, #152	; 0x98
   18ec4:	add	r4, r3, r4, lsl #2
   18ec8:	ldr	r1, [r4, #-40]	; 0xffffffd8
   18ecc:	add	r5, r5, r1
   18ed0:	mov	r2, #1
   18ed4:	ldr	r3, [sp]
   18ed8:	mul	r1, r3, r1
   18edc:	ldr	r3, [sp, #4]
   18ee0:	ldr	r0, [r3]
   18ee4:	bl	1694 <fseek@plt>
   18ee8:	ldr	r3, [sp, #208]	; 0xd0
   18eec:	ldr	r3, [r3]
   18ef0:	ldr	r2, [sp, #24]
   18ef4:	add	r3, r2, r3
   18ef8:	str	r3, [sp, #24]
   18efc:	ldr	r2, [sp, #16]
   18f00:	cmp	r3, r2
   18f04:	bge	18fb8 <ReadDataSlabN+0x2854>
   18f08:	ldr	r1, [fp]
   18f0c:	cmp	r1, #0
   18f10:	bne	18ddc <ReadDataSlabN+0x2678>
   18f14:	ldr	r3, [sp, #208]	; 0xd0
   18f18:	ldr	r3, [r3]
   18f1c:	ldr	r2, [sp, #8]
   18f20:	ldr	r1, [sp, #12]
   18f24:	ldr	r0, [sp, #24]
   18f28:	add	r1, r1, r0
   18f2c:	ldr	r4, [sp, #4]
   18f30:	mov	r0, r4
   18f34:	bl	12c3c <ReadInt8Data>
   18f38:	ldr	r3, [sp, #196]	; 0xc4
   18f3c:	ldr	r3, [r3]
   18f40:	ldr	r1, [fp]
   18f44:	sub	r2, r3, r1
   18f48:	add	r5, r2, r5
   18f4c:	ldr	r2, [sp, #208]	; 0xd0
   18f50:	ldr	r2, [r2]
   18f54:	sub	r3, r3, r2
   18f58:	sub	r1, r3, r1
   18f5c:	mov	r2, #1
   18f60:	ldr	r3, [sp]
   18f64:	mul	r1, r3, r1
   18f68:	ldr	r0, [r4]
   18f6c:	bl	1694 <fseek@plt>
   18f70:	ldr	r3, [sp, #192]	; 0xc0
   18f74:	cmp	r3, #1
   18f78:	ble	18ee8 <ReadDataSlabN+0x2784>
   18f7c:	ldr	r3, [sp, #76]	; 0x4c
   18f80:	add	r3, r3, #1
   18f84:	str	r3, [sp, #76]	; 0x4c
   18f88:	ldr	r2, [sp, #208]	; 0xd0
   18f8c:	ldr	r1, [r2, #4]
   18f90:	sdiv	r2, r3, r1
   18f94:	mls	r3, r1, r2, r3
   18f98:	cmp	r3, #0
   18f9c:	bne	18ebc <ReadDataSlabN+0x2758>
   18fa0:	add	r7, sp, #76	; 0x4c
   18fa4:	ldr	r3, [sp, #208]	; 0xd0
   18fa8:	add	r9, r3, #4
   18fac:	add	r8, sp, #36	; 0x24
   18fb0:	ldr	r4, [sp, #28]
   18fb4:	b	18e6c <ReadDataSlabN+0x2708>
   18fb8:	mov	r0, #0
   18fbc:	b	16d04 <ReadDataSlabN+0x5a0>
   18fc0:	mov	r2, #1
   18fc4:	ldr	r3, [sp]
   18fc8:	mul	r1, r3, r1
   18fcc:	ldr	r3, [sp, #4]
   18fd0:	ldr	r0, [r3]
   18fd4:	bl	1694 <fseek@plt>
   18fd8:	ldr	r3, [fp]
   18fdc:	add	r5, r5, r3
   18fe0:	b	190fc <ReadDataSlabN+0x2998>
   18fe4:	sub	r4, r4, r3
   18fe8:	ldr	r7, [r9, #-8]
   18fec:	ldr	r1, [fp, r6, lsl #2]
   18ff0:	mla	r1, r1, r7, r4
   18ff4:	mov	r2, #1
   18ff8:	ldr	r3, [sp]
   18ffc:	mul	r1, r3, r1
   19000:	ldr	r3, [sp, #4]
   19004:	ldr	r0, [r3]
   19008:	bl	1694 <fseek@plt>
   1900c:	ldr	r3, [fp, r6, lsl #2]
   19010:	mla	r4, r3, r7, r4
   19014:	add	r5, r5, r4
   19018:	add	r6, r6, #1
   1901c:	ldr	r3, [sp, #192]	; 0xc0
   19020:	cmp	r3, r6
   19024:	beq	191ec <ReadDataSlabN+0x2a88>
   19028:	ldr	r3, [r8]
   1902c:	add	r3, r3, #1
   19030:	str	r3, [r8]
   19034:	ldr	r1, [sl, #4]!
   19038:	sdiv	r2, r3, r1
   1903c:	mls	r3, r1, r2, r3
   19040:	cmp	r3, #0
   19044:	bne	190a4 <ReadDataSlabN+0x2940>
   19048:	mov	r3, #0
   1904c:	str	r3, [r8], #4
   19050:	ldr	r4, [r9], #4
   19054:	sdiv	r3, r5, r4
   19058:	mls	r3, r4, r3, r5
   1905c:	cmp	r3, #0
   19060:	bne	18fe4 <ReadDataSlabN+0x2880>
   19064:	ldr	r1, [fp, r6, lsl #2]
   19068:	cmp	r1, #0
   1906c:	beq	19018 <ReadDataSlabN+0x28b4>
   19070:	ldr	r4, [r9, #-8]
   19074:	mul	r1, r4, r1
   19078:	mov	r2, #1
   1907c:	ldr	r3, [sp]
   19080:	mul	r1, r3, r1
   19084:	ldr	r3, [sp, #4]
   19088:	ldr	r0, [r3]
   1908c:	bl	1694 <fseek@plt>
   19090:	ldr	r3, [fp, r6, lsl #2]
   19094:	mla	r5, r3, r4, r5
   19098:	b	19018 <ReadDataSlabN+0x28b4>
   1909c:	mov	r6, #1
   190a0:	b	190a8 <ReadDataSlabN+0x2944>
   190a4:	ldr	r4, [sp, #204]	; 0xcc
   190a8:	add	r3, sp, #152	; 0x98
   190ac:	add	r6, r3, r6, lsl #2
   190b0:	ldr	r1, [r6, #-40]	; 0xffffffd8
   190b4:	add	r5, r5, r1
   190b8:	mov	r2, #1
   190bc:	ldr	r3, [sp]
   190c0:	mul	r1, r3, r1
   190c4:	ldr	r3, [sp, #4]
   190c8:	ldr	r0, [r3]
   190cc:	bl	1694 <fseek@plt>
   190d0:	ldr	r3, [sp, #208]	; 0xd0
   190d4:	ldr	r3, [r3]
   190d8:	ldr	r2, [sp, #20]
   190dc:	add	r3, r2, r3
   190e0:	str	r3, [sp, #20]
   190e4:	ldr	r2, [sp, #16]
   190e8:	cmp	r3, r2
   190ec:	bge	191f4 <ReadDataSlabN+0x2a90>
   190f0:	ldr	r1, [fp]
   190f4:	cmp	r1, #0
   190f8:	bne	18fc0 <ReadDataSlabN+0x285c>
   190fc:	ldr	r3, [sp, #208]	; 0xd0
   19100:	ldr	r1, [r3]
   19104:	cmp	r1, #0
   19108:	ble	1916c <ReadDataSlabN+0x2a08>
   1910c:	mov	r6, #0
   19110:	ldr	r3, [sp, #12]
   19114:	ldr	r2, [sp, #20]
   19118:	add	r7, r3, r2
   1911c:	ldr	r9, [sp]
   19120:	ldr	sl, [sp, #208]	; 0xd0
   19124:	ldr	r8, [sp, #4]
   19128:	mov	r3, #1
   1912c:	ldr	r2, [sp, #8]
   19130:	add	r1, r7, r6
   19134:	mov	r0, r8
   19138:	bl	12c3c <ReadInt8Data>
   1913c:	ldr	r1, [r4]
   19140:	sub	r1, r1, #1
   19144:	mov	r2, #1
   19148:	mul	r1, r9, r1
   1914c:	ldr	r0, [r8]
   19150:	bl	1694 <fseek@plt>
   19154:	ldr	r3, [r4]
   19158:	add	r5, r5, r3
   1915c:	add	r6, r6, #1
   19160:	ldr	r1, [sl]
   19164:	cmp	r1, r6
   19168:	bgt	19128 <ReadDataSlabN+0x29c4>
   1916c:	ldr	r3, [sp, #196]	; 0xc4
   19170:	ldr	r3, [r3]
   19174:	ldr	r2, [fp]
   19178:	sub	r3, r3, r2
   1917c:	ldr	r2, [r4]
   19180:	mls	r1, r2, r1, r3
   19184:	add	r5, r5, r1
   19188:	mov	r2, #1
   1918c:	ldr	r3, [sp]
   19190:	mul	r1, r3, r1
   19194:	ldr	r3, [sp, #4]
   19198:	ldr	r0, [r3]
   1919c:	bl	1694 <fseek@plt>
   191a0:	ldr	r3, [sp, #192]	; 0xc0
   191a4:	cmp	r3, #1
   191a8:	ble	190d0 <ReadDataSlabN+0x296c>
   191ac:	ldr	r3, [sp, #76]	; 0x4c
   191b0:	add	r3, r3, #1
   191b4:	str	r3, [sp, #76]	; 0x4c
   191b8:	ldr	r2, [sp, #208]	; 0xd0
   191bc:	ldr	r1, [r2, #4]
   191c0:	sdiv	r2, r3, r1
   191c4:	mls	r3, r1, r2, r3
   191c8:	cmp	r3, #0
   191cc:	bne	1909c <ReadDataSlabN+0x2938>
   191d0:	add	r8, sp, #76	; 0x4c
   191d4:	ldr	r3, [sp, #208]	; 0xd0
   191d8:	add	sl, r3, #4
   191dc:	add	r9, sp, #36	; 0x24
   191e0:	mov	r6, #1
   191e4:	str	r4, [sp, #204]	; 0xcc
   191e8:	b	19048 <ReadDataSlabN+0x28e4>
   191ec:	ldr	r4, [sp, #204]	; 0xcc
   191f0:	b	190d0 <ReadDataSlabN+0x296c>
   191f4:	mov	r0, #0
   191f8:	b	16d04 <ReadDataSlabN+0x5a0>
   191fc:	ldr	r3, [r4]
   19200:	sub	r3, r3, #1
   19204:	str	r3, [sp, #112]	; 0x70
   19208:	ldr	r3, [sp, #196]	; 0xc4
   1920c:	ldr	r3, [r3]
   19210:	str	r3, [sp, #32]
   19214:	ldr	r3, [sp, #208]	; 0xd0
   19218:	ldr	r3, [r3]
   1921c:	str	r3, [sp, #16]
   19220:	ldr	r3, [sp, #192]	; 0xc0
   19224:	cmp	r3, #1
   19228:	ble	19250 <ReadDataSlabN+0x2aec>
   1922c:	mov	r8, r4
   19230:	add	sl, sp, #116	; 0x74
   19234:	ldr	lr, [sp, #196]	; 0xc4
   19238:	add	r7, sp, #32
   1923c:	mov	r9, lr
   19240:	mov	r6, #1
   19244:	mov	r5, #0
   19248:	str	r4, [sp, #204]	; 0xcc
   1924c:	b	19a10 <ReadDataSlabN+0x32ac>
   19250:	mov	r5, #0
   19254:	b	19aa0 <ReadDataSlabN+0x333c>
   19258:	ldr	r3, [sp, #16]
   1925c:	cmp	r3, #0
   19260:	ble	196fc <ReadDataSlabN+0x2f98>
   19264:	mov	r3, #0
   19268:	str	r3, [sp, #24]
   1926c:	mov	sl, r3
   19270:	b	193a0 <ReadDataSlabN+0x2c3c>
   19274:	mov	r2, #1
   19278:	ldr	r3, [sp]
   1927c:	mul	r1, r3, r1
   19280:	ldr	r3, [sp, #4]
   19284:	ldr	r0, [r3]
   19288:	bl	1694 <fseek@plt>
   1928c:	ldr	r3, [fp]
   19290:	add	r5, r5, r3
   19294:	b	193ac <ReadDataSlabN+0x2c48>
   19298:	sub	r6, r6, r3
   1929c:	ldr	r3, [r8, #-8]
   192a0:	ldr	r1, [fp, r4, lsl #2]
   192a4:	str	r3, [sp, #20]
   192a8:	mla	r1, r1, r3, r6
   192ac:	mov	r2, #1
   192b0:	ldr	r0, [sp]
   192b4:	mul	r1, r0, r1
   192b8:	ldr	r0, [sp, #4]
   192bc:	ldr	r0, [r0]
   192c0:	bl	1694 <fseek@plt>
   192c4:	ldr	r3, [fp, r4, lsl #2]
   192c8:	ldr	r2, [sp, #20]
   192cc:	mla	r6, r3, r2, r6
   192d0:	add	r5, r5, r6
   192d4:	add	r4, r4, #1
   192d8:	ldr	r3, [sp, #192]	; 0xc0
   192dc:	cmp	r3, r4
   192e0:	beq	19380 <ReadDataSlabN+0x2c1c>
   192e4:	ldr	r3, [r7]
   192e8:	add	r3, r3, #1
   192ec:	str	r3, [r7]
   192f0:	ldr	r1, [r9, #4]!
   192f4:	sdiv	r2, r3, r1
   192f8:	mls	r3, r1, r2, r3
   192fc:	cmp	r3, #0
   19300:	bne	19358 <ReadDataSlabN+0x2bf4>
   19304:	str	sl, [r7], #4
   19308:	ldr	r6, [r8], #4
   1930c:	sdiv	r3, r5, r6
   19310:	mls	r3, r6, r3, r5
   19314:	cmp	r3, #0
   19318:	bne	19298 <ReadDataSlabN+0x2b34>
   1931c:	ldr	r1, [fp, r4, lsl #2]
   19320:	cmp	r1, #0
   19324:	beq	192d4 <ReadDataSlabN+0x2b70>
   19328:	ldr	r6, [r8, #-8]
   1932c:	mul	r1, r6, r1
   19330:	mov	r2, #1
   19334:	ldr	r3, [sp]
   19338:	mul	r1, r3, r1
   1933c:	ldr	r3, [sp, #4]
   19340:	ldr	r0, [r3]
   19344:	bl	1694 <fseek@plt>
   19348:	ldr	r3, [fp, r4, lsl #2]
   1934c:	mla	r5, r3, r6, r5
   19350:	b	192d4 <ReadDataSlabN+0x2b70>
   19354:	ldr	r4, [sp, #28]
   19358:	add	r3, sp, #152	; 0x98
   1935c:	add	r4, r3, r4, lsl #2
   19360:	ldr	r1, [r4, #-40]	; 0xffffffd8
   19364:	add	r5, r5, r1
   19368:	mov	r2, #1
   1936c:	ldr	r3, [sp]
   19370:	mul	r1, r3, r1
   19374:	ldr	r3, [sp, #4]
   19378:	ldr	r0, [r3]
   1937c:	bl	1694 <fseek@plt>
   19380:	ldr	r3, [sp, #208]	; 0xd0
   19384:	ldr	r3, [r3]
   19388:	ldr	r2, [sp, #24]
   1938c:	add	r3, r2, r3
   19390:	str	r3, [sp, #24]
   19394:	ldr	r2, [sp, #16]
   19398:	cmp	r3, r2
   1939c:	bge	19450 <ReadDataSlabN+0x2cec>
   193a0:	ldr	r1, [fp]
   193a4:	cmp	r1, #0
   193a8:	bne	19274 <ReadDataSlabN+0x2b10>
   193ac:	ldr	r3, [sp, #208]	; 0xd0
   193b0:	ldr	r3, [r3]
   193b4:	ldr	r2, [sp, #8]
   193b8:	ldr	r1, [sp, #12]
   193bc:	ldr	r0, [sp, #24]
   193c0:	add	r1, r1, r0
   193c4:	ldr	r4, [sp, #4]
   193c8:	mov	r0, r4
   193cc:	bl	14860 <ReadUInt8Data>
   193d0:	ldr	r3, [sp, #196]	; 0xc4
   193d4:	ldr	r3, [r3]
   193d8:	ldr	r1, [fp]
   193dc:	sub	r2, r3, r1
   193e0:	add	r5, r2, r5
   193e4:	ldr	r2, [sp, #208]	; 0xd0
   193e8:	ldr	r2, [r2]
   193ec:	sub	r3, r3, r2
   193f0:	sub	r1, r3, r1
   193f4:	mov	r2, #1
   193f8:	ldr	r3, [sp]
   193fc:	mul	r1, r3, r1
   19400:	ldr	r0, [r4]
   19404:	bl	1694 <fseek@plt>
   19408:	ldr	r3, [sp, #192]	; 0xc0
   1940c:	cmp	r3, #1
   19410:	ble	19380 <ReadDataSlabN+0x2c1c>
   19414:	ldr	r3, [sp, #76]	; 0x4c
   19418:	add	r3, r3, #1
   1941c:	str	r3, [sp, #76]	; 0x4c
   19420:	ldr	r2, [sp, #208]	; 0xd0
   19424:	ldr	r1, [r2, #4]
   19428:	sdiv	r2, r3, r1
   1942c:	mls	r3, r1, r2, r3
   19430:	cmp	r3, #0
   19434:	bne	19354 <ReadDataSlabN+0x2bf0>
   19438:	add	r7, sp, #76	; 0x4c
   1943c:	ldr	r3, [sp, #208]	; 0xd0
   19440:	add	r9, r3, #4
   19444:	add	r8, sp, #36	; 0x24
   19448:	ldr	r4, [sp, #28]
   1944c:	b	19304 <ReadDataSlabN+0x2ba0>
   19450:	mov	r0, #0
   19454:	b	16d04 <ReadDataSlabN+0x5a0>
   19458:	mov	r2, #1
   1945c:	ldr	r3, [sp]
   19460:	mul	r1, r3, r1
   19464:	ldr	r3, [sp, #4]
   19468:	ldr	r0, [r3]
   1946c:	bl	1694 <fseek@plt>
   19470:	ldr	r3, [fp]
   19474:	add	r5, r5, r3
   19478:	b	19594 <ReadDataSlabN+0x2e30>
   1947c:	sub	r4, r4, r3
   19480:	ldr	r7, [r9, #-8]
   19484:	ldr	r1, [fp, r6, lsl #2]
   19488:	mla	r1, r1, r7, r4
   1948c:	mov	r2, #1
   19490:	ldr	r3, [sp]
   19494:	mul	r1, r3, r1
   19498:	ldr	r3, [sp, #4]
   1949c:	ldr	r0, [r3]
   194a0:	bl	1694 <fseek@plt>
   194a4:	ldr	r3, [fp, r6, lsl #2]
   194a8:	mla	r4, r3, r7, r4
   194ac:	add	r5, r5, r4
   194b0:	add	r6, r6, #1
   194b4:	ldr	r3, [sp, #192]	; 0xc0
   194b8:	cmp	r3, r6
   194bc:	beq	19684 <ReadDataSlabN+0x2f20>
   194c0:	ldr	r3, [r8]
   194c4:	add	r3, r3, #1
   194c8:	str	r3, [r8]
   194cc:	ldr	r1, [sl, #4]!
   194d0:	sdiv	r2, r3, r1
   194d4:	mls	r3, r1, r2, r3
   194d8:	cmp	r3, #0
   194dc:	bne	1953c <ReadDataSlabN+0x2dd8>
   194e0:	mov	r3, #0
   194e4:	str	r3, [r8], #4
   194e8:	ldr	r4, [r9], #4
   194ec:	sdiv	r3, r5, r4
   194f0:	mls	r3, r4, r3, r5
   194f4:	cmp	r3, #0
   194f8:	bne	1947c <ReadDataSlabN+0x2d18>
   194fc:	ldr	r1, [fp, r6, lsl #2]
   19500:	cmp	r1, #0
   19504:	beq	194b0 <ReadDataSlabN+0x2d4c>
   19508:	ldr	r4, [r9, #-8]
   1950c:	mul	r1, r4, r1
   19510:	mov	r2, #1
   19514:	ldr	r3, [sp]
   19518:	mul	r1, r3, r1
   1951c:	ldr	r3, [sp, #4]
   19520:	ldr	r0, [r3]
   19524:	bl	1694 <fseek@plt>
   19528:	ldr	r3, [fp, r6, lsl #2]
   1952c:	mla	r5, r3, r4, r5
   19530:	b	194b0 <ReadDataSlabN+0x2d4c>
   19534:	mov	r6, #1
   19538:	b	19540 <ReadDataSlabN+0x2ddc>
   1953c:	ldr	r4, [sp, #204]	; 0xcc
   19540:	add	r3, sp, #152	; 0x98
   19544:	add	r6, r3, r6, lsl #2
   19548:	ldr	r1, [r6, #-40]	; 0xffffffd8
   1954c:	add	r5, r5, r1
   19550:	mov	r2, #1
   19554:	ldr	r3, [sp]
   19558:	mul	r1, r3, r1
   1955c:	ldr	r3, [sp, #4]
   19560:	ldr	r0, [r3]
   19564:	bl	1694 <fseek@plt>
   19568:	ldr	r3, [sp, #208]	; 0xd0
   1956c:	ldr	r3, [r3]
   19570:	ldr	r2, [sp, #20]
   19574:	add	r3, r2, r3
   19578:	str	r3, [sp, #20]
   1957c:	ldr	r2, [sp, #16]
   19580:	cmp	r3, r2
   19584:	bge	1968c <ReadDataSlabN+0x2f28>
   19588:	ldr	r1, [fp]
   1958c:	cmp	r1, #0
   19590:	bne	19458 <ReadDataSlabN+0x2cf4>
   19594:	ldr	r3, [sp, #208]	; 0xd0
   19598:	ldr	r1, [r3]
   1959c:	cmp	r1, #0
   195a0:	ble	19604 <ReadDataSlabN+0x2ea0>
   195a4:	mov	r6, #0
   195a8:	ldr	r3, [sp, #12]
   195ac:	ldr	r2, [sp, #20]
   195b0:	add	r7, r3, r2
   195b4:	ldr	r9, [sp]
   195b8:	ldr	sl, [sp, #208]	; 0xd0
   195bc:	ldr	r8, [sp, #4]
   195c0:	mov	r3, #1
   195c4:	ldr	r2, [sp, #8]
   195c8:	add	r1, r7, r6
   195cc:	mov	r0, r8
   195d0:	bl	14860 <ReadUInt8Data>
   195d4:	ldr	r1, [r4]
   195d8:	sub	r1, r1, #1
   195dc:	mov	r2, #1
   195e0:	mul	r1, r9, r1
   195e4:	ldr	r0, [r8]
   195e8:	bl	1694 <fseek@plt>
   195ec:	ldr	r3, [r4]
   195f0:	add	r5, r5, r3
   195f4:	add	r6, r6, #1
   195f8:	ldr	r1, [sl]
   195fc:	cmp	r1, r6
   19600:	bgt	195c0 <ReadDataSlabN+0x2e5c>
   19604:	ldr	r3, [sp, #196]	; 0xc4
   19608:	ldr	r3, [r3]
   1960c:	ldr	r2, [fp]
   19610:	sub	r3, r3, r2
   19614:	ldr	r2, [r4]
   19618:	mls	r1, r2, r1, r3
   1961c:	add	r5, r5, r1
   19620:	mov	r2, #1
   19624:	ldr	r3, [sp]
   19628:	mul	r1, r3, r1
   1962c:	ldr	r3, [sp, #4]
   19630:	ldr	r0, [r3]
   19634:	bl	1694 <fseek@plt>
   19638:	ldr	r3, [sp, #192]	; 0xc0
   1963c:	cmp	r3, #1
   19640:	ble	19568 <ReadDataSlabN+0x2e04>
   19644:	ldr	r3, [sp, #76]	; 0x4c
   19648:	add	r3, r3, #1
   1964c:	str	r3, [sp, #76]	; 0x4c
   19650:	ldr	r2, [sp, #208]	; 0xd0
   19654:	ldr	r1, [r2, #4]
   19658:	sdiv	r2, r3, r1
   1965c:	mls	r3, r1, r2, r3
   19660:	cmp	r3, #0
   19664:	bne	19534 <ReadDataSlabN+0x2dd0>
   19668:	add	r8, sp, #76	; 0x4c
   1966c:	ldr	r3, [sp, #208]	; 0xd0
   19670:	add	sl, r3, #4
   19674:	add	r9, sp, #36	; 0x24
   19678:	mov	r6, #1
   1967c:	str	r4, [sp, #204]	; 0xcc
   19680:	b	194e0 <ReadDataSlabN+0x2d7c>
   19684:	ldr	r4, [sp, #204]	; 0xcc
   19688:	b	19568 <ReadDataSlabN+0x2e04>
   1968c:	mov	r0, #0
   19690:	b	16d04 <ReadDataSlabN+0x5a0>
   19694:	mvn	r0, #0
   19698:	b	16d04 <ReadDataSlabN+0x5a0>
   1969c:	mvn	r0, #0
   196a0:	b	16d04 <ReadDataSlabN+0x5a0>
   196a4:	mvn	r0, #0
   196a8:	b	16d04 <ReadDataSlabN+0x5a0>
   196ac:	mov	r0, #0
   196b0:	b	16d04 <ReadDataSlabN+0x5a0>
   196b4:	mov	r0, #0
   196b8:	b	16d04 <ReadDataSlabN+0x5a0>
   196bc:	mov	r0, #0
   196c0:	b	16d04 <ReadDataSlabN+0x5a0>
   196c4:	mov	r0, #0
   196c8:	b	16d04 <ReadDataSlabN+0x5a0>
   196cc:	mov	r0, #0
   196d0:	b	16d04 <ReadDataSlabN+0x5a0>
   196d4:	mov	r0, #0
   196d8:	b	16d04 <ReadDataSlabN+0x5a0>
   196dc:	mov	r0, #0
   196e0:	b	16d04 <ReadDataSlabN+0x5a0>
   196e4:	mov	r0, #0
   196e8:	b	16d04 <ReadDataSlabN+0x5a0>
   196ec:	mov	r0, #0
   196f0:	b	16d04 <ReadDataSlabN+0x5a0>
   196f4:	mov	r0, #0
   196f8:	b	16d04 <ReadDataSlabN+0x5a0>
   196fc:	mov	r0, #0
   19700:	b	16d04 <ReadDataSlabN+0x5a0>
   19704:	ldr	r3, [sp, #208]	; 0xd0
   19708:	ldr	r3, [r3]
   1970c:	ldr	r2, [sp, #16]
   19710:	mul	r3, r3, r2
   19714:	str	r3, [sp, #16]
   19718:	ldr	r3, [r7, #-4]
   1971c:	ldr	r2, [fp]
   19720:	mla	r5, r2, r3, r5
   19724:	add	r6, r6, #1
   19728:	ldr	r3, [r8, #4]!
   1972c:	sub	r3, r3, #1
   19730:	str	r3, [sl], #4
   19734:	ldr	r3, [r9], #4
   19738:	mov	r2, r3
   1973c:	add	r7, r7, #4
   19740:	mov	r4, r7
   19744:	str	r3, [r7]
   19748:	cmp	r6, #0
   1974c:	beq	19704 <ReadDataSlabN+0x2fa0>
   19750:	str	sl, [sp, #20]
   19754:	ldr	r1, [sl, #-4]
   19758:	mov	r3, r9
   1975c:	mov	r0, r3
   19760:	ldr	ip, [r3, #-4]!
   19764:	mul	r1, ip, r1
   19768:	ldr	r0, [r0]
   1976c:	mul	r2, r0, r2
   19770:	cmp	r3, lr
   19774:	bne	1975c <ReadDataSlabN+0x2ff8>
   19778:	ldr	r3, [sp, #20]
   1977c:	str	r1, [r3, #-4]
   19780:	str	r2, [r4]
   19784:	ldr	r3, [sp, #208]	; 0xd0
   19788:	ldr	r3, [r3, r6, lsl #2]
   1978c:	ldr	r2, [sp, #16]
   19790:	mul	r3, r3, r2
   19794:	str	r3, [sp, #16]
   19798:	ldr	r3, [r4, #-4]
   1979c:	ldr	r2, [fp, r6, lsl #2]
   197a0:	mla	r5, r2, r3, r5
   197a4:	add	r3, r6, #1
   197a8:	ldr	r2, [sp, #192]	; 0xc0
   197ac:	cmp	r3, r2
   197b0:	blt	19724 <ReadDataSlabN+0x2fc0>
   197b4:	ldr	r4, [sp, #204]	; 0xcc
   197b8:	mov	r2, #1
   197bc:	ldr	r3, [sp]
   197c0:	mul	r1, r3, r5
   197c4:	ldr	r3, [sp, #4]
   197c8:	ldr	r0, [r3]
   197cc:	bl	1694 <fseek@plt>
   197d0:	ldr	r3, [r4]
   197d4:	str	r3, [sp, #28]
   197d8:	cmp	r3, #1
   197dc:	beq	168c8 <ReadDataSlabN+0x164>
   197e0:	ldr	r3, [sp, #16]
   197e4:	cmp	r3, #0
   197e8:	movle	r0, #0
   197ec:	ble	16d04 <ReadDataSlabN+0x5a0>
   197f0:	mov	r3, #0
   197f4:	str	r3, [sp, #20]
   197f8:	b	16bf8 <ReadDataSlabN+0x494>
   197fc:	ldr	r3, [sp, #208]	; 0xd0
   19800:	ldr	r3, [r3]
   19804:	ldr	r2, [sp, #16]
   19808:	mul	r3, r3, r2
   1980c:	str	r3, [sp, #16]
   19810:	ldr	r3, [r7, #-4]
   19814:	ldr	r2, [fp]
   19818:	mla	r5, r2, r3, r5
   1981c:	add	r6, r6, #1
   19820:	ldr	r3, [r8, #4]!
   19824:	sub	r3, r3, #1
   19828:	str	r3, [sl], #4
   1982c:	ldr	r3, [r9], #4
   19830:	mov	r2, r3
   19834:	add	r7, r7, #4
   19838:	mov	r4, r7
   1983c:	str	r3, [r7]
   19840:	cmp	r6, #0
   19844:	beq	197fc <ReadDataSlabN+0x3098>
   19848:	str	sl, [sp, #20]
   1984c:	ldr	r1, [sl, #-4]
   19850:	mov	r3, r9
   19854:	mov	r0, r3
   19858:	ldr	ip, [r3, #-4]!
   1985c:	mul	r1, ip, r1
   19860:	ldr	r0, [r0]
   19864:	mul	r2, r0, r2
   19868:	cmp	r3, lr
   1986c:	bne	19854 <ReadDataSlabN+0x30f0>
   19870:	ldr	r3, [sp, #20]
   19874:	str	r1, [r3, #-4]
   19878:	str	r2, [r4]
   1987c:	ldr	r3, [sp, #208]	; 0xd0
   19880:	ldr	r3, [r3, r6, lsl #2]
   19884:	ldr	r2, [sp, #16]
   19888:	mul	r3, r3, r2
   1988c:	str	r3, [sp, #16]
   19890:	ldr	r3, [r4, #-4]
   19894:	ldr	r2, [fp, r6, lsl #2]
   19898:	mla	r5, r2, r3, r5
   1989c:	add	r3, r6, #1
   198a0:	ldr	r2, [sp, #192]	; 0xc0
   198a4:	cmp	r3, r2
   198a8:	blt	1981c <ReadDataSlabN+0x30b8>
   198ac:	ldr	r4, [sp, #204]	; 0xcc
   198b0:	mov	r2, #1
   198b4:	ldr	r3, [sp]
   198b8:	mul	r1, r3, r5
   198bc:	ldr	r3, [sp, #4]
   198c0:	ldr	r0, [r3]
   198c4:	bl	1694 <fseek@plt>
   198c8:	ldr	r3, [r4]
   198cc:	str	r3, [sp, #28]
   198d0:	cmp	r3, #1
   198d4:	beq	16d7c <ReadDataSlabN+0x618>
   198d8:	ldr	r3, [sp, #16]
   198dc:	cmp	r3, #0
   198e0:	movle	r0, #0
   198e4:	ble	16d04 <ReadDataSlabN+0x5a0>
   198e8:	mov	r3, #0
   198ec:	str	r3, [sp, #20]
   198f0:	b	170ac <ReadDataSlabN+0x948>
   198f4:	ldr	r3, [sp, #208]	; 0xd0
   198f8:	ldr	r3, [r3]
   198fc:	ldr	r2, [sp, #16]
   19900:	mul	r3, r3, r2
   19904:	str	r3, [sp, #16]
   19908:	ldr	r3, [r7, #-4]
   1990c:	ldr	r2, [fp]
   19910:	mla	r5, r2, r3, r5
   19914:	add	r6, r6, #1
   19918:	ldr	r3, [r8, #4]!
   1991c:	sub	r3, r3, #1
   19920:	str	r3, [sl], #4
   19924:	ldr	r3, [r9], #4
   19928:	mov	r2, r3
   1992c:	add	r7, r7, #4
   19930:	mov	r4, r7
   19934:	str	r3, [r7]
   19938:	cmp	r6, #0
   1993c:	beq	198f4 <ReadDataSlabN+0x3190>
   19940:	str	sl, [sp, #20]
   19944:	ldr	r1, [sl, #-4]
   19948:	mov	r3, r9
   1994c:	mov	r0, r3
   19950:	ldr	ip, [r3, #-4]!
   19954:	mul	r1, ip, r1
   19958:	ldr	r0, [r0]
   1995c:	mul	r2, r0, r2
   19960:	cmp	r3, lr
   19964:	bne	1994c <ReadDataSlabN+0x31e8>
   19968:	ldr	r3, [sp, #20]
   1996c:	str	r1, [r3, #-4]
   19970:	str	r2, [r4]
   19974:	ldr	r3, [sp, #208]	; 0xd0
   19978:	ldr	r3, [r3, r6, lsl #2]
   1997c:	ldr	r2, [sp, #16]
   19980:	mul	r3, r3, r2
   19984:	str	r3, [sp, #16]
   19988:	ldr	r3, [r4, #-4]
   1998c:	ldr	r2, [fp, r6, lsl #2]
   19990:	mla	r5, r2, r3, r5
   19994:	add	r3, r6, #1
   19998:	ldr	r2, [sp, #192]	; 0xc0
   1999c:	cmp	r2, r3
   199a0:	bgt	19914 <ReadDataSlabN+0x31b0>
   199a4:	ldr	r4, [sp, #204]	; 0xcc
   199a8:	mov	r2, #1
   199ac:	ldr	r3, [sp]
   199b0:	mul	r1, r3, r5
   199b4:	ldr	r3, [sp, #4]
   199b8:	ldr	r0, [r3]
   199bc:	bl	1694 <fseek@plt>
   199c0:	ldr	r3, [r4]
   199c4:	str	r3, [sp, #28]
   199c8:	cmp	r3, #1
   199cc:	beq	18dc0 <ReadDataSlabN+0x265c>
   199d0:	ldr	r3, [sp, #16]
   199d4:	cmp	r3, #0
   199d8:	movle	r0, #0
   199dc:	ble	16d04 <ReadDataSlabN+0x5a0>
   199e0:	mov	r3, #0
   199e4:	str	r3, [sp, #20]
   199e8:	b	190f0 <ReadDataSlabN+0x298c>
   199ec:	ldr	r3, [sp, #208]	; 0xd0
   199f0:	ldr	r3, [r3]
   199f4:	ldr	r2, [sp, #16]
   199f8:	mul	r3, r3, r2
   199fc:	str	r3, [sp, #16]
   19a00:	ldr	r3, [r7, #-4]
   19a04:	ldr	r2, [fp]
   19a08:	mla	r5, r2, r3, r5
   19a0c:	add	r6, r6, #1
   19a10:	ldr	r3, [r8, #4]!
   19a14:	sub	r3, r3, #1
   19a18:	str	r3, [sl], #4
   19a1c:	ldr	r3, [r9], #4
   19a20:	mov	r2, r3
   19a24:	add	r7, r7, #4
   19a28:	mov	r4, r7
   19a2c:	str	r3, [r7]
   19a30:	cmp	r6, #0
   19a34:	beq	199ec <ReadDataSlabN+0x3288>
   19a38:	str	sl, [sp, #20]
   19a3c:	ldr	r1, [sl, #-4]
   19a40:	mov	r3, r9
   19a44:	mov	r0, r3
   19a48:	ldr	ip, [r3, #-4]!
   19a4c:	mul	r1, ip, r1
   19a50:	ldr	r0, [r0]
   19a54:	mul	r2, r0, r2
   19a58:	cmp	r3, lr
   19a5c:	bne	19a44 <ReadDataSlabN+0x32e0>
   19a60:	ldr	r3, [sp, #20]
   19a64:	str	r1, [r3, #-4]
   19a68:	str	r2, [r4]
   19a6c:	ldr	r3, [sp, #208]	; 0xd0
   19a70:	ldr	r3, [r3, r6, lsl #2]
   19a74:	ldr	r2, [sp, #16]
   19a78:	mul	r3, r3, r2
   19a7c:	str	r3, [sp, #16]
   19a80:	ldr	r3, [r4, #-4]
   19a84:	ldr	r2, [fp, r6, lsl #2]
   19a88:	mla	r5, r2, r3, r5
   19a8c:	add	r3, r6, #1
   19a90:	ldr	r2, [sp, #192]	; 0xc0
   19a94:	cmp	r2, r3
   19a98:	bgt	19a0c <ReadDataSlabN+0x32a8>
   19a9c:	ldr	r4, [sp, #204]	; 0xcc
   19aa0:	mov	r2, #1
   19aa4:	ldr	r3, [sp]
   19aa8:	mul	r1, r3, r5
   19aac:	ldr	r3, [sp, #4]
   19ab0:	ldr	r0, [r3]
   19ab4:	bl	1694 <fseek@plt>
   19ab8:	ldr	r3, [r4]
   19abc:	str	r3, [sp, #28]
   19ac0:	cmp	r3, #1
   19ac4:	beq	19258 <ReadDataSlabN+0x2af4>
   19ac8:	ldr	r3, [sp, #16]
   19acc:	cmp	r3, #0
   19ad0:	movle	r0, #0
   19ad4:	ble	16d04 <ReadDataSlabN+0x5a0>
   19ad8:	mov	r3, #0
   19adc:	str	r3, [sp, #20]
   19ae0:	b	19588 <ReadDataSlabN+0x2e24>
   19ae4:	ldr	r3, [sp, #208]	; 0xd0
   19ae8:	ldr	r3, [r3]
   19aec:	ldr	r2, [sp, #16]
   19af0:	mul	r3, r3, r2
   19af4:	str	r3, [sp, #16]
   19af8:	ldr	r3, [r7, #-4]
   19afc:	ldr	r2, [fp]
   19b00:	mla	r5, r2, r3, r5
   19b04:	add	r6, r6, #1
   19b08:	ldr	r3, [r8, #4]!
   19b0c:	sub	r3, r3, #1
   19b10:	str	r3, [sl], #4
   19b14:	ldr	r3, [r9], #4
   19b18:	mov	r2, r3
   19b1c:	add	r7, r7, #4
   19b20:	mov	r4, r7
   19b24:	str	r3, [r7]
   19b28:	cmp	r6, #0
   19b2c:	beq	19ae4 <ReadDataSlabN+0x3380>
   19b30:	str	sl, [sp, #20]
   19b34:	ldr	r1, [sl, #-4]
   19b38:	mov	r3, r9
   19b3c:	mov	r0, r3
   19b40:	ldr	ip, [r3, #-4]!
   19b44:	mul	r1, ip, r1
   19b48:	ldr	r0, [r0]
   19b4c:	mul	r2, r0, r2
   19b50:	cmp	r3, lr
   19b54:	bne	19b3c <ReadDataSlabN+0x33d8>
   19b58:	ldr	r3, [sp, #20]
   19b5c:	str	r1, [r3, #-4]
   19b60:	str	r2, [r4]
   19b64:	ldr	r3, [sp, #208]	; 0xd0
   19b68:	ldr	r3, [r3, r6, lsl #2]
   19b6c:	ldr	r2, [sp, #16]
   19b70:	mul	r3, r3, r2
   19b74:	str	r3, [sp, #16]
   19b78:	ldr	r3, [r4, #-4]
   19b7c:	ldr	r2, [fp, r6, lsl #2]
   19b80:	mla	r5, r2, r3, r5
   19b84:	add	r3, r6, #1
   19b88:	ldr	r2, [sp, #192]	; 0xc0
   19b8c:	cmp	r2, r3
   19b90:	bgt	19b04 <ReadDataSlabN+0x33a0>
   19b94:	ldr	r4, [sp, #204]	; 0xcc
   19b98:	mov	r2, #1
   19b9c:	ldr	r3, [sp]
   19ba0:	mul	r1, r3, r5
   19ba4:	ldr	r3, [sp, #4]
   19ba8:	ldr	r0, [r3]
   19bac:	bl	1694 <fseek@plt>
   19bb0:	ldr	r3, [r4]
   19bb4:	str	r3, [sp, #28]
   19bb8:	cmp	r3, #1
   19bbc:	beq	18488 <ReadDataSlabN+0x1d24>
   19bc0:	ldr	r3, [sp, #16]
   19bc4:	cmp	r3, #0
   19bc8:	movle	r0, #0
   19bcc:	ble	16d04 <ReadDataSlabN+0x5a0>
   19bd0:	mov	r3, #0
   19bd4:	str	r3, [sp, #20]
   19bd8:	b	187b8 <ReadDataSlabN+0x2054>
   19bdc:	ldr	r3, [sp, #208]	; 0xd0
   19be0:	ldr	r3, [r3]
   19be4:	ldr	r2, [sp, #16]
   19be8:	mul	r3, r3, r2
   19bec:	str	r3, [sp, #16]
   19bf0:	ldr	r3, [fp]
   19bf4:	ldr	r2, [r7, #-4]
   19bf8:	mla	r5, r2, r3, r5
   19bfc:	add	r6, r6, #1
   19c00:	ldr	r3, [r8, #4]!
   19c04:	sub	r3, r3, #1
   19c08:	str	r3, [sl], #4
   19c0c:	ldr	r3, [r9], #4
   19c10:	mov	r2, r3
   19c14:	add	r7, r7, #4
   19c18:	mov	r4, r7
   19c1c:	str	r3, [r7]
   19c20:	cmp	r6, #0
   19c24:	beq	19bdc <ReadDataSlabN+0x3478>
   19c28:	str	sl, [sp, #20]
   19c2c:	ldr	r1, [sl, #-4]
   19c30:	mov	r3, r9
   19c34:	mov	r0, r3
   19c38:	ldr	ip, [r3, #-4]!
   19c3c:	mul	r1, ip, r1
   19c40:	ldr	r0, [r0]
   19c44:	mul	r2, r0, r2
   19c48:	cmp	r3, lr
   19c4c:	bne	19c34 <ReadDataSlabN+0x34d0>
   19c50:	ldr	r3, [sp, #20]
   19c54:	str	r1, [r3, #-4]
   19c58:	str	r2, [r4]
   19c5c:	ldr	r3, [sp, #208]	; 0xd0
   19c60:	ldr	r3, [r3, r6, lsl #2]
   19c64:	ldr	r2, [sp, #16]
   19c68:	mul	r3, r3, r2
   19c6c:	str	r3, [sp, #16]
   19c70:	ldr	r3, [r4, #-4]
   19c74:	ldr	r2, [fp, r6, lsl #2]
   19c78:	mla	r5, r2, r3, r5
   19c7c:	add	r3, r6, #1
   19c80:	ldr	r2, [sp, #192]	; 0xc0
   19c84:	cmp	r2, r3
   19c88:	bgt	19bfc <ReadDataSlabN+0x3498>
   19c8c:	ldr	r4, [sp, #204]	; 0xcc
   19c90:	mov	r2, #1
   19c94:	ldr	r3, [sp]
   19c98:	mul	r1, r3, r5
   19c9c:	ldr	r3, [sp, #4]
   19ca0:	ldr	r0, [r3]
   19ca4:	bl	1694 <fseek@plt>
   19ca8:	ldr	r3, [r4]
   19cac:	str	r3, [sp, #28]
   19cb0:	cmp	r3, #1
   19cb4:	beq	18924 <ReadDataSlabN+0x21c0>
   19cb8:	ldr	r3, [sp, #16]
   19cbc:	cmp	r3, #0
   19cc0:	movle	r0, #0
   19cc4:	ble	16d04 <ReadDataSlabN+0x5a0>
   19cc8:	mov	r3, #0
   19ccc:	str	r3, [sp, #20]
   19cd0:	b	18c54 <ReadDataSlabN+0x24f0>
   19cd4:	ldr	r3, [sp, #208]	; 0xd0
   19cd8:	ldr	r3, [r3]
   19cdc:	ldr	r2, [sp, #16]
   19ce0:	mul	r3, r3, r2
   19ce4:	str	r3, [sp, #16]
   19ce8:	ldr	r3, [fp]
   19cec:	ldr	r2, [r7, #-4]
   19cf0:	mla	r5, r2, r3, r5
   19cf4:	add	r6, r6, #1
   19cf8:	ldr	r3, [r8, #4]!
   19cfc:	sub	r3, r3, #1
   19d00:	str	r3, [sl], #4
   19d04:	ldr	r3, [r9], #4
   19d08:	mov	r2, r3
   19d0c:	add	r7, r7, #4
   19d10:	mov	r4, r7
   19d14:	str	r3, [r7]
   19d18:	cmp	r6, #0
   19d1c:	beq	19cd4 <ReadDataSlabN+0x3570>
   19d20:	str	sl, [sp, #20]
   19d24:	ldr	r1, [sl, #-4]
   19d28:	mov	r3, r9
   19d2c:	mov	r0, r3
   19d30:	ldr	ip, [r3, #-4]!
   19d34:	mul	r1, ip, r1
   19d38:	ldr	r0, [r0]
   19d3c:	mul	r2, r0, r2
   19d40:	cmp	r3, lr
   19d44:	bne	19d2c <ReadDataSlabN+0x35c8>
   19d48:	ldr	r3, [sp, #20]
   19d4c:	str	r1, [r3, #-4]
   19d50:	str	r2, [r4]
   19d54:	ldr	r3, [sp, #208]	; 0xd0
   19d58:	ldr	r3, [r3, r6, lsl #2]
   19d5c:	ldr	r2, [sp, #16]
   19d60:	mul	r3, r3, r2
   19d64:	str	r3, [sp, #16]
   19d68:	ldr	r3, [r4, #-4]
   19d6c:	ldr	r2, [fp, r6, lsl #2]
   19d70:	mla	r5, r2, r3, r5
   19d74:	add	r3, r6, #1
   19d78:	ldr	r2, [sp, #192]	; 0xc0
   19d7c:	cmp	r2, r3
   19d80:	bgt	19cf4 <ReadDataSlabN+0x3590>
   19d84:	ldr	r4, [sp, #204]	; 0xcc
   19d88:	mov	r2, #1
   19d8c:	ldr	r3, [sp]
   19d90:	mul	r1, r3, r5
   19d94:	ldr	r3, [sp, #4]
   19d98:	ldr	r0, [r3]
   19d9c:	bl	1694 <fseek@plt>
   19da0:	ldr	r3, [r4]
   19da4:	str	r3, [sp, #28]
   19da8:	cmp	r3, #1
   19dac:	beq	17b50 <ReadDataSlabN+0x13ec>
   19db0:	ldr	r3, [sp, #16]
   19db4:	cmp	r3, #0
   19db8:	movle	r0, #0
   19dbc:	ble	16d04 <ReadDataSlabN+0x5a0>
   19dc0:	mov	r3, #0
   19dc4:	str	r3, [sp, #20]
   19dc8:	b	17e80 <ReadDataSlabN+0x171c>
   19dcc:	ldr	r3, [sp, #208]	; 0xd0
   19dd0:	ldr	r3, [r3]
   19dd4:	ldr	r2, [sp, #16]
   19dd8:	mul	r3, r3, r2
   19ddc:	str	r3, [sp, #16]
   19de0:	ldr	r3, [fp]
   19de4:	ldr	r2, [r7, #-4]
   19de8:	mla	r5, r2, r3, r5
   19dec:	add	r6, r6, #1
   19df0:	ldr	r3, [r8, #4]!
   19df4:	sub	r3, r3, #1
   19df8:	str	r3, [sl], #4
   19dfc:	ldr	r3, [r9], #4
   19e00:	mov	r2, r3
   19e04:	add	r7, r7, #4
   19e08:	mov	r4, r7
   19e0c:	str	r3, [r7]
   19e10:	cmp	r6, #0
   19e14:	beq	19dcc <ReadDataSlabN+0x3668>
   19e18:	str	sl, [sp, #20]
   19e1c:	ldr	r1, [sl, #-4]
   19e20:	mov	r3, r9
   19e24:	mov	r0, r3
   19e28:	ldr	ip, [r3, #-4]!
   19e2c:	mul	r1, ip, r1
   19e30:	ldr	r0, [r0]
   19e34:	mul	r2, r0, r2
   19e38:	cmp	r3, lr
   19e3c:	bne	19e24 <ReadDataSlabN+0x36c0>
   19e40:	ldr	r3, [sp, #20]
   19e44:	str	r1, [r3, #-4]
   19e48:	str	r2, [r4]
   19e4c:	ldr	r3, [sp, #208]	; 0xd0
   19e50:	ldr	r3, [r3, r6, lsl #2]
   19e54:	ldr	r2, [sp, #16]
   19e58:	mul	r3, r3, r2
   19e5c:	str	r3, [sp, #16]
   19e60:	ldr	r3, [r4, #-4]
   19e64:	ldr	r2, [fp, r6, lsl #2]
   19e68:	mla	r5, r2, r3, r5
   19e6c:	add	r3, r6, #1
   19e70:	ldr	r2, [sp, #192]	; 0xc0
   19e74:	cmp	r2, r3
   19e78:	bgt	19dec <ReadDataSlabN+0x3688>
   19e7c:	ldr	r4, [sp, #204]	; 0xcc
   19e80:	mov	r2, #1
   19e84:	ldr	r3, [sp]
   19e88:	mul	r1, r3, r5
   19e8c:	ldr	r3, [sp, #4]
   19e90:	ldr	r0, [r3]
   19e94:	bl	1694 <fseek@plt>
   19e98:	ldr	r3, [r4]
   19e9c:	str	r3, [sp, #28]
   19ea0:	cmp	r3, #1
   19ea4:	beq	17fec <ReadDataSlabN+0x1888>
   19ea8:	ldr	r3, [sp, #16]
   19eac:	cmp	r3, #0
   19eb0:	movle	r0, #0
   19eb4:	ble	16d04 <ReadDataSlabN+0x5a0>
   19eb8:	mov	r3, #0
   19ebc:	str	r3, [sp, #20]
   19ec0:	b	1831c <ReadDataSlabN+0x1bb8>
   19ec4:	ldr	r3, [sp, #208]	; 0xd0
   19ec8:	ldr	r3, [r3]
   19ecc:	ldr	r2, [sp, #16]
   19ed0:	mul	r3, r3, r2
   19ed4:	str	r3, [sp, #16]
   19ed8:	ldr	r3, [fp]
   19edc:	ldr	r2, [r7, #-4]
   19ee0:	mla	r5, r2, r3, r5
   19ee4:	add	r6, r6, #1
   19ee8:	ldr	r3, [r8, #4]!
   19eec:	sub	r3, r3, #1
   19ef0:	str	r3, [sl], #4
   19ef4:	ldr	r3, [r9], #4
   19ef8:	mov	r2, r3
   19efc:	add	r7, r7, #4
   19f00:	mov	r4, r7
   19f04:	str	r3, [r7]
   19f08:	cmp	r6, #0
   19f0c:	beq	19ec4 <ReadDataSlabN+0x3760>
   19f10:	str	sl, [sp, #20]
   19f14:	ldr	r1, [sl, #-4]
   19f18:	mov	r3, r9
   19f1c:	mov	r0, r3
   19f20:	ldr	ip, [r3, #-4]!
   19f24:	mul	r1, ip, r1
   19f28:	ldr	r0, [r0]
   19f2c:	mul	r2, r0, r2
   19f30:	cmp	r3, lr
   19f34:	bne	19f1c <ReadDataSlabN+0x37b8>
   19f38:	ldr	r3, [sp, #20]
   19f3c:	str	r1, [r3, #-4]
   19f40:	str	r2, [r4]
   19f44:	ldr	r3, [sp, #208]	; 0xd0
   19f48:	ldr	r3, [r3, r6, lsl #2]
   19f4c:	ldr	r2, [sp, #16]
   19f50:	mul	r3, r3, r2
   19f54:	str	r3, [sp, #16]
   19f58:	ldr	r3, [r4, #-4]
   19f5c:	ldr	r2, [fp, r6, lsl #2]
   19f60:	mla	r5, r2, r3, r5
   19f64:	add	r3, r6, #1
   19f68:	ldr	r2, [sp, #192]	; 0xc0
   19f6c:	cmp	r2, r3
   19f70:	bgt	19ee4 <ReadDataSlabN+0x3780>
   19f74:	ldr	r4, [sp, #204]	; 0xcc
   19f78:	mov	r2, #1
   19f7c:	ldr	r3, [sp]
   19f80:	mul	r1, r3, r5
   19f84:	ldr	r3, [sp, #4]
   19f88:	ldr	r0, [r3]
   19f8c:	bl	1694 <fseek@plt>
   19f90:	ldr	r3, [r4]
   19f94:	str	r3, [sp, #28]
   19f98:	cmp	r3, #1
   19f9c:	beq	17218 <ReadDataSlabN+0xab4>
   19fa0:	ldr	r3, [sp, #16]
   19fa4:	cmp	r3, #0
   19fa8:	movle	r0, #0
   19fac:	ble	16d04 <ReadDataSlabN+0x5a0>
   19fb0:	mov	r3, #0
   19fb4:	str	r3, [sp, #20]
   19fb8:	b	17548 <ReadDataSlabN+0xde4>
   19fbc:	ldr	r3, [sp, #208]	; 0xd0
   19fc0:	ldr	r3, [r3]
   19fc4:	ldr	r2, [sp, #16]
   19fc8:	mul	r3, r3, r2
   19fcc:	str	r3, [sp, #16]
   19fd0:	ldr	r3, [fp]
   19fd4:	ldr	r2, [r7, #-4]
   19fd8:	mla	r5, r2, r3, r5
   19fdc:	add	r6, r6, #1
   19fe0:	ldr	r3, [r8, #4]!
   19fe4:	sub	r3, r3, #1
   19fe8:	str	r3, [sl], #4
   19fec:	ldr	r3, [r9], #4
   19ff0:	mov	r2, r3
   19ff4:	add	r7, r7, #4
   19ff8:	mov	r4, r7
   19ffc:	str	r3, [r7]
   1a000:	cmp	r6, #0
   1a004:	beq	19fbc <ReadDataSlabN+0x3858>
   1a008:	str	sl, [sp, #20]
   1a00c:	ldr	r1, [sl, #-4]
   1a010:	mov	r3, r9
   1a014:	mov	r0, r3
   1a018:	ldr	ip, [r3, #-4]!
   1a01c:	mul	r1, ip, r1
   1a020:	ldr	r0, [r0]
   1a024:	mul	r2, r0, r2
   1a028:	cmp	r3, lr
   1a02c:	bne	1a014 <ReadDataSlabN+0x38b0>
   1a030:	ldr	r3, [sp, #20]
   1a034:	str	r1, [r3, #-4]
   1a038:	str	r2, [r4]
   1a03c:	ldr	r3, [sp, #208]	; 0xd0
   1a040:	ldr	r3, [r3, r6, lsl #2]
   1a044:	ldr	r2, [sp, #16]
   1a048:	mul	r3, r3, r2
   1a04c:	str	r3, [sp, #16]
   1a050:	ldr	r3, [r4, #-4]
   1a054:	ldr	r2, [fp, r6, lsl #2]
   1a058:	mla	r5, r2, r3, r5
   1a05c:	add	r3, r6, #1
   1a060:	ldr	r2, [sp, #192]	; 0xc0
   1a064:	cmp	r2, r3
   1a068:	bgt	19fdc <ReadDataSlabN+0x3878>
   1a06c:	ldr	r4, [sp, #204]	; 0xcc
   1a070:	mov	r2, #1
   1a074:	ldr	r3, [sp]
   1a078:	mul	r1, r3, r5
   1a07c:	ldr	r3, [sp, #4]
   1a080:	ldr	r0, [r3]
   1a084:	bl	1694 <fseek@plt>
   1a088:	ldr	r3, [r4]
   1a08c:	str	r3, [sp, #28]
   1a090:	cmp	r3, #1
   1a094:	beq	176b4 <ReadDataSlabN+0xf50>
   1a098:	ldr	r3, [sp, #16]
   1a09c:	cmp	r3, #0
   1a0a0:	movle	r0, #0
   1a0a4:	ble	16d04 <ReadDataSlabN+0x5a0>
   1a0a8:	mov	r3, #0
   1a0ac:	str	r3, [sp, #20]
   1a0b0:	b	179e4 <ReadDataSlabN+0x1280>

0001a0b4 <ReadCompressedDataSlabN>:
   1a0b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a0b8:	strd	r6, [sp, #8]
   1a0bc:	strd	r8, [sp, #16]
   1a0c0:	strd	sl, [sp, #24]
   1a0c4:	str	lr, [sp, #32]
   1a0c8:	sub	sp, sp, #220	; 0xdc
   1a0cc:	mov	r7, r0
   1a0d0:	str	r0, [sp, #12]
   1a0d4:	mov	r6, r1
   1a0d8:	mov	r8, r2
   1a0dc:	str	r2, [sp, #16]
   1a0e0:	mov	r5, r3
   1a0e4:	ldr	fp, [sp, #268]	; 0x10c
   1a0e8:	ldr	r4, [sp, #272]	; 0x110
   1a0ec:	ldr	sl, [sp, #276]	; 0x114
   1a0f0:	mov	r2, #0
   1a0f4:	mov	r3, #0
   1a0f8:	strd	r2, [sp, #176]	; 0xb0
   1a0fc:	strd	r2, [sp, #184]	; 0xb8
   1a100:	strd	r2, [sp, #192]	; 0xc0
   1a104:	strd	r2, [sp, #200]	; 0xc8
   1a108:	strd	r2, [sp, #208]	; 0xd0
   1a10c:	strd	r2, [sp, #136]	; 0x88
   1a110:	strd	r2, [sp, #144]	; 0x90
   1a114:	strd	r2, [sp, #152]	; 0x98
   1a118:	strd	r2, [sp, #160]	; 0xa0
   1a11c:	strd	r2, [sp, #168]	; 0xa8
   1a120:	strd	r2, [sp, #96]	; 0x60
   1a124:	strd	r2, [sp, #104]	; 0x68
   1a128:	strd	r2, [sp, #112]	; 0x70
   1a12c:	strd	r2, [sp, #120]	; 0x78
   1a130:	strd	r2, [sp, #128]	; 0x80
   1a134:	mov	r2, #56	; 0x38
   1a138:	mov	r1, #0
   1a13c:	add	r0, sp, #40	; 0x28
   1a140:	bl	15f8 <memset@plt>
   1a144:	cmp	r8, #0
   1a148:	cmpne	r7, #0
   1a14c:	moveq	r0, #1
   1a150:	beq	1a194 <ReadCompressedDataSlabN+0xe0>
   1a154:	ldr	r3, [r7]
   1a158:	cmp	r3, #0
   1a15c:	moveq	r0, #1
   1a160:	beq	1a194 <ReadCompressedDataSlabN+0xe0>
   1a164:	clz	r3, r4
   1a168:	lsr	r3, r3, #5
   1a16c:	cmp	fp, #0
   1a170:	moveq	r3, #1
   1a174:	cmp	sl, #0
   1a178:	moveq	r3, #1
   1a17c:	ldr	r2, [sp, #260]	; 0x104
   1a180:	cmp	r2, #10
   1a184:	orrgt	r3, r3, #1
   1a188:	cmp	r3, #0
   1a18c:	movne	r0, #1
   1a190:	beq	1a1b0 <ReadCompressedDataSlabN+0xfc>
   1a194:	add	sp, sp, #220	; 0xdc
   1a198:	ldrd	r4, [sp]
   1a19c:	ldrd	r6, [sp, #8]
   1a1a0:	ldrd	r8, [sp, #16]
   1a1a4:	ldrd	sl, [sp, #24]
   1a1a8:	add	sp, sp, #32
   1a1ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1b0:	mov	r1, r6
   1a1b4:	add	r0, sp, #40	; 0x28
   1a1b8:	bl	15bc <inflateCopy@plt>
   1a1bc:	sub	r5, r5, #6
   1a1c0:	cmp	r5, #9
   1a1c4:	addls	pc, pc, r5, lsl #2
   1a1c8:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a1cc:	b	1a1f4 <ReadCompressedDataSlabN+0x140>
   1a1d0:	b	1a6b4 <ReadCompressedDataSlabN+0x600>
   1a1d4:	b	1c7f8 <ReadCompressedDataSlabN+0x2744>
   1a1d8:	b	1ccb8 <ReadCompressedDataSlabN+0x2c04>
   1a1dc:	b	1be78 <ReadCompressedDataSlabN+0x1dc4>
   1a1e0:	b	1c338 <ReadCompressedDataSlabN+0x2284>
   1a1e4:	b	1b4f8 <ReadCompressedDataSlabN+0x1444>
   1a1e8:	b	1b9b8 <ReadCompressedDataSlabN+0x1904>
   1a1ec:	b	1ab78 <ReadCompressedDataSlabN+0xac4>
   1a1f0:	b	1b038 <ReadCompressedDataSlabN+0xf84>
   1a1f4:	ldr	r3, [r4]
   1a1f8:	sub	r3, r3, #1
   1a1fc:	str	r3, [sp, #176]	; 0xb0
   1a200:	ldr	r3, [sp, #264]	; 0x108
   1a204:	ldr	r3, [r3]
   1a208:	str	r3, [sp, #96]	; 0x60
   1a20c:	ldr	r3, [sl]
   1a210:	str	r3, [sp, #24]
   1a214:	ldr	r3, [sp, #260]	; 0x104
   1a218:	cmp	r3, #1
   1a21c:	ble	1a248 <ReadCompressedDataSlabN+0x194>
   1a220:	mov	r3, r4
   1a224:	add	r8, sp, #180	; 0xb4
   1a228:	ldr	lr, [sp, #264]	; 0x108
   1a22c:	add	r7, sp, #96	; 0x60
   1a230:	mov	r6, #1
   1a234:	mov	r5, #0
   1a238:	str	r4, [sp, #272]	; 0x110
   1a23c:	mov	r4, lr
   1a240:	mov	r9, r3
   1a244:	b	1d194 <ReadCompressedDataSlabN+0x30e0>
   1a248:	mov	r5, #0
   1a24c:	b	1d224 <ReadCompressedDataSlabN+0x3170>
   1a250:	ldr	r3, [sp, #24]
   1a254:	cmp	r3, #0
   1a258:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a25c:	mov	r3, #0
   1a260:	str	r3, [sp, #32]
   1a264:	add	r3, sp, #40	; 0x28
   1a268:	str	r3, [sp, #20]
   1a26c:	str	sl, [sp, #276]	; 0x114
   1a270:	ldr	sl, [sp, #260]	; 0x104
   1a274:	b	1a37c <ReadCompressedDataSlabN+0x2c8>
   1a278:	ldr	r2, [sp, #256]	; 0x100
   1a27c:	ldr	r1, [sp, #20]
   1a280:	ldr	r0, [sp, #12]
   1a284:	bl	2468 <InflateSkipData>
   1a288:	ldr	r3, [fp]
   1a28c:	add	r5, r5, r3
   1a290:	b	1a388 <ReadCompressedDataSlabN+0x2d4>
   1a294:	sub	r6, r6, r3
   1a298:	ldr	r3, [r8, #-8]
   1a29c:	mov	r2, r3
   1a2a0:	ldr	r3, [fp, r4, lsl #2]
   1a2a4:	str	r2, [sp, #28]
   1a2a8:	mla	r3, r3, r2, r6
   1a2ac:	ldr	r2, [sp, #256]	; 0x100
   1a2b0:	ldr	r1, [sp, #20]
   1a2b4:	ldr	r0, [sp, #12]
   1a2b8:	bl	2468 <InflateSkipData>
   1a2bc:	ldr	r3, [fp, r4, lsl #2]
   1a2c0:	ldr	r2, [sp, #28]
   1a2c4:	mla	r6, r3, r2, r6
   1a2c8:	add	r5, r5, r6
   1a2cc:	add	r4, r4, #1
   1a2d0:	cmp	sl, r4
   1a2d4:	beq	1a35c <ReadCompressedDataSlabN+0x2a8>
   1a2d8:	ldr	r3, [r7]
   1a2dc:	add	r3, r3, #1
   1a2e0:	str	r3, [r7]
   1a2e4:	ldr	r1, [r9, #4]!
   1a2e8:	sdiv	r2, r3, r1
   1a2ec:	mls	r3, r1, r2, r3
   1a2f0:	cmp	r3, #0
   1a2f4:	bne	1a348 <ReadCompressedDataSlabN+0x294>
   1a2f8:	mov	r3, #0
   1a2fc:	str	r3, [r7], #4
   1a300:	ldr	r6, [r8], #4
   1a304:	sdiv	r3, r5, r6
   1a308:	mls	r3, r6, r3, r5
   1a30c:	cmp	r3, #0
   1a310:	bne	1a294 <ReadCompressedDataSlabN+0x1e0>
   1a314:	ldr	r3, [fp, r4, lsl #2]
   1a318:	cmp	r3, #0
   1a31c:	beq	1a2cc <ReadCompressedDataSlabN+0x218>
   1a320:	ldr	r6, [r8, #-8]
   1a324:	mul	r3, r6, r3
   1a328:	ldr	r2, [sp, #256]	; 0x100
   1a32c:	ldr	r1, [sp, #20]
   1a330:	ldr	r0, [sp, #12]
   1a334:	bl	2468 <InflateSkipData>
   1a338:	ldr	r3, [fp, r4, lsl #2]
   1a33c:	mla	r5, r3, r6, r5
   1a340:	b	1a2cc <ReadCompressedDataSlabN+0x218>
   1a344:	ldr	r4, [sp, #36]	; 0x24
   1a348:	add	r3, sp, #216	; 0xd8
   1a34c:	add	r4, r3, r4, lsl #2
   1a350:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1a354:	cmp	r3, #0
   1a358:	bne	1a43c <ReadCompressedDataSlabN+0x388>
   1a35c:	ldr	r3, [sp, #276]	; 0x114
   1a360:	ldr	r3, [r3]
   1a364:	ldr	r2, [sp, #32]
   1a368:	add	r3, r2, r3
   1a36c:	str	r3, [sp, #32]
   1a370:	ldr	r2, [sp, #24]
   1a374:	cmp	r3, r2
   1a378:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a37c:	ldr	r3, [fp]
   1a380:	cmp	r3, #0
   1a384:	bne	1a278 <ReadCompressedDataSlabN+0x1c4>
   1a388:	ldr	r3, [sp, #276]	; 0x114
   1a38c:	ldr	r3, [r3]
   1a390:	str	r3, [sp]
   1a394:	ldr	r3, [sp, #256]	; 0x100
   1a398:	ldr	r2, [sp, #16]
   1a39c:	ldr	r1, [sp, #32]
   1a3a0:	add	r2, r2, r1, lsl #3
   1a3a4:	ldr	r6, [sp, #20]
   1a3a8:	mov	r1, r6
   1a3ac:	ldr	r4, [sp, #12]
   1a3b0:	mov	r0, r4
   1a3b4:	bl	4fc4 <ReadCompressedDoubleData>
   1a3b8:	ldr	r3, [sp, #264]	; 0x108
   1a3bc:	ldr	r3, [r3]
   1a3c0:	ldr	r2, [sp, #276]	; 0x114
   1a3c4:	ldr	r2, [r2]
   1a3c8:	sub	r3, r3, r2
   1a3cc:	ldr	r2, [fp]
   1a3d0:	sub	r3, r3, r2
   1a3d4:	ldr	r2, [sp, #256]	; 0x100
   1a3d8:	mov	r1, r6
   1a3dc:	mov	r0, r4
   1a3e0:	bl	2468 <InflateSkipData>
   1a3e4:	ldr	r3, [sp, #264]	; 0x108
   1a3e8:	ldr	r3, [r3]
   1a3ec:	ldr	r2, [fp]
   1a3f0:	sub	r3, r3, r2
   1a3f4:	add	r5, r3, r5
   1a3f8:	cmp	sl, #1
   1a3fc:	ble	1a35c <ReadCompressedDataSlabN+0x2a8>
   1a400:	ldr	r3, [sp, #140]	; 0x8c
   1a404:	add	r3, r3, #1
   1a408:	str	r3, [sp, #140]	; 0x8c
   1a40c:	ldr	r2, [sp, #276]	; 0x114
   1a410:	ldr	r1, [r2, #4]
   1a414:	sdiv	r2, r3, r1
   1a418:	mls	r3, r1, r2, r3
   1a41c:	cmp	r3, #0
   1a420:	bne	1a344 <ReadCompressedDataSlabN+0x290>
   1a424:	add	r7, sp, #140	; 0x8c
   1a428:	ldr	r3, [sp, #276]	; 0x114
   1a42c:	add	r9, r3, #4
   1a430:	add	r8, sp, #100	; 0x64
   1a434:	ldr	r4, [sp, #36]	; 0x24
   1a438:	b	1a2f8 <ReadCompressedDataSlabN+0x244>
   1a43c:	add	r5, r5, r3
   1a440:	ldr	r2, [sp, #256]	; 0x100
   1a444:	ldr	r1, [sp, #20]
   1a448:	ldr	r0, [sp, #12]
   1a44c:	bl	2468 <InflateSkipData>
   1a450:	b	1a35c <ReadCompressedDataSlabN+0x2a8>
   1a454:	ldr	r2, [sp, #256]	; 0x100
   1a458:	ldr	r1, [sp, #20]
   1a45c:	ldr	r0, [sp, #12]
   1a460:	bl	2468 <InflateSkipData>
   1a464:	ldr	r3, [fp]
   1a468:	add	r5, r5, r3
   1a46c:	b	1a58c <ReadCompressedDataSlabN+0x4d8>
   1a470:	mov	r6, #0
   1a474:	b	1a604 <ReadCompressedDataSlabN+0x550>
   1a478:	sub	r4, r4, r3
   1a47c:	ldr	sl, [r9, #-8]
   1a480:	ldr	r3, [fp, r6, lsl #2]
   1a484:	mla	r3, r3, sl, r4
   1a488:	ldr	r2, [sp, #256]	; 0x100
   1a48c:	ldr	r1, [sp, #20]
   1a490:	ldr	r0, [sp, #12]
   1a494:	bl	2468 <InflateSkipData>
   1a498:	ldr	r3, [fp, r6, lsl #2]
   1a49c:	mla	r4, r3, sl, r4
   1a4a0:	add	r5, r5, r4
   1a4a4:	add	r6, r6, #1
   1a4a8:	ldr	r3, [sp, #260]	; 0x104
   1a4ac:	cmp	r3, r6
   1a4b0:	beq	1a55c <ReadCompressedDataSlabN+0x4a8>
   1a4b4:	ldr	r3, [r8]
   1a4b8:	add	r3, r3, #1
   1a4bc:	str	r3, [r8]
   1a4c0:	ldr	r1, [r7, #4]!
   1a4c4:	sdiv	r2, r3, r1
   1a4c8:	mls	r3, r1, r2, r3
   1a4cc:	cmp	r3, #0
   1a4d0:	bne	1a528 <ReadCompressedDataSlabN+0x474>
   1a4d4:	mov	r3, #0
   1a4d8:	str	r3, [r8], #4
   1a4dc:	ldr	r4, [r9], #4
   1a4e0:	sdiv	r3, r5, r4
   1a4e4:	mls	r3, r4, r3, r5
   1a4e8:	cmp	r3, #0
   1a4ec:	bne	1a478 <ReadCompressedDataSlabN+0x3c4>
   1a4f0:	ldr	r3, [fp, r6, lsl #2]
   1a4f4:	cmp	r3, #0
   1a4f8:	beq	1a4a4 <ReadCompressedDataSlabN+0x3f0>
   1a4fc:	ldr	r4, [r9, #-8]
   1a500:	mul	r3, r4, r3
   1a504:	ldr	r2, [sp, #256]	; 0x100
   1a508:	ldr	r1, [sp, #20]
   1a50c:	ldr	r0, [sp, #12]
   1a510:	bl	2468 <InflateSkipData>
   1a514:	ldr	r3, [fp, r6, lsl #2]
   1a518:	mla	r5, r3, r4, r5
   1a51c:	b	1a4a4 <ReadCompressedDataSlabN+0x3f0>
   1a520:	mov	r6, #1
   1a524:	b	1a530 <ReadCompressedDataSlabN+0x47c>
   1a528:	ldr	r4, [sp, #272]	; 0x110
   1a52c:	ldr	sl, [sp, #276]	; 0x114
   1a530:	add	r3, sp, #216	; 0xd8
   1a534:	add	r6, r3, r6, lsl #2
   1a538:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1a53c:	cmp	r3, #0
   1a540:	beq	1a564 <ReadCompressedDataSlabN+0x4b0>
   1a544:	add	r5, r5, r3
   1a548:	ldr	r2, [sp, #256]	; 0x100
   1a54c:	ldr	r1, [sp, #20]
   1a550:	ldr	r0, [sp, #12]
   1a554:	bl	2468 <InflateSkipData>
   1a558:	b	1a564 <ReadCompressedDataSlabN+0x4b0>
   1a55c:	ldr	r4, [sp, #272]	; 0x110
   1a560:	ldr	sl, [sp, #276]	; 0x114
   1a564:	ldr	r3, [sl]
   1a568:	ldr	r2, [sp, #28]
   1a56c:	add	r3, r2, r3
   1a570:	str	r3, [sp, #28]
   1a574:	ldr	r2, [sp, #24]
   1a578:	cmp	r3, r2
   1a57c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a580:	ldr	r3, [fp]
   1a584:	cmp	r3, #0
   1a588:	bne	1a454 <ReadCompressedDataSlabN+0x3a0>
   1a58c:	ldr	r3, [sl]
   1a590:	cmp	r3, #1
   1a594:	ble	1a470 <ReadCompressedDataSlabN+0x3bc>
   1a598:	ldr	r3, [sp, #16]
   1a59c:	ldr	r2, [sp, #28]
   1a5a0:	add	r7, r3, r2, lsl #3
   1a5a4:	mov	r6, #0
   1a5a8:	mov	r3, #1
   1a5ac:	str	r3, [sp]
   1a5b0:	ldr	r3, [sp, #256]	; 0x100
   1a5b4:	mov	r2, r7
   1a5b8:	ldr	r9, [sp, #20]
   1a5bc:	mov	r1, r9
   1a5c0:	ldr	r8, [sp, #12]
   1a5c4:	mov	r0, r8
   1a5c8:	bl	4fc4 <ReadCompressedDoubleData>
   1a5cc:	ldr	r3, [r4]
   1a5d0:	sub	r3, r3, #1
   1a5d4:	ldr	r2, [sp, #256]	; 0x100
   1a5d8:	mov	r1, r9
   1a5dc:	mov	r0, r8
   1a5e0:	bl	2468 <InflateSkipData>
   1a5e4:	ldr	r3, [r4]
   1a5e8:	add	r5, r5, r3
   1a5ec:	add	r6, r6, #1
   1a5f0:	add	r7, r7, #8
   1a5f4:	ldr	r3, [sl]
   1a5f8:	sub	r3, r3, #1
   1a5fc:	cmp	r3, r6
   1a600:	bgt	1a5a8 <ReadCompressedDataSlabN+0x4f4>
   1a604:	ldr	r3, [sp, #28]
   1a608:	add	r2, r3, r6
   1a60c:	mov	r3, #1
   1a610:	str	r3, [sp]
   1a614:	ldr	r3, [sp, #256]	; 0x100
   1a618:	ldr	r1, [sp, #16]
   1a61c:	add	r2, r1, r2, lsl #3
   1a620:	ldr	r7, [sp, #20]
   1a624:	mov	r1, r7
   1a628:	ldr	r6, [sp, #12]
   1a62c:	mov	r0, r6
   1a630:	bl	4fc4 <ReadCompressedDoubleData>
   1a634:	ldr	r3, [sl]
   1a638:	sub	r3, r3, #1
   1a63c:	ldr	r1, [r4]
   1a640:	ldr	r2, [fp]
   1a644:	mla	r3, r1, r3, r2
   1a648:	ldr	r2, [sp, #264]	; 0x108
   1a64c:	ldr	r2, [r2]
   1a650:	sub	r3, r2, r3
   1a654:	add	r5, r5, r3
   1a658:	sub	r3, r3, #1
   1a65c:	ldr	r2, [sp, #256]	; 0x100
   1a660:	mov	r1, r7
   1a664:	mov	r0, r6
   1a668:	bl	2468 <InflateSkipData>
   1a66c:	ldr	r3, [sp, #260]	; 0x104
   1a670:	cmp	r3, #1
   1a674:	ble	1a564 <ReadCompressedDataSlabN+0x4b0>
   1a678:	ldr	r3, [sp, #140]	; 0x8c
   1a67c:	add	r3, r3, #1
   1a680:	str	r3, [sp, #140]	; 0x8c
   1a684:	ldr	r1, [sl, #4]
   1a688:	sdiv	r2, r3, r1
   1a68c:	mls	r3, r1, r2, r3
   1a690:	cmp	r3, #0
   1a694:	bne	1a520 <ReadCompressedDataSlabN+0x46c>
   1a698:	add	r8, sp, #140	; 0x8c
   1a69c:	add	r7, sl, #4
   1a6a0:	add	r9, sp, #100	; 0x64
   1a6a4:	mov	r6, #1
   1a6a8:	str	r4, [sp, #272]	; 0x110
   1a6ac:	str	sl, [sp, #276]	; 0x114
   1a6b0:	b	1a4d4 <ReadCompressedDataSlabN+0x420>
   1a6b4:	ldr	r3, [r4]
   1a6b8:	sub	r3, r3, #1
   1a6bc:	str	r3, [sp, #176]	; 0xb0
   1a6c0:	ldr	r3, [sp, #264]	; 0x108
   1a6c4:	ldr	r3, [r3]
   1a6c8:	str	r3, [sp, #96]	; 0x60
   1a6cc:	ldr	r3, [sl]
   1a6d0:	str	r3, [sp, #24]
   1a6d4:	ldr	r3, [sp, #260]	; 0x104
   1a6d8:	cmp	r3, #1
   1a6dc:	ble	1a708 <ReadCompressedDataSlabN+0x654>
   1a6e0:	mov	r3, r4
   1a6e4:	add	r8, sp, #180	; 0xb4
   1a6e8:	ldr	lr, [sp, #264]	; 0x108
   1a6ec:	add	r7, sp, #96	; 0x60
   1a6f0:	mov	r6, #1
   1a6f4:	mov	r5, #0
   1a6f8:	str	r4, [sp, #272]	; 0x110
   1a6fc:	mov	r4, lr
   1a700:	mov	r9, r3
   1a704:	b	1d294 <ReadCompressedDataSlabN+0x31e0>
   1a708:	mov	r5, #0
   1a70c:	b	1d324 <ReadCompressedDataSlabN+0x3270>
   1a710:	ldr	r3, [sp, #24]
   1a714:	cmp	r3, #0
   1a718:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a71c:	mov	r3, #0
   1a720:	str	r3, [sp, #32]
   1a724:	add	r3, sp, #40	; 0x28
   1a728:	str	r3, [sp, #20]
   1a72c:	str	sl, [sp, #276]	; 0x114
   1a730:	ldr	sl, [sp, #260]	; 0x104
   1a734:	b	1a83c <ReadCompressedDataSlabN+0x788>
   1a738:	ldr	r2, [sp, #256]	; 0x100
   1a73c:	ldr	r1, [sp, #20]
   1a740:	ldr	r0, [sp, #12]
   1a744:	bl	2468 <InflateSkipData>
   1a748:	ldr	r3, [fp]
   1a74c:	add	r5, r5, r3
   1a750:	b	1a848 <ReadCompressedDataSlabN+0x794>
   1a754:	sub	r6, r6, r3
   1a758:	ldr	r3, [r8, #-8]
   1a75c:	mov	r2, r3
   1a760:	ldr	r3, [fp, r4, lsl #2]
   1a764:	str	r2, [sp, #28]
   1a768:	mla	r3, r3, r2, r6
   1a76c:	ldr	r2, [sp, #256]	; 0x100
   1a770:	ldr	r1, [sp, #20]
   1a774:	ldr	r0, [sp, #12]
   1a778:	bl	2468 <InflateSkipData>
   1a77c:	ldr	r3, [fp, r4, lsl #2]
   1a780:	ldr	r2, [sp, #28]
   1a784:	mla	r6, r3, r2, r6
   1a788:	add	r5, r5, r6
   1a78c:	add	r4, r4, #1
   1a790:	cmp	sl, r4
   1a794:	beq	1a81c <ReadCompressedDataSlabN+0x768>
   1a798:	ldr	r3, [r7]
   1a79c:	add	r3, r3, #1
   1a7a0:	str	r3, [r7]
   1a7a4:	ldr	r1, [r9, #4]!
   1a7a8:	sdiv	r2, r3, r1
   1a7ac:	mls	r3, r1, r2, r3
   1a7b0:	cmp	r3, #0
   1a7b4:	bne	1a808 <ReadCompressedDataSlabN+0x754>
   1a7b8:	mov	r3, #0
   1a7bc:	str	r3, [r7], #4
   1a7c0:	ldr	r6, [r8], #4
   1a7c4:	sdiv	r3, r5, r6
   1a7c8:	mls	r3, r6, r3, r5
   1a7cc:	cmp	r3, #0
   1a7d0:	bne	1a754 <ReadCompressedDataSlabN+0x6a0>
   1a7d4:	ldr	r3, [fp, r4, lsl #2]
   1a7d8:	cmp	r3, #0
   1a7dc:	beq	1a78c <ReadCompressedDataSlabN+0x6d8>
   1a7e0:	ldr	r6, [r8, #-8]
   1a7e4:	mul	r3, r6, r3
   1a7e8:	ldr	r2, [sp, #256]	; 0x100
   1a7ec:	ldr	r1, [sp, #20]
   1a7f0:	ldr	r0, [sp, #12]
   1a7f4:	bl	2468 <InflateSkipData>
   1a7f8:	ldr	r3, [fp, r4, lsl #2]
   1a7fc:	mla	r5, r3, r6, r5
   1a800:	b	1a78c <ReadCompressedDataSlabN+0x6d8>
   1a804:	ldr	r4, [sp, #36]	; 0x24
   1a808:	add	r3, sp, #216	; 0xd8
   1a80c:	add	r4, r3, r4, lsl #2
   1a810:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1a814:	cmp	r3, #0
   1a818:	bne	1a8fc <ReadCompressedDataSlabN+0x848>
   1a81c:	ldr	r3, [sp, #276]	; 0x114
   1a820:	ldr	r3, [r3]
   1a824:	ldr	r2, [sp, #32]
   1a828:	add	r3, r2, r3
   1a82c:	str	r3, [sp, #32]
   1a830:	ldr	r2, [sp, #24]
   1a834:	cmp	r3, r2
   1a838:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1a83c:	ldr	r3, [fp]
   1a840:	cmp	r3, #0
   1a844:	bne	1a738 <ReadCompressedDataSlabN+0x684>
   1a848:	ldr	r3, [sp, #276]	; 0x114
   1a84c:	ldr	r3, [r3]
   1a850:	str	r3, [sp]
   1a854:	ldr	r3, [sp, #256]	; 0x100
   1a858:	ldr	r2, [sp, #16]
   1a85c:	ldr	r1, [sp, #32]
   1a860:	add	r2, r2, r1, lsl #2
   1a864:	ldr	r6, [sp, #20]
   1a868:	mov	r1, r6
   1a86c:	ldr	r4, [sp, #12]
   1a870:	mov	r0, r4
   1a874:	bl	7ae8 <ReadCompressedSingleData>
   1a878:	ldr	r3, [sp, #264]	; 0x108
   1a87c:	ldr	r3, [r3]
   1a880:	ldr	r2, [sp, #276]	; 0x114
   1a884:	ldr	r2, [r2]
   1a888:	sub	r3, r3, r2
   1a88c:	ldr	r2, [fp]
   1a890:	sub	r3, r3, r2
   1a894:	ldr	r2, [sp, #256]	; 0x100
   1a898:	mov	r1, r6
   1a89c:	mov	r0, r4
   1a8a0:	bl	2468 <InflateSkipData>
   1a8a4:	ldr	r3, [sp, #264]	; 0x108
   1a8a8:	ldr	r3, [r3]
   1a8ac:	ldr	r2, [fp]
   1a8b0:	sub	r3, r3, r2
   1a8b4:	add	r5, r3, r5
   1a8b8:	cmp	sl, #1
   1a8bc:	ble	1a81c <ReadCompressedDataSlabN+0x768>
   1a8c0:	ldr	r3, [sp, #140]	; 0x8c
   1a8c4:	add	r3, r3, #1
   1a8c8:	str	r3, [sp, #140]	; 0x8c
   1a8cc:	ldr	r2, [sp, #276]	; 0x114
   1a8d0:	ldr	r1, [r2, #4]
   1a8d4:	sdiv	r2, r3, r1
   1a8d8:	mls	r3, r1, r2, r3
   1a8dc:	cmp	r3, #0
   1a8e0:	bne	1a804 <ReadCompressedDataSlabN+0x750>
   1a8e4:	add	r7, sp, #140	; 0x8c
   1a8e8:	ldr	r3, [sp, #276]	; 0x114
   1a8ec:	add	r9, r3, #4
   1a8f0:	add	r8, sp, #100	; 0x64
   1a8f4:	ldr	r4, [sp, #36]	; 0x24
   1a8f8:	b	1a7b8 <ReadCompressedDataSlabN+0x704>
   1a8fc:	add	r5, r5, r3
   1a900:	ldr	r2, [sp, #256]	; 0x100
   1a904:	ldr	r1, [sp, #20]
   1a908:	ldr	r0, [sp, #12]
   1a90c:	bl	2468 <InflateSkipData>
   1a910:	b	1a81c <ReadCompressedDataSlabN+0x768>
   1a914:	ldr	r2, [sp, #256]	; 0x100
   1a918:	ldr	r1, [sp, #20]
   1a91c:	ldr	r0, [sp, #12]
   1a920:	bl	2468 <InflateSkipData>
   1a924:	ldr	r3, [fp]
   1a928:	add	r5, r5, r3
   1a92c:	b	1aa4c <ReadCompressedDataSlabN+0x998>
   1a930:	mov	r6, #0
   1a934:	b	1aac4 <ReadCompressedDataSlabN+0xa10>
   1a938:	sub	r4, r4, r3
   1a93c:	ldr	sl, [r9, #-8]
   1a940:	ldr	r3, [fp, r6, lsl #2]
   1a944:	mla	r3, r3, sl, r4
   1a948:	ldr	r2, [sp, #256]	; 0x100
   1a94c:	ldr	r1, [sp, #20]
   1a950:	ldr	r0, [sp, #12]
   1a954:	bl	2468 <InflateSkipData>
   1a958:	ldr	r3, [fp, r6, lsl #2]
   1a95c:	mla	r4, r3, sl, r4
   1a960:	add	r5, r5, r4
   1a964:	add	r6, r6, #1
   1a968:	ldr	r3, [sp, #260]	; 0x104
   1a96c:	cmp	r3, r6
   1a970:	beq	1aa1c <ReadCompressedDataSlabN+0x968>
   1a974:	ldr	r3, [r8]
   1a978:	add	r3, r3, #1
   1a97c:	str	r3, [r8]
   1a980:	ldr	r1, [r7, #4]!
   1a984:	sdiv	r2, r3, r1
   1a988:	mls	r3, r1, r2, r3
   1a98c:	cmp	r3, #0
   1a990:	bne	1a9e8 <ReadCompressedDataSlabN+0x934>
   1a994:	mov	r3, #0
   1a998:	str	r3, [r8], #4
   1a99c:	ldr	r4, [r9], #4
   1a9a0:	sdiv	r3, r5, r4
   1a9a4:	mls	r3, r4, r3, r5
   1a9a8:	cmp	r3, #0
   1a9ac:	bne	1a938 <ReadCompressedDataSlabN+0x884>
   1a9b0:	ldr	r3, [fp, r6, lsl #2]
   1a9b4:	cmp	r3, #0
   1a9b8:	beq	1a964 <ReadCompressedDataSlabN+0x8b0>
   1a9bc:	ldr	r4, [r9, #-8]
   1a9c0:	mul	r3, r4, r3
   1a9c4:	ldr	r2, [sp, #256]	; 0x100
   1a9c8:	ldr	r1, [sp, #20]
   1a9cc:	ldr	r0, [sp, #12]
   1a9d0:	bl	2468 <InflateSkipData>
   1a9d4:	ldr	r3, [fp, r6, lsl #2]
   1a9d8:	mla	r5, r3, r4, r5
   1a9dc:	b	1a964 <ReadCompressedDataSlabN+0x8b0>
   1a9e0:	mov	r6, #1
   1a9e4:	b	1a9f0 <ReadCompressedDataSlabN+0x93c>
   1a9e8:	ldr	r4, [sp, #272]	; 0x110
   1a9ec:	ldr	sl, [sp, #276]	; 0x114
   1a9f0:	add	r3, sp, #216	; 0xd8
   1a9f4:	add	r6, r3, r6, lsl #2
   1a9f8:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1a9fc:	cmp	r3, #0
   1aa00:	beq	1aa24 <ReadCompressedDataSlabN+0x970>
   1aa04:	add	r5, r5, r3
   1aa08:	ldr	r2, [sp, #256]	; 0x100
   1aa0c:	ldr	r1, [sp, #20]
   1aa10:	ldr	r0, [sp, #12]
   1aa14:	bl	2468 <InflateSkipData>
   1aa18:	b	1aa24 <ReadCompressedDataSlabN+0x970>
   1aa1c:	ldr	r4, [sp, #272]	; 0x110
   1aa20:	ldr	sl, [sp, #276]	; 0x114
   1aa24:	ldr	r3, [sl]
   1aa28:	ldr	r2, [sp, #28]
   1aa2c:	add	r3, r2, r3
   1aa30:	str	r3, [sp, #28]
   1aa34:	ldr	r2, [sp, #24]
   1aa38:	cmp	r3, r2
   1aa3c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1aa40:	ldr	r3, [fp]
   1aa44:	cmp	r3, #0
   1aa48:	bne	1a914 <ReadCompressedDataSlabN+0x860>
   1aa4c:	ldr	r3, [sl]
   1aa50:	cmp	r3, #1
   1aa54:	ble	1a930 <ReadCompressedDataSlabN+0x87c>
   1aa58:	ldr	r3, [sp, #16]
   1aa5c:	ldr	r2, [sp, #28]
   1aa60:	add	r7, r3, r2, lsl #2
   1aa64:	mov	r6, #0
   1aa68:	mov	r3, #1
   1aa6c:	str	r3, [sp]
   1aa70:	ldr	r3, [sp, #256]	; 0x100
   1aa74:	mov	r2, r7
   1aa78:	ldr	r9, [sp, #20]
   1aa7c:	mov	r1, r9
   1aa80:	ldr	r8, [sp, #12]
   1aa84:	mov	r0, r8
   1aa88:	bl	7ae8 <ReadCompressedSingleData>
   1aa8c:	ldr	r3, [r4]
   1aa90:	sub	r3, r3, #1
   1aa94:	ldr	r2, [sp, #256]	; 0x100
   1aa98:	mov	r1, r9
   1aa9c:	mov	r0, r8
   1aaa0:	bl	2468 <InflateSkipData>
   1aaa4:	ldr	r3, [r4]
   1aaa8:	add	r5, r5, r3
   1aaac:	add	r6, r6, #1
   1aab0:	add	r7, r7, #4
   1aab4:	ldr	r3, [sl]
   1aab8:	sub	r3, r3, #1
   1aabc:	cmp	r3, r6
   1aac0:	bgt	1aa68 <ReadCompressedDataSlabN+0x9b4>
   1aac4:	ldr	r3, [sp, #28]
   1aac8:	add	r2, r3, r6
   1aacc:	mov	r3, #1
   1aad0:	str	r3, [sp]
   1aad4:	ldr	r3, [sp, #256]	; 0x100
   1aad8:	ldr	r1, [sp, #16]
   1aadc:	add	r2, r1, r2, lsl #2
   1aae0:	ldr	r7, [sp, #20]
   1aae4:	mov	r1, r7
   1aae8:	ldr	r6, [sp, #12]
   1aaec:	mov	r0, r6
   1aaf0:	bl	7ae8 <ReadCompressedSingleData>
   1aaf4:	ldr	r3, [sl]
   1aaf8:	sub	r3, r3, #1
   1aafc:	ldr	r1, [r4]
   1ab00:	ldr	r2, [fp]
   1ab04:	mla	r3, r1, r3, r2
   1ab08:	ldr	r2, [sp, #264]	; 0x108
   1ab0c:	ldr	r2, [r2]
   1ab10:	sub	r3, r2, r3
   1ab14:	add	r5, r5, r3
   1ab18:	sub	r3, r3, #1
   1ab1c:	ldr	r2, [sp, #256]	; 0x100
   1ab20:	mov	r1, r7
   1ab24:	mov	r0, r6
   1ab28:	bl	2468 <InflateSkipData>
   1ab2c:	ldr	r3, [sp, #260]	; 0x104
   1ab30:	cmp	r3, #1
   1ab34:	ble	1aa24 <ReadCompressedDataSlabN+0x970>
   1ab38:	ldr	r3, [sp, #140]	; 0x8c
   1ab3c:	add	r3, r3, #1
   1ab40:	str	r3, [sp, #140]	; 0x8c
   1ab44:	ldr	r1, [sl, #4]
   1ab48:	sdiv	r2, r3, r1
   1ab4c:	mls	r3, r1, r2, r3
   1ab50:	cmp	r3, #0
   1ab54:	bne	1a9e0 <ReadCompressedDataSlabN+0x92c>
   1ab58:	add	r8, sp, #140	; 0x8c
   1ab5c:	add	r3, sl, #4
   1ab60:	add	r9, sp, #100	; 0x64
   1ab64:	mov	r6, #1
   1ab68:	mov	r7, r3
   1ab6c:	str	r4, [sp, #272]	; 0x110
   1ab70:	str	sl, [sp, #276]	; 0x114
   1ab74:	b	1a994 <ReadCompressedDataSlabN+0x8e0>
   1ab78:	ldr	r3, [r4]
   1ab7c:	sub	r3, r3, #1
   1ab80:	str	r3, [sp, #176]	; 0xb0
   1ab84:	ldr	r3, [sp, #264]	; 0x108
   1ab88:	ldr	r3, [r3]
   1ab8c:	str	r3, [sp, #96]	; 0x60
   1ab90:	ldr	r3, [sl]
   1ab94:	str	r3, [sp, #24]
   1ab98:	ldr	r3, [sp, #260]	; 0x104
   1ab9c:	cmp	r3, #1
   1aba0:	ble	1abcc <ReadCompressedDataSlabN+0xb18>
   1aba4:	mov	r3, r4
   1aba8:	add	r8, sp, #180	; 0xb4
   1abac:	ldr	lr, [sp, #264]	; 0x108
   1abb0:	add	r7, sp, #96	; 0x60
   1abb4:	mov	r6, #1
   1abb8:	mov	r5, #0
   1abbc:	str	r4, [sp, #272]	; 0x110
   1abc0:	mov	r4, lr
   1abc4:	mov	r9, r3
   1abc8:	b	1d940 <ReadCompressedDataSlabN+0x388c>
   1abcc:	mov	r5, #0
   1abd0:	b	1d9d0 <ReadCompressedDataSlabN+0x391c>
   1abd4:	ldr	r3, [sp, #24]
   1abd8:	cmp	r3, #0
   1abdc:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1abe0:	mov	r3, #0
   1abe4:	str	r3, [sp, #32]
   1abe8:	add	r3, sp, #40	; 0x28
   1abec:	str	r3, [sp, #20]
   1abf0:	str	sl, [sp, #276]	; 0x114
   1abf4:	ldr	sl, [sp, #260]	; 0x104
   1abf8:	b	1ad00 <ReadCompressedDataSlabN+0xc4c>
   1abfc:	ldr	r2, [sp, #256]	; 0x100
   1ac00:	ldr	r1, [sp, #20]
   1ac04:	ldr	r0, [sp, #12]
   1ac08:	bl	2468 <InflateSkipData>
   1ac0c:	ldr	r3, [fp]
   1ac10:	add	r5, r5, r3
   1ac14:	b	1ad0c <ReadCompressedDataSlabN+0xc58>
   1ac18:	sub	r6, r6, r3
   1ac1c:	ldr	r3, [r8, #-8]
   1ac20:	mov	r2, r3
   1ac24:	ldr	r3, [fp, r4, lsl #2]
   1ac28:	str	r2, [sp, #28]
   1ac2c:	mla	r3, r3, r2, r6
   1ac30:	ldr	r2, [sp, #256]	; 0x100
   1ac34:	ldr	r1, [sp, #20]
   1ac38:	ldr	r0, [sp, #12]
   1ac3c:	bl	2468 <InflateSkipData>
   1ac40:	ldr	r3, [fp, r4, lsl #2]
   1ac44:	ldr	r2, [sp, #28]
   1ac48:	mla	r6, r3, r2, r6
   1ac4c:	add	r5, r5, r6
   1ac50:	add	r4, r4, #1
   1ac54:	cmp	sl, r4
   1ac58:	beq	1ace0 <ReadCompressedDataSlabN+0xc2c>
   1ac5c:	ldr	r3, [r7]
   1ac60:	add	r3, r3, #1
   1ac64:	str	r3, [r7]
   1ac68:	ldr	r1, [r9, #4]!
   1ac6c:	sdiv	r2, r3, r1
   1ac70:	mls	r3, r1, r2, r3
   1ac74:	cmp	r3, #0
   1ac78:	bne	1accc <ReadCompressedDataSlabN+0xc18>
   1ac7c:	mov	r3, #0
   1ac80:	str	r3, [r7], #4
   1ac84:	ldr	r6, [r8], #4
   1ac88:	sdiv	r3, r5, r6
   1ac8c:	mls	r3, r6, r3, r5
   1ac90:	cmp	r3, #0
   1ac94:	bne	1ac18 <ReadCompressedDataSlabN+0xb64>
   1ac98:	ldr	r3, [fp, r4, lsl #2]
   1ac9c:	cmp	r3, #0
   1aca0:	beq	1ac50 <ReadCompressedDataSlabN+0xb9c>
   1aca4:	ldr	r6, [r8, #-8]
   1aca8:	mul	r3, r6, r3
   1acac:	ldr	r2, [sp, #256]	; 0x100
   1acb0:	ldr	r1, [sp, #20]
   1acb4:	ldr	r0, [sp, #12]
   1acb8:	bl	2468 <InflateSkipData>
   1acbc:	ldr	r3, [fp, r4, lsl #2]
   1acc0:	mla	r5, r3, r6, r5
   1acc4:	b	1ac50 <ReadCompressedDataSlabN+0xb9c>
   1acc8:	ldr	r4, [sp, #36]	; 0x24
   1accc:	add	r3, sp, #216	; 0xd8
   1acd0:	add	r4, r3, r4, lsl #2
   1acd4:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1acd8:	cmp	r3, #0
   1acdc:	bne	1adc0 <ReadCompressedDataSlabN+0xd0c>
   1ace0:	ldr	r3, [sp, #276]	; 0x114
   1ace4:	ldr	r3, [r3]
   1ace8:	ldr	r2, [sp, #32]
   1acec:	add	r3, r2, r3
   1acf0:	str	r3, [sp, #32]
   1acf4:	ldr	r2, [sp, #24]
   1acf8:	cmp	r3, r2
   1acfc:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1ad00:	ldr	r3, [fp]
   1ad04:	cmp	r3, #0
   1ad08:	bne	1abfc <ReadCompressedDataSlabN+0xb48>
   1ad0c:	ldr	r3, [sp, #276]	; 0x114
   1ad10:	ldr	r3, [r3]
   1ad14:	str	r3, [sp]
   1ad18:	ldr	r3, [sp, #256]	; 0x100
   1ad1c:	ldr	r2, [sp, #16]
   1ad20:	ldr	r1, [sp, #32]
   1ad24:	add	r2, r2, r1, lsl #3
   1ad28:	ldr	r6, [sp, #20]
   1ad2c:	mov	r1, r6
   1ad30:	ldr	r4, [sp, #12]
   1ad34:	mov	r0, r4
   1ad38:	bl	9804 <ReadCompressedInt64Data>
   1ad3c:	ldr	r3, [sp, #264]	; 0x108
   1ad40:	ldr	r3, [r3]
   1ad44:	ldr	r2, [sp, #276]	; 0x114
   1ad48:	ldr	r2, [r2]
   1ad4c:	sub	r3, r3, r2
   1ad50:	ldr	r2, [fp]
   1ad54:	sub	r3, r3, r2
   1ad58:	ldr	r2, [sp, #256]	; 0x100
   1ad5c:	mov	r1, r6
   1ad60:	mov	r0, r4
   1ad64:	bl	2468 <InflateSkipData>
   1ad68:	ldr	r3, [sp, #264]	; 0x108
   1ad6c:	ldr	r3, [r3]
   1ad70:	ldr	r2, [fp]
   1ad74:	sub	r3, r3, r2
   1ad78:	add	r5, r3, r5
   1ad7c:	cmp	sl, #1
   1ad80:	ble	1ace0 <ReadCompressedDataSlabN+0xc2c>
   1ad84:	ldr	r3, [sp, #140]	; 0x8c
   1ad88:	add	r3, r3, #1
   1ad8c:	str	r3, [sp, #140]	; 0x8c
   1ad90:	ldr	r2, [sp, #276]	; 0x114
   1ad94:	ldr	r1, [r2, #4]
   1ad98:	sdiv	r2, r3, r1
   1ad9c:	mls	r3, r1, r2, r3
   1ada0:	cmp	r3, #0
   1ada4:	bne	1acc8 <ReadCompressedDataSlabN+0xc14>
   1ada8:	add	r7, sp, #140	; 0x8c
   1adac:	ldr	r3, [sp, #276]	; 0x114
   1adb0:	add	r9, r3, #4
   1adb4:	add	r8, sp, #100	; 0x64
   1adb8:	ldr	r4, [sp, #36]	; 0x24
   1adbc:	b	1ac7c <ReadCompressedDataSlabN+0xbc8>
   1adc0:	add	r5, r5, r3
   1adc4:	ldr	r2, [sp, #256]	; 0x100
   1adc8:	ldr	r1, [sp, #20]
   1adcc:	ldr	r0, [sp, #12]
   1add0:	bl	2468 <InflateSkipData>
   1add4:	b	1ace0 <ReadCompressedDataSlabN+0xc2c>
   1add8:	ldr	r2, [sp, #256]	; 0x100
   1addc:	ldr	r1, [sp, #20]
   1ade0:	ldr	r0, [sp, #12]
   1ade4:	bl	2468 <InflateSkipData>
   1ade8:	ldr	r3, [fp]
   1adec:	add	r5, r5, r3
   1adf0:	b	1af10 <ReadCompressedDataSlabN+0xe5c>
   1adf4:	mov	r6, #0
   1adf8:	b	1af88 <ReadCompressedDataSlabN+0xed4>
   1adfc:	sub	r4, r4, r3
   1ae00:	ldr	sl, [r9, #-8]
   1ae04:	ldr	r3, [fp, r6, lsl #2]
   1ae08:	mla	r3, r3, sl, r4
   1ae0c:	ldr	r2, [sp, #256]	; 0x100
   1ae10:	ldr	r1, [sp, #20]
   1ae14:	ldr	r0, [sp, #12]
   1ae18:	bl	2468 <InflateSkipData>
   1ae1c:	ldr	r3, [fp, r6, lsl #2]
   1ae20:	mla	r4, r3, sl, r4
   1ae24:	add	r5, r5, r4
   1ae28:	add	r6, r6, #1
   1ae2c:	ldr	r3, [sp, #260]	; 0x104
   1ae30:	cmp	r3, r6
   1ae34:	beq	1aee0 <ReadCompressedDataSlabN+0xe2c>
   1ae38:	ldr	r3, [r8]
   1ae3c:	add	r3, r3, #1
   1ae40:	str	r3, [r8]
   1ae44:	ldr	r1, [r7, #4]!
   1ae48:	sdiv	r2, r3, r1
   1ae4c:	mls	r3, r1, r2, r3
   1ae50:	cmp	r3, #0
   1ae54:	bne	1aeac <ReadCompressedDataSlabN+0xdf8>
   1ae58:	mov	r3, #0
   1ae5c:	str	r3, [r8], #4
   1ae60:	ldr	r4, [r9], #4
   1ae64:	sdiv	r3, r5, r4
   1ae68:	mls	r3, r4, r3, r5
   1ae6c:	cmp	r3, #0
   1ae70:	bne	1adfc <ReadCompressedDataSlabN+0xd48>
   1ae74:	ldr	r3, [fp, r6, lsl #2]
   1ae78:	cmp	r3, #0
   1ae7c:	beq	1ae28 <ReadCompressedDataSlabN+0xd74>
   1ae80:	ldr	r4, [r9, #-8]
   1ae84:	mul	r3, r4, r3
   1ae88:	ldr	r2, [sp, #256]	; 0x100
   1ae8c:	ldr	r1, [sp, #20]
   1ae90:	ldr	r0, [sp, #12]
   1ae94:	bl	2468 <InflateSkipData>
   1ae98:	ldr	r3, [fp, r6, lsl #2]
   1ae9c:	mla	r5, r3, r4, r5
   1aea0:	b	1ae28 <ReadCompressedDataSlabN+0xd74>
   1aea4:	mov	r6, #1
   1aea8:	b	1aeb4 <ReadCompressedDataSlabN+0xe00>
   1aeac:	ldr	r4, [sp, #272]	; 0x110
   1aeb0:	ldr	sl, [sp, #276]	; 0x114
   1aeb4:	add	r3, sp, #216	; 0xd8
   1aeb8:	add	r6, r3, r6, lsl #2
   1aebc:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1aec0:	cmp	r3, #0
   1aec4:	beq	1aee8 <ReadCompressedDataSlabN+0xe34>
   1aec8:	add	r5, r5, r3
   1aecc:	ldr	r2, [sp, #256]	; 0x100
   1aed0:	ldr	r1, [sp, #20]
   1aed4:	ldr	r0, [sp, #12]
   1aed8:	bl	2468 <InflateSkipData>
   1aedc:	b	1aee8 <ReadCompressedDataSlabN+0xe34>
   1aee0:	ldr	r4, [sp, #272]	; 0x110
   1aee4:	ldr	sl, [sp, #276]	; 0x114
   1aee8:	ldr	r3, [sl]
   1aeec:	ldr	r2, [sp, #28]
   1aef0:	add	r3, r2, r3
   1aef4:	str	r3, [sp, #28]
   1aef8:	ldr	r2, [sp, #24]
   1aefc:	cmp	r3, r2
   1af00:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1af04:	ldr	r3, [fp]
   1af08:	cmp	r3, #0
   1af0c:	bne	1add8 <ReadCompressedDataSlabN+0xd24>
   1af10:	ldr	r3, [sl]
   1af14:	cmp	r3, #1
   1af18:	ble	1adf4 <ReadCompressedDataSlabN+0xd40>
   1af1c:	ldr	r3, [sp, #16]
   1af20:	ldr	r2, [sp, #28]
   1af24:	add	r7, r3, r2, lsl #3
   1af28:	mov	r6, #0
   1af2c:	mov	r3, #1
   1af30:	str	r3, [sp]
   1af34:	ldr	r3, [sp, #256]	; 0x100
   1af38:	mov	r2, r7
   1af3c:	ldr	r9, [sp, #20]
   1af40:	mov	r1, r9
   1af44:	ldr	r8, [sp, #12]
   1af48:	mov	r0, r8
   1af4c:	bl	9804 <ReadCompressedInt64Data>
   1af50:	ldr	r3, [r4]
   1af54:	sub	r3, r3, #1
   1af58:	ldr	r2, [sp, #256]	; 0x100
   1af5c:	mov	r1, r9
   1af60:	mov	r0, r8
   1af64:	bl	2468 <InflateSkipData>
   1af68:	ldr	r3, [r4]
   1af6c:	add	r5, r5, r3
   1af70:	add	r6, r6, #1
   1af74:	add	r7, r7, #8
   1af78:	ldr	r3, [sl]
   1af7c:	sub	r3, r3, #1
   1af80:	cmp	r3, r6
   1af84:	bgt	1af2c <ReadCompressedDataSlabN+0xe78>
   1af88:	ldr	r3, [sp, #28]
   1af8c:	add	r2, r3, r6
   1af90:	mov	r3, #1
   1af94:	str	r3, [sp]
   1af98:	ldr	r3, [sp, #256]	; 0x100
   1af9c:	ldr	r1, [sp, #16]
   1afa0:	add	r2, r1, r2, lsl #3
   1afa4:	ldr	r7, [sp, #20]
   1afa8:	mov	r1, r7
   1afac:	ldr	r6, [sp, #12]
   1afb0:	mov	r0, r6
   1afb4:	bl	9804 <ReadCompressedInt64Data>
   1afb8:	ldr	r3, [sl]
   1afbc:	sub	r3, r3, #1
   1afc0:	ldr	r1, [r4]
   1afc4:	ldr	r2, [fp]
   1afc8:	mla	r3, r1, r3, r2
   1afcc:	ldr	r2, [sp, #264]	; 0x108
   1afd0:	ldr	r2, [r2]
   1afd4:	sub	r3, r2, r3
   1afd8:	add	r5, r5, r3
   1afdc:	sub	r3, r3, #1
   1afe0:	ldr	r2, [sp, #256]	; 0x100
   1afe4:	mov	r1, r7
   1afe8:	mov	r0, r6
   1afec:	bl	2468 <InflateSkipData>
   1aff0:	ldr	r3, [sp, #260]	; 0x104
   1aff4:	cmp	r3, #1
   1aff8:	ble	1aee8 <ReadCompressedDataSlabN+0xe34>
   1affc:	ldr	r3, [sp, #140]	; 0x8c
   1b000:	add	r3, r3, #1
   1b004:	str	r3, [sp, #140]	; 0x8c
   1b008:	ldr	r1, [sl, #4]
   1b00c:	sdiv	r2, r3, r1
   1b010:	mls	r3, r1, r2, r3
   1b014:	cmp	r3, #0
   1b018:	bne	1aea4 <ReadCompressedDataSlabN+0xdf0>
   1b01c:	add	r8, sp, #140	; 0x8c
   1b020:	add	r7, sl, #4
   1b024:	add	r9, sp, #100	; 0x64
   1b028:	mov	r6, #1
   1b02c:	str	r4, [sp, #272]	; 0x110
   1b030:	str	sl, [sp, #276]	; 0x114
   1b034:	b	1ae58 <ReadCompressedDataSlabN+0xda4>
   1b038:	ldr	r3, [r4]
   1b03c:	sub	r3, r3, #1
   1b040:	str	r3, [sp, #176]	; 0xb0
   1b044:	ldr	r3, [sp, #264]	; 0x108
   1b048:	ldr	r3, [r3]
   1b04c:	str	r3, [sp, #96]	; 0x60
   1b050:	ldr	r3, [sl]
   1b054:	str	r3, [sp, #24]
   1b058:	ldr	r3, [sp, #260]	; 0x104
   1b05c:	cmp	r3, #1
   1b060:	ble	1b08c <ReadCompressedDataSlabN+0xfd8>
   1b064:	mov	r3, r4
   1b068:	add	r8, sp, #180	; 0xb4
   1b06c:	ldr	lr, [sp, #264]	; 0x108
   1b070:	add	r7, sp, #96	; 0x60
   1b074:	mov	r6, #1
   1b078:	mov	r5, #0
   1b07c:	str	r4, [sp, #272]	; 0x110
   1b080:	mov	r4, lr
   1b084:	mov	r9, r3
   1b088:	b	1da34 <ReadCompressedDataSlabN+0x3980>
   1b08c:	mov	r5, #0
   1b090:	b	1dac4 <ReadCompressedDataSlabN+0x3a10>
   1b094:	ldr	r3, [sp, #24]
   1b098:	cmp	r3, #0
   1b09c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b0a0:	mov	r3, #0
   1b0a4:	str	r3, [sp, #32]
   1b0a8:	add	r3, sp, #40	; 0x28
   1b0ac:	str	r3, [sp, #20]
   1b0b0:	str	sl, [sp, #276]	; 0x114
   1b0b4:	ldr	sl, [sp, #260]	; 0x104
   1b0b8:	b	1b1c0 <ReadCompressedDataSlabN+0x110c>
   1b0bc:	ldr	r2, [sp, #256]	; 0x100
   1b0c0:	ldr	r1, [sp, #20]
   1b0c4:	ldr	r0, [sp, #12]
   1b0c8:	bl	2468 <InflateSkipData>
   1b0cc:	ldr	r3, [fp]
   1b0d0:	add	r5, r5, r3
   1b0d4:	b	1b1cc <ReadCompressedDataSlabN+0x1118>
   1b0d8:	sub	r6, r6, r3
   1b0dc:	ldr	r3, [r8, #-8]
   1b0e0:	mov	r2, r3
   1b0e4:	ldr	r3, [fp, r4, lsl #2]
   1b0e8:	str	r2, [sp, #28]
   1b0ec:	mla	r3, r3, r2, r6
   1b0f0:	ldr	r2, [sp, #256]	; 0x100
   1b0f4:	ldr	r1, [sp, #20]
   1b0f8:	ldr	r0, [sp, #12]
   1b0fc:	bl	2468 <InflateSkipData>
   1b100:	ldr	r3, [fp, r4, lsl #2]
   1b104:	ldr	r2, [sp, #28]
   1b108:	mla	r6, r3, r2, r6
   1b10c:	add	r5, r5, r6
   1b110:	add	r4, r4, #1
   1b114:	cmp	sl, r4
   1b118:	beq	1b1a0 <ReadCompressedDataSlabN+0x10ec>
   1b11c:	ldr	r3, [r7]
   1b120:	add	r3, r3, #1
   1b124:	str	r3, [r7]
   1b128:	ldr	r1, [r9, #4]!
   1b12c:	sdiv	r2, r3, r1
   1b130:	mls	r3, r1, r2, r3
   1b134:	cmp	r3, #0
   1b138:	bne	1b18c <ReadCompressedDataSlabN+0x10d8>
   1b13c:	mov	r3, #0
   1b140:	str	r3, [r7], #4
   1b144:	ldr	r6, [r8], #4
   1b148:	sdiv	r3, r5, r6
   1b14c:	mls	r3, r6, r3, r5
   1b150:	cmp	r3, #0
   1b154:	bne	1b0d8 <ReadCompressedDataSlabN+0x1024>
   1b158:	ldr	r3, [fp, r4, lsl #2]
   1b15c:	cmp	r3, #0
   1b160:	beq	1b110 <ReadCompressedDataSlabN+0x105c>
   1b164:	ldr	r6, [r8, #-8]
   1b168:	mul	r3, r6, r3
   1b16c:	ldr	r2, [sp, #256]	; 0x100
   1b170:	ldr	r1, [sp, #20]
   1b174:	ldr	r0, [sp, #12]
   1b178:	bl	2468 <InflateSkipData>
   1b17c:	ldr	r3, [fp, r4, lsl #2]
   1b180:	mla	r5, r3, r6, r5
   1b184:	b	1b110 <ReadCompressedDataSlabN+0x105c>
   1b188:	ldr	r4, [sp, #36]	; 0x24
   1b18c:	add	r3, sp, #216	; 0xd8
   1b190:	add	r4, r3, r4, lsl #2
   1b194:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1b198:	cmp	r3, #0
   1b19c:	bne	1b280 <ReadCompressedDataSlabN+0x11cc>
   1b1a0:	ldr	r3, [sp, #276]	; 0x114
   1b1a4:	ldr	r3, [r3]
   1b1a8:	ldr	r2, [sp, #32]
   1b1ac:	add	r3, r2, r3
   1b1b0:	str	r3, [sp, #32]
   1b1b4:	ldr	r2, [sp, #24]
   1b1b8:	cmp	r3, r2
   1b1bc:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b1c0:	ldr	r3, [fp]
   1b1c4:	cmp	r3, #0
   1b1c8:	bne	1b0bc <ReadCompressedDataSlabN+0x1008>
   1b1cc:	ldr	r3, [sp, #276]	; 0x114
   1b1d0:	ldr	r3, [r3]
   1b1d4:	str	r3, [sp]
   1b1d8:	ldr	r3, [sp, #256]	; 0x100
   1b1dc:	ldr	r2, [sp, #16]
   1b1e0:	ldr	r1, [sp, #32]
   1b1e4:	add	r2, r2, r1, lsl #3
   1b1e8:	ldr	r6, [sp, #20]
   1b1ec:	mov	r1, r6
   1b1f0:	ldr	r4, [sp, #12]
   1b1f4:	mov	r0, r4
   1b1f8:	bl	b518 <ReadCompressedUInt64Data>
   1b1fc:	ldr	r3, [sp, #264]	; 0x108
   1b200:	ldr	r3, [r3]
   1b204:	ldr	r2, [sp, #276]	; 0x114
   1b208:	ldr	r2, [r2]
   1b20c:	sub	r3, r3, r2
   1b210:	ldr	r2, [fp]
   1b214:	sub	r3, r3, r2
   1b218:	ldr	r2, [sp, #256]	; 0x100
   1b21c:	mov	r1, r6
   1b220:	mov	r0, r4
   1b224:	bl	2468 <InflateSkipData>
   1b228:	ldr	r3, [sp, #264]	; 0x108
   1b22c:	ldr	r3, [r3]
   1b230:	ldr	r2, [fp]
   1b234:	sub	r3, r3, r2
   1b238:	add	r5, r3, r5
   1b23c:	cmp	sl, #1
   1b240:	ble	1b1a0 <ReadCompressedDataSlabN+0x10ec>
   1b244:	ldr	r3, [sp, #140]	; 0x8c
   1b248:	add	r3, r3, #1
   1b24c:	str	r3, [sp, #140]	; 0x8c
   1b250:	ldr	r2, [sp, #276]	; 0x114
   1b254:	ldr	r1, [r2, #4]
   1b258:	sdiv	r2, r3, r1
   1b25c:	mls	r3, r1, r2, r3
   1b260:	cmp	r3, #0
   1b264:	bne	1b188 <ReadCompressedDataSlabN+0x10d4>
   1b268:	add	r7, sp, #140	; 0x8c
   1b26c:	ldr	r3, [sp, #276]	; 0x114
   1b270:	add	r9, r3, #4
   1b274:	add	r8, sp, #100	; 0x64
   1b278:	ldr	r4, [sp, #36]	; 0x24
   1b27c:	b	1b13c <ReadCompressedDataSlabN+0x1088>
   1b280:	add	r5, r5, r3
   1b284:	ldr	r2, [sp, #256]	; 0x100
   1b288:	ldr	r1, [sp, #20]
   1b28c:	ldr	r0, [sp, #12]
   1b290:	bl	2468 <InflateSkipData>
   1b294:	b	1b1a0 <ReadCompressedDataSlabN+0x10ec>
   1b298:	ldr	r2, [sp, #256]	; 0x100
   1b29c:	ldr	r1, [sp, #20]
   1b2a0:	ldr	r0, [sp, #12]
   1b2a4:	bl	2468 <InflateSkipData>
   1b2a8:	ldr	r3, [fp]
   1b2ac:	add	r5, r5, r3
   1b2b0:	b	1b3d0 <ReadCompressedDataSlabN+0x131c>
   1b2b4:	mov	r6, #0
   1b2b8:	b	1b448 <ReadCompressedDataSlabN+0x1394>
   1b2bc:	sub	r4, r4, r3
   1b2c0:	ldr	sl, [r9, #-8]
   1b2c4:	ldr	r3, [fp, r6, lsl #2]
   1b2c8:	mla	r3, r3, sl, r4
   1b2cc:	ldr	r2, [sp, #256]	; 0x100
   1b2d0:	ldr	r1, [sp, #20]
   1b2d4:	ldr	r0, [sp, #12]
   1b2d8:	bl	2468 <InflateSkipData>
   1b2dc:	ldr	r3, [fp, r6, lsl #2]
   1b2e0:	mla	r4, r3, sl, r4
   1b2e4:	add	r5, r5, r4
   1b2e8:	add	r6, r6, #1
   1b2ec:	ldr	r3, [sp, #260]	; 0x104
   1b2f0:	cmp	r3, r6
   1b2f4:	beq	1b3a0 <ReadCompressedDataSlabN+0x12ec>
   1b2f8:	ldr	r3, [r8]
   1b2fc:	add	r3, r3, #1
   1b300:	str	r3, [r8]
   1b304:	ldr	r1, [r7, #4]!
   1b308:	sdiv	r2, r3, r1
   1b30c:	mls	r3, r1, r2, r3
   1b310:	cmp	r3, #0
   1b314:	bne	1b36c <ReadCompressedDataSlabN+0x12b8>
   1b318:	mov	r3, #0
   1b31c:	str	r3, [r8], #4
   1b320:	ldr	r4, [r9], #4
   1b324:	sdiv	r3, r5, r4
   1b328:	mls	r3, r4, r3, r5
   1b32c:	cmp	r3, #0
   1b330:	bne	1b2bc <ReadCompressedDataSlabN+0x1208>
   1b334:	ldr	r3, [fp, r6, lsl #2]
   1b338:	cmp	r3, #0
   1b33c:	beq	1b2e8 <ReadCompressedDataSlabN+0x1234>
   1b340:	ldr	r4, [r9, #-8]
   1b344:	mul	r3, r4, r3
   1b348:	ldr	r2, [sp, #256]	; 0x100
   1b34c:	ldr	r1, [sp, #20]
   1b350:	ldr	r0, [sp, #12]
   1b354:	bl	2468 <InflateSkipData>
   1b358:	ldr	r3, [fp, r6, lsl #2]
   1b35c:	mla	r5, r3, r4, r5
   1b360:	b	1b2e8 <ReadCompressedDataSlabN+0x1234>
   1b364:	mov	r6, #1
   1b368:	b	1b374 <ReadCompressedDataSlabN+0x12c0>
   1b36c:	ldr	r4, [sp, #272]	; 0x110
   1b370:	ldr	sl, [sp, #276]	; 0x114
   1b374:	add	r3, sp, #216	; 0xd8
   1b378:	add	r6, r3, r6, lsl #2
   1b37c:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1b380:	cmp	r3, #0
   1b384:	beq	1b3a8 <ReadCompressedDataSlabN+0x12f4>
   1b388:	add	r5, r5, r3
   1b38c:	ldr	r2, [sp, #256]	; 0x100
   1b390:	ldr	r1, [sp, #20]
   1b394:	ldr	r0, [sp, #12]
   1b398:	bl	2468 <InflateSkipData>
   1b39c:	b	1b3a8 <ReadCompressedDataSlabN+0x12f4>
   1b3a0:	ldr	r4, [sp, #272]	; 0x110
   1b3a4:	ldr	sl, [sp, #276]	; 0x114
   1b3a8:	ldr	r3, [sl]
   1b3ac:	ldr	r2, [sp, #28]
   1b3b0:	add	r3, r2, r3
   1b3b4:	str	r3, [sp, #28]
   1b3b8:	ldr	r2, [sp, #24]
   1b3bc:	cmp	r3, r2
   1b3c0:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b3c4:	ldr	r3, [fp]
   1b3c8:	cmp	r3, #0
   1b3cc:	bne	1b298 <ReadCompressedDataSlabN+0x11e4>
   1b3d0:	ldr	r3, [sl]
   1b3d4:	cmp	r3, #1
   1b3d8:	ble	1b2b4 <ReadCompressedDataSlabN+0x1200>
   1b3dc:	ldr	r3, [sp, #16]
   1b3e0:	ldr	r2, [sp, #28]
   1b3e4:	add	r7, r3, r2, lsl #3
   1b3e8:	mov	r6, #0
   1b3ec:	mov	r3, #1
   1b3f0:	str	r3, [sp]
   1b3f4:	ldr	r3, [sp, #256]	; 0x100
   1b3f8:	mov	r2, r7
   1b3fc:	ldr	r9, [sp, #20]
   1b400:	mov	r1, r9
   1b404:	ldr	r8, [sp, #12]
   1b408:	mov	r0, r8
   1b40c:	bl	b518 <ReadCompressedUInt64Data>
   1b410:	ldr	r3, [r4]
   1b414:	sub	r3, r3, #1
   1b418:	ldr	r2, [sp, #256]	; 0x100
   1b41c:	mov	r1, r9
   1b420:	mov	r0, r8
   1b424:	bl	2468 <InflateSkipData>
   1b428:	ldr	r3, [r4]
   1b42c:	add	r5, r5, r3
   1b430:	add	r6, r6, #1
   1b434:	add	r7, r7, #8
   1b438:	ldr	r3, [sl]
   1b43c:	sub	r3, r3, #1
   1b440:	cmp	r3, r6
   1b444:	bgt	1b3ec <ReadCompressedDataSlabN+0x1338>
   1b448:	ldr	r3, [sp, #28]
   1b44c:	add	r2, r3, r6
   1b450:	mov	r3, #1
   1b454:	str	r3, [sp]
   1b458:	ldr	r3, [sp, #256]	; 0x100
   1b45c:	ldr	r1, [sp, #16]
   1b460:	add	r2, r1, r2, lsl #3
   1b464:	ldr	r7, [sp, #20]
   1b468:	mov	r1, r7
   1b46c:	ldr	r6, [sp, #12]
   1b470:	mov	r0, r6
   1b474:	bl	b518 <ReadCompressedUInt64Data>
   1b478:	ldr	r3, [sl]
   1b47c:	sub	r3, r3, #1
   1b480:	ldr	r1, [r4]
   1b484:	ldr	r2, [fp]
   1b488:	mla	r3, r1, r3, r2
   1b48c:	ldr	r2, [sp, #264]	; 0x108
   1b490:	ldr	r2, [r2]
   1b494:	sub	r3, r2, r3
   1b498:	add	r5, r5, r3
   1b49c:	sub	r3, r3, #1
   1b4a0:	ldr	r2, [sp, #256]	; 0x100
   1b4a4:	mov	r1, r7
   1b4a8:	mov	r0, r6
   1b4ac:	bl	2468 <InflateSkipData>
   1b4b0:	ldr	r3, [sp, #260]	; 0x104
   1b4b4:	cmp	r3, #1
   1b4b8:	ble	1b3a8 <ReadCompressedDataSlabN+0x12f4>
   1b4bc:	ldr	r3, [sp, #140]	; 0x8c
   1b4c0:	add	r3, r3, #1
   1b4c4:	str	r3, [sp, #140]	; 0x8c
   1b4c8:	ldr	r1, [sl, #4]
   1b4cc:	sdiv	r2, r3, r1
   1b4d0:	mls	r3, r1, r2, r3
   1b4d4:	cmp	r3, #0
   1b4d8:	bne	1b364 <ReadCompressedDataSlabN+0x12b0>
   1b4dc:	add	r8, sp, #140	; 0x8c
   1b4e0:	add	r7, sl, #4
   1b4e4:	add	r9, sp, #100	; 0x64
   1b4e8:	mov	r6, #1
   1b4ec:	str	r4, [sp, #272]	; 0x110
   1b4f0:	str	sl, [sp, #276]	; 0x114
   1b4f4:	b	1b318 <ReadCompressedDataSlabN+0x1264>
   1b4f8:	ldr	r3, [r4]
   1b4fc:	sub	r3, r3, #1
   1b500:	str	r3, [sp, #176]	; 0xb0
   1b504:	ldr	r3, [sp, #264]	; 0x108
   1b508:	ldr	r3, [r3]
   1b50c:	str	r3, [sp, #96]	; 0x60
   1b510:	ldr	r3, [sl]
   1b514:	str	r3, [sp, #24]
   1b518:	ldr	r3, [sp, #260]	; 0x104
   1b51c:	cmp	r3, #1
   1b520:	ble	1b54c <ReadCompressedDataSlabN+0x1498>
   1b524:	mov	r3, r4
   1b528:	add	r8, sp, #180	; 0xb4
   1b52c:	ldr	lr, [sp, #264]	; 0x108
   1b530:	add	r7, sp, #96	; 0x60
   1b534:	mov	r6, #1
   1b538:	mov	r5, #0
   1b53c:	str	r4, [sp, #272]	; 0x110
   1b540:	mov	r4, lr
   1b544:	mov	r9, r3
   1b548:	b	1d758 <ReadCompressedDataSlabN+0x36a4>
   1b54c:	mov	r5, #0
   1b550:	b	1d7e8 <ReadCompressedDataSlabN+0x3734>
   1b554:	ldr	r3, [sp, #24]
   1b558:	cmp	r3, #0
   1b55c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b560:	mov	r3, #0
   1b564:	str	r3, [sp, #32]
   1b568:	add	r3, sp, #40	; 0x28
   1b56c:	str	r3, [sp, #20]
   1b570:	str	sl, [sp, #276]	; 0x114
   1b574:	ldr	sl, [sp, #260]	; 0x104
   1b578:	b	1b680 <ReadCompressedDataSlabN+0x15cc>
   1b57c:	ldr	r2, [sp, #256]	; 0x100
   1b580:	ldr	r1, [sp, #20]
   1b584:	ldr	r0, [sp, #12]
   1b588:	bl	2468 <InflateSkipData>
   1b58c:	ldr	r3, [fp]
   1b590:	add	r5, r5, r3
   1b594:	b	1b68c <ReadCompressedDataSlabN+0x15d8>
   1b598:	sub	r6, r6, r3
   1b59c:	ldr	r3, [r8, #-8]
   1b5a0:	mov	r2, r3
   1b5a4:	ldr	r3, [fp, r4, lsl #2]
   1b5a8:	str	r2, [sp, #28]
   1b5ac:	mla	r3, r3, r2, r6
   1b5b0:	ldr	r2, [sp, #256]	; 0x100
   1b5b4:	ldr	r1, [sp, #20]
   1b5b8:	ldr	r0, [sp, #12]
   1b5bc:	bl	2468 <InflateSkipData>
   1b5c0:	ldr	r3, [fp, r4, lsl #2]
   1b5c4:	ldr	r2, [sp, #28]
   1b5c8:	mla	r6, r3, r2, r6
   1b5cc:	add	r5, r5, r6
   1b5d0:	add	r4, r4, #1
   1b5d4:	cmp	sl, r4
   1b5d8:	beq	1b660 <ReadCompressedDataSlabN+0x15ac>
   1b5dc:	ldr	r3, [r7]
   1b5e0:	add	r3, r3, #1
   1b5e4:	str	r3, [r7]
   1b5e8:	ldr	r1, [r9, #4]!
   1b5ec:	sdiv	r2, r3, r1
   1b5f0:	mls	r3, r1, r2, r3
   1b5f4:	cmp	r3, #0
   1b5f8:	bne	1b64c <ReadCompressedDataSlabN+0x1598>
   1b5fc:	mov	r3, #0
   1b600:	str	r3, [r7], #4
   1b604:	ldr	r6, [r8], #4
   1b608:	sdiv	r3, r5, r6
   1b60c:	mls	r3, r6, r3, r5
   1b610:	cmp	r3, #0
   1b614:	bne	1b598 <ReadCompressedDataSlabN+0x14e4>
   1b618:	ldr	r3, [fp, r4, lsl #2]
   1b61c:	cmp	r3, #0
   1b620:	beq	1b5d0 <ReadCompressedDataSlabN+0x151c>
   1b624:	ldr	r6, [r8, #-8]
   1b628:	mul	r3, r6, r3
   1b62c:	ldr	r2, [sp, #256]	; 0x100
   1b630:	ldr	r1, [sp, #20]
   1b634:	ldr	r0, [sp, #12]
   1b638:	bl	2468 <InflateSkipData>
   1b63c:	ldr	r3, [fp, r4, lsl #2]
   1b640:	mla	r5, r3, r6, r5
   1b644:	b	1b5d0 <ReadCompressedDataSlabN+0x151c>
   1b648:	ldr	r4, [sp, #36]	; 0x24
   1b64c:	add	r3, sp, #216	; 0xd8
   1b650:	add	r4, r3, r4, lsl #2
   1b654:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1b658:	cmp	r3, #0
   1b65c:	bne	1b740 <ReadCompressedDataSlabN+0x168c>
   1b660:	ldr	r3, [sp, #276]	; 0x114
   1b664:	ldr	r3, [r3]
   1b668:	ldr	r2, [sp, #32]
   1b66c:	add	r3, r2, r3
   1b670:	str	r3, [sp, #32]
   1b674:	ldr	r2, [sp, #24]
   1b678:	cmp	r3, r2
   1b67c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b680:	ldr	r3, [fp]
   1b684:	cmp	r3, #0
   1b688:	bne	1b57c <ReadCompressedDataSlabN+0x14c8>
   1b68c:	ldr	r3, [sp, #276]	; 0x114
   1b690:	ldr	r3, [r3]
   1b694:	str	r3, [sp]
   1b698:	ldr	r3, [sp, #256]	; 0x100
   1b69c:	ldr	r2, [sp, #16]
   1b6a0:	ldr	r1, [sp, #32]
   1b6a4:	add	r2, r2, r1, lsl #2
   1b6a8:	ldr	r6, [sp, #20]
   1b6ac:	mov	r1, r6
   1b6b0:	ldr	r4, [sp, #12]
   1b6b4:	mov	r0, r4
   1b6b8:	bl	d19c <ReadCompressedInt32Data>
   1b6bc:	ldr	r3, [sp, #264]	; 0x108
   1b6c0:	ldr	r3, [r3]
   1b6c4:	ldr	r2, [sp, #276]	; 0x114
   1b6c8:	ldr	r2, [r2]
   1b6cc:	sub	r3, r3, r2
   1b6d0:	ldr	r2, [fp]
   1b6d4:	sub	r3, r3, r2
   1b6d8:	ldr	r2, [sp, #256]	; 0x100
   1b6dc:	mov	r1, r6
   1b6e0:	mov	r0, r4
   1b6e4:	bl	2468 <InflateSkipData>
   1b6e8:	ldr	r3, [sp, #264]	; 0x108
   1b6ec:	ldr	r3, [r3]
   1b6f0:	ldr	r2, [fp]
   1b6f4:	sub	r3, r3, r2
   1b6f8:	add	r5, r3, r5
   1b6fc:	cmp	sl, #1
   1b700:	ble	1b660 <ReadCompressedDataSlabN+0x15ac>
   1b704:	ldr	r3, [sp, #140]	; 0x8c
   1b708:	add	r3, r3, #1
   1b70c:	str	r3, [sp, #140]	; 0x8c
   1b710:	ldr	r2, [sp, #276]	; 0x114
   1b714:	ldr	r1, [r2, #4]
   1b718:	sdiv	r2, r3, r1
   1b71c:	mls	r3, r1, r2, r3
   1b720:	cmp	r3, #0
   1b724:	bne	1b648 <ReadCompressedDataSlabN+0x1594>
   1b728:	add	r7, sp, #140	; 0x8c
   1b72c:	ldr	r3, [sp, #276]	; 0x114
   1b730:	add	r9, r3, #4
   1b734:	add	r8, sp, #100	; 0x64
   1b738:	ldr	r4, [sp, #36]	; 0x24
   1b73c:	b	1b5fc <ReadCompressedDataSlabN+0x1548>
   1b740:	add	r5, r5, r3
   1b744:	ldr	r2, [sp, #256]	; 0x100
   1b748:	ldr	r1, [sp, #20]
   1b74c:	ldr	r0, [sp, #12]
   1b750:	bl	2468 <InflateSkipData>
   1b754:	b	1b660 <ReadCompressedDataSlabN+0x15ac>
   1b758:	ldr	r2, [sp, #256]	; 0x100
   1b75c:	ldr	r1, [sp, #20]
   1b760:	ldr	r0, [sp, #12]
   1b764:	bl	2468 <InflateSkipData>
   1b768:	ldr	r3, [fp]
   1b76c:	add	r5, r5, r3
   1b770:	b	1b890 <ReadCompressedDataSlabN+0x17dc>
   1b774:	mov	r6, #0
   1b778:	b	1b908 <ReadCompressedDataSlabN+0x1854>
   1b77c:	sub	r4, r4, r3
   1b780:	ldr	sl, [r9, #-8]
   1b784:	ldr	r3, [fp, r6, lsl #2]
   1b788:	mla	r3, r3, sl, r4
   1b78c:	ldr	r2, [sp, #256]	; 0x100
   1b790:	ldr	r1, [sp, #20]
   1b794:	ldr	r0, [sp, #12]
   1b798:	bl	2468 <InflateSkipData>
   1b79c:	ldr	r3, [fp, r6, lsl #2]
   1b7a0:	mla	r4, r3, sl, r4
   1b7a4:	add	r5, r5, r4
   1b7a8:	add	r6, r6, #1
   1b7ac:	ldr	r3, [sp, #260]	; 0x104
   1b7b0:	cmp	r3, r6
   1b7b4:	beq	1b860 <ReadCompressedDataSlabN+0x17ac>
   1b7b8:	ldr	r3, [r8]
   1b7bc:	add	r3, r3, #1
   1b7c0:	str	r3, [r8]
   1b7c4:	ldr	r1, [r7, #4]!
   1b7c8:	sdiv	r2, r3, r1
   1b7cc:	mls	r3, r1, r2, r3
   1b7d0:	cmp	r3, #0
   1b7d4:	bne	1b82c <ReadCompressedDataSlabN+0x1778>
   1b7d8:	mov	r3, #0
   1b7dc:	str	r3, [r8], #4
   1b7e0:	ldr	r4, [r9], #4
   1b7e4:	sdiv	r3, r5, r4
   1b7e8:	mls	r3, r4, r3, r5
   1b7ec:	cmp	r3, #0
   1b7f0:	bne	1b77c <ReadCompressedDataSlabN+0x16c8>
   1b7f4:	ldr	r3, [fp, r6, lsl #2]
   1b7f8:	cmp	r3, #0
   1b7fc:	beq	1b7a8 <ReadCompressedDataSlabN+0x16f4>
   1b800:	ldr	r4, [r9, #-8]
   1b804:	mul	r3, r4, r3
   1b808:	ldr	r2, [sp, #256]	; 0x100
   1b80c:	ldr	r1, [sp, #20]
   1b810:	ldr	r0, [sp, #12]
   1b814:	bl	2468 <InflateSkipData>
   1b818:	ldr	r3, [fp, r6, lsl #2]
   1b81c:	mla	r5, r3, r4, r5
   1b820:	b	1b7a8 <ReadCompressedDataSlabN+0x16f4>
   1b824:	mov	r6, #1
   1b828:	b	1b834 <ReadCompressedDataSlabN+0x1780>
   1b82c:	ldr	r4, [sp, #272]	; 0x110
   1b830:	ldr	sl, [sp, #276]	; 0x114
   1b834:	add	r3, sp, #216	; 0xd8
   1b838:	add	r6, r3, r6, lsl #2
   1b83c:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1b840:	cmp	r3, #0
   1b844:	beq	1b868 <ReadCompressedDataSlabN+0x17b4>
   1b848:	add	r5, r5, r3
   1b84c:	ldr	r2, [sp, #256]	; 0x100
   1b850:	ldr	r1, [sp, #20]
   1b854:	ldr	r0, [sp, #12]
   1b858:	bl	2468 <InflateSkipData>
   1b85c:	b	1b868 <ReadCompressedDataSlabN+0x17b4>
   1b860:	ldr	r4, [sp, #272]	; 0x110
   1b864:	ldr	sl, [sp, #276]	; 0x114
   1b868:	ldr	r3, [sl]
   1b86c:	ldr	r2, [sp, #28]
   1b870:	add	r3, r2, r3
   1b874:	str	r3, [sp, #28]
   1b878:	ldr	r2, [sp, #24]
   1b87c:	cmp	r3, r2
   1b880:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1b884:	ldr	r3, [fp]
   1b888:	cmp	r3, #0
   1b88c:	bne	1b758 <ReadCompressedDataSlabN+0x16a4>
   1b890:	ldr	r3, [sl]
   1b894:	cmp	r3, #1
   1b898:	ble	1b774 <ReadCompressedDataSlabN+0x16c0>
   1b89c:	ldr	r3, [sp, #16]
   1b8a0:	ldr	r2, [sp, #28]
   1b8a4:	add	r7, r3, r2, lsl #2
   1b8a8:	mov	r6, #0
   1b8ac:	mov	r3, #1
   1b8b0:	str	r3, [sp]
   1b8b4:	ldr	r3, [sp, #256]	; 0x100
   1b8b8:	mov	r2, r7
   1b8bc:	ldr	r9, [sp, #20]
   1b8c0:	mov	r1, r9
   1b8c4:	ldr	r8, [sp, #12]
   1b8c8:	mov	r0, r8
   1b8cc:	bl	d19c <ReadCompressedInt32Data>
   1b8d0:	ldr	r3, [r4]
   1b8d4:	sub	r3, r3, #1
   1b8d8:	ldr	r2, [sp, #256]	; 0x100
   1b8dc:	mov	r1, r9
   1b8e0:	mov	r0, r8
   1b8e4:	bl	2468 <InflateSkipData>
   1b8e8:	ldr	r3, [r4]
   1b8ec:	add	r5, r5, r3
   1b8f0:	add	r6, r6, #1
   1b8f4:	add	r7, r7, #4
   1b8f8:	ldr	r3, [sl]
   1b8fc:	sub	r3, r3, #1
   1b900:	cmp	r3, r6
   1b904:	bgt	1b8ac <ReadCompressedDataSlabN+0x17f8>
   1b908:	ldr	r3, [sp, #28]
   1b90c:	add	r2, r3, r6
   1b910:	mov	r3, #1
   1b914:	str	r3, [sp]
   1b918:	ldr	r3, [sp, #256]	; 0x100
   1b91c:	ldr	r1, [sp, #16]
   1b920:	add	r2, r1, r2, lsl #2
   1b924:	ldr	r7, [sp, #20]
   1b928:	mov	r1, r7
   1b92c:	ldr	r6, [sp, #12]
   1b930:	mov	r0, r6
   1b934:	bl	d19c <ReadCompressedInt32Data>
   1b938:	ldr	r3, [sl]
   1b93c:	sub	r3, r3, #1
   1b940:	ldr	r1, [r4]
   1b944:	ldr	r2, [fp]
   1b948:	mla	r3, r1, r3, r2
   1b94c:	ldr	r2, [sp, #264]	; 0x108
   1b950:	ldr	r2, [r2]
   1b954:	sub	r3, r2, r3
   1b958:	add	r5, r5, r3
   1b95c:	sub	r3, r3, #1
   1b960:	ldr	r2, [sp, #256]	; 0x100
   1b964:	mov	r1, r7
   1b968:	mov	r0, r6
   1b96c:	bl	2468 <InflateSkipData>
   1b970:	ldr	r3, [sp, #260]	; 0x104
   1b974:	cmp	r3, #1
   1b978:	ble	1b868 <ReadCompressedDataSlabN+0x17b4>
   1b97c:	ldr	r3, [sp, #140]	; 0x8c
   1b980:	add	r3, r3, #1
   1b984:	str	r3, [sp, #140]	; 0x8c
   1b988:	ldr	r1, [sl, #4]
   1b98c:	sdiv	r2, r3, r1
   1b990:	mls	r3, r1, r2, r3
   1b994:	cmp	r3, #0
   1b998:	bne	1b824 <ReadCompressedDataSlabN+0x1770>
   1b99c:	add	r8, sp, #140	; 0x8c
   1b9a0:	add	r7, sl, #4
   1b9a4:	add	r9, sp, #100	; 0x64
   1b9a8:	mov	r6, #1
   1b9ac:	str	r4, [sp, #272]	; 0x110
   1b9b0:	str	sl, [sp, #276]	; 0x114
   1b9b4:	b	1b7d8 <ReadCompressedDataSlabN+0x1724>
   1b9b8:	ldr	r3, [r4]
   1b9bc:	sub	r3, r3, #1
   1b9c0:	str	r3, [sp, #176]	; 0xb0
   1b9c4:	ldr	r3, [sp, #264]	; 0x108
   1b9c8:	ldr	r3, [r3]
   1b9cc:	str	r3, [sp, #96]	; 0x60
   1b9d0:	ldr	r3, [sl]
   1b9d4:	str	r3, [sp, #24]
   1b9d8:	ldr	r3, [sp, #260]	; 0x104
   1b9dc:	cmp	r3, #1
   1b9e0:	ble	1ba0c <ReadCompressedDataSlabN+0x1958>
   1b9e4:	mov	r3, r4
   1b9e8:	add	r8, sp, #180	; 0xb4
   1b9ec:	ldr	lr, [sp, #264]	; 0x108
   1b9f0:	add	r7, sp, #96	; 0x60
   1b9f4:	mov	r6, #1
   1b9f8:	mov	r5, #0
   1b9fc:	str	r4, [sp, #272]	; 0x110
   1ba00:	mov	r4, lr
   1ba04:	mov	r9, r3
   1ba08:	b	1d84c <ReadCompressedDataSlabN+0x3798>
   1ba0c:	mov	r5, #0
   1ba10:	b	1d8dc <ReadCompressedDataSlabN+0x3828>
   1ba14:	ldr	r3, [sp, #24]
   1ba18:	cmp	r3, #0
   1ba1c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1ba20:	mov	r3, #0
   1ba24:	str	r3, [sp, #32]
   1ba28:	add	r3, sp, #40	; 0x28
   1ba2c:	str	r3, [sp, #20]
   1ba30:	str	sl, [sp, #276]	; 0x114
   1ba34:	ldr	sl, [sp, #260]	; 0x104
   1ba38:	b	1bb40 <ReadCompressedDataSlabN+0x1a8c>
   1ba3c:	ldr	r2, [sp, #256]	; 0x100
   1ba40:	ldr	r1, [sp, #20]
   1ba44:	ldr	r0, [sp, #12]
   1ba48:	bl	2468 <InflateSkipData>
   1ba4c:	ldr	r3, [fp]
   1ba50:	add	r5, r5, r3
   1ba54:	b	1bb4c <ReadCompressedDataSlabN+0x1a98>
   1ba58:	sub	r6, r6, r3
   1ba5c:	ldr	r3, [r8, #-8]
   1ba60:	mov	r2, r3
   1ba64:	ldr	r3, [fp, r4, lsl #2]
   1ba68:	str	r2, [sp, #28]
   1ba6c:	mla	r3, r3, r2, r6
   1ba70:	ldr	r2, [sp, #256]	; 0x100
   1ba74:	ldr	r1, [sp, #20]
   1ba78:	ldr	r0, [sp, #12]
   1ba7c:	bl	2468 <InflateSkipData>
   1ba80:	ldr	r3, [fp, r4, lsl #2]
   1ba84:	ldr	r2, [sp, #28]
   1ba88:	mla	r6, r3, r2, r6
   1ba8c:	add	r5, r5, r6
   1ba90:	add	r4, r4, #1
   1ba94:	cmp	sl, r4
   1ba98:	beq	1bb20 <ReadCompressedDataSlabN+0x1a6c>
   1ba9c:	ldr	r3, [r7]
   1baa0:	add	r3, r3, #1
   1baa4:	str	r3, [r7]
   1baa8:	ldr	r1, [r9, #4]!
   1baac:	sdiv	r2, r3, r1
   1bab0:	mls	r3, r1, r2, r3
   1bab4:	cmp	r3, #0
   1bab8:	bne	1bb0c <ReadCompressedDataSlabN+0x1a58>
   1babc:	mov	r3, #0
   1bac0:	str	r3, [r7], #4
   1bac4:	ldr	r6, [r8], #4
   1bac8:	sdiv	r3, r5, r6
   1bacc:	mls	r3, r6, r3, r5
   1bad0:	cmp	r3, #0
   1bad4:	bne	1ba58 <ReadCompressedDataSlabN+0x19a4>
   1bad8:	ldr	r3, [fp, r4, lsl #2]
   1badc:	cmp	r3, #0
   1bae0:	beq	1ba90 <ReadCompressedDataSlabN+0x19dc>
   1bae4:	ldr	r6, [r8, #-8]
   1bae8:	mul	r3, r6, r3
   1baec:	ldr	r2, [sp, #256]	; 0x100
   1baf0:	ldr	r1, [sp, #20]
   1baf4:	ldr	r0, [sp, #12]
   1baf8:	bl	2468 <InflateSkipData>
   1bafc:	ldr	r3, [fp, r4, lsl #2]
   1bb00:	mla	r5, r3, r6, r5
   1bb04:	b	1ba90 <ReadCompressedDataSlabN+0x19dc>
   1bb08:	ldr	r4, [sp, #36]	; 0x24
   1bb0c:	add	r3, sp, #216	; 0xd8
   1bb10:	add	r4, r3, r4, lsl #2
   1bb14:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1bb18:	cmp	r3, #0
   1bb1c:	bne	1bc00 <ReadCompressedDataSlabN+0x1b4c>
   1bb20:	ldr	r3, [sp, #276]	; 0x114
   1bb24:	ldr	r3, [r3]
   1bb28:	ldr	r2, [sp, #32]
   1bb2c:	add	r3, r2, r3
   1bb30:	str	r3, [sp, #32]
   1bb34:	ldr	r2, [sp, #24]
   1bb38:	cmp	r3, r2
   1bb3c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1bb40:	ldr	r3, [fp]
   1bb44:	cmp	r3, #0
   1bb48:	bne	1ba3c <ReadCompressedDataSlabN+0x1988>
   1bb4c:	ldr	r3, [sp, #276]	; 0x114
   1bb50:	ldr	r3, [r3]
   1bb54:	str	r3, [sp]
   1bb58:	ldr	r3, [sp, #256]	; 0x100
   1bb5c:	ldr	r2, [sp, #16]
   1bb60:	ldr	r1, [sp, #32]
   1bb64:	add	r2, r2, r1, lsl #2
   1bb68:	ldr	r6, [sp, #20]
   1bb6c:	mov	r1, r6
   1bb70:	ldr	r4, [sp, #12]
   1bb74:	mov	r0, r4
   1bb78:	bl	edd8 <ReadCompressedUInt32Data>
   1bb7c:	ldr	r3, [sp, #264]	; 0x108
   1bb80:	ldr	r3, [r3]
   1bb84:	ldr	r2, [sp, #276]	; 0x114
   1bb88:	ldr	r2, [r2]
   1bb8c:	sub	r3, r3, r2
   1bb90:	ldr	r2, [fp]
   1bb94:	sub	r3, r3, r2
   1bb98:	ldr	r2, [sp, #256]	; 0x100
   1bb9c:	mov	r1, r6
   1bba0:	mov	r0, r4
   1bba4:	bl	2468 <InflateSkipData>
   1bba8:	ldr	r3, [sp, #264]	; 0x108
   1bbac:	ldr	r3, [r3]
   1bbb0:	ldr	r2, [fp]
   1bbb4:	sub	r3, r3, r2
   1bbb8:	add	r5, r3, r5
   1bbbc:	cmp	sl, #1
   1bbc0:	ble	1bb20 <ReadCompressedDataSlabN+0x1a6c>
   1bbc4:	ldr	r3, [sp, #140]	; 0x8c
   1bbc8:	add	r3, r3, #1
   1bbcc:	str	r3, [sp, #140]	; 0x8c
   1bbd0:	ldr	r2, [sp, #276]	; 0x114
   1bbd4:	ldr	r1, [r2, #4]
   1bbd8:	sdiv	r2, r3, r1
   1bbdc:	mls	r3, r1, r2, r3
   1bbe0:	cmp	r3, #0
   1bbe4:	bne	1bb08 <ReadCompressedDataSlabN+0x1a54>
   1bbe8:	add	r7, sp, #140	; 0x8c
   1bbec:	ldr	r3, [sp, #276]	; 0x114
   1bbf0:	add	r9, r3, #4
   1bbf4:	add	r8, sp, #100	; 0x64
   1bbf8:	ldr	r4, [sp, #36]	; 0x24
   1bbfc:	b	1babc <ReadCompressedDataSlabN+0x1a08>
   1bc00:	add	r5, r5, r3
   1bc04:	ldr	r2, [sp, #256]	; 0x100
   1bc08:	ldr	r1, [sp, #20]
   1bc0c:	ldr	r0, [sp, #12]
   1bc10:	bl	2468 <InflateSkipData>
   1bc14:	b	1bb20 <ReadCompressedDataSlabN+0x1a6c>
   1bc18:	ldr	r2, [sp, #256]	; 0x100
   1bc1c:	ldr	r1, [sp, #20]
   1bc20:	ldr	r0, [sp, #12]
   1bc24:	bl	2468 <InflateSkipData>
   1bc28:	ldr	r3, [fp]
   1bc2c:	add	r5, r5, r3
   1bc30:	b	1bd50 <ReadCompressedDataSlabN+0x1c9c>
   1bc34:	mov	r6, #0
   1bc38:	b	1bdc8 <ReadCompressedDataSlabN+0x1d14>
   1bc3c:	sub	r4, r4, r3
   1bc40:	ldr	sl, [r9, #-8]
   1bc44:	ldr	r3, [fp, r6, lsl #2]
   1bc48:	mla	r3, r3, sl, r4
   1bc4c:	ldr	r2, [sp, #256]	; 0x100
   1bc50:	ldr	r1, [sp, #20]
   1bc54:	ldr	r0, [sp, #12]
   1bc58:	bl	2468 <InflateSkipData>
   1bc5c:	ldr	r3, [fp, r6, lsl #2]
   1bc60:	mla	r4, r3, sl, r4
   1bc64:	add	r5, r5, r4
   1bc68:	add	r6, r6, #1
   1bc6c:	ldr	r3, [sp, #260]	; 0x104
   1bc70:	cmp	r3, r6
   1bc74:	beq	1bd20 <ReadCompressedDataSlabN+0x1c6c>
   1bc78:	ldr	r3, [r8]
   1bc7c:	add	r3, r3, #1
   1bc80:	str	r3, [r8]
   1bc84:	ldr	r1, [r7, #4]!
   1bc88:	sdiv	r2, r3, r1
   1bc8c:	mls	r3, r1, r2, r3
   1bc90:	cmp	r3, #0
   1bc94:	bne	1bcec <ReadCompressedDataSlabN+0x1c38>
   1bc98:	mov	r3, #0
   1bc9c:	str	r3, [r8], #4
   1bca0:	ldr	r4, [r9], #4
   1bca4:	sdiv	r3, r5, r4
   1bca8:	mls	r3, r4, r3, r5
   1bcac:	cmp	r3, #0
   1bcb0:	bne	1bc3c <ReadCompressedDataSlabN+0x1b88>
   1bcb4:	ldr	r3, [fp, r6, lsl #2]
   1bcb8:	cmp	r3, #0
   1bcbc:	beq	1bc68 <ReadCompressedDataSlabN+0x1bb4>
   1bcc0:	ldr	r4, [r9, #-8]
   1bcc4:	mul	r3, r4, r3
   1bcc8:	ldr	r2, [sp, #256]	; 0x100
   1bccc:	ldr	r1, [sp, #20]
   1bcd0:	ldr	r0, [sp, #12]
   1bcd4:	bl	2468 <InflateSkipData>
   1bcd8:	ldr	r3, [fp, r6, lsl #2]
   1bcdc:	mla	r5, r3, r4, r5
   1bce0:	b	1bc68 <ReadCompressedDataSlabN+0x1bb4>
   1bce4:	mov	r6, #1
   1bce8:	b	1bcf4 <ReadCompressedDataSlabN+0x1c40>
   1bcec:	ldr	r4, [sp, #272]	; 0x110
   1bcf0:	ldr	sl, [sp, #276]	; 0x114
   1bcf4:	add	r3, sp, #216	; 0xd8
   1bcf8:	add	r6, r3, r6, lsl #2
   1bcfc:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1bd00:	cmp	r3, #0
   1bd04:	beq	1bd28 <ReadCompressedDataSlabN+0x1c74>
   1bd08:	add	r5, r5, r3
   1bd0c:	ldr	r2, [sp, #256]	; 0x100
   1bd10:	ldr	r1, [sp, #20]
   1bd14:	ldr	r0, [sp, #12]
   1bd18:	bl	2468 <InflateSkipData>
   1bd1c:	b	1bd28 <ReadCompressedDataSlabN+0x1c74>
   1bd20:	ldr	r4, [sp, #272]	; 0x110
   1bd24:	ldr	sl, [sp, #276]	; 0x114
   1bd28:	ldr	r3, [sl]
   1bd2c:	ldr	r2, [sp, #28]
   1bd30:	add	r3, r2, r3
   1bd34:	str	r3, [sp, #28]
   1bd38:	ldr	r2, [sp, #24]
   1bd3c:	cmp	r3, r2
   1bd40:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1bd44:	ldr	r3, [fp]
   1bd48:	cmp	r3, #0
   1bd4c:	bne	1bc18 <ReadCompressedDataSlabN+0x1b64>
   1bd50:	ldr	r3, [sl]
   1bd54:	cmp	r3, #1
   1bd58:	ble	1bc34 <ReadCompressedDataSlabN+0x1b80>
   1bd5c:	ldr	r3, [sp, #16]
   1bd60:	ldr	r2, [sp, #28]
   1bd64:	add	r7, r3, r2, lsl #2
   1bd68:	mov	r6, #0
   1bd6c:	mov	r3, #1
   1bd70:	str	r3, [sp]
   1bd74:	ldr	r3, [sp, #256]	; 0x100
   1bd78:	mov	r2, r7
   1bd7c:	ldr	r9, [sp, #20]
   1bd80:	mov	r1, r9
   1bd84:	ldr	r8, [sp, #12]
   1bd88:	mov	r0, r8
   1bd8c:	bl	edd8 <ReadCompressedUInt32Data>
   1bd90:	ldr	r3, [r4]
   1bd94:	sub	r3, r3, #1
   1bd98:	ldr	r2, [sp, #256]	; 0x100
   1bd9c:	mov	r1, r9
   1bda0:	mov	r0, r8
   1bda4:	bl	2468 <InflateSkipData>
   1bda8:	ldr	r3, [r4]
   1bdac:	add	r5, r5, r3
   1bdb0:	add	r6, r6, #1
   1bdb4:	add	r7, r7, #4
   1bdb8:	ldr	r3, [sl]
   1bdbc:	sub	r3, r3, #1
   1bdc0:	cmp	r3, r6
   1bdc4:	bgt	1bd6c <ReadCompressedDataSlabN+0x1cb8>
   1bdc8:	ldr	r3, [sp, #28]
   1bdcc:	add	r2, r3, r6
   1bdd0:	mov	r3, #1
   1bdd4:	str	r3, [sp]
   1bdd8:	ldr	r3, [sp, #256]	; 0x100
   1bddc:	ldr	r1, [sp, #16]
   1bde0:	add	r2, r1, r2, lsl #2
   1bde4:	ldr	r7, [sp, #20]
   1bde8:	mov	r1, r7
   1bdec:	ldr	r6, [sp, #12]
   1bdf0:	mov	r0, r6
   1bdf4:	bl	edd8 <ReadCompressedUInt32Data>
   1bdf8:	ldr	r3, [sl]
   1bdfc:	sub	r3, r3, #1
   1be00:	ldr	r1, [r4]
   1be04:	ldr	r2, [fp]
   1be08:	mla	r3, r1, r3, r2
   1be0c:	ldr	r2, [sp, #264]	; 0x108
   1be10:	ldr	r2, [r2]
   1be14:	sub	r3, r2, r3
   1be18:	add	r5, r5, r3
   1be1c:	sub	r3, r3, #1
   1be20:	ldr	r2, [sp, #256]	; 0x100
   1be24:	mov	r1, r7
   1be28:	mov	r0, r6
   1be2c:	bl	2468 <InflateSkipData>
   1be30:	ldr	r3, [sp, #260]	; 0x104
   1be34:	cmp	r3, #1
   1be38:	ble	1bd28 <ReadCompressedDataSlabN+0x1c74>
   1be3c:	ldr	r3, [sp, #140]	; 0x8c
   1be40:	add	r3, r3, #1
   1be44:	str	r3, [sp, #140]	; 0x8c
   1be48:	ldr	r1, [sl, #4]
   1be4c:	sdiv	r2, r3, r1
   1be50:	mls	r3, r1, r2, r3
   1be54:	cmp	r3, #0
   1be58:	bne	1bce4 <ReadCompressedDataSlabN+0x1c30>
   1be5c:	add	r8, sp, #140	; 0x8c
   1be60:	add	r7, sl, #4
   1be64:	add	r9, sp, #100	; 0x64
   1be68:	mov	r6, #1
   1be6c:	str	r4, [sp, #272]	; 0x110
   1be70:	str	sl, [sp, #276]	; 0x114
   1be74:	b	1bc98 <ReadCompressedDataSlabN+0x1be4>
   1be78:	ldr	r3, [r4]
   1be7c:	sub	r3, r3, #1
   1be80:	str	r3, [sp, #176]	; 0xb0
   1be84:	ldr	r3, [sp, #264]	; 0x108
   1be88:	ldr	r3, [r3]
   1be8c:	str	r3, [sp, #96]	; 0x60
   1be90:	ldr	r3, [sl]
   1be94:	str	r3, [sp, #24]
   1be98:	ldr	r3, [sp, #260]	; 0x104
   1be9c:	cmp	r3, #1
   1bea0:	ble	1becc <ReadCompressedDataSlabN+0x1e18>
   1bea4:	mov	r3, r4
   1bea8:	add	r8, sp, #180	; 0xb4
   1beac:	ldr	lr, [sp, #264]	; 0x108
   1beb0:	add	r7, sp, #96	; 0x60
   1beb4:	mov	r6, #1
   1beb8:	mov	r5, #0
   1bebc:	str	r4, [sp, #272]	; 0x110
   1bec0:	mov	r4, lr
   1bec4:	mov	r9, r3
   1bec8:	b	1d570 <ReadCompressedDataSlabN+0x34bc>
   1becc:	mov	r5, #0
   1bed0:	b	1d600 <ReadCompressedDataSlabN+0x354c>
   1bed4:	ldr	r3, [sp, #24]
   1bed8:	cmp	r3, #0
   1bedc:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1bee0:	mov	r3, #0
   1bee4:	str	r3, [sp, #32]
   1bee8:	add	r3, sp, #40	; 0x28
   1beec:	str	r3, [sp, #20]
   1bef0:	str	sl, [sp, #276]	; 0x114
   1bef4:	ldr	sl, [sp, #260]	; 0x104
   1bef8:	b	1c000 <ReadCompressedDataSlabN+0x1f4c>
   1befc:	ldr	r2, [sp, #256]	; 0x100
   1bf00:	ldr	r1, [sp, #20]
   1bf04:	ldr	r0, [sp, #12]
   1bf08:	bl	2468 <InflateSkipData>
   1bf0c:	ldr	r3, [fp]
   1bf10:	add	r5, r5, r3
   1bf14:	b	1c00c <ReadCompressedDataSlabN+0x1f58>
   1bf18:	sub	r6, r6, r3
   1bf1c:	ldr	r3, [r8, #-8]
   1bf20:	mov	r2, r3
   1bf24:	ldr	r3, [fp, r4, lsl #2]
   1bf28:	str	r2, [sp, #28]
   1bf2c:	mla	r3, r3, r2, r6
   1bf30:	ldr	r2, [sp, #256]	; 0x100
   1bf34:	ldr	r1, [sp, #20]
   1bf38:	ldr	r0, [sp, #12]
   1bf3c:	bl	2468 <InflateSkipData>
   1bf40:	ldr	r3, [fp, r4, lsl #2]
   1bf44:	ldr	r2, [sp, #28]
   1bf48:	mla	r6, r3, r2, r6
   1bf4c:	add	r5, r5, r6
   1bf50:	add	r4, r4, #1
   1bf54:	cmp	sl, r4
   1bf58:	beq	1bfe0 <ReadCompressedDataSlabN+0x1f2c>
   1bf5c:	ldr	r3, [r7]
   1bf60:	add	r3, r3, #1
   1bf64:	str	r3, [r7]
   1bf68:	ldr	r1, [r9, #4]!
   1bf6c:	sdiv	r2, r3, r1
   1bf70:	mls	r3, r1, r2, r3
   1bf74:	cmp	r3, #0
   1bf78:	bne	1bfcc <ReadCompressedDataSlabN+0x1f18>
   1bf7c:	mov	r3, #0
   1bf80:	str	r3, [r7], #4
   1bf84:	ldr	r6, [r8], #4
   1bf88:	sdiv	r3, r5, r6
   1bf8c:	mls	r3, r6, r3, r5
   1bf90:	cmp	r3, #0
   1bf94:	bne	1bf18 <ReadCompressedDataSlabN+0x1e64>
   1bf98:	ldr	r3, [fp, r4, lsl #2]
   1bf9c:	cmp	r3, #0
   1bfa0:	beq	1bf50 <ReadCompressedDataSlabN+0x1e9c>
   1bfa4:	ldr	r6, [r8, #-8]
   1bfa8:	mul	r3, r6, r3
   1bfac:	ldr	r2, [sp, #256]	; 0x100
   1bfb0:	ldr	r1, [sp, #20]
   1bfb4:	ldr	r0, [sp, #12]
   1bfb8:	bl	2468 <InflateSkipData>
   1bfbc:	ldr	r3, [fp, r4, lsl #2]
   1bfc0:	mla	r5, r3, r6, r5
   1bfc4:	b	1bf50 <ReadCompressedDataSlabN+0x1e9c>
   1bfc8:	ldr	r4, [sp, #36]	; 0x24
   1bfcc:	add	r3, sp, #216	; 0xd8
   1bfd0:	add	r4, r3, r4, lsl #2
   1bfd4:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1bfd8:	cmp	r3, #0
   1bfdc:	bne	1c0c0 <ReadCompressedDataSlabN+0x200c>
   1bfe0:	ldr	r3, [sp, #276]	; 0x114
   1bfe4:	ldr	r3, [r3]
   1bfe8:	ldr	r2, [sp, #32]
   1bfec:	add	r3, r2, r3
   1bff0:	str	r3, [sp, #32]
   1bff4:	ldr	r2, [sp, #24]
   1bff8:	cmp	r3, r2
   1bffc:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c000:	ldr	r3, [fp]
   1c004:	cmp	r3, #0
   1c008:	bne	1befc <ReadCompressedDataSlabN+0x1e48>
   1c00c:	ldr	r3, [sp, #276]	; 0x114
   1c010:	ldr	r3, [r3]
   1c014:	str	r3, [sp]
   1c018:	ldr	r3, [sp, #256]	; 0x100
   1c01c:	ldr	r2, [sp, #16]
   1c020:	ldr	r1, [sp, #32]
   1c024:	add	r2, r2, r1, lsl #1
   1c028:	ldr	r6, [sp, #20]
   1c02c:	mov	r1, r6
   1c030:	ldr	r4, [sp, #12]
   1c034:	mov	r0, r4
   1c038:	bl	10a34 <ReadCompressedInt16Data>
   1c03c:	ldr	r3, [sp, #264]	; 0x108
   1c040:	ldr	r3, [r3]
   1c044:	ldr	r2, [sp, #276]	; 0x114
   1c048:	ldr	r2, [r2]
   1c04c:	sub	r3, r3, r2
   1c050:	ldr	r2, [fp]
   1c054:	sub	r3, r3, r2
   1c058:	ldr	r2, [sp, #256]	; 0x100
   1c05c:	mov	r1, r6
   1c060:	mov	r0, r4
   1c064:	bl	2468 <InflateSkipData>
   1c068:	ldr	r3, [sp, #264]	; 0x108
   1c06c:	ldr	r3, [r3]
   1c070:	ldr	r2, [fp]
   1c074:	sub	r3, r3, r2
   1c078:	add	r5, r3, r5
   1c07c:	cmp	sl, #1
   1c080:	ble	1bfe0 <ReadCompressedDataSlabN+0x1f2c>
   1c084:	ldr	r3, [sp, #140]	; 0x8c
   1c088:	add	r3, r3, #1
   1c08c:	str	r3, [sp, #140]	; 0x8c
   1c090:	ldr	r2, [sp, #276]	; 0x114
   1c094:	ldr	r1, [r2, #4]
   1c098:	sdiv	r2, r3, r1
   1c09c:	mls	r3, r1, r2, r3
   1c0a0:	cmp	r3, #0
   1c0a4:	bne	1bfc8 <ReadCompressedDataSlabN+0x1f14>
   1c0a8:	add	r7, sp, #140	; 0x8c
   1c0ac:	ldr	r3, [sp, #276]	; 0x114
   1c0b0:	add	r9, r3, #4
   1c0b4:	add	r8, sp, #100	; 0x64
   1c0b8:	ldr	r4, [sp, #36]	; 0x24
   1c0bc:	b	1bf7c <ReadCompressedDataSlabN+0x1ec8>
   1c0c0:	add	r5, r5, r3
   1c0c4:	ldr	r2, [sp, #256]	; 0x100
   1c0c8:	ldr	r1, [sp, #20]
   1c0cc:	ldr	r0, [sp, #12]
   1c0d0:	bl	2468 <InflateSkipData>
   1c0d4:	b	1bfe0 <ReadCompressedDataSlabN+0x1f2c>
   1c0d8:	ldr	r2, [sp, #256]	; 0x100
   1c0dc:	ldr	r1, [sp, #20]
   1c0e0:	ldr	r0, [sp, #12]
   1c0e4:	bl	2468 <InflateSkipData>
   1c0e8:	ldr	r3, [fp]
   1c0ec:	add	r5, r5, r3
   1c0f0:	b	1c210 <ReadCompressedDataSlabN+0x215c>
   1c0f4:	mov	r6, #0
   1c0f8:	b	1c288 <ReadCompressedDataSlabN+0x21d4>
   1c0fc:	sub	r4, r4, r3
   1c100:	ldr	sl, [r9, #-8]
   1c104:	ldr	r3, [fp, r6, lsl #2]
   1c108:	mla	r3, r3, sl, r4
   1c10c:	ldr	r2, [sp, #256]	; 0x100
   1c110:	ldr	r1, [sp, #20]
   1c114:	ldr	r0, [sp, #12]
   1c118:	bl	2468 <InflateSkipData>
   1c11c:	ldr	r3, [fp, r6, lsl #2]
   1c120:	mla	r4, r3, sl, r4
   1c124:	add	r5, r5, r4
   1c128:	add	r6, r6, #1
   1c12c:	ldr	r3, [sp, #260]	; 0x104
   1c130:	cmp	r3, r6
   1c134:	beq	1c1e0 <ReadCompressedDataSlabN+0x212c>
   1c138:	ldr	r3, [r8]
   1c13c:	add	r3, r3, #1
   1c140:	str	r3, [r8]
   1c144:	ldr	r1, [r7, #4]!
   1c148:	sdiv	r2, r3, r1
   1c14c:	mls	r3, r1, r2, r3
   1c150:	cmp	r3, #0
   1c154:	bne	1c1ac <ReadCompressedDataSlabN+0x20f8>
   1c158:	mov	r3, #0
   1c15c:	str	r3, [r8], #4
   1c160:	ldr	r4, [r9], #4
   1c164:	sdiv	r3, r5, r4
   1c168:	mls	r3, r4, r3, r5
   1c16c:	cmp	r3, #0
   1c170:	bne	1c0fc <ReadCompressedDataSlabN+0x2048>
   1c174:	ldr	r3, [fp, r6, lsl #2]
   1c178:	cmp	r3, #0
   1c17c:	beq	1c128 <ReadCompressedDataSlabN+0x2074>
   1c180:	ldr	r4, [r9, #-8]
   1c184:	mul	r3, r4, r3
   1c188:	ldr	r2, [sp, #256]	; 0x100
   1c18c:	ldr	r1, [sp, #20]
   1c190:	ldr	r0, [sp, #12]
   1c194:	bl	2468 <InflateSkipData>
   1c198:	ldr	r3, [fp, r6, lsl #2]
   1c19c:	mla	r5, r3, r4, r5
   1c1a0:	b	1c128 <ReadCompressedDataSlabN+0x2074>
   1c1a4:	mov	r6, #1
   1c1a8:	b	1c1b4 <ReadCompressedDataSlabN+0x2100>
   1c1ac:	ldr	r4, [sp, #272]	; 0x110
   1c1b0:	ldr	sl, [sp, #276]	; 0x114
   1c1b4:	add	r3, sp, #216	; 0xd8
   1c1b8:	add	r6, r3, r6, lsl #2
   1c1bc:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1c1c0:	cmp	r3, #0
   1c1c4:	beq	1c1e8 <ReadCompressedDataSlabN+0x2134>
   1c1c8:	add	r5, r5, r3
   1c1cc:	ldr	r2, [sp, #256]	; 0x100
   1c1d0:	ldr	r1, [sp, #20]
   1c1d4:	ldr	r0, [sp, #12]
   1c1d8:	bl	2468 <InflateSkipData>
   1c1dc:	b	1c1e8 <ReadCompressedDataSlabN+0x2134>
   1c1e0:	ldr	r4, [sp, #272]	; 0x110
   1c1e4:	ldr	sl, [sp, #276]	; 0x114
   1c1e8:	ldr	r3, [sl]
   1c1ec:	ldr	r2, [sp, #28]
   1c1f0:	add	r3, r2, r3
   1c1f4:	str	r3, [sp, #28]
   1c1f8:	ldr	r2, [sp, #24]
   1c1fc:	cmp	r3, r2
   1c200:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c204:	ldr	r3, [fp]
   1c208:	cmp	r3, #0
   1c20c:	bne	1c0d8 <ReadCompressedDataSlabN+0x2024>
   1c210:	ldr	r3, [sl]
   1c214:	cmp	r3, #1
   1c218:	ble	1c0f4 <ReadCompressedDataSlabN+0x2040>
   1c21c:	ldr	r3, [sp, #16]
   1c220:	ldr	r2, [sp, #28]
   1c224:	add	r7, r3, r2, lsl #1
   1c228:	mov	r6, #0
   1c22c:	mov	r3, #1
   1c230:	str	r3, [sp]
   1c234:	ldr	r3, [sp, #256]	; 0x100
   1c238:	mov	r2, r7
   1c23c:	ldr	r9, [sp, #20]
   1c240:	mov	r1, r9
   1c244:	ldr	r8, [sp, #12]
   1c248:	mov	r0, r8
   1c24c:	bl	10a34 <ReadCompressedInt16Data>
   1c250:	ldr	r3, [r4]
   1c254:	sub	r3, r3, #1
   1c258:	ldr	r2, [sp, #256]	; 0x100
   1c25c:	mov	r1, r9
   1c260:	mov	r0, r8
   1c264:	bl	2468 <InflateSkipData>
   1c268:	ldr	r3, [r4]
   1c26c:	add	r5, r5, r3
   1c270:	add	r6, r6, #1
   1c274:	add	r7, r7, #2
   1c278:	ldr	r3, [sl]
   1c27c:	sub	r3, r3, #1
   1c280:	cmp	r3, r6
   1c284:	bgt	1c22c <ReadCompressedDataSlabN+0x2178>
   1c288:	ldr	r3, [sp, #28]
   1c28c:	add	r2, r3, r6
   1c290:	mov	r3, #1
   1c294:	str	r3, [sp]
   1c298:	ldr	r3, [sp, #256]	; 0x100
   1c29c:	ldr	r1, [sp, #16]
   1c2a0:	add	r2, r1, r2, lsl #1
   1c2a4:	ldr	r7, [sp, #20]
   1c2a8:	mov	r1, r7
   1c2ac:	ldr	r6, [sp, #12]
   1c2b0:	mov	r0, r6
   1c2b4:	bl	10a34 <ReadCompressedInt16Data>
   1c2b8:	ldr	r3, [sl]
   1c2bc:	sub	r3, r3, #1
   1c2c0:	ldr	r1, [r4]
   1c2c4:	ldr	r2, [fp]
   1c2c8:	mla	r3, r1, r3, r2
   1c2cc:	ldr	r2, [sp, #264]	; 0x108
   1c2d0:	ldr	r2, [r2]
   1c2d4:	sub	r3, r2, r3
   1c2d8:	add	r5, r5, r3
   1c2dc:	sub	r3, r3, #1
   1c2e0:	ldr	r2, [sp, #256]	; 0x100
   1c2e4:	mov	r1, r7
   1c2e8:	mov	r0, r6
   1c2ec:	bl	2468 <InflateSkipData>
   1c2f0:	ldr	r3, [sp, #260]	; 0x104
   1c2f4:	cmp	r3, #1
   1c2f8:	ble	1c1e8 <ReadCompressedDataSlabN+0x2134>
   1c2fc:	ldr	r3, [sp, #140]	; 0x8c
   1c300:	add	r3, r3, #1
   1c304:	str	r3, [sp, #140]	; 0x8c
   1c308:	ldr	r1, [sl, #4]
   1c30c:	sdiv	r2, r3, r1
   1c310:	mls	r3, r1, r2, r3
   1c314:	cmp	r3, #0
   1c318:	bne	1c1a4 <ReadCompressedDataSlabN+0x20f0>
   1c31c:	add	r8, sp, #140	; 0x8c
   1c320:	add	r7, sl, #4
   1c324:	add	r9, sp, #100	; 0x64
   1c328:	mov	r6, #1
   1c32c:	str	r4, [sp, #272]	; 0x110
   1c330:	str	sl, [sp, #276]	; 0x114
   1c334:	b	1c158 <ReadCompressedDataSlabN+0x20a4>
   1c338:	ldr	r3, [r4]
   1c33c:	sub	r3, r3, #1
   1c340:	str	r3, [sp, #176]	; 0xb0
   1c344:	ldr	r3, [sp, #264]	; 0x108
   1c348:	ldr	r3, [r3]
   1c34c:	str	r3, [sp, #96]	; 0x60
   1c350:	ldr	r3, [sl]
   1c354:	str	r3, [sp, #24]
   1c358:	ldr	r3, [sp, #260]	; 0x104
   1c35c:	cmp	r3, #1
   1c360:	ble	1c38c <ReadCompressedDataSlabN+0x22d8>
   1c364:	mov	r3, r4
   1c368:	add	r8, sp, #180	; 0xb4
   1c36c:	ldr	lr, [sp, #264]	; 0x108
   1c370:	add	r7, sp, #96	; 0x60
   1c374:	mov	r6, #1
   1c378:	mov	r5, #0
   1c37c:	str	r4, [sp, #272]	; 0x110
   1c380:	mov	r4, lr
   1c384:	mov	r9, r3
   1c388:	b	1d664 <ReadCompressedDataSlabN+0x35b0>
   1c38c:	mov	r5, #0
   1c390:	b	1d6f4 <ReadCompressedDataSlabN+0x3640>
   1c394:	ldr	r3, [sp, #24]
   1c398:	cmp	r3, #0
   1c39c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c3a0:	mov	r3, #0
   1c3a4:	str	r3, [sp, #32]
   1c3a8:	add	r3, sp, #40	; 0x28
   1c3ac:	str	r3, [sp, #20]
   1c3b0:	str	sl, [sp, #276]	; 0x114
   1c3b4:	ldr	sl, [sp, #260]	; 0x104
   1c3b8:	b	1c4c0 <ReadCompressedDataSlabN+0x240c>
   1c3bc:	ldr	r2, [sp, #256]	; 0x100
   1c3c0:	ldr	r1, [sp, #20]
   1c3c4:	ldr	r0, [sp, #12]
   1c3c8:	bl	2468 <InflateSkipData>
   1c3cc:	ldr	r3, [fp]
   1c3d0:	add	r5, r5, r3
   1c3d4:	b	1c4cc <ReadCompressedDataSlabN+0x2418>
   1c3d8:	sub	r6, r6, r3
   1c3dc:	ldr	r3, [r8, #-8]
   1c3e0:	mov	r2, r3
   1c3e4:	ldr	r3, [fp, r4, lsl #2]
   1c3e8:	str	r2, [sp, #28]
   1c3ec:	mla	r3, r3, r2, r6
   1c3f0:	ldr	r2, [sp, #256]	; 0x100
   1c3f4:	ldr	r1, [sp, #20]
   1c3f8:	ldr	r0, [sp, #12]
   1c3fc:	bl	2468 <InflateSkipData>
   1c400:	ldr	r3, [fp, r4, lsl #2]
   1c404:	ldr	r2, [sp, #28]
   1c408:	mla	r6, r3, r2, r6
   1c40c:	add	r5, r5, r6
   1c410:	add	r4, r4, #1
   1c414:	cmp	sl, r4
   1c418:	beq	1c4a0 <ReadCompressedDataSlabN+0x23ec>
   1c41c:	ldr	r3, [r7]
   1c420:	add	r3, r3, #1
   1c424:	str	r3, [r7]
   1c428:	ldr	r1, [r9, #4]!
   1c42c:	sdiv	r2, r3, r1
   1c430:	mls	r3, r1, r2, r3
   1c434:	cmp	r3, #0
   1c438:	bne	1c48c <ReadCompressedDataSlabN+0x23d8>
   1c43c:	mov	r3, #0
   1c440:	str	r3, [r7], #4
   1c444:	ldr	r6, [r8], #4
   1c448:	sdiv	r3, r5, r6
   1c44c:	mls	r3, r6, r3, r5
   1c450:	cmp	r3, #0
   1c454:	bne	1c3d8 <ReadCompressedDataSlabN+0x2324>
   1c458:	ldr	r3, [fp, r4, lsl #2]
   1c45c:	cmp	r3, #0
   1c460:	beq	1c410 <ReadCompressedDataSlabN+0x235c>
   1c464:	ldr	r6, [r8, #-8]
   1c468:	mul	r3, r6, r3
   1c46c:	ldr	r2, [sp, #256]	; 0x100
   1c470:	ldr	r1, [sp, #20]
   1c474:	ldr	r0, [sp, #12]
   1c478:	bl	2468 <InflateSkipData>
   1c47c:	ldr	r3, [fp, r4, lsl #2]
   1c480:	mla	r5, r3, r6, r5
   1c484:	b	1c410 <ReadCompressedDataSlabN+0x235c>
   1c488:	ldr	r4, [sp, #36]	; 0x24
   1c48c:	add	r3, sp, #216	; 0xd8
   1c490:	add	r4, r3, r4, lsl #2
   1c494:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1c498:	cmp	r3, #0
   1c49c:	bne	1c580 <ReadCompressedDataSlabN+0x24cc>
   1c4a0:	ldr	r3, [sp, #276]	; 0x114
   1c4a4:	ldr	r3, [r3]
   1c4a8:	ldr	r2, [sp, #32]
   1c4ac:	add	r3, r2, r3
   1c4b0:	str	r3, [sp, #32]
   1c4b4:	ldr	r2, [sp, #24]
   1c4b8:	cmp	r3, r2
   1c4bc:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c4c0:	ldr	r3, [fp]
   1c4c4:	cmp	r3, #0
   1c4c8:	bne	1c3bc <ReadCompressedDataSlabN+0x2308>
   1c4cc:	ldr	r3, [sp, #276]	; 0x114
   1c4d0:	ldr	r3, [r3]
   1c4d4:	str	r3, [sp]
   1c4d8:	ldr	r3, [sp, #256]	; 0x100
   1c4dc:	ldr	r2, [sp, #16]
   1c4e0:	ldr	r1, [sp, #32]
   1c4e4:	add	r2, r2, r1, lsl #1
   1c4e8:	ldr	r6, [sp, #20]
   1c4ec:	mov	r1, r6
   1c4f0:	ldr	r4, [sp, #12]
   1c4f4:	mov	r0, r4
   1c4f8:	bl	126a0 <ReadCompressedUInt16Data>
   1c4fc:	ldr	r3, [sp, #264]	; 0x108
   1c500:	ldr	r3, [r3]
   1c504:	ldr	r2, [sp, #276]	; 0x114
   1c508:	ldr	r2, [r2]
   1c50c:	sub	r3, r3, r2
   1c510:	ldr	r2, [fp]
   1c514:	sub	r3, r3, r2
   1c518:	ldr	r2, [sp, #256]	; 0x100
   1c51c:	mov	r1, r6
   1c520:	mov	r0, r4
   1c524:	bl	2468 <InflateSkipData>
   1c528:	ldr	r3, [sp, #264]	; 0x108
   1c52c:	ldr	r3, [r3]
   1c530:	ldr	r2, [fp]
   1c534:	sub	r3, r3, r2
   1c538:	add	r5, r3, r5
   1c53c:	cmp	sl, #1
   1c540:	ble	1c4a0 <ReadCompressedDataSlabN+0x23ec>
   1c544:	ldr	r3, [sp, #140]	; 0x8c
   1c548:	add	r3, r3, #1
   1c54c:	str	r3, [sp, #140]	; 0x8c
   1c550:	ldr	r2, [sp, #276]	; 0x114
   1c554:	ldr	r1, [r2, #4]
   1c558:	sdiv	r2, r3, r1
   1c55c:	mls	r3, r1, r2, r3
   1c560:	cmp	r3, #0
   1c564:	bne	1c488 <ReadCompressedDataSlabN+0x23d4>
   1c568:	add	r7, sp, #140	; 0x8c
   1c56c:	ldr	r3, [sp, #276]	; 0x114
   1c570:	add	r9, r3, #4
   1c574:	add	r8, sp, #100	; 0x64
   1c578:	ldr	r4, [sp, #36]	; 0x24
   1c57c:	b	1c43c <ReadCompressedDataSlabN+0x2388>
   1c580:	add	r5, r5, r3
   1c584:	ldr	r2, [sp, #256]	; 0x100
   1c588:	ldr	r1, [sp, #20]
   1c58c:	ldr	r0, [sp, #12]
   1c590:	bl	2468 <InflateSkipData>
   1c594:	b	1c4a0 <ReadCompressedDataSlabN+0x23ec>
   1c598:	ldr	r2, [sp, #256]	; 0x100
   1c59c:	ldr	r1, [sp, #20]
   1c5a0:	ldr	r0, [sp, #12]
   1c5a4:	bl	2468 <InflateSkipData>
   1c5a8:	ldr	r3, [fp]
   1c5ac:	add	r5, r5, r3
   1c5b0:	b	1c6d0 <ReadCompressedDataSlabN+0x261c>
   1c5b4:	mov	r6, #0
   1c5b8:	b	1c748 <ReadCompressedDataSlabN+0x2694>
   1c5bc:	sub	r4, r4, r3
   1c5c0:	ldr	sl, [r9, #-8]
   1c5c4:	ldr	r3, [fp, r6, lsl #2]
   1c5c8:	mla	r3, r3, sl, r4
   1c5cc:	ldr	r2, [sp, #256]	; 0x100
   1c5d0:	ldr	r1, [sp, #20]
   1c5d4:	ldr	r0, [sp, #12]
   1c5d8:	bl	2468 <InflateSkipData>
   1c5dc:	ldr	r3, [fp, r6, lsl #2]
   1c5e0:	mla	r4, r3, sl, r4
   1c5e4:	add	r5, r5, r4
   1c5e8:	add	r6, r6, #1
   1c5ec:	ldr	r3, [sp, #260]	; 0x104
   1c5f0:	cmp	r3, r6
   1c5f4:	beq	1c6a0 <ReadCompressedDataSlabN+0x25ec>
   1c5f8:	ldr	r3, [r8]
   1c5fc:	add	r3, r3, #1
   1c600:	str	r3, [r8]
   1c604:	ldr	r1, [r7, #4]!
   1c608:	sdiv	r2, r3, r1
   1c60c:	mls	r3, r1, r2, r3
   1c610:	cmp	r3, #0
   1c614:	bne	1c66c <ReadCompressedDataSlabN+0x25b8>
   1c618:	mov	r3, #0
   1c61c:	str	r3, [r8], #4
   1c620:	ldr	r4, [r9], #4
   1c624:	sdiv	r3, r5, r4
   1c628:	mls	r3, r4, r3, r5
   1c62c:	cmp	r3, #0
   1c630:	bne	1c5bc <ReadCompressedDataSlabN+0x2508>
   1c634:	ldr	r3, [fp, r6, lsl #2]
   1c638:	cmp	r3, #0
   1c63c:	beq	1c5e8 <ReadCompressedDataSlabN+0x2534>
   1c640:	ldr	r4, [r9, #-8]
   1c644:	mul	r3, r4, r3
   1c648:	ldr	r2, [sp, #256]	; 0x100
   1c64c:	ldr	r1, [sp, #20]
   1c650:	ldr	r0, [sp, #12]
   1c654:	bl	2468 <InflateSkipData>
   1c658:	ldr	r3, [fp, r6, lsl #2]
   1c65c:	mla	r5, r3, r4, r5
   1c660:	b	1c5e8 <ReadCompressedDataSlabN+0x2534>
   1c664:	mov	r6, #1
   1c668:	b	1c674 <ReadCompressedDataSlabN+0x25c0>
   1c66c:	ldr	r4, [sp, #272]	; 0x110
   1c670:	ldr	sl, [sp, #276]	; 0x114
   1c674:	add	r3, sp, #216	; 0xd8
   1c678:	add	r6, r3, r6, lsl #2
   1c67c:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1c680:	cmp	r3, #0
   1c684:	beq	1c6a8 <ReadCompressedDataSlabN+0x25f4>
   1c688:	add	r5, r5, r3
   1c68c:	ldr	r2, [sp, #256]	; 0x100
   1c690:	ldr	r1, [sp, #20]
   1c694:	ldr	r0, [sp, #12]
   1c698:	bl	2468 <InflateSkipData>
   1c69c:	b	1c6a8 <ReadCompressedDataSlabN+0x25f4>
   1c6a0:	ldr	r4, [sp, #272]	; 0x110
   1c6a4:	ldr	sl, [sp, #276]	; 0x114
   1c6a8:	ldr	r3, [sl]
   1c6ac:	ldr	r2, [sp, #28]
   1c6b0:	add	r3, r2, r3
   1c6b4:	str	r3, [sp, #28]
   1c6b8:	ldr	r2, [sp, #24]
   1c6bc:	cmp	r3, r2
   1c6c0:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c6c4:	ldr	r3, [fp]
   1c6c8:	cmp	r3, #0
   1c6cc:	bne	1c598 <ReadCompressedDataSlabN+0x24e4>
   1c6d0:	ldr	r3, [sl]
   1c6d4:	cmp	r3, #1
   1c6d8:	ble	1c5b4 <ReadCompressedDataSlabN+0x2500>
   1c6dc:	ldr	r3, [sp, #16]
   1c6e0:	ldr	r2, [sp, #28]
   1c6e4:	add	r7, r3, r2, lsl #1
   1c6e8:	mov	r6, #0
   1c6ec:	mov	r3, #1
   1c6f0:	str	r3, [sp]
   1c6f4:	ldr	r3, [sp, #256]	; 0x100
   1c6f8:	mov	r2, r7
   1c6fc:	ldr	r9, [sp, #20]
   1c700:	mov	r1, r9
   1c704:	ldr	r8, [sp, #12]
   1c708:	mov	r0, r8
   1c70c:	bl	126a0 <ReadCompressedUInt16Data>
   1c710:	ldr	r3, [r4]
   1c714:	sub	r3, r3, #1
   1c718:	ldr	r2, [sp, #256]	; 0x100
   1c71c:	mov	r1, r9
   1c720:	mov	r0, r8
   1c724:	bl	2468 <InflateSkipData>
   1c728:	ldr	r3, [r4]
   1c72c:	add	r5, r5, r3
   1c730:	add	r6, r6, #1
   1c734:	add	r7, r7, #2
   1c738:	ldr	r3, [sl]
   1c73c:	sub	r3, r3, #1
   1c740:	cmp	r3, r6
   1c744:	bgt	1c6ec <ReadCompressedDataSlabN+0x2638>
   1c748:	ldr	r3, [sp, #28]
   1c74c:	add	r2, r3, r6
   1c750:	mov	r3, #1
   1c754:	str	r3, [sp]
   1c758:	ldr	r3, [sp, #256]	; 0x100
   1c75c:	ldr	r1, [sp, #16]
   1c760:	add	r2, r1, r2, lsl #1
   1c764:	ldr	r7, [sp, #20]
   1c768:	mov	r1, r7
   1c76c:	ldr	r6, [sp, #12]
   1c770:	mov	r0, r6
   1c774:	bl	126a0 <ReadCompressedUInt16Data>
   1c778:	ldr	r3, [sl]
   1c77c:	sub	r3, r3, #1
   1c780:	ldr	r1, [r4]
   1c784:	ldr	r2, [fp]
   1c788:	mla	r3, r1, r3, r2
   1c78c:	ldr	r2, [sp, #264]	; 0x108
   1c790:	ldr	r2, [r2]
   1c794:	sub	r3, r2, r3
   1c798:	add	r5, r5, r3
   1c79c:	sub	r3, r3, #1
   1c7a0:	ldr	r2, [sp, #256]	; 0x100
   1c7a4:	mov	r1, r7
   1c7a8:	mov	r0, r6
   1c7ac:	bl	2468 <InflateSkipData>
   1c7b0:	ldr	r3, [sp, #260]	; 0x104
   1c7b4:	cmp	r3, #1
   1c7b8:	ble	1c6a8 <ReadCompressedDataSlabN+0x25f4>
   1c7bc:	ldr	r3, [sp, #140]	; 0x8c
   1c7c0:	add	r3, r3, #1
   1c7c4:	str	r3, [sp, #140]	; 0x8c
   1c7c8:	ldr	r1, [sl, #4]
   1c7cc:	sdiv	r2, r3, r1
   1c7d0:	mls	r3, r1, r2, r3
   1c7d4:	cmp	r3, #0
   1c7d8:	bne	1c664 <ReadCompressedDataSlabN+0x25b0>
   1c7dc:	add	r8, sp, #140	; 0x8c
   1c7e0:	add	r7, sl, #4
   1c7e4:	add	r9, sp, #100	; 0x64
   1c7e8:	mov	r6, #1
   1c7ec:	str	r4, [sp, #272]	; 0x110
   1c7f0:	str	sl, [sp, #276]	; 0x114
   1c7f4:	b	1c618 <ReadCompressedDataSlabN+0x2564>
   1c7f8:	ldr	r3, [r4]
   1c7fc:	sub	r3, r3, #1
   1c800:	str	r3, [sp, #176]	; 0xb0
   1c804:	ldr	r3, [sp, #264]	; 0x108
   1c808:	ldr	r3, [r3]
   1c80c:	str	r3, [sp, #96]	; 0x60
   1c810:	ldr	r3, [sl]
   1c814:	str	r3, [sp, #24]
   1c818:	ldr	r3, [sp, #260]	; 0x104
   1c81c:	cmp	r3, #1
   1c820:	ble	1c84c <ReadCompressedDataSlabN+0x2798>
   1c824:	mov	r3, r4
   1c828:	add	r8, sp, #180	; 0xb4
   1c82c:	ldr	lr, [sp, #264]	; 0x108
   1c830:	add	r7, sp, #96	; 0x60
   1c834:	mov	r6, #1
   1c838:	mov	r5, #0
   1c83c:	str	r4, [sp, #272]	; 0x110
   1c840:	mov	r4, lr
   1c844:	mov	r9, r3
   1c848:	b	1d388 <ReadCompressedDataSlabN+0x32d4>
   1c84c:	mov	r5, #0
   1c850:	b	1d418 <ReadCompressedDataSlabN+0x3364>
   1c854:	ldr	r3, [sp, #24]
   1c858:	cmp	r3, #0
   1c85c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c860:	mov	r3, #0
   1c864:	str	r3, [sp, #32]
   1c868:	add	r3, sp, #40	; 0x28
   1c86c:	str	r3, [sp, #20]
   1c870:	str	sl, [sp, #276]	; 0x114
   1c874:	ldr	sl, [sp, #260]	; 0x104
   1c878:	b	1c980 <ReadCompressedDataSlabN+0x28cc>
   1c87c:	ldr	r2, [sp, #256]	; 0x100
   1c880:	ldr	r1, [sp, #20]
   1c884:	ldr	r0, [sp, #12]
   1c888:	bl	2468 <InflateSkipData>
   1c88c:	ldr	r3, [fp]
   1c890:	add	r5, r5, r3
   1c894:	b	1c98c <ReadCompressedDataSlabN+0x28d8>
   1c898:	sub	r6, r6, r3
   1c89c:	ldr	r3, [r8, #-8]
   1c8a0:	mov	r2, r3
   1c8a4:	ldr	r3, [fp, r4, lsl #2]
   1c8a8:	str	r2, [sp, #28]
   1c8ac:	mla	r3, r3, r2, r6
   1c8b0:	ldr	r2, [sp, #256]	; 0x100
   1c8b4:	ldr	r1, [sp, #20]
   1c8b8:	ldr	r0, [sp, #12]
   1c8bc:	bl	2468 <InflateSkipData>
   1c8c0:	ldr	r3, [fp, r4, lsl #2]
   1c8c4:	ldr	r2, [sp, #28]
   1c8c8:	mla	r6, r3, r2, r6
   1c8cc:	add	r5, r5, r6
   1c8d0:	add	r4, r4, #1
   1c8d4:	cmp	sl, r4
   1c8d8:	beq	1c960 <ReadCompressedDataSlabN+0x28ac>
   1c8dc:	ldr	r3, [r7]
   1c8e0:	add	r3, r3, #1
   1c8e4:	str	r3, [r7]
   1c8e8:	ldr	r1, [r9, #4]!
   1c8ec:	sdiv	r2, r3, r1
   1c8f0:	mls	r3, r1, r2, r3
   1c8f4:	cmp	r3, #0
   1c8f8:	bne	1c94c <ReadCompressedDataSlabN+0x2898>
   1c8fc:	mov	r3, #0
   1c900:	str	r3, [r7], #4
   1c904:	ldr	r6, [r8], #4
   1c908:	sdiv	r3, r5, r6
   1c90c:	mls	r3, r6, r3, r5
   1c910:	cmp	r3, #0
   1c914:	bne	1c898 <ReadCompressedDataSlabN+0x27e4>
   1c918:	ldr	r3, [fp, r4, lsl #2]
   1c91c:	cmp	r3, #0
   1c920:	beq	1c8d0 <ReadCompressedDataSlabN+0x281c>
   1c924:	ldr	r6, [r8, #-8]
   1c928:	mul	r3, r6, r3
   1c92c:	ldr	r2, [sp, #256]	; 0x100
   1c930:	ldr	r1, [sp, #20]
   1c934:	ldr	r0, [sp, #12]
   1c938:	bl	2468 <InflateSkipData>
   1c93c:	ldr	r3, [fp, r4, lsl #2]
   1c940:	mla	r5, r3, r6, r5
   1c944:	b	1c8d0 <ReadCompressedDataSlabN+0x281c>
   1c948:	ldr	r4, [sp, #36]	; 0x24
   1c94c:	add	r3, sp, #216	; 0xd8
   1c950:	add	r4, r3, r4, lsl #2
   1c954:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1c958:	cmp	r3, #0
   1c95c:	bne	1ca40 <ReadCompressedDataSlabN+0x298c>
   1c960:	ldr	r3, [sp, #276]	; 0x114
   1c964:	ldr	r3, [r3]
   1c968:	ldr	r2, [sp, #32]
   1c96c:	add	r3, r2, r3
   1c970:	str	r3, [sp, #32]
   1c974:	ldr	r2, [sp, #24]
   1c978:	cmp	r3, r2
   1c97c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1c980:	ldr	r3, [fp]
   1c984:	cmp	r3, #0
   1c988:	bne	1c87c <ReadCompressedDataSlabN+0x27c8>
   1c98c:	ldr	r3, [sp, #276]	; 0x114
   1c990:	ldr	r3, [r3]
   1c994:	str	r3, [sp]
   1c998:	ldr	r3, [sp, #256]	; 0x100
   1c99c:	ldr	r2, [sp, #16]
   1c9a0:	ldr	r1, [sp, #32]
   1c9a4:	add	r2, r2, r1
   1c9a8:	ldr	r6, [sp, #20]
   1c9ac:	mov	r1, r6
   1c9b0:	ldr	r4, [sp, #12]
   1c9b4:	mov	r0, r4
   1c9b8:	bl	1427c <ReadCompressedInt8Data>
   1c9bc:	ldr	r3, [sp, #264]	; 0x108
   1c9c0:	ldr	r3, [r3]
   1c9c4:	ldr	r2, [sp, #276]	; 0x114
   1c9c8:	ldr	r2, [r2]
   1c9cc:	sub	r3, r3, r2
   1c9d0:	ldr	r2, [fp]
   1c9d4:	sub	r3, r3, r2
   1c9d8:	ldr	r2, [sp, #256]	; 0x100
   1c9dc:	mov	r1, r6
   1c9e0:	mov	r0, r4
   1c9e4:	bl	2468 <InflateSkipData>
   1c9e8:	ldr	r3, [sp, #264]	; 0x108
   1c9ec:	ldr	r3, [r3]
   1c9f0:	ldr	r2, [fp]
   1c9f4:	sub	r3, r3, r2
   1c9f8:	add	r5, r3, r5
   1c9fc:	cmp	sl, #1
   1ca00:	ble	1c960 <ReadCompressedDataSlabN+0x28ac>
   1ca04:	ldr	r3, [sp, #140]	; 0x8c
   1ca08:	add	r3, r3, #1
   1ca0c:	str	r3, [sp, #140]	; 0x8c
   1ca10:	ldr	r2, [sp, #276]	; 0x114
   1ca14:	ldr	r1, [r2, #4]
   1ca18:	sdiv	r2, r3, r1
   1ca1c:	mls	r3, r1, r2, r3
   1ca20:	cmp	r3, #0
   1ca24:	bne	1c948 <ReadCompressedDataSlabN+0x2894>
   1ca28:	add	r7, sp, #140	; 0x8c
   1ca2c:	ldr	r3, [sp, #276]	; 0x114
   1ca30:	add	r9, r3, #4
   1ca34:	add	r8, sp, #100	; 0x64
   1ca38:	ldr	r4, [sp, #36]	; 0x24
   1ca3c:	b	1c8fc <ReadCompressedDataSlabN+0x2848>
   1ca40:	add	r5, r5, r3
   1ca44:	ldr	r2, [sp, #256]	; 0x100
   1ca48:	ldr	r1, [sp, #20]
   1ca4c:	ldr	r0, [sp, #12]
   1ca50:	bl	2468 <InflateSkipData>
   1ca54:	b	1c960 <ReadCompressedDataSlabN+0x28ac>
   1ca58:	ldr	r2, [sp, #256]	; 0x100
   1ca5c:	ldr	r1, [sp, #20]
   1ca60:	ldr	r0, [sp, #12]
   1ca64:	bl	2468 <InflateSkipData>
   1ca68:	ldr	r3, [fp]
   1ca6c:	add	r5, r5, r3
   1ca70:	b	1cb90 <ReadCompressedDataSlabN+0x2adc>
   1ca74:	mov	r6, #0
   1ca78:	b	1cc04 <ReadCompressedDataSlabN+0x2b50>
   1ca7c:	sub	r4, r4, r3
   1ca80:	ldr	sl, [r9, #-8]
   1ca84:	ldr	r3, [fp, r6, lsl #2]
   1ca88:	mla	r3, r3, sl, r4
   1ca8c:	ldr	r2, [sp, #256]	; 0x100
   1ca90:	ldr	r1, [sp, #20]
   1ca94:	ldr	r0, [sp, #12]
   1ca98:	bl	2468 <InflateSkipData>
   1ca9c:	ldr	r3, [fp, r6, lsl #2]
   1caa0:	mla	r4, r3, sl, r4
   1caa4:	add	r5, r5, r4
   1caa8:	add	r6, r6, #1
   1caac:	ldr	r3, [sp, #260]	; 0x104
   1cab0:	cmp	r3, r6
   1cab4:	beq	1cb60 <ReadCompressedDataSlabN+0x2aac>
   1cab8:	ldr	r3, [r8]
   1cabc:	add	r3, r3, #1
   1cac0:	str	r3, [r8]
   1cac4:	ldr	r1, [r7, #4]!
   1cac8:	sdiv	r2, r3, r1
   1cacc:	mls	r3, r1, r2, r3
   1cad0:	cmp	r3, #0
   1cad4:	bne	1cb2c <ReadCompressedDataSlabN+0x2a78>
   1cad8:	mov	r3, #0
   1cadc:	str	r3, [r8], #4
   1cae0:	ldr	r4, [r9], #4
   1cae4:	sdiv	r3, r5, r4
   1cae8:	mls	r3, r4, r3, r5
   1caec:	cmp	r3, #0
   1caf0:	bne	1ca7c <ReadCompressedDataSlabN+0x29c8>
   1caf4:	ldr	r3, [fp, r6, lsl #2]
   1caf8:	cmp	r3, #0
   1cafc:	beq	1caa8 <ReadCompressedDataSlabN+0x29f4>
   1cb00:	ldr	r4, [r9, #-8]
   1cb04:	mul	r3, r4, r3
   1cb08:	ldr	r2, [sp, #256]	; 0x100
   1cb0c:	ldr	r1, [sp, #20]
   1cb10:	ldr	r0, [sp, #12]
   1cb14:	bl	2468 <InflateSkipData>
   1cb18:	ldr	r3, [fp, r6, lsl #2]
   1cb1c:	mla	r5, r3, r4, r5
   1cb20:	b	1caa8 <ReadCompressedDataSlabN+0x29f4>
   1cb24:	mov	r6, #1
   1cb28:	b	1cb34 <ReadCompressedDataSlabN+0x2a80>
   1cb2c:	ldr	r4, [sp, #272]	; 0x110
   1cb30:	ldr	sl, [sp, #276]	; 0x114
   1cb34:	add	r3, sp, #216	; 0xd8
   1cb38:	add	r6, r3, r6, lsl #2
   1cb3c:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1cb40:	cmp	r3, #0
   1cb44:	beq	1cb68 <ReadCompressedDataSlabN+0x2ab4>
   1cb48:	add	r5, r5, r3
   1cb4c:	ldr	r2, [sp, #256]	; 0x100
   1cb50:	ldr	r1, [sp, #20]
   1cb54:	ldr	r0, [sp, #12]
   1cb58:	bl	2468 <InflateSkipData>
   1cb5c:	b	1cb68 <ReadCompressedDataSlabN+0x2ab4>
   1cb60:	ldr	r4, [sp, #272]	; 0x110
   1cb64:	ldr	sl, [sp, #276]	; 0x114
   1cb68:	ldr	r3, [sl]
   1cb6c:	ldr	r2, [sp, #28]
   1cb70:	add	r3, r2, r3
   1cb74:	str	r3, [sp, #28]
   1cb78:	ldr	r2, [sp, #24]
   1cb7c:	cmp	r3, r2
   1cb80:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1cb84:	ldr	r3, [fp]
   1cb88:	cmp	r3, #0
   1cb8c:	bne	1ca58 <ReadCompressedDataSlabN+0x29a4>
   1cb90:	ldr	r3, [sl]
   1cb94:	cmp	r3, #1
   1cb98:	ble	1ca74 <ReadCompressedDataSlabN+0x29c0>
   1cb9c:	mov	r6, #0
   1cba0:	ldr	r3, [sp, #16]
   1cba4:	ldr	r2, [sp, #28]
   1cba8:	add	r7, r3, r2
   1cbac:	mov	r3, #1
   1cbb0:	str	r3, [sp]
   1cbb4:	ldr	r3, [sp, #256]	; 0x100
   1cbb8:	add	r2, r7, r6
   1cbbc:	ldr	r9, [sp, #20]
   1cbc0:	mov	r1, r9
   1cbc4:	ldr	r8, [sp, #12]
   1cbc8:	mov	r0, r8
   1cbcc:	bl	1427c <ReadCompressedInt8Data>
   1cbd0:	ldr	r3, [r4]
   1cbd4:	sub	r3, r3, #1
   1cbd8:	ldr	r2, [sp, #256]	; 0x100
   1cbdc:	mov	r1, r9
   1cbe0:	mov	r0, r8
   1cbe4:	bl	2468 <InflateSkipData>
   1cbe8:	ldr	r3, [r4]
   1cbec:	add	r5, r5, r3
   1cbf0:	add	r6, r6, #1
   1cbf4:	ldr	r3, [sl]
   1cbf8:	sub	r3, r3, #1
   1cbfc:	cmp	r3, r6
   1cc00:	bgt	1cbac <ReadCompressedDataSlabN+0x2af8>
   1cc04:	ldr	r3, [sp, #28]
   1cc08:	add	r2, r3, r6
   1cc0c:	mov	r3, #1
   1cc10:	str	r3, [sp]
   1cc14:	ldr	r3, [sp, #256]	; 0x100
   1cc18:	ldr	r1, [sp, #16]
   1cc1c:	add	r2, r1, r2
   1cc20:	ldr	r7, [sp, #20]
   1cc24:	mov	r1, r7
   1cc28:	ldr	r6, [sp, #12]
   1cc2c:	mov	r0, r6
   1cc30:	bl	1427c <ReadCompressedInt8Data>
   1cc34:	ldr	r3, [sl]
   1cc38:	sub	r3, r3, #1
   1cc3c:	ldr	r1, [r4]
   1cc40:	ldr	r2, [fp]
   1cc44:	mla	r3, r1, r3, r2
   1cc48:	ldr	r2, [sp, #264]	; 0x108
   1cc4c:	ldr	r2, [r2]
   1cc50:	sub	r3, r2, r3
   1cc54:	add	r5, r5, r3
   1cc58:	sub	r3, r3, #1
   1cc5c:	ldr	r2, [sp, #256]	; 0x100
   1cc60:	mov	r1, r7
   1cc64:	mov	r0, r6
   1cc68:	bl	2468 <InflateSkipData>
   1cc6c:	ldr	r3, [sp, #260]	; 0x104
   1cc70:	cmp	r3, #1
   1cc74:	ble	1cb68 <ReadCompressedDataSlabN+0x2ab4>
   1cc78:	ldr	r3, [sp, #140]	; 0x8c
   1cc7c:	add	r3, r3, #1
   1cc80:	str	r3, [sp, #140]	; 0x8c
   1cc84:	ldr	r1, [sl, #4]
   1cc88:	sdiv	r2, r3, r1
   1cc8c:	mls	r3, r1, r2, r3
   1cc90:	cmp	r3, #0
   1cc94:	bne	1cb24 <ReadCompressedDataSlabN+0x2a70>
   1cc98:	add	r8, sp, #140	; 0x8c
   1cc9c:	add	r3, sl, #4
   1cca0:	add	r9, sp, #100	; 0x64
   1cca4:	mov	r6, #1
   1cca8:	mov	r7, r3
   1ccac:	str	r4, [sp, #272]	; 0x110
   1ccb0:	str	sl, [sp, #276]	; 0x114
   1ccb4:	b	1cad8 <ReadCompressedDataSlabN+0x2a24>
   1ccb8:	ldr	r3, [r4]
   1ccbc:	sub	r3, r3, #1
   1ccc0:	str	r3, [sp, #176]	; 0xb0
   1ccc4:	ldr	r3, [sp, #264]	; 0x108
   1ccc8:	ldr	r3, [r3]
   1cccc:	str	r3, [sp, #96]	; 0x60
   1ccd0:	ldr	r3, [sl]
   1ccd4:	str	r3, [sp, #24]
   1ccd8:	ldr	r3, [sp, #260]	; 0x104
   1ccdc:	cmp	r3, #1
   1cce0:	ble	1cd0c <ReadCompressedDataSlabN+0x2c58>
   1cce4:	mov	r3, r4
   1cce8:	add	r8, sp, #180	; 0xb4
   1ccec:	ldr	lr, [sp, #264]	; 0x108
   1ccf0:	add	r7, sp, #96	; 0x60
   1ccf4:	mov	r6, #1
   1ccf8:	mov	r5, #0
   1ccfc:	str	r4, [sp, #272]	; 0x110
   1cd00:	mov	r4, lr
   1cd04:	mov	r9, r3
   1cd08:	b	1d47c <ReadCompressedDataSlabN+0x33c8>
   1cd0c:	mov	r5, #0
   1cd10:	b	1d50c <ReadCompressedDataSlabN+0x3458>
   1cd14:	ldr	r3, [sp, #24]
   1cd18:	cmp	r3, #0
   1cd1c:	ble	1d264 <ReadCompressedDataSlabN+0x31b0>
   1cd20:	mov	r3, #0
   1cd24:	str	r3, [sp, #32]
   1cd28:	add	r3, sp, #40	; 0x28
   1cd2c:	str	r3, [sp, #20]
   1cd30:	str	sl, [sp, #276]	; 0x114
   1cd34:	ldr	sl, [sp, #260]	; 0x104
   1cd38:	b	1ce40 <ReadCompressedDataSlabN+0x2d8c>
   1cd3c:	ldr	r2, [sp, #256]	; 0x100
   1cd40:	ldr	r1, [sp, #20]
   1cd44:	ldr	r0, [sp, #12]
   1cd48:	bl	2468 <InflateSkipData>
   1cd4c:	ldr	r3, [fp]
   1cd50:	add	r5, r5, r3
   1cd54:	b	1ce4c <ReadCompressedDataSlabN+0x2d98>
   1cd58:	sub	r6, r6, r3
   1cd5c:	ldr	r3, [r8, #-8]
   1cd60:	mov	r2, r3
   1cd64:	ldr	r3, [fp, r4, lsl #2]
   1cd68:	str	r2, [sp, #28]
   1cd6c:	mla	r3, r3, r2, r6
   1cd70:	ldr	r2, [sp, #256]	; 0x100
   1cd74:	ldr	r1, [sp, #20]
   1cd78:	ldr	r0, [sp, #12]
   1cd7c:	bl	2468 <InflateSkipData>
   1cd80:	ldr	r3, [fp, r4, lsl #2]
   1cd84:	ldr	r2, [sp, #28]
   1cd88:	mla	r6, r3, r2, r6
   1cd8c:	add	r5, r5, r6
   1cd90:	add	r4, r4, #1
   1cd94:	cmp	sl, r4
   1cd98:	beq	1ce20 <ReadCompressedDataSlabN+0x2d6c>
   1cd9c:	ldr	r3, [r7]
   1cda0:	add	r3, r3, #1
   1cda4:	str	r3, [r7]
   1cda8:	ldr	r1, [r9, #4]!
   1cdac:	sdiv	r2, r3, r1
   1cdb0:	mls	r3, r1, r2, r3
   1cdb4:	cmp	r3, #0
   1cdb8:	bne	1ce0c <ReadCompressedDataSlabN+0x2d58>
   1cdbc:	mov	r3, #0
   1cdc0:	str	r3, [r7], #4
   1cdc4:	ldr	r6, [r8], #4
   1cdc8:	sdiv	r3, r5, r6
   1cdcc:	mls	r3, r6, r3, r5
   1cdd0:	cmp	r3, #0
   1cdd4:	bne	1cd58 <ReadCompressedDataSlabN+0x2ca4>
   1cdd8:	ldr	r3, [fp, r4, lsl #2]
   1cddc:	cmp	r3, #0
   1cde0:	beq	1cd90 <ReadCompressedDataSlabN+0x2cdc>
   1cde4:	ldr	r6, [r8, #-8]
   1cde8:	mul	r3, r6, r3
   1cdec:	ldr	r2, [sp, #256]	; 0x100
   1cdf0:	ldr	r1, [sp, #20]
   1cdf4:	ldr	r0, [sp, #12]
   1cdf8:	bl	2468 <InflateSkipData>
   1cdfc:	ldr	r3, [fp, r4, lsl #2]
   1ce00:	mla	r5, r3, r6, r5
   1ce04:	b	1cd90 <ReadCompressedDataSlabN+0x2cdc>
   1ce08:	ldr	r4, [sp, #36]	; 0x24
   1ce0c:	add	r3, sp, #216	; 0xd8
   1ce10:	add	r4, r3, r4, lsl #2
   1ce14:	ldr	r3, [r4, #-40]	; 0xffffffd8
   1ce18:	cmp	r3, #0
   1ce1c:	bne	1cf00 <ReadCompressedDataSlabN+0x2e4c>
   1ce20:	ldr	r3, [sp, #276]	; 0x114
   1ce24:	ldr	r3, [r3]
   1ce28:	ldr	r2, [sp, #32]
   1ce2c:	add	r3, r2, r3
   1ce30:	str	r3, [sp, #32]
   1ce34:	ldr	r2, [sp, #24]
   1ce38:	cmp	r3, r2
   1ce3c:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1ce40:	ldr	r3, [fp]
   1ce44:	cmp	r3, #0
   1ce48:	bne	1cd3c <ReadCompressedDataSlabN+0x2c88>
   1ce4c:	ldr	r3, [sp, #276]	; 0x114
   1ce50:	ldr	r3, [r3]
   1ce54:	str	r3, [sp]
   1ce58:	ldr	r3, [sp, #256]	; 0x100
   1ce5c:	ldr	r2, [sp, #16]
   1ce60:	ldr	r1, [sp, #32]
   1ce64:	add	r2, r2, r1
   1ce68:	ldr	r6, [sp, #20]
   1ce6c:	mov	r1, r6
   1ce70:	ldr	r4, [sp, #12]
   1ce74:	mov	r0, r4
   1ce78:	bl	15ea0 <ReadCompressedUInt8Data>
   1ce7c:	ldr	r3, [sp, #264]	; 0x108
   1ce80:	ldr	r3, [r3]
   1ce84:	ldr	r2, [sp, #276]	; 0x114
   1ce88:	ldr	r2, [r2]
   1ce8c:	sub	r3, r3, r2
   1ce90:	ldr	r2, [fp]
   1ce94:	sub	r3, r3, r2
   1ce98:	ldr	r2, [sp, #256]	; 0x100
   1ce9c:	mov	r1, r6
   1cea0:	mov	r0, r4
   1cea4:	bl	2468 <InflateSkipData>
   1cea8:	ldr	r3, [sp, #264]	; 0x108
   1ceac:	ldr	r3, [r3]
   1ceb0:	ldr	r2, [fp]
   1ceb4:	sub	r3, r3, r2
   1ceb8:	add	r5, r3, r5
   1cebc:	cmp	sl, #1
   1cec0:	ble	1ce20 <ReadCompressedDataSlabN+0x2d6c>
   1cec4:	ldr	r3, [sp, #140]	; 0x8c
   1cec8:	add	r3, r3, #1
   1cecc:	str	r3, [sp, #140]	; 0x8c
   1ced0:	ldr	r2, [sp, #276]	; 0x114
   1ced4:	ldr	r1, [r2, #4]
   1ced8:	sdiv	r2, r3, r1
   1cedc:	mls	r3, r1, r2, r3
   1cee0:	cmp	r3, #0
   1cee4:	bne	1ce08 <ReadCompressedDataSlabN+0x2d54>
   1cee8:	add	r7, sp, #140	; 0x8c
   1ceec:	ldr	r3, [sp, #276]	; 0x114
   1cef0:	add	r9, r3, #4
   1cef4:	add	r8, sp, #100	; 0x64
   1cef8:	ldr	r4, [sp, #36]	; 0x24
   1cefc:	b	1cdbc <ReadCompressedDataSlabN+0x2d08>
   1cf00:	add	r5, r5, r3
   1cf04:	ldr	r2, [sp, #256]	; 0x100
   1cf08:	ldr	r1, [sp, #20]
   1cf0c:	ldr	r0, [sp, #12]
   1cf10:	bl	2468 <InflateSkipData>
   1cf14:	b	1ce20 <ReadCompressedDataSlabN+0x2d6c>
   1cf18:	ldr	r2, [sp, #256]	; 0x100
   1cf1c:	ldr	r1, [sp, #20]
   1cf20:	ldr	r0, [sp, #12]
   1cf24:	bl	2468 <InflateSkipData>
   1cf28:	ldr	r3, [fp]
   1cf2c:	add	r5, r5, r3
   1cf30:	b	1d050 <ReadCompressedDataSlabN+0x2f9c>
   1cf34:	mov	r6, #0
   1cf38:	b	1d0c4 <ReadCompressedDataSlabN+0x3010>
   1cf3c:	sub	r4, r4, r3
   1cf40:	ldr	sl, [r9, #-8]
   1cf44:	ldr	r3, [fp, r6, lsl #2]
   1cf48:	mla	r3, r3, sl, r4
   1cf4c:	ldr	r2, [sp, #256]	; 0x100
   1cf50:	ldr	r1, [sp, #20]
   1cf54:	ldr	r0, [sp, #12]
   1cf58:	bl	2468 <InflateSkipData>
   1cf5c:	ldr	r3, [fp, r6, lsl #2]
   1cf60:	mla	r4, r3, sl, r4
   1cf64:	add	r5, r5, r4
   1cf68:	add	r6, r6, #1
   1cf6c:	ldr	r3, [sp, #260]	; 0x104
   1cf70:	cmp	r3, r6
   1cf74:	beq	1d020 <ReadCompressedDataSlabN+0x2f6c>
   1cf78:	ldr	r3, [r8]
   1cf7c:	add	r3, r3, #1
   1cf80:	str	r3, [r8]
   1cf84:	ldr	r1, [r7, #4]!
   1cf88:	sdiv	r2, r3, r1
   1cf8c:	mls	r3, r1, r2, r3
   1cf90:	cmp	r3, #0
   1cf94:	bne	1cfec <ReadCompressedDataSlabN+0x2f38>
   1cf98:	mov	r3, #0
   1cf9c:	str	r3, [r8], #4
   1cfa0:	ldr	r4, [r9], #4
   1cfa4:	sdiv	r3, r5, r4
   1cfa8:	mls	r3, r4, r3, r5
   1cfac:	cmp	r3, #0
   1cfb0:	bne	1cf3c <ReadCompressedDataSlabN+0x2e88>
   1cfb4:	ldr	r3, [fp, r6, lsl #2]
   1cfb8:	cmp	r3, #0
   1cfbc:	beq	1cf68 <ReadCompressedDataSlabN+0x2eb4>
   1cfc0:	ldr	r4, [r9, #-8]
   1cfc4:	mul	r3, r4, r3
   1cfc8:	ldr	r2, [sp, #256]	; 0x100
   1cfcc:	ldr	r1, [sp, #20]
   1cfd0:	ldr	r0, [sp, #12]
   1cfd4:	bl	2468 <InflateSkipData>
   1cfd8:	ldr	r3, [fp, r6, lsl #2]
   1cfdc:	mla	r5, r3, r4, r5
   1cfe0:	b	1cf68 <ReadCompressedDataSlabN+0x2eb4>
   1cfe4:	mov	r6, #1
   1cfe8:	b	1cff4 <ReadCompressedDataSlabN+0x2f40>
   1cfec:	ldr	r4, [sp, #272]	; 0x110
   1cff0:	ldr	sl, [sp, #276]	; 0x114
   1cff4:	add	r3, sp, #216	; 0xd8
   1cff8:	add	r6, r3, r6, lsl #2
   1cffc:	ldr	r3, [r6, #-40]	; 0xffffffd8
   1d000:	cmp	r3, #0
   1d004:	beq	1d028 <ReadCompressedDataSlabN+0x2f74>
   1d008:	add	r5, r5, r3
   1d00c:	ldr	r2, [sp, #256]	; 0x100
   1d010:	ldr	r1, [sp, #20]
   1d014:	ldr	r0, [sp, #12]
   1d018:	bl	2468 <InflateSkipData>
   1d01c:	b	1d028 <ReadCompressedDataSlabN+0x2f74>
   1d020:	ldr	r4, [sp, #272]	; 0x110
   1d024:	ldr	sl, [sp, #276]	; 0x114
   1d028:	ldr	r3, [sl]
   1d02c:	ldr	r2, [sp, #28]
   1d030:	add	r3, r2, r3
   1d034:	str	r3, [sp, #28]
   1d038:	ldr	r2, [sp, #24]
   1d03c:	cmp	r3, r2
   1d040:	bge	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d044:	ldr	r3, [fp]
   1d048:	cmp	r3, #0
   1d04c:	bne	1cf18 <ReadCompressedDataSlabN+0x2e64>
   1d050:	ldr	r3, [sl]
   1d054:	cmp	r3, #1
   1d058:	ble	1cf34 <ReadCompressedDataSlabN+0x2e80>
   1d05c:	mov	r6, #0
   1d060:	ldr	r3, [sp, #16]
   1d064:	ldr	r2, [sp, #28]
   1d068:	add	r7, r3, r2
   1d06c:	mov	r3, #1
   1d070:	str	r3, [sp]
   1d074:	ldr	r3, [sp, #256]	; 0x100
   1d078:	add	r2, r7, r6
   1d07c:	ldr	r9, [sp, #20]
   1d080:	mov	r1, r9
   1d084:	ldr	r8, [sp, #12]
   1d088:	mov	r0, r8
   1d08c:	bl	15ea0 <ReadCompressedUInt8Data>
   1d090:	ldr	r3, [r4]
   1d094:	sub	r3, r3, #1
   1d098:	ldr	r2, [sp, #256]	; 0x100
   1d09c:	mov	r1, r9
   1d0a0:	mov	r0, r8
   1d0a4:	bl	2468 <InflateSkipData>
   1d0a8:	ldr	r3, [r4]
   1d0ac:	add	r5, r5, r3
   1d0b0:	add	r6, r6, #1
   1d0b4:	ldr	r3, [sl]
   1d0b8:	sub	r3, r3, #1
   1d0bc:	cmp	r3, r6
   1d0c0:	bgt	1d06c <ReadCompressedDataSlabN+0x2fb8>
   1d0c4:	ldr	r3, [sp, #28]
   1d0c8:	add	r2, r3, r6
   1d0cc:	mov	r3, #1
   1d0d0:	str	r3, [sp]
   1d0d4:	ldr	r3, [sp, #256]	; 0x100
   1d0d8:	ldr	r1, [sp, #16]
   1d0dc:	add	r2, r1, r2
   1d0e0:	ldr	r7, [sp, #20]
   1d0e4:	mov	r1, r7
   1d0e8:	ldr	r6, [sp, #12]
   1d0ec:	mov	r0, r6
   1d0f0:	bl	15ea0 <ReadCompressedUInt8Data>
   1d0f4:	ldr	r3, [sl]
   1d0f8:	sub	r3, r3, #1
   1d0fc:	ldr	r1, [r4]
   1d100:	ldr	r2, [fp]
   1d104:	mla	r3, r1, r3, r2
   1d108:	ldr	r2, [sp, #264]	; 0x108
   1d10c:	ldr	r2, [r2]
   1d110:	sub	r3, r2, r3
   1d114:	add	r5, r5, r3
   1d118:	sub	r3, r3, #1
   1d11c:	ldr	r2, [sp, #256]	; 0x100
   1d120:	mov	r1, r7
   1d124:	mov	r0, r6
   1d128:	bl	2468 <InflateSkipData>
   1d12c:	ldr	r3, [sp, #260]	; 0x104
   1d130:	cmp	r3, #1
   1d134:	ble	1d028 <ReadCompressedDataSlabN+0x2f74>
   1d138:	ldr	r3, [sp, #140]	; 0x8c
   1d13c:	add	r3, r3, #1
   1d140:	str	r3, [sp, #140]	; 0x8c
   1d144:	ldr	r1, [sl, #4]
   1d148:	sdiv	r2, r3, r1
   1d14c:	mls	r3, r1, r2, r3
   1d150:	cmp	r3, #0
   1d154:	bne	1cfe4 <ReadCompressedDataSlabN+0x2f30>
   1d158:	add	r8, sp, #140	; 0x8c
   1d15c:	add	r7, sl, #4
   1d160:	add	r9, sp, #100	; 0x64
   1d164:	mov	r6, #1
   1d168:	str	r4, [sp, #272]	; 0x110
   1d16c:	str	sl, [sp, #276]	; 0x114
   1d170:	b	1cf98 <ReadCompressedDataSlabN+0x2ee4>
   1d174:	ldr	r3, [sl]
   1d178:	ldr	r2, [sp, #24]
   1d17c:	mul	r3, r3, r2
   1d180:	str	r3, [sp, #24]
   1d184:	ldr	r3, [r7, #-4]
   1d188:	ldr	r2, [fp]
   1d18c:	mla	r5, r2, r3, r5
   1d190:	add	r6, r6, #1
   1d194:	ldr	r3, [r9, #4]!
   1d198:	sub	r3, r3, #1
   1d19c:	str	r3, [r8], #4
   1d1a0:	ldr	r3, [r4], #4
   1d1a4:	mov	r2, r3
   1d1a8:	add	r7, r7, #4
   1d1ac:	str	r7, [sp, #20]
   1d1b0:	str	r3, [r7]
   1d1b4:	cmp	r6, #0
   1d1b8:	beq	1d174 <ReadCompressedDataSlabN+0x30c0>
   1d1bc:	str	r8, [sp, #28]
   1d1c0:	ldr	r1, [r8, #-4]
   1d1c4:	mov	r3, r4
   1d1c8:	mov	r0, r3
   1d1cc:	ldr	ip, [r3, #-4]!
   1d1d0:	mul	r1, ip, r1
   1d1d4:	ldr	r0, [r0]
   1d1d8:	mul	r2, r0, r2
   1d1dc:	cmp	lr, r3
   1d1e0:	bne	1d1c8 <ReadCompressedDataSlabN+0x3114>
   1d1e4:	ldr	r3, [sp, #28]
   1d1e8:	str	r1, [r3, #-4]
   1d1ec:	ldr	r1, [sp, #20]
   1d1f0:	str	r2, [r1]
   1d1f4:	ldr	r3, [sl, r6, lsl #2]
   1d1f8:	ldr	r2, [sp, #24]
   1d1fc:	mul	r3, r3, r2
   1d200:	str	r3, [sp, #24]
   1d204:	ldr	r3, [r1, #-4]
   1d208:	ldr	r2, [fp, r6, lsl #2]
   1d20c:	mla	r5, r2, r3, r5
   1d210:	add	r3, r6, #1
   1d214:	ldr	r2, [sp, #260]	; 0x104
   1d218:	cmp	r3, r2
   1d21c:	blt	1d190 <ReadCompressedDataSlabN+0x30dc>
   1d220:	ldr	r4, [sp, #272]	; 0x110
   1d224:	mov	r3, r5
   1d228:	ldr	r2, [sp, #256]	; 0x100
   1d22c:	add	r1, sp, #40	; 0x28
   1d230:	ldr	r0, [sp, #12]
   1d234:	bl	2468 <InflateSkipData>
   1d238:	ldr	r3, [r4]
   1d23c:	str	r3, [sp, #36]	; 0x24
   1d240:	cmp	r3, #1
   1d244:	beq	1a250 <ReadCompressedDataSlabN+0x19c>
   1d248:	ldr	r3, [sp, #24]
   1d24c:	cmp	r3, #0
   1d250:	movgt	r3, #0
   1d254:	strgt	r3, [sp, #28]
   1d258:	addgt	r3, sp, #40	; 0x28
   1d25c:	strgt	r3, [sp, #20]
   1d260:	bgt	1a580 <ReadCompressedDataSlabN+0x4cc>
   1d264:	add	r0, sp, #40	; 0x28
   1d268:	bl	15b0 <inflateEnd@plt>
   1d26c:	mov	r0, #0
   1d270:	b	1a194 <ReadCompressedDataSlabN+0xe0>
   1d274:	ldr	r3, [sl]
   1d278:	ldr	r2, [sp, #24]
   1d27c:	mul	r3, r3, r2
   1d280:	str	r3, [sp, #24]
   1d284:	ldr	r3, [r7, #-4]
   1d288:	ldr	r2, [fp]
   1d28c:	mla	r5, r2, r3, r5
   1d290:	add	r6, r6, #1
   1d294:	ldr	r3, [r9, #4]!
   1d298:	sub	r3, r3, #1
   1d29c:	str	r3, [r8], #4
   1d2a0:	ldr	r3, [r4], #4
   1d2a4:	mov	r2, r3
   1d2a8:	add	r7, r7, #4
   1d2ac:	str	r7, [sp, #20]
   1d2b0:	str	r3, [r7]
   1d2b4:	cmp	r6, #0
   1d2b8:	beq	1d274 <ReadCompressedDataSlabN+0x31c0>
   1d2bc:	str	r8, [sp, #28]
   1d2c0:	ldr	r1, [r8, #-4]
   1d2c4:	mov	r3, r4
   1d2c8:	mov	r0, r3
   1d2cc:	ldr	ip, [r3, #-4]!
   1d2d0:	mul	r1, ip, r1
   1d2d4:	ldr	r0, [r0]
   1d2d8:	mul	r2, r0, r2
   1d2dc:	cmp	lr, r3
   1d2e0:	bne	1d2c8 <ReadCompressedDataSlabN+0x3214>
   1d2e4:	ldr	r3, [sp, #28]
   1d2e8:	str	r1, [r3, #-4]
   1d2ec:	ldr	r1, [sp, #20]
   1d2f0:	str	r2, [r1]
   1d2f4:	ldr	r3, [sl, r6, lsl #2]
   1d2f8:	ldr	r2, [sp, #24]
   1d2fc:	mul	r3, r3, r2
   1d300:	str	r3, [sp, #24]
   1d304:	ldr	r3, [r1, #-4]
   1d308:	ldr	r2, [fp, r6, lsl #2]
   1d30c:	mla	r5, r2, r3, r5
   1d310:	add	r3, r6, #1
   1d314:	ldr	r2, [sp, #260]	; 0x104
   1d318:	cmp	r2, r3
   1d31c:	bgt	1d290 <ReadCompressedDataSlabN+0x31dc>
   1d320:	ldr	r4, [sp, #272]	; 0x110
   1d324:	mov	r3, r5
   1d328:	ldr	r2, [sp, #256]	; 0x100
   1d32c:	add	r1, sp, #40	; 0x28
   1d330:	ldr	r0, [sp, #12]
   1d334:	bl	2468 <InflateSkipData>
   1d338:	ldr	r3, [r4]
   1d33c:	str	r3, [sp, #36]	; 0x24
   1d340:	cmp	r3, #1
   1d344:	beq	1a710 <ReadCompressedDataSlabN+0x65c>
   1d348:	ldr	r3, [sp, #24]
   1d34c:	cmp	r3, #0
   1d350:	movgt	r3, #0
   1d354:	strgt	r3, [sp, #28]
   1d358:	addgt	r3, sp, #40	; 0x28
   1d35c:	strgt	r3, [sp, #20]
   1d360:	bgt	1aa40 <ReadCompressedDataSlabN+0x98c>
   1d364:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d368:	ldr	r3, [sl]
   1d36c:	ldr	r2, [sp, #24]
   1d370:	mul	r3, r3, r2
   1d374:	str	r3, [sp, #24]
   1d378:	ldr	r3, [r7, #-4]
   1d37c:	ldr	r2, [fp]
   1d380:	mla	r5, r2, r3, r5
   1d384:	add	r6, r6, #1
   1d388:	ldr	r3, [r9, #4]!
   1d38c:	sub	r3, r3, #1
   1d390:	str	r3, [r8], #4
   1d394:	ldr	r3, [r4], #4
   1d398:	mov	r2, r3
   1d39c:	add	r7, r7, #4
   1d3a0:	str	r7, [sp, #20]
   1d3a4:	str	r3, [r7]
   1d3a8:	cmp	r6, #0
   1d3ac:	beq	1d368 <ReadCompressedDataSlabN+0x32b4>
   1d3b0:	str	r8, [sp, #28]
   1d3b4:	ldr	r1, [r8, #-4]
   1d3b8:	mov	r3, r4
   1d3bc:	mov	r0, r3
   1d3c0:	ldr	ip, [r3, #-4]!
   1d3c4:	mul	r1, ip, r1
   1d3c8:	ldr	r0, [r0]
   1d3cc:	mul	r2, r0, r2
   1d3d0:	cmp	r3, lr
   1d3d4:	bne	1d3bc <ReadCompressedDataSlabN+0x3308>
   1d3d8:	ldr	r3, [sp, #28]
   1d3dc:	str	r1, [r3, #-4]
   1d3e0:	ldr	r1, [sp, #20]
   1d3e4:	str	r2, [r1]
   1d3e8:	ldr	r3, [sl, r6, lsl #2]
   1d3ec:	ldr	r2, [sp, #24]
   1d3f0:	mul	r3, r3, r2
   1d3f4:	str	r3, [sp, #24]
   1d3f8:	ldr	r3, [r1, #-4]
   1d3fc:	ldr	r2, [fp, r6, lsl #2]
   1d400:	mla	r5, r2, r3, r5
   1d404:	add	r3, r6, #1
   1d408:	ldr	r2, [sp, #260]	; 0x104
   1d40c:	cmp	r2, r3
   1d410:	bgt	1d384 <ReadCompressedDataSlabN+0x32d0>
   1d414:	ldr	r4, [sp, #272]	; 0x110
   1d418:	mov	r3, r5
   1d41c:	ldr	r2, [sp, #256]	; 0x100
   1d420:	add	r1, sp, #40	; 0x28
   1d424:	ldr	r0, [sp, #12]
   1d428:	bl	2468 <InflateSkipData>
   1d42c:	ldr	r3, [r4]
   1d430:	str	r3, [sp, #36]	; 0x24
   1d434:	cmp	r3, #1
   1d438:	beq	1c854 <ReadCompressedDataSlabN+0x27a0>
   1d43c:	ldr	r3, [sp, #24]
   1d440:	cmp	r3, #0
   1d444:	movgt	r3, #0
   1d448:	strgt	r3, [sp, #28]
   1d44c:	addgt	r3, sp, #40	; 0x28
   1d450:	strgt	r3, [sp, #20]
   1d454:	bgt	1cb84 <ReadCompressedDataSlabN+0x2ad0>
   1d458:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d45c:	ldr	r3, [sl]
   1d460:	ldr	r2, [sp, #24]
   1d464:	mul	r3, r3, r2
   1d468:	str	r3, [sp, #24]
   1d46c:	ldr	r3, [r7, #-4]
   1d470:	ldr	r2, [fp]
   1d474:	mla	r5, r2, r3, r5
   1d478:	add	r6, r6, #1
   1d47c:	ldr	r3, [r9, #4]!
   1d480:	sub	r3, r3, #1
   1d484:	str	r3, [r8], #4
   1d488:	ldr	r3, [r4], #4
   1d48c:	mov	r2, r3
   1d490:	add	r7, r7, #4
   1d494:	str	r7, [sp, #20]
   1d498:	str	r3, [r7]
   1d49c:	cmp	r6, #0
   1d4a0:	beq	1d45c <ReadCompressedDataSlabN+0x33a8>
   1d4a4:	str	r8, [sp, #28]
   1d4a8:	ldr	r1, [r8, #-4]
   1d4ac:	mov	r3, r4
   1d4b0:	mov	r0, r3
   1d4b4:	ldr	ip, [r3, #-4]!
   1d4b8:	mul	r1, ip, r1
   1d4bc:	ldr	r0, [r0]
   1d4c0:	mul	r2, r0, r2
   1d4c4:	cmp	r3, lr
   1d4c8:	bne	1d4b0 <ReadCompressedDataSlabN+0x33fc>
   1d4cc:	ldr	r3, [sp, #28]
   1d4d0:	str	r1, [r3, #-4]
   1d4d4:	ldr	r1, [sp, #20]
   1d4d8:	str	r2, [r1]
   1d4dc:	ldr	r3, [sl, r6, lsl #2]
   1d4e0:	ldr	r2, [sp, #24]
   1d4e4:	mul	r3, r3, r2
   1d4e8:	str	r3, [sp, #24]
   1d4ec:	ldr	r3, [r1, #-4]
   1d4f0:	ldr	r2, [fp, r6, lsl #2]
   1d4f4:	mla	r5, r2, r3, r5
   1d4f8:	add	r3, r6, #1
   1d4fc:	ldr	r2, [sp, #260]	; 0x104
   1d500:	cmp	r2, r3
   1d504:	bgt	1d478 <ReadCompressedDataSlabN+0x33c4>
   1d508:	ldr	r4, [sp, #272]	; 0x110
   1d50c:	mov	r3, r5
   1d510:	ldr	r2, [sp, #256]	; 0x100
   1d514:	add	r1, sp, #40	; 0x28
   1d518:	ldr	r0, [sp, #12]
   1d51c:	bl	2468 <InflateSkipData>
   1d520:	ldr	r3, [r4]
   1d524:	str	r3, [sp, #36]	; 0x24
   1d528:	cmp	r3, #1
   1d52c:	beq	1cd14 <ReadCompressedDataSlabN+0x2c60>
   1d530:	ldr	r3, [sp, #24]
   1d534:	cmp	r3, #0
   1d538:	movgt	r3, #0
   1d53c:	strgt	r3, [sp, #28]
   1d540:	addgt	r3, sp, #40	; 0x28
   1d544:	strgt	r3, [sp, #20]
   1d548:	bgt	1d044 <ReadCompressedDataSlabN+0x2f90>
   1d54c:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d550:	ldr	r3, [sl]
   1d554:	ldr	r2, [sp, #24]
   1d558:	mul	r3, r3, r2
   1d55c:	str	r3, [sp, #24]
   1d560:	ldr	r3, [r7, #-4]
   1d564:	ldr	r2, [fp]
   1d568:	mla	r5, r2, r3, r5
   1d56c:	add	r6, r6, #1
   1d570:	ldr	r3, [r9, #4]!
   1d574:	sub	r3, r3, #1
   1d578:	str	r3, [r8], #4
   1d57c:	ldr	r3, [r4], #4
   1d580:	mov	r2, r3
   1d584:	add	r7, r7, #4
   1d588:	str	r7, [sp, #20]
   1d58c:	str	r3, [r7]
   1d590:	cmp	r6, #0
   1d594:	beq	1d550 <ReadCompressedDataSlabN+0x349c>
   1d598:	str	r8, [sp, #28]
   1d59c:	ldr	r1, [r8, #-4]
   1d5a0:	mov	r3, r4
   1d5a4:	mov	r0, r3
   1d5a8:	ldr	ip, [r3, #-4]!
   1d5ac:	mul	r1, ip, r1
   1d5b0:	ldr	r0, [r0]
   1d5b4:	mul	r2, r0, r2
   1d5b8:	cmp	r3, lr
   1d5bc:	bne	1d5a4 <ReadCompressedDataSlabN+0x34f0>
   1d5c0:	ldr	r3, [sp, #28]
   1d5c4:	str	r1, [r3, #-4]
   1d5c8:	ldr	r1, [sp, #20]
   1d5cc:	str	r2, [r1]
   1d5d0:	ldr	r3, [sl, r6, lsl #2]
   1d5d4:	ldr	r2, [sp, #24]
   1d5d8:	mul	r3, r3, r2
   1d5dc:	str	r3, [sp, #24]
   1d5e0:	ldr	r3, [r1, #-4]
   1d5e4:	ldr	r2, [fp, r6, lsl #2]
   1d5e8:	mla	r5, r2, r3, r5
   1d5ec:	add	r3, r6, #1
   1d5f0:	ldr	r2, [sp, #260]	; 0x104
   1d5f4:	cmp	r2, r3
   1d5f8:	bgt	1d56c <ReadCompressedDataSlabN+0x34b8>
   1d5fc:	ldr	r4, [sp, #272]	; 0x110
   1d600:	mov	r3, r5
   1d604:	ldr	r2, [sp, #256]	; 0x100
   1d608:	add	r1, sp, #40	; 0x28
   1d60c:	ldr	r0, [sp, #12]
   1d610:	bl	2468 <InflateSkipData>
   1d614:	ldr	r3, [r4]
   1d618:	str	r3, [sp, #36]	; 0x24
   1d61c:	cmp	r3, #1
   1d620:	beq	1bed4 <ReadCompressedDataSlabN+0x1e20>
   1d624:	ldr	r3, [sp, #24]
   1d628:	cmp	r3, #0
   1d62c:	movgt	r3, #0
   1d630:	strgt	r3, [sp, #28]
   1d634:	addgt	r3, sp, #40	; 0x28
   1d638:	strgt	r3, [sp, #20]
   1d63c:	bgt	1c204 <ReadCompressedDataSlabN+0x2150>
   1d640:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d644:	ldr	r3, [sl]
   1d648:	ldr	r2, [sp, #24]
   1d64c:	mul	r3, r3, r2
   1d650:	str	r3, [sp, #24]
   1d654:	ldr	r3, [fp]
   1d658:	ldr	r2, [r7, #-4]
   1d65c:	mla	r5, r2, r3, r5
   1d660:	add	r6, r6, #1
   1d664:	ldr	r3, [r9, #4]!
   1d668:	sub	r3, r3, #1
   1d66c:	str	r3, [r8], #4
   1d670:	ldr	r3, [r4], #4
   1d674:	mov	r2, r3
   1d678:	add	r7, r7, #4
   1d67c:	str	r7, [sp, #20]
   1d680:	str	r3, [r7]
   1d684:	cmp	r6, #0
   1d688:	beq	1d644 <ReadCompressedDataSlabN+0x3590>
   1d68c:	str	r8, [sp, #28]
   1d690:	ldr	r1, [r8, #-4]
   1d694:	mov	r3, r4
   1d698:	mov	r0, r3
   1d69c:	ldr	ip, [r3, #-4]!
   1d6a0:	mul	r1, ip, r1
   1d6a4:	ldr	r0, [r0]
   1d6a8:	mul	r2, r0, r2
   1d6ac:	cmp	r3, lr
   1d6b0:	bne	1d698 <ReadCompressedDataSlabN+0x35e4>
   1d6b4:	ldr	r3, [sp, #28]
   1d6b8:	str	r1, [r3, #-4]
   1d6bc:	ldr	r1, [sp, #20]
   1d6c0:	str	r2, [r1]
   1d6c4:	ldr	r3, [sl, r6, lsl #2]
   1d6c8:	ldr	r2, [sp, #24]
   1d6cc:	mul	r3, r3, r2
   1d6d0:	str	r3, [sp, #24]
   1d6d4:	ldr	r3, [r1, #-4]
   1d6d8:	ldr	r2, [fp, r6, lsl #2]
   1d6dc:	mla	r5, r2, r3, r5
   1d6e0:	add	r3, r6, #1
   1d6e4:	ldr	r2, [sp, #260]	; 0x104
   1d6e8:	cmp	r2, r3
   1d6ec:	bgt	1d660 <ReadCompressedDataSlabN+0x35ac>
   1d6f0:	ldr	r4, [sp, #272]	; 0x110
   1d6f4:	mov	r3, r5
   1d6f8:	ldr	r2, [sp, #256]	; 0x100
   1d6fc:	add	r1, sp, #40	; 0x28
   1d700:	ldr	r0, [sp, #12]
   1d704:	bl	2468 <InflateSkipData>
   1d708:	ldr	r3, [r4]
   1d70c:	str	r3, [sp, #36]	; 0x24
   1d710:	cmp	r3, #1
   1d714:	beq	1c394 <ReadCompressedDataSlabN+0x22e0>
   1d718:	ldr	r3, [sp, #24]
   1d71c:	cmp	r3, #0
   1d720:	movgt	r3, #0
   1d724:	strgt	r3, [sp, #28]
   1d728:	addgt	r3, sp, #40	; 0x28
   1d72c:	strgt	r3, [sp, #20]
   1d730:	bgt	1c6c4 <ReadCompressedDataSlabN+0x2610>
   1d734:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d738:	ldr	r3, [sl]
   1d73c:	ldr	r2, [sp, #24]
   1d740:	mul	r3, r3, r2
   1d744:	str	r3, [sp, #24]
   1d748:	ldr	r3, [fp]
   1d74c:	ldr	r2, [r7, #-4]
   1d750:	mla	r5, r2, r3, r5
   1d754:	add	r6, r6, #1
   1d758:	ldr	r3, [r9, #4]!
   1d75c:	sub	r3, r3, #1
   1d760:	str	r3, [r8], #4
   1d764:	ldr	r3, [r4], #4
   1d768:	mov	r2, r3
   1d76c:	add	r7, r7, #4
   1d770:	str	r7, [sp, #20]
   1d774:	str	r3, [r7]
   1d778:	cmp	r6, #0
   1d77c:	beq	1d738 <ReadCompressedDataSlabN+0x3684>
   1d780:	str	r8, [sp, #28]
   1d784:	ldr	r1, [r8, #-4]
   1d788:	mov	r3, r4
   1d78c:	mov	r0, r3
   1d790:	ldr	ip, [r3, #-4]!
   1d794:	mul	r1, ip, r1
   1d798:	ldr	r0, [r0]
   1d79c:	mul	r2, r0, r2
   1d7a0:	cmp	r3, lr
   1d7a4:	bne	1d78c <ReadCompressedDataSlabN+0x36d8>
   1d7a8:	ldr	r3, [sp, #28]
   1d7ac:	str	r1, [r3, #-4]
   1d7b0:	ldr	r1, [sp, #20]
   1d7b4:	str	r2, [r1]
   1d7b8:	ldr	r3, [sl, r6, lsl #2]
   1d7bc:	ldr	r2, [sp, #24]
   1d7c0:	mul	r3, r3, r2
   1d7c4:	str	r3, [sp, #24]
   1d7c8:	ldr	r3, [r1, #-4]
   1d7cc:	ldr	r2, [fp, r6, lsl #2]
   1d7d0:	mla	r5, r2, r3, r5
   1d7d4:	add	r3, r6, #1
   1d7d8:	ldr	r2, [sp, #260]	; 0x104
   1d7dc:	cmp	r2, r3
   1d7e0:	bgt	1d754 <ReadCompressedDataSlabN+0x36a0>
   1d7e4:	ldr	r4, [sp, #272]	; 0x110
   1d7e8:	mov	r3, r5
   1d7ec:	ldr	r2, [sp, #256]	; 0x100
   1d7f0:	add	r1, sp, #40	; 0x28
   1d7f4:	ldr	r0, [sp, #12]
   1d7f8:	bl	2468 <InflateSkipData>
   1d7fc:	ldr	r3, [r4]
   1d800:	str	r3, [sp, #36]	; 0x24
   1d804:	cmp	r3, #1
   1d808:	beq	1b554 <ReadCompressedDataSlabN+0x14a0>
   1d80c:	ldr	r3, [sp, #24]
   1d810:	cmp	r3, #0
   1d814:	movgt	r3, #0
   1d818:	strgt	r3, [sp, #28]
   1d81c:	addgt	r3, sp, #40	; 0x28
   1d820:	strgt	r3, [sp, #20]
   1d824:	bgt	1b884 <ReadCompressedDataSlabN+0x17d0>
   1d828:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d82c:	ldr	r3, [sl]
   1d830:	ldr	r2, [sp, #24]
   1d834:	mul	r3, r3, r2
   1d838:	str	r3, [sp, #24]
   1d83c:	ldr	r3, [fp]
   1d840:	ldr	r2, [r7, #-4]
   1d844:	mla	r5, r2, r3, r5
   1d848:	add	r6, r6, #1
   1d84c:	ldr	r3, [r9, #4]!
   1d850:	sub	r3, r3, #1
   1d854:	str	r3, [r8], #4
   1d858:	ldr	r3, [r4], #4
   1d85c:	mov	r2, r3
   1d860:	add	r7, r7, #4
   1d864:	str	r7, [sp, #20]
   1d868:	str	r3, [r7]
   1d86c:	cmp	r6, #0
   1d870:	beq	1d82c <ReadCompressedDataSlabN+0x3778>
   1d874:	str	r8, [sp, #28]
   1d878:	ldr	r1, [r8, #-4]
   1d87c:	mov	r3, r4
   1d880:	mov	r0, r3
   1d884:	ldr	ip, [r3, #-4]!
   1d888:	mul	r1, ip, r1
   1d88c:	ldr	r0, [r0]
   1d890:	mul	r2, r0, r2
   1d894:	cmp	r3, lr
   1d898:	bne	1d880 <ReadCompressedDataSlabN+0x37cc>
   1d89c:	ldr	r3, [sp, #28]
   1d8a0:	str	r1, [r3, #-4]
   1d8a4:	ldr	r1, [sp, #20]
   1d8a8:	str	r2, [r1]
   1d8ac:	ldr	r3, [sl, r6, lsl #2]
   1d8b0:	ldr	r2, [sp, #24]
   1d8b4:	mul	r3, r3, r2
   1d8b8:	str	r3, [sp, #24]
   1d8bc:	ldr	r3, [r1, #-4]
   1d8c0:	ldr	r2, [fp, r6, lsl #2]
   1d8c4:	mla	r5, r2, r3, r5
   1d8c8:	add	r3, r6, #1
   1d8cc:	ldr	r2, [sp, #260]	; 0x104
   1d8d0:	cmp	r2, r3
   1d8d4:	bgt	1d848 <ReadCompressedDataSlabN+0x3794>
   1d8d8:	ldr	r4, [sp, #272]	; 0x110
   1d8dc:	mov	r3, r5
   1d8e0:	ldr	r2, [sp, #256]	; 0x100
   1d8e4:	add	r1, sp, #40	; 0x28
   1d8e8:	ldr	r0, [sp, #12]
   1d8ec:	bl	2468 <InflateSkipData>
   1d8f0:	ldr	r3, [r4]
   1d8f4:	str	r3, [sp, #36]	; 0x24
   1d8f8:	cmp	r3, #1
   1d8fc:	beq	1ba14 <ReadCompressedDataSlabN+0x1960>
   1d900:	ldr	r3, [sp, #24]
   1d904:	cmp	r3, #0
   1d908:	movgt	r3, #0
   1d90c:	strgt	r3, [sp, #28]
   1d910:	addgt	r3, sp, #40	; 0x28
   1d914:	strgt	r3, [sp, #20]
   1d918:	bgt	1bd44 <ReadCompressedDataSlabN+0x1c90>
   1d91c:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1d920:	ldr	r3, [sl]
   1d924:	ldr	r2, [sp, #24]
   1d928:	mul	r3, r3, r2
   1d92c:	str	r3, [sp, #24]
   1d930:	ldr	r3, [fp]
   1d934:	ldr	r2, [r7, #-4]
   1d938:	mla	r5, r2, r3, r5
   1d93c:	add	r6, r6, #1
   1d940:	ldr	r3, [r9, #4]!
   1d944:	sub	r3, r3, #1
   1d948:	str	r3, [r8], #4
   1d94c:	ldr	r3, [r4], #4
   1d950:	mov	r2, r3
   1d954:	add	r7, r7, #4
   1d958:	str	r7, [sp, #20]
   1d95c:	str	r3, [r7]
   1d960:	cmp	r6, #0
   1d964:	beq	1d920 <ReadCompressedDataSlabN+0x386c>
   1d968:	str	r8, [sp, #28]
   1d96c:	ldr	r1, [r8, #-4]
   1d970:	mov	r3, r4
   1d974:	mov	r0, r3
   1d978:	ldr	ip, [r3, #-4]!
   1d97c:	mul	r1, ip, r1
   1d980:	ldr	r0, [r0]
   1d984:	mul	r2, r0, r2
   1d988:	cmp	r3, lr
   1d98c:	bne	1d974 <ReadCompressedDataSlabN+0x38c0>
   1d990:	ldr	r3, [sp, #28]
   1d994:	str	r1, [r3, #-4]
   1d998:	ldr	r1, [sp, #20]
   1d99c:	str	r2, [r1]
   1d9a0:	ldr	r3, [sl, r6, lsl #2]
   1d9a4:	ldr	r2, [sp, #24]
   1d9a8:	mul	r3, r3, r2
   1d9ac:	str	r3, [sp, #24]
   1d9b0:	ldr	r3, [r1, #-4]
   1d9b4:	ldr	r2, [fp, r6, lsl #2]
   1d9b8:	mla	r5, r2, r3, r5
   1d9bc:	add	r3, r6, #1
   1d9c0:	ldr	r2, [sp, #260]	; 0x104
   1d9c4:	cmp	r2, r3
   1d9c8:	bgt	1d93c <ReadCompressedDataSlabN+0x3888>
   1d9cc:	ldr	r4, [sp, #272]	; 0x110
   1d9d0:	mov	r3, r5
   1d9d4:	ldr	r2, [sp, #256]	; 0x100
   1d9d8:	add	r1, sp, #40	; 0x28
   1d9dc:	ldr	r0, [sp, #12]
   1d9e0:	bl	2468 <InflateSkipData>
   1d9e4:	ldr	r3, [r4]
   1d9e8:	str	r3, [sp, #36]	; 0x24
   1d9ec:	cmp	r3, #1
   1d9f0:	beq	1abd4 <ReadCompressedDataSlabN+0xb20>
   1d9f4:	ldr	r3, [sp, #24]
   1d9f8:	cmp	r3, #0
   1d9fc:	movgt	r3, #0
   1da00:	strgt	r3, [sp, #28]
   1da04:	addgt	r3, sp, #40	; 0x28
   1da08:	strgt	r3, [sp, #20]
   1da0c:	bgt	1af04 <ReadCompressedDataSlabN+0xe50>
   1da10:	b	1d264 <ReadCompressedDataSlabN+0x31b0>
   1da14:	ldr	r3, [sl]
   1da18:	ldr	r2, [sp, #24]
   1da1c:	mul	r3, r3, r2
   1da20:	str	r3, [sp, #24]
   1da24:	ldr	r3, [fp]
   1da28:	ldr	r2, [r7, #-4]
   1da2c:	mla	r5, r2, r3, r5
   1da30:	add	r6, r6, #1
   1da34:	ldr	r3, [r9, #4]!
   1da38:	sub	r3, r3, #1
   1da3c:	str	r3, [r8], #4
   1da40:	ldr	r3, [r4], #4
   1da44:	mov	r2, r3
   1da48:	add	r7, r7, #4
   1da4c:	str	r7, [sp, #20]
   1da50:	str	r3, [r7]
   1da54:	cmp	r6, #0
   1da58:	beq	1da14 <ReadCompressedDataSlabN+0x3960>
   1da5c:	str	r8, [sp, #28]
   1da60:	ldr	r1, [r8, #-4]
   1da64:	mov	r3, r4
   1da68:	mov	r0, r3
   1da6c:	ldr	ip, [r3, #-4]!
   1da70:	mul	r1, ip, r1
   1da74:	ldr	r0, [r0]
   1da78:	mul	r2, r0, r2
   1da7c:	cmp	r3, lr
   1da80:	bne	1da68 <ReadCompressedDataSlabN+0x39b4>
   1da84:	ldr	r3, [sp, #28]
   1da88:	str	r1, [r3, #-4]
   1da8c:	ldr	r1, [sp, #20]
   1da90:	str	r2, [r1]
   1da94:	ldr	r3, [sl, r6, lsl #2]
   1da98:	ldr	r2, [sp, #24]
   1da9c:	mul	r3, r3, r2
   1daa0:	str	r3, [sp, #24]
   1daa4:	ldr	r3, [r1, #-4]
   1daa8:	ldr	r2, [fp, r6, lsl #2]
   1daac:	mla	r5, r2, r3, r5
   1dab0:	add	r3, r6, #1
   1dab4:	ldr	r2, [sp, #260]	; 0x104
   1dab8:	cmp	r2, r3
   1dabc:	bgt	1da30 <ReadCompressedDataSlabN+0x397c>
   1dac0:	ldr	r4, [sp, #272]	; 0x110
   1dac4:	mov	r3, r5
   1dac8:	ldr	r2, [sp, #256]	; 0x100
   1dacc:	add	r1, sp, #40	; 0x28
   1dad0:	ldr	r0, [sp, #12]
   1dad4:	bl	2468 <InflateSkipData>
   1dad8:	ldr	r3, [r4]
   1dadc:	str	r3, [sp, #36]	; 0x24
   1dae0:	cmp	r3, #1
   1dae4:	beq	1b094 <ReadCompressedDataSlabN+0xfe0>
   1dae8:	ldr	r3, [sp, #24]
   1daec:	cmp	r3, #0
   1daf0:	movgt	r3, #0
   1daf4:	strgt	r3, [sp, #28]
   1daf8:	addgt	r3, sp, #40	; 0x28
   1dafc:	strgt	r3, [sp, #20]
   1db00:	bgt	1b3c4 <ReadCompressedDataSlabN+0x1310>
   1db04:	b	1d264 <ReadCompressedDataSlabN+0x31b0>

0001db08 <ReadDataSlab1>:
   1db08:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1db0c:	strd	r6, [sp, #8]
   1db10:	strd	r8, [sp, #16]
   1db14:	str	sl, [sp, #24]
   1db18:	str	lr, [sp, #28]
   1db1c:	mov	r4, r0
   1db20:	mov	r9, r1
   1db24:	mov	r8, r2
   1db28:	mov	r7, r3
   1db2c:	ldr	r5, [sp, #40]	; 0x28
   1db30:	mov	r0, r3
   1db34:	bl	1598 <Mat_SizeOf@plt>
   1db38:	mov	r6, r0
   1db3c:	mov	r2, #1
   1db40:	ldr	r1, [sp, #32]
   1db44:	mul	r1, r0, r1
   1db48:	ldr	r0, [r4]
   1db4c:	bl	1694 <fseek@plt>
   1db50:	ldr	r3, [sp, #36]	; 0x24
   1db54:	sub	r3, r3, #1
   1db58:	mul	r6, r6, r3
   1db5c:	sub	r2, r8, #6
   1db60:	cmp	r2, #9
   1db64:	addls	pc, pc, r2, lsl #2
   1db68:	b	1e05c <ReadDataSlab1+0x554>
   1db6c:	b	1db94 <ReadDataSlab1+0x8c>
   1db70:	b	1dc24 <ReadDataSlab1+0x11c>
   1db74:	b	1df6c <ReadDataSlab1+0x464>
   1db78:	b	1dfe4 <ReadDataSlab1+0x4dc>
   1db7c:	b	1de7c <ReadDataSlab1+0x374>
   1db80:	b	1def4 <ReadDataSlab1+0x3ec>
   1db84:	b	1dd8c <ReadDataSlab1+0x284>
   1db88:	b	1de04 <ReadDataSlab1+0x2fc>
   1db8c:	b	1dc9c <ReadDataSlab1+0x194>
   1db90:	b	1dd14 <ReadDataSlab1+0x20c>
   1db94:	cmp	r6, #0
   1db98:	beq	1dc08 <ReadDataSlab1+0x100>
   1db9c:	cmp	r5, #0
   1dba0:	movle	r5, #0
   1dba4:	ble	1dbec <ReadDataSlab1+0xe4>
   1dba8:	mov	r8, r9
   1dbac:	add	r9, r9, r5, lsl #3
   1dbb0:	mov	r5, #0
   1dbb4:	mov	sl, #1
   1dbb8:	mov	r3, sl
   1dbbc:	mov	r2, r7
   1dbc0:	mov	r1, r8
   1dbc4:	mov	r0, r4
   1dbc8:	bl	3a44 <ReadDoubleData>
   1dbcc:	add	r5, r5, r0
   1dbd0:	mov	r2, sl
   1dbd4:	mov	r1, r6
   1dbd8:	ldr	r0, [r4]
   1dbdc:	bl	1694 <fseek@plt>
   1dbe0:	add	r8, r8, #8
   1dbe4:	cmp	r9, r8
   1dbe8:	bne	1dbb8 <ReadDataSlab1+0xb0>
   1dbec:	mov	r0, r5
   1dbf0:	ldrd	r4, [sp]
   1dbf4:	ldrd	r6, [sp, #8]
   1dbf8:	ldrd	r8, [sp, #16]
   1dbfc:	ldr	sl, [sp, #24]
   1dc00:	add	sp, sp, #28
   1dc04:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc08:	mov	r3, r5
   1dc0c:	mov	r2, r7
   1dc10:	mov	r1, r9
   1dc14:	mov	r0, r4
   1dc18:	bl	3a44 <ReadDoubleData>
   1dc1c:	mov	r5, r0
   1dc20:	b	1dbec <ReadDataSlab1+0xe4>
   1dc24:	cmp	r6, #0
   1dc28:	beq	1dc80 <ReadDataSlab1+0x178>
   1dc2c:	cmp	r5, #0
   1dc30:	movle	r5, #0
   1dc34:	ble	1dbec <ReadDataSlab1+0xe4>
   1dc38:	mov	r8, r9
   1dc3c:	add	r9, r9, r5, lsl #2
   1dc40:	mov	r5, #0
   1dc44:	mov	sl, #1
   1dc48:	mov	r3, sl
   1dc4c:	mov	r2, r7
   1dc50:	mov	r1, r8
   1dc54:	mov	r0, r4
   1dc58:	bl	6360 <ReadSingleData>
   1dc5c:	add	r5, r5, r0
   1dc60:	mov	r2, sl
   1dc64:	mov	r1, r6
   1dc68:	ldr	r0, [r4]
   1dc6c:	bl	1694 <fseek@plt>
   1dc70:	add	r8, r8, #4
   1dc74:	cmp	r8, r9
   1dc78:	bne	1dc48 <ReadDataSlab1+0x140>
   1dc7c:	b	1dbec <ReadDataSlab1+0xe4>
   1dc80:	mov	r3, r5
   1dc84:	mov	r2, r7
   1dc88:	mov	r1, r9
   1dc8c:	mov	r0, r4
   1dc90:	bl	6360 <ReadSingleData>
   1dc94:	mov	r5, r0
   1dc98:	b	1dbec <ReadDataSlab1+0xe4>
   1dc9c:	cmp	r6, #0
   1dca0:	beq	1dcf8 <ReadDataSlab1+0x1f0>
   1dca4:	cmp	r5, #0
   1dca8:	movle	r5, #0
   1dcac:	ble	1dbec <ReadDataSlab1+0xe4>
   1dcb0:	mov	r8, r9
   1dcb4:	add	r9, r9, r5, lsl #3
   1dcb8:	mov	r5, #0
   1dcbc:	mov	sl, #1
   1dcc0:	mov	r3, sl
   1dcc4:	mov	r2, r7
   1dcc8:	mov	r1, r8
   1dccc:	mov	r0, r4
   1dcd0:	bl	80c4 <ReadInt64Data>
   1dcd4:	add	r5, r5, r0
   1dcd8:	mov	r2, sl
   1dcdc:	mov	r1, r6
   1dce0:	ldr	r0, [r4]
   1dce4:	bl	1694 <fseek@plt>
   1dce8:	add	r8, r8, #8
   1dcec:	cmp	r8, r9
   1dcf0:	bne	1dcc0 <ReadDataSlab1+0x1b8>
   1dcf4:	b	1dbec <ReadDataSlab1+0xe4>
   1dcf8:	mov	r3, r5
   1dcfc:	mov	r2, r7
   1dd00:	mov	r1, r9
   1dd04:	mov	r0, r4
   1dd08:	bl	80c4 <ReadInt64Data>
   1dd0c:	mov	r5, r0
   1dd10:	b	1dbec <ReadDataSlab1+0xe4>
   1dd14:	cmp	r6, #0
   1dd18:	beq	1dd70 <ReadDataSlab1+0x268>
   1dd1c:	cmp	r5, #0
   1dd20:	movle	r5, #0
   1dd24:	ble	1dbec <ReadDataSlab1+0xe4>
   1dd28:	mov	r8, r9
   1dd2c:	add	r9, r9, r5, lsl #3
   1dd30:	mov	r5, #0
   1dd34:	mov	sl, #1
   1dd38:	mov	r3, sl
   1dd3c:	mov	r2, r7
   1dd40:	mov	r1, r8
   1dd44:	mov	r0, r4
   1dd48:	bl	9dd8 <ReadUInt64Data>
   1dd4c:	add	r5, r5, r0
   1dd50:	mov	r2, sl
   1dd54:	mov	r1, r6
   1dd58:	ldr	r0, [r4]
   1dd5c:	bl	1694 <fseek@plt>
   1dd60:	add	r8, r8, #8
   1dd64:	cmp	r8, r9
   1dd68:	bne	1dd38 <ReadDataSlab1+0x230>
   1dd6c:	b	1dbec <ReadDataSlab1+0xe4>
   1dd70:	mov	r3, r5
   1dd74:	mov	r2, r7
   1dd78:	mov	r1, r9
   1dd7c:	mov	r0, r4
   1dd80:	bl	9dd8 <ReadUInt64Data>
   1dd84:	mov	r5, r0
   1dd88:	b	1dbec <ReadDataSlab1+0xe4>
   1dd8c:	cmp	r6, #0
   1dd90:	beq	1dde8 <ReadDataSlab1+0x2e0>
   1dd94:	cmp	r5, #0
   1dd98:	movle	r5, #0
   1dd9c:	ble	1dbec <ReadDataSlab1+0xe4>
   1dda0:	mov	r8, r9
   1dda4:	add	r9, r9, r5, lsl #2
   1dda8:	mov	r5, #0
   1ddac:	mov	sl, #1
   1ddb0:	mov	r3, sl
   1ddb4:	mov	r2, r7
   1ddb8:	mov	r1, r8
   1ddbc:	mov	r0, r4
   1ddc0:	bl	baec <ReadInt32Data>
   1ddc4:	add	r5, r5, r0
   1ddc8:	mov	r2, sl
   1ddcc:	mov	r1, r6
   1ddd0:	ldr	r0, [r4]
   1ddd4:	bl	1694 <fseek@plt>
   1ddd8:	add	r8, r8, #4
   1dddc:	cmp	r9, r8
   1dde0:	bne	1ddb0 <ReadDataSlab1+0x2a8>
   1dde4:	b	1dbec <ReadDataSlab1+0xe4>
   1dde8:	mov	r3, r5
   1ddec:	mov	r2, r7
   1ddf0:	mov	r1, r9
   1ddf4:	mov	r0, r4
   1ddf8:	bl	baec <ReadInt32Data>
   1ddfc:	mov	r5, r0
   1de00:	b	1dbec <ReadDataSlab1+0xe4>
   1de04:	cmp	r6, #0
   1de08:	beq	1de60 <ReadDataSlab1+0x358>
   1de0c:	cmp	r5, #0
   1de10:	movle	r5, #0
   1de14:	ble	1dbec <ReadDataSlab1+0xe4>
   1de18:	mov	r8, r9
   1de1c:	add	r9, r9, r5, lsl #2
   1de20:	mov	r5, #0
   1de24:	mov	sl, #1
   1de28:	mov	r3, sl
   1de2c:	mov	r2, r7
   1de30:	mov	r1, r8
   1de34:	mov	r0, r4
   1de38:	bl	d728 <ReadUInt32Data>
   1de3c:	add	r5, r5, r0
   1de40:	mov	r2, sl
   1de44:	mov	r1, r6
   1de48:	ldr	r0, [r4]
   1de4c:	bl	1694 <fseek@plt>
   1de50:	add	r8, r8, #4
   1de54:	cmp	r8, r9
   1de58:	bne	1de28 <ReadDataSlab1+0x320>
   1de5c:	b	1dbec <ReadDataSlab1+0xe4>
   1de60:	mov	r3, r5
   1de64:	mov	r2, r7
   1de68:	mov	r1, r9
   1de6c:	mov	r0, r4
   1de70:	bl	d728 <ReadUInt32Data>
   1de74:	mov	r5, r0
   1de78:	b	1dbec <ReadDataSlab1+0xe4>
   1de7c:	cmp	r6, #0
   1de80:	beq	1ded8 <ReadDataSlab1+0x3d0>
   1de84:	cmp	r5, #0
   1de88:	movle	r5, #0
   1de8c:	ble	1dbec <ReadDataSlab1+0xe4>
   1de90:	mov	r8, r9
   1de94:	add	r9, r9, r5, lsl #1
   1de98:	mov	r5, #0
   1de9c:	mov	sl, #1
   1dea0:	mov	r3, sl
   1dea4:	mov	r2, r7
   1dea8:	mov	r1, r8
   1deac:	mov	r0, r4
   1deb0:	bl	f364 <ReadInt16Data>
   1deb4:	add	r5, r5, r0
   1deb8:	mov	r2, sl
   1debc:	mov	r1, r6
   1dec0:	ldr	r0, [r4]
   1dec4:	bl	1694 <fseek@plt>
   1dec8:	add	r8, r8, #2
   1decc:	cmp	r8, r9
   1ded0:	bne	1dea0 <ReadDataSlab1+0x398>
   1ded4:	b	1dbec <ReadDataSlab1+0xe4>
   1ded8:	mov	r3, r5
   1dedc:	mov	r2, r7
   1dee0:	mov	r1, r9
   1dee4:	mov	r0, r4
   1dee8:	bl	f364 <ReadInt16Data>
   1deec:	mov	r5, r0
   1def0:	b	1dbec <ReadDataSlab1+0xe4>
   1def4:	cmp	r6, #0
   1def8:	beq	1df50 <ReadDataSlab1+0x448>
   1defc:	cmp	r5, #0
   1df00:	movle	r5, #0
   1df04:	ble	1dbec <ReadDataSlab1+0xe4>
   1df08:	mov	r8, r9
   1df0c:	add	r9, r9, r5, lsl #1
   1df10:	mov	r5, #0
   1df14:	mov	sl, #1
   1df18:	mov	r3, sl
   1df1c:	mov	r2, r7
   1df20:	mov	r1, r8
   1df24:	mov	r0, r4
   1df28:	bl	10fd0 <ReadUInt16Data>
   1df2c:	add	r5, r5, r0
   1df30:	mov	r2, sl
   1df34:	mov	r1, r6
   1df38:	ldr	r0, [r4]
   1df3c:	bl	1694 <fseek@plt>
   1df40:	add	r8, r8, #2
   1df44:	cmp	r8, r9
   1df48:	bne	1df18 <ReadDataSlab1+0x410>
   1df4c:	b	1dbec <ReadDataSlab1+0xe4>
   1df50:	mov	r3, r5
   1df54:	mov	r2, r7
   1df58:	mov	r1, r9
   1df5c:	mov	r0, r4
   1df60:	bl	10fd0 <ReadUInt16Data>
   1df64:	mov	r5, r0
   1df68:	b	1dbec <ReadDataSlab1+0xe4>
   1df6c:	cmp	r6, #0
   1df70:	beq	1dfc8 <ReadDataSlab1+0x4c0>
   1df74:	cmp	r5, #0
   1df78:	movle	r5, #0
   1df7c:	ble	1dbec <ReadDataSlab1+0xe4>
   1df80:	mov	r8, r9
   1df84:	add	r9, r9, r5
   1df88:	mov	r5, #0
   1df8c:	mov	sl, #1
   1df90:	mov	r3, sl
   1df94:	mov	r2, r7
   1df98:	mov	r1, r8
   1df9c:	mov	r0, r4
   1dfa0:	bl	12c3c <ReadInt8Data>
   1dfa4:	add	r5, r5, r0
   1dfa8:	mov	r2, sl
   1dfac:	mov	r1, r6
   1dfb0:	ldr	r0, [r4]
   1dfb4:	bl	1694 <fseek@plt>
   1dfb8:	add	r8, r8, #1
   1dfbc:	cmp	r8, r9
   1dfc0:	bne	1df90 <ReadDataSlab1+0x488>
   1dfc4:	b	1dbec <ReadDataSlab1+0xe4>
   1dfc8:	mov	r3, r5
   1dfcc:	mov	r2, r7
   1dfd0:	mov	r1, r9
   1dfd4:	mov	r0, r4
   1dfd8:	bl	12c3c <ReadInt8Data>
   1dfdc:	mov	r5, r0
   1dfe0:	b	1dbec <ReadDataSlab1+0xe4>
   1dfe4:	cmp	r6, #0
   1dfe8:	beq	1e040 <ReadDataSlab1+0x538>
   1dfec:	cmp	r5, #0
   1dff0:	movle	r5, #0
   1dff4:	ble	1dbec <ReadDataSlab1+0xe4>
   1dff8:	mov	r8, r9
   1dffc:	add	r9, r9, r5
   1e000:	mov	r5, #0
   1e004:	mov	sl, #1
   1e008:	mov	r3, sl
   1e00c:	mov	r2, r7
   1e010:	mov	r1, r8
   1e014:	mov	r0, r4
   1e018:	bl	14860 <ReadUInt8Data>
   1e01c:	add	r5, r5, r0
   1e020:	mov	r2, sl
   1e024:	mov	r1, r6
   1e028:	ldr	r0, [r4]
   1e02c:	bl	1694 <fseek@plt>
   1e030:	add	r8, r8, #1
   1e034:	cmp	r9, r8
   1e038:	bne	1e008 <ReadDataSlab1+0x500>
   1e03c:	b	1dbec <ReadDataSlab1+0xe4>
   1e040:	mov	r3, r5
   1e044:	mov	r2, r7
   1e048:	mov	r1, r9
   1e04c:	mov	r0, r4
   1e050:	bl	14860 <ReadUInt8Data>
   1e054:	mov	r5, r0
   1e058:	b	1dbec <ReadDataSlab1+0xe4>
   1e05c:	mov	r5, #0
   1e060:	b	1dbec <ReadDataSlab1+0xe4>

0001e064 <ReadDataSlab2>:
   1e064:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e068:	strd	r6, [sp, #8]
   1e06c:	strd	r8, [sp, #16]
   1e070:	strd	sl, [sp, #24]
   1e074:	str	lr, [sp, #32]
   1e078:	sub	sp, sp, #20
   1e07c:	str	r3, [sp]
   1e080:	ldr	r7, [sp, #60]	; 0x3c
   1e084:	ldr	r8, [sp, #64]	; 0x40
   1e088:	ldr	r6, [sp, #68]	; 0x44
   1e08c:	cmp	r1, #0
   1e090:	cmpne	r0, #0
   1e094:	moveq	r8, #0
   1e098:	beq	1e0e0 <ReadDataSlab2+0x7c>
   1e09c:	mov	sl, r2
   1e0a0:	mov	r2, r3
   1e0a4:	mov	r5, r0
   1e0a8:	mov	r4, r1
   1e0ac:	ldr	r3, [r0]
   1e0b0:	cmp	r3, #0
   1e0b4:	moveq	r8, #0
   1e0b8:	beq	1e0e0 <ReadDataSlab2+0x7c>
   1e0bc:	clz	r3, r8
   1e0c0:	lsr	r3, r3, #5
   1e0c4:	cmp	r7, #0
   1e0c8:	moveq	r3, #1
   1e0cc:	cmp	r6, #0
   1e0d0:	moveq	r3, #1
   1e0d4:	cmp	r3, #0
   1e0d8:	movne	r8, #0
   1e0dc:	beq	1e100 <ReadDataSlab2+0x9c>
   1e0e0:	mov	r0, r8
   1e0e4:	add	sp, sp, #20
   1e0e8:	ldrd	r4, [sp]
   1e0ec:	ldrd	r6, [sp, #8]
   1e0f0:	ldrd	r8, [sp, #16]
   1e0f4:	ldrd	sl, [sp, #24]
   1e0f8:	add	sp, sp, #32
   1e0fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e100:	mov	r0, r2
   1e104:	bl	1598 <Mat_SizeOf@plt>
   1e108:	mov	r9, r0
   1e10c:	str	r0, [sp, #4]
   1e110:	sub	sl, sl, #6
   1e114:	cmp	sl, #9
   1e118:	addls	pc, pc, sl, lsl #2
   1e11c:	b	1f2a0 <ReadDataSlab2+0x123c>
   1e120:	b	1e148 <ReadDataSlab2+0xe4>
   1e124:	b	1e2f8 <ReadDataSlab2+0x294>
   1e128:	b	1eec8 <ReadDataSlab2+0xe64>
   1e12c:	b	1f078 <ReadDataSlab2+0x1014>
   1e130:	b	1eb68 <ReadDataSlab2+0xb04>
   1e134:	b	1ed18 <ReadDataSlab2+0xcb4>
   1e138:	b	1e808 <ReadDataSlab2+0x7a4>
   1e13c:	b	1e9b8 <ReadDataSlab2+0x954>
   1e140:	b	1e4a8 <ReadDataSlab2+0x444>
   1e144:	b	1e658 <ReadDataSlab2+0x5f4>
   1e148:	ldr	r2, [r8]
   1e14c:	cmp	r2, #1
   1e150:	bne	1e168 <ReadDataSlab2+0x104>
   1e154:	ldr	r3, [r6]
   1e158:	ldr	r1, [sp, #56]	; 0x38
   1e15c:	ldr	r1, [r1]
   1e160:	cmp	r3, r1
   1e164:	beq	1e1d4 <ReadDataSlab2+0x170>
   1e168:	sub	r2, r2, #1
   1e16c:	mul	r3, r9, r2
   1e170:	str	r3, [sp, #8]
   1e174:	ldr	r2, [r8, #4]
   1e178:	ldr	r3, [sp, #56]	; 0x38
   1e17c:	ldr	r3, [r3]
   1e180:	mul	r3, r3, r2
   1e184:	mul	r3, r9, r3
   1e188:	str	r3, [sp, #12]
   1e18c:	ldr	r0, [r5]
   1e190:	bl	14b4 <ftell@plt>
   1e194:	mov	r8, r0
   1e198:	cmn	r0, #1
   1e19c:	beq	1e200 <ReadDataSlab2+0x19c>
   1e1a0:	ldr	r3, [r7, #4]
   1e1a4:	ldr	r2, [sp, #56]	; 0x38
   1e1a8:	ldr	r1, [r2]
   1e1ac:	mul	r1, r1, r3
   1e1b0:	mov	r2, #1
   1e1b4:	mul	r1, r9, r1
   1e1b8:	ldr	r0, [r5]
   1e1bc:	bl	1694 <fseek@plt>
   1e1c0:	ldr	r3, [r6, #4]
   1e1c4:	cmp	r3, #0
   1e1c8:	ble	1f2a8 <ReadDataSlab2+0x1244>
   1e1cc:	mov	fp, #0
   1e1d0:	b	1e258 <ReadDataSlab2+0x1f4>
   1e1d4:	ldr	r1, [r8, #4]
   1e1d8:	cmp	r1, #1
   1e1dc:	bne	1e168 <ReadDataSlab2+0x104>
   1e1e0:	ldr	r2, [r6, #4]
   1e1e4:	mul	r3, r2, r3
   1e1e8:	ldr	r2, [sp]
   1e1ec:	mov	r1, r4
   1e1f0:	mov	r0, r5
   1e1f4:	bl	3a44 <ReadDoubleData>
   1e1f8:	mov	r8, #0
   1e1fc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e200:	ldr	r0, [pc, #3912]	; 1f150 <ReadDataSlab2+0x10ec>
   1e204:	add	r0, pc, r0
   1e208:	bl	161c <Mat_Critical@plt>
   1e20c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e210:	ldr	r0, [pc, #3900]	; 1f154 <ReadDataSlab2+0x10f0>
   1e214:	add	r0, pc, r0
   1e218:	bl	161c <Mat_Critical@plt>
   1e21c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e220:	ldr	r0, [r5]
   1e224:	bl	14b4 <ftell@plt>
   1e228:	cmn	r0, #1
   1e22c:	beq	1e2d8 <ReadDataSlab2+0x274>
   1e230:	ldr	r3, [sp, #12]
   1e234:	sub	r1, r3, r0
   1e238:	mov	r2, #1
   1e23c:	add	r1, r1, r8
   1e240:	ldr	r0, [r5]
   1e244:	bl	1694 <fseek@plt>
   1e248:	add	fp, fp, #1
   1e24c:	ldr	r3, [r6, #4]
   1e250:	cmp	r3, fp
   1e254:	ble	1e2f0 <ReadDataSlab2+0x28c>
   1e258:	ldr	r0, [r5]
   1e25c:	bl	14b4 <ftell@plt>
   1e260:	mov	r8, r0
   1e264:	cmn	r0, #1
   1e268:	beq	1e210 <ReadDataSlab2+0x1ac>
   1e26c:	ldr	r1, [r7]
   1e270:	mov	r2, #1
   1e274:	ldr	r3, [sp, #4]
   1e278:	mul	r1, r1, r3
   1e27c:	ldr	r0, [r5]
   1e280:	bl	1694 <fseek@plt>
   1e284:	ldr	r3, [r6]
   1e288:	cmp	r3, #0
   1e28c:	ble	1e220 <ReadDataSlab2+0x1bc>
   1e290:	mov	r9, #0
   1e294:	mov	r1, r4
   1e298:	add	sl, r1, #8
   1e29c:	mov	r3, #1
   1e2a0:	ldr	r2, [sp]
   1e2a4:	mov	r0, r5
   1e2a8:	bl	3a44 <ReadDoubleData>
   1e2ac:	mov	r2, #1
   1e2b0:	ldr	r1, [sp, #8]
   1e2b4:	ldr	r0, [r5]
   1e2b8:	bl	1694 <fseek@plt>
   1e2bc:	add	r9, r9, #1
   1e2c0:	mov	r1, sl
   1e2c4:	ldr	r3, [r6]
   1e2c8:	cmp	r3, r9
   1e2cc:	bgt	1e298 <ReadDataSlab2+0x234>
   1e2d0:	mov	r4, sl
   1e2d4:	b	1e220 <ReadDataSlab2+0x1bc>
   1e2d8:	mov	r9, r0
   1e2dc:	ldr	r0, [pc, #3700]	; 1f158 <ReadDataSlab2+0x10f4>
   1e2e0:	add	r0, pc, r0
   1e2e4:	bl	161c <Mat_Critical@plt>
   1e2e8:	mov	r8, r9
   1e2ec:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e2f0:	mov	r8, #0
   1e2f4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e2f8:	ldr	r2, [r8]
   1e2fc:	cmp	r2, #1
   1e300:	bne	1e318 <ReadDataSlab2+0x2b4>
   1e304:	ldr	r3, [r6]
   1e308:	ldr	r1, [sp, #56]	; 0x38
   1e30c:	ldr	r1, [r1]
   1e310:	cmp	r3, r1
   1e314:	beq	1e384 <ReadDataSlab2+0x320>
   1e318:	sub	r2, r2, #1
   1e31c:	mul	r3, r9, r2
   1e320:	str	r3, [sp, #8]
   1e324:	ldr	r2, [r8, #4]
   1e328:	ldr	r3, [sp, #56]	; 0x38
   1e32c:	ldr	r3, [r3]
   1e330:	mul	r3, r3, r2
   1e334:	mul	r3, r9, r3
   1e338:	str	r3, [sp, #12]
   1e33c:	ldr	r0, [r5]
   1e340:	bl	14b4 <ftell@plt>
   1e344:	mov	r8, r0
   1e348:	cmn	r0, #1
   1e34c:	beq	1e3b0 <ReadDataSlab2+0x34c>
   1e350:	ldr	r3, [r7, #4]
   1e354:	ldr	r2, [sp, #56]	; 0x38
   1e358:	ldr	r1, [r2]
   1e35c:	mul	r1, r1, r3
   1e360:	mov	r2, #1
   1e364:	mul	r1, r9, r1
   1e368:	ldr	r0, [r5]
   1e36c:	bl	1694 <fseek@plt>
   1e370:	ldr	r3, [r6, #4]
   1e374:	cmp	r3, #0
   1e378:	ble	1f2b0 <ReadDataSlab2+0x124c>
   1e37c:	mov	fp, #0
   1e380:	b	1e408 <ReadDataSlab2+0x3a4>
   1e384:	ldr	r1, [r8, #4]
   1e388:	cmp	r1, #1
   1e38c:	bne	1e318 <ReadDataSlab2+0x2b4>
   1e390:	ldr	r2, [r6, #4]
   1e394:	mul	r3, r2, r3
   1e398:	ldr	r2, [sp]
   1e39c:	mov	r1, r4
   1e3a0:	mov	r0, r5
   1e3a4:	bl	6360 <ReadSingleData>
   1e3a8:	mov	r8, #0
   1e3ac:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e3b0:	ldr	r0, [pc, #3492]	; 1f15c <ReadDataSlab2+0x10f8>
   1e3b4:	add	r0, pc, r0
   1e3b8:	bl	161c <Mat_Critical@plt>
   1e3bc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e3c0:	ldr	r0, [pc, #3480]	; 1f160 <ReadDataSlab2+0x10fc>
   1e3c4:	add	r0, pc, r0
   1e3c8:	bl	161c <Mat_Critical@plt>
   1e3cc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e3d0:	ldr	r0, [r5]
   1e3d4:	bl	14b4 <ftell@plt>
   1e3d8:	cmn	r0, #1
   1e3dc:	beq	1e488 <ReadDataSlab2+0x424>
   1e3e0:	ldr	r3, [sp, #12]
   1e3e4:	sub	r1, r3, r0
   1e3e8:	mov	r2, #1
   1e3ec:	add	r1, r1, r8
   1e3f0:	ldr	r0, [r5]
   1e3f4:	bl	1694 <fseek@plt>
   1e3f8:	add	fp, fp, #1
   1e3fc:	ldr	r3, [r6, #4]
   1e400:	cmp	r3, fp
   1e404:	ble	1e4a0 <ReadDataSlab2+0x43c>
   1e408:	ldr	r0, [r5]
   1e40c:	bl	14b4 <ftell@plt>
   1e410:	mov	r8, r0
   1e414:	cmn	r0, #1
   1e418:	beq	1e3c0 <ReadDataSlab2+0x35c>
   1e41c:	ldr	r1, [r7]
   1e420:	mov	r2, #1
   1e424:	ldr	r3, [sp, #4]
   1e428:	mul	r1, r1, r3
   1e42c:	ldr	r0, [r5]
   1e430:	bl	1694 <fseek@plt>
   1e434:	ldr	r3, [r6]
   1e438:	cmp	r3, #0
   1e43c:	ble	1e3d0 <ReadDataSlab2+0x36c>
   1e440:	mov	r9, #0
   1e444:	mov	r1, r4
   1e448:	add	sl, r1, #4
   1e44c:	mov	r3, #1
   1e450:	ldr	r2, [sp]
   1e454:	mov	r0, r5
   1e458:	bl	6360 <ReadSingleData>
   1e45c:	mov	r2, #1
   1e460:	ldr	r1, [sp, #8]
   1e464:	ldr	r0, [r5]
   1e468:	bl	1694 <fseek@plt>
   1e46c:	add	r9, r9, #1
   1e470:	mov	r1, sl
   1e474:	ldr	r3, [r6]
   1e478:	cmp	r3, r9
   1e47c:	bgt	1e448 <ReadDataSlab2+0x3e4>
   1e480:	mov	r4, sl
   1e484:	b	1e3d0 <ReadDataSlab2+0x36c>
   1e488:	mov	r9, r0
   1e48c:	ldr	r0, [pc, #3280]	; 1f164 <ReadDataSlab2+0x1100>
   1e490:	add	r0, pc, r0
   1e494:	bl	161c <Mat_Critical@plt>
   1e498:	mov	r8, r9
   1e49c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e4a0:	mov	r8, #0
   1e4a4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e4a8:	ldr	r2, [r8]
   1e4ac:	cmp	r2, #1
   1e4b0:	bne	1e4c8 <ReadDataSlab2+0x464>
   1e4b4:	ldr	r3, [r6]
   1e4b8:	ldr	r1, [sp, #56]	; 0x38
   1e4bc:	ldr	r1, [r1]
   1e4c0:	cmp	r3, r1
   1e4c4:	beq	1e534 <ReadDataSlab2+0x4d0>
   1e4c8:	sub	r2, r2, #1
   1e4cc:	mul	r3, r9, r2
   1e4d0:	str	r3, [sp, #8]
   1e4d4:	ldr	r2, [r8, #4]
   1e4d8:	ldr	r3, [sp, #56]	; 0x38
   1e4dc:	ldr	r3, [r3]
   1e4e0:	mul	r3, r3, r2
   1e4e4:	mul	r3, r9, r3
   1e4e8:	str	r3, [sp, #12]
   1e4ec:	ldr	r0, [r5]
   1e4f0:	bl	14b4 <ftell@plt>
   1e4f4:	mov	r8, r0
   1e4f8:	cmn	r0, #1
   1e4fc:	beq	1e560 <ReadDataSlab2+0x4fc>
   1e500:	ldr	r3, [r7, #4]
   1e504:	ldr	r2, [sp, #56]	; 0x38
   1e508:	ldr	r1, [r2]
   1e50c:	mul	r1, r1, r3
   1e510:	mov	r2, #1
   1e514:	mul	r1, r9, r1
   1e518:	ldr	r0, [r5]
   1e51c:	bl	1694 <fseek@plt>
   1e520:	ldr	r3, [r6, #4]
   1e524:	cmp	r3, #0
   1e528:	ble	1f2b8 <ReadDataSlab2+0x1254>
   1e52c:	mov	fp, #0
   1e530:	b	1e5b8 <ReadDataSlab2+0x554>
   1e534:	ldr	r1, [r8, #4]
   1e538:	cmp	r1, #1
   1e53c:	bne	1e4c8 <ReadDataSlab2+0x464>
   1e540:	ldr	r2, [r6, #4]
   1e544:	mul	r3, r2, r3
   1e548:	ldr	r2, [sp]
   1e54c:	mov	r1, r4
   1e550:	mov	r0, r5
   1e554:	bl	80c4 <ReadInt64Data>
   1e558:	mov	r8, #0
   1e55c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e560:	ldr	r0, [pc, #3072]	; 1f168 <ReadDataSlab2+0x1104>
   1e564:	add	r0, pc, r0
   1e568:	bl	161c <Mat_Critical@plt>
   1e56c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e570:	ldr	r0, [pc, #3060]	; 1f16c <ReadDataSlab2+0x1108>
   1e574:	add	r0, pc, r0
   1e578:	bl	161c <Mat_Critical@plt>
   1e57c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e580:	ldr	r0, [r5]
   1e584:	bl	14b4 <ftell@plt>
   1e588:	cmn	r0, #1
   1e58c:	beq	1e638 <ReadDataSlab2+0x5d4>
   1e590:	ldr	r3, [sp, #12]
   1e594:	sub	r1, r3, r0
   1e598:	mov	r2, #1
   1e59c:	add	r1, r1, r8
   1e5a0:	ldr	r0, [r5]
   1e5a4:	bl	1694 <fseek@plt>
   1e5a8:	add	fp, fp, #1
   1e5ac:	ldr	r3, [r6, #4]
   1e5b0:	cmp	r3, fp
   1e5b4:	ble	1e650 <ReadDataSlab2+0x5ec>
   1e5b8:	ldr	r0, [r5]
   1e5bc:	bl	14b4 <ftell@plt>
   1e5c0:	mov	r8, r0
   1e5c4:	cmn	r0, #1
   1e5c8:	beq	1e570 <ReadDataSlab2+0x50c>
   1e5cc:	ldr	r1, [r7]
   1e5d0:	mov	r2, #1
   1e5d4:	ldr	r3, [sp, #4]
   1e5d8:	mul	r1, r1, r3
   1e5dc:	ldr	r0, [r5]
   1e5e0:	bl	1694 <fseek@plt>
   1e5e4:	ldr	r3, [r6]
   1e5e8:	cmp	r3, #0
   1e5ec:	ble	1e580 <ReadDataSlab2+0x51c>
   1e5f0:	mov	r9, #0
   1e5f4:	mov	r1, r4
   1e5f8:	add	sl, r1, #8
   1e5fc:	mov	r3, #1
   1e600:	ldr	r2, [sp]
   1e604:	mov	r0, r5
   1e608:	bl	80c4 <ReadInt64Data>
   1e60c:	mov	r2, #1
   1e610:	ldr	r1, [sp, #8]
   1e614:	ldr	r0, [r5]
   1e618:	bl	1694 <fseek@plt>
   1e61c:	add	r9, r9, #1
   1e620:	mov	r1, sl
   1e624:	ldr	r3, [r6]
   1e628:	cmp	r3, r9
   1e62c:	bgt	1e5f8 <ReadDataSlab2+0x594>
   1e630:	mov	r4, sl
   1e634:	b	1e580 <ReadDataSlab2+0x51c>
   1e638:	mov	r9, r0
   1e63c:	ldr	r0, [pc, #2860]	; 1f170 <ReadDataSlab2+0x110c>
   1e640:	add	r0, pc, r0
   1e644:	bl	161c <Mat_Critical@plt>
   1e648:	mov	r8, r9
   1e64c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e650:	mov	r8, #0
   1e654:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e658:	ldr	r2, [r8]
   1e65c:	cmp	r2, #1
   1e660:	bne	1e678 <ReadDataSlab2+0x614>
   1e664:	ldr	r3, [r6]
   1e668:	ldr	r1, [sp, #56]	; 0x38
   1e66c:	ldr	r1, [r1]
   1e670:	cmp	r3, r1
   1e674:	beq	1e6e4 <ReadDataSlab2+0x680>
   1e678:	sub	r2, r2, #1
   1e67c:	mul	r3, r9, r2
   1e680:	str	r3, [sp, #8]
   1e684:	ldr	r2, [r8, #4]
   1e688:	ldr	r3, [sp, #56]	; 0x38
   1e68c:	ldr	r3, [r3]
   1e690:	mul	r3, r3, r2
   1e694:	mul	r3, r9, r3
   1e698:	str	r3, [sp, #12]
   1e69c:	ldr	r0, [r5]
   1e6a0:	bl	14b4 <ftell@plt>
   1e6a4:	mov	r8, r0
   1e6a8:	cmn	r0, #1
   1e6ac:	beq	1e710 <ReadDataSlab2+0x6ac>
   1e6b0:	ldr	r3, [r7, #4]
   1e6b4:	ldr	r2, [sp, #56]	; 0x38
   1e6b8:	ldr	r1, [r2]
   1e6bc:	mul	r1, r1, r3
   1e6c0:	mov	r2, #1
   1e6c4:	mul	r1, r9, r1
   1e6c8:	ldr	r0, [r5]
   1e6cc:	bl	1694 <fseek@plt>
   1e6d0:	ldr	r3, [r6, #4]
   1e6d4:	cmp	r3, #0
   1e6d8:	ble	1f2c0 <ReadDataSlab2+0x125c>
   1e6dc:	mov	fp, #0
   1e6e0:	b	1e768 <ReadDataSlab2+0x704>
   1e6e4:	ldr	r1, [r8, #4]
   1e6e8:	cmp	r1, #1
   1e6ec:	bne	1e678 <ReadDataSlab2+0x614>
   1e6f0:	ldr	r2, [r6, #4]
   1e6f4:	mul	r3, r2, r3
   1e6f8:	ldr	r2, [sp]
   1e6fc:	mov	r1, r4
   1e700:	mov	r0, r5
   1e704:	bl	9dd8 <ReadUInt64Data>
   1e708:	mov	r8, #0
   1e70c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e710:	ldr	r0, [pc, #2652]	; 1f174 <ReadDataSlab2+0x1110>
   1e714:	add	r0, pc, r0
   1e718:	bl	161c <Mat_Critical@plt>
   1e71c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e720:	ldr	r0, [pc, #2640]	; 1f178 <ReadDataSlab2+0x1114>
   1e724:	add	r0, pc, r0
   1e728:	bl	161c <Mat_Critical@plt>
   1e72c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e730:	ldr	r0, [r5]
   1e734:	bl	14b4 <ftell@plt>
   1e738:	cmn	r0, #1
   1e73c:	beq	1e7e8 <ReadDataSlab2+0x784>
   1e740:	ldr	r3, [sp, #12]
   1e744:	sub	r1, r3, r0
   1e748:	mov	r2, #1
   1e74c:	add	r1, r1, r8
   1e750:	ldr	r0, [r5]
   1e754:	bl	1694 <fseek@plt>
   1e758:	add	fp, fp, #1
   1e75c:	ldr	r3, [r6, #4]
   1e760:	cmp	r3, fp
   1e764:	ble	1e800 <ReadDataSlab2+0x79c>
   1e768:	ldr	r0, [r5]
   1e76c:	bl	14b4 <ftell@plt>
   1e770:	mov	r8, r0
   1e774:	cmn	r0, #1
   1e778:	beq	1e720 <ReadDataSlab2+0x6bc>
   1e77c:	ldr	r1, [r7]
   1e780:	mov	r2, #1
   1e784:	ldr	r3, [sp, #4]
   1e788:	mul	r1, r1, r3
   1e78c:	ldr	r0, [r5]
   1e790:	bl	1694 <fseek@plt>
   1e794:	ldr	r3, [r6]
   1e798:	cmp	r3, #0
   1e79c:	ble	1e730 <ReadDataSlab2+0x6cc>
   1e7a0:	mov	r9, #0
   1e7a4:	mov	r1, r4
   1e7a8:	add	sl, r1, #8
   1e7ac:	mov	r3, #1
   1e7b0:	ldr	r2, [sp]
   1e7b4:	mov	r0, r5
   1e7b8:	bl	9dd8 <ReadUInt64Data>
   1e7bc:	mov	r2, #1
   1e7c0:	ldr	r1, [sp, #8]
   1e7c4:	ldr	r0, [r5]
   1e7c8:	bl	1694 <fseek@plt>
   1e7cc:	add	r9, r9, #1
   1e7d0:	mov	r1, sl
   1e7d4:	ldr	r3, [r6]
   1e7d8:	cmp	r3, r9
   1e7dc:	bgt	1e7a8 <ReadDataSlab2+0x744>
   1e7e0:	mov	r4, sl
   1e7e4:	b	1e730 <ReadDataSlab2+0x6cc>
   1e7e8:	mov	r9, r0
   1e7ec:	ldr	r0, [pc, #2440]	; 1f17c <ReadDataSlab2+0x1118>
   1e7f0:	add	r0, pc, r0
   1e7f4:	bl	161c <Mat_Critical@plt>
   1e7f8:	mov	r8, r9
   1e7fc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e800:	mov	r8, #0
   1e804:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e808:	ldr	r2, [r8]
   1e80c:	cmp	r2, #1
   1e810:	bne	1e828 <ReadDataSlab2+0x7c4>
   1e814:	ldr	r3, [r6]
   1e818:	ldr	r1, [sp, #56]	; 0x38
   1e81c:	ldr	r1, [r1]
   1e820:	cmp	r3, r1
   1e824:	beq	1e894 <ReadDataSlab2+0x830>
   1e828:	sub	r2, r2, #1
   1e82c:	mul	r3, r9, r2
   1e830:	str	r3, [sp, #8]
   1e834:	ldr	r2, [r8, #4]
   1e838:	ldr	r3, [sp, #56]	; 0x38
   1e83c:	ldr	r3, [r3]
   1e840:	mul	r3, r3, r2
   1e844:	mul	r3, r9, r3
   1e848:	str	r3, [sp, #12]
   1e84c:	ldr	r0, [r5]
   1e850:	bl	14b4 <ftell@plt>
   1e854:	mov	r8, r0
   1e858:	cmn	r0, #1
   1e85c:	beq	1e8c0 <ReadDataSlab2+0x85c>
   1e860:	ldr	r3, [r7, #4]
   1e864:	ldr	r2, [sp, #56]	; 0x38
   1e868:	ldr	r1, [r2]
   1e86c:	mul	r1, r1, r3
   1e870:	mov	r2, #1
   1e874:	mul	r1, r9, r1
   1e878:	ldr	r0, [r5]
   1e87c:	bl	1694 <fseek@plt>
   1e880:	ldr	r3, [r6, #4]
   1e884:	cmp	r3, #0
   1e888:	ble	1f2c8 <ReadDataSlab2+0x1264>
   1e88c:	mov	fp, #0
   1e890:	b	1e918 <ReadDataSlab2+0x8b4>
   1e894:	ldr	r1, [r8, #4]
   1e898:	cmp	r1, #1
   1e89c:	bne	1e828 <ReadDataSlab2+0x7c4>
   1e8a0:	ldr	r2, [r6, #4]
   1e8a4:	mul	r3, r2, r3
   1e8a8:	ldr	r2, [sp]
   1e8ac:	mov	r1, r4
   1e8b0:	mov	r0, r5
   1e8b4:	bl	baec <ReadInt32Data>
   1e8b8:	mov	r8, #0
   1e8bc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e8c0:	ldr	r0, [pc, #2232]	; 1f180 <ReadDataSlab2+0x111c>
   1e8c4:	add	r0, pc, r0
   1e8c8:	bl	161c <Mat_Critical@plt>
   1e8cc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e8d0:	ldr	r0, [pc, #2220]	; 1f184 <ReadDataSlab2+0x1120>
   1e8d4:	add	r0, pc, r0
   1e8d8:	bl	161c <Mat_Critical@plt>
   1e8dc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e8e0:	ldr	r0, [r5]
   1e8e4:	bl	14b4 <ftell@plt>
   1e8e8:	cmn	r0, #1
   1e8ec:	beq	1e998 <ReadDataSlab2+0x934>
   1e8f0:	ldr	r3, [sp, #12]
   1e8f4:	sub	r1, r3, r0
   1e8f8:	mov	r2, #1
   1e8fc:	add	r1, r1, r8
   1e900:	ldr	r0, [r5]
   1e904:	bl	1694 <fseek@plt>
   1e908:	add	fp, fp, #1
   1e90c:	ldr	r3, [r6, #4]
   1e910:	cmp	r3, fp
   1e914:	ble	1e9b0 <ReadDataSlab2+0x94c>
   1e918:	ldr	r0, [r5]
   1e91c:	bl	14b4 <ftell@plt>
   1e920:	mov	r8, r0
   1e924:	cmn	r0, #1
   1e928:	beq	1e8d0 <ReadDataSlab2+0x86c>
   1e92c:	ldr	r1, [r7]
   1e930:	mov	r2, #1
   1e934:	ldr	r3, [sp, #4]
   1e938:	mul	r1, r1, r3
   1e93c:	ldr	r0, [r5]
   1e940:	bl	1694 <fseek@plt>
   1e944:	ldr	r3, [r6]
   1e948:	cmp	r3, #0
   1e94c:	ble	1e8e0 <ReadDataSlab2+0x87c>
   1e950:	mov	r9, #0
   1e954:	mov	r1, r4
   1e958:	add	sl, r1, #4
   1e95c:	mov	r3, #1
   1e960:	ldr	r2, [sp]
   1e964:	mov	r0, r5
   1e968:	bl	baec <ReadInt32Data>
   1e96c:	mov	r2, #1
   1e970:	ldr	r1, [sp, #8]
   1e974:	ldr	r0, [r5]
   1e978:	bl	1694 <fseek@plt>
   1e97c:	add	r9, r9, #1
   1e980:	mov	r1, sl
   1e984:	ldr	r3, [r6]
   1e988:	cmp	r3, r9
   1e98c:	bgt	1e958 <ReadDataSlab2+0x8f4>
   1e990:	mov	r4, sl
   1e994:	b	1e8e0 <ReadDataSlab2+0x87c>
   1e998:	mov	r9, r0
   1e99c:	ldr	r0, [pc, #2020]	; 1f188 <ReadDataSlab2+0x1124>
   1e9a0:	add	r0, pc, r0
   1e9a4:	bl	161c <Mat_Critical@plt>
   1e9a8:	mov	r8, r9
   1e9ac:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e9b0:	mov	r8, #0
   1e9b4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1e9b8:	ldr	r2, [r8]
   1e9bc:	cmp	r2, #1
   1e9c0:	bne	1e9d8 <ReadDataSlab2+0x974>
   1e9c4:	ldr	r3, [r6]
   1e9c8:	ldr	r1, [sp, #56]	; 0x38
   1e9cc:	ldr	r1, [r1]
   1e9d0:	cmp	r3, r1
   1e9d4:	beq	1ea44 <ReadDataSlab2+0x9e0>
   1e9d8:	sub	r2, r2, #1
   1e9dc:	mul	r3, r9, r2
   1e9e0:	str	r3, [sp, #8]
   1e9e4:	ldr	r2, [r8, #4]
   1e9e8:	ldr	r3, [sp, #56]	; 0x38
   1e9ec:	ldr	r3, [r3]
   1e9f0:	mul	r3, r3, r2
   1e9f4:	mul	r3, r9, r3
   1e9f8:	str	r3, [sp, #12]
   1e9fc:	ldr	r0, [r5]
   1ea00:	bl	14b4 <ftell@plt>
   1ea04:	mov	r8, r0
   1ea08:	cmn	r0, #1
   1ea0c:	beq	1ea70 <ReadDataSlab2+0xa0c>
   1ea10:	ldr	r3, [r7, #4]
   1ea14:	ldr	r2, [sp, #56]	; 0x38
   1ea18:	ldr	r1, [r2]
   1ea1c:	mul	r1, r1, r3
   1ea20:	mov	r2, #1
   1ea24:	mul	r1, r9, r1
   1ea28:	ldr	r0, [r5]
   1ea2c:	bl	1694 <fseek@plt>
   1ea30:	ldr	r3, [r6, #4]
   1ea34:	cmp	r3, #0
   1ea38:	ble	1f2d0 <ReadDataSlab2+0x126c>
   1ea3c:	mov	fp, #0
   1ea40:	b	1eac8 <ReadDataSlab2+0xa64>
   1ea44:	ldr	r1, [r8, #4]
   1ea48:	cmp	r1, #1
   1ea4c:	bne	1e9d8 <ReadDataSlab2+0x974>
   1ea50:	ldr	r2, [r6, #4]
   1ea54:	mul	r3, r2, r3
   1ea58:	ldr	r2, [sp]
   1ea5c:	mov	r1, r4
   1ea60:	mov	r0, r5
   1ea64:	bl	d728 <ReadUInt32Data>
   1ea68:	mov	r8, #0
   1ea6c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ea70:	ldr	r0, [pc, #1812]	; 1f18c <ReadDataSlab2+0x1128>
   1ea74:	add	r0, pc, r0
   1ea78:	bl	161c <Mat_Critical@plt>
   1ea7c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ea80:	ldr	r0, [pc, #1800]	; 1f190 <ReadDataSlab2+0x112c>
   1ea84:	add	r0, pc, r0
   1ea88:	bl	161c <Mat_Critical@plt>
   1ea8c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ea90:	ldr	r0, [r5]
   1ea94:	bl	14b4 <ftell@plt>
   1ea98:	cmn	r0, #1
   1ea9c:	beq	1eb48 <ReadDataSlab2+0xae4>
   1eaa0:	ldr	r3, [sp, #12]
   1eaa4:	sub	r1, r3, r0
   1eaa8:	mov	r2, #1
   1eaac:	add	r1, r1, r8
   1eab0:	ldr	r0, [r5]
   1eab4:	bl	1694 <fseek@plt>
   1eab8:	add	fp, fp, #1
   1eabc:	ldr	r3, [r6, #4]
   1eac0:	cmp	r3, fp
   1eac4:	ble	1eb60 <ReadDataSlab2+0xafc>
   1eac8:	ldr	r0, [r5]
   1eacc:	bl	14b4 <ftell@plt>
   1ead0:	mov	r8, r0
   1ead4:	cmn	r0, #1
   1ead8:	beq	1ea80 <ReadDataSlab2+0xa1c>
   1eadc:	ldr	r1, [r7]
   1eae0:	mov	r2, #1
   1eae4:	ldr	r3, [sp, #4]
   1eae8:	mul	r1, r1, r3
   1eaec:	ldr	r0, [r5]
   1eaf0:	bl	1694 <fseek@plt>
   1eaf4:	ldr	r3, [r6]
   1eaf8:	cmp	r3, #0
   1eafc:	ble	1ea90 <ReadDataSlab2+0xa2c>
   1eb00:	mov	r9, #0
   1eb04:	mov	r1, r4
   1eb08:	add	sl, r1, #4
   1eb0c:	mov	r3, #1
   1eb10:	ldr	r2, [sp]
   1eb14:	mov	r0, r5
   1eb18:	bl	d728 <ReadUInt32Data>
   1eb1c:	mov	r2, #1
   1eb20:	ldr	r1, [sp, #8]
   1eb24:	ldr	r0, [r5]
   1eb28:	bl	1694 <fseek@plt>
   1eb2c:	add	r9, r9, #1
   1eb30:	mov	r1, sl
   1eb34:	ldr	r3, [r6]
   1eb38:	cmp	r3, r9
   1eb3c:	bgt	1eb08 <ReadDataSlab2+0xaa4>
   1eb40:	mov	r4, sl
   1eb44:	b	1ea90 <ReadDataSlab2+0xa2c>
   1eb48:	mov	r9, r0
   1eb4c:	ldr	r0, [pc, #1600]	; 1f194 <ReadDataSlab2+0x1130>
   1eb50:	add	r0, pc, r0
   1eb54:	bl	161c <Mat_Critical@plt>
   1eb58:	mov	r8, r9
   1eb5c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1eb60:	mov	r8, #0
   1eb64:	b	1e0e0 <ReadDataSlab2+0x7c>
   1eb68:	ldr	r2, [r8]
   1eb6c:	cmp	r2, #1
   1eb70:	bne	1eb88 <ReadDataSlab2+0xb24>
   1eb74:	ldr	r3, [r6]
   1eb78:	ldr	r1, [sp, #56]	; 0x38
   1eb7c:	ldr	r1, [r1]
   1eb80:	cmp	r3, r1
   1eb84:	beq	1ebf4 <ReadDataSlab2+0xb90>
   1eb88:	sub	r2, r2, #1
   1eb8c:	mul	r3, r9, r2
   1eb90:	str	r3, [sp, #8]
   1eb94:	ldr	r2, [r8, #4]
   1eb98:	ldr	r3, [sp, #56]	; 0x38
   1eb9c:	ldr	r3, [r3]
   1eba0:	mul	r3, r3, r2
   1eba4:	mul	r3, r9, r3
   1eba8:	str	r3, [sp, #12]
   1ebac:	ldr	r0, [r5]
   1ebb0:	bl	14b4 <ftell@plt>
   1ebb4:	mov	r8, r0
   1ebb8:	cmn	r0, #1
   1ebbc:	beq	1ec20 <ReadDataSlab2+0xbbc>
   1ebc0:	ldr	r3, [r7, #4]
   1ebc4:	ldr	r2, [sp, #56]	; 0x38
   1ebc8:	ldr	r1, [r2]
   1ebcc:	mul	r1, r1, r3
   1ebd0:	mov	r2, #1
   1ebd4:	mul	r1, r9, r1
   1ebd8:	ldr	r0, [r5]
   1ebdc:	bl	1694 <fseek@plt>
   1ebe0:	ldr	r3, [r6, #4]
   1ebe4:	cmp	r3, #0
   1ebe8:	ble	1f2d8 <ReadDataSlab2+0x1274>
   1ebec:	mov	fp, #0
   1ebf0:	b	1ec78 <ReadDataSlab2+0xc14>
   1ebf4:	ldr	r1, [r8, #4]
   1ebf8:	cmp	r1, #1
   1ebfc:	bne	1eb88 <ReadDataSlab2+0xb24>
   1ec00:	ldr	r2, [r6, #4]
   1ec04:	mul	r3, r2, r3
   1ec08:	ldr	r2, [sp]
   1ec0c:	mov	r1, r4
   1ec10:	mov	r0, r5
   1ec14:	bl	f364 <ReadInt16Data>
   1ec18:	mov	r8, #0
   1ec1c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ec20:	ldr	r0, [pc, #1392]	; 1f198 <ReadDataSlab2+0x1134>
   1ec24:	add	r0, pc, r0
   1ec28:	bl	161c <Mat_Critical@plt>
   1ec2c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ec30:	ldr	r0, [pc, #1380]	; 1f19c <ReadDataSlab2+0x1138>
   1ec34:	add	r0, pc, r0
   1ec38:	bl	161c <Mat_Critical@plt>
   1ec3c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ec40:	ldr	r0, [r5]
   1ec44:	bl	14b4 <ftell@plt>
   1ec48:	cmn	r0, #1
   1ec4c:	beq	1ecf8 <ReadDataSlab2+0xc94>
   1ec50:	ldr	r3, [sp, #12]
   1ec54:	sub	r1, r3, r0
   1ec58:	mov	r2, #1
   1ec5c:	add	r1, r1, r8
   1ec60:	ldr	r0, [r5]
   1ec64:	bl	1694 <fseek@plt>
   1ec68:	add	fp, fp, #1
   1ec6c:	ldr	r3, [r6, #4]
   1ec70:	cmp	r3, fp
   1ec74:	ble	1ed10 <ReadDataSlab2+0xcac>
   1ec78:	ldr	r0, [r5]
   1ec7c:	bl	14b4 <ftell@plt>
   1ec80:	mov	r8, r0
   1ec84:	cmn	r0, #1
   1ec88:	beq	1ec30 <ReadDataSlab2+0xbcc>
   1ec8c:	ldr	r1, [r7]
   1ec90:	mov	r2, #1
   1ec94:	ldr	r3, [sp, #4]
   1ec98:	mul	r1, r1, r3
   1ec9c:	ldr	r0, [r5]
   1eca0:	bl	1694 <fseek@plt>
   1eca4:	ldr	r3, [r6]
   1eca8:	cmp	r3, #0
   1ecac:	ble	1ec40 <ReadDataSlab2+0xbdc>
   1ecb0:	mov	r9, #0
   1ecb4:	mov	r1, r4
   1ecb8:	add	sl, r1, #2
   1ecbc:	mov	r3, #1
   1ecc0:	ldr	r2, [sp]
   1ecc4:	mov	r0, r5
   1ecc8:	bl	f364 <ReadInt16Data>
   1eccc:	mov	r2, #1
   1ecd0:	ldr	r1, [sp, #8]
   1ecd4:	ldr	r0, [r5]
   1ecd8:	bl	1694 <fseek@plt>
   1ecdc:	add	r9, r9, #1
   1ece0:	mov	r1, sl
   1ece4:	ldr	r3, [r6]
   1ece8:	cmp	r3, r9
   1ecec:	bgt	1ecb8 <ReadDataSlab2+0xc54>
   1ecf0:	mov	r4, sl
   1ecf4:	b	1ec40 <ReadDataSlab2+0xbdc>
   1ecf8:	mov	r9, r0
   1ecfc:	ldr	r0, [pc, #1180]	; 1f1a0 <ReadDataSlab2+0x113c>
   1ed00:	add	r0, pc, r0
   1ed04:	bl	161c <Mat_Critical@plt>
   1ed08:	mov	r8, r9
   1ed0c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ed10:	mov	r8, #0
   1ed14:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ed18:	ldr	r2, [r8]
   1ed1c:	cmp	r2, #1
   1ed20:	bne	1ed38 <ReadDataSlab2+0xcd4>
   1ed24:	ldr	r3, [r6]
   1ed28:	ldr	r1, [sp, #56]	; 0x38
   1ed2c:	ldr	r1, [r1]
   1ed30:	cmp	r3, r1
   1ed34:	beq	1eda4 <ReadDataSlab2+0xd40>
   1ed38:	sub	r2, r2, #1
   1ed3c:	mul	r3, r9, r2
   1ed40:	str	r3, [sp, #8]
   1ed44:	ldr	r2, [r8, #4]
   1ed48:	ldr	r3, [sp, #56]	; 0x38
   1ed4c:	ldr	r3, [r3]
   1ed50:	mul	r3, r3, r2
   1ed54:	mul	r3, r9, r3
   1ed58:	str	r3, [sp, #12]
   1ed5c:	ldr	r0, [r5]
   1ed60:	bl	14b4 <ftell@plt>
   1ed64:	mov	r8, r0
   1ed68:	cmn	r0, #1
   1ed6c:	beq	1edd0 <ReadDataSlab2+0xd6c>
   1ed70:	ldr	r3, [r7, #4]
   1ed74:	ldr	r2, [sp, #56]	; 0x38
   1ed78:	ldr	r1, [r2]
   1ed7c:	mul	r1, r1, r3
   1ed80:	mov	r2, #1
   1ed84:	mul	r1, r9, r1
   1ed88:	ldr	r0, [r5]
   1ed8c:	bl	1694 <fseek@plt>
   1ed90:	ldr	r3, [r6, #4]
   1ed94:	cmp	r3, #0
   1ed98:	ble	1f2e0 <ReadDataSlab2+0x127c>
   1ed9c:	mov	fp, #0
   1eda0:	b	1ee28 <ReadDataSlab2+0xdc4>
   1eda4:	ldr	r1, [r8, #4]
   1eda8:	cmp	r1, #1
   1edac:	bne	1ed38 <ReadDataSlab2+0xcd4>
   1edb0:	ldr	r2, [r6, #4]
   1edb4:	mul	r3, r2, r3
   1edb8:	ldr	r2, [sp]
   1edbc:	mov	r1, r4
   1edc0:	mov	r0, r5
   1edc4:	bl	10fd0 <ReadUInt16Data>
   1edc8:	mov	r8, #0
   1edcc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1edd0:	ldr	r0, [pc, #972]	; 1f1a4 <ReadDataSlab2+0x1140>
   1edd4:	add	r0, pc, r0
   1edd8:	bl	161c <Mat_Critical@plt>
   1eddc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ede0:	ldr	r0, [pc, #960]	; 1f1a8 <ReadDataSlab2+0x1144>
   1ede4:	add	r0, pc, r0
   1ede8:	bl	161c <Mat_Critical@plt>
   1edec:	b	1e0e0 <ReadDataSlab2+0x7c>
   1edf0:	ldr	r0, [r5]
   1edf4:	bl	14b4 <ftell@plt>
   1edf8:	cmn	r0, #1
   1edfc:	beq	1eea8 <ReadDataSlab2+0xe44>
   1ee00:	ldr	r3, [sp, #12]
   1ee04:	sub	r1, r3, r0
   1ee08:	mov	r2, #1
   1ee0c:	add	r1, r1, r8
   1ee10:	ldr	r0, [r5]
   1ee14:	bl	1694 <fseek@plt>
   1ee18:	add	fp, fp, #1
   1ee1c:	ldr	r3, [r6, #4]
   1ee20:	cmp	r3, fp
   1ee24:	ble	1eec0 <ReadDataSlab2+0xe5c>
   1ee28:	ldr	r0, [r5]
   1ee2c:	bl	14b4 <ftell@plt>
   1ee30:	mov	r8, r0
   1ee34:	cmn	r0, #1
   1ee38:	beq	1ede0 <ReadDataSlab2+0xd7c>
   1ee3c:	ldr	r1, [r7]
   1ee40:	mov	r2, #1
   1ee44:	ldr	r3, [sp, #4]
   1ee48:	mul	r1, r1, r3
   1ee4c:	ldr	r0, [r5]
   1ee50:	bl	1694 <fseek@plt>
   1ee54:	ldr	r3, [r6]
   1ee58:	cmp	r3, #0
   1ee5c:	ble	1edf0 <ReadDataSlab2+0xd8c>
   1ee60:	mov	r9, #0
   1ee64:	mov	r1, r4
   1ee68:	add	sl, r1, #2
   1ee6c:	mov	r3, #1
   1ee70:	ldr	r2, [sp]
   1ee74:	mov	r0, r5
   1ee78:	bl	10fd0 <ReadUInt16Data>
   1ee7c:	mov	r2, #1
   1ee80:	ldr	r1, [sp, #8]
   1ee84:	ldr	r0, [r5]
   1ee88:	bl	1694 <fseek@plt>
   1ee8c:	add	r9, r9, #1
   1ee90:	mov	r1, sl
   1ee94:	ldr	r3, [r6]
   1ee98:	cmp	r3, r9
   1ee9c:	bgt	1ee68 <ReadDataSlab2+0xe04>
   1eea0:	mov	r4, sl
   1eea4:	b	1edf0 <ReadDataSlab2+0xd8c>
   1eea8:	mov	r9, r0
   1eeac:	ldr	r0, [pc, #760]	; 1f1ac <ReadDataSlab2+0x1148>
   1eeb0:	add	r0, pc, r0
   1eeb4:	bl	161c <Mat_Critical@plt>
   1eeb8:	mov	r8, r9
   1eebc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1eec0:	mov	r8, #0
   1eec4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1eec8:	ldr	r2, [r8]
   1eecc:	cmp	r2, #1
   1eed0:	bne	1eee8 <ReadDataSlab2+0xe84>
   1eed4:	ldr	r3, [r6]
   1eed8:	ldr	r1, [sp, #56]	; 0x38
   1eedc:	ldr	r1, [r1]
   1eee0:	cmp	r3, r1
   1eee4:	beq	1ef54 <ReadDataSlab2+0xef0>
   1eee8:	sub	r2, r2, #1
   1eeec:	mul	r3, r9, r2
   1eef0:	str	r3, [sp, #8]
   1eef4:	ldr	r2, [r8, #4]
   1eef8:	ldr	r3, [sp, #56]	; 0x38
   1eefc:	ldr	r3, [r3]
   1ef00:	mul	r3, r3, r2
   1ef04:	mul	r3, r9, r3
   1ef08:	str	r3, [sp, #12]
   1ef0c:	ldr	r0, [r5]
   1ef10:	bl	14b4 <ftell@plt>
   1ef14:	mov	r8, r0
   1ef18:	cmn	r0, #1
   1ef1c:	beq	1ef80 <ReadDataSlab2+0xf1c>
   1ef20:	ldr	r3, [r7, #4]
   1ef24:	ldr	r2, [sp, #56]	; 0x38
   1ef28:	ldr	r1, [r2]
   1ef2c:	mul	r1, r1, r3
   1ef30:	mov	r2, #1
   1ef34:	mul	r1, r9, r1
   1ef38:	ldr	r0, [r5]
   1ef3c:	bl	1694 <fseek@plt>
   1ef40:	ldr	r3, [r6, #4]
   1ef44:	cmp	r3, #0
   1ef48:	ble	1f2e8 <ReadDataSlab2+0x1284>
   1ef4c:	mov	fp, #0
   1ef50:	b	1efd8 <ReadDataSlab2+0xf74>
   1ef54:	ldr	r1, [r8, #4]
   1ef58:	cmp	r1, #1
   1ef5c:	bne	1eee8 <ReadDataSlab2+0xe84>
   1ef60:	ldr	r2, [r6, #4]
   1ef64:	mul	r3, r2, r3
   1ef68:	ldr	r2, [sp]
   1ef6c:	mov	r1, r4
   1ef70:	mov	r0, r5
   1ef74:	bl	12c3c <ReadInt8Data>
   1ef78:	mov	r8, #0
   1ef7c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ef80:	ldr	r0, [pc, #552]	; 1f1b0 <ReadDataSlab2+0x114c>
   1ef84:	add	r0, pc, r0
   1ef88:	bl	161c <Mat_Critical@plt>
   1ef8c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1ef90:	ldr	r0, [pc, #540]	; 1f1b4 <ReadDataSlab2+0x1150>
   1ef94:	add	r0, pc, r0
   1ef98:	bl	161c <Mat_Critical@plt>
   1ef9c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1efa0:	ldr	r0, [r5]
   1efa4:	bl	14b4 <ftell@plt>
   1efa8:	cmn	r0, #1
   1efac:	beq	1f058 <ReadDataSlab2+0xff4>
   1efb0:	ldr	r3, [sp, #12]
   1efb4:	sub	r1, r3, r0
   1efb8:	mov	r2, #1
   1efbc:	add	r1, r1, r8
   1efc0:	ldr	r0, [r5]
   1efc4:	bl	1694 <fseek@plt>
   1efc8:	add	fp, fp, #1
   1efcc:	ldr	r3, [r6, #4]
   1efd0:	cmp	r3, fp
   1efd4:	ble	1f070 <ReadDataSlab2+0x100c>
   1efd8:	ldr	r0, [r5]
   1efdc:	bl	14b4 <ftell@plt>
   1efe0:	mov	r8, r0
   1efe4:	cmn	r0, #1
   1efe8:	beq	1ef90 <ReadDataSlab2+0xf2c>
   1efec:	ldr	r1, [r7]
   1eff0:	mov	r2, #1
   1eff4:	ldr	r3, [sp, #4]
   1eff8:	mul	r1, r1, r3
   1effc:	ldr	r0, [r5]
   1f000:	bl	1694 <fseek@plt>
   1f004:	ldr	r3, [r6]
   1f008:	cmp	r3, #0
   1f00c:	ble	1efa0 <ReadDataSlab2+0xf3c>
   1f010:	mov	r9, #0
   1f014:	mov	r1, r4
   1f018:	add	sl, r1, #1
   1f01c:	mov	r3, #1
   1f020:	ldr	r2, [sp]
   1f024:	mov	r0, r5
   1f028:	bl	12c3c <ReadInt8Data>
   1f02c:	mov	r2, #1
   1f030:	ldr	r1, [sp, #8]
   1f034:	ldr	r0, [r5]
   1f038:	bl	1694 <fseek@plt>
   1f03c:	add	r9, r9, #1
   1f040:	mov	r1, sl
   1f044:	ldr	r3, [r6]
   1f048:	cmp	r3, r9
   1f04c:	bgt	1f018 <ReadDataSlab2+0xfb4>
   1f050:	mov	r4, sl
   1f054:	b	1efa0 <ReadDataSlab2+0xf3c>
   1f058:	mov	r9, r0
   1f05c:	ldr	r0, [pc, #340]	; 1f1b8 <ReadDataSlab2+0x1154>
   1f060:	add	r0, pc, r0
   1f064:	bl	161c <Mat_Critical@plt>
   1f068:	mov	r8, r9
   1f06c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f070:	mov	r8, #0
   1f074:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f078:	ldr	r2, [r8]
   1f07c:	cmp	r2, #1
   1f080:	bne	1f098 <ReadDataSlab2+0x1034>
   1f084:	ldr	r3, [r6]
   1f088:	ldr	r1, [sp, #56]	; 0x38
   1f08c:	ldr	r1, [r1]
   1f090:	cmp	r3, r1
   1f094:	beq	1f104 <ReadDataSlab2+0x10a0>
   1f098:	sub	r2, r2, #1
   1f09c:	mul	r3, r9, r2
   1f0a0:	str	r3, [sp, #8]
   1f0a4:	ldr	r2, [r8, #4]
   1f0a8:	ldr	r3, [sp, #56]	; 0x38
   1f0ac:	ldr	r3, [r3]
   1f0b0:	mul	r3, r3, r2
   1f0b4:	mul	r3, r9, r3
   1f0b8:	str	r3, [sp, #12]
   1f0bc:	ldr	r0, [r5]
   1f0c0:	bl	14b4 <ftell@plt>
   1f0c4:	mov	r8, r0
   1f0c8:	cmn	r0, #1
   1f0cc:	beq	1f130 <ReadDataSlab2+0x10cc>
   1f0d0:	ldr	r3, [r7, #4]
   1f0d4:	ldr	r2, [sp, #56]	; 0x38
   1f0d8:	ldr	r1, [r2]
   1f0dc:	mul	r1, r1, r3
   1f0e0:	mov	r2, #1
   1f0e4:	mul	r1, r9, r1
   1f0e8:	ldr	r0, [r5]
   1f0ec:	bl	1694 <fseek@plt>
   1f0f0:	ldr	r3, [r6, #4]
   1f0f4:	cmp	r3, #0
   1f0f8:	ble	1f2f0 <ReadDataSlab2+0x128c>
   1f0fc:	mov	fp, #0
   1f100:	b	1f200 <ReadDataSlab2+0x119c>
   1f104:	ldr	r1, [r8, #4]
   1f108:	cmp	r1, #1
   1f10c:	bne	1f098 <ReadDataSlab2+0x1034>
   1f110:	ldr	r2, [r6, #4]
   1f114:	mul	r3, r2, r3
   1f118:	ldr	r2, [sp]
   1f11c:	mov	r1, r4
   1f120:	mov	r0, r5
   1f124:	bl	14860 <ReadUInt8Data>
   1f128:	mov	r8, #0
   1f12c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f130:	ldr	r0, [pc, #132]	; 1f1bc <ReadDataSlab2+0x1158>
   1f134:	add	r0, pc, r0
   1f138:	bl	161c <Mat_Critical@plt>
   1f13c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f140:	ldr	r0, [pc, #120]	; 1f1c0 <ReadDataSlab2+0x115c>
   1f144:	add	r0, pc, r0
   1f148:	bl	161c <Mat_Critical@plt>
   1f14c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f150:	.word	0x00031224
   1f154:	.word	0x00031214
   1f158:	.word	0x00031148
   1f15c:	.word	0x00031074
   1f160:	.word	0x00031064
   1f164:	.word	0x00030f98
   1f168:	.word	0x00030ec4
   1f16c:	.word	0x00030eb4
   1f170:	.word	0x00030de8
   1f174:	.word	0x00030d14
   1f178:	.word	0x00030d04
   1f17c:	.word	0x00030c38
   1f180:	.word	0x00030b64
   1f184:	.word	0x00030b54
   1f188:	.word	0x00030a88
   1f18c:	.word	0x000309b4
   1f190:	.word	0x000309a4
   1f194:	.word	0x000308d8
   1f198:	.word	0x00030804
   1f19c:	.word	0x000307f4
   1f1a0:	.word	0x00030728
   1f1a4:	.word	0x00030654
   1f1a8:	.word	0x00030644
   1f1ac:	.word	0x00030578
   1f1b0:	.word	0x000304a4
   1f1b4:	.word	0x00030494
   1f1b8:	.word	0x000303c8
   1f1bc:	.word	0x000302f4
   1f1c0:	.word	0x000302e4
   1f1c4:	.word	0x000301a0
   1f1c8:	ldr	r0, [r5]
   1f1cc:	bl	14b4 <ftell@plt>
   1f1d0:	cmn	r0, #1
   1f1d4:	beq	1f280 <ReadDataSlab2+0x121c>
   1f1d8:	ldr	r3, [sp, #12]
   1f1dc:	sub	r1, r3, r0
   1f1e0:	mov	r2, #1
   1f1e4:	add	r1, r1, r8
   1f1e8:	ldr	r0, [r5]
   1f1ec:	bl	1694 <fseek@plt>
   1f1f0:	add	fp, fp, #1
   1f1f4:	ldr	r3, [r6, #4]
   1f1f8:	cmp	r3, fp
   1f1fc:	ble	1f298 <ReadDataSlab2+0x1234>
   1f200:	ldr	r0, [r5]
   1f204:	bl	14b4 <ftell@plt>
   1f208:	mov	r8, r0
   1f20c:	cmn	r0, #1
   1f210:	beq	1f140 <ReadDataSlab2+0x10dc>
   1f214:	ldr	r1, [r7]
   1f218:	mov	r2, #1
   1f21c:	ldr	r3, [sp, #4]
   1f220:	mul	r1, r1, r3
   1f224:	ldr	r0, [r5]
   1f228:	bl	1694 <fseek@plt>
   1f22c:	ldr	r3, [r6]
   1f230:	cmp	r3, #0
   1f234:	ble	1f1c8 <ReadDataSlab2+0x1164>
   1f238:	mov	r9, #0
   1f23c:	mov	r1, r4
   1f240:	add	sl, r1, #1
   1f244:	mov	r3, #1
   1f248:	ldr	r2, [sp]
   1f24c:	mov	r0, r5
   1f250:	bl	14860 <ReadUInt8Data>
   1f254:	mov	r2, #1
   1f258:	ldr	r1, [sp, #8]
   1f25c:	ldr	r0, [r5]
   1f260:	bl	1694 <fseek@plt>
   1f264:	add	r9, r9, #1
   1f268:	mov	r1, sl
   1f26c:	ldr	r3, [r6]
   1f270:	cmp	r3, r9
   1f274:	bgt	1f240 <ReadDataSlab2+0x11dc>
   1f278:	mov	r4, sl
   1f27c:	b	1f1c8 <ReadDataSlab2+0x1164>
   1f280:	mov	r9, r0
   1f284:	ldr	r0, [pc, #-200]	; 1f1c4 <ReadDataSlab2+0x1160>
   1f288:	add	r0, pc, r0
   1f28c:	bl	161c <Mat_Critical@plt>
   1f290:	mov	r8, r9
   1f294:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f298:	mov	r8, #0
   1f29c:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2a0:	mov	r8, #0
   1f2a4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2a8:	mov	r8, #0
   1f2ac:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2b0:	mov	r8, #0
   1f2b4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2b8:	mov	r8, #0
   1f2bc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2c0:	mov	r8, #0
   1f2c4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2c8:	mov	r8, #0
   1f2cc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2d0:	mov	r8, #0
   1f2d4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2d8:	mov	r8, #0
   1f2dc:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2e0:	mov	r8, #0
   1f2e4:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2e8:	mov	r8, #0
   1f2ec:	b	1e0e0 <ReadDataSlab2+0x7c>
   1f2f0:	mov	r8, #0
   1f2f4:	b	1e0e0 <ReadDataSlab2+0x7c>

0001f2f8 <ReadCompressedDataSlab1>:
   1f2f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f2fc:	strd	r6, [sp, #8]
   1f300:	strd	r8, [sp, #16]
   1f304:	str	sl, [sp, #24]
   1f308:	str	lr, [sp, #28]
   1f30c:	sub	sp, sp, #64	; 0x40
   1f310:	mov	r4, r0
   1f314:	mov	r8, r1
   1f318:	mov	sl, r2
   1f31c:	mov	r6, r3
   1f320:	mov	r2, #56	; 0x38
   1f324:	mov	r1, #0
   1f328:	add	r0, sp, #8
   1f32c:	bl	15f8 <memset@plt>
   1f330:	cmp	sl, #0
   1f334:	cmpne	r4, #0
   1f338:	moveq	r5, #0
   1f33c:	beq	1f428 <ReadCompressedDataSlab1+0x130>
   1f340:	ldr	r3, [r4]
   1f344:	cmp	r3, #0
   1f348:	moveq	r5, #0
   1f34c:	beq	1f428 <ReadCompressedDataSlab1+0x130>
   1f350:	ldr	r7, [sp, #104]	; 0x68
   1f354:	sub	r7, r7, #1
   1f358:	mov	r1, r8
   1f35c:	add	r8, sp, #8
   1f360:	mov	r0, r8
   1f364:	bl	15bc <inflateCopy@plt>
   1f368:	ldr	r3, [sp, #100]	; 0x64
   1f36c:	ldr	r2, [sp, #96]	; 0x60
   1f370:	mov	r1, r8
   1f374:	mov	r0, r4
   1f378:	bl	2468 <InflateSkipData>
   1f37c:	sub	r6, r6, #6
   1f380:	cmp	r6, #9
   1f384:	addls	pc, pc, r6, lsl #2
   1f388:	b	1f9a0 <ReadCompressedDataSlab1+0x6a8>
   1f38c:	b	1f3b4 <ReadCompressedDataSlab1+0xbc>
   1f390:	b	1f46c <ReadCompressedDataSlab1+0x174>
   1f394:	b	1f878 <ReadCompressedDataSlab1+0x580>
   1f398:	b	1f90c <ReadCompressedDataSlab1+0x614>
   1f39c:	b	1f750 <ReadCompressedDataSlab1+0x458>
   1f3a0:	b	1f7e4 <ReadCompressedDataSlab1+0x4ec>
   1f3a4:	b	1f628 <ReadCompressedDataSlab1+0x330>
   1f3a8:	b	1f6bc <ReadCompressedDataSlab1+0x3c4>
   1f3ac:	b	1f500 <ReadCompressedDataSlab1+0x208>
   1f3b0:	b	1f594 <ReadCompressedDataSlab1+0x29c>
   1f3b4:	cmp	r7, #0
   1f3b8:	beq	1f448 <ReadCompressedDataSlab1+0x150>
   1f3bc:	ldr	r3, [sp, #108]	; 0x6c
   1f3c0:	cmp	r3, #0
   1f3c4:	movle	r5, #0
   1f3c8:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f3cc:	mov	r6, sl
   1f3d0:	ldr	r3, [sp, #108]	; 0x6c
   1f3d4:	add	sl, sl, r3, lsl #3
   1f3d8:	mov	r5, #0
   1f3dc:	add	r8, sp, #8
   1f3e0:	mov	r9, #1
   1f3e4:	str	r9, [sp]
   1f3e8:	ldr	r3, [sp, #96]	; 0x60
   1f3ec:	mov	r2, r6
   1f3f0:	mov	r1, r8
   1f3f4:	mov	r0, r4
   1f3f8:	bl	4fc4 <ReadCompressedDoubleData>
   1f3fc:	add	r5, r5, r0
   1f400:	mov	r3, r7
   1f404:	ldr	r2, [sp, #96]	; 0x60
   1f408:	mov	r1, r8
   1f40c:	mov	r0, r4
   1f410:	bl	2468 <InflateSkipData>
   1f414:	add	r6, r6, #8
   1f418:	cmp	sl, r6
   1f41c:	bne	1f3e4 <ReadCompressedDataSlab1+0xec>
   1f420:	add	r0, sp, #8
   1f424:	bl	15b0 <inflateEnd@plt>
   1f428:	mov	r0, r5
   1f42c:	add	sp, sp, #64	; 0x40
   1f430:	ldrd	r4, [sp]
   1f434:	ldrd	r6, [sp, #8]
   1f438:	ldrd	r8, [sp, #16]
   1f43c:	ldr	sl, [sp, #24]
   1f440:	add	sp, sp, #28
   1f444:	pop	{pc}		; (ldr pc, [sp], #4)
   1f448:	ldr	r3, [sp, #108]	; 0x6c
   1f44c:	str	r3, [sp]
   1f450:	ldr	r3, [sp, #96]	; 0x60
   1f454:	mov	r2, sl
   1f458:	add	r1, sp, #8
   1f45c:	mov	r0, r4
   1f460:	bl	4fc4 <ReadCompressedDoubleData>
   1f464:	mov	r5, r0
   1f468:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f46c:	cmp	r7, #0
   1f470:	beq	1f4dc <ReadCompressedDataSlab1+0x1e4>
   1f474:	ldr	r3, [sp, #108]	; 0x6c
   1f478:	cmp	r3, #0
   1f47c:	movle	r5, #0
   1f480:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f484:	mov	r6, sl
   1f488:	ldr	r3, [sp, #108]	; 0x6c
   1f48c:	add	sl, sl, r3, lsl #2
   1f490:	mov	r5, #0
   1f494:	add	r8, sp, #8
   1f498:	mov	r9, #1
   1f49c:	str	r9, [sp]
   1f4a0:	ldr	r3, [sp, #96]	; 0x60
   1f4a4:	mov	r2, r6
   1f4a8:	mov	r1, r8
   1f4ac:	mov	r0, r4
   1f4b0:	bl	7ae8 <ReadCompressedSingleData>
   1f4b4:	add	r5, r5, r0
   1f4b8:	mov	r3, r7
   1f4bc:	ldr	r2, [sp, #96]	; 0x60
   1f4c0:	mov	r1, r8
   1f4c4:	mov	r0, r4
   1f4c8:	bl	2468 <InflateSkipData>
   1f4cc:	add	r6, r6, #4
   1f4d0:	cmp	r6, sl
   1f4d4:	bne	1f49c <ReadCompressedDataSlab1+0x1a4>
   1f4d8:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f4dc:	ldr	r3, [sp, #108]	; 0x6c
   1f4e0:	str	r3, [sp]
   1f4e4:	ldr	r3, [sp, #96]	; 0x60
   1f4e8:	mov	r2, sl
   1f4ec:	add	r1, sp, #8
   1f4f0:	mov	r0, r4
   1f4f4:	bl	7ae8 <ReadCompressedSingleData>
   1f4f8:	mov	r5, r0
   1f4fc:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f500:	cmp	r7, #0
   1f504:	beq	1f570 <ReadCompressedDataSlab1+0x278>
   1f508:	ldr	r3, [sp, #108]	; 0x6c
   1f50c:	cmp	r3, #0
   1f510:	movle	r5, #0
   1f514:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f518:	mov	r6, sl
   1f51c:	ldr	r3, [sp, #108]	; 0x6c
   1f520:	add	sl, sl, r3, lsl #3
   1f524:	mov	r5, #0
   1f528:	add	r8, sp, #8
   1f52c:	mov	r9, #1
   1f530:	str	r9, [sp]
   1f534:	ldr	r3, [sp, #96]	; 0x60
   1f538:	mov	r2, r6
   1f53c:	mov	r1, r8
   1f540:	mov	r0, r4
   1f544:	bl	9804 <ReadCompressedInt64Data>
   1f548:	add	r5, r5, r0
   1f54c:	mov	r3, r7
   1f550:	ldr	r2, [sp, #96]	; 0x60
   1f554:	mov	r1, r8
   1f558:	mov	r0, r4
   1f55c:	bl	2468 <InflateSkipData>
   1f560:	add	r6, r6, #8
   1f564:	cmp	r6, sl
   1f568:	bne	1f530 <ReadCompressedDataSlab1+0x238>
   1f56c:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f570:	ldr	r3, [sp, #108]	; 0x6c
   1f574:	str	r3, [sp]
   1f578:	ldr	r3, [sp, #96]	; 0x60
   1f57c:	mov	r2, sl
   1f580:	add	r1, sp, #8
   1f584:	mov	r0, r4
   1f588:	bl	9804 <ReadCompressedInt64Data>
   1f58c:	mov	r5, r0
   1f590:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f594:	cmp	r7, #0
   1f598:	beq	1f604 <ReadCompressedDataSlab1+0x30c>
   1f59c:	ldr	r3, [sp, #108]	; 0x6c
   1f5a0:	cmp	r3, #0
   1f5a4:	movle	r5, #0
   1f5a8:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f5ac:	mov	r6, sl
   1f5b0:	ldr	r3, [sp, #108]	; 0x6c
   1f5b4:	add	sl, sl, r3, lsl #3
   1f5b8:	mov	r5, #0
   1f5bc:	add	r8, sp, #8
   1f5c0:	mov	r9, #1
   1f5c4:	str	r9, [sp]
   1f5c8:	ldr	r3, [sp, #96]	; 0x60
   1f5cc:	mov	r2, r6
   1f5d0:	mov	r1, r8
   1f5d4:	mov	r0, r4
   1f5d8:	bl	b518 <ReadCompressedUInt64Data>
   1f5dc:	add	r5, r5, r0
   1f5e0:	mov	r3, r7
   1f5e4:	ldr	r2, [sp, #96]	; 0x60
   1f5e8:	mov	r1, r8
   1f5ec:	mov	r0, r4
   1f5f0:	bl	2468 <InflateSkipData>
   1f5f4:	add	r6, r6, #8
   1f5f8:	cmp	r6, sl
   1f5fc:	bne	1f5c4 <ReadCompressedDataSlab1+0x2cc>
   1f600:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f604:	ldr	r3, [sp, #108]	; 0x6c
   1f608:	str	r3, [sp]
   1f60c:	ldr	r3, [sp, #96]	; 0x60
   1f610:	mov	r2, sl
   1f614:	add	r1, sp, #8
   1f618:	mov	r0, r4
   1f61c:	bl	b518 <ReadCompressedUInt64Data>
   1f620:	mov	r5, r0
   1f624:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f628:	cmp	r7, #0
   1f62c:	beq	1f698 <ReadCompressedDataSlab1+0x3a0>
   1f630:	ldr	r3, [sp, #108]	; 0x6c
   1f634:	cmp	r3, #0
   1f638:	movle	r5, #0
   1f63c:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f640:	mov	r6, sl
   1f644:	ldr	r3, [sp, #108]	; 0x6c
   1f648:	add	sl, sl, r3, lsl #2
   1f64c:	mov	r5, #0
   1f650:	add	r8, sp, #8
   1f654:	mov	r9, #1
   1f658:	str	r9, [sp]
   1f65c:	ldr	r3, [sp, #96]	; 0x60
   1f660:	mov	r2, r6
   1f664:	mov	r1, r8
   1f668:	mov	r0, r4
   1f66c:	bl	d19c <ReadCompressedInt32Data>
   1f670:	add	r5, r5, r0
   1f674:	mov	r3, r7
   1f678:	ldr	r2, [sp, #96]	; 0x60
   1f67c:	mov	r1, r8
   1f680:	mov	r0, r4
   1f684:	bl	2468 <InflateSkipData>
   1f688:	add	r6, r6, #4
   1f68c:	cmp	sl, r6
   1f690:	bne	1f658 <ReadCompressedDataSlab1+0x360>
   1f694:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f698:	ldr	r3, [sp, #108]	; 0x6c
   1f69c:	str	r3, [sp]
   1f6a0:	ldr	r3, [sp, #96]	; 0x60
   1f6a4:	mov	r2, sl
   1f6a8:	add	r1, sp, #8
   1f6ac:	mov	r0, r4
   1f6b0:	bl	d19c <ReadCompressedInt32Data>
   1f6b4:	mov	r5, r0
   1f6b8:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f6bc:	cmp	r7, #0
   1f6c0:	beq	1f72c <ReadCompressedDataSlab1+0x434>
   1f6c4:	ldr	r3, [sp, #108]	; 0x6c
   1f6c8:	cmp	r3, #0
   1f6cc:	movle	r5, #0
   1f6d0:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f6d4:	mov	r6, sl
   1f6d8:	ldr	r3, [sp, #108]	; 0x6c
   1f6dc:	add	sl, sl, r3, lsl #2
   1f6e0:	mov	r5, #0
   1f6e4:	add	r8, sp, #8
   1f6e8:	mov	r9, #1
   1f6ec:	str	r9, [sp]
   1f6f0:	ldr	r3, [sp, #96]	; 0x60
   1f6f4:	mov	r2, r6
   1f6f8:	mov	r1, r8
   1f6fc:	mov	r0, r4
   1f700:	bl	edd8 <ReadCompressedUInt32Data>
   1f704:	add	r5, r5, r0
   1f708:	mov	r3, r7
   1f70c:	ldr	r2, [sp, #96]	; 0x60
   1f710:	mov	r1, r8
   1f714:	mov	r0, r4
   1f718:	bl	2468 <InflateSkipData>
   1f71c:	add	r6, r6, #4
   1f720:	cmp	r6, sl
   1f724:	bne	1f6ec <ReadCompressedDataSlab1+0x3f4>
   1f728:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f72c:	ldr	r3, [sp, #108]	; 0x6c
   1f730:	str	r3, [sp]
   1f734:	ldr	r3, [sp, #96]	; 0x60
   1f738:	mov	r2, sl
   1f73c:	add	r1, sp, #8
   1f740:	mov	r0, r4
   1f744:	bl	edd8 <ReadCompressedUInt32Data>
   1f748:	mov	r5, r0
   1f74c:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f750:	cmp	r7, #0
   1f754:	beq	1f7c0 <ReadCompressedDataSlab1+0x4c8>
   1f758:	ldr	r3, [sp, #108]	; 0x6c
   1f75c:	cmp	r3, #0
   1f760:	movle	r5, #0
   1f764:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f768:	mov	r6, sl
   1f76c:	ldr	r3, [sp, #108]	; 0x6c
   1f770:	add	sl, sl, r3, lsl #1
   1f774:	mov	r5, #0
   1f778:	add	r8, sp, #8
   1f77c:	mov	r9, #1
   1f780:	str	r9, [sp]
   1f784:	ldr	r3, [sp, #96]	; 0x60
   1f788:	mov	r2, r6
   1f78c:	mov	r1, r8
   1f790:	mov	r0, r4
   1f794:	bl	10a34 <ReadCompressedInt16Data>
   1f798:	add	r5, r5, r0
   1f79c:	mov	r3, r7
   1f7a0:	ldr	r2, [sp, #96]	; 0x60
   1f7a4:	mov	r1, r8
   1f7a8:	mov	r0, r4
   1f7ac:	bl	2468 <InflateSkipData>
   1f7b0:	add	r6, r6, #2
   1f7b4:	cmp	r6, sl
   1f7b8:	bne	1f780 <ReadCompressedDataSlab1+0x488>
   1f7bc:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f7c0:	ldr	r3, [sp, #108]	; 0x6c
   1f7c4:	str	r3, [sp]
   1f7c8:	ldr	r3, [sp, #96]	; 0x60
   1f7cc:	mov	r2, sl
   1f7d0:	add	r1, sp, #8
   1f7d4:	mov	r0, r4
   1f7d8:	bl	10a34 <ReadCompressedInt16Data>
   1f7dc:	mov	r5, r0
   1f7e0:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f7e4:	cmp	r7, #0
   1f7e8:	beq	1f854 <ReadCompressedDataSlab1+0x55c>
   1f7ec:	ldr	r3, [sp, #108]	; 0x6c
   1f7f0:	cmp	r3, #0
   1f7f4:	movle	r5, #0
   1f7f8:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f7fc:	mov	r6, sl
   1f800:	ldr	r3, [sp, #108]	; 0x6c
   1f804:	add	sl, sl, r3, lsl #1
   1f808:	mov	r5, #0
   1f80c:	add	r8, sp, #8
   1f810:	mov	r9, #1
   1f814:	str	r9, [sp]
   1f818:	ldr	r3, [sp, #96]	; 0x60
   1f81c:	mov	r2, r6
   1f820:	mov	r1, r8
   1f824:	mov	r0, r4
   1f828:	bl	126a0 <ReadCompressedUInt16Data>
   1f82c:	add	r5, r5, r0
   1f830:	mov	r3, r7
   1f834:	ldr	r2, [sp, #96]	; 0x60
   1f838:	mov	r1, r8
   1f83c:	mov	r0, r4
   1f840:	bl	2468 <InflateSkipData>
   1f844:	add	r6, r6, #2
   1f848:	cmp	r6, sl
   1f84c:	bne	1f814 <ReadCompressedDataSlab1+0x51c>
   1f850:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f854:	ldr	r3, [sp, #108]	; 0x6c
   1f858:	str	r3, [sp]
   1f85c:	ldr	r3, [sp, #96]	; 0x60
   1f860:	mov	r2, sl
   1f864:	add	r1, sp, #8
   1f868:	mov	r0, r4
   1f86c:	bl	126a0 <ReadCompressedUInt16Data>
   1f870:	mov	r5, r0
   1f874:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f878:	cmp	r7, #0
   1f87c:	beq	1f8e8 <ReadCompressedDataSlab1+0x5f0>
   1f880:	ldr	r3, [sp, #108]	; 0x6c
   1f884:	cmp	r3, #0
   1f888:	movle	r5, #0
   1f88c:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f890:	mov	r6, sl
   1f894:	ldr	r3, [sp, #108]	; 0x6c
   1f898:	add	sl, sl, r3
   1f89c:	mov	r5, #0
   1f8a0:	add	r8, sp, #8
   1f8a4:	mov	r9, #1
   1f8a8:	str	r9, [sp]
   1f8ac:	ldr	r3, [sp, #96]	; 0x60
   1f8b0:	mov	r2, r6
   1f8b4:	mov	r1, r8
   1f8b8:	mov	r0, r4
   1f8bc:	bl	1427c <ReadCompressedInt8Data>
   1f8c0:	add	r5, r5, r0
   1f8c4:	mov	r3, r7
   1f8c8:	ldr	r2, [sp, #96]	; 0x60
   1f8cc:	mov	r1, r8
   1f8d0:	mov	r0, r4
   1f8d4:	bl	2468 <InflateSkipData>
   1f8d8:	add	r6, r6, #1
   1f8dc:	cmp	r6, sl
   1f8e0:	bne	1f8a8 <ReadCompressedDataSlab1+0x5b0>
   1f8e4:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f8e8:	ldr	r3, [sp, #108]	; 0x6c
   1f8ec:	str	r3, [sp]
   1f8f0:	ldr	r3, [sp, #96]	; 0x60
   1f8f4:	mov	r2, sl
   1f8f8:	add	r1, sp, #8
   1f8fc:	mov	r0, r4
   1f900:	bl	1427c <ReadCompressedInt8Data>
   1f904:	mov	r5, r0
   1f908:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f90c:	cmp	r7, #0
   1f910:	beq	1f97c <ReadCompressedDataSlab1+0x684>
   1f914:	ldr	r3, [sp, #108]	; 0x6c
   1f918:	cmp	r3, #0
   1f91c:	movle	r5, #0
   1f920:	ble	1f420 <ReadCompressedDataSlab1+0x128>
   1f924:	mov	r8, sl
   1f928:	ldr	r3, [sp, #108]	; 0x6c
   1f92c:	add	r6, sl, r3
   1f930:	mov	r5, #0
   1f934:	add	r9, sp, #8
   1f938:	mov	sl, #1
   1f93c:	str	sl, [sp]
   1f940:	ldr	r3, [sp, #96]	; 0x60
   1f944:	mov	r2, r8
   1f948:	mov	r1, r9
   1f94c:	mov	r0, r4
   1f950:	bl	15ea0 <ReadCompressedUInt8Data>
   1f954:	add	r5, r5, r0
   1f958:	mov	r3, r7
   1f95c:	ldr	r2, [sp, #96]	; 0x60
   1f960:	mov	r1, r9
   1f964:	mov	r0, r4
   1f968:	bl	2468 <InflateSkipData>
   1f96c:	add	r8, r8, #1
   1f970:	cmp	r6, r8
   1f974:	bne	1f93c <ReadCompressedDataSlab1+0x644>
   1f978:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f97c:	ldr	r3, [sp, #108]	; 0x6c
   1f980:	str	r3, [sp]
   1f984:	ldr	r3, [sp, #96]	; 0x60
   1f988:	mov	r2, sl
   1f98c:	add	r1, sp, #8
   1f990:	mov	r0, r4
   1f994:	bl	15ea0 <ReadCompressedUInt8Data>
   1f998:	mov	r5, r0
   1f99c:	b	1f420 <ReadCompressedDataSlab1+0x128>
   1f9a0:	mov	r5, #0
   1f9a4:	b	1f420 <ReadCompressedDataSlab1+0x128>

0001f9a8 <ReadCompressedDataSlab2>:
   1f9a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f9ac:	strd	r6, [sp, #8]
   1f9b0:	strd	r8, [sp, #16]
   1f9b4:	strd	sl, [sp, #24]
   1f9b8:	str	lr, [sp, #32]
   1f9bc:	sub	sp, sp, #84	; 0x54
   1f9c0:	mov	r5, r0
   1f9c4:	mov	sl, r1
   1f9c8:	mov	r4, r2
   1f9cc:	mov	r9, r3
   1f9d0:	ldr	r7, [sp, #128]	; 0x80
   1f9d4:	ldr	r8, [sp, #132]	; 0x84
   1f9d8:	ldr	r6, [sp, #136]	; 0x88
   1f9dc:	mov	r2, #56	; 0x38
   1f9e0:	mov	r1, #0
   1f9e4:	add	r0, sp, #24
   1f9e8:	bl	15f8 <memset@plt>
   1f9ec:	cmp	r4, #0
   1f9f0:	cmpne	r5, #0
   1f9f4:	beq	1fa24 <ReadCompressedDataSlab2+0x7c>
   1f9f8:	ldr	r3, [r5]
   1f9fc:	cmp	r3, #0
   1fa00:	beq	1fa24 <ReadCompressedDataSlab2+0x7c>
   1fa04:	clz	r3, r8
   1fa08:	lsr	r3, r3, #5
   1fa0c:	cmp	r7, #0
   1fa10:	moveq	r3, #1
   1fa14:	cmp	r6, #0
   1fa18:	moveq	r3, #1
   1fa1c:	cmp	r3, #0
   1fa20:	beq	1fa44 <ReadCompressedDataSlab2+0x9c>
   1fa24:	mov	r0, #0
   1fa28:	add	sp, sp, #84	; 0x54
   1fa2c:	ldrd	r4, [sp]
   1fa30:	ldrd	r6, [sp, #8]
   1fa34:	ldrd	r8, [sp, #16]
   1fa38:	ldrd	sl, [sp, #24]
   1fa3c:	add	sp, sp, #32
   1fa40:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa44:	mov	r1, sl
   1fa48:	add	r0, sp, #24
   1fa4c:	bl	15bc <inflateCopy@plt>
   1fa50:	sub	r9, r9, #6
   1fa54:	cmp	r9, #9
   1fa58:	addls	pc, pc, r9, lsl #2
   1fa5c:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fa60:	b	1fa88 <ReadCompressedDataSlab2+0xe0>
   1fa64:	b	1fcc4 <ReadCompressedDataSlab2+0x31c>
   1fa68:	b	20c30 <ReadCompressedDataSlab2+0x1288>
   1fa6c:	b	20e64 <ReadCompressedDataSlab2+0x14bc>
   1fa70:	b	207c8 <ReadCompressedDataSlab2+0xe20>
   1fa74:	b	209fc <ReadCompressedDataSlab2+0x1054>
   1fa78:	b	20360 <ReadCompressedDataSlab2+0x9b8>
   1fa7c:	b	20594 <ReadCompressedDataSlab2+0xbec>
   1fa80:	b	1fef8 <ReadCompressedDataSlab2+0x550>
   1fa84:	b	2012c <ReadCompressedDataSlab2+0x784>
   1fa88:	ldr	r9, [r8]
   1fa8c:	ldr	r3, [sp, #124]	; 0x7c
   1fa90:	ldr	r3, [r3]
   1fa94:	ldr	r2, [r8, #4]
   1fa98:	sub	r2, r2, #1
   1fa9c:	mul	r2, r3, r2
   1faa0:	str	r2, [sp, #20]
   1faa4:	ldr	r2, [r7, #4]
   1faa8:	mul	r3, r2, r3
   1faac:	ldr	r2, [sp, #120]	; 0x78
   1fab0:	add	r1, sp, #24
   1fab4:	mov	r0, r5
   1fab8:	bl	2468 <InflateSkipData>
   1fabc:	ldr	r3, [r8]
   1fac0:	cmp	r3, #1
   1fac4:	beq	1faf4 <ReadCompressedDataSlab2+0x14c>
   1fac8:	ldr	r3, [r6, #4]
   1facc:	cmp	r3, #0
   1fad0:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fad4:	mov	sl, #0
   1fad8:	add	r3, sp, #24
   1fadc:	str	r3, [sp, #8]
   1fae0:	mov	fp, #1
   1fae4:	sub	r3, r9, #1
   1fae8:	str	r3, [sp, #16]
   1faec:	str	r5, [sp, #12]
   1faf0:	b	1fc50 <ReadCompressedDataSlab2+0x2a8>
   1faf4:	ldr	r3, [r6]
   1faf8:	ldr	r2, [sp, #124]	; 0x7c
   1fafc:	ldr	r2, [r2]
   1fb00:	cmp	r3, r2
   1fb04:	beq	1fbac <ReadCompressedDataSlab2+0x204>
   1fb08:	ldr	r3, [r6, #4]
   1fb0c:	cmp	r3, #0
   1fb10:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fb14:	mov	r9, #0
   1fb18:	add	sl, sp, #24
   1fb1c:	str	r5, [sp, #8]
   1fb20:	ldr	r5, [sp, #20]
   1fb24:	ldr	fp, [sp, #124]	; 0x7c
   1fb28:	ldr	r3, [r7]
   1fb2c:	ldr	r2, [sp, #120]	; 0x78
   1fb30:	mov	r1, sl
   1fb34:	ldr	r0, [sp, #8]
   1fb38:	bl	2468 <InflateSkipData>
   1fb3c:	ldr	r3, [r6]
   1fb40:	str	r3, [sp]
   1fb44:	ldr	r3, [sp, #120]	; 0x78
   1fb48:	mov	r2, r4
   1fb4c:	mov	r1, sl
   1fb50:	ldr	r0, [sp, #8]
   1fb54:	bl	4fc4 <ReadCompressedDoubleData>
   1fb58:	ldr	r3, [r6]
   1fb5c:	add	r4, r4, r3, lsl #3
   1fb60:	ldr	r2, [fp]
   1fb64:	sub	r2, r2, #1
   1fb68:	add	r2, r2, r5
   1fb6c:	sub	r3, r3, #1
   1fb70:	ldr	r1, [r8]
   1fb74:	mls	r3, r1, r3, r2
   1fb78:	ldr	r2, [r7]
   1fb7c:	sub	r3, r3, r2
   1fb80:	ldr	r2, [sp, #120]	; 0x78
   1fb84:	mov	r1, sl
   1fb88:	ldr	r0, [sp, #8]
   1fb8c:	bl	2468 <InflateSkipData>
   1fb90:	add	r9, r9, #1
   1fb94:	ldr	r3, [r6, #4]
   1fb98:	cmp	r3, r9
   1fb9c:	bgt	1fb28 <ReadCompressedDataSlab2+0x180>
   1fba0:	add	r0, sp, #24
   1fba4:	bl	15b0 <inflateEnd@plt>
   1fba8:	b	1fa24 <ReadCompressedDataSlab2+0x7c>
   1fbac:	ldr	r2, [r8, #4]
   1fbb0:	cmp	r2, #1
   1fbb4:	bne	1fb08 <ReadCompressedDataSlab2+0x160>
   1fbb8:	ldr	r2, [r6, #4]
   1fbbc:	mul	r3, r2, r3
   1fbc0:	str	r3, [sp]
   1fbc4:	ldr	r3, [sp, #120]	; 0x78
   1fbc8:	mov	r2, r4
   1fbcc:	add	r1, sp, #24
   1fbd0:	mov	r0, r5
   1fbd4:	bl	4fc4 <ReadCompressedDoubleData>
   1fbd8:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fbdc:	mov	r9, r4
   1fbe0:	add	r4, r9, #8
   1fbe4:	str	fp, [sp]
   1fbe8:	ldr	r3, [sp, #120]	; 0x78
   1fbec:	mov	r2, r9
   1fbf0:	ldr	r9, [sp, #8]
   1fbf4:	mov	r1, r9
   1fbf8:	ldr	r5, [sp, #12]
   1fbfc:	mov	r0, r5
   1fc00:	bl	4fc4 <ReadCompressedDoubleData>
   1fc04:	ldr	r3, [sp, #124]	; 0x7c
   1fc08:	ldr	r3, [r3]
   1fc0c:	sub	r3, r3, #1
   1fc10:	ldr	r2, [sp, #20]
   1fc14:	add	r2, r3, r2
   1fc18:	ldr	r3, [r6]
   1fc1c:	sub	r3, r3, #1
   1fc20:	ldr	r1, [r8]
   1fc24:	mls	r3, r1, r3, r2
   1fc28:	ldr	r2, [r7]
   1fc2c:	sub	r3, r3, r2
   1fc30:	ldr	r2, [sp, #120]	; 0x78
   1fc34:	mov	r1, r9
   1fc38:	mov	r0, r5
   1fc3c:	bl	2468 <InflateSkipData>
   1fc40:	add	sl, sl, #1
   1fc44:	ldr	r3, [r6, #4]
   1fc48:	cmp	r3, sl
   1fc4c:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fc50:	ldr	r3, [r7]
   1fc54:	ldr	r2, [sp, #120]	; 0x78
   1fc58:	ldr	r1, [sp, #8]
   1fc5c:	ldr	r0, [sp, #12]
   1fc60:	bl	2468 <InflateSkipData>
   1fc64:	ldr	r3, [r6]
   1fc68:	cmp	r3, #1
   1fc6c:	ble	1fbdc <ReadCompressedDataSlab2+0x234>
   1fc70:	mov	r5, #0
   1fc74:	mov	r2, r4
   1fc78:	add	r9, r2, #8
   1fc7c:	str	fp, [sp]
   1fc80:	ldr	r3, [sp, #120]	; 0x78
   1fc84:	ldr	r1, [sp, #8]
   1fc88:	ldr	r4, [sp, #12]
   1fc8c:	mov	r0, r4
   1fc90:	bl	4fc4 <ReadCompressedDoubleData>
   1fc94:	ldr	r3, [sp, #16]
   1fc98:	ldr	r2, [sp, #120]	; 0x78
   1fc9c:	ldr	r1, [sp, #8]
   1fca0:	mov	r0, r4
   1fca4:	bl	2468 <InflateSkipData>
   1fca8:	add	r5, r5, #1
   1fcac:	mov	r2, r9
   1fcb0:	ldr	r3, [r6]
   1fcb4:	sub	r3, r3, #1
   1fcb8:	cmp	r3, r5
   1fcbc:	bgt	1fc78 <ReadCompressedDataSlab2+0x2d0>
   1fcc0:	b	1fbe0 <ReadCompressedDataSlab2+0x238>
   1fcc4:	ldr	r9, [r8]
   1fcc8:	ldr	r3, [sp, #124]	; 0x7c
   1fccc:	ldr	r3, [r3]
   1fcd0:	ldr	r2, [r8, #4]
   1fcd4:	sub	r2, r2, #1
   1fcd8:	mul	r2, r3, r2
   1fcdc:	str	r2, [sp, #20]
   1fce0:	ldr	r2, [r7, #4]
   1fce4:	mul	r3, r2, r3
   1fce8:	ldr	r2, [sp, #120]	; 0x78
   1fcec:	add	r1, sp, #24
   1fcf0:	mov	r0, r5
   1fcf4:	bl	2468 <InflateSkipData>
   1fcf8:	ldr	r3, [r8]
   1fcfc:	cmp	r3, #1
   1fd00:	beq	1fd30 <ReadCompressedDataSlab2+0x388>
   1fd04:	ldr	r3, [r6, #4]
   1fd08:	cmp	r3, #0
   1fd0c:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fd10:	mov	sl, #0
   1fd14:	add	r3, sp, #24
   1fd18:	str	r3, [sp, #8]
   1fd1c:	mov	fp, #1
   1fd20:	sub	r3, r9, #1
   1fd24:	str	r3, [sp, #16]
   1fd28:	str	r5, [sp, #12]
   1fd2c:	b	1fe84 <ReadCompressedDataSlab2+0x4dc>
   1fd30:	ldr	r3, [r6]
   1fd34:	ldr	r2, [sp, #124]	; 0x7c
   1fd38:	ldr	r2, [r2]
   1fd3c:	cmp	r3, r2
   1fd40:	beq	1fde0 <ReadCompressedDataSlab2+0x438>
   1fd44:	ldr	r3, [r6, #4]
   1fd48:	cmp	r3, #0
   1fd4c:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fd50:	mov	r9, #0
   1fd54:	add	sl, sp, #24
   1fd58:	str	r5, [sp, #8]
   1fd5c:	ldr	r5, [sp, #20]
   1fd60:	ldr	fp, [sp, #124]	; 0x7c
   1fd64:	ldr	r3, [r7]
   1fd68:	ldr	r2, [sp, #120]	; 0x78
   1fd6c:	mov	r1, sl
   1fd70:	ldr	r0, [sp, #8]
   1fd74:	bl	2468 <InflateSkipData>
   1fd78:	ldr	r3, [r6]
   1fd7c:	str	r3, [sp]
   1fd80:	ldr	r3, [sp, #120]	; 0x78
   1fd84:	mov	r2, r4
   1fd88:	mov	r1, sl
   1fd8c:	ldr	r0, [sp, #8]
   1fd90:	bl	7ae8 <ReadCompressedSingleData>
   1fd94:	ldr	r3, [r6]
   1fd98:	add	r4, r4, r3, lsl #2
   1fd9c:	ldr	r2, [fp]
   1fda0:	sub	r2, r2, #1
   1fda4:	add	r2, r2, r5
   1fda8:	sub	r3, r3, #1
   1fdac:	ldr	r1, [r8]
   1fdb0:	mls	r3, r1, r3, r2
   1fdb4:	ldr	r2, [r7]
   1fdb8:	sub	r3, r3, r2
   1fdbc:	ldr	r2, [sp, #120]	; 0x78
   1fdc0:	mov	r1, sl
   1fdc4:	ldr	r0, [sp, #8]
   1fdc8:	bl	2468 <InflateSkipData>
   1fdcc:	add	r9, r9, #1
   1fdd0:	ldr	r3, [r6, #4]
   1fdd4:	cmp	r3, r9
   1fdd8:	bgt	1fd64 <ReadCompressedDataSlab2+0x3bc>
   1fddc:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fde0:	ldr	r2, [r8, #4]
   1fde4:	cmp	r2, #1
   1fde8:	bne	1fd44 <ReadCompressedDataSlab2+0x39c>
   1fdec:	ldr	r2, [r6, #4]
   1fdf0:	mul	r3, r2, r3
   1fdf4:	str	r3, [sp]
   1fdf8:	ldr	r3, [sp, #120]	; 0x78
   1fdfc:	mov	r2, r4
   1fe00:	add	r1, sp, #24
   1fe04:	mov	r0, r5
   1fe08:	bl	7ae8 <ReadCompressedSingleData>
   1fe0c:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fe10:	mov	r9, r4
   1fe14:	add	r4, r9, #4
   1fe18:	str	fp, [sp]
   1fe1c:	ldr	r3, [sp, #120]	; 0x78
   1fe20:	mov	r2, r9
   1fe24:	ldr	r9, [sp, #8]
   1fe28:	mov	r1, r9
   1fe2c:	ldr	r5, [sp, #12]
   1fe30:	mov	r0, r5
   1fe34:	bl	7ae8 <ReadCompressedSingleData>
   1fe38:	ldr	r3, [sp, #124]	; 0x7c
   1fe3c:	ldr	r3, [r3]
   1fe40:	sub	r3, r3, #1
   1fe44:	ldr	r2, [sp, #20]
   1fe48:	add	r2, r3, r2
   1fe4c:	ldr	r3, [r6]
   1fe50:	sub	r3, r3, #1
   1fe54:	ldr	r1, [r8]
   1fe58:	mls	r3, r1, r3, r2
   1fe5c:	ldr	r2, [r7]
   1fe60:	sub	r3, r3, r2
   1fe64:	ldr	r2, [sp, #120]	; 0x78
   1fe68:	mov	r1, r9
   1fe6c:	mov	r0, r5
   1fe70:	bl	2468 <InflateSkipData>
   1fe74:	add	sl, sl, #1
   1fe78:	ldr	r3, [r6, #4]
   1fe7c:	cmp	r3, sl
   1fe80:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1fe84:	ldr	r3, [r7]
   1fe88:	ldr	r2, [sp, #120]	; 0x78
   1fe8c:	ldr	r1, [sp, #8]
   1fe90:	ldr	r0, [sp, #12]
   1fe94:	bl	2468 <InflateSkipData>
   1fe98:	ldr	r3, [r6]
   1fe9c:	cmp	r3, #1
   1fea0:	ble	1fe10 <ReadCompressedDataSlab2+0x468>
   1fea4:	mov	r5, #0
   1fea8:	mov	r2, r4
   1feac:	add	r9, r2, #4
   1feb0:	str	fp, [sp]
   1feb4:	ldr	r3, [sp, #120]	; 0x78
   1feb8:	ldr	r1, [sp, #8]
   1febc:	ldr	r4, [sp, #12]
   1fec0:	mov	r0, r4
   1fec4:	bl	7ae8 <ReadCompressedSingleData>
   1fec8:	ldr	r3, [sp, #16]
   1fecc:	ldr	r2, [sp, #120]	; 0x78
   1fed0:	ldr	r1, [sp, #8]
   1fed4:	mov	r0, r4
   1fed8:	bl	2468 <InflateSkipData>
   1fedc:	add	r5, r5, #1
   1fee0:	mov	r2, r9
   1fee4:	ldr	r3, [r6]
   1fee8:	sub	r3, r3, #1
   1feec:	cmp	r3, r5
   1fef0:	bgt	1feac <ReadCompressedDataSlab2+0x504>
   1fef4:	b	1fe14 <ReadCompressedDataSlab2+0x46c>
   1fef8:	ldr	r9, [r8]
   1fefc:	ldr	r3, [sp, #124]	; 0x7c
   1ff00:	ldr	r3, [r3]
   1ff04:	ldr	r2, [r8, #4]
   1ff08:	sub	r2, r2, #1
   1ff0c:	mul	r2, r3, r2
   1ff10:	str	r2, [sp, #20]
   1ff14:	ldr	r2, [r7, #4]
   1ff18:	mul	r3, r2, r3
   1ff1c:	ldr	r2, [sp, #120]	; 0x78
   1ff20:	add	r1, sp, #24
   1ff24:	mov	r0, r5
   1ff28:	bl	2468 <InflateSkipData>
   1ff2c:	ldr	r3, [r8]
   1ff30:	cmp	r3, #1
   1ff34:	beq	1ff64 <ReadCompressedDataSlab2+0x5bc>
   1ff38:	ldr	r3, [r6, #4]
   1ff3c:	cmp	r3, #0
   1ff40:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1ff44:	mov	sl, #0
   1ff48:	add	r3, sp, #24
   1ff4c:	str	r3, [sp, #8]
   1ff50:	mov	fp, #1
   1ff54:	sub	r3, r9, #1
   1ff58:	str	r3, [sp, #16]
   1ff5c:	str	r5, [sp, #12]
   1ff60:	b	200b8 <ReadCompressedDataSlab2+0x710>
   1ff64:	ldr	r3, [r6]
   1ff68:	ldr	r2, [sp, #124]	; 0x7c
   1ff6c:	ldr	r2, [r2]
   1ff70:	cmp	r3, r2
   1ff74:	beq	20014 <ReadCompressedDataSlab2+0x66c>
   1ff78:	ldr	r3, [r6, #4]
   1ff7c:	cmp	r3, #0
   1ff80:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   1ff84:	mov	r9, #0
   1ff88:	add	sl, sp, #24
   1ff8c:	str	r5, [sp, #8]
   1ff90:	ldr	r5, [sp, #20]
   1ff94:	ldr	fp, [sp, #124]	; 0x7c
   1ff98:	ldr	r3, [r7]
   1ff9c:	ldr	r2, [sp, #120]	; 0x78
   1ffa0:	mov	r1, sl
   1ffa4:	ldr	r0, [sp, #8]
   1ffa8:	bl	2468 <InflateSkipData>
   1ffac:	ldr	r3, [r6]
   1ffb0:	str	r3, [sp]
   1ffb4:	ldr	r3, [sp, #120]	; 0x78
   1ffb8:	mov	r2, r4
   1ffbc:	mov	r1, sl
   1ffc0:	ldr	r0, [sp, #8]
   1ffc4:	bl	9804 <ReadCompressedInt64Data>
   1ffc8:	ldr	r3, [r6]
   1ffcc:	add	r4, r4, r3, lsl #3
   1ffd0:	ldr	r2, [fp]
   1ffd4:	sub	r2, r2, #1
   1ffd8:	add	r2, r2, r5
   1ffdc:	sub	r3, r3, #1
   1ffe0:	ldr	r1, [r8]
   1ffe4:	mls	r3, r1, r3, r2
   1ffe8:	ldr	r2, [r7]
   1ffec:	sub	r3, r3, r2
   1fff0:	ldr	r2, [sp, #120]	; 0x78
   1fff4:	mov	r1, sl
   1fff8:	ldr	r0, [sp, #8]
   1fffc:	bl	2468 <InflateSkipData>
   20000:	add	r9, r9, #1
   20004:	ldr	r3, [r6, #4]
   20008:	cmp	r3, r9
   2000c:	bgt	1ff98 <ReadCompressedDataSlab2+0x5f0>
   20010:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20014:	ldr	r2, [r8, #4]
   20018:	cmp	r2, #1
   2001c:	bne	1ff78 <ReadCompressedDataSlab2+0x5d0>
   20020:	ldr	r2, [r6, #4]
   20024:	mul	r3, r2, r3
   20028:	str	r3, [sp]
   2002c:	ldr	r3, [sp, #120]	; 0x78
   20030:	mov	r2, r4
   20034:	add	r1, sp, #24
   20038:	mov	r0, r5
   2003c:	bl	9804 <ReadCompressedInt64Data>
   20040:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20044:	mov	r9, r4
   20048:	add	r4, r9, #8
   2004c:	str	fp, [sp]
   20050:	ldr	r3, [sp, #120]	; 0x78
   20054:	mov	r2, r9
   20058:	ldr	r9, [sp, #8]
   2005c:	mov	r1, r9
   20060:	ldr	r5, [sp, #12]
   20064:	mov	r0, r5
   20068:	bl	9804 <ReadCompressedInt64Data>
   2006c:	ldr	r3, [sp, #124]	; 0x7c
   20070:	ldr	r3, [r3]
   20074:	sub	r3, r3, #1
   20078:	ldr	r2, [sp, #20]
   2007c:	add	r2, r3, r2
   20080:	ldr	r3, [r6]
   20084:	sub	r3, r3, #1
   20088:	ldr	r1, [r8]
   2008c:	mls	r3, r1, r3, r2
   20090:	ldr	r2, [r7]
   20094:	sub	r3, r3, r2
   20098:	ldr	r2, [sp, #120]	; 0x78
   2009c:	mov	r1, r9
   200a0:	mov	r0, r5
   200a4:	bl	2468 <InflateSkipData>
   200a8:	add	sl, sl, #1
   200ac:	ldr	r3, [r6, #4]
   200b0:	cmp	r3, sl
   200b4:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   200b8:	ldr	r3, [r7]
   200bc:	ldr	r2, [sp, #120]	; 0x78
   200c0:	ldr	r1, [sp, #8]
   200c4:	ldr	r0, [sp, #12]
   200c8:	bl	2468 <InflateSkipData>
   200cc:	ldr	r3, [r6]
   200d0:	cmp	r3, #1
   200d4:	ble	20044 <ReadCompressedDataSlab2+0x69c>
   200d8:	mov	r5, #0
   200dc:	mov	r2, r4
   200e0:	add	r9, r2, #8
   200e4:	str	fp, [sp]
   200e8:	ldr	r3, [sp, #120]	; 0x78
   200ec:	ldr	r1, [sp, #8]
   200f0:	ldr	r4, [sp, #12]
   200f4:	mov	r0, r4
   200f8:	bl	9804 <ReadCompressedInt64Data>
   200fc:	ldr	r3, [sp, #16]
   20100:	ldr	r2, [sp, #120]	; 0x78
   20104:	ldr	r1, [sp, #8]
   20108:	mov	r0, r4
   2010c:	bl	2468 <InflateSkipData>
   20110:	add	r5, r5, #1
   20114:	mov	r2, r9
   20118:	ldr	r3, [r6]
   2011c:	sub	r3, r3, #1
   20120:	cmp	r3, r5
   20124:	bgt	200e0 <ReadCompressedDataSlab2+0x738>
   20128:	b	20048 <ReadCompressedDataSlab2+0x6a0>
   2012c:	ldr	r9, [r8]
   20130:	ldr	r3, [sp, #124]	; 0x7c
   20134:	ldr	r3, [r3]
   20138:	ldr	r2, [r8, #4]
   2013c:	sub	r2, r2, #1
   20140:	mul	r2, r3, r2
   20144:	str	r2, [sp, #20]
   20148:	ldr	r2, [r7, #4]
   2014c:	mul	r3, r2, r3
   20150:	ldr	r2, [sp, #120]	; 0x78
   20154:	add	r1, sp, #24
   20158:	mov	r0, r5
   2015c:	bl	2468 <InflateSkipData>
   20160:	ldr	r3, [r8]
   20164:	cmp	r3, #1
   20168:	beq	20198 <ReadCompressedDataSlab2+0x7f0>
   2016c:	ldr	r3, [r6, #4]
   20170:	cmp	r3, #0
   20174:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20178:	mov	sl, #0
   2017c:	add	r3, sp, #24
   20180:	str	r3, [sp, #8]
   20184:	mov	fp, #1
   20188:	sub	r3, r9, #1
   2018c:	str	r3, [sp, #16]
   20190:	str	r5, [sp, #12]
   20194:	b	202ec <ReadCompressedDataSlab2+0x944>
   20198:	ldr	r3, [r6]
   2019c:	ldr	r2, [sp, #124]	; 0x7c
   201a0:	ldr	r2, [r2]
   201a4:	cmp	r3, r2
   201a8:	beq	20248 <ReadCompressedDataSlab2+0x8a0>
   201ac:	ldr	r3, [r6, #4]
   201b0:	cmp	r3, #0
   201b4:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   201b8:	mov	r9, #0
   201bc:	add	sl, sp, #24
   201c0:	str	r5, [sp, #8]
   201c4:	ldr	r5, [sp, #20]
   201c8:	ldr	fp, [sp, #124]	; 0x7c
   201cc:	ldr	r3, [r7]
   201d0:	ldr	r2, [sp, #120]	; 0x78
   201d4:	mov	r1, sl
   201d8:	ldr	r0, [sp, #8]
   201dc:	bl	2468 <InflateSkipData>
   201e0:	ldr	r3, [r6]
   201e4:	str	r3, [sp]
   201e8:	ldr	r3, [sp, #120]	; 0x78
   201ec:	mov	r2, r4
   201f0:	mov	r1, sl
   201f4:	ldr	r0, [sp, #8]
   201f8:	bl	b518 <ReadCompressedUInt64Data>
   201fc:	ldr	r3, [r6]
   20200:	add	r4, r4, r3, lsl #3
   20204:	ldr	r2, [fp]
   20208:	sub	r2, r2, #1
   2020c:	add	r2, r2, r5
   20210:	sub	r3, r3, #1
   20214:	ldr	r1, [r8]
   20218:	mls	r3, r1, r3, r2
   2021c:	ldr	r2, [r7]
   20220:	sub	r3, r3, r2
   20224:	ldr	r2, [sp, #120]	; 0x78
   20228:	mov	r1, sl
   2022c:	ldr	r0, [sp, #8]
   20230:	bl	2468 <InflateSkipData>
   20234:	add	r9, r9, #1
   20238:	ldr	r3, [r6, #4]
   2023c:	cmp	r3, r9
   20240:	bgt	201cc <ReadCompressedDataSlab2+0x824>
   20244:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20248:	ldr	r2, [r8, #4]
   2024c:	cmp	r2, #1
   20250:	bne	201ac <ReadCompressedDataSlab2+0x804>
   20254:	ldr	r2, [r6, #4]
   20258:	mul	r3, r2, r3
   2025c:	str	r3, [sp]
   20260:	ldr	r3, [sp, #120]	; 0x78
   20264:	mov	r2, r4
   20268:	add	r1, sp, #24
   2026c:	mov	r0, r5
   20270:	bl	b518 <ReadCompressedUInt64Data>
   20274:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20278:	mov	r9, r4
   2027c:	add	r4, r9, #8
   20280:	str	fp, [sp]
   20284:	ldr	r3, [sp, #120]	; 0x78
   20288:	mov	r2, r9
   2028c:	ldr	r9, [sp, #8]
   20290:	mov	r1, r9
   20294:	ldr	r5, [sp, #12]
   20298:	mov	r0, r5
   2029c:	bl	b518 <ReadCompressedUInt64Data>
   202a0:	ldr	r3, [sp, #124]	; 0x7c
   202a4:	ldr	r3, [r3]
   202a8:	sub	r3, r3, #1
   202ac:	ldr	r2, [sp, #20]
   202b0:	add	r2, r3, r2
   202b4:	ldr	r3, [r6]
   202b8:	sub	r3, r3, #1
   202bc:	ldr	r1, [r8]
   202c0:	mls	r3, r1, r3, r2
   202c4:	ldr	r2, [r7]
   202c8:	sub	r3, r3, r2
   202cc:	ldr	r2, [sp, #120]	; 0x78
   202d0:	mov	r1, r9
   202d4:	mov	r0, r5
   202d8:	bl	2468 <InflateSkipData>
   202dc:	add	sl, sl, #1
   202e0:	ldr	r3, [r6, #4]
   202e4:	cmp	r3, sl
   202e8:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   202ec:	ldr	r3, [r7]
   202f0:	ldr	r2, [sp, #120]	; 0x78
   202f4:	ldr	r1, [sp, #8]
   202f8:	ldr	r0, [sp, #12]
   202fc:	bl	2468 <InflateSkipData>
   20300:	ldr	r3, [r6]
   20304:	cmp	r3, #1
   20308:	ble	20278 <ReadCompressedDataSlab2+0x8d0>
   2030c:	mov	r5, #0
   20310:	mov	r2, r4
   20314:	add	r9, r2, #8
   20318:	str	fp, [sp]
   2031c:	ldr	r3, [sp, #120]	; 0x78
   20320:	ldr	r1, [sp, #8]
   20324:	ldr	r4, [sp, #12]
   20328:	mov	r0, r4
   2032c:	bl	b518 <ReadCompressedUInt64Data>
   20330:	ldr	r3, [sp, #16]
   20334:	ldr	r2, [sp, #120]	; 0x78
   20338:	ldr	r1, [sp, #8]
   2033c:	mov	r0, r4
   20340:	bl	2468 <InflateSkipData>
   20344:	add	r5, r5, #1
   20348:	mov	r2, r9
   2034c:	ldr	r3, [r6]
   20350:	sub	r3, r3, #1
   20354:	cmp	r3, r5
   20358:	bgt	20314 <ReadCompressedDataSlab2+0x96c>
   2035c:	b	2027c <ReadCompressedDataSlab2+0x8d4>
   20360:	ldr	r9, [r8]
   20364:	ldr	r3, [sp, #124]	; 0x7c
   20368:	ldr	r3, [r3]
   2036c:	ldr	r2, [r8, #4]
   20370:	sub	r2, r2, #1
   20374:	mul	r2, r3, r2
   20378:	str	r2, [sp, #20]
   2037c:	ldr	r2, [r7, #4]
   20380:	mul	r3, r2, r3
   20384:	ldr	r2, [sp, #120]	; 0x78
   20388:	add	r1, sp, #24
   2038c:	mov	r0, r5
   20390:	bl	2468 <InflateSkipData>
   20394:	ldr	r3, [r8]
   20398:	cmp	r3, #1
   2039c:	beq	203cc <ReadCompressedDataSlab2+0xa24>
   203a0:	ldr	r3, [r6, #4]
   203a4:	cmp	r3, #0
   203a8:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   203ac:	mov	sl, #0
   203b0:	add	r3, sp, #24
   203b4:	str	r3, [sp, #8]
   203b8:	mov	fp, #1
   203bc:	sub	r3, r9, #1
   203c0:	str	r3, [sp, #16]
   203c4:	str	r5, [sp, #12]
   203c8:	b	20520 <ReadCompressedDataSlab2+0xb78>
   203cc:	ldr	r3, [r6]
   203d0:	ldr	r2, [sp, #124]	; 0x7c
   203d4:	ldr	r2, [r2]
   203d8:	cmp	r3, r2
   203dc:	beq	2047c <ReadCompressedDataSlab2+0xad4>
   203e0:	ldr	r3, [r6, #4]
   203e4:	cmp	r3, #0
   203e8:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   203ec:	mov	r9, #0
   203f0:	add	sl, sp, #24
   203f4:	str	r5, [sp, #8]
   203f8:	ldr	r5, [sp, #20]
   203fc:	ldr	fp, [sp, #124]	; 0x7c
   20400:	ldr	r3, [r7]
   20404:	ldr	r2, [sp, #120]	; 0x78
   20408:	mov	r1, sl
   2040c:	ldr	r0, [sp, #8]
   20410:	bl	2468 <InflateSkipData>
   20414:	ldr	r3, [r6]
   20418:	str	r3, [sp]
   2041c:	ldr	r3, [sp, #120]	; 0x78
   20420:	mov	r2, r4
   20424:	mov	r1, sl
   20428:	ldr	r0, [sp, #8]
   2042c:	bl	d19c <ReadCompressedInt32Data>
   20430:	ldr	r3, [r6]
   20434:	add	r4, r4, r3, lsl #2
   20438:	ldr	r2, [fp]
   2043c:	sub	r2, r2, #1
   20440:	add	r2, r2, r5
   20444:	sub	r3, r3, #1
   20448:	ldr	r1, [r8]
   2044c:	mls	r3, r1, r3, r2
   20450:	ldr	r2, [r7]
   20454:	sub	r3, r3, r2
   20458:	ldr	r2, [sp, #120]	; 0x78
   2045c:	mov	r1, sl
   20460:	ldr	r0, [sp, #8]
   20464:	bl	2468 <InflateSkipData>
   20468:	add	r9, r9, #1
   2046c:	ldr	r3, [r6, #4]
   20470:	cmp	r3, r9
   20474:	bgt	20400 <ReadCompressedDataSlab2+0xa58>
   20478:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   2047c:	ldr	r2, [r8, #4]
   20480:	cmp	r2, #1
   20484:	bne	203e0 <ReadCompressedDataSlab2+0xa38>
   20488:	ldr	r2, [r6, #4]
   2048c:	mul	r3, r2, r3
   20490:	str	r3, [sp]
   20494:	ldr	r3, [sp, #120]	; 0x78
   20498:	mov	r2, r4
   2049c:	add	r1, sp, #24
   204a0:	mov	r0, r5
   204a4:	bl	d19c <ReadCompressedInt32Data>
   204a8:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   204ac:	mov	r9, r4
   204b0:	add	r4, r9, #4
   204b4:	str	fp, [sp]
   204b8:	ldr	r3, [sp, #120]	; 0x78
   204bc:	mov	r2, r9
   204c0:	ldr	r9, [sp, #8]
   204c4:	mov	r1, r9
   204c8:	ldr	r5, [sp, #12]
   204cc:	mov	r0, r5
   204d0:	bl	d19c <ReadCompressedInt32Data>
   204d4:	ldr	r3, [sp, #124]	; 0x7c
   204d8:	ldr	r3, [r3]
   204dc:	sub	r3, r3, #1
   204e0:	ldr	r2, [sp, #20]
   204e4:	add	r2, r3, r2
   204e8:	ldr	r3, [r6]
   204ec:	sub	r3, r3, #1
   204f0:	ldr	r1, [r8]
   204f4:	mls	r3, r1, r3, r2
   204f8:	ldr	r2, [r7]
   204fc:	sub	r3, r3, r2
   20500:	ldr	r2, [sp, #120]	; 0x78
   20504:	mov	r1, r9
   20508:	mov	r0, r5
   2050c:	bl	2468 <InflateSkipData>
   20510:	add	sl, sl, #1
   20514:	ldr	r3, [r6, #4]
   20518:	cmp	r3, sl
   2051c:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20520:	ldr	r3, [r7]
   20524:	ldr	r2, [sp, #120]	; 0x78
   20528:	ldr	r1, [sp, #8]
   2052c:	ldr	r0, [sp, #12]
   20530:	bl	2468 <InflateSkipData>
   20534:	ldr	r3, [r6]
   20538:	cmp	r3, #1
   2053c:	ble	204ac <ReadCompressedDataSlab2+0xb04>
   20540:	mov	r5, #0
   20544:	mov	r2, r4
   20548:	add	r9, r2, #4
   2054c:	str	fp, [sp]
   20550:	ldr	r3, [sp, #120]	; 0x78
   20554:	ldr	r1, [sp, #8]
   20558:	ldr	r4, [sp, #12]
   2055c:	mov	r0, r4
   20560:	bl	d19c <ReadCompressedInt32Data>
   20564:	ldr	r3, [sp, #16]
   20568:	ldr	r2, [sp, #120]	; 0x78
   2056c:	ldr	r1, [sp, #8]
   20570:	mov	r0, r4
   20574:	bl	2468 <InflateSkipData>
   20578:	add	r5, r5, #1
   2057c:	mov	r2, r9
   20580:	ldr	r3, [r6]
   20584:	sub	r3, r3, #1
   20588:	cmp	r3, r5
   2058c:	bgt	20548 <ReadCompressedDataSlab2+0xba0>
   20590:	b	204b0 <ReadCompressedDataSlab2+0xb08>
   20594:	ldr	r9, [r8]
   20598:	ldr	r3, [sp, #124]	; 0x7c
   2059c:	ldr	r3, [r3]
   205a0:	ldr	r2, [r8, #4]
   205a4:	sub	r2, r2, #1
   205a8:	mul	r2, r3, r2
   205ac:	str	r2, [sp, #20]
   205b0:	ldr	r2, [r7, #4]
   205b4:	mul	r3, r2, r3
   205b8:	ldr	r2, [sp, #120]	; 0x78
   205bc:	add	r1, sp, #24
   205c0:	mov	r0, r5
   205c4:	bl	2468 <InflateSkipData>
   205c8:	ldr	r3, [r8]
   205cc:	cmp	r3, #1
   205d0:	beq	20600 <ReadCompressedDataSlab2+0xc58>
   205d4:	ldr	r3, [r6, #4]
   205d8:	cmp	r3, #0
   205dc:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   205e0:	mov	sl, #0
   205e4:	add	r3, sp, #24
   205e8:	str	r3, [sp, #8]
   205ec:	mov	fp, #1
   205f0:	sub	r3, r9, #1
   205f4:	str	r3, [sp, #16]
   205f8:	str	r5, [sp, #12]
   205fc:	b	20754 <ReadCompressedDataSlab2+0xdac>
   20600:	ldr	r3, [r6]
   20604:	ldr	r2, [sp, #124]	; 0x7c
   20608:	ldr	r2, [r2]
   2060c:	cmp	r3, r2
   20610:	beq	206b0 <ReadCompressedDataSlab2+0xd08>
   20614:	ldr	r3, [r6, #4]
   20618:	cmp	r3, #0
   2061c:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20620:	mov	r9, #0
   20624:	add	sl, sp, #24
   20628:	str	r5, [sp, #8]
   2062c:	ldr	r5, [sp, #20]
   20630:	ldr	fp, [sp, #124]	; 0x7c
   20634:	ldr	r3, [r7]
   20638:	ldr	r2, [sp, #120]	; 0x78
   2063c:	mov	r1, sl
   20640:	ldr	r0, [sp, #8]
   20644:	bl	2468 <InflateSkipData>
   20648:	ldr	r3, [r6]
   2064c:	str	r3, [sp]
   20650:	ldr	r3, [sp, #120]	; 0x78
   20654:	mov	r2, r4
   20658:	mov	r1, sl
   2065c:	ldr	r0, [sp, #8]
   20660:	bl	edd8 <ReadCompressedUInt32Data>
   20664:	ldr	r3, [r6]
   20668:	add	r4, r4, r3, lsl #2
   2066c:	ldr	r2, [fp]
   20670:	sub	r2, r2, #1
   20674:	add	r2, r2, r5
   20678:	sub	r3, r3, #1
   2067c:	ldr	r1, [r8]
   20680:	mls	r3, r1, r3, r2
   20684:	ldr	r2, [r7]
   20688:	sub	r3, r3, r2
   2068c:	ldr	r2, [sp, #120]	; 0x78
   20690:	mov	r1, sl
   20694:	ldr	r0, [sp, #8]
   20698:	bl	2468 <InflateSkipData>
   2069c:	add	r9, r9, #1
   206a0:	ldr	r3, [r6, #4]
   206a4:	cmp	r3, r9
   206a8:	bgt	20634 <ReadCompressedDataSlab2+0xc8c>
   206ac:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   206b0:	ldr	r2, [r8, #4]
   206b4:	cmp	r2, #1
   206b8:	bne	20614 <ReadCompressedDataSlab2+0xc6c>
   206bc:	ldr	r2, [r6, #4]
   206c0:	mul	r3, r2, r3
   206c4:	str	r3, [sp]
   206c8:	ldr	r3, [sp, #120]	; 0x78
   206cc:	mov	r2, r4
   206d0:	add	r1, sp, #24
   206d4:	mov	r0, r5
   206d8:	bl	edd8 <ReadCompressedUInt32Data>
   206dc:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   206e0:	mov	r9, r4
   206e4:	add	r4, r9, #4
   206e8:	str	fp, [sp]
   206ec:	ldr	r3, [sp, #120]	; 0x78
   206f0:	mov	r2, r9
   206f4:	ldr	r9, [sp, #8]
   206f8:	mov	r1, r9
   206fc:	ldr	r5, [sp, #12]
   20700:	mov	r0, r5
   20704:	bl	edd8 <ReadCompressedUInt32Data>
   20708:	ldr	r3, [sp, #124]	; 0x7c
   2070c:	ldr	r3, [r3]
   20710:	sub	r3, r3, #1
   20714:	ldr	r2, [sp, #20]
   20718:	add	r2, r3, r2
   2071c:	ldr	r3, [r6]
   20720:	sub	r3, r3, #1
   20724:	ldr	r1, [r8]
   20728:	mls	r3, r1, r3, r2
   2072c:	ldr	r2, [r7]
   20730:	sub	r3, r3, r2
   20734:	ldr	r2, [sp, #120]	; 0x78
   20738:	mov	r1, r9
   2073c:	mov	r0, r5
   20740:	bl	2468 <InflateSkipData>
   20744:	add	sl, sl, #1
   20748:	ldr	r3, [r6, #4]
   2074c:	cmp	r3, sl
   20750:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20754:	ldr	r3, [r7]
   20758:	ldr	r2, [sp, #120]	; 0x78
   2075c:	ldr	r1, [sp, #8]
   20760:	ldr	r0, [sp, #12]
   20764:	bl	2468 <InflateSkipData>
   20768:	ldr	r3, [r6]
   2076c:	cmp	r3, #1
   20770:	ble	206e0 <ReadCompressedDataSlab2+0xd38>
   20774:	mov	r5, #0
   20778:	mov	r2, r4
   2077c:	add	r9, r2, #4
   20780:	str	fp, [sp]
   20784:	ldr	r3, [sp, #120]	; 0x78
   20788:	ldr	r1, [sp, #8]
   2078c:	ldr	r4, [sp, #12]
   20790:	mov	r0, r4
   20794:	bl	edd8 <ReadCompressedUInt32Data>
   20798:	ldr	r3, [sp, #16]
   2079c:	ldr	r2, [sp, #120]	; 0x78
   207a0:	ldr	r1, [sp, #8]
   207a4:	mov	r0, r4
   207a8:	bl	2468 <InflateSkipData>
   207ac:	add	r5, r5, #1
   207b0:	mov	r2, r9
   207b4:	ldr	r3, [r6]
   207b8:	sub	r3, r3, #1
   207bc:	cmp	r3, r5
   207c0:	bgt	2077c <ReadCompressedDataSlab2+0xdd4>
   207c4:	b	206e4 <ReadCompressedDataSlab2+0xd3c>
   207c8:	ldr	r9, [r8]
   207cc:	ldr	r3, [sp, #124]	; 0x7c
   207d0:	ldr	r3, [r3]
   207d4:	ldr	r2, [r8, #4]
   207d8:	sub	r2, r2, #1
   207dc:	mul	r2, r3, r2
   207e0:	str	r2, [sp, #20]
   207e4:	ldr	r2, [r7, #4]
   207e8:	mul	r3, r2, r3
   207ec:	ldr	r2, [sp, #120]	; 0x78
   207f0:	add	r1, sp, #24
   207f4:	mov	r0, r5
   207f8:	bl	2468 <InflateSkipData>
   207fc:	ldr	r3, [r8]
   20800:	cmp	r3, #1
   20804:	beq	20834 <ReadCompressedDataSlab2+0xe8c>
   20808:	ldr	r3, [r6, #4]
   2080c:	cmp	r3, #0
   20810:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20814:	mov	sl, #0
   20818:	add	r3, sp, #24
   2081c:	str	r3, [sp, #8]
   20820:	mov	fp, #1
   20824:	sub	r3, r9, #1
   20828:	str	r3, [sp, #16]
   2082c:	str	r5, [sp, #12]
   20830:	b	20988 <ReadCompressedDataSlab2+0xfe0>
   20834:	ldr	r3, [r6]
   20838:	ldr	r2, [sp, #124]	; 0x7c
   2083c:	ldr	r2, [r2]
   20840:	cmp	r3, r2
   20844:	beq	208e4 <ReadCompressedDataSlab2+0xf3c>
   20848:	ldr	r3, [r6, #4]
   2084c:	cmp	r3, #0
   20850:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20854:	mov	r9, #0
   20858:	add	sl, sp, #24
   2085c:	str	r5, [sp, #8]
   20860:	ldr	r5, [sp, #20]
   20864:	ldr	fp, [sp, #124]	; 0x7c
   20868:	ldr	r3, [r7]
   2086c:	ldr	r2, [sp, #120]	; 0x78
   20870:	mov	r1, sl
   20874:	ldr	r0, [sp, #8]
   20878:	bl	2468 <InflateSkipData>
   2087c:	ldr	r3, [r6]
   20880:	str	r3, [sp]
   20884:	ldr	r3, [sp, #120]	; 0x78
   20888:	mov	r2, r4
   2088c:	mov	r1, sl
   20890:	ldr	r0, [sp, #8]
   20894:	bl	10a34 <ReadCompressedInt16Data>
   20898:	ldr	r3, [r6]
   2089c:	add	r4, r4, r3, lsl #1
   208a0:	ldr	r2, [fp]
   208a4:	sub	r2, r2, #1
   208a8:	add	r2, r2, r5
   208ac:	sub	r3, r3, #1
   208b0:	ldr	r1, [r8]
   208b4:	mls	r3, r1, r3, r2
   208b8:	ldr	r2, [r7]
   208bc:	sub	r3, r3, r2
   208c0:	ldr	r2, [sp, #120]	; 0x78
   208c4:	mov	r1, sl
   208c8:	ldr	r0, [sp, #8]
   208cc:	bl	2468 <InflateSkipData>
   208d0:	add	r9, r9, #1
   208d4:	ldr	r3, [r6, #4]
   208d8:	cmp	r3, r9
   208dc:	bgt	20868 <ReadCompressedDataSlab2+0xec0>
   208e0:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   208e4:	ldr	r2, [r8, #4]
   208e8:	cmp	r2, #1
   208ec:	bne	20848 <ReadCompressedDataSlab2+0xea0>
   208f0:	ldr	r2, [r6, #4]
   208f4:	mul	r3, r2, r3
   208f8:	str	r3, [sp]
   208fc:	ldr	r3, [sp, #120]	; 0x78
   20900:	mov	r2, r4
   20904:	add	r1, sp, #24
   20908:	mov	r0, r5
   2090c:	bl	10a34 <ReadCompressedInt16Data>
   20910:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20914:	mov	r9, r4
   20918:	add	r4, r9, #2
   2091c:	str	fp, [sp]
   20920:	ldr	r3, [sp, #120]	; 0x78
   20924:	mov	r2, r9
   20928:	ldr	r9, [sp, #8]
   2092c:	mov	r1, r9
   20930:	ldr	r5, [sp, #12]
   20934:	mov	r0, r5
   20938:	bl	10a34 <ReadCompressedInt16Data>
   2093c:	ldr	r3, [sp, #124]	; 0x7c
   20940:	ldr	r3, [r3]
   20944:	sub	r3, r3, #1
   20948:	ldr	r2, [sp, #20]
   2094c:	add	r2, r3, r2
   20950:	ldr	r3, [r6]
   20954:	sub	r3, r3, #1
   20958:	ldr	r1, [r8]
   2095c:	mls	r3, r1, r3, r2
   20960:	ldr	r2, [r7]
   20964:	sub	r3, r3, r2
   20968:	ldr	r2, [sp, #120]	; 0x78
   2096c:	mov	r1, r9
   20970:	mov	r0, r5
   20974:	bl	2468 <InflateSkipData>
   20978:	add	sl, sl, #1
   2097c:	ldr	r3, [r6, #4]
   20980:	cmp	r3, sl
   20984:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20988:	ldr	r3, [r7]
   2098c:	ldr	r2, [sp, #120]	; 0x78
   20990:	ldr	r1, [sp, #8]
   20994:	ldr	r0, [sp, #12]
   20998:	bl	2468 <InflateSkipData>
   2099c:	ldr	r3, [r6]
   209a0:	cmp	r3, #1
   209a4:	ble	20914 <ReadCompressedDataSlab2+0xf6c>
   209a8:	mov	r5, #0
   209ac:	mov	r2, r4
   209b0:	add	r9, r2, #2
   209b4:	str	fp, [sp]
   209b8:	ldr	r3, [sp, #120]	; 0x78
   209bc:	ldr	r1, [sp, #8]
   209c0:	ldr	r4, [sp, #12]
   209c4:	mov	r0, r4
   209c8:	bl	10a34 <ReadCompressedInt16Data>
   209cc:	ldr	r3, [sp, #16]
   209d0:	ldr	r2, [sp, #120]	; 0x78
   209d4:	ldr	r1, [sp, #8]
   209d8:	mov	r0, r4
   209dc:	bl	2468 <InflateSkipData>
   209e0:	add	r5, r5, #1
   209e4:	mov	r2, r9
   209e8:	ldr	r3, [r6]
   209ec:	sub	r3, r3, #1
   209f0:	cmp	r3, r5
   209f4:	bgt	209b0 <ReadCompressedDataSlab2+0x1008>
   209f8:	b	20918 <ReadCompressedDataSlab2+0xf70>
   209fc:	ldr	r9, [r8]
   20a00:	ldr	r3, [sp, #124]	; 0x7c
   20a04:	ldr	r3, [r3]
   20a08:	ldr	r2, [r8, #4]
   20a0c:	sub	r2, r2, #1
   20a10:	mul	r2, r3, r2
   20a14:	str	r2, [sp, #20]
   20a18:	ldr	r2, [r7, #4]
   20a1c:	mul	r3, r2, r3
   20a20:	ldr	r2, [sp, #120]	; 0x78
   20a24:	add	r1, sp, #24
   20a28:	mov	r0, r5
   20a2c:	bl	2468 <InflateSkipData>
   20a30:	ldr	r3, [r8]
   20a34:	cmp	r3, #1
   20a38:	beq	20a68 <ReadCompressedDataSlab2+0x10c0>
   20a3c:	ldr	r3, [r6, #4]
   20a40:	cmp	r3, #0
   20a44:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20a48:	mov	sl, #0
   20a4c:	add	r3, sp, #24
   20a50:	str	r3, [sp, #8]
   20a54:	mov	fp, #1
   20a58:	sub	r3, r9, #1
   20a5c:	str	r3, [sp, #16]
   20a60:	str	r5, [sp, #12]
   20a64:	b	20bbc <ReadCompressedDataSlab2+0x1214>
   20a68:	ldr	r3, [r6]
   20a6c:	ldr	r2, [sp, #124]	; 0x7c
   20a70:	ldr	r2, [r2]
   20a74:	cmp	r3, r2
   20a78:	beq	20b18 <ReadCompressedDataSlab2+0x1170>
   20a7c:	ldr	r3, [r6, #4]
   20a80:	cmp	r3, #0
   20a84:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20a88:	mov	r9, #0
   20a8c:	add	sl, sp, #24
   20a90:	str	r5, [sp, #8]
   20a94:	ldr	r5, [sp, #20]
   20a98:	ldr	fp, [sp, #124]	; 0x7c
   20a9c:	ldr	r3, [r7]
   20aa0:	ldr	r2, [sp, #120]	; 0x78
   20aa4:	mov	r1, sl
   20aa8:	ldr	r0, [sp, #8]
   20aac:	bl	2468 <InflateSkipData>
   20ab0:	ldr	r3, [r6]
   20ab4:	str	r3, [sp]
   20ab8:	ldr	r3, [sp, #120]	; 0x78
   20abc:	mov	r2, r4
   20ac0:	mov	r1, sl
   20ac4:	ldr	r0, [sp, #8]
   20ac8:	bl	126a0 <ReadCompressedUInt16Data>
   20acc:	ldr	r3, [r6]
   20ad0:	add	r4, r4, r3, lsl #1
   20ad4:	ldr	r2, [fp]
   20ad8:	sub	r2, r2, #1
   20adc:	add	r2, r2, r5
   20ae0:	sub	r3, r3, #1
   20ae4:	ldr	r1, [r8]
   20ae8:	mls	r3, r1, r3, r2
   20aec:	ldr	r2, [r7]
   20af0:	sub	r3, r3, r2
   20af4:	ldr	r2, [sp, #120]	; 0x78
   20af8:	mov	r1, sl
   20afc:	ldr	r0, [sp, #8]
   20b00:	bl	2468 <InflateSkipData>
   20b04:	add	r9, r9, #1
   20b08:	ldr	r3, [r6, #4]
   20b0c:	cmp	r3, r9
   20b10:	bgt	20a9c <ReadCompressedDataSlab2+0x10f4>
   20b14:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20b18:	ldr	r2, [r8, #4]
   20b1c:	cmp	r2, #1
   20b20:	bne	20a7c <ReadCompressedDataSlab2+0x10d4>
   20b24:	ldr	r2, [r6, #4]
   20b28:	mul	r3, r2, r3
   20b2c:	str	r3, [sp]
   20b30:	ldr	r3, [sp, #120]	; 0x78
   20b34:	mov	r2, r4
   20b38:	add	r1, sp, #24
   20b3c:	mov	r0, r5
   20b40:	bl	126a0 <ReadCompressedUInt16Data>
   20b44:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20b48:	mov	r9, r4
   20b4c:	add	r4, r9, #2
   20b50:	str	fp, [sp]
   20b54:	ldr	r3, [sp, #120]	; 0x78
   20b58:	mov	r2, r9
   20b5c:	ldr	r9, [sp, #8]
   20b60:	mov	r1, r9
   20b64:	ldr	r5, [sp, #12]
   20b68:	mov	r0, r5
   20b6c:	bl	126a0 <ReadCompressedUInt16Data>
   20b70:	ldr	r3, [sp, #124]	; 0x7c
   20b74:	ldr	r3, [r3]
   20b78:	sub	r3, r3, #1
   20b7c:	ldr	r2, [sp, #20]
   20b80:	add	r2, r3, r2
   20b84:	ldr	r3, [r6]
   20b88:	sub	r3, r3, #1
   20b8c:	ldr	r1, [r8]
   20b90:	mls	r3, r1, r3, r2
   20b94:	ldr	r2, [r7]
   20b98:	sub	r3, r3, r2
   20b9c:	ldr	r2, [sp, #120]	; 0x78
   20ba0:	mov	r1, r9
   20ba4:	mov	r0, r5
   20ba8:	bl	2468 <InflateSkipData>
   20bac:	add	sl, sl, #1
   20bb0:	ldr	r3, [r6, #4]
   20bb4:	cmp	r3, sl
   20bb8:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20bbc:	ldr	r3, [r7]
   20bc0:	ldr	r2, [sp, #120]	; 0x78
   20bc4:	ldr	r1, [sp, #8]
   20bc8:	ldr	r0, [sp, #12]
   20bcc:	bl	2468 <InflateSkipData>
   20bd0:	ldr	r3, [r6]
   20bd4:	cmp	r3, #1
   20bd8:	ble	20b48 <ReadCompressedDataSlab2+0x11a0>
   20bdc:	mov	r5, #0
   20be0:	mov	r2, r4
   20be4:	add	r9, r2, #2
   20be8:	str	fp, [sp]
   20bec:	ldr	r3, [sp, #120]	; 0x78
   20bf0:	ldr	r1, [sp, #8]
   20bf4:	ldr	r4, [sp, #12]
   20bf8:	mov	r0, r4
   20bfc:	bl	126a0 <ReadCompressedUInt16Data>
   20c00:	ldr	r3, [sp, #16]
   20c04:	ldr	r2, [sp, #120]	; 0x78
   20c08:	ldr	r1, [sp, #8]
   20c0c:	mov	r0, r4
   20c10:	bl	2468 <InflateSkipData>
   20c14:	add	r5, r5, #1
   20c18:	mov	r2, r9
   20c1c:	ldr	r3, [r6]
   20c20:	sub	r3, r3, #1
   20c24:	cmp	r3, r5
   20c28:	bgt	20be4 <ReadCompressedDataSlab2+0x123c>
   20c2c:	b	20b4c <ReadCompressedDataSlab2+0x11a4>
   20c30:	ldr	r9, [r8]
   20c34:	ldr	r3, [sp, #124]	; 0x7c
   20c38:	ldr	r3, [r3]
   20c3c:	ldr	r2, [r8, #4]
   20c40:	sub	r2, r2, #1
   20c44:	mul	r2, r3, r2
   20c48:	str	r2, [sp, #20]
   20c4c:	ldr	r2, [r7, #4]
   20c50:	mul	r3, r2, r3
   20c54:	ldr	r2, [sp, #120]	; 0x78
   20c58:	add	r1, sp, #24
   20c5c:	mov	r0, r5
   20c60:	bl	2468 <InflateSkipData>
   20c64:	ldr	r3, [r8]
   20c68:	cmp	r3, #1
   20c6c:	beq	20c9c <ReadCompressedDataSlab2+0x12f4>
   20c70:	ldr	r3, [r6, #4]
   20c74:	cmp	r3, #0
   20c78:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20c7c:	mov	sl, #0
   20c80:	add	r3, sp, #24
   20c84:	str	r3, [sp, #8]
   20c88:	mov	fp, #1
   20c8c:	sub	r3, r9, #1
   20c90:	str	r3, [sp, #16]
   20c94:	str	r5, [sp, #12]
   20c98:	b	20df0 <ReadCompressedDataSlab2+0x1448>
   20c9c:	ldr	r3, [r6]
   20ca0:	ldr	r2, [sp, #124]	; 0x7c
   20ca4:	ldr	r2, [r2]
   20ca8:	cmp	r3, r2
   20cac:	beq	20d4c <ReadCompressedDataSlab2+0x13a4>
   20cb0:	ldr	r3, [r6, #4]
   20cb4:	cmp	r3, #0
   20cb8:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20cbc:	mov	r9, #0
   20cc0:	add	sl, sp, #24
   20cc4:	str	r5, [sp, #8]
   20cc8:	ldr	r5, [sp, #20]
   20ccc:	ldr	fp, [sp, #124]	; 0x7c
   20cd0:	ldr	r3, [r7]
   20cd4:	ldr	r2, [sp, #120]	; 0x78
   20cd8:	mov	r1, sl
   20cdc:	ldr	r0, [sp, #8]
   20ce0:	bl	2468 <InflateSkipData>
   20ce4:	ldr	r3, [r6]
   20ce8:	str	r3, [sp]
   20cec:	ldr	r3, [sp, #120]	; 0x78
   20cf0:	mov	r2, r4
   20cf4:	mov	r1, sl
   20cf8:	ldr	r0, [sp, #8]
   20cfc:	bl	1427c <ReadCompressedInt8Data>
   20d00:	ldr	r3, [r6]
   20d04:	add	r4, r4, r3
   20d08:	ldr	r2, [fp]
   20d0c:	sub	r2, r2, #1
   20d10:	add	r2, r2, r5
   20d14:	sub	r3, r3, #1
   20d18:	ldr	r1, [r8]
   20d1c:	mls	r3, r1, r3, r2
   20d20:	ldr	r2, [r7]
   20d24:	sub	r3, r3, r2
   20d28:	ldr	r2, [sp, #120]	; 0x78
   20d2c:	mov	r1, sl
   20d30:	ldr	r0, [sp, #8]
   20d34:	bl	2468 <InflateSkipData>
   20d38:	add	r9, r9, #1
   20d3c:	ldr	r3, [r6, #4]
   20d40:	cmp	r3, r9
   20d44:	bgt	20cd0 <ReadCompressedDataSlab2+0x1328>
   20d48:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20d4c:	ldr	r2, [r8, #4]
   20d50:	cmp	r2, #1
   20d54:	bne	20cb0 <ReadCompressedDataSlab2+0x1308>
   20d58:	ldr	r2, [r6, #4]
   20d5c:	mul	r3, r2, r3
   20d60:	str	r3, [sp]
   20d64:	ldr	r3, [sp, #120]	; 0x78
   20d68:	mov	r2, r4
   20d6c:	add	r1, sp, #24
   20d70:	mov	r0, r5
   20d74:	bl	1427c <ReadCompressedInt8Data>
   20d78:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20d7c:	mov	r9, r4
   20d80:	add	r4, r9, #1
   20d84:	str	fp, [sp]
   20d88:	ldr	r3, [sp, #120]	; 0x78
   20d8c:	mov	r2, r9
   20d90:	ldr	r9, [sp, #8]
   20d94:	mov	r1, r9
   20d98:	ldr	r5, [sp, #12]
   20d9c:	mov	r0, r5
   20da0:	bl	1427c <ReadCompressedInt8Data>
   20da4:	ldr	r3, [sp, #124]	; 0x7c
   20da8:	ldr	r3, [r3]
   20dac:	sub	r3, r3, #1
   20db0:	ldr	r2, [sp, #20]
   20db4:	add	r2, r3, r2
   20db8:	ldr	r3, [r6]
   20dbc:	sub	r3, r3, #1
   20dc0:	ldr	r1, [r8]
   20dc4:	mls	r3, r1, r3, r2
   20dc8:	ldr	r2, [r7]
   20dcc:	sub	r3, r3, r2
   20dd0:	ldr	r2, [sp, #120]	; 0x78
   20dd4:	mov	r1, r9
   20dd8:	mov	r0, r5
   20ddc:	bl	2468 <InflateSkipData>
   20de0:	add	sl, sl, #1
   20de4:	ldr	r3, [r6, #4]
   20de8:	cmp	r3, sl
   20dec:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20df0:	ldr	r3, [r7]
   20df4:	ldr	r2, [sp, #120]	; 0x78
   20df8:	ldr	r1, [sp, #8]
   20dfc:	ldr	r0, [sp, #12]
   20e00:	bl	2468 <InflateSkipData>
   20e04:	ldr	r3, [r6]
   20e08:	cmp	r3, #1
   20e0c:	ble	20d7c <ReadCompressedDataSlab2+0x13d4>
   20e10:	mov	r5, #0
   20e14:	mov	r2, r4
   20e18:	add	r9, r2, #1
   20e1c:	str	fp, [sp]
   20e20:	ldr	r3, [sp, #120]	; 0x78
   20e24:	ldr	r1, [sp, #8]
   20e28:	ldr	r4, [sp, #12]
   20e2c:	mov	r0, r4
   20e30:	bl	1427c <ReadCompressedInt8Data>
   20e34:	ldr	r3, [sp, #16]
   20e38:	ldr	r2, [sp, #120]	; 0x78
   20e3c:	ldr	r1, [sp, #8]
   20e40:	mov	r0, r4
   20e44:	bl	2468 <InflateSkipData>
   20e48:	add	r5, r5, #1
   20e4c:	mov	r2, r9
   20e50:	ldr	r3, [r6]
   20e54:	sub	r3, r3, #1
   20e58:	cmp	r3, r5
   20e5c:	bgt	20e18 <ReadCompressedDataSlab2+0x1470>
   20e60:	b	20d80 <ReadCompressedDataSlab2+0x13d8>
   20e64:	ldr	r9, [r8]
   20e68:	ldr	r3, [sp, #124]	; 0x7c
   20e6c:	ldr	r3, [r3]
   20e70:	ldr	r2, [r8, #4]
   20e74:	sub	r2, r2, #1
   20e78:	mul	r2, r3, r2
   20e7c:	str	r2, [sp, #20]
   20e80:	ldr	r2, [r7, #4]
   20e84:	mul	r3, r2, r3
   20e88:	ldr	r2, [sp, #120]	; 0x78
   20e8c:	add	r1, sp, #24
   20e90:	mov	r0, r5
   20e94:	bl	2468 <InflateSkipData>
   20e98:	ldr	r3, [r8]
   20e9c:	cmp	r3, #1
   20ea0:	beq	20ed0 <ReadCompressedDataSlab2+0x1528>
   20ea4:	ldr	r3, [r6, #4]
   20ea8:	cmp	r3, #0
   20eac:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20eb0:	mov	sl, #0
   20eb4:	add	r3, sp, #24
   20eb8:	str	r3, [sp, #8]
   20ebc:	mov	fp, #1
   20ec0:	sub	r3, r9, #1
   20ec4:	str	r3, [sp, #16]
   20ec8:	str	r5, [sp, #12]
   20ecc:	b	21024 <ReadCompressedDataSlab2+0x167c>
   20ed0:	ldr	r3, [r6]
   20ed4:	ldr	r2, [sp, #124]	; 0x7c
   20ed8:	ldr	r2, [r2]
   20edc:	cmp	r3, r2
   20ee0:	beq	20f80 <ReadCompressedDataSlab2+0x15d8>
   20ee4:	ldr	r3, [r6, #4]
   20ee8:	cmp	r3, #0
   20eec:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20ef0:	mov	r9, #0
   20ef4:	add	sl, sp, #24
   20ef8:	str	r5, [sp, #8]
   20efc:	ldr	r5, [sp, #20]
   20f00:	ldr	fp, [sp, #124]	; 0x7c
   20f04:	ldr	r3, [r7]
   20f08:	ldr	r2, [sp, #120]	; 0x78
   20f0c:	mov	r1, sl
   20f10:	ldr	r0, [sp, #8]
   20f14:	bl	2468 <InflateSkipData>
   20f18:	ldr	r3, [r6]
   20f1c:	str	r3, [sp]
   20f20:	ldr	r3, [sp, #120]	; 0x78
   20f24:	mov	r2, r4
   20f28:	mov	r1, sl
   20f2c:	ldr	r0, [sp, #8]
   20f30:	bl	15ea0 <ReadCompressedUInt8Data>
   20f34:	ldr	r3, [r6]
   20f38:	add	r4, r4, r3
   20f3c:	ldr	r2, [fp]
   20f40:	sub	r2, r2, #1
   20f44:	add	r2, r2, r5
   20f48:	sub	r3, r3, #1
   20f4c:	ldr	r1, [r8]
   20f50:	mls	r3, r1, r3, r2
   20f54:	ldr	r2, [r7]
   20f58:	sub	r3, r3, r2
   20f5c:	ldr	r2, [sp, #120]	; 0x78
   20f60:	mov	r1, sl
   20f64:	ldr	r0, [sp, #8]
   20f68:	bl	2468 <InflateSkipData>
   20f6c:	add	r9, r9, #1
   20f70:	ldr	r3, [r6, #4]
   20f74:	cmp	r3, r9
   20f78:	bgt	20f04 <ReadCompressedDataSlab2+0x155c>
   20f7c:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20f80:	ldr	r2, [r8, #4]
   20f84:	cmp	r2, #1
   20f88:	bne	20ee4 <ReadCompressedDataSlab2+0x153c>
   20f8c:	ldr	r2, [r6, #4]
   20f90:	mul	r3, r2, r3
   20f94:	str	r3, [sp]
   20f98:	ldr	r3, [sp, #120]	; 0x78
   20f9c:	mov	r2, r4
   20fa0:	add	r1, sp, #24
   20fa4:	mov	r0, r5
   20fa8:	bl	15ea0 <ReadCompressedUInt8Data>
   20fac:	b	1fba0 <ReadCompressedDataSlab2+0x1f8>
   20fb0:	mov	r9, r4
   20fb4:	add	r4, r9, #1
   20fb8:	str	fp, [sp]
   20fbc:	ldr	r3, [sp, #120]	; 0x78
   20fc0:	mov	r2, r9
   20fc4:	ldr	r9, [sp, #8]
   20fc8:	mov	r1, r9
   20fcc:	ldr	r5, [sp, #12]
   20fd0:	mov	r0, r5
   20fd4:	bl	15ea0 <ReadCompressedUInt8Data>
   20fd8:	ldr	r3, [sp, #124]	; 0x7c
   20fdc:	ldr	r3, [r3]
   20fe0:	sub	r3, r3, #1
   20fe4:	ldr	r2, [sp, #20]
   20fe8:	add	r2, r3, r2
   20fec:	ldr	r3, [r6]
   20ff0:	sub	r3, r3, #1
   20ff4:	ldr	r1, [r8]
   20ff8:	mls	r3, r1, r3, r2
   20ffc:	ldr	r2, [r7]
   21000:	sub	r3, r3, r2
   21004:	ldr	r2, [sp, #120]	; 0x78
   21008:	mov	r1, r9
   2100c:	mov	r0, r5
   21010:	bl	2468 <InflateSkipData>
   21014:	add	sl, sl, #1
   21018:	ldr	r3, [r6, #4]
   2101c:	cmp	r3, sl
   21020:	ble	1fba0 <ReadCompressedDataSlab2+0x1f8>
   21024:	ldr	r3, [r7]
   21028:	ldr	r2, [sp, #120]	; 0x78
   2102c:	ldr	r1, [sp, #8]
   21030:	ldr	r0, [sp, #12]
   21034:	bl	2468 <InflateSkipData>
   21038:	ldr	r3, [r6]
   2103c:	cmp	r3, #1
   21040:	ble	20fb0 <ReadCompressedDataSlab2+0x1608>
   21044:	mov	r5, #0
   21048:	mov	r2, r4
   2104c:	add	r9, r2, #1
   21050:	str	fp, [sp]
   21054:	ldr	r3, [sp, #120]	; 0x78
   21058:	ldr	r1, [sp, #8]
   2105c:	ldr	r4, [sp, #12]
   21060:	mov	r0, r4
   21064:	bl	15ea0 <ReadCompressedUInt8Data>
   21068:	ldr	r3, [sp, #16]
   2106c:	ldr	r2, [sp, #120]	; 0x78
   21070:	ldr	r1, [sp, #8]
   21074:	mov	r0, r4
   21078:	bl	2468 <InflateSkipData>
   2107c:	add	r5, r5, #1
   21080:	mov	r2, r9
   21084:	ldr	r3, [r6]
   21088:	sub	r3, r3, #1
   2108c:	cmp	r3, r5
   21090:	bgt	2104c <ReadCompressedDataSlab2+0x16a4>
   21094:	b	20fb4 <ReadCompressedDataSlab2+0x160c>

00021098 <WriteData>:
   21098:	strd	r4, [sp, #-20]!	; 0xffffffec
   2109c:	strd	r6, [sp, #8]
   210a0:	str	lr, [sp, #16]
   210a4:	sub	sp, sp, #20
   210a8:	str	r3, [sp, #4]
   210ac:	mov	r3, #0
   210b0:	str	r3, [sp, #12]
   210b4:	subs	r4, r0, #0
   210b8:	moveq	r0, #0
   210bc:	beq	21124 <WriteData+0x8c>
   210c0:	ldr	r3, [r4]
   210c4:	cmp	r3, #0
   210c8:	moveq	r0, #0
   210cc:	beq	21124 <WriteData+0x8c>
   210d0:	mov	r5, r2
   210d4:	mov	r6, r1
   210d8:	ldr	r0, [sp, #4]
   210dc:	bl	1598 <Mat_SizeOf@plt>
   210e0:	mov	r7, r0
   210e4:	mul	r3, r5, r0
   210e8:	str	r3, [sp, #12]
   210ec:	ldr	r3, [r4]
   210f0:	mov	r2, #1
   210f4:	mov	r1, #4
   210f8:	add	r0, sp, r1
   210fc:	bl	1514 <fwrite@plt>
   21100:	ldr	r3, [r4]
   21104:	mov	r2, #1
   21108:	mov	r1, #4
   2110c:	add	r0, sp, #12
   21110:	bl	1514 <fwrite@plt>
   21114:	cmp	r6, #0
   21118:	cmpne	r5, #0
   2111c:	bgt	21138 <WriteData+0xa0>
   21120:	ldr	r0, [sp, #12]
   21124:	add	sp, sp, #20
   21128:	ldrd	r4, [sp]
   2112c:	ldrd	r6, [sp, #8]
   21130:	add	sp, sp, #16
   21134:	pop	{pc}		; (ldr pc, [sp], #4)
   21138:	ldr	r3, [r4]
   2113c:	mov	r2, r5
   21140:	mov	r1, r7
   21144:	mov	r0, r6
   21148:	bl	1514 <fwrite@plt>
   2114c:	b	21120 <WriteData+0x88>

00021150 <Mat_VarReadNumeric5>:
   21150:	strd	r4, [sp, #-28]!	; 0xffffffe4
   21154:	strd	r6, [sp, #8]
   21158:	strd	r8, [sp, #16]
   2115c:	str	lr, [sp, #24]
   21160:	sub	sp, sp, #20
   21164:	mov	r6, r0
   21168:	mov	r5, r1
   2116c:	mov	r7, r2
   21170:	mov	r8, r3
   21174:	ldr	r3, [r1, #48]	; 0x30
   21178:	cmp	r3, #1
   2117c:	beq	21210 <Mat_VarReadNumeric5+0xc0>
   21180:	ldr	r3, [r0]
   21184:	mov	r2, #1
   21188:	mov	r1, #4
   2118c:	add	r0, sp, #8
   21190:	bl	1520 <fread@plt>
   21194:	ldr	r3, [r6, #20]
   21198:	cmp	r3, #0
   2119c:	bne	212a0 <Mat_VarReadNumeric5+0x150>
   211a0:	ldr	r0, [sp, #8]
   211a4:	uxtb	r4, r0
   211a8:	cmp	r4, #25
   211ac:	movcs	r4, #0
   211b0:	lsr	r3, r0, #16
   211b4:	lsl	r3, r3, #16
   211b8:	cmp	r3, #0
   211bc:	lsrne	r0, r0, #16
   211c0:	beq	212ac <Mat_VarReadNumeric5+0x15c>
   211c4:	mov	r9, #1
   211c8:	ldr	r3, [r5, #48]	; 0x30
   211cc:	cmp	r3, #0
   211d0:	bne	2142c <Mat_VarReadNumeric5+0x2dc>
   211d4:	ldr	r3, [r5, #16]
   211d8:	sub	r3, r3, #6
   211dc:	cmp	r3, #9
   211e0:	addls	pc, pc, r3, lsl #2
   211e4:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   211e8:	b	2130c <Mat_VarReadNumeric5+0x1bc>
   211ec:	b	21354 <Mat_VarReadNumeric5+0x204>
   211f0:	b	213fc <Mat_VarReadNumeric5+0x2ac>
   211f4:	b	21414 <Mat_VarReadNumeric5+0x2c4>
   211f8:	b	213cc <Mat_VarReadNumeric5+0x27c>
   211fc:	b	213e4 <Mat_VarReadNumeric5+0x294>
   21200:	b	2139c <Mat_VarReadNumeric5+0x24c>
   21204:	b	213b4 <Mat_VarReadNumeric5+0x264>
   21208:	b	2136c <Mat_VarReadNumeric5+0x21c>
   2120c:	b	21384 <Mat_VarReadNumeric5+0x234>
   21210:	ldr	r3, [r1, #52]	; 0x34
   21214:	ldr	r3, [r3, #12]
   21218:	mov	r2, #0
   2121c:	str	r2, [r3, #4]
   21220:	ldr	r3, [r1, #52]	; 0x34
   21224:	add	r2, sp, #8
   21228:	ldr	r1, [r3, #12]
   2122c:	bl	31c4 <InflateDataType>
   21230:	ldr	r3, [r6, #20]
   21234:	cmp	r3, #0
   21238:	bne	21288 <Mat_VarReadNumeric5+0x138>
   2123c:	ldr	r0, [sp, #8]
   21240:	uxtb	r4, r0
   21244:	cmp	r4, #25
   21248:	movcs	r4, #0
   2124c:	lsr	r3, r0, #16
   21250:	lsl	r3, r3, #16
   21254:	cmp	r3, #0
   21258:	lsrne	r0, r0, #16
   2125c:	bne	211c4 <Mat_VarReadNumeric5+0x74>
   21260:	ldr	r3, [r5, #52]	; 0x34
   21264:	add	r2, sp, #12
   21268:	ldr	r1, [r3, #12]
   2126c:	mov	r0, r6
   21270:	bl	31c4 <InflateDataType>
   21274:	ldr	r3, [r6, #20]
   21278:	cmp	r3, #0
   2127c:	bne	21294 <Mat_VarReadNumeric5+0x144>
   21280:	ldr	r0, [sp, #12]
   21284:	b	212d0 <Mat_VarReadNumeric5+0x180>
   21288:	add	r0, sp, #8
   2128c:	bl	18d4 <Mat_uint32Swap>
   21290:	b	2123c <Mat_VarReadNumeric5+0xec>
   21294:	add	r0, sp, #12
   21298:	bl	18d4 <Mat_uint32Swap>
   2129c:	b	21280 <Mat_VarReadNumeric5+0x130>
   212a0:	add	r0, sp, #8
   212a4:	bl	18d4 <Mat_uint32Swap>
   212a8:	b	211a0 <Mat_VarReadNumeric5+0x50>
   212ac:	ldr	r3, [r6]
   212b0:	mov	r2, #1
   212b4:	mov	r1, #4
   212b8:	add	r0, sp, #12
   212bc:	bl	1520 <fread@plt>
   212c0:	ldr	r3, [r6, #20]
   212c4:	cmp	r3, #0
   212c8:	bne	212f8 <Mat_VarReadNumeric5+0x1a8>
   212cc:	ldr	r0, [sp, #12]
   212d0:	cmp	r0, #0
   212d4:	bne	21304 <Mat_VarReadNumeric5+0x1b4>
   212d8:	mov	r3, #0
   212dc:	str	r3, [r5]
   212e0:	add	sp, sp, #20
   212e4:	ldrd	r4, [sp]
   212e8:	ldrd	r6, [sp, #8]
   212ec:	ldrd	r8, [sp, #16]
   212f0:	add	sp, sp, #24
   212f4:	pop	{pc}		; (ldr pc, [sp], #4)
   212f8:	add	r0, sp, #12
   212fc:	bl	18d4 <Mat_uint32Swap>
   21300:	b	212cc <Mat_VarReadNumeric5+0x17c>
   21304:	mov	r9, #0
   21308:	b	211c8 <Mat_VarReadNumeric5+0x78>
   2130c:	mov	r3, r8
   21310:	mov	r2, r4
   21314:	mov	r1, r7
   21318:	mov	r0, r6
   2131c:	bl	3a44 <ReadDoubleData>
   21320:	cmp	r9, #0
   21324:	addne	r0, r0, #4
   21328:	tst	r0, #7
   2132c:	beq	212e0 <Mat_VarReadNumeric5+0x190>
   21330:	rsbs	r3, r0, #0
   21334:	and	r1, r0, #7
   21338:	and	r3, r3, #7
   2133c:	rsbpl	r1, r3, #0
   21340:	mov	r2, #1
   21344:	rsb	r1, r1, #8
   21348:	ldr	r0, [r6]
   2134c:	bl	1694 <fseek@plt>
   21350:	b	212e0 <Mat_VarReadNumeric5+0x190>
   21354:	mov	r3, r8
   21358:	mov	r2, r4
   2135c:	mov	r1, r7
   21360:	mov	r0, r6
   21364:	bl	6360 <ReadSingleData>
   21368:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   2136c:	mov	r3, r8
   21370:	mov	r2, r4
   21374:	mov	r1, r7
   21378:	mov	r0, r6
   2137c:	bl	80c4 <ReadInt64Data>
   21380:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   21384:	mov	r3, r8
   21388:	mov	r2, r4
   2138c:	mov	r1, r7
   21390:	mov	r0, r6
   21394:	bl	9dd8 <ReadUInt64Data>
   21398:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   2139c:	mov	r3, r8
   213a0:	mov	r2, r4
   213a4:	mov	r1, r7
   213a8:	mov	r0, r6
   213ac:	bl	baec <ReadInt32Data>
   213b0:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   213b4:	mov	r3, r8
   213b8:	mov	r2, r4
   213bc:	mov	r1, r7
   213c0:	mov	r0, r6
   213c4:	bl	d728 <ReadUInt32Data>
   213c8:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   213cc:	mov	r3, r8
   213d0:	mov	r2, r4
   213d4:	mov	r1, r7
   213d8:	mov	r0, r6
   213dc:	bl	f364 <ReadInt16Data>
   213e0:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   213e4:	mov	r3, r8
   213e8:	mov	r2, r4
   213ec:	mov	r1, r7
   213f0:	mov	r0, r6
   213f4:	bl	10fd0 <ReadUInt16Data>
   213f8:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   213fc:	mov	r3, r8
   21400:	mov	r2, r4
   21404:	mov	r1, r7
   21408:	mov	r0, r6
   2140c:	bl	12c3c <ReadInt8Data>
   21410:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   21414:	mov	r3, r8
   21418:	mov	r2, r4
   2141c:	mov	r1, r7
   21420:	mov	r0, r6
   21424:	bl	14860 <ReadUInt8Data>
   21428:	b	21320 <Mat_VarReadNumeric5+0x1d0>
   2142c:	cmp	r3, #1
   21430:	bne	212e0 <Mat_VarReadNumeric5+0x190>
   21434:	ldr	r3, [r5, #16]
   21438:	sub	r3, r3, #6
   2143c:	cmp	r3, #9
   21440:	addls	pc, pc, r3, lsl #2
   21444:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21448:	b	21470 <Mat_VarReadNumeric5+0x320>
   2144c:	b	214c4 <Mat_VarReadNumeric5+0x374>
   21450:	b	215a4 <Mat_VarReadNumeric5+0x454>
   21454:	b	215c4 <Mat_VarReadNumeric5+0x474>
   21458:	b	21564 <Mat_VarReadNumeric5+0x414>
   2145c:	b	21584 <Mat_VarReadNumeric5+0x434>
   21460:	b	21524 <Mat_VarReadNumeric5+0x3d4>
   21464:	b	21544 <Mat_VarReadNumeric5+0x3f4>
   21468:	b	214e4 <Mat_VarReadNumeric5+0x394>
   2146c:	b	21504 <Mat_VarReadNumeric5+0x3b4>
   21470:	ldr	r3, [r5, #52]	; 0x34
   21474:	ldr	r1, [r3, #12]
   21478:	str	r8, [sp]
   2147c:	mov	r3, r4
   21480:	mov	r2, r7
   21484:	mov	r0, r6
   21488:	bl	4fc4 <ReadCompressedDoubleData>
   2148c:	cmp	r9, #0
   21490:	addne	r0, r0, #4
   21494:	tst	r0, #7
   21498:	beq	212e0 <Mat_VarReadNumeric5+0x190>
   2149c:	rsbs	r3, r0, #0
   214a0:	and	r2, r0, #7
   214a4:	and	r3, r3, #7
   214a8:	rsbpl	r2, r3, #0
   214ac:	ldr	r3, [r5, #52]	; 0x34
   214b0:	rsb	r2, r2, #8
   214b4:	ldr	r1, [r3, #12]
   214b8:	mov	r0, r6
   214bc:	bl	203c <InflateSkip>
   214c0:	b	212e0 <Mat_VarReadNumeric5+0x190>
   214c4:	ldr	r3, [r5, #52]	; 0x34
   214c8:	ldr	r1, [r3, #12]
   214cc:	str	r8, [sp]
   214d0:	mov	r3, r4
   214d4:	mov	r2, r7
   214d8:	mov	r0, r6
   214dc:	bl	7ae8 <ReadCompressedSingleData>
   214e0:	b	2148c <Mat_VarReadNumeric5+0x33c>
   214e4:	ldr	r3, [r5, #52]	; 0x34
   214e8:	ldr	r1, [r3, #12]
   214ec:	str	r8, [sp]
   214f0:	mov	r3, r4
   214f4:	mov	r2, r7
   214f8:	mov	r0, r6
   214fc:	bl	9804 <ReadCompressedInt64Data>
   21500:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21504:	ldr	r3, [r5, #52]	; 0x34
   21508:	ldr	r1, [r3, #12]
   2150c:	str	r8, [sp]
   21510:	mov	r3, r4
   21514:	mov	r2, r7
   21518:	mov	r0, r6
   2151c:	bl	b518 <ReadCompressedUInt64Data>
   21520:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21524:	ldr	r3, [r5, #52]	; 0x34
   21528:	ldr	r1, [r3, #12]
   2152c:	str	r8, [sp]
   21530:	mov	r3, r4
   21534:	mov	r2, r7
   21538:	mov	r0, r6
   2153c:	bl	d19c <ReadCompressedInt32Data>
   21540:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21544:	ldr	r3, [r5, #52]	; 0x34
   21548:	ldr	r1, [r3, #12]
   2154c:	str	r8, [sp]
   21550:	mov	r3, r4
   21554:	mov	r2, r7
   21558:	mov	r0, r6
   2155c:	bl	edd8 <ReadCompressedUInt32Data>
   21560:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21564:	ldr	r3, [r5, #52]	; 0x34
   21568:	ldr	r1, [r3, #12]
   2156c:	str	r8, [sp]
   21570:	mov	r3, r4
   21574:	mov	r2, r7
   21578:	mov	r0, r6
   2157c:	bl	10a34 <ReadCompressedInt16Data>
   21580:	b	2148c <Mat_VarReadNumeric5+0x33c>
   21584:	ldr	r3, [r5, #52]	; 0x34
   21588:	ldr	r1, [r3, #12]
   2158c:	str	r8, [sp]
   21590:	mov	r3, r4
   21594:	mov	r2, r7
   21598:	mov	r0, r6
   2159c:	bl	126a0 <ReadCompressedUInt16Data>
   215a0:	b	2148c <Mat_VarReadNumeric5+0x33c>
   215a4:	ldr	r3, [r5, #52]	; 0x34
   215a8:	ldr	r1, [r3, #12]
   215ac:	str	r8, [sp]
   215b0:	mov	r3, r4
   215b4:	mov	r2, r7
   215b8:	mov	r0, r6
   215bc:	bl	1427c <ReadCompressedInt8Data>
   215c0:	b	2148c <Mat_VarReadNumeric5+0x33c>
   215c4:	ldr	r3, [r5, #52]	; 0x34
   215c8:	ldr	r1, [r3, #12]
   215cc:	str	r8, [sp]
   215d0:	mov	r3, r4
   215d4:	mov	r2, r7
   215d8:	mov	r0, r6
   215dc:	bl	15ea0 <ReadCompressedUInt8Data>
   215e0:	b	2148c <Mat_VarReadNumeric5+0x33c>

000215e4 <GetDataSlab>:
   215e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   215e8:	strd	r6, [sp, #8]
   215ec:	strd	r8, [sp, #16]
   215f0:	strd	sl, [sp, #24]
   215f4:	str	lr, [sp, #32]
   215f8:	sub	sp, sp, #156	; 0x9c
   215fc:	str	r0, [sp, #8]
   21600:	str	r1, [sp, #4]
   21604:	mov	r0, r2
   21608:	mov	r8, r3
   2160c:	ldr	sl, [sp, #200]	; 0xc8
   21610:	ldr	fp, [sp, #204]	; 0xcc
   21614:	ldr	r9, [sp, #208]	; 0xd0
   21618:	cmp	r2, #6
   2161c:	cmpeq	r3, #9
   21620:	moveq	r5, #1
   21624:	beq	216b8 <GetDataSlab+0xd4>
   21628:	cmp	r2, #7
   2162c:	cmpeq	r3, #7
   21630:	moveq	r5, #1
   21634:	beq	216b8 <GetDataSlab+0xd4>
   21638:	cmp	r2, #10
   2163c:	cmpeq	r3, #3
   21640:	moveq	r5, #1
   21644:	beq	216b8 <GetDataSlab+0xd4>
   21648:	cmp	r2, #12
   2164c:	cmpeq	r3, #5
   21650:	moveq	r5, #1
   21654:	beq	216b8 <GetDataSlab+0xd4>
   21658:	cmp	r2, #14
   2165c:	cmpeq	r3, #12
   21660:	moveq	r5, #1
   21664:	beq	216b8 <GetDataSlab+0xd4>
   21668:	cmp	r2, #8
   2166c:	cmpeq	r3, #1
   21670:	moveq	r5, #1
   21674:	beq	216b8 <GetDataSlab+0xd4>
   21678:	cmp	r2, #11
   2167c:	cmpeq	r3, #4
   21680:	moveq	r5, #1
   21684:	beq	216b8 <GetDataSlab+0xd4>
   21688:	cmp	r2, #13
   2168c:	cmpeq	r3, #6
   21690:	moveq	r5, #1
   21694:	beq	216b8 <GetDataSlab+0xd4>
   21698:	cmp	r2, #15
   2169c:	cmpeq	r3, #13
   216a0:	moveq	r5, #1
   216a4:	beq	216b8 <GetDataSlab+0xd4>
   216a8:	cmp	r2, #9
   216ac:	cmpeq	r3, #2
   216b0:	moveq	r5, #1
   216b4:	movne	r5, #0
   216b8:	cmp	r9, #2
   216bc:	beq	21740 <GetDataSlab+0x15c>
   216c0:	mov	r2, #0
   216c4:	mov	r3, #0
   216c8:	strd	r2, [sp, #32]
   216cc:	strd	r2, [sp, #40]	; 0x28
   216d0:	strd	r2, [sp, #48]	; 0x30
   216d4:	strd	r2, [sp, #56]	; 0x38
   216d8:	strd	r2, [sp, #64]	; 0x40
   216dc:	strd	r2, [sp, #72]	; 0x48
   216e0:	strd	r2, [sp, #80]	; 0x50
   216e4:	strd	r2, [sp, #88]	; 0x58
   216e8:	strd	r2, [sp, #96]	; 0x60
   216ec:	strd	r2, [sp, #104]	; 0x68
   216f0:	add	r1, sp, #112	; 0x70
   216f4:	strd	r2, [sp, #112]	; 0x70
   216f8:	strd	r2, [r1, #8]
   216fc:	strd	r2, [r1, #16]
   21700:	strd	r2, [r1, #24]
   21704:	strd	r2, [r1, #32]
   21708:	sub	r3, r0, #6
   2170c:	cmp	r3, #9
   21710:	addls	pc, pc, r3, lsl #2
   21714:	b	3a2b4 <GetDataSlab+0x18cd0>
   21718:	b	24e70 <GetDataSlab+0x388c>
   2171c:	b	270b0 <GetDataSlab+0x5acc>
   21720:	b	35eac <GetDataSlab+0x148c8>
   21724:	b	380b0 <GetDataSlab+0x16acc>
   21728:	b	31ab4 <GetDataSlab+0x104d0>
   2172c:	b	33cb0 <GetDataSlab+0x126cc>
   21730:	b	2d6dc <GetDataSlab+0xc0f8>
   21734:	b	2f8c8 <GetDataSlab+0xe2e4>
   21738:	b	292d4 <GetDataSlab+0x7cf0>
   2173c:	b	2b4d8 <GetDataSlab+0x9ef4>
   21740:	ldr	r6, [sl]
   21744:	ldr	r7, [fp]
   21748:	ldr	r3, [sp, #196]	; 0xc4
   2174c:	ldr	ip, [r3]
   21750:	ldr	r3, [sp, #192]	; 0xc0
   21754:	ldr	r1, [r3]
   21758:	sub	r2, r7, #1
   2175c:	add	r3, ip, #1
   21760:	mla	r3, r6, r2, r3
   21764:	cmp	r3, r1
   21768:	movhi	r3, #1
   2176c:	bhi	251fc <GetDataSlab+0x3c18>
   21770:	ldr	r9, [sl, #4]
   21774:	ldr	lr, [fp, #4]
   21778:	ldr	r3, [sp, #196]	; 0xc4
   2177c:	ldr	r2, [r3, #4]
   21780:	sub	r4, lr, #1
   21784:	add	r3, r2, #1
   21788:	mla	r3, r9, r4, r3
   2178c:	ldr	r4, [sp, #192]	; 0xc0
   21790:	ldr	r4, [r4, #4]
   21794:	cmp	r3, r4
   21798:	movhi	r3, #1
   2179c:	bhi	251fc <GetDataSlab+0x3c18>
   217a0:	cmp	r6, #1
   217a4:	beq	217e0 <GetDataSlab+0x1fc>
   217a8:	sub	r3, r0, #6
   217ac:	cmp	r3, #9
   217b0:	addls	pc, pc, r3, lsl #2
   217b4:	b	3a58c <GetDataSlab+0x18fa8>
   217b8:	b	21810 <GetDataSlab+0x22c>
   217bc:	b	21da4 <GetDataSlab+0x7c0>
   217c0:	b	243b0 <GetDataSlab+0x2dcc>
   217c4:	b	24910 <GetDataSlab+0x332c>
   217c8:	b	238f0 <GetDataSlab+0x230c>
   217cc:	b	23e50 <GetDataSlab+0x286c>
   217d0:	b	22e40 <GetDataSlab+0x185c>
   217d4:	b	23398 <GetDataSlab+0x1db4>
   217d8:	b	22338 <GetDataSlab+0xd54>
   217dc:	b	228bc <GetDataSlab+0x12d8>
   217e0:	cmp	r9, #1
   217e4:	cmpeq	r7, r1
   217e8:	moveq	r3, #1
   217ec:	movne	r3, #0
   217f0:	tst	r5, r3
   217f4:	beq	217a8 <GetDataSlab+0x1c4>
   217f8:	ldr	r2, [sp, #212]	; 0xd4
   217fc:	ldr	r1, [sp, #8]
   21800:	ldr	r0, [sp, #4]
   21804:	bl	1490 <memcpy@plt>
   21808:	mov	r3, #0
   2180c:	b	251fc <GetDataSlab+0x3c18>
   21810:	sub	r3, r8, #1
   21814:	cmp	r3, #8
   21818:	addls	pc, pc, r3, lsl #2
   2181c:	b	21c80 <GetDataSlab+0x69c>
   21820:	b	21b78 <GetDataSlab+0x594>
   21824:	b	21bfc <GetDataSlab+0x618>
   21828:	b	21a60 <GetDataSlab+0x47c>
   2182c:	b	21aec <GetDataSlab+0x508>
   21830:	b	21950 <GetDataSlab+0x36c>
   21834:	b	219d8 <GetDataSlab+0x3f4>
   21838:	b	218c8 <GetDataSlab+0x2e4>
   2183c:	b	21c80 <GetDataSlab+0x69c>
   21840:	b	21844 <GetDataSlab+0x260>
   21844:	mla	r3, r2, r1, ip
   21848:	ldr	r2, [sp, #8]
   2184c:	add	ip, r2, r3, lsl #3
   21850:	cmp	lr, #0
   21854:	movle	r3, #0
   21858:	ble	251fc <GetDataSlab+0x3c18>
   2185c:	mov	lr, #0
   21860:	b	218b4 <GetDataSlab+0x2d0>
   21864:	ldr	r2, [sl]
   21868:	mul	r2, r2, r3
   2186c:	add	r2, ip, r2, lsl #3
   21870:	ldrd	r0, [r2]
   21874:	ldr	r2, [sp, #4]
   21878:	strd	r0, [r2], #8
   2187c:	str	r2, [sp, #4]
   21880:	add	r3, r3, #1
   21884:	ldr	r2, [fp]
   21888:	cmp	r2, r3
   2188c:	bgt	21864 <GetDataSlab+0x280>
   21890:	ldr	r3, [sl, #4]
   21894:	ldr	r2, [sp, #192]	; 0xc0
   21898:	ldr	r2, [r2]
   2189c:	mul	r3, r2, r3
   218a0:	add	ip, ip, r3, lsl #3
   218a4:	add	lr, lr, #1
   218a8:	ldr	r3, [fp, #4]
   218ac:	cmp	r3, lr
   218b0:	ble	3a594 <GetDataSlab+0x18fb0>
   218b4:	ldr	r3, [fp]
   218b8:	cmp	r3, #0
   218bc:	movgt	r3, #0
   218c0:	bgt	21864 <GetDataSlab+0x280>
   218c4:	b	21890 <GetDataSlab+0x2ac>
   218c8:	mla	r3, r2, r1, ip
   218cc:	ldr	r2, [sp, #8]
   218d0:	add	r1, r2, r3, lsl #2
   218d4:	cmp	lr, #0
   218d8:	movle	r3, #0
   218dc:	ble	251fc <GetDataSlab+0x3c18>
   218e0:	mov	r0, #0
   218e4:	b	2193c <GetDataSlab+0x358>
   218e8:	ldr	r2, [sl]
   218ec:	mul	r2, r2, r3
   218f0:	add	r2, r1, r2, lsl #2
   218f4:	vldr	s15, [r2]
   218f8:	vcvt.f64.f32	d7, s15
   218fc:	ldr	r2, [sp, #4]
   21900:	vstmia	r2!, {d7}
   21904:	str	r2, [sp, #4]
   21908:	add	r3, r3, #1
   2190c:	ldr	r2, [fp]
   21910:	cmp	r2, r3
   21914:	bgt	218e8 <GetDataSlab+0x304>
   21918:	ldr	r3, [sl, #4]
   2191c:	ldr	r2, [sp, #192]	; 0xc0
   21920:	ldr	r2, [r2]
   21924:	mul	r3, r2, r3
   21928:	add	r1, r1, r3, lsl #2
   2192c:	add	r0, r0, #1
   21930:	ldr	r3, [fp, #4]
   21934:	cmp	r3, r0
   21938:	ble	3a59c <GetDataSlab+0x18fb8>
   2193c:	ldr	r3, [fp]
   21940:	cmp	r3, #0
   21944:	movgt	r3, #0
   21948:	bgt	218e8 <GetDataSlab+0x304>
   2194c:	b	21918 <GetDataSlab+0x334>
   21950:	mla	r3, r2, r1, ip
   21954:	ldr	r2, [sp, #8]
   21958:	add	r1, r2, r3, lsl #2
   2195c:	cmp	lr, #0
   21960:	movle	r3, #0
   21964:	ble	251fc <GetDataSlab+0x3c18>
   21968:	mov	r0, #0
   2196c:	b	219c4 <GetDataSlab+0x3e0>
   21970:	ldr	r2, [sl]
   21974:	mul	r2, r2, r3
   21978:	ldr	r2, [r1, r2, lsl #2]
   2197c:	vmov	s15, r2
   21980:	vcvt.f64.s32	d7, s15
   21984:	ldr	r2, [sp, #4]
   21988:	vstmia	r2!, {d7}
   2198c:	str	r2, [sp, #4]
   21990:	add	r3, r3, #1
   21994:	ldr	r2, [fp]
   21998:	cmp	r2, r3
   2199c:	bgt	21970 <GetDataSlab+0x38c>
   219a0:	ldr	r3, [sl, #4]
   219a4:	ldr	r2, [sp, #192]	; 0xc0
   219a8:	ldr	r2, [r2]
   219ac:	mul	r3, r2, r3
   219b0:	add	r1, r1, r3, lsl #2
   219b4:	add	r0, r0, #1
   219b8:	ldr	r3, [fp, #4]
   219bc:	cmp	r3, r0
   219c0:	ble	3a5a4 <GetDataSlab+0x18fc0>
   219c4:	ldr	r3, [fp]
   219c8:	cmp	r3, #0
   219cc:	movgt	r3, #0
   219d0:	bgt	21970 <GetDataSlab+0x38c>
   219d4:	b	219a0 <GetDataSlab+0x3bc>
   219d8:	mla	r3, r2, r1, ip
   219dc:	ldr	r2, [sp, #8]
   219e0:	add	r1, r2, r3, lsl #2
   219e4:	cmp	lr, #0
   219e8:	movle	r3, #0
   219ec:	ble	251fc <GetDataSlab+0x3c18>
   219f0:	mov	r0, #0
   219f4:	b	21a4c <GetDataSlab+0x468>
   219f8:	ldr	r2, [sl]
   219fc:	mul	r2, r2, r3
   21a00:	ldr	r2, [r1, r2, lsl #2]
   21a04:	vmov	s15, r2
   21a08:	vcvt.f64.u32	d7, s15
   21a0c:	ldr	r2, [sp, #4]
   21a10:	vstmia	r2!, {d7}
   21a14:	str	r2, [sp, #4]
   21a18:	add	r3, r3, #1
   21a1c:	ldr	r2, [fp]
   21a20:	cmp	r2, r3
   21a24:	bgt	219f8 <GetDataSlab+0x414>
   21a28:	ldr	r3, [sl, #4]
   21a2c:	ldr	r2, [sp, #192]	; 0xc0
   21a30:	ldr	r2, [r2]
   21a34:	mul	r3, r2, r3
   21a38:	add	r1, r1, r3, lsl #2
   21a3c:	add	r0, r0, #1
   21a40:	ldr	r3, [fp, #4]
   21a44:	cmp	r3, r0
   21a48:	ble	3a5ac <GetDataSlab+0x18fc8>
   21a4c:	ldr	r3, [fp]
   21a50:	cmp	r3, #0
   21a54:	movgt	r3, #0
   21a58:	bgt	219f8 <GetDataSlab+0x414>
   21a5c:	b	21a28 <GetDataSlab+0x444>
   21a60:	mla	r3, r2, r1, ip
   21a64:	ldr	r2, [sp, #8]
   21a68:	add	r1, r2, r3, lsl #1
   21a6c:	cmp	lr, #0
   21a70:	movle	r3, #0
   21a74:	ble	251fc <GetDataSlab+0x3c18>
   21a78:	mov	r0, #0
   21a7c:	b	21ad8 <GetDataSlab+0x4f4>
   21a80:	ldr	r2, [sl]
   21a84:	mul	r2, r2, r3
   21a88:	lsl	r2, r2, #1
   21a8c:	ldrsh	r2, [r1, r2]
   21a90:	vmov	s15, r2
   21a94:	vcvt.f64.s32	d7, s15
   21a98:	ldr	r2, [sp, #4]
   21a9c:	vstmia	r2!, {d7}
   21aa0:	str	r2, [sp, #4]
   21aa4:	add	r3, r3, #1
   21aa8:	ldr	r2, [fp]
   21aac:	cmp	r2, r3
   21ab0:	bgt	21a80 <GetDataSlab+0x49c>
   21ab4:	ldr	r3, [sl, #4]
   21ab8:	ldr	r2, [sp, #192]	; 0xc0
   21abc:	ldr	r2, [r2]
   21ac0:	mul	r3, r2, r3
   21ac4:	add	r1, r1, r3, lsl #1
   21ac8:	add	r0, r0, #1
   21acc:	ldr	r3, [fp, #4]
   21ad0:	cmp	r3, r0
   21ad4:	ble	3a5b4 <GetDataSlab+0x18fd0>
   21ad8:	ldr	r3, [fp]
   21adc:	cmp	r3, #0
   21ae0:	movgt	r3, #0
   21ae4:	bgt	21a80 <GetDataSlab+0x49c>
   21ae8:	b	21ab4 <GetDataSlab+0x4d0>
   21aec:	mla	r3, r2, r1, ip
   21af0:	ldr	r2, [sp, #8]
   21af4:	add	r1, r2, r3, lsl #1
   21af8:	cmp	lr, #0
   21afc:	movle	r3, #0
   21b00:	ble	251fc <GetDataSlab+0x3c18>
   21b04:	mov	r0, #0
   21b08:	b	21b64 <GetDataSlab+0x580>
   21b0c:	ldr	r2, [sl]
   21b10:	mul	r2, r2, r3
   21b14:	lsl	r2, r2, #1
   21b18:	ldrh	r2, [r1, r2]
   21b1c:	vmov	s15, r2
   21b20:	vcvt.f64.u32	d7, s15
   21b24:	ldr	r2, [sp, #4]
   21b28:	vstmia	r2!, {d7}
   21b2c:	str	r2, [sp, #4]
   21b30:	add	r3, r3, #1
   21b34:	ldr	r2, [fp]
   21b38:	cmp	r2, r3
   21b3c:	bgt	21b0c <GetDataSlab+0x528>
   21b40:	ldr	r3, [sl, #4]
   21b44:	ldr	r2, [sp, #192]	; 0xc0
   21b48:	ldr	r2, [r2]
   21b4c:	mul	r3, r2, r3
   21b50:	add	r1, r1, r3, lsl #1
   21b54:	add	r0, r0, #1
   21b58:	ldr	r3, [fp, #4]
   21b5c:	cmp	r3, r0
   21b60:	ble	3a5bc <GetDataSlab+0x18fd8>
   21b64:	ldr	r3, [fp]
   21b68:	cmp	r3, #0
   21b6c:	movgt	r3, #0
   21b70:	bgt	21b0c <GetDataSlab+0x528>
   21b74:	b	21b40 <GetDataSlab+0x55c>
   21b78:	mla	r3, r2, r1, ip
   21b7c:	ldr	r2, [sp, #8]
   21b80:	add	r1, r2, r3
   21b84:	cmp	lr, #0
   21b88:	movle	r3, #0
   21b8c:	ble	251fc <GetDataSlab+0x3c18>
   21b90:	mov	r0, #0
   21b94:	b	21be8 <GetDataSlab+0x604>
   21b98:	ldr	r2, [sl]
   21b9c:	mul	r2, r2, r3
   21ba0:	ldrsb	r2, [r1, r2]
   21ba4:	vmov	s15, r2
   21ba8:	vcvt.f64.s32	d7, s15
   21bac:	ldr	r2, [sp, #4]
   21bb0:	vstmia	r2!, {d7}
   21bb4:	str	r2, [sp, #4]
   21bb8:	add	r3, r3, #1
   21bbc:	ldr	r2, [fp]
   21bc0:	cmp	r2, r3
   21bc4:	bgt	21b98 <GetDataSlab+0x5b4>
   21bc8:	ldr	r3, [sl, #4]
   21bcc:	ldr	r2, [sp, #192]	; 0xc0
   21bd0:	ldr	r2, [r2]
   21bd4:	mla	r1, r2, r3, r1
   21bd8:	add	r0, r0, #1
   21bdc:	ldr	r3, [fp, #4]
   21be0:	cmp	r3, r0
   21be4:	ble	3a5c4 <GetDataSlab+0x18fe0>
   21be8:	ldr	r3, [fp]
   21bec:	cmp	r3, #0
   21bf0:	movgt	r3, #0
   21bf4:	bgt	21b98 <GetDataSlab+0x5b4>
   21bf8:	b	21bc8 <GetDataSlab+0x5e4>
   21bfc:	mla	r3, r2, r1, ip
   21c00:	ldr	r2, [sp, #8]
   21c04:	add	r1, r2, r3
   21c08:	cmp	lr, #0
   21c0c:	movle	r3, #0
   21c10:	ble	251fc <GetDataSlab+0x3c18>
   21c14:	mov	r0, #0
   21c18:	b	21c6c <GetDataSlab+0x688>
   21c1c:	ldr	r2, [sl]
   21c20:	mul	r2, r2, r3
   21c24:	ldrb	r2, [r1, r2]
   21c28:	vmov	s15, r2
   21c2c:	vcvt.f64.u32	d7, s15
   21c30:	ldr	r2, [sp, #4]
   21c34:	vstmia	r2!, {d7}
   21c38:	str	r2, [sp, #4]
   21c3c:	add	r3, r3, #1
   21c40:	ldr	r2, [fp]
   21c44:	cmp	r2, r3
   21c48:	bgt	21c1c <GetDataSlab+0x638>
   21c4c:	ldr	r3, [sl, #4]
   21c50:	ldr	r2, [sp, #192]	; 0xc0
   21c54:	ldr	r2, [r2]
   21c58:	mla	r1, r2, r3, r1
   21c5c:	add	r0, r0, #1
   21c60:	ldr	r3, [fp, #4]
   21c64:	cmp	r3, r0
   21c68:	ble	3a5cc <GetDataSlab+0x18fe8>
   21c6c:	ldr	r3, [fp]
   21c70:	cmp	r3, #0
   21c74:	movgt	r3, #0
   21c78:	bgt	21c1c <GetDataSlab+0x638>
   21c7c:	b	21c4c <GetDataSlab+0x668>
   21c80:	cmp	r8, #12
   21c84:	beq	21cb4 <GetDataSlab+0x6d0>
   21c88:	cmp	r8, #13
   21c8c:	movne	r3, #1
   21c90:	bne	251fc <GetDataSlab+0x3c18>
   21c94:	mla	r3, r2, r1, ip
   21c98:	ldr	r2, [sp, #8]
   21c9c:	add	r5, r2, r3, lsl #3
   21ca0:	cmp	lr, #0
   21ca4:	movle	r3, #0
   21ca8:	ble	251fc <GetDataSlab+0x3c18>
   21cac:	mov	r6, #0
   21cb0:	b	21d90 <GetDataSlab+0x7ac>
   21cb4:	mla	r3, r2, r1, ip
   21cb8:	ldr	r2, [sp, #8]
   21cbc:	add	r5, r2, r3, lsl #3
   21cc0:	cmp	lr, #0
   21cc4:	movgt	r6, #0
   21cc8:	bgt	21d28 <GetDataSlab+0x744>
   21ccc:	mov	r3, #0
   21cd0:	b	251fc <GetDataSlab+0x3c18>
   21cd4:	ldr	r3, [sl]
   21cd8:	mul	r3, r3, r4
   21cdc:	lsl	r3, r3, #3
   21ce0:	ldrd	r0, [r5, r3]
   21ce4:	bl	4ed5c <__aeabi_l2d>
   21ce8:	ldr	r3, [sp, #4]
   21cec:	strd	r0, [r3], #8
   21cf0:	str	r3, [sp, #4]
   21cf4:	add	r4, r4, #1
   21cf8:	ldr	r3, [fp]
   21cfc:	cmp	r3, r4
   21d00:	bgt	21cd4 <GetDataSlab+0x6f0>
   21d04:	ldr	r3, [sl, #4]
   21d08:	ldr	r2, [sp, #192]	; 0xc0
   21d0c:	ldr	r2, [r2]
   21d10:	mul	r3, r2, r3
   21d14:	add	r5, r5, r3, lsl #3
   21d18:	add	r6, r6, #1
   21d1c:	ldr	r3, [fp, #4]
   21d20:	cmp	r3, r6
   21d24:	ble	21ccc <GetDataSlab+0x6e8>
   21d28:	ldr	r3, [fp]
   21d2c:	cmp	r3, #0
   21d30:	movgt	r4, #0
   21d34:	bgt	21cd4 <GetDataSlab+0x6f0>
   21d38:	b	21d04 <GetDataSlab+0x720>
   21d3c:	ldr	r3, [sl]
   21d40:	mul	r3, r3, r4
   21d44:	lsl	r3, r3, #3
   21d48:	ldrd	r0, [r5, r3]
   21d4c:	bl	4ed48 <__aeabi_ul2d>
   21d50:	ldr	r3, [sp, #4]
   21d54:	strd	r0, [r3], #8
   21d58:	str	r3, [sp, #4]
   21d5c:	add	r4, r4, #1
   21d60:	ldr	r3, [fp]
   21d64:	cmp	r3, r4
   21d68:	bgt	21d3c <GetDataSlab+0x758>
   21d6c:	ldr	r3, [sl, #4]
   21d70:	ldr	r2, [sp, #192]	; 0xc0
   21d74:	ldr	r2, [r2]
   21d78:	mul	r3, r2, r3
   21d7c:	add	r5, r5, r3, lsl #3
   21d80:	add	r6, r6, #1
   21d84:	ldr	r3, [fp, #4]
   21d88:	cmp	r3, r6
   21d8c:	ble	3a5d4 <GetDataSlab+0x18ff0>
   21d90:	ldr	r3, [fp]
   21d94:	cmp	r3, #0
   21d98:	movgt	r4, #0
   21d9c:	bgt	21d3c <GetDataSlab+0x758>
   21da0:	b	21d6c <GetDataSlab+0x788>
   21da4:	sub	r3, r8, #1
   21da8:	cmp	r3, #8
   21dac:	addls	pc, pc, r3, lsl #2
   21db0:	b	22214 <GetDataSlab+0xc30>
   21db4:	b	2210c <GetDataSlab+0xb28>
   21db8:	b	22190 <GetDataSlab+0xbac>
   21dbc:	b	21ff4 <GetDataSlab+0xa10>
   21dc0:	b	22080 <GetDataSlab+0xa9c>
   21dc4:	b	21ee4 <GetDataSlab+0x900>
   21dc8:	b	21f6c <GetDataSlab+0x988>
   21dcc:	b	21e60 <GetDataSlab+0x87c>
   21dd0:	b	22214 <GetDataSlab+0xc30>
   21dd4:	b	21dd8 <GetDataSlab+0x7f4>
   21dd8:	mla	r3, r2, r1, ip
   21ddc:	ldr	r2, [sp, #8]
   21de0:	add	r1, r2, r3, lsl #3
   21de4:	cmp	lr, #0
   21de8:	movle	r3, #0
   21dec:	ble	251fc <GetDataSlab+0x3c18>
   21df0:	mov	r0, #0
   21df4:	b	21e4c <GetDataSlab+0x868>
   21df8:	ldr	r2, [sl]
   21dfc:	mul	r2, r2, r3
   21e00:	add	r2, r1, r2, lsl #3
   21e04:	vldr	d7, [r2]
   21e08:	vcvt.f32.f64	s15, d7
   21e0c:	ldr	r2, [sp, #4]
   21e10:	vstmia	r2!, {s15}
   21e14:	str	r2, [sp, #4]
   21e18:	add	r3, r3, #1
   21e1c:	ldr	r2, [fp]
   21e20:	cmp	r2, r3
   21e24:	bgt	21df8 <GetDataSlab+0x814>
   21e28:	ldr	r3, [sl, #4]
   21e2c:	ldr	r2, [sp, #192]	; 0xc0
   21e30:	ldr	r2, [r2]
   21e34:	mul	r3, r2, r3
   21e38:	add	r1, r1, r3, lsl #3
   21e3c:	add	r0, r0, #1
   21e40:	ldr	r3, [fp, #4]
   21e44:	cmp	r3, r0
   21e48:	ble	3a5dc <GetDataSlab+0x18ff8>
   21e4c:	ldr	r3, [fp]
   21e50:	cmp	r3, #0
   21e54:	movgt	r3, #0
   21e58:	bgt	21df8 <GetDataSlab+0x814>
   21e5c:	b	21e28 <GetDataSlab+0x844>
   21e60:	mla	r3, r2, r1, ip
   21e64:	ldr	r2, [sp, #8]
   21e68:	add	r1, r2, r3, lsl #2
   21e6c:	cmp	lr, #0
   21e70:	movle	r3, #0
   21e74:	ble	251fc <GetDataSlab+0x3c18>
   21e78:	mov	r0, #0
   21e7c:	b	21ed0 <GetDataSlab+0x8ec>
   21e80:	ldr	r2, [sl]
   21e84:	mul	r2, r2, r3
   21e88:	add	r2, r1, r2, lsl #2
   21e8c:	ldr	r2, [r2]
   21e90:	ldr	ip, [sp, #4]
   21e94:	str	r2, [ip], #4
   21e98:	str	ip, [sp, #4]
   21e9c:	add	r3, r3, #1
   21ea0:	ldr	r2, [fp]
   21ea4:	cmp	r2, r3
   21ea8:	bgt	21e80 <GetDataSlab+0x89c>
   21eac:	ldr	r3, [sl, #4]
   21eb0:	ldr	r2, [sp, #192]	; 0xc0
   21eb4:	ldr	r2, [r2]
   21eb8:	mul	r3, r2, r3
   21ebc:	add	r1, r1, r3, lsl #2
   21ec0:	add	r0, r0, #1
   21ec4:	ldr	r3, [fp, #4]
   21ec8:	cmp	r3, r0
   21ecc:	ble	3a5e4 <GetDataSlab+0x19000>
   21ed0:	ldr	r3, [fp]
   21ed4:	cmp	r3, #0
   21ed8:	movgt	r3, #0
   21edc:	bgt	21e80 <GetDataSlab+0x89c>
   21ee0:	b	21eac <GetDataSlab+0x8c8>
   21ee4:	mla	r3, r2, r1, ip
   21ee8:	ldr	r2, [sp, #8]
   21eec:	add	r1, r2, r3, lsl #2
   21ef0:	cmp	lr, #0
   21ef4:	movle	r3, #0
   21ef8:	ble	251fc <GetDataSlab+0x3c18>
   21efc:	mov	r0, #0
   21f00:	b	21f58 <GetDataSlab+0x974>
   21f04:	ldr	r2, [sl]
   21f08:	mul	r2, r2, r3
   21f0c:	ldr	r2, [r1, r2, lsl #2]
   21f10:	vmov	s15, r2
   21f14:	vcvt.f32.s32	s15, s15
   21f18:	ldr	r2, [sp, #4]
   21f1c:	vstmia	r2!, {s15}
   21f20:	str	r2, [sp, #4]
   21f24:	add	r3, r3, #1
   21f28:	ldr	r2, [fp]
   21f2c:	cmp	r2, r3
   21f30:	bgt	21f04 <GetDataSlab+0x920>
   21f34:	ldr	r3, [sl, #4]
   21f38:	ldr	r2, [sp, #192]	; 0xc0
   21f3c:	ldr	r2, [r2]
   21f40:	mul	r3, r2, r3
   21f44:	add	r1, r1, r3, lsl #2
   21f48:	add	r0, r0, #1
   21f4c:	ldr	r3, [fp, #4]
   21f50:	cmp	r3, r0
   21f54:	ble	3a5ec <GetDataSlab+0x19008>
   21f58:	ldr	r3, [fp]
   21f5c:	cmp	r3, #0
   21f60:	movgt	r3, #0
   21f64:	bgt	21f04 <GetDataSlab+0x920>
   21f68:	b	21f34 <GetDataSlab+0x950>
   21f6c:	mla	r3, r2, r1, ip
   21f70:	ldr	r2, [sp, #8]
   21f74:	add	r1, r2, r3, lsl #2
   21f78:	cmp	lr, #0
   21f7c:	movle	r3, #0
   21f80:	ble	251fc <GetDataSlab+0x3c18>
   21f84:	mov	r0, #0
   21f88:	b	21fe0 <GetDataSlab+0x9fc>
   21f8c:	ldr	r2, [sl]
   21f90:	mul	r2, r2, r3
   21f94:	ldr	r2, [r1, r2, lsl #2]
   21f98:	vmov	s15, r2
   21f9c:	vcvt.f32.u32	s15, s15
   21fa0:	ldr	r2, [sp, #4]
   21fa4:	vstmia	r2!, {s15}
   21fa8:	str	r2, [sp, #4]
   21fac:	add	r3, r3, #1
   21fb0:	ldr	r2, [fp]
   21fb4:	cmp	r2, r3
   21fb8:	bgt	21f8c <GetDataSlab+0x9a8>
   21fbc:	ldr	r3, [sl, #4]
   21fc0:	ldr	r2, [sp, #192]	; 0xc0
   21fc4:	ldr	r2, [r2]
   21fc8:	mul	r3, r2, r3
   21fcc:	add	r1, r1, r3, lsl #2
   21fd0:	add	r0, r0, #1
   21fd4:	ldr	r3, [fp, #4]
   21fd8:	cmp	r3, r0
   21fdc:	ble	3a5f4 <GetDataSlab+0x19010>
   21fe0:	ldr	r3, [fp]
   21fe4:	cmp	r3, #0
   21fe8:	movgt	r3, #0
   21fec:	bgt	21f8c <GetDataSlab+0x9a8>
   21ff0:	b	21fbc <GetDataSlab+0x9d8>
   21ff4:	mla	r3, r2, r1, ip
   21ff8:	ldr	r2, [sp, #8]
   21ffc:	add	r1, r2, r3, lsl #1
   22000:	cmp	lr, #0
   22004:	movle	r3, #0
   22008:	ble	251fc <GetDataSlab+0x3c18>
   2200c:	mov	r0, #0
   22010:	b	2206c <GetDataSlab+0xa88>
   22014:	ldr	r2, [sl]
   22018:	mul	r2, r2, r3
   2201c:	lsl	r2, r2, #1
   22020:	ldrsh	r2, [r1, r2]
   22024:	vmov	s15, r2
   22028:	vcvt.f32.s32	s15, s15
   2202c:	ldr	r2, [sp, #4]
   22030:	vstmia	r2!, {s15}
   22034:	str	r2, [sp, #4]
   22038:	add	r3, r3, #1
   2203c:	ldr	r2, [fp]
   22040:	cmp	r2, r3
   22044:	bgt	22014 <GetDataSlab+0xa30>
   22048:	ldr	r3, [sl, #4]
   2204c:	ldr	r2, [sp, #192]	; 0xc0
   22050:	ldr	r2, [r2]
   22054:	mul	r3, r2, r3
   22058:	add	r1, r1, r3, lsl #1
   2205c:	add	r0, r0, #1
   22060:	ldr	r3, [fp, #4]
   22064:	cmp	r3, r0
   22068:	ble	3a5fc <GetDataSlab+0x19018>
   2206c:	ldr	r3, [fp]
   22070:	cmp	r3, #0
   22074:	movgt	r3, #0
   22078:	bgt	22014 <GetDataSlab+0xa30>
   2207c:	b	22048 <GetDataSlab+0xa64>
   22080:	mla	r3, r2, r1, ip
   22084:	ldr	r2, [sp, #8]
   22088:	add	r1, r2, r3, lsl #1
   2208c:	cmp	lr, #0
   22090:	movle	r3, #0
   22094:	ble	251fc <GetDataSlab+0x3c18>
   22098:	mov	r0, #0
   2209c:	b	220f8 <GetDataSlab+0xb14>
   220a0:	ldr	r2, [sl]
   220a4:	mul	r2, r2, r3
   220a8:	lsl	r2, r2, #1
   220ac:	ldrh	r2, [r1, r2]
   220b0:	vmov	s15, r2
   220b4:	vcvt.f32.u32	s15, s15
   220b8:	ldr	r2, [sp, #4]
   220bc:	vstmia	r2!, {s15}
   220c0:	str	r2, [sp, #4]
   220c4:	add	r3, r3, #1
   220c8:	ldr	r2, [fp]
   220cc:	cmp	r2, r3
   220d0:	bgt	220a0 <GetDataSlab+0xabc>
   220d4:	ldr	r3, [sl, #4]
   220d8:	ldr	r2, [sp, #192]	; 0xc0
   220dc:	ldr	r2, [r2]
   220e0:	mul	r3, r2, r3
   220e4:	add	r1, r1, r3, lsl #1
   220e8:	add	r0, r0, #1
   220ec:	ldr	r3, [fp, #4]
   220f0:	cmp	r3, r0
   220f4:	ble	3a604 <GetDataSlab+0x19020>
   220f8:	ldr	r3, [fp]
   220fc:	cmp	r3, #0
   22100:	movgt	r3, #0
   22104:	bgt	220a0 <GetDataSlab+0xabc>
   22108:	b	220d4 <GetDataSlab+0xaf0>
   2210c:	mla	r3, r2, r1, ip
   22110:	ldr	r2, [sp, #8]
   22114:	add	r1, r2, r3
   22118:	cmp	lr, #0
   2211c:	movle	r3, #0
   22120:	ble	251fc <GetDataSlab+0x3c18>
   22124:	mov	r0, #0
   22128:	b	2217c <GetDataSlab+0xb98>
   2212c:	ldr	r2, [sl]
   22130:	mul	r2, r2, r3
   22134:	ldrsb	r2, [r1, r2]
   22138:	vmov	s15, r2
   2213c:	vcvt.f32.s32	s15, s15
   22140:	ldr	r2, [sp, #4]
   22144:	vstmia	r2!, {s15}
   22148:	str	r2, [sp, #4]
   2214c:	add	r3, r3, #1
   22150:	ldr	r2, [fp]
   22154:	cmp	r2, r3
   22158:	bgt	2212c <GetDataSlab+0xb48>
   2215c:	ldr	r3, [sl, #4]
   22160:	ldr	r2, [sp, #192]	; 0xc0
   22164:	ldr	r2, [r2]
   22168:	mla	r1, r2, r3, r1
   2216c:	add	r0, r0, #1
   22170:	ldr	r3, [fp, #4]
   22174:	cmp	r3, r0
   22178:	ble	3a60c <GetDataSlab+0x19028>
   2217c:	ldr	r3, [fp]
   22180:	cmp	r3, #0
   22184:	movgt	r3, #0
   22188:	bgt	2212c <GetDataSlab+0xb48>
   2218c:	b	2215c <GetDataSlab+0xb78>
   22190:	mla	r3, r2, r1, ip
   22194:	ldr	r2, [sp, #8]
   22198:	add	r1, r2, r3
   2219c:	cmp	lr, #0
   221a0:	movle	r3, #0
   221a4:	ble	251fc <GetDataSlab+0x3c18>
   221a8:	mov	r0, #0
   221ac:	b	22200 <GetDataSlab+0xc1c>
   221b0:	ldr	r2, [sl]
   221b4:	mul	r2, r2, r3
   221b8:	ldrb	r2, [r1, r2]
   221bc:	vmov	s15, r2
   221c0:	vcvt.f32.u32	s15, s15
   221c4:	ldr	r2, [sp, #4]
   221c8:	vstmia	r2!, {s15}
   221cc:	str	r2, [sp, #4]
   221d0:	add	r3, r3, #1
   221d4:	ldr	r2, [fp]
   221d8:	cmp	r2, r3
   221dc:	bgt	221b0 <GetDataSlab+0xbcc>
   221e0:	ldr	r3, [sl, #4]
   221e4:	ldr	r2, [sp, #192]	; 0xc0
   221e8:	ldr	r2, [r2]
   221ec:	mla	r1, r2, r3, r1
   221f0:	add	r0, r0, #1
   221f4:	ldr	r3, [fp, #4]
   221f8:	cmp	r3, r0
   221fc:	ble	3a614 <GetDataSlab+0x19030>
   22200:	ldr	r3, [fp]
   22204:	cmp	r3, #0
   22208:	movgt	r3, #0
   2220c:	bgt	221b0 <GetDataSlab+0xbcc>
   22210:	b	221e0 <GetDataSlab+0xbfc>
   22214:	cmp	r8, #12
   22218:	beq	22248 <GetDataSlab+0xc64>
   2221c:	cmp	r8, #13
   22220:	movne	r3, #1
   22224:	bne	251fc <GetDataSlab+0x3c18>
   22228:	mla	r3, r2, r1, ip
   2222c:	ldr	r2, [sp, #8]
   22230:	add	r5, r2, r3, lsl #3
   22234:	cmp	lr, #0
   22238:	movle	r3, #0
   2223c:	ble	251fc <GetDataSlab+0x3c18>
   22240:	mov	r6, #0
   22244:	b	22324 <GetDataSlab+0xd40>
   22248:	mla	r3, r2, r1, ip
   2224c:	ldr	r2, [sp, #8]
   22250:	add	r5, r2, r3, lsl #3
   22254:	cmp	lr, #0
   22258:	movgt	r6, #0
   2225c:	bgt	222bc <GetDataSlab+0xcd8>
   22260:	mov	r3, #0
   22264:	b	251fc <GetDataSlab+0x3c18>
   22268:	ldr	r3, [sl]
   2226c:	mul	r3, r3, r4
   22270:	lsl	r3, r3, #3
   22274:	ldrd	r0, [r5, r3]
   22278:	bl	4ef90 <__aeabi_l2f>
   2227c:	ldr	r3, [sp, #4]
   22280:	str	r0, [r3], #4
   22284:	str	r3, [sp, #4]
   22288:	add	r4, r4, #1
   2228c:	ldr	r3, [fp]
   22290:	cmp	r3, r4
   22294:	bgt	22268 <GetDataSlab+0xc84>
   22298:	ldr	r3, [sl, #4]
   2229c:	ldr	r2, [sp, #192]	; 0xc0
   222a0:	ldr	r2, [r2]
   222a4:	mul	r3, r2, r3
   222a8:	add	r5, r5, r3, lsl #3
   222ac:	add	r6, r6, #1
   222b0:	ldr	r3, [fp, #4]
   222b4:	cmp	r3, r6
   222b8:	ble	22260 <GetDataSlab+0xc7c>
   222bc:	ldr	r3, [fp]
   222c0:	cmp	r3, #0
   222c4:	movgt	r4, #0
   222c8:	bgt	22268 <GetDataSlab+0xc84>
   222cc:	b	22298 <GetDataSlab+0xcb4>
   222d0:	ldr	r3, [sl]
   222d4:	mul	r3, r3, r4
   222d8:	lsl	r3, r3, #3
   222dc:	ldrd	r0, [r5, r3]
   222e0:	bl	4ef80 <__aeabi_ul2f>
   222e4:	ldr	r3, [sp, #4]
   222e8:	str	r0, [r3], #4
   222ec:	str	r3, [sp, #4]
   222f0:	add	r4, r4, #1
   222f4:	ldr	r3, [fp]
   222f8:	cmp	r3, r4
   222fc:	bgt	222d0 <GetDataSlab+0xcec>
   22300:	ldr	r3, [sl, #4]
   22304:	ldr	r2, [sp, #192]	; 0xc0
   22308:	ldr	r2, [r2]
   2230c:	mul	r3, r2, r3
   22310:	add	r5, r5, r3, lsl #3
   22314:	add	r6, r6, #1
   22318:	ldr	r3, [fp, #4]
   2231c:	cmp	r3, r6
   22320:	ble	3a61c <GetDataSlab+0x19038>
   22324:	ldr	r3, [fp]
   22328:	cmp	r3, #0
   2232c:	movgt	r4, #0
   22330:	bgt	222d0 <GetDataSlab+0xcec>
   22334:	b	22300 <GetDataSlab+0xd1c>
   22338:	sub	r3, r8, #1
   2233c:	cmp	r3, #8
   22340:	addls	pc, pc, r3, lsl #2
   22344:	b	227a0 <GetDataSlab+0x11bc>
   22348:	b	226a0 <GetDataSlab+0x10bc>
   2234c:	b	22720 <GetDataSlab+0x113c>
   22350:	b	22590 <GetDataSlab+0xfac>
   22354:	b	22618 <GetDataSlab+0x1034>
   22358:	b	2247c <GetDataSlab+0xe98>
   2235c:	b	22504 <GetDataSlab+0xf20>
   22360:	b	223f4 <GetDataSlab+0xe10>
   22364:	b	227a0 <GetDataSlab+0x11bc>
   22368:	b	2236c <GetDataSlab+0xd88>
   2236c:	mla	r3, r2, r1, ip
   22370:	ldr	r2, [sp, #8]
   22374:	add	r5, r2, r3, lsl #3
   22378:	cmp	lr, #0
   2237c:	movle	r3, #0
   22380:	ble	251fc <GetDataSlab+0x3c18>
   22384:	mov	r6, #0
   22388:	b	223e0 <GetDataSlab+0xdfc>
   2238c:	ldr	r3, [sl]
   22390:	mul	r3, r3, r4
   22394:	add	r3, r5, r3, lsl #3
   22398:	ldrd	r0, [r3]
   2239c:	bl	4f038 <__aeabi_d2lz>
   223a0:	ldr	r3, [sp, #4]
   223a4:	strd	r0, [r3], #8
   223a8:	str	r3, [sp, #4]
   223ac:	add	r4, r4, #1
   223b0:	ldr	r3, [fp]
   223b4:	cmp	r3, r4
   223b8:	bgt	2238c <GetDataSlab+0xda8>
   223bc:	ldr	r3, [sl, #4]
   223c0:	ldr	r2, [sp, #192]	; 0xc0
   223c4:	ldr	r2, [r2]
   223c8:	mul	r3, r2, r3
   223cc:	add	r5, r5, r3, lsl #3
   223d0:	add	r6, r6, #1
   223d4:	ldr	r3, [fp, #4]
   223d8:	cmp	r3, r6
   223dc:	ble	3a624 <GetDataSlab+0x19040>
   223e0:	ldr	r3, [fp]
   223e4:	cmp	r3, #0
   223e8:	movgt	r4, #0
   223ec:	bgt	2238c <GetDataSlab+0xda8>
   223f0:	b	223bc <GetDataSlab+0xdd8>
   223f4:	mla	r3, r2, r1, ip
   223f8:	ldr	r2, [sp, #8]
   223fc:	add	r5, r2, r3, lsl #2
   22400:	cmp	lr, #0
   22404:	movle	r3, #0
   22408:	ble	251fc <GetDataSlab+0x3c18>
   2240c:	mov	r6, #0
   22410:	b	22468 <GetDataSlab+0xe84>
   22414:	ldr	r3, [sl]
   22418:	mul	r3, r3, r4
   2241c:	add	r3, r5, r3, lsl #2
   22420:	ldr	r0, [r3]
   22424:	bl	4f00c <__aeabi_f2lz>
   22428:	ldr	r3, [sp, #4]
   2242c:	strd	r0, [r3], #8
   22430:	str	r3, [sp, #4]
   22434:	add	r4, r4, #1
   22438:	ldr	r3, [fp]
   2243c:	cmp	r3, r4
   22440:	bgt	22414 <GetDataSlab+0xe30>
   22444:	ldr	r3, [sl, #4]
   22448:	ldr	r2, [sp, #192]	; 0xc0
   2244c:	ldr	r2, [r2]
   22450:	mul	r3, r2, r3
   22454:	add	r5, r5, r3, lsl #2
   22458:	add	r6, r6, #1
   2245c:	ldr	r3, [fp, #4]
   22460:	cmp	r3, r6
   22464:	ble	3a62c <GetDataSlab+0x19048>
   22468:	ldr	r3, [fp]
   2246c:	cmp	r3, #0
   22470:	movgt	r4, #0
   22474:	bgt	22414 <GetDataSlab+0xe30>
   22478:	b	22444 <GetDataSlab+0xe60>
   2247c:	mla	r3, r2, r1, ip
   22480:	ldr	r2, [sp, #8]
   22484:	add	ip, r2, r3, lsl #2
   22488:	cmp	lr, #0
   2248c:	movle	r3, #0
   22490:	ble	251fc <GetDataSlab+0x3c18>
   22494:	mov	lr, #0
   22498:	b	224f0 <GetDataSlab+0xf0c>
   2249c:	ldr	r2, [sl]
   224a0:	mul	r2, r2, r3
   224a4:	ldr	r2, [ip, r2, lsl #2]
   224a8:	mov	r0, r2
   224ac:	asr	r1, r2, #31
   224b0:	ldr	r2, [sp, #4]
   224b4:	strd	r0, [r2], #8
   224b8:	str	r2, [sp, #4]
   224bc:	add	r3, r3, #1
   224c0:	ldr	r2, [fp]
   224c4:	cmp	r2, r3
   224c8:	bgt	2249c <GetDataSlab+0xeb8>
   224cc:	ldr	r3, [sl, #4]
   224d0:	ldr	r2, [sp, #192]	; 0xc0
   224d4:	ldr	r2, [r2]
   224d8:	mul	r3, r2, r3
   224dc:	add	ip, ip, r3, lsl #2
   224e0:	add	lr, lr, #1
   224e4:	ldr	r3, [fp, #4]
   224e8:	cmp	r3, lr
   224ec:	ble	3a634 <GetDataSlab+0x19050>
   224f0:	ldr	r3, [fp]
   224f4:	cmp	r3, #0
   224f8:	movgt	r3, #0
   224fc:	bgt	2249c <GetDataSlab+0xeb8>
   22500:	b	224cc <GetDataSlab+0xee8>
   22504:	mla	r3, r2, r1, ip
   22508:	ldr	r2, [sp, #8]
   2250c:	add	r2, r2, r3, lsl #2
   22510:	cmp	lr, #0
   22514:	movle	r3, #0
   22518:	ble	251fc <GetDataSlab+0x3c18>
   2251c:	mov	ip, #0
   22520:	mov	r0, ip
   22524:	b	2257c <GetDataSlab+0xf98>
   22528:	ldr	r1, [sl]
   2252c:	mul	r1, r1, r3
   22530:	ldr	r1, [r2, r1, lsl #2]
   22534:	ldr	lr, [sp, #4]
   22538:	str	r1, [lr]
   2253c:	str	r0, [lr, #4]
   22540:	add	r1, lr, #8
   22544:	str	r1, [sp, #4]
   22548:	add	r3, r3, #1
   2254c:	ldr	r1, [fp]
   22550:	cmp	r1, r3
   22554:	bgt	22528 <GetDataSlab+0xf44>
   22558:	ldr	r3, [sl, #4]
   2255c:	ldr	r1, [sp, #192]	; 0xc0
   22560:	ldr	r1, [r1]
   22564:	mul	r3, r1, r3
   22568:	add	r2, r2, r3, lsl #2
   2256c:	add	ip, ip, #1
   22570:	ldr	r3, [fp, #4]
   22574:	cmp	r3, ip
   22578:	ble	3a63c <GetDataSlab+0x19058>
   2257c:	ldr	r3, [fp]
   22580:	cmp	r3, #0
   22584:	movgt	r3, #0
   22588:	bgt	22528 <GetDataSlab+0xf44>
   2258c:	b	22558 <GetDataSlab+0xf74>
   22590:	mla	r3, r2, r1, ip
   22594:	ldr	r2, [sp, #8]
   22598:	add	ip, r2, r3, lsl #1
   2259c:	cmp	lr, #0
   225a0:	movle	r3, #0
   225a4:	ble	251fc <GetDataSlab+0x3c18>
   225a8:	mov	lr, #0
   225ac:	b	22604 <GetDataSlab+0x1020>
   225b0:	ldr	r2, [sl]
   225b4:	mul	r2, r2, r3
   225b8:	lsl	r2, r2, #1
   225bc:	ldrsh	r0, [ip, r2]
   225c0:	asr	r1, r0, #31
   225c4:	ldr	r2, [sp, #4]
   225c8:	strd	r0, [r2], #8
   225cc:	str	r2, [sp, #4]
   225d0:	add	r3, r3, #1
   225d4:	ldr	r2, [fp]
   225d8:	cmp	r2, r3
   225dc:	bgt	225b0 <GetDataSlab+0xfcc>
   225e0:	ldr	r3, [sl, #4]
   225e4:	ldr	r2, [sp, #192]	; 0xc0
   225e8:	ldr	r2, [r2]
   225ec:	mul	r3, r2, r3
   225f0:	add	ip, ip, r3, lsl #1
   225f4:	add	lr, lr, #1
   225f8:	ldr	r3, [fp, #4]
   225fc:	cmp	r3, lr
   22600:	ble	3a644 <GetDataSlab+0x19060>
   22604:	ldr	r3, [fp]
   22608:	cmp	r3, #0
   2260c:	movgt	r3, #0
   22610:	bgt	225b0 <GetDataSlab+0xfcc>
   22614:	b	225e0 <GetDataSlab+0xffc>
   22618:	mla	r3, r2, r1, ip
   2261c:	ldr	r2, [sp, #8]
   22620:	add	ip, r2, r3, lsl #1
   22624:	cmp	lr, #0
   22628:	movle	r3, #0
   2262c:	ble	251fc <GetDataSlab+0x3c18>
   22630:	mov	lr, #0
   22634:	b	2268c <GetDataSlab+0x10a8>
   22638:	ldr	r2, [sl]
   2263c:	mul	r2, r2, r3
   22640:	lsl	r2, r2, #1
   22644:	ldrh	r0, [ip, r2]
   22648:	mov	r1, #0
   2264c:	ldr	r2, [sp, #4]
   22650:	strd	r0, [r2], #8
   22654:	str	r2, [sp, #4]
   22658:	add	r3, r3, #1
   2265c:	ldr	r2, [fp]
   22660:	cmp	r2, r3
   22664:	bgt	22638 <GetDataSlab+0x1054>
   22668:	ldr	r3, [sl, #4]
   2266c:	ldr	r2, [sp, #192]	; 0xc0
   22670:	ldr	r2, [r2]
   22674:	mul	r3, r2, r3
   22678:	add	ip, ip, r3, lsl #1
   2267c:	add	lr, lr, #1
   22680:	ldr	r3, [fp, #4]
   22684:	cmp	r3, lr
   22688:	ble	3a64c <GetDataSlab+0x19068>
   2268c:	ldr	r3, [fp]
   22690:	cmp	r3, #0
   22694:	movgt	r3, #0
   22698:	bgt	22638 <GetDataSlab+0x1054>
   2269c:	b	22668 <GetDataSlab+0x1084>
   226a0:	mla	r3, r2, r1, ip
   226a4:	ldr	r2, [sp, #8]
   226a8:	add	ip, r2, r3
   226ac:	cmp	lr, #0
   226b0:	movle	r3, #0
   226b4:	ble	251fc <GetDataSlab+0x3c18>
   226b8:	mov	lr, #0
   226bc:	b	2270c <GetDataSlab+0x1128>
   226c0:	ldr	r2, [sl]
   226c4:	mul	r2, r2, r3
   226c8:	ldrsb	r0, [ip, r2]
   226cc:	asr	r1, r0, #31
   226d0:	ldr	r2, [sp, #4]
   226d4:	strd	r0, [r2], #8
   226d8:	str	r2, [sp, #4]
   226dc:	add	r3, r3, #1
   226e0:	ldr	r2, [fp]
   226e4:	cmp	r2, r3
   226e8:	bgt	226c0 <GetDataSlab+0x10dc>
   226ec:	ldr	r3, [sl, #4]
   226f0:	ldr	r2, [sp, #192]	; 0xc0
   226f4:	ldr	r2, [r2]
   226f8:	mla	ip, r2, r3, ip
   226fc:	add	lr, lr, #1
   22700:	ldr	r3, [fp, #4]
   22704:	cmp	r3, lr
   22708:	ble	3a654 <GetDataSlab+0x19070>
   2270c:	ldr	r3, [fp]
   22710:	cmp	r3, #0
   22714:	movgt	r3, #0
   22718:	bgt	226c0 <GetDataSlab+0x10dc>
   2271c:	b	226ec <GetDataSlab+0x1108>
   22720:	mla	r3, r2, r1, ip
   22724:	ldr	r2, [sp, #8]
   22728:	add	ip, r2, r3
   2272c:	cmp	lr, #0
   22730:	movle	r3, #0
   22734:	ble	251fc <GetDataSlab+0x3c18>
   22738:	mov	lr, #0
   2273c:	b	2278c <GetDataSlab+0x11a8>
   22740:	ldr	r2, [sl]
   22744:	mul	r2, r2, r3
   22748:	ldrb	r0, [ip, r2]
   2274c:	mov	r1, #0
   22750:	ldr	r2, [sp, #4]
   22754:	strd	r0, [r2], #8
   22758:	str	r2, [sp, #4]
   2275c:	add	r3, r3, #1
   22760:	ldr	r2, [fp]
   22764:	cmp	r2, r3
   22768:	bgt	22740 <GetDataSlab+0x115c>
   2276c:	ldr	r3, [sl, #4]
   22770:	ldr	r2, [sp, #192]	; 0xc0
   22774:	ldr	r2, [r2]
   22778:	mla	ip, r2, r3, ip
   2277c:	add	lr, lr, #1
   22780:	ldr	r3, [fp, #4]
   22784:	cmp	r3, lr
   22788:	ble	3a65c <GetDataSlab+0x19078>
   2278c:	ldr	r3, [fp]
   22790:	cmp	r3, #0
   22794:	movgt	r3, #0
   22798:	bgt	22740 <GetDataSlab+0x115c>
   2279c:	b	2276c <GetDataSlab+0x1188>
   227a0:	cmp	r8, #12
   227a4:	beq	227d4 <GetDataSlab+0x11f0>
   227a8:	cmp	r8, #13
   227ac:	movne	r3, #1
   227b0:	bne	251fc <GetDataSlab+0x3c18>
   227b4:	mla	r3, r2, r1, ip
   227b8:	ldr	r2, [sp, #8]
   227bc:	add	ip, r2, r3, lsl #3
   227c0:	cmp	lr, #0
   227c4:	movle	r3, #0
   227c8:	ble	251fc <GetDataSlab+0x3c18>
   227cc:	mov	lr, #0
   227d0:	b	228a8 <GetDataSlab+0x12c4>
   227d4:	mla	r3, r2, r1, ip
   227d8:	ldr	r2, [sp, #8]
   227dc:	add	ip, r2, r3, lsl #3
   227e0:	cmp	lr, #0
   227e4:	movgt	lr, #0
   227e8:	bgt	22844 <GetDataSlab+0x1260>
   227ec:	mov	r3, #0
   227f0:	b	251fc <GetDataSlab+0x3c18>
   227f4:	ldr	r2, [sl]
   227f8:	mul	r2, r2, r3
   227fc:	lsl	r2, r2, #3
   22800:	ldrd	r0, [ip, r2]
   22804:	ldr	r2, [sp, #4]
   22808:	strd	r0, [r2], #8
   2280c:	str	r2, [sp, #4]
   22810:	add	r3, r3, #1
   22814:	ldr	r2, [fp]
   22818:	cmp	r2, r3
   2281c:	bgt	227f4 <GetDataSlab+0x1210>
   22820:	ldr	r3, [sl, #4]
   22824:	ldr	r2, [sp, #192]	; 0xc0
   22828:	ldr	r2, [r2]
   2282c:	mul	r3, r2, r3
   22830:	add	ip, ip, r3, lsl #3
   22834:	add	lr, lr, #1
   22838:	ldr	r3, [fp, #4]
   2283c:	cmp	r3, lr
   22840:	ble	227ec <GetDataSlab+0x1208>
   22844:	ldr	r3, [fp]
   22848:	cmp	r3, #0
   2284c:	movgt	r3, #0
   22850:	bgt	227f4 <GetDataSlab+0x1210>
   22854:	b	22820 <GetDataSlab+0x123c>
   22858:	ldr	r2, [sl]
   2285c:	mul	r2, r2, r3
   22860:	lsl	r2, r2, #3
   22864:	ldrd	r0, [ip, r2]
   22868:	ldr	r2, [sp, #4]
   2286c:	strd	r0, [r2], #8
   22870:	str	r2, [sp, #4]
   22874:	add	r3, r3, #1
   22878:	ldr	r2, [fp]
   2287c:	cmp	r2, r3
   22880:	bgt	22858 <GetDataSlab+0x1274>
   22884:	ldr	r3, [sl, #4]
   22888:	ldr	r2, [sp, #192]	; 0xc0
   2288c:	ldr	r2, [r2]
   22890:	mul	r3, r2, r3
   22894:	add	ip, ip, r3, lsl #3
   22898:	add	lr, lr, #1
   2289c:	ldr	r3, [fp, #4]
   228a0:	cmp	r3, lr
   228a4:	ble	3a664 <GetDataSlab+0x19080>
   228a8:	ldr	r3, [fp]
   228ac:	cmp	r3, #0
   228b0:	movgt	r3, #0
   228b4:	bgt	22858 <GetDataSlab+0x1274>
   228b8:	b	22884 <GetDataSlab+0x12a0>
   228bc:	sub	r3, r8, #1
   228c0:	cmp	r3, #8
   228c4:	addls	pc, pc, r3, lsl #2
   228c8:	b	22d24 <GetDataSlab+0x1740>
   228cc:	b	22c24 <GetDataSlab+0x1640>
   228d0:	b	22ca4 <GetDataSlab+0x16c0>
   228d4:	b	22b14 <GetDataSlab+0x1530>
   228d8:	b	22b9c <GetDataSlab+0x15b8>
   228dc:	b	22a00 <GetDataSlab+0x141c>
   228e0:	b	22a88 <GetDataSlab+0x14a4>
   228e4:	b	22978 <GetDataSlab+0x1394>
   228e8:	b	22d24 <GetDataSlab+0x1740>
   228ec:	b	228f0 <GetDataSlab+0x130c>
   228f0:	mla	r3, r2, r1, ip
   228f4:	ldr	r2, [sp, #8]
   228f8:	add	r5, r2, r3, lsl #3
   228fc:	cmp	lr, #0
   22900:	movle	r3, #0
   22904:	ble	251fc <GetDataSlab+0x3c18>
   22908:	mov	r6, #0
   2290c:	b	22964 <GetDataSlab+0x1380>
   22910:	ldr	r3, [sl]
   22914:	mul	r3, r3, r4
   22918:	add	r3, r5, r3, lsl #3
   2291c:	ldrd	r0, [r3]
   22920:	bl	4f0a8 <__aeabi_d2ulz>
   22924:	ldr	r3, [sp, #4]
   22928:	strd	r0, [r3], #8
   2292c:	str	r3, [sp, #4]
   22930:	add	r4, r4, #1
   22934:	ldr	r3, [fp]
   22938:	cmp	r3, r4
   2293c:	bgt	22910 <GetDataSlab+0x132c>
   22940:	ldr	r3, [sl, #4]
   22944:	ldr	r2, [sp, #192]	; 0xc0
   22948:	ldr	r2, [r2]
   2294c:	mul	r3, r2, r3
   22950:	add	r5, r5, r3, lsl #3
   22954:	add	r6, r6, #1
   22958:	ldr	r3, [fp, #4]
   2295c:	cmp	r3, r6
   22960:	ble	3a66c <GetDataSlab+0x19088>
   22964:	ldr	r3, [fp]
   22968:	cmp	r3, #0
   2296c:	movgt	r4, #0
   22970:	bgt	22910 <GetDataSlab+0x132c>
   22974:	b	22940 <GetDataSlab+0x135c>
   22978:	mla	r3, r2, r1, ip
   2297c:	ldr	r2, [sp, #8]
   22980:	add	r5, r2, r3, lsl #2
   22984:	cmp	lr, #0
   22988:	movle	r3, #0
   2298c:	ble	251fc <GetDataSlab+0x3c18>
   22990:	mov	r6, #0
   22994:	b	229ec <GetDataSlab+0x1408>
   22998:	ldr	r3, [sl]
   2299c:	mul	r3, r3, r4
   229a0:	add	r3, r5, r3, lsl #2
   229a4:	ldr	r0, [r3]
   229a8:	bl	4f068 <__aeabi_f2ulz>
   229ac:	ldr	r3, [sp, #4]
   229b0:	strd	r0, [r3], #8
   229b4:	str	r3, [sp, #4]
   229b8:	add	r4, r4, #1
   229bc:	ldr	r3, [fp]
   229c0:	cmp	r3, r4
   229c4:	bgt	22998 <GetDataSlab+0x13b4>
   229c8:	ldr	r3, [sl, #4]
   229cc:	ldr	r2, [sp, #192]	; 0xc0
   229d0:	ldr	r2, [r2]
   229d4:	mul	r3, r2, r3
   229d8:	add	r5, r5, r3, lsl #2
   229dc:	add	r6, r6, #1
   229e0:	ldr	r3, [fp, #4]
   229e4:	cmp	r3, r6
   229e8:	ble	3a674 <GetDataSlab+0x19090>
   229ec:	ldr	r3, [fp]
   229f0:	cmp	r3, #0
   229f4:	movgt	r4, #0
   229f8:	bgt	22998 <GetDataSlab+0x13b4>
   229fc:	b	229c8 <GetDataSlab+0x13e4>
   22a00:	mla	r3, r2, r1, ip
   22a04:	ldr	r2, [sp, #8]
   22a08:	add	ip, r2, r3, lsl #2
   22a0c:	cmp	lr, #0
   22a10:	movle	r3, #0
   22a14:	ble	251fc <GetDataSlab+0x3c18>
   22a18:	mov	lr, #0
   22a1c:	b	22a74 <GetDataSlab+0x1490>
   22a20:	ldr	r2, [sl]
   22a24:	mul	r2, r2, r3
   22a28:	ldr	r2, [ip, r2, lsl #2]
   22a2c:	mov	r0, r2
   22a30:	asr	r1, r2, #31
   22a34:	ldr	r2, [sp, #4]
   22a38:	strd	r0, [r2], #8
   22a3c:	str	r2, [sp, #4]
   22a40:	add	r3, r3, #1
   22a44:	ldr	r2, [fp]
   22a48:	cmp	r2, r3
   22a4c:	bgt	22a20 <GetDataSlab+0x143c>
   22a50:	ldr	r3, [sl, #4]
   22a54:	ldr	r2, [sp, #192]	; 0xc0
   22a58:	ldr	r2, [r2]
   22a5c:	mul	r3, r2, r3
   22a60:	add	ip, ip, r3, lsl #2
   22a64:	add	lr, lr, #1
   22a68:	ldr	r3, [fp, #4]
   22a6c:	cmp	r3, lr
   22a70:	ble	3a67c <GetDataSlab+0x19098>
   22a74:	ldr	r3, [fp]
   22a78:	cmp	r3, #0
   22a7c:	movgt	r3, #0
   22a80:	bgt	22a20 <GetDataSlab+0x143c>
   22a84:	b	22a50 <GetDataSlab+0x146c>
   22a88:	mla	r3, r2, r1, ip
   22a8c:	ldr	r2, [sp, #8]
   22a90:	add	r2, r2, r3, lsl #2
   22a94:	cmp	lr, #0
   22a98:	movle	r3, #0
   22a9c:	ble	251fc <GetDataSlab+0x3c18>
   22aa0:	mov	ip, #0
   22aa4:	mov	r0, ip
   22aa8:	b	22b00 <GetDataSlab+0x151c>
   22aac:	ldr	r1, [sl]
   22ab0:	mul	r1, r1, r3
   22ab4:	ldr	r1, [r2, r1, lsl #2]
   22ab8:	ldr	lr, [sp, #4]
   22abc:	str	r1, [lr]
   22ac0:	str	r0, [lr, #4]
   22ac4:	add	r1, lr, #8
   22ac8:	str	r1, [sp, #4]
   22acc:	add	r3, r3, #1
   22ad0:	ldr	r1, [fp]
   22ad4:	cmp	r1, r3
   22ad8:	bgt	22aac <GetDataSlab+0x14c8>
   22adc:	ldr	r3, [sl, #4]
   22ae0:	ldr	r1, [sp, #192]	; 0xc0
   22ae4:	ldr	r1, [r1]
   22ae8:	mul	r3, r1, r3
   22aec:	add	r2, r2, r3, lsl #2
   22af0:	add	ip, ip, #1
   22af4:	ldr	r3, [fp, #4]
   22af8:	cmp	r3, ip
   22afc:	ble	3a684 <GetDataSlab+0x190a0>
   22b00:	ldr	r3, [fp]
   22b04:	cmp	r3, #0
   22b08:	movgt	r3, #0
   22b0c:	bgt	22aac <GetDataSlab+0x14c8>
   22b10:	b	22adc <GetDataSlab+0x14f8>
   22b14:	mla	r3, r2, r1, ip
   22b18:	ldr	r2, [sp, #8]
   22b1c:	add	ip, r2, r3, lsl #1
   22b20:	cmp	lr, #0
   22b24:	movle	r3, #0
   22b28:	ble	251fc <GetDataSlab+0x3c18>
   22b2c:	mov	lr, #0
   22b30:	b	22b88 <GetDataSlab+0x15a4>
   22b34:	ldr	r2, [sl]
   22b38:	mul	r2, r2, r3
   22b3c:	lsl	r2, r2, #1
   22b40:	ldrsh	r0, [ip, r2]
   22b44:	asr	r1, r0, #31
   22b48:	ldr	r2, [sp, #4]
   22b4c:	strd	r0, [r2], #8
   22b50:	str	r2, [sp, #4]
   22b54:	add	r3, r3, #1
   22b58:	ldr	r2, [fp]
   22b5c:	cmp	r2, r3
   22b60:	bgt	22b34 <GetDataSlab+0x1550>
   22b64:	ldr	r3, [sl, #4]
   22b68:	ldr	r2, [sp, #192]	; 0xc0
   22b6c:	ldr	r2, [r2]
   22b70:	mul	r3, r2, r3
   22b74:	add	ip, ip, r3, lsl #1
   22b78:	add	lr, lr, #1
   22b7c:	ldr	r3, [fp, #4]
   22b80:	cmp	r3, lr
   22b84:	ble	3a68c <GetDataSlab+0x190a8>
   22b88:	ldr	r3, [fp]
   22b8c:	cmp	r3, #0
   22b90:	movgt	r3, #0
   22b94:	bgt	22b34 <GetDataSlab+0x1550>
   22b98:	b	22b64 <GetDataSlab+0x1580>
   22b9c:	mla	r3, r2, r1, ip
   22ba0:	ldr	r2, [sp, #8]
   22ba4:	add	ip, r2, r3, lsl #1
   22ba8:	cmp	lr, #0
   22bac:	movle	r3, #0
   22bb0:	ble	251fc <GetDataSlab+0x3c18>
   22bb4:	mov	lr, #0
   22bb8:	b	22c10 <GetDataSlab+0x162c>
   22bbc:	ldr	r2, [sl]
   22bc0:	mul	r2, r2, r3
   22bc4:	lsl	r2, r2, #1
   22bc8:	ldrh	r0, [ip, r2]
   22bcc:	mov	r1, #0
   22bd0:	ldr	r2, [sp, #4]
   22bd4:	strd	r0, [r2], #8
   22bd8:	str	r2, [sp, #4]
   22bdc:	add	r3, r3, #1
   22be0:	ldr	r2, [fp]
   22be4:	cmp	r2, r3
   22be8:	bgt	22bbc <GetDataSlab+0x15d8>
   22bec:	ldr	r3, [sl, #4]
   22bf0:	ldr	r2, [sp, #192]	; 0xc0
   22bf4:	ldr	r2, [r2]
   22bf8:	mul	r3, r2, r3
   22bfc:	add	ip, ip, r3, lsl #1
   22c00:	add	lr, lr, #1
   22c04:	ldr	r3, [fp, #4]
   22c08:	cmp	r3, lr
   22c0c:	ble	3a694 <GetDataSlab+0x190b0>
   22c10:	ldr	r3, [fp]
   22c14:	cmp	r3, #0
   22c18:	movgt	r3, #0
   22c1c:	bgt	22bbc <GetDataSlab+0x15d8>
   22c20:	b	22bec <GetDataSlab+0x1608>
   22c24:	mla	r3, r2, r1, ip
   22c28:	ldr	r2, [sp, #8]
   22c2c:	add	ip, r2, r3
   22c30:	cmp	lr, #0
   22c34:	movle	r3, #0
   22c38:	ble	251fc <GetDataSlab+0x3c18>
   22c3c:	mov	lr, #0
   22c40:	b	22c90 <GetDataSlab+0x16ac>
   22c44:	ldr	r2, [sl]
   22c48:	mul	r2, r2, r3
   22c4c:	ldrsb	r0, [ip, r2]
   22c50:	asr	r1, r0, #31
   22c54:	ldr	r2, [sp, #4]
   22c58:	strd	r0, [r2], #8
   22c5c:	str	r2, [sp, #4]
   22c60:	add	r3, r3, #1
   22c64:	ldr	r2, [fp]
   22c68:	cmp	r2, r3
   22c6c:	bgt	22c44 <GetDataSlab+0x1660>
   22c70:	ldr	r3, [sl, #4]
   22c74:	ldr	r2, [sp, #192]	; 0xc0
   22c78:	ldr	r2, [r2]
   22c7c:	mla	ip, r2, r3, ip
   22c80:	add	lr, lr, #1
   22c84:	ldr	r3, [fp, #4]
   22c88:	cmp	r3, lr
   22c8c:	ble	3a69c <GetDataSlab+0x190b8>
   22c90:	ldr	r3, [fp]
   22c94:	cmp	r3, #0
   22c98:	movgt	r3, #0
   22c9c:	bgt	22c44 <GetDataSlab+0x1660>
   22ca0:	b	22c70 <GetDataSlab+0x168c>
   22ca4:	mla	r3, r2, r1, ip
   22ca8:	ldr	r2, [sp, #8]
   22cac:	add	ip, r2, r3
   22cb0:	cmp	lr, #0
   22cb4:	movle	r3, #0
   22cb8:	ble	251fc <GetDataSlab+0x3c18>
   22cbc:	mov	lr, #0
   22cc0:	b	22d10 <GetDataSlab+0x172c>
   22cc4:	ldr	r2, [sl]
   22cc8:	mul	r2, r2, r3
   22ccc:	ldrb	r0, [ip, r2]
   22cd0:	mov	r1, #0
   22cd4:	ldr	r2, [sp, #4]
   22cd8:	strd	r0, [r2], #8
   22cdc:	str	r2, [sp, #4]
   22ce0:	add	r3, r3, #1
   22ce4:	ldr	r2, [fp]
   22ce8:	cmp	r2, r3
   22cec:	bgt	22cc4 <GetDataSlab+0x16e0>
   22cf0:	ldr	r3, [sl, #4]
   22cf4:	ldr	r2, [sp, #192]	; 0xc0
   22cf8:	ldr	r2, [r2]
   22cfc:	mla	ip, r2, r3, ip
   22d00:	add	lr, lr, #1
   22d04:	ldr	r3, [fp, #4]
   22d08:	cmp	r3, lr
   22d0c:	ble	3a6a4 <GetDataSlab+0x190c0>
   22d10:	ldr	r3, [fp]
   22d14:	cmp	r3, #0
   22d18:	movgt	r3, #0
   22d1c:	bgt	22cc4 <GetDataSlab+0x16e0>
   22d20:	b	22cf0 <GetDataSlab+0x170c>
   22d24:	cmp	r8, #12
   22d28:	beq	22d58 <GetDataSlab+0x1774>
   22d2c:	cmp	r8, #13
   22d30:	movne	r3, #1
   22d34:	bne	251fc <GetDataSlab+0x3c18>
   22d38:	mla	r3, r2, r1, ip
   22d3c:	ldr	r2, [sp, #8]
   22d40:	add	ip, r2, r3, lsl #3
   22d44:	cmp	lr, #0
   22d48:	movle	r3, #0
   22d4c:	ble	251fc <GetDataSlab+0x3c18>
   22d50:	mov	lr, #0
   22d54:	b	22e2c <GetDataSlab+0x1848>
   22d58:	mla	r3, r2, r1, ip
   22d5c:	ldr	r2, [sp, #8]
   22d60:	add	ip, r2, r3, lsl #3
   22d64:	cmp	lr, #0
   22d68:	movgt	lr, #0
   22d6c:	bgt	22dc8 <GetDataSlab+0x17e4>
   22d70:	mov	r3, #0
   22d74:	b	251fc <GetDataSlab+0x3c18>
   22d78:	ldr	r2, [sl]
   22d7c:	mul	r2, r2, r3
   22d80:	lsl	r2, r2, #3
   22d84:	ldrd	r0, [ip, r2]
   22d88:	ldr	r2, [sp, #4]
   22d8c:	strd	r0, [r2], #8
   22d90:	str	r2, [sp, #4]
   22d94:	add	r3, r3, #1
   22d98:	ldr	r2, [fp]
   22d9c:	cmp	r2, r3
   22da0:	bgt	22d78 <GetDataSlab+0x1794>
   22da4:	ldr	r3, [sl, #4]
   22da8:	ldr	r2, [sp, #192]	; 0xc0
   22dac:	ldr	r2, [r2]
   22db0:	mul	r3, r2, r3
   22db4:	add	ip, ip, r3, lsl #3
   22db8:	add	lr, lr, #1
   22dbc:	ldr	r3, [fp, #4]
   22dc0:	cmp	r3, lr
   22dc4:	ble	22d70 <GetDataSlab+0x178c>
   22dc8:	ldr	r3, [fp]
   22dcc:	cmp	r3, #0
   22dd0:	movgt	r3, #0
   22dd4:	bgt	22d78 <GetDataSlab+0x1794>
   22dd8:	b	22da4 <GetDataSlab+0x17c0>
   22ddc:	ldr	r2, [sl]
   22de0:	mul	r2, r2, r3
   22de4:	lsl	r2, r2, #3
   22de8:	ldrd	r0, [ip, r2]
   22dec:	ldr	r2, [sp, #4]
   22df0:	strd	r0, [r2], #8
   22df4:	str	r2, [sp, #4]
   22df8:	add	r3, r3, #1
   22dfc:	ldr	r2, [fp]
   22e00:	cmp	r2, r3
   22e04:	bgt	22ddc <GetDataSlab+0x17f8>
   22e08:	ldr	r3, [sl, #4]
   22e0c:	ldr	r2, [sp, #192]	; 0xc0
   22e10:	ldr	r2, [r2]
   22e14:	mul	r3, r2, r3
   22e18:	add	ip, ip, r3, lsl #3
   22e1c:	add	lr, lr, #1
   22e20:	ldr	r3, [fp, #4]
   22e24:	cmp	r3, lr
   22e28:	ble	3a6ac <GetDataSlab+0x190c8>
   22e2c:	ldr	r3, [fp]
   22e30:	cmp	r3, #0
   22e34:	movgt	r3, #0
   22e38:	bgt	22ddc <GetDataSlab+0x17f8>
   22e3c:	b	22e08 <GetDataSlab+0x1824>
   22e40:	sub	r3, r8, #1
   22e44:	cmp	r3, #8
   22e48:	addls	pc, pc, r3, lsl #2
   22e4c:	b	23284 <GetDataSlab+0x1ca0>
   22e50:	b	2318c <GetDataSlab+0x1ba8>
   22e54:	b	23208 <GetDataSlab+0x1c24>
   22e58:	b	23084 <GetDataSlab+0x1aa0>
   22e5c:	b	23108 <GetDataSlab+0x1b24>
   22e60:	b	22f84 <GetDataSlab+0x19a0>
   22e64:	b	23004 <GetDataSlab+0x1a20>
   22e68:	b	22efc <GetDataSlab+0x1918>
   22e6c:	b	23284 <GetDataSlab+0x1ca0>
   22e70:	b	22e74 <GetDataSlab+0x1890>
   22e74:	mla	r3, r2, r1, ip
   22e78:	ldr	r2, [sp, #8]
   22e7c:	add	r1, r2, r3, lsl #3
   22e80:	cmp	lr, #0
   22e84:	movle	r3, #0
   22e88:	ble	251fc <GetDataSlab+0x3c18>
   22e8c:	mov	r0, #0
   22e90:	b	22ee8 <GetDataSlab+0x1904>
   22e94:	ldr	r2, [sl]
   22e98:	mul	r2, r2, r3
   22e9c:	add	r2, r1, r2, lsl #3
   22ea0:	vldr	d7, [r2]
   22ea4:	vcvt.s32.f64	s15, d7
   22ea8:	ldr	ip, [sp, #4]
   22eac:	vstmia	ip!, {s15}
   22eb0:	str	ip, [sp, #4]
   22eb4:	add	r3, r3, #1
   22eb8:	ldr	r2, [fp]
   22ebc:	cmp	r2, r3
   22ec0:	bgt	22e94 <GetDataSlab+0x18b0>
   22ec4:	ldr	r3, [sl, #4]
   22ec8:	ldr	r2, [sp, #192]	; 0xc0
   22ecc:	ldr	r2, [r2]
   22ed0:	mul	r3, r2, r3
   22ed4:	add	r1, r1, r3, lsl #3
   22ed8:	add	r0, r0, #1
   22edc:	ldr	r3, [fp, #4]
   22ee0:	cmp	r3, r0
   22ee4:	ble	3a6b4 <GetDataSlab+0x190d0>
   22ee8:	ldr	r3, [fp]
   22eec:	cmp	r3, #0
   22ef0:	movgt	r3, #0
   22ef4:	bgt	22e94 <GetDataSlab+0x18b0>
   22ef8:	b	22ec4 <GetDataSlab+0x18e0>
   22efc:	mla	r3, r2, r1, ip
   22f00:	ldr	r2, [sp, #8]
   22f04:	add	r1, r2, r3, lsl #2
   22f08:	cmp	lr, #0
   22f0c:	movle	r3, #0
   22f10:	ble	251fc <GetDataSlab+0x3c18>
   22f14:	mov	r0, #0
   22f18:	b	22f70 <GetDataSlab+0x198c>
   22f1c:	ldr	r2, [sl]
   22f20:	mul	r2, r2, r3
   22f24:	add	r2, r1, r2, lsl #2
   22f28:	vldr	s15, [r2]
   22f2c:	vcvt.s32.f32	s15, s15
   22f30:	ldr	ip, [sp, #4]
   22f34:	vstmia	ip!, {s15}
   22f38:	str	ip, [sp, #4]
   22f3c:	add	r3, r3, #1
   22f40:	ldr	r2, [fp]
   22f44:	cmp	r2, r3
   22f48:	bgt	22f1c <GetDataSlab+0x1938>
   22f4c:	ldr	r3, [sl, #4]
   22f50:	ldr	r2, [sp, #192]	; 0xc0
   22f54:	ldr	r2, [r2]
   22f58:	mul	r3, r2, r3
   22f5c:	add	r1, r1, r3, lsl #2
   22f60:	add	r0, r0, #1
   22f64:	ldr	r3, [fp, #4]
   22f68:	cmp	r3, r0
   22f6c:	ble	3a6bc <GetDataSlab+0x190d8>
   22f70:	ldr	r3, [fp]
   22f74:	cmp	r3, #0
   22f78:	movgt	r3, #0
   22f7c:	bgt	22f1c <GetDataSlab+0x1938>
   22f80:	b	22f4c <GetDataSlab+0x1968>
   22f84:	mla	r3, r2, r1, ip
   22f88:	ldr	r2, [sp, #8]
   22f8c:	add	r1, r2, r3, lsl #2
   22f90:	cmp	lr, #0
   22f94:	movle	r3, #0
   22f98:	ble	251fc <GetDataSlab+0x3c18>
   22f9c:	mov	r0, #0
   22fa0:	b	22ff0 <GetDataSlab+0x1a0c>
   22fa4:	ldr	r2, [sl]
   22fa8:	mul	r2, r2, r3
   22fac:	ldr	r2, [r1, r2, lsl #2]
   22fb0:	ldr	ip, [sp, #4]
   22fb4:	str	r2, [ip], #4
   22fb8:	str	ip, [sp, #4]
   22fbc:	add	r3, r3, #1
   22fc0:	ldr	r2, [fp]
   22fc4:	cmp	r2, r3
   22fc8:	bgt	22fa4 <GetDataSlab+0x19c0>
   22fcc:	ldr	r3, [sl, #4]
   22fd0:	ldr	r2, [sp, #192]	; 0xc0
   22fd4:	ldr	r2, [r2]
   22fd8:	mul	r3, r2, r3
   22fdc:	add	r1, r1, r3, lsl #2
   22fe0:	add	r0, r0, #1
   22fe4:	ldr	r3, [fp, #4]
   22fe8:	cmp	r3, r0
   22fec:	ble	3a6c4 <GetDataSlab+0x190e0>
   22ff0:	ldr	r3, [fp]
   22ff4:	cmp	r3, #0
   22ff8:	movgt	r3, #0
   22ffc:	bgt	22fa4 <GetDataSlab+0x19c0>
   23000:	b	22fcc <GetDataSlab+0x19e8>
   23004:	mla	r3, r2, r1, ip
   23008:	ldr	r2, [sp, #8]
   2300c:	add	r1, r2, r3, lsl #2
   23010:	cmp	lr, #0
   23014:	movle	r3, #0
   23018:	ble	251fc <GetDataSlab+0x3c18>
   2301c:	mov	r0, #0
   23020:	b	23070 <GetDataSlab+0x1a8c>
   23024:	ldr	r2, [sl]
   23028:	mul	r2, r2, r3
   2302c:	ldr	r2, [r1, r2, lsl #2]
   23030:	ldr	ip, [sp, #4]
   23034:	str	r2, [ip], #4
   23038:	str	ip, [sp, #4]
   2303c:	add	r3, r3, #1
   23040:	ldr	r2, [fp]
   23044:	cmp	r2, r3
   23048:	bgt	23024 <GetDataSlab+0x1a40>
   2304c:	ldr	r3, [sl, #4]
   23050:	ldr	r2, [sp, #192]	; 0xc0
   23054:	ldr	r2, [r2]
   23058:	mul	r3, r2, r3
   2305c:	add	r1, r1, r3, lsl #2
   23060:	add	r0, r0, #1
   23064:	ldr	r3, [fp, #4]
   23068:	cmp	r3, r0
   2306c:	ble	3a6cc <GetDataSlab+0x190e8>
   23070:	ldr	r3, [fp]
   23074:	cmp	r3, #0
   23078:	movgt	r3, #0
   2307c:	bgt	23024 <GetDataSlab+0x1a40>
   23080:	b	2304c <GetDataSlab+0x1a68>
   23084:	mla	r3, r2, r1, ip
   23088:	ldr	r2, [sp, #8]
   2308c:	add	r1, r2, r3, lsl #1
   23090:	cmp	lr, #0
   23094:	movle	r3, #0
   23098:	ble	251fc <GetDataSlab+0x3c18>
   2309c:	mov	r0, #0
   230a0:	b	230f4 <GetDataSlab+0x1b10>
   230a4:	ldr	r2, [sl]
   230a8:	mul	r2, r2, r3
   230ac:	lsl	r2, r2, #1
   230b0:	ldrsh	r2, [r1, r2]
   230b4:	ldr	ip, [sp, #4]
   230b8:	str	r2, [ip], #4
   230bc:	str	ip, [sp, #4]
   230c0:	add	r3, r3, #1
   230c4:	ldr	r2, [fp]
   230c8:	cmp	r2, r3
   230cc:	bgt	230a4 <GetDataSlab+0x1ac0>
   230d0:	ldr	r3, [sl, #4]
   230d4:	ldr	r2, [sp, #192]	; 0xc0
   230d8:	ldr	r2, [r2]
   230dc:	mul	r3, r2, r3
   230e0:	add	r1, r1, r3, lsl #1
   230e4:	add	r0, r0, #1
   230e8:	ldr	r3, [fp, #4]
   230ec:	cmp	r3, r0
   230f0:	ble	3a6d4 <GetDataSlab+0x190f0>
   230f4:	ldr	r3, [fp]
   230f8:	cmp	r3, #0
   230fc:	movgt	r3, #0
   23100:	bgt	230a4 <GetDataSlab+0x1ac0>
   23104:	b	230d0 <GetDataSlab+0x1aec>
   23108:	mla	r3, r2, r1, ip
   2310c:	ldr	r2, [sp, #8]
   23110:	add	r1, r2, r3, lsl #1
   23114:	cmp	lr, #0
   23118:	movle	r3, #0
   2311c:	ble	251fc <GetDataSlab+0x3c18>
   23120:	mov	r0, #0
   23124:	b	23178 <GetDataSlab+0x1b94>
   23128:	ldr	r2, [sl]
   2312c:	mul	r2, r2, r3
   23130:	lsl	r2, r2, #1
   23134:	ldrh	r2, [r1, r2]
   23138:	ldr	ip, [sp, #4]
   2313c:	str	r2, [ip], #4
   23140:	str	ip, [sp, #4]
   23144:	add	r3, r3, #1
   23148:	ldr	r2, [fp]
   2314c:	cmp	r2, r3
   23150:	bgt	23128 <GetDataSlab+0x1b44>
   23154:	ldr	r3, [sl, #4]
   23158:	ldr	r2, [sp, #192]	; 0xc0
   2315c:	ldr	r2, [r2]
   23160:	mul	r3, r2, r3
   23164:	add	r1, r1, r3, lsl #1
   23168:	add	r0, r0, #1
   2316c:	ldr	r3, [fp, #4]
   23170:	cmp	r3, r0
   23174:	ble	3a6dc <GetDataSlab+0x190f8>
   23178:	ldr	r3, [fp]
   2317c:	cmp	r3, #0
   23180:	movgt	r3, #0
   23184:	bgt	23128 <GetDataSlab+0x1b44>
   23188:	b	23154 <GetDataSlab+0x1b70>
   2318c:	mla	r3, r2, r1, ip
   23190:	ldr	r2, [sp, #8]
   23194:	add	r1, r2, r3
   23198:	cmp	lr, #0
   2319c:	movle	r3, #0
   231a0:	ble	251fc <GetDataSlab+0x3c18>
   231a4:	mov	r0, #0
   231a8:	b	231f4 <GetDataSlab+0x1c10>
   231ac:	ldr	r2, [sl]
   231b0:	mul	r2, r2, r3
   231b4:	ldrsb	r2, [r1, r2]
   231b8:	ldr	ip, [sp, #4]
   231bc:	str	r2, [ip], #4
   231c0:	str	ip, [sp, #4]
   231c4:	add	r3, r3, #1
   231c8:	ldr	r2, [fp]
   231cc:	cmp	r2, r3
   231d0:	bgt	231ac <GetDataSlab+0x1bc8>
   231d4:	ldr	r3, [sl, #4]
   231d8:	ldr	r2, [sp, #192]	; 0xc0
   231dc:	ldr	r2, [r2]
   231e0:	mla	r1, r2, r3, r1
   231e4:	add	r0, r0, #1
   231e8:	ldr	r3, [fp, #4]
   231ec:	cmp	r3, r0
   231f0:	ble	3a6e4 <GetDataSlab+0x19100>
   231f4:	ldr	r3, [fp]
   231f8:	cmp	r3, #0
   231fc:	movgt	r3, #0
   23200:	bgt	231ac <GetDataSlab+0x1bc8>
   23204:	b	231d4 <GetDataSlab+0x1bf0>
   23208:	mla	r3, r2, r1, ip
   2320c:	ldr	r2, [sp, #8]
   23210:	add	r1, r2, r3
   23214:	cmp	lr, #0
   23218:	movle	r3, #0
   2321c:	ble	251fc <GetDataSlab+0x3c18>
   23220:	mov	r0, #0
   23224:	b	23270 <GetDataSlab+0x1c8c>
   23228:	ldr	r2, [sl]
   2322c:	mul	r2, r2, r3
   23230:	ldrb	r2, [r1, r2]
   23234:	ldr	ip, [sp, #4]
   23238:	str	r2, [ip], #4
   2323c:	str	ip, [sp, #4]
   23240:	add	r3, r3, #1
   23244:	ldr	r2, [fp]
   23248:	cmp	r2, r3
   2324c:	bgt	23228 <GetDataSlab+0x1c44>
   23250:	ldr	r3, [sl, #4]
   23254:	ldr	r2, [sp, #192]	; 0xc0
   23258:	ldr	r2, [r2]
   2325c:	mla	r1, r2, r3, r1
   23260:	add	r0, r0, #1
   23264:	ldr	r3, [fp, #4]
   23268:	cmp	r3, r0
   2326c:	ble	3a6ec <GetDataSlab+0x19108>
   23270:	ldr	r3, [fp]
   23274:	cmp	r3, #0
   23278:	movgt	r3, #0
   2327c:	bgt	23228 <GetDataSlab+0x1c44>
   23280:	b	23250 <GetDataSlab+0x1c6c>
   23284:	cmp	r8, #12
   23288:	beq	232b8 <GetDataSlab+0x1cd4>
   2328c:	cmp	r8, #13
   23290:	movne	r3, #1
   23294:	bne	251fc <GetDataSlab+0x3c18>
   23298:	mla	r3, r2, r1, ip
   2329c:	ldr	r2, [sp, #8]
   232a0:	add	r1, r2, r3, lsl #3
   232a4:	cmp	lr, #0
   232a8:	movle	r3, #0
   232ac:	ble	251fc <GetDataSlab+0x3c18>
   232b0:	mov	r0, #0
   232b4:	b	23384 <GetDataSlab+0x1da0>
   232b8:	mla	r3, r2, r1, ip
   232bc:	ldr	r2, [sp, #8]
   232c0:	add	r1, r2, r3, lsl #3
   232c4:	cmp	lr, #0
   232c8:	movgt	r0, #0
   232cc:	bgt	23324 <GetDataSlab+0x1d40>
   232d0:	mov	r3, #0
   232d4:	b	251fc <GetDataSlab+0x3c18>
   232d8:	ldr	r2, [sl]
   232dc:	mul	r2, r2, r3
   232e0:	ldr	r2, [r1, r2, lsl #3]
   232e4:	ldr	ip, [sp, #4]
   232e8:	str	r2, [ip], #4
   232ec:	str	ip, [sp, #4]
   232f0:	add	r3, r3, #1
   232f4:	ldr	r2, [fp]
   232f8:	cmp	r2, r3
   232fc:	bgt	232d8 <GetDataSlab+0x1cf4>
   23300:	ldr	r3, [sl, #4]
   23304:	ldr	r2, [sp, #192]	; 0xc0
   23308:	ldr	r2, [r2]
   2330c:	mul	r3, r2, r3
   23310:	add	r1, r1, r3, lsl #3
   23314:	add	r0, r0, #1
   23318:	ldr	r3, [fp, #4]
   2331c:	cmp	r3, r0
   23320:	ble	232d0 <GetDataSlab+0x1cec>
   23324:	ldr	r3, [fp]
   23328:	cmp	r3, #0
   2332c:	movgt	r3, #0
   23330:	bgt	232d8 <GetDataSlab+0x1cf4>
   23334:	b	23300 <GetDataSlab+0x1d1c>
   23338:	ldr	r2, [sl]
   2333c:	mul	r2, r2, r3
   23340:	ldr	r2, [r1, r2, lsl #3]
   23344:	ldr	ip, [sp, #4]
   23348:	str	r2, [ip], #4
   2334c:	str	ip, [sp, #4]
   23350:	add	r3, r3, #1
   23354:	ldr	r2, [fp]
   23358:	cmp	r2, r3
   2335c:	bgt	23338 <GetDataSlab+0x1d54>
   23360:	ldr	r3, [sl, #4]
   23364:	ldr	r2, [sp, #192]	; 0xc0
   23368:	ldr	r2, [r2]
   2336c:	mul	r3, r2, r3
   23370:	add	r1, r1, r3, lsl #3
   23374:	add	r0, r0, #1
   23378:	ldr	r3, [fp, #4]
   2337c:	cmp	r3, r0
   23380:	ble	3a6f4 <GetDataSlab+0x19110>
   23384:	ldr	r3, [fp]
   23388:	cmp	r3, #0
   2338c:	movgt	r3, #0
   23390:	bgt	23338 <GetDataSlab+0x1d54>
   23394:	b	23360 <GetDataSlab+0x1d7c>
   23398:	sub	r3, r8, #1
   2339c:	cmp	r3, #8
   233a0:	addls	pc, pc, r3, lsl #2
   233a4:	b	237dc <GetDataSlab+0x21f8>
   233a8:	b	236e4 <GetDataSlab+0x2100>
   233ac:	b	23760 <GetDataSlab+0x217c>
   233b0:	b	235dc <GetDataSlab+0x1ff8>
   233b4:	b	23660 <GetDataSlab+0x207c>
   233b8:	b	234dc <GetDataSlab+0x1ef8>
   233bc:	b	2355c <GetDataSlab+0x1f78>
   233c0:	b	23454 <GetDataSlab+0x1e70>
   233c4:	b	237dc <GetDataSlab+0x21f8>
   233c8:	b	233cc <GetDataSlab+0x1de8>
   233cc:	mla	r3, r2, r1, ip
   233d0:	ldr	r2, [sp, #8]
   233d4:	add	r1, r2, r3, lsl #3
   233d8:	cmp	lr, #0
   233dc:	movle	r3, #0
   233e0:	ble	251fc <GetDataSlab+0x3c18>
   233e4:	mov	r0, #0
   233e8:	b	23440 <GetDataSlab+0x1e5c>
   233ec:	ldr	r2, [sl]
   233f0:	mul	r2, r2, r3
   233f4:	add	r2, r1, r2, lsl #3
   233f8:	vldr	d7, [r2]
   233fc:	vcvt.u32.f64	s15, d7
   23400:	ldr	ip, [sp, #4]
   23404:	vstmia	ip!, {s15}
   23408:	str	ip, [sp, #4]
   2340c:	add	r3, r3, #1
   23410:	ldr	r2, [fp]
   23414:	cmp	r2, r3
   23418:	bgt	233ec <GetDataSlab+0x1e08>
   2341c:	ldr	r3, [sl, #4]
   23420:	ldr	r2, [sp, #192]	; 0xc0
   23424:	ldr	r2, [r2]
   23428:	mul	r3, r2, r3
   2342c:	add	r1, r1, r3, lsl #3
   23430:	add	r0, r0, #1
   23434:	ldr	r3, [fp, #4]
   23438:	cmp	r3, r0
   2343c:	ble	3a6fc <GetDataSlab+0x19118>
   23440:	ldr	r3, [fp]
   23444:	cmp	r3, #0
   23448:	movgt	r3, #0
   2344c:	bgt	233ec <GetDataSlab+0x1e08>
   23450:	b	2341c <GetDataSlab+0x1e38>
   23454:	mla	r3, r2, r1, ip
   23458:	ldr	r2, [sp, #8]
   2345c:	add	r1, r2, r3, lsl #2
   23460:	cmp	lr, #0
   23464:	movle	r3, #0
   23468:	ble	251fc <GetDataSlab+0x3c18>
   2346c:	mov	r0, #0
   23470:	b	234c8 <GetDataSlab+0x1ee4>
   23474:	ldr	r2, [sl]
   23478:	mul	r2, r2, r3
   2347c:	add	r2, r1, r2, lsl #2
   23480:	vldr	s15, [r2]
   23484:	vcvt.u32.f32	s15, s15
   23488:	ldr	ip, [sp, #4]
   2348c:	vstmia	ip!, {s15}
   23490:	str	ip, [sp, #4]
   23494:	add	r3, r3, #1
   23498:	ldr	r2, [fp]
   2349c:	cmp	r2, r3
   234a0:	bgt	23474 <GetDataSlab+0x1e90>
   234a4:	ldr	r3, [sl, #4]
   234a8:	ldr	r2, [sp, #192]	; 0xc0
   234ac:	ldr	r2, [r2]
   234b0:	mul	r3, r2, r3
   234b4:	add	r1, r1, r3, lsl #2
   234b8:	add	r0, r0, #1
   234bc:	ldr	r3, [fp, #4]
   234c0:	cmp	r3, r0
   234c4:	ble	3a704 <GetDataSlab+0x19120>
   234c8:	ldr	r3, [fp]
   234cc:	cmp	r3, #0
   234d0:	movgt	r3, #0
   234d4:	bgt	23474 <GetDataSlab+0x1e90>
   234d8:	b	234a4 <GetDataSlab+0x1ec0>
   234dc:	mla	r3, r2, r1, ip
   234e0:	ldr	r2, [sp, #8]
   234e4:	add	r1, r2, r3, lsl #2
   234e8:	cmp	lr, #0
   234ec:	movle	r3, #0
   234f0:	ble	251fc <GetDataSlab+0x3c18>
   234f4:	mov	r0, #0
   234f8:	b	23548 <GetDataSlab+0x1f64>
   234fc:	ldr	r2, [sl]
   23500:	mul	r2, r2, r3
   23504:	ldr	r2, [r1, r2, lsl #2]
   23508:	ldr	ip, [sp, #4]
   2350c:	str	r2, [ip], #4
   23510:	str	ip, [sp, #4]
   23514:	add	r3, r3, #1
   23518:	ldr	r2, [fp]
   2351c:	cmp	r2, r3
   23520:	bgt	234fc <GetDataSlab+0x1f18>
   23524:	ldr	r3, [sl, #4]
   23528:	ldr	r2, [sp, #192]	; 0xc0
   2352c:	ldr	r2, [r2]
   23530:	mul	r3, r2, r3
   23534:	add	r1, r1, r3, lsl #2
   23538:	add	r0, r0, #1
   2353c:	ldr	r3, [fp, #4]
   23540:	cmp	r3, r0
   23544:	ble	3a70c <GetDataSlab+0x19128>
   23548:	ldr	r3, [fp]
   2354c:	cmp	r3, #0
   23550:	movgt	r3, #0
   23554:	bgt	234fc <GetDataSlab+0x1f18>
   23558:	b	23524 <GetDataSlab+0x1f40>
   2355c:	mla	r3, r2, r1, ip
   23560:	ldr	r2, [sp, #8]
   23564:	add	r1, r2, r3, lsl #2
   23568:	cmp	lr, #0
   2356c:	movle	r3, #0
   23570:	ble	251fc <GetDataSlab+0x3c18>
   23574:	mov	r0, #0
   23578:	b	235c8 <GetDataSlab+0x1fe4>
   2357c:	ldr	r2, [sl]
   23580:	mul	r2, r2, r3
   23584:	ldr	r2, [r1, r2, lsl #2]
   23588:	ldr	ip, [sp, #4]
   2358c:	str	r2, [ip], #4
   23590:	str	ip, [sp, #4]
   23594:	add	r3, r3, #1
   23598:	ldr	r2, [fp]
   2359c:	cmp	r2, r3
   235a0:	bgt	2357c <GetDataSlab+0x1f98>
   235a4:	ldr	r3, [sl, #4]
   235a8:	ldr	r2, [sp, #192]	; 0xc0
   235ac:	ldr	r2, [r2]
   235b0:	mul	r3, r2, r3
   235b4:	add	r1, r1, r3, lsl #2
   235b8:	add	r0, r0, #1
   235bc:	ldr	r3, [fp, #4]
   235c0:	cmp	r3, r0
   235c4:	ble	3a714 <GetDataSlab+0x19130>
   235c8:	ldr	r3, [fp]
   235cc:	cmp	r3, #0
   235d0:	movgt	r3, #0
   235d4:	bgt	2357c <GetDataSlab+0x1f98>
   235d8:	b	235a4 <GetDataSlab+0x1fc0>
   235dc:	mla	r3, r2, r1, ip
   235e0:	ldr	r2, [sp, #8]
   235e4:	add	r1, r2, r3, lsl #1
   235e8:	cmp	lr, #0
   235ec:	movle	r3, #0
   235f0:	ble	251fc <GetDataSlab+0x3c18>
   235f4:	mov	r0, #0
   235f8:	b	2364c <GetDataSlab+0x2068>
   235fc:	ldr	r2, [sl]
   23600:	mul	r2, r2, r3
   23604:	lsl	r2, r2, #1
   23608:	ldrsh	r2, [r1, r2]
   2360c:	ldr	ip, [sp, #4]
   23610:	str	r2, [ip], #4
   23614:	str	ip, [sp, #4]
   23618:	add	r3, r3, #1
   2361c:	ldr	r2, [fp]
   23620:	cmp	r2, r3
   23624:	bgt	235fc <GetDataSlab+0x2018>
   23628:	ldr	r3, [sl, #4]
   2362c:	ldr	r2, [sp, #192]	; 0xc0
   23630:	ldr	r2, [r2]
   23634:	mul	r3, r2, r3
   23638:	add	r1, r1, r3, lsl #1
   2363c:	add	r0, r0, #1
   23640:	ldr	r3, [fp, #4]
   23644:	cmp	r3, r0
   23648:	ble	3a71c <GetDataSlab+0x19138>
   2364c:	ldr	r3, [fp]
   23650:	cmp	r3, #0
   23654:	movgt	r3, #0
   23658:	bgt	235fc <GetDataSlab+0x2018>
   2365c:	b	23628 <GetDataSlab+0x2044>
   23660:	mla	r3, r2, r1, ip
   23664:	ldr	r2, [sp, #8]
   23668:	add	r1, r2, r3, lsl #1
   2366c:	cmp	lr, #0
   23670:	movle	r3, #0
   23674:	ble	251fc <GetDataSlab+0x3c18>
   23678:	mov	r0, #0
   2367c:	b	236d0 <GetDataSlab+0x20ec>
   23680:	ldr	r2, [sl]
   23684:	mul	r2, r2, r3
   23688:	lsl	r2, r2, #1
   2368c:	ldrh	r2, [r1, r2]
   23690:	ldr	ip, [sp, #4]
   23694:	str	r2, [ip], #4
   23698:	str	ip, [sp, #4]
   2369c:	add	r3, r3, #1
   236a0:	ldr	r2, [fp]
   236a4:	cmp	r2, r3
   236a8:	bgt	23680 <GetDataSlab+0x209c>
   236ac:	ldr	r3, [sl, #4]
   236b0:	ldr	r2, [sp, #192]	; 0xc0
   236b4:	ldr	r2, [r2]
   236b8:	mul	r3, r2, r3
   236bc:	add	r1, r1, r3, lsl #1
   236c0:	add	r0, r0, #1
   236c4:	ldr	r3, [fp, #4]
   236c8:	cmp	r3, r0
   236cc:	ble	3a724 <GetDataSlab+0x19140>
   236d0:	ldr	r3, [fp]
   236d4:	cmp	r3, #0
   236d8:	movgt	r3, #0
   236dc:	bgt	23680 <GetDataSlab+0x209c>
   236e0:	b	236ac <GetDataSlab+0x20c8>
   236e4:	mla	r3, r2, r1, ip
   236e8:	ldr	r2, [sp, #8]
   236ec:	add	r1, r2, r3
   236f0:	cmp	lr, #0
   236f4:	movle	r3, #0
   236f8:	ble	251fc <GetDataSlab+0x3c18>
   236fc:	mov	r0, #0
   23700:	b	2374c <GetDataSlab+0x2168>
   23704:	ldr	r2, [sl]
   23708:	mul	r2, r2, r3
   2370c:	ldrsb	r2, [r1, r2]
   23710:	ldr	ip, [sp, #4]
   23714:	str	r2, [ip], #4
   23718:	str	ip, [sp, #4]
   2371c:	add	r3, r3, #1
   23720:	ldr	r2, [fp]
   23724:	cmp	r2, r3
   23728:	bgt	23704 <GetDataSlab+0x2120>
   2372c:	ldr	r3, [sl, #4]
   23730:	ldr	r2, [sp, #192]	; 0xc0
   23734:	ldr	r2, [r2]
   23738:	mla	r1, r2, r3, r1
   2373c:	add	r0, r0, #1
   23740:	ldr	r3, [fp, #4]
   23744:	cmp	r3, r0
   23748:	ble	3a72c <GetDataSlab+0x19148>
   2374c:	ldr	r3, [fp]
   23750:	cmp	r3, #0
   23754:	movgt	r3, #0
   23758:	bgt	23704 <GetDataSlab+0x2120>
   2375c:	b	2372c <GetDataSlab+0x2148>
   23760:	mla	r3, r2, r1, ip
   23764:	ldr	r2, [sp, #8]
   23768:	add	r1, r2, r3
   2376c:	cmp	lr, #0
   23770:	movle	r3, #0
   23774:	ble	251fc <GetDataSlab+0x3c18>
   23778:	mov	r0, #0
   2377c:	b	237c8 <GetDataSlab+0x21e4>
   23780:	ldr	r2, [sl]
   23784:	mul	r2, r2, r3
   23788:	ldrb	r2, [r1, r2]
   2378c:	ldr	ip, [sp, #4]
   23790:	str	r2, [ip], #4
   23794:	str	ip, [sp, #4]
   23798:	add	r3, r3, #1
   2379c:	ldr	r2, [fp]
   237a0:	cmp	r2, r3
   237a4:	bgt	23780 <GetDataSlab+0x219c>
   237a8:	ldr	r3, [sl, #4]
   237ac:	ldr	r2, [sp, #192]	; 0xc0
   237b0:	ldr	r2, [r2]
   237b4:	mla	r1, r2, r3, r1
   237b8:	add	r0, r0, #1
   237bc:	ldr	r3, [fp, #4]
   237c0:	cmp	r3, r0
   237c4:	ble	3a734 <GetDataSlab+0x19150>
   237c8:	ldr	r3, [fp]
   237cc:	cmp	r3, #0
   237d0:	movgt	r3, #0
   237d4:	bgt	23780 <GetDataSlab+0x219c>
   237d8:	b	237a8 <GetDataSlab+0x21c4>
   237dc:	cmp	r8, #12
   237e0:	beq	23810 <GetDataSlab+0x222c>
   237e4:	cmp	r8, #13
   237e8:	movne	r3, #1
   237ec:	bne	251fc <GetDataSlab+0x3c18>
   237f0:	mla	r3, r2, r1, ip
   237f4:	ldr	r2, [sp, #8]
   237f8:	add	r1, r2, r3, lsl #3
   237fc:	cmp	lr, #0
   23800:	movle	r3, #0
   23804:	ble	251fc <GetDataSlab+0x3c18>
   23808:	mov	r0, #0
   2380c:	b	238dc <GetDataSlab+0x22f8>
   23810:	mla	r3, r2, r1, ip
   23814:	ldr	r2, [sp, #8]
   23818:	add	r1, r2, r3, lsl #3
   2381c:	cmp	lr, #0
   23820:	movgt	r0, #0
   23824:	bgt	2387c <GetDataSlab+0x2298>
   23828:	mov	r3, #0
   2382c:	b	251fc <GetDataSlab+0x3c18>
   23830:	ldr	r2, [sl]
   23834:	mul	r2, r2, r3
   23838:	ldr	r2, [r1, r2, lsl #3]
   2383c:	ldr	ip, [sp, #4]
   23840:	str	r2, [ip], #4
   23844:	str	ip, [sp, #4]
   23848:	add	r3, r3, #1
   2384c:	ldr	r2, [fp]
   23850:	cmp	r2, r3
   23854:	bgt	23830 <GetDataSlab+0x224c>
   23858:	ldr	r3, [sl, #4]
   2385c:	ldr	r2, [sp, #192]	; 0xc0
   23860:	ldr	r2, [r2]
   23864:	mul	r3, r2, r3
   23868:	add	r1, r1, r3, lsl #3
   2386c:	add	r0, r0, #1
   23870:	ldr	r3, [fp, #4]
   23874:	cmp	r3, r0
   23878:	ble	23828 <GetDataSlab+0x2244>
   2387c:	ldr	r3, [fp]
   23880:	cmp	r3, #0
   23884:	movgt	r3, #0
   23888:	bgt	23830 <GetDataSlab+0x224c>
   2388c:	b	23858 <GetDataSlab+0x2274>
   23890:	ldr	r2, [sl]
   23894:	mul	r2, r2, r3
   23898:	ldr	r2, [r1, r2, lsl #3]
   2389c:	ldr	ip, [sp, #4]
   238a0:	str	r2, [ip], #4
   238a4:	str	ip, [sp, #4]
   238a8:	add	r3, r3, #1
   238ac:	ldr	r2, [fp]
   238b0:	cmp	r2, r3
   238b4:	bgt	23890 <GetDataSlab+0x22ac>
   238b8:	ldr	r3, [sl, #4]
   238bc:	ldr	r2, [sp, #192]	; 0xc0
   238c0:	ldr	r2, [r2]
   238c4:	mul	r3, r2, r3
   238c8:	add	r1, r1, r3, lsl #3
   238cc:	add	r0, r0, #1
   238d0:	ldr	r3, [fp, #4]
   238d4:	cmp	r3, r0
   238d8:	ble	3a73c <GetDataSlab+0x19158>
   238dc:	ldr	r3, [fp]
   238e0:	cmp	r3, #0
   238e4:	movgt	r3, #0
   238e8:	bgt	23890 <GetDataSlab+0x22ac>
   238ec:	b	238b8 <GetDataSlab+0x22d4>
   238f0:	sub	r3, r8, #1
   238f4:	cmp	r3, #8
   238f8:	addls	pc, pc, r3, lsl #2
   238fc:	b	23d3c <GetDataSlab+0x2758>
   23900:	b	23c44 <GetDataSlab+0x2660>
   23904:	b	23cc0 <GetDataSlab+0x26dc>
   23908:	b	23b3c <GetDataSlab+0x2558>
   2390c:	b	23bc0 <GetDataSlab+0x25dc>
   23910:	b	23a3c <GetDataSlab+0x2458>
   23914:	b	23abc <GetDataSlab+0x24d8>
   23918:	b	239b0 <GetDataSlab+0x23cc>
   2391c:	b	23d3c <GetDataSlab+0x2758>
   23920:	b	23924 <GetDataSlab+0x2340>
   23924:	mla	r3, r2, r1, ip
   23928:	ldr	r2, [sp, #8]
   2392c:	add	r1, r2, r3, lsl #3
   23930:	cmp	lr, #0
   23934:	movle	r3, #0
   23938:	ble	251fc <GetDataSlab+0x3c18>
   2393c:	mov	r0, #0
   23940:	b	2399c <GetDataSlab+0x23b8>
   23944:	ldr	r2, [sl]
   23948:	mul	r2, r2, r3
   2394c:	add	r2, r1, r2, lsl #3
   23950:	vldr	d7, [r2]
   23954:	vcvt.s32.f64	s15, d7
   23958:	vmov	r2, s15
   2395c:	ldr	ip, [sp, #4]
   23960:	strh	r2, [ip], #2
   23964:	str	ip, [sp, #4]
   23968:	add	r3, r3, #1
   2396c:	ldr	r2, [fp]
   23970:	cmp	r2, r3
   23974:	bgt	23944 <GetDataSlab+0x2360>
   23978:	ldr	r3, [sl, #4]
   2397c:	ldr	r2, [sp, #192]	; 0xc0
   23980:	ldr	r2, [r2]
   23984:	mul	r3, r2, r3
   23988:	add	r1, r1, r3, lsl #3
   2398c:	add	r0, r0, #1
   23990:	ldr	r3, [fp, #4]
   23994:	cmp	r3, r0
   23998:	ble	3a744 <GetDataSlab+0x19160>
   2399c:	ldr	r3, [fp]
   239a0:	cmp	r3, #0
   239a4:	movgt	r3, #0
   239a8:	bgt	23944 <GetDataSlab+0x2360>
   239ac:	b	23978 <GetDataSlab+0x2394>
   239b0:	mla	r3, r2, r1, ip
   239b4:	ldr	r2, [sp, #8]
   239b8:	add	r1, r2, r3, lsl #2
   239bc:	cmp	lr, #0
   239c0:	movle	r3, #0
   239c4:	ble	251fc <GetDataSlab+0x3c18>
   239c8:	mov	r0, #0
   239cc:	b	23a28 <GetDataSlab+0x2444>
   239d0:	ldr	r2, [sl]
   239d4:	mul	r2, r2, r3
   239d8:	add	r2, r1, r2, lsl #2
   239dc:	vldr	s15, [r2]
   239e0:	vcvt.s32.f32	s15, s15
   239e4:	vmov	r2, s15
   239e8:	ldr	ip, [sp, #4]
   239ec:	strh	r2, [ip], #2
   239f0:	str	ip, [sp, #4]
   239f4:	add	r3, r3, #1
   239f8:	ldr	r2, [fp]
   239fc:	cmp	r2, r3
   23a00:	bgt	239d0 <GetDataSlab+0x23ec>
   23a04:	ldr	r3, [sl, #4]
   23a08:	ldr	r2, [sp, #192]	; 0xc0
   23a0c:	ldr	r2, [r2]
   23a10:	mul	r3, r2, r3
   23a14:	add	r1, r1, r3, lsl #2
   23a18:	add	r0, r0, #1
   23a1c:	ldr	r3, [fp, #4]
   23a20:	cmp	r3, r0
   23a24:	ble	3a74c <GetDataSlab+0x19168>
   23a28:	ldr	r3, [fp]
   23a2c:	cmp	r3, #0
   23a30:	movgt	r3, #0
   23a34:	bgt	239d0 <GetDataSlab+0x23ec>
   23a38:	b	23a04 <GetDataSlab+0x2420>
   23a3c:	mla	r3, r2, r1, ip
   23a40:	ldr	r2, [sp, #8]
   23a44:	add	r1, r2, r3, lsl #2
   23a48:	cmp	lr, #0
   23a4c:	movle	r3, #0
   23a50:	ble	251fc <GetDataSlab+0x3c18>
   23a54:	mov	r0, #0
   23a58:	b	23aa8 <GetDataSlab+0x24c4>
   23a5c:	ldr	r2, [sl]
   23a60:	mul	r2, r2, r3
   23a64:	ldr	r2, [r1, r2, lsl #2]
   23a68:	ldr	ip, [sp, #4]
   23a6c:	strh	r2, [ip], #2
   23a70:	str	ip, [sp, #4]
   23a74:	add	r3, r3, #1
   23a78:	ldr	r2, [fp]
   23a7c:	cmp	r2, r3
   23a80:	bgt	23a5c <GetDataSlab+0x2478>
   23a84:	ldr	r3, [sl, #4]
   23a88:	ldr	r2, [sp, #192]	; 0xc0
   23a8c:	ldr	r2, [r2]
   23a90:	mul	r3, r2, r3
   23a94:	add	r1, r1, r3, lsl #2
   23a98:	add	r0, r0, #1
   23a9c:	ldr	r3, [fp, #4]
   23aa0:	cmp	r3, r0
   23aa4:	ble	3a754 <GetDataSlab+0x19170>
   23aa8:	ldr	r3, [fp]
   23aac:	cmp	r3, #0
   23ab0:	movgt	r3, #0
   23ab4:	bgt	23a5c <GetDataSlab+0x2478>
   23ab8:	b	23a84 <GetDataSlab+0x24a0>
   23abc:	mla	r3, r2, r1, ip
   23ac0:	ldr	r2, [sp, #8]
   23ac4:	add	r1, r2, r3, lsl #2
   23ac8:	cmp	lr, #0
   23acc:	movle	r3, #0
   23ad0:	ble	251fc <GetDataSlab+0x3c18>
   23ad4:	mov	r0, #0
   23ad8:	b	23b28 <GetDataSlab+0x2544>
   23adc:	ldr	r2, [sl]
   23ae0:	mul	r2, r2, r3
   23ae4:	ldr	r2, [r1, r2, lsl #2]
   23ae8:	ldr	ip, [sp, #4]
   23aec:	strh	r2, [ip], #2
   23af0:	str	ip, [sp, #4]
   23af4:	add	r3, r3, #1
   23af8:	ldr	r2, [fp]
   23afc:	cmp	r2, r3
   23b00:	bgt	23adc <GetDataSlab+0x24f8>
   23b04:	ldr	r3, [sl, #4]
   23b08:	ldr	r2, [sp, #192]	; 0xc0
   23b0c:	ldr	r2, [r2]
   23b10:	mul	r3, r2, r3
   23b14:	add	r1, r1, r3, lsl #2
   23b18:	add	r0, r0, #1
   23b1c:	ldr	r3, [fp, #4]
   23b20:	cmp	r3, r0
   23b24:	ble	3a75c <GetDataSlab+0x19178>
   23b28:	ldr	r3, [fp]
   23b2c:	cmp	r3, #0
   23b30:	movgt	r3, #0
   23b34:	bgt	23adc <GetDataSlab+0x24f8>
   23b38:	b	23b04 <GetDataSlab+0x2520>
   23b3c:	mla	r3, r2, r1, ip
   23b40:	ldr	r2, [sp, #8]
   23b44:	add	r1, r2, r3, lsl #1
   23b48:	cmp	lr, #0
   23b4c:	movle	r3, #0
   23b50:	ble	251fc <GetDataSlab+0x3c18>
   23b54:	mov	r0, #0
   23b58:	b	23bac <GetDataSlab+0x25c8>
   23b5c:	ldr	r2, [sl]
   23b60:	mul	r2, r2, r3
   23b64:	lsl	r2, r2, #1
   23b68:	ldrsh	r2, [r1, r2]
   23b6c:	ldr	ip, [sp, #4]
   23b70:	strh	r2, [ip], #2
   23b74:	str	ip, [sp, #4]
   23b78:	add	r3, r3, #1
   23b7c:	ldr	r2, [fp]
   23b80:	cmp	r2, r3
   23b84:	bgt	23b5c <GetDataSlab+0x2578>
   23b88:	ldr	r3, [sl, #4]
   23b8c:	ldr	r2, [sp, #192]	; 0xc0
   23b90:	ldr	r2, [r2]
   23b94:	mul	r3, r2, r3
   23b98:	add	r1, r1, r3, lsl #1
   23b9c:	add	r0, r0, #1
   23ba0:	ldr	r3, [fp, #4]
   23ba4:	cmp	r3, r0
   23ba8:	ble	3a764 <GetDataSlab+0x19180>
   23bac:	ldr	r3, [fp]
   23bb0:	cmp	r3, #0
   23bb4:	movgt	r3, #0
   23bb8:	bgt	23b5c <GetDataSlab+0x2578>
   23bbc:	b	23b88 <GetDataSlab+0x25a4>
   23bc0:	mla	r3, r2, r1, ip
   23bc4:	ldr	r2, [sp, #8]
   23bc8:	add	r1, r2, r3, lsl #1
   23bcc:	cmp	lr, #0
   23bd0:	movle	r3, #0
   23bd4:	ble	251fc <GetDataSlab+0x3c18>
   23bd8:	mov	r0, #0
   23bdc:	b	23c30 <GetDataSlab+0x264c>
   23be0:	ldr	r2, [sl]
   23be4:	mul	r2, r2, r3
   23be8:	lsl	r2, r2, #1
   23bec:	ldrh	r2, [r1, r2]
   23bf0:	ldr	ip, [sp, #4]
   23bf4:	strh	r2, [ip], #2
   23bf8:	str	ip, [sp, #4]
   23bfc:	add	r3, r3, #1
   23c00:	ldr	r2, [fp]
   23c04:	cmp	r2, r3
   23c08:	bgt	23be0 <GetDataSlab+0x25fc>
   23c0c:	ldr	r3, [sl, #4]
   23c10:	ldr	r2, [sp, #192]	; 0xc0
   23c14:	ldr	r2, [r2]
   23c18:	mul	r3, r2, r3
   23c1c:	add	r1, r1, r3, lsl #1
   23c20:	add	r0, r0, #1
   23c24:	ldr	r3, [fp, #4]
   23c28:	cmp	r3, r0
   23c2c:	ble	3a76c <GetDataSlab+0x19188>
   23c30:	ldr	r3, [fp]
   23c34:	cmp	r3, #0
   23c38:	movgt	r3, #0
   23c3c:	bgt	23be0 <GetDataSlab+0x25fc>
   23c40:	b	23c0c <GetDataSlab+0x2628>
   23c44:	mla	r3, r2, r1, ip
   23c48:	ldr	r2, [sp, #8]
   23c4c:	add	r1, r2, r3
   23c50:	cmp	lr, #0
   23c54:	movle	r3, #0
   23c58:	ble	251fc <GetDataSlab+0x3c18>
   23c5c:	mov	r0, #0
   23c60:	b	23cac <GetDataSlab+0x26c8>
   23c64:	ldr	r2, [sl]
   23c68:	mul	r2, r2, r3
   23c6c:	ldrsb	r2, [r1, r2]
   23c70:	ldr	ip, [sp, #4]
   23c74:	strh	r2, [ip], #2
   23c78:	str	ip, [sp, #4]
   23c7c:	add	r3, r3, #1
   23c80:	ldr	r2, [fp]
   23c84:	cmp	r2, r3
   23c88:	bgt	23c64 <GetDataSlab+0x2680>
   23c8c:	ldr	r3, [sl, #4]
   23c90:	ldr	r2, [sp, #192]	; 0xc0
   23c94:	ldr	r2, [r2]
   23c98:	mla	r1, r2, r3, r1
   23c9c:	add	r0, r0, #1
   23ca0:	ldr	r3, [fp, #4]
   23ca4:	cmp	r3, r0
   23ca8:	ble	3a774 <GetDataSlab+0x19190>
   23cac:	ldr	r3, [fp]
   23cb0:	cmp	r3, #0
   23cb4:	movgt	r3, #0
   23cb8:	bgt	23c64 <GetDataSlab+0x2680>
   23cbc:	b	23c8c <GetDataSlab+0x26a8>
   23cc0:	mla	r3, r2, r1, ip
   23cc4:	ldr	r2, [sp, #8]
   23cc8:	add	r1, r2, r3
   23ccc:	cmp	lr, #0
   23cd0:	movle	r3, #0
   23cd4:	ble	251fc <GetDataSlab+0x3c18>
   23cd8:	mov	r0, #0
   23cdc:	b	23d28 <GetDataSlab+0x2744>
   23ce0:	ldr	r2, [sl]
   23ce4:	mul	r2, r2, r3
   23ce8:	ldrb	r2, [r1, r2]
   23cec:	ldr	ip, [sp, #4]
   23cf0:	strh	r2, [ip], #2
   23cf4:	str	ip, [sp, #4]
   23cf8:	add	r3, r3, #1
   23cfc:	ldr	r2, [fp]
   23d00:	cmp	r2, r3
   23d04:	bgt	23ce0 <GetDataSlab+0x26fc>
   23d08:	ldr	r3, [sl, #4]
   23d0c:	ldr	r2, [sp, #192]	; 0xc0
   23d10:	ldr	r2, [r2]
   23d14:	mla	r1, r2, r3, r1
   23d18:	add	r0, r0, #1
   23d1c:	ldr	r3, [fp, #4]
   23d20:	cmp	r3, r0
   23d24:	ble	3a77c <GetDataSlab+0x19198>
   23d28:	ldr	r3, [fp]
   23d2c:	cmp	r3, #0
   23d30:	movgt	r3, #0
   23d34:	bgt	23ce0 <GetDataSlab+0x26fc>
   23d38:	b	23d08 <GetDataSlab+0x2724>
   23d3c:	cmp	r8, #12
   23d40:	beq	23d70 <GetDataSlab+0x278c>
   23d44:	cmp	r8, #13
   23d48:	movne	r3, #1
   23d4c:	bne	251fc <GetDataSlab+0x3c18>
   23d50:	mla	r3, r2, r1, ip
   23d54:	ldr	r2, [sp, #8]
   23d58:	add	r1, r2, r3, lsl #3
   23d5c:	cmp	lr, #0
   23d60:	movle	r3, #0
   23d64:	ble	251fc <GetDataSlab+0x3c18>
   23d68:	mov	r0, #0
   23d6c:	b	23e3c <GetDataSlab+0x2858>
   23d70:	mla	r3, r2, r1, ip
   23d74:	ldr	r2, [sp, #8]
   23d78:	add	r1, r2, r3, lsl #3
   23d7c:	cmp	lr, #0
   23d80:	movgt	r0, #0
   23d84:	bgt	23ddc <GetDataSlab+0x27f8>
   23d88:	mov	r3, #0
   23d8c:	b	251fc <GetDataSlab+0x3c18>
   23d90:	ldr	r2, [sl]
   23d94:	mul	r2, r2, r3
   23d98:	ldr	r2, [r1, r2, lsl #3]
   23d9c:	ldr	ip, [sp, #4]
   23da0:	strh	r2, [ip], #2
   23da4:	str	ip, [sp, #4]
   23da8:	add	r3, r3, #1
   23dac:	ldr	r2, [fp]
   23db0:	cmp	r2, r3
   23db4:	bgt	23d90 <GetDataSlab+0x27ac>
   23db8:	ldr	r3, [sl, #4]
   23dbc:	ldr	r2, [sp, #192]	; 0xc0
   23dc0:	ldr	r2, [r2]
   23dc4:	mul	r3, r2, r3
   23dc8:	add	r1, r1, r3, lsl #3
   23dcc:	add	r0, r0, #1
   23dd0:	ldr	r3, [fp, #4]
   23dd4:	cmp	r3, r0
   23dd8:	ble	23d88 <GetDataSlab+0x27a4>
   23ddc:	ldr	r3, [fp]
   23de0:	cmp	r3, #0
   23de4:	movgt	r3, #0
   23de8:	bgt	23d90 <GetDataSlab+0x27ac>
   23dec:	b	23db8 <GetDataSlab+0x27d4>
   23df0:	ldr	r2, [sl]
   23df4:	mul	r2, r2, r3
   23df8:	ldr	r2, [r1, r2, lsl #3]
   23dfc:	ldr	ip, [sp, #4]
   23e00:	strh	r2, [ip], #2
   23e04:	str	ip, [sp, #4]
   23e08:	add	r3, r3, #1
   23e0c:	ldr	r2, [fp]
   23e10:	cmp	r2, r3
   23e14:	bgt	23df0 <GetDataSlab+0x280c>
   23e18:	ldr	r3, [sl, #4]
   23e1c:	ldr	r2, [sp, #192]	; 0xc0
   23e20:	ldr	r2, [r2]
   23e24:	mul	r3, r2, r3
   23e28:	add	r1, r1, r3, lsl #3
   23e2c:	add	r0, r0, #1
   23e30:	ldr	r3, [fp, #4]
   23e34:	cmp	r3, r0
   23e38:	ble	3a784 <GetDataSlab+0x191a0>
   23e3c:	ldr	r3, [fp]
   23e40:	cmp	r3, #0
   23e44:	movgt	r3, #0
   23e48:	bgt	23df0 <GetDataSlab+0x280c>
   23e4c:	b	23e18 <GetDataSlab+0x2834>
   23e50:	sub	r3, r8, #1
   23e54:	cmp	r3, #8
   23e58:	addls	pc, pc, r3, lsl #2
   23e5c:	b	2429c <GetDataSlab+0x2cb8>
   23e60:	b	241a4 <GetDataSlab+0x2bc0>
   23e64:	b	24220 <GetDataSlab+0x2c3c>
   23e68:	b	2409c <GetDataSlab+0x2ab8>
   23e6c:	b	24120 <GetDataSlab+0x2b3c>
   23e70:	b	23f9c <GetDataSlab+0x29b8>
   23e74:	b	2401c <GetDataSlab+0x2a38>
   23e78:	b	23f10 <GetDataSlab+0x292c>
   23e7c:	b	2429c <GetDataSlab+0x2cb8>
   23e80:	b	23e84 <GetDataSlab+0x28a0>
   23e84:	mla	r3, r2, r1, ip
   23e88:	ldr	r2, [sp, #8]
   23e8c:	add	r1, r2, r3, lsl #3
   23e90:	cmp	lr, #0
   23e94:	movle	r3, #0
   23e98:	ble	251fc <GetDataSlab+0x3c18>
   23e9c:	mov	r0, #0
   23ea0:	b	23efc <GetDataSlab+0x2918>
   23ea4:	ldr	r2, [sl]
   23ea8:	mul	r2, r2, r3
   23eac:	add	r2, r1, r2, lsl #3
   23eb0:	vldr	d7, [r2]
   23eb4:	vcvt.u32.f64	s15, d7
   23eb8:	vmov	r2, s15
   23ebc:	ldr	ip, [sp, #4]
   23ec0:	strh	r2, [ip], #2
   23ec4:	str	ip, [sp, #4]
   23ec8:	add	r3, r3, #1
   23ecc:	ldr	r2, [fp]
   23ed0:	cmp	r2, r3
   23ed4:	bgt	23ea4 <GetDataSlab+0x28c0>
   23ed8:	ldr	r3, [sl, #4]
   23edc:	ldr	r2, [sp, #192]	; 0xc0
   23ee0:	ldr	r2, [r2]
   23ee4:	mul	r3, r2, r3
   23ee8:	add	r1, r1, r3, lsl #3
   23eec:	add	r0, r0, #1
   23ef0:	ldr	r3, [fp, #4]
   23ef4:	cmp	r3, r0
   23ef8:	ble	3a78c <GetDataSlab+0x191a8>
   23efc:	ldr	r3, [fp]
   23f00:	cmp	r3, #0
   23f04:	movgt	r3, #0
   23f08:	bgt	23ea4 <GetDataSlab+0x28c0>
   23f0c:	b	23ed8 <GetDataSlab+0x28f4>
   23f10:	mla	r3, r2, r1, ip
   23f14:	ldr	r2, [sp, #8]
   23f18:	add	r1, r2, r3, lsl #2
   23f1c:	cmp	lr, #0
   23f20:	movle	r3, #0
   23f24:	ble	251fc <GetDataSlab+0x3c18>
   23f28:	mov	r0, #0
   23f2c:	b	23f88 <GetDataSlab+0x29a4>
   23f30:	ldr	r2, [sl]
   23f34:	mul	r2, r2, r3
   23f38:	add	r2, r1, r2, lsl #2
   23f3c:	vldr	s15, [r2]
   23f40:	vcvt.u32.f32	s15, s15
   23f44:	vmov	r2, s15
   23f48:	ldr	ip, [sp, #4]
   23f4c:	strh	r2, [ip], #2
   23f50:	str	ip, [sp, #4]
   23f54:	add	r3, r3, #1
   23f58:	ldr	r2, [fp]
   23f5c:	cmp	r2, r3
   23f60:	bgt	23f30 <GetDataSlab+0x294c>
   23f64:	ldr	r3, [sl, #4]
   23f68:	ldr	r2, [sp, #192]	; 0xc0
   23f6c:	ldr	r2, [r2]
   23f70:	mul	r3, r2, r3
   23f74:	add	r1, r1, r3, lsl #2
   23f78:	add	r0, r0, #1
   23f7c:	ldr	r3, [fp, #4]
   23f80:	cmp	r3, r0
   23f84:	ble	3a794 <GetDataSlab+0x191b0>
   23f88:	ldr	r3, [fp]
   23f8c:	cmp	r3, #0
   23f90:	movgt	r3, #0
   23f94:	bgt	23f30 <GetDataSlab+0x294c>
   23f98:	b	23f64 <GetDataSlab+0x2980>
   23f9c:	mla	r3, r2, r1, ip
   23fa0:	ldr	r2, [sp, #8]
   23fa4:	add	r1, r2, r3, lsl #2
   23fa8:	cmp	lr, #0
   23fac:	movle	r3, #0
   23fb0:	ble	251fc <GetDataSlab+0x3c18>
   23fb4:	mov	r0, #0
   23fb8:	b	24008 <GetDataSlab+0x2a24>
   23fbc:	ldr	r2, [sl]
   23fc0:	mul	r2, r2, r3
   23fc4:	ldr	r2, [r1, r2, lsl #2]
   23fc8:	ldr	ip, [sp, #4]
   23fcc:	strh	r2, [ip], #2
   23fd0:	str	ip, [sp, #4]
   23fd4:	add	r3, r3, #1
   23fd8:	ldr	r2, [fp]
   23fdc:	cmp	r2, r3
   23fe0:	bgt	23fbc <GetDataSlab+0x29d8>
   23fe4:	ldr	r3, [sl, #4]
   23fe8:	ldr	r2, [sp, #192]	; 0xc0
   23fec:	ldr	r2, [r2]
   23ff0:	mul	r3, r2, r3
   23ff4:	add	r1, r1, r3, lsl #2
   23ff8:	add	r0, r0, #1
   23ffc:	ldr	r3, [fp, #4]
   24000:	cmp	r3, r0
   24004:	ble	3a79c <GetDataSlab+0x191b8>
   24008:	ldr	r3, [fp]
   2400c:	cmp	r3, #0
   24010:	movgt	r3, #0
   24014:	bgt	23fbc <GetDataSlab+0x29d8>
   24018:	b	23fe4 <GetDataSlab+0x2a00>
   2401c:	mla	r3, r2, r1, ip
   24020:	ldr	r2, [sp, #8]
   24024:	add	r1, r2, r3, lsl #2
   24028:	cmp	lr, #0
   2402c:	movle	r3, #0
   24030:	ble	251fc <GetDataSlab+0x3c18>
   24034:	mov	r0, #0
   24038:	b	24088 <GetDataSlab+0x2aa4>
   2403c:	ldr	r2, [sl]
   24040:	mul	r2, r2, r3
   24044:	ldr	r2, [r1, r2, lsl #2]
   24048:	ldr	ip, [sp, #4]
   2404c:	strh	r2, [ip], #2
   24050:	str	ip, [sp, #4]
   24054:	add	r3, r3, #1
   24058:	ldr	r2, [fp]
   2405c:	cmp	r2, r3
   24060:	bgt	2403c <GetDataSlab+0x2a58>
   24064:	ldr	r3, [sl, #4]
   24068:	ldr	r2, [sp, #192]	; 0xc0
   2406c:	ldr	r2, [r2]
   24070:	mul	r3, r2, r3
   24074:	add	r1, r1, r3, lsl #2
   24078:	add	r0, r0, #1
   2407c:	ldr	r3, [fp, #4]
   24080:	cmp	r3, r0
   24084:	ble	3a7a4 <GetDataSlab+0x191c0>
   24088:	ldr	r3, [fp]
   2408c:	cmp	r3, #0
   24090:	movgt	r3, #0
   24094:	bgt	2403c <GetDataSlab+0x2a58>
   24098:	b	24064 <GetDataSlab+0x2a80>
   2409c:	mla	r3, r2, r1, ip
   240a0:	ldr	r2, [sp, #8]
   240a4:	add	r1, r2, r3, lsl #1
   240a8:	cmp	lr, #0
   240ac:	movle	r3, #0
   240b0:	ble	251fc <GetDataSlab+0x3c18>
   240b4:	mov	r0, #0
   240b8:	b	2410c <GetDataSlab+0x2b28>
   240bc:	ldr	r2, [sl]
   240c0:	mul	r2, r2, r3
   240c4:	lsl	r2, r2, #1
   240c8:	ldrh	r2, [r1, r2]
   240cc:	ldr	ip, [sp, #4]
   240d0:	strh	r2, [ip], #2
   240d4:	str	ip, [sp, #4]
   240d8:	add	r3, r3, #1
   240dc:	ldr	r2, [fp]
   240e0:	cmp	r2, r3
   240e4:	bgt	240bc <GetDataSlab+0x2ad8>
   240e8:	ldr	r3, [sl, #4]
   240ec:	ldr	r2, [sp, #192]	; 0xc0
   240f0:	ldr	r2, [r2]
   240f4:	mul	r3, r2, r3
   240f8:	add	r1, r1, r3, lsl #1
   240fc:	add	r0, r0, #1
   24100:	ldr	r3, [fp, #4]
   24104:	cmp	r3, r0
   24108:	ble	3a7ac <GetDataSlab+0x191c8>
   2410c:	ldr	r3, [fp]
   24110:	cmp	r3, #0
   24114:	movgt	r3, #0
   24118:	bgt	240bc <GetDataSlab+0x2ad8>
   2411c:	b	240e8 <GetDataSlab+0x2b04>
   24120:	mla	r3, r2, r1, ip
   24124:	ldr	r2, [sp, #8]
   24128:	add	r1, r2, r3, lsl #1
   2412c:	cmp	lr, #0
   24130:	movle	r3, #0
   24134:	ble	251fc <GetDataSlab+0x3c18>
   24138:	mov	r0, #0
   2413c:	b	24190 <GetDataSlab+0x2bac>
   24140:	ldr	r2, [sl]
   24144:	mul	r2, r2, r3
   24148:	lsl	r2, r2, #1
   2414c:	ldrh	r2, [r1, r2]
   24150:	ldr	ip, [sp, #4]
   24154:	strh	r2, [ip], #2
   24158:	str	ip, [sp, #4]
   2415c:	add	r3, r3, #1
   24160:	ldr	r2, [fp]
   24164:	cmp	r2, r3
   24168:	bgt	24140 <GetDataSlab+0x2b5c>
   2416c:	ldr	r3, [sl, #4]
   24170:	ldr	r2, [sp, #192]	; 0xc0
   24174:	ldr	r2, [r2]
   24178:	mul	r3, r2, r3
   2417c:	add	r1, r1, r3, lsl #1
   24180:	add	r0, r0, #1
   24184:	ldr	r3, [fp, #4]
   24188:	cmp	r3, r0
   2418c:	ble	3a7b4 <GetDataSlab+0x191d0>
   24190:	ldr	r3, [fp]
   24194:	cmp	r3, #0
   24198:	movgt	r3, #0
   2419c:	bgt	24140 <GetDataSlab+0x2b5c>
   241a0:	b	2416c <GetDataSlab+0x2b88>
   241a4:	mla	r3, r2, r1, ip
   241a8:	ldr	r2, [sp, #8]
   241ac:	add	r1, r2, r3
   241b0:	cmp	lr, #0
   241b4:	movle	r3, #0
   241b8:	ble	251fc <GetDataSlab+0x3c18>
   241bc:	mov	r0, #0
   241c0:	b	2420c <GetDataSlab+0x2c28>
   241c4:	ldr	r2, [sl]
   241c8:	mul	r2, r2, r3
   241cc:	ldrsb	r2, [r1, r2]
   241d0:	ldr	ip, [sp, #4]
   241d4:	strh	r2, [ip], #2
   241d8:	str	ip, [sp, #4]
   241dc:	add	r3, r3, #1
   241e0:	ldr	r2, [fp]
   241e4:	cmp	r2, r3
   241e8:	bgt	241c4 <GetDataSlab+0x2be0>
   241ec:	ldr	r3, [sl, #4]
   241f0:	ldr	r2, [sp, #192]	; 0xc0
   241f4:	ldr	r2, [r2]
   241f8:	mla	r1, r2, r3, r1
   241fc:	add	r0, r0, #1
   24200:	ldr	r3, [fp, #4]
   24204:	cmp	r3, r0
   24208:	ble	3a7bc <GetDataSlab+0x191d8>
   2420c:	ldr	r3, [fp]
   24210:	cmp	r3, #0
   24214:	movgt	r3, #0
   24218:	bgt	241c4 <GetDataSlab+0x2be0>
   2421c:	b	241ec <GetDataSlab+0x2c08>
   24220:	mla	r3, r2, r1, ip
   24224:	ldr	r2, [sp, #8]
   24228:	add	r1, r2, r3
   2422c:	cmp	lr, #0
   24230:	movle	r3, #0
   24234:	ble	251fc <GetDataSlab+0x3c18>
   24238:	mov	r0, #0
   2423c:	b	24288 <GetDataSlab+0x2ca4>
   24240:	ldr	r2, [sl]
   24244:	mul	r2, r2, r3
   24248:	ldrb	r2, [r1, r2]
   2424c:	ldr	ip, [sp, #4]
   24250:	strh	r2, [ip], #2
   24254:	str	ip, [sp, #4]
   24258:	add	r3, r3, #1
   2425c:	ldr	r2, [fp]
   24260:	cmp	r2, r3
   24264:	bgt	24240 <GetDataSlab+0x2c5c>
   24268:	ldr	r3, [sl, #4]
   2426c:	ldr	r2, [sp, #192]	; 0xc0
   24270:	ldr	r2, [r2]
   24274:	mla	r1, r2, r3, r1
   24278:	add	r0, r0, #1
   2427c:	ldr	r3, [fp, #4]
   24280:	cmp	r3, r0
   24284:	ble	3a7c4 <GetDataSlab+0x191e0>
   24288:	ldr	r3, [fp]
   2428c:	cmp	r3, #0
   24290:	movgt	r3, #0
   24294:	bgt	24240 <GetDataSlab+0x2c5c>
   24298:	b	24268 <GetDataSlab+0x2c84>
   2429c:	cmp	r8, #12
   242a0:	beq	242d0 <GetDataSlab+0x2cec>
   242a4:	cmp	r8, #13
   242a8:	movne	r3, #1
   242ac:	bne	251fc <GetDataSlab+0x3c18>
   242b0:	mla	r3, r2, r1, ip
   242b4:	ldr	r2, [sp, #8]
   242b8:	add	r1, r2, r3, lsl #3
   242bc:	cmp	lr, #0
   242c0:	movle	r3, #0
   242c4:	ble	251fc <GetDataSlab+0x3c18>
   242c8:	mov	r0, #0
   242cc:	b	2439c <GetDataSlab+0x2db8>
   242d0:	mla	r3, r2, r1, ip
   242d4:	ldr	r2, [sp, #8]
   242d8:	add	r1, r2, r3, lsl #3
   242dc:	cmp	lr, #0
   242e0:	movgt	r0, #0
   242e4:	bgt	2433c <GetDataSlab+0x2d58>
   242e8:	mov	r3, #0
   242ec:	b	251fc <GetDataSlab+0x3c18>
   242f0:	ldr	r2, [sl]
   242f4:	mul	r2, r2, r3
   242f8:	ldr	r2, [r1, r2, lsl #3]
   242fc:	ldr	ip, [sp, #4]
   24300:	strh	r2, [ip], #2
   24304:	str	ip, [sp, #4]
   24308:	add	r3, r3, #1
   2430c:	ldr	r2, [fp]
   24310:	cmp	r2, r3
   24314:	bgt	242f0 <GetDataSlab+0x2d0c>
   24318:	ldr	r3, [sl, #4]
   2431c:	ldr	r2, [sp, #192]	; 0xc0
   24320:	ldr	r2, [r2]
   24324:	mul	r3, r2, r3
   24328:	add	r1, r1, r3, lsl #3
   2432c:	add	r0, r0, #1
   24330:	ldr	r3, [fp, #4]
   24334:	cmp	r3, r0
   24338:	ble	242e8 <GetDataSlab+0x2d04>
   2433c:	ldr	r3, [fp]
   24340:	cmp	r3, #0
   24344:	movgt	r3, #0
   24348:	bgt	242f0 <GetDataSlab+0x2d0c>
   2434c:	b	24318 <GetDataSlab+0x2d34>
   24350:	ldr	r2, [sl]
   24354:	mul	r2, r2, r3
   24358:	ldr	r2, [r1, r2, lsl #3]
   2435c:	ldr	ip, [sp, #4]
   24360:	strh	r2, [ip], #2
   24364:	str	ip, [sp, #4]
   24368:	add	r3, r3, #1
   2436c:	ldr	r2, [fp]
   24370:	cmp	r2, r3
   24374:	bgt	24350 <GetDataSlab+0x2d6c>
   24378:	ldr	r3, [sl, #4]
   2437c:	ldr	r2, [sp, #192]	; 0xc0
   24380:	ldr	r2, [r2]
   24384:	mul	r3, r2, r3
   24388:	add	r1, r1, r3, lsl #3
   2438c:	add	r0, r0, #1
   24390:	ldr	r3, [fp, #4]
   24394:	cmp	r3, r0
   24398:	ble	3a7cc <GetDataSlab+0x191e8>
   2439c:	ldr	r3, [fp]
   243a0:	cmp	r3, #0
   243a4:	movgt	r3, #0
   243a8:	bgt	24350 <GetDataSlab+0x2d6c>
   243ac:	b	24378 <GetDataSlab+0x2d94>
   243b0:	sub	r3, r8, #1
   243b4:	cmp	r3, #8
   243b8:	addls	pc, pc, r3, lsl #2
   243bc:	b	247fc <GetDataSlab+0x3218>
   243c0:	b	24704 <GetDataSlab+0x3120>
   243c4:	b	24780 <GetDataSlab+0x319c>
   243c8:	b	245fc <GetDataSlab+0x3018>
   243cc:	b	24680 <GetDataSlab+0x309c>
   243d0:	b	244fc <GetDataSlab+0x2f18>
   243d4:	b	2457c <GetDataSlab+0x2f98>
   243d8:	b	24470 <GetDataSlab+0x2e8c>
   243dc:	b	247fc <GetDataSlab+0x3218>
   243e0:	b	243e4 <GetDataSlab+0x2e00>
   243e4:	mla	r3, r2, r1, ip
   243e8:	ldr	r2, [sp, #8]
   243ec:	add	r1, r2, r3, lsl #3
   243f0:	cmp	lr, #0
   243f4:	movle	r3, #0
   243f8:	ble	251fc <GetDataSlab+0x3c18>
   243fc:	mov	r0, #0
   24400:	b	2445c <GetDataSlab+0x2e78>
   24404:	ldr	r2, [sl]
   24408:	mul	r2, r2, r3
   2440c:	add	r2, r1, r2, lsl #3
   24410:	vldr	d7, [r2]
   24414:	vcvt.s32.f64	s15, d7
   24418:	vmov	r2, s15
   2441c:	ldr	ip, [sp, #4]
   24420:	strb	r2, [ip], #1
   24424:	str	ip, [sp, #4]
   24428:	add	r3, r3, #1
   2442c:	ldr	r2, [fp]
   24430:	cmp	r2, r3
   24434:	bgt	24404 <GetDataSlab+0x2e20>
   24438:	ldr	r3, [sl, #4]
   2443c:	ldr	r2, [sp, #192]	; 0xc0
   24440:	ldr	r2, [r2]
   24444:	mul	r3, r2, r3
   24448:	add	r1, r1, r3, lsl #3
   2444c:	add	r0, r0, #1
   24450:	ldr	r3, [fp, #4]
   24454:	cmp	r3, r0
   24458:	ble	3a7d4 <GetDataSlab+0x191f0>
   2445c:	ldr	r3, [fp]
   24460:	cmp	r3, #0
   24464:	movgt	r3, #0
   24468:	bgt	24404 <GetDataSlab+0x2e20>
   2446c:	b	24438 <GetDataSlab+0x2e54>
   24470:	mla	r3, r2, r1, ip
   24474:	ldr	r2, [sp, #8]
   24478:	add	r1, r2, r3, lsl #2
   2447c:	cmp	lr, #0
   24480:	movle	r3, #0
   24484:	ble	251fc <GetDataSlab+0x3c18>
   24488:	mov	r0, #0
   2448c:	b	244e8 <GetDataSlab+0x2f04>
   24490:	ldr	r2, [sl]
   24494:	mul	r2, r2, r3
   24498:	add	r2, r1, r2, lsl #2
   2449c:	vldr	s15, [r2]
   244a0:	vcvt.s32.f32	s15, s15
   244a4:	vmov	r2, s15
   244a8:	ldr	ip, [sp, #4]
   244ac:	strb	r2, [ip], #1
   244b0:	str	ip, [sp, #4]
   244b4:	add	r3, r3, #1
   244b8:	ldr	r2, [fp]
   244bc:	cmp	r2, r3
   244c0:	bgt	24490 <GetDataSlab+0x2eac>
   244c4:	ldr	r3, [sl, #4]
   244c8:	ldr	r2, [sp, #192]	; 0xc0
   244cc:	ldr	r2, [r2]
   244d0:	mul	r3, r2, r3
   244d4:	add	r1, r1, r3, lsl #2
   244d8:	add	r0, r0, #1
   244dc:	ldr	r3, [fp, #4]
   244e0:	cmp	r3, r0
   244e4:	ble	3a7dc <GetDataSlab+0x191f8>
   244e8:	ldr	r3, [fp]
   244ec:	cmp	r3, #0
   244f0:	movgt	r3, #0
   244f4:	bgt	24490 <GetDataSlab+0x2eac>
   244f8:	b	244c4 <GetDataSlab+0x2ee0>
   244fc:	mla	r3, r2, r1, ip
   24500:	ldr	r2, [sp, #8]
   24504:	add	r1, r2, r3, lsl #2
   24508:	cmp	lr, #0
   2450c:	movle	r3, #0
   24510:	ble	251fc <GetDataSlab+0x3c18>
   24514:	mov	r0, #0
   24518:	b	24568 <GetDataSlab+0x2f84>
   2451c:	ldr	r2, [sl]
   24520:	mul	r2, r2, r3
   24524:	ldr	r2, [r1, r2, lsl #2]
   24528:	ldr	ip, [sp, #4]
   2452c:	strb	r2, [ip], #1
   24530:	str	ip, [sp, #4]
   24534:	add	r3, r3, #1
   24538:	ldr	r2, [fp]
   2453c:	cmp	r2, r3
   24540:	bgt	2451c <GetDataSlab+0x2f38>
   24544:	ldr	r3, [sl, #4]
   24548:	ldr	r2, [sp, #192]	; 0xc0
   2454c:	ldr	r2, [r2]
   24550:	mul	r3, r2, r3
   24554:	add	r1, r1, r3, lsl #2
   24558:	add	r0, r0, #1
   2455c:	ldr	r3, [fp, #4]
   24560:	cmp	r3, r0
   24564:	ble	3a7e4 <GetDataSlab+0x19200>
   24568:	ldr	r3, [fp]
   2456c:	cmp	r3, #0
   24570:	movgt	r3, #0
   24574:	bgt	2451c <GetDataSlab+0x2f38>
   24578:	b	24544 <GetDataSlab+0x2f60>
   2457c:	mla	r3, r2, r1, ip
   24580:	ldr	r2, [sp, #8]
   24584:	add	r1, r2, r3, lsl #2
   24588:	cmp	lr, #0
   2458c:	movle	r3, #0
   24590:	ble	251fc <GetDataSlab+0x3c18>
   24594:	mov	r0, #0
   24598:	b	245e8 <GetDataSlab+0x3004>
   2459c:	ldr	r2, [sl]
   245a0:	mul	r2, r2, r3
   245a4:	ldr	r2, [r1, r2, lsl #2]
   245a8:	ldr	ip, [sp, #4]
   245ac:	strb	r2, [ip], #1
   245b0:	str	ip, [sp, #4]
   245b4:	add	r3, r3, #1
   245b8:	ldr	r2, [fp]
   245bc:	cmp	r2, r3
   245c0:	bgt	2459c <GetDataSlab+0x2fb8>
   245c4:	ldr	r3, [sl, #4]
   245c8:	ldr	r2, [sp, #192]	; 0xc0
   245cc:	ldr	r2, [r2]
   245d0:	mul	r3, r2, r3
   245d4:	add	r1, r1, r3, lsl #2
   245d8:	add	r0, r0, #1
   245dc:	ldr	r3, [fp, #4]
   245e0:	cmp	r3, r0
   245e4:	ble	3a7ec <GetDataSlab+0x19208>
   245e8:	ldr	r3, [fp]
   245ec:	cmp	r3, #0
   245f0:	movgt	r3, #0
   245f4:	bgt	2459c <GetDataSlab+0x2fb8>
   245f8:	b	245c4 <GetDataSlab+0x2fe0>
   245fc:	mla	r3, r2, r1, ip
   24600:	ldr	r2, [sp, #8]
   24604:	add	r1, r2, r3, lsl #1
   24608:	cmp	lr, #0
   2460c:	movle	r3, #0
   24610:	ble	251fc <GetDataSlab+0x3c18>
   24614:	mov	r0, #0
   24618:	b	2466c <GetDataSlab+0x3088>
   2461c:	ldr	r2, [sl]
   24620:	mul	r2, r2, r3
   24624:	lsl	r2, r2, #1
   24628:	ldrh	r2, [r1, r2]
   2462c:	ldr	ip, [sp, #4]
   24630:	strb	r2, [ip], #1
   24634:	str	ip, [sp, #4]
   24638:	add	r3, r3, #1
   2463c:	ldr	r2, [fp]
   24640:	cmp	r2, r3
   24644:	bgt	2461c <GetDataSlab+0x3038>
   24648:	ldr	r3, [sl, #4]
   2464c:	ldr	r2, [sp, #192]	; 0xc0
   24650:	ldr	r2, [r2]
   24654:	mul	r3, r2, r3
   24658:	add	r1, r1, r3, lsl #1
   2465c:	add	r0, r0, #1
   24660:	ldr	r3, [fp, #4]
   24664:	cmp	r3, r0
   24668:	ble	3a7f4 <GetDataSlab+0x19210>
   2466c:	ldr	r3, [fp]
   24670:	cmp	r3, #0
   24674:	movgt	r3, #0
   24678:	bgt	2461c <GetDataSlab+0x3038>
   2467c:	b	24648 <GetDataSlab+0x3064>
   24680:	mla	r3, r2, r1, ip
   24684:	ldr	r2, [sp, #8]
   24688:	add	r1, r2, r3, lsl #1
   2468c:	cmp	lr, #0
   24690:	movle	r3, #0
   24694:	ble	251fc <GetDataSlab+0x3c18>
   24698:	mov	r0, #0
   2469c:	b	246f0 <GetDataSlab+0x310c>
   246a0:	ldr	r2, [sl]
   246a4:	mul	r2, r2, r3
   246a8:	lsl	r2, r2, #1
   246ac:	ldrh	r2, [r1, r2]
   246b0:	ldr	ip, [sp, #4]
   246b4:	strb	r2, [ip], #1
   246b8:	str	ip, [sp, #4]
   246bc:	add	r3, r3, #1
   246c0:	ldr	r2, [fp]
   246c4:	cmp	r2, r3
   246c8:	bgt	246a0 <GetDataSlab+0x30bc>
   246cc:	ldr	r3, [sl, #4]
   246d0:	ldr	r2, [sp, #192]	; 0xc0
   246d4:	ldr	r2, [r2]
   246d8:	mul	r3, r2, r3
   246dc:	add	r1, r1, r3, lsl #1
   246e0:	add	r0, r0, #1
   246e4:	ldr	r3, [fp, #4]
   246e8:	cmp	r3, r0
   246ec:	ble	3a7fc <GetDataSlab+0x19218>
   246f0:	ldr	r3, [fp]
   246f4:	cmp	r3, #0
   246f8:	movgt	r3, #0
   246fc:	bgt	246a0 <GetDataSlab+0x30bc>
   24700:	b	246cc <GetDataSlab+0x30e8>
   24704:	mla	r3, r2, r1, ip
   24708:	ldr	r2, [sp, #8]
   2470c:	add	r1, r2, r3
   24710:	cmp	lr, #0
   24714:	movle	r3, #0
   24718:	ble	251fc <GetDataSlab+0x3c18>
   2471c:	mov	r0, #0
   24720:	b	2476c <GetDataSlab+0x3188>
   24724:	ldr	r2, [sl]
   24728:	mul	r2, r2, r3
   2472c:	ldrsb	r2, [r1, r2]
   24730:	ldr	ip, [sp, #4]
   24734:	strb	r2, [ip], #1
   24738:	str	ip, [sp, #4]
   2473c:	add	r3, r3, #1
   24740:	ldr	r2, [fp]
   24744:	cmp	r2, r3
   24748:	bgt	24724 <GetDataSlab+0x3140>
   2474c:	ldr	r3, [sl, #4]
   24750:	ldr	r2, [sp, #192]	; 0xc0
   24754:	ldr	r2, [r2]
   24758:	mla	r1, r2, r3, r1
   2475c:	add	r0, r0, #1
   24760:	ldr	r3, [fp, #4]
   24764:	cmp	r3, r0
   24768:	ble	3a804 <GetDataSlab+0x19220>
   2476c:	ldr	r3, [fp]
   24770:	cmp	r3, #0
   24774:	movgt	r3, #0
   24778:	bgt	24724 <GetDataSlab+0x3140>
   2477c:	b	2474c <GetDataSlab+0x3168>
   24780:	mla	r3, r2, r1, ip
   24784:	ldr	r2, [sp, #8]
   24788:	add	r1, r2, r3
   2478c:	cmp	lr, #0
   24790:	movle	r3, #0
   24794:	ble	251fc <GetDataSlab+0x3c18>
   24798:	mov	r0, #0
   2479c:	b	247e8 <GetDataSlab+0x3204>
   247a0:	ldr	r2, [sl]
   247a4:	mul	r2, r2, r3
   247a8:	ldrb	r2, [r1, r2]
   247ac:	ldr	ip, [sp, #4]
   247b0:	strb	r2, [ip], #1
   247b4:	str	ip, [sp, #4]
   247b8:	add	r3, r3, #1
   247bc:	ldr	r2, [fp]
   247c0:	cmp	r2, r3
   247c4:	bgt	247a0 <GetDataSlab+0x31bc>
   247c8:	ldr	r3, [sl, #4]
   247cc:	ldr	r2, [sp, #192]	; 0xc0
   247d0:	ldr	r2, [r2]
   247d4:	mla	r1, r2, r3, r1
   247d8:	add	r0, r0, #1
   247dc:	ldr	r3, [fp, #4]
   247e0:	cmp	r3, r0
   247e4:	ble	3a80c <GetDataSlab+0x19228>
   247e8:	ldr	r3, [fp]
   247ec:	cmp	r3, #0
   247f0:	movgt	r3, #0
   247f4:	bgt	247a0 <GetDataSlab+0x31bc>
   247f8:	b	247c8 <GetDataSlab+0x31e4>
   247fc:	cmp	r8, #12
   24800:	beq	24830 <GetDataSlab+0x324c>
   24804:	cmp	r8, #13
   24808:	movne	r3, #1
   2480c:	bne	251fc <GetDataSlab+0x3c18>
   24810:	mla	r3, r2, r1, ip
   24814:	ldr	r2, [sp, #8]
   24818:	add	r1, r2, r3, lsl #3
   2481c:	cmp	lr, #0
   24820:	movle	r3, #0
   24824:	ble	251fc <GetDataSlab+0x3c18>
   24828:	mov	r0, #0
   2482c:	b	248fc <GetDataSlab+0x3318>
   24830:	mla	r3, r2, r1, ip
   24834:	ldr	r2, [sp, #8]
   24838:	add	r1, r2, r3, lsl #3
   2483c:	cmp	lr, #0
   24840:	movgt	r0, #0
   24844:	bgt	2489c <GetDataSlab+0x32b8>
   24848:	mov	r3, #0
   2484c:	b	251fc <GetDataSlab+0x3c18>
   24850:	ldr	r2, [sl]
   24854:	mul	r2, r2, r3
   24858:	ldr	r2, [r1, r2, lsl #3]
   2485c:	ldr	ip, [sp, #4]
   24860:	strb	r2, [ip], #1
   24864:	str	ip, [sp, #4]
   24868:	add	r3, r3, #1
   2486c:	ldr	r2, [fp]
   24870:	cmp	r2, r3
   24874:	bgt	24850 <GetDataSlab+0x326c>
   24878:	ldr	r3, [sl, #4]
   2487c:	ldr	r2, [sp, #192]	; 0xc0
   24880:	ldr	r2, [r2]
   24884:	mul	r3, r2, r3
   24888:	add	r1, r1, r3, lsl #3
   2488c:	add	r0, r0, #1
   24890:	ldr	r3, [fp, #4]
   24894:	cmp	r3, r0
   24898:	ble	24848 <GetDataSlab+0x3264>
   2489c:	ldr	r3, [fp]
   248a0:	cmp	r3, #0
   248a4:	movgt	r3, #0
   248a8:	bgt	24850 <GetDataSlab+0x326c>
   248ac:	b	24878 <GetDataSlab+0x3294>
   248b0:	ldr	r2, [sl]
   248b4:	mul	r2, r2, r3
   248b8:	ldr	r2, [r1, r2, lsl #3]
   248bc:	ldr	ip, [sp, #4]
   248c0:	strb	r2, [ip], #1
   248c4:	str	ip, [sp, #4]
   248c8:	add	r3, r3, #1
   248cc:	ldr	r2, [fp]
   248d0:	cmp	r2, r3
   248d4:	bgt	248b0 <GetDataSlab+0x32cc>
   248d8:	ldr	r3, [sl, #4]
   248dc:	ldr	r2, [sp, #192]	; 0xc0
   248e0:	ldr	r2, [r2]
   248e4:	mul	r3, r2, r3
   248e8:	add	r1, r1, r3, lsl #3
   248ec:	add	r0, r0, #1
   248f0:	ldr	r3, [fp, #4]
   248f4:	cmp	r3, r0
   248f8:	ble	3a814 <GetDataSlab+0x19230>
   248fc:	ldr	r3, [fp]
   24900:	cmp	r3, #0
   24904:	movgt	r3, #0
   24908:	bgt	248b0 <GetDataSlab+0x32cc>
   2490c:	b	248d8 <GetDataSlab+0x32f4>
   24910:	sub	r3, r8, #1
   24914:	cmp	r3, #8
   24918:	addls	pc, pc, r3, lsl #2
   2491c:	b	24d5c <GetDataSlab+0x3778>
   24920:	b	24c64 <GetDataSlab+0x3680>
   24924:	b	24ce0 <GetDataSlab+0x36fc>
   24928:	b	24b5c <GetDataSlab+0x3578>
   2492c:	b	24be0 <GetDataSlab+0x35fc>
   24930:	b	24a5c <GetDataSlab+0x3478>
   24934:	b	24adc <GetDataSlab+0x34f8>
   24938:	b	249d0 <GetDataSlab+0x33ec>
   2493c:	b	24d5c <GetDataSlab+0x3778>
   24940:	b	24944 <GetDataSlab+0x3360>
   24944:	mla	r3, r2, r1, ip
   24948:	ldr	r2, [sp, #8]
   2494c:	add	r1, r2, r3, lsl #3
   24950:	cmp	lr, #0
   24954:	movle	r3, #0
   24958:	ble	251fc <GetDataSlab+0x3c18>
   2495c:	mov	r0, #0
   24960:	b	249bc <GetDataSlab+0x33d8>
   24964:	ldr	r2, [sl]
   24968:	mul	r2, r2, r3
   2496c:	add	r2, r1, r2, lsl #3
   24970:	vldr	d7, [r2]
   24974:	vcvt.u32.f64	s15, d7
   24978:	vmov	r2, s15
   2497c:	ldr	ip, [sp, #4]
   24980:	strb	r2, [ip], #1
   24984:	str	ip, [sp, #4]
   24988:	add	r3, r3, #1
   2498c:	ldr	r2, [fp]
   24990:	cmp	r2, r3
   24994:	bgt	24964 <GetDataSlab+0x3380>
   24998:	ldr	r3, [sl, #4]
   2499c:	ldr	r2, [sp, #192]	; 0xc0
   249a0:	ldr	r2, [r2]
   249a4:	mul	r3, r2, r3
   249a8:	add	r1, r1, r3, lsl #3
   249ac:	add	r0, r0, #1
   249b0:	ldr	r3, [fp, #4]
   249b4:	cmp	r3, r0
   249b8:	ble	3a81c <GetDataSlab+0x19238>
   249bc:	ldr	r3, [fp]
   249c0:	cmp	r3, #0
   249c4:	movgt	r3, #0
   249c8:	bgt	24964 <GetDataSlab+0x3380>
   249cc:	b	24998 <GetDataSlab+0x33b4>
   249d0:	mla	r3, r2, r1, ip
   249d4:	ldr	r2, [sp, #8]
   249d8:	add	r1, r2, r3, lsl #2
   249dc:	cmp	lr, #0
   249e0:	movle	r3, #0
   249e4:	ble	251fc <GetDataSlab+0x3c18>
   249e8:	mov	r0, #0
   249ec:	b	24a48 <GetDataSlab+0x3464>
   249f0:	ldr	r2, [sl]
   249f4:	mul	r2, r2, r3
   249f8:	add	r2, r1, r2, lsl #2
   249fc:	vldr	s15, [r2]
   24a00:	vcvt.u32.f32	s15, s15
   24a04:	vmov	r2, s15
   24a08:	ldr	ip, [sp, #4]
   24a0c:	strb	r2, [ip], #1
   24a10:	str	ip, [sp, #4]
   24a14:	add	r3, r3, #1
   24a18:	ldr	r2, [fp]
   24a1c:	cmp	r2, r3
   24a20:	bgt	249f0 <GetDataSlab+0x340c>
   24a24:	ldr	r3, [sl, #4]
   24a28:	ldr	r2, [sp, #192]	; 0xc0
   24a2c:	ldr	r2, [r2]
   24a30:	mul	r3, r2, r3
   24a34:	add	r1, r1, r3, lsl #2
   24a38:	add	r0, r0, #1
   24a3c:	ldr	r3, [fp, #4]
   24a40:	cmp	r3, r0
   24a44:	ble	3a824 <GetDataSlab+0x19240>
   24a48:	ldr	r3, [fp]
   24a4c:	cmp	r3, #0
   24a50:	movgt	r3, #0
   24a54:	bgt	249f0 <GetDataSlab+0x340c>
   24a58:	b	24a24 <GetDataSlab+0x3440>
   24a5c:	mla	r3, r2, r1, ip
   24a60:	ldr	r2, [sp, #8]
   24a64:	add	r1, r2, r3, lsl #2
   24a68:	cmp	lr, #0
   24a6c:	movle	r3, #0
   24a70:	ble	251fc <GetDataSlab+0x3c18>
   24a74:	mov	r0, #0
   24a78:	b	24ac8 <GetDataSlab+0x34e4>
   24a7c:	ldr	r2, [sl]
   24a80:	mul	r2, r2, r3
   24a84:	ldr	r2, [r1, r2, lsl #2]
   24a88:	ldr	ip, [sp, #4]
   24a8c:	strb	r2, [ip], #1
   24a90:	str	ip, [sp, #4]
   24a94:	add	r3, r3, #1
   24a98:	ldr	r2, [fp]
   24a9c:	cmp	r2, r3
   24aa0:	bgt	24a7c <GetDataSlab+0x3498>
   24aa4:	ldr	r3, [sl, #4]
   24aa8:	ldr	r2, [sp, #192]	; 0xc0
   24aac:	ldr	r2, [r2]
   24ab0:	mul	r3, r2, r3
   24ab4:	add	r1, r1, r3, lsl #2
   24ab8:	add	r0, r0, #1
   24abc:	ldr	r3, [fp, #4]
   24ac0:	cmp	r3, r0
   24ac4:	ble	3a82c <GetDataSlab+0x19248>
   24ac8:	ldr	r3, [fp]
   24acc:	cmp	r3, #0
   24ad0:	movgt	r3, #0
   24ad4:	bgt	24a7c <GetDataSlab+0x3498>
   24ad8:	b	24aa4 <GetDataSlab+0x34c0>
   24adc:	mla	r3, r2, r1, ip
   24ae0:	ldr	r2, [sp, #8]
   24ae4:	add	r1, r2, r3, lsl #2
   24ae8:	cmp	lr, #0
   24aec:	movle	r3, #0
   24af0:	ble	251fc <GetDataSlab+0x3c18>
   24af4:	mov	r0, #0
   24af8:	b	24b48 <GetDataSlab+0x3564>
   24afc:	ldr	r2, [sl]
   24b00:	mul	r2, r2, r3
   24b04:	ldr	r2, [r1, r2, lsl #2]
   24b08:	ldr	ip, [sp, #4]
   24b0c:	strb	r2, [ip], #1
   24b10:	str	ip, [sp, #4]
   24b14:	add	r3, r3, #1
   24b18:	ldr	r2, [fp]
   24b1c:	cmp	r2, r3
   24b20:	bgt	24afc <GetDataSlab+0x3518>
   24b24:	ldr	r3, [sl, #4]
   24b28:	ldr	r2, [sp, #192]	; 0xc0
   24b2c:	ldr	r2, [r2]
   24b30:	mul	r3, r2, r3
   24b34:	add	r1, r1, r3, lsl #2
   24b38:	add	r0, r0, #1
   24b3c:	ldr	r3, [fp, #4]
   24b40:	cmp	r3, r0
   24b44:	ble	3a834 <GetDataSlab+0x19250>
   24b48:	ldr	r3, [fp]
   24b4c:	cmp	r3, #0
   24b50:	movgt	r3, #0
   24b54:	bgt	24afc <GetDataSlab+0x3518>
   24b58:	b	24b24 <GetDataSlab+0x3540>
   24b5c:	mla	r3, r2, r1, ip
   24b60:	ldr	r2, [sp, #8]
   24b64:	add	r1, r2, r3, lsl #1
   24b68:	cmp	lr, #0
   24b6c:	movle	r3, #0
   24b70:	ble	251fc <GetDataSlab+0x3c18>
   24b74:	mov	r0, #0
   24b78:	b	24bcc <GetDataSlab+0x35e8>
   24b7c:	ldr	r2, [sl]
   24b80:	mul	r2, r2, r3
   24b84:	lsl	r2, r2, #1
   24b88:	ldrh	r2, [r1, r2]
   24b8c:	ldr	ip, [sp, #4]
   24b90:	strb	r2, [ip], #1
   24b94:	str	ip, [sp, #4]
   24b98:	add	r3, r3, #1
   24b9c:	ldr	r2, [fp]
   24ba0:	cmp	r2, r3
   24ba4:	bgt	24b7c <GetDataSlab+0x3598>
   24ba8:	ldr	r3, [sl, #4]
   24bac:	ldr	r2, [sp, #192]	; 0xc0
   24bb0:	ldr	r2, [r2]
   24bb4:	mul	r3, r2, r3
   24bb8:	add	r1, r1, r3, lsl #1
   24bbc:	add	r0, r0, #1
   24bc0:	ldr	r3, [fp, #4]
   24bc4:	cmp	r3, r0
   24bc8:	ble	3a83c <GetDataSlab+0x19258>
   24bcc:	ldr	r3, [fp]
   24bd0:	cmp	r3, #0
   24bd4:	movgt	r3, #0
   24bd8:	bgt	24b7c <GetDataSlab+0x3598>
   24bdc:	b	24ba8 <GetDataSlab+0x35c4>
   24be0:	mla	r3, r2, r1, ip
   24be4:	ldr	r2, [sp, #8]
   24be8:	add	r1, r2, r3, lsl #1
   24bec:	cmp	lr, #0
   24bf0:	movle	r3, #0
   24bf4:	ble	251fc <GetDataSlab+0x3c18>
   24bf8:	mov	r0, #0
   24bfc:	b	24c50 <GetDataSlab+0x366c>
   24c00:	ldr	r2, [sl]
   24c04:	mul	r2, r2, r3
   24c08:	lsl	r2, r2, #1
   24c0c:	ldrh	r2, [r1, r2]
   24c10:	ldr	ip, [sp, #4]
   24c14:	strb	r2, [ip], #1
   24c18:	str	ip, [sp, #4]
   24c1c:	add	r3, r3, #1
   24c20:	ldr	r2, [fp]
   24c24:	cmp	r2, r3
   24c28:	bgt	24c00 <GetDataSlab+0x361c>
   24c2c:	ldr	r3, [sl, #4]
   24c30:	ldr	r2, [sp, #192]	; 0xc0
   24c34:	ldr	r2, [r2]
   24c38:	mul	r3, r2, r3
   24c3c:	add	r1, r1, r3, lsl #1
   24c40:	add	r0, r0, #1
   24c44:	ldr	r3, [fp, #4]
   24c48:	cmp	r3, r0
   24c4c:	ble	3a844 <GetDataSlab+0x19260>
   24c50:	ldr	r3, [fp]
   24c54:	cmp	r3, #0
   24c58:	movgt	r3, #0
   24c5c:	bgt	24c00 <GetDataSlab+0x361c>
   24c60:	b	24c2c <GetDataSlab+0x3648>
   24c64:	mla	r3, r2, r1, ip
   24c68:	ldr	r2, [sp, #8]
   24c6c:	add	r1, r2, r3
   24c70:	cmp	lr, #0
   24c74:	movle	r3, #0
   24c78:	ble	251fc <GetDataSlab+0x3c18>
   24c7c:	mov	r0, #0
   24c80:	b	24ccc <GetDataSlab+0x36e8>
   24c84:	ldr	r2, [sl]
   24c88:	mul	r2, r2, r3
   24c8c:	ldrb	r2, [r1, r2]
   24c90:	ldr	ip, [sp, #4]
   24c94:	strb	r2, [ip], #1
   24c98:	str	ip, [sp, #4]
   24c9c:	add	r3, r3, #1
   24ca0:	ldr	r2, [fp]
   24ca4:	cmp	r2, r3
   24ca8:	bgt	24c84 <GetDataSlab+0x36a0>
   24cac:	ldr	r3, [sl, #4]
   24cb0:	ldr	r2, [sp, #192]	; 0xc0
   24cb4:	ldr	r2, [r2]
   24cb8:	mla	r1, r2, r3, r1
   24cbc:	add	r0, r0, #1
   24cc0:	ldr	r3, [fp, #4]
   24cc4:	cmp	r3, r0
   24cc8:	ble	3a84c <GetDataSlab+0x19268>
   24ccc:	ldr	r3, [fp]
   24cd0:	cmp	r3, #0
   24cd4:	movgt	r3, #0
   24cd8:	bgt	24c84 <GetDataSlab+0x36a0>
   24cdc:	b	24cac <GetDataSlab+0x36c8>
   24ce0:	mla	r3, r2, r1, ip
   24ce4:	ldr	r2, [sp, #8]
   24ce8:	add	r1, r2, r3
   24cec:	cmp	lr, #0
   24cf0:	movle	r3, #0
   24cf4:	ble	251fc <GetDataSlab+0x3c18>
   24cf8:	mov	r0, #0
   24cfc:	b	24d48 <GetDataSlab+0x3764>
   24d00:	ldr	r2, [sl]
   24d04:	mul	r2, r2, r3
   24d08:	ldrb	r2, [r1, r2]
   24d0c:	ldr	ip, [sp, #4]
   24d10:	strb	r2, [ip], #1
   24d14:	str	ip, [sp, #4]
   24d18:	add	r3, r3, #1
   24d1c:	ldr	r2, [fp]
   24d20:	cmp	r2, r3
   24d24:	bgt	24d00 <GetDataSlab+0x371c>
   24d28:	ldr	r3, [sl, #4]
   24d2c:	ldr	r2, [sp, #192]	; 0xc0
   24d30:	ldr	r2, [r2]
   24d34:	mla	r1, r2, r3, r1
   24d38:	add	r0, r0, #1
   24d3c:	ldr	r3, [fp, #4]
   24d40:	cmp	r3, r0
   24d44:	ble	3a854 <GetDataSlab+0x19270>
   24d48:	ldr	r3, [fp]
   24d4c:	cmp	r3, #0
   24d50:	movgt	r3, #0
   24d54:	bgt	24d00 <GetDataSlab+0x371c>
   24d58:	b	24d28 <GetDataSlab+0x3744>
   24d5c:	cmp	r8, #12
   24d60:	beq	24d90 <GetDataSlab+0x37ac>
   24d64:	cmp	r8, #13
   24d68:	movne	r3, #1
   24d6c:	bne	251fc <GetDataSlab+0x3c18>
   24d70:	mla	r3, r2, r1, ip
   24d74:	ldr	r2, [sp, #8]
   24d78:	add	r1, r2, r3, lsl #3
   24d7c:	cmp	lr, #0
   24d80:	movle	r3, #0
   24d84:	ble	251fc <GetDataSlab+0x3c18>
   24d88:	mov	r0, #0
   24d8c:	b	24e5c <GetDataSlab+0x3878>
   24d90:	mla	r3, r2, r1, ip
   24d94:	ldr	r2, [sp, #8]
   24d98:	add	r1, r2, r3, lsl #3
   24d9c:	cmp	lr, #0
   24da0:	movgt	r0, #0
   24da4:	bgt	24dfc <GetDataSlab+0x3818>
   24da8:	mov	r3, #0
   24dac:	b	251fc <GetDataSlab+0x3c18>
   24db0:	ldr	r2, [sl]
   24db4:	mul	r2, r2, r3
   24db8:	ldr	r2, [r1, r2, lsl #3]
   24dbc:	ldr	ip, [sp, #4]
   24dc0:	strb	r2, [ip], #1
   24dc4:	str	ip, [sp, #4]
   24dc8:	add	r3, r3, #1
   24dcc:	ldr	r2, [fp]
   24dd0:	cmp	r2, r3
   24dd4:	bgt	24db0 <GetDataSlab+0x37cc>
   24dd8:	ldr	r3, [sl, #4]
   24ddc:	ldr	r2, [sp, #192]	; 0xc0
   24de0:	ldr	r2, [r2]
   24de4:	mul	r3, r2, r3
   24de8:	add	r1, r1, r3, lsl #3
   24dec:	add	r0, r0, #1
   24df0:	ldr	r3, [fp, #4]
   24df4:	cmp	r3, r0
   24df8:	ble	24da8 <GetDataSlab+0x37c4>
   24dfc:	ldr	r3, [fp]
   24e00:	cmp	r3, #0
   24e04:	movgt	r3, #0
   24e08:	bgt	24db0 <GetDataSlab+0x37cc>
   24e0c:	b	24dd8 <GetDataSlab+0x37f4>
   24e10:	ldr	r2, [sl]
   24e14:	mul	r2, r2, r3
   24e18:	ldr	r2, [r1, r2, lsl #3]
   24e1c:	ldr	ip, [sp, #4]
   24e20:	strb	r2, [ip], #1
   24e24:	str	ip, [sp, #4]
   24e28:	add	r3, r3, #1
   24e2c:	ldr	r2, [fp]
   24e30:	cmp	r2, r3
   24e34:	bgt	24e10 <GetDataSlab+0x382c>
   24e38:	ldr	r3, [sl, #4]
   24e3c:	ldr	r2, [sp, #192]	; 0xc0
   24e40:	ldr	r2, [r2]
   24e44:	mul	r3, r2, r3
   24e48:	add	r1, r1, r3, lsl #3
   24e4c:	add	r0, r0, #1
   24e50:	ldr	r3, [fp, #4]
   24e54:	cmp	r3, r0
   24e58:	ble	3a85c <GetDataSlab+0x19278>
   24e5c:	ldr	r3, [fp]
   24e60:	cmp	r3, #0
   24e64:	movgt	r3, #0
   24e68:	bgt	24e10 <GetDataSlab+0x382c>
   24e6c:	b	24e38 <GetDataSlab+0x3854>
   24e70:	sub	r3, r8, #1
   24e74:	cmp	r3, #8
   24e78:	addls	pc, pc, r3, lsl #2
   24e7c:	b	26a04 <GetDataSlab+0x5420>
   24e80:	b	26328 <GetDataSlab+0x4d44>
   24e84:	b	26694 <GetDataSlab+0x50b0>
   24e88:	b	25c50 <GetDataSlab+0x466c>
   24e8c:	b	25fbc <GetDataSlab+0x49d8>
   24e90:	b	25580 <GetDataSlab+0x3f9c>
   24e94:	b	258e8 <GetDataSlab+0x4304>
   24e98:	b	2521c <GetDataSlab+0x3c38>
   24e9c:	b	26a04 <GetDataSlab+0x5420>
   24ea0:	b	24ea4 <GetDataSlab+0x38c0>
   24ea4:	ldr	r3, [sl]
   24ea8:	str	r3, [sp, #28]
   24eac:	sub	r3, r3, #1
   24eb0:	str	r3, [sp, #32]
   24eb4:	ldr	r3, [sp, #192]	; 0xc0
   24eb8:	ldr	r3, [r3]
   24ebc:	str	r3, [sp, #112]	; 0x70
   24ec0:	ldr	r3, [fp]
   24ec4:	str	r3, [sp, #16]
   24ec8:	cmp	r9, #1
   24ecc:	ble	24ef0 <GetDataSlab+0x390c>
   24ed0:	str	sl, [sp, #20]
   24ed4:	add	r8, sp, #36	; 0x24
   24ed8:	ldr	r5, [sp, #192]	; 0xc0
   24edc:	add	r6, sp, #112	; 0x70
   24ee0:	str	r5, [sp, #12]
   24ee4:	mov	lr, #1
   24ee8:	mov	r4, #0
   24eec:	b	3b0f0 <GetDataSlab+0x19b0c>
   24ef0:	mov	r4, #0
   24ef4:	b	3b188 <GetDataSlab+0x19ba4>
   24ef8:	ldr	r3, [sp, #16]
   24efc:	cmp	r3, #0
   24f00:	ble	3a2bc <GetDataSlab+0x18cd8>
   24f04:	mov	r3, #0
   24f08:	str	r3, [sp, #12]
   24f0c:	mov	r8, r3
   24f10:	b	24fd0 <GetDataSlab+0x39ec>
   24f14:	ldr	r3, [sp, #196]	; 0xc4
   24f18:	ldr	r3, [r3, r0, lsl #2]
   24f1c:	cmp	r3, #0
   24f20:	beq	24f34 <GetDataSlab+0x3950>
   24f24:	ldr	r2, [r5, #-8]
   24f28:	mul	r3, r2, r3
   24f2c:	add	lr, lr, r3, lsl #3
   24f30:	add	r4, r4, r3
   24f34:	add	r0, r0, #1
   24f38:	cmp	r9, r0
   24f3c:	beq	24fb4 <GetDataSlab+0x39d0>
   24f40:	ldr	r3, [ip]
   24f44:	add	r1, r3, #1
   24f48:	str	r1, [ip]
   24f4c:	ldr	r2, [r7, #4]!
   24f50:	sdiv	r3, r1, r2
   24f54:	mls	r3, r2, r3, r1
   24f58:	cmp	r3, #0
   24f5c:	bne	24fa0 <GetDataSlab+0x39bc>
   24f60:	str	r8, [ip], #4
   24f64:	ldr	r2, [r5], #4
   24f68:	sdiv	r3, r4, r2
   24f6c:	mls	r3, r2, r3, r4
   24f70:	cmp	r3, #0
   24f74:	beq	24f14 <GetDataSlab+0x3930>
   24f78:	ldr	r1, [r5, #-8]
   24f7c:	ldr	sl, [sp, #196]	; 0xc4
   24f80:	ldr	sl, [sl, r0, lsl #2]
   24f84:	str	sl, [sp, #8]
   24f88:	sub	r3, r2, r3
   24f8c:	mla	r3, sl, r1, r3
   24f90:	add	lr, lr, r3, lsl #3
   24f94:	add	r4, r4, r3
   24f98:	b	24f34 <GetDataSlab+0x3950>
   24f9c:	ldr	r0, [sp, #28]
   24fa0:	add	r3, sp, #152	; 0x98
   24fa4:	add	r3, r3, r0, lsl #2
   24fa8:	ldr	r3, [r3, #-120]	; 0xffffff88
   24fac:	add	r4, r4, r3
   24fb0:	add	lr, lr, r3, lsl #3
   24fb4:	ldr	r3, [sp, #12]
   24fb8:	add	r3, r3, r6
   24fbc:	str	r3, [sp, #12]
   24fc0:	ldr	r3, [sp, #16]
   24fc4:	ldr	r2, [sp, #12]
   24fc8:	cmp	r2, r3
   24fcc:	bge	25074 <GetDataSlab+0x3a90>
   24fd0:	ldr	r3, [sp, #196]	; 0xc4
   24fd4:	ldr	r3, [r3]
   24fd8:	cmp	r3, #0
   24fdc:	addne	lr, lr, r3, lsl #3
   24fe0:	addne	r4, r4, r3
   24fe4:	ldr	r6, [fp]
   24fe8:	cmp	r6, #0
   24fec:	ble	2501c <GetDataSlab+0x3a38>
   24ff0:	mov	ip, lr
   24ff4:	ldr	r3, [sp, #4]
   24ff8:	ldr	r2, [sp, #12]
   24ffc:	add	r0, r3, r2, lsl #3
   25000:	mov	r1, #0
   25004:	ldrd	r2, [ip], #8
   25008:	strd	r2, [r0], #8
   2500c:	add	r1, r1, #1
   25010:	ldr	r6, [fp]
   25014:	cmp	r6, r1
   25018:	bgt	25004 <GetDataSlab+0x3a20>
   2501c:	ldr	r3, [sp, #192]	; 0xc0
   25020:	ldr	r2, [r3]
   25024:	ldr	r3, [sp, #196]	; 0xc4
   25028:	ldr	r3, [r3]
   2502c:	sub	r3, r2, r3
   25030:	add	r4, r4, r3
   25034:	add	lr, lr, r3, lsl #3
   25038:	cmp	r9, #1
   2503c:	ble	24fb4 <GetDataSlab+0x39d0>
   25040:	ldr	r3, [sp, #76]	; 0x4c
   25044:	add	r3, r3, #1
   25048:	str	r3, [sp, #76]	; 0x4c
   2504c:	ldr	r1, [fp, #4]
   25050:	sdiv	r2, r3, r1
   25054:	mls	r3, r1, r2, r3
   25058:	cmp	r3, #0
   2505c:	bne	24f9c <GetDataSlab+0x39b8>
   25060:	add	ip, sp, #76	; 0x4c
   25064:	add	r7, fp, #4
   25068:	add	r5, sp, #116	; 0x74
   2506c:	ldr	r0, [sp, #28]
   25070:	b	24f60 <GetDataSlab+0x397c>
   25074:	mov	r3, #0
   25078:	b	251fc <GetDataSlab+0x3c18>
   2507c:	ldr	r3, [sp, #196]	; 0xc4
   25080:	ldr	r2, [r3, r0, lsl #2]
   25084:	cmp	r2, #0
   25088:	beq	2509c <GetDataSlab+0x3ab8>
   2508c:	ldr	r3, [r5, #-4]
   25090:	mul	r3, r3, r2
   25094:	add	lr, lr, r3, lsl #3
   25098:	add	r4, r4, r3
   2509c:	add	r0, r0, #1
   250a0:	cmp	r9, r0
   250a4:	beq	2512c <GetDataSlab+0x3b48>
   250a8:	ldr	r3, [ip]
   250ac:	add	r1, r3, #1
   250b0:	str	r1, [ip]
   250b4:	ldr	r2, [r7, #4]!
   250b8:	sdiv	r3, r1, r2
   250bc:	mls	r3, r2, r3, r1
   250c0:	cmp	r3, #0
   250c4:	bne	25118 <GetDataSlab+0x3b34>
   250c8:	str	r8, [ip], #4
   250cc:	add	r5, r5, #4
   250d0:	ldr	r2, [r5]
   250d4:	sdiv	r3, r4, r2
   250d8:	mls	r3, r2, r3, r4
   250dc:	cmp	r3, #0
   250e0:	beq	2507c <GetDataSlab+0x3a98>
   250e4:	ldr	r1, [r5, #-4]
   250e8:	str	r1, [sp, #8]
   250ec:	ldr	r1, [sp, #196]	; 0xc4
   250f0:	ldr	r1, [r1, r0, lsl #2]
   250f4:	str	r1, [sp, #12]
   250f8:	sub	r3, r2, r3
   250fc:	mov	r2, r1
   25100:	ldr	r1, [sp, #8]
   25104:	mla	r3, r2, r1, r3
   25108:	add	lr, lr, r3, lsl #3
   2510c:	add	r4, r4, r3
   25110:	b	2509c <GetDataSlab+0x3ab8>
   25114:	mov	r0, #1
   25118:	add	r3, sp, #152	; 0x98
   2511c:	add	r3, r3, r0, lsl #2
   25120:	ldr	r3, [r3, #-120]	; 0xffffff88
   25124:	add	r4, r4, r3
   25128:	add	lr, lr, r3, lsl #3
   2512c:	ldr	r3, [sp, #20]
   25130:	add	r3, r3, r6
   25134:	str	r3, [sp, #20]
   25138:	ldr	r2, [sp, #16]
   2513c:	cmp	r3, r2
   25140:	bge	251f8 <GetDataSlab+0x3c14>
   25144:	ldr	r3, [sp, #196]	; 0xc4
   25148:	ldr	r3, [r3]
   2514c:	cmp	r3, #0
   25150:	addne	lr, lr, r3, lsl #3
   25154:	addne	r4, r4, r3
   25158:	ldr	r6, [fp]
   2515c:	cmp	r6, #0
   25160:	ble	25198 <GetDataSlab+0x3bb4>
   25164:	ldr	r3, [sp, #4]
   25168:	ldr	r2, [sp, #20]
   2516c:	add	r2, r3, r2, lsl #3
   25170:	mov	r3, #0
   25174:	ldrd	r0, [lr]
   25178:	strd	r0, [r2], #8
   2517c:	ldr	r1, [sl]
   25180:	add	lr, lr, r1, lsl #3
   25184:	add	r4, r4, r1
   25188:	add	r3, r3, #1
   2518c:	ldr	r6, [fp]
   25190:	cmp	r6, r3
   25194:	bgt	25174 <GetDataSlab+0x3b90>
   25198:	ldr	r3, [sp, #192]	; 0xc0
   2519c:	ldr	r2, [r3]
   251a0:	ldr	r3, [sp, #196]	; 0xc4
   251a4:	ldr	r3, [r3]
   251a8:	sub	r3, r2, r3
   251ac:	ldr	r2, [sl]
   251b0:	mls	r3, r2, r6, r3
   251b4:	add	r4, r4, r3
   251b8:	add	lr, lr, r3, lsl #3
   251bc:	cmp	r9, #1
   251c0:	ble	2512c <GetDataSlab+0x3b48>
   251c4:	ldr	r3, [sp, #76]	; 0x4c
   251c8:	add	r3, r3, #1
   251cc:	str	r3, [sp, #76]	; 0x4c
   251d0:	ldr	r1, [fp, #4]
   251d4:	sdiv	r2, r3, r1
   251d8:	mls	r3, r1, r2, r3
   251dc:	cmp	r3, #0
   251e0:	bne	25114 <GetDataSlab+0x3b30>
   251e4:	add	ip, sp, #76	; 0x4c
   251e8:	add	r7, fp, #4
   251ec:	add	r5, sp, #112	; 0x70
   251f0:	mov	r0, #1
   251f4:	b	250c8 <GetDataSlab+0x3ae4>
   251f8:	mov	r3, #0
   251fc:	mov	r0, r3
   25200:	add	sp, sp, #156	; 0x9c
   25204:	ldrd	r4, [sp]
   25208:	ldrd	r6, [sp, #8]
   2520c:	ldrd	r8, [sp, #16]
   25210:	ldrd	sl, [sp, #24]
   25214:	add	sp, sp, #32
   25218:	pop	{pc}		; (ldr pc, [sp], #4)
   2521c:	ldr	r3, [sl]
   25220:	str	r3, [sp, #28]
   25224:	sub	r3, r3, #1
   25228:	str	r3, [sp, #32]
   2522c:	ldr	r3, [sp, #192]	; 0xc0
   25230:	ldr	r3, [r3]
   25234:	str	r3, [sp, #112]	; 0x70
   25238:	ldr	r3, [fp]
   2523c:	str	r3, [sp, #16]
   25240:	cmp	r9, #1
   25244:	ble	25268 <GetDataSlab+0x3c84>
   25248:	str	sl, [sp, #20]
   2524c:	add	r8, sp, #36	; 0x24
   25250:	ldr	r5, [sp, #192]	; 0xc0
   25254:	add	r6, sp, #112	; 0x70
   25258:	str	r5, [sp, #12]
   2525c:	mov	r4, #1
   25260:	mov	lr, #0
   25264:	b	3b000 <GetDataSlab+0x19a1c>
   25268:	mov	lr, #0
   2526c:	b	3b098 <GetDataSlab+0x19ab4>
   25270:	ldr	r3, [sp, #16]
   25274:	cmp	r3, #0
   25278:	ble	3a2c4 <GetDataSlab+0x18ce0>
   2527c:	mov	r3, #0
   25280:	str	r3, [sp, #12]
   25284:	mov	r8, r3
   25288:	b	25348 <GetDataSlab+0x3d64>
   2528c:	ldr	r3, [sp, #196]	; 0xc4
   25290:	ldr	r3, [r3, r0, lsl #2]
   25294:	cmp	r3, #0
   25298:	beq	252ac <GetDataSlab+0x3cc8>
   2529c:	ldr	r2, [r5, #-8]
   252a0:	mul	r3, r2, r3
   252a4:	add	ip, ip, r3, lsl #2
   252a8:	add	lr, lr, r3
   252ac:	add	r0, r0, #1
   252b0:	cmp	r9, r0
   252b4:	beq	2532c <GetDataSlab+0x3d48>
   252b8:	ldr	r3, [r4]
   252bc:	add	r1, r3, #1
   252c0:	str	r1, [r4]
   252c4:	ldr	r2, [r7, #4]!
   252c8:	sdiv	r3, r1, r2
   252cc:	mls	r3, r2, r3, r1
   252d0:	cmp	r3, #0
   252d4:	bne	25318 <GetDataSlab+0x3d34>
   252d8:	str	r8, [r4], #4
   252dc:	ldr	r2, [r5], #4
   252e0:	sdiv	r3, lr, r2
   252e4:	mls	r3, r2, r3, lr
   252e8:	cmp	r3, #0
   252ec:	beq	2528c <GetDataSlab+0x3ca8>
   252f0:	ldr	r1, [r5, #-8]
   252f4:	ldr	sl, [sp, #196]	; 0xc4
   252f8:	ldr	sl, [sl, r0, lsl #2]
   252fc:	str	sl, [sp, #8]
   25300:	sub	r3, r2, r3
   25304:	mla	r3, sl, r1, r3
   25308:	add	ip, ip, r3, lsl #2
   2530c:	add	lr, lr, r3
   25310:	b	252ac <GetDataSlab+0x3cc8>
   25314:	ldr	r0, [sp, #28]
   25318:	add	r3, sp, #152	; 0x98
   2531c:	add	r3, r3, r0, lsl #2
   25320:	ldr	r3, [r3, #-120]	; 0xffffff88
   25324:	add	lr, lr, r3
   25328:	add	ip, ip, r3, lsl #2
   2532c:	ldr	r3, [sp, #12]
   25330:	add	r3, r3, r6
   25334:	str	r3, [sp, #12]
   25338:	ldr	r3, [sp, #16]
   2533c:	ldr	r2, [sp, #12]
   25340:	cmp	r2, r3
   25344:	bge	253f0 <GetDataSlab+0x3e0c>
   25348:	ldr	r3, [sp, #196]	; 0xc4
   2534c:	ldr	r3, [r3]
   25350:	cmp	r3, #0
   25354:	addne	ip, ip, r3, lsl #2
   25358:	addne	lr, lr, r3
   2535c:	ldr	r6, [fp]
   25360:	cmp	r6, #0
   25364:	ble	25398 <GetDataSlab+0x3db4>
   25368:	mov	r1, ip
   2536c:	ldr	r3, [sp, #4]
   25370:	ldr	r2, [sp, #12]
   25374:	add	r2, r3, r2, lsl #3
   25378:	mov	r3, #0
   2537c:	vldmia	r1!, {s15}
   25380:	vcvt.f64.f32	d7, s15
   25384:	vstmia	r2!, {d7}
   25388:	add	r3, r3, #1
   2538c:	ldr	r6, [fp]
   25390:	cmp	r6, r3
   25394:	bgt	2537c <GetDataSlab+0x3d98>
   25398:	ldr	r3, [sp, #192]	; 0xc0
   2539c:	ldr	r2, [r3]
   253a0:	ldr	r3, [sp, #196]	; 0xc4
   253a4:	ldr	r3, [r3]
   253a8:	sub	r3, r2, r3
   253ac:	add	lr, lr, r3
   253b0:	add	ip, ip, r3, lsl #2
   253b4:	cmp	r9, #1
   253b8:	ble	2532c <GetDataSlab+0x3d48>
   253bc:	ldr	r3, [sp, #76]	; 0x4c
   253c0:	add	r3, r3, #1
   253c4:	str	r3, [sp, #76]	; 0x4c
   253c8:	ldr	r1, [fp, #4]
   253cc:	sdiv	r2, r3, r1
   253d0:	mls	r3, r1, r2, r3
   253d4:	cmp	r3, #0
   253d8:	bne	25314 <GetDataSlab+0x3d30>
   253dc:	add	r4, sp, #76	; 0x4c
   253e0:	add	r7, fp, #4
   253e4:	add	r5, sp, #116	; 0x74
   253e8:	ldr	r0, [sp, #28]
   253ec:	b	252d8 <GetDataSlab+0x3cf4>
   253f0:	mov	r3, #0
   253f4:	b	251fc <GetDataSlab+0x3c18>
   253f8:	ldr	r3, [sp, #196]	; 0xc4
   253fc:	ldr	r2, [r3, r0, lsl #2]
   25400:	cmp	r2, #0
   25404:	beq	25418 <GetDataSlab+0x3e34>
   25408:	ldr	r3, [r5, #-4]
   2540c:	mul	r3, r3, r2
   25410:	add	ip, ip, r3, lsl #2
   25414:	add	lr, lr, r3
   25418:	add	r0, r0, #1
   2541c:	cmp	r9, r0
   25420:	beq	254a8 <GetDataSlab+0x3ec4>
   25424:	ldr	r3, [r4]
   25428:	add	r1, r3, #1
   2542c:	str	r1, [r4]
   25430:	ldr	r2, [r7, #4]!
   25434:	sdiv	r3, r1, r2
   25438:	mls	r3, r2, r3, r1
   2543c:	cmp	r3, #0
   25440:	bne	25494 <GetDataSlab+0x3eb0>
   25444:	str	r8, [r4], #4
   25448:	add	r5, r5, #4
   2544c:	ldr	r2, [r5]
   25450:	sdiv	r3, lr, r2
   25454:	mls	r3, r2, r3, lr
   25458:	cmp	r3, #0
   2545c:	beq	253f8 <GetDataSlab+0x3e14>
   25460:	ldr	r1, [r5, #-4]
   25464:	str	r1, [sp, #8]
   25468:	ldr	r1, [sp, #196]	; 0xc4
   2546c:	ldr	r1, [r1, r0, lsl #2]
   25470:	str	r1, [sp, #12]
   25474:	sub	r3, r2, r3
   25478:	mov	r2, r1
   2547c:	ldr	r1, [sp, #8]
   25480:	mla	r3, r2, r1, r3
   25484:	add	ip, ip, r3, lsl #2
   25488:	add	lr, lr, r3
   2548c:	b	25418 <GetDataSlab+0x3e34>
   25490:	mov	r0, #1
   25494:	add	r3, sp, #152	; 0x98
   25498:	add	r3, r3, r0, lsl #2
   2549c:	ldr	r3, [r3, #-120]	; 0xffffff88
   254a0:	add	lr, lr, r3
   254a4:	add	ip, ip, r3, lsl #2
   254a8:	ldr	r3, [sp, #20]
   254ac:	add	r3, r3, r6
   254b0:	str	r3, [sp, #20]
   254b4:	ldr	r2, [sp, #16]
   254b8:	cmp	r3, r2
   254bc:	bge	25578 <GetDataSlab+0x3f94>
   254c0:	ldr	r3, [sp, #196]	; 0xc4
   254c4:	ldr	r3, [r3]
   254c8:	cmp	r3, #0
   254cc:	addne	ip, ip, r3, lsl #2
   254d0:	addne	lr, lr, r3
   254d4:	ldr	r6, [fp]
   254d8:	cmp	r6, #0
   254dc:	ble	25518 <GetDataSlab+0x3f34>
   254e0:	ldr	r3, [sp, #4]
   254e4:	ldr	r2, [sp, #20]
   254e8:	add	r2, r3, r2, lsl #3
   254ec:	mov	r3, #0
   254f0:	vldr	s15, [ip]
   254f4:	vcvt.f64.f32	d7, s15
   254f8:	vstmia	r2!, {d7}
   254fc:	ldr	r1, [sl]
   25500:	add	ip, ip, r1, lsl #2
   25504:	add	lr, lr, r1
   25508:	add	r3, r3, #1
   2550c:	ldr	r6, [fp]
   25510:	cmp	r6, r3
   25514:	bgt	254f0 <GetDataSlab+0x3f0c>
   25518:	ldr	r3, [sp, #192]	; 0xc0
   2551c:	ldr	r2, [r3]
   25520:	ldr	r3, [sp, #196]	; 0xc4
   25524:	ldr	r3, [r3]
   25528:	sub	r3, r2, r3
   2552c:	ldr	r2, [sl]
   25530:	mls	r3, r2, r6, r3
   25534:	add	lr, lr, r3
   25538:	add	ip, ip, r3, lsl #2
   2553c:	cmp	r9, #1
   25540:	ble	254a8 <GetDataSlab+0x3ec4>
   25544:	ldr	r3, [sp, #76]	; 0x4c
   25548:	add	r3, r3, #1
   2554c:	str	r3, [sp, #76]	; 0x4c
   25550:	ldr	r1, [fp, #4]
   25554:	sdiv	r2, r3, r1
   25558:	mls	r3, r1, r2, r3
   2555c:	cmp	r3, #0
   25560:	bne	25490 <GetDataSlab+0x3eac>
   25564:	add	r4, sp, #76	; 0x4c
   25568:	add	r7, fp, #4
   2556c:	add	r5, sp, #112	; 0x70
   25570:	mov	r0, #1
   25574:	b	25444 <GetDataSlab+0x3e60>
   25578:	mov	r3, #0
   2557c:	b	251fc <GetDataSlab+0x3c18>
   25580:	ldr	r3, [sl]
   25584:	str	r3, [sp, #28]
   25588:	sub	r3, r3, #1
   2558c:	str	r3, [sp, #32]
   25590:	ldr	r3, [sp, #192]	; 0xc0
   25594:	ldr	r3, [r3]
   25598:	str	r3, [sp, #112]	; 0x70
   2559c:	ldr	r3, [fp]
   255a0:	str	r3, [sp, #16]
   255a4:	cmp	r9, #1
   255a8:	ble	255cc <GetDataSlab+0x3fe8>
   255ac:	str	sl, [sp, #20]
   255b0:	add	r8, sp, #36	; 0x24
   255b4:	ldr	r5, [sp, #192]	; 0xc0
   255b8:	add	r6, sp, #112	; 0x70
   255bc:	str	r5, [sp, #12]
   255c0:	mov	r4, #1
   255c4:	mov	lr, #0
   255c8:	b	3ae20 <GetDataSlab+0x1983c>
   255cc:	mov	lr, #0
   255d0:	b	3aeb8 <GetDataSlab+0x198d4>
   255d4:	ldr	r3, [sp, #16]
   255d8:	cmp	r3, #0
   255dc:	ble	3a2cc <GetDataSlab+0x18ce8>
   255e0:	mov	r3, #0
   255e4:	str	r3, [sp, #12]
   255e8:	mov	r8, r3
   255ec:	b	256ac <GetDataSlab+0x40c8>
   255f0:	ldr	r3, [sp, #196]	; 0xc4
   255f4:	ldr	r3, [r3, r0, lsl #2]
   255f8:	cmp	r3, #0
   255fc:	beq	25610 <GetDataSlab+0x402c>
   25600:	ldr	r2, [r5, #-8]
   25604:	mul	r3, r2, r3
   25608:	add	ip, ip, r3, lsl #2
   2560c:	add	lr, lr, r3
   25610:	add	r0, r0, #1
   25614:	cmp	r9, r0
   25618:	beq	25690 <GetDataSlab+0x40ac>
   2561c:	ldr	r3, [r4]
   25620:	add	r1, r3, #1
   25624:	str	r1, [r4]
   25628:	ldr	r2, [r7, #4]!
   2562c:	sdiv	r3, r1, r2
   25630:	mls	r3, r2, r3, r1
   25634:	cmp	r3, #0
   25638:	bne	2567c <GetDataSlab+0x4098>
   2563c:	str	r8, [r4], #4
   25640:	ldr	r2, [r5], #4
   25644:	sdiv	r3, lr, r2
   25648:	mls	r3, r2, r3, lr
   2564c:	cmp	r3, #0
   25650:	beq	255f0 <GetDataSlab+0x400c>
   25654:	ldr	r1, [r5, #-8]
   25658:	ldr	sl, [sp, #196]	; 0xc4
   2565c:	ldr	sl, [sl, r0, lsl #2]
   25660:	str	sl, [sp, #8]
   25664:	sub	r3, r2, r3
   25668:	mla	r3, sl, r1, r3
   2566c:	add	ip, ip, r3, lsl #2
   25670:	add	lr, lr, r3
   25674:	b	25610 <GetDataSlab+0x402c>
   25678:	ldr	r0, [sp, #28]
   2567c:	add	r3, sp, #152	; 0x98
   25680:	add	r3, r3, r0, lsl #2
   25684:	ldr	r3, [r3, #-120]	; 0xffffff88
   25688:	add	lr, lr, r3
   2568c:	add	ip, ip, r3, lsl #2
   25690:	ldr	r3, [sp, #12]
   25694:	add	r3, r3, r6
   25698:	str	r3, [sp, #12]
   2569c:	ldr	r3, [sp, #16]
   256a0:	ldr	r2, [sp, #12]
   256a4:	cmp	r2, r3
   256a8:	bge	25758 <GetDataSlab+0x4174>
   256ac:	ldr	r3, [sp, #196]	; 0xc4
   256b0:	ldr	r3, [r3]
   256b4:	cmp	r3, #0
   256b8:	addne	ip, ip, r3, lsl #2
   256bc:	addne	lr, lr, r3
   256c0:	ldr	r6, [fp]
   256c4:	cmp	r6, #0
   256c8:	ble	25700 <GetDataSlab+0x411c>
   256cc:	sub	r1, ip, #4
   256d0:	ldr	r3, [sp, #4]
   256d4:	ldr	r2, [sp, #12]
   256d8:	add	r2, r3, r2, lsl #3
   256dc:	mov	r3, #0
   256e0:	ldr	r0, [r1, #4]!
   256e4:	vmov	s15, r0
   256e8:	vcvt.f64.s32	d7, s15
   256ec:	vstmia	r2!, {d7}
   256f0:	add	r3, r3, #1
   256f4:	ldr	r6, [fp]
   256f8:	cmp	r6, r3
   256fc:	bgt	256e0 <GetDataSlab+0x40fc>
   25700:	ldr	r3, [sp, #192]	; 0xc0
   25704:	ldr	r2, [r3]
   25708:	ldr	r3, [sp, #196]	; 0xc4
   2570c:	ldr	r3, [r3]
   25710:	sub	r3, r2, r3
   25714:	add	lr, lr, r3
   25718:	add	ip, ip, r3, lsl #2
   2571c:	cmp	r9, #1
   25720:	ble	25690 <GetDataSlab+0x40ac>
   25724:	ldr	r3, [sp, #76]	; 0x4c
   25728:	add	r3, r3, #1
   2572c:	str	r3, [sp, #76]	; 0x4c
   25730:	ldr	r1, [fp, #4]
   25734:	sdiv	r2, r3, r1
   25738:	mls	r3, r1, r2, r3
   2573c:	cmp	r3, #0
   25740:	bne	25678 <GetDataSlab+0x4094>
   25744:	add	r4, sp, #76	; 0x4c
   25748:	add	r7, fp, #4
   2574c:	add	r5, sp, #116	; 0x74
   25750:	ldr	r0, [sp, #28]
   25754:	b	2563c <GetDataSlab+0x4058>
   25758:	mov	r3, #0
   2575c:	b	251fc <GetDataSlab+0x3c18>
   25760:	ldr	r3, [sp, #196]	; 0xc4
   25764:	ldr	r2, [r3, r0, lsl #2]
   25768:	cmp	r2, #0
   2576c:	beq	25780 <GetDataSlab+0x419c>
   25770:	ldr	r3, [r5, #-4]
   25774:	mul	r3, r3, r2
   25778:	add	ip, ip, r3, lsl #2
   2577c:	add	lr, lr, r3
   25780:	add	r0, r0, #1
   25784:	cmp	r9, r0
   25788:	beq	25810 <GetDataSlab+0x422c>
   2578c:	ldr	r3, [r4]
   25790:	add	r1, r3, #1
   25794:	str	r1, [r4]
   25798:	ldr	r2, [r7, #4]!
   2579c:	sdiv	r3, r1, r2
   257a0:	mls	r3, r2, r3, r1
   257a4:	cmp	r3, #0
   257a8:	bne	257fc <GetDataSlab+0x4218>
   257ac:	str	r8, [r4], #4
   257b0:	add	r5, r5, #4
   257b4:	ldr	r2, [r5]
   257b8:	sdiv	r3, lr, r2
   257bc:	mls	r3, r2, r3, lr
   257c0:	cmp	r3, #0
   257c4:	beq	25760 <GetDataSlab+0x417c>
   257c8:	ldr	r1, [r5, #-4]
   257cc:	str	r1, [sp, #8]
   257d0:	ldr	r1, [sp, #196]	; 0xc4
   257d4:	ldr	r1, [r1, r0, lsl #2]
   257d8:	str	r1, [sp, #12]
   257dc:	sub	r3, r2, r3
   257e0:	mov	r2, r1
   257e4:	ldr	r1, [sp, #8]
   257e8:	mla	r3, r2, r1, r3
   257ec:	add	ip, ip, r3, lsl #2
   257f0:	add	lr, lr, r3
   257f4:	b	25780 <GetDataSlab+0x419c>
   257f8:	mov	r0, #1
   257fc:	add	r3, sp, #152	; 0x98
   25800:	add	r3, r3, r0, lsl #2
   25804:	ldr	r3, [r3, #-120]	; 0xffffff88
   25808:	add	lr, lr, r3
   2580c:	add	ip, ip, r3, lsl #2
   25810:	ldr	r3, [sp, #20]
   25814:	add	r3, r3, r6
   25818:	str	r3, [sp, #20]
   2581c:	ldr	r2, [sp, #16]
   25820:	cmp	r3, r2
   25824:	bge	258e0 <GetDataSlab+0x42fc>
   25828:	ldr	r3, [sp, #196]	; 0xc4
   2582c:	ldr	r3, [r3]
   25830:	cmp	r3, #0
   25834:	addne	ip, ip, r3, lsl #2
   25838:	addne	lr, lr, r3
   2583c:	ldr	r6, [fp]
   25840:	cmp	r6, #0
   25844:	ble	25880 <GetDataSlab+0x429c>
   25848:	ldr	r3, [sp, #4]
   2584c:	ldr	r2, [sp, #20]
   25850:	add	r2, r3, r2, lsl #3
   25854:	mov	r3, #0
   25858:	vldr	s15, [ip]
   2585c:	vcvt.f64.s32	d7, s15
   25860:	vstmia	r2!, {d7}
   25864:	ldr	r1, [sl]
   25868:	add	ip, ip, r1, lsl #2
   2586c:	add	lr, lr, r1
   25870:	add	r3, r3, #1
   25874:	ldr	r6, [fp]
   25878:	cmp	r6, r3
   2587c:	bgt	25858 <GetDataSlab+0x4274>
   25880:	ldr	r3, [sp, #192]	; 0xc0
   25884:	ldr	r2, [r3]
   25888:	ldr	r3, [sp, #196]	; 0xc4
   2588c:	ldr	r3, [r3]
   25890:	sub	r3, r2, r3
   25894:	ldr	r2, [sl]
   25898:	mls	r3, r2, r6, r3
   2589c:	add	lr, lr, r3
   258a0:	add	ip, ip, r3, lsl #2
   258a4:	cmp	r9, #1
   258a8:	ble	25810 <GetDataSlab+0x422c>
   258ac:	ldr	r3, [sp, #76]	; 0x4c
   258b0:	add	r3, r3, #1
   258b4:	str	r3, [sp, #76]	; 0x4c
   258b8:	ldr	r1, [fp, #4]
   258bc:	sdiv	r2, r3, r1
   258c0:	mls	r3, r1, r2, r3
   258c4:	cmp	r3, #0
   258c8:	bne	257f8 <GetDataSlab+0x4214>
   258cc:	add	r4, sp, #76	; 0x4c
   258d0:	add	r7, fp, #4
   258d4:	add	r5, sp, #112	; 0x70
   258d8:	mov	r0, #1
   258dc:	b	257ac <GetDataSlab+0x41c8>
   258e0:	mov	r3, #0
   258e4:	b	251fc <GetDataSlab+0x3c18>
   258e8:	ldr	r3, [sl]
   258ec:	str	r3, [sp, #28]
   258f0:	sub	r3, r3, #1
   258f4:	str	r3, [sp, #32]
   258f8:	ldr	r3, [sp, #192]	; 0xc0
   258fc:	ldr	r3, [r3]
   25900:	str	r3, [sp, #112]	; 0x70
   25904:	ldr	r3, [fp]
   25908:	str	r3, [sp, #16]
   2590c:	cmp	r9, #1
   25910:	ble	25934 <GetDataSlab+0x4350>
   25914:	str	sl, [sp, #20]
   25918:	add	r8, sp, #36	; 0x24
   2591c:	ldr	r5, [sp, #192]	; 0xc0
   25920:	add	r6, sp, #112	; 0x70
   25924:	str	r5, [sp, #12]
   25928:	mov	r4, #1
   2592c:	mov	lr, #0
   25930:	b	3af10 <GetDataSlab+0x1992c>
   25934:	mov	lr, #0
   25938:	b	3afa8 <GetDataSlab+0x199c4>
   2593c:	ldr	r3, [sp, #16]
   25940:	cmp	r3, #0
   25944:	ble	3a2d4 <GetDataSlab+0x18cf0>
   25948:	mov	r3, #0
   2594c:	str	r3, [sp, #12]
   25950:	mov	r8, r3
   25954:	b	25a14 <GetDataSlab+0x4430>
   25958:	ldr	r3, [sp, #196]	; 0xc4
   2595c:	ldr	r3, [r3, r0, lsl #2]
   25960:	cmp	r3, #0
   25964:	beq	25978 <GetDataSlab+0x4394>
   25968:	ldr	r2, [r5, #-8]
   2596c:	mul	r3, r2, r3
   25970:	add	ip, ip, r3, lsl #2
   25974:	add	lr, lr, r3
   25978:	add	r0, r0, #1
   2597c:	cmp	r9, r0
   25980:	beq	259f8 <GetDataSlab+0x4414>
   25984:	ldr	r3, [r4]
   25988:	add	r1, r3, #1
   2598c:	str	r1, [r4]
   25990:	ldr	r2, [r7, #4]!
   25994:	sdiv	r3, r1, r2
   25998:	mls	r3, r2, r3, r1
   2599c:	cmp	r3, #0
   259a0:	bne	259e4 <GetDataSlab+0x4400>
   259a4:	str	r8, [r4], #4
   259a8:	ldr	r2, [r5], #4
   259ac:	sdiv	r3, lr, r2
   259b0:	mls	r3, r2, r3, lr
   259b4:	cmp	r3, #0
   259b8:	beq	25958 <GetDataSlab+0x4374>
   259bc:	ldr	r1, [r5, #-8]
   259c0:	ldr	sl, [sp, #196]	; 0xc4
   259c4:	ldr	sl, [sl, r0, lsl #2]
   259c8:	str	sl, [sp, #8]
   259cc:	sub	r3, r2, r3
   259d0:	mla	r3, sl, r1, r3
   259d4:	add	ip, ip, r3, lsl #2
   259d8:	add	lr, lr, r3
   259dc:	b	25978 <GetDataSlab+0x4394>
   259e0:	ldr	r0, [sp, #28]
   259e4:	add	r3, sp, #152	; 0x98
   259e8:	add	r3, r3, r0, lsl #2
   259ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   259f0:	add	lr, lr, r3
   259f4:	add	ip, ip, r3, lsl #2
   259f8:	ldr	r3, [sp, #12]
   259fc:	add	r3, r3, r6
   25a00:	str	r3, [sp, #12]
   25a04:	ldr	r3, [sp, #16]
   25a08:	ldr	r2, [sp, #12]
   25a0c:	cmp	r2, r3
   25a10:	bge	25ac0 <GetDataSlab+0x44dc>
   25a14:	ldr	r3, [sp, #196]	; 0xc4
   25a18:	ldr	r3, [r3]
   25a1c:	cmp	r3, #0
   25a20:	addne	ip, ip, r3, lsl #2
   25a24:	addne	lr, lr, r3
   25a28:	ldr	r6, [fp]
   25a2c:	cmp	r6, #0
   25a30:	ble	25a68 <GetDataSlab+0x4484>
   25a34:	sub	r1, ip, #4
   25a38:	ldr	r3, [sp, #4]
   25a3c:	ldr	r2, [sp, #12]
   25a40:	add	r2, r3, r2, lsl #3
   25a44:	mov	r3, #0
   25a48:	ldr	r0, [r1, #4]!
   25a4c:	vmov	s15, r0
   25a50:	vcvt.f64.u32	d7, s15
   25a54:	vstmia	r2!, {d7}
   25a58:	add	r3, r3, #1
   25a5c:	ldr	r6, [fp]
   25a60:	cmp	r6, r3
   25a64:	bgt	25a48 <GetDataSlab+0x4464>
   25a68:	ldr	r3, [sp, #192]	; 0xc0
   25a6c:	ldr	r2, [r3]
   25a70:	ldr	r3, [sp, #196]	; 0xc4
   25a74:	ldr	r3, [r3]
   25a78:	sub	r3, r2, r3
   25a7c:	add	lr, lr, r3
   25a80:	add	ip, ip, r3, lsl #2
   25a84:	cmp	r9, #1
   25a88:	ble	259f8 <GetDataSlab+0x4414>
   25a8c:	ldr	r3, [sp, #76]	; 0x4c
   25a90:	add	r3, r3, #1
   25a94:	str	r3, [sp, #76]	; 0x4c
   25a98:	ldr	r1, [fp, #4]
   25a9c:	sdiv	r2, r3, r1
   25aa0:	mls	r3, r1, r2, r3
   25aa4:	cmp	r3, #0
   25aa8:	bne	259e0 <GetDataSlab+0x43fc>
   25aac:	add	r4, sp, #76	; 0x4c
   25ab0:	add	r7, fp, #4
   25ab4:	add	r5, sp, #116	; 0x74
   25ab8:	ldr	r0, [sp, #28]
   25abc:	b	259a4 <GetDataSlab+0x43c0>
   25ac0:	mov	r3, #0
   25ac4:	b	251fc <GetDataSlab+0x3c18>
   25ac8:	ldr	r3, [sp, #196]	; 0xc4
   25acc:	ldr	r2, [r3, r0, lsl #2]
   25ad0:	cmp	r2, #0
   25ad4:	beq	25ae8 <GetDataSlab+0x4504>
   25ad8:	ldr	r3, [r5, #-4]
   25adc:	mul	r3, r3, r2
   25ae0:	add	ip, ip, r3, lsl #2
   25ae4:	add	lr, lr, r3
   25ae8:	add	r0, r0, #1
   25aec:	cmp	r9, r0
   25af0:	beq	25b78 <GetDataSlab+0x4594>
   25af4:	ldr	r3, [r4]
   25af8:	add	r1, r3, #1
   25afc:	str	r1, [r4]
   25b00:	ldr	r2, [r7, #4]!
   25b04:	sdiv	r3, r1, r2
   25b08:	mls	r3, r2, r3, r1
   25b0c:	cmp	r3, #0
   25b10:	bne	25b64 <GetDataSlab+0x4580>
   25b14:	str	r8, [r4], #4
   25b18:	add	r5, r5, #4
   25b1c:	ldr	r2, [r5]
   25b20:	sdiv	r3, lr, r2
   25b24:	mls	r3, r2, r3, lr
   25b28:	cmp	r3, #0
   25b2c:	beq	25ac8 <GetDataSlab+0x44e4>
   25b30:	ldr	r1, [r5, #-4]
   25b34:	str	r1, [sp, #8]
   25b38:	ldr	r1, [sp, #196]	; 0xc4
   25b3c:	ldr	r1, [r1, r0, lsl #2]
   25b40:	str	r1, [sp, #12]
   25b44:	sub	r3, r2, r3
   25b48:	mov	r2, r1
   25b4c:	ldr	r1, [sp, #8]
   25b50:	mla	r3, r2, r1, r3
   25b54:	add	ip, ip, r3, lsl #2
   25b58:	add	lr, lr, r3
   25b5c:	b	25ae8 <GetDataSlab+0x4504>
   25b60:	mov	r0, #1
   25b64:	add	r3, sp, #152	; 0x98
   25b68:	add	r3, r3, r0, lsl #2
   25b6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   25b70:	add	lr, lr, r3
   25b74:	add	ip, ip, r3, lsl #2
   25b78:	ldr	r3, [sp, #20]
   25b7c:	add	r3, r3, r6
   25b80:	str	r3, [sp, #20]
   25b84:	ldr	r2, [sp, #16]
   25b88:	cmp	r3, r2
   25b8c:	bge	25c48 <GetDataSlab+0x4664>
   25b90:	ldr	r3, [sp, #196]	; 0xc4
   25b94:	ldr	r3, [r3]
   25b98:	cmp	r3, #0
   25b9c:	addne	ip, ip, r3, lsl #2
   25ba0:	addne	lr, lr, r3
   25ba4:	ldr	r6, [fp]
   25ba8:	cmp	r6, #0
   25bac:	ble	25be8 <GetDataSlab+0x4604>
   25bb0:	ldr	r3, [sp, #4]
   25bb4:	ldr	r2, [sp, #20]
   25bb8:	add	r2, r3, r2, lsl #3
   25bbc:	mov	r3, #0
   25bc0:	vldr	s15, [ip]
   25bc4:	vcvt.f64.u32	d7, s15
   25bc8:	vstmia	r2!, {d7}
   25bcc:	ldr	r1, [sl]
   25bd0:	add	ip, ip, r1, lsl #2
   25bd4:	add	lr, lr, r1
   25bd8:	add	r3, r3, #1
   25bdc:	ldr	r6, [fp]
   25be0:	cmp	r6, r3
   25be4:	bgt	25bc0 <GetDataSlab+0x45dc>
   25be8:	ldr	r3, [sp, #192]	; 0xc0
   25bec:	ldr	r2, [r3]
   25bf0:	ldr	r3, [sp, #196]	; 0xc4
   25bf4:	ldr	r3, [r3]
   25bf8:	sub	r3, r2, r3
   25bfc:	ldr	r2, [sl]
   25c00:	mls	r3, r2, r6, r3
   25c04:	add	lr, lr, r3
   25c08:	add	ip, ip, r3, lsl #2
   25c0c:	cmp	r9, #1
   25c10:	ble	25b78 <GetDataSlab+0x4594>
   25c14:	ldr	r3, [sp, #76]	; 0x4c
   25c18:	add	r3, r3, #1
   25c1c:	str	r3, [sp, #76]	; 0x4c
   25c20:	ldr	r1, [fp, #4]
   25c24:	sdiv	r2, r3, r1
   25c28:	mls	r3, r1, r2, r3
   25c2c:	cmp	r3, #0
   25c30:	bne	25b60 <GetDataSlab+0x457c>
   25c34:	add	r4, sp, #76	; 0x4c
   25c38:	add	r7, fp, #4
   25c3c:	add	r5, sp, #112	; 0x70
   25c40:	mov	r0, #1
   25c44:	b	25b14 <GetDataSlab+0x4530>
   25c48:	mov	r3, #0
   25c4c:	b	251fc <GetDataSlab+0x3c18>
   25c50:	ldr	r3, [sl]
   25c54:	str	r3, [sp, #28]
   25c58:	sub	r3, r3, #1
   25c5c:	str	r3, [sp, #32]
   25c60:	ldr	r3, [sp, #192]	; 0xc0
   25c64:	ldr	r3, [r3]
   25c68:	str	r3, [sp, #112]	; 0x70
   25c6c:	ldr	r3, [fp]
   25c70:	str	r3, [sp, #16]
   25c74:	cmp	r9, #1
   25c78:	ble	25c9c <GetDataSlab+0x46b8>
   25c7c:	str	sl, [sp, #20]
   25c80:	add	r8, sp, #36	; 0x24
   25c84:	ldr	r5, [sp, #192]	; 0xc0
   25c88:	add	r6, sp, #112	; 0x70
   25c8c:	str	r5, [sp, #12]
   25c90:	mov	r4, #1
   25c94:	mov	lr, #0
   25c98:	b	3ac40 <GetDataSlab+0x1965c>
   25c9c:	mov	lr, #0
   25ca0:	b	3acd8 <GetDataSlab+0x196f4>
   25ca4:	ldr	r3, [sp, #16]
   25ca8:	cmp	r3, #0
   25cac:	ble	3a2dc <GetDataSlab+0x18cf8>
   25cb0:	mov	r3, #0
   25cb4:	str	r3, [sp, #12]
   25cb8:	mov	r8, r3
   25cbc:	b	25d7c <GetDataSlab+0x4798>
   25cc0:	ldr	r3, [sp, #196]	; 0xc4
   25cc4:	ldr	r3, [r3, r0, lsl #2]
   25cc8:	cmp	r3, #0
   25ccc:	beq	25ce0 <GetDataSlab+0x46fc>
   25cd0:	ldr	r2, [r5, #-8]
   25cd4:	mul	r3, r2, r3
   25cd8:	add	ip, ip, r3, lsl #1
   25cdc:	add	lr, lr, r3
   25ce0:	add	r0, r0, #1
   25ce4:	cmp	r9, r0
   25ce8:	beq	25d60 <GetDataSlab+0x477c>
   25cec:	ldr	r3, [r4]
   25cf0:	add	r1, r3, #1
   25cf4:	str	r1, [r4]
   25cf8:	ldr	r2, [r7, #4]!
   25cfc:	sdiv	r3, r1, r2
   25d00:	mls	r3, r2, r3, r1
   25d04:	cmp	r3, #0
   25d08:	bne	25d4c <GetDataSlab+0x4768>
   25d0c:	str	r8, [r4], #4
   25d10:	ldr	r2, [r5], #4
   25d14:	sdiv	r3, lr, r2
   25d18:	mls	r3, r2, r3, lr
   25d1c:	cmp	r3, #0
   25d20:	beq	25cc0 <GetDataSlab+0x46dc>
   25d24:	ldr	r1, [r5, #-8]
   25d28:	ldr	sl, [sp, #196]	; 0xc4
   25d2c:	ldr	sl, [sl, r0, lsl #2]
   25d30:	str	sl, [sp, #8]
   25d34:	sub	r3, r2, r3
   25d38:	mla	r3, sl, r1, r3
   25d3c:	add	ip, ip, r3, lsl #1
   25d40:	add	lr, lr, r3
   25d44:	b	25ce0 <GetDataSlab+0x46fc>
   25d48:	ldr	r0, [sp, #28]
   25d4c:	add	r3, sp, #152	; 0x98
   25d50:	add	r3, r3, r0, lsl #2
   25d54:	ldr	r3, [r3, #-120]	; 0xffffff88
   25d58:	add	lr, lr, r3
   25d5c:	add	ip, ip, r3, lsl #1
   25d60:	ldr	r3, [sp, #12]
   25d64:	add	r3, r3, r6
   25d68:	str	r3, [sp, #12]
   25d6c:	ldr	r3, [sp, #16]
   25d70:	ldr	r2, [sp, #12]
   25d74:	cmp	r2, r3
   25d78:	bge	25e28 <GetDataSlab+0x4844>
   25d7c:	ldr	r3, [sp, #196]	; 0xc4
   25d80:	ldr	r3, [r3]
   25d84:	cmp	r3, #0
   25d88:	addne	ip, ip, r3, lsl #1
   25d8c:	addne	lr, lr, r3
   25d90:	ldr	r6, [fp]
   25d94:	cmp	r6, #0
   25d98:	ble	25dd0 <GetDataSlab+0x47ec>
   25d9c:	sub	r1, ip, #2
   25da0:	ldr	r3, [sp, #4]
   25da4:	ldr	r2, [sp, #12]
   25da8:	add	r2, r3, r2, lsl #3
   25dac:	mov	r3, #0
   25db0:	ldrsh	r0, [r1, #2]!
   25db4:	vmov	s15, r0
   25db8:	vcvt.f64.s32	d7, s15
   25dbc:	vstmia	r2!, {d7}
   25dc0:	add	r3, r3, #1
   25dc4:	ldr	r6, [fp]
   25dc8:	cmp	r6, r3
   25dcc:	bgt	25db0 <GetDataSlab+0x47cc>
   25dd0:	ldr	r3, [sp, #192]	; 0xc0
   25dd4:	ldr	r2, [r3]
   25dd8:	ldr	r3, [sp, #196]	; 0xc4
   25ddc:	ldr	r3, [r3]
   25de0:	sub	r3, r2, r3
   25de4:	add	lr, lr, r3
   25de8:	add	ip, ip, r3, lsl #1
   25dec:	cmp	r9, #1
   25df0:	ble	25d60 <GetDataSlab+0x477c>
   25df4:	ldr	r3, [sp, #76]	; 0x4c
   25df8:	add	r3, r3, #1
   25dfc:	str	r3, [sp, #76]	; 0x4c
   25e00:	ldr	r1, [fp, #4]
   25e04:	sdiv	r2, r3, r1
   25e08:	mls	r3, r1, r2, r3
   25e0c:	cmp	r3, #0
   25e10:	bne	25d48 <GetDataSlab+0x4764>
   25e14:	add	r4, sp, #76	; 0x4c
   25e18:	add	r7, fp, #4
   25e1c:	add	r5, sp, #116	; 0x74
   25e20:	ldr	r0, [sp, #28]
   25e24:	b	25d0c <GetDataSlab+0x4728>
   25e28:	mov	r3, #0
   25e2c:	b	251fc <GetDataSlab+0x3c18>
   25e30:	ldr	r3, [sp, #196]	; 0xc4
   25e34:	ldr	r2, [r3, r0, lsl #2]
   25e38:	cmp	r2, #0
   25e3c:	beq	25e50 <GetDataSlab+0x486c>
   25e40:	ldr	r3, [r5, #-4]
   25e44:	mul	r3, r3, r2
   25e48:	add	ip, ip, r3, lsl #1
   25e4c:	add	lr, lr, r3
   25e50:	add	r0, r0, #1
   25e54:	cmp	r9, r0
   25e58:	beq	25ee0 <GetDataSlab+0x48fc>
   25e5c:	ldr	r3, [r4]
   25e60:	add	r1, r3, #1
   25e64:	str	r1, [r4]
   25e68:	ldr	r2, [r7, #4]!
   25e6c:	sdiv	r3, r1, r2
   25e70:	mls	r3, r2, r3, r1
   25e74:	cmp	r3, #0
   25e78:	bne	25ecc <GetDataSlab+0x48e8>
   25e7c:	str	r8, [r4], #4
   25e80:	add	r5, r5, #4
   25e84:	ldr	r2, [r5]
   25e88:	sdiv	r3, lr, r2
   25e8c:	mls	r3, r2, r3, lr
   25e90:	cmp	r3, #0
   25e94:	beq	25e30 <GetDataSlab+0x484c>
   25e98:	ldr	r1, [r5, #-4]
   25e9c:	str	r1, [sp, #8]
   25ea0:	ldr	r1, [sp, #196]	; 0xc4
   25ea4:	ldr	r1, [r1, r0, lsl #2]
   25ea8:	str	r1, [sp, #12]
   25eac:	sub	r3, r2, r3
   25eb0:	mov	r2, r1
   25eb4:	ldr	r1, [sp, #8]
   25eb8:	mla	r3, r2, r1, r3
   25ebc:	add	ip, ip, r3, lsl #1
   25ec0:	add	lr, lr, r3
   25ec4:	b	25e50 <GetDataSlab+0x486c>
   25ec8:	mov	r0, #1
   25ecc:	add	r3, sp, #152	; 0x98
   25ed0:	add	r3, r3, r0, lsl #2
   25ed4:	ldr	r3, [r3, #-120]	; 0xffffff88
   25ed8:	add	lr, lr, r3
   25edc:	add	ip, ip, r3, lsl #1
   25ee0:	ldr	r3, [sp, #20]
   25ee4:	add	r3, r3, r6
   25ee8:	str	r3, [sp, #20]
   25eec:	ldr	r2, [sp, #16]
   25ef0:	cmp	r3, r2
   25ef4:	bge	25fb4 <GetDataSlab+0x49d0>
   25ef8:	ldr	r3, [sp, #196]	; 0xc4
   25efc:	ldr	r3, [r3]
   25f00:	cmp	r3, #0
   25f04:	addne	ip, ip, r3, lsl #1
   25f08:	addne	lr, lr, r3
   25f0c:	ldr	r6, [fp]
   25f10:	cmp	r6, #0
   25f14:	ble	25f54 <GetDataSlab+0x4970>
   25f18:	ldr	r3, [sp, #4]
   25f1c:	ldr	r2, [sp, #20]
   25f20:	add	r2, r3, r2, lsl #3
   25f24:	mov	r3, #0
   25f28:	ldrsh	r1, [ip]
   25f2c:	vmov	s15, r1
   25f30:	vcvt.f64.s32	d7, s15
   25f34:	vstmia	r2!, {d7}
   25f38:	ldr	r1, [sl]
   25f3c:	add	ip, ip, r1, lsl #1
   25f40:	add	lr, lr, r1
   25f44:	add	r3, r3, #1
   25f48:	ldr	r6, [fp]
   25f4c:	cmp	r6, r3
   25f50:	bgt	25f28 <GetDataSlab+0x4944>
   25f54:	ldr	r3, [sp, #192]	; 0xc0
   25f58:	ldr	r2, [r3]
   25f5c:	ldr	r3, [sp, #196]	; 0xc4
   25f60:	ldr	r3, [r3]
   25f64:	sub	r3, r2, r3
   25f68:	ldr	r2, [sl]
   25f6c:	mls	r3, r2, r6, r3
   25f70:	add	lr, lr, r3
   25f74:	add	ip, ip, r3, lsl #1
   25f78:	cmp	r9, #1
   25f7c:	ble	25ee0 <GetDataSlab+0x48fc>
   25f80:	ldr	r3, [sp, #76]	; 0x4c
   25f84:	add	r3, r3, #1
   25f88:	str	r3, [sp, #76]	; 0x4c
   25f8c:	ldr	r1, [fp, #4]
   25f90:	sdiv	r2, r3, r1
   25f94:	mls	r3, r1, r2, r3
   25f98:	cmp	r3, #0
   25f9c:	bne	25ec8 <GetDataSlab+0x48e4>
   25fa0:	add	r4, sp, #76	; 0x4c
   25fa4:	add	r7, fp, #4
   25fa8:	add	r5, sp, #112	; 0x70
   25fac:	mov	r0, #1
   25fb0:	b	25e7c <GetDataSlab+0x4898>
   25fb4:	mov	r3, #0
   25fb8:	b	251fc <GetDataSlab+0x3c18>
   25fbc:	ldr	r3, [sl]
   25fc0:	str	r3, [sp, #28]
   25fc4:	sub	r3, r3, #1
   25fc8:	str	r3, [sp, #32]
   25fcc:	ldr	r3, [sp, #192]	; 0xc0
   25fd0:	ldr	r3, [r3]
   25fd4:	str	r3, [sp, #112]	; 0x70
   25fd8:	ldr	r3, [fp]
   25fdc:	str	r3, [sp, #16]
   25fe0:	cmp	r9, #1
   25fe4:	ble	26008 <GetDataSlab+0x4a24>
   25fe8:	str	sl, [sp, #20]
   25fec:	add	r8, sp, #36	; 0x24
   25ff0:	ldr	r5, [sp, #192]	; 0xc0
   25ff4:	add	r6, sp, #112	; 0x70
   25ff8:	str	r5, [sp, #12]
   25ffc:	mov	r4, #1
   26000:	mov	lr, #0
   26004:	b	3ad30 <GetDataSlab+0x1974c>
   26008:	mov	lr, #0
   2600c:	b	3adc8 <GetDataSlab+0x197e4>
   26010:	ldr	r3, [sp, #16]
   26014:	cmp	r3, #0
   26018:	ble	3a2e4 <GetDataSlab+0x18d00>
   2601c:	mov	r3, #0
   26020:	str	r3, [sp, #12]
   26024:	mov	r8, r3
   26028:	b	260e8 <GetDataSlab+0x4b04>
   2602c:	ldr	r3, [sp, #196]	; 0xc4
   26030:	ldr	r3, [r3, r0, lsl #2]
   26034:	cmp	r3, #0
   26038:	beq	2604c <GetDataSlab+0x4a68>
   2603c:	ldr	r2, [r5, #-8]
   26040:	mul	r3, r2, r3
   26044:	add	ip, ip, r3, lsl #1
   26048:	add	lr, lr, r3
   2604c:	add	r0, r0, #1
   26050:	cmp	r9, r0
   26054:	beq	260cc <GetDataSlab+0x4ae8>
   26058:	ldr	r3, [r4]
   2605c:	add	r1, r3, #1
   26060:	str	r1, [r4]
   26064:	ldr	r2, [r7, #4]!
   26068:	sdiv	r3, r1, r2
   2606c:	mls	r3, r2, r3, r1
   26070:	cmp	r3, #0
   26074:	bne	260b8 <GetDataSlab+0x4ad4>
   26078:	str	r8, [r4], #4
   2607c:	ldr	r2, [r5], #4
   26080:	sdiv	r3, lr, r2
   26084:	mls	r3, r2, r3, lr
   26088:	cmp	r3, #0
   2608c:	beq	2602c <GetDataSlab+0x4a48>
   26090:	ldr	r1, [r5, #-8]
   26094:	ldr	sl, [sp, #196]	; 0xc4
   26098:	ldr	sl, [sl, r0, lsl #2]
   2609c:	str	sl, [sp, #8]
   260a0:	sub	r3, r2, r3
   260a4:	mla	r3, sl, r1, r3
   260a8:	add	ip, ip, r3, lsl #1
   260ac:	add	lr, lr, r3
   260b0:	b	2604c <GetDataSlab+0x4a68>
   260b4:	ldr	r0, [sp, #28]
   260b8:	add	r3, sp, #152	; 0x98
   260bc:	add	r3, r3, r0, lsl #2
   260c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   260c4:	add	lr, lr, r3
   260c8:	add	ip, ip, r3, lsl #1
   260cc:	ldr	r3, [sp, #12]
   260d0:	add	r3, r3, r6
   260d4:	str	r3, [sp, #12]
   260d8:	ldr	r3, [sp, #16]
   260dc:	ldr	r2, [sp, #12]
   260e0:	cmp	r2, r3
   260e4:	bge	26194 <GetDataSlab+0x4bb0>
   260e8:	ldr	r3, [sp, #196]	; 0xc4
   260ec:	ldr	r3, [r3]
   260f0:	cmp	r3, #0
   260f4:	addne	ip, ip, r3, lsl #1
   260f8:	addne	lr, lr, r3
   260fc:	ldr	r6, [fp]
   26100:	cmp	r6, #0
   26104:	ble	2613c <GetDataSlab+0x4b58>
   26108:	sub	r1, ip, #2
   2610c:	ldr	r3, [sp, #4]
   26110:	ldr	r2, [sp, #12]
   26114:	add	r2, r3, r2, lsl #3
   26118:	mov	r3, #0
   2611c:	ldrh	r0, [r1, #2]!
   26120:	vmov	s15, r0
   26124:	vcvt.f64.u32	d7, s15
   26128:	vstmia	r2!, {d7}
   2612c:	add	r3, r3, #1
   26130:	ldr	r6, [fp]
   26134:	cmp	r6, r3
   26138:	bgt	2611c <GetDataSlab+0x4b38>
   2613c:	ldr	r3, [sp, #192]	; 0xc0
   26140:	ldr	r2, [r3]
   26144:	ldr	r3, [sp, #196]	; 0xc4
   26148:	ldr	r3, [r3]
   2614c:	sub	r3, r2, r3
   26150:	add	lr, lr, r3
   26154:	add	ip, ip, r3, lsl #1
   26158:	cmp	r9, #1
   2615c:	ble	260cc <GetDataSlab+0x4ae8>
   26160:	ldr	r3, [sp, #76]	; 0x4c
   26164:	add	r3, r3, #1
   26168:	str	r3, [sp, #76]	; 0x4c
   2616c:	ldr	r1, [fp, #4]
   26170:	sdiv	r2, r3, r1
   26174:	mls	r3, r1, r2, r3
   26178:	cmp	r3, #0
   2617c:	bne	260b4 <GetDataSlab+0x4ad0>
   26180:	add	r4, sp, #76	; 0x4c
   26184:	add	r7, fp, #4
   26188:	add	r5, sp, #116	; 0x74
   2618c:	ldr	r0, [sp, #28]
   26190:	b	26078 <GetDataSlab+0x4a94>
   26194:	mov	r3, #0
   26198:	b	251fc <GetDataSlab+0x3c18>
   2619c:	ldr	r3, [sp, #196]	; 0xc4
   261a0:	ldr	r2, [r3, r0, lsl #2]
   261a4:	cmp	r2, #0
   261a8:	beq	261bc <GetDataSlab+0x4bd8>
   261ac:	ldr	r3, [r5, #-4]
   261b0:	mul	r3, r3, r2
   261b4:	add	ip, ip, r3, lsl #1
   261b8:	add	lr, lr, r3
   261bc:	add	r0, r0, #1
   261c0:	cmp	r9, r0
   261c4:	beq	2624c <GetDataSlab+0x4c68>
   261c8:	ldr	r3, [r4]
   261cc:	add	r1, r3, #1
   261d0:	str	r1, [r4]
   261d4:	ldr	r2, [r7, #4]!
   261d8:	sdiv	r3, r1, r2
   261dc:	mls	r3, r2, r3, r1
   261e0:	cmp	r3, #0
   261e4:	bne	26238 <GetDataSlab+0x4c54>
   261e8:	str	r8, [r4], #4
   261ec:	add	r5, r5, #4
   261f0:	ldr	r2, [r5]
   261f4:	sdiv	r3, lr, r2
   261f8:	mls	r3, r2, r3, lr
   261fc:	cmp	r3, #0
   26200:	beq	2619c <GetDataSlab+0x4bb8>
   26204:	ldr	r1, [r5, #-4]
   26208:	str	r1, [sp, #8]
   2620c:	ldr	r1, [sp, #196]	; 0xc4
   26210:	ldr	r1, [r1, r0, lsl #2]
   26214:	str	r1, [sp, #12]
   26218:	sub	r3, r2, r3
   2621c:	mov	r2, r1
   26220:	ldr	r1, [sp, #8]
   26224:	mla	r3, r2, r1, r3
   26228:	add	ip, ip, r3, lsl #1
   2622c:	add	lr, lr, r3
   26230:	b	261bc <GetDataSlab+0x4bd8>
   26234:	mov	r0, #1
   26238:	add	r3, sp, #152	; 0x98
   2623c:	add	r3, r3, r0, lsl #2
   26240:	ldr	r3, [r3, #-120]	; 0xffffff88
   26244:	add	lr, lr, r3
   26248:	add	ip, ip, r3, lsl #1
   2624c:	ldr	r3, [sp, #20]
   26250:	add	r3, r3, r6
   26254:	str	r3, [sp, #20]
   26258:	ldr	r2, [sp, #16]
   2625c:	cmp	r3, r2
   26260:	bge	26320 <GetDataSlab+0x4d3c>
   26264:	ldr	r3, [sp, #196]	; 0xc4
   26268:	ldr	r3, [r3]
   2626c:	cmp	r3, #0
   26270:	addne	ip, ip, r3, lsl #1
   26274:	addne	lr, lr, r3
   26278:	ldr	r6, [fp]
   2627c:	cmp	r6, #0
   26280:	ble	262c0 <GetDataSlab+0x4cdc>
   26284:	ldr	r3, [sp, #4]
   26288:	ldr	r2, [sp, #20]
   2628c:	add	r2, r3, r2, lsl #3
   26290:	mov	r3, #0
   26294:	ldrh	r1, [ip]
   26298:	vmov	s15, r1
   2629c:	vcvt.f64.u32	d7, s15
   262a0:	vstmia	r2!, {d7}
   262a4:	ldr	r1, [sl]
   262a8:	add	ip, ip, r1, lsl #1
   262ac:	add	lr, lr, r1
   262b0:	add	r3, r3, #1
   262b4:	ldr	r6, [fp]
   262b8:	cmp	r6, r3
   262bc:	bgt	26294 <GetDataSlab+0x4cb0>
   262c0:	ldr	r3, [sp, #192]	; 0xc0
   262c4:	ldr	r2, [r3]
   262c8:	ldr	r3, [sp, #196]	; 0xc4
   262cc:	ldr	r3, [r3]
   262d0:	sub	r3, r2, r3
   262d4:	ldr	r2, [sl]
   262d8:	mls	r3, r2, r6, r3
   262dc:	add	lr, lr, r3
   262e0:	add	ip, ip, r3, lsl #1
   262e4:	cmp	r9, #1
   262e8:	ble	2624c <GetDataSlab+0x4c68>
   262ec:	ldr	r3, [sp, #76]	; 0x4c
   262f0:	add	r3, r3, #1
   262f4:	str	r3, [sp, #76]	; 0x4c
   262f8:	ldr	r1, [fp, #4]
   262fc:	sdiv	r2, r3, r1
   26300:	mls	r3, r1, r2, r3
   26304:	cmp	r3, #0
   26308:	bne	26234 <GetDataSlab+0x4c50>
   2630c:	add	r4, sp, #76	; 0x4c
   26310:	add	r7, fp, #4
   26314:	add	r5, sp, #112	; 0x70
   26318:	mov	r0, #1
   2631c:	b	261e8 <GetDataSlab+0x4c04>
   26320:	mov	r3, #0
   26324:	b	251fc <GetDataSlab+0x3c18>
   26328:	ldr	r3, [sl]
   2632c:	str	r3, [sp, #28]
   26330:	sub	r3, r3, #1
   26334:	str	r3, [sp, #32]
   26338:	ldr	r3, [sp, #192]	; 0xc0
   2633c:	ldr	r3, [r3]
   26340:	str	r3, [sp, #112]	; 0x70
   26344:	ldr	r3, [fp]
   26348:	str	r3, [sp, #16]
   2634c:	cmp	r9, #1
   26350:	ble	26370 <GetDataSlab+0x4d8c>
   26354:	str	sl, [sp, #20]
   26358:	add	r7, sp, #36	; 0x24
   2635c:	ldr	r4, [sp, #192]	; 0xc0
   26360:	add	r5, sp, #112	; 0x70
   26364:	str	r4, [sp, #12]
   26368:	mov	lr, #0
   2636c:	b	3aa60 <GetDataSlab+0x1947c>
   26370:	mov	lr, #0
   26374:	b	3aaf8 <GetDataSlab+0x19514>
   26378:	ldr	r3, [sp, #16]
   2637c:	cmp	r3, #0
   26380:	ble	3a2ec <GetDataSlab+0x18d08>
   26384:	mov	r3, #0
   26388:	str	r3, [sp, #12]
   2638c:	mov	r8, r3
   26390:	b	26450 <GetDataSlab+0x4e6c>
   26394:	ldr	r3, [sp, #196]	; 0xc4
   26398:	ldr	r3, [r3, r0, lsl #2]
   2639c:	cmp	r3, #0
   263a0:	beq	263b4 <GetDataSlab+0x4dd0>
   263a4:	ldr	r2, [r5, #-8]
   263a8:	mul	r3, r2, r3
   263ac:	add	ip, ip, r3
   263b0:	add	lr, lr, r3
   263b4:	add	r0, r0, #1
   263b8:	cmp	r9, r0
   263bc:	beq	26434 <GetDataSlab+0x4e50>
   263c0:	ldr	r3, [r4]
   263c4:	add	r1, r3, #1
   263c8:	str	r1, [r4]
   263cc:	ldr	r2, [r7, #4]!
   263d0:	sdiv	r3, r1, r2
   263d4:	mls	r3, r2, r3, r1
   263d8:	cmp	r3, #0
   263dc:	bne	26420 <GetDataSlab+0x4e3c>
   263e0:	str	r8, [r4], #4
   263e4:	ldr	r2, [r5], #4
   263e8:	sdiv	r3, lr, r2
   263ec:	mls	r3, r2, r3, lr
   263f0:	cmp	r3, #0
   263f4:	beq	26394 <GetDataSlab+0x4db0>
   263f8:	ldr	r1, [r5, #-8]
   263fc:	ldr	sl, [sp, #196]	; 0xc4
   26400:	ldr	sl, [sl, r0, lsl #2]
   26404:	str	sl, [sp, #8]
   26408:	sub	r3, r2, r3
   2640c:	mla	r3, sl, r1, r3
   26410:	add	ip, ip, r3
   26414:	add	lr, lr, r3
   26418:	b	263b4 <GetDataSlab+0x4dd0>
   2641c:	ldr	r0, [sp, #28]
   26420:	add	r3, sp, #152	; 0x98
   26424:	add	r3, r3, r0, lsl #2
   26428:	ldr	r3, [r3, #-120]	; 0xffffff88
   2642c:	add	lr, lr, r3
   26430:	add	ip, ip, r3
   26434:	ldr	r3, [sp, #12]
   26438:	add	r3, r3, r6
   2643c:	str	r3, [sp, #12]
   26440:	ldr	r3, [sp, #16]
   26444:	ldr	r2, [sp, #12]
   26448:	cmp	r2, r3
   2644c:	bge	26500 <GetDataSlab+0x4f1c>
   26450:	ldr	r3, [sp, #196]	; 0xc4
   26454:	ldr	r3, [r3]
   26458:	cmp	r3, #0
   2645c:	addne	ip, ip, r3
   26460:	addne	lr, lr, r3
   26464:	ldr	r6, [fp]
   26468:	cmp	r6, #0
   2646c:	ble	264a8 <GetDataSlab+0x4ec4>
   26470:	sub	r3, ip, #1
   26474:	ldr	r2, [sp, #4]
   26478:	ldr	r1, [sp, #12]
   2647c:	add	r1, r2, r1, lsl #3
   26480:	ldrsb	r2, [r3, #1]
   26484:	vmov	s15, r2
   26488:	vcvt.f64.s32	d7, s15
   2648c:	vstmia	r1!, {d7}
   26490:	ldr	r6, [fp]
   26494:	add	r2, r3, #2
   26498:	sub	r2, r2, ip
   2649c:	add	r3, r3, #1
   264a0:	cmp	r6, r2
   264a4:	bgt	26480 <GetDataSlab+0x4e9c>
   264a8:	ldr	r3, [sp, #192]	; 0xc0
   264ac:	ldr	r2, [r3]
   264b0:	ldr	r3, [sp, #196]	; 0xc4
   264b4:	ldr	r3, [r3]
   264b8:	sub	r3, r2, r3
   264bc:	add	lr, lr, r3
   264c0:	add	ip, ip, r3
   264c4:	cmp	r9, #1
   264c8:	ble	26434 <GetDataSlab+0x4e50>
   264cc:	ldr	r3, [sp, #76]	; 0x4c
   264d0:	add	r3, r3, #1
   264d4:	str	r3, [sp, #76]	; 0x4c
   264d8:	ldr	r1, [fp, #4]
   264dc:	sdiv	r2, r3, r1
   264e0:	mls	r3, r1, r2, r3
   264e4:	cmp	r3, #0
   264e8:	bne	2641c <GetDataSlab+0x4e38>
   264ec:	add	r4, sp, #76	; 0x4c
   264f0:	add	r7, fp, #4
   264f4:	add	r5, sp, #116	; 0x74
   264f8:	ldr	r0, [sp, #28]
   264fc:	b	263e0 <GetDataSlab+0x4dfc>
   26500:	mov	r3, #0
   26504:	b	251fc <GetDataSlab+0x3c18>
   26508:	ldr	r3, [sp, #196]	; 0xc4
   2650c:	ldr	r2, [r3, r0, lsl #2]
   26510:	cmp	r2, #0
   26514:	beq	26528 <GetDataSlab+0x4f44>
   26518:	ldr	r3, [r5, #-4]
   2651c:	mul	r3, r3, r2
   26520:	add	ip, ip, r3
   26524:	add	lr, lr, r3
   26528:	add	r0, r0, #1
   2652c:	cmp	r9, r0
   26530:	beq	265b8 <GetDataSlab+0x4fd4>
   26534:	ldr	r3, [r4]
   26538:	add	r1, r3, #1
   2653c:	str	r1, [r4]
   26540:	ldr	r2, [r7, #4]!
   26544:	sdiv	r3, r1, r2
   26548:	mls	r3, r2, r3, r1
   2654c:	cmp	r3, #0
   26550:	bne	265a4 <GetDataSlab+0x4fc0>
   26554:	str	r8, [r4], #4
   26558:	add	r5, r5, #4
   2655c:	ldr	r2, [r5]
   26560:	sdiv	r3, lr, r2
   26564:	mls	r3, r2, r3, lr
   26568:	cmp	r3, #0
   2656c:	beq	26508 <GetDataSlab+0x4f24>
   26570:	ldr	r1, [r5, #-4]
   26574:	str	r1, [sp, #8]
   26578:	ldr	r1, [sp, #196]	; 0xc4
   2657c:	ldr	r1, [r1, r0, lsl #2]
   26580:	str	r1, [sp, #12]
   26584:	sub	r3, r2, r3
   26588:	mov	r2, r1
   2658c:	ldr	r1, [sp, #8]
   26590:	mla	r3, r2, r1, r3
   26594:	add	ip, ip, r3
   26598:	add	lr, lr, r3
   2659c:	b	26528 <GetDataSlab+0x4f44>
   265a0:	mov	r0, #1
   265a4:	add	r3, sp, #152	; 0x98
   265a8:	add	r3, r3, r0, lsl #2
   265ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   265b0:	add	lr, lr, r3
   265b4:	add	ip, ip, r3
   265b8:	ldr	r3, [sp, #20]
   265bc:	add	r3, r3, r6
   265c0:	str	r3, [sp, #20]
   265c4:	ldr	r2, [sp, #16]
   265c8:	cmp	r3, r2
   265cc:	bge	2668c <GetDataSlab+0x50a8>
   265d0:	ldr	r3, [sp, #196]	; 0xc4
   265d4:	ldr	r3, [r3]
   265d8:	cmp	r3, #0
   265dc:	addne	ip, ip, r3
   265e0:	addne	lr, lr, r3
   265e4:	ldr	r6, [fp]
   265e8:	cmp	r6, #0
   265ec:	ble	2662c <GetDataSlab+0x5048>
   265f0:	ldr	r3, [sp, #4]
   265f4:	ldr	r2, [sp, #20]
   265f8:	add	r2, r3, r2, lsl #3
   265fc:	mov	r3, #0
   26600:	ldrsb	r1, [ip]
   26604:	vmov	s15, r1
   26608:	vcvt.f64.s32	d7, s15
   2660c:	vstmia	r2!, {d7}
   26610:	ldr	r1, [sl]
   26614:	add	ip, ip, r1
   26618:	add	lr, lr, r1
   2661c:	add	r3, r3, #1
   26620:	ldr	r6, [fp]
   26624:	cmp	r6, r3
   26628:	bgt	26600 <GetDataSlab+0x501c>
   2662c:	ldr	r3, [sp, #192]	; 0xc0
   26630:	ldr	r2, [r3]
   26634:	ldr	r3, [sp, #196]	; 0xc4
   26638:	ldr	r3, [r3]
   2663c:	sub	r3, r2, r3
   26640:	ldr	r2, [sl]
   26644:	mls	r3, r2, r6, r3
   26648:	add	lr, lr, r3
   2664c:	add	ip, ip, r3
   26650:	cmp	r9, #1
   26654:	ble	265b8 <GetDataSlab+0x4fd4>
   26658:	ldr	r3, [sp, #76]	; 0x4c
   2665c:	add	r3, r3, #1
   26660:	str	r3, [sp, #76]	; 0x4c
   26664:	ldr	r1, [fp, #4]
   26668:	sdiv	r2, r3, r1
   2666c:	mls	r3, r1, r2, r3
   26670:	cmp	r3, #0
   26674:	bne	265a0 <GetDataSlab+0x4fbc>
   26678:	add	r4, sp, #76	; 0x4c
   2667c:	add	r7, fp, #4
   26680:	add	r5, sp, #112	; 0x70
   26684:	mov	r0, #1
   26688:	b	26554 <GetDataSlab+0x4f70>
   2668c:	mov	r3, #0
   26690:	b	251fc <GetDataSlab+0x3c18>
   26694:	ldr	r3, [sl]
   26698:	str	r3, [sp, #28]
   2669c:	sub	r3, r3, #1
   266a0:	str	r3, [sp, #32]
   266a4:	ldr	r3, [sp, #192]	; 0xc0
   266a8:	ldr	r3, [r3]
   266ac:	str	r3, [sp, #112]	; 0x70
   266b0:	ldr	r3, [fp]
   266b4:	str	r3, [sp, #16]
   266b8:	cmp	r9, #1
   266bc:	ble	266e0 <GetDataSlab+0x50fc>
   266c0:	str	sl, [sp, #20]
   266c4:	add	r8, sp, #36	; 0x24
   266c8:	ldr	r5, [sp, #192]	; 0xc0
   266cc:	add	r6, sp, #112	; 0x70
   266d0:	str	r5, [sp, #12]
   266d4:	mov	r4, #1
   266d8:	mov	lr, #0
   266dc:	b	3ab50 <GetDataSlab+0x1956c>
   266e0:	mov	lr, #0
   266e4:	b	3abe8 <GetDataSlab+0x19604>
   266e8:	ldr	r3, [sp, #16]
   266ec:	cmp	r3, #0
   266f0:	ble	3a2f4 <GetDataSlab+0x18d10>
   266f4:	mov	r3, #0
   266f8:	str	r3, [sp, #12]
   266fc:	mov	r8, r3
   26700:	b	267c0 <GetDataSlab+0x51dc>
   26704:	ldr	r3, [sp, #196]	; 0xc4
   26708:	ldr	r3, [r3, r0, lsl #2]
   2670c:	cmp	r3, #0
   26710:	beq	26724 <GetDataSlab+0x5140>
   26714:	ldr	r2, [r5, #-8]
   26718:	mul	r3, r2, r3
   2671c:	add	ip, ip, r3
   26720:	add	lr, lr, r3
   26724:	add	r0, r0, #1
   26728:	cmp	r9, r0
   2672c:	beq	267a4 <GetDataSlab+0x51c0>
   26730:	ldr	r3, [r4]
   26734:	add	r1, r3, #1
   26738:	str	r1, [r4]
   2673c:	ldr	r2, [r7, #4]!
   26740:	sdiv	r3, r1, r2
   26744:	mls	r3, r2, r3, r1
   26748:	cmp	r3, #0
   2674c:	bne	26790 <GetDataSlab+0x51ac>
   26750:	str	r8, [r4], #4
   26754:	ldr	r2, [r5], #4
   26758:	sdiv	r3, lr, r2
   2675c:	mls	r3, r2, r3, lr
   26760:	cmp	r3, #0
   26764:	beq	26704 <GetDataSlab+0x5120>
   26768:	ldr	r1, [r5, #-8]
   2676c:	ldr	sl, [sp, #196]	; 0xc4
   26770:	ldr	sl, [sl, r0, lsl #2]
   26774:	str	sl, [sp, #8]
   26778:	sub	r3, r2, r3
   2677c:	mla	r3, sl, r1, r3
   26780:	add	ip, ip, r3
   26784:	add	lr, lr, r3
   26788:	b	26724 <GetDataSlab+0x5140>
   2678c:	ldr	r0, [sp, #28]
   26790:	add	r3, sp, #152	; 0x98
   26794:	add	r3, r3, r0, lsl #2
   26798:	ldr	r3, [r3, #-120]	; 0xffffff88
   2679c:	add	lr, lr, r3
   267a0:	add	ip, ip, r3
   267a4:	ldr	r3, [sp, #12]
   267a8:	add	r3, r3, r6
   267ac:	str	r3, [sp, #12]
   267b0:	ldr	r3, [sp, #16]
   267b4:	ldr	r2, [sp, #12]
   267b8:	cmp	r2, r3
   267bc:	bge	26870 <GetDataSlab+0x528c>
   267c0:	ldr	r3, [sp, #196]	; 0xc4
   267c4:	ldr	r3, [r3]
   267c8:	cmp	r3, #0
   267cc:	addne	ip, ip, r3
   267d0:	addne	lr, lr, r3
   267d4:	ldr	r6, [fp]
   267d8:	cmp	r6, #0
   267dc:	ble	26818 <GetDataSlab+0x5234>
   267e0:	sub	r3, ip, #1
   267e4:	ldr	r2, [sp, #4]
   267e8:	ldr	r1, [sp, #12]
   267ec:	add	r1, r2, r1, lsl #3
   267f0:	ldrb	r2, [r3, #1]
   267f4:	vmov	s15, r2
   267f8:	vcvt.f64.u32	d7, s15
   267fc:	vstmia	r1!, {d7}
   26800:	ldr	r6, [fp]
   26804:	add	r2, r3, #2
   26808:	sub	r2, r2, ip
   2680c:	add	r3, r3, #1
   26810:	cmp	r6, r2
   26814:	bgt	267f0 <GetDataSlab+0x520c>
   26818:	ldr	r3, [sp, #192]	; 0xc0
   2681c:	ldr	r2, [r3]
   26820:	ldr	r3, [sp, #196]	; 0xc4
   26824:	ldr	r3, [r3]
   26828:	sub	r3, r2, r3
   2682c:	add	lr, lr, r3
   26830:	add	ip, ip, r3
   26834:	cmp	r9, #1
   26838:	ble	267a4 <GetDataSlab+0x51c0>
   2683c:	ldr	r3, [sp, #76]	; 0x4c
   26840:	add	r3, r3, #1
   26844:	str	r3, [sp, #76]	; 0x4c
   26848:	ldr	r1, [fp, #4]
   2684c:	sdiv	r2, r3, r1
   26850:	mls	r3, r1, r2, r3
   26854:	cmp	r3, #0
   26858:	bne	2678c <GetDataSlab+0x51a8>
   2685c:	add	r4, sp, #76	; 0x4c
   26860:	add	r7, fp, #4
   26864:	add	r5, sp, #116	; 0x74
   26868:	ldr	r0, [sp, #28]
   2686c:	b	26750 <GetDataSlab+0x516c>
   26870:	mov	r3, #0
   26874:	b	251fc <GetDataSlab+0x3c18>
   26878:	ldr	r3, [sp, #196]	; 0xc4
   2687c:	ldr	r2, [r3, r0, lsl #2]
   26880:	cmp	r2, #0
   26884:	beq	26898 <GetDataSlab+0x52b4>
   26888:	ldr	r3, [r5, #-4]
   2688c:	mul	r3, r3, r2
   26890:	add	ip, ip, r3
   26894:	add	lr, lr, r3
   26898:	add	r0, r0, #1
   2689c:	cmp	r9, r0
   268a0:	beq	26928 <GetDataSlab+0x5344>
   268a4:	ldr	r3, [r4]
   268a8:	add	r1, r3, #1
   268ac:	str	r1, [r4]
   268b0:	ldr	r2, [r7, #4]!
   268b4:	sdiv	r3, r1, r2
   268b8:	mls	r3, r2, r3, r1
   268bc:	cmp	r3, #0
   268c0:	bne	26914 <GetDataSlab+0x5330>
   268c4:	str	r8, [r4], #4
   268c8:	add	r5, r5, #4
   268cc:	ldr	r2, [r5]
   268d0:	sdiv	r3, lr, r2
   268d4:	mls	r3, r2, r3, lr
   268d8:	cmp	r3, #0
   268dc:	beq	26878 <GetDataSlab+0x5294>
   268e0:	ldr	r1, [r5, #-4]
   268e4:	str	r1, [sp, #8]
   268e8:	ldr	r1, [sp, #196]	; 0xc4
   268ec:	ldr	r1, [r1, r0, lsl #2]
   268f0:	str	r1, [sp, #12]
   268f4:	sub	r3, r2, r3
   268f8:	mov	r2, r1
   268fc:	ldr	r1, [sp, #8]
   26900:	mla	r3, r2, r1, r3
   26904:	add	ip, ip, r3
   26908:	add	lr, lr, r3
   2690c:	b	26898 <GetDataSlab+0x52b4>
   26910:	mov	r0, #1
   26914:	add	r3, sp, #152	; 0x98
   26918:	add	r3, r3, r0, lsl #2
   2691c:	ldr	r3, [r3, #-120]	; 0xffffff88
   26920:	add	lr, lr, r3
   26924:	add	ip, ip, r3
   26928:	ldr	r3, [sp, #20]
   2692c:	add	r3, r3, r6
   26930:	str	r3, [sp, #20]
   26934:	ldr	r2, [sp, #16]
   26938:	cmp	r3, r2
   2693c:	bge	269fc <GetDataSlab+0x5418>
   26940:	ldr	r3, [sp, #196]	; 0xc4
   26944:	ldr	r3, [r3]
   26948:	cmp	r3, #0
   2694c:	addne	ip, ip, r3
   26950:	addne	lr, lr, r3
   26954:	ldr	r6, [fp]
   26958:	cmp	r6, #0
   2695c:	ble	2699c <GetDataSlab+0x53b8>
   26960:	ldr	r3, [sp, #4]
   26964:	ldr	r2, [sp, #20]
   26968:	add	r2, r3, r2, lsl #3
   2696c:	mov	r3, #0
   26970:	ldrb	r1, [ip]
   26974:	vmov	s15, r1
   26978:	vcvt.f64.u32	d7, s15
   2697c:	vstmia	r2!, {d7}
   26980:	ldr	r1, [sl]
   26984:	add	ip, ip, r1
   26988:	add	lr, lr, r1
   2698c:	add	r3, r3, #1
   26990:	ldr	r6, [fp]
   26994:	cmp	r6, r3
   26998:	bgt	26970 <GetDataSlab+0x538c>
   2699c:	ldr	r3, [sp, #192]	; 0xc0
   269a0:	ldr	r2, [r3]
   269a4:	ldr	r3, [sp, #196]	; 0xc4
   269a8:	ldr	r3, [r3]
   269ac:	sub	r3, r2, r3
   269b0:	ldr	r2, [sl]
   269b4:	mls	r3, r2, r6, r3
   269b8:	add	lr, lr, r3
   269bc:	add	ip, ip, r3
   269c0:	cmp	r9, #1
   269c4:	ble	26928 <GetDataSlab+0x5344>
   269c8:	ldr	r3, [sp, #76]	; 0x4c
   269cc:	add	r3, r3, #1
   269d0:	str	r3, [sp, #76]	; 0x4c
   269d4:	ldr	r1, [fp, #4]
   269d8:	sdiv	r2, r3, r1
   269dc:	mls	r3, r1, r2, r3
   269e0:	cmp	r3, #0
   269e4:	bne	26910 <GetDataSlab+0x532c>
   269e8:	add	r4, sp, #76	; 0x4c
   269ec:	add	r7, fp, #4
   269f0:	add	r5, sp, #112	; 0x70
   269f4:	mov	r0, #1
   269f8:	b	268c4 <GetDataSlab+0x52e0>
   269fc:	mov	r3, #0
   26a00:	b	251fc <GetDataSlab+0x3c18>
   26a04:	cmp	r8, #12
   26a08:	beq	26a64 <GetDataSlab+0x5480>
   26a0c:	cmp	r8, #13
   26a10:	movne	r3, #1
   26a14:	bne	251fc <GetDataSlab+0x3c18>
   26a18:	ldr	r3, [sl]
   26a1c:	str	r3, [sp, #28]
   26a20:	sub	r3, r3, #1
   26a24:	str	r3, [sp, #32]
   26a28:	ldr	r3, [sp, #192]	; 0xc0
   26a2c:	ldr	r3, [r3]
   26a30:	str	r3, [sp, #112]	; 0x70
   26a34:	ldr	r3, [fp]
   26a38:	str	r3, [sp, #12]
   26a3c:	cmp	r9, #1
   26a40:	ble	26da8 <GetDataSlab+0x57c4>
   26a44:	str	sl, [sp, #20]
   26a48:	add	r8, sp, #36	; 0x24
   26a4c:	ldr	r4, [sp, #192]	; 0xc0
   26a50:	add	r5, sp, #112	; 0x70
   26a54:	str	r4, [sp, #16]
   26a58:	mov	lr, #1
   26a5c:	mov	r7, #0
   26a60:	b	3a888 <GetDataSlab+0x192a4>
   26a64:	ldr	r3, [sl]
   26a68:	str	r3, [sp, #28]
   26a6c:	sub	r3, r3, #1
   26a70:	str	r3, [sp, #32]
   26a74:	ldr	r3, [sp, #192]	; 0xc0
   26a78:	ldr	r3, [r3]
   26a7c:	str	r3, [sp, #112]	; 0x70
   26a80:	ldr	r3, [fp]
   26a84:	str	r3, [sp, #12]
   26a88:	cmp	r9, #1
   26a8c:	ble	26ab0 <GetDataSlab+0x54cc>
   26a90:	str	sl, [sp, #20]
   26a94:	add	r8, sp, #36	; 0x24
   26a98:	ldr	r4, [sp, #192]	; 0xc0
   26a9c:	add	r5, sp, #112	; 0x70
   26aa0:	str	r4, [sp, #16]
   26aa4:	mov	lr, #1
   26aa8:	mov	r7, #0
   26aac:	b	3a974 <GetDataSlab+0x19390>
   26ab0:	mov	r7, #0
   26ab4:	b	3aa0c <GetDataSlab+0x19428>
   26ab8:	ldr	r3, [sp, #12]
   26abc:	cmp	r3, #0
   26ac0:	ble	3aa34 <GetDataSlab+0x19450>
   26ac4:	mov	r3, #0
   26ac8:	str	r3, [sp, #8]
   26acc:	b	26b8c <GetDataSlab+0x55a8>
   26ad0:	ldr	r3, [sp, #196]	; 0xc4
   26ad4:	ldr	r2, [r3, r0, lsl #2]
   26ad8:	cmp	r2, #0
   26adc:	beq	26af0 <GetDataSlab+0x550c>
   26ae0:	ldr	r3, [lr, #-4]
   26ae4:	mul	r3, r3, r2
   26ae8:	add	r8, r8, r3, lsl #3
   26aec:	add	r7, r7, r3
   26af0:	add	r0, r0, #1
   26af4:	cmp	r9, r0
   26af8:	beq	26b74 <GetDataSlab+0x5590>
   26afc:	ldr	r3, [ip]
   26b00:	add	r1, r3, #1
   26b04:	str	r1, [ip]
   26b08:	ldr	r2, [r4, #4]!
   26b0c:	sdiv	r3, r1, r2
   26b10:	mls	r3, r2, r3, r1
   26b14:	cmp	r3, #0
   26b18:	bne	26b60 <GetDataSlab+0x557c>
   26b1c:	mov	r3, #0
   26b20:	str	r3, [ip], #4
   26b24:	add	lr, lr, #4
   26b28:	ldr	r2, [lr]
   26b2c:	sdiv	r3, r7, r2
   26b30:	mls	r3, r2, r3, r7
   26b34:	cmp	r3, #0
   26b38:	beq	26ad0 <GetDataSlab+0x54ec>
   26b3c:	ldr	r1, [lr, #-4]
   26b40:	ldr	r5, [sp, #196]	; 0xc4
   26b44:	ldr	r5, [r5, r0, lsl #2]
   26b48:	sub	r3, r2, r3
   26b4c:	mla	r3, r5, r1, r3
   26b50:	add	r8, r8, r3, lsl #3
   26b54:	add	r7, r7, r3
   26b58:	b	26af0 <GetDataSlab+0x550c>
   26b5c:	ldr	r0, [sp, #28]
   26b60:	add	r3, sp, #152	; 0x98
   26b64:	add	r3, r3, r0, lsl #2
   26b68:	ldr	r3, [r3, #-120]	; 0xffffff88
   26b6c:	add	r7, r7, r3
   26b70:	add	r8, r8, r3, lsl #3
   26b74:	ldr	r3, [sp, #8]
   26b78:	add	r3, r3, sl
   26b7c:	str	r3, [sp, #8]
   26b80:	ldr	r2, [sp, #12]
   26b84:	cmp	r3, r2
   26b88:	bge	3aa34 <GetDataSlab+0x19450>
   26b8c:	ldr	r3, [sp, #196]	; 0xc4
   26b90:	ldr	r3, [r3]
   26b94:	cmp	r3, #0
   26b98:	addne	r8, r8, r3, lsl #3
   26b9c:	addne	r7, r7, r3
   26ba0:	ldr	sl, [fp]
   26ba4:	cmp	sl, #0
   26ba8:	ble	26bdc <GetDataSlab+0x55f8>
   26bac:	sub	r6, r8, #8
   26bb0:	ldr	r3, [sp, #4]
   26bb4:	ldr	r2, [sp, #8]
   26bb8:	add	r5, r3, r2, lsl #3
   26bbc:	mov	r4, #0
   26bc0:	ldrd	r0, [r6, #8]!
   26bc4:	bl	4ed5c <__aeabi_l2d>
   26bc8:	strd	r0, [r5], #8
   26bcc:	add	r4, r4, #1
   26bd0:	ldr	sl, [fp]
   26bd4:	cmp	sl, r4
   26bd8:	bgt	26bc0 <GetDataSlab+0x55dc>
   26bdc:	ldr	r3, [sp, #192]	; 0xc0
   26be0:	ldr	r2, [r3]
   26be4:	ldr	r3, [sp, #196]	; 0xc4
   26be8:	ldr	r3, [r3]
   26bec:	sub	r3, r2, r3
   26bf0:	add	r7, r7, r3
   26bf4:	add	r8, r8, r3, lsl #3
   26bf8:	cmp	r9, #1
   26bfc:	ble	26b74 <GetDataSlab+0x5590>
   26c00:	ldr	r3, [sp, #76]	; 0x4c
   26c04:	add	r3, r3, #1
   26c08:	str	r3, [sp, #76]	; 0x4c
   26c0c:	ldr	r1, [fp, #4]
   26c10:	sdiv	r2, r3, r1
   26c14:	mls	r3, r1, r2, r3
   26c18:	cmp	r3, #0
   26c1c:	bne	26b5c <GetDataSlab+0x5578>
   26c20:	add	ip, sp, #76	; 0x4c
   26c24:	add	r4, fp, #4
   26c28:	add	lr, sp, #112	; 0x70
   26c2c:	ldr	r0, [sp, #28]
   26c30:	b	26b1c <GetDataSlab+0x5538>
   26c34:	ldr	r3, [sp, #196]	; 0xc4
   26c38:	ldr	r2, [r3, r0, lsl #2]
   26c3c:	cmp	r2, #0
   26c40:	beq	26c54 <GetDataSlab+0x5670>
   26c44:	ldr	r3, [lr, #-4]
   26c48:	mul	r3, r3, r2
   26c4c:	add	r8, r8, r3, lsl #3
   26c50:	add	r7, r7, r3
   26c54:	add	r0, r0, #1
   26c58:	cmp	r9, r0
   26c5c:	beq	26cd8 <GetDataSlab+0x56f4>
   26c60:	ldr	r3, [ip]
   26c64:	add	r1, r3, #1
   26c68:	str	r1, [ip]
   26c6c:	ldr	r2, [r4, #4]!
   26c70:	sdiv	r3, r1, r2
   26c74:	mls	r3, r2, r3, r1
   26c78:	cmp	r3, #0
   26c7c:	bne	26cc4 <GetDataSlab+0x56e0>
   26c80:	mov	r3, #0
   26c84:	str	r3, [ip], #4
   26c88:	add	lr, lr, #4
   26c8c:	ldr	r2, [lr]
   26c90:	sdiv	r3, r7, r2
   26c94:	mls	r3, r2, r3, r7
   26c98:	cmp	r3, #0
   26c9c:	beq	26c34 <GetDataSlab+0x5650>
   26ca0:	ldr	r1, [lr, #-4]
   26ca4:	ldr	r5, [sp, #196]	; 0xc4
   26ca8:	ldr	r5, [r5, r0, lsl #2]
   26cac:	sub	r3, r2, r3
   26cb0:	mla	r3, r5, r1, r3
   26cb4:	add	r8, r8, r3, lsl #3
   26cb8:	add	r7, r7, r3
   26cbc:	b	26c54 <GetDataSlab+0x5670>
   26cc0:	mov	r0, #1
   26cc4:	add	r3, sp, #152	; 0x98
   26cc8:	add	r3, r3, r0, lsl #2
   26ccc:	ldr	r3, [r3, #-120]	; 0xffffff88
   26cd0:	add	r7, r7, r3
   26cd4:	add	r8, r8, r3, lsl #3
   26cd8:	ldr	r3, [sp, #8]
   26cdc:	add	r3, r3, r6
   26ce0:	str	r3, [sp, #8]
   26ce4:	ldr	r2, [sp, #12]
   26ce8:	cmp	r3, r2
   26cec:	bge	3aa34 <GetDataSlab+0x19450>
   26cf0:	ldr	r3, [sp, #196]	; 0xc4
   26cf4:	ldr	r3, [r3]
   26cf8:	cmp	r3, #0
   26cfc:	addne	r8, r8, r3, lsl #3
   26d00:	addne	r7, r7, r3
   26d04:	ldr	r6, [fp]
   26d08:	cmp	r6, #0
   26d0c:	ble	26d48 <GetDataSlab+0x5764>
   26d10:	ldr	r3, [sp, #4]
   26d14:	ldr	r2, [sp, #8]
   26d18:	add	r5, r3, r2, lsl #3
   26d1c:	mov	r4, #0
   26d20:	ldrd	r0, [r8]
   26d24:	bl	4ed5c <__aeabi_l2d>
   26d28:	strd	r0, [r5], #8
   26d2c:	ldr	r3, [sl]
   26d30:	add	r8, r8, r3, lsl #3
   26d34:	add	r7, r7, r3
   26d38:	add	r4, r4, #1
   26d3c:	ldr	r6, [fp]
   26d40:	cmp	r6, r4
   26d44:	bgt	26d20 <GetDataSlab+0x573c>
   26d48:	ldr	r3, [sp, #192]	; 0xc0
   26d4c:	ldr	r2, [r3]
   26d50:	ldr	r3, [sp, #196]	; 0xc4
   26d54:	ldr	r3, [r3]
   26d58:	sub	r3, r2, r3
   26d5c:	ldr	r2, [sl]
   26d60:	mls	r3, r2, r6, r3
   26d64:	add	r7, r7, r3
   26d68:	add	r8, r8, r3, lsl #3
   26d6c:	cmp	r9, #1
   26d70:	ble	26cd8 <GetDataSlab+0x56f4>
   26d74:	ldr	r3, [sp, #76]	; 0x4c
   26d78:	add	r3, r3, #1
   26d7c:	str	r3, [sp, #76]	; 0x4c
   26d80:	ldr	r1, [fp, #4]
   26d84:	sdiv	r2, r3, r1
   26d88:	mls	r3, r1, r2, r3
   26d8c:	cmp	r3, #0
   26d90:	bne	26cc0 <GetDataSlab+0x56dc>
   26d94:	add	ip, sp, #76	; 0x4c
   26d98:	add	r4, fp, #4
   26d9c:	add	lr, sp, #112	; 0x70
   26da0:	mov	r0, #1
   26da4:	b	26c80 <GetDataSlab+0x569c>
   26da8:	mov	r7, #0
   26dac:	b	3a920 <GetDataSlab+0x1933c>
   26db0:	ldr	r3, [sp, #12]
   26db4:	cmp	r3, #0
   26db8:	ble	3a2fc <GetDataSlab+0x18d18>
   26dbc:	mov	r3, #0
   26dc0:	str	r3, [sp, #8]
   26dc4:	b	26e84 <GetDataSlab+0x58a0>
   26dc8:	ldr	r3, [sp, #196]	; 0xc4
   26dcc:	ldr	r2, [r3, r0, lsl #2]
   26dd0:	cmp	r2, #0
   26dd4:	beq	26de8 <GetDataSlab+0x5804>
   26dd8:	ldr	r3, [lr, #-4]
   26ddc:	mul	r3, r3, r2
   26de0:	add	r8, r8, r3, lsl #3
   26de4:	add	r7, r7, r3
   26de8:	add	r0, r0, #1
   26dec:	cmp	r9, r0
   26df0:	beq	26e6c <GetDataSlab+0x5888>
   26df4:	ldr	r3, [ip]
   26df8:	add	r1, r3, #1
   26dfc:	str	r1, [ip]
   26e00:	ldr	r2, [r4, #4]!
   26e04:	sdiv	r3, r1, r2
   26e08:	mls	r3, r2, r3, r1
   26e0c:	cmp	r3, #0
   26e10:	bne	26e58 <GetDataSlab+0x5874>
   26e14:	mov	r3, #0
   26e18:	str	r3, [ip], #4
   26e1c:	add	lr, lr, #4
   26e20:	ldr	r2, [lr]
   26e24:	sdiv	r3, r7, r2
   26e28:	mls	r3, r2, r3, r7
   26e2c:	cmp	r3, #0
   26e30:	beq	26dc8 <GetDataSlab+0x57e4>
   26e34:	ldr	r1, [lr, #-4]
   26e38:	ldr	r5, [sp, #196]	; 0xc4
   26e3c:	ldr	r5, [r5, r0, lsl #2]
   26e40:	sub	r3, r2, r3
   26e44:	mla	r3, r5, r1, r3
   26e48:	add	r8, r8, r3, lsl #3
   26e4c:	add	r7, r7, r3
   26e50:	b	26de8 <GetDataSlab+0x5804>
   26e54:	ldr	r0, [sp, #28]
   26e58:	add	r3, sp, #152	; 0x98
   26e5c:	add	r3, r3, r0, lsl #2
   26e60:	ldr	r3, [r3, #-120]	; 0xffffff88
   26e64:	add	r7, r7, r3
   26e68:	add	r8, r8, r3, lsl #3
   26e6c:	ldr	r3, [sp, #8]
   26e70:	add	r3, r3, sl
   26e74:	str	r3, [sp, #8]
   26e78:	ldr	r2, [sp, #12]
   26e7c:	cmp	r3, r2
   26e80:	bge	26f2c <GetDataSlab+0x5948>
   26e84:	ldr	r3, [sp, #196]	; 0xc4
   26e88:	ldr	r3, [r3]
   26e8c:	cmp	r3, #0
   26e90:	addne	r8, r8, r3, lsl #3
   26e94:	addne	r7, r7, r3
   26e98:	ldr	sl, [fp]
   26e9c:	cmp	sl, #0
   26ea0:	ble	26ed4 <GetDataSlab+0x58f0>
   26ea4:	sub	r6, r8, #8
   26ea8:	ldr	r3, [sp, #4]
   26eac:	ldr	r2, [sp, #8]
   26eb0:	add	r5, r3, r2, lsl #3
   26eb4:	mov	r4, #0
   26eb8:	ldrd	r0, [r6, #8]!
   26ebc:	bl	4ed48 <__aeabi_ul2d>
   26ec0:	strd	r0, [r5], #8
   26ec4:	add	r4, r4, #1
   26ec8:	ldr	sl, [fp]
   26ecc:	cmp	sl, r4
   26ed0:	bgt	26eb8 <GetDataSlab+0x58d4>
   26ed4:	ldr	r3, [sp, #192]	; 0xc0
   26ed8:	ldr	r2, [r3]
   26edc:	ldr	r3, [sp, #196]	; 0xc4
   26ee0:	ldr	r3, [r3]
   26ee4:	sub	r3, r2, r3
   26ee8:	add	r7, r7, r3
   26eec:	add	r8, r8, r3, lsl #3
   26ef0:	cmp	r9, #1
   26ef4:	ble	26e6c <GetDataSlab+0x5888>
   26ef8:	ldr	r3, [sp, #76]	; 0x4c
   26efc:	add	r3, r3, #1
   26f00:	str	r3, [sp, #76]	; 0x4c
   26f04:	ldr	r1, [fp, #4]
   26f08:	sdiv	r2, r3, r1
   26f0c:	mls	r3, r1, r2, r3
   26f10:	cmp	r3, #0
   26f14:	bne	26e54 <GetDataSlab+0x5870>
   26f18:	add	ip, sp, #76	; 0x4c
   26f1c:	add	r4, fp, #4
   26f20:	add	lr, sp, #112	; 0x70
   26f24:	ldr	r0, [sp, #28]
   26f28:	b	26e14 <GetDataSlab+0x5830>
   26f2c:	mov	r3, #0
   26f30:	b	251fc <GetDataSlab+0x3c18>
   26f34:	ldr	r3, [sp, #196]	; 0xc4
   26f38:	ldr	r2, [r3, r0, lsl #2]
   26f3c:	cmp	r2, #0
   26f40:	beq	26f54 <GetDataSlab+0x5970>
   26f44:	ldr	r3, [lr, #-4]
   26f48:	mul	r3, r3, r2
   26f4c:	add	r8, r8, r3, lsl #3
   26f50:	add	r7, r7, r3
   26f54:	add	r0, r0, #1
   26f58:	cmp	r9, r0
   26f5c:	beq	26fd8 <GetDataSlab+0x59f4>
   26f60:	ldr	r3, [ip]
   26f64:	add	r1, r3, #1
   26f68:	str	r1, [ip]
   26f6c:	ldr	r2, [r4, #4]!
   26f70:	sdiv	r3, r1, r2
   26f74:	mls	r3, r2, r3, r1
   26f78:	cmp	r3, #0
   26f7c:	bne	26fc4 <GetDataSlab+0x59e0>
   26f80:	mov	r3, #0
   26f84:	str	r3, [ip], #4
   26f88:	add	lr, lr, #4
   26f8c:	ldr	r2, [lr]
   26f90:	sdiv	r3, r7, r2
   26f94:	mls	r3, r2, r3, r7
   26f98:	cmp	r3, #0
   26f9c:	beq	26f34 <GetDataSlab+0x5950>
   26fa0:	ldr	r1, [lr, #-4]
   26fa4:	ldr	r5, [sp, #196]	; 0xc4
   26fa8:	ldr	r5, [r5, r0, lsl #2]
   26fac:	sub	r3, r2, r3
   26fb0:	mla	r3, r5, r1, r3
   26fb4:	add	r8, r8, r3, lsl #3
   26fb8:	add	r7, r7, r3
   26fbc:	b	26f54 <GetDataSlab+0x5970>
   26fc0:	mov	r0, #1
   26fc4:	add	r3, sp, #152	; 0x98
   26fc8:	add	r3, r3, r0, lsl #2
   26fcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   26fd0:	add	r7, r7, r3
   26fd4:	add	r8, r8, r3, lsl #3
   26fd8:	ldr	r3, [sp, #8]
   26fdc:	add	r3, r3, r6
   26fe0:	str	r3, [sp, #8]
   26fe4:	ldr	r2, [sp, #12]
   26fe8:	cmp	r3, r2
   26fec:	bge	270a8 <GetDataSlab+0x5ac4>
   26ff0:	ldr	r3, [sp, #196]	; 0xc4
   26ff4:	ldr	r3, [r3]
   26ff8:	cmp	r3, #0
   26ffc:	addne	r8, r8, r3, lsl #3
   27000:	addne	r7, r7, r3
   27004:	ldr	r6, [fp]
   27008:	cmp	r6, #0
   2700c:	ble	27048 <GetDataSlab+0x5a64>
   27010:	ldr	r3, [sp, #4]
   27014:	ldr	r2, [sp, #8]
   27018:	add	r5, r3, r2, lsl #3
   2701c:	mov	r4, #0
   27020:	ldrd	r0, [r8]
   27024:	bl	4ed48 <__aeabi_ul2d>
   27028:	strd	r0, [r5], #8
   2702c:	ldr	r3, [sl]
   27030:	add	r8, r8, r3, lsl #3
   27034:	add	r7, r7, r3
   27038:	add	r4, r4, #1
   2703c:	ldr	r6, [fp]
   27040:	cmp	r6, r4
   27044:	bgt	27020 <GetDataSlab+0x5a3c>
   27048:	ldr	r3, [sp, #192]	; 0xc0
   2704c:	ldr	r2, [r3]
   27050:	ldr	r3, [sp, #196]	; 0xc4
   27054:	ldr	r3, [r3]
   27058:	sub	r3, r2, r3
   2705c:	ldr	r2, [sl]
   27060:	mls	r3, r2, r6, r3
   27064:	add	r7, r7, r3
   27068:	add	r8, r8, r3, lsl #3
   2706c:	cmp	r9, #1
   27070:	ble	26fd8 <GetDataSlab+0x59f4>
   27074:	ldr	r3, [sp, #76]	; 0x4c
   27078:	add	r3, r3, #1
   2707c:	str	r3, [sp, #76]	; 0x4c
   27080:	ldr	r1, [fp, #4]
   27084:	sdiv	r2, r3, r1
   27088:	mls	r3, r1, r2, r3
   2708c:	cmp	r3, #0
   27090:	bne	26fc0 <GetDataSlab+0x59dc>
   27094:	add	ip, sp, #76	; 0x4c
   27098:	add	r4, fp, #4
   2709c:	add	lr, sp, #112	; 0x70
   270a0:	mov	r0, #1
   270a4:	b	26f80 <GetDataSlab+0x599c>
   270a8:	mov	r3, #0
   270ac:	b	251fc <GetDataSlab+0x3c18>
   270b0:	sub	r3, r8, #1
   270b4:	cmp	r3, #8
   270b8:	addls	pc, pc, r3, lsl #2
   270bc:	b	28c28 <GetDataSlab+0x7644>
   270c0:	b	2854c <GetDataSlab+0x6f68>
   270c4:	b	288b8 <GetDataSlab+0x72d4>
   270c8:	b	27e74 <GetDataSlab+0x6890>
   270cc:	b	281e0 <GetDataSlab+0x6bfc>
   270d0:	b	277a4 <GetDataSlab+0x61c0>
   270d4:	b	27b0c <GetDataSlab+0x6528>
   270d8:	b	27448 <GetDataSlab+0x5e64>
   270dc:	b	28c28 <GetDataSlab+0x7644>
   270e0:	b	270e4 <GetDataSlab+0x5b00>
   270e4:	ldr	r3, [sl]
   270e8:	str	r3, [sp, #28]
   270ec:	sub	r3, r3, #1
   270f0:	str	r3, [sp, #32]
   270f4:	ldr	r3, [sp, #192]	; 0xc0
   270f8:	ldr	r3, [r3]
   270fc:	str	r3, [sp, #112]	; 0x70
   27100:	ldr	r3, [fp]
   27104:	str	r3, [sp, #16]
   27108:	cmp	r9, #1
   2710c:	ble	27130 <GetDataSlab+0x5b4c>
   27110:	str	sl, [sp, #20]
   27114:	add	r8, sp, #36	; 0x24
   27118:	ldr	r5, [sp, #192]	; 0xc0
   2711c:	add	r6, sp, #112	; 0x70
   27120:	str	r5, [sp, #12]
   27124:	mov	r4, #1
   27128:	mov	lr, #0
   2712c:	b	3ba48 <GetDataSlab+0x1a464>
   27130:	mov	lr, #0
   27134:	b	3bae0 <GetDataSlab+0x1a4fc>
   27138:	ldr	r3, [sp, #16]
   2713c:	cmp	r3, #0
   27140:	ble	3a304 <GetDataSlab+0x18d20>
   27144:	mov	r3, #0
   27148:	str	r3, [sp, #12]
   2714c:	mov	r8, r3
   27150:	b	27210 <GetDataSlab+0x5c2c>
   27154:	ldr	r3, [sp, #196]	; 0xc4
   27158:	ldr	r3, [r3, r0, lsl #2]
   2715c:	cmp	r3, #0
   27160:	beq	27174 <GetDataSlab+0x5b90>
   27164:	ldr	r2, [r5, #-8]
   27168:	mul	r3, r2, r3
   2716c:	add	ip, ip, r3, lsl #3
   27170:	add	lr, lr, r3
   27174:	add	r0, r0, #1
   27178:	cmp	r9, r0
   2717c:	beq	271f4 <GetDataSlab+0x5c10>
   27180:	ldr	r3, [r4]
   27184:	add	r1, r3, #1
   27188:	str	r1, [r4]
   2718c:	ldr	r2, [r7, #4]!
   27190:	sdiv	r3, r1, r2
   27194:	mls	r3, r2, r3, r1
   27198:	cmp	r3, #0
   2719c:	bne	271e0 <GetDataSlab+0x5bfc>
   271a0:	str	r8, [r4], #4
   271a4:	ldr	r2, [r5], #4
   271a8:	sdiv	r3, lr, r2
   271ac:	mls	r3, r2, r3, lr
   271b0:	cmp	r3, #0
   271b4:	beq	27154 <GetDataSlab+0x5b70>
   271b8:	ldr	r1, [r5, #-8]
   271bc:	ldr	sl, [sp, #196]	; 0xc4
   271c0:	ldr	sl, [sl, r0, lsl #2]
   271c4:	str	sl, [sp, #8]
   271c8:	sub	r3, r2, r3
   271cc:	mla	r3, sl, r1, r3
   271d0:	add	ip, ip, r3, lsl #3
   271d4:	add	lr, lr, r3
   271d8:	b	27174 <GetDataSlab+0x5b90>
   271dc:	ldr	r0, [sp, #28]
   271e0:	add	r3, sp, #152	; 0x98
   271e4:	add	r3, r3, r0, lsl #2
   271e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   271ec:	add	lr, lr, r3
   271f0:	add	ip, ip, r3, lsl #3
   271f4:	ldr	r3, [sp, #12]
   271f8:	add	r3, r3, r6
   271fc:	str	r3, [sp, #12]
   27200:	ldr	r3, [sp, #16]
   27204:	ldr	r2, [sp, #12]
   27208:	cmp	r2, r3
   2720c:	bge	272b8 <GetDataSlab+0x5cd4>
   27210:	ldr	r3, [sp, #196]	; 0xc4
   27214:	ldr	r3, [r3]
   27218:	cmp	r3, #0
   2721c:	addne	ip, ip, r3, lsl #3
   27220:	addne	lr, lr, r3
   27224:	ldr	r6, [fp]
   27228:	cmp	r6, #0
   2722c:	ble	27260 <GetDataSlab+0x5c7c>
   27230:	mov	r1, ip
   27234:	ldr	r3, [sp, #4]
   27238:	ldr	r2, [sp, #12]
   2723c:	add	r2, r3, r2, lsl #2
   27240:	mov	r3, #0
   27244:	vldmia	r1!, {d7}
   27248:	vcvt.f32.f64	s15, d7
   2724c:	vstmia	r2!, {s15}
   27250:	add	r3, r3, #1
   27254:	ldr	r6, [fp]
   27258:	cmp	r6, r3
   2725c:	bgt	27244 <GetDataSlab+0x5c60>
   27260:	ldr	r3, [sp, #192]	; 0xc0
   27264:	ldr	r2, [r3]
   27268:	ldr	r3, [sp, #196]	; 0xc4
   2726c:	ldr	r3, [r3]
   27270:	sub	r3, r2, r3
   27274:	add	lr, lr, r3
   27278:	add	ip, ip, r3, lsl #3
   2727c:	cmp	r9, #1
   27280:	ble	271f4 <GetDataSlab+0x5c10>
   27284:	ldr	r3, [sp, #76]	; 0x4c
   27288:	add	r3, r3, #1
   2728c:	str	r3, [sp, #76]	; 0x4c
   27290:	ldr	r1, [fp, #4]
   27294:	sdiv	r2, r3, r1
   27298:	mls	r3, r1, r2, r3
   2729c:	cmp	r3, #0
   272a0:	bne	271dc <GetDataSlab+0x5bf8>
   272a4:	add	r4, sp, #76	; 0x4c
   272a8:	add	r7, fp, #4
   272ac:	add	r5, sp, #116	; 0x74
   272b0:	ldr	r0, [sp, #28]
   272b4:	b	271a0 <GetDataSlab+0x5bbc>
   272b8:	mov	r3, #0
   272bc:	b	251fc <GetDataSlab+0x3c18>
   272c0:	ldr	r3, [sp, #196]	; 0xc4
   272c4:	ldr	r2, [r3, r0, lsl #2]
   272c8:	cmp	r2, #0
   272cc:	beq	272e0 <GetDataSlab+0x5cfc>
   272d0:	ldr	r3, [r5, #-4]
   272d4:	mul	r3, r3, r2
   272d8:	add	ip, ip, r3, lsl #3
   272dc:	add	lr, lr, r3
   272e0:	add	r0, r0, #1
   272e4:	cmp	r9, r0
   272e8:	beq	27370 <GetDataSlab+0x5d8c>
   272ec:	ldr	r3, [r4]
   272f0:	add	r1, r3, #1
   272f4:	str	r1, [r4]
   272f8:	ldr	r2, [r7, #4]!
   272fc:	sdiv	r3, r1, r2
   27300:	mls	r3, r2, r3, r1
   27304:	cmp	r3, #0
   27308:	bne	2735c <GetDataSlab+0x5d78>
   2730c:	str	r8, [r4], #4
   27310:	add	r5, r5, #4
   27314:	ldr	r2, [r5]
   27318:	sdiv	r3, lr, r2
   2731c:	mls	r3, r2, r3, lr
   27320:	cmp	r3, #0
   27324:	beq	272c0 <GetDataSlab+0x5cdc>
   27328:	ldr	r1, [r5, #-4]
   2732c:	str	r1, [sp, #8]
   27330:	ldr	r1, [sp, #196]	; 0xc4
   27334:	ldr	r1, [r1, r0, lsl #2]
   27338:	str	r1, [sp, #12]
   2733c:	sub	r3, r2, r3
   27340:	mov	r2, r1
   27344:	ldr	r1, [sp, #8]
   27348:	mla	r3, r2, r1, r3
   2734c:	add	ip, ip, r3, lsl #3
   27350:	add	lr, lr, r3
   27354:	b	272e0 <GetDataSlab+0x5cfc>
   27358:	mov	r0, #1
   2735c:	add	r3, sp, #152	; 0x98
   27360:	add	r3, r3, r0, lsl #2
   27364:	ldr	r3, [r3, #-120]	; 0xffffff88
   27368:	add	lr, lr, r3
   2736c:	add	ip, ip, r3, lsl #3
   27370:	ldr	r3, [sp, #20]
   27374:	add	r3, r3, r6
   27378:	str	r3, [sp, #20]
   2737c:	ldr	r2, [sp, #16]
   27380:	cmp	r3, r2
   27384:	bge	27440 <GetDataSlab+0x5e5c>
   27388:	ldr	r3, [sp, #196]	; 0xc4
   2738c:	ldr	r3, [r3]
   27390:	cmp	r3, #0
   27394:	addne	ip, ip, r3, lsl #3
   27398:	addne	lr, lr, r3
   2739c:	ldr	r6, [fp]
   273a0:	cmp	r6, #0
   273a4:	ble	273e0 <GetDataSlab+0x5dfc>
   273a8:	ldr	r3, [sp, #4]
   273ac:	ldr	r2, [sp, #20]
   273b0:	add	r2, r3, r2, lsl #2
   273b4:	mov	r3, #0
   273b8:	vldr	d7, [ip]
   273bc:	vcvt.f32.f64	s15, d7
   273c0:	vstmia	r2!, {s15}
   273c4:	ldr	r1, [sl]
   273c8:	add	ip, ip, r1, lsl #3
   273cc:	add	lr, lr, r1
   273d0:	add	r3, r3, #1
   273d4:	ldr	r6, [fp]
   273d8:	cmp	r6, r3
   273dc:	bgt	273b8 <GetDataSlab+0x5dd4>
   273e0:	ldr	r3, [sp, #192]	; 0xc0
   273e4:	ldr	r2, [r3]
   273e8:	ldr	r3, [sp, #196]	; 0xc4
   273ec:	ldr	r3, [r3]
   273f0:	sub	r3, r2, r3
   273f4:	ldr	r2, [sl]
   273f8:	mls	r3, r2, r6, r3
   273fc:	add	lr, lr, r3
   27400:	add	ip, ip, r3, lsl #3
   27404:	cmp	r9, #1
   27408:	ble	27370 <GetDataSlab+0x5d8c>
   2740c:	ldr	r3, [sp, #76]	; 0x4c
   27410:	add	r3, r3, #1
   27414:	str	r3, [sp, #76]	; 0x4c
   27418:	ldr	r1, [fp, #4]
   2741c:	sdiv	r2, r3, r1
   27420:	mls	r3, r1, r2, r3
   27424:	cmp	r3, #0
   27428:	bne	27358 <GetDataSlab+0x5d74>
   2742c:	add	r4, sp, #76	; 0x4c
   27430:	add	r7, fp, #4
   27434:	add	r5, sp, #112	; 0x70
   27438:	mov	r0, #1
   2743c:	b	2730c <GetDataSlab+0x5d28>
   27440:	mov	r3, #0
   27444:	b	251fc <GetDataSlab+0x3c18>
   27448:	ldr	r3, [sl]
   2744c:	str	r3, [sp, #28]
   27450:	sub	r3, r3, #1
   27454:	str	r3, [sp, #32]
   27458:	ldr	r3, [sp, #192]	; 0xc0
   2745c:	ldr	r3, [r3]
   27460:	str	r3, [sp, #112]	; 0x70
   27464:	ldr	r3, [fp]
   27468:	str	r3, [sp, #16]
   2746c:	cmp	r9, #1
   27470:	ble	27494 <GetDataSlab+0x5eb0>
   27474:	str	sl, [sp, #20]
   27478:	add	r8, sp, #36	; 0x24
   2747c:	ldr	r5, [sp, #192]	; 0xc0
   27480:	add	r6, sp, #112	; 0x70
   27484:	str	r5, [sp, #12]
   27488:	mov	r4, #1
   2748c:	mov	lr, #0
   27490:	b	3b958 <GetDataSlab+0x1a374>
   27494:	mov	lr, #0
   27498:	b	3b9f0 <GetDataSlab+0x1a40c>
   2749c:	ldr	r3, [sp, #16]
   274a0:	cmp	r3, #0
   274a4:	ble	3a30c <GetDataSlab+0x18d28>
   274a8:	mov	r3, #0
   274ac:	str	r3, [sp, #12]
   274b0:	mov	r8, r3
   274b4:	b	27574 <GetDataSlab+0x5f90>
   274b8:	ldr	r3, [sp, #196]	; 0xc4
   274bc:	ldr	r3, [r3, r0, lsl #2]
   274c0:	cmp	r3, #0
   274c4:	beq	274d8 <GetDataSlab+0x5ef4>
   274c8:	ldr	r2, [r5, #-8]
   274cc:	mul	r3, r2, r3
   274d0:	add	ip, ip, r3, lsl #2
   274d4:	add	lr, lr, r3
   274d8:	add	r0, r0, #1
   274dc:	cmp	r9, r0
   274e0:	beq	27558 <GetDataSlab+0x5f74>
   274e4:	ldr	r3, [r4]
   274e8:	add	r1, r3, #1
   274ec:	str	r1, [r4]
   274f0:	ldr	r2, [r7, #4]!
   274f4:	sdiv	r3, r1, r2
   274f8:	mls	r3, r2, r3, r1
   274fc:	cmp	r3, #0
   27500:	bne	27544 <GetDataSlab+0x5f60>
   27504:	str	r8, [r4], #4
   27508:	ldr	r2, [r5], #4
   2750c:	sdiv	r3, lr, r2
   27510:	mls	r3, r2, r3, lr
   27514:	cmp	r3, #0
   27518:	beq	274b8 <GetDataSlab+0x5ed4>
   2751c:	ldr	r1, [r5, #-8]
   27520:	ldr	sl, [sp, #196]	; 0xc4
   27524:	ldr	sl, [sl, r0, lsl #2]
   27528:	str	sl, [sp, #8]
   2752c:	sub	r3, r2, r3
   27530:	mla	r3, sl, r1, r3
   27534:	add	ip, ip, r3, lsl #2
   27538:	add	lr, lr, r3
   2753c:	b	274d8 <GetDataSlab+0x5ef4>
   27540:	ldr	r0, [sp, #28]
   27544:	add	r3, sp, #152	; 0x98
   27548:	add	r3, r3, r0, lsl #2
   2754c:	ldr	r3, [r3, #-120]	; 0xffffff88
   27550:	add	lr, lr, r3
   27554:	add	ip, ip, r3, lsl #2
   27558:	ldr	r3, [sp, #12]
   2755c:	add	r3, r3, r6
   27560:	str	r3, [sp, #12]
   27564:	ldr	r3, [sp, #16]
   27568:	ldr	r2, [sp, #12]
   2756c:	cmp	r2, r3
   27570:	bge	27618 <GetDataSlab+0x6034>
   27574:	ldr	r3, [sp, #196]	; 0xc4
   27578:	ldr	r3, [r3]
   2757c:	cmp	r3, #0
   27580:	addne	ip, ip, r3, lsl #2
   27584:	addne	lr, lr, r3
   27588:	ldr	r6, [fp]
   2758c:	cmp	r6, #0
   27590:	ble	275c0 <GetDataSlab+0x5fdc>
   27594:	mov	r0, ip
   27598:	ldr	r3, [sp, #4]
   2759c:	ldr	r2, [sp, #12]
   275a0:	add	r1, r3, r2, lsl #2
   275a4:	mov	r2, #0
   275a8:	ldr	r3, [r0], #4
   275ac:	str	r3, [r1], #4
   275b0:	add	r2, r2, #1
   275b4:	ldr	r6, [fp]
   275b8:	cmp	r6, r2
   275bc:	bgt	275a8 <GetDataSlab+0x5fc4>
   275c0:	ldr	r3, [sp, #192]	; 0xc0
   275c4:	ldr	r2, [r3]
   275c8:	ldr	r3, [sp, #196]	; 0xc4
   275cc:	ldr	r3, [r3]
   275d0:	sub	r3, r2, r3
   275d4:	add	lr, lr, r3
   275d8:	add	ip, ip, r3, lsl #2
   275dc:	cmp	r9, #1
   275e0:	ble	27558 <GetDataSlab+0x5f74>
   275e4:	ldr	r3, [sp, #76]	; 0x4c
   275e8:	add	r3, r3, #1
   275ec:	str	r3, [sp, #76]	; 0x4c
   275f0:	ldr	r1, [fp, #4]
   275f4:	sdiv	r2, r3, r1
   275f8:	mls	r3, r1, r2, r3
   275fc:	cmp	r3, #0
   27600:	bne	27540 <GetDataSlab+0x5f5c>
   27604:	add	r4, sp, #76	; 0x4c
   27608:	add	r7, fp, #4
   2760c:	add	r5, sp, #116	; 0x74
   27610:	ldr	r0, [sp, #28]
   27614:	b	27504 <GetDataSlab+0x5f20>
   27618:	mov	r3, #0
   2761c:	b	251fc <GetDataSlab+0x3c18>
   27620:	ldr	r3, [sp, #196]	; 0xc4
   27624:	ldr	r2, [r3, r0, lsl #2]
   27628:	cmp	r2, #0
   2762c:	beq	27640 <GetDataSlab+0x605c>
   27630:	ldr	r3, [r5, #-4]
   27634:	mul	r3, r3, r2
   27638:	add	ip, ip, r3, lsl #2
   2763c:	add	lr, lr, r3
   27640:	add	r0, r0, #1
   27644:	cmp	r9, r0
   27648:	beq	276d0 <GetDataSlab+0x60ec>
   2764c:	ldr	r3, [r4]
   27650:	add	r1, r3, #1
   27654:	str	r1, [r4]
   27658:	ldr	r2, [r7, #4]!
   2765c:	sdiv	r3, r1, r2
   27660:	mls	r3, r2, r3, r1
   27664:	cmp	r3, #0
   27668:	bne	276bc <GetDataSlab+0x60d8>
   2766c:	str	r8, [r4], #4
   27670:	add	r5, r5, #4
   27674:	ldr	r2, [r5]
   27678:	sdiv	r3, lr, r2
   2767c:	mls	r3, r2, r3, lr
   27680:	cmp	r3, #0
   27684:	beq	27620 <GetDataSlab+0x603c>
   27688:	ldr	r1, [r5, #-4]
   2768c:	str	r1, [sp, #8]
   27690:	ldr	r1, [sp, #196]	; 0xc4
   27694:	ldr	r1, [r1, r0, lsl #2]
   27698:	str	r1, [sp, #12]
   2769c:	sub	r3, r2, r3
   276a0:	mov	r2, r1
   276a4:	ldr	r1, [sp, #8]
   276a8:	mla	r3, r2, r1, r3
   276ac:	add	ip, ip, r3, lsl #2
   276b0:	add	lr, lr, r3
   276b4:	b	27640 <GetDataSlab+0x605c>
   276b8:	mov	r0, #1
   276bc:	add	r3, sp, #152	; 0x98
   276c0:	add	r3, r3, r0, lsl #2
   276c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   276c8:	add	lr, lr, r3
   276cc:	add	ip, ip, r3, lsl #2
   276d0:	ldr	r3, [sp, #20]
   276d4:	add	r3, r3, r6
   276d8:	str	r3, [sp, #20]
   276dc:	ldr	r2, [sp, #16]
   276e0:	cmp	r3, r2
   276e4:	bge	2779c <GetDataSlab+0x61b8>
   276e8:	ldr	r3, [sp, #196]	; 0xc4
   276ec:	ldr	r3, [r3]
   276f0:	cmp	r3, #0
   276f4:	addne	ip, ip, r3, lsl #2
   276f8:	addne	lr, lr, r3
   276fc:	ldr	r6, [fp]
   27700:	cmp	r6, #0
   27704:	ble	2773c <GetDataSlab+0x6158>
   27708:	ldr	r3, [sp, #4]
   2770c:	ldr	r2, [sp, #20]
   27710:	add	r2, r3, r2, lsl #2
   27714:	mov	r3, #0
   27718:	ldr	r1, [ip]
   2771c:	str	r1, [r2], #4
   27720:	ldr	r1, [sl]
   27724:	add	ip, ip, r1, lsl #2
   27728:	add	lr, lr, r1
   2772c:	add	r3, r3, #1
   27730:	ldr	r6, [fp]
   27734:	cmp	r6, r3
   27738:	bgt	27718 <GetDataSlab+0x6134>
   2773c:	ldr	r3, [sp, #192]	; 0xc0
   27740:	ldr	r2, [r3]
   27744:	ldr	r3, [sp, #196]	; 0xc4
   27748:	ldr	r3, [r3]
   2774c:	sub	r3, r2, r3
   27750:	ldr	r2, [sl]
   27754:	mls	r3, r2, r6, r3
   27758:	add	lr, lr, r3
   2775c:	add	ip, ip, r3, lsl #2
   27760:	cmp	r9, #1
   27764:	ble	276d0 <GetDataSlab+0x60ec>
   27768:	ldr	r3, [sp, #76]	; 0x4c
   2776c:	add	r3, r3, #1
   27770:	str	r3, [sp, #76]	; 0x4c
   27774:	ldr	r1, [fp, #4]
   27778:	sdiv	r2, r3, r1
   2777c:	mls	r3, r1, r2, r3
   27780:	cmp	r3, #0
   27784:	bne	276b8 <GetDataSlab+0x60d4>
   27788:	add	r4, sp, #76	; 0x4c
   2778c:	add	r7, fp, #4
   27790:	add	r5, sp, #112	; 0x70
   27794:	mov	r0, #1
   27798:	b	2766c <GetDataSlab+0x6088>
   2779c:	mov	r3, #0
   277a0:	b	251fc <GetDataSlab+0x3c18>
   277a4:	ldr	r3, [sl]
   277a8:	str	r3, [sp, #28]
   277ac:	sub	r3, r3, #1
   277b0:	str	r3, [sp, #32]
   277b4:	ldr	r3, [sp, #192]	; 0xc0
   277b8:	ldr	r3, [r3]
   277bc:	str	r3, [sp, #112]	; 0x70
   277c0:	ldr	r3, [fp]
   277c4:	str	r3, [sp, #16]
   277c8:	cmp	r9, #1
   277cc:	ble	277f0 <GetDataSlab+0x620c>
   277d0:	str	sl, [sp, #20]
   277d4:	add	r8, sp, #36	; 0x24
   277d8:	ldr	r5, [sp, #192]	; 0xc0
   277dc:	add	r6, sp, #112	; 0x70
   277e0:	str	r5, [sp, #12]
   277e4:	mov	r4, #1
   277e8:	mov	lr, #0
   277ec:	b	3b778 <GetDataSlab+0x1a194>
   277f0:	mov	lr, #0
   277f4:	b	3b810 <GetDataSlab+0x1a22c>
   277f8:	ldr	r3, [sp, #16]
   277fc:	cmp	r3, #0
   27800:	ble	3a314 <GetDataSlab+0x18d30>
   27804:	mov	r3, #0
   27808:	str	r3, [sp, #12]
   2780c:	mov	r8, r3
   27810:	b	278d0 <GetDataSlab+0x62ec>
   27814:	ldr	r3, [sp, #196]	; 0xc4
   27818:	ldr	r3, [r3, r0, lsl #2]
   2781c:	cmp	r3, #0
   27820:	beq	27834 <GetDataSlab+0x6250>
   27824:	ldr	r2, [r5, #-8]
   27828:	mul	r3, r2, r3
   2782c:	add	ip, ip, r3, lsl #2
   27830:	add	lr, lr, r3
   27834:	add	r0, r0, #1
   27838:	cmp	r9, r0
   2783c:	beq	278b4 <GetDataSlab+0x62d0>
   27840:	ldr	r3, [r4]
   27844:	add	r1, r3, #1
   27848:	str	r1, [r4]
   2784c:	ldr	r2, [r7, #4]!
   27850:	sdiv	r3, r1, r2
   27854:	mls	r3, r2, r3, r1
   27858:	cmp	r3, #0
   2785c:	bne	278a0 <GetDataSlab+0x62bc>
   27860:	str	r8, [r4], #4
   27864:	ldr	r2, [r5], #4
   27868:	sdiv	r3, lr, r2
   2786c:	mls	r3, r2, r3, lr
   27870:	cmp	r3, #0
   27874:	beq	27814 <GetDataSlab+0x6230>
   27878:	ldr	r1, [r5, #-8]
   2787c:	ldr	sl, [sp, #196]	; 0xc4
   27880:	ldr	sl, [sl, r0, lsl #2]
   27884:	str	sl, [sp, #8]
   27888:	sub	r3, r2, r3
   2788c:	mla	r3, sl, r1, r3
   27890:	add	ip, ip, r3, lsl #2
   27894:	add	lr, lr, r3
   27898:	b	27834 <GetDataSlab+0x6250>
   2789c:	ldr	r0, [sp, #28]
   278a0:	add	r3, sp, #152	; 0x98
   278a4:	add	r3, r3, r0, lsl #2
   278a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   278ac:	add	lr, lr, r3
   278b0:	add	ip, ip, r3, lsl #2
   278b4:	ldr	r3, [sp, #12]
   278b8:	add	r3, r3, r6
   278bc:	str	r3, [sp, #12]
   278c0:	ldr	r3, [sp, #16]
   278c4:	ldr	r2, [sp, #12]
   278c8:	cmp	r2, r3
   278cc:	bge	2797c <GetDataSlab+0x6398>
   278d0:	ldr	r3, [sp, #196]	; 0xc4
   278d4:	ldr	r3, [r3]
   278d8:	cmp	r3, #0
   278dc:	addne	ip, ip, r3, lsl #2
   278e0:	addne	lr, lr, r3
   278e4:	ldr	r6, [fp]
   278e8:	cmp	r6, #0
   278ec:	ble	27924 <GetDataSlab+0x6340>
   278f0:	sub	r1, ip, #4
   278f4:	ldr	r3, [sp, #4]
   278f8:	ldr	r2, [sp, #12]
   278fc:	add	r2, r3, r2, lsl #2
   27900:	mov	r3, #0
   27904:	ldr	r0, [r1, #4]!
   27908:	vmov	s15, r0
   2790c:	vcvt.f32.s32	s15, s15
   27910:	vstmia	r2!, {s15}
   27914:	add	r3, r3, #1
   27918:	ldr	r6, [fp]
   2791c:	cmp	r6, r3
   27920:	bgt	27904 <GetDataSlab+0x6320>
   27924:	ldr	r3, [sp, #192]	; 0xc0
   27928:	ldr	r2, [r3]
   2792c:	ldr	r3, [sp, #196]	; 0xc4
   27930:	ldr	r3, [r3]
   27934:	sub	r3, r2, r3
   27938:	add	lr, lr, r3
   2793c:	add	ip, ip, r3, lsl #2
   27940:	cmp	r9, #1
   27944:	ble	278b4 <GetDataSlab+0x62d0>
   27948:	ldr	r3, [sp, #76]	; 0x4c
   2794c:	add	r3, r3, #1
   27950:	str	r3, [sp, #76]	; 0x4c
   27954:	ldr	r1, [fp, #4]
   27958:	sdiv	r2, r3, r1
   2795c:	mls	r3, r1, r2, r3
   27960:	cmp	r3, #0
   27964:	bne	2789c <GetDataSlab+0x62b8>
   27968:	add	r4, sp, #76	; 0x4c
   2796c:	add	r7, fp, #4
   27970:	add	r5, sp, #116	; 0x74
   27974:	ldr	r0, [sp, #28]
   27978:	b	27860 <GetDataSlab+0x627c>
   2797c:	mov	r3, #0
   27980:	b	251fc <GetDataSlab+0x3c18>
   27984:	ldr	r3, [sp, #196]	; 0xc4
   27988:	ldr	r2, [r3, r0, lsl #2]
   2798c:	cmp	r2, #0
   27990:	beq	279a4 <GetDataSlab+0x63c0>
   27994:	ldr	r3, [r5, #-4]
   27998:	mul	r3, r3, r2
   2799c:	add	ip, ip, r3, lsl #2
   279a0:	add	lr, lr, r3
   279a4:	add	r0, r0, #1
   279a8:	cmp	r9, r0
   279ac:	beq	27a34 <GetDataSlab+0x6450>
   279b0:	ldr	r3, [r4]
   279b4:	add	r1, r3, #1
   279b8:	str	r1, [r4]
   279bc:	ldr	r2, [r7, #4]!
   279c0:	sdiv	r3, r1, r2
   279c4:	mls	r3, r2, r3, r1
   279c8:	cmp	r3, #0
   279cc:	bne	27a20 <GetDataSlab+0x643c>
   279d0:	str	r8, [r4], #4
   279d4:	add	r5, r5, #4
   279d8:	ldr	r2, [r5]
   279dc:	sdiv	r3, lr, r2
   279e0:	mls	r3, r2, r3, lr
   279e4:	cmp	r3, #0
   279e8:	beq	27984 <GetDataSlab+0x63a0>
   279ec:	ldr	r1, [r5, #-4]
   279f0:	str	r1, [sp, #8]
   279f4:	ldr	r1, [sp, #196]	; 0xc4
   279f8:	ldr	r1, [r1, r0, lsl #2]
   279fc:	str	r1, [sp, #12]
   27a00:	sub	r3, r2, r3
   27a04:	mov	r2, r1
   27a08:	ldr	r1, [sp, #8]
   27a0c:	mla	r3, r2, r1, r3
   27a10:	add	ip, ip, r3, lsl #2
   27a14:	add	lr, lr, r3
   27a18:	b	279a4 <GetDataSlab+0x63c0>
   27a1c:	mov	r0, #1
   27a20:	add	r3, sp, #152	; 0x98
   27a24:	add	r3, r3, r0, lsl #2
   27a28:	ldr	r3, [r3, #-120]	; 0xffffff88
   27a2c:	add	lr, lr, r3
   27a30:	add	ip, ip, r3, lsl #2
   27a34:	ldr	r3, [sp, #20]
   27a38:	add	r3, r3, r6
   27a3c:	str	r3, [sp, #20]
   27a40:	ldr	r2, [sp, #16]
   27a44:	cmp	r3, r2
   27a48:	bge	27b04 <GetDataSlab+0x6520>
   27a4c:	ldr	r3, [sp, #196]	; 0xc4
   27a50:	ldr	r3, [r3]
   27a54:	cmp	r3, #0
   27a58:	addne	ip, ip, r3, lsl #2
   27a5c:	addne	lr, lr, r3
   27a60:	ldr	r6, [fp]
   27a64:	cmp	r6, #0
   27a68:	ble	27aa4 <GetDataSlab+0x64c0>
   27a6c:	ldr	r3, [sp, #4]
   27a70:	ldr	r2, [sp, #20]
   27a74:	add	r2, r3, r2, lsl #2
   27a78:	mov	r3, #0
   27a7c:	vldr	s15, [ip]
   27a80:	vcvt.f32.s32	s15, s15
   27a84:	vstmia	r2!, {s15}
   27a88:	ldr	r1, [sl]
   27a8c:	add	ip, ip, r1, lsl #2
   27a90:	add	lr, lr, r1
   27a94:	add	r3, r3, #1
   27a98:	ldr	r6, [fp]
   27a9c:	cmp	r6, r3
   27aa0:	bgt	27a7c <GetDataSlab+0x6498>
   27aa4:	ldr	r3, [sp, #192]	; 0xc0
   27aa8:	ldr	r2, [r3]
   27aac:	ldr	r3, [sp, #196]	; 0xc4
   27ab0:	ldr	r3, [r3]
   27ab4:	sub	r3, r2, r3
   27ab8:	ldr	r2, [sl]
   27abc:	mls	r3, r2, r6, r3
   27ac0:	add	lr, lr, r3
   27ac4:	add	ip, ip, r3, lsl #2
   27ac8:	cmp	r9, #1
   27acc:	ble	27a34 <GetDataSlab+0x6450>
   27ad0:	ldr	r3, [sp, #76]	; 0x4c
   27ad4:	add	r3, r3, #1
   27ad8:	str	r3, [sp, #76]	; 0x4c
   27adc:	ldr	r1, [fp, #4]
   27ae0:	sdiv	r2, r3, r1
   27ae4:	mls	r3, r1, r2, r3
   27ae8:	cmp	r3, #0
   27aec:	bne	27a1c <GetDataSlab+0x6438>
   27af0:	add	r4, sp, #76	; 0x4c
   27af4:	add	r7, fp, #4
   27af8:	add	r5, sp, #112	; 0x70
   27afc:	mov	r0, #1
   27b00:	b	279d0 <GetDataSlab+0x63ec>
   27b04:	mov	r3, #0
   27b08:	b	251fc <GetDataSlab+0x3c18>
   27b0c:	ldr	r3, [sl]
   27b10:	str	r3, [sp, #28]
   27b14:	sub	r3, r3, #1
   27b18:	str	r3, [sp, #32]
   27b1c:	ldr	r3, [sp, #192]	; 0xc0
   27b20:	ldr	r3, [r3]
   27b24:	str	r3, [sp, #112]	; 0x70
   27b28:	ldr	r3, [fp]
   27b2c:	str	r3, [sp, #16]
   27b30:	cmp	r9, #1
   27b34:	ble	27b58 <GetDataSlab+0x6574>
   27b38:	str	sl, [sp, #20]
   27b3c:	add	r8, sp, #36	; 0x24
   27b40:	ldr	r5, [sp, #192]	; 0xc0
   27b44:	add	r6, sp, #112	; 0x70
   27b48:	str	r5, [sp, #12]
   27b4c:	mov	r4, #1
   27b50:	mov	lr, #0
   27b54:	b	3b868 <GetDataSlab+0x1a284>
   27b58:	mov	lr, #0
   27b5c:	b	3b900 <GetDataSlab+0x1a31c>
   27b60:	ldr	r3, [sp, #16]
   27b64:	cmp	r3, #0
   27b68:	ble	3a31c <GetDataSlab+0x18d38>
   27b6c:	mov	r3, #0
   27b70:	str	r3, [sp, #12]
   27b74:	mov	r8, r3
   27b78:	b	27c38 <GetDataSlab+0x6654>
   27b7c:	ldr	r3, [sp, #196]	; 0xc4
   27b80:	ldr	r3, [r3, r0, lsl #2]
   27b84:	cmp	r3, #0
   27b88:	beq	27b9c <GetDataSlab+0x65b8>
   27b8c:	ldr	r2, [r5, #-8]
   27b90:	mul	r3, r2, r3
   27b94:	add	ip, ip, r3, lsl #2
   27b98:	add	lr, lr, r3
   27b9c:	add	r0, r0, #1
   27ba0:	cmp	r9, r0
   27ba4:	beq	27c1c <GetDataSlab+0x6638>
   27ba8:	ldr	r3, [r4]
   27bac:	add	r1, r3, #1
   27bb0:	str	r1, [r4]
   27bb4:	ldr	r2, [r7, #4]!
   27bb8:	sdiv	r3, r1, r2
   27bbc:	mls	r3, r2, r3, r1
   27bc0:	cmp	r3, #0
   27bc4:	bne	27c08 <GetDataSlab+0x6624>
   27bc8:	str	r8, [r4], #4
   27bcc:	ldr	r2, [r5], #4
   27bd0:	sdiv	r3, lr, r2
   27bd4:	mls	r3, r2, r3, lr
   27bd8:	cmp	r3, #0
   27bdc:	beq	27b7c <GetDataSlab+0x6598>
   27be0:	ldr	r1, [r5, #-8]
   27be4:	ldr	sl, [sp, #196]	; 0xc4
   27be8:	ldr	sl, [sl, r0, lsl #2]
   27bec:	str	sl, [sp, #8]
   27bf0:	sub	r3, r2, r3
   27bf4:	mla	r3, sl, r1, r3
   27bf8:	add	ip, ip, r3, lsl #2
   27bfc:	add	lr, lr, r3
   27c00:	b	27b9c <GetDataSlab+0x65b8>
   27c04:	ldr	r0, [sp, #28]
   27c08:	add	r3, sp, #152	; 0x98
   27c0c:	add	r3, r3, r0, lsl #2
   27c10:	ldr	r3, [r3, #-120]	; 0xffffff88
   27c14:	add	lr, lr, r3
   27c18:	add	ip, ip, r3, lsl #2
   27c1c:	ldr	r3, [sp, #12]
   27c20:	add	r3, r3, r6
   27c24:	str	r3, [sp, #12]
   27c28:	ldr	r3, [sp, #16]
   27c2c:	ldr	r2, [sp, #12]
   27c30:	cmp	r2, r3
   27c34:	bge	27ce4 <GetDataSlab+0x6700>
   27c38:	ldr	r3, [sp, #196]	; 0xc4
   27c3c:	ldr	r3, [r3]
   27c40:	cmp	r3, #0
   27c44:	addne	ip, ip, r3, lsl #2
   27c48:	addne	lr, lr, r3
   27c4c:	ldr	r6, [fp]
   27c50:	cmp	r6, #0
   27c54:	ble	27c8c <GetDataSlab+0x66a8>
   27c58:	sub	r1, ip, #4
   27c5c:	ldr	r3, [sp, #4]
   27c60:	ldr	r2, [sp, #12]
   27c64:	add	r2, r3, r2, lsl #2
   27c68:	mov	r3, #0
   27c6c:	ldr	r0, [r1, #4]!
   27c70:	vmov	s15, r0
   27c74:	vcvt.f32.u32	s15, s15
   27c78:	vstmia	r2!, {s15}
   27c7c:	add	r3, r3, #1
   27c80:	ldr	r6, [fp]
   27c84:	cmp	r6, r3
   27c88:	bgt	27c6c <GetDataSlab+0x6688>
   27c8c:	ldr	r3, [sp, #192]	; 0xc0
   27c90:	ldr	r2, [r3]
   27c94:	ldr	r3, [sp, #196]	; 0xc4
   27c98:	ldr	r3, [r3]
   27c9c:	sub	r3, r2, r3
   27ca0:	add	lr, lr, r3
   27ca4:	add	ip, ip, r3, lsl #2
   27ca8:	cmp	r9, #1
   27cac:	ble	27c1c <GetDataSlab+0x6638>
   27cb0:	ldr	r3, [sp, #76]	; 0x4c
   27cb4:	add	r3, r3, #1
   27cb8:	str	r3, [sp, #76]	; 0x4c
   27cbc:	ldr	r1, [fp, #4]
   27cc0:	sdiv	r2, r3, r1
   27cc4:	mls	r3, r1, r2, r3
   27cc8:	cmp	r3, #0
   27ccc:	bne	27c04 <GetDataSlab+0x6620>
   27cd0:	add	r4, sp, #76	; 0x4c
   27cd4:	add	r7, fp, #4
   27cd8:	add	r5, sp, #116	; 0x74
   27cdc:	ldr	r0, [sp, #28]
   27ce0:	b	27bc8 <GetDataSlab+0x65e4>
   27ce4:	mov	r3, #0
   27ce8:	b	251fc <GetDataSlab+0x3c18>
   27cec:	ldr	r3, [sp, #196]	; 0xc4
   27cf0:	ldr	r2, [r3, r0, lsl #2]
   27cf4:	cmp	r2, #0
   27cf8:	beq	27d0c <GetDataSlab+0x6728>
   27cfc:	ldr	r3, [r5, #-4]
   27d00:	mul	r3, r3, r2
   27d04:	add	ip, ip, r3, lsl #2
   27d08:	add	lr, lr, r3
   27d0c:	add	r0, r0, #1
   27d10:	cmp	r9, r0
   27d14:	beq	27d9c <GetDataSlab+0x67b8>
   27d18:	ldr	r3, [r4]
   27d1c:	add	r1, r3, #1
   27d20:	str	r1, [r4]
   27d24:	ldr	r2, [r7, #4]!
   27d28:	sdiv	r3, r1, r2
   27d2c:	mls	r3, r2, r3, r1
   27d30:	cmp	r3, #0
   27d34:	bne	27d88 <GetDataSlab+0x67a4>
   27d38:	str	r8, [r4], #4
   27d3c:	add	r5, r5, #4
   27d40:	ldr	r2, [r5]
   27d44:	sdiv	r3, lr, r2
   27d48:	mls	r3, r2, r3, lr
   27d4c:	cmp	r3, #0
   27d50:	beq	27cec <GetDataSlab+0x6708>
   27d54:	ldr	r1, [r5, #-4]
   27d58:	str	r1, [sp, #8]
   27d5c:	ldr	r1, [sp, #196]	; 0xc4
   27d60:	ldr	r1, [r1, r0, lsl #2]
   27d64:	str	r1, [sp, #12]
   27d68:	sub	r3, r2, r3
   27d6c:	mov	r2, r1
   27d70:	ldr	r1, [sp, #8]
   27d74:	mla	r3, r2, r1, r3
   27d78:	add	ip, ip, r3, lsl #2
   27d7c:	add	lr, lr, r3
   27d80:	b	27d0c <GetDataSlab+0x6728>
   27d84:	mov	r0, #1
   27d88:	add	r3, sp, #152	; 0x98
   27d8c:	add	r3, r3, r0, lsl #2
   27d90:	ldr	r3, [r3, #-120]	; 0xffffff88
   27d94:	add	lr, lr, r3
   27d98:	add	ip, ip, r3, lsl #2
   27d9c:	ldr	r3, [sp, #20]
   27da0:	add	r3, r3, r6
   27da4:	str	r3, [sp, #20]
   27da8:	ldr	r2, [sp, #16]
   27dac:	cmp	r3, r2
   27db0:	bge	27e6c <GetDataSlab+0x6888>
   27db4:	ldr	r3, [sp, #196]	; 0xc4
   27db8:	ldr	r3, [r3]
   27dbc:	cmp	r3, #0
   27dc0:	addne	ip, ip, r3, lsl #2
   27dc4:	addne	lr, lr, r3
   27dc8:	ldr	r6, [fp]
   27dcc:	cmp	r6, #0
   27dd0:	ble	27e0c <GetDataSlab+0x6828>
   27dd4:	ldr	r3, [sp, #4]
   27dd8:	ldr	r2, [sp, #20]
   27ddc:	add	r2, r3, r2, lsl #2
   27de0:	mov	r3, #0
   27de4:	vldr	s15, [ip]
   27de8:	vcvt.f32.u32	s15, s15
   27dec:	vstmia	r2!, {s15}
   27df0:	ldr	r1, [sl]
   27df4:	add	ip, ip, r1, lsl #2
   27df8:	add	lr, lr, r1
   27dfc:	add	r3, r3, #1
   27e00:	ldr	r6, [fp]
   27e04:	cmp	r6, r3
   27e08:	bgt	27de4 <GetDataSlab+0x6800>
   27e0c:	ldr	r3, [sp, #192]	; 0xc0
   27e10:	ldr	r2, [r3]
   27e14:	ldr	r3, [sp, #196]	; 0xc4
   27e18:	ldr	r3, [r3]
   27e1c:	sub	r3, r2, r3
   27e20:	ldr	r2, [sl]
   27e24:	mls	r3, r2, r6, r3
   27e28:	add	lr, lr, r3
   27e2c:	add	ip, ip, r3, lsl #2
   27e30:	cmp	r9, #1
   27e34:	ble	27d9c <GetDataSlab+0x67b8>
   27e38:	ldr	r3, [sp, #76]	; 0x4c
   27e3c:	add	r3, r3, #1
   27e40:	str	r3, [sp, #76]	; 0x4c
   27e44:	ldr	r1, [fp, #4]
   27e48:	sdiv	r2, r3, r1
   27e4c:	mls	r3, r1, r2, r3
   27e50:	cmp	r3, #0
   27e54:	bne	27d84 <GetDataSlab+0x67a0>
   27e58:	add	r4, sp, #76	; 0x4c
   27e5c:	add	r7, fp, #4
   27e60:	add	r5, sp, #112	; 0x70
   27e64:	mov	r0, #1
   27e68:	b	27d38 <GetDataSlab+0x6754>
   27e6c:	mov	r3, #0
   27e70:	b	251fc <GetDataSlab+0x3c18>
   27e74:	ldr	r3, [sl]
   27e78:	str	r3, [sp, #28]
   27e7c:	sub	r3, r3, #1
   27e80:	str	r3, [sp, #32]
   27e84:	ldr	r3, [sp, #192]	; 0xc0
   27e88:	ldr	r3, [r3]
   27e8c:	str	r3, [sp, #112]	; 0x70
   27e90:	ldr	r3, [fp]
   27e94:	str	r3, [sp, #16]
   27e98:	cmp	r9, #1
   27e9c:	ble	27ec0 <GetDataSlab+0x68dc>
   27ea0:	str	sl, [sp, #20]
   27ea4:	add	r8, sp, #36	; 0x24
   27ea8:	ldr	r5, [sp, #192]	; 0xc0
   27eac:	add	r6, sp, #112	; 0x70
   27eb0:	str	r5, [sp, #12]
   27eb4:	mov	r4, #1
   27eb8:	mov	lr, #0
   27ebc:	b	3b598 <GetDataSlab+0x19fb4>
   27ec0:	mov	lr, #0
   27ec4:	b	3b630 <GetDataSlab+0x1a04c>
   27ec8:	ldr	r3, [sp, #16]
   27ecc:	cmp	r3, #0
   27ed0:	ble	3a324 <GetDataSlab+0x18d40>
   27ed4:	mov	r3, #0
   27ed8:	str	r3, [sp, #12]
   27edc:	mov	r8, r3
   27ee0:	b	27fa0 <GetDataSlab+0x69bc>
   27ee4:	ldr	r3, [sp, #196]	; 0xc4
   27ee8:	ldr	r3, [r3, r0, lsl #2]
   27eec:	cmp	r3, #0
   27ef0:	beq	27f04 <GetDataSlab+0x6920>
   27ef4:	ldr	r2, [r5, #-8]
   27ef8:	mul	r3, r2, r3
   27efc:	add	ip, ip, r3, lsl #1
   27f00:	add	lr, lr, r3
   27f04:	add	r0, r0, #1
   27f08:	cmp	r9, r0
   27f0c:	beq	27f84 <GetDataSlab+0x69a0>
   27f10:	ldr	r3, [r4]
   27f14:	add	r1, r3, #1
   27f18:	str	r1, [r4]
   27f1c:	ldr	r2, [r7, #4]!
   27f20:	sdiv	r3, r1, r2
   27f24:	mls	r3, r2, r3, r1
   27f28:	cmp	r3, #0
   27f2c:	bne	27f70 <GetDataSlab+0x698c>
   27f30:	str	r8, [r4], #4
   27f34:	ldr	r2, [r5], #4
   27f38:	sdiv	r3, lr, r2
   27f3c:	mls	r3, r2, r3, lr
   27f40:	cmp	r3, #0
   27f44:	beq	27ee4 <GetDataSlab+0x6900>
   27f48:	ldr	r1, [r5, #-8]
   27f4c:	ldr	sl, [sp, #196]	; 0xc4
   27f50:	ldr	sl, [sl, r0, lsl #2]
   27f54:	str	sl, [sp, #8]
   27f58:	sub	r3, r2, r3
   27f5c:	mla	r3, sl, r1, r3
   27f60:	add	ip, ip, r3, lsl #1
   27f64:	add	lr, lr, r3
   27f68:	b	27f04 <GetDataSlab+0x6920>
   27f6c:	ldr	r0, [sp, #28]
   27f70:	add	r3, sp, #152	; 0x98
   27f74:	add	r3, r3, r0, lsl #2
   27f78:	ldr	r3, [r3, #-120]	; 0xffffff88
   27f7c:	add	lr, lr, r3
   27f80:	add	ip, ip, r3, lsl #1
   27f84:	ldr	r3, [sp, #12]
   27f88:	add	r3, r3, r6
   27f8c:	str	r3, [sp, #12]
   27f90:	ldr	r3, [sp, #16]
   27f94:	ldr	r2, [sp, #12]
   27f98:	cmp	r2, r3
   27f9c:	bge	2804c <GetDataSlab+0x6a68>
   27fa0:	ldr	r3, [sp, #196]	; 0xc4
   27fa4:	ldr	r3, [r3]
   27fa8:	cmp	r3, #0
   27fac:	addne	ip, ip, r3, lsl #1
   27fb0:	addne	lr, lr, r3
   27fb4:	ldr	r6, [fp]
   27fb8:	cmp	r6, #0
   27fbc:	ble	27ff4 <GetDataSlab+0x6a10>
   27fc0:	sub	r1, ip, #2
   27fc4:	ldr	r3, [sp, #4]
   27fc8:	ldr	r2, [sp, #12]
   27fcc:	add	r2, r3, r2, lsl #2
   27fd0:	mov	r3, #0
   27fd4:	ldrsh	r0, [r1, #2]!
   27fd8:	vmov	s15, r0
   27fdc:	vcvt.f32.s32	s15, s15
   27fe0:	vstmia	r2!, {s15}
   27fe4:	add	r3, r3, #1
   27fe8:	ldr	r6, [fp]
   27fec:	cmp	r6, r3
   27ff0:	bgt	27fd4 <GetDataSlab+0x69f0>
   27ff4:	ldr	r3, [sp, #192]	; 0xc0
   27ff8:	ldr	r2, [r3]
   27ffc:	ldr	r3, [sp, #196]	; 0xc4
   28000:	ldr	r3, [r3]
   28004:	sub	r3, r2, r3
   28008:	add	lr, lr, r3
   2800c:	add	ip, ip, r3, lsl #1
   28010:	cmp	r9, #1
   28014:	ble	27f84 <GetDataSlab+0x69a0>
   28018:	ldr	r3, [sp, #76]	; 0x4c
   2801c:	add	r3, r3, #1
   28020:	str	r3, [sp, #76]	; 0x4c
   28024:	ldr	r1, [fp, #4]
   28028:	sdiv	r2, r3, r1
   2802c:	mls	r3, r1, r2, r3
   28030:	cmp	r3, #0
   28034:	bne	27f6c <GetDataSlab+0x6988>
   28038:	add	r4, sp, #76	; 0x4c
   2803c:	add	r7, fp, #4
   28040:	add	r5, sp, #116	; 0x74
   28044:	ldr	r0, [sp, #28]
   28048:	b	27f30 <GetDataSlab+0x694c>
   2804c:	mov	r3, #0
   28050:	b	251fc <GetDataSlab+0x3c18>
   28054:	ldr	r3, [sp, #196]	; 0xc4
   28058:	ldr	r2, [r3, r0, lsl #2]
   2805c:	cmp	r2, #0
   28060:	beq	28074 <GetDataSlab+0x6a90>
   28064:	ldr	r3, [r5, #-4]
   28068:	mul	r3, r3, r2
   2806c:	add	ip, ip, r3, lsl #1
   28070:	add	lr, lr, r3
   28074:	add	r0, r0, #1
   28078:	cmp	r9, r0
   2807c:	beq	28104 <GetDataSlab+0x6b20>
   28080:	ldr	r3, [r4]
   28084:	add	r1, r3, #1
   28088:	str	r1, [r4]
   2808c:	ldr	r2, [r7, #4]!
   28090:	sdiv	r3, r1, r2
   28094:	mls	r3, r2, r3, r1
   28098:	cmp	r3, #0
   2809c:	bne	280f0 <GetDataSlab+0x6b0c>
   280a0:	str	r8, [r4], #4
   280a4:	add	r5, r5, #4
   280a8:	ldr	r2, [r5]
   280ac:	sdiv	r3, lr, r2
   280b0:	mls	r3, r2, r3, lr
   280b4:	cmp	r3, #0
   280b8:	beq	28054 <GetDataSlab+0x6a70>
   280bc:	ldr	r1, [r5, #-4]
   280c0:	str	r1, [sp, #8]
   280c4:	ldr	r1, [sp, #196]	; 0xc4
   280c8:	ldr	r1, [r1, r0, lsl #2]
   280cc:	str	r1, [sp, #12]
   280d0:	sub	r3, r2, r3
   280d4:	mov	r2, r1
   280d8:	ldr	r1, [sp, #8]
   280dc:	mla	r3, r2, r1, r3
   280e0:	add	ip, ip, r3, lsl #1
   280e4:	add	lr, lr, r3
   280e8:	b	28074 <GetDataSlab+0x6a90>
   280ec:	mov	r0, #1
   280f0:	add	r3, sp, #152	; 0x98
   280f4:	add	r3, r3, r0, lsl #2
   280f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   280fc:	add	lr, lr, r3
   28100:	add	ip, ip, r3, lsl #1
   28104:	ldr	r3, [sp, #20]
   28108:	add	r3, r3, r6
   2810c:	str	r3, [sp, #20]
   28110:	ldr	r2, [sp, #16]
   28114:	cmp	r3, r2
   28118:	bge	281d8 <GetDataSlab+0x6bf4>
   2811c:	ldr	r3, [sp, #196]	; 0xc4
   28120:	ldr	r3, [r3]
   28124:	cmp	r3, #0
   28128:	addne	ip, ip, r3, lsl #1
   2812c:	addne	lr, lr, r3
   28130:	ldr	r6, [fp]
   28134:	cmp	r6, #0
   28138:	ble	28178 <GetDataSlab+0x6b94>
   2813c:	ldr	r3, [sp, #4]
   28140:	ldr	r2, [sp, #20]
   28144:	add	r2, r3, r2, lsl #2
   28148:	mov	r3, #0
   2814c:	ldrsh	r1, [ip]
   28150:	vmov	s15, r1
   28154:	vcvt.f32.s32	s15, s15
   28158:	vstmia	r2!, {s15}
   2815c:	ldr	r1, [sl]
   28160:	add	ip, ip, r1, lsl #1
   28164:	add	lr, lr, r1
   28168:	add	r3, r3, #1
   2816c:	ldr	r6, [fp]
   28170:	cmp	r6, r3
   28174:	bgt	2814c <GetDataSlab+0x6b68>
   28178:	ldr	r3, [sp, #192]	; 0xc0
   2817c:	ldr	r2, [r3]
   28180:	ldr	r3, [sp, #196]	; 0xc4
   28184:	ldr	r3, [r3]
   28188:	sub	r3, r2, r3
   2818c:	ldr	r2, [sl]
   28190:	mls	r3, r2, r6, r3
   28194:	add	lr, lr, r3
   28198:	add	ip, ip, r3, lsl #1
   2819c:	cmp	r9, #1
   281a0:	ble	28104 <GetDataSlab+0x6b20>
   281a4:	ldr	r3, [sp, #76]	; 0x4c
   281a8:	add	r3, r3, #1
   281ac:	str	r3, [sp, #76]	; 0x4c
   281b0:	ldr	r1, [fp, #4]
   281b4:	sdiv	r2, r3, r1
   281b8:	mls	r3, r1, r2, r3
   281bc:	cmp	r3, #0
   281c0:	bne	280ec <GetDataSlab+0x6b08>
   281c4:	add	r4, sp, #76	; 0x4c
   281c8:	add	r7, fp, #4
   281cc:	add	r5, sp, #112	; 0x70
   281d0:	mov	r0, #1
   281d4:	b	280a0 <GetDataSlab+0x6abc>
   281d8:	mov	r3, #0
   281dc:	b	251fc <GetDataSlab+0x3c18>
   281e0:	ldr	r3, [sl]
   281e4:	str	r3, [sp, #28]
   281e8:	sub	r3, r3, #1
   281ec:	str	r3, [sp, #32]
   281f0:	ldr	r3, [sp, #192]	; 0xc0
   281f4:	ldr	r3, [r3]
   281f8:	str	r3, [sp, #112]	; 0x70
   281fc:	ldr	r3, [fp]
   28200:	str	r3, [sp, #16]
   28204:	cmp	r9, #1
   28208:	ble	2822c <GetDataSlab+0x6c48>
   2820c:	str	sl, [sp, #20]
   28210:	add	r8, sp, #36	; 0x24
   28214:	ldr	r5, [sp, #192]	; 0xc0
   28218:	add	r6, sp, #112	; 0x70
   2821c:	str	r5, [sp, #12]
   28220:	mov	r4, #1
   28224:	mov	lr, #0
   28228:	b	3b688 <GetDataSlab+0x1a0a4>
   2822c:	mov	lr, #0
   28230:	b	3b720 <GetDataSlab+0x1a13c>
   28234:	ldr	r3, [sp, #16]
   28238:	cmp	r3, #0
   2823c:	ble	3a32c <GetDataSlab+0x18d48>
   28240:	mov	r3, #0
   28244:	str	r3, [sp, #12]
   28248:	mov	r8, r3
   2824c:	b	2830c <GetDataSlab+0x6d28>
   28250:	ldr	r3, [sp, #196]	; 0xc4
   28254:	ldr	r3, [r3, r0, lsl #2]
   28258:	cmp	r3, #0
   2825c:	beq	28270 <GetDataSlab+0x6c8c>
   28260:	ldr	r2, [r5, #-8]
   28264:	mul	r3, r2, r3
   28268:	add	ip, ip, r3, lsl #1
   2826c:	add	lr, lr, r3
   28270:	add	r0, r0, #1
   28274:	cmp	r9, r0
   28278:	beq	282f0 <GetDataSlab+0x6d0c>
   2827c:	ldr	r3, [r4]
   28280:	add	r1, r3, #1
   28284:	str	r1, [r4]
   28288:	ldr	r2, [r7, #4]!
   2828c:	sdiv	r3, r1, r2
   28290:	mls	r3, r2, r3, r1
   28294:	cmp	r3, #0
   28298:	bne	282dc <GetDataSlab+0x6cf8>
   2829c:	str	r8, [r4], #4
   282a0:	ldr	r2, [r5], #4
   282a4:	sdiv	r3, lr, r2
   282a8:	mls	r3, r2, r3, lr
   282ac:	cmp	r3, #0
   282b0:	beq	28250 <GetDataSlab+0x6c6c>
   282b4:	ldr	r1, [r5, #-8]
   282b8:	ldr	sl, [sp, #196]	; 0xc4
   282bc:	ldr	sl, [sl, r0, lsl #2]
   282c0:	str	sl, [sp, #8]
   282c4:	sub	r3, r2, r3
   282c8:	mla	r3, sl, r1, r3
   282cc:	add	ip, ip, r3, lsl #1
   282d0:	add	lr, lr, r3
   282d4:	b	28270 <GetDataSlab+0x6c8c>
   282d8:	ldr	r0, [sp, #28]
   282dc:	add	r3, sp, #152	; 0x98
   282e0:	add	r3, r3, r0, lsl #2
   282e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   282e8:	add	lr, lr, r3
   282ec:	add	ip, ip, r3, lsl #1
   282f0:	ldr	r3, [sp, #12]
   282f4:	add	r3, r3, r6
   282f8:	str	r3, [sp, #12]
   282fc:	ldr	r3, [sp, #16]
   28300:	ldr	r2, [sp, #12]
   28304:	cmp	r2, r3
   28308:	bge	283b8 <GetDataSlab+0x6dd4>
   2830c:	ldr	r3, [sp, #196]	; 0xc4
   28310:	ldr	r3, [r3]
   28314:	cmp	r3, #0
   28318:	addne	ip, ip, r3, lsl #1
   2831c:	addne	lr, lr, r3
   28320:	ldr	r6, [fp]
   28324:	cmp	r6, #0
   28328:	ble	28360 <GetDataSlab+0x6d7c>
   2832c:	sub	r1, ip, #2
   28330:	ldr	r3, [sp, #4]
   28334:	ldr	r2, [sp, #12]
   28338:	add	r2, r3, r2, lsl #2
   2833c:	mov	r3, #0
   28340:	ldrh	r0, [r1, #2]!
   28344:	vmov	s15, r0
   28348:	vcvt.f32.u32	s15, s15
   2834c:	vstmia	r2!, {s15}
   28350:	add	r3, r3, #1
   28354:	ldr	r6, [fp]
   28358:	cmp	r6, r3
   2835c:	bgt	28340 <GetDataSlab+0x6d5c>
   28360:	ldr	r3, [sp, #192]	; 0xc0
   28364:	ldr	r2, [r3]
   28368:	ldr	r3, [sp, #196]	; 0xc4
   2836c:	ldr	r3, [r3]
   28370:	sub	r3, r2, r3
   28374:	add	lr, lr, r3
   28378:	add	ip, ip, r3, lsl #1
   2837c:	cmp	r9, #1
   28380:	ble	282f0 <GetDataSlab+0x6d0c>
   28384:	ldr	r3, [sp, #76]	; 0x4c
   28388:	add	r3, r3, #1
   2838c:	str	r3, [sp, #76]	; 0x4c
   28390:	ldr	r1, [fp, #4]
   28394:	sdiv	r2, r3, r1
   28398:	mls	r3, r1, r2, r3
   2839c:	cmp	r3, #0
   283a0:	bne	282d8 <GetDataSlab+0x6cf4>
   283a4:	add	r4, sp, #76	; 0x4c
   283a8:	add	r7, fp, #4
   283ac:	add	r5, sp, #116	; 0x74
   283b0:	ldr	r0, [sp, #28]
   283b4:	b	2829c <GetDataSlab+0x6cb8>
   283b8:	mov	r3, #0
   283bc:	b	251fc <GetDataSlab+0x3c18>
   283c0:	ldr	r3, [sp, #196]	; 0xc4
   283c4:	ldr	r2, [r3, r0, lsl #2]
   283c8:	cmp	r2, #0
   283cc:	beq	283e0 <GetDataSlab+0x6dfc>
   283d0:	ldr	r3, [r5, #-4]
   283d4:	mul	r3, r3, r2
   283d8:	add	ip, ip, r3, lsl #1
   283dc:	add	lr, lr, r3
   283e0:	add	r0, r0, #1
   283e4:	cmp	r9, r0
   283e8:	beq	28470 <GetDataSlab+0x6e8c>
   283ec:	ldr	r3, [r4]
   283f0:	add	r1, r3, #1
   283f4:	str	r1, [r4]
   283f8:	ldr	r2, [r7, #4]!
   283fc:	sdiv	r3, r1, r2
   28400:	mls	r3, r2, r3, r1
   28404:	cmp	r3, #0
   28408:	bne	2845c <GetDataSlab+0x6e78>
   2840c:	str	r8, [r4], #4
   28410:	add	r5, r5, #4
   28414:	ldr	r2, [r5]
   28418:	sdiv	r3, lr, r2
   2841c:	mls	r3, r2, r3, lr
   28420:	cmp	r3, #0
   28424:	beq	283c0 <GetDataSlab+0x6ddc>
   28428:	ldr	r1, [r5, #-4]
   2842c:	str	r1, [sp, #8]
   28430:	ldr	r1, [sp, #196]	; 0xc4
   28434:	ldr	r1, [r1, r0, lsl #2]
   28438:	str	r1, [sp, #12]
   2843c:	sub	r3, r2, r3
   28440:	mov	r2, r1
   28444:	ldr	r1, [sp, #8]
   28448:	mla	r3, r2, r1, r3
   2844c:	add	ip, ip, r3, lsl #1
   28450:	add	lr, lr, r3
   28454:	b	283e0 <GetDataSlab+0x6dfc>
   28458:	mov	r0, #1
   2845c:	add	r3, sp, #152	; 0x98
   28460:	add	r3, r3, r0, lsl #2
   28464:	ldr	r3, [r3, #-120]	; 0xffffff88
   28468:	add	lr, lr, r3
   2846c:	add	ip, ip, r3, lsl #1
   28470:	ldr	r3, [sp, #20]
   28474:	add	r3, r3, r6
   28478:	str	r3, [sp, #20]
   2847c:	ldr	r2, [sp, #16]
   28480:	cmp	r3, r2
   28484:	bge	28544 <GetDataSlab+0x6f60>
   28488:	ldr	r3, [sp, #196]	; 0xc4
   2848c:	ldr	r3, [r3]
   28490:	cmp	r3, #0
   28494:	addne	ip, ip, r3, lsl #1
   28498:	addne	lr, lr, r3
   2849c:	ldr	r6, [fp]
   284a0:	cmp	r6, #0
   284a4:	ble	284e4 <GetDataSlab+0x6f00>
   284a8:	ldr	r3, [sp, #4]
   284ac:	ldr	r2, [sp, #20]
   284b0:	add	r2, r3, r2, lsl #2
   284b4:	mov	r3, #0
   284b8:	ldrh	r1, [ip]
   284bc:	vmov	s15, r1
   284c0:	vcvt.f32.u32	s15, s15
   284c4:	vstmia	r2!, {s15}
   284c8:	ldr	r1, [sl]
   284cc:	add	ip, ip, r1, lsl #1
   284d0:	add	lr, lr, r1
   284d4:	add	r3, r3, #1
   284d8:	ldr	r6, [fp]
   284dc:	cmp	r6, r3
   284e0:	bgt	284b8 <GetDataSlab+0x6ed4>
   284e4:	ldr	r3, [sp, #192]	; 0xc0
   284e8:	ldr	r2, [r3]
   284ec:	ldr	r3, [sp, #196]	; 0xc4
   284f0:	ldr	r3, [r3]
   284f4:	sub	r3, r2, r3
   284f8:	ldr	r2, [sl]
   284fc:	mls	r3, r2, r6, r3
   28500:	add	lr, lr, r3
   28504:	add	ip, ip, r3, lsl #1
   28508:	cmp	r9, #1
   2850c:	ble	28470 <GetDataSlab+0x6e8c>
   28510:	ldr	r3, [sp, #76]	; 0x4c
   28514:	add	r3, r3, #1
   28518:	str	r3, [sp, #76]	; 0x4c
   2851c:	ldr	r1, [fp, #4]
   28520:	sdiv	r2, r3, r1
   28524:	mls	r3, r1, r2, r3
   28528:	cmp	r3, #0
   2852c:	bne	28458 <GetDataSlab+0x6e74>
   28530:	add	r4, sp, #76	; 0x4c
   28534:	add	r7, fp, #4
   28538:	add	r5, sp, #112	; 0x70
   2853c:	mov	r0, #1
   28540:	b	2840c <GetDataSlab+0x6e28>
   28544:	mov	r3, #0
   28548:	b	251fc <GetDataSlab+0x3c18>
   2854c:	ldr	r3, [sl]
   28550:	str	r3, [sp, #28]
   28554:	sub	r3, r3, #1
   28558:	str	r3, [sp, #32]
   2855c:	ldr	r3, [sp, #192]	; 0xc0
   28560:	ldr	r3, [r3]
   28564:	str	r3, [sp, #112]	; 0x70
   28568:	ldr	r3, [fp]
   2856c:	str	r3, [sp, #16]
   28570:	cmp	r9, #1
   28574:	ble	28594 <GetDataSlab+0x6fb0>
   28578:	str	sl, [sp, #20]
   2857c:	add	r7, sp, #36	; 0x24
   28580:	ldr	r4, [sp, #192]	; 0xc0
   28584:	add	r5, sp, #112	; 0x70
   28588:	str	r4, [sp, #12]
   2858c:	mov	lr, #0
   28590:	b	3b3b8 <GetDataSlab+0x19dd4>
   28594:	mov	lr, #0
   28598:	b	3b450 <GetDataSlab+0x19e6c>
   2859c:	ldr	r3, [sp, #16]
   285a0:	cmp	r3, #0
   285a4:	ble	3a334 <GetDataSlab+0x18d50>
   285a8:	mov	r3, #0
   285ac:	str	r3, [sp, #12]
   285b0:	mov	r8, r3
   285b4:	b	28674 <GetDataSlab+0x7090>
   285b8:	ldr	r3, [sp, #196]	; 0xc4
   285bc:	ldr	r3, [r3, r0, lsl #2]
   285c0:	cmp	r3, #0
   285c4:	beq	285d8 <GetDataSlab+0x6ff4>
   285c8:	ldr	r2, [r5, #-8]
   285cc:	mul	r3, r2, r3
   285d0:	add	ip, ip, r3
   285d4:	add	lr, lr, r3
   285d8:	add	r0, r0, #1
   285dc:	cmp	r9, r0
   285e0:	beq	28658 <GetDataSlab+0x7074>
   285e4:	ldr	r3, [r4]
   285e8:	add	r1, r3, #1
   285ec:	str	r1, [r4]
   285f0:	ldr	r2, [r7, #4]!
   285f4:	sdiv	r3, r1, r2
   285f8:	mls	r3, r2, r3, r1
   285fc:	cmp	r3, #0
   28600:	bne	28644 <GetDataSlab+0x7060>
   28604:	str	r8, [r4], #4
   28608:	ldr	r2, [r5], #4
   2860c:	sdiv	r3, lr, r2
   28610:	mls	r3, r2, r3, lr
   28614:	cmp	r3, #0
   28618:	beq	285b8 <GetDataSlab+0x6fd4>
   2861c:	ldr	r1, [r5, #-8]
   28620:	ldr	sl, [sp, #196]	; 0xc4
   28624:	ldr	sl, [sl, r0, lsl #2]
   28628:	str	sl, [sp, #8]
   2862c:	sub	r3, r2, r3
   28630:	mla	r3, sl, r1, r3
   28634:	add	ip, ip, r3
   28638:	add	lr, lr, r3
   2863c:	b	285d8 <GetDataSlab+0x6ff4>
   28640:	ldr	r0, [sp, #28]
   28644:	add	r3, sp, #152	; 0x98
   28648:	add	r3, r3, r0, lsl #2
   2864c:	ldr	r3, [r3, #-120]	; 0xffffff88
   28650:	add	lr, lr, r3
   28654:	add	ip, ip, r3
   28658:	ldr	r3, [sp, #12]
   2865c:	add	r3, r3, r6
   28660:	str	r3, [sp, #12]
   28664:	ldr	r3, [sp, #16]
   28668:	ldr	r2, [sp, #12]
   2866c:	cmp	r2, r3
   28670:	bge	28724 <GetDataSlab+0x7140>
   28674:	ldr	r3, [sp, #196]	; 0xc4
   28678:	ldr	r3, [r3]
   2867c:	cmp	r3, #0
   28680:	addne	ip, ip, r3
   28684:	addne	lr, lr, r3
   28688:	ldr	r6, [fp]
   2868c:	cmp	r6, #0
   28690:	ble	286cc <GetDataSlab+0x70e8>
   28694:	sub	r3, ip, #1
   28698:	ldr	r2, [sp, #4]
   2869c:	ldr	r1, [sp, #12]
   286a0:	add	r1, r2, r1, lsl #2
   286a4:	ldrsb	r2, [r3, #1]
   286a8:	vmov	s15, r2
   286ac:	vcvt.f32.s32	s15, s15
   286b0:	vstmia	r1!, {s15}
   286b4:	ldr	r6, [fp]
   286b8:	add	r2, r3, #2
   286bc:	sub	r2, r2, ip
   286c0:	add	r3, r3, #1
   286c4:	cmp	r6, r2
   286c8:	bgt	286a4 <GetDataSlab+0x70c0>
   286cc:	ldr	r3, [sp, #192]	; 0xc0
   286d0:	ldr	r2, [r3]
   286d4:	ldr	r3, [sp, #196]	; 0xc4
   286d8:	ldr	r3, [r3]
   286dc:	sub	r3, r2, r3
   286e0:	add	lr, lr, r3
   286e4:	add	ip, ip, r3
   286e8:	cmp	r9, #1
   286ec:	ble	28658 <GetDataSlab+0x7074>
   286f0:	ldr	r3, [sp, #76]	; 0x4c
   286f4:	add	r3, r3, #1
   286f8:	str	r3, [sp, #76]	; 0x4c
   286fc:	ldr	r1, [fp, #4]
   28700:	sdiv	r2, r3, r1
   28704:	mls	r3, r1, r2, r3
   28708:	cmp	r3, #0
   2870c:	bne	28640 <GetDataSlab+0x705c>
   28710:	add	r4, sp, #76	; 0x4c
   28714:	add	r7, fp, #4
   28718:	add	r5, sp, #116	; 0x74
   2871c:	ldr	r0, [sp, #28]
   28720:	b	28604 <GetDataSlab+0x7020>
   28724:	mov	r3, #0
   28728:	b	251fc <GetDataSlab+0x3c18>
   2872c:	ldr	r3, [sp, #196]	; 0xc4
   28730:	ldr	r2, [r3, r0, lsl #2]
   28734:	cmp	r2, #0
   28738:	beq	2874c <GetDataSlab+0x7168>
   2873c:	ldr	r3, [r5, #-4]
   28740:	mul	r3, r3, r2
   28744:	add	ip, ip, r3
   28748:	add	lr, lr, r3
   2874c:	add	r0, r0, #1
   28750:	cmp	r9, r0
   28754:	beq	287dc <GetDataSlab+0x71f8>
   28758:	ldr	r3, [r4]
   2875c:	add	r1, r3, #1
   28760:	str	r1, [r4]
   28764:	ldr	r2, [r7, #4]!
   28768:	sdiv	r3, r1, r2
   2876c:	mls	r3, r2, r3, r1
   28770:	cmp	r3, #0
   28774:	bne	287c8 <GetDataSlab+0x71e4>
   28778:	str	r8, [r4], #4
   2877c:	add	r5, r5, #4
   28780:	ldr	r2, [r5]
   28784:	sdiv	r3, lr, r2
   28788:	mls	r3, r2, r3, lr
   2878c:	cmp	r3, #0
   28790:	beq	2872c <GetDataSlab+0x7148>
   28794:	ldr	r1, [r5, #-4]
   28798:	str	r1, [sp, #8]
   2879c:	ldr	r1, [sp, #196]	; 0xc4
   287a0:	ldr	r1, [r1, r0, lsl #2]
   287a4:	str	r1, [sp, #12]
   287a8:	sub	r3, r2, r3
   287ac:	mov	r2, r1
   287b0:	ldr	r1, [sp, #8]
   287b4:	mla	r3, r2, r1, r3
   287b8:	add	ip, ip, r3
   287bc:	add	lr, lr, r3
   287c0:	b	2874c <GetDataSlab+0x7168>
   287c4:	mov	r0, #1
   287c8:	add	r3, sp, #152	; 0x98
   287cc:	add	r3, r3, r0, lsl #2
   287d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   287d4:	add	lr, lr, r3
   287d8:	add	ip, ip, r3
   287dc:	ldr	r3, [sp, #20]
   287e0:	add	r3, r3, r6
   287e4:	str	r3, [sp, #20]
   287e8:	ldr	r2, [sp, #16]
   287ec:	cmp	r3, r2
   287f0:	bge	288b0 <GetDataSlab+0x72cc>
   287f4:	ldr	r3, [sp, #196]	; 0xc4
   287f8:	ldr	r3, [r3]
   287fc:	cmp	r3, #0
   28800:	addne	ip, ip, r3
   28804:	addne	lr, lr, r3
   28808:	ldr	r6, [fp]
   2880c:	cmp	r6, #0
   28810:	ble	28850 <GetDataSlab+0x726c>
   28814:	ldr	r3, [sp, #4]
   28818:	ldr	r2, [sp, #20]
   2881c:	add	r2, r3, r2, lsl #2
   28820:	mov	r3, #0
   28824:	ldrsb	r1, [ip]
   28828:	vmov	s15, r1
   2882c:	vcvt.f32.s32	s15, s15
   28830:	vstmia	r2!, {s15}
   28834:	ldr	r1, [sl]
   28838:	add	ip, ip, r1
   2883c:	add	lr, lr, r1
   28840:	add	r3, r3, #1
   28844:	ldr	r6, [fp]
   28848:	cmp	r6, r3
   2884c:	bgt	28824 <GetDataSlab+0x7240>
   28850:	ldr	r3, [sp, #192]	; 0xc0
   28854:	ldr	r2, [r3]
   28858:	ldr	r3, [sp, #196]	; 0xc4
   2885c:	ldr	r3, [r3]
   28860:	sub	r3, r2, r3
   28864:	ldr	r2, [sl]
   28868:	mls	r3, r2, r6, r3
   2886c:	add	lr, lr, r3
   28870:	add	ip, ip, r3
   28874:	cmp	r9, #1
   28878:	ble	287dc <GetDataSlab+0x71f8>
   2887c:	ldr	r3, [sp, #76]	; 0x4c
   28880:	add	r3, r3, #1
   28884:	str	r3, [sp, #76]	; 0x4c
   28888:	ldr	r1, [fp, #4]
   2888c:	sdiv	r2, r3, r1
   28890:	mls	r3, r1, r2, r3
   28894:	cmp	r3, #0
   28898:	bne	287c4 <GetDataSlab+0x71e0>
   2889c:	add	r4, sp, #76	; 0x4c
   288a0:	add	r7, fp, #4
   288a4:	add	r5, sp, #112	; 0x70
   288a8:	mov	r0, #1
   288ac:	b	28778 <GetDataSlab+0x7194>
   288b0:	mov	r3, #0
   288b4:	b	251fc <GetDataSlab+0x3c18>
   288b8:	ldr	r3, [sl]
   288bc:	str	r3, [sp, #28]
   288c0:	sub	r3, r3, #1
   288c4:	str	r3, [sp, #32]
   288c8:	ldr	r3, [sp, #192]	; 0xc0
   288cc:	ldr	r3, [r3]
   288d0:	str	r3, [sp, #112]	; 0x70
   288d4:	ldr	r3, [fp]
   288d8:	str	r3, [sp, #16]
   288dc:	cmp	r9, #1
   288e0:	ble	28904 <GetDataSlab+0x7320>
   288e4:	str	sl, [sp, #20]
   288e8:	add	r8, sp, #36	; 0x24
   288ec:	ldr	r5, [sp, #192]	; 0xc0
   288f0:	add	r6, sp, #112	; 0x70
   288f4:	str	r5, [sp, #12]
   288f8:	mov	r4, #1
   288fc:	mov	lr, #0
   28900:	b	3b4a8 <GetDataSlab+0x19ec4>
   28904:	mov	lr, #0
   28908:	b	3b540 <GetDataSlab+0x19f5c>
   2890c:	ldr	r3, [sp, #16]
   28910:	cmp	r3, #0
   28914:	ble	3a33c <GetDataSlab+0x18d58>
   28918:	mov	r3, #0
   2891c:	str	r3, [sp, #12]
   28920:	mov	r8, r3
   28924:	b	289e4 <GetDataSlab+0x7400>
   28928:	ldr	r3, [sp, #196]	; 0xc4
   2892c:	ldr	r3, [r3, r0, lsl #2]
   28930:	cmp	r3, #0
   28934:	beq	28948 <GetDataSlab+0x7364>
   28938:	ldr	r2, [r5, #-8]
   2893c:	mul	r3, r2, r3
   28940:	add	ip, ip, r3
   28944:	add	lr, lr, r3
   28948:	add	r0, r0, #1
   2894c:	cmp	r9, r0
   28950:	beq	289c8 <GetDataSlab+0x73e4>
   28954:	ldr	r3, [r4]
   28958:	add	r1, r3, #1
   2895c:	str	r1, [r4]
   28960:	ldr	r2, [r7, #4]!
   28964:	sdiv	r3, r1, r2
   28968:	mls	r3, r2, r3, r1
   2896c:	cmp	r3, #0
   28970:	bne	289b4 <GetDataSlab+0x73d0>
   28974:	str	r8, [r4], #4
   28978:	ldr	r2, [r5], #4
   2897c:	sdiv	r3, lr, r2
   28980:	mls	r3, r2, r3, lr
   28984:	cmp	r3, #0
   28988:	beq	28928 <GetDataSlab+0x7344>
   2898c:	ldr	r1, [r5, #-8]
   28990:	ldr	sl, [sp, #196]	; 0xc4
   28994:	ldr	sl, [sl, r0, lsl #2]
   28998:	str	sl, [sp, #8]
   2899c:	sub	r3, r2, r3
   289a0:	mla	r3, sl, r1, r3
   289a4:	add	ip, ip, r3
   289a8:	add	lr, lr, r3
   289ac:	b	28948 <GetDataSlab+0x7364>
   289b0:	ldr	r0, [sp, #28]
   289b4:	add	r3, sp, #152	; 0x98
   289b8:	add	r3, r3, r0, lsl #2
   289bc:	ldr	r3, [r3, #-120]	; 0xffffff88
   289c0:	add	lr, lr, r3
   289c4:	add	ip, ip, r3
   289c8:	ldr	r3, [sp, #12]
   289cc:	add	r3, r3, r6
   289d0:	str	r3, [sp, #12]
   289d4:	ldr	r3, [sp, #16]
   289d8:	ldr	r2, [sp, #12]
   289dc:	cmp	r2, r3
   289e0:	bge	28a94 <GetDataSlab+0x74b0>
   289e4:	ldr	r3, [sp, #196]	; 0xc4
   289e8:	ldr	r3, [r3]
   289ec:	cmp	r3, #0
   289f0:	addne	ip, ip, r3
   289f4:	addne	lr, lr, r3
   289f8:	ldr	r6, [fp]
   289fc:	cmp	r6, #0
   28a00:	ble	28a3c <GetDataSlab+0x7458>
   28a04:	sub	r3, ip, #1
   28a08:	ldr	r2, [sp, #4]
   28a0c:	ldr	r1, [sp, #12]
   28a10:	add	r1, r2, r1, lsl #2
   28a14:	ldrb	r2, [r3, #1]
   28a18:	vmov	s15, r2
   28a1c:	vcvt.f32.u32	s15, s15
   28a20:	vstmia	r1!, {s15}
   28a24:	ldr	r6, [fp]
   28a28:	add	r2, r3, #2
   28a2c:	sub	r2, r2, ip
   28a30:	add	r3, r3, #1
   28a34:	cmp	r6, r2
   28a38:	bgt	28a14 <GetDataSlab+0x7430>
   28a3c:	ldr	r3, [sp, #192]	; 0xc0
   28a40:	ldr	r2, [r3]
   28a44:	ldr	r3, [sp, #196]	; 0xc4
   28a48:	ldr	r3, [r3]
   28a4c:	sub	r3, r2, r3
   28a50:	add	lr, lr, r3
   28a54:	add	ip, ip, r3
   28a58:	cmp	r9, #1
   28a5c:	ble	289c8 <GetDataSlab+0x73e4>
   28a60:	ldr	r3, [sp, #76]	; 0x4c
   28a64:	add	r3, r3, #1
   28a68:	str	r3, [sp, #76]	; 0x4c
   28a6c:	ldr	r1, [fp, #4]
   28a70:	sdiv	r2, r3, r1
   28a74:	mls	r3, r1, r2, r3
   28a78:	cmp	r3, #0
   28a7c:	bne	289b0 <GetDataSlab+0x73cc>
   28a80:	add	r4, sp, #76	; 0x4c
   28a84:	add	r7, fp, #4
   28a88:	add	r5, sp, #116	; 0x74
   28a8c:	ldr	r0, [sp, #28]
   28a90:	b	28974 <GetDataSlab+0x7390>
   28a94:	mov	r3, #0
   28a98:	b	251fc <GetDataSlab+0x3c18>
   28a9c:	ldr	r3, [sp, #196]	; 0xc4
   28aa0:	ldr	r2, [r3, r0, lsl #2]
   28aa4:	cmp	r2, #0
   28aa8:	beq	28abc <GetDataSlab+0x74d8>
   28aac:	ldr	r3, [r5, #-4]
   28ab0:	mul	r3, r3, r2
   28ab4:	add	ip, ip, r3
   28ab8:	add	lr, lr, r3
   28abc:	add	r0, r0, #1
   28ac0:	cmp	r9, r0
   28ac4:	beq	28b4c <GetDataSlab+0x7568>
   28ac8:	ldr	r3, [r4]
   28acc:	add	r1, r3, #1
   28ad0:	str	r1, [r4]
   28ad4:	ldr	r2, [r7, #4]!
   28ad8:	sdiv	r3, r1, r2
   28adc:	mls	r3, r2, r3, r1
   28ae0:	cmp	r3, #0
   28ae4:	bne	28b38 <GetDataSlab+0x7554>
   28ae8:	str	r8, [r4], #4
   28aec:	add	r5, r5, #4
   28af0:	ldr	r2, [r5]
   28af4:	sdiv	r3, lr, r2
   28af8:	mls	r3, r2, r3, lr
   28afc:	cmp	r3, #0
   28b00:	beq	28a9c <GetDataSlab+0x74b8>
   28b04:	ldr	r1, [r5, #-4]
   28b08:	str	r1, [sp, #8]
   28b0c:	ldr	r1, [sp, #196]	; 0xc4
   28b10:	ldr	r1, [r1, r0, lsl #2]
   28b14:	str	r1, [sp, #12]
   28b18:	sub	r3, r2, r3
   28b1c:	mov	r2, r1
   28b20:	ldr	r1, [sp, #8]
   28b24:	mla	r3, r2, r1, r3
   28b28:	add	ip, ip, r3
   28b2c:	add	lr, lr, r3
   28b30:	b	28abc <GetDataSlab+0x74d8>
   28b34:	mov	r0, #1
   28b38:	add	r3, sp, #152	; 0x98
   28b3c:	add	r3, r3, r0, lsl #2
   28b40:	ldr	r3, [r3, #-120]	; 0xffffff88
   28b44:	add	lr, lr, r3
   28b48:	add	ip, ip, r3
   28b4c:	ldr	r3, [sp, #20]
   28b50:	add	r3, r3, r6
   28b54:	str	r3, [sp, #20]
   28b58:	ldr	r2, [sp, #16]
   28b5c:	cmp	r3, r2
   28b60:	bge	28c20 <GetDataSlab+0x763c>
   28b64:	ldr	r3, [sp, #196]	; 0xc4
   28b68:	ldr	r3, [r3]
   28b6c:	cmp	r3, #0
   28b70:	addne	ip, ip, r3
   28b74:	addne	lr, lr, r3
   28b78:	ldr	r6, [fp]
   28b7c:	cmp	r6, #0
   28b80:	ble	28bc0 <GetDataSlab+0x75dc>
   28b84:	ldr	r3, [sp, #4]
   28b88:	ldr	r2, [sp, #20]
   28b8c:	add	r2, r3, r2, lsl #2
   28b90:	mov	r3, #0
   28b94:	ldrb	r1, [ip]
   28b98:	vmov	s15, r1
   28b9c:	vcvt.f32.u32	s15, s15
   28ba0:	vstmia	r2!, {s15}
   28ba4:	ldr	r1, [sl]
   28ba8:	add	ip, ip, r1
   28bac:	add	lr, lr, r1
   28bb0:	add	r3, r3, #1
   28bb4:	ldr	r6, [fp]
   28bb8:	cmp	r6, r3
   28bbc:	bgt	28b94 <GetDataSlab+0x75b0>
   28bc0:	ldr	r3, [sp, #192]	; 0xc0
   28bc4:	ldr	r2, [r3]
   28bc8:	ldr	r3, [sp, #196]	; 0xc4
   28bcc:	ldr	r3, [r3]
   28bd0:	sub	r3, r2, r3
   28bd4:	ldr	r2, [sl]
   28bd8:	mls	r3, r2, r6, r3
   28bdc:	add	lr, lr, r3
   28be0:	add	ip, ip, r3
   28be4:	cmp	r9, #1
   28be8:	ble	28b4c <GetDataSlab+0x7568>
   28bec:	ldr	r3, [sp, #76]	; 0x4c
   28bf0:	add	r3, r3, #1
   28bf4:	str	r3, [sp, #76]	; 0x4c
   28bf8:	ldr	r1, [fp, #4]
   28bfc:	sdiv	r2, r3, r1
   28c00:	mls	r3, r1, r2, r3
   28c04:	cmp	r3, #0
   28c08:	bne	28b34 <GetDataSlab+0x7550>
   28c0c:	add	r4, sp, #76	; 0x4c
   28c10:	add	r7, fp, #4
   28c14:	add	r5, sp, #112	; 0x70
   28c18:	mov	r0, #1
   28c1c:	b	28ae8 <GetDataSlab+0x7504>
   28c20:	mov	r3, #0
   28c24:	b	251fc <GetDataSlab+0x3c18>
   28c28:	cmp	r8, #12
   28c2c:	beq	28c88 <GetDataSlab+0x76a4>
   28c30:	cmp	r8, #13
   28c34:	movne	r3, #1
   28c38:	bne	251fc <GetDataSlab+0x3c18>
   28c3c:	ldr	r3, [sl]
   28c40:	str	r3, [sp, #28]
   28c44:	sub	r3, r3, #1
   28c48:	str	r3, [sp, #32]
   28c4c:	ldr	r3, [sp, #192]	; 0xc0
   28c50:	ldr	r3, [r3]
   28c54:	str	r3, [sp, #112]	; 0x70
   28c58:	ldr	r3, [fp]
   28c5c:	str	r3, [sp, #12]
   28c60:	cmp	r9, #1
   28c64:	ble	28fcc <GetDataSlab+0x79e8>
   28c68:	str	sl, [sp, #20]
   28c6c:	add	r8, sp, #36	; 0x24
   28c70:	ldr	r4, [sp, #192]	; 0xc0
   28c74:	add	r5, sp, #112	; 0x70
   28c78:	str	r4, [sp, #16]
   28c7c:	mov	lr, #1
   28c80:	mov	r7, #0
   28c84:	b	3b1e0 <GetDataSlab+0x19bfc>
   28c88:	ldr	r3, [sl]
   28c8c:	str	r3, [sp, #28]
   28c90:	sub	r3, r3, #1
   28c94:	str	r3, [sp, #32]
   28c98:	ldr	r3, [sp, #192]	; 0xc0
   28c9c:	ldr	r3, [r3]
   28ca0:	str	r3, [sp, #112]	; 0x70
   28ca4:	ldr	r3, [fp]
   28ca8:	str	r3, [sp, #12]
   28cac:	cmp	r9, #1
   28cb0:	ble	28cd4 <GetDataSlab+0x76f0>
   28cb4:	str	sl, [sp, #20]
   28cb8:	add	r8, sp, #36	; 0x24
   28cbc:	ldr	r4, [sp, #192]	; 0xc0
   28cc0:	add	r5, sp, #112	; 0x70
   28cc4:	str	r4, [sp, #16]
   28cc8:	mov	lr, #1
   28ccc:	mov	r7, #0
   28cd0:	b	3b2cc <GetDataSlab+0x19ce8>
   28cd4:	mov	r7, #0
   28cd8:	b	3b364 <GetDataSlab+0x19d80>
   28cdc:	ldr	r3, [sp, #12]
   28ce0:	cmp	r3, #0
   28ce4:	ble	3b38c <GetDataSlab+0x19da8>
   28ce8:	mov	r3, #0
   28cec:	str	r3, [sp, #8]
   28cf0:	b	28db0 <GetDataSlab+0x77cc>
   28cf4:	ldr	r3, [sp, #196]	; 0xc4
   28cf8:	ldr	r2, [r3, r0, lsl #2]
   28cfc:	cmp	r2, #0
   28d00:	beq	28d14 <GetDataSlab+0x7730>
   28d04:	ldr	r3, [lr, #-4]
   28d08:	mul	r3, r3, r2
   28d0c:	add	r8, r8, r3, lsl #3
   28d10:	add	r7, r7, r3
   28d14:	add	r0, r0, #1
   28d18:	cmp	r9, r0
   28d1c:	beq	28d98 <GetDataSlab+0x77b4>
   28d20:	ldr	r3, [ip]
   28d24:	add	r1, r3, #1
   28d28:	str	r1, [ip]
   28d2c:	ldr	r2, [r4, #4]!
   28d30:	sdiv	r3, r1, r2
   28d34:	mls	r3, r2, r3, r1
   28d38:	cmp	r3, #0
   28d3c:	bne	28d84 <GetDataSlab+0x77a0>
   28d40:	mov	r3, #0
   28d44:	str	r3, [ip], #4
   28d48:	add	lr, lr, #4
   28d4c:	ldr	r2, [lr]
   28d50:	sdiv	r3, r7, r2
   28d54:	mls	r3, r2, r3, r7
   28d58:	cmp	r3, #0
   28d5c:	beq	28cf4 <GetDataSlab+0x7710>
   28d60:	ldr	r1, [lr, #-4]
   28d64:	ldr	r5, [sp, #196]	; 0xc4
   28d68:	ldr	r5, [r5, r0, lsl #2]
   28d6c:	sub	r3, r2, r3
   28d70:	mla	r3, r5, r1, r3
   28d74:	add	r8, r8, r3, lsl #3
   28d78:	add	r7, r7, r3
   28d7c:	b	28d14 <GetDataSlab+0x7730>
   28d80:	ldr	r0, [sp, #28]
   28d84:	add	r3, sp, #152	; 0x98
   28d88:	add	r3, r3, r0, lsl #2
   28d8c:	ldr	r3, [r3, #-120]	; 0xffffff88
   28d90:	add	r7, r7, r3
   28d94:	add	r8, r8, r3, lsl #3
   28d98:	ldr	r3, [sp, #8]
   28d9c:	add	r3, r3, sl
   28da0:	str	r3, [sp, #8]
   28da4:	ldr	r2, [sp, #12]
   28da8:	cmp	r3, r2
   28dac:	bge	3b38c <GetDataSlab+0x19da8>
   28db0:	ldr	r3, [sp, #196]	; 0xc4
   28db4:	ldr	r3, [r3]
   28db8:	cmp	r3, #0
   28dbc:	addne	r8, r8, r3, lsl #3
   28dc0:	addne	r7, r7, r3
   28dc4:	ldr	sl, [fp]
   28dc8:	cmp	sl, #0
   28dcc:	ble	28e00 <GetDataSlab+0x781c>
   28dd0:	sub	r6, r8, #8
   28dd4:	ldr	r3, [sp, #4]
   28dd8:	ldr	r2, [sp, #8]
   28ddc:	add	r5, r3, r2, lsl #2
   28de0:	mov	r4, #0
   28de4:	ldrd	r0, [r6, #8]!
   28de8:	bl	4ef90 <__aeabi_l2f>
   28dec:	str	r0, [r5], #4
   28df0:	add	r4, r4, #1
   28df4:	ldr	sl, [fp]
   28df8:	cmp	sl, r4
   28dfc:	bgt	28de4 <GetDataSlab+0x7800>
   28e00:	ldr	r3, [sp, #192]	; 0xc0
   28e04:	ldr	r2, [r3]
   28e08:	ldr	r3, [sp, #196]	; 0xc4
   28e0c:	ldr	r3, [r3]
   28e10:	sub	r3, r2, r3
   28e14:	add	r7, r7, r3
   28e18:	add	r8, r8, r3, lsl #3
   28e1c:	cmp	r9, #1
   28e20:	ble	28d98 <GetDataSlab+0x77b4>
   28e24:	ldr	r3, [sp, #76]	; 0x4c
   28e28:	add	r3, r3, #1
   28e2c:	str	r3, [sp, #76]	; 0x4c
   28e30:	ldr	r1, [fp, #4]
   28e34:	sdiv	r2, r3, r1
   28e38:	mls	r3, r1, r2, r3
   28e3c:	cmp	r3, #0
   28e40:	bne	28d80 <GetDataSlab+0x779c>
   28e44:	add	ip, sp, #76	; 0x4c
   28e48:	add	r4, fp, #4
   28e4c:	add	lr, sp, #112	; 0x70
   28e50:	ldr	r0, [sp, #28]
   28e54:	b	28d40 <GetDataSlab+0x775c>
   28e58:	ldr	r3, [sp, #196]	; 0xc4
   28e5c:	ldr	r2, [r3, r0, lsl #2]
   28e60:	cmp	r2, #0
   28e64:	beq	28e78 <GetDataSlab+0x7894>
   28e68:	ldr	r3, [lr, #-4]
   28e6c:	mul	r3, r3, r2
   28e70:	add	r8, r8, r3, lsl #3
   28e74:	add	r7, r7, r3
   28e78:	add	r0, r0, #1
   28e7c:	cmp	r9, r0
   28e80:	beq	28efc <GetDataSlab+0x7918>
   28e84:	ldr	r3, [ip]
   28e88:	add	r1, r3, #1
   28e8c:	str	r1, [ip]
   28e90:	ldr	r2, [r4, #4]!
   28e94:	sdiv	r3, r1, r2
   28e98:	mls	r3, r2, r3, r1
   28e9c:	cmp	r3, #0
   28ea0:	bne	28ee8 <GetDataSlab+0x7904>
   28ea4:	mov	r3, #0
   28ea8:	str	r3, [ip], #4
   28eac:	add	lr, lr, #4
   28eb0:	ldr	r2, [lr]
   28eb4:	sdiv	r3, r7, r2
   28eb8:	mls	r3, r2, r3, r7
   28ebc:	cmp	r3, #0
   28ec0:	beq	28e58 <GetDataSlab+0x7874>
   28ec4:	ldr	r1, [lr, #-4]
   28ec8:	ldr	r5, [sp, #196]	; 0xc4
   28ecc:	ldr	r5, [r5, r0, lsl #2]
   28ed0:	sub	r3, r2, r3
   28ed4:	mla	r3, r5, r1, r3
   28ed8:	add	r8, r8, r3, lsl #3
   28edc:	add	r7, r7, r3
   28ee0:	b	28e78 <GetDataSlab+0x7894>
   28ee4:	mov	r0, #1
   28ee8:	add	r3, sp, #152	; 0x98
   28eec:	add	r3, r3, r0, lsl #2
   28ef0:	ldr	r3, [r3, #-120]	; 0xffffff88
   28ef4:	add	r7, r7, r3
   28ef8:	add	r8, r8, r3, lsl #3
   28efc:	ldr	r3, [sp, #8]
   28f00:	add	r3, r3, r6
   28f04:	str	r3, [sp, #8]
   28f08:	ldr	r2, [sp, #12]
   28f0c:	cmp	r3, r2
   28f10:	bge	3b38c <GetDataSlab+0x19da8>
   28f14:	ldr	r3, [sp, #196]	; 0xc4
   28f18:	ldr	r3, [r3]
   28f1c:	cmp	r3, #0
   28f20:	addne	r8, r8, r3, lsl #3
   28f24:	addne	r7, r7, r3
   28f28:	ldr	r6, [fp]
   28f2c:	cmp	r6, #0
   28f30:	ble	28f6c <GetDataSlab+0x7988>
   28f34:	ldr	r3, [sp, #4]
   28f38:	ldr	r2, [sp, #8]
   28f3c:	add	r5, r3, r2, lsl #2
   28f40:	mov	r4, #0
   28f44:	ldrd	r0, [r8]
   28f48:	bl	4ef90 <__aeabi_l2f>
   28f4c:	str	r0, [r5], #4
   28f50:	ldr	r3, [sl]
   28f54:	add	r8, r8, r3, lsl #3
   28f58:	add	r7, r7, r3
   28f5c:	add	r4, r4, #1
   28f60:	ldr	r6, [fp]
   28f64:	cmp	r6, r4
   28f68:	bgt	28f44 <GetDataSlab+0x7960>
   28f6c:	ldr	r3, [sp, #192]	; 0xc0
   28f70:	ldr	r2, [r3]
   28f74:	ldr	r3, [sp, #196]	; 0xc4
   28f78:	ldr	r3, [r3]
   28f7c:	sub	r3, r2, r3
   28f80:	ldr	r2, [sl]
   28f84:	mls	r3, r2, r6, r3
   28f88:	add	r7, r7, r3
   28f8c:	add	r8, r8, r3, lsl #3
   28f90:	cmp	r9, #1
   28f94:	ble	28efc <GetDataSlab+0x7918>
   28f98:	ldr	r3, [sp, #76]	; 0x4c
   28f9c:	add	r3, r3, #1
   28fa0:	str	r3, [sp, #76]	; 0x4c
   28fa4:	ldr	r1, [fp, #4]
   28fa8:	sdiv	r2, r3, r1
   28fac:	mls	r3, r1, r2, r3
   28fb0:	cmp	r3, #0
   28fb4:	bne	28ee4 <GetDataSlab+0x7900>
   28fb8:	add	ip, sp, #76	; 0x4c
   28fbc:	add	r4, fp, #4
   28fc0:	add	lr, sp, #112	; 0x70
   28fc4:	mov	r0, #1
   28fc8:	b	28ea4 <GetDataSlab+0x78c0>
   28fcc:	mov	r7, #0
   28fd0:	b	3b278 <GetDataSlab+0x19c94>
   28fd4:	ldr	r3, [sp, #12]
   28fd8:	cmp	r3, #0
   28fdc:	ble	3a344 <GetDataSlab+0x18d60>
   28fe0:	mov	r3, #0
   28fe4:	str	r3, [sp, #8]
   28fe8:	b	290a8 <GetDataSlab+0x7ac4>
   28fec:	ldr	r3, [sp, #196]	; 0xc4
   28ff0:	ldr	r2, [r3, r0, lsl #2]
   28ff4:	cmp	r2, #0
   28ff8:	beq	2900c <GetDataSlab+0x7a28>
   28ffc:	ldr	r3, [lr, #-4]
   29000:	mul	r3, r3, r2
   29004:	add	r8, r8, r3, lsl #3
   29008:	add	r7, r7, r3
   2900c:	add	r0, r0, #1
   29010:	cmp	r9, r0
   29014:	beq	29090 <GetDataSlab+0x7aac>
   29018:	ldr	r3, [ip]
   2901c:	add	r1, r3, #1
   29020:	str	r1, [ip]
   29024:	ldr	r2, [r4, #4]!
   29028:	sdiv	r3, r1, r2
   2902c:	mls	r3, r2, r3, r1
   29030:	cmp	r3, #0
   29034:	bne	2907c <GetDataSlab+0x7a98>
   29038:	mov	r3, #0
   2903c:	str	r3, [ip], #4
   29040:	add	lr, lr, #4
   29044:	ldr	r2, [lr]
   29048:	sdiv	r3, r7, r2
   2904c:	mls	r3, r2, r3, r7
   29050:	cmp	r3, #0
   29054:	beq	28fec <GetDataSlab+0x7a08>
   29058:	ldr	r1, [lr, #-4]
   2905c:	ldr	r5, [sp, #196]	; 0xc4
   29060:	ldr	r5, [r5, r0, lsl #2]
   29064:	sub	r3, r2, r3
   29068:	mla	r3, r5, r1, r3
   2906c:	add	r8, r8, r3, lsl #3
   29070:	add	r7, r7, r3
   29074:	b	2900c <GetDataSlab+0x7a28>
   29078:	ldr	r0, [sp, #28]
   2907c:	add	r3, sp, #152	; 0x98
   29080:	add	r3, r3, r0, lsl #2
   29084:	ldr	r3, [r3, #-120]	; 0xffffff88
   29088:	add	r7, r7, r3
   2908c:	add	r8, r8, r3, lsl #3
   29090:	ldr	r3, [sp, #8]
   29094:	add	r3, r3, sl
   29098:	str	r3, [sp, #8]
   2909c:	ldr	r2, [sp, #12]
   290a0:	cmp	r3, r2
   290a4:	bge	29150 <GetDataSlab+0x7b6c>
   290a8:	ldr	r3, [sp, #196]	; 0xc4
   290ac:	ldr	r3, [r3]
   290b0:	cmp	r3, #0
   290b4:	addne	r8, r8, r3, lsl #3
   290b8:	addne	r7, r7, r3
   290bc:	ldr	sl, [fp]
   290c0:	cmp	sl, #0
   290c4:	ble	290f8 <GetDataSlab+0x7b14>
   290c8:	sub	r6, r8, #8
   290cc:	ldr	r3, [sp, #4]
   290d0:	ldr	r2, [sp, #8]
   290d4:	add	r5, r3, r2, lsl #2
   290d8:	mov	r4, #0
   290dc:	ldrd	r0, [r6, #8]!
   290e0:	bl	4ef80 <__aeabi_ul2f>
   290e4:	str	r0, [r5], #4
   290e8:	add	r4, r4, #1
   290ec:	ldr	sl, [fp]
   290f0:	cmp	sl, r4
   290f4:	bgt	290dc <GetDataSlab+0x7af8>
   290f8:	ldr	r3, [sp, #192]	; 0xc0
   290fc:	ldr	r2, [r3]
   29100:	ldr	r3, [sp, #196]	; 0xc4
   29104:	ldr	r3, [r3]
   29108:	sub	r3, r2, r3
   2910c:	add	r7, r7, r3
   29110:	add	r8, r8, r3, lsl #3
   29114:	cmp	r9, #1
   29118:	ble	29090 <GetDataSlab+0x7aac>
   2911c:	ldr	r3, [sp, #76]	; 0x4c
   29120:	add	r3, r3, #1
   29124:	str	r3, [sp, #76]	; 0x4c
   29128:	ldr	r1, [fp, #4]
   2912c:	sdiv	r2, r3, r1
   29130:	mls	r3, r1, r2, r3
   29134:	cmp	r3, #0
   29138:	bne	29078 <GetDataSlab+0x7a94>
   2913c:	add	ip, sp, #76	; 0x4c
   29140:	add	r4, fp, #4
   29144:	add	lr, sp, #112	; 0x70
   29148:	ldr	r0, [sp, #28]
   2914c:	b	29038 <GetDataSlab+0x7a54>
   29150:	mov	r3, #0
   29154:	b	251fc <GetDataSlab+0x3c18>
   29158:	ldr	r3, [sp, #196]	; 0xc4
   2915c:	ldr	r2, [r3, r0, lsl #2]
   29160:	cmp	r2, #0
   29164:	beq	29178 <GetDataSlab+0x7b94>
   29168:	ldr	r3, [lr, #-4]
   2916c:	mul	r3, r3, r2
   29170:	add	r8, r8, r3, lsl #3
   29174:	add	r7, r7, r3
   29178:	add	r0, r0, #1
   2917c:	cmp	r9, r0
   29180:	beq	291fc <GetDataSlab+0x7c18>
   29184:	ldr	r3, [ip]
   29188:	add	r1, r3, #1
   2918c:	str	r1, [ip]
   29190:	ldr	r2, [r4, #4]!
   29194:	sdiv	r3, r1, r2
   29198:	mls	r3, r2, r3, r1
   2919c:	cmp	r3, #0
   291a0:	bne	291e8 <GetDataSlab+0x7c04>
   291a4:	mov	r3, #0
   291a8:	str	r3, [ip], #4
   291ac:	add	lr, lr, #4
   291b0:	ldr	r2, [lr]
   291b4:	sdiv	r3, r7, r2
   291b8:	mls	r3, r2, r3, r7
   291bc:	cmp	r3, #0
   291c0:	beq	29158 <GetDataSlab+0x7b74>
   291c4:	ldr	r1, [lr, #-4]
   291c8:	ldr	r5, [sp, #196]	; 0xc4
   291cc:	ldr	r5, [r5, r0, lsl #2]
   291d0:	sub	r3, r2, r3
   291d4:	mla	r3, r5, r1, r3
   291d8:	add	r8, r8, r3, lsl #3
   291dc:	add	r7, r7, r3
   291e0:	b	29178 <GetDataSlab+0x7b94>
   291e4:	mov	r0, #1
   291e8:	add	r3, sp, #152	; 0x98
   291ec:	add	r3, r3, r0, lsl #2
   291f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   291f4:	add	r7, r7, r3
   291f8:	add	r8, r8, r3, lsl #3
   291fc:	ldr	r3, [sp, #8]
   29200:	add	r3, r3, r6
   29204:	str	r3, [sp, #8]
   29208:	ldr	r2, [sp, #12]
   2920c:	cmp	r3, r2
   29210:	bge	292cc <GetDataSlab+0x7ce8>
   29214:	ldr	r3, [sp, #196]	; 0xc4
   29218:	ldr	r3, [r3]
   2921c:	cmp	r3, #0
   29220:	addne	r8, r8, r3, lsl #3
   29224:	addne	r7, r7, r3
   29228:	ldr	r6, [fp]
   2922c:	cmp	r6, #0
   29230:	ble	2926c <GetDataSlab+0x7c88>
   29234:	ldr	r3, [sp, #4]
   29238:	ldr	r2, [sp, #8]
   2923c:	add	r5, r3, r2, lsl #2
   29240:	mov	r4, #0
   29244:	ldrd	r0, [r8]
   29248:	bl	4ef80 <__aeabi_ul2f>
   2924c:	str	r0, [r5], #4
   29250:	ldr	r3, [sl]
   29254:	add	r8, r8, r3, lsl #3
   29258:	add	r7, r7, r3
   2925c:	add	r4, r4, #1
   29260:	ldr	r6, [fp]
   29264:	cmp	r6, r4
   29268:	bgt	29244 <GetDataSlab+0x7c60>
   2926c:	ldr	r3, [sp, #192]	; 0xc0
   29270:	ldr	r2, [r3]
   29274:	ldr	r3, [sp, #196]	; 0xc4
   29278:	ldr	r3, [r3]
   2927c:	sub	r3, r2, r3
   29280:	ldr	r2, [sl]
   29284:	mls	r3, r2, r6, r3
   29288:	add	r7, r7, r3
   2928c:	add	r8, r8, r3, lsl #3
   29290:	cmp	r9, #1
   29294:	ble	291fc <GetDataSlab+0x7c18>
   29298:	ldr	r3, [sp, #76]	; 0x4c
   2929c:	add	r3, r3, #1
   292a0:	str	r3, [sp, #76]	; 0x4c
   292a4:	ldr	r1, [fp, #4]
   292a8:	sdiv	r2, r3, r1
   292ac:	mls	r3, r1, r2, r3
   292b0:	cmp	r3, #0
   292b4:	bne	291e4 <GetDataSlab+0x7c00>
   292b8:	add	ip, sp, #76	; 0x4c
   292bc:	add	r4, fp, #4
   292c0:	add	lr, sp, #112	; 0x70
   292c4:	mov	r0, #1
   292c8:	b	291a4 <GetDataSlab+0x7bc0>
   292cc:	mov	r3, #0
   292d0:	b	251fc <GetDataSlab+0x3c18>
   292d4:	sub	r3, r8, #1
   292d8:	cmp	r3, #8
   292dc:	addls	pc, pc, r3, lsl #2
   292e0:	b	2ae14 <GetDataSlab+0x9830>
   292e4:	b	2a748 <GetDataSlab+0x9164>
   292e8:	b	2aaac <GetDataSlab+0x94c8>
   292ec:	b	2a080 <GetDataSlab+0x8a9c>
   292f0:	b	2a3e4 <GetDataSlab+0x8e00>
   292f4:	b	299a8 <GetDataSlab+0x83c4>
   292f8:	b	29d14 <GetDataSlab+0x8730>
   292fc:	b	29658 <GetDataSlab+0x8074>
   29300:	b	2ae14 <GetDataSlab+0x9830>
   29304:	b	29308 <GetDataSlab+0x7d24>
   29308:	ldr	r3, [sl]
   2930c:	str	r3, [sp, #28]
   29310:	sub	r3, r3, #1
   29314:	str	r3, [sp, #32]
   29318:	ldr	r3, [sp, #192]	; 0xc0
   2931c:	ldr	r3, [r3]
   29320:	str	r3, [sp, #112]	; 0x70
   29324:	ldr	r3, [fp]
   29328:	str	r3, [sp, #12]
   2932c:	cmp	r9, #1
   29330:	ble	29354 <GetDataSlab+0x7d70>
   29334:	str	sl, [sp, #20]
   29338:	add	r8, sp, #36	; 0x24
   2933c:	ldr	r4, [sp, #192]	; 0xc0
   29340:	add	r5, sp, #112	; 0x70
   29344:	str	r4, [sp, #16]
   29348:	mov	lr, #1
   2934c:	mov	r7, #0
   29350:	b	3fbe4 <GetDataSlab+0x1e600>
   29354:	mov	r7, #0
   29358:	b	3fc7c <GetDataSlab+0x1e698>
   2935c:	ldr	r3, [sp, #12]
   29360:	cmp	r3, #0
   29364:	ble	3a34c <GetDataSlab+0x18d68>
   29368:	mov	r3, #0
   2936c:	str	r3, [sp, #8]
   29370:	b	2942c <GetDataSlab+0x7e48>
   29374:	ldr	r3, [sp, #196]	; 0xc4
   29378:	ldr	r3, [r3, r0, lsl #2]
   2937c:	cmp	r3, #0
   29380:	beq	29394 <GetDataSlab+0x7db0>
   29384:	ldr	r2, [lr, #-8]
   29388:	mul	r3, r2, r3
   2938c:	add	r8, r8, r3, lsl #3
   29390:	add	r7, r7, r3
   29394:	add	r0, r0, #1
   29398:	cmp	r9, r0
   2939c:	beq	29414 <GetDataSlab+0x7e30>
   293a0:	ldr	r3, [ip]
   293a4:	add	r1, r3, #1
   293a8:	str	r1, [ip]
   293ac:	ldr	r2, [r4, #4]!
   293b0:	sdiv	r3, r1, r2
   293b4:	mls	r3, r2, r3, r1
   293b8:	cmp	r3, #0
   293bc:	bne	29400 <GetDataSlab+0x7e1c>
   293c0:	mov	r3, #0
   293c4:	str	r3, [ip], #4
   293c8:	ldr	r2, [lr], #4
   293cc:	sdiv	r3, r7, r2
   293d0:	mls	r3, r2, r3, r7
   293d4:	cmp	r3, #0
   293d8:	beq	29374 <GetDataSlab+0x7d90>
   293dc:	ldr	r1, [lr, #-8]
   293e0:	ldr	r5, [sp, #196]	; 0xc4
   293e4:	ldr	r5, [r5, r0, lsl #2]
   293e8:	sub	r3, r2, r3
   293ec:	mla	r3, r5, r1, r3
   293f0:	add	r8, r8, r3, lsl #3
   293f4:	add	r7, r7, r3
   293f8:	b	29394 <GetDataSlab+0x7db0>
   293fc:	ldr	r0, [sp, #28]
   29400:	add	r3, sp, #152	; 0x98
   29404:	add	r3, r3, r0, lsl #2
   29408:	ldr	r3, [r3, #-120]	; 0xffffff88
   2940c:	add	r7, r7, r3
   29410:	add	r8, r8, r3, lsl #3
   29414:	ldr	r3, [sp, #8]
   29418:	add	r3, r3, sl
   2941c:	str	r3, [sp, #8]
   29420:	ldr	r2, [sp, #12]
   29424:	cmp	r3, r2
   29428:	bge	294d4 <GetDataSlab+0x7ef0>
   2942c:	ldr	r3, [sp, #196]	; 0xc4
   29430:	ldr	r3, [r3]
   29434:	cmp	r3, #0
   29438:	addne	r8, r8, r3, lsl #3
   2943c:	addne	r7, r7, r3
   29440:	ldr	sl, [fp]
   29444:	cmp	sl, #0
   29448:	ble	2947c <GetDataSlab+0x7e98>
   2944c:	mov	r6, r8
   29450:	ldr	r3, [sp, #4]
   29454:	ldr	r2, [sp, #8]
   29458:	add	r5, r3, r2, lsl #3
   2945c:	mov	r4, #0
   29460:	ldrd	r0, [r6], #8
   29464:	bl	4f038 <__aeabi_d2lz>
   29468:	strd	r0, [r5], #8
   2946c:	add	r4, r4, #1
   29470:	ldr	sl, [fp]
   29474:	cmp	sl, r4
   29478:	bgt	29460 <GetDataSlab+0x7e7c>
   2947c:	ldr	r3, [sp, #192]	; 0xc0
   29480:	ldr	r2, [r3]
   29484:	ldr	r3, [sp, #196]	; 0xc4
   29488:	ldr	r3, [r3]
   2948c:	sub	r3, r2, r3
   29490:	add	r7, r7, r3
   29494:	add	r8, r8, r3, lsl #3
   29498:	cmp	r9, #1
   2949c:	ble	29414 <GetDataSlab+0x7e30>
   294a0:	ldr	r3, [sp, #76]	; 0x4c
   294a4:	add	r3, r3, #1
   294a8:	str	r3, [sp, #76]	; 0x4c
   294ac:	ldr	r1, [fp, #4]
   294b0:	sdiv	r2, r3, r1
   294b4:	mls	r3, r1, r2, r3
   294b8:	cmp	r3, #0
   294bc:	bne	293fc <GetDataSlab+0x7e18>
   294c0:	add	ip, sp, #76	; 0x4c
   294c4:	add	r4, fp, #4
   294c8:	add	lr, sp, #116	; 0x74
   294cc:	ldr	r0, [sp, #28]
   294d0:	b	293c0 <GetDataSlab+0x7ddc>
   294d4:	mov	r3, #0
   294d8:	b	251fc <GetDataSlab+0x3c18>
   294dc:	ldr	r3, [sp, #196]	; 0xc4
   294e0:	ldr	r2, [r3, r0, lsl #2]
   294e4:	cmp	r2, #0
   294e8:	beq	294fc <GetDataSlab+0x7f18>
   294ec:	ldr	r3, [lr, #-4]
   294f0:	mul	r3, r3, r2
   294f4:	add	r8, r8, r3, lsl #3
   294f8:	add	r7, r7, r3
   294fc:	add	r0, r0, #1
   29500:	cmp	r9, r0
   29504:	beq	29580 <GetDataSlab+0x7f9c>
   29508:	ldr	r3, [ip]
   2950c:	add	r1, r3, #1
   29510:	str	r1, [ip]
   29514:	ldr	r2, [r4, #4]!
   29518:	sdiv	r3, r1, r2
   2951c:	mls	r3, r2, r3, r1
   29520:	cmp	r3, #0
   29524:	bne	2956c <GetDataSlab+0x7f88>
   29528:	mov	r3, #0
   2952c:	str	r3, [ip], #4
   29530:	add	lr, lr, #4
   29534:	ldr	r2, [lr]
   29538:	sdiv	r3, r7, r2
   2953c:	mls	r3, r2, r3, r7
   29540:	cmp	r3, #0
   29544:	beq	294dc <GetDataSlab+0x7ef8>
   29548:	ldr	r1, [lr, #-4]
   2954c:	ldr	r5, [sp, #196]	; 0xc4
   29550:	ldr	r5, [r5, r0, lsl #2]
   29554:	sub	r3, r2, r3
   29558:	mla	r3, r5, r1, r3
   2955c:	add	r8, r8, r3, lsl #3
   29560:	add	r7, r7, r3
   29564:	b	294fc <GetDataSlab+0x7f18>
   29568:	mov	r0, #1
   2956c:	add	r3, sp, #152	; 0x98
   29570:	add	r3, r3, r0, lsl #2
   29574:	ldr	r3, [r3, #-120]	; 0xffffff88
   29578:	add	r7, r7, r3
   2957c:	add	r8, r8, r3, lsl #3
   29580:	ldr	r3, [sp, #8]
   29584:	add	r3, r3, r6
   29588:	str	r3, [sp, #8]
   2958c:	ldr	r2, [sp, #12]
   29590:	cmp	r3, r2
   29594:	bge	29650 <GetDataSlab+0x806c>
   29598:	ldr	r3, [sp, #196]	; 0xc4
   2959c:	ldr	r3, [r3]
   295a0:	cmp	r3, #0
   295a4:	addne	r8, r8, r3, lsl #3
   295a8:	addne	r7, r7, r3
   295ac:	ldr	r6, [fp]
   295b0:	cmp	r6, #0
   295b4:	ble	295f0 <GetDataSlab+0x800c>
   295b8:	ldr	r3, [sp, #4]
   295bc:	ldr	r2, [sp, #8]
   295c0:	add	r5, r3, r2, lsl #3
   295c4:	mov	r4, #0
   295c8:	ldrd	r0, [r8]
   295cc:	bl	4f038 <__aeabi_d2lz>
   295d0:	strd	r0, [r5], #8
   295d4:	ldr	r3, [sl]
   295d8:	add	r8, r8, r3, lsl #3
   295dc:	add	r7, r7, r3
   295e0:	add	r4, r4, #1
   295e4:	ldr	r6, [fp]
   295e8:	cmp	r6, r4
   295ec:	bgt	295c8 <GetDataSlab+0x7fe4>
   295f0:	ldr	r3, [sp, #192]	; 0xc0
   295f4:	ldr	r2, [r3]
   295f8:	ldr	r3, [sp, #196]	; 0xc4
   295fc:	ldr	r3, [r3]
   29600:	sub	r3, r2, r3
   29604:	ldr	r2, [sl]
   29608:	mls	r3, r2, r6, r3
   2960c:	add	r7, r7, r3
   29610:	add	r8, r8, r3, lsl #3
   29614:	cmp	r9, #1
   29618:	ble	29580 <GetDataSlab+0x7f9c>
   2961c:	ldr	r3, [sp, #76]	; 0x4c
   29620:	add	r3, r3, #1
   29624:	str	r3, [sp, #76]	; 0x4c
   29628:	ldr	r1, [fp, #4]
   2962c:	sdiv	r2, r3, r1
   29630:	mls	r3, r1, r2, r3
   29634:	cmp	r3, #0
   29638:	bne	29568 <GetDataSlab+0x7f84>
   2963c:	add	ip, sp, #76	; 0x4c
   29640:	add	r4, fp, #4
   29644:	add	lr, sp, #112	; 0x70
   29648:	mov	r0, #1
   2964c:	b	29528 <GetDataSlab+0x7f44>
   29650:	mov	r3, #0
   29654:	b	251fc <GetDataSlab+0x3c18>
   29658:	ldr	r3, [sl]
   2965c:	str	r3, [sp, #28]
   29660:	sub	r3, r3, #1
   29664:	str	r3, [sp, #32]
   29668:	ldr	r3, [sp, #192]	; 0xc0
   2966c:	ldr	r3, [r3]
   29670:	str	r3, [sp, #112]	; 0x70
   29674:	ldr	r3, [fp]
   29678:	str	r3, [sp, #12]
   2967c:	cmp	r9, #1
   29680:	ble	296a4 <GetDataSlab+0x80c0>
   29684:	str	sl, [sp, #20]
   29688:	add	r8, sp, #36	; 0x24
   2968c:	ldr	r4, [sp, #192]	; 0xc0
   29690:	add	r5, sp, #112	; 0x70
   29694:	str	r4, [sp, #16]
   29698:	mov	lr, #1
   2969c:	mov	r7, #0
   296a0:	b	3faf8 <GetDataSlab+0x1e514>
   296a4:	mov	r7, #0
   296a8:	b	3fb90 <GetDataSlab+0x1e5ac>
   296ac:	ldr	r3, [sp, #12]
   296b0:	cmp	r3, #0
   296b4:	ble	3a354 <GetDataSlab+0x18d70>
   296b8:	mov	r3, #0
   296bc:	str	r3, [sp, #8]
   296c0:	b	2977c <GetDataSlab+0x8198>
   296c4:	ldr	r3, [sp, #196]	; 0xc4
   296c8:	ldr	r3, [r3, r0, lsl #2]
   296cc:	cmp	r3, #0
   296d0:	beq	296e4 <GetDataSlab+0x8100>
   296d4:	ldr	r2, [lr, #-8]
   296d8:	mul	r3, r2, r3
   296dc:	add	r8, r8, r3, lsl #2
   296e0:	add	r7, r7, r3
   296e4:	add	r0, r0, #1
   296e8:	cmp	r9, r0
   296ec:	beq	29764 <GetDataSlab+0x8180>
   296f0:	ldr	r3, [ip]
   296f4:	add	r1, r3, #1
   296f8:	str	r1, [ip]
   296fc:	ldr	r2, [r4, #4]!
   29700:	sdiv	r3, r1, r2
   29704:	mls	r3, r2, r3, r1
   29708:	cmp	r3, #0
   2970c:	bne	29750 <GetDataSlab+0x816c>
   29710:	mov	r3, #0
   29714:	str	r3, [ip], #4
   29718:	ldr	r2, [lr], #4
   2971c:	sdiv	r3, r7, r2
   29720:	mls	r3, r2, r3, r7
   29724:	cmp	r3, #0
   29728:	beq	296c4 <GetDataSlab+0x80e0>
   2972c:	ldr	r1, [lr, #-8]
   29730:	ldr	r5, [sp, #196]	; 0xc4
   29734:	ldr	r5, [r5, r0, lsl #2]
   29738:	sub	r3, r2, r3
   2973c:	mla	r3, r5, r1, r3
   29740:	add	r8, r8, r3, lsl #2
   29744:	add	r7, r7, r3
   29748:	b	296e4 <GetDataSlab+0x8100>
   2974c:	ldr	r0, [sp, #28]
   29750:	add	r3, sp, #152	; 0x98
   29754:	add	r3, r3, r0, lsl #2
   29758:	ldr	r3, [r3, #-120]	; 0xffffff88
   2975c:	add	r7, r7, r3
   29760:	add	r8, r8, r3, lsl #2
   29764:	ldr	r3, [sp, #8]
   29768:	add	r3, r3, sl
   2976c:	str	r3, [sp, #8]
   29770:	ldr	r2, [sp, #12]
   29774:	cmp	r3, r2
   29778:	bge	29824 <GetDataSlab+0x8240>
   2977c:	ldr	r3, [sp, #196]	; 0xc4
   29780:	ldr	r3, [r3]
   29784:	cmp	r3, #0
   29788:	addne	r8, r8, r3, lsl #2
   2978c:	addne	r7, r7, r3
   29790:	ldr	sl, [fp]
   29794:	cmp	sl, #0
   29798:	ble	297cc <GetDataSlab+0x81e8>
   2979c:	mov	r6, r8
   297a0:	ldr	r3, [sp, #4]
   297a4:	ldr	r2, [sp, #8]
   297a8:	add	r5, r3, r2, lsl #3
   297ac:	mov	r4, #0
   297b0:	ldr	r0, [r6], #4
   297b4:	bl	4f00c <__aeabi_f2lz>
   297b8:	strd	r0, [r5], #8
   297bc:	add	r4, r4, #1
   297c0:	ldr	sl, [fp]
   297c4:	cmp	sl, r4
   297c8:	bgt	297b0 <GetDataSlab+0x81cc>
   297cc:	ldr	r3, [sp, #192]	; 0xc0
   297d0:	ldr	r2, [r3]
   297d4:	ldr	r3, [sp, #196]	; 0xc4
   297d8:	ldr	r3, [r3]
   297dc:	sub	r3, r2, r3
   297e0:	add	r7, r7, r3
   297e4:	add	r8, r8, r3, lsl #2
   297e8:	cmp	r9, #1
   297ec:	ble	29764 <GetDataSlab+0x8180>
   297f0:	ldr	r3, [sp, #76]	; 0x4c
   297f4:	add	r3, r3, #1
   297f8:	str	r3, [sp, #76]	; 0x4c
   297fc:	ldr	r1, [fp, #4]
   29800:	sdiv	r2, r3, r1
   29804:	mls	r3, r1, r2, r3
   29808:	cmp	r3, #0
   2980c:	bne	2974c <GetDataSlab+0x8168>
   29810:	add	ip, sp, #76	; 0x4c
   29814:	add	r4, fp, #4
   29818:	add	lr, sp, #116	; 0x74
   2981c:	ldr	r0, [sp, #28]
   29820:	b	29710 <GetDataSlab+0x812c>
   29824:	mov	r3, #0
   29828:	b	251fc <GetDataSlab+0x3c18>
   2982c:	ldr	r3, [sp, #196]	; 0xc4
   29830:	ldr	r2, [r3, r0, lsl #2]
   29834:	cmp	r2, #0
   29838:	beq	2984c <GetDataSlab+0x8268>
   2983c:	ldr	r3, [lr, #-4]
   29840:	mul	r3, r3, r2
   29844:	add	r8, r8, r3, lsl #2
   29848:	add	r7, r7, r3
   2984c:	add	r0, r0, #1
   29850:	cmp	r9, r0
   29854:	beq	298d0 <GetDataSlab+0x82ec>
   29858:	ldr	r3, [ip]
   2985c:	add	r1, r3, #1
   29860:	str	r1, [ip]
   29864:	ldr	r2, [r4, #4]!
   29868:	sdiv	r3, r1, r2
   2986c:	mls	r3, r2, r3, r1
   29870:	cmp	r3, #0
   29874:	bne	298bc <GetDataSlab+0x82d8>
   29878:	mov	r3, #0
   2987c:	str	r3, [ip], #4
   29880:	add	lr, lr, #4
   29884:	ldr	r2, [lr]
   29888:	sdiv	r3, r7, r2
   2988c:	mls	r3, r2, r3, r7
   29890:	cmp	r3, #0
   29894:	beq	2982c <GetDataSlab+0x8248>
   29898:	ldr	r1, [lr, #-4]
   2989c:	ldr	r5, [sp, #196]	; 0xc4
   298a0:	ldr	r5, [r5, r0, lsl #2]
   298a4:	sub	r3, r2, r3
   298a8:	mla	r3, r5, r1, r3
   298ac:	add	r8, r8, r3, lsl #2
   298b0:	add	r7, r7, r3
   298b4:	b	2984c <GetDataSlab+0x8268>
   298b8:	mov	r0, #1
   298bc:	add	r3, sp, #152	; 0x98
   298c0:	add	r3, r3, r0, lsl #2
   298c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   298c8:	add	r7, r7, r3
   298cc:	add	r8, r8, r3, lsl #2
   298d0:	ldr	r3, [sp, #8]
   298d4:	add	r3, r3, r6
   298d8:	str	r3, [sp, #8]
   298dc:	ldr	r2, [sp, #12]
   298e0:	cmp	r3, r2
   298e4:	bge	299a0 <GetDataSlab+0x83bc>
   298e8:	ldr	r3, [sp, #196]	; 0xc4
   298ec:	ldr	r3, [r3]
   298f0:	cmp	r3, #0
   298f4:	addne	r8, r8, r3, lsl #2
   298f8:	addne	r7, r7, r3
   298fc:	ldr	r6, [fp]
   29900:	cmp	r6, #0
   29904:	ble	29940 <GetDataSlab+0x835c>
   29908:	ldr	r3, [sp, #4]
   2990c:	ldr	r2, [sp, #8]
   29910:	add	r5, r3, r2, lsl #3
   29914:	mov	r4, #0
   29918:	ldr	r0, [r8]
   2991c:	bl	4f00c <__aeabi_f2lz>
   29920:	strd	r0, [r5], #8
   29924:	ldr	r3, [sl]
   29928:	add	r8, r8, r3, lsl #2
   2992c:	add	r7, r7, r3
   29930:	add	r4, r4, #1
   29934:	ldr	r6, [fp]
   29938:	cmp	r6, r4
   2993c:	bgt	29918 <GetDataSlab+0x8334>
   29940:	ldr	r3, [sp, #192]	; 0xc0
   29944:	ldr	r2, [r3]
   29948:	ldr	r3, [sp, #196]	; 0xc4
   2994c:	ldr	r3, [r3]
   29950:	sub	r3, r2, r3
   29954:	ldr	r2, [sl]
   29958:	mls	r3, r2, r6, r3
   2995c:	add	r7, r7, r3
   29960:	add	r8, r8, r3, lsl #2
   29964:	cmp	r9, #1
   29968:	ble	298d0 <GetDataSlab+0x82ec>
   2996c:	ldr	r3, [sp, #76]	; 0x4c
   29970:	add	r3, r3, #1
   29974:	str	r3, [sp, #76]	; 0x4c
   29978:	ldr	r1, [fp, #4]
   2997c:	sdiv	r2, r3, r1
   29980:	mls	r3, r1, r2, r3
   29984:	cmp	r3, #0
   29988:	bne	298b8 <GetDataSlab+0x82d4>
   2998c:	add	ip, sp, #76	; 0x4c
   29990:	add	r4, fp, #4
   29994:	add	lr, sp, #112	; 0x70
   29998:	mov	r0, #1
   2999c:	b	29878 <GetDataSlab+0x8294>
   299a0:	mov	r3, #0
   299a4:	b	251fc <GetDataSlab+0x3c18>
   299a8:	ldr	r3, [sl]
   299ac:	str	r3, [sp, #28]
   299b0:	sub	r3, r3, #1
   299b4:	str	r3, [sp, #32]
   299b8:	ldr	r3, [sp, #192]	; 0xc0
   299bc:	ldr	r3, [r3]
   299c0:	str	r3, [sp, #112]	; 0x70
   299c4:	ldr	r3, [fp]
   299c8:	str	r3, [sp, #16]
   299cc:	cmp	r9, #1
   299d0:	ble	299f4 <GetDataSlab+0x8410>
   299d4:	str	sl, [sp, #20]
   299d8:	add	r8, sp, #36	; 0x24
   299dc:	ldr	r5, [sp, #192]	; 0xc0
   299e0:	add	r6, sp, #112	; 0x70
   299e4:	str	r5, [sp, #12]
   299e8:	mov	lr, #1
   299ec:	mov	r4, #0
   299f0:	b	3f918 <GetDataSlab+0x1e334>
   299f4:	mov	r4, #0
   299f8:	b	3f9b0 <GetDataSlab+0x1e3cc>
   299fc:	ldr	r3, [sp, #16]
   29a00:	cmp	r3, #0
   29a04:	ble	3a35c <GetDataSlab+0x18d78>
   29a08:	mov	r3, #0
   29a0c:	str	r3, [sp, #12]
   29a10:	mov	r8, r3
   29a14:	b	29ad4 <GetDataSlab+0x84f0>
   29a18:	ldr	r3, [sp, #196]	; 0xc4
   29a1c:	ldr	r3, [r3, r0, lsl #2]
   29a20:	cmp	r3, #0
   29a24:	beq	29a38 <GetDataSlab+0x8454>
   29a28:	ldr	r2, [r5, #-8]
   29a2c:	mul	r3, r2, r3
   29a30:	add	lr, lr, r3, lsl #2
   29a34:	add	r4, r4, r3
   29a38:	add	r0, r0, #1
   29a3c:	cmp	r9, r0
   29a40:	beq	29ab8 <GetDataSlab+0x84d4>
   29a44:	ldr	r3, [ip]
   29a48:	add	r1, r3, #1
   29a4c:	str	r1, [ip]
   29a50:	ldr	r2, [r7, #4]!
   29a54:	sdiv	r3, r1, r2
   29a58:	mls	r3, r2, r3, r1
   29a5c:	cmp	r3, #0
   29a60:	bne	29aa4 <GetDataSlab+0x84c0>
   29a64:	str	r8, [ip], #4
   29a68:	ldr	r2, [r5], #4
   29a6c:	sdiv	r3, r4, r2
   29a70:	mls	r3, r2, r3, r4
   29a74:	cmp	r3, #0
   29a78:	beq	29a18 <GetDataSlab+0x8434>
   29a7c:	ldr	r1, [r5, #-8]
   29a80:	ldr	sl, [sp, #196]	; 0xc4
   29a84:	ldr	sl, [sl, r0, lsl #2]
   29a88:	str	sl, [sp, #8]
   29a8c:	sub	r3, r2, r3
   29a90:	mla	r3, sl, r1, r3
   29a94:	add	lr, lr, r3, lsl #2
   29a98:	add	r4, r4, r3
   29a9c:	b	29a38 <GetDataSlab+0x8454>
   29aa0:	ldr	r0, [sp, #28]
   29aa4:	add	r3, sp, #152	; 0x98
   29aa8:	add	r3, r3, r0, lsl #2
   29aac:	ldr	r3, [r3, #-120]	; 0xffffff88
   29ab0:	add	r4, r4, r3
   29ab4:	add	lr, lr, r3, lsl #2
   29ab8:	ldr	r3, [sp, #12]
   29abc:	add	r3, r3, r6
   29ac0:	str	r3, [sp, #12]
   29ac4:	ldr	r3, [sp, #16]
   29ac8:	ldr	r2, [sp, #12]
   29acc:	cmp	r2, r3
   29ad0:	bge	29b80 <GetDataSlab+0x859c>
   29ad4:	ldr	r3, [sp, #196]	; 0xc4
   29ad8:	ldr	r3, [r3]
   29adc:	cmp	r3, #0
   29ae0:	addne	lr, lr, r3, lsl #2
   29ae4:	addne	r4, r4, r3
   29ae8:	ldr	r6, [fp]
   29aec:	cmp	r6, #0
   29af0:	ble	29b28 <GetDataSlab+0x8544>
   29af4:	sub	ip, lr, #4
   29af8:	ldr	r3, [sp, #4]
   29afc:	ldr	r2, [sp, #12]
   29b00:	add	r0, r3, r2, lsl #3
   29b04:	mov	r1, #0
   29b08:	ldr	r3, [ip, #4]!
   29b0c:	mov	r2, r3
   29b10:	asr	r3, r3, #31
   29b14:	strd	r2, [r0], #8
   29b18:	add	r1, r1, #1
   29b1c:	ldr	r6, [fp]
   29b20:	cmp	r6, r1
   29b24:	bgt	29b08 <GetDataSlab+0x8524>
   29b28:	ldr	r3, [sp, #192]	; 0xc0
   29b2c:	ldr	r2, [r3]
   29b30:	ldr	r3, [sp, #196]	; 0xc4
   29b34:	ldr	r3, [r3]
   29b38:	sub	r3, r2, r3
   29b3c:	add	r4, r4, r3
   29b40:	add	lr, lr, r3, lsl #2
   29b44:	cmp	r9, #1
   29b48:	ble	29ab8 <GetDataSlab+0x84d4>
   29b4c:	ldr	r3, [sp, #76]	; 0x4c
   29b50:	add	r3, r3, #1
   29b54:	str	r3, [sp, #76]	; 0x4c
   29b58:	ldr	r1, [fp, #4]
   29b5c:	sdiv	r2, r3, r1
   29b60:	mls	r3, r1, r2, r3
   29b64:	cmp	r3, #0
   29b68:	bne	29aa0 <GetDataSlab+0x84bc>
   29b6c:	add	ip, sp, #76	; 0x4c
   29b70:	add	r7, fp, #4
   29b74:	add	r5, sp, #116	; 0x74
   29b78:	ldr	r0, [sp, #28]
   29b7c:	b	29a64 <GetDataSlab+0x8480>
   29b80:	mov	r3, #0
   29b84:	b	251fc <GetDataSlab+0x3c18>
   29b88:	ldr	r3, [sp, #196]	; 0xc4
   29b8c:	ldr	r2, [r3, r0, lsl #2]
   29b90:	cmp	r2, #0
   29b94:	beq	29ba8 <GetDataSlab+0x85c4>
   29b98:	ldr	r3, [r5, #-4]
   29b9c:	mul	r3, r3, r2
   29ba0:	add	lr, lr, r3, lsl #2
   29ba4:	add	r4, r4, r3
   29ba8:	add	r0, r0, #1
   29bac:	cmp	r9, r0
   29bb0:	beq	29c38 <GetDataSlab+0x8654>
   29bb4:	ldr	r3, [ip]
   29bb8:	add	r1, r3, #1
   29bbc:	str	r1, [ip]
   29bc0:	ldr	r2, [r7, #4]!
   29bc4:	sdiv	r3, r1, r2
   29bc8:	mls	r3, r2, r3, r1
   29bcc:	cmp	r3, #0
   29bd0:	bne	29c24 <GetDataSlab+0x8640>
   29bd4:	str	r8, [ip], #4
   29bd8:	add	r5, r5, #4
   29bdc:	ldr	r2, [r5]
   29be0:	sdiv	r3, r4, r2
   29be4:	mls	r3, r2, r3, r4
   29be8:	cmp	r3, #0
   29bec:	beq	29b88 <GetDataSlab+0x85a4>
   29bf0:	ldr	r1, [r5, #-4]
   29bf4:	str	r1, [sp, #8]
   29bf8:	ldr	r1, [sp, #196]	; 0xc4
   29bfc:	ldr	r1, [r1, r0, lsl #2]
   29c00:	str	r1, [sp, #12]
   29c04:	sub	r3, r2, r3
   29c08:	mov	r2, r1
   29c0c:	ldr	r1, [sp, #8]
   29c10:	mla	r3, r2, r1, r3
   29c14:	add	lr, lr, r3, lsl #2
   29c18:	add	r4, r4, r3
   29c1c:	b	29ba8 <GetDataSlab+0x85c4>
   29c20:	mov	r0, #1
   29c24:	add	r3, sp, #152	; 0x98
   29c28:	add	r3, r3, r0, lsl #2
   29c2c:	ldr	r3, [r3, #-120]	; 0xffffff88
   29c30:	add	r4, r4, r3
   29c34:	add	lr, lr, r3, lsl #2
   29c38:	ldr	r3, [sp, #20]
   29c3c:	add	r3, r3, r6
   29c40:	str	r3, [sp, #20]
   29c44:	ldr	r2, [sp, #16]
   29c48:	cmp	r3, r2
   29c4c:	bge	29d0c <GetDataSlab+0x8728>
   29c50:	ldr	r3, [sp, #196]	; 0xc4
   29c54:	ldr	r3, [r3]
   29c58:	cmp	r3, #0
   29c5c:	addne	lr, lr, r3, lsl #2
   29c60:	addne	r4, r4, r3
   29c64:	ldr	r6, [fp]
   29c68:	cmp	r6, #0
   29c6c:	ble	29cac <GetDataSlab+0x86c8>
   29c70:	ldr	r3, [sp, #4]
   29c74:	ldr	r2, [sp, #20]
   29c78:	add	r2, r3, r2, lsl #3
   29c7c:	mov	r3, #0
   29c80:	ldr	r1, [lr]
   29c84:	mov	r0, r1
   29c88:	asr	r1, r1, #31
   29c8c:	strd	r0, [r2], #8
   29c90:	ldr	r1, [sl]
   29c94:	add	lr, lr, r1, lsl #2
   29c98:	add	r4, r4, r1
   29c9c:	add	r3, r3, #1
   29ca0:	ldr	r6, [fp]
   29ca4:	cmp	r6, r3
   29ca8:	bgt	29c80 <GetDataSlab+0x869c>
   29cac:	ldr	r3, [sp, #192]	; 0xc0
   29cb0:	ldr	r2, [r3]
   29cb4:	ldr	r3, [sp, #196]	; 0xc4
   29cb8:	ldr	r3, [r3]
   29cbc:	sub	r3, r2, r3
   29cc0:	ldr	r2, [sl]
   29cc4:	mls	r3, r2, r6, r3
   29cc8:	add	r4, r4, r3
   29ccc:	add	lr, lr, r3, lsl #2
   29cd0:	cmp	r9, #1
   29cd4:	ble	29c38 <GetDataSlab+0x8654>
   29cd8:	ldr	r3, [sp, #76]	; 0x4c
   29cdc:	add	r3, r3, #1
   29ce0:	str	r3, [sp, #76]	; 0x4c
   29ce4:	ldr	r1, [fp, #4]
   29ce8:	sdiv	r2, r3, r1
   29cec:	mls	r3, r1, r2, r3
   29cf0:	cmp	r3, #0
   29cf4:	bne	29c20 <GetDataSlab+0x863c>
   29cf8:	add	ip, sp, #76	; 0x4c
   29cfc:	add	r7, fp, #4
   29d00:	add	r5, sp, #112	; 0x70
   29d04:	mov	r0, #1
   29d08:	b	29bd4 <GetDataSlab+0x85f0>
   29d0c:	mov	r3, #0
   29d10:	b	251fc <GetDataSlab+0x3c18>
   29d14:	ldr	r3, [sl]
   29d18:	str	r3, [sp, #28]
   29d1c:	sub	r3, r3, #1
   29d20:	str	r3, [sp, #32]
   29d24:	ldr	r3, [sp, #192]	; 0xc0
   29d28:	ldr	r3, [r3]
   29d2c:	str	r3, [sp, #112]	; 0x70
   29d30:	ldr	r3, [fp]
   29d34:	str	r3, [sp, #16]
   29d38:	cmp	r9, #1
   29d3c:	ble	29d60 <GetDataSlab+0x877c>
   29d40:	str	sl, [sp, #20]
   29d44:	add	r8, sp, #36	; 0x24
   29d48:	ldr	r5, [sp, #192]	; 0xc0
   29d4c:	add	r6, sp, #112	; 0x70
   29d50:	str	r5, [sp, #12]
   29d54:	mov	r4, #1
   29d58:	mov	lr, #0
   29d5c:	b	3fa08 <GetDataSlab+0x1e424>
   29d60:	mov	lr, #0
   29d64:	b	3faa0 <GetDataSlab+0x1e4bc>
   29d68:	ldr	r3, [sp, #16]
   29d6c:	cmp	r3, #0
   29d70:	ble	3a364 <GetDataSlab+0x18d80>
   29d74:	mov	r3, #0
   29d78:	str	r3, [sp, #12]
   29d7c:	mov	r8, r3
   29d80:	b	29e40 <GetDataSlab+0x885c>
   29d84:	ldr	r3, [sp, #196]	; 0xc4
   29d88:	ldr	r3, [r3, r0, lsl #2]
   29d8c:	cmp	r3, #0
   29d90:	beq	29da4 <GetDataSlab+0x87c0>
   29d94:	ldr	r2, [r5, #-8]
   29d98:	mul	r3, r2, r3
   29d9c:	add	ip, ip, r3, lsl #2
   29da0:	add	lr, lr, r3
   29da4:	add	r0, r0, #1
   29da8:	cmp	r9, r0
   29dac:	beq	29e24 <GetDataSlab+0x8840>
   29db0:	ldr	r3, [r4]
   29db4:	add	r1, r3, #1
   29db8:	str	r1, [r4]
   29dbc:	ldr	r2, [r7, #4]!
   29dc0:	sdiv	r3, r1, r2
   29dc4:	mls	r3, r2, r3, r1
   29dc8:	cmp	r3, #0
   29dcc:	bne	29e10 <GetDataSlab+0x882c>
   29dd0:	str	r8, [r4], #4
   29dd4:	ldr	r2, [r5], #4
   29dd8:	sdiv	r3, lr, r2
   29ddc:	mls	r3, r2, r3, lr
   29de0:	cmp	r3, #0
   29de4:	beq	29d84 <GetDataSlab+0x87a0>
   29de8:	ldr	r1, [r5, #-8]
   29dec:	ldr	sl, [sp, #196]	; 0xc4
   29df0:	ldr	sl, [sl, r0, lsl #2]
   29df4:	str	sl, [sp, #8]
   29df8:	sub	r3, r2, r3
   29dfc:	mla	r3, sl, r1, r3
   29e00:	add	ip, ip, r3, lsl #2
   29e04:	add	lr, lr, r3
   29e08:	b	29da4 <GetDataSlab+0x87c0>
   29e0c:	ldr	r0, [sp, #28]
   29e10:	add	r3, sp, #152	; 0x98
   29e14:	add	r3, r3, r0, lsl #2
   29e18:	ldr	r3, [r3, #-120]	; 0xffffff88
   29e1c:	add	lr, lr, r3
   29e20:	add	ip, ip, r3, lsl #2
   29e24:	ldr	r3, [sp, #12]
   29e28:	add	r3, r3, r6
   29e2c:	str	r3, [sp, #12]
   29e30:	ldr	r3, [sp, #16]
   29e34:	ldr	r2, [sp, #12]
   29e38:	cmp	r2, r3
   29e3c:	bge	29eec <GetDataSlab+0x8908>
   29e40:	ldr	r3, [sp, #196]	; 0xc4
   29e44:	ldr	r3, [r3]
   29e48:	cmp	r3, #0
   29e4c:	addne	ip, ip, r3, lsl #2
   29e50:	addne	lr, lr, r3
   29e54:	ldr	r6, [fp]
   29e58:	cmp	r6, #0
   29e5c:	ble	29e94 <GetDataSlab+0x88b0>
   29e60:	sub	r0, ip, #4
   29e64:	ldr	r3, [sp, #4]
   29e68:	ldr	r2, [sp, #12]
   29e6c:	add	r2, r3, r2, lsl #3
   29e70:	mov	r1, #0
   29e74:	ldr	r3, [r0, #4]!
   29e78:	str	r3, [r2]
   29e7c:	str	r8, [r2, #4]
   29e80:	add	r2, r2, #8
   29e84:	add	r1, r1, #1
   29e88:	ldr	r6, [fp]
   29e8c:	cmp	r6, r1
   29e90:	bgt	29e74 <GetDataSlab+0x8890>
   29e94:	ldr	r3, [sp, #192]	; 0xc0
   29e98:	ldr	r2, [r3]
   29e9c:	ldr	r3, [sp, #196]	; 0xc4
   29ea0:	ldr	r3, [r3]
   29ea4:	sub	r3, r2, r3
   29ea8:	add	lr, lr, r3
   29eac:	add	ip, ip, r3, lsl #2
   29eb0:	cmp	r9, #1
   29eb4:	ble	29e24 <GetDataSlab+0x8840>
   29eb8:	ldr	r3, [sp, #76]	; 0x4c
   29ebc:	add	r3, r3, #1
   29ec0:	str	r3, [sp, #76]	; 0x4c
   29ec4:	ldr	r1, [fp, #4]
   29ec8:	sdiv	r2, r3, r1
   29ecc:	mls	r3, r1, r2, r3
   29ed0:	cmp	r3, #0
   29ed4:	bne	29e0c <GetDataSlab+0x8828>
   29ed8:	add	r4, sp, #76	; 0x4c
   29edc:	add	r7, fp, #4
   29ee0:	add	r5, sp, #116	; 0x74
   29ee4:	ldr	r0, [sp, #28]
   29ee8:	b	29dd0 <GetDataSlab+0x87ec>
   29eec:	mov	r3, #0
   29ef0:	b	251fc <GetDataSlab+0x3c18>
   29ef4:	ldr	r3, [sp, #196]	; 0xc4
   29ef8:	ldr	r2, [r3, r0, lsl #2]
   29efc:	cmp	r2, #0
   29f00:	beq	29f14 <GetDataSlab+0x8930>
   29f04:	ldr	r3, [r5, #-4]
   29f08:	mul	r3, r3, r2
   29f0c:	add	ip, ip, r3, lsl #2
   29f10:	add	lr, lr, r3
   29f14:	add	r0, r0, #1
   29f18:	cmp	r9, r0
   29f1c:	beq	29fa4 <GetDataSlab+0x89c0>
   29f20:	ldr	r3, [r4]
   29f24:	add	r1, r3, #1
   29f28:	str	r1, [r4]
   29f2c:	ldr	r2, [r8, #4]!
   29f30:	sdiv	r3, r1, r2
   29f34:	mls	r3, r2, r3, r1
   29f38:	cmp	r3, #0
   29f3c:	bne	29f90 <GetDataSlab+0x89ac>
   29f40:	str	r7, [r4], #4
   29f44:	add	r5, r5, #4
   29f48:	ldr	r2, [r5]
   29f4c:	sdiv	r3, lr, r2
   29f50:	mls	r3, r2, r3, lr
   29f54:	cmp	r3, #0
   29f58:	beq	29ef4 <GetDataSlab+0x8910>
   29f5c:	ldr	r1, [r5, #-4]
   29f60:	str	r1, [sp, #8]
   29f64:	ldr	r1, [sp, #196]	; 0xc4
   29f68:	ldr	r1, [r1, r0, lsl #2]
   29f6c:	str	r1, [sp, #12]
   29f70:	sub	r3, r2, r3
   29f74:	mov	r2, r1
   29f78:	ldr	r1, [sp, #8]
   29f7c:	mla	r3, r2, r1, r3
   29f80:	add	ip, ip, r3, lsl #2
   29f84:	add	lr, lr, r3
   29f88:	b	29f14 <GetDataSlab+0x8930>
   29f8c:	mov	r0, #1
   29f90:	add	r3, sp, #152	; 0x98
   29f94:	add	r3, r3, r0, lsl #2
   29f98:	ldr	r3, [r3, #-120]	; 0xffffff88
   29f9c:	add	lr, lr, r3
   29fa0:	add	ip, ip, r3, lsl #2
   29fa4:	ldr	r3, [sp, #20]
   29fa8:	add	r3, r3, r6
   29fac:	str	r3, [sp, #20]
   29fb0:	ldr	r2, [sp, #16]
   29fb4:	cmp	r3, r2
   29fb8:	bge	2a078 <GetDataSlab+0x8a94>
   29fbc:	ldr	r3, [sp, #196]	; 0xc4
   29fc0:	ldr	r3, [r3]
   29fc4:	cmp	r3, #0
   29fc8:	addne	ip, ip, r3, lsl #2
   29fcc:	addne	lr, lr, r3
   29fd0:	ldr	r6, [fp]
   29fd4:	cmp	r6, #0
   29fd8:	ble	2a018 <GetDataSlab+0x8a34>
   29fdc:	ldr	r3, [sp, #4]
   29fe0:	ldr	r2, [sp, #20]
   29fe4:	add	r3, r3, r2, lsl #3
   29fe8:	mov	r2, #0
   29fec:	ldr	r1, [ip]
   29ff0:	str	r1, [r3]
   29ff4:	str	r7, [r3, #4]
   29ff8:	add	r3, r3, #8
   29ffc:	ldr	r1, [sl]
   2a000:	add	ip, ip, r1, lsl #2
   2a004:	add	lr, lr, r1
   2a008:	add	r2, r2, #1
   2a00c:	ldr	r6, [fp]
   2a010:	cmp	r6, r2
   2a014:	bgt	29fec <GetDataSlab+0x8a08>
   2a018:	ldr	r3, [sp, #192]	; 0xc0
   2a01c:	ldr	r2, [r3]
   2a020:	ldr	r3, [sp, #196]	; 0xc4
   2a024:	ldr	r3, [r3]
   2a028:	sub	r3, r2, r3
   2a02c:	ldr	r2, [sl]
   2a030:	mls	r3, r2, r6, r3
   2a034:	add	lr, lr, r3
   2a038:	add	ip, ip, r3, lsl #2
   2a03c:	cmp	r9, #1
   2a040:	ble	29fa4 <GetDataSlab+0x89c0>
   2a044:	ldr	r3, [sp, #76]	; 0x4c
   2a048:	add	r3, r3, #1
   2a04c:	str	r3, [sp, #76]	; 0x4c
   2a050:	ldr	r1, [fp, #4]
   2a054:	sdiv	r2, r3, r1
   2a058:	mls	r3, r1, r2, r3
   2a05c:	cmp	r3, #0
   2a060:	bne	29f8c <GetDataSlab+0x89a8>
   2a064:	add	r4, sp, #76	; 0x4c
   2a068:	add	r8, fp, #4
   2a06c:	add	r5, sp, #112	; 0x70
   2a070:	mov	r0, #1
   2a074:	b	29f40 <GetDataSlab+0x895c>
   2a078:	mov	r3, #0
   2a07c:	b	251fc <GetDataSlab+0x3c18>
   2a080:	ldr	r3, [sl]
   2a084:	str	r3, [sp, #28]
   2a088:	sub	r3, r3, #1
   2a08c:	str	r3, [sp, #32]
   2a090:	ldr	r3, [sp, #192]	; 0xc0
   2a094:	ldr	r3, [r3]
   2a098:	str	r3, [sp, #112]	; 0x70
   2a09c:	ldr	r3, [fp]
   2a0a0:	str	r3, [sp, #16]
   2a0a4:	cmp	r9, #1
   2a0a8:	ble	2a0cc <GetDataSlab+0x8ae8>
   2a0ac:	str	sl, [sp, #20]
   2a0b0:	add	r8, sp, #36	; 0x24
   2a0b4:	ldr	r5, [sp, #192]	; 0xc0
   2a0b8:	add	r6, sp, #112	; 0x70
   2a0bc:	str	r5, [sp, #12]
   2a0c0:	mov	r4, #1
   2a0c4:	mov	lr, #0
   2a0c8:	b	3f738 <GetDataSlab+0x1e154>
   2a0cc:	mov	lr, #0
   2a0d0:	b	3f7d0 <GetDataSlab+0x1e1ec>
   2a0d4:	ldr	r3, [sp, #16]
   2a0d8:	cmp	r3, #0
   2a0dc:	ble	3a36c <GetDataSlab+0x18d88>
   2a0e0:	mov	r3, #0
   2a0e4:	str	r3, [sp, #12]
   2a0e8:	mov	r8, r3
   2a0ec:	b	2a1ac <GetDataSlab+0x8bc8>
   2a0f0:	ldr	r3, [sp, #196]	; 0xc4
   2a0f4:	ldr	r3, [r3, r0, lsl #2]
   2a0f8:	cmp	r3, #0
   2a0fc:	beq	2a110 <GetDataSlab+0x8b2c>
   2a100:	ldr	r2, [r5, #-8]
   2a104:	mul	r3, r2, r3
   2a108:	add	r4, r4, r3, lsl #1
   2a10c:	add	lr, lr, r3
   2a110:	add	r0, r0, #1
   2a114:	cmp	r9, r0
   2a118:	beq	2a190 <GetDataSlab+0x8bac>
   2a11c:	ldr	r3, [ip]
   2a120:	add	r1, r3, #1
   2a124:	str	r1, [ip]
   2a128:	ldr	r2, [r7, #4]!
   2a12c:	sdiv	r3, r1, r2
   2a130:	mls	r3, r2, r3, r1
   2a134:	cmp	r3, #0
   2a138:	bne	2a17c <GetDataSlab+0x8b98>
   2a13c:	str	r8, [ip], #4
   2a140:	ldr	r2, [r5], #4
   2a144:	sdiv	r3, lr, r2
   2a148:	mls	r3, r2, r3, lr
   2a14c:	cmp	r3, #0
   2a150:	beq	2a0f0 <GetDataSlab+0x8b0c>
   2a154:	ldr	r1, [r5, #-8]
   2a158:	ldr	sl, [sp, #196]	; 0xc4
   2a15c:	ldr	sl, [sl, r0, lsl #2]
   2a160:	str	sl, [sp, #8]
   2a164:	sub	r3, r2, r3
   2a168:	mla	r3, sl, r1, r3
   2a16c:	add	r4, r4, r3, lsl #1
   2a170:	add	lr, lr, r3
   2a174:	b	2a110 <GetDataSlab+0x8b2c>
   2a178:	ldr	r0, [sp, #28]
   2a17c:	add	r3, sp, #152	; 0x98
   2a180:	add	r3, r3, r0, lsl #2
   2a184:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a188:	add	lr, lr, r3
   2a18c:	add	r4, r4, r3, lsl #1
   2a190:	ldr	r3, [sp, #12]
   2a194:	add	r3, r3, r6
   2a198:	str	r3, [sp, #12]
   2a19c:	ldr	r3, [sp, #16]
   2a1a0:	ldr	r2, [sp, #12]
   2a1a4:	cmp	r2, r3
   2a1a8:	bge	2a254 <GetDataSlab+0x8c70>
   2a1ac:	ldr	r3, [sp, #196]	; 0xc4
   2a1b0:	ldr	r3, [r3]
   2a1b4:	cmp	r3, #0
   2a1b8:	addne	r4, r4, r3, lsl #1
   2a1bc:	addne	lr, lr, r3
   2a1c0:	ldr	r6, [fp]
   2a1c4:	cmp	r6, #0
   2a1c8:	ble	2a1fc <GetDataSlab+0x8c18>
   2a1cc:	sub	ip, r4, #2
   2a1d0:	ldr	r3, [sp, #4]
   2a1d4:	ldr	r2, [sp, #12]
   2a1d8:	add	r0, r3, r2, lsl #3
   2a1dc:	mov	r1, #0
   2a1e0:	ldrsh	r2, [ip, #2]!
   2a1e4:	asr	r3, r2, #31
   2a1e8:	strd	r2, [r0], #8
   2a1ec:	add	r1, r1, #1
   2a1f0:	ldr	r6, [fp]
   2a1f4:	cmp	r6, r1
   2a1f8:	bgt	2a1e0 <GetDataSlab+0x8bfc>
   2a1fc:	ldr	r3, [sp, #192]	; 0xc0
   2a200:	ldr	r2, [r3]
   2a204:	ldr	r3, [sp, #196]	; 0xc4
   2a208:	ldr	r3, [r3]
   2a20c:	sub	r3, r2, r3
   2a210:	add	lr, lr, r3
   2a214:	add	r4, r4, r3, lsl #1
   2a218:	cmp	r9, #1
   2a21c:	ble	2a190 <GetDataSlab+0x8bac>
   2a220:	ldr	r3, [sp, #76]	; 0x4c
   2a224:	add	r3, r3, #1
   2a228:	str	r3, [sp, #76]	; 0x4c
   2a22c:	ldr	r1, [fp, #4]
   2a230:	sdiv	r2, r3, r1
   2a234:	mls	r3, r1, r2, r3
   2a238:	cmp	r3, #0
   2a23c:	bne	2a178 <GetDataSlab+0x8b94>
   2a240:	add	ip, sp, #76	; 0x4c
   2a244:	add	r7, fp, #4
   2a248:	add	r5, sp, #116	; 0x74
   2a24c:	ldr	r0, [sp, #28]
   2a250:	b	2a13c <GetDataSlab+0x8b58>
   2a254:	mov	r3, #0
   2a258:	b	251fc <GetDataSlab+0x3c18>
   2a25c:	ldr	r3, [sp, #196]	; 0xc4
   2a260:	ldr	r2, [r3, r0, lsl #2]
   2a264:	cmp	r2, #0
   2a268:	beq	2a27c <GetDataSlab+0x8c98>
   2a26c:	ldr	r3, [r5, #-4]
   2a270:	mul	r3, r3, r2
   2a274:	add	r4, r4, r3, lsl #1
   2a278:	add	lr, lr, r3
   2a27c:	add	r0, r0, #1
   2a280:	cmp	r9, r0
   2a284:	beq	2a30c <GetDataSlab+0x8d28>
   2a288:	ldr	r3, [ip]
   2a28c:	add	r1, r3, #1
   2a290:	str	r1, [ip]
   2a294:	ldr	r2, [r7, #4]!
   2a298:	sdiv	r3, r1, r2
   2a29c:	mls	r3, r2, r3, r1
   2a2a0:	cmp	r3, #0
   2a2a4:	bne	2a2f8 <GetDataSlab+0x8d14>
   2a2a8:	str	r8, [ip], #4
   2a2ac:	add	r5, r5, #4
   2a2b0:	ldr	r2, [r5]
   2a2b4:	sdiv	r3, lr, r2
   2a2b8:	mls	r3, r2, r3, lr
   2a2bc:	cmp	r3, #0
   2a2c0:	beq	2a25c <GetDataSlab+0x8c78>
   2a2c4:	ldr	r1, [r5, #-4]
   2a2c8:	str	r1, [sp, #8]
   2a2cc:	ldr	r1, [sp, #196]	; 0xc4
   2a2d0:	ldr	r1, [r1, r0, lsl #2]
   2a2d4:	str	r1, [sp, #12]
   2a2d8:	sub	r3, r2, r3
   2a2dc:	mov	r2, r1
   2a2e0:	ldr	r1, [sp, #8]
   2a2e4:	mla	r3, r2, r1, r3
   2a2e8:	add	r4, r4, r3, lsl #1
   2a2ec:	add	lr, lr, r3
   2a2f0:	b	2a27c <GetDataSlab+0x8c98>
   2a2f4:	mov	r0, #1
   2a2f8:	add	r3, sp, #152	; 0x98
   2a2fc:	add	r3, r3, r0, lsl #2
   2a300:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a304:	add	lr, lr, r3
   2a308:	add	r4, r4, r3, lsl #1
   2a30c:	ldr	r3, [sp, #20]
   2a310:	add	r3, r3, r6
   2a314:	str	r3, [sp, #20]
   2a318:	ldr	r2, [sp, #16]
   2a31c:	cmp	r3, r2
   2a320:	bge	2a3dc <GetDataSlab+0x8df8>
   2a324:	ldr	r3, [sp, #196]	; 0xc4
   2a328:	ldr	r3, [r3]
   2a32c:	cmp	r3, #0
   2a330:	addne	r4, r4, r3, lsl #1
   2a334:	addne	lr, lr, r3
   2a338:	ldr	r6, [fp]
   2a33c:	cmp	r6, #0
   2a340:	ble	2a37c <GetDataSlab+0x8d98>
   2a344:	ldr	r3, [sp, #4]
   2a348:	ldr	r2, [sp, #20]
   2a34c:	add	r2, r3, r2, lsl #3
   2a350:	mov	r3, #0
   2a354:	ldrsh	r0, [r4]
   2a358:	asr	r1, r0, #31
   2a35c:	strd	r0, [r2], #8
   2a360:	ldr	r1, [sl]
   2a364:	add	r4, r4, r1, lsl #1
   2a368:	add	lr, lr, r1
   2a36c:	add	r3, r3, #1
   2a370:	ldr	r6, [fp]
   2a374:	cmp	r6, r3
   2a378:	bgt	2a354 <GetDataSlab+0x8d70>
   2a37c:	ldr	r3, [sp, #192]	; 0xc0
   2a380:	ldr	r2, [r3]
   2a384:	ldr	r3, [sp, #196]	; 0xc4
   2a388:	ldr	r3, [r3]
   2a38c:	sub	r3, r2, r3
   2a390:	ldr	r2, [sl]
   2a394:	mls	r3, r2, r6, r3
   2a398:	add	lr, lr, r3
   2a39c:	add	r4, r4, r3, lsl #1
   2a3a0:	cmp	r9, #1
   2a3a4:	ble	2a30c <GetDataSlab+0x8d28>
   2a3a8:	ldr	r3, [sp, #76]	; 0x4c
   2a3ac:	add	r3, r3, #1
   2a3b0:	str	r3, [sp, #76]	; 0x4c
   2a3b4:	ldr	r1, [fp, #4]
   2a3b8:	sdiv	r2, r3, r1
   2a3bc:	mls	r3, r1, r2, r3
   2a3c0:	cmp	r3, #0
   2a3c4:	bne	2a2f4 <GetDataSlab+0x8d10>
   2a3c8:	add	ip, sp, #76	; 0x4c
   2a3cc:	add	r7, fp, #4
   2a3d0:	add	r5, sp, #112	; 0x70
   2a3d4:	mov	r0, #1
   2a3d8:	b	2a2a8 <GetDataSlab+0x8cc4>
   2a3dc:	mov	r3, #0
   2a3e0:	b	251fc <GetDataSlab+0x3c18>
   2a3e4:	ldr	r3, [sl]
   2a3e8:	str	r3, [sp, #28]
   2a3ec:	sub	r3, r3, #1
   2a3f0:	str	r3, [sp, #32]
   2a3f4:	ldr	r3, [sp, #192]	; 0xc0
   2a3f8:	ldr	r3, [r3]
   2a3fc:	str	r3, [sp, #112]	; 0x70
   2a400:	ldr	r3, [fp]
   2a404:	str	r3, [sp, #16]
   2a408:	cmp	r9, #1
   2a40c:	ble	2a430 <GetDataSlab+0x8e4c>
   2a410:	str	sl, [sp, #20]
   2a414:	add	r8, sp, #36	; 0x24
   2a418:	ldr	r5, [sp, #192]	; 0xc0
   2a41c:	add	r6, sp, #112	; 0x70
   2a420:	str	r5, [sp, #12]
   2a424:	mov	r4, #1
   2a428:	mov	lr, #0
   2a42c:	b	3f828 <GetDataSlab+0x1e244>
   2a430:	mov	lr, #0
   2a434:	b	3f8c0 <GetDataSlab+0x1e2dc>
   2a438:	ldr	r3, [sp, #16]
   2a43c:	cmp	r3, #0
   2a440:	ble	3a374 <GetDataSlab+0x18d90>
   2a444:	mov	r3, #0
   2a448:	str	r3, [sp, #12]
   2a44c:	mov	r8, r3
   2a450:	b	2a510 <GetDataSlab+0x8f2c>
   2a454:	ldr	r3, [sp, #196]	; 0xc4
   2a458:	ldr	r3, [r3, r0, lsl #2]
   2a45c:	cmp	r3, #0
   2a460:	beq	2a474 <GetDataSlab+0x8e90>
   2a464:	ldr	r2, [r5, #-8]
   2a468:	mul	r3, r2, r3
   2a46c:	add	r4, r4, r3, lsl #1
   2a470:	add	lr, lr, r3
   2a474:	add	r0, r0, #1
   2a478:	cmp	r9, r0
   2a47c:	beq	2a4f4 <GetDataSlab+0x8f10>
   2a480:	ldr	r3, [ip]
   2a484:	add	r1, r3, #1
   2a488:	str	r1, [ip]
   2a48c:	ldr	r2, [r7, #4]!
   2a490:	sdiv	r3, r1, r2
   2a494:	mls	r3, r2, r3, r1
   2a498:	cmp	r3, #0
   2a49c:	bne	2a4e0 <GetDataSlab+0x8efc>
   2a4a0:	str	r8, [ip], #4
   2a4a4:	ldr	r2, [r5], #4
   2a4a8:	sdiv	r3, lr, r2
   2a4ac:	mls	r3, r2, r3, lr
   2a4b0:	cmp	r3, #0
   2a4b4:	beq	2a454 <GetDataSlab+0x8e70>
   2a4b8:	ldr	r1, [r5, #-8]
   2a4bc:	ldr	sl, [sp, #196]	; 0xc4
   2a4c0:	ldr	sl, [sl, r0, lsl #2]
   2a4c4:	str	sl, [sp, #8]
   2a4c8:	sub	r3, r2, r3
   2a4cc:	mla	r3, sl, r1, r3
   2a4d0:	add	r4, r4, r3, lsl #1
   2a4d4:	add	lr, lr, r3
   2a4d8:	b	2a474 <GetDataSlab+0x8e90>
   2a4dc:	ldr	r0, [sp, #28]
   2a4e0:	add	r3, sp, #152	; 0x98
   2a4e4:	add	r3, r3, r0, lsl #2
   2a4e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a4ec:	add	lr, lr, r3
   2a4f0:	add	r4, r4, r3, lsl #1
   2a4f4:	ldr	r3, [sp, #12]
   2a4f8:	add	r3, r3, r6
   2a4fc:	str	r3, [sp, #12]
   2a500:	ldr	r3, [sp, #16]
   2a504:	ldr	r2, [sp, #12]
   2a508:	cmp	r2, r3
   2a50c:	bge	2a5b8 <GetDataSlab+0x8fd4>
   2a510:	ldr	r3, [sp, #196]	; 0xc4
   2a514:	ldr	r3, [r3]
   2a518:	cmp	r3, #0
   2a51c:	addne	r4, r4, r3, lsl #1
   2a520:	addne	lr, lr, r3
   2a524:	ldr	r6, [fp]
   2a528:	cmp	r6, #0
   2a52c:	ble	2a560 <GetDataSlab+0x8f7c>
   2a530:	sub	ip, r4, #2
   2a534:	ldr	r3, [sp, #4]
   2a538:	ldr	r2, [sp, #12]
   2a53c:	add	r0, r3, r2, lsl #3
   2a540:	mov	r1, #0
   2a544:	ldrh	r2, [ip, #2]!
   2a548:	mov	r3, #0
   2a54c:	strd	r2, [r0], #8
   2a550:	add	r1, r1, #1
   2a554:	ldr	r6, [fp]
   2a558:	cmp	r6, r1
   2a55c:	bgt	2a544 <GetDataSlab+0x8f60>
   2a560:	ldr	r3, [sp, #192]	; 0xc0
   2a564:	ldr	r2, [r3]
   2a568:	ldr	r3, [sp, #196]	; 0xc4
   2a56c:	ldr	r3, [r3]
   2a570:	sub	r3, r2, r3
   2a574:	add	lr, lr, r3
   2a578:	add	r4, r4, r3, lsl #1
   2a57c:	cmp	r9, #1
   2a580:	ble	2a4f4 <GetDataSlab+0x8f10>
   2a584:	ldr	r3, [sp, #76]	; 0x4c
   2a588:	add	r3, r3, #1
   2a58c:	str	r3, [sp, #76]	; 0x4c
   2a590:	ldr	r1, [fp, #4]
   2a594:	sdiv	r2, r3, r1
   2a598:	mls	r3, r1, r2, r3
   2a59c:	cmp	r3, #0
   2a5a0:	bne	2a4dc <GetDataSlab+0x8ef8>
   2a5a4:	add	ip, sp, #76	; 0x4c
   2a5a8:	add	r7, fp, #4
   2a5ac:	add	r5, sp, #116	; 0x74
   2a5b0:	ldr	r0, [sp, #28]
   2a5b4:	b	2a4a0 <GetDataSlab+0x8ebc>
   2a5b8:	mov	r3, #0
   2a5bc:	b	251fc <GetDataSlab+0x3c18>
   2a5c0:	ldr	r3, [sp, #196]	; 0xc4
   2a5c4:	ldr	r2, [r3, r0, lsl #2]
   2a5c8:	cmp	r2, #0
   2a5cc:	beq	2a5e0 <GetDataSlab+0x8ffc>
   2a5d0:	ldr	r3, [r5, #-4]
   2a5d4:	mul	r3, r3, r2
   2a5d8:	add	r4, r4, r3, lsl #1
   2a5dc:	add	lr, lr, r3
   2a5e0:	add	r0, r0, #1
   2a5e4:	cmp	r9, r0
   2a5e8:	beq	2a670 <GetDataSlab+0x908c>
   2a5ec:	ldr	r3, [ip]
   2a5f0:	add	r1, r3, #1
   2a5f4:	str	r1, [ip]
   2a5f8:	ldr	r2, [r7, #4]!
   2a5fc:	sdiv	r3, r1, r2
   2a600:	mls	r3, r2, r3, r1
   2a604:	cmp	r3, #0
   2a608:	bne	2a65c <GetDataSlab+0x9078>
   2a60c:	str	r8, [ip], #4
   2a610:	add	r5, r5, #4
   2a614:	ldr	r2, [r5]
   2a618:	sdiv	r3, lr, r2
   2a61c:	mls	r3, r2, r3, lr
   2a620:	cmp	r3, #0
   2a624:	beq	2a5c0 <GetDataSlab+0x8fdc>
   2a628:	ldr	r1, [r5, #-4]
   2a62c:	str	r1, [sp, #8]
   2a630:	ldr	r1, [sp, #196]	; 0xc4
   2a634:	ldr	r1, [r1, r0, lsl #2]
   2a638:	str	r1, [sp, #12]
   2a63c:	sub	r3, r2, r3
   2a640:	mov	r2, r1
   2a644:	ldr	r1, [sp, #8]
   2a648:	mla	r3, r2, r1, r3
   2a64c:	add	r4, r4, r3, lsl #1
   2a650:	add	lr, lr, r3
   2a654:	b	2a5e0 <GetDataSlab+0x8ffc>
   2a658:	mov	r0, #1
   2a65c:	add	r3, sp, #152	; 0x98
   2a660:	add	r3, r3, r0, lsl #2
   2a664:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a668:	add	lr, lr, r3
   2a66c:	add	r4, r4, r3, lsl #1
   2a670:	ldr	r3, [sp, #20]
   2a674:	add	r3, r3, r6
   2a678:	str	r3, [sp, #20]
   2a67c:	ldr	r2, [sp, #16]
   2a680:	cmp	r3, r2
   2a684:	bge	2a740 <GetDataSlab+0x915c>
   2a688:	ldr	r3, [sp, #196]	; 0xc4
   2a68c:	ldr	r3, [r3]
   2a690:	cmp	r3, #0
   2a694:	addne	r4, r4, r3, lsl #1
   2a698:	addne	lr, lr, r3
   2a69c:	ldr	r6, [fp]
   2a6a0:	cmp	r6, #0
   2a6a4:	ble	2a6e0 <GetDataSlab+0x90fc>
   2a6a8:	ldr	r3, [sp, #4]
   2a6ac:	ldr	r2, [sp, #20]
   2a6b0:	add	r2, r3, r2, lsl #3
   2a6b4:	mov	r3, #0
   2a6b8:	ldrh	r0, [r4]
   2a6bc:	mov	r1, #0
   2a6c0:	strd	r0, [r2], #8
   2a6c4:	ldr	r1, [sl]
   2a6c8:	add	r4, r4, r1, lsl #1
   2a6cc:	add	lr, lr, r1
   2a6d0:	add	r3, r3, #1
   2a6d4:	ldr	r6, [fp]
   2a6d8:	cmp	r6, r3
   2a6dc:	bgt	2a6b8 <GetDataSlab+0x90d4>
   2a6e0:	ldr	r3, [sp, #192]	; 0xc0
   2a6e4:	ldr	r2, [r3]
   2a6e8:	ldr	r3, [sp, #196]	; 0xc4
   2a6ec:	ldr	r3, [r3]
   2a6f0:	sub	r3, r2, r3
   2a6f4:	ldr	r2, [sl]
   2a6f8:	mls	r3, r2, r6, r3
   2a6fc:	add	lr, lr, r3
   2a700:	add	r4, r4, r3, lsl #1
   2a704:	cmp	r9, #1
   2a708:	ble	2a670 <GetDataSlab+0x908c>
   2a70c:	ldr	r3, [sp, #76]	; 0x4c
   2a710:	add	r3, r3, #1
   2a714:	str	r3, [sp, #76]	; 0x4c
   2a718:	ldr	r1, [fp, #4]
   2a71c:	sdiv	r2, r3, r1
   2a720:	mls	r3, r1, r2, r3
   2a724:	cmp	r3, #0
   2a728:	bne	2a658 <GetDataSlab+0x9074>
   2a72c:	add	ip, sp, #76	; 0x4c
   2a730:	add	r7, fp, #4
   2a734:	add	r5, sp, #112	; 0x70
   2a738:	mov	r0, #1
   2a73c:	b	2a60c <GetDataSlab+0x9028>
   2a740:	mov	r3, #0
   2a744:	b	251fc <GetDataSlab+0x3c18>
   2a748:	ldr	r3, [sl]
   2a74c:	str	r3, [sp, #28]
   2a750:	sub	r3, r3, #1
   2a754:	str	r3, [sp, #32]
   2a758:	ldr	r3, [sp, #192]	; 0xc0
   2a75c:	ldr	r3, [r3]
   2a760:	str	r3, [sp, #112]	; 0x70
   2a764:	ldr	r3, [fp]
   2a768:	str	r3, [sp, #16]
   2a76c:	cmp	r9, #1
   2a770:	ble	2a790 <GetDataSlab+0x91ac>
   2a774:	str	sl, [sp, #20]
   2a778:	add	r7, sp, #36	; 0x24
   2a77c:	ldr	r4, [sp, #192]	; 0xc0
   2a780:	add	r5, sp, #112	; 0x70
   2a784:	str	r4, [sp, #12]
   2a788:	mov	lr, #0
   2a78c:	b	3f558 <GetDataSlab+0x1df74>
   2a790:	mov	lr, #0
   2a794:	b	3f5f0 <GetDataSlab+0x1e00c>
   2a798:	ldr	r3, [sp, #16]
   2a79c:	cmp	r3, #0
   2a7a0:	ble	3a37c <GetDataSlab+0x18d98>
   2a7a4:	mov	r3, #0
   2a7a8:	str	r3, [sp, #12]
   2a7ac:	mov	r8, r3
   2a7b0:	b	2a870 <GetDataSlab+0x928c>
   2a7b4:	ldr	r3, [sp, #196]	; 0xc4
   2a7b8:	ldr	r3, [r3, r0, lsl #2]
   2a7bc:	cmp	r3, #0
   2a7c0:	beq	2a7d4 <GetDataSlab+0x91f0>
   2a7c4:	ldr	r2, [r5, #-8]
   2a7c8:	mul	r3, r2, r3
   2a7cc:	add	ip, ip, r3
   2a7d0:	add	lr, lr, r3
   2a7d4:	add	r0, r0, #1
   2a7d8:	cmp	r9, r0
   2a7dc:	beq	2a854 <GetDataSlab+0x9270>
   2a7e0:	ldr	r3, [r4]
   2a7e4:	add	r1, r3, #1
   2a7e8:	str	r1, [r4]
   2a7ec:	ldr	r2, [r7, #4]!
   2a7f0:	sdiv	r3, r1, r2
   2a7f4:	mls	r3, r2, r3, r1
   2a7f8:	cmp	r3, #0
   2a7fc:	bne	2a840 <GetDataSlab+0x925c>
   2a800:	str	r8, [r4], #4
   2a804:	ldr	r2, [r5], #4
   2a808:	sdiv	r3, lr, r2
   2a80c:	mls	r3, r2, r3, lr
   2a810:	cmp	r3, #0
   2a814:	beq	2a7b4 <GetDataSlab+0x91d0>
   2a818:	ldr	r1, [r5, #-8]
   2a81c:	ldr	sl, [sp, #196]	; 0xc4
   2a820:	ldr	sl, [sl, r0, lsl #2]
   2a824:	str	sl, [sp, #8]
   2a828:	sub	r3, r2, r3
   2a82c:	mla	r3, sl, r1, r3
   2a830:	add	ip, ip, r3
   2a834:	add	lr, lr, r3
   2a838:	b	2a7d4 <GetDataSlab+0x91f0>
   2a83c:	ldr	r0, [sp, #28]
   2a840:	add	r3, sp, #152	; 0x98
   2a844:	add	r3, r3, r0, lsl #2
   2a848:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a84c:	add	lr, lr, r3
   2a850:	add	ip, ip, r3
   2a854:	ldr	r3, [sp, #12]
   2a858:	add	r3, r3, r6
   2a85c:	str	r3, [sp, #12]
   2a860:	ldr	r3, [sp, #16]
   2a864:	ldr	r2, [sp, #12]
   2a868:	cmp	r2, r3
   2a86c:	bge	2a91c <GetDataSlab+0x9338>
   2a870:	ldr	r3, [sp, #196]	; 0xc4
   2a874:	ldr	r3, [r3]
   2a878:	cmp	r3, #0
   2a87c:	addne	ip, ip, r3
   2a880:	addne	lr, lr, r3
   2a884:	ldr	r6, [fp]
   2a888:	cmp	r6, #0
   2a88c:	ble	2a8c4 <GetDataSlab+0x92e0>
   2a890:	sub	r1, ip, #1
   2a894:	ldr	r3, [sp, #4]
   2a898:	ldr	r2, [sp, #12]
   2a89c:	add	r0, r3, r2, lsl #3
   2a8a0:	ldrsb	r2, [r1, #1]
   2a8a4:	asr	r3, r2, #31
   2a8a8:	strd	r2, [r0], #8
   2a8ac:	ldr	r6, [fp]
   2a8b0:	add	r3, r1, #2
   2a8b4:	sub	r3, r3, ip
   2a8b8:	add	r1, r1, #1
   2a8bc:	cmp	r6, r3
   2a8c0:	bgt	2a8a0 <GetDataSlab+0x92bc>
   2a8c4:	ldr	r3, [sp, #192]	; 0xc0
   2a8c8:	ldr	r2, [r3]
   2a8cc:	ldr	r3, [sp, #196]	; 0xc4
   2a8d0:	ldr	r3, [r3]
   2a8d4:	sub	r3, r2, r3
   2a8d8:	add	lr, lr, r3
   2a8dc:	add	ip, ip, r3
   2a8e0:	cmp	r9, #1
   2a8e4:	ble	2a854 <GetDataSlab+0x9270>
   2a8e8:	ldr	r3, [sp, #76]	; 0x4c
   2a8ec:	add	r3, r3, #1
   2a8f0:	str	r3, [sp, #76]	; 0x4c
   2a8f4:	ldr	r1, [fp, #4]
   2a8f8:	sdiv	r2, r3, r1
   2a8fc:	mls	r3, r1, r2, r3
   2a900:	cmp	r3, #0
   2a904:	bne	2a83c <GetDataSlab+0x9258>
   2a908:	add	r4, sp, #76	; 0x4c
   2a90c:	add	r7, fp, #4
   2a910:	add	r5, sp, #116	; 0x74
   2a914:	ldr	r0, [sp, #28]
   2a918:	b	2a800 <GetDataSlab+0x921c>
   2a91c:	mov	r3, #0
   2a920:	b	251fc <GetDataSlab+0x3c18>
   2a924:	ldr	r3, [sp, #196]	; 0xc4
   2a928:	ldr	r2, [r3, r0, lsl #2]
   2a92c:	cmp	r2, #0
   2a930:	beq	2a944 <GetDataSlab+0x9360>
   2a934:	ldr	r3, [r5, #-4]
   2a938:	mul	r3, r3, r2
   2a93c:	add	ip, ip, r3
   2a940:	add	lr, lr, r3
   2a944:	add	r0, r0, #1
   2a948:	cmp	r9, r0
   2a94c:	beq	2a9d4 <GetDataSlab+0x93f0>
   2a950:	ldr	r3, [r4]
   2a954:	add	r1, r3, #1
   2a958:	str	r1, [r4]
   2a95c:	ldr	r2, [r7, #4]!
   2a960:	sdiv	r3, r1, r2
   2a964:	mls	r3, r2, r3, r1
   2a968:	cmp	r3, #0
   2a96c:	bne	2a9c0 <GetDataSlab+0x93dc>
   2a970:	str	r8, [r4], #4
   2a974:	add	r5, r5, #4
   2a978:	ldr	r2, [r5]
   2a97c:	sdiv	r3, lr, r2
   2a980:	mls	r3, r2, r3, lr
   2a984:	cmp	r3, #0
   2a988:	beq	2a924 <GetDataSlab+0x9340>
   2a98c:	ldr	r1, [r5, #-4]
   2a990:	str	r1, [sp, #8]
   2a994:	ldr	r1, [sp, #196]	; 0xc4
   2a998:	ldr	r1, [r1, r0, lsl #2]
   2a99c:	str	r1, [sp, #12]
   2a9a0:	sub	r3, r2, r3
   2a9a4:	mov	r2, r1
   2a9a8:	ldr	r1, [sp, #8]
   2a9ac:	mla	r3, r2, r1, r3
   2a9b0:	add	ip, ip, r3
   2a9b4:	add	lr, lr, r3
   2a9b8:	b	2a944 <GetDataSlab+0x9360>
   2a9bc:	mov	r0, #1
   2a9c0:	add	r3, sp, #152	; 0x98
   2a9c4:	add	r3, r3, r0, lsl #2
   2a9c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2a9cc:	add	lr, lr, r3
   2a9d0:	add	ip, ip, r3
   2a9d4:	ldr	r3, [sp, #20]
   2a9d8:	add	r3, r3, r6
   2a9dc:	str	r3, [sp, #20]
   2a9e0:	ldr	r2, [sp, #16]
   2a9e4:	cmp	r3, r2
   2a9e8:	bge	2aaa4 <GetDataSlab+0x94c0>
   2a9ec:	ldr	r3, [sp, #196]	; 0xc4
   2a9f0:	ldr	r3, [r3]
   2a9f4:	cmp	r3, #0
   2a9f8:	addne	ip, ip, r3
   2a9fc:	addne	lr, lr, r3
   2aa00:	ldr	r6, [fp]
   2aa04:	cmp	r6, #0
   2aa08:	ble	2aa44 <GetDataSlab+0x9460>
   2aa0c:	ldr	r3, [sp, #4]
   2aa10:	ldr	r2, [sp, #20]
   2aa14:	add	r2, r3, r2, lsl #3
   2aa18:	mov	r3, #0
   2aa1c:	ldrsb	r0, [ip]
   2aa20:	asr	r1, r0, #31
   2aa24:	strd	r0, [r2], #8
   2aa28:	ldr	r1, [sl]
   2aa2c:	add	ip, ip, r1
   2aa30:	add	lr, lr, r1
   2aa34:	add	r3, r3, #1
   2aa38:	ldr	r6, [fp]
   2aa3c:	cmp	r6, r3
   2aa40:	bgt	2aa1c <GetDataSlab+0x9438>
   2aa44:	ldr	r3, [sp, #192]	; 0xc0
   2aa48:	ldr	r2, [r3]
   2aa4c:	ldr	r3, [sp, #196]	; 0xc4
   2aa50:	ldr	r3, [r3]
   2aa54:	sub	r3, r2, r3
   2aa58:	ldr	r2, [sl]
   2aa5c:	mls	r3, r2, r6, r3
   2aa60:	add	lr, lr, r3
   2aa64:	add	ip, ip, r3
   2aa68:	cmp	r9, #1
   2aa6c:	ble	2a9d4 <GetDataSlab+0x93f0>
   2aa70:	ldr	r3, [sp, #76]	; 0x4c
   2aa74:	add	r3, r3, #1
   2aa78:	str	r3, [sp, #76]	; 0x4c
   2aa7c:	ldr	r1, [fp, #4]
   2aa80:	sdiv	r2, r3, r1
   2aa84:	mls	r3, r1, r2, r3
   2aa88:	cmp	r3, #0
   2aa8c:	bne	2a9bc <GetDataSlab+0x93d8>
   2aa90:	add	r4, sp, #76	; 0x4c
   2aa94:	add	r7, fp, #4
   2aa98:	add	r5, sp, #112	; 0x70
   2aa9c:	mov	r0, #1
   2aaa0:	b	2a970 <GetDataSlab+0x938c>
   2aaa4:	mov	r3, #0
   2aaa8:	b	251fc <GetDataSlab+0x3c18>
   2aaac:	ldr	r3, [sl]
   2aab0:	str	r3, [sp, #28]
   2aab4:	sub	r3, r3, #1
   2aab8:	str	r3, [sp, #32]
   2aabc:	ldr	r3, [sp, #192]	; 0xc0
   2aac0:	ldr	r3, [r3]
   2aac4:	str	r3, [sp, #112]	; 0x70
   2aac8:	ldr	r3, [fp]
   2aacc:	str	r3, [sp, #16]
   2aad0:	cmp	r9, #1
   2aad4:	ble	2aaf8 <GetDataSlab+0x9514>
   2aad8:	str	sl, [sp, #20]
   2aadc:	add	r8, sp, #36	; 0x24
   2aae0:	ldr	r5, [sp, #192]	; 0xc0
   2aae4:	add	r6, sp, #112	; 0x70
   2aae8:	str	r5, [sp, #12]
   2aaec:	mov	r4, #1
   2aaf0:	mov	lr, #0
   2aaf4:	b	3f648 <GetDataSlab+0x1e064>
   2aaf8:	mov	lr, #0
   2aafc:	b	3f6e0 <GetDataSlab+0x1e0fc>
   2ab00:	ldr	r3, [sp, #16]
   2ab04:	cmp	r3, #0
   2ab08:	ble	3a384 <GetDataSlab+0x18da0>
   2ab0c:	mov	r3, #0
   2ab10:	str	r3, [sp, #12]
   2ab14:	mov	r8, r3
   2ab18:	b	2abd8 <GetDataSlab+0x95f4>
   2ab1c:	ldr	r3, [sp, #196]	; 0xc4
   2ab20:	ldr	r3, [r3, r0, lsl #2]
   2ab24:	cmp	r3, #0
   2ab28:	beq	2ab3c <GetDataSlab+0x9558>
   2ab2c:	ldr	r2, [r5, #-8]
   2ab30:	mul	r3, r2, r3
   2ab34:	add	ip, ip, r3
   2ab38:	add	lr, lr, r3
   2ab3c:	add	r0, r0, #1
   2ab40:	cmp	r9, r0
   2ab44:	beq	2abbc <GetDataSlab+0x95d8>
   2ab48:	ldr	r3, [r4]
   2ab4c:	add	r1, r3, #1
   2ab50:	str	r1, [r4]
   2ab54:	ldr	r2, [r7, #4]!
   2ab58:	sdiv	r3, r1, r2
   2ab5c:	mls	r3, r2, r3, r1
   2ab60:	cmp	r3, #0
   2ab64:	bne	2aba8 <GetDataSlab+0x95c4>
   2ab68:	str	r8, [r4], #4
   2ab6c:	ldr	r2, [r5], #4
   2ab70:	sdiv	r3, lr, r2
   2ab74:	mls	r3, r2, r3, lr
   2ab78:	cmp	r3, #0
   2ab7c:	beq	2ab1c <GetDataSlab+0x9538>
   2ab80:	ldr	r1, [r5, #-8]
   2ab84:	ldr	sl, [sp, #196]	; 0xc4
   2ab88:	ldr	sl, [sl, r0, lsl #2]
   2ab8c:	str	sl, [sp, #8]
   2ab90:	sub	r3, r2, r3
   2ab94:	mla	r3, sl, r1, r3
   2ab98:	add	ip, ip, r3
   2ab9c:	add	lr, lr, r3
   2aba0:	b	2ab3c <GetDataSlab+0x9558>
   2aba4:	ldr	r0, [sp, #28]
   2aba8:	add	r3, sp, #152	; 0x98
   2abac:	add	r3, r3, r0, lsl #2
   2abb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2abb4:	add	lr, lr, r3
   2abb8:	add	ip, ip, r3
   2abbc:	ldr	r3, [sp, #12]
   2abc0:	add	r3, r3, r6
   2abc4:	str	r3, [sp, #12]
   2abc8:	ldr	r3, [sp, #16]
   2abcc:	ldr	r2, [sp, #12]
   2abd0:	cmp	r2, r3
   2abd4:	bge	2ac84 <GetDataSlab+0x96a0>
   2abd8:	ldr	r3, [sp, #196]	; 0xc4
   2abdc:	ldr	r3, [r3]
   2abe0:	cmp	r3, #0
   2abe4:	addne	ip, ip, r3
   2abe8:	addne	lr, lr, r3
   2abec:	ldr	r6, [fp]
   2abf0:	cmp	r6, #0
   2abf4:	ble	2ac2c <GetDataSlab+0x9648>
   2abf8:	sub	r1, ip, #1
   2abfc:	ldr	r3, [sp, #4]
   2ac00:	ldr	r2, [sp, #12]
   2ac04:	add	r0, r3, r2, lsl #3
   2ac08:	ldrb	r2, [r1, #1]
   2ac0c:	mov	r3, #0
   2ac10:	strd	r2, [r0], #8
   2ac14:	ldr	r6, [fp]
   2ac18:	add	r3, r1, #2
   2ac1c:	sub	r3, r3, ip
   2ac20:	add	r1, r1, #1
   2ac24:	cmp	r6, r3
   2ac28:	bgt	2ac08 <GetDataSlab+0x9624>
   2ac2c:	ldr	r3, [sp, #192]	; 0xc0
   2ac30:	ldr	r2, [r3]
   2ac34:	ldr	r3, [sp, #196]	; 0xc4
   2ac38:	ldr	r3, [r3]
   2ac3c:	sub	r3, r2, r3
   2ac40:	add	lr, lr, r3
   2ac44:	add	ip, ip, r3
   2ac48:	cmp	r9, #1
   2ac4c:	ble	2abbc <GetDataSlab+0x95d8>
   2ac50:	ldr	r3, [sp, #76]	; 0x4c
   2ac54:	add	r3, r3, #1
   2ac58:	str	r3, [sp, #76]	; 0x4c
   2ac5c:	ldr	r1, [fp, #4]
   2ac60:	sdiv	r2, r3, r1
   2ac64:	mls	r3, r1, r2, r3
   2ac68:	cmp	r3, #0
   2ac6c:	bne	2aba4 <GetDataSlab+0x95c0>
   2ac70:	add	r4, sp, #76	; 0x4c
   2ac74:	add	r7, fp, #4
   2ac78:	add	r5, sp, #116	; 0x74
   2ac7c:	ldr	r0, [sp, #28]
   2ac80:	b	2ab68 <GetDataSlab+0x9584>
   2ac84:	mov	r3, #0
   2ac88:	b	251fc <GetDataSlab+0x3c18>
   2ac8c:	ldr	r3, [sp, #196]	; 0xc4
   2ac90:	ldr	r2, [r3, r0, lsl #2]
   2ac94:	cmp	r2, #0
   2ac98:	beq	2acac <GetDataSlab+0x96c8>
   2ac9c:	ldr	r3, [r5, #-4]
   2aca0:	mul	r3, r3, r2
   2aca4:	add	ip, ip, r3
   2aca8:	add	lr, lr, r3
   2acac:	add	r0, r0, #1
   2acb0:	cmp	r9, r0
   2acb4:	beq	2ad3c <GetDataSlab+0x9758>
   2acb8:	ldr	r3, [r4]
   2acbc:	add	r1, r3, #1
   2acc0:	str	r1, [r4]
   2acc4:	ldr	r2, [r7, #4]!
   2acc8:	sdiv	r3, r1, r2
   2accc:	mls	r3, r2, r3, r1
   2acd0:	cmp	r3, #0
   2acd4:	bne	2ad28 <GetDataSlab+0x9744>
   2acd8:	str	r8, [r4], #4
   2acdc:	add	r5, r5, #4
   2ace0:	ldr	r2, [r5]
   2ace4:	sdiv	r3, lr, r2
   2ace8:	mls	r3, r2, r3, lr
   2acec:	cmp	r3, #0
   2acf0:	beq	2ac8c <GetDataSlab+0x96a8>
   2acf4:	ldr	r1, [r5, #-4]
   2acf8:	str	r1, [sp, #8]
   2acfc:	ldr	r1, [sp, #196]	; 0xc4
   2ad00:	ldr	r1, [r1, r0, lsl #2]
   2ad04:	str	r1, [sp, #12]
   2ad08:	sub	r3, r2, r3
   2ad0c:	mov	r2, r1
   2ad10:	ldr	r1, [sp, #8]
   2ad14:	mla	r3, r2, r1, r3
   2ad18:	add	ip, ip, r3
   2ad1c:	add	lr, lr, r3
   2ad20:	b	2acac <GetDataSlab+0x96c8>
   2ad24:	mov	r0, #1
   2ad28:	add	r3, sp, #152	; 0x98
   2ad2c:	add	r3, r3, r0, lsl #2
   2ad30:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ad34:	add	lr, lr, r3
   2ad38:	add	ip, ip, r3
   2ad3c:	ldr	r3, [sp, #20]
   2ad40:	add	r3, r3, r6
   2ad44:	str	r3, [sp, #20]
   2ad48:	ldr	r2, [sp, #16]
   2ad4c:	cmp	r3, r2
   2ad50:	bge	2ae0c <GetDataSlab+0x9828>
   2ad54:	ldr	r3, [sp, #196]	; 0xc4
   2ad58:	ldr	r3, [r3]
   2ad5c:	cmp	r3, #0
   2ad60:	addne	ip, ip, r3
   2ad64:	addne	lr, lr, r3
   2ad68:	ldr	r6, [fp]
   2ad6c:	cmp	r6, #0
   2ad70:	ble	2adac <GetDataSlab+0x97c8>
   2ad74:	ldr	r3, [sp, #4]
   2ad78:	ldr	r2, [sp, #20]
   2ad7c:	add	r2, r3, r2, lsl #3
   2ad80:	mov	r3, #0
   2ad84:	ldrb	r0, [ip]
   2ad88:	mov	r1, #0
   2ad8c:	strd	r0, [r2], #8
   2ad90:	ldr	r1, [sl]
   2ad94:	add	ip, ip, r1
   2ad98:	add	lr, lr, r1
   2ad9c:	add	r3, r3, #1
   2ada0:	ldr	r6, [fp]
   2ada4:	cmp	r6, r3
   2ada8:	bgt	2ad84 <GetDataSlab+0x97a0>
   2adac:	ldr	r3, [sp, #192]	; 0xc0
   2adb0:	ldr	r2, [r3]
   2adb4:	ldr	r3, [sp, #196]	; 0xc4
   2adb8:	ldr	r3, [r3]
   2adbc:	sub	r3, r2, r3
   2adc0:	ldr	r2, [sl]
   2adc4:	mls	r3, r2, r6, r3
   2adc8:	add	lr, lr, r3
   2adcc:	add	ip, ip, r3
   2add0:	cmp	r9, #1
   2add4:	ble	2ad3c <GetDataSlab+0x9758>
   2add8:	ldr	r3, [sp, #76]	; 0x4c
   2addc:	add	r3, r3, #1
   2ade0:	str	r3, [sp, #76]	; 0x4c
   2ade4:	ldr	r1, [fp, #4]
   2ade8:	sdiv	r2, r3, r1
   2adec:	mls	r3, r1, r2, r3
   2adf0:	cmp	r3, #0
   2adf4:	bne	2ad24 <GetDataSlab+0x9740>
   2adf8:	add	r4, sp, #76	; 0x4c
   2adfc:	add	r7, fp, #4
   2ae00:	add	r5, sp, #112	; 0x70
   2ae04:	mov	r0, #1
   2ae08:	b	2acd8 <GetDataSlab+0x96f4>
   2ae0c:	mov	r3, #0
   2ae10:	b	251fc <GetDataSlab+0x3c18>
   2ae14:	cmp	r8, #12
   2ae18:	beq	2ae74 <GetDataSlab+0x9890>
   2ae1c:	cmp	r8, #13
   2ae20:	movne	r3, #1
   2ae24:	bne	251fc <GetDataSlab+0x3c18>
   2ae28:	ldr	r3, [sl]
   2ae2c:	str	r3, [sp, #28]
   2ae30:	sub	r3, r3, #1
   2ae34:	str	r3, [sp, #32]
   2ae38:	ldr	r3, [sp, #192]	; 0xc0
   2ae3c:	ldr	r3, [r3]
   2ae40:	str	r3, [sp, #112]	; 0x70
   2ae44:	ldr	r3, [fp]
   2ae48:	str	r3, [sp, #16]
   2ae4c:	cmp	r9, #1
   2ae50:	ble	2b1c4 <GetDataSlab+0x9be0>
   2ae54:	str	sl, [sp, #20]
   2ae58:	add	r8, sp, #36	; 0x24
   2ae5c:	ldr	r5, [sp, #192]	; 0xc0
   2ae60:	add	r6, sp, #112	; 0x70
   2ae64:	str	r5, [sp, #12]
   2ae68:	mov	r4, #1
   2ae6c:	mov	lr, #0
   2ae70:	b	3f378 <GetDataSlab+0x1dd94>
   2ae74:	ldr	r3, [sl]
   2ae78:	str	r3, [sp, #28]
   2ae7c:	sub	r3, r3, #1
   2ae80:	str	r3, [sp, #32]
   2ae84:	ldr	r3, [sp, #192]	; 0xc0
   2ae88:	ldr	r3, [r3]
   2ae8c:	str	r3, [sp, #112]	; 0x70
   2ae90:	ldr	r3, [fp]
   2ae94:	str	r3, [sp, #16]
   2ae98:	cmp	r9, #1
   2ae9c:	ble	2aec0 <GetDataSlab+0x98dc>
   2aea0:	str	sl, [sp, #20]
   2aea4:	add	r8, sp, #36	; 0x24
   2aea8:	ldr	r5, [sp, #192]	; 0xc0
   2aeac:	add	r6, sp, #112	; 0x70
   2aeb0:	str	r5, [sp, #12]
   2aeb4:	mov	r4, #1
   2aeb8:	mov	lr, #0
   2aebc:	b	3f468 <GetDataSlab+0x1de84>
   2aec0:	mov	lr, #0
   2aec4:	b	3f500 <GetDataSlab+0x1df1c>
   2aec8:	ldr	r3, [sp, #16]
   2aecc:	cmp	r3, #0
   2aed0:	ble	3f52c <GetDataSlab+0x1df48>
   2aed4:	mov	r3, #0
   2aed8:	str	r3, [sp, #12]
   2aedc:	mov	r8, r3
   2aee0:	b	2afa4 <GetDataSlab+0x99c0>
   2aee4:	ldr	r3, [sp, #196]	; 0xc4
   2aee8:	ldr	r2, [r3, r0, lsl #2]
   2aeec:	cmp	r2, #0
   2aef0:	beq	2af04 <GetDataSlab+0x9920>
   2aef4:	ldr	r3, [r5, #-4]
   2aef8:	mul	r3, r3, r2
   2aefc:	add	r4, r4, r3, lsl #3
   2af00:	add	lr, lr, r3
   2af04:	add	r0, r0, #1
   2af08:	cmp	r9, r0
   2af0c:	beq	2af88 <GetDataSlab+0x99a4>
   2af10:	ldr	r3, [ip]
   2af14:	add	r1, r3, #1
   2af18:	str	r1, [ip]
   2af1c:	ldr	r2, [r7, #4]!
   2af20:	sdiv	r3, r1, r2
   2af24:	mls	r3, r2, r3, r1
   2af28:	cmp	r3, #0
   2af2c:	bne	2af74 <GetDataSlab+0x9990>
   2af30:	str	r8, [ip], #4
   2af34:	add	r5, r5, #4
   2af38:	ldr	r2, [r5]
   2af3c:	sdiv	r3, lr, r2
   2af40:	mls	r3, r2, r3, lr
   2af44:	cmp	r3, #0
   2af48:	beq	2aee4 <GetDataSlab+0x9900>
   2af4c:	ldr	r1, [r5, #-4]
   2af50:	ldr	sl, [sp, #196]	; 0xc4
   2af54:	ldr	sl, [sl, r0, lsl #2]
   2af58:	str	sl, [sp, #8]
   2af5c:	sub	r3, r2, r3
   2af60:	mla	r3, sl, r1, r3
   2af64:	add	r4, r4, r3, lsl #3
   2af68:	add	lr, lr, r3
   2af6c:	b	2af04 <GetDataSlab+0x9920>
   2af70:	ldr	r0, [sp, #28]
   2af74:	add	r3, sp, #152	; 0x98
   2af78:	add	r3, r3, r0, lsl #2
   2af7c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2af80:	add	lr, lr, r3
   2af84:	add	r4, r4, r3, lsl #3
   2af88:	ldr	r3, [sp, #12]
   2af8c:	add	r3, r3, r6
   2af90:	str	r3, [sp, #12]
   2af94:	ldr	r3, [sp, #16]
   2af98:	ldr	r2, [sp, #12]
   2af9c:	cmp	r2, r3
   2afa0:	bge	3f52c <GetDataSlab+0x1df48>
   2afa4:	ldr	r3, [sp, #196]	; 0xc4
   2afa8:	ldr	r3, [r3]
   2afac:	cmp	r3, #0
   2afb0:	addne	r4, r4, r3, lsl #3
   2afb4:	addne	lr, lr, r3
   2afb8:	ldr	r6, [fp]
   2afbc:	cmp	r6, #0
   2afc0:	ble	2aff0 <GetDataSlab+0x9a0c>
   2afc4:	sub	ip, r4, #8
   2afc8:	ldr	r3, [sp, #4]
   2afcc:	ldr	r2, [sp, #12]
   2afd0:	add	r0, r3, r2, lsl #3
   2afd4:	mov	r1, #0
   2afd8:	ldrd	r2, [ip, #8]!
   2afdc:	strd	r2, [r0], #8
   2afe0:	add	r1, r1, #1
   2afe4:	ldr	r6, [fp]
   2afe8:	cmp	r6, r1
   2afec:	bgt	2afd8 <GetDataSlab+0x99f4>
   2aff0:	ldr	r3, [sp, #192]	; 0xc0
   2aff4:	ldr	r2, [r3]
   2aff8:	ldr	r3, [sp, #196]	; 0xc4
   2affc:	ldr	r3, [r3]
   2b000:	sub	r3, r2, r3
   2b004:	add	lr, lr, r3
   2b008:	add	r4, r4, r3, lsl #3
   2b00c:	cmp	r9, #1
   2b010:	ble	2af88 <GetDataSlab+0x99a4>
   2b014:	ldr	r3, [sp, #76]	; 0x4c
   2b018:	add	r3, r3, #1
   2b01c:	str	r3, [sp, #76]	; 0x4c
   2b020:	ldr	r1, [fp, #4]
   2b024:	sdiv	r2, r3, r1
   2b028:	mls	r3, r1, r2, r3
   2b02c:	cmp	r3, #0
   2b030:	bne	2af70 <GetDataSlab+0x998c>
   2b034:	add	ip, sp, #76	; 0x4c
   2b038:	add	r7, fp, #4
   2b03c:	add	r5, sp, #112	; 0x70
   2b040:	ldr	r0, [sp, #28]
   2b044:	b	2af30 <GetDataSlab+0x994c>
   2b048:	ldr	r3, [sp, #196]	; 0xc4
   2b04c:	ldr	r2, [r3, r0, lsl #2]
   2b050:	cmp	r2, #0
   2b054:	beq	2b068 <GetDataSlab+0x9a84>
   2b058:	ldr	r3, [r5, #-4]
   2b05c:	mul	r3, r3, r2
   2b060:	add	r4, r4, r3, lsl #3
   2b064:	add	lr, lr, r3
   2b068:	add	r0, r0, #1
   2b06c:	cmp	r9, r0
   2b070:	beq	2b0f8 <GetDataSlab+0x9b14>
   2b074:	ldr	r3, [ip]
   2b078:	add	r1, r3, #1
   2b07c:	str	r1, [ip]
   2b080:	ldr	r2, [r7, #4]!
   2b084:	sdiv	r3, r1, r2
   2b088:	mls	r3, r2, r3, r1
   2b08c:	cmp	r3, #0
   2b090:	bne	2b0e4 <GetDataSlab+0x9b00>
   2b094:	str	r8, [ip], #4
   2b098:	add	r5, r5, #4
   2b09c:	ldr	r2, [r5]
   2b0a0:	sdiv	r3, lr, r2
   2b0a4:	mls	r3, r2, r3, lr
   2b0a8:	cmp	r3, #0
   2b0ac:	beq	2b048 <GetDataSlab+0x9a64>
   2b0b0:	ldr	r1, [r5, #-4]
   2b0b4:	str	r1, [sp, #8]
   2b0b8:	ldr	r1, [sp, #196]	; 0xc4
   2b0bc:	ldr	r1, [r1, r0, lsl #2]
   2b0c0:	str	r1, [sp, #12]
   2b0c4:	sub	r3, r2, r3
   2b0c8:	mov	r2, r1
   2b0cc:	ldr	r1, [sp, #8]
   2b0d0:	mla	r3, r2, r1, r3
   2b0d4:	add	r4, r4, r3, lsl #3
   2b0d8:	add	lr, lr, r3
   2b0dc:	b	2b068 <GetDataSlab+0x9a84>
   2b0e0:	mov	r0, #1
   2b0e4:	add	r3, sp, #152	; 0x98
   2b0e8:	add	r3, r3, r0, lsl #2
   2b0ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b0f0:	add	lr, lr, r3
   2b0f4:	add	r4, r4, r3, lsl #3
   2b0f8:	ldr	r3, [sp, #20]
   2b0fc:	add	r3, r3, r6
   2b100:	str	r3, [sp, #20]
   2b104:	ldr	r2, [sp, #16]
   2b108:	cmp	r3, r2
   2b10c:	bge	3f52c <GetDataSlab+0x1df48>
   2b110:	ldr	r3, [sp, #196]	; 0xc4
   2b114:	ldr	r3, [r3]
   2b118:	cmp	r3, #0
   2b11c:	addne	r4, r4, r3, lsl #3
   2b120:	addne	lr, lr, r3
   2b124:	ldr	r6, [fp]
   2b128:	cmp	r6, #0
   2b12c:	ble	2b164 <GetDataSlab+0x9b80>
   2b130:	ldr	r3, [sp, #4]
   2b134:	ldr	r2, [sp, #20]
   2b138:	add	r2, r3, r2, lsl #3
   2b13c:	mov	r3, #0
   2b140:	ldrd	r0, [r4]
   2b144:	strd	r0, [r2], #8
   2b148:	ldr	r1, [sl]
   2b14c:	add	r4, r4, r1, lsl #3
   2b150:	add	lr, lr, r1
   2b154:	add	r3, r3, #1
   2b158:	ldr	r6, [fp]
   2b15c:	cmp	r6, r3
   2b160:	bgt	2b140 <GetDataSlab+0x9b5c>
   2b164:	ldr	r3, [sp, #192]	; 0xc0
   2b168:	ldr	r2, [r3]
   2b16c:	ldr	r3, [sp, #196]	; 0xc4
   2b170:	ldr	r3, [r3]
   2b174:	sub	r3, r2, r3
   2b178:	ldr	r2, [sl]
   2b17c:	mls	r3, r2, r6, r3
   2b180:	add	lr, lr, r3
   2b184:	add	r4, r4, r3, lsl #3
   2b188:	cmp	r9, #1
   2b18c:	ble	2b0f8 <GetDataSlab+0x9b14>
   2b190:	ldr	r3, [sp, #76]	; 0x4c
   2b194:	add	r3, r3, #1
   2b198:	str	r3, [sp, #76]	; 0x4c
   2b19c:	ldr	r1, [fp, #4]
   2b1a0:	sdiv	r2, r3, r1
   2b1a4:	mls	r3, r1, r2, r3
   2b1a8:	cmp	r3, #0
   2b1ac:	bne	2b0e0 <GetDataSlab+0x9afc>
   2b1b0:	add	ip, sp, #76	; 0x4c
   2b1b4:	add	r7, fp, #4
   2b1b8:	add	r5, sp, #112	; 0x70
   2b1bc:	mov	r0, #1
   2b1c0:	b	2b094 <GetDataSlab+0x9ab0>
   2b1c4:	mov	lr, #0
   2b1c8:	b	3f410 <GetDataSlab+0x1de2c>
   2b1cc:	ldr	r3, [sp, #16]
   2b1d0:	cmp	r3, #0
   2b1d4:	ble	3a38c <GetDataSlab+0x18da8>
   2b1d8:	mov	r3, #0
   2b1dc:	str	r3, [sp, #12]
   2b1e0:	mov	r8, r3
   2b1e4:	b	2b2a8 <GetDataSlab+0x9cc4>
   2b1e8:	ldr	r3, [sp, #196]	; 0xc4
   2b1ec:	ldr	r2, [r3, r0, lsl #2]
   2b1f0:	cmp	r2, #0
   2b1f4:	beq	2b208 <GetDataSlab+0x9c24>
   2b1f8:	ldr	r3, [r5, #-4]
   2b1fc:	mul	r3, r3, r2
   2b200:	add	r4, r4, r3, lsl #3
   2b204:	add	lr, lr, r3
   2b208:	add	r0, r0, #1
   2b20c:	cmp	r9, r0
   2b210:	beq	2b28c <GetDataSlab+0x9ca8>
   2b214:	ldr	r3, [ip]
   2b218:	add	r1, r3, #1
   2b21c:	str	r1, [ip]
   2b220:	ldr	r2, [r7, #4]!
   2b224:	sdiv	r3, r1, r2
   2b228:	mls	r3, r2, r3, r1
   2b22c:	cmp	r3, #0
   2b230:	bne	2b278 <GetDataSlab+0x9c94>
   2b234:	str	r8, [ip], #4
   2b238:	add	r5, r5, #4
   2b23c:	ldr	r2, [r5]
   2b240:	sdiv	r3, lr, r2
   2b244:	mls	r3, r2, r3, lr
   2b248:	cmp	r3, #0
   2b24c:	beq	2b1e8 <GetDataSlab+0x9c04>
   2b250:	ldr	r1, [r5, #-4]
   2b254:	ldr	sl, [sp, #196]	; 0xc4
   2b258:	ldr	sl, [sl, r0, lsl #2]
   2b25c:	str	sl, [sp, #8]
   2b260:	sub	r3, r2, r3
   2b264:	mla	r3, sl, r1, r3
   2b268:	add	r4, r4, r3, lsl #3
   2b26c:	add	lr, lr, r3
   2b270:	b	2b208 <GetDataSlab+0x9c24>
   2b274:	ldr	r0, [sp, #28]
   2b278:	add	r3, sp, #152	; 0x98
   2b27c:	add	r3, r3, r0, lsl #2
   2b280:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b284:	add	lr, lr, r3
   2b288:	add	r4, r4, r3, lsl #3
   2b28c:	ldr	r3, [sp, #12]
   2b290:	add	r3, r3, r6
   2b294:	str	r3, [sp, #12]
   2b298:	ldr	r3, [sp, #16]
   2b29c:	ldr	r2, [sp, #12]
   2b2a0:	cmp	r2, r3
   2b2a4:	bge	2b34c <GetDataSlab+0x9d68>
   2b2a8:	ldr	r3, [sp, #196]	; 0xc4
   2b2ac:	ldr	r3, [r3]
   2b2b0:	cmp	r3, #0
   2b2b4:	addne	r4, r4, r3, lsl #3
   2b2b8:	addne	lr, lr, r3
   2b2bc:	ldr	r6, [fp]
   2b2c0:	cmp	r6, #0
   2b2c4:	ble	2b2f4 <GetDataSlab+0x9d10>
   2b2c8:	sub	ip, r4, #8
   2b2cc:	ldr	r3, [sp, #4]
   2b2d0:	ldr	r2, [sp, #12]
   2b2d4:	add	r0, r3, r2, lsl #3
   2b2d8:	mov	r1, #0
   2b2dc:	ldrd	r2, [ip, #8]!
   2b2e0:	strd	r2, [r0], #8
   2b2e4:	add	r1, r1, #1
   2b2e8:	ldr	r6, [fp]
   2b2ec:	cmp	r6, r1
   2b2f0:	bgt	2b2dc <GetDataSlab+0x9cf8>
   2b2f4:	ldr	r3, [sp, #192]	; 0xc0
   2b2f8:	ldr	r2, [r3]
   2b2fc:	ldr	r3, [sp, #196]	; 0xc4
   2b300:	ldr	r3, [r3]
   2b304:	sub	r3, r2, r3
   2b308:	add	lr, lr, r3
   2b30c:	add	r4, r4, r3, lsl #3
   2b310:	cmp	r9, #1
   2b314:	ble	2b28c <GetDataSlab+0x9ca8>
   2b318:	ldr	r3, [sp, #76]	; 0x4c
   2b31c:	add	r3, r3, #1
   2b320:	str	r3, [sp, #76]	; 0x4c
   2b324:	ldr	r1, [fp, #4]
   2b328:	sdiv	r2, r3, r1
   2b32c:	mls	r3, r1, r2, r3
   2b330:	cmp	r3, #0
   2b334:	bne	2b274 <GetDataSlab+0x9c90>
   2b338:	add	ip, sp, #76	; 0x4c
   2b33c:	add	r7, fp, #4
   2b340:	add	r5, sp, #112	; 0x70
   2b344:	ldr	r0, [sp, #28]
   2b348:	b	2b234 <GetDataSlab+0x9c50>
   2b34c:	mov	r3, #0
   2b350:	b	251fc <GetDataSlab+0x3c18>
   2b354:	ldr	r3, [sp, #196]	; 0xc4
   2b358:	ldr	r2, [r3, r0, lsl #2]
   2b35c:	cmp	r2, #0
   2b360:	beq	2b374 <GetDataSlab+0x9d90>
   2b364:	ldr	r3, [r5, #-4]
   2b368:	mul	r3, r3, r2
   2b36c:	add	r4, r4, r3, lsl #3
   2b370:	add	lr, lr, r3
   2b374:	add	r0, r0, #1
   2b378:	cmp	r9, r0
   2b37c:	beq	2b404 <GetDataSlab+0x9e20>
   2b380:	ldr	r3, [ip]
   2b384:	add	r1, r3, #1
   2b388:	str	r1, [ip]
   2b38c:	ldr	r2, [r7, #4]!
   2b390:	sdiv	r3, r1, r2
   2b394:	mls	r3, r2, r3, r1
   2b398:	cmp	r3, #0
   2b39c:	bne	2b3f0 <GetDataSlab+0x9e0c>
   2b3a0:	str	r8, [ip], #4
   2b3a4:	add	r5, r5, #4
   2b3a8:	ldr	r2, [r5]
   2b3ac:	sdiv	r3, lr, r2
   2b3b0:	mls	r3, r2, r3, lr
   2b3b4:	cmp	r3, #0
   2b3b8:	beq	2b354 <GetDataSlab+0x9d70>
   2b3bc:	ldr	r1, [r5, #-4]
   2b3c0:	str	r1, [sp, #8]
   2b3c4:	ldr	r1, [sp, #196]	; 0xc4
   2b3c8:	ldr	r1, [r1, r0, lsl #2]
   2b3cc:	str	r1, [sp, #12]
   2b3d0:	sub	r3, r2, r3
   2b3d4:	mov	r2, r1
   2b3d8:	ldr	r1, [sp, #8]
   2b3dc:	mla	r3, r2, r1, r3
   2b3e0:	add	r4, r4, r3, lsl #3
   2b3e4:	add	lr, lr, r3
   2b3e8:	b	2b374 <GetDataSlab+0x9d90>
   2b3ec:	mov	r0, #1
   2b3f0:	add	r3, sp, #152	; 0x98
   2b3f4:	add	r3, r3, r0, lsl #2
   2b3f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b3fc:	add	lr, lr, r3
   2b400:	add	r4, r4, r3, lsl #3
   2b404:	ldr	r3, [sp, #20]
   2b408:	add	r3, r3, r6
   2b40c:	str	r3, [sp, #20]
   2b410:	ldr	r2, [sp, #16]
   2b414:	cmp	r3, r2
   2b418:	bge	2b4d0 <GetDataSlab+0x9eec>
   2b41c:	ldr	r3, [sp, #196]	; 0xc4
   2b420:	ldr	r3, [r3]
   2b424:	cmp	r3, #0
   2b428:	addne	r4, r4, r3, lsl #3
   2b42c:	addne	lr, lr, r3
   2b430:	ldr	r6, [fp]
   2b434:	cmp	r6, #0
   2b438:	ble	2b470 <GetDataSlab+0x9e8c>
   2b43c:	ldr	r3, [sp, #4]
   2b440:	ldr	r2, [sp, #20]
   2b444:	add	r2, r3, r2, lsl #3
   2b448:	mov	r3, #0
   2b44c:	ldrd	r0, [r4]
   2b450:	strd	r0, [r2], #8
   2b454:	ldr	r1, [sl]
   2b458:	add	r4, r4, r1, lsl #3
   2b45c:	add	lr, lr, r1
   2b460:	add	r3, r3, #1
   2b464:	ldr	r6, [fp]
   2b468:	cmp	r6, r3
   2b46c:	bgt	2b44c <GetDataSlab+0x9e68>
   2b470:	ldr	r3, [sp, #192]	; 0xc0
   2b474:	ldr	r2, [r3]
   2b478:	ldr	r3, [sp, #196]	; 0xc4
   2b47c:	ldr	r3, [r3]
   2b480:	sub	r3, r2, r3
   2b484:	ldr	r2, [sl]
   2b488:	mls	r3, r2, r6, r3
   2b48c:	add	lr, lr, r3
   2b490:	add	r4, r4, r3, lsl #3
   2b494:	cmp	r9, #1
   2b498:	ble	2b404 <GetDataSlab+0x9e20>
   2b49c:	ldr	r3, [sp, #76]	; 0x4c
   2b4a0:	add	r3, r3, #1
   2b4a4:	str	r3, [sp, #76]	; 0x4c
   2b4a8:	ldr	r1, [fp, #4]
   2b4ac:	sdiv	r2, r3, r1
   2b4b0:	mls	r3, r1, r2, r3
   2b4b4:	cmp	r3, #0
   2b4b8:	bne	2b3ec <GetDataSlab+0x9e08>
   2b4bc:	add	ip, sp, #76	; 0x4c
   2b4c0:	add	r7, fp, #4
   2b4c4:	add	r5, sp, #112	; 0x70
   2b4c8:	mov	r0, #1
   2b4cc:	b	2b3a0 <GetDataSlab+0x9dbc>
   2b4d0:	mov	r3, #0
   2b4d4:	b	251fc <GetDataSlab+0x3c18>
   2b4d8:	sub	r3, r8, #1
   2b4dc:	cmp	r3, #8
   2b4e0:	addls	pc, pc, r3, lsl #2
   2b4e4:	b	2d018 <GetDataSlab+0xba34>
   2b4e8:	b	2c94c <GetDataSlab+0xb368>
   2b4ec:	b	2ccb0 <GetDataSlab+0xb6cc>
   2b4f0:	b	2c284 <GetDataSlab+0xaca0>
   2b4f4:	b	2c5e8 <GetDataSlab+0xb004>
   2b4f8:	b	2bbac <GetDataSlab+0xa5c8>
   2b4fc:	b	2bf18 <GetDataSlab+0xa934>
   2b500:	b	2b85c <GetDataSlab+0xa278>
   2b504:	b	2d018 <GetDataSlab+0xba34>
   2b508:	b	2b50c <GetDataSlab+0x9f28>
   2b50c:	ldr	r3, [sl]
   2b510:	str	r3, [sp, #28]
   2b514:	sub	r3, r3, #1
   2b518:	str	r3, [sp, #32]
   2b51c:	ldr	r3, [sp, #192]	; 0xc0
   2b520:	ldr	r3, [r3]
   2b524:	str	r3, [sp, #112]	; 0x70
   2b528:	ldr	r3, [fp]
   2b52c:	str	r3, [sp, #12]
   2b530:	cmp	r9, #1
   2b534:	ble	2b558 <GetDataSlab+0x9f74>
   2b538:	str	sl, [sp, #20]
   2b53c:	add	r8, sp, #36	; 0x24
   2b540:	ldr	r4, [sp, #192]	; 0xc0
   2b544:	add	r5, sp, #112	; 0x70
   2b548:	str	r4, [sp, #16]
   2b54c:	mov	lr, #1
   2b550:	mov	r7, #0
   2b554:	b	4053c <GetDataSlab+0x1ef58>
   2b558:	mov	r7, #0
   2b55c:	b	405d4 <GetDataSlab+0x1eff0>
   2b560:	ldr	r3, [sp, #12]
   2b564:	cmp	r3, #0
   2b568:	ble	3a394 <GetDataSlab+0x18db0>
   2b56c:	mov	r3, #0
   2b570:	str	r3, [sp, #8]
   2b574:	b	2b630 <GetDataSlab+0xa04c>
   2b578:	ldr	r3, [sp, #196]	; 0xc4
   2b57c:	ldr	r3, [r3, r0, lsl #2]
   2b580:	cmp	r3, #0
   2b584:	beq	2b598 <GetDataSlab+0x9fb4>
   2b588:	ldr	r2, [lr, #-8]
   2b58c:	mul	r3, r2, r3
   2b590:	add	r8, r8, r3, lsl #3
   2b594:	add	r7, r7, r3
   2b598:	add	r0, r0, #1
   2b59c:	cmp	r9, r0
   2b5a0:	beq	2b618 <GetDataSlab+0xa034>
   2b5a4:	ldr	r3, [ip]
   2b5a8:	add	r1, r3, #1
   2b5ac:	str	r1, [ip]
   2b5b0:	ldr	r2, [r4, #4]!
   2b5b4:	sdiv	r3, r1, r2
   2b5b8:	mls	r3, r2, r3, r1
   2b5bc:	cmp	r3, #0
   2b5c0:	bne	2b604 <GetDataSlab+0xa020>
   2b5c4:	mov	r3, #0
   2b5c8:	str	r3, [ip], #4
   2b5cc:	ldr	r2, [lr], #4
   2b5d0:	sdiv	r3, r7, r2
   2b5d4:	mls	r3, r2, r3, r7
   2b5d8:	cmp	r3, #0
   2b5dc:	beq	2b578 <GetDataSlab+0x9f94>
   2b5e0:	ldr	r1, [lr, #-8]
   2b5e4:	ldr	r5, [sp, #196]	; 0xc4
   2b5e8:	ldr	r5, [r5, r0, lsl #2]
   2b5ec:	sub	r3, r2, r3
   2b5f0:	mla	r3, r5, r1, r3
   2b5f4:	add	r8, r8, r3, lsl #3
   2b5f8:	add	r7, r7, r3
   2b5fc:	b	2b598 <GetDataSlab+0x9fb4>
   2b600:	ldr	r0, [sp, #28]
   2b604:	add	r3, sp, #152	; 0x98
   2b608:	add	r3, r3, r0, lsl #2
   2b60c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b610:	add	r7, r7, r3
   2b614:	add	r8, r8, r3, lsl #3
   2b618:	ldr	r3, [sp, #8]
   2b61c:	add	r3, r3, sl
   2b620:	str	r3, [sp, #8]
   2b624:	ldr	r2, [sp, #12]
   2b628:	cmp	r3, r2
   2b62c:	bge	2b6d8 <GetDataSlab+0xa0f4>
   2b630:	ldr	r3, [sp, #196]	; 0xc4
   2b634:	ldr	r3, [r3]
   2b638:	cmp	r3, #0
   2b63c:	addne	r8, r8, r3, lsl #3
   2b640:	addne	r7, r7, r3
   2b644:	ldr	sl, [fp]
   2b648:	cmp	sl, #0
   2b64c:	ble	2b680 <GetDataSlab+0xa09c>
   2b650:	mov	r6, r8
   2b654:	ldr	r3, [sp, #4]
   2b658:	ldr	r2, [sp, #8]
   2b65c:	add	r5, r3, r2, lsl #3
   2b660:	mov	r4, #0
   2b664:	ldrd	r0, [r6], #8
   2b668:	bl	4f0a8 <__aeabi_d2ulz>
   2b66c:	strd	r0, [r5], #8
   2b670:	add	r4, r4, #1
   2b674:	ldr	sl, [fp]
   2b678:	cmp	sl, r4
   2b67c:	bgt	2b664 <GetDataSlab+0xa080>
   2b680:	ldr	r3, [sp, #192]	; 0xc0
   2b684:	ldr	r2, [r3]
   2b688:	ldr	r3, [sp, #196]	; 0xc4
   2b68c:	ldr	r3, [r3]
   2b690:	sub	r3, r2, r3
   2b694:	add	r7, r7, r3
   2b698:	add	r8, r8, r3, lsl #3
   2b69c:	cmp	r9, #1
   2b6a0:	ble	2b618 <GetDataSlab+0xa034>
   2b6a4:	ldr	r3, [sp, #76]	; 0x4c
   2b6a8:	add	r3, r3, #1
   2b6ac:	str	r3, [sp, #76]	; 0x4c
   2b6b0:	ldr	r1, [fp, #4]
   2b6b4:	sdiv	r2, r3, r1
   2b6b8:	mls	r3, r1, r2, r3
   2b6bc:	cmp	r3, #0
   2b6c0:	bne	2b600 <GetDataSlab+0xa01c>
   2b6c4:	add	ip, sp, #76	; 0x4c
   2b6c8:	add	r4, fp, #4
   2b6cc:	add	lr, sp, #116	; 0x74
   2b6d0:	ldr	r0, [sp, #28]
   2b6d4:	b	2b5c4 <GetDataSlab+0x9fe0>
   2b6d8:	mov	r3, #0
   2b6dc:	b	251fc <GetDataSlab+0x3c18>
   2b6e0:	ldr	r3, [sp, #196]	; 0xc4
   2b6e4:	ldr	r2, [r3, r0, lsl #2]
   2b6e8:	cmp	r2, #0
   2b6ec:	beq	2b700 <GetDataSlab+0xa11c>
   2b6f0:	ldr	r3, [lr, #-4]
   2b6f4:	mul	r3, r3, r2
   2b6f8:	add	r8, r8, r3, lsl #3
   2b6fc:	add	r7, r7, r3
   2b700:	add	r0, r0, #1
   2b704:	cmp	r9, r0
   2b708:	beq	2b784 <GetDataSlab+0xa1a0>
   2b70c:	ldr	r3, [ip]
   2b710:	add	r1, r3, #1
   2b714:	str	r1, [ip]
   2b718:	ldr	r2, [r4, #4]!
   2b71c:	sdiv	r3, r1, r2
   2b720:	mls	r3, r2, r3, r1
   2b724:	cmp	r3, #0
   2b728:	bne	2b770 <GetDataSlab+0xa18c>
   2b72c:	mov	r3, #0
   2b730:	str	r3, [ip], #4
   2b734:	add	lr, lr, #4
   2b738:	ldr	r2, [lr]
   2b73c:	sdiv	r3, r7, r2
   2b740:	mls	r3, r2, r3, r7
   2b744:	cmp	r3, #0
   2b748:	beq	2b6e0 <GetDataSlab+0xa0fc>
   2b74c:	ldr	r1, [lr, #-4]
   2b750:	ldr	r5, [sp, #196]	; 0xc4
   2b754:	ldr	r5, [r5, r0, lsl #2]
   2b758:	sub	r3, r2, r3
   2b75c:	mla	r3, r5, r1, r3
   2b760:	add	r8, r8, r3, lsl #3
   2b764:	add	r7, r7, r3
   2b768:	b	2b700 <GetDataSlab+0xa11c>
   2b76c:	mov	r0, #1
   2b770:	add	r3, sp, #152	; 0x98
   2b774:	add	r3, r3, r0, lsl #2
   2b778:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b77c:	add	r7, r7, r3
   2b780:	add	r8, r8, r3, lsl #3
   2b784:	ldr	r3, [sp, #8]
   2b788:	add	r3, r3, r6
   2b78c:	str	r3, [sp, #8]
   2b790:	ldr	r2, [sp, #12]
   2b794:	cmp	r3, r2
   2b798:	bge	2b854 <GetDataSlab+0xa270>
   2b79c:	ldr	r3, [sp, #196]	; 0xc4
   2b7a0:	ldr	r3, [r3]
   2b7a4:	cmp	r3, #0
   2b7a8:	addne	r8, r8, r3, lsl #3
   2b7ac:	addne	r7, r7, r3
   2b7b0:	ldr	r6, [fp]
   2b7b4:	cmp	r6, #0
   2b7b8:	ble	2b7f4 <GetDataSlab+0xa210>
   2b7bc:	ldr	r3, [sp, #4]
   2b7c0:	ldr	r2, [sp, #8]
   2b7c4:	add	r5, r3, r2, lsl #3
   2b7c8:	mov	r4, #0
   2b7cc:	ldrd	r0, [r8]
   2b7d0:	bl	4f0a8 <__aeabi_d2ulz>
   2b7d4:	strd	r0, [r5], #8
   2b7d8:	ldr	r3, [sl]
   2b7dc:	add	r8, r8, r3, lsl #3
   2b7e0:	add	r7, r7, r3
   2b7e4:	add	r4, r4, #1
   2b7e8:	ldr	r6, [fp]
   2b7ec:	cmp	r6, r4
   2b7f0:	bgt	2b7cc <GetDataSlab+0xa1e8>
   2b7f4:	ldr	r3, [sp, #192]	; 0xc0
   2b7f8:	ldr	r2, [r3]
   2b7fc:	ldr	r3, [sp, #196]	; 0xc4
   2b800:	ldr	r3, [r3]
   2b804:	sub	r3, r2, r3
   2b808:	ldr	r2, [sl]
   2b80c:	mls	r3, r2, r6, r3
   2b810:	add	r7, r7, r3
   2b814:	add	r8, r8, r3, lsl #3
   2b818:	cmp	r9, #1
   2b81c:	ble	2b784 <GetDataSlab+0xa1a0>
   2b820:	ldr	r3, [sp, #76]	; 0x4c
   2b824:	add	r3, r3, #1
   2b828:	str	r3, [sp, #76]	; 0x4c
   2b82c:	ldr	r1, [fp, #4]
   2b830:	sdiv	r2, r3, r1
   2b834:	mls	r3, r1, r2, r3
   2b838:	cmp	r3, #0
   2b83c:	bne	2b76c <GetDataSlab+0xa188>
   2b840:	add	ip, sp, #76	; 0x4c
   2b844:	add	r4, fp, #4
   2b848:	add	lr, sp, #112	; 0x70
   2b84c:	mov	r0, #1
   2b850:	b	2b72c <GetDataSlab+0xa148>
   2b854:	mov	r3, #0
   2b858:	b	251fc <GetDataSlab+0x3c18>
   2b85c:	ldr	r3, [sl]
   2b860:	str	r3, [sp, #28]
   2b864:	sub	r3, r3, #1
   2b868:	str	r3, [sp, #32]
   2b86c:	ldr	r3, [sp, #192]	; 0xc0
   2b870:	ldr	r3, [r3]
   2b874:	str	r3, [sp, #112]	; 0x70
   2b878:	ldr	r3, [fp]
   2b87c:	str	r3, [sp, #12]
   2b880:	cmp	r9, #1
   2b884:	ble	2b8a8 <GetDataSlab+0xa2c4>
   2b888:	str	sl, [sp, #20]
   2b88c:	add	r8, sp, #36	; 0x24
   2b890:	ldr	r4, [sp, #192]	; 0xc0
   2b894:	add	r5, sp, #112	; 0x70
   2b898:	str	r4, [sp, #16]
   2b89c:	mov	lr, #1
   2b8a0:	mov	r7, #0
   2b8a4:	b	40450 <GetDataSlab+0x1ee6c>
   2b8a8:	mov	r7, #0
   2b8ac:	b	404e8 <GetDataSlab+0x1ef04>
   2b8b0:	ldr	r3, [sp, #12]
   2b8b4:	cmp	r3, #0
   2b8b8:	ble	3a39c <GetDataSlab+0x18db8>
   2b8bc:	mov	r3, #0
   2b8c0:	str	r3, [sp, #8]
   2b8c4:	b	2b980 <GetDataSlab+0xa39c>
   2b8c8:	ldr	r3, [sp, #196]	; 0xc4
   2b8cc:	ldr	r3, [r3, r0, lsl #2]
   2b8d0:	cmp	r3, #0
   2b8d4:	beq	2b8e8 <GetDataSlab+0xa304>
   2b8d8:	ldr	r2, [lr, #-8]
   2b8dc:	mul	r3, r2, r3
   2b8e0:	add	r8, r8, r3, lsl #2
   2b8e4:	add	r7, r7, r3
   2b8e8:	add	r0, r0, #1
   2b8ec:	cmp	r9, r0
   2b8f0:	beq	2b968 <GetDataSlab+0xa384>
   2b8f4:	ldr	r3, [ip]
   2b8f8:	add	r1, r3, #1
   2b8fc:	str	r1, [ip]
   2b900:	ldr	r2, [r4, #4]!
   2b904:	sdiv	r3, r1, r2
   2b908:	mls	r3, r2, r3, r1
   2b90c:	cmp	r3, #0
   2b910:	bne	2b954 <GetDataSlab+0xa370>
   2b914:	mov	r3, #0
   2b918:	str	r3, [ip], #4
   2b91c:	ldr	r2, [lr], #4
   2b920:	sdiv	r3, r7, r2
   2b924:	mls	r3, r2, r3, r7
   2b928:	cmp	r3, #0
   2b92c:	beq	2b8c8 <GetDataSlab+0xa2e4>
   2b930:	ldr	r1, [lr, #-8]
   2b934:	ldr	r5, [sp, #196]	; 0xc4
   2b938:	ldr	r5, [r5, r0, lsl #2]
   2b93c:	sub	r3, r2, r3
   2b940:	mla	r3, r5, r1, r3
   2b944:	add	r8, r8, r3, lsl #2
   2b948:	add	r7, r7, r3
   2b94c:	b	2b8e8 <GetDataSlab+0xa304>
   2b950:	ldr	r0, [sp, #28]
   2b954:	add	r3, sp, #152	; 0x98
   2b958:	add	r3, r3, r0, lsl #2
   2b95c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2b960:	add	r7, r7, r3
   2b964:	add	r8, r8, r3, lsl #2
   2b968:	ldr	r3, [sp, #8]
   2b96c:	add	r3, r3, sl
   2b970:	str	r3, [sp, #8]
   2b974:	ldr	r2, [sp, #12]
   2b978:	cmp	r3, r2
   2b97c:	bge	2ba28 <GetDataSlab+0xa444>
   2b980:	ldr	r3, [sp, #196]	; 0xc4
   2b984:	ldr	r3, [r3]
   2b988:	cmp	r3, #0
   2b98c:	addne	r8, r8, r3, lsl #2
   2b990:	addne	r7, r7, r3
   2b994:	ldr	sl, [fp]
   2b998:	cmp	sl, #0
   2b99c:	ble	2b9d0 <GetDataSlab+0xa3ec>
   2b9a0:	mov	r6, r8
   2b9a4:	ldr	r3, [sp, #4]
   2b9a8:	ldr	r2, [sp, #8]
   2b9ac:	add	r5, r3, r2, lsl #3
   2b9b0:	mov	r4, #0
   2b9b4:	ldr	r0, [r6], #4
   2b9b8:	bl	4f068 <__aeabi_f2ulz>
   2b9bc:	strd	r0, [r5], #8
   2b9c0:	add	r4, r4, #1
   2b9c4:	ldr	sl, [fp]
   2b9c8:	cmp	sl, r4
   2b9cc:	bgt	2b9b4 <GetDataSlab+0xa3d0>
   2b9d0:	ldr	r3, [sp, #192]	; 0xc0
   2b9d4:	ldr	r2, [r3]
   2b9d8:	ldr	r3, [sp, #196]	; 0xc4
   2b9dc:	ldr	r3, [r3]
   2b9e0:	sub	r3, r2, r3
   2b9e4:	add	r7, r7, r3
   2b9e8:	add	r8, r8, r3, lsl #2
   2b9ec:	cmp	r9, #1
   2b9f0:	ble	2b968 <GetDataSlab+0xa384>
   2b9f4:	ldr	r3, [sp, #76]	; 0x4c
   2b9f8:	add	r3, r3, #1
   2b9fc:	str	r3, [sp, #76]	; 0x4c
   2ba00:	ldr	r1, [fp, #4]
   2ba04:	sdiv	r2, r3, r1
   2ba08:	mls	r3, r1, r2, r3
   2ba0c:	cmp	r3, #0
   2ba10:	bne	2b950 <GetDataSlab+0xa36c>
   2ba14:	add	ip, sp, #76	; 0x4c
   2ba18:	add	r4, fp, #4
   2ba1c:	add	lr, sp, #116	; 0x74
   2ba20:	ldr	r0, [sp, #28]
   2ba24:	b	2b914 <GetDataSlab+0xa330>
   2ba28:	mov	r3, #0
   2ba2c:	b	251fc <GetDataSlab+0x3c18>
   2ba30:	ldr	r3, [sp, #196]	; 0xc4
   2ba34:	ldr	r2, [r3, r0, lsl #2]
   2ba38:	cmp	r2, #0
   2ba3c:	beq	2ba50 <GetDataSlab+0xa46c>
   2ba40:	ldr	r3, [lr, #-4]
   2ba44:	mul	r3, r3, r2
   2ba48:	add	r8, r8, r3, lsl #2
   2ba4c:	add	r7, r7, r3
   2ba50:	add	r0, r0, #1
   2ba54:	cmp	r9, r0
   2ba58:	beq	2bad4 <GetDataSlab+0xa4f0>
   2ba5c:	ldr	r3, [ip]
   2ba60:	add	r1, r3, #1
   2ba64:	str	r1, [ip]
   2ba68:	ldr	r2, [r4, #4]!
   2ba6c:	sdiv	r3, r1, r2
   2ba70:	mls	r3, r2, r3, r1
   2ba74:	cmp	r3, #0
   2ba78:	bne	2bac0 <GetDataSlab+0xa4dc>
   2ba7c:	mov	r3, #0
   2ba80:	str	r3, [ip], #4
   2ba84:	add	lr, lr, #4
   2ba88:	ldr	r2, [lr]
   2ba8c:	sdiv	r3, r7, r2
   2ba90:	mls	r3, r2, r3, r7
   2ba94:	cmp	r3, #0
   2ba98:	beq	2ba30 <GetDataSlab+0xa44c>
   2ba9c:	ldr	r1, [lr, #-4]
   2baa0:	ldr	r5, [sp, #196]	; 0xc4
   2baa4:	ldr	r5, [r5, r0, lsl #2]
   2baa8:	sub	r3, r2, r3
   2baac:	mla	r3, r5, r1, r3
   2bab0:	add	r8, r8, r3, lsl #2
   2bab4:	add	r7, r7, r3
   2bab8:	b	2ba50 <GetDataSlab+0xa46c>
   2babc:	mov	r0, #1
   2bac0:	add	r3, sp, #152	; 0x98
   2bac4:	add	r3, r3, r0, lsl #2
   2bac8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bacc:	add	r7, r7, r3
   2bad0:	add	r8, r8, r3, lsl #2
   2bad4:	ldr	r3, [sp, #8]
   2bad8:	add	r3, r3, r6
   2badc:	str	r3, [sp, #8]
   2bae0:	ldr	r2, [sp, #12]
   2bae4:	cmp	r3, r2
   2bae8:	bge	2bba4 <GetDataSlab+0xa5c0>
   2baec:	ldr	r3, [sp, #196]	; 0xc4
   2baf0:	ldr	r3, [r3]
   2baf4:	cmp	r3, #0
   2baf8:	addne	r8, r8, r3, lsl #2
   2bafc:	addne	r7, r7, r3
   2bb00:	ldr	r6, [fp]
   2bb04:	cmp	r6, #0
   2bb08:	ble	2bb44 <GetDataSlab+0xa560>
   2bb0c:	ldr	r3, [sp, #4]
   2bb10:	ldr	r2, [sp, #8]
   2bb14:	add	r5, r3, r2, lsl #3
   2bb18:	mov	r4, #0
   2bb1c:	ldr	r0, [r8]
   2bb20:	bl	4f068 <__aeabi_f2ulz>
   2bb24:	strd	r0, [r5], #8
   2bb28:	ldr	r3, [sl]
   2bb2c:	add	r8, r8, r3, lsl #2
   2bb30:	add	r7, r7, r3
   2bb34:	add	r4, r4, #1
   2bb38:	ldr	r6, [fp]
   2bb3c:	cmp	r6, r4
   2bb40:	bgt	2bb1c <GetDataSlab+0xa538>
   2bb44:	ldr	r3, [sp, #192]	; 0xc0
   2bb48:	ldr	r2, [r3]
   2bb4c:	ldr	r3, [sp, #196]	; 0xc4
   2bb50:	ldr	r3, [r3]
   2bb54:	sub	r3, r2, r3
   2bb58:	ldr	r2, [sl]
   2bb5c:	mls	r3, r2, r6, r3
   2bb60:	add	r7, r7, r3
   2bb64:	add	r8, r8, r3, lsl #2
   2bb68:	cmp	r9, #1
   2bb6c:	ble	2bad4 <GetDataSlab+0xa4f0>
   2bb70:	ldr	r3, [sp, #76]	; 0x4c
   2bb74:	add	r3, r3, #1
   2bb78:	str	r3, [sp, #76]	; 0x4c
   2bb7c:	ldr	r1, [fp, #4]
   2bb80:	sdiv	r2, r3, r1
   2bb84:	mls	r3, r1, r2, r3
   2bb88:	cmp	r3, #0
   2bb8c:	bne	2babc <GetDataSlab+0xa4d8>
   2bb90:	add	ip, sp, #76	; 0x4c
   2bb94:	add	r4, fp, #4
   2bb98:	add	lr, sp, #112	; 0x70
   2bb9c:	mov	r0, #1
   2bba0:	b	2ba7c <GetDataSlab+0xa498>
   2bba4:	mov	r3, #0
   2bba8:	b	251fc <GetDataSlab+0x3c18>
   2bbac:	ldr	r3, [sl]
   2bbb0:	str	r3, [sp, #28]
   2bbb4:	sub	r3, r3, #1
   2bbb8:	str	r3, [sp, #32]
   2bbbc:	ldr	r3, [sp, #192]	; 0xc0
   2bbc0:	ldr	r3, [r3]
   2bbc4:	str	r3, [sp, #112]	; 0x70
   2bbc8:	ldr	r3, [fp]
   2bbcc:	str	r3, [sp, #16]
   2bbd0:	cmp	r9, #1
   2bbd4:	ble	2bbf8 <GetDataSlab+0xa614>
   2bbd8:	str	sl, [sp, #20]
   2bbdc:	add	r8, sp, #36	; 0x24
   2bbe0:	ldr	r5, [sp, #192]	; 0xc0
   2bbe4:	add	r6, sp, #112	; 0x70
   2bbe8:	str	r5, [sp, #12]
   2bbec:	mov	lr, #1
   2bbf0:	mov	r4, #0
   2bbf4:	b	40270 <GetDataSlab+0x1ec8c>
   2bbf8:	mov	r4, #0
   2bbfc:	b	40308 <GetDataSlab+0x1ed24>
   2bc00:	ldr	r3, [sp, #16]
   2bc04:	cmp	r3, #0
   2bc08:	ble	3a3a4 <GetDataSlab+0x18dc0>
   2bc0c:	mov	r3, #0
   2bc10:	str	r3, [sp, #12]
   2bc14:	mov	r8, r3
   2bc18:	b	2bcd8 <GetDataSlab+0xa6f4>
   2bc1c:	ldr	r3, [sp, #196]	; 0xc4
   2bc20:	ldr	r3, [r3, r0, lsl #2]
   2bc24:	cmp	r3, #0
   2bc28:	beq	2bc3c <GetDataSlab+0xa658>
   2bc2c:	ldr	r2, [r5, #-8]
   2bc30:	mul	r3, r2, r3
   2bc34:	add	lr, lr, r3, lsl #2
   2bc38:	add	r4, r4, r3
   2bc3c:	add	r0, r0, #1
   2bc40:	cmp	r9, r0
   2bc44:	beq	2bcbc <GetDataSlab+0xa6d8>
   2bc48:	ldr	r3, [ip]
   2bc4c:	add	r1, r3, #1
   2bc50:	str	r1, [ip]
   2bc54:	ldr	r2, [r7, #4]!
   2bc58:	sdiv	r3, r1, r2
   2bc5c:	mls	r3, r2, r3, r1
   2bc60:	cmp	r3, #0
   2bc64:	bne	2bca8 <GetDataSlab+0xa6c4>
   2bc68:	str	r8, [ip], #4
   2bc6c:	ldr	r2, [r5], #4
   2bc70:	sdiv	r3, r4, r2
   2bc74:	mls	r3, r2, r3, r4
   2bc78:	cmp	r3, #0
   2bc7c:	beq	2bc1c <GetDataSlab+0xa638>
   2bc80:	ldr	r1, [r5, #-8]
   2bc84:	ldr	sl, [sp, #196]	; 0xc4
   2bc88:	ldr	sl, [sl, r0, lsl #2]
   2bc8c:	str	sl, [sp, #8]
   2bc90:	sub	r3, r2, r3
   2bc94:	mla	r3, sl, r1, r3
   2bc98:	add	lr, lr, r3, lsl #2
   2bc9c:	add	r4, r4, r3
   2bca0:	b	2bc3c <GetDataSlab+0xa658>
   2bca4:	ldr	r0, [sp, #28]
   2bca8:	add	r3, sp, #152	; 0x98
   2bcac:	add	r3, r3, r0, lsl #2
   2bcb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2bcb4:	add	r4, r4, r3
   2bcb8:	add	lr, lr, r3, lsl #2
   2bcbc:	ldr	r3, [sp, #12]
   2bcc0:	add	r3, r3, r6
   2bcc4:	str	r3, [sp, #12]
   2bcc8:	ldr	r3, [sp, #16]
   2bccc:	ldr	r2, [sp, #12]
   2bcd0:	cmp	r2, r3
   2bcd4:	bge	2bd84 <GetDataSlab+0xa7a0>
   2bcd8:	ldr	r3, [sp, #196]	; 0xc4
   2bcdc:	ldr	r3, [r3]
   2bce0:	cmp	r3, #0
   2bce4:	addne	lr, lr, r3, lsl #2
   2bce8:	addne	r4, r4, r3
   2bcec:	ldr	r6, [fp]
   2bcf0:	cmp	r6, #0
   2bcf4:	ble	2bd2c <GetDataSlab+0xa748>
   2bcf8:	sub	ip, lr, #4
   2bcfc:	ldr	r3, [sp, #4]
   2bd00:	ldr	r2, [sp, #12]
   2bd04:	add	r0, r3, r2, lsl #3
   2bd08:	mov	r1, #0
   2bd0c:	ldr	r3, [ip, #4]!
   2bd10:	mov	r2, r3
   2bd14:	asr	r3, r3, #31
   2bd18:	strd	r2, [r0], #8
   2bd1c:	add	r1, r1, #1
   2bd20:	ldr	r6, [fp]
   2bd24:	cmp	r6, r1
   2bd28:	bgt	2bd0c <GetDataSlab+0xa728>
   2bd2c:	ldr	r3, [sp, #192]	; 0xc0
   2bd30:	ldr	r2, [r3]
   2bd34:	ldr	r3, [sp, #196]	; 0xc4
   2bd38:	ldr	r3, [r3]
   2bd3c:	sub	r3, r2, r3
   2bd40:	add	r4, r4, r3
   2bd44:	add	lr, lr, r3, lsl #2
   2bd48:	cmp	r9, #1
   2bd4c:	ble	2bcbc <GetDataSlab+0xa6d8>
   2bd50:	ldr	r3, [sp, #76]	; 0x4c
   2bd54:	add	r3, r3, #1
   2bd58:	str	r3, [sp, #76]	; 0x4c
   2bd5c:	ldr	r1, [fp, #4]
   2bd60:	sdiv	r2, r3, r1
   2bd64:	mls	r3, r1, r2, r3
   2bd68:	cmp	r3, #0
   2bd6c:	bne	2bca4 <GetDataSlab+0xa6c0>
   2bd70:	add	ip, sp, #76	; 0x4c
   2bd74:	add	r7, fp, #4
   2bd78:	add	r5, sp, #116	; 0x74
   2bd7c:	ldr	r0, [sp, #28]
   2bd80:	b	2bc68 <GetDataSlab+0xa684>
   2bd84:	mov	r3, #0
   2bd88:	b	251fc <GetDataSlab+0x3c18>
   2bd8c:	ldr	r3, [sp, #196]	; 0xc4
   2bd90:	ldr	r2, [r3, r0, lsl #2]
   2bd94:	cmp	r2, #0
   2bd98:	beq	2bdac <GetDataSlab+0xa7c8>
   2bd9c:	ldr	r3, [r5, #-4]
   2bda0:	mul	r3, r3, r2
   2bda4:	add	lr, lr, r3, lsl #2
   2bda8:	add	r4, r4, r3
   2bdac:	add	r0, r0, #1
   2bdb0:	cmp	r9, r0
   2bdb4:	beq	2be3c <GetDataSlab+0xa858>
   2bdb8:	ldr	r3, [ip]
   2bdbc:	add	r1, r3, #1
   2bdc0:	str	r1, [ip]
   2bdc4:	ldr	r2, [r7, #4]!
   2bdc8:	sdiv	r3, r1, r2
   2bdcc:	mls	r3, r2, r3, r1
   2bdd0:	cmp	r3, #0
   2bdd4:	bne	2be28 <GetDataSlab+0xa844>
   2bdd8:	str	r8, [ip], #4
   2bddc:	add	r5, r5, #4
   2bde0:	ldr	r2, [r5]
   2bde4:	sdiv	r3, r4, r2
   2bde8:	mls	r3, r2, r3, r4
   2bdec:	cmp	r3, #0
   2bdf0:	beq	2bd8c <GetDataSlab+0xa7a8>
   2bdf4:	ldr	r1, [r5, #-4]
   2bdf8:	str	r1, [sp, #8]
   2bdfc:	ldr	r1, [sp, #196]	; 0xc4
   2be00:	ldr	r1, [r1, r0, lsl #2]
   2be04:	str	r1, [sp, #12]
   2be08:	sub	r3, r2, r3
   2be0c:	mov	r2, r1
   2be10:	ldr	r1, [sp, #8]
   2be14:	mla	r3, r2, r1, r3
   2be18:	add	lr, lr, r3, lsl #2
   2be1c:	add	r4, r4, r3
   2be20:	b	2bdac <GetDataSlab+0xa7c8>
   2be24:	mov	r0, #1
   2be28:	add	r3, sp, #152	; 0x98
   2be2c:	add	r3, r3, r0, lsl #2
   2be30:	ldr	r3, [r3, #-120]	; 0xffffff88
   2be34:	add	r4, r4, r3
   2be38:	add	lr, lr, r3, lsl #2
   2be3c:	ldr	r3, [sp, #20]
   2be40:	add	r3, r3, r6
   2be44:	str	r3, [sp, #20]
   2be48:	ldr	r2, [sp, #16]
   2be4c:	cmp	r3, r2
   2be50:	bge	2bf10 <GetDataSlab+0xa92c>
   2be54:	ldr	r3, [sp, #196]	; 0xc4
   2be58:	ldr	r3, [r3]
   2be5c:	cmp	r3, #0
   2be60:	addne	lr, lr, r3, lsl #2
   2be64:	addne	r4, r4, r3
   2be68:	ldr	r6, [fp]
   2be6c:	cmp	r6, #0
   2be70:	ble	2beb0 <GetDataSlab+0xa8cc>
   2be74:	ldr	r3, [sp, #4]
   2be78:	ldr	r2, [sp, #20]
   2be7c:	add	r2, r3, r2, lsl #3
   2be80:	mov	r3, #0
   2be84:	ldr	r1, [lr]
   2be88:	mov	r0, r1
   2be8c:	asr	r1, r1, #31
   2be90:	strd	r0, [r2], #8
   2be94:	ldr	r1, [sl]
   2be98:	add	lr, lr, r1, lsl #2
   2be9c:	add	r4, r4, r1
   2bea0:	add	r3, r3, #1
   2bea4:	ldr	r6, [fp]
   2bea8:	cmp	r6, r3
   2beac:	bgt	2be84 <GetDataSlab+0xa8a0>
   2beb0:	ldr	r3, [sp, #192]	; 0xc0
   2beb4:	ldr	r2, [r3]
   2beb8:	ldr	r3, [sp, #196]	; 0xc4
   2bebc:	ldr	r3, [r3]
   2bec0:	sub	r3, r2, r3
   2bec4:	ldr	r2, [sl]
   2bec8:	mls	r3, r2, r6, r3
   2becc:	add	r4, r4, r3
   2bed0:	add	lr, lr, r3, lsl #2
   2bed4:	cmp	r9, #1
   2bed8:	ble	2be3c <GetDataSlab+0xa858>
   2bedc:	ldr	r3, [sp, #76]	; 0x4c
   2bee0:	add	r3, r3, #1
   2bee4:	str	r3, [sp, #76]	; 0x4c
   2bee8:	ldr	r1, [fp, #4]
   2beec:	sdiv	r2, r3, r1
   2bef0:	mls	r3, r1, r2, r3
   2bef4:	cmp	r3, #0
   2bef8:	bne	2be24 <GetDataSlab+0xa840>
   2befc:	add	ip, sp, #76	; 0x4c
   2bf00:	add	r7, fp, #4
   2bf04:	add	r5, sp, #112	; 0x70
   2bf08:	mov	r0, #1
   2bf0c:	b	2bdd8 <GetDataSlab+0xa7f4>
   2bf10:	mov	r3, #0
   2bf14:	b	251fc <GetDataSlab+0x3c18>
   2bf18:	ldr	r3, [sl]
   2bf1c:	str	r3, [sp, #28]
   2bf20:	sub	r3, r3, #1
   2bf24:	str	r3, [sp, #32]
   2bf28:	ldr	r3, [sp, #192]	; 0xc0
   2bf2c:	ldr	r3, [r3]
   2bf30:	str	r3, [sp, #112]	; 0x70
   2bf34:	ldr	r3, [fp]
   2bf38:	str	r3, [sp, #16]
   2bf3c:	cmp	r9, #1
   2bf40:	ble	2bf64 <GetDataSlab+0xa980>
   2bf44:	str	sl, [sp, #20]
   2bf48:	add	r8, sp, #36	; 0x24
   2bf4c:	ldr	r5, [sp, #192]	; 0xc0
   2bf50:	add	r6, sp, #112	; 0x70
   2bf54:	str	r5, [sp, #12]
   2bf58:	mov	r4, #1
   2bf5c:	mov	lr, #0
   2bf60:	b	40360 <GetDataSlab+0x1ed7c>
   2bf64:	mov	lr, #0
   2bf68:	b	403f8 <GetDataSlab+0x1ee14>
   2bf6c:	ldr	r3, [sp, #16]
   2bf70:	cmp	r3, #0
   2bf74:	ble	3a3ac <GetDataSlab+0x18dc8>
   2bf78:	mov	r3, #0
   2bf7c:	str	r3, [sp, #12]
   2bf80:	mov	r8, r3
   2bf84:	b	2c044 <GetDataSlab+0xaa60>
   2bf88:	ldr	r3, [sp, #196]	; 0xc4
   2bf8c:	ldr	r3, [r3, r0, lsl #2]
   2bf90:	cmp	r3, #0
   2bf94:	beq	2bfa8 <GetDataSlab+0xa9c4>
   2bf98:	ldr	r2, [r5, #-8]
   2bf9c:	mul	r3, r2, r3
   2bfa0:	add	ip, ip, r3, lsl #2
   2bfa4:	add	lr, lr, r3
   2bfa8:	add	r0, r0, #1
   2bfac:	cmp	r9, r0
   2bfb0:	beq	2c028 <GetDataSlab+0xaa44>
   2bfb4:	ldr	r3, [r4]
   2bfb8:	add	r1, r3, #1
   2bfbc:	str	r1, [r4]
   2bfc0:	ldr	r2, [r7, #4]!
   2bfc4:	sdiv	r3, r1, r2
   2bfc8:	mls	r3, r2, r3, r1
   2bfcc:	cmp	r3, #0
   2bfd0:	bne	2c014 <GetDataSlab+0xaa30>
   2bfd4:	str	r8, [r4], #4
   2bfd8:	ldr	r2, [r5], #4
   2bfdc:	sdiv	r3, lr, r2
   2bfe0:	mls	r3, r2, r3, lr
   2bfe4:	cmp	r3, #0
   2bfe8:	beq	2bf88 <GetDataSlab+0xa9a4>
   2bfec:	ldr	r1, [r5, #-8]
   2bff0:	ldr	sl, [sp, #196]	; 0xc4
   2bff4:	ldr	sl, [sl, r0, lsl #2]
   2bff8:	str	sl, [sp, #8]
   2bffc:	sub	r3, r2, r3
   2c000:	mla	r3, sl, r1, r3
   2c004:	add	ip, ip, r3, lsl #2
   2c008:	add	lr, lr, r3
   2c00c:	b	2bfa8 <GetDataSlab+0xa9c4>
   2c010:	ldr	r0, [sp, #28]
   2c014:	add	r3, sp, #152	; 0x98
   2c018:	add	r3, r3, r0, lsl #2
   2c01c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c020:	add	lr, lr, r3
   2c024:	add	ip, ip, r3, lsl #2
   2c028:	ldr	r3, [sp, #12]
   2c02c:	add	r3, r3, r6
   2c030:	str	r3, [sp, #12]
   2c034:	ldr	r3, [sp, #16]
   2c038:	ldr	r2, [sp, #12]
   2c03c:	cmp	r2, r3
   2c040:	bge	2c0f0 <GetDataSlab+0xab0c>
   2c044:	ldr	r3, [sp, #196]	; 0xc4
   2c048:	ldr	r3, [r3]
   2c04c:	cmp	r3, #0
   2c050:	addne	ip, ip, r3, lsl #2
   2c054:	addne	lr, lr, r3
   2c058:	ldr	r6, [fp]
   2c05c:	cmp	r6, #0
   2c060:	ble	2c098 <GetDataSlab+0xaab4>
   2c064:	sub	r0, ip, #4
   2c068:	ldr	r3, [sp, #4]
   2c06c:	ldr	r2, [sp, #12]
   2c070:	add	r2, r3, r2, lsl #3
   2c074:	mov	r1, #0
   2c078:	ldr	r3, [r0, #4]!
   2c07c:	str	r3, [r2]
   2c080:	str	r8, [r2, #4]
   2c084:	add	r2, r2, #8
   2c088:	add	r1, r1, #1
   2c08c:	ldr	r6, [fp]
   2c090:	cmp	r6, r1
   2c094:	bgt	2c078 <GetDataSlab+0xaa94>
   2c098:	ldr	r3, [sp, #192]	; 0xc0
   2c09c:	ldr	r2, [r3]
   2c0a0:	ldr	r3, [sp, #196]	; 0xc4
   2c0a4:	ldr	r3, [r3]
   2c0a8:	sub	r3, r2, r3
   2c0ac:	add	lr, lr, r3
   2c0b0:	add	ip, ip, r3, lsl #2
   2c0b4:	cmp	r9, #1
   2c0b8:	ble	2c028 <GetDataSlab+0xaa44>
   2c0bc:	ldr	r3, [sp, #76]	; 0x4c
   2c0c0:	add	r3, r3, #1
   2c0c4:	str	r3, [sp, #76]	; 0x4c
   2c0c8:	ldr	r1, [fp, #4]
   2c0cc:	sdiv	r2, r3, r1
   2c0d0:	mls	r3, r1, r2, r3
   2c0d4:	cmp	r3, #0
   2c0d8:	bne	2c010 <GetDataSlab+0xaa2c>
   2c0dc:	add	r4, sp, #76	; 0x4c
   2c0e0:	add	r7, fp, #4
   2c0e4:	add	r5, sp, #116	; 0x74
   2c0e8:	ldr	r0, [sp, #28]
   2c0ec:	b	2bfd4 <GetDataSlab+0xa9f0>
   2c0f0:	mov	r3, #0
   2c0f4:	b	251fc <GetDataSlab+0x3c18>
   2c0f8:	ldr	r3, [sp, #196]	; 0xc4
   2c0fc:	ldr	r2, [r3, r0, lsl #2]
   2c100:	cmp	r2, #0
   2c104:	beq	2c118 <GetDataSlab+0xab34>
   2c108:	ldr	r3, [r5, #-4]
   2c10c:	mul	r3, r3, r2
   2c110:	add	ip, ip, r3, lsl #2
   2c114:	add	lr, lr, r3
   2c118:	add	r0, r0, #1
   2c11c:	cmp	r9, r0
   2c120:	beq	2c1a8 <GetDataSlab+0xabc4>
   2c124:	ldr	r3, [r4]
   2c128:	add	r1, r3, #1
   2c12c:	str	r1, [r4]
   2c130:	ldr	r2, [r8, #4]!
   2c134:	sdiv	r3, r1, r2
   2c138:	mls	r3, r2, r3, r1
   2c13c:	cmp	r3, #0
   2c140:	bne	2c194 <GetDataSlab+0xabb0>
   2c144:	str	r7, [r4], #4
   2c148:	add	r5, r5, #4
   2c14c:	ldr	r2, [r5]
   2c150:	sdiv	r3, lr, r2
   2c154:	mls	r3, r2, r3, lr
   2c158:	cmp	r3, #0
   2c15c:	beq	2c0f8 <GetDataSlab+0xab14>
   2c160:	ldr	r1, [r5, #-4]
   2c164:	str	r1, [sp, #8]
   2c168:	ldr	r1, [sp, #196]	; 0xc4
   2c16c:	ldr	r1, [r1, r0, lsl #2]
   2c170:	str	r1, [sp, #12]
   2c174:	sub	r3, r2, r3
   2c178:	mov	r2, r1
   2c17c:	ldr	r1, [sp, #8]
   2c180:	mla	r3, r2, r1, r3
   2c184:	add	ip, ip, r3, lsl #2
   2c188:	add	lr, lr, r3
   2c18c:	b	2c118 <GetDataSlab+0xab34>
   2c190:	mov	r0, #1
   2c194:	add	r3, sp, #152	; 0x98
   2c198:	add	r3, r3, r0, lsl #2
   2c19c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c1a0:	add	lr, lr, r3
   2c1a4:	add	ip, ip, r3, lsl #2
   2c1a8:	ldr	r3, [sp, #20]
   2c1ac:	add	r3, r3, r6
   2c1b0:	str	r3, [sp, #20]
   2c1b4:	ldr	r2, [sp, #16]
   2c1b8:	cmp	r3, r2
   2c1bc:	bge	2c27c <GetDataSlab+0xac98>
   2c1c0:	ldr	r3, [sp, #196]	; 0xc4
   2c1c4:	ldr	r3, [r3]
   2c1c8:	cmp	r3, #0
   2c1cc:	addne	ip, ip, r3, lsl #2
   2c1d0:	addne	lr, lr, r3
   2c1d4:	ldr	r6, [fp]
   2c1d8:	cmp	r6, #0
   2c1dc:	ble	2c21c <GetDataSlab+0xac38>
   2c1e0:	ldr	r3, [sp, #4]
   2c1e4:	ldr	r2, [sp, #20]
   2c1e8:	add	r3, r3, r2, lsl #3
   2c1ec:	mov	r2, #0
   2c1f0:	ldr	r1, [ip]
   2c1f4:	str	r1, [r3]
   2c1f8:	str	r7, [r3, #4]
   2c1fc:	add	r3, r3, #8
   2c200:	ldr	r1, [sl]
   2c204:	add	ip, ip, r1, lsl #2
   2c208:	add	lr, lr, r1
   2c20c:	add	r2, r2, #1
   2c210:	ldr	r6, [fp]
   2c214:	cmp	r6, r2
   2c218:	bgt	2c1f0 <GetDataSlab+0xac0c>
   2c21c:	ldr	r3, [sp, #192]	; 0xc0
   2c220:	ldr	r2, [r3]
   2c224:	ldr	r3, [sp, #196]	; 0xc4
   2c228:	ldr	r3, [r3]
   2c22c:	sub	r3, r2, r3
   2c230:	ldr	r2, [sl]
   2c234:	mls	r3, r2, r6, r3
   2c238:	add	lr, lr, r3
   2c23c:	add	ip, ip, r3, lsl #2
   2c240:	cmp	r9, #1
   2c244:	ble	2c1a8 <GetDataSlab+0xabc4>
   2c248:	ldr	r3, [sp, #76]	; 0x4c
   2c24c:	add	r3, r3, #1
   2c250:	str	r3, [sp, #76]	; 0x4c
   2c254:	ldr	r1, [fp, #4]
   2c258:	sdiv	r2, r3, r1
   2c25c:	mls	r3, r1, r2, r3
   2c260:	cmp	r3, #0
   2c264:	bne	2c190 <GetDataSlab+0xabac>
   2c268:	add	r4, sp, #76	; 0x4c
   2c26c:	add	r8, fp, #4
   2c270:	add	r5, sp, #112	; 0x70
   2c274:	mov	r0, #1
   2c278:	b	2c144 <GetDataSlab+0xab60>
   2c27c:	mov	r3, #0
   2c280:	b	251fc <GetDataSlab+0x3c18>
   2c284:	ldr	r3, [sl]
   2c288:	str	r3, [sp, #28]
   2c28c:	sub	r3, r3, #1
   2c290:	str	r3, [sp, #32]
   2c294:	ldr	r3, [sp, #192]	; 0xc0
   2c298:	ldr	r3, [r3]
   2c29c:	str	r3, [sp, #112]	; 0x70
   2c2a0:	ldr	r3, [fp]
   2c2a4:	str	r3, [sp, #16]
   2c2a8:	cmp	r9, #1
   2c2ac:	ble	2c2d0 <GetDataSlab+0xacec>
   2c2b0:	str	sl, [sp, #20]
   2c2b4:	add	r8, sp, #36	; 0x24
   2c2b8:	ldr	r5, [sp, #192]	; 0xc0
   2c2bc:	add	r6, sp, #112	; 0x70
   2c2c0:	str	r5, [sp, #12]
   2c2c4:	mov	r4, #1
   2c2c8:	mov	lr, #0
   2c2cc:	b	40090 <GetDataSlab+0x1eaac>
   2c2d0:	mov	lr, #0
   2c2d4:	b	40128 <GetDataSlab+0x1eb44>
   2c2d8:	ldr	r3, [sp, #16]
   2c2dc:	cmp	r3, #0
   2c2e0:	ble	3a3b4 <GetDataSlab+0x18dd0>
   2c2e4:	mov	r3, #0
   2c2e8:	str	r3, [sp, #12]
   2c2ec:	mov	r8, r3
   2c2f0:	b	2c3b0 <GetDataSlab+0xadcc>
   2c2f4:	ldr	r3, [sp, #196]	; 0xc4
   2c2f8:	ldr	r3, [r3, r0, lsl #2]
   2c2fc:	cmp	r3, #0
   2c300:	beq	2c314 <GetDataSlab+0xad30>
   2c304:	ldr	r2, [r5, #-8]
   2c308:	mul	r3, r2, r3
   2c30c:	add	r4, r4, r3, lsl #1
   2c310:	add	lr, lr, r3
   2c314:	add	r0, r0, #1
   2c318:	cmp	r9, r0
   2c31c:	beq	2c394 <GetDataSlab+0xadb0>
   2c320:	ldr	r3, [ip]
   2c324:	add	r1, r3, #1
   2c328:	str	r1, [ip]
   2c32c:	ldr	r2, [r7, #4]!
   2c330:	sdiv	r3, r1, r2
   2c334:	mls	r3, r2, r3, r1
   2c338:	cmp	r3, #0
   2c33c:	bne	2c380 <GetDataSlab+0xad9c>
   2c340:	str	r8, [ip], #4
   2c344:	ldr	r2, [r5], #4
   2c348:	sdiv	r3, lr, r2
   2c34c:	mls	r3, r2, r3, lr
   2c350:	cmp	r3, #0
   2c354:	beq	2c2f4 <GetDataSlab+0xad10>
   2c358:	ldr	r1, [r5, #-8]
   2c35c:	ldr	sl, [sp, #196]	; 0xc4
   2c360:	ldr	sl, [sl, r0, lsl #2]
   2c364:	str	sl, [sp, #8]
   2c368:	sub	r3, r2, r3
   2c36c:	mla	r3, sl, r1, r3
   2c370:	add	r4, r4, r3, lsl #1
   2c374:	add	lr, lr, r3
   2c378:	b	2c314 <GetDataSlab+0xad30>
   2c37c:	ldr	r0, [sp, #28]
   2c380:	add	r3, sp, #152	; 0x98
   2c384:	add	r3, r3, r0, lsl #2
   2c388:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c38c:	add	lr, lr, r3
   2c390:	add	r4, r4, r3, lsl #1
   2c394:	ldr	r3, [sp, #12]
   2c398:	add	r3, r3, r6
   2c39c:	str	r3, [sp, #12]
   2c3a0:	ldr	r3, [sp, #16]
   2c3a4:	ldr	r2, [sp, #12]
   2c3a8:	cmp	r2, r3
   2c3ac:	bge	2c458 <GetDataSlab+0xae74>
   2c3b0:	ldr	r3, [sp, #196]	; 0xc4
   2c3b4:	ldr	r3, [r3]
   2c3b8:	cmp	r3, #0
   2c3bc:	addne	r4, r4, r3, lsl #1
   2c3c0:	addne	lr, lr, r3
   2c3c4:	ldr	r6, [fp]
   2c3c8:	cmp	r6, #0
   2c3cc:	ble	2c400 <GetDataSlab+0xae1c>
   2c3d0:	sub	ip, r4, #2
   2c3d4:	ldr	r3, [sp, #4]
   2c3d8:	ldr	r2, [sp, #12]
   2c3dc:	add	r0, r3, r2, lsl #3
   2c3e0:	mov	r1, #0
   2c3e4:	ldrsh	r2, [ip, #2]!
   2c3e8:	asr	r3, r2, #31
   2c3ec:	strd	r2, [r0], #8
   2c3f0:	add	r1, r1, #1
   2c3f4:	ldr	r6, [fp]
   2c3f8:	cmp	r6, r1
   2c3fc:	bgt	2c3e4 <GetDataSlab+0xae00>
   2c400:	ldr	r3, [sp, #192]	; 0xc0
   2c404:	ldr	r2, [r3]
   2c408:	ldr	r3, [sp, #196]	; 0xc4
   2c40c:	ldr	r3, [r3]
   2c410:	sub	r3, r2, r3
   2c414:	add	lr, lr, r3
   2c418:	add	r4, r4, r3, lsl #1
   2c41c:	cmp	r9, #1
   2c420:	ble	2c394 <GetDataSlab+0xadb0>
   2c424:	ldr	r3, [sp, #76]	; 0x4c
   2c428:	add	r3, r3, #1
   2c42c:	str	r3, [sp, #76]	; 0x4c
   2c430:	ldr	r1, [fp, #4]
   2c434:	sdiv	r2, r3, r1
   2c438:	mls	r3, r1, r2, r3
   2c43c:	cmp	r3, #0
   2c440:	bne	2c37c <GetDataSlab+0xad98>
   2c444:	add	ip, sp, #76	; 0x4c
   2c448:	add	r7, fp, #4
   2c44c:	add	r5, sp, #116	; 0x74
   2c450:	ldr	r0, [sp, #28]
   2c454:	b	2c340 <GetDataSlab+0xad5c>
   2c458:	mov	r3, #0
   2c45c:	b	251fc <GetDataSlab+0x3c18>
   2c460:	ldr	r3, [sp, #196]	; 0xc4
   2c464:	ldr	r2, [r3, r0, lsl #2]
   2c468:	cmp	r2, #0
   2c46c:	beq	2c480 <GetDataSlab+0xae9c>
   2c470:	ldr	r3, [r5, #-4]
   2c474:	mul	r3, r3, r2
   2c478:	add	r4, r4, r3, lsl #1
   2c47c:	add	lr, lr, r3
   2c480:	add	r0, r0, #1
   2c484:	cmp	r9, r0
   2c488:	beq	2c510 <GetDataSlab+0xaf2c>
   2c48c:	ldr	r3, [ip]
   2c490:	add	r1, r3, #1
   2c494:	str	r1, [ip]
   2c498:	ldr	r2, [r7, #4]!
   2c49c:	sdiv	r3, r1, r2
   2c4a0:	mls	r3, r2, r3, r1
   2c4a4:	cmp	r3, #0
   2c4a8:	bne	2c4fc <GetDataSlab+0xaf18>
   2c4ac:	str	r8, [ip], #4
   2c4b0:	add	r5, r5, #4
   2c4b4:	ldr	r2, [r5]
   2c4b8:	sdiv	r3, lr, r2
   2c4bc:	mls	r3, r2, r3, lr
   2c4c0:	cmp	r3, #0
   2c4c4:	beq	2c460 <GetDataSlab+0xae7c>
   2c4c8:	ldr	r1, [r5, #-4]
   2c4cc:	str	r1, [sp, #8]
   2c4d0:	ldr	r1, [sp, #196]	; 0xc4
   2c4d4:	ldr	r1, [r1, r0, lsl #2]
   2c4d8:	str	r1, [sp, #12]
   2c4dc:	sub	r3, r2, r3
   2c4e0:	mov	r2, r1
   2c4e4:	ldr	r1, [sp, #8]
   2c4e8:	mla	r3, r2, r1, r3
   2c4ec:	add	r4, r4, r3, lsl #1
   2c4f0:	add	lr, lr, r3
   2c4f4:	b	2c480 <GetDataSlab+0xae9c>
   2c4f8:	mov	r0, #1
   2c4fc:	add	r3, sp, #152	; 0x98
   2c500:	add	r3, r3, r0, lsl #2
   2c504:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c508:	add	lr, lr, r3
   2c50c:	add	r4, r4, r3, lsl #1
   2c510:	ldr	r3, [sp, #20]
   2c514:	add	r3, r3, r6
   2c518:	str	r3, [sp, #20]
   2c51c:	ldr	r2, [sp, #16]
   2c520:	cmp	r3, r2
   2c524:	bge	2c5e0 <GetDataSlab+0xaffc>
   2c528:	ldr	r3, [sp, #196]	; 0xc4
   2c52c:	ldr	r3, [r3]
   2c530:	cmp	r3, #0
   2c534:	addne	r4, r4, r3, lsl #1
   2c538:	addne	lr, lr, r3
   2c53c:	ldr	r6, [fp]
   2c540:	cmp	r6, #0
   2c544:	ble	2c580 <GetDataSlab+0xaf9c>
   2c548:	ldr	r3, [sp, #4]
   2c54c:	ldr	r2, [sp, #20]
   2c550:	add	r2, r3, r2, lsl #3
   2c554:	mov	r3, #0
   2c558:	ldrsh	r0, [r4]
   2c55c:	asr	r1, r0, #31
   2c560:	strd	r0, [r2], #8
   2c564:	ldr	r1, [sl]
   2c568:	add	r4, r4, r1, lsl #1
   2c56c:	add	lr, lr, r1
   2c570:	add	r3, r3, #1
   2c574:	ldr	r6, [fp]
   2c578:	cmp	r6, r3
   2c57c:	bgt	2c558 <GetDataSlab+0xaf74>
   2c580:	ldr	r3, [sp, #192]	; 0xc0
   2c584:	ldr	r2, [r3]
   2c588:	ldr	r3, [sp, #196]	; 0xc4
   2c58c:	ldr	r3, [r3]
   2c590:	sub	r3, r2, r3
   2c594:	ldr	r2, [sl]
   2c598:	mls	r3, r2, r6, r3
   2c59c:	add	lr, lr, r3
   2c5a0:	add	r4, r4, r3, lsl #1
   2c5a4:	cmp	r9, #1
   2c5a8:	ble	2c510 <GetDataSlab+0xaf2c>
   2c5ac:	ldr	r3, [sp, #76]	; 0x4c
   2c5b0:	add	r3, r3, #1
   2c5b4:	str	r3, [sp, #76]	; 0x4c
   2c5b8:	ldr	r1, [fp, #4]
   2c5bc:	sdiv	r2, r3, r1
   2c5c0:	mls	r3, r1, r2, r3
   2c5c4:	cmp	r3, #0
   2c5c8:	bne	2c4f8 <GetDataSlab+0xaf14>
   2c5cc:	add	ip, sp, #76	; 0x4c
   2c5d0:	add	r7, fp, #4
   2c5d4:	add	r5, sp, #112	; 0x70
   2c5d8:	mov	r0, #1
   2c5dc:	b	2c4ac <GetDataSlab+0xaec8>
   2c5e0:	mov	r3, #0
   2c5e4:	b	251fc <GetDataSlab+0x3c18>
   2c5e8:	ldr	r3, [sl]
   2c5ec:	str	r3, [sp, #28]
   2c5f0:	sub	r3, r3, #1
   2c5f4:	str	r3, [sp, #32]
   2c5f8:	ldr	r3, [sp, #192]	; 0xc0
   2c5fc:	ldr	r3, [r3]
   2c600:	str	r3, [sp, #112]	; 0x70
   2c604:	ldr	r3, [fp]
   2c608:	str	r3, [sp, #16]
   2c60c:	cmp	r9, #1
   2c610:	ble	2c634 <GetDataSlab+0xb050>
   2c614:	str	sl, [sp, #20]
   2c618:	add	r8, sp, #36	; 0x24
   2c61c:	ldr	r5, [sp, #192]	; 0xc0
   2c620:	add	r6, sp, #112	; 0x70
   2c624:	str	r5, [sp, #12]
   2c628:	mov	r4, #1
   2c62c:	mov	lr, #0
   2c630:	b	40180 <GetDataSlab+0x1eb9c>
   2c634:	mov	lr, #0
   2c638:	b	40218 <GetDataSlab+0x1ec34>
   2c63c:	ldr	r3, [sp, #16]
   2c640:	cmp	r3, #0
   2c644:	ble	3a3bc <GetDataSlab+0x18dd8>
   2c648:	mov	r3, #0
   2c64c:	str	r3, [sp, #12]
   2c650:	mov	r8, r3
   2c654:	b	2c714 <GetDataSlab+0xb130>
   2c658:	ldr	r3, [sp, #196]	; 0xc4
   2c65c:	ldr	r3, [r3, r0, lsl #2]
   2c660:	cmp	r3, #0
   2c664:	beq	2c678 <GetDataSlab+0xb094>
   2c668:	ldr	r2, [r5, #-8]
   2c66c:	mul	r3, r2, r3
   2c670:	add	r4, r4, r3, lsl #1
   2c674:	add	lr, lr, r3
   2c678:	add	r0, r0, #1
   2c67c:	cmp	r9, r0
   2c680:	beq	2c6f8 <GetDataSlab+0xb114>
   2c684:	ldr	r3, [ip]
   2c688:	add	r1, r3, #1
   2c68c:	str	r1, [ip]
   2c690:	ldr	r2, [r7, #4]!
   2c694:	sdiv	r3, r1, r2
   2c698:	mls	r3, r2, r3, r1
   2c69c:	cmp	r3, #0
   2c6a0:	bne	2c6e4 <GetDataSlab+0xb100>
   2c6a4:	str	r8, [ip], #4
   2c6a8:	ldr	r2, [r5], #4
   2c6ac:	sdiv	r3, lr, r2
   2c6b0:	mls	r3, r2, r3, lr
   2c6b4:	cmp	r3, #0
   2c6b8:	beq	2c658 <GetDataSlab+0xb074>
   2c6bc:	ldr	r1, [r5, #-8]
   2c6c0:	ldr	sl, [sp, #196]	; 0xc4
   2c6c4:	ldr	sl, [sl, r0, lsl #2]
   2c6c8:	str	sl, [sp, #8]
   2c6cc:	sub	r3, r2, r3
   2c6d0:	mla	r3, sl, r1, r3
   2c6d4:	add	r4, r4, r3, lsl #1
   2c6d8:	add	lr, lr, r3
   2c6dc:	b	2c678 <GetDataSlab+0xb094>
   2c6e0:	ldr	r0, [sp, #28]
   2c6e4:	add	r3, sp, #152	; 0x98
   2c6e8:	add	r3, r3, r0, lsl #2
   2c6ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c6f0:	add	lr, lr, r3
   2c6f4:	add	r4, r4, r3, lsl #1
   2c6f8:	ldr	r3, [sp, #12]
   2c6fc:	add	r3, r3, r6
   2c700:	str	r3, [sp, #12]
   2c704:	ldr	r3, [sp, #16]
   2c708:	ldr	r2, [sp, #12]
   2c70c:	cmp	r2, r3
   2c710:	bge	2c7bc <GetDataSlab+0xb1d8>
   2c714:	ldr	r3, [sp, #196]	; 0xc4
   2c718:	ldr	r3, [r3]
   2c71c:	cmp	r3, #0
   2c720:	addne	r4, r4, r3, lsl #1
   2c724:	addne	lr, lr, r3
   2c728:	ldr	r6, [fp]
   2c72c:	cmp	r6, #0
   2c730:	ble	2c764 <GetDataSlab+0xb180>
   2c734:	sub	ip, r4, #2
   2c738:	ldr	r3, [sp, #4]
   2c73c:	ldr	r2, [sp, #12]
   2c740:	add	r0, r3, r2, lsl #3
   2c744:	mov	r1, #0
   2c748:	ldrh	r2, [ip, #2]!
   2c74c:	mov	r3, #0
   2c750:	strd	r2, [r0], #8
   2c754:	add	r1, r1, #1
   2c758:	ldr	r6, [fp]
   2c75c:	cmp	r6, r1
   2c760:	bgt	2c748 <GetDataSlab+0xb164>
   2c764:	ldr	r3, [sp, #192]	; 0xc0
   2c768:	ldr	r2, [r3]
   2c76c:	ldr	r3, [sp, #196]	; 0xc4
   2c770:	ldr	r3, [r3]
   2c774:	sub	r3, r2, r3
   2c778:	add	lr, lr, r3
   2c77c:	add	r4, r4, r3, lsl #1
   2c780:	cmp	r9, #1
   2c784:	ble	2c6f8 <GetDataSlab+0xb114>
   2c788:	ldr	r3, [sp, #76]	; 0x4c
   2c78c:	add	r3, r3, #1
   2c790:	str	r3, [sp, #76]	; 0x4c
   2c794:	ldr	r1, [fp, #4]
   2c798:	sdiv	r2, r3, r1
   2c79c:	mls	r3, r1, r2, r3
   2c7a0:	cmp	r3, #0
   2c7a4:	bne	2c6e0 <GetDataSlab+0xb0fc>
   2c7a8:	add	ip, sp, #76	; 0x4c
   2c7ac:	add	r7, fp, #4
   2c7b0:	add	r5, sp, #116	; 0x74
   2c7b4:	ldr	r0, [sp, #28]
   2c7b8:	b	2c6a4 <GetDataSlab+0xb0c0>
   2c7bc:	mov	r3, #0
   2c7c0:	b	251fc <GetDataSlab+0x3c18>
   2c7c4:	ldr	r3, [sp, #196]	; 0xc4
   2c7c8:	ldr	r2, [r3, r0, lsl #2]
   2c7cc:	cmp	r2, #0
   2c7d0:	beq	2c7e4 <GetDataSlab+0xb200>
   2c7d4:	ldr	r3, [r5, #-4]
   2c7d8:	mul	r3, r3, r2
   2c7dc:	add	r4, r4, r3, lsl #1
   2c7e0:	add	lr, lr, r3
   2c7e4:	add	r0, r0, #1
   2c7e8:	cmp	r9, r0
   2c7ec:	beq	2c874 <GetDataSlab+0xb290>
   2c7f0:	ldr	r3, [ip]
   2c7f4:	add	r1, r3, #1
   2c7f8:	str	r1, [ip]
   2c7fc:	ldr	r2, [r7, #4]!
   2c800:	sdiv	r3, r1, r2
   2c804:	mls	r3, r2, r3, r1
   2c808:	cmp	r3, #0
   2c80c:	bne	2c860 <GetDataSlab+0xb27c>
   2c810:	str	r8, [ip], #4
   2c814:	add	r5, r5, #4
   2c818:	ldr	r2, [r5]
   2c81c:	sdiv	r3, lr, r2
   2c820:	mls	r3, r2, r3, lr
   2c824:	cmp	r3, #0
   2c828:	beq	2c7c4 <GetDataSlab+0xb1e0>
   2c82c:	ldr	r1, [r5, #-4]
   2c830:	str	r1, [sp, #8]
   2c834:	ldr	r1, [sp, #196]	; 0xc4
   2c838:	ldr	r1, [r1, r0, lsl #2]
   2c83c:	str	r1, [sp, #12]
   2c840:	sub	r3, r2, r3
   2c844:	mov	r2, r1
   2c848:	ldr	r1, [sp, #8]
   2c84c:	mla	r3, r2, r1, r3
   2c850:	add	r4, r4, r3, lsl #1
   2c854:	add	lr, lr, r3
   2c858:	b	2c7e4 <GetDataSlab+0xb200>
   2c85c:	mov	r0, #1
   2c860:	add	r3, sp, #152	; 0x98
   2c864:	add	r3, r3, r0, lsl #2
   2c868:	ldr	r3, [r3, #-120]	; 0xffffff88
   2c86c:	add	lr, lr, r3
   2c870:	add	r4, r4, r3, lsl #1
   2c874:	ldr	r3, [sp, #20]
   2c878:	add	r3, r3, r6
   2c87c:	str	r3, [sp, #20]
   2c880:	ldr	r2, [sp, #16]
   2c884:	cmp	r3, r2
   2c888:	bge	2c944 <GetDataSlab+0xb360>
   2c88c:	ldr	r3, [sp, #196]	; 0xc4
   2c890:	ldr	r3, [r3]
   2c894:	cmp	r3, #0
   2c898:	addne	r4, r4, r3, lsl #1
   2c89c:	addne	lr, lr, r3
   2c8a0:	ldr	r6, [fp]
   2c8a4:	cmp	r6, #0
   2c8a8:	ble	2c8e4 <GetDataSlab+0xb300>
   2c8ac:	ldr	r3, [sp, #4]
   2c8b0:	ldr	r2, [sp, #20]
   2c8b4:	add	r2, r3, r2, lsl #3
   2c8b8:	mov	r3, #0
   2c8bc:	ldrh	r0, [r4]
   2c8c0:	mov	r1, #0
   2c8c4:	strd	r0, [r2], #8
   2c8c8:	ldr	r1, [sl]
   2c8cc:	add	r4, r4, r1, lsl #1
   2c8d0:	add	lr, lr, r1
   2c8d4:	add	r3, r3, #1
   2c8d8:	ldr	r6, [fp]
   2c8dc:	cmp	r6, r3
   2c8e0:	bgt	2c8bc <GetDataSlab+0xb2d8>
   2c8e4:	ldr	r3, [sp, #192]	; 0xc0
   2c8e8:	ldr	r2, [r3]
   2c8ec:	ldr	r3, [sp, #196]	; 0xc4
   2c8f0:	ldr	r3, [r3]
   2c8f4:	sub	r3, r2, r3
   2c8f8:	ldr	r2, [sl]
   2c8fc:	mls	r3, r2, r6, r3
   2c900:	add	lr, lr, r3
   2c904:	add	r4, r4, r3, lsl #1
   2c908:	cmp	r9, #1
   2c90c:	ble	2c874 <GetDataSlab+0xb290>
   2c910:	ldr	r3, [sp, #76]	; 0x4c
   2c914:	add	r3, r3, #1
   2c918:	str	r3, [sp, #76]	; 0x4c
   2c91c:	ldr	r1, [fp, #4]
   2c920:	sdiv	r2, r3, r1
   2c924:	mls	r3, r1, r2, r3
   2c928:	cmp	r3, #0
   2c92c:	bne	2c85c <GetDataSlab+0xb278>
   2c930:	add	ip, sp, #76	; 0x4c
   2c934:	add	r7, fp, #4
   2c938:	add	r5, sp, #112	; 0x70
   2c93c:	mov	r0, #1
   2c940:	b	2c810 <GetDataSlab+0xb22c>
   2c944:	mov	r3, #0
   2c948:	b	251fc <GetDataSlab+0x3c18>
   2c94c:	ldr	r3, [sl]
   2c950:	str	r3, [sp, #28]
   2c954:	sub	r3, r3, #1
   2c958:	str	r3, [sp, #32]
   2c95c:	ldr	r3, [sp, #192]	; 0xc0
   2c960:	ldr	r3, [r3]
   2c964:	str	r3, [sp, #112]	; 0x70
   2c968:	ldr	r3, [fp]
   2c96c:	str	r3, [sp, #16]
   2c970:	cmp	r9, #1
   2c974:	ble	2c994 <GetDataSlab+0xb3b0>
   2c978:	str	sl, [sp, #20]
   2c97c:	add	r7, sp, #36	; 0x24
   2c980:	ldr	r4, [sp, #192]	; 0xc0
   2c984:	add	r5, sp, #112	; 0x70
   2c988:	str	r4, [sp, #12]
   2c98c:	mov	lr, #0
   2c990:	b	3feb0 <GetDataSlab+0x1e8cc>
   2c994:	mov	lr, #0
   2c998:	b	3ff48 <GetDataSlab+0x1e964>
   2c99c:	ldr	r3, [sp, #16]
   2c9a0:	cmp	r3, #0
   2c9a4:	ble	3a3c4 <GetDataSlab+0x18de0>
   2c9a8:	mov	r3, #0
   2c9ac:	str	r3, [sp, #12]
   2c9b0:	mov	r8, r3
   2c9b4:	b	2ca74 <GetDataSlab+0xb490>
   2c9b8:	ldr	r3, [sp, #196]	; 0xc4
   2c9bc:	ldr	r3, [r3, r0, lsl #2]
   2c9c0:	cmp	r3, #0
   2c9c4:	beq	2c9d8 <GetDataSlab+0xb3f4>
   2c9c8:	ldr	r2, [r5, #-8]
   2c9cc:	mul	r3, r2, r3
   2c9d0:	add	ip, ip, r3
   2c9d4:	add	lr, lr, r3
   2c9d8:	add	r0, r0, #1
   2c9dc:	cmp	r9, r0
   2c9e0:	beq	2ca58 <GetDataSlab+0xb474>
   2c9e4:	ldr	r3, [r4]
   2c9e8:	add	r1, r3, #1
   2c9ec:	str	r1, [r4]
   2c9f0:	ldr	r2, [r7, #4]!
   2c9f4:	sdiv	r3, r1, r2
   2c9f8:	mls	r3, r2, r3, r1
   2c9fc:	cmp	r3, #0
   2ca00:	bne	2ca44 <GetDataSlab+0xb460>
   2ca04:	str	r8, [r4], #4
   2ca08:	ldr	r2, [r5], #4
   2ca0c:	sdiv	r3, lr, r2
   2ca10:	mls	r3, r2, r3, lr
   2ca14:	cmp	r3, #0
   2ca18:	beq	2c9b8 <GetDataSlab+0xb3d4>
   2ca1c:	ldr	r1, [r5, #-8]
   2ca20:	ldr	sl, [sp, #196]	; 0xc4
   2ca24:	ldr	sl, [sl, r0, lsl #2]
   2ca28:	str	sl, [sp, #8]
   2ca2c:	sub	r3, r2, r3
   2ca30:	mla	r3, sl, r1, r3
   2ca34:	add	ip, ip, r3
   2ca38:	add	lr, lr, r3
   2ca3c:	b	2c9d8 <GetDataSlab+0xb3f4>
   2ca40:	ldr	r0, [sp, #28]
   2ca44:	add	r3, sp, #152	; 0x98
   2ca48:	add	r3, r3, r0, lsl #2
   2ca4c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ca50:	add	lr, lr, r3
   2ca54:	add	ip, ip, r3
   2ca58:	ldr	r3, [sp, #12]
   2ca5c:	add	r3, r3, r6
   2ca60:	str	r3, [sp, #12]
   2ca64:	ldr	r3, [sp, #16]
   2ca68:	ldr	r2, [sp, #12]
   2ca6c:	cmp	r2, r3
   2ca70:	bge	2cb20 <GetDataSlab+0xb53c>
   2ca74:	ldr	r3, [sp, #196]	; 0xc4
   2ca78:	ldr	r3, [r3]
   2ca7c:	cmp	r3, #0
   2ca80:	addne	ip, ip, r3
   2ca84:	addne	lr, lr, r3
   2ca88:	ldr	r6, [fp]
   2ca8c:	cmp	r6, #0
   2ca90:	ble	2cac8 <GetDataSlab+0xb4e4>
   2ca94:	sub	r1, ip, #1
   2ca98:	ldr	r3, [sp, #4]
   2ca9c:	ldr	r2, [sp, #12]
   2caa0:	add	r0, r3, r2, lsl #3
   2caa4:	ldrsb	r2, [r1, #1]
   2caa8:	asr	r3, r2, #31
   2caac:	strd	r2, [r0], #8
   2cab0:	ldr	r6, [fp]
   2cab4:	add	r3, r1, #2
   2cab8:	sub	r3, r3, ip
   2cabc:	add	r1, r1, #1
   2cac0:	cmp	r6, r3
   2cac4:	bgt	2caa4 <GetDataSlab+0xb4c0>
   2cac8:	ldr	r3, [sp, #192]	; 0xc0
   2cacc:	ldr	r2, [r3]
   2cad0:	ldr	r3, [sp, #196]	; 0xc4
   2cad4:	ldr	r3, [r3]
   2cad8:	sub	r3, r2, r3
   2cadc:	add	lr, lr, r3
   2cae0:	add	ip, ip, r3
   2cae4:	cmp	r9, #1
   2cae8:	ble	2ca58 <GetDataSlab+0xb474>
   2caec:	ldr	r3, [sp, #76]	; 0x4c
   2caf0:	add	r3, r3, #1
   2caf4:	str	r3, [sp, #76]	; 0x4c
   2caf8:	ldr	r1, [fp, #4]
   2cafc:	sdiv	r2, r3, r1
   2cb00:	mls	r3, r1, r2, r3
   2cb04:	cmp	r3, #0
   2cb08:	bne	2ca40 <GetDataSlab+0xb45c>
   2cb0c:	add	r4, sp, #76	; 0x4c
   2cb10:	add	r7, fp, #4
   2cb14:	add	r5, sp, #116	; 0x74
   2cb18:	ldr	r0, [sp, #28]
   2cb1c:	b	2ca04 <GetDataSlab+0xb420>
   2cb20:	mov	r3, #0
   2cb24:	b	251fc <GetDataSlab+0x3c18>
   2cb28:	ldr	r3, [sp, #196]	; 0xc4
   2cb2c:	ldr	r2, [r3, r0, lsl #2]
   2cb30:	cmp	r2, #0
   2cb34:	beq	2cb48 <GetDataSlab+0xb564>
   2cb38:	ldr	r3, [r5, #-4]
   2cb3c:	mul	r3, r3, r2
   2cb40:	add	ip, ip, r3
   2cb44:	add	lr, lr, r3
   2cb48:	add	r0, r0, #1
   2cb4c:	cmp	r9, r0
   2cb50:	beq	2cbd8 <GetDataSlab+0xb5f4>
   2cb54:	ldr	r3, [r4]
   2cb58:	add	r1, r3, #1
   2cb5c:	str	r1, [r4]
   2cb60:	ldr	r2, [r7, #4]!
   2cb64:	sdiv	r3, r1, r2
   2cb68:	mls	r3, r2, r3, r1
   2cb6c:	cmp	r3, #0
   2cb70:	bne	2cbc4 <GetDataSlab+0xb5e0>
   2cb74:	str	r8, [r4], #4
   2cb78:	add	r5, r5, #4
   2cb7c:	ldr	r2, [r5]
   2cb80:	sdiv	r3, lr, r2
   2cb84:	mls	r3, r2, r3, lr
   2cb88:	cmp	r3, #0
   2cb8c:	beq	2cb28 <GetDataSlab+0xb544>
   2cb90:	ldr	r1, [r5, #-4]
   2cb94:	str	r1, [sp, #8]
   2cb98:	ldr	r1, [sp, #196]	; 0xc4
   2cb9c:	ldr	r1, [r1, r0, lsl #2]
   2cba0:	str	r1, [sp, #12]
   2cba4:	sub	r3, r2, r3
   2cba8:	mov	r2, r1
   2cbac:	ldr	r1, [sp, #8]
   2cbb0:	mla	r3, r2, r1, r3
   2cbb4:	add	ip, ip, r3
   2cbb8:	add	lr, lr, r3
   2cbbc:	b	2cb48 <GetDataSlab+0xb564>
   2cbc0:	mov	r0, #1
   2cbc4:	add	r3, sp, #152	; 0x98
   2cbc8:	add	r3, r3, r0, lsl #2
   2cbcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cbd0:	add	lr, lr, r3
   2cbd4:	add	ip, ip, r3
   2cbd8:	ldr	r3, [sp, #20]
   2cbdc:	add	r3, r3, r6
   2cbe0:	str	r3, [sp, #20]
   2cbe4:	ldr	r2, [sp, #16]
   2cbe8:	cmp	r3, r2
   2cbec:	bge	2cca8 <GetDataSlab+0xb6c4>
   2cbf0:	ldr	r3, [sp, #196]	; 0xc4
   2cbf4:	ldr	r3, [r3]
   2cbf8:	cmp	r3, #0
   2cbfc:	addne	ip, ip, r3
   2cc00:	addne	lr, lr, r3
   2cc04:	ldr	r6, [fp]
   2cc08:	cmp	r6, #0
   2cc0c:	ble	2cc48 <GetDataSlab+0xb664>
   2cc10:	ldr	r3, [sp, #4]
   2cc14:	ldr	r2, [sp, #20]
   2cc18:	add	r2, r3, r2, lsl #3
   2cc1c:	mov	r3, #0
   2cc20:	ldrsb	r0, [ip]
   2cc24:	asr	r1, r0, #31
   2cc28:	strd	r0, [r2], #8
   2cc2c:	ldr	r1, [sl]
   2cc30:	add	ip, ip, r1
   2cc34:	add	lr, lr, r1
   2cc38:	add	r3, r3, #1
   2cc3c:	ldr	r6, [fp]
   2cc40:	cmp	r6, r3
   2cc44:	bgt	2cc20 <GetDataSlab+0xb63c>
   2cc48:	ldr	r3, [sp, #192]	; 0xc0
   2cc4c:	ldr	r2, [r3]
   2cc50:	ldr	r3, [sp, #196]	; 0xc4
   2cc54:	ldr	r3, [r3]
   2cc58:	sub	r3, r2, r3
   2cc5c:	ldr	r2, [sl]
   2cc60:	mls	r3, r2, r6, r3
   2cc64:	add	lr, lr, r3
   2cc68:	add	ip, ip, r3
   2cc6c:	cmp	r9, #1
   2cc70:	ble	2cbd8 <GetDataSlab+0xb5f4>
   2cc74:	ldr	r3, [sp, #76]	; 0x4c
   2cc78:	add	r3, r3, #1
   2cc7c:	str	r3, [sp, #76]	; 0x4c
   2cc80:	ldr	r1, [fp, #4]
   2cc84:	sdiv	r2, r3, r1
   2cc88:	mls	r3, r1, r2, r3
   2cc8c:	cmp	r3, #0
   2cc90:	bne	2cbc0 <GetDataSlab+0xb5dc>
   2cc94:	add	r4, sp, #76	; 0x4c
   2cc98:	add	r7, fp, #4
   2cc9c:	add	r5, sp, #112	; 0x70
   2cca0:	mov	r0, #1
   2cca4:	b	2cb74 <GetDataSlab+0xb590>
   2cca8:	mov	r3, #0
   2ccac:	b	251fc <GetDataSlab+0x3c18>
   2ccb0:	ldr	r3, [sl]
   2ccb4:	str	r3, [sp, #28]
   2ccb8:	sub	r3, r3, #1
   2ccbc:	str	r3, [sp, #32]
   2ccc0:	ldr	r3, [sp, #192]	; 0xc0
   2ccc4:	ldr	r3, [r3]
   2ccc8:	str	r3, [sp, #112]	; 0x70
   2cccc:	ldr	r3, [fp]
   2ccd0:	str	r3, [sp, #16]
   2ccd4:	cmp	r9, #1
   2ccd8:	ble	2ccfc <GetDataSlab+0xb718>
   2ccdc:	str	sl, [sp, #20]
   2cce0:	add	r8, sp, #36	; 0x24
   2cce4:	ldr	r5, [sp, #192]	; 0xc0
   2cce8:	add	r6, sp, #112	; 0x70
   2ccec:	str	r5, [sp, #12]
   2ccf0:	mov	r4, #1
   2ccf4:	mov	lr, #0
   2ccf8:	b	3ffa0 <GetDataSlab+0x1e9bc>
   2ccfc:	mov	lr, #0
   2cd00:	b	40038 <GetDataSlab+0x1ea54>
   2cd04:	ldr	r3, [sp, #16]
   2cd08:	cmp	r3, #0
   2cd0c:	ble	3a3cc <GetDataSlab+0x18de8>
   2cd10:	mov	r3, #0
   2cd14:	str	r3, [sp, #12]
   2cd18:	mov	r8, r3
   2cd1c:	b	2cddc <GetDataSlab+0xb7f8>
   2cd20:	ldr	r3, [sp, #196]	; 0xc4
   2cd24:	ldr	r3, [r3, r0, lsl #2]
   2cd28:	cmp	r3, #0
   2cd2c:	beq	2cd40 <GetDataSlab+0xb75c>
   2cd30:	ldr	r2, [r5, #-8]
   2cd34:	mul	r3, r2, r3
   2cd38:	add	ip, ip, r3
   2cd3c:	add	lr, lr, r3
   2cd40:	add	r0, r0, #1
   2cd44:	cmp	r9, r0
   2cd48:	beq	2cdc0 <GetDataSlab+0xb7dc>
   2cd4c:	ldr	r3, [r4]
   2cd50:	add	r1, r3, #1
   2cd54:	str	r1, [r4]
   2cd58:	ldr	r2, [r7, #4]!
   2cd5c:	sdiv	r3, r1, r2
   2cd60:	mls	r3, r2, r3, r1
   2cd64:	cmp	r3, #0
   2cd68:	bne	2cdac <GetDataSlab+0xb7c8>
   2cd6c:	str	r8, [r4], #4
   2cd70:	ldr	r2, [r5], #4
   2cd74:	sdiv	r3, lr, r2
   2cd78:	mls	r3, r2, r3, lr
   2cd7c:	cmp	r3, #0
   2cd80:	beq	2cd20 <GetDataSlab+0xb73c>
   2cd84:	ldr	r1, [r5, #-8]
   2cd88:	ldr	sl, [sp, #196]	; 0xc4
   2cd8c:	ldr	sl, [sl, r0, lsl #2]
   2cd90:	str	sl, [sp, #8]
   2cd94:	sub	r3, r2, r3
   2cd98:	mla	r3, sl, r1, r3
   2cd9c:	add	ip, ip, r3
   2cda0:	add	lr, lr, r3
   2cda4:	b	2cd40 <GetDataSlab+0xb75c>
   2cda8:	ldr	r0, [sp, #28]
   2cdac:	add	r3, sp, #152	; 0x98
   2cdb0:	add	r3, r3, r0, lsl #2
   2cdb4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cdb8:	add	lr, lr, r3
   2cdbc:	add	ip, ip, r3
   2cdc0:	ldr	r3, [sp, #12]
   2cdc4:	add	r3, r3, r6
   2cdc8:	str	r3, [sp, #12]
   2cdcc:	ldr	r3, [sp, #16]
   2cdd0:	ldr	r2, [sp, #12]
   2cdd4:	cmp	r2, r3
   2cdd8:	bge	2ce88 <GetDataSlab+0xb8a4>
   2cddc:	ldr	r3, [sp, #196]	; 0xc4
   2cde0:	ldr	r3, [r3]
   2cde4:	cmp	r3, #0
   2cde8:	addne	ip, ip, r3
   2cdec:	addne	lr, lr, r3
   2cdf0:	ldr	r6, [fp]
   2cdf4:	cmp	r6, #0
   2cdf8:	ble	2ce30 <GetDataSlab+0xb84c>
   2cdfc:	sub	r1, ip, #1
   2ce00:	ldr	r3, [sp, #4]
   2ce04:	ldr	r2, [sp, #12]
   2ce08:	add	r0, r3, r2, lsl #3
   2ce0c:	ldrb	r2, [r1, #1]
   2ce10:	mov	r3, #0
   2ce14:	strd	r2, [r0], #8
   2ce18:	ldr	r6, [fp]
   2ce1c:	add	r3, r1, #2
   2ce20:	sub	r3, r3, ip
   2ce24:	add	r1, r1, #1
   2ce28:	cmp	r6, r3
   2ce2c:	bgt	2ce0c <GetDataSlab+0xb828>
   2ce30:	ldr	r3, [sp, #192]	; 0xc0
   2ce34:	ldr	r2, [r3]
   2ce38:	ldr	r3, [sp, #196]	; 0xc4
   2ce3c:	ldr	r3, [r3]
   2ce40:	sub	r3, r2, r3
   2ce44:	add	lr, lr, r3
   2ce48:	add	ip, ip, r3
   2ce4c:	cmp	r9, #1
   2ce50:	ble	2cdc0 <GetDataSlab+0xb7dc>
   2ce54:	ldr	r3, [sp, #76]	; 0x4c
   2ce58:	add	r3, r3, #1
   2ce5c:	str	r3, [sp, #76]	; 0x4c
   2ce60:	ldr	r1, [fp, #4]
   2ce64:	sdiv	r2, r3, r1
   2ce68:	mls	r3, r1, r2, r3
   2ce6c:	cmp	r3, #0
   2ce70:	bne	2cda8 <GetDataSlab+0xb7c4>
   2ce74:	add	r4, sp, #76	; 0x4c
   2ce78:	add	r7, fp, #4
   2ce7c:	add	r5, sp, #116	; 0x74
   2ce80:	ldr	r0, [sp, #28]
   2ce84:	b	2cd6c <GetDataSlab+0xb788>
   2ce88:	mov	r3, #0
   2ce8c:	b	251fc <GetDataSlab+0x3c18>
   2ce90:	ldr	r3, [sp, #196]	; 0xc4
   2ce94:	ldr	r2, [r3, r0, lsl #2]
   2ce98:	cmp	r2, #0
   2ce9c:	beq	2ceb0 <GetDataSlab+0xb8cc>
   2cea0:	ldr	r3, [r5, #-4]
   2cea4:	mul	r3, r3, r2
   2cea8:	add	ip, ip, r3
   2ceac:	add	lr, lr, r3
   2ceb0:	add	r0, r0, #1
   2ceb4:	cmp	r9, r0
   2ceb8:	beq	2cf40 <GetDataSlab+0xb95c>
   2cebc:	ldr	r3, [r4]
   2cec0:	add	r1, r3, #1
   2cec4:	str	r1, [r4]
   2cec8:	ldr	r2, [r7, #4]!
   2cecc:	sdiv	r3, r1, r2
   2ced0:	mls	r3, r2, r3, r1
   2ced4:	cmp	r3, #0
   2ced8:	bne	2cf2c <GetDataSlab+0xb948>
   2cedc:	str	r8, [r4], #4
   2cee0:	add	r5, r5, #4
   2cee4:	ldr	r2, [r5]
   2cee8:	sdiv	r3, lr, r2
   2ceec:	mls	r3, r2, r3, lr
   2cef0:	cmp	r3, #0
   2cef4:	beq	2ce90 <GetDataSlab+0xb8ac>
   2cef8:	ldr	r1, [r5, #-4]
   2cefc:	str	r1, [sp, #8]
   2cf00:	ldr	r1, [sp, #196]	; 0xc4
   2cf04:	ldr	r1, [r1, r0, lsl #2]
   2cf08:	str	r1, [sp, #12]
   2cf0c:	sub	r3, r2, r3
   2cf10:	mov	r2, r1
   2cf14:	ldr	r1, [sp, #8]
   2cf18:	mla	r3, r2, r1, r3
   2cf1c:	add	ip, ip, r3
   2cf20:	add	lr, lr, r3
   2cf24:	b	2ceb0 <GetDataSlab+0xb8cc>
   2cf28:	mov	r0, #1
   2cf2c:	add	r3, sp, #152	; 0x98
   2cf30:	add	r3, r3, r0, lsl #2
   2cf34:	ldr	r3, [r3, #-120]	; 0xffffff88
   2cf38:	add	lr, lr, r3
   2cf3c:	add	ip, ip, r3
   2cf40:	ldr	r3, [sp, #20]
   2cf44:	add	r3, r3, r6
   2cf48:	str	r3, [sp, #20]
   2cf4c:	ldr	r2, [sp, #16]
   2cf50:	cmp	r3, r2
   2cf54:	bge	2d010 <GetDataSlab+0xba2c>
   2cf58:	ldr	r3, [sp, #196]	; 0xc4
   2cf5c:	ldr	r3, [r3]
   2cf60:	cmp	r3, #0
   2cf64:	addne	ip, ip, r3
   2cf68:	addne	lr, lr, r3
   2cf6c:	ldr	r6, [fp]
   2cf70:	cmp	r6, #0
   2cf74:	ble	2cfb0 <GetDataSlab+0xb9cc>
   2cf78:	ldr	r3, [sp, #4]
   2cf7c:	ldr	r2, [sp, #20]
   2cf80:	add	r2, r3, r2, lsl #3
   2cf84:	mov	r3, #0
   2cf88:	ldrb	r0, [ip]
   2cf8c:	mov	r1, #0
   2cf90:	strd	r0, [r2], #8
   2cf94:	ldr	r1, [sl]
   2cf98:	add	ip, ip, r1
   2cf9c:	add	lr, lr, r1
   2cfa0:	add	r3, r3, #1
   2cfa4:	ldr	r6, [fp]
   2cfa8:	cmp	r6, r3
   2cfac:	bgt	2cf88 <GetDataSlab+0xb9a4>
   2cfb0:	ldr	r3, [sp, #192]	; 0xc0
   2cfb4:	ldr	r2, [r3]
   2cfb8:	ldr	r3, [sp, #196]	; 0xc4
   2cfbc:	ldr	r3, [r3]
   2cfc0:	sub	r3, r2, r3
   2cfc4:	ldr	r2, [sl]
   2cfc8:	mls	r3, r2, r6, r3
   2cfcc:	add	lr, lr, r3
   2cfd0:	add	ip, ip, r3
   2cfd4:	cmp	r9, #1
   2cfd8:	ble	2cf40 <GetDataSlab+0xb95c>
   2cfdc:	ldr	r3, [sp, #76]	; 0x4c
   2cfe0:	add	r3, r3, #1
   2cfe4:	str	r3, [sp, #76]	; 0x4c
   2cfe8:	ldr	r1, [fp, #4]
   2cfec:	sdiv	r2, r3, r1
   2cff0:	mls	r3, r1, r2, r3
   2cff4:	cmp	r3, #0
   2cff8:	bne	2cf28 <GetDataSlab+0xb944>
   2cffc:	add	r4, sp, #76	; 0x4c
   2d000:	add	r7, fp, #4
   2d004:	add	r5, sp, #112	; 0x70
   2d008:	mov	r0, #1
   2d00c:	b	2cedc <GetDataSlab+0xb8f8>
   2d010:	mov	r3, #0
   2d014:	b	251fc <GetDataSlab+0x3c18>
   2d018:	cmp	r8, #12
   2d01c:	beq	2d078 <GetDataSlab+0xba94>
   2d020:	cmp	r8, #13
   2d024:	movne	r3, #1
   2d028:	bne	251fc <GetDataSlab+0x3c18>
   2d02c:	ldr	r3, [sl]
   2d030:	str	r3, [sp, #28]
   2d034:	sub	r3, r3, #1
   2d038:	str	r3, [sp, #32]
   2d03c:	ldr	r3, [sp, #192]	; 0xc0
   2d040:	ldr	r3, [r3]
   2d044:	str	r3, [sp, #112]	; 0x70
   2d048:	ldr	r3, [fp]
   2d04c:	str	r3, [sp, #16]
   2d050:	cmp	r9, #1
   2d054:	ble	2d3c8 <GetDataSlab+0xbde4>
   2d058:	str	sl, [sp, #20]
   2d05c:	add	r8, sp, #36	; 0x24
   2d060:	ldr	r5, [sp, #192]	; 0xc0
   2d064:	add	r6, sp, #112	; 0x70
   2d068:	str	r5, [sp, #12]
   2d06c:	mov	r4, #1
   2d070:	mov	lr, #0
   2d074:	b	3fcd0 <GetDataSlab+0x1e6ec>
   2d078:	ldr	r3, [sl]
   2d07c:	str	r3, [sp, #28]
   2d080:	sub	r3, r3, #1
   2d084:	str	r3, [sp, #32]
   2d088:	ldr	r3, [sp, #192]	; 0xc0
   2d08c:	ldr	r3, [r3]
   2d090:	str	r3, [sp, #112]	; 0x70
   2d094:	ldr	r3, [fp]
   2d098:	str	r3, [sp, #16]
   2d09c:	cmp	r9, #1
   2d0a0:	ble	2d0c4 <GetDataSlab+0xbae0>
   2d0a4:	str	sl, [sp, #20]
   2d0a8:	add	r8, sp, #36	; 0x24
   2d0ac:	ldr	r5, [sp, #192]	; 0xc0
   2d0b0:	add	r6, sp, #112	; 0x70
   2d0b4:	str	r5, [sp, #12]
   2d0b8:	mov	r4, #1
   2d0bc:	mov	lr, #0
   2d0c0:	b	3fdc0 <GetDataSlab+0x1e7dc>
   2d0c4:	mov	lr, #0
   2d0c8:	b	3fe58 <GetDataSlab+0x1e874>
   2d0cc:	ldr	r3, [sp, #16]
   2d0d0:	cmp	r3, #0
   2d0d4:	ble	3fe84 <GetDataSlab+0x1e8a0>
   2d0d8:	mov	r3, #0
   2d0dc:	str	r3, [sp, #12]
   2d0e0:	mov	r8, r3
   2d0e4:	b	2d1a8 <GetDataSlab+0xbbc4>
   2d0e8:	ldr	r3, [sp, #196]	; 0xc4
   2d0ec:	ldr	r2, [r3, r0, lsl #2]
   2d0f0:	cmp	r2, #0
   2d0f4:	beq	2d108 <GetDataSlab+0xbb24>
   2d0f8:	ldr	r3, [r5, #-4]
   2d0fc:	mul	r3, r3, r2
   2d100:	add	r4, r4, r3, lsl #3
   2d104:	add	lr, lr, r3
   2d108:	add	r0, r0, #1
   2d10c:	cmp	r9, r0
   2d110:	beq	2d18c <GetDataSlab+0xbba8>
   2d114:	ldr	r3, [ip]
   2d118:	add	r1, r3, #1
   2d11c:	str	r1, [ip]
   2d120:	ldr	r2, [r7, #4]!
   2d124:	sdiv	r3, r1, r2
   2d128:	mls	r3, r2, r3, r1
   2d12c:	cmp	r3, #0
   2d130:	bne	2d178 <GetDataSlab+0xbb94>
   2d134:	str	r8, [ip], #4
   2d138:	add	r5, r5, #4
   2d13c:	ldr	r2, [r5]
   2d140:	sdiv	r3, lr, r2
   2d144:	mls	r3, r2, r3, lr
   2d148:	cmp	r3, #0
   2d14c:	beq	2d0e8 <GetDataSlab+0xbb04>
   2d150:	ldr	r1, [r5, #-4]
   2d154:	ldr	sl, [sp, #196]	; 0xc4
   2d158:	ldr	sl, [sl, r0, lsl #2]
   2d15c:	str	sl, [sp, #8]
   2d160:	sub	r3, r2, r3
   2d164:	mla	r3, sl, r1, r3
   2d168:	add	r4, r4, r3, lsl #3
   2d16c:	add	lr, lr, r3
   2d170:	b	2d108 <GetDataSlab+0xbb24>
   2d174:	ldr	r0, [sp, #28]
   2d178:	add	r3, sp, #152	; 0x98
   2d17c:	add	r3, r3, r0, lsl #2
   2d180:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d184:	add	lr, lr, r3
   2d188:	add	r4, r4, r3, lsl #3
   2d18c:	ldr	r3, [sp, #12]
   2d190:	add	r3, r3, r6
   2d194:	str	r3, [sp, #12]
   2d198:	ldr	r3, [sp, #16]
   2d19c:	ldr	r2, [sp, #12]
   2d1a0:	cmp	r2, r3
   2d1a4:	bge	3fe84 <GetDataSlab+0x1e8a0>
   2d1a8:	ldr	r3, [sp, #196]	; 0xc4
   2d1ac:	ldr	r3, [r3]
   2d1b0:	cmp	r3, #0
   2d1b4:	addne	r4, r4, r3, lsl #3
   2d1b8:	addne	lr, lr, r3
   2d1bc:	ldr	r6, [fp]
   2d1c0:	cmp	r6, #0
   2d1c4:	ble	2d1f4 <GetDataSlab+0xbc10>
   2d1c8:	sub	ip, r4, #8
   2d1cc:	ldr	r3, [sp, #4]
   2d1d0:	ldr	r2, [sp, #12]
   2d1d4:	add	r0, r3, r2, lsl #3
   2d1d8:	mov	r1, #0
   2d1dc:	ldrd	r2, [ip, #8]!
   2d1e0:	strd	r2, [r0], #8
   2d1e4:	add	r1, r1, #1
   2d1e8:	ldr	r6, [fp]
   2d1ec:	cmp	r6, r1
   2d1f0:	bgt	2d1dc <GetDataSlab+0xbbf8>
   2d1f4:	ldr	r3, [sp, #192]	; 0xc0
   2d1f8:	ldr	r2, [r3]
   2d1fc:	ldr	r3, [sp, #196]	; 0xc4
   2d200:	ldr	r3, [r3]
   2d204:	sub	r3, r2, r3
   2d208:	add	lr, lr, r3
   2d20c:	add	r4, r4, r3, lsl #3
   2d210:	cmp	r9, #1
   2d214:	ble	2d18c <GetDataSlab+0xbba8>
   2d218:	ldr	r3, [sp, #76]	; 0x4c
   2d21c:	add	r3, r3, #1
   2d220:	str	r3, [sp, #76]	; 0x4c
   2d224:	ldr	r1, [fp, #4]
   2d228:	sdiv	r2, r3, r1
   2d22c:	mls	r3, r1, r2, r3
   2d230:	cmp	r3, #0
   2d234:	bne	2d174 <GetDataSlab+0xbb90>
   2d238:	add	ip, sp, #76	; 0x4c
   2d23c:	add	r7, fp, #4
   2d240:	add	r5, sp, #112	; 0x70
   2d244:	ldr	r0, [sp, #28]
   2d248:	b	2d134 <GetDataSlab+0xbb50>
   2d24c:	ldr	r3, [sp, #196]	; 0xc4
   2d250:	ldr	r2, [r3, r0, lsl #2]
   2d254:	cmp	r2, #0
   2d258:	beq	2d26c <GetDataSlab+0xbc88>
   2d25c:	ldr	r3, [r5, #-4]
   2d260:	mul	r3, r3, r2
   2d264:	add	r4, r4, r3, lsl #3
   2d268:	add	lr, lr, r3
   2d26c:	add	r0, r0, #1
   2d270:	cmp	r9, r0
   2d274:	beq	2d2fc <GetDataSlab+0xbd18>
   2d278:	ldr	r3, [ip]
   2d27c:	add	r1, r3, #1
   2d280:	str	r1, [ip]
   2d284:	ldr	r2, [r7, #4]!
   2d288:	sdiv	r3, r1, r2
   2d28c:	mls	r3, r2, r3, r1
   2d290:	cmp	r3, #0
   2d294:	bne	2d2e8 <GetDataSlab+0xbd04>
   2d298:	str	r8, [ip], #4
   2d29c:	add	r5, r5, #4
   2d2a0:	ldr	r2, [r5]
   2d2a4:	sdiv	r3, lr, r2
   2d2a8:	mls	r3, r2, r3, lr
   2d2ac:	cmp	r3, #0
   2d2b0:	beq	2d24c <GetDataSlab+0xbc68>
   2d2b4:	ldr	r1, [r5, #-4]
   2d2b8:	str	r1, [sp, #8]
   2d2bc:	ldr	r1, [sp, #196]	; 0xc4
   2d2c0:	ldr	r1, [r1, r0, lsl #2]
   2d2c4:	str	r1, [sp, #12]
   2d2c8:	sub	r3, r2, r3
   2d2cc:	mov	r2, r1
   2d2d0:	ldr	r1, [sp, #8]
   2d2d4:	mla	r3, r2, r1, r3
   2d2d8:	add	r4, r4, r3, lsl #3
   2d2dc:	add	lr, lr, r3
   2d2e0:	b	2d26c <GetDataSlab+0xbc88>
   2d2e4:	mov	r0, #1
   2d2e8:	add	r3, sp, #152	; 0x98
   2d2ec:	add	r3, r3, r0, lsl #2
   2d2f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d2f4:	add	lr, lr, r3
   2d2f8:	add	r4, r4, r3, lsl #3
   2d2fc:	ldr	r3, [sp, #20]
   2d300:	add	r3, r3, r6
   2d304:	str	r3, [sp, #20]
   2d308:	ldr	r2, [sp, #16]
   2d30c:	cmp	r3, r2
   2d310:	bge	3fe84 <GetDataSlab+0x1e8a0>
   2d314:	ldr	r3, [sp, #196]	; 0xc4
   2d318:	ldr	r3, [r3]
   2d31c:	cmp	r3, #0
   2d320:	addne	r4, r4, r3, lsl #3
   2d324:	addne	lr, lr, r3
   2d328:	ldr	r6, [fp]
   2d32c:	cmp	r6, #0
   2d330:	ble	2d368 <GetDataSlab+0xbd84>
   2d334:	ldr	r3, [sp, #4]
   2d338:	ldr	r2, [sp, #20]
   2d33c:	add	r2, r3, r2, lsl #3
   2d340:	mov	r3, #0
   2d344:	ldrd	r0, [r4]
   2d348:	strd	r0, [r2], #8
   2d34c:	ldr	r1, [sl]
   2d350:	add	r4, r4, r1, lsl #3
   2d354:	add	lr, lr, r1
   2d358:	add	r3, r3, #1
   2d35c:	ldr	r6, [fp]
   2d360:	cmp	r6, r3
   2d364:	bgt	2d344 <GetDataSlab+0xbd60>
   2d368:	ldr	r3, [sp, #192]	; 0xc0
   2d36c:	ldr	r2, [r3]
   2d370:	ldr	r3, [sp, #196]	; 0xc4
   2d374:	ldr	r3, [r3]
   2d378:	sub	r3, r2, r3
   2d37c:	ldr	r2, [sl]
   2d380:	mls	r3, r2, r6, r3
   2d384:	add	lr, lr, r3
   2d388:	add	r4, r4, r3, lsl #3
   2d38c:	cmp	r9, #1
   2d390:	ble	2d2fc <GetDataSlab+0xbd18>
   2d394:	ldr	r3, [sp, #76]	; 0x4c
   2d398:	add	r3, r3, #1
   2d39c:	str	r3, [sp, #76]	; 0x4c
   2d3a0:	ldr	r1, [fp, #4]
   2d3a4:	sdiv	r2, r3, r1
   2d3a8:	mls	r3, r1, r2, r3
   2d3ac:	cmp	r3, #0
   2d3b0:	bne	2d2e4 <GetDataSlab+0xbd00>
   2d3b4:	add	ip, sp, #76	; 0x4c
   2d3b8:	add	r7, fp, #4
   2d3bc:	add	r5, sp, #112	; 0x70
   2d3c0:	mov	r0, #1
   2d3c4:	b	2d298 <GetDataSlab+0xbcb4>
   2d3c8:	mov	lr, #0
   2d3cc:	b	3fd68 <GetDataSlab+0x1e784>
   2d3d0:	ldr	r3, [sp, #16]
   2d3d4:	cmp	r3, #0
   2d3d8:	ble	3a3d4 <GetDataSlab+0x18df0>
   2d3dc:	mov	r3, #0
   2d3e0:	str	r3, [sp, #12]
   2d3e4:	mov	r8, r3
   2d3e8:	b	2d4ac <GetDataSlab+0xbec8>
   2d3ec:	ldr	r3, [sp, #196]	; 0xc4
   2d3f0:	ldr	r2, [r3, r0, lsl #2]
   2d3f4:	cmp	r2, #0
   2d3f8:	beq	2d40c <GetDataSlab+0xbe28>
   2d3fc:	ldr	r3, [r5, #-4]
   2d400:	mul	r3, r3, r2
   2d404:	add	r4, r4, r3, lsl #3
   2d408:	add	lr, lr, r3
   2d40c:	add	r0, r0, #1
   2d410:	cmp	r9, r0
   2d414:	beq	2d490 <GetDataSlab+0xbeac>
   2d418:	ldr	r3, [ip]
   2d41c:	add	r1, r3, #1
   2d420:	str	r1, [ip]
   2d424:	ldr	r2, [r7, #4]!
   2d428:	sdiv	r3, r1, r2
   2d42c:	mls	r3, r2, r3, r1
   2d430:	cmp	r3, #0
   2d434:	bne	2d47c <GetDataSlab+0xbe98>
   2d438:	str	r8, [ip], #4
   2d43c:	add	r5, r5, #4
   2d440:	ldr	r2, [r5]
   2d444:	sdiv	r3, lr, r2
   2d448:	mls	r3, r2, r3, lr
   2d44c:	cmp	r3, #0
   2d450:	beq	2d3ec <GetDataSlab+0xbe08>
   2d454:	ldr	r1, [r5, #-4]
   2d458:	ldr	sl, [sp, #196]	; 0xc4
   2d45c:	ldr	sl, [sl, r0, lsl #2]
   2d460:	str	sl, [sp, #8]
   2d464:	sub	r3, r2, r3
   2d468:	mla	r3, sl, r1, r3
   2d46c:	add	r4, r4, r3, lsl #3
   2d470:	add	lr, lr, r3
   2d474:	b	2d40c <GetDataSlab+0xbe28>
   2d478:	ldr	r0, [sp, #28]
   2d47c:	add	r3, sp, #152	; 0x98
   2d480:	add	r3, r3, r0, lsl #2
   2d484:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d488:	add	lr, lr, r3
   2d48c:	add	r4, r4, r3, lsl #3
   2d490:	ldr	r3, [sp, #12]
   2d494:	add	r3, r3, r6
   2d498:	str	r3, [sp, #12]
   2d49c:	ldr	r3, [sp, #16]
   2d4a0:	ldr	r2, [sp, #12]
   2d4a4:	cmp	r2, r3
   2d4a8:	bge	2d550 <GetDataSlab+0xbf6c>
   2d4ac:	ldr	r3, [sp, #196]	; 0xc4
   2d4b0:	ldr	r3, [r3]
   2d4b4:	cmp	r3, #0
   2d4b8:	addne	r4, r4, r3, lsl #3
   2d4bc:	addne	lr, lr, r3
   2d4c0:	ldr	r6, [fp]
   2d4c4:	cmp	r6, #0
   2d4c8:	ble	2d4f8 <GetDataSlab+0xbf14>
   2d4cc:	sub	ip, r4, #8
   2d4d0:	ldr	r3, [sp, #4]
   2d4d4:	ldr	r2, [sp, #12]
   2d4d8:	add	r0, r3, r2, lsl #3
   2d4dc:	mov	r1, #0
   2d4e0:	ldrd	r2, [ip, #8]!
   2d4e4:	strd	r2, [r0], #8
   2d4e8:	add	r1, r1, #1
   2d4ec:	ldr	r6, [fp]
   2d4f0:	cmp	r6, r1
   2d4f4:	bgt	2d4e0 <GetDataSlab+0xbefc>
   2d4f8:	ldr	r3, [sp, #192]	; 0xc0
   2d4fc:	ldr	r2, [r3]
   2d500:	ldr	r3, [sp, #196]	; 0xc4
   2d504:	ldr	r3, [r3]
   2d508:	sub	r3, r2, r3
   2d50c:	add	lr, lr, r3
   2d510:	add	r4, r4, r3, lsl #3
   2d514:	cmp	r9, #1
   2d518:	ble	2d490 <GetDataSlab+0xbeac>
   2d51c:	ldr	r3, [sp, #76]	; 0x4c
   2d520:	add	r3, r3, #1
   2d524:	str	r3, [sp, #76]	; 0x4c
   2d528:	ldr	r1, [fp, #4]
   2d52c:	sdiv	r2, r3, r1
   2d530:	mls	r3, r1, r2, r3
   2d534:	cmp	r3, #0
   2d538:	bne	2d478 <GetDataSlab+0xbe94>
   2d53c:	add	ip, sp, #76	; 0x4c
   2d540:	add	r7, fp, #4
   2d544:	add	r5, sp, #112	; 0x70
   2d548:	ldr	r0, [sp, #28]
   2d54c:	b	2d438 <GetDataSlab+0xbe54>
   2d550:	mov	r3, #0
   2d554:	b	251fc <GetDataSlab+0x3c18>
   2d558:	ldr	r3, [sp, #196]	; 0xc4
   2d55c:	ldr	r2, [r3, r0, lsl #2]
   2d560:	cmp	r2, #0
   2d564:	beq	2d578 <GetDataSlab+0xbf94>
   2d568:	ldr	r3, [r5, #-4]
   2d56c:	mul	r3, r3, r2
   2d570:	add	r4, r4, r3, lsl #3
   2d574:	add	lr, lr, r3
   2d578:	add	r0, r0, #1
   2d57c:	cmp	r9, r0
   2d580:	beq	2d608 <GetDataSlab+0xc024>
   2d584:	ldr	r3, [ip]
   2d588:	add	r1, r3, #1
   2d58c:	str	r1, [ip]
   2d590:	ldr	r2, [r7, #4]!
   2d594:	sdiv	r3, r1, r2
   2d598:	mls	r3, r2, r3, r1
   2d59c:	cmp	r3, #0
   2d5a0:	bne	2d5f4 <GetDataSlab+0xc010>
   2d5a4:	str	r8, [ip], #4
   2d5a8:	add	r5, r5, #4
   2d5ac:	ldr	r2, [r5]
   2d5b0:	sdiv	r3, lr, r2
   2d5b4:	mls	r3, r2, r3, lr
   2d5b8:	cmp	r3, #0
   2d5bc:	beq	2d558 <GetDataSlab+0xbf74>
   2d5c0:	ldr	r1, [r5, #-4]
   2d5c4:	str	r1, [sp, #8]
   2d5c8:	ldr	r1, [sp, #196]	; 0xc4
   2d5cc:	ldr	r1, [r1, r0, lsl #2]
   2d5d0:	str	r1, [sp, #12]
   2d5d4:	sub	r3, r2, r3
   2d5d8:	mov	r2, r1
   2d5dc:	ldr	r1, [sp, #8]
   2d5e0:	mla	r3, r2, r1, r3
   2d5e4:	add	r4, r4, r3, lsl #3
   2d5e8:	add	lr, lr, r3
   2d5ec:	b	2d578 <GetDataSlab+0xbf94>
   2d5f0:	mov	r0, #1
   2d5f4:	add	r3, sp, #152	; 0x98
   2d5f8:	add	r3, r3, r0, lsl #2
   2d5fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d600:	add	lr, lr, r3
   2d604:	add	r4, r4, r3, lsl #3
   2d608:	ldr	r3, [sp, #20]
   2d60c:	add	r3, r3, r6
   2d610:	str	r3, [sp, #20]
   2d614:	ldr	r2, [sp, #16]
   2d618:	cmp	r3, r2
   2d61c:	bge	2d6d4 <GetDataSlab+0xc0f0>
   2d620:	ldr	r3, [sp, #196]	; 0xc4
   2d624:	ldr	r3, [r3]
   2d628:	cmp	r3, #0
   2d62c:	addne	r4, r4, r3, lsl #3
   2d630:	addne	lr, lr, r3
   2d634:	ldr	r6, [fp]
   2d638:	cmp	r6, #0
   2d63c:	ble	2d674 <GetDataSlab+0xc090>
   2d640:	ldr	r3, [sp, #4]
   2d644:	ldr	r2, [sp, #20]
   2d648:	add	r2, r3, r2, lsl #3
   2d64c:	mov	r3, #0
   2d650:	ldrd	r0, [r4]
   2d654:	strd	r0, [r2], #8
   2d658:	ldr	r1, [sl]
   2d65c:	add	r4, r4, r1, lsl #3
   2d660:	add	lr, lr, r1
   2d664:	add	r3, r3, #1
   2d668:	ldr	r6, [fp]
   2d66c:	cmp	r6, r3
   2d670:	bgt	2d650 <GetDataSlab+0xc06c>
   2d674:	ldr	r3, [sp, #192]	; 0xc0
   2d678:	ldr	r2, [r3]
   2d67c:	ldr	r3, [sp, #196]	; 0xc4
   2d680:	ldr	r3, [r3]
   2d684:	sub	r3, r2, r3
   2d688:	ldr	r2, [sl]
   2d68c:	mls	r3, r2, r6, r3
   2d690:	add	lr, lr, r3
   2d694:	add	r4, r4, r3, lsl #3
   2d698:	cmp	r9, #1
   2d69c:	ble	2d608 <GetDataSlab+0xc024>
   2d6a0:	ldr	r3, [sp, #76]	; 0x4c
   2d6a4:	add	r3, r3, #1
   2d6a8:	str	r3, [sp, #76]	; 0x4c
   2d6ac:	ldr	r1, [fp, #4]
   2d6b0:	sdiv	r2, r3, r1
   2d6b4:	mls	r3, r1, r2, r3
   2d6b8:	cmp	r3, #0
   2d6bc:	bne	2d5f0 <GetDataSlab+0xc00c>
   2d6c0:	add	ip, sp, #76	; 0x4c
   2d6c4:	add	r7, fp, #4
   2d6c8:	add	r5, sp, #112	; 0x70
   2d6cc:	mov	r0, #1
   2d6d0:	b	2d5a4 <GetDataSlab+0xbfc0>
   2d6d4:	mov	r3, #0
   2d6d8:	b	251fc <GetDataSlab+0x3c18>
   2d6dc:	sub	r3, r8, #1
   2d6e0:	cmp	r3, #8
   2d6e4:	addls	pc, pc, r3, lsl #2
   2d6e8:	b	2f204 <GetDataSlab+0xdc20>
   2d6ec:	b	2eb48 <GetDataSlab+0xd564>
   2d6f0:	b	2eea4 <GetDataSlab+0xd8c0>
   2d6f4:	b	2e490 <GetDataSlab+0xceac>
   2d6f8:	b	2e7ec <GetDataSlab+0xd208>
   2d6fc:	b	2ddd8 <GetDataSlab+0xc7f4>
   2d700:	b	2e134 <GetDataSlab+0xcb50>
   2d704:	b	2da74 <GetDataSlab+0xc490>
   2d708:	b	2f204 <GetDataSlab+0xdc20>
   2d70c:	b	2d710 <GetDataSlab+0xc12c>
   2d710:	ldr	r3, [sl]
   2d714:	str	r3, [sp, #28]
   2d718:	sub	r3, r3, #1
   2d71c:	str	r3, [sp, #32]
   2d720:	ldr	r3, [sp, #192]	; 0xc0
   2d724:	ldr	r3, [r3]
   2d728:	str	r3, [sp, #112]	; 0x70
   2d72c:	ldr	r3, [fp]
   2d730:	str	r3, [sp, #16]
   2d734:	cmp	r9, #1
   2d738:	ble	2d75c <GetDataSlab+0xc178>
   2d73c:	str	sl, [sp, #20]
   2d740:	add	r8, sp, #36	; 0x24
   2d744:	ldr	r5, [sp, #192]	; 0xc0
   2d748:	add	r6, sp, #112	; 0x70
   2d74c:	str	r5, [sp, #12]
   2d750:	mov	r4, #1
   2d754:	mov	lr, #0
   2d758:	b	3e928 <GetDataSlab+0x1d344>
   2d75c:	mov	lr, #0
   2d760:	b	3e9c0 <GetDataSlab+0x1d3dc>
   2d764:	ldr	r3, [sp, #16]
   2d768:	cmp	r3, #0
   2d76c:	ble	3a3dc <GetDataSlab+0x18df8>
   2d770:	mov	r3, #0
   2d774:	str	r3, [sp, #12]
   2d778:	mov	r8, r3
   2d77c:	b	2d83c <GetDataSlab+0xc258>
   2d780:	ldr	r3, [sp, #196]	; 0xc4
   2d784:	ldr	r3, [r3, r0, lsl #2]
   2d788:	cmp	r3, #0
   2d78c:	beq	2d7a0 <GetDataSlab+0xc1bc>
   2d790:	ldr	r2, [r5, #-8]
   2d794:	mul	r3, r2, r3
   2d798:	add	ip, ip, r3, lsl #3
   2d79c:	add	lr, lr, r3
   2d7a0:	add	r0, r0, #1
   2d7a4:	cmp	r9, r0
   2d7a8:	beq	2d820 <GetDataSlab+0xc23c>
   2d7ac:	ldr	r3, [r4]
   2d7b0:	add	r1, r3, #1
   2d7b4:	str	r1, [r4]
   2d7b8:	ldr	r2, [r7, #4]!
   2d7bc:	sdiv	r3, r1, r2
   2d7c0:	mls	r3, r2, r3, r1
   2d7c4:	cmp	r3, #0
   2d7c8:	bne	2d80c <GetDataSlab+0xc228>
   2d7cc:	str	r8, [r4], #4
   2d7d0:	ldr	r2, [r5], #4
   2d7d4:	sdiv	r3, lr, r2
   2d7d8:	mls	r3, r2, r3, lr
   2d7dc:	cmp	r3, #0
   2d7e0:	beq	2d780 <GetDataSlab+0xc19c>
   2d7e4:	ldr	r1, [r5, #-8]
   2d7e8:	ldr	sl, [sp, #196]	; 0xc4
   2d7ec:	ldr	sl, [sl, r0, lsl #2]
   2d7f0:	str	sl, [sp, #8]
   2d7f4:	sub	r3, r2, r3
   2d7f8:	mla	r3, sl, r1, r3
   2d7fc:	add	ip, ip, r3, lsl #3
   2d800:	add	lr, lr, r3
   2d804:	b	2d7a0 <GetDataSlab+0xc1bc>
   2d808:	ldr	r0, [sp, #28]
   2d80c:	add	r3, sp, #152	; 0x98
   2d810:	add	r3, r3, r0, lsl #2
   2d814:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d818:	add	lr, lr, r3
   2d81c:	add	ip, ip, r3, lsl #3
   2d820:	ldr	r3, [sp, #12]
   2d824:	add	r3, r3, r6
   2d828:	str	r3, [sp, #12]
   2d82c:	ldr	r3, [sp, #16]
   2d830:	ldr	r2, [sp, #12]
   2d834:	cmp	r2, r3
   2d838:	bge	2d8e4 <GetDataSlab+0xc300>
   2d83c:	ldr	r3, [sp, #196]	; 0xc4
   2d840:	ldr	r3, [r3]
   2d844:	cmp	r3, #0
   2d848:	addne	ip, ip, r3, lsl #3
   2d84c:	addne	lr, lr, r3
   2d850:	ldr	r6, [fp]
   2d854:	cmp	r6, #0
   2d858:	ble	2d88c <GetDataSlab+0xc2a8>
   2d85c:	mov	r1, ip
   2d860:	ldr	r3, [sp, #4]
   2d864:	ldr	r2, [sp, #12]
   2d868:	add	r2, r3, r2, lsl #2
   2d86c:	mov	r3, #0
   2d870:	vldmia	r1!, {d7}
   2d874:	vcvt.s32.f64	s15, d7
   2d878:	vstmia	r2!, {s15}
   2d87c:	add	r3, r3, #1
   2d880:	ldr	r6, [fp]
   2d884:	cmp	r6, r3
   2d888:	bgt	2d870 <GetDataSlab+0xc28c>
   2d88c:	ldr	r3, [sp, #192]	; 0xc0
   2d890:	ldr	r2, [r3]
   2d894:	ldr	r3, [sp, #196]	; 0xc4
   2d898:	ldr	r3, [r3]
   2d89c:	sub	r3, r2, r3
   2d8a0:	add	lr, lr, r3
   2d8a4:	add	ip, ip, r3, lsl #3
   2d8a8:	cmp	r9, #1
   2d8ac:	ble	2d820 <GetDataSlab+0xc23c>
   2d8b0:	ldr	r3, [sp, #76]	; 0x4c
   2d8b4:	add	r3, r3, #1
   2d8b8:	str	r3, [sp, #76]	; 0x4c
   2d8bc:	ldr	r1, [fp, #4]
   2d8c0:	sdiv	r2, r3, r1
   2d8c4:	mls	r3, r1, r2, r3
   2d8c8:	cmp	r3, #0
   2d8cc:	bne	2d808 <GetDataSlab+0xc224>
   2d8d0:	add	r4, sp, #76	; 0x4c
   2d8d4:	add	r7, fp, #4
   2d8d8:	add	r5, sp, #116	; 0x74
   2d8dc:	ldr	r0, [sp, #28]
   2d8e0:	b	2d7cc <GetDataSlab+0xc1e8>
   2d8e4:	mov	r3, #0
   2d8e8:	b	251fc <GetDataSlab+0x3c18>
   2d8ec:	ldr	r3, [sp, #196]	; 0xc4
   2d8f0:	ldr	r2, [r3, r0, lsl #2]
   2d8f4:	cmp	r2, #0
   2d8f8:	beq	2d90c <GetDataSlab+0xc328>
   2d8fc:	ldr	r3, [r5, #-4]
   2d900:	mul	r3, r3, r2
   2d904:	add	ip, ip, r3, lsl #3
   2d908:	add	lr, lr, r3
   2d90c:	add	r0, r0, #1
   2d910:	cmp	r9, r0
   2d914:	beq	2d99c <GetDataSlab+0xc3b8>
   2d918:	ldr	r3, [r4]
   2d91c:	add	r1, r3, #1
   2d920:	str	r1, [r4]
   2d924:	ldr	r2, [r7, #4]!
   2d928:	sdiv	r3, r1, r2
   2d92c:	mls	r3, r2, r3, r1
   2d930:	cmp	r3, #0
   2d934:	bne	2d988 <GetDataSlab+0xc3a4>
   2d938:	str	r8, [r4], #4
   2d93c:	add	r5, r5, #4
   2d940:	ldr	r2, [r5]
   2d944:	sdiv	r3, lr, r2
   2d948:	mls	r3, r2, r3, lr
   2d94c:	cmp	r3, #0
   2d950:	beq	2d8ec <GetDataSlab+0xc308>
   2d954:	ldr	r1, [r5, #-4]
   2d958:	str	r1, [sp, #8]
   2d95c:	ldr	r1, [sp, #196]	; 0xc4
   2d960:	ldr	r1, [r1, r0, lsl #2]
   2d964:	str	r1, [sp, #12]
   2d968:	sub	r3, r2, r3
   2d96c:	mov	r2, r1
   2d970:	ldr	r1, [sp, #8]
   2d974:	mla	r3, r2, r1, r3
   2d978:	add	ip, ip, r3, lsl #3
   2d97c:	add	lr, lr, r3
   2d980:	b	2d90c <GetDataSlab+0xc328>
   2d984:	mov	r0, #1
   2d988:	add	r3, sp, #152	; 0x98
   2d98c:	add	r3, r3, r0, lsl #2
   2d990:	ldr	r3, [r3, #-120]	; 0xffffff88
   2d994:	add	lr, lr, r3
   2d998:	add	ip, ip, r3, lsl #3
   2d99c:	ldr	r3, [sp, #20]
   2d9a0:	add	r3, r3, r6
   2d9a4:	str	r3, [sp, #20]
   2d9a8:	ldr	r2, [sp, #16]
   2d9ac:	cmp	r3, r2
   2d9b0:	bge	2da6c <GetDataSlab+0xc488>
   2d9b4:	ldr	r3, [sp, #196]	; 0xc4
   2d9b8:	ldr	r3, [r3]
   2d9bc:	cmp	r3, #0
   2d9c0:	addne	ip, ip, r3, lsl #3
   2d9c4:	addne	lr, lr, r3
   2d9c8:	ldr	r6, [fp]
   2d9cc:	cmp	r6, #0
   2d9d0:	ble	2da0c <GetDataSlab+0xc428>
   2d9d4:	ldr	r3, [sp, #4]
   2d9d8:	ldr	r2, [sp, #20]
   2d9dc:	add	r2, r3, r2, lsl #2
   2d9e0:	mov	r3, #0
   2d9e4:	vldr	d7, [ip]
   2d9e8:	vcvt.s32.f64	s15, d7
   2d9ec:	vstmia	r2!, {s15}
   2d9f0:	ldr	r1, [sl]
   2d9f4:	add	ip, ip, r1, lsl #3
   2d9f8:	add	lr, lr, r1
   2d9fc:	add	r3, r3, #1
   2da00:	ldr	r6, [fp]
   2da04:	cmp	r6, r3
   2da08:	bgt	2d9e4 <GetDataSlab+0xc400>
   2da0c:	ldr	r3, [sp, #192]	; 0xc0
   2da10:	ldr	r2, [r3]
   2da14:	ldr	r3, [sp, #196]	; 0xc4
   2da18:	ldr	r3, [r3]
   2da1c:	sub	r3, r2, r3
   2da20:	ldr	r2, [sl]
   2da24:	mls	r3, r2, r6, r3
   2da28:	add	lr, lr, r3
   2da2c:	add	ip, ip, r3, lsl #3
   2da30:	cmp	r9, #1
   2da34:	ble	2d99c <GetDataSlab+0xc3b8>
   2da38:	ldr	r3, [sp, #76]	; 0x4c
   2da3c:	add	r3, r3, #1
   2da40:	str	r3, [sp, #76]	; 0x4c
   2da44:	ldr	r1, [fp, #4]
   2da48:	sdiv	r2, r3, r1
   2da4c:	mls	r3, r1, r2, r3
   2da50:	cmp	r3, #0
   2da54:	bne	2d984 <GetDataSlab+0xc3a0>
   2da58:	add	r4, sp, #76	; 0x4c
   2da5c:	add	r7, fp, #4
   2da60:	add	r5, sp, #112	; 0x70
   2da64:	mov	r0, #1
   2da68:	b	2d938 <GetDataSlab+0xc354>
   2da6c:	mov	r3, #0
   2da70:	b	251fc <GetDataSlab+0x3c18>
   2da74:	ldr	r3, [sl]
   2da78:	str	r3, [sp, #28]
   2da7c:	sub	r3, r3, #1
   2da80:	str	r3, [sp, #32]
   2da84:	ldr	r3, [sp, #192]	; 0xc0
   2da88:	ldr	r3, [r3]
   2da8c:	str	r3, [sp, #112]	; 0x70
   2da90:	ldr	r3, [fp]
   2da94:	str	r3, [sp, #16]
   2da98:	cmp	r9, #1
   2da9c:	ble	2dac0 <GetDataSlab+0xc4dc>
   2daa0:	str	sl, [sp, #20]
   2daa4:	add	r8, sp, #36	; 0x24
   2daa8:	ldr	r5, [sp, #192]	; 0xc0
   2daac:	add	r6, sp, #112	; 0x70
   2dab0:	str	r5, [sp, #12]
   2dab4:	mov	r4, #1
   2dab8:	mov	lr, #0
   2dabc:	b	3e838 <GetDataSlab+0x1d254>
   2dac0:	mov	lr, #0
   2dac4:	b	3e8d0 <GetDataSlab+0x1d2ec>
   2dac8:	ldr	r3, [sp, #16]
   2dacc:	cmp	r3, #0
   2dad0:	ble	3a3e4 <GetDataSlab+0x18e00>
   2dad4:	mov	r3, #0
   2dad8:	str	r3, [sp, #12]
   2dadc:	mov	r8, r3
   2dae0:	b	2dba0 <GetDataSlab+0xc5bc>
   2dae4:	ldr	r3, [sp, #196]	; 0xc4
   2dae8:	ldr	r3, [r3, r0, lsl #2]
   2daec:	cmp	r3, #0
   2daf0:	beq	2db04 <GetDataSlab+0xc520>
   2daf4:	ldr	r2, [r5, #-8]
   2daf8:	mul	r3, r2, r3
   2dafc:	add	ip, ip, r3, lsl #2
   2db00:	add	lr, lr, r3
   2db04:	add	r0, r0, #1
   2db08:	cmp	r9, r0
   2db0c:	beq	2db84 <GetDataSlab+0xc5a0>
   2db10:	ldr	r3, [r4]
   2db14:	add	r1, r3, #1
   2db18:	str	r1, [r4]
   2db1c:	ldr	r2, [r7, #4]!
   2db20:	sdiv	r3, r1, r2
   2db24:	mls	r3, r2, r3, r1
   2db28:	cmp	r3, #0
   2db2c:	bne	2db70 <GetDataSlab+0xc58c>
   2db30:	str	r8, [r4], #4
   2db34:	ldr	r2, [r5], #4
   2db38:	sdiv	r3, lr, r2
   2db3c:	mls	r3, r2, r3, lr
   2db40:	cmp	r3, #0
   2db44:	beq	2dae4 <GetDataSlab+0xc500>
   2db48:	ldr	r1, [r5, #-8]
   2db4c:	ldr	sl, [sp, #196]	; 0xc4
   2db50:	ldr	sl, [sl, r0, lsl #2]
   2db54:	str	sl, [sp, #8]
   2db58:	sub	r3, r2, r3
   2db5c:	mla	r3, sl, r1, r3
   2db60:	add	ip, ip, r3, lsl #2
   2db64:	add	lr, lr, r3
   2db68:	b	2db04 <GetDataSlab+0xc520>
   2db6c:	ldr	r0, [sp, #28]
   2db70:	add	r3, sp, #152	; 0x98
   2db74:	add	r3, r3, r0, lsl #2
   2db78:	ldr	r3, [r3, #-120]	; 0xffffff88
   2db7c:	add	lr, lr, r3
   2db80:	add	ip, ip, r3, lsl #2
   2db84:	ldr	r3, [sp, #12]
   2db88:	add	r3, r3, r6
   2db8c:	str	r3, [sp, #12]
   2db90:	ldr	r3, [sp, #16]
   2db94:	ldr	r2, [sp, #12]
   2db98:	cmp	r2, r3
   2db9c:	bge	2dc48 <GetDataSlab+0xc664>
   2dba0:	ldr	r3, [sp, #196]	; 0xc4
   2dba4:	ldr	r3, [r3]
   2dba8:	cmp	r3, #0
   2dbac:	addne	ip, ip, r3, lsl #2
   2dbb0:	addne	lr, lr, r3
   2dbb4:	ldr	r6, [fp]
   2dbb8:	cmp	r6, #0
   2dbbc:	ble	2dbf0 <GetDataSlab+0xc60c>
   2dbc0:	mov	r1, ip
   2dbc4:	ldr	r3, [sp, #4]
   2dbc8:	ldr	r2, [sp, #12]
   2dbcc:	add	r2, r3, r2, lsl #2
   2dbd0:	mov	r3, #0
   2dbd4:	vldmia	r1!, {s15}
   2dbd8:	vcvt.s32.f32	s15, s15
   2dbdc:	vstmia	r2!, {s15}
   2dbe0:	add	r3, r3, #1
   2dbe4:	ldr	r6, [fp]
   2dbe8:	cmp	r6, r3
   2dbec:	bgt	2dbd4 <GetDataSlab+0xc5f0>
   2dbf0:	ldr	r3, [sp, #192]	; 0xc0
   2dbf4:	ldr	r2, [r3]
   2dbf8:	ldr	r3, [sp, #196]	; 0xc4
   2dbfc:	ldr	r3, [r3]
   2dc00:	sub	r3, r2, r3
   2dc04:	add	lr, lr, r3
   2dc08:	add	ip, ip, r3, lsl #2
   2dc0c:	cmp	r9, #1
   2dc10:	ble	2db84 <GetDataSlab+0xc5a0>
   2dc14:	ldr	r3, [sp, #76]	; 0x4c
   2dc18:	add	r3, r3, #1
   2dc1c:	str	r3, [sp, #76]	; 0x4c
   2dc20:	ldr	r1, [fp, #4]
   2dc24:	sdiv	r2, r3, r1
   2dc28:	mls	r3, r1, r2, r3
   2dc2c:	cmp	r3, #0
   2dc30:	bne	2db6c <GetDataSlab+0xc588>
   2dc34:	add	r4, sp, #76	; 0x4c
   2dc38:	add	r7, fp, #4
   2dc3c:	add	r5, sp, #116	; 0x74
   2dc40:	ldr	r0, [sp, #28]
   2dc44:	b	2db30 <GetDataSlab+0xc54c>
   2dc48:	mov	r3, #0
   2dc4c:	b	251fc <GetDataSlab+0x3c18>
   2dc50:	ldr	r3, [sp, #196]	; 0xc4
   2dc54:	ldr	r2, [r3, r0, lsl #2]
   2dc58:	cmp	r2, #0
   2dc5c:	beq	2dc70 <GetDataSlab+0xc68c>
   2dc60:	ldr	r3, [r5, #-4]
   2dc64:	mul	r3, r3, r2
   2dc68:	add	ip, ip, r3, lsl #2
   2dc6c:	add	lr, lr, r3
   2dc70:	add	r0, r0, #1
   2dc74:	cmp	r9, r0
   2dc78:	beq	2dd00 <GetDataSlab+0xc71c>
   2dc7c:	ldr	r3, [r4]
   2dc80:	add	r1, r3, #1
   2dc84:	str	r1, [r4]
   2dc88:	ldr	r2, [r7, #4]!
   2dc8c:	sdiv	r3, r1, r2
   2dc90:	mls	r3, r2, r3, r1
   2dc94:	cmp	r3, #0
   2dc98:	bne	2dcec <GetDataSlab+0xc708>
   2dc9c:	str	r8, [r4], #4
   2dca0:	add	r5, r5, #4
   2dca4:	ldr	r2, [r5]
   2dca8:	sdiv	r3, lr, r2
   2dcac:	mls	r3, r2, r3, lr
   2dcb0:	cmp	r3, #0
   2dcb4:	beq	2dc50 <GetDataSlab+0xc66c>
   2dcb8:	ldr	r1, [r5, #-4]
   2dcbc:	str	r1, [sp, #8]
   2dcc0:	ldr	r1, [sp, #196]	; 0xc4
   2dcc4:	ldr	r1, [r1, r0, lsl #2]
   2dcc8:	str	r1, [sp, #12]
   2dccc:	sub	r3, r2, r3
   2dcd0:	mov	r2, r1
   2dcd4:	ldr	r1, [sp, #8]
   2dcd8:	mla	r3, r2, r1, r3
   2dcdc:	add	ip, ip, r3, lsl #2
   2dce0:	add	lr, lr, r3
   2dce4:	b	2dc70 <GetDataSlab+0xc68c>
   2dce8:	mov	r0, #1
   2dcec:	add	r3, sp, #152	; 0x98
   2dcf0:	add	r3, r3, r0, lsl #2
   2dcf4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dcf8:	add	lr, lr, r3
   2dcfc:	add	ip, ip, r3, lsl #2
   2dd00:	ldr	r3, [sp, #20]
   2dd04:	add	r3, r3, r6
   2dd08:	str	r3, [sp, #20]
   2dd0c:	ldr	r2, [sp, #16]
   2dd10:	cmp	r3, r2
   2dd14:	bge	2ddd0 <GetDataSlab+0xc7ec>
   2dd18:	ldr	r3, [sp, #196]	; 0xc4
   2dd1c:	ldr	r3, [r3]
   2dd20:	cmp	r3, #0
   2dd24:	addne	ip, ip, r3, lsl #2
   2dd28:	addne	lr, lr, r3
   2dd2c:	ldr	r6, [fp]
   2dd30:	cmp	r6, #0
   2dd34:	ble	2dd70 <GetDataSlab+0xc78c>
   2dd38:	ldr	r3, [sp, #4]
   2dd3c:	ldr	r2, [sp, #20]
   2dd40:	add	r2, r3, r2, lsl #2
   2dd44:	mov	r3, #0
   2dd48:	vldr	s15, [ip]
   2dd4c:	vcvt.s32.f32	s15, s15
   2dd50:	vstmia	r2!, {s15}
   2dd54:	ldr	r1, [sl]
   2dd58:	add	ip, ip, r1, lsl #2
   2dd5c:	add	lr, lr, r1
   2dd60:	add	r3, r3, #1
   2dd64:	ldr	r6, [fp]
   2dd68:	cmp	r6, r3
   2dd6c:	bgt	2dd48 <GetDataSlab+0xc764>
   2dd70:	ldr	r3, [sp, #192]	; 0xc0
   2dd74:	ldr	r2, [r3]
   2dd78:	ldr	r3, [sp, #196]	; 0xc4
   2dd7c:	ldr	r3, [r3]
   2dd80:	sub	r3, r2, r3
   2dd84:	ldr	r2, [sl]
   2dd88:	mls	r3, r2, r6, r3
   2dd8c:	add	lr, lr, r3
   2dd90:	add	ip, ip, r3, lsl #2
   2dd94:	cmp	r9, #1
   2dd98:	ble	2dd00 <GetDataSlab+0xc71c>
   2dd9c:	ldr	r3, [sp, #76]	; 0x4c
   2dda0:	add	r3, r3, #1
   2dda4:	str	r3, [sp, #76]	; 0x4c
   2dda8:	ldr	r1, [fp, #4]
   2ddac:	sdiv	r2, r3, r1
   2ddb0:	mls	r3, r1, r2, r3
   2ddb4:	cmp	r3, #0
   2ddb8:	bne	2dce8 <GetDataSlab+0xc704>
   2ddbc:	add	r4, sp, #76	; 0x4c
   2ddc0:	add	r7, fp, #4
   2ddc4:	add	r5, sp, #112	; 0x70
   2ddc8:	mov	r0, #1
   2ddcc:	b	2dc9c <GetDataSlab+0xc6b8>
   2ddd0:	mov	r3, #0
   2ddd4:	b	251fc <GetDataSlab+0x3c18>
   2ddd8:	ldr	r3, [sl]
   2dddc:	str	r3, [sp, #28]
   2dde0:	sub	r3, r3, #1
   2dde4:	str	r3, [sp, #32]
   2dde8:	ldr	r3, [sp, #192]	; 0xc0
   2ddec:	ldr	r3, [r3]
   2ddf0:	str	r3, [sp, #112]	; 0x70
   2ddf4:	ldr	r3, [fp]
   2ddf8:	str	r3, [sp, #16]
   2ddfc:	cmp	r9, #1
   2de00:	ble	2de24 <GetDataSlab+0xc840>
   2de04:	str	sl, [sp, #20]
   2de08:	add	r8, sp, #36	; 0x24
   2de0c:	ldr	r5, [sp, #192]	; 0xc0
   2de10:	add	r6, sp, #112	; 0x70
   2de14:	str	r5, [sp, #12]
   2de18:	mov	r4, #1
   2de1c:	mov	lr, #0
   2de20:	b	3e658 <GetDataSlab+0x1d074>
   2de24:	mov	lr, #0
   2de28:	b	3e6f0 <GetDataSlab+0x1d10c>
   2de2c:	ldr	r3, [sp, #16]
   2de30:	cmp	r3, #0
   2de34:	ble	3a3ec <GetDataSlab+0x18e08>
   2de38:	mov	r3, #0
   2de3c:	str	r3, [sp, #12]
   2de40:	mov	r8, r3
   2de44:	b	2df04 <GetDataSlab+0xc920>
   2de48:	ldr	r3, [sp, #196]	; 0xc4
   2de4c:	ldr	r3, [r3, r0, lsl #2]
   2de50:	cmp	r3, #0
   2de54:	beq	2de68 <GetDataSlab+0xc884>
   2de58:	ldr	r2, [r5, #-8]
   2de5c:	mul	r3, r2, r3
   2de60:	add	ip, ip, r3, lsl #2
   2de64:	add	lr, lr, r3
   2de68:	add	r0, r0, #1
   2de6c:	cmp	r9, r0
   2de70:	beq	2dee8 <GetDataSlab+0xc904>
   2de74:	ldr	r3, [r4]
   2de78:	add	r1, r3, #1
   2de7c:	str	r1, [r4]
   2de80:	ldr	r2, [r7, #4]!
   2de84:	sdiv	r3, r1, r2
   2de88:	mls	r3, r2, r3, r1
   2de8c:	cmp	r3, #0
   2de90:	bne	2ded4 <GetDataSlab+0xc8f0>
   2de94:	str	r8, [r4], #4
   2de98:	ldr	r2, [r5], #4
   2de9c:	sdiv	r3, lr, r2
   2dea0:	mls	r3, r2, r3, lr
   2dea4:	cmp	r3, #0
   2dea8:	beq	2de48 <GetDataSlab+0xc864>
   2deac:	ldr	r1, [r5, #-8]
   2deb0:	ldr	sl, [sp, #196]	; 0xc4
   2deb4:	ldr	sl, [sl, r0, lsl #2]
   2deb8:	str	sl, [sp, #8]
   2debc:	sub	r3, r2, r3
   2dec0:	mla	r3, sl, r1, r3
   2dec4:	add	ip, ip, r3, lsl #2
   2dec8:	add	lr, lr, r3
   2decc:	b	2de68 <GetDataSlab+0xc884>
   2ded0:	ldr	r0, [sp, #28]
   2ded4:	add	r3, sp, #152	; 0x98
   2ded8:	add	r3, r3, r0, lsl #2
   2dedc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2dee0:	add	lr, lr, r3
   2dee4:	add	ip, ip, r3, lsl #2
   2dee8:	ldr	r3, [sp, #12]
   2deec:	add	r3, r3, r6
   2def0:	str	r3, [sp, #12]
   2def4:	ldr	r3, [sp, #16]
   2def8:	ldr	r2, [sp, #12]
   2defc:	cmp	r2, r3
   2df00:	bge	2dfa8 <GetDataSlab+0xc9c4>
   2df04:	ldr	r3, [sp, #196]	; 0xc4
   2df08:	ldr	r3, [r3]
   2df0c:	cmp	r3, #0
   2df10:	addne	ip, ip, r3, lsl #2
   2df14:	addne	lr, lr, r3
   2df18:	ldr	r6, [fp]
   2df1c:	cmp	r6, #0
   2df20:	ble	2df50 <GetDataSlab+0xc96c>
   2df24:	sub	r0, ip, #4
   2df28:	ldr	r3, [sp, #4]
   2df2c:	ldr	r2, [sp, #12]
   2df30:	add	r1, r3, r2, lsl #2
   2df34:	mov	r2, #0
   2df38:	ldr	r3, [r0, #4]!
   2df3c:	str	r3, [r1], #4
   2df40:	add	r2, r2, #1
   2df44:	ldr	r6, [fp]
   2df48:	cmp	r6, r2
   2df4c:	bgt	2df38 <GetDataSlab+0xc954>
   2df50:	ldr	r3, [sp, #192]	; 0xc0
   2df54:	ldr	r2, [r3]
   2df58:	ldr	r3, [sp, #196]	; 0xc4
   2df5c:	ldr	r3, [r3]
   2df60:	sub	r3, r2, r3
   2df64:	add	lr, lr, r3
   2df68:	add	ip, ip, r3, lsl #2
   2df6c:	cmp	r9, #1
   2df70:	ble	2dee8 <GetDataSlab+0xc904>
   2df74:	ldr	r3, [sp, #76]	; 0x4c
   2df78:	add	r3, r3, #1
   2df7c:	str	r3, [sp, #76]	; 0x4c
   2df80:	ldr	r1, [fp, #4]
   2df84:	sdiv	r2, r3, r1
   2df88:	mls	r3, r1, r2, r3
   2df8c:	cmp	r3, #0
   2df90:	bne	2ded0 <GetDataSlab+0xc8ec>
   2df94:	add	r4, sp, #76	; 0x4c
   2df98:	add	r7, fp, #4
   2df9c:	add	r5, sp, #116	; 0x74
   2dfa0:	ldr	r0, [sp, #28]
   2dfa4:	b	2de94 <GetDataSlab+0xc8b0>
   2dfa8:	mov	r3, #0
   2dfac:	b	251fc <GetDataSlab+0x3c18>
   2dfb0:	ldr	r3, [sp, #196]	; 0xc4
   2dfb4:	ldr	r2, [r3, r0, lsl #2]
   2dfb8:	cmp	r2, #0
   2dfbc:	beq	2dfd0 <GetDataSlab+0xc9ec>
   2dfc0:	ldr	r3, [r5, #-4]
   2dfc4:	mul	r3, r3, r2
   2dfc8:	add	ip, ip, r3, lsl #2
   2dfcc:	add	lr, lr, r3
   2dfd0:	add	r0, r0, #1
   2dfd4:	cmp	r9, r0
   2dfd8:	beq	2e060 <GetDataSlab+0xca7c>
   2dfdc:	ldr	r3, [r4]
   2dfe0:	add	r1, r3, #1
   2dfe4:	str	r1, [r4]
   2dfe8:	ldr	r2, [r7, #4]!
   2dfec:	sdiv	r3, r1, r2
   2dff0:	mls	r3, r2, r3, r1
   2dff4:	cmp	r3, #0
   2dff8:	bne	2e04c <GetDataSlab+0xca68>
   2dffc:	str	r8, [r4], #4
   2e000:	add	r5, r5, #4
   2e004:	ldr	r2, [r5]
   2e008:	sdiv	r3, lr, r2
   2e00c:	mls	r3, r2, r3, lr
   2e010:	cmp	r3, #0
   2e014:	beq	2dfb0 <GetDataSlab+0xc9cc>
   2e018:	ldr	r1, [r5, #-4]
   2e01c:	str	r1, [sp, #8]
   2e020:	ldr	r1, [sp, #196]	; 0xc4
   2e024:	ldr	r1, [r1, r0, lsl #2]
   2e028:	str	r1, [sp, #12]
   2e02c:	sub	r3, r2, r3
   2e030:	mov	r2, r1
   2e034:	ldr	r1, [sp, #8]
   2e038:	mla	r3, r2, r1, r3
   2e03c:	add	ip, ip, r3, lsl #2
   2e040:	add	lr, lr, r3
   2e044:	b	2dfd0 <GetDataSlab+0xc9ec>
   2e048:	mov	r0, #1
   2e04c:	add	r3, sp, #152	; 0x98
   2e050:	add	r3, r3, r0, lsl #2
   2e054:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e058:	add	lr, lr, r3
   2e05c:	add	ip, ip, r3, lsl #2
   2e060:	ldr	r3, [sp, #20]
   2e064:	add	r3, r3, r6
   2e068:	str	r3, [sp, #20]
   2e06c:	ldr	r2, [sp, #16]
   2e070:	cmp	r3, r2
   2e074:	bge	2e12c <GetDataSlab+0xcb48>
   2e078:	ldr	r3, [sp, #196]	; 0xc4
   2e07c:	ldr	r3, [r3]
   2e080:	cmp	r3, #0
   2e084:	addne	ip, ip, r3, lsl #2
   2e088:	addne	lr, lr, r3
   2e08c:	ldr	r6, [fp]
   2e090:	cmp	r6, #0
   2e094:	ble	2e0cc <GetDataSlab+0xcae8>
   2e098:	ldr	r3, [sp, #4]
   2e09c:	ldr	r2, [sp, #20]
   2e0a0:	add	r2, r3, r2, lsl #2
   2e0a4:	mov	r3, #0
   2e0a8:	ldr	r1, [ip]
   2e0ac:	str	r1, [r2], #4
   2e0b0:	ldr	r1, [sl]
   2e0b4:	add	ip, ip, r1, lsl #2
   2e0b8:	add	lr, lr, r1
   2e0bc:	add	r3, r3, #1
   2e0c0:	ldr	r6, [fp]
   2e0c4:	cmp	r6, r3
   2e0c8:	bgt	2e0a8 <GetDataSlab+0xcac4>
   2e0cc:	ldr	r3, [sp, #192]	; 0xc0
   2e0d0:	ldr	r2, [r3]
   2e0d4:	ldr	r3, [sp, #196]	; 0xc4
   2e0d8:	ldr	r3, [r3]
   2e0dc:	sub	r3, r2, r3
   2e0e0:	ldr	r2, [sl]
   2e0e4:	mls	r3, r2, r6, r3
   2e0e8:	add	lr, lr, r3
   2e0ec:	add	ip, ip, r3, lsl #2
   2e0f0:	cmp	r9, #1
   2e0f4:	ble	2e060 <GetDataSlab+0xca7c>
   2e0f8:	ldr	r3, [sp, #76]	; 0x4c
   2e0fc:	add	r3, r3, #1
   2e100:	str	r3, [sp, #76]	; 0x4c
   2e104:	ldr	r1, [fp, #4]
   2e108:	sdiv	r2, r3, r1
   2e10c:	mls	r3, r1, r2, r3
   2e110:	cmp	r3, #0
   2e114:	bne	2e048 <GetDataSlab+0xca64>
   2e118:	add	r4, sp, #76	; 0x4c
   2e11c:	add	r7, fp, #4
   2e120:	add	r5, sp, #112	; 0x70
   2e124:	mov	r0, #1
   2e128:	b	2dffc <GetDataSlab+0xca18>
   2e12c:	mov	r3, #0
   2e130:	b	251fc <GetDataSlab+0x3c18>
   2e134:	ldr	r3, [sl]
   2e138:	str	r3, [sp, #28]
   2e13c:	sub	r3, r3, #1
   2e140:	str	r3, [sp, #32]
   2e144:	ldr	r3, [sp, #192]	; 0xc0
   2e148:	ldr	r3, [r3]
   2e14c:	str	r3, [sp, #112]	; 0x70
   2e150:	ldr	r3, [fp]
   2e154:	str	r3, [sp, #16]
   2e158:	cmp	r9, #1
   2e15c:	ble	2e180 <GetDataSlab+0xcb9c>
   2e160:	str	sl, [sp, #20]
   2e164:	add	r8, sp, #36	; 0x24
   2e168:	ldr	r5, [sp, #192]	; 0xc0
   2e16c:	add	r6, sp, #112	; 0x70
   2e170:	str	r5, [sp, #12]
   2e174:	mov	r4, #1
   2e178:	mov	lr, #0
   2e17c:	b	3e748 <GetDataSlab+0x1d164>
   2e180:	mov	lr, #0
   2e184:	b	3e7e0 <GetDataSlab+0x1d1fc>
   2e188:	ldr	r3, [sp, #16]
   2e18c:	cmp	r3, #0
   2e190:	ble	3a3f4 <GetDataSlab+0x18e10>
   2e194:	mov	r3, #0
   2e198:	str	r3, [sp, #12]
   2e19c:	mov	r8, r3
   2e1a0:	b	2e260 <GetDataSlab+0xcc7c>
   2e1a4:	ldr	r3, [sp, #196]	; 0xc4
   2e1a8:	ldr	r3, [r3, r0, lsl #2]
   2e1ac:	cmp	r3, #0
   2e1b0:	beq	2e1c4 <GetDataSlab+0xcbe0>
   2e1b4:	ldr	r2, [r5, #-8]
   2e1b8:	mul	r3, r2, r3
   2e1bc:	add	ip, ip, r3, lsl #2
   2e1c0:	add	lr, lr, r3
   2e1c4:	add	r0, r0, #1
   2e1c8:	cmp	r9, r0
   2e1cc:	beq	2e244 <GetDataSlab+0xcc60>
   2e1d0:	ldr	r3, [r4]
   2e1d4:	add	r1, r3, #1
   2e1d8:	str	r1, [r4]
   2e1dc:	ldr	r2, [r7, #4]!
   2e1e0:	sdiv	r3, r1, r2
   2e1e4:	mls	r3, r2, r3, r1
   2e1e8:	cmp	r3, #0
   2e1ec:	bne	2e230 <GetDataSlab+0xcc4c>
   2e1f0:	str	r8, [r4], #4
   2e1f4:	ldr	r2, [r5], #4
   2e1f8:	sdiv	r3, lr, r2
   2e1fc:	mls	r3, r2, r3, lr
   2e200:	cmp	r3, #0
   2e204:	beq	2e1a4 <GetDataSlab+0xcbc0>
   2e208:	ldr	r1, [r5, #-8]
   2e20c:	ldr	sl, [sp, #196]	; 0xc4
   2e210:	ldr	sl, [sl, r0, lsl #2]
   2e214:	str	sl, [sp, #8]
   2e218:	sub	r3, r2, r3
   2e21c:	mla	r3, sl, r1, r3
   2e220:	add	ip, ip, r3, lsl #2
   2e224:	add	lr, lr, r3
   2e228:	b	2e1c4 <GetDataSlab+0xcbe0>
   2e22c:	ldr	r0, [sp, #28]
   2e230:	add	r3, sp, #152	; 0x98
   2e234:	add	r3, r3, r0, lsl #2
   2e238:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e23c:	add	lr, lr, r3
   2e240:	add	ip, ip, r3, lsl #2
   2e244:	ldr	r3, [sp, #12]
   2e248:	add	r3, r3, r6
   2e24c:	str	r3, [sp, #12]
   2e250:	ldr	r3, [sp, #16]
   2e254:	ldr	r2, [sp, #12]
   2e258:	cmp	r2, r3
   2e25c:	bge	2e304 <GetDataSlab+0xcd20>
   2e260:	ldr	r3, [sp, #196]	; 0xc4
   2e264:	ldr	r3, [r3]
   2e268:	cmp	r3, #0
   2e26c:	addne	ip, ip, r3, lsl #2
   2e270:	addne	lr, lr, r3
   2e274:	ldr	r6, [fp]
   2e278:	cmp	r6, #0
   2e27c:	ble	2e2ac <GetDataSlab+0xccc8>
   2e280:	sub	r0, ip, #4
   2e284:	ldr	r3, [sp, #4]
   2e288:	ldr	r2, [sp, #12]
   2e28c:	add	r1, r3, r2, lsl #2
   2e290:	mov	r2, #0
   2e294:	ldr	r3, [r0, #4]!
   2e298:	str	r3, [r1], #4
   2e29c:	add	r2, r2, #1
   2e2a0:	ldr	r6, [fp]
   2e2a4:	cmp	r6, r2
   2e2a8:	bgt	2e294 <GetDataSlab+0xccb0>
   2e2ac:	ldr	r3, [sp, #192]	; 0xc0
   2e2b0:	ldr	r2, [r3]
   2e2b4:	ldr	r3, [sp, #196]	; 0xc4
   2e2b8:	ldr	r3, [r3]
   2e2bc:	sub	r3, r2, r3
   2e2c0:	add	lr, lr, r3
   2e2c4:	add	ip, ip, r3, lsl #2
   2e2c8:	cmp	r9, #1
   2e2cc:	ble	2e244 <GetDataSlab+0xcc60>
   2e2d0:	ldr	r3, [sp, #76]	; 0x4c
   2e2d4:	add	r3, r3, #1
   2e2d8:	str	r3, [sp, #76]	; 0x4c
   2e2dc:	ldr	r1, [fp, #4]
   2e2e0:	sdiv	r2, r3, r1
   2e2e4:	mls	r3, r1, r2, r3
   2e2e8:	cmp	r3, #0
   2e2ec:	bne	2e22c <GetDataSlab+0xcc48>
   2e2f0:	add	r4, sp, #76	; 0x4c
   2e2f4:	add	r7, fp, #4
   2e2f8:	add	r5, sp, #116	; 0x74
   2e2fc:	ldr	r0, [sp, #28]
   2e300:	b	2e1f0 <GetDataSlab+0xcc0c>
   2e304:	mov	r3, #0
   2e308:	b	251fc <GetDataSlab+0x3c18>
   2e30c:	ldr	r3, [sp, #196]	; 0xc4
   2e310:	ldr	r2, [r3, r0, lsl #2]
   2e314:	cmp	r2, #0
   2e318:	beq	2e32c <GetDataSlab+0xcd48>
   2e31c:	ldr	r3, [r5, #-4]
   2e320:	mul	r3, r3, r2
   2e324:	add	ip, ip, r3, lsl #2
   2e328:	add	lr, lr, r3
   2e32c:	add	r0, r0, #1
   2e330:	cmp	r9, r0
   2e334:	beq	2e3bc <GetDataSlab+0xcdd8>
   2e338:	ldr	r3, [r4]
   2e33c:	add	r1, r3, #1
   2e340:	str	r1, [r4]
   2e344:	ldr	r2, [r7, #4]!
   2e348:	sdiv	r3, r1, r2
   2e34c:	mls	r3, r2, r3, r1
   2e350:	cmp	r3, #0
   2e354:	bne	2e3a8 <GetDataSlab+0xcdc4>
   2e358:	str	r8, [r4], #4
   2e35c:	add	r5, r5, #4
   2e360:	ldr	r2, [r5]
   2e364:	sdiv	r3, lr, r2
   2e368:	mls	r3, r2, r3, lr
   2e36c:	cmp	r3, #0
   2e370:	beq	2e30c <GetDataSlab+0xcd28>
   2e374:	ldr	r1, [r5, #-4]
   2e378:	str	r1, [sp, #8]
   2e37c:	ldr	r1, [sp, #196]	; 0xc4
   2e380:	ldr	r1, [r1, r0, lsl #2]
   2e384:	str	r1, [sp, #12]
   2e388:	sub	r3, r2, r3
   2e38c:	mov	r2, r1
   2e390:	ldr	r1, [sp, #8]
   2e394:	mla	r3, r2, r1, r3
   2e398:	add	ip, ip, r3, lsl #2
   2e39c:	add	lr, lr, r3
   2e3a0:	b	2e32c <GetDataSlab+0xcd48>
   2e3a4:	mov	r0, #1
   2e3a8:	add	r3, sp, #152	; 0x98
   2e3ac:	add	r3, r3, r0, lsl #2
   2e3b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e3b4:	add	lr, lr, r3
   2e3b8:	add	ip, ip, r3, lsl #2
   2e3bc:	ldr	r3, [sp, #20]
   2e3c0:	add	r3, r3, r6
   2e3c4:	str	r3, [sp, #20]
   2e3c8:	ldr	r2, [sp, #16]
   2e3cc:	cmp	r3, r2
   2e3d0:	bge	2e488 <GetDataSlab+0xcea4>
   2e3d4:	ldr	r3, [sp, #196]	; 0xc4
   2e3d8:	ldr	r3, [r3]
   2e3dc:	cmp	r3, #0
   2e3e0:	addne	ip, ip, r3, lsl #2
   2e3e4:	addne	lr, lr, r3
   2e3e8:	ldr	r6, [fp]
   2e3ec:	cmp	r6, #0
   2e3f0:	ble	2e428 <GetDataSlab+0xce44>
   2e3f4:	ldr	r3, [sp, #4]
   2e3f8:	ldr	r2, [sp, #20]
   2e3fc:	add	r2, r3, r2, lsl #2
   2e400:	mov	r3, #0
   2e404:	ldr	r1, [ip]
   2e408:	str	r1, [r2], #4
   2e40c:	ldr	r1, [sl]
   2e410:	add	ip, ip, r1, lsl #2
   2e414:	add	lr, lr, r1
   2e418:	add	r3, r3, #1
   2e41c:	ldr	r6, [fp]
   2e420:	cmp	r6, r3
   2e424:	bgt	2e404 <GetDataSlab+0xce20>
   2e428:	ldr	r3, [sp, #192]	; 0xc0
   2e42c:	ldr	r2, [r3]
   2e430:	ldr	r3, [sp, #196]	; 0xc4
   2e434:	ldr	r3, [r3]
   2e438:	sub	r3, r2, r3
   2e43c:	ldr	r2, [sl]
   2e440:	mls	r3, r2, r6, r3
   2e444:	add	lr, lr, r3
   2e448:	add	ip, ip, r3, lsl #2
   2e44c:	cmp	r9, #1
   2e450:	ble	2e3bc <GetDataSlab+0xcdd8>
   2e454:	ldr	r3, [sp, #76]	; 0x4c
   2e458:	add	r3, r3, #1
   2e45c:	str	r3, [sp, #76]	; 0x4c
   2e460:	ldr	r1, [fp, #4]
   2e464:	sdiv	r2, r3, r1
   2e468:	mls	r3, r1, r2, r3
   2e46c:	cmp	r3, #0
   2e470:	bne	2e3a4 <GetDataSlab+0xcdc0>
   2e474:	add	r4, sp, #76	; 0x4c
   2e478:	add	r7, fp, #4
   2e47c:	add	r5, sp, #112	; 0x70
   2e480:	mov	r0, #1
   2e484:	b	2e358 <GetDataSlab+0xcd74>
   2e488:	mov	r3, #0
   2e48c:	b	251fc <GetDataSlab+0x3c18>
   2e490:	ldr	r3, [sl]
   2e494:	str	r3, [sp, #28]
   2e498:	sub	r3, r3, #1
   2e49c:	str	r3, [sp, #32]
   2e4a0:	ldr	r3, [sp, #192]	; 0xc0
   2e4a4:	ldr	r3, [r3]
   2e4a8:	str	r3, [sp, #112]	; 0x70
   2e4ac:	ldr	r3, [fp]
   2e4b0:	str	r3, [sp, #16]
   2e4b4:	cmp	r9, #1
   2e4b8:	ble	2e4dc <GetDataSlab+0xcef8>
   2e4bc:	str	sl, [sp, #20]
   2e4c0:	add	r8, sp, #36	; 0x24
   2e4c4:	ldr	r5, [sp, #192]	; 0xc0
   2e4c8:	add	r6, sp, #112	; 0x70
   2e4cc:	str	r5, [sp, #12]
   2e4d0:	mov	r4, #1
   2e4d4:	mov	lr, #0
   2e4d8:	b	3e478 <GetDataSlab+0x1ce94>
   2e4dc:	mov	lr, #0
   2e4e0:	b	3e510 <GetDataSlab+0x1cf2c>
   2e4e4:	ldr	r3, [sp, #16]
   2e4e8:	cmp	r3, #0
   2e4ec:	ble	3a3fc <GetDataSlab+0x18e18>
   2e4f0:	mov	r3, #0
   2e4f4:	str	r3, [sp, #12]
   2e4f8:	mov	r8, r3
   2e4fc:	b	2e5bc <GetDataSlab+0xcfd8>
   2e500:	ldr	r3, [sp, #196]	; 0xc4
   2e504:	ldr	r3, [r3, r0, lsl #2]
   2e508:	cmp	r3, #0
   2e50c:	beq	2e520 <GetDataSlab+0xcf3c>
   2e510:	ldr	r2, [r5, #-8]
   2e514:	mul	r3, r2, r3
   2e518:	add	ip, ip, r3, lsl #1
   2e51c:	add	lr, lr, r3
   2e520:	add	r0, r0, #1
   2e524:	cmp	r9, r0
   2e528:	beq	2e5a0 <GetDataSlab+0xcfbc>
   2e52c:	ldr	r3, [r4]
   2e530:	add	r1, r3, #1
   2e534:	str	r1, [r4]
   2e538:	ldr	r2, [r7, #4]!
   2e53c:	sdiv	r3, r1, r2
   2e540:	mls	r3, r2, r3, r1
   2e544:	cmp	r3, #0
   2e548:	bne	2e58c <GetDataSlab+0xcfa8>
   2e54c:	str	r8, [r4], #4
   2e550:	ldr	r2, [r5], #4
   2e554:	sdiv	r3, lr, r2
   2e558:	mls	r3, r2, r3, lr
   2e55c:	cmp	r3, #0
   2e560:	beq	2e500 <GetDataSlab+0xcf1c>
   2e564:	ldr	r1, [r5, #-8]
   2e568:	ldr	sl, [sp, #196]	; 0xc4
   2e56c:	ldr	sl, [sl, r0, lsl #2]
   2e570:	str	sl, [sp, #8]
   2e574:	sub	r3, r2, r3
   2e578:	mla	r3, sl, r1, r3
   2e57c:	add	ip, ip, r3, lsl #1
   2e580:	add	lr, lr, r3
   2e584:	b	2e520 <GetDataSlab+0xcf3c>
   2e588:	ldr	r0, [sp, #28]
   2e58c:	add	r3, sp, #152	; 0x98
   2e590:	add	r3, r3, r0, lsl #2
   2e594:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e598:	add	lr, lr, r3
   2e59c:	add	ip, ip, r3, lsl #1
   2e5a0:	ldr	r3, [sp, #12]
   2e5a4:	add	r3, r3, r6
   2e5a8:	str	r3, [sp, #12]
   2e5ac:	ldr	r3, [sp, #16]
   2e5b0:	ldr	r2, [sp, #12]
   2e5b4:	cmp	r2, r3
   2e5b8:	bge	2e660 <GetDataSlab+0xd07c>
   2e5bc:	ldr	r3, [sp, #196]	; 0xc4
   2e5c0:	ldr	r3, [r3]
   2e5c4:	cmp	r3, #0
   2e5c8:	addne	ip, ip, r3, lsl #1
   2e5cc:	addne	lr, lr, r3
   2e5d0:	ldr	r6, [fp]
   2e5d4:	cmp	r6, #0
   2e5d8:	ble	2e608 <GetDataSlab+0xd024>
   2e5dc:	sub	r0, ip, #2
   2e5e0:	ldr	r3, [sp, #4]
   2e5e4:	ldr	r2, [sp, #12]
   2e5e8:	add	r1, r3, r2, lsl #2
   2e5ec:	mov	r2, #0
   2e5f0:	ldrsh	r3, [r0, #2]!
   2e5f4:	str	r3, [r1], #4
   2e5f8:	add	r2, r2, #1
   2e5fc:	ldr	r6, [fp]
   2e600:	cmp	r6, r2
   2e604:	bgt	2e5f0 <GetDataSlab+0xd00c>
   2e608:	ldr	r3, [sp, #192]	; 0xc0
   2e60c:	ldr	r2, [r3]
   2e610:	ldr	r3, [sp, #196]	; 0xc4
   2e614:	ldr	r3, [r3]
   2e618:	sub	r3, r2, r3
   2e61c:	add	lr, lr, r3
   2e620:	add	ip, ip, r3, lsl #1
   2e624:	cmp	r9, #1
   2e628:	ble	2e5a0 <GetDataSlab+0xcfbc>
   2e62c:	ldr	r3, [sp, #76]	; 0x4c
   2e630:	add	r3, r3, #1
   2e634:	str	r3, [sp, #76]	; 0x4c
   2e638:	ldr	r1, [fp, #4]
   2e63c:	sdiv	r2, r3, r1
   2e640:	mls	r3, r1, r2, r3
   2e644:	cmp	r3, #0
   2e648:	bne	2e588 <GetDataSlab+0xcfa4>
   2e64c:	add	r4, sp, #76	; 0x4c
   2e650:	add	r7, fp, #4
   2e654:	add	r5, sp, #116	; 0x74
   2e658:	ldr	r0, [sp, #28]
   2e65c:	b	2e54c <GetDataSlab+0xcf68>
   2e660:	mov	r3, #0
   2e664:	b	251fc <GetDataSlab+0x3c18>
   2e668:	ldr	r3, [sp, #196]	; 0xc4
   2e66c:	ldr	r2, [r3, r0, lsl #2]
   2e670:	cmp	r2, #0
   2e674:	beq	2e688 <GetDataSlab+0xd0a4>
   2e678:	ldr	r3, [r5, #-4]
   2e67c:	mul	r3, r3, r2
   2e680:	add	ip, ip, r3, lsl #1
   2e684:	add	lr, lr, r3
   2e688:	add	r0, r0, #1
   2e68c:	cmp	r9, r0
   2e690:	beq	2e718 <GetDataSlab+0xd134>
   2e694:	ldr	r3, [r4]
   2e698:	add	r1, r3, #1
   2e69c:	str	r1, [r4]
   2e6a0:	ldr	r2, [r7, #4]!
   2e6a4:	sdiv	r3, r1, r2
   2e6a8:	mls	r3, r2, r3, r1
   2e6ac:	cmp	r3, #0
   2e6b0:	bne	2e704 <GetDataSlab+0xd120>
   2e6b4:	str	r8, [r4], #4
   2e6b8:	add	r5, r5, #4
   2e6bc:	ldr	r2, [r5]
   2e6c0:	sdiv	r3, lr, r2
   2e6c4:	mls	r3, r2, r3, lr
   2e6c8:	cmp	r3, #0
   2e6cc:	beq	2e668 <GetDataSlab+0xd084>
   2e6d0:	ldr	r1, [r5, #-4]
   2e6d4:	str	r1, [sp, #8]
   2e6d8:	ldr	r1, [sp, #196]	; 0xc4
   2e6dc:	ldr	r1, [r1, r0, lsl #2]
   2e6e0:	str	r1, [sp, #12]
   2e6e4:	sub	r3, r2, r3
   2e6e8:	mov	r2, r1
   2e6ec:	ldr	r1, [sp, #8]
   2e6f0:	mla	r3, r2, r1, r3
   2e6f4:	add	ip, ip, r3, lsl #1
   2e6f8:	add	lr, lr, r3
   2e6fc:	b	2e688 <GetDataSlab+0xd0a4>
   2e700:	mov	r0, #1
   2e704:	add	r3, sp, #152	; 0x98
   2e708:	add	r3, r3, r0, lsl #2
   2e70c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e710:	add	lr, lr, r3
   2e714:	add	ip, ip, r3, lsl #1
   2e718:	ldr	r3, [sp, #20]
   2e71c:	add	r3, r3, r6
   2e720:	str	r3, [sp, #20]
   2e724:	ldr	r2, [sp, #16]
   2e728:	cmp	r3, r2
   2e72c:	bge	2e7e4 <GetDataSlab+0xd200>
   2e730:	ldr	r3, [sp, #196]	; 0xc4
   2e734:	ldr	r3, [r3]
   2e738:	cmp	r3, #0
   2e73c:	addne	ip, ip, r3, lsl #1
   2e740:	addne	lr, lr, r3
   2e744:	ldr	r6, [fp]
   2e748:	cmp	r6, #0
   2e74c:	ble	2e784 <GetDataSlab+0xd1a0>
   2e750:	ldr	r3, [sp, #4]
   2e754:	ldr	r2, [sp, #20]
   2e758:	add	r2, r3, r2, lsl #2
   2e75c:	mov	r3, #0
   2e760:	ldrsh	r1, [ip]
   2e764:	str	r1, [r2], #4
   2e768:	ldr	r1, [sl]
   2e76c:	add	ip, ip, r1, lsl #1
   2e770:	add	lr, lr, r1
   2e774:	add	r3, r3, #1
   2e778:	ldr	r6, [fp]
   2e77c:	cmp	r6, r3
   2e780:	bgt	2e760 <GetDataSlab+0xd17c>
   2e784:	ldr	r3, [sp, #192]	; 0xc0
   2e788:	ldr	r2, [r3]
   2e78c:	ldr	r3, [sp, #196]	; 0xc4
   2e790:	ldr	r3, [r3]
   2e794:	sub	r3, r2, r3
   2e798:	ldr	r2, [sl]
   2e79c:	mls	r3, r2, r6, r3
   2e7a0:	add	lr, lr, r3
   2e7a4:	add	ip, ip, r3, lsl #1
   2e7a8:	cmp	r9, #1
   2e7ac:	ble	2e718 <GetDataSlab+0xd134>
   2e7b0:	ldr	r3, [sp, #76]	; 0x4c
   2e7b4:	add	r3, r3, #1
   2e7b8:	str	r3, [sp, #76]	; 0x4c
   2e7bc:	ldr	r1, [fp, #4]
   2e7c0:	sdiv	r2, r3, r1
   2e7c4:	mls	r3, r1, r2, r3
   2e7c8:	cmp	r3, #0
   2e7cc:	bne	2e700 <GetDataSlab+0xd11c>
   2e7d0:	add	r4, sp, #76	; 0x4c
   2e7d4:	add	r7, fp, #4
   2e7d8:	add	r5, sp, #112	; 0x70
   2e7dc:	mov	r0, #1
   2e7e0:	b	2e6b4 <GetDataSlab+0xd0d0>
   2e7e4:	mov	r3, #0
   2e7e8:	b	251fc <GetDataSlab+0x3c18>
   2e7ec:	ldr	r3, [sl]
   2e7f0:	str	r3, [sp, #28]
   2e7f4:	sub	r3, r3, #1
   2e7f8:	str	r3, [sp, #32]
   2e7fc:	ldr	r3, [sp, #192]	; 0xc0
   2e800:	ldr	r3, [r3]
   2e804:	str	r3, [sp, #112]	; 0x70
   2e808:	ldr	r3, [fp]
   2e80c:	str	r3, [sp, #16]
   2e810:	cmp	r9, #1
   2e814:	ble	2e838 <GetDataSlab+0xd254>
   2e818:	str	sl, [sp, #20]
   2e81c:	add	r8, sp, #36	; 0x24
   2e820:	ldr	r5, [sp, #192]	; 0xc0
   2e824:	add	r6, sp, #112	; 0x70
   2e828:	str	r5, [sp, #12]
   2e82c:	mov	r4, #1
   2e830:	mov	lr, #0
   2e834:	b	3e568 <GetDataSlab+0x1cf84>
   2e838:	mov	lr, #0
   2e83c:	b	3e600 <GetDataSlab+0x1d01c>
   2e840:	ldr	r3, [sp, #16]
   2e844:	cmp	r3, #0
   2e848:	ble	3a404 <GetDataSlab+0x18e20>
   2e84c:	mov	r3, #0
   2e850:	str	r3, [sp, #12]
   2e854:	mov	r8, r3
   2e858:	b	2e918 <GetDataSlab+0xd334>
   2e85c:	ldr	r3, [sp, #196]	; 0xc4
   2e860:	ldr	r3, [r3, r0, lsl #2]
   2e864:	cmp	r3, #0
   2e868:	beq	2e87c <GetDataSlab+0xd298>
   2e86c:	ldr	r2, [r5, #-8]
   2e870:	mul	r3, r2, r3
   2e874:	add	ip, ip, r3, lsl #1
   2e878:	add	lr, lr, r3
   2e87c:	add	r0, r0, #1
   2e880:	cmp	r9, r0
   2e884:	beq	2e8fc <GetDataSlab+0xd318>
   2e888:	ldr	r3, [r4]
   2e88c:	add	r1, r3, #1
   2e890:	str	r1, [r4]
   2e894:	ldr	r2, [r7, #4]!
   2e898:	sdiv	r3, r1, r2
   2e89c:	mls	r3, r2, r3, r1
   2e8a0:	cmp	r3, #0
   2e8a4:	bne	2e8e8 <GetDataSlab+0xd304>
   2e8a8:	str	r8, [r4], #4
   2e8ac:	ldr	r2, [r5], #4
   2e8b0:	sdiv	r3, lr, r2
   2e8b4:	mls	r3, r2, r3, lr
   2e8b8:	cmp	r3, #0
   2e8bc:	beq	2e85c <GetDataSlab+0xd278>
   2e8c0:	ldr	r1, [r5, #-8]
   2e8c4:	ldr	sl, [sp, #196]	; 0xc4
   2e8c8:	ldr	sl, [sl, r0, lsl #2]
   2e8cc:	str	sl, [sp, #8]
   2e8d0:	sub	r3, r2, r3
   2e8d4:	mla	r3, sl, r1, r3
   2e8d8:	add	ip, ip, r3, lsl #1
   2e8dc:	add	lr, lr, r3
   2e8e0:	b	2e87c <GetDataSlab+0xd298>
   2e8e4:	ldr	r0, [sp, #28]
   2e8e8:	add	r3, sp, #152	; 0x98
   2e8ec:	add	r3, r3, r0, lsl #2
   2e8f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2e8f4:	add	lr, lr, r3
   2e8f8:	add	ip, ip, r3, lsl #1
   2e8fc:	ldr	r3, [sp, #12]
   2e900:	add	r3, r3, r6
   2e904:	str	r3, [sp, #12]
   2e908:	ldr	r3, [sp, #16]
   2e90c:	ldr	r2, [sp, #12]
   2e910:	cmp	r2, r3
   2e914:	bge	2e9bc <GetDataSlab+0xd3d8>
   2e918:	ldr	r3, [sp, #196]	; 0xc4
   2e91c:	ldr	r3, [r3]
   2e920:	cmp	r3, #0
   2e924:	addne	ip, ip, r3, lsl #1
   2e928:	addne	lr, lr, r3
   2e92c:	ldr	r6, [fp]
   2e930:	cmp	r6, #0
   2e934:	ble	2e964 <GetDataSlab+0xd380>
   2e938:	sub	r0, ip, #2
   2e93c:	ldr	r3, [sp, #4]
   2e940:	ldr	r2, [sp, #12]
   2e944:	add	r1, r3, r2, lsl #2
   2e948:	mov	r2, #0
   2e94c:	ldrh	r3, [r0, #2]!
   2e950:	str	r3, [r1], #4
   2e954:	add	r2, r2, #1
   2e958:	ldr	r6, [fp]
   2e95c:	cmp	r6, r2
   2e960:	bgt	2e94c <GetDataSlab+0xd368>
   2e964:	ldr	r3, [sp, #192]	; 0xc0
   2e968:	ldr	r2, [r3]
   2e96c:	ldr	r3, [sp, #196]	; 0xc4
   2e970:	ldr	r3, [r3]
   2e974:	sub	r3, r2, r3
   2e978:	add	lr, lr, r3
   2e97c:	add	ip, ip, r3, lsl #1
   2e980:	cmp	r9, #1
   2e984:	ble	2e8fc <GetDataSlab+0xd318>
   2e988:	ldr	r3, [sp, #76]	; 0x4c
   2e98c:	add	r3, r3, #1
   2e990:	str	r3, [sp, #76]	; 0x4c
   2e994:	ldr	r1, [fp, #4]
   2e998:	sdiv	r2, r3, r1
   2e99c:	mls	r3, r1, r2, r3
   2e9a0:	cmp	r3, #0
   2e9a4:	bne	2e8e4 <GetDataSlab+0xd300>
   2e9a8:	add	r4, sp, #76	; 0x4c
   2e9ac:	add	r7, fp, #4
   2e9b0:	add	r5, sp, #116	; 0x74
   2e9b4:	ldr	r0, [sp, #28]
   2e9b8:	b	2e8a8 <GetDataSlab+0xd2c4>
   2e9bc:	mov	r3, #0
   2e9c0:	b	251fc <GetDataSlab+0x3c18>
   2e9c4:	ldr	r3, [sp, #196]	; 0xc4
   2e9c8:	ldr	r2, [r3, r0, lsl #2]
   2e9cc:	cmp	r2, #0
   2e9d0:	beq	2e9e4 <GetDataSlab+0xd400>
   2e9d4:	ldr	r3, [r5, #-4]
   2e9d8:	mul	r3, r3, r2
   2e9dc:	add	ip, ip, r3, lsl #1
   2e9e0:	add	lr, lr, r3
   2e9e4:	add	r0, r0, #1
   2e9e8:	cmp	r9, r0
   2e9ec:	beq	2ea74 <GetDataSlab+0xd490>
   2e9f0:	ldr	r3, [r4]
   2e9f4:	add	r1, r3, #1
   2e9f8:	str	r1, [r4]
   2e9fc:	ldr	r2, [r7, #4]!
   2ea00:	sdiv	r3, r1, r2
   2ea04:	mls	r3, r2, r3, r1
   2ea08:	cmp	r3, #0
   2ea0c:	bne	2ea60 <GetDataSlab+0xd47c>
   2ea10:	str	r8, [r4], #4
   2ea14:	add	r5, r5, #4
   2ea18:	ldr	r2, [r5]
   2ea1c:	sdiv	r3, lr, r2
   2ea20:	mls	r3, r2, r3, lr
   2ea24:	cmp	r3, #0
   2ea28:	beq	2e9c4 <GetDataSlab+0xd3e0>
   2ea2c:	ldr	r1, [r5, #-4]
   2ea30:	str	r1, [sp, #8]
   2ea34:	ldr	r1, [sp, #196]	; 0xc4
   2ea38:	ldr	r1, [r1, r0, lsl #2]
   2ea3c:	str	r1, [sp, #12]
   2ea40:	sub	r3, r2, r3
   2ea44:	mov	r2, r1
   2ea48:	ldr	r1, [sp, #8]
   2ea4c:	mla	r3, r2, r1, r3
   2ea50:	add	ip, ip, r3, lsl #1
   2ea54:	add	lr, lr, r3
   2ea58:	b	2e9e4 <GetDataSlab+0xd400>
   2ea5c:	mov	r0, #1
   2ea60:	add	r3, sp, #152	; 0x98
   2ea64:	add	r3, r3, r0, lsl #2
   2ea68:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ea6c:	add	lr, lr, r3
   2ea70:	add	ip, ip, r3, lsl #1
   2ea74:	ldr	r3, [sp, #20]
   2ea78:	add	r3, r3, r6
   2ea7c:	str	r3, [sp, #20]
   2ea80:	ldr	r2, [sp, #16]
   2ea84:	cmp	r3, r2
   2ea88:	bge	2eb40 <GetDataSlab+0xd55c>
   2ea8c:	ldr	r3, [sp, #196]	; 0xc4
   2ea90:	ldr	r3, [r3]
   2ea94:	cmp	r3, #0
   2ea98:	addne	ip, ip, r3, lsl #1
   2ea9c:	addne	lr, lr, r3
   2eaa0:	ldr	r6, [fp]
   2eaa4:	cmp	r6, #0
   2eaa8:	ble	2eae0 <GetDataSlab+0xd4fc>
   2eaac:	ldr	r3, [sp, #4]
   2eab0:	ldr	r2, [sp, #20]
   2eab4:	add	r2, r3, r2, lsl #2
   2eab8:	mov	r3, #0
   2eabc:	ldrh	r1, [ip]
   2eac0:	str	r1, [r2], #4
   2eac4:	ldr	r1, [sl]
   2eac8:	add	ip, ip, r1, lsl #1
   2eacc:	add	lr, lr, r1
   2ead0:	add	r3, r3, #1
   2ead4:	ldr	r6, [fp]
   2ead8:	cmp	r6, r3
   2eadc:	bgt	2eabc <GetDataSlab+0xd4d8>
   2eae0:	ldr	r3, [sp, #192]	; 0xc0
   2eae4:	ldr	r2, [r3]
   2eae8:	ldr	r3, [sp, #196]	; 0xc4
   2eaec:	ldr	r3, [r3]
   2eaf0:	sub	r3, r2, r3
   2eaf4:	ldr	r2, [sl]
   2eaf8:	mls	r3, r2, r6, r3
   2eafc:	add	lr, lr, r3
   2eb00:	add	ip, ip, r3, lsl #1
   2eb04:	cmp	r9, #1
   2eb08:	ble	2ea74 <GetDataSlab+0xd490>
   2eb0c:	ldr	r3, [sp, #76]	; 0x4c
   2eb10:	add	r3, r3, #1
   2eb14:	str	r3, [sp, #76]	; 0x4c
   2eb18:	ldr	r1, [fp, #4]
   2eb1c:	sdiv	r2, r3, r1
   2eb20:	mls	r3, r1, r2, r3
   2eb24:	cmp	r3, #0
   2eb28:	bne	2ea5c <GetDataSlab+0xd478>
   2eb2c:	add	r4, sp, #76	; 0x4c
   2eb30:	add	r7, fp, #4
   2eb34:	add	r5, sp, #112	; 0x70
   2eb38:	mov	r0, #1
   2eb3c:	b	2ea10 <GetDataSlab+0xd42c>
   2eb40:	mov	r3, #0
   2eb44:	b	251fc <GetDataSlab+0x3c18>
   2eb48:	ldr	r3, [sl]
   2eb4c:	str	r3, [sp, #28]
   2eb50:	sub	r3, r3, #1
   2eb54:	str	r3, [sp, #32]
   2eb58:	ldr	r3, [sp, #192]	; 0xc0
   2eb5c:	ldr	r3, [r3]
   2eb60:	str	r3, [sp, #112]	; 0x70
   2eb64:	ldr	r3, [fp]
   2eb68:	str	r3, [sp, #16]
   2eb6c:	cmp	r9, #1
   2eb70:	ble	2eb90 <GetDataSlab+0xd5ac>
   2eb74:	str	sl, [sp, #20]
   2eb78:	add	r7, sp, #36	; 0x24
   2eb7c:	ldr	r4, [sp, #192]	; 0xc0
   2eb80:	add	r5, sp, #112	; 0x70
   2eb84:	str	r4, [sp, #12]
   2eb88:	mov	lr, #0
   2eb8c:	b	3e298 <GetDataSlab+0x1ccb4>
   2eb90:	mov	lr, #0
   2eb94:	b	3e330 <GetDataSlab+0x1cd4c>
   2eb98:	ldr	r3, [sp, #16]
   2eb9c:	cmp	r3, #0
   2eba0:	ble	3a40c <GetDataSlab+0x18e28>
   2eba4:	mov	r3, #0
   2eba8:	str	r3, [sp, #12]
   2ebac:	mov	r8, r3
   2ebb0:	b	2ec70 <GetDataSlab+0xd68c>
   2ebb4:	ldr	r3, [sp, #196]	; 0xc4
   2ebb8:	ldr	r3, [r3, r0, lsl #2]
   2ebbc:	cmp	r3, #0
   2ebc0:	beq	2ebd4 <GetDataSlab+0xd5f0>
   2ebc4:	ldr	r2, [r5, #-8]
   2ebc8:	mul	r3, r2, r3
   2ebcc:	add	ip, ip, r3
   2ebd0:	add	lr, lr, r3
   2ebd4:	add	r0, r0, #1
   2ebd8:	cmp	r9, r0
   2ebdc:	beq	2ec54 <GetDataSlab+0xd670>
   2ebe0:	ldr	r3, [r4]
   2ebe4:	add	r1, r3, #1
   2ebe8:	str	r1, [r4]
   2ebec:	ldr	r2, [r7, #4]!
   2ebf0:	sdiv	r3, r1, r2
   2ebf4:	mls	r3, r2, r3, r1
   2ebf8:	cmp	r3, #0
   2ebfc:	bne	2ec40 <GetDataSlab+0xd65c>
   2ec00:	str	r8, [r4], #4
   2ec04:	ldr	r2, [r5], #4
   2ec08:	sdiv	r3, lr, r2
   2ec0c:	mls	r3, r2, r3, lr
   2ec10:	cmp	r3, #0
   2ec14:	beq	2ebb4 <GetDataSlab+0xd5d0>
   2ec18:	ldr	r1, [r5, #-8]
   2ec1c:	ldr	sl, [sp, #196]	; 0xc4
   2ec20:	ldr	sl, [sl, r0, lsl #2]
   2ec24:	str	sl, [sp, #8]
   2ec28:	sub	r3, r2, r3
   2ec2c:	mla	r3, sl, r1, r3
   2ec30:	add	ip, ip, r3
   2ec34:	add	lr, lr, r3
   2ec38:	b	2ebd4 <GetDataSlab+0xd5f0>
   2ec3c:	ldr	r0, [sp, #28]
   2ec40:	add	r3, sp, #152	; 0x98
   2ec44:	add	r3, r3, r0, lsl #2
   2ec48:	ldr	r3, [r3, #-120]	; 0xffffff88
   2ec4c:	add	lr, lr, r3
   2ec50:	add	ip, ip, r3
   2ec54:	ldr	r3, [sp, #12]
   2ec58:	add	r3, r3, r6
   2ec5c:	str	r3, [sp, #12]
   2ec60:	ldr	r3, [sp, #16]
   2ec64:	ldr	r2, [sp, #12]
   2ec68:	cmp	r2, r3
   2ec6c:	bge	2ed18 <GetDataSlab+0xd734>
   2ec70:	ldr	r3, [sp, #196]	; 0xc4
   2ec74:	ldr	r3, [r3]
   2ec78:	cmp	r3, #0
   2ec7c:	addne	ip, ip, r3
   2ec80:	addne	lr, lr, r3
   2ec84:	ldr	r6, [fp]
   2ec88:	cmp	r6, #0
   2ec8c:	ble	2ecc0 <GetDataSlab+0xd6dc>
   2ec90:	sub	r2, ip, #1
   2ec94:	ldr	r3, [sp, #4]
   2ec98:	ldr	r1, [sp, #12]
   2ec9c:	add	r1, r3, r1, lsl #2
   2eca0:	ldrsb	r3, [r2, #1]
   2eca4:	str	r3, [r1], #4
   2eca8:	ldr	r6, [fp]
   2ecac:	add	r3, r2, #2
   2ecb0:	sub	r3, r3, ip
   2ecb4:	add	r2, r2, #1
   2ecb8:	cmp	r6, r3
   2ecbc:	bgt	2eca0 <GetDataSlab+0xd6bc>
   2ecc0:	ldr	r3, [sp, #192]	; 0xc0
   2ecc4:	ldr	r2, [r3]
   2ecc8:	ldr	r3, [sp, #196]	; 0xc4
   2eccc:	ldr	r3, [r3]
   2ecd0:	sub	r3, r2, r3
   2ecd4:	add	lr, lr, r3
   2ecd8:	add	ip, ip, r3
   2ecdc:	cmp	r9, #1
   2ece0:	ble	2ec54 <GetDataSlab+0xd670>
   2ece4:	ldr	r3, [sp, #76]	; 0x4c
   2ece8:	add	r3, r3, #1
   2ecec:	str	r3, [sp, #76]	; 0x4c
   2ecf0:	ldr	r1, [fp, #4]
   2ecf4:	sdiv	r2, r3, r1
   2ecf8:	mls	r3, r1, r2, r3
   2ecfc:	cmp	r3, #0
   2ed00:	bne	2ec3c <GetDataSlab+0xd658>
   2ed04:	add	r4, sp, #76	; 0x4c
   2ed08:	add	r7, fp, #4
   2ed0c:	add	r5, sp, #116	; 0x74
   2ed10:	ldr	r0, [sp, #28]
   2ed14:	b	2ec00 <GetDataSlab+0xd61c>
   2ed18:	mov	r3, #0
   2ed1c:	b	251fc <GetDataSlab+0x3c18>
   2ed20:	ldr	r3, [sp, #196]	; 0xc4
   2ed24:	ldr	r2, [r3, r0, lsl #2]
   2ed28:	cmp	r2, #0
   2ed2c:	beq	2ed40 <GetDataSlab+0xd75c>
   2ed30:	ldr	r3, [r5, #-4]
   2ed34:	mul	r3, r3, r2
   2ed38:	add	ip, ip, r3
   2ed3c:	add	lr, lr, r3
   2ed40:	add	r0, r0, #1
   2ed44:	cmp	r9, r0
   2ed48:	beq	2edd0 <GetDataSlab+0xd7ec>
   2ed4c:	ldr	r3, [r4]
   2ed50:	add	r1, r3, #1
   2ed54:	str	r1, [r4]
   2ed58:	ldr	r2, [r7, #4]!
   2ed5c:	sdiv	r3, r1, r2
   2ed60:	mls	r3, r2, r3, r1
   2ed64:	cmp	r3, #0
   2ed68:	bne	2edbc <GetDataSlab+0xd7d8>
   2ed6c:	str	r8, [r4], #4
   2ed70:	add	r5, r5, #4
   2ed74:	ldr	r2, [r5]
   2ed78:	sdiv	r3, lr, r2
   2ed7c:	mls	r3, r2, r3, lr
   2ed80:	cmp	r3, #0
   2ed84:	beq	2ed20 <GetDataSlab+0xd73c>
   2ed88:	ldr	r1, [r5, #-4]
   2ed8c:	str	r1, [sp, #8]
   2ed90:	ldr	r1, [sp, #196]	; 0xc4
   2ed94:	ldr	r1, [r1, r0, lsl #2]
   2ed98:	str	r1, [sp, #12]
   2ed9c:	sub	r3, r2, r3
   2eda0:	mov	r2, r1
   2eda4:	ldr	r1, [sp, #8]
   2eda8:	mla	r3, r2, r1, r3
   2edac:	add	ip, ip, r3
   2edb0:	add	lr, lr, r3
   2edb4:	b	2ed40 <GetDataSlab+0xd75c>
   2edb8:	mov	r0, #1
   2edbc:	add	r3, sp, #152	; 0x98
   2edc0:	add	r3, r3, r0, lsl #2
   2edc4:	ldr	r3, [r3, #-120]	; 0xffffff88
   2edc8:	add	lr, lr, r3
   2edcc:	add	ip, ip, r3
   2edd0:	ldr	r3, [sp, #20]
   2edd4:	add	r3, r3, r6
   2edd8:	str	r3, [sp, #20]
   2eddc:	ldr	r2, [sp, #16]
   2ede0:	cmp	r3, r2
   2ede4:	bge	2ee9c <GetDataSlab+0xd8b8>
   2ede8:	ldr	r3, [sp, #196]	; 0xc4
   2edec:	ldr	r3, [r3]
   2edf0:	cmp	r3, #0
   2edf4:	addne	ip, ip, r3
   2edf8:	addne	lr, lr, r3
   2edfc:	ldr	r6, [fp]
   2ee00:	cmp	r6, #0
   2ee04:	ble	2ee3c <GetDataSlab+0xd858>
   2ee08:	ldr	r3, [sp, #4]
   2ee0c:	ldr	r2, [sp, #20]
   2ee10:	add	r2, r3, r2, lsl #2
   2ee14:	mov	r3, #0
   2ee18:	ldrsb	r1, [ip]
   2ee1c:	str	r1, [r2], #4
   2ee20:	ldr	r1, [sl]
   2ee24:	add	ip, ip, r1
   2ee28:	add	lr, lr, r1
   2ee2c:	add	r3, r3, #1
   2ee30:	ldr	r6, [fp]
   2ee34:	cmp	r6, r3
   2ee38:	bgt	2ee18 <GetDataSlab+0xd834>
   2ee3c:	ldr	r3, [sp, #192]	; 0xc0
   2ee40:	ldr	r2, [r3]
   2ee44:	ldr	r3, [sp, #196]	; 0xc4
   2ee48:	ldr	r3, [r3]
   2ee4c:	sub	r3, r2, r3
   2ee50:	ldr	r2, [sl]
   2ee54:	mls	r3, r2, r6, r3
   2ee58:	add	lr, lr, r3
   2ee5c:	add	ip, ip, r3
   2ee60:	cmp	r9, #1
   2ee64:	ble	2edd0 <GetDataSlab+0xd7ec>
   2ee68:	ldr	r3, [sp, #76]	; 0x4c
   2ee6c:	add	r3, r3, #1
   2ee70:	str	r3, [sp, #76]	; 0x4c
   2ee74:	ldr	r1, [fp, #4]
   2ee78:	sdiv	r2, r3, r1
   2ee7c:	mls	r3, r1, r2, r3
   2ee80:	cmp	r3, #0
   2ee84:	bne	2edb8 <GetDataSlab+0xd7d4>
   2ee88:	add	r4, sp, #76	; 0x4c
   2ee8c:	add	r7, fp, #4
   2ee90:	add	r5, sp, #112	; 0x70
   2ee94:	mov	r0, #1
   2ee98:	b	2ed6c <GetDataSlab+0xd788>
   2ee9c:	mov	r3, #0
   2eea0:	b	251fc <GetDataSlab+0x3c18>
   2eea4:	ldr	r3, [sl]
   2eea8:	str	r3, [sp, #28]
   2eeac:	sub	r3, r3, #1
   2eeb0:	str	r3, [sp, #32]
   2eeb4:	ldr	r3, [sp, #192]	; 0xc0
   2eeb8:	ldr	r3, [r3]
   2eebc:	str	r3, [sp, #112]	; 0x70
   2eec0:	ldr	r3, [fp]
   2eec4:	str	r3, [sp, #16]
   2eec8:	cmp	r9, #1
   2eecc:	ble	2eef0 <GetDataSlab+0xd90c>
   2eed0:	str	sl, [sp, #20]
   2eed4:	add	r8, sp, #36	; 0x24
   2eed8:	ldr	r5, [sp, #192]	; 0xc0
   2eedc:	add	r6, sp, #112	; 0x70
   2eee0:	str	r5, [sp, #12]
   2eee4:	mov	r4, #1
   2eee8:	mov	lr, #0
   2eeec:	b	3e388 <GetDataSlab+0x1cda4>
   2eef0:	mov	lr, #0
   2eef4:	b	3e420 <GetDataSlab+0x1ce3c>
   2eef8:	ldr	r3, [sp, #16]
   2eefc:	cmp	r3, #0
   2ef00:	ble	3a414 <GetDataSlab+0x18e30>
   2ef04:	mov	r3, #0
   2ef08:	str	r3, [sp, #12]
   2ef0c:	mov	r8, r3
   2ef10:	b	2efd0 <GetDataSlab+0xd9ec>
   2ef14:	ldr	r3, [sp, #196]	; 0xc4
   2ef18:	ldr	r3, [r3, r0, lsl #2]
   2ef1c:	cmp	r3, #0
   2ef20:	beq	2ef34 <GetDataSlab+0xd950>
   2ef24:	ldr	r2, [r5, #-8]
   2ef28:	mul	r3, r2, r3
   2ef2c:	add	ip, ip, r3
   2ef30:	add	lr, lr, r3
   2ef34:	add	r0, r0, #1
   2ef38:	cmp	r9, r0
   2ef3c:	beq	2efb4 <GetDataSlab+0xd9d0>
   2ef40:	ldr	r3, [r4]
   2ef44:	add	r1, r3, #1
   2ef48:	str	r1, [r4]
   2ef4c:	ldr	r2, [r7, #4]!
   2ef50:	sdiv	r3, r1, r2
   2ef54:	mls	r3, r2, r3, r1
   2ef58:	cmp	r3, #0
   2ef5c:	bne	2efa0 <GetDataSlab+0xd9bc>
   2ef60:	str	r8, [r4], #4
   2ef64:	ldr	r2, [r5], #4
   2ef68:	sdiv	r3, lr, r2
   2ef6c:	mls	r3, r2, r3, lr
   2ef70:	cmp	r3, #0
   2ef74:	beq	2ef14 <GetDataSlab+0xd930>
   2ef78:	ldr	r1, [r5, #-8]
   2ef7c:	ldr	sl, [sp, #196]	; 0xc4
   2ef80:	ldr	sl, [sl, r0, lsl #2]
   2ef84:	str	sl, [sp, #8]
   2ef88:	sub	r3, r2, r3
   2ef8c:	mla	r3, sl, r1, r3
   2ef90:	add	ip, ip, r3
   2ef94:	add	lr, lr, r3
   2ef98:	b	2ef34 <GetDataSlab+0xd950>
   2ef9c:	ldr	r0, [sp, #28]
   2efa0:	add	r3, sp, #152	; 0x98
   2efa4:	add	r3, r3, r0, lsl #2
   2efa8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2efac:	add	lr, lr, r3
   2efb0:	add	ip, ip, r3
   2efb4:	ldr	r3, [sp, #12]
   2efb8:	add	r3, r3, r6
   2efbc:	str	r3, [sp, #12]
   2efc0:	ldr	r3, [sp, #16]
   2efc4:	ldr	r2, [sp, #12]
   2efc8:	cmp	r2, r3
   2efcc:	bge	2f078 <GetDataSlab+0xda94>
   2efd0:	ldr	r3, [sp, #196]	; 0xc4
   2efd4:	ldr	r3, [r3]
   2efd8:	cmp	r3, #0
   2efdc:	addne	ip, ip, r3
   2efe0:	addne	lr, lr, r3
   2efe4:	ldr	r6, [fp]
   2efe8:	cmp	r6, #0
   2efec:	ble	2f020 <GetDataSlab+0xda3c>
   2eff0:	sub	r2, ip, #1
   2eff4:	ldr	r3, [sp, #4]
   2eff8:	ldr	r1, [sp, #12]
   2effc:	add	r1, r3, r1, lsl #2
   2f000:	ldrb	r3, [r2, #1]
   2f004:	str	r3, [r1], #4
   2f008:	ldr	r6, [fp]
   2f00c:	add	r3, r2, #2
   2f010:	sub	r3, r3, ip
   2f014:	add	r2, r2, #1
   2f018:	cmp	r6, r3
   2f01c:	bgt	2f000 <GetDataSlab+0xda1c>
   2f020:	ldr	r3, [sp, #192]	; 0xc0
   2f024:	ldr	r2, [r3]
   2f028:	ldr	r3, [sp, #196]	; 0xc4
   2f02c:	ldr	r3, [r3]
   2f030:	sub	r3, r2, r3
   2f034:	add	lr, lr, r3
   2f038:	add	ip, ip, r3
   2f03c:	cmp	r9, #1
   2f040:	ble	2efb4 <GetDataSlab+0xd9d0>
   2f044:	ldr	r3, [sp, #76]	; 0x4c
   2f048:	add	r3, r3, #1
   2f04c:	str	r3, [sp, #76]	; 0x4c
   2f050:	ldr	r1, [fp, #4]
   2f054:	sdiv	r2, r3, r1
   2f058:	mls	r3, r1, r2, r3
   2f05c:	cmp	r3, #0
   2f060:	bne	2ef9c <GetDataSlab+0xd9b8>
   2f064:	add	r4, sp, #76	; 0x4c
   2f068:	add	r7, fp, #4
   2f06c:	add	r5, sp, #116	; 0x74
   2f070:	ldr	r0, [sp, #28]
   2f074:	b	2ef60 <GetDataSlab+0xd97c>
   2f078:	mov	r3, #0
   2f07c:	b	251fc <GetDataSlab+0x3c18>
   2f080:	ldr	r3, [sp, #196]	; 0xc4
   2f084:	ldr	r2, [r3, r0, lsl #2]
   2f088:	cmp	r2, #0
   2f08c:	beq	2f0a0 <GetDataSlab+0xdabc>
   2f090:	ldr	r3, [r5, #-4]
   2f094:	mul	r3, r3, r2
   2f098:	add	ip, ip, r3
   2f09c:	add	lr, lr, r3
   2f0a0:	add	r0, r0, #1
   2f0a4:	cmp	r9, r0
   2f0a8:	beq	2f130 <GetDataSlab+0xdb4c>
   2f0ac:	ldr	r3, [r4]
   2f0b0:	add	r1, r3, #1
   2f0b4:	str	r1, [r4]
   2f0b8:	ldr	r2, [r7, #4]!
   2f0bc:	sdiv	r3, r1, r2
   2f0c0:	mls	r3, r2, r3, r1
   2f0c4:	cmp	r3, #0
   2f0c8:	bne	2f11c <GetDataSlab+0xdb38>
   2f0cc:	str	r8, [r4], #4
   2f0d0:	add	r5, r5, #4
   2f0d4:	ldr	r2, [r5]
   2f0d8:	sdiv	r3, lr, r2
   2f0dc:	mls	r3, r2, r3, lr
   2f0e0:	cmp	r3, #0
   2f0e4:	beq	2f080 <GetDataSlab+0xda9c>
   2f0e8:	ldr	r1, [r5, #-4]
   2f0ec:	str	r1, [sp, #8]
   2f0f0:	ldr	r1, [sp, #196]	; 0xc4
   2f0f4:	ldr	r1, [r1, r0, lsl #2]
   2f0f8:	str	r1, [sp, #12]
   2f0fc:	sub	r3, r2, r3
   2f100:	mov	r2, r1
   2f104:	ldr	r1, [sp, #8]
   2f108:	mla	r3, r2, r1, r3
   2f10c:	add	ip, ip, r3
   2f110:	add	lr, lr, r3
   2f114:	b	2f0a0 <GetDataSlab+0xdabc>
   2f118:	mov	r0, #1
   2f11c:	add	r3, sp, #152	; 0x98
   2f120:	add	r3, r3, r0, lsl #2
   2f124:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f128:	add	lr, lr, r3
   2f12c:	add	ip, ip, r3
   2f130:	ldr	r3, [sp, #20]
   2f134:	add	r3, r3, r6
   2f138:	str	r3, [sp, #20]
   2f13c:	ldr	r2, [sp, #16]
   2f140:	cmp	r3, r2
   2f144:	bge	2f1fc <GetDataSlab+0xdc18>
   2f148:	ldr	r3, [sp, #196]	; 0xc4
   2f14c:	ldr	r3, [r3]
   2f150:	cmp	r3, #0
   2f154:	addne	ip, ip, r3
   2f158:	addne	lr, lr, r3
   2f15c:	ldr	r6, [fp]
   2f160:	cmp	r6, #0
   2f164:	ble	2f19c <GetDataSlab+0xdbb8>
   2f168:	ldr	r3, [sp, #4]
   2f16c:	ldr	r2, [sp, #20]
   2f170:	add	r2, r3, r2, lsl #2
   2f174:	mov	r3, #0
   2f178:	ldrb	r1, [ip]
   2f17c:	str	r1, [r2], #4
   2f180:	ldr	r1, [sl]
   2f184:	add	ip, ip, r1
   2f188:	add	lr, lr, r1
   2f18c:	add	r3, r3, #1
   2f190:	ldr	r6, [fp]
   2f194:	cmp	r6, r3
   2f198:	bgt	2f178 <GetDataSlab+0xdb94>
   2f19c:	ldr	r3, [sp, #192]	; 0xc0
   2f1a0:	ldr	r2, [r3]
   2f1a4:	ldr	r3, [sp, #196]	; 0xc4
   2f1a8:	ldr	r3, [r3]
   2f1ac:	sub	r3, r2, r3
   2f1b0:	ldr	r2, [sl]
   2f1b4:	mls	r3, r2, r6, r3
   2f1b8:	add	lr, lr, r3
   2f1bc:	add	ip, ip, r3
   2f1c0:	cmp	r9, #1
   2f1c4:	ble	2f130 <GetDataSlab+0xdb4c>
   2f1c8:	ldr	r3, [sp, #76]	; 0x4c
   2f1cc:	add	r3, r3, #1
   2f1d0:	str	r3, [sp, #76]	; 0x4c
   2f1d4:	ldr	r1, [fp, #4]
   2f1d8:	sdiv	r2, r3, r1
   2f1dc:	mls	r3, r1, r2, r3
   2f1e0:	cmp	r3, #0
   2f1e4:	bne	2f118 <GetDataSlab+0xdb34>
   2f1e8:	add	r4, sp, #76	; 0x4c
   2f1ec:	add	r7, fp, #4
   2f1f0:	add	r5, sp, #112	; 0x70
   2f1f4:	mov	r0, #1
   2f1f8:	b	2f0cc <GetDataSlab+0xdae8>
   2f1fc:	mov	r3, #0
   2f200:	b	251fc <GetDataSlab+0x3c18>
   2f204:	cmp	r8, #12
   2f208:	beq	2f264 <GetDataSlab+0xdc80>
   2f20c:	cmp	r8, #13
   2f210:	movne	r3, #1
   2f214:	bne	251fc <GetDataSlab+0x3c18>
   2f218:	ldr	r3, [sl]
   2f21c:	str	r3, [sp, #28]
   2f220:	sub	r3, r3, #1
   2f224:	str	r3, [sp, #32]
   2f228:	ldr	r3, [sp, #192]	; 0xc0
   2f22c:	ldr	r3, [r3]
   2f230:	str	r3, [sp, #112]	; 0x70
   2f234:	ldr	r3, [fp]
   2f238:	str	r3, [sp, #16]
   2f23c:	cmp	r9, #1
   2f240:	ble	2f5b4 <GetDataSlab+0xdfd0>
   2f244:	str	sl, [sp, #20]
   2f248:	add	r8, sp, #36	; 0x24
   2f24c:	ldr	r5, [sp, #192]	; 0xc0
   2f250:	add	r6, sp, #112	; 0x70
   2f254:	str	r5, [sp, #12]
   2f258:	mov	r4, #1
   2f25c:	mov	lr, #0
   2f260:	b	3e0b8 <GetDataSlab+0x1cad4>
   2f264:	ldr	r3, [sl]
   2f268:	str	r3, [sp, #28]
   2f26c:	sub	r3, r3, #1
   2f270:	str	r3, [sp, #32]
   2f274:	ldr	r3, [sp, #192]	; 0xc0
   2f278:	ldr	r3, [r3]
   2f27c:	str	r3, [sp, #112]	; 0x70
   2f280:	ldr	r3, [fp]
   2f284:	str	r3, [sp, #16]
   2f288:	cmp	r9, #1
   2f28c:	ble	2f2b0 <GetDataSlab+0xdccc>
   2f290:	str	sl, [sp, #20]
   2f294:	add	r8, sp, #36	; 0x24
   2f298:	ldr	r5, [sp, #192]	; 0xc0
   2f29c:	add	r6, sp, #112	; 0x70
   2f2a0:	str	r5, [sp, #12]
   2f2a4:	mov	r4, #1
   2f2a8:	mov	lr, #0
   2f2ac:	b	3e1a8 <GetDataSlab+0x1cbc4>
   2f2b0:	mov	lr, #0
   2f2b4:	b	3e240 <GetDataSlab+0x1cc5c>
   2f2b8:	ldr	r3, [sp, #16]
   2f2bc:	cmp	r3, #0
   2f2c0:	ble	3e26c <GetDataSlab+0x1cc88>
   2f2c4:	mov	r3, #0
   2f2c8:	str	r3, [sp, #12]
   2f2cc:	mov	r8, r3
   2f2d0:	b	2f394 <GetDataSlab+0xddb0>
   2f2d4:	ldr	r3, [sp, #196]	; 0xc4
   2f2d8:	ldr	r2, [r3, r0, lsl #2]
   2f2dc:	cmp	r2, #0
   2f2e0:	beq	2f2f4 <GetDataSlab+0xdd10>
   2f2e4:	ldr	r3, [r5, #-4]
   2f2e8:	mul	r3, r3, r2
   2f2ec:	add	ip, ip, r3, lsl #3
   2f2f0:	add	lr, lr, r3
   2f2f4:	add	r0, r0, #1
   2f2f8:	cmp	r9, r0
   2f2fc:	beq	2f378 <GetDataSlab+0xdd94>
   2f300:	ldr	r3, [r4]
   2f304:	add	r1, r3, #1
   2f308:	str	r1, [r4]
   2f30c:	ldr	r2, [r7, #4]!
   2f310:	sdiv	r3, r1, r2
   2f314:	mls	r3, r2, r3, r1
   2f318:	cmp	r3, #0
   2f31c:	bne	2f364 <GetDataSlab+0xdd80>
   2f320:	str	r8, [r4], #4
   2f324:	add	r5, r5, #4
   2f328:	ldr	r2, [r5]
   2f32c:	sdiv	r3, lr, r2
   2f330:	mls	r3, r2, r3, lr
   2f334:	cmp	r3, #0
   2f338:	beq	2f2d4 <GetDataSlab+0xdcf0>
   2f33c:	ldr	r1, [r5, #-4]
   2f340:	ldr	sl, [sp, #196]	; 0xc4
   2f344:	ldr	sl, [sl, r0, lsl #2]
   2f348:	str	sl, [sp, #8]
   2f34c:	sub	r3, r2, r3
   2f350:	mla	r3, sl, r1, r3
   2f354:	add	ip, ip, r3, lsl #3
   2f358:	add	lr, lr, r3
   2f35c:	b	2f2f4 <GetDataSlab+0xdd10>
   2f360:	ldr	r0, [sp, #28]
   2f364:	add	r3, sp, #152	; 0x98
   2f368:	add	r3, r3, r0, lsl #2
   2f36c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f370:	add	lr, lr, r3
   2f374:	add	ip, ip, r3, lsl #3
   2f378:	ldr	r3, [sp, #12]
   2f37c:	add	r3, r3, r6
   2f380:	str	r3, [sp, #12]
   2f384:	ldr	r3, [sp, #16]
   2f388:	ldr	r2, [sp, #12]
   2f38c:	cmp	r2, r3
   2f390:	bge	3e26c <GetDataSlab+0x1cc88>
   2f394:	ldr	r3, [sp, #196]	; 0xc4
   2f398:	ldr	r3, [r3]
   2f39c:	cmp	r3, #0
   2f3a0:	addne	ip, ip, r3, lsl #3
   2f3a4:	addne	lr, lr, r3
   2f3a8:	ldr	r6, [fp]
   2f3ac:	cmp	r6, #0
   2f3b0:	ble	2f3e0 <GetDataSlab+0xddfc>
   2f3b4:	sub	r0, ip, #8
   2f3b8:	ldr	r3, [sp, #4]
   2f3bc:	ldr	r2, [sp, #12]
   2f3c0:	add	r1, r3, r2, lsl #2
   2f3c4:	mov	r2, #0
   2f3c8:	ldr	r3, [r0, #8]!
   2f3cc:	str	r3, [r1], #4
   2f3d0:	add	r2, r2, #1
   2f3d4:	ldr	r6, [fp]
   2f3d8:	cmp	r6, r2
   2f3dc:	bgt	2f3c8 <GetDataSlab+0xdde4>
   2f3e0:	ldr	r3, [sp, #192]	; 0xc0
   2f3e4:	ldr	r2, [r3]
   2f3e8:	ldr	r3, [sp, #196]	; 0xc4
   2f3ec:	ldr	r3, [r3]
   2f3f0:	sub	r3, r2, r3
   2f3f4:	add	lr, lr, r3
   2f3f8:	add	ip, ip, r3, lsl #3
   2f3fc:	cmp	r9, #1
   2f400:	ble	2f378 <GetDataSlab+0xdd94>
   2f404:	ldr	r3, [sp, #76]	; 0x4c
   2f408:	add	r3, r3, #1
   2f40c:	str	r3, [sp, #76]	; 0x4c
   2f410:	ldr	r1, [fp, #4]
   2f414:	sdiv	r2, r3, r1
   2f418:	mls	r3, r1, r2, r3
   2f41c:	cmp	r3, #0
   2f420:	bne	2f360 <GetDataSlab+0xdd7c>
   2f424:	add	r4, sp, #76	; 0x4c
   2f428:	add	r7, fp, #4
   2f42c:	add	r5, sp, #112	; 0x70
   2f430:	ldr	r0, [sp, #28]
   2f434:	b	2f320 <GetDataSlab+0xdd3c>
   2f438:	ldr	r3, [sp, #196]	; 0xc4
   2f43c:	ldr	r2, [r3, r0, lsl #2]
   2f440:	cmp	r2, #0
   2f444:	beq	2f458 <GetDataSlab+0xde74>
   2f448:	ldr	r3, [r5, #-4]
   2f44c:	mul	r3, r3, r2
   2f450:	add	ip, ip, r3, lsl #3
   2f454:	add	lr, lr, r3
   2f458:	add	r0, r0, #1
   2f45c:	cmp	r9, r0
   2f460:	beq	2f4e8 <GetDataSlab+0xdf04>
   2f464:	ldr	r3, [r4]
   2f468:	add	r1, r3, #1
   2f46c:	str	r1, [r4]
   2f470:	ldr	r2, [r7, #4]!
   2f474:	sdiv	r3, r1, r2
   2f478:	mls	r3, r2, r3, r1
   2f47c:	cmp	r3, #0
   2f480:	bne	2f4d4 <GetDataSlab+0xdef0>
   2f484:	str	r8, [r4], #4
   2f488:	add	r5, r5, #4
   2f48c:	ldr	r2, [r5]
   2f490:	sdiv	r3, lr, r2
   2f494:	mls	r3, r2, r3, lr
   2f498:	cmp	r3, #0
   2f49c:	beq	2f438 <GetDataSlab+0xde54>
   2f4a0:	ldr	r1, [r5, #-4]
   2f4a4:	str	r1, [sp, #8]
   2f4a8:	ldr	r1, [sp, #196]	; 0xc4
   2f4ac:	ldr	r1, [r1, r0, lsl #2]
   2f4b0:	str	r1, [sp, #12]
   2f4b4:	sub	r3, r2, r3
   2f4b8:	mov	r2, r1
   2f4bc:	ldr	r1, [sp, #8]
   2f4c0:	mla	r3, r2, r1, r3
   2f4c4:	add	ip, ip, r3, lsl #3
   2f4c8:	add	lr, lr, r3
   2f4cc:	b	2f458 <GetDataSlab+0xde74>
   2f4d0:	mov	r0, #1
   2f4d4:	add	r3, sp, #152	; 0x98
   2f4d8:	add	r3, r3, r0, lsl #2
   2f4dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f4e0:	add	lr, lr, r3
   2f4e4:	add	ip, ip, r3, lsl #3
   2f4e8:	ldr	r3, [sp, #20]
   2f4ec:	add	r3, r3, r6
   2f4f0:	str	r3, [sp, #20]
   2f4f4:	ldr	r2, [sp, #16]
   2f4f8:	cmp	r3, r2
   2f4fc:	bge	3e26c <GetDataSlab+0x1cc88>
   2f500:	ldr	r3, [sp, #196]	; 0xc4
   2f504:	ldr	r3, [r3]
   2f508:	cmp	r3, #0
   2f50c:	addne	ip, ip, r3, lsl #3
   2f510:	addne	lr, lr, r3
   2f514:	ldr	r6, [fp]
   2f518:	cmp	r6, #0
   2f51c:	ble	2f554 <GetDataSlab+0xdf70>
   2f520:	ldr	r3, [sp, #4]
   2f524:	ldr	r2, [sp, #20]
   2f528:	add	r2, r3, r2, lsl #2
   2f52c:	mov	r3, #0
   2f530:	ldr	r1, [ip]
   2f534:	str	r1, [r2], #4
   2f538:	ldr	r1, [sl]
   2f53c:	add	ip, ip, r1, lsl #3
   2f540:	add	lr, lr, r1
   2f544:	add	r3, r3, #1
   2f548:	ldr	r6, [fp]
   2f54c:	cmp	r6, r3
   2f550:	bgt	2f530 <GetDataSlab+0xdf4c>
   2f554:	ldr	r3, [sp, #192]	; 0xc0
   2f558:	ldr	r2, [r3]
   2f55c:	ldr	r3, [sp, #196]	; 0xc4
   2f560:	ldr	r3, [r3]
   2f564:	sub	r3, r2, r3
   2f568:	ldr	r2, [sl]
   2f56c:	mls	r3, r2, r6, r3
   2f570:	add	lr, lr, r3
   2f574:	add	ip, ip, r3, lsl #3
   2f578:	cmp	r9, #1
   2f57c:	ble	2f4e8 <GetDataSlab+0xdf04>
   2f580:	ldr	r3, [sp, #76]	; 0x4c
   2f584:	add	r3, r3, #1
   2f588:	str	r3, [sp, #76]	; 0x4c
   2f58c:	ldr	r1, [fp, #4]
   2f590:	sdiv	r2, r3, r1
   2f594:	mls	r3, r1, r2, r3
   2f598:	cmp	r3, #0
   2f59c:	bne	2f4d0 <GetDataSlab+0xdeec>
   2f5a0:	add	r4, sp, #76	; 0x4c
   2f5a4:	add	r7, fp, #4
   2f5a8:	add	r5, sp, #112	; 0x70
   2f5ac:	mov	r0, #1
   2f5b0:	b	2f484 <GetDataSlab+0xdea0>
   2f5b4:	mov	lr, #0
   2f5b8:	b	3e150 <GetDataSlab+0x1cb6c>
   2f5bc:	ldr	r3, [sp, #16]
   2f5c0:	cmp	r3, #0
   2f5c4:	ble	3a41c <GetDataSlab+0x18e38>
   2f5c8:	mov	r3, #0
   2f5cc:	str	r3, [sp, #12]
   2f5d0:	mov	r8, r3
   2f5d4:	b	2f698 <GetDataSlab+0xe0b4>
   2f5d8:	ldr	r3, [sp, #196]	; 0xc4
   2f5dc:	ldr	r2, [r3, r0, lsl #2]
   2f5e0:	cmp	r2, #0
   2f5e4:	beq	2f5f8 <GetDataSlab+0xe014>
   2f5e8:	ldr	r3, [r5, #-4]
   2f5ec:	mul	r3, r3, r2
   2f5f0:	add	ip, ip, r3, lsl #3
   2f5f4:	add	lr, lr, r3
   2f5f8:	add	r0, r0, #1
   2f5fc:	cmp	r9, r0
   2f600:	beq	2f67c <GetDataSlab+0xe098>
   2f604:	ldr	r3, [r4]
   2f608:	add	r1, r3, #1
   2f60c:	str	r1, [r4]
   2f610:	ldr	r2, [r7, #4]!
   2f614:	sdiv	r3, r1, r2
   2f618:	mls	r3, r2, r3, r1
   2f61c:	cmp	r3, #0
   2f620:	bne	2f668 <GetDataSlab+0xe084>
   2f624:	str	r8, [r4], #4
   2f628:	add	r5, r5, #4
   2f62c:	ldr	r2, [r5]
   2f630:	sdiv	r3, lr, r2
   2f634:	mls	r3, r2, r3, lr
   2f638:	cmp	r3, #0
   2f63c:	beq	2f5d8 <GetDataSlab+0xdff4>
   2f640:	ldr	r1, [r5, #-4]
   2f644:	ldr	sl, [sp, #196]	; 0xc4
   2f648:	ldr	sl, [sl, r0, lsl #2]
   2f64c:	str	sl, [sp, #8]
   2f650:	sub	r3, r2, r3
   2f654:	mla	r3, sl, r1, r3
   2f658:	add	ip, ip, r3, lsl #3
   2f65c:	add	lr, lr, r3
   2f660:	b	2f5f8 <GetDataSlab+0xe014>
   2f664:	ldr	r0, [sp, #28]
   2f668:	add	r3, sp, #152	; 0x98
   2f66c:	add	r3, r3, r0, lsl #2
   2f670:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f674:	add	lr, lr, r3
   2f678:	add	ip, ip, r3, lsl #3
   2f67c:	ldr	r3, [sp, #12]
   2f680:	add	r3, r3, r6
   2f684:	str	r3, [sp, #12]
   2f688:	ldr	r3, [sp, #16]
   2f68c:	ldr	r2, [sp, #12]
   2f690:	cmp	r2, r3
   2f694:	bge	2f73c <GetDataSlab+0xe158>
   2f698:	ldr	r3, [sp, #196]	; 0xc4
   2f69c:	ldr	r3, [r3]
   2f6a0:	cmp	r3, #0
   2f6a4:	addne	ip, ip, r3, lsl #3
   2f6a8:	addne	lr, lr, r3
   2f6ac:	ldr	r6, [fp]
   2f6b0:	cmp	r6, #0
   2f6b4:	ble	2f6e4 <GetDataSlab+0xe100>
   2f6b8:	sub	r0, ip, #8
   2f6bc:	ldr	r3, [sp, #4]
   2f6c0:	ldr	r2, [sp, #12]
   2f6c4:	add	r1, r3, r2, lsl #2
   2f6c8:	mov	r2, #0
   2f6cc:	ldr	r3, [r0, #8]!
   2f6d0:	str	r3, [r1], #4
   2f6d4:	add	r2, r2, #1
   2f6d8:	ldr	r6, [fp]
   2f6dc:	cmp	r6, r2
   2f6e0:	bgt	2f6cc <GetDataSlab+0xe0e8>
   2f6e4:	ldr	r3, [sp, #192]	; 0xc0
   2f6e8:	ldr	r2, [r3]
   2f6ec:	ldr	r3, [sp, #196]	; 0xc4
   2f6f0:	ldr	r3, [r3]
   2f6f4:	sub	r3, r2, r3
   2f6f8:	add	lr, lr, r3
   2f6fc:	add	ip, ip, r3, lsl #3
   2f700:	cmp	r9, #1
   2f704:	ble	2f67c <GetDataSlab+0xe098>
   2f708:	ldr	r3, [sp, #76]	; 0x4c
   2f70c:	add	r3, r3, #1
   2f710:	str	r3, [sp, #76]	; 0x4c
   2f714:	ldr	r1, [fp, #4]
   2f718:	sdiv	r2, r3, r1
   2f71c:	mls	r3, r1, r2, r3
   2f720:	cmp	r3, #0
   2f724:	bne	2f664 <GetDataSlab+0xe080>
   2f728:	add	r4, sp, #76	; 0x4c
   2f72c:	add	r7, fp, #4
   2f730:	add	r5, sp, #112	; 0x70
   2f734:	ldr	r0, [sp, #28]
   2f738:	b	2f624 <GetDataSlab+0xe040>
   2f73c:	mov	r3, #0
   2f740:	b	251fc <GetDataSlab+0x3c18>
   2f744:	ldr	r3, [sp, #196]	; 0xc4
   2f748:	ldr	r2, [r3, r0, lsl #2]
   2f74c:	cmp	r2, #0
   2f750:	beq	2f764 <GetDataSlab+0xe180>
   2f754:	ldr	r3, [r5, #-4]
   2f758:	mul	r3, r3, r2
   2f75c:	add	ip, ip, r3, lsl #3
   2f760:	add	lr, lr, r3
   2f764:	add	r0, r0, #1
   2f768:	cmp	r9, r0
   2f76c:	beq	2f7f4 <GetDataSlab+0xe210>
   2f770:	ldr	r3, [r4]
   2f774:	add	r1, r3, #1
   2f778:	str	r1, [r4]
   2f77c:	ldr	r2, [r7, #4]!
   2f780:	sdiv	r3, r1, r2
   2f784:	mls	r3, r2, r3, r1
   2f788:	cmp	r3, #0
   2f78c:	bne	2f7e0 <GetDataSlab+0xe1fc>
   2f790:	str	r8, [r4], #4
   2f794:	add	r5, r5, #4
   2f798:	ldr	r2, [r5]
   2f79c:	sdiv	r3, lr, r2
   2f7a0:	mls	r3, r2, r3, lr
   2f7a4:	cmp	r3, #0
   2f7a8:	beq	2f744 <GetDataSlab+0xe160>
   2f7ac:	ldr	r1, [r5, #-4]
   2f7b0:	str	r1, [sp, #8]
   2f7b4:	ldr	r1, [sp, #196]	; 0xc4
   2f7b8:	ldr	r1, [r1, r0, lsl #2]
   2f7bc:	str	r1, [sp, #12]
   2f7c0:	sub	r3, r2, r3
   2f7c4:	mov	r2, r1
   2f7c8:	ldr	r1, [sp, #8]
   2f7cc:	mla	r3, r2, r1, r3
   2f7d0:	add	ip, ip, r3, lsl #3
   2f7d4:	add	lr, lr, r3
   2f7d8:	b	2f764 <GetDataSlab+0xe180>
   2f7dc:	mov	r0, #1
   2f7e0:	add	r3, sp, #152	; 0x98
   2f7e4:	add	r3, r3, r0, lsl #2
   2f7e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   2f7ec:	add	lr, lr, r3
   2f7f0:	add	ip, ip, r3, lsl #3
   2f7f4:	ldr	r3, [sp, #20]
   2f7f8:	add	r3, r3, r6
   2f7fc:	str	r3, [sp, #20]
   2f800:	ldr	r2, [sp, #16]
   2f804:	cmp	r3, r2
   2f808:	bge	2f8c0 <GetDataSlab+0xe2dc>
   2f80c:	ldr	r3, [sp, #196]	; 0xc4
   2f810:	ldr	r3, [r3]
   2f814:	cmp	r3, #0
   2f818:	addne	ip, ip, r3, lsl #3
   2f81c:	addne	lr, lr, r3
   2f820:	ldr	r6, [fp]
   2f824:	cmp	r6, #0
   2f828:	ble	2f860 <GetDataSlab+0xe27c>
   2f82c:	ldr	r3, [sp, #4]
   2f830:	ldr	r2, [sp, #20]
   2f834:	add	r2, r3, r2, lsl #2
   2f838:	mov	r3, #0
   2f83c:	ldr	r1, [ip]
   2f840:	str	r1, [r2], #4
   2f844:	ldr	r1, [sl]
   2f848:	add	ip, ip, r1, lsl #3
   2f84c:	add	lr, lr, r1
   2f850:	add	r3, r3, #1
   2f854:	ldr	r6, [fp]
   2f858:	cmp	r6, r3
   2f85c:	bgt	2f83c <GetDataSlab+0xe258>
   2f860:	ldr	r3, [sp, #192]	; 0xc0
   2f864:	ldr	r2, [r3]
   2f868:	ldr	r3, [sp, #196]	; 0xc4
   2f86c:	ldr	r3, [r3]
   2f870:	sub	r3, r2, r3
   2f874:	ldr	r2, [sl]
   2f878:	mls	r3, r2, r6, r3
   2f87c:	add	lr, lr, r3
   2f880:	add	ip, ip, r3, lsl #3
   2f884:	cmp	r9, #1
   2f888:	ble	2f7f4 <GetDataSlab+0xe210>
   2f88c:	ldr	r3, [sp, #76]	; 0x4c
   2f890:	add	r3, r3, #1
   2f894:	str	r3, [sp, #76]	; 0x4c
   2f898:	ldr	r1, [fp, #4]
   2f89c:	sdiv	r2, r3, r1
   2f8a0:	mls	r3, r1, r2, r3
   2f8a4:	cmp	r3, #0
   2f8a8:	bne	2f7dc <GetDataSlab+0xe1f8>
   2f8ac:	add	r4, sp, #76	; 0x4c
   2f8b0:	add	r7, fp, #4
   2f8b4:	add	r5, sp, #112	; 0x70
   2f8b8:	mov	r0, #1
   2f8bc:	b	2f790 <GetDataSlab+0xe1ac>
   2f8c0:	mov	r3, #0
   2f8c4:	b	251fc <GetDataSlab+0x3c18>
   2f8c8:	sub	r3, r8, #1
   2f8cc:	cmp	r3, #8
   2f8d0:	addls	pc, pc, r3, lsl #2
   2f8d4:	b	313f0 <GetDataSlab+0xfe0c>
   2f8d8:	b	30d34 <GetDataSlab+0xf750>
   2f8dc:	b	31090 <GetDataSlab+0xfaac>
   2f8e0:	b	3067c <GetDataSlab+0xf098>
   2f8e4:	b	309d8 <GetDataSlab+0xf3f4>
   2f8e8:	b	2ffc4 <GetDataSlab+0xe9e0>
   2f8ec:	b	30320 <GetDataSlab+0xed3c>
   2f8f0:	b	2fc60 <GetDataSlab+0xe67c>
   2f8f4:	b	313f0 <GetDataSlab+0xfe0c>
   2f8f8:	b	2f8fc <GetDataSlab+0xe318>
   2f8fc:	ldr	r3, [sl]
   2f900:	str	r3, [sp, #28]
   2f904:	sub	r3, r3, #1
   2f908:	str	r3, [sp, #32]
   2f90c:	ldr	r3, [sp, #192]	; 0xc0
   2f910:	ldr	r3, [r3]
   2f914:	str	r3, [sp, #112]	; 0x70
   2f918:	ldr	r3, [fp]
   2f91c:	str	r3, [sp, #16]
   2f920:	cmp	r9, #1
   2f924:	ble	2f948 <GetDataSlab+0xe364>
   2f928:	str	sl, [sp, #20]
   2f92c:	add	r8, sp, #36	; 0x24
   2f930:	ldr	r5, [sp, #192]	; 0xc0
   2f934:	add	r6, sp, #112	; 0x70
   2f938:	str	r5, [sp, #12]
   2f93c:	mov	r4, #1
   2f940:	mov	lr, #0
   2f944:	b	3f288 <GetDataSlab+0x1dca4>
   2f948:	mov	lr, #0
   2f94c:	b	3f320 <GetDataSlab+0x1dd3c>
   2f950:	ldr	r3, [sp, #16]
   2f954:	cmp	r3, #0
   2f958:	ble	3a424 <GetDataSlab+0x18e40>
   2f95c:	mov	r3, #0
   2f960:	str	r3, [sp, #12]
   2f964:	mov	r8, r3
   2f968:	b	2fa28 <GetDataSlab+0xe444>
   2f96c:	ldr	r3, [sp, #196]	; 0xc4
   2f970:	ldr	r3, [r3, r0, lsl #2]
   2f974:	cmp	r3, #0
   2f978:	beq	2f98c <GetDataSlab+0xe3a8>
   2f97c:	ldr	r2, [r5, #-8]
   2f980:	mul	r3, r2, r3
   2f984:	add	ip, ip, r3, lsl #3
   2f988:	add	lr, lr, r3
   2f98c:	add	r0, r0, #1
   2f990:	cmp	r9, r0
   2f994:	beq	2fa0c <GetDataSlab+0xe428>
   2f998:	ldr	r3, [r4]
   2f99c:	add	r1, r3, #1
   2f9a0:	str	r1, [r4]
   2f9a4:	ldr	r2, [r7, #4]!
   2f9a8:	sdiv	r3, r1, r2
   2f9ac:	mls	r3, r2, r3, r1
   2f9b0:	cmp	r3, #0
   2f9b4:	bne	2f9f8 <GetDataSlab+0xe414>
   2f9b8:	str	r8, [r4], #4
   2f9bc:	ldr	r2, [r5], #4
   2f9c0:	sdiv	r3, lr, r2
   2f9c4:	mls	r3, r2, r3, lr
   2f9c8:	cmp	r3, #0
   2f9cc:	beq	2f96c <GetDataSlab+0xe388>
   2f9d0:	ldr	r1, [r5, #-8]
   2f9d4:	ldr	sl, [sp, #196]	; 0xc4
   2f9d8:	ldr	sl, [sl, r0, lsl #2]
   2f9dc:	str	sl, [sp, #8]
   2f9e0:	sub	r3, r2, r3
   2f9e4:	mla	r3, sl, r1, r3
   2f9e8:	add	ip, ip, r3, lsl #3
   2f9ec:	add	lr, lr, r3
   2f9f0:	b	2f98c <GetDataSlab+0xe3a8>
   2f9f4:	ldr	r0, [sp, #28]
   2f9f8:	add	r3, sp, #152	; 0x98
   2f9fc:	add	r3, r3, r0, lsl #2
   2fa00:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fa04:	add	lr, lr, r3
   2fa08:	add	ip, ip, r3, lsl #3
   2fa0c:	ldr	r3, [sp, #12]
   2fa10:	add	r3, r3, r6
   2fa14:	str	r3, [sp, #12]
   2fa18:	ldr	r3, [sp, #16]
   2fa1c:	ldr	r2, [sp, #12]
   2fa20:	cmp	r2, r3
   2fa24:	bge	2fad0 <GetDataSlab+0xe4ec>
   2fa28:	ldr	r3, [sp, #196]	; 0xc4
   2fa2c:	ldr	r3, [r3]
   2fa30:	cmp	r3, #0
   2fa34:	addne	ip, ip, r3, lsl #3
   2fa38:	addne	lr, lr, r3
   2fa3c:	ldr	r6, [fp]
   2fa40:	cmp	r6, #0
   2fa44:	ble	2fa78 <GetDataSlab+0xe494>
   2fa48:	mov	r1, ip
   2fa4c:	ldr	r3, [sp, #4]
   2fa50:	ldr	r2, [sp, #12]
   2fa54:	add	r2, r3, r2, lsl #2
   2fa58:	mov	r3, #0
   2fa5c:	vldmia	r1!, {d7}
   2fa60:	vcvt.u32.f64	s15, d7
   2fa64:	vstmia	r2!, {s15}
   2fa68:	add	r3, r3, #1
   2fa6c:	ldr	r6, [fp]
   2fa70:	cmp	r6, r3
   2fa74:	bgt	2fa5c <GetDataSlab+0xe478>
   2fa78:	ldr	r3, [sp, #192]	; 0xc0
   2fa7c:	ldr	r2, [r3]
   2fa80:	ldr	r3, [sp, #196]	; 0xc4
   2fa84:	ldr	r3, [r3]
   2fa88:	sub	r3, r2, r3
   2fa8c:	add	lr, lr, r3
   2fa90:	add	ip, ip, r3, lsl #3
   2fa94:	cmp	r9, #1
   2fa98:	ble	2fa0c <GetDataSlab+0xe428>
   2fa9c:	ldr	r3, [sp, #76]	; 0x4c
   2faa0:	add	r3, r3, #1
   2faa4:	str	r3, [sp, #76]	; 0x4c
   2faa8:	ldr	r1, [fp, #4]
   2faac:	sdiv	r2, r3, r1
   2fab0:	mls	r3, r1, r2, r3
   2fab4:	cmp	r3, #0
   2fab8:	bne	2f9f4 <GetDataSlab+0xe410>
   2fabc:	add	r4, sp, #76	; 0x4c
   2fac0:	add	r7, fp, #4
   2fac4:	add	r5, sp, #116	; 0x74
   2fac8:	ldr	r0, [sp, #28]
   2facc:	b	2f9b8 <GetDataSlab+0xe3d4>
   2fad0:	mov	r3, #0
   2fad4:	b	251fc <GetDataSlab+0x3c18>
   2fad8:	ldr	r3, [sp, #196]	; 0xc4
   2fadc:	ldr	r2, [r3, r0, lsl #2]
   2fae0:	cmp	r2, #0
   2fae4:	beq	2faf8 <GetDataSlab+0xe514>
   2fae8:	ldr	r3, [r5, #-4]
   2faec:	mul	r3, r3, r2
   2faf0:	add	ip, ip, r3, lsl #3
   2faf4:	add	lr, lr, r3
   2faf8:	add	r0, r0, #1
   2fafc:	cmp	r9, r0
   2fb00:	beq	2fb88 <GetDataSlab+0xe5a4>
   2fb04:	ldr	r3, [r4]
   2fb08:	add	r1, r3, #1
   2fb0c:	str	r1, [r4]
   2fb10:	ldr	r2, [r7, #4]!
   2fb14:	sdiv	r3, r1, r2
   2fb18:	mls	r3, r2, r3, r1
   2fb1c:	cmp	r3, #0
   2fb20:	bne	2fb74 <GetDataSlab+0xe590>
   2fb24:	str	r8, [r4], #4
   2fb28:	add	r5, r5, #4
   2fb2c:	ldr	r2, [r5]
   2fb30:	sdiv	r3, lr, r2
   2fb34:	mls	r3, r2, r3, lr
   2fb38:	cmp	r3, #0
   2fb3c:	beq	2fad8 <GetDataSlab+0xe4f4>
   2fb40:	ldr	r1, [r5, #-4]
   2fb44:	str	r1, [sp, #8]
   2fb48:	ldr	r1, [sp, #196]	; 0xc4
   2fb4c:	ldr	r1, [r1, r0, lsl #2]
   2fb50:	str	r1, [sp, #12]
   2fb54:	sub	r3, r2, r3
   2fb58:	mov	r2, r1
   2fb5c:	ldr	r1, [sp, #8]
   2fb60:	mla	r3, r2, r1, r3
   2fb64:	add	ip, ip, r3, lsl #3
   2fb68:	add	lr, lr, r3
   2fb6c:	b	2faf8 <GetDataSlab+0xe514>
   2fb70:	mov	r0, #1
   2fb74:	add	r3, sp, #152	; 0x98
   2fb78:	add	r3, r3, r0, lsl #2
   2fb7c:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fb80:	add	lr, lr, r3
   2fb84:	add	ip, ip, r3, lsl #3
   2fb88:	ldr	r3, [sp, #20]
   2fb8c:	add	r3, r3, r6
   2fb90:	str	r3, [sp, #20]
   2fb94:	ldr	r2, [sp, #16]
   2fb98:	cmp	r3, r2
   2fb9c:	bge	2fc58 <GetDataSlab+0xe674>
   2fba0:	ldr	r3, [sp, #196]	; 0xc4
   2fba4:	ldr	r3, [r3]
   2fba8:	cmp	r3, #0
   2fbac:	addne	ip, ip, r3, lsl #3
   2fbb0:	addne	lr, lr, r3
   2fbb4:	ldr	r6, [fp]
   2fbb8:	cmp	r6, #0
   2fbbc:	ble	2fbf8 <GetDataSlab+0xe614>
   2fbc0:	ldr	r3, [sp, #4]
   2fbc4:	ldr	r2, [sp, #20]
   2fbc8:	add	r2, r3, r2, lsl #2
   2fbcc:	mov	r3, #0
   2fbd0:	vldr	d7, [ip]
   2fbd4:	vcvt.u32.f64	s15, d7
   2fbd8:	vstmia	r2!, {s15}
   2fbdc:	ldr	r1, [sl]
   2fbe0:	add	ip, ip, r1, lsl #3
   2fbe4:	add	lr, lr, r1
   2fbe8:	add	r3, r3, #1
   2fbec:	ldr	r6, [fp]
   2fbf0:	cmp	r6, r3
   2fbf4:	bgt	2fbd0 <GetDataSlab+0xe5ec>
   2fbf8:	ldr	r3, [sp, #192]	; 0xc0
   2fbfc:	ldr	r2, [r3]
   2fc00:	ldr	r3, [sp, #196]	; 0xc4
   2fc04:	ldr	r3, [r3]
   2fc08:	sub	r3, r2, r3
   2fc0c:	ldr	r2, [sl]
   2fc10:	mls	r3, r2, r6, r3
   2fc14:	add	lr, lr, r3
   2fc18:	add	ip, ip, r3, lsl #3
   2fc1c:	cmp	r9, #1
   2fc20:	ble	2fb88 <GetDataSlab+0xe5a4>
   2fc24:	ldr	r3, [sp, #76]	; 0x4c
   2fc28:	add	r3, r3, #1
   2fc2c:	str	r3, [sp, #76]	; 0x4c
   2fc30:	ldr	r1, [fp, #4]
   2fc34:	sdiv	r2, r3, r1
   2fc38:	mls	r3, r1, r2, r3
   2fc3c:	cmp	r3, #0
   2fc40:	bne	2fb70 <GetDataSlab+0xe58c>
   2fc44:	add	r4, sp, #76	; 0x4c
   2fc48:	add	r7, fp, #4
   2fc4c:	add	r5, sp, #112	; 0x70
   2fc50:	mov	r0, #1
   2fc54:	b	2fb24 <GetDataSlab+0xe540>
   2fc58:	mov	r3, #0
   2fc5c:	b	251fc <GetDataSlab+0x3c18>
   2fc60:	ldr	r3, [sl]
   2fc64:	str	r3, [sp, #28]
   2fc68:	sub	r3, r3, #1
   2fc6c:	str	r3, [sp, #32]
   2fc70:	ldr	r3, [sp, #192]	; 0xc0
   2fc74:	ldr	r3, [r3]
   2fc78:	str	r3, [sp, #112]	; 0x70
   2fc7c:	ldr	r3, [fp]
   2fc80:	str	r3, [sp, #16]
   2fc84:	cmp	r9, #1
   2fc88:	ble	2fcac <GetDataSlab+0xe6c8>
   2fc8c:	str	sl, [sp, #20]
   2fc90:	add	r8, sp, #36	; 0x24
   2fc94:	ldr	r5, [sp, #192]	; 0xc0
   2fc98:	add	r6, sp, #112	; 0x70
   2fc9c:	str	r5, [sp, #12]
   2fca0:	mov	r4, #1
   2fca4:	mov	lr, #0
   2fca8:	b	3f198 <GetDataSlab+0x1dbb4>
   2fcac:	mov	lr, #0
   2fcb0:	b	3f230 <GetDataSlab+0x1dc4c>
   2fcb4:	ldr	r3, [sp, #16]
   2fcb8:	cmp	r3, #0
   2fcbc:	ble	3a42c <GetDataSlab+0x18e48>
   2fcc0:	mov	r3, #0
   2fcc4:	str	r3, [sp, #12]
   2fcc8:	mov	r8, r3
   2fccc:	b	2fd8c <GetDataSlab+0xe7a8>
   2fcd0:	ldr	r3, [sp, #196]	; 0xc4
   2fcd4:	ldr	r3, [r3, r0, lsl #2]
   2fcd8:	cmp	r3, #0
   2fcdc:	beq	2fcf0 <GetDataSlab+0xe70c>
   2fce0:	ldr	r2, [r5, #-8]
   2fce4:	mul	r3, r2, r3
   2fce8:	add	ip, ip, r3, lsl #2
   2fcec:	add	lr, lr, r3
   2fcf0:	add	r0, r0, #1
   2fcf4:	cmp	r9, r0
   2fcf8:	beq	2fd70 <GetDataSlab+0xe78c>
   2fcfc:	ldr	r3, [r4]
   2fd00:	add	r1, r3, #1
   2fd04:	str	r1, [r4]
   2fd08:	ldr	r2, [r7, #4]!
   2fd0c:	sdiv	r3, r1, r2
   2fd10:	mls	r3, r2, r3, r1
   2fd14:	cmp	r3, #0
   2fd18:	bne	2fd5c <GetDataSlab+0xe778>
   2fd1c:	str	r8, [r4], #4
   2fd20:	ldr	r2, [r5], #4
   2fd24:	sdiv	r3, lr, r2
   2fd28:	mls	r3, r2, r3, lr
   2fd2c:	cmp	r3, #0
   2fd30:	beq	2fcd0 <GetDataSlab+0xe6ec>
   2fd34:	ldr	r1, [r5, #-8]
   2fd38:	ldr	sl, [sp, #196]	; 0xc4
   2fd3c:	ldr	sl, [sl, r0, lsl #2]
   2fd40:	str	sl, [sp, #8]
   2fd44:	sub	r3, r2, r3
   2fd48:	mla	r3, sl, r1, r3
   2fd4c:	add	ip, ip, r3, lsl #2
   2fd50:	add	lr, lr, r3
   2fd54:	b	2fcf0 <GetDataSlab+0xe70c>
   2fd58:	ldr	r0, [sp, #28]
   2fd5c:	add	r3, sp, #152	; 0x98
   2fd60:	add	r3, r3, r0, lsl #2
   2fd64:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fd68:	add	lr, lr, r3
   2fd6c:	add	ip, ip, r3, lsl #2
   2fd70:	ldr	r3, [sp, #12]
   2fd74:	add	r3, r3, r6
   2fd78:	str	r3, [sp, #12]
   2fd7c:	ldr	r3, [sp, #16]
   2fd80:	ldr	r2, [sp, #12]
   2fd84:	cmp	r2, r3
   2fd88:	bge	2fe34 <GetDataSlab+0xe850>
   2fd8c:	ldr	r3, [sp, #196]	; 0xc4
   2fd90:	ldr	r3, [r3]
   2fd94:	cmp	r3, #0
   2fd98:	addne	ip, ip, r3, lsl #2
   2fd9c:	addne	lr, lr, r3
   2fda0:	ldr	r6, [fp]
   2fda4:	cmp	r6, #0
   2fda8:	ble	2fddc <GetDataSlab+0xe7f8>
   2fdac:	mov	r1, ip
   2fdb0:	ldr	r3, [sp, #4]
   2fdb4:	ldr	r2, [sp, #12]
   2fdb8:	add	r2, r3, r2, lsl #2
   2fdbc:	mov	r3, #0
   2fdc0:	vldmia	r1!, {s15}
   2fdc4:	vcvt.u32.f32	s15, s15
   2fdc8:	vstmia	r2!, {s15}
   2fdcc:	add	r3, r3, #1
   2fdd0:	ldr	r6, [fp]
   2fdd4:	cmp	r6, r3
   2fdd8:	bgt	2fdc0 <GetDataSlab+0xe7dc>
   2fddc:	ldr	r3, [sp, #192]	; 0xc0
   2fde0:	ldr	r2, [r3]
   2fde4:	ldr	r3, [sp, #196]	; 0xc4
   2fde8:	ldr	r3, [r3]
   2fdec:	sub	r3, r2, r3
   2fdf0:	add	lr, lr, r3
   2fdf4:	add	ip, ip, r3, lsl #2
   2fdf8:	cmp	r9, #1
   2fdfc:	ble	2fd70 <GetDataSlab+0xe78c>
   2fe00:	ldr	r3, [sp, #76]	; 0x4c
   2fe04:	add	r3, r3, #1
   2fe08:	str	r3, [sp, #76]	; 0x4c
   2fe0c:	ldr	r1, [fp, #4]
   2fe10:	sdiv	r2, r3, r1
   2fe14:	mls	r3, r1, r2, r3
   2fe18:	cmp	r3, #0
   2fe1c:	bne	2fd58 <GetDataSlab+0xe774>
   2fe20:	add	r4, sp, #76	; 0x4c
   2fe24:	add	r7, fp, #4
   2fe28:	add	r5, sp, #116	; 0x74
   2fe2c:	ldr	r0, [sp, #28]
   2fe30:	b	2fd1c <GetDataSlab+0xe738>
   2fe34:	mov	r3, #0
   2fe38:	b	251fc <GetDataSlab+0x3c18>
   2fe3c:	ldr	r3, [sp, #196]	; 0xc4
   2fe40:	ldr	r2, [r3, r0, lsl #2]
   2fe44:	cmp	r2, #0
   2fe48:	beq	2fe5c <GetDataSlab+0xe878>
   2fe4c:	ldr	r3, [r5, #-4]
   2fe50:	mul	r3, r3, r2
   2fe54:	add	ip, ip, r3, lsl #2
   2fe58:	add	lr, lr, r3
   2fe5c:	add	r0, r0, #1
   2fe60:	cmp	r9, r0
   2fe64:	beq	2feec <GetDataSlab+0xe908>
   2fe68:	ldr	r3, [r4]
   2fe6c:	add	r1, r3, #1
   2fe70:	str	r1, [r4]
   2fe74:	ldr	r2, [r7, #4]!
   2fe78:	sdiv	r3, r1, r2
   2fe7c:	mls	r3, r2, r3, r1
   2fe80:	cmp	r3, #0
   2fe84:	bne	2fed8 <GetDataSlab+0xe8f4>
   2fe88:	str	r8, [r4], #4
   2fe8c:	add	r5, r5, #4
   2fe90:	ldr	r2, [r5]
   2fe94:	sdiv	r3, lr, r2
   2fe98:	mls	r3, r2, r3, lr
   2fe9c:	cmp	r3, #0
   2fea0:	beq	2fe3c <GetDataSlab+0xe858>
   2fea4:	ldr	r1, [r5, #-4]
   2fea8:	str	r1, [sp, #8]
   2feac:	ldr	r1, [sp, #196]	; 0xc4
   2feb0:	ldr	r1, [r1, r0, lsl #2]
   2feb4:	str	r1, [sp, #12]
   2feb8:	sub	r3, r2, r3
   2febc:	mov	r2, r1
   2fec0:	ldr	r1, [sp, #8]
   2fec4:	mla	r3, r2, r1, r3
   2fec8:	add	ip, ip, r3, lsl #2
   2fecc:	add	lr, lr, r3
   2fed0:	b	2fe5c <GetDataSlab+0xe878>
   2fed4:	mov	r0, #1
   2fed8:	add	r3, sp, #152	; 0x98
   2fedc:	add	r3, r3, r0, lsl #2
   2fee0:	ldr	r3, [r3, #-120]	; 0xffffff88
   2fee4:	add	lr, lr, r3
   2fee8:	add	ip, ip, r3, lsl #2
   2feec:	ldr	r3, [sp, #20]
   2fef0:	add	r3, r3, r6
   2fef4:	str	r3, [sp, #20]
   2fef8:	ldr	r2, [sp, #16]
   2fefc:	cmp	r3, r2
   2ff00:	bge	2ffbc <GetDataSlab+0xe9d8>
   2ff04:	ldr	r3, [sp, #196]	; 0xc4
   2ff08:	ldr	r3, [r3]
   2ff0c:	cmp	r3, #0
   2ff10:	addne	ip, ip, r3, lsl #2
   2ff14:	addne	lr, lr, r3
   2ff18:	ldr	r6, [fp]
   2ff1c:	cmp	r6, #0
   2ff20:	ble	2ff5c <GetDataSlab+0xe978>
   2ff24:	ldr	r3, [sp, #4]
   2ff28:	ldr	r2, [sp, #20]
   2ff2c:	add	r2, r3, r2, lsl #2
   2ff30:	mov	r3, #0
   2ff34:	vldr	s15, [ip]
   2ff38:	vcvt.u32.f32	s15, s15
   2ff3c:	vstmia	r2!, {s15}
   2ff40:	ldr	r1, [sl]
   2ff44:	add	ip, ip, r1, lsl #2
   2ff48:	add	lr, lr, r1
   2ff4c:	add	r3, r3, #1
   2ff50:	ldr	r6, [fp]
   2ff54:	cmp	r6, r3
   2ff58:	bgt	2ff34 <GetDataSlab+0xe950>
   2ff5c:	ldr	r3, [sp, #192]	; 0xc0
   2ff60:	ldr	r2, [r3]
   2ff64:	ldr	r3, [sp, #196]	; 0xc4
   2ff68:	ldr	r3, [r3]
   2ff6c:	sub	r3, r2, r3
   2ff70:	ldr	r2, [sl]
   2ff74:	mls	r3, r2, r6, r3
   2ff78:	add	lr, lr, r3
   2ff7c:	add	ip, ip, r3, lsl #2
   2ff80:	cmp	r9, #1
   2ff84:	ble	2feec <GetDataSlab+0xe908>
   2ff88:	ldr	r3, [sp, #76]	; 0x4c
   2ff8c:	add	r3, r3, #1
   2ff90:	str	r3, [sp, #76]	; 0x4c
   2ff94:	ldr	r1, [fp, #4]
   2ff98:	sdiv	r2, r3, r1
   2ff9c:	mls	r3, r1, r2, r3
   2ffa0:	cmp	r3, #0
   2ffa4:	bne	2fed4 <GetDataSlab+0xe8f0>
   2ffa8:	add	r4, sp, #76	; 0x4c
   2ffac:	add	r7, fp, #4
   2ffb0:	add	r5, sp, #112	; 0x70
   2ffb4:	mov	r0, #1
   2ffb8:	b	2fe88 <GetDataSlab+0xe8a4>
   2ffbc:	mov	r3, #0
   2ffc0:	b	251fc <GetDataSlab+0x3c18>
   2ffc4:	ldr	r3, [sl]
   2ffc8:	str	r3, [sp, #28]
   2ffcc:	sub	r3, r3, #1
   2ffd0:	str	r3, [sp, #32]
   2ffd4:	ldr	r3, [sp, #192]	; 0xc0
   2ffd8:	ldr	r3, [r3]
   2ffdc:	str	r3, [sp, #112]	; 0x70
   2ffe0:	ldr	r3, [fp]
   2ffe4:	str	r3, [sp, #16]
   2ffe8:	cmp	r9, #1
   2ffec:	ble	30010 <GetDataSlab+0xea2c>
   2fff0:	str	sl, [sp, #20]
   2fff4:	add	r8, sp, #36	; 0x24
   2fff8:	ldr	r5, [sp, #192]	; 0xc0
   2fffc:	add	r6, sp, #112	; 0x70
   30000:	str	r5, [sp, #12]
   30004:	mov	r4, #1
   30008:	mov	lr, #0
   3000c:	b	3efb8 <GetDataSlab+0x1d9d4>
   30010:	mov	lr, #0
   30014:	b	3f050 <GetDataSlab+0x1da6c>
   30018:	ldr	r3, [sp, #16]
   3001c:	cmp	r3, #0
   30020:	ble	3a434 <GetDataSlab+0x18e50>
   30024:	mov	r3, #0
   30028:	str	r3, [sp, #12]
   3002c:	mov	r8, r3
   30030:	b	300f0 <GetDataSlab+0xeb0c>
   30034:	ldr	r3, [sp, #196]	; 0xc4
   30038:	ldr	r3, [r3, r0, lsl #2]
   3003c:	cmp	r3, #0
   30040:	beq	30054 <GetDataSlab+0xea70>
   30044:	ldr	r2, [r5, #-8]
   30048:	mul	r3, r2, r3
   3004c:	add	ip, ip, r3, lsl #2
   30050:	add	lr, lr, r3
   30054:	add	r0, r0, #1
   30058:	cmp	r9, r0
   3005c:	beq	300d4 <GetDataSlab+0xeaf0>
   30060:	ldr	r3, [r4]
   30064:	add	r1, r3, #1
   30068:	str	r1, [r4]
   3006c:	ldr	r2, [r7, #4]!
   30070:	sdiv	r3, r1, r2
   30074:	mls	r3, r2, r3, r1
   30078:	cmp	r3, #0
   3007c:	bne	300c0 <GetDataSlab+0xeadc>
   30080:	str	r8, [r4], #4
   30084:	ldr	r2, [r5], #4
   30088:	sdiv	r3, lr, r2
   3008c:	mls	r3, r2, r3, lr
   30090:	cmp	r3, #0
   30094:	beq	30034 <GetDataSlab+0xea50>
   30098:	ldr	r1, [r5, #-8]
   3009c:	ldr	sl, [sp, #196]	; 0xc4
   300a0:	ldr	sl, [sl, r0, lsl #2]
   300a4:	str	sl, [sp, #8]
   300a8:	sub	r3, r2, r3
   300ac:	mla	r3, sl, r1, r3
   300b0:	add	ip, ip, r3, lsl #2
   300b4:	add	lr, lr, r3
   300b8:	b	30054 <GetDataSlab+0xea70>
   300bc:	ldr	r0, [sp, #28]
   300c0:	add	r3, sp, #152	; 0x98
   300c4:	add	r3, r3, r0, lsl #2
   300c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   300cc:	add	lr, lr, r3
   300d0:	add	ip, ip, r3, lsl #2
   300d4:	ldr	r3, [sp, #12]
   300d8:	add	r3, r3, r6
   300dc:	str	r3, [sp, #12]
   300e0:	ldr	r3, [sp, #16]
   300e4:	ldr	r2, [sp, #12]
   300e8:	cmp	r2, r3
   300ec:	bge	30194 <GetDataSlab+0xebb0>
   300f0:	ldr	r3, [sp, #196]	; 0xc4
   300f4:	ldr	r3, [r3]
   300f8:	cmp	r3, #0
   300fc:	addne	ip, ip, r3, lsl #2
   30100:	addne	lr, lr, r3
   30104:	ldr	r6, [fp]
   30108:	cmp	r6, #0
   3010c:	ble	3013c <GetDataSlab+0xeb58>
   30110:	sub	r0, ip, #4
   30114:	ldr	r3, [sp, #4]
   30118:	ldr	r2, [sp, #12]
   3011c:	add	r1, r3, r2, lsl #2
   30120:	mov	r2, #0
   30124:	ldr	r3, [r0, #4]!
   30128:	str	r3, [r1], #4
   3012c:	add	r2, r2, #1
   30130:	ldr	r6, [fp]
   30134:	cmp	r6, r2
   30138:	bgt	30124 <GetDataSlab+0xeb40>
   3013c:	ldr	r3, [sp, #192]	; 0xc0
   30140:	ldr	r2, [r3]
   30144:	ldr	r3, [sp, #196]	; 0xc4
   30148:	ldr	r3, [r3]
   3014c:	sub	r3, r2, r3
   30150:	add	lr, lr, r3
   30154:	add	ip, ip, r3, lsl #2
   30158:	cmp	r9, #1
   3015c:	ble	300d4 <GetDataSlab+0xeaf0>
   30160:	ldr	r3, [sp, #76]	; 0x4c
   30164:	add	r3, r3, #1
   30168:	str	r3, [sp, #76]	; 0x4c
   3016c:	ldr	r1, [fp, #4]
   30170:	sdiv	r2, r3, r1
   30174:	mls	r3, r1, r2, r3
   30178:	cmp	r3, #0
   3017c:	bne	300bc <GetDataSlab+0xead8>
   30180:	add	r4, sp, #76	; 0x4c
   30184:	add	r7, fp, #4
   30188:	add	r5, sp, #116	; 0x74
   3018c:	ldr	r0, [sp, #28]
   30190:	b	30080 <GetDataSlab+0xea9c>
   30194:	mov	r3, #0
   30198:	b	251fc <GetDataSlab+0x3c18>
   3019c:	ldr	r3, [sp, #196]	; 0xc4
   301a0:	ldr	r2, [r3, r0, lsl #2]
   301a4:	cmp	r2, #0
   301a8:	beq	301bc <GetDataSlab+0xebd8>
   301ac:	ldr	r3, [r5, #-4]
   301b0:	mul	r3, r3, r2
   301b4:	add	ip, ip, r3, lsl #2
   301b8:	add	lr, lr, r3
   301bc:	add	r0, r0, #1
   301c0:	cmp	r9, r0
   301c4:	beq	3024c <GetDataSlab+0xec68>
   301c8:	ldr	r3, [r4]
   301cc:	add	r1, r3, #1
   301d0:	str	r1, [r4]
   301d4:	ldr	r2, [r7, #4]!
   301d8:	sdiv	r3, r1, r2
   301dc:	mls	r3, r2, r3, r1
   301e0:	cmp	r3, #0
   301e4:	bne	30238 <GetDataSlab+0xec54>
   301e8:	str	r8, [r4], #4
   301ec:	add	r5, r5, #4
   301f0:	ldr	r2, [r5]
   301f4:	sdiv	r3, lr, r2
   301f8:	mls	r3, r2, r3, lr
   301fc:	cmp	r3, #0
   30200:	beq	3019c <GetDataSlab+0xebb8>
   30204:	ldr	r1, [r5, #-4]
   30208:	str	r1, [sp, #8]
   3020c:	ldr	r1, [sp, #196]	; 0xc4
   30210:	ldr	r1, [r1, r0, lsl #2]
   30214:	str	r1, [sp, #12]
   30218:	sub	r3, r2, r3
   3021c:	mov	r2, r1
   30220:	ldr	r1, [sp, #8]
   30224:	mla	r3, r2, r1, r3
   30228:	add	ip, ip, r3, lsl #2
   3022c:	add	lr, lr, r3
   30230:	b	301bc <GetDataSlab+0xebd8>
   30234:	mov	r0, #1
   30238:	add	r3, sp, #152	; 0x98
   3023c:	add	r3, r3, r0, lsl #2
   30240:	ldr	r3, [r3, #-120]	; 0xffffff88
   30244:	add	lr, lr, r3
   30248:	add	ip, ip, r3, lsl #2
   3024c:	ldr	r3, [sp, #20]
   30250:	add	r3, r3, r6
   30254:	str	r3, [sp, #20]
   30258:	ldr	r2, [sp, #16]
   3025c:	cmp	r3, r2
   30260:	bge	30318 <GetDataSlab+0xed34>
   30264:	ldr	r3, [sp, #196]	; 0xc4
   30268:	ldr	r3, [r3]
   3026c:	cmp	r3, #0
   30270:	addne	ip, ip, r3, lsl #2
   30274:	addne	lr, lr, r3
   30278:	ldr	r6, [fp]
   3027c:	cmp	r6, #0
   30280:	ble	302b8 <GetDataSlab+0xecd4>
   30284:	ldr	r3, [sp, #4]
   30288:	ldr	r2, [sp, #20]
   3028c:	add	r2, r3, r2, lsl #2
   30290:	mov	r3, #0
   30294:	ldr	r1, [ip]
   30298:	str	r1, [r2], #4
   3029c:	ldr	r1, [sl]
   302a0:	add	ip, ip, r1, lsl #2
   302a4:	add	lr, lr, r1
   302a8:	add	r3, r3, #1
   302ac:	ldr	r6, [fp]
   302b0:	cmp	r6, r3
   302b4:	bgt	30294 <GetDataSlab+0xecb0>
   302b8:	ldr	r3, [sp, #192]	; 0xc0
   302bc:	ldr	r2, [r3]
   302c0:	ldr	r3, [sp, #196]	; 0xc4
   302c4:	ldr	r3, [r3]
   302c8:	sub	r3, r2, r3
   302cc:	ldr	r2, [sl]
   302d0:	mls	r3, r2, r6, r3
   302d4:	add	lr, lr, r3
   302d8:	add	ip, ip, r3, lsl #2
   302dc:	cmp	r9, #1
   302e0:	ble	3024c <GetDataSlab+0xec68>
   302e4:	ldr	r3, [sp, #76]	; 0x4c
   302e8:	add	r3, r3, #1
   302ec:	str	r3, [sp, #76]	; 0x4c
   302f0:	ldr	r1, [fp, #4]
   302f4:	sdiv	r2, r3, r1
   302f8:	mls	r3, r1, r2, r3
   302fc:	cmp	r3, #0
   30300:	bne	30234 <GetDataSlab+0xec50>
   30304:	add	r4, sp, #76	; 0x4c
   30308:	add	r7, fp, #4
   3030c:	add	r5, sp, #112	; 0x70
   30310:	mov	r0, #1
   30314:	b	301e8 <GetDataSlab+0xec04>
   30318:	mov	r3, #0
   3031c:	b	251fc <GetDataSlab+0x3c18>
   30320:	ldr	r3, [sl]
   30324:	str	r3, [sp, #28]
   30328:	sub	r3, r3, #1
   3032c:	str	r3, [sp, #32]
   30330:	ldr	r3, [sp, #192]	; 0xc0
   30334:	ldr	r3, [r3]
   30338:	str	r3, [sp, #112]	; 0x70
   3033c:	ldr	r3, [fp]
   30340:	str	r3, [sp, #16]
   30344:	cmp	r9, #1
   30348:	ble	3036c <GetDataSlab+0xed88>
   3034c:	str	sl, [sp, #20]
   30350:	add	r8, sp, #36	; 0x24
   30354:	ldr	r5, [sp, #192]	; 0xc0
   30358:	add	r6, sp, #112	; 0x70
   3035c:	str	r5, [sp, #12]
   30360:	mov	r4, #1
   30364:	mov	lr, #0
   30368:	b	3f0a8 <GetDataSlab+0x1dac4>
   3036c:	mov	lr, #0
   30370:	b	3f140 <GetDataSlab+0x1db5c>
   30374:	ldr	r3, [sp, #16]
   30378:	cmp	r3, #0
   3037c:	ble	3a43c <GetDataSlab+0x18e58>
   30380:	mov	r3, #0
   30384:	str	r3, [sp, #12]
   30388:	mov	r8, r3
   3038c:	b	3044c <GetDataSlab+0xee68>
   30390:	ldr	r3, [sp, #196]	; 0xc4
   30394:	ldr	r3, [r3, r0, lsl #2]
   30398:	cmp	r3, #0
   3039c:	beq	303b0 <GetDataSlab+0xedcc>
   303a0:	ldr	r2, [r5, #-8]
   303a4:	mul	r3, r2, r3
   303a8:	add	ip, ip, r3, lsl #2
   303ac:	add	lr, lr, r3
   303b0:	add	r0, r0, #1
   303b4:	cmp	r9, r0
   303b8:	beq	30430 <GetDataSlab+0xee4c>
   303bc:	ldr	r3, [r4]
   303c0:	add	r1, r3, #1
   303c4:	str	r1, [r4]
   303c8:	ldr	r2, [r7, #4]!
   303cc:	sdiv	r3, r1, r2
   303d0:	mls	r3, r2, r3, r1
   303d4:	cmp	r3, #0
   303d8:	bne	3041c <GetDataSlab+0xee38>
   303dc:	str	r8, [r4], #4
   303e0:	ldr	r2, [r5], #4
   303e4:	sdiv	r3, lr, r2
   303e8:	mls	r3, r2, r3, lr
   303ec:	cmp	r3, #0
   303f0:	beq	30390 <GetDataSlab+0xedac>
   303f4:	ldr	r1, [r5, #-8]
   303f8:	ldr	sl, [sp, #196]	; 0xc4
   303fc:	ldr	sl, [sl, r0, lsl #2]
   30400:	str	sl, [sp, #8]
   30404:	sub	r3, r2, r3
   30408:	mla	r3, sl, r1, r3
   3040c:	add	ip, ip, r3, lsl #2
   30410:	add	lr, lr, r3
   30414:	b	303b0 <GetDataSlab+0xedcc>
   30418:	ldr	r0, [sp, #28]
   3041c:	add	r3, sp, #152	; 0x98
   30420:	add	r3, r3, r0, lsl #2
   30424:	ldr	r3, [r3, #-120]	; 0xffffff88
   30428:	add	lr, lr, r3
   3042c:	add	ip, ip, r3, lsl #2
   30430:	ldr	r3, [sp, #12]
   30434:	add	r3, r3, r6
   30438:	str	r3, [sp, #12]
   3043c:	ldr	r3, [sp, #16]
   30440:	ldr	r2, [sp, #12]
   30444:	cmp	r2, r3
   30448:	bge	304f0 <GetDataSlab+0xef0c>
   3044c:	ldr	r3, [sp, #196]	; 0xc4
   30450:	ldr	r3, [r3]
   30454:	cmp	r3, #0
   30458:	addne	ip, ip, r3, lsl #2
   3045c:	addne	lr, lr, r3
   30460:	ldr	r6, [fp]
   30464:	cmp	r6, #0
   30468:	ble	30498 <GetDataSlab+0xeeb4>
   3046c:	sub	r0, ip, #4
   30470:	ldr	r3, [sp, #4]
   30474:	ldr	r2, [sp, #12]
   30478:	add	r1, r3, r2, lsl #2
   3047c:	mov	r2, #0
   30480:	ldr	r3, [r0, #4]!
   30484:	str	r3, [r1], #4
   30488:	add	r2, r2, #1
   3048c:	ldr	r6, [fp]
   30490:	cmp	r6, r2
   30494:	bgt	30480 <GetDataSlab+0xee9c>
   30498:	ldr	r3, [sp, #192]	; 0xc0
   3049c:	ldr	r2, [r3]
   304a0:	ldr	r3, [sp, #196]	; 0xc4
   304a4:	ldr	r3, [r3]
   304a8:	sub	r3, r2, r3
   304ac:	add	lr, lr, r3
   304b0:	add	ip, ip, r3, lsl #2
   304b4:	cmp	r9, #1
   304b8:	ble	30430 <GetDataSlab+0xee4c>
   304bc:	ldr	r3, [sp, #76]	; 0x4c
   304c0:	add	r3, r3, #1
   304c4:	str	r3, [sp, #76]	; 0x4c
   304c8:	ldr	r1, [fp, #4]
   304cc:	sdiv	r2, r3, r1
   304d0:	mls	r3, r1, r2, r3
   304d4:	cmp	r3, #0
   304d8:	bne	30418 <GetDataSlab+0xee34>
   304dc:	add	r4, sp, #76	; 0x4c
   304e0:	add	r7, fp, #4
   304e4:	add	r5, sp, #116	; 0x74
   304e8:	ldr	r0, [sp, #28]
   304ec:	b	303dc <GetDataSlab+0xedf8>
   304f0:	mov	r3, #0
   304f4:	b	251fc <GetDataSlab+0x3c18>
   304f8:	ldr	r3, [sp, #196]	; 0xc4
   304fc:	ldr	r2, [r3, r0, lsl #2]
   30500:	cmp	r2, #0
   30504:	beq	30518 <GetDataSlab+0xef34>
   30508:	ldr	r3, [r5, #-4]
   3050c:	mul	r3, r3, r2
   30510:	add	ip, ip, r3, lsl #2
   30514:	add	lr, lr, r3
   30518:	add	r0, r0, #1
   3051c:	cmp	r9, r0
   30520:	beq	305a8 <GetDataSlab+0xefc4>
   30524:	ldr	r3, [r4]
   30528:	add	r1, r3, #1
   3052c:	str	r1, [r4]
   30530:	ldr	r2, [r7, #4]!
   30534:	sdiv	r3, r1, r2
   30538:	mls	r3, r2, r3, r1
   3053c:	cmp	r3, #0
   30540:	bne	30594 <GetDataSlab+0xefb0>
   30544:	str	r8, [r4], #4
   30548:	add	r5, r5, #4
   3054c:	ldr	r2, [r5]
   30550:	sdiv	r3, lr, r2
   30554:	mls	r3, r2, r3, lr
   30558:	cmp	r3, #0
   3055c:	beq	304f8 <GetDataSlab+0xef14>
   30560:	ldr	r1, [r5, #-4]
   30564:	str	r1, [sp, #8]
   30568:	ldr	r1, [sp, #196]	; 0xc4
   3056c:	ldr	r1, [r1, r0, lsl #2]
   30570:	str	r1, [sp, #12]
   30574:	sub	r3, r2, r3
   30578:	mov	r2, r1
   3057c:	ldr	r1, [sp, #8]
   30580:	mla	r3, r2, r1, r3
   30584:	add	ip, ip, r3, lsl #2
   30588:	add	lr, lr, r3
   3058c:	b	30518 <GetDataSlab+0xef34>
   30590:	mov	r0, #1
   30594:	add	r3, sp, #152	; 0x98
   30598:	add	r3, r3, r0, lsl #2
   3059c:	ldr	r3, [r3, #-120]	; 0xffffff88
   305a0:	add	lr, lr, r3
   305a4:	add	ip, ip, r3, lsl #2
   305a8:	ldr	r3, [sp, #20]
   305ac:	add	r3, r3, r6
   305b0:	str	r3, [sp, #20]
   305b4:	ldr	r2, [sp, #16]
   305b8:	cmp	r3, r2
   305bc:	bge	30674 <GetDataSlab+0xf090>
   305c0:	ldr	r3, [sp, #196]	; 0xc4
   305c4:	ldr	r3, [r3]
   305c8:	cmp	r3, #0
   305cc:	addne	ip, ip, r3, lsl #2
   305d0:	addne	lr, lr, r3
   305d4:	ldr	r6, [fp]
   305d8:	cmp	r6, #0
   305dc:	ble	30614 <GetDataSlab+0xf030>
   305e0:	ldr	r3, [sp, #4]
   305e4:	ldr	r2, [sp, #20]
   305e8:	add	r2, r3, r2, lsl #2
   305ec:	mov	r3, #0
   305f0:	ldr	r1, [ip]
   305f4:	str	r1, [r2], #4
   305f8:	ldr	r1, [sl]
   305fc:	add	ip, ip, r1, lsl #2
   30600:	add	lr, lr, r1
   30604:	add	r3, r3, #1
   30608:	ldr	r6, [fp]
   3060c:	cmp	r6, r3
   30610:	bgt	305f0 <GetDataSlab+0xf00c>
   30614:	ldr	r3, [sp, #192]	; 0xc0
   30618:	ldr	r2, [r3]
   3061c:	ldr	r3, [sp, #196]	; 0xc4
   30620:	ldr	r3, [r3]
   30624:	sub	r3, r2, r3
   30628:	ldr	r2, [sl]
   3062c:	mls	r3, r2, r6, r3
   30630:	add	lr, lr, r3
   30634:	add	ip, ip, r3, lsl #2
   30638:	cmp	r9, #1
   3063c:	ble	305a8 <GetDataSlab+0xefc4>
   30640:	ldr	r3, [sp, #76]	; 0x4c
   30644:	add	r3, r3, #1
   30648:	str	r3, [sp, #76]	; 0x4c
   3064c:	ldr	r1, [fp, #4]
   30650:	sdiv	r2, r3, r1
   30654:	mls	r3, r1, r2, r3
   30658:	cmp	r3, #0
   3065c:	bne	30590 <GetDataSlab+0xefac>
   30660:	add	r4, sp, #76	; 0x4c
   30664:	add	r7, fp, #4
   30668:	add	r5, sp, #112	; 0x70
   3066c:	mov	r0, #1
   30670:	b	30544 <GetDataSlab+0xef60>
   30674:	mov	r3, #0
   30678:	b	251fc <GetDataSlab+0x3c18>
   3067c:	ldr	r3, [sl]
   30680:	str	r3, [sp, #28]
   30684:	sub	r3, r3, #1
   30688:	str	r3, [sp, #32]
   3068c:	ldr	r3, [sp, #192]	; 0xc0
   30690:	ldr	r3, [r3]
   30694:	str	r3, [sp, #112]	; 0x70
   30698:	ldr	r3, [fp]
   3069c:	str	r3, [sp, #16]
   306a0:	cmp	r9, #1
   306a4:	ble	306c8 <GetDataSlab+0xf0e4>
   306a8:	str	sl, [sp, #20]
   306ac:	add	r8, sp, #36	; 0x24
   306b0:	ldr	r5, [sp, #192]	; 0xc0
   306b4:	add	r6, sp, #112	; 0x70
   306b8:	str	r5, [sp, #12]
   306bc:	mov	r4, #1
   306c0:	mov	lr, #0
   306c4:	b	3edd8 <GetDataSlab+0x1d7f4>
   306c8:	mov	lr, #0
   306cc:	b	3ee70 <GetDataSlab+0x1d88c>
   306d0:	ldr	r3, [sp, #16]
   306d4:	cmp	r3, #0
   306d8:	ble	3a444 <GetDataSlab+0x18e60>
   306dc:	mov	r3, #0
   306e0:	str	r3, [sp, #12]
   306e4:	mov	r8, r3
   306e8:	b	307a8 <GetDataSlab+0xf1c4>
   306ec:	ldr	r3, [sp, #196]	; 0xc4
   306f0:	ldr	r3, [r3, r0, lsl #2]
   306f4:	cmp	r3, #0
   306f8:	beq	3070c <GetDataSlab+0xf128>
   306fc:	ldr	r2, [r5, #-8]
   30700:	mul	r3, r2, r3
   30704:	add	ip, ip, r3, lsl #1
   30708:	add	lr, lr, r3
   3070c:	add	r0, r0, #1
   30710:	cmp	r9, r0
   30714:	beq	3078c <GetDataSlab+0xf1a8>
   30718:	ldr	r3, [r4]
   3071c:	add	r1, r3, #1
   30720:	str	r1, [r4]
   30724:	ldr	r2, [r7, #4]!
   30728:	sdiv	r3, r1, r2
   3072c:	mls	r3, r2, r3, r1
   30730:	cmp	r3, #0
   30734:	bne	30778 <GetDataSlab+0xf194>
   30738:	str	r8, [r4], #4
   3073c:	ldr	r2, [r5], #4
   30740:	sdiv	r3, lr, r2
   30744:	mls	r3, r2, r3, lr
   30748:	cmp	r3, #0
   3074c:	beq	306ec <GetDataSlab+0xf108>
   30750:	ldr	r1, [r5, #-8]
   30754:	ldr	sl, [sp, #196]	; 0xc4
   30758:	ldr	sl, [sl, r0, lsl #2]
   3075c:	str	sl, [sp, #8]
   30760:	sub	r3, r2, r3
   30764:	mla	r3, sl, r1, r3
   30768:	add	ip, ip, r3, lsl #1
   3076c:	add	lr, lr, r3
   30770:	b	3070c <GetDataSlab+0xf128>
   30774:	ldr	r0, [sp, #28]
   30778:	add	r3, sp, #152	; 0x98
   3077c:	add	r3, r3, r0, lsl #2
   30780:	ldr	r3, [r3, #-120]	; 0xffffff88
   30784:	add	lr, lr, r3
   30788:	add	ip, ip, r3, lsl #1
   3078c:	ldr	r3, [sp, #12]
   30790:	add	r3, r3, r6
   30794:	str	r3, [sp, #12]
   30798:	ldr	r3, [sp, #16]
   3079c:	ldr	r2, [sp, #12]
   307a0:	cmp	r2, r3
   307a4:	bge	3084c <GetDataSlab+0xf268>
   307a8:	ldr	r3, [sp, #196]	; 0xc4
   307ac:	ldr	r3, [r3]
   307b0:	cmp	r3, #0
   307b4:	addne	ip, ip, r3, lsl #1
   307b8:	addne	lr, lr, r3
   307bc:	ldr	r6, [fp]
   307c0:	cmp	r6, #0
   307c4:	ble	307f4 <GetDataSlab+0xf210>
   307c8:	sub	r0, ip, #2
   307cc:	ldr	r3, [sp, #4]
   307d0:	ldr	r2, [sp, #12]
   307d4:	add	r1, r3, r2, lsl #2
   307d8:	mov	r2, #0
   307dc:	ldrsh	r3, [r0, #2]!
   307e0:	str	r3, [r1], #4
   307e4:	add	r2, r2, #1
   307e8:	ldr	r6, [fp]
   307ec:	cmp	r6, r2
   307f0:	bgt	307dc <GetDataSlab+0xf1f8>
   307f4:	ldr	r3, [sp, #192]	; 0xc0
   307f8:	ldr	r2, [r3]
   307fc:	ldr	r3, [sp, #196]	; 0xc4
   30800:	ldr	r3, [r3]
   30804:	sub	r3, r2, r3
   30808:	add	lr, lr, r3
   3080c:	add	ip, ip, r3, lsl #1
   30810:	cmp	r9, #1
   30814:	ble	3078c <GetDataSlab+0xf1a8>
   30818:	ldr	r3, [sp, #76]	; 0x4c
   3081c:	add	r3, r3, #1
   30820:	str	r3, [sp, #76]	; 0x4c
   30824:	ldr	r1, [fp, #4]
   30828:	sdiv	r2, r3, r1
   3082c:	mls	r3, r1, r2, r3
   30830:	cmp	r3, #0
   30834:	bne	30774 <GetDataSlab+0xf190>
   30838:	add	r4, sp, #76	; 0x4c
   3083c:	add	r7, fp, #4
   30840:	add	r5, sp, #116	; 0x74
   30844:	ldr	r0, [sp, #28]
   30848:	b	30738 <GetDataSlab+0xf154>
   3084c:	mov	r3, #0
   30850:	b	251fc <GetDataSlab+0x3c18>
   30854:	ldr	r3, [sp, #196]	; 0xc4
   30858:	ldr	r2, [r3, r0, lsl #2]
   3085c:	cmp	r2, #0
   30860:	beq	30874 <GetDataSlab+0xf290>
   30864:	ldr	r3, [r5, #-4]
   30868:	mul	r3, r3, r2
   3086c:	add	ip, ip, r3, lsl #1
   30870:	add	lr, lr, r3
   30874:	add	r0, r0, #1
   30878:	cmp	r9, r0
   3087c:	beq	30904 <GetDataSlab+0xf320>
   30880:	ldr	r3, [r4]
   30884:	add	r1, r3, #1
   30888:	str	r1, [r4]
   3088c:	ldr	r2, [r7, #4]!
   30890:	sdiv	r3, r1, r2
   30894:	mls	r3, r2, r3, r1
   30898:	cmp	r3, #0
   3089c:	bne	308f0 <GetDataSlab+0xf30c>
   308a0:	str	r8, [r4], #4
   308a4:	add	r5, r5, #4
   308a8:	ldr	r2, [r5]
   308ac:	sdiv	r3, lr, r2
   308b0:	mls	r3, r2, r3, lr
   308b4:	cmp	r3, #0
   308b8:	beq	30854 <GetDataSlab+0xf270>
   308bc:	ldr	r1, [r5, #-4]
   308c0:	str	r1, [sp, #8]
   308c4:	ldr	r1, [sp, #196]	; 0xc4
   308c8:	ldr	r1, [r1, r0, lsl #2]
   308cc:	str	r1, [sp, #12]
   308d0:	sub	r3, r2, r3
   308d4:	mov	r2, r1
   308d8:	ldr	r1, [sp, #8]
   308dc:	mla	r3, r2, r1, r3
   308e0:	add	ip, ip, r3, lsl #1
   308e4:	add	lr, lr, r3
   308e8:	b	30874 <GetDataSlab+0xf290>
   308ec:	mov	r0, #1
   308f0:	add	r3, sp, #152	; 0x98
   308f4:	add	r3, r3, r0, lsl #2
   308f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   308fc:	add	lr, lr, r3
   30900:	add	ip, ip, r3, lsl #1
   30904:	ldr	r3, [sp, #20]
   30908:	add	r3, r3, r6
   3090c:	str	r3, [sp, #20]
   30910:	ldr	r2, [sp, #16]
   30914:	cmp	r3, r2
   30918:	bge	309d0 <GetDataSlab+0xf3ec>
   3091c:	ldr	r3, [sp, #196]	; 0xc4
   30920:	ldr	r3, [r3]
   30924:	cmp	r3, #0
   30928:	addne	ip, ip, r3, lsl #1
   3092c:	addne	lr, lr, r3
   30930:	ldr	r6, [fp]
   30934:	cmp	r6, #0
   30938:	ble	30970 <GetDataSlab+0xf38c>
   3093c:	ldr	r3, [sp, #4]
   30940:	ldr	r2, [sp, #20]
   30944:	add	r2, r3, r2, lsl #2
   30948:	mov	r3, #0
   3094c:	ldrsh	r1, [ip]
   30950:	str	r1, [r2], #4
   30954:	ldr	r1, [sl]
   30958:	add	ip, ip, r1, lsl #1
   3095c:	add	lr, lr, r1
   30960:	add	r3, r3, #1
   30964:	ldr	r6, [fp]
   30968:	cmp	r6, r3
   3096c:	bgt	3094c <GetDataSlab+0xf368>
   30970:	ldr	r3, [sp, #192]	; 0xc0
   30974:	ldr	r2, [r3]
   30978:	ldr	r3, [sp, #196]	; 0xc4
   3097c:	ldr	r3, [r3]
   30980:	sub	r3, r2, r3
   30984:	ldr	r2, [sl]
   30988:	mls	r3, r2, r6, r3
   3098c:	add	lr, lr, r3
   30990:	add	ip, ip, r3, lsl #1
   30994:	cmp	r9, #1
   30998:	ble	30904 <GetDataSlab+0xf320>
   3099c:	ldr	r3, [sp, #76]	; 0x4c
   309a0:	add	r3, r3, #1
   309a4:	str	r3, [sp, #76]	; 0x4c
   309a8:	ldr	r1, [fp, #4]
   309ac:	sdiv	r2, r3, r1
   309b0:	mls	r3, r1, r2, r3
   309b4:	cmp	r3, #0
   309b8:	bne	308ec <GetDataSlab+0xf308>
   309bc:	add	r4, sp, #76	; 0x4c
   309c0:	add	r7, fp, #4
   309c4:	add	r5, sp, #112	; 0x70
   309c8:	mov	r0, #1
   309cc:	b	308a0 <GetDataSlab+0xf2bc>
   309d0:	mov	r3, #0
   309d4:	b	251fc <GetDataSlab+0x3c18>
   309d8:	ldr	r3, [sl]
   309dc:	str	r3, [sp, #28]
   309e0:	sub	r3, r3, #1
   309e4:	str	r3, [sp, #32]
   309e8:	ldr	r3, [sp, #192]	; 0xc0
   309ec:	ldr	r3, [r3]
   309f0:	str	r3, [sp, #112]	; 0x70
   309f4:	ldr	r3, [fp]
   309f8:	str	r3, [sp, #16]
   309fc:	cmp	r9, #1
   30a00:	ble	30a24 <GetDataSlab+0xf440>
   30a04:	str	sl, [sp, #20]
   30a08:	add	r8, sp, #36	; 0x24
   30a0c:	ldr	r5, [sp, #192]	; 0xc0
   30a10:	add	r6, sp, #112	; 0x70
   30a14:	str	r5, [sp, #12]
   30a18:	mov	r4, #1
   30a1c:	mov	lr, #0
   30a20:	b	3eec8 <GetDataSlab+0x1d8e4>
   30a24:	mov	lr, #0
   30a28:	b	3ef60 <GetDataSlab+0x1d97c>
   30a2c:	ldr	r3, [sp, #16]
   30a30:	cmp	r3, #0
   30a34:	ble	3a44c <GetDataSlab+0x18e68>
   30a38:	mov	r3, #0
   30a3c:	str	r3, [sp, #12]
   30a40:	mov	r8, r3
   30a44:	b	30b04 <GetDataSlab+0xf520>
   30a48:	ldr	r3, [sp, #196]	; 0xc4
   30a4c:	ldr	r3, [r3, r0, lsl #2]
   30a50:	cmp	r3, #0
   30a54:	beq	30a68 <GetDataSlab+0xf484>
   30a58:	ldr	r2, [r5, #-8]
   30a5c:	mul	r3, r2, r3
   30a60:	add	ip, ip, r3, lsl #1
   30a64:	add	lr, lr, r3
   30a68:	add	r0, r0, #1
   30a6c:	cmp	r9, r0
   30a70:	beq	30ae8 <GetDataSlab+0xf504>
   30a74:	ldr	r3, [r4]
   30a78:	add	r1, r3, #1
   30a7c:	str	r1, [r4]
   30a80:	ldr	r2, [r7, #4]!
   30a84:	sdiv	r3, r1, r2
   30a88:	mls	r3, r2, r3, r1
   30a8c:	cmp	r3, #0
   30a90:	bne	30ad4 <GetDataSlab+0xf4f0>
   30a94:	str	r8, [r4], #4
   30a98:	ldr	r2, [r5], #4
   30a9c:	sdiv	r3, lr, r2
   30aa0:	mls	r3, r2, r3, lr
   30aa4:	cmp	r3, #0
   30aa8:	beq	30a48 <GetDataSlab+0xf464>
   30aac:	ldr	r1, [r5, #-8]
   30ab0:	ldr	sl, [sp, #196]	; 0xc4
   30ab4:	ldr	sl, [sl, r0, lsl #2]
   30ab8:	str	sl, [sp, #8]
   30abc:	sub	r3, r2, r3
   30ac0:	mla	r3, sl, r1, r3
   30ac4:	add	ip, ip, r3, lsl #1
   30ac8:	add	lr, lr, r3
   30acc:	b	30a68 <GetDataSlab+0xf484>
   30ad0:	ldr	r0, [sp, #28]
   30ad4:	add	r3, sp, #152	; 0x98
   30ad8:	add	r3, r3, r0, lsl #2
   30adc:	ldr	r3, [r3, #-120]	; 0xffffff88
   30ae0:	add	lr, lr, r3
   30ae4:	add	ip, ip, r3, lsl #1
   30ae8:	ldr	r3, [sp, #12]
   30aec:	add	r3, r3, r6
   30af0:	str	r3, [sp, #12]
   30af4:	ldr	r3, [sp, #16]
   30af8:	ldr	r2, [sp, #12]
   30afc:	cmp	r2, r3
   30b00:	bge	30ba8 <GetDataSlab+0xf5c4>
   30b04:	ldr	r3, [sp, #196]	; 0xc4
   30b08:	ldr	r3, [r3]
   30b0c:	cmp	r3, #0
   30b10:	addne	ip, ip, r3, lsl #1
   30b14:	addne	lr, lr, r3
   30b18:	ldr	r6, [fp]
   30b1c:	cmp	r6, #0
   30b20:	ble	30b50 <GetDataSlab+0xf56c>
   30b24:	sub	r0, ip, #2
   30b28:	ldr	r3, [sp, #4]
   30b2c:	ldr	r2, [sp, #12]
   30b30:	add	r1, r3, r2, lsl #2
   30b34:	mov	r2, #0
   30b38:	ldrh	r3, [r0, #2]!
   30b3c:	str	r3, [r1], #4
   30b40:	add	r2, r2, #1
   30b44:	ldr	r6, [fp]
   30b48:	cmp	r6, r2
   30b4c:	bgt	30b38 <GetDataSlab+0xf554>
   30b50:	ldr	r3, [sp, #192]	; 0xc0
   30b54:	ldr	r2, [r3]
   30b58:	ldr	r3, [sp, #196]	; 0xc4
   30b5c:	ldr	r3, [r3]
   30b60:	sub	r3, r2, r3
   30b64:	add	lr, lr, r3
   30b68:	add	ip, ip, r3, lsl #1
   30b6c:	cmp	r9, #1
   30b70:	ble	30ae8 <GetDataSlab+0xf504>
   30b74:	ldr	r3, [sp, #76]	; 0x4c
   30b78:	add	r3, r3, #1
   30b7c:	str	r3, [sp, #76]	; 0x4c
   30b80:	ldr	r1, [fp, #4]
   30b84:	sdiv	r2, r3, r1
   30b88:	mls	r3, r1, r2, r3
   30b8c:	cmp	r3, #0
   30b90:	bne	30ad0 <GetDataSlab+0xf4ec>
   30b94:	add	r4, sp, #76	; 0x4c
   30b98:	add	r7, fp, #4
   30b9c:	add	r5, sp, #116	; 0x74
   30ba0:	ldr	r0, [sp, #28]
   30ba4:	b	30a94 <GetDataSlab+0xf4b0>
   30ba8:	mov	r3, #0
   30bac:	b	251fc <GetDataSlab+0x3c18>
   30bb0:	ldr	r3, [sp, #196]	; 0xc4
   30bb4:	ldr	r2, [r3, r0, lsl #2]
   30bb8:	cmp	r2, #0
   30bbc:	beq	30bd0 <GetDataSlab+0xf5ec>
   30bc0:	ldr	r3, [r5, #-4]
   30bc4:	mul	r3, r3, r2
   30bc8:	add	ip, ip, r3, lsl #1
   30bcc:	add	lr, lr, r3
   30bd0:	add	r0, r0, #1
   30bd4:	cmp	r9, r0
   30bd8:	beq	30c60 <GetDataSlab+0xf67c>
   30bdc:	ldr	r3, [r4]
   30be0:	add	r1, r3, #1
   30be4:	str	r1, [r4]
   30be8:	ldr	r2, [r7, #4]!
   30bec:	sdiv	r3, r1, r2
   30bf0:	mls	r3, r2, r3, r1
   30bf4:	cmp	r3, #0
   30bf8:	bne	30c4c <GetDataSlab+0xf668>
   30bfc:	str	r8, [r4], #4
   30c00:	add	r5, r5, #4
   30c04:	ldr	r2, [r5]
   30c08:	sdiv	r3, lr, r2
   30c0c:	mls	r3, r2, r3, lr
   30c10:	cmp	r3, #0
   30c14:	beq	30bb0 <GetDataSlab+0xf5cc>
   30c18:	ldr	r1, [r5, #-4]
   30c1c:	str	r1, [sp, #8]
   30c20:	ldr	r1, [sp, #196]	; 0xc4
   30c24:	ldr	r1, [r1, r0, lsl #2]
   30c28:	str	r1, [sp, #12]
   30c2c:	sub	r3, r2, r3
   30c30:	mov	r2, r1
   30c34:	ldr	r1, [sp, #8]
   30c38:	mla	r3, r2, r1, r3
   30c3c:	add	ip, ip, r3, lsl #1
   30c40:	add	lr, lr, r3
   30c44:	b	30bd0 <GetDataSlab+0xf5ec>
   30c48:	mov	r0, #1
   30c4c:	add	r3, sp, #152	; 0x98
   30c50:	add	r3, r3, r0, lsl #2
   30c54:	ldr	r3, [r3, #-120]	; 0xffffff88
   30c58:	add	lr, lr, r3
   30c5c:	add	ip, ip, r3, lsl #1
   30c60:	ldr	r3, [sp, #20]
   30c64:	add	r3, r3, r6
   30c68:	str	r3, [sp, #20]
   30c6c:	ldr	r2, [sp, #16]
   30c70:	cmp	r3, r2
   30c74:	bge	30d2c <GetDataSlab+0xf748>
   30c78:	ldr	r3, [sp, #196]	; 0xc4
   30c7c:	ldr	r3, [r3]
   30c80:	cmp	r3, #0
   30c84:	addne	ip, ip, r3, lsl #1
   30c88:	addne	lr, lr, r3
   30c8c:	ldr	r6, [fp]
   30c90:	cmp	r6, #0
   30c94:	ble	30ccc <GetDataSlab+0xf6e8>
   30c98:	ldr	r3, [sp, #4]
   30c9c:	ldr	r2, [sp, #20]
   30ca0:	add	r2, r3, r2, lsl #2
   30ca4:	mov	r3, #0
   30ca8:	ldrh	r1, [ip]
   30cac:	str	r1, [r2], #4
   30cb0:	ldr	r1, [sl]
   30cb4:	add	ip, ip, r1, lsl #1
   30cb8:	add	lr, lr, r1
   30cbc:	add	r3, r3, #1
   30cc0:	ldr	r6, [fp]
   30cc4:	cmp	r6, r3
   30cc8:	bgt	30ca8 <GetDataSlab+0xf6c4>
   30ccc:	ldr	r3, [sp, #192]	; 0xc0
   30cd0:	ldr	r2, [r3]
   30cd4:	ldr	r3, [sp, #196]	; 0xc4
   30cd8:	ldr	r3, [r3]
   30cdc:	sub	r3, r2, r3
   30ce0:	ldr	r2, [sl]
   30ce4:	mls	r3, r2, r6, r3
   30ce8:	add	lr, lr, r3
   30cec:	add	ip, ip, r3, lsl #1
   30cf0:	cmp	r9, #1
   30cf4:	ble	30c60 <GetDataSlab+0xf67c>
   30cf8:	ldr	r3, [sp, #76]	; 0x4c
   30cfc:	add	r3, r3, #1
   30d00:	str	r3, [sp, #76]	; 0x4c
   30d04:	ldr	r1, [fp, #4]
   30d08:	sdiv	r2, r3, r1
   30d0c:	mls	r3, r1, r2, r3
   30d10:	cmp	r3, #0
   30d14:	bne	30c48 <GetDataSlab+0xf664>
   30d18:	add	r4, sp, #76	; 0x4c
   30d1c:	add	r7, fp, #4
   30d20:	add	r5, sp, #112	; 0x70
   30d24:	mov	r0, #1
   30d28:	b	30bfc <GetDataSlab+0xf618>
   30d2c:	mov	r3, #0
   30d30:	b	251fc <GetDataSlab+0x3c18>
   30d34:	ldr	r3, [sl]
   30d38:	str	r3, [sp, #28]
   30d3c:	sub	r3, r3, #1
   30d40:	str	r3, [sp, #32]
   30d44:	ldr	r3, [sp, #192]	; 0xc0
   30d48:	ldr	r3, [r3]
   30d4c:	str	r3, [sp, #112]	; 0x70
   30d50:	ldr	r3, [fp]
   30d54:	str	r3, [sp, #16]
   30d58:	cmp	r9, #1
   30d5c:	ble	30d7c <GetDataSlab+0xf798>
   30d60:	str	sl, [sp, #20]
   30d64:	add	r7, sp, #36	; 0x24
   30d68:	ldr	r4, [sp, #192]	; 0xc0
   30d6c:	add	r5, sp, #112	; 0x70
   30d70:	str	r4, [sp, #12]
   30d74:	mov	lr, #0
   30d78:	b	3ebf8 <GetDataSlab+0x1d614>
   30d7c:	mov	lr, #0
   30d80:	b	3ec90 <GetDataSlab+0x1d6ac>
   30d84:	ldr	r3, [sp, #16]
   30d88:	cmp	r3, #0
   30d8c:	ble	3a454 <GetDataSlab+0x18e70>
   30d90:	mov	r3, #0
   30d94:	str	r3, [sp, #12]
   30d98:	mov	r8, r3
   30d9c:	b	30e5c <GetDataSlab+0xf878>
   30da0:	ldr	r3, [sp, #196]	; 0xc4
   30da4:	ldr	r3, [r3, r0, lsl #2]
   30da8:	cmp	r3, #0
   30dac:	beq	30dc0 <GetDataSlab+0xf7dc>
   30db0:	ldr	r2, [r5, #-8]
   30db4:	mul	r3, r2, r3
   30db8:	add	ip, ip, r3
   30dbc:	add	lr, lr, r3
   30dc0:	add	r0, r0, #1
   30dc4:	cmp	r9, r0
   30dc8:	beq	30e40 <GetDataSlab+0xf85c>
   30dcc:	ldr	r3, [r4]
   30dd0:	add	r1, r3, #1
   30dd4:	str	r1, [r4]
   30dd8:	ldr	r2, [r7, #4]!
   30ddc:	sdiv	r3, r1, r2
   30de0:	mls	r3, r2, r3, r1
   30de4:	cmp	r3, #0
   30de8:	bne	30e2c <GetDataSlab+0xf848>
   30dec:	str	r8, [r4], #4
   30df0:	ldr	r2, [r5], #4
   30df4:	sdiv	r3, lr, r2
   30df8:	mls	r3, r2, r3, lr
   30dfc:	cmp	r3, #0
   30e00:	beq	30da0 <GetDataSlab+0xf7bc>
   30e04:	ldr	r1, [r5, #-8]
   30e08:	ldr	sl, [sp, #196]	; 0xc4
   30e0c:	ldr	sl, [sl, r0, lsl #2]
   30e10:	str	sl, [sp, #8]
   30e14:	sub	r3, r2, r3
   30e18:	mla	r3, sl, r1, r3
   30e1c:	add	ip, ip, r3
   30e20:	add	lr, lr, r3
   30e24:	b	30dc0 <GetDataSlab+0xf7dc>
   30e28:	ldr	r0, [sp, #28]
   30e2c:	add	r3, sp, #152	; 0x98
   30e30:	add	r3, r3, r0, lsl #2
   30e34:	ldr	r3, [r3, #-120]	; 0xffffff88
   30e38:	add	lr, lr, r3
   30e3c:	add	ip, ip, r3
   30e40:	ldr	r3, [sp, #12]
   30e44:	add	r3, r3, r6
   30e48:	str	r3, [sp, #12]
   30e4c:	ldr	r3, [sp, #16]
   30e50:	ldr	r2, [sp, #12]
   30e54:	cmp	r2, r3
   30e58:	bge	30f04 <GetDataSlab+0xf920>
   30e5c:	ldr	r3, [sp, #196]	; 0xc4
   30e60:	ldr	r3, [r3]
   30e64:	cmp	r3, #0
   30e68:	addne	ip, ip, r3
   30e6c:	addne	lr, lr, r3
   30e70:	ldr	r6, [fp]
   30e74:	cmp	r6, #0
   30e78:	ble	30eac <GetDataSlab+0xf8c8>
   30e7c:	sub	r2, ip, #1
   30e80:	ldr	r3, [sp, #4]
   30e84:	ldr	r1, [sp, #12]
   30e88:	add	r1, r3, r1, lsl #2
   30e8c:	ldrsb	r3, [r2, #1]
   30e90:	str	r3, [r1], #4
   30e94:	ldr	r6, [fp]
   30e98:	add	r3, r2, #2
   30e9c:	sub	r3, r3, ip
   30ea0:	add	r2, r2, #1
   30ea4:	cmp	r6, r3
   30ea8:	bgt	30e8c <GetDataSlab+0xf8a8>
   30eac:	ldr	r3, [sp, #192]	; 0xc0
   30eb0:	ldr	r2, [r3]
   30eb4:	ldr	r3, [sp, #196]	; 0xc4
   30eb8:	ldr	r3, [r3]
   30ebc:	sub	r3, r2, r3
   30ec0:	add	lr, lr, r3
   30ec4:	add	ip, ip, r3
   30ec8:	cmp	r9, #1
   30ecc:	ble	30e40 <GetDataSlab+0xf85c>
   30ed0:	ldr	r3, [sp, #76]	; 0x4c
   30ed4:	add	r3, r3, #1
   30ed8:	str	r3, [sp, #76]	; 0x4c
   30edc:	ldr	r1, [fp, #4]
   30ee0:	sdiv	r2, r3, r1
   30ee4:	mls	r3, r1, r2, r3
   30ee8:	cmp	r3, #0
   30eec:	bne	30e28 <GetDataSlab+0xf844>
   30ef0:	add	r4, sp, #76	; 0x4c
   30ef4:	add	r7, fp, #4
   30ef8:	add	r5, sp, #116	; 0x74
   30efc:	ldr	r0, [sp, #28]
   30f00:	b	30dec <GetDataSlab+0xf808>
   30f04:	mov	r3, #0
   30f08:	b	251fc <GetDataSlab+0x3c18>
   30f0c:	ldr	r3, [sp, #196]	; 0xc4
   30f10:	ldr	r2, [r3, r0, lsl #2]
   30f14:	cmp	r2, #0
   30f18:	beq	30f2c <GetDataSlab+0xf948>
   30f1c:	ldr	r3, [r5, #-4]
   30f20:	mul	r3, r3, r2
   30f24:	add	ip, ip, r3
   30f28:	add	lr, lr, r3
   30f2c:	add	r0, r0, #1
   30f30:	cmp	r9, r0
   30f34:	beq	30fbc <GetDataSlab+0xf9d8>
   30f38:	ldr	r3, [r4]
   30f3c:	add	r1, r3, #1
   30f40:	str	r1, [r4]
   30f44:	ldr	r2, [r7, #4]!
   30f48:	sdiv	r3, r1, r2
   30f4c:	mls	r3, r2, r3, r1
   30f50:	cmp	r3, #0
   30f54:	bne	30fa8 <GetDataSlab+0xf9c4>
   30f58:	str	r8, [r4], #4
   30f5c:	add	r5, r5, #4
   30f60:	ldr	r2, [r5]
   30f64:	sdiv	r3, lr, r2
   30f68:	mls	r3, r2, r3, lr
   30f6c:	cmp	r3, #0
   30f70:	beq	30f0c <GetDataSlab+0xf928>
   30f74:	ldr	r1, [r5, #-4]
   30f78:	str	r1, [sp, #8]
   30f7c:	ldr	r1, [sp, #196]	; 0xc4
   30f80:	ldr	r1, [r1, r0, lsl #2]
   30f84:	str	r1, [sp, #12]
   30f88:	sub	r3, r2, r3
   30f8c:	mov	r2, r1
   30f90:	ldr	r1, [sp, #8]
   30f94:	mla	r3, r2, r1, r3
   30f98:	add	ip, ip, r3
   30f9c:	add	lr, lr, r3
   30fa0:	b	30f2c <GetDataSlab+0xf948>
   30fa4:	mov	r0, #1
   30fa8:	add	r3, sp, #152	; 0x98
   30fac:	add	r3, r3, r0, lsl #2
   30fb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   30fb4:	add	lr, lr, r3
   30fb8:	add	ip, ip, r3
   30fbc:	ldr	r3, [sp, #20]
   30fc0:	add	r3, r3, r6
   30fc4:	str	r3, [sp, #20]
   30fc8:	ldr	r2, [sp, #16]
   30fcc:	cmp	r3, r2
   30fd0:	bge	31088 <GetDataSlab+0xfaa4>
   30fd4:	ldr	r3, [sp, #196]	; 0xc4
   30fd8:	ldr	r3, [r3]
   30fdc:	cmp	r3, #0
   30fe0:	addne	ip, ip, r3
   30fe4:	addne	lr, lr, r3
   30fe8:	ldr	r6, [fp]
   30fec:	cmp	r6, #0
   30ff0:	ble	31028 <GetDataSlab+0xfa44>
   30ff4:	ldr	r3, [sp, #4]
   30ff8:	ldr	r2, [sp, #20]
   30ffc:	add	r2, r3, r2, lsl #2
   31000:	mov	r3, #0
   31004:	ldrsb	r1, [ip]
   31008:	str	r1, [r2], #4
   3100c:	ldr	r1, [sl]
   31010:	add	ip, ip, r1
   31014:	add	lr, lr, r1
   31018:	add	r3, r3, #1
   3101c:	ldr	r6, [fp]
   31020:	cmp	r6, r3
   31024:	bgt	31004 <GetDataSlab+0xfa20>
   31028:	ldr	r3, [sp, #192]	; 0xc0
   3102c:	ldr	r2, [r3]
   31030:	ldr	r3, [sp, #196]	; 0xc4
   31034:	ldr	r3, [r3]
   31038:	sub	r3, r2, r3
   3103c:	ldr	r2, [sl]
   31040:	mls	r3, r2, r6, r3
   31044:	add	lr, lr, r3
   31048:	add	ip, ip, r3
   3104c:	cmp	r9, #1
   31050:	ble	30fbc <GetDataSlab+0xf9d8>
   31054:	ldr	r3, [sp, #76]	; 0x4c
   31058:	add	r3, r3, #1
   3105c:	str	r3, [sp, #76]	; 0x4c
   31060:	ldr	r1, [fp, #4]
   31064:	sdiv	r2, r3, r1
   31068:	mls	r3, r1, r2, r3
   3106c:	cmp	r3, #0
   31070:	bne	30fa4 <GetDataSlab+0xf9c0>
   31074:	add	r4, sp, #76	; 0x4c
   31078:	add	r7, fp, #4
   3107c:	add	r5, sp, #112	; 0x70
   31080:	mov	r0, #1
   31084:	b	30f58 <GetDataSlab+0xf974>
   31088:	mov	r3, #0
   3108c:	b	251fc <GetDataSlab+0x3c18>
   31090:	ldr	r3, [sl]
   31094:	str	r3, [sp, #28]
   31098:	sub	r3, r3, #1
   3109c:	str	r3, [sp, #32]
   310a0:	ldr	r3, [sp, #192]	; 0xc0
   310a4:	ldr	r3, [r3]
   310a8:	str	r3, [sp, #112]	; 0x70
   310ac:	ldr	r3, [fp]
   310b0:	str	r3, [sp, #16]
   310b4:	cmp	r9, #1
   310b8:	ble	310dc <GetDataSlab+0xfaf8>
   310bc:	str	sl, [sp, #20]
   310c0:	add	r8, sp, #36	; 0x24
   310c4:	ldr	r5, [sp, #192]	; 0xc0
   310c8:	add	r6, sp, #112	; 0x70
   310cc:	str	r5, [sp, #12]
   310d0:	mov	r4, #1
   310d4:	mov	lr, #0
   310d8:	b	3ece8 <GetDataSlab+0x1d704>
   310dc:	mov	lr, #0
   310e0:	b	3ed80 <GetDataSlab+0x1d79c>
   310e4:	ldr	r3, [sp, #16]
   310e8:	cmp	r3, #0
   310ec:	ble	3a45c <GetDataSlab+0x18e78>
   310f0:	mov	r3, #0
   310f4:	str	r3, [sp, #12]
   310f8:	mov	r8, r3
   310fc:	b	311bc <GetDataSlab+0xfbd8>
   31100:	ldr	r3, [sp, #196]	; 0xc4
   31104:	ldr	r3, [r3, r0, lsl #2]
   31108:	cmp	r3, #0
   3110c:	beq	31120 <GetDataSlab+0xfb3c>
   31110:	ldr	r2, [r5, #-8]
   31114:	mul	r3, r2, r3
   31118:	add	ip, ip, r3
   3111c:	add	lr, lr, r3
   31120:	add	r0, r0, #1
   31124:	cmp	r9, r0
   31128:	beq	311a0 <GetDataSlab+0xfbbc>
   3112c:	ldr	r3, [r4]
   31130:	add	r1, r3, #1
   31134:	str	r1, [r4]
   31138:	ldr	r2, [r7, #4]!
   3113c:	sdiv	r3, r1, r2
   31140:	mls	r3, r2, r3, r1
   31144:	cmp	r3, #0
   31148:	bne	3118c <GetDataSlab+0xfba8>
   3114c:	str	r8, [r4], #4
   31150:	ldr	r2, [r5], #4
   31154:	sdiv	r3, lr, r2
   31158:	mls	r3, r2, r3, lr
   3115c:	cmp	r3, #0
   31160:	beq	31100 <GetDataSlab+0xfb1c>
   31164:	ldr	r1, [r5, #-8]
   31168:	ldr	sl, [sp, #196]	; 0xc4
   3116c:	ldr	sl, [sl, r0, lsl #2]
   31170:	str	sl, [sp, #8]
   31174:	sub	r3, r2, r3
   31178:	mla	r3, sl, r1, r3
   3117c:	add	ip, ip, r3
   31180:	add	lr, lr, r3
   31184:	b	31120 <GetDataSlab+0xfb3c>
   31188:	ldr	r0, [sp, #28]
   3118c:	add	r3, sp, #152	; 0x98
   31190:	add	r3, r3, r0, lsl #2
   31194:	ldr	r3, [r3, #-120]	; 0xffffff88
   31198:	add	lr, lr, r3
   3119c:	add	ip, ip, r3
   311a0:	ldr	r3, [sp, #12]
   311a4:	add	r3, r3, r6
   311a8:	str	r3, [sp, #12]
   311ac:	ldr	r3, [sp, #16]
   311b0:	ldr	r2, [sp, #12]
   311b4:	cmp	r2, r3
   311b8:	bge	31264 <GetDataSlab+0xfc80>
   311bc:	ldr	r3, [sp, #196]	; 0xc4
   311c0:	ldr	r3, [r3]
   311c4:	cmp	r3, #0
   311c8:	addne	ip, ip, r3
   311cc:	addne	lr, lr, r3
   311d0:	ldr	r6, [fp]
   311d4:	cmp	r6, #0
   311d8:	ble	3120c <GetDataSlab+0xfc28>
   311dc:	sub	r2, ip, #1
   311e0:	ldr	r3, [sp, #4]
   311e4:	ldr	r1, [sp, #12]
   311e8:	add	r1, r3, r1, lsl #2
   311ec:	ldrb	r3, [r2, #1]
   311f0:	str	r3, [r1], #4
   311f4:	ldr	r6, [fp]
   311f8:	add	r3, r2, #2
   311fc:	sub	r3, r3, ip
   31200:	add	r2, r2, #1
   31204:	cmp	r6, r3
   31208:	bgt	311ec <GetDataSlab+0xfc08>
   3120c:	ldr	r3, [sp, #192]	; 0xc0
   31210:	ldr	r2, [r3]
   31214:	ldr	r3, [sp, #196]	; 0xc4
   31218:	ldr	r3, [r3]
   3121c:	sub	r3, r2, r3
   31220:	add	lr, lr, r3
   31224:	add	ip, ip, r3
   31228:	cmp	r9, #1
   3122c:	ble	311a0 <GetDataSlab+0xfbbc>
   31230:	ldr	r3, [sp, #76]	; 0x4c
   31234:	add	r3, r3, #1
   31238:	str	r3, [sp, #76]	; 0x4c
   3123c:	ldr	r1, [fp, #4]
   31240:	sdiv	r2, r3, r1
   31244:	mls	r3, r1, r2, r3
   31248:	cmp	r3, #0
   3124c:	bne	31188 <GetDataSlab+0xfba4>
   31250:	add	r4, sp, #76	; 0x4c
   31254:	add	r7, fp, #4
   31258:	add	r5, sp, #116	; 0x74
   3125c:	ldr	r0, [sp, #28]
   31260:	b	3114c <GetDataSlab+0xfb68>
   31264:	mov	r3, #0
   31268:	b	251fc <GetDataSlab+0x3c18>
   3126c:	ldr	r3, [sp, #196]	; 0xc4
   31270:	ldr	r2, [r3, r0, lsl #2]
   31274:	cmp	r2, #0
   31278:	beq	3128c <GetDataSlab+0xfca8>
   3127c:	ldr	r3, [r5, #-4]
   31280:	mul	r3, r3, r2
   31284:	add	ip, ip, r3
   31288:	add	lr, lr, r3
   3128c:	add	r0, r0, #1
   31290:	cmp	r9, r0
   31294:	beq	3131c <GetDataSlab+0xfd38>
   31298:	ldr	r3, [r4]
   3129c:	add	r1, r3, #1
   312a0:	str	r1, [r4]
   312a4:	ldr	r2, [r7, #4]!
   312a8:	sdiv	r3, r1, r2
   312ac:	mls	r3, r2, r3, r1
   312b0:	cmp	r3, #0
   312b4:	bne	31308 <GetDataSlab+0xfd24>
   312b8:	str	r8, [r4], #4
   312bc:	add	r5, r5, #4
   312c0:	ldr	r2, [r5]
   312c4:	sdiv	r3, lr, r2
   312c8:	mls	r3, r2, r3, lr
   312cc:	cmp	r3, #0
   312d0:	beq	3126c <GetDataSlab+0xfc88>
   312d4:	ldr	r1, [r5, #-4]
   312d8:	str	r1, [sp, #8]
   312dc:	ldr	r1, [sp, #196]	; 0xc4
   312e0:	ldr	r1, [r1, r0, lsl #2]
   312e4:	str	r1, [sp, #12]
   312e8:	sub	r3, r2, r3
   312ec:	mov	r2, r1
   312f0:	ldr	r1, [sp, #8]
   312f4:	mla	r3, r2, r1, r3
   312f8:	add	ip, ip, r3
   312fc:	add	lr, lr, r3
   31300:	b	3128c <GetDataSlab+0xfca8>
   31304:	mov	r0, #1
   31308:	add	r3, sp, #152	; 0x98
   3130c:	add	r3, r3, r0, lsl #2
   31310:	ldr	r3, [r3, #-120]	; 0xffffff88
   31314:	add	lr, lr, r3
   31318:	add	ip, ip, r3
   3131c:	ldr	r3, [sp, #20]
   31320:	add	r3, r3, r6
   31324:	str	r3, [sp, #20]
   31328:	ldr	r2, [sp, #16]
   3132c:	cmp	r3, r2
   31330:	bge	313e8 <GetDataSlab+0xfe04>
   31334:	ldr	r3, [sp, #196]	; 0xc4
   31338:	ldr	r3, [r3]
   3133c:	cmp	r3, #0
   31340:	addne	ip, ip, r3
   31344:	addne	lr, lr, r3
   31348:	ldr	r6, [fp]
   3134c:	cmp	r6, #0
   31350:	ble	31388 <GetDataSlab+0xfda4>
   31354:	ldr	r3, [sp, #4]
   31358:	ldr	r2, [sp, #20]
   3135c:	add	r2, r3, r2, lsl #2
   31360:	mov	r3, #0
   31364:	ldrb	r1, [ip]
   31368:	str	r1, [r2], #4
   3136c:	ldr	r1, [sl]
   31370:	add	ip, ip, r1
   31374:	add	lr, lr, r1
   31378:	add	r3, r3, #1
   3137c:	ldr	r6, [fp]
   31380:	cmp	r6, r3
   31384:	bgt	31364 <GetDataSlab+0xfd80>
   31388:	ldr	r3, [sp, #192]	; 0xc0
   3138c:	ldr	r2, [r3]
   31390:	ldr	r3, [sp, #196]	; 0xc4
   31394:	ldr	r3, [r3]
   31398:	sub	r3, r2, r3
   3139c:	ldr	r2, [sl]
   313a0:	mls	r3, r2, r6, r3
   313a4:	add	lr, lr, r3
   313a8:	add	ip, ip, r3
   313ac:	cmp	r9, #1
   313b0:	ble	3131c <GetDataSlab+0xfd38>
   313b4:	ldr	r3, [sp, #76]	; 0x4c
   313b8:	add	r3, r3, #1
   313bc:	str	r3, [sp, #76]	; 0x4c
   313c0:	ldr	r1, [fp, #4]
   313c4:	sdiv	r2, r3, r1
   313c8:	mls	r3, r1, r2, r3
   313cc:	cmp	r3, #0
   313d0:	bne	31304 <GetDataSlab+0xfd20>
   313d4:	add	r4, sp, #76	; 0x4c
   313d8:	add	r7, fp, #4
   313dc:	add	r5, sp, #112	; 0x70
   313e0:	mov	r0, #1
   313e4:	b	312b8 <GetDataSlab+0xfcd4>
   313e8:	mov	r3, #0
   313ec:	b	251fc <GetDataSlab+0x3c18>
   313f0:	cmp	r8, #12
   313f4:	beq	31450 <GetDataSlab+0xfe6c>
   313f8:	cmp	r8, #13
   313fc:	movne	r3, #1
   31400:	bne	251fc <GetDataSlab+0x3c18>
   31404:	ldr	r3, [sl]
   31408:	str	r3, [sp, #28]
   3140c:	sub	r3, r3, #1
   31410:	str	r3, [sp, #32]
   31414:	ldr	r3, [sp, #192]	; 0xc0
   31418:	ldr	r3, [r3]
   3141c:	str	r3, [sp, #112]	; 0x70
   31420:	ldr	r3, [fp]
   31424:	str	r3, [sp, #16]
   31428:	cmp	r9, #1
   3142c:	ble	317a0 <GetDataSlab+0x101bc>
   31430:	str	sl, [sp, #20]
   31434:	add	r8, sp, #36	; 0x24
   31438:	ldr	r5, [sp, #192]	; 0xc0
   3143c:	add	r6, sp, #112	; 0x70
   31440:	str	r5, [sp, #12]
   31444:	mov	r4, #1
   31448:	mov	lr, #0
   3144c:	b	3ea18 <GetDataSlab+0x1d434>
   31450:	ldr	r3, [sl]
   31454:	str	r3, [sp, #28]
   31458:	sub	r3, r3, #1
   3145c:	str	r3, [sp, #32]
   31460:	ldr	r3, [sp, #192]	; 0xc0
   31464:	ldr	r3, [r3]
   31468:	str	r3, [sp, #112]	; 0x70
   3146c:	ldr	r3, [fp]
   31470:	str	r3, [sp, #16]
   31474:	cmp	r9, #1
   31478:	ble	3149c <GetDataSlab+0xfeb8>
   3147c:	str	sl, [sp, #20]
   31480:	add	r8, sp, #36	; 0x24
   31484:	ldr	r5, [sp, #192]	; 0xc0
   31488:	add	r6, sp, #112	; 0x70
   3148c:	str	r5, [sp, #12]
   31490:	mov	r4, #1
   31494:	mov	lr, #0
   31498:	b	3eb08 <GetDataSlab+0x1d524>
   3149c:	mov	lr, #0
   314a0:	b	3eba0 <GetDataSlab+0x1d5bc>
   314a4:	ldr	r3, [sp, #16]
   314a8:	cmp	r3, #0
   314ac:	ble	3ebcc <GetDataSlab+0x1d5e8>
   314b0:	mov	r3, #0
   314b4:	str	r3, [sp, #12]
   314b8:	mov	r8, r3
   314bc:	b	31580 <GetDataSlab+0xff9c>
   314c0:	ldr	r3, [sp, #196]	; 0xc4
   314c4:	ldr	r2, [r3, r0, lsl #2]
   314c8:	cmp	r2, #0
   314cc:	beq	314e0 <GetDataSlab+0xfefc>
   314d0:	ldr	r3, [r5, #-4]
   314d4:	mul	r3, r3, r2
   314d8:	add	ip, ip, r3, lsl #3
   314dc:	add	lr, lr, r3
   314e0:	add	r0, r0, #1
   314e4:	cmp	r9, r0
   314e8:	beq	31564 <GetDataSlab+0xff80>
   314ec:	ldr	r3, [r4]
   314f0:	add	r1, r3, #1
   314f4:	str	r1, [r4]
   314f8:	ldr	r2, [r7, #4]!
   314fc:	sdiv	r3, r1, r2
   31500:	mls	r3, r2, r3, r1
   31504:	cmp	r3, #0
   31508:	bne	31550 <GetDataSlab+0xff6c>
   3150c:	str	r8, [r4], #4
   31510:	add	r5, r5, #4
   31514:	ldr	r2, [r5]
   31518:	sdiv	r3, lr, r2
   3151c:	mls	r3, r2, r3, lr
   31520:	cmp	r3, #0
   31524:	beq	314c0 <GetDataSlab+0xfedc>
   31528:	ldr	r1, [r5, #-4]
   3152c:	ldr	sl, [sp, #196]	; 0xc4
   31530:	ldr	sl, [sl, r0, lsl #2]
   31534:	str	sl, [sp, #8]
   31538:	sub	r3, r2, r3
   3153c:	mla	r3, sl, r1, r3
   31540:	add	ip, ip, r3, lsl #3
   31544:	add	lr, lr, r3
   31548:	b	314e0 <GetDataSlab+0xfefc>
   3154c:	ldr	r0, [sp, #28]
   31550:	add	r3, sp, #152	; 0x98
   31554:	add	r3, r3, r0, lsl #2
   31558:	ldr	r3, [r3, #-120]	; 0xffffff88
   3155c:	add	lr, lr, r3
   31560:	add	ip, ip, r3, lsl #3
   31564:	ldr	r3, [sp, #12]
   31568:	add	r3, r3, r6
   3156c:	str	r3, [sp, #12]
   31570:	ldr	r3, [sp, #16]
   31574:	ldr	r2, [sp, #12]
   31578:	cmp	r2, r3
   3157c:	bge	3ebcc <GetDataSlab+0x1d5e8>
   31580:	ldr	r3, [sp, #196]	; 0xc4
   31584:	ldr	r3, [r3]
   31588:	cmp	r3, #0
   3158c:	addne	ip, ip, r3, lsl #3
   31590:	addne	lr, lr, r3
   31594:	ldr	r6, [fp]
   31598:	cmp	r6, #0
   3159c:	ble	315cc <GetDataSlab+0xffe8>
   315a0:	sub	r0, ip, #8
   315a4:	ldr	r3, [sp, #4]
   315a8:	ldr	r2, [sp, #12]
   315ac:	add	r1, r3, r2, lsl #2
   315b0:	mov	r2, #0
   315b4:	ldr	r3, [r0, #8]!
   315b8:	str	r3, [r1], #4
   315bc:	add	r2, r2, #1
   315c0:	ldr	r6, [fp]
   315c4:	cmp	r6, r2
   315c8:	bgt	315b4 <GetDataSlab+0xffd0>
   315cc:	ldr	r3, [sp, #192]	; 0xc0
   315d0:	ldr	r2, [r3]
   315d4:	ldr	r3, [sp, #196]	; 0xc4
   315d8:	ldr	r3, [r3]
   315dc:	sub	r3, r2, r3
   315e0:	add	lr, lr, r3
   315e4:	add	ip, ip, r3, lsl #3
   315e8:	cmp	r9, #1
   315ec:	ble	31564 <GetDataSlab+0xff80>
   315f0:	ldr	r3, [sp, #76]	; 0x4c
   315f4:	add	r3, r3, #1
   315f8:	str	r3, [sp, #76]	; 0x4c
   315fc:	ldr	r1, [fp, #4]
   31600:	sdiv	r2, r3, r1
   31604:	mls	r3, r1, r2, r3
   31608:	cmp	r3, #0
   3160c:	bne	3154c <GetDataSlab+0xff68>
   31610:	add	r4, sp, #76	; 0x4c
   31614:	add	r7, fp, #4
   31618:	add	r5, sp, #112	; 0x70
   3161c:	ldr	r0, [sp, #28]
   31620:	b	3150c <GetDataSlab+0xff28>
   31624:	ldr	r3, [sp, #196]	; 0xc4
   31628:	ldr	r2, [r3, r0, lsl #2]
   3162c:	cmp	r2, #0
   31630:	beq	31644 <GetDataSlab+0x10060>
   31634:	ldr	r3, [r5, #-4]
   31638:	mul	r3, r3, r2
   3163c:	add	ip, ip, r3, lsl #3
   31640:	add	lr, lr, r3
   31644:	add	r0, r0, #1
   31648:	cmp	r9, r0
   3164c:	beq	316d4 <GetDataSlab+0x100f0>
   31650:	ldr	r3, [r4]
   31654:	add	r1, r3, #1
   31658:	str	r1, [r4]
   3165c:	ldr	r2, [r7, #4]!
   31660:	sdiv	r3, r1, r2
   31664:	mls	r3, r2, r3, r1
   31668:	cmp	r3, #0
   3166c:	bne	316c0 <GetDataSlab+0x100dc>
   31670:	str	r8, [r4], #4
   31674:	add	r5, r5, #4
   31678:	ldr	r2, [r5]
   3167c:	sdiv	r3, lr, r2
   31680:	mls	r3, r2, r3, lr
   31684:	cmp	r3, #0
   31688:	beq	31624 <GetDataSlab+0x10040>
   3168c:	ldr	r1, [r5, #-4]
   31690:	str	r1, [sp, #8]
   31694:	ldr	r1, [sp, #196]	; 0xc4
   31698:	ldr	r1, [r1, r0, lsl #2]
   3169c:	str	r1, [sp, #12]
   316a0:	sub	r3, r2, r3
   316a4:	mov	r2, r1
   316a8:	ldr	r1, [sp, #8]
   316ac:	mla	r3, r2, r1, r3
   316b0:	add	ip, ip, r3, lsl #3
   316b4:	add	lr, lr, r3
   316b8:	b	31644 <GetDataSlab+0x10060>
   316bc:	mov	r0, #1
   316c0:	add	r3, sp, #152	; 0x98
   316c4:	add	r3, r3, r0, lsl #2
   316c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   316cc:	add	lr, lr, r3
   316d0:	add	ip, ip, r3, lsl #3
   316d4:	ldr	r3, [sp, #20]
   316d8:	add	r3, r3, r6
   316dc:	str	r3, [sp, #20]
   316e0:	ldr	r2, [sp, #16]
   316e4:	cmp	r3, r2
   316e8:	bge	3ebcc <GetDataSlab+0x1d5e8>
   316ec:	ldr	r3, [sp, #196]	; 0xc4
   316f0:	ldr	r3, [r3]
   316f4:	cmp	r3, #0
   316f8:	addne	ip, ip, r3, lsl #3
   316fc:	addne	lr, lr, r3
   31700:	ldr	r6, [fp]
   31704:	cmp	r6, #0
   31708:	ble	31740 <GetDataSlab+0x1015c>
   3170c:	ldr	r3, [sp, #4]
   31710:	ldr	r2, [sp, #20]
   31714:	add	r2, r3, r2, lsl #2
   31718:	mov	r3, #0
   3171c:	ldr	r1, [ip]
   31720:	str	r1, [r2], #4
   31724:	ldr	r1, [sl]
   31728:	add	ip, ip, r1, lsl #3
   3172c:	add	lr, lr, r1
   31730:	add	r3, r3, #1
   31734:	ldr	r6, [fp]
   31738:	cmp	r6, r3
   3173c:	bgt	3171c <GetDataSlab+0x10138>
   31740:	ldr	r3, [sp, #192]	; 0xc0
   31744:	ldr	r2, [r3]
   31748:	ldr	r3, [sp, #196]	; 0xc4
   3174c:	ldr	r3, [r3]
   31750:	sub	r3, r2, r3
   31754:	ldr	r2, [sl]
   31758:	mls	r3, r2, r6, r3
   3175c:	add	lr, lr, r3
   31760:	add	ip, ip, r3, lsl #3
   31764:	cmp	r9, #1
   31768:	ble	316d4 <GetDataSlab+0x100f0>
   3176c:	ldr	r3, [sp, #76]	; 0x4c
   31770:	add	r3, r3, #1
   31774:	str	r3, [sp, #76]	; 0x4c
   31778:	ldr	r1, [fp, #4]
   3177c:	sdiv	r2, r3, r1
   31780:	mls	r3, r1, r2, r3
   31784:	cmp	r3, #0
   31788:	bne	316bc <GetDataSlab+0x100d8>
   3178c:	add	r4, sp, #76	; 0x4c
   31790:	add	r7, fp, #4
   31794:	add	r5, sp, #112	; 0x70
   31798:	mov	r0, #1
   3179c:	b	31670 <GetDataSlab+0x1008c>
   317a0:	mov	lr, #0
   317a4:	b	3eab0 <GetDataSlab+0x1d4cc>
   317a8:	ldr	r3, [sp, #16]
   317ac:	cmp	r3, #0
   317b0:	ble	3a464 <GetDataSlab+0x18e80>
   317b4:	mov	r3, #0
   317b8:	str	r3, [sp, #12]
   317bc:	mov	r8, r3
   317c0:	b	31884 <GetDataSlab+0x102a0>
   317c4:	ldr	r3, [sp, #196]	; 0xc4
   317c8:	ldr	r2, [r3, r0, lsl #2]
   317cc:	cmp	r2, #0
   317d0:	beq	317e4 <GetDataSlab+0x10200>
   317d4:	ldr	r3, [r5, #-4]
   317d8:	mul	r3, r3, r2
   317dc:	add	ip, ip, r3, lsl #3
   317e0:	add	lr, lr, r3
   317e4:	add	r0, r0, #1
   317e8:	cmp	r9, r0
   317ec:	beq	31868 <GetDataSlab+0x10284>
   317f0:	ldr	r3, [r4]
   317f4:	add	r1, r3, #1
   317f8:	str	r1, [r4]
   317fc:	ldr	r2, [r7, #4]!
   31800:	sdiv	r3, r1, r2
   31804:	mls	r3, r2, r3, r1
   31808:	cmp	r3, #0
   3180c:	bne	31854 <GetDataSlab+0x10270>
   31810:	str	r8, [r4], #4
   31814:	add	r5, r5, #4
   31818:	ldr	r2, [r5]
   3181c:	sdiv	r3, lr, r2
   31820:	mls	r3, r2, r3, lr
   31824:	cmp	r3, #0
   31828:	beq	317c4 <GetDataSlab+0x101e0>
   3182c:	ldr	r1, [r5, #-4]
   31830:	ldr	sl, [sp, #196]	; 0xc4
   31834:	ldr	sl, [sl, r0, lsl #2]
   31838:	str	sl, [sp, #8]
   3183c:	sub	r3, r2, r3
   31840:	mla	r3, sl, r1, r3
   31844:	add	ip, ip, r3, lsl #3
   31848:	add	lr, lr, r3
   3184c:	b	317e4 <GetDataSlab+0x10200>
   31850:	ldr	r0, [sp, #28]
   31854:	add	r3, sp, #152	; 0x98
   31858:	add	r3, r3, r0, lsl #2
   3185c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31860:	add	lr, lr, r3
   31864:	add	ip, ip, r3, lsl #3
   31868:	ldr	r3, [sp, #12]
   3186c:	add	r3, r3, r6
   31870:	str	r3, [sp, #12]
   31874:	ldr	r3, [sp, #16]
   31878:	ldr	r2, [sp, #12]
   3187c:	cmp	r2, r3
   31880:	bge	31928 <GetDataSlab+0x10344>
   31884:	ldr	r3, [sp, #196]	; 0xc4
   31888:	ldr	r3, [r3]
   3188c:	cmp	r3, #0
   31890:	addne	ip, ip, r3, lsl #3
   31894:	addne	lr, lr, r3
   31898:	ldr	r6, [fp]
   3189c:	cmp	r6, #0
   318a0:	ble	318d0 <GetDataSlab+0x102ec>
   318a4:	sub	r0, ip, #8
   318a8:	ldr	r3, [sp, #4]
   318ac:	ldr	r2, [sp, #12]
   318b0:	add	r1, r3, r2, lsl #2
   318b4:	mov	r2, #0
   318b8:	ldr	r3, [r0, #8]!
   318bc:	str	r3, [r1], #4
   318c0:	add	r2, r2, #1
   318c4:	ldr	r6, [fp]
   318c8:	cmp	r6, r2
   318cc:	bgt	318b8 <GetDataSlab+0x102d4>
   318d0:	ldr	r3, [sp, #192]	; 0xc0
   318d4:	ldr	r2, [r3]
   318d8:	ldr	r3, [sp, #196]	; 0xc4
   318dc:	ldr	r3, [r3]
   318e0:	sub	r3, r2, r3
   318e4:	add	lr, lr, r3
   318e8:	add	ip, ip, r3, lsl #3
   318ec:	cmp	r9, #1
   318f0:	ble	31868 <GetDataSlab+0x10284>
   318f4:	ldr	r3, [sp, #76]	; 0x4c
   318f8:	add	r3, r3, #1
   318fc:	str	r3, [sp, #76]	; 0x4c
   31900:	ldr	r1, [fp, #4]
   31904:	sdiv	r2, r3, r1
   31908:	mls	r3, r1, r2, r3
   3190c:	cmp	r3, #0
   31910:	bne	31850 <GetDataSlab+0x1026c>
   31914:	add	r4, sp, #76	; 0x4c
   31918:	add	r7, fp, #4
   3191c:	add	r5, sp, #112	; 0x70
   31920:	ldr	r0, [sp, #28]
   31924:	b	31810 <GetDataSlab+0x1022c>
   31928:	mov	r3, #0
   3192c:	b	251fc <GetDataSlab+0x3c18>
   31930:	ldr	r3, [sp, #196]	; 0xc4
   31934:	ldr	r2, [r3, r0, lsl #2]
   31938:	cmp	r2, #0
   3193c:	beq	31950 <GetDataSlab+0x1036c>
   31940:	ldr	r3, [r5, #-4]
   31944:	mul	r3, r3, r2
   31948:	add	ip, ip, r3, lsl #3
   3194c:	add	lr, lr, r3
   31950:	add	r0, r0, #1
   31954:	cmp	r9, r0
   31958:	beq	319e0 <GetDataSlab+0x103fc>
   3195c:	ldr	r3, [r4]
   31960:	add	r1, r3, #1
   31964:	str	r1, [r4]
   31968:	ldr	r2, [r7, #4]!
   3196c:	sdiv	r3, r1, r2
   31970:	mls	r3, r2, r3, r1
   31974:	cmp	r3, #0
   31978:	bne	319cc <GetDataSlab+0x103e8>
   3197c:	str	r8, [r4], #4
   31980:	add	r5, r5, #4
   31984:	ldr	r2, [r5]
   31988:	sdiv	r3, lr, r2
   3198c:	mls	r3, r2, r3, lr
   31990:	cmp	r3, #0
   31994:	beq	31930 <GetDataSlab+0x1034c>
   31998:	ldr	r1, [r5, #-4]
   3199c:	str	r1, [sp, #8]
   319a0:	ldr	r1, [sp, #196]	; 0xc4
   319a4:	ldr	r1, [r1, r0, lsl #2]
   319a8:	str	r1, [sp, #12]
   319ac:	sub	r3, r2, r3
   319b0:	mov	r2, r1
   319b4:	ldr	r1, [sp, #8]
   319b8:	mla	r3, r2, r1, r3
   319bc:	add	ip, ip, r3, lsl #3
   319c0:	add	lr, lr, r3
   319c4:	b	31950 <GetDataSlab+0x1036c>
   319c8:	mov	r0, #1
   319cc:	add	r3, sp, #152	; 0x98
   319d0:	add	r3, r3, r0, lsl #2
   319d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   319d8:	add	lr, lr, r3
   319dc:	add	ip, ip, r3, lsl #3
   319e0:	ldr	r3, [sp, #20]
   319e4:	add	r3, r3, r6
   319e8:	str	r3, [sp, #20]
   319ec:	ldr	r2, [sp, #16]
   319f0:	cmp	r3, r2
   319f4:	bge	31aac <GetDataSlab+0x104c8>
   319f8:	ldr	r3, [sp, #196]	; 0xc4
   319fc:	ldr	r3, [r3]
   31a00:	cmp	r3, #0
   31a04:	addne	ip, ip, r3, lsl #3
   31a08:	addne	lr, lr, r3
   31a0c:	ldr	r6, [fp]
   31a10:	cmp	r6, #0
   31a14:	ble	31a4c <GetDataSlab+0x10468>
   31a18:	ldr	r3, [sp, #4]
   31a1c:	ldr	r2, [sp, #20]
   31a20:	add	r2, r3, r2, lsl #2
   31a24:	mov	r3, #0
   31a28:	ldr	r1, [ip]
   31a2c:	str	r1, [r2], #4
   31a30:	ldr	r1, [sl]
   31a34:	add	ip, ip, r1, lsl #3
   31a38:	add	lr, lr, r1
   31a3c:	add	r3, r3, #1
   31a40:	ldr	r6, [fp]
   31a44:	cmp	r6, r3
   31a48:	bgt	31a28 <GetDataSlab+0x10444>
   31a4c:	ldr	r3, [sp, #192]	; 0xc0
   31a50:	ldr	r2, [r3]
   31a54:	ldr	r3, [sp, #196]	; 0xc4
   31a58:	ldr	r3, [r3]
   31a5c:	sub	r3, r2, r3
   31a60:	ldr	r2, [sl]
   31a64:	mls	r3, r2, r6, r3
   31a68:	add	lr, lr, r3
   31a6c:	add	ip, ip, r3, lsl #3
   31a70:	cmp	r9, #1
   31a74:	ble	319e0 <GetDataSlab+0x103fc>
   31a78:	ldr	r3, [sp, #76]	; 0x4c
   31a7c:	add	r3, r3, #1
   31a80:	str	r3, [sp, #76]	; 0x4c
   31a84:	ldr	r1, [fp, #4]
   31a88:	sdiv	r2, r3, r1
   31a8c:	mls	r3, r1, r2, r3
   31a90:	cmp	r3, #0
   31a94:	bne	319c8 <GetDataSlab+0x103e4>
   31a98:	add	r4, sp, #76	; 0x4c
   31a9c:	add	r7, fp, #4
   31aa0:	add	r5, sp, #112	; 0x70
   31aa4:	mov	r0, #1
   31aa8:	b	3197c <GetDataSlab+0x10398>
   31aac:	mov	r3, #0
   31ab0:	b	251fc <GetDataSlab+0x3c18>
   31ab4:	sub	r3, r8, #1
   31ab8:	cmp	r3, #8
   31abc:	addls	pc, pc, r3, lsl #2
   31ac0:	b	335ec <GetDataSlab+0x12008>
   31ac4:	b	32f30 <GetDataSlab+0x1194c>
   31ac8:	b	3328c <GetDataSlab+0x11ca8>
   31acc:	b	32878 <GetDataSlab+0x11294>
   31ad0:	b	32bd4 <GetDataSlab+0x115f0>
   31ad4:	b	321c0 <GetDataSlab+0x10bdc>
   31ad8:	b	3251c <GetDataSlab+0x10f38>
   31adc:	b	31e54 <GetDataSlab+0x10870>
   31ae0:	b	335ec <GetDataSlab+0x12008>
   31ae4:	b	31ae8 <GetDataSlab+0x10504>
   31ae8:	ldr	r3, [sl]
   31aec:	str	r3, [sp, #28]
   31af0:	sub	r3, r3, #1
   31af4:	str	r3, [sp, #32]
   31af8:	ldr	r3, [sp, #192]	; 0xc0
   31afc:	ldr	r3, [r3]
   31b00:	str	r3, [sp, #112]	; 0x70
   31b04:	ldr	r3, [fp]
   31b08:	str	r3, [sp, #16]
   31b0c:	cmp	r9, #1
   31b10:	ble	31b34 <GetDataSlab+0x10550>
   31b14:	str	sl, [sp, #20]
   31b18:	add	r8, sp, #36	; 0x24
   31b1c:	ldr	r5, [sp, #192]	; 0xc0
   31b20:	add	r6, sp, #112	; 0x70
   31b24:	str	r5, [sp, #12]
   31b28:	mov	r4, #1
   31b2c:	mov	lr, #0
   31b30:	b	3d668 <GetDataSlab+0x1c084>
   31b34:	mov	lr, #0
   31b38:	b	3d700 <GetDataSlab+0x1c11c>
   31b3c:	ldr	r3, [sp, #16]
   31b40:	cmp	r3, #0
   31b44:	ble	3a46c <GetDataSlab+0x18e88>
   31b48:	mov	r3, #0
   31b4c:	str	r3, [sp, #12]
   31b50:	mov	r8, r3
   31b54:	b	31c14 <GetDataSlab+0x10630>
   31b58:	ldr	r3, [sp, #196]	; 0xc4
   31b5c:	ldr	r3, [r3, r0, lsl #2]
   31b60:	cmp	r3, #0
   31b64:	beq	31b78 <GetDataSlab+0x10594>
   31b68:	ldr	r2, [r5, #-8]
   31b6c:	mul	r3, r2, r3
   31b70:	add	ip, ip, r3, lsl #3
   31b74:	add	lr, lr, r3
   31b78:	add	r0, r0, #1
   31b7c:	cmp	r9, r0
   31b80:	beq	31bf8 <GetDataSlab+0x10614>
   31b84:	ldr	r3, [r4]
   31b88:	add	r1, r3, #1
   31b8c:	str	r1, [r4]
   31b90:	ldr	r2, [r7, #4]!
   31b94:	sdiv	r3, r1, r2
   31b98:	mls	r3, r2, r3, r1
   31b9c:	cmp	r3, #0
   31ba0:	bne	31be4 <GetDataSlab+0x10600>
   31ba4:	str	r8, [r4], #4
   31ba8:	ldr	r2, [r5], #4
   31bac:	sdiv	r3, lr, r2
   31bb0:	mls	r3, r2, r3, lr
   31bb4:	cmp	r3, #0
   31bb8:	beq	31b58 <GetDataSlab+0x10574>
   31bbc:	ldr	r1, [r5, #-8]
   31bc0:	ldr	sl, [sp, #196]	; 0xc4
   31bc4:	ldr	sl, [sl, r0, lsl #2]
   31bc8:	str	sl, [sp, #8]
   31bcc:	sub	r3, r2, r3
   31bd0:	mla	r3, sl, r1, r3
   31bd4:	add	ip, ip, r3, lsl #3
   31bd8:	add	lr, lr, r3
   31bdc:	b	31b78 <GetDataSlab+0x10594>
   31be0:	ldr	r0, [sp, #28]
   31be4:	add	r3, sp, #152	; 0x98
   31be8:	add	r3, r3, r0, lsl #2
   31bec:	ldr	r3, [r3, #-120]	; 0xffffff88
   31bf0:	add	lr, lr, r3
   31bf4:	add	ip, ip, r3, lsl #3
   31bf8:	ldr	r3, [sp, #12]
   31bfc:	add	r3, r3, r6
   31c00:	str	r3, [sp, #12]
   31c04:	ldr	r3, [sp, #16]
   31c08:	ldr	r2, [sp, #12]
   31c0c:	cmp	r2, r3
   31c10:	bge	31cc0 <GetDataSlab+0x106dc>
   31c14:	ldr	r3, [sp, #196]	; 0xc4
   31c18:	ldr	r3, [r3]
   31c1c:	cmp	r3, #0
   31c20:	addne	ip, ip, r3, lsl #3
   31c24:	addne	lr, lr, r3
   31c28:	ldr	r6, [fp]
   31c2c:	cmp	r6, #0
   31c30:	ble	31c68 <GetDataSlab+0x10684>
   31c34:	mov	r1, ip
   31c38:	ldr	r3, [sp, #4]
   31c3c:	ldr	r2, [sp, #12]
   31c40:	add	r2, r3, r2, lsl #1
   31c44:	mov	r3, #0
   31c48:	vldmia	r1!, {d7}
   31c4c:	vcvt.s32.f64	s15, d7
   31c50:	vmov	r0, s15
   31c54:	strh	r0, [r2], #2
   31c58:	add	r3, r3, #1
   31c5c:	ldr	r6, [fp]
   31c60:	cmp	r6, r3
   31c64:	bgt	31c48 <GetDataSlab+0x10664>
   31c68:	ldr	r3, [sp, #192]	; 0xc0
   31c6c:	ldr	r2, [r3]
   31c70:	ldr	r3, [sp, #196]	; 0xc4
   31c74:	ldr	r3, [r3]
   31c78:	sub	r3, r2, r3
   31c7c:	add	lr, lr, r3
   31c80:	add	ip, ip, r3, lsl #3
   31c84:	cmp	r9, #1
   31c88:	ble	31bf8 <GetDataSlab+0x10614>
   31c8c:	ldr	r3, [sp, #76]	; 0x4c
   31c90:	add	r3, r3, #1
   31c94:	str	r3, [sp, #76]	; 0x4c
   31c98:	ldr	r1, [fp, #4]
   31c9c:	sdiv	r2, r3, r1
   31ca0:	mls	r3, r1, r2, r3
   31ca4:	cmp	r3, #0
   31ca8:	bne	31be0 <GetDataSlab+0x105fc>
   31cac:	add	r4, sp, #76	; 0x4c
   31cb0:	add	r7, fp, #4
   31cb4:	add	r5, sp, #116	; 0x74
   31cb8:	ldr	r0, [sp, #28]
   31cbc:	b	31ba4 <GetDataSlab+0x105c0>
   31cc0:	mov	r3, #0
   31cc4:	b	251fc <GetDataSlab+0x3c18>
   31cc8:	ldr	r3, [sp, #196]	; 0xc4
   31ccc:	ldr	r2, [r3, r0, lsl #2]
   31cd0:	cmp	r2, #0
   31cd4:	beq	31ce8 <GetDataSlab+0x10704>
   31cd8:	ldr	r3, [r5, #-4]
   31cdc:	mul	r3, r3, r2
   31ce0:	add	ip, ip, r3, lsl #3
   31ce4:	add	lr, lr, r3
   31ce8:	add	r0, r0, #1
   31cec:	cmp	r9, r0
   31cf0:	beq	31d78 <GetDataSlab+0x10794>
   31cf4:	ldr	r3, [r4]
   31cf8:	add	r1, r3, #1
   31cfc:	str	r1, [r4]
   31d00:	ldr	r2, [r7, #4]!
   31d04:	sdiv	r3, r1, r2
   31d08:	mls	r3, r2, r3, r1
   31d0c:	cmp	r3, #0
   31d10:	bne	31d64 <GetDataSlab+0x10780>
   31d14:	str	r8, [r4], #4
   31d18:	add	r5, r5, #4
   31d1c:	ldr	r2, [r5]
   31d20:	sdiv	r3, lr, r2
   31d24:	mls	r3, r2, r3, lr
   31d28:	cmp	r3, #0
   31d2c:	beq	31cc8 <GetDataSlab+0x106e4>
   31d30:	ldr	r1, [r5, #-4]
   31d34:	str	r1, [sp, #8]
   31d38:	ldr	r1, [sp, #196]	; 0xc4
   31d3c:	ldr	r1, [r1, r0, lsl #2]
   31d40:	str	r1, [sp, #12]
   31d44:	sub	r3, r2, r3
   31d48:	mov	r2, r1
   31d4c:	ldr	r1, [sp, #8]
   31d50:	mla	r3, r2, r1, r3
   31d54:	add	ip, ip, r3, lsl #3
   31d58:	add	lr, lr, r3
   31d5c:	b	31ce8 <GetDataSlab+0x10704>
   31d60:	mov	r0, #1
   31d64:	add	r3, sp, #152	; 0x98
   31d68:	add	r3, r3, r0, lsl #2
   31d6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   31d70:	add	lr, lr, r3
   31d74:	add	ip, ip, r3, lsl #3
   31d78:	ldr	r3, [sp, #20]
   31d7c:	add	r3, r3, r6
   31d80:	str	r3, [sp, #20]
   31d84:	ldr	r2, [sp, #16]
   31d88:	cmp	r3, r2
   31d8c:	bge	31e4c <GetDataSlab+0x10868>
   31d90:	ldr	r3, [sp, #196]	; 0xc4
   31d94:	ldr	r3, [r3]
   31d98:	cmp	r3, #0
   31d9c:	addne	ip, ip, r3, lsl #3
   31da0:	addne	lr, lr, r3
   31da4:	ldr	r6, [fp]
   31da8:	cmp	r6, #0
   31dac:	ble	31dec <GetDataSlab+0x10808>
   31db0:	ldr	r3, [sp, #4]
   31db4:	ldr	r2, [sp, #20]
   31db8:	add	r2, r3, r2, lsl #1
   31dbc:	mov	r3, #0
   31dc0:	vldr	d7, [ip]
   31dc4:	vcvt.s32.f64	s15, d7
   31dc8:	vmov	r1, s15
   31dcc:	strh	r1, [r2], #2
   31dd0:	ldr	r1, [sl]
   31dd4:	add	ip, ip, r1, lsl #3
   31dd8:	add	lr, lr, r1
   31ddc:	add	r3, r3, #1
   31de0:	ldr	r6, [fp]
   31de4:	cmp	r6, r3
   31de8:	bgt	31dc0 <GetDataSlab+0x107dc>
   31dec:	ldr	r3, [sp, #192]	; 0xc0
   31df0:	ldr	r2, [r3]
   31df4:	ldr	r3, [sp, #196]	; 0xc4
   31df8:	ldr	r3, [r3]
   31dfc:	sub	r3, r2, r3
   31e00:	ldr	r2, [sl]
   31e04:	mls	r3, r2, r6, r3
   31e08:	add	lr, lr, r3
   31e0c:	add	ip, ip, r3, lsl #3
   31e10:	cmp	r9, #1
   31e14:	ble	31d78 <GetDataSlab+0x10794>
   31e18:	ldr	r3, [sp, #76]	; 0x4c
   31e1c:	add	r3, r3, #1
   31e20:	str	r3, [sp, #76]	; 0x4c
   31e24:	ldr	r1, [fp, #4]
   31e28:	sdiv	r2, r3, r1
   31e2c:	mls	r3, r1, r2, r3
   31e30:	cmp	r3, #0
   31e34:	bne	31d60 <GetDataSlab+0x1077c>
   31e38:	add	r4, sp, #76	; 0x4c
   31e3c:	add	r7, fp, #4
   31e40:	add	r5, sp, #112	; 0x70
   31e44:	mov	r0, #1
   31e48:	b	31d14 <GetDataSlab+0x10730>
   31e4c:	mov	r3, #0
   31e50:	b	251fc <GetDataSlab+0x3c18>
   31e54:	ldr	r3, [sl]
   31e58:	str	r3, [sp, #28]
   31e5c:	sub	r3, r3, #1
   31e60:	str	r3, [sp, #32]
   31e64:	ldr	r3, [sp, #192]	; 0xc0
   31e68:	ldr	r3, [r3]
   31e6c:	str	r3, [sp, #112]	; 0x70
   31e70:	ldr	r3, [fp]
   31e74:	str	r3, [sp, #16]
   31e78:	cmp	r9, #1
   31e7c:	ble	31ea0 <GetDataSlab+0x108bc>
   31e80:	str	sl, [sp, #20]
   31e84:	add	r8, sp, #36	; 0x24
   31e88:	ldr	r5, [sp, #192]	; 0xc0
   31e8c:	add	r6, sp, #112	; 0x70
   31e90:	str	r5, [sp, #12]
   31e94:	mov	r4, #1
   31e98:	mov	lr, #0
   31e9c:	b	3d578 <GetDataSlab+0x1bf94>
   31ea0:	mov	lr, #0
   31ea4:	b	3d610 <GetDataSlab+0x1c02c>
   31ea8:	ldr	r3, [sp, #16]
   31eac:	cmp	r3, #0
   31eb0:	ble	3a474 <GetDataSlab+0x18e90>
   31eb4:	mov	r3, #0
   31eb8:	str	r3, [sp, #12]
   31ebc:	mov	r8, r3
   31ec0:	b	31f80 <GetDataSlab+0x1099c>
   31ec4:	ldr	r3, [sp, #196]	; 0xc4
   31ec8:	ldr	r3, [r3, r0, lsl #2]
   31ecc:	cmp	r3, #0
   31ed0:	beq	31ee4 <GetDataSlab+0x10900>
   31ed4:	ldr	r2, [r5, #-8]
   31ed8:	mul	r3, r2, r3
   31edc:	add	ip, ip, r3, lsl #2
   31ee0:	add	lr, lr, r3
   31ee4:	add	r0, r0, #1
   31ee8:	cmp	r9, r0
   31eec:	beq	31f64 <GetDataSlab+0x10980>
   31ef0:	ldr	r3, [r4]
   31ef4:	add	r1, r3, #1
   31ef8:	str	r1, [r4]
   31efc:	ldr	r2, [r7, #4]!
   31f00:	sdiv	r3, r1, r2
   31f04:	mls	r3, r2, r3, r1
   31f08:	cmp	r3, #0
   31f0c:	bne	31f50 <GetDataSlab+0x1096c>
   31f10:	str	r8, [r4], #4
   31f14:	ldr	r2, [r5], #4
   31f18:	sdiv	r3, lr, r2
   31f1c:	mls	r3, r2, r3, lr
   31f20:	cmp	r3, #0
   31f24:	beq	31ec4 <GetDataSlab+0x108e0>
   31f28:	ldr	r1, [r5, #-8]
   31f2c:	ldr	sl, [sp, #196]	; 0xc4
   31f30:	ldr	sl, [sl, r0, lsl #2]
   31f34:	str	sl, [sp, #8]
   31f38:	sub	r3, r2, r3
   31f3c:	mla	r3, sl, r1, r3
   31f40:	add	ip, ip, r3, lsl #2
   31f44:	add	lr, lr, r3
   31f48:	b	31ee4 <GetDataSlab+0x10900>
   31f4c:	ldr	r0, [sp, #28]
   31f50:	add	r3, sp, #152	; 0x98
   31f54:	add	r3, r3, r0, lsl #2
   31f58:	ldr	r3, [r3, #-120]	; 0xffffff88
   31f5c:	add	lr, lr, r3
   31f60:	add	ip, ip, r3, lsl #2
   31f64:	ldr	r3, [sp, #12]
   31f68:	add	r3, r3, r6
   31f6c:	str	r3, [sp, #12]
   31f70:	ldr	r3, [sp, #16]
   31f74:	ldr	r2, [sp, #12]
   31f78:	cmp	r2, r3
   31f7c:	bge	3202c <GetDataSlab+0x10a48>
   31f80:	ldr	r3, [sp, #196]	; 0xc4
   31f84:	ldr	r3, [r3]
   31f88:	cmp	r3, #0
   31f8c:	addne	ip, ip, r3, lsl #2
   31f90:	addne	lr, lr, r3
   31f94:	ldr	r6, [fp]
   31f98:	cmp	r6, #0
   31f9c:	ble	31fd4 <GetDataSlab+0x109f0>
   31fa0:	mov	r1, ip
   31fa4:	ldr	r3, [sp, #4]
   31fa8:	ldr	r2, [sp, #12]
   31fac:	add	r2, r3, r2, lsl #1
   31fb0:	mov	r3, #0
   31fb4:	vldmia	r1!, {s15}
   31fb8:	vcvt.s32.f32	s15, s15
   31fbc:	vmov	r0, s15
   31fc0:	strh	r0, [r2], #2
   31fc4:	add	r3, r3, #1
   31fc8:	ldr	r6, [fp]
   31fcc:	cmp	r6, r3
   31fd0:	bgt	31fb4 <GetDataSlab+0x109d0>
   31fd4:	ldr	r3, [sp, #192]	; 0xc0
   31fd8:	ldr	r2, [r3]
   31fdc:	ldr	r3, [sp, #196]	; 0xc4
   31fe0:	ldr	r3, [r3]
   31fe4:	sub	r3, r2, r3
   31fe8:	add	lr, lr, r3
   31fec:	add	ip, ip, r3, lsl #2
   31ff0:	cmp	r9, #1
   31ff4:	ble	31f64 <GetDataSlab+0x10980>
   31ff8:	ldr	r3, [sp, #76]	; 0x4c
   31ffc:	add	r3, r3, #1
   32000:	str	r3, [sp, #76]	; 0x4c
   32004:	ldr	r1, [fp, #4]
   32008:	sdiv	r2, r3, r1
   3200c:	mls	r3, r1, r2, r3
   32010:	cmp	r3, #0
   32014:	bne	31f4c <GetDataSlab+0x10968>
   32018:	add	r4, sp, #76	; 0x4c
   3201c:	add	r7, fp, #4
   32020:	add	r5, sp, #116	; 0x74
   32024:	ldr	r0, [sp, #28]
   32028:	b	31f10 <GetDataSlab+0x1092c>
   3202c:	mov	r3, #0
   32030:	b	251fc <GetDataSlab+0x3c18>
   32034:	ldr	r3, [sp, #196]	; 0xc4
   32038:	ldr	r2, [r3, r0, lsl #2]
   3203c:	cmp	r2, #0
   32040:	beq	32054 <GetDataSlab+0x10a70>
   32044:	ldr	r3, [r5, #-4]
   32048:	mul	r3, r3, r2
   3204c:	add	ip, ip, r3, lsl #2
   32050:	add	lr, lr, r3
   32054:	add	r0, r0, #1
   32058:	cmp	r9, r0
   3205c:	beq	320e4 <GetDataSlab+0x10b00>
   32060:	ldr	r3, [r4]
   32064:	add	r1, r3, #1
   32068:	str	r1, [r4]
   3206c:	ldr	r2, [r7, #4]!
   32070:	sdiv	r3, r1, r2
   32074:	mls	r3, r2, r3, r1
   32078:	cmp	r3, #0
   3207c:	bne	320d0 <GetDataSlab+0x10aec>
   32080:	str	r8, [r4], #4
   32084:	add	r5, r5, #4
   32088:	ldr	r2, [r5]
   3208c:	sdiv	r3, lr, r2
   32090:	mls	r3, r2, r3, lr
   32094:	cmp	r3, #0
   32098:	beq	32034 <GetDataSlab+0x10a50>
   3209c:	ldr	r1, [r5, #-4]
   320a0:	str	r1, [sp, #8]
   320a4:	ldr	r1, [sp, #196]	; 0xc4
   320a8:	ldr	r1, [r1, r0, lsl #2]
   320ac:	str	r1, [sp, #12]
   320b0:	sub	r3, r2, r3
   320b4:	mov	r2, r1
   320b8:	ldr	r1, [sp, #8]
   320bc:	mla	r3, r2, r1, r3
   320c0:	add	ip, ip, r3, lsl #2
   320c4:	add	lr, lr, r3
   320c8:	b	32054 <GetDataSlab+0x10a70>
   320cc:	mov	r0, #1
   320d0:	add	r3, sp, #152	; 0x98
   320d4:	add	r3, r3, r0, lsl #2
   320d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   320dc:	add	lr, lr, r3
   320e0:	add	ip, ip, r3, lsl #2
   320e4:	ldr	r3, [sp, #20]
   320e8:	add	r3, r3, r6
   320ec:	str	r3, [sp, #20]
   320f0:	ldr	r2, [sp, #16]
   320f4:	cmp	r3, r2
   320f8:	bge	321b8 <GetDataSlab+0x10bd4>
   320fc:	ldr	r3, [sp, #196]	; 0xc4
   32100:	ldr	r3, [r3]
   32104:	cmp	r3, #0
   32108:	addne	ip, ip, r3, lsl #2
   3210c:	addne	lr, lr, r3
   32110:	ldr	r6, [fp]
   32114:	cmp	r6, #0
   32118:	ble	32158 <GetDataSlab+0x10b74>
   3211c:	ldr	r3, [sp, #4]
   32120:	ldr	r2, [sp, #20]
   32124:	add	r2, r3, r2, lsl #1
   32128:	mov	r3, #0
   3212c:	vldr	s15, [ip]
   32130:	vcvt.s32.f32	s15, s15
   32134:	vmov	r1, s15
   32138:	strh	r1, [r2], #2
   3213c:	ldr	r1, [sl]
   32140:	add	ip, ip, r1, lsl #2
   32144:	add	lr, lr, r1
   32148:	add	r3, r3, #1
   3214c:	ldr	r6, [fp]
   32150:	cmp	r6, r3
   32154:	bgt	3212c <GetDataSlab+0x10b48>
   32158:	ldr	r3, [sp, #192]	; 0xc0
   3215c:	ldr	r2, [r3]
   32160:	ldr	r3, [sp, #196]	; 0xc4
   32164:	ldr	r3, [r3]
   32168:	sub	r3, r2, r3
   3216c:	ldr	r2, [sl]
   32170:	mls	r3, r2, r6, r3
   32174:	add	lr, lr, r3
   32178:	add	ip, ip, r3, lsl #2
   3217c:	cmp	r9, #1
   32180:	ble	320e4 <GetDataSlab+0x10b00>
   32184:	ldr	r3, [sp, #76]	; 0x4c
   32188:	add	r3, r3, #1
   3218c:	str	r3, [sp, #76]	; 0x4c
   32190:	ldr	r1, [fp, #4]
   32194:	sdiv	r2, r3, r1
   32198:	mls	r3, r1, r2, r3
   3219c:	cmp	r3, #0
   321a0:	bne	320cc <GetDataSlab+0x10ae8>
   321a4:	add	r4, sp, #76	; 0x4c
   321a8:	add	r7, fp, #4
   321ac:	add	r5, sp, #112	; 0x70
   321b0:	mov	r0, #1
   321b4:	b	32080 <GetDataSlab+0x10a9c>
   321b8:	mov	r3, #0
   321bc:	b	251fc <GetDataSlab+0x3c18>
   321c0:	ldr	r3, [sl]
   321c4:	str	r3, [sp, #28]
   321c8:	sub	r3, r3, #1
   321cc:	str	r3, [sp, #32]
   321d0:	ldr	r3, [sp, #192]	; 0xc0
   321d4:	ldr	r3, [r3]
   321d8:	str	r3, [sp, #112]	; 0x70
   321dc:	ldr	r3, [fp]
   321e0:	str	r3, [sp, #16]
   321e4:	cmp	r9, #1
   321e8:	ble	3220c <GetDataSlab+0x10c28>
   321ec:	str	sl, [sp, #20]
   321f0:	add	r8, sp, #36	; 0x24
   321f4:	ldr	r5, [sp, #192]	; 0xc0
   321f8:	add	r6, sp, #112	; 0x70
   321fc:	str	r5, [sp, #12]
   32200:	mov	r4, #1
   32204:	mov	lr, #0
   32208:	b	3d398 <GetDataSlab+0x1bdb4>
   3220c:	mov	lr, #0
   32210:	b	3d430 <GetDataSlab+0x1be4c>
   32214:	ldr	r3, [sp, #16]
   32218:	cmp	r3, #0
   3221c:	ble	3a47c <GetDataSlab+0x18e98>
   32220:	mov	r3, #0
   32224:	str	r3, [sp, #12]
   32228:	mov	r8, r3
   3222c:	b	322ec <GetDataSlab+0x10d08>
   32230:	ldr	r3, [sp, #196]	; 0xc4
   32234:	ldr	r3, [r3, r0, lsl #2]
   32238:	cmp	r3, #0
   3223c:	beq	32250 <GetDataSlab+0x10c6c>
   32240:	ldr	r2, [r5, #-8]
   32244:	mul	r3, r2, r3
   32248:	add	ip, ip, r3, lsl #2
   3224c:	add	lr, lr, r3
   32250:	add	r0, r0, #1
   32254:	cmp	r9, r0
   32258:	beq	322d0 <GetDataSlab+0x10cec>
   3225c:	ldr	r3, [r4]
   32260:	add	r1, r3, #1
   32264:	str	r1, [r4]
   32268:	ldr	r2, [r7, #4]!
   3226c:	sdiv	r3, r1, r2
   32270:	mls	r3, r2, r3, r1
   32274:	cmp	r3, #0
   32278:	bne	322bc <GetDataSlab+0x10cd8>
   3227c:	str	r8, [r4], #4
   32280:	ldr	r2, [r5], #4
   32284:	sdiv	r3, lr, r2
   32288:	mls	r3, r2, r3, lr
   3228c:	cmp	r3, #0
   32290:	beq	32230 <GetDataSlab+0x10c4c>
   32294:	ldr	r1, [r5, #-8]
   32298:	ldr	sl, [sp, #196]	; 0xc4
   3229c:	ldr	sl, [sl, r0, lsl #2]
   322a0:	str	sl, [sp, #8]
   322a4:	sub	r3, r2, r3
   322a8:	mla	r3, sl, r1, r3
   322ac:	add	ip, ip, r3, lsl #2
   322b0:	add	lr, lr, r3
   322b4:	b	32250 <GetDataSlab+0x10c6c>
   322b8:	ldr	r0, [sp, #28]
   322bc:	add	r3, sp, #152	; 0x98
   322c0:	add	r3, r3, r0, lsl #2
   322c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   322c8:	add	lr, lr, r3
   322cc:	add	ip, ip, r3, lsl #2
   322d0:	ldr	r3, [sp, #12]
   322d4:	add	r3, r3, r6
   322d8:	str	r3, [sp, #12]
   322dc:	ldr	r3, [sp, #16]
   322e0:	ldr	r2, [sp, #12]
   322e4:	cmp	r2, r3
   322e8:	bge	32390 <GetDataSlab+0x10dac>
   322ec:	ldr	r3, [sp, #196]	; 0xc4
   322f0:	ldr	r3, [r3]
   322f4:	cmp	r3, #0
   322f8:	addne	ip, ip, r3, lsl #2
   322fc:	addne	lr, lr, r3
   32300:	ldr	r6, [fp]
   32304:	cmp	r6, #0
   32308:	ble	32338 <GetDataSlab+0x10d54>
   3230c:	sub	r0, ip, #4
   32310:	ldr	r3, [sp, #4]
   32314:	ldr	r2, [sp, #12]
   32318:	add	r1, r3, r2, lsl #1
   3231c:	mov	r2, #0
   32320:	ldr	r3, [r0, #4]!
   32324:	strh	r3, [r1], #2
   32328:	add	r2, r2, #1
   3232c:	ldr	r6, [fp]
   32330:	cmp	r6, r2
   32334:	bgt	32320 <GetDataSlab+0x10d3c>
   32338:	ldr	r3, [sp, #192]	; 0xc0
   3233c:	ldr	r2, [r3]
   32340:	ldr	r3, [sp, #196]	; 0xc4
   32344:	ldr	r3, [r3]
   32348:	sub	r3, r2, r3
   3234c:	add	lr, lr, r3
   32350:	add	ip, ip, r3, lsl #2
   32354:	cmp	r9, #1
   32358:	ble	322d0 <GetDataSlab+0x10cec>
   3235c:	ldr	r3, [sp, #76]	; 0x4c
   32360:	add	r3, r3, #1
   32364:	str	r3, [sp, #76]	; 0x4c
   32368:	ldr	r1, [fp, #4]
   3236c:	sdiv	r2, r3, r1
   32370:	mls	r3, r1, r2, r3
   32374:	cmp	r3, #0
   32378:	bne	322b8 <GetDataSlab+0x10cd4>
   3237c:	add	r4, sp, #76	; 0x4c
   32380:	add	r7, fp, #4
   32384:	add	r5, sp, #116	; 0x74
   32388:	ldr	r0, [sp, #28]
   3238c:	b	3227c <GetDataSlab+0x10c98>
   32390:	mov	r3, #0
   32394:	b	251fc <GetDataSlab+0x3c18>
   32398:	ldr	r3, [sp, #196]	; 0xc4
   3239c:	ldr	r2, [r3, r0, lsl #2]
   323a0:	cmp	r2, #0
   323a4:	beq	323b8 <GetDataSlab+0x10dd4>
   323a8:	ldr	r3, [r5, #-4]
   323ac:	mul	r3, r3, r2
   323b0:	add	ip, ip, r3, lsl #2
   323b4:	add	lr, lr, r3
   323b8:	add	r0, r0, #1
   323bc:	cmp	r9, r0
   323c0:	beq	32448 <GetDataSlab+0x10e64>
   323c4:	ldr	r3, [r4]
   323c8:	add	r1, r3, #1
   323cc:	str	r1, [r4]
   323d0:	ldr	r2, [r7, #4]!
   323d4:	sdiv	r3, r1, r2
   323d8:	mls	r3, r2, r3, r1
   323dc:	cmp	r3, #0
   323e0:	bne	32434 <GetDataSlab+0x10e50>
   323e4:	str	r8, [r4], #4
   323e8:	add	r5, r5, #4
   323ec:	ldr	r2, [r5]
   323f0:	sdiv	r3, lr, r2
   323f4:	mls	r3, r2, r3, lr
   323f8:	cmp	r3, #0
   323fc:	beq	32398 <GetDataSlab+0x10db4>
   32400:	ldr	r1, [r5, #-4]
   32404:	str	r1, [sp, #8]
   32408:	ldr	r1, [sp, #196]	; 0xc4
   3240c:	ldr	r1, [r1, r0, lsl #2]
   32410:	str	r1, [sp, #12]
   32414:	sub	r3, r2, r3
   32418:	mov	r2, r1
   3241c:	ldr	r1, [sp, #8]
   32420:	mla	r3, r2, r1, r3
   32424:	add	ip, ip, r3, lsl #2
   32428:	add	lr, lr, r3
   3242c:	b	323b8 <GetDataSlab+0x10dd4>
   32430:	mov	r0, #1
   32434:	add	r3, sp, #152	; 0x98
   32438:	add	r3, r3, r0, lsl #2
   3243c:	ldr	r3, [r3, #-120]	; 0xffffff88
   32440:	add	lr, lr, r3
   32444:	add	ip, ip, r3, lsl #2
   32448:	ldr	r3, [sp, #20]
   3244c:	add	r3, r3, r6
   32450:	str	r3, [sp, #20]
   32454:	ldr	r2, [sp, #16]
   32458:	cmp	r3, r2
   3245c:	bge	32514 <GetDataSlab+0x10f30>
   32460:	ldr	r3, [sp, #196]	; 0xc4
   32464:	ldr	r3, [r3]
   32468:	cmp	r3, #0
   3246c:	addne	ip, ip, r3, lsl #2
   32470:	addne	lr, lr, r3
   32474:	ldr	r6, [fp]
   32478:	cmp	r6, #0
   3247c:	ble	324b4 <GetDataSlab+0x10ed0>
   32480:	ldr	r3, [sp, #4]
   32484:	ldr	r2, [sp, #20]
   32488:	add	r2, r3, r2, lsl #1
   3248c:	mov	r3, #0
   32490:	ldr	r1, [ip]
   32494:	strh	r1, [r2], #2
   32498:	ldr	r1, [sl]
   3249c:	add	ip, ip, r1, lsl #2
   324a0:	add	lr, lr, r1
   324a4:	add	r3, r3, #1
   324a8:	ldr	r6, [fp]
   324ac:	cmp	r6, r3
   324b0:	bgt	32490 <GetDataSlab+0x10eac>
   324b4:	ldr	r3, [sp, #192]	; 0xc0
   324b8:	ldr	r2, [r3]
   324bc:	ldr	r3, [sp, #196]	; 0xc4
   324c0:	ldr	r3, [r3]
   324c4:	sub	r3, r2, r3
   324c8:	ldr	r2, [sl]
   324cc:	mls	r3, r2, r6, r3
   324d0:	add	lr, lr, r3
   324d4:	add	ip, ip, r3, lsl #2
   324d8:	cmp	r9, #1
   324dc:	ble	32448 <GetDataSlab+0x10e64>
   324e0:	ldr	r3, [sp, #76]	; 0x4c
   324e4:	add	r3, r3, #1
   324e8:	str	r3, [sp, #76]	; 0x4c
   324ec:	ldr	r1, [fp, #4]
   324f0:	sdiv	r2, r3, r1
   324f4:	mls	r3, r1, r2, r3
   324f8:	cmp	r3, #0
   324fc:	bne	32430 <GetDataSlab+0x10e4c>
   32500:	add	r4, sp, #76	; 0x4c
   32504:	add	r7, fp, #4
   32508:	add	r5, sp, #112	; 0x70
   3250c:	mov	r0, #1
   32510:	b	323e4 <GetDataSlab+0x10e00>
   32514:	mov	r3, #0
   32518:	b	251fc <GetDataSlab+0x3c18>
   3251c:	ldr	r3, [sl]
   32520:	str	r3, [sp, #28]
   32524:	sub	r3, r3, #1
   32528:	str	r3, [sp, #32]
   3252c:	ldr	r3, [sp, #192]	; 0xc0
   32530:	ldr	r3, [r3]
   32534:	str	r3, [sp, #112]	; 0x70
   32538:	ldr	r3, [fp]
   3253c:	str	r3, [sp, #16]
   32540:	cmp	r9, #1
   32544:	ble	32568 <GetDataSlab+0x10f84>
   32548:	str	sl, [sp, #20]
   3254c:	add	r8, sp, #36	; 0x24
   32550:	ldr	r5, [sp, #192]	; 0xc0
   32554:	add	r6, sp, #112	; 0x70
   32558:	str	r5, [sp, #12]
   3255c:	mov	r4, #1
   32560:	mov	lr, #0
   32564:	b	3d488 <GetDataSlab+0x1bea4>
   32568:	mov	lr, #0
   3256c:	b	3d520 <GetDataSlab+0x1bf3c>
   32570:	ldr	r3, [sp, #16]
   32574:	cmp	r3, #0
   32578:	ble	3a484 <GetDataSlab+0x18ea0>
   3257c:	mov	r3, #0
   32580:	str	r3, [sp, #12]
   32584:	mov	r8, r3
   32588:	b	32648 <GetDataSlab+0x11064>
   3258c:	ldr	r3, [sp, #196]	; 0xc4
   32590:	ldr	r3, [r3, r0, lsl #2]
   32594:	cmp	r3, #0
   32598:	beq	325ac <GetDataSlab+0x10fc8>
   3259c:	ldr	r2, [r5, #-8]
   325a0:	mul	r3, r2, r3
   325a4:	add	ip, ip, r3, lsl #2
   325a8:	add	lr, lr, r3
   325ac:	add	r0, r0, #1
   325b0:	cmp	r9, r0
   325b4:	beq	3262c <GetDataSlab+0x11048>
   325b8:	ldr	r3, [r4]
   325bc:	add	r1, r3, #1
   325c0:	str	r1, [r4]
   325c4:	ldr	r2, [r7, #4]!
   325c8:	sdiv	r3, r1, r2
   325cc:	mls	r3, r2, r3, r1
   325d0:	cmp	r3, #0
   325d4:	bne	32618 <GetDataSlab+0x11034>
   325d8:	str	r8, [r4], #4
   325dc:	ldr	r2, [r5], #4
   325e0:	sdiv	r3, lr, r2
   325e4:	mls	r3, r2, r3, lr
   325e8:	cmp	r3, #0
   325ec:	beq	3258c <GetDataSlab+0x10fa8>
   325f0:	ldr	r1, [r5, #-8]
   325f4:	ldr	sl, [sp, #196]	; 0xc4
   325f8:	ldr	sl, [sl, r0, lsl #2]
   325fc:	str	sl, [sp, #8]
   32600:	sub	r3, r2, r3
   32604:	mla	r3, sl, r1, r3
   32608:	add	ip, ip, r3, lsl #2
   3260c:	add	lr, lr, r3
   32610:	b	325ac <GetDataSlab+0x10fc8>
   32614:	ldr	r0, [sp, #28]
   32618:	add	r3, sp, #152	; 0x98
   3261c:	add	r3, r3, r0, lsl #2
   32620:	ldr	r3, [r3, #-120]	; 0xffffff88
   32624:	add	lr, lr, r3
   32628:	add	ip, ip, r3, lsl #2
   3262c:	ldr	r3, [sp, #12]
   32630:	add	r3, r3, r6
   32634:	str	r3, [sp, #12]
   32638:	ldr	r3, [sp, #16]
   3263c:	ldr	r2, [sp, #12]
   32640:	cmp	r2, r3
   32644:	bge	326ec <GetDataSlab+0x11108>
   32648:	ldr	r3, [sp, #196]	; 0xc4
   3264c:	ldr	r3, [r3]
   32650:	cmp	r3, #0
   32654:	addne	ip, ip, r3, lsl #2
   32658:	addne	lr, lr, r3
   3265c:	ldr	r6, [fp]
   32660:	cmp	r6, #0
   32664:	ble	32694 <GetDataSlab+0x110b0>
   32668:	sub	r0, ip, #4
   3266c:	ldr	r3, [sp, #4]
   32670:	ldr	r2, [sp, #12]
   32674:	add	r1, r3, r2, lsl #1
   32678:	mov	r2, #0
   3267c:	ldr	r3, [r0, #4]!
   32680:	strh	r3, [r1], #2
   32684:	add	r2, r2, #1
   32688:	ldr	r6, [fp]
   3268c:	cmp	r6, r2
   32690:	bgt	3267c <GetDataSlab+0x11098>
   32694:	ldr	r3, [sp, #192]	; 0xc0
   32698:	ldr	r2, [r3]
   3269c:	ldr	r3, [sp, #196]	; 0xc4
   326a0:	ldr	r3, [r3]
   326a4:	sub	r3, r2, r3
   326a8:	add	lr, lr, r3
   326ac:	add	ip, ip, r3, lsl #2
   326b0:	cmp	r9, #1
   326b4:	ble	3262c <GetDataSlab+0x11048>
   326b8:	ldr	r3, [sp, #76]	; 0x4c
   326bc:	add	r3, r3, #1
   326c0:	str	r3, [sp, #76]	; 0x4c
   326c4:	ldr	r1, [fp, #4]
   326c8:	sdiv	r2, r3, r1
   326cc:	mls	r3, r1, r2, r3
   326d0:	cmp	r3, #0
   326d4:	bne	32614 <GetDataSlab+0x11030>
   326d8:	add	r4, sp, #76	; 0x4c
   326dc:	add	r7, fp, #4
   326e0:	add	r5, sp, #116	; 0x74
   326e4:	ldr	r0, [sp, #28]
   326e8:	b	325d8 <GetDataSlab+0x10ff4>
   326ec:	mov	r3, #0
   326f0:	b	251fc <GetDataSlab+0x3c18>
   326f4:	ldr	r3, [sp, #196]	; 0xc4
   326f8:	ldr	r2, [r3, r0, lsl #2]
   326fc:	cmp	r2, #0
   32700:	beq	32714 <GetDataSlab+0x11130>
   32704:	ldr	r3, [r5, #-4]
   32708:	mul	r3, r3, r2
   3270c:	add	ip, ip, r3, lsl #2
   32710:	add	lr, lr, r3
   32714:	add	r0, r0, #1
   32718:	cmp	r9, r0
   3271c:	beq	327a4 <GetDataSlab+0x111c0>
   32720:	ldr	r3, [r4]
   32724:	add	r1, r3, #1
   32728:	str	r1, [r4]
   3272c:	ldr	r2, [r7, #4]!
   32730:	sdiv	r3, r1, r2
   32734:	mls	r3, r2, r3, r1
   32738:	cmp	r3, #0
   3273c:	bne	32790 <GetDataSlab+0x111ac>
   32740:	str	r8, [r4], #4
   32744:	add	r5, r5, #4
   32748:	ldr	r2, [r5]
   3274c:	sdiv	r3, lr, r2
   32750:	mls	r3, r2, r3, lr
   32754:	cmp	r3, #0
   32758:	beq	326f4 <GetDataSlab+0x11110>
   3275c:	ldr	r1, [r5, #-4]
   32760:	str	r1, [sp, #8]
   32764:	ldr	r1, [sp, #196]	; 0xc4
   32768:	ldr	r1, [r1, r0, lsl #2]
   3276c:	str	r1, [sp, #12]
   32770:	sub	r3, r2, r3
   32774:	mov	r2, r1
   32778:	ldr	r1, [sp, #8]
   3277c:	mla	r3, r2, r1, r3
   32780:	add	ip, ip, r3, lsl #2
   32784:	add	lr, lr, r3
   32788:	b	32714 <GetDataSlab+0x11130>
   3278c:	mov	r0, #1
   32790:	add	r3, sp, #152	; 0x98
   32794:	add	r3, r3, r0, lsl #2
   32798:	ldr	r3, [r3, #-120]	; 0xffffff88
   3279c:	add	lr, lr, r3
   327a0:	add	ip, ip, r3, lsl #2
   327a4:	ldr	r3, [sp, #20]
   327a8:	add	r3, r3, r6
   327ac:	str	r3, [sp, #20]
   327b0:	ldr	r2, [sp, #16]
   327b4:	cmp	r3, r2
   327b8:	bge	32870 <GetDataSlab+0x1128c>
   327bc:	ldr	r3, [sp, #196]	; 0xc4
   327c0:	ldr	r3, [r3]
   327c4:	cmp	r3, #0
   327c8:	addne	ip, ip, r3, lsl #2
   327cc:	addne	lr, lr, r3
   327d0:	ldr	r6, [fp]
   327d4:	cmp	r6, #0
   327d8:	ble	32810 <GetDataSlab+0x1122c>
   327dc:	ldr	r3, [sp, #4]
   327e0:	ldr	r2, [sp, #20]
   327e4:	add	r2, r3, r2, lsl #1
   327e8:	mov	r3, #0
   327ec:	ldr	r1, [ip]
   327f0:	strh	r1, [r2], #2
   327f4:	ldr	r1, [sl]
   327f8:	add	ip, ip, r1, lsl #2
   327fc:	add	lr, lr, r1
   32800:	add	r3, r3, #1
   32804:	ldr	r6, [fp]
   32808:	cmp	r6, r3
   3280c:	bgt	327ec <GetDataSlab+0x11208>
   32810:	ldr	r3, [sp, #192]	; 0xc0
   32814:	ldr	r2, [r3]
   32818:	ldr	r3, [sp, #196]	; 0xc4
   3281c:	ldr	r3, [r3]
   32820:	sub	r3, r2, r3
   32824:	ldr	r2, [sl]
   32828:	mls	r3, r2, r6, r3
   3282c:	add	lr, lr, r3
   32830:	add	ip, ip, r3, lsl #2
   32834:	cmp	r9, #1
   32838:	ble	327a4 <GetDataSlab+0x111c0>
   3283c:	ldr	r3, [sp, #76]	; 0x4c
   32840:	add	r3, r3, #1
   32844:	str	r3, [sp, #76]	; 0x4c
   32848:	ldr	r1, [fp, #4]
   3284c:	sdiv	r2, r3, r1
   32850:	mls	r3, r1, r2, r3
   32854:	cmp	r3, #0
   32858:	bne	3278c <GetDataSlab+0x111a8>
   3285c:	add	r4, sp, #76	; 0x4c
   32860:	add	r7, fp, #4
   32864:	add	r5, sp, #112	; 0x70
   32868:	mov	r0, #1
   3286c:	b	32740 <GetDataSlab+0x1115c>
   32870:	mov	r3, #0
   32874:	b	251fc <GetDataSlab+0x3c18>
   32878:	ldr	r3, [sl]
   3287c:	str	r3, [sp, #28]
   32880:	sub	r3, r3, #1
   32884:	str	r3, [sp, #32]
   32888:	ldr	r3, [sp, #192]	; 0xc0
   3288c:	ldr	r3, [r3]
   32890:	str	r3, [sp, #112]	; 0x70
   32894:	ldr	r3, [fp]
   32898:	str	r3, [sp, #16]
   3289c:	cmp	r9, #1
   328a0:	ble	328c4 <GetDataSlab+0x112e0>
   328a4:	str	sl, [sp, #20]
   328a8:	add	r8, sp, #36	; 0x24
   328ac:	ldr	r5, [sp, #192]	; 0xc0
   328b0:	add	r6, sp, #112	; 0x70
   328b4:	str	r5, [sp, #12]
   328b8:	mov	r4, #1
   328bc:	mov	lr, #0
   328c0:	b	3d1b8 <GetDataSlab+0x1bbd4>
   328c4:	mov	lr, #0
   328c8:	b	3d250 <GetDataSlab+0x1bc6c>
   328cc:	ldr	r3, [sp, #16]
   328d0:	cmp	r3, #0
   328d4:	ble	3a48c <GetDataSlab+0x18ea8>
   328d8:	mov	r3, #0
   328dc:	str	r3, [sp, #12]
   328e0:	mov	r8, r3
   328e4:	b	329a4 <GetDataSlab+0x113c0>
   328e8:	ldr	r3, [sp, #196]	; 0xc4
   328ec:	ldr	r3, [r3, r0, lsl #2]
   328f0:	cmp	r3, #0
   328f4:	beq	32908 <GetDataSlab+0x11324>
   328f8:	ldr	r2, [r5, #-8]
   328fc:	mul	r3, r2, r3
   32900:	add	ip, ip, r3, lsl #1
   32904:	add	lr, lr, r3
   32908:	add	r0, r0, #1
   3290c:	cmp	r9, r0
   32910:	beq	32988 <GetDataSlab+0x113a4>
   32914:	ldr	r3, [r4]
   32918:	add	r1, r3, #1
   3291c:	str	r1, [r4]
   32920:	ldr	r2, [r7, #4]!
   32924:	sdiv	r3, r1, r2
   32928:	mls	r3, r2, r3, r1
   3292c:	cmp	r3, #0
   32930:	bne	32974 <GetDataSlab+0x11390>
   32934:	str	r8, [r4], #4
   32938:	ldr	r2, [r5], #4
   3293c:	sdiv	r3, lr, r2
   32940:	mls	r3, r2, r3, lr
   32944:	cmp	r3, #0
   32948:	beq	328e8 <GetDataSlab+0x11304>
   3294c:	ldr	r1, [r5, #-8]
   32950:	ldr	sl, [sp, #196]	; 0xc4
   32954:	ldr	sl, [sl, r0, lsl #2]
   32958:	str	sl, [sp, #8]
   3295c:	sub	r3, r2, r3
   32960:	mla	r3, sl, r1, r3
   32964:	add	ip, ip, r3, lsl #1
   32968:	add	lr, lr, r3
   3296c:	b	32908 <GetDataSlab+0x11324>
   32970:	ldr	r0, [sp, #28]
   32974:	add	r3, sp, #152	; 0x98
   32978:	add	r3, r3, r0, lsl #2
   3297c:	ldr	r3, [r3, #-120]	; 0xffffff88
   32980:	add	lr, lr, r3
   32984:	add	ip, ip, r3, lsl #1
   32988:	ldr	r3, [sp, #12]
   3298c:	add	r3, r3, r6
   32990:	str	r3, [sp, #12]
   32994:	ldr	r3, [sp, #16]
   32998:	ldr	r2, [sp, #12]
   3299c:	cmp	r2, r3
   329a0:	bge	32a48 <GetDataSlab+0x11464>
   329a4:	ldr	r3, [sp, #196]	; 0xc4
   329a8:	ldr	r3, [r3]
   329ac:	cmp	r3, #0
   329b0:	addne	ip, ip, r3, lsl #1
   329b4:	addne	lr, lr, r3
   329b8:	ldr	r6, [fp]
   329bc:	cmp	r6, #0
   329c0:	ble	329f0 <GetDataSlab+0x1140c>
   329c4:	sub	r0, ip, #2
   329c8:	ldr	r3, [sp, #4]
   329cc:	ldr	r2, [sp, #12]
   329d0:	add	r1, r3, r2, lsl #1
   329d4:	mov	r2, #0
   329d8:	ldrsh	r3, [r0, #2]!
   329dc:	strh	r3, [r1], #2
   329e0:	add	r2, r2, #1
   329e4:	ldr	r6, [fp]
   329e8:	cmp	r6, r2
   329ec:	bgt	329d8 <GetDataSlab+0x113f4>
   329f0:	ldr	r3, [sp, #192]	; 0xc0
   329f4:	ldr	r2, [r3]
   329f8:	ldr	r3, [sp, #196]	; 0xc4
   329fc:	ldr	r3, [r3]
   32a00:	sub	r3, r2, r3
   32a04:	add	lr, lr, r3
   32a08:	add	ip, ip, r3, lsl #1
   32a0c:	cmp	r9, #1
   32a10:	ble	32988 <GetDataSlab+0x113a4>
   32a14:	ldr	r3, [sp, #76]	; 0x4c
   32a18:	add	r3, r3, #1
   32a1c:	str	r3, [sp, #76]	; 0x4c
   32a20:	ldr	r1, [fp, #4]
   32a24:	sdiv	r2, r3, r1
   32a28:	mls	r3, r1, r2, r3
   32a2c:	cmp	r3, #0
   32a30:	bne	32970 <GetDataSlab+0x1138c>
   32a34:	add	r4, sp, #76	; 0x4c
   32a38:	add	r7, fp, #4
   32a3c:	add	r5, sp, #116	; 0x74
   32a40:	ldr	r0, [sp, #28]
   32a44:	b	32934 <GetDataSlab+0x11350>
   32a48:	mov	r3, #0
   32a4c:	b	251fc <GetDataSlab+0x3c18>
   32a50:	ldr	r3, [sp, #196]	; 0xc4
   32a54:	ldr	r2, [r3, r0, lsl #2]
   32a58:	cmp	r2, #0
   32a5c:	beq	32a70 <GetDataSlab+0x1148c>
   32a60:	ldr	r3, [r5, #-4]
   32a64:	mul	r3, r3, r2
   32a68:	add	ip, ip, r3, lsl #1
   32a6c:	add	lr, lr, r3
   32a70:	add	r0, r0, #1
   32a74:	cmp	r9, r0
   32a78:	beq	32b00 <GetDataSlab+0x1151c>
   32a7c:	ldr	r3, [r4]
   32a80:	add	r1, r3, #1
   32a84:	str	r1, [r4]
   32a88:	ldr	r2, [r7, #4]!
   32a8c:	sdiv	r3, r1, r2
   32a90:	mls	r3, r2, r3, r1
   32a94:	cmp	r3, #0
   32a98:	bne	32aec <GetDataSlab+0x11508>
   32a9c:	str	r8, [r4], #4
   32aa0:	add	r5, r5, #4
   32aa4:	ldr	r2, [r5]
   32aa8:	sdiv	r3, lr, r2
   32aac:	mls	r3, r2, r3, lr
   32ab0:	cmp	r3, #0
   32ab4:	beq	32a50 <GetDataSlab+0x1146c>
   32ab8:	ldr	r1, [r5, #-4]
   32abc:	str	r1, [sp, #8]
   32ac0:	ldr	r1, [sp, #196]	; 0xc4
   32ac4:	ldr	r1, [r1, r0, lsl #2]
   32ac8:	str	r1, [sp, #12]
   32acc:	sub	r3, r2, r3
   32ad0:	mov	r2, r1
   32ad4:	ldr	r1, [sp, #8]
   32ad8:	mla	r3, r2, r1, r3
   32adc:	add	ip, ip, r3, lsl #1
   32ae0:	add	lr, lr, r3
   32ae4:	b	32a70 <GetDataSlab+0x1148c>
   32ae8:	mov	r0, #1
   32aec:	add	r3, sp, #152	; 0x98
   32af0:	add	r3, r3, r0, lsl #2
   32af4:	ldr	r3, [r3, #-120]	; 0xffffff88
   32af8:	add	lr, lr, r3
   32afc:	add	ip, ip, r3, lsl #1
   32b00:	ldr	r3, [sp, #20]
   32b04:	add	r3, r3, r6
   32b08:	str	r3, [sp, #20]
   32b0c:	ldr	r2, [sp, #16]
   32b10:	cmp	r3, r2
   32b14:	bge	32bcc <GetDataSlab+0x115e8>
   32b18:	ldr	r3, [sp, #196]	; 0xc4
   32b1c:	ldr	r3, [r3]
   32b20:	cmp	r3, #0
   32b24:	addne	ip, ip, r3, lsl #1
   32b28:	addne	lr, lr, r3
   32b2c:	ldr	r6, [fp]
   32b30:	cmp	r6, #0
   32b34:	ble	32b6c <GetDataSlab+0x11588>
   32b38:	ldr	r3, [sp, #4]
   32b3c:	ldr	r2, [sp, #20]
   32b40:	add	r2, r3, r2, lsl #1
   32b44:	mov	r3, #0
   32b48:	ldrsh	r1, [ip]
   32b4c:	strh	r1, [r2], #2
   32b50:	ldr	r1, [sl]
   32b54:	add	ip, ip, r1, lsl #1
   32b58:	add	lr, lr, r1
   32b5c:	add	r3, r3, #1
   32b60:	ldr	r6, [fp]
   32b64:	cmp	r6, r3
   32b68:	bgt	32b48 <GetDataSlab+0x11564>
   32b6c:	ldr	r3, [sp, #192]	; 0xc0
   32b70:	ldr	r2, [r3]
   32b74:	ldr	r3, [sp, #196]	; 0xc4
   32b78:	ldr	r3, [r3]
   32b7c:	sub	r3, r2, r3
   32b80:	ldr	r2, [sl]
   32b84:	mls	r3, r2, r6, r3
   32b88:	add	lr, lr, r3
   32b8c:	add	ip, ip, r3, lsl #1
   32b90:	cmp	r9, #1
   32b94:	ble	32b00 <GetDataSlab+0x1151c>
   32b98:	ldr	r3, [sp, #76]	; 0x4c
   32b9c:	add	r3, r3, #1
   32ba0:	str	r3, [sp, #76]	; 0x4c
   32ba4:	ldr	r1, [fp, #4]
   32ba8:	sdiv	r2, r3, r1
   32bac:	mls	r3, r1, r2, r3
   32bb0:	cmp	r3, #0
   32bb4:	bne	32ae8 <GetDataSlab+0x11504>
   32bb8:	add	r4, sp, #76	; 0x4c
   32bbc:	add	r7, fp, #4
   32bc0:	add	r5, sp, #112	; 0x70
   32bc4:	mov	r0, #1
   32bc8:	b	32a9c <GetDataSlab+0x114b8>
   32bcc:	mov	r3, #0
   32bd0:	b	251fc <GetDataSlab+0x3c18>
   32bd4:	ldr	r3, [sl]
   32bd8:	str	r3, [sp, #28]
   32bdc:	sub	r3, r3, #1
   32be0:	str	r3, [sp, #32]
   32be4:	ldr	r3, [sp, #192]	; 0xc0
   32be8:	ldr	r3, [r3]
   32bec:	str	r3, [sp, #112]	; 0x70
   32bf0:	ldr	r3, [fp]
   32bf4:	str	r3, [sp, #16]
   32bf8:	cmp	r9, #1
   32bfc:	ble	32c20 <GetDataSlab+0x1163c>
   32c00:	str	sl, [sp, #20]
   32c04:	add	r8, sp, #36	; 0x24
   32c08:	ldr	r5, [sp, #192]	; 0xc0
   32c0c:	add	r6, sp, #112	; 0x70
   32c10:	str	r5, [sp, #12]
   32c14:	mov	r4, #1
   32c18:	mov	lr, #0
   32c1c:	b	3d2a8 <GetDataSlab+0x1bcc4>
   32c20:	mov	lr, #0
   32c24:	b	3d340 <GetDataSlab+0x1bd5c>
   32c28:	ldr	r3, [sp, #16]
   32c2c:	cmp	r3, #0
   32c30:	ble	3a494 <GetDataSlab+0x18eb0>
   32c34:	mov	r3, #0
   32c38:	str	r3, [sp, #12]
   32c3c:	mov	r8, r3
   32c40:	b	32d00 <GetDataSlab+0x1171c>
   32c44:	ldr	r3, [sp, #196]	; 0xc4
   32c48:	ldr	r3, [r3, r0, lsl #2]
   32c4c:	cmp	r3, #0
   32c50:	beq	32c64 <GetDataSlab+0x11680>
   32c54:	ldr	r2, [r5, #-8]
   32c58:	mul	r3, r2, r3
   32c5c:	add	ip, ip, r3, lsl #1
   32c60:	add	lr, lr, r3
   32c64:	add	r0, r0, #1
   32c68:	cmp	r9, r0
   32c6c:	beq	32ce4 <GetDataSlab+0x11700>
   32c70:	ldr	r3, [r4]
   32c74:	add	r1, r3, #1
   32c78:	str	r1, [r4]
   32c7c:	ldr	r2, [r7, #4]!
   32c80:	sdiv	r3, r1, r2
   32c84:	mls	r3, r2, r3, r1
   32c88:	cmp	r3, #0
   32c8c:	bne	32cd0 <GetDataSlab+0x116ec>
   32c90:	str	r8, [r4], #4
   32c94:	ldr	r2, [r5], #4
   32c98:	sdiv	r3, lr, r2
   32c9c:	mls	r3, r2, r3, lr
   32ca0:	cmp	r3, #0
   32ca4:	beq	32c44 <GetDataSlab+0x11660>
   32ca8:	ldr	r1, [r5, #-8]
   32cac:	ldr	sl, [sp, #196]	; 0xc4
   32cb0:	ldr	sl, [sl, r0, lsl #2]
   32cb4:	str	sl, [sp, #8]
   32cb8:	sub	r3, r2, r3
   32cbc:	mla	r3, sl, r1, r3
   32cc0:	add	ip, ip, r3, lsl #1
   32cc4:	add	lr, lr, r3
   32cc8:	b	32c64 <GetDataSlab+0x11680>
   32ccc:	ldr	r0, [sp, #28]
   32cd0:	add	r3, sp, #152	; 0x98
   32cd4:	add	r3, r3, r0, lsl #2
   32cd8:	ldr	r3, [r3, #-120]	; 0xffffff88
   32cdc:	add	lr, lr, r3
   32ce0:	add	ip, ip, r3, lsl #1
   32ce4:	ldr	r3, [sp, #12]
   32ce8:	add	r3, r3, r6
   32cec:	str	r3, [sp, #12]
   32cf0:	ldr	r3, [sp, #16]
   32cf4:	ldr	r2, [sp, #12]
   32cf8:	cmp	r2, r3
   32cfc:	bge	32da4 <GetDataSlab+0x117c0>
   32d00:	ldr	r3, [sp, #196]	; 0xc4
   32d04:	ldr	r3, [r3]
   32d08:	cmp	r3, #0
   32d0c:	addne	ip, ip, r3, lsl #1
   32d10:	addne	lr, lr, r3
   32d14:	ldr	r6, [fp]
   32d18:	cmp	r6, #0
   32d1c:	ble	32d4c <GetDataSlab+0x11768>
   32d20:	sub	r0, ip, #2
   32d24:	ldr	r3, [sp, #4]
   32d28:	ldr	r2, [sp, #12]
   32d2c:	add	r1, r3, r2, lsl #1
   32d30:	mov	r2, #0
   32d34:	ldrh	r3, [r0, #2]!
   32d38:	strh	r3, [r1], #2
   32d3c:	add	r2, r2, #1
   32d40:	ldr	r6, [fp]
   32d44:	cmp	r6, r2
   32d48:	bgt	32d34 <GetDataSlab+0x11750>
   32d4c:	ldr	r3, [sp, #192]	; 0xc0
   32d50:	ldr	r2, [r3]
   32d54:	ldr	r3, [sp, #196]	; 0xc4
   32d58:	ldr	r3, [r3]
   32d5c:	sub	r3, r2, r3
   32d60:	add	lr, lr, r3
   32d64:	add	ip, ip, r3, lsl #1
   32d68:	cmp	r9, #1
   32d6c:	ble	32ce4 <GetDataSlab+0x11700>
   32d70:	ldr	r3, [sp, #76]	; 0x4c
   32d74:	add	r3, r3, #1
   32d78:	str	r3, [sp, #76]	; 0x4c
   32d7c:	ldr	r1, [fp, #4]
   32d80:	sdiv	r2, r3, r1
   32d84:	mls	r3, r1, r2, r3
   32d88:	cmp	r3, #0
   32d8c:	bne	32ccc <GetDataSlab+0x116e8>
   32d90:	add	r4, sp, #76	; 0x4c
   32d94:	add	r7, fp, #4
   32d98:	add	r5, sp, #116	; 0x74
   32d9c:	ldr	r0, [sp, #28]
   32da0:	b	32c90 <GetDataSlab+0x116ac>
   32da4:	mov	r3, #0
   32da8:	b	251fc <GetDataSlab+0x3c18>
   32dac:	ldr	r3, [sp, #196]	; 0xc4
   32db0:	ldr	r2, [r3, r0, lsl #2]
   32db4:	cmp	r2, #0
   32db8:	beq	32dcc <GetDataSlab+0x117e8>
   32dbc:	ldr	r3, [r5, #-4]
   32dc0:	mul	r3, r3, r2
   32dc4:	add	ip, ip, r3, lsl #1
   32dc8:	add	lr, lr, r3
   32dcc:	add	r0, r0, #1
   32dd0:	cmp	r9, r0
   32dd4:	beq	32e5c <GetDataSlab+0x11878>
   32dd8:	ldr	r3, [r4]
   32ddc:	add	r1, r3, #1
   32de0:	str	r1, [r4]
   32de4:	ldr	r2, [r7, #4]!
   32de8:	sdiv	r3, r1, r2
   32dec:	mls	r3, r2, r3, r1
   32df0:	cmp	r3, #0
   32df4:	bne	32e48 <GetDataSlab+0x11864>
   32df8:	str	r8, [r4], #4
   32dfc:	add	r5, r5, #4
   32e00:	ldr	r2, [r5]
   32e04:	sdiv	r3, lr, r2
   32e08:	mls	r3, r2, r3, lr
   32e0c:	cmp	r3, #0
   32e10:	beq	32dac <GetDataSlab+0x117c8>
   32e14:	ldr	r1, [r5, #-4]
   32e18:	str	r1, [sp, #8]
   32e1c:	ldr	r1, [sp, #196]	; 0xc4
   32e20:	ldr	r1, [r1, r0, lsl #2]
   32e24:	str	r1, [sp, #12]
   32e28:	sub	r3, r2, r3
   32e2c:	mov	r2, r1
   32e30:	ldr	r1, [sp, #8]
   32e34:	mla	r3, r2, r1, r3
   32e38:	add	ip, ip, r3, lsl #1
   32e3c:	add	lr, lr, r3
   32e40:	b	32dcc <GetDataSlab+0x117e8>
   32e44:	mov	r0, #1
   32e48:	add	r3, sp, #152	; 0x98
   32e4c:	add	r3, r3, r0, lsl #2
   32e50:	ldr	r3, [r3, #-120]	; 0xffffff88
   32e54:	add	lr, lr, r3
   32e58:	add	ip, ip, r3, lsl #1
   32e5c:	ldr	r3, [sp, #20]
   32e60:	add	r3, r3, r6
   32e64:	str	r3, [sp, #20]
   32e68:	ldr	r2, [sp, #16]
   32e6c:	cmp	r3, r2
   32e70:	bge	32f28 <GetDataSlab+0x11944>
   32e74:	ldr	r3, [sp, #196]	; 0xc4
   32e78:	ldr	r3, [r3]
   32e7c:	cmp	r3, #0
   32e80:	addne	ip, ip, r3, lsl #1
   32e84:	addne	lr, lr, r3
   32e88:	ldr	r6, [fp]
   32e8c:	cmp	r6, #0
   32e90:	ble	32ec8 <GetDataSlab+0x118e4>
   32e94:	ldr	r3, [sp, #4]
   32e98:	ldr	r2, [sp, #20]
   32e9c:	add	r2, r3, r2, lsl #1
   32ea0:	mov	r3, #0
   32ea4:	ldrh	r1, [ip]
   32ea8:	strh	r1, [r2], #2
   32eac:	ldr	r1, [sl]
   32eb0:	add	ip, ip, r1, lsl #1
   32eb4:	add	lr, lr, r1
   32eb8:	add	r3, r3, #1
   32ebc:	ldr	r6, [fp]
   32ec0:	cmp	r6, r3
   32ec4:	bgt	32ea4 <GetDataSlab+0x118c0>
   32ec8:	ldr	r3, [sp, #192]	; 0xc0
   32ecc:	ldr	r2, [r3]
   32ed0:	ldr	r3, [sp, #196]	; 0xc4
   32ed4:	ldr	r3, [r3]
   32ed8:	sub	r3, r2, r3
   32edc:	ldr	r2, [sl]
   32ee0:	mls	r3, r2, r6, r3
   32ee4:	add	lr, lr, r3
   32ee8:	add	ip, ip, r3, lsl #1
   32eec:	cmp	r9, #1
   32ef0:	ble	32e5c <GetDataSlab+0x11878>
   32ef4:	ldr	r3, [sp, #76]	; 0x4c
   32ef8:	add	r3, r3, #1
   32efc:	str	r3, [sp, #76]	; 0x4c
   32f00:	ldr	r1, [fp, #4]
   32f04:	sdiv	r2, r3, r1
   32f08:	mls	r3, r1, r2, r3
   32f0c:	cmp	r3, #0
   32f10:	bne	32e44 <GetDataSlab+0x11860>
   32f14:	add	r4, sp, #76	; 0x4c
   32f18:	add	r7, fp, #4
   32f1c:	add	r5, sp, #112	; 0x70
   32f20:	mov	r0, #1
   32f24:	b	32df8 <GetDataSlab+0x11814>
   32f28:	mov	r3, #0
   32f2c:	b	251fc <GetDataSlab+0x3c18>
   32f30:	ldr	r3, [sl]
   32f34:	str	r3, [sp, #28]
   32f38:	sub	r3, r3, #1
   32f3c:	str	r3, [sp, #32]
   32f40:	ldr	r3, [sp, #192]	; 0xc0
   32f44:	ldr	r3, [r3]
   32f48:	str	r3, [sp, #112]	; 0x70
   32f4c:	ldr	r3, [fp]
   32f50:	str	r3, [sp, #16]
   32f54:	cmp	r9, #1
   32f58:	ble	32f78 <GetDataSlab+0x11994>
   32f5c:	str	sl, [sp, #20]
   32f60:	add	r7, sp, #36	; 0x24
   32f64:	ldr	r4, [sp, #192]	; 0xc0
   32f68:	add	r5, sp, #112	; 0x70
   32f6c:	str	r4, [sp, #12]
   32f70:	mov	lr, #0
   32f74:	b	3cfd8 <GetDataSlab+0x1b9f4>
   32f78:	mov	lr, #0
   32f7c:	b	3d070 <GetDataSlab+0x1ba8c>
   32f80:	ldr	r3, [sp, #16]
   32f84:	cmp	r3, #0
   32f88:	ble	3a49c <GetDataSlab+0x18eb8>
   32f8c:	mov	r3, #0
   32f90:	str	r3, [sp, #12]
   32f94:	mov	r8, r3
   32f98:	b	33058 <GetDataSlab+0x11a74>
   32f9c:	ldr	r3, [sp, #196]	; 0xc4
   32fa0:	ldr	r3, [r3, r0, lsl #2]
   32fa4:	cmp	r3, #0
   32fa8:	beq	32fbc <GetDataSlab+0x119d8>
   32fac:	ldr	r2, [r5, #-8]
   32fb0:	mul	r3, r2, r3
   32fb4:	add	ip, ip, r3
   32fb8:	add	lr, lr, r3
   32fbc:	add	r0, r0, #1
   32fc0:	cmp	r9, r0
   32fc4:	beq	3303c <GetDataSlab+0x11a58>
   32fc8:	ldr	r3, [r4]
   32fcc:	add	r1, r3, #1
   32fd0:	str	r1, [r4]
   32fd4:	ldr	r2, [r7, #4]!
   32fd8:	sdiv	r3, r1, r2
   32fdc:	mls	r3, r2, r3, r1
   32fe0:	cmp	r3, #0
   32fe4:	bne	33028 <GetDataSlab+0x11a44>
   32fe8:	str	r8, [r4], #4
   32fec:	ldr	r2, [r5], #4
   32ff0:	sdiv	r3, lr, r2
   32ff4:	mls	r3, r2, r3, lr
   32ff8:	cmp	r3, #0
   32ffc:	beq	32f9c <GetDataSlab+0x119b8>
   33000:	ldr	r1, [r5, #-8]
   33004:	ldr	sl, [sp, #196]	; 0xc4
   33008:	ldr	sl, [sl, r0, lsl #2]
   3300c:	str	sl, [sp, #8]
   33010:	sub	r3, r2, r3
   33014:	mla	r3, sl, r1, r3
   33018:	add	ip, ip, r3
   3301c:	add	lr, lr, r3
   33020:	b	32fbc <GetDataSlab+0x119d8>
   33024:	ldr	r0, [sp, #28]
   33028:	add	r3, sp, #152	; 0x98
   3302c:	add	r3, r3, r0, lsl #2
   33030:	ldr	r3, [r3, #-120]	; 0xffffff88
   33034:	add	lr, lr, r3
   33038:	add	ip, ip, r3
   3303c:	ldr	r3, [sp, #12]
   33040:	add	r3, r3, r6
   33044:	str	r3, [sp, #12]
   33048:	ldr	r3, [sp, #16]
   3304c:	ldr	r2, [sp, #12]
   33050:	cmp	r2, r3
   33054:	bge	33100 <GetDataSlab+0x11b1c>
   33058:	ldr	r3, [sp, #196]	; 0xc4
   3305c:	ldr	r3, [r3]
   33060:	cmp	r3, #0
   33064:	addne	ip, ip, r3
   33068:	addne	lr, lr, r3
   3306c:	ldr	r6, [fp]
   33070:	cmp	r6, #0
   33074:	ble	330a8 <GetDataSlab+0x11ac4>
   33078:	sub	r2, ip, #1
   3307c:	ldr	r3, [sp, #4]
   33080:	ldr	r1, [sp, #12]
   33084:	add	r1, r3, r1, lsl #1
   33088:	ldrsb	r3, [r2, #1]
   3308c:	strh	r3, [r1], #2
   33090:	ldr	r6, [fp]
   33094:	add	r3, r2, #2
   33098:	sub	r3, r3, ip
   3309c:	add	r2, r2, #1
   330a0:	cmp	r6, r3
   330a4:	bgt	33088 <GetDataSlab+0x11aa4>
   330a8:	ldr	r3, [sp, #192]	; 0xc0
   330ac:	ldr	r2, [r3]
   330b0:	ldr	r3, [sp, #196]	; 0xc4
   330b4:	ldr	r3, [r3]
   330b8:	sub	r3, r2, r3
   330bc:	add	lr, lr, r3
   330c0:	add	ip, ip, r3
   330c4:	cmp	r9, #1
   330c8:	ble	3303c <GetDataSlab+0x11a58>
   330cc:	ldr	r3, [sp, #76]	; 0x4c
   330d0:	add	r3, r3, #1
   330d4:	str	r3, [sp, #76]	; 0x4c
   330d8:	ldr	r1, [fp, #4]
   330dc:	sdiv	r2, r3, r1
   330e0:	mls	r3, r1, r2, r3
   330e4:	cmp	r3, #0
   330e8:	bne	33024 <GetDataSlab+0x11a40>
   330ec:	add	r4, sp, #76	; 0x4c
   330f0:	add	r7, fp, #4
   330f4:	add	r5, sp, #116	; 0x74
   330f8:	ldr	r0, [sp, #28]
   330fc:	b	32fe8 <GetDataSlab+0x11a04>
   33100:	mov	r3, #0
   33104:	b	251fc <GetDataSlab+0x3c18>
   33108:	ldr	r3, [sp, #196]	; 0xc4
   3310c:	ldr	r2, [r3, r0, lsl #2]
   33110:	cmp	r2, #0
   33114:	beq	33128 <GetDataSlab+0x11b44>
   33118:	ldr	r3, [r5, #-4]
   3311c:	mul	r3, r3, r2
   33120:	add	ip, ip, r3
   33124:	add	lr, lr, r3
   33128:	add	r0, r0, #1
   3312c:	cmp	r9, r0
   33130:	beq	331b8 <GetDataSlab+0x11bd4>
   33134:	ldr	r3, [r4]
   33138:	add	r1, r3, #1
   3313c:	str	r1, [r4]
   33140:	ldr	r2, [r7, #4]!
   33144:	sdiv	r3, r1, r2
   33148:	mls	r3, r2, r3, r1
   3314c:	cmp	r3, #0
   33150:	bne	331a4 <GetDataSlab+0x11bc0>
   33154:	str	r8, [r4], #4
   33158:	add	r5, r5, #4
   3315c:	ldr	r2, [r5]
   33160:	sdiv	r3, lr, r2
   33164:	mls	r3, r2, r3, lr
   33168:	cmp	r3, #0
   3316c:	beq	33108 <GetDataSlab+0x11b24>
   33170:	ldr	r1, [r5, #-4]
   33174:	str	r1, [sp, #8]
   33178:	ldr	r1, [sp, #196]	; 0xc4
   3317c:	ldr	r1, [r1, r0, lsl #2]
   33180:	str	r1, [sp, #12]
   33184:	sub	r3, r2, r3
   33188:	mov	r2, r1
   3318c:	ldr	r1, [sp, #8]
   33190:	mla	r3, r2, r1, r3
   33194:	add	ip, ip, r3
   33198:	add	lr, lr, r3
   3319c:	b	33128 <GetDataSlab+0x11b44>
   331a0:	mov	r0, #1
   331a4:	add	r3, sp, #152	; 0x98
   331a8:	add	r3, r3, r0, lsl #2
   331ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   331b0:	add	lr, lr, r3
   331b4:	add	ip, ip, r3
   331b8:	ldr	r3, [sp, #20]
   331bc:	add	r3, r3, r6
   331c0:	str	r3, [sp, #20]
   331c4:	ldr	r2, [sp, #16]
   331c8:	cmp	r3, r2
   331cc:	bge	33284 <GetDataSlab+0x11ca0>
   331d0:	ldr	r3, [sp, #196]	; 0xc4
   331d4:	ldr	r3, [r3]
   331d8:	cmp	r3, #0
   331dc:	addne	ip, ip, r3
   331e0:	addne	lr, lr, r3
   331e4:	ldr	r6, [fp]
   331e8:	cmp	r6, #0
   331ec:	ble	33224 <GetDataSlab+0x11c40>
   331f0:	ldr	r3, [sp, #4]
   331f4:	ldr	r2, [sp, #20]
   331f8:	add	r2, r3, r2, lsl #1
   331fc:	mov	r3, #0
   33200:	ldrsb	r1, [ip]
   33204:	strh	r1, [r2], #2
   33208:	ldr	r1, [sl]
   3320c:	add	ip, ip, r1
   33210:	add	lr, lr, r1
   33214:	add	r3, r3, #1
   33218:	ldr	r6, [fp]
   3321c:	cmp	r6, r3
   33220:	bgt	33200 <GetDataSlab+0x11c1c>
   33224:	ldr	r3, [sp, #192]	; 0xc0
   33228:	ldr	r2, [r3]
   3322c:	ldr	r3, [sp, #196]	; 0xc4
   33230:	ldr	r3, [r3]
   33234:	sub	r3, r2, r3
   33238:	ldr	r2, [sl]
   3323c:	mls	r3, r2, r6, r3
   33240:	add	lr, lr, r3
   33244:	add	ip, ip, r3
   33248:	cmp	r9, #1
   3324c:	ble	331b8 <GetDataSlab+0x11bd4>
   33250:	ldr	r3, [sp, #76]	; 0x4c
   33254:	add	r3, r3, #1
   33258:	str	r3, [sp, #76]	; 0x4c
   3325c:	ldr	r1, [fp, #4]
   33260:	sdiv	r2, r3, r1
   33264:	mls	r3, r1, r2, r3
   33268:	cmp	r3, #0
   3326c:	bne	331a0 <GetDataSlab+0x11bbc>
   33270:	add	r4, sp, #76	; 0x4c
   33274:	add	r7, fp, #4
   33278:	add	r5, sp, #112	; 0x70
   3327c:	mov	r0, #1
   33280:	b	33154 <GetDataSlab+0x11b70>
   33284:	mov	r3, #0
   33288:	b	251fc <GetDataSlab+0x3c18>
   3328c:	ldr	r3, [sl]
   33290:	str	r3, [sp, #28]
   33294:	sub	r3, r3, #1
   33298:	str	r3, [sp, #32]
   3329c:	ldr	r3, [sp, #192]	; 0xc0
   332a0:	ldr	r3, [r3]
   332a4:	str	r3, [sp, #112]	; 0x70
   332a8:	ldr	r3, [fp]
   332ac:	str	r3, [sp, #16]
   332b0:	cmp	r9, #1
   332b4:	ble	332d8 <GetDataSlab+0x11cf4>
   332b8:	str	sl, [sp, #20]
   332bc:	add	r8, sp, #36	; 0x24
   332c0:	ldr	r5, [sp, #192]	; 0xc0
   332c4:	add	r6, sp, #112	; 0x70
   332c8:	str	r5, [sp, #12]
   332cc:	mov	r4, #1
   332d0:	mov	lr, #0
   332d4:	b	3d0c8 <GetDataSlab+0x1bae4>
   332d8:	mov	lr, #0
   332dc:	b	3d160 <GetDataSlab+0x1bb7c>
   332e0:	ldr	r3, [sp, #16]
   332e4:	cmp	r3, #0
   332e8:	ble	3a4a4 <GetDataSlab+0x18ec0>
   332ec:	mov	r3, #0
   332f0:	str	r3, [sp, #12]
   332f4:	mov	r8, r3
   332f8:	b	333b8 <GetDataSlab+0x11dd4>
   332fc:	ldr	r3, [sp, #196]	; 0xc4
   33300:	ldr	r3, [r3, r0, lsl #2]
   33304:	cmp	r3, #0
   33308:	beq	3331c <GetDataSlab+0x11d38>
   3330c:	ldr	r2, [r5, #-8]
   33310:	mul	r3, r2, r3
   33314:	add	ip, ip, r3
   33318:	add	lr, lr, r3
   3331c:	add	r0, r0, #1
   33320:	cmp	r9, r0
   33324:	beq	3339c <GetDataSlab+0x11db8>
   33328:	ldr	r3, [r4]
   3332c:	add	r1, r3, #1
   33330:	str	r1, [r4]
   33334:	ldr	r2, [r7, #4]!
   33338:	sdiv	r3, r1, r2
   3333c:	mls	r3, r2, r3, r1
   33340:	cmp	r3, #0
   33344:	bne	33388 <GetDataSlab+0x11da4>
   33348:	str	r8, [r4], #4
   3334c:	ldr	r2, [r5], #4
   33350:	sdiv	r3, lr, r2
   33354:	mls	r3, r2, r3, lr
   33358:	cmp	r3, #0
   3335c:	beq	332fc <GetDataSlab+0x11d18>
   33360:	ldr	r1, [r5, #-8]
   33364:	ldr	sl, [sp, #196]	; 0xc4
   33368:	ldr	sl, [sl, r0, lsl #2]
   3336c:	str	sl, [sp, #8]
   33370:	sub	r3, r2, r3
   33374:	mla	r3, sl, r1, r3
   33378:	add	ip, ip, r3
   3337c:	add	lr, lr, r3
   33380:	b	3331c <GetDataSlab+0x11d38>
   33384:	ldr	r0, [sp, #28]
   33388:	add	r3, sp, #152	; 0x98
   3338c:	add	r3, r3, r0, lsl #2
   33390:	ldr	r3, [r3, #-120]	; 0xffffff88
   33394:	add	lr, lr, r3
   33398:	add	ip, ip, r3
   3339c:	ldr	r3, [sp, #12]
   333a0:	add	r3, r3, r6
   333a4:	str	r3, [sp, #12]
   333a8:	ldr	r3, [sp, #16]
   333ac:	ldr	r2, [sp, #12]
   333b0:	cmp	r2, r3
   333b4:	bge	33460 <GetDataSlab+0x11e7c>
   333b8:	ldr	r3, [sp, #196]	; 0xc4
   333bc:	ldr	r3, [r3]
   333c0:	cmp	r3, #0
   333c4:	addne	ip, ip, r3
   333c8:	addne	lr, lr, r3
   333cc:	ldr	r6, [fp]
   333d0:	cmp	r6, #0
   333d4:	ble	33408 <GetDataSlab+0x11e24>
   333d8:	sub	r2, ip, #1
   333dc:	ldr	r3, [sp, #4]
   333e0:	ldr	r1, [sp, #12]
   333e4:	add	r1, r3, r1, lsl #1
   333e8:	ldrb	r3, [r2, #1]
   333ec:	strh	r3, [r1], #2
   333f0:	ldr	r6, [fp]
   333f4:	add	r3, r2, #2
   333f8:	sub	r3, r3, ip
   333fc:	add	r2, r2, #1
   33400:	cmp	r6, r3
   33404:	bgt	333e8 <GetDataSlab+0x11e04>
   33408:	ldr	r3, [sp, #192]	; 0xc0
   3340c:	ldr	r2, [r3]
   33410:	ldr	r3, [sp, #196]	; 0xc4
   33414:	ldr	r3, [r3]
   33418:	sub	r3, r2, r3
   3341c:	add	lr, lr, r3
   33420:	add	ip, ip, r3
   33424:	cmp	r9, #1
   33428:	ble	3339c <GetDataSlab+0x11db8>
   3342c:	ldr	r3, [sp, #76]	; 0x4c
   33430:	add	r3, r3, #1
   33434:	str	r3, [sp, #76]	; 0x4c
   33438:	ldr	r1, [fp, #4]
   3343c:	sdiv	r2, r3, r1
   33440:	mls	r3, r1, r2, r3
   33444:	cmp	r3, #0
   33448:	bne	33384 <GetDataSlab+0x11da0>
   3344c:	add	r4, sp, #76	; 0x4c
   33450:	add	r7, fp, #4
   33454:	add	r5, sp, #116	; 0x74
   33458:	ldr	r0, [sp, #28]
   3345c:	b	33348 <GetDataSlab+0x11d64>
   33460:	mov	r3, #0
   33464:	b	251fc <GetDataSlab+0x3c18>
   33468:	ldr	r3, [sp, #196]	; 0xc4
   3346c:	ldr	r2, [r3, r0, lsl #2]
   33470:	cmp	r2, #0
   33474:	beq	33488 <GetDataSlab+0x11ea4>
   33478:	ldr	r3, [r5, #-4]
   3347c:	mul	r3, r3, r2
   33480:	add	ip, ip, r3
   33484:	add	lr, lr, r3
   33488:	add	r0, r0, #1
   3348c:	cmp	r9, r0
   33490:	beq	33518 <GetDataSlab+0x11f34>
   33494:	ldr	r3, [r4]
   33498:	add	r1, r3, #1
   3349c:	str	r1, [r4]
   334a0:	ldr	r2, [r7, #4]!
   334a4:	sdiv	r3, r1, r2
   334a8:	mls	r3, r2, r3, r1
   334ac:	cmp	r3, #0
   334b0:	bne	33504 <GetDataSlab+0x11f20>
   334b4:	str	r8, [r4], #4
   334b8:	add	r5, r5, #4
   334bc:	ldr	r2, [r5]
   334c0:	sdiv	r3, lr, r2
   334c4:	mls	r3, r2, r3, lr
   334c8:	cmp	r3, #0
   334cc:	beq	33468 <GetDataSlab+0x11e84>
   334d0:	ldr	r1, [r5, #-4]
   334d4:	str	r1, [sp, #8]
   334d8:	ldr	r1, [sp, #196]	; 0xc4
   334dc:	ldr	r1, [r1, r0, lsl #2]
   334e0:	str	r1, [sp, #12]
   334e4:	sub	r3, r2, r3
   334e8:	mov	r2, r1
   334ec:	ldr	r1, [sp, #8]
   334f0:	mla	r3, r2, r1, r3
   334f4:	add	ip, ip, r3
   334f8:	add	lr, lr, r3
   334fc:	b	33488 <GetDataSlab+0x11ea4>
   33500:	mov	r0, #1
   33504:	add	r3, sp, #152	; 0x98
   33508:	add	r3, r3, r0, lsl #2
   3350c:	ldr	r3, [r3, #-120]	; 0xffffff88
   33510:	add	lr, lr, r3
   33514:	add	ip, ip, r3
   33518:	ldr	r3, [sp, #20]
   3351c:	add	r3, r3, r6
   33520:	str	r3, [sp, #20]
   33524:	ldr	r2, [sp, #16]
   33528:	cmp	r3, r2
   3352c:	bge	335e4 <GetDataSlab+0x12000>
   33530:	ldr	r3, [sp, #196]	; 0xc4
   33534:	ldr	r3, [r3]
   33538:	cmp	r3, #0
   3353c:	addne	ip, ip, r3
   33540:	addne	lr, lr, r3
   33544:	ldr	r6, [fp]
   33548:	cmp	r6, #0
   3354c:	ble	33584 <GetDataSlab+0x11fa0>
   33550:	ldr	r3, [sp, #4]
   33554:	ldr	r2, [sp, #20]
   33558:	add	r2, r3, r2, lsl #1
   3355c:	mov	r3, #0
   33560:	ldrb	r1, [ip]
   33564:	strh	r1, [r2], #2
   33568:	ldr	r1, [sl]
   3356c:	add	ip, ip, r1
   33570:	add	lr, lr, r1
   33574:	add	r3, r3, #1
   33578:	ldr	r6, [fp]
   3357c:	cmp	r6, r3
   33580:	bgt	33560 <GetDataSlab+0x11f7c>
   33584:	ldr	r3, [sp, #192]	; 0xc0
   33588:	ldr	r2, [r3]
   3358c:	ldr	r3, [sp, #196]	; 0xc4
   33590:	ldr	r3, [r3]
   33594:	sub	r3, r2, r3
   33598:	ldr	r2, [sl]
   3359c:	mls	r3, r2, r6, r3
   335a0:	add	lr, lr, r3
   335a4:	add	ip, ip, r3
   335a8:	cmp	r9, #1
   335ac:	ble	33518 <GetDataSlab+0x11f34>
   335b0:	ldr	r3, [sp, #76]	; 0x4c
   335b4:	add	r3, r3, #1
   335b8:	str	r3, [sp, #76]	; 0x4c
   335bc:	ldr	r1, [fp, #4]
   335c0:	sdiv	r2, r3, r1
   335c4:	mls	r3, r1, r2, r3
   335c8:	cmp	r3, #0
   335cc:	bne	33500 <GetDataSlab+0x11f1c>
   335d0:	add	r4, sp, #76	; 0x4c
   335d4:	add	r7, fp, #4
   335d8:	add	r5, sp, #112	; 0x70
   335dc:	mov	r0, #1
   335e0:	b	334b4 <GetDataSlab+0x11ed0>
   335e4:	mov	r3, #0
   335e8:	b	251fc <GetDataSlab+0x3c18>
   335ec:	cmp	r8, #12
   335f0:	beq	3364c <GetDataSlab+0x12068>
   335f4:	cmp	r8, #13
   335f8:	movne	r3, #1
   335fc:	bne	251fc <GetDataSlab+0x3c18>
   33600:	ldr	r3, [sl]
   33604:	str	r3, [sp, #28]
   33608:	sub	r3, r3, #1
   3360c:	str	r3, [sp, #32]
   33610:	ldr	r3, [sp, #192]	; 0xc0
   33614:	ldr	r3, [r3]
   33618:	str	r3, [sp, #112]	; 0x70
   3361c:	ldr	r3, [fp]
   33620:	str	r3, [sp, #16]
   33624:	cmp	r9, #1
   33628:	ble	3399c <GetDataSlab+0x123b8>
   3362c:	str	sl, [sp, #20]
   33630:	add	r8, sp, #36	; 0x24
   33634:	ldr	r5, [sp, #192]	; 0xc0
   33638:	add	r6, sp, #112	; 0x70
   3363c:	str	r5, [sp, #12]
   33640:	mov	r4, #1
   33644:	mov	lr, #0
   33648:	b	3cdf8 <GetDataSlab+0x1b814>
   3364c:	ldr	r3, [sl]
   33650:	str	r3, [sp, #28]
   33654:	sub	r3, r3, #1
   33658:	str	r3, [sp, #32]
   3365c:	ldr	r3, [sp, #192]	; 0xc0
   33660:	ldr	r3, [r3]
   33664:	str	r3, [sp, #112]	; 0x70
   33668:	ldr	r3, [fp]
   3366c:	str	r3, [sp, #16]
   33670:	cmp	r9, #1
   33674:	ble	33698 <GetDataSlab+0x120b4>
   33678:	str	sl, [sp, #20]
   3367c:	add	r8, sp, #36	; 0x24
   33680:	ldr	r5, [sp, #192]	; 0xc0
   33684:	add	r6, sp, #112	; 0x70
   33688:	str	r5, [sp, #12]
   3368c:	mov	r4, #1
   33690:	mov	lr, #0
   33694:	b	3cee8 <GetDataSlab+0x1b904>
   33698:	mov	lr, #0
   3369c:	b	3cf80 <GetDataSlab+0x1b99c>
   336a0:	ldr	r3, [sp, #16]
   336a4:	cmp	r3, #0
   336a8:	ble	3cfac <GetDataSlab+0x1b9c8>
   336ac:	mov	r3, #0
   336b0:	str	r3, [sp, #12]
   336b4:	mov	r8, r3
   336b8:	b	3377c <GetDataSlab+0x12198>
   336bc:	ldr	r3, [sp, #196]	; 0xc4
   336c0:	ldr	r2, [r3, r0, lsl #2]
   336c4:	cmp	r2, #0
   336c8:	beq	336dc <GetDataSlab+0x120f8>
   336cc:	ldr	r3, [r5, #-4]
   336d0:	mul	r3, r3, r2
   336d4:	add	ip, ip, r3, lsl #3
   336d8:	add	lr, lr, r3
   336dc:	add	r0, r0, #1
   336e0:	cmp	r9, r0
   336e4:	beq	33760 <GetDataSlab+0x1217c>
   336e8:	ldr	r3, [r4]
   336ec:	add	r1, r3, #1
   336f0:	str	r1, [r4]
   336f4:	ldr	r2, [r7, #4]!
   336f8:	sdiv	r3, r1, r2
   336fc:	mls	r3, r2, r3, r1
   33700:	cmp	r3, #0
   33704:	bne	3374c <GetDataSlab+0x12168>
   33708:	str	r8, [r4], #4
   3370c:	add	r5, r5, #4
   33710:	ldr	r2, [r5]
   33714:	sdiv	r3, lr, r2
   33718:	mls	r3, r2, r3, lr
   3371c:	cmp	r3, #0
   33720:	beq	336bc <GetDataSlab+0x120d8>
   33724:	ldr	r1, [r5, #-4]
   33728:	ldr	sl, [sp, #196]	; 0xc4
   3372c:	ldr	sl, [sl, r0, lsl #2]
   33730:	str	sl, [sp, #8]
   33734:	sub	r3, r2, r3
   33738:	mla	r3, sl, r1, r3
   3373c:	add	ip, ip, r3, lsl #3
   33740:	add	lr, lr, r3
   33744:	b	336dc <GetDataSlab+0x120f8>
   33748:	ldr	r0, [sp, #28]
   3374c:	add	r3, sp, #152	; 0x98
   33750:	add	r3, r3, r0, lsl #2
   33754:	ldr	r3, [r3, #-120]	; 0xffffff88
   33758:	add	lr, lr, r3
   3375c:	add	ip, ip, r3, lsl #3
   33760:	ldr	r3, [sp, #12]
   33764:	add	r3, r3, r6
   33768:	str	r3, [sp, #12]
   3376c:	ldr	r3, [sp, #16]
   33770:	ldr	r2, [sp, #12]
   33774:	cmp	r2, r3
   33778:	bge	3cfac <GetDataSlab+0x1b9c8>
   3377c:	ldr	r3, [sp, #196]	; 0xc4
   33780:	ldr	r3, [r3]
   33784:	cmp	r3, #0
   33788:	addne	ip, ip, r3, lsl #3
   3378c:	addne	lr, lr, r3
   33790:	ldr	r6, [fp]
   33794:	cmp	r6, #0
   33798:	ble	337c8 <GetDataSlab+0x121e4>
   3379c:	sub	r0, ip, #8
   337a0:	ldr	r3, [sp, #4]
   337a4:	ldr	r2, [sp, #12]
   337a8:	add	r1, r3, r2, lsl #1
   337ac:	mov	r2, #0
   337b0:	ldr	r3, [r0, #8]!
   337b4:	strh	r3, [r1], #2
   337b8:	add	r2, r2, #1
   337bc:	ldr	r6, [fp]
   337c0:	cmp	r6, r2
   337c4:	bgt	337b0 <GetDataSlab+0x121cc>
   337c8:	ldr	r3, [sp, #192]	; 0xc0
   337cc:	ldr	r2, [r3]
   337d0:	ldr	r3, [sp, #196]	; 0xc4
   337d4:	ldr	r3, [r3]
   337d8:	sub	r3, r2, r3
   337dc:	add	lr, lr, r3
   337e0:	add	ip, ip, r3, lsl #3
   337e4:	cmp	r9, #1
   337e8:	ble	33760 <GetDataSlab+0x1217c>
   337ec:	ldr	r3, [sp, #76]	; 0x4c
   337f0:	add	r3, r3, #1
   337f4:	str	r3, [sp, #76]	; 0x4c
   337f8:	ldr	r1, [fp, #4]
   337fc:	sdiv	r2, r3, r1
   33800:	mls	r3, r1, r2, r3
   33804:	cmp	r3, #0
   33808:	bne	33748 <GetDataSlab+0x12164>
   3380c:	add	r4, sp, #76	; 0x4c
   33810:	add	r7, fp, #4
   33814:	add	r5, sp, #112	; 0x70
   33818:	ldr	r0, [sp, #28]
   3381c:	b	33708 <GetDataSlab+0x12124>
   33820:	ldr	r3, [sp, #196]	; 0xc4
   33824:	ldr	r2, [r3, r0, lsl #2]
   33828:	cmp	r2, #0
   3382c:	beq	33840 <GetDataSlab+0x1225c>
   33830:	ldr	r3, [r5, #-4]
   33834:	mul	r3, r3, r2
   33838:	add	ip, ip, r3, lsl #3
   3383c:	add	lr, lr, r3
   33840:	add	r0, r0, #1
   33844:	cmp	r9, r0
   33848:	beq	338d0 <GetDataSlab+0x122ec>
   3384c:	ldr	r3, [r4]
   33850:	add	r1, r3, #1
   33854:	str	r1, [r4]
   33858:	ldr	r2, [r7, #4]!
   3385c:	sdiv	r3, r1, r2
   33860:	mls	r3, r2, r3, r1
   33864:	cmp	r3, #0
   33868:	bne	338bc <GetDataSlab+0x122d8>
   3386c:	str	r8, [r4], #4
   33870:	add	r5, r5, #4
   33874:	ldr	r2, [r5]
   33878:	sdiv	r3, lr, r2
   3387c:	mls	r3, r2, r3, lr
   33880:	cmp	r3, #0
   33884:	beq	33820 <GetDataSlab+0x1223c>
   33888:	ldr	r1, [r5, #-4]
   3388c:	str	r1, [sp, #8]
   33890:	ldr	r1, [sp, #196]	; 0xc4
   33894:	ldr	r1, [r1, r0, lsl #2]
   33898:	str	r1, [sp, #12]
   3389c:	sub	r3, r2, r3
   338a0:	mov	r2, r1
   338a4:	ldr	r1, [sp, #8]
   338a8:	mla	r3, r2, r1, r3
   338ac:	add	ip, ip, r3, lsl #3
   338b0:	add	lr, lr, r3
   338b4:	b	33840 <GetDataSlab+0x1225c>
   338b8:	mov	r0, #1
   338bc:	add	r3, sp, #152	; 0x98
   338c0:	add	r3, r3, r0, lsl #2
   338c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   338c8:	add	lr, lr, r3
   338cc:	add	ip, ip, r3, lsl #3
   338d0:	ldr	r3, [sp, #20]
   338d4:	add	r3, r3, r6
   338d8:	str	r3, [sp, #20]
   338dc:	ldr	r2, [sp, #16]
   338e0:	cmp	r3, r2
   338e4:	bge	3cfac <GetDataSlab+0x1b9c8>
   338e8:	ldr	r3, [sp, #196]	; 0xc4
   338ec:	ldr	r3, [r3]
   338f0:	cmp	r3, #0
   338f4:	addne	ip, ip, r3, lsl #3
   338f8:	addne	lr, lr, r3
   338fc:	ldr	r6, [fp]
   33900:	cmp	r6, #0
   33904:	ble	3393c <GetDataSlab+0x12358>
   33908:	ldr	r3, [sp, #4]
   3390c:	ldr	r2, [sp, #20]
   33910:	add	r2, r3, r2, lsl #1
   33914:	mov	r3, #0
   33918:	ldr	r1, [ip]
   3391c:	strh	r1, [r2], #2
   33920:	ldr	r1, [sl]
   33924:	add	ip, ip, r1, lsl #3
   33928:	add	lr, lr, r1
   3392c:	add	r3, r3, #1
   33930:	ldr	r6, [fp]
   33934:	cmp	r6, r3
   33938:	bgt	33918 <GetDataSlab+0x12334>
   3393c:	ldr	r3, [sp, #192]	; 0xc0
   33940:	ldr	r2, [r3]
   33944:	ldr	r3, [sp, #196]	; 0xc4
   33948:	ldr	r3, [r3]
   3394c:	sub	r3, r2, r3
   33950:	ldr	r2, [sl]
   33954:	mls	r3, r2, r6, r3
   33958:	add	lr, lr, r3
   3395c:	add	ip, ip, r3, lsl #3
   33960:	cmp	r9, #1
   33964:	ble	338d0 <GetDataSlab+0x122ec>
   33968:	ldr	r3, [sp, #76]	; 0x4c
   3396c:	add	r3, r3, #1
   33970:	str	r3, [sp, #76]	; 0x4c
   33974:	ldr	r1, [fp, #4]
   33978:	sdiv	r2, r3, r1
   3397c:	mls	r3, r1, r2, r3
   33980:	cmp	r3, #0
   33984:	bne	338b8 <GetDataSlab+0x122d4>
   33988:	add	r4, sp, #76	; 0x4c
   3398c:	add	r7, fp, #4
   33990:	add	r5, sp, #112	; 0x70
   33994:	mov	r0, #1
   33998:	b	3386c <GetDataSlab+0x12288>
   3399c:	mov	lr, #0
   339a0:	b	3ce90 <GetDataSlab+0x1b8ac>
   339a4:	ldr	r3, [sp, #16]
   339a8:	cmp	r3, #0
   339ac:	ble	3a4ac <GetDataSlab+0x18ec8>
   339b0:	mov	r3, #0
   339b4:	str	r3, [sp, #12]
   339b8:	mov	r8, r3
   339bc:	b	33a80 <GetDataSlab+0x1249c>
   339c0:	ldr	r3, [sp, #196]	; 0xc4
   339c4:	ldr	r2, [r3, r0, lsl #2]
   339c8:	cmp	r2, #0
   339cc:	beq	339e0 <GetDataSlab+0x123fc>
   339d0:	ldr	r3, [r5, #-4]
   339d4:	mul	r3, r3, r2
   339d8:	add	ip, ip, r3, lsl #3
   339dc:	add	lr, lr, r3
   339e0:	add	r0, r0, #1
   339e4:	cmp	r9, r0
   339e8:	beq	33a64 <GetDataSlab+0x12480>
   339ec:	ldr	r3, [r4]
   339f0:	add	r1, r3, #1
   339f4:	str	r1, [r4]
   339f8:	ldr	r2, [r7, #4]!
   339fc:	sdiv	r3, r1, r2
   33a00:	mls	r3, r2, r3, r1
   33a04:	cmp	r3, #0
   33a08:	bne	33a50 <GetDataSlab+0x1246c>
   33a0c:	str	r8, [r4], #4
   33a10:	add	r5, r5, #4
   33a14:	ldr	r2, [r5]
   33a18:	sdiv	r3, lr, r2
   33a1c:	mls	r3, r2, r3, lr
   33a20:	cmp	r3, #0
   33a24:	beq	339c0 <GetDataSlab+0x123dc>
   33a28:	ldr	r1, [r5, #-4]
   33a2c:	ldr	sl, [sp, #196]	; 0xc4
   33a30:	ldr	sl, [sl, r0, lsl #2]
   33a34:	str	sl, [sp, #8]
   33a38:	sub	r3, r2, r3
   33a3c:	mla	r3, sl, r1, r3
   33a40:	add	ip, ip, r3, lsl #3
   33a44:	add	lr, lr, r3
   33a48:	b	339e0 <GetDataSlab+0x123fc>
   33a4c:	ldr	r0, [sp, #28]
   33a50:	add	r3, sp, #152	; 0x98
   33a54:	add	r3, r3, r0, lsl #2
   33a58:	ldr	r3, [r3, #-120]	; 0xffffff88
   33a5c:	add	lr, lr, r3
   33a60:	add	ip, ip, r3, lsl #3
   33a64:	ldr	r3, [sp, #12]
   33a68:	add	r3, r3, r6
   33a6c:	str	r3, [sp, #12]
   33a70:	ldr	r3, [sp, #16]
   33a74:	ldr	r2, [sp, #12]
   33a78:	cmp	r2, r3
   33a7c:	bge	33b24 <GetDataSlab+0x12540>
   33a80:	ldr	r3, [sp, #196]	; 0xc4
   33a84:	ldr	r3, [r3]
   33a88:	cmp	r3, #0
   33a8c:	addne	ip, ip, r3, lsl #3
   33a90:	addne	lr, lr, r3
   33a94:	ldr	r6, [fp]
   33a98:	cmp	r6, #0
   33a9c:	ble	33acc <GetDataSlab+0x124e8>
   33aa0:	sub	r0, ip, #8
   33aa4:	ldr	r3, [sp, #4]
   33aa8:	ldr	r2, [sp, #12]
   33aac:	add	r1, r3, r2, lsl #1
   33ab0:	mov	r2, #0
   33ab4:	ldr	r3, [r0, #8]!
   33ab8:	strh	r3, [r1], #2
   33abc:	add	r2, r2, #1
   33ac0:	ldr	r6, [fp]
   33ac4:	cmp	r6, r2
   33ac8:	bgt	33ab4 <GetDataSlab+0x124d0>
   33acc:	ldr	r3, [sp, #192]	; 0xc0
   33ad0:	ldr	r2, [r3]
   33ad4:	ldr	r3, [sp, #196]	; 0xc4
   33ad8:	ldr	r3, [r3]
   33adc:	sub	r3, r2, r3
   33ae0:	add	lr, lr, r3
   33ae4:	add	ip, ip, r3, lsl #3
   33ae8:	cmp	r9, #1
   33aec:	ble	33a64 <GetDataSlab+0x12480>
   33af0:	ldr	r3, [sp, #76]	; 0x4c
   33af4:	add	r3, r3, #1
   33af8:	str	r3, [sp, #76]	; 0x4c
   33afc:	ldr	r1, [fp, #4]
   33b00:	sdiv	r2, r3, r1
   33b04:	mls	r3, r1, r2, r3
   33b08:	cmp	r3, #0
   33b0c:	bne	33a4c <GetDataSlab+0x12468>
   33b10:	add	r4, sp, #76	; 0x4c
   33b14:	add	r7, fp, #4
   33b18:	add	r5, sp, #112	; 0x70
   33b1c:	ldr	r0, [sp, #28]
   33b20:	b	33a0c <GetDataSlab+0x12428>
   33b24:	mov	r3, #0
   33b28:	b	251fc <GetDataSlab+0x3c18>
   33b2c:	ldr	r3, [sp, #196]	; 0xc4
   33b30:	ldr	r2, [r3, r0, lsl #2]
   33b34:	cmp	r2, #0
   33b38:	beq	33b4c <GetDataSlab+0x12568>
   33b3c:	ldr	r3, [r5, #-4]
   33b40:	mul	r3, r3, r2
   33b44:	add	ip, ip, r3, lsl #3
   33b48:	add	lr, lr, r3
   33b4c:	add	r0, r0, #1
   33b50:	cmp	r9, r0
   33b54:	beq	33bdc <GetDataSlab+0x125f8>
   33b58:	ldr	r3, [r4]
   33b5c:	add	r1, r3, #1
   33b60:	str	r1, [r4]
   33b64:	ldr	r2, [r7, #4]!
   33b68:	sdiv	r3, r1, r2
   33b6c:	mls	r3, r2, r3, r1
   33b70:	cmp	r3, #0
   33b74:	bne	33bc8 <GetDataSlab+0x125e4>
   33b78:	str	r8, [r4], #4
   33b7c:	add	r5, r5, #4
   33b80:	ldr	r2, [r5]
   33b84:	sdiv	r3, lr, r2
   33b88:	mls	r3, r2, r3, lr
   33b8c:	cmp	r3, #0
   33b90:	beq	33b2c <GetDataSlab+0x12548>
   33b94:	ldr	r1, [r5, #-4]
   33b98:	str	r1, [sp, #8]
   33b9c:	ldr	r1, [sp, #196]	; 0xc4
   33ba0:	ldr	r1, [r1, r0, lsl #2]
   33ba4:	str	r1, [sp, #12]
   33ba8:	sub	r3, r2, r3
   33bac:	mov	r2, r1
   33bb0:	ldr	r1, [sp, #8]
   33bb4:	mla	r3, r2, r1, r3
   33bb8:	add	ip, ip, r3, lsl #3
   33bbc:	add	lr, lr, r3
   33bc0:	b	33b4c <GetDataSlab+0x12568>
   33bc4:	mov	r0, #1
   33bc8:	add	r3, sp, #152	; 0x98
   33bcc:	add	r3, r3, r0, lsl #2
   33bd0:	ldr	r3, [r3, #-120]	; 0xffffff88
   33bd4:	add	lr, lr, r3
   33bd8:	add	ip, ip, r3, lsl #3
   33bdc:	ldr	r3, [sp, #20]
   33be0:	add	r3, r3, r6
   33be4:	str	r3, [sp, #20]
   33be8:	ldr	r2, [sp, #16]
   33bec:	cmp	r3, r2
   33bf0:	bge	33ca8 <GetDataSlab+0x126c4>
   33bf4:	ldr	r3, [sp, #196]	; 0xc4
   33bf8:	ldr	r3, [r3]
   33bfc:	cmp	r3, #0
   33c00:	addne	ip, ip, r3, lsl #3
   33c04:	addne	lr, lr, r3
   33c08:	ldr	r6, [fp]
   33c0c:	cmp	r6, #0
   33c10:	ble	33c48 <GetDataSlab+0x12664>
   33c14:	ldr	r3, [sp, #4]
   33c18:	ldr	r2, [sp, #20]
   33c1c:	add	r2, r3, r2, lsl #1
   33c20:	mov	r3, #0
   33c24:	ldr	r1, [ip]
   33c28:	strh	r1, [r2], #2
   33c2c:	ldr	r1, [sl]
   33c30:	add	ip, ip, r1, lsl #3
   33c34:	add	lr, lr, r1
   33c38:	add	r3, r3, #1
   33c3c:	ldr	r6, [fp]
   33c40:	cmp	r6, r3
   33c44:	bgt	33c24 <GetDataSlab+0x12640>
   33c48:	ldr	r3, [sp, #192]	; 0xc0
   33c4c:	ldr	r2, [r3]
   33c50:	ldr	r3, [sp, #196]	; 0xc4
   33c54:	ldr	r3, [r3]
   33c58:	sub	r3, r2, r3
   33c5c:	ldr	r2, [sl]
   33c60:	mls	r3, r2, r6, r3
   33c64:	add	lr, lr, r3
   33c68:	add	ip, ip, r3, lsl #3
   33c6c:	cmp	r9, #1
   33c70:	ble	33bdc <GetDataSlab+0x125f8>
   33c74:	ldr	r3, [sp, #76]	; 0x4c
   33c78:	add	r3, r3, #1
   33c7c:	str	r3, [sp, #76]	; 0x4c
   33c80:	ldr	r1, [fp, #4]
   33c84:	sdiv	r2, r3, r1
   33c88:	mls	r3, r1, r2, r3
   33c8c:	cmp	r3, #0
   33c90:	bne	33bc4 <GetDataSlab+0x125e0>
   33c94:	add	r4, sp, #76	; 0x4c
   33c98:	add	r7, fp, #4
   33c9c:	add	r5, sp, #112	; 0x70
   33ca0:	mov	r0, #1
   33ca4:	b	33b78 <GetDataSlab+0x12594>
   33ca8:	mov	r3, #0
   33cac:	b	251fc <GetDataSlab+0x3c18>
   33cb0:	sub	r3, r8, #1
   33cb4:	cmp	r3, #8
   33cb8:	addls	pc, pc, r3, lsl #2
   33cbc:	b	357e8 <GetDataSlab+0x14204>
   33cc0:	b	3512c <GetDataSlab+0x13b48>
   33cc4:	b	35488 <GetDataSlab+0x13ea4>
   33cc8:	b	34a74 <GetDataSlab+0x13490>
   33ccc:	b	34dd0 <GetDataSlab+0x137ec>
   33cd0:	b	343bc <GetDataSlab+0x12dd8>
   33cd4:	b	34718 <GetDataSlab+0x13134>
   33cd8:	b	34050 <GetDataSlab+0x12a6c>
   33cdc:	b	357e8 <GetDataSlab+0x14204>
   33ce0:	b	33ce4 <GetDataSlab+0x12700>
   33ce4:	ldr	r3, [sl]
   33ce8:	str	r3, [sp, #28]
   33cec:	sub	r3, r3, #1
   33cf0:	str	r3, [sp, #32]
   33cf4:	ldr	r3, [sp, #192]	; 0xc0
   33cf8:	ldr	r3, [r3]
   33cfc:	str	r3, [sp, #112]	; 0x70
   33d00:	ldr	r3, [fp]
   33d04:	str	r3, [sp, #16]
   33d08:	cmp	r9, #1
   33d0c:	ble	33d30 <GetDataSlab+0x1274c>
   33d10:	str	sl, [sp, #20]
   33d14:	add	r8, sp, #36	; 0x24
   33d18:	ldr	r5, [sp, #192]	; 0xc0
   33d1c:	add	r6, sp, #112	; 0x70
   33d20:	str	r5, [sp, #12]
   33d24:	mov	r4, #1
   33d28:	mov	lr, #0
   33d2c:	b	3dfc8 <GetDataSlab+0x1c9e4>
   33d30:	mov	lr, #0
   33d34:	b	3e060 <GetDataSlab+0x1ca7c>
   33d38:	ldr	r3, [sp, #16]
   33d3c:	cmp	r3, #0
   33d40:	ble	3a4b4 <GetDataSlab+0x18ed0>
   33d44:	mov	r3, #0
   33d48:	str	r3, [sp, #12]
   33d4c:	mov	r8, r3
   33d50:	b	33e10 <GetDataSlab+0x1282c>
   33d54:	ldr	r3, [sp, #196]	; 0xc4
   33d58:	ldr	r3, [r3, r0, lsl #2]
   33d5c:	cmp	r3, #0
   33d60:	beq	33d74 <GetDataSlab+0x12790>
   33d64:	ldr	r2, [r5, #-8]
   33d68:	mul	r3, r2, r3
   33d6c:	add	ip, ip, r3, lsl #3
   33d70:	add	lr, lr, r3
   33d74:	add	r0, r0, #1
   33d78:	cmp	r9, r0
   33d7c:	beq	33df4 <GetDataSlab+0x12810>
   33d80:	ldr	r3, [r4]
   33d84:	add	r1, r3, #1
   33d88:	str	r1, [r4]
   33d8c:	ldr	r2, [r7, #4]!
   33d90:	sdiv	r3, r1, r2
   33d94:	mls	r3, r2, r3, r1
   33d98:	cmp	r3, #0
   33d9c:	bne	33de0 <GetDataSlab+0x127fc>
   33da0:	str	r8, [r4], #4
   33da4:	ldr	r2, [r5], #4
   33da8:	sdiv	r3, lr, r2
   33dac:	mls	r3, r2, r3, lr
   33db0:	cmp	r3, #0
   33db4:	beq	33d54 <GetDataSlab+0x12770>
   33db8:	ldr	r1, [r5, #-8]
   33dbc:	ldr	sl, [sp, #196]	; 0xc4
   33dc0:	ldr	sl, [sl, r0, lsl #2]
   33dc4:	str	sl, [sp, #8]
   33dc8:	sub	r3, r2, r3
   33dcc:	mla	r3, sl, r1, r3
   33dd0:	add	ip, ip, r3, lsl #3
   33dd4:	add	lr, lr, r3
   33dd8:	b	33d74 <GetDataSlab+0x12790>
   33ddc:	ldr	r0, [sp, #28]
   33de0:	add	r3, sp, #152	; 0x98
   33de4:	add	r3, r3, r0, lsl #2
   33de8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33dec:	add	lr, lr, r3
   33df0:	add	ip, ip, r3, lsl #3
   33df4:	ldr	r3, [sp, #12]
   33df8:	add	r3, r3, r6
   33dfc:	str	r3, [sp, #12]
   33e00:	ldr	r3, [sp, #16]
   33e04:	ldr	r2, [sp, #12]
   33e08:	cmp	r2, r3
   33e0c:	bge	33ebc <GetDataSlab+0x128d8>
   33e10:	ldr	r3, [sp, #196]	; 0xc4
   33e14:	ldr	r3, [r3]
   33e18:	cmp	r3, #0
   33e1c:	addne	ip, ip, r3, lsl #3
   33e20:	addne	lr, lr, r3
   33e24:	ldr	r6, [fp]
   33e28:	cmp	r6, #0
   33e2c:	ble	33e64 <GetDataSlab+0x12880>
   33e30:	mov	r1, ip
   33e34:	ldr	r3, [sp, #4]
   33e38:	ldr	r2, [sp, #12]
   33e3c:	add	r2, r3, r2, lsl #1
   33e40:	mov	r3, #0
   33e44:	vldmia	r1!, {d7}
   33e48:	vcvt.u32.f64	s15, d7
   33e4c:	vmov	r0, s15
   33e50:	strh	r0, [r2], #2
   33e54:	add	r3, r3, #1
   33e58:	ldr	r6, [fp]
   33e5c:	cmp	r6, r3
   33e60:	bgt	33e44 <GetDataSlab+0x12860>
   33e64:	ldr	r3, [sp, #192]	; 0xc0
   33e68:	ldr	r2, [r3]
   33e6c:	ldr	r3, [sp, #196]	; 0xc4
   33e70:	ldr	r3, [r3]
   33e74:	sub	r3, r2, r3
   33e78:	add	lr, lr, r3
   33e7c:	add	ip, ip, r3, lsl #3
   33e80:	cmp	r9, #1
   33e84:	ble	33df4 <GetDataSlab+0x12810>
   33e88:	ldr	r3, [sp, #76]	; 0x4c
   33e8c:	add	r3, r3, #1
   33e90:	str	r3, [sp, #76]	; 0x4c
   33e94:	ldr	r1, [fp, #4]
   33e98:	sdiv	r2, r3, r1
   33e9c:	mls	r3, r1, r2, r3
   33ea0:	cmp	r3, #0
   33ea4:	bne	33ddc <GetDataSlab+0x127f8>
   33ea8:	add	r4, sp, #76	; 0x4c
   33eac:	add	r7, fp, #4
   33eb0:	add	r5, sp, #116	; 0x74
   33eb4:	ldr	r0, [sp, #28]
   33eb8:	b	33da0 <GetDataSlab+0x127bc>
   33ebc:	mov	r3, #0
   33ec0:	b	251fc <GetDataSlab+0x3c18>
   33ec4:	ldr	r3, [sp, #196]	; 0xc4
   33ec8:	ldr	r2, [r3, r0, lsl #2]
   33ecc:	cmp	r2, #0
   33ed0:	beq	33ee4 <GetDataSlab+0x12900>
   33ed4:	ldr	r3, [r5, #-4]
   33ed8:	mul	r3, r3, r2
   33edc:	add	ip, ip, r3, lsl #3
   33ee0:	add	lr, lr, r3
   33ee4:	add	r0, r0, #1
   33ee8:	cmp	r9, r0
   33eec:	beq	33f74 <GetDataSlab+0x12990>
   33ef0:	ldr	r3, [r4]
   33ef4:	add	r1, r3, #1
   33ef8:	str	r1, [r4]
   33efc:	ldr	r2, [r7, #4]!
   33f00:	sdiv	r3, r1, r2
   33f04:	mls	r3, r2, r3, r1
   33f08:	cmp	r3, #0
   33f0c:	bne	33f60 <GetDataSlab+0x1297c>
   33f10:	str	r8, [r4], #4
   33f14:	add	r5, r5, #4
   33f18:	ldr	r2, [r5]
   33f1c:	sdiv	r3, lr, r2
   33f20:	mls	r3, r2, r3, lr
   33f24:	cmp	r3, #0
   33f28:	beq	33ec4 <GetDataSlab+0x128e0>
   33f2c:	ldr	r1, [r5, #-4]
   33f30:	str	r1, [sp, #8]
   33f34:	ldr	r1, [sp, #196]	; 0xc4
   33f38:	ldr	r1, [r1, r0, lsl #2]
   33f3c:	str	r1, [sp, #12]
   33f40:	sub	r3, r2, r3
   33f44:	mov	r2, r1
   33f48:	ldr	r1, [sp, #8]
   33f4c:	mla	r3, r2, r1, r3
   33f50:	add	ip, ip, r3, lsl #3
   33f54:	add	lr, lr, r3
   33f58:	b	33ee4 <GetDataSlab+0x12900>
   33f5c:	mov	r0, #1
   33f60:	add	r3, sp, #152	; 0x98
   33f64:	add	r3, r3, r0, lsl #2
   33f68:	ldr	r3, [r3, #-120]	; 0xffffff88
   33f6c:	add	lr, lr, r3
   33f70:	add	ip, ip, r3, lsl #3
   33f74:	ldr	r3, [sp, #20]
   33f78:	add	r3, r3, r6
   33f7c:	str	r3, [sp, #20]
   33f80:	ldr	r2, [sp, #16]
   33f84:	cmp	r3, r2
   33f88:	bge	34048 <GetDataSlab+0x12a64>
   33f8c:	ldr	r3, [sp, #196]	; 0xc4
   33f90:	ldr	r3, [r3]
   33f94:	cmp	r3, #0
   33f98:	addne	ip, ip, r3, lsl #3
   33f9c:	addne	lr, lr, r3
   33fa0:	ldr	r6, [fp]
   33fa4:	cmp	r6, #0
   33fa8:	ble	33fe8 <GetDataSlab+0x12a04>
   33fac:	ldr	r3, [sp, #4]
   33fb0:	ldr	r2, [sp, #20]
   33fb4:	add	r2, r3, r2, lsl #1
   33fb8:	mov	r3, #0
   33fbc:	vldr	d7, [ip]
   33fc0:	vcvt.u32.f64	s15, d7
   33fc4:	vmov	r1, s15
   33fc8:	strh	r1, [r2], #2
   33fcc:	ldr	r1, [sl]
   33fd0:	add	ip, ip, r1, lsl #3
   33fd4:	add	lr, lr, r1
   33fd8:	add	r3, r3, #1
   33fdc:	ldr	r6, [fp]
   33fe0:	cmp	r6, r3
   33fe4:	bgt	33fbc <GetDataSlab+0x129d8>
   33fe8:	ldr	r3, [sp, #192]	; 0xc0
   33fec:	ldr	r2, [r3]
   33ff0:	ldr	r3, [sp, #196]	; 0xc4
   33ff4:	ldr	r3, [r3]
   33ff8:	sub	r3, r2, r3
   33ffc:	ldr	r2, [sl]
   34000:	mls	r3, r2, r6, r3
   34004:	add	lr, lr, r3
   34008:	add	ip, ip, r3, lsl #3
   3400c:	cmp	r9, #1
   34010:	ble	33f74 <GetDataSlab+0x12990>
   34014:	ldr	r3, [sp, #76]	; 0x4c
   34018:	add	r3, r3, #1
   3401c:	str	r3, [sp, #76]	; 0x4c
   34020:	ldr	r1, [fp, #4]
   34024:	sdiv	r2, r3, r1
   34028:	mls	r3, r1, r2, r3
   3402c:	cmp	r3, #0
   34030:	bne	33f5c <GetDataSlab+0x12978>
   34034:	add	r4, sp, #76	; 0x4c
   34038:	add	r7, fp, #4
   3403c:	add	r5, sp, #112	; 0x70
   34040:	mov	r0, #1
   34044:	b	33f10 <GetDataSlab+0x1292c>
   34048:	mov	r3, #0
   3404c:	b	251fc <GetDataSlab+0x3c18>
   34050:	ldr	r3, [sl]
   34054:	str	r3, [sp, #28]
   34058:	sub	r3, r3, #1
   3405c:	str	r3, [sp, #32]
   34060:	ldr	r3, [sp, #192]	; 0xc0
   34064:	ldr	r3, [r3]
   34068:	str	r3, [sp, #112]	; 0x70
   3406c:	ldr	r3, [fp]
   34070:	str	r3, [sp, #16]
   34074:	cmp	r9, #1
   34078:	ble	3409c <GetDataSlab+0x12ab8>
   3407c:	str	sl, [sp, #20]
   34080:	add	r8, sp, #36	; 0x24
   34084:	ldr	r5, [sp, #192]	; 0xc0
   34088:	add	r6, sp, #112	; 0x70
   3408c:	str	r5, [sp, #12]
   34090:	mov	r4, #1
   34094:	mov	lr, #0
   34098:	b	3ded8 <GetDataSlab+0x1c8f4>
   3409c:	mov	lr, #0
   340a0:	b	3df70 <GetDataSlab+0x1c98c>
   340a4:	ldr	r3, [sp, #16]
   340a8:	cmp	r3, #0
   340ac:	ble	3a4bc <GetDataSlab+0x18ed8>
   340b0:	mov	r3, #0
   340b4:	str	r3, [sp, #12]
   340b8:	mov	r8, r3
   340bc:	b	3417c <GetDataSlab+0x12b98>
   340c0:	ldr	r3, [sp, #196]	; 0xc4
   340c4:	ldr	r3, [r3, r0, lsl #2]
   340c8:	cmp	r3, #0
   340cc:	beq	340e0 <GetDataSlab+0x12afc>
   340d0:	ldr	r2, [r5, #-8]
   340d4:	mul	r3, r2, r3
   340d8:	add	ip, ip, r3, lsl #2
   340dc:	add	lr, lr, r3
   340e0:	add	r0, r0, #1
   340e4:	cmp	r9, r0
   340e8:	beq	34160 <GetDataSlab+0x12b7c>
   340ec:	ldr	r3, [r4]
   340f0:	add	r1, r3, #1
   340f4:	str	r1, [r4]
   340f8:	ldr	r2, [r7, #4]!
   340fc:	sdiv	r3, r1, r2
   34100:	mls	r3, r2, r3, r1
   34104:	cmp	r3, #0
   34108:	bne	3414c <GetDataSlab+0x12b68>
   3410c:	str	r8, [r4], #4
   34110:	ldr	r2, [r5], #4
   34114:	sdiv	r3, lr, r2
   34118:	mls	r3, r2, r3, lr
   3411c:	cmp	r3, #0
   34120:	beq	340c0 <GetDataSlab+0x12adc>
   34124:	ldr	r1, [r5, #-8]
   34128:	ldr	sl, [sp, #196]	; 0xc4
   3412c:	ldr	sl, [sl, r0, lsl #2]
   34130:	str	sl, [sp, #8]
   34134:	sub	r3, r2, r3
   34138:	mla	r3, sl, r1, r3
   3413c:	add	ip, ip, r3, lsl #2
   34140:	add	lr, lr, r3
   34144:	b	340e0 <GetDataSlab+0x12afc>
   34148:	ldr	r0, [sp, #28]
   3414c:	add	r3, sp, #152	; 0x98
   34150:	add	r3, r3, r0, lsl #2
   34154:	ldr	r3, [r3, #-120]	; 0xffffff88
   34158:	add	lr, lr, r3
   3415c:	add	ip, ip, r3, lsl #2
   34160:	ldr	r3, [sp, #12]
   34164:	add	r3, r3, r6
   34168:	str	r3, [sp, #12]
   3416c:	ldr	r3, [sp, #16]
   34170:	ldr	r2, [sp, #12]
   34174:	cmp	r2, r3
   34178:	bge	34228 <GetDataSlab+0x12c44>
   3417c:	ldr	r3, [sp, #196]	; 0xc4
   34180:	ldr	r3, [r3]
   34184:	cmp	r3, #0
   34188:	addne	ip, ip, r3, lsl #2
   3418c:	addne	lr, lr, r3
   34190:	ldr	r6, [fp]
   34194:	cmp	r6, #0
   34198:	ble	341d0 <GetDataSlab+0x12bec>
   3419c:	mov	r1, ip
   341a0:	ldr	r3, [sp, #4]
   341a4:	ldr	r2, [sp, #12]
   341a8:	add	r2, r3, r2, lsl #1
   341ac:	mov	r3, #0
   341b0:	vldmia	r1!, {s15}
   341b4:	vcvt.u32.f32	s15, s15
   341b8:	vmov	r0, s15
   341bc:	strh	r0, [r2], #2
   341c0:	add	r3, r3, #1
   341c4:	ldr	r6, [fp]
   341c8:	cmp	r6, r3
   341cc:	bgt	341b0 <GetDataSlab+0x12bcc>
   341d0:	ldr	r3, [sp, #192]	; 0xc0
   341d4:	ldr	r2, [r3]
   341d8:	ldr	r3, [sp, #196]	; 0xc4
   341dc:	ldr	r3, [r3]
   341e0:	sub	r3, r2, r3
   341e4:	add	lr, lr, r3
   341e8:	add	ip, ip, r3, lsl #2
   341ec:	cmp	r9, #1
   341f0:	ble	34160 <GetDataSlab+0x12b7c>
   341f4:	ldr	r3, [sp, #76]	; 0x4c
   341f8:	add	r3, r3, #1
   341fc:	str	r3, [sp, #76]	; 0x4c
   34200:	ldr	r1, [fp, #4]
   34204:	sdiv	r2, r3, r1
   34208:	mls	r3, r1, r2, r3
   3420c:	cmp	r3, #0
   34210:	bne	34148 <GetDataSlab+0x12b64>
   34214:	add	r4, sp, #76	; 0x4c
   34218:	add	r7, fp, #4
   3421c:	add	r5, sp, #116	; 0x74
   34220:	ldr	r0, [sp, #28]
   34224:	b	3410c <GetDataSlab+0x12b28>
   34228:	mov	r3, #0
   3422c:	b	251fc <GetDataSlab+0x3c18>
   34230:	ldr	r3, [sp, #196]	; 0xc4
   34234:	ldr	r2, [r3, r0, lsl #2]
   34238:	cmp	r2, #0
   3423c:	beq	34250 <GetDataSlab+0x12c6c>
   34240:	ldr	r3, [r5, #-4]
   34244:	mul	r3, r3, r2
   34248:	add	ip, ip, r3, lsl #2
   3424c:	add	lr, lr, r3
   34250:	add	r0, r0, #1
   34254:	cmp	r9, r0
   34258:	beq	342e0 <GetDataSlab+0x12cfc>
   3425c:	ldr	r3, [r4]
   34260:	add	r1, r3, #1
   34264:	str	r1, [r4]
   34268:	ldr	r2, [r7, #4]!
   3426c:	sdiv	r3, r1, r2
   34270:	mls	r3, r2, r3, r1
   34274:	cmp	r3, #0
   34278:	bne	342cc <GetDataSlab+0x12ce8>
   3427c:	str	r8, [r4], #4
   34280:	add	r5, r5, #4
   34284:	ldr	r2, [r5]
   34288:	sdiv	r3, lr, r2
   3428c:	mls	r3, r2, r3, lr
   34290:	cmp	r3, #0
   34294:	beq	34230 <GetDataSlab+0x12c4c>
   34298:	ldr	r1, [r5, #-4]
   3429c:	str	r1, [sp, #8]
   342a0:	ldr	r1, [sp, #196]	; 0xc4
   342a4:	ldr	r1, [r1, r0, lsl #2]
   342a8:	str	r1, [sp, #12]
   342ac:	sub	r3, r2, r3
   342b0:	mov	r2, r1
   342b4:	ldr	r1, [sp, #8]
   342b8:	mla	r3, r2, r1, r3
   342bc:	add	ip, ip, r3, lsl #2
   342c0:	add	lr, lr, r3
   342c4:	b	34250 <GetDataSlab+0x12c6c>
   342c8:	mov	r0, #1
   342cc:	add	r3, sp, #152	; 0x98
   342d0:	add	r3, r3, r0, lsl #2
   342d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   342d8:	add	lr, lr, r3
   342dc:	add	ip, ip, r3, lsl #2
   342e0:	ldr	r3, [sp, #20]
   342e4:	add	r3, r3, r6
   342e8:	str	r3, [sp, #20]
   342ec:	ldr	r2, [sp, #16]
   342f0:	cmp	r3, r2
   342f4:	bge	343b4 <GetDataSlab+0x12dd0>
   342f8:	ldr	r3, [sp, #196]	; 0xc4
   342fc:	ldr	r3, [r3]
   34300:	cmp	r3, #0
   34304:	addne	ip, ip, r3, lsl #2
   34308:	addne	lr, lr, r3
   3430c:	ldr	r6, [fp]
   34310:	cmp	r6, #0
   34314:	ble	34354 <GetDataSlab+0x12d70>
   34318:	ldr	r3, [sp, #4]
   3431c:	ldr	r2, [sp, #20]
   34320:	add	r2, r3, r2, lsl #1
   34324:	mov	r3, #0
   34328:	vldr	s15, [ip]
   3432c:	vcvt.u32.f32	s15, s15
   34330:	vmov	r1, s15
   34334:	strh	r1, [r2], #2
   34338:	ldr	r1, [sl]
   3433c:	add	ip, ip, r1, lsl #2
   34340:	add	lr, lr, r1
   34344:	add	r3, r3, #1
   34348:	ldr	r6, [fp]
   3434c:	cmp	r6, r3
   34350:	bgt	34328 <GetDataSlab+0x12d44>
   34354:	ldr	r3, [sp, #192]	; 0xc0
   34358:	ldr	r2, [r3]
   3435c:	ldr	r3, [sp, #196]	; 0xc4
   34360:	ldr	r3, [r3]
   34364:	sub	r3, r2, r3
   34368:	ldr	r2, [sl]
   3436c:	mls	r3, r2, r6, r3
   34370:	add	lr, lr, r3
   34374:	add	ip, ip, r3, lsl #2
   34378:	cmp	r9, #1
   3437c:	ble	342e0 <GetDataSlab+0x12cfc>
   34380:	ldr	r3, [sp, #76]	; 0x4c
   34384:	add	r3, r3, #1
   34388:	str	r3, [sp, #76]	; 0x4c
   3438c:	ldr	r1, [fp, #4]
   34390:	sdiv	r2, r3, r1
   34394:	mls	r3, r1, r2, r3
   34398:	cmp	r3, #0
   3439c:	bne	342c8 <GetDataSlab+0x12ce4>
   343a0:	add	r4, sp, #76	; 0x4c
   343a4:	add	r7, fp, #4
   343a8:	add	r5, sp, #112	; 0x70
   343ac:	mov	r0, #1
   343b0:	b	3427c <GetDataSlab+0x12c98>
   343b4:	mov	r3, #0
   343b8:	b	251fc <GetDataSlab+0x3c18>
   343bc:	ldr	r3, [sl]
   343c0:	str	r3, [sp, #28]
   343c4:	sub	r3, r3, #1
   343c8:	str	r3, [sp, #32]
   343cc:	ldr	r3, [sp, #192]	; 0xc0
   343d0:	ldr	r3, [r3]
   343d4:	str	r3, [sp, #112]	; 0x70
   343d8:	ldr	r3, [fp]
   343dc:	str	r3, [sp, #16]
   343e0:	cmp	r9, #1
   343e4:	ble	34408 <GetDataSlab+0x12e24>
   343e8:	str	sl, [sp, #20]
   343ec:	add	r8, sp, #36	; 0x24
   343f0:	ldr	r5, [sp, #192]	; 0xc0
   343f4:	add	r6, sp, #112	; 0x70
   343f8:	str	r5, [sp, #12]
   343fc:	mov	r4, #1
   34400:	mov	lr, #0
   34404:	b	3dcf8 <GetDataSlab+0x1c714>
   34408:	mov	lr, #0
   3440c:	b	3dd90 <GetDataSlab+0x1c7ac>
   34410:	ldr	r3, [sp, #16]
   34414:	cmp	r3, #0
   34418:	ble	3a4c4 <GetDataSlab+0x18ee0>
   3441c:	mov	r3, #0
   34420:	str	r3, [sp, #12]
   34424:	mov	r8, r3
   34428:	b	344e8 <GetDataSlab+0x12f04>
   3442c:	ldr	r3, [sp, #196]	; 0xc4
   34430:	ldr	r3, [r3, r0, lsl #2]
   34434:	cmp	r3, #0
   34438:	beq	3444c <GetDataSlab+0x12e68>
   3443c:	ldr	r2, [r5, #-8]
   34440:	mul	r3, r2, r3
   34444:	add	ip, ip, r3, lsl #2
   34448:	add	lr, lr, r3
   3444c:	add	r0, r0, #1
   34450:	cmp	r9, r0
   34454:	beq	344cc <GetDataSlab+0x12ee8>
   34458:	ldr	r3, [r4]
   3445c:	add	r1, r3, #1
   34460:	str	r1, [r4]
   34464:	ldr	r2, [r7, #4]!
   34468:	sdiv	r3, r1, r2
   3446c:	mls	r3, r2, r3, r1
   34470:	cmp	r3, #0
   34474:	bne	344b8 <GetDataSlab+0x12ed4>
   34478:	str	r8, [r4], #4
   3447c:	ldr	r2, [r5], #4
   34480:	sdiv	r3, lr, r2
   34484:	mls	r3, r2, r3, lr
   34488:	cmp	r3, #0
   3448c:	beq	3442c <GetDataSlab+0x12e48>
   34490:	ldr	r1, [r5, #-8]
   34494:	ldr	sl, [sp, #196]	; 0xc4
   34498:	ldr	sl, [sl, r0, lsl #2]
   3449c:	str	sl, [sp, #8]
   344a0:	sub	r3, r2, r3
   344a4:	mla	r3, sl, r1, r3
   344a8:	add	ip, ip, r3, lsl #2
   344ac:	add	lr, lr, r3
   344b0:	b	3444c <GetDataSlab+0x12e68>
   344b4:	ldr	r0, [sp, #28]
   344b8:	add	r3, sp, #152	; 0x98
   344bc:	add	r3, r3, r0, lsl #2
   344c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   344c4:	add	lr, lr, r3
   344c8:	add	ip, ip, r3, lsl #2
   344cc:	ldr	r3, [sp, #12]
   344d0:	add	r3, r3, r6
   344d4:	str	r3, [sp, #12]
   344d8:	ldr	r3, [sp, #16]
   344dc:	ldr	r2, [sp, #12]
   344e0:	cmp	r2, r3
   344e4:	bge	3458c <GetDataSlab+0x12fa8>
   344e8:	ldr	r3, [sp, #196]	; 0xc4
   344ec:	ldr	r3, [r3]
   344f0:	cmp	r3, #0
   344f4:	addne	ip, ip, r3, lsl #2
   344f8:	addne	lr, lr, r3
   344fc:	ldr	r6, [fp]
   34500:	cmp	r6, #0
   34504:	ble	34534 <GetDataSlab+0x12f50>
   34508:	sub	r0, ip, #4
   3450c:	ldr	r3, [sp, #4]
   34510:	ldr	r2, [sp, #12]
   34514:	add	r1, r3, r2, lsl #1
   34518:	mov	r2, #0
   3451c:	ldr	r3, [r0, #4]!
   34520:	strh	r3, [r1], #2
   34524:	add	r2, r2, #1
   34528:	ldr	r6, [fp]
   3452c:	cmp	r6, r2
   34530:	bgt	3451c <GetDataSlab+0x12f38>
   34534:	ldr	r3, [sp, #192]	; 0xc0
   34538:	ldr	r2, [r3]
   3453c:	ldr	r3, [sp, #196]	; 0xc4
   34540:	ldr	r3, [r3]
   34544:	sub	r3, r2, r3
   34548:	add	lr, lr, r3
   3454c:	add	ip, ip, r3, lsl #2
   34550:	cmp	r9, #1
   34554:	ble	344cc <GetDataSlab+0x12ee8>
   34558:	ldr	r3, [sp, #76]	; 0x4c
   3455c:	add	r3, r3, #1
   34560:	str	r3, [sp, #76]	; 0x4c
   34564:	ldr	r1, [fp, #4]
   34568:	sdiv	r2, r3, r1
   3456c:	mls	r3, r1, r2, r3
   34570:	cmp	r3, #0
   34574:	bne	344b4 <GetDataSlab+0x12ed0>
   34578:	add	r4, sp, #76	; 0x4c
   3457c:	add	r7, fp, #4
   34580:	add	r5, sp, #116	; 0x74
   34584:	ldr	r0, [sp, #28]
   34588:	b	34478 <GetDataSlab+0x12e94>
   3458c:	mov	r3, #0
   34590:	b	251fc <GetDataSlab+0x3c18>
   34594:	ldr	r3, [sp, #196]	; 0xc4
   34598:	ldr	r2, [r3, r0, lsl #2]
   3459c:	cmp	r2, #0
   345a0:	beq	345b4 <GetDataSlab+0x12fd0>
   345a4:	ldr	r3, [r5, #-4]
   345a8:	mul	r3, r3, r2
   345ac:	add	ip, ip, r3, lsl #2
   345b0:	add	lr, lr, r3
   345b4:	add	r0, r0, #1
   345b8:	cmp	r9, r0
   345bc:	beq	34644 <GetDataSlab+0x13060>
   345c0:	ldr	r3, [r4]
   345c4:	add	r1, r3, #1
   345c8:	str	r1, [r4]
   345cc:	ldr	r2, [r7, #4]!
   345d0:	sdiv	r3, r1, r2
   345d4:	mls	r3, r2, r3, r1
   345d8:	cmp	r3, #0
   345dc:	bne	34630 <GetDataSlab+0x1304c>
   345e0:	str	r8, [r4], #4
   345e4:	add	r5, r5, #4
   345e8:	ldr	r2, [r5]
   345ec:	sdiv	r3, lr, r2
   345f0:	mls	r3, r2, r3, lr
   345f4:	cmp	r3, #0
   345f8:	beq	34594 <GetDataSlab+0x12fb0>
   345fc:	ldr	r1, [r5, #-4]
   34600:	str	r1, [sp, #8]
   34604:	ldr	r1, [sp, #196]	; 0xc4
   34608:	ldr	r1, [r1, r0, lsl #2]
   3460c:	str	r1, [sp, #12]
   34610:	sub	r3, r2, r3
   34614:	mov	r2, r1
   34618:	ldr	r1, [sp, #8]
   3461c:	mla	r3, r2, r1, r3
   34620:	add	ip, ip, r3, lsl #2
   34624:	add	lr, lr, r3
   34628:	b	345b4 <GetDataSlab+0x12fd0>
   3462c:	mov	r0, #1
   34630:	add	r3, sp, #152	; 0x98
   34634:	add	r3, r3, r0, lsl #2
   34638:	ldr	r3, [r3, #-120]	; 0xffffff88
   3463c:	add	lr, lr, r3
   34640:	add	ip, ip, r3, lsl #2
   34644:	ldr	r3, [sp, #20]
   34648:	add	r3, r3, r6
   3464c:	str	r3, [sp, #20]
   34650:	ldr	r2, [sp, #16]
   34654:	cmp	r3, r2
   34658:	bge	34710 <GetDataSlab+0x1312c>
   3465c:	ldr	r3, [sp, #196]	; 0xc4
   34660:	ldr	r3, [r3]
   34664:	cmp	r3, #0
   34668:	addne	ip, ip, r3, lsl #2
   3466c:	addne	lr, lr, r3
   34670:	ldr	r6, [fp]
   34674:	cmp	r6, #0
   34678:	ble	346b0 <GetDataSlab+0x130cc>
   3467c:	ldr	r3, [sp, #4]
   34680:	ldr	r2, [sp, #20]
   34684:	add	r2, r3, r2, lsl #1
   34688:	mov	r3, #0
   3468c:	ldr	r1, [ip]
   34690:	strh	r1, [r2], #2
   34694:	ldr	r1, [sl]
   34698:	add	ip, ip, r1, lsl #2
   3469c:	add	lr, lr, r1
   346a0:	add	r3, r3, #1
   346a4:	ldr	r6, [fp]
   346a8:	cmp	r6, r3
   346ac:	bgt	3468c <GetDataSlab+0x130a8>
   346b0:	ldr	r3, [sp, #192]	; 0xc0
   346b4:	ldr	r2, [r3]
   346b8:	ldr	r3, [sp, #196]	; 0xc4
   346bc:	ldr	r3, [r3]
   346c0:	sub	r3, r2, r3
   346c4:	ldr	r2, [sl]
   346c8:	mls	r3, r2, r6, r3
   346cc:	add	lr, lr, r3
   346d0:	add	ip, ip, r3, lsl #2
   346d4:	cmp	r9, #1
   346d8:	ble	34644 <GetDataSlab+0x13060>
   346dc:	ldr	r3, [sp, #76]	; 0x4c
   346e0:	add	r3, r3, #1
   346e4:	str	r3, [sp, #76]	; 0x4c
   346e8:	ldr	r1, [fp, #4]
   346ec:	sdiv	r2, r3, r1
   346f0:	mls	r3, r1, r2, r3
   346f4:	cmp	r3, #0
   346f8:	bne	3462c <GetDataSlab+0x13048>
   346fc:	add	r4, sp, #76	; 0x4c
   34700:	add	r7, fp, #4
   34704:	add	r5, sp, #112	; 0x70
   34708:	mov	r0, #1
   3470c:	b	345e0 <GetDataSlab+0x12ffc>
   34710:	mov	r3, #0
   34714:	b	251fc <GetDataSlab+0x3c18>
   34718:	ldr	r3, [sl]
   3471c:	str	r3, [sp, #28]
   34720:	sub	r3, r3, #1
   34724:	str	r3, [sp, #32]
   34728:	ldr	r3, [sp, #192]	; 0xc0
   3472c:	ldr	r3, [r3]
   34730:	str	r3, [sp, #112]	; 0x70
   34734:	ldr	r3, [fp]
   34738:	str	r3, [sp, #16]
   3473c:	cmp	r9, #1
   34740:	ble	34764 <GetDataSlab+0x13180>
   34744:	str	sl, [sp, #20]
   34748:	add	r8, sp, #36	; 0x24
   3474c:	ldr	r5, [sp, #192]	; 0xc0
   34750:	add	r6, sp, #112	; 0x70
   34754:	str	r5, [sp, #12]
   34758:	mov	r4, #1
   3475c:	mov	lr, #0
   34760:	b	3dde8 <GetDataSlab+0x1c804>
   34764:	mov	lr, #0
   34768:	b	3de80 <GetDataSlab+0x1c89c>
   3476c:	ldr	r3, [sp, #16]
   34770:	cmp	r3, #0
   34774:	ble	3a4cc <GetDataSlab+0x18ee8>
   34778:	mov	r3, #0
   3477c:	str	r3, [sp, #12]
   34780:	mov	r8, r3
   34784:	b	34844 <GetDataSlab+0x13260>
   34788:	ldr	r3, [sp, #196]	; 0xc4
   3478c:	ldr	r3, [r3, r0, lsl #2]
   34790:	cmp	r3, #0
   34794:	beq	347a8 <GetDataSlab+0x131c4>
   34798:	ldr	r2, [r5, #-8]
   3479c:	mul	r3, r2, r3
   347a0:	add	ip, ip, r3, lsl #2
   347a4:	add	lr, lr, r3
   347a8:	add	r0, r0, #1
   347ac:	cmp	r9, r0
   347b0:	beq	34828 <GetDataSlab+0x13244>
   347b4:	ldr	r3, [r4]
   347b8:	add	r1, r3, #1
   347bc:	str	r1, [r4]
   347c0:	ldr	r2, [r7, #4]!
   347c4:	sdiv	r3, r1, r2
   347c8:	mls	r3, r2, r3, r1
   347cc:	cmp	r3, #0
   347d0:	bne	34814 <GetDataSlab+0x13230>
   347d4:	str	r8, [r4], #4
   347d8:	ldr	r2, [r5], #4
   347dc:	sdiv	r3, lr, r2
   347e0:	mls	r3, r2, r3, lr
   347e4:	cmp	r3, #0
   347e8:	beq	34788 <GetDataSlab+0x131a4>
   347ec:	ldr	r1, [r5, #-8]
   347f0:	ldr	sl, [sp, #196]	; 0xc4
   347f4:	ldr	sl, [sl, r0, lsl #2]
   347f8:	str	sl, [sp, #8]
   347fc:	sub	r3, r2, r3
   34800:	mla	r3, sl, r1, r3
   34804:	add	ip, ip, r3, lsl #2
   34808:	add	lr, lr, r3
   3480c:	b	347a8 <GetDataSlab+0x131c4>
   34810:	ldr	r0, [sp, #28]
   34814:	add	r3, sp, #152	; 0x98
   34818:	add	r3, r3, r0, lsl #2
   3481c:	ldr	r3, [r3, #-120]	; 0xffffff88
   34820:	add	lr, lr, r3
   34824:	add	ip, ip, r3, lsl #2
   34828:	ldr	r3, [sp, #12]
   3482c:	add	r3, r3, r6
   34830:	str	r3, [sp, #12]
   34834:	ldr	r3, [sp, #16]
   34838:	ldr	r2, [sp, #12]
   3483c:	cmp	r2, r3
   34840:	bge	348e8 <GetDataSlab+0x13304>
   34844:	ldr	r3, [sp, #196]	; 0xc4
   34848:	ldr	r3, [r3]
   3484c:	cmp	r3, #0
   34850:	addne	ip, ip, r3, lsl #2
   34854:	addne	lr, lr, r3
   34858:	ldr	r6, [fp]
   3485c:	cmp	r6, #0
   34860:	ble	34890 <GetDataSlab+0x132ac>
   34864:	sub	r0, ip, #4
   34868:	ldr	r3, [sp, #4]
   3486c:	ldr	r2, [sp, #12]
   34870:	add	r1, r3, r2, lsl #1
   34874:	mov	r2, #0
   34878:	ldr	r3, [r0, #4]!
   3487c:	strh	r3, [r1], #2
   34880:	add	r2, r2, #1
   34884:	ldr	r6, [fp]
   34888:	cmp	r6, r2
   3488c:	bgt	34878 <GetDataSlab+0x13294>
   34890:	ldr	r3, [sp, #192]	; 0xc0
   34894:	ldr	r2, [r3]
   34898:	ldr	r3, [sp, #196]	; 0xc4
   3489c:	ldr	r3, [r3]
   348a0:	sub	r3, r2, r3
   348a4:	add	lr, lr, r3
   348a8:	add	ip, ip, r3, lsl #2
   348ac:	cmp	r9, #1
   348b0:	ble	34828 <GetDataSlab+0x13244>
   348b4:	ldr	r3, [sp, #76]	; 0x4c
   348b8:	add	r3, r3, #1
   348bc:	str	r3, [sp, #76]	; 0x4c
   348c0:	ldr	r1, [fp, #4]
   348c4:	sdiv	r2, r3, r1
   348c8:	mls	r3, r1, r2, r3
   348cc:	cmp	r3, #0
   348d0:	bne	34810 <GetDataSlab+0x1322c>
   348d4:	add	r4, sp, #76	; 0x4c
   348d8:	add	r7, fp, #4
   348dc:	add	r5, sp, #116	; 0x74
   348e0:	ldr	r0, [sp, #28]
   348e4:	b	347d4 <GetDataSlab+0x131f0>
   348e8:	mov	r3, #0
   348ec:	b	251fc <GetDataSlab+0x3c18>
   348f0:	ldr	r3, [sp, #196]	; 0xc4
   348f4:	ldr	r2, [r3, r0, lsl #2]
   348f8:	cmp	r2, #0
   348fc:	beq	34910 <GetDataSlab+0x1332c>
   34900:	ldr	r3, [r5, #-4]
   34904:	mul	r3, r3, r2
   34908:	add	ip, ip, r3, lsl #2
   3490c:	add	lr, lr, r3
   34910:	add	r0, r0, #1
   34914:	cmp	r9, r0
   34918:	beq	349a0 <GetDataSlab+0x133bc>
   3491c:	ldr	r3, [r4]
   34920:	add	r1, r3, #1
   34924:	str	r1, [r4]
   34928:	ldr	r2, [r7, #4]!
   3492c:	sdiv	r3, r1, r2
   34930:	mls	r3, r2, r3, r1
   34934:	cmp	r3, #0
   34938:	bne	3498c <GetDataSlab+0x133a8>
   3493c:	str	r8, [r4], #4
   34940:	add	r5, r5, #4
   34944:	ldr	r2, [r5]
   34948:	sdiv	r3, lr, r2
   3494c:	mls	r3, r2, r3, lr
   34950:	cmp	r3, #0
   34954:	beq	348f0 <GetDataSlab+0x1330c>
   34958:	ldr	r1, [r5, #-4]
   3495c:	str	r1, [sp, #8]
   34960:	ldr	r1, [sp, #196]	; 0xc4
   34964:	ldr	r1, [r1, r0, lsl #2]
   34968:	str	r1, [sp, #12]
   3496c:	sub	r3, r2, r3
   34970:	mov	r2, r1
   34974:	ldr	r1, [sp, #8]
   34978:	mla	r3, r2, r1, r3
   3497c:	add	ip, ip, r3, lsl #2
   34980:	add	lr, lr, r3
   34984:	b	34910 <GetDataSlab+0x1332c>
   34988:	mov	r0, #1
   3498c:	add	r3, sp, #152	; 0x98
   34990:	add	r3, r3, r0, lsl #2
   34994:	ldr	r3, [r3, #-120]	; 0xffffff88
   34998:	add	lr, lr, r3
   3499c:	add	ip, ip, r3, lsl #2
   349a0:	ldr	r3, [sp, #20]
   349a4:	add	r3, r3, r6
   349a8:	str	r3, [sp, #20]
   349ac:	ldr	r2, [sp, #16]
   349b0:	cmp	r3, r2
   349b4:	bge	34a6c <GetDataSlab+0x13488>
   349b8:	ldr	r3, [sp, #196]	; 0xc4
   349bc:	ldr	r3, [r3]
   349c0:	cmp	r3, #0
   349c4:	addne	ip, ip, r3, lsl #2
   349c8:	addne	lr, lr, r3
   349cc:	ldr	r6, [fp]
   349d0:	cmp	r6, #0
   349d4:	ble	34a0c <GetDataSlab+0x13428>
   349d8:	ldr	r3, [sp, #4]
   349dc:	ldr	r2, [sp, #20]
   349e0:	add	r2, r3, r2, lsl #1
   349e4:	mov	r3, #0
   349e8:	ldr	r1, [ip]
   349ec:	strh	r1, [r2], #2
   349f0:	ldr	r1, [sl]
   349f4:	add	ip, ip, r1, lsl #2
   349f8:	add	lr, lr, r1
   349fc:	add	r3, r3, #1
   34a00:	ldr	r6, [fp]
   34a04:	cmp	r6, r3
   34a08:	bgt	349e8 <GetDataSlab+0x13404>
   34a0c:	ldr	r3, [sp, #192]	; 0xc0
   34a10:	ldr	r2, [r3]
   34a14:	ldr	r3, [sp, #196]	; 0xc4
   34a18:	ldr	r3, [r3]
   34a1c:	sub	r3, r2, r3
   34a20:	ldr	r2, [sl]
   34a24:	mls	r3, r2, r6, r3
   34a28:	add	lr, lr, r3
   34a2c:	add	ip, ip, r3, lsl #2
   34a30:	cmp	r9, #1
   34a34:	ble	349a0 <GetDataSlab+0x133bc>
   34a38:	ldr	r3, [sp, #76]	; 0x4c
   34a3c:	add	r3, r3, #1
   34a40:	str	r3, [sp, #76]	; 0x4c
   34a44:	ldr	r1, [fp, #4]
   34a48:	sdiv	r2, r3, r1
   34a4c:	mls	r3, r1, r2, r3
   34a50:	cmp	r3, #0
   34a54:	bne	34988 <GetDataSlab+0x133a4>
   34a58:	add	r4, sp, #76	; 0x4c
   34a5c:	add	r7, fp, #4
   34a60:	add	r5, sp, #112	; 0x70
   34a64:	mov	r0, #1
   34a68:	b	3493c <GetDataSlab+0x13358>
   34a6c:	mov	r3, #0
   34a70:	b	251fc <GetDataSlab+0x3c18>
   34a74:	ldr	r3, [sl]
   34a78:	str	r3, [sp, #28]
   34a7c:	sub	r3, r3, #1
   34a80:	str	r3, [sp, #32]
   34a84:	ldr	r3, [sp, #192]	; 0xc0
   34a88:	ldr	r3, [r3]
   34a8c:	str	r3, [sp, #112]	; 0x70
   34a90:	ldr	r3, [fp]
   34a94:	str	r3, [sp, #16]
   34a98:	cmp	r9, #1
   34a9c:	ble	34ac0 <GetDataSlab+0x134dc>
   34aa0:	str	sl, [sp, #20]
   34aa4:	add	r8, sp, #36	; 0x24
   34aa8:	ldr	r5, [sp, #192]	; 0xc0
   34aac:	add	r6, sp, #112	; 0x70
   34ab0:	str	r5, [sp, #12]
   34ab4:	mov	r4, #1
   34ab8:	mov	lr, #0
   34abc:	b	3db18 <GetDataSlab+0x1c534>
   34ac0:	mov	lr, #0
   34ac4:	b	3dbb0 <GetDataSlab+0x1c5cc>
   34ac8:	ldr	r3, [sp, #16]
   34acc:	cmp	r3, #0
   34ad0:	ble	3a4d4 <GetDataSlab+0x18ef0>
   34ad4:	mov	r3, #0
   34ad8:	str	r3, [sp, #12]
   34adc:	mov	r8, r3
   34ae0:	b	34ba0 <GetDataSlab+0x135bc>
   34ae4:	ldr	r3, [sp, #196]	; 0xc4
   34ae8:	ldr	r3, [r3, r0, lsl #2]
   34aec:	cmp	r3, #0
   34af0:	beq	34b04 <GetDataSlab+0x13520>
   34af4:	ldr	r2, [r5, #-8]
   34af8:	mul	r3, r2, r3
   34afc:	add	ip, ip, r3, lsl #1
   34b00:	add	lr, lr, r3
   34b04:	add	r0, r0, #1
   34b08:	cmp	r9, r0
   34b0c:	beq	34b84 <GetDataSlab+0x135a0>
   34b10:	ldr	r3, [r4]
   34b14:	add	r1, r3, #1
   34b18:	str	r1, [r4]
   34b1c:	ldr	r2, [r7, #4]!
   34b20:	sdiv	r3, r1, r2
   34b24:	mls	r3, r2, r3, r1
   34b28:	cmp	r3, #0
   34b2c:	bne	34b70 <GetDataSlab+0x1358c>
   34b30:	str	r8, [r4], #4
   34b34:	ldr	r2, [r5], #4
   34b38:	sdiv	r3, lr, r2
   34b3c:	mls	r3, r2, r3, lr
   34b40:	cmp	r3, #0
   34b44:	beq	34ae4 <GetDataSlab+0x13500>
   34b48:	ldr	r1, [r5, #-8]
   34b4c:	ldr	sl, [sp, #196]	; 0xc4
   34b50:	ldr	sl, [sl, r0, lsl #2]
   34b54:	str	sl, [sp, #8]
   34b58:	sub	r3, r2, r3
   34b5c:	mla	r3, sl, r1, r3
   34b60:	add	ip, ip, r3, lsl #1
   34b64:	add	lr, lr, r3
   34b68:	b	34b04 <GetDataSlab+0x13520>
   34b6c:	ldr	r0, [sp, #28]
   34b70:	add	r3, sp, #152	; 0x98
   34b74:	add	r3, r3, r0, lsl #2
   34b78:	ldr	r3, [r3, #-120]	; 0xffffff88
   34b7c:	add	lr, lr, r3
   34b80:	add	ip, ip, r3, lsl #1
   34b84:	ldr	r3, [sp, #12]
   34b88:	add	r3, r3, r6
   34b8c:	str	r3, [sp, #12]
   34b90:	ldr	r3, [sp, #16]
   34b94:	ldr	r2, [sp, #12]
   34b98:	cmp	r2, r3
   34b9c:	bge	34c44 <GetDataSlab+0x13660>
   34ba0:	ldr	r3, [sp, #196]	; 0xc4
   34ba4:	ldr	r3, [r3]
   34ba8:	cmp	r3, #0
   34bac:	addne	ip, ip, r3, lsl #1
   34bb0:	addne	lr, lr, r3
   34bb4:	ldr	r6, [fp]
   34bb8:	cmp	r6, #0
   34bbc:	ble	34bec <GetDataSlab+0x13608>
   34bc0:	sub	r0, ip, #2
   34bc4:	ldr	r3, [sp, #4]
   34bc8:	ldr	r2, [sp, #12]
   34bcc:	add	r1, r3, r2, lsl #1
   34bd0:	mov	r2, #0
   34bd4:	ldrh	r3, [r0, #2]!
   34bd8:	strh	r3, [r1], #2
   34bdc:	add	r2, r2, #1
   34be0:	ldr	r6, [fp]
   34be4:	cmp	r6, r2
   34be8:	bgt	34bd4 <GetDataSlab+0x135f0>
   34bec:	ldr	r3, [sp, #192]	; 0xc0
   34bf0:	ldr	r2, [r3]
   34bf4:	ldr	r3, [sp, #196]	; 0xc4
   34bf8:	ldr	r3, [r3]
   34bfc:	sub	r3, r2, r3
   34c00:	add	lr, lr, r3
   34c04:	add	ip, ip, r3, lsl #1
   34c08:	cmp	r9, #1
   34c0c:	ble	34b84 <GetDataSlab+0x135a0>
   34c10:	ldr	r3, [sp, #76]	; 0x4c
   34c14:	add	r3, r3, #1
   34c18:	str	r3, [sp, #76]	; 0x4c
   34c1c:	ldr	r1, [fp, #4]
   34c20:	sdiv	r2, r3, r1
   34c24:	mls	r3, r1, r2, r3
   34c28:	cmp	r3, #0
   34c2c:	bne	34b6c <GetDataSlab+0x13588>
   34c30:	add	r4, sp, #76	; 0x4c
   34c34:	add	r7, fp, #4
   34c38:	add	r5, sp, #116	; 0x74
   34c3c:	ldr	r0, [sp, #28]
   34c40:	b	34b30 <GetDataSlab+0x1354c>
   34c44:	mov	r3, #0
   34c48:	b	251fc <GetDataSlab+0x3c18>
   34c4c:	ldr	r3, [sp, #196]	; 0xc4
   34c50:	ldr	r2, [r3, r0, lsl #2]
   34c54:	cmp	r2, #0
   34c58:	beq	34c6c <GetDataSlab+0x13688>
   34c5c:	ldr	r3, [r5, #-4]
   34c60:	mul	r3, r3, r2
   34c64:	add	ip, ip, r3, lsl #1
   34c68:	add	lr, lr, r3
   34c6c:	add	r0, r0, #1
   34c70:	cmp	r9, r0
   34c74:	beq	34cfc <GetDataSlab+0x13718>
   34c78:	ldr	r3, [r4]
   34c7c:	add	r1, r3, #1
   34c80:	str	r1, [r4]
   34c84:	ldr	r2, [r7, #4]!
   34c88:	sdiv	r3, r1, r2
   34c8c:	mls	r3, r2, r3, r1
   34c90:	cmp	r3, #0
   34c94:	bne	34ce8 <GetDataSlab+0x13704>
   34c98:	str	r8, [r4], #4
   34c9c:	add	r5, r5, #4
   34ca0:	ldr	r2, [r5]
   34ca4:	sdiv	r3, lr, r2
   34ca8:	mls	r3, r2, r3, lr
   34cac:	cmp	r3, #0
   34cb0:	beq	34c4c <GetDataSlab+0x13668>
   34cb4:	ldr	r1, [r5, #-4]
   34cb8:	str	r1, [sp, #8]
   34cbc:	ldr	r1, [sp, #196]	; 0xc4
   34cc0:	ldr	r1, [r1, r0, lsl #2]
   34cc4:	str	r1, [sp, #12]
   34cc8:	sub	r3, r2, r3
   34ccc:	mov	r2, r1
   34cd0:	ldr	r1, [sp, #8]
   34cd4:	mla	r3, r2, r1, r3
   34cd8:	add	ip, ip, r3, lsl #1
   34cdc:	add	lr, lr, r3
   34ce0:	b	34c6c <GetDataSlab+0x13688>
   34ce4:	mov	r0, #1
   34ce8:	add	r3, sp, #152	; 0x98
   34cec:	add	r3, r3, r0, lsl #2
   34cf0:	ldr	r3, [r3, #-120]	; 0xffffff88
   34cf4:	add	lr, lr, r3
   34cf8:	add	ip, ip, r3, lsl #1
   34cfc:	ldr	r3, [sp, #20]
   34d00:	add	r3, r3, r6
   34d04:	str	r3, [sp, #20]
   34d08:	ldr	r2, [sp, #16]
   34d0c:	cmp	r3, r2
   34d10:	bge	34dc8 <GetDataSlab+0x137e4>
   34d14:	ldr	r3, [sp, #196]	; 0xc4
   34d18:	ldr	r3, [r3]
   34d1c:	cmp	r3, #0
   34d20:	addne	ip, ip, r3, lsl #1
   34d24:	addne	lr, lr, r3
   34d28:	ldr	r6, [fp]
   34d2c:	cmp	r6, #0
   34d30:	ble	34d68 <GetDataSlab+0x13784>
   34d34:	ldr	r3, [sp, #4]
   34d38:	ldr	r2, [sp, #20]
   34d3c:	add	r2, r3, r2, lsl #1
   34d40:	mov	r3, #0
   34d44:	ldrh	r1, [ip]
   34d48:	strh	r1, [r2], #2
   34d4c:	ldr	r1, [sl]
   34d50:	add	ip, ip, r1, lsl #1
   34d54:	add	lr, lr, r1
   34d58:	add	r3, r3, #1
   34d5c:	ldr	r6, [fp]
   34d60:	cmp	r6, r3
   34d64:	bgt	34d44 <GetDataSlab+0x13760>
   34d68:	ldr	r3, [sp, #192]	; 0xc0
   34d6c:	ldr	r2, [r3]
   34d70:	ldr	r3, [sp, #196]	; 0xc4
   34d74:	ldr	r3, [r3]
   34d78:	sub	r3, r2, r3
   34d7c:	ldr	r2, [sl]
   34d80:	mls	r3, r2, r6, r3
   34d84:	add	lr, lr, r3
   34d88:	add	ip, ip, r3, lsl #1
   34d8c:	cmp	r9, #1
   34d90:	ble	34cfc <GetDataSlab+0x13718>
   34d94:	ldr	r3, [sp, #76]	; 0x4c
   34d98:	add	r3, r3, #1
   34d9c:	str	r3, [sp, #76]	; 0x4c
   34da0:	ldr	r1, [fp, #4]
   34da4:	sdiv	r2, r3, r1
   34da8:	mls	r3, r1, r2, r3
   34dac:	cmp	r3, #0
   34db0:	bne	34ce4 <GetDataSlab+0x13700>
   34db4:	add	r4, sp, #76	; 0x4c
   34db8:	add	r7, fp, #4
   34dbc:	add	r5, sp, #112	; 0x70
   34dc0:	mov	r0, #1
   34dc4:	b	34c98 <GetDataSlab+0x136b4>
   34dc8:	mov	r3, #0
   34dcc:	b	251fc <GetDataSlab+0x3c18>
   34dd0:	ldr	r3, [sl]
   34dd4:	str	r3, [sp, #28]
   34dd8:	sub	r3, r3, #1
   34ddc:	str	r3, [sp, #32]
   34de0:	ldr	r3, [sp, #192]	; 0xc0
   34de4:	ldr	r3, [r3]
   34de8:	str	r3, [sp, #112]	; 0x70
   34dec:	ldr	r3, [fp]
   34df0:	str	r3, [sp, #16]
   34df4:	cmp	r9, #1
   34df8:	ble	34e1c <GetDataSlab+0x13838>
   34dfc:	str	sl, [sp, #20]
   34e00:	add	r8, sp, #36	; 0x24
   34e04:	ldr	r5, [sp, #192]	; 0xc0
   34e08:	add	r6, sp, #112	; 0x70
   34e0c:	str	r5, [sp, #12]
   34e10:	mov	r4, #1
   34e14:	mov	lr, #0
   34e18:	b	3dc08 <GetDataSlab+0x1c624>
   34e1c:	mov	lr, #0
   34e20:	b	3dca0 <GetDataSlab+0x1c6bc>
   34e24:	ldr	r3, [sp, #16]
   34e28:	cmp	r3, #0
   34e2c:	ble	3a4dc <GetDataSlab+0x18ef8>
   34e30:	mov	r3, #0
   34e34:	str	r3, [sp, #12]
   34e38:	mov	r8, r3
   34e3c:	b	34efc <GetDataSlab+0x13918>
   34e40:	ldr	r3, [sp, #196]	; 0xc4
   34e44:	ldr	r3, [r3, r0, lsl #2]
   34e48:	cmp	r3, #0
   34e4c:	beq	34e60 <GetDataSlab+0x1387c>
   34e50:	ldr	r2, [r5, #-8]
   34e54:	mul	r3, r2, r3
   34e58:	add	ip, ip, r3, lsl #1
   34e5c:	add	lr, lr, r3
   34e60:	add	r0, r0, #1
   34e64:	cmp	r9, r0
   34e68:	beq	34ee0 <GetDataSlab+0x138fc>
   34e6c:	ldr	r3, [r4]
   34e70:	add	r1, r3, #1
   34e74:	str	r1, [r4]
   34e78:	ldr	r2, [r7, #4]!
   34e7c:	sdiv	r3, r1, r2
   34e80:	mls	r3, r2, r3, r1
   34e84:	cmp	r3, #0
   34e88:	bne	34ecc <GetDataSlab+0x138e8>
   34e8c:	str	r8, [r4], #4
   34e90:	ldr	r2, [r5], #4
   34e94:	sdiv	r3, lr, r2
   34e98:	mls	r3, r2, r3, lr
   34e9c:	cmp	r3, #0
   34ea0:	beq	34e40 <GetDataSlab+0x1385c>
   34ea4:	ldr	r1, [r5, #-8]
   34ea8:	ldr	sl, [sp, #196]	; 0xc4
   34eac:	ldr	sl, [sl, r0, lsl #2]
   34eb0:	str	sl, [sp, #8]
   34eb4:	sub	r3, r2, r3
   34eb8:	mla	r3, sl, r1, r3
   34ebc:	add	ip, ip, r3, lsl #1
   34ec0:	add	lr, lr, r3
   34ec4:	b	34e60 <GetDataSlab+0x1387c>
   34ec8:	ldr	r0, [sp, #28]
   34ecc:	add	r3, sp, #152	; 0x98
   34ed0:	add	r3, r3, r0, lsl #2
   34ed4:	ldr	r3, [r3, #-120]	; 0xffffff88
   34ed8:	add	lr, lr, r3
   34edc:	add	ip, ip, r3, lsl #1
   34ee0:	ldr	r3, [sp, #12]
   34ee4:	add	r3, r3, r6
   34ee8:	str	r3, [sp, #12]
   34eec:	ldr	r3, [sp, #16]
   34ef0:	ldr	r2, [sp, #12]
   34ef4:	cmp	r2, r3
   34ef8:	bge	34fa0 <GetDataSlab+0x139bc>
   34efc:	ldr	r3, [sp, #196]	; 0xc4
   34f00:	ldr	r3, [r3]
   34f04:	cmp	r3, #0
   34f08:	addne	ip, ip, r3, lsl #1
   34f0c:	addne	lr, lr, r3
   34f10:	ldr	r6, [fp]
   34f14:	cmp	r6, #0
   34f18:	ble	34f48 <GetDataSlab+0x13964>
   34f1c:	sub	r0, ip, #2
   34f20:	ldr	r3, [sp, #4]
   34f24:	ldr	r2, [sp, #12]
   34f28:	add	r1, r3, r2, lsl #1
   34f2c:	mov	r2, #0
   34f30:	ldrh	r3, [r0, #2]!
   34f34:	strh	r3, [r1], #2
   34f38:	add	r2, r2, #1
   34f3c:	ldr	r6, [fp]
   34f40:	cmp	r6, r2
   34f44:	bgt	34f30 <GetDataSlab+0x1394c>
   34f48:	ldr	r3, [sp, #192]	; 0xc0
   34f4c:	ldr	r2, [r3]
   34f50:	ldr	r3, [sp, #196]	; 0xc4
   34f54:	ldr	r3, [r3]
   34f58:	sub	r3, r2, r3
   34f5c:	add	lr, lr, r3
   34f60:	add	ip, ip, r3, lsl #1
   34f64:	cmp	r9, #1
   34f68:	ble	34ee0 <GetDataSlab+0x138fc>
   34f6c:	ldr	r3, [sp, #76]	; 0x4c
   34f70:	add	r3, r3, #1
   34f74:	str	r3, [sp, #76]	; 0x4c
   34f78:	ldr	r1, [fp, #4]
   34f7c:	sdiv	r2, r3, r1
   34f80:	mls	r3, r1, r2, r3
   34f84:	cmp	r3, #0
   34f88:	bne	34ec8 <GetDataSlab+0x138e4>
   34f8c:	add	r4, sp, #76	; 0x4c
   34f90:	add	r7, fp, #4
   34f94:	add	r5, sp, #116	; 0x74
   34f98:	ldr	r0, [sp, #28]
   34f9c:	b	34e8c <GetDataSlab+0x138a8>
   34fa0:	mov	r3, #0
   34fa4:	b	251fc <GetDataSlab+0x3c18>
   34fa8:	ldr	r3, [sp, #196]	; 0xc4
   34fac:	ldr	r2, [r3, r0, lsl #2]
   34fb0:	cmp	r2, #0
   34fb4:	beq	34fc8 <GetDataSlab+0x139e4>
   34fb8:	ldr	r3, [r5, #-4]
   34fbc:	mul	r3, r3, r2
   34fc0:	add	ip, ip, r3, lsl #1
   34fc4:	add	lr, lr, r3
   34fc8:	add	r0, r0, #1
   34fcc:	cmp	r9, r0
   34fd0:	beq	35058 <GetDataSlab+0x13a74>
   34fd4:	ldr	r3, [r4]
   34fd8:	add	r1, r3, #1
   34fdc:	str	r1, [r4]
   34fe0:	ldr	r2, [r7, #4]!
   34fe4:	sdiv	r3, r1, r2
   34fe8:	mls	r3, r2, r3, r1
   34fec:	cmp	r3, #0
   34ff0:	bne	35044 <GetDataSlab+0x13a60>
   34ff4:	str	r8, [r4], #4
   34ff8:	add	r5, r5, #4
   34ffc:	ldr	r2, [r5]
   35000:	sdiv	r3, lr, r2
   35004:	mls	r3, r2, r3, lr
   35008:	cmp	r3, #0
   3500c:	beq	34fa8 <GetDataSlab+0x139c4>
   35010:	ldr	r1, [r5, #-4]
   35014:	str	r1, [sp, #8]
   35018:	ldr	r1, [sp, #196]	; 0xc4
   3501c:	ldr	r1, [r1, r0, lsl #2]
   35020:	str	r1, [sp, #12]
   35024:	sub	r3, r2, r3
   35028:	mov	r2, r1
   3502c:	ldr	r1, [sp, #8]
   35030:	mla	r3, r2, r1, r3
   35034:	add	ip, ip, r3, lsl #1
   35038:	add	lr, lr, r3
   3503c:	b	34fc8 <GetDataSlab+0x139e4>
   35040:	mov	r0, #1
   35044:	add	r3, sp, #152	; 0x98
   35048:	add	r3, r3, r0, lsl #2
   3504c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35050:	add	lr, lr, r3
   35054:	add	ip, ip, r3, lsl #1
   35058:	ldr	r3, [sp, #20]
   3505c:	add	r3, r3, r6
   35060:	str	r3, [sp, #20]
   35064:	ldr	r2, [sp, #16]
   35068:	cmp	r3, r2
   3506c:	bge	35124 <GetDataSlab+0x13b40>
   35070:	ldr	r3, [sp, #196]	; 0xc4
   35074:	ldr	r3, [r3]
   35078:	cmp	r3, #0
   3507c:	addne	ip, ip, r3, lsl #1
   35080:	addne	lr, lr, r3
   35084:	ldr	r6, [fp]
   35088:	cmp	r6, #0
   3508c:	ble	350c4 <GetDataSlab+0x13ae0>
   35090:	ldr	r3, [sp, #4]
   35094:	ldr	r2, [sp, #20]
   35098:	add	r2, r3, r2, lsl #1
   3509c:	mov	r3, #0
   350a0:	ldrh	r1, [ip]
   350a4:	strh	r1, [r2], #2
   350a8:	ldr	r1, [sl]
   350ac:	add	ip, ip, r1, lsl #1
   350b0:	add	lr, lr, r1
   350b4:	add	r3, r3, #1
   350b8:	ldr	r6, [fp]
   350bc:	cmp	r6, r3
   350c0:	bgt	350a0 <GetDataSlab+0x13abc>
   350c4:	ldr	r3, [sp, #192]	; 0xc0
   350c8:	ldr	r2, [r3]
   350cc:	ldr	r3, [sp, #196]	; 0xc4
   350d0:	ldr	r3, [r3]
   350d4:	sub	r3, r2, r3
   350d8:	ldr	r2, [sl]
   350dc:	mls	r3, r2, r6, r3
   350e0:	add	lr, lr, r3
   350e4:	add	ip, ip, r3, lsl #1
   350e8:	cmp	r9, #1
   350ec:	ble	35058 <GetDataSlab+0x13a74>
   350f0:	ldr	r3, [sp, #76]	; 0x4c
   350f4:	add	r3, r3, #1
   350f8:	str	r3, [sp, #76]	; 0x4c
   350fc:	ldr	r1, [fp, #4]
   35100:	sdiv	r2, r3, r1
   35104:	mls	r3, r1, r2, r3
   35108:	cmp	r3, #0
   3510c:	bne	35040 <GetDataSlab+0x13a5c>
   35110:	add	r4, sp, #76	; 0x4c
   35114:	add	r7, fp, #4
   35118:	add	r5, sp, #112	; 0x70
   3511c:	mov	r0, #1
   35120:	b	34ff4 <GetDataSlab+0x13a10>
   35124:	mov	r3, #0
   35128:	b	251fc <GetDataSlab+0x3c18>
   3512c:	ldr	r3, [sl]
   35130:	str	r3, [sp, #28]
   35134:	sub	r3, r3, #1
   35138:	str	r3, [sp, #32]
   3513c:	ldr	r3, [sp, #192]	; 0xc0
   35140:	ldr	r3, [r3]
   35144:	str	r3, [sp, #112]	; 0x70
   35148:	ldr	r3, [fp]
   3514c:	str	r3, [sp, #16]
   35150:	cmp	r9, #1
   35154:	ble	35174 <GetDataSlab+0x13b90>
   35158:	str	sl, [sp, #20]
   3515c:	add	r7, sp, #36	; 0x24
   35160:	ldr	r4, [sp, #192]	; 0xc0
   35164:	add	r5, sp, #112	; 0x70
   35168:	str	r4, [sp, #12]
   3516c:	mov	lr, #0
   35170:	b	3d938 <GetDataSlab+0x1c354>
   35174:	mov	lr, #0
   35178:	b	3d9d0 <GetDataSlab+0x1c3ec>
   3517c:	ldr	r3, [sp, #16]
   35180:	cmp	r3, #0
   35184:	ble	3a4e4 <GetDataSlab+0x18f00>
   35188:	mov	r3, #0
   3518c:	str	r3, [sp, #12]
   35190:	mov	r8, r3
   35194:	b	35254 <GetDataSlab+0x13c70>
   35198:	ldr	r3, [sp, #196]	; 0xc4
   3519c:	ldr	r3, [r3, r0, lsl #2]
   351a0:	cmp	r3, #0
   351a4:	beq	351b8 <GetDataSlab+0x13bd4>
   351a8:	ldr	r2, [r5, #-8]
   351ac:	mul	r3, r2, r3
   351b0:	add	ip, ip, r3
   351b4:	add	lr, lr, r3
   351b8:	add	r0, r0, #1
   351bc:	cmp	r9, r0
   351c0:	beq	35238 <GetDataSlab+0x13c54>
   351c4:	ldr	r3, [r4]
   351c8:	add	r1, r3, #1
   351cc:	str	r1, [r4]
   351d0:	ldr	r2, [r7, #4]!
   351d4:	sdiv	r3, r1, r2
   351d8:	mls	r3, r2, r3, r1
   351dc:	cmp	r3, #0
   351e0:	bne	35224 <GetDataSlab+0x13c40>
   351e4:	str	r8, [r4], #4
   351e8:	ldr	r2, [r5], #4
   351ec:	sdiv	r3, lr, r2
   351f0:	mls	r3, r2, r3, lr
   351f4:	cmp	r3, #0
   351f8:	beq	35198 <GetDataSlab+0x13bb4>
   351fc:	ldr	r1, [r5, #-8]
   35200:	ldr	sl, [sp, #196]	; 0xc4
   35204:	ldr	sl, [sl, r0, lsl #2]
   35208:	str	sl, [sp, #8]
   3520c:	sub	r3, r2, r3
   35210:	mla	r3, sl, r1, r3
   35214:	add	ip, ip, r3
   35218:	add	lr, lr, r3
   3521c:	b	351b8 <GetDataSlab+0x13bd4>
   35220:	ldr	r0, [sp, #28]
   35224:	add	r3, sp, #152	; 0x98
   35228:	add	r3, r3, r0, lsl #2
   3522c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35230:	add	lr, lr, r3
   35234:	add	ip, ip, r3
   35238:	ldr	r3, [sp, #12]
   3523c:	add	r3, r3, r6
   35240:	str	r3, [sp, #12]
   35244:	ldr	r3, [sp, #16]
   35248:	ldr	r2, [sp, #12]
   3524c:	cmp	r2, r3
   35250:	bge	352fc <GetDataSlab+0x13d18>
   35254:	ldr	r3, [sp, #196]	; 0xc4
   35258:	ldr	r3, [r3]
   3525c:	cmp	r3, #0
   35260:	addne	ip, ip, r3
   35264:	addne	lr, lr, r3
   35268:	ldr	r6, [fp]
   3526c:	cmp	r6, #0
   35270:	ble	352a4 <GetDataSlab+0x13cc0>
   35274:	sub	r2, ip, #1
   35278:	ldr	r3, [sp, #4]
   3527c:	ldr	r1, [sp, #12]
   35280:	add	r1, r3, r1, lsl #1
   35284:	ldrsb	r3, [r2, #1]
   35288:	strh	r3, [r1], #2
   3528c:	ldr	r6, [fp]
   35290:	add	r3, r2, #2
   35294:	sub	r3, r3, ip
   35298:	add	r2, r2, #1
   3529c:	cmp	r6, r3
   352a0:	bgt	35284 <GetDataSlab+0x13ca0>
   352a4:	ldr	r3, [sp, #192]	; 0xc0
   352a8:	ldr	r2, [r3]
   352ac:	ldr	r3, [sp, #196]	; 0xc4
   352b0:	ldr	r3, [r3]
   352b4:	sub	r3, r2, r3
   352b8:	add	lr, lr, r3
   352bc:	add	ip, ip, r3
   352c0:	cmp	r9, #1
   352c4:	ble	35238 <GetDataSlab+0x13c54>
   352c8:	ldr	r3, [sp, #76]	; 0x4c
   352cc:	add	r3, r3, #1
   352d0:	str	r3, [sp, #76]	; 0x4c
   352d4:	ldr	r1, [fp, #4]
   352d8:	sdiv	r2, r3, r1
   352dc:	mls	r3, r1, r2, r3
   352e0:	cmp	r3, #0
   352e4:	bne	35220 <GetDataSlab+0x13c3c>
   352e8:	add	r4, sp, #76	; 0x4c
   352ec:	add	r7, fp, #4
   352f0:	add	r5, sp, #116	; 0x74
   352f4:	ldr	r0, [sp, #28]
   352f8:	b	351e4 <GetDataSlab+0x13c00>
   352fc:	mov	r3, #0
   35300:	b	251fc <GetDataSlab+0x3c18>
   35304:	ldr	r3, [sp, #196]	; 0xc4
   35308:	ldr	r2, [r3, r0, lsl #2]
   3530c:	cmp	r2, #0
   35310:	beq	35324 <GetDataSlab+0x13d40>
   35314:	ldr	r3, [r5, #-4]
   35318:	mul	r3, r3, r2
   3531c:	add	ip, ip, r3
   35320:	add	lr, lr, r3
   35324:	add	r0, r0, #1
   35328:	cmp	r9, r0
   3532c:	beq	353b4 <GetDataSlab+0x13dd0>
   35330:	ldr	r3, [r4]
   35334:	add	r1, r3, #1
   35338:	str	r1, [r4]
   3533c:	ldr	r2, [r7, #4]!
   35340:	sdiv	r3, r1, r2
   35344:	mls	r3, r2, r3, r1
   35348:	cmp	r3, #0
   3534c:	bne	353a0 <GetDataSlab+0x13dbc>
   35350:	str	r8, [r4], #4
   35354:	add	r5, r5, #4
   35358:	ldr	r2, [r5]
   3535c:	sdiv	r3, lr, r2
   35360:	mls	r3, r2, r3, lr
   35364:	cmp	r3, #0
   35368:	beq	35304 <GetDataSlab+0x13d20>
   3536c:	ldr	r1, [r5, #-4]
   35370:	str	r1, [sp, #8]
   35374:	ldr	r1, [sp, #196]	; 0xc4
   35378:	ldr	r1, [r1, r0, lsl #2]
   3537c:	str	r1, [sp, #12]
   35380:	sub	r3, r2, r3
   35384:	mov	r2, r1
   35388:	ldr	r1, [sp, #8]
   3538c:	mla	r3, r2, r1, r3
   35390:	add	ip, ip, r3
   35394:	add	lr, lr, r3
   35398:	b	35324 <GetDataSlab+0x13d40>
   3539c:	mov	r0, #1
   353a0:	add	r3, sp, #152	; 0x98
   353a4:	add	r3, r3, r0, lsl #2
   353a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   353ac:	add	lr, lr, r3
   353b0:	add	ip, ip, r3
   353b4:	ldr	r3, [sp, #20]
   353b8:	add	r3, r3, r6
   353bc:	str	r3, [sp, #20]
   353c0:	ldr	r2, [sp, #16]
   353c4:	cmp	r3, r2
   353c8:	bge	35480 <GetDataSlab+0x13e9c>
   353cc:	ldr	r3, [sp, #196]	; 0xc4
   353d0:	ldr	r3, [r3]
   353d4:	cmp	r3, #0
   353d8:	addne	ip, ip, r3
   353dc:	addne	lr, lr, r3
   353e0:	ldr	r6, [fp]
   353e4:	cmp	r6, #0
   353e8:	ble	35420 <GetDataSlab+0x13e3c>
   353ec:	ldr	r3, [sp, #4]
   353f0:	ldr	r2, [sp, #20]
   353f4:	add	r2, r3, r2, lsl #1
   353f8:	mov	r3, #0
   353fc:	ldrsb	r1, [ip]
   35400:	strh	r1, [r2], #2
   35404:	ldr	r1, [sl]
   35408:	add	ip, ip, r1
   3540c:	add	lr, lr, r1
   35410:	add	r3, r3, #1
   35414:	ldr	r6, [fp]
   35418:	cmp	r6, r3
   3541c:	bgt	353fc <GetDataSlab+0x13e18>
   35420:	ldr	r3, [sp, #192]	; 0xc0
   35424:	ldr	r2, [r3]
   35428:	ldr	r3, [sp, #196]	; 0xc4
   3542c:	ldr	r3, [r3]
   35430:	sub	r3, r2, r3
   35434:	ldr	r2, [sl]
   35438:	mls	r3, r2, r6, r3
   3543c:	add	lr, lr, r3
   35440:	add	ip, ip, r3
   35444:	cmp	r9, #1
   35448:	ble	353b4 <GetDataSlab+0x13dd0>
   3544c:	ldr	r3, [sp, #76]	; 0x4c
   35450:	add	r3, r3, #1
   35454:	str	r3, [sp, #76]	; 0x4c
   35458:	ldr	r1, [fp, #4]
   3545c:	sdiv	r2, r3, r1
   35460:	mls	r3, r1, r2, r3
   35464:	cmp	r3, #0
   35468:	bne	3539c <GetDataSlab+0x13db8>
   3546c:	add	r4, sp, #76	; 0x4c
   35470:	add	r7, fp, #4
   35474:	add	r5, sp, #112	; 0x70
   35478:	mov	r0, #1
   3547c:	b	35350 <GetDataSlab+0x13d6c>
   35480:	mov	r3, #0
   35484:	b	251fc <GetDataSlab+0x3c18>
   35488:	ldr	r3, [sl]
   3548c:	str	r3, [sp, #28]
   35490:	sub	r3, r3, #1
   35494:	str	r3, [sp, #32]
   35498:	ldr	r3, [sp, #192]	; 0xc0
   3549c:	ldr	r3, [r3]
   354a0:	str	r3, [sp, #112]	; 0x70
   354a4:	ldr	r3, [fp]
   354a8:	str	r3, [sp, #16]
   354ac:	cmp	r9, #1
   354b0:	ble	354d4 <GetDataSlab+0x13ef0>
   354b4:	str	sl, [sp, #20]
   354b8:	add	r8, sp, #36	; 0x24
   354bc:	ldr	r5, [sp, #192]	; 0xc0
   354c0:	add	r6, sp, #112	; 0x70
   354c4:	str	r5, [sp, #12]
   354c8:	mov	r4, #1
   354cc:	mov	lr, #0
   354d0:	b	3da28 <GetDataSlab+0x1c444>
   354d4:	mov	lr, #0
   354d8:	b	3dac0 <GetDataSlab+0x1c4dc>
   354dc:	ldr	r3, [sp, #16]
   354e0:	cmp	r3, #0
   354e4:	ble	3a4ec <GetDataSlab+0x18f08>
   354e8:	mov	r3, #0
   354ec:	str	r3, [sp, #12]
   354f0:	mov	r8, r3
   354f4:	b	355b4 <GetDataSlab+0x13fd0>
   354f8:	ldr	r3, [sp, #196]	; 0xc4
   354fc:	ldr	r3, [r3, r0, lsl #2]
   35500:	cmp	r3, #0
   35504:	beq	35518 <GetDataSlab+0x13f34>
   35508:	ldr	r2, [r5, #-8]
   3550c:	mul	r3, r2, r3
   35510:	add	ip, ip, r3
   35514:	add	lr, lr, r3
   35518:	add	r0, r0, #1
   3551c:	cmp	r9, r0
   35520:	beq	35598 <GetDataSlab+0x13fb4>
   35524:	ldr	r3, [r4]
   35528:	add	r1, r3, #1
   3552c:	str	r1, [r4]
   35530:	ldr	r2, [r7, #4]!
   35534:	sdiv	r3, r1, r2
   35538:	mls	r3, r2, r3, r1
   3553c:	cmp	r3, #0
   35540:	bne	35584 <GetDataSlab+0x13fa0>
   35544:	str	r8, [r4], #4
   35548:	ldr	r2, [r5], #4
   3554c:	sdiv	r3, lr, r2
   35550:	mls	r3, r2, r3, lr
   35554:	cmp	r3, #0
   35558:	beq	354f8 <GetDataSlab+0x13f14>
   3555c:	ldr	r1, [r5, #-8]
   35560:	ldr	sl, [sp, #196]	; 0xc4
   35564:	ldr	sl, [sl, r0, lsl #2]
   35568:	str	sl, [sp, #8]
   3556c:	sub	r3, r2, r3
   35570:	mla	r3, sl, r1, r3
   35574:	add	ip, ip, r3
   35578:	add	lr, lr, r3
   3557c:	b	35518 <GetDataSlab+0x13f34>
   35580:	ldr	r0, [sp, #28]
   35584:	add	r3, sp, #152	; 0x98
   35588:	add	r3, r3, r0, lsl #2
   3558c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35590:	add	lr, lr, r3
   35594:	add	ip, ip, r3
   35598:	ldr	r3, [sp, #12]
   3559c:	add	r3, r3, r6
   355a0:	str	r3, [sp, #12]
   355a4:	ldr	r3, [sp, #16]
   355a8:	ldr	r2, [sp, #12]
   355ac:	cmp	r2, r3
   355b0:	bge	3565c <GetDataSlab+0x14078>
   355b4:	ldr	r3, [sp, #196]	; 0xc4
   355b8:	ldr	r3, [r3]
   355bc:	cmp	r3, #0
   355c0:	addne	ip, ip, r3
   355c4:	addne	lr, lr, r3
   355c8:	ldr	r6, [fp]
   355cc:	cmp	r6, #0
   355d0:	ble	35604 <GetDataSlab+0x14020>
   355d4:	sub	r2, ip, #1
   355d8:	ldr	r3, [sp, #4]
   355dc:	ldr	r1, [sp, #12]
   355e0:	add	r1, r3, r1, lsl #1
   355e4:	ldrb	r3, [r2, #1]
   355e8:	strh	r3, [r1], #2
   355ec:	ldr	r6, [fp]
   355f0:	add	r3, r2, #2
   355f4:	sub	r3, r3, ip
   355f8:	add	r2, r2, #1
   355fc:	cmp	r6, r3
   35600:	bgt	355e4 <GetDataSlab+0x14000>
   35604:	ldr	r3, [sp, #192]	; 0xc0
   35608:	ldr	r2, [r3]
   3560c:	ldr	r3, [sp, #196]	; 0xc4
   35610:	ldr	r3, [r3]
   35614:	sub	r3, r2, r3
   35618:	add	lr, lr, r3
   3561c:	add	ip, ip, r3
   35620:	cmp	r9, #1
   35624:	ble	35598 <GetDataSlab+0x13fb4>
   35628:	ldr	r3, [sp, #76]	; 0x4c
   3562c:	add	r3, r3, #1
   35630:	str	r3, [sp, #76]	; 0x4c
   35634:	ldr	r1, [fp, #4]
   35638:	sdiv	r2, r3, r1
   3563c:	mls	r3, r1, r2, r3
   35640:	cmp	r3, #0
   35644:	bne	35580 <GetDataSlab+0x13f9c>
   35648:	add	r4, sp, #76	; 0x4c
   3564c:	add	r7, fp, #4
   35650:	add	r5, sp, #116	; 0x74
   35654:	ldr	r0, [sp, #28]
   35658:	b	35544 <GetDataSlab+0x13f60>
   3565c:	mov	r3, #0
   35660:	b	251fc <GetDataSlab+0x3c18>
   35664:	ldr	r3, [sp, #196]	; 0xc4
   35668:	ldr	r2, [r3, r0, lsl #2]
   3566c:	cmp	r2, #0
   35670:	beq	35684 <GetDataSlab+0x140a0>
   35674:	ldr	r3, [r5, #-4]
   35678:	mul	r3, r3, r2
   3567c:	add	ip, ip, r3
   35680:	add	lr, lr, r3
   35684:	add	r0, r0, #1
   35688:	cmp	r9, r0
   3568c:	beq	35714 <GetDataSlab+0x14130>
   35690:	ldr	r3, [r4]
   35694:	add	r1, r3, #1
   35698:	str	r1, [r4]
   3569c:	ldr	r2, [r7, #4]!
   356a0:	sdiv	r3, r1, r2
   356a4:	mls	r3, r2, r3, r1
   356a8:	cmp	r3, #0
   356ac:	bne	35700 <GetDataSlab+0x1411c>
   356b0:	str	r8, [r4], #4
   356b4:	add	r5, r5, #4
   356b8:	ldr	r2, [r5]
   356bc:	sdiv	r3, lr, r2
   356c0:	mls	r3, r2, r3, lr
   356c4:	cmp	r3, #0
   356c8:	beq	35664 <GetDataSlab+0x14080>
   356cc:	ldr	r1, [r5, #-4]
   356d0:	str	r1, [sp, #8]
   356d4:	ldr	r1, [sp, #196]	; 0xc4
   356d8:	ldr	r1, [r1, r0, lsl #2]
   356dc:	str	r1, [sp, #12]
   356e0:	sub	r3, r2, r3
   356e4:	mov	r2, r1
   356e8:	ldr	r1, [sp, #8]
   356ec:	mla	r3, r2, r1, r3
   356f0:	add	ip, ip, r3
   356f4:	add	lr, lr, r3
   356f8:	b	35684 <GetDataSlab+0x140a0>
   356fc:	mov	r0, #1
   35700:	add	r3, sp, #152	; 0x98
   35704:	add	r3, r3, r0, lsl #2
   35708:	ldr	r3, [r3, #-120]	; 0xffffff88
   3570c:	add	lr, lr, r3
   35710:	add	ip, ip, r3
   35714:	ldr	r3, [sp, #20]
   35718:	add	r3, r3, r6
   3571c:	str	r3, [sp, #20]
   35720:	ldr	r2, [sp, #16]
   35724:	cmp	r3, r2
   35728:	bge	357e0 <GetDataSlab+0x141fc>
   3572c:	ldr	r3, [sp, #196]	; 0xc4
   35730:	ldr	r3, [r3]
   35734:	cmp	r3, #0
   35738:	addne	ip, ip, r3
   3573c:	addne	lr, lr, r3
   35740:	ldr	r6, [fp]
   35744:	cmp	r6, #0
   35748:	ble	35780 <GetDataSlab+0x1419c>
   3574c:	ldr	r3, [sp, #4]
   35750:	ldr	r2, [sp, #20]
   35754:	add	r2, r3, r2, lsl #1
   35758:	mov	r3, #0
   3575c:	ldrb	r1, [ip]
   35760:	strh	r1, [r2], #2
   35764:	ldr	r1, [sl]
   35768:	add	ip, ip, r1
   3576c:	add	lr, lr, r1
   35770:	add	r3, r3, #1
   35774:	ldr	r6, [fp]
   35778:	cmp	r6, r3
   3577c:	bgt	3575c <GetDataSlab+0x14178>
   35780:	ldr	r3, [sp, #192]	; 0xc0
   35784:	ldr	r2, [r3]
   35788:	ldr	r3, [sp, #196]	; 0xc4
   3578c:	ldr	r3, [r3]
   35790:	sub	r3, r2, r3
   35794:	ldr	r2, [sl]
   35798:	mls	r3, r2, r6, r3
   3579c:	add	lr, lr, r3
   357a0:	add	ip, ip, r3
   357a4:	cmp	r9, #1
   357a8:	ble	35714 <GetDataSlab+0x14130>
   357ac:	ldr	r3, [sp, #76]	; 0x4c
   357b0:	add	r3, r3, #1
   357b4:	str	r3, [sp, #76]	; 0x4c
   357b8:	ldr	r1, [fp, #4]
   357bc:	sdiv	r2, r3, r1
   357c0:	mls	r3, r1, r2, r3
   357c4:	cmp	r3, #0
   357c8:	bne	356fc <GetDataSlab+0x14118>
   357cc:	add	r4, sp, #76	; 0x4c
   357d0:	add	r7, fp, #4
   357d4:	add	r5, sp, #112	; 0x70
   357d8:	mov	r0, #1
   357dc:	b	356b0 <GetDataSlab+0x140cc>
   357e0:	mov	r3, #0
   357e4:	b	251fc <GetDataSlab+0x3c18>
   357e8:	cmp	r8, #12
   357ec:	beq	35848 <GetDataSlab+0x14264>
   357f0:	cmp	r8, #13
   357f4:	movne	r3, #1
   357f8:	bne	251fc <GetDataSlab+0x3c18>
   357fc:	ldr	r3, [sl]
   35800:	str	r3, [sp, #28]
   35804:	sub	r3, r3, #1
   35808:	str	r3, [sp, #32]
   3580c:	ldr	r3, [sp, #192]	; 0xc0
   35810:	ldr	r3, [r3]
   35814:	str	r3, [sp, #112]	; 0x70
   35818:	ldr	r3, [fp]
   3581c:	str	r3, [sp, #16]
   35820:	cmp	r9, #1
   35824:	ble	35b98 <GetDataSlab+0x145b4>
   35828:	str	sl, [sp, #20]
   3582c:	add	r8, sp, #36	; 0x24
   35830:	ldr	r5, [sp, #192]	; 0xc0
   35834:	add	r6, sp, #112	; 0x70
   35838:	str	r5, [sp, #12]
   3583c:	mov	r4, #1
   35840:	mov	lr, #0
   35844:	b	3d758 <GetDataSlab+0x1c174>
   35848:	ldr	r3, [sl]
   3584c:	str	r3, [sp, #28]
   35850:	sub	r3, r3, #1
   35854:	str	r3, [sp, #32]
   35858:	ldr	r3, [sp, #192]	; 0xc0
   3585c:	ldr	r3, [r3]
   35860:	str	r3, [sp, #112]	; 0x70
   35864:	ldr	r3, [fp]
   35868:	str	r3, [sp, #16]
   3586c:	cmp	r9, #1
   35870:	ble	35894 <GetDataSlab+0x142b0>
   35874:	str	sl, [sp, #20]
   35878:	add	r8, sp, #36	; 0x24
   3587c:	ldr	r5, [sp, #192]	; 0xc0
   35880:	add	r6, sp, #112	; 0x70
   35884:	str	r5, [sp, #12]
   35888:	mov	r4, #1
   3588c:	mov	lr, #0
   35890:	b	3d848 <GetDataSlab+0x1c264>
   35894:	mov	lr, #0
   35898:	b	3d8e0 <GetDataSlab+0x1c2fc>
   3589c:	ldr	r3, [sp, #16]
   358a0:	cmp	r3, #0
   358a4:	ble	3d90c <GetDataSlab+0x1c328>
   358a8:	mov	r3, #0
   358ac:	str	r3, [sp, #12]
   358b0:	mov	r8, r3
   358b4:	b	35978 <GetDataSlab+0x14394>
   358b8:	ldr	r3, [sp, #196]	; 0xc4
   358bc:	ldr	r2, [r3, r0, lsl #2]
   358c0:	cmp	r2, #0
   358c4:	beq	358d8 <GetDataSlab+0x142f4>
   358c8:	ldr	r3, [r5, #-4]
   358cc:	mul	r3, r3, r2
   358d0:	add	ip, ip, r3, lsl #3
   358d4:	add	lr, lr, r3
   358d8:	add	r0, r0, #1
   358dc:	cmp	r9, r0
   358e0:	beq	3595c <GetDataSlab+0x14378>
   358e4:	ldr	r3, [r4]
   358e8:	add	r1, r3, #1
   358ec:	str	r1, [r4]
   358f0:	ldr	r2, [r7, #4]!
   358f4:	sdiv	r3, r1, r2
   358f8:	mls	r3, r2, r3, r1
   358fc:	cmp	r3, #0
   35900:	bne	35948 <GetDataSlab+0x14364>
   35904:	str	r8, [r4], #4
   35908:	add	r5, r5, #4
   3590c:	ldr	r2, [r5]
   35910:	sdiv	r3, lr, r2
   35914:	mls	r3, r2, r3, lr
   35918:	cmp	r3, #0
   3591c:	beq	358b8 <GetDataSlab+0x142d4>
   35920:	ldr	r1, [r5, #-4]
   35924:	ldr	sl, [sp, #196]	; 0xc4
   35928:	ldr	sl, [sl, r0, lsl #2]
   3592c:	str	sl, [sp, #8]
   35930:	sub	r3, r2, r3
   35934:	mla	r3, sl, r1, r3
   35938:	add	ip, ip, r3, lsl #3
   3593c:	add	lr, lr, r3
   35940:	b	358d8 <GetDataSlab+0x142f4>
   35944:	ldr	r0, [sp, #28]
   35948:	add	r3, sp, #152	; 0x98
   3594c:	add	r3, r3, r0, lsl #2
   35950:	ldr	r3, [r3, #-120]	; 0xffffff88
   35954:	add	lr, lr, r3
   35958:	add	ip, ip, r3, lsl #3
   3595c:	ldr	r3, [sp, #12]
   35960:	add	r3, r3, r6
   35964:	str	r3, [sp, #12]
   35968:	ldr	r3, [sp, #16]
   3596c:	ldr	r2, [sp, #12]
   35970:	cmp	r2, r3
   35974:	bge	3d90c <GetDataSlab+0x1c328>
   35978:	ldr	r3, [sp, #196]	; 0xc4
   3597c:	ldr	r3, [r3]
   35980:	cmp	r3, #0
   35984:	addne	ip, ip, r3, lsl #3
   35988:	addne	lr, lr, r3
   3598c:	ldr	r6, [fp]
   35990:	cmp	r6, #0
   35994:	ble	359c4 <GetDataSlab+0x143e0>
   35998:	sub	r0, ip, #8
   3599c:	ldr	r3, [sp, #4]
   359a0:	ldr	r2, [sp, #12]
   359a4:	add	r1, r3, r2, lsl #1
   359a8:	mov	r2, #0
   359ac:	ldr	r3, [r0, #8]!
   359b0:	strh	r3, [r1], #2
   359b4:	add	r2, r2, #1
   359b8:	ldr	r6, [fp]
   359bc:	cmp	r6, r2
   359c0:	bgt	359ac <GetDataSlab+0x143c8>
   359c4:	ldr	r3, [sp, #192]	; 0xc0
   359c8:	ldr	r2, [r3]
   359cc:	ldr	r3, [sp, #196]	; 0xc4
   359d0:	ldr	r3, [r3]
   359d4:	sub	r3, r2, r3
   359d8:	add	lr, lr, r3
   359dc:	add	ip, ip, r3, lsl #3
   359e0:	cmp	r9, #1
   359e4:	ble	3595c <GetDataSlab+0x14378>
   359e8:	ldr	r3, [sp, #76]	; 0x4c
   359ec:	add	r3, r3, #1
   359f0:	str	r3, [sp, #76]	; 0x4c
   359f4:	ldr	r1, [fp, #4]
   359f8:	sdiv	r2, r3, r1
   359fc:	mls	r3, r1, r2, r3
   35a00:	cmp	r3, #0
   35a04:	bne	35944 <GetDataSlab+0x14360>
   35a08:	add	r4, sp, #76	; 0x4c
   35a0c:	add	r7, fp, #4
   35a10:	add	r5, sp, #112	; 0x70
   35a14:	ldr	r0, [sp, #28]
   35a18:	b	35904 <GetDataSlab+0x14320>
   35a1c:	ldr	r3, [sp, #196]	; 0xc4
   35a20:	ldr	r2, [r3, r0, lsl #2]
   35a24:	cmp	r2, #0
   35a28:	beq	35a3c <GetDataSlab+0x14458>
   35a2c:	ldr	r3, [r5, #-4]
   35a30:	mul	r3, r3, r2
   35a34:	add	ip, ip, r3, lsl #3
   35a38:	add	lr, lr, r3
   35a3c:	add	r0, r0, #1
   35a40:	cmp	r9, r0
   35a44:	beq	35acc <GetDataSlab+0x144e8>
   35a48:	ldr	r3, [r4]
   35a4c:	add	r1, r3, #1
   35a50:	str	r1, [r4]
   35a54:	ldr	r2, [r7, #4]!
   35a58:	sdiv	r3, r1, r2
   35a5c:	mls	r3, r2, r3, r1
   35a60:	cmp	r3, #0
   35a64:	bne	35ab8 <GetDataSlab+0x144d4>
   35a68:	str	r8, [r4], #4
   35a6c:	add	r5, r5, #4
   35a70:	ldr	r2, [r5]
   35a74:	sdiv	r3, lr, r2
   35a78:	mls	r3, r2, r3, lr
   35a7c:	cmp	r3, #0
   35a80:	beq	35a1c <GetDataSlab+0x14438>
   35a84:	ldr	r1, [r5, #-4]
   35a88:	str	r1, [sp, #8]
   35a8c:	ldr	r1, [sp, #196]	; 0xc4
   35a90:	ldr	r1, [r1, r0, lsl #2]
   35a94:	str	r1, [sp, #12]
   35a98:	sub	r3, r2, r3
   35a9c:	mov	r2, r1
   35aa0:	ldr	r1, [sp, #8]
   35aa4:	mla	r3, r2, r1, r3
   35aa8:	add	ip, ip, r3, lsl #3
   35aac:	add	lr, lr, r3
   35ab0:	b	35a3c <GetDataSlab+0x14458>
   35ab4:	mov	r0, #1
   35ab8:	add	r3, sp, #152	; 0x98
   35abc:	add	r3, r3, r0, lsl #2
   35ac0:	ldr	r3, [r3, #-120]	; 0xffffff88
   35ac4:	add	lr, lr, r3
   35ac8:	add	ip, ip, r3, lsl #3
   35acc:	ldr	r3, [sp, #20]
   35ad0:	add	r3, r3, r6
   35ad4:	str	r3, [sp, #20]
   35ad8:	ldr	r2, [sp, #16]
   35adc:	cmp	r3, r2
   35ae0:	bge	3d90c <GetDataSlab+0x1c328>
   35ae4:	ldr	r3, [sp, #196]	; 0xc4
   35ae8:	ldr	r3, [r3]
   35aec:	cmp	r3, #0
   35af0:	addne	ip, ip, r3, lsl #3
   35af4:	addne	lr, lr, r3
   35af8:	ldr	r6, [fp]
   35afc:	cmp	r6, #0
   35b00:	ble	35b38 <GetDataSlab+0x14554>
   35b04:	ldr	r3, [sp, #4]
   35b08:	ldr	r2, [sp, #20]
   35b0c:	add	r2, r3, r2, lsl #1
   35b10:	mov	r3, #0
   35b14:	ldr	r1, [ip]
   35b18:	strh	r1, [r2], #2
   35b1c:	ldr	r1, [sl]
   35b20:	add	ip, ip, r1, lsl #3
   35b24:	add	lr, lr, r1
   35b28:	add	r3, r3, #1
   35b2c:	ldr	r6, [fp]
   35b30:	cmp	r6, r3
   35b34:	bgt	35b14 <GetDataSlab+0x14530>
   35b38:	ldr	r3, [sp, #192]	; 0xc0
   35b3c:	ldr	r2, [r3]
   35b40:	ldr	r3, [sp, #196]	; 0xc4
   35b44:	ldr	r3, [r3]
   35b48:	sub	r3, r2, r3
   35b4c:	ldr	r2, [sl]
   35b50:	mls	r3, r2, r6, r3
   35b54:	add	lr, lr, r3
   35b58:	add	ip, ip, r3, lsl #3
   35b5c:	cmp	r9, #1
   35b60:	ble	35acc <GetDataSlab+0x144e8>
   35b64:	ldr	r3, [sp, #76]	; 0x4c
   35b68:	add	r3, r3, #1
   35b6c:	str	r3, [sp, #76]	; 0x4c
   35b70:	ldr	r1, [fp, #4]
   35b74:	sdiv	r2, r3, r1
   35b78:	mls	r3, r1, r2, r3
   35b7c:	cmp	r3, #0
   35b80:	bne	35ab4 <GetDataSlab+0x144d0>
   35b84:	add	r4, sp, #76	; 0x4c
   35b88:	add	r7, fp, #4
   35b8c:	add	r5, sp, #112	; 0x70
   35b90:	mov	r0, #1
   35b94:	b	35a68 <GetDataSlab+0x14484>
   35b98:	mov	lr, #0
   35b9c:	b	3d7f0 <GetDataSlab+0x1c20c>
   35ba0:	ldr	r3, [sp, #16]
   35ba4:	cmp	r3, #0
   35ba8:	ble	3a4f4 <GetDataSlab+0x18f10>
   35bac:	mov	r3, #0
   35bb0:	str	r3, [sp, #12]
   35bb4:	mov	r8, r3
   35bb8:	b	35c7c <GetDataSlab+0x14698>
   35bbc:	ldr	r3, [sp, #196]	; 0xc4
   35bc0:	ldr	r2, [r3, r0, lsl #2]
   35bc4:	cmp	r2, #0
   35bc8:	beq	35bdc <GetDataSlab+0x145f8>
   35bcc:	ldr	r3, [r5, #-4]
   35bd0:	mul	r3, r3, r2
   35bd4:	add	ip, ip, r3, lsl #3
   35bd8:	add	lr, lr, r3
   35bdc:	add	r0, r0, #1
   35be0:	cmp	r9, r0
   35be4:	beq	35c60 <GetDataSlab+0x1467c>
   35be8:	ldr	r3, [r4]
   35bec:	add	r1, r3, #1
   35bf0:	str	r1, [r4]
   35bf4:	ldr	r2, [r7, #4]!
   35bf8:	sdiv	r3, r1, r2
   35bfc:	mls	r3, r2, r3, r1
   35c00:	cmp	r3, #0
   35c04:	bne	35c4c <GetDataSlab+0x14668>
   35c08:	str	r8, [r4], #4
   35c0c:	add	r5, r5, #4
   35c10:	ldr	r2, [r5]
   35c14:	sdiv	r3, lr, r2
   35c18:	mls	r3, r2, r3, lr
   35c1c:	cmp	r3, #0
   35c20:	beq	35bbc <GetDataSlab+0x145d8>
   35c24:	ldr	r1, [r5, #-4]
   35c28:	ldr	sl, [sp, #196]	; 0xc4
   35c2c:	ldr	sl, [sl, r0, lsl #2]
   35c30:	str	sl, [sp, #8]
   35c34:	sub	r3, r2, r3
   35c38:	mla	r3, sl, r1, r3
   35c3c:	add	ip, ip, r3, lsl #3
   35c40:	add	lr, lr, r3
   35c44:	b	35bdc <GetDataSlab+0x145f8>
   35c48:	ldr	r0, [sp, #28]
   35c4c:	add	r3, sp, #152	; 0x98
   35c50:	add	r3, r3, r0, lsl #2
   35c54:	ldr	r3, [r3, #-120]	; 0xffffff88
   35c58:	add	lr, lr, r3
   35c5c:	add	ip, ip, r3, lsl #3
   35c60:	ldr	r3, [sp, #12]
   35c64:	add	r3, r3, r6
   35c68:	str	r3, [sp, #12]
   35c6c:	ldr	r3, [sp, #16]
   35c70:	ldr	r2, [sp, #12]
   35c74:	cmp	r2, r3
   35c78:	bge	35d20 <GetDataSlab+0x1473c>
   35c7c:	ldr	r3, [sp, #196]	; 0xc4
   35c80:	ldr	r3, [r3]
   35c84:	cmp	r3, #0
   35c88:	addne	ip, ip, r3, lsl #3
   35c8c:	addne	lr, lr, r3
   35c90:	ldr	r6, [fp]
   35c94:	cmp	r6, #0
   35c98:	ble	35cc8 <GetDataSlab+0x146e4>
   35c9c:	sub	r0, ip, #8
   35ca0:	ldr	r3, [sp, #4]
   35ca4:	ldr	r2, [sp, #12]
   35ca8:	add	r1, r3, r2, lsl #1
   35cac:	mov	r2, #0
   35cb0:	ldr	r3, [r0, #8]!
   35cb4:	strh	r3, [r1], #2
   35cb8:	add	r2, r2, #1
   35cbc:	ldr	r6, [fp]
   35cc0:	cmp	r6, r2
   35cc4:	bgt	35cb0 <GetDataSlab+0x146cc>
   35cc8:	ldr	r3, [sp, #192]	; 0xc0
   35ccc:	ldr	r2, [r3]
   35cd0:	ldr	r3, [sp, #196]	; 0xc4
   35cd4:	ldr	r3, [r3]
   35cd8:	sub	r3, r2, r3
   35cdc:	add	lr, lr, r3
   35ce0:	add	ip, ip, r3, lsl #3
   35ce4:	cmp	r9, #1
   35ce8:	ble	35c60 <GetDataSlab+0x1467c>
   35cec:	ldr	r3, [sp, #76]	; 0x4c
   35cf0:	add	r3, r3, #1
   35cf4:	str	r3, [sp, #76]	; 0x4c
   35cf8:	ldr	r1, [fp, #4]
   35cfc:	sdiv	r2, r3, r1
   35d00:	mls	r3, r1, r2, r3
   35d04:	cmp	r3, #0
   35d08:	bne	35c48 <GetDataSlab+0x14664>
   35d0c:	add	r4, sp, #76	; 0x4c
   35d10:	add	r7, fp, #4
   35d14:	add	r5, sp, #112	; 0x70
   35d18:	ldr	r0, [sp, #28]
   35d1c:	b	35c08 <GetDataSlab+0x14624>
   35d20:	mov	r3, #0
   35d24:	b	251fc <GetDataSlab+0x3c18>
   35d28:	ldr	r3, [sp, #196]	; 0xc4
   35d2c:	ldr	r2, [r3, r0, lsl #2]
   35d30:	cmp	r2, #0
   35d34:	beq	35d48 <GetDataSlab+0x14764>
   35d38:	ldr	r3, [r5, #-4]
   35d3c:	mul	r3, r3, r2
   35d40:	add	ip, ip, r3, lsl #3
   35d44:	add	lr, lr, r3
   35d48:	add	r0, r0, #1
   35d4c:	cmp	r9, r0
   35d50:	beq	35dd8 <GetDataSlab+0x147f4>
   35d54:	ldr	r3, [r4]
   35d58:	add	r1, r3, #1
   35d5c:	str	r1, [r4]
   35d60:	ldr	r2, [r7, #4]!
   35d64:	sdiv	r3, r1, r2
   35d68:	mls	r3, r2, r3, r1
   35d6c:	cmp	r3, #0
   35d70:	bne	35dc4 <GetDataSlab+0x147e0>
   35d74:	str	r8, [r4], #4
   35d78:	add	r5, r5, #4
   35d7c:	ldr	r2, [r5]
   35d80:	sdiv	r3, lr, r2
   35d84:	mls	r3, r2, r3, lr
   35d88:	cmp	r3, #0
   35d8c:	beq	35d28 <GetDataSlab+0x14744>
   35d90:	ldr	r1, [r5, #-4]
   35d94:	str	r1, [sp, #8]
   35d98:	ldr	r1, [sp, #196]	; 0xc4
   35d9c:	ldr	r1, [r1, r0, lsl #2]
   35da0:	str	r1, [sp, #12]
   35da4:	sub	r3, r2, r3
   35da8:	mov	r2, r1
   35dac:	ldr	r1, [sp, #8]
   35db0:	mla	r3, r2, r1, r3
   35db4:	add	ip, ip, r3, lsl #3
   35db8:	add	lr, lr, r3
   35dbc:	b	35d48 <GetDataSlab+0x14764>
   35dc0:	mov	r0, #1
   35dc4:	add	r3, sp, #152	; 0x98
   35dc8:	add	r3, r3, r0, lsl #2
   35dcc:	ldr	r3, [r3, #-120]	; 0xffffff88
   35dd0:	add	lr, lr, r3
   35dd4:	add	ip, ip, r3, lsl #3
   35dd8:	ldr	r3, [sp, #20]
   35ddc:	add	r3, r3, r6
   35de0:	str	r3, [sp, #20]
   35de4:	ldr	r2, [sp, #16]
   35de8:	cmp	r3, r2
   35dec:	bge	35ea4 <GetDataSlab+0x148c0>
   35df0:	ldr	r3, [sp, #196]	; 0xc4
   35df4:	ldr	r3, [r3]
   35df8:	cmp	r3, #0
   35dfc:	addne	ip, ip, r3, lsl #3
   35e00:	addne	lr, lr, r3
   35e04:	ldr	r6, [fp]
   35e08:	cmp	r6, #0
   35e0c:	ble	35e44 <GetDataSlab+0x14860>
   35e10:	ldr	r3, [sp, #4]
   35e14:	ldr	r2, [sp, #20]
   35e18:	add	r2, r3, r2, lsl #1
   35e1c:	mov	r3, #0
   35e20:	ldr	r1, [ip]
   35e24:	strh	r1, [r2], #2
   35e28:	ldr	r1, [sl]
   35e2c:	add	ip, ip, r1, lsl #3
   35e30:	add	lr, lr, r1
   35e34:	add	r3, r3, #1
   35e38:	ldr	r6, [fp]
   35e3c:	cmp	r6, r3
   35e40:	bgt	35e20 <GetDataSlab+0x1483c>
   35e44:	ldr	r3, [sp, #192]	; 0xc0
   35e48:	ldr	r2, [r3]
   35e4c:	ldr	r3, [sp, #196]	; 0xc4
   35e50:	ldr	r3, [r3]
   35e54:	sub	r3, r2, r3
   35e58:	ldr	r2, [sl]
   35e5c:	mls	r3, r2, r6, r3
   35e60:	add	lr, lr, r3
   35e64:	add	ip, ip, r3, lsl #3
   35e68:	cmp	r9, #1
   35e6c:	ble	35dd8 <GetDataSlab+0x147f4>
   35e70:	ldr	r3, [sp, #76]	; 0x4c
   35e74:	add	r3, r3, #1
   35e78:	str	r3, [sp, #76]	; 0x4c
   35e7c:	ldr	r1, [fp, #4]
   35e80:	sdiv	r2, r3, r1
   35e84:	mls	r3, r1, r2, r3
   35e88:	cmp	r3, #0
   35e8c:	bne	35dc0 <GetDataSlab+0x147dc>
   35e90:	add	r4, sp, #76	; 0x4c
   35e94:	add	r7, fp, #4
   35e98:	add	r5, sp, #112	; 0x70
   35e9c:	mov	r0, #1
   35ea0:	b	35d74 <GetDataSlab+0x14790>
   35ea4:	mov	r3, #0
   35ea8:	b	251fc <GetDataSlab+0x3c18>
   35eac:	sub	r3, r8, #1
   35eb0:	cmp	r3, #8
   35eb4:	addls	pc, pc, r3, lsl #2
   35eb8:	b	379ec <GetDataSlab+0x16408>
   35ebc:	b	37328 <GetDataSlab+0x15d44>
   35ec0:	b	37688 <GetDataSlab+0x160a4>
   35ec4:	b	36c70 <GetDataSlab+0x1568c>
   35ec8:	b	36fcc <GetDataSlab+0x159e8>
   35ecc:	b	365b8 <GetDataSlab+0x14fd4>
   35ed0:	b	36914 <GetDataSlab+0x15330>
   35ed4:	b	3624c <GetDataSlab+0x14c68>
   35ed8:	b	379ec <GetDataSlab+0x16408>
   35edc:	b	35ee0 <GetDataSlab+0x148fc>
   35ee0:	ldr	r3, [sl]
   35ee4:	str	r3, [sp, #28]
   35ee8:	sub	r3, r3, #1
   35eec:	str	r3, [sp, #32]
   35ef0:	ldr	r3, [sp, #192]	; 0xc0
   35ef4:	ldr	r3, [r3]
   35ef8:	str	r3, [sp, #112]	; 0x70
   35efc:	ldr	r3, [fp]
   35f00:	str	r3, [sp, #16]
   35f04:	cmp	r9, #1
   35f08:	ble	35f2c <GetDataSlab+0x14948>
   35f0c:	str	sl, [sp, #20]
   35f10:	add	r8, sp, #36	; 0x24
   35f14:	ldr	r5, [sp, #192]	; 0xc0
   35f18:	add	r6, sp, #112	; 0x70
   35f1c:	str	r5, [sp, #12]
   35f20:	mov	r4, #1
   35f24:	mov	lr, #0
   35f28:	b	3c3a8 <GetDataSlab+0x1adc4>
   35f2c:	mov	lr, #0
   35f30:	b	3c440 <GetDataSlab+0x1ae5c>
   35f34:	ldr	r3, [sp, #16]
   35f38:	cmp	r3, #0
   35f3c:	ble	3a4fc <GetDataSlab+0x18f18>
   35f40:	mov	r3, #0
   35f44:	str	r3, [sp, #12]
   35f48:	mov	r8, r3
   35f4c:	b	3600c <GetDataSlab+0x14a28>
   35f50:	ldr	r3, [sp, #196]	; 0xc4
   35f54:	ldr	r3, [r3, r0, lsl #2]
   35f58:	cmp	r3, #0
   35f5c:	beq	35f70 <GetDataSlab+0x1498c>
   35f60:	ldr	r2, [r5, #-8]
   35f64:	mul	r3, r2, r3
   35f68:	add	ip, ip, r3, lsl #3
   35f6c:	add	lr, lr, r3
   35f70:	add	r0, r0, #1
   35f74:	cmp	r9, r0
   35f78:	beq	35ff0 <GetDataSlab+0x14a0c>
   35f7c:	ldr	r3, [r4]
   35f80:	add	r1, r3, #1
   35f84:	str	r1, [r4]
   35f88:	ldr	r2, [r7, #4]!
   35f8c:	sdiv	r3, r1, r2
   35f90:	mls	r3, r2, r3, r1
   35f94:	cmp	r3, #0
   35f98:	bne	35fdc <GetDataSlab+0x149f8>
   35f9c:	str	r8, [r4], #4
   35fa0:	ldr	r2, [r5], #4
   35fa4:	sdiv	r3, lr, r2
   35fa8:	mls	r3, r2, r3, lr
   35fac:	cmp	r3, #0
   35fb0:	beq	35f50 <GetDataSlab+0x1496c>
   35fb4:	ldr	r1, [r5, #-8]
   35fb8:	ldr	sl, [sp, #196]	; 0xc4
   35fbc:	ldr	sl, [sl, r0, lsl #2]
   35fc0:	str	sl, [sp, #8]
   35fc4:	sub	r3, r2, r3
   35fc8:	mla	r3, sl, r1, r3
   35fcc:	add	ip, ip, r3, lsl #3
   35fd0:	add	lr, lr, r3
   35fd4:	b	35f70 <GetDataSlab+0x1498c>
   35fd8:	ldr	r0, [sp, #28]
   35fdc:	add	r3, sp, #152	; 0x98
   35fe0:	add	r3, r3, r0, lsl #2
   35fe4:	ldr	r3, [r3, #-120]	; 0xffffff88
   35fe8:	add	lr, lr, r3
   35fec:	add	ip, ip, r3, lsl #3
   35ff0:	ldr	r3, [sp, #12]
   35ff4:	add	r3, r3, r6
   35ff8:	str	r3, [sp, #12]
   35ffc:	ldr	r3, [sp, #16]
   36000:	ldr	r2, [sp, #12]
   36004:	cmp	r2, r3
   36008:	bge	360b8 <GetDataSlab+0x14ad4>
   3600c:	ldr	r3, [sp, #196]	; 0xc4
   36010:	ldr	r3, [r3]
   36014:	cmp	r3, #0
   36018:	addne	ip, ip, r3, lsl #3
   3601c:	addne	lr, lr, r3
   36020:	ldr	r6, [fp]
   36024:	cmp	r6, #0
   36028:	ble	36060 <GetDataSlab+0x14a7c>
   3602c:	mov	r1, ip
   36030:	ldr	r3, [sp, #4]
   36034:	ldr	r2, [sp, #12]
   36038:	add	r2, r3, r2
   3603c:	mov	r0, r2
   36040:	vldmia	r1!, {d7}
   36044:	vcvt.s32.f64	s15, d7
   36048:	vmov	r3, s15
   3604c:	strb	r3, [r2], #1
   36050:	ldr	r6, [fp]
   36054:	sub	r3, r2, r0
   36058:	cmp	r6, r3
   3605c:	bgt	36040 <GetDataSlab+0x14a5c>
   36060:	ldr	r3, [sp, #192]	; 0xc0
   36064:	ldr	r2, [r3]
   36068:	ldr	r3, [sp, #196]	; 0xc4
   3606c:	ldr	r3, [r3]
   36070:	sub	r3, r2, r3
   36074:	add	lr, lr, r3
   36078:	add	ip, ip, r3, lsl #3
   3607c:	cmp	r9, #1
   36080:	ble	35ff0 <GetDataSlab+0x14a0c>
   36084:	ldr	r3, [sp, #76]	; 0x4c
   36088:	add	r3, r3, #1
   3608c:	str	r3, [sp, #76]	; 0x4c
   36090:	ldr	r1, [fp, #4]
   36094:	sdiv	r2, r3, r1
   36098:	mls	r3, r1, r2, r3
   3609c:	cmp	r3, #0
   360a0:	bne	35fd8 <GetDataSlab+0x149f4>
   360a4:	add	r4, sp, #76	; 0x4c
   360a8:	add	r7, fp, #4
   360ac:	add	r5, sp, #116	; 0x74
   360b0:	ldr	r0, [sp, #28]
   360b4:	b	35f9c <GetDataSlab+0x149b8>
   360b8:	mov	r3, #0
   360bc:	b	251fc <GetDataSlab+0x3c18>
   360c0:	ldr	r3, [sp, #196]	; 0xc4
   360c4:	ldr	r2, [r3, r0, lsl #2]
   360c8:	cmp	r2, #0
   360cc:	beq	360e0 <GetDataSlab+0x14afc>
   360d0:	ldr	r3, [r5, #-4]
   360d4:	mul	r3, r3, r2
   360d8:	add	ip, ip, r3, lsl #3
   360dc:	add	lr, lr, r3
   360e0:	add	r0, r0, #1
   360e4:	cmp	r9, r0
   360e8:	beq	36170 <GetDataSlab+0x14b8c>
   360ec:	ldr	r3, [r4]
   360f0:	add	r1, r3, #1
   360f4:	str	r1, [r4]
   360f8:	ldr	r2, [r7, #4]!
   360fc:	sdiv	r3, r1, r2
   36100:	mls	r3, r2, r3, r1
   36104:	cmp	r3, #0
   36108:	bne	3615c <GetDataSlab+0x14b78>
   3610c:	str	r8, [r4], #4
   36110:	add	r5, r5, #4
   36114:	ldr	r2, [r5]
   36118:	sdiv	r3, lr, r2
   3611c:	mls	r3, r2, r3, lr
   36120:	cmp	r3, #0
   36124:	beq	360c0 <GetDataSlab+0x14adc>
   36128:	ldr	r1, [r5, #-4]
   3612c:	str	r1, [sp, #8]
   36130:	ldr	r1, [sp, #196]	; 0xc4
   36134:	ldr	r1, [r1, r0, lsl #2]
   36138:	str	r1, [sp, #12]
   3613c:	sub	r3, r2, r3
   36140:	mov	r2, r1
   36144:	ldr	r1, [sp, #8]
   36148:	mla	r3, r2, r1, r3
   3614c:	add	ip, ip, r3, lsl #3
   36150:	add	lr, lr, r3
   36154:	b	360e0 <GetDataSlab+0x14afc>
   36158:	mov	r0, #1
   3615c:	add	r3, sp, #152	; 0x98
   36160:	add	r3, r3, r0, lsl #2
   36164:	ldr	r3, [r3, #-120]	; 0xffffff88
   36168:	add	lr, lr, r3
   3616c:	add	ip, ip, r3, lsl #3
   36170:	ldr	r3, [sp, #20]
   36174:	add	r3, r3, r6
   36178:	str	r3, [sp, #20]
   3617c:	ldr	r2, [sp, #16]
   36180:	cmp	r3, r2
   36184:	bge	36244 <GetDataSlab+0x14c60>
   36188:	ldr	r3, [sp, #196]	; 0xc4
   3618c:	ldr	r3, [r3]
   36190:	cmp	r3, #0
   36194:	addne	ip, ip, r3, lsl #3
   36198:	addne	lr, lr, r3
   3619c:	ldr	r6, [fp]
   361a0:	cmp	r6, #0
   361a4:	ble	361e4 <GetDataSlab+0x14c00>
   361a8:	ldr	r3, [sp, #4]
   361ac:	ldr	r2, [sp, #20]
   361b0:	add	r3, r3, r2
   361b4:	mov	r1, r3
   361b8:	vldr	d7, [ip]
   361bc:	vcvt.s32.f64	s15, d7
   361c0:	vmov	r2, s15
   361c4:	strb	r2, [r3], #1
   361c8:	ldr	r2, [sl]
   361cc:	add	ip, ip, r2, lsl #3
   361d0:	add	lr, lr, r2
   361d4:	ldr	r6, [fp]
   361d8:	sub	r2, r3, r1
   361dc:	cmp	r6, r2
   361e0:	bgt	361b8 <GetDataSlab+0x14bd4>
   361e4:	ldr	r3, [sp, #192]	; 0xc0
   361e8:	ldr	r2, [r3]
   361ec:	ldr	r3, [sp, #196]	; 0xc4
   361f0:	ldr	r3, [r3]
   361f4:	sub	r3, r2, r3
   361f8:	ldr	r2, [sl]
   361fc:	mls	r3, r2, r6, r3
   36200:	add	lr, lr, r3
   36204:	add	ip, ip, r3, lsl #3
   36208:	cmp	r9, #1
   3620c:	ble	36170 <GetDataSlab+0x14b8c>
   36210:	ldr	r3, [sp, #76]	; 0x4c
   36214:	add	r3, r3, #1
   36218:	str	r3, [sp, #76]	; 0x4c
   3621c:	ldr	r1, [fp, #4]
   36220:	sdiv	r2, r3, r1
   36224:	mls	r3, r1, r2, r3
   36228:	cmp	r3, #0
   3622c:	bne	36158 <GetDataSlab+0x14b74>
   36230:	add	r4, sp, #76	; 0x4c
   36234:	add	r7, fp, #4
   36238:	add	r5, sp, #112	; 0x70
   3623c:	mov	r0, #1
   36240:	b	3610c <GetDataSlab+0x14b28>
   36244:	mov	r3, #0
   36248:	b	251fc <GetDataSlab+0x3c18>
   3624c:	ldr	r3, [sl]
   36250:	str	r3, [sp, #28]
   36254:	sub	r3, r3, #1
   36258:	str	r3, [sp, #32]
   3625c:	ldr	r3, [sp, #192]	; 0xc0
   36260:	ldr	r3, [r3]
   36264:	str	r3, [sp, #112]	; 0x70
   36268:	ldr	r3, [fp]
   3626c:	str	r3, [sp, #16]
   36270:	cmp	r9, #1
   36274:	ble	36298 <GetDataSlab+0x14cb4>
   36278:	str	sl, [sp, #20]
   3627c:	add	r8, sp, #36	; 0x24
   36280:	ldr	r5, [sp, #192]	; 0xc0
   36284:	add	r6, sp, #112	; 0x70
   36288:	str	r5, [sp, #12]
   3628c:	mov	r4, #1
   36290:	mov	lr, #0
   36294:	b	3c2b8 <GetDataSlab+0x1acd4>
   36298:	mov	lr, #0
   3629c:	b	3c350 <GetDataSlab+0x1ad6c>
   362a0:	ldr	r3, [sp, #16]
   362a4:	cmp	r3, #0
   362a8:	ble	3a504 <GetDataSlab+0x18f20>
   362ac:	mov	r3, #0
   362b0:	str	r3, [sp, #12]
   362b4:	mov	r8, r3
   362b8:	b	36378 <GetDataSlab+0x14d94>
   362bc:	ldr	r3, [sp, #196]	; 0xc4
   362c0:	ldr	r3, [r3, r0, lsl #2]
   362c4:	cmp	r3, #0
   362c8:	beq	362dc <GetDataSlab+0x14cf8>
   362cc:	ldr	r2, [r5, #-8]
   362d0:	mul	r3, r2, r3
   362d4:	add	ip, ip, r3, lsl #2
   362d8:	add	lr, lr, r3
   362dc:	add	r0, r0, #1
   362e0:	cmp	r9, r0
   362e4:	beq	3635c <GetDataSlab+0x14d78>
   362e8:	ldr	r3, [r4]
   362ec:	add	r1, r3, #1
   362f0:	str	r1, [r4]
   362f4:	ldr	r2, [r7, #4]!
   362f8:	sdiv	r3, r1, r2
   362fc:	mls	r3, r2, r3, r1
   36300:	cmp	r3, #0
   36304:	bne	36348 <GetDataSlab+0x14d64>
   36308:	str	r8, [r4], #4
   3630c:	ldr	r2, [r5], #4
   36310:	sdiv	r3, lr, r2
   36314:	mls	r3, r2, r3, lr
   36318:	cmp	r3, #0
   3631c:	beq	362bc <GetDataSlab+0x14cd8>
   36320:	ldr	r1, [r5, #-8]
   36324:	ldr	sl, [sp, #196]	; 0xc4
   36328:	ldr	sl, [sl, r0, lsl #2]
   3632c:	str	sl, [sp, #8]
   36330:	sub	r3, r2, r3
   36334:	mla	r3, sl, r1, r3
   36338:	add	ip, ip, r3, lsl #2
   3633c:	add	lr, lr, r3
   36340:	b	362dc <GetDataSlab+0x14cf8>
   36344:	ldr	r0, [sp, #28]
   36348:	add	r3, sp, #152	; 0x98
   3634c:	add	r3, r3, r0, lsl #2
   36350:	ldr	r3, [r3, #-120]	; 0xffffff88
   36354:	add	lr, lr, r3
   36358:	add	ip, ip, r3, lsl #2
   3635c:	ldr	r3, [sp, #12]
   36360:	add	r3, r3, r6
   36364:	str	r3, [sp, #12]
   36368:	ldr	r3, [sp, #16]
   3636c:	ldr	r2, [sp, #12]
   36370:	cmp	r2, r3
   36374:	bge	36424 <GetDataSlab+0x14e40>
   36378:	ldr	r3, [sp, #196]	; 0xc4
   3637c:	ldr	r3, [r3]
   36380:	cmp	r3, #0
   36384:	addne	ip, ip, r3, lsl #2
   36388:	addne	lr, lr, r3
   3638c:	ldr	r6, [fp]
   36390:	cmp	r6, #0
   36394:	ble	363cc <GetDataSlab+0x14de8>
   36398:	mov	r1, ip
   3639c:	ldr	r3, [sp, #4]
   363a0:	ldr	r2, [sp, #12]
   363a4:	add	r2, r3, r2
   363a8:	mov	r0, r2
   363ac:	vldmia	r1!, {s15}
   363b0:	vcvt.s32.f32	s15, s15
   363b4:	vmov	r3, s15
   363b8:	strb	r3, [r2], #1
   363bc:	ldr	r6, [fp]
   363c0:	sub	r3, r2, r0
   363c4:	cmp	r6, r3
   363c8:	bgt	363ac <GetDataSlab+0x14dc8>
   363cc:	ldr	r3, [sp, #192]	; 0xc0
   363d0:	ldr	r2, [r3]
   363d4:	ldr	r3, [sp, #196]	; 0xc4
   363d8:	ldr	r3, [r3]
   363dc:	sub	r3, r2, r3
   363e0:	add	lr, lr, r3
   363e4:	add	ip, ip, r3, lsl #2
   363e8:	cmp	r9, #1
   363ec:	ble	3635c <GetDataSlab+0x14d78>
   363f0:	ldr	r3, [sp, #76]	; 0x4c
   363f4:	add	r3, r3, #1
   363f8:	str	r3, [sp, #76]	; 0x4c
   363fc:	ldr	r1, [fp, #4]
   36400:	sdiv	r2, r3, r1
   36404:	mls	r3, r1, r2, r3
   36408:	cmp	r3, #0
   3640c:	bne	36344 <GetDataSlab+0x14d60>
   36410:	add	r4, sp, #76	; 0x4c
   36414:	add	r7, fp, #4
   36418:	add	r5, sp, #116	; 0x74
   3641c:	ldr	r0, [sp, #28]
   36420:	b	36308 <GetDataSlab+0x14d24>
   36424:	mov	r3, #0
   36428:	b	251fc <GetDataSlab+0x3c18>
   3642c:	ldr	r3, [sp, #196]	; 0xc4
   36430:	ldr	r2, [r3, r0, lsl #2]
   36434:	cmp	r2, #0
   36438:	beq	3644c <GetDataSlab+0x14e68>
   3643c:	ldr	r3, [r5, #-4]
   36440:	mul	r3, r3, r2
   36444:	add	ip, ip, r3, lsl #2
   36448:	add	lr, lr, r3
   3644c:	add	r0, r0, #1
   36450:	cmp	r9, r0
   36454:	beq	364dc <GetDataSlab+0x14ef8>
   36458:	ldr	r3, [r4]
   3645c:	add	r1, r3, #1
   36460:	str	r1, [r4]
   36464:	ldr	r2, [r7, #4]!
   36468:	sdiv	r3, r1, r2
   3646c:	mls	r3, r2, r3, r1
   36470:	cmp	r3, #0
   36474:	bne	364c8 <GetDataSlab+0x14ee4>
   36478:	str	r8, [r4], #4
   3647c:	add	r5, r5, #4
   36480:	ldr	r2, [r5]
   36484:	sdiv	r3, lr, r2
   36488:	mls	r3, r2, r3, lr
   3648c:	cmp	r3, #0
   36490:	beq	3642c <GetDataSlab+0x14e48>
   36494:	ldr	r1, [r5, #-4]
   36498:	str	r1, [sp, #8]
   3649c:	ldr	r1, [sp, #196]	; 0xc4
   364a0:	ldr	r1, [r1, r0, lsl #2]
   364a4:	str	r1, [sp, #12]
   364a8:	sub	r3, r2, r3
   364ac:	mov	r2, r1
   364b0:	ldr	r1, [sp, #8]
   364b4:	mla	r3, r2, r1, r3
   364b8:	add	ip, ip, r3, lsl #2
   364bc:	add	lr, lr, r3
   364c0:	b	3644c <GetDataSlab+0x14e68>
   364c4:	mov	r0, #1
   364c8:	add	r3, sp, #152	; 0x98
   364cc:	add	r3, r3, r0, lsl #2
   364d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   364d4:	add	lr, lr, r3
   364d8:	add	ip, ip, r3, lsl #2
   364dc:	ldr	r3, [sp, #20]
   364e0:	add	r3, r3, r6
   364e4:	str	r3, [sp, #20]
   364e8:	ldr	r2, [sp, #16]
   364ec:	cmp	r3, r2
   364f0:	bge	365b0 <GetDataSlab+0x14fcc>
   364f4:	ldr	r3, [sp, #196]	; 0xc4
   364f8:	ldr	r3, [r3]
   364fc:	cmp	r3, #0
   36500:	addne	ip, ip, r3, lsl #2
   36504:	addne	lr, lr, r3
   36508:	ldr	r6, [fp]
   3650c:	cmp	r6, #0
   36510:	ble	36550 <GetDataSlab+0x14f6c>
   36514:	ldr	r3, [sp, #4]
   36518:	ldr	r2, [sp, #20]
   3651c:	add	r3, r3, r2
   36520:	mov	r1, r3
   36524:	vldr	s15, [ip]
   36528:	vcvt.s32.f32	s15, s15
   3652c:	vmov	r2, s15
   36530:	strb	r2, [r3], #1
   36534:	ldr	r2, [sl]
   36538:	add	ip, ip, r2, lsl #2
   3653c:	add	lr, lr, r2
   36540:	ldr	r6, [fp]
   36544:	sub	r2, r3, r1
   36548:	cmp	r6, r2
   3654c:	bgt	36524 <GetDataSlab+0x14f40>
   36550:	ldr	r3, [sp, #192]	; 0xc0
   36554:	ldr	r2, [r3]
   36558:	ldr	r3, [sp, #196]	; 0xc4
   3655c:	ldr	r3, [r3]
   36560:	sub	r3, r2, r3
   36564:	ldr	r2, [sl]
   36568:	mls	r3, r2, r6, r3
   3656c:	add	lr, lr, r3
   36570:	add	ip, ip, r3, lsl #2
   36574:	cmp	r9, #1
   36578:	ble	364dc <GetDataSlab+0x14ef8>
   3657c:	ldr	r3, [sp, #76]	; 0x4c
   36580:	add	r3, r3, #1
   36584:	str	r3, [sp, #76]	; 0x4c
   36588:	ldr	r1, [fp, #4]
   3658c:	sdiv	r2, r3, r1
   36590:	mls	r3, r1, r2, r3
   36594:	cmp	r3, #0
   36598:	bne	364c4 <GetDataSlab+0x14ee0>
   3659c:	add	r4, sp, #76	; 0x4c
   365a0:	add	r7, fp, #4
   365a4:	add	r5, sp, #112	; 0x70
   365a8:	mov	r0, #1
   365ac:	b	36478 <GetDataSlab+0x14e94>
   365b0:	mov	r3, #0
   365b4:	b	251fc <GetDataSlab+0x3c18>
   365b8:	ldr	r3, [sl]
   365bc:	str	r3, [sp, #28]
   365c0:	sub	r3, r3, #1
   365c4:	str	r3, [sp, #32]
   365c8:	ldr	r3, [sp, #192]	; 0xc0
   365cc:	ldr	r3, [r3]
   365d0:	str	r3, [sp, #112]	; 0x70
   365d4:	ldr	r3, [fp]
   365d8:	str	r3, [sp, #16]
   365dc:	cmp	r9, #1
   365e0:	ble	36604 <GetDataSlab+0x15020>
   365e4:	str	sl, [sp, #20]
   365e8:	add	r8, sp, #36	; 0x24
   365ec:	ldr	r5, [sp, #192]	; 0xc0
   365f0:	add	r6, sp, #112	; 0x70
   365f4:	str	r5, [sp, #12]
   365f8:	mov	r4, #1
   365fc:	mov	lr, #0
   36600:	b	3c0d8 <GetDataSlab+0x1aaf4>
   36604:	mov	lr, #0
   36608:	b	3c170 <GetDataSlab+0x1ab8c>
   3660c:	ldr	r3, [sp, #16]
   36610:	cmp	r3, #0
   36614:	ble	3a50c <GetDataSlab+0x18f28>
   36618:	mov	r3, #0
   3661c:	str	r3, [sp, #12]
   36620:	mov	r8, r3
   36624:	b	366e4 <GetDataSlab+0x15100>
   36628:	ldr	r3, [sp, #196]	; 0xc4
   3662c:	ldr	r3, [r3, r0, lsl #2]
   36630:	cmp	r3, #0
   36634:	beq	36648 <GetDataSlab+0x15064>
   36638:	ldr	r2, [r5, #-8]
   3663c:	mul	r3, r2, r3
   36640:	add	ip, ip, r3, lsl #2
   36644:	add	lr, lr, r3
   36648:	add	r0, r0, #1
   3664c:	cmp	r9, r0
   36650:	beq	366c8 <GetDataSlab+0x150e4>
   36654:	ldr	r3, [r4]
   36658:	add	r1, r3, #1
   3665c:	str	r1, [r4]
   36660:	ldr	r2, [r7, #4]!
   36664:	sdiv	r3, r1, r2
   36668:	mls	r3, r2, r3, r1
   3666c:	cmp	r3, #0
   36670:	bne	366b4 <GetDataSlab+0x150d0>
   36674:	str	r8, [r4], #4
   36678:	ldr	r2, [r5], #4
   3667c:	sdiv	r3, lr, r2
   36680:	mls	r3, r2, r3, lr
   36684:	cmp	r3, #0
   36688:	beq	36628 <GetDataSlab+0x15044>
   3668c:	ldr	r1, [r5, #-8]
   36690:	ldr	sl, [sp, #196]	; 0xc4
   36694:	ldr	sl, [sl, r0, lsl #2]
   36698:	str	sl, [sp, #8]
   3669c:	sub	r3, r2, r3
   366a0:	mla	r3, sl, r1, r3
   366a4:	add	ip, ip, r3, lsl #2
   366a8:	add	lr, lr, r3
   366ac:	b	36648 <GetDataSlab+0x15064>
   366b0:	ldr	r0, [sp, #28]
   366b4:	add	r3, sp, #152	; 0x98
   366b8:	add	r3, r3, r0, lsl #2
   366bc:	ldr	r3, [r3, #-120]	; 0xffffff88
   366c0:	add	lr, lr, r3
   366c4:	add	ip, ip, r3, lsl #2
   366c8:	ldr	r3, [sp, #12]
   366cc:	add	r3, r3, r6
   366d0:	str	r3, [sp, #12]
   366d4:	ldr	r3, [sp, #16]
   366d8:	ldr	r2, [sp, #12]
   366dc:	cmp	r2, r3
   366e0:	bge	36788 <GetDataSlab+0x151a4>
   366e4:	ldr	r3, [sp, #196]	; 0xc4
   366e8:	ldr	r3, [r3]
   366ec:	cmp	r3, #0
   366f0:	addne	ip, ip, r3, lsl #2
   366f4:	addne	lr, lr, r3
   366f8:	ldr	r6, [fp]
   366fc:	cmp	r6, #0
   36700:	ble	36730 <GetDataSlab+0x1514c>
   36704:	sub	r1, ip, #4
   36708:	ldr	r3, [sp, #4]
   3670c:	ldr	r2, [sp, #12]
   36710:	add	r2, r3, r2
   36714:	mov	r0, r2
   36718:	ldr	r3, [r1, #4]!
   3671c:	strb	r3, [r2], #1
   36720:	ldr	r6, [fp]
   36724:	sub	r3, r2, r0
   36728:	cmp	r6, r3
   3672c:	bgt	36718 <GetDataSlab+0x15134>
   36730:	ldr	r3, [sp, #192]	; 0xc0
   36734:	ldr	r2, [r3]
   36738:	ldr	r3, [sp, #196]	; 0xc4
   3673c:	ldr	r3, [r3]
   36740:	sub	r3, r2, r3
   36744:	add	lr, lr, r3
   36748:	add	ip, ip, r3, lsl #2
   3674c:	cmp	r9, #1
   36750:	ble	366c8 <GetDataSlab+0x150e4>
   36754:	ldr	r3, [sp, #76]	; 0x4c
   36758:	add	r3, r3, #1
   3675c:	str	r3, [sp, #76]	; 0x4c
   36760:	ldr	r1, [fp, #4]
   36764:	sdiv	r2, r3, r1
   36768:	mls	r3, r1, r2, r3
   3676c:	cmp	r3, #0
   36770:	bne	366b0 <GetDataSlab+0x150cc>
   36774:	add	r4, sp, #76	; 0x4c
   36778:	add	r7, fp, #4
   3677c:	add	r5, sp, #116	; 0x74
   36780:	ldr	r0, [sp, #28]
   36784:	b	36674 <GetDataSlab+0x15090>
   36788:	mov	r3, #0
   3678c:	b	251fc <GetDataSlab+0x3c18>
   36790:	ldr	r3, [sp, #196]	; 0xc4
   36794:	ldr	r2, [r3, r0, lsl #2]
   36798:	cmp	r2, #0
   3679c:	beq	367b0 <GetDataSlab+0x151cc>
   367a0:	ldr	r3, [r5, #-4]
   367a4:	mul	r3, r3, r2
   367a8:	add	ip, ip, r3, lsl #2
   367ac:	add	lr, lr, r3
   367b0:	add	r0, r0, #1
   367b4:	cmp	r9, r0
   367b8:	beq	36840 <GetDataSlab+0x1525c>
   367bc:	ldr	r3, [r4]
   367c0:	add	r1, r3, #1
   367c4:	str	r1, [r4]
   367c8:	ldr	r2, [r7, #4]!
   367cc:	sdiv	r3, r1, r2
   367d0:	mls	r3, r2, r3, r1
   367d4:	cmp	r3, #0
   367d8:	bne	3682c <GetDataSlab+0x15248>
   367dc:	str	r8, [r4], #4
   367e0:	add	r5, r5, #4
   367e4:	ldr	r2, [r5]
   367e8:	sdiv	r3, lr, r2
   367ec:	mls	r3, r2, r3, lr
   367f0:	cmp	r3, #0
   367f4:	beq	36790 <GetDataSlab+0x151ac>
   367f8:	ldr	r1, [r5, #-4]
   367fc:	str	r1, [sp, #8]
   36800:	ldr	r1, [sp, #196]	; 0xc4
   36804:	ldr	r1, [r1, r0, lsl #2]
   36808:	str	r1, [sp, #12]
   3680c:	sub	r3, r2, r3
   36810:	mov	r2, r1
   36814:	ldr	r1, [sp, #8]
   36818:	mla	r3, r2, r1, r3
   3681c:	add	ip, ip, r3, lsl #2
   36820:	add	lr, lr, r3
   36824:	b	367b0 <GetDataSlab+0x151cc>
   36828:	mov	r0, #1
   3682c:	add	r3, sp, #152	; 0x98
   36830:	add	r3, r3, r0, lsl #2
   36834:	ldr	r3, [r3, #-120]	; 0xffffff88
   36838:	add	lr, lr, r3
   3683c:	add	ip, ip, r3, lsl #2
   36840:	ldr	r3, [sp, #20]
   36844:	add	r3, r3, r6
   36848:	str	r3, [sp, #20]
   3684c:	ldr	r2, [sp, #16]
   36850:	cmp	r3, r2
   36854:	bge	3690c <GetDataSlab+0x15328>
   36858:	ldr	r3, [sp, #196]	; 0xc4
   3685c:	ldr	r3, [r3]
   36860:	cmp	r3, #0
   36864:	addne	ip, ip, r3, lsl #2
   36868:	addne	lr, lr, r3
   3686c:	ldr	r6, [fp]
   36870:	cmp	r6, #0
   36874:	ble	368ac <GetDataSlab+0x152c8>
   36878:	ldr	r3, [sp, #4]
   3687c:	ldr	r2, [sp, #20]
   36880:	add	r3, r3, r2
   36884:	mov	r1, r3
   36888:	ldr	r2, [ip]
   3688c:	strb	r2, [r3], #1
   36890:	ldr	r2, [sl]
   36894:	add	ip, ip, r2, lsl #2
   36898:	add	lr, lr, r2
   3689c:	ldr	r6, [fp]
   368a0:	sub	r2, r3, r1
   368a4:	cmp	r6, r2
   368a8:	bgt	36888 <GetDataSlab+0x152a4>
   368ac:	ldr	r3, [sp, #192]	; 0xc0
   368b0:	ldr	r2, [r3]
   368b4:	ldr	r3, [sp, #196]	; 0xc4
   368b8:	ldr	r3, [r3]
   368bc:	sub	r3, r2, r3
   368c0:	ldr	r2, [sl]
   368c4:	mls	r3, r2, r6, r3
   368c8:	add	lr, lr, r3
   368cc:	add	ip, ip, r3, lsl #2
   368d0:	cmp	r9, #1
   368d4:	ble	36840 <GetDataSlab+0x1525c>
   368d8:	ldr	r3, [sp, #76]	; 0x4c
   368dc:	add	r3, r3, #1
   368e0:	str	r3, [sp, #76]	; 0x4c
   368e4:	ldr	r1, [fp, #4]
   368e8:	sdiv	r2, r3, r1
   368ec:	mls	r3, r1, r2, r3
   368f0:	cmp	r3, #0
   368f4:	bne	36828 <GetDataSlab+0x15244>
   368f8:	add	r4, sp, #76	; 0x4c
   368fc:	add	r7, fp, #4
   36900:	add	r5, sp, #112	; 0x70
   36904:	mov	r0, #1
   36908:	b	367dc <GetDataSlab+0x151f8>
   3690c:	mov	r3, #0
   36910:	b	251fc <GetDataSlab+0x3c18>
   36914:	ldr	r3, [sl]
   36918:	str	r3, [sp, #28]
   3691c:	sub	r3, r3, #1
   36920:	str	r3, [sp, #32]
   36924:	ldr	r3, [sp, #192]	; 0xc0
   36928:	ldr	r3, [r3]
   3692c:	str	r3, [sp, #112]	; 0x70
   36930:	ldr	r3, [fp]
   36934:	str	r3, [sp, #16]
   36938:	cmp	r9, #1
   3693c:	ble	36960 <GetDataSlab+0x1537c>
   36940:	str	sl, [sp, #20]
   36944:	add	r8, sp, #36	; 0x24
   36948:	ldr	r5, [sp, #192]	; 0xc0
   3694c:	add	r6, sp, #112	; 0x70
   36950:	str	r5, [sp, #12]
   36954:	mov	r4, #1
   36958:	mov	lr, #0
   3695c:	b	3c1c8 <GetDataSlab+0x1abe4>
   36960:	mov	lr, #0
   36964:	b	3c260 <GetDataSlab+0x1ac7c>
   36968:	ldr	r3, [sp, #16]
   3696c:	cmp	r3, #0
   36970:	ble	3a514 <GetDataSlab+0x18f30>
   36974:	mov	r3, #0
   36978:	str	r3, [sp, #12]
   3697c:	mov	r8, r3
   36980:	b	36a40 <GetDataSlab+0x1545c>
   36984:	ldr	r3, [sp, #196]	; 0xc4
   36988:	ldr	r3, [r3, r0, lsl #2]
   3698c:	cmp	r3, #0
   36990:	beq	369a4 <GetDataSlab+0x153c0>
   36994:	ldr	r2, [r5, #-8]
   36998:	mul	r3, r2, r3
   3699c:	add	ip, ip, r3, lsl #2
   369a0:	add	lr, lr, r3
   369a4:	add	r0, r0, #1
   369a8:	cmp	r9, r0
   369ac:	beq	36a24 <GetDataSlab+0x15440>
   369b0:	ldr	r3, [r4]
   369b4:	add	r1, r3, #1
   369b8:	str	r1, [r4]
   369bc:	ldr	r2, [r7, #4]!
   369c0:	sdiv	r3, r1, r2
   369c4:	mls	r3, r2, r3, r1
   369c8:	cmp	r3, #0
   369cc:	bne	36a10 <GetDataSlab+0x1542c>
   369d0:	str	r8, [r4], #4
   369d4:	ldr	r2, [r5], #4
   369d8:	sdiv	r3, lr, r2
   369dc:	mls	r3, r2, r3, lr
   369e0:	cmp	r3, #0
   369e4:	beq	36984 <GetDataSlab+0x153a0>
   369e8:	ldr	r1, [r5, #-8]
   369ec:	ldr	sl, [sp, #196]	; 0xc4
   369f0:	ldr	sl, [sl, r0, lsl #2]
   369f4:	str	sl, [sp, #8]
   369f8:	sub	r3, r2, r3
   369fc:	mla	r3, sl, r1, r3
   36a00:	add	ip, ip, r3, lsl #2
   36a04:	add	lr, lr, r3
   36a08:	b	369a4 <GetDataSlab+0x153c0>
   36a0c:	ldr	r0, [sp, #28]
   36a10:	add	r3, sp, #152	; 0x98
   36a14:	add	r3, r3, r0, lsl #2
   36a18:	ldr	r3, [r3, #-120]	; 0xffffff88
   36a1c:	add	lr, lr, r3
   36a20:	add	ip, ip, r3, lsl #2
   36a24:	ldr	r3, [sp, #12]
   36a28:	add	r3, r3, r6
   36a2c:	str	r3, [sp, #12]
   36a30:	ldr	r3, [sp, #16]
   36a34:	ldr	r2, [sp, #12]
   36a38:	cmp	r2, r3
   36a3c:	bge	36ae4 <GetDataSlab+0x15500>
   36a40:	ldr	r3, [sp, #196]	; 0xc4
   36a44:	ldr	r3, [r3]
   36a48:	cmp	r3, #0
   36a4c:	addne	ip, ip, r3, lsl #2
   36a50:	addne	lr, lr, r3
   36a54:	ldr	r6, [fp]
   36a58:	cmp	r6, #0
   36a5c:	ble	36a8c <GetDataSlab+0x154a8>
   36a60:	sub	r1, ip, #4
   36a64:	ldr	r3, [sp, #4]
   36a68:	ldr	r2, [sp, #12]
   36a6c:	add	r2, r3, r2
   36a70:	mov	r0, r2
   36a74:	ldr	r3, [r1, #4]!
   36a78:	strb	r3, [r2], #1
   36a7c:	ldr	r6, [fp]
   36a80:	sub	r3, r2, r0
   36a84:	cmp	r6, r3
   36a88:	bgt	36a74 <GetDataSlab+0x15490>
   36a8c:	ldr	r3, [sp, #192]	; 0xc0
   36a90:	ldr	r2, [r3]
   36a94:	ldr	r3, [sp, #196]	; 0xc4
   36a98:	ldr	r3, [r3]
   36a9c:	sub	r3, r2, r3
   36aa0:	add	lr, lr, r3
   36aa4:	add	ip, ip, r3, lsl #2
   36aa8:	cmp	r9, #1
   36aac:	ble	36a24 <GetDataSlab+0x15440>
   36ab0:	ldr	r3, [sp, #76]	; 0x4c
   36ab4:	add	r3, r3, #1
   36ab8:	str	r3, [sp, #76]	; 0x4c
   36abc:	ldr	r1, [fp, #4]
   36ac0:	sdiv	r2, r3, r1
   36ac4:	mls	r3, r1, r2, r3
   36ac8:	cmp	r3, #0
   36acc:	bne	36a0c <GetDataSlab+0x15428>
   36ad0:	add	r4, sp, #76	; 0x4c
   36ad4:	add	r7, fp, #4
   36ad8:	add	r5, sp, #116	; 0x74
   36adc:	ldr	r0, [sp, #28]
   36ae0:	b	369d0 <GetDataSlab+0x153ec>
   36ae4:	mov	r3, #0
   36ae8:	b	251fc <GetDataSlab+0x3c18>
   36aec:	ldr	r3, [sp, #196]	; 0xc4
   36af0:	ldr	r2, [r3, r0, lsl #2]
   36af4:	cmp	r2, #0
   36af8:	beq	36b0c <GetDataSlab+0x15528>
   36afc:	ldr	r3, [r5, #-4]
   36b00:	mul	r3, r3, r2
   36b04:	add	ip, ip, r3, lsl #2
   36b08:	add	lr, lr, r3
   36b0c:	add	r0, r0, #1
   36b10:	cmp	r9, r0
   36b14:	beq	36b9c <GetDataSlab+0x155b8>
   36b18:	ldr	r3, [r4]
   36b1c:	add	r1, r3, #1
   36b20:	str	r1, [r4]
   36b24:	ldr	r2, [r7, #4]!
   36b28:	sdiv	r3, r1, r2
   36b2c:	mls	r3, r2, r3, r1
   36b30:	cmp	r3, #0
   36b34:	bne	36b88 <GetDataSlab+0x155a4>
   36b38:	str	r8, [r4], #4
   36b3c:	add	r5, r5, #4
   36b40:	ldr	r2, [r5]
   36b44:	sdiv	r3, lr, r2
   36b48:	mls	r3, r2, r3, lr
   36b4c:	cmp	r3, #0
   36b50:	beq	36aec <GetDataSlab+0x15508>
   36b54:	ldr	r1, [r5, #-4]
   36b58:	str	r1, [sp, #8]
   36b5c:	ldr	r1, [sp, #196]	; 0xc4
   36b60:	ldr	r1, [r1, r0, lsl #2]
   36b64:	str	r1, [sp, #12]
   36b68:	sub	r3, r2, r3
   36b6c:	mov	r2, r1
   36b70:	ldr	r1, [sp, #8]
   36b74:	mla	r3, r2, r1, r3
   36b78:	add	ip, ip, r3, lsl #2
   36b7c:	add	lr, lr, r3
   36b80:	b	36b0c <GetDataSlab+0x15528>
   36b84:	mov	r0, #1
   36b88:	add	r3, sp, #152	; 0x98
   36b8c:	add	r3, r3, r0, lsl #2
   36b90:	ldr	r3, [r3, #-120]	; 0xffffff88
   36b94:	add	lr, lr, r3
   36b98:	add	ip, ip, r3, lsl #2
   36b9c:	ldr	r3, [sp, #20]
   36ba0:	add	r3, r3, r6
   36ba4:	str	r3, [sp, #20]
   36ba8:	ldr	r2, [sp, #16]
   36bac:	cmp	r3, r2
   36bb0:	bge	36c68 <GetDataSlab+0x15684>
   36bb4:	ldr	r3, [sp, #196]	; 0xc4
   36bb8:	ldr	r3, [r3]
   36bbc:	cmp	r3, #0
   36bc0:	addne	ip, ip, r3, lsl #2
   36bc4:	addne	lr, lr, r3
   36bc8:	ldr	r6, [fp]
   36bcc:	cmp	r6, #0
   36bd0:	ble	36c08 <GetDataSlab+0x15624>
   36bd4:	ldr	r3, [sp, #4]
   36bd8:	ldr	r2, [sp, #20]
   36bdc:	add	r3, r3, r2
   36be0:	mov	r1, r3
   36be4:	ldr	r2, [ip]
   36be8:	strb	r2, [r3], #1
   36bec:	ldr	r2, [sl]
   36bf0:	add	ip, ip, r2, lsl #2
   36bf4:	add	lr, lr, r2
   36bf8:	ldr	r6, [fp]
   36bfc:	sub	r2, r3, r1
   36c00:	cmp	r6, r2
   36c04:	bgt	36be4 <GetDataSlab+0x15600>
   36c08:	ldr	r3, [sp, #192]	; 0xc0
   36c0c:	ldr	r2, [r3]
   36c10:	ldr	r3, [sp, #196]	; 0xc4
   36c14:	ldr	r3, [r3]
   36c18:	sub	r3, r2, r3
   36c1c:	ldr	r2, [sl]
   36c20:	mls	r3, r2, r6, r3
   36c24:	add	lr, lr, r3
   36c28:	add	ip, ip, r3, lsl #2
   36c2c:	cmp	r9, #1
   36c30:	ble	36b9c <GetDataSlab+0x155b8>
   36c34:	ldr	r3, [sp, #76]	; 0x4c
   36c38:	add	r3, r3, #1
   36c3c:	str	r3, [sp, #76]	; 0x4c
   36c40:	ldr	r1, [fp, #4]
   36c44:	sdiv	r2, r3, r1
   36c48:	mls	r3, r1, r2, r3
   36c4c:	cmp	r3, #0
   36c50:	bne	36b84 <GetDataSlab+0x155a0>
   36c54:	add	r4, sp, #76	; 0x4c
   36c58:	add	r7, fp, #4
   36c5c:	add	r5, sp, #112	; 0x70
   36c60:	mov	r0, #1
   36c64:	b	36b38 <GetDataSlab+0x15554>
   36c68:	mov	r3, #0
   36c6c:	b	251fc <GetDataSlab+0x3c18>
   36c70:	ldr	r3, [sl]
   36c74:	str	r3, [sp, #28]
   36c78:	sub	r3, r3, #1
   36c7c:	str	r3, [sp, #32]
   36c80:	ldr	r3, [sp, #192]	; 0xc0
   36c84:	ldr	r3, [r3]
   36c88:	str	r3, [sp, #112]	; 0x70
   36c8c:	ldr	r3, [fp]
   36c90:	str	r3, [sp, #16]
   36c94:	cmp	r9, #1
   36c98:	ble	36cbc <GetDataSlab+0x156d8>
   36c9c:	str	sl, [sp, #20]
   36ca0:	add	r8, sp, #36	; 0x24
   36ca4:	ldr	r5, [sp, #192]	; 0xc0
   36ca8:	add	r6, sp, #112	; 0x70
   36cac:	str	r5, [sp, #12]
   36cb0:	mov	r4, #1
   36cb4:	mov	lr, #0
   36cb8:	b	3bef8 <GetDataSlab+0x1a914>
   36cbc:	mov	lr, #0
   36cc0:	b	3bf90 <GetDataSlab+0x1a9ac>
   36cc4:	ldr	r3, [sp, #16]
   36cc8:	cmp	r3, #0
   36ccc:	ble	3a51c <GetDataSlab+0x18f38>
   36cd0:	mov	r3, #0
   36cd4:	str	r3, [sp, #12]
   36cd8:	mov	r8, r3
   36cdc:	b	36d9c <GetDataSlab+0x157b8>
   36ce0:	ldr	r3, [sp, #196]	; 0xc4
   36ce4:	ldr	r3, [r3, r0, lsl #2]
   36ce8:	cmp	r3, #0
   36cec:	beq	36d00 <GetDataSlab+0x1571c>
   36cf0:	ldr	r2, [r5, #-8]
   36cf4:	mul	r3, r2, r3
   36cf8:	add	r4, r4, r3, lsl #1
   36cfc:	add	lr, lr, r3
   36d00:	add	r0, r0, #1
   36d04:	cmp	r9, r0
   36d08:	beq	36d80 <GetDataSlab+0x1579c>
   36d0c:	ldr	r3, [ip]
   36d10:	add	r1, r3, #1
   36d14:	str	r1, [ip]
   36d18:	ldr	r2, [r7, #4]!
   36d1c:	sdiv	r3, r1, r2
   36d20:	mls	r3, r2, r3, r1
   36d24:	cmp	r3, #0
   36d28:	bne	36d6c <GetDataSlab+0x15788>
   36d2c:	str	r8, [ip], #4
   36d30:	ldr	r2, [r5], #4
   36d34:	sdiv	r3, lr, r2
   36d38:	mls	r3, r2, r3, lr
   36d3c:	cmp	r3, #0
   36d40:	beq	36ce0 <GetDataSlab+0x156fc>
   36d44:	ldr	r1, [r5, #-8]
   36d48:	ldr	sl, [sp, #196]	; 0xc4
   36d4c:	ldr	sl, [sl, r0, lsl #2]
   36d50:	str	sl, [sp, #8]
   36d54:	sub	r3, r2, r3
   36d58:	mla	r3, sl, r1, r3
   36d5c:	add	r4, r4, r3, lsl #1
   36d60:	add	lr, lr, r3
   36d64:	b	36d00 <GetDataSlab+0x1571c>
   36d68:	ldr	r0, [sp, #28]
   36d6c:	add	r3, sp, #152	; 0x98
   36d70:	add	r3, r3, r0, lsl #2
   36d74:	ldr	r3, [r3, #-120]	; 0xffffff88
   36d78:	add	lr, lr, r3
   36d7c:	add	r4, r4, r3, lsl #1
   36d80:	ldr	r3, [sp, #12]
   36d84:	add	r3, r3, r6
   36d88:	str	r3, [sp, #12]
   36d8c:	ldr	r3, [sp, #16]
   36d90:	ldr	r2, [sp, #12]
   36d94:	cmp	r2, r3
   36d98:	bge	36e40 <GetDataSlab+0x1585c>
   36d9c:	ldr	r3, [sp, #196]	; 0xc4
   36da0:	ldr	r3, [r3]
   36da4:	cmp	r3, #0
   36da8:	addne	r4, r4, r3, lsl #1
   36dac:	addne	lr, lr, r3
   36db0:	ldr	r6, [fp]
   36db4:	cmp	r6, #0
   36db8:	ble	36de8 <GetDataSlab+0x15804>
   36dbc:	sub	r1, r4, #2
   36dc0:	ldr	r3, [sp, #4]
   36dc4:	ldr	r2, [sp, #12]
   36dc8:	add	r2, r3, r2
   36dcc:	mov	r0, r2
   36dd0:	ldrh	r3, [r1, #2]!
   36dd4:	strb	r3, [r2], #1
   36dd8:	ldr	r6, [fp]
   36ddc:	sub	r3, r2, r0
   36de0:	cmp	r6, r3
   36de4:	bgt	36dd0 <GetDataSlab+0x157ec>
   36de8:	ldr	r3, [sp, #192]	; 0xc0
   36dec:	ldr	r2, [r3]
   36df0:	ldr	r3, [sp, #196]	; 0xc4
   36df4:	ldr	r3, [r3]
   36df8:	sub	r3, r2, r3
   36dfc:	add	lr, lr, r3
   36e00:	add	r4, r4, r3, lsl #1
   36e04:	cmp	r9, #1
   36e08:	ble	36d80 <GetDataSlab+0x1579c>
   36e0c:	ldr	r3, [sp, #76]	; 0x4c
   36e10:	add	r3, r3, #1
   36e14:	str	r3, [sp, #76]	; 0x4c
   36e18:	ldr	r1, [fp, #4]
   36e1c:	sdiv	r2, r3, r1
   36e20:	mls	r3, r1, r2, r3
   36e24:	cmp	r3, #0
   36e28:	bne	36d68 <GetDataSlab+0x15784>
   36e2c:	add	ip, sp, #76	; 0x4c
   36e30:	add	r7, fp, #4
   36e34:	add	r5, sp, #116	; 0x74
   36e38:	ldr	r0, [sp, #28]
   36e3c:	b	36d2c <GetDataSlab+0x15748>
   36e40:	mov	r3, #0
   36e44:	b	251fc <GetDataSlab+0x3c18>
   36e48:	ldr	r3, [sp, #196]	; 0xc4
   36e4c:	ldr	r2, [r3, r0, lsl #2]
   36e50:	cmp	r2, #0
   36e54:	beq	36e68 <GetDataSlab+0x15884>
   36e58:	ldr	r3, [r5, #-4]
   36e5c:	mul	r3, r3, r2
   36e60:	add	r4, r4, r3, lsl #1
   36e64:	add	lr, lr, r3
   36e68:	add	r0, r0, #1
   36e6c:	cmp	r9, r0
   36e70:	beq	36ef8 <GetDataSlab+0x15914>
   36e74:	ldr	r3, [ip]
   36e78:	add	r1, r3, #1
   36e7c:	str	r1, [ip]
   36e80:	ldr	r2, [r7, #4]!
   36e84:	sdiv	r3, r1, r2
   36e88:	mls	r3, r2, r3, r1
   36e8c:	cmp	r3, #0
   36e90:	bne	36ee4 <GetDataSlab+0x15900>
   36e94:	str	r8, [ip], #4
   36e98:	add	r5, r5, #4
   36e9c:	ldr	r2, [r5]
   36ea0:	sdiv	r3, lr, r2
   36ea4:	mls	r3, r2, r3, lr
   36ea8:	cmp	r3, #0
   36eac:	beq	36e48 <GetDataSlab+0x15864>
   36eb0:	ldr	r1, [r5, #-4]
   36eb4:	str	r1, [sp, #8]
   36eb8:	ldr	r1, [sp, #196]	; 0xc4
   36ebc:	ldr	r1, [r1, r0, lsl #2]
   36ec0:	str	r1, [sp, #12]
   36ec4:	sub	r3, r2, r3
   36ec8:	mov	r2, r1
   36ecc:	ldr	r1, [sp, #8]
   36ed0:	mla	r3, r2, r1, r3
   36ed4:	add	r4, r4, r3, lsl #1
   36ed8:	add	lr, lr, r3
   36edc:	b	36e68 <GetDataSlab+0x15884>
   36ee0:	mov	r0, #1
   36ee4:	add	r3, sp, #152	; 0x98
   36ee8:	add	r3, r3, r0, lsl #2
   36eec:	ldr	r3, [r3, #-120]	; 0xffffff88
   36ef0:	add	lr, lr, r3
   36ef4:	add	r4, r4, r3, lsl #1
   36ef8:	ldr	r3, [sp, #20]
   36efc:	add	r3, r3, r6
   36f00:	str	r3, [sp, #20]
   36f04:	ldr	r2, [sp, #16]
   36f08:	cmp	r3, r2
   36f0c:	bge	36fc4 <GetDataSlab+0x159e0>
   36f10:	ldr	r3, [sp, #196]	; 0xc4
   36f14:	ldr	r3, [r3]
   36f18:	cmp	r3, #0
   36f1c:	addne	r4, r4, r3, lsl #1
   36f20:	addne	lr, lr, r3
   36f24:	ldr	r6, [fp]
   36f28:	cmp	r6, #0
   36f2c:	ble	36f64 <GetDataSlab+0x15980>
   36f30:	ldr	r3, [sp, #4]
   36f34:	ldr	r2, [sp, #20]
   36f38:	add	r3, r3, r2
   36f3c:	mov	r1, r3
   36f40:	ldrh	r2, [r4]
   36f44:	strb	r2, [r3], #1
   36f48:	ldr	r2, [sl]
   36f4c:	add	r4, r4, r2, lsl #1
   36f50:	add	lr, lr, r2
   36f54:	ldr	r6, [fp]
   36f58:	sub	r2, r3, r1
   36f5c:	cmp	r6, r2
   36f60:	bgt	36f40 <GetDataSlab+0x1595c>
   36f64:	ldr	r3, [sp, #192]	; 0xc0
   36f68:	ldr	r2, [r3]
   36f6c:	ldr	r3, [sp, #196]	; 0xc4
   36f70:	ldr	r3, [r3]
   36f74:	sub	r3, r2, r3
   36f78:	ldr	r2, [sl]
   36f7c:	mls	r3, r2, r6, r3
   36f80:	add	lr, lr, r3
   36f84:	add	r4, r4, r3, lsl #1
   36f88:	cmp	r9, #1
   36f8c:	ble	36ef8 <GetDataSlab+0x15914>
   36f90:	ldr	r3, [sp, #76]	; 0x4c
   36f94:	add	r3, r3, #1
   36f98:	str	r3, [sp, #76]	; 0x4c
   36f9c:	ldr	r1, [fp, #4]
   36fa0:	sdiv	r2, r3, r1
   36fa4:	mls	r3, r1, r2, r3
   36fa8:	cmp	r3, #0
   36fac:	bne	36ee0 <GetDataSlab+0x158fc>
   36fb0:	add	ip, sp, #76	; 0x4c
   36fb4:	add	r7, fp, #4
   36fb8:	add	r5, sp, #112	; 0x70
   36fbc:	mov	r0, #1
   36fc0:	b	36e94 <GetDataSlab+0x158b0>
   36fc4:	mov	r3, #0
   36fc8:	b	251fc <GetDataSlab+0x3c18>
   36fcc:	ldr	r3, [sl]
   36fd0:	str	r3, [sp, #28]
   36fd4:	sub	r3, r3, #1
   36fd8:	str	r3, [sp, #32]
   36fdc:	ldr	r3, [sp, #192]	; 0xc0
   36fe0:	ldr	r3, [r3]
   36fe4:	str	r3, [sp, #112]	; 0x70
   36fe8:	ldr	r3, [fp]
   36fec:	str	r3, [sp, #16]
   36ff0:	cmp	r9, #1
   36ff4:	ble	37018 <GetDataSlab+0x15a34>
   36ff8:	str	sl, [sp, #20]
   36ffc:	add	r8, sp, #36	; 0x24
   37000:	ldr	r5, [sp, #192]	; 0xc0
   37004:	add	r6, sp, #112	; 0x70
   37008:	str	r5, [sp, #12]
   3700c:	mov	r4, #1
   37010:	mov	lr, #0
   37014:	b	3bfe8 <GetDataSlab+0x1aa04>
   37018:	mov	lr, #0
   3701c:	b	3c080 <GetDataSlab+0x1aa9c>
   37020:	ldr	r3, [sp, #16]
   37024:	cmp	r3, #0
   37028:	ble	3a524 <GetDataSlab+0x18f40>
   3702c:	mov	r3, #0
   37030:	str	r3, [sp, #12]
   37034:	mov	r8, r3
   37038:	b	370f8 <GetDataSlab+0x15b14>
   3703c:	ldr	r3, [sp, #196]	; 0xc4
   37040:	ldr	r3, [r3, r0, lsl #2]
   37044:	cmp	r3, #0
   37048:	beq	3705c <GetDataSlab+0x15a78>
   3704c:	ldr	r2, [r5, #-8]
   37050:	mul	r3, r2, r3
   37054:	add	r4, r4, r3, lsl #1
   37058:	add	lr, lr, r3
   3705c:	add	r0, r0, #1
   37060:	cmp	r9, r0
   37064:	beq	370dc <GetDataSlab+0x15af8>
   37068:	ldr	r3, [ip]
   3706c:	add	r1, r3, #1
   37070:	str	r1, [ip]
   37074:	ldr	r2, [r7, #4]!
   37078:	sdiv	r3, r1, r2
   3707c:	mls	r3, r2, r3, r1
   37080:	cmp	r3, #0
   37084:	bne	370c8 <GetDataSlab+0x15ae4>
   37088:	str	r8, [ip], #4
   3708c:	ldr	r2, [r5], #4
   37090:	sdiv	r3, lr, r2
   37094:	mls	r3, r2, r3, lr
   37098:	cmp	r3, #0
   3709c:	beq	3703c <GetDataSlab+0x15a58>
   370a0:	ldr	r1, [r5, #-8]
   370a4:	ldr	sl, [sp, #196]	; 0xc4
   370a8:	ldr	sl, [sl, r0, lsl #2]
   370ac:	str	sl, [sp, #8]
   370b0:	sub	r3, r2, r3
   370b4:	mla	r3, sl, r1, r3
   370b8:	add	r4, r4, r3, lsl #1
   370bc:	add	lr, lr, r3
   370c0:	b	3705c <GetDataSlab+0x15a78>
   370c4:	ldr	r0, [sp, #28]
   370c8:	add	r3, sp, #152	; 0x98
   370cc:	add	r3, r3, r0, lsl #2
   370d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   370d4:	add	lr, lr, r3
   370d8:	add	r4, r4, r3, lsl #1
   370dc:	ldr	r3, [sp, #12]
   370e0:	add	r3, r3, r6
   370e4:	str	r3, [sp, #12]
   370e8:	ldr	r3, [sp, #16]
   370ec:	ldr	r2, [sp, #12]
   370f0:	cmp	r2, r3
   370f4:	bge	3719c <GetDataSlab+0x15bb8>
   370f8:	ldr	r3, [sp, #196]	; 0xc4
   370fc:	ldr	r3, [r3]
   37100:	cmp	r3, #0
   37104:	addne	r4, r4, r3, lsl #1
   37108:	addne	lr, lr, r3
   3710c:	ldr	r6, [fp]
   37110:	cmp	r6, #0
   37114:	ble	37144 <GetDataSlab+0x15b60>
   37118:	sub	r1, r4, #2
   3711c:	ldr	r3, [sp, #4]
   37120:	ldr	r2, [sp, #12]
   37124:	add	r2, r3, r2
   37128:	mov	r0, r2
   3712c:	ldrh	r3, [r1, #2]!
   37130:	strb	r3, [r2], #1
   37134:	ldr	r6, [fp]
   37138:	sub	r3, r2, r0
   3713c:	cmp	r6, r3
   37140:	bgt	3712c <GetDataSlab+0x15b48>
   37144:	ldr	r3, [sp, #192]	; 0xc0
   37148:	ldr	r2, [r3]
   3714c:	ldr	r3, [sp, #196]	; 0xc4
   37150:	ldr	r3, [r3]
   37154:	sub	r3, r2, r3
   37158:	add	lr, lr, r3
   3715c:	add	r4, r4, r3, lsl #1
   37160:	cmp	r9, #1
   37164:	ble	370dc <GetDataSlab+0x15af8>
   37168:	ldr	r3, [sp, #76]	; 0x4c
   3716c:	add	r3, r3, #1
   37170:	str	r3, [sp, #76]	; 0x4c
   37174:	ldr	r1, [fp, #4]
   37178:	sdiv	r2, r3, r1
   3717c:	mls	r3, r1, r2, r3
   37180:	cmp	r3, #0
   37184:	bne	370c4 <GetDataSlab+0x15ae0>
   37188:	add	ip, sp, #76	; 0x4c
   3718c:	add	r7, fp, #4
   37190:	add	r5, sp, #116	; 0x74
   37194:	ldr	r0, [sp, #28]
   37198:	b	37088 <GetDataSlab+0x15aa4>
   3719c:	mov	r3, #0
   371a0:	b	251fc <GetDataSlab+0x3c18>
   371a4:	ldr	r3, [sp, #196]	; 0xc4
   371a8:	ldr	r2, [r3, r0, lsl #2]
   371ac:	cmp	r2, #0
   371b0:	beq	371c4 <GetDataSlab+0x15be0>
   371b4:	ldr	r3, [r5, #-4]
   371b8:	mul	r3, r3, r2
   371bc:	add	r4, r4, r3, lsl #1
   371c0:	add	lr, lr, r3
   371c4:	add	r0, r0, #1
   371c8:	cmp	r9, r0
   371cc:	beq	37254 <GetDataSlab+0x15c70>
   371d0:	ldr	r3, [ip]
   371d4:	add	r1, r3, #1
   371d8:	str	r1, [ip]
   371dc:	ldr	r2, [r7, #4]!
   371e0:	sdiv	r3, r1, r2
   371e4:	mls	r3, r2, r3, r1
   371e8:	cmp	r3, #0
   371ec:	bne	37240 <GetDataSlab+0x15c5c>
   371f0:	str	r8, [ip], #4
   371f4:	add	r5, r5, #4
   371f8:	ldr	r2, [r5]
   371fc:	sdiv	r3, lr, r2
   37200:	mls	r3, r2, r3, lr
   37204:	cmp	r3, #0
   37208:	beq	371a4 <GetDataSlab+0x15bc0>
   3720c:	ldr	r1, [r5, #-4]
   37210:	str	r1, [sp, #8]
   37214:	ldr	r1, [sp, #196]	; 0xc4
   37218:	ldr	r1, [r1, r0, lsl #2]
   3721c:	str	r1, [sp, #12]
   37220:	sub	r3, r2, r3
   37224:	mov	r2, r1
   37228:	ldr	r1, [sp, #8]
   3722c:	mla	r3, r2, r1, r3
   37230:	add	r4, r4, r3, lsl #1
   37234:	add	lr, lr, r3
   37238:	b	371c4 <GetDataSlab+0x15be0>
   3723c:	mov	r0, #1
   37240:	add	r3, sp, #152	; 0x98
   37244:	add	r3, r3, r0, lsl #2
   37248:	ldr	r3, [r3, #-120]	; 0xffffff88
   3724c:	add	lr, lr, r3
   37250:	add	r4, r4, r3, lsl #1
   37254:	ldr	r3, [sp, #20]
   37258:	add	r3, r3, r6
   3725c:	str	r3, [sp, #20]
   37260:	ldr	r2, [sp, #16]
   37264:	cmp	r3, r2
   37268:	bge	37320 <GetDataSlab+0x15d3c>
   3726c:	ldr	r3, [sp, #196]	; 0xc4
   37270:	ldr	r3, [r3]
   37274:	cmp	r3, #0
   37278:	addne	r4, r4, r3, lsl #1
   3727c:	addne	lr, lr, r3
   37280:	ldr	r6, [fp]
   37284:	cmp	r6, #0
   37288:	ble	372c0 <GetDataSlab+0x15cdc>
   3728c:	ldr	r3, [sp, #4]
   37290:	ldr	r2, [sp, #20]
   37294:	add	r3, r3, r2
   37298:	mov	r1, r3
   3729c:	ldrh	r2, [r4]
   372a0:	strb	r2, [r3], #1
   372a4:	ldr	r2, [sl]
   372a8:	add	r4, r4, r2, lsl #1
   372ac:	add	lr, lr, r2
   372b0:	ldr	r6, [fp]
   372b4:	sub	r2, r3, r1
   372b8:	cmp	r6, r2
   372bc:	bgt	3729c <GetDataSlab+0x15cb8>
   372c0:	ldr	r3, [sp, #192]	; 0xc0
   372c4:	ldr	r2, [r3]
   372c8:	ldr	r3, [sp, #196]	; 0xc4
   372cc:	ldr	r3, [r3]
   372d0:	sub	r3, r2, r3
   372d4:	ldr	r2, [sl]
   372d8:	mls	r3, r2, r6, r3
   372dc:	add	lr, lr, r3
   372e0:	add	r4, r4, r3, lsl #1
   372e4:	cmp	r9, #1
   372e8:	ble	37254 <GetDataSlab+0x15c70>
   372ec:	ldr	r3, [sp, #76]	; 0x4c
   372f0:	add	r3, r3, #1
   372f4:	str	r3, [sp, #76]	; 0x4c
   372f8:	ldr	r1, [fp, #4]
   372fc:	sdiv	r2, r3, r1
   37300:	mls	r3, r1, r2, r3
   37304:	cmp	r3, #0
   37308:	bne	3723c <GetDataSlab+0x15c58>
   3730c:	add	ip, sp, #76	; 0x4c
   37310:	add	r7, fp, #4
   37314:	add	r5, sp, #112	; 0x70
   37318:	mov	r0, #1
   3731c:	b	371f0 <GetDataSlab+0x15c0c>
   37320:	mov	r3, #0
   37324:	b	251fc <GetDataSlab+0x3c18>
   37328:	ldr	r3, [sl]
   3732c:	str	r3, [sp, #28]
   37330:	sub	r3, r3, #1
   37334:	str	r3, [sp, #32]
   37338:	ldr	r3, [sp, #192]	; 0xc0
   3733c:	ldr	r3, [r3]
   37340:	str	r3, [sp, #112]	; 0x70
   37344:	ldr	r3, [fp]
   37348:	str	r3, [sp, #16]
   3734c:	cmp	r9, #1
   37350:	ble	37370 <GetDataSlab+0x15d8c>
   37354:	str	sl, [sp, #20]
   37358:	add	r7, sp, #36	; 0x24
   3735c:	ldr	r4, [sp, #192]	; 0xc0
   37360:	add	r5, sp, #112	; 0x70
   37364:	str	r4, [sp, #12]
   37368:	mov	lr, #0
   3736c:	b	3bd18 <GetDataSlab+0x1a734>
   37370:	mov	lr, #0
   37374:	b	3bdb0 <GetDataSlab+0x1a7cc>
   37378:	ldr	r3, [sp, #16]
   3737c:	cmp	r3, #0
   37380:	ble	3a52c <GetDataSlab+0x18f48>
   37384:	mov	r3, #0
   37388:	str	r3, [sp, #12]
   3738c:	mov	r8, r3
   37390:	b	37450 <GetDataSlab+0x15e6c>
   37394:	ldr	r3, [sp, #196]	; 0xc4
   37398:	ldr	r3, [r3, r0, lsl #2]
   3739c:	cmp	r3, #0
   373a0:	beq	373b4 <GetDataSlab+0x15dd0>
   373a4:	ldr	r2, [r5, #-8]
   373a8:	mul	r3, r2, r3
   373ac:	add	ip, ip, r3
   373b0:	add	lr, lr, r3
   373b4:	add	r0, r0, #1
   373b8:	cmp	r9, r0
   373bc:	beq	37434 <GetDataSlab+0x15e50>
   373c0:	ldr	r3, [r4]
   373c4:	add	r1, r3, #1
   373c8:	str	r1, [r4]
   373cc:	ldr	r2, [r7, #4]!
   373d0:	sdiv	r3, r1, r2
   373d4:	mls	r3, r2, r3, r1
   373d8:	cmp	r3, #0
   373dc:	bne	37420 <GetDataSlab+0x15e3c>
   373e0:	str	r8, [r4], #4
   373e4:	ldr	r2, [r5], #4
   373e8:	sdiv	r3, lr, r2
   373ec:	mls	r3, r2, r3, lr
   373f0:	cmp	r3, #0
   373f4:	beq	37394 <GetDataSlab+0x15db0>
   373f8:	ldr	r1, [r5, #-8]
   373fc:	ldr	sl, [sp, #196]	; 0xc4
   37400:	ldr	sl, [sl, r0, lsl #2]
   37404:	str	sl, [sp, #8]
   37408:	sub	r3, r2, r3
   3740c:	mla	r3, sl, r1, r3
   37410:	add	ip, ip, r3
   37414:	add	lr, lr, r3
   37418:	b	373b4 <GetDataSlab+0x15dd0>
   3741c:	ldr	r0, [sp, #28]
   37420:	add	r3, sp, #152	; 0x98
   37424:	add	r3, r3, r0, lsl #2
   37428:	ldr	r3, [r3, #-120]	; 0xffffff88
   3742c:	add	lr, lr, r3
   37430:	add	ip, ip, r3
   37434:	ldr	r3, [sp, #12]
   37438:	add	r3, r3, r6
   3743c:	str	r3, [sp, #12]
   37440:	ldr	r3, [sp, #16]
   37444:	ldr	r2, [sp, #12]
   37448:	cmp	r2, r3
   3744c:	bge	374fc <GetDataSlab+0x15f18>
   37450:	ldr	r3, [sp, #196]	; 0xc4
   37454:	ldr	r3, [r3]
   37458:	cmp	r3, #0
   3745c:	addne	ip, ip, r3
   37460:	addne	lr, lr, r3
   37464:	ldr	r6, [fp]
   37468:	cmp	r6, #0
   3746c:	ble	374a4 <GetDataSlab+0x15ec0>
   37470:	sub	r2, ip, #1
   37474:	ldr	r3, [sp, #12]
   37478:	sub	r3, r3, #1
   3747c:	ldr	r1, [sp, #4]
   37480:	add	r1, r1, r3
   37484:	ldrsb	r3, [r2, #1]
   37488:	strb	r3, [r1, #1]!
   3748c:	ldr	r6, [fp]
   37490:	add	r3, r2, #2
   37494:	sub	r3, r3, ip
   37498:	add	r2, r2, #1
   3749c:	cmp	r6, r3
   374a0:	bgt	37484 <GetDataSlab+0x15ea0>
   374a4:	ldr	r3, [sp, #192]	; 0xc0
   374a8:	ldr	r2, [r3]
   374ac:	ldr	r3, [sp, #196]	; 0xc4
   374b0:	ldr	r3, [r3]
   374b4:	sub	r3, r2, r3
   374b8:	add	lr, lr, r3
   374bc:	add	ip, ip, r3
   374c0:	cmp	r9, #1
   374c4:	ble	37434 <GetDataSlab+0x15e50>
   374c8:	ldr	r3, [sp, #76]	; 0x4c
   374cc:	add	r3, r3, #1
   374d0:	str	r3, [sp, #76]	; 0x4c
   374d4:	ldr	r1, [fp, #4]
   374d8:	sdiv	r2, r3, r1
   374dc:	mls	r3, r1, r2, r3
   374e0:	cmp	r3, #0
   374e4:	bne	3741c <GetDataSlab+0x15e38>
   374e8:	add	r4, sp, #76	; 0x4c
   374ec:	add	r7, fp, #4
   374f0:	add	r5, sp, #116	; 0x74
   374f4:	ldr	r0, [sp, #28]
   374f8:	b	373e0 <GetDataSlab+0x15dfc>
   374fc:	mov	r3, #0
   37500:	b	251fc <GetDataSlab+0x3c18>
   37504:	ldr	r3, [sp, #196]	; 0xc4
   37508:	ldr	r2, [r3, r0, lsl #2]
   3750c:	cmp	r2, #0
   37510:	beq	37524 <GetDataSlab+0x15f40>
   37514:	ldr	r3, [r5, #-4]
   37518:	mul	r3, r3, r2
   3751c:	add	ip, ip, r3
   37520:	add	lr, lr, r3
   37524:	add	r0, r0, #1
   37528:	cmp	r9, r0
   3752c:	beq	375b4 <GetDataSlab+0x15fd0>
   37530:	ldr	r3, [r4]
   37534:	add	r1, r3, #1
   37538:	str	r1, [r4]
   3753c:	ldr	r2, [r7, #4]!
   37540:	sdiv	r3, r1, r2
   37544:	mls	r3, r2, r3, r1
   37548:	cmp	r3, #0
   3754c:	bne	375a0 <GetDataSlab+0x15fbc>
   37550:	str	r8, [r4], #4
   37554:	add	r5, r5, #4
   37558:	ldr	r2, [r5]
   3755c:	sdiv	r3, lr, r2
   37560:	mls	r3, r2, r3, lr
   37564:	cmp	r3, #0
   37568:	beq	37504 <GetDataSlab+0x15f20>
   3756c:	ldr	r1, [r5, #-4]
   37570:	str	r1, [sp, #8]
   37574:	ldr	r1, [sp, #196]	; 0xc4
   37578:	ldr	r1, [r1, r0, lsl #2]
   3757c:	str	r1, [sp, #12]
   37580:	sub	r3, r2, r3
   37584:	mov	r2, r1
   37588:	ldr	r1, [sp, #8]
   3758c:	mla	r3, r2, r1, r3
   37590:	add	ip, ip, r3
   37594:	add	lr, lr, r3
   37598:	b	37524 <GetDataSlab+0x15f40>
   3759c:	mov	r0, #1
   375a0:	add	r3, sp, #152	; 0x98
   375a4:	add	r3, r3, r0, lsl #2
   375a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   375ac:	add	lr, lr, r3
   375b0:	add	ip, ip, r3
   375b4:	ldr	r3, [sp, #20]
   375b8:	add	r3, r3, r6
   375bc:	str	r3, [sp, #20]
   375c0:	ldr	r2, [sp, #16]
   375c4:	cmp	r3, r2
   375c8:	bge	37680 <GetDataSlab+0x1609c>
   375cc:	ldr	r3, [sp, #196]	; 0xc4
   375d0:	ldr	r3, [r3]
   375d4:	cmp	r3, #0
   375d8:	addne	ip, ip, r3
   375dc:	addne	lr, lr, r3
   375e0:	ldr	r6, [fp]
   375e4:	cmp	r6, #0
   375e8:	ble	37620 <GetDataSlab+0x1603c>
   375ec:	ldr	r3, [sp, #4]
   375f0:	ldr	r2, [sp, #20]
   375f4:	add	r3, r3, r2
   375f8:	mov	r1, r3
   375fc:	ldrsb	r2, [ip]
   37600:	strb	r2, [r3], #1
   37604:	ldr	r2, [sl]
   37608:	add	ip, ip, r2
   3760c:	add	lr, lr, r2
   37610:	ldr	r6, [fp]
   37614:	sub	r2, r3, r1
   37618:	cmp	r6, r2
   3761c:	bgt	375fc <GetDataSlab+0x16018>
   37620:	ldr	r3, [sp, #192]	; 0xc0
   37624:	ldr	r2, [r3]
   37628:	ldr	r3, [sp, #196]	; 0xc4
   3762c:	ldr	r3, [r3]
   37630:	sub	r3, r2, r3
   37634:	ldr	r2, [sl]
   37638:	mls	r3, r2, r6, r3
   3763c:	add	lr, lr, r3
   37640:	add	ip, ip, r3
   37644:	cmp	r9, #1
   37648:	ble	375b4 <GetDataSlab+0x15fd0>
   3764c:	ldr	r3, [sp, #76]	; 0x4c
   37650:	add	r3, r3, #1
   37654:	str	r3, [sp, #76]	; 0x4c
   37658:	ldr	r1, [fp, #4]
   3765c:	sdiv	r2, r3, r1
   37660:	mls	r3, r1, r2, r3
   37664:	cmp	r3, #0
   37668:	bne	3759c <GetDataSlab+0x15fb8>
   3766c:	add	r4, sp, #76	; 0x4c
   37670:	add	r7, fp, #4
   37674:	add	r5, sp, #112	; 0x70
   37678:	mov	r0, #1
   3767c:	b	37550 <GetDataSlab+0x15f6c>
   37680:	mov	r3, #0
   37684:	b	251fc <GetDataSlab+0x3c18>
   37688:	ldr	r3, [sl]
   3768c:	str	r3, [sp, #28]
   37690:	sub	r3, r3, #1
   37694:	str	r3, [sp, #32]
   37698:	ldr	r3, [sp, #192]	; 0xc0
   3769c:	ldr	r3, [r3]
   376a0:	str	r3, [sp, #112]	; 0x70
   376a4:	ldr	r3, [fp]
   376a8:	str	r3, [sp, #16]
   376ac:	cmp	r9, #1
   376b0:	ble	376d4 <GetDataSlab+0x160f0>
   376b4:	str	sl, [sp, #20]
   376b8:	add	r8, sp, #36	; 0x24
   376bc:	ldr	r5, [sp, #192]	; 0xc0
   376c0:	add	r6, sp, #112	; 0x70
   376c4:	str	r5, [sp, #12]
   376c8:	mov	r4, #1
   376cc:	mov	lr, #0
   376d0:	b	3be08 <GetDataSlab+0x1a824>
   376d4:	mov	lr, #0
   376d8:	b	3bea0 <GetDataSlab+0x1a8bc>
   376dc:	ldr	r3, [sp, #16]
   376e0:	cmp	r3, #0
   376e4:	ble	3a534 <GetDataSlab+0x18f50>
   376e8:	mov	r3, #0
   376ec:	str	r3, [sp, #12]
   376f0:	mov	r8, r3
   376f4:	b	377b4 <GetDataSlab+0x161d0>
   376f8:	ldr	r3, [sp, #196]	; 0xc4
   376fc:	ldr	r3, [r3, r0, lsl #2]
   37700:	cmp	r3, #0
   37704:	beq	37718 <GetDataSlab+0x16134>
   37708:	ldr	r2, [r5, #-8]
   3770c:	mul	r3, r2, r3
   37710:	add	ip, ip, r3
   37714:	add	lr, lr, r3
   37718:	add	r0, r0, #1
   3771c:	cmp	r9, r0
   37720:	beq	37798 <GetDataSlab+0x161b4>
   37724:	ldr	r3, [r4]
   37728:	add	r1, r3, #1
   3772c:	str	r1, [r4]
   37730:	ldr	r2, [r7, #4]!
   37734:	sdiv	r3, r1, r2
   37738:	mls	r3, r2, r3, r1
   3773c:	cmp	r3, #0
   37740:	bne	37784 <GetDataSlab+0x161a0>
   37744:	str	r8, [r4], #4
   37748:	ldr	r2, [r5], #4
   3774c:	sdiv	r3, lr, r2
   37750:	mls	r3, r2, r3, lr
   37754:	cmp	r3, #0
   37758:	beq	376f8 <GetDataSlab+0x16114>
   3775c:	ldr	r1, [r5, #-8]
   37760:	ldr	sl, [sp, #196]	; 0xc4
   37764:	ldr	sl, [sl, r0, lsl #2]
   37768:	str	sl, [sp, #8]
   3776c:	sub	r3, r2, r3
   37770:	mla	r3, sl, r1, r3
   37774:	add	ip, ip, r3
   37778:	add	lr, lr, r3
   3777c:	b	37718 <GetDataSlab+0x16134>
   37780:	ldr	r0, [sp, #28]
   37784:	add	r3, sp, #152	; 0x98
   37788:	add	r3, r3, r0, lsl #2
   3778c:	ldr	r3, [r3, #-120]	; 0xffffff88
   37790:	add	lr, lr, r3
   37794:	add	ip, ip, r3
   37798:	ldr	r3, [sp, #12]
   3779c:	add	r3, r3, r6
   377a0:	str	r3, [sp, #12]
   377a4:	ldr	r3, [sp, #16]
   377a8:	ldr	r2, [sp, #12]
   377ac:	cmp	r2, r3
   377b0:	bge	37860 <GetDataSlab+0x1627c>
   377b4:	ldr	r3, [sp, #196]	; 0xc4
   377b8:	ldr	r3, [r3]
   377bc:	cmp	r3, #0
   377c0:	addne	ip, ip, r3
   377c4:	addne	lr, lr, r3
   377c8:	ldr	r6, [fp]
   377cc:	cmp	r6, #0
   377d0:	ble	37808 <GetDataSlab+0x16224>
   377d4:	sub	r2, ip, #1
   377d8:	ldr	r3, [sp, #12]
   377dc:	sub	r3, r3, #1
   377e0:	ldr	r1, [sp, #4]
   377e4:	add	r1, r1, r3
   377e8:	ldrb	r3, [r2, #1]
   377ec:	strb	r3, [r1, #1]!
   377f0:	ldr	r6, [fp]
   377f4:	add	r3, r2, #2
   377f8:	sub	r3, r3, ip
   377fc:	add	r2, r2, #1
   37800:	cmp	r6, r3
   37804:	bgt	377e8 <GetDataSlab+0x16204>
   37808:	ldr	r3, [sp, #192]	; 0xc0
   3780c:	ldr	r2, [r3]
   37810:	ldr	r3, [sp, #196]	; 0xc4
   37814:	ldr	r3, [r3]
   37818:	sub	r3, r2, r3
   3781c:	add	lr, lr, r3
   37820:	add	ip, ip, r3
   37824:	cmp	r9, #1
   37828:	ble	37798 <GetDataSlab+0x161b4>
   3782c:	ldr	r3, [sp, #76]	; 0x4c
   37830:	add	r3, r3, #1
   37834:	str	r3, [sp, #76]	; 0x4c
   37838:	ldr	r1, [fp, #4]
   3783c:	sdiv	r2, r3, r1
   37840:	mls	r3, r1, r2, r3
   37844:	cmp	r3, #0
   37848:	bne	37780 <GetDataSlab+0x1619c>
   3784c:	add	r4, sp, #76	; 0x4c
   37850:	add	r7, fp, #4
   37854:	add	r5, sp, #116	; 0x74
   37858:	ldr	r0, [sp, #28]
   3785c:	b	37744 <GetDataSlab+0x16160>
   37860:	mov	r3, #0
   37864:	b	251fc <GetDataSlab+0x3c18>
   37868:	ldr	r3, [sp, #196]	; 0xc4
   3786c:	ldr	r2, [r3, r0, lsl #2]
   37870:	cmp	r2, #0
   37874:	beq	37888 <GetDataSlab+0x162a4>
   37878:	ldr	r3, [r5, #-4]
   3787c:	mul	r3, r3, r2
   37880:	add	ip, ip, r3
   37884:	add	lr, lr, r3
   37888:	add	r0, r0, #1
   3788c:	cmp	r9, r0
   37890:	beq	37918 <GetDataSlab+0x16334>
   37894:	ldr	r3, [r4]
   37898:	add	r1, r3, #1
   3789c:	str	r1, [r4]
   378a0:	ldr	r2, [r7, #4]!
   378a4:	sdiv	r3, r1, r2
   378a8:	mls	r3, r2, r3, r1
   378ac:	cmp	r3, #0
   378b0:	bne	37904 <GetDataSlab+0x16320>
   378b4:	str	r8, [r4], #4
   378b8:	add	r5, r5, #4
   378bc:	ldr	r2, [r5]
   378c0:	sdiv	r3, lr, r2
   378c4:	mls	r3, r2, r3, lr
   378c8:	cmp	r3, #0
   378cc:	beq	37868 <GetDataSlab+0x16284>
   378d0:	ldr	r1, [r5, #-4]
   378d4:	str	r1, [sp, #8]
   378d8:	ldr	r1, [sp, #196]	; 0xc4
   378dc:	ldr	r1, [r1, r0, lsl #2]
   378e0:	str	r1, [sp, #12]
   378e4:	sub	r3, r2, r3
   378e8:	mov	r2, r1
   378ec:	ldr	r1, [sp, #8]
   378f0:	mla	r3, r2, r1, r3
   378f4:	add	ip, ip, r3
   378f8:	add	lr, lr, r3
   378fc:	b	37888 <GetDataSlab+0x162a4>
   37900:	mov	r0, #1
   37904:	add	r3, sp, #152	; 0x98
   37908:	add	r3, r3, r0, lsl #2
   3790c:	ldr	r3, [r3, #-120]	; 0xffffff88
   37910:	add	lr, lr, r3
   37914:	add	ip, ip, r3
   37918:	ldr	r3, [sp, #20]
   3791c:	add	r3, r3, r6
   37920:	str	r3, [sp, #20]
   37924:	ldr	r2, [sp, #16]
   37928:	cmp	r3, r2
   3792c:	bge	379e4 <GetDataSlab+0x16400>
   37930:	ldr	r3, [sp, #196]	; 0xc4
   37934:	ldr	r3, [r3]
   37938:	cmp	r3, #0
   3793c:	addne	ip, ip, r3
   37940:	addne	lr, lr, r3
   37944:	ldr	r6, [fp]
   37948:	cmp	r6, #0
   3794c:	ble	37984 <GetDataSlab+0x163a0>
   37950:	ldr	r3, [sp, #4]
   37954:	ldr	r2, [sp, #20]
   37958:	add	r3, r3, r2
   3795c:	mov	r1, r3
   37960:	ldrb	r2, [ip]
   37964:	strb	r2, [r3], #1
   37968:	ldr	r2, [sl]
   3796c:	add	ip, ip, r2
   37970:	add	lr, lr, r2
   37974:	ldr	r6, [fp]
   37978:	sub	r2, r3, r1
   3797c:	cmp	r6, r2
   37980:	bgt	37960 <GetDataSlab+0x1637c>
   37984:	ldr	r3, [sp, #192]	; 0xc0
   37988:	ldr	r2, [r3]
   3798c:	ldr	r3, [sp, #196]	; 0xc4
   37990:	ldr	r3, [r3]
   37994:	sub	r3, r2, r3
   37998:	ldr	r2, [sl]
   3799c:	mls	r3, r2, r6, r3
   379a0:	add	lr, lr, r3
   379a4:	add	ip, ip, r3
   379a8:	cmp	r9, #1
   379ac:	ble	37918 <GetDataSlab+0x16334>
   379b0:	ldr	r3, [sp, #76]	; 0x4c
   379b4:	add	r3, r3, #1
   379b8:	str	r3, [sp, #76]	; 0x4c
   379bc:	ldr	r1, [fp, #4]
   379c0:	sdiv	r2, r3, r1
   379c4:	mls	r3, r1, r2, r3
   379c8:	cmp	r3, #0
   379cc:	bne	37900 <GetDataSlab+0x1631c>
   379d0:	add	r4, sp, #76	; 0x4c
   379d4:	add	r7, fp, #4
   379d8:	add	r5, sp, #112	; 0x70
   379dc:	mov	r0, #1
   379e0:	b	378b4 <GetDataSlab+0x162d0>
   379e4:	mov	r3, #0
   379e8:	b	251fc <GetDataSlab+0x3c18>
   379ec:	cmp	r8, #12
   379f0:	beq	37a4c <GetDataSlab+0x16468>
   379f4:	cmp	r8, #13
   379f8:	movne	r3, #1
   379fc:	bne	251fc <GetDataSlab+0x3c18>
   37a00:	ldr	r3, [sl]
   37a04:	str	r3, [sp, #28]
   37a08:	sub	r3, r3, #1
   37a0c:	str	r3, [sp, #32]
   37a10:	ldr	r3, [sp, #192]	; 0xc0
   37a14:	ldr	r3, [r3]
   37a18:	str	r3, [sp, #112]	; 0x70
   37a1c:	ldr	r3, [fp]
   37a20:	str	r3, [sp, #16]
   37a24:	cmp	r9, #1
   37a28:	ble	37d9c <GetDataSlab+0x167b8>
   37a2c:	str	sl, [sp, #20]
   37a30:	add	r8, sp, #36	; 0x24
   37a34:	ldr	r5, [sp, #192]	; 0xc0
   37a38:	add	r6, sp, #112	; 0x70
   37a3c:	str	r5, [sp, #12]
   37a40:	mov	r4, #1
   37a44:	mov	lr, #0
   37a48:	b	3bb38 <GetDataSlab+0x1a554>
   37a4c:	ldr	r3, [sl]
   37a50:	str	r3, [sp, #28]
   37a54:	sub	r3, r3, #1
   37a58:	str	r3, [sp, #32]
   37a5c:	ldr	r3, [sp, #192]	; 0xc0
   37a60:	ldr	r3, [r3]
   37a64:	str	r3, [sp, #112]	; 0x70
   37a68:	ldr	r3, [fp]
   37a6c:	str	r3, [sp, #16]
   37a70:	cmp	r9, #1
   37a74:	ble	37a98 <GetDataSlab+0x164b4>
   37a78:	str	sl, [sp, #20]
   37a7c:	add	r8, sp, #36	; 0x24
   37a80:	ldr	r5, [sp, #192]	; 0xc0
   37a84:	add	r6, sp, #112	; 0x70
   37a88:	str	r5, [sp, #12]
   37a8c:	mov	r4, #1
   37a90:	mov	lr, #0
   37a94:	b	3bc28 <GetDataSlab+0x1a644>
   37a98:	mov	lr, #0
   37a9c:	b	3bcc0 <GetDataSlab+0x1a6dc>
   37aa0:	ldr	r3, [sp, #16]
   37aa4:	cmp	r3, #0
   37aa8:	ble	3bcec <GetDataSlab+0x1a708>
   37aac:	mov	r3, #0
   37ab0:	str	r3, [sp, #12]
   37ab4:	mov	r8, r3
   37ab8:	b	37b7c <GetDataSlab+0x16598>
   37abc:	ldr	r3, [sp, #196]	; 0xc4
   37ac0:	ldr	r2, [r3, r0, lsl #2]
   37ac4:	cmp	r2, #0
   37ac8:	beq	37adc <GetDataSlab+0x164f8>
   37acc:	ldr	r3, [r5, #-4]
   37ad0:	mul	r3, r3, r2
   37ad4:	add	ip, ip, r3, lsl #3
   37ad8:	add	lr, lr, r3
   37adc:	add	r0, r0, #1
   37ae0:	cmp	r9, r0
   37ae4:	beq	37b60 <GetDataSlab+0x1657c>
   37ae8:	ldr	r3, [r4]
   37aec:	add	r1, r3, #1
   37af0:	str	r1, [r4]
   37af4:	ldr	r2, [r7, #4]!
   37af8:	sdiv	r3, r1, r2
   37afc:	mls	r3, r2, r3, r1
   37b00:	cmp	r3, #0
   37b04:	bne	37b4c <GetDataSlab+0x16568>
   37b08:	str	r8, [r4], #4
   37b0c:	add	r5, r5, #4
   37b10:	ldr	r2, [r5]
   37b14:	sdiv	r3, lr, r2
   37b18:	mls	r3, r2, r3, lr
   37b1c:	cmp	r3, #0
   37b20:	beq	37abc <GetDataSlab+0x164d8>
   37b24:	ldr	r1, [r5, #-4]
   37b28:	ldr	sl, [sp, #196]	; 0xc4
   37b2c:	ldr	sl, [sl, r0, lsl #2]
   37b30:	str	sl, [sp, #8]
   37b34:	sub	r3, r2, r3
   37b38:	mla	r3, sl, r1, r3
   37b3c:	add	ip, ip, r3, lsl #3
   37b40:	add	lr, lr, r3
   37b44:	b	37adc <GetDataSlab+0x164f8>
   37b48:	ldr	r0, [sp, #28]
   37b4c:	add	r3, sp, #152	; 0x98
   37b50:	add	r3, r3, r0, lsl #2
   37b54:	ldr	r3, [r3, #-120]	; 0xffffff88
   37b58:	add	lr, lr, r3
   37b5c:	add	ip, ip, r3, lsl #3
   37b60:	ldr	r3, [sp, #12]
   37b64:	add	r3, r3, r6
   37b68:	str	r3, [sp, #12]
   37b6c:	ldr	r3, [sp, #16]
   37b70:	ldr	r2, [sp, #12]
   37b74:	cmp	r2, r3
   37b78:	bge	3bcec <GetDataSlab+0x1a708>
   37b7c:	ldr	r3, [sp, #196]	; 0xc4
   37b80:	ldr	r3, [r3]
   37b84:	cmp	r3, #0
   37b88:	addne	ip, ip, r3, lsl #3
   37b8c:	addne	lr, lr, r3
   37b90:	ldr	r6, [fp]
   37b94:	cmp	r6, #0
   37b98:	ble	37bc8 <GetDataSlab+0x165e4>
   37b9c:	sub	r1, ip, #8
   37ba0:	ldr	r3, [sp, #4]
   37ba4:	ldr	r2, [sp, #12]
   37ba8:	add	r2, r3, r2
   37bac:	mov	r0, r2
   37bb0:	ldr	r3, [r1, #8]!
   37bb4:	strb	r3, [r2], #1
   37bb8:	ldr	r6, [fp]
   37bbc:	sub	r3, r2, r0
   37bc0:	cmp	r6, r3
   37bc4:	bgt	37bb0 <GetDataSlab+0x165cc>
   37bc8:	ldr	r3, [sp, #192]	; 0xc0
   37bcc:	ldr	r2, [r3]
   37bd0:	ldr	r3, [sp, #196]	; 0xc4
   37bd4:	ldr	r3, [r3]
   37bd8:	sub	r3, r2, r3
   37bdc:	add	lr, lr, r3
   37be0:	add	ip, ip, r3, lsl #3
   37be4:	cmp	r9, #1
   37be8:	ble	37b60 <GetDataSlab+0x1657c>
   37bec:	ldr	r3, [sp, #76]	; 0x4c
   37bf0:	add	r3, r3, #1
   37bf4:	str	r3, [sp, #76]	; 0x4c
   37bf8:	ldr	r1, [fp, #4]
   37bfc:	sdiv	r2, r3, r1
   37c00:	mls	r3, r1, r2, r3
   37c04:	cmp	r3, #0
   37c08:	bne	37b48 <GetDataSlab+0x16564>
   37c0c:	add	r4, sp, #76	; 0x4c
   37c10:	add	r7, fp, #4
   37c14:	add	r5, sp, #112	; 0x70
   37c18:	ldr	r0, [sp, #28]
   37c1c:	b	37b08 <GetDataSlab+0x16524>
   37c20:	ldr	r3, [sp, #196]	; 0xc4
   37c24:	ldr	r2, [r3, r0, lsl #2]
   37c28:	cmp	r2, #0
   37c2c:	beq	37c40 <GetDataSlab+0x1665c>
   37c30:	ldr	r3, [r5, #-4]
   37c34:	mul	r3, r3, r2
   37c38:	add	ip, ip, r3, lsl #3
   37c3c:	add	lr, lr, r3
   37c40:	add	r0, r0, #1
   37c44:	cmp	r9, r0
   37c48:	beq	37cd0 <GetDataSlab+0x166ec>
   37c4c:	ldr	r3, [r4]
   37c50:	add	r1, r3, #1
   37c54:	str	r1, [r4]
   37c58:	ldr	r2, [r7, #4]!
   37c5c:	sdiv	r3, r1, r2
   37c60:	mls	r3, r2, r3, r1
   37c64:	cmp	r3, #0
   37c68:	bne	37cbc <GetDataSlab+0x166d8>
   37c6c:	str	r8, [r4], #4
   37c70:	add	r5, r5, #4
   37c74:	ldr	r2, [r5]
   37c78:	sdiv	r3, lr, r2
   37c7c:	mls	r3, r2, r3, lr
   37c80:	cmp	r3, #0
   37c84:	beq	37c20 <GetDataSlab+0x1663c>
   37c88:	ldr	r1, [r5, #-4]
   37c8c:	str	r1, [sp, #8]
   37c90:	ldr	r1, [sp, #196]	; 0xc4
   37c94:	ldr	r1, [r1, r0, lsl #2]
   37c98:	str	r1, [sp, #12]
   37c9c:	sub	r3, r2, r3
   37ca0:	mov	r2, r1
   37ca4:	ldr	r1, [sp, #8]
   37ca8:	mla	r3, r2, r1, r3
   37cac:	add	ip, ip, r3, lsl #3
   37cb0:	add	lr, lr, r3
   37cb4:	b	37c40 <GetDataSlab+0x1665c>
   37cb8:	mov	r0, #1
   37cbc:	add	r3, sp, #152	; 0x98
   37cc0:	add	r3, r3, r0, lsl #2
   37cc4:	ldr	r3, [r3, #-120]	; 0xffffff88
   37cc8:	add	lr, lr, r3
   37ccc:	add	ip, ip, r3, lsl #3
   37cd0:	ldr	r3, [sp, #20]
   37cd4:	add	r3, r3, r6
   37cd8:	str	r3, [sp, #20]
   37cdc:	ldr	r2, [sp, #16]
   37ce0:	cmp	r3, r2
   37ce4:	bge	3bcec <GetDataSlab+0x1a708>
   37ce8:	ldr	r3, [sp, #196]	; 0xc4
   37cec:	ldr	r3, [r3]
   37cf0:	cmp	r3, #0
   37cf4:	addne	ip, ip, r3, lsl #3
   37cf8:	addne	lr, lr, r3
   37cfc:	ldr	r6, [fp]
   37d00:	cmp	r6, #0
   37d04:	ble	37d3c <GetDataSlab+0x16758>
   37d08:	ldr	r3, [sp, #4]
   37d0c:	ldr	r2, [sp, #20]
   37d10:	add	r3, r3, r2
   37d14:	mov	r1, r3
   37d18:	ldr	r2, [ip]
   37d1c:	strb	r2, [r3], #1
   37d20:	ldr	r2, [sl]
   37d24:	add	ip, ip, r2, lsl #3
   37d28:	add	lr, lr, r2
   37d2c:	ldr	r6, [fp]
   37d30:	sub	r2, r3, r1
   37d34:	cmp	r6, r2
   37d38:	bgt	37d18 <GetDataSlab+0x16734>
   37d3c:	ldr	r3, [sp, #192]	; 0xc0
   37d40:	ldr	r2, [r3]
   37d44:	ldr	r3, [sp, #196]	; 0xc4
   37d48:	ldr	r3, [r3]
   37d4c:	sub	r3, r2, r3
   37d50:	ldr	r2, [sl]
   37d54:	mls	r3, r2, r6, r3
   37d58:	add	lr, lr, r3
   37d5c:	add	ip, ip, r3, lsl #3
   37d60:	cmp	r9, #1
   37d64:	ble	37cd0 <GetDataSlab+0x166ec>
   37d68:	ldr	r3, [sp, #76]	; 0x4c
   37d6c:	add	r3, r3, #1
   37d70:	str	r3, [sp, #76]	; 0x4c
   37d74:	ldr	r1, [fp, #4]
   37d78:	sdiv	r2, r3, r1
   37d7c:	mls	r3, r1, r2, r3
   37d80:	cmp	r3, #0
   37d84:	bne	37cb8 <GetDataSlab+0x166d4>
   37d88:	add	r4, sp, #76	; 0x4c
   37d8c:	add	r7, fp, #4
   37d90:	add	r5, sp, #112	; 0x70
   37d94:	mov	r0, #1
   37d98:	b	37c6c <GetDataSlab+0x16688>
   37d9c:	mov	lr, #0
   37da0:	b	3bbd0 <GetDataSlab+0x1a5ec>
   37da4:	ldr	r3, [sp, #16]
   37da8:	cmp	r3, #0
   37dac:	ble	3a53c <GetDataSlab+0x18f58>
   37db0:	mov	r3, #0
   37db4:	str	r3, [sp, #12]
   37db8:	mov	r8, r3
   37dbc:	b	37e80 <GetDataSlab+0x1689c>
   37dc0:	ldr	r3, [sp, #196]	; 0xc4
   37dc4:	ldr	r2, [r3, r0, lsl #2]
   37dc8:	cmp	r2, #0
   37dcc:	beq	37de0 <GetDataSlab+0x167fc>
   37dd0:	ldr	r3, [r5, #-4]
   37dd4:	mul	r3, r3, r2
   37dd8:	add	ip, ip, r3, lsl #3
   37ddc:	add	lr, lr, r3
   37de0:	add	r0, r0, #1
   37de4:	cmp	r9, r0
   37de8:	beq	37e64 <GetDataSlab+0x16880>
   37dec:	ldr	r3, [r4]
   37df0:	add	r1, r3, #1
   37df4:	str	r1, [r4]
   37df8:	ldr	r2, [r7, #4]!
   37dfc:	sdiv	r3, r1, r2
   37e00:	mls	r3, r2, r3, r1
   37e04:	cmp	r3, #0
   37e08:	bne	37e50 <GetDataSlab+0x1686c>
   37e0c:	str	r8, [r4], #4
   37e10:	add	r5, r5, #4
   37e14:	ldr	r2, [r5]
   37e18:	sdiv	r3, lr, r2
   37e1c:	mls	r3, r2, r3, lr
   37e20:	cmp	r3, #0
   37e24:	beq	37dc0 <GetDataSlab+0x167dc>
   37e28:	ldr	r1, [r5, #-4]
   37e2c:	ldr	sl, [sp, #196]	; 0xc4
   37e30:	ldr	sl, [sl, r0, lsl #2]
   37e34:	str	sl, [sp, #8]
   37e38:	sub	r3, r2, r3
   37e3c:	mla	r3, sl, r1, r3
   37e40:	add	ip, ip, r3, lsl #3
   37e44:	add	lr, lr, r3
   37e48:	b	37de0 <GetDataSlab+0x167fc>
   37e4c:	ldr	r0, [sp, #28]
   37e50:	add	r3, sp, #152	; 0x98
   37e54:	add	r3, r3, r0, lsl #2
   37e58:	ldr	r3, [r3, #-120]	; 0xffffff88
   37e5c:	add	lr, lr, r3
   37e60:	add	ip, ip, r3, lsl #3
   37e64:	ldr	r3, [sp, #12]
   37e68:	add	r3, r3, r6
   37e6c:	str	r3, [sp, #12]
   37e70:	ldr	r3, [sp, #16]
   37e74:	ldr	r2, [sp, #12]
   37e78:	cmp	r2, r3
   37e7c:	bge	37f24 <GetDataSlab+0x16940>
   37e80:	ldr	r3, [sp, #196]	; 0xc4
   37e84:	ldr	r3, [r3]
   37e88:	cmp	r3, #0
   37e8c:	addne	ip, ip, r3, lsl #3
   37e90:	addne	lr, lr, r3
   37e94:	ldr	r6, [fp]
   37e98:	cmp	r6, #0
   37e9c:	ble	37ecc <GetDataSlab+0x168e8>
   37ea0:	sub	r1, ip, #8
   37ea4:	ldr	r3, [sp, #4]
   37ea8:	ldr	r2, [sp, #12]
   37eac:	add	r2, r3, r2
   37eb0:	mov	r0, r2
   37eb4:	ldr	r3, [r1, #8]!
   37eb8:	strb	r3, [r2], #1
   37ebc:	ldr	r6, [fp]
   37ec0:	sub	r3, r2, r0
   37ec4:	cmp	r6, r3
   37ec8:	bgt	37eb4 <GetDataSlab+0x168d0>
   37ecc:	ldr	r3, [sp, #192]	; 0xc0
   37ed0:	ldr	r2, [r3]
   37ed4:	ldr	r3, [sp, #196]	; 0xc4
   37ed8:	ldr	r3, [r3]
   37edc:	sub	r3, r2, r3
   37ee0:	add	lr, lr, r3
   37ee4:	add	ip, ip, r3, lsl #3
   37ee8:	cmp	r9, #1
   37eec:	ble	37e64 <GetDataSlab+0x16880>
   37ef0:	ldr	r3, [sp, #76]	; 0x4c
   37ef4:	add	r3, r3, #1
   37ef8:	str	r3, [sp, #76]	; 0x4c
   37efc:	ldr	r1, [fp, #4]
   37f00:	sdiv	r2, r3, r1
   37f04:	mls	r3, r1, r2, r3
   37f08:	cmp	r3, #0
   37f0c:	bne	37e4c <GetDataSlab+0x16868>
   37f10:	add	r4, sp, #76	; 0x4c
   37f14:	add	r7, fp, #4
   37f18:	add	r5, sp, #112	; 0x70
   37f1c:	ldr	r0, [sp, #28]
   37f20:	b	37e0c <GetDataSlab+0x16828>
   37f24:	mov	r3, #0
   37f28:	b	251fc <GetDataSlab+0x3c18>
   37f2c:	ldr	r3, [sp, #196]	; 0xc4
   37f30:	ldr	r2, [r3, r0, lsl #2]
   37f34:	cmp	r2, #0
   37f38:	beq	37f4c <GetDataSlab+0x16968>
   37f3c:	ldr	r3, [r5, #-4]
   37f40:	mul	r3, r3, r2
   37f44:	add	ip, ip, r3, lsl #3
   37f48:	add	lr, lr, r3
   37f4c:	add	r0, r0, #1
   37f50:	cmp	r9, r0
   37f54:	beq	37fdc <GetDataSlab+0x169f8>
   37f58:	ldr	r3, [r4]
   37f5c:	add	r1, r3, #1
   37f60:	str	r1, [r4]
   37f64:	ldr	r2, [r7, #4]!
   37f68:	sdiv	r3, r1, r2
   37f6c:	mls	r3, r2, r3, r1
   37f70:	cmp	r3, #0
   37f74:	bne	37fc8 <GetDataSlab+0x169e4>
   37f78:	str	r8, [r4], #4
   37f7c:	add	r5, r5, #4
   37f80:	ldr	r2, [r5]
   37f84:	sdiv	r3, lr, r2
   37f88:	mls	r3, r2, r3, lr
   37f8c:	cmp	r3, #0
   37f90:	beq	37f2c <GetDataSlab+0x16948>
   37f94:	ldr	r1, [r5, #-4]
   37f98:	str	r1, [sp, #8]
   37f9c:	ldr	r1, [sp, #196]	; 0xc4
   37fa0:	ldr	r1, [r1, r0, lsl #2]
   37fa4:	str	r1, [sp, #12]
   37fa8:	sub	r3, r2, r3
   37fac:	mov	r2, r1
   37fb0:	ldr	r1, [sp, #8]
   37fb4:	mla	r3, r2, r1, r3
   37fb8:	add	ip, ip, r3, lsl #3
   37fbc:	add	lr, lr, r3
   37fc0:	b	37f4c <GetDataSlab+0x16968>
   37fc4:	mov	r0, #1
   37fc8:	add	r3, sp, #152	; 0x98
   37fcc:	add	r3, r3, r0, lsl #2
   37fd0:	ldr	r3, [r3, #-120]	; 0xffffff88
   37fd4:	add	lr, lr, r3
   37fd8:	add	ip, ip, r3, lsl #3
   37fdc:	ldr	r3, [sp, #20]
   37fe0:	add	r3, r3, r6
   37fe4:	str	r3, [sp, #20]
   37fe8:	ldr	r2, [sp, #16]
   37fec:	cmp	r3, r2
   37ff0:	bge	380a8 <GetDataSlab+0x16ac4>
   37ff4:	ldr	r3, [sp, #196]	; 0xc4
   37ff8:	ldr	r3, [r3]
   37ffc:	cmp	r3, #0
   38000:	addne	ip, ip, r3, lsl #3
   38004:	addne	lr, lr, r3
   38008:	ldr	r6, [fp]
   3800c:	cmp	r6, #0
   38010:	ble	38048 <GetDataSlab+0x16a64>
   38014:	ldr	r3, [sp, #4]
   38018:	ldr	r2, [sp, #20]
   3801c:	add	r3, r3, r2
   38020:	mov	r1, r3
   38024:	ldr	r2, [ip]
   38028:	strb	r2, [r3], #1
   3802c:	ldr	r2, [sl]
   38030:	add	ip, ip, r2, lsl #3
   38034:	add	lr, lr, r2
   38038:	ldr	r6, [fp]
   3803c:	sub	r2, r3, r1
   38040:	cmp	r6, r2
   38044:	bgt	38024 <GetDataSlab+0x16a40>
   38048:	ldr	r3, [sp, #192]	; 0xc0
   3804c:	ldr	r2, [r3]
   38050:	ldr	r3, [sp, #196]	; 0xc4
   38054:	ldr	r3, [r3]
   38058:	sub	r3, r2, r3
   3805c:	ldr	r2, [sl]
   38060:	mls	r3, r2, r6, r3
   38064:	add	lr, lr, r3
   38068:	add	ip, ip, r3, lsl #3
   3806c:	cmp	r9, #1
   38070:	ble	37fdc <GetDataSlab+0x169f8>
   38074:	ldr	r3, [sp, #76]	; 0x4c
   38078:	add	r3, r3, #1
   3807c:	str	r3, [sp, #76]	; 0x4c
   38080:	ldr	r1, [fp, #4]
   38084:	sdiv	r2, r3, r1
   38088:	mls	r3, r1, r2, r3
   3808c:	cmp	r3, #0
   38090:	bne	37fc4 <GetDataSlab+0x169e0>
   38094:	add	r4, sp, #76	; 0x4c
   38098:	add	r7, fp, #4
   3809c:	add	r5, sp, #112	; 0x70
   380a0:	mov	r0, #1
   380a4:	b	37f78 <GetDataSlab+0x16994>
   380a8:	mov	r3, #0
   380ac:	b	251fc <GetDataSlab+0x3c18>
   380b0:	sub	r3, r8, #1
   380b4:	cmp	r3, #8
   380b8:	addls	pc, pc, r3, lsl #2
   380bc:	b	39bf0 <GetDataSlab+0x1860c>
   380c0:	b	3952c <GetDataSlab+0x17f48>
   380c4:	b	3988c <GetDataSlab+0x182a8>
   380c8:	b	38e74 <GetDataSlab+0x17890>
   380cc:	b	391d0 <GetDataSlab+0x17bec>
   380d0:	b	387bc <GetDataSlab+0x171d8>
   380d4:	b	38b18 <GetDataSlab+0x17534>
   380d8:	b	38450 <GetDataSlab+0x16e6c>
   380dc:	b	39bf0 <GetDataSlab+0x1860c>
   380e0:	b	380e4 <GetDataSlab+0x16b00>
   380e4:	ldr	r3, [sl]
   380e8:	str	r3, [sp, #28]
   380ec:	sub	r3, r3, #1
   380f0:	str	r3, [sp, #32]
   380f4:	ldr	r3, [sp, #192]	; 0xc0
   380f8:	ldr	r3, [r3]
   380fc:	str	r3, [sp, #112]	; 0x70
   38100:	ldr	r3, [fp]
   38104:	str	r3, [sp, #16]
   38108:	cmp	r9, #1
   3810c:	ble	38130 <GetDataSlab+0x16b4c>
   38110:	str	sl, [sp, #20]
   38114:	add	r8, sp, #36	; 0x24
   38118:	ldr	r5, [sp, #192]	; 0xc0
   3811c:	add	r6, sp, #112	; 0x70
   38120:	str	r5, [sp, #12]
   38124:	mov	r4, #1
   38128:	mov	lr, #0
   3812c:	b	3cd08 <GetDataSlab+0x1b724>
   38130:	mov	lr, #0
   38134:	b	3cda0 <GetDataSlab+0x1b7bc>
   38138:	ldr	r3, [sp, #16]
   3813c:	cmp	r3, #0
   38140:	ble	3a544 <GetDataSlab+0x18f60>
   38144:	mov	r3, #0
   38148:	str	r3, [sp, #12]
   3814c:	mov	r8, r3
   38150:	b	38210 <GetDataSlab+0x16c2c>
   38154:	ldr	r3, [sp, #196]	; 0xc4
   38158:	ldr	r3, [r3, r0, lsl #2]
   3815c:	cmp	r3, #0
   38160:	beq	38174 <GetDataSlab+0x16b90>
   38164:	ldr	r2, [r5, #-8]
   38168:	mul	r3, r2, r3
   3816c:	add	ip, ip, r3, lsl #3
   38170:	add	lr, lr, r3
   38174:	add	r0, r0, #1
   38178:	cmp	r9, r0
   3817c:	beq	381f4 <GetDataSlab+0x16c10>
   38180:	ldr	r3, [r4]
   38184:	add	r1, r3, #1
   38188:	str	r1, [r4]
   3818c:	ldr	r2, [r7, #4]!
   38190:	sdiv	r3, r1, r2
   38194:	mls	r3, r2, r3, r1
   38198:	cmp	r3, #0
   3819c:	bne	381e0 <GetDataSlab+0x16bfc>
   381a0:	str	r8, [r4], #4
   381a4:	ldr	r2, [r5], #4
   381a8:	sdiv	r3, lr, r2
   381ac:	mls	r3, r2, r3, lr
   381b0:	cmp	r3, #0
   381b4:	beq	38154 <GetDataSlab+0x16b70>
   381b8:	ldr	r1, [r5, #-8]
   381bc:	ldr	sl, [sp, #196]	; 0xc4
   381c0:	ldr	sl, [sl, r0, lsl #2]
   381c4:	str	sl, [sp, #8]
   381c8:	sub	r3, r2, r3
   381cc:	mla	r3, sl, r1, r3
   381d0:	add	ip, ip, r3, lsl #3
   381d4:	add	lr, lr, r3
   381d8:	b	38174 <GetDataSlab+0x16b90>
   381dc:	ldr	r0, [sp, #28]
   381e0:	add	r3, sp, #152	; 0x98
   381e4:	add	r3, r3, r0, lsl #2
   381e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   381ec:	add	lr, lr, r3
   381f0:	add	ip, ip, r3, lsl #3
   381f4:	ldr	r3, [sp, #12]
   381f8:	add	r3, r3, r6
   381fc:	str	r3, [sp, #12]
   38200:	ldr	r3, [sp, #16]
   38204:	ldr	r2, [sp, #12]
   38208:	cmp	r2, r3
   3820c:	bge	382bc <GetDataSlab+0x16cd8>
   38210:	ldr	r3, [sp, #196]	; 0xc4
   38214:	ldr	r3, [r3]
   38218:	cmp	r3, #0
   3821c:	addne	ip, ip, r3, lsl #3
   38220:	addne	lr, lr, r3
   38224:	ldr	r6, [fp]
   38228:	cmp	r6, #0
   3822c:	ble	38264 <GetDataSlab+0x16c80>
   38230:	mov	r1, ip
   38234:	ldr	r3, [sp, #4]
   38238:	ldr	r2, [sp, #12]
   3823c:	add	r2, r3, r2
   38240:	mov	r0, r2
   38244:	vldmia	r1!, {d7}
   38248:	vcvt.u32.f64	s15, d7
   3824c:	vmov	r3, s15
   38250:	strb	r3, [r2], #1
   38254:	ldr	r6, [fp]
   38258:	sub	r3, r2, r0
   3825c:	cmp	r6, r3
   38260:	bgt	38244 <GetDataSlab+0x16c60>
   38264:	ldr	r3, [sp, #192]	; 0xc0
   38268:	ldr	r2, [r3]
   3826c:	ldr	r3, [sp, #196]	; 0xc4
   38270:	ldr	r3, [r3]
   38274:	sub	r3, r2, r3
   38278:	add	lr, lr, r3
   3827c:	add	ip, ip, r3, lsl #3
   38280:	cmp	r9, #1
   38284:	ble	381f4 <GetDataSlab+0x16c10>
   38288:	ldr	r3, [sp, #76]	; 0x4c
   3828c:	add	r3, r3, #1
   38290:	str	r3, [sp, #76]	; 0x4c
   38294:	ldr	r1, [fp, #4]
   38298:	sdiv	r2, r3, r1
   3829c:	mls	r3, r1, r2, r3
   382a0:	cmp	r3, #0
   382a4:	bne	381dc <GetDataSlab+0x16bf8>
   382a8:	add	r4, sp, #76	; 0x4c
   382ac:	add	r7, fp, #4
   382b0:	add	r5, sp, #116	; 0x74
   382b4:	ldr	r0, [sp, #28]
   382b8:	b	381a0 <GetDataSlab+0x16bbc>
   382bc:	mov	r3, #0
   382c0:	b	251fc <GetDataSlab+0x3c18>
   382c4:	ldr	r3, [sp, #196]	; 0xc4
   382c8:	ldr	r2, [r3, r0, lsl #2]
   382cc:	cmp	r2, #0
   382d0:	beq	382e4 <GetDataSlab+0x16d00>
   382d4:	ldr	r3, [r5, #-4]
   382d8:	mul	r3, r3, r2
   382dc:	add	ip, ip, r3, lsl #3
   382e0:	add	lr, lr, r3
   382e4:	add	r0, r0, #1
   382e8:	cmp	r9, r0
   382ec:	beq	38374 <GetDataSlab+0x16d90>
   382f0:	ldr	r3, [r4]
   382f4:	add	r1, r3, #1
   382f8:	str	r1, [r4]
   382fc:	ldr	r2, [r7, #4]!
   38300:	sdiv	r3, r1, r2
   38304:	mls	r3, r2, r3, r1
   38308:	cmp	r3, #0
   3830c:	bne	38360 <GetDataSlab+0x16d7c>
   38310:	str	r8, [r4], #4
   38314:	add	r5, r5, #4
   38318:	ldr	r2, [r5]
   3831c:	sdiv	r3, lr, r2
   38320:	mls	r3, r2, r3, lr
   38324:	cmp	r3, #0
   38328:	beq	382c4 <GetDataSlab+0x16ce0>
   3832c:	ldr	r1, [r5, #-4]
   38330:	str	r1, [sp, #8]
   38334:	ldr	r1, [sp, #196]	; 0xc4
   38338:	ldr	r1, [r1, r0, lsl #2]
   3833c:	str	r1, [sp, #12]
   38340:	sub	r3, r2, r3
   38344:	mov	r2, r1
   38348:	ldr	r1, [sp, #8]
   3834c:	mla	r3, r2, r1, r3
   38350:	add	ip, ip, r3, lsl #3
   38354:	add	lr, lr, r3
   38358:	b	382e4 <GetDataSlab+0x16d00>
   3835c:	mov	r0, #1
   38360:	add	r3, sp, #152	; 0x98
   38364:	add	r3, r3, r0, lsl #2
   38368:	ldr	r3, [r3, #-120]	; 0xffffff88
   3836c:	add	lr, lr, r3
   38370:	add	ip, ip, r3, lsl #3
   38374:	ldr	r3, [sp, #20]
   38378:	add	r3, r3, r6
   3837c:	str	r3, [sp, #20]
   38380:	ldr	r2, [sp, #16]
   38384:	cmp	r3, r2
   38388:	bge	38448 <GetDataSlab+0x16e64>
   3838c:	ldr	r3, [sp, #196]	; 0xc4
   38390:	ldr	r3, [r3]
   38394:	cmp	r3, #0
   38398:	addne	ip, ip, r3, lsl #3
   3839c:	addne	lr, lr, r3
   383a0:	ldr	r6, [fp]
   383a4:	cmp	r6, #0
   383a8:	ble	383e8 <GetDataSlab+0x16e04>
   383ac:	ldr	r3, [sp, #4]
   383b0:	ldr	r2, [sp, #20]
   383b4:	add	r3, r3, r2
   383b8:	mov	r1, r3
   383bc:	vldr	d7, [ip]
   383c0:	vcvt.u32.f64	s15, d7
   383c4:	vmov	r2, s15
   383c8:	strb	r2, [r3], #1
   383cc:	ldr	r2, [sl]
   383d0:	add	ip, ip, r2, lsl #3
   383d4:	add	lr, lr, r2
   383d8:	ldr	r6, [fp]
   383dc:	sub	r2, r3, r1
   383e0:	cmp	r6, r2
   383e4:	bgt	383bc <GetDataSlab+0x16dd8>
   383e8:	ldr	r3, [sp, #192]	; 0xc0
   383ec:	ldr	r2, [r3]
   383f0:	ldr	r3, [sp, #196]	; 0xc4
   383f4:	ldr	r3, [r3]
   383f8:	sub	r3, r2, r3
   383fc:	ldr	r2, [sl]
   38400:	mls	r3, r2, r6, r3
   38404:	add	lr, lr, r3
   38408:	add	ip, ip, r3, lsl #3
   3840c:	cmp	r9, #1
   38410:	ble	38374 <GetDataSlab+0x16d90>
   38414:	ldr	r3, [sp, #76]	; 0x4c
   38418:	add	r3, r3, #1
   3841c:	str	r3, [sp, #76]	; 0x4c
   38420:	ldr	r1, [fp, #4]
   38424:	sdiv	r2, r3, r1
   38428:	mls	r3, r1, r2, r3
   3842c:	cmp	r3, #0
   38430:	bne	3835c <GetDataSlab+0x16d78>
   38434:	add	r4, sp, #76	; 0x4c
   38438:	add	r7, fp, #4
   3843c:	add	r5, sp, #112	; 0x70
   38440:	mov	r0, #1
   38444:	b	38310 <GetDataSlab+0x16d2c>
   38448:	mov	r3, #0
   3844c:	b	251fc <GetDataSlab+0x3c18>
   38450:	ldr	r3, [sl]
   38454:	str	r3, [sp, #28]
   38458:	sub	r3, r3, #1
   3845c:	str	r3, [sp, #32]
   38460:	ldr	r3, [sp, #192]	; 0xc0
   38464:	ldr	r3, [r3]
   38468:	str	r3, [sp, #112]	; 0x70
   3846c:	ldr	r3, [fp]
   38470:	str	r3, [sp, #16]
   38474:	cmp	r9, #1
   38478:	ble	3849c <GetDataSlab+0x16eb8>
   3847c:	str	sl, [sp, #20]
   38480:	add	r8, sp, #36	; 0x24
   38484:	ldr	r5, [sp, #192]	; 0xc0
   38488:	add	r6, sp, #112	; 0x70
   3848c:	str	r5, [sp, #12]
   38490:	mov	r4, #1
   38494:	mov	lr, #0
   38498:	b	3cc18 <GetDataSlab+0x1b634>
   3849c:	mov	lr, #0
   384a0:	b	3ccb0 <GetDataSlab+0x1b6cc>
   384a4:	ldr	r3, [sp, #16]
   384a8:	cmp	r3, #0
   384ac:	ble	3a54c <GetDataSlab+0x18f68>
   384b0:	mov	r3, #0
   384b4:	str	r3, [sp, #12]
   384b8:	mov	r8, r3
   384bc:	b	3857c <GetDataSlab+0x16f98>
   384c0:	ldr	r3, [sp, #196]	; 0xc4
   384c4:	ldr	r3, [r3, r0, lsl #2]
   384c8:	cmp	r3, #0
   384cc:	beq	384e0 <GetDataSlab+0x16efc>
   384d0:	ldr	r2, [r5, #-8]
   384d4:	mul	r3, r2, r3
   384d8:	add	ip, ip, r3, lsl #2
   384dc:	add	lr, lr, r3
   384e0:	add	r0, r0, #1
   384e4:	cmp	r9, r0
   384e8:	beq	38560 <GetDataSlab+0x16f7c>
   384ec:	ldr	r3, [r4]
   384f0:	add	r1, r3, #1
   384f4:	str	r1, [r4]
   384f8:	ldr	r2, [r7, #4]!
   384fc:	sdiv	r3, r1, r2
   38500:	mls	r3, r2, r3, r1
   38504:	cmp	r3, #0
   38508:	bne	3854c <GetDataSlab+0x16f68>
   3850c:	str	r8, [r4], #4
   38510:	ldr	r2, [r5], #4
   38514:	sdiv	r3, lr, r2
   38518:	mls	r3, r2, r3, lr
   3851c:	cmp	r3, #0
   38520:	beq	384c0 <GetDataSlab+0x16edc>
   38524:	ldr	r1, [r5, #-8]
   38528:	ldr	sl, [sp, #196]	; 0xc4
   3852c:	ldr	sl, [sl, r0, lsl #2]
   38530:	str	sl, [sp, #8]
   38534:	sub	r3, r2, r3
   38538:	mla	r3, sl, r1, r3
   3853c:	add	ip, ip, r3, lsl #2
   38540:	add	lr, lr, r3
   38544:	b	384e0 <GetDataSlab+0x16efc>
   38548:	ldr	r0, [sp, #28]
   3854c:	add	r3, sp, #152	; 0x98
   38550:	add	r3, r3, r0, lsl #2
   38554:	ldr	r3, [r3, #-120]	; 0xffffff88
   38558:	add	lr, lr, r3
   3855c:	add	ip, ip, r3, lsl #2
   38560:	ldr	r3, [sp, #12]
   38564:	add	r3, r3, r6
   38568:	str	r3, [sp, #12]
   3856c:	ldr	r3, [sp, #16]
   38570:	ldr	r2, [sp, #12]
   38574:	cmp	r2, r3
   38578:	bge	38628 <GetDataSlab+0x17044>
   3857c:	ldr	r3, [sp, #196]	; 0xc4
   38580:	ldr	r3, [r3]
   38584:	cmp	r3, #0
   38588:	addne	ip, ip, r3, lsl #2
   3858c:	addne	lr, lr, r3
   38590:	ldr	r6, [fp]
   38594:	cmp	r6, #0
   38598:	ble	385d0 <GetDataSlab+0x16fec>
   3859c:	mov	r1, ip
   385a0:	ldr	r3, [sp, #4]
   385a4:	ldr	r2, [sp, #12]
   385a8:	add	r2, r3, r2
   385ac:	mov	r0, r2
   385b0:	vldmia	r1!, {s15}
   385b4:	vcvt.u32.f32	s15, s15
   385b8:	vmov	r3, s15
   385bc:	strb	r3, [r2], #1
   385c0:	ldr	r6, [fp]
   385c4:	sub	r3, r2, r0
   385c8:	cmp	r6, r3
   385cc:	bgt	385b0 <GetDataSlab+0x16fcc>
   385d0:	ldr	r3, [sp, #192]	; 0xc0
   385d4:	ldr	r2, [r3]
   385d8:	ldr	r3, [sp, #196]	; 0xc4
   385dc:	ldr	r3, [r3]
   385e0:	sub	r3, r2, r3
   385e4:	add	lr, lr, r3
   385e8:	add	ip, ip, r3, lsl #2
   385ec:	cmp	r9, #1
   385f0:	ble	38560 <GetDataSlab+0x16f7c>
   385f4:	ldr	r3, [sp, #76]	; 0x4c
   385f8:	add	r3, r3, #1
   385fc:	str	r3, [sp, #76]	; 0x4c
   38600:	ldr	r1, [fp, #4]
   38604:	sdiv	r2, r3, r1
   38608:	mls	r3, r1, r2, r3
   3860c:	cmp	r3, #0
   38610:	bne	38548 <GetDataSlab+0x16f64>
   38614:	add	r4, sp, #76	; 0x4c
   38618:	add	r7, fp, #4
   3861c:	add	r5, sp, #116	; 0x74
   38620:	ldr	r0, [sp, #28]
   38624:	b	3850c <GetDataSlab+0x16f28>
   38628:	mov	r3, #0
   3862c:	b	251fc <GetDataSlab+0x3c18>
   38630:	ldr	r3, [sp, #196]	; 0xc4
   38634:	ldr	r2, [r3, r0, lsl #2]
   38638:	cmp	r2, #0
   3863c:	beq	38650 <GetDataSlab+0x1706c>
   38640:	ldr	r3, [r5, #-4]
   38644:	mul	r3, r3, r2
   38648:	add	ip, ip, r3, lsl #2
   3864c:	add	lr, lr, r3
   38650:	add	r0, r0, #1
   38654:	cmp	r9, r0
   38658:	beq	386e0 <GetDataSlab+0x170fc>
   3865c:	ldr	r3, [r4]
   38660:	add	r1, r3, #1
   38664:	str	r1, [r4]
   38668:	ldr	r2, [r7, #4]!
   3866c:	sdiv	r3, r1, r2
   38670:	mls	r3, r2, r3, r1
   38674:	cmp	r3, #0
   38678:	bne	386cc <GetDataSlab+0x170e8>
   3867c:	str	r8, [r4], #4
   38680:	add	r5, r5, #4
   38684:	ldr	r2, [r5]
   38688:	sdiv	r3, lr, r2
   3868c:	mls	r3, r2, r3, lr
   38690:	cmp	r3, #0
   38694:	beq	38630 <GetDataSlab+0x1704c>
   38698:	ldr	r1, [r5, #-4]
   3869c:	str	r1, [sp, #8]
   386a0:	ldr	r1, [sp, #196]	; 0xc4
   386a4:	ldr	r1, [r1, r0, lsl #2]
   386a8:	str	r1, [sp, #12]
   386ac:	sub	r3, r2, r3
   386b0:	mov	r2, r1
   386b4:	ldr	r1, [sp, #8]
   386b8:	mla	r3, r2, r1, r3
   386bc:	add	ip, ip, r3, lsl #2
   386c0:	add	lr, lr, r3
   386c4:	b	38650 <GetDataSlab+0x1706c>
   386c8:	mov	r0, #1
   386cc:	add	r3, sp, #152	; 0x98
   386d0:	add	r3, r3, r0, lsl #2
   386d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   386d8:	add	lr, lr, r3
   386dc:	add	ip, ip, r3, lsl #2
   386e0:	ldr	r3, [sp, #20]
   386e4:	add	r3, r3, r6
   386e8:	str	r3, [sp, #20]
   386ec:	ldr	r2, [sp, #16]
   386f0:	cmp	r3, r2
   386f4:	bge	387b4 <GetDataSlab+0x171d0>
   386f8:	ldr	r3, [sp, #196]	; 0xc4
   386fc:	ldr	r3, [r3]
   38700:	cmp	r3, #0
   38704:	addne	ip, ip, r3, lsl #2
   38708:	addne	lr, lr, r3
   3870c:	ldr	r6, [fp]
   38710:	cmp	r6, #0
   38714:	ble	38754 <GetDataSlab+0x17170>
   38718:	ldr	r3, [sp, #4]
   3871c:	ldr	r2, [sp, #20]
   38720:	add	r3, r3, r2
   38724:	mov	r1, r3
   38728:	vldr	s15, [ip]
   3872c:	vcvt.u32.f32	s15, s15
   38730:	vmov	r2, s15
   38734:	strb	r2, [r3], #1
   38738:	ldr	r2, [sl]
   3873c:	add	ip, ip, r2, lsl #2
   38740:	add	lr, lr, r2
   38744:	ldr	r6, [fp]
   38748:	sub	r2, r3, r1
   3874c:	cmp	r6, r2
   38750:	bgt	38728 <GetDataSlab+0x17144>
   38754:	ldr	r3, [sp, #192]	; 0xc0
   38758:	ldr	r2, [r3]
   3875c:	ldr	r3, [sp, #196]	; 0xc4
   38760:	ldr	r3, [r3]
   38764:	sub	r3, r2, r3
   38768:	ldr	r2, [sl]
   3876c:	mls	r3, r2, r6, r3
   38770:	add	lr, lr, r3
   38774:	add	ip, ip, r3, lsl #2
   38778:	cmp	r9, #1
   3877c:	ble	386e0 <GetDataSlab+0x170fc>
   38780:	ldr	r3, [sp, #76]	; 0x4c
   38784:	add	r3, r3, #1
   38788:	str	r3, [sp, #76]	; 0x4c
   3878c:	ldr	r1, [fp, #4]
   38790:	sdiv	r2, r3, r1
   38794:	mls	r3, r1, r2, r3
   38798:	cmp	r3, #0
   3879c:	bne	386c8 <GetDataSlab+0x170e4>
   387a0:	add	r4, sp, #76	; 0x4c
   387a4:	add	r7, fp, #4
   387a8:	add	r5, sp, #112	; 0x70
   387ac:	mov	r0, #1
   387b0:	b	3867c <GetDataSlab+0x17098>
   387b4:	mov	r3, #0
   387b8:	b	251fc <GetDataSlab+0x3c18>
   387bc:	ldr	r3, [sl]
   387c0:	str	r3, [sp, #28]
   387c4:	sub	r3, r3, #1
   387c8:	str	r3, [sp, #32]
   387cc:	ldr	r3, [sp, #192]	; 0xc0
   387d0:	ldr	r3, [r3]
   387d4:	str	r3, [sp, #112]	; 0x70
   387d8:	ldr	r3, [fp]
   387dc:	str	r3, [sp, #16]
   387e0:	cmp	r9, #1
   387e4:	ble	38808 <GetDataSlab+0x17224>
   387e8:	str	sl, [sp, #20]
   387ec:	add	r8, sp, #36	; 0x24
   387f0:	ldr	r5, [sp, #192]	; 0xc0
   387f4:	add	r6, sp, #112	; 0x70
   387f8:	str	r5, [sp, #12]
   387fc:	mov	r4, #1
   38800:	mov	lr, #0
   38804:	b	3ca38 <GetDataSlab+0x1b454>
   38808:	mov	lr, #0
   3880c:	b	3cad0 <GetDataSlab+0x1b4ec>
   38810:	ldr	r3, [sp, #16]
   38814:	cmp	r3, #0
   38818:	ble	3a554 <GetDataSlab+0x18f70>
   3881c:	mov	r3, #0
   38820:	str	r3, [sp, #12]
   38824:	mov	r8, r3
   38828:	b	388e8 <GetDataSlab+0x17304>
   3882c:	ldr	r3, [sp, #196]	; 0xc4
   38830:	ldr	r3, [r3, r0, lsl #2]
   38834:	cmp	r3, #0
   38838:	beq	3884c <GetDataSlab+0x17268>
   3883c:	ldr	r2, [r5, #-8]
   38840:	mul	r3, r2, r3
   38844:	add	ip, ip, r3, lsl #2
   38848:	add	lr, lr, r3
   3884c:	add	r0, r0, #1
   38850:	cmp	r9, r0
   38854:	beq	388cc <GetDataSlab+0x172e8>
   38858:	ldr	r3, [r4]
   3885c:	add	r1, r3, #1
   38860:	str	r1, [r4]
   38864:	ldr	r2, [r7, #4]!
   38868:	sdiv	r3, r1, r2
   3886c:	mls	r3, r2, r3, r1
   38870:	cmp	r3, #0
   38874:	bne	388b8 <GetDataSlab+0x172d4>
   38878:	str	r8, [r4], #4
   3887c:	ldr	r2, [r5], #4
   38880:	sdiv	r3, lr, r2
   38884:	mls	r3, r2, r3, lr
   38888:	cmp	r3, #0
   3888c:	beq	3882c <GetDataSlab+0x17248>
   38890:	ldr	r1, [r5, #-8]
   38894:	ldr	sl, [sp, #196]	; 0xc4
   38898:	ldr	sl, [sl, r0, lsl #2]
   3889c:	str	sl, [sp, #8]
   388a0:	sub	r3, r2, r3
   388a4:	mla	r3, sl, r1, r3
   388a8:	add	ip, ip, r3, lsl #2
   388ac:	add	lr, lr, r3
   388b0:	b	3884c <GetDataSlab+0x17268>
   388b4:	ldr	r0, [sp, #28]
   388b8:	add	r3, sp, #152	; 0x98
   388bc:	add	r3, r3, r0, lsl #2
   388c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   388c4:	add	lr, lr, r3
   388c8:	add	ip, ip, r3, lsl #2
   388cc:	ldr	r3, [sp, #12]
   388d0:	add	r3, r3, r6
   388d4:	str	r3, [sp, #12]
   388d8:	ldr	r3, [sp, #16]
   388dc:	ldr	r2, [sp, #12]
   388e0:	cmp	r2, r3
   388e4:	bge	3898c <GetDataSlab+0x173a8>
   388e8:	ldr	r3, [sp, #196]	; 0xc4
   388ec:	ldr	r3, [r3]
   388f0:	cmp	r3, #0
   388f4:	addne	ip, ip, r3, lsl #2
   388f8:	addne	lr, lr, r3
   388fc:	ldr	r6, [fp]
   38900:	cmp	r6, #0
   38904:	ble	38934 <GetDataSlab+0x17350>
   38908:	sub	r1, ip, #4
   3890c:	ldr	r3, [sp, #4]
   38910:	ldr	r2, [sp, #12]
   38914:	add	r2, r3, r2
   38918:	mov	r0, r2
   3891c:	ldr	r3, [r1, #4]!
   38920:	strb	r3, [r2], #1
   38924:	ldr	r6, [fp]
   38928:	sub	r3, r2, r0
   3892c:	cmp	r6, r3
   38930:	bgt	3891c <GetDataSlab+0x17338>
   38934:	ldr	r3, [sp, #192]	; 0xc0
   38938:	ldr	r2, [r3]
   3893c:	ldr	r3, [sp, #196]	; 0xc4
   38940:	ldr	r3, [r3]
   38944:	sub	r3, r2, r3
   38948:	add	lr, lr, r3
   3894c:	add	ip, ip, r3, lsl #2
   38950:	cmp	r9, #1
   38954:	ble	388cc <GetDataSlab+0x172e8>
   38958:	ldr	r3, [sp, #76]	; 0x4c
   3895c:	add	r3, r3, #1
   38960:	str	r3, [sp, #76]	; 0x4c
   38964:	ldr	r1, [fp, #4]
   38968:	sdiv	r2, r3, r1
   3896c:	mls	r3, r1, r2, r3
   38970:	cmp	r3, #0
   38974:	bne	388b4 <GetDataSlab+0x172d0>
   38978:	add	r4, sp, #76	; 0x4c
   3897c:	add	r7, fp, #4
   38980:	add	r5, sp, #116	; 0x74
   38984:	ldr	r0, [sp, #28]
   38988:	b	38878 <GetDataSlab+0x17294>
   3898c:	mov	r3, #0
   38990:	b	251fc <GetDataSlab+0x3c18>
   38994:	ldr	r3, [sp, #196]	; 0xc4
   38998:	ldr	r2, [r3, r0, lsl #2]
   3899c:	cmp	r2, #0
   389a0:	beq	389b4 <GetDataSlab+0x173d0>
   389a4:	ldr	r3, [r5, #-4]
   389a8:	mul	r3, r3, r2
   389ac:	add	ip, ip, r3, lsl #2
   389b0:	add	lr, lr, r3
   389b4:	add	r0, r0, #1
   389b8:	cmp	r9, r0
   389bc:	beq	38a44 <GetDataSlab+0x17460>
   389c0:	ldr	r3, [r4]
   389c4:	add	r1, r3, #1
   389c8:	str	r1, [r4]
   389cc:	ldr	r2, [r7, #4]!
   389d0:	sdiv	r3, r1, r2
   389d4:	mls	r3, r2, r3, r1
   389d8:	cmp	r3, #0
   389dc:	bne	38a30 <GetDataSlab+0x1744c>
   389e0:	str	r8, [r4], #4
   389e4:	add	r5, r5, #4
   389e8:	ldr	r2, [r5]
   389ec:	sdiv	r3, lr, r2
   389f0:	mls	r3, r2, r3, lr
   389f4:	cmp	r3, #0
   389f8:	beq	38994 <GetDataSlab+0x173b0>
   389fc:	ldr	r1, [r5, #-4]
   38a00:	str	r1, [sp, #8]
   38a04:	ldr	r1, [sp, #196]	; 0xc4
   38a08:	ldr	r1, [r1, r0, lsl #2]
   38a0c:	str	r1, [sp, #12]
   38a10:	sub	r3, r2, r3
   38a14:	mov	r2, r1
   38a18:	ldr	r1, [sp, #8]
   38a1c:	mla	r3, r2, r1, r3
   38a20:	add	ip, ip, r3, lsl #2
   38a24:	add	lr, lr, r3
   38a28:	b	389b4 <GetDataSlab+0x173d0>
   38a2c:	mov	r0, #1
   38a30:	add	r3, sp, #152	; 0x98
   38a34:	add	r3, r3, r0, lsl #2
   38a38:	ldr	r3, [r3, #-120]	; 0xffffff88
   38a3c:	add	lr, lr, r3
   38a40:	add	ip, ip, r3, lsl #2
   38a44:	ldr	r3, [sp, #20]
   38a48:	add	r3, r3, r6
   38a4c:	str	r3, [sp, #20]
   38a50:	ldr	r2, [sp, #16]
   38a54:	cmp	r3, r2
   38a58:	bge	38b10 <GetDataSlab+0x1752c>
   38a5c:	ldr	r3, [sp, #196]	; 0xc4
   38a60:	ldr	r3, [r3]
   38a64:	cmp	r3, #0
   38a68:	addne	ip, ip, r3, lsl #2
   38a6c:	addne	lr, lr, r3
   38a70:	ldr	r6, [fp]
   38a74:	cmp	r6, #0
   38a78:	ble	38ab0 <GetDataSlab+0x174cc>
   38a7c:	ldr	r3, [sp, #4]
   38a80:	ldr	r2, [sp, #20]
   38a84:	add	r3, r3, r2
   38a88:	mov	r1, r3
   38a8c:	ldr	r2, [ip]
   38a90:	strb	r2, [r3], #1
   38a94:	ldr	r2, [sl]
   38a98:	add	ip, ip, r2, lsl #2
   38a9c:	add	lr, lr, r2
   38aa0:	ldr	r6, [fp]
   38aa4:	sub	r2, r3, r1
   38aa8:	cmp	r6, r2
   38aac:	bgt	38a8c <GetDataSlab+0x174a8>
   38ab0:	ldr	r3, [sp, #192]	; 0xc0
   38ab4:	ldr	r2, [r3]
   38ab8:	ldr	r3, [sp, #196]	; 0xc4
   38abc:	ldr	r3, [r3]
   38ac0:	sub	r3, r2, r3
   38ac4:	ldr	r2, [sl]
   38ac8:	mls	r3, r2, r6, r3
   38acc:	add	lr, lr, r3
   38ad0:	add	ip, ip, r3, lsl #2
   38ad4:	cmp	r9, #1
   38ad8:	ble	38a44 <GetDataSlab+0x17460>
   38adc:	ldr	r3, [sp, #76]	; 0x4c
   38ae0:	add	r3, r3, #1
   38ae4:	str	r3, [sp, #76]	; 0x4c
   38ae8:	ldr	r1, [fp, #4]
   38aec:	sdiv	r2, r3, r1
   38af0:	mls	r3, r1, r2, r3
   38af4:	cmp	r3, #0
   38af8:	bne	38a2c <GetDataSlab+0x17448>
   38afc:	add	r4, sp, #76	; 0x4c
   38b00:	add	r7, fp, #4
   38b04:	add	r5, sp, #112	; 0x70
   38b08:	mov	r0, #1
   38b0c:	b	389e0 <GetDataSlab+0x173fc>
   38b10:	mov	r3, #0
   38b14:	b	251fc <GetDataSlab+0x3c18>
   38b18:	ldr	r3, [sl]
   38b1c:	str	r3, [sp, #28]
   38b20:	sub	r3, r3, #1
   38b24:	str	r3, [sp, #32]
   38b28:	ldr	r3, [sp, #192]	; 0xc0
   38b2c:	ldr	r3, [r3]
   38b30:	str	r3, [sp, #112]	; 0x70
   38b34:	ldr	r3, [fp]
   38b38:	str	r3, [sp, #16]
   38b3c:	cmp	r9, #1
   38b40:	ble	38b64 <GetDataSlab+0x17580>
   38b44:	str	sl, [sp, #20]
   38b48:	add	r8, sp, #36	; 0x24
   38b4c:	ldr	r5, [sp, #192]	; 0xc0
   38b50:	add	r6, sp, #112	; 0x70
   38b54:	str	r5, [sp, #12]
   38b58:	mov	r4, #1
   38b5c:	mov	lr, #0
   38b60:	b	3cb28 <GetDataSlab+0x1b544>
   38b64:	mov	lr, #0
   38b68:	b	3cbc0 <GetDataSlab+0x1b5dc>
   38b6c:	ldr	r3, [sp, #16]
   38b70:	cmp	r3, #0
   38b74:	ble	3a55c <GetDataSlab+0x18f78>
   38b78:	mov	r3, #0
   38b7c:	str	r3, [sp, #12]
   38b80:	mov	r8, r3
   38b84:	b	38c44 <GetDataSlab+0x17660>
   38b88:	ldr	r3, [sp, #196]	; 0xc4
   38b8c:	ldr	r3, [r3, r0, lsl #2]
   38b90:	cmp	r3, #0
   38b94:	beq	38ba8 <GetDataSlab+0x175c4>
   38b98:	ldr	r2, [r5, #-8]
   38b9c:	mul	r3, r2, r3
   38ba0:	add	ip, ip, r3, lsl #2
   38ba4:	add	lr, lr, r3
   38ba8:	add	r0, r0, #1
   38bac:	cmp	r9, r0
   38bb0:	beq	38c28 <GetDataSlab+0x17644>
   38bb4:	ldr	r3, [r4]
   38bb8:	add	r1, r3, #1
   38bbc:	str	r1, [r4]
   38bc0:	ldr	r2, [r7, #4]!
   38bc4:	sdiv	r3, r1, r2
   38bc8:	mls	r3, r2, r3, r1
   38bcc:	cmp	r3, #0
   38bd0:	bne	38c14 <GetDataSlab+0x17630>
   38bd4:	str	r8, [r4], #4
   38bd8:	ldr	r2, [r5], #4
   38bdc:	sdiv	r3, lr, r2
   38be0:	mls	r3, r2, r3, lr
   38be4:	cmp	r3, #0
   38be8:	beq	38b88 <GetDataSlab+0x175a4>
   38bec:	ldr	r1, [r5, #-8]
   38bf0:	ldr	sl, [sp, #196]	; 0xc4
   38bf4:	ldr	sl, [sl, r0, lsl #2]
   38bf8:	str	sl, [sp, #8]
   38bfc:	sub	r3, r2, r3
   38c00:	mla	r3, sl, r1, r3
   38c04:	add	ip, ip, r3, lsl #2
   38c08:	add	lr, lr, r3
   38c0c:	b	38ba8 <GetDataSlab+0x175c4>
   38c10:	ldr	r0, [sp, #28]
   38c14:	add	r3, sp, #152	; 0x98
   38c18:	add	r3, r3, r0, lsl #2
   38c1c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38c20:	add	lr, lr, r3
   38c24:	add	ip, ip, r3, lsl #2
   38c28:	ldr	r3, [sp, #12]
   38c2c:	add	r3, r3, r6
   38c30:	str	r3, [sp, #12]
   38c34:	ldr	r3, [sp, #16]
   38c38:	ldr	r2, [sp, #12]
   38c3c:	cmp	r2, r3
   38c40:	bge	38ce8 <GetDataSlab+0x17704>
   38c44:	ldr	r3, [sp, #196]	; 0xc4
   38c48:	ldr	r3, [r3]
   38c4c:	cmp	r3, #0
   38c50:	addne	ip, ip, r3, lsl #2
   38c54:	addne	lr, lr, r3
   38c58:	ldr	r6, [fp]
   38c5c:	cmp	r6, #0
   38c60:	ble	38c90 <GetDataSlab+0x176ac>
   38c64:	sub	r1, ip, #4
   38c68:	ldr	r3, [sp, #4]
   38c6c:	ldr	r2, [sp, #12]
   38c70:	add	r2, r3, r2
   38c74:	mov	r0, r2
   38c78:	ldr	r3, [r1, #4]!
   38c7c:	strb	r3, [r2], #1
   38c80:	ldr	r6, [fp]
   38c84:	sub	r3, r2, r0
   38c88:	cmp	r6, r3
   38c8c:	bgt	38c78 <GetDataSlab+0x17694>
   38c90:	ldr	r3, [sp, #192]	; 0xc0
   38c94:	ldr	r2, [r3]
   38c98:	ldr	r3, [sp, #196]	; 0xc4
   38c9c:	ldr	r3, [r3]
   38ca0:	sub	r3, r2, r3
   38ca4:	add	lr, lr, r3
   38ca8:	add	ip, ip, r3, lsl #2
   38cac:	cmp	r9, #1
   38cb0:	ble	38c28 <GetDataSlab+0x17644>
   38cb4:	ldr	r3, [sp, #76]	; 0x4c
   38cb8:	add	r3, r3, #1
   38cbc:	str	r3, [sp, #76]	; 0x4c
   38cc0:	ldr	r1, [fp, #4]
   38cc4:	sdiv	r2, r3, r1
   38cc8:	mls	r3, r1, r2, r3
   38ccc:	cmp	r3, #0
   38cd0:	bne	38c10 <GetDataSlab+0x1762c>
   38cd4:	add	r4, sp, #76	; 0x4c
   38cd8:	add	r7, fp, #4
   38cdc:	add	r5, sp, #116	; 0x74
   38ce0:	ldr	r0, [sp, #28]
   38ce4:	b	38bd4 <GetDataSlab+0x175f0>
   38ce8:	mov	r3, #0
   38cec:	b	251fc <GetDataSlab+0x3c18>
   38cf0:	ldr	r3, [sp, #196]	; 0xc4
   38cf4:	ldr	r2, [r3, r0, lsl #2]
   38cf8:	cmp	r2, #0
   38cfc:	beq	38d10 <GetDataSlab+0x1772c>
   38d00:	ldr	r3, [r5, #-4]
   38d04:	mul	r3, r3, r2
   38d08:	add	ip, ip, r3, lsl #2
   38d0c:	add	lr, lr, r3
   38d10:	add	r0, r0, #1
   38d14:	cmp	r9, r0
   38d18:	beq	38da0 <GetDataSlab+0x177bc>
   38d1c:	ldr	r3, [r4]
   38d20:	add	r1, r3, #1
   38d24:	str	r1, [r4]
   38d28:	ldr	r2, [r7, #4]!
   38d2c:	sdiv	r3, r1, r2
   38d30:	mls	r3, r2, r3, r1
   38d34:	cmp	r3, #0
   38d38:	bne	38d8c <GetDataSlab+0x177a8>
   38d3c:	str	r8, [r4], #4
   38d40:	add	r5, r5, #4
   38d44:	ldr	r2, [r5]
   38d48:	sdiv	r3, lr, r2
   38d4c:	mls	r3, r2, r3, lr
   38d50:	cmp	r3, #0
   38d54:	beq	38cf0 <GetDataSlab+0x1770c>
   38d58:	ldr	r1, [r5, #-4]
   38d5c:	str	r1, [sp, #8]
   38d60:	ldr	r1, [sp, #196]	; 0xc4
   38d64:	ldr	r1, [r1, r0, lsl #2]
   38d68:	str	r1, [sp, #12]
   38d6c:	sub	r3, r2, r3
   38d70:	mov	r2, r1
   38d74:	ldr	r1, [sp, #8]
   38d78:	mla	r3, r2, r1, r3
   38d7c:	add	ip, ip, r3, lsl #2
   38d80:	add	lr, lr, r3
   38d84:	b	38d10 <GetDataSlab+0x1772c>
   38d88:	mov	r0, #1
   38d8c:	add	r3, sp, #152	; 0x98
   38d90:	add	r3, r3, r0, lsl #2
   38d94:	ldr	r3, [r3, #-120]	; 0xffffff88
   38d98:	add	lr, lr, r3
   38d9c:	add	ip, ip, r3, lsl #2
   38da0:	ldr	r3, [sp, #20]
   38da4:	add	r3, r3, r6
   38da8:	str	r3, [sp, #20]
   38dac:	ldr	r2, [sp, #16]
   38db0:	cmp	r3, r2
   38db4:	bge	38e6c <GetDataSlab+0x17888>
   38db8:	ldr	r3, [sp, #196]	; 0xc4
   38dbc:	ldr	r3, [r3]
   38dc0:	cmp	r3, #0
   38dc4:	addne	ip, ip, r3, lsl #2
   38dc8:	addne	lr, lr, r3
   38dcc:	ldr	r6, [fp]
   38dd0:	cmp	r6, #0
   38dd4:	ble	38e0c <GetDataSlab+0x17828>
   38dd8:	ldr	r3, [sp, #4]
   38ddc:	ldr	r2, [sp, #20]
   38de0:	add	r3, r3, r2
   38de4:	mov	r1, r3
   38de8:	ldr	r2, [ip]
   38dec:	strb	r2, [r3], #1
   38df0:	ldr	r2, [sl]
   38df4:	add	ip, ip, r2, lsl #2
   38df8:	add	lr, lr, r2
   38dfc:	ldr	r6, [fp]
   38e00:	sub	r2, r3, r1
   38e04:	cmp	r6, r2
   38e08:	bgt	38de8 <GetDataSlab+0x17804>
   38e0c:	ldr	r3, [sp, #192]	; 0xc0
   38e10:	ldr	r2, [r3]
   38e14:	ldr	r3, [sp, #196]	; 0xc4
   38e18:	ldr	r3, [r3]
   38e1c:	sub	r3, r2, r3
   38e20:	ldr	r2, [sl]
   38e24:	mls	r3, r2, r6, r3
   38e28:	add	lr, lr, r3
   38e2c:	add	ip, ip, r3, lsl #2
   38e30:	cmp	r9, #1
   38e34:	ble	38da0 <GetDataSlab+0x177bc>
   38e38:	ldr	r3, [sp, #76]	; 0x4c
   38e3c:	add	r3, r3, #1
   38e40:	str	r3, [sp, #76]	; 0x4c
   38e44:	ldr	r1, [fp, #4]
   38e48:	sdiv	r2, r3, r1
   38e4c:	mls	r3, r1, r2, r3
   38e50:	cmp	r3, #0
   38e54:	bne	38d88 <GetDataSlab+0x177a4>
   38e58:	add	r4, sp, #76	; 0x4c
   38e5c:	add	r7, fp, #4
   38e60:	add	r5, sp, #112	; 0x70
   38e64:	mov	r0, #1
   38e68:	b	38d3c <GetDataSlab+0x17758>
   38e6c:	mov	r3, #0
   38e70:	b	251fc <GetDataSlab+0x3c18>
   38e74:	ldr	r3, [sl]
   38e78:	str	r3, [sp, #28]
   38e7c:	sub	r3, r3, #1
   38e80:	str	r3, [sp, #32]
   38e84:	ldr	r3, [sp, #192]	; 0xc0
   38e88:	ldr	r3, [r3]
   38e8c:	str	r3, [sp, #112]	; 0x70
   38e90:	ldr	r3, [fp]
   38e94:	str	r3, [sp, #16]
   38e98:	cmp	r9, #1
   38e9c:	ble	38ec0 <GetDataSlab+0x178dc>
   38ea0:	str	sl, [sp, #20]
   38ea4:	add	r8, sp, #36	; 0x24
   38ea8:	ldr	r5, [sp, #192]	; 0xc0
   38eac:	add	r6, sp, #112	; 0x70
   38eb0:	str	r5, [sp, #12]
   38eb4:	mov	r4, #1
   38eb8:	mov	lr, #0
   38ebc:	b	3c858 <GetDataSlab+0x1b274>
   38ec0:	mov	lr, #0
   38ec4:	b	3c8f0 <GetDataSlab+0x1b30c>
   38ec8:	ldr	r3, [sp, #16]
   38ecc:	cmp	r3, #0
   38ed0:	ble	3a564 <GetDataSlab+0x18f80>
   38ed4:	mov	r3, #0
   38ed8:	str	r3, [sp, #12]
   38edc:	mov	r8, r3
   38ee0:	b	38fa0 <GetDataSlab+0x179bc>
   38ee4:	ldr	r3, [sp, #196]	; 0xc4
   38ee8:	ldr	r3, [r3, r0, lsl #2]
   38eec:	cmp	r3, #0
   38ef0:	beq	38f04 <GetDataSlab+0x17920>
   38ef4:	ldr	r2, [r5, #-8]
   38ef8:	mul	r3, r2, r3
   38efc:	add	r4, r4, r3, lsl #1
   38f00:	add	lr, lr, r3
   38f04:	add	r0, r0, #1
   38f08:	cmp	r9, r0
   38f0c:	beq	38f84 <GetDataSlab+0x179a0>
   38f10:	ldr	r3, [ip]
   38f14:	add	r1, r3, #1
   38f18:	str	r1, [ip]
   38f1c:	ldr	r2, [r7, #4]!
   38f20:	sdiv	r3, r1, r2
   38f24:	mls	r3, r2, r3, r1
   38f28:	cmp	r3, #0
   38f2c:	bne	38f70 <GetDataSlab+0x1798c>
   38f30:	str	r8, [ip], #4
   38f34:	ldr	r2, [r5], #4
   38f38:	sdiv	r3, lr, r2
   38f3c:	mls	r3, r2, r3, lr
   38f40:	cmp	r3, #0
   38f44:	beq	38ee4 <GetDataSlab+0x17900>
   38f48:	ldr	r1, [r5, #-8]
   38f4c:	ldr	sl, [sp, #196]	; 0xc4
   38f50:	ldr	sl, [sl, r0, lsl #2]
   38f54:	str	sl, [sp, #8]
   38f58:	sub	r3, r2, r3
   38f5c:	mla	r3, sl, r1, r3
   38f60:	add	r4, r4, r3, lsl #1
   38f64:	add	lr, lr, r3
   38f68:	b	38f04 <GetDataSlab+0x17920>
   38f6c:	ldr	r0, [sp, #28]
   38f70:	add	r3, sp, #152	; 0x98
   38f74:	add	r3, r3, r0, lsl #2
   38f78:	ldr	r3, [r3, #-120]	; 0xffffff88
   38f7c:	add	lr, lr, r3
   38f80:	add	r4, r4, r3, lsl #1
   38f84:	ldr	r3, [sp, #12]
   38f88:	add	r3, r3, r6
   38f8c:	str	r3, [sp, #12]
   38f90:	ldr	r3, [sp, #16]
   38f94:	ldr	r2, [sp, #12]
   38f98:	cmp	r2, r3
   38f9c:	bge	39044 <GetDataSlab+0x17a60>
   38fa0:	ldr	r3, [sp, #196]	; 0xc4
   38fa4:	ldr	r3, [r3]
   38fa8:	cmp	r3, #0
   38fac:	addne	r4, r4, r3, lsl #1
   38fb0:	addne	lr, lr, r3
   38fb4:	ldr	r6, [fp]
   38fb8:	cmp	r6, #0
   38fbc:	ble	38fec <GetDataSlab+0x17a08>
   38fc0:	sub	r1, r4, #2
   38fc4:	ldr	r3, [sp, #4]
   38fc8:	ldr	r2, [sp, #12]
   38fcc:	add	r2, r3, r2
   38fd0:	mov	r0, r2
   38fd4:	ldrh	r3, [r1, #2]!
   38fd8:	strb	r3, [r2], #1
   38fdc:	ldr	r6, [fp]
   38fe0:	sub	r3, r2, r0
   38fe4:	cmp	r6, r3
   38fe8:	bgt	38fd4 <GetDataSlab+0x179f0>
   38fec:	ldr	r3, [sp, #192]	; 0xc0
   38ff0:	ldr	r2, [r3]
   38ff4:	ldr	r3, [sp, #196]	; 0xc4
   38ff8:	ldr	r3, [r3]
   38ffc:	sub	r3, r2, r3
   39000:	add	lr, lr, r3
   39004:	add	r4, r4, r3, lsl #1
   39008:	cmp	r9, #1
   3900c:	ble	38f84 <GetDataSlab+0x179a0>
   39010:	ldr	r3, [sp, #76]	; 0x4c
   39014:	add	r3, r3, #1
   39018:	str	r3, [sp, #76]	; 0x4c
   3901c:	ldr	r1, [fp, #4]
   39020:	sdiv	r2, r3, r1
   39024:	mls	r3, r1, r2, r3
   39028:	cmp	r3, #0
   3902c:	bne	38f6c <GetDataSlab+0x17988>
   39030:	add	ip, sp, #76	; 0x4c
   39034:	add	r7, fp, #4
   39038:	add	r5, sp, #116	; 0x74
   3903c:	ldr	r0, [sp, #28]
   39040:	b	38f30 <GetDataSlab+0x1794c>
   39044:	mov	r3, #0
   39048:	b	251fc <GetDataSlab+0x3c18>
   3904c:	ldr	r3, [sp, #196]	; 0xc4
   39050:	ldr	r2, [r3, r0, lsl #2]
   39054:	cmp	r2, #0
   39058:	beq	3906c <GetDataSlab+0x17a88>
   3905c:	ldr	r3, [r5, #-4]
   39060:	mul	r3, r3, r2
   39064:	add	r4, r4, r3, lsl #1
   39068:	add	lr, lr, r3
   3906c:	add	r0, r0, #1
   39070:	cmp	r9, r0
   39074:	beq	390fc <GetDataSlab+0x17b18>
   39078:	ldr	r3, [ip]
   3907c:	add	r1, r3, #1
   39080:	str	r1, [ip]
   39084:	ldr	r2, [r7, #4]!
   39088:	sdiv	r3, r1, r2
   3908c:	mls	r3, r2, r3, r1
   39090:	cmp	r3, #0
   39094:	bne	390e8 <GetDataSlab+0x17b04>
   39098:	str	r8, [ip], #4
   3909c:	add	r5, r5, #4
   390a0:	ldr	r2, [r5]
   390a4:	sdiv	r3, lr, r2
   390a8:	mls	r3, r2, r3, lr
   390ac:	cmp	r3, #0
   390b0:	beq	3904c <GetDataSlab+0x17a68>
   390b4:	ldr	r1, [r5, #-4]
   390b8:	str	r1, [sp, #8]
   390bc:	ldr	r1, [sp, #196]	; 0xc4
   390c0:	ldr	r1, [r1, r0, lsl #2]
   390c4:	str	r1, [sp, #12]
   390c8:	sub	r3, r2, r3
   390cc:	mov	r2, r1
   390d0:	ldr	r1, [sp, #8]
   390d4:	mla	r3, r2, r1, r3
   390d8:	add	r4, r4, r3, lsl #1
   390dc:	add	lr, lr, r3
   390e0:	b	3906c <GetDataSlab+0x17a88>
   390e4:	mov	r0, #1
   390e8:	add	r3, sp, #152	; 0x98
   390ec:	add	r3, r3, r0, lsl #2
   390f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   390f4:	add	lr, lr, r3
   390f8:	add	r4, r4, r3, lsl #1
   390fc:	ldr	r3, [sp, #20]
   39100:	add	r3, r3, r6
   39104:	str	r3, [sp, #20]
   39108:	ldr	r2, [sp, #16]
   3910c:	cmp	r3, r2
   39110:	bge	391c8 <GetDataSlab+0x17be4>
   39114:	ldr	r3, [sp, #196]	; 0xc4
   39118:	ldr	r3, [r3]
   3911c:	cmp	r3, #0
   39120:	addne	r4, r4, r3, lsl #1
   39124:	addne	lr, lr, r3
   39128:	ldr	r6, [fp]
   3912c:	cmp	r6, #0
   39130:	ble	39168 <GetDataSlab+0x17b84>
   39134:	ldr	r3, [sp, #4]
   39138:	ldr	r2, [sp, #20]
   3913c:	add	r3, r3, r2
   39140:	mov	r1, r3
   39144:	ldrh	r2, [r4]
   39148:	strb	r2, [r3], #1
   3914c:	ldr	r2, [sl]
   39150:	add	r4, r4, r2, lsl #1
   39154:	add	lr, lr, r2
   39158:	ldr	r6, [fp]
   3915c:	sub	r2, r3, r1
   39160:	cmp	r6, r2
   39164:	bgt	39144 <GetDataSlab+0x17b60>
   39168:	ldr	r3, [sp, #192]	; 0xc0
   3916c:	ldr	r2, [r3]
   39170:	ldr	r3, [sp, #196]	; 0xc4
   39174:	ldr	r3, [r3]
   39178:	sub	r3, r2, r3
   3917c:	ldr	r2, [sl]
   39180:	mls	r3, r2, r6, r3
   39184:	add	lr, lr, r3
   39188:	add	r4, r4, r3, lsl #1
   3918c:	cmp	r9, #1
   39190:	ble	390fc <GetDataSlab+0x17b18>
   39194:	ldr	r3, [sp, #76]	; 0x4c
   39198:	add	r3, r3, #1
   3919c:	str	r3, [sp, #76]	; 0x4c
   391a0:	ldr	r1, [fp, #4]
   391a4:	sdiv	r2, r3, r1
   391a8:	mls	r3, r1, r2, r3
   391ac:	cmp	r3, #0
   391b0:	bne	390e4 <GetDataSlab+0x17b00>
   391b4:	add	ip, sp, #76	; 0x4c
   391b8:	add	r7, fp, #4
   391bc:	add	r5, sp, #112	; 0x70
   391c0:	mov	r0, #1
   391c4:	b	39098 <GetDataSlab+0x17ab4>
   391c8:	mov	r3, #0
   391cc:	b	251fc <GetDataSlab+0x3c18>
   391d0:	ldr	r3, [sl]
   391d4:	str	r3, [sp, #28]
   391d8:	sub	r3, r3, #1
   391dc:	str	r3, [sp, #32]
   391e0:	ldr	r3, [sp, #192]	; 0xc0
   391e4:	ldr	r3, [r3]
   391e8:	str	r3, [sp, #112]	; 0x70
   391ec:	ldr	r3, [fp]
   391f0:	str	r3, [sp, #16]
   391f4:	cmp	r9, #1
   391f8:	ble	3921c <GetDataSlab+0x17c38>
   391fc:	str	sl, [sp, #20]
   39200:	add	r8, sp, #36	; 0x24
   39204:	ldr	r5, [sp, #192]	; 0xc0
   39208:	add	r6, sp, #112	; 0x70
   3920c:	str	r5, [sp, #12]
   39210:	mov	r4, #1
   39214:	mov	lr, #0
   39218:	b	3c948 <GetDataSlab+0x1b364>
   3921c:	mov	lr, #0
   39220:	b	3c9e0 <GetDataSlab+0x1b3fc>
   39224:	ldr	r3, [sp, #16]
   39228:	cmp	r3, #0
   3922c:	ble	3a56c <GetDataSlab+0x18f88>
   39230:	mov	r3, #0
   39234:	str	r3, [sp, #12]
   39238:	mov	r8, r3
   3923c:	b	392fc <GetDataSlab+0x17d18>
   39240:	ldr	r3, [sp, #196]	; 0xc4
   39244:	ldr	r3, [r3, r0, lsl #2]
   39248:	cmp	r3, #0
   3924c:	beq	39260 <GetDataSlab+0x17c7c>
   39250:	ldr	r2, [r5, #-8]
   39254:	mul	r3, r2, r3
   39258:	add	r4, r4, r3, lsl #1
   3925c:	add	lr, lr, r3
   39260:	add	r0, r0, #1
   39264:	cmp	r9, r0
   39268:	beq	392e0 <GetDataSlab+0x17cfc>
   3926c:	ldr	r3, [ip]
   39270:	add	r1, r3, #1
   39274:	str	r1, [ip]
   39278:	ldr	r2, [r7, #4]!
   3927c:	sdiv	r3, r1, r2
   39280:	mls	r3, r2, r3, r1
   39284:	cmp	r3, #0
   39288:	bne	392cc <GetDataSlab+0x17ce8>
   3928c:	str	r8, [ip], #4
   39290:	ldr	r2, [r5], #4
   39294:	sdiv	r3, lr, r2
   39298:	mls	r3, r2, r3, lr
   3929c:	cmp	r3, #0
   392a0:	beq	39240 <GetDataSlab+0x17c5c>
   392a4:	ldr	r1, [r5, #-8]
   392a8:	ldr	sl, [sp, #196]	; 0xc4
   392ac:	ldr	sl, [sl, r0, lsl #2]
   392b0:	str	sl, [sp, #8]
   392b4:	sub	r3, r2, r3
   392b8:	mla	r3, sl, r1, r3
   392bc:	add	r4, r4, r3, lsl #1
   392c0:	add	lr, lr, r3
   392c4:	b	39260 <GetDataSlab+0x17c7c>
   392c8:	ldr	r0, [sp, #28]
   392cc:	add	r3, sp, #152	; 0x98
   392d0:	add	r3, r3, r0, lsl #2
   392d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   392d8:	add	lr, lr, r3
   392dc:	add	r4, r4, r3, lsl #1
   392e0:	ldr	r3, [sp, #12]
   392e4:	add	r3, r3, r6
   392e8:	str	r3, [sp, #12]
   392ec:	ldr	r3, [sp, #16]
   392f0:	ldr	r2, [sp, #12]
   392f4:	cmp	r2, r3
   392f8:	bge	393a0 <GetDataSlab+0x17dbc>
   392fc:	ldr	r3, [sp, #196]	; 0xc4
   39300:	ldr	r3, [r3]
   39304:	cmp	r3, #0
   39308:	addne	r4, r4, r3, lsl #1
   3930c:	addne	lr, lr, r3
   39310:	ldr	r6, [fp]
   39314:	cmp	r6, #0
   39318:	ble	39348 <GetDataSlab+0x17d64>
   3931c:	sub	r1, r4, #2
   39320:	ldr	r3, [sp, #4]
   39324:	ldr	r2, [sp, #12]
   39328:	add	r2, r3, r2
   3932c:	mov	r0, r2
   39330:	ldrh	r3, [r1, #2]!
   39334:	strb	r3, [r2], #1
   39338:	ldr	r6, [fp]
   3933c:	sub	r3, r2, r0
   39340:	cmp	r6, r3
   39344:	bgt	39330 <GetDataSlab+0x17d4c>
   39348:	ldr	r3, [sp, #192]	; 0xc0
   3934c:	ldr	r2, [r3]
   39350:	ldr	r3, [sp, #196]	; 0xc4
   39354:	ldr	r3, [r3]
   39358:	sub	r3, r2, r3
   3935c:	add	lr, lr, r3
   39360:	add	r4, r4, r3, lsl #1
   39364:	cmp	r9, #1
   39368:	ble	392e0 <GetDataSlab+0x17cfc>
   3936c:	ldr	r3, [sp, #76]	; 0x4c
   39370:	add	r3, r3, #1
   39374:	str	r3, [sp, #76]	; 0x4c
   39378:	ldr	r1, [fp, #4]
   3937c:	sdiv	r2, r3, r1
   39380:	mls	r3, r1, r2, r3
   39384:	cmp	r3, #0
   39388:	bne	392c8 <GetDataSlab+0x17ce4>
   3938c:	add	ip, sp, #76	; 0x4c
   39390:	add	r7, fp, #4
   39394:	add	r5, sp, #116	; 0x74
   39398:	ldr	r0, [sp, #28]
   3939c:	b	3928c <GetDataSlab+0x17ca8>
   393a0:	mov	r3, #0
   393a4:	b	251fc <GetDataSlab+0x3c18>
   393a8:	ldr	r3, [sp, #196]	; 0xc4
   393ac:	ldr	r2, [r3, r0, lsl #2]
   393b0:	cmp	r2, #0
   393b4:	beq	393c8 <GetDataSlab+0x17de4>
   393b8:	ldr	r3, [r5, #-4]
   393bc:	mul	r3, r3, r2
   393c0:	add	r4, r4, r3, lsl #1
   393c4:	add	lr, lr, r3
   393c8:	add	r0, r0, #1
   393cc:	cmp	r9, r0
   393d0:	beq	39458 <GetDataSlab+0x17e74>
   393d4:	ldr	r3, [ip]
   393d8:	add	r1, r3, #1
   393dc:	str	r1, [ip]
   393e0:	ldr	r2, [r7, #4]!
   393e4:	sdiv	r3, r1, r2
   393e8:	mls	r3, r2, r3, r1
   393ec:	cmp	r3, #0
   393f0:	bne	39444 <GetDataSlab+0x17e60>
   393f4:	str	r8, [ip], #4
   393f8:	add	r5, r5, #4
   393fc:	ldr	r2, [r5]
   39400:	sdiv	r3, lr, r2
   39404:	mls	r3, r2, r3, lr
   39408:	cmp	r3, #0
   3940c:	beq	393a8 <GetDataSlab+0x17dc4>
   39410:	ldr	r1, [r5, #-4]
   39414:	str	r1, [sp, #8]
   39418:	ldr	r1, [sp, #196]	; 0xc4
   3941c:	ldr	r1, [r1, r0, lsl #2]
   39420:	str	r1, [sp, #12]
   39424:	sub	r3, r2, r3
   39428:	mov	r2, r1
   3942c:	ldr	r1, [sp, #8]
   39430:	mla	r3, r2, r1, r3
   39434:	add	r4, r4, r3, lsl #1
   39438:	add	lr, lr, r3
   3943c:	b	393c8 <GetDataSlab+0x17de4>
   39440:	mov	r0, #1
   39444:	add	r3, sp, #152	; 0x98
   39448:	add	r3, r3, r0, lsl #2
   3944c:	ldr	r3, [r3, #-120]	; 0xffffff88
   39450:	add	lr, lr, r3
   39454:	add	r4, r4, r3, lsl #1
   39458:	ldr	r3, [sp, #20]
   3945c:	add	r3, r3, r6
   39460:	str	r3, [sp, #20]
   39464:	ldr	r2, [sp, #16]
   39468:	cmp	r3, r2
   3946c:	bge	39524 <GetDataSlab+0x17f40>
   39470:	ldr	r3, [sp, #196]	; 0xc4
   39474:	ldr	r3, [r3]
   39478:	cmp	r3, #0
   3947c:	addne	r4, r4, r3, lsl #1
   39480:	addne	lr, lr, r3
   39484:	ldr	r6, [fp]
   39488:	cmp	r6, #0
   3948c:	ble	394c4 <GetDataSlab+0x17ee0>
   39490:	ldr	r3, [sp, #4]
   39494:	ldr	r2, [sp, #20]
   39498:	add	r3, r3, r2
   3949c:	mov	r1, r3
   394a0:	ldrh	r2, [r4]
   394a4:	strb	r2, [r3], #1
   394a8:	ldr	r2, [sl]
   394ac:	add	r4, r4, r2, lsl #1
   394b0:	add	lr, lr, r2
   394b4:	ldr	r6, [fp]
   394b8:	sub	r2, r3, r1
   394bc:	cmp	r6, r2
   394c0:	bgt	394a0 <GetDataSlab+0x17ebc>
   394c4:	ldr	r3, [sp, #192]	; 0xc0
   394c8:	ldr	r2, [r3]
   394cc:	ldr	r3, [sp, #196]	; 0xc4
   394d0:	ldr	r3, [r3]
   394d4:	sub	r3, r2, r3
   394d8:	ldr	r2, [sl]
   394dc:	mls	r3, r2, r6, r3
   394e0:	add	lr, lr, r3
   394e4:	add	r4, r4, r3, lsl #1
   394e8:	cmp	r9, #1
   394ec:	ble	39458 <GetDataSlab+0x17e74>
   394f0:	ldr	r3, [sp, #76]	; 0x4c
   394f4:	add	r3, r3, #1
   394f8:	str	r3, [sp, #76]	; 0x4c
   394fc:	ldr	r1, [fp, #4]
   39500:	sdiv	r2, r3, r1
   39504:	mls	r3, r1, r2, r3
   39508:	cmp	r3, #0
   3950c:	bne	39440 <GetDataSlab+0x17e5c>
   39510:	add	ip, sp, #76	; 0x4c
   39514:	add	r7, fp, #4
   39518:	add	r5, sp, #112	; 0x70
   3951c:	mov	r0, #1
   39520:	b	393f4 <GetDataSlab+0x17e10>
   39524:	mov	r3, #0
   39528:	b	251fc <GetDataSlab+0x3c18>
   3952c:	ldr	r3, [sl]
   39530:	str	r3, [sp, #28]
   39534:	sub	r3, r3, #1
   39538:	str	r3, [sp, #32]
   3953c:	ldr	r3, [sp, #192]	; 0xc0
   39540:	ldr	r3, [r3]
   39544:	str	r3, [sp, #112]	; 0x70
   39548:	ldr	r3, [fp]
   3954c:	str	r3, [sp, #16]
   39550:	cmp	r9, #1
   39554:	ble	39574 <GetDataSlab+0x17f90>
   39558:	str	sl, [sp, #20]
   3955c:	add	r7, sp, #36	; 0x24
   39560:	ldr	r4, [sp, #192]	; 0xc0
   39564:	add	r5, sp, #112	; 0x70
   39568:	str	r4, [sp, #12]
   3956c:	mov	lr, #0
   39570:	b	3c678 <GetDataSlab+0x1b094>
   39574:	mov	lr, #0
   39578:	b	3c710 <GetDataSlab+0x1b12c>
   3957c:	ldr	r3, [sp, #16]
   39580:	cmp	r3, #0
   39584:	ble	3a574 <GetDataSlab+0x18f90>
   39588:	mov	r3, #0
   3958c:	str	r3, [sp, #12]
   39590:	mov	r8, r3
   39594:	b	39654 <GetDataSlab+0x18070>
   39598:	ldr	r3, [sp, #196]	; 0xc4
   3959c:	ldr	r3, [r3, r0, lsl #2]
   395a0:	cmp	r3, #0
   395a4:	beq	395b8 <GetDataSlab+0x17fd4>
   395a8:	ldr	r2, [r5, #-8]
   395ac:	mul	r3, r2, r3
   395b0:	add	ip, ip, r3
   395b4:	add	lr, lr, r3
   395b8:	add	r0, r0, #1
   395bc:	cmp	r9, r0
   395c0:	beq	39638 <GetDataSlab+0x18054>
   395c4:	ldr	r3, [r4]
   395c8:	add	r1, r3, #1
   395cc:	str	r1, [r4]
   395d0:	ldr	r2, [r7, #4]!
   395d4:	sdiv	r3, r1, r2
   395d8:	mls	r3, r2, r3, r1
   395dc:	cmp	r3, #0
   395e0:	bne	39624 <GetDataSlab+0x18040>
   395e4:	str	r8, [r4], #4
   395e8:	ldr	r2, [r5], #4
   395ec:	sdiv	r3, lr, r2
   395f0:	mls	r3, r2, r3, lr
   395f4:	cmp	r3, #0
   395f8:	beq	39598 <GetDataSlab+0x17fb4>
   395fc:	ldr	r1, [r5, #-8]
   39600:	ldr	sl, [sp, #196]	; 0xc4
   39604:	ldr	sl, [sl, r0, lsl #2]
   39608:	str	sl, [sp, #8]
   3960c:	sub	r3, r2, r3
   39610:	mla	r3, sl, r1, r3
   39614:	add	ip, ip, r3
   39618:	add	lr, lr, r3
   3961c:	b	395b8 <GetDataSlab+0x17fd4>
   39620:	ldr	r0, [sp, #28]
   39624:	add	r3, sp, #152	; 0x98
   39628:	add	r3, r3, r0, lsl #2
   3962c:	ldr	r3, [r3, #-120]	; 0xffffff88
   39630:	add	lr, lr, r3
   39634:	add	ip, ip, r3
   39638:	ldr	r3, [sp, #12]
   3963c:	add	r3, r3, r6
   39640:	str	r3, [sp, #12]
   39644:	ldr	r3, [sp, #16]
   39648:	ldr	r2, [sp, #12]
   3964c:	cmp	r2, r3
   39650:	bge	39700 <GetDataSlab+0x1811c>
   39654:	ldr	r3, [sp, #196]	; 0xc4
   39658:	ldr	r3, [r3]
   3965c:	cmp	r3, #0
   39660:	addne	ip, ip, r3
   39664:	addne	lr, lr, r3
   39668:	ldr	r6, [fp]
   3966c:	cmp	r6, #0
   39670:	ble	396a8 <GetDataSlab+0x180c4>
   39674:	sub	r2, ip, #1
   39678:	ldr	r3, [sp, #12]
   3967c:	sub	r3, r3, #1
   39680:	ldr	r1, [sp, #4]
   39684:	add	r1, r1, r3
   39688:	ldrb	r3, [r2, #1]
   3968c:	strb	r3, [r1, #1]!
   39690:	ldr	r6, [fp]
   39694:	add	r3, r2, #2
   39698:	sub	r3, r3, ip
   3969c:	add	r2, r2, #1
   396a0:	cmp	r6, r3
   396a4:	bgt	39688 <GetDataSlab+0x180a4>
   396a8:	ldr	r3, [sp, #192]	; 0xc0
   396ac:	ldr	r2, [r3]
   396b0:	ldr	r3, [sp, #196]	; 0xc4
   396b4:	ldr	r3, [r3]
   396b8:	sub	r3, r2, r3
   396bc:	add	lr, lr, r3
   396c0:	add	ip, ip, r3
   396c4:	cmp	r9, #1
   396c8:	ble	39638 <GetDataSlab+0x18054>
   396cc:	ldr	r3, [sp, #76]	; 0x4c
   396d0:	add	r3, r3, #1
   396d4:	str	r3, [sp, #76]	; 0x4c
   396d8:	ldr	r1, [fp, #4]
   396dc:	sdiv	r2, r3, r1
   396e0:	mls	r3, r1, r2, r3
   396e4:	cmp	r3, #0
   396e8:	bne	39620 <GetDataSlab+0x1803c>
   396ec:	add	r4, sp, #76	; 0x4c
   396f0:	add	r7, fp, #4
   396f4:	add	r5, sp, #116	; 0x74
   396f8:	ldr	r0, [sp, #28]
   396fc:	b	395e4 <GetDataSlab+0x18000>
   39700:	mov	r3, #0
   39704:	b	251fc <GetDataSlab+0x3c18>
   39708:	ldr	r3, [sp, #196]	; 0xc4
   3970c:	ldr	r2, [r3, r0, lsl #2]
   39710:	cmp	r2, #0
   39714:	beq	39728 <GetDataSlab+0x18144>
   39718:	ldr	r3, [r5, #-4]
   3971c:	mul	r3, r3, r2
   39720:	add	ip, ip, r3
   39724:	add	lr, lr, r3
   39728:	add	r0, r0, #1
   3972c:	cmp	r9, r0
   39730:	beq	397b8 <GetDataSlab+0x181d4>
   39734:	ldr	r3, [r4]
   39738:	add	r1, r3, #1
   3973c:	str	r1, [r4]
   39740:	ldr	r2, [r7, #4]!
   39744:	sdiv	r3, r1, r2
   39748:	mls	r3, r2, r3, r1
   3974c:	cmp	r3, #0
   39750:	bne	397a4 <GetDataSlab+0x181c0>
   39754:	str	r8, [r4], #4
   39758:	add	r5, r5, #4
   3975c:	ldr	r2, [r5]
   39760:	sdiv	r3, lr, r2
   39764:	mls	r3, r2, r3, lr
   39768:	cmp	r3, #0
   3976c:	beq	39708 <GetDataSlab+0x18124>
   39770:	ldr	r1, [r5, #-4]
   39774:	str	r1, [sp, #8]
   39778:	ldr	r1, [sp, #196]	; 0xc4
   3977c:	ldr	r1, [r1, r0, lsl #2]
   39780:	str	r1, [sp, #12]
   39784:	sub	r3, r2, r3
   39788:	mov	r2, r1
   3978c:	ldr	r1, [sp, #8]
   39790:	mla	r3, r2, r1, r3
   39794:	add	ip, ip, r3
   39798:	add	lr, lr, r3
   3979c:	b	39728 <GetDataSlab+0x18144>
   397a0:	mov	r0, #1
   397a4:	add	r3, sp, #152	; 0x98
   397a8:	add	r3, r3, r0, lsl #2
   397ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   397b0:	add	lr, lr, r3
   397b4:	add	ip, ip, r3
   397b8:	ldr	r3, [sp, #20]
   397bc:	add	r3, r3, r6
   397c0:	str	r3, [sp, #20]
   397c4:	ldr	r2, [sp, #16]
   397c8:	cmp	r3, r2
   397cc:	bge	39884 <GetDataSlab+0x182a0>
   397d0:	ldr	r3, [sp, #196]	; 0xc4
   397d4:	ldr	r3, [r3]
   397d8:	cmp	r3, #0
   397dc:	addne	ip, ip, r3
   397e0:	addne	lr, lr, r3
   397e4:	ldr	r6, [fp]
   397e8:	cmp	r6, #0
   397ec:	ble	39824 <GetDataSlab+0x18240>
   397f0:	ldr	r3, [sp, #4]
   397f4:	ldr	r2, [sp, #20]
   397f8:	add	r3, r3, r2
   397fc:	mov	r1, r3
   39800:	ldrb	r2, [ip]
   39804:	strb	r2, [r3], #1
   39808:	ldr	r2, [sl]
   3980c:	add	ip, ip, r2
   39810:	add	lr, lr, r2
   39814:	ldr	r6, [fp]
   39818:	sub	r2, r3, r1
   3981c:	cmp	r6, r2
   39820:	bgt	39800 <GetDataSlab+0x1821c>
   39824:	ldr	r3, [sp, #192]	; 0xc0
   39828:	ldr	r2, [r3]
   3982c:	ldr	r3, [sp, #196]	; 0xc4
   39830:	ldr	r3, [r3]
   39834:	sub	r3, r2, r3
   39838:	ldr	r2, [sl]
   3983c:	mls	r3, r2, r6, r3
   39840:	add	lr, lr, r3
   39844:	add	ip, ip, r3
   39848:	cmp	r9, #1
   3984c:	ble	397b8 <GetDataSlab+0x181d4>
   39850:	ldr	r3, [sp, #76]	; 0x4c
   39854:	add	r3, r3, #1
   39858:	str	r3, [sp, #76]	; 0x4c
   3985c:	ldr	r1, [fp, #4]
   39860:	sdiv	r2, r3, r1
   39864:	mls	r3, r1, r2, r3
   39868:	cmp	r3, #0
   3986c:	bne	397a0 <GetDataSlab+0x181bc>
   39870:	add	r4, sp, #76	; 0x4c
   39874:	add	r7, fp, #4
   39878:	add	r5, sp, #112	; 0x70
   3987c:	mov	r0, #1
   39880:	b	39754 <GetDataSlab+0x18170>
   39884:	mov	r3, #0
   39888:	b	251fc <GetDataSlab+0x3c18>
   3988c:	ldr	r3, [sl]
   39890:	str	r3, [sp, #28]
   39894:	sub	r3, r3, #1
   39898:	str	r3, [sp, #32]
   3989c:	ldr	r3, [sp, #192]	; 0xc0
   398a0:	ldr	r3, [r3]
   398a4:	str	r3, [sp, #112]	; 0x70
   398a8:	ldr	r3, [fp]
   398ac:	str	r3, [sp, #16]
   398b0:	cmp	r9, #1
   398b4:	ble	398d8 <GetDataSlab+0x182f4>
   398b8:	str	sl, [sp, #20]
   398bc:	add	r8, sp, #36	; 0x24
   398c0:	ldr	r5, [sp, #192]	; 0xc0
   398c4:	add	r6, sp, #112	; 0x70
   398c8:	str	r5, [sp, #12]
   398cc:	mov	r4, #1
   398d0:	mov	lr, #0
   398d4:	b	3c768 <GetDataSlab+0x1b184>
   398d8:	mov	lr, #0
   398dc:	b	3c800 <GetDataSlab+0x1b21c>
   398e0:	ldr	r3, [sp, #16]
   398e4:	cmp	r3, #0
   398e8:	ble	3a57c <GetDataSlab+0x18f98>
   398ec:	mov	r3, #0
   398f0:	str	r3, [sp, #12]
   398f4:	mov	r8, r3
   398f8:	b	399b8 <GetDataSlab+0x183d4>
   398fc:	ldr	r3, [sp, #196]	; 0xc4
   39900:	ldr	r3, [r3, r0, lsl #2]
   39904:	cmp	r3, #0
   39908:	beq	3991c <GetDataSlab+0x18338>
   3990c:	ldr	r2, [r5, #-8]
   39910:	mul	r3, r2, r3
   39914:	add	ip, ip, r3
   39918:	add	lr, lr, r3
   3991c:	add	r0, r0, #1
   39920:	cmp	r9, r0
   39924:	beq	3999c <GetDataSlab+0x183b8>
   39928:	ldr	r3, [r4]
   3992c:	add	r1, r3, #1
   39930:	str	r1, [r4]
   39934:	ldr	r2, [r7, #4]!
   39938:	sdiv	r3, r1, r2
   3993c:	mls	r3, r2, r3, r1
   39940:	cmp	r3, #0
   39944:	bne	39988 <GetDataSlab+0x183a4>
   39948:	str	r8, [r4], #4
   3994c:	ldr	r2, [r5], #4
   39950:	sdiv	r3, lr, r2
   39954:	mls	r3, r2, r3, lr
   39958:	cmp	r3, #0
   3995c:	beq	398fc <GetDataSlab+0x18318>
   39960:	ldr	r1, [r5, #-8]
   39964:	ldr	sl, [sp, #196]	; 0xc4
   39968:	ldr	sl, [sl, r0, lsl #2]
   3996c:	str	sl, [sp, #8]
   39970:	sub	r3, r2, r3
   39974:	mla	r3, sl, r1, r3
   39978:	add	ip, ip, r3
   3997c:	add	lr, lr, r3
   39980:	b	3991c <GetDataSlab+0x18338>
   39984:	ldr	r0, [sp, #28]
   39988:	add	r3, sp, #152	; 0x98
   3998c:	add	r3, r3, r0, lsl #2
   39990:	ldr	r3, [r3, #-120]	; 0xffffff88
   39994:	add	lr, lr, r3
   39998:	add	ip, ip, r3
   3999c:	ldr	r3, [sp, #12]
   399a0:	add	r3, r3, r6
   399a4:	str	r3, [sp, #12]
   399a8:	ldr	r3, [sp, #16]
   399ac:	ldr	r2, [sp, #12]
   399b0:	cmp	r2, r3
   399b4:	bge	39a64 <GetDataSlab+0x18480>
   399b8:	ldr	r3, [sp, #196]	; 0xc4
   399bc:	ldr	r3, [r3]
   399c0:	cmp	r3, #0
   399c4:	addne	ip, ip, r3
   399c8:	addne	lr, lr, r3
   399cc:	ldr	r6, [fp]
   399d0:	cmp	r6, #0
   399d4:	ble	39a0c <GetDataSlab+0x18428>
   399d8:	sub	r2, ip, #1
   399dc:	ldr	r3, [sp, #12]
   399e0:	sub	r3, r3, #1
   399e4:	ldr	r1, [sp, #4]
   399e8:	add	r1, r1, r3
   399ec:	ldrb	r3, [r2, #1]
   399f0:	strb	r3, [r1, #1]!
   399f4:	ldr	r6, [fp]
   399f8:	add	r3, r2, #2
   399fc:	sub	r3, r3, ip
   39a00:	add	r2, r2, #1
   39a04:	cmp	r6, r3
   39a08:	bgt	399ec <GetDataSlab+0x18408>
   39a0c:	ldr	r3, [sp, #192]	; 0xc0
   39a10:	ldr	r2, [r3]
   39a14:	ldr	r3, [sp, #196]	; 0xc4
   39a18:	ldr	r3, [r3]
   39a1c:	sub	r3, r2, r3
   39a20:	add	lr, lr, r3
   39a24:	add	ip, ip, r3
   39a28:	cmp	r9, #1
   39a2c:	ble	3999c <GetDataSlab+0x183b8>
   39a30:	ldr	r3, [sp, #76]	; 0x4c
   39a34:	add	r3, r3, #1
   39a38:	str	r3, [sp, #76]	; 0x4c
   39a3c:	ldr	r1, [fp, #4]
   39a40:	sdiv	r2, r3, r1
   39a44:	mls	r3, r1, r2, r3
   39a48:	cmp	r3, #0
   39a4c:	bne	39984 <GetDataSlab+0x183a0>
   39a50:	add	r4, sp, #76	; 0x4c
   39a54:	add	r7, fp, #4
   39a58:	add	r5, sp, #116	; 0x74
   39a5c:	ldr	r0, [sp, #28]
   39a60:	b	39948 <GetDataSlab+0x18364>
   39a64:	mov	r3, #0
   39a68:	b	251fc <GetDataSlab+0x3c18>
   39a6c:	ldr	r3, [sp, #196]	; 0xc4
   39a70:	ldr	r2, [r3, r0, lsl #2]
   39a74:	cmp	r2, #0
   39a78:	beq	39a8c <GetDataSlab+0x184a8>
   39a7c:	ldr	r3, [r5, #-4]
   39a80:	mul	r3, r3, r2
   39a84:	add	ip, ip, r3
   39a88:	add	lr, lr, r3
   39a8c:	add	r0, r0, #1
   39a90:	cmp	r9, r0
   39a94:	beq	39b1c <GetDataSlab+0x18538>
   39a98:	ldr	r3, [r4]
   39a9c:	add	r1, r3, #1
   39aa0:	str	r1, [r4]
   39aa4:	ldr	r2, [r7, #4]!
   39aa8:	sdiv	r3, r1, r2
   39aac:	mls	r3, r2, r3, r1
   39ab0:	cmp	r3, #0
   39ab4:	bne	39b08 <GetDataSlab+0x18524>
   39ab8:	str	r8, [r4], #4
   39abc:	add	r5, r5, #4
   39ac0:	ldr	r2, [r5]
   39ac4:	sdiv	r3, lr, r2
   39ac8:	mls	r3, r2, r3, lr
   39acc:	cmp	r3, #0
   39ad0:	beq	39a6c <GetDataSlab+0x18488>
   39ad4:	ldr	r1, [r5, #-4]
   39ad8:	str	r1, [sp, #8]
   39adc:	ldr	r1, [sp, #196]	; 0xc4
   39ae0:	ldr	r1, [r1, r0, lsl #2]
   39ae4:	str	r1, [sp, #12]
   39ae8:	sub	r3, r2, r3
   39aec:	mov	r2, r1
   39af0:	ldr	r1, [sp, #8]
   39af4:	mla	r3, r2, r1, r3
   39af8:	add	ip, ip, r3
   39afc:	add	lr, lr, r3
   39b00:	b	39a8c <GetDataSlab+0x184a8>
   39b04:	mov	r0, #1
   39b08:	add	r3, sp, #152	; 0x98
   39b0c:	add	r3, r3, r0, lsl #2
   39b10:	ldr	r3, [r3, #-120]	; 0xffffff88
   39b14:	add	lr, lr, r3
   39b18:	add	ip, ip, r3
   39b1c:	ldr	r3, [sp, #20]
   39b20:	add	r3, r3, r6
   39b24:	str	r3, [sp, #20]
   39b28:	ldr	r2, [sp, #16]
   39b2c:	cmp	r3, r2
   39b30:	bge	39be8 <GetDataSlab+0x18604>
   39b34:	ldr	r3, [sp, #196]	; 0xc4
   39b38:	ldr	r3, [r3]
   39b3c:	cmp	r3, #0
   39b40:	addne	ip, ip, r3
   39b44:	addne	lr, lr, r3
   39b48:	ldr	r6, [fp]
   39b4c:	cmp	r6, #0
   39b50:	ble	39b88 <GetDataSlab+0x185a4>
   39b54:	ldr	r3, [sp, #4]
   39b58:	ldr	r2, [sp, #20]
   39b5c:	add	r3, r3, r2
   39b60:	mov	r1, r3
   39b64:	ldrb	r2, [ip]
   39b68:	strb	r2, [r3], #1
   39b6c:	ldr	r2, [sl]
   39b70:	add	ip, ip, r2
   39b74:	add	lr, lr, r2
   39b78:	ldr	r6, [fp]
   39b7c:	sub	r2, r3, r1
   39b80:	cmp	r6, r2
   39b84:	bgt	39b64 <GetDataSlab+0x18580>
   39b88:	ldr	r3, [sp, #192]	; 0xc0
   39b8c:	ldr	r2, [r3]
   39b90:	ldr	r3, [sp, #196]	; 0xc4
   39b94:	ldr	r3, [r3]
   39b98:	sub	r3, r2, r3
   39b9c:	ldr	r2, [sl]
   39ba0:	mls	r3, r2, r6, r3
   39ba4:	add	lr, lr, r3
   39ba8:	add	ip, ip, r3
   39bac:	cmp	r9, #1
   39bb0:	ble	39b1c <GetDataSlab+0x18538>
   39bb4:	ldr	r3, [sp, #76]	; 0x4c
   39bb8:	add	r3, r3, #1
   39bbc:	str	r3, [sp, #76]	; 0x4c
   39bc0:	ldr	r1, [fp, #4]
   39bc4:	sdiv	r2, r3, r1
   39bc8:	mls	r3, r1, r2, r3
   39bcc:	cmp	r3, #0
   39bd0:	bne	39b04 <GetDataSlab+0x18520>
   39bd4:	add	r4, sp, #76	; 0x4c
   39bd8:	add	r7, fp, #4
   39bdc:	add	r5, sp, #112	; 0x70
   39be0:	mov	r0, #1
   39be4:	b	39ab8 <GetDataSlab+0x184d4>
   39be8:	mov	r3, #0
   39bec:	b	251fc <GetDataSlab+0x3c18>
   39bf0:	cmp	r8, #12
   39bf4:	beq	39c50 <GetDataSlab+0x1866c>
   39bf8:	cmp	r8, #13
   39bfc:	movne	r3, #1
   39c00:	bne	251fc <GetDataSlab+0x3c18>
   39c04:	ldr	r3, [sl]
   39c08:	str	r3, [sp, #28]
   39c0c:	sub	r3, r3, #1
   39c10:	str	r3, [sp, #32]
   39c14:	ldr	r3, [sp, #192]	; 0xc0
   39c18:	ldr	r3, [r3]
   39c1c:	str	r3, [sp, #112]	; 0x70
   39c20:	ldr	r3, [fp]
   39c24:	str	r3, [sp, #16]
   39c28:	cmp	r9, #1
   39c2c:	ble	39fa0 <GetDataSlab+0x189bc>
   39c30:	str	sl, [sp, #20]
   39c34:	add	r8, sp, #36	; 0x24
   39c38:	ldr	r5, [sp, #192]	; 0xc0
   39c3c:	add	r6, sp, #112	; 0x70
   39c40:	str	r5, [sp, #12]
   39c44:	mov	r4, #1
   39c48:	mov	lr, #0
   39c4c:	b	3c498 <GetDataSlab+0x1aeb4>
   39c50:	ldr	r3, [sl]
   39c54:	str	r3, [sp, #28]
   39c58:	sub	r3, r3, #1
   39c5c:	str	r3, [sp, #32]
   39c60:	ldr	r3, [sp, #192]	; 0xc0
   39c64:	ldr	r3, [r3]
   39c68:	str	r3, [sp, #112]	; 0x70
   39c6c:	ldr	r3, [fp]
   39c70:	str	r3, [sp, #16]
   39c74:	cmp	r9, #1
   39c78:	ble	39c9c <GetDataSlab+0x186b8>
   39c7c:	str	sl, [sp, #20]
   39c80:	add	r8, sp, #36	; 0x24
   39c84:	ldr	r5, [sp, #192]	; 0xc0
   39c88:	add	r6, sp, #112	; 0x70
   39c8c:	str	r5, [sp, #12]
   39c90:	mov	r4, #1
   39c94:	mov	lr, #0
   39c98:	b	3c588 <GetDataSlab+0x1afa4>
   39c9c:	mov	lr, #0
   39ca0:	b	3c620 <GetDataSlab+0x1b03c>
   39ca4:	ldr	r3, [sp, #16]
   39ca8:	cmp	r3, #0
   39cac:	ble	3c64c <GetDataSlab+0x1b068>
   39cb0:	mov	r3, #0
   39cb4:	str	r3, [sp, #12]
   39cb8:	mov	r8, r3
   39cbc:	b	39d80 <GetDataSlab+0x1879c>
   39cc0:	ldr	r3, [sp, #196]	; 0xc4
   39cc4:	ldr	r2, [r3, r0, lsl #2]
   39cc8:	cmp	r2, #0
   39ccc:	beq	39ce0 <GetDataSlab+0x186fc>
   39cd0:	ldr	r3, [r5, #-4]
   39cd4:	mul	r3, r3, r2
   39cd8:	add	ip, ip, r3, lsl #3
   39cdc:	add	lr, lr, r3
   39ce0:	add	r0, r0, #1
   39ce4:	cmp	r9, r0
   39ce8:	beq	39d64 <GetDataSlab+0x18780>
   39cec:	ldr	r3, [r4]
   39cf0:	add	r1, r3, #1
   39cf4:	str	r1, [r4]
   39cf8:	ldr	r2, [r7, #4]!
   39cfc:	sdiv	r3, r1, r2
   39d00:	mls	r3, r2, r3, r1
   39d04:	cmp	r3, #0
   39d08:	bne	39d50 <GetDataSlab+0x1876c>
   39d0c:	str	r8, [r4], #4
   39d10:	add	r5, r5, #4
   39d14:	ldr	r2, [r5]
   39d18:	sdiv	r3, lr, r2
   39d1c:	mls	r3, r2, r3, lr
   39d20:	cmp	r3, #0
   39d24:	beq	39cc0 <GetDataSlab+0x186dc>
   39d28:	ldr	r1, [r5, #-4]
   39d2c:	ldr	sl, [sp, #196]	; 0xc4
   39d30:	ldr	sl, [sl, r0, lsl #2]
   39d34:	str	sl, [sp, #8]
   39d38:	sub	r3, r2, r3
   39d3c:	mla	r3, sl, r1, r3
   39d40:	add	ip, ip, r3, lsl #3
   39d44:	add	lr, lr, r3
   39d48:	b	39ce0 <GetDataSlab+0x186fc>
   39d4c:	ldr	r0, [sp, #28]
   39d50:	add	r3, sp, #152	; 0x98
   39d54:	add	r3, r3, r0, lsl #2
   39d58:	ldr	r3, [r3, #-120]	; 0xffffff88
   39d5c:	add	lr, lr, r3
   39d60:	add	ip, ip, r3, lsl #3
   39d64:	ldr	r3, [sp, #12]
   39d68:	add	r3, r3, r6
   39d6c:	str	r3, [sp, #12]
   39d70:	ldr	r3, [sp, #16]
   39d74:	ldr	r2, [sp, #12]
   39d78:	cmp	r2, r3
   39d7c:	bge	3c64c <GetDataSlab+0x1b068>
   39d80:	ldr	r3, [sp, #196]	; 0xc4
   39d84:	ldr	r3, [r3]
   39d88:	cmp	r3, #0
   39d8c:	addne	ip, ip, r3, lsl #3
   39d90:	addne	lr, lr, r3
   39d94:	ldr	r6, [fp]
   39d98:	cmp	r6, #0
   39d9c:	ble	39dcc <GetDataSlab+0x187e8>
   39da0:	sub	r1, ip, #8
   39da4:	ldr	r3, [sp, #4]
   39da8:	ldr	r2, [sp, #12]
   39dac:	add	r2, r3, r2
   39db0:	mov	r0, r2
   39db4:	ldr	r3, [r1, #8]!
   39db8:	strb	r3, [r2], #1
   39dbc:	ldr	r6, [fp]
   39dc0:	sub	r3, r2, r0
   39dc4:	cmp	r6, r3
   39dc8:	bgt	39db4 <GetDataSlab+0x187d0>
   39dcc:	ldr	r3, [sp, #192]	; 0xc0
   39dd0:	ldr	r2, [r3]
   39dd4:	ldr	r3, [sp, #196]	; 0xc4
   39dd8:	ldr	r3, [r3]
   39ddc:	sub	r3, r2, r3
   39de0:	add	lr, lr, r3
   39de4:	add	ip, ip, r3, lsl #3
   39de8:	cmp	r9, #1
   39dec:	ble	39d64 <GetDataSlab+0x18780>
   39df0:	ldr	r3, [sp, #76]	; 0x4c
   39df4:	add	r3, r3, #1
   39df8:	str	r3, [sp, #76]	; 0x4c
   39dfc:	ldr	r1, [fp, #4]
   39e00:	sdiv	r2, r3, r1
   39e04:	mls	r3, r1, r2, r3
   39e08:	cmp	r3, #0
   39e0c:	bne	39d4c <GetDataSlab+0x18768>
   39e10:	add	r4, sp, #76	; 0x4c
   39e14:	add	r7, fp, #4
   39e18:	add	r5, sp, #112	; 0x70
   39e1c:	ldr	r0, [sp, #28]
   39e20:	b	39d0c <GetDataSlab+0x18728>
   39e24:	ldr	r3, [sp, #196]	; 0xc4
   39e28:	ldr	r2, [r3, r0, lsl #2]
   39e2c:	cmp	r2, #0
   39e30:	beq	39e44 <GetDataSlab+0x18860>
   39e34:	ldr	r3, [r5, #-4]
   39e38:	mul	r3, r3, r2
   39e3c:	add	ip, ip, r3, lsl #3
   39e40:	add	lr, lr, r3
   39e44:	add	r0, r0, #1
   39e48:	cmp	r9, r0
   39e4c:	beq	39ed4 <GetDataSlab+0x188f0>
   39e50:	ldr	r3, [r4]
   39e54:	add	r1, r3, #1
   39e58:	str	r1, [r4]
   39e5c:	ldr	r2, [r7, #4]!
   39e60:	sdiv	r3, r1, r2
   39e64:	mls	r3, r2, r3, r1
   39e68:	cmp	r3, #0
   39e6c:	bne	39ec0 <GetDataSlab+0x188dc>
   39e70:	str	r8, [r4], #4
   39e74:	add	r5, r5, #4
   39e78:	ldr	r2, [r5]
   39e7c:	sdiv	r3, lr, r2
   39e80:	mls	r3, r2, r3, lr
   39e84:	cmp	r3, #0
   39e88:	beq	39e24 <GetDataSlab+0x18840>
   39e8c:	ldr	r1, [r5, #-4]
   39e90:	str	r1, [sp, #8]
   39e94:	ldr	r1, [sp, #196]	; 0xc4
   39e98:	ldr	r1, [r1, r0, lsl #2]
   39e9c:	str	r1, [sp, #12]
   39ea0:	sub	r3, r2, r3
   39ea4:	mov	r2, r1
   39ea8:	ldr	r1, [sp, #8]
   39eac:	mla	r3, r2, r1, r3
   39eb0:	add	ip, ip, r3, lsl #3
   39eb4:	add	lr, lr, r3
   39eb8:	b	39e44 <GetDataSlab+0x18860>
   39ebc:	mov	r0, #1
   39ec0:	add	r3, sp, #152	; 0x98
   39ec4:	add	r3, r3, r0, lsl #2
   39ec8:	ldr	r3, [r3, #-120]	; 0xffffff88
   39ecc:	add	lr, lr, r3
   39ed0:	add	ip, ip, r3, lsl #3
   39ed4:	ldr	r3, [sp, #20]
   39ed8:	add	r3, r3, r6
   39edc:	str	r3, [sp, #20]
   39ee0:	ldr	r2, [sp, #16]
   39ee4:	cmp	r3, r2
   39ee8:	bge	3c64c <GetDataSlab+0x1b068>
   39eec:	ldr	r3, [sp, #196]	; 0xc4
   39ef0:	ldr	r3, [r3]
   39ef4:	cmp	r3, #0
   39ef8:	addne	ip, ip, r3, lsl #3
   39efc:	addne	lr, lr, r3
   39f00:	ldr	r6, [fp]
   39f04:	cmp	r6, #0
   39f08:	ble	39f40 <GetDataSlab+0x1895c>
   39f0c:	ldr	r3, [sp, #4]
   39f10:	ldr	r2, [sp, #20]
   39f14:	add	r3, r3, r2
   39f18:	mov	r1, r3
   39f1c:	ldr	r2, [ip]
   39f20:	strb	r2, [r3], #1
   39f24:	ldr	r2, [sl]
   39f28:	add	ip, ip, r2, lsl #3
   39f2c:	add	lr, lr, r2
   39f30:	ldr	r6, [fp]
   39f34:	sub	r2, r3, r1
   39f38:	cmp	r6, r2
   39f3c:	bgt	39f1c <GetDataSlab+0x18938>
   39f40:	ldr	r3, [sp, #192]	; 0xc0
   39f44:	ldr	r2, [r3]
   39f48:	ldr	r3, [sp, #196]	; 0xc4
   39f4c:	ldr	r3, [r3]
   39f50:	sub	r3, r2, r3
   39f54:	ldr	r2, [sl]
   39f58:	mls	r3, r2, r6, r3
   39f5c:	add	lr, lr, r3
   39f60:	add	ip, ip, r3, lsl #3
   39f64:	cmp	r9, #1
   39f68:	ble	39ed4 <GetDataSlab+0x188f0>
   39f6c:	ldr	r3, [sp, #76]	; 0x4c
   39f70:	add	r3, r3, #1
   39f74:	str	r3, [sp, #76]	; 0x4c
   39f78:	ldr	r1, [fp, #4]
   39f7c:	sdiv	r2, r3, r1
   39f80:	mls	r3, r1, r2, r3
   39f84:	cmp	r3, #0
   39f88:	bne	39ebc <GetDataSlab+0x188d8>
   39f8c:	add	r4, sp, #76	; 0x4c
   39f90:	add	r7, fp, #4
   39f94:	add	r5, sp, #112	; 0x70
   39f98:	mov	r0, #1
   39f9c:	b	39e70 <GetDataSlab+0x1888c>
   39fa0:	mov	lr, #0
   39fa4:	b	3c530 <GetDataSlab+0x1af4c>
   39fa8:	ldr	r3, [sp, #16]
   39fac:	cmp	r3, #0
   39fb0:	ble	3a584 <GetDataSlab+0x18fa0>
   39fb4:	mov	r3, #0
   39fb8:	str	r3, [sp, #12]
   39fbc:	mov	r8, r3
   39fc0:	b	3a084 <GetDataSlab+0x18aa0>
   39fc4:	ldr	r3, [sp, #196]	; 0xc4
   39fc8:	ldr	r2, [r3, r0, lsl #2]
   39fcc:	cmp	r2, #0
   39fd0:	beq	39fe4 <GetDataSlab+0x18a00>
   39fd4:	ldr	r3, [r5, #-4]
   39fd8:	mul	r3, r3, r2
   39fdc:	add	ip, ip, r3, lsl #3
   39fe0:	add	lr, lr, r3
   39fe4:	add	r0, r0, #1
   39fe8:	cmp	r9, r0
   39fec:	beq	3a068 <GetDataSlab+0x18a84>
   39ff0:	ldr	r3, [r4]
   39ff4:	add	r1, r3, #1
   39ff8:	str	r1, [r4]
   39ffc:	ldr	r2, [r7, #4]!
   3a000:	sdiv	r3, r1, r2
   3a004:	mls	r3, r2, r3, r1
   3a008:	cmp	r3, #0
   3a00c:	bne	3a054 <GetDataSlab+0x18a70>
   3a010:	str	r8, [r4], #4
   3a014:	add	r5, r5, #4
   3a018:	ldr	r2, [r5]
   3a01c:	sdiv	r3, lr, r2
   3a020:	mls	r3, r2, r3, lr
   3a024:	cmp	r3, #0
   3a028:	beq	39fc4 <GetDataSlab+0x189e0>
   3a02c:	ldr	r1, [r5, #-4]
   3a030:	ldr	sl, [sp, #196]	; 0xc4
   3a034:	ldr	sl, [sl, r0, lsl #2]
   3a038:	str	sl, [sp, #8]
   3a03c:	sub	r3, r2, r3
   3a040:	mla	r3, sl, r1, r3
   3a044:	add	ip, ip, r3, lsl #3
   3a048:	add	lr, lr, r3
   3a04c:	b	39fe4 <GetDataSlab+0x18a00>
   3a050:	ldr	r0, [sp, #28]
   3a054:	add	r3, sp, #152	; 0x98
   3a058:	add	r3, r3, r0, lsl #2
   3a05c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a060:	add	lr, lr, r3
   3a064:	add	ip, ip, r3, lsl #3
   3a068:	ldr	r3, [sp, #12]
   3a06c:	add	r3, r3, r6
   3a070:	str	r3, [sp, #12]
   3a074:	ldr	r3, [sp, #16]
   3a078:	ldr	r2, [sp, #12]
   3a07c:	cmp	r2, r3
   3a080:	bge	3a128 <GetDataSlab+0x18b44>
   3a084:	ldr	r3, [sp, #196]	; 0xc4
   3a088:	ldr	r3, [r3]
   3a08c:	cmp	r3, #0
   3a090:	addne	ip, ip, r3, lsl #3
   3a094:	addne	lr, lr, r3
   3a098:	ldr	r6, [fp]
   3a09c:	cmp	r6, #0
   3a0a0:	ble	3a0d0 <GetDataSlab+0x18aec>
   3a0a4:	sub	r1, ip, #8
   3a0a8:	ldr	r3, [sp, #4]
   3a0ac:	ldr	r2, [sp, #12]
   3a0b0:	add	r2, r3, r2
   3a0b4:	mov	r0, r2
   3a0b8:	ldr	r3, [r1, #8]!
   3a0bc:	strb	r3, [r2], #1
   3a0c0:	ldr	r6, [fp]
   3a0c4:	sub	r3, r2, r0
   3a0c8:	cmp	r6, r3
   3a0cc:	bgt	3a0b8 <GetDataSlab+0x18ad4>
   3a0d0:	ldr	r3, [sp, #192]	; 0xc0
   3a0d4:	ldr	r2, [r3]
   3a0d8:	ldr	r3, [sp, #196]	; 0xc4
   3a0dc:	ldr	r3, [r3]
   3a0e0:	sub	r3, r2, r3
   3a0e4:	add	lr, lr, r3
   3a0e8:	add	ip, ip, r3, lsl #3
   3a0ec:	cmp	r9, #1
   3a0f0:	ble	3a068 <GetDataSlab+0x18a84>
   3a0f4:	ldr	r3, [sp, #76]	; 0x4c
   3a0f8:	add	r3, r3, #1
   3a0fc:	str	r3, [sp, #76]	; 0x4c
   3a100:	ldr	r1, [fp, #4]
   3a104:	sdiv	r2, r3, r1
   3a108:	mls	r3, r1, r2, r3
   3a10c:	cmp	r3, #0
   3a110:	bne	3a050 <GetDataSlab+0x18a6c>
   3a114:	add	r4, sp, #76	; 0x4c
   3a118:	add	r7, fp, #4
   3a11c:	add	r5, sp, #112	; 0x70
   3a120:	ldr	r0, [sp, #28]
   3a124:	b	3a010 <GetDataSlab+0x18a2c>
   3a128:	mov	r3, #0
   3a12c:	b	251fc <GetDataSlab+0x3c18>
   3a130:	ldr	r3, [sp, #196]	; 0xc4
   3a134:	ldr	r2, [r3, r0, lsl #2]
   3a138:	cmp	r2, #0
   3a13c:	beq	3a150 <GetDataSlab+0x18b6c>
   3a140:	ldr	r3, [r5, #-4]
   3a144:	mul	r3, r3, r2
   3a148:	add	ip, ip, r3, lsl #3
   3a14c:	add	lr, lr, r3
   3a150:	add	r0, r0, #1
   3a154:	cmp	r9, r0
   3a158:	beq	3a1e0 <GetDataSlab+0x18bfc>
   3a15c:	ldr	r3, [r4]
   3a160:	add	r1, r3, #1
   3a164:	str	r1, [r4]
   3a168:	ldr	r2, [r7, #4]!
   3a16c:	sdiv	r3, r1, r2
   3a170:	mls	r3, r2, r3, r1
   3a174:	cmp	r3, #0
   3a178:	bne	3a1cc <GetDataSlab+0x18be8>
   3a17c:	str	r8, [r4], #4
   3a180:	add	r5, r5, #4
   3a184:	ldr	r2, [r5]
   3a188:	sdiv	r3, lr, r2
   3a18c:	mls	r3, r2, r3, lr
   3a190:	cmp	r3, #0
   3a194:	beq	3a130 <GetDataSlab+0x18b4c>
   3a198:	ldr	r1, [r5, #-4]
   3a19c:	str	r1, [sp, #8]
   3a1a0:	ldr	r1, [sp, #196]	; 0xc4
   3a1a4:	ldr	r1, [r1, r0, lsl #2]
   3a1a8:	str	r1, [sp, #12]
   3a1ac:	sub	r3, r2, r3
   3a1b0:	mov	r2, r1
   3a1b4:	ldr	r1, [sp, #8]
   3a1b8:	mla	r3, r2, r1, r3
   3a1bc:	add	ip, ip, r3, lsl #3
   3a1c0:	add	lr, lr, r3
   3a1c4:	b	3a150 <GetDataSlab+0x18b6c>
   3a1c8:	mov	r0, #1
   3a1cc:	add	r3, sp, #152	; 0x98
   3a1d0:	add	r3, r3, r0, lsl #2
   3a1d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a1d8:	add	lr, lr, r3
   3a1dc:	add	ip, ip, r3, lsl #3
   3a1e0:	ldr	r3, [sp, #20]
   3a1e4:	add	r3, r3, r6
   3a1e8:	str	r3, [sp, #20]
   3a1ec:	ldr	r2, [sp, #16]
   3a1f0:	cmp	r3, r2
   3a1f4:	bge	3a2ac <GetDataSlab+0x18cc8>
   3a1f8:	ldr	r3, [sp, #196]	; 0xc4
   3a1fc:	ldr	r3, [r3]
   3a200:	cmp	r3, #0
   3a204:	addne	ip, ip, r3, lsl #3
   3a208:	addne	lr, lr, r3
   3a20c:	ldr	r6, [fp]
   3a210:	cmp	r6, #0
   3a214:	ble	3a24c <GetDataSlab+0x18c68>
   3a218:	ldr	r3, [sp, #4]
   3a21c:	ldr	r2, [sp, #20]
   3a220:	add	r3, r3, r2
   3a224:	mov	r1, r3
   3a228:	ldr	r2, [ip]
   3a22c:	strb	r2, [r3], #1
   3a230:	ldr	r2, [sl]
   3a234:	add	ip, ip, r2, lsl #3
   3a238:	add	lr, lr, r2
   3a23c:	ldr	r6, [fp]
   3a240:	sub	r2, r3, r1
   3a244:	cmp	r6, r2
   3a248:	bgt	3a228 <GetDataSlab+0x18c44>
   3a24c:	ldr	r3, [sp, #192]	; 0xc0
   3a250:	ldr	r2, [r3]
   3a254:	ldr	r3, [sp, #196]	; 0xc4
   3a258:	ldr	r3, [r3]
   3a25c:	sub	r3, r2, r3
   3a260:	ldr	r2, [sl]
   3a264:	mls	r3, r2, r6, r3
   3a268:	add	lr, lr, r3
   3a26c:	add	ip, ip, r3, lsl #3
   3a270:	cmp	r9, #1
   3a274:	ble	3a1e0 <GetDataSlab+0x18bfc>
   3a278:	ldr	r3, [sp, #76]	; 0x4c
   3a27c:	add	r3, r3, #1
   3a280:	str	r3, [sp, #76]	; 0x4c
   3a284:	ldr	r1, [fp, #4]
   3a288:	sdiv	r2, r3, r1
   3a28c:	mls	r3, r1, r2, r3
   3a290:	cmp	r3, #0
   3a294:	bne	3a1c8 <GetDataSlab+0x18be4>
   3a298:	add	r4, sp, #76	; 0x4c
   3a29c:	add	r7, fp, #4
   3a2a0:	add	r5, sp, #112	; 0x70
   3a2a4:	mov	r0, #1
   3a2a8:	b	3a17c <GetDataSlab+0x18b98>
   3a2ac:	mov	r3, #0
   3a2b0:	b	251fc <GetDataSlab+0x3c18>
   3a2b4:	mov	r3, #1
   3a2b8:	b	251fc <GetDataSlab+0x3c18>
   3a2bc:	mov	r3, #0
   3a2c0:	b	251fc <GetDataSlab+0x3c18>
   3a2c4:	mov	r3, #0
   3a2c8:	b	251fc <GetDataSlab+0x3c18>
   3a2cc:	mov	r3, #0
   3a2d0:	b	251fc <GetDataSlab+0x3c18>
   3a2d4:	mov	r3, #0
   3a2d8:	b	251fc <GetDataSlab+0x3c18>
   3a2dc:	mov	r3, #0
   3a2e0:	b	251fc <GetDataSlab+0x3c18>
   3a2e4:	mov	r3, #0
   3a2e8:	b	251fc <GetDataSlab+0x3c18>
   3a2ec:	mov	r3, #0
   3a2f0:	b	251fc <GetDataSlab+0x3c18>
   3a2f4:	mov	r3, #0
   3a2f8:	b	251fc <GetDataSlab+0x3c18>
   3a2fc:	mov	r3, #0
   3a300:	b	251fc <GetDataSlab+0x3c18>
   3a304:	mov	r3, #0
   3a308:	b	251fc <GetDataSlab+0x3c18>
   3a30c:	mov	r3, #0
   3a310:	b	251fc <GetDataSlab+0x3c18>
   3a314:	mov	r3, #0
   3a318:	b	251fc <GetDataSlab+0x3c18>
   3a31c:	mov	r3, #0
   3a320:	b	251fc <GetDataSlab+0x3c18>
   3a324:	mov	r3, #0
   3a328:	b	251fc <GetDataSlab+0x3c18>
   3a32c:	mov	r3, #0
   3a330:	b	251fc <GetDataSlab+0x3c18>
   3a334:	mov	r3, #0
   3a338:	b	251fc <GetDataSlab+0x3c18>
   3a33c:	mov	r3, #0
   3a340:	b	251fc <GetDataSlab+0x3c18>
   3a344:	mov	r3, #0
   3a348:	b	251fc <GetDataSlab+0x3c18>
   3a34c:	mov	r3, #0
   3a350:	b	251fc <GetDataSlab+0x3c18>
   3a354:	mov	r3, #0
   3a358:	b	251fc <GetDataSlab+0x3c18>
   3a35c:	mov	r3, #0
   3a360:	b	251fc <GetDataSlab+0x3c18>
   3a364:	mov	r3, #0
   3a368:	b	251fc <GetDataSlab+0x3c18>
   3a36c:	mov	r3, #0
   3a370:	b	251fc <GetDataSlab+0x3c18>
   3a374:	mov	r3, #0
   3a378:	b	251fc <GetDataSlab+0x3c18>
   3a37c:	mov	r3, #0
   3a380:	b	251fc <GetDataSlab+0x3c18>
   3a384:	mov	r3, #0
   3a388:	b	251fc <GetDataSlab+0x3c18>
   3a38c:	mov	r3, #0
   3a390:	b	251fc <GetDataSlab+0x3c18>
   3a394:	mov	r3, #0
   3a398:	b	251fc <GetDataSlab+0x3c18>
   3a39c:	mov	r3, #0
   3a3a0:	b	251fc <GetDataSlab+0x3c18>
   3a3a4:	mov	r3, #0
   3a3a8:	b	251fc <GetDataSlab+0x3c18>
   3a3ac:	mov	r3, #0
   3a3b0:	b	251fc <GetDataSlab+0x3c18>
   3a3b4:	mov	r3, #0
   3a3b8:	b	251fc <GetDataSlab+0x3c18>
   3a3bc:	mov	r3, #0
   3a3c0:	b	251fc <GetDataSlab+0x3c18>
   3a3c4:	mov	r3, #0
   3a3c8:	b	251fc <GetDataSlab+0x3c18>
   3a3cc:	mov	r3, #0
   3a3d0:	b	251fc <GetDataSlab+0x3c18>
   3a3d4:	mov	r3, #0
   3a3d8:	b	251fc <GetDataSlab+0x3c18>
   3a3dc:	mov	r3, #0
   3a3e0:	b	251fc <GetDataSlab+0x3c18>
   3a3e4:	mov	r3, #0
   3a3e8:	b	251fc <GetDataSlab+0x3c18>
   3a3ec:	mov	r3, #0
   3a3f0:	b	251fc <GetDataSlab+0x3c18>
   3a3f4:	mov	r3, #0
   3a3f8:	b	251fc <GetDataSlab+0x3c18>
   3a3fc:	mov	r3, #0
   3a400:	b	251fc <GetDataSlab+0x3c18>
   3a404:	mov	r3, #0
   3a408:	b	251fc <GetDataSlab+0x3c18>
   3a40c:	mov	r3, #0
   3a410:	b	251fc <GetDataSlab+0x3c18>
   3a414:	mov	r3, #0
   3a418:	b	251fc <GetDataSlab+0x3c18>
   3a41c:	mov	r3, #0
   3a420:	b	251fc <GetDataSlab+0x3c18>
   3a424:	mov	r3, #0
   3a428:	b	251fc <GetDataSlab+0x3c18>
   3a42c:	mov	r3, #0
   3a430:	b	251fc <GetDataSlab+0x3c18>
   3a434:	mov	r3, #0
   3a438:	b	251fc <GetDataSlab+0x3c18>
   3a43c:	mov	r3, #0
   3a440:	b	251fc <GetDataSlab+0x3c18>
   3a444:	mov	r3, #0
   3a448:	b	251fc <GetDataSlab+0x3c18>
   3a44c:	mov	r3, #0
   3a450:	b	251fc <GetDataSlab+0x3c18>
   3a454:	mov	r3, #0
   3a458:	b	251fc <GetDataSlab+0x3c18>
   3a45c:	mov	r3, #0
   3a460:	b	251fc <GetDataSlab+0x3c18>
   3a464:	mov	r3, #0
   3a468:	b	251fc <GetDataSlab+0x3c18>
   3a46c:	mov	r3, #0
   3a470:	b	251fc <GetDataSlab+0x3c18>
   3a474:	mov	r3, #0
   3a478:	b	251fc <GetDataSlab+0x3c18>
   3a47c:	mov	r3, #0
   3a480:	b	251fc <GetDataSlab+0x3c18>
   3a484:	mov	r3, #0
   3a488:	b	251fc <GetDataSlab+0x3c18>
   3a48c:	mov	r3, #0
   3a490:	b	251fc <GetDataSlab+0x3c18>
   3a494:	mov	r3, #0
   3a498:	b	251fc <GetDataSlab+0x3c18>
   3a49c:	mov	r3, #0
   3a4a0:	b	251fc <GetDataSlab+0x3c18>
   3a4a4:	mov	r3, #0
   3a4a8:	b	251fc <GetDataSlab+0x3c18>
   3a4ac:	mov	r3, #0
   3a4b0:	b	251fc <GetDataSlab+0x3c18>
   3a4b4:	mov	r3, #0
   3a4b8:	b	251fc <GetDataSlab+0x3c18>
   3a4bc:	mov	r3, #0
   3a4c0:	b	251fc <GetDataSlab+0x3c18>
   3a4c4:	mov	r3, #0
   3a4c8:	b	251fc <GetDataSlab+0x3c18>
   3a4cc:	mov	r3, #0
   3a4d0:	b	251fc <GetDataSlab+0x3c18>
   3a4d4:	mov	r3, #0
   3a4d8:	b	251fc <GetDataSlab+0x3c18>
   3a4dc:	mov	r3, #0
   3a4e0:	b	251fc <GetDataSlab+0x3c18>
   3a4e4:	mov	r3, #0
   3a4e8:	b	251fc <GetDataSlab+0x3c18>
   3a4ec:	mov	r3, #0
   3a4f0:	b	251fc <GetDataSlab+0x3c18>
   3a4f4:	mov	r3, #0
   3a4f8:	b	251fc <GetDataSlab+0x3c18>
   3a4fc:	mov	r3, #0
   3a500:	b	251fc <GetDataSlab+0x3c18>
   3a504:	mov	r3, #0
   3a508:	b	251fc <GetDataSlab+0x3c18>
   3a50c:	mov	r3, #0
   3a510:	b	251fc <GetDataSlab+0x3c18>
   3a514:	mov	r3, #0
   3a518:	b	251fc <GetDataSlab+0x3c18>
   3a51c:	mov	r3, #0
   3a520:	b	251fc <GetDataSlab+0x3c18>
   3a524:	mov	r3, #0
   3a528:	b	251fc <GetDataSlab+0x3c18>
   3a52c:	mov	r3, #0
   3a530:	b	251fc <GetDataSlab+0x3c18>
   3a534:	mov	r3, #0
   3a538:	b	251fc <GetDataSlab+0x3c18>
   3a53c:	mov	r3, #0
   3a540:	b	251fc <GetDataSlab+0x3c18>
   3a544:	mov	r3, #0
   3a548:	b	251fc <GetDataSlab+0x3c18>
   3a54c:	mov	r3, #0
   3a550:	b	251fc <GetDataSlab+0x3c18>
   3a554:	mov	r3, #0
   3a558:	b	251fc <GetDataSlab+0x3c18>
   3a55c:	mov	r3, #0
   3a560:	b	251fc <GetDataSlab+0x3c18>
   3a564:	mov	r3, #0
   3a568:	b	251fc <GetDataSlab+0x3c18>
   3a56c:	mov	r3, #0
   3a570:	b	251fc <GetDataSlab+0x3c18>
   3a574:	mov	r3, #0
   3a578:	b	251fc <GetDataSlab+0x3c18>
   3a57c:	mov	r3, #0
   3a580:	b	251fc <GetDataSlab+0x3c18>
   3a584:	mov	r3, #0
   3a588:	b	251fc <GetDataSlab+0x3c18>
   3a58c:	mov	r3, #1
   3a590:	b	251fc <GetDataSlab+0x3c18>
   3a594:	mov	r3, #0
   3a598:	b	251fc <GetDataSlab+0x3c18>
   3a59c:	mov	r3, #0
   3a5a0:	b	251fc <GetDataSlab+0x3c18>
   3a5a4:	mov	r3, #0
   3a5a8:	b	251fc <GetDataSlab+0x3c18>
   3a5ac:	mov	r3, #0
   3a5b0:	b	251fc <GetDataSlab+0x3c18>
   3a5b4:	mov	r3, #0
   3a5b8:	b	251fc <GetDataSlab+0x3c18>
   3a5bc:	mov	r3, #0
   3a5c0:	b	251fc <GetDataSlab+0x3c18>
   3a5c4:	mov	r3, #0
   3a5c8:	b	251fc <GetDataSlab+0x3c18>
   3a5cc:	mov	r3, #0
   3a5d0:	b	251fc <GetDataSlab+0x3c18>
   3a5d4:	mov	r3, #0
   3a5d8:	b	251fc <GetDataSlab+0x3c18>
   3a5dc:	mov	r3, #0
   3a5e0:	b	251fc <GetDataSlab+0x3c18>
   3a5e4:	mov	r3, #0
   3a5e8:	b	251fc <GetDataSlab+0x3c18>
   3a5ec:	mov	r3, #0
   3a5f0:	b	251fc <GetDataSlab+0x3c18>
   3a5f4:	mov	r3, #0
   3a5f8:	b	251fc <GetDataSlab+0x3c18>
   3a5fc:	mov	r3, #0
   3a600:	b	251fc <GetDataSlab+0x3c18>
   3a604:	mov	r3, #0
   3a608:	b	251fc <GetDataSlab+0x3c18>
   3a60c:	mov	r3, #0
   3a610:	b	251fc <GetDataSlab+0x3c18>
   3a614:	mov	r3, #0
   3a618:	b	251fc <GetDataSlab+0x3c18>
   3a61c:	mov	r3, #0
   3a620:	b	251fc <GetDataSlab+0x3c18>
   3a624:	mov	r3, #0
   3a628:	b	251fc <GetDataSlab+0x3c18>
   3a62c:	mov	r3, #0
   3a630:	b	251fc <GetDataSlab+0x3c18>
   3a634:	mov	r3, #0
   3a638:	b	251fc <GetDataSlab+0x3c18>
   3a63c:	mov	r3, #0
   3a640:	b	251fc <GetDataSlab+0x3c18>
   3a644:	mov	r3, #0
   3a648:	b	251fc <GetDataSlab+0x3c18>
   3a64c:	mov	r3, #0
   3a650:	b	251fc <GetDataSlab+0x3c18>
   3a654:	mov	r3, #0
   3a658:	b	251fc <GetDataSlab+0x3c18>
   3a65c:	mov	r3, #0
   3a660:	b	251fc <GetDataSlab+0x3c18>
   3a664:	mov	r3, #0
   3a668:	b	251fc <GetDataSlab+0x3c18>
   3a66c:	mov	r3, #0
   3a670:	b	251fc <GetDataSlab+0x3c18>
   3a674:	mov	r3, #0
   3a678:	b	251fc <GetDataSlab+0x3c18>
   3a67c:	mov	r3, #0
   3a680:	b	251fc <GetDataSlab+0x3c18>
   3a684:	mov	r3, #0
   3a688:	b	251fc <GetDataSlab+0x3c18>
   3a68c:	mov	r3, #0
   3a690:	b	251fc <GetDataSlab+0x3c18>
   3a694:	mov	r3, #0
   3a698:	b	251fc <GetDataSlab+0x3c18>
   3a69c:	mov	r3, #0
   3a6a0:	b	251fc <GetDataSlab+0x3c18>
   3a6a4:	mov	r3, #0
   3a6a8:	b	251fc <GetDataSlab+0x3c18>
   3a6ac:	mov	r3, #0
   3a6b0:	b	251fc <GetDataSlab+0x3c18>
   3a6b4:	mov	r3, #0
   3a6b8:	b	251fc <GetDataSlab+0x3c18>
   3a6bc:	mov	r3, #0
   3a6c0:	b	251fc <GetDataSlab+0x3c18>
   3a6c4:	mov	r3, #0
   3a6c8:	b	251fc <GetDataSlab+0x3c18>
   3a6cc:	mov	r3, #0
   3a6d0:	b	251fc <GetDataSlab+0x3c18>
   3a6d4:	mov	r3, #0
   3a6d8:	b	251fc <GetDataSlab+0x3c18>
   3a6dc:	mov	r3, #0
   3a6e0:	b	251fc <GetDataSlab+0x3c18>
   3a6e4:	mov	r3, #0
   3a6e8:	b	251fc <GetDataSlab+0x3c18>
   3a6ec:	mov	r3, #0
   3a6f0:	b	251fc <GetDataSlab+0x3c18>
   3a6f4:	mov	r3, #0
   3a6f8:	b	251fc <GetDataSlab+0x3c18>
   3a6fc:	mov	r3, #0
   3a700:	b	251fc <GetDataSlab+0x3c18>
   3a704:	mov	r3, #0
   3a708:	b	251fc <GetDataSlab+0x3c18>
   3a70c:	mov	r3, #0
   3a710:	b	251fc <GetDataSlab+0x3c18>
   3a714:	mov	r3, #0
   3a718:	b	251fc <GetDataSlab+0x3c18>
   3a71c:	mov	r3, #0
   3a720:	b	251fc <GetDataSlab+0x3c18>
   3a724:	mov	r3, #0
   3a728:	b	251fc <GetDataSlab+0x3c18>
   3a72c:	mov	r3, #0
   3a730:	b	251fc <GetDataSlab+0x3c18>
   3a734:	mov	r3, #0
   3a738:	b	251fc <GetDataSlab+0x3c18>
   3a73c:	mov	r3, #0
   3a740:	b	251fc <GetDataSlab+0x3c18>
   3a744:	mov	r3, #0
   3a748:	b	251fc <GetDataSlab+0x3c18>
   3a74c:	mov	r3, #0
   3a750:	b	251fc <GetDataSlab+0x3c18>
   3a754:	mov	r3, #0
   3a758:	b	251fc <GetDataSlab+0x3c18>
   3a75c:	mov	r3, #0
   3a760:	b	251fc <GetDataSlab+0x3c18>
   3a764:	mov	r3, #0
   3a768:	b	251fc <GetDataSlab+0x3c18>
   3a76c:	mov	r3, #0
   3a770:	b	251fc <GetDataSlab+0x3c18>
   3a774:	mov	r3, #0
   3a778:	b	251fc <GetDataSlab+0x3c18>
   3a77c:	mov	r3, #0
   3a780:	b	251fc <GetDataSlab+0x3c18>
   3a784:	mov	r3, #0
   3a788:	b	251fc <GetDataSlab+0x3c18>
   3a78c:	mov	r3, #0
   3a790:	b	251fc <GetDataSlab+0x3c18>
   3a794:	mov	r3, #0
   3a798:	b	251fc <GetDataSlab+0x3c18>
   3a79c:	mov	r3, #0
   3a7a0:	b	251fc <GetDataSlab+0x3c18>
   3a7a4:	mov	r3, #0
   3a7a8:	b	251fc <GetDataSlab+0x3c18>
   3a7ac:	mov	r3, #0
   3a7b0:	b	251fc <GetDataSlab+0x3c18>
   3a7b4:	mov	r3, #0
   3a7b8:	b	251fc <GetDataSlab+0x3c18>
   3a7bc:	mov	r3, #0
   3a7c0:	b	251fc <GetDataSlab+0x3c18>
   3a7c4:	mov	r3, #0
   3a7c8:	b	251fc <GetDataSlab+0x3c18>
   3a7cc:	mov	r3, #0
   3a7d0:	b	251fc <GetDataSlab+0x3c18>
   3a7d4:	mov	r3, #0
   3a7d8:	b	251fc <GetDataSlab+0x3c18>
   3a7dc:	mov	r3, #0
   3a7e0:	b	251fc <GetDataSlab+0x3c18>
   3a7e4:	mov	r3, #0
   3a7e8:	b	251fc <GetDataSlab+0x3c18>
   3a7ec:	mov	r3, #0
   3a7f0:	b	251fc <GetDataSlab+0x3c18>
   3a7f4:	mov	r3, #0
   3a7f8:	b	251fc <GetDataSlab+0x3c18>
   3a7fc:	mov	r3, #0
   3a800:	b	251fc <GetDataSlab+0x3c18>
   3a804:	mov	r3, #0
   3a808:	b	251fc <GetDataSlab+0x3c18>
   3a80c:	mov	r3, #0
   3a810:	b	251fc <GetDataSlab+0x3c18>
   3a814:	mov	r3, #0
   3a818:	b	251fc <GetDataSlab+0x3c18>
   3a81c:	mov	r3, #0
   3a820:	b	251fc <GetDataSlab+0x3c18>
   3a824:	mov	r3, #0
   3a828:	b	251fc <GetDataSlab+0x3c18>
   3a82c:	mov	r3, #0
   3a830:	b	251fc <GetDataSlab+0x3c18>
   3a834:	mov	r3, #0
   3a838:	b	251fc <GetDataSlab+0x3c18>
   3a83c:	mov	r3, #0
   3a840:	b	251fc <GetDataSlab+0x3c18>
   3a844:	mov	r3, #0
   3a848:	b	251fc <GetDataSlab+0x3c18>
   3a84c:	mov	r3, #0
   3a850:	b	251fc <GetDataSlab+0x3c18>
   3a854:	mov	r3, #0
   3a858:	b	251fc <GetDataSlab+0x3c18>
   3a85c:	mov	r3, #0
   3a860:	b	251fc <GetDataSlab+0x3c18>
   3a864:	ldr	r3, [fp]
   3a868:	ldr	r2, [sp, #12]
   3a86c:	mul	r3, r3, r2
   3a870:	str	r3, [sp, #12]
   3a874:	ldr	r3, [sp, #196]	; 0xc4
   3a878:	ldr	r3, [r3]
   3a87c:	ldr	r2, [r5, #-4]
   3a880:	mla	r7, r2, r3, r7
   3a884:	add	lr, lr, #1
   3a888:	ldr	r2, [sp, #20]
   3a88c:	ldr	r3, [r2, #4]!
   3a890:	str	r2, [sp, #20]
   3a894:	sub	r3, r3, #1
   3a898:	str	r3, [r8], #4
   3a89c:	ldr	r2, [sp, #16]
   3a8a0:	ldr	r3, [r2], #4
   3a8a4:	str	r2, [sp, #16]
   3a8a8:	mov	ip, r3
   3a8ac:	add	r5, r5, #4
   3a8b0:	mov	r6, r5
   3a8b4:	str	r3, [r5]
   3a8b8:	cmp	lr, #0
   3a8bc:	beq	3a864 <GetDataSlab+0x19280>
   3a8c0:	str	r8, [sp, #24]
   3a8c4:	ldr	r0, [r8, #-4]
   3a8c8:	mov	r1, r2
   3a8cc:	mov	r2, r1
   3a8d0:	ldr	r3, [r1, #-4]!
   3a8d4:	mul	r0, r3, r0
   3a8d8:	ldr	r3, [r2]
   3a8dc:	mul	ip, r3, ip
   3a8e0:	cmp	r1, r4
   3a8e4:	bne	3a8cc <GetDataSlab+0x192e8>
   3a8e8:	ldr	r3, [sp, #24]
   3a8ec:	str	r0, [r3, #-4]
   3a8f0:	str	ip, [r6]
   3a8f4:	ldr	r3, [fp, lr, lsl #2]
   3a8f8:	ldr	r2, [sp, #12]
   3a8fc:	mul	r3, r3, r2
   3a900:	str	r3, [sp, #12]
   3a904:	ldr	r3, [r6, #-4]
   3a908:	ldr	r2, [sp, #196]	; 0xc4
   3a90c:	ldr	r2, [r2, lr, lsl #2]
   3a910:	mla	r7, r2, r3, r7
   3a914:	add	r3, lr, #1
   3a918:	cmp	r3, r9
   3a91c:	blt	3a884 <GetDataSlab+0x192a0>
   3a920:	ldr	r3, [sp, #8]
   3a924:	add	r8, r3, r7, lsl #3
   3a928:	ldr	r3, [sp, #28]
   3a92c:	cmp	r3, #1
   3a930:	beq	26db0 <GetDataSlab+0x57cc>
   3a934:	ldr	r3, [sp, #12]
   3a938:	cmp	r3, #0
   3a93c:	movle	r3, #0
   3a940:	ble	251fc <GetDataSlab+0x3c18>
   3a944:	mov	r3, #0
   3a948:	str	r3, [sp, #8]
   3a94c:	b	26ff0 <GetDataSlab+0x5a0c>
   3a950:	ldr	r3, [fp]
   3a954:	ldr	r2, [sp, #12]
   3a958:	mul	r3, r3, r2
   3a95c:	str	r3, [sp, #12]
   3a960:	ldr	r3, [sp, #196]	; 0xc4
   3a964:	ldr	r3, [r3]
   3a968:	ldr	r2, [r5, #-4]
   3a96c:	mla	r7, r2, r3, r7
   3a970:	add	lr, lr, #1
   3a974:	ldr	r2, [sp, #20]
   3a978:	ldr	r3, [r2, #4]!
   3a97c:	str	r2, [sp, #20]
   3a980:	sub	r3, r3, #1
   3a984:	str	r3, [r8], #4
   3a988:	ldr	r2, [sp, #16]
   3a98c:	ldr	r3, [r2], #4
   3a990:	str	r2, [sp, #16]
   3a994:	mov	ip, r3
   3a998:	add	r5, r5, #4
   3a99c:	mov	r6, r5
   3a9a0:	str	r3, [r5]
   3a9a4:	cmp	lr, #0
   3a9a8:	beq	3a950 <GetDataSlab+0x1936c>
   3a9ac:	str	r8, [sp, #24]
   3a9b0:	ldr	r0, [r8, #-4]
   3a9b4:	mov	r1, r2
   3a9b8:	mov	r2, r1
   3a9bc:	ldr	r3, [r1, #-4]!
   3a9c0:	mul	r0, r3, r0
   3a9c4:	ldr	r3, [r2]
   3a9c8:	mul	ip, r3, ip
   3a9cc:	cmp	r1, r4
   3a9d0:	bne	3a9b8 <GetDataSlab+0x193d4>
   3a9d4:	ldr	r3, [sp, #24]
   3a9d8:	str	r0, [r3, #-4]
   3a9dc:	str	ip, [r6]
   3a9e0:	ldr	r3, [fp, lr, lsl #2]
   3a9e4:	ldr	r2, [sp, #12]
   3a9e8:	mul	r3, r3, r2
   3a9ec:	str	r3, [sp, #12]
   3a9f0:	ldr	r3, [r6, #-4]
   3a9f4:	ldr	r2, [sp, #196]	; 0xc4
   3a9f8:	ldr	r2, [r2, lr, lsl #2]
   3a9fc:	mla	r7, r2, r3, r7
   3aa00:	add	r3, lr, #1
   3aa04:	cmp	r3, r9
   3aa08:	blt	3a970 <GetDataSlab+0x1938c>
   3aa0c:	ldr	r3, [sp, #8]
   3aa10:	add	r8, r3, r7, lsl #3
   3aa14:	ldr	r3, [sp, #28]
   3aa18:	cmp	r3, #1
   3aa1c:	beq	26ab8 <GetDataSlab+0x54d4>
   3aa20:	ldr	r3, [sp, #12]
   3aa24:	cmp	r3, #0
   3aa28:	movgt	r3, #0
   3aa2c:	strgt	r3, [sp, #8]
   3aa30:	bgt	26cf0 <GetDataSlab+0x570c>
   3aa34:	mov	r3, #0
   3aa38:	b	251fc <GetDataSlab+0x3c18>
   3aa3c:	ldr	r3, [fp]
   3aa40:	ldr	r2, [sp, #16]
   3aa44:	mul	r3, r3, r2
   3aa48:	str	r3, [sp, #16]
   3aa4c:	ldr	r3, [sp, #196]	; 0xc4
   3aa50:	ldr	r3, [r3]
   3aa54:	ldr	r2, [r5, #-4]
   3aa58:	mla	lr, r2, r3, lr
   3aa5c:	add	r8, r8, #1
   3aa60:	ldr	r2, [sp, #20]
   3aa64:	ldr	r3, [r2, #4]!
   3aa68:	str	r2, [sp, #20]
   3aa6c:	sub	r3, r3, #1
   3aa70:	str	r3, [r7], #4
   3aa74:	ldr	r2, [sp, #12]
   3aa78:	ldr	r3, [r2], #4
   3aa7c:	str	r2, [sp, #12]
   3aa80:	mov	ip, r3
   3aa84:	add	r5, r5, #4
   3aa88:	mov	r6, r5
   3aa8c:	str	r3, [r5]
   3aa90:	cmp	r8, #0
   3aa94:	beq	3aa3c <GetDataSlab+0x19458>
   3aa98:	str	r7, [sp, #24]
   3aa9c:	ldr	r0, [r7, #-4]
   3aaa0:	mov	r1, r2
   3aaa4:	mov	r2, r1
   3aaa8:	ldr	r3, [r1, #-4]!
   3aaac:	mul	r0, r3, r0
   3aab0:	ldr	r3, [r2]
   3aab4:	mul	ip, r3, ip
   3aab8:	cmp	r4, r1
   3aabc:	bne	3aaa4 <GetDataSlab+0x194c0>
   3aac0:	ldr	r3, [sp, #24]
   3aac4:	str	r0, [r3, #-4]
   3aac8:	str	ip, [r6]
   3aacc:	ldr	r3, [fp, r8, lsl #2]
   3aad0:	ldr	r2, [sp, #16]
   3aad4:	mul	r3, r3, r2
   3aad8:	str	r3, [sp, #16]
   3aadc:	ldr	r3, [r6, #-4]
   3aae0:	ldr	r2, [sp, #196]	; 0xc4
   3aae4:	ldr	r2, [r2, r8, lsl #2]
   3aae8:	mla	lr, r2, r3, lr
   3aaec:	add	r3, r8, #1
   3aaf0:	cmp	r9, r3
   3aaf4:	bgt	3aa5c <GetDataSlab+0x19478>
   3aaf8:	ldr	r3, [sp, #8]
   3aafc:	add	ip, r3, lr
   3ab00:	ldr	r3, [sp, #28]
   3ab04:	cmp	r3, #1
   3ab08:	beq	26378 <GetDataSlab+0x4d94>
   3ab0c:	ldr	r3, [sp, #16]
   3ab10:	cmp	r3, #0
   3ab14:	movle	r3, #0
   3ab18:	ble	251fc <GetDataSlab+0x3c18>
   3ab1c:	mov	r3, #0
   3ab20:	str	r3, [sp, #20]
   3ab24:	mov	r8, r3
   3ab28:	b	265d0 <GetDataSlab+0x4fec>
   3ab2c:	ldr	r3, [fp]
   3ab30:	ldr	r2, [sp, #16]
   3ab34:	mul	r3, r3, r2
   3ab38:	str	r3, [sp, #16]
   3ab3c:	ldr	r3, [sp, #196]	; 0xc4
   3ab40:	ldr	r3, [r3]
   3ab44:	ldr	r2, [r6, #-4]
   3ab48:	mla	lr, r2, r3, lr
   3ab4c:	add	r4, r4, #1
   3ab50:	ldr	r2, [sp, #20]
   3ab54:	ldr	r3, [r2, #4]!
   3ab58:	str	r2, [sp, #20]
   3ab5c:	sub	r3, r3, #1
   3ab60:	str	r3, [r8], #4
   3ab64:	ldr	r2, [sp, #12]
   3ab68:	ldr	r3, [r2], #4
   3ab6c:	str	r2, [sp, #12]
   3ab70:	mov	ip, r3
   3ab74:	add	r6, r6, #4
   3ab78:	mov	r7, r6
   3ab7c:	str	r3, [r6]
   3ab80:	cmp	r4, #0
   3ab84:	beq	3ab2c <GetDataSlab+0x19548>
   3ab88:	str	r8, [sp, #24]
   3ab8c:	ldr	r0, [r8, #-4]
   3ab90:	mov	r1, r2
   3ab94:	mov	r2, r1
   3ab98:	ldr	r3, [r1, #-4]!
   3ab9c:	mul	r0, r3, r0
   3aba0:	ldr	r3, [r2]
   3aba4:	mul	ip, r3, ip
   3aba8:	cmp	r1, r5
   3abac:	bne	3ab94 <GetDataSlab+0x195b0>
   3abb0:	ldr	r3, [sp, #24]
   3abb4:	str	r0, [r3, #-4]
   3abb8:	str	ip, [r7]
   3abbc:	ldr	r3, [fp, r4, lsl #2]
   3abc0:	ldr	r2, [sp, #16]
   3abc4:	mul	r3, r3, r2
   3abc8:	str	r3, [sp, #16]
   3abcc:	ldr	r3, [r7, #-4]
   3abd0:	ldr	r2, [sp, #196]	; 0xc4
   3abd4:	ldr	r2, [r2, r4, lsl #2]
   3abd8:	mla	lr, r2, r3, lr
   3abdc:	add	r3, r4, #1
   3abe0:	cmp	r9, r3
   3abe4:	bgt	3ab4c <GetDataSlab+0x19568>
   3abe8:	ldr	r3, [sp, #8]
   3abec:	add	ip, r3, lr
   3abf0:	ldr	r3, [sp, #28]
   3abf4:	cmp	r3, #1
   3abf8:	beq	266e8 <GetDataSlab+0x5104>
   3abfc:	ldr	r3, [sp, #16]
   3ac00:	cmp	r3, #0
   3ac04:	movle	r3, #0
   3ac08:	ble	251fc <GetDataSlab+0x3c18>
   3ac0c:	mov	r3, #0
   3ac10:	str	r3, [sp, #20]
   3ac14:	mov	r8, r3
   3ac18:	b	26940 <GetDataSlab+0x535c>
   3ac1c:	ldr	r3, [fp]
   3ac20:	ldr	r2, [sp, #16]
   3ac24:	mul	r3, r3, r2
   3ac28:	str	r3, [sp, #16]
   3ac2c:	ldr	r3, [sp, #196]	; 0xc4
   3ac30:	ldr	r3, [r3]
   3ac34:	ldr	r2, [r6, #-4]
   3ac38:	mla	lr, r2, r3, lr
   3ac3c:	add	r4, r4, #1
   3ac40:	ldr	r2, [sp, #20]
   3ac44:	ldr	r3, [r2, #4]!
   3ac48:	str	r2, [sp, #20]
   3ac4c:	sub	r3, r3, #1
   3ac50:	str	r3, [r8], #4
   3ac54:	ldr	r2, [sp, #12]
   3ac58:	ldr	r3, [r2], #4
   3ac5c:	str	r2, [sp, #12]
   3ac60:	mov	ip, r3
   3ac64:	add	r6, r6, #4
   3ac68:	mov	r7, r6
   3ac6c:	str	r3, [r6]
   3ac70:	cmp	r4, #0
   3ac74:	beq	3ac1c <GetDataSlab+0x19638>
   3ac78:	str	r8, [sp, #24]
   3ac7c:	ldr	r0, [r8, #-4]
   3ac80:	mov	r1, r2
   3ac84:	mov	r2, r1
   3ac88:	ldr	r3, [r1, #-4]!
   3ac8c:	mul	r0, r3, r0
   3ac90:	ldr	r3, [r2]
   3ac94:	mul	ip, r3, ip
   3ac98:	cmp	r5, r1
   3ac9c:	bne	3ac84 <GetDataSlab+0x196a0>
   3aca0:	ldr	r3, [sp, #24]
   3aca4:	str	r0, [r3, #-4]
   3aca8:	str	ip, [r7]
   3acac:	ldr	r3, [fp, r4, lsl #2]
   3acb0:	ldr	r2, [sp, #16]
   3acb4:	mul	r3, r3, r2
   3acb8:	str	r3, [sp, #16]
   3acbc:	ldr	r3, [r7, #-4]
   3acc0:	ldr	r2, [sp, #196]	; 0xc4
   3acc4:	ldr	r2, [r2, r4, lsl #2]
   3acc8:	mla	lr, r2, r3, lr
   3accc:	add	r3, r4, #1
   3acd0:	cmp	r9, r3
   3acd4:	bgt	3ac3c <GetDataSlab+0x19658>
   3acd8:	ldr	r3, [sp, #8]
   3acdc:	add	ip, r3, lr, lsl #1
   3ace0:	ldr	r3, [sp, #28]
   3ace4:	cmp	r3, #1
   3ace8:	beq	25ca4 <GetDataSlab+0x46c0>
   3acec:	ldr	r3, [sp, #16]
   3acf0:	cmp	r3, #0
   3acf4:	movle	r3, #0
   3acf8:	ble	251fc <GetDataSlab+0x3c18>
   3acfc:	mov	r3, #0
   3ad00:	str	r3, [sp, #20]
   3ad04:	mov	r8, r3
   3ad08:	b	25ef8 <GetDataSlab+0x4914>
   3ad0c:	ldr	r3, [fp]
   3ad10:	ldr	r2, [sp, #16]
   3ad14:	mul	r3, r3, r2
   3ad18:	str	r3, [sp, #16]
   3ad1c:	ldr	r3, [sp, #196]	; 0xc4
   3ad20:	ldr	r3, [r3]
   3ad24:	ldr	r2, [r6, #-4]
   3ad28:	mla	lr, r2, r3, lr
   3ad2c:	add	r4, r4, #1
   3ad30:	ldr	r2, [sp, #20]
   3ad34:	ldr	r3, [r2, #4]!
   3ad38:	str	r2, [sp, #20]
   3ad3c:	sub	r3, r3, #1
   3ad40:	str	r3, [r8], #4
   3ad44:	ldr	r2, [sp, #12]
   3ad48:	ldr	r3, [r2], #4
   3ad4c:	str	r2, [sp, #12]
   3ad50:	mov	ip, r3
   3ad54:	add	r6, r6, #4
   3ad58:	mov	r7, r6
   3ad5c:	str	r3, [r6]
   3ad60:	cmp	r4, #0
   3ad64:	beq	3ad0c <GetDataSlab+0x19728>
   3ad68:	str	r8, [sp, #24]
   3ad6c:	ldr	r0, [r8, #-4]
   3ad70:	mov	r1, r2
   3ad74:	mov	r2, r1
   3ad78:	ldr	r3, [r1, #-4]!
   3ad7c:	mul	r0, r3, r0
   3ad80:	ldr	r3, [r2]
   3ad84:	mul	ip, r3, ip
   3ad88:	cmp	r5, r1
   3ad8c:	bne	3ad74 <GetDataSlab+0x19790>
   3ad90:	ldr	r3, [sp, #24]
   3ad94:	str	r0, [r3, #-4]
   3ad98:	str	ip, [r7]
   3ad9c:	ldr	r3, [fp, r4, lsl #2]
   3ada0:	ldr	r2, [sp, #16]
   3ada4:	mul	r3, r3, r2
   3ada8:	str	r3, [sp, #16]
   3adac:	ldr	r3, [r7, #-4]
   3adb0:	ldr	r2, [sp, #196]	; 0xc4
   3adb4:	ldr	r2, [r2, r4, lsl #2]
   3adb8:	mla	lr, r2, r3, lr
   3adbc:	add	r3, r4, #1
   3adc0:	cmp	r3, r9
   3adc4:	blt	3ad2c <GetDataSlab+0x19748>
   3adc8:	ldr	r3, [sp, #8]
   3adcc:	add	ip, r3, lr, lsl #1
   3add0:	ldr	r3, [sp, #28]
   3add4:	cmp	r3, #1
   3add8:	beq	26010 <GetDataSlab+0x4a2c>
   3addc:	ldr	r3, [sp, #16]
   3ade0:	cmp	r3, #0
   3ade4:	movle	r3, #0
   3ade8:	ble	251fc <GetDataSlab+0x3c18>
   3adec:	mov	r3, #0
   3adf0:	str	r3, [sp, #20]
   3adf4:	mov	r8, r3
   3adf8:	b	26264 <GetDataSlab+0x4c80>
   3adfc:	ldr	r3, [fp]
   3ae00:	ldr	r2, [sp, #16]
   3ae04:	mul	r3, r3, r2
   3ae08:	str	r3, [sp, #16]
   3ae0c:	ldr	r3, [sp, #196]	; 0xc4
   3ae10:	ldr	r3, [r3]
   3ae14:	ldr	r2, [r6, #-4]
   3ae18:	mla	lr, r2, r3, lr
   3ae1c:	add	r4, r4, #1
   3ae20:	ldr	r2, [sp, #20]
   3ae24:	ldr	r3, [r2, #4]!
   3ae28:	str	r2, [sp, #20]
   3ae2c:	sub	r3, r3, #1
   3ae30:	str	r3, [r8], #4
   3ae34:	ldr	r2, [sp, #12]
   3ae38:	ldr	r3, [r2], #4
   3ae3c:	str	r2, [sp, #12]
   3ae40:	mov	ip, r3
   3ae44:	add	r6, r6, #4
   3ae48:	mov	r7, r6
   3ae4c:	str	r3, [r6]
   3ae50:	cmp	r4, #0
   3ae54:	beq	3adfc <GetDataSlab+0x19818>
   3ae58:	str	r8, [sp, #24]
   3ae5c:	ldr	r0, [r8, #-4]
   3ae60:	mov	r1, r2
   3ae64:	mov	r2, r1
   3ae68:	ldr	r3, [r1, #-4]!
   3ae6c:	mul	r0, r3, r0
   3ae70:	ldr	r3, [r2]
   3ae74:	mul	ip, r3, ip
   3ae78:	cmp	r5, r1
   3ae7c:	bne	3ae64 <GetDataSlab+0x19880>
   3ae80:	ldr	r3, [sp, #24]
   3ae84:	str	r0, [r3, #-4]
   3ae88:	str	ip, [r7]
   3ae8c:	ldr	r3, [fp, r4, lsl #2]
   3ae90:	ldr	r2, [sp, #16]
   3ae94:	mul	r3, r3, r2
   3ae98:	str	r3, [sp, #16]
   3ae9c:	ldr	r3, [r7, #-4]
   3aea0:	ldr	r2, [sp, #196]	; 0xc4
   3aea4:	ldr	r2, [r2, r4, lsl #2]
   3aea8:	mla	lr, r2, r3, lr
   3aeac:	add	r3, r4, #1
   3aeb0:	cmp	r9, r3
   3aeb4:	bgt	3ae1c <GetDataSlab+0x19838>
   3aeb8:	ldr	r3, [sp, #8]
   3aebc:	add	ip, r3, lr, lsl #2
   3aec0:	ldr	r3, [sp, #28]
   3aec4:	cmp	r3, #1
   3aec8:	beq	255d4 <GetDataSlab+0x3ff0>
   3aecc:	ldr	r3, [sp, #16]
   3aed0:	cmp	r3, #0
   3aed4:	movle	r3, #0
   3aed8:	ble	251fc <GetDataSlab+0x3c18>
   3aedc:	mov	r3, #0
   3aee0:	str	r3, [sp, #20]
   3aee4:	mov	r8, r3
   3aee8:	b	25828 <GetDataSlab+0x4244>
   3aeec:	ldr	r3, [fp]
   3aef0:	ldr	r2, [sp, #16]
   3aef4:	mul	r3, r3, r2
   3aef8:	str	r3, [sp, #16]
   3aefc:	ldr	r3, [sp, #196]	; 0xc4
   3af00:	ldr	r3, [r3]
   3af04:	ldr	r2, [r6, #-4]
   3af08:	mla	lr, r2, r3, lr
   3af0c:	add	r4, r4, #1
   3af10:	ldr	r2, [sp, #20]
   3af14:	ldr	r3, [r2, #4]!
   3af18:	str	r2, [sp, #20]
   3af1c:	sub	r3, r3, #1
   3af20:	str	r3, [r8], #4
   3af24:	ldr	r2, [sp, #12]
   3af28:	ldr	r3, [r2], #4
   3af2c:	str	r2, [sp, #12]
   3af30:	mov	ip, r3
   3af34:	add	r6, r6, #4
   3af38:	mov	r7, r6
   3af3c:	str	r3, [r6]
   3af40:	cmp	r4, #0
   3af44:	beq	3aeec <GetDataSlab+0x19908>
   3af48:	str	r8, [sp, #24]
   3af4c:	ldr	r0, [r8, #-4]
   3af50:	mov	r1, r2
   3af54:	mov	r2, r1
   3af58:	ldr	r3, [r1, #-4]!
   3af5c:	mul	r0, r3, r0
   3af60:	ldr	r3, [r2]
   3af64:	mul	ip, r3, ip
   3af68:	cmp	r5, r1
   3af6c:	bne	3af54 <GetDataSlab+0x19970>
   3af70:	ldr	r3, [sp, #24]
   3af74:	str	r0, [r3, #-4]
   3af78:	str	ip, [r7]
   3af7c:	ldr	r3, [fp, r4, lsl #2]
   3af80:	ldr	r2, [sp, #16]
   3af84:	mul	r3, r3, r2
   3af88:	str	r3, [sp, #16]
   3af8c:	ldr	r3, [r7, #-4]
   3af90:	ldr	r2, [sp, #196]	; 0xc4
   3af94:	ldr	r2, [r2, r4, lsl #2]
   3af98:	mla	lr, r2, r3, lr
   3af9c:	add	r3, r4, #1
   3afa0:	cmp	r9, r3
   3afa4:	bgt	3af0c <GetDataSlab+0x19928>
   3afa8:	ldr	r3, [sp, #8]
   3afac:	add	ip, r3, lr, lsl #2
   3afb0:	ldr	r3, [sp, #28]
   3afb4:	cmp	r3, #1
   3afb8:	beq	2593c <GetDataSlab+0x4358>
   3afbc:	ldr	r3, [sp, #16]
   3afc0:	cmp	r3, #0
   3afc4:	movle	r3, #0
   3afc8:	ble	251fc <GetDataSlab+0x3c18>
   3afcc:	mov	r3, #0
   3afd0:	str	r3, [sp, #20]
   3afd4:	mov	r8, r3
   3afd8:	b	25b90 <GetDataSlab+0x45ac>
   3afdc:	ldr	r3, [fp]
   3afe0:	ldr	r2, [sp, #16]
   3afe4:	mul	r3, r3, r2
   3afe8:	str	r3, [sp, #16]
   3afec:	ldr	r3, [sp, #196]	; 0xc4
   3aff0:	ldr	r3, [r3]
   3aff4:	ldr	r2, [r6, #-4]
   3aff8:	mla	lr, r2, r3, lr
   3affc:	add	r4, r4, #1
   3b000:	ldr	r2, [sp, #20]
   3b004:	ldr	r3, [r2, #4]!
   3b008:	str	r2, [sp, #20]
   3b00c:	sub	r3, r3, #1
   3b010:	str	r3, [r8], #4
   3b014:	ldr	r2, [sp, #12]
   3b018:	ldr	r3, [r2], #4
   3b01c:	str	r2, [sp, #12]
   3b020:	mov	ip, r3
   3b024:	add	r6, r6, #4
   3b028:	mov	r7, r6
   3b02c:	str	r3, [r6]
   3b030:	cmp	r4, #0
   3b034:	beq	3afdc <GetDataSlab+0x199f8>
   3b038:	str	r8, [sp, #24]
   3b03c:	ldr	r0, [r8, #-4]
   3b040:	mov	r1, r2
   3b044:	mov	r2, r1
   3b048:	ldr	r3, [r1, #-4]!
   3b04c:	mul	r0, r3, r0
   3b050:	ldr	r3, [r2]
   3b054:	mul	ip, r3, ip
   3b058:	cmp	r1, r5
   3b05c:	bne	3b044 <GetDataSlab+0x19a60>
   3b060:	ldr	r3, [sp, #24]
   3b064:	str	r0, [r3, #-4]
   3b068:	str	ip, [r7]
   3b06c:	ldr	r3, [fp, r4, lsl #2]
   3b070:	ldr	r2, [sp, #16]
   3b074:	mul	r3, r3, r2
   3b078:	str	r3, [sp, #16]
   3b07c:	ldr	r3, [r7, #-4]
   3b080:	ldr	r2, [sp, #196]	; 0xc4
   3b084:	ldr	r2, [r2, r4, lsl #2]
   3b088:	mla	lr, r2, r3, lr
   3b08c:	add	r3, r4, #1
   3b090:	cmp	r3, r9
   3b094:	blt	3affc <GetDataSlab+0x19a18>
   3b098:	ldr	r3, [sp, #8]
   3b09c:	add	ip, r3, lr, lsl #2
   3b0a0:	ldr	r3, [sp, #28]
   3b0a4:	cmp	r3, #1
   3b0a8:	beq	25270 <GetDataSlab+0x3c8c>
   3b0ac:	ldr	r3, [sp, #16]
   3b0b0:	cmp	r3, #0
   3b0b4:	movle	r3, #0
   3b0b8:	ble	251fc <GetDataSlab+0x3c18>
   3b0bc:	mov	r3, #0
   3b0c0:	str	r3, [sp, #20]
   3b0c4:	mov	r8, r3
   3b0c8:	b	254c0 <GetDataSlab+0x3edc>
   3b0cc:	ldr	r3, [fp]
   3b0d0:	ldr	r2, [sp, #16]
   3b0d4:	mul	r3, r3, r2
   3b0d8:	str	r3, [sp, #16]
   3b0dc:	ldr	r3, [sp, #196]	; 0xc4
   3b0e0:	ldr	r3, [r3]
   3b0e4:	ldr	r2, [r6, #-4]
   3b0e8:	mla	r4, r2, r3, r4
   3b0ec:	add	lr, lr, #1
   3b0f0:	ldr	r2, [sp, #20]
   3b0f4:	ldr	r3, [r2, #4]!
   3b0f8:	str	r2, [sp, #20]
   3b0fc:	sub	r3, r3, #1
   3b100:	str	r3, [r8], #4
   3b104:	ldr	r2, [sp, #12]
   3b108:	ldr	r3, [r2], #4
   3b10c:	str	r2, [sp, #12]
   3b110:	mov	ip, r3
   3b114:	add	r6, r6, #4
   3b118:	mov	r7, r6
   3b11c:	str	r3, [r6]
   3b120:	cmp	lr, #0
   3b124:	beq	3b0cc <GetDataSlab+0x19ae8>
   3b128:	str	r8, [sp, #24]
   3b12c:	ldr	r0, [r8, #-4]
   3b130:	mov	r1, r2
   3b134:	mov	r2, r1
   3b138:	ldr	r3, [r1, #-4]!
   3b13c:	mul	r0, r3, r0
   3b140:	ldr	r3, [r2]
   3b144:	mul	ip, r3, ip
   3b148:	cmp	r5, r1
   3b14c:	bne	3b134 <GetDataSlab+0x19b50>
   3b150:	ldr	r3, [sp, #24]
   3b154:	str	r0, [r3, #-4]
   3b158:	str	ip, [r7]
   3b15c:	ldr	r3, [fp, lr, lsl #2]
   3b160:	ldr	r2, [sp, #16]
   3b164:	mul	r3, r3, r2
   3b168:	str	r3, [sp, #16]
   3b16c:	ldr	r3, [r7, #-4]
   3b170:	ldr	r2, [sp, #196]	; 0xc4
   3b174:	ldr	r2, [r2, lr, lsl #2]
   3b178:	mla	r4, r2, r3, r4
   3b17c:	add	r3, lr, #1
   3b180:	cmp	r3, r9
   3b184:	blt	3b0ec <GetDataSlab+0x19b08>
   3b188:	ldr	r3, [sp, #8]
   3b18c:	add	lr, r3, r4, lsl #3
   3b190:	ldr	r3, [sp, #28]
   3b194:	cmp	r3, #1
   3b198:	beq	24ef8 <GetDataSlab+0x3914>
   3b19c:	ldr	r3, [sp, #16]
   3b1a0:	cmp	r3, #0
   3b1a4:	movle	r3, #0
   3b1a8:	ble	251fc <GetDataSlab+0x3c18>
   3b1ac:	mov	r3, #0
   3b1b0:	str	r3, [sp, #20]
   3b1b4:	mov	r8, r3
   3b1b8:	b	25144 <GetDataSlab+0x3b60>
   3b1bc:	ldr	r3, [fp]
   3b1c0:	ldr	r2, [sp, #12]
   3b1c4:	mul	r3, r3, r2
   3b1c8:	str	r3, [sp, #12]
   3b1cc:	ldr	r3, [sp, #196]	; 0xc4
   3b1d0:	ldr	r3, [r3]
   3b1d4:	ldr	r2, [r5, #-4]
   3b1d8:	mla	r7, r2, r3, r7
   3b1dc:	add	lr, lr, #1
   3b1e0:	ldr	r2, [sp, #20]
   3b1e4:	ldr	r3, [r2, #4]!
   3b1e8:	str	r2, [sp, #20]
   3b1ec:	sub	r3, r3, #1
   3b1f0:	str	r3, [r8], #4
   3b1f4:	ldr	r2, [sp, #16]
   3b1f8:	ldr	r3, [r2], #4
   3b1fc:	str	r2, [sp, #16]
   3b200:	mov	ip, r3
   3b204:	add	r5, r5, #4
   3b208:	mov	r6, r5
   3b20c:	str	r3, [r5]
   3b210:	cmp	lr, #0
   3b214:	beq	3b1bc <GetDataSlab+0x19bd8>
   3b218:	str	r8, [sp, #24]
   3b21c:	ldr	r0, [r8, #-4]
   3b220:	mov	r1, r2
   3b224:	mov	r2, r1
   3b228:	ldr	r3, [r1, #-4]!
   3b22c:	mul	r0, r3, r0
   3b230:	ldr	r3, [r2]
   3b234:	mul	ip, r3, ip
   3b238:	cmp	r4, r1
   3b23c:	bne	3b224 <GetDataSlab+0x19c40>
   3b240:	ldr	r3, [sp, #24]
   3b244:	str	r0, [r3, #-4]
   3b248:	str	ip, [r6]
   3b24c:	ldr	r3, [fp, lr, lsl #2]
   3b250:	ldr	r2, [sp, #12]
   3b254:	mul	r3, r3, r2
   3b258:	str	r3, [sp, #12]
   3b25c:	ldr	r3, [r6, #-4]
   3b260:	ldr	r2, [sp, #196]	; 0xc4
   3b264:	ldr	r2, [r2, lr, lsl #2]
   3b268:	mla	r7, r2, r3, r7
   3b26c:	add	r3, lr, #1
   3b270:	cmp	r9, r3
   3b274:	bgt	3b1dc <GetDataSlab+0x19bf8>
   3b278:	ldr	r3, [sp, #8]
   3b27c:	add	r8, r3, r7, lsl #3
   3b280:	ldr	r3, [sp, #28]
   3b284:	cmp	r3, #1
   3b288:	beq	28fd4 <GetDataSlab+0x79f0>
   3b28c:	ldr	r3, [sp, #12]
   3b290:	cmp	r3, #0
   3b294:	movle	r3, #0
   3b298:	ble	251fc <GetDataSlab+0x3c18>
   3b29c:	mov	r3, #0
   3b2a0:	str	r3, [sp, #8]
   3b2a4:	b	29214 <GetDataSlab+0x7c30>
   3b2a8:	ldr	r3, [fp]
   3b2ac:	ldr	r2, [sp, #12]
   3b2b0:	mul	r3, r3, r2
   3b2b4:	str	r3, [sp, #12]
   3b2b8:	ldr	r3, [sp, #196]	; 0xc4
   3b2bc:	ldr	r3, [r3]
   3b2c0:	ldr	r2, [r5, #-4]
   3b2c4:	mla	r7, r2, r3, r7
   3b2c8:	add	lr, lr, #1
   3b2cc:	ldr	r2, [sp, #20]
   3b2d0:	ldr	r3, [r2, #4]!
   3b2d4:	str	r2, [sp, #20]
   3b2d8:	sub	r3, r3, #1
   3b2dc:	str	r3, [r8], #4
   3b2e0:	ldr	r2, [sp, #16]
   3b2e4:	ldr	r3, [r2], #4
   3b2e8:	str	r2, [sp, #16]
   3b2ec:	mov	ip, r3
   3b2f0:	add	r5, r5, #4
   3b2f4:	mov	r6, r5
   3b2f8:	str	r3, [r5]
   3b2fc:	cmp	lr, #0
   3b300:	beq	3b2a8 <GetDataSlab+0x19cc4>
   3b304:	str	r8, [sp, #24]
   3b308:	ldr	r0, [r8, #-4]
   3b30c:	mov	r1, r2
   3b310:	mov	r2, r1
   3b314:	ldr	r3, [r1, #-4]!
   3b318:	mul	r0, r3, r0
   3b31c:	ldr	r3, [r2]
   3b320:	mul	ip, r3, ip
   3b324:	cmp	r1, r4
   3b328:	bne	3b310 <GetDataSlab+0x19d2c>
   3b32c:	ldr	r3, [sp, #24]
   3b330:	str	r0, [r3, #-4]
   3b334:	str	ip, [r6]
   3b338:	ldr	r3, [fp, lr, lsl #2]
   3b33c:	ldr	r2, [sp, #12]
   3b340:	mul	r3, r3, r2
   3b344:	str	r3, [sp, #12]
   3b348:	ldr	r3, [r6, #-4]
   3b34c:	ldr	r2, [sp, #196]	; 0xc4
   3b350:	ldr	r2, [r2, lr, lsl #2]
   3b354:	mla	r7, r2, r3, r7
   3b358:	add	r3, lr, #1
   3b35c:	cmp	r9, r3
   3b360:	bgt	3b2c8 <GetDataSlab+0x19ce4>
   3b364:	ldr	r3, [sp, #8]
   3b368:	add	r8, r3, r7, lsl #3
   3b36c:	ldr	r3, [sp, #28]
   3b370:	cmp	r3, #1
   3b374:	beq	28cdc <GetDataSlab+0x76f8>
   3b378:	ldr	r3, [sp, #12]
   3b37c:	cmp	r3, #0
   3b380:	movgt	r3, #0
   3b384:	strgt	r3, [sp, #8]
   3b388:	bgt	28f14 <GetDataSlab+0x7930>
   3b38c:	mov	r3, #0
   3b390:	b	251fc <GetDataSlab+0x3c18>
   3b394:	ldr	r3, [fp]
   3b398:	ldr	r2, [sp, #16]
   3b39c:	mul	r3, r3, r2
   3b3a0:	str	r3, [sp, #16]
   3b3a4:	ldr	r3, [sp, #196]	; 0xc4
   3b3a8:	ldr	r3, [r3]
   3b3ac:	ldr	r2, [r5, #-4]
   3b3b0:	mla	lr, r2, r3, lr
   3b3b4:	add	r8, r8, #1
   3b3b8:	ldr	r2, [sp, #20]
   3b3bc:	ldr	r3, [r2, #4]!
   3b3c0:	str	r2, [sp, #20]
   3b3c4:	sub	r3, r3, #1
   3b3c8:	str	r3, [r7], #4
   3b3cc:	ldr	r2, [sp, #12]
   3b3d0:	ldr	r3, [r2], #4
   3b3d4:	str	r2, [sp, #12]
   3b3d8:	mov	ip, r3
   3b3dc:	add	r5, r5, #4
   3b3e0:	mov	r6, r5
   3b3e4:	str	r3, [r5]
   3b3e8:	cmp	r8, #0
   3b3ec:	beq	3b394 <GetDataSlab+0x19db0>
   3b3f0:	str	r7, [sp, #24]
   3b3f4:	ldr	r0, [r7, #-4]
   3b3f8:	mov	r1, r2
   3b3fc:	mov	r2, r1
   3b400:	ldr	r3, [r1, #-4]!
   3b404:	mul	r0, r3, r0
   3b408:	ldr	r3, [r2]
   3b40c:	mul	ip, r3, ip
   3b410:	cmp	r4, r1
   3b414:	bne	3b3fc <GetDataSlab+0x19e18>
   3b418:	ldr	r3, [sp, #24]
   3b41c:	str	r0, [r3, #-4]
   3b420:	str	ip, [r6]
   3b424:	ldr	r3, [fp, r8, lsl #2]
   3b428:	ldr	r2, [sp, #16]
   3b42c:	mul	r3, r3, r2
   3b430:	str	r3, [sp, #16]
   3b434:	ldr	r3, [r6, #-4]
   3b438:	ldr	r2, [sp, #196]	; 0xc4
   3b43c:	ldr	r2, [r2, r8, lsl #2]
   3b440:	mla	lr, r2, r3, lr
   3b444:	add	r3, r8, #1
   3b448:	cmp	r9, r3
   3b44c:	bgt	3b3b4 <GetDataSlab+0x19dd0>
   3b450:	ldr	r3, [sp, #8]
   3b454:	add	ip, r3, lr
   3b458:	ldr	r3, [sp, #28]
   3b45c:	cmp	r3, #1
   3b460:	beq	2859c <GetDataSlab+0x6fb8>
   3b464:	ldr	r3, [sp, #16]
   3b468:	cmp	r3, #0
   3b46c:	movle	r3, #0
   3b470:	ble	251fc <GetDataSlab+0x3c18>
   3b474:	mov	r3, #0
   3b478:	str	r3, [sp, #20]
   3b47c:	mov	r8, r3
   3b480:	b	287f4 <GetDataSlab+0x7210>
   3b484:	ldr	r3, [fp]
   3b488:	ldr	r2, [sp, #16]
   3b48c:	mul	r3, r3, r2
   3b490:	str	r3, [sp, #16]
   3b494:	ldr	r3, [sp, #196]	; 0xc4
   3b498:	ldr	r3, [r3]
   3b49c:	ldr	r2, [r6, #-4]
   3b4a0:	mla	lr, r2, r3, lr
   3b4a4:	add	r4, r4, #1
   3b4a8:	ldr	r2, [sp, #20]
   3b4ac:	ldr	r3, [r2, #4]!
   3b4b0:	str	r2, [sp, #20]
   3b4b4:	sub	r3, r3, #1
   3b4b8:	str	r3, [r8], #4
   3b4bc:	ldr	r2, [sp, #12]
   3b4c0:	ldr	r3, [r2], #4
   3b4c4:	str	r2, [sp, #12]
   3b4c8:	mov	ip, r3
   3b4cc:	add	r6, r6, #4
   3b4d0:	mov	r7, r6
   3b4d4:	str	r3, [r6]
   3b4d8:	cmp	r4, #0
   3b4dc:	beq	3b484 <GetDataSlab+0x19ea0>
   3b4e0:	str	r8, [sp, #24]
   3b4e4:	ldr	r0, [r8, #-4]
   3b4e8:	mov	r1, r2
   3b4ec:	mov	r2, r1
   3b4f0:	ldr	r3, [r1, #-4]!
   3b4f4:	mul	r0, r3, r0
   3b4f8:	ldr	r3, [r2]
   3b4fc:	mul	ip, r3, ip
   3b500:	cmp	r5, r1
   3b504:	bne	3b4ec <GetDataSlab+0x19f08>
   3b508:	ldr	r3, [sp, #24]
   3b50c:	str	r0, [r3, #-4]
   3b510:	str	ip, [r7]
   3b514:	ldr	r3, [fp, r4, lsl #2]
   3b518:	ldr	r2, [sp, #16]
   3b51c:	mul	r3, r3, r2
   3b520:	str	r3, [sp, #16]
   3b524:	ldr	r3, [r7, #-4]
   3b528:	ldr	r2, [sp, #196]	; 0xc4
   3b52c:	ldr	r2, [r2, r4, lsl #2]
   3b530:	mla	lr, r2, r3, lr
   3b534:	add	r3, r4, #1
   3b538:	cmp	r3, r9
   3b53c:	blt	3b4a4 <GetDataSlab+0x19ec0>
   3b540:	ldr	r3, [sp, #8]
   3b544:	add	ip, r3, lr
   3b548:	ldr	r3, [sp, #28]
   3b54c:	cmp	r3, #1
   3b550:	beq	2890c <GetDataSlab+0x7328>
   3b554:	ldr	r3, [sp, #16]
   3b558:	cmp	r3, #0
   3b55c:	movle	r3, #0
   3b560:	ble	251fc <GetDataSlab+0x3c18>
   3b564:	mov	r3, #0
   3b568:	str	r3, [sp, #20]
   3b56c:	mov	r8, r3
   3b570:	b	28b64 <GetDataSlab+0x7580>
   3b574:	ldr	r3, [fp]
   3b578:	ldr	r2, [sp, #16]
   3b57c:	mul	r3, r3, r2
   3b580:	str	r3, [sp, #16]
   3b584:	ldr	r3, [sp, #196]	; 0xc4
   3b588:	ldr	r3, [r3]
   3b58c:	ldr	r2, [r6, #-4]
   3b590:	mla	lr, r2, r3, lr
   3b594:	add	r4, r4, #1
   3b598:	ldr	r2, [sp, #20]
   3b59c:	ldr	r3, [r2, #4]!
   3b5a0:	str	r2, [sp, #20]
   3b5a4:	sub	r3, r3, #1
   3b5a8:	str	r3, [r8], #4
   3b5ac:	ldr	r2, [sp, #12]
   3b5b0:	ldr	r3, [r2], #4
   3b5b4:	str	r2, [sp, #12]
   3b5b8:	mov	ip, r3
   3b5bc:	add	r6, r6, #4
   3b5c0:	mov	r7, r6
   3b5c4:	str	r3, [r6]
   3b5c8:	cmp	r4, #0
   3b5cc:	beq	3b574 <GetDataSlab+0x19f90>
   3b5d0:	str	r8, [sp, #24]
   3b5d4:	ldr	r0, [r8, #-4]
   3b5d8:	mov	r1, r2
   3b5dc:	mov	r2, r1
   3b5e0:	ldr	r3, [r1, #-4]!
   3b5e4:	mul	r0, r3, r0
   3b5e8:	ldr	r3, [r2]
   3b5ec:	mul	ip, r3, ip
   3b5f0:	cmp	r5, r1
   3b5f4:	bne	3b5dc <GetDataSlab+0x19ff8>
   3b5f8:	ldr	r3, [sp, #24]
   3b5fc:	str	r0, [r3, #-4]
   3b600:	str	ip, [r7]
   3b604:	ldr	r3, [fp, r4, lsl #2]
   3b608:	ldr	r2, [sp, #16]
   3b60c:	mul	r3, r3, r2
   3b610:	str	r3, [sp, #16]
   3b614:	ldr	r3, [r7, #-4]
   3b618:	ldr	r2, [sp, #196]	; 0xc4
   3b61c:	ldr	r2, [r2, r4, lsl #2]
   3b620:	mla	lr, r2, r3, lr
   3b624:	add	r3, r4, #1
   3b628:	cmp	r9, r3
   3b62c:	bgt	3b594 <GetDataSlab+0x19fb0>
   3b630:	ldr	r3, [sp, #8]
   3b634:	add	ip, r3, lr, lsl #1
   3b638:	ldr	r3, [sp, #28]
   3b63c:	cmp	r3, #1
   3b640:	beq	27ec8 <GetDataSlab+0x68e4>
   3b644:	ldr	r3, [sp, #16]
   3b648:	cmp	r3, #0
   3b64c:	movle	r3, #0
   3b650:	ble	251fc <GetDataSlab+0x3c18>
   3b654:	mov	r3, #0
   3b658:	str	r3, [sp, #20]
   3b65c:	mov	r8, r3
   3b660:	b	2811c <GetDataSlab+0x6b38>
   3b664:	ldr	r3, [fp]
   3b668:	ldr	r2, [sp, #16]
   3b66c:	mul	r3, r3, r2
   3b670:	str	r3, [sp, #16]
   3b674:	ldr	r3, [sp, #196]	; 0xc4
   3b678:	ldr	r3, [r3]
   3b67c:	ldr	r2, [r6, #-4]
   3b680:	mla	lr, r2, r3, lr
   3b684:	add	r4, r4, #1
   3b688:	ldr	r2, [sp, #20]
   3b68c:	ldr	r3, [r2, #4]!
   3b690:	str	r2, [sp, #20]
   3b694:	sub	r3, r3, #1
   3b698:	str	r3, [r8], #4
   3b69c:	ldr	r2, [sp, #12]
   3b6a0:	ldr	r3, [r2], #4
   3b6a4:	str	r2, [sp, #12]
   3b6a8:	mov	ip, r3
   3b6ac:	add	r6, r6, #4
   3b6b0:	mov	r7, r6
   3b6b4:	str	r3, [r6]
   3b6b8:	cmp	r4, #0
   3b6bc:	beq	3b664 <GetDataSlab+0x1a080>
   3b6c0:	str	r8, [sp, #24]
   3b6c4:	ldr	r0, [r8, #-4]
   3b6c8:	mov	r1, r2
   3b6cc:	mov	r2, r1
   3b6d0:	ldr	r3, [r1, #-4]!
   3b6d4:	mul	r0, r3, r0
   3b6d8:	ldr	r3, [r2]
   3b6dc:	mul	ip, r3, ip
   3b6e0:	cmp	r5, r1
   3b6e4:	bne	3b6cc <GetDataSlab+0x1a0e8>
   3b6e8:	ldr	r3, [sp, #24]
   3b6ec:	str	r0, [r3, #-4]
   3b6f0:	str	ip, [r7]
   3b6f4:	ldr	r3, [fp, r4, lsl #2]
   3b6f8:	ldr	r2, [sp, #16]
   3b6fc:	mul	r3, r3, r2
   3b700:	str	r3, [sp, #16]
   3b704:	ldr	r3, [r7, #-4]
   3b708:	ldr	r2, [sp, #196]	; 0xc4
   3b70c:	ldr	r2, [r2, r4, lsl #2]
   3b710:	mla	lr, r2, r3, lr
   3b714:	add	r3, r4, #1
   3b718:	cmp	r3, r9
   3b71c:	blt	3b684 <GetDataSlab+0x1a0a0>
   3b720:	ldr	r3, [sp, #8]
   3b724:	add	ip, r3, lr, lsl #1
   3b728:	ldr	r3, [sp, #28]
   3b72c:	cmp	r3, #1
   3b730:	beq	28234 <GetDataSlab+0x6c50>
   3b734:	ldr	r3, [sp, #16]
   3b738:	cmp	r3, #0
   3b73c:	movle	r3, #0
   3b740:	ble	251fc <GetDataSlab+0x3c18>
   3b744:	mov	r3, #0
   3b748:	str	r3, [sp, #20]
   3b74c:	mov	r8, r3
   3b750:	b	28488 <GetDataSlab+0x6ea4>
   3b754:	ldr	r3, [fp]
   3b758:	ldr	r2, [sp, #16]
   3b75c:	mul	r3, r3, r2
   3b760:	str	r3, [sp, #16]
   3b764:	ldr	r3, [sp, #196]	; 0xc4
   3b768:	ldr	r3, [r3]
   3b76c:	ldr	r2, [r6, #-4]
   3b770:	mla	lr, r2, r3, lr
   3b774:	add	r4, r4, #1
   3b778:	ldr	r2, [sp, #20]
   3b77c:	ldr	r3, [r2, #4]!
   3b780:	str	r2, [sp, #20]
   3b784:	sub	r3, r3, #1
   3b788:	str	r3, [r8], #4
   3b78c:	ldr	r2, [sp, #12]
   3b790:	ldr	r3, [r2], #4
   3b794:	str	r2, [sp, #12]
   3b798:	mov	ip, r3
   3b79c:	add	r6, r6, #4
   3b7a0:	mov	r7, r6
   3b7a4:	str	r3, [r6]
   3b7a8:	cmp	r4, #0
   3b7ac:	beq	3b754 <GetDataSlab+0x1a170>
   3b7b0:	str	r8, [sp, #24]
   3b7b4:	ldr	r0, [r8, #-4]
   3b7b8:	mov	r1, r2
   3b7bc:	mov	r2, r1
   3b7c0:	ldr	r3, [r1, #-4]!
   3b7c4:	mul	r0, r3, r0
   3b7c8:	ldr	r3, [r2]
   3b7cc:	mul	ip, r3, ip
   3b7d0:	cmp	r5, r1
   3b7d4:	bne	3b7bc <GetDataSlab+0x1a1d8>
   3b7d8:	ldr	r3, [sp, #24]
   3b7dc:	str	r0, [r3, #-4]
   3b7e0:	str	ip, [r7]
   3b7e4:	ldr	r3, [fp, r4, lsl #2]
   3b7e8:	ldr	r2, [sp, #16]
   3b7ec:	mul	r3, r3, r2
   3b7f0:	str	r3, [sp, #16]
   3b7f4:	ldr	r3, [r7, #-4]
   3b7f8:	ldr	r2, [sp, #196]	; 0xc4
   3b7fc:	ldr	r2, [r2, r4, lsl #2]
   3b800:	mla	lr, r2, r3, lr
   3b804:	add	r3, r4, #1
   3b808:	cmp	r3, r9
   3b80c:	blt	3b774 <GetDataSlab+0x1a190>
   3b810:	ldr	r3, [sp, #8]
   3b814:	add	ip, r3, lr, lsl #2
   3b818:	ldr	r3, [sp, #28]
   3b81c:	cmp	r3, #1
   3b820:	beq	277f8 <GetDataSlab+0x6214>
   3b824:	ldr	r3, [sp, #16]
   3b828:	cmp	r3, #0
   3b82c:	movle	r3, #0
   3b830:	ble	251fc <GetDataSlab+0x3c18>
   3b834:	mov	r3, #0
   3b838:	str	r3, [sp, #20]
   3b83c:	mov	r8, r3
   3b840:	b	27a4c <GetDataSlab+0x6468>
   3b844:	ldr	r3, [fp]
   3b848:	ldr	r2, [sp, #16]
   3b84c:	mul	r3, r3, r2
   3b850:	str	r3, [sp, #16]
   3b854:	ldr	r3, [sp, #196]	; 0xc4
   3b858:	ldr	r3, [r3]
   3b85c:	ldr	r2, [r6, #-4]
   3b860:	mla	lr, r2, r3, lr
   3b864:	add	r4, r4, #1
   3b868:	ldr	r2, [sp, #20]
   3b86c:	ldr	r3, [r2, #4]!
   3b870:	str	r2, [sp, #20]
   3b874:	sub	r3, r3, #1
   3b878:	str	r3, [r8], #4
   3b87c:	ldr	r2, [sp, #12]
   3b880:	ldr	r3, [r2], #4
   3b884:	str	r2, [sp, #12]
   3b888:	mov	ip, r3
   3b88c:	add	r6, r6, #4
   3b890:	mov	r7, r6
   3b894:	str	r3, [r6]
   3b898:	cmp	r4, #0
   3b89c:	beq	3b844 <GetDataSlab+0x1a260>
   3b8a0:	str	r8, [sp, #24]
   3b8a4:	ldr	r0, [r8, #-4]
   3b8a8:	mov	r1, r2
   3b8ac:	mov	r2, r1
   3b8b0:	ldr	r3, [r1, #-4]!
   3b8b4:	mul	r0, r3, r0
   3b8b8:	ldr	r3, [r2]
   3b8bc:	mul	ip, r3, ip
   3b8c0:	cmp	r5, r1
   3b8c4:	bne	3b8ac <GetDataSlab+0x1a2c8>
   3b8c8:	ldr	r3, [sp, #24]
   3b8cc:	str	r0, [r3, #-4]
   3b8d0:	str	ip, [r7]
   3b8d4:	ldr	r3, [fp, r4, lsl #2]
   3b8d8:	ldr	r2, [sp, #16]
   3b8dc:	mul	r3, r3, r2
   3b8e0:	str	r3, [sp, #16]
   3b8e4:	ldr	r3, [r7, #-4]
   3b8e8:	ldr	r2, [sp, #196]	; 0xc4
   3b8ec:	ldr	r2, [r2, r4, lsl #2]
   3b8f0:	mla	lr, r2, r3, lr
   3b8f4:	add	r3, r4, #1
   3b8f8:	cmp	r9, r3
   3b8fc:	bgt	3b864 <GetDataSlab+0x1a280>
   3b900:	ldr	r3, [sp, #8]
   3b904:	add	ip, r3, lr, lsl #2
   3b908:	ldr	r3, [sp, #28]
   3b90c:	cmp	r3, #1
   3b910:	beq	27b60 <GetDataSlab+0x657c>
   3b914:	ldr	r3, [sp, #16]
   3b918:	cmp	r3, #0
   3b91c:	movle	r3, #0
   3b920:	ble	251fc <GetDataSlab+0x3c18>
   3b924:	mov	r3, #0
   3b928:	str	r3, [sp, #20]
   3b92c:	mov	r8, r3
   3b930:	b	27db4 <GetDataSlab+0x67d0>
   3b934:	ldr	r3, [fp]
   3b938:	ldr	r2, [sp, #16]
   3b93c:	mul	r3, r3, r2
   3b940:	str	r3, [sp, #16]
   3b944:	ldr	r3, [sp, #196]	; 0xc4
   3b948:	ldr	r3, [r3]
   3b94c:	ldr	r2, [r6, #-4]
   3b950:	mla	lr, r2, r3, lr
   3b954:	add	r4, r4, #1
   3b958:	ldr	r2, [sp, #20]
   3b95c:	ldr	r3, [r2, #4]!
   3b960:	str	r2, [sp, #20]
   3b964:	sub	r3, r3, #1
   3b968:	str	r3, [r8], #4
   3b96c:	ldr	r2, [sp, #12]
   3b970:	ldr	r3, [r2], #4
   3b974:	str	r2, [sp, #12]
   3b978:	mov	ip, r3
   3b97c:	add	r6, r6, #4
   3b980:	mov	r7, r6
   3b984:	str	r3, [r6]
   3b988:	cmp	r4, #0
   3b98c:	beq	3b934 <GetDataSlab+0x1a350>
   3b990:	str	r8, [sp, #24]
   3b994:	ldr	r0, [r8, #-4]
   3b998:	mov	r1, r2
   3b99c:	mov	r2, r1
   3b9a0:	ldr	r3, [r1, #-4]!
   3b9a4:	mul	r0, r3, r0
   3b9a8:	ldr	r3, [r2]
   3b9ac:	mul	ip, r3, ip
   3b9b0:	cmp	r1, r5
   3b9b4:	bne	3b99c <GetDataSlab+0x1a3b8>
   3b9b8:	ldr	r3, [sp, #24]
   3b9bc:	str	r0, [r3, #-4]
   3b9c0:	str	ip, [r7]
   3b9c4:	ldr	r3, [fp, r4, lsl #2]
   3b9c8:	ldr	r2, [sp, #16]
   3b9cc:	mul	r3, r3, r2
   3b9d0:	str	r3, [sp, #16]
   3b9d4:	ldr	r3, [r7, #-4]
   3b9d8:	ldr	r2, [sp, #196]	; 0xc4
   3b9dc:	ldr	r2, [r2, r4, lsl #2]
   3b9e0:	mla	lr, r2, r3, lr
   3b9e4:	add	r3, r4, #1
   3b9e8:	cmp	r3, r9
   3b9ec:	blt	3b954 <GetDataSlab+0x1a370>
   3b9f0:	ldr	r3, [sp, #8]
   3b9f4:	add	ip, r3, lr, lsl #2
   3b9f8:	ldr	r3, [sp, #28]
   3b9fc:	cmp	r3, #1
   3ba00:	beq	2749c <GetDataSlab+0x5eb8>
   3ba04:	ldr	r3, [sp, #16]
   3ba08:	cmp	r3, #0
   3ba0c:	movle	r3, #0
   3ba10:	ble	251fc <GetDataSlab+0x3c18>
   3ba14:	mov	r3, #0
   3ba18:	str	r3, [sp, #20]
   3ba1c:	mov	r8, r3
   3ba20:	b	276e8 <GetDataSlab+0x6104>
   3ba24:	ldr	r3, [fp]
   3ba28:	ldr	r2, [sp, #16]
   3ba2c:	mul	r3, r3, r2
   3ba30:	str	r3, [sp, #16]
   3ba34:	ldr	r3, [sp, #196]	; 0xc4
   3ba38:	ldr	r3, [r3]
   3ba3c:	ldr	r2, [r6, #-4]
   3ba40:	mla	lr, r2, r3, lr
   3ba44:	add	r4, r4, #1
   3ba48:	ldr	r2, [sp, #20]
   3ba4c:	ldr	r3, [r2, #4]!
   3ba50:	str	r2, [sp, #20]
   3ba54:	sub	r3, r3, #1
   3ba58:	str	r3, [r8], #4
   3ba5c:	ldr	r2, [sp, #12]
   3ba60:	ldr	r3, [r2], #4
   3ba64:	str	r2, [sp, #12]
   3ba68:	mov	ip, r3
   3ba6c:	add	r6, r6, #4
   3ba70:	mov	r7, r6
   3ba74:	str	r3, [r6]
   3ba78:	cmp	r4, #0
   3ba7c:	beq	3ba24 <GetDataSlab+0x1a440>
   3ba80:	str	r8, [sp, #24]
   3ba84:	ldr	r0, [r8, #-4]
   3ba88:	mov	r1, r2
   3ba8c:	mov	r2, r1
   3ba90:	ldr	r3, [r1, #-4]!
   3ba94:	mul	r0, r3, r0
   3ba98:	ldr	r3, [r2]
   3ba9c:	mul	ip, r3, ip
   3baa0:	cmp	r5, r1
   3baa4:	bne	3ba8c <GetDataSlab+0x1a4a8>
   3baa8:	ldr	r3, [sp, #24]
   3baac:	str	r0, [r3, #-4]
   3bab0:	str	ip, [r7]
   3bab4:	ldr	r3, [fp, r4, lsl #2]
   3bab8:	ldr	r2, [sp, #16]
   3babc:	mul	r3, r3, r2
   3bac0:	str	r3, [sp, #16]
   3bac4:	ldr	r3, [r7, #-4]
   3bac8:	ldr	r2, [sp, #196]	; 0xc4
   3bacc:	ldr	r2, [r2, r4, lsl #2]
   3bad0:	mla	lr, r2, r3, lr
   3bad4:	add	r3, r4, #1
   3bad8:	cmp	r3, r9
   3badc:	blt	3ba44 <GetDataSlab+0x1a460>
   3bae0:	ldr	r3, [sp, #8]
   3bae4:	add	ip, r3, lr, lsl #3
   3bae8:	ldr	r3, [sp, #28]
   3baec:	cmp	r3, #1
   3baf0:	beq	27138 <GetDataSlab+0x5b54>
   3baf4:	ldr	r3, [sp, #16]
   3baf8:	cmp	r3, #0
   3bafc:	movle	r3, #0
   3bb00:	ble	251fc <GetDataSlab+0x3c18>
   3bb04:	mov	r3, #0
   3bb08:	str	r3, [sp, #20]
   3bb0c:	mov	r8, r3
   3bb10:	b	27388 <GetDataSlab+0x5da4>
   3bb14:	ldr	r3, [fp]
   3bb18:	ldr	r2, [sp, #16]
   3bb1c:	mul	r3, r3, r2
   3bb20:	str	r3, [sp, #16]
   3bb24:	ldr	r3, [sp, #196]	; 0xc4
   3bb28:	ldr	r3, [r3]
   3bb2c:	ldr	r2, [r6, #-4]
   3bb30:	mla	lr, r2, r3, lr
   3bb34:	add	r4, r4, #1
   3bb38:	ldr	r2, [sp, #20]
   3bb3c:	ldr	r3, [r2, #4]!
   3bb40:	str	r2, [sp, #20]
   3bb44:	sub	r3, r3, #1
   3bb48:	str	r3, [r8], #4
   3bb4c:	ldr	r2, [sp, #12]
   3bb50:	ldr	r3, [r2], #4
   3bb54:	str	r2, [sp, #12]
   3bb58:	mov	ip, r3
   3bb5c:	add	r6, r6, #4
   3bb60:	mov	r7, r6
   3bb64:	str	r3, [r6]
   3bb68:	cmp	r4, #0
   3bb6c:	beq	3bb14 <GetDataSlab+0x1a530>
   3bb70:	str	r8, [sp, #24]
   3bb74:	ldr	r0, [r8, #-4]
   3bb78:	mov	r1, r2
   3bb7c:	mov	r2, r1
   3bb80:	ldr	r3, [r1, #-4]!
   3bb84:	mul	r0, r3, r0
   3bb88:	ldr	r3, [r2]
   3bb8c:	mul	ip, r3, ip
   3bb90:	cmp	r1, r5
   3bb94:	bne	3bb7c <GetDataSlab+0x1a598>
   3bb98:	ldr	r3, [sp, #24]
   3bb9c:	str	r0, [r3, #-4]
   3bba0:	str	ip, [r7]
   3bba4:	ldr	r3, [fp, r4, lsl #2]
   3bba8:	ldr	r2, [sp, #16]
   3bbac:	mul	r3, r3, r2
   3bbb0:	str	r3, [sp, #16]
   3bbb4:	ldr	r3, [r7, #-4]
   3bbb8:	ldr	r2, [sp, #196]	; 0xc4
   3bbbc:	ldr	r2, [r2, r4, lsl #2]
   3bbc0:	mla	lr, r2, r3, lr
   3bbc4:	add	r3, r4, #1
   3bbc8:	cmp	r3, r9
   3bbcc:	blt	3bb34 <GetDataSlab+0x1a550>
   3bbd0:	ldr	r3, [sp, #8]
   3bbd4:	add	ip, r3, lr, lsl #3
   3bbd8:	ldr	r3, [sp, #28]
   3bbdc:	cmp	r3, #1
   3bbe0:	beq	37da4 <GetDataSlab+0x167c0>
   3bbe4:	ldr	r3, [sp, #16]
   3bbe8:	cmp	r3, #0
   3bbec:	movle	r3, #0
   3bbf0:	ble	251fc <GetDataSlab+0x3c18>
   3bbf4:	mov	r3, #0
   3bbf8:	str	r3, [sp, #20]
   3bbfc:	mov	r8, r3
   3bc00:	b	37ff4 <GetDataSlab+0x16a10>
   3bc04:	ldr	r3, [fp]
   3bc08:	ldr	r2, [sp, #16]
   3bc0c:	mul	r3, r3, r2
   3bc10:	str	r3, [sp, #16]
   3bc14:	ldr	r3, [sp, #196]	; 0xc4
   3bc18:	ldr	r3, [r3]
   3bc1c:	ldr	r2, [r6, #-4]
   3bc20:	mla	lr, r2, r3, lr
   3bc24:	add	r4, r4, #1
   3bc28:	ldr	r2, [sp, #20]
   3bc2c:	ldr	r3, [r2, #4]!
   3bc30:	str	r2, [sp, #20]
   3bc34:	sub	r3, r3, #1
   3bc38:	str	r3, [r8], #4
   3bc3c:	ldr	r2, [sp, #12]
   3bc40:	ldr	r3, [r2], #4
   3bc44:	str	r2, [sp, #12]
   3bc48:	mov	ip, r3
   3bc4c:	add	r6, r6, #4
   3bc50:	mov	r7, r6
   3bc54:	str	r3, [r6]
   3bc58:	cmp	r4, #0
   3bc5c:	beq	3bc04 <GetDataSlab+0x1a620>
   3bc60:	str	r8, [sp, #24]
   3bc64:	ldr	r0, [r8, #-4]
   3bc68:	mov	r1, r2
   3bc6c:	mov	r2, r1
   3bc70:	ldr	r3, [r1, #-4]!
   3bc74:	mul	r0, r3, r0
   3bc78:	ldr	r3, [r2]
   3bc7c:	mul	ip, r3, ip
   3bc80:	cmp	r5, r1
   3bc84:	bne	3bc6c <GetDataSlab+0x1a688>
   3bc88:	ldr	r3, [sp, #24]
   3bc8c:	str	r0, [r3, #-4]
   3bc90:	str	ip, [r7]
   3bc94:	ldr	r3, [fp, r4, lsl #2]
   3bc98:	ldr	r2, [sp, #16]
   3bc9c:	mul	r3, r3, r2
   3bca0:	str	r3, [sp, #16]
   3bca4:	ldr	r3, [r7, #-4]
   3bca8:	ldr	r2, [sp, #196]	; 0xc4
   3bcac:	ldr	r2, [r2, r4, lsl #2]
   3bcb0:	mla	lr, r2, r3, lr
   3bcb4:	add	r3, r4, #1
   3bcb8:	cmp	r9, r3
   3bcbc:	bgt	3bc24 <GetDataSlab+0x1a640>
   3bcc0:	ldr	r3, [sp, #8]
   3bcc4:	add	ip, r3, lr, lsl #3
   3bcc8:	ldr	r3, [sp, #28]
   3bccc:	cmp	r3, #1
   3bcd0:	beq	37aa0 <GetDataSlab+0x164bc>
   3bcd4:	ldr	r3, [sp, #16]
   3bcd8:	cmp	r3, #0
   3bcdc:	movgt	r3, #0
   3bce0:	strgt	r3, [sp, #20]
   3bce4:	movgt	r8, r3
   3bce8:	bgt	37ce8 <GetDataSlab+0x16704>
   3bcec:	mov	r3, #0
   3bcf0:	b	251fc <GetDataSlab+0x3c18>
   3bcf4:	ldr	r3, [fp]
   3bcf8:	ldr	r2, [sp, #16]
   3bcfc:	mul	r3, r3, r2
   3bd00:	str	r3, [sp, #16]
   3bd04:	ldr	r3, [sp, #196]	; 0xc4
   3bd08:	ldr	r3, [r3]
   3bd0c:	ldr	r2, [r5, #-4]
   3bd10:	mla	lr, r2, r3, lr
   3bd14:	add	r8, r8, #1
   3bd18:	ldr	r2, [sp, #20]
   3bd1c:	ldr	r3, [r2, #4]!
   3bd20:	str	r2, [sp, #20]
   3bd24:	sub	r3, r3, #1
   3bd28:	str	r3, [r7], #4
   3bd2c:	ldr	r2, [sp, #12]
   3bd30:	ldr	r3, [r2], #4
   3bd34:	str	r2, [sp, #12]
   3bd38:	mov	ip, r3
   3bd3c:	add	r5, r5, #4
   3bd40:	mov	r6, r5
   3bd44:	str	r3, [r5]
   3bd48:	cmp	r8, #0
   3bd4c:	beq	3bcf4 <GetDataSlab+0x1a710>
   3bd50:	str	r7, [sp, #24]
   3bd54:	ldr	r0, [r7, #-4]
   3bd58:	mov	r1, r2
   3bd5c:	mov	r2, r1
   3bd60:	ldr	r3, [r1, #-4]!
   3bd64:	mul	r0, r3, r0
   3bd68:	ldr	r3, [r2]
   3bd6c:	mul	ip, r3, ip
   3bd70:	cmp	r4, r1
   3bd74:	bne	3bd5c <GetDataSlab+0x1a778>
   3bd78:	ldr	r3, [sp, #24]
   3bd7c:	str	r0, [r3, #-4]
   3bd80:	str	ip, [r6]
   3bd84:	ldr	r3, [fp, r8, lsl #2]
   3bd88:	ldr	r2, [sp, #16]
   3bd8c:	mul	r3, r3, r2
   3bd90:	str	r3, [sp, #16]
   3bd94:	ldr	r3, [r6, #-4]
   3bd98:	ldr	r2, [sp, #196]	; 0xc4
   3bd9c:	ldr	r2, [r2, r8, lsl #2]
   3bda0:	mla	lr, r2, r3, lr
   3bda4:	add	r3, r8, #1
   3bda8:	cmp	r3, r9
   3bdac:	blt	3bd14 <GetDataSlab+0x1a730>
   3bdb0:	ldr	r3, [sp, #8]
   3bdb4:	add	ip, r3, lr
   3bdb8:	ldr	r3, [sp, #28]
   3bdbc:	cmp	r3, #1
   3bdc0:	beq	37378 <GetDataSlab+0x15d94>
   3bdc4:	ldr	r3, [sp, #16]
   3bdc8:	cmp	r3, #0
   3bdcc:	movle	r3, #0
   3bdd0:	ble	251fc <GetDataSlab+0x3c18>
   3bdd4:	mov	r3, #0
   3bdd8:	str	r3, [sp, #20]
   3bddc:	mov	r8, r3
   3bde0:	b	375cc <GetDataSlab+0x15fe8>
   3bde4:	ldr	r3, [fp]
   3bde8:	ldr	r2, [sp, #16]
   3bdec:	mul	r3, r3, r2
   3bdf0:	str	r3, [sp, #16]
   3bdf4:	ldr	r3, [sp, #196]	; 0xc4
   3bdf8:	ldr	r3, [r3]
   3bdfc:	ldr	r2, [r6, #-4]
   3be00:	mla	lr, r2, r3, lr
   3be04:	add	r4, r4, #1
   3be08:	ldr	r2, [sp, #20]
   3be0c:	ldr	r3, [r2, #4]!
   3be10:	str	r2, [sp, #20]
   3be14:	sub	r3, r3, #1
   3be18:	str	r3, [r8], #4
   3be1c:	ldr	r2, [sp, #12]
   3be20:	ldr	r3, [r2], #4
   3be24:	str	r2, [sp, #12]
   3be28:	mov	ip, r3
   3be2c:	add	r6, r6, #4
   3be30:	mov	r7, r6
   3be34:	str	r3, [r6]
   3be38:	cmp	r4, #0
   3be3c:	beq	3bde4 <GetDataSlab+0x1a800>
   3be40:	str	r8, [sp, #24]
   3be44:	ldr	r0, [r8, #-4]
   3be48:	mov	r1, r2
   3be4c:	mov	r2, r1
   3be50:	ldr	r3, [r1, #-4]!
   3be54:	mul	r0, r3, r0
   3be58:	ldr	r3, [r2]
   3be5c:	mul	ip, r3, ip
   3be60:	cmp	r1, r5
   3be64:	bne	3be4c <GetDataSlab+0x1a868>
   3be68:	ldr	r3, [sp, #24]
   3be6c:	str	r0, [r3, #-4]
   3be70:	str	ip, [r7]
   3be74:	ldr	r3, [fp, r4, lsl #2]
   3be78:	ldr	r2, [sp, #16]
   3be7c:	mul	r3, r3, r2
   3be80:	str	r3, [sp, #16]
   3be84:	ldr	r3, [r7, #-4]
   3be88:	ldr	r2, [sp, #196]	; 0xc4
   3be8c:	ldr	r2, [r2, r4, lsl #2]
   3be90:	mla	lr, r2, r3, lr
   3be94:	add	r3, r4, #1
   3be98:	cmp	r3, r9
   3be9c:	blt	3be04 <GetDataSlab+0x1a820>
   3bea0:	ldr	r3, [sp, #8]
   3bea4:	add	ip, r3, lr
   3bea8:	ldr	r3, [sp, #28]
   3beac:	cmp	r3, #1
   3beb0:	beq	376dc <GetDataSlab+0x160f8>
   3beb4:	ldr	r3, [sp, #16]
   3beb8:	cmp	r3, #0
   3bebc:	movle	r3, #0
   3bec0:	ble	251fc <GetDataSlab+0x3c18>
   3bec4:	mov	r3, #0
   3bec8:	str	r3, [sp, #20]
   3becc:	mov	r8, r3
   3bed0:	b	37930 <GetDataSlab+0x1634c>
   3bed4:	ldr	r3, [fp]
   3bed8:	ldr	r2, [sp, #16]
   3bedc:	mul	r3, r3, r2
   3bee0:	str	r3, [sp, #16]
   3bee4:	ldr	r3, [sp, #196]	; 0xc4
   3bee8:	ldr	r3, [r3]
   3beec:	ldr	r2, [r6, #-4]
   3bef0:	mla	lr, r2, r3, lr
   3bef4:	add	r4, r4, #1
   3bef8:	ldr	r2, [sp, #20]
   3befc:	ldr	r3, [r2, #4]!
   3bf00:	str	r2, [sp, #20]
   3bf04:	sub	r3, r3, #1
   3bf08:	str	r3, [r8], #4
   3bf0c:	ldr	r2, [sp, #12]
   3bf10:	ldr	r3, [r2], #4
   3bf14:	str	r2, [sp, #12]
   3bf18:	mov	ip, r3
   3bf1c:	add	r6, r6, #4
   3bf20:	mov	r7, r6
   3bf24:	str	r3, [r6]
   3bf28:	cmp	r4, #0
   3bf2c:	beq	3bed4 <GetDataSlab+0x1a8f0>
   3bf30:	str	r8, [sp, #24]
   3bf34:	ldr	r0, [r8, #-4]
   3bf38:	mov	r1, r2
   3bf3c:	mov	r2, r1
   3bf40:	ldr	r3, [r1, #-4]!
   3bf44:	mul	r0, r3, r0
   3bf48:	ldr	r3, [r2]
   3bf4c:	mul	ip, r3, ip
   3bf50:	cmp	r5, r1
   3bf54:	bne	3bf3c <GetDataSlab+0x1a958>
   3bf58:	ldr	r3, [sp, #24]
   3bf5c:	str	r0, [r3, #-4]
   3bf60:	str	ip, [r7]
   3bf64:	ldr	r3, [fp, r4, lsl #2]
   3bf68:	ldr	r2, [sp, #16]
   3bf6c:	mul	r3, r3, r2
   3bf70:	str	r3, [sp, #16]
   3bf74:	ldr	r3, [r7, #-4]
   3bf78:	ldr	r2, [sp, #196]	; 0xc4
   3bf7c:	ldr	r2, [r2, r4, lsl #2]
   3bf80:	mla	lr, r2, r3, lr
   3bf84:	add	r3, r4, #1
   3bf88:	cmp	r3, r9
   3bf8c:	blt	3bef4 <GetDataSlab+0x1a910>
   3bf90:	ldr	r3, [sp, #8]
   3bf94:	add	r4, r3, lr, lsl #1
   3bf98:	ldr	r3, [sp, #28]
   3bf9c:	cmp	r3, #1
   3bfa0:	beq	36cc4 <GetDataSlab+0x156e0>
   3bfa4:	ldr	r3, [sp, #16]
   3bfa8:	cmp	r3, #0
   3bfac:	movle	r3, #0
   3bfb0:	ble	251fc <GetDataSlab+0x3c18>
   3bfb4:	mov	r3, #0
   3bfb8:	str	r3, [sp, #20]
   3bfbc:	mov	r8, r3
   3bfc0:	b	36f10 <GetDataSlab+0x1592c>
   3bfc4:	ldr	r3, [fp]
   3bfc8:	ldr	r2, [sp, #16]
   3bfcc:	mul	r3, r3, r2
   3bfd0:	str	r3, [sp, #16]
   3bfd4:	ldr	r3, [sp, #196]	; 0xc4
   3bfd8:	ldr	r3, [r3]
   3bfdc:	ldr	r2, [r6, #-4]
   3bfe0:	mla	lr, r2, r3, lr
   3bfe4:	add	r4, r4, #1
   3bfe8:	ldr	r2, [sp, #20]
   3bfec:	ldr	r3, [r2, #4]!
   3bff0:	str	r2, [sp, #20]
   3bff4:	sub	r3, r3, #1
   3bff8:	str	r3, [r8], #4
   3bffc:	ldr	r2, [sp, #12]
   3c000:	ldr	r3, [r2], #4
   3c004:	str	r2, [sp, #12]
   3c008:	mov	ip, r3
   3c00c:	add	r6, r6, #4
   3c010:	mov	r7, r6
   3c014:	str	r3, [r6]
   3c018:	cmp	r4, #0
   3c01c:	beq	3bfc4 <GetDataSlab+0x1a9e0>
   3c020:	str	r8, [sp, #24]
   3c024:	ldr	r0, [r8, #-4]
   3c028:	mov	r1, r2
   3c02c:	mov	r2, r1
   3c030:	ldr	r3, [r1, #-4]!
   3c034:	mul	r0, r3, r0
   3c038:	ldr	r3, [r2]
   3c03c:	mul	ip, r3, ip
   3c040:	cmp	r5, r1
   3c044:	bne	3c02c <GetDataSlab+0x1aa48>
   3c048:	ldr	r3, [sp, #24]
   3c04c:	str	r0, [r3, #-4]
   3c050:	str	ip, [r7]
   3c054:	ldr	r3, [fp, r4, lsl #2]
   3c058:	ldr	r2, [sp, #16]
   3c05c:	mul	r3, r3, r2
   3c060:	str	r3, [sp, #16]
   3c064:	ldr	r3, [r7, #-4]
   3c068:	ldr	r2, [sp, #196]	; 0xc4
   3c06c:	ldr	r2, [r2, r4, lsl #2]
   3c070:	mla	lr, r2, r3, lr
   3c074:	add	r3, r4, #1
   3c078:	cmp	r9, r3
   3c07c:	bgt	3bfe4 <GetDataSlab+0x1aa00>
   3c080:	ldr	r3, [sp, #8]
   3c084:	add	r4, r3, lr, lsl #1
   3c088:	ldr	r3, [sp, #28]
   3c08c:	cmp	r3, #1
   3c090:	beq	37020 <GetDataSlab+0x15a3c>
   3c094:	ldr	r3, [sp, #16]
   3c098:	cmp	r3, #0
   3c09c:	movle	r3, #0
   3c0a0:	ble	251fc <GetDataSlab+0x3c18>
   3c0a4:	mov	r3, #0
   3c0a8:	str	r3, [sp, #20]
   3c0ac:	mov	r8, r3
   3c0b0:	b	3726c <GetDataSlab+0x15c88>
   3c0b4:	ldr	r3, [fp]
   3c0b8:	ldr	r2, [sp, #16]
   3c0bc:	mul	r3, r3, r2
   3c0c0:	str	r3, [sp, #16]
   3c0c4:	ldr	r3, [r6, #-4]
   3c0c8:	ldr	r2, [sp, #196]	; 0xc4
   3c0cc:	ldr	r2, [r2]
   3c0d0:	mla	lr, r2, r3, lr
   3c0d4:	add	r4, r4, #1
   3c0d8:	ldr	r2, [sp, #20]
   3c0dc:	ldr	r3, [r2, #4]!
   3c0e0:	str	r2, [sp, #20]
   3c0e4:	sub	r3, r3, #1
   3c0e8:	str	r3, [r8], #4
   3c0ec:	ldr	r2, [sp, #12]
   3c0f0:	ldr	r3, [r2], #4
   3c0f4:	str	r2, [sp, #12]
   3c0f8:	mov	ip, r3
   3c0fc:	add	r6, r6, #4
   3c100:	mov	r7, r6
   3c104:	str	r3, [r6]
   3c108:	cmp	r4, #0
   3c10c:	beq	3c0b4 <GetDataSlab+0x1aad0>
   3c110:	str	r8, [sp, #24]
   3c114:	ldr	r0, [r8, #-4]
   3c118:	mov	r1, r2
   3c11c:	mov	r2, r1
   3c120:	ldr	r3, [r1, #-4]!
   3c124:	mul	r0, r3, r0
   3c128:	ldr	r3, [r2]
   3c12c:	mul	ip, r3, ip
   3c130:	cmp	r1, r5
   3c134:	bne	3c11c <GetDataSlab+0x1ab38>
   3c138:	ldr	r3, [sp, #24]
   3c13c:	str	r0, [r3, #-4]
   3c140:	str	ip, [r7]
   3c144:	ldr	r3, [fp, r4, lsl #2]
   3c148:	ldr	r2, [sp, #16]
   3c14c:	mul	r3, r3, r2
   3c150:	str	r3, [sp, #16]
   3c154:	ldr	r3, [r7, #-4]
   3c158:	ldr	r2, [sp, #196]	; 0xc4
   3c15c:	ldr	r2, [r2, r4, lsl #2]
   3c160:	mla	lr, r2, r3, lr
   3c164:	add	r3, r4, #1
   3c168:	cmp	r9, r3
   3c16c:	bgt	3c0d4 <GetDataSlab+0x1aaf0>
   3c170:	ldr	r3, [sp, #8]
   3c174:	add	ip, r3, lr, lsl #2
   3c178:	ldr	r3, [sp, #28]
   3c17c:	cmp	r3, #1
   3c180:	beq	3660c <GetDataSlab+0x15028>
   3c184:	ldr	r3, [sp, #16]
   3c188:	cmp	r3, #0
   3c18c:	movle	r3, #0
   3c190:	ble	251fc <GetDataSlab+0x3c18>
   3c194:	mov	r3, #0
   3c198:	str	r3, [sp, #20]
   3c19c:	mov	r8, r3
   3c1a0:	b	36858 <GetDataSlab+0x15274>
   3c1a4:	ldr	r3, [fp]
   3c1a8:	ldr	r2, [sp, #16]
   3c1ac:	mul	r3, r3, r2
   3c1b0:	str	r3, [sp, #16]
   3c1b4:	ldr	r3, [r6, #-4]
   3c1b8:	ldr	r2, [sp, #196]	; 0xc4
   3c1bc:	ldr	r2, [r2]
   3c1c0:	mla	lr, r2, r3, lr
   3c1c4:	add	r4, r4, #1
   3c1c8:	ldr	r2, [sp, #20]
   3c1cc:	ldr	r3, [r2, #4]!
   3c1d0:	str	r2, [sp, #20]
   3c1d4:	sub	r3, r3, #1
   3c1d8:	str	r3, [r8], #4
   3c1dc:	ldr	r2, [sp, #12]
   3c1e0:	ldr	r3, [r2], #4
   3c1e4:	str	r2, [sp, #12]
   3c1e8:	mov	ip, r3
   3c1ec:	add	r6, r6, #4
   3c1f0:	mov	r7, r6
   3c1f4:	str	r3, [r6]
   3c1f8:	cmp	r4, #0
   3c1fc:	beq	3c1a4 <GetDataSlab+0x1abc0>
   3c200:	str	r8, [sp, #24]
   3c204:	ldr	r0, [r8, #-4]
   3c208:	mov	r1, r2
   3c20c:	mov	r2, r1
   3c210:	ldr	r3, [r1, #-4]!
   3c214:	mul	r0, r3, r0
   3c218:	ldr	r3, [r2]
   3c21c:	mul	ip, r3, ip
   3c220:	cmp	r5, r1
   3c224:	bne	3c20c <GetDataSlab+0x1ac28>
   3c228:	ldr	r3, [sp, #24]
   3c22c:	str	r0, [r3, #-4]
   3c230:	str	ip, [r7]
   3c234:	ldr	r3, [fp, r4, lsl #2]
   3c238:	ldr	r2, [sp, #16]
   3c23c:	mul	r3, r3, r2
   3c240:	str	r3, [sp, #16]
   3c244:	ldr	r3, [r7, #-4]
   3c248:	ldr	r2, [sp, #196]	; 0xc4
   3c24c:	ldr	r2, [r2, r4, lsl #2]
   3c250:	mla	lr, r2, r3, lr
   3c254:	add	r3, r4, #1
   3c258:	cmp	r9, r3
   3c25c:	bgt	3c1c4 <GetDataSlab+0x1abe0>
   3c260:	ldr	r3, [sp, #8]
   3c264:	add	ip, r3, lr, lsl #2
   3c268:	ldr	r3, [sp, #28]
   3c26c:	cmp	r3, #1
   3c270:	beq	36968 <GetDataSlab+0x15384>
   3c274:	ldr	r3, [sp, #16]
   3c278:	cmp	r3, #0
   3c27c:	movle	r3, #0
   3c280:	ble	251fc <GetDataSlab+0x3c18>
   3c284:	mov	r3, #0
   3c288:	str	r3, [sp, #20]
   3c28c:	mov	r8, r3
   3c290:	b	36bb4 <GetDataSlab+0x155d0>
   3c294:	ldr	r3, [fp]
   3c298:	ldr	r2, [sp, #16]
   3c29c:	mul	r3, r3, r2
   3c2a0:	str	r3, [sp, #16]
   3c2a4:	ldr	r3, [sp, #196]	; 0xc4
   3c2a8:	ldr	r3, [r3]
   3c2ac:	ldr	r2, [r6, #-4]
   3c2b0:	mla	lr, r2, r3, lr
   3c2b4:	add	r4, r4, #1
   3c2b8:	ldr	r2, [sp, #20]
   3c2bc:	ldr	r3, [r2, #4]!
   3c2c0:	str	r2, [sp, #20]
   3c2c4:	sub	r3, r3, #1
   3c2c8:	str	r3, [r8], #4
   3c2cc:	ldr	r2, [sp, #12]
   3c2d0:	ldr	r3, [r2], #4
   3c2d4:	str	r2, [sp, #12]
   3c2d8:	mov	ip, r3
   3c2dc:	add	r6, r6, #4
   3c2e0:	mov	r7, r6
   3c2e4:	str	r3, [r6]
   3c2e8:	cmp	r4, #0
   3c2ec:	beq	3c294 <GetDataSlab+0x1acb0>
   3c2f0:	str	r8, [sp, #24]
   3c2f4:	ldr	r0, [r8, #-4]
   3c2f8:	mov	r1, r2
   3c2fc:	mov	r2, r1
   3c300:	ldr	r3, [r1, #-4]!
   3c304:	mul	r0, r3, r0
   3c308:	ldr	r3, [r2]
   3c30c:	mul	ip, r3, ip
   3c310:	cmp	r5, r1
   3c314:	bne	3c2fc <GetDataSlab+0x1ad18>
   3c318:	ldr	r3, [sp, #24]
   3c31c:	str	r0, [r3, #-4]
   3c320:	str	ip, [r7]
   3c324:	ldr	r3, [fp, r4, lsl #2]
   3c328:	ldr	r2, [sp, #16]
   3c32c:	mul	r3, r3, r2
   3c330:	str	r3, [sp, #16]
   3c334:	ldr	r3, [r7, #-4]
   3c338:	ldr	r2, [sp, #196]	; 0xc4
   3c33c:	ldr	r2, [r2, r4, lsl #2]
   3c340:	mla	lr, r2, r3, lr
   3c344:	add	r3, r4, #1
   3c348:	cmp	r3, r9
   3c34c:	blt	3c2b4 <GetDataSlab+0x1acd0>
   3c350:	ldr	r3, [sp, #8]
   3c354:	add	ip, r3, lr, lsl #2
   3c358:	ldr	r3, [sp, #28]
   3c35c:	cmp	r3, #1
   3c360:	beq	362a0 <GetDataSlab+0x14cbc>
   3c364:	ldr	r3, [sp, #16]
   3c368:	cmp	r3, #0
   3c36c:	movle	r3, #0
   3c370:	ble	251fc <GetDataSlab+0x3c18>
   3c374:	mov	r3, #0
   3c378:	str	r3, [sp, #20]
   3c37c:	mov	r8, r3
   3c380:	b	364f4 <GetDataSlab+0x14f10>
   3c384:	ldr	r3, [fp]
   3c388:	ldr	r2, [sp, #16]
   3c38c:	mul	r3, r3, r2
   3c390:	str	r3, [sp, #16]
   3c394:	ldr	r3, [sp, #196]	; 0xc4
   3c398:	ldr	r3, [r3]
   3c39c:	ldr	r2, [r6, #-4]
   3c3a0:	mla	lr, r2, r3, lr
   3c3a4:	add	r4, r4, #1
   3c3a8:	ldr	r2, [sp, #20]
   3c3ac:	ldr	r3, [r2, #4]!
   3c3b0:	str	r2, [sp, #20]
   3c3b4:	sub	r3, r3, #1
   3c3b8:	str	r3, [r8], #4
   3c3bc:	ldr	r2, [sp, #12]
   3c3c0:	ldr	r3, [r2], #4
   3c3c4:	str	r2, [sp, #12]
   3c3c8:	mov	ip, r3
   3c3cc:	add	r6, r6, #4
   3c3d0:	mov	r7, r6
   3c3d4:	str	r3, [r6]
   3c3d8:	cmp	r4, #0
   3c3dc:	beq	3c384 <GetDataSlab+0x1ada0>
   3c3e0:	str	r8, [sp, #24]
   3c3e4:	ldr	r0, [r8, #-4]
   3c3e8:	mov	r1, r2
   3c3ec:	mov	r2, r1
   3c3f0:	ldr	r3, [r1, #-4]!
   3c3f4:	mul	r0, r3, r0
   3c3f8:	ldr	r3, [r2]
   3c3fc:	mul	ip, r3, ip
   3c400:	cmp	r5, r1
   3c404:	bne	3c3ec <GetDataSlab+0x1ae08>
   3c408:	ldr	r3, [sp, #24]
   3c40c:	str	r0, [r3, #-4]
   3c410:	str	ip, [r7]
   3c414:	ldr	r3, [fp, r4, lsl #2]
   3c418:	ldr	r2, [sp, #16]
   3c41c:	mul	r3, r3, r2
   3c420:	str	r3, [sp, #16]
   3c424:	ldr	r3, [r7, #-4]
   3c428:	ldr	r2, [sp, #196]	; 0xc4
   3c42c:	ldr	r2, [r2, r4, lsl #2]
   3c430:	mla	lr, r2, r3, lr
   3c434:	add	r3, r4, #1
   3c438:	cmp	r3, r9
   3c43c:	blt	3c3a4 <GetDataSlab+0x1adc0>
   3c440:	ldr	r3, [sp, #8]
   3c444:	add	ip, r3, lr, lsl #3
   3c448:	ldr	r3, [sp, #28]
   3c44c:	cmp	r3, #1
   3c450:	beq	35f34 <GetDataSlab+0x14950>
   3c454:	ldr	r3, [sp, #16]
   3c458:	cmp	r3, #0
   3c45c:	movle	r3, #0
   3c460:	ble	251fc <GetDataSlab+0x3c18>
   3c464:	mov	r3, #0
   3c468:	str	r3, [sp, #20]
   3c46c:	mov	r8, r3
   3c470:	b	36188 <GetDataSlab+0x14ba4>
   3c474:	ldr	r3, [fp]
   3c478:	ldr	r2, [sp, #16]
   3c47c:	mul	r3, r3, r2
   3c480:	str	r3, [sp, #16]
   3c484:	ldr	r3, [r6, #-4]
   3c488:	ldr	r2, [sp, #196]	; 0xc4
   3c48c:	ldr	r2, [r2]
   3c490:	mla	lr, r2, r3, lr
   3c494:	add	r4, r4, #1
   3c498:	ldr	r2, [sp, #20]
   3c49c:	ldr	r3, [r2, #4]!
   3c4a0:	str	r2, [sp, #20]
   3c4a4:	sub	r3, r3, #1
   3c4a8:	str	r3, [r8], #4
   3c4ac:	ldr	r2, [sp, #12]
   3c4b0:	ldr	r3, [r2], #4
   3c4b4:	str	r2, [sp, #12]
   3c4b8:	mov	ip, r3
   3c4bc:	add	r6, r6, #4
   3c4c0:	mov	r7, r6
   3c4c4:	str	r3, [r6]
   3c4c8:	cmp	r4, #0
   3c4cc:	beq	3c474 <GetDataSlab+0x1ae90>
   3c4d0:	str	r8, [sp, #24]
   3c4d4:	ldr	r0, [r8, #-4]
   3c4d8:	mov	r1, r2
   3c4dc:	mov	r2, r1
   3c4e0:	ldr	r3, [r1, #-4]!
   3c4e4:	mul	r0, r3, r0
   3c4e8:	ldr	r3, [r2]
   3c4ec:	mul	ip, r3, ip
   3c4f0:	cmp	r1, r5
   3c4f4:	bne	3c4dc <GetDataSlab+0x1aef8>
   3c4f8:	ldr	r3, [sp, #24]
   3c4fc:	str	r0, [r3, #-4]
   3c500:	str	ip, [r7]
   3c504:	ldr	r3, [fp, r4, lsl #2]
   3c508:	ldr	r2, [sp, #16]
   3c50c:	mul	r3, r3, r2
   3c510:	str	r3, [sp, #16]
   3c514:	ldr	r3, [r7, #-4]
   3c518:	ldr	r2, [sp, #196]	; 0xc4
   3c51c:	ldr	r2, [r2, r4, lsl #2]
   3c520:	mla	lr, r2, r3, lr
   3c524:	add	r3, r4, #1
   3c528:	cmp	r9, r3
   3c52c:	bgt	3c494 <GetDataSlab+0x1aeb0>
   3c530:	ldr	r3, [sp, #8]
   3c534:	add	ip, r3, lr, lsl #3
   3c538:	ldr	r3, [sp, #28]
   3c53c:	cmp	r3, #1
   3c540:	beq	39fa8 <GetDataSlab+0x189c4>
   3c544:	ldr	r3, [sp, #16]
   3c548:	cmp	r3, #0
   3c54c:	movle	r3, #0
   3c550:	ble	251fc <GetDataSlab+0x3c18>
   3c554:	mov	r3, #0
   3c558:	str	r3, [sp, #20]
   3c55c:	mov	r8, r3
   3c560:	b	3a1f8 <GetDataSlab+0x18c14>
   3c564:	ldr	r3, [fp]
   3c568:	ldr	r2, [sp, #16]
   3c56c:	mul	r3, r3, r2
   3c570:	str	r3, [sp, #16]
   3c574:	ldr	r3, [sp, #196]	; 0xc4
   3c578:	ldr	r3, [r3]
   3c57c:	ldr	r2, [r6, #-4]
   3c580:	mla	lr, r2, r3, lr
   3c584:	add	r4, r4, #1
   3c588:	ldr	r2, [sp, #20]
   3c58c:	ldr	r3, [r2, #4]!
   3c590:	str	r2, [sp, #20]
   3c594:	sub	r3, r3, #1
   3c598:	str	r3, [r8], #4
   3c59c:	ldr	r2, [sp, #12]
   3c5a0:	ldr	r3, [r2], #4
   3c5a4:	str	r2, [sp, #12]
   3c5a8:	mov	ip, r3
   3c5ac:	add	r6, r6, #4
   3c5b0:	mov	r7, r6
   3c5b4:	str	r3, [r6]
   3c5b8:	cmp	r4, #0
   3c5bc:	beq	3c564 <GetDataSlab+0x1af80>
   3c5c0:	str	r8, [sp, #24]
   3c5c4:	ldr	r0, [r8, #-4]
   3c5c8:	mov	r1, r2
   3c5cc:	mov	r2, r1
   3c5d0:	ldr	r3, [r1, #-4]!
   3c5d4:	mul	r0, r3, r0
   3c5d8:	ldr	r3, [r2]
   3c5dc:	mul	ip, r3, ip
   3c5e0:	cmp	r5, r1
   3c5e4:	bne	3c5cc <GetDataSlab+0x1afe8>
   3c5e8:	ldr	r3, [sp, #24]
   3c5ec:	str	r0, [r3, #-4]
   3c5f0:	str	ip, [r7]
   3c5f4:	ldr	r3, [fp, r4, lsl #2]
   3c5f8:	ldr	r2, [sp, #16]
   3c5fc:	mul	r3, r3, r2
   3c600:	str	r3, [sp, #16]
   3c604:	ldr	r3, [r7, #-4]
   3c608:	ldr	r2, [sp, #196]	; 0xc4
   3c60c:	ldr	r2, [r2, r4, lsl #2]
   3c610:	mla	lr, r2, r3, lr
   3c614:	add	r3, r4, #1
   3c618:	cmp	r9, r3
   3c61c:	bgt	3c584 <GetDataSlab+0x1afa0>
   3c620:	ldr	r3, [sp, #8]
   3c624:	add	ip, r3, lr, lsl #3
   3c628:	ldr	r3, [sp, #28]
   3c62c:	cmp	r3, #1
   3c630:	beq	39ca4 <GetDataSlab+0x186c0>
   3c634:	ldr	r3, [sp, #16]
   3c638:	cmp	r3, #0
   3c63c:	movgt	r3, #0
   3c640:	strgt	r3, [sp, #20]
   3c644:	movgt	r8, r3
   3c648:	bgt	39eec <GetDataSlab+0x18908>
   3c64c:	mov	r3, #0
   3c650:	b	251fc <GetDataSlab+0x3c18>
   3c654:	ldr	r3, [fp]
   3c658:	ldr	r2, [sp, #16]
   3c65c:	mul	r3, r3, r2
   3c660:	str	r3, [sp, #16]
   3c664:	ldr	r3, [sp, #196]	; 0xc4
   3c668:	ldr	r3, [r3]
   3c66c:	ldr	r2, [r5, #-4]
   3c670:	mla	lr, r2, r3, lr
   3c674:	add	r8, r8, #1
   3c678:	ldr	r2, [sp, #20]
   3c67c:	ldr	r3, [r2, #4]!
   3c680:	str	r2, [sp, #20]
   3c684:	sub	r3, r3, #1
   3c688:	str	r3, [r7], #4
   3c68c:	ldr	r2, [sp, #12]
   3c690:	ldr	r3, [r2], #4
   3c694:	str	r2, [sp, #12]
   3c698:	mov	ip, r3
   3c69c:	add	r5, r5, #4
   3c6a0:	mov	r6, r5
   3c6a4:	str	r3, [r5]
   3c6a8:	cmp	r8, #0
   3c6ac:	beq	3c654 <GetDataSlab+0x1b070>
   3c6b0:	str	r7, [sp, #24]
   3c6b4:	ldr	r0, [r7, #-4]
   3c6b8:	mov	r1, r2
   3c6bc:	mov	r2, r1
   3c6c0:	ldr	r3, [r1, #-4]!
   3c6c4:	mul	r0, r3, r0
   3c6c8:	ldr	r3, [r2]
   3c6cc:	mul	ip, r3, ip
   3c6d0:	cmp	r1, r4
   3c6d4:	bne	3c6bc <GetDataSlab+0x1b0d8>
   3c6d8:	ldr	r3, [sp, #24]
   3c6dc:	str	r0, [r3, #-4]
   3c6e0:	str	ip, [r6]
   3c6e4:	ldr	r3, [fp, r8, lsl #2]
   3c6e8:	ldr	r2, [sp, #16]
   3c6ec:	mul	r3, r3, r2
   3c6f0:	str	r3, [sp, #16]
   3c6f4:	ldr	r3, [r6, #-4]
   3c6f8:	ldr	r2, [sp, #196]	; 0xc4
   3c6fc:	ldr	r2, [r2, r8, lsl #2]
   3c700:	mla	lr, r2, r3, lr
   3c704:	add	r3, r8, #1
   3c708:	cmp	r3, r9
   3c70c:	blt	3c674 <GetDataSlab+0x1b090>
   3c710:	ldr	r3, [sp, #8]
   3c714:	add	ip, r3, lr
   3c718:	ldr	r3, [sp, #28]
   3c71c:	cmp	r3, #1
   3c720:	beq	3957c <GetDataSlab+0x17f98>
   3c724:	ldr	r3, [sp, #16]
   3c728:	cmp	r3, #0
   3c72c:	movle	r3, #0
   3c730:	ble	251fc <GetDataSlab+0x3c18>
   3c734:	mov	r3, #0
   3c738:	str	r3, [sp, #20]
   3c73c:	mov	r8, r3
   3c740:	b	397d0 <GetDataSlab+0x181ec>
   3c744:	ldr	r3, [fp]
   3c748:	ldr	r2, [sp, #16]
   3c74c:	mul	r3, r3, r2
   3c750:	str	r3, [sp, #16]
   3c754:	ldr	r3, [r6, #-4]
   3c758:	ldr	r2, [sp, #196]	; 0xc4
   3c75c:	ldr	r2, [r2]
   3c760:	mla	lr, r2, r3, lr
   3c764:	add	r4, r4, #1
   3c768:	ldr	r2, [sp, #20]
   3c76c:	ldr	r3, [r2, #4]!
   3c770:	str	r2, [sp, #20]
   3c774:	sub	r3, r3, #1
   3c778:	str	r3, [r8], #4
   3c77c:	ldr	r2, [sp, #12]
   3c780:	ldr	r3, [r2], #4
   3c784:	str	r2, [sp, #12]
   3c788:	mov	ip, r3
   3c78c:	add	r6, r6, #4
   3c790:	mov	r7, r6
   3c794:	str	r3, [r6]
   3c798:	cmp	r4, #0
   3c79c:	beq	3c744 <GetDataSlab+0x1b160>
   3c7a0:	str	r8, [sp, #24]
   3c7a4:	ldr	r0, [r8, #-4]
   3c7a8:	mov	r1, r2
   3c7ac:	mov	r2, r1
   3c7b0:	ldr	r3, [r1, #-4]!
   3c7b4:	mul	r0, r3, r0
   3c7b8:	ldr	r3, [r2]
   3c7bc:	mul	ip, r3, ip
   3c7c0:	cmp	r5, r1
   3c7c4:	bne	3c7ac <GetDataSlab+0x1b1c8>
   3c7c8:	ldr	r3, [sp, #24]
   3c7cc:	str	r0, [r3, #-4]
   3c7d0:	str	ip, [r7]
   3c7d4:	ldr	r3, [fp, r4, lsl #2]
   3c7d8:	ldr	r2, [sp, #16]
   3c7dc:	mul	r3, r3, r2
   3c7e0:	str	r3, [sp, #16]
   3c7e4:	ldr	r3, [r7, #-4]
   3c7e8:	ldr	r2, [sp, #196]	; 0xc4
   3c7ec:	ldr	r2, [r2, r4, lsl #2]
   3c7f0:	mla	lr, r2, r3, lr
   3c7f4:	add	r3, r4, #1
   3c7f8:	cmp	r9, r3
   3c7fc:	bgt	3c764 <GetDataSlab+0x1b180>
   3c800:	ldr	r3, [sp, #8]
   3c804:	add	ip, r3, lr
   3c808:	ldr	r3, [sp, #28]
   3c80c:	cmp	r3, #1
   3c810:	beq	398e0 <GetDataSlab+0x182fc>
   3c814:	ldr	r3, [sp, #16]
   3c818:	cmp	r3, #0
   3c81c:	movle	r3, #0
   3c820:	ble	251fc <GetDataSlab+0x3c18>
   3c824:	mov	r3, #0
   3c828:	str	r3, [sp, #20]
   3c82c:	mov	r8, r3
   3c830:	b	39b34 <GetDataSlab+0x18550>
   3c834:	ldr	r3, [fp]
   3c838:	ldr	r2, [sp, #16]
   3c83c:	mul	r3, r3, r2
   3c840:	str	r3, [sp, #16]
   3c844:	ldr	r3, [sp, #196]	; 0xc4
   3c848:	ldr	r3, [r3]
   3c84c:	ldr	r2, [r6, #-4]
   3c850:	mla	lr, r2, r3, lr
   3c854:	add	r4, r4, #1
   3c858:	ldr	r2, [sp, #20]
   3c85c:	ldr	r3, [r2, #4]!
   3c860:	str	r2, [sp, #20]
   3c864:	sub	r3, r3, #1
   3c868:	str	r3, [r8], #4
   3c86c:	ldr	r2, [sp, #12]
   3c870:	ldr	r3, [r2], #4
   3c874:	str	r2, [sp, #12]
   3c878:	mov	ip, r3
   3c87c:	add	r6, r6, #4
   3c880:	mov	r7, r6
   3c884:	str	r3, [r6]
   3c888:	cmp	r4, #0
   3c88c:	beq	3c834 <GetDataSlab+0x1b250>
   3c890:	str	r8, [sp, #24]
   3c894:	ldr	r0, [r8, #-4]
   3c898:	mov	r1, r2
   3c89c:	mov	r2, r1
   3c8a0:	ldr	r3, [r1, #-4]!
   3c8a4:	mul	r0, r3, r0
   3c8a8:	ldr	r3, [r2]
   3c8ac:	mul	ip, r3, ip
   3c8b0:	cmp	r1, r5
   3c8b4:	bne	3c89c <GetDataSlab+0x1b2b8>
   3c8b8:	ldr	r3, [sp, #24]
   3c8bc:	str	r0, [r3, #-4]
   3c8c0:	str	ip, [r7]
   3c8c4:	ldr	r3, [fp, r4, lsl #2]
   3c8c8:	ldr	r2, [sp, #16]
   3c8cc:	mul	r3, r3, r2
   3c8d0:	str	r3, [sp, #16]
   3c8d4:	ldr	r3, [r7, #-4]
   3c8d8:	ldr	r2, [sp, #196]	; 0xc4
   3c8dc:	ldr	r2, [r2, r4, lsl #2]
   3c8e0:	mla	lr, r2, r3, lr
   3c8e4:	add	r3, r4, #1
   3c8e8:	cmp	r3, r9
   3c8ec:	blt	3c854 <GetDataSlab+0x1b270>
   3c8f0:	ldr	r3, [sp, #8]
   3c8f4:	add	r4, r3, lr, lsl #1
   3c8f8:	ldr	r3, [sp, #28]
   3c8fc:	cmp	r3, #1
   3c900:	beq	38ec8 <GetDataSlab+0x178e4>
   3c904:	ldr	r3, [sp, #16]
   3c908:	cmp	r3, #0
   3c90c:	movle	r3, #0
   3c910:	ble	251fc <GetDataSlab+0x3c18>
   3c914:	mov	r3, #0
   3c918:	str	r3, [sp, #20]
   3c91c:	mov	r8, r3
   3c920:	b	39114 <GetDataSlab+0x17b30>
   3c924:	ldr	r3, [fp]
   3c928:	ldr	r2, [sp, #16]
   3c92c:	mul	r3, r3, r2
   3c930:	str	r3, [sp, #16]
   3c934:	ldr	r3, [r6, #-4]
   3c938:	ldr	r2, [sp, #196]	; 0xc4
   3c93c:	ldr	r2, [r2]
   3c940:	mla	lr, r2, r3, lr
   3c944:	add	r4, r4, #1
   3c948:	ldr	r2, [sp, #20]
   3c94c:	ldr	r3, [r2, #4]!
   3c950:	str	r2, [sp, #20]
   3c954:	sub	r3, r3, #1
   3c958:	str	r3, [r8], #4
   3c95c:	ldr	r2, [sp, #12]
   3c960:	ldr	r3, [r2], #4
   3c964:	str	r2, [sp, #12]
   3c968:	mov	ip, r3
   3c96c:	add	r6, r6, #4
   3c970:	mov	r7, r6
   3c974:	str	r3, [r6]
   3c978:	cmp	r4, #0
   3c97c:	beq	3c924 <GetDataSlab+0x1b340>
   3c980:	str	r8, [sp, #24]
   3c984:	ldr	r0, [r8, #-4]
   3c988:	mov	r1, r2
   3c98c:	mov	r2, r1
   3c990:	ldr	r3, [r1, #-4]!
   3c994:	mul	r0, r3, r0
   3c998:	ldr	r3, [r2]
   3c99c:	mul	ip, r3, ip
   3c9a0:	cmp	r1, r5
   3c9a4:	bne	3c98c <GetDataSlab+0x1b3a8>
   3c9a8:	ldr	r3, [sp, #24]
   3c9ac:	str	r0, [r3, #-4]
   3c9b0:	str	ip, [r7]
   3c9b4:	ldr	r3, [fp, r4, lsl #2]
   3c9b8:	ldr	r2, [sp, #16]
   3c9bc:	mul	r3, r3, r2
   3c9c0:	str	r3, [sp, #16]
   3c9c4:	ldr	r3, [r7, #-4]
   3c9c8:	ldr	r2, [sp, #196]	; 0xc4
   3c9cc:	ldr	r2, [r2, r4, lsl #2]
   3c9d0:	mla	lr, r2, r3, lr
   3c9d4:	add	r3, r4, #1
   3c9d8:	cmp	r9, r3
   3c9dc:	bgt	3c944 <GetDataSlab+0x1b360>
   3c9e0:	ldr	r3, [sp, #8]
   3c9e4:	add	r4, r3, lr, lsl #1
   3c9e8:	ldr	r3, [sp, #28]
   3c9ec:	cmp	r3, #1
   3c9f0:	beq	39224 <GetDataSlab+0x17c40>
   3c9f4:	ldr	r3, [sp, #16]
   3c9f8:	cmp	r3, #0
   3c9fc:	movle	r3, #0
   3ca00:	ble	251fc <GetDataSlab+0x3c18>
   3ca04:	mov	r3, #0
   3ca08:	str	r3, [sp, #20]
   3ca0c:	mov	r8, r3
   3ca10:	b	39470 <GetDataSlab+0x17e8c>
   3ca14:	ldr	r3, [fp]
   3ca18:	ldr	r2, [sp, #16]
   3ca1c:	mul	r3, r3, r2
   3ca20:	str	r3, [sp, #16]
   3ca24:	ldr	r3, [sp, #196]	; 0xc4
   3ca28:	ldr	r3, [r3]
   3ca2c:	ldr	r2, [r6, #-4]
   3ca30:	mla	lr, r2, r3, lr
   3ca34:	add	r4, r4, #1
   3ca38:	ldr	r2, [sp, #20]
   3ca3c:	ldr	r3, [r2, #4]!
   3ca40:	str	r2, [sp, #20]
   3ca44:	sub	r3, r3, #1
   3ca48:	str	r3, [r8], #4
   3ca4c:	ldr	r2, [sp, #12]
   3ca50:	ldr	r3, [r2], #4
   3ca54:	str	r2, [sp, #12]
   3ca58:	mov	ip, r3
   3ca5c:	add	r6, r6, #4
   3ca60:	mov	r7, r6
   3ca64:	str	r3, [r6]
   3ca68:	cmp	r4, #0
   3ca6c:	beq	3ca14 <GetDataSlab+0x1b430>
   3ca70:	str	r8, [sp, #24]
   3ca74:	ldr	r0, [r8, #-4]
   3ca78:	mov	r1, r2
   3ca7c:	mov	r2, r1
   3ca80:	ldr	r3, [r1, #-4]!
   3ca84:	mul	r0, r3, r0
   3ca88:	ldr	r3, [r2]
   3ca8c:	mul	ip, r3, ip
   3ca90:	cmp	r5, r1
   3ca94:	bne	3ca7c <GetDataSlab+0x1b498>
   3ca98:	ldr	r3, [sp, #24]
   3ca9c:	str	r0, [r3, #-4]
   3caa0:	str	ip, [r7]
   3caa4:	ldr	r3, [fp, r4, lsl #2]
   3caa8:	ldr	r2, [sp, #16]
   3caac:	mul	r3, r3, r2
   3cab0:	str	r3, [sp, #16]
   3cab4:	ldr	r3, [r7, #-4]
   3cab8:	ldr	r2, [sp, #196]	; 0xc4
   3cabc:	ldr	r2, [r2, r4, lsl #2]
   3cac0:	mla	lr, r2, r3, lr
   3cac4:	add	r3, r4, #1
   3cac8:	cmp	r3, r9
   3cacc:	blt	3ca34 <GetDataSlab+0x1b450>
   3cad0:	ldr	r3, [sp, #8]
   3cad4:	add	ip, r3, lr, lsl #2
   3cad8:	ldr	r3, [sp, #28]
   3cadc:	cmp	r3, #1
   3cae0:	beq	38810 <GetDataSlab+0x1722c>
   3cae4:	ldr	r3, [sp, #16]
   3cae8:	cmp	r3, #0
   3caec:	movle	r3, #0
   3caf0:	ble	251fc <GetDataSlab+0x3c18>
   3caf4:	mov	r3, #0
   3caf8:	str	r3, [sp, #20]
   3cafc:	mov	r8, r3
   3cb00:	b	38a5c <GetDataSlab+0x17478>
   3cb04:	ldr	r3, [fp]
   3cb08:	ldr	r2, [sp, #16]
   3cb0c:	mul	r3, r3, r2
   3cb10:	str	r3, [sp, #16]
   3cb14:	ldr	r3, [r6, #-4]
   3cb18:	ldr	r2, [sp, #196]	; 0xc4
   3cb1c:	ldr	r2, [r2]
   3cb20:	mla	lr, r2, r3, lr
   3cb24:	add	r4, r4, #1
   3cb28:	ldr	r2, [sp, #20]
   3cb2c:	ldr	r3, [r2, #4]!
   3cb30:	str	r2, [sp, #20]
   3cb34:	sub	r3, r3, #1
   3cb38:	str	r3, [r8], #4
   3cb3c:	ldr	r2, [sp, #12]
   3cb40:	ldr	r3, [r2], #4
   3cb44:	str	r2, [sp, #12]
   3cb48:	mov	ip, r3
   3cb4c:	add	r6, r6, #4
   3cb50:	mov	r7, r6
   3cb54:	str	r3, [r6]
   3cb58:	cmp	r4, #0
   3cb5c:	beq	3cb04 <GetDataSlab+0x1b520>
   3cb60:	str	r8, [sp, #24]
   3cb64:	ldr	r0, [r8, #-4]
   3cb68:	mov	r1, r2
   3cb6c:	mov	r2, r1
   3cb70:	ldr	r3, [r1, #-4]!
   3cb74:	mul	r0, r3, r0
   3cb78:	ldr	r3, [r2]
   3cb7c:	mul	ip, r3, ip
   3cb80:	cmp	r1, r5
   3cb84:	bne	3cb6c <GetDataSlab+0x1b588>
   3cb88:	ldr	r3, [sp, #24]
   3cb8c:	str	r0, [r3, #-4]
   3cb90:	str	ip, [r7]
   3cb94:	ldr	r3, [fp, r4, lsl #2]
   3cb98:	ldr	r2, [sp, #16]
   3cb9c:	mul	r3, r3, r2
   3cba0:	str	r3, [sp, #16]
   3cba4:	ldr	r3, [r7, #-4]
   3cba8:	ldr	r2, [sp, #196]	; 0xc4
   3cbac:	ldr	r2, [r2, r4, lsl #2]
   3cbb0:	mla	lr, r2, r3, lr
   3cbb4:	add	r3, r4, #1
   3cbb8:	cmp	r9, r3
   3cbbc:	bgt	3cb24 <GetDataSlab+0x1b540>
   3cbc0:	ldr	r3, [sp, #8]
   3cbc4:	add	ip, r3, lr, lsl #2
   3cbc8:	ldr	r3, [sp, #28]
   3cbcc:	cmp	r3, #1
   3cbd0:	beq	38b6c <GetDataSlab+0x17588>
   3cbd4:	ldr	r3, [sp, #16]
   3cbd8:	cmp	r3, #0
   3cbdc:	movle	r3, #0
   3cbe0:	ble	251fc <GetDataSlab+0x3c18>
   3cbe4:	mov	r3, #0
   3cbe8:	str	r3, [sp, #20]
   3cbec:	mov	r8, r3
   3cbf0:	b	38db8 <GetDataSlab+0x177d4>
   3cbf4:	ldr	r3, [fp]
   3cbf8:	ldr	r2, [sp, #16]
   3cbfc:	mul	r3, r3, r2
   3cc00:	str	r3, [sp, #16]
   3cc04:	ldr	r3, [sp, #196]	; 0xc4
   3cc08:	ldr	r3, [r3]
   3cc0c:	ldr	r2, [r6, #-4]
   3cc10:	mla	lr, r2, r3, lr
   3cc14:	add	r4, r4, #1
   3cc18:	ldr	r2, [sp, #20]
   3cc1c:	ldr	r3, [r2, #4]!
   3cc20:	str	r2, [sp, #20]
   3cc24:	sub	r3, r3, #1
   3cc28:	str	r3, [r8], #4
   3cc2c:	ldr	r2, [sp, #12]
   3cc30:	ldr	r3, [r2], #4
   3cc34:	str	r2, [sp, #12]
   3cc38:	mov	ip, r3
   3cc3c:	add	r6, r6, #4
   3cc40:	mov	r7, r6
   3cc44:	str	r3, [r6]
   3cc48:	cmp	r4, #0
   3cc4c:	beq	3cbf4 <GetDataSlab+0x1b610>
   3cc50:	str	r8, [sp, #24]
   3cc54:	ldr	r0, [r8, #-4]
   3cc58:	mov	r1, r2
   3cc5c:	mov	r2, r1
   3cc60:	ldr	r3, [r1, #-4]!
   3cc64:	mul	r0, r3, r0
   3cc68:	ldr	r3, [r2]
   3cc6c:	mul	ip, r3, ip
   3cc70:	cmp	r5, r1
   3cc74:	bne	3cc5c <GetDataSlab+0x1b678>
   3cc78:	ldr	r3, [sp, #24]
   3cc7c:	str	r0, [r3, #-4]
   3cc80:	str	ip, [r7]
   3cc84:	ldr	r3, [fp, r4, lsl #2]
   3cc88:	ldr	r2, [sp, #16]
   3cc8c:	mul	r3, r3, r2
   3cc90:	str	r3, [sp, #16]
   3cc94:	ldr	r3, [r7, #-4]
   3cc98:	ldr	r2, [sp, #196]	; 0xc4
   3cc9c:	ldr	r2, [r2, r4, lsl #2]
   3cca0:	mla	lr, r2, r3, lr
   3cca4:	add	r3, r4, #1
   3cca8:	cmp	r3, r9
   3ccac:	blt	3cc14 <GetDataSlab+0x1b630>
   3ccb0:	ldr	r3, [sp, #8]
   3ccb4:	add	ip, r3, lr, lsl #2
   3ccb8:	ldr	r3, [sp, #28]
   3ccbc:	cmp	r3, #1
   3ccc0:	beq	384a4 <GetDataSlab+0x16ec0>
   3ccc4:	ldr	r3, [sp, #16]
   3ccc8:	cmp	r3, #0
   3cccc:	movle	r3, #0
   3ccd0:	ble	251fc <GetDataSlab+0x3c18>
   3ccd4:	mov	r3, #0
   3ccd8:	str	r3, [sp, #20]
   3ccdc:	mov	r8, r3
   3cce0:	b	386f8 <GetDataSlab+0x17114>
   3cce4:	ldr	r3, [fp]
   3cce8:	ldr	r2, [sp, #16]
   3ccec:	mul	r3, r3, r2
   3ccf0:	str	r3, [sp, #16]
   3ccf4:	ldr	r3, [sp, #196]	; 0xc4
   3ccf8:	ldr	r3, [r3]
   3ccfc:	ldr	r2, [r6, #-4]
   3cd00:	mla	lr, r2, r3, lr
   3cd04:	add	r4, r4, #1
   3cd08:	ldr	r2, [sp, #20]
   3cd0c:	ldr	r3, [r2, #4]!
   3cd10:	str	r2, [sp, #20]
   3cd14:	sub	r3, r3, #1
   3cd18:	str	r3, [r8], #4
   3cd1c:	ldr	r2, [sp, #12]
   3cd20:	ldr	r3, [r2], #4
   3cd24:	str	r2, [sp, #12]
   3cd28:	mov	ip, r3
   3cd2c:	add	r6, r6, #4
   3cd30:	mov	r7, r6
   3cd34:	str	r3, [r6]
   3cd38:	cmp	r4, #0
   3cd3c:	beq	3cce4 <GetDataSlab+0x1b700>
   3cd40:	str	r8, [sp, #24]
   3cd44:	ldr	r0, [r8, #-4]
   3cd48:	mov	r1, r2
   3cd4c:	mov	r2, r1
   3cd50:	ldr	r3, [r1, #-4]!
   3cd54:	mul	r0, r3, r0
   3cd58:	ldr	r3, [r2]
   3cd5c:	mul	ip, r3, ip
   3cd60:	cmp	r1, r5
   3cd64:	bne	3cd4c <GetDataSlab+0x1b768>
   3cd68:	ldr	r3, [sp, #24]
   3cd6c:	str	r0, [r3, #-4]
   3cd70:	str	ip, [r7]
   3cd74:	ldr	r3, [fp, r4, lsl #2]
   3cd78:	ldr	r2, [sp, #16]
   3cd7c:	mul	r3, r3, r2
   3cd80:	str	r3, [sp, #16]
   3cd84:	ldr	r3, [r7, #-4]
   3cd88:	ldr	r2, [sp, #196]	; 0xc4
   3cd8c:	ldr	r2, [r2, r4, lsl #2]
   3cd90:	mla	lr, r2, r3, lr
   3cd94:	add	r3, r4, #1
   3cd98:	cmp	r3, r9
   3cd9c:	blt	3cd04 <GetDataSlab+0x1b720>
   3cda0:	ldr	r3, [sp, #8]
   3cda4:	add	ip, r3, lr, lsl #3
   3cda8:	ldr	r3, [sp, #28]
   3cdac:	cmp	r3, #1
   3cdb0:	beq	38138 <GetDataSlab+0x16b54>
   3cdb4:	ldr	r3, [sp, #16]
   3cdb8:	cmp	r3, #0
   3cdbc:	movle	r3, #0
   3cdc0:	ble	251fc <GetDataSlab+0x3c18>
   3cdc4:	mov	r3, #0
   3cdc8:	str	r3, [sp, #20]
   3cdcc:	mov	r8, r3
   3cdd0:	b	3838c <GetDataSlab+0x16da8>
   3cdd4:	ldr	r3, [fp]
   3cdd8:	ldr	r2, [sp, #16]
   3cddc:	mul	r3, r3, r2
   3cde0:	str	r3, [sp, #16]
   3cde4:	ldr	r3, [r6, #-4]
   3cde8:	ldr	r2, [sp, #196]	; 0xc4
   3cdec:	ldr	r2, [r2]
   3cdf0:	mla	lr, r2, r3, lr
   3cdf4:	add	r4, r4, #1
   3cdf8:	ldr	r2, [sp, #20]
   3cdfc:	ldr	r3, [r2, #4]!
   3ce00:	str	r2, [sp, #20]
   3ce04:	sub	r3, r3, #1
   3ce08:	str	r3, [r8], #4
   3ce0c:	ldr	r2, [sp, #12]
   3ce10:	ldr	r3, [r2], #4
   3ce14:	str	r2, [sp, #12]
   3ce18:	mov	ip, r3
   3ce1c:	add	r6, r6, #4
   3ce20:	mov	r7, r6
   3ce24:	str	r3, [r6]
   3ce28:	cmp	r4, #0
   3ce2c:	beq	3cdd4 <GetDataSlab+0x1b7f0>
   3ce30:	str	r8, [sp, #24]
   3ce34:	ldr	r0, [r8, #-4]
   3ce38:	mov	r1, r2
   3ce3c:	mov	r2, r1
   3ce40:	ldr	r3, [r1, #-4]!
   3ce44:	mul	r0, r3, r0
   3ce48:	ldr	r3, [r2]
   3ce4c:	mul	ip, r3, ip
   3ce50:	cmp	r1, r5
   3ce54:	bne	3ce3c <GetDataSlab+0x1b858>
   3ce58:	ldr	r3, [sp, #24]
   3ce5c:	str	r0, [r3, #-4]
   3ce60:	str	ip, [r7]
   3ce64:	ldr	r3, [fp, r4, lsl #2]
   3ce68:	ldr	r2, [sp, #16]
   3ce6c:	mul	r3, r3, r2
   3ce70:	str	r3, [sp, #16]
   3ce74:	ldr	r3, [r7, #-4]
   3ce78:	ldr	r2, [sp, #196]	; 0xc4
   3ce7c:	ldr	r2, [r2, r4, lsl #2]
   3ce80:	mla	lr, r2, r3, lr
   3ce84:	add	r3, r4, #1
   3ce88:	cmp	r9, r3
   3ce8c:	bgt	3cdf4 <GetDataSlab+0x1b810>
   3ce90:	ldr	r3, [sp, #8]
   3ce94:	add	ip, r3, lr, lsl #3
   3ce98:	ldr	r3, [sp, #28]
   3ce9c:	cmp	r3, #1
   3cea0:	beq	339a4 <GetDataSlab+0x123c0>
   3cea4:	ldr	r3, [sp, #16]
   3cea8:	cmp	r3, #0
   3ceac:	movle	r3, #0
   3ceb0:	ble	251fc <GetDataSlab+0x3c18>
   3ceb4:	mov	r3, #0
   3ceb8:	str	r3, [sp, #20]
   3cebc:	mov	r8, r3
   3cec0:	b	33bf4 <GetDataSlab+0x12610>
   3cec4:	ldr	r3, [fp]
   3cec8:	ldr	r2, [sp, #16]
   3cecc:	mul	r3, r3, r2
   3ced0:	str	r3, [sp, #16]
   3ced4:	ldr	r3, [sp, #196]	; 0xc4
   3ced8:	ldr	r3, [r3]
   3cedc:	ldr	r2, [r6, #-4]
   3cee0:	mla	lr, r2, r3, lr
   3cee4:	add	r4, r4, #1
   3cee8:	ldr	r2, [sp, #20]
   3ceec:	ldr	r3, [r2, #4]!
   3cef0:	str	r2, [sp, #20]
   3cef4:	sub	r3, r3, #1
   3cef8:	str	r3, [r8], #4
   3cefc:	ldr	r2, [sp, #12]
   3cf00:	ldr	r3, [r2], #4
   3cf04:	str	r2, [sp, #12]
   3cf08:	mov	ip, r3
   3cf0c:	add	r6, r6, #4
   3cf10:	mov	r7, r6
   3cf14:	str	r3, [r6]
   3cf18:	cmp	r4, #0
   3cf1c:	beq	3cec4 <GetDataSlab+0x1b8e0>
   3cf20:	str	r8, [sp, #24]
   3cf24:	ldr	r0, [r8, #-4]
   3cf28:	mov	r1, r2
   3cf2c:	mov	r2, r1
   3cf30:	ldr	r3, [r1, #-4]!
   3cf34:	mul	r0, r3, r0
   3cf38:	ldr	r3, [r2]
   3cf3c:	mul	ip, r3, ip
   3cf40:	cmp	r5, r1
   3cf44:	bne	3cf2c <GetDataSlab+0x1b948>
   3cf48:	ldr	r3, [sp, #24]
   3cf4c:	str	r0, [r3, #-4]
   3cf50:	str	ip, [r7]
   3cf54:	ldr	r3, [fp, r4, lsl #2]
   3cf58:	ldr	r2, [sp, #16]
   3cf5c:	mul	r3, r3, r2
   3cf60:	str	r3, [sp, #16]
   3cf64:	ldr	r3, [r7, #-4]
   3cf68:	ldr	r2, [sp, #196]	; 0xc4
   3cf6c:	ldr	r2, [r2, r4, lsl #2]
   3cf70:	mla	lr, r2, r3, lr
   3cf74:	add	r3, r4, #1
   3cf78:	cmp	r3, r9
   3cf7c:	blt	3cee4 <GetDataSlab+0x1b900>
   3cf80:	ldr	r3, [sp, #8]
   3cf84:	add	ip, r3, lr, lsl #3
   3cf88:	ldr	r3, [sp, #28]
   3cf8c:	cmp	r3, #1
   3cf90:	beq	336a0 <GetDataSlab+0x120bc>
   3cf94:	ldr	r3, [sp, #16]
   3cf98:	cmp	r3, #0
   3cf9c:	movgt	r3, #0
   3cfa0:	strgt	r3, [sp, #20]
   3cfa4:	movgt	r8, r3
   3cfa8:	bgt	338e8 <GetDataSlab+0x12304>
   3cfac:	mov	r3, #0
   3cfb0:	b	251fc <GetDataSlab+0x3c18>
   3cfb4:	ldr	r3, [fp]
   3cfb8:	ldr	r2, [sp, #16]
   3cfbc:	mul	r3, r3, r2
   3cfc0:	str	r3, [sp, #16]
   3cfc4:	ldr	r3, [sp, #196]	; 0xc4
   3cfc8:	ldr	r3, [r3]
   3cfcc:	ldr	r2, [r5, #-4]
   3cfd0:	mla	lr, r2, r3, lr
   3cfd4:	add	r8, r8, #1
   3cfd8:	ldr	r2, [sp, #20]
   3cfdc:	ldr	r3, [r2, #4]!
   3cfe0:	str	r2, [sp, #20]
   3cfe4:	sub	r3, r3, #1
   3cfe8:	str	r3, [r7], #4
   3cfec:	ldr	r2, [sp, #12]
   3cff0:	ldr	r3, [r2], #4
   3cff4:	str	r2, [sp, #12]
   3cff8:	mov	ip, r3
   3cffc:	add	r5, r5, #4
   3d000:	mov	r6, r5
   3d004:	str	r3, [r5]
   3d008:	cmp	r8, #0
   3d00c:	beq	3cfb4 <GetDataSlab+0x1b9d0>
   3d010:	str	r7, [sp, #24]
   3d014:	ldr	r0, [r7, #-4]
   3d018:	mov	r1, r2
   3d01c:	mov	r2, r1
   3d020:	ldr	r3, [r1, #-4]!
   3d024:	mul	r0, r3, r0
   3d028:	ldr	r3, [r2]
   3d02c:	mul	ip, r3, ip
   3d030:	cmp	r1, r4
   3d034:	bne	3d01c <GetDataSlab+0x1ba38>
   3d038:	ldr	r3, [sp, #24]
   3d03c:	str	r0, [r3, #-4]
   3d040:	str	ip, [r6]
   3d044:	ldr	r3, [fp, r8, lsl #2]
   3d048:	ldr	r2, [sp, #16]
   3d04c:	mul	r3, r3, r2
   3d050:	str	r3, [sp, #16]
   3d054:	ldr	r3, [r6, #-4]
   3d058:	ldr	r2, [sp, #196]	; 0xc4
   3d05c:	ldr	r2, [r2, r8, lsl #2]
   3d060:	mla	lr, r2, r3, lr
   3d064:	add	r3, r8, #1
   3d068:	cmp	r9, r3
   3d06c:	bgt	3cfd4 <GetDataSlab+0x1b9f0>
   3d070:	ldr	r3, [sp, #8]
   3d074:	add	ip, r3, lr
   3d078:	ldr	r3, [sp, #28]
   3d07c:	cmp	r3, #1
   3d080:	beq	32f80 <GetDataSlab+0x1199c>
   3d084:	ldr	r3, [sp, #16]
   3d088:	cmp	r3, #0
   3d08c:	movle	r3, #0
   3d090:	ble	251fc <GetDataSlab+0x3c18>
   3d094:	mov	r3, #0
   3d098:	str	r3, [sp, #20]
   3d09c:	mov	r8, r3
   3d0a0:	b	331d0 <GetDataSlab+0x11bec>
   3d0a4:	ldr	r3, [fp]
   3d0a8:	ldr	r2, [sp, #16]
   3d0ac:	mul	r3, r3, r2
   3d0b0:	str	r3, [sp, #16]
   3d0b4:	ldr	r3, [r6, #-4]
   3d0b8:	ldr	r2, [sp, #196]	; 0xc4
   3d0bc:	ldr	r2, [r2]
   3d0c0:	mla	lr, r2, r3, lr
   3d0c4:	add	r4, r4, #1
   3d0c8:	ldr	r2, [sp, #20]
   3d0cc:	ldr	r3, [r2, #4]!
   3d0d0:	str	r2, [sp, #20]
   3d0d4:	sub	r3, r3, #1
   3d0d8:	str	r3, [r8], #4
   3d0dc:	ldr	r2, [sp, #12]
   3d0e0:	ldr	r3, [r2], #4
   3d0e4:	str	r2, [sp, #12]
   3d0e8:	mov	ip, r3
   3d0ec:	add	r6, r6, #4
   3d0f0:	mov	r7, r6
   3d0f4:	str	r3, [r6]
   3d0f8:	cmp	r4, #0
   3d0fc:	beq	3d0a4 <GetDataSlab+0x1bac0>
   3d100:	str	r8, [sp, #24]
   3d104:	ldr	r0, [r8, #-4]
   3d108:	mov	r1, r2
   3d10c:	mov	r2, r1
   3d110:	ldr	r3, [r1, #-4]!
   3d114:	mul	r0, r3, r0
   3d118:	ldr	r3, [r2]
   3d11c:	mul	ip, r3, ip
   3d120:	cmp	r1, r5
   3d124:	bne	3d10c <GetDataSlab+0x1bb28>
   3d128:	ldr	r3, [sp, #24]
   3d12c:	str	r0, [r3, #-4]
   3d130:	str	ip, [r7]
   3d134:	ldr	r3, [fp, r4, lsl #2]
   3d138:	ldr	r2, [sp, #16]
   3d13c:	mul	r3, r3, r2
   3d140:	str	r3, [sp, #16]
   3d144:	ldr	r3, [r7, #-4]
   3d148:	ldr	r2, [sp, #196]	; 0xc4
   3d14c:	ldr	r2, [r2, r4, lsl #2]
   3d150:	mla	lr, r2, r3, lr
   3d154:	add	r3, r4, #1
   3d158:	cmp	r9, r3
   3d15c:	bgt	3d0c4 <GetDataSlab+0x1bae0>
   3d160:	ldr	r3, [sp, #8]
   3d164:	add	ip, r3, lr
   3d168:	ldr	r3, [sp, #28]
   3d16c:	cmp	r3, #1
   3d170:	beq	332e0 <GetDataSlab+0x11cfc>
   3d174:	ldr	r3, [sp, #16]
   3d178:	cmp	r3, #0
   3d17c:	movle	r3, #0
   3d180:	ble	251fc <GetDataSlab+0x3c18>
   3d184:	mov	r3, #0
   3d188:	str	r3, [sp, #20]
   3d18c:	mov	r8, r3
   3d190:	b	33530 <GetDataSlab+0x11f4c>
   3d194:	ldr	r3, [fp]
   3d198:	ldr	r2, [sp, #16]
   3d19c:	mul	r3, r3, r2
   3d1a0:	str	r3, [sp, #16]
   3d1a4:	ldr	r3, [sp, #196]	; 0xc4
   3d1a8:	ldr	r3, [r3]
   3d1ac:	ldr	r2, [r6, #-4]
   3d1b0:	mla	lr, r2, r3, lr
   3d1b4:	add	r4, r4, #1
   3d1b8:	ldr	r2, [sp, #20]
   3d1bc:	ldr	r3, [r2, #4]!
   3d1c0:	str	r2, [sp, #20]
   3d1c4:	sub	r3, r3, #1
   3d1c8:	str	r3, [r8], #4
   3d1cc:	ldr	r2, [sp, #12]
   3d1d0:	ldr	r3, [r2], #4
   3d1d4:	str	r2, [sp, #12]
   3d1d8:	mov	ip, r3
   3d1dc:	add	r6, r6, #4
   3d1e0:	mov	r7, r6
   3d1e4:	str	r3, [r6]
   3d1e8:	cmp	r4, #0
   3d1ec:	beq	3d194 <GetDataSlab+0x1bbb0>
   3d1f0:	str	r8, [sp, #24]
   3d1f4:	ldr	r0, [r8, #-4]
   3d1f8:	mov	r1, r2
   3d1fc:	mov	r2, r1
   3d200:	ldr	r3, [r1, #-4]!
   3d204:	mul	r0, r3, r0
   3d208:	ldr	r3, [r2]
   3d20c:	mul	ip, r3, ip
   3d210:	cmp	r1, r5
   3d214:	bne	3d1fc <GetDataSlab+0x1bc18>
   3d218:	ldr	r3, [sp, #24]
   3d21c:	str	r0, [r3, #-4]
   3d220:	str	ip, [r7]
   3d224:	ldr	r3, [fp, r4, lsl #2]
   3d228:	ldr	r2, [sp, #16]
   3d22c:	mul	r3, r3, r2
   3d230:	str	r3, [sp, #16]
   3d234:	ldr	r3, [r7, #-4]
   3d238:	ldr	r2, [sp, #196]	; 0xc4
   3d23c:	ldr	r2, [r2, r4, lsl #2]
   3d240:	mla	lr, r2, r3, lr
   3d244:	add	r3, r4, #1
   3d248:	cmp	r9, r3
   3d24c:	bgt	3d1b4 <GetDataSlab+0x1bbd0>
   3d250:	ldr	r3, [sp, #8]
   3d254:	add	ip, r3, lr, lsl #1
   3d258:	ldr	r3, [sp, #28]
   3d25c:	cmp	r3, #1
   3d260:	beq	328cc <GetDataSlab+0x112e8>
   3d264:	ldr	r3, [sp, #16]
   3d268:	cmp	r3, #0
   3d26c:	movle	r3, #0
   3d270:	ble	251fc <GetDataSlab+0x3c18>
   3d274:	mov	r3, #0
   3d278:	str	r3, [sp, #20]
   3d27c:	mov	r8, r3
   3d280:	b	32b18 <GetDataSlab+0x11534>
   3d284:	ldr	r3, [fp]
   3d288:	ldr	r2, [sp, #16]
   3d28c:	mul	r3, r3, r2
   3d290:	str	r3, [sp, #16]
   3d294:	ldr	r3, [sp, #196]	; 0xc4
   3d298:	ldr	r3, [r3]
   3d29c:	ldr	r2, [r6, #-4]
   3d2a0:	mla	lr, r2, r3, lr
   3d2a4:	add	r4, r4, #1
   3d2a8:	ldr	r2, [sp, #20]
   3d2ac:	ldr	r3, [r2, #4]!
   3d2b0:	str	r2, [sp, #20]
   3d2b4:	sub	r3, r3, #1
   3d2b8:	str	r3, [r8], #4
   3d2bc:	ldr	r2, [sp, #12]
   3d2c0:	ldr	r3, [r2], #4
   3d2c4:	str	r2, [sp, #12]
   3d2c8:	mov	ip, r3
   3d2cc:	add	r6, r6, #4
   3d2d0:	mov	r7, r6
   3d2d4:	str	r3, [r6]
   3d2d8:	cmp	r4, #0
   3d2dc:	beq	3d284 <GetDataSlab+0x1bca0>
   3d2e0:	str	r8, [sp, #24]
   3d2e4:	ldr	r0, [r8, #-4]
   3d2e8:	mov	r1, r2
   3d2ec:	mov	r2, r1
   3d2f0:	ldr	r3, [r1, #-4]!
   3d2f4:	mul	r0, r3, r0
   3d2f8:	ldr	r3, [r2]
   3d2fc:	mul	ip, r3, ip
   3d300:	cmp	r1, r5
   3d304:	bne	3d2ec <GetDataSlab+0x1bd08>
   3d308:	ldr	r3, [sp, #24]
   3d30c:	str	r0, [r3, #-4]
   3d310:	str	ip, [r7]
   3d314:	ldr	r3, [fp, r4, lsl #2]
   3d318:	ldr	r2, [sp, #16]
   3d31c:	mul	r3, r3, r2
   3d320:	str	r3, [sp, #16]
   3d324:	ldr	r3, [r7, #-4]
   3d328:	ldr	r2, [sp, #196]	; 0xc4
   3d32c:	ldr	r2, [r2, r4, lsl #2]
   3d330:	mla	lr, r2, r3, lr
   3d334:	add	r3, r4, #1
   3d338:	cmp	r9, r3
   3d33c:	bgt	3d2a4 <GetDataSlab+0x1bcc0>
   3d340:	ldr	r3, [sp, #8]
   3d344:	add	ip, r3, lr, lsl #1
   3d348:	ldr	r3, [sp, #28]
   3d34c:	cmp	r3, #1
   3d350:	beq	32c28 <GetDataSlab+0x11644>
   3d354:	ldr	r3, [sp, #16]
   3d358:	cmp	r3, #0
   3d35c:	movle	r3, #0
   3d360:	ble	251fc <GetDataSlab+0x3c18>
   3d364:	mov	r3, #0
   3d368:	str	r3, [sp, #20]
   3d36c:	mov	r8, r3
   3d370:	b	32e74 <GetDataSlab+0x11890>
   3d374:	ldr	r3, [fp]
   3d378:	ldr	r2, [sp, #16]
   3d37c:	mul	r3, r3, r2
   3d380:	str	r3, [sp, #16]
   3d384:	ldr	r3, [r6, #-4]
   3d388:	ldr	r2, [sp, #196]	; 0xc4
   3d38c:	ldr	r2, [r2]
   3d390:	mla	lr, r2, r3, lr
   3d394:	add	r4, r4, #1
   3d398:	ldr	r2, [sp, #20]
   3d39c:	ldr	r3, [r2, #4]!
   3d3a0:	str	r2, [sp, #20]
   3d3a4:	sub	r3, r3, #1
   3d3a8:	str	r3, [r8], #4
   3d3ac:	ldr	r2, [sp, #12]
   3d3b0:	ldr	r3, [r2], #4
   3d3b4:	str	r2, [sp, #12]
   3d3b8:	mov	ip, r3
   3d3bc:	add	r6, r6, #4
   3d3c0:	mov	r7, r6
   3d3c4:	str	r3, [r6]
   3d3c8:	cmp	r4, #0
   3d3cc:	beq	3d374 <GetDataSlab+0x1bd90>
   3d3d0:	str	r8, [sp, #24]
   3d3d4:	ldr	r0, [r8, #-4]
   3d3d8:	mov	r1, r2
   3d3dc:	mov	r2, r1
   3d3e0:	ldr	r3, [r1, #-4]!
   3d3e4:	mul	r0, r3, r0
   3d3e8:	ldr	r3, [r2]
   3d3ec:	mul	ip, r3, ip
   3d3f0:	cmp	r1, r5
   3d3f4:	bne	3d3dc <GetDataSlab+0x1bdf8>
   3d3f8:	ldr	r3, [sp, #24]
   3d3fc:	str	r0, [r3, #-4]
   3d400:	str	ip, [r7]
   3d404:	ldr	r3, [fp, r4, lsl #2]
   3d408:	ldr	r2, [sp, #16]
   3d40c:	mul	r3, r3, r2
   3d410:	str	r3, [sp, #16]
   3d414:	ldr	r3, [r7, #-4]
   3d418:	ldr	r2, [sp, #196]	; 0xc4
   3d41c:	ldr	r2, [r2, r4, lsl #2]
   3d420:	mla	lr, r2, r3, lr
   3d424:	add	r3, r4, #1
   3d428:	cmp	r9, r3
   3d42c:	bgt	3d394 <GetDataSlab+0x1bdb0>
   3d430:	ldr	r3, [sp, #8]
   3d434:	add	ip, r3, lr, lsl #2
   3d438:	ldr	r3, [sp, #28]
   3d43c:	cmp	r3, #1
   3d440:	beq	32214 <GetDataSlab+0x10c30>
   3d444:	ldr	r3, [sp, #16]
   3d448:	cmp	r3, #0
   3d44c:	movle	r3, #0
   3d450:	ble	251fc <GetDataSlab+0x3c18>
   3d454:	mov	r3, #0
   3d458:	str	r3, [sp, #20]
   3d45c:	mov	r8, r3
   3d460:	b	32460 <GetDataSlab+0x10e7c>
   3d464:	ldr	r3, [fp]
   3d468:	ldr	r2, [sp, #16]
   3d46c:	mul	r3, r3, r2
   3d470:	str	r3, [sp, #16]
   3d474:	ldr	r3, [r6, #-4]
   3d478:	ldr	r2, [sp, #196]	; 0xc4
   3d47c:	ldr	r2, [r2]
   3d480:	mla	lr, r2, r3, lr
   3d484:	add	r4, r4, #1
   3d488:	ldr	r2, [sp, #20]
   3d48c:	ldr	r3, [r2, #4]!
   3d490:	str	r2, [sp, #20]
   3d494:	sub	r3, r3, #1
   3d498:	str	r3, [r8], #4
   3d49c:	ldr	r2, [sp, #12]
   3d4a0:	ldr	r3, [r2], #4
   3d4a4:	str	r2, [sp, #12]
   3d4a8:	mov	ip, r3
   3d4ac:	add	r6, r6, #4
   3d4b0:	mov	r7, r6
   3d4b4:	str	r3, [r6]
   3d4b8:	cmp	r4, #0
   3d4bc:	beq	3d464 <GetDataSlab+0x1be80>
   3d4c0:	str	r8, [sp, #24]
   3d4c4:	ldr	r0, [r8, #-4]
   3d4c8:	mov	r1, r2
   3d4cc:	mov	r2, r1
   3d4d0:	ldr	r3, [r1, #-4]!
   3d4d4:	mul	r0, r3, r0
   3d4d8:	ldr	r3, [r2]
   3d4dc:	mul	ip, r3, ip
   3d4e0:	cmp	r1, r5
   3d4e4:	bne	3d4cc <GetDataSlab+0x1bee8>
   3d4e8:	ldr	r3, [sp, #24]
   3d4ec:	str	r0, [r3, #-4]
   3d4f0:	str	ip, [r7]
   3d4f4:	ldr	r3, [fp, r4, lsl #2]
   3d4f8:	ldr	r2, [sp, #16]
   3d4fc:	mul	r3, r3, r2
   3d500:	str	r3, [sp, #16]
   3d504:	ldr	r3, [r7, #-4]
   3d508:	ldr	r2, [sp, #196]	; 0xc4
   3d50c:	ldr	r2, [r2, r4, lsl #2]
   3d510:	mla	lr, r2, r3, lr
   3d514:	add	r3, r4, #1
   3d518:	cmp	r9, r3
   3d51c:	bgt	3d484 <GetDataSlab+0x1bea0>
   3d520:	ldr	r3, [sp, #8]
   3d524:	add	ip, r3, lr, lsl #2
   3d528:	ldr	r3, [sp, #28]
   3d52c:	cmp	r3, #1
   3d530:	beq	32570 <GetDataSlab+0x10f8c>
   3d534:	ldr	r3, [sp, #16]
   3d538:	cmp	r3, #0
   3d53c:	movle	r3, #0
   3d540:	ble	251fc <GetDataSlab+0x3c18>
   3d544:	mov	r3, #0
   3d548:	str	r3, [sp, #20]
   3d54c:	mov	r8, r3
   3d550:	b	327bc <GetDataSlab+0x111d8>
   3d554:	ldr	r3, [fp]
   3d558:	ldr	r2, [sp, #16]
   3d55c:	mul	r3, r3, r2
   3d560:	str	r3, [sp, #16]
   3d564:	ldr	r3, [r6, #-4]
   3d568:	ldr	r2, [sp, #196]	; 0xc4
   3d56c:	ldr	r2, [r2]
   3d570:	mla	lr, r2, r3, lr
   3d574:	add	r4, r4, #1
   3d578:	ldr	r2, [sp, #20]
   3d57c:	ldr	r3, [r2, #4]!
   3d580:	str	r2, [sp, #20]
   3d584:	sub	r3, r3, #1
   3d588:	str	r3, [r8], #4
   3d58c:	ldr	r2, [sp, #12]
   3d590:	ldr	r3, [r2], #4
   3d594:	str	r2, [sp, #12]
   3d598:	mov	ip, r3
   3d59c:	add	r6, r6, #4
   3d5a0:	mov	r7, r6
   3d5a4:	str	r3, [r6]
   3d5a8:	cmp	r4, #0
   3d5ac:	beq	3d554 <GetDataSlab+0x1bf70>
   3d5b0:	str	r8, [sp, #24]
   3d5b4:	ldr	r0, [r8, #-4]
   3d5b8:	mov	r1, r2
   3d5bc:	mov	r2, r1
   3d5c0:	ldr	r3, [r1, #-4]!
   3d5c4:	mul	r0, r3, r0
   3d5c8:	ldr	r3, [r2]
   3d5cc:	mul	ip, r3, ip
   3d5d0:	cmp	r1, r5
   3d5d4:	bne	3d5bc <GetDataSlab+0x1bfd8>
   3d5d8:	ldr	r3, [sp, #24]
   3d5dc:	str	r0, [r3, #-4]
   3d5e0:	str	ip, [r7]
   3d5e4:	ldr	r3, [fp, r4, lsl #2]
   3d5e8:	ldr	r2, [sp, #16]
   3d5ec:	mul	r3, r3, r2
   3d5f0:	str	r3, [sp, #16]
   3d5f4:	ldr	r3, [r7, #-4]
   3d5f8:	ldr	r2, [sp, #196]	; 0xc4
   3d5fc:	ldr	r2, [r2, r4, lsl #2]
   3d600:	mla	lr, r2, r3, lr
   3d604:	add	r3, r4, #1
   3d608:	cmp	r9, r3
   3d60c:	bgt	3d574 <GetDataSlab+0x1bf90>
   3d610:	ldr	r3, [sp, #8]
   3d614:	add	ip, r3, lr, lsl #2
   3d618:	ldr	r3, [sp, #28]
   3d61c:	cmp	r3, #1
   3d620:	beq	31ea8 <GetDataSlab+0x108c4>
   3d624:	ldr	r3, [sp, #16]
   3d628:	cmp	r3, #0
   3d62c:	movle	r3, #0
   3d630:	ble	251fc <GetDataSlab+0x3c18>
   3d634:	mov	r3, #0
   3d638:	str	r3, [sp, #20]
   3d63c:	mov	r8, r3
   3d640:	b	320fc <GetDataSlab+0x10b18>
   3d644:	ldr	r3, [fp]
   3d648:	ldr	r2, [sp, #16]
   3d64c:	mul	r3, r3, r2
   3d650:	str	r3, [sp, #16]
   3d654:	ldr	r3, [sp, #196]	; 0xc4
   3d658:	ldr	r3, [r3]
   3d65c:	ldr	r2, [r6, #-4]
   3d660:	mla	lr, r2, r3, lr
   3d664:	add	r4, r4, #1
   3d668:	ldr	r2, [sp, #20]
   3d66c:	ldr	r3, [r2, #4]!
   3d670:	str	r2, [sp, #20]
   3d674:	sub	r3, r3, #1
   3d678:	str	r3, [r8], #4
   3d67c:	ldr	r2, [sp, #12]
   3d680:	ldr	r3, [r2], #4
   3d684:	str	r2, [sp, #12]
   3d688:	mov	ip, r3
   3d68c:	add	r6, r6, #4
   3d690:	mov	r7, r6
   3d694:	str	r3, [r6]
   3d698:	cmp	r4, #0
   3d69c:	beq	3d644 <GetDataSlab+0x1c060>
   3d6a0:	str	r8, [sp, #24]
   3d6a4:	ldr	r0, [r8, #-4]
   3d6a8:	mov	r1, r2
   3d6ac:	mov	r2, r1
   3d6b0:	ldr	r3, [r1, #-4]!
   3d6b4:	mul	r0, r3, r0
   3d6b8:	ldr	r3, [r2]
   3d6bc:	mul	ip, r3, ip
   3d6c0:	cmp	r1, r5
   3d6c4:	bne	3d6ac <GetDataSlab+0x1c0c8>
   3d6c8:	ldr	r3, [sp, #24]
   3d6cc:	str	r0, [r3, #-4]
   3d6d0:	str	ip, [r7]
   3d6d4:	ldr	r3, [fp, r4, lsl #2]
   3d6d8:	ldr	r2, [sp, #16]
   3d6dc:	mul	r3, r3, r2
   3d6e0:	str	r3, [sp, #16]
   3d6e4:	ldr	r3, [r7, #-4]
   3d6e8:	ldr	r2, [sp, #196]	; 0xc4
   3d6ec:	ldr	r2, [r2, r4, lsl #2]
   3d6f0:	mla	lr, r2, r3, lr
   3d6f4:	add	r3, r4, #1
   3d6f8:	cmp	r9, r3
   3d6fc:	bgt	3d664 <GetDataSlab+0x1c080>
   3d700:	ldr	r3, [sp, #8]
   3d704:	add	ip, r3, lr, lsl #3
   3d708:	ldr	r3, [sp, #28]
   3d70c:	cmp	r3, #1
   3d710:	beq	31b3c <GetDataSlab+0x10558>
   3d714:	ldr	r3, [sp, #16]
   3d718:	cmp	r3, #0
   3d71c:	movle	r3, #0
   3d720:	ble	251fc <GetDataSlab+0x3c18>
   3d724:	mov	r3, #0
   3d728:	str	r3, [sp, #20]
   3d72c:	mov	r8, r3
   3d730:	b	31d90 <GetDataSlab+0x107ac>
   3d734:	ldr	r3, [fp]
   3d738:	ldr	r2, [sp, #16]
   3d73c:	mul	r3, r3, r2
   3d740:	str	r3, [sp, #16]
   3d744:	ldr	r3, [r6, #-4]
   3d748:	ldr	r2, [sp, #196]	; 0xc4
   3d74c:	ldr	r2, [r2]
   3d750:	mla	lr, r2, r3, lr
   3d754:	add	r4, r4, #1
   3d758:	ldr	r2, [sp, #20]
   3d75c:	ldr	r3, [r2, #4]!
   3d760:	str	r2, [sp, #20]
   3d764:	sub	r3, r3, #1
   3d768:	str	r3, [r8], #4
   3d76c:	ldr	r2, [sp, #12]
   3d770:	ldr	r3, [r2], #4
   3d774:	str	r2, [sp, #12]
   3d778:	mov	ip, r3
   3d77c:	add	r6, r6, #4
   3d780:	mov	r7, r6
   3d784:	str	r3, [r6]
   3d788:	cmp	r4, #0
   3d78c:	beq	3d734 <GetDataSlab+0x1c150>
   3d790:	str	r8, [sp, #24]
   3d794:	ldr	r0, [r8, #-4]
   3d798:	mov	r1, r2
   3d79c:	mov	r2, r1
   3d7a0:	ldr	r3, [r1, #-4]!
   3d7a4:	mul	r0, r3, r0
   3d7a8:	ldr	r3, [r2]
   3d7ac:	mul	ip, r3, ip
   3d7b0:	cmp	r1, r5
   3d7b4:	bne	3d79c <GetDataSlab+0x1c1b8>
   3d7b8:	ldr	r3, [sp, #24]
   3d7bc:	str	r0, [r3, #-4]
   3d7c0:	str	ip, [r7]
   3d7c4:	ldr	r3, [fp, r4, lsl #2]
   3d7c8:	ldr	r2, [sp, #16]
   3d7cc:	mul	r3, r3, r2
   3d7d0:	str	r3, [sp, #16]
   3d7d4:	ldr	r3, [r7, #-4]
   3d7d8:	ldr	r2, [sp, #196]	; 0xc4
   3d7dc:	ldr	r2, [r2, r4, lsl #2]
   3d7e0:	mla	lr, r2, r3, lr
   3d7e4:	add	r3, r4, #1
   3d7e8:	cmp	r9, r3
   3d7ec:	bgt	3d754 <GetDataSlab+0x1c170>
   3d7f0:	ldr	r3, [sp, #8]
   3d7f4:	add	ip, r3, lr, lsl #3
   3d7f8:	ldr	r3, [sp, #28]
   3d7fc:	cmp	r3, #1
   3d800:	beq	35ba0 <GetDataSlab+0x145bc>
   3d804:	ldr	r3, [sp, #16]
   3d808:	cmp	r3, #0
   3d80c:	movle	r3, #0
   3d810:	ble	251fc <GetDataSlab+0x3c18>
   3d814:	mov	r3, #0
   3d818:	str	r3, [sp, #20]
   3d81c:	mov	r8, r3
   3d820:	b	35df0 <GetDataSlab+0x1480c>
   3d824:	ldr	r3, [fp]
   3d828:	ldr	r2, [sp, #16]
   3d82c:	mul	r3, r3, r2
   3d830:	str	r3, [sp, #16]
   3d834:	ldr	r3, [sp, #196]	; 0xc4
   3d838:	ldr	r3, [r3]
   3d83c:	ldr	r2, [r6, #-4]
   3d840:	mla	lr, r2, r3, lr
   3d844:	add	r4, r4, #1
   3d848:	ldr	r2, [sp, #20]
   3d84c:	ldr	r3, [r2, #4]!
   3d850:	str	r2, [sp, #20]
   3d854:	sub	r3, r3, #1
   3d858:	str	r3, [r8], #4
   3d85c:	ldr	r2, [sp, #12]
   3d860:	ldr	r3, [r2], #4
   3d864:	str	r2, [sp, #12]
   3d868:	mov	ip, r3
   3d86c:	add	r6, r6, #4
   3d870:	mov	r7, r6
   3d874:	str	r3, [r6]
   3d878:	cmp	r4, #0
   3d87c:	beq	3d824 <GetDataSlab+0x1c240>
   3d880:	str	r8, [sp, #24]
   3d884:	ldr	r0, [r8, #-4]
   3d888:	mov	r1, r2
   3d88c:	mov	r2, r1
   3d890:	ldr	r3, [r1, #-4]!
   3d894:	mul	r0, r3, r0
   3d898:	ldr	r3, [r2]
   3d89c:	mul	ip, r3, ip
   3d8a0:	cmp	r1, r5
   3d8a4:	bne	3d88c <GetDataSlab+0x1c2a8>
   3d8a8:	ldr	r3, [sp, #24]
   3d8ac:	str	r0, [r3, #-4]
   3d8b0:	str	ip, [r7]
   3d8b4:	ldr	r3, [fp, r4, lsl #2]
   3d8b8:	ldr	r2, [sp, #16]
   3d8bc:	mul	r3, r3, r2
   3d8c0:	str	r3, [sp, #16]
   3d8c4:	ldr	r3, [r7, #-4]
   3d8c8:	ldr	r2, [sp, #196]	; 0xc4
   3d8cc:	ldr	r2, [r2, r4, lsl #2]
   3d8d0:	mla	lr, r2, r3, lr
   3d8d4:	add	r3, r4, #1
   3d8d8:	cmp	r9, r3
   3d8dc:	bgt	3d844 <GetDataSlab+0x1c260>
   3d8e0:	ldr	r3, [sp, #8]
   3d8e4:	add	ip, r3, lr, lsl #3
   3d8e8:	ldr	r3, [sp, #28]
   3d8ec:	cmp	r3, #1
   3d8f0:	beq	3589c <GetDataSlab+0x142b8>
   3d8f4:	ldr	r3, [sp, #16]
   3d8f8:	cmp	r3, #0
   3d8fc:	movgt	r3, #0
   3d900:	strgt	r3, [sp, #20]
   3d904:	movgt	r8, r3
   3d908:	bgt	35ae4 <GetDataSlab+0x14500>
   3d90c:	mov	r3, #0
   3d910:	b	251fc <GetDataSlab+0x3c18>
   3d914:	ldr	r3, [fp]
   3d918:	ldr	r2, [sp, #16]
   3d91c:	mul	r3, r3, r2
   3d920:	str	r3, [sp, #16]
   3d924:	ldr	r3, [sp, #196]	; 0xc4
   3d928:	ldr	r3, [r3]
   3d92c:	ldr	r2, [r5, #-4]
   3d930:	mla	lr, r2, r3, lr
   3d934:	add	r8, r8, #1
   3d938:	ldr	r2, [sp, #20]
   3d93c:	ldr	r3, [r2, #4]!
   3d940:	str	r2, [sp, #20]
   3d944:	sub	r3, r3, #1
   3d948:	str	r3, [r7], #4
   3d94c:	ldr	r2, [sp, #12]
   3d950:	ldr	r3, [r2], #4
   3d954:	str	r2, [sp, #12]
   3d958:	mov	ip, r3
   3d95c:	add	r5, r5, #4
   3d960:	mov	r6, r5
   3d964:	str	r3, [r5]
   3d968:	cmp	r8, #0
   3d96c:	beq	3d914 <GetDataSlab+0x1c330>
   3d970:	str	r7, [sp, #24]
   3d974:	ldr	r0, [r7, #-4]
   3d978:	mov	r1, r2
   3d97c:	mov	r2, r1
   3d980:	ldr	r3, [r1, #-4]!
   3d984:	mul	r0, r3, r0
   3d988:	ldr	r3, [r2]
   3d98c:	mul	ip, r3, ip
   3d990:	cmp	r1, r4
   3d994:	bne	3d97c <GetDataSlab+0x1c398>
   3d998:	ldr	r3, [sp, #24]
   3d99c:	str	r0, [r3, #-4]
   3d9a0:	str	ip, [r6]
   3d9a4:	ldr	r3, [fp, r8, lsl #2]
   3d9a8:	ldr	r2, [sp, #16]
   3d9ac:	mul	r3, r3, r2
   3d9b0:	str	r3, [sp, #16]
   3d9b4:	ldr	r3, [r6, #-4]
   3d9b8:	ldr	r2, [sp, #196]	; 0xc4
   3d9bc:	ldr	r2, [r2, r8, lsl #2]
   3d9c0:	mla	lr, r2, r3, lr
   3d9c4:	add	r3, r8, #1
   3d9c8:	cmp	r9, r3
   3d9cc:	bgt	3d934 <GetDataSlab+0x1c350>
   3d9d0:	ldr	r3, [sp, #8]
   3d9d4:	add	ip, r3, lr
   3d9d8:	ldr	r3, [sp, #28]
   3d9dc:	cmp	r3, #1
   3d9e0:	beq	3517c <GetDataSlab+0x13b98>
   3d9e4:	ldr	r3, [sp, #16]
   3d9e8:	cmp	r3, #0
   3d9ec:	movle	r3, #0
   3d9f0:	ble	251fc <GetDataSlab+0x3c18>
   3d9f4:	mov	r3, #0
   3d9f8:	str	r3, [sp, #20]
   3d9fc:	mov	r8, r3
   3da00:	b	353cc <GetDataSlab+0x13de8>
   3da04:	ldr	r3, [fp]
   3da08:	ldr	r2, [sp, #16]
   3da0c:	mul	r3, r3, r2
   3da10:	str	r3, [sp, #16]
   3da14:	ldr	r3, [sp, #196]	; 0xc4
   3da18:	ldr	r3, [r3]
   3da1c:	ldr	r2, [r6, #-4]
   3da20:	mla	lr, r2, r3, lr
   3da24:	add	r4, r4, #1
   3da28:	ldr	r2, [sp, #20]
   3da2c:	ldr	r3, [r2, #4]!
   3da30:	str	r2, [sp, #20]
   3da34:	sub	r3, r3, #1
   3da38:	str	r3, [r8], #4
   3da3c:	ldr	r2, [sp, #12]
   3da40:	ldr	r3, [r2], #4
   3da44:	str	r2, [sp, #12]
   3da48:	mov	ip, r3
   3da4c:	add	r6, r6, #4
   3da50:	mov	r7, r6
   3da54:	str	r3, [r6]
   3da58:	cmp	r4, #0
   3da5c:	beq	3da04 <GetDataSlab+0x1c420>
   3da60:	str	r8, [sp, #24]
   3da64:	ldr	r0, [r8, #-4]
   3da68:	mov	r1, r2
   3da6c:	mov	r2, r1
   3da70:	ldr	r3, [r1, #-4]!
   3da74:	mul	r0, r3, r0
   3da78:	ldr	r3, [r2]
   3da7c:	mul	ip, r3, ip
   3da80:	cmp	r1, r5
   3da84:	bne	3da6c <GetDataSlab+0x1c488>
   3da88:	ldr	r3, [sp, #24]
   3da8c:	str	r0, [r3, #-4]
   3da90:	str	ip, [r7]
   3da94:	ldr	r3, [fp, r4, lsl #2]
   3da98:	ldr	r2, [sp, #16]
   3da9c:	mul	r3, r3, r2
   3daa0:	str	r3, [sp, #16]
   3daa4:	ldr	r3, [r7, #-4]
   3daa8:	ldr	r2, [sp, #196]	; 0xc4
   3daac:	ldr	r2, [r2, r4, lsl #2]
   3dab0:	mla	lr, r2, r3, lr
   3dab4:	add	r3, r4, #1
   3dab8:	cmp	r9, r3
   3dabc:	bgt	3da24 <GetDataSlab+0x1c440>
   3dac0:	ldr	r3, [sp, #8]
   3dac4:	add	ip, r3, lr
   3dac8:	ldr	r3, [sp, #28]
   3dacc:	cmp	r3, #1
   3dad0:	beq	354dc <GetDataSlab+0x13ef8>
   3dad4:	ldr	r3, [sp, #16]
   3dad8:	cmp	r3, #0
   3dadc:	movle	r3, #0
   3dae0:	ble	251fc <GetDataSlab+0x3c18>
   3dae4:	mov	r3, #0
   3dae8:	str	r3, [sp, #20]
   3daec:	mov	r8, r3
   3daf0:	b	3572c <GetDataSlab+0x14148>
   3daf4:	ldr	r3, [fp]
   3daf8:	ldr	r2, [sp, #16]
   3dafc:	mul	r3, r3, r2
   3db00:	str	r3, [sp, #16]
   3db04:	ldr	r3, [sp, #196]	; 0xc4
   3db08:	ldr	r3, [r3]
   3db0c:	ldr	r2, [r6, #-4]
   3db10:	mla	lr, r2, r3, lr
   3db14:	add	r4, r4, #1
   3db18:	ldr	r2, [sp, #20]
   3db1c:	ldr	r3, [r2, #4]!
   3db20:	str	r2, [sp, #20]
   3db24:	sub	r3, r3, #1
   3db28:	str	r3, [r8], #4
   3db2c:	ldr	r2, [sp, #12]
   3db30:	ldr	r3, [r2], #4
   3db34:	str	r2, [sp, #12]
   3db38:	mov	ip, r3
   3db3c:	add	r6, r6, #4
   3db40:	mov	r7, r6
   3db44:	str	r3, [r6]
   3db48:	cmp	r4, #0
   3db4c:	beq	3daf4 <GetDataSlab+0x1c510>
   3db50:	str	r8, [sp, #24]
   3db54:	ldr	r0, [r8, #-4]
   3db58:	mov	r1, r2
   3db5c:	mov	r2, r1
   3db60:	ldr	r3, [r1, #-4]!
   3db64:	mul	r0, r3, r0
   3db68:	ldr	r3, [r2]
   3db6c:	mul	ip, r3, ip
   3db70:	cmp	r1, r5
   3db74:	bne	3db5c <GetDataSlab+0x1c578>
   3db78:	ldr	r3, [sp, #24]
   3db7c:	str	r0, [r3, #-4]
   3db80:	str	ip, [r7]
   3db84:	ldr	r3, [fp, r4, lsl #2]
   3db88:	ldr	r2, [sp, #16]
   3db8c:	mul	r3, r3, r2
   3db90:	str	r3, [sp, #16]
   3db94:	ldr	r3, [r7, #-4]
   3db98:	ldr	r2, [sp, #196]	; 0xc4
   3db9c:	ldr	r2, [r2, r4, lsl #2]
   3dba0:	mla	lr, r2, r3, lr
   3dba4:	add	r3, r4, #1
   3dba8:	cmp	r9, r3
   3dbac:	bgt	3db14 <GetDataSlab+0x1c530>
   3dbb0:	ldr	r3, [sp, #8]
   3dbb4:	add	ip, r3, lr, lsl #1
   3dbb8:	ldr	r3, [sp, #28]
   3dbbc:	cmp	r3, #1
   3dbc0:	beq	34ac8 <GetDataSlab+0x134e4>
   3dbc4:	ldr	r3, [sp, #16]
   3dbc8:	cmp	r3, #0
   3dbcc:	movle	r3, #0
   3dbd0:	ble	251fc <GetDataSlab+0x3c18>
   3dbd4:	mov	r3, #0
   3dbd8:	str	r3, [sp, #20]
   3dbdc:	mov	r8, r3
   3dbe0:	b	34d14 <GetDataSlab+0x13730>
   3dbe4:	ldr	r3, [fp]
   3dbe8:	ldr	r2, [sp, #16]
   3dbec:	mul	r3, r3, r2
   3dbf0:	str	r3, [sp, #16]
   3dbf4:	ldr	r3, [sp, #196]	; 0xc4
   3dbf8:	ldr	r3, [r3]
   3dbfc:	ldr	r2, [r6, #-4]
   3dc00:	mla	lr, r2, r3, lr
   3dc04:	add	r4, r4, #1
   3dc08:	ldr	r2, [sp, #20]
   3dc0c:	ldr	r3, [r2, #4]!
   3dc10:	str	r2, [sp, #20]
   3dc14:	sub	r3, r3, #1
   3dc18:	str	r3, [r8], #4
   3dc1c:	ldr	r2, [sp, #12]
   3dc20:	ldr	r3, [r2], #4
   3dc24:	str	r2, [sp, #12]
   3dc28:	mov	ip, r3
   3dc2c:	add	r6, r6, #4
   3dc30:	mov	r7, r6
   3dc34:	str	r3, [r6]
   3dc38:	cmp	r4, #0
   3dc3c:	beq	3dbe4 <GetDataSlab+0x1c600>
   3dc40:	str	r8, [sp, #24]
   3dc44:	ldr	r0, [r8, #-4]
   3dc48:	mov	r1, r2
   3dc4c:	mov	r2, r1
   3dc50:	ldr	r3, [r1, #-4]!
   3dc54:	mul	r0, r3, r0
   3dc58:	ldr	r3, [r2]
   3dc5c:	mul	ip, r3, ip
   3dc60:	cmp	r1, r5
   3dc64:	bne	3dc4c <GetDataSlab+0x1c668>
   3dc68:	ldr	r3, [sp, #24]
   3dc6c:	str	r0, [r3, #-4]
   3dc70:	str	ip, [r7]
   3dc74:	ldr	r3, [fp, r4, lsl #2]
   3dc78:	ldr	r2, [sp, #16]
   3dc7c:	mul	r3, r3, r2
   3dc80:	str	r3, [sp, #16]
   3dc84:	ldr	r3, [r7, #-4]
   3dc88:	ldr	r2, [sp, #196]	; 0xc4
   3dc8c:	ldr	r2, [r2, r4, lsl #2]
   3dc90:	mla	lr, r2, r3, lr
   3dc94:	add	r3, r4, #1
   3dc98:	cmp	r9, r3
   3dc9c:	bgt	3dc04 <GetDataSlab+0x1c620>
   3dca0:	ldr	r3, [sp, #8]
   3dca4:	add	ip, r3, lr, lsl #1
   3dca8:	ldr	r3, [sp, #28]
   3dcac:	cmp	r3, #1
   3dcb0:	beq	34e24 <GetDataSlab+0x13840>
   3dcb4:	ldr	r3, [sp, #16]
   3dcb8:	cmp	r3, #0
   3dcbc:	movle	r3, #0
   3dcc0:	ble	251fc <GetDataSlab+0x3c18>
   3dcc4:	mov	r3, #0
   3dcc8:	str	r3, [sp, #20]
   3dccc:	mov	r8, r3
   3dcd0:	b	35070 <GetDataSlab+0x13a8c>
   3dcd4:	ldr	r3, [fp]
   3dcd8:	ldr	r2, [sp, #16]
   3dcdc:	mul	r3, r3, r2
   3dce0:	str	r3, [sp, #16]
   3dce4:	ldr	r3, [r6, #-4]
   3dce8:	ldr	r2, [sp, #196]	; 0xc4
   3dcec:	ldr	r2, [r2]
   3dcf0:	mla	lr, r2, r3, lr
   3dcf4:	add	r4, r4, #1
   3dcf8:	ldr	r2, [sp, #20]
   3dcfc:	ldr	r3, [r2, #4]!
   3dd00:	str	r2, [sp, #20]
   3dd04:	sub	r3, r3, #1
   3dd08:	str	r3, [r8], #4
   3dd0c:	ldr	r2, [sp, #12]
   3dd10:	ldr	r3, [r2], #4
   3dd14:	str	r2, [sp, #12]
   3dd18:	mov	ip, r3
   3dd1c:	add	r6, r6, #4
   3dd20:	mov	r7, r6
   3dd24:	str	r3, [r6]
   3dd28:	cmp	r4, #0
   3dd2c:	beq	3dcd4 <GetDataSlab+0x1c6f0>
   3dd30:	str	r8, [sp, #24]
   3dd34:	ldr	r0, [r8, #-4]
   3dd38:	mov	r1, r2
   3dd3c:	mov	r2, r1
   3dd40:	ldr	r3, [r1, #-4]!
   3dd44:	mul	r0, r3, r0
   3dd48:	ldr	r3, [r2]
   3dd4c:	mul	ip, r3, ip
   3dd50:	cmp	r1, r5
   3dd54:	bne	3dd3c <GetDataSlab+0x1c758>
   3dd58:	ldr	r3, [sp, #24]
   3dd5c:	str	r0, [r3, #-4]
   3dd60:	str	ip, [r7]
   3dd64:	ldr	r3, [fp, r4, lsl #2]
   3dd68:	ldr	r2, [sp, #16]
   3dd6c:	mul	r3, r3, r2
   3dd70:	str	r3, [sp, #16]
   3dd74:	ldr	r3, [r7, #-4]
   3dd78:	ldr	r2, [sp, #196]	; 0xc4
   3dd7c:	ldr	r2, [r2, r4, lsl #2]
   3dd80:	mla	lr, r2, r3, lr
   3dd84:	add	r3, r4, #1
   3dd88:	cmp	r9, r3
   3dd8c:	bgt	3dcf4 <GetDataSlab+0x1c710>
   3dd90:	ldr	r3, [sp, #8]
   3dd94:	add	ip, r3, lr, lsl #2
   3dd98:	ldr	r3, [sp, #28]
   3dd9c:	cmp	r3, #1
   3dda0:	beq	34410 <GetDataSlab+0x12e2c>
   3dda4:	ldr	r3, [sp, #16]
   3dda8:	cmp	r3, #0
   3ddac:	movle	r3, #0
   3ddb0:	ble	251fc <GetDataSlab+0x3c18>
   3ddb4:	mov	r3, #0
   3ddb8:	str	r3, [sp, #20]
   3ddbc:	mov	r8, r3
   3ddc0:	b	3465c <GetDataSlab+0x13078>
   3ddc4:	ldr	r3, [fp]
   3ddc8:	ldr	r2, [sp, #16]
   3ddcc:	mul	r3, r3, r2
   3ddd0:	str	r3, [sp, #16]
   3ddd4:	ldr	r3, [r6, #-4]
   3ddd8:	ldr	r2, [sp, #196]	; 0xc4
   3dddc:	ldr	r2, [r2]
   3dde0:	mla	lr, r2, r3, lr
   3dde4:	add	r4, r4, #1
   3dde8:	ldr	r2, [sp, #20]
   3ddec:	ldr	r3, [r2, #4]!
   3ddf0:	str	r2, [sp, #20]
   3ddf4:	sub	r3, r3, #1
   3ddf8:	str	r3, [r8], #4
   3ddfc:	ldr	r2, [sp, #12]
   3de00:	ldr	r3, [r2], #4
   3de04:	str	r2, [sp, #12]
   3de08:	mov	ip, r3
   3de0c:	add	r6, r6, #4
   3de10:	mov	r7, r6
   3de14:	str	r3, [r6]
   3de18:	cmp	r4, #0
   3de1c:	beq	3ddc4 <GetDataSlab+0x1c7e0>
   3de20:	str	r8, [sp, #24]
   3de24:	ldr	r0, [r8, #-4]
   3de28:	mov	r1, r2
   3de2c:	mov	r2, r1
   3de30:	ldr	r3, [r1, #-4]!
   3de34:	mul	r0, r3, r0
   3de38:	ldr	r3, [r2]
   3de3c:	mul	ip, r3, ip
   3de40:	cmp	r1, r5
   3de44:	bne	3de2c <GetDataSlab+0x1c848>
   3de48:	ldr	r3, [sp, #24]
   3de4c:	str	r0, [r3, #-4]
   3de50:	str	ip, [r7]
   3de54:	ldr	r3, [fp, r4, lsl #2]
   3de58:	ldr	r2, [sp, #16]
   3de5c:	mul	r3, r3, r2
   3de60:	str	r3, [sp, #16]
   3de64:	ldr	r3, [r7, #-4]
   3de68:	ldr	r2, [sp, #196]	; 0xc4
   3de6c:	ldr	r2, [r2, r4, lsl #2]
   3de70:	mla	lr, r2, r3, lr
   3de74:	add	r3, r4, #1
   3de78:	cmp	r9, r3
   3de7c:	bgt	3dde4 <GetDataSlab+0x1c800>
   3de80:	ldr	r3, [sp, #8]
   3de84:	add	ip, r3, lr, lsl #2
   3de88:	ldr	r3, [sp, #28]
   3de8c:	cmp	r3, #1
   3de90:	beq	3476c <GetDataSlab+0x13188>
   3de94:	ldr	r3, [sp, #16]
   3de98:	cmp	r3, #0
   3de9c:	movle	r3, #0
   3dea0:	ble	251fc <GetDataSlab+0x3c18>
   3dea4:	mov	r3, #0
   3dea8:	str	r3, [sp, #20]
   3deac:	mov	r8, r3
   3deb0:	b	349b8 <GetDataSlab+0x133d4>
   3deb4:	ldr	r3, [fp]
   3deb8:	ldr	r2, [sp, #16]
   3debc:	mul	r3, r3, r2
   3dec0:	str	r3, [sp, #16]
   3dec4:	ldr	r3, [sp, #196]	; 0xc4
   3dec8:	ldr	r3, [r3]
   3decc:	ldr	r2, [r6, #-4]
   3ded0:	mla	lr, r2, r3, lr
   3ded4:	add	r4, r4, #1
   3ded8:	ldr	r2, [sp, #20]
   3dedc:	ldr	r3, [r2, #4]!
   3dee0:	str	r2, [sp, #20]
   3dee4:	sub	r3, r3, #1
   3dee8:	str	r3, [r8], #4
   3deec:	ldr	r2, [sp, #12]
   3def0:	ldr	r3, [r2], #4
   3def4:	str	r2, [sp, #12]
   3def8:	mov	ip, r3
   3defc:	add	r6, r6, #4
   3df00:	mov	r7, r6
   3df04:	str	r3, [r6]
   3df08:	cmp	r4, #0
   3df0c:	beq	3deb4 <GetDataSlab+0x1c8d0>
   3df10:	str	r8, [sp, #24]
   3df14:	ldr	r0, [r8, #-4]
   3df18:	mov	r1, r2
   3df1c:	mov	r2, r1
   3df20:	ldr	r3, [r1, #-4]!
   3df24:	mul	r0, r3, r0
   3df28:	ldr	r3, [r2]
   3df2c:	mul	ip, r3, ip
   3df30:	cmp	r1, r5
   3df34:	bne	3df1c <GetDataSlab+0x1c938>
   3df38:	ldr	r3, [sp, #24]
   3df3c:	str	r0, [r3, #-4]
   3df40:	str	ip, [r7]
   3df44:	ldr	r3, [fp, r4, lsl #2]
   3df48:	ldr	r2, [sp, #16]
   3df4c:	mul	r3, r3, r2
   3df50:	str	r3, [sp, #16]
   3df54:	ldr	r3, [r7, #-4]
   3df58:	ldr	r2, [sp, #196]	; 0xc4
   3df5c:	ldr	r2, [r2, r4, lsl #2]
   3df60:	mla	lr, r2, r3, lr
   3df64:	add	r3, r4, #1
   3df68:	cmp	r9, r3
   3df6c:	bgt	3ded4 <GetDataSlab+0x1c8f0>
   3df70:	ldr	r3, [sp, #8]
   3df74:	add	ip, r3, lr, lsl #2
   3df78:	ldr	r3, [sp, #28]
   3df7c:	cmp	r3, #1
   3df80:	beq	340a4 <GetDataSlab+0x12ac0>
   3df84:	ldr	r3, [sp, #16]
   3df88:	cmp	r3, #0
   3df8c:	movle	r3, #0
   3df90:	ble	251fc <GetDataSlab+0x3c18>
   3df94:	mov	r3, #0
   3df98:	str	r3, [sp, #20]
   3df9c:	mov	r8, r3
   3dfa0:	b	342f8 <GetDataSlab+0x12d14>
   3dfa4:	ldr	r3, [fp]
   3dfa8:	ldr	r2, [sp, #16]
   3dfac:	mul	r3, r3, r2
   3dfb0:	str	r3, [sp, #16]
   3dfb4:	ldr	r3, [sp, #196]	; 0xc4
   3dfb8:	ldr	r3, [r3]
   3dfbc:	ldr	r2, [r6, #-4]
   3dfc0:	mla	lr, r2, r3, lr
   3dfc4:	add	r4, r4, #1
   3dfc8:	ldr	r2, [sp, #20]
   3dfcc:	ldr	r3, [r2, #4]!
   3dfd0:	str	r2, [sp, #20]
   3dfd4:	sub	r3, r3, #1
   3dfd8:	str	r3, [r8], #4
   3dfdc:	ldr	r2, [sp, #12]
   3dfe0:	ldr	r3, [r2], #4
   3dfe4:	str	r2, [sp, #12]
   3dfe8:	mov	ip, r3
   3dfec:	add	r6, r6, #4
   3dff0:	mov	r7, r6
   3dff4:	str	r3, [r6]
   3dff8:	cmp	r4, #0
   3dffc:	beq	3dfa4 <GetDataSlab+0x1c9c0>
   3e000:	str	r8, [sp, #24]
   3e004:	ldr	r0, [r8, #-4]
   3e008:	mov	r1, r2
   3e00c:	mov	r2, r1
   3e010:	ldr	r3, [r1, #-4]!
   3e014:	mul	r0, r3, r0
   3e018:	ldr	r3, [r2]
   3e01c:	mul	ip, r3, ip
   3e020:	cmp	r1, r5
   3e024:	bne	3e00c <GetDataSlab+0x1ca28>
   3e028:	ldr	r3, [sp, #24]
   3e02c:	str	r0, [r3, #-4]
   3e030:	str	ip, [r7]
   3e034:	ldr	r3, [fp, r4, lsl #2]
   3e038:	ldr	r2, [sp, #16]
   3e03c:	mul	r3, r3, r2
   3e040:	str	r3, [sp, #16]
   3e044:	ldr	r3, [r7, #-4]
   3e048:	ldr	r2, [sp, #196]	; 0xc4
   3e04c:	ldr	r2, [r2, r4, lsl #2]
   3e050:	mla	lr, r2, r3, lr
   3e054:	add	r3, r4, #1
   3e058:	cmp	r9, r3
   3e05c:	bgt	3dfc4 <GetDataSlab+0x1c9e0>
   3e060:	ldr	r3, [sp, #8]
   3e064:	add	ip, r3, lr, lsl #3
   3e068:	ldr	r3, [sp, #28]
   3e06c:	cmp	r3, #1
   3e070:	beq	33d38 <GetDataSlab+0x12754>
   3e074:	ldr	r3, [sp, #16]
   3e078:	cmp	r3, #0
   3e07c:	movle	r3, #0
   3e080:	ble	251fc <GetDataSlab+0x3c18>
   3e084:	mov	r3, #0
   3e088:	str	r3, [sp, #20]
   3e08c:	mov	r8, r3
   3e090:	b	33f8c <GetDataSlab+0x129a8>
   3e094:	ldr	r3, [fp]
   3e098:	ldr	r2, [sp, #16]
   3e09c:	mul	r3, r3, r2
   3e0a0:	str	r3, [sp, #16]
   3e0a4:	ldr	r3, [r6, #-4]
   3e0a8:	ldr	r2, [sp, #196]	; 0xc4
   3e0ac:	ldr	r2, [r2]
   3e0b0:	mla	lr, r2, r3, lr
   3e0b4:	add	r4, r4, #1
   3e0b8:	ldr	r2, [sp, #20]
   3e0bc:	ldr	r3, [r2, #4]!
   3e0c0:	str	r2, [sp, #20]
   3e0c4:	sub	r3, r3, #1
   3e0c8:	str	r3, [r8], #4
   3e0cc:	ldr	r2, [sp, #12]
   3e0d0:	ldr	r3, [r2], #4
   3e0d4:	str	r2, [sp, #12]
   3e0d8:	mov	ip, r3
   3e0dc:	add	r6, r6, #4
   3e0e0:	mov	r7, r6
   3e0e4:	str	r3, [r6]
   3e0e8:	cmp	r4, #0
   3e0ec:	beq	3e094 <GetDataSlab+0x1cab0>
   3e0f0:	str	r8, [sp, #24]
   3e0f4:	ldr	r0, [r8, #-4]
   3e0f8:	mov	r1, r2
   3e0fc:	mov	r2, r1
   3e100:	ldr	r3, [r1, #-4]!
   3e104:	mul	r0, r3, r0
   3e108:	ldr	r3, [r2]
   3e10c:	mul	ip, r3, ip
   3e110:	cmp	r1, r5
   3e114:	bne	3e0fc <GetDataSlab+0x1cb18>
   3e118:	ldr	r3, [sp, #24]
   3e11c:	str	r0, [r3, #-4]
   3e120:	str	ip, [r7]
   3e124:	ldr	r3, [fp, r4, lsl #2]
   3e128:	ldr	r2, [sp, #16]
   3e12c:	mul	r3, r3, r2
   3e130:	str	r3, [sp, #16]
   3e134:	ldr	r3, [r7, #-4]
   3e138:	ldr	r2, [sp, #196]	; 0xc4
   3e13c:	ldr	r2, [r2, r4, lsl #2]
   3e140:	mla	lr, r2, r3, lr
   3e144:	add	r3, r4, #1
   3e148:	cmp	r9, r3
   3e14c:	bgt	3e0b4 <GetDataSlab+0x1cad0>
   3e150:	ldr	r3, [sp, #8]
   3e154:	add	ip, r3, lr, lsl #3
   3e158:	ldr	r3, [sp, #28]
   3e15c:	cmp	r3, #1
   3e160:	beq	2f5bc <GetDataSlab+0xdfd8>
   3e164:	ldr	r3, [sp, #16]
   3e168:	cmp	r3, #0
   3e16c:	movle	r3, #0
   3e170:	ble	251fc <GetDataSlab+0x3c18>
   3e174:	mov	r3, #0
   3e178:	str	r3, [sp, #20]
   3e17c:	mov	r8, r3
   3e180:	b	2f80c <GetDataSlab+0xe228>
   3e184:	ldr	r3, [fp]
   3e188:	ldr	r2, [sp, #16]
   3e18c:	mul	r3, r3, r2
   3e190:	str	r3, [sp, #16]
   3e194:	ldr	r3, [sp, #196]	; 0xc4
   3e198:	ldr	r3, [r3]
   3e19c:	ldr	r2, [r6, #-4]
   3e1a0:	mla	lr, r2, r3, lr
   3e1a4:	add	r4, r4, #1
   3e1a8:	ldr	r2, [sp, #20]
   3e1ac:	ldr	r3, [r2, #4]!
   3e1b0:	str	r2, [sp, #20]
   3e1b4:	sub	r3, r3, #1
   3e1b8:	str	r3, [r8], #4
   3e1bc:	ldr	r2, [sp, #12]
   3e1c0:	ldr	r3, [r2], #4
   3e1c4:	str	r2, [sp, #12]
   3e1c8:	mov	ip, r3
   3e1cc:	add	r6, r6, #4
   3e1d0:	mov	r7, r6
   3e1d4:	str	r3, [r6]
   3e1d8:	cmp	r4, #0
   3e1dc:	beq	3e184 <GetDataSlab+0x1cba0>
   3e1e0:	str	r8, [sp, #24]
   3e1e4:	ldr	r0, [r8, #-4]
   3e1e8:	mov	r1, r2
   3e1ec:	mov	r2, r1
   3e1f0:	ldr	r3, [r1, #-4]!
   3e1f4:	mul	r0, r3, r0
   3e1f8:	ldr	r3, [r2]
   3e1fc:	mul	ip, r3, ip
   3e200:	cmp	r1, r5
   3e204:	bne	3e1ec <GetDataSlab+0x1cc08>
   3e208:	ldr	r3, [sp, #24]
   3e20c:	str	r0, [r3, #-4]
   3e210:	str	ip, [r7]
   3e214:	ldr	r3, [fp, r4, lsl #2]
   3e218:	ldr	r2, [sp, #16]
   3e21c:	mul	r3, r3, r2
   3e220:	str	r3, [sp, #16]
   3e224:	ldr	r3, [r7, #-4]
   3e228:	ldr	r2, [sp, #196]	; 0xc4
   3e22c:	ldr	r2, [r2, r4, lsl #2]
   3e230:	mla	lr, r2, r3, lr
   3e234:	add	r3, r4, #1
   3e238:	cmp	r9, r3
   3e23c:	bgt	3e1a4 <GetDataSlab+0x1cbc0>
   3e240:	ldr	r3, [sp, #8]
   3e244:	add	ip, r3, lr, lsl #3
   3e248:	ldr	r3, [sp, #28]
   3e24c:	cmp	r3, #1
   3e250:	beq	2f2b8 <GetDataSlab+0xdcd4>
   3e254:	ldr	r3, [sp, #16]
   3e258:	cmp	r3, #0
   3e25c:	movgt	r3, #0
   3e260:	strgt	r3, [sp, #20]
   3e264:	movgt	r8, r3
   3e268:	bgt	2f500 <GetDataSlab+0xdf1c>
   3e26c:	mov	r3, #0
   3e270:	b	251fc <GetDataSlab+0x3c18>
   3e274:	ldr	r3, [fp]
   3e278:	ldr	r2, [sp, #16]
   3e27c:	mul	r3, r3, r2
   3e280:	str	r3, [sp, #16]
   3e284:	ldr	r3, [sp, #196]	; 0xc4
   3e288:	ldr	r3, [r3]
   3e28c:	ldr	r2, [r5, #-4]
   3e290:	mla	lr, r2, r3, lr
   3e294:	add	r8, r8, #1
   3e298:	ldr	r2, [sp, #20]
   3e29c:	ldr	r3, [r2, #4]!
   3e2a0:	str	r2, [sp, #20]
   3e2a4:	sub	r3, r3, #1
   3e2a8:	str	r3, [r7], #4
   3e2ac:	ldr	r2, [sp, #12]
   3e2b0:	ldr	r3, [r2], #4
   3e2b4:	str	r2, [sp, #12]
   3e2b8:	mov	ip, r3
   3e2bc:	add	r5, r5, #4
   3e2c0:	mov	r6, r5
   3e2c4:	str	r3, [r5]
   3e2c8:	cmp	r8, #0
   3e2cc:	beq	3e274 <GetDataSlab+0x1cc90>
   3e2d0:	str	r7, [sp, #24]
   3e2d4:	ldr	r0, [r7, #-4]
   3e2d8:	mov	r1, r2
   3e2dc:	mov	r2, r1
   3e2e0:	ldr	r3, [r1, #-4]!
   3e2e4:	mul	r0, r3, r0
   3e2e8:	ldr	r3, [r2]
   3e2ec:	mul	ip, r3, ip
   3e2f0:	cmp	r1, r4
   3e2f4:	bne	3e2dc <GetDataSlab+0x1ccf8>
   3e2f8:	ldr	r3, [sp, #24]
   3e2fc:	str	r0, [r3, #-4]
   3e300:	str	ip, [r6]
   3e304:	ldr	r3, [fp, r8, lsl #2]
   3e308:	ldr	r2, [sp, #16]
   3e30c:	mul	r3, r3, r2
   3e310:	str	r3, [sp, #16]
   3e314:	ldr	r3, [r6, #-4]
   3e318:	ldr	r2, [sp, #196]	; 0xc4
   3e31c:	ldr	r2, [r2, r8, lsl #2]
   3e320:	mla	lr, r2, r3, lr
   3e324:	add	r3, r8, #1
   3e328:	cmp	r9, r3
   3e32c:	bgt	3e294 <GetDataSlab+0x1ccb0>
   3e330:	ldr	r3, [sp, #8]
   3e334:	add	ip, r3, lr
   3e338:	ldr	r3, [sp, #28]
   3e33c:	cmp	r3, #1
   3e340:	beq	2eb98 <GetDataSlab+0xd5b4>
   3e344:	ldr	r3, [sp, #16]
   3e348:	cmp	r3, #0
   3e34c:	movle	r3, #0
   3e350:	ble	251fc <GetDataSlab+0x3c18>
   3e354:	mov	r3, #0
   3e358:	str	r3, [sp, #20]
   3e35c:	mov	r8, r3
   3e360:	b	2ede8 <GetDataSlab+0xd804>
   3e364:	ldr	r3, [fp]
   3e368:	ldr	r2, [sp, #16]
   3e36c:	mul	r3, r3, r2
   3e370:	str	r3, [sp, #16]
   3e374:	ldr	r3, [r6, #-4]
   3e378:	ldr	r2, [sp, #196]	; 0xc4
   3e37c:	ldr	r2, [r2]
   3e380:	mla	lr, r2, r3, lr
   3e384:	add	r4, r4, #1
   3e388:	ldr	r2, [sp, #20]
   3e38c:	ldr	r3, [r2, #4]!
   3e390:	str	r2, [sp, #20]
   3e394:	sub	r3, r3, #1
   3e398:	str	r3, [r8], #4
   3e39c:	ldr	r2, [sp, #12]
   3e3a0:	ldr	r3, [r2], #4
   3e3a4:	str	r2, [sp, #12]
   3e3a8:	mov	ip, r3
   3e3ac:	add	r6, r6, #4
   3e3b0:	mov	r7, r6
   3e3b4:	str	r3, [r6]
   3e3b8:	cmp	r4, #0
   3e3bc:	beq	3e364 <GetDataSlab+0x1cd80>
   3e3c0:	str	r8, [sp, #24]
   3e3c4:	ldr	r0, [r8, #-4]
   3e3c8:	mov	r1, r2
   3e3cc:	mov	r2, r1
   3e3d0:	ldr	r3, [r1, #-4]!
   3e3d4:	mul	r0, r3, r0
   3e3d8:	ldr	r3, [r2]
   3e3dc:	mul	ip, r3, ip
   3e3e0:	cmp	r1, r5
   3e3e4:	bne	3e3cc <GetDataSlab+0x1cde8>
   3e3e8:	ldr	r3, [sp, #24]
   3e3ec:	str	r0, [r3, #-4]
   3e3f0:	str	ip, [r7]
   3e3f4:	ldr	r3, [fp, r4, lsl #2]
   3e3f8:	ldr	r2, [sp, #16]
   3e3fc:	mul	r3, r3, r2
   3e400:	str	r3, [sp, #16]
   3e404:	ldr	r3, [r7, #-4]
   3e408:	ldr	r2, [sp, #196]	; 0xc4
   3e40c:	ldr	r2, [r2, r4, lsl #2]
   3e410:	mla	lr, r2, r3, lr
   3e414:	add	r3, r4, #1
   3e418:	cmp	r9, r3
   3e41c:	bgt	3e384 <GetDataSlab+0x1cda0>
   3e420:	ldr	r3, [sp, #8]
   3e424:	add	ip, r3, lr
   3e428:	ldr	r3, [sp, #28]
   3e42c:	cmp	r3, #1
   3e430:	beq	2eef8 <GetDataSlab+0xd914>
   3e434:	ldr	r3, [sp, #16]
   3e438:	cmp	r3, #0
   3e43c:	movle	r3, #0
   3e440:	ble	251fc <GetDataSlab+0x3c18>
   3e444:	mov	r3, #0
   3e448:	str	r3, [sp, #20]
   3e44c:	mov	r8, r3
   3e450:	b	2f148 <GetDataSlab+0xdb64>
   3e454:	ldr	r3, [fp]
   3e458:	ldr	r2, [sp, #16]
   3e45c:	mul	r3, r3, r2
   3e460:	str	r3, [sp, #16]
   3e464:	ldr	r3, [sp, #196]	; 0xc4
   3e468:	ldr	r3, [r3]
   3e46c:	ldr	r2, [r6, #-4]
   3e470:	mla	lr, r2, r3, lr
   3e474:	add	r4, r4, #1
   3e478:	ldr	r2, [sp, #20]
   3e47c:	ldr	r3, [r2, #4]!
   3e480:	str	r2, [sp, #20]
   3e484:	sub	r3, r3, #1
   3e488:	str	r3, [r8], #4
   3e48c:	ldr	r2, [sp, #12]
   3e490:	ldr	r3, [r2], #4
   3e494:	str	r2, [sp, #12]
   3e498:	mov	ip, r3
   3e49c:	add	r6, r6, #4
   3e4a0:	mov	r7, r6
   3e4a4:	str	r3, [r6]
   3e4a8:	cmp	r4, #0
   3e4ac:	beq	3e454 <GetDataSlab+0x1ce70>
   3e4b0:	str	r8, [sp, #24]
   3e4b4:	ldr	r0, [r8, #-4]
   3e4b8:	mov	r1, r2
   3e4bc:	mov	r2, r1
   3e4c0:	ldr	r3, [r1, #-4]!
   3e4c4:	mul	r0, r3, r0
   3e4c8:	ldr	r3, [r2]
   3e4cc:	mul	ip, r3, ip
   3e4d0:	cmp	r1, r5
   3e4d4:	bne	3e4bc <GetDataSlab+0x1ced8>
   3e4d8:	ldr	r3, [sp, #24]
   3e4dc:	str	r0, [r3, #-4]
   3e4e0:	str	ip, [r7]
   3e4e4:	ldr	r3, [fp, r4, lsl #2]
   3e4e8:	ldr	r2, [sp, #16]
   3e4ec:	mul	r3, r3, r2
   3e4f0:	str	r3, [sp, #16]
   3e4f4:	ldr	r3, [r7, #-4]
   3e4f8:	ldr	r2, [sp, #196]	; 0xc4
   3e4fc:	ldr	r2, [r2, r4, lsl #2]
   3e500:	mla	lr, r2, r3, lr
   3e504:	add	r3, r4, #1
   3e508:	cmp	r9, r3
   3e50c:	bgt	3e474 <GetDataSlab+0x1ce90>
   3e510:	ldr	r3, [sp, #8]
   3e514:	add	ip, r3, lr, lsl #1
   3e518:	ldr	r3, [sp, #28]
   3e51c:	cmp	r3, #1
   3e520:	beq	2e4e4 <GetDataSlab+0xcf00>
   3e524:	ldr	r3, [sp, #16]
   3e528:	cmp	r3, #0
   3e52c:	movle	r3, #0
   3e530:	ble	251fc <GetDataSlab+0x3c18>
   3e534:	mov	r3, #0
   3e538:	str	r3, [sp, #20]
   3e53c:	mov	r8, r3
   3e540:	b	2e730 <GetDataSlab+0xd14c>
   3e544:	ldr	r3, [fp]
   3e548:	ldr	r2, [sp, #16]
   3e54c:	mul	r3, r3, r2
   3e550:	str	r3, [sp, #16]
   3e554:	ldr	r3, [r6, #-4]
   3e558:	ldr	r2, [sp, #196]	; 0xc4
   3e55c:	ldr	r2, [r2]
   3e560:	mla	lr, r2, r3, lr
   3e564:	add	r4, r4, #1
   3e568:	ldr	r2, [sp, #20]
   3e56c:	ldr	r3, [r2, #4]!
   3e570:	str	r2, [sp, #20]
   3e574:	sub	r3, r3, #1
   3e578:	str	r3, [r8], #4
   3e57c:	ldr	r2, [sp, #12]
   3e580:	ldr	r3, [r2], #4
   3e584:	str	r2, [sp, #12]
   3e588:	mov	ip, r3
   3e58c:	add	r6, r6, #4
   3e590:	mov	r7, r6
   3e594:	str	r3, [r6]
   3e598:	cmp	r4, #0
   3e59c:	beq	3e544 <GetDataSlab+0x1cf60>
   3e5a0:	str	r8, [sp, #24]
   3e5a4:	ldr	r0, [r8, #-4]
   3e5a8:	mov	r1, r2
   3e5ac:	mov	r2, r1
   3e5b0:	ldr	r3, [r1, #-4]!
   3e5b4:	mul	r0, r3, r0
   3e5b8:	ldr	r3, [r2]
   3e5bc:	mul	ip, r3, ip
   3e5c0:	cmp	r1, r5
   3e5c4:	bne	3e5ac <GetDataSlab+0x1cfc8>
   3e5c8:	ldr	r3, [sp, #24]
   3e5cc:	str	r0, [r3, #-4]
   3e5d0:	str	ip, [r7]
   3e5d4:	ldr	r3, [fp, r4, lsl #2]
   3e5d8:	ldr	r2, [sp, #16]
   3e5dc:	mul	r3, r3, r2
   3e5e0:	str	r3, [sp, #16]
   3e5e4:	ldr	r3, [r7, #-4]
   3e5e8:	ldr	r2, [sp, #196]	; 0xc4
   3e5ec:	ldr	r2, [r2, r4, lsl #2]
   3e5f0:	mla	lr, r2, r3, lr
   3e5f4:	add	r3, r4, #1
   3e5f8:	cmp	r9, r3
   3e5fc:	bgt	3e564 <GetDataSlab+0x1cf80>
   3e600:	ldr	r3, [sp, #8]
   3e604:	add	ip, r3, lr, lsl #1
   3e608:	ldr	r3, [sp, #28]
   3e60c:	cmp	r3, #1
   3e610:	beq	2e840 <GetDataSlab+0xd25c>
   3e614:	ldr	r3, [sp, #16]
   3e618:	cmp	r3, #0
   3e61c:	movle	r3, #0
   3e620:	ble	251fc <GetDataSlab+0x3c18>
   3e624:	mov	r3, #0
   3e628:	str	r3, [sp, #20]
   3e62c:	mov	r8, r3
   3e630:	b	2ea8c <GetDataSlab+0xd4a8>
   3e634:	ldr	r3, [fp]
   3e638:	ldr	r2, [sp, #16]
   3e63c:	mul	r3, r3, r2
   3e640:	str	r3, [sp, #16]
   3e644:	ldr	r3, [sp, #196]	; 0xc4
   3e648:	ldr	r3, [r3]
   3e64c:	ldr	r2, [r6, #-4]
   3e650:	mla	lr, r2, r3, lr
   3e654:	add	r4, r4, #1
   3e658:	ldr	r2, [sp, #20]
   3e65c:	ldr	r3, [r2, #4]!
   3e660:	str	r2, [sp, #20]
   3e664:	sub	r3, r3, #1
   3e668:	str	r3, [r8], #4
   3e66c:	ldr	r2, [sp, #12]
   3e670:	ldr	r3, [r2], #4
   3e674:	str	r2, [sp, #12]
   3e678:	mov	ip, r3
   3e67c:	add	r6, r6, #4
   3e680:	mov	r7, r6
   3e684:	str	r3, [r6]
   3e688:	cmp	r4, #0
   3e68c:	beq	3e634 <GetDataSlab+0x1d050>
   3e690:	str	r8, [sp, #24]
   3e694:	ldr	r0, [r8, #-4]
   3e698:	mov	r1, r2
   3e69c:	mov	r2, r1
   3e6a0:	ldr	r3, [r1, #-4]!
   3e6a4:	mul	r0, r3, r0
   3e6a8:	ldr	r3, [r2]
   3e6ac:	mul	ip, r3, ip
   3e6b0:	cmp	r1, r5
   3e6b4:	bne	3e69c <GetDataSlab+0x1d0b8>
   3e6b8:	ldr	r3, [sp, #24]
   3e6bc:	str	r0, [r3, #-4]
   3e6c0:	str	ip, [r7]
   3e6c4:	ldr	r3, [fp, r4, lsl #2]
   3e6c8:	ldr	r2, [sp, #16]
   3e6cc:	mul	r3, r3, r2
   3e6d0:	str	r3, [sp, #16]
   3e6d4:	ldr	r3, [r7, #-4]
   3e6d8:	ldr	r2, [sp, #196]	; 0xc4
   3e6dc:	ldr	r2, [r2, r4, lsl #2]
   3e6e0:	mla	lr, r2, r3, lr
   3e6e4:	add	r3, r4, #1
   3e6e8:	cmp	r9, r3
   3e6ec:	bgt	3e654 <GetDataSlab+0x1d070>
   3e6f0:	ldr	r3, [sp, #8]
   3e6f4:	add	ip, r3, lr, lsl #2
   3e6f8:	ldr	r3, [sp, #28]
   3e6fc:	cmp	r3, #1
   3e700:	beq	2de2c <GetDataSlab+0xc848>
   3e704:	ldr	r3, [sp, #16]
   3e708:	cmp	r3, #0
   3e70c:	movle	r3, #0
   3e710:	ble	251fc <GetDataSlab+0x3c18>
   3e714:	mov	r3, #0
   3e718:	str	r3, [sp, #20]
   3e71c:	mov	r8, r3
   3e720:	b	2e078 <GetDataSlab+0xca94>
   3e724:	ldr	r3, [fp]
   3e728:	ldr	r2, [sp, #16]
   3e72c:	mul	r3, r3, r2
   3e730:	str	r3, [sp, #16]
   3e734:	ldr	r3, [r6, #-4]
   3e738:	ldr	r2, [sp, #196]	; 0xc4
   3e73c:	ldr	r2, [r2]
   3e740:	mla	lr, r2, r3, lr
   3e744:	add	r4, r4, #1
   3e748:	ldr	r2, [sp, #20]
   3e74c:	ldr	r3, [r2, #4]!
   3e750:	str	r2, [sp, #20]
   3e754:	sub	r3, r3, #1
   3e758:	str	r3, [r8], #4
   3e75c:	ldr	r2, [sp, #12]
   3e760:	ldr	r3, [r2], #4
   3e764:	str	r2, [sp, #12]
   3e768:	mov	ip, r3
   3e76c:	add	r6, r6, #4
   3e770:	mov	r7, r6
   3e774:	str	r3, [r6]
   3e778:	cmp	r4, #0
   3e77c:	beq	3e724 <GetDataSlab+0x1d140>
   3e780:	str	r8, [sp, #24]
   3e784:	ldr	r0, [r8, #-4]
   3e788:	mov	r1, r2
   3e78c:	mov	r2, r1
   3e790:	ldr	r3, [r1, #-4]!
   3e794:	mul	r0, r3, r0
   3e798:	ldr	r3, [r2]
   3e79c:	mul	ip, r3, ip
   3e7a0:	cmp	r1, r5
   3e7a4:	bne	3e78c <GetDataSlab+0x1d1a8>
   3e7a8:	ldr	r3, [sp, #24]
   3e7ac:	str	r0, [r3, #-4]
   3e7b0:	str	ip, [r7]
   3e7b4:	ldr	r3, [fp, r4, lsl #2]
   3e7b8:	ldr	r2, [sp, #16]
   3e7bc:	mul	r3, r3, r2
   3e7c0:	str	r3, [sp, #16]
   3e7c4:	ldr	r3, [r7, #-4]
   3e7c8:	ldr	r2, [sp, #196]	; 0xc4
   3e7cc:	ldr	r2, [r2, r4, lsl #2]
   3e7d0:	mla	lr, r2, r3, lr
   3e7d4:	add	r3, r4, #1
   3e7d8:	cmp	r9, r3
   3e7dc:	bgt	3e744 <GetDataSlab+0x1d160>
   3e7e0:	ldr	r3, [sp, #8]
   3e7e4:	add	ip, r3, lr, lsl #2
   3e7e8:	ldr	r3, [sp, #28]
   3e7ec:	cmp	r3, #1
   3e7f0:	beq	2e188 <GetDataSlab+0xcba4>
   3e7f4:	ldr	r3, [sp, #16]
   3e7f8:	cmp	r3, #0
   3e7fc:	movle	r3, #0
   3e800:	ble	251fc <GetDataSlab+0x3c18>
   3e804:	mov	r3, #0
   3e808:	str	r3, [sp, #20]
   3e80c:	mov	r8, r3
   3e810:	b	2e3d4 <GetDataSlab+0xcdf0>
   3e814:	ldr	r3, [fp]
   3e818:	ldr	r2, [sp, #16]
   3e81c:	mul	r3, r3, r2
   3e820:	str	r3, [sp, #16]
   3e824:	ldr	r3, [sp, #196]	; 0xc4
   3e828:	ldr	r3, [r3]
   3e82c:	ldr	r2, [r6, #-4]
   3e830:	mla	lr, r2, r3, lr
   3e834:	add	r4, r4, #1
   3e838:	ldr	r2, [sp, #20]
   3e83c:	ldr	r3, [r2, #4]!
   3e840:	str	r2, [sp, #20]
   3e844:	sub	r3, r3, #1
   3e848:	str	r3, [r8], #4
   3e84c:	ldr	r2, [sp, #12]
   3e850:	ldr	r3, [r2], #4
   3e854:	str	r2, [sp, #12]
   3e858:	mov	ip, r3
   3e85c:	add	r6, r6, #4
   3e860:	mov	r7, r6
   3e864:	str	r3, [r6]
   3e868:	cmp	r4, #0
   3e86c:	beq	3e814 <GetDataSlab+0x1d230>
   3e870:	str	r8, [sp, #24]
   3e874:	ldr	r0, [r8, #-4]
   3e878:	mov	r1, r2
   3e87c:	mov	r2, r1
   3e880:	ldr	r3, [r1, #-4]!
   3e884:	mul	r0, r3, r0
   3e888:	ldr	r3, [r2]
   3e88c:	mul	ip, r3, ip
   3e890:	cmp	r1, r5
   3e894:	bne	3e87c <GetDataSlab+0x1d298>
   3e898:	ldr	r3, [sp, #24]
   3e89c:	str	r0, [r3, #-4]
   3e8a0:	str	ip, [r7]
   3e8a4:	ldr	r3, [fp, r4, lsl #2]
   3e8a8:	ldr	r2, [sp, #16]
   3e8ac:	mul	r3, r3, r2
   3e8b0:	str	r3, [sp, #16]
   3e8b4:	ldr	r3, [r7, #-4]
   3e8b8:	ldr	r2, [sp, #196]	; 0xc4
   3e8bc:	ldr	r2, [r2, r4, lsl #2]
   3e8c0:	mla	lr, r2, r3, lr
   3e8c4:	add	r3, r4, #1
   3e8c8:	cmp	r9, r3
   3e8cc:	bgt	3e834 <GetDataSlab+0x1d250>
   3e8d0:	ldr	r3, [sp, #8]
   3e8d4:	add	ip, r3, lr, lsl #2
   3e8d8:	ldr	r3, [sp, #28]
   3e8dc:	cmp	r3, #1
   3e8e0:	beq	2dac8 <GetDataSlab+0xc4e4>
   3e8e4:	ldr	r3, [sp, #16]
   3e8e8:	cmp	r3, #0
   3e8ec:	movle	r3, #0
   3e8f0:	ble	251fc <GetDataSlab+0x3c18>
   3e8f4:	mov	r3, #0
   3e8f8:	str	r3, [sp, #20]
   3e8fc:	mov	r8, r3
   3e900:	b	2dd18 <GetDataSlab+0xc734>
   3e904:	ldr	r3, [fp]
   3e908:	ldr	r2, [sp, #16]
   3e90c:	mul	r3, r3, r2
   3e910:	str	r3, [sp, #16]
   3e914:	ldr	r3, [sp, #196]	; 0xc4
   3e918:	ldr	r3, [r3]
   3e91c:	ldr	r2, [r6, #-4]
   3e920:	mla	lr, r2, r3, lr
   3e924:	add	r4, r4, #1
   3e928:	ldr	r2, [sp, #20]
   3e92c:	ldr	r3, [r2, #4]!
   3e930:	str	r2, [sp, #20]
   3e934:	sub	r3, r3, #1
   3e938:	str	r3, [r8], #4
   3e93c:	ldr	r2, [sp, #12]
   3e940:	ldr	r3, [r2], #4
   3e944:	str	r2, [sp, #12]
   3e948:	mov	ip, r3
   3e94c:	add	r6, r6, #4
   3e950:	mov	r7, r6
   3e954:	str	r3, [r6]
   3e958:	cmp	r4, #0
   3e95c:	beq	3e904 <GetDataSlab+0x1d320>
   3e960:	str	r8, [sp, #24]
   3e964:	ldr	r0, [r8, #-4]
   3e968:	mov	r1, r2
   3e96c:	mov	r2, r1
   3e970:	ldr	r3, [r1, #-4]!
   3e974:	mul	r0, r3, r0
   3e978:	ldr	r3, [r2]
   3e97c:	mul	ip, r3, ip
   3e980:	cmp	r1, r5
   3e984:	bne	3e96c <GetDataSlab+0x1d388>
   3e988:	ldr	r3, [sp, #24]
   3e98c:	str	r0, [r3, #-4]
   3e990:	str	ip, [r7]
   3e994:	ldr	r3, [fp, r4, lsl #2]
   3e998:	ldr	r2, [sp, #16]
   3e99c:	mul	r3, r3, r2
   3e9a0:	str	r3, [sp, #16]
   3e9a4:	ldr	r3, [r7, #-4]
   3e9a8:	ldr	r2, [sp, #196]	; 0xc4
   3e9ac:	ldr	r2, [r2, r4, lsl #2]
   3e9b0:	mla	lr, r2, r3, lr
   3e9b4:	add	r3, r4, #1
   3e9b8:	cmp	r9, r3
   3e9bc:	bgt	3e924 <GetDataSlab+0x1d340>
   3e9c0:	ldr	r3, [sp, #8]
   3e9c4:	add	ip, r3, lr, lsl #3
   3e9c8:	ldr	r3, [sp, #28]
   3e9cc:	cmp	r3, #1
   3e9d0:	beq	2d764 <GetDataSlab+0xc180>
   3e9d4:	ldr	r3, [sp, #16]
   3e9d8:	cmp	r3, #0
   3e9dc:	movle	r3, #0
   3e9e0:	ble	251fc <GetDataSlab+0x3c18>
   3e9e4:	mov	r3, #0
   3e9e8:	str	r3, [sp, #20]
   3e9ec:	mov	r8, r3
   3e9f0:	b	2d9b4 <GetDataSlab+0xc3d0>
   3e9f4:	ldr	r3, [fp]
   3e9f8:	ldr	r2, [sp, #16]
   3e9fc:	mul	r3, r3, r2
   3ea00:	str	r3, [sp, #16]
   3ea04:	ldr	r3, [r6, #-4]
   3ea08:	ldr	r2, [sp, #196]	; 0xc4
   3ea0c:	ldr	r2, [r2]
   3ea10:	mla	lr, r2, r3, lr
   3ea14:	add	r4, r4, #1
   3ea18:	ldr	r2, [sp, #20]
   3ea1c:	ldr	r3, [r2, #4]!
   3ea20:	str	r2, [sp, #20]
   3ea24:	sub	r3, r3, #1
   3ea28:	str	r3, [r8], #4
   3ea2c:	ldr	r2, [sp, #12]
   3ea30:	ldr	r3, [r2], #4
   3ea34:	str	r2, [sp, #12]
   3ea38:	mov	ip, r3
   3ea3c:	add	r6, r6, #4
   3ea40:	mov	r7, r6
   3ea44:	str	r3, [r6]
   3ea48:	cmp	r4, #0
   3ea4c:	beq	3e9f4 <GetDataSlab+0x1d410>
   3ea50:	str	r8, [sp, #24]
   3ea54:	ldr	r0, [r8, #-4]
   3ea58:	mov	r1, r2
   3ea5c:	mov	r2, r1
   3ea60:	ldr	r3, [r1, #-4]!
   3ea64:	mul	r0, r3, r0
   3ea68:	ldr	r3, [r2]
   3ea6c:	mul	ip, r3, ip
   3ea70:	cmp	r1, r5
   3ea74:	bne	3ea5c <GetDataSlab+0x1d478>
   3ea78:	ldr	r3, [sp, #24]
   3ea7c:	str	r0, [r3, #-4]
   3ea80:	str	ip, [r7]
   3ea84:	ldr	r3, [fp, r4, lsl #2]
   3ea88:	ldr	r2, [sp, #16]
   3ea8c:	mul	r3, r3, r2
   3ea90:	str	r3, [sp, #16]
   3ea94:	ldr	r3, [r7, #-4]
   3ea98:	ldr	r2, [sp, #196]	; 0xc4
   3ea9c:	ldr	r2, [r2, r4, lsl #2]
   3eaa0:	mla	lr, r2, r3, lr
   3eaa4:	add	r3, r4, #1
   3eaa8:	cmp	r9, r3
   3eaac:	bgt	3ea14 <GetDataSlab+0x1d430>
   3eab0:	ldr	r3, [sp, #8]
   3eab4:	add	ip, r3, lr, lsl #3
   3eab8:	ldr	r3, [sp, #28]
   3eabc:	cmp	r3, #1
   3eac0:	beq	317a8 <GetDataSlab+0x101c4>
   3eac4:	ldr	r3, [sp, #16]
   3eac8:	cmp	r3, #0
   3eacc:	movle	r3, #0
   3ead0:	ble	251fc <GetDataSlab+0x3c18>
   3ead4:	mov	r3, #0
   3ead8:	str	r3, [sp, #20]
   3eadc:	mov	r8, r3
   3eae0:	b	319f8 <GetDataSlab+0x10414>
   3eae4:	ldr	r3, [fp]
   3eae8:	ldr	r2, [sp, #16]
   3eaec:	mul	r3, r3, r2
   3eaf0:	str	r3, [sp, #16]
   3eaf4:	ldr	r3, [sp, #196]	; 0xc4
   3eaf8:	ldr	r3, [r3]
   3eafc:	ldr	r2, [r6, #-4]
   3eb00:	mla	lr, r2, r3, lr
   3eb04:	add	r4, r4, #1
   3eb08:	ldr	r2, [sp, #20]
   3eb0c:	ldr	r3, [r2, #4]!
   3eb10:	str	r2, [sp, #20]
   3eb14:	sub	r3, r3, #1
   3eb18:	str	r3, [r8], #4
   3eb1c:	ldr	r2, [sp, #12]
   3eb20:	ldr	r3, [r2], #4
   3eb24:	str	r2, [sp, #12]
   3eb28:	mov	ip, r3
   3eb2c:	add	r6, r6, #4
   3eb30:	mov	r7, r6
   3eb34:	str	r3, [r6]
   3eb38:	cmp	r4, #0
   3eb3c:	beq	3eae4 <GetDataSlab+0x1d500>
   3eb40:	str	r8, [sp, #24]
   3eb44:	ldr	r0, [r8, #-4]
   3eb48:	mov	r1, r2
   3eb4c:	mov	r2, r1
   3eb50:	ldr	r3, [r1, #-4]!
   3eb54:	mul	r0, r3, r0
   3eb58:	ldr	r3, [r2]
   3eb5c:	mul	ip, r3, ip
   3eb60:	cmp	r1, r5
   3eb64:	bne	3eb4c <GetDataSlab+0x1d568>
   3eb68:	ldr	r3, [sp, #24]
   3eb6c:	str	r0, [r3, #-4]
   3eb70:	str	ip, [r7]
   3eb74:	ldr	r3, [fp, r4, lsl #2]
   3eb78:	ldr	r2, [sp, #16]
   3eb7c:	mul	r3, r3, r2
   3eb80:	str	r3, [sp, #16]
   3eb84:	ldr	r3, [r7, #-4]
   3eb88:	ldr	r2, [sp, #196]	; 0xc4
   3eb8c:	ldr	r2, [r2, r4, lsl #2]
   3eb90:	mla	lr, r2, r3, lr
   3eb94:	add	r3, r4, #1
   3eb98:	cmp	r9, r3
   3eb9c:	bgt	3eb04 <GetDataSlab+0x1d520>
   3eba0:	ldr	r3, [sp, #8]
   3eba4:	add	ip, r3, lr, lsl #3
   3eba8:	ldr	r3, [sp, #28]
   3ebac:	cmp	r3, #1
   3ebb0:	beq	314a4 <GetDataSlab+0xfec0>
   3ebb4:	ldr	r3, [sp, #16]
   3ebb8:	cmp	r3, #0
   3ebbc:	movgt	r3, #0
   3ebc0:	strgt	r3, [sp, #20]
   3ebc4:	movgt	r8, r3
   3ebc8:	bgt	316ec <GetDataSlab+0x10108>
   3ebcc:	mov	r3, #0
   3ebd0:	b	251fc <GetDataSlab+0x3c18>
   3ebd4:	ldr	r3, [fp]
   3ebd8:	ldr	r2, [sp, #16]
   3ebdc:	mul	r3, r3, r2
   3ebe0:	str	r3, [sp, #16]
   3ebe4:	ldr	r3, [sp, #196]	; 0xc4
   3ebe8:	ldr	r3, [r3]
   3ebec:	ldr	r2, [r5, #-4]
   3ebf0:	mla	lr, r2, r3, lr
   3ebf4:	add	r8, r8, #1
   3ebf8:	ldr	r2, [sp, #20]
   3ebfc:	ldr	r3, [r2, #4]!
   3ec00:	str	r2, [sp, #20]
   3ec04:	sub	r3, r3, #1
   3ec08:	str	r3, [r7], #4
   3ec0c:	ldr	r2, [sp, #12]
   3ec10:	ldr	r3, [r2], #4
   3ec14:	str	r2, [sp, #12]
   3ec18:	mov	ip, r3
   3ec1c:	add	r5, r5, #4
   3ec20:	mov	r6, r5
   3ec24:	str	r3, [r5]
   3ec28:	cmp	r8, #0
   3ec2c:	beq	3ebd4 <GetDataSlab+0x1d5f0>
   3ec30:	str	r7, [sp, #24]
   3ec34:	ldr	r0, [r7, #-4]
   3ec38:	mov	r1, r2
   3ec3c:	mov	r2, r1
   3ec40:	ldr	r3, [r1, #-4]!
   3ec44:	mul	r0, r3, r0
   3ec48:	ldr	r3, [r2]
   3ec4c:	mul	ip, r3, ip
   3ec50:	cmp	r1, r4
   3ec54:	bne	3ec3c <GetDataSlab+0x1d658>
   3ec58:	ldr	r3, [sp, #24]
   3ec5c:	str	r0, [r3, #-4]
   3ec60:	str	ip, [r6]
   3ec64:	ldr	r3, [fp, r8, lsl #2]
   3ec68:	ldr	r2, [sp, #16]
   3ec6c:	mul	r3, r3, r2
   3ec70:	str	r3, [sp, #16]
   3ec74:	ldr	r3, [r6, #-4]
   3ec78:	ldr	r2, [sp, #196]	; 0xc4
   3ec7c:	ldr	r2, [r2, r8, lsl #2]
   3ec80:	mla	lr, r2, r3, lr
   3ec84:	add	r3, r8, #1
   3ec88:	cmp	r9, r3
   3ec8c:	bgt	3ebf4 <GetDataSlab+0x1d610>
   3ec90:	ldr	r3, [sp, #8]
   3ec94:	add	ip, r3, lr
   3ec98:	ldr	r3, [sp, #28]
   3ec9c:	cmp	r3, #1
   3eca0:	beq	30d84 <GetDataSlab+0xf7a0>
   3eca4:	ldr	r3, [sp, #16]
   3eca8:	cmp	r3, #0
   3ecac:	movle	r3, #0
   3ecb0:	ble	251fc <GetDataSlab+0x3c18>
   3ecb4:	mov	r3, #0
   3ecb8:	str	r3, [sp, #20]
   3ecbc:	mov	r8, r3
   3ecc0:	b	30fd4 <GetDataSlab+0xf9f0>
   3ecc4:	ldr	r3, [fp]
   3ecc8:	ldr	r2, [sp, #16]
   3eccc:	mul	r3, r3, r2
   3ecd0:	str	r3, [sp, #16]
   3ecd4:	ldr	r3, [r6, #-4]
   3ecd8:	ldr	r2, [sp, #196]	; 0xc4
   3ecdc:	ldr	r2, [r2]
   3ece0:	mla	lr, r2, r3, lr
   3ece4:	add	r4, r4, #1
   3ece8:	ldr	r2, [sp, #20]
   3ecec:	ldr	r3, [r2, #4]!
   3ecf0:	str	r2, [sp, #20]
   3ecf4:	sub	r3, r3, #1
   3ecf8:	str	r3, [r8], #4
   3ecfc:	ldr	r2, [sp, #12]
   3ed00:	ldr	r3, [r2], #4
   3ed04:	str	r2, [sp, #12]
   3ed08:	mov	ip, r3
   3ed0c:	add	r6, r6, #4
   3ed10:	mov	r7, r6
   3ed14:	str	r3, [r6]
   3ed18:	cmp	r4, #0
   3ed1c:	beq	3ecc4 <GetDataSlab+0x1d6e0>
   3ed20:	str	r8, [sp, #24]
   3ed24:	ldr	r0, [r8, #-4]
   3ed28:	mov	r1, r2
   3ed2c:	mov	r2, r1
   3ed30:	ldr	r3, [r1, #-4]!
   3ed34:	mul	r0, r3, r0
   3ed38:	ldr	r3, [r2]
   3ed3c:	mul	ip, r3, ip
   3ed40:	cmp	r1, r5
   3ed44:	bne	3ed2c <GetDataSlab+0x1d748>
   3ed48:	ldr	r3, [sp, #24]
   3ed4c:	str	r0, [r3, #-4]
   3ed50:	str	ip, [r7]
   3ed54:	ldr	r3, [fp, r4, lsl #2]
   3ed58:	ldr	r2, [sp, #16]
   3ed5c:	mul	r3, r3, r2
   3ed60:	str	r3, [sp, #16]
   3ed64:	ldr	r3, [r7, #-4]
   3ed68:	ldr	r2, [sp, #196]	; 0xc4
   3ed6c:	ldr	r2, [r2, r4, lsl #2]
   3ed70:	mla	lr, r2, r3, lr
   3ed74:	add	r3, r4, #1
   3ed78:	cmp	r9, r3
   3ed7c:	bgt	3ece4 <GetDataSlab+0x1d700>
   3ed80:	ldr	r3, [sp, #8]
   3ed84:	add	ip, r3, lr
   3ed88:	ldr	r3, [sp, #28]
   3ed8c:	cmp	r3, #1
   3ed90:	beq	310e4 <GetDataSlab+0xfb00>
   3ed94:	ldr	r3, [sp, #16]
   3ed98:	cmp	r3, #0
   3ed9c:	movle	r3, #0
   3eda0:	ble	251fc <GetDataSlab+0x3c18>
   3eda4:	mov	r3, #0
   3eda8:	str	r3, [sp, #20]
   3edac:	mov	r8, r3
   3edb0:	b	31334 <GetDataSlab+0xfd50>
   3edb4:	ldr	r3, [fp]
   3edb8:	ldr	r2, [sp, #16]
   3edbc:	mul	r3, r3, r2
   3edc0:	str	r3, [sp, #16]
   3edc4:	ldr	r3, [sp, #196]	; 0xc4
   3edc8:	ldr	r3, [r3]
   3edcc:	ldr	r2, [r6, #-4]
   3edd0:	mla	lr, r2, r3, lr
   3edd4:	add	r4, r4, #1
   3edd8:	ldr	r2, [sp, #20]
   3eddc:	ldr	r3, [r2, #4]!
   3ede0:	str	r2, [sp, #20]
   3ede4:	sub	r3, r3, #1
   3ede8:	str	r3, [r8], #4
   3edec:	ldr	r2, [sp, #12]
   3edf0:	ldr	r3, [r2], #4
   3edf4:	str	r2, [sp, #12]
   3edf8:	mov	ip, r3
   3edfc:	add	r6, r6, #4
   3ee00:	mov	r7, r6
   3ee04:	str	r3, [r6]
   3ee08:	cmp	r4, #0
   3ee0c:	beq	3edb4 <GetDataSlab+0x1d7d0>
   3ee10:	str	r8, [sp, #24]
   3ee14:	ldr	r0, [r8, #-4]
   3ee18:	mov	r1, r2
   3ee1c:	mov	r2, r1
   3ee20:	ldr	r3, [r1, #-4]!
   3ee24:	mul	r0, r3, r0
   3ee28:	ldr	r3, [r2]
   3ee2c:	mul	ip, r3, ip
   3ee30:	cmp	r1, r5
   3ee34:	bne	3ee1c <GetDataSlab+0x1d838>
   3ee38:	ldr	r3, [sp, #24]
   3ee3c:	str	r0, [r3, #-4]
   3ee40:	str	ip, [r7]
   3ee44:	ldr	r3, [fp, r4, lsl #2]
   3ee48:	ldr	r2, [sp, #16]
   3ee4c:	mul	r3, r3, r2
   3ee50:	str	r3, [sp, #16]
   3ee54:	ldr	r3, [r7, #-4]
   3ee58:	ldr	r2, [sp, #196]	; 0xc4
   3ee5c:	ldr	r2, [r2, r4, lsl #2]
   3ee60:	mla	lr, r2, r3, lr
   3ee64:	add	r3, r4, #1
   3ee68:	cmp	r9, r3
   3ee6c:	bgt	3edd4 <GetDataSlab+0x1d7f0>
   3ee70:	ldr	r3, [sp, #8]
   3ee74:	add	ip, r3, lr, lsl #1
   3ee78:	ldr	r3, [sp, #28]
   3ee7c:	cmp	r3, #1
   3ee80:	beq	306d0 <GetDataSlab+0xf0ec>
   3ee84:	ldr	r3, [sp, #16]
   3ee88:	cmp	r3, #0
   3ee8c:	movle	r3, #0
   3ee90:	ble	251fc <GetDataSlab+0x3c18>
   3ee94:	mov	r3, #0
   3ee98:	str	r3, [sp, #20]
   3ee9c:	mov	r8, r3
   3eea0:	b	3091c <GetDataSlab+0xf338>
   3eea4:	ldr	r3, [fp]
   3eea8:	ldr	r2, [sp, #16]
   3eeac:	mul	r3, r3, r2
   3eeb0:	str	r3, [sp, #16]
   3eeb4:	ldr	r3, [sp, #196]	; 0xc4
   3eeb8:	ldr	r3, [r3]
   3eebc:	ldr	r2, [r6, #-4]
   3eec0:	mla	lr, r2, r3, lr
   3eec4:	add	r4, r4, #1
   3eec8:	ldr	r2, [sp, #20]
   3eecc:	ldr	r3, [r2, #4]!
   3eed0:	str	r2, [sp, #20]
   3eed4:	sub	r3, r3, #1
   3eed8:	str	r3, [r8], #4
   3eedc:	ldr	r2, [sp, #12]
   3eee0:	ldr	r3, [r2], #4
   3eee4:	str	r2, [sp, #12]
   3eee8:	mov	ip, r3
   3eeec:	add	r6, r6, #4
   3eef0:	mov	r7, r6
   3eef4:	str	r3, [r6]
   3eef8:	cmp	r4, #0
   3eefc:	beq	3eea4 <GetDataSlab+0x1d8c0>
   3ef00:	str	r8, [sp, #24]
   3ef04:	ldr	r0, [r8, #-4]
   3ef08:	mov	r1, r2
   3ef0c:	mov	r2, r1
   3ef10:	ldr	r3, [r1, #-4]!
   3ef14:	mul	r0, r3, r0
   3ef18:	ldr	r3, [r2]
   3ef1c:	mul	ip, r3, ip
   3ef20:	cmp	r1, r5
   3ef24:	bne	3ef0c <GetDataSlab+0x1d928>
   3ef28:	ldr	r3, [sp, #24]
   3ef2c:	str	r0, [r3, #-4]
   3ef30:	str	ip, [r7]
   3ef34:	ldr	r3, [fp, r4, lsl #2]
   3ef38:	ldr	r2, [sp, #16]
   3ef3c:	mul	r3, r3, r2
   3ef40:	str	r3, [sp, #16]
   3ef44:	ldr	r3, [r7, #-4]
   3ef48:	ldr	r2, [sp, #196]	; 0xc4
   3ef4c:	ldr	r2, [r2, r4, lsl #2]
   3ef50:	mla	lr, r2, r3, lr
   3ef54:	add	r3, r4, #1
   3ef58:	cmp	r9, r3
   3ef5c:	bgt	3eec4 <GetDataSlab+0x1d8e0>
   3ef60:	ldr	r3, [sp, #8]
   3ef64:	add	ip, r3, lr, lsl #1
   3ef68:	ldr	r3, [sp, #28]
   3ef6c:	cmp	r3, #1
   3ef70:	beq	30a2c <GetDataSlab+0xf448>
   3ef74:	ldr	r3, [sp, #16]
   3ef78:	cmp	r3, #0
   3ef7c:	movle	r3, #0
   3ef80:	ble	251fc <GetDataSlab+0x3c18>
   3ef84:	mov	r3, #0
   3ef88:	str	r3, [sp, #20]
   3ef8c:	mov	r8, r3
   3ef90:	b	30c78 <GetDataSlab+0xf694>
   3ef94:	ldr	r3, [fp]
   3ef98:	ldr	r2, [sp, #16]
   3ef9c:	mul	r3, r3, r2
   3efa0:	str	r3, [sp, #16]
   3efa4:	ldr	r3, [r6, #-4]
   3efa8:	ldr	r2, [sp, #196]	; 0xc4
   3efac:	ldr	r2, [r2]
   3efb0:	mla	lr, r2, r3, lr
   3efb4:	add	r4, r4, #1
   3efb8:	ldr	r2, [sp, #20]
   3efbc:	ldr	r3, [r2, #4]!
   3efc0:	str	r2, [sp, #20]
   3efc4:	sub	r3, r3, #1
   3efc8:	str	r3, [r8], #4
   3efcc:	ldr	r2, [sp, #12]
   3efd0:	ldr	r3, [r2], #4
   3efd4:	str	r2, [sp, #12]
   3efd8:	mov	ip, r3
   3efdc:	add	r6, r6, #4
   3efe0:	mov	r7, r6
   3efe4:	str	r3, [r6]
   3efe8:	cmp	r4, #0
   3efec:	beq	3ef94 <GetDataSlab+0x1d9b0>
   3eff0:	str	r8, [sp, #24]
   3eff4:	ldr	r0, [r8, #-4]
   3eff8:	mov	r1, r2
   3effc:	mov	r2, r1
   3f000:	ldr	r3, [r1, #-4]!
   3f004:	mul	r0, r3, r0
   3f008:	ldr	r3, [r2]
   3f00c:	mul	ip, r3, ip
   3f010:	cmp	r1, r5
   3f014:	bne	3effc <GetDataSlab+0x1da18>
   3f018:	ldr	r3, [sp, #24]
   3f01c:	str	r0, [r3, #-4]
   3f020:	str	ip, [r7]
   3f024:	ldr	r3, [fp, r4, lsl #2]
   3f028:	ldr	r2, [sp, #16]
   3f02c:	mul	r3, r3, r2
   3f030:	str	r3, [sp, #16]
   3f034:	ldr	r3, [r7, #-4]
   3f038:	ldr	r2, [sp, #196]	; 0xc4
   3f03c:	ldr	r2, [r2, r4, lsl #2]
   3f040:	mla	lr, r2, r3, lr
   3f044:	add	r3, r4, #1
   3f048:	cmp	r9, r3
   3f04c:	bgt	3efb4 <GetDataSlab+0x1d9d0>
   3f050:	ldr	r3, [sp, #8]
   3f054:	add	ip, r3, lr, lsl #2
   3f058:	ldr	r3, [sp, #28]
   3f05c:	cmp	r3, #1
   3f060:	beq	30018 <GetDataSlab+0xea34>
   3f064:	ldr	r3, [sp, #16]
   3f068:	cmp	r3, #0
   3f06c:	movle	r3, #0
   3f070:	ble	251fc <GetDataSlab+0x3c18>
   3f074:	mov	r3, #0
   3f078:	str	r3, [sp, #20]
   3f07c:	mov	r8, r3
   3f080:	b	30264 <GetDataSlab+0xec80>
   3f084:	ldr	r3, [fp]
   3f088:	ldr	r2, [sp, #16]
   3f08c:	mul	r3, r3, r2
   3f090:	str	r3, [sp, #16]
   3f094:	ldr	r3, [r6, #-4]
   3f098:	ldr	r2, [sp, #196]	; 0xc4
   3f09c:	ldr	r2, [r2]
   3f0a0:	mla	lr, r2, r3, lr
   3f0a4:	add	r4, r4, #1
   3f0a8:	ldr	r2, [sp, #20]
   3f0ac:	ldr	r3, [r2, #4]!
   3f0b0:	str	r2, [sp, #20]
   3f0b4:	sub	r3, r3, #1
   3f0b8:	str	r3, [r8], #4
   3f0bc:	ldr	r2, [sp, #12]
   3f0c0:	ldr	r3, [r2], #4
   3f0c4:	str	r2, [sp, #12]
   3f0c8:	mov	ip, r3
   3f0cc:	add	r6, r6, #4
   3f0d0:	mov	r7, r6
   3f0d4:	str	r3, [r6]
   3f0d8:	cmp	r4, #0
   3f0dc:	beq	3f084 <GetDataSlab+0x1daa0>
   3f0e0:	str	r8, [sp, #24]
   3f0e4:	ldr	r0, [r8, #-4]
   3f0e8:	mov	r1, r2
   3f0ec:	mov	r2, r1
   3f0f0:	ldr	r3, [r1, #-4]!
   3f0f4:	mul	r0, r3, r0
   3f0f8:	ldr	r3, [r2]
   3f0fc:	mul	ip, r3, ip
   3f100:	cmp	r1, r5
   3f104:	bne	3f0ec <GetDataSlab+0x1db08>
   3f108:	ldr	r3, [sp, #24]
   3f10c:	str	r0, [r3, #-4]
   3f110:	str	ip, [r7]
   3f114:	ldr	r3, [fp, r4, lsl #2]
   3f118:	ldr	r2, [sp, #16]
   3f11c:	mul	r3, r3, r2
   3f120:	str	r3, [sp, #16]
   3f124:	ldr	r3, [r7, #-4]
   3f128:	ldr	r2, [sp, #196]	; 0xc4
   3f12c:	ldr	r2, [r2, r4, lsl #2]
   3f130:	mla	lr, r2, r3, lr
   3f134:	add	r3, r4, #1
   3f138:	cmp	r9, r3
   3f13c:	bgt	3f0a4 <GetDataSlab+0x1dac0>
   3f140:	ldr	r3, [sp, #8]
   3f144:	add	ip, r3, lr, lsl #2
   3f148:	ldr	r3, [sp, #28]
   3f14c:	cmp	r3, #1
   3f150:	beq	30374 <GetDataSlab+0xed90>
   3f154:	ldr	r3, [sp, #16]
   3f158:	cmp	r3, #0
   3f15c:	movle	r3, #0
   3f160:	ble	251fc <GetDataSlab+0x3c18>
   3f164:	mov	r3, #0
   3f168:	str	r3, [sp, #20]
   3f16c:	mov	r8, r3
   3f170:	b	305c0 <GetDataSlab+0xefdc>
   3f174:	ldr	r3, [fp]
   3f178:	ldr	r2, [sp, #16]
   3f17c:	mul	r3, r3, r2
   3f180:	str	r3, [sp, #16]
   3f184:	ldr	r3, [r6, #-4]
   3f188:	ldr	r2, [sp, #196]	; 0xc4
   3f18c:	ldr	r2, [r2]
   3f190:	mla	lr, r2, r3, lr
   3f194:	add	r4, r4, #1
   3f198:	ldr	r2, [sp, #20]
   3f19c:	ldr	r3, [r2, #4]!
   3f1a0:	str	r2, [sp, #20]
   3f1a4:	sub	r3, r3, #1
   3f1a8:	str	r3, [r8], #4
   3f1ac:	ldr	r2, [sp, #12]
   3f1b0:	ldr	r3, [r2], #4
   3f1b4:	str	r2, [sp, #12]
   3f1b8:	mov	ip, r3
   3f1bc:	add	r6, r6, #4
   3f1c0:	mov	r7, r6
   3f1c4:	str	r3, [r6]
   3f1c8:	cmp	r4, #0
   3f1cc:	beq	3f174 <GetDataSlab+0x1db90>
   3f1d0:	str	r8, [sp, #24]
   3f1d4:	ldr	r0, [r8, #-4]
   3f1d8:	mov	r1, r2
   3f1dc:	mov	r2, r1
   3f1e0:	ldr	r3, [r1, #-4]!
   3f1e4:	mul	r0, r3, r0
   3f1e8:	ldr	r3, [r2]
   3f1ec:	mul	ip, r3, ip
   3f1f0:	cmp	r1, r5
   3f1f4:	bne	3f1dc <GetDataSlab+0x1dbf8>
   3f1f8:	ldr	r3, [sp, #24]
   3f1fc:	str	r0, [r3, #-4]
   3f200:	str	ip, [r7]
   3f204:	ldr	r3, [fp, r4, lsl #2]
   3f208:	ldr	r2, [sp, #16]
   3f20c:	mul	r3, r3, r2
   3f210:	str	r3, [sp, #16]
   3f214:	ldr	r3, [r7, #-4]
   3f218:	ldr	r2, [sp, #196]	; 0xc4
   3f21c:	ldr	r2, [r2, r4, lsl #2]
   3f220:	mla	lr, r2, r3, lr
   3f224:	add	r3, r4, #1
   3f228:	cmp	r9, r3
   3f22c:	bgt	3f194 <GetDataSlab+0x1dbb0>
   3f230:	ldr	r3, [sp, #8]
   3f234:	add	ip, r3, lr, lsl #2
   3f238:	ldr	r3, [sp, #28]
   3f23c:	cmp	r3, #1
   3f240:	beq	2fcb4 <GetDataSlab+0xe6d0>
   3f244:	ldr	r3, [sp, #16]
   3f248:	cmp	r3, #0
   3f24c:	movle	r3, #0
   3f250:	ble	251fc <GetDataSlab+0x3c18>
   3f254:	mov	r3, #0
   3f258:	str	r3, [sp, #20]
   3f25c:	mov	r8, r3
   3f260:	b	2ff04 <GetDataSlab+0xe920>
   3f264:	ldr	r3, [fp]
   3f268:	ldr	r2, [sp, #16]
   3f26c:	mul	r3, r3, r2
   3f270:	str	r3, [sp, #16]
   3f274:	ldr	r3, [sp, #196]	; 0xc4
   3f278:	ldr	r3, [r3]
   3f27c:	ldr	r2, [r6, #-4]
   3f280:	mla	lr, r2, r3, lr
   3f284:	add	r4, r4, #1
   3f288:	ldr	r2, [sp, #20]
   3f28c:	ldr	r3, [r2, #4]!
   3f290:	str	r2, [sp, #20]
   3f294:	sub	r3, r3, #1
   3f298:	str	r3, [r8], #4
   3f29c:	ldr	r2, [sp, #12]
   3f2a0:	ldr	r3, [r2], #4
   3f2a4:	str	r2, [sp, #12]
   3f2a8:	mov	ip, r3
   3f2ac:	add	r6, r6, #4
   3f2b0:	mov	r7, r6
   3f2b4:	str	r3, [r6]
   3f2b8:	cmp	r4, #0
   3f2bc:	beq	3f264 <GetDataSlab+0x1dc80>
   3f2c0:	str	r8, [sp, #24]
   3f2c4:	ldr	r0, [r8, #-4]
   3f2c8:	mov	r1, r2
   3f2cc:	mov	r2, r1
   3f2d0:	ldr	r3, [r1, #-4]!
   3f2d4:	mul	r0, r3, r0
   3f2d8:	ldr	r3, [r2]
   3f2dc:	mul	ip, r3, ip
   3f2e0:	cmp	r1, r5
   3f2e4:	bne	3f2cc <GetDataSlab+0x1dce8>
   3f2e8:	ldr	r3, [sp, #24]
   3f2ec:	str	r0, [r3, #-4]
   3f2f0:	str	ip, [r7]
   3f2f4:	ldr	r3, [fp, r4, lsl #2]
   3f2f8:	ldr	r2, [sp, #16]
   3f2fc:	mul	r3, r3, r2
   3f300:	str	r3, [sp, #16]
   3f304:	ldr	r3, [r7, #-4]
   3f308:	ldr	r2, [sp, #196]	; 0xc4
   3f30c:	ldr	r2, [r2, r4, lsl #2]
   3f310:	mla	lr, r2, r3, lr
   3f314:	add	r3, r4, #1
   3f318:	cmp	r9, r3
   3f31c:	bgt	3f284 <GetDataSlab+0x1dca0>
   3f320:	ldr	r3, [sp, #8]
   3f324:	add	ip, r3, lr, lsl #3
   3f328:	ldr	r3, [sp, #28]
   3f32c:	cmp	r3, #1
   3f330:	beq	2f950 <GetDataSlab+0xe36c>
   3f334:	ldr	r3, [sp, #16]
   3f338:	cmp	r3, #0
   3f33c:	movle	r3, #0
   3f340:	ble	251fc <GetDataSlab+0x3c18>
   3f344:	mov	r3, #0
   3f348:	str	r3, [sp, #20]
   3f34c:	mov	r8, r3
   3f350:	b	2fba0 <GetDataSlab+0xe5bc>
   3f354:	ldr	r3, [fp]
   3f358:	ldr	r2, [sp, #16]
   3f35c:	mul	r3, r3, r2
   3f360:	str	r3, [sp, #16]
   3f364:	ldr	r3, [r6, #-4]
   3f368:	ldr	r2, [sp, #196]	; 0xc4
   3f36c:	ldr	r2, [r2]
   3f370:	mla	lr, r2, r3, lr
   3f374:	add	r4, r4, #1
   3f378:	ldr	r2, [sp, #20]
   3f37c:	ldr	r3, [r2, #4]!
   3f380:	str	r2, [sp, #20]
   3f384:	sub	r3, r3, #1
   3f388:	str	r3, [r8], #4
   3f38c:	ldr	r2, [sp, #12]
   3f390:	ldr	r3, [r2], #4
   3f394:	str	r2, [sp, #12]
   3f398:	mov	ip, r3
   3f39c:	add	r6, r6, #4
   3f3a0:	mov	r7, r6
   3f3a4:	str	r3, [r6]
   3f3a8:	cmp	r4, #0
   3f3ac:	beq	3f354 <GetDataSlab+0x1dd70>
   3f3b0:	str	r8, [sp, #24]
   3f3b4:	ldr	r0, [r8, #-4]
   3f3b8:	mov	r1, r2
   3f3bc:	mov	r2, r1
   3f3c0:	ldr	r3, [r1, #-4]!
   3f3c4:	mul	r0, r3, r0
   3f3c8:	ldr	r3, [r2]
   3f3cc:	mul	ip, r3, ip
   3f3d0:	cmp	r1, r5
   3f3d4:	bne	3f3bc <GetDataSlab+0x1ddd8>
   3f3d8:	ldr	r3, [sp, #24]
   3f3dc:	str	r0, [r3, #-4]
   3f3e0:	str	ip, [r7]
   3f3e4:	ldr	r3, [fp, r4, lsl #2]
   3f3e8:	ldr	r2, [sp, #16]
   3f3ec:	mul	r3, r3, r2
   3f3f0:	str	r3, [sp, #16]
   3f3f4:	ldr	r3, [r7, #-4]
   3f3f8:	ldr	r2, [sp, #196]	; 0xc4
   3f3fc:	ldr	r2, [r2, r4, lsl #2]
   3f400:	mla	lr, r2, r3, lr
   3f404:	add	r3, r4, #1
   3f408:	cmp	r9, r3
   3f40c:	bgt	3f374 <GetDataSlab+0x1dd90>
   3f410:	ldr	r3, [sp, #8]
   3f414:	add	r4, r3, lr, lsl #3
   3f418:	ldr	r3, [sp, #28]
   3f41c:	cmp	r3, #1
   3f420:	beq	2b1cc <GetDataSlab+0x9be8>
   3f424:	ldr	r3, [sp, #16]
   3f428:	cmp	r3, #0
   3f42c:	movle	r3, #0
   3f430:	ble	251fc <GetDataSlab+0x3c18>
   3f434:	mov	r3, #0
   3f438:	str	r3, [sp, #20]
   3f43c:	mov	r8, r3
   3f440:	b	2b41c <GetDataSlab+0x9e38>
   3f444:	ldr	r3, [fp]
   3f448:	ldr	r2, [sp, #16]
   3f44c:	mul	r3, r3, r2
   3f450:	str	r3, [sp, #16]
   3f454:	ldr	r3, [sp, #196]	; 0xc4
   3f458:	ldr	r3, [r3]
   3f45c:	ldr	r2, [r6, #-4]
   3f460:	mla	lr, r2, r3, lr
   3f464:	add	r4, r4, #1
   3f468:	ldr	r2, [sp, #20]
   3f46c:	ldr	r3, [r2, #4]!
   3f470:	str	r2, [sp, #20]
   3f474:	sub	r3, r3, #1
   3f478:	str	r3, [r8], #4
   3f47c:	ldr	r2, [sp, #12]
   3f480:	ldr	r3, [r2], #4
   3f484:	str	r2, [sp, #12]
   3f488:	mov	ip, r3
   3f48c:	add	r6, r6, #4
   3f490:	mov	r7, r6
   3f494:	str	r3, [r6]
   3f498:	cmp	r4, #0
   3f49c:	beq	3f444 <GetDataSlab+0x1de60>
   3f4a0:	str	r8, [sp, #24]
   3f4a4:	ldr	r0, [r8, #-4]
   3f4a8:	mov	r1, r2
   3f4ac:	mov	r2, r1
   3f4b0:	ldr	r3, [r1, #-4]!
   3f4b4:	mul	r0, r3, r0
   3f4b8:	ldr	r3, [r2]
   3f4bc:	mul	ip, r3, ip
   3f4c0:	cmp	r1, r5
   3f4c4:	bne	3f4ac <GetDataSlab+0x1dec8>
   3f4c8:	ldr	r3, [sp, #24]
   3f4cc:	str	r0, [r3, #-4]
   3f4d0:	str	ip, [r7]
   3f4d4:	ldr	r3, [fp, r4, lsl #2]
   3f4d8:	ldr	r2, [sp, #16]
   3f4dc:	mul	r3, r3, r2
   3f4e0:	str	r3, [sp, #16]
   3f4e4:	ldr	r3, [r7, #-4]
   3f4e8:	ldr	r2, [sp, #196]	; 0xc4
   3f4ec:	ldr	r2, [r2, r4, lsl #2]
   3f4f0:	mla	lr, r2, r3, lr
   3f4f4:	add	r3, r4, #1
   3f4f8:	cmp	r9, r3
   3f4fc:	bgt	3f464 <GetDataSlab+0x1de80>
   3f500:	ldr	r3, [sp, #8]
   3f504:	add	r4, r3, lr, lsl #3
   3f508:	ldr	r3, [sp, #28]
   3f50c:	cmp	r3, #1
   3f510:	beq	2aec8 <GetDataSlab+0x98e4>
   3f514:	ldr	r3, [sp, #16]
   3f518:	cmp	r3, #0
   3f51c:	movgt	r3, #0
   3f520:	strgt	r3, [sp, #20]
   3f524:	movgt	r8, r3
   3f528:	bgt	2b110 <GetDataSlab+0x9b2c>
   3f52c:	mov	r3, #0
   3f530:	b	251fc <GetDataSlab+0x3c18>
   3f534:	ldr	r3, [fp]
   3f538:	ldr	r2, [sp, #16]
   3f53c:	mul	r3, r3, r2
   3f540:	str	r3, [sp, #16]
   3f544:	ldr	r3, [sp, #196]	; 0xc4
   3f548:	ldr	r3, [r3]
   3f54c:	ldr	r2, [r5, #-4]
   3f550:	mla	lr, r2, r3, lr
   3f554:	add	r8, r8, #1
   3f558:	ldr	r2, [sp, #20]
   3f55c:	ldr	r3, [r2, #4]!
   3f560:	str	r2, [sp, #20]
   3f564:	sub	r3, r3, #1
   3f568:	str	r3, [r7], #4
   3f56c:	ldr	r2, [sp, #12]
   3f570:	ldr	r3, [r2], #4
   3f574:	str	r2, [sp, #12]
   3f578:	mov	ip, r3
   3f57c:	add	r5, r5, #4
   3f580:	mov	r6, r5
   3f584:	str	r3, [r5]
   3f588:	cmp	r8, #0
   3f58c:	beq	3f534 <GetDataSlab+0x1df50>
   3f590:	str	r7, [sp, #24]
   3f594:	ldr	r0, [r7, #-4]
   3f598:	mov	r1, r2
   3f59c:	mov	r2, r1
   3f5a0:	ldr	r3, [r1, #-4]!
   3f5a4:	mul	r0, r3, r0
   3f5a8:	ldr	r3, [r2]
   3f5ac:	mul	ip, r3, ip
   3f5b0:	cmp	r1, r4
   3f5b4:	bne	3f59c <GetDataSlab+0x1dfb8>
   3f5b8:	ldr	r3, [sp, #24]
   3f5bc:	str	r0, [r3, #-4]
   3f5c0:	str	ip, [r6]
   3f5c4:	ldr	r3, [fp, r8, lsl #2]
   3f5c8:	ldr	r2, [sp, #16]
   3f5cc:	mul	r3, r3, r2
   3f5d0:	str	r3, [sp, #16]
   3f5d4:	ldr	r3, [r6, #-4]
   3f5d8:	ldr	r2, [sp, #196]	; 0xc4
   3f5dc:	ldr	r2, [r2, r8, lsl #2]
   3f5e0:	mla	lr, r2, r3, lr
   3f5e4:	add	r3, r8, #1
   3f5e8:	cmp	r9, r3
   3f5ec:	bgt	3f554 <GetDataSlab+0x1df70>
   3f5f0:	ldr	r3, [sp, #8]
   3f5f4:	add	ip, r3, lr
   3f5f8:	ldr	r3, [sp, #28]
   3f5fc:	cmp	r3, #1
   3f600:	beq	2a798 <GetDataSlab+0x91b4>
   3f604:	ldr	r3, [sp, #16]
   3f608:	cmp	r3, #0
   3f60c:	movle	r3, #0
   3f610:	ble	251fc <GetDataSlab+0x3c18>
   3f614:	mov	r3, #0
   3f618:	str	r3, [sp, #20]
   3f61c:	mov	r8, r3
   3f620:	b	2a9ec <GetDataSlab+0x9408>
   3f624:	ldr	r3, [fp]
   3f628:	ldr	r2, [sp, #16]
   3f62c:	mul	r3, r3, r2
   3f630:	str	r3, [sp, #16]
   3f634:	ldr	r3, [sp, #196]	; 0xc4
   3f638:	ldr	r3, [r3]
   3f63c:	ldr	r2, [r6, #-4]
   3f640:	mla	lr, r2, r3, lr
   3f644:	add	r4, r4, #1
   3f648:	ldr	r2, [sp, #20]
   3f64c:	ldr	r3, [r2, #4]!
   3f650:	str	r2, [sp, #20]
   3f654:	sub	r3, r3, #1
   3f658:	str	r3, [r8], #4
   3f65c:	ldr	r2, [sp, #12]
   3f660:	ldr	r3, [r2], #4
   3f664:	str	r2, [sp, #12]
   3f668:	mov	ip, r3
   3f66c:	add	r6, r6, #4
   3f670:	mov	r7, r6
   3f674:	str	r3, [r6]
   3f678:	cmp	r4, #0
   3f67c:	beq	3f624 <GetDataSlab+0x1e040>
   3f680:	str	r8, [sp, #24]
   3f684:	ldr	r0, [r8, #-4]
   3f688:	mov	r1, r2
   3f68c:	mov	r2, r1
   3f690:	ldr	r3, [r1, #-4]!
   3f694:	mul	r0, r3, r0
   3f698:	ldr	r3, [r2]
   3f69c:	mul	ip, r3, ip
   3f6a0:	cmp	r1, r5
   3f6a4:	bne	3f68c <GetDataSlab+0x1e0a8>
   3f6a8:	ldr	r3, [sp, #24]
   3f6ac:	str	r0, [r3, #-4]
   3f6b0:	str	ip, [r7]
   3f6b4:	ldr	r3, [fp, r4, lsl #2]
   3f6b8:	ldr	r2, [sp, #16]
   3f6bc:	mul	r3, r3, r2
   3f6c0:	str	r3, [sp, #16]
   3f6c4:	ldr	r3, [r7, #-4]
   3f6c8:	ldr	r2, [sp, #196]	; 0xc4
   3f6cc:	ldr	r2, [r2, r4, lsl #2]
   3f6d0:	mla	lr, r2, r3, lr
   3f6d4:	add	r3, r4, #1
   3f6d8:	cmp	r9, r3
   3f6dc:	bgt	3f644 <GetDataSlab+0x1e060>
   3f6e0:	ldr	r3, [sp, #8]
   3f6e4:	add	ip, r3, lr
   3f6e8:	ldr	r3, [sp, #28]
   3f6ec:	cmp	r3, #1
   3f6f0:	beq	2ab00 <GetDataSlab+0x951c>
   3f6f4:	ldr	r3, [sp, #16]
   3f6f8:	cmp	r3, #0
   3f6fc:	movle	r3, #0
   3f700:	ble	251fc <GetDataSlab+0x3c18>
   3f704:	mov	r3, #0
   3f708:	str	r3, [sp, #20]
   3f70c:	mov	r8, r3
   3f710:	b	2ad54 <GetDataSlab+0x9770>
   3f714:	ldr	r3, [fp]
   3f718:	ldr	r2, [sp, #16]
   3f71c:	mul	r3, r3, r2
   3f720:	str	r3, [sp, #16]
   3f724:	ldr	r3, [sp, #196]	; 0xc4
   3f728:	ldr	r3, [r3]
   3f72c:	ldr	r2, [r6, #-4]
   3f730:	mla	lr, r2, r3, lr
   3f734:	add	r4, r4, #1
   3f738:	ldr	r2, [sp, #20]
   3f73c:	ldr	r3, [r2, #4]!
   3f740:	str	r2, [sp, #20]
   3f744:	sub	r3, r3, #1
   3f748:	str	r3, [r8], #4
   3f74c:	ldr	r2, [sp, #12]
   3f750:	ldr	r3, [r2], #4
   3f754:	str	r2, [sp, #12]
   3f758:	mov	ip, r3
   3f75c:	add	r6, r6, #4
   3f760:	mov	r7, r6
   3f764:	str	r3, [r6]
   3f768:	cmp	r4, #0
   3f76c:	beq	3f714 <GetDataSlab+0x1e130>
   3f770:	str	r8, [sp, #24]
   3f774:	ldr	r0, [r8, #-4]
   3f778:	mov	r1, r2
   3f77c:	mov	r2, r1
   3f780:	ldr	r3, [r1, #-4]!
   3f784:	mul	r0, r3, r0
   3f788:	ldr	r3, [r2]
   3f78c:	mul	ip, r3, ip
   3f790:	cmp	r1, r5
   3f794:	bne	3f77c <GetDataSlab+0x1e198>
   3f798:	ldr	r3, [sp, #24]
   3f79c:	str	r0, [r3, #-4]
   3f7a0:	str	ip, [r7]
   3f7a4:	ldr	r3, [fp, r4, lsl #2]
   3f7a8:	ldr	r2, [sp, #16]
   3f7ac:	mul	r3, r3, r2
   3f7b0:	str	r3, [sp, #16]
   3f7b4:	ldr	r3, [r7, #-4]
   3f7b8:	ldr	r2, [sp, #196]	; 0xc4
   3f7bc:	ldr	r2, [r2, r4, lsl #2]
   3f7c0:	mla	lr, r2, r3, lr
   3f7c4:	add	r3, r4, #1
   3f7c8:	cmp	r9, r3
   3f7cc:	bgt	3f734 <GetDataSlab+0x1e150>
   3f7d0:	ldr	r3, [sp, #8]
   3f7d4:	add	r4, r3, lr, lsl #1
   3f7d8:	ldr	r3, [sp, #28]
   3f7dc:	cmp	r3, #1
   3f7e0:	beq	2a0d4 <GetDataSlab+0x8af0>
   3f7e4:	ldr	r3, [sp, #16]
   3f7e8:	cmp	r3, #0
   3f7ec:	movle	r3, #0
   3f7f0:	ble	251fc <GetDataSlab+0x3c18>
   3f7f4:	mov	r3, #0
   3f7f8:	str	r3, [sp, #20]
   3f7fc:	mov	r8, r3
   3f800:	b	2a324 <GetDataSlab+0x8d40>
   3f804:	ldr	r3, [fp]
   3f808:	ldr	r2, [sp, #16]
   3f80c:	mul	r3, r3, r2
   3f810:	str	r3, [sp, #16]
   3f814:	ldr	r3, [sp, #196]	; 0xc4
   3f818:	ldr	r3, [r3]
   3f81c:	ldr	r2, [r6, #-4]
   3f820:	mla	lr, r2, r3, lr
   3f824:	add	r4, r4, #1
   3f828:	ldr	r2, [sp, #20]
   3f82c:	ldr	r3, [r2, #4]!
   3f830:	str	r2, [sp, #20]
   3f834:	sub	r3, r3, #1
   3f838:	str	r3, [r8], #4
   3f83c:	ldr	r2, [sp, #12]
   3f840:	ldr	r3, [r2], #4
   3f844:	str	r2, [sp, #12]
   3f848:	mov	ip, r3
   3f84c:	add	r6, r6, #4
   3f850:	mov	r7, r6
   3f854:	str	r3, [r6]
   3f858:	cmp	r4, #0
   3f85c:	beq	3f804 <GetDataSlab+0x1e220>
   3f860:	str	r8, [sp, #24]
   3f864:	ldr	r0, [r8, #-4]
   3f868:	mov	r1, r2
   3f86c:	mov	r2, r1
   3f870:	ldr	r3, [r1, #-4]!
   3f874:	mul	r0, r3, r0
   3f878:	ldr	r3, [r2]
   3f87c:	mul	ip, r3, ip
   3f880:	cmp	r1, r5
   3f884:	bne	3f86c <GetDataSlab+0x1e288>
   3f888:	ldr	r3, [sp, #24]
   3f88c:	str	r0, [r3, #-4]
   3f890:	str	ip, [r7]
   3f894:	ldr	r3, [fp, r4, lsl #2]
   3f898:	ldr	r2, [sp, #16]
   3f89c:	mul	r3, r3, r2
   3f8a0:	str	r3, [sp, #16]
   3f8a4:	ldr	r3, [r7, #-4]
   3f8a8:	ldr	r2, [sp, #196]	; 0xc4
   3f8ac:	ldr	r2, [r2, r4, lsl #2]
   3f8b0:	mla	lr, r2, r3, lr
   3f8b4:	add	r3, r4, #1
   3f8b8:	cmp	r9, r3
   3f8bc:	bgt	3f824 <GetDataSlab+0x1e240>
   3f8c0:	ldr	r3, [sp, #8]
   3f8c4:	add	r4, r3, lr, lsl #1
   3f8c8:	ldr	r3, [sp, #28]
   3f8cc:	cmp	r3, #1
   3f8d0:	beq	2a438 <GetDataSlab+0x8e54>
   3f8d4:	ldr	r3, [sp, #16]
   3f8d8:	cmp	r3, #0
   3f8dc:	movle	r3, #0
   3f8e0:	ble	251fc <GetDataSlab+0x3c18>
   3f8e4:	mov	r3, #0
   3f8e8:	str	r3, [sp, #20]
   3f8ec:	mov	r8, r3
   3f8f0:	b	2a688 <GetDataSlab+0x90a4>
   3f8f4:	ldr	r3, [fp]
   3f8f8:	ldr	r2, [sp, #16]
   3f8fc:	mul	r3, r3, r2
   3f900:	str	r3, [sp, #16]
   3f904:	ldr	r3, [r6, #-4]
   3f908:	ldr	r2, [sp, #196]	; 0xc4
   3f90c:	ldr	r2, [r2]
   3f910:	mla	r4, r2, r3, r4
   3f914:	add	lr, lr, #1
   3f918:	ldr	r2, [sp, #20]
   3f91c:	ldr	r3, [r2, #4]!
   3f920:	str	r2, [sp, #20]
   3f924:	sub	r3, r3, #1
   3f928:	str	r3, [r8], #4
   3f92c:	ldr	r2, [sp, #12]
   3f930:	ldr	r3, [r2], #4
   3f934:	str	r2, [sp, #12]
   3f938:	mov	ip, r3
   3f93c:	add	r6, r6, #4
   3f940:	mov	r7, r6
   3f944:	str	r3, [r6]
   3f948:	cmp	lr, #0
   3f94c:	beq	3f8f4 <GetDataSlab+0x1e310>
   3f950:	str	r8, [sp, #24]
   3f954:	ldr	r0, [r8, #-4]
   3f958:	mov	r1, r2
   3f95c:	mov	r2, r1
   3f960:	ldr	r3, [r1, #-4]!
   3f964:	mul	r0, r3, r0
   3f968:	ldr	r3, [r2]
   3f96c:	mul	ip, r3, ip
   3f970:	cmp	r1, r5
   3f974:	bne	3f95c <GetDataSlab+0x1e378>
   3f978:	ldr	r3, [sp, #24]
   3f97c:	str	r0, [r3, #-4]
   3f980:	str	ip, [r7]
   3f984:	ldr	r3, [fp, lr, lsl #2]
   3f988:	ldr	r2, [sp, #16]
   3f98c:	mul	r3, r3, r2
   3f990:	str	r3, [sp, #16]
   3f994:	ldr	r3, [r7, #-4]
   3f998:	ldr	r2, [sp, #196]	; 0xc4
   3f99c:	ldr	r2, [r2, lr, lsl #2]
   3f9a0:	mla	r4, r2, r3, r4
   3f9a4:	add	r3, lr, #1
   3f9a8:	cmp	r9, r3
   3f9ac:	bgt	3f914 <GetDataSlab+0x1e330>
   3f9b0:	ldr	r3, [sp, #8]
   3f9b4:	add	lr, r3, r4, lsl #2
   3f9b8:	ldr	r3, [sp, #28]
   3f9bc:	cmp	r3, #1
   3f9c0:	beq	299fc <GetDataSlab+0x8418>
   3f9c4:	ldr	r3, [sp, #16]
   3f9c8:	cmp	r3, #0
   3f9cc:	movle	r3, #0
   3f9d0:	ble	251fc <GetDataSlab+0x3c18>
   3f9d4:	mov	r3, #0
   3f9d8:	str	r3, [sp, #20]
   3f9dc:	mov	r8, r3
   3f9e0:	b	29c50 <GetDataSlab+0x866c>
   3f9e4:	ldr	r3, [fp]
   3f9e8:	ldr	r2, [sp, #16]
   3f9ec:	mul	r3, r3, r2
   3f9f0:	str	r3, [sp, #16]
   3f9f4:	ldr	r3, [r6, #-4]
   3f9f8:	ldr	r2, [sp, #196]	; 0xc4
   3f9fc:	ldr	r2, [r2]
   3fa00:	mla	lr, r2, r3, lr
   3fa04:	add	r4, r4, #1
   3fa08:	ldr	r2, [sp, #20]
   3fa0c:	ldr	r3, [r2, #4]!
   3fa10:	str	r2, [sp, #20]
   3fa14:	sub	r3, r3, #1
   3fa18:	str	r3, [r8], #4
   3fa1c:	ldr	r2, [sp, #12]
   3fa20:	ldr	r3, [r2], #4
   3fa24:	str	r2, [sp, #12]
   3fa28:	mov	ip, r3
   3fa2c:	add	r6, r6, #4
   3fa30:	mov	r7, r6
   3fa34:	str	r3, [r6]
   3fa38:	cmp	r4, #0
   3fa3c:	beq	3f9e4 <GetDataSlab+0x1e400>
   3fa40:	str	r8, [sp, #24]
   3fa44:	ldr	r0, [r8, #-4]
   3fa48:	mov	r1, r2
   3fa4c:	mov	r2, r1
   3fa50:	ldr	r3, [r1, #-4]!
   3fa54:	mul	r0, r3, r0
   3fa58:	ldr	r3, [r2]
   3fa5c:	mul	ip, r3, ip
   3fa60:	cmp	r1, r5
   3fa64:	bne	3fa4c <GetDataSlab+0x1e468>
   3fa68:	ldr	r3, [sp, #24]
   3fa6c:	str	r0, [r3, #-4]
   3fa70:	str	ip, [r7]
   3fa74:	ldr	r3, [fp, r4, lsl #2]
   3fa78:	ldr	r2, [sp, #16]
   3fa7c:	mul	r3, r3, r2
   3fa80:	str	r3, [sp, #16]
   3fa84:	ldr	r3, [r7, #-4]
   3fa88:	ldr	r2, [sp, #196]	; 0xc4
   3fa8c:	ldr	r2, [r2, r4, lsl #2]
   3fa90:	mla	lr, r2, r3, lr
   3fa94:	add	r3, r4, #1
   3fa98:	cmp	r9, r3
   3fa9c:	bgt	3fa04 <GetDataSlab+0x1e420>
   3faa0:	ldr	r3, [sp, #8]
   3faa4:	add	ip, r3, lr, lsl #2
   3faa8:	ldr	r3, [sp, #28]
   3faac:	cmp	r3, #1
   3fab0:	beq	29d68 <GetDataSlab+0x8784>
   3fab4:	ldr	r3, [sp, #16]
   3fab8:	cmp	r3, #0
   3fabc:	movle	r3, #0
   3fac0:	ble	251fc <GetDataSlab+0x3c18>
   3fac4:	mov	r3, #0
   3fac8:	str	r3, [sp, #20]
   3facc:	mov	r7, r3
   3fad0:	b	29fbc <GetDataSlab+0x89d8>
   3fad4:	ldr	r3, [fp]
   3fad8:	ldr	r2, [sp, #12]
   3fadc:	mul	r3, r3, r2
   3fae0:	str	r3, [sp, #12]
   3fae4:	ldr	r3, [sp, #196]	; 0xc4
   3fae8:	ldr	r3, [r3]
   3faec:	ldr	r2, [r5, #-4]
   3faf0:	mla	r7, r2, r3, r7
   3faf4:	add	lr, lr, #1
   3faf8:	ldr	r2, [sp, #20]
   3fafc:	ldr	r3, [r2, #4]!
   3fb00:	str	r2, [sp, #20]
   3fb04:	sub	r3, r3, #1
   3fb08:	str	r3, [r8], #4
   3fb0c:	ldr	r2, [sp, #16]
   3fb10:	ldr	r3, [r2], #4
   3fb14:	str	r2, [sp, #16]
   3fb18:	mov	ip, r3
   3fb1c:	add	r5, r5, #4
   3fb20:	mov	r6, r5
   3fb24:	str	r3, [r5]
   3fb28:	cmp	lr, #0
   3fb2c:	beq	3fad4 <GetDataSlab+0x1e4f0>
   3fb30:	str	r8, [sp, #24]
   3fb34:	ldr	r0, [r8, #-4]
   3fb38:	mov	r1, r2
   3fb3c:	mov	r2, r1
   3fb40:	ldr	r3, [r1, #-4]!
   3fb44:	mul	r0, r3, r0
   3fb48:	ldr	r3, [r2]
   3fb4c:	mul	ip, r3, ip
   3fb50:	cmp	r1, r4
   3fb54:	bne	3fb3c <GetDataSlab+0x1e558>
   3fb58:	ldr	r3, [sp, #24]
   3fb5c:	str	r0, [r3, #-4]
   3fb60:	str	ip, [r6]
   3fb64:	ldr	r3, [fp, lr, lsl #2]
   3fb68:	ldr	r2, [sp, #12]
   3fb6c:	mul	r3, r3, r2
   3fb70:	str	r3, [sp, #12]
   3fb74:	ldr	r3, [r6, #-4]
   3fb78:	ldr	r2, [sp, #196]	; 0xc4
   3fb7c:	ldr	r2, [r2, lr, lsl #2]
   3fb80:	mla	r7, r2, r3, r7
   3fb84:	add	r3, lr, #1
   3fb88:	cmp	r9, r3
   3fb8c:	bgt	3faf4 <GetDataSlab+0x1e510>
   3fb90:	ldr	r3, [sp, #8]
   3fb94:	add	r8, r3, r7, lsl #2
   3fb98:	ldr	r3, [sp, #28]
   3fb9c:	cmp	r3, #1
   3fba0:	beq	296ac <GetDataSlab+0x80c8>
   3fba4:	ldr	r3, [sp, #12]
   3fba8:	cmp	r3, #0
   3fbac:	movle	r3, #0
   3fbb0:	ble	251fc <GetDataSlab+0x3c18>
   3fbb4:	mov	r3, #0
   3fbb8:	str	r3, [sp, #8]
   3fbbc:	b	298e8 <GetDataSlab+0x8304>
   3fbc0:	ldr	r3, [fp]
   3fbc4:	ldr	r2, [sp, #12]
   3fbc8:	mul	r3, r3, r2
   3fbcc:	str	r3, [sp, #12]
   3fbd0:	ldr	r3, [sp, #196]	; 0xc4
   3fbd4:	ldr	r3, [r3]
   3fbd8:	ldr	r2, [r5, #-4]
   3fbdc:	mla	r7, r2, r3, r7
   3fbe0:	add	lr, lr, #1
   3fbe4:	ldr	r2, [sp, #20]
   3fbe8:	ldr	r3, [r2, #4]!
   3fbec:	str	r2, [sp, #20]
   3fbf0:	sub	r3, r3, #1
   3fbf4:	str	r3, [r8], #4
   3fbf8:	ldr	r2, [sp, #16]
   3fbfc:	ldr	r3, [r2], #4
   3fc00:	str	r2, [sp, #16]
   3fc04:	mov	ip, r3
   3fc08:	add	r5, r5, #4
   3fc0c:	mov	r6, r5
   3fc10:	str	r3, [r5]
   3fc14:	cmp	lr, #0
   3fc18:	beq	3fbc0 <GetDataSlab+0x1e5dc>
   3fc1c:	str	r8, [sp, #24]
   3fc20:	ldr	r0, [r8, #-4]
   3fc24:	mov	r1, r2
   3fc28:	mov	r2, r1
   3fc2c:	ldr	r3, [r1, #-4]!
   3fc30:	mul	r0, r3, r0
   3fc34:	ldr	r3, [r2]
   3fc38:	mul	ip, r3, ip
   3fc3c:	cmp	r1, r4
   3fc40:	bne	3fc28 <GetDataSlab+0x1e644>
   3fc44:	ldr	r3, [sp, #24]
   3fc48:	str	r0, [r3, #-4]
   3fc4c:	str	ip, [r6]
   3fc50:	ldr	r3, [fp, lr, lsl #2]
   3fc54:	ldr	r2, [sp, #12]
   3fc58:	mul	r3, r3, r2
   3fc5c:	str	r3, [sp, #12]
   3fc60:	ldr	r3, [r6, #-4]
   3fc64:	ldr	r2, [sp, #196]	; 0xc4
   3fc68:	ldr	r2, [r2, lr, lsl #2]
   3fc6c:	mla	r7, r2, r3, r7
   3fc70:	add	r3, lr, #1
   3fc74:	cmp	r9, r3
   3fc78:	bgt	3fbe0 <GetDataSlab+0x1e5fc>
   3fc7c:	ldr	r3, [sp, #8]
   3fc80:	add	r8, r3, r7, lsl #3
   3fc84:	ldr	r3, [sp, #28]
   3fc88:	cmp	r3, #1
   3fc8c:	beq	2935c <GetDataSlab+0x7d78>
   3fc90:	ldr	r3, [sp, #12]
   3fc94:	cmp	r3, #0
   3fc98:	movle	r3, #0
   3fc9c:	ble	251fc <GetDataSlab+0x3c18>
   3fca0:	mov	r3, #0
   3fca4:	str	r3, [sp, #8]
   3fca8:	b	29598 <GetDataSlab+0x7fb4>
   3fcac:	ldr	r3, [fp]
   3fcb0:	ldr	r2, [sp, #16]
   3fcb4:	mul	r3, r3, r2
   3fcb8:	str	r3, [sp, #16]
   3fcbc:	ldr	r3, [r6, #-4]
   3fcc0:	ldr	r2, [sp, #196]	; 0xc4
   3fcc4:	ldr	r2, [r2]
   3fcc8:	mla	lr, r2, r3, lr
   3fccc:	add	r4, r4, #1
   3fcd0:	ldr	r2, [sp, #20]
   3fcd4:	ldr	r3, [r2, #4]!
   3fcd8:	str	r2, [sp, #20]
   3fcdc:	sub	r3, r3, #1
   3fce0:	str	r3, [r8], #4
   3fce4:	ldr	r2, [sp, #12]
   3fce8:	ldr	r3, [r2], #4
   3fcec:	str	r2, [sp, #12]
   3fcf0:	mov	ip, r3
   3fcf4:	add	r6, r6, #4
   3fcf8:	mov	r7, r6
   3fcfc:	str	r3, [r6]
   3fd00:	cmp	r4, #0
   3fd04:	beq	3fcac <GetDataSlab+0x1e6c8>
   3fd08:	str	r8, [sp, #24]
   3fd0c:	ldr	r0, [r8, #-4]
   3fd10:	mov	r1, r2
   3fd14:	mov	r2, r1
   3fd18:	ldr	r3, [r1, #-4]!
   3fd1c:	mul	r0, r3, r0
   3fd20:	ldr	r3, [r2]
   3fd24:	mul	ip, r3, ip
   3fd28:	cmp	r1, r5
   3fd2c:	bne	3fd14 <GetDataSlab+0x1e730>
   3fd30:	ldr	r3, [sp, #24]
   3fd34:	str	r0, [r3, #-4]
   3fd38:	str	ip, [r7]
   3fd3c:	ldr	r3, [fp, r4, lsl #2]
   3fd40:	ldr	r2, [sp, #16]
   3fd44:	mul	r3, r3, r2
   3fd48:	str	r3, [sp, #16]
   3fd4c:	ldr	r3, [r7, #-4]
   3fd50:	ldr	r2, [sp, #196]	; 0xc4
   3fd54:	ldr	r2, [r2, r4, lsl #2]
   3fd58:	mla	lr, r2, r3, lr
   3fd5c:	add	r3, r4, #1
   3fd60:	cmp	r9, r3
   3fd64:	bgt	3fccc <GetDataSlab+0x1e6e8>
   3fd68:	ldr	r3, [sp, #8]
   3fd6c:	add	r4, r3, lr, lsl #3
   3fd70:	ldr	r3, [sp, #28]
   3fd74:	cmp	r3, #1
   3fd78:	beq	2d3d0 <GetDataSlab+0xbdec>
   3fd7c:	ldr	r3, [sp, #16]
   3fd80:	cmp	r3, #0
   3fd84:	movle	r3, #0
   3fd88:	ble	251fc <GetDataSlab+0x3c18>
   3fd8c:	mov	r3, #0
   3fd90:	str	r3, [sp, #20]
   3fd94:	mov	r8, r3
   3fd98:	b	2d620 <GetDataSlab+0xc03c>
   3fd9c:	ldr	r3, [fp]
   3fda0:	ldr	r2, [sp, #16]
   3fda4:	mul	r3, r3, r2
   3fda8:	str	r3, [sp, #16]
   3fdac:	ldr	r3, [sp, #196]	; 0xc4
   3fdb0:	ldr	r3, [r3]
   3fdb4:	ldr	r2, [r6, #-4]
   3fdb8:	mla	lr, r2, r3, lr
   3fdbc:	add	r4, r4, #1
   3fdc0:	ldr	r2, [sp, #20]
   3fdc4:	ldr	r3, [r2, #4]!
   3fdc8:	str	r2, [sp, #20]
   3fdcc:	sub	r3, r3, #1
   3fdd0:	str	r3, [r8], #4
   3fdd4:	ldr	r2, [sp, #12]
   3fdd8:	ldr	r3, [r2], #4
   3fddc:	str	r2, [sp, #12]
   3fde0:	mov	ip, r3
   3fde4:	add	r6, r6, #4
   3fde8:	mov	r7, r6
   3fdec:	str	r3, [r6]
   3fdf0:	cmp	r4, #0
   3fdf4:	beq	3fd9c <GetDataSlab+0x1e7b8>
   3fdf8:	str	r8, [sp, #24]
   3fdfc:	ldr	r0, [r8, #-4]
   3fe00:	mov	r1, r2
   3fe04:	mov	r2, r1
   3fe08:	ldr	r3, [r1, #-4]!
   3fe0c:	mul	r0, r3, r0
   3fe10:	ldr	r3, [r2]
   3fe14:	mul	ip, r3, ip
   3fe18:	cmp	r1, r5
   3fe1c:	bne	3fe04 <GetDataSlab+0x1e820>
   3fe20:	ldr	r3, [sp, #24]
   3fe24:	str	r0, [r3, #-4]
   3fe28:	str	ip, [r7]
   3fe2c:	ldr	r3, [fp, r4, lsl #2]
   3fe30:	ldr	r2, [sp, #16]
   3fe34:	mul	r3, r3, r2
   3fe38:	str	r3, [sp, #16]
   3fe3c:	ldr	r3, [r7, #-4]
   3fe40:	ldr	r2, [sp, #196]	; 0xc4
   3fe44:	ldr	r2, [r2, r4, lsl #2]
   3fe48:	mla	lr, r2, r3, lr
   3fe4c:	add	r3, r4, #1
   3fe50:	cmp	r9, r3
   3fe54:	bgt	3fdbc <GetDataSlab+0x1e7d8>
   3fe58:	ldr	r3, [sp, #8]
   3fe5c:	add	r4, r3, lr, lsl #3
   3fe60:	ldr	r3, [sp, #28]
   3fe64:	cmp	r3, #1
   3fe68:	beq	2d0cc <GetDataSlab+0xbae8>
   3fe6c:	ldr	r3, [sp, #16]
   3fe70:	cmp	r3, #0
   3fe74:	movgt	r3, #0
   3fe78:	strgt	r3, [sp, #20]
   3fe7c:	movgt	r8, r3
   3fe80:	bgt	2d314 <GetDataSlab+0xbd30>
   3fe84:	mov	r3, #0
   3fe88:	b	251fc <GetDataSlab+0x3c18>
   3fe8c:	ldr	r3, [fp]
   3fe90:	ldr	r2, [sp, #16]
   3fe94:	mul	r3, r3, r2
   3fe98:	str	r3, [sp, #16]
   3fe9c:	ldr	r3, [sp, #196]	; 0xc4
   3fea0:	ldr	r3, [r3]
   3fea4:	ldr	r2, [r5, #-4]
   3fea8:	mla	lr, r2, r3, lr
   3feac:	add	r8, r8, #1
   3feb0:	ldr	r2, [sp, #20]
   3feb4:	ldr	r3, [r2, #4]!
   3feb8:	str	r2, [sp, #20]
   3febc:	sub	r3, r3, #1
   3fec0:	str	r3, [r7], #4
   3fec4:	ldr	r2, [sp, #12]
   3fec8:	ldr	r3, [r2], #4
   3fecc:	str	r2, [sp, #12]
   3fed0:	mov	ip, r3
   3fed4:	add	r5, r5, #4
   3fed8:	mov	r6, r5
   3fedc:	str	r3, [r5]
   3fee0:	cmp	r8, #0
   3fee4:	beq	3fe8c <GetDataSlab+0x1e8a8>
   3fee8:	str	r7, [sp, #24]
   3feec:	ldr	r0, [r7, #-4]
   3fef0:	mov	r1, r2
   3fef4:	mov	r2, r1
   3fef8:	ldr	r3, [r1, #-4]!
   3fefc:	mul	r0, r3, r0
   3ff00:	ldr	r3, [r2]
   3ff04:	mul	ip, r3, ip
   3ff08:	cmp	r1, r4
   3ff0c:	bne	3fef4 <GetDataSlab+0x1e910>
   3ff10:	ldr	r3, [sp, #24]
   3ff14:	str	r0, [r3, #-4]
   3ff18:	str	ip, [r6]
   3ff1c:	ldr	r3, [fp, r8, lsl #2]
   3ff20:	ldr	r2, [sp, #16]
   3ff24:	mul	r3, r3, r2
   3ff28:	str	r3, [sp, #16]
   3ff2c:	ldr	r3, [r6, #-4]
   3ff30:	ldr	r2, [sp, #196]	; 0xc4
   3ff34:	ldr	r2, [r2, r8, lsl #2]
   3ff38:	mla	lr, r2, r3, lr
   3ff3c:	add	r3, r8, #1
   3ff40:	cmp	r9, r3
   3ff44:	bgt	3feac <GetDataSlab+0x1e8c8>
   3ff48:	ldr	r3, [sp, #8]
   3ff4c:	add	ip, r3, lr
   3ff50:	ldr	r3, [sp, #28]
   3ff54:	cmp	r3, #1
   3ff58:	beq	2c99c <GetDataSlab+0xb3b8>
   3ff5c:	ldr	r3, [sp, #16]
   3ff60:	cmp	r3, #0
   3ff64:	movle	r3, #0
   3ff68:	ble	251fc <GetDataSlab+0x3c18>
   3ff6c:	mov	r3, #0
   3ff70:	str	r3, [sp, #20]
   3ff74:	mov	r8, r3
   3ff78:	b	2cbf0 <GetDataSlab+0xb60c>
   3ff7c:	ldr	r3, [fp]
   3ff80:	ldr	r2, [sp, #16]
   3ff84:	mul	r3, r3, r2
   3ff88:	str	r3, [sp, #16]
   3ff8c:	ldr	r3, [r6, #-4]
   3ff90:	ldr	r2, [sp, #196]	; 0xc4
   3ff94:	ldr	r2, [r2]
   3ff98:	mla	lr, r2, r3, lr
   3ff9c:	add	r4, r4, #1
   3ffa0:	ldr	r2, [sp, #20]
   3ffa4:	ldr	r3, [r2, #4]!
   3ffa8:	str	r2, [sp, #20]
   3ffac:	sub	r3, r3, #1
   3ffb0:	str	r3, [r8], #4
   3ffb4:	ldr	r2, [sp, #12]
   3ffb8:	ldr	r3, [r2], #4
   3ffbc:	str	r2, [sp, #12]
   3ffc0:	mov	ip, r3
   3ffc4:	add	r6, r6, #4
   3ffc8:	mov	r7, r6
   3ffcc:	str	r3, [r6]
   3ffd0:	cmp	r4, #0
   3ffd4:	beq	3ff7c <GetDataSlab+0x1e998>
   3ffd8:	str	r8, [sp, #24]
   3ffdc:	ldr	r0, [r8, #-4]
   3ffe0:	mov	r1, r2
   3ffe4:	mov	r2, r1
   3ffe8:	ldr	r3, [r1, #-4]!
   3ffec:	mul	r0, r3, r0
   3fff0:	ldr	r3, [r2]
   3fff4:	mul	ip, r3, ip
   3fff8:	cmp	r1, r5
   3fffc:	bne	3ffe4 <GetDataSlab+0x1ea00>
   40000:	ldr	r3, [sp, #24]
   40004:	str	r0, [r3, #-4]
   40008:	str	ip, [r7]
   4000c:	ldr	r3, [fp, r4, lsl #2]
   40010:	ldr	r2, [sp, #16]
   40014:	mul	r3, r3, r2
   40018:	str	r3, [sp, #16]
   4001c:	ldr	r3, [r7, #-4]
   40020:	ldr	r2, [sp, #196]	; 0xc4
   40024:	ldr	r2, [r2, r4, lsl #2]
   40028:	mla	lr, r2, r3, lr
   4002c:	add	r3, r4, #1
   40030:	cmp	r9, r3
   40034:	bgt	3ff9c <GetDataSlab+0x1e9b8>
   40038:	ldr	r3, [sp, #8]
   4003c:	add	ip, r3, lr
   40040:	ldr	r3, [sp, #28]
   40044:	cmp	r3, #1
   40048:	beq	2cd04 <GetDataSlab+0xb720>
   4004c:	ldr	r3, [sp, #16]
   40050:	cmp	r3, #0
   40054:	movle	r3, #0
   40058:	ble	251fc <GetDataSlab+0x3c18>
   4005c:	mov	r3, #0
   40060:	str	r3, [sp, #20]
   40064:	mov	r8, r3
   40068:	b	2cf58 <GetDataSlab+0xb974>
   4006c:	ldr	r3, [fp]
   40070:	ldr	r2, [sp, #16]
   40074:	mul	r3, r3, r2
   40078:	str	r3, [sp, #16]
   4007c:	ldr	r3, [sp, #196]	; 0xc4
   40080:	ldr	r3, [r3]
   40084:	ldr	r2, [r6, #-4]
   40088:	mla	lr, r2, r3, lr
   4008c:	add	r4, r4, #1
   40090:	ldr	r2, [sp, #20]
   40094:	ldr	r3, [r2, #4]!
   40098:	str	r2, [sp, #20]
   4009c:	sub	r3, r3, #1
   400a0:	str	r3, [r8], #4
   400a4:	ldr	r2, [sp, #12]
   400a8:	ldr	r3, [r2], #4
   400ac:	str	r2, [sp, #12]
   400b0:	mov	ip, r3
   400b4:	add	r6, r6, #4
   400b8:	mov	r7, r6
   400bc:	str	r3, [r6]
   400c0:	cmp	r4, #0
   400c4:	beq	4006c <GetDataSlab+0x1ea88>
   400c8:	str	r8, [sp, #24]
   400cc:	ldr	r0, [r8, #-4]
   400d0:	mov	r1, r2
   400d4:	mov	r2, r1
   400d8:	ldr	r3, [r1, #-4]!
   400dc:	mul	r0, r3, r0
   400e0:	ldr	r3, [r2]
   400e4:	mul	ip, r3, ip
   400e8:	cmp	r1, r5
   400ec:	bne	400d4 <GetDataSlab+0x1eaf0>
   400f0:	ldr	r3, [sp, #24]
   400f4:	str	r0, [r3, #-4]
   400f8:	str	ip, [r7]
   400fc:	ldr	r3, [fp, r4, lsl #2]
   40100:	ldr	r2, [sp, #16]
   40104:	mul	r3, r3, r2
   40108:	str	r3, [sp, #16]
   4010c:	ldr	r3, [r7, #-4]
   40110:	ldr	r2, [sp, #196]	; 0xc4
   40114:	ldr	r2, [r2, r4, lsl #2]
   40118:	mla	lr, r2, r3, lr
   4011c:	add	r3, r4, #1
   40120:	cmp	r9, r3
   40124:	bgt	4008c <GetDataSlab+0x1eaa8>
   40128:	ldr	r3, [sp, #8]
   4012c:	add	r4, r3, lr, lsl #1
   40130:	ldr	r3, [sp, #28]
   40134:	cmp	r3, #1
   40138:	beq	2c2d8 <GetDataSlab+0xacf4>
   4013c:	ldr	r3, [sp, #16]
   40140:	cmp	r3, #0
   40144:	movle	r3, #0
   40148:	ble	251fc <GetDataSlab+0x3c18>
   4014c:	mov	r3, #0
   40150:	str	r3, [sp, #20]
   40154:	mov	r8, r3
   40158:	b	2c528 <GetDataSlab+0xaf44>
   4015c:	ldr	r3, [fp]
   40160:	ldr	r2, [sp, #16]
   40164:	mul	r3, r3, r2
   40168:	str	r3, [sp, #16]
   4016c:	ldr	r3, [r6, #-4]
   40170:	ldr	r2, [sp, #196]	; 0xc4
   40174:	ldr	r2, [r2]
   40178:	mla	lr, r2, r3, lr
   4017c:	add	r4, r4, #1
   40180:	ldr	r2, [sp, #20]
   40184:	ldr	r3, [r2, #4]!
   40188:	str	r2, [sp, #20]
   4018c:	sub	r3, r3, #1
   40190:	str	r3, [r8], #4
   40194:	ldr	r2, [sp, #12]
   40198:	ldr	r3, [r2], #4
   4019c:	str	r2, [sp, #12]
   401a0:	mov	ip, r3
   401a4:	add	r6, r6, #4
   401a8:	mov	r7, r6
   401ac:	str	r3, [r6]
   401b0:	cmp	r4, #0
   401b4:	beq	4015c <GetDataSlab+0x1eb78>
   401b8:	str	r8, [sp, #24]
   401bc:	ldr	r0, [r8, #-4]
   401c0:	mov	r1, r2
   401c4:	mov	r2, r1
   401c8:	ldr	r3, [r1, #-4]!
   401cc:	mul	r0, r3, r0
   401d0:	ldr	r3, [r2]
   401d4:	mul	ip, r3, ip
   401d8:	cmp	r1, r5
   401dc:	bne	401c4 <GetDataSlab+0x1ebe0>
   401e0:	ldr	r3, [sp, #24]
   401e4:	str	r0, [r3, #-4]
   401e8:	str	ip, [r7]
   401ec:	ldr	r3, [fp, r4, lsl #2]
   401f0:	ldr	r2, [sp, #16]
   401f4:	mul	r3, r3, r2
   401f8:	str	r3, [sp, #16]
   401fc:	ldr	r3, [r7, #-4]
   40200:	ldr	r2, [sp, #196]	; 0xc4
   40204:	ldr	r2, [r2, r4, lsl #2]
   40208:	mla	lr, r2, r3, lr
   4020c:	add	r3, r4, #1
   40210:	cmp	r9, r3
   40214:	bgt	4017c <GetDataSlab+0x1eb98>
   40218:	ldr	r3, [sp, #8]
   4021c:	add	r4, r3, lr, lsl #1
   40220:	ldr	r3, [sp, #28]
   40224:	cmp	r3, #1
   40228:	beq	2c63c <GetDataSlab+0xb058>
   4022c:	ldr	r3, [sp, #16]
   40230:	cmp	r3, #0
   40234:	movle	r3, #0
   40238:	ble	251fc <GetDataSlab+0x3c18>
   4023c:	mov	r3, #0
   40240:	str	r3, [sp, #20]
   40244:	mov	r8, r3
   40248:	b	2c88c <GetDataSlab+0xb2a8>
   4024c:	ldr	r3, [fp]
   40250:	ldr	r2, [sp, #16]
   40254:	mul	r3, r3, r2
   40258:	str	r3, [sp, #16]
   4025c:	ldr	r3, [sp, #196]	; 0xc4
   40260:	ldr	r3, [r3]
   40264:	ldr	r2, [r6, #-4]
   40268:	mla	r4, r2, r3, r4
   4026c:	add	lr, lr, #1
   40270:	ldr	r2, [sp, #20]
   40274:	ldr	r3, [r2, #4]!
   40278:	str	r2, [sp, #20]
   4027c:	sub	r3, r3, #1
   40280:	str	r3, [r8], #4
   40284:	ldr	r2, [sp, #12]
   40288:	ldr	r3, [r2], #4
   4028c:	str	r2, [sp, #12]
   40290:	mov	ip, r3
   40294:	add	r6, r6, #4
   40298:	mov	r7, r6
   4029c:	str	r3, [r6]
   402a0:	cmp	lr, #0
   402a4:	beq	4024c <GetDataSlab+0x1ec68>
   402a8:	str	r8, [sp, #24]
   402ac:	ldr	r0, [r8, #-4]
   402b0:	mov	r1, r2
   402b4:	mov	r2, r1
   402b8:	ldr	r3, [r1, #-4]!
   402bc:	mul	r0, r3, r0
   402c0:	ldr	r3, [r2]
   402c4:	mul	ip, r3, ip
   402c8:	cmp	r1, r5
   402cc:	bne	402b4 <GetDataSlab+0x1ecd0>
   402d0:	ldr	r3, [sp, #24]
   402d4:	str	r0, [r3, #-4]
   402d8:	str	ip, [r7]
   402dc:	ldr	r3, [fp, lr, lsl #2]
   402e0:	ldr	r2, [sp, #16]
   402e4:	mul	r3, r3, r2
   402e8:	str	r3, [sp, #16]
   402ec:	ldr	r3, [r7, #-4]
   402f0:	ldr	r2, [sp, #196]	; 0xc4
   402f4:	ldr	r2, [r2, lr, lsl #2]
   402f8:	mla	r4, r2, r3, r4
   402fc:	add	r3, lr, #1
   40300:	cmp	r9, r3
   40304:	bgt	4026c <GetDataSlab+0x1ec88>
   40308:	ldr	r3, [sp, #8]
   4030c:	add	lr, r3, r4, lsl #2
   40310:	ldr	r3, [sp, #28]
   40314:	cmp	r3, #1
   40318:	beq	2bc00 <GetDataSlab+0xa61c>
   4031c:	ldr	r3, [sp, #16]
   40320:	cmp	r3, #0
   40324:	movle	r3, #0
   40328:	ble	251fc <GetDataSlab+0x3c18>
   4032c:	mov	r3, #0
   40330:	str	r3, [sp, #20]
   40334:	mov	r8, r3
   40338:	b	2be54 <GetDataSlab+0xa870>
   4033c:	ldr	r3, [fp]
   40340:	ldr	r2, [sp, #16]
   40344:	mul	r3, r3, r2
   40348:	str	r3, [sp, #16]
   4034c:	ldr	r3, [r6, #-4]
   40350:	ldr	r2, [sp, #196]	; 0xc4
   40354:	ldr	r2, [r2]
   40358:	mla	lr, r2, r3, lr
   4035c:	add	r4, r4, #1
   40360:	ldr	r2, [sp, #20]
   40364:	ldr	r3, [r2, #4]!
   40368:	str	r2, [sp, #20]
   4036c:	sub	r3, r3, #1
   40370:	str	r3, [r8], #4
   40374:	ldr	r2, [sp, #12]
   40378:	ldr	r3, [r2], #4
   4037c:	str	r2, [sp, #12]
   40380:	mov	ip, r3
   40384:	add	r6, r6, #4
   40388:	mov	r7, r6
   4038c:	str	r3, [r6]
   40390:	cmp	r4, #0
   40394:	beq	4033c <GetDataSlab+0x1ed58>
   40398:	str	r8, [sp, #24]
   4039c:	ldr	r0, [r8, #-4]
   403a0:	mov	r1, r2
   403a4:	mov	r2, r1
   403a8:	ldr	r3, [r1, #-4]!
   403ac:	mul	r0, r3, r0
   403b0:	ldr	r3, [r2]
   403b4:	mul	ip, r3, ip
   403b8:	cmp	r1, r5
   403bc:	bne	403a4 <GetDataSlab+0x1edc0>
   403c0:	ldr	r3, [sp, #24]
   403c4:	str	r0, [r3, #-4]
   403c8:	str	ip, [r7]
   403cc:	ldr	r3, [fp, r4, lsl #2]
   403d0:	ldr	r2, [sp, #16]
   403d4:	mul	r3, r3, r2
   403d8:	str	r3, [sp, #16]
   403dc:	ldr	r3, [r7, #-4]
   403e0:	ldr	r2, [sp, #196]	; 0xc4
   403e4:	ldr	r2, [r2, r4, lsl #2]
   403e8:	mla	lr, r2, r3, lr
   403ec:	add	r3, r4, #1
   403f0:	cmp	r9, r3
   403f4:	bgt	4035c <GetDataSlab+0x1ed78>
   403f8:	ldr	r3, [sp, #8]
   403fc:	add	ip, r3, lr, lsl #2
   40400:	ldr	r3, [sp, #28]
   40404:	cmp	r3, #1
   40408:	beq	2bf6c <GetDataSlab+0xa988>
   4040c:	ldr	r3, [sp, #16]
   40410:	cmp	r3, #0
   40414:	movle	r3, #0
   40418:	ble	251fc <GetDataSlab+0x3c18>
   4041c:	mov	r3, #0
   40420:	str	r3, [sp, #20]
   40424:	mov	r7, r3
   40428:	b	2c1c0 <GetDataSlab+0xabdc>
   4042c:	ldr	r3, [fp]
   40430:	ldr	r2, [sp, #12]
   40434:	mul	r3, r3, r2
   40438:	str	r3, [sp, #12]
   4043c:	ldr	r3, [sp, #196]	; 0xc4
   40440:	ldr	r3, [r3]
   40444:	ldr	r2, [r5, #-4]
   40448:	mla	r7, r2, r3, r7
   4044c:	add	lr, lr, #1
   40450:	ldr	r2, [sp, #20]
   40454:	ldr	r3, [r2, #4]!
   40458:	str	r2, [sp, #20]
   4045c:	sub	r3, r3, #1
   40460:	str	r3, [r8], #4
   40464:	ldr	r2, [sp, #16]
   40468:	ldr	r3, [r2], #4
   4046c:	str	r2, [sp, #16]
   40470:	mov	ip, r3
   40474:	add	r5, r5, #4
   40478:	mov	r6, r5
   4047c:	str	r3, [r5]
   40480:	cmp	lr, #0
   40484:	beq	4042c <GetDataSlab+0x1ee48>
   40488:	str	r8, [sp, #24]
   4048c:	ldr	r0, [r8, #-4]
   40490:	mov	r1, r2
   40494:	mov	r2, r1
   40498:	ldr	r3, [r1, #-4]!
   4049c:	mul	r0, r3, r0
   404a0:	ldr	r3, [r2]
   404a4:	mul	ip, r3, ip
   404a8:	cmp	r1, r4
   404ac:	bne	40494 <GetDataSlab+0x1eeb0>
   404b0:	ldr	r3, [sp, #24]
   404b4:	str	r0, [r3, #-4]
   404b8:	str	ip, [r6]
   404bc:	ldr	r3, [fp, lr, lsl #2]
   404c0:	ldr	r2, [sp, #12]
   404c4:	mul	r3, r3, r2
   404c8:	str	r3, [sp, #12]
   404cc:	ldr	r3, [r6, #-4]
   404d0:	ldr	r2, [sp, #196]	; 0xc4
   404d4:	ldr	r2, [r2, lr, lsl #2]
   404d8:	mla	r7, r2, r3, r7
   404dc:	add	r3, lr, #1
   404e0:	cmp	r9, r3
   404e4:	bgt	4044c <GetDataSlab+0x1ee68>
   404e8:	ldr	r3, [sp, #8]
   404ec:	add	r8, r3, r7, lsl #2
   404f0:	ldr	r3, [sp, #28]
   404f4:	cmp	r3, #1
   404f8:	beq	2b8b0 <GetDataSlab+0xa2cc>
   404fc:	ldr	r3, [sp, #12]
   40500:	cmp	r3, #0
   40504:	movle	r3, #0
   40508:	ble	251fc <GetDataSlab+0x3c18>
   4050c:	mov	r3, #0
   40510:	str	r3, [sp, #8]
   40514:	b	2baec <GetDataSlab+0xa508>
   40518:	ldr	r3, [fp]
   4051c:	ldr	r2, [sp, #12]
   40520:	mul	r3, r3, r2
   40524:	str	r3, [sp, #12]
   40528:	ldr	r3, [sp, #196]	; 0xc4
   4052c:	ldr	r3, [r3]
   40530:	ldr	r2, [r5, #-4]
   40534:	mla	r7, r2, r3, r7
   40538:	add	lr, lr, #1
   4053c:	ldr	r2, [sp, #20]
   40540:	ldr	r3, [r2, #4]!
   40544:	str	r2, [sp, #20]
   40548:	sub	r3, r3, #1
   4054c:	str	r3, [r8], #4
   40550:	ldr	r2, [sp, #16]
   40554:	ldr	r3, [r2], #4
   40558:	str	r2, [sp, #16]
   4055c:	mov	ip, r3
   40560:	add	r5, r5, #4
   40564:	mov	r6, r5
   40568:	str	r3, [r5]
   4056c:	cmp	lr, #0
   40570:	beq	40518 <GetDataSlab+0x1ef34>
   40574:	str	r8, [sp, #24]
   40578:	ldr	r0, [r8, #-4]
   4057c:	mov	r1, r2
   40580:	mov	r2, r1
   40584:	ldr	r3, [r1, #-4]!
   40588:	mul	r0, r3, r0
   4058c:	ldr	r3, [r2]
   40590:	mul	ip, r3, ip
   40594:	cmp	r1, r4
   40598:	bne	40580 <GetDataSlab+0x1ef9c>
   4059c:	ldr	r3, [sp, #24]
   405a0:	str	r0, [r3, #-4]
   405a4:	str	ip, [r6]
   405a8:	ldr	r3, [fp, lr, lsl #2]
   405ac:	ldr	r2, [sp, #12]
   405b0:	mul	r3, r3, r2
   405b4:	str	r3, [sp, #12]
   405b8:	ldr	r3, [r6, #-4]
   405bc:	ldr	r2, [sp, #196]	; 0xc4
   405c0:	ldr	r2, [r2, lr, lsl #2]
   405c4:	mla	r7, r2, r3, r7
   405c8:	add	r3, lr, #1
   405cc:	cmp	r9, r3
   405d0:	bgt	40538 <GetDataSlab+0x1ef54>
   405d4:	ldr	r3, [sp, #8]
   405d8:	add	r8, r3, r7, lsl #3
   405dc:	ldr	r3, [sp, #28]
   405e0:	cmp	r3, #1
   405e4:	beq	2b560 <GetDataSlab+0x9f7c>
   405e8:	ldr	r3, [sp, #12]
   405ec:	cmp	r3, #0
   405f0:	movle	r3, #0
   405f4:	ble	251fc <GetDataSlab+0x3c18>
   405f8:	mov	r3, #0
   405fc:	str	r3, [sp, #8]
   40600:	b	2b79c <GetDataSlab+0xa1b8>

00040604 <GetDataLinear>:
   40604:	strd	r4, [sp, #-32]!	; 0xffffffe0
   40608:	strd	r6, [sp, #8]
   4060c:	strd	r8, [sp, #16]
   40610:	str	sl, [sp, #24]
   40614:	str	lr, [sp, #28]
   40618:	mov	r4, r0
   4061c:	mov	r5, r1
   40620:	mov	r9, r2
   40624:	ldr	r8, [sp, #36]	; 0x24
   40628:	ldr	r6, [sp, #40]	; 0x28
   4062c:	mov	r0, r3
   40630:	bl	1598 <Mat_SizeOf@plt>
   40634:	mov	r7, r0
   40638:	sub	r2, r9, #6
   4063c:	cmp	r2, #9
   40640:	addls	pc, pc, r2, lsl #2
   40644:	b	40aa4 <GetDataLinear+0x4a0>
   40648:	b	40670 <GetDataLinear+0x6c>
   4064c:	b	406f0 <GetDataLinear+0xec>
   40650:	b	409dc <GetDataLinear+0x3d8>
   40654:	b	40a40 <GetDataLinear+0x43c>
   40658:	b	4090c <GetDataLinear+0x308>
   4065c:	b	40974 <GetDataLinear+0x370>
   40660:	b	40834 <GetDataLinear+0x230>
   40664:	b	408a0 <GetDataLinear+0x29c>
   40668:	b	4075c <GetDataLinear+0x158>
   4066c:	b	407c8 <GetDataLinear+0x1c4>
   40670:	ldr	r3, [sp, #32]
   40674:	add	r4, r4, r3, lsl #3
   40678:	cmp	r8, #0
   4067c:	beq	406d8 <GetDataLinear+0xd4>
   40680:	cmp	r6, #0
   40684:	movle	r0, #0
   40688:	ble	406c0 <GetDataLinear+0xbc>
   4068c:	lsl	r8, r8, #3
   40690:	mov	r9, #0
   40694:	add	sl, r5, #8
   40698:	mov	r2, r7
   4069c:	mov	r1, r4
   406a0:	mov	r0, r5
   406a4:	bl	1490 <memcpy@plt>
   406a8:	add	r9, r9, #1
   406ac:	add	r4, r4, r8
   406b0:	mov	r5, sl
   406b4:	cmp	r6, r9
   406b8:	bne	40694 <GetDataLinear+0x90>
   406bc:	mov	r0, #0
   406c0:	ldrd	r4, [sp]
   406c4:	ldrd	r6, [sp, #8]
   406c8:	ldrd	r8, [sp, #16]
   406cc:	ldr	sl, [sp, #24]
   406d0:	add	sp, sp, #28
   406d4:	pop	{pc}		; (ldr pc, [sp], #4)
   406d8:	mul	r2, r0, r6
   406dc:	mov	r1, r4
   406e0:	mov	r0, r5
   406e4:	bl	1490 <memcpy@plt>
   406e8:	mov	r0, r8
   406ec:	b	406c0 <GetDataLinear+0xbc>
   406f0:	ldr	r3, [sp, #32]
   406f4:	add	r4, r4, r3, lsl #2
   406f8:	cmp	r8, #0
   406fc:	beq	40744 <GetDataLinear+0x140>
   40700:	cmp	r6, #0
   40704:	movle	r0, #0
   40708:	ble	406c0 <GetDataLinear+0xbc>
   4070c:	lsl	r8, r8, #2
   40710:	mov	r9, #0
   40714:	add	sl, r5, #4
   40718:	mov	r2, r7
   4071c:	mov	r1, r4
   40720:	mov	r0, r5
   40724:	bl	1490 <memcpy@plt>
   40728:	add	r9, r9, #1
   4072c:	add	r4, r4, r8
   40730:	mov	r5, sl
   40734:	cmp	r6, r9
   40738:	bne	40714 <GetDataLinear+0x110>
   4073c:	mov	r0, #0
   40740:	b	406c0 <GetDataLinear+0xbc>
   40744:	mul	r2, r0, r6
   40748:	mov	r1, r4
   4074c:	mov	r0, r5
   40750:	bl	1490 <memcpy@plt>
   40754:	mov	r0, r8
   40758:	b	406c0 <GetDataLinear+0xbc>
   4075c:	ldr	r3, [sp, #32]
   40760:	add	r4, r4, r3, lsl #3
   40764:	cmp	r8, #0
   40768:	beq	407b0 <GetDataLinear+0x1ac>
   4076c:	cmp	r6, #0
   40770:	movle	r0, #0
   40774:	ble	406c0 <GetDataLinear+0xbc>
   40778:	lsl	r8, r8, #3
   4077c:	mov	r9, #0
   40780:	add	sl, r5, #8
   40784:	mov	r2, r7
   40788:	mov	r1, r4
   4078c:	mov	r0, r5
   40790:	bl	1490 <memcpy@plt>
   40794:	add	r9, r9, #1
   40798:	add	r4, r4, r8
   4079c:	mov	r5, sl
   407a0:	cmp	r6, r9
   407a4:	bne	40780 <GetDataLinear+0x17c>
   407a8:	mov	r0, #0
   407ac:	b	406c0 <GetDataLinear+0xbc>
   407b0:	mul	r2, r0, r6
   407b4:	mov	r1, r4
   407b8:	mov	r0, r5
   407bc:	bl	1490 <memcpy@plt>
   407c0:	mov	r0, r8
   407c4:	b	406c0 <GetDataLinear+0xbc>
   407c8:	ldr	r3, [sp, #32]
   407cc:	add	r4, r4, r3, lsl #3
   407d0:	cmp	r8, #0
   407d4:	beq	4081c <GetDataLinear+0x218>
   407d8:	cmp	r6, #0
   407dc:	movle	r0, #0
   407e0:	ble	406c0 <GetDataLinear+0xbc>
   407e4:	lsl	r8, r8, #3
   407e8:	mov	r9, #0
   407ec:	add	sl, r5, #8
   407f0:	mov	r2, r7
   407f4:	mov	r1, r4
   407f8:	mov	r0, r5
   407fc:	bl	1490 <memcpy@plt>
   40800:	add	r9, r9, #1
   40804:	add	r4, r4, r8
   40808:	mov	r5, sl
   4080c:	cmp	r6, r9
   40810:	bne	407ec <GetDataLinear+0x1e8>
   40814:	mov	r0, #0
   40818:	b	406c0 <GetDataLinear+0xbc>
   4081c:	mul	r2, r0, r6
   40820:	mov	r1, r4
   40824:	mov	r0, r5
   40828:	bl	1490 <memcpy@plt>
   4082c:	mov	r0, r8
   40830:	b	406c0 <GetDataLinear+0xbc>
   40834:	ldr	r3, [sp, #32]
   40838:	add	r4, r4, r3, lsl #2
   4083c:	cmp	r8, #0
   40840:	beq	40888 <GetDataLinear+0x284>
   40844:	cmp	r6, #0
   40848:	movle	r0, #0
   4084c:	ble	406c0 <GetDataLinear+0xbc>
   40850:	lsl	r8, r8, #2
   40854:	mov	r9, #0
   40858:	add	sl, r5, #4
   4085c:	mov	r2, r7
   40860:	mov	r1, r4
   40864:	mov	r0, r5
   40868:	bl	1490 <memcpy@plt>
   4086c:	add	r9, r9, #1
   40870:	add	r4, r4, r8
   40874:	mov	r5, sl
   40878:	cmp	r6, r9
   4087c:	bne	40858 <GetDataLinear+0x254>
   40880:	mov	r0, #0
   40884:	b	406c0 <GetDataLinear+0xbc>
   40888:	mul	r2, r0, r6
   4088c:	mov	r1, r4
   40890:	mov	r0, r5
   40894:	bl	1490 <memcpy@plt>
   40898:	mov	r0, r8
   4089c:	b	406c0 <GetDataLinear+0xbc>
   408a0:	ldr	r3, [sp, #32]
   408a4:	add	r4, r4, r3, lsl #2
   408a8:	cmp	r8, #0
   408ac:	beq	408f4 <GetDataLinear+0x2f0>
   408b0:	cmp	r6, #0
   408b4:	movle	r0, #0
   408b8:	ble	406c0 <GetDataLinear+0xbc>
   408bc:	lsl	r8, r8, #2
   408c0:	mov	r9, #0
   408c4:	add	sl, r5, #4
   408c8:	mov	r2, r7
   408cc:	mov	r1, r4
   408d0:	mov	r0, r5
   408d4:	bl	1490 <memcpy@plt>
   408d8:	add	r9, r9, #1
   408dc:	add	r4, r4, r8
   408e0:	mov	r5, sl
   408e4:	cmp	r6, r9
   408e8:	bne	408c4 <GetDataLinear+0x2c0>
   408ec:	mov	r0, #0
   408f0:	b	406c0 <GetDataLinear+0xbc>
   408f4:	mul	r2, r0, r6
   408f8:	mov	r1, r4
   408fc:	mov	r0, r5
   40900:	bl	1490 <memcpy@plt>
   40904:	mov	r0, r8
   40908:	b	406c0 <GetDataLinear+0xbc>
   4090c:	ldr	r3, [sp, #32]
   40910:	add	r4, r4, r3, lsl #1
   40914:	cmp	r8, #0
   40918:	beq	4095c <GetDataLinear+0x358>
   4091c:	cmp	r6, #0
   40920:	movle	r0, #0
   40924:	ble	406c0 <GetDataLinear+0xbc>
   40928:	lsl	r8, r8, #1
   4092c:	add	r6, r5, r6, lsl #1
   40930:	add	r9, r5, #2
   40934:	mov	r2, r7
   40938:	mov	r1, r4
   4093c:	mov	r0, r5
   40940:	bl	1490 <memcpy@plt>
   40944:	add	r4, r4, r8
   40948:	mov	r5, r9
   4094c:	cmp	r9, r6
   40950:	bne	40930 <GetDataLinear+0x32c>
   40954:	mov	r0, #0
   40958:	b	406c0 <GetDataLinear+0xbc>
   4095c:	mul	r2, r0, r6
   40960:	mov	r1, r4
   40964:	mov	r0, r5
   40968:	bl	1490 <memcpy@plt>
   4096c:	mov	r0, r8
   40970:	b	406c0 <GetDataLinear+0xbc>
   40974:	ldr	r3, [sp, #32]
   40978:	add	r4, r4, r3, lsl #1
   4097c:	cmp	r8, #0
   40980:	beq	409c4 <GetDataLinear+0x3c0>
   40984:	cmp	r6, #0
   40988:	movle	r0, #0
   4098c:	ble	406c0 <GetDataLinear+0xbc>
   40990:	lsl	r8, r8, #1
   40994:	add	r6, r5, r6, lsl #1
   40998:	add	r9, r5, #2
   4099c:	mov	r2, r7
   409a0:	mov	r1, r4
   409a4:	mov	r0, r5
   409a8:	bl	1490 <memcpy@plt>
   409ac:	add	r4, r4, r8
   409b0:	mov	r5, r9
   409b4:	cmp	r6, r9
   409b8:	bne	40998 <GetDataLinear+0x394>
   409bc:	mov	r0, #0
   409c0:	b	406c0 <GetDataLinear+0xbc>
   409c4:	mul	r2, r0, r6
   409c8:	mov	r1, r4
   409cc:	mov	r0, r5
   409d0:	bl	1490 <memcpy@plt>
   409d4:	mov	r0, r8
   409d8:	b	406c0 <GetDataLinear+0xbc>
   409dc:	ldr	r3, [sp, #32]
   409e0:	add	r4, r4, r3
   409e4:	cmp	r8, #0
   409e8:	beq	40a28 <GetDataLinear+0x424>
   409ec:	cmp	r6, #0
   409f0:	movle	r0, #0
   409f4:	ble	406c0 <GetDataLinear+0xbc>
   409f8:	add	r6, r5, r6
   409fc:	add	r9, r5, #1
   40a00:	mov	r2, r7
   40a04:	mov	r1, r4
   40a08:	mov	r0, r5
   40a0c:	bl	1490 <memcpy@plt>
   40a10:	add	r4, r4, r8
   40a14:	mov	r5, r9
   40a18:	cmp	r9, r6
   40a1c:	bne	409fc <GetDataLinear+0x3f8>
   40a20:	mov	r0, #0
   40a24:	b	406c0 <GetDataLinear+0xbc>
   40a28:	mul	r2, r0, r6
   40a2c:	mov	r1, r4
   40a30:	mov	r0, r5
   40a34:	bl	1490 <memcpy@plt>
   40a38:	mov	r0, r8
   40a3c:	b	406c0 <GetDataLinear+0xbc>
   40a40:	ldr	r3, [sp, #32]
   40a44:	add	r4, r4, r3
   40a48:	cmp	r8, #0
   40a4c:	beq	40a8c <GetDataLinear+0x488>
   40a50:	cmp	r6, #0
   40a54:	movle	r0, #0
   40a58:	ble	406c0 <GetDataLinear+0xbc>
   40a5c:	add	r6, r5, r6
   40a60:	add	r9, r5, #1
   40a64:	mov	r2, r7
   40a68:	mov	r1, r4
   40a6c:	mov	r0, r5
   40a70:	bl	1490 <memcpy@plt>
   40a74:	add	r4, r4, r8
   40a78:	mov	r5, r9
   40a7c:	cmp	r9, r6
   40a80:	bne	40a60 <GetDataLinear+0x45c>
   40a84:	mov	r0, #0
   40a88:	b	406c0 <GetDataLinear+0xbc>
   40a8c:	mul	r2, r0, r6
   40a90:	mov	r1, r4
   40a94:	mov	r0, r5
   40a98:	bl	1490 <memcpy@plt>
   40a9c:	mov	r0, r8
   40aa0:	b	406c0 <GetDataLinear+0xbc>
   40aa4:	mov	r0, #1
   40aa8:	b	406c0 <GetDataLinear+0xbc>

00040aac <ReadRankDims>:
   40aac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   40ab0:	strd	r6, [sp, #8]
   40ab4:	strd	r8, [sp, #16]
   40ab8:	strd	sl, [sp, #24]
   40abc:	str	lr, [sp, #32]
   40ac0:	sub	sp, sp, #12
   40ac4:	cmp	r2, #5
   40ac8:	movne	r5, #0
   40acc:	beq	40af0 <ReadRankDims+0x44>
   40ad0:	mov	r0, r5
   40ad4:	add	sp, sp, #12
   40ad8:	ldrd	r4, [sp]
   40adc:	ldrd	r6, [sp, #8]
   40ae0:	ldrd	r8, [sp, #16]
   40ae4:	ldrd	sl, [sp, #24]
   40ae8:	add	sp, sp, #32
   40aec:	pop	{pc}		; (ldr pc, [sp], #4)
   40af0:	mov	r4, r1
   40af4:	mov	r8, r0
   40af8:	lsr	r7, r3, #2
   40afc:	str	r7, [r1, #4]
   40b00:	bic	r0, r3, #3
   40b04:	bl	1544 <malloc@plt>
   40b08:	str	r0, [r4, #32]
   40b0c:	cmp	r0, #0
   40b10:	beq	40bf4 <ReadRankDims+0x148>
   40b14:	cmp	r7, #0
   40b18:	ble	40bb8 <ReadRankDims+0x10c>
   40b1c:	mov	r6, #0
   40b20:	mov	r7, r6
   40b24:	add	r9, sp, #4
   40b28:	mov	sl, #1
   40b2c:	b	40b54 <ReadRankDims+0xa8>
   40b30:	ldr	fp, [r4, #32]
   40b34:	mov	r0, r9
   40b38:	bl	18d4 <Mat_uint32Swap>
   40b3c:	str	r0, [fp, r7]
   40b40:	add	r6, r6, #1
   40b44:	ldr	r7, [r4, #4]
   40b48:	cmp	r7, r6
   40b4c:	ble	40bbc <ReadRankDims+0x110>
   40b50:	mov	r7, r5
   40b54:	ldr	r3, [r8]
   40b58:	mov	r2, sl
   40b5c:	mov	r1, #4
   40b60:	mov	r0, r9
   40b64:	bl	1520 <fread@plt>
   40b68:	cmp	r0, #1
   40b6c:	bne	40b90 <ReadRankDims+0xe4>
   40b70:	add	r5, r7, #4
   40b74:	ldr	r3, [r8, #20]
   40b78:	cmp	r3, #0
   40b7c:	bne	40b30 <ReadRankDims+0x84>
   40b80:	ldr	r3, [r4, #32]
   40b84:	ldr	r2, [sp, #4]
   40b88:	str	r2, [r3, r7]
   40b8c:	b	40b40 <ReadRankDims+0x94>
   40b90:	ldr	r0, [r4, #32]
   40b94:	bl	1478 <free@plt>
   40b98:	mov	r3, #0
   40b9c:	str	r3, [r4, #32]
   40ba0:	str	r3, [r4, #4]
   40ba4:	ldr	r0, [pc, #96]	; 40c0c <ReadRankDims+0x160>
   40ba8:	add	r0, pc, r0
   40bac:	bl	161c <Mat_Critical@plt>
   40bb0:	mov	r5, r7
   40bb4:	b	40ad0 <ReadRankDims+0x24>
   40bb8:	mov	r5, #0
   40bbc:	tst	r7, #1
   40bc0:	beq	40ad0 <ReadRankDims+0x24>
   40bc4:	ldr	r3, [r8]
   40bc8:	mov	r2, #1
   40bcc:	mov	r1, #4
   40bd0:	add	r0, sp, r1
   40bd4:	bl	1520 <fread@plt>
   40bd8:	cmp	r0, #1
   40bdc:	addeq	r5, r5, #4
   40be0:	beq	40ad0 <ReadRankDims+0x24>
   40be4:	ldr	r0, [pc, #36]	; 40c10 <ReadRankDims+0x164>
   40be8:	add	r0, pc, r0
   40bec:	bl	161c <Mat_Critical@plt>
   40bf0:	b	40ad0 <ReadRankDims+0x24>
   40bf4:	mov	r5, #0
   40bf8:	str	r5, [r4, #4]
   40bfc:	ldr	r0, [pc, #16]	; 40c14 <ReadRankDims+0x168>
   40c00:	add	r0, pc, r0
   40c04:	bl	161c <Mat_Critical@plt>
   40c08:	b	40ad0 <ReadRankDims+0x24>
   40c0c:	.word	0x0000e8a4
   40c10:	.word	0x0000e864
   40c14:	.word	0x0000e630

00040c18 <WriteCompressedData>:
   40c18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   40c1c:	strd	r6, [sp, #8]
   40c20:	strd	r8, [sp, #16]
   40c24:	strd	sl, [sp, #24]
   40c28:	str	lr, [sp, #32]
   40c2c:	sub	sp, sp, #1040	; 0x410
   40c30:	sub	sp, sp, #4
   40c34:	mov	r6, #0
   40c38:	mov	r7, #0
   40c3c:	mov	ip, sp
   40c40:	strd	r6, [ip]
   40c44:	subs	r6, r0, #0
   40c48:	moveq	r0, #0
   40c4c:	beq	40db4 <WriteCompressedData+0x19c>
   40c50:	ldr	r0, [r6]
   40c54:	cmp	r0, #0
   40c58:	moveq	r0, #0
   40c5c:	beq	40db4 <WriteCompressedData+0x19c>
   40c60:	mov	sl, r3
   40c64:	mov	fp, r2
   40c68:	mov	r4, r1
   40c6c:	ldr	r0, [sp, #1080]	; 0x438
   40c70:	bl	1598 <Mat_SizeOf@plt>
   40c74:	ldr	r3, [sp, #1080]	; 0x438
   40c78:	str	r3, [sp, #1032]	; 0x408
   40c7c:	mul	r9, sl, r0
   40c80:	str	r9, [sp, #1036]	; 0x40c
   40c84:	add	r3, sp, #1024	; 0x400
   40c88:	add	r3, r3, #8
   40c8c:	str	r3, [r4]
   40c90:	mov	r3, #8
   40c94:	str	r3, [r4, #4]
   40c98:	mov	r5, #0
   40c9c:	add	r7, sp, r3
   40ca0:	mov	r8, #1024	; 0x400
   40ca4:	str	r7, [r4, #12]
   40ca8:	str	r8, [r4, #16]
   40cac:	mov	r1, #0
   40cb0:	mov	r0, r4
   40cb4:	bl	14fc <deflate@plt>
   40cb8:	ldr	r2, [r4, #16]
   40cbc:	ldr	r3, [r6]
   40cc0:	rsb	r2, r2, #1024	; 0x400
   40cc4:	mov	r1, #1
   40cc8:	mov	r0, r7
   40ccc:	bl	1514 <fwrite@plt>
   40cd0:	add	r5, r5, r0
   40cd4:	mov	r0, r5
   40cd8:	ldr	r3, [r4, #16]
   40cdc:	cmp	r3, #0
   40ce0:	beq	40ca4 <WriteCompressedData+0x8c>
   40ce4:	cmp	fp, #0
   40ce8:	cmpne	sl, #0
   40cec:	ble	40db4 <WriteCompressedData+0x19c>
   40cf0:	str	fp, [r4]
   40cf4:	str	r9, [r4, #4]
   40cf8:	add	r7, sp, #8
   40cfc:	mov	sl, #1024	; 0x400
   40d00:	mov	r8, #0
   40d04:	str	r7, [r4, #12]
   40d08:	str	sl, [r4, #16]
   40d0c:	mov	r1, r8
   40d10:	mov	r0, r4
   40d14:	bl	14fc <deflate@plt>
   40d18:	ldr	r2, [r4, #16]
   40d1c:	ldr	r3, [r6]
   40d20:	rsb	r2, r2, #1024	; 0x400
   40d24:	mov	r1, #1
   40d28:	mov	r0, r7
   40d2c:	bl	1514 <fwrite@plt>
   40d30:	add	r5, r5, r0
   40d34:	ldr	r3, [r4, #16]
   40d38:	cmp	r3, #0
   40d3c:	beq	40d04 <WriteCompressedData+0xec>
   40d40:	tst	r9, #7
   40d44:	beq	40db0 <WriteCompressedData+0x198>
   40d48:	mov	r3, sp
   40d4c:	str	r3, [r4]
   40d50:	rsbs	r3, r9, #0
   40d54:	and	r9, r9, #7
   40d58:	and	r3, r3, #7
   40d5c:	rsbpl	r9, r3, #0
   40d60:	rsb	r9, r9, #8
   40d64:	str	r9, [r4, #4]
   40d68:	add	r7, sp, #8
   40d6c:	mov	r9, #1024	; 0x400
   40d70:	mov	r8, #0
   40d74:	str	r7, [r4, #12]
   40d78:	str	r9, [r4, #16]
   40d7c:	mov	r1, r8
   40d80:	mov	r0, r4
   40d84:	bl	14fc <deflate@plt>
   40d88:	ldr	r2, [r4, #16]
   40d8c:	ldr	r3, [r6]
   40d90:	rsb	r2, r2, #1024	; 0x400
   40d94:	mov	r1, #1
   40d98:	mov	r0, r7
   40d9c:	bl	1514 <fwrite@plt>
   40da0:	add	r5, r5, r0
   40da4:	ldr	r3, [r4, #16]
   40da8:	cmp	r3, #0
   40dac:	beq	40d74 <WriteCompressedData+0x15c>
   40db0:	mov	r0, r5
   40db4:	add	sp, sp, #1040	; 0x410
   40db8:	add	sp, sp, #4
   40dbc:	ldrd	r4, [sp]
   40dc0:	ldrd	r6, [sp, #8]
   40dc4:	ldrd	r8, [sp, #16]
   40dc8:	ldrd	sl, [sp, #24]
   40dcc:	add	sp, sp, #32
   40dd0:	pop	{pc}		; (ldr pc, [sp], #4)

00040dd4 <WriteType>:
   40dd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   40dd8:	strd	r6, [sp, #8]
   40ddc:	strd	r8, [sp, #16]
   40de0:	strd	sl, [sp, #24]
   40de4:	str	lr, [sp, #32]
   40de8:	sub	sp, sp, #116	; 0x74
   40dec:	mov	r4, r0
   40df0:	mov	r5, r1
   40df4:	mov	r3, #1
   40df8:	strh	r3, [sp, #110]	; 0x6e
   40dfc:	mov	r2, #0
   40e00:	strb	r2, [sp, #109]	; 0x6d
   40e04:	str	r3, [sp, #100]	; 0x64
   40e08:	add	r1, sp, #100	; 0x64
   40e0c:	mov	r0, r5
   40e10:	bl	4a3c8 <SafeMulDims>
   40e14:	ldr	r3, [r5, #16]
   40e18:	sub	r3, r3, #1
   40e1c:	cmp	r3, #14
   40e20:	addls	pc, pc, r3, lsl #2
   40e24:	b	418dc <WriteType+0xb08>
   40e28:	b	41238 <WriteType+0x464>
   40e2c:	b	4168c <WriteType+0x8b8>
   40e30:	b	418dc <WriteType+0xb08>
   40e34:	b	40f98 <WriteType+0x1c4>
   40e38:	b	41dcc <WriteType+0xff8>
   40e3c:	b	40e64 <WriteType+0x90>
   40e40:	b	40e64 <WriteType+0x90>
   40e44:	b	40e64 <WriteType+0x90>
   40e48:	b	40e64 <WriteType+0x90>
   40e4c:	b	40e64 <WriteType+0x90>
   40e50:	b	40e64 <WriteType+0x90>
   40e54:	b	40e64 <WriteType+0x90>
   40e58:	b	40e64 <WriteType+0x90>
   40e5c:	b	40e64 <WriteType+0x90>
   40e60:	b	40e64 <WriteType+0x90>
   40e64:	ldr	r3, [r5, #20]
   40e68:	cmp	r3, #0
   40e6c:	beq	40f3c <WriteType+0x168>
   40e70:	ldr	r9, [r5, #40]	; 0x28
   40e74:	cmp	r9, #0
   40e78:	beq	40f30 <WriteType+0x15c>
   40e7c:	ldr	r3, [r5, #8]
   40e80:	ldr	r2, [sp, #100]	; 0x64
   40e84:	ldr	r1, [r9]
   40e88:	mov	r0, r4
   40e8c:	bl	21098 <WriteData>
   40e90:	str	r0, [sp, #104]	; 0x68
   40e94:	tst	r0, #7
   40e98:	beq	40ed4 <WriteType+0x100>
   40e9c:	rsbs	r3, r0, #0
   40ea0:	and	r6, r0, #7
   40ea4:	and	r3, r3, #7
   40ea8:	rsbpl	r6, r3, #0
   40eac:	add	r8, sp, #109	; 0x6d
   40eb0:	mov	r7, #1
   40eb4:	ldr	r3, [r4]
   40eb8:	mov	r2, r7
   40ebc:	mov	r1, r7
   40ec0:	mov	r0, r8
   40ec4:	bl	1514 <fwrite@plt>
   40ec8:	add	r6, r6, #1
   40ecc:	cmp	r6, #8
   40ed0:	bne	40eb4 <WriteType+0xe0>
   40ed4:	ldr	r3, [r5, #8]
   40ed8:	ldr	r2, [sp, #100]	; 0x64
   40edc:	ldr	r1, [r9, #4]
   40ee0:	mov	r0, r4
   40ee4:	bl	21098 <WriteData>
   40ee8:	str	r0, [sp, #104]	; 0x68
   40eec:	tst	r0, #7
   40ef0:	beq	418dc <WriteType+0xb08>
   40ef4:	rsbs	r3, r0, #0
   40ef8:	and	r5, r0, #7
   40efc:	and	r3, r3, #7
   40f00:	rsbpl	r5, r3, #0
   40f04:	add	r7, sp, #109	; 0x6d
   40f08:	mov	r6, #1
   40f0c:	ldr	r3, [r4]
   40f10:	mov	r2, r6
   40f14:	mov	r1, r6
   40f18:	mov	r0, r7
   40f1c:	bl	1514 <fwrite@plt>
   40f20:	add	r5, r5, #1
   40f24:	cmp	r5, #8
   40f28:	bne	40f0c <WriteType+0x138>
   40f2c:	b	418dc <WriteType+0xb08>
   40f30:	ldr	r9, [pc, #3716]	; 41dbc <WriteType+0xfe8>
   40f34:	add	r9, pc, r9
   40f38:	b	40e7c <WriteType+0xa8>
   40f3c:	ldr	r3, [r5, #8]
   40f40:	ldr	r2, [sp, #100]	; 0x64
   40f44:	ldr	r1, [r5, #40]	; 0x28
   40f48:	mov	r0, r4
   40f4c:	bl	21098 <WriteData>
   40f50:	str	r0, [sp, #104]	; 0x68
   40f54:	tst	r0, #7
   40f58:	beq	418dc <WriteType+0xb08>
   40f5c:	rsbs	r3, r0, #0
   40f60:	and	r5, r0, #7
   40f64:	and	r3, r3, #7
   40f68:	rsbpl	r5, r3, #0
   40f6c:	add	r7, sp, #109	; 0x6d
   40f70:	mov	r6, #1
   40f74:	ldr	r3, [r4]
   40f78:	mov	r2, r6
   40f7c:	mov	r1, r6
   40f80:	mov	r0, r7
   40f84:	bl	1514 <fwrite@plt>
   40f88:	add	r5, r5, #1
   40f8c:	cmp	r5, #8
   40f90:	bne	40f74 <WriteType+0x1a0>
   40f94:	b	418dc <WriteType+0xb08>
   40f98:	ldr	r7, [r5, #40]	; 0x28
   40f9c:	ldr	r6, [sp, #100]	; 0x64
   40fa0:	ldr	r3, [r5, #8]
   40fa4:	str	r3, [sp, #88]	; 0x58
   40fa8:	mov	r2, #0
   40fac:	strb	r2, [sp, #80]	; 0x50
   40fb0:	cmp	r3, #16
   40fb4:	addls	pc, pc, r3, lsl #2
   40fb8:	b	418dc <WriteType+0xb08>
   40fbc:	b	411fc <WriteType+0x428>
   40fc0:	b	4109c <WriteType+0x2c8>
   40fc4:	b	4109c <WriteType+0x2c8>
   40fc8:	b	418dc <WriteType+0xb08>
   40fcc:	b	41000 <WriteType+0x22c>
   40fd0:	b	418dc <WriteType+0xb08>
   40fd4:	b	418dc <WriteType+0xb08>
   40fd8:	b	418dc <WriteType+0xb08>
   40fdc:	b	418dc <WriteType+0xb08>
   40fe0:	b	418dc <WriteType+0xb08>
   40fe4:	b	418dc <WriteType+0xb08>
   40fe8:	b	418dc <WriteType+0xb08>
   40fec:	b	418dc <WriteType+0xb08>
   40ff0:	b	418dc <WriteType+0xb08>
   40ff4:	b	418dc <WriteType+0xb08>
   40ff8:	b	418dc <WriteType+0xb08>
   40ffc:	b	41160 <WriteType+0x38c>
   41000:	lsl	r3, r6, #1
   41004:	str	r3, [sp, #92]	; 0x5c
   41008:	ldr	r3, [r4]
   4100c:	mov	r2, #1
   41010:	mov	r1, #4
   41014:	add	r0, sp, #88	; 0x58
   41018:	bl	1514 <fwrite@plt>
   4101c:	ldr	r3, [r4]
   41020:	mov	r2, #1
   41024:	mov	r1, #4
   41028:	add	r0, sp, #92	; 0x5c
   4102c:	bl	1514 <fwrite@plt>
   41030:	cmp	r7, #0
   41034:	cmpne	r6, #0
   41038:	bgt	41084 <WriteType+0x2b0>
   4103c:	ldr	r5, [sp, #92]	; 0x5c
   41040:	tst	r5, #7
   41044:	beq	418dc <WriteType+0xb08>
   41048:	rsbs	r3, r5, #0
   4104c:	and	r5, r5, #7
   41050:	and	r3, r3, #7
   41054:	rsbpl	r5, r3, #0
   41058:	add	r7, sp, #80	; 0x50
   4105c:	mov	r6, #1
   41060:	ldr	r3, [r4]
   41064:	mov	r2, r6
   41068:	mov	r1, r6
   4106c:	mov	r0, r7
   41070:	bl	1514 <fwrite@plt>
   41074:	add	r5, r5, #1
   41078:	cmp	r5, #8
   4107c:	bne	41060 <WriteType+0x28c>
   41080:	b	418dc <WriteType+0xb08>
   41084:	ldr	r3, [r4]
   41088:	mov	r2, r6
   4108c:	mov	r1, #2
   41090:	mov	r0, r7
   41094:	bl	1514 <fwrite@plt>
   41098:	b	4103c <WriteType+0x268>
   4109c:	lsl	r3, r6, #1
   410a0:	str	r3, [sp, #92]	; 0x5c
   410a4:	mov	r5, #4
   410a8:	str	r5, [sp, #88]	; 0x58
   410ac:	ldr	r3, [r4]
   410b0:	mov	r2, #1
   410b4:	mov	r1, r5
   410b8:	add	r0, sp, #88	; 0x58
   410bc:	bl	1514 <fwrite@plt>
   410c0:	ldr	r3, [r4]
   410c4:	mov	r2, #1
   410c8:	mov	r1, r5
   410cc:	add	r0, sp, #92	; 0x5c
   410d0:	bl	1514 <fwrite@plt>
   410d4:	cmp	r7, #0
   410d8:	beq	418dc <WriteType+0xb08>
   410dc:	cmp	r6, #0
   410e0:	ble	41118 <WriteType+0x344>
   410e4:	add	r6, r7, r6
   410e8:	add	r9, sp, #84	; 0x54
   410ec:	mov	r8, #1
   410f0:	mov	r5, #2
   410f4:	ldrb	r3, [r7], #1
   410f8:	strh	r3, [sp, #84]	; 0x54
   410fc:	ldr	r3, [r4]
   41100:	mov	r2, r8
   41104:	mov	r1, r5
   41108:	mov	r0, r9
   4110c:	bl	1514 <fwrite@plt>
   41110:	cmp	r7, r6
   41114:	bne	410f4 <WriteType+0x320>
   41118:	ldr	r5, [sp, #92]	; 0x5c
   4111c:	tst	r5, #7
   41120:	beq	418dc <WriteType+0xb08>
   41124:	rsbs	r3, r5, #0
   41128:	and	r5, r5, #7
   4112c:	and	r3, r3, #7
   41130:	rsbpl	r5, r3, #0
   41134:	add	r7, sp, #80	; 0x50
   41138:	mov	r6, #1
   4113c:	ldr	r3, [r4]
   41140:	mov	r2, r6
   41144:	mov	r1, r6
   41148:	mov	r0, r7
   4114c:	bl	1514 <fwrite@plt>
   41150:	add	r5, r5, #1
   41154:	cmp	r5, #8
   41158:	bne	4113c <WriteType+0x368>
   4115c:	b	418dc <WriteType+0xb08>
   41160:	str	r6, [sp, #92]	; 0x5c
   41164:	ldr	r3, [r4]
   41168:	mov	r2, #1
   4116c:	mov	r1, #4
   41170:	add	r0, sp, #88	; 0x58
   41174:	bl	1514 <fwrite@plt>
   41178:	ldr	r3, [r4]
   4117c:	mov	r2, #1
   41180:	mov	r1, #4
   41184:	add	r0, sp, #92	; 0x5c
   41188:	bl	1514 <fwrite@plt>
   4118c:	cmp	r7, #0
   41190:	beq	411a0 <WriteType+0x3cc>
   41194:	ldr	r2, [sp, #92]	; 0x5c
   41198:	cmp	r2, #0
   4119c:	bgt	411e8 <WriteType+0x414>
   411a0:	ldr	r5, [sp, #92]	; 0x5c
   411a4:	tst	r5, #7
   411a8:	beq	418dc <WriteType+0xb08>
   411ac:	rsbs	r3, r5, #0
   411b0:	and	r5, r5, #7
   411b4:	and	r3, r3, #7
   411b8:	rsbpl	r5, r3, #0
   411bc:	add	r7, sp, #80	; 0x50
   411c0:	mov	r6, #1
   411c4:	ldr	r3, [r4]
   411c8:	mov	r2, r6
   411cc:	mov	r1, r6
   411d0:	mov	r0, r7
   411d4:	bl	1514 <fwrite@plt>
   411d8:	add	r5, r5, #1
   411dc:	cmp	r5, #8
   411e0:	bne	411c4 <WriteType+0x3f0>
   411e4:	b	418dc <WriteType+0xb08>
   411e8:	ldr	r3, [r4]
   411ec:	mov	r1, #1
   411f0:	mov	r0, r7
   411f4:	bl	1514 <fwrite@plt>
   411f8:	b	411a0 <WriteType+0x3cc>
   411fc:	lsl	r6, r6, #1
   41200:	str	r6, [sp, #92]	; 0x5c
   41204:	mov	r5, #4
   41208:	str	r5, [sp, #88]	; 0x58
   4120c:	ldr	r3, [r4]
   41210:	mov	r2, #1
   41214:	mov	r1, r5
   41218:	add	r0, sp, #88	; 0x58
   4121c:	bl	1514 <fwrite@plt>
   41220:	ldr	r3, [r4]
   41224:	mov	r2, #1
   41228:	mov	r1, r5
   4122c:	add	r0, sp, #92	; 0x5c
   41230:	bl	1514 <fwrite@plt>
   41234:	b	418dc <WriteType+0xb08>
   41238:	ldr	r3, [r5]
   4123c:	cmp	r3, #0
   41240:	beq	418dc <WriteType+0xb08>
   41244:	ldr	r8, [r5, #40]	; 0x28
   41248:	ldr	r2, [r5, #12]
   4124c:	cmp	r2, #0
   41250:	cmpne	r8, #0
   41254:	beq	418dc <WriteType+0xb08>
   41258:	udiv	r1, r3, r2
   4125c:	str	r1, [sp, #100]	; 0x64
   41260:	cmp	r3, r2
   41264:	bcc	418dc <WriteType+0xb08>
   41268:	sub	r8, r8, #4
   4126c:	mov	r7, #0
   41270:	mov	sl, #1
   41274:	mov	fp, #6
   41278:	ldr	r3, [pc, #2880]	; 41dc0 <WriteType+0xfec>
   4127c:	add	r3, pc, r3
   41280:	str	r3, [sp, #4]
   41284:	b	41444 <WriteType+0x670>
   41288:	ldr	r3, [r5, #40]	; 0x28
   4128c:	ldr	r3, [r3]
   41290:	str	r3, [sp, #88]	; 0x58
   41294:	b	41518 <WriteType+0x744>
   41298:	add	r0, sp, #60	; 0x3c
   4129c:	bl	18a4 <Mat_int32Swap>
   412a0:	str	r0, [sp, #60]	; 0x3c
   412a4:	b	41524 <WriteType+0x750>
   412a8:	ldr	r3, [r4]
   412ac:	mov	r2, sl
   412b0:	mov	r1, #4
   412b4:	add	r0, sp, #76	; 0x4c
   412b8:	bl	1514 <fwrite@plt>
   412bc:	b	415f4 <WriteType+0x820>
   412c0:	ldr	r3, [r4]
   412c4:	mov	r2, sl
   412c8:	mov	r1, #2
   412cc:	add	r0, sp, #56	; 0x38
   412d0:	bl	1514 <fwrite@plt>
   412d4:	ldr	r3, [r4]
   412d8:	mov	r2, sl
   412dc:	mov	r1, sl
   412e0:	add	r6, sp, #52	; 0x34
   412e4:	mov	r0, r6
   412e8:	bl	1514 <fwrite@plt>
   412ec:	ldr	r3, [r4]
   412f0:	mov	r2, sl
   412f4:	mov	r1, sl
   412f8:	mov	r0, r6
   412fc:	bl	1514 <fwrite@plt>
   41300:	ldr	r3, [r4]
   41304:	mov	r2, sl
   41308:	mov	r1, #4
   4130c:	add	r0, sp, #76	; 0x4c
   41310:	bl	1514 <fwrite@plt>
   41314:	b	413c4 <WriteType+0x5f0>
   41318:	str	r0, [sp, #92]	; 0x5c
   4131c:	ldr	r3, [r4]
   41320:	mov	r2, sl
   41324:	mov	r1, #2
   41328:	add	r0, sp, #56	; 0x38
   4132c:	bl	1514 <fwrite@plt>
   41330:	ldr	r3, [r4]
   41334:	mov	r2, sl
   41338:	mov	r1, sl
   4133c:	add	r6, sp, #52	; 0x34
   41340:	mov	r0, r6
   41344:	bl	1514 <fwrite@plt>
   41348:	ldr	r3, [r4]
   4134c:	mov	r2, sl
   41350:	mov	r1, sl
   41354:	mov	r0, r6
   41358:	bl	1514 <fwrite@plt>
   4135c:	ldr	r3, [r4]
   41360:	mov	r2, sl
   41364:	mov	r1, #4
   41368:	add	r0, sp, #92	; 0x5c
   4136c:	bl	1514 <fwrite@plt>
   41370:	ldr	r3, [r4]
   41374:	ldr	r2, [sp, #92]	; 0x5c
   41378:	mov	r1, sl
   4137c:	ldr	r0, [r5, #36]	; 0x24
   41380:	bl	1514 <fwrite@plt>
   41384:	ldr	r6, [sp, #92]	; 0x5c
   41388:	tst	r6, #7
   4138c:	beq	413c4 <WriteType+0x5f0>
   41390:	rsbs	r3, r6, #0
   41394:	and	r6, r6, #7
   41398:	and	r3, r3, #7
   4139c:	rsbpl	r6, r3, #0
   413a0:	add	r9, sp, #52	; 0x34
   413a4:	ldr	r3, [r4]
   413a8:	mov	r2, sl
   413ac:	mov	r1, sl
   413b0:	mov	r0, r9
   413b4:	bl	1514 <fwrite@plt>
   413b8:	add	r6, r6, #1
   413bc:	cmp	r6, #8
   413c0:	bne	413a4 <WriteType+0x5d0>
   413c4:	mov	r1, r5
   413c8:	mov	r0, r4
   413cc:	bl	40dd4 <WriteType>
   413d0:	ldr	r0, [r4]
   413d4:	bl	14b4 <ftell@plt>
   413d8:	mov	r5, r0
   413dc:	ldr	r3, [sp]
   413e0:	cmn	r0, #1
   413e4:	cmnne	r3, #1
   413e8:	beq	41680 <WriteType+0x8ac>
   413ec:	sub	r1, r0, r3
   413f0:	str	r1, [sp, #84]	; 0x54
   413f4:	mov	r2, sl
   413f8:	rsb	r1, r1, #-16777216	; 0xff000000
   413fc:	add	r1, r1, #16711680	; 0xff0000
   41400:	add	r1, r1, #65280	; 0xff00
   41404:	add	r1, r1, #252	; 0xfc
   41408:	ldr	r0, [r4]
   4140c:	bl	1694 <fseek@plt>
   41410:	ldr	r3, [r4]
   41414:	mov	r2, sl
   41418:	mov	r1, #4
   4141c:	add	r0, sp, #84	; 0x54
   41420:	bl	1514 <fwrite@plt>
   41424:	mov	r2, #0
   41428:	mov	r1, r5
   4142c:	ldr	r0, [r4]
   41430:	bl	1694 <fseek@plt>
   41434:	add	r7, r7, #1
   41438:	ldr	r3, [sp, #100]	; 0x64
   4143c:	cmp	r3, r7
   41440:	bls	418dc <WriteType+0xb08>
   41444:	ldr	r5, [r8, #4]!
   41448:	strh	sl, [sp, #56]	; 0x38
   4144c:	str	fp, [sp, #64]	; 0x40
   41450:	mov	r3, #5
   41454:	str	r3, [sp, #68]	; 0x44
   41458:	mov	r3, #8
   4145c:	str	r3, [sp, #72]	; 0x48
   41460:	mov	r3, #0
   41464:	str	r3, [sp, #76]	; 0x4c
   41468:	mov	r2, #14
   4146c:	str	r2, [sp, #80]	; 0x50
   41470:	strb	r3, [sp, #52]	; 0x34
   41474:	str	r3, [sp, #88]	; 0x58
   41478:	cmp	r4, r3
   4147c:	cmpne	r5, r3
   41480:	beq	41434 <WriteType+0x660>
   41484:	ldr	r3, [r4]
   41488:	mov	r2, sl
   4148c:	mov	r1, #4
   41490:	add	r0, sp, #80	; 0x50
   41494:	bl	1514 <fwrite@plt>
   41498:	ldr	r3, [r4]
   4149c:	mov	r2, sl
   414a0:	mov	r1, #4
   414a4:	add	r0, sp, #76	; 0x4c
   414a8:	bl	1514 <fwrite@plt>
   414ac:	ldr	r3, [r5, #16]
   414b0:	cmp	r3, #0
   414b4:	beq	41434 <WriteType+0x660>
   414b8:	ldr	r0, [r4]
   414bc:	bl	14b4 <ftell@plt>
   414c0:	str	r0, [sp]
   414c4:	ldr	r2, [r5, #16]
   414c8:	uxtb	r3, r2
   414cc:	str	r3, [sp, #60]	; 0x3c
   414d0:	ldr	r1, [r5, #20]
   414d4:	cmp	r1, #0
   414d8:	orrne	r3, r3, #2048	; 0x800
   414dc:	strne	r3, [sp, #60]	; 0x3c
   414e0:	ldr	r3, [r5, #24]
   414e4:	cmp	r3, #0
   414e8:	beq	414f8 <WriteType+0x724>
   414ec:	ldr	r3, [sp, #60]	; 0x3c
   414f0:	orr	r3, r3, #1024	; 0x400
   414f4:	str	r3, [sp, #60]	; 0x3c
   414f8:	ldr	r3, [r5, #28]
   414fc:	cmp	r3, #0
   41500:	beq	41510 <WriteType+0x73c>
   41504:	ldr	r3, [sp, #60]	; 0x3c
   41508:	orr	r3, r3, #512	; 0x200
   4150c:	str	r3, [sp, #60]	; 0x3c
   41510:	cmp	r2, #5
   41514:	beq	41288 <WriteType+0x4b4>
   41518:	ldr	r3, [r4, #20]
   4151c:	cmp	r3, #0
   41520:	bne	41298 <WriteType+0x4c4>
   41524:	ldr	r3, [r4]
   41528:	mov	r2, sl
   4152c:	mov	r1, #4
   41530:	add	r0, sp, #64	; 0x40
   41534:	bl	1514 <fwrite@plt>
   41538:	ldr	r3, [r4]
   4153c:	mov	r2, sl
   41540:	mov	r1, #4
   41544:	add	r0, sp, #72	; 0x48
   41548:	bl	1514 <fwrite@plt>
   4154c:	ldr	r3, [r4]
   41550:	mov	r2, sl
   41554:	mov	r1, #4
   41558:	add	r0, sp, #60	; 0x3c
   4155c:	bl	1514 <fwrite@plt>
   41560:	ldr	r3, [r4]
   41564:	mov	r2, sl
   41568:	mov	r1, #4
   4156c:	add	r0, sp, #88	; 0x58
   41570:	bl	1514 <fwrite@plt>
   41574:	ldr	r3, [r5, #4]
   41578:	lsl	r3, r3, #2
   4157c:	str	r3, [sp, #84]	; 0x54
   41580:	ldr	r3, [r4]
   41584:	mov	r2, sl
   41588:	mov	r1, #4
   4158c:	add	r0, sp, #68	; 0x44
   41590:	bl	1514 <fwrite@plt>
   41594:	ldr	r3, [r4]
   41598:	mov	r2, sl
   4159c:	mov	r1, #4
   415a0:	add	r0, sp, #84	; 0x54
   415a4:	bl	1514 <fwrite@plt>
   415a8:	ldr	r3, [r5, #4]
   415ac:	cmp	r3, #0
   415b0:	ble	415ec <WriteType+0x818>
   415b4:	mov	r6, #0
   415b8:	add	r9, sp, #92	; 0x5c
   415bc:	ldr	r3, [r5, #32]
   415c0:	ldr	r3, [r3, r6, lsl #2]
   415c4:	str	r3, [sp, #92]	; 0x5c
   415c8:	ldr	r3, [r4]
   415cc:	mov	r2, sl
   415d0:	mov	r1, #4
   415d4:	mov	r0, r9
   415d8:	bl	1514 <fwrite@plt>
   415dc:	add	r6, r6, #1
   415e0:	ldr	r3, [r5, #4]
   415e4:	cmp	r6, r3
   415e8:	blt	415bc <WriteType+0x7e8>
   415ec:	tst	r3, #1
   415f0:	bne	412a8 <WriteType+0x4d4>
   415f4:	ldr	r0, [r5, #36]	; 0x24
   415f8:	cmp	r0, #0
   415fc:	beq	412c0 <WriteType+0x4ec>
   41600:	bl	15c8 <strlen@plt>
   41604:	cmp	r0, #4
   41608:	bhi	41318 <WriteType+0x544>
   4160c:	strh	r0, [sp, #92]	; 0x5c
   41610:	ldr	r3, [r4]
   41614:	mov	r2, sl
   41618:	mov	r1, #2
   4161c:	add	r0, sp, #56	; 0x38
   41620:	bl	1514 <fwrite@plt>
   41624:	ldr	r3, [r4]
   41628:	mov	r2, sl
   4162c:	mov	r1, #2
   41630:	add	r0, sp, #92	; 0x5c
   41634:	bl	1514 <fwrite@plt>
   41638:	ldr	r3, [r4]
   4163c:	ldrsh	r2, [sp, #92]	; 0x5c
   41640:	mov	r1, sl
   41644:	ldr	r0, [r5, #36]	; 0x24
   41648:	bl	1514 <fwrite@plt>
   4164c:	ldrsh	r6, [sp, #92]	; 0x5c
   41650:	cmp	r6, #3
   41654:	bgt	413c4 <WriteType+0x5f0>
   41658:	add	r9, sp, #52	; 0x34
   4165c:	ldr	r3, [r4]
   41660:	mov	r2, sl
   41664:	mov	r1, sl
   41668:	mov	r0, r9
   4166c:	bl	1514 <fwrite@plt>
   41670:	add	r6, r6, #1
   41674:	cmp	r6, #4
   41678:	bne	4165c <WriteType+0x888>
   4167c:	b	413c4 <WriteType+0x5f0>
   41680:	ldr	r0, [sp, #4]
   41684:	bl	161c <Mat_Critical@plt>
   41688:	b	41434 <WriteType+0x660>
   4168c:	ldr	r3, [r5, #52]	; 0x34
   41690:	ldr	sl, [r3, #4]
   41694:	cmp	sl, #0
   41698:	beq	41844 <WriteType+0xa70>
   4169c:	ldr	r7, [r3, #8]
   416a0:	add	r8, r7, sl, lsl #2
   416a4:	mov	r6, #0
   416a8:	ldr	r0, [r7], #4
   416ac:	bl	15c8 <strlen@plt>
   416b0:	cmp	r6, r0
   416b4:	movcc	r6, r0
   416b8:	cmp	r7, r8
   416bc:	bne	416a8 <WriteType+0x8d4>
   416c0:	ldr	r9, [r5, #40]	; 0x28
   416c4:	add	r3, r6, #1
   416c8:	str	r3, [sp, #16]
   416cc:	mul	r3, r3, sl
   416d0:	tst	r3, #7
   416d4:	beq	416fc <WriteType+0x928>
   416d8:	add	r6, r6, #2
   416dc:	add	r3, sl, r3
   416e0:	mov	r1, r6
   416e4:	and	r2, r3, #7
   416e8:	add	r6, r6, #1
   416ec:	add	r3, r3, sl
   416f0:	cmp	r2, #0
   416f4:	bne	416e0 <WriteType+0x90c>
   416f8:	str	r1, [sp, #16]
   416fc:	mov	r3, #5
   41700:	movt	r3, #4
   41704:	str	r3, [sp, #24]
   41708:	ldr	r3, [r4]
   4170c:	mov	r2, #1
   41710:	mov	r1, #4
   41714:	add	r0, sp, #24
   41718:	bl	1514 <fwrite@plt>
   4171c:	ldr	r3, [r4]
   41720:	mov	r2, #1
   41724:	mov	r1, #4
   41728:	add	r0, sp, #16
   4172c:	bl	1514 <fwrite@plt>
   41730:	ldr	r3, [r4]
   41734:	mov	r2, #1
   41738:	mov	r1, #2
   4173c:	add	r0, sp, #110	; 0x6e
   41740:	bl	1514 <fwrite@plt>
   41744:	ldr	r3, [r4]
   41748:	mov	r2, #1
   4174c:	mov	r1, r2
   41750:	add	r6, sp, #109	; 0x6d
   41754:	mov	r0, r6
   41758:	bl	1514 <fwrite@plt>
   4175c:	ldr	r3, [r4]
   41760:	mov	r2, #1
   41764:	mov	r1, r2
   41768:	mov	r0, r6
   4176c:	bl	1514 <fwrite@plt>
   41770:	ldr	r3, [sp, #16]
   41774:	mul	r3, sl, r3
   41778:	str	r3, [sp, #104]	; 0x68
   4177c:	ldr	r3, [r4]
   41780:	mov	r2, #1
   41784:	mov	r1, #4
   41788:	add	r0, sp, #104	; 0x68
   4178c:	bl	1514 <fwrite@plt>
   41790:	mov	r1, #1
   41794:	ldr	r0, [sp, #16]
   41798:	bl	140c <calloc@plt>
   4179c:	str	r0, [sp]
   417a0:	mov	r6, #0
   417a4:	mov	fp, #1
   417a8:	ldr	r3, [r5, #52]	; 0x34
   417ac:	ldr	r3, [r3, #8]
   417b0:	ldr	r8, [r3, r6, lsl #2]
   417b4:	mov	r0, r8
   417b8:	bl	15c8 <strlen@plt>
   417bc:	mov	r7, r0
   417c0:	ldr	r3, [r4]
   417c4:	mov	r2, r0
   417c8:	mov	r1, fp
   417cc:	mov	r0, r8
   417d0:	bl	1514 <fwrite@plt>
   417d4:	ldr	r3, [r4]
   417d8:	ldr	r2, [sp, #16]
   417dc:	sub	r2, r2, r7
   417e0:	mov	r1, fp
   417e4:	ldr	r0, [sp]
   417e8:	bl	1514 <fwrite@plt>
   417ec:	add	r6, r6, #1
   417f0:	cmp	sl, r6
   417f4:	bne	417a8 <WriteType+0x9d4>
   417f8:	ldr	r0, [sp]
   417fc:	bl	1478 <free@plt>
   41800:	mov	r2, sl
   41804:	ldr	r1, [sp, #100]	; 0x64
   41808:	add	r0, sp, #20
   4180c:	bl	4a440 <SafeMul>
   41810:	ldr	r3, [sp, #20]
   41814:	cmp	r3, #0
   41818:	beq	418dc <WriteType+0xb08>
   4181c:	sub	r9, r9, #4
   41820:	mov	r8, #0
   41824:	mov	r5, #1
   41828:	ldr	r3, [pc, #1428]	; 41dc4 <WriteType+0xff0>
   4182c:	add	r3, pc, r3
   41830:	str	r3, [sp]
   41834:	ldr	r3, [pc, #1420]	; 41dc8 <WriteType+0xff4>
   41838:	add	r3, pc, r3
   4183c:	str	r3, [sp, #4]
   41840:	b	41b78 <WriteType+0xda4>
   41844:	mov	r3, #5
   41848:	movt	r3, #4
   4184c:	str	r3, [sp, #24]
   41850:	ldr	r3, [r4]
   41854:	mov	r2, #1
   41858:	mov	r1, #4
   4185c:	add	r0, sp, #24
   41860:	bl	1514 <fwrite@plt>
   41864:	mov	r5, #1
   41868:	str	r5, [sp, #16]
   4186c:	ldr	r3, [r4]
   41870:	mov	r2, r5
   41874:	mov	r1, #4
   41878:	add	r0, sp, #16
   4187c:	bl	1514 <fwrite@plt>
   41880:	ldr	r3, [r4]
   41884:	mov	r2, r5
   41888:	mov	r1, #2
   4188c:	add	r0, sp, #110	; 0x6e
   41890:	bl	1514 <fwrite@plt>
   41894:	ldr	r3, [r4]
   41898:	mov	r2, r5
   4189c:	mov	r1, r5
   418a0:	add	r6, sp, #109	; 0x6d
   418a4:	mov	r0, r6
   418a8:	bl	1514 <fwrite@plt>
   418ac:	ldr	r3, [r4]
   418b0:	mov	r2, r5
   418b4:	mov	r1, r5
   418b8:	mov	r0, r6
   418bc:	bl	1514 <fwrite@plt>
   418c0:	mov	r3, #0
   418c4:	str	r3, [sp, #104]	; 0x68
   418c8:	ldr	r3, [r4]
   418cc:	mov	r2, r5
   418d0:	mov	r1, #4
   418d4:	add	r0, sp, #104	; 0x68
   418d8:	bl	1514 <fwrite@plt>
   418dc:	mov	r0, #0
   418e0:	add	sp, sp, #116	; 0x74
   418e4:	ldrd	r4, [sp]
   418e8:	ldrd	r6, [sp, #8]
   418ec:	ldrd	r8, [sp, #16]
   418f0:	ldrd	sl, [sp, #24]
   418f4:	add	sp, sp, #32
   418f8:	pop	{pc}		; (ldr pc, [sp], #4)
   418fc:	str	r3, [sp, #92]	; 0x5c
   41900:	str	r3, [sp, #96]	; 0x60
   41904:	str	r5, [sp, #60]	; 0x3c
   41908:	str	r2, [sp, #64]	; 0x40
   4190c:	mov	r6, #6
   41910:	str	r6, [sp, #68]	; 0x44
   41914:	mov	r2, #5
   41918:	str	r2, [sp, #72]	; 0x48
   4191c:	mov	r2, #8
   41920:	str	r2, [sp, #76]	; 0x4c
   41924:	str	r3, [sp, #80]	; 0x50
   41928:	strb	r3, [sp, #15]
   4192c:	ldr	r3, [r4]
   41930:	mov	r2, r5
   41934:	mov	r1, #4
   41938:	add	r0, sp, #64	; 0x40
   4193c:	bl	1514 <fwrite@plt>
   41940:	ldr	r3, [r4]
   41944:	mov	r2, r5
   41948:	mov	r1, #4
   4194c:	add	r0, sp, #80	; 0x50
   41950:	bl	1514 <fwrite@plt>
   41954:	ldr	r0, [r4]
   41958:	bl	14b4 <ftell@plt>
   4195c:	mov	sl, r0
   41960:	str	r6, [sp, #56]	; 0x38
   41964:	ldr	r3, [r4, #20]
   41968:	cmp	r3, #0
   4196c:	bne	41b0c <WriteType+0xd38>
   41970:	ldr	r3, [r4]
   41974:	mov	r2, r5
   41978:	mov	r1, #4
   4197c:	add	r0, sp, #68	; 0x44
   41980:	bl	1514 <fwrite@plt>
   41984:	ldr	r3, [r4]
   41988:	mov	r2, r5
   4198c:	mov	r1, #4
   41990:	add	r0, sp, #76	; 0x4c
   41994:	bl	1514 <fwrite@plt>
   41998:	ldr	r3, [r4]
   4199c:	mov	r2, r5
   419a0:	mov	r1, #4
   419a4:	add	r0, sp, #56	; 0x38
   419a8:	bl	1514 <fwrite@plt>
   419ac:	ldr	r3, [r4]
   419b0:	mov	r2, r5
   419b4:	mov	r1, #4
   419b8:	add	fp, sp, #80	; 0x50
   419bc:	mov	r0, fp
   419c0:	bl	1514 <fwrite@plt>
   419c4:	mov	r3, #8
   419c8:	str	r3, [sp, #84]	; 0x54
   419cc:	ldr	r3, [r4]
   419d0:	mov	r2, r5
   419d4:	mov	r1, #4
   419d8:	add	r0, sp, #72	; 0x48
   419dc:	bl	1514 <fwrite@plt>
   419e0:	ldr	r3, [r4]
   419e4:	mov	r2, r5
   419e8:	mov	r1, #4
   419ec:	add	r0, sp, #84	; 0x54
   419f0:	bl	1514 <fwrite@plt>
   419f4:	mov	r6, #0
   419f8:	str	r6, [sp, #88]	; 0x58
   419fc:	ldr	r3, [r4]
   41a00:	mov	r2, r5
   41a04:	mov	r1, #4
   41a08:	add	r7, sp, #88	; 0x58
   41a0c:	mov	r0, r7
   41a10:	bl	1514 <fwrite@plt>
   41a14:	str	r6, [sp, #88]	; 0x58
   41a18:	ldr	r3, [r4]
   41a1c:	mov	r2, r5
   41a20:	mov	r1, #4
   41a24:	mov	r0, r7
   41a28:	bl	1514 <fwrite@plt>
   41a2c:	ldr	r3, [r4]
   41a30:	mov	r2, r5
   41a34:	mov	r1, #4
   41a38:	add	r0, sp, #60	; 0x3c
   41a3c:	bl	1514 <fwrite@plt>
   41a40:	ldr	r3, [r4]
   41a44:	mov	r2, r5
   41a48:	mov	r1, #4
   41a4c:	mov	r0, fp
   41a50:	bl	1514 <fwrite@plt>
   41a54:	mov	r3, #9
   41a58:	mov	r2, r6
   41a5c:	mov	r1, r6
   41a60:	mov	r0, r4
   41a64:	bl	21098 <WriteData>
   41a68:	str	r0, [sp, #84]	; 0x54
   41a6c:	tst	r0, #7
   41a70:	beq	41aa8 <WriteType+0xcd4>
   41a74:	subs	r3, r6, r0
   41a78:	and	r6, r0, #7
   41a7c:	and	r3, r3, #7
   41a80:	rsbpl	r6, r3, #0
   41a84:	add	r7, sp, #15
   41a88:	ldr	r3, [r4]
   41a8c:	mov	r2, r5
   41a90:	mov	r1, r5
   41a94:	mov	r0, r7
   41a98:	bl	1514 <fwrite@plt>
   41a9c:	add	r6, r6, #1
   41aa0:	cmp	r6, #8
   41aa4:	bne	41a88 <WriteType+0xcb4>
   41aa8:	ldr	r0, [r4]
   41aac:	bl	14b4 <ftell@plt>
   41ab0:	mov	r6, r0
   41ab4:	cmn	r0, #1
   41ab8:	cmnne	sl, #1
   41abc:	beq	41b1c <WriteType+0xd48>
   41ac0:	sub	r1, r0, sl
   41ac4:	str	r1, [sp, #84]	; 0x54
   41ac8:	mov	r2, r5
   41acc:	rsb	r1, r1, #-16777216	; 0xff000000
   41ad0:	add	r1, r1, #16711680	; 0xff0000
   41ad4:	add	r1, r1, #65280	; 0xff00
   41ad8:	add	r1, r1, #252	; 0xfc
   41adc:	ldr	r0, [r4]
   41ae0:	bl	1694 <fseek@plt>
   41ae4:	ldr	r3, [r4]
   41ae8:	mov	r2, r5
   41aec:	mov	r1, #4
   41af0:	add	r0, sp, #84	; 0x54
   41af4:	bl	1514 <fwrite@plt>
   41af8:	mov	r2, #0
   41afc:	mov	r1, r6
   41b00:	ldr	r0, [r4]
   41b04:	bl	1694 <fseek@plt>
   41b08:	b	41b68 <WriteType+0xd94>
   41b0c:	add	r0, sp, #56	; 0x38
   41b10:	bl	18a4 <Mat_int32Swap>
   41b14:	str	r0, [sp, #56]	; 0x38
   41b18:	b	41970 <WriteType+0xb9c>
   41b1c:	ldr	r0, [sp, #4]
   41b20:	bl	161c <Mat_Critical@plt>
   41b24:	b	41b68 <WriteType+0xd94>
   41b28:	ldr	r3, [r6, #40]	; 0x28
   41b2c:	ldr	r3, [r3]
   41b30:	str	r3, [sp, #52]	; 0x34
   41b34:	b	41c48 <WriteType+0xe74>
   41b38:	add	r0, sp, #84	; 0x54
   41b3c:	bl	18a4 <Mat_int32Swap>
   41b40:	str	r0, [sp, #84]	; 0x54
   41b44:	b	41c54 <WriteType+0xe80>
   41b48:	ldr	r3, [r4]
   41b4c:	mov	r2, r5
   41b50:	mov	r1, #4
   41b54:	add	r0, sp, #44	; 0x2c
   41b58:	bl	1514 <fwrite@plt>
   41b5c:	b	41d24 <WriteType+0xf50>
   41b60:	ldr	r0, [sp]
   41b64:	bl	161c <Mat_Critical@plt>
   41b68:	add	r8, r8, #1
   41b6c:	ldr	r3, [sp, #20]
   41b70:	cmp	r3, r8
   41b74:	bls	418dc <WriteType+0xb08>
   41b78:	ldr	r6, [r9, #4]!
   41b7c:	str	r5, [sp, #28]
   41b80:	mov	r3, #6
   41b84:	str	r3, [sp, #32]
   41b88:	mov	r3, #5
   41b8c:	str	r3, [sp, #36]	; 0x24
   41b90:	mov	r3, #8
   41b94:	str	r3, [sp, #40]	; 0x28
   41b98:	mov	r3, #0
   41b9c:	str	r3, [sp, #44]	; 0x2c
   41ba0:	mov	r2, #14
   41ba4:	str	r2, [sp, #48]	; 0x30
   41ba8:	str	r3, [sp, #52]	; 0x34
   41bac:	cmp	r6, r3
   41bb0:	beq	418fc <WriteType+0xb28>
   41bb4:	ldr	r3, [r4]
   41bb8:	mov	r2, r5
   41bbc:	mov	r1, #4
   41bc0:	add	r0, sp, #48	; 0x30
   41bc4:	bl	1514 <fwrite@plt>
   41bc8:	ldr	r3, [r4]
   41bcc:	mov	r2, r5
   41bd0:	mov	r1, #4
   41bd4:	add	r0, sp, #44	; 0x2c
   41bd8:	bl	1514 <fwrite@plt>
   41bdc:	ldr	r3, [r6, #16]
   41be0:	cmp	r3, #0
   41be4:	beq	41b68 <WriteType+0xd94>
   41be8:	ldr	r0, [r4]
   41bec:	bl	14b4 <ftell@plt>
   41bf0:	mov	fp, r0
   41bf4:	ldr	r2, [r6, #16]
   41bf8:	uxtb	r3, r2
   41bfc:	str	r3, [sp, #84]	; 0x54
   41c00:	ldr	r1, [r6, #20]
   41c04:	cmp	r1, #0
   41c08:	orrne	r3, r3, #2048	; 0x800
   41c0c:	strne	r3, [sp, #84]	; 0x54
   41c10:	ldr	r3, [r6, #24]
   41c14:	cmp	r3, #0
   41c18:	beq	41c28 <WriteType+0xe54>
   41c1c:	ldr	r3, [sp, #84]	; 0x54
   41c20:	orr	r3, r3, #1024	; 0x400
   41c24:	str	r3, [sp, #84]	; 0x54
   41c28:	ldr	r3, [r6, #28]
   41c2c:	cmp	r3, #0
   41c30:	beq	41c40 <WriteType+0xe6c>
   41c34:	ldr	r3, [sp, #84]	; 0x54
   41c38:	orr	r3, r3, #512	; 0x200
   41c3c:	str	r3, [sp, #84]	; 0x54
   41c40:	cmp	r2, #5
   41c44:	beq	41b28 <WriteType+0xd54>
   41c48:	ldr	r3, [r4, #20]
   41c4c:	cmp	r3, #0
   41c50:	bne	41b38 <WriteType+0xd64>
   41c54:	ldr	r3, [r4]
   41c58:	mov	r2, r5
   41c5c:	mov	r1, #4
   41c60:	add	r0, sp, #32
   41c64:	bl	1514 <fwrite@plt>
   41c68:	ldr	r3, [r4]
   41c6c:	mov	r2, r5
   41c70:	mov	r1, #4
   41c74:	add	r0, sp, #40	; 0x28
   41c78:	bl	1514 <fwrite@plt>
   41c7c:	ldr	r3, [r4]
   41c80:	mov	r2, r5
   41c84:	mov	r1, #4
   41c88:	add	r0, sp, #84	; 0x54
   41c8c:	bl	1514 <fwrite@plt>
   41c90:	ldr	r3, [r4]
   41c94:	mov	r2, r5
   41c98:	mov	r1, #4
   41c9c:	add	r0, sp, #52	; 0x34
   41ca0:	bl	1514 <fwrite@plt>
   41ca4:	ldr	r3, [r6, #4]
   41ca8:	lsl	r3, r3, #2
   41cac:	str	r3, [sp, #88]	; 0x58
   41cb0:	ldr	r3, [r4]
   41cb4:	mov	r2, r5
   41cb8:	mov	r1, #4
   41cbc:	add	r0, sp, #36	; 0x24
   41cc0:	bl	1514 <fwrite@plt>
   41cc4:	ldr	r3, [r4]
   41cc8:	mov	r2, r5
   41ccc:	mov	r1, #4
   41cd0:	add	r0, sp, #88	; 0x58
   41cd4:	bl	1514 <fwrite@plt>
   41cd8:	ldr	r3, [r6, #4]
   41cdc:	cmp	r3, #0
   41ce0:	ble	41d1c <WriteType+0xf48>
   41ce4:	mov	r7, #0
   41ce8:	add	sl, sp, #92	; 0x5c
   41cec:	ldr	r3, [r6, #32]
   41cf0:	ldr	r3, [r3, r7, lsl #2]
   41cf4:	str	r3, [sp, #92]	; 0x5c
   41cf8:	ldr	r3, [r4]
   41cfc:	mov	r2, r5
   41d00:	mov	r1, #4
   41d04:	mov	r0, sl
   41d08:	bl	1514 <fwrite@plt>
   41d0c:	add	r7, r7, #1
   41d10:	ldr	r3, [r6, #4]
   41d14:	cmp	r7, r3
   41d18:	blt	41cec <WriteType+0xf18>
   41d1c:	tst	r3, #1
   41d20:	bne	41b48 <WriteType+0xd74>
   41d24:	ldr	r3, [r4]
   41d28:	mov	r2, r5
   41d2c:	mov	r1, #4
   41d30:	add	r0, sp, #28
   41d34:	bl	1514 <fwrite@plt>
   41d38:	ldr	r3, [r4]
   41d3c:	mov	r2, r5
   41d40:	mov	r1, #4
   41d44:	add	r0, sp, #44	; 0x2c
   41d48:	bl	1514 <fwrite@plt>
   41d4c:	mov	r1, r6
   41d50:	mov	r0, r4
   41d54:	bl	40dd4 <WriteType>
   41d58:	ldr	r0, [r4]
   41d5c:	bl	14b4 <ftell@plt>
   41d60:	mov	r6, r0
   41d64:	cmn	r0, #1
   41d68:	cmnne	fp, #1
   41d6c:	beq	41b60 <WriteType+0xd8c>
   41d70:	sub	r1, r0, fp
   41d74:	str	r1, [sp, #88]	; 0x58
   41d78:	mov	r2, r5
   41d7c:	rsb	r1, r1, #-16777216	; 0xff000000
   41d80:	add	r1, r1, #16711680	; 0xff0000
   41d84:	add	r1, r1, #65280	; 0xff00
   41d88:	add	r1, r1, #252	; 0xfc
   41d8c:	ldr	r0, [r4]
   41d90:	bl	1694 <fseek@plt>
   41d94:	ldr	r3, [r4]
   41d98:	mov	r2, r5
   41d9c:	mov	r1, #4
   41da0:	add	r0, sp, #88	; 0x58
   41da4:	bl	1514 <fwrite@plt>
   41da8:	mov	r2, #0
   41dac:	mov	r1, r6
   41db0:	ldr	r0, [r4]
   41db4:	bl	1694 <fseek@plt>
   41db8:	b	41b68 <WriteType+0xd94>
   41dbc:	.word	0x00020298
   41dc0:	.word	0x0000e1ac
   41dc4:	.word	0x0000dbfc
   41dc8:	.word	0x0000dbf0
   41dcc:	ldr	r7, [r5, #40]	; 0x28
   41dd0:	mov	r3, #5
   41dd4:	ldr	r2, [r7, #8]
   41dd8:	ldr	r1, [r7, #4]
   41ddc:	mov	r0, r4
   41de0:	bl	21098 <WriteData>
   41de4:	str	r0, [sp, #104]	; 0x68
   41de8:	tst	r0, #7
   41dec:	beq	41e28 <WriteType+0x1054>
   41df0:	rsbs	r3, r0, #0
   41df4:	and	r6, r0, #7
   41df8:	and	r3, r3, #7
   41dfc:	rsbpl	r6, r3, #0
   41e00:	add	r9, sp, #109	; 0x6d
   41e04:	mov	r8, #1
   41e08:	ldr	r3, [r4]
   41e0c:	mov	r2, r8
   41e10:	mov	r1, r8
   41e14:	mov	r0, r9
   41e18:	bl	1514 <fwrite@plt>
   41e1c:	add	r6, r6, #1
   41e20:	cmp	r6, #8
   41e24:	bne	41e08 <WriteType+0x1034>
   41e28:	mov	r3, #5
   41e2c:	ldr	r2, [r7, #16]
   41e30:	ldr	r1, [r7, #12]
   41e34:	mov	r0, r4
   41e38:	bl	21098 <WriteData>
   41e3c:	str	r0, [sp, #104]	; 0x68
   41e40:	tst	r0, #7
   41e44:	beq	41e80 <WriteType+0x10ac>
   41e48:	rsbs	r3, r0, #0
   41e4c:	and	r6, r0, #7
   41e50:	and	r3, r3, #7
   41e54:	rsbpl	r6, r3, #0
   41e58:	add	r9, sp, #109	; 0x6d
   41e5c:	mov	r8, #1
   41e60:	ldr	r3, [r4]
   41e64:	mov	r2, r8
   41e68:	mov	r1, r8
   41e6c:	mov	r0, r9
   41e70:	bl	1514 <fwrite@plt>
   41e74:	add	r6, r6, #1
   41e78:	cmp	r6, #8
   41e7c:	bne	41e60 <WriteType+0x108c>
   41e80:	ldr	r3, [r5, #20]
   41e84:	cmp	r3, #0
   41e88:	beq	41f44 <WriteType+0x1170>
   41e8c:	ldr	sl, [r7, #24]
   41e90:	ldr	r3, [r5, #8]
   41e94:	ldr	r2, [r7, #20]
   41e98:	ldr	r1, [sl]
   41e9c:	mov	r0, r4
   41ea0:	bl	21098 <WriteData>
   41ea4:	str	r0, [sp, #104]	; 0x68
   41ea8:	tst	r0, #7
   41eac:	beq	41ee8 <WriteType+0x1114>
   41eb0:	rsbs	r3, r0, #0
   41eb4:	and	r6, r0, #7
   41eb8:	and	r3, r3, #7
   41ebc:	rsbpl	r6, r3, #0
   41ec0:	add	r9, sp, #109	; 0x6d
   41ec4:	mov	r8, #1
   41ec8:	ldr	r3, [r4]
   41ecc:	mov	r2, r8
   41ed0:	mov	r1, r8
   41ed4:	mov	r0, r9
   41ed8:	bl	1514 <fwrite@plt>
   41edc:	add	r6, r6, #1
   41ee0:	cmp	r6, #8
   41ee4:	bne	41ec8 <WriteType+0x10f4>
   41ee8:	ldr	r3, [r5, #8]
   41eec:	ldr	r2, [r7, #20]
   41ef0:	ldr	r1, [sl, #4]
   41ef4:	mov	r0, r4
   41ef8:	bl	21098 <WriteData>
   41efc:	str	r0, [sp, #104]	; 0x68
   41f00:	tst	r0, #7
   41f04:	beq	418dc <WriteType+0xb08>
   41f08:	rsbs	r3, r0, #0
   41f0c:	and	r5, r0, #7
   41f10:	and	r3, r3, #7
   41f14:	rsbpl	r5, r3, #0
   41f18:	add	r7, sp, #109	; 0x6d
   41f1c:	mov	r6, #1
   41f20:	ldr	r3, [r4]
   41f24:	mov	r2, r6
   41f28:	mov	r1, r6
   41f2c:	mov	r0, r7
   41f30:	bl	1514 <fwrite@plt>
   41f34:	add	r5, r5, #1
   41f38:	cmp	r5, #8
   41f3c:	bne	41f20 <WriteType+0x114c>
   41f40:	b	418dc <WriteType+0xb08>
   41f44:	ldr	r3, [r5, #8]
   41f48:	ldr	r2, [r7, #20]
   41f4c:	ldr	r1, [r7, #24]
   41f50:	mov	r0, r4
   41f54:	bl	21098 <WriteData>
   41f58:	str	r0, [sp, #104]	; 0x68
   41f5c:	tst	r0, #7
   41f60:	beq	418dc <WriteType+0xb08>
   41f64:	rsbs	r3, r0, #0
   41f68:	and	r5, r0, #7
   41f6c:	and	r3, r3, #7
   41f70:	rsbpl	r5, r3, #0
   41f74:	add	r7, sp, #109	; 0x6d
   41f78:	mov	r6, #1
   41f7c:	ldr	r3, [r4]
   41f80:	mov	r2, r6
   41f84:	mov	r1, r6
   41f88:	mov	r0, r7
   41f8c:	bl	1514 <fwrite@plt>
   41f90:	add	r5, r5, #1
   41f94:	cmp	r5, #8
   41f98:	bne	41f7c <WriteType+0x11a8>
   41f9c:	b	418dc <WriteType+0xb08>

00041fa0 <GetStructFieldBufSize>:
   41fa0:	cmp	r0, #0
   41fa4:	beq	41fc4 <GetStructFieldBufSize+0x24>
   41fa8:	str	r4, [sp, #-8]!
   41fac:	str	lr, [sp, #4]
   41fb0:	bl	41fcc <GetTypeBufSize>
   41fb4:	add	r0, r0, #24
   41fb8:	ldr	r4, [sp]
   41fbc:	add	sp, sp, #4
   41fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   41fc4:	mov	r0, #48	; 0x30
   41fc8:	bx	lr

00041fcc <GetTypeBufSize>:
   41fcc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   41fd0:	strd	r6, [sp, #8]
   41fd4:	strd	r8, [sp, #16]
   41fd8:	str	lr, [sp, #24]
   41fdc:	sub	sp, sp, #20
   41fe0:	mov	r5, r0
   41fe4:	mov	r3, #1
   41fe8:	str	r3, [sp, #8]
   41fec:	add	r1, sp, #8
   41ff0:	bl	4a3c8 <SafeMulDims>
   41ff4:	ldr	r4, [r5, #4]
   41ff8:	tst	r4, #1
   41ffc:	lsl	r4, r4, #2
   42000:	addne	r4, r4, #12
   42004:	addeq	r4, r4, #8
   42008:	ldr	r3, [r5, #16]
   4200c:	sub	r3, r3, #1
   42010:	cmp	r3, #4
   42014:	addls	pc, pc, r3, lsl #2
   42018:	b	422b0 <GetTypeBufSize+0x2e4>
   4201c:	b	42100 <GetTypeBufSize+0x134>
   42020:	b	42030 <GetTypeBufSize+0x64>
   42024:	b	422b0 <GetTypeBufSize+0x2e4>
   42028:	b	42254 <GetTypeBufSize+0x288>
   4202c:	b	42184 <GetTypeBufSize+0x1b8>
   42030:	ldr	r7, [r5, #40]	; 0x28
   42034:	ldr	r3, [r5, #52]	; 0x34
   42038:	ldr	r8, [r3, #4]
   4203c:	cmp	r8, #0
   42040:	beq	42300 <GetTypeBufSize+0x334>
   42044:	ldr	r6, [r3, #8]
   42048:	add	r9, r6, r8, lsl #2
   4204c:	mov	r5, #0
   42050:	b	4205c <GetTypeBufSize+0x90>
   42054:	cmp	r6, r9
   42058:	beq	42078 <GetTypeBufSize+0xac>
   4205c:	ldr	r0, [r6], #4
   42060:	cmp	r0, #0
   42064:	beq	42054 <GetTypeBufSize+0x88>
   42068:	bl	15c8 <strlen@plt>
   4206c:	cmp	r5, r0
   42070:	movcc	r5, r0
   42074:	b	42054 <GetTypeBufSize+0x88>
   42078:	mla	r3, r5, r8, r8
   4207c:	tst	r3, #7
   42080:	beq	4209c <GetTypeBufSize+0xd0>
   42084:	add	r3, r3, r8
   42088:	b	42090 <GetTypeBufSize+0xc4>
   4208c:	mov	r3, r2
   42090:	add	r2, r8, r3
   42094:	tst	r3, #7
   42098:	bne	4208c <GetTypeBufSize+0xc0>
   4209c:	add	r4, r4, #16
   420a0:	add	r4, r4, r3
   420a4:	cmp	r7, #0
   420a8:	cmpne	r8, #0
   420ac:	beq	42238 <GetTypeBufSize+0x26c>
   420b0:	mov	r3, #1
   420b4:	str	r3, [sp, #4]
   420b8:	mov	r2, r8
   420bc:	ldr	r1, [sp, #8]
   420c0:	add	r0, sp, #4
   420c4:	bl	4a440 <SafeMul>
   420c8:	ldr	r3, [sp, #4]
   420cc:	cmp	r3, #0
   420d0:	beq	42238 <GetTypeBufSize+0x26c>
   420d4:	sub	r7, r7, #4
   420d8:	mov	r5, #0
   420dc:	ldr	r0, [r7, #4]!
   420e0:	bl	41fa0 <GetStructFieldBufSize>
   420e4:	add	r0, r0, #8
   420e8:	add	r4, r4, r0
   420ec:	add	r5, r5, #1
   420f0:	ldr	r3, [sp, #4]
   420f4:	cmp	r3, r5
   420f8:	bhi	420dc <GetTypeBufSize+0x110>
   420fc:	b	42238 <GetTypeBufSize+0x26c>
   42100:	ldr	r3, [r5]
   42104:	cmp	r3, #0
   42108:	beq	42238 <GetTypeBufSize+0x26c>
   4210c:	ldr	r2, [r5, #12]
   42110:	cmp	r2, #0
   42114:	beq	42238 <GetTypeBufSize+0x26c>
   42118:	ldr	r6, [r5, #40]	; 0x28
   4211c:	udiv	r1, r3, r2
   42120:	str	r1, [sp, #8]
   42124:	cmp	r3, r2
   42128:	movcc	r3, #0
   4212c:	movcs	r3, #1
   42130:	cmp	r6, #0
   42134:	moveq	r3, #0
   42138:	cmp	r3, #0
   4213c:	beq	42238 <GetTypeBufSize+0x26c>
   42140:	sub	r6, r6, #4
   42144:	mov	r5, #0
   42148:	mov	r7, r5
   4214c:	b	42168 <GetTypeBufSize+0x19c>
   42150:	add	r0, r0, #8
   42154:	add	r4, r4, r0
   42158:	add	r5, r5, #1
   4215c:	ldr	r3, [sp, #8]
   42160:	cmp	r3, r5
   42164:	bls	42238 <GetTypeBufSize+0x26c>
   42168:	ldr	r0, [r6, #4]!
   4216c:	cmp	r0, #0
   42170:	moveq	r0, r7
   42174:	beq	42150 <GetTypeBufSize+0x184>
   42178:	bl	41fcc <GetTypeBufSize>
   4217c:	add	r0, r0, #24
   42180:	b	42150 <GetTypeBufSize+0x184>
   42184:	ldr	r7, [r5, #40]	; 0x28
   42188:	mov	r2, #4
   4218c:	ldr	r1, [r7, #8]
   42190:	add	r0, sp, #12
   42194:	bl	4a440 <SafeMul>
   42198:	ldr	r3, [sp, #12]
   4219c:	tst	r3, #7
   421a0:	beq	421b0 <GetTypeBufSize+0x1e4>
   421a4:	bic	r3, r3, #7
   421a8:	add	r3, r3, #8
   421ac:	str	r3, [sp, #12]
   421b0:	ldr	r6, [sp, #12]
   421b4:	mov	r2, #4
   421b8:	ldr	r1, [r7, #16]
   421bc:	add	r0, sp, #12
   421c0:	bl	4a440 <SafeMul>
   421c4:	ldr	r3, [sp, #12]
   421c8:	tst	r3, #7
   421cc:	beq	421dc <GetTypeBufSize+0x210>
   421d0:	bic	r3, r3, #7
   421d4:	add	r3, r3, #8
   421d8:	str	r3, [sp, #12]
   421dc:	ldr	r3, [sp, #12]
   421e0:	add	r6, r6, r3
   421e4:	add	r6, r6, #16
   421e8:	ldr	r7, [r7, #20]
   421ec:	ldr	r0, [r5, #8]
   421f0:	bl	1598 <Mat_SizeOf@plt>
   421f4:	mov	r2, r0
   421f8:	mov	r1, r7
   421fc:	add	r0, sp, #12
   42200:	bl	4a440 <SafeMul>
   42204:	ldr	r3, [sp, #12]
   42208:	tst	r3, #7
   4220c:	beq	4221c <GetTypeBufSize+0x250>
   42210:	bic	r3, r3, #7
   42214:	add	r3, r3, #8
   42218:	str	r3, [sp, #12]
   4221c:	ldr	r3, [sp, #12]
   42220:	add	r3, r3, #8
   42224:	add	r6, r3, r6
   42228:	add	r4, r4, r6
   4222c:	ldr	r2, [r5, #20]
   42230:	cmp	r2, #0
   42234:	addne	r4, r4, r3
   42238:	mov	r0, r4
   4223c:	add	sp, sp, #20
   42240:	ldrd	r4, [sp]
   42244:	ldrd	r6, [sp, #8]
   42248:	ldrd	r8, [sp, #16]
   4224c:	add	sp, sp, #24
   42250:	pop	{pc}		; (ldr pc, [sp], #4)
   42254:	ldr	r0, [r5, #8]
   42258:	sub	r3, r0, #1
   4225c:	cmp	r3, #1
   42260:	ldr	r6, [sp, #8]
   42264:	movls	r0, #4
   42268:	bl	1598 <Mat_SizeOf@plt>
   4226c:	mov	r2, r0
   42270:	mov	r1, r6
   42274:	add	r0, sp, #12
   42278:	bl	4a440 <SafeMul>
   4227c:	ldr	r3, [sp, #12]
   42280:	tst	r3, #7
   42284:	beq	42294 <GetTypeBufSize+0x2c8>
   42288:	bic	r3, r3, #7
   4228c:	add	r3, r3, #8
   42290:	str	r3, [sp, #12]
   42294:	ldr	r3, [sp, #12]
   42298:	add	r3, r3, #8
   4229c:	add	r4, r4, r3
   422a0:	ldr	r2, [r5, #20]
   422a4:	cmp	r2, #0
   422a8:	addne	r4, r4, r3
   422ac:	b	42238 <GetTypeBufSize+0x26c>
   422b0:	ldr	r6, [sp, #8]
   422b4:	ldr	r0, [r5, #8]
   422b8:	bl	1598 <Mat_SizeOf@plt>
   422bc:	mov	r2, r0
   422c0:	mov	r1, r6
   422c4:	add	r0, sp, #12
   422c8:	bl	4a440 <SafeMul>
   422cc:	ldr	r3, [sp, #12]
   422d0:	tst	r3, #7
   422d4:	beq	422e4 <GetTypeBufSize+0x318>
   422d8:	bic	r3, r3, #7
   422dc:	add	r3, r3, #8
   422e0:	str	r3, [sp, #12]
   422e4:	ldr	r3, [sp, #12]
   422e8:	add	r3, r3, #8
   422ec:	add	r4, r4, r3
   422f0:	ldr	r2, [r5, #20]
   422f4:	cmp	r2, #0
   422f8:	addne	r4, r4, r3
   422fc:	b	42238 <GetTypeBufSize+0x26c>
   42300:	add	r4, r4, #16
   42304:	b	42238 <GetTypeBufSize+0x26c>

00042308 <WriteCompressedType>:
   42308:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4230c:	strd	r6, [sp, #8]
   42310:	strd	r8, [sp, #16]
   42314:	strd	sl, [sp, #24]
   42318:	str	lr, [sp, #32]
   4231c:	sub	sp, sp, #10240	; 0x2800
   42320:	sub	sp, sp, #44	; 0x2c
   42324:	mov	r5, r0
   42328:	mov	r8, r1
   4232c:	mov	r4, r2
   42330:	mov	r2, #2048	; 0x800
   42334:	mov	r1, #0
   42338:	add	r6, sp, #6144	; 0x1800
   4233c:	add	r6, r6, #40	; 0x28
   42340:	mov	r0, r6
   42344:	bl	15f8 <memset@plt>
   42348:	mov	r3, #1
   4234c:	str	r3, [r6, #-4]
   42350:	ldr	fp, [r8, #16]
   42354:	cmp	fp, #0
   42358:	bne	42380 <WriteCompressedType+0x78>
   4235c:	mov	r0, fp
   42360:	add	sp, sp, #10240	; 0x2800
   42364:	add	sp, sp, #44	; 0x2c
   42368:	ldrd	r4, [sp]
   4236c:	ldrd	r6, [sp, #8]
   42370:	ldrd	r8, [sp, #16]
   42374:	ldrd	sl, [sp, #24]
   42378:	add	sp, sp, #32
   4237c:	pop	{pc}		; (ldr pc, [sp], #4)
   42380:	add	r1, sp, #6144	; 0x1800
   42384:	add	r1, r1, #36	; 0x24
   42388:	mov	r0, r8
   4238c:	bl	4a3c8 <SafeMulDims>
   42390:	ldr	r3, [r8, #16]
   42394:	sub	r3, r3, #1
   42398:	cmp	r3, #14
   4239c:	addls	pc, pc, r3, lsl #2
   423a0:	b	42e28 <WriteCompressedType+0xb20>
   423a4:	b	426e8 <WriteCompressedType+0x3e0>
   423a8:	b	42818 <WriteCompressedType+0x510>
   423ac:	b	42e28 <WriteCompressedType+0xb20>
   423b0:	b	4247c <WriteCompressedType+0x174>
   423b4:	b	42d6c <WriteCompressedType+0xa64>
   423b8:	b	423e0 <WriteCompressedType+0xd8>
   423bc:	b	423e0 <WriteCompressedType+0xd8>
   423c0:	b	423e0 <WriteCompressedType+0xd8>
   423c4:	b	423e0 <WriteCompressedType+0xd8>
   423c8:	b	423e0 <WriteCompressedType+0xd8>
   423cc:	b	423e0 <WriteCompressedType+0xd8>
   423d0:	b	423e0 <WriteCompressedType+0xd8>
   423d4:	b	423e0 <WriteCompressedType+0xd8>
   423d8:	b	423e0 <WriteCompressedType+0xd8>
   423dc:	b	423e0 <WriteCompressedType+0xd8>
   423e0:	ldr	r3, [r8, #20]
   423e4:	cmp	r3, #0
   423e8:	beq	42450 <WriteCompressedType+0x148>
   423ec:	ldr	r7, [r8, #40]	; 0x28
   423f0:	cmp	r7, #0
   423f4:	beq	42444 <WriteCompressedType+0x13c>
   423f8:	ldr	r2, [r7]
   423fc:	ldr	r3, [r8, #8]
   42400:	str	r3, [sp]
   42404:	add	r6, sp, #6144	; 0x1800
   42408:	add	r6, r6, #40	; 0x28
   4240c:	ldr	r3, [r6, #-4]
   42410:	mov	r1, r4
   42414:	mov	r0, r5
   42418:	bl	40c18 <WriteCompressedData>
   4241c:	mov	fp, r0
   42420:	ldr	r2, [r7, #4]
   42424:	ldr	r3, [r8, #8]
   42428:	str	r3, [sp]
   4242c:	ldr	r3, [r6, #-4]
   42430:	mov	r1, r4
   42434:	mov	r0, r5
   42438:	bl	40c18 <WriteCompressedData>
   4243c:	add	fp, fp, r0
   42440:	b	4235c <WriteCompressedType+0x54>
   42444:	ldr	r7, [pc, #2540]	; 42e38 <WriteCompressedType+0xb30>
   42448:	add	r7, pc, r7
   4244c:	b	423f8 <WriteCompressedType+0xf0>
   42450:	ldr	r3, [r8, #8]
   42454:	str	r3, [sp]
   42458:	add	r3, sp, #6144	; 0x1800
   4245c:	add	r3, r3, #40	; 0x28
   42460:	ldr	r3, [r3, #-4]
   42464:	ldr	r2, [r8, #40]	; 0x28
   42468:	mov	r1, r4
   4246c:	mov	r0, r5
   42470:	bl	40c18 <WriteCompressedData>
   42474:	mov	fp, r0
   42478:	b	4235c <WriteCompressedType+0x54>
   4247c:	ldr	sl, [r8, #40]	; 0x28
   42480:	add	r3, sp, #6144	; 0x1800
   42484:	add	r3, r3, #40	; 0x28
   42488:	ldr	r9, [r3, #-4]
   4248c:	ldr	r6, [r8, #8]
   42490:	mov	r0, #0
   42494:	mov	r1, #0
   42498:	add	r3, sp, #2080	; 0x820
   4249c:	add	r3, r3, #8
   424a0:	strd	r0, [r3, #-4]
   424a4:	cmp	r5, #0
   424a8:	moveq	fp, #0
   424ac:	beq	4235c <WriteCompressedType+0x54>
   424b0:	ldr	r3, [r5]
   424b4:	cmp	r3, #0
   424b8:	moveq	fp, #0
   424bc:	beq	4235c <WriteCompressedType+0x54>
   424c0:	cmp	r6, #17
   424c4:	addls	pc, pc, r6, lsl #2
   424c8:	b	426e0 <WriteCompressedType+0x3d8>
   424cc:	b	42668 <WriteCompressedType+0x360>
   424d0:	b	426e0 <WriteCompressedType+0x3d8>
   424d4:	b	42514 <WriteCompressedType+0x20c>
   424d8:	b	426e0 <WriteCompressedType+0x3d8>
   424dc:	b	42514 <WriteCompressedType+0x20c>
   424e0:	b	426e0 <WriteCompressedType+0x3d8>
   424e4:	b	426e0 <WriteCompressedType+0x3d8>
   424e8:	b	426e0 <WriteCompressedType+0x3d8>
   424ec:	b	426e0 <WriteCompressedType+0x3d8>
   424f0:	b	426e0 <WriteCompressedType+0x3d8>
   424f4:	b	426e0 <WriteCompressedType+0x3d8>
   424f8:	b	426e0 <WriteCompressedType+0x3d8>
   424fc:	b	426e0 <WriteCompressedType+0x3d8>
   42500:	b	426e0 <WriteCompressedType+0x3d8>
   42504:	b	426e0 <WriteCompressedType+0x3d8>
   42508:	b	426e0 <WriteCompressedType+0x3d8>
   4250c:	b	42514 <WriteCompressedType+0x20c>
   42510:	b	42514 <WriteCompressedType+0x20c>
   42514:	mov	r0, r6
   42518:	bl	1598 <Mat_SizeOf@plt>
   4251c:	cmp	r6, #2
   42520:	moveq	r6, #16
   42524:	str	r6, [sp, #36]	; 0x24
   42528:	mul	fp, r0, r9
   4252c:	str	fp, [sp, #40]	; 0x28
   42530:	add	r3, sp, #36	; 0x24
   42534:	str	r3, [r4]
   42538:	mov	r3, #8
   4253c:	str	r3, [r4, #4]
   42540:	mov	r6, #0
   42544:	add	r7, sp, #4096	; 0x1000
   42548:	add	r7, r7, #36	; 0x24
   4254c:	mov	r8, #1024	; 0x400
   42550:	str	r7, [r4, #12]
   42554:	str	r8, [r4, #16]
   42558:	mov	r1, #0
   4255c:	mov	r0, r4
   42560:	bl	14fc <deflate@plt>
   42564:	ldr	r2, [r4, #16]
   42568:	ldr	r3, [r5]
   4256c:	rsb	r2, r2, #1024	; 0x400
   42570:	mov	r1, #1
   42574:	mov	r0, r7
   42578:	bl	1514 <fwrite@plt>
   4257c:	add	r6, r6, r0
   42580:	ldr	r3, [r4, #16]
   42584:	cmp	r3, #0
   42588:	beq	42550 <WriteCompressedType+0x248>
   4258c:	cmp	sl, #0
   42590:	cmpne	r9, #0
   42594:	ble	426d8 <WriteCompressedType+0x3d0>
   42598:	str	sl, [r4]
   4259c:	str	fp, [r4, #4]
   425a0:	add	r7, sp, #4096	; 0x1000
   425a4:	add	r7, r7, #36	; 0x24
   425a8:	mov	r9, #1024	; 0x400
   425ac:	mov	r8, #0
   425b0:	str	r7, [r4, #12]
   425b4:	str	r9, [r4, #16]
   425b8:	mov	r1, r8
   425bc:	mov	r0, r4
   425c0:	bl	14fc <deflate@plt>
   425c4:	ldr	r2, [r4, #16]
   425c8:	ldr	r3, [r5]
   425cc:	rsb	r2, r2, #1024	; 0x400
   425d0:	mov	r1, #1
   425d4:	mov	r0, r7
   425d8:	bl	1514 <fwrite@plt>
   425dc:	add	r6, r6, r0
   425e0:	ldr	r3, [r4, #16]
   425e4:	cmp	r3, #0
   425e8:	beq	425b0 <WriteCompressedType+0x2a8>
   425ec:	tst	fp, #7
   425f0:	beq	426d8 <WriteCompressedType+0x3d0>
   425f4:	add	r3, sp, #2080	; 0x820
   425f8:	add	r3, r3, #4
   425fc:	str	r3, [r4]
   42600:	rsbs	r3, fp, #0
   42604:	and	fp, fp, #7
   42608:	and	r3, r3, #7
   4260c:	rsbpl	fp, r3, #0
   42610:	rsb	fp, fp, #8
   42614:	str	fp, [r4, #4]
   42618:	add	r7, sp, #4096	; 0x1000
   4261c:	add	r7, r7, #36	; 0x24
   42620:	mov	r9, #1024	; 0x400
   42624:	mov	r8, #0
   42628:	str	r7, [r4, #12]
   4262c:	str	r9, [r4, #16]
   42630:	mov	r1, r8
   42634:	mov	r0, r4
   42638:	bl	14fc <deflate@plt>
   4263c:	ldr	r2, [r4, #16]
   42640:	ldr	r3, [r5]
   42644:	rsb	r2, r2, #1024	; 0x400
   42648:	mov	r1, #1
   4264c:	mov	r0, r7
   42650:	bl	1514 <fwrite@plt>
   42654:	add	r6, r6, r0
   42658:	ldr	r3, [r4, #16]
   4265c:	cmp	r3, #0
   42660:	beq	42628 <WriteCompressedType+0x320>
   42664:	b	426d8 <WriteCompressedType+0x3d0>
   42668:	mov	r2, #4
   4266c:	str	r2, [sp, #36]	; 0x24
   42670:	lsl	r9, r9, #1
   42674:	str	r9, [sp, #40]	; 0x28
   42678:	add	r3, sp, #36	; 0x24
   4267c:	str	r3, [r4]
   42680:	mov	r3, #8
   42684:	str	r3, [r4, #4]
   42688:	mov	r6, #0
   4268c:	add	r7, sp, #4096	; 0x1000
   42690:	add	r7, r7, #36	; 0x24
   42694:	mov	r9, #1024	; 0x400
   42698:	mov	r8, r6
   4269c:	str	r7, [r4, #12]
   426a0:	str	r9, [r4, #16]
   426a4:	mov	r1, r8
   426a8:	mov	r0, r4
   426ac:	bl	14fc <deflate@plt>
   426b0:	ldr	r2, [r4, #16]
   426b4:	ldr	r3, [r5]
   426b8:	rsb	r2, r2, #1024	; 0x400
   426bc:	mov	r1, #1
   426c0:	mov	r0, r7
   426c4:	bl	1514 <fwrite@plt>
   426c8:	add	r6, r6, r0
   426cc:	ldr	r3, [r4, #16]
   426d0:	cmp	r3, #0
   426d4:	beq	4269c <WriteCompressedType+0x394>
   426d8:	mov	fp, r6
   426dc:	b	4235c <WriteCompressedType+0x54>
   426e0:	mov	r6, #0
   426e4:	b	426d8 <WriteCompressedType+0x3d0>
   426e8:	ldr	fp, [r8]
   426ec:	cmp	fp, #0
   426f0:	beq	4235c <WriteCompressedType+0x54>
   426f4:	ldr	sl, [r8, #40]	; 0x28
   426f8:	ldr	r3, [r8, #12]
   426fc:	cmp	sl, #0
   42700:	cmpne	r3, #0
   42704:	moveq	fp, #0
   42708:	beq	4235c <WriteCompressedType+0x54>
   4270c:	udiv	r1, fp, r3
   42710:	add	r2, sp, #6144	; 0x1800
   42714:	add	r2, r2, #40	; 0x28
   42718:	str	r1, [r2, #-4]
   4271c:	cmp	fp, r3
   42720:	bcc	42e30 <WriteCompressedType+0xb28>
   42724:	sub	sl, sl, #4
   42728:	mov	r9, #0
   4272c:	add	r3, sp, #4096	; 0x1000
   42730:	add	r3, r3, #36	; 0x24
   42734:	str	r3, [sp, #12]
   42738:	mov	r7, #2048	; 0x800
   4273c:	mov	fp, r2
   42740:	b	427c4 <WriteCompressedType+0x4bc>
   42744:	mov	r0, r8
   42748:	bl	41fcc <GetTypeBufSize>
   4274c:	add	r0, r0, #24
   42750:	str	r0, [fp, #-2048]	; 0xfffff800
   42754:	ldr	r3, [sp, #12]
   42758:	str	r3, [r4]
   4275c:	mov	r3, #8
   42760:	str	r3, [r4, #4]
   42764:	add	r6, sp, #2080	; 0x820
   42768:	add	r6, r6, #4
   4276c:	str	r6, [r4, #12]
   42770:	str	r7, [r4, #16]
   42774:	mov	r1, #0
   42778:	mov	r0, r4
   4277c:	bl	14fc <deflate@plt>
   42780:	ldr	r2, [r4, #16]
   42784:	ldr	r3, [r5]
   42788:	rsb	r2, r2, #2048	; 0x800
   4278c:	mov	r1, #1
   42790:	mov	r0, r6
   42794:	bl	1514 <fwrite@plt>
   42798:	ldr	r3, [r4, #16]
   4279c:	cmp	r3, #0
   427a0:	beq	4276c <WriteCompressedType+0x464>
   427a4:	mov	r2, r4
   427a8:	mov	r1, r8
   427ac:	mov	r0, r5
   427b0:	bl	42e3c <WriteCompressedTypeArrayFlags>
   427b4:	add	r9, r9, #1
   427b8:	ldr	r3, [fp, #-4]
   427bc:	cmp	r3, r9
   427c0:	bls	42810 <WriteCompressedType+0x508>
   427c4:	ldr	r8, [sl, #4]!
   427c8:	mov	r2, r7
   427cc:	mov	r1, #0
   427d0:	ldr	r0, [sp, #12]
   427d4:	bl	15f8 <memset@plt>
   427d8:	clz	r3, r4
   427dc:	lsr	r3, r3, #5
   427e0:	cmp	r5, #0
   427e4:	moveq	r3, #1
   427e8:	cmp	r8, #0
   427ec:	moveq	r3, #1
   427f0:	cmp	r3, #0
   427f4:	bne	427b4 <WriteCompressedType+0x4ac>
   427f8:	mov	r3, #14
   427fc:	str	r3, [fp, #-2052]	; 0xfffff7fc
   42800:	ldr	r3, [r8, #16]
   42804:	cmp	r3, #0
   42808:	beq	42754 <WriteCompressedType+0x44c>
   4280c:	b	42744 <WriteCompressedType+0x43c>
   42810:	mov	fp, #0
   42814:	b	4235c <WriteCompressedType+0x54>
   42818:	ldr	r3, [r8, #52]	; 0x34
   4281c:	ldr	fp, [r3, #4]
   42820:	cmp	fp, #0
   42824:	bne	428c4 <WriteCompressedType+0x5bc>
   42828:	mov	r2, #5
   4282c:	movt	r2, #4
   42830:	add	r3, sp, #6144	; 0x1800
   42834:	add	r3, r3, #40	; 0x28
   42838:	str	r2, [r3]
   4283c:	mov	r2, #1
   42840:	add	r1, sp, #6144	; 0x1800
   42844:	add	r1, r1, #44	; 0x2c
   42848:	str	r2, [r1]
   4284c:	add	r1, sp, #6144	; 0x1800
   42850:	add	r1, r1, #48	; 0x30
   42854:	str	r2, [r1]
   42858:	mov	r2, #0
   4285c:	add	r1, sp, #6144	; 0x1800
   42860:	add	r1, r1, #52	; 0x34
   42864:	str	r2, [r1]
   42868:	str	r3, [r4]
   4286c:	mov	r3, #16
   42870:	str	r3, [r4, #4]
   42874:	add	r6, sp, #8192	; 0x2000
   42878:	add	r6, r6, #40	; 0x28
   4287c:	mov	r8, #2048	; 0x800
   42880:	mov	r7, r2
   42884:	str	r6, [r4, #12]
   42888:	str	r8, [r4, #16]
   4288c:	mov	r1, r7
   42890:	mov	r0, r4
   42894:	bl	14fc <deflate@plt>
   42898:	ldr	r2, [r4, #16]
   4289c:	ldr	r3, [r5]
   428a0:	rsb	r2, r2, #2048	; 0x800
   428a4:	mov	r1, #1
   428a8:	mov	r0, r6
   428ac:	bl	1514 <fwrite@plt>
   428b0:	add	fp, fp, r0
   428b4:	ldr	r3, [r4, #16]
   428b8:	cmp	r3, #0
   428bc:	beq	42884 <WriteCompressedType+0x57c>
   428c0:	b	4235c <WriteCompressedType+0x54>
   428c4:	ldr	r7, [r3, #8]
   428c8:	add	r9, r7, fp, lsl #2
   428cc:	mov	r6, #0
   428d0:	ldr	r0, [r7], #4
   428d4:	bl	15c8 <strlen@plt>
   428d8:	cmp	r6, r0
   428dc:	movcc	r6, r0
   428e0:	cmp	r9, r7
   428e4:	bne	428d0 <WriteCompressedType+0x5c8>
   428e8:	add	r3, r6, #1
   428ec:	str	r3, [sp, #12]
   428f0:	mov	r2, r3
   428f4:	mul	r3, r3, fp
   428f8:	tst	r3, #7
   428fc:	beq	42920 <WriteCompressedType+0x618>
   42900:	add	r3, r3, fp
   42904:	b	4290c <WriteCompressedType+0x604>
   42908:	mov	r3, r1
   4290c:	add	r2, r2, #1
   42910:	str	r2, [sp, #12]
   42914:	add	r1, r3, fp
   42918:	tst	r3, #7
   4291c:	bne	42908 <WriteCompressedType+0x600>
   42920:	ldr	r2, [r8, #40]	; 0x28
   42924:	str	r2, [sp, #28]
   42928:	mov	r2, #5
   4292c:	movt	r2, #4
   42930:	add	r6, sp, #6144	; 0x1800
   42934:	add	r6, r6, #40	; 0x28
   42938:	str	r2, [r6]
   4293c:	add	r2, sp, #6144	; 0x1800
   42940:	add	r2, r2, #44	; 0x2c
   42944:	ldr	r0, [sp, #12]
   42948:	str	r0, [r2]
   4294c:	mov	r1, #1
   42950:	add	r2, sp, #6144	; 0x1800
   42954:	add	r2, r2, #48	; 0x30
   42958:	str	r1, [r2]
   4295c:	add	r2, sp, #6144	; 0x1800
   42960:	add	r2, r2, #52	; 0x34
   42964:	str	r3, [r2]
   42968:	bl	140c <calloc@plt>
   4296c:	str	r0, [sp, #16]
   42970:	str	r6, [r4]
   42974:	mov	r3, #16
   42978:	str	r3, [r4, #4]
   4297c:	mov	r6, #0
   42980:	add	r7, sp, #8192	; 0x2000
   42984:	add	r7, r7, #40	; 0x28
   42988:	mov	r9, #2048	; 0x800
   4298c:	mov	sl, r6
   42990:	str	r7, [r4, #12]
   42994:	str	r9, [r4, #16]
   42998:	mov	r1, sl
   4299c:	mov	r0, r4
   429a0:	bl	14fc <deflate@plt>
   429a4:	ldr	r2, [r4, #16]
   429a8:	ldr	r3, [r5]
   429ac:	rsb	r2, r2, #2048	; 0x800
   429b0:	mov	r1, #1
   429b4:	mov	r0, r7
   429b8:	bl	1514 <fwrite@plt>
   429bc:	add	r6, r6, r0
   429c0:	ldr	r3, [r4, #16]
   429c4:	cmp	r3, #0
   429c8:	beq	42990 <WriteCompressedType+0x688>
   429cc:	mov	sl, #0
   429d0:	add	r7, sp, #8192	; 0x2000
   429d4:	add	r7, r7, #40	; 0x28
   429d8:	mov	r9, #2048	; 0x800
   429dc:	str	r8, [sp, #24]
   429e0:	ldr	r3, [sp, #24]
   429e4:	ldr	r8, [r3, #52]	; 0x34
   429e8:	ldr	r3, [r8, #8]
   429ec:	ldr	r0, [r3, sl, lsl #2]
   429f0:	bl	15c8 <strlen@plt>
   429f4:	str	r0, [sp, #20]
   429f8:	ldr	r2, [sp, #12]
   429fc:	mov	r1, #0
   42a00:	ldr	r0, [sp, #16]
   42a04:	bl	15f8 <memset@plt>
   42a08:	ldr	r3, [r8, #8]
   42a0c:	ldr	r2, [sp, #20]
   42a10:	ldr	r1, [r3, sl, lsl #2]
   42a14:	ldr	r8, [sp, #16]
   42a18:	mov	r0, r8
   42a1c:	bl	1490 <memcpy@plt>
   42a20:	str	r8, [r4]
   42a24:	ldr	r3, [sp, #12]
   42a28:	str	r3, [r4, #4]
   42a2c:	str	r7, [r4, #12]
   42a30:	str	r9, [r4, #16]
   42a34:	mov	r1, #0
   42a38:	mov	r0, r4
   42a3c:	bl	14fc <deflate@plt>
   42a40:	ldr	r2, [r4, #16]
   42a44:	ldr	r3, [r5]
   42a48:	rsb	r2, r2, #2048	; 0x800
   42a4c:	mov	r1, #1
   42a50:	mov	r0, r7
   42a54:	bl	1514 <fwrite@plt>
   42a58:	add	r6, r6, r0
   42a5c:	ldr	r3, [r4, #16]
   42a60:	cmp	r3, #0
   42a64:	beq	42a2c <WriteCompressedType+0x724>
   42a68:	add	sl, sl, #1
   42a6c:	cmp	fp, sl
   42a70:	bne	429e0 <WriteCompressedType+0x6d8>
   42a74:	ldr	r0, [sp, #16]
   42a78:	bl	1478 <free@plt>
   42a7c:	mov	r2, fp
   42a80:	add	r3, sp, #6144	; 0x1800
   42a84:	add	r3, r3, #40	; 0x28
   42a88:	ldr	r1, [r3, #-4]
   42a8c:	add	r0, sp, #32
   42a90:	bl	4a440 <SafeMul>
   42a94:	ldr	r3, [sp, #32]
   42a98:	cmp	r3, #0
   42a9c:	beq	42d64 <WriteCompressedType+0xa5c>
   42aa0:	ldr	r3, [sp, #28]
   42aa4:	sub	r3, r3, #4
   42aa8:	str	r3, [sp, #16]
   42aac:	mov	r8, #0
   42ab0:	add	r3, sp, #36	; 0x24
   42ab4:	str	r3, [sp, #20]
   42ab8:	add	r3, sp, #2080	; 0x820
   42abc:	add	r3, r3, #8
   42ac0:	sub	r2, r3, #4
   42ac4:	str	r2, [sp, #24]
   42ac8:	str	r6, [sp, #12]
   42acc:	mov	fp, r3
   42ad0:	b	42d14 <WriteCompressedType+0xa0c>
   42ad4:	mov	r2, #2048	; 0x800
   42ad8:	mov	r1, #0
   42adc:	add	r6, sp, #4096	; 0x1000
   42ae0:	add	r6, r6, #36	; 0x24
   42ae4:	mov	r0, r6
   42ae8:	bl	15f8 <memset@plt>
   42aec:	mov	r2, #14
   42af0:	add	r3, sp, #6144	; 0x1800
   42af4:	add	r3, r3, #40	; 0x28
   42af8:	str	r2, [r3, #-2052]	; 0xfffff7fc
   42afc:	mov	r2, #48	; 0x30
   42b00:	str	r2, [r3, #-2048]	; 0xfffff800
   42b04:	str	r6, [r4]
   42b08:	mov	r3, #8
   42b0c:	str	r3, [r4, #4]
   42b10:	mov	r6, #0
   42b14:	mov	r7, #2048	; 0x800
   42b18:	mov	r9, r6
   42b1c:	ldr	sl, [sp, #24]
   42b20:	str	sl, [r4, #12]
   42b24:	str	r7, [r4, #16]
   42b28:	mov	r1, r9
   42b2c:	mov	r0, r4
   42b30:	bl	14fc <deflate@plt>
   42b34:	ldr	r2, [r4, #16]
   42b38:	ldr	r3, [r5]
   42b3c:	rsb	r2, r2, #2048	; 0x800
   42b40:	mov	r1, #1
   42b44:	mov	r0, sl
   42b48:	bl	1514 <fwrite@plt>
   42b4c:	add	r6, r6, r0
   42b50:	ldr	r3, [r4, #16]
   42b54:	cmp	r3, #0
   42b58:	beq	42b20 <WriteCompressedType+0x818>
   42b5c:	mov	r2, #6
   42b60:	add	r3, sp, #6144	; 0x1800
   42b64:	add	r3, r3, #40	; 0x28
   42b68:	str	r2, [r3, #-2052]	; 0xfffff7fc
   42b6c:	mov	r1, #8
   42b70:	str	r1, [r3, #-2048]	; 0xfffff800
   42b74:	str	r2, [r3, #-2044]	; 0xfffff804
   42b78:	mov	r2, #0
   42b7c:	str	r2, [r3, #-2040]	; 0xfffff808
   42b80:	mov	r0, #5
   42b84:	str	r0, [r3, #-2036]	; 0xfffff80c
   42b88:	str	r1, [r3, #-2032]	; 0xfffff810
   42b8c:	str	r2, [r3, #-2028]	; 0xfffff814
   42b90:	str	r2, [r3, #-2024]	; 0xfffff818
   42b94:	add	r3, sp, #4096	; 0x1000
   42b98:	add	r3, r3, #36	; 0x24
   42b9c:	str	r3, [r4]
   42ba0:	mov	r3, #32
   42ba4:	str	r3, [r4, #4]
   42ba8:	mov	r7, #2048	; 0x800
   42bac:	mov	r9, r2
   42bb0:	ldr	sl, [sp, #24]
   42bb4:	str	sl, [r4, #12]
   42bb8:	str	r7, [r4, #16]
   42bbc:	mov	r1, r9
   42bc0:	mov	r0, r4
   42bc4:	bl	14fc <deflate@plt>
   42bc8:	ldr	r2, [r4, #16]
   42bcc:	ldr	r3, [r5]
   42bd0:	rsb	r2, r2, #2048	; 0x800
   42bd4:	mov	r1, #1
   42bd8:	mov	r0, sl
   42bdc:	bl	1514 <fwrite@plt>
   42be0:	add	r6, r6, r0
   42be4:	ldr	r3, [r4, #16]
   42be8:	cmp	r3, #0
   42bec:	beq	42bb4 <WriteCompressedType+0x8ac>
   42bf0:	mov	r2, #1
   42bf4:	add	r3, sp, #6144	; 0x1800
   42bf8:	add	r3, r3, #40	; 0x28
   42bfc:	str	r2, [r3, #-2052]	; 0xfffff7fc
   42c00:	mov	r2, #0
   42c04:	str	r2, [r3, #-2048]	; 0xfffff800
   42c08:	add	r3, sp, #4096	; 0x1000
   42c0c:	add	r3, r3, #36	; 0x24
   42c10:	str	r3, [r4]
   42c14:	mov	r3, #8
   42c18:	str	r3, [r4, #4]
   42c1c:	mov	r7, #2048	; 0x800
   42c20:	mov	r9, r2
   42c24:	ldr	sl, [sp, #24]
   42c28:	str	sl, [r4, #12]
   42c2c:	str	r7, [r4, #16]
   42c30:	mov	r1, r9
   42c34:	mov	r0, r4
   42c38:	bl	14fc <deflate@plt>
   42c3c:	ldr	r2, [r4, #16]
   42c40:	ldr	r3, [r5]
   42c44:	rsb	r2, r2, #2048	; 0x800
   42c48:	mov	r1, #1
   42c4c:	mov	r0, sl
   42c50:	bl	1514 <fwrite@plt>
   42c54:	add	r6, r6, r0
   42c58:	ldr	r3, [r4, #16]
   42c5c:	cmp	r3, #0
   42c60:	beq	42c28 <WriteCompressedType+0x920>
   42c64:	mov	r3, #9
   42c68:	str	r3, [sp]
   42c6c:	mov	r3, #0
   42c70:	mov	r2, r3
   42c74:	mov	r1, r4
   42c78:	mov	r0, r5
   42c7c:	bl	40c18 <WriteCompressedData>
   42c80:	add	r0, r6, r0
   42c84:	b	42cf8 <WriteCompressedType+0x9f0>
   42c88:	ldr	r3, [sp, #20]
   42c8c:	str	r3, [r4]
   42c90:	mov	r3, #8
   42c94:	str	r3, [r4, #4]
   42c98:	mov	r6, #0
   42c9c:	add	r7, sp, #4096	; 0x1000
   42ca0:	add	r7, r7, #36	; 0x24
   42ca4:	mov	r9, #2048	; 0x800
   42ca8:	str	r7, [r4, #12]
   42cac:	str	r9, [r4, #16]
   42cb0:	mov	r1, #0
   42cb4:	mov	r0, r4
   42cb8:	bl	14fc <deflate@plt>
   42cbc:	ldr	r2, [r4, #16]
   42cc0:	ldr	r3, [r5]
   42cc4:	rsb	r2, r2, #2048	; 0x800
   42cc8:	mov	r1, #1
   42ccc:	mov	r0, r7
   42cd0:	bl	1514 <fwrite@plt>
   42cd4:	add	r6, r6, r0
   42cd8:	ldr	r3, [r4, #16]
   42cdc:	cmp	r3, #0
   42ce0:	beq	42ca8 <WriteCompressedType+0x9a0>
   42ce4:	mov	r2, r4
   42ce8:	mov	r1, sl
   42cec:	mov	r0, r5
   42cf0:	bl	42e3c <WriteCompressedTypeArrayFlags>
   42cf4:	add	r0, r6, r0
   42cf8:	ldr	r3, [sp, #12]
   42cfc:	add	r3, r3, r0
   42d00:	str	r3, [sp, #12]
   42d04:	add	r8, r8, #1
   42d08:	ldr	r3, [fp, #-2056]	; 0xfffff7f8
   42d0c:	cmp	r3, r8
   42d10:	bls	42d5c <WriteCompressedType+0xa54>
   42d14:	ldr	r3, [sp, #16]
   42d18:	ldr	sl, [r3, #4]!
   42d1c:	str	r3, [sp, #16]
   42d20:	mov	r2, #2048	; 0x800
   42d24:	mov	r1, #0
   42d28:	ldr	r0, [sp, #20]
   42d2c:	bl	15f8 <memset@plt>
   42d30:	cmp	sl, #0
   42d34:	beq	42ad4 <WriteCompressedType+0x7cc>
   42d38:	mov	r3, #14
   42d3c:	str	r3, [fp, #-2052]	; 0xfffff7fc
   42d40:	ldr	r3, [sl, #16]
   42d44:	cmp	r3, #0
   42d48:	beq	42c88 <WriteCompressedType+0x980>
   42d4c:	mov	r0, sl
   42d50:	bl	41fa0 <GetStructFieldBufSize>
   42d54:	str	r0, [fp, #-2048]	; 0xfffff800
   42d58:	b	42c88 <WriteCompressedType+0x980>
   42d5c:	ldr	fp, [sp, #12]
   42d60:	b	4235c <WriteCompressedType+0x54>
   42d64:	mov	fp, r6
   42d68:	b	4235c <WriteCompressedType+0x54>
   42d6c:	ldr	r6, [r8, #40]	; 0x28
   42d70:	ldr	r3, [r6, #8]
   42d74:	ldr	r2, [r6, #4]
   42d78:	mov	r9, #5
   42d7c:	str	r9, [sp]
   42d80:	mov	r1, r4
   42d84:	mov	r0, r5
   42d88:	bl	40c18 <WriteCompressedData>
   42d8c:	mov	r7, r0
   42d90:	ldr	r3, [r6, #16]
   42d94:	ldr	r2, [r6, #12]
   42d98:	str	r9, [sp]
   42d9c:	mov	r1, r4
   42da0:	mov	r0, r5
   42da4:	bl	40c18 <WriteCompressedData>
   42da8:	add	r7, r7, r0
   42dac:	ldr	r3, [r8, #20]
   42db0:	cmp	r3, #0
   42db4:	beq	42e04 <WriteCompressedType+0xafc>
   42db8:	ldr	sl, [r6, #24]
   42dbc:	ldr	r3, [r6, #20]
   42dc0:	ldr	r2, [sl]
   42dc4:	ldr	r1, [r8, #8]
   42dc8:	str	r1, [sp]
   42dcc:	mov	r1, r4
   42dd0:	mov	r0, r5
   42dd4:	bl	40c18 <WriteCompressedData>
   42dd8:	mov	r9, r0
   42ddc:	ldr	r3, [r6, #20]
   42de0:	ldr	r2, [sl, #4]
   42de4:	ldr	r1, [r8, #8]
   42de8:	str	r1, [sp]
   42dec:	mov	r1, r4
   42df0:	mov	r0, r5
   42df4:	bl	40c18 <WriteCompressedData>
   42df8:	add	r0, r9, r0
   42dfc:	add	fp, r0, r7
   42e00:	b	4235c <WriteCompressedType+0x54>
   42e04:	ldr	r3, [r6, #20]
   42e08:	ldr	r2, [r6, #24]
   42e0c:	ldr	r1, [r8, #8]
   42e10:	str	r1, [sp]
   42e14:	mov	r1, r4
   42e18:	mov	r0, r5
   42e1c:	bl	40c18 <WriteCompressedData>
   42e20:	add	fp, r7, r0
   42e24:	b	4235c <WriteCompressedType+0x54>
   42e28:	mov	fp, #0
   42e2c:	b	4235c <WriteCompressedType+0x54>
   42e30:	mov	fp, #0
   42e34:	b	4235c <WriteCompressedType+0x54>
   42e38:	.word	0x0001ed84

00042e3c <WriteCompressedTypeArrayFlags>:
   42e3c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   42e40:	strd	r6, [sp, #8]
   42e44:	strd	r8, [sp, #16]
   42e48:	str	sl, [sp, #24]
   42e4c:	str	lr, [sp, #28]
   42e50:	sub	sp, sp, #4096	; 0x1000
   42e54:	mov	r6, r0
   42e58:	mov	r8, r1
   42e5c:	mov	r4, r2
   42e60:	mov	r2, #2048	; 0x800
   42e64:	mov	r1, #0
   42e68:	mov	r0, sp
   42e6c:	bl	15f8 <memset@plt>
   42e70:	ldr	r0, [r8, #16]
   42e74:	cmp	r0, #0
   42e78:	beq	43024 <WriteCompressedTypeArrayFlags+0x1e8>
   42e7c:	uxtb	r2, r0
   42e80:	ldr	r3, [r8, #20]
   42e84:	cmp	r3, #0
   42e88:	orrne	r2, r2, #2048	; 0x800
   42e8c:	ldr	r3, [r8, #24]
   42e90:	cmp	r3, #0
   42e94:	orrne	r2, r2, #1024	; 0x400
   42e98:	ldr	r3, [r8, #28]
   42e9c:	cmp	r3, #0
   42ea0:	orrne	r2, r2, #512	; 0x200
   42ea4:	cmp	r0, #5
   42ea8:	ldreq	r3, [r8, #40]	; 0x28
   42eac:	ldreq	r0, [r3]
   42eb0:	movne	r0, #0
   42eb4:	mov	r1, #6
   42eb8:	mov	r3, sp
   42ebc:	str	r1, [r3]
   42ec0:	mov	r1, #8
   42ec4:	str	r1, [sp, #4]
   42ec8:	str	r2, [sp, #8]
   42ecc:	str	r0, [sp, #12]
   42ed0:	ldr	ip, [r8, #4]
   42ed4:	mov	r2, #5
   42ed8:	str	r2, [r3, #16]
   42edc:	lsl	r0, ip, #2
   42ee0:	str	r0, [sp, #20]
   42ee4:	cmp	ip, #0
   42ee8:	ble	43040 <WriteCompressedTypeArrayFlags+0x204>
   42eec:	ldr	r3, [r8, #32]
   42ef0:	add	r2, sp, #20
   42ef4:	add	r0, r0, r3
   42ef8:	ldr	r1, [r3], #4
   42efc:	str	r1, [r2, #4]!
   42f00:	cmp	r3, r0
   42f04:	bne	42ef8 <WriteCompressedTypeArrayFlags+0xbc>
   42f08:	mov	r3, ip
   42f0c:	tst	ip, #1
   42f10:	beq	42f28 <WriteCompressedTypeArrayFlags+0xec>
   42f14:	add	r1, r3, #6
   42f18:	mov	r0, #0
   42f1c:	mov	r2, sp
   42f20:	str	r0, [r2, r1, lsl #2]
   42f24:	add	r3, r3, #1
   42f28:	mov	r2, sp
   42f2c:	str	r2, [r4]
   42f30:	add	r3, r3, #6
   42f34:	lsl	r3, r3, #2
   42f38:	str	r3, [r4, #4]
   42f3c:	mov	r5, #0
   42f40:	add	r7, sp, #2048	; 0x800
   42f44:	mov	sl, #2048	; 0x800
   42f48:	mov	r9, r5
   42f4c:	str	r7, [r4, #12]
   42f50:	str	sl, [r4, #16]
   42f54:	mov	r1, r9
   42f58:	mov	r0, r4
   42f5c:	bl	14fc <deflate@plt>
   42f60:	ldr	r2, [r4, #16]
   42f64:	ldr	r3, [r6]
   42f68:	rsb	r2, r2, #2048	; 0x800
   42f6c:	mov	r1, #1
   42f70:	mov	r0, r7
   42f74:	bl	1514 <fwrite@plt>
   42f78:	add	r5, r5, r0
   42f7c:	ldr	r3, [r4, #16]
   42f80:	cmp	r3, #0
   42f84:	beq	42f4c <WriteCompressedTypeArrayFlags+0x110>
   42f88:	mov	r2, #1
   42f8c:	mov	r3, sp
   42f90:	str	r2, [r3]
   42f94:	mov	r2, #0
   42f98:	str	r2, [sp, #4]
   42f9c:	str	r3, [r4]
   42fa0:	mov	r3, #8
   42fa4:	str	r3, [r4, #4]
   42fa8:	add	r7, sp, #2048	; 0x800
   42fac:	mov	sl, #2048	; 0x800
   42fb0:	mov	r9, r2
   42fb4:	str	r7, [r4, #12]
   42fb8:	str	sl, [r4, #16]
   42fbc:	mov	r1, r9
   42fc0:	mov	r0, r4
   42fc4:	bl	14fc <deflate@plt>
   42fc8:	ldr	r2, [r4, #16]
   42fcc:	ldr	r3, [r6]
   42fd0:	rsb	r2, r2, #2048	; 0x800
   42fd4:	mov	r1, #1
   42fd8:	mov	r0, r7
   42fdc:	bl	1514 <fwrite@plt>
   42fe0:	add	r5, r5, r0
   42fe4:	ldr	r3, [r4, #16]
   42fe8:	cmp	r3, #0
   42fec:	beq	42fb4 <WriteCompressedTypeArrayFlags+0x178>
   42ff0:	ldr	r7, [r8, #52]	; 0x34
   42ff4:	ldr	r0, [r6]
   42ff8:	bl	14b4 <ftell@plt>
   42ffc:	str	r0, [r7]
   43000:	ldr	r3, [r8, #52]	; 0x34
   43004:	ldr	r3, [r3]
   43008:	cmn	r3, #1
   4300c:	beq	43048 <WriteCompressedTypeArrayFlags+0x20c>
   43010:	mov	r2, r4
   43014:	mov	r1, r8
   43018:	mov	r0, r6
   4301c:	bl	42308 <WriteCompressedType>
   43020:	add	r0, r5, r0
   43024:	add	sp, sp, #4096	; 0x1000
   43028:	ldrd	r4, [sp]
   4302c:	ldrd	r6, [sp, #8]
   43030:	ldrd	r8, [sp, #16]
   43034:	ldr	sl, [sp, #24]
   43038:	add	sp, sp, #28
   4303c:	pop	{pc}		; (ldr pc, [sp], #4)
   43040:	mov	r3, #0
   43044:	b	42f0c <WriteCompressedTypeArrayFlags+0xd0>
   43048:	ldr	r0, [pc, #8]	; 43058 <WriteCompressedTypeArrayFlags+0x21c>
   4304c:	add	r0, pc, r0
   43050:	bl	161c <Mat_Critical@plt>
   43054:	b	43010 <WriteCompressedTypeArrayFlags+0x1d4>
   43058:	.word	0x0000c3dc

0004305c <Mat_Create5>:
   4305c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   43060:	strd	r6, [sp, #8]
   43064:	strd	r8, [sp, #16]
   43068:	str	lr, [sp, #24]
   4306c:	sub	sp, sp, #28
   43070:	mov	r9, r0
   43074:	mov	r7, r1
   43078:	mov	r3, #0
   4307c:	strh	r3, [sp, #22]
   43080:	ldr	r1, [pc, #456]	; 43250 <Mat_Create5+0x1f4>
   43084:	add	r1, pc, r1
   43088:	bl	1454 <fopen@plt>
   4308c:	subs	r8, r0, #0
   43090:	moveq	r4, r8
   43094:	beq	431e4 <Mat_Create5+0x188>
   43098:	mov	r0, #44	; 0x2c
   4309c:	bl	1544 <malloc@plt>
   430a0:	subs	r4, r0, #0
   430a4:	beq	43200 <Mat_Create5+0x1a4>
   430a8:	mov	r5, #0
   430ac:	str	r5, [r4]
   430b0:	str	r5, [r4, #4]
   430b4:	str	r5, [r4, #8]
   430b8:	str	r5, [r4, #12]
   430bc:	str	r5, [r4, #16]
   430c0:	str	r5, [r4, #20]
   430c4:	str	r5, [r4, #24]
   430c8:	mov	r6, #128	; 0x80
   430cc:	str	r6, [r4, #28]
   430d0:	str	r5, [r4, #32]
   430d4:	str	r5, [r4, #36]	; 0x24
   430d8:	str	r5, [r4, #40]	; 0x28
   430dc:	mov	r0, r5
   430e0:	bl	14a8 <time@plt>
   430e4:	str	r0, [sp, #16]
   430e8:	str	r8, [r4]
   430ec:	mov	r1, r9
   430f0:	ldr	r0, [pc, #348]	; 43254 <Mat_Create5+0x1f8>
   430f4:	add	r0, pc, r0
   430f8:	bl	1cf0 <strdup_printf>
   430fc:	str	r0, [r4, #12]
   43100:	mov	r3, #1
   43104:	str	r3, [r4, #24]
   43108:	str	r5, [r4, #20]
   4310c:	mov	r0, r6
   43110:	bl	1544 <malloc@plt>
   43114:	mov	r5, r0
   43118:	str	r0, [r4, #4]
   4311c:	mov	r0, #8
   43120:	bl	1544 <malloc@plt>
   43124:	str	r0, [r4, #8]
   43128:	mov	r2, r6
   4312c:	mov	r1, #32
   43130:	mov	r0, r5
   43134:	bl	15f8 <memset@plt>
   43138:	cmp	r7, #0
   4313c:	beq	4320c <Mat_Create5+0x1b0>
   43140:	mov	r3, r7
   43144:	ldr	r2, [pc, #268]	; 43258 <Mat_Create5+0x1fc>
   43148:	add	r2, pc, r2
   4314c:	mov	r1, #116	; 0x74
   43150:	mov	r0, r5
   43154:	bl	15e0 <snprintf@plt>
   43158:	cmp	r0, #115	; 0x73
   4315c:	bls	4316c <Mat_Create5+0x110>
   43160:	ldr	r3, [r4, #4]
   43164:	mov	r2, #0
   43168:	strb	r2, [r3, #115]	; 0x73
   4316c:	ldr	r2, [r4, #8]
   43170:	movw	r3, #8224	; 0x2020
   43174:	bfi	r3, r3, #16, #16
   43178:	str	r3, [r2]
   4317c:	str	r3, [r2, #4]
   43180:	mov	r3, #256	; 0x100
   43184:	str	r3, [r4, #16]
   43188:	movw	r2, #19785	; 0x4d49
   4318c:	strh	r2, [sp, #22]
   43190:	strh	r3, [sp, #20]
   43194:	ldr	r3, [r4]
   43198:	mov	r2, #116	; 0x74
   4319c:	mov	r1, #1
   431a0:	ldr	r0, [r4, #4]
   431a4:	bl	1514 <fwrite@plt>
   431a8:	ldr	r3, [r4]
   431ac:	mov	r2, #8
   431b0:	mov	r1, #1
   431b4:	ldr	r0, [r4, #8]
   431b8:	bl	1514 <fwrite@plt>
   431bc:	ldr	r3, [r4]
   431c0:	mov	r2, #1
   431c4:	mov	r1, #2
   431c8:	add	r0, sp, #20
   431cc:	bl	1514 <fwrite@plt>
   431d0:	ldr	r3, [r4]
   431d4:	mov	r2, #1
   431d8:	mov	r1, #2
   431dc:	add	r0, sp, #22
   431e0:	bl	1514 <fwrite@plt>
   431e4:	mov	r0, r4
   431e8:	add	sp, sp, #28
   431ec:	ldrd	r4, [sp]
   431f0:	ldrd	r6, [sp, #8]
   431f4:	ldrd	r8, [sp, #16]
   431f8:	add	sp, sp, #24
   431fc:	pop	{pc}		; (ldr pc, [sp], #4)
   43200:	mov	r0, r8
   43204:	bl	1634 <fclose@plt>
   43208:	b	431e4 <Mat_Create5+0x188>
   4320c:	add	r0, sp, #16
   43210:	bl	14c0 <ctime@plt>
   43214:	str	r0, [sp, #12]
   43218:	mov	r3, #15
   4321c:	str	r3, [sp, #8]
   43220:	mov	r3, #5
   43224:	str	r3, [sp, #4]
   43228:	mov	r3, #1
   4322c:	str	r3, [sp]
   43230:	ldr	r3, [pc, #36]	; 4325c <Mat_Create5+0x200>
   43234:	add	r3, pc, r3
   43238:	ldr	r2, [pc, #32]	; 43260 <Mat_Create5+0x204>
   4323c:	add	r2, pc, r2
   43240:	mov	r1, #116	; 0x74
   43244:	mov	r0, r5
   43248:	bl	15e0 <snprintf@plt>
   4324c:	b	43158 <Mat_Create5+0xfc>
   43250:	.word	0x0000c3f4
   43254:	.word	0x0000cb00
   43258:	.word	0x0000caac
   4325c:	.word	0x0000c248
   43260:	.word	0x0000c260

00043264 <Mat_VarRead5>:
   43264:	strd	r4, [sp, #-36]!	; 0xffffffdc
   43268:	strd	r6, [sp, #8]
   4326c:	strd	r8, [sp, #16]
   43270:	strd	sl, [sp, #24]
   43274:	str	lr, [sp, #32]
   43278:	sub	sp, sp, #44	; 0x2c
   4327c:	mov	r3, #1
   43280:	str	r3, [sp, #36]	; 0x24
   43284:	subs	r4, r1, #0
   43288:	beq	432b4 <Mat_VarRead5+0x50>
   4328c:	ldr	r3, [r4, #4]
   43290:	cmp	r3, #0
   43294:	beq	432b4 <Mat_VarRead5+0x50>
   43298:	ldr	r3, [r4, #52]	; 0x34
   4329c:	ldr	r2, [r3, #16]
   432a0:	cmp	r2, #0
   432a4:	beq	432d0 <Mat_VarRead5+0x6c>
   432a8:	str	r2, [r4, #40]	; 0x28
   432ac:	mov	r2, #0
   432b0:	str	r2, [r3, #16]
   432b4:	add	sp, sp, #44	; 0x2c
   432b8:	ldrd	r4, [sp]
   432bc:	ldrd	r6, [sp, #8]
   432c0:	ldrd	r8, [sp, #16]
   432c4:	ldrd	sl, [sp, #24]
   432c8:	add	sp, sp, #32
   432cc:	pop	{pc}		; (ldr pc, [sp], #4)
   432d0:	mov	r5, r0
   432d4:	ldr	r0, [r0]
   432d8:	bl	14b4 <ftell@plt>
   432dc:	mov	r6, r0
   432e0:	cmn	r0, #1
   432e4:	beq	43354 <Mat_VarRead5+0xf0>
   432e8:	add	r1, sp, #36	; 0x24
   432ec:	mov	r0, r4
   432f0:	bl	4a3c8 <SafeMulDims>
   432f4:	subs	r7, r0, #0
   432f8:	bne	43364 <Mat_VarRead5+0x100>
   432fc:	ldr	sl, [r5, #20]
   43300:	ldr	r1, [r4, #16]
   43304:	cmp	r1, #16
   43308:	addls	pc, pc, r1, lsl #2
   4330c:	b	44d60 <Mat_VarRead5+0x1afc>
   43310:	b	43374 <Mat_VarRead5+0x110>
   43314:	b	43928 <Mat_VarRead5+0x6c4>
   43318:	b	438a4 <Mat_VarRead5+0x640>
   4331c:	b	44d60 <Mat_VarRead5+0x1afc>
   43320:	b	43588 <Mat_VarRead5+0x324>
   43324:	b	43990 <Mat_VarRead5+0x72c>
   43328:	b	433a8 <Mat_VarRead5+0x144>
   4332c:	b	43424 <Mat_VarRead5+0x1c0>
   43330:	b	4353c <Mat_VarRead5+0x2d8>
   43334:	b	43560 <Mat_VarRead5+0x2fc>
   43338:	b	434ec <Mat_VarRead5+0x288>
   4333c:	b	43514 <Mat_VarRead5+0x2b0>
   43340:	b	4349c <Mat_VarRead5+0x238>
   43344:	b	434c4 <Mat_VarRead5+0x260>
   43348:	b	4344c <Mat_VarRead5+0x1e8>
   4334c:	b	43474 <Mat_VarRead5+0x210>
   43350:	b	44d00 <Mat_VarRead5+0x1a9c>
   43354:	ldr	r0, [pc, #4080]	; 4434c <Mat_VarRead5+0x10e8>
   43358:	add	r0, pc, r0
   4335c:	bl	161c <Mat_Critical@plt>
   43360:	b	432b4 <Mat_VarRead5+0x50>
   43364:	ldr	r0, [pc, #4068]	; 44350 <Mat_VarRead5+0x10ec>
   43368:	add	r0, pc, r0
   4336c:	bl	161c <Mat_Critical@plt>
   43370:	b	432b4 <Mat_VarRead5+0x50>
   43374:	mov	r7, #0
   43378:	str	r7, [r4]
   4337c:	mov	r0, #8
   43380:	str	r0, [r4, #12]
   43384:	mov	r3, #9
   43388:	str	r3, [r4, #8]
   4338c:	mov	r3, #2
   43390:	str	r3, [r4, #4]
   43394:	bl	1544 <malloc@plt>
   43398:	str	r0, [r4, #32]
   4339c:	str	r7, [r0]
   433a0:	str	r7, [r0, #4]
   433a4:	b	43678 <Mat_VarRead5+0x414>
   433a8:	ldr	r3, [r4, #52]	; 0x34
   433ac:	mov	r2, #0
   433b0:	ldr	r1, [r3]
   433b4:	ldr	r0, [r5]
   433b8:	bl	1694 <fseek@plt>
   433bc:	mov	r3, #8
   433c0:	str	r3, [r4, #12]
   433c4:	mov	r3, #9
   433c8:	str	r3, [r4, #8]
   433cc:	ldr	r3, [r4, #16]
   433d0:	sub	r3, r3, #6
   433d4:	cmp	r3, #9
   433d8:	bhi	43678 <Mat_VarRead5+0x414>
   433dc:	ldr	r3, [r4, #20]
   433e0:	cmp	r3, #0
   433e4:	bne	4362c <Mat_VarRead5+0x3c8>
   433e8:	ldr	r2, [r4, #12]
   433ec:	ldr	r1, [sp, #36]	; 0x24
   433f0:	mov	r0, r4
   433f4:	bl	4a440 <SafeMul>
   433f8:	ldr	r0, [r4]
   433fc:	bl	1544 <malloc@plt>
   43400:	str	r0, [r4, #40]	; 0x28
   43404:	cmp	r0, #0
   43408:	beq	44d80 <Mat_VarRead5+0x1b1c>
   4340c:	ldr	r3, [sp, #36]	; 0x24
   43410:	mov	r2, r0
   43414:	mov	r1, r4
   43418:	mov	r0, r5
   4341c:	bl	21150 <Mat_VarReadNumeric5>
   43420:	b	43678 <Mat_VarRead5+0x414>
   43424:	ldr	r3, [r4, #52]	; 0x34
   43428:	mov	r2, #0
   4342c:	ldr	r1, [r3]
   43430:	ldr	r0, [r5]
   43434:	bl	1694 <fseek@plt>
   43438:	mov	r3, #4
   4343c:	str	r3, [r4, #12]
   43440:	mov	r3, #7
   43444:	str	r3, [r4, #8]
   43448:	b	433cc <Mat_VarRead5+0x168>
   4344c:	ldr	r3, [r4, #52]	; 0x34
   43450:	mov	r2, #0
   43454:	ldr	r1, [r3]
   43458:	ldr	r0, [r5]
   4345c:	bl	1694 <fseek@plt>
   43460:	mov	r3, #8
   43464:	str	r3, [r4, #12]
   43468:	mov	r3, #12
   4346c:	str	r3, [r4, #8]
   43470:	b	433cc <Mat_VarRead5+0x168>
   43474:	ldr	r3, [r4, #52]	; 0x34
   43478:	mov	r2, #0
   4347c:	ldr	r1, [r3]
   43480:	ldr	r0, [r5]
   43484:	bl	1694 <fseek@plt>
   43488:	mov	r3, #8
   4348c:	str	r3, [r4, #12]
   43490:	mov	r3, #13
   43494:	str	r3, [r4, #8]
   43498:	b	433cc <Mat_VarRead5+0x168>
   4349c:	ldr	r3, [r4, #52]	; 0x34
   434a0:	mov	r2, #0
   434a4:	ldr	r1, [r3]
   434a8:	ldr	r0, [r5]
   434ac:	bl	1694 <fseek@plt>
   434b0:	mov	r3, #4
   434b4:	str	r3, [r4, #12]
   434b8:	mov	r3, #5
   434bc:	str	r3, [r4, #8]
   434c0:	b	433cc <Mat_VarRead5+0x168>
   434c4:	ldr	r3, [r4, #52]	; 0x34
   434c8:	mov	r2, #0
   434cc:	ldr	r1, [r3]
   434d0:	ldr	r0, [r5]
   434d4:	bl	1694 <fseek@plt>
   434d8:	mov	r3, #4
   434dc:	str	r3, [r4, #12]
   434e0:	mov	r3, #6
   434e4:	str	r3, [r4, #8]
   434e8:	b	433cc <Mat_VarRead5+0x168>
   434ec:	ldr	r3, [r4, #52]	; 0x34
   434f0:	mov	r2, #0
   434f4:	ldr	r1, [r3]
   434f8:	ldr	r0, [r5]
   434fc:	bl	1694 <fseek@plt>
   43500:	mov	r3, #2
   43504:	str	r3, [r4, #12]
   43508:	mov	r3, #3
   4350c:	str	r3, [r4, #8]
   43510:	b	433cc <Mat_VarRead5+0x168>
   43514:	ldr	r3, [r4, #52]	; 0x34
   43518:	mov	r2, #0
   4351c:	ldr	r1, [r3]
   43520:	ldr	r0, [r5]
   43524:	bl	1694 <fseek@plt>
   43528:	mov	r3, #2
   4352c:	str	r3, [r4, #12]
   43530:	mov	r3, #4
   43534:	str	r3, [r4, #8]
   43538:	b	433cc <Mat_VarRead5+0x168>
   4353c:	ldr	r3, [r4, #52]	; 0x34
   43540:	mov	r2, #0
   43544:	ldr	r1, [r3]
   43548:	ldr	r0, [r5]
   4354c:	bl	1694 <fseek@plt>
   43550:	mov	r3, #1
   43554:	str	r3, [r4, #12]
   43558:	str	r3, [r4, #8]
   4355c:	b	433cc <Mat_VarRead5+0x168>
   43560:	ldr	r3, [r4, #52]	; 0x34
   43564:	mov	r2, #0
   43568:	ldr	r1, [r3]
   4356c:	ldr	r0, [r5]
   43570:	bl	1694 <fseek@plt>
   43574:	mov	r3, #1
   43578:	str	r3, [r4, #12]
   4357c:	mov	r3, #2
   43580:	str	r3, [r4, #8]
   43584:	b	433cc <Mat_VarRead5+0x168>
   43588:	ldr	r3, [r4, #52]	; 0x34
   4358c:	mov	r2, #0
   43590:	ldr	r1, [r3]
   43594:	ldr	r0, [r5]
   43598:	bl	1694 <fseek@plt>
   4359c:	ldr	r3, [r4, #48]	; 0x30
   435a0:	cmp	r3, #1
   435a4:	beq	4368c <Mat_VarRead5+0x428>
   435a8:	ldr	r3, [r5]
   435ac:	mov	r2, #1
   435b0:	mov	r1, #4
   435b4:	add	r0, sp, #28
   435b8:	bl	1520 <fread@plt>
   435bc:	cmp	sl, #0
   435c0:	bne	43738 <Mat_VarRead5+0x4d4>
   435c4:	ldr	r3, [sp, #28]
   435c8:	uxtb	r8, r3
   435cc:	cmp	r8, #25
   435d0:	movcs	r8, #0
   435d4:	lsr	r3, r3, #16
   435d8:	lsl	r3, r3, #16
   435dc:	cmp	r3, #0
   435e0:	movne	sl, #1
   435e4:	beq	43744 <Mat_VarRead5+0x4e0>
   435e8:	mov	r0, #2
   435ec:	str	r0, [r4, #8]
   435f0:	bl	1598 <Mat_SizeOf@plt>
   435f4:	mov	r2, r0
   435f8:	str	r0, [r4, #12]
   435fc:	ldr	r1, [sp, #36]	; 0x24
   43600:	mov	r0, r4
   43604:	bl	4a440 <SafeMul>
   43608:	cmp	r0, #0
   4360c:	bne	43770 <Mat_VarRead5+0x50c>
   43610:	ldr	r3, [r4, #20]
   43614:	cmp	r3, #0
   43618:	beq	43780 <Mat_VarRead5+0x51c>
   4361c:	ldr	r3, [r4, #16]
   43620:	sub	r3, r3, #6
   43624:	cmp	r3, #9
   43628:	bhi	43678 <Mat_VarRead5+0x414>
   4362c:	ldr	r2, [r4, #12]
   43630:	ldr	r1, [sp, #36]	; 0x24
   43634:	mov	r0, r4
   43638:	bl	4a440 <SafeMul>
   4363c:	ldr	r0, [r4]
   43640:	bl	4a288 <ComplexMalloc>
   43644:	subs	r7, r0, #0
   43648:	beq	44d70 <Mat_VarRead5+0x1b0c>
   4364c:	ldr	r3, [sp, #36]	; 0x24
   43650:	ldr	r2, [r7]
   43654:	mov	r1, r4
   43658:	mov	r0, r5
   4365c:	bl	21150 <Mat_VarReadNumeric5>
   43660:	ldr	r3, [sp, #36]	; 0x24
   43664:	ldr	r2, [r7, #4]
   43668:	mov	r1, r4
   4366c:	mov	r0, r5
   43670:	bl	21150 <Mat_VarReadNumeric5>
   43674:	str	r7, [r4, #40]	; 0x28
   43678:	mov	r2, #0
   4367c:	mov	r1, r6
   43680:	ldr	r0, [r5]
   43684:	bl	1694 <fseek@plt>
   43688:	b	432b4 <Mat_VarRead5+0x50>
   4368c:	ldr	r3, [r4, #52]	; 0x34
   43690:	ldr	r3, [r3, #12]
   43694:	mov	r2, #0
   43698:	str	r2, [r3, #4]
   4369c:	ldr	r3, [r4, #52]	; 0x34
   436a0:	add	r2, sp, #28
   436a4:	ldr	r1, [r3, #12]
   436a8:	mov	r0, r5
   436ac:	bl	31c4 <InflateDataType>
   436b0:	cmp	sl, #0
   436b4:	bne	436f8 <Mat_VarRead5+0x494>
   436b8:	ldr	r3, [sp, #28]
   436bc:	uxtb	r8, r3
   436c0:	cmp	r8, #25
   436c4:	movcs	r8, #0
   436c8:	lsr	r2, r3, #16
   436cc:	lsl	r2, r2, #16
   436d0:	cmp	r2, #0
   436d4:	beq	43704 <Mat_VarRead5+0x4a0>
   436d8:	lsr	r9, r3, #16
   436dc:	mov	sl, #1
   436e0:	str	r8, [r4, #8]
   436e4:	mov	r0, r8
   436e8:	bl	1598 <Mat_SizeOf@plt>
   436ec:	str	r0, [r4, #12]
   436f0:	str	r9, [r4]
   436f4:	b	43610 <Mat_VarRead5+0x3ac>
   436f8:	add	r0, sp, #28
   436fc:	bl	18d4 <Mat_uint32Swap>
   43700:	b	436b8 <Mat_VarRead5+0x454>
   43704:	ldr	r3, [r4, #52]	; 0x34
   43708:	add	r2, sp, #32
   4370c:	ldr	r1, [r3, #12]
   43710:	mov	r0, r5
   43714:	bl	31c4 <InflateDataType>
   43718:	cmp	sl, #0
   4371c:	bne	4372c <Mat_VarRead5+0x4c8>
   43720:	ldr	r9, [sp, #32]
   43724:	mov	sl, r7
   43728:	b	436e0 <Mat_VarRead5+0x47c>
   4372c:	add	r0, sp, #32
   43730:	bl	18d4 <Mat_uint32Swap>
   43734:	b	43720 <Mat_VarRead5+0x4bc>
   43738:	add	r0, sp, #28
   4373c:	bl	18d4 <Mat_uint32Swap>
   43740:	b	435c4 <Mat_VarRead5+0x360>
   43744:	ldr	r3, [r5]
   43748:	mov	r2, #1
   4374c:	mov	r1, #4
   43750:	add	r0, sp, #32
   43754:	bl	1520 <fread@plt>
   43758:	cmp	sl, #0
   4375c:	beq	435e8 <Mat_VarRead5+0x384>
   43760:	add	r0, sp, #32
   43764:	bl	18d4 <Mat_uint32Swap>
   43768:	mov	sl, r7
   4376c:	b	435e8 <Mat_VarRead5+0x384>
   43770:	ldr	r0, [pc, #3036]	; 44354 <Mat_VarRead5+0x10f0>
   43774:	add	r0, pc, r0
   43778:	bl	161c <Mat_Critical@plt>
   4377c:	b	433cc <Mat_VarRead5+0x168>
   43780:	ldr	r7, [r4]
   43784:	mov	r1, #1
   43788:	add	r0, r7, r1
   4378c:	bl	140c <calloc@plt>
   43790:	str	r0, [r4, #40]	; 0x28
   43794:	cmp	r0, #0
   43798:	beq	437b8 <Mat_VarRead5+0x554>
   4379c:	cmp	r7, #0
   437a0:	bne	437c8 <Mat_VarRead5+0x564>
   437a4:	ldr	r3, [r4, #16]
   437a8:	sub	r3, r3, #6
   437ac:	cmp	r3, #9
   437b0:	bls	433e8 <Mat_VarRead5+0x184>
   437b4:	b	43678 <Mat_VarRead5+0x414>
   437b8:	ldr	r0, [pc, #2968]	; 44358 <Mat_VarRead5+0x10f4>
   437bc:	add	r0, pc, r0
   437c0:	bl	161c <Mat_Critical@plt>
   437c4:	b	433cc <Mat_VarRead5+0x168>
   437c8:	ldr	r2, [r4, #12]
   437cc:	ldr	r1, [sp, #36]	; 0x24
   437d0:	add	r0, sp, #24
   437d4:	bl	4a440 <SafeMul>
   437d8:	cmp	r0, #0
   437dc:	bne	433cc <Mat_VarRead5+0x168>
   437e0:	ldr	r2, [r4]
   437e4:	ldr	r3, [sp, #24]
   437e8:	cmp	r2, r3
   437ec:	bcc	433cc <Mat_VarRead5+0x168>
   437f0:	ldr	r3, [r4, #48]	; 0x30
   437f4:	cmp	r3, #0
   437f8:	beq	4385c <Mat_VarRead5+0x5f8>
   437fc:	cmp	r3, #1
   43800:	bne	433cc <Mat_VarRead5+0x168>
   43804:	ldr	r1, [r4, #52]	; 0x34
   43808:	ldr	r3, [sp, #36]	; 0x24
   4380c:	str	r3, [sp]
   43810:	mov	r3, r8
   43814:	ldr	r2, [r4, #40]	; 0x28
   43818:	ldr	r1, [r1, #12]
   4381c:	mov	r0, r5
   43820:	bl	16484 <ReadCompressedCharData>
   43824:	cmp	sl, #0
   43828:	addne	r0, r0, #4
   4382c:	tst	r0, #7
   43830:	beq	433cc <Mat_VarRead5+0x168>
   43834:	rsbs	r3, r0, #0
   43838:	and	r2, r0, #7
   4383c:	and	r3, r3, #7
   43840:	rsbpl	r2, r3, #0
   43844:	ldr	r3, [r4, #52]	; 0x34
   43848:	rsb	r2, r2, #8
   4384c:	ldr	r1, [r3, #12]
   43850:	mov	r0, r5
   43854:	bl	203c <InflateSkip>
   43858:	b	433cc <Mat_VarRead5+0x168>
   4385c:	ldr	r3, [sp, #36]	; 0x24
   43860:	mov	r2, r8
   43864:	ldr	r1, [r4, #40]	; 0x28
   43868:	mov	r0, r5
   4386c:	bl	165c0 <ReadCharData>
   43870:	cmp	sl, #0
   43874:	addne	r0, r0, #4
   43878:	tst	r0, #7
   4387c:	beq	433cc <Mat_VarRead5+0x168>
   43880:	rsbs	r3, r0, #0
   43884:	and	r1, r0, #7
   43888:	and	r3, r3, #7
   4388c:	rsbpl	r1, r3, #0
   43890:	mov	r2, #1
   43894:	rsb	r1, r1, #8
   43898:	ldr	r0, [r5]
   4389c:	bl	1694 <fseek@plt>
   438a0:	b	433cc <Mat_VarRead5+0x168>
   438a4:	mov	r3, #22
   438a8:	str	r3, [r4, #8]
   438ac:	ldr	r3, [r4]
   438b0:	cmp	r3, #0
   438b4:	beq	433cc <Mat_VarRead5+0x168>
   438b8:	ldr	r3, [r4, #12]
   438bc:	cmp	r3, #0
   438c0:	beq	433cc <Mat_VarRead5+0x168>
   438c4:	ldr	r3, [r4, #40]	; 0x28
   438c8:	cmp	r3, #0
   438cc:	beq	433cc <Mat_VarRead5+0x168>
   438d0:	ldr	r3, [r4, #52]	; 0x34
   438d4:	ldr	r2, [r3, #4]
   438d8:	ldr	r1, [sp, #36]	; 0x24
   438dc:	add	r0, sp, #24
   438e0:	bl	4a440 <SafeMul>
   438e4:	ldr	r3, [sp, #24]
   438e8:	cmp	r3, #0
   438ec:	beq	433cc <Mat_VarRead5+0x168>
   438f0:	ldr	r8, [r4, #40]	; 0x28
   438f4:	sub	r8, r8, #4
   438f8:	mov	r7, #0
   438fc:	b	43910 <Mat_VarRead5+0x6ac>
   43900:	add	r7, r7, #1
   43904:	ldr	r3, [sp, #24]
   43908:	cmp	r3, r7
   4390c:	bls	433cc <Mat_VarRead5+0x168>
   43910:	ldr	r1, [r8, #4]!
   43914:	cmp	r1, #0
   43918:	beq	43900 <Mat_VarRead5+0x69c>
   4391c:	mov	r0, r5
   43920:	bl	43264 <Mat_VarRead5>
   43924:	b	43900 <Mat_VarRead5+0x69c>
   43928:	ldr	r8, [r4, #40]	; 0x28
   4392c:	cmp	r8, #0
   43930:	beq	43954 <Mat_VarRead5+0x6f0>
   43934:	ldr	r3, [sp, #36]	; 0x24
   43938:	cmp	r3, #0
   4393c:	subne	r8, r8, #4
   43940:	movne	r7, #0
   43944:	bne	43978 <Mat_VarRead5+0x714>
   43948:	mov	r3, #21
   4394c:	str	r3, [r4, #8]
   43950:	b	433cc <Mat_VarRead5+0x168>
   43954:	ldr	r1, [r4, #36]	; 0x24
   43958:	ldr	r0, [pc, #2556]	; 4435c <Mat_VarRead5+0x10f8>
   4395c:	add	r0, pc, r0
   43960:	bl	161c <Mat_Critical@plt>
   43964:	b	433cc <Mat_VarRead5+0x168>
   43968:	add	r7, r7, #1
   4396c:	ldr	r3, [sp, #36]	; 0x24
   43970:	cmp	r3, r7
   43974:	bls	43948 <Mat_VarRead5+0x6e4>
   43978:	ldr	r1, [r8, #4]!
   4397c:	cmp	r1, #0
   43980:	beq	43968 <Mat_VarRead5+0x704>
   43984:	mov	r0, r5
   43988:	bl	43264 <Mat_VarRead5>
   4398c:	b	43968 <Mat_VarRead5+0x704>
   43990:	mov	r3, #0
   43994:	str	r3, [sp, #24]
   43998:	mov	r0, #28
   4399c:	str	r0, [r4, #12]
   439a0:	bl	1544 <malloc@plt>
   439a4:	mov	r9, r0
   439a8:	str	r0, [r4, #40]	; 0x28
   439ac:	cmp	r0, #0
   439b0:	beq	43c20 <Mat_VarRead5+0x9bc>
   439b4:	ldr	r3, [r4]
   439b8:	str	r3, [r0]
   439bc:	ldr	r3, [r4, #52]	; 0x34
   439c0:	mov	r2, #0
   439c4:	ldr	r1, [r3]
   439c8:	ldr	r0, [r5]
   439cc:	bl	1694 <fseek@plt>
   439d0:	ldr	r3, [r4, #48]	; 0x30
   439d4:	cmp	r3, #1
   439d8:	beq	43c30 <Mat_VarRead5+0x9cc>
   439dc:	ldr	r3, [r5]
   439e0:	mov	r2, #1
   439e4:	mov	r1, #4
   439e8:	add	r0, sp, #28
   439ec:	bl	1520 <fread@plt>
   439f0:	ldr	r3, [r5, #20]
   439f4:	cmp	r3, #0
   439f8:	bne	43cc8 <Mat_VarRead5+0xa64>
   439fc:	ldr	r3, [sp, #28]
   43a00:	uxtb	fp, r3
   43a04:	cmp	fp, #25
   43a08:	movcs	fp, #0
   43a0c:	lsr	r2, r3, #16
   43a10:	lsl	r2, r2, #16
   43a14:	cmp	r2, #0
   43a18:	beq	43cd4 <Mat_VarRead5+0xa70>
   43a1c:	lsr	r3, r3, #16
   43a20:	str	r3, [sp, #24]
   43a24:	mov	r3, #1
   43a28:	str	r3, [sp, #12]
   43a2c:	ldr	r8, [sp, #24]
   43a30:	add	r3, r8, #3
   43a34:	cmp	r8, #0
   43a38:	movlt	r8, r3
   43a3c:	asr	r8, r8, #2
   43a40:	str	r8, [r9, #8]
   43a44:	lsl	r0, r8, #2
   43a48:	bl	1544 <malloc@plt>
   43a4c:	str	r0, [r9, #4]
   43a50:	cmp	r0, #0
   43a54:	beq	43e28 <Mat_VarRead5+0xbc4>
   43a58:	ldr	r3, [r4, #48]	; 0x30
   43a5c:	cmp	r3, #0
   43a60:	beq	43d08 <Mat_VarRead5+0xaa4>
   43a64:	cmp	r3, #1
   43a68:	movne	r8, r7
   43a6c:	beq	43dcc <Mat_VarRead5+0xb68>
   43a70:	ldr	r3, [r5]
   43a74:	mov	r2, #1
   43a78:	mov	r1, #4
   43a7c:	add	r0, sp, #28
   43a80:	bl	1520 <fread@plt>
   43a84:	ldr	r3, [r5, #20]
   43a88:	cmp	r3, #0
   43a8c:	bne	43e6c <Mat_VarRead5+0xc08>
   43a90:	ldr	r3, [sp, #28]
   43a94:	uxtb	r2, r3
   43a98:	cmp	r2, #25
   43a9c:	movcs	r2, #0
   43aa0:	str	r2, [sp, #16]
   43aa4:	lsr	r2, r3, #16
   43aa8:	lsl	r2, r2, #16
   43aac:	cmp	r2, #0
   43ab0:	beq	43e78 <Mat_VarRead5+0xc14>
   43ab4:	lsr	r3, r3, #16
   43ab8:	str	r3, [sp, #24]
   43abc:	mov	r3, #1
   43ac0:	str	r3, [sp, #12]
   43ac4:	ldr	fp, [sp, #24]
   43ac8:	add	r3, fp, #3
   43acc:	cmp	fp, #0
   43ad0:	movlt	fp, r3
   43ad4:	asr	fp, fp, #2
   43ad8:	str	fp, [r9, #16]
   43adc:	lsl	r0, fp, #2
   43ae0:	bl	1544 <malloc@plt>
   43ae4:	str	r0, [r9, #12]
   43ae8:	cmp	r0, #0
   43aec:	beq	43fcc <Mat_VarRead5+0xd68>
   43af0:	ldr	r3, [r4, #48]	; 0x30
   43af4:	cmp	r3, #0
   43af8:	beq	43eac <Mat_VarRead5+0xc48>
   43afc:	cmp	r3, #1
   43b00:	beq	43f70 <Mat_VarRead5+0xd0c>
   43b04:	ldr	r3, [r5]
   43b08:	mov	r2, #1
   43b0c:	mov	r1, #4
   43b10:	add	r0, sp, #28
   43b14:	bl	1520 <fread@plt>
   43b18:	ldr	r3, [r5, #20]
   43b1c:	cmp	r3, #0
   43b20:	bne	44010 <Mat_VarRead5+0xdac>
   43b24:	ldr	r3, [sp, #28]
   43b28:	uxtb	r2, r3
   43b2c:	cmp	r2, #25
   43b30:	movcs	r2, #0
   43b34:	str	r2, [sp, #12]
   43b38:	lsr	r2, r3, #16
   43b3c:	lsl	r2, r2, #16
   43b40:	cmp	r2, #0
   43b44:	beq	4401c <Mat_VarRead5+0xdb8>
   43b48:	lsr	r3, r3, #16
   43b4c:	str	r3, [sp, #24]
   43b50:	mov	r3, #1
   43b54:	str	r3, [sp, #20]
   43b58:	ldr	r2, [r4, #28]
   43b5c:	ldr	r1, [sp, #12]
   43b60:	cmp	r1, #9
   43b64:	movne	r3, #0
   43b68:	moveq	r3, #1
   43b6c:	cmp	r2, #0
   43b70:	moveq	r3, #0
   43b74:	cmp	r3, #0
   43b78:	moveq	r3, r1
   43b7c:	movne	r3, #2
   43b80:	str	r3, [sp, #12]
   43b84:	str	r3, [r4, #8]
   43b88:	mov	r0, r3
   43b8c:	bl	1598 <Mat_SizeOf@plt>
   43b90:	cmp	r0, #0
   43b94:	beq	433cc <Mat_VarRead5+0x168>
   43b98:	ldr	fp, [sp, #24]
   43b9c:	udiv	fp, fp, r0
   43ba0:	str	fp, [r9, #20]
   43ba4:	ldr	r3, [r4, #20]
   43ba8:	cmp	r3, #0
   43bac:	beq	44940 <Mat_VarRead5+0x16dc>
   43bb0:	ldr	r0, [r4, #8]
   43bb4:	bl	1598 <Mat_SizeOf@plt>
   43bb8:	mul	r0, r0, fp
   43bbc:	bl	4a288 <ComplexMalloc>
   43bc0:	subs	fp, r0, #0
   43bc4:	beq	44050 <Mat_VarRead5+0xdec>
   43bc8:	ldr	r3, [r4, #48]	; 0x30
   43bcc:	str	r3, [sp, #16]
   43bd0:	cmp	r3, #0
   43bd4:	bne	4444c <Mat_VarRead5+0x11e8>
   43bd8:	ldr	r3, [r4, #8]
   43bdc:	sub	r3, r3, #1
   43be0:	cmp	r3, #12
   43be4:	addls	pc, pc, r3, lsl #2
   43be8:	b	44078 <Mat_VarRead5+0xe14>
   43bec:	b	441dc <Mat_VarRead5+0xf78>
   43bf0:	b	441f8 <Mat_VarRead5+0xf94>
   43bf4:	b	441a4 <Mat_VarRead5+0xf40>
   43bf8:	b	441c0 <Mat_VarRead5+0xf5c>
   43bfc:	b	4416c <Mat_VarRead5+0xf08>
   43c00:	b	44188 <Mat_VarRead5+0xf24>
   43c04:	b	44118 <Mat_VarRead5+0xeb4>
   43c08:	b	44078 <Mat_VarRead5+0xe14>
   43c0c:	b	44060 <Mat_VarRead5+0xdfc>
   43c10:	b	44078 <Mat_VarRead5+0xe14>
   43c14:	b	44078 <Mat_VarRead5+0xe14>
   43c18:	b	44134 <Mat_VarRead5+0xed0>
   43c1c:	b	44150 <Mat_VarRead5+0xeec>
   43c20:	ldr	r0, [pc, #1848]	; 44360 <Mat_VarRead5+0x10fc>
   43c24:	add	r0, pc, r0
   43c28:	bl	161c <Mat_Critical@plt>
   43c2c:	b	433cc <Mat_VarRead5+0x168>
   43c30:	ldr	r3, [r4, #52]	; 0x34
   43c34:	ldr	r3, [r3, #12]
   43c38:	mov	r2, #0
   43c3c:	str	r2, [r3, #4]
   43c40:	ldr	r3, [r4, #52]	; 0x34
   43c44:	add	r2, sp, #28
   43c48:	ldr	r1, [r3, #12]
   43c4c:	mov	r0, r5
   43c50:	bl	31c4 <InflateDataType>
   43c54:	ldr	r3, [r5, #20]
   43c58:	cmp	r3, #0
   43c5c:	bne	43c94 <Mat_VarRead5+0xa30>
   43c60:	ldr	r3, [sp, #28]
   43c64:	uxtb	fp, r3
   43c68:	cmp	fp, #25
   43c6c:	movcs	fp, #0
   43c70:	lsr	r2, r3, #16
   43c74:	lsl	r2, r2, #16
   43c78:	cmp	r2, #0
   43c7c:	beq	43ca0 <Mat_VarRead5+0xa3c>
   43c80:	lsr	r3, r3, #16
   43c84:	str	r3, [sp, #24]
   43c88:	mov	r3, #1
   43c8c:	str	r3, [sp, #12]
   43c90:	b	43a2c <Mat_VarRead5+0x7c8>
   43c94:	add	r0, sp, #28
   43c98:	bl	18d4 <Mat_uint32Swap>
   43c9c:	b	43c60 <Mat_VarRead5+0x9fc>
   43ca0:	ldr	r1, [r4, #52]	; 0x34
   43ca4:	mov	r3, #1
   43ca8:	str	r3, [sp]
   43cac:	mov	r3, #5
   43cb0:	add	r2, sp, #24
   43cb4:	ldr	r1, [r1, #12]
   43cb8:	mov	r0, r5
   43cbc:	bl	d19c <ReadCompressedInt32Data>
   43cc0:	str	r7, [sp, #12]
   43cc4:	b	43a2c <Mat_VarRead5+0x7c8>
   43cc8:	add	r0, sp, #28
   43ccc:	bl	18d4 <Mat_uint32Swap>
   43cd0:	b	439fc <Mat_VarRead5+0x798>
   43cd4:	ldr	r3, [r5]
   43cd8:	mov	r2, #1
   43cdc:	mov	r1, #4
   43ce0:	add	r0, sp, #24
   43ce4:	bl	1520 <fread@plt>
   43ce8:	ldr	r3, [r5, #20]
   43cec:	str	r3, [sp, #12]
   43cf0:	cmp	r3, #0
   43cf4:	beq	43a2c <Mat_VarRead5+0x7c8>
   43cf8:	add	r0, sp, #24
   43cfc:	bl	18a4 <Mat_int32Swap>
   43d00:	str	r7, [sp, #12]
   43d04:	b	43a2c <Mat_VarRead5+0x7c8>
   43d08:	mov	r3, r8
   43d0c:	mov	r2, fp
   43d10:	mov	r1, r0
   43d14:	mov	r0, r5
   43d18:	bl	baec <ReadInt32Data>
   43d1c:	mov	r8, r0
   43d20:	ldr	r3, [sp, #12]
   43d24:	cmp	r3, #0
   43d28:	addne	r8, r0, #4
   43d2c:	tst	r8, #7
   43d30:	bne	43da8 <Mat_VarRead5+0xb44>
   43d34:	ldr	r3, [r4, #48]	; 0x30
   43d38:	cmp	r3, #1
   43d3c:	bne	43a70 <Mat_VarRead5+0x80c>
   43d40:	ldr	r3, [r4, #52]	; 0x34
   43d44:	ldr	r3, [r3, #12]
   43d48:	mov	r2, #0
   43d4c:	str	r2, [r3, #4]
   43d50:	ldr	r3, [r4, #52]	; 0x34
   43d54:	add	r2, sp, #28
   43d58:	ldr	r1, [r3, #12]
   43d5c:	mov	r0, r5
   43d60:	bl	31c4 <InflateDataType>
   43d64:	ldr	r3, [r5, #20]
   43d68:	cmp	r3, #0
   43d6c:	bne	43e38 <Mat_VarRead5+0xbd4>
   43d70:	ldr	r3, [sp, #28]
   43d74:	uxtb	r2, r3
   43d78:	cmp	r2, #25
   43d7c:	movcs	r2, #0
   43d80:	str	r2, [sp, #16]
   43d84:	lsr	r2, r3, #16
   43d88:	lsl	r2, r2, #16
   43d8c:	cmp	r2, #0
   43d90:	beq	43e44 <Mat_VarRead5+0xbe0>
   43d94:	lsr	r3, r3, #16
   43d98:	str	r3, [sp, #24]
   43d9c:	mov	r3, #1
   43da0:	str	r3, [sp, #12]
   43da4:	b	43ac4 <Mat_VarRead5+0x860>
   43da8:	rsbs	r3, r8, #0
   43dac:	and	r1, r8, #7
   43db0:	and	r3, r3, #7
   43db4:	rsbpl	r1, r3, #0
   43db8:	mov	r2, #1
   43dbc:	rsb	r1, r1, #8
   43dc0:	ldr	r0, [r5]
   43dc4:	bl	1694 <fseek@plt>
   43dc8:	b	43d34 <Mat_VarRead5+0xad0>
   43dcc:	ldr	r1, [r4, #52]	; 0x34
   43dd0:	str	r8, [sp]
   43dd4:	mov	r3, fp
   43dd8:	mov	r2, r0
   43ddc:	ldr	r1, [r1, #12]
   43de0:	mov	r0, r5
   43de4:	bl	d19c <ReadCompressedInt32Data>
   43de8:	mov	r8, r0
   43dec:	ldr	r3, [sp, #12]
   43df0:	cmp	r3, #0
   43df4:	addne	r8, r0, #4
   43df8:	tst	r8, #7
   43dfc:	beq	43d34 <Mat_VarRead5+0xad0>
   43e00:	rsbs	r3, r8, #0
   43e04:	and	r2, r8, #7
   43e08:	and	r3, r3, #7
   43e0c:	rsbpl	r2, r3, #0
   43e10:	ldr	r3, [r4, #52]	; 0x34
   43e14:	rsb	r2, r2, #8
   43e18:	ldr	r1, [r3, #12]
   43e1c:	mov	r0, r5
   43e20:	bl	203c <InflateSkip>
   43e24:	b	43d34 <Mat_VarRead5+0xad0>
   43e28:	ldr	r0, [pc, #1332]	; 44364 <Mat_VarRead5+0x1100>
   43e2c:	add	r0, pc, r0
   43e30:	bl	161c <Mat_Critical@plt>
   43e34:	b	433cc <Mat_VarRead5+0x168>
   43e38:	add	r0, sp, #28
   43e3c:	bl	18d4 <Mat_uint32Swap>
   43e40:	b	43d70 <Mat_VarRead5+0xb0c>
   43e44:	ldr	r1, [r4, #52]	; 0x34
   43e48:	mov	r3, #1
   43e4c:	str	r3, [sp]
   43e50:	mov	r3, #5
   43e54:	add	r2, sp, #24
   43e58:	ldr	r1, [r1, #12]
   43e5c:	mov	r0, r5
   43e60:	bl	d19c <ReadCompressedInt32Data>
   43e64:	str	r7, [sp, #12]
   43e68:	b	43ac4 <Mat_VarRead5+0x860>
   43e6c:	add	r0, sp, #28
   43e70:	bl	18d4 <Mat_uint32Swap>
   43e74:	b	43a90 <Mat_VarRead5+0x82c>
   43e78:	ldr	r3, [r5]
   43e7c:	mov	r2, #1
   43e80:	mov	r1, #4
   43e84:	add	r0, sp, #24
   43e88:	bl	1520 <fread@plt>
   43e8c:	ldr	r3, [r5, #20]
   43e90:	str	r3, [sp, #12]
   43e94:	cmp	r3, #0
   43e98:	beq	43ac4 <Mat_VarRead5+0x860>
   43e9c:	add	r0, sp, #24
   43ea0:	bl	18a4 <Mat_int32Swap>
   43ea4:	str	r7, [sp, #12]
   43ea8:	b	43ac4 <Mat_VarRead5+0x860>
   43eac:	mov	r3, fp
   43eb0:	ldr	r2, [sp, #16]
   43eb4:	mov	r1, r0
   43eb8:	mov	r0, r5
   43ebc:	bl	baec <ReadInt32Data>
   43ec0:	mov	r8, r0
   43ec4:	ldr	r3, [sp, #12]
   43ec8:	cmp	r3, #0
   43ecc:	addne	r8, r0, #4
   43ed0:	tst	r8, #7
   43ed4:	bne	43f4c <Mat_VarRead5+0xce8>
   43ed8:	ldr	r3, [r4, #48]	; 0x30
   43edc:	cmp	r3, #1
   43ee0:	bne	43b04 <Mat_VarRead5+0x8a0>
   43ee4:	ldr	r3, [r4, #52]	; 0x34
   43ee8:	ldr	r3, [r3, #12]
   43eec:	mov	r2, #0
   43ef0:	str	r2, [r3, #4]
   43ef4:	ldr	r3, [r4, #52]	; 0x34
   43ef8:	add	r2, sp, #28
   43efc:	ldr	r1, [r3, #12]
   43f00:	mov	r0, r5
   43f04:	bl	31c4 <InflateDataType>
   43f08:	ldr	r3, [r5, #20]
   43f0c:	cmp	r3, #0
   43f10:	bne	43fdc <Mat_VarRead5+0xd78>
   43f14:	ldr	r3, [sp, #28]
   43f18:	uxtb	r2, r3
   43f1c:	cmp	r2, #25
   43f20:	movcs	r2, #0
   43f24:	str	r2, [sp, #12]
   43f28:	lsr	r2, r3, #16
   43f2c:	lsl	r2, r2, #16
   43f30:	cmp	r2, #0
   43f34:	beq	43fe8 <Mat_VarRead5+0xd84>
   43f38:	lsr	r3, r3, #16
   43f3c:	str	r3, [sp, #24]
   43f40:	mov	r3, #1
   43f44:	str	r3, [sp, #20]
   43f48:	b	43b58 <Mat_VarRead5+0x8f4>
   43f4c:	rsbs	r3, r8, #0
   43f50:	and	r1, r8, #7
   43f54:	and	r3, r3, #7
   43f58:	rsbpl	r1, r3, #0
   43f5c:	mov	r2, #1
   43f60:	rsb	r1, r1, #8
   43f64:	ldr	r0, [r5]
   43f68:	bl	1694 <fseek@plt>
   43f6c:	b	43ed8 <Mat_VarRead5+0xc74>
   43f70:	ldr	r1, [r4, #52]	; 0x34
   43f74:	str	fp, [sp]
   43f78:	ldr	r3, [sp, #16]
   43f7c:	mov	r2, r0
   43f80:	ldr	r1, [r1, #12]
   43f84:	mov	r0, r5
   43f88:	bl	d19c <ReadCompressedInt32Data>
   43f8c:	mov	r8, r0
   43f90:	ldr	r3, [sp, #12]
   43f94:	cmp	r3, #0
   43f98:	addne	r8, r0, #4
   43f9c:	tst	r8, #7
   43fa0:	beq	43ed8 <Mat_VarRead5+0xc74>
   43fa4:	rsbs	r3, r8, #0
   43fa8:	and	r2, r8, #7
   43fac:	and	r3, r3, #7
   43fb0:	rsbpl	r2, r3, #0
   43fb4:	ldr	r3, [r4, #52]	; 0x34
   43fb8:	rsb	r2, r2, #8
   43fbc:	ldr	r1, [r3, #12]
   43fc0:	mov	r0, r5
   43fc4:	bl	203c <InflateSkip>
   43fc8:	b	43ed8 <Mat_VarRead5+0xc74>
   43fcc:	ldr	r0, [pc, #916]	; 44368 <Mat_VarRead5+0x1104>
   43fd0:	add	r0, pc, r0
   43fd4:	bl	161c <Mat_Critical@plt>
   43fd8:	b	433cc <Mat_VarRead5+0x168>
   43fdc:	add	r0, sp, #28
   43fe0:	bl	18d4 <Mat_uint32Swap>
   43fe4:	b	43f14 <Mat_VarRead5+0xcb0>
   43fe8:	ldr	r1, [r4, #52]	; 0x34
   43fec:	mov	r3, #1
   43ff0:	str	r3, [sp]
   43ff4:	mov	r3, #5
   43ff8:	add	r2, sp, #24
   43ffc:	ldr	r1, [r1, #12]
   44000:	mov	r0, r5
   44004:	bl	d19c <ReadCompressedInt32Data>
   44008:	str	r7, [sp, #20]
   4400c:	b	43b58 <Mat_VarRead5+0x8f4>
   44010:	add	r0, sp, #28
   44014:	bl	18d4 <Mat_uint32Swap>
   44018:	b	43b24 <Mat_VarRead5+0x8c0>
   4401c:	ldr	r3, [r5]
   44020:	mov	r2, #1
   44024:	mov	r1, #4
   44028:	add	r0, sp, #24
   4402c:	bl	1520 <fread@plt>
   44030:	ldr	r3, [r5, #20]
   44034:	str	r3, [sp, #20]
   44038:	cmp	r3, #0
   4403c:	beq	43b58 <Mat_VarRead5+0x8f4>
   44040:	add	r0, sp, #24
   44044:	bl	18a4 <Mat_int32Swap>
   44048:	str	r7, [sp, #20]
   4404c:	b	43b58 <Mat_VarRead5+0x8f4>
   44050:	ldr	r0, [pc, #788]	; 4436c <Mat_VarRead5+0x1108>
   44054:	add	r0, pc, r0
   44058:	bl	161c <Mat_Critical@plt>
   4405c:	b	433cc <Mat_VarRead5+0x168>
   44060:	ldr	r3, [r9, #20]
   44064:	ldr	r2, [sp, #12]
   44068:	ldr	r1, [fp]
   4406c:	mov	r0, r5
   44070:	bl	3a44 <ReadDoubleData>
   44074:	mov	r8, r0
   44078:	ldr	r3, [sp, #20]
   4407c:	cmp	r3, #0
   44080:	addne	r8, r8, #4
   44084:	tst	r8, #7
   44088:	bne	44214 <Mat_VarRead5+0xfb0>
   4408c:	ldr	r3, [r5]
   44090:	mov	r2, #1
   44094:	mov	r1, #4
   44098:	add	r0, sp, #28
   4409c:	bl	1520 <fread@plt>
   440a0:	cmp	sl, #0
   440a4:	bne	44238 <Mat_VarRead5+0xfd4>
   440a8:	ldr	r0, [sp, #28]
   440ac:	uxtb	r3, r0
   440b0:	ldr	r2, [sp, #16]
   440b4:	cmp	r3, #24
   440b8:	movls	r2, r3
   440bc:	str	r2, [sp, #16]
   440c0:	lsr	r3, r0, #16
   440c4:	lsl	r3, r3, #16
   440c8:	cmp	r3, #0
   440cc:	beq	4424c <Mat_VarRead5+0xfe8>
   440d0:	ldr	r3, [r4, #8]
   440d4:	sub	r3, r3, #1
   440d8:	cmp	r3, #12
   440dc:	addls	pc, pc, r3, lsl #2
   440e0:	b	44244 <Mat_VarRead5+0xfe0>
   440e4:	b	443f0 <Mat_VarRead5+0x118c>
   440e8:	b	4440c <Mat_VarRead5+0x11a8>
   440ec:	b	443b8 <Mat_VarRead5+0x1154>
   440f0:	b	443d4 <Mat_VarRead5+0x1170>
   440f4:	b	44380 <Mat_VarRead5+0x111c>
   440f8:	b	4439c <Mat_VarRead5+0x1138>
   440fc:	b	442f8 <Mat_VarRead5+0x1094>
   44100:	b	44244 <Mat_VarRead5+0xfe0>
   44104:	b	442c4 <Mat_VarRead5+0x1060>
   44108:	b	44244 <Mat_VarRead5+0xfe0>
   4410c:	b	44244 <Mat_VarRead5+0xfe0>
   44110:	b	44314 <Mat_VarRead5+0x10b0>
   44114:	b	44330 <Mat_VarRead5+0x10cc>
   44118:	ldr	r3, [r9, #20]
   4411c:	ldr	r2, [sp, #12]
   44120:	ldr	r1, [fp]
   44124:	mov	r0, r5
   44128:	bl	6360 <ReadSingleData>
   4412c:	mov	r8, r0
   44130:	b	44078 <Mat_VarRead5+0xe14>
   44134:	ldr	r3, [r9, #20]
   44138:	ldr	r2, [sp, #12]
   4413c:	ldr	r1, [fp]
   44140:	mov	r0, r5
   44144:	bl	80c4 <ReadInt64Data>
   44148:	mov	r8, r0
   4414c:	b	44078 <Mat_VarRead5+0xe14>
   44150:	ldr	r3, [r9, #20]
   44154:	ldr	r2, [sp, #12]
   44158:	ldr	r1, [fp]
   4415c:	mov	r0, r5
   44160:	bl	9dd8 <ReadUInt64Data>
   44164:	mov	r8, r0
   44168:	b	44078 <Mat_VarRead5+0xe14>
   4416c:	ldr	r3, [r9, #20]
   44170:	ldr	r2, [sp, #12]
   44174:	ldr	r1, [fp]
   44178:	mov	r0, r5
   4417c:	bl	baec <ReadInt32Data>
   44180:	mov	r8, r0
   44184:	b	44078 <Mat_VarRead5+0xe14>
   44188:	ldr	r3, [r9, #20]
   4418c:	ldr	r2, [sp, #12]
   44190:	ldr	r1, [fp]
   44194:	mov	r0, r5
   44198:	bl	d728 <ReadUInt32Data>
   4419c:	mov	r8, r0
   441a0:	b	44078 <Mat_VarRead5+0xe14>
   441a4:	ldr	r3, [r9, #20]
   441a8:	ldr	r2, [sp, #12]
   441ac:	ldr	r1, [fp]
   441b0:	mov	r0, r5
   441b4:	bl	f364 <ReadInt16Data>
   441b8:	mov	r8, r0
   441bc:	b	44078 <Mat_VarRead5+0xe14>
   441c0:	ldr	r3, [r9, #20]
   441c4:	ldr	r2, [sp, #12]
   441c8:	ldr	r1, [fp]
   441cc:	mov	r0, r5
   441d0:	bl	10fd0 <ReadUInt16Data>
   441d4:	mov	r8, r0
   441d8:	b	44078 <Mat_VarRead5+0xe14>
   441dc:	ldr	r3, [r9, #20]
   441e0:	ldr	r2, [sp, #12]
   441e4:	ldr	r1, [fp]
   441e8:	mov	r0, r5
   441ec:	bl	12c3c <ReadInt8Data>
   441f0:	mov	r8, r0
   441f4:	b	44078 <Mat_VarRead5+0xe14>
   441f8:	ldr	r3, [r9, #20]
   441fc:	ldr	r2, [sp, #12]
   44200:	ldr	r1, [fp]
   44204:	mov	r0, r5
   44208:	bl	14860 <ReadUInt8Data>
   4420c:	mov	r8, r0
   44210:	b	44078 <Mat_VarRead5+0xe14>
   44214:	rsbs	r3, r8, #0
   44218:	and	r1, r8, #7
   4421c:	and	r3, r3, #7
   44220:	rsbpl	r1, r3, #0
   44224:	mov	r2, #1
   44228:	rsb	r1, r1, #8
   4422c:	ldr	r0, [r5]
   44230:	bl	1694 <fseek@plt>
   44234:	b	4408c <Mat_VarRead5+0xe28>
   44238:	add	r0, sp, #28
   4423c:	bl	18d4 <Mat_uint32Swap>
   44240:	b	440a8 <Mat_VarRead5+0xe44>
   44244:	lsr	r0, r0, #16
   44248:	b	442e4 <Mat_VarRead5+0x1080>
   4424c:	ldr	r3, [r5]
   44250:	mov	r2, #1
   44254:	mov	r1, #4
   44258:	add	r0, sp, #32
   4425c:	bl	1520 <fread@plt>
   44260:	cmp	sl, #0
   44264:	bne	442b0 <Mat_VarRead5+0x104c>
   44268:	ldr	r3, [r4, #8]
   4426c:	sub	r3, r3, #1
   44270:	cmp	r3, #12
   44274:	addls	pc, pc, r3, lsl #2
   44278:	b	442bc <Mat_VarRead5+0x1058>
   4427c:	b	443f4 <Mat_VarRead5+0x1190>
   44280:	b	44410 <Mat_VarRead5+0x11ac>
   44284:	b	443bc <Mat_VarRead5+0x1158>
   44288:	b	443d8 <Mat_VarRead5+0x1174>
   4428c:	b	44384 <Mat_VarRead5+0x1120>
   44290:	b	443a0 <Mat_VarRead5+0x113c>
   44294:	b	442fc <Mat_VarRead5+0x1098>
   44298:	b	442bc <Mat_VarRead5+0x1058>
   4429c:	b	442c8 <Mat_VarRead5+0x1064>
   442a0:	b	442bc <Mat_VarRead5+0x1058>
   442a4:	b	442bc <Mat_VarRead5+0x1058>
   442a8:	b	44318 <Mat_VarRead5+0x10b4>
   442ac:	b	44334 <Mat_VarRead5+0x10d0>
   442b0:	add	r0, sp, #32
   442b4:	bl	18d4 <Mat_uint32Swap>
   442b8:	b	44268 <Mat_VarRead5+0x1004>
   442bc:	ldr	r0, [sp, #32]
   442c0:	b	442e8 <Mat_VarRead5+0x1084>
   442c4:	mov	r7, #1
   442c8:	ldr	r3, [r9, #20]
   442cc:	ldr	r2, [sp, #16]
   442d0:	ldr	r1, [fp, #4]
   442d4:	mov	r0, r5
   442d8:	bl	3a44 <ReadDoubleData>
   442dc:	cmp	r7, #0
   442e0:	beq	442e8 <Mat_VarRead5+0x1084>
   442e4:	add	r0, r0, #4
   442e8:	tst	r0, #7
   442ec:	bne	44428 <Mat_VarRead5+0x11c4>
   442f0:	str	fp, [r9, #24]
   442f4:	b	433cc <Mat_VarRead5+0x168>
   442f8:	mov	r7, #1
   442fc:	ldr	r3, [r9, #20]
   44300:	ldr	r2, [sp, #16]
   44304:	ldr	r1, [fp, #4]
   44308:	mov	r0, r5
   4430c:	bl	6360 <ReadSingleData>
   44310:	b	442dc <Mat_VarRead5+0x1078>
   44314:	mov	r7, #1
   44318:	ldr	r3, [r9, #20]
   4431c:	ldr	r2, [sp, #16]
   44320:	ldr	r1, [fp, #4]
   44324:	mov	r0, r5
   44328:	bl	80c4 <ReadInt64Data>
   4432c:	b	442dc <Mat_VarRead5+0x1078>
   44330:	mov	r7, #1
   44334:	ldr	r3, [r9, #20]
   44338:	ldr	r2, [sp, #16]
   4433c:	ldr	r1, [fp, #4]
   44340:	mov	r0, r5
   44344:	bl	9dd8 <ReadUInt64Data>
   44348:	b	442dc <Mat_VarRead5+0x1078>
   4434c:	.word	0x0000c0d0
   44350:	.word	0x0000c17c
   44354:	.word	0x0000bd70
   44358:	.word	0x0000bd48
   4435c:	.word	0x0000bbd0
   44360:	.word	0x0000b928
   44364:	.word	0x0000b750
   44368:	.word	0x0000b5dc
   4436c:	.word	0x0000b588
   44370:	.word	0x0000ac5c
   44374:	.word	0x0000a8e0
   44378:	.word	0x0000a8fc
   4437c:	.word	0x0000a780
   44380:	mov	r7, #1
   44384:	ldr	r3, [r9, #20]
   44388:	ldr	r2, [sp, #16]
   4438c:	ldr	r1, [fp, #4]
   44390:	mov	r0, r5
   44394:	bl	baec <ReadInt32Data>
   44398:	b	442dc <Mat_VarRead5+0x1078>
   4439c:	mov	r7, #1
   443a0:	ldr	r3, [r9, #20]
   443a4:	ldr	r2, [sp, #16]
   443a8:	ldr	r1, [fp, #4]
   443ac:	mov	r0, r5
   443b0:	bl	d728 <ReadUInt32Data>
   443b4:	b	442dc <Mat_VarRead5+0x1078>
   443b8:	mov	r7, #1
   443bc:	ldr	r3, [r9, #20]
   443c0:	ldr	r2, [sp, #16]
   443c4:	ldr	r1, [fp, #4]
   443c8:	mov	r0, r5
   443cc:	bl	f364 <ReadInt16Data>
   443d0:	b	442dc <Mat_VarRead5+0x1078>
   443d4:	mov	r7, #1
   443d8:	ldr	r3, [r9, #20]
   443dc:	ldr	r2, [sp, #16]
   443e0:	ldr	r1, [fp, #4]
   443e4:	mov	r0, r5
   443e8:	bl	10fd0 <ReadUInt16Data>
   443ec:	b	442dc <Mat_VarRead5+0x1078>
   443f0:	mov	r7, #1
   443f4:	ldr	r3, [r9, #20]
   443f8:	ldr	r2, [sp, #16]
   443fc:	ldr	r1, [fp, #4]
   44400:	mov	r0, r5
   44404:	bl	12c3c <ReadInt8Data>
   44408:	b	442dc <Mat_VarRead5+0x1078>
   4440c:	mov	r7, #1
   44410:	ldr	r3, [r9, #20]
   44414:	ldr	r2, [sp, #16]
   44418:	ldr	r1, [fp, #4]
   4441c:	mov	r0, r5
   44420:	bl	14860 <ReadUInt8Data>
   44424:	b	442dc <Mat_VarRead5+0x1078>
   44428:	rsbs	r3, r0, #0
   4442c:	and	r1, r0, #7
   44430:	and	r3, r3, #7
   44434:	rsbpl	r1, r3, #0
   44438:	mov	r2, #1
   4443c:	rsb	r1, r1, #8
   44440:	ldr	r0, [r5]
   44444:	bl	1694 <fseek@plt>
   44448:	b	442f0 <Mat_VarRead5+0x108c>
   4444c:	ldr	r3, [sp, #16]
   44450:	cmp	r3, #1
   44454:	bne	442f0 <Mat_VarRead5+0x108c>
   44458:	ldr	r3, [r4, #8]
   4445c:	sub	r3, r3, #1
   44460:	cmp	r3, #12
   44464:	addls	pc, pc, r3, lsl #2
   44468:	b	444c4 <Mat_VarRead5+0x1260>
   4446c:	b	44674 <Mat_VarRead5+0x1410>
   44470:	b	4469c <Mat_VarRead5+0x1438>
   44474:	b	44624 <Mat_VarRead5+0x13c0>
   44478:	b	4464c <Mat_VarRead5+0x13e8>
   4447c:	b	445d4 <Mat_VarRead5+0x1370>
   44480:	b	445fc <Mat_VarRead5+0x1398>
   44484:	b	4455c <Mat_VarRead5+0x12f8>
   44488:	b	444c4 <Mat_VarRead5+0x1260>
   4448c:	b	444a0 <Mat_VarRead5+0x123c>
   44490:	b	444c4 <Mat_VarRead5+0x1260>
   44494:	b	444c4 <Mat_VarRead5+0x1260>
   44498:	b	44584 <Mat_VarRead5+0x1320>
   4449c:	b	445ac <Mat_VarRead5+0x1348>
   444a0:	ldr	r1, [r4, #52]	; 0x34
   444a4:	ldr	r3, [r9, #20]
   444a8:	str	r3, [sp]
   444ac:	ldr	r3, [sp, #12]
   444b0:	ldr	r2, [fp]
   444b4:	ldr	r1, [r1, #12]
   444b8:	mov	r0, r5
   444bc:	bl	4fc4 <ReadCompressedDoubleData>
   444c0:	mov	r8, r0
   444c4:	ldr	r3, [sp, #20]
   444c8:	cmp	r3, #0
   444cc:	addne	r8, r8, #4
   444d0:	tst	r8, #7
   444d4:	bne	446c4 <Mat_VarRead5+0x1460>
   444d8:	ldr	r3, [r4, #52]	; 0x34
   444dc:	add	r2, sp, #28
   444e0:	ldr	r1, [r3, #12]
   444e4:	mov	r0, r5
   444e8:	bl	31c4 <InflateDataType>
   444ec:	cmp	sl, #0
   444f0:	bne	446ec <Mat_VarRead5+0x1488>
   444f4:	ldr	r0, [sp, #28]
   444f8:	uxtb	r8, r0
   444fc:	cmp	r8, #25
   44500:	movcs	r8, #0
   44504:	lsr	r3, r0, #16
   44508:	lsl	r3, r3, #16
   4450c:	cmp	r3, #0
   44510:	beq	44700 <Mat_VarRead5+0x149c>
   44514:	ldr	r3, [r4, #8]
   44518:	sub	r3, r3, #1
   4451c:	cmp	r3, #12
   44520:	addls	pc, pc, r3, lsl #2
   44524:	b	446f8 <Mat_VarRead5+0x1494>
   44528:	b	448f0 <Mat_VarRead5+0x168c>
   4452c:	b	44918 <Mat_VarRead5+0x16b4>
   44530:	b	448a0 <Mat_VarRead5+0x163c>
   44534:	b	448c8 <Mat_VarRead5+0x1664>
   44538:	b	44850 <Mat_VarRead5+0x15ec>
   4453c:	b	44878 <Mat_VarRead5+0x1614>
   44540:	b	447d8 <Mat_VarRead5+0x1574>
   44544:	b	446f8 <Mat_VarRead5+0x1494>
   44548:	b	44778 <Mat_VarRead5+0x1514>
   4454c:	b	446f8 <Mat_VarRead5+0x1494>
   44550:	b	446f8 <Mat_VarRead5+0x1494>
   44554:	b	44800 <Mat_VarRead5+0x159c>
   44558:	b	44828 <Mat_VarRead5+0x15c4>
   4455c:	ldr	r1, [r4, #52]	; 0x34
   44560:	ldr	r3, [r9, #20]
   44564:	str	r3, [sp]
   44568:	ldr	r3, [sp, #12]
   4456c:	ldr	r2, [fp]
   44570:	ldr	r1, [r1, #12]
   44574:	mov	r0, r5
   44578:	bl	7ae8 <ReadCompressedSingleData>
   4457c:	mov	r8, r0
   44580:	b	444c4 <Mat_VarRead5+0x1260>
   44584:	ldr	r1, [r4, #52]	; 0x34
   44588:	ldr	r3, [r9, #20]
   4458c:	str	r3, [sp]
   44590:	ldr	r3, [sp, #12]
   44594:	ldr	r2, [fp]
   44598:	ldr	r1, [r1, #12]
   4459c:	mov	r0, r5
   445a0:	bl	9804 <ReadCompressedInt64Data>
   445a4:	mov	r8, r0
   445a8:	b	444c4 <Mat_VarRead5+0x1260>
   445ac:	ldr	r1, [r4, #52]	; 0x34
   445b0:	ldr	r3, [r9, #20]
   445b4:	str	r3, [sp]
   445b8:	ldr	r3, [sp, #12]
   445bc:	ldr	r2, [fp]
   445c0:	ldr	r1, [r1, #12]
   445c4:	mov	r0, r5
   445c8:	bl	b518 <ReadCompressedUInt64Data>
   445cc:	mov	r8, r0
   445d0:	b	444c4 <Mat_VarRead5+0x1260>
   445d4:	ldr	r1, [r4, #52]	; 0x34
   445d8:	ldr	r3, [r9, #20]
   445dc:	str	r3, [sp]
   445e0:	ldr	r3, [sp, #12]
   445e4:	ldr	r2, [fp]
   445e8:	ldr	r1, [r1, #12]
   445ec:	mov	r0, r5
   445f0:	bl	d19c <ReadCompressedInt32Data>
   445f4:	mov	r8, r0
   445f8:	b	444c4 <Mat_VarRead5+0x1260>
   445fc:	ldr	r1, [r4, #52]	; 0x34
   44600:	ldr	r3, [r9, #20]
   44604:	str	r3, [sp]
   44608:	ldr	r3, [sp, #12]
   4460c:	ldr	r2, [fp]
   44610:	ldr	r1, [r1, #12]
   44614:	mov	r0, r5
   44618:	bl	edd8 <ReadCompressedUInt32Data>
   4461c:	mov	r8, r0
   44620:	b	444c4 <Mat_VarRead5+0x1260>
   44624:	ldr	r1, [r4, #52]	; 0x34
   44628:	ldr	r3, [r9, #20]
   4462c:	str	r3, [sp]
   44630:	ldr	r3, [sp, #12]
   44634:	ldr	r2, [fp]
   44638:	ldr	r1, [r1, #12]
   4463c:	mov	r0, r5
   44640:	bl	10a34 <ReadCompressedInt16Data>
   44644:	mov	r8, r0
   44648:	b	444c4 <Mat_VarRead5+0x1260>
   4464c:	ldr	r1, [r4, #52]	; 0x34
   44650:	ldr	r3, [r9, #20]
   44654:	str	r3, [sp]
   44658:	ldr	r3, [sp, #12]
   4465c:	ldr	r2, [fp]
   44660:	ldr	r1, [r1, #12]
   44664:	mov	r0, r5
   44668:	bl	126a0 <ReadCompressedUInt16Data>
   4466c:	mov	r8, r0
   44670:	b	444c4 <Mat_VarRead5+0x1260>
   44674:	ldr	r1, [r4, #52]	; 0x34
   44678:	ldr	r3, [r9, #20]
   4467c:	str	r3, [sp]
   44680:	ldr	r3, [sp, #12]
   44684:	ldr	r2, [fp]
   44688:	ldr	r1, [r1, #12]
   4468c:	mov	r0, r5
   44690:	bl	1427c <ReadCompressedInt8Data>
   44694:	mov	r8, r0
   44698:	b	444c4 <Mat_VarRead5+0x1260>
   4469c:	ldr	r1, [r4, #52]	; 0x34
   446a0:	ldr	r3, [r9, #20]
   446a4:	str	r3, [sp]
   446a8:	ldr	r3, [sp, #12]
   446ac:	ldr	r2, [fp]
   446b0:	ldr	r1, [r1, #12]
   446b4:	mov	r0, r5
   446b8:	bl	15ea0 <ReadCompressedUInt8Data>
   446bc:	mov	r8, r0
   446c0:	b	444c4 <Mat_VarRead5+0x1260>
   446c4:	rsbs	r3, r8, #0
   446c8:	and	r2, r8, #7
   446cc:	and	r3, r3, #7
   446d0:	rsbpl	r2, r3, #0
   446d4:	ldr	r3, [r4, #52]	; 0x34
   446d8:	rsb	r2, r2, #8
   446dc:	ldr	r1, [r3, #12]
   446e0:	mov	r0, r5
   446e4:	bl	203c <InflateSkip>
   446e8:	b	444d8 <Mat_VarRead5+0x1274>
   446ec:	add	r0, sp, #28
   446f0:	bl	18d4 <Mat_uint32Swap>
   446f4:	b	444f4 <Mat_VarRead5+0x1290>
   446f8:	lsr	r0, r0, #16
   446fc:	b	447a4 <Mat_VarRead5+0x1540>
   44700:	ldr	r3, [r4, #52]	; 0x34
   44704:	add	r2, sp, #32
   44708:	ldr	r1, [r3, #12]
   4470c:	mov	r0, r5
   44710:	bl	31c4 <InflateDataType>
   44714:	cmp	sl, #0
   44718:	bne	44764 <Mat_VarRead5+0x1500>
   4471c:	ldr	r3, [r4, #8]
   44720:	sub	r3, r3, #1
   44724:	cmp	r3, #12
   44728:	addls	pc, pc, r3, lsl #2
   4472c:	b	44770 <Mat_VarRead5+0x150c>
   44730:	b	448f4 <Mat_VarRead5+0x1690>
   44734:	b	4491c <Mat_VarRead5+0x16b8>
   44738:	b	448a4 <Mat_VarRead5+0x1640>
   4473c:	b	448cc <Mat_VarRead5+0x1668>
   44740:	b	44854 <Mat_VarRead5+0x15f0>
   44744:	b	4487c <Mat_VarRead5+0x1618>
   44748:	b	447dc <Mat_VarRead5+0x1578>
   4474c:	b	44770 <Mat_VarRead5+0x150c>
   44750:	b	4477c <Mat_VarRead5+0x1518>
   44754:	b	44770 <Mat_VarRead5+0x150c>
   44758:	b	44770 <Mat_VarRead5+0x150c>
   4475c:	b	44804 <Mat_VarRead5+0x15a0>
   44760:	b	4482c <Mat_VarRead5+0x15c8>
   44764:	add	r0, sp, #32
   44768:	bl	18d4 <Mat_uint32Swap>
   4476c:	b	4471c <Mat_VarRead5+0x14b8>
   44770:	ldr	r0, [sp, #32]
   44774:	b	447a8 <Mat_VarRead5+0x1544>
   44778:	mov	r7, #1
   4477c:	ldr	r1, [r4, #52]	; 0x34
   44780:	ldr	r3, [r9, #20]
   44784:	str	r3, [sp]
   44788:	mov	r3, r8
   4478c:	ldr	r2, [fp, #4]
   44790:	ldr	r1, [r1, #12]
   44794:	mov	r0, r5
   44798:	bl	4fc4 <ReadCompressedDoubleData>
   4479c:	cmp	r7, #0
   447a0:	beq	447a8 <Mat_VarRead5+0x1544>
   447a4:	add	r0, r0, #4
   447a8:	tst	r0, #7
   447ac:	beq	442f0 <Mat_VarRead5+0x108c>
   447b0:	rsbs	r3, r0, #0
   447b4:	and	r2, r0, #7
   447b8:	and	r3, r3, #7
   447bc:	rsbpl	r2, r3, #0
   447c0:	ldr	r3, [r4, #52]	; 0x34
   447c4:	rsb	r2, r2, #8
   447c8:	ldr	r1, [r3, #12]
   447cc:	mov	r0, r5
   447d0:	bl	203c <InflateSkip>
   447d4:	b	442f0 <Mat_VarRead5+0x108c>
   447d8:	mov	r7, #1
   447dc:	ldr	r1, [r4, #52]	; 0x34
   447e0:	ldr	r3, [r9, #20]
   447e4:	str	r3, [sp]
   447e8:	mov	r3, r8
   447ec:	ldr	r2, [fp, #4]
   447f0:	ldr	r1, [r1, #12]
   447f4:	mov	r0, r5
   447f8:	bl	7ae8 <ReadCompressedSingleData>
   447fc:	b	4479c <Mat_VarRead5+0x1538>
   44800:	mov	r7, #1
   44804:	ldr	r1, [r4, #52]	; 0x34
   44808:	ldr	r3, [r9, #20]
   4480c:	str	r3, [sp]
   44810:	mov	r3, r8
   44814:	ldr	r2, [fp, #4]
   44818:	ldr	r1, [r1, #12]
   4481c:	mov	r0, r5
   44820:	bl	9804 <ReadCompressedInt64Data>
   44824:	b	4479c <Mat_VarRead5+0x1538>
   44828:	mov	r7, #1
   4482c:	ldr	r1, [r4, #52]	; 0x34
   44830:	ldr	r3, [r9, #20]
   44834:	str	r3, [sp]
   44838:	mov	r3, r8
   4483c:	ldr	r2, [fp, #4]
   44840:	ldr	r1, [r1, #12]
   44844:	mov	r0, r5
   44848:	bl	b518 <ReadCompressedUInt64Data>
   4484c:	b	4479c <Mat_VarRead5+0x1538>
   44850:	mov	r7, #1
   44854:	ldr	r1, [r4, #52]	; 0x34
   44858:	ldr	r3, [r9, #20]
   4485c:	str	r3, [sp]
   44860:	mov	r3, r8
   44864:	ldr	r2, [fp, #4]
   44868:	ldr	r1, [r1, #12]
   4486c:	mov	r0, r5
   44870:	bl	d19c <ReadCompressedInt32Data>
   44874:	b	4479c <Mat_VarRead5+0x1538>
   44878:	mov	r7, #1
   4487c:	ldr	r1, [r4, #52]	; 0x34
   44880:	ldr	r3, [r9, #20]
   44884:	str	r3, [sp]
   44888:	mov	r3, r8
   4488c:	ldr	r2, [fp, #4]
   44890:	ldr	r1, [r1, #12]
   44894:	mov	r0, r5
   44898:	bl	edd8 <ReadCompressedUInt32Data>
   4489c:	b	4479c <Mat_VarRead5+0x1538>
   448a0:	mov	r7, #1
   448a4:	ldr	r1, [r4, #52]	; 0x34
   448a8:	ldr	r3, [r9, #20]
   448ac:	str	r3, [sp]
   448b0:	mov	r3, r8
   448b4:	ldr	r2, [fp, #4]
   448b8:	ldr	r1, [r1, #12]
   448bc:	mov	r0, r5
   448c0:	bl	10a34 <ReadCompressedInt16Data>
   448c4:	b	4479c <Mat_VarRead5+0x1538>
   448c8:	mov	r7, #1
   448cc:	ldr	r1, [r4, #52]	; 0x34
   448d0:	ldr	r3, [r9, #20]
   448d4:	str	r3, [sp]
   448d8:	mov	r3, r8
   448dc:	ldr	r2, [fp, #4]
   448e0:	ldr	r1, [r1, #12]
   448e4:	mov	r0, r5
   448e8:	bl	126a0 <ReadCompressedUInt16Data>
   448ec:	b	4479c <Mat_VarRead5+0x1538>
   448f0:	mov	r7, #1
   448f4:	ldr	r1, [r4, #52]	; 0x34
   448f8:	ldr	r3, [r9, #20]
   448fc:	str	r3, [sp]
   44900:	mov	r3, r8
   44904:	ldr	r2, [fp, #4]
   44908:	ldr	r1, [r1, #12]
   4490c:	mov	r0, r5
   44910:	bl	1427c <ReadCompressedInt8Data>
   44914:	b	4479c <Mat_VarRead5+0x1538>
   44918:	mov	r7, #1
   4491c:	ldr	r1, [r4, #52]	; 0x34
   44920:	ldr	r3, [r9, #20]
   44924:	str	r3, [sp]
   44928:	mov	r3, r8
   4492c:	ldr	r2, [fp, #4]
   44930:	ldr	r1, [r1, #12]
   44934:	mov	r0, r5
   44938:	bl	15ea0 <ReadCompressedUInt8Data>
   4493c:	b	4479c <Mat_VarRead5+0x1538>
   44940:	ldr	r0, [r4, #8]
   44944:	bl	1598 <Mat_SizeOf@plt>
   44948:	mul	r0, r0, fp
   4494c:	bl	1544 <malloc@plt>
   44950:	mov	r1, r0
   44954:	str	r0, [r9, #24]
   44958:	cmp	r0, #0
   4495c:	beq	449b4 <Mat_VarRead5+0x1750>
   44960:	ldr	r3, [r4, #48]	; 0x30
   44964:	cmp	r3, #0
   44968:	bne	44ae8 <Mat_VarRead5+0x1884>
   4496c:	ldr	r3, [r4, #8]
   44970:	sub	r3, r3, #1
   44974:	cmp	r3, #12
   44978:	addls	pc, pc, r3, lsl #2
   4497c:	b	449d8 <Mat_VarRead5+0x1774>
   44980:	b	44ab8 <Mat_VarRead5+0x1854>
   44984:	b	44ad0 <Mat_VarRead5+0x186c>
   44988:	b	44a88 <Mat_VarRead5+0x1824>
   4498c:	b	44aa0 <Mat_VarRead5+0x183c>
   44990:	b	44a58 <Mat_VarRead5+0x17f4>
   44994:	b	44a70 <Mat_VarRead5+0x180c>
   44998:	b	44a10 <Mat_VarRead5+0x17ac>
   4499c:	b	449d8 <Mat_VarRead5+0x1774>
   449a0:	b	449c4 <Mat_VarRead5+0x1760>
   449a4:	b	449d8 <Mat_VarRead5+0x1774>
   449a8:	b	449d8 <Mat_VarRead5+0x1774>
   449ac:	b	44a28 <Mat_VarRead5+0x17c4>
   449b0:	b	44a40 <Mat_VarRead5+0x17dc>
   449b4:	ldr	r0, [pc, #-1612]	; 44370 <Mat_VarRead5+0x110c>
   449b8:	add	r0, pc, r0
   449bc:	bl	161c <Mat_Critical@plt>
   449c0:	b	433cc <Mat_VarRead5+0x168>
   449c4:	ldr	r3, [r9, #20]
   449c8:	ldr	r2, [sp, #12]
   449cc:	mov	r0, r5
   449d0:	bl	3a44 <ReadDoubleData>
   449d4:	mov	r8, r0
   449d8:	ldr	r3, [sp, #20]
   449dc:	cmp	r3, #0
   449e0:	addne	r8, r8, #4
   449e4:	tst	r8, #7
   449e8:	beq	433cc <Mat_VarRead5+0x168>
   449ec:	rsbs	r3, r8, #0
   449f0:	and	r1, r8, #7
   449f4:	and	r3, r3, #7
   449f8:	rsbpl	r1, r3, #0
   449fc:	mov	r2, #1
   44a00:	rsb	r1, r1, #8
   44a04:	ldr	r0, [r5]
   44a08:	bl	1694 <fseek@plt>
   44a0c:	b	433cc <Mat_VarRead5+0x168>
   44a10:	ldr	r3, [r9, #20]
   44a14:	ldr	r2, [sp, #12]
   44a18:	mov	r0, r5
   44a1c:	bl	6360 <ReadSingleData>
   44a20:	mov	r8, r0
   44a24:	b	449d8 <Mat_VarRead5+0x1774>
   44a28:	ldr	r3, [r9, #20]
   44a2c:	ldr	r2, [sp, #12]
   44a30:	mov	r0, r5
   44a34:	bl	80c4 <ReadInt64Data>
   44a38:	mov	r8, r0
   44a3c:	b	449d8 <Mat_VarRead5+0x1774>
   44a40:	ldr	r3, [r9, #20]
   44a44:	ldr	r2, [sp, #12]
   44a48:	mov	r0, r5
   44a4c:	bl	9dd8 <ReadUInt64Data>
   44a50:	mov	r8, r0
   44a54:	b	449d8 <Mat_VarRead5+0x1774>
   44a58:	ldr	r3, [r9, #20]
   44a5c:	ldr	r2, [sp, #12]
   44a60:	mov	r0, r5
   44a64:	bl	baec <ReadInt32Data>
   44a68:	mov	r8, r0
   44a6c:	b	449d8 <Mat_VarRead5+0x1774>
   44a70:	ldr	r3, [r9, #20]
   44a74:	ldr	r2, [sp, #12]
   44a78:	mov	r0, r5
   44a7c:	bl	d728 <ReadUInt32Data>
   44a80:	mov	r8, r0
   44a84:	b	449d8 <Mat_VarRead5+0x1774>
   44a88:	ldr	r3, [r9, #20]
   44a8c:	ldr	r2, [sp, #12]
   44a90:	mov	r0, r5
   44a94:	bl	f364 <ReadInt16Data>
   44a98:	mov	r8, r0
   44a9c:	b	449d8 <Mat_VarRead5+0x1774>
   44aa0:	ldr	r3, [r9, #20]
   44aa4:	ldr	r2, [sp, #12]
   44aa8:	mov	r0, r5
   44aac:	bl	10fd0 <ReadUInt16Data>
   44ab0:	mov	r8, r0
   44ab4:	b	449d8 <Mat_VarRead5+0x1774>
   44ab8:	ldr	r3, [r9, #20]
   44abc:	ldr	r2, [sp, #12]
   44ac0:	mov	r0, r5
   44ac4:	bl	12c3c <ReadInt8Data>
   44ac8:	mov	r8, r0
   44acc:	b	449d8 <Mat_VarRead5+0x1774>
   44ad0:	ldr	r3, [r9, #20]
   44ad4:	ldr	r2, [sp, #12]
   44ad8:	mov	r0, r5
   44adc:	bl	14860 <ReadUInt8Data>
   44ae0:	mov	r8, r0
   44ae4:	b	449d8 <Mat_VarRead5+0x1774>
   44ae8:	cmp	r3, #1
   44aec:	bne	433cc <Mat_VarRead5+0x168>
   44af0:	ldr	r3, [r4, #8]
   44af4:	sub	r3, r3, #1
   44af8:	cmp	r3, #12
   44afc:	addls	pc, pc, r3, lsl #2
   44b00:	b	44b5c <Mat_VarRead5+0x18f8>
   44b04:	b	44cb0 <Mat_VarRead5+0x1a4c>
   44b08:	b	44cd8 <Mat_VarRead5+0x1a74>
   44b0c:	b	44c60 <Mat_VarRead5+0x19fc>
   44b10:	b	44c88 <Mat_VarRead5+0x1a24>
   44b14:	b	44c10 <Mat_VarRead5+0x19ac>
   44b18:	b	44c38 <Mat_VarRead5+0x19d4>
   44b1c:	b	44b98 <Mat_VarRead5+0x1934>
   44b20:	b	44b5c <Mat_VarRead5+0x18f8>
   44b24:	b	44b38 <Mat_VarRead5+0x18d4>
   44b28:	b	44b5c <Mat_VarRead5+0x18f8>
   44b2c:	b	44b5c <Mat_VarRead5+0x18f8>
   44b30:	b	44bc0 <Mat_VarRead5+0x195c>
   44b34:	b	44be8 <Mat_VarRead5+0x1984>
   44b38:	ldr	r0, [r4, #52]	; 0x34
   44b3c:	ldr	r3, [r9, #20]
   44b40:	str	r3, [sp]
   44b44:	ldr	r3, [sp, #12]
   44b48:	mov	r2, r1
   44b4c:	ldr	r1, [r0, #12]
   44b50:	mov	r0, r5
   44b54:	bl	4fc4 <ReadCompressedDoubleData>
   44b58:	mov	r8, r0
   44b5c:	ldr	r3, [sp, #20]
   44b60:	cmp	r3, #0
   44b64:	addne	r8, r8, #4
   44b68:	tst	r8, #7
   44b6c:	beq	433cc <Mat_VarRead5+0x168>
   44b70:	rsbs	r3, r8, #0
   44b74:	and	r2, r8, #7
   44b78:	and	r3, r3, #7
   44b7c:	rsbpl	r2, r3, #0
   44b80:	ldr	r3, [r4, #52]	; 0x34
   44b84:	rsb	r2, r2, #8
   44b88:	ldr	r1, [r3, #12]
   44b8c:	mov	r0, r5
   44b90:	bl	203c <InflateSkip>
   44b94:	b	433cc <Mat_VarRead5+0x168>
   44b98:	ldr	r0, [r4, #52]	; 0x34
   44b9c:	ldr	r3, [r9, #20]
   44ba0:	str	r3, [sp]
   44ba4:	ldr	r3, [sp, #12]
   44ba8:	mov	r2, r1
   44bac:	ldr	r1, [r0, #12]
   44bb0:	mov	r0, r5
   44bb4:	bl	7ae8 <ReadCompressedSingleData>
   44bb8:	mov	r8, r0
   44bbc:	b	44b5c <Mat_VarRead5+0x18f8>
   44bc0:	ldr	r0, [r4, #52]	; 0x34
   44bc4:	ldr	r3, [r9, #20]
   44bc8:	str	r3, [sp]
   44bcc:	ldr	r3, [sp, #12]
   44bd0:	mov	r2, r1
   44bd4:	ldr	r1, [r0, #12]
   44bd8:	mov	r0, r5
   44bdc:	bl	9804 <ReadCompressedInt64Data>
   44be0:	mov	r8, r0
   44be4:	b	44b5c <Mat_VarRead5+0x18f8>
   44be8:	ldr	r0, [r4, #52]	; 0x34
   44bec:	ldr	r3, [r9, #20]
   44bf0:	str	r3, [sp]
   44bf4:	ldr	r3, [sp, #12]
   44bf8:	mov	r2, r1
   44bfc:	ldr	r1, [r0, #12]
   44c00:	mov	r0, r5
   44c04:	bl	b518 <ReadCompressedUInt64Data>
   44c08:	mov	r8, r0
   44c0c:	b	44b5c <Mat_VarRead5+0x18f8>
   44c10:	ldr	r0, [r4, #52]	; 0x34
   44c14:	ldr	r3, [r9, #20]
   44c18:	str	r3, [sp]
   44c1c:	ldr	r3, [sp, #12]
   44c20:	mov	r2, r1
   44c24:	ldr	r1, [r0, #12]
   44c28:	mov	r0, r5
   44c2c:	bl	d19c <ReadCompressedInt32Data>
   44c30:	mov	r8, r0
   44c34:	b	44b5c <Mat_VarRead5+0x18f8>
   44c38:	ldr	r0, [r4, #52]	; 0x34
   44c3c:	ldr	r3, [r9, #20]
   44c40:	str	r3, [sp]
   44c44:	ldr	r3, [sp, #12]
   44c48:	mov	r2, r1
   44c4c:	ldr	r1, [r0, #12]
   44c50:	mov	r0, r5
   44c54:	bl	edd8 <ReadCompressedUInt32Data>
   44c58:	mov	r8, r0
   44c5c:	b	44b5c <Mat_VarRead5+0x18f8>
   44c60:	ldr	r0, [r4, #52]	; 0x34
   44c64:	ldr	r3, [r9, #20]
   44c68:	str	r3, [sp]
   44c6c:	ldr	r3, [sp, #12]
   44c70:	mov	r2, r1
   44c74:	ldr	r1, [r0, #12]
   44c78:	mov	r0, r5
   44c7c:	bl	10a34 <ReadCompressedInt16Data>
   44c80:	mov	r8, r0
   44c84:	b	44b5c <Mat_VarRead5+0x18f8>
   44c88:	ldr	r0, [r4, #52]	; 0x34
   44c8c:	ldr	r3, [r9, #20]
   44c90:	str	r3, [sp]
   44c94:	ldr	r3, [sp, #12]
   44c98:	mov	r2, r1
   44c9c:	ldr	r1, [r0, #12]
   44ca0:	mov	r0, r5
   44ca4:	bl	126a0 <ReadCompressedUInt16Data>
   44ca8:	mov	r8, r0
   44cac:	b	44b5c <Mat_VarRead5+0x18f8>
   44cb0:	ldr	r0, [r4, #52]	; 0x34
   44cb4:	ldr	r3, [r9, #20]
   44cb8:	str	r3, [sp]
   44cbc:	ldr	r3, [sp, #12]
   44cc0:	mov	r2, r1
   44cc4:	ldr	r1, [r0, #12]
   44cc8:	mov	r0, r5
   44ccc:	bl	1427c <ReadCompressedInt8Data>
   44cd0:	mov	r8, r0
   44cd4:	b	44b5c <Mat_VarRead5+0x18f8>
   44cd8:	ldr	r0, [r4, #52]	; 0x34
   44cdc:	ldr	r3, [r9, #20]
   44ce0:	str	r3, [sp]
   44ce4:	ldr	r3, [sp, #12]
   44ce8:	mov	r2, r1
   44cec:	ldr	r1, [r0, #12]
   44cf0:	mov	r0, r5
   44cf4:	bl	15ea0 <ReadCompressedUInt8Data>
   44cf8:	mov	r8, r0
   44cfc:	b	44b5c <Mat_VarRead5+0x18f8>
   44d00:	ldr	r7, [r4]
   44d04:	cmp	r7, #0
   44d08:	beq	43678 <Mat_VarRead5+0x414>
   44d0c:	ldr	r3, [r4, #12]
   44d10:	cmp	r3, #0
   44d14:	beq	43678 <Mat_VarRead5+0x414>
   44d18:	ldr	r9, [r4, #40]	; 0x28
   44d1c:	cmp	r9, #0
   44d20:	beq	44d54 <Mat_VarRead5+0x1af0>
   44d24:	mov	sl, r3
   44d28:	cmp	r7, r3
   44d2c:	bcc	44d54 <Mat_VarRead5+0x1af0>
   44d30:	sub	r9, r9, #4
   44d34:	mov	r8, #0
   44d38:	ldr	r1, [r9, #4]!
   44d3c:	mov	r0, r5
   44d40:	bl	43264 <Mat_VarRead5>
   44d44:	add	r8, r8, #1
   44d48:	udiv	r3, r7, sl
   44d4c:	cmp	r3, r8
   44d50:	bhi	44d38 <Mat_VarRead5+0x1ad4>
   44d54:	mov	r3, #24
   44d58:	str	r3, [r4, #8]
   44d5c:	b	433cc <Mat_VarRead5+0x168>
   44d60:	ldr	r0, [pc, #-2548]	; 44374 <Mat_VarRead5+0x1110>
   44d64:	add	r0, pc, r0
   44d68:	bl	161c <Mat_Critical@plt>
   44d6c:	b	433cc <Mat_VarRead5+0x168>
   44d70:	ldr	r0, [pc, #-2560]	; 44378 <Mat_VarRead5+0x1114>
   44d74:	add	r0, pc, r0
   44d78:	bl	161c <Mat_Critical@plt>
   44d7c:	b	43678 <Mat_VarRead5+0x414>
   44d80:	ldr	r0, [pc, #-2572]	; 4437c <Mat_VarRead5+0x1118>
   44d84:	add	r0, pc, r0
   44d88:	bl	161c <Mat_Critical@plt>
   44d8c:	b	43678 <Mat_VarRead5+0x414>

00044d90 <ReadNextCell>:
   44d90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   44d94:	strd	r6, [sp, #8]
   44d98:	strd	r8, [sp, #16]
   44d9c:	strd	sl, [sp, #24]
   44da0:	str	lr, [sp, #32]
   44da4:	sub	sp, sp, #108	; 0x6c
   44da8:	mov	r6, r0
   44dac:	mov	r7, r1
   44db0:	mov	r3, #1
   44db4:	str	r3, [sp, #100]	; 0x64
   44db8:	add	r1, sp, #100	; 0x64
   44dbc:	mov	r0, r7
   44dc0:	bl	4a3c8 <SafeMulDims>
   44dc4:	cmp	r0, #0
   44dc8:	bne	44e48 <ReadNextCell+0xb8>
   44dcc:	mov	r2, #4
   44dd0:	str	r2, [r7, #12]
   44dd4:	ldr	r1, [sp, #100]	; 0x64
   44dd8:	mov	r0, r7
   44ddc:	bl	4a440 <SafeMul>
   44de0:	subs	r3, r0, #0
   44de4:	str	r3, [sp, #8]
   44de8:	bne	44e78 <ReadNextCell+0xe8>
   44dec:	ldr	r4, [sp, #100]	; 0x64
   44df0:	ldr	r1, [r7, #12]
   44df4:	mov	r0, r4
   44df8:	bl	140c <calloc@plt>
   44dfc:	mov	r5, r0
   44e00:	str	r0, [r7, #40]	; 0x28
   44e04:	cmp	r0, #0
   44e08:	beq	44e8c <ReadNextCell+0xfc>
   44e0c:	ldr	r3, [r7, #48]	; 0x30
   44e10:	cmp	r3, #1
   44e14:	beq	44eb0 <ReadNextCell+0x120>
   44e18:	cmp	r4, #0
   44e1c:	beq	44e58 <ReadNextCell+0xc8>
   44e20:	mov	r8, #0
   44e24:	mov	r4, r8
   44e28:	add	r9, sp, #36	; 0x24
   44e2c:	ldr	r3, [pc, #2412]	; 457a0 <ReadNextCell+0xa10>
   44e30:	add	r3, pc, r3
   44e34:	str	r3, [sp, #12]
   44e38:	ldr	r3, [pc, #2404]	; 457a4 <ReadNextCell+0xa14>
   44e3c:	add	r3, pc, r3
   44e40:	str	r3, [sp, #8]
   44e44:	b	45654 <ReadNextCell+0x8c4>
   44e48:	ldr	r0, [pc, #2392]	; 457a8 <ReadNextCell+0xa18>
   44e4c:	add	r0, pc, r0
   44e50:	bl	161c <Mat_Critical@plt>
   44e54:	mov	r4, #0
   44e58:	mov	r0, r4
   44e5c:	add	sp, sp, #108	; 0x6c
   44e60:	ldrd	r4, [sp]
   44e64:	ldrd	r6, [sp, #8]
   44e68:	ldrd	r8, [sp, #16]
   44e6c:	ldrd	sl, [sp, #24]
   44e70:	add	sp, sp, #32
   44e74:	pop	{pc}		; (ldr pc, [sp], #4)
   44e78:	ldr	r0, [pc, #2348]	; 457ac <ReadNextCell+0xa1c>
   44e7c:	add	r0, pc, r0
   44e80:	bl	161c <Mat_Critical@plt>
   44e84:	mov	r4, #0
   44e88:	b	44e58 <ReadNextCell+0xc8>
   44e8c:	ldr	r1, [r7, #36]	; 0x24
   44e90:	cmp	r1, #0
   44e94:	moveq	r4, #0
   44e98:	beq	44e58 <ReadNextCell+0xc8>
   44e9c:	ldr	r0, [pc, #2316]	; 457b0 <ReadNextCell+0xa20>
   44ea0:	add	r0, pc, r0
   44ea4:	bl	161c <Mat_Critical@plt>
   44ea8:	mov	r4, #0
   44eac:	b	44e58 <ReadNextCell+0xc8>
   44eb0:	mov	r2, #64	; 0x40
   44eb4:	mov	r1, #0
   44eb8:	add	r0, sp, #36	; 0x24
   44ebc:	bl	15f8 <memset@plt>
   44ec0:	cmp	r4, #0
   44ec4:	beq	44e58 <ReadNextCell+0xc8>
   44ec8:	mov	sl, r5
   44ecc:	mov	fp, #0
   44ed0:	mov	r4, fp
   44ed4:	ldr	r3, [pc, #2264]	; 457b4 <ReadNextCell+0xa24>
   44ed8:	add	r3, pc, r3
   44edc:	str	r3, [sp, #20]
   44ee0:	ldr	r3, [pc, #2256]	; 457b8 <ReadNextCell+0xa28>
   44ee4:	add	r3, pc, r3
   44ee8:	str	r3, [sp, #16]
   44eec:	ldr	r3, [pc, #2248]	; 457bc <ReadNextCell+0xa2c>
   44ef0:	add	r3, pc, r3
   44ef4:	str	r3, [sp, #24]
   44ef8:	b	44fe4 <ReadNextCell+0x254>
   44efc:	mov	r1, fp
   44f00:	ldr	r0, [pc, #2232]	; 457c0 <ReadNextCell+0xa30>
   44f04:	add	r0, pc, r0
   44f08:	bl	161c <Mat_Critical@plt>
   44f0c:	b	44fd4 <ReadNextCell+0x244>
   44f10:	add	r0, sp, #36	; 0x24
   44f14:	bl	18d4 <Mat_uint32Swap>
   44f18:	add	r0, sp, #40	; 0x28
   44f1c:	bl	18d4 <Mat_uint32Swap>
   44f20:	b	45024 <ReadNextCell+0x294>
   44f24:	ldr	r3, [sl, #-4]
   44f28:	ldr	r0, [r3, #52]	; 0x34
   44f2c:	bl	1478 <free@plt>
   44f30:	ldr	r3, [sl, #-4]
   44f34:	mov	r2, #0
   44f38:	str	r2, [r3, #52]	; 0x34
   44f3c:	b	44fd4 <ReadNextCell+0x244>
   44f40:	ldr	r0, [r5]
   44f44:	bl	158c <Mat_VarFree@plt>
   44f48:	mov	r3, #0
   44f4c:	str	r3, [r5]
   44f50:	mov	r1, fp
   44f54:	ldr	r0, [pc, #2152]	; 457c4 <ReadNextCell+0xa34>
   44f58:	add	r0, pc, r0
   44f5c:	bl	161c <Mat_Critical@plt>
   44f60:	b	44e58 <ReadNextCell+0xc8>
   44f64:	add	r0, sp, #36	; 0x24
   44f68:	bl	18d4 <Mat_uint32Swap>
   44f6c:	add	r0, sp, #40	; 0x28
   44f70:	bl	18d4 <Mat_uint32Swap>
   44f74:	add	r0, sp, #44	; 0x2c
   44f78:	bl	18d4 <Mat_uint32Swap>
   44f7c:	add	r0, sp, #48	; 0x30
   44f80:	bl	18d4 <Mat_uint32Swap>
   44f84:	b	45070 <ReadNextCell+0x2e0>
   44f88:	ldr	r0, [pc, #2104]	; 457c8 <ReadNextCell+0xa38>
   44f8c:	add	r0, pc, r0
   44f90:	bl	161c <Mat_Critical@plt>
   44f94:	ldr	r3, [r7, #52]	; 0x34
   44f98:	mov	r2, r9
   44f9c:	ldr	r1, [r3, #12]
   44fa0:	mov	r0, r6
   44fa4:	bl	203c <InflateSkip>
   44fa8:	add	r4, r4, r0
   44fac:	ldr	r3, [r5, #-4]
   44fb0:	ldr	r3, [r3, #16]
   44fb4:	cmp	r3, #17
   44fb8:	bne	450d4 <ReadNextCell+0x344>
   44fbc:	ldr	r3, [r7, #52]	; 0x34
   44fc0:	mov	r2, r9
   44fc4:	ldr	r1, [r3, #12]
   44fc8:	mov	r0, r6
   44fcc:	bl	203c <InflateSkip>
   44fd0:	add	r4, r4, r0
   44fd4:	add	fp, fp, #1
   44fd8:	ldr	r3, [sp, #100]	; 0x64
   44fdc:	cmp	r3, fp
   44fe0:	bls	44e58 <ReadNextCell+0xc8>
   44fe4:	mov	r5, sl
   44fe8:	bl	1508 <Mat_VarCalloc@plt>
   44fec:	str	r0, [sl], #4
   44ff0:	cmp	r0, #0
   44ff4:	beq	44efc <ReadNextCell+0x16c>
   44ff8:	mov	r3, #0
   44ffc:	str	r3, [sp, #36]	; 0x24
   45000:	str	r3, [sp, #40]	; 0x28
   45004:	add	r2, sp, #36	; 0x24
   45008:	mov	r1, r7
   4500c:	mov	r0, r6
   45010:	bl	2544 <InflateVarTag>
   45014:	add	r4, r4, r0
   45018:	ldr	r3, [r6, #20]
   4501c:	cmp	r3, #0
   45020:	bne	44f10 <ReadNextCell+0x180>
   45024:	ldr	r8, [sp, #40]	; 0x28
   45028:	cmp	r8, #0
   4502c:	beq	44f24 <ReadNextCell+0x194>
   45030:	ldr	r3, [sp, #36]	; 0x24
   45034:	cmp	r3, #14
   45038:	bne	44f40 <ReadNextCell+0x1b0>
   4503c:	mov	r5, sl
   45040:	ldr	r3, [sl, #-4]
   45044:	mov	r2, #1
   45048:	str	r2, [r3, #48]	; 0x30
   4504c:	add	r2, sp, #36	; 0x24
   45050:	mov	r1, r7
   45054:	mov	r0, r6
   45058:	bl	26fc <InflateArrayFlags>
   4505c:	add	r4, r4, r0
   45060:	sub	r9, r8, #16
   45064:	ldr	r3, [r6, #20]
   45068:	cmp	r3, #0
   4506c:	bne	44f64 <ReadNextCell+0x1d4>
   45070:	ldr	r1, [sp, #36]	; 0x24
   45074:	cmp	r1, #6
   45078:	bne	44f88 <ReadNextCell+0x1f8>
   4507c:	ldr	r3, [sp, #44]	; 0x2c
   45080:	uxtb	r2, r3
   45084:	cmp	r2, #18
   45088:	movcs	r2, #0
   4508c:	ldr	r1, [r5, #-4]
   45090:	str	r2, [r1, #16]
   45094:	ldr	r2, [r5, #-4]
   45098:	and	r1, r3, #2048	; 0x800
   4509c:	str	r1, [r2, #20]
   450a0:	ldr	r2, [r5, #-4]
   450a4:	and	r1, r3, #1024	; 0x400
   450a8:	str	r1, [r2, #24]
   450ac:	ldr	r2, [r5, #-4]
   450b0:	and	r3, r3, #512	; 0x200
   450b4:	str	r3, [r2, #28]
   450b8:	ldr	r3, [r5, #-4]
   450bc:	ldr	r2, [r3, #16]
   450c0:	cmp	r2, #5
   450c4:	bne	44fac <ReadNextCell+0x21c>
   450c8:	ldr	r2, [sp, #48]	; 0x30
   450cc:	str	r2, [r3]
   450d0:	b	44fac <ReadNextCell+0x21c>
   450d4:	mov	r3, #0
   450d8:	str	r3, [sp, #32]
   450dc:	add	r3, sp, #32
   450e0:	str	r3, [sp]
   450e4:	mov	r3, #64	; 0x40
   450e8:	add	r2, sp, #36	; 0x24
   450ec:	mov	r1, r7
   450f0:	mov	r0, r6
   450f4:	bl	28b4 <InflateRankDims>
   450f8:	add	r9, r4, r0
   450fc:	ldr	r3, [sp, #32]
   45100:	cmp	r3, #0
   45104:	addeq	r3, sp, #44	; 0x2c
   45108:	streq	r3, [sp, #32]
   4510c:	ldreq	r3, [sp, #8]
   45110:	movne	r3, #1
   45114:	str	r3, [sp, #12]
   45118:	sub	r8, r8, #24
   4511c:	ldr	r3, [r6, #20]
   45120:	cmp	r3, #0
   45124:	bne	45280 <ReadNextCell+0x4f0>
   45128:	ldr	r3, [sp, #36]	; 0x24
   4512c:	cmp	r3, #5
   45130:	beq	45294 <ReadNextCell+0x504>
   45134:	ldr	r3, [sp, #12]
   45138:	cmp	r3, #0
   4513c:	bne	45370 <ReadNextCell+0x5e0>
   45140:	add	r2, sp, #36	; 0x24
   45144:	mov	r1, r7
   45148:	mov	r0, r6
   4514c:	bl	2c70 <InflateVarNameTag>
   45150:	add	r4, r9, r0
   45154:	sub	r9, r8, #8
   45158:	ldr	r3, [r6, #20]
   4515c:	cmp	r3, #0
   45160:	bne	4537c <ReadNextCell+0x5ec>
   45164:	ldr	r8, [sp, #40]	; 0x28
   45168:	cmp	r8, #0
   4516c:	beq	4518c <ReadNextCell+0x3fc>
   45170:	ldr	r3, [sp, #36]	; 0x24
   45174:	str	r3, [sp, #12]
   45178:	cmp	r3, #1
   4517c:	beq	45390 <ReadNextCell+0x600>
   45180:	ldrh	r3, [sp, #12]
   45184:	cmp	r3, #1
   45188:	beq	453f0 <ReadNextCell+0x660>
   4518c:	ldr	r3, [r5, #-4]
   45190:	ldr	r8, [r3, #52]	; 0x34
   45194:	mov	r1, #56	; 0x38
   45198:	mov	r0, #1
   4519c:	bl	140c <calloc@plt>
   451a0:	str	r0, [r8, #12]
   451a4:	ldr	r3, [r5, #-4]
   451a8:	ldr	r3, [r3, #52]	; 0x34
   451ac:	ldr	r0, [r3, #12]
   451b0:	cmp	r0, #0
   451b4:	beq	454cc <ReadNextCell+0x73c>
   451b8:	ldr	r3, [r7, #52]	; 0x34
   451bc:	ldr	r1, [r3, #12]
   451c0:	bl	15bc <inflateCopy@plt>
   451c4:	cmp	r0, #0
   451c8:	bne	454b8 <ReadNextCell+0x728>
   451cc:	ldr	r3, [r5, #-4]
   451d0:	ldr	r8, [r3, #52]	; 0x34
   451d4:	ldr	r0, [r6]
   451d8:	bl	14b4 <ftell@plt>
   451dc:	str	r0, [r8]
   451e0:	ldr	r3, [r5, #-4]
   451e4:	ldr	r2, [r3, #52]	; 0x34
   451e8:	ldr	r3, [r2]
   451ec:	cmn	r3, #1
   451f0:	beq	45498 <ReadNextCell+0x708>
   451f4:	ldr	r1, [r7, #52]	; 0x34
   451f8:	ldr	r1, [r1, #12]
   451fc:	ldr	r1, [r1, #4]
   45200:	sub	r3, r3, r1
   45204:	str	r3, [r2]
   45208:	ldr	r1, [r5, #-4]
   4520c:	ldr	r3, [r1, #16]
   45210:	cmp	r3, #2
   45214:	beq	45450 <ReadNextCell+0x6c0>
   45218:	cmp	r3, #1
   4521c:	beq	45460 <ReadNextCell+0x6d0>
   45220:	cmp	r9, #32768	; 0x8000
   45224:	ble	45470 <ReadNextCell+0x6e0>
   45228:	ldr	r3, [r5, #-4]
   4522c:	ldr	r3, [r3, #52]	; 0x34
   45230:	mov	r2, #0
   45234:	ldr	r1, [r3]
   45238:	ldr	r0, [r6]
   4523c:	bl	1694 <fseek@plt>
   45240:	ldr	r2, [r5, #-4]
   45244:	ldr	r3, [r2, #52]	; 0x34
   45248:	ldr	r1, [r3, #16]
   4524c:	cmp	r1, #0
   45250:	beq	454a4 <ReadNextCell+0x714>
   45254:	ldr	r0, [r3, #12]
   45258:	bl	15b0 <inflateEnd@plt>
   4525c:	ldr	r3, [r5, #-4]
   45260:	ldr	r3, [r3, #52]	; 0x34
   45264:	ldr	r0, [r3, #12]
   45268:	bl	1478 <free@plt>
   4526c:	ldr	r3, [r5, #-4]
   45270:	ldr	r3, [r3, #52]	; 0x34
   45274:	mov	r2, #0
   45278:	str	r2, [r3, #12]
   4527c:	b	44fbc <ReadNextCell+0x22c>
   45280:	add	r0, sp, #36	; 0x24
   45284:	bl	18d4 <Mat_uint32Swap>
   45288:	add	r0, sp, #40	; 0x28
   4528c:	bl	18d4 <Mat_uint32Swap>
   45290:	b	45128 <ReadNextCell+0x398>
   45294:	ldr	r3, [r5, #-4]
   45298:	ldr	r2, [sp, #40]	; 0x28
   4529c:	str	r2, [r3, #4]
   452a0:	ldr	r2, [r5, #-4]
   452a4:	ldr	r3, [r2, #4]
   452a8:	sub	r8, r8, r3
   452ac:	add	r1, r3, #3
   452b0:	cmp	r3, #0
   452b4:	movlt	r3, r1
   452b8:	asr	r3, r3, #2
   452bc:	str	r3, [r2, #4]
   452c0:	ldr	r4, [r5, #-4]
   452c4:	ldr	r0, [r4, #4]
   452c8:	lsl	r0, r0, #2
   452cc:	bl	1544 <malloc@plt>
   452d0:	str	r0, [r4, #32]
   452d4:	ldr	r3, [r6, #20]
   452d8:	cmp	r3, #0
   452dc:	bne	45318 <ReadNextCell+0x588>
   452e0:	ldr	r2, [r5, #-4]
   452e4:	ldr	r1, [r2, #4]
   452e8:	cmp	r1, #0
   452ec:	ble	4535c <ReadNextCell+0x5cc>
   452f0:	ldr	r1, [sp, #32]
   452f4:	ldr	r1, [r1, r3, lsl #2]
   452f8:	ldr	r2, [r2, #32]
   452fc:	str	r1, [r2, r3, lsl #2]
   45300:	add	r3, r3, #1
   45304:	ldr	r2, [r5, #-4]
   45308:	ldr	r1, [r2, #4]
   4530c:	cmp	r1, r3
   45310:	bgt	452f0 <ReadNextCell+0x560>
   45314:	b	4535c <ReadNextCell+0x5cc>
   45318:	ldr	r3, [r5, #-4]
   4531c:	ldr	r2, [r3, #4]
   45320:	cmp	r2, #0
   45324:	ble	4535c <ReadNextCell+0x5cc>
   45328:	ldr	r4, [sp, #8]
   4532c:	str	sl, [sp, #28]
   45330:	ldr	sl, [r3, #32]
   45334:	ldr	r0, [sp, #32]
   45338:	add	r0, r0, r4, lsl #2
   4533c:	bl	18d4 <Mat_uint32Swap>
   45340:	str	r0, [sl, r4, lsl #2]
   45344:	add	r4, r4, #1
   45348:	ldr	r3, [r5, #-4]
   4534c:	ldr	r2, [r3, #4]
   45350:	cmp	r2, r4
   45354:	bgt	45330 <ReadNextCell+0x5a0>
   45358:	ldr	sl, [sp, #28]
   4535c:	ldr	r3, [r5, #-4]
   45360:	ldr	r3, [r3, #4]
   45364:	tst	r3, #1
   45368:	subne	r8, r8, #4
   4536c:	b	45134 <ReadNextCell+0x3a4>
   45370:	ldr	r0, [sp, #32]
   45374:	bl	1478 <free@plt>
   45378:	b	45140 <ReadNextCell+0x3b0>
   4537c:	add	r0, sp, #36	; 0x24
   45380:	bl	18d4 <Mat_uint32Swap>
   45384:	add	r0, sp, #40	; 0x28
   45388:	bl	18d4 <Mat_uint32Swap>
   4538c:	b	45164 <ReadNextCell+0x3d4>
   45390:	tst	r8, #7
   45394:	bicne	r8, r8, #7
   45398:	addne	r8, r8, #8
   4539c:	ldr	r3, [r5, #-4]
   453a0:	str	r3, [sp, #12]
   453a4:	add	r0, r8, #1
   453a8:	bl	1544 <malloc@plt>
   453ac:	ldr	r3, [sp, #12]
   453b0:	str	r0, [r3, #36]	; 0x24
   453b4:	sub	r9, r9, r8
   453b8:	ldr	r3, [r5, #-4]
   453bc:	ldr	r2, [r3, #36]	; 0x24
   453c0:	cmp	r2, #0
   453c4:	beq	4518c <ReadNextCell+0x3fc>
   453c8:	mov	r3, r8
   453cc:	mov	r1, r7
   453d0:	mov	r0, r6
   453d4:	bl	2e28 <InflateVarName>
   453d8:	add	r4, r4, r0
   453dc:	ldr	r3, [r5, #-4]
   453e0:	ldr	r3, [r3, #36]	; 0x24
   453e4:	mov	r2, #0
   453e8:	strb	r2, [r3, r8]
   453ec:	b	4518c <ReadNextCell+0x3fc>
   453f0:	ldr	r3, [sp, #12]
   453f4:	lsr	r8, r3, #16
   453f8:	sub	r3, r8, #1
   453fc:	cmp	r3, #3
   45400:	bhi	4518c <ReadNextCell+0x3fc>
   45404:	ldr	r3, [r5, #-4]
   45408:	str	r3, [sp, #28]
   4540c:	add	r0, r8, #1
   45410:	bl	1544 <malloc@plt>
   45414:	ldr	r3, [sp, #28]
   45418:	str	r0, [r3, #36]	; 0x24
   4541c:	ldr	r3, [r5, #-4]
   45420:	ldr	r0, [r3, #36]	; 0x24
   45424:	cmp	r0, #0
   45428:	beq	4518c <ReadNextCell+0x3fc>
   4542c:	mov	r2, r8
   45430:	add	r1, sp, #40	; 0x28
   45434:	bl	1490 <memcpy@plt>
   45438:	ldr	r3, [r5, #-4]
   4543c:	ldr	r3, [r3, #36]	; 0x24
   45440:	mov	r2, #0
   45444:	ldr	r1, [sp, #12]
   45448:	strb	r2, [r3, r1, lsr #16]
   4544c:	b	4518c <ReadNextCell+0x3fc>
   45450:	mov	r0, r6
   45454:	bl	457d0 <ReadNextStructField>
   45458:	add	r4, r4, r0
   4545c:	b	45228 <ReadNextCell+0x498>
   45460:	mov	r0, r6
   45464:	bl	44d90 <ReadNextCell>
   45468:	add	r4, r4, r0
   4546c:	b	45228 <ReadNextCell+0x498>
   45470:	mov	r0, r6
   45474:	bl	43264 <Mat_VarRead5>
   45478:	ldr	r3, [r5, #-4]
   4547c:	ldr	r2, [r3, #52]	; 0x34
   45480:	ldr	r3, [r3, #40]	; 0x28
   45484:	str	r3, [r2, #16]
   45488:	ldr	r3, [r5, #-4]
   4548c:	mov	r2, #0
   45490:	str	r2, [r3, #40]	; 0x28
   45494:	b	45228 <ReadNextCell+0x498>
   45498:	ldr	r0, [sp, #24]
   4549c:	bl	161c <Mat_Critical@plt>
   454a0:	b	45240 <ReadNextCell+0x4b0>
   454a4:	ldr	r2, [r2, #16]
   454a8:	sub	r2, r2, #1
   454ac:	cmp	r2, #1
   454b0:	bls	45254 <ReadNextCell+0x4c4>
   454b4:	b	44fbc <ReadNextCell+0x22c>
   454b8:	bl	14f0 <zError@plt>
   454bc:	mov	r1, r0
   454c0:	ldr	r0, [sp, #16]
   454c4:	bl	161c <Mat_Critical@plt>
   454c8:	b	44fbc <ReadNextCell+0x22c>
   454cc:	ldr	r0, [sp, #20]
   454d0:	bl	161c <Mat_Critical@plt>
   454d4:	b	44fbc <ReadNextCell+0x22c>
   454d8:	mov	r1, r8
   454dc:	ldr	r0, [sp, #8]
   454e0:	bl	161c <Mat_Critical@plt>
   454e4:	b	45644 <ReadNextCell+0x8b4>
   454e8:	mov	r0, r9
   454ec:	bl	18d4 <Mat_uint32Swap>
   454f0:	add	r0, sp, #40	; 0x28
   454f4:	bl	18d4 <Mat_uint32Swap>
   454f8:	b	45694 <ReadNextCell+0x904>
   454fc:	ldr	r3, [r5, #-4]
   45500:	ldr	r0, [r3, #52]	; 0x34
   45504:	bl	1478 <free@plt>
   45508:	ldr	r3, [r5, #-4]
   4550c:	mov	r2, #0
   45510:	str	r2, [r3, #52]	; 0x34
   45514:	b	45644 <ReadNextCell+0x8b4>
   45518:	ldr	r0, [sl]
   4551c:	bl	158c <Mat_VarFree@plt>
   45520:	mov	r3, #0
   45524:	str	r3, [sl]
   45528:	ldr	r0, [r6]
   4552c:	bl	14b4 <ftell@plt>
   45530:	mov	r2, r0
   45534:	mov	r1, r8
   45538:	ldr	r0, [pc, #652]	; 457cc <ReadNextCell+0xa3c>
   4553c:	add	r0, pc, r0
   45540:	bl	161c <Mat_Critical@plt>
   45544:	b	44e58 <ReadNextCell+0xc8>
   45548:	mov	r0, r9
   4554c:	bl	18d4 <Mat_uint32Swap>
   45550:	add	r0, sp, #40	; 0x28
   45554:	bl	18d4 <Mat_uint32Swap>
   45558:	add	r0, sp, #44	; 0x2c
   4555c:	bl	18d4 <Mat_uint32Swap>
   45560:	add	r0, sp, #48	; 0x30
   45564:	bl	18d4 <Mat_uint32Swap>
   45568:	add	r0, sp, #52	; 0x34
   4556c:	bl	18d4 <Mat_uint32Swap>
   45570:	add	r0, sp, #56	; 0x38
   45574:	bl	18d4 <Mat_uint32Swap>
   45578:	b	456d0 <ReadNextCell+0x940>
   4557c:	ldr	r3, [sp, #44]	; 0x2c
   45580:	uxtb	r2, r3
   45584:	cmp	r2, #18
   45588:	movcs	r2, #0
   4558c:	ldr	r1, [r5, #-4]
   45590:	str	r2, [r1, #16]
   45594:	ldr	r2, [r5, #-4]
   45598:	and	r1, r3, #2048	; 0x800
   4559c:	str	r1, [r2, #20]
   455a0:	ldr	r2, [r5, #-4]
   455a4:	and	r1, r3, #1024	; 0x400
   455a8:	str	r1, [r2, #24]
   455ac:	ldr	r2, [r5, #-4]
   455b0:	and	r3, r3, #512	; 0x200
   455b4:	str	r3, [r2, #28]
   455b8:	ldr	r3, [r5, #-4]
   455bc:	ldr	r2, [r3, #16]
   455c0:	cmp	r2, #5
   455c4:	ldreq	r2, [sp, #48]	; 0x30
   455c8:	streq	r2, [r3]
   455cc:	b	456e0 <ReadNextCell+0x950>
   455d0:	mov	r0, r9
   455d4:	bl	18d4 <Mat_uint32Swap>
   455d8:	add	r0, sp, #40	; 0x28
   455dc:	bl	18d4 <Mat_uint32Swap>
   455e0:	b	45728 <ReadNextCell+0x998>
   455e4:	ldr	r3, [sl, #-4]
   455e8:	ldr	fp, [r3, #52]	; 0x34
   455ec:	ldr	r0, [r6]
   455f0:	bl	14b4 <ftell@plt>
   455f4:	str	r0, [fp]
   455f8:	ldr	r1, [sl, #-4]
   455fc:	ldr	r3, [r1, #52]	; 0x34
   45600:	ldr	r3, [r3]
   45604:	cmn	r3, #1
   45608:	beq	45794 <ReadNextCell+0xa04>
   4560c:	ldr	r3, [r1, #16]
   45610:	cmp	r3, #2
   45614:	beq	45774 <ReadNextCell+0x9e4>
   45618:	ldr	r1, [sl, #-4]
   4561c:	ldr	r3, [r1, #16]
   45620:	cmp	r3, #1
   45624:	beq	45784 <ReadNextCell+0x9f4>
   45628:	ldr	r3, [sl, #-4]
   4562c:	ldr	r3, [r3, #52]	; 0x34
   45630:	ldr	r1, [r3]
   45634:	mov	r2, #0
   45638:	add	r1, r7, r1
   4563c:	ldr	r0, [r6]
   45640:	bl	1694 <fseek@plt>
   45644:	add	r8, r8, #1
   45648:	ldr	r3, [sp, #100]	; 0x64
   4564c:	cmp	r3, r8
   45650:	bls	44e58 <ReadNextCell+0xc8>
   45654:	mov	sl, r5
   45658:	bl	1508 <Mat_VarCalloc@plt>
   4565c:	str	r0, [r5], #4
   45660:	cmp	r0, #0
   45664:	beq	454d8 <ReadNextCell+0x748>
   45668:	ldr	r3, [r6]
   4566c:	mov	r2, #2
   45670:	mov	r1, #4
   45674:	mov	r0, r9
   45678:	bl	1520 <fread@plt>
   4567c:	cmp	r0, #0
   45680:	beq	45644 <ReadNextCell+0x8b4>
   45684:	add	r4, r4, r0
   45688:	ldr	r3, [r6, #20]
   4568c:	cmp	r3, #0
   45690:	bne	454e8 <ReadNextCell+0x758>
   45694:	ldr	r7, [sp, #40]	; 0x28
   45698:	cmp	r7, #0
   4569c:	beq	454fc <ReadNextCell+0x76c>
   456a0:	ldr	r3, [sp, #36]	; 0x24
   456a4:	cmp	r3, #14
   456a8:	bne	45518 <ReadNextCell+0x788>
   456ac:	ldr	r3, [r6]
   456b0:	mov	r2, #6
   456b4:	mov	r1, #4
   456b8:	mov	r0, r9
   456bc:	bl	1520 <fread@plt>
   456c0:	add	r4, r4, r0
   456c4:	ldr	r3, [r6, #20]
   456c8:	cmp	r3, #0
   456cc:	bne	45548 <ReadNextCell+0x7b8>
   456d0:	sub	r7, r7, #24
   456d4:	ldr	r3, [sp, #36]	; 0x24
   456d8:	cmp	r3, #6
   456dc:	beq	4557c <ReadNextCell+0x7ec>
   456e0:	mov	sl, r5
   456e4:	ldr	r3, [sp, #56]	; 0x38
   456e8:	ldr	r2, [sp, #52]	; 0x34
   456ec:	ldr	r1, [r5, #-4]
   456f0:	mov	r0, r6
   456f4:	bl	40aac <ReadRankDims>
   456f8:	add	r4, r4, r0
   456fc:	sub	r7, r7, r0
   45700:	ldr	r3, [r6]
   45704:	mov	r2, #8
   45708:	mov	r1, #1
   4570c:	mov	r0, r9
   45710:	bl	1520 <fread@plt>
   45714:	add	r4, r4, r0
   45718:	sub	r7, r7, #8
   4571c:	ldr	r3, [r6, #20]
   45720:	cmp	r3, #0
   45724:	bne	455d0 <ReadNextCell+0x840>
   45728:	ldr	r3, [sp, #40]	; 0x28
   4572c:	cmp	r3, #0
   45730:	beq	455e4 <ReadNextCell+0x854>
   45734:	ldr	r2, [sp, #36]	; 0x24
   45738:	cmp	r2, #1
   4573c:	bne	455e4 <ReadNextCell+0x854>
   45740:	mov	r1, r3
   45744:	rsbs	r0, r3, #0
   45748:	and	r2, r3, #7
   4574c:	and	r0, r0, #7
   45750:	rsbpl	r2, r0, #0
   45754:	cmp	r2, #0
   45758:	rsbgt	r2, r2, #8
   4575c:	addgt	r1, r3, r2
   45760:	sub	r7, r7, r1
   45764:	mov	r2, #1
   45768:	ldr	r0, [r6]
   4576c:	bl	1694 <fseek@plt>
   45770:	b	455e4 <ReadNextCell+0x854>
   45774:	mov	r0, r6
   45778:	bl	457d0 <ReadNextStructField>
   4577c:	add	r4, r4, r0
   45780:	b	45618 <ReadNextCell+0x888>
   45784:	mov	r0, r6
   45788:	bl	44d90 <ReadNextCell>
   4578c:	add	r4, r4, r0
   45790:	b	45628 <ReadNextCell+0x898>
   45794:	ldr	r0, [sp, #12]
   45798:	bl	161c <Mat_Critical@plt>
   4579c:	b	45644 <ReadNextCell+0x8b4>
   457a0:	.word	0x0000a5f8
   457a4:	.word	0x0000a88c
   457a8:	.word	0x0000a698
   457ac:	.word	0x0000a668
   457b0:	.word	0x0000a800
   457b4:	.word	0x0000a898
   457b8:	.word	0x0000a86c
   457bc:	.word	0x0000a538
   457c0:	.word	0x0000a7c4
   457c4:	.word	0x0000a798
   457c8:	.word	0x0000a794
   457cc:	.word	0x0000a250

000457d0 <ReadNextStructField>:
   457d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   457d4:	strd	r6, [sp, #8]
   457d8:	strd	r8, [sp, #16]
   457dc:	strd	sl, [sp, #24]
   457e0:	str	lr, [sp, #32]
   457e4:	sub	sp, sp, #124	; 0x7c
   457e8:	mov	fp, r0
   457ec:	mov	r5, r1
   457f0:	mov	r3, #1
   457f4:	str	r3, [sp, #116]	; 0x74
   457f8:	add	r1, sp, #116	; 0x74
   457fc:	mov	r0, r5
   45800:	bl	4a3c8 <SafeMulDims>
   45804:	cmp	r0, #0
   45808:	bne	4592c <ReadNextStructField+0x15c>
   4580c:	ldr	r3, [r5, #48]	; 0x30
   45810:	cmp	r3, #1
   45814:	beq	45944 <ReadNextStructField+0x174>
   45818:	ldr	r3, [fp]
   4581c:	mov	r2, #2
   45820:	mov	r1, #4
   45824:	add	r0, sp, #48	; 0x30
   45828:	bl	1520 <fread@plt>
   4582c:	str	r0, [sp, #12]
   45830:	ldr	r3, [fp, #20]
   45834:	cmp	r3, #0
   45838:	bne	46170 <ReadNextStructField+0x9a0>
   4583c:	ldrh	r3, [sp, #48]	; 0x30
   45840:	cmp	r3, #5
   45844:	bne	46184 <ReadNextStructField+0x9b4>
   45848:	ldr	r7, [sp, #52]	; 0x34
   4584c:	ldr	r3, [fp]
   45850:	mov	r2, #2
   45854:	mov	r1, #4
   45858:	add	r0, sp, #48	; 0x30
   4585c:	bl	1520 <fread@plt>
   45860:	ldr	r3, [sp, #12]
   45864:	add	r3, r3, r0
   45868:	str	r3, [sp, #12]
   4586c:	ldr	r3, [fp, #20]
   45870:	cmp	r3, #0
   45874:	bne	461b0 <ReadNextStructField+0x9e0>
   45878:	ldr	r2, [sp, #52]	; 0x34
   4587c:	str	r2, [sp, #16]
   45880:	udiv	r6, r2, r7
   45884:	mov	r3, #4
   45888:	str	r3, [r5, #12]
   4588c:	cmp	r2, r7
   45890:	bcs	461c4 <ReadNextStructField+0x9f4>
   45894:	ldr	r2, [r5, #52]	; 0x34
   45898:	mov	r3, #0
   4589c:	str	r3, [r2, #4]
   458a0:	ldr	r2, [r5, #52]	; 0x34
   458a4:	str	r3, [r2, #8]
   458a8:	mul	r3, r6, r7
   458ac:	ands	r3, r3, #7
   458b0:	bne	46278 <ReadNextStructField+0xaa8>
   458b4:	mov	r2, r6
   458b8:	ldr	r1, [sp, #116]	; 0x74
   458bc:	add	r0, sp, #112	; 0x70
   458c0:	bl	4a440 <SafeMul>
   458c4:	cmp	r0, #0
   458c8:	bne	4629c <ReadNextStructField+0xacc>
   458cc:	ldr	r2, [r5, #12]
   458d0:	ldr	r1, [sp, #112]	; 0x70
   458d4:	mov	r0, r5
   458d8:	bl	4a440 <SafeMul>
   458dc:	cmp	r0, #0
   458e0:	bne	462ac <ReadNextStructField+0xadc>
   458e4:	ldr	r0, [r5]
   458e8:	cmp	r0, #0
   458ec:	beq	46190 <ReadNextStructField+0x9c0>
   458f0:	bl	1544 <malloc@plt>
   458f4:	mov	r9, r0
   458f8:	str	r0, [sp, #24]
   458fc:	str	r0, [r5, #40]	; 0x28
   45900:	cmp	r0, #0
   45904:	beq	46190 <ReadNextStructField+0x9c0>
   45908:	ldr	r3, [sp, #116]	; 0x74
   4590c:	cmp	r3, #0
   45910:	beq	46394 <ReadNextStructField+0xbc4>
   45914:	lsl	sl, r6, #2
   45918:	mov	r8, #0
   4591c:	str	fp, [sp, #20]
   45920:	ldr	fp, [sp, #16]
   45924:	str	r5, [sp, #28]
   45928:	b	462d0 <ReadNextStructField+0xb00>
   4592c:	ldr	r0, [pc, #3264]	; 465f4 <ReadNextStructField+0xe24>
   45930:	add	r0, pc, r0
   45934:	bl	161c <Mat_Critical@plt>
   45938:	mov	r3, #0
   4593c:	str	r3, [sp, #12]
   45940:	b	46190 <ReadNextStructField+0x9c0>
   45944:	mov	r2, #64	; 0x40
   45948:	mov	r1, #0
   4594c:	add	r4, sp, #48	; 0x30
   45950:	mov	r0, r4
   45954:	bl	15f8 <memset@plt>
   45958:	mov	r2, r4
   4595c:	mov	r1, r5
   45960:	mov	r0, fp
   45964:	bl	3510 <InflateFieldNameLength>
   45968:	str	r0, [sp, #12]
   4596c:	ldr	r3, [fp, #20]
   45970:	cmp	r3, #0
   45974:	bne	45a78 <ReadNextStructField+0x2a8>
   45978:	ldrh	r3, [sp, #48]	; 0x30
   4597c:	cmp	r3, #5
   45980:	bne	45a8c <ReadNextStructField+0x2bc>
   45984:	ldr	sl, [sp, #52]	; 0x34
   45988:	add	r2, sp, #48	; 0x30
   4598c:	mov	r1, r5
   45990:	mov	r0, fp
   45994:	bl	36c8 <InflateFieldNamesTag>
   45998:	ldr	r3, [sp, #12]
   4599c:	add	r3, r3, r0
   459a0:	str	r3, [sp, #12]
   459a4:	ldr	r3, [fp, #20]
   459a8:	cmp	r3, #0
   459ac:	bne	45a9c <ReadNextStructField+0x2cc>
   459b0:	ldr	r3, [sp, #52]	; 0x34
   459b4:	str	r3, [sp, #16]
   459b8:	udiv	r7, r3, sl
   459bc:	mov	r3, #4
   459c0:	str	r3, [r5, #12]
   459c4:	mul	r0, r7, sl
   459c8:	ands	r4, r0, #7
   459cc:	rsbne	r4, r4, #8
   459d0:	ldr	r3, [sp, #16]
   459d4:	cmp	r3, sl
   459d8:	bcs	45ab0 <ReadNextStructField+0x2e0>
   459dc:	ldr	r2, [r5, #52]	; 0x34
   459e0:	mov	r3, #0
   459e4:	str	r3, [r2, #4]
   459e8:	ldr	r2, [r5, #52]	; 0x34
   459ec:	str	r3, [r2, #8]
   459f0:	mov	r2, r7
   459f4:	ldr	r1, [sp, #116]	; 0x74
   459f8:	add	r0, sp, #112	; 0x70
   459fc:	bl	4a440 <SafeMul>
   45a00:	cmp	r0, #0
   45a04:	bne	45b8c <ReadNextStructField+0x3bc>
   45a08:	ldr	r2, [r5, #12]
   45a0c:	ldr	r1, [sp, #112]	; 0x70
   45a10:	mov	r0, r5
   45a14:	bl	4a440 <SafeMul>
   45a18:	subs	r3, r0, #0
   45a1c:	str	r3, [sp, #24]
   45a20:	bne	45b9c <ReadNextStructField+0x3cc>
   45a24:	ldr	r3, [r5]
   45a28:	cmp	r3, #0
   45a2c:	beq	46190 <ReadNextStructField+0x9c0>
   45a30:	ldr	r1, [r5, #12]
   45a34:	ldr	r0, [sp, #112]	; 0x70
   45a38:	bl	140c <calloc@plt>
   45a3c:	mov	r9, r0
   45a40:	str	r0, [sp, #28]
   45a44:	str	r0, [r5, #40]	; 0x28
   45a48:	cmp	r0, #0
   45a4c:	beq	45bac <ReadNextStructField+0x3dc>
   45a50:	ldr	r3, [sp, #116]	; 0x74
   45a54:	cmp	r3, #0
   45a58:	beq	45c94 <ReadNextStructField+0x4c4>
   45a5c:	lsl	r3, r7, #2
   45a60:	mov	r8, #0
   45a64:	ldr	r6, [sp, #16]
   45a68:	str	fp, [sp, #32]
   45a6c:	mov	fp, r3
   45a70:	str	r5, [sp, #36]	; 0x24
   45a74:	b	45bd0 <ReadNextStructField+0x400>
   45a78:	add	r0, sp, #48	; 0x30
   45a7c:	bl	18d4 <Mat_uint32Swap>
   45a80:	add	r0, sp, #52	; 0x34
   45a84:	bl	18d4 <Mat_uint32Swap>
   45a88:	b	45978 <ReadNextStructField+0x1a8>
   45a8c:	ldr	r0, [pc, #2916]	; 465f8 <ReadNextStructField+0xe28>
   45a90:	add	r0, pc, r0
   45a94:	bl	161c <Mat_Critical@plt>
   45a98:	b	46190 <ReadNextStructField+0x9c0>
   45a9c:	add	r0, sp, #48	; 0x30
   45aa0:	bl	18d4 <Mat_uint32Swap>
   45aa4:	add	r0, sp, #52	; 0x34
   45aa8:	bl	18d4 <Mat_uint32Swap>
   45aac:	b	459b0 <ReadNextStructField+0x1e0>
   45ab0:	add	r0, r0, r4
   45ab4:	bl	1544 <malloc@plt>
   45ab8:	subs	r6, r0, #0
   45abc:	str	r6, [sp, #20]
   45ac0:	beq	459f0 <ReadNextStructField+0x220>
   45ac4:	str	r4, [sp, #4]
   45ac8:	str	sl, [sp]
   45acc:	mov	r3, r7
   45ad0:	mov	r2, r6
   45ad4:	mov	r1, r5
   45ad8:	mov	r0, fp
   45adc:	bl	3880 <InflateFieldNames>
   45ae0:	ldr	r3, [sp, #12]
   45ae4:	add	r3, r3, r0
   45ae8:	str	r3, [sp, #12]
   45aec:	ldr	r3, [r5, #52]	; 0x34
   45af0:	str	r7, [r3, #4]
   45af4:	ldr	r4, [r5, #52]	; 0x34
   45af8:	mov	r1, #4
   45afc:	mov	r0, r7
   45b00:	bl	140c <calloc@plt>
   45b04:	str	r0, [r4, #8]
   45b08:	ldr	r3, [r5, #52]	; 0x34
   45b0c:	ldr	r3, [r3, #8]
   45b10:	cmp	r3, #0
   45b14:	beq	45b80 <ReadNextStructField+0x3b0>
   45b18:	mov	r4, #0
   45b1c:	mov	r9, r4
   45b20:	b	45b34 <ReadNextStructField+0x364>
   45b24:	add	r4, r4, #1
   45b28:	add	r6, r6, sl
   45b2c:	cmp	r7, r4
   45b30:	bls	45b80 <ReadNextStructField+0x3b0>
   45b34:	ldr	r3, [r5, #52]	; 0x34
   45b38:	ldr	r8, [r3, #8]
   45b3c:	mov	r0, sl
   45b40:	bl	1544 <malloc@plt>
   45b44:	str	r0, [r8, r4, lsl #2]
   45b48:	ldr	r3, [r5, #52]	; 0x34
   45b4c:	ldr	r3, [r3, #8]
   45b50:	ldr	r0, [r3, r4, lsl #2]
   45b54:	cmp	r0, #0
   45b58:	beq	45b24 <ReadNextStructField+0x354>
   45b5c:	mov	r2, sl
   45b60:	mov	r1, r6
   45b64:	bl	1490 <memcpy@plt>
   45b68:	ldr	r3, [r5, #52]	; 0x34
   45b6c:	ldr	r3, [r3, #8]
   45b70:	ldr	r3, [r3, r4, lsl #2]
   45b74:	add	r3, r3, sl
   45b78:	strb	r9, [r3, #-1]
   45b7c:	b	45b24 <ReadNextStructField+0x354>
   45b80:	ldr	r0, [sp, #20]
   45b84:	bl	1478 <free@plt>
   45b88:	b	459f0 <ReadNextStructField+0x220>
   45b8c:	ldr	r0, [pc, #2664]	; 465fc <ReadNextStructField+0xe2c>
   45b90:	add	r0, pc, r0
   45b94:	bl	161c <Mat_Critical@plt>
   45b98:	b	46190 <ReadNextStructField+0x9c0>
   45b9c:	ldr	r0, [pc, #2652]	; 46600 <ReadNextStructField+0xe30>
   45ba0:	add	r0, pc, r0
   45ba4:	bl	161c <Mat_Critical@plt>
   45ba8:	b	46190 <ReadNextStructField+0x9c0>
   45bac:	ldr	r0, [pc, #2640]	; 46604 <ReadNextStructField+0xe34>
   45bb0:	add	r0, pc, r0
   45bb4:	bl	161c <Mat_Critical@plt>
   45bb8:	b	46190 <ReadNextStructField+0x9c0>
   45bbc:	add	r8, r8, #1
   45bc0:	ldr	r3, [sp, #116]	; 0x74
   45bc4:	add	r9, r9, fp
   45bc8:	cmp	r3, r8
   45bcc:	bls	45bf8 <ReadNextStructField+0x428>
   45bd0:	cmp	r6, sl
   45bd4:	movcs	r5, r9
   45bd8:	movcs	r4, #0
   45bdc:	bcc	45bbc <ReadNextStructField+0x3ec>
   45be0:	bl	1508 <Mat_VarCalloc@plt>
   45be4:	str	r0, [r5], #4
   45be8:	add	r4, r4, #1
   45bec:	cmp	r7, r4
   45bf0:	bhi	45be0 <ReadNextStructField+0x410>
   45bf4:	b	45bbc <ReadNextStructField+0x3ec>
   45bf8:	str	r3, [sp, #20]
   45bfc:	ldr	fp, [sp, #32]
   45c00:	ldr	r5, [sp, #36]	; 0x24
   45c04:	ldr	r3, [r5, #52]	; 0x34
   45c08:	ldr	r3, [r3, #8]
   45c0c:	cmp	r3, #0
   45c10:	beq	45c94 <ReadNextStructField+0x4c4>
   45c14:	ldr	r3, [sp, #20]
   45c18:	cmp	r3, #0
   45c1c:	beq	45c94 <ReadNextStructField+0x4c4>
   45c20:	lsl	r3, r7, #2
   45c24:	ldr	r8, [sp, #28]
   45c28:	mov	r9, #0
   45c2c:	str	fp, [sp, #32]
   45c30:	mov	fp, r3
   45c34:	b	45c7c <ReadNextStructField+0x4ac>
   45c38:	ldr	r6, [r8, r4, lsl #2]
   45c3c:	bl	14cc <strdup@plt>
   45c40:	str	r0, [r6, #36]	; 0x24
   45c44:	add	r4, r4, #1
   45c48:	cmp	r7, r4
   45c4c:	bls	45c68 <ReadNextStructField+0x498>
   45c50:	ldr	r3, [r5, #52]	; 0x34
   45c54:	ldr	r3, [r3, #8]
   45c58:	ldr	r0, [r3, r4, lsl #2]
   45c5c:	cmp	r0, #0
   45c60:	bne	45c38 <ReadNextStructField+0x468>
   45c64:	b	45c44 <ReadNextStructField+0x474>
   45c68:	add	r9, r9, #1
   45c6c:	add	r8, r8, fp
   45c70:	ldr	r3, [sp, #20]
   45c74:	cmp	r3, r9
   45c78:	beq	45c90 <ReadNextStructField+0x4c0>
   45c7c:	ldr	r3, [sp, #16]
   45c80:	cmp	r3, sl
   45c84:	movcs	r4, #0
   45c88:	bcs	45c50 <ReadNextStructField+0x480>
   45c8c:	b	45c68 <ReadNextStructField+0x498>
   45c90:	ldr	fp, [sp, #32]
   45c94:	ldr	r3, [sp, #112]	; 0x70
   45c98:	cmp	r3, #0
   45c9c:	beq	46190 <ReadNextStructField+0x9c0>
   45ca0:	mov	r4, #0
   45ca4:	ldr	r3, [pc, #2396]	; 46608 <ReadNextStructField+0xe38>
   45ca8:	add	r3, pc, r3
   45cac:	str	r3, [sp, #20]
   45cb0:	ldr	r3, [pc, #2388]	; 4660c <ReadNextStructField+0xe3c>
   45cb4:	add	r3, pc, r3
   45cb8:	str	r3, [sp, #16]
   45cbc:	ldr	r3, [pc, #2380]	; 46610 <ReadNextStructField+0xe40>
   45cc0:	add	r3, pc, r3
   45cc4:	str	r3, [sp, #32]
   45cc8:	ldr	r7, [sp, #28]
   45ccc:	ldr	r6, [sp, #12]
   45cd0:	b	45da8 <ReadNextStructField+0x5d8>
   45cd4:	add	r0, sp, #48	; 0x30
   45cd8:	bl	18d4 <Mat_uint32Swap>
   45cdc:	add	r0, sp, #52	; 0x34
   45ce0:	bl	18d4 <Mat_uint32Swap>
   45ce4:	b	45dc8 <ReadNextStructField+0x5f8>
   45ce8:	ldr	r0, [r7, r4, lsl #2]
   45cec:	bl	158c <Mat_VarFree@plt>
   45cf0:	mov	r3, #0
   45cf4:	str	r3, [r7, r4, lsl #2]
   45cf8:	mov	r1, r4
   45cfc:	ldr	r0, [pc, #2320]	; 46614 <ReadNextStructField+0xe44>
   45d00:	add	r0, pc, r0
   45d04:	bl	161c <Mat_Critical@plt>
   45d08:	b	45d98 <ReadNextStructField+0x5c8>
   45d0c:	ldr	r3, [r7, r4, lsl #2]
   45d10:	ldr	r0, [r3, #52]	; 0x34
   45d14:	bl	1478 <free@plt>
   45d18:	ldr	r3, [r7, r4, lsl #2]
   45d1c:	mov	r2, #0
   45d20:	str	r2, [r3, #52]	; 0x34
   45d24:	b	45d98 <ReadNextStructField+0x5c8>
   45d28:	add	r0, sp, #48	; 0x30
   45d2c:	bl	18d4 <Mat_uint32Swap>
   45d30:	add	r0, sp, #52	; 0x34
   45d34:	bl	18d4 <Mat_uint32Swap>
   45d38:	add	r0, sp, #56	; 0x38
   45d3c:	bl	18d4 <Mat_uint32Swap>
   45d40:	add	r0, sp, #60	; 0x3c
   45d44:	bl	18d4 <Mat_uint32Swap>
   45d48:	b	45e10 <ReadNextStructField+0x640>
   45d4c:	ldr	r0, [pc, #2244]	; 46618 <ReadNextStructField+0xe48>
   45d50:	add	r0, pc, r0
   45d54:	bl	161c <Mat_Critical@plt>
   45d58:	ldr	r3, [r5, #52]	; 0x34
   45d5c:	mov	r2, r9
   45d60:	ldr	r1, [r3, #12]
   45d64:	mov	r0, fp
   45d68:	bl	203c <InflateSkip>
   45d6c:	add	r6, r6, r0
   45d70:	ldr	r3, [r7, r4, lsl #2]
   45d74:	ldr	r3, [r3, #16]
   45d78:	cmp	r3, #17
   45d7c:	bne	45e74 <ReadNextStructField+0x6a4>
   45d80:	ldr	r3, [r5, #52]	; 0x34
   45d84:	mov	r2, r9
   45d88:	ldr	r1, [r3, #12]
   45d8c:	mov	r0, fp
   45d90:	bl	203c <InflateSkip>
   45d94:	add	r6, r6, r0
   45d98:	add	r4, r4, #1
   45d9c:	ldr	r3, [sp, #112]	; 0x70
   45da0:	cmp	r3, r4
   45da4:	bls	46168 <ReadNextStructField+0x998>
   45da8:	add	r2, sp, #48	; 0x30
   45dac:	mov	r1, r5
   45db0:	mov	r0, fp
   45db4:	bl	2544 <InflateVarTag>
   45db8:	add	r6, r6, r0
   45dbc:	ldr	r3, [fp, #20]
   45dc0:	cmp	r3, #0
   45dc4:	bne	45cd4 <ReadNextStructField+0x504>
   45dc8:	ldr	r3, [sp, #48]	; 0x30
   45dcc:	cmp	r3, #14
   45dd0:	bne	45ce8 <ReadNextStructField+0x518>
   45dd4:	ldr	r8, [sp, #52]	; 0x34
   45dd8:	cmp	r8, #0
   45ddc:	beq	45d0c <ReadNextStructField+0x53c>
   45de0:	ldr	r3, [r7, r4, lsl #2]
   45de4:	mov	r2, #1
   45de8:	str	r2, [r3, #48]	; 0x30
   45dec:	add	r2, sp, #48	; 0x30
   45df0:	mov	r1, r5
   45df4:	mov	r0, fp
   45df8:	bl	26fc <InflateArrayFlags>
   45dfc:	add	r6, r6, r0
   45e00:	sub	r9, r8, #16
   45e04:	ldr	r3, [fp, #20]
   45e08:	cmp	r3, #0
   45e0c:	bne	45d28 <ReadNextStructField+0x558>
   45e10:	ldr	r1, [sp, #48]	; 0x30
   45e14:	cmp	r1, #6
   45e18:	bne	45d4c <ReadNextStructField+0x57c>
   45e1c:	ldr	r3, [sp, #56]	; 0x38
   45e20:	uxtb	r2, r3
   45e24:	cmp	r2, #18
   45e28:	movcs	r2, #0
   45e2c:	ldr	r1, [r7, r4, lsl #2]
   45e30:	str	r2, [r1, #16]
   45e34:	ldr	r2, [r7, r4, lsl #2]
   45e38:	and	r1, r3, #2048	; 0x800
   45e3c:	str	r1, [r2, #20]
   45e40:	ldr	r2, [r7, r4, lsl #2]
   45e44:	and	r1, r3, #1024	; 0x400
   45e48:	str	r1, [r2, #24]
   45e4c:	ldr	r2, [r7, r4, lsl #2]
   45e50:	and	r3, r3, #512	; 0x200
   45e54:	str	r3, [r2, #28]
   45e58:	ldr	r3, [r7, r4, lsl #2]
   45e5c:	ldr	r2, [r3, #16]
   45e60:	cmp	r2, #5
   45e64:	bne	45d70 <ReadNextStructField+0x5a0>
   45e68:	ldr	r2, [sp, #60]	; 0x3c
   45e6c:	str	r2, [r3]
   45e70:	b	45d70 <ReadNextStructField+0x5a0>
   45e74:	mov	r3, #0
   45e78:	str	r3, [sp, #44]	; 0x2c
   45e7c:	add	r3, sp, #44	; 0x2c
   45e80:	str	r3, [sp]
   45e84:	mov	r3, #64	; 0x40
   45e88:	add	r2, sp, #48	; 0x30
   45e8c:	mov	r1, r5
   45e90:	mov	r0, fp
   45e94:	bl	28b4 <InflateRankDims>
   45e98:	add	r6, r6, r0
   45e9c:	ldr	r3, [sp, #44]	; 0x2c
   45ea0:	cmp	r3, #0
   45ea4:	addeq	r3, sp, #56	; 0x38
   45ea8:	streq	r3, [sp, #44]	; 0x2c
   45eac:	ldreq	r3, [sp, #24]
   45eb0:	movne	r3, #1
   45eb4:	str	r3, [sp, #12]
   45eb8:	sub	r8, r8, #24
   45ebc:	ldr	r3, [fp, #20]
   45ec0:	cmp	r3, #0
   45ec4:	bne	45fec <ReadNextStructField+0x81c>
   45ec8:	ldr	r3, [sp, #48]	; 0x30
   45ecc:	cmp	r3, #5
   45ed0:	beq	46000 <ReadNextStructField+0x830>
   45ed4:	ldr	r3, [sp, #12]
   45ed8:	cmp	r3, #0
   45edc:	bne	460d4 <ReadNextStructField+0x904>
   45ee0:	add	r2, sp, #48	; 0x30
   45ee4:	mov	r1, r5
   45ee8:	mov	r0, fp
   45eec:	bl	2c70 <InflateVarNameTag>
   45ef0:	add	r6, r6, r0
   45ef4:	sub	r9, r8, #8
   45ef8:	ldr	r3, [r7, r4, lsl #2]
   45efc:	ldr	r8, [r3, #52]	; 0x34
   45f00:	mov	r1, #56	; 0x38
   45f04:	mov	r0, #1
   45f08:	bl	140c <calloc@plt>
   45f0c:	str	r0, [r8, #12]
   45f10:	ldr	r3, [r7, r4, lsl #2]
   45f14:	ldr	r3, [r3, #52]	; 0x34
   45f18:	ldr	r0, [r3, #12]
   45f1c:	cmp	r0, #0
   45f20:	beq	4615c <ReadNextStructField+0x98c>
   45f24:	ldr	r3, [r5, #52]	; 0x34
   45f28:	ldr	r1, [r3, #12]
   45f2c:	bl	15bc <inflateCopy@plt>
   45f30:	cmp	r0, #0
   45f34:	bne	46148 <ReadNextStructField+0x978>
   45f38:	ldr	r3, [r7, r4, lsl #2]
   45f3c:	ldr	r8, [r3, #52]	; 0x34
   45f40:	ldr	r0, [fp]
   45f44:	bl	14b4 <ftell@plt>
   45f48:	str	r0, [r8]
   45f4c:	ldr	r3, [r7, r4, lsl #2]
   45f50:	ldr	r2, [r3, #52]	; 0x34
   45f54:	ldr	r3, [r2]
   45f58:	cmn	r3, #1
   45f5c:	beq	46128 <ReadNextStructField+0x958>
   45f60:	ldr	r1, [r5, #52]	; 0x34
   45f64:	ldr	r1, [r1, #12]
   45f68:	ldr	r1, [r1, #4]
   45f6c:	sub	r3, r3, r1
   45f70:	str	r3, [r2]
   45f74:	ldr	r1, [r7, r4, lsl #2]
   45f78:	ldr	r3, [r1, #16]
   45f7c:	cmp	r3, #2
   45f80:	beq	460e0 <ReadNextStructField+0x910>
   45f84:	cmp	r3, #1
   45f88:	beq	460f0 <ReadNextStructField+0x920>
   45f8c:	cmp	r9, #32768	; 0x8000
   45f90:	ble	46100 <ReadNextStructField+0x930>
   45f94:	ldr	r3, [r7, r4, lsl #2]
   45f98:	ldr	r3, [r3, #52]	; 0x34
   45f9c:	mov	r2, #0
   45fa0:	ldr	r1, [r3]
   45fa4:	ldr	r0, [fp]
   45fa8:	bl	1694 <fseek@plt>
   45fac:	ldr	r2, [r7, r4, lsl #2]
   45fb0:	ldr	r3, [r2, #52]	; 0x34
   45fb4:	ldr	r1, [r3, #16]
   45fb8:	cmp	r1, #0
   45fbc:	beq	46134 <ReadNextStructField+0x964>
   45fc0:	ldr	r0, [r3, #12]
   45fc4:	bl	15b0 <inflateEnd@plt>
   45fc8:	ldr	r3, [r7, r4, lsl #2]
   45fcc:	ldr	r3, [r3, #52]	; 0x34
   45fd0:	ldr	r0, [r3, #12]
   45fd4:	bl	1478 <free@plt>
   45fd8:	ldr	r3, [r7, r4, lsl #2]
   45fdc:	ldr	r3, [r3, #52]	; 0x34
   45fe0:	mov	r2, #0
   45fe4:	str	r2, [r3, #12]
   45fe8:	b	45d80 <ReadNextStructField+0x5b0>
   45fec:	add	r0, sp, #48	; 0x30
   45ff0:	bl	18d4 <Mat_uint32Swap>
   45ff4:	add	r0, sp, #52	; 0x34
   45ff8:	bl	18d4 <Mat_uint32Swap>
   45ffc:	b	45ec8 <ReadNextStructField+0x6f8>
   46000:	ldr	r3, [r7, r4, lsl #2]
   46004:	ldr	r2, [sp, #52]	; 0x34
   46008:	str	r2, [r3, #4]
   4600c:	ldr	r2, [r7, r4, lsl #2]
   46010:	ldr	r3, [r2, #4]
   46014:	sub	r8, r8, r3
   46018:	add	r1, r3, #3
   4601c:	cmp	r3, #0
   46020:	movlt	r3, r1
   46024:	asr	r3, r3, #2
   46028:	str	r3, [r2, #4]
   4602c:	ldr	r9, [r7, r4, lsl #2]
   46030:	ldr	r0, [r9, #4]
   46034:	lsl	r0, r0, #2
   46038:	bl	1544 <malloc@plt>
   4603c:	str	r0, [r9, #32]
   46040:	ldr	r3, [fp, #20]
   46044:	cmp	r3, #0
   46048:	bne	46084 <ReadNextStructField+0x8b4>
   4604c:	ldr	r2, [r7, r4, lsl #2]
   46050:	ldr	r1, [r2, #4]
   46054:	cmp	r1, #0
   46058:	ble	460c0 <ReadNextStructField+0x8f0>
   4605c:	ldr	r1, [sp, #44]	; 0x2c
   46060:	ldr	r1, [r1, r3, lsl #2]
   46064:	ldr	r2, [r2, #32]
   46068:	str	r1, [r2, r3, lsl #2]
   4606c:	add	r3, r3, #1
   46070:	ldr	r2, [r7, r4, lsl #2]
   46074:	ldr	r1, [r2, #4]
   46078:	cmp	r1, r3
   4607c:	bgt	4605c <ReadNextStructField+0x88c>
   46080:	b	460c0 <ReadNextStructField+0x8f0>
   46084:	ldr	r3, [r7, r4, lsl #2]
   46088:	ldr	r2, [r3, #4]
   4608c:	cmp	r2, #0
   46090:	ble	460c0 <ReadNextStructField+0x8f0>
   46094:	ldr	r9, [sp, #24]
   46098:	ldr	sl, [r3, #32]
   4609c:	ldr	r0, [sp, #44]	; 0x2c
   460a0:	add	r0, r0, r9, lsl #2
   460a4:	bl	18d4 <Mat_uint32Swap>
   460a8:	str	r0, [sl, r9, lsl #2]
   460ac:	add	r9, r9, #1
   460b0:	ldr	r3, [r7, r4, lsl #2]
   460b4:	ldr	r2, [r3, #4]
   460b8:	cmp	r2, r9
   460bc:	bgt	46098 <ReadNextStructField+0x8c8>
   460c0:	ldr	r3, [r7, r4, lsl #2]
   460c4:	ldr	r3, [r3, #4]
   460c8:	tst	r3, #1
   460cc:	subne	r8, r8, #4
   460d0:	b	45ed4 <ReadNextStructField+0x704>
   460d4:	ldr	r0, [sp, #44]	; 0x2c
   460d8:	bl	1478 <free@plt>
   460dc:	b	45ee0 <ReadNextStructField+0x710>
   460e0:	mov	r0, fp
   460e4:	bl	457d0 <ReadNextStructField>
   460e8:	add	r6, r6, r0
   460ec:	b	45f94 <ReadNextStructField+0x7c4>
   460f0:	mov	r0, fp
   460f4:	bl	44d90 <ReadNextCell>
   460f8:	add	r6, r6, r0
   460fc:	b	45f94 <ReadNextStructField+0x7c4>
   46100:	mov	r0, fp
   46104:	bl	43264 <Mat_VarRead5>
   46108:	ldr	r3, [r7, r4, lsl #2]
   4610c:	ldr	r2, [r3, #52]	; 0x34
   46110:	ldr	r3, [r3, #40]	; 0x28
   46114:	str	r3, [r2, #16]
   46118:	ldr	r3, [r7, r4, lsl #2]
   4611c:	mov	r2, #0
   46120:	str	r2, [r3, #40]	; 0x28
   46124:	b	45f94 <ReadNextStructField+0x7c4>
   46128:	ldr	r0, [sp, #32]
   4612c:	bl	161c <Mat_Critical@plt>
   46130:	b	45fac <ReadNextStructField+0x7dc>
   46134:	ldr	r2, [r2, #16]
   46138:	sub	r2, r2, #1
   4613c:	cmp	r2, #1
   46140:	bls	45fc0 <ReadNextStructField+0x7f0>
   46144:	b	45d80 <ReadNextStructField+0x5b0>
   46148:	bl	14f0 <zError@plt>
   4614c:	mov	r1, r0
   46150:	ldr	r0, [sp, #16]
   46154:	bl	161c <Mat_Critical@plt>
   46158:	b	45d80 <ReadNextStructField+0x5b0>
   4615c:	ldr	r0, [sp, #20]
   46160:	bl	161c <Mat_Critical@plt>
   46164:	b	45d80 <ReadNextStructField+0x5b0>
   46168:	str	r6, [sp, #12]
   4616c:	b	46190 <ReadNextStructField+0x9c0>
   46170:	add	r0, sp, #48	; 0x30
   46174:	bl	18d4 <Mat_uint32Swap>
   46178:	add	r0, sp, #52	; 0x34
   4617c:	bl	18d4 <Mat_uint32Swap>
   46180:	b	4583c <ReadNextStructField+0x6c>
   46184:	ldr	r0, [pc, #1168]	; 4661c <ReadNextStructField+0xe4c>
   46188:	add	r0, pc, r0
   4618c:	bl	161c <Mat_Critical@plt>
   46190:	ldr	r0, [sp, #12]
   46194:	add	sp, sp, #124	; 0x7c
   46198:	ldrd	r4, [sp]
   4619c:	ldrd	r6, [sp, #8]
   461a0:	ldrd	r8, [sp, #16]
   461a4:	ldrd	sl, [sp, #24]
   461a8:	add	sp, sp, #32
   461ac:	pop	{pc}		; (ldr pc, [sp], #4)
   461b0:	add	r0, sp, #48	; 0x30
   461b4:	bl	18d4 <Mat_uint32Swap>
   461b8:	add	r0, sp, #52	; 0x34
   461bc:	bl	18d4 <Mat_uint32Swap>
   461c0:	b	45878 <ReadNextStructField+0xa8>
   461c4:	ldr	r3, [r5, #52]	; 0x34
   461c8:	str	r6, [r3, #4]
   461cc:	ldr	r4, [r5, #52]	; 0x34
   461d0:	mov	r1, #4
   461d4:	mov	r0, r6
   461d8:	bl	140c <calloc@plt>
   461dc:	str	r0, [r4, #8]
   461e0:	ldr	r3, [r5, #52]	; 0x34
   461e4:	ldr	r3, [r3, #8]
   461e8:	cmp	r3, #0
   461ec:	beq	458a8 <ReadNextStructField+0xd8>
   461f0:	mov	r4, #0
   461f4:	mov	sl, #1
   461f8:	mov	r9, r4
   461fc:	str	fp, [sp, #20]
   46200:	ldr	fp, [sp, #12]
   46204:	b	46214 <ReadNextStructField+0xa44>
   46208:	add	r4, r4, #1
   4620c:	cmp	r6, r4
   46210:	bls	4626c <ReadNextStructField+0xa9c>
   46214:	ldr	r3, [r5, #52]	; 0x34
   46218:	ldr	r8, [r3, #8]
   4621c:	mov	r0, r7
   46220:	bl	1544 <malloc@plt>
   46224:	str	r0, [r8, r4, lsl #2]
   46228:	ldr	r3, [r5, #52]	; 0x34
   4622c:	ldr	r3, [r3, #8]
   46230:	ldr	r0, [r3, r4, lsl #2]
   46234:	cmp	r0, #0
   46238:	beq	46208 <ReadNextStructField+0xa38>
   4623c:	ldr	r3, [sp, #20]
   46240:	ldr	r3, [r3]
   46244:	mov	r2, r7
   46248:	mov	r1, sl
   4624c:	bl	1520 <fread@plt>
   46250:	add	fp, fp, r0
   46254:	ldr	r3, [r5, #52]	; 0x34
   46258:	ldr	r3, [r3, #8]
   4625c:	ldr	r3, [r3, r4, lsl #2]
   46260:	add	r3, r3, r7
   46264:	strb	r9, [r3, #-1]
   46268:	b	46208 <ReadNextStructField+0xa38>
   4626c:	str	fp, [sp, #12]
   46270:	ldr	fp, [sp, #20]
   46274:	b	458a8 <ReadNextStructField+0xd8>
   46278:	rsb	r4, r3, #8
   4627c:	mov	r2, #1
   46280:	mov	r1, r4
   46284:	ldr	r0, [fp]
   46288:	bl	1694 <fseek@plt>
   4628c:	ldr	r3, [sp, #12]
   46290:	add	r3, r3, r4
   46294:	str	r3, [sp, #12]
   46298:	b	458b4 <ReadNextStructField+0xe4>
   4629c:	ldr	r0, [pc, #892]	; 46620 <ReadNextStructField+0xe50>
   462a0:	add	r0, pc, r0
   462a4:	bl	161c <Mat_Critical@plt>
   462a8:	b	46190 <ReadNextStructField+0x9c0>
   462ac:	ldr	r0, [pc, #880]	; 46624 <ReadNextStructField+0xe54>
   462b0:	add	r0, pc, r0
   462b4:	bl	161c <Mat_Critical@plt>
   462b8:	b	46190 <ReadNextStructField+0x9c0>
   462bc:	add	r8, r8, #1
   462c0:	ldr	r3, [sp, #116]	; 0x74
   462c4:	add	r9, r9, sl
   462c8:	cmp	r3, r8
   462cc:	bls	462f8 <ReadNextStructField+0xb28>
   462d0:	cmp	fp, r7
   462d4:	movcs	r5, r9
   462d8:	movcs	r4, #0
   462dc:	bcc	462bc <ReadNextStructField+0xaec>
   462e0:	bl	1508 <Mat_VarCalloc@plt>
   462e4:	str	r0, [r5], #4
   462e8:	add	r4, r4, #1
   462ec:	cmp	r6, r4
   462f0:	bhi	462e0 <ReadNextStructField+0xb10>
   462f4:	b	462bc <ReadNextStructField+0xaec>
   462f8:	mov	sl, r3
   462fc:	ldr	fp, [sp, #20]
   46300:	ldr	r5, [sp, #28]
   46304:	ldr	r3, [r5, #52]	; 0x34
   46308:	ldr	r3, [r3, #8]
   4630c:	cmp	r3, #0
   46310:	beq	46394 <ReadNextStructField+0xbc4>
   46314:	cmp	sl, #0
   46318:	beq	46394 <ReadNextStructField+0xbc4>
   4631c:	lsl	r3, r6, #2
   46320:	str	r3, [sp, #20]
   46324:	ldr	r9, [sp, #24]
   46328:	mov	r3, #0
   4632c:	str	fp, [sp, #28]
   46330:	mov	fp, r3
   46334:	b	4637c <ReadNextStructField+0xbac>
   46338:	ldr	r8, [r9, r4, lsl #2]
   4633c:	bl	14cc <strdup@plt>
   46340:	str	r0, [r8, #36]	; 0x24
   46344:	add	r4, r4, #1
   46348:	cmp	r6, r4
   4634c:	bls	46368 <ReadNextStructField+0xb98>
   46350:	ldr	r3, [r5, #52]	; 0x34
   46354:	ldr	r3, [r3, #8]
   46358:	ldr	r0, [r3, r4, lsl #2]
   4635c:	cmp	r0, #0
   46360:	bne	46338 <ReadNextStructField+0xb68>
   46364:	b	46344 <ReadNextStructField+0xb74>
   46368:	add	fp, fp, #1
   4636c:	ldr	r3, [sp, #20]
   46370:	add	r9, r9, r3
   46374:	cmp	sl, fp
   46378:	beq	46390 <ReadNextStructField+0xbc0>
   4637c:	ldr	r3, [sp, #16]
   46380:	cmp	r3, r7
   46384:	movcs	r4, #0
   46388:	bcs	46350 <ReadNextStructField+0xb80>
   4638c:	b	46368 <ReadNextStructField+0xb98>
   46390:	ldr	fp, [sp, #28]
   46394:	ldr	r3, [sp, #112]	; 0x70
   46398:	cmp	r3, #0
   4639c:	beq	46190 <ReadNextStructField+0x9c0>
   463a0:	mov	r4, #0
   463a4:	add	r6, sp, #48	; 0x30
   463a8:	mov	r9, #2
   463ac:	ldr	r7, [pc, #628]	; 46628 <ReadNextStructField+0xe58>
   463b0:	add	r7, pc, r7
   463b4:	ldr	r8, [sp, #24]
   463b8:	ldr	r5, [sp, #12]
   463bc:	str	r7, [sp, #12]
   463c0:	b	464ec <ReadNextStructField+0xd1c>
   463c4:	mov	r0, r6
   463c8:	bl	18d4 <Mat_uint32Swap>
   463cc:	add	r0, sp, #52	; 0x34
   463d0:	bl	18d4 <Mat_uint32Swap>
   463d4:	b	46510 <ReadNextStructField+0xd40>
   463d8:	str	r5, [sp, #12]
   463dc:	ldr	r5, [sp, #24]
   463e0:	ldr	r0, [r5, r4, lsl #2]
   463e4:	bl	158c <Mat_VarFree@plt>
   463e8:	mov	r3, #0
   463ec:	str	r3, [r5, r4, lsl #2]
   463f0:	ldr	r0, [fp]
   463f4:	bl	14b4 <ftell@plt>
   463f8:	mov	r2, r0
   463fc:	mov	r1, r4
   46400:	ldr	r0, [pc, #548]	; 4662c <ReadNextStructField+0xe5c>
   46404:	add	r0, pc, r0
   46408:	bl	161c <Mat_Critical@plt>
   4640c:	b	46190 <ReadNextStructField+0x9c0>
   46410:	ldr	r3, [r8, r4, lsl #2]
   46414:	ldr	r0, [r3, #52]	; 0x34
   46418:	bl	1478 <free@plt>
   4641c:	ldr	r3, [r8, r4, lsl #2]
   46420:	mov	r2, #0
   46424:	str	r2, [r3, #52]	; 0x34
   46428:	b	464dc <ReadNextStructField+0xd0c>
   4642c:	mov	r0, r6
   46430:	bl	18d4 <Mat_uint32Swap>
   46434:	add	r0, sp, #52	; 0x34
   46438:	bl	18d4 <Mat_uint32Swap>
   4643c:	add	r0, sp, #56	; 0x38
   46440:	bl	18d4 <Mat_uint32Swap>
   46444:	add	r0, sp, #60	; 0x3c
   46448:	bl	18d4 <Mat_uint32Swap>
   4644c:	add	r0, sp, #64	; 0x40
   46450:	bl	18d4 <Mat_uint32Swap>
   46454:	add	r0, sp, #68	; 0x44
   46458:	bl	18d4 <Mat_uint32Swap>
   4645c:	b	4654c <ReadNextStructField+0xd7c>
   46460:	ldr	r3, [sp, #56]	; 0x38
   46464:	uxtb	r2, r3
   46468:	cmp	r2, #18
   4646c:	movcs	r2, #0
   46470:	ldr	r1, [r8, r4, lsl #2]
   46474:	str	r2, [r1, #16]
   46478:	ldr	r2, [r8, r4, lsl #2]
   4647c:	and	r1, r3, #2048	; 0x800
   46480:	str	r1, [r2, #20]
   46484:	ldr	r2, [r8, r4, lsl #2]
   46488:	and	r1, r3, #1024	; 0x400
   4648c:	str	r1, [r2, #24]
   46490:	ldr	r2, [r8, r4, lsl #2]
   46494:	and	r3, r3, #512	; 0x200
   46498:	str	r3, [r2, #28]
   4649c:	ldr	r3, [r8, r4, lsl #2]
   464a0:	ldr	r2, [r3, #16]
   464a4:	cmp	r2, #5
   464a8:	ldreq	r2, [sp, #60]	; 0x3c
   464ac:	streq	r2, [r3]
   464b0:	b	4655c <ReadNextStructField+0xd8c>
   464b4:	mov	r0, fp
   464b8:	bl	457d0 <ReadNextStructField>
   464bc:	add	r5, r5, r0
   464c0:	ldr	r3, [r8, r4, lsl #2]
   464c4:	ldr	r3, [r3, #52]	; 0x34
   464c8:	ldr	r1, [r3]
   464cc:	mov	r2, #0
   464d0:	add	r1, r7, r1
   464d4:	ldr	r0, [fp]
   464d8:	bl	1694 <fseek@plt>
   464dc:	add	r4, r4, #1
   464e0:	ldr	r3, [sp, #112]	; 0x70
   464e4:	cmp	r3, r4
   464e8:	bls	465ec <ReadNextStructField+0xe1c>
   464ec:	ldr	r3, [fp]
   464f0:	mov	r2, r9
   464f4:	mov	r1, #4
   464f8:	mov	r0, r6
   464fc:	bl	1520 <fread@plt>
   46500:	add	r5, r5, r0
   46504:	ldr	r3, [fp, #20]
   46508:	cmp	r3, #0
   4650c:	bne	463c4 <ReadNextStructField+0xbf4>
   46510:	ldr	r7, [sp, #52]	; 0x34
   46514:	ldr	r3, [sp, #48]	; 0x30
   46518:	cmp	r3, #14
   4651c:	bne	463d8 <ReadNextStructField+0xc08>
   46520:	cmp	r7, #0
   46524:	beq	46410 <ReadNextStructField+0xc40>
   46528:	ldr	r3, [fp]
   4652c:	mov	r2, #6
   46530:	mov	r1, #4
   46534:	mov	r0, r6
   46538:	bl	1520 <fread@plt>
   4653c:	add	r5, r5, r0
   46540:	ldr	r3, [fp, #20]
   46544:	cmp	r3, #0
   46548:	bne	4642c <ReadNextStructField+0xc5c>
   4654c:	sub	r7, r7, #24
   46550:	ldr	r3, [sp, #48]	; 0x30
   46554:	cmp	r3, #6
   46558:	beq	46460 <ReadNextStructField+0xc90>
   4655c:	ldr	r3, [sp, #68]	; 0x44
   46560:	ldr	r2, [sp, #64]	; 0x40
   46564:	ldr	r1, [r8, r4, lsl #2]
   46568:	mov	r0, fp
   4656c:	bl	40aac <ReadRankDims>
   46570:	add	r5, r5, r0
   46574:	sub	r7, r7, r0
   46578:	ldr	r3, [fp]
   4657c:	mov	r2, #8
   46580:	mov	r1, #1
   46584:	mov	r0, r6
   46588:	bl	1520 <fread@plt>
   4658c:	add	r5, r5, r0
   46590:	sub	r7, r7, #8
   46594:	ldr	r3, [r8, r4, lsl #2]
   46598:	ldr	sl, [r3, #52]	; 0x34
   4659c:	ldr	r0, [fp]
   465a0:	bl	14b4 <ftell@plt>
   465a4:	str	r0, [sl]
   465a8:	ldr	r1, [r8, r4, lsl #2]
   465ac:	ldr	r3, [r1, #52]	; 0x34
   465b0:	ldr	r3, [r3]
   465b4:	cmn	r3, #1
   465b8:	beq	465e0 <ReadNextStructField+0xe10>
   465bc:	ldr	r3, [r1, #16]
   465c0:	cmp	r3, #2
   465c4:	beq	464b4 <ReadNextStructField+0xce4>
   465c8:	cmp	r3, #1
   465cc:	bne	464c0 <ReadNextStructField+0xcf0>
   465d0:	mov	r0, fp
   465d4:	bl	44d90 <ReadNextCell>
   465d8:	add	r5, r5, r0
   465dc:	b	464c0 <ReadNextStructField+0xcf0>
   465e0:	ldr	r0, [sp, #12]
   465e4:	bl	161c <Mat_Critical@plt>
   465e8:	b	464dc <ReadNextStructField+0xd0c>
   465ec:	str	r5, [sp, #12]
   465f0:	b	46190 <ReadNextStructField+0x9c0>
   465f4:	.word	0x00009bb4
   465f8:	.word	0x00009d24
   465fc:	.word	0x00009954
   46600:	.word	0x00009944
   46604:	.word	0x00009954
   46608:	.word	0x00009ac8
   4660c:	.word	0x00009a9c
   46610:	.word	0x00009768
   46614:	.word	0x00009ad4
   46618:	.word	0x000099d0
   4661c:	.word	0x0000962c
   46620:	.word	0x00009244
   46624:	.word	0x00009234
   46628:	.word	0x00009078
   4662c:	.word	0x00009400

00046630 <Mat_VarReadData5>:
   46630:	strd	r4, [sp, #-36]!	; 0xffffffdc
   46634:	strd	r6, [sp, #8]
   46638:	strd	r8, [sp, #16]
   4663c:	strd	sl, [sp, #24]
   46640:	str	lr, [sp, #32]
   46644:	sub	sp, sp, #92	; 0x5c
   46648:	mov	r6, r0
   4664c:	mov	r4, r1
   46650:	mov	sl, r2
   46654:	mov	r7, r3
   46658:	ldr	r8, [sp, #128]	; 0x80
   4665c:	ldr	r9, [sp, #132]	; 0x84
   46660:	ldr	r3, [r1, #52]	; 0x34
   46664:	mov	r2, #0
   46668:	ldr	r1, [r3]
   4666c:	ldr	r0, [r0]
   46670:	bl	1694 <fseek@plt>
   46674:	ldr	r5, [r4, #48]	; 0x30
   46678:	cmp	r5, #0
   4667c:	beq	4676c <Mat_VarReadData5+0x13c>
   46680:	cmp	r5, #1
   46684:	movne	r5, #0
   46688:	beq	4680c <Mat_VarReadData5+0x1dc>
   4668c:	ldr	r3, [r4, #4]
   46690:	cmp	r3, #2
   46694:	beq	469a8 <Mat_VarReadData5+0x378>
   46698:	ldr	fp, [r4, #48]	; 0x30
   4669c:	cmp	fp, #0
   466a0:	bne	46ce4 <Mat_VarReadData5+0x6b4>
   466a4:	ldr	r2, [r4, #20]
   466a8:	cmp	r2, #0
   466ac:	beq	46cb4 <Mat_VarReadData5+0x684>
   466b0:	str	r9, [sp, #16]
   466b4:	str	r8, [sp, #12]
   466b8:	str	r7, [sp, #8]
   466bc:	ldr	r2, [r4, #32]
   466c0:	str	r2, [sp, #4]
   466c4:	str	r3, [sp]
   466c8:	ldr	r3, [r4, #8]
   466cc:	ldr	r2, [r4, #16]
   466d0:	ldr	r1, [sl]
   466d4:	mov	r0, r6
   466d8:	bl	16764 <ReadDataSlabN>
   466dc:	ldr	r3, [r4, #52]	; 0x34
   466e0:	ldr	r1, [r3]
   466e4:	mov	r2, #0
   466e8:	add	r1, r5, r1
   466ec:	ldr	r0, [r6]
   466f0:	bl	1694 <fseek@plt>
   466f4:	ldr	r3, [r6]
   466f8:	mov	r2, #2
   466fc:	mov	r1, #4
   46700:	add	r0, sp, #80	; 0x50
   46704:	bl	1520 <fread@plt>
   46708:	ldr	r3, [r6, #20]
   4670c:	cmp	r3, #0
   46710:	bne	46c8c <Mat_VarReadData5+0x65c>
   46714:	ldr	r3, [sp, #80]	; 0x50
   46718:	uxtb	r2, r3
   4671c:	cmp	r2, #24
   46720:	movle	fp, r2
   46724:	str	fp, [r4, #8]
   46728:	lsr	r3, r3, #16
   4672c:	lsl	r3, r3, #16
   46730:	cmp	r3, #0
   46734:	bne	46ca0 <Mat_VarReadData5+0x670>
   46738:	str	r9, [sp, #16]
   4673c:	str	r8, [sp, #12]
   46740:	str	r7, [sp, #8]
   46744:	ldr	r3, [r4, #32]
   46748:	str	r3, [sp, #4]
   4674c:	ldr	r3, [r4, #4]
   46750:	str	r3, [sp]
   46754:	ldr	r3, [r4, #8]
   46758:	ldr	r2, [r4, #16]
   4675c:	ldr	r1, [sl, #4]
   46760:	mov	r0, r6
   46764:	bl	16764 <ReadDataSlabN>
   46768:	b	46cec <Mat_VarReadData5+0x6bc>
   4676c:	ldr	r3, [r6]
   46770:	mov	r2, #2
   46774:	mov	r1, #4
   46778:	add	r0, sp, #80	; 0x50
   4677c:	bl	1520 <fread@plt>
   46780:	ldr	r3, [r6, #20]
   46784:	cmp	r3, #0
   46788:	bne	467dc <Mat_VarReadData5+0x1ac>
   4678c:	ldr	r3, [sp, #80]	; 0x50
   46790:	uxtb	r2, r3
   46794:	cmp	r2, #24
   46798:	movle	r5, r2
   4679c:	str	r5, [r4, #8]
   467a0:	lsr	r3, r3, #16
   467a4:	lsl	r3, r3, #16
   467a8:	cmp	r3, #0
   467ac:	bne	467f0 <Mat_VarReadData5+0x1c0>
   467b0:	ldr	r5, [sp, #84]	; 0x54
   467b4:	add	r5, r5, #8
   467b8:	tst	r5, #7
   467bc:	beq	4668c <Mat_VarReadData5+0x5c>
   467c0:	rsbs	r2, r5, #0
   467c4:	and	r3, r5, #7
   467c8:	and	r2, r2, #7
   467cc:	rsbpl	r3, r2, #0
   467d0:	rsb	r3, r3, #8
   467d4:	add	r5, r5, r3
   467d8:	b	4668c <Mat_VarReadData5+0x5c>
   467dc:	add	r0, sp, #80	; 0x50
   467e0:	bl	18a4 <Mat_int32Swap>
   467e4:	add	r0, sp, #84	; 0x54
   467e8:	bl	18a4 <Mat_int32Swap>
   467ec:	b	4678c <Mat_VarReadData5+0x15c>
   467f0:	mov	r2, #1
   467f4:	mvn	r1, #3
   467f8:	ldr	r0, [r6]
   467fc:	bl	1694 <fseek@plt>
   46800:	ldrsh	r5, [sp, #82]	; 0x52
   46804:	add	r5, r5, #4
   46808:	b	467b8 <Mat_VarReadData5+0x188>
   4680c:	ldr	r3, [r4, #52]	; 0x34
   46810:	ldr	r5, [r3, #16]
   46814:	cmp	r5, #0
   46818:	beq	468e8 <Mat_VarReadData5+0x2b8>
   4681c:	ldr	r3, [r4, #20]
   46820:	cmp	r3, #0
   46824:	beq	468a8 <Mat_VarReadData5+0x278>
   46828:	ldr	r0, [r5]
   4682c:	ldr	r3, [r4]
   46830:	str	r3, [sp, #20]
   46834:	ldr	r3, [r4, #4]
   46838:	str	r3, [sp, #16]
   4683c:	str	r9, [sp, #12]
   46840:	str	r8, [sp, #8]
   46844:	str	r7, [sp, #4]
   46848:	ldr	r3, [r4, #32]
   4684c:	str	r3, [sp]
   46850:	ldr	r3, [r4, #8]
   46854:	ldr	r2, [r4, #16]
   46858:	ldr	r1, [sl]
   4685c:	bl	215e4 <GetDataSlab>
   46860:	subs	fp, r0, #0
   46864:	bne	46e28 <Mat_VarReadData5+0x7f8>
   46868:	ldr	r0, [r5, #4]
   4686c:	ldr	r3, [r4]
   46870:	str	r3, [sp, #20]
   46874:	ldr	r3, [r4, #4]
   46878:	str	r3, [sp, #16]
   4687c:	str	r9, [sp, #12]
   46880:	str	r8, [sp, #8]
   46884:	str	r7, [sp, #4]
   46888:	ldr	r3, [r4, #32]
   4688c:	str	r3, [sp]
   46890:	ldr	r3, [r4, #8]
   46894:	ldr	r2, [r4, #16]
   46898:	ldr	r1, [sl, #4]
   4689c:	bl	215e4 <GetDataSlab>
   468a0:	mov	fp, r0
   468a4:	b	46e28 <Mat_VarReadData5+0x7f8>
   468a8:	ldr	r3, [r4]
   468ac:	str	r3, [sp, #20]
   468b0:	ldr	r3, [r4, #4]
   468b4:	str	r3, [sp, #16]
   468b8:	str	r9, [sp, #12]
   468bc:	str	r8, [sp, #8]
   468c0:	str	r7, [sp, #4]
   468c4:	ldr	r3, [r4, #32]
   468c8:	str	r3, [sp]
   468cc:	ldr	r3, [r4, #8]
   468d0:	ldr	r2, [r4, #16]
   468d4:	mov	r1, sl
   468d8:	mov	r0, r5
   468dc:	bl	215e4 <GetDataSlab>
   468e0:	mov	fp, r0
   468e4:	b	46e28 <Mat_VarReadData5+0x7f8>
   468e8:	ldr	r1, [r3, #12]
   468ec:	add	r0, sp, #24
   468f0:	bl	15bc <inflateCopy@plt>
   468f4:	cmp	r0, #0
   468f8:	bne	46974 <Mat_VarReadData5+0x344>
   468fc:	mov	r3, #0
   46900:	str	r3, [sp, #28]
   46904:	add	r2, sp, #80	; 0x50
   46908:	add	r1, sp, #24
   4690c:	mov	r0, r6
   46910:	bl	31c4 <InflateDataType>
   46914:	ldr	r3, [r6, #20]
   46918:	cmp	r3, #0
   4691c:	bne	46990 <Mat_VarReadData5+0x360>
   46920:	ldr	r5, [sp, #80]	; 0x50
   46924:	uxtb	r3, r5
   46928:	cmp	r3, #24
   4692c:	movgt	r3, #0
   46930:	str	r3, [r4, #8]
   46934:	lsr	r3, r5, #16
   46938:	lsl	r3, r3, #16
   4693c:	cmp	r3, #0
   46940:	asrne	r5, r5, #16
   46944:	addne	r5, r5, #4
   46948:	bne	467b8 <Mat_VarReadData5+0x188>
   4694c:	add	r2, sp, #84	; 0x54
   46950:	add	r1, sp, #24
   46954:	mov	r0, r6
   46958:	bl	31c4 <InflateDataType>
   4695c:	ldr	r3, [r6, #20]
   46960:	cmp	r3, #0
   46964:	bne	4699c <Mat_VarReadData5+0x36c>
   46968:	ldr	r5, [sp, #84]	; 0x54
   4696c:	add	r5, r5, #8
   46970:	b	467b8 <Mat_VarReadData5+0x188>
   46974:	bl	14f0 <zError@plt>
   46978:	mov	r1, r0
   4697c:	ldr	r0, [pc, #1336]	; 46ebc <Mat_VarReadData5+0x88c>
   46980:	add	r0, pc, r0
   46984:	bl	161c <Mat_Critical@plt>
   46988:	mvn	fp, #0
   4698c:	b	46e28 <Mat_VarReadData5+0x7f8>
   46990:	add	r0, sp, #80	; 0x50
   46994:	bl	18a4 <Mat_int32Swap>
   46998:	b	46920 <Mat_VarReadData5+0x2f0>
   4699c:	add	r0, sp, #84	; 0x54
   469a0:	bl	18a4 <Mat_int32Swap>
   469a4:	b	46968 <Mat_VarReadData5+0x338>
   469a8:	ldr	r2, [r4, #32]
   469ac:	ldr	r3, [r9]
   469b0:	sub	r3, r3, #1
   469b4:	ldr	r0, [r8]
   469b8:	ldr	r1, [r7]
   469bc:	mla	r3, r0, r3, r1
   469c0:	add	r3, r3, #1
   469c4:	ldr	r1, [r2]
   469c8:	cmp	r3, r1
   469cc:	movhi	fp, #1
   469d0:	bhi	46e28 <Mat_VarReadData5+0x7f8>
   469d4:	ldr	r3, [r9, #4]
   469d8:	sub	r3, r3, #1
   469dc:	ldr	r0, [r8, #4]
   469e0:	ldr	r1, [r7, #4]
   469e4:	mla	r3, r0, r3, r1
   469e8:	add	r3, r3, #1
   469ec:	ldr	r1, [r2, #4]
   469f0:	cmp	r3, r1
   469f4:	movhi	fp, #1
   469f8:	bhi	46e28 <Mat_VarReadData5+0x7f8>
   469fc:	ldr	fp, [r4, #48]	; 0x30
   46a00:	cmp	fp, #0
   46a04:	bne	46b10 <Mat_VarReadData5+0x4e0>
   46a08:	ldr	r3, [r4, #20]
   46a0c:	cmp	r3, #0
   46a10:	beq	46ae8 <Mat_VarReadData5+0x4b8>
   46a14:	str	r9, [sp, #12]
   46a18:	str	r8, [sp, #8]
   46a1c:	str	r7, [sp, #4]
   46a20:	str	r2, [sp]
   46a24:	ldr	r3, [r4, #8]
   46a28:	ldr	r2, [r4, #16]
   46a2c:	ldr	r1, [sl]
   46a30:	mov	r0, r6
   46a34:	bl	1e064 <ReadDataSlab2>
   46a38:	ldr	r3, [r4, #52]	; 0x34
   46a3c:	ldr	r1, [r3]
   46a40:	mov	r2, #0
   46a44:	add	r1, r5, r1
   46a48:	ldr	r0, [r6]
   46a4c:	bl	1694 <fseek@plt>
   46a50:	ldr	r3, [r6]
   46a54:	mov	r2, #2
   46a58:	mov	r1, #4
   46a5c:	add	r0, sp, #80	; 0x50
   46a60:	bl	1520 <fread@plt>
   46a64:	ldr	r3, [r6, #20]
   46a68:	cmp	r3, #0
   46a6c:	bne	46ac0 <Mat_VarReadData5+0x490>
   46a70:	ldr	r3, [sp, #80]	; 0x50
   46a74:	uxtb	r2, r3
   46a78:	cmp	r2, #24
   46a7c:	movle	fp, r2
   46a80:	str	fp, [r4, #8]
   46a84:	lsr	r3, r3, #16
   46a88:	lsl	r3, r3, #16
   46a8c:	cmp	r3, #0
   46a90:	bne	46ad4 <Mat_VarReadData5+0x4a4>
   46a94:	str	r9, [sp, #12]
   46a98:	str	r8, [sp, #8]
   46a9c:	str	r7, [sp, #4]
   46aa0:	ldr	r3, [r4, #32]
   46aa4:	str	r3, [sp]
   46aa8:	ldr	r3, [r4, #8]
   46aac:	ldr	r2, [r4, #16]
   46ab0:	ldr	r1, [sl, #4]
   46ab4:	mov	r0, r6
   46ab8:	bl	1e064 <ReadDataSlab2>
   46abc:	b	46cec <Mat_VarReadData5+0x6bc>
   46ac0:	add	r0, sp, #80	; 0x50
   46ac4:	bl	18a4 <Mat_int32Swap>
   46ac8:	add	r0, sp, #84	; 0x54
   46acc:	bl	18a4 <Mat_int32Swap>
   46ad0:	b	46a70 <Mat_VarReadData5+0x440>
   46ad4:	mov	r2, #1
   46ad8:	mvn	r1, #3
   46adc:	ldr	r0, [r6]
   46ae0:	bl	1694 <fseek@plt>
   46ae4:	b	46a94 <Mat_VarReadData5+0x464>
   46ae8:	str	r9, [sp, #12]
   46aec:	str	r8, [sp, #8]
   46af0:	str	r7, [sp, #4]
   46af4:	str	r2, [sp]
   46af8:	ldr	r3, [r4, #8]
   46afc:	ldr	r2, [r4, #16]
   46b00:	mov	r1, sl
   46b04:	mov	r0, r6
   46b08:	bl	1e064 <ReadDataSlab2>
   46b0c:	b	46cec <Mat_VarReadData5+0x6bc>
   46b10:	cmp	fp, #1
   46b14:	bne	46cec <Mat_VarReadData5+0x6bc>
   46b18:	ldr	fp, [r4, #20]
   46b1c:	cmp	fp, #0
   46b20:	beq	46c5c <Mat_VarReadData5+0x62c>
   46b24:	str	r9, [sp, #16]
   46b28:	str	r8, [sp, #12]
   46b2c:	str	r7, [sp, #8]
   46b30:	str	r2, [sp, #4]
   46b34:	ldr	r3, [r4, #8]
   46b38:	str	r3, [sp]
   46b3c:	ldr	r3, [r4, #16]
   46b40:	ldr	r2, [sl]
   46b44:	add	fp, sp, #24
   46b48:	mov	r1, fp
   46b4c:	mov	r0, r6
   46b50:	bl	1f9a8 <ReadCompressedDataSlab2>
   46b54:	ldr	r3, [r4, #52]	; 0x34
   46b58:	mov	r2, #0
   46b5c:	ldr	r1, [r3]
   46b60:	ldr	r0, [r6]
   46b64:	bl	1694 <fseek@plt>
   46b68:	mov	r0, fp
   46b6c:	bl	15b0 <inflateEnd@plt>
   46b70:	ldr	r3, [r4, #52]	; 0x34
   46b74:	ldr	r1, [r3, #12]
   46b78:	mov	r0, fp
   46b7c:	bl	15bc <inflateCopy@plt>
   46b80:	subs	fp, r0, #0
   46b84:	bne	46c20 <Mat_VarReadData5+0x5f0>
   46b88:	mov	r2, r5
   46b8c:	add	r5, sp, #24
   46b90:	mov	r1, r5
   46b94:	mov	r0, r6
   46b98:	bl	203c <InflateSkip>
   46b9c:	mov	r3, #0
   46ba0:	str	r3, [sp, #28]
   46ba4:	add	r2, sp, #80	; 0x50
   46ba8:	mov	r1, r5
   46bac:	mov	r0, r6
   46bb0:	bl	31c4 <InflateDataType>
   46bb4:	ldr	r3, [r6, #20]
   46bb8:	cmp	r3, #0
   46bbc:	bne	46c3c <Mat_VarReadData5+0x60c>
   46bc0:	ldr	r3, [sp, #80]	; 0x50
   46bc4:	uxtb	r2, r3
   46bc8:	cmp	r2, #24
   46bcc:	movgt	r2, #0
   46bd0:	str	r2, [r4, #8]
   46bd4:	lsr	r3, r3, #16
   46bd8:	lsl	r3, r3, #16
   46bdc:	cmp	r3, #0
   46be0:	beq	46c48 <Mat_VarReadData5+0x618>
   46be4:	str	r9, [sp, #16]
   46be8:	str	r8, [sp, #12]
   46bec:	str	r7, [sp, #8]
   46bf0:	ldr	r3, [r4, #32]
   46bf4:	str	r3, [sp, #4]
   46bf8:	ldr	r3, [r4, #8]
   46bfc:	str	r3, [sp]
   46c00:	ldr	r3, [r4, #16]
   46c04:	ldr	r2, [sl, #4]
   46c08:	add	r1, sp, #24
   46c0c:	mov	r0, r6
   46c10:	bl	1f9a8 <ReadCompressedDataSlab2>
   46c14:	add	r0, sp, #24
   46c18:	bl	15b0 <inflateEnd@plt>
   46c1c:	b	46e20 <Mat_VarReadData5+0x7f0>
   46c20:	mov	r0, fp
   46c24:	bl	14f0 <zError@plt>
   46c28:	mov	r1, r0
   46c2c:	ldr	r0, [pc, #652]	; 46ec0 <Mat_VarReadData5+0x890>
   46c30:	add	r0, pc, r0
   46c34:	bl	161c <Mat_Critical@plt>
   46c38:	b	46b88 <Mat_VarReadData5+0x558>
   46c3c:	add	r0, sp, #80	; 0x50
   46c40:	bl	18a4 <Mat_int32Swap>
   46c44:	b	46bc0 <Mat_VarReadData5+0x590>
   46c48:	mov	r2, #4
   46c4c:	add	r1, sp, #24
   46c50:	mov	r0, r6
   46c54:	bl	203c <InflateSkip>
   46c58:	b	46be4 <Mat_VarReadData5+0x5b4>
   46c5c:	str	r9, [sp, #16]
   46c60:	str	r8, [sp, #12]
   46c64:	str	r7, [sp, #8]
   46c68:	str	r2, [sp, #4]
   46c6c:	ldr	r3, [r4, #8]
   46c70:	str	r3, [sp]
   46c74:	ldr	r3, [r4, #16]
   46c78:	mov	r2, sl
   46c7c:	add	r1, sp, #24
   46c80:	mov	r0, r6
   46c84:	bl	1f9a8 <ReadCompressedDataSlab2>
   46c88:	b	46c14 <Mat_VarReadData5+0x5e4>
   46c8c:	add	r0, sp, #80	; 0x50
   46c90:	bl	18a4 <Mat_int32Swap>
   46c94:	add	r0, sp, #84	; 0x54
   46c98:	bl	18a4 <Mat_int32Swap>
   46c9c:	b	46714 <Mat_VarReadData5+0xe4>
   46ca0:	mov	r2, #1
   46ca4:	mvn	r1, #3
   46ca8:	ldr	r0, [r6]
   46cac:	bl	1694 <fseek@plt>
   46cb0:	b	46738 <Mat_VarReadData5+0x108>
   46cb4:	str	r9, [sp, #16]
   46cb8:	str	r8, [sp, #12]
   46cbc:	str	r7, [sp, #8]
   46cc0:	ldr	r2, [r4, #32]
   46cc4:	str	r2, [sp, #4]
   46cc8:	str	r3, [sp]
   46ccc:	ldr	r3, [r4, #8]
   46cd0:	ldr	r2, [r4, #16]
   46cd4:	mov	r1, sl
   46cd8:	mov	r0, r6
   46cdc:	bl	16764 <ReadDataSlabN>
   46ce0:	b	46cec <Mat_VarReadData5+0x6bc>
   46ce4:	cmp	fp, #1
   46ce8:	beq	46d0c <Mat_VarReadData5+0x6dc>
   46cec:	ldr	r0, [r4, #16]
   46cf0:	bl	4a314 <ClassType2DataType>
   46cf4:	str	r0, [r4, #8]
   46cf8:	ldr	r0, [r4, #16]
   46cfc:	bl	167c <Mat_SizeOfClass@plt>
   46d00:	str	r0, [r4, #12]
   46d04:	mov	fp, #0
   46d08:	b	46e28 <Mat_VarReadData5+0x7f8>
   46d0c:	ldr	fp, [r4, #20]
   46d10:	cmp	fp, #0
   46d14:	beq	46e84 <Mat_VarReadData5+0x854>
   46d18:	str	r9, [sp, #20]
   46d1c:	str	r8, [sp, #16]
   46d20:	str	r7, [sp, #12]
   46d24:	ldr	r2, [r4, #32]
   46d28:	str	r2, [sp, #8]
   46d2c:	str	r3, [sp, #4]
   46d30:	ldr	r3, [r4, #8]
   46d34:	str	r3, [sp]
   46d38:	ldr	r3, [r4, #16]
   46d3c:	ldr	r2, [sl]
   46d40:	add	fp, sp, #24
   46d44:	mov	r1, fp
   46d48:	mov	r0, r6
   46d4c:	bl	1a0b4 <ReadCompressedDataSlabN>
   46d50:	ldr	r3, [r4, #52]	; 0x34
   46d54:	mov	r2, #0
   46d58:	ldr	r1, [r3]
   46d5c:	ldr	r0, [r6]
   46d60:	bl	1694 <fseek@plt>
   46d64:	mov	r0, fp
   46d68:	bl	15b0 <inflateEnd@plt>
   46d6c:	ldr	r3, [r4, #52]	; 0x34
   46d70:	ldr	r1, [r3, #12]
   46d74:	mov	r0, fp
   46d78:	bl	15bc <inflateCopy@plt>
   46d7c:	subs	fp, r0, #0
   46d80:	bne	46e48 <Mat_VarReadData5+0x818>
   46d84:	mov	r2, r5
   46d88:	add	r5, sp, #24
   46d8c:	mov	r1, r5
   46d90:	mov	r0, r6
   46d94:	bl	203c <InflateSkip>
   46d98:	mov	r3, #0
   46d9c:	str	r3, [sp, #28]
   46da0:	add	r2, sp, #80	; 0x50
   46da4:	mov	r1, r5
   46da8:	mov	r0, r6
   46dac:	bl	31c4 <InflateDataType>
   46db0:	ldr	r3, [r6, #20]
   46db4:	cmp	r3, #0
   46db8:	bne	46e64 <Mat_VarReadData5+0x834>
   46dbc:	ldr	r3, [sp, #80]	; 0x50
   46dc0:	uxtb	r2, r3
   46dc4:	cmp	r2, #24
   46dc8:	movgt	r2, #0
   46dcc:	str	r2, [r4, #8]
   46dd0:	lsr	r3, r3, #16
   46dd4:	lsl	r3, r3, #16
   46dd8:	cmp	r3, #0
   46ddc:	beq	46e70 <Mat_VarReadData5+0x840>
   46de0:	str	r9, [sp, #20]
   46de4:	str	r8, [sp, #16]
   46de8:	str	r7, [sp, #12]
   46dec:	ldr	r3, [r4, #32]
   46df0:	str	r3, [sp, #8]
   46df4:	ldr	r3, [r4, #4]
   46df8:	str	r3, [sp, #4]
   46dfc:	ldr	r3, [r4, #8]
   46e00:	str	r3, [sp]
   46e04:	ldr	r3, [r4, #16]
   46e08:	ldr	r2, [sl, #4]
   46e0c:	add	r1, sp, #24
   46e10:	mov	r0, r6
   46e14:	bl	1a0b4 <ReadCompressedDataSlabN>
   46e18:	add	r0, sp, #24
   46e1c:	bl	15b0 <inflateEnd@plt>
   46e20:	cmp	fp, #0
   46e24:	beq	46cec <Mat_VarReadData5+0x6bc>
   46e28:	mov	r0, fp
   46e2c:	add	sp, sp, #92	; 0x5c
   46e30:	ldrd	r4, [sp]
   46e34:	ldrd	r6, [sp, #8]
   46e38:	ldrd	r8, [sp, #16]
   46e3c:	ldrd	sl, [sp, #24]
   46e40:	add	sp, sp, #32
   46e44:	pop	{pc}		; (ldr pc, [sp], #4)
   46e48:	mov	r0, fp
   46e4c:	bl	14f0 <zError@plt>
   46e50:	mov	r1, r0
   46e54:	ldr	r0, [pc, #104]	; 46ec4 <Mat_VarReadData5+0x894>
   46e58:	add	r0, pc, r0
   46e5c:	bl	161c <Mat_Critical@plt>
   46e60:	b	46d84 <Mat_VarReadData5+0x754>
   46e64:	add	r0, sp, #80	; 0x50
   46e68:	bl	18a4 <Mat_int32Swap>
   46e6c:	b	46dbc <Mat_VarReadData5+0x78c>
   46e70:	mov	r2, #4
   46e74:	add	r1, sp, #24
   46e78:	mov	r0, r6
   46e7c:	bl	203c <InflateSkip>
   46e80:	b	46de0 <Mat_VarReadData5+0x7b0>
   46e84:	str	r9, [sp, #20]
   46e88:	str	r8, [sp, #16]
   46e8c:	str	r7, [sp, #12]
   46e90:	ldr	r2, [r4, #32]
   46e94:	str	r2, [sp, #8]
   46e98:	str	r3, [sp, #4]
   46e9c:	ldr	r3, [r4, #8]
   46ea0:	str	r3, [sp]
   46ea4:	ldr	r3, [r4, #16]
   46ea8:	mov	r2, sl
   46eac:	add	r1, sp, #24
   46eb0:	mov	r0, r6
   46eb4:	bl	1a0b4 <ReadCompressedDataSlabN>
   46eb8:	b	46e18 <Mat_VarReadData5+0x7e8>
   46ebc:	.word	0x00008dd0
   46ec0:	.word	0x00008b20
   46ec4:	.word	0x000088f8

00046ec8 <Mat_VarReadDataLinear5>:
   46ec8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   46ecc:	strd	r6, [sp, #8]
   46ed0:	strd	r8, [sp, #16]
   46ed4:	strd	sl, [sp, #24]
   46ed8:	str	lr, [sp, #32]
   46edc:	sub	sp, sp, #92	; 0x5c
   46ee0:	ldr	sl, [sp, #128]	; 0x80
   46ee4:	ldr	fp, [sp, #132]	; 0x84
   46ee8:	mov	ip, #1
   46eec:	str	ip, [sp, #20]
   46ef0:	ldr	ip, [r0, #16]
   46ef4:	cmp	ip, #16
   46ef8:	beq	47404 <Mat_VarReadDataLinear5+0x53c>
   46efc:	mov	r6, r3
   46f00:	mov	r8, r2
   46f04:	mov	r4, r1
   46f08:	mov	r5, r0
   46f0c:	ldr	r3, [r1, #52]	; 0x34
   46f10:	mov	r2, #0
   46f14:	ldr	r1, [r3]
   46f18:	ldr	r0, [r0]
   46f1c:	bl	1694 <fseek@plt>
   46f20:	ldr	r3, [r4, #48]	; 0x30
   46f24:	cmp	r3, #0
   46f28:	beq	47018 <Mat_VarReadDataLinear5+0x150>
   46f2c:	cmp	r3, #1
   46f30:	movne	r7, #0
   46f34:	beq	470b0 <Mat_VarReadDataLinear5+0x1e8>
   46f38:	add	r1, sp, #20
   46f3c:	mov	r0, r4
   46f40:	bl	4a3c8 <SafeMulDims>
   46f44:	subs	r9, r0, #0
   46f48:	bne	4720c <Mat_VarReadDataLinear5+0x344>
   46f4c:	sub	r3, fp, #1
   46f50:	mla	r3, sl, r3, r6
   46f54:	add	r3, r3, #1
   46f58:	ldr	r2, [sp, #20]
   46f5c:	cmp	r3, r2
   46f60:	movhi	r9, #1
   46f64:	bhi	47270 <Mat_VarReadDataLinear5+0x3a8>
   46f68:	ldr	r3, [r4, #48]	; 0x30
   46f6c:	cmp	r3, #0
   46f70:	bne	47268 <Mat_VarReadDataLinear5+0x3a0>
   46f74:	ldr	r3, [r4, #20]
   46f78:	cmp	r3, #0
   46f7c:	beq	47244 <Mat_VarReadDataLinear5+0x37c>
   46f80:	str	fp, [sp, #8]
   46f84:	str	sl, [sp, #4]
   46f88:	str	r6, [sp]
   46f8c:	ldr	r3, [r4, #8]
   46f90:	ldr	r2, [r4, #16]
   46f94:	ldr	r1, [r8]
   46f98:	mov	r0, r5
   46f9c:	bl	1db08 <ReadDataSlab1>
   46fa0:	ldr	r3, [r4, #52]	; 0x34
   46fa4:	ldr	r1, [r3]
   46fa8:	mov	r2, #0
   46fac:	add	r1, r7, r1
   46fb0:	ldr	r0, [r5]
   46fb4:	bl	1694 <fseek@plt>
   46fb8:	ldr	r3, [r5]
   46fbc:	mov	r2, #2
   46fc0:	mov	r1, #4
   46fc4:	add	r0, sp, #80	; 0x50
   46fc8:	bl	1520 <fread@plt>
   46fcc:	ldr	r3, [r5, #20]
   46fd0:	cmp	r3, #0
   46fd4:	bne	4721c <Mat_VarReadDataLinear5+0x354>
   46fd8:	ldr	r3, [sp, #80]	; 0x50
   46fdc:	uxtb	r2, r3
   46fe0:	str	r2, [r4, #8]
   46fe4:	lsr	r3, r3, #16
   46fe8:	lsl	r3, r3, #16
   46fec:	cmp	r3, #0
   46ff0:	bne	47230 <Mat_VarReadDataLinear5+0x368>
   46ff4:	str	fp, [sp, #8]
   46ff8:	str	sl, [sp, #4]
   46ffc:	str	r6, [sp]
   47000:	ldr	r3, [r4, #8]
   47004:	ldr	r2, [r4, #16]
   47008:	ldr	r1, [r8, #4]
   4700c:	mov	r0, r5
   47010:	bl	1db08 <ReadDataSlab1>
   47014:	b	47270 <Mat_VarReadDataLinear5+0x3a8>
   47018:	ldr	r3, [r5]
   4701c:	mov	r2, #2
   47020:	mov	r1, #4
   47024:	add	r0, sp, #80	; 0x50
   47028:	bl	1520 <fread@plt>
   4702c:	ldr	r3, [r5, #20]
   47030:	cmp	r3, #0
   47034:	bne	47080 <Mat_VarReadDataLinear5+0x1b8>
   47038:	ldr	r3, [sp, #80]	; 0x50
   4703c:	uxtb	r2, r3
   47040:	str	r2, [r4, #8]
   47044:	lsr	r3, r3, #16
   47048:	lsl	r3, r3, #16
   4704c:	cmp	r3, #0
   47050:	bne	47094 <Mat_VarReadDataLinear5+0x1cc>
   47054:	ldr	r7, [sp, #84]	; 0x54
   47058:	add	r7, r7, #8
   4705c:	tst	r7, #7
   47060:	beq	46f38 <Mat_VarReadDataLinear5+0x70>
   47064:	rsbs	r2, r7, #0
   47068:	and	r3, r7, #7
   4706c:	and	r2, r2, #7
   47070:	rsbpl	r3, r2, #0
   47074:	rsb	r3, r3, #8
   47078:	add	r7, r7, r3
   4707c:	b	46f38 <Mat_VarReadDataLinear5+0x70>
   47080:	add	r0, sp, #80	; 0x50
   47084:	bl	18a4 <Mat_int32Swap>
   47088:	add	r0, sp, #84	; 0x54
   4708c:	bl	18a4 <Mat_int32Swap>
   47090:	b	47038 <Mat_VarReadDataLinear5+0x170>
   47094:	mov	r2, #1
   47098:	mvn	r1, #3
   4709c:	ldr	r0, [r5]
   470a0:	bl	1694 <fseek@plt>
   470a4:	ldrsh	r7, [sp, #82]	; 0x52
   470a8:	add	r7, r7, #4
   470ac:	b	4705c <Mat_VarReadDataLinear5+0x194>
   470b0:	ldr	r3, [r4, #52]	; 0x34
   470b4:	ldr	r7, [r3, #16]
   470b8:	cmp	r7, #0
   470bc:	beq	47144 <Mat_VarReadDataLinear5+0x27c>
   470c0:	ldr	r3, [r4, #20]
   470c4:	cmp	r3, #0
   470c8:	beq	4711c <Mat_VarReadDataLinear5+0x254>
   470cc:	ldr	r0, [r7]
   470d0:	str	fp, [sp, #8]
   470d4:	str	sl, [sp, #4]
   470d8:	str	r6, [sp]
   470dc:	ldr	r3, [r4, #8]
   470e0:	ldr	r2, [r4, #16]
   470e4:	ldr	r1, [r8]
   470e8:	bl	40604 <GetDataLinear>
   470ec:	subs	r9, r0, #0
   470f0:	bne	47288 <Mat_VarReadDataLinear5+0x3c0>
   470f4:	ldr	r0, [r7, #4]
   470f8:	str	fp, [sp, #8]
   470fc:	str	sl, [sp, #4]
   47100:	str	r6, [sp]
   47104:	ldr	r3, [r4, #8]
   47108:	ldr	r2, [r4, #16]
   4710c:	ldr	r1, [r8, #4]
   47110:	bl	40604 <GetDataLinear>
   47114:	mov	r9, r0
   47118:	b	47288 <Mat_VarReadDataLinear5+0x3c0>
   4711c:	str	fp, [sp, #8]
   47120:	str	sl, [sp, #4]
   47124:	str	r6, [sp]
   47128:	ldr	r3, [r4, #8]
   4712c:	ldr	r2, [r4, #16]
   47130:	mov	r1, r8
   47134:	mov	r0, r7
   47138:	bl	40604 <GetDataLinear>
   4713c:	mov	r9, r0
   47140:	b	47288 <Mat_VarReadDataLinear5+0x3c0>
   47144:	ldr	r3, [r3, #12]
   47148:	mov	r2, #0
   4714c:	str	r2, [r3, #4]
   47150:	ldr	r3, [r4, #52]	; 0x34
   47154:	ldr	r1, [r3, #12]
   47158:	add	r0, sp, #24
   4715c:	bl	15bc <inflateCopy@plt>
   47160:	cmp	r0, #0
   47164:	bne	471d0 <Mat_VarReadDataLinear5+0x308>
   47168:	add	r2, sp, #80	; 0x50
   4716c:	add	r1, sp, #24
   47170:	mov	r0, r5
   47174:	bl	31c4 <InflateDataType>
   47178:	ldr	r3, [r5, #20]
   4717c:	cmp	r3, #0
   47180:	bne	471ec <Mat_VarReadDataLinear5+0x324>
   47184:	ldr	r7, [sp, #80]	; 0x50
   47188:	uxtb	r3, r7
   4718c:	str	r3, [r4, #8]
   47190:	lsr	r3, r7, #16
   47194:	lsl	r3, r3, #16
   47198:	cmp	r3, #0
   4719c:	asrne	r7, r7, #16
   471a0:	addne	r7, r7, #4
   471a4:	bne	4705c <Mat_VarReadDataLinear5+0x194>
   471a8:	add	r2, sp, #84	; 0x54
   471ac:	add	r1, sp, #24
   471b0:	mov	r0, r5
   471b4:	bl	31c4 <InflateDataType>
   471b8:	ldr	r3, [r5, #20]
   471bc:	cmp	r3, #0
   471c0:	bne	47200 <Mat_VarReadDataLinear5+0x338>
   471c4:	ldr	r7, [sp, #84]	; 0x54
   471c8:	add	r7, r7, #8
   471cc:	b	4705c <Mat_VarReadDataLinear5+0x194>
   471d0:	bl	14f0 <zError@plt>
   471d4:	mov	r1, r0
   471d8:	ldr	r0, [pc, #556]	; 4740c <Mat_VarReadDataLinear5+0x544>
   471dc:	add	r0, pc, r0
   471e0:	bl	161c <Mat_Critical@plt>
   471e4:	mvn	r9, #0
   471e8:	b	47288 <Mat_VarReadDataLinear5+0x3c0>
   471ec:	add	r0, sp, #80	; 0x50
   471f0:	bl	18a4 <Mat_int32Swap>
   471f4:	add	r0, sp, #84	; 0x54
   471f8:	bl	18a4 <Mat_int32Swap>
   471fc:	b	47184 <Mat_VarReadDataLinear5+0x2bc>
   47200:	add	r0, sp, #84	; 0x54
   47204:	bl	18a4 <Mat_int32Swap>
   47208:	b	471c4 <Mat_VarReadDataLinear5+0x2fc>
   4720c:	ldr	r0, [pc, #508]	; 47410 <Mat_VarReadDataLinear5+0x548>
   47210:	add	r0, pc, r0
   47214:	bl	161c <Mat_Critical@plt>
   47218:	b	46f4c <Mat_VarReadDataLinear5+0x84>
   4721c:	add	r0, sp, #80	; 0x50
   47220:	bl	18a4 <Mat_int32Swap>
   47224:	add	r0, sp, #84	; 0x54
   47228:	bl	18a4 <Mat_int32Swap>
   4722c:	b	46fd8 <Mat_VarReadDataLinear5+0x110>
   47230:	mov	r2, #1
   47234:	mvn	r1, #3
   47238:	ldr	r0, [r5]
   4723c:	bl	1694 <fseek@plt>
   47240:	b	46ff4 <Mat_VarReadDataLinear5+0x12c>
   47244:	str	fp, [sp, #8]
   47248:	str	sl, [sp, #4]
   4724c:	str	r6, [sp]
   47250:	ldr	r3, [r4, #8]
   47254:	ldr	r2, [r4, #16]
   47258:	mov	r1, r8
   4725c:	mov	r0, r5
   47260:	bl	1db08 <ReadDataSlab1>
   47264:	b	47270 <Mat_VarReadDataLinear5+0x3a8>
   47268:	cmp	r3, #1
   4726c:	beq	472a8 <Mat_VarReadDataLinear5+0x3e0>
   47270:	ldr	r0, [r4, #16]
   47274:	bl	4a314 <ClassType2DataType>
   47278:	str	r0, [r4, #8]
   4727c:	ldr	r0, [r4, #16]
   47280:	bl	167c <Mat_SizeOfClass@plt>
   47284:	str	r0, [r4, #12]
   47288:	mov	r0, r9
   4728c:	add	sp, sp, #92	; 0x5c
   47290:	ldrd	r4, [sp]
   47294:	ldrd	r6, [sp, #8]
   47298:	ldrd	r8, [sp, #16]
   4729c:	ldrd	sl, [sp, #24]
   472a0:	add	sp, sp, #32
   472a4:	pop	{pc}		; (ldr pc, [sp], #4)
   472a8:	ldr	r3, [r4, #20]
   472ac:	cmp	r3, #0
   472b0:	beq	473d8 <Mat_VarReadDataLinear5+0x510>
   472b4:	str	fp, [sp, #12]
   472b8:	str	sl, [sp, #8]
   472bc:	str	r6, [sp, #4]
   472c0:	ldr	r3, [r4, #8]
   472c4:	str	r3, [sp]
   472c8:	ldr	r3, [r4, #16]
   472cc:	ldr	r2, [r8]
   472d0:	add	r9, sp, #24
   472d4:	mov	r1, r9
   472d8:	mov	r0, r5
   472dc:	bl	1f2f8 <ReadCompressedDataSlab1>
   472e0:	ldr	r3, [r4, #52]	; 0x34
   472e4:	mov	r2, #0
   472e8:	ldr	r1, [r3]
   472ec:	ldr	r0, [r5]
   472f0:	bl	1694 <fseek@plt>
   472f4:	mov	r0, r9
   472f8:	bl	15b0 <inflateEnd@plt>
   472fc:	ldr	r3, [r4, #52]	; 0x34
   47300:	ldr	r1, [r3, #12]
   47304:	mov	r0, r9
   47308:	bl	15bc <inflateCopy@plt>
   4730c:	subs	r9, r0, #0
   47310:	bne	4739c <Mat_VarReadDataLinear5+0x4d4>
   47314:	mov	r2, r7
   47318:	add	r7, sp, #24
   4731c:	mov	r1, r7
   47320:	mov	r0, r5
   47324:	bl	203c <InflateSkip>
   47328:	mov	r3, #0
   4732c:	str	r3, [sp, #28]
   47330:	add	r2, sp, #80	; 0x50
   47334:	mov	r1, r7
   47338:	mov	r0, r5
   4733c:	bl	31c4 <InflateDataType>
   47340:	ldr	r3, [r5, #20]
   47344:	cmp	r3, #0
   47348:	bne	473b8 <Mat_VarReadDataLinear5+0x4f0>
   4734c:	ldr	r3, [sp, #80]	; 0x50
   47350:	uxtb	r2, r3
   47354:	str	r2, [r4, #8]
   47358:	lsr	r3, r3, #16
   4735c:	lsl	r3, r3, #16
   47360:	cmp	r3, #0
   47364:	beq	473c4 <Mat_VarReadDataLinear5+0x4fc>
   47368:	str	fp, [sp, #12]
   4736c:	str	sl, [sp, #8]
   47370:	str	r6, [sp, #4]
   47374:	ldr	r3, [r4, #8]
   47378:	str	r3, [sp]
   4737c:	ldr	r3, [r4, #16]
   47380:	ldr	r2, [r8, #4]
   47384:	add	r1, sp, #24
   47388:	mov	r0, r5
   4738c:	bl	1f2f8 <ReadCompressedDataSlab1>
   47390:	add	r0, sp, #24
   47394:	bl	15b0 <inflateEnd@plt>
   47398:	b	47270 <Mat_VarReadDataLinear5+0x3a8>
   4739c:	mov	r0, r9
   473a0:	bl	14f0 <zError@plt>
   473a4:	mov	r1, r0
   473a8:	ldr	r0, [pc, #100]	; 47414 <Mat_VarReadDataLinear5+0x54c>
   473ac:	add	r0, pc, r0
   473b0:	bl	161c <Mat_Critical@plt>
   473b4:	b	47314 <Mat_VarReadDataLinear5+0x44c>
   473b8:	add	r0, sp, #80	; 0x50
   473bc:	bl	18a4 <Mat_int32Swap>
   473c0:	b	4734c <Mat_VarReadDataLinear5+0x484>
   473c4:	mov	r2, #4
   473c8:	add	r1, sp, #24
   473cc:	mov	r0, r5
   473d0:	bl	203c <InflateSkip>
   473d4:	b	47368 <Mat_VarReadDataLinear5+0x4a0>
   473d8:	str	fp, [sp, #12]
   473dc:	str	sl, [sp, #8]
   473e0:	str	r6, [sp, #4]
   473e4:	ldr	r3, [r4, #8]
   473e8:	str	r3, [sp]
   473ec:	ldr	r3, [r4, #16]
   473f0:	mov	r2, r8
   473f4:	add	r1, sp, #24
   473f8:	mov	r0, r5
   473fc:	bl	1f2f8 <ReadCompressedDataSlab1>
   47400:	b	47390 <Mat_VarReadDataLinear5+0x4c8>
   47404:	mvn	r9, #0
   47408:	b	47288 <Mat_VarReadDataLinear5+0x3c0>
   4740c:	.word	0x00008574
   47410:	.word	0x000082d4
   47414:	.word	0x000083a4

00047418 <Mat_VarWrite5>:
   47418:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4741c:	strd	r6, [sp, #8]
   47420:	strd	r8, [sp, #16]
   47424:	strd	sl, [sp, #24]
   47428:	str	lr, [sp, #32]
   4742c:	sub	sp, sp, #4096	; 0x1000
   47430:	sub	sp, sp, #44	; 0x2c
   47434:	mov	r6, r1
   47438:	mov	r4, r2
   4743c:	mov	r3, #6
   47440:	add	r2, sp, #4096	; 0x1000
   47444:	add	r2, r2, #32
   47448:	str	r3, [r2]
   4744c:	mov	r3, #5
   47450:	add	r2, sp, #4096	; 0x1000
   47454:	add	r2, r2, #28
   47458:	str	r3, [r2]
   4745c:	mov	r3, #8
   47460:	add	r2, sp, #4096	; 0x1000
   47464:	add	r2, r2, #24
   47468:	str	r3, [r2]
   4746c:	mov	r3, #0
   47470:	add	r2, sp, #4096	; 0x1000
   47474:	add	r2, r2, #20
   47478:	str	r3, [r2]
   4747c:	mov	r2, #14
   47480:	add	r1, sp, #4096	; 0x1000
   47484:	add	r1, r1, #16
   47488:	str	r2, [r1]
   4748c:	add	r2, sp, #4096	; 0x1000
   47490:	add	r2, r2, #8
   47494:	str	r3, [r2]
   47498:	subs	r5, r0, #0
   4749c:	beq	47e20 <Mat_VarWrite5+0xa08>
   474a0:	mov	r2, #2
   474a4:	mov	r1, r3
   474a8:	ldr	r0, [r5]
   474ac:	bl	1694 <fseek@plt>
   474b0:	cmp	r6, #0
   474b4:	beq	47e28 <Mat_VarWrite5+0xa10>
   474b8:	ldr	r3, [r6, #36]	; 0x24
   474bc:	cmp	r3, #0
   474c0:	beq	47e30 <Mat_VarWrite5+0xa18>
   474c4:	cmp	r4, #0
   474c8:	beq	47568 <Mat_VarWrite5+0x150>
   474cc:	cmp	r4, #1
   474d0:	movne	r7, #0
   474d4:	beq	478ec <Mat_VarWrite5+0x4d4>
   474d8:	ldr	r0, [r5]
   474dc:	bl	14b4 <ftell@plt>
   474e0:	mov	r4, r0
   474e4:	cmn	r0, #1
   474e8:	cmnne	r7, #1
   474ec:	beq	47e0c <Mat_VarWrite5+0x9f4>
   474f0:	sub	r1, r0, r7
   474f4:	add	r3, sp, #4096	; 0x1000
   474f8:	add	r3, r3, #12
   474fc:	str	r1, [r3]
   47500:	mov	r2, #1
   47504:	rsb	r1, r1, #-16777216	; 0xff000000
   47508:	add	r1, r1, #16711680	; 0xff0000
   4750c:	add	r1, r1, #65280	; 0xff00
   47510:	add	r1, r1, #252	; 0xfc
   47514:	ldr	r0, [r5]
   47518:	bl	1694 <fseek@plt>
   4751c:	ldr	r3, [r5]
   47520:	mov	r2, #1
   47524:	mov	r1, #4
   47528:	add	r0, sp, #4096	; 0x1000
   4752c:	add	r0, r0, #12
   47530:	bl	1514 <fwrite@plt>
   47534:	mov	r2, #0
   47538:	mov	r1, r4
   4753c:	ldr	r0, [r5]
   47540:	bl	1694 <fseek@plt>
   47544:	mov	r0, #0
   47548:	add	sp, sp, #4096	; 0x1000
   4754c:	add	sp, sp, #44	; 0x2c
   47550:	ldrd	r4, [sp]
   47554:	ldrd	r6, [sp, #8]
   47558:	ldrd	r8, [sp, #16]
   4755c:	ldrd	sl, [sp, #24]
   47560:	add	sp, sp, #32
   47564:	pop	{pc}		; (ldr pc, [sp], #4)
   47568:	ldr	r3, [r5]
   4756c:	mov	r2, #1
   47570:	mov	r1, #4
   47574:	add	r0, sp, #4096	; 0x1000
   47578:	add	r0, r0, #16
   4757c:	bl	1514 <fwrite@plt>
   47580:	ldr	r3, [r5]
   47584:	mov	r2, #1
   47588:	mov	r1, #4
   4758c:	add	r0, sp, #4096	; 0x1000
   47590:	add	r0, r0, #20
   47594:	bl	1514 <fwrite@plt>
   47598:	ldr	r0, [r5]
   4759c:	bl	14b4 <ftell@plt>
   475a0:	mov	r7, r0
   475a4:	ldr	r2, [r6, #16]
   475a8:	uxtb	r3, r2
   475ac:	add	r1, sp, #4096	; 0x1000
   475b0:	add	r1, r1, #36	; 0x24
   475b4:	str	r3, [r1]
   475b8:	ldr	r1, [r6, #20]
   475bc:	cmp	r1, #0
   475c0:	beq	475d4 <Mat_VarWrite5+0x1bc>
   475c4:	orr	r3, r3, #2048	; 0x800
   475c8:	add	r1, sp, #4096	; 0x1000
   475cc:	add	r1, r1, #36	; 0x24
   475d0:	str	r3, [r1]
   475d4:	ldr	r3, [r6, #24]
   475d8:	cmp	r3, #0
   475dc:	beq	475fc <Mat_VarWrite5+0x1e4>
   475e0:	add	r3, sp, #4096	; 0x1000
   475e4:	add	r3, r3, #36	; 0x24
   475e8:	ldr	r3, [r3]
   475ec:	orr	r3, r3, #1024	; 0x400
   475f0:	add	r1, sp, #4096	; 0x1000
   475f4:	add	r1, r1, #36	; 0x24
   475f8:	str	r3, [r1]
   475fc:	ldr	r3, [r6, #28]
   47600:	cmp	r3, #0
   47604:	beq	47624 <Mat_VarWrite5+0x20c>
   47608:	add	r3, sp, #4096	; 0x1000
   4760c:	add	r3, r3, #36	; 0x24
   47610:	ldr	r3, [r3]
   47614:	orr	r3, r3, #512	; 0x200
   47618:	add	r1, sp, #4096	; 0x1000
   4761c:	add	r1, r1, #36	; 0x24
   47620:	str	r3, [r1]
   47624:	cmp	r2, #5
   47628:	beq	47800 <Mat_VarWrite5+0x3e8>
   4762c:	ldr	r3, [r5]
   47630:	mov	r2, #1
   47634:	mov	r1, #4
   47638:	add	r0, sp, #4096	; 0x1000
   4763c:	add	r0, r0, #32
   47640:	bl	1514 <fwrite@plt>
   47644:	ldr	r3, [r5]
   47648:	mov	r2, #1
   4764c:	mov	r1, #4
   47650:	add	r0, sp, #4096	; 0x1000
   47654:	add	r0, r0, #24
   47658:	bl	1514 <fwrite@plt>
   4765c:	ldr	r3, [r5]
   47660:	mov	r2, #1
   47664:	mov	r1, #4
   47668:	add	r0, sp, #4096	; 0x1000
   4766c:	add	r0, r0, #36	; 0x24
   47670:	bl	1514 <fwrite@plt>
   47674:	ldr	r3, [r5]
   47678:	mov	r2, #1
   4767c:	mov	r1, #4
   47680:	add	r0, sp, #4096	; 0x1000
   47684:	add	r0, r0, #8
   47688:	bl	1514 <fwrite@plt>
   4768c:	ldr	r3, [r6, #4]
   47690:	lsl	r3, r3, #2
   47694:	add	r2, sp, #4096	; 0x1000
   47698:	add	r2, r2, #12
   4769c:	str	r3, [r2]
   476a0:	ldr	r3, [r5]
   476a4:	mov	r2, #1
   476a8:	mov	r1, #4
   476ac:	add	r0, sp, #4096	; 0x1000
   476b0:	add	r0, r0, #28
   476b4:	bl	1514 <fwrite@plt>
   476b8:	ldr	r3, [r5]
   476bc:	mov	r2, #1
   476c0:	mov	r1, #4
   476c4:	add	r0, sp, #4096	; 0x1000
   476c8:	add	r0, r0, #12
   476cc:	bl	1514 <fwrite@plt>
   476d0:	ldr	r3, [r6, #4]
   476d4:	cmp	r3, #0
   476d8:	ble	4771c <Mat_VarWrite5+0x304>
   476dc:	add	sl, sp, #2048	; 0x800
   476e0:	add	sl, sl, #8
   476e4:	mov	r9, #1
   476e8:	mov	r8, #4
   476ec:	ldr	r3, [r6, #32]
   476f0:	ldr	r3, [r3, r4, lsl #2]
   476f4:	str	r3, [sp, #2056]	; 0x808
   476f8:	ldr	r3, [r5]
   476fc:	mov	r2, r9
   47700:	mov	r1, r8
   47704:	mov	r0, sl
   47708:	bl	1514 <fwrite@plt>
   4770c:	add	r4, r4, #1
   47710:	ldr	r3, [r6, #4]
   47714:	cmp	r3, r4
   47718:	bgt	476ec <Mat_VarWrite5+0x2d4>
   4771c:	tst	r3, #1
   47720:	bne	47818 <Mat_VarWrite5+0x400>
   47724:	ldr	r8, [r6, #36]	; 0x24
   47728:	mov	r0, r8
   4772c:	bl	15c8 <strlen@plt>
   47730:	cmp	r0, #4
   47734:	bhi	47834 <Mat_VarWrite5+0x41c>
   47738:	mov	r9, #1
   4773c:	str	r9, [sp, #2056]	; 0x808
   47740:	mov	r0, r8
   47744:	bl	15c8 <strlen@plt>
   47748:	mov	r8, r0
   4774c:	mov	r4, r0
   47750:	mov	r2, #0
   47754:	strb	r2, [sp, #8]
   47758:	lsl	r3, r0, #16
   4775c:	orr	r3, r3, r9
   47760:	str	r3, [sp, #2056]	; 0x808
   47764:	ldr	r3, [r5]
   47768:	mov	r2, r9
   4776c:	mov	r1, #4
   47770:	add	r0, sp, #2048	; 0x800
   47774:	add	r0, r0, #8
   47778:	bl	1514 <fwrite@plt>
   4777c:	ldr	r3, [r5]
   47780:	mov	r2, r8
   47784:	mov	r1, r9
   47788:	ldr	r0, [r6, #36]	; 0x24
   4778c:	bl	1514 <fwrite@plt>
   47790:	cmp	r8, #3
   47794:	bgt	477c0 <Mat_VarWrite5+0x3a8>
   47798:	add	r9, sp, #8
   4779c:	mov	r8, #1
   477a0:	ldr	r3, [r5]
   477a4:	mov	r2, r8
   477a8:	mov	r1, r8
   477ac:	mov	r0, r9
   477b0:	bl	1514 <fwrite@plt>
   477b4:	add	r4, r4, #1
   477b8:	cmp	r4, #4
   477bc:	bne	477a0 <Mat_VarWrite5+0x388>
   477c0:	ldr	r4, [r6, #52]	; 0x34
   477c4:	cmp	r4, #0
   477c8:	moveq	r3, #0
   477cc:	streq	r3, [r6, #16]
   477d0:	beq	477f0 <Mat_VarWrite5+0x3d8>
   477d4:	ldr	r0, [r5]
   477d8:	bl	14b4 <ftell@plt>
   477dc:	str	r0, [r4]
   477e0:	ldr	r3, [r6, #52]	; 0x34
   477e4:	ldr	r3, [r3]
   477e8:	cmn	r3, #1
   477ec:	beq	478dc <Mat_VarWrite5+0x4c4>
   477f0:	mov	r1, r6
   477f4:	mov	r0, r5
   477f8:	bl	40dd4 <WriteType>
   477fc:	b	474d8 <Mat_VarWrite5+0xc0>
   47800:	ldr	r3, [r6, #40]	; 0x28
   47804:	ldr	r3, [r3]
   47808:	add	r2, sp, #4096	; 0x1000
   4780c:	add	r2, r2, #8
   47810:	str	r3, [r2]
   47814:	b	4762c <Mat_VarWrite5+0x214>
   47818:	ldr	r3, [r5]
   4781c:	mov	r2, #1
   47820:	mov	r1, #4
   47824:	add	r0, sp, #4096	; 0x1000
   47828:	add	r0, r0, #20
   4782c:	bl	1514 <fwrite@plt>
   47830:	b	47724 <Mat_VarWrite5+0x30c>
   47834:	mov	r9, #1
   47838:	add	r4, sp, #40	; 0x28
   4783c:	str	r9, [sp, #8]
   47840:	mov	r0, r8
   47844:	bl	15c8 <strlen@plt>
   47848:	str	r0, [sp, #2056]	; 0x808
   4784c:	mov	r3, #0
   47850:	strb	r3, [r4, #-33]	; 0xffffffdf
   47854:	ldr	r3, [r5]
   47858:	mov	r2, r9
   4785c:	mov	r1, #4
   47860:	sub	r0, r4, #32
   47864:	bl	1514 <fwrite@plt>
   47868:	ldr	r3, [r5]
   4786c:	mov	r2, r9
   47870:	mov	r1, #4
   47874:	add	r0, sp, #2048	; 0x800
   47878:	add	r0, r0, #8
   4787c:	bl	1514 <fwrite@plt>
   47880:	ldr	r3, [r5]
   47884:	ldr	r2, [sp, #2056]	; 0x808
   47888:	mov	r1, r9
   4788c:	ldr	r0, [r6, #36]	; 0x24
   47890:	bl	1514 <fwrite@plt>
   47894:	ldr	r4, [sp, #2056]	; 0x808
   47898:	tst	r4, #7
   4789c:	beq	477c0 <Mat_VarWrite5+0x3a8>
   478a0:	rsbs	r3, r4, #0
   478a4:	and	r4, r4, #7
   478a8:	and	r3, r3, #7
   478ac:	rsbpl	r4, r3, #0
   478b0:	add	r9, sp, #7
   478b4:	mov	r8, #1
   478b8:	ldr	r3, [r5]
   478bc:	mov	r2, r8
   478c0:	mov	r1, r8
   478c4:	mov	r0, r9
   478c8:	bl	1514 <fwrite@plt>
   478cc:	add	r4, r4, #1
   478d0:	cmp	r4, #8
   478d4:	bne	478b8 <Mat_VarWrite5+0x4a0>
   478d8:	b	477c0 <Mat_VarWrite5+0x3a8>
   478dc:	ldr	r0, [pc, #1364]	; 47e38 <Mat_VarWrite5+0xa20>
   478e0:	add	r0, pc, r0
   478e4:	bl	161c <Mat_Critical@plt>
   478e8:	b	477f0 <Mat_VarWrite5+0x3d8>
   478ec:	mov	r2, #2048	; 0x800
   478f0:	mov	r1, #0
   478f4:	add	r0, sp, #2048	; 0x800
   478f8:	add	r0, r0, #8
   478fc:	bl	15f8 <memset@plt>
   47900:	mov	r1, #56	; 0x38
   47904:	mov	r0, #1
   47908:	bl	140c <calloc@plt>
   4790c:	subs	r4, r0, #0
   47910:	beq	47d20 <Mat_VarWrite5+0x908>
   47914:	mov	r3, #56	; 0x38
   47918:	ldr	r2, [pc, #1308]	; 47e3c <Mat_VarWrite5+0xa24>
   4791c:	add	r2, pc, r2
   47920:	mvn	r1, #0
   47924:	mov	r0, r4
   47928:	bl	1550 <deflateInit_@plt>
   4792c:	subs	fp, r0, #0
   47930:	bne	47d00 <Mat_VarWrite5+0x8e8>
   47934:	mov	r3, #15
   47938:	add	r2, sp, #4096	; 0x1000
   4793c:	add	r2, r2, #16
   47940:	str	r3, [r2]
   47944:	ldr	r3, [r5]
   47948:	mov	r2, #1
   4794c:	mov	r1, #4
   47950:	add	r0, sp, #4096	; 0x1000
   47954:	add	r0, r0, #16
   47958:	bl	1514 <fwrite@plt>
   4795c:	ldr	r3, [r5]
   47960:	mov	r2, #1
   47964:	mov	r1, #4
   47968:	add	r0, sp, #4096	; 0x1000
   4796c:	add	r0, r0, #20
   47970:	bl	1514 <fwrite@plt>
   47974:	ldr	r0, [r5]
   47978:	bl	14b4 <ftell@plt>
   4797c:	mov	r7, r0
   47980:	ldr	r2, [r6, #16]
   47984:	uxtb	r3, r2
   47988:	add	r1, sp, #4096	; 0x1000
   4798c:	add	r1, r1, #36	; 0x24
   47990:	str	r3, [r1]
   47994:	ldr	r1, [r6, #20]
   47998:	cmp	r1, #0
   4799c:	beq	479b0 <Mat_VarWrite5+0x598>
   479a0:	orr	r3, r3, #2048	; 0x800
   479a4:	add	r1, sp, #4096	; 0x1000
   479a8:	add	r1, r1, #36	; 0x24
   479ac:	str	r3, [r1]
   479b0:	ldr	r3, [r6, #24]
   479b4:	cmp	r3, #0
   479b8:	beq	479d8 <Mat_VarWrite5+0x5c0>
   479bc:	add	r3, sp, #4096	; 0x1000
   479c0:	add	r3, r3, #36	; 0x24
   479c4:	ldr	r3, [r3]
   479c8:	orr	r3, r3, #1024	; 0x400
   479cc:	add	r1, sp, #4096	; 0x1000
   479d0:	add	r1, r1, #36	; 0x24
   479d4:	str	r3, [r1]
   479d8:	ldr	r3, [r6, #28]
   479dc:	cmp	r3, #0
   479e0:	beq	47a00 <Mat_VarWrite5+0x5e8>
   479e4:	add	r3, sp, #4096	; 0x1000
   479e8:	add	r3, r3, #36	; 0x24
   479ec:	ldr	r3, [r3]
   479f0:	orr	r3, r3, #512	; 0x200
   479f4:	add	r1, sp, #4096	; 0x1000
   479f8:	add	r1, r1, #36	; 0x24
   479fc:	str	r3, [r1]
   47a00:	cmp	r2, #5
   47a04:	beq	47d28 <Mat_VarWrite5+0x910>
   47a08:	mov	r3, #14
   47a0c:	str	r3, [sp, #2056]	; 0x808
   47a10:	ldr	r0, [r6, #36]	; 0x24
   47a14:	cmp	r0, #0
   47a18:	moveq	r8, #24
   47a1c:	beq	47a3c <Mat_VarWrite5+0x624>
   47a20:	bl	15c8 <strlen@plt>
   47a24:	cmp	r0, #4
   47a28:	bls	47d40 <Mat_VarWrite5+0x928>
   47a2c:	tst	r0, #7
   47a30:	bicne	r0, r0, #7
   47a34:	addne	r0, r0, #8
   47a38:	add	r8, r0, #24
   47a3c:	mov	r0, r6
   47a40:	bl	41fcc <GetTypeBufSize>
   47a44:	add	r0, r0, r8
   47a48:	str	r0, [sp, #2060]	; 0x80c
   47a4c:	add	r3, sp, #2048	; 0x800
   47a50:	add	r3, r3, #8
   47a54:	str	r3, [r4]
   47a58:	mov	r3, #8
   47a5c:	str	r3, [r4, #4]
   47a60:	add	r8, sp, r3
   47a64:	mov	sl, #2048	; 0x800
   47a68:	mov	r9, #0
   47a6c:	str	r8, [r4, #12]
   47a70:	str	sl, [r4, #16]
   47a74:	mov	r1, r9
   47a78:	mov	r0, r4
   47a7c:	bl	14fc <deflate@plt>
   47a80:	ldr	r2, [r4, #16]
   47a84:	ldr	r3, [r5]
   47a88:	rsb	r2, r2, #2048	; 0x800
   47a8c:	mov	r1, #1
   47a90:	mov	r0, r8
   47a94:	bl	1514 <fwrite@plt>
   47a98:	ldr	r3, [r4, #16]
   47a9c:	cmp	r3, #0
   47aa0:	beq	47a6c <Mat_VarWrite5+0x654>
   47aa4:	add	r3, sp, #4096	; 0x1000
   47aa8:	add	r3, r3, #32
   47aac:	ldr	r3, [r3]
   47ab0:	str	r3, [sp, #2056]	; 0x808
   47ab4:	add	r3, sp, #4096	; 0x1000
   47ab8:	add	r3, r3, #24
   47abc:	ldr	r3, [r3]
   47ac0:	str	r3, [sp, #2060]	; 0x80c
   47ac4:	add	r3, sp, #4096	; 0x1000
   47ac8:	add	r3, r3, #36	; 0x24
   47acc:	ldr	r3, [r3]
   47ad0:	str	r3, [sp, #2064]	; 0x810
   47ad4:	add	r3, sp, #4096	; 0x1000
   47ad8:	add	r3, r3, #8
   47adc:	ldr	r3, [r3]
   47ae0:	str	r3, [sp, #2068]	; 0x814
   47ae4:	ldr	ip, [r6, #4]
   47ae8:	lsl	r0, ip, #2
   47aec:	add	r3, sp, #4096	; 0x1000
   47af0:	add	r3, r3, #12
   47af4:	str	r0, [r3]
   47af8:	add	r3, sp, #4096	; 0x1000
   47afc:	add	r3, r3, #28
   47b00:	ldr	r3, [r3]
   47b04:	str	r3, [sp, #2072]	; 0x818
   47b08:	str	r0, [sp, #2076]	; 0x81c
   47b0c:	cmp	ip, #0
   47b10:	ble	47b38 <Mat_VarWrite5+0x720>
   47b14:	ldr	r3, [r6, #32]
   47b18:	add	r2, sp, #2064	; 0x810
   47b1c:	add	r2, r2, #12
   47b20:	add	r0, r0, r3
   47b24:	ldr	r1, [r3], #4
   47b28:	str	r1, [r2, #4]!
   47b2c:	cmp	r3, r0
   47b30:	bne	47b24 <Mat_VarWrite5+0x70c>
   47b34:	mov	fp, ip
   47b38:	tst	ip, #1
   47b3c:	beq	47b60 <Mat_VarWrite5+0x748>
   47b40:	add	r3, sp, #4096	; 0x1000
   47b44:	add	r3, r3, #40	; 0x28
   47b48:	add	r3, r3, fp, lsl #2
   47b4c:	add	r2, sp, #4096	; 0x1000
   47b50:	add	r2, r2, #20
   47b54:	ldr	r2, [r2]
   47b58:	str	r2, [r3, #-2056]	; 0xfffff7f8
   47b5c:	add	fp, fp, #1
   47b60:	add	r3, sp, #2048	; 0x800
   47b64:	add	r3, r3, #8
   47b68:	str	r3, [r4]
   47b6c:	add	fp, fp, #6
   47b70:	lsl	fp, fp, #2
   47b74:	str	fp, [r4, #4]
   47b78:	add	r8, sp, #8
   47b7c:	mov	sl, #2048	; 0x800
   47b80:	mov	r9, #0
   47b84:	str	r8, [r4, #12]
   47b88:	str	sl, [r4, #16]
   47b8c:	mov	r1, r9
   47b90:	mov	r0, r4
   47b94:	bl	14fc <deflate@plt>
   47b98:	ldr	r2, [r4, #16]
   47b9c:	ldr	r3, [r5]
   47ba0:	rsb	r2, r2, #2048	; 0x800
   47ba4:	mov	r1, #1
   47ba8:	mov	r0, r8
   47bac:	bl	1514 <fwrite@plt>
   47bb0:	ldr	r3, [r4, #16]
   47bb4:	cmp	r3, #0
   47bb8:	beq	47b84 <Mat_VarWrite5+0x76c>
   47bbc:	ldr	sl, [r6, #36]	; 0x24
   47bc0:	mov	r0, sl
   47bc4:	bl	15c8 <strlen@plt>
   47bc8:	mov	r8, r0
   47bcc:	cmp	r0, #4
   47bd0:	bhi	47d48 <Mat_VarWrite5+0x930>
   47bd4:	sxth	r2, r0
   47bd8:	mov	r3, #0
   47bdc:	str	r3, [sp, #2060]	; 0x80c
   47be0:	lsl	r3, r2, #16
   47be4:	orr	r3, r3, #1
   47be8:	str	r3, [sp, #2056]	; 0x808
   47bec:	mov	r1, sl
   47bf0:	add	r8, sp, #2048	; 0x800
   47bf4:	add	r8, r8, #8
   47bf8:	add	r0, r8, #4
   47bfc:	bl	1490 <memcpy@plt>
   47c00:	str	r8, [r4]
   47c04:	mov	r3, #8
   47c08:	str	r3, [r4, #4]
   47c0c:	add	r8, sp, r3
   47c10:	mov	sl, #2048	; 0x800
   47c14:	mov	r9, #0
   47c18:	str	r8, [r4, #12]
   47c1c:	str	sl, [r4, #16]
   47c20:	mov	r1, r9
   47c24:	mov	r0, r4
   47c28:	bl	14fc <deflate@plt>
   47c2c:	ldr	r2, [r4, #16]
   47c30:	ldr	r3, [r5]
   47c34:	rsb	r2, r2, #2048	; 0x800
   47c38:	mov	r1, #1
   47c3c:	mov	r0, r8
   47c40:	bl	1514 <fwrite@plt>
   47c44:	ldr	r3, [r4, #16]
   47c48:	cmp	r3, #0
   47c4c:	beq	47c18 <Mat_VarWrite5+0x800>
   47c50:	ldr	r8, [r6, #52]	; 0x34
   47c54:	cmp	r8, #0
   47c58:	moveq	r3, #0
   47c5c:	streq	r3, [r6, #16]
   47c60:	beq	47c80 <Mat_VarWrite5+0x868>
   47c64:	ldr	r0, [r5]
   47c68:	bl	14b4 <ftell@plt>
   47c6c:	str	r0, [r8]
   47c70:	ldr	r3, [r6, #52]	; 0x34
   47c74:	ldr	r3, [r3]
   47c78:	cmn	r3, #1
   47c7c:	beq	47dfc <Mat_VarWrite5+0x9e4>
   47c80:	mov	r2, r4
   47c84:	mov	r1, r6
   47c88:	mov	r0, r5
   47c8c:	bl	42308 <WriteCompressedType>
   47c90:	mov	r3, #0
   47c94:	str	r3, [r4]
   47c98:	str	r3, [r4, #4]
   47c9c:	add	r6, sp, #8
   47ca0:	mov	sl, #2048	; 0x800
   47ca4:	mov	r9, #4
   47ca8:	str	r6, [r4, #12]
   47cac:	str	sl, [r4, #16]
   47cb0:	mov	r1, r9
   47cb4:	mov	r0, r4
   47cb8:	bl	14fc <deflate@plt>
   47cbc:	mov	r8, r0
   47cc0:	ldr	r2, [r4, #16]
   47cc4:	ldr	r3, [r5]
   47cc8:	rsb	r2, r2, #2048	; 0x800
   47ccc:	mov	r1, #1
   47cd0:	mov	r0, r6
   47cd4:	bl	1514 <fwrite@plt>
   47cd8:	cmp	r8, #1
   47cdc:	beq	47cec <Mat_VarWrite5+0x8d4>
   47ce0:	ldr	r3, [r4, #16]
   47ce4:	cmp	r3, #0
   47ce8:	beq	47ca8 <Mat_VarWrite5+0x890>
   47cec:	mov	r0, r4
   47cf0:	bl	1628 <deflateEnd@plt>
   47cf4:	mov	r0, r4
   47cf8:	bl	1478 <free@plt>
   47cfc:	b	474d8 <Mat_VarWrite5+0xc0>
   47d00:	mov	r0, r4
   47d04:	bl	1478 <free@plt>
   47d08:	mov	r0, fp
   47d0c:	bl	14f0 <zError@plt>
   47d10:	mov	r1, r0
   47d14:	ldr	r0, [pc, #292]	; 47e40 <Mat_VarWrite5+0xa28>
   47d18:	add	r0, pc, r0
   47d1c:	bl	161c <Mat_Critical@plt>
   47d20:	mvn	r0, #0
   47d24:	b	47548 <Mat_VarWrite5+0x130>
   47d28:	ldr	r3, [r6, #40]	; 0x28
   47d2c:	ldr	r3, [r3]
   47d30:	add	r2, sp, #4096	; 0x1000
   47d34:	add	r2, r2, #8
   47d38:	str	r3, [r2]
   47d3c:	b	47a08 <Mat_VarWrite5+0x5f0>
   47d40:	mov	r8, #24
   47d44:	b	47a3c <Mat_VarWrite5+0x624>
   47d48:	mov	r9, r0
   47d4c:	mov	r2, #2048	; 0x800
   47d50:	mov	r1, #0
   47d54:	add	fp, sp, #2048	; 0x800
   47d58:	add	fp, fp, #8
   47d5c:	mov	r0, fp
   47d60:	bl	15f8 <memset@plt>
   47d64:	mov	r3, #1
   47d68:	str	r3, [sp, #2056]	; 0x808
   47d6c:	str	r8, [sp, #2060]	; 0x80c
   47d70:	mov	r2, r8
   47d74:	mov	r1, sl
   47d78:	add	r0, fp, #8
   47d7c:	bl	1490 <memcpy@plt>
   47d80:	tst	r8, #7
   47d84:	beq	47da0 <Mat_VarWrite5+0x988>
   47d88:	rsbs	r2, r8, #0
   47d8c:	and	r3, r8, #7
   47d90:	and	r2, r2, #7
   47d94:	rsbpl	r3, r2, #0
   47d98:	rsb	r3, r3, #8
   47d9c:	add	r9, r8, r3
   47da0:	add	r3, sp, #2048	; 0x800
   47da4:	add	r3, r3, #8
   47da8:	str	r3, [r4]
   47dac:	add	r9, r9, #8
   47db0:	str	r9, [r4, #4]
   47db4:	add	r8, sp, #8
   47db8:	mov	sl, #2048	; 0x800
   47dbc:	mov	r9, #0
   47dc0:	str	r8, [r4, #12]
   47dc4:	str	sl, [r4, #16]
   47dc8:	mov	r1, r9
   47dcc:	mov	r0, r4
   47dd0:	bl	14fc <deflate@plt>
   47dd4:	ldr	r2, [r4, #16]
   47dd8:	ldr	r3, [r5]
   47ddc:	rsb	r2, r2, #2048	; 0x800
   47de0:	mov	r1, #1
   47de4:	mov	r0, r8
   47de8:	bl	1514 <fwrite@plt>
   47dec:	ldr	r3, [r4, #16]
   47df0:	cmp	r3, #0
   47df4:	beq	47dc0 <Mat_VarWrite5+0x9a8>
   47df8:	b	47c50 <Mat_VarWrite5+0x838>
   47dfc:	ldr	r0, [pc, #64]	; 47e44 <Mat_VarWrite5+0xa2c>
   47e00:	add	r0, pc, r0
   47e04:	bl	161c <Mat_Critical@plt>
   47e08:	b	47c80 <Mat_VarWrite5+0x868>
   47e0c:	ldr	r0, [pc, #52]	; 47e48 <Mat_VarWrite5+0xa30>
   47e10:	add	r0, pc, r0
   47e14:	bl	161c <Mat_Critical@plt>
   47e18:	mov	r0, #0
   47e1c:	b	47548 <Mat_VarWrite5+0x130>
   47e20:	mvn	r0, #0
   47e24:	b	47548 <Mat_VarWrite5+0x130>
   47e28:	mvn	r0, #0
   47e2c:	b	47548 <Mat_VarWrite5+0x130>
   47e30:	mvn	r0, #0
   47e34:	b	47548 <Mat_VarWrite5+0x130>
   47e38:	.word	0x00007b48
   47e3c:	.word	0x00007f14
   47e40:	.word	0x00007b20
   47e44:	.word	0x00007628
   47e48:	.word	0x00007618

00047e4c <Mat_VarReadNextInfo5>:
   47e4c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   47e50:	strd	r6, [sp, #8]
   47e54:	strd	r8, [sp, #16]
   47e58:	str	lr, [sp, #24]
   47e5c:	sub	sp, sp, #92	; 0x5c
   47e60:	subs	r5, r0, #0
   47e64:	moveq	r4, r5
   47e68:	beq	482ec <Mat_VarReadNextInfo5+0x4a0>
   47e6c:	ldr	r0, [r5]
   47e70:	bl	14b4 <ftell@plt>
   47e74:	mov	r6, r0
   47e78:	cmn	r0, #1
   47e7c:	beq	47f4c <Mat_VarReadNextInfo5+0x100>
   47e80:	ldr	r3, [r5]
   47e84:	mov	r2, #1
   47e88:	mov	r1, #4
   47e8c:	add	r0, sp, #84	; 0x54
   47e90:	bl	1520 <fread@plt>
   47e94:	cmp	r0, #0
   47e98:	moveq	r4, #0
   47e9c:	beq	482ec <Mat_VarReadNextInfo5+0x4a0>
   47ea0:	ldr	r3, [r5]
   47ea4:	mov	r2, #1
   47ea8:	mov	r1, #4
   47eac:	add	r0, sp, #80	; 0x50
   47eb0:	bl	1520 <fread@plt>
   47eb4:	ldr	r3, [r5, #20]
   47eb8:	cmp	r3, #0
   47ebc:	bne	47f60 <Mat_VarReadNextInfo5+0x114>
   47ec0:	ldr	r1, [sp, #84]	; 0x54
   47ec4:	cmp	r1, #14
   47ec8:	beq	48218 <Mat_VarReadNextInfo5+0x3cc>
   47ecc:	cmp	r1, #15
   47ed0:	bne	48508 <Mat_VarReadNextInfo5+0x6bc>
   47ed4:	mov	r2, #64	; 0x40
   47ed8:	mov	r1, #0
   47edc:	add	r0, sp, #16
   47ee0:	bl	15f8 <memset@plt>
   47ee4:	bl	1508 <Mat_VarCalloc@plt>
   47ee8:	mov	r4, r0
   47eec:	mov	r0, #1
   47ef0:	str	r0, [r4, #48]	; 0x30
   47ef4:	ldr	r7, [r4, #52]	; 0x34
   47ef8:	mov	r1, #56	; 0x38
   47efc:	bl	140c <calloc@plt>
   47f00:	str	r0, [r7, #12]
   47f04:	ldr	r3, [r4, #52]	; 0x34
   47f08:	mov	r2, #56	; 0x38
   47f0c:	ldr	r1, [pc, #1852]	; 48650 <Mat_VarReadNextInfo5+0x804>
   47f10:	add	r1, pc, r1
   47f14:	ldr	r0, [r3, #12]
   47f18:	bl	1640 <inflateInit_@plt>
   47f1c:	subs	r7, r0, #0
   47f20:	beq	47f74 <Mat_VarReadNextInfo5+0x128>
   47f24:	mov	r0, r4
   47f28:	bl	158c <Mat_VarFree@plt>
   47f2c:	mov	r0, r7
   47f30:	bl	14f0 <zError@plt>
   47f34:	mov	r1, r0
   47f38:	ldr	r0, [pc, #1812]	; 48654 <Mat_VarReadNextInfo5+0x808>
   47f3c:	add	r0, pc, r0
   47f40:	bl	161c <Mat_Critical@plt>
   47f44:	mov	r4, #0
   47f48:	b	482ec <Mat_VarReadNextInfo5+0x4a0>
   47f4c:	ldr	r0, [pc, #1796]	; 48658 <Mat_VarReadNextInfo5+0x80c>
   47f50:	add	r0, pc, r0
   47f54:	bl	161c <Mat_Critical@plt>
   47f58:	mov	r4, #0
   47f5c:	b	482ec <Mat_VarReadNextInfo5+0x4a0>
   47f60:	add	r0, sp, #84	; 0x54
   47f64:	bl	18a4 <Mat_int32Swap>
   47f68:	add	r0, sp, #80	; 0x50
   47f6c:	bl	18a4 <Mat_int32Swap>
   47f70:	b	47ec0 <Mat_VarReadNextInfo5+0x74>
   47f74:	add	r2, sp, #16
   47f78:	mov	r1, r4
   47f7c:	mov	r0, r5
   47f80:	bl	2544 <InflateVarTag>
   47f84:	mov	r8, r0
   47f88:	ldr	r3, [r5, #20]
   47f8c:	cmp	r3, #0
   47f90:	bne	47fd0 <Mat_VarReadNextInfo5+0x184>
   47f94:	ldr	r3, [sp, #16]
   47f98:	cmp	r3, #14
   47f9c:	beq	47fe4 <Mat_VarReadNextInfo5+0x198>
   47fa0:	mov	r2, #1
   47fa4:	ldr	r1, [sp, #80]	; 0x50
   47fa8:	sub	r1, r1, r8
   47fac:	ldr	r0, [r5]
   47fb0:	bl	1694 <fseek@plt>
   47fb4:	mov	r0, r4
   47fb8:	bl	158c <Mat_VarFree@plt>
   47fbc:	ldr	r0, [pc, #1688]	; 4865c <Mat_VarReadNextInfo5+0x810>
   47fc0:	add	r0, pc, r0
   47fc4:	bl	161c <Mat_Critical@plt>
   47fc8:	mov	r4, #0
   47fcc:	b	482ec <Mat_VarReadNextInfo5+0x4a0>
   47fd0:	add	r0, sp, #16
   47fd4:	bl	18d4 <Mat_uint32Swap>
   47fd8:	add	r0, sp, #20
   47fdc:	bl	18d4 <Mat_uint32Swap>
   47fe0:	b	47f94 <Mat_VarReadNextInfo5+0x148>
   47fe4:	add	r2, sp, #16
   47fe8:	mov	r1, r4
   47fec:	mov	r0, r5
   47ff0:	bl	26fc <InflateArrayFlags>
   47ff4:	ldr	r3, [r5, #20]
   47ff8:	cmp	r3, #0
   47ffc:	bne	48034 <Mat_VarReadNextInfo5+0x1e8>
   48000:	ldr	r3, [sp, #16]
   48004:	cmp	r3, #6
   48008:	beq	48050 <Mat_VarReadNextInfo5+0x204>
   4800c:	ldr	r3, [r4, #16]
   48010:	cmp	r3, #17
   48014:	bne	48560 <Mat_VarReadNextInfo5+0x714>
   48018:	ldr	r1, [sp, #80]	; 0x50
   4801c:	add	r1, r1, #8
   48020:	mov	r2, #0
   48024:	add	r1, r1, r6
   48028:	ldr	r0, [r5]
   4802c:	bl	1694 <fseek@plt>
   48030:	b	482ec <Mat_VarReadNextInfo5+0x4a0>
   48034:	add	r0, sp, #16
   48038:	bl	18d4 <Mat_uint32Swap>
   4803c:	add	r0, sp, #24
   48040:	bl	18d4 <Mat_uint32Swap>
   48044:	add	r0, sp, #28
   48048:	bl	18d4 <Mat_uint32Swap>
   4804c:	b	48000 <Mat_VarReadNextInfo5+0x1b4>
   48050:	ldr	r3, [sp, #24]
   48054:	uxtb	r2, r3
   48058:	cmp	r2, #17
   4805c:	bhi	48540 <Mat_VarReadNextInfo5+0x6f4>
   48060:	str	r2, [r4, #16]
   48064:	and	r1, r3, #2048	; 0x800
   48068:	str	r1, [r4, #20]
   4806c:	and	r1, r3, #1024	; 0x400
   48070:	str	r1, [r4, #24]
   48074:	and	r3, r3, #512	; 0x200
   48078:	str	r3, [r4, #28]
   4807c:	cmp	r2, #5
   48080:	bne	4800c <Mat_VarReadNextInfo5+0x1c0>
   48084:	ldr	r3, [sp, #28]
   48088:	str	r3, [r4]
   4808c:	b	48560 <Mat_VarReadNextInfo5+0x714>
   48090:	add	r0, sp, #16
   48094:	bl	18d4 <Mat_uint32Swap>
   48098:	add	r0, sp, #20
   4809c:	bl	18d4 <Mat_uint32Swap>
   480a0:	b	485a8 <Mat_VarReadNextInfo5+0x75c>
   480a4:	ldr	r9, [sp, #20]
   480a8:	add	r0, r9, #3
   480ac:	cmp	r9, #0
   480b0:	movge	r0, r9
   480b4:	asr	r0, r0, #2
   480b8:	str	r0, [r4, #4]
   480bc:	lsl	r0, r0, #2
   480c0:	bl	1544 <malloc@plt>
   480c4:	str	r0, [r4, #32]
   480c8:	ldr	r3, [r5, #20]
   480cc:	cmp	r3, #0
   480d0:	bne	48100 <Mat_VarReadNextInfo5+0x2b4>
   480d4:	cmp	r9, #3
   480d8:	ble	485b4 <Mat_VarReadNextInfo5+0x768>
   480dc:	ldr	r2, [sp, #12]
   480e0:	ldr	r1, [r2, r3, lsl #2]
   480e4:	ldr	r2, [r4, #32]
   480e8:	str	r1, [r2, r3, lsl #2]
   480ec:	add	r3, r3, #1
   480f0:	ldr	r2, [r4, #4]
   480f4:	cmp	r2, r3
   480f8:	bgt	480dc <Mat_VarReadNextInfo5+0x290>
   480fc:	b	485b4 <Mat_VarReadNextInfo5+0x768>
   48100:	cmp	r9, #3
   48104:	ble	485b4 <Mat_VarReadNextInfo5+0x768>
   48108:	ldr	r9, [r4, #32]
   4810c:	ldr	r0, [sp, #12]
   48110:	add	r0, r0, r7, lsl #2
   48114:	bl	18d4 <Mat_uint32Swap>
   48118:	str	r0, [r9, r7, lsl #2]
   4811c:	add	r7, r7, #1
   48120:	ldr	r3, [r4, #4]
   48124:	cmp	r3, r7
   48128:	bgt	48108 <Mat_VarReadNextInfo5+0x2bc>
   4812c:	b	485b4 <Mat_VarReadNextInfo5+0x768>
   48130:	ldr	r0, [sp, #12]
   48134:	bl	1478 <free@plt>
   48138:	b	485bc <Mat_VarReadNextInfo5+0x770>
   4813c:	add	r0, sp, #16
   48140:	bl	18d4 <Mat_uint32Swap>
   48144:	ldr	r3, [sp, #16]
   48148:	cmp	r3, #1
   4814c:	bne	485e4 <Mat_VarReadNextInfo5+0x798>
   48150:	ldr	r3, [r5, #20]
   48154:	cmp	r3, #0
   48158:	beq	4816c <Mat_VarReadNextInfo5+0x320>
   4815c:	add	r0, sp, #20
   48160:	bl	18d4 <Mat_uint32Swap>
   48164:	mov	r7, r0
   48168:	b	48170 <Mat_VarReadNextInfo5+0x324>
   4816c:	ldr	r7, [sp, #20]
   48170:	tst	r7, #7
   48174:	bicne	r8, r7, #7
   48178:	addne	r8, r8, #8
   4817c:	moveq	r8, r7
   48180:	add	r0, r8, #1
   48184:	bl	1544 <malloc@plt>
   48188:	str	r0, [r4, #36]	; 0x24
   4818c:	cmp	r0, #0
   48190:	beq	485f0 <Mat_VarReadNextInfo5+0x7a4>
   48194:	mov	r3, r8
   48198:	mov	r2, r0
   4819c:	mov	r1, r4
   481a0:	mov	r0, r5
   481a4:	bl	2e28 <InflateVarName>
   481a8:	ldr	r3, [r4, #36]	; 0x24
   481ac:	mov	r2, #0
   481b0:	strb	r2, [r3, r7]
   481b4:	b	485f0 <Mat_VarReadNextInfo5+0x7a4>
   481b8:	lsr	r7, r3, #16
   481bc:	sub	r3, r7, #1
   481c0:	cmp	r3, #3
   481c4:	bhi	485f0 <Mat_VarReadNextInfo5+0x7a4>
   481c8:	add	r0, r7, #1
   481cc:	bl	1544 <malloc@plt>
   481d0:	str	r0, [r4, #36]	; 0x24
   481d4:	cmp	r0, #0
   481d8:	beq	485f0 <Mat_VarReadNextInfo5+0x7a4>
   481dc:	mov	r2, r7
   481e0:	add	r1, sp, #20
   481e4:	bl	1490 <memcpy@plt>
   481e8:	ldr	r3, [r4, #36]	; 0x24
   481ec:	mov	r2, #0
   481f0:	strb	r2, [r3, r7]
   481f4:	b	485f0 <Mat_VarReadNextInfo5+0x7a4>
   481f8:	mov	r1, r4
   481fc:	mov	r0, r5
   48200:	bl	457d0 <ReadNextStructField>
   48204:	b	48604 <Mat_VarReadNextInfo5+0x7b8>
   48208:	mov	r1, r4
   4820c:	mov	r0, r5
   48210:	bl	44d90 <ReadNextCell>
   48214:	b	48604 <Mat_VarReadNextInfo5+0x7b8>
   48218:	bl	1508 <Mat_VarCalloc@plt>
   4821c:	mov	r4, r0
   48220:	ldr	r3, [r5]
   48224:	mov	r2, #6
   48228:	mov	r1, #4
   4822c:	add	r0, sp, #16
   48230:	bl	1520 <fread@plt>
   48234:	ldr	r3, [r5, #20]
   48238:	cmp	r3, #0
   4823c:	bne	48308 <Mat_VarReadNextInfo5+0x4bc>
   48240:	ldr	r3, [sp, #16]
   48244:	cmp	r3, #6
   48248:	beq	4833c <Mat_VarReadNextInfo5+0x4f0>
   4824c:	ldr	r3, [sp, #36]	; 0x24
   48250:	ldr	r2, [sp, #32]
   48254:	mov	r1, r4
   48258:	mov	r0, r5
   4825c:	bl	40aac <ReadRankDims>
   48260:	ldr	r3, [r5]
   48264:	mov	r2, #2
   48268:	mov	r1, #4
   4826c:	add	r0, sp, #16
   48270:	bl	1520 <fread@plt>
   48274:	ldr	r3, [r5, #20]
   48278:	cmp	r3, #0
   4827c:	bne	48378 <Mat_VarReadNextInfo5+0x52c>
   48280:	ldr	r3, [sp, #16]
   48284:	cmp	r3, #1
   48288:	beq	483a8 <Mat_VarReadNextInfo5+0x55c>
   4828c:	uxth	r2, r3
   48290:	cmp	r2, #1
   48294:	beq	48418 <Mat_VarReadNextInfo5+0x5cc>
   48298:	ldr	r3, [r4, #16]
   4829c:	cmp	r3, #2
   482a0:	beq	48458 <Mat_VarReadNextInfo5+0x60c>
   482a4:	cmp	r3, #1
   482a8:	beq	48468 <Mat_VarReadNextInfo5+0x61c>
   482ac:	cmp	r3, #16
   482b0:	beq	48478 <Mat_VarReadNextInfo5+0x62c>
   482b4:	ldr	r7, [r4, #52]	; 0x34
   482b8:	ldr	r0, [r5]
   482bc:	bl	14b4 <ftell@plt>
   482c0:	str	r0, [r7]
   482c4:	ldr	r3, [r4, #52]	; 0x34
   482c8:	ldr	r3, [r3]
   482cc:	cmn	r3, #1
   482d0:	beq	484f8 <Mat_VarReadNextInfo5+0x6ac>
   482d4:	ldr	r1, [sp, #80]	; 0x50
   482d8:	add	r1, r1, #8
   482dc:	mov	r2, #0
   482e0:	add	r1, r1, r6
   482e4:	ldr	r0, [r5]
   482e8:	bl	1694 <fseek@plt>
   482ec:	mov	r0, r4
   482f0:	add	sp, sp, #92	; 0x5c
   482f4:	ldrd	r4, [sp]
   482f8:	ldrd	r6, [sp, #8]
   482fc:	ldrd	r8, [sp, #16]
   48300:	add	sp, sp, #24
   48304:	pop	{pc}		; (ldr pc, [sp], #4)
   48308:	add	r0, sp, #16
   4830c:	bl	18d4 <Mat_uint32Swap>
   48310:	add	r0, sp, #20
   48314:	bl	18d4 <Mat_uint32Swap>
   48318:	add	r0, sp, #24
   4831c:	bl	18d4 <Mat_uint32Swap>
   48320:	add	r0, sp, #28
   48324:	bl	18d4 <Mat_uint32Swap>
   48328:	add	r0, sp, #32
   4832c:	bl	18d4 <Mat_uint32Swap>
   48330:	add	r0, sp, #36	; 0x24
   48334:	bl	18d4 <Mat_uint32Swap>
   48338:	b	48240 <Mat_VarReadNextInfo5+0x3f4>
   4833c:	ldr	r3, [sp, #24]
   48340:	uxtb	r2, r3
   48344:	cmp	r2, #17
   48348:	bhi	4851c <Mat_VarReadNextInfo5+0x6d0>
   4834c:	str	r2, [r4, #16]
   48350:	and	r1, r3, #2048	; 0x800
   48354:	str	r1, [r4, #20]
   48358:	and	r1, r3, #1024	; 0x400
   4835c:	str	r1, [r4, #24]
   48360:	and	r3, r3, #512	; 0x200
   48364:	str	r3, [r4, #28]
   48368:	cmp	r2, #5
   4836c:	ldreq	r3, [sp, #28]
   48370:	streq	r3, [r4]
   48374:	b	4824c <Mat_VarReadNextInfo5+0x400>
   48378:	add	r0, sp, #16
   4837c:	bl	18d4 <Mat_uint32Swap>
   48380:	ldr	r3, [sp, #16]
   48384:	cmp	r3, #1
   48388:	bne	4828c <Mat_VarReadNextInfo5+0x440>
   4838c:	ldr	r3, [r5, #20]
   48390:	cmp	r3, #0
   48394:	beq	483a8 <Mat_VarReadNextInfo5+0x55c>
   48398:	add	r0, sp, #20
   4839c:	bl	18d4 <Mat_uint32Swap>
   483a0:	mov	r8, r0
   483a4:	b	483ac <Mat_VarReadNextInfo5+0x560>
   483a8:	ldr	r8, [sp, #20]
   483ac:	tst	r8, #7
   483b0:	bicne	r7, r8, #7
   483b4:	addne	r7, r7, #8
   483b8:	moveq	r7, r8
   483bc:	add	r0, r7, #1
   483c0:	bl	1544 <malloc@plt>
   483c4:	str	r0, [r4, #36]	; 0x24
   483c8:	cmp	r0, #0
   483cc:	beq	48298 <Mat_VarReadNextInfo5+0x44c>
   483d0:	ldr	r3, [r5]
   483d4:	mov	r2, r7
   483d8:	mov	r1, #1
   483dc:	bl	1520 <fread@plt>
   483e0:	cmp	r7, r0
   483e4:	bne	483f8 <Mat_VarReadNextInfo5+0x5ac>
   483e8:	ldr	r3, [r4, #36]	; 0x24
   483ec:	mov	r2, #0
   483f0:	strb	r2, [r3, r8]
   483f4:	b	48298 <Mat_VarReadNextInfo5+0x44c>
   483f8:	ldr	r0, [r4, #36]	; 0x24
   483fc:	bl	1478 <free@plt>
   48400:	mov	r3, #0
   48404:	str	r3, [r4, #36]	; 0x24
   48408:	ldr	r0, [pc, #592]	; 48660 <Mat_VarReadNextInfo5+0x814>
   4840c:	add	r0, pc, r0
   48410:	bl	161c <Mat_Critical@plt>
   48414:	b	48298 <Mat_VarReadNextInfo5+0x44c>
   48418:	lsr	r7, r3, #16
   4841c:	sub	r3, r7, #1
   48420:	cmp	r3, #3
   48424:	bhi	48298 <Mat_VarReadNextInfo5+0x44c>
   48428:	add	r0, r7, #1
   4842c:	bl	1544 <malloc@plt>
   48430:	str	r0, [r4, #36]	; 0x24
   48434:	cmp	r0, #0
   48438:	beq	48298 <Mat_VarReadNextInfo5+0x44c>
   4843c:	mov	r2, r7
   48440:	add	r1, sp, #20
   48444:	bl	1490 <memcpy@plt>
   48448:	ldr	r3, [r4, #36]	; 0x24
   4844c:	mov	r2, #0
   48450:	strb	r2, [r3, r7]
   48454:	b	48298 <Mat_VarReadNextInfo5+0x44c>
   48458:	mov	r1, r4
   4845c:	mov	r0, r5
   48460:	bl	457d0 <ReadNextStructField>
   48464:	b	482b4 <Mat_VarReadNextInfo5+0x468>
   48468:	mov	r1, r4
   4846c:	mov	r0, r5
   48470:	bl	44d90 <ReadNextCell>
   48474:	b	482b4 <Mat_VarReadNextInfo5+0x468>
   48478:	mov	r3, #1
   4847c:	str	r3, [sp, #12]
   48480:	add	r1, sp, #12
   48484:	mov	r0, r4
   48488:	bl	4a3c8 <SafeMulDims>
   4848c:	mov	r2, #4
   48490:	str	r2, [r4, #12]
   48494:	ldr	r1, [sp, #12]
   48498:	mov	r0, r4
   4849c:	bl	4a440 <SafeMul>
   484a0:	ldr	r0, [r4]
   484a4:	bl	1544 <malloc@plt>
   484a8:	str	r0, [r4, #40]	; 0x28
   484ac:	cmp	r0, #0
   484b0:	beq	484e8 <Mat_VarReadNextInfo5+0x69c>
   484b4:	ldr	r3, [sp, #12]
   484b8:	cmp	r3, #0
   484bc:	beq	482b4 <Mat_VarReadNextInfo5+0x468>
   484c0:	sub	r8, r0, #4
   484c4:	mov	r7, #0
   484c8:	mov	r0, r5
   484cc:	bl	16b8 <Mat_VarReadNextInfo@plt>
   484d0:	str	r0, [r8, #4]!
   484d4:	add	r7, r7, #1
   484d8:	ldr	r3, [sp, #12]
   484dc:	cmp	r7, r3
   484e0:	bcc	484c8 <Mat_VarReadNextInfo5+0x67c>
   484e4:	b	482b4 <Mat_VarReadNextInfo5+0x468>
   484e8:	mov	r3, #0
   484ec:	str	r3, [r4, #12]
   484f0:	str	r3, [r4]
   484f4:	b	482b4 <Mat_VarReadNextInfo5+0x468>
   484f8:	ldr	r0, [pc, #356]	; 48664 <Mat_VarReadNextInfo5+0x818>
   484fc:	add	r0, pc, r0
   48500:	bl	161c <Mat_Critical@plt>
   48504:	b	482d4 <Mat_VarReadNextInfo5+0x488>
   48508:	ldr	r0, [pc, #344]	; 48668 <Mat_VarReadNextInfo5+0x81c>
   4850c:	add	r0, pc, r0
   48510:	bl	161c <Mat_Critical@plt>
   48514:	mov	r4, #0
   48518:	b	482ec <Mat_VarReadNextInfo5+0x4a0>
   4851c:	mov	r2, #0
   48520:	str	r2, [r4, #16]
   48524:	and	r2, r3, #2048	; 0x800
   48528:	str	r2, [r4, #20]
   4852c:	and	r2, r3, #1024	; 0x400
   48530:	str	r2, [r4, #24]
   48534:	and	r3, r3, #512	; 0x200
   48538:	str	r3, [r4, #28]
   4853c:	b	4824c <Mat_VarReadNextInfo5+0x400>
   48540:	mov	r2, #0
   48544:	str	r2, [r4, #16]
   48548:	and	r2, r3, #2048	; 0x800
   4854c:	str	r2, [r4, #20]
   48550:	and	r2, r3, #1024	; 0x400
   48554:	str	r2, [r4, #24]
   48558:	and	r3, r3, #512	; 0x200
   4855c:	str	r3, [r4, #28]
   48560:	mov	r3, #0
   48564:	str	r3, [sp, #12]
   48568:	add	r3, sp, #12
   4856c:	str	r3, [sp]
   48570:	mov	r3, #64	; 0x40
   48574:	add	r2, sp, #16
   48578:	mov	r1, r4
   4857c:	mov	r0, r5
   48580:	bl	28b4 <InflateRankDims>
   48584:	ldr	r3, [sp, #12]
   48588:	cmp	r3, #0
   4858c:	addeq	r3, sp, #24
   48590:	streq	r3, [sp, #12]
   48594:	moveq	r8, r7
   48598:	movne	r8, #1
   4859c:	ldr	r3, [r5, #20]
   485a0:	cmp	r3, #0
   485a4:	bne	48090 <Mat_VarReadNextInfo5+0x244>
   485a8:	ldr	r3, [sp, #16]
   485ac:	cmp	r3, #5
   485b0:	beq	480a4 <Mat_VarReadNextInfo5+0x258>
   485b4:	cmp	r8, #0
   485b8:	bne	48130 <Mat_VarReadNextInfo5+0x2e4>
   485bc:	add	r2, sp, #16
   485c0:	mov	r1, r4
   485c4:	mov	r0, r5
   485c8:	bl	2c70 <InflateVarNameTag>
   485cc:	ldr	r3, [r5, #20]
   485d0:	cmp	r3, #0
   485d4:	bne	4813c <Mat_VarReadNextInfo5+0x2f0>
   485d8:	ldr	r3, [sp, #16]
   485dc:	cmp	r3, #1
   485e0:	beq	4816c <Mat_VarReadNextInfo5+0x320>
   485e4:	uxth	r2, r3
   485e8:	cmp	r2, #1
   485ec:	beq	481b8 <Mat_VarReadNextInfo5+0x36c>
   485f0:	ldr	r3, [r4, #16]
   485f4:	cmp	r3, #2
   485f8:	beq	481f8 <Mat_VarReadNextInfo5+0x3ac>
   485fc:	cmp	r3, #1
   48600:	beq	48208 <Mat_VarReadNextInfo5+0x3bc>
   48604:	ldr	r3, [r4, #52]	; 0x34
   48608:	ldr	r3, [r3, #12]
   4860c:	ldr	r1, [r3, #4]
   48610:	mov	r2, #1
   48614:	rsb	r1, r1, #0
   48618:	ldr	r0, [r5]
   4861c:	bl	1694 <fseek@plt>
   48620:	ldr	r7, [r4, #52]	; 0x34
   48624:	ldr	r0, [r5]
   48628:	bl	14b4 <ftell@plt>
   4862c:	str	r0, [r7]
   48630:	ldr	r3, [r4, #52]	; 0x34
   48634:	ldr	r3, [r3]
   48638:	cmn	r3, #1
   4863c:	bne	48018 <Mat_VarReadNextInfo5+0x1cc>
   48640:	ldr	r0, [pc, #36]	; 4866c <Mat_VarReadNextInfo5+0x820>
   48644:	add	r0, pc, r0
   48648:	bl	161c <Mat_Critical@plt>
   4864c:	b	48018 <Mat_VarReadNextInfo5+0x1cc>
   48650:	.word	0x00007920
   48654:	.word	0x00007914
   48658:	.word	0x000074d8
   4865c:	.word	0x0000773c
   48660:	.word	0x00007040
   48664:	.word	0x00006f2c
   48668:	.word	0x0000735c
   4866c:	.word	0x00006de4

00048670 <Mat_Create4>:
   48670:	strd	r4, [sp, #-16]!
   48674:	str	r6, [sp, #8]
   48678:	str	lr, [sp, #12]
   4867c:	mov	r6, r0
   48680:	ldr	r1, [pc, #152]	; 48720 <Mat_Create4+0xb0>
   48684:	add	r1, pc, r1
   48688:	bl	1454 <fopen@plt>
   4868c:	subs	r5, r0, #0
   48690:	moveq	r4, r5
   48694:	beq	486f4 <Mat_Create4+0x84>
   48698:	mov	r0, #44	; 0x2c
   4869c:	bl	1544 <malloc@plt>
   486a0:	subs	r4, r0, #0
   486a4:	beq	48708 <Mat_Create4+0x98>
   486a8:	str	r5, [r4]
   486ac:	mov	r5, #0
   486b0:	str	r5, [r4, #4]
   486b4:	str	r5, [r4, #8]
   486b8:	mov	r1, r6
   486bc:	ldr	r0, [pc, #96]	; 48724 <Mat_Create4+0xb4>
   486c0:	add	r0, pc, r0
   486c4:	bl	1cf0 <strdup_printf>
   486c8:	str	r0, [r4, #12]
   486cc:	mov	r3, #16
   486d0:	str	r3, [r4, #16]
   486d4:	str	r5, [r4, #20]
   486d8:	str	r5, [r4, #24]
   486dc:	str	r5, [r4, #28]
   486e0:	str	r5, [r4, #32]
   486e4:	str	r5, [r4, #36]	; 0x24
   486e8:	str	r5, [r4, #40]	; 0x28
   486ec:	mov	r0, r4
   486f0:	bl	15ec <Mat_Rewind@plt>
   486f4:	mov	r0, r4
   486f8:	ldrd	r4, [sp]
   486fc:	ldr	r6, [sp, #8]
   48700:	add	sp, sp, #12
   48704:	pop	{pc}		; (ldr pc, [sp], #4)
   48708:	mov	r0, r5
   4870c:	bl	1634 <fclose@plt>
   48710:	ldr	r0, [pc, #16]	; 48728 <Mat_Create4+0xb8>
   48714:	add	r0, pc, r0
   48718:	bl	161c <Mat_Critical@plt>
   4871c:	b	486f4 <Mat_Create4+0x84>
   48720:	.word	0x00006df4
   48724:	.word	0x00007534
   48728:	.word	0x00007188

0004872c <Mat_VarWrite4>:
   4872c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   48730:	strd	r6, [sp, #8]
   48734:	strd	r8, [sp, #16]
   48738:	strd	sl, [sp, #24]
   4873c:	str	lr, [sp, #32]
   48740:	vpush	{d8}
   48744:	sub	sp, sp, #44	; 0x2c
   48748:	cmp	r1, #0
   4874c:	cmpne	r0, #0
   48750:	beq	48d60 <Mat_VarWrite4+0x634>
   48754:	mov	r6, r0
   48758:	mov	sl, r1
   4875c:	ldr	r0, [r1, #36]	; 0x24
   48760:	cmp	r0, #0
   48764:	beq	48d68 <Mat_VarWrite4+0x63c>
   48768:	ldr	r5, [r1, #4]
   4876c:	cmp	r5, #2
   48770:	bne	48d70 <Mat_VarWrite4+0x644>
   48774:	ldr	r3, [r1, #8]
   48778:	sub	r3, r3, #2
   4877c:	cmp	r3, #7
   48780:	addls	pc, pc, r3, lsl #2
   48784:	b	488fc <Mat_VarWrite4+0x1d0>
   48788:	b	48834 <Mat_VarWrite4+0x108>
   4878c:	b	4881c <Mat_VarWrite4+0xf0>
   48790:	b	48828 <Mat_VarWrite4+0xfc>
   48794:	b	48810 <Mat_VarWrite4+0xe4>
   48798:	b	488fc <Mat_VarWrite4+0x1d0>
   4879c:	b	48804 <Mat_VarWrite4+0xd8>
   487a0:	b	488fc <Mat_VarWrite4+0x1d0>
   487a4:	b	487a8 <Mat_VarWrite4+0x7c>
   487a8:	mov	r3, #0
   487ac:	str	r3, [sp, #20]
   487b0:	bl	15c8 <strlen@plt>
   487b4:	add	r0, r0, #1
   487b8:	str	r0, [sp, #36]	; 0x24
   487bc:	mov	r2, #2
   487c0:	mov	r1, #0
   487c4:	ldr	r0, [r6]
   487c8:	bl	1694 <fseek@plt>
   487cc:	ldr	r3, [sl, #16]
   487d0:	sub	r3, r3, #4
   487d4:	cmp	r3, #8
   487d8:	addls	pc, pc, r3, lsl #2
   487dc:	b	48d78 <Mat_VarWrite4+0x64c>
   487e0:	b	48840 <Mat_VarWrite4+0x114>
   487e4:	b	48940 <Mat_VarWrite4+0x214>
   487e8:	b	4884c <Mat_VarWrite4+0x120>
   487ec:	b	4884c <Mat_VarWrite4+0x120>
   487f0:	b	48d78 <Mat_VarWrite4+0x64c>
   487f4:	b	4884c <Mat_VarWrite4+0x120>
   487f8:	b	4884c <Mat_VarWrite4+0x120>
   487fc:	b	4884c <Mat_VarWrite4+0x120>
   48800:	b	4884c <Mat_VarWrite4+0x120>
   48804:	mov	r3, #10
   48808:	str	r3, [sp, #20]
   4880c:	b	487b0 <Mat_VarWrite4+0x84>
   48810:	mov	r3, #20
   48814:	str	r3, [sp, #20]
   48818:	b	487b0 <Mat_VarWrite4+0x84>
   4881c:	mov	r3, #30
   48820:	str	r3, [sp, #20]
   48824:	b	487b0 <Mat_VarWrite4+0x84>
   48828:	mov	r3, #40	; 0x28
   4882c:	str	r3, [sp, #20]
   48830:	b	487b0 <Mat_VarWrite4+0x84>
   48834:	mov	r3, #50	; 0x32
   48838:	str	r3, [sp, #20]
   4883c:	b	487b0 <Mat_VarWrite4+0x84>
   48840:	ldr	r3, [sp, #20]
   48844:	add	r3, r3, #1
   48848:	str	r3, [sp, #20]
   4884c:	ldr	r1, [sl, #4]
   48850:	cmp	r1, #0
   48854:	ble	48920 <Mat_VarWrite4+0x1f4>
   48858:	ldr	r3, [sl, #32]
   4885c:	add	r1, r3, r1, lsl #2
   48860:	mov	r4, #1
   48864:	ldr	r2, [r3], #4
   48868:	mul	r4, r2, r4
   4886c:	cmp	r1, r3
   48870:	bne	48864 <Mat_VarWrite4+0x138>
   48874:	ldr	r3, [sl, #32]
   48878:	ldr	r2, [r3]
   4887c:	str	r2, [sp, #24]
   48880:	ldr	r3, [r3, #4]
   48884:	str	r3, [sp, #28]
   48888:	ldr	r3, [sl, #20]
   4888c:	adds	r3, r3, #0
   48890:	movne	r3, #1
   48894:	str	r3, [sp, #32]
   48898:	ldr	r3, [r6]
   4889c:	mov	r2, #1
   488a0:	mov	r1, #20
   488a4:	add	r0, sp, r1
   488a8:	bl	1514 <fwrite@plt>
   488ac:	ldr	r3, [r6]
   488b0:	ldr	r2, [sp, #36]	; 0x24
   488b4:	mov	r1, #1
   488b8:	ldr	r0, [sl, #36]	; 0x24
   488bc:	bl	1514 <fwrite@plt>
   488c0:	ldr	r5, [sl, #20]
   488c4:	cmp	r5, #0
   488c8:	beq	48928 <Mat_VarWrite4+0x1fc>
   488cc:	ldr	r5, [sl, #40]	; 0x28
   488d0:	ldr	r3, [r6]
   488d4:	mov	r2, r4
   488d8:	ldr	r1, [sl, #12]
   488dc:	ldr	r0, [r5]
   488e0:	bl	1514 <fwrite@plt>
   488e4:	ldr	r3, [r6]
   488e8:	mov	r2, r4
   488ec:	ldr	r1, [sl, #12]
   488f0:	ldr	r0, [r5, #4]
   488f4:	bl	1514 <fwrite@plt>
   488f8:	mov	r5, #0
   488fc:	mov	r0, r5
   48900:	add	sp, sp, #44	; 0x2c
   48904:	vpop	{d8}
   48908:	ldrd	r4, [sp]
   4890c:	ldrd	r6, [sp, #8]
   48910:	ldrd	r8, [sp, #16]
   48914:	ldrd	sl, [sp, #24]
   48918:	add	sp, sp, #32
   4891c:	pop	{pc}		; (ldr pc, [sp], #4)
   48920:	mov	r4, #1
   48924:	b	48874 <Mat_VarWrite4+0x148>
   48928:	ldr	r3, [r6]
   4892c:	mov	r2, r4
   48930:	ldr	r1, [sl, #12]
   48934:	ldr	r0, [sl, #40]	; 0x28
   48938:	bl	1514 <fwrite@plt>
   4893c:	b	488fc <Mat_VarWrite4+0x1d0>
   48940:	ldr	r0, [sl, #8]
   48944:	bl	1598 <Mat_SizeOf@plt>
   48948:	mov	r7, r0
   4894c:	ldr	r4, [sl, #40]	; 0x28
   48950:	ldr	r3, [sp, #20]
   48954:	add	r3, r3, #2
   48958:	str	r3, [sp, #20]
   4895c:	ldr	r3, [r4, #16]
   48960:	cmp	r3, #0
   48964:	movle	r3, #1
   48968:	ble	4897c <Mat_VarWrite4+0x250>
   4896c:	sub	r3, r3, #-1073741823	; 0xc0000001
   48970:	ldr	r2, [r4, #12]
   48974:	ldr	r3, [r2, r3, lsl #2]
   48978:	add	r3, r3, #1
   4897c:	str	r3, [sp, #24]
   48980:	ldr	r3, [sl, #20]
   48984:	cmp	r3, #0
   48988:	movne	r3, #4
   4898c:	moveq	r3, #3
   48990:	str	r3, [sp, #28]
   48994:	mov	r3, #0
   48998:	str	r3, [sp, #32]
   4899c:	ldr	r3, [r6]
   489a0:	mov	r2, #1
   489a4:	mov	r1, #20
   489a8:	add	r0, sp, r1
   489ac:	bl	1514 <fwrite@plt>
   489b0:	ldr	r3, [r6]
   489b4:	ldr	r2, [sp, #36]	; 0x24
   489b8:	mov	r1, #1
   489bc:	ldr	r0, [sl, #36]	; 0x24
   489c0:	bl	1514 <fwrite@plt>
   489c4:	ldr	r3, [r4, #16]
   489c8:	cmp	r3, #1
   489cc:	ble	48a68 <Mat_VarWrite4+0x33c>
   489d0:	mov	r8, #0
   489d4:	mov	fp, r8
   489d8:	add	r9, sp, #8
   489dc:	b	489f4 <Mat_VarWrite4+0x2c8>
   489e0:	add	fp, fp, #1
   489e4:	ldr	r3, [r4, #16]
   489e8:	sub	r3, r3, #1
   489ec:	cmp	r3, fp
   489f0:	ble	48a68 <Mat_VarWrite4+0x33c>
   489f4:	ldr	r3, [r4, #12]
   489f8:	ldr	r5, [r3, r8]
   489fc:	add	r8, r8, #4
   48a00:	ldr	r3, [r3, r8]
   48a04:	cmp	r5, r3
   48a08:	bge	489e0 <Mat_VarWrite4+0x2b4>
   48a0c:	ldr	r3, [r4, #20]
   48a10:	cmp	r5, r3
   48a14:	bge	489e0 <Mat_VarWrite4+0x2b4>
   48a18:	ldr	r3, [r4, #4]
   48a1c:	ldr	r3, [r3, r5, lsl #2]
   48a20:	add	r3, r3, #1
   48a24:	vmov	s15, r3
   48a28:	vcvt.f64.s32	d7, s15
   48a2c:	vstr	d7, [sp, #8]
   48a30:	ldr	r3, [r6]
   48a34:	mov	r2, #1
   48a38:	mov	r1, #8
   48a3c:	mov	r0, r9
   48a40:	bl	1514 <fwrite@plt>
   48a44:	add	r5, r5, #1
   48a48:	ldr	r3, [r4, #12]
   48a4c:	ldr	r3, [r3, r8]
   48a50:	cmp	r3, r5
   48a54:	ble	489e0 <Mat_VarWrite4+0x2b4>
   48a58:	ldr	r3, [r4, #20]
   48a5c:	cmp	r3, r5
   48a60:	bgt	48a18 <Mat_VarWrite4+0x2ec>
   48a64:	b	489e0 <Mat_VarWrite4+0x2b4>
   48a68:	ldr	r3, [sl, #32]
   48a6c:	vldr	s14, [r3]
   48a70:	vcvt.f64.u32	d7, s14
   48a74:	vstr	d7, [sp, #8]
   48a78:	ldr	r3, [r6]
   48a7c:	mov	r2, #1
   48a80:	mov	r1, #8
   48a84:	add	r0, sp, r1
   48a88:	bl	1514 <fwrite@plt>
   48a8c:	ldr	r3, [r4, #16]
   48a90:	cmp	r3, #1
   48a94:	ble	48b30 <Mat_VarWrite4+0x404>
   48a98:	mov	r9, #1
   48a9c:	mov	fp, #0
   48aa0:	add	r8, sp, #8
   48aa4:	str	r7, [sp, #4]
   48aa8:	b	48ac4 <Mat_VarWrite4+0x398>
   48aac:	add	fp, fp, #1
   48ab0:	add	r9, r9, #1
   48ab4:	ldr	r3, [r4, #16]
   48ab8:	sub	r3, r3, #1
   48abc:	cmp	r3, fp
   48ac0:	ble	48b2c <Mat_VarWrite4+0x400>
   48ac4:	ldr	r3, [r4, #12]
   48ac8:	ldr	r5, [r3, fp, lsl #2]
   48acc:	lsl	r7, r9, #2
   48ad0:	ldr	r3, [r3, r9, lsl #2]
   48ad4:	cmp	r5, r3
   48ad8:	bge	48aac <Mat_VarWrite4+0x380>
   48adc:	ldr	r3, [r4, #20]
   48ae0:	cmp	r5, r3
   48ae4:	bge	48aac <Mat_VarWrite4+0x380>
   48ae8:	vmov	s15, r9
   48aec:	vcvt.f64.s32	d8, s15
   48af0:	vstr	d8, [sp, #8]
   48af4:	ldr	r3, [r6]
   48af8:	mov	r2, #1
   48afc:	mov	r1, #8
   48b00:	mov	r0, r8
   48b04:	bl	1514 <fwrite@plt>
   48b08:	add	r5, r5, #1
   48b0c:	ldr	r3, [r4, #12]
   48b10:	ldr	r3, [r3, r7]
   48b14:	cmp	r3, r5
   48b18:	ble	48aac <Mat_VarWrite4+0x380>
   48b1c:	ldr	r3, [r4, #20]
   48b20:	cmp	r3, r5
   48b24:	bgt	48af0 <Mat_VarWrite4+0x3c4>
   48b28:	b	48aac <Mat_VarWrite4+0x380>
   48b2c:	ldr	r7, [sp, #4]
   48b30:	ldr	r3, [sl, #32]
   48b34:	vldr	s14, [r3, #4]
   48b38:	vcvt.f64.u32	d7, s14
   48b3c:	vstr	d7, [sp, #8]
   48b40:	ldr	r3, [r6]
   48b44:	mov	r2, #1
   48b48:	mov	r1, #8
   48b4c:	add	r0, sp, r1
   48b50:	bl	1514 <fwrite@plt>
   48b54:	mov	r2, #0
   48b58:	mov	r3, #0
   48b5c:	strd	r2, [sp, #8]
   48b60:	ldr	sl, [sl, #20]
   48b64:	cmp	sl, #0
   48b68:	beq	48cb8 <Mat_VarWrite4+0x58c>
   48b6c:	ldr	r3, [r4, #24]
   48b70:	ldr	fp, [r3]
   48b74:	ldr	r3, [r3, #4]
   48b78:	str	r3, [sp, #4]
   48b7c:	ldr	r3, [r4, #16]
   48b80:	cmp	r3, #1
   48b84:	ble	48c0c <Mat_VarWrite4+0x4e0>
   48b88:	mov	sl, #0
   48b8c:	b	48ba4 <Mat_VarWrite4+0x478>
   48b90:	add	sl, sl, #1
   48b94:	ldr	r3, [r4, #16]
   48b98:	sub	r3, r3, #1
   48b9c:	cmp	r3, sl
   48ba0:	ble	48c0c <Mat_VarWrite4+0x4e0>
   48ba4:	ldr	r3, [r4, #12]
   48ba8:	lsl	r9, sl, #2
   48bac:	ldr	r5, [r3, sl, lsl #2]
   48bb0:	add	r9, r9, #4
   48bb4:	ldr	r3, [r3, r9]
   48bb8:	cmp	r5, r3
   48bbc:	bge	48b90 <Mat_VarWrite4+0x464>
   48bc0:	ldr	r3, [r4, #20]
   48bc4:	cmp	r5, r3
   48bc8:	bge	48b90 <Mat_VarWrite4+0x464>
   48bcc:	mla	r8, r7, r5, fp
   48bd0:	ldr	r3, [r6]
   48bd4:	mov	r2, #1
   48bd8:	mov	r1, r7
   48bdc:	mov	r0, r8
   48be0:	bl	1514 <fwrite@plt>
   48be4:	add	r5, r5, #1
   48be8:	ldr	r3, [r4, #12]
   48bec:	ldr	r3, [r3, r9]
   48bf0:	cmp	r3, r5
   48bf4:	ble	48b90 <Mat_VarWrite4+0x464>
   48bf8:	add	r8, r8, r7
   48bfc:	ldr	r3, [r4, #20]
   48c00:	cmp	r3, r5
   48c04:	bgt	48bd0 <Mat_VarWrite4+0x4a4>
   48c08:	b	48b90 <Mat_VarWrite4+0x464>
   48c0c:	ldr	r3, [r6]
   48c10:	mov	r2, #1
   48c14:	mov	r1, r7
   48c18:	add	r0, sp, #8
   48c1c:	bl	1514 <fwrite@plt>
   48c20:	ldr	r3, [r4, #16]
   48c24:	cmp	r3, #1
   48c28:	ble	48cc8 <Mat_VarWrite4+0x59c>
   48c2c:	mov	fp, #0
   48c30:	mov	sl, #1
   48c34:	b	48c4c <Mat_VarWrite4+0x520>
   48c38:	add	fp, fp, #1
   48c3c:	ldr	r3, [r4, #16]
   48c40:	sub	r3, r3, #1
   48c44:	cmp	r3, fp
   48c48:	ble	48cc8 <Mat_VarWrite4+0x59c>
   48c4c:	ldr	r3, [r4, #12]
   48c50:	lsl	r9, fp, #2
   48c54:	ldr	r5, [r3, fp, lsl #2]
   48c58:	add	r9, r9, #4
   48c5c:	ldr	r3, [r3, r9]
   48c60:	cmp	r5, r3
   48c64:	bge	48c38 <Mat_VarWrite4+0x50c>
   48c68:	ldr	r3, [r4, #20]
   48c6c:	cmp	r5, r3
   48c70:	bge	48c38 <Mat_VarWrite4+0x50c>
   48c74:	ldr	r3, [sp, #4]
   48c78:	mla	r8, r7, r5, r3
   48c7c:	ldr	r3, [r6]
   48c80:	mov	r2, sl
   48c84:	mov	r1, r7
   48c88:	mov	r0, r8
   48c8c:	bl	1514 <fwrite@plt>
   48c90:	add	r5, r5, #1
   48c94:	ldr	r3, [r4, #12]
   48c98:	ldr	r3, [r3, r9]
   48c9c:	cmp	r3, r5
   48ca0:	ble	48c38 <Mat_VarWrite4+0x50c>
   48ca4:	add	r8, r8, r7
   48ca8:	ldr	r3, [r4, #20]
   48cac:	cmp	r3, r5
   48cb0:	bgt	48c7c <Mat_VarWrite4+0x550>
   48cb4:	b	48c38 <Mat_VarWrite4+0x50c>
   48cb8:	ldr	fp, [r4, #24]
   48cbc:	ldr	r3, [r4, #16]
   48cc0:	cmp	r3, #1
   48cc4:	bgt	48cf8 <Mat_VarWrite4+0x5cc>
   48cc8:	ldr	r3, [r6]
   48ccc:	mov	r2, #1
   48cd0:	mov	r1, r7
   48cd4:	add	r0, sp, #8
   48cd8:	bl	1514 <fwrite@plt>
   48cdc:	mov	r5, #0
   48ce0:	b	488fc <Mat_VarWrite4+0x1d0>
   48ce4:	add	sl, sl, #1
   48ce8:	ldr	r3, [r4, #16]
   48cec:	sub	r3, r3, #1
   48cf0:	cmp	r3, sl
   48cf4:	ble	48cc8 <Mat_VarWrite4+0x59c>
   48cf8:	ldr	r3, [r4, #12]
   48cfc:	lsl	r9, sl, #2
   48d00:	ldr	r5, [r3, sl, lsl #2]
   48d04:	add	r9, r9, #4
   48d08:	ldr	r3, [r3, r9]
   48d0c:	cmp	r5, r3
   48d10:	bge	48ce4 <Mat_VarWrite4+0x5b8>
   48d14:	ldr	r3, [r4, #20]
   48d18:	cmp	r5, r3
   48d1c:	bge	48ce4 <Mat_VarWrite4+0x5b8>
   48d20:	mla	r8, r7, r5, fp
   48d24:	ldr	r3, [r6]
   48d28:	mov	r2, #1
   48d2c:	mov	r1, r7
   48d30:	mov	r0, r8
   48d34:	bl	1514 <fwrite@plt>
   48d38:	add	r5, r5, #1
   48d3c:	ldr	r3, [r4, #12]
   48d40:	ldr	r3, [r3, r9]
   48d44:	cmp	r3, r5
   48d48:	ble	48ce4 <Mat_VarWrite4+0x5b8>
   48d4c:	add	r8, r8, r7
   48d50:	ldr	r3, [r4, #20]
   48d54:	cmp	r3, r5
   48d58:	bgt	48d24 <Mat_VarWrite4+0x5f8>
   48d5c:	b	48ce4 <Mat_VarWrite4+0x5b8>
   48d60:	mvn	r5, #0
   48d64:	b	488fc <Mat_VarWrite4+0x1d0>
   48d68:	mvn	r5, #0
   48d6c:	b	488fc <Mat_VarWrite4+0x1d0>
   48d70:	mvn	r5, #0
   48d74:	b	488fc <Mat_VarWrite4+0x1d0>
   48d78:	mov	r5, #0
   48d7c:	b	488fc <Mat_VarWrite4+0x1d0>

00048d80 <Mat_VarRead4>:
   48d80:	strd	r4, [sp, #-28]!	; 0xffffffe4
   48d84:	strd	r6, [sp, #8]
   48d88:	strd	r8, [sp, #16]
   48d8c:	str	lr, [sp, #24]
   48d90:	sub	sp, sp, #28
   48d94:	mov	r6, r0
   48d98:	mov	r4, r1
   48d9c:	mov	r3, #1
   48da0:	str	r3, [sp, #20]
   48da4:	add	r1, sp, #20
   48da8:	mov	r0, r4
   48dac:	bl	4a3c8 <SafeMulDims>
   48db0:	ldr	r3, [r4, #52]	; 0x34
   48db4:	mov	r2, #0
   48db8:	ldr	r1, [r3]
   48dbc:	ldr	r0, [r6]
   48dc0:	bl	1694 <fseek@plt>
   48dc4:	ldr	r3, [r4, #16]
   48dc8:	cmp	r3, #5
   48dcc:	beq	48f0c <Mat_VarRead4+0x18c>
   48dd0:	cmp	r3, #6
   48dd4:	beq	48df0 <Mat_VarRead4+0x70>
   48dd8:	cmp	r3, #4
   48ddc:	beq	48eb8 <Mat_VarRead4+0x138>
   48de0:	ldr	r0, [pc, #1552]	; 493f8 <Mat_VarRead4+0x678>
   48de4:	add	r0, pc, r0
   48de8:	bl	161c <Mat_Critical@plt>
   48dec:	b	48e54 <Mat_VarRead4+0xd4>
   48df0:	mov	r2, #8
   48df4:	str	r2, [r4, #12]
   48df8:	ldr	r1, [sp, #20]
   48dfc:	mov	r0, r4
   48e00:	bl	4a440 <SafeMul>
   48e04:	ldr	r3, [r4, #20]
   48e08:	cmp	r3, #0
   48e0c:	beq	48e7c <Mat_VarRead4+0xfc>
   48e10:	ldr	r0, [r4]
   48e14:	bl	4a288 <ComplexMalloc>
   48e18:	subs	r5, r0, #0
   48e1c:	beq	48e6c <Mat_VarRead4+0xec>
   48e20:	str	r5, [r4, #40]	; 0x28
   48e24:	ldr	r3, [sp, #20]
   48e28:	ldr	r2, [r4, #8]
   48e2c:	ldr	r1, [r5]
   48e30:	mov	r0, r6
   48e34:	bl	3a44 <ReadDoubleData>
   48e38:	ldr	r3, [sp, #20]
   48e3c:	ldr	r2, [r4, #8]
   48e40:	ldr	r1, [r5, #4]
   48e44:	mov	r0, r6
   48e48:	bl	3a44 <ReadDoubleData>
   48e4c:	mov	r3, #9
   48e50:	str	r3, [r4, #8]
   48e54:	add	sp, sp, #28
   48e58:	ldrd	r4, [sp]
   48e5c:	ldrd	r6, [sp, #8]
   48e60:	ldrd	r8, [sp, #16]
   48e64:	add	sp, sp, #24
   48e68:	pop	{pc}		; (ldr pc, [sp], #4)
   48e6c:	ldr	r0, [pc, #1416]	; 493fc <Mat_VarRead4+0x67c>
   48e70:	add	r0, pc, r0
   48e74:	bl	161c <Mat_Critical@plt>
   48e78:	b	48e4c <Mat_VarRead4+0xcc>
   48e7c:	ldr	r0, [r4]
   48e80:	bl	1544 <malloc@plt>
   48e84:	str	r0, [r4, #40]	; 0x28
   48e88:	cmp	r0, #0
   48e8c:	beq	48ea8 <Mat_VarRead4+0x128>
   48e90:	ldr	r3, [sp, #20]
   48e94:	ldr	r2, [r4, #8]
   48e98:	mov	r1, r0
   48e9c:	mov	r0, r6
   48ea0:	bl	3a44 <ReadDoubleData>
   48ea4:	b	48e4c <Mat_VarRead4+0xcc>
   48ea8:	ldr	r0, [pc, #1360]	; 49400 <Mat_VarRead4+0x680>
   48eac:	add	r0, pc, r0
   48eb0:	bl	161c <Mat_Critical@plt>
   48eb4:	b	48e4c <Mat_VarRead4+0xcc>
   48eb8:	mov	r3, #1
   48ebc:	str	r3, [r4, #12]
   48ec0:	ldr	r5, [sp, #20]
   48ec4:	str	r5, [r4]
   48ec8:	mov	r0, r5
   48ecc:	bl	1544 <malloc@plt>
   48ed0:	str	r0, [r4, #40]	; 0x28
   48ed4:	cmp	r0, #0
   48ed8:	beq	48efc <Mat_VarRead4+0x17c>
   48edc:	mov	r3, r5
   48ee0:	ldr	r2, [r4, #8]
   48ee4:	mov	r1, r0
   48ee8:	mov	r0, r6
   48eec:	bl	14860 <ReadUInt8Data>
   48ef0:	mov	r3, #2
   48ef4:	str	r3, [r4, #8]
   48ef8:	b	48e54 <Mat_VarRead4+0xd4>
   48efc:	ldr	r0, [pc, #1280]	; 49404 <Mat_VarRead4+0x684>
   48f00:	add	r0, pc, r0
   48f04:	bl	161c <Mat_Critical@plt>
   48f08:	b	48ef0 <Mat_VarRead4+0x170>
   48f0c:	mov	r0, #28
   48f10:	str	r0, [r4, #12]
   48f14:	bl	1544 <malloc@plt>
   48f18:	mov	r5, r0
   48f1c:	str	r0, [r4, #40]	; 0x28
   48f20:	cmp	r0, #0
   48f24:	beq	49728 <Mat_VarRead4+0x9a8>
   48f28:	ldr	r2, [r4, #32]
   48f2c:	ldr	r3, [r2, #4]
   48f30:	cmp	r3, #4
   48f34:	movne	r3, #0
   48f38:	moveq	r3, #1
   48f3c:	str	r3, [r4, #20]
   48f40:	ldr	r7, [r2]
   48f44:	sub	r7, r7, #1
   48f48:	str	r7, [r0, #8]
   48f4c:	str	r7, [r0]
   48f50:	lsl	r0, r7, #2
   48f54:	bl	1544 <malloc@plt>
   48f58:	str	r0, [r5, #4]
   48f5c:	cmp	r0, #0
   48f60:	beq	49154 <Mat_VarRead4+0x3d4>
   48f64:	mov	r3, r7
   48f68:	mov	r2, #9
   48f6c:	mov	r1, r0
   48f70:	mov	r0, r6
   48f74:	bl	baec <ReadInt32Data>
   48f78:	ldr	r3, [r5, #8]
   48f7c:	cmp	r3, #0
   48f80:	ble	48fa8 <Mat_VarRead4+0x228>
   48f84:	mov	r3, #0
   48f88:	ldr	r1, [r5, #4]
   48f8c:	ldr	r2, [r1, r3, lsl #2]
   48f90:	sub	r2, r2, #1
   48f94:	str	r2, [r1, r3, lsl #2]
   48f98:	add	r3, r3, #1
   48f9c:	ldr	r2, [r5, #8]
   48fa0:	cmp	r2, r3
   48fa4:	bgt	48f88 <Mat_VarRead4+0x208>
   48fa8:	mov	r3, #1
   48fac:	mov	r2, #9
   48fb0:	add	r1, sp, #8
   48fb4:	mov	r0, r6
   48fb8:	bl	3a44 <ReadDoubleData>
   48fbc:	ldr	r3, [r4, #32]
   48fc0:	vldr	d7, [sp, #8]
   48fc4:	vcvt.u32.f64	s14, d7
   48fc8:	vstr	s14, [r3]
   48fcc:	ldr	r0, [r6]
   48fd0:	bl	14b4 <ftell@plt>
   48fd4:	mov	r7, r0
   48fd8:	cmn	r0, #1
   48fdc:	beq	49174 <Mat_VarRead4+0x3f4>
   48fe0:	ldr	r8, [r6]
   48fe4:	ldr	r9, [r5, #8]
   48fe8:	mov	r0, #9
   48fec:	bl	1598 <Mat_SizeOf@plt>
   48ff0:	mov	r2, #1
   48ff4:	mul	r1, r0, r9
   48ff8:	mov	r0, r8
   48ffc:	bl	1694 <fseek@plt>
   49000:	mov	r3, #1
   49004:	mov	r2, #9
   49008:	add	r1, sp, #8
   4900c:	mov	r0, r6
   49010:	bl	3a44 <ReadDoubleData>
   49014:	vldr	d7, [sp, #8]
   49018:	vldr	d6, [pc, #976]	; 493f0 <Mat_VarRead4+0x670>
   4901c:	vcmpe.f64	d7, d6
   49020:	vmrs	APSR_nzcv, fpscr
   49024:	bgt	4919c <Mat_VarRead4+0x41c>
   49028:	vcmpe.f64	d7, #0.0
   4902c:	vmrs	APSR_nzcv, fpscr
   49030:	bmi	4919c <Mat_VarRead4+0x41c>
   49034:	ldr	r3, [r4, #32]
   49038:	vcvt.u32.f64	s14, d7
   4903c:	vstr	s14, [r3, #4]
   49040:	mov	r2, #0
   49044:	mov	r1, r7
   49048:	ldr	r0, [r6]
   4904c:	bl	1694 <fseek@plt>
   49050:	ldr	r3, [r4, #32]
   49054:	ldr	r0, [r3, #4]
   49058:	cmn	r0, #-2147483646	; 0x80000002
   4905c:	bhi	491c4 <Mat_VarRead4+0x444>
   49060:	add	r0, r0, #1
   49064:	str	r0, [r5, #16]
   49068:	lsl	r0, r0, #2
   4906c:	bl	1544 <malloc@plt>
   49070:	mov	r8, r0
   49074:	str	r0, [r5, #12]
   49078:	cmp	r0, #0
   4907c:	beq	49274 <Mat_VarRead4+0x4f4>
   49080:	ldr	r9, [r5, #8]
   49084:	lsl	r0, r9, #2
   49088:	bl	1544 <malloc@plt>
   4908c:	subs	r7, r0, #0
   49090:	beq	49244 <Mat_VarRead4+0x4c4>
   49094:	mov	r3, #0
   49098:	str	r3, [r8]
   4909c:	mov	r3, r9
   490a0:	mov	r2, #9
   490a4:	mov	r1, r7
   490a8:	mov	r0, r6
   490ac:	bl	baec <ReadInt32Data>
   490b0:	ldr	r8, [r5, #16]
   490b4:	cmp	r8, #2
   490b8:	movgt	r3, #0
   490bc:	movgt	r0, #1
   490c0:	bgt	4920c <Mat_VarRead4+0x48c>
   490c4:	mov	r0, r7
   490c8:	bl	1478 <free@plt>
   490cc:	ldr	r2, [r5, #8]
   490d0:	sub	r8, r8, #-1073741823	; 0xc0000001
   490d4:	ldr	r3, [r5, #12]
   490d8:	str	r2, [r3, r8, lsl #2]
   490dc:	mov	r3, #1
   490e0:	mov	r2, #9
   490e4:	add	r1, sp, #8
   490e8:	mov	r0, r6
   490ec:	bl	3a44 <ReadDoubleData>
   490f0:	ldr	r8, [r5, #8]
   490f4:	str	r8, [r5, #20]
   490f8:	ldr	r7, [r4, #8]
   490fc:	ldr	r3, [r4, #20]
   49100:	cmp	r3, #0
   49104:	bne	4929c <Mat_VarRead4+0x51c>
   49108:	mov	r0, r7
   4910c:	bl	1598 <Mat_SizeOf@plt>
   49110:	mul	r0, r0, r8
   49114:	bl	1544 <malloc@plt>
   49118:	str	r0, [r5, #24]
   4911c:	cmp	r0, #0
   49120:	beq	496f8 <Mat_VarRead4+0x978>
   49124:	sub	r3, r7, #2
   49128:	cmp	r3, #7
   4912c:	addls	pc, pc, r3, lsl #2
   49130:	b	496c0 <Mat_VarRead4+0x940>
   49134:	b	49694 <Mat_VarRead4+0x914>
   49138:	b	4963c <Mat_VarRead4+0x8bc>
   4913c:	b	49668 <Mat_VarRead4+0x8e8>
   49140:	b	49610 <Mat_VarRead4+0x890>
   49144:	b	496c0 <Mat_VarRead4+0x940>
   49148:	b	495e4 <Mat_VarRead4+0x864>
   4914c:	b	496c0 <Mat_VarRead4+0x940>
   49150:	b	495b8 <Mat_VarRead4+0x838>
   49154:	mov	r0, r5
   49158:	bl	1478 <free@plt>
   4915c:	mov	r3, #0
   49160:	str	r3, [r4, #40]	; 0x28
   49164:	ldr	r0, [pc, #668]	; 49408 <Mat_VarRead4+0x688>
   49168:	add	r0, pc, r0
   4916c:	bl	161c <Mat_Critical@plt>
   49170:	b	48e54 <Mat_VarRead4+0xd4>
   49174:	ldr	r0, [r5, #4]
   49178:	bl	1478 <free@plt>
   4917c:	ldr	r0, [r4, #40]	; 0x28
   49180:	bl	1478 <free@plt>
   49184:	mov	r3, #0
   49188:	str	r3, [r4, #40]	; 0x28
   4918c:	ldr	r0, [pc, #632]	; 4940c <Mat_VarRead4+0x68c>
   49190:	add	r0, pc, r0
   49194:	bl	161c <Mat_Critical@plt>
   49198:	b	48e54 <Mat_VarRead4+0xd4>
   4919c:	ldr	r0, [r5, #4]
   491a0:	bl	1478 <free@plt>
   491a4:	ldr	r0, [r4, #40]	; 0x28
   491a8:	bl	1478 <free@plt>
   491ac:	mov	r3, #0
   491b0:	str	r3, [r4, #40]	; 0x28
   491b4:	ldr	r0, [pc, #596]	; 49410 <Mat_VarRead4+0x690>
   491b8:	add	r0, pc, r0
   491bc:	bl	161c <Mat_Critical@plt>
   491c0:	b	48e54 <Mat_VarRead4+0xd4>
   491c4:	ldr	r0, [r5, #4]
   491c8:	bl	1478 <free@plt>
   491cc:	ldr	r0, [r4, #40]	; 0x28
   491d0:	bl	1478 <free@plt>
   491d4:	mov	r3, #0
   491d8:	str	r3, [r4, #40]	; 0x28
   491dc:	ldr	r0, [pc, #560]	; 49414 <Mat_VarRead4+0x694>
   491e0:	add	r0, pc, r0
   491e4:	bl	161c <Mat_Critical@plt>
   491e8:	b	48e54 <Mat_VarRead4+0xd4>
   491ec:	mov	r3, ip
   491f0:	ldr	r2, [r5, #12]
   491f4:	str	r3, [r2, r0, lsl #2]
   491f8:	add	r0, r0, #1
   491fc:	ldr	r8, [r5, #16]
   49200:	sub	r2, r8, #1
   49204:	cmp	r2, r0
   49208:	ble	490c4 <Mat_VarRead4+0x344>
   4920c:	ldr	ip, [r5, #8]
   49210:	cmp	ip, r3
   49214:	ble	491f0 <Mat_VarRead4+0x470>
   49218:	add	r2, r7, r3, lsl #2
   4921c:	ldr	r1, [r7, r3, lsl #2]
   49220:	cmp	r1, r0
   49224:	bgt	491f0 <Mat_VarRead4+0x470>
   49228:	add	r3, r3, #1
   4922c:	cmp	r3, ip
   49230:	beq	491ec <Mat_VarRead4+0x46c>
   49234:	ldr	r1, [r2, #4]!
   49238:	cmp	r1, r0
   4923c:	ble	49228 <Mat_VarRead4+0x4a8>
   49240:	b	491f0 <Mat_VarRead4+0x470>
   49244:	mov	r0, r8
   49248:	bl	1478 <free@plt>
   4924c:	ldr	r0, [r5, #4]
   49250:	bl	1478 <free@plt>
   49254:	ldr	r0, [r4, #40]	; 0x28
   49258:	bl	1478 <free@plt>
   4925c:	mov	r3, #0
   49260:	str	r3, [r4, #40]	; 0x28
   49264:	ldr	r0, [pc, #428]	; 49418 <Mat_VarRead4+0x698>
   49268:	add	r0, pc, r0
   4926c:	bl	161c <Mat_Critical@plt>
   49270:	b	48e54 <Mat_VarRead4+0xd4>
   49274:	ldr	r0, [r5, #4]
   49278:	bl	1478 <free@plt>
   4927c:	ldr	r0, [r4, #40]	; 0x28
   49280:	bl	1478 <free@plt>
   49284:	mov	r3, #0
   49288:	str	r3, [r4, #40]	; 0x28
   4928c:	ldr	r0, [pc, #392]	; 4941c <Mat_VarRead4+0x69c>
   49290:	add	r0, pc, r0
   49294:	bl	161c <Mat_Critical@plt>
   49298:	b	48e54 <Mat_VarRead4+0xd4>
   4929c:	mov	r0, r7
   492a0:	bl	1598 <Mat_SizeOf@plt>
   492a4:	mul	r0, r0, r8
   492a8:	bl	4a288 <ComplexMalloc>
   492ac:	subs	r8, r0, #0
   492b0:	beq	49588 <Mat_VarRead4+0x808>
   492b4:	str	r8, [r5, #24]
   492b8:	sub	r3, r7, #2
   492bc:	cmp	r3, #7
   492c0:	addls	pc, pc, r3, lsl #2
   492c4:	b	4953c <Mat_VarRead4+0x7bc>
   492c8:	b	494e4 <Mat_VarRead4+0x764>
   492cc:	b	49434 <Mat_VarRead4+0x6b4>
   492d0:	b	4948c <Mat_VarRead4+0x70c>
   492d4:	b	49398 <Mat_VarRead4+0x618>
   492d8:	b	4953c <Mat_VarRead4+0x7bc>
   492dc:	b	49340 <Mat_VarRead4+0x5c0>
   492e0:	b	4953c <Mat_VarRead4+0x7bc>
   492e4:	b	492e8 <Mat_VarRead4+0x568>
   492e8:	ldr	r3, [r5, #20]
   492ec:	mov	r2, #9
   492f0:	ldr	r1, [r8]
   492f4:	mov	r0, r6
   492f8:	bl	3a44 <ReadDoubleData>
   492fc:	mov	r3, #1
   49300:	mov	r2, #9
   49304:	add	r4, sp, #8
   49308:	mov	r1, r4
   4930c:	mov	r0, r6
   49310:	bl	3a44 <ReadDoubleData>
   49314:	ldr	r3, [r5, #20]
   49318:	mov	r2, #9
   4931c:	ldr	r1, [r8, #4]
   49320:	mov	r0, r6
   49324:	bl	3a44 <ReadDoubleData>
   49328:	mov	r3, #1
   4932c:	mov	r2, #9
   49330:	mov	r1, r4
   49334:	mov	r0, r6
   49338:	bl	3a44 <ReadDoubleData>
   4933c:	b	48e54 <Mat_VarRead4+0xd4>
   49340:	ldr	r3, [r5, #20]
   49344:	mov	r2, #7
   49348:	ldr	r1, [r8]
   4934c:	mov	r0, r6
   49350:	bl	6360 <ReadSingleData>
   49354:	mov	r3, #1
   49358:	mov	r2, #7
   4935c:	add	r4, sp, #4
   49360:	mov	r1, r4
   49364:	mov	r0, r6
   49368:	bl	6360 <ReadSingleData>
   4936c:	ldr	r3, [r5, #20]
   49370:	mov	r2, #7
   49374:	ldr	r1, [r8, #4]
   49378:	mov	r0, r6
   4937c:	bl	6360 <ReadSingleData>
   49380:	mov	r3, #1
   49384:	mov	r2, #7
   49388:	mov	r1, r4
   4938c:	mov	r0, r6
   49390:	bl	6360 <ReadSingleData>
   49394:	b	48e54 <Mat_VarRead4+0xd4>
   49398:	ldr	r3, [r5, #20]
   4939c:	mov	r2, #5
   493a0:	ldr	r1, [r8]
   493a4:	mov	r0, r6
   493a8:	bl	baec <ReadInt32Data>
   493ac:	mov	r3, #1
   493b0:	mov	r2, #5
   493b4:	add	r4, sp, #4
   493b8:	mov	r1, r4
   493bc:	mov	r0, r6
   493c0:	bl	baec <ReadInt32Data>
   493c4:	ldr	r3, [r5, #20]
   493c8:	mov	r2, #5
   493cc:	ldr	r1, [r8, #4]
   493d0:	mov	r0, r6
   493d4:	bl	baec <ReadInt32Data>
   493d8:	mov	r3, #1
   493dc:	mov	r2, #5
   493e0:	mov	r1, r4
   493e4:	mov	r0, r6
   493e8:	bl	baec <ReadInt32Data>
   493ec:	b	48e54 <Mat_VarRead4+0xd4>
   493f0:	.word	0xff800000
   493f4:	.word	0x41dfffff
   493f8:	.word	0x00006bbc
   493fc:	.word	0x00006800
   49400:	.word	0x00006658
   49404:	.word	0x00006604
   49408:	.word	0x00006760
   4940c:	.word	0x00006298
   49410:	.word	0x00006744
   49414:	.word	0x0000671c
   49418:	.word	0x000066c0
   4941c:	.word	0x00006698
   49420:	.word	0x000063e0
   49424:	.word	0x00006030
   49428:	.word	0x00006270
   4942c:	.word	0x00005ef8
   49430:	.word	0x00005dd8
   49434:	ldr	r3, [r5, #20]
   49438:	mov	r2, #3
   4943c:	ldr	r1, [r8]
   49440:	mov	r0, r6
   49444:	bl	f364 <ReadInt16Data>
   49448:	mov	r3, #1
   4944c:	mov	r2, #3
   49450:	add	r4, sp, #4
   49454:	mov	r1, r4
   49458:	mov	r0, r6
   4945c:	bl	f364 <ReadInt16Data>
   49460:	ldr	r3, [r5, #20]
   49464:	mov	r2, #3
   49468:	ldr	r1, [r8, #4]
   4946c:	mov	r0, r6
   49470:	bl	f364 <ReadInt16Data>
   49474:	mov	r3, #1
   49478:	mov	r2, #3
   4947c:	mov	r1, r4
   49480:	mov	r0, r6
   49484:	bl	f364 <ReadInt16Data>
   49488:	b	48e54 <Mat_VarRead4+0xd4>
   4948c:	ldr	r3, [r5, #20]
   49490:	mov	r2, #4
   49494:	ldr	r1, [r8]
   49498:	mov	r0, r6
   4949c:	bl	10fd0 <ReadUInt16Data>
   494a0:	mov	r3, #1
   494a4:	mov	r2, #4
   494a8:	add	r4, sp, r2
   494ac:	mov	r1, r4
   494b0:	mov	r0, r6
   494b4:	bl	10fd0 <ReadUInt16Data>
   494b8:	ldr	r3, [r5, #20]
   494bc:	mov	r2, #4
   494c0:	ldr	r1, [r8, #4]
   494c4:	mov	r0, r6
   494c8:	bl	10fd0 <ReadUInt16Data>
   494cc:	mov	r3, #1
   494d0:	mov	r2, #4
   494d4:	mov	r1, r4
   494d8:	mov	r0, r6
   494dc:	bl	10fd0 <ReadUInt16Data>
   494e0:	b	48e54 <Mat_VarRead4+0xd4>
   494e4:	ldr	r3, [r5, #20]
   494e8:	mov	r2, #2
   494ec:	ldr	r1, [r8]
   494f0:	mov	r0, r6
   494f4:	bl	14860 <ReadUInt8Data>
   494f8:	mov	r3, #1
   494fc:	mov	r2, #2
   49500:	add	r4, sp, #4
   49504:	mov	r1, r4
   49508:	mov	r0, r6
   4950c:	bl	14860 <ReadUInt8Data>
   49510:	ldr	r3, [r5, #20]
   49514:	mov	r2, #2
   49518:	ldr	r1, [r8, #4]
   4951c:	mov	r0, r6
   49520:	bl	14860 <ReadUInt8Data>
   49524:	mov	r3, #1
   49528:	mov	r2, #2
   4952c:	mov	r1, r4
   49530:	mov	r0, r6
   49534:	bl	14860 <ReadUInt8Data>
   49538:	b	48e54 <Mat_VarRead4+0xd4>
   4953c:	ldr	r0, [r8]
   49540:	bl	1478 <free@plt>
   49544:	ldr	r0, [r8, #4]
   49548:	bl	1478 <free@plt>
   4954c:	mov	r0, r8
   49550:	bl	1478 <free@plt>
   49554:	ldr	r0, [r5, #12]
   49558:	bl	1478 <free@plt>
   4955c:	ldr	r0, [r5, #4]
   49560:	bl	1478 <free@plt>
   49564:	ldr	r0, [r4, #40]	; 0x28
   49568:	bl	1478 <free@plt>
   4956c:	mov	r3, #0
   49570:	str	r3, [r4, #40]	; 0x28
   49574:	mov	r1, r7
   49578:	ldr	r0, [pc, #-352]	; 49420 <Mat_VarRead4+0x6a0>
   4957c:	add	r0, pc, r0
   49580:	bl	161c <Mat_Critical@plt>
   49584:	b	48e54 <Mat_VarRead4+0xd4>
   49588:	ldr	r0, [r5, #12]
   4958c:	bl	1478 <free@plt>
   49590:	ldr	r0, [r5, #4]
   49594:	bl	1478 <free@plt>
   49598:	ldr	r0, [r4, #40]	; 0x28
   4959c:	bl	1478 <free@plt>
   495a0:	mov	r3, #0
   495a4:	str	r3, [r4, #40]	; 0x28
   495a8:	ldr	r0, [pc, #-396]	; 49424 <Mat_VarRead4+0x6a4>
   495ac:	add	r0, pc, r0
   495b0:	bl	161c <Mat_Critical@plt>
   495b4:	b	48e54 <Mat_VarRead4+0xd4>
   495b8:	ldr	r3, [r5, #20]
   495bc:	mov	r2, #9
   495c0:	mov	r1, r0
   495c4:	mov	r0, r6
   495c8:	bl	3a44 <ReadDoubleData>
   495cc:	mov	r3, #1
   495d0:	mov	r2, #9
   495d4:	add	r1, sp, #8
   495d8:	mov	r0, r6
   495dc:	bl	3a44 <ReadDoubleData>
   495e0:	b	48e54 <Mat_VarRead4+0xd4>
   495e4:	ldr	r3, [r5, #20]
   495e8:	mov	r2, #7
   495ec:	mov	r1, r0
   495f0:	mov	r0, r6
   495f4:	bl	6360 <ReadSingleData>
   495f8:	mov	r3, #1
   495fc:	mov	r2, #7
   49600:	add	r1, sp, #4
   49604:	mov	r0, r6
   49608:	bl	6360 <ReadSingleData>
   4960c:	b	48e54 <Mat_VarRead4+0xd4>
   49610:	ldr	r3, [r5, #20]
   49614:	mov	r2, #5
   49618:	mov	r1, r0
   4961c:	mov	r0, r6
   49620:	bl	baec <ReadInt32Data>
   49624:	mov	r3, #1
   49628:	mov	r2, #5
   4962c:	add	r1, sp, #4
   49630:	mov	r0, r6
   49634:	bl	baec <ReadInt32Data>
   49638:	b	48e54 <Mat_VarRead4+0xd4>
   4963c:	ldr	r3, [r5, #20]
   49640:	mov	r2, #3
   49644:	mov	r1, r0
   49648:	mov	r0, r6
   4964c:	bl	f364 <ReadInt16Data>
   49650:	mov	r3, #1
   49654:	mov	r2, #3
   49658:	add	r1, sp, #4
   4965c:	mov	r0, r6
   49660:	bl	f364 <ReadInt16Data>
   49664:	b	48e54 <Mat_VarRead4+0xd4>
   49668:	ldr	r3, [r5, #20]
   4966c:	mov	r2, #4
   49670:	mov	r1, r0
   49674:	mov	r0, r6
   49678:	bl	10fd0 <ReadUInt16Data>
   4967c:	mov	r3, #1
   49680:	mov	r2, #4
   49684:	add	r1, sp, r2
   49688:	mov	r0, r6
   4968c:	bl	10fd0 <ReadUInt16Data>
   49690:	b	48e54 <Mat_VarRead4+0xd4>
   49694:	ldr	r3, [r5, #20]
   49698:	mov	r2, #2
   4969c:	mov	r1, r0
   496a0:	mov	r0, r6
   496a4:	bl	14860 <ReadUInt8Data>
   496a8:	mov	r3, #1
   496ac:	mov	r2, #2
   496b0:	add	r1, sp, #4
   496b4:	mov	r0, r6
   496b8:	bl	14860 <ReadUInt8Data>
   496bc:	b	48e54 <Mat_VarRead4+0xd4>
   496c0:	bl	1478 <free@plt>
   496c4:	ldr	r0, [r5, #12]
   496c8:	bl	1478 <free@plt>
   496cc:	ldr	r0, [r5, #4]
   496d0:	bl	1478 <free@plt>
   496d4:	ldr	r0, [r4, #40]	; 0x28
   496d8:	bl	1478 <free@plt>
   496dc:	mov	r3, #0
   496e0:	str	r3, [r4, #40]	; 0x28
   496e4:	mov	r1, r7
   496e8:	ldr	r0, [pc, #-712]	; 49428 <Mat_VarRead4+0x6a8>
   496ec:	add	r0, pc, r0
   496f0:	bl	161c <Mat_Critical@plt>
   496f4:	b	48e54 <Mat_VarRead4+0xd4>
   496f8:	ldr	r0, [r5, #12]
   496fc:	bl	1478 <free@plt>
   49700:	ldr	r0, [r5, #4]
   49704:	bl	1478 <free@plt>
   49708:	ldr	r0, [r4, #40]	; 0x28
   4970c:	bl	1478 <free@plt>
   49710:	mov	r3, #0
   49714:	str	r3, [r4, #40]	; 0x28
   49718:	ldr	r0, [pc, #-756]	; 4942c <Mat_VarRead4+0x6ac>
   4971c:	add	r0, pc, r0
   49720:	bl	161c <Mat_Critical@plt>
   49724:	b	48e54 <Mat_VarRead4+0xd4>
   49728:	ldr	r0, [pc, #-768]	; 49430 <Mat_VarRead4+0x6b0>
   4972c:	add	r0, pc, r0
   49730:	bl	161c <Mat_Critical@plt>
   49734:	b	48e54 <Mat_VarRead4+0xd4>

00049738 <Mat_VarReadData4>:
   49738:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4973c:	strd	r6, [sp, #8]
   49740:	strd	r8, [sp, #16]
   49744:	str	sl, [sp, #24]
   49748:	str	lr, [sp, #28]
   4974c:	sub	sp, sp, #32
   49750:	mov	r5, r0
   49754:	mov	r4, r1
   49758:	mov	sl, r2
   4975c:	mov	r7, r3
   49760:	ldr	r8, [sp, #64]	; 0x40
   49764:	ldr	r9, [sp, #68]	; 0x44
   49768:	ldr	r3, [r1, #52]	; 0x34
   4976c:	mov	r2, #0
   49770:	ldr	r1, [r3]
   49774:	ldr	r0, [r0]
   49778:	bl	1694 <fseek@plt>
   4977c:	ldr	r3, [r4, #8]
   49780:	sub	r2, r3, #2
   49784:	cmp	r2, #7
   49788:	addls	pc, pc, r2, lsl #2
   4978c:	b	4999c <Mat_VarReadData4+0x264>
   49790:	b	497b0 <Mat_VarReadData4+0x78>
   49794:	b	497b0 <Mat_VarReadData4+0x78>
   49798:	b	497b0 <Mat_VarReadData4+0x78>
   4979c:	b	497b0 <Mat_VarReadData4+0x78>
   497a0:	b	4999c <Mat_VarReadData4+0x264>
   497a4:	b	497b0 <Mat_VarReadData4+0x78>
   497a8:	b	4999c <Mat_VarReadData4+0x264>
   497ac:	b	497b0 <Mat_VarReadData4+0x78>
   497b0:	ldr	r2, [r4, #4]
   497b4:	cmp	r2, #2
   497b8:	beq	49864 <Mat_VarReadData4+0x12c>
   497bc:	ldr	r6, [r4, #20]
   497c0:	cmp	r6, #0
   497c4:	beq	49970 <Mat_VarReadData4+0x238>
   497c8:	mov	r0, r3
   497cc:	bl	1598 <Mat_SizeOf@plt>
   497d0:	str	r0, [sp, #28]
   497d4:	add	r1, sp, #28
   497d8:	mov	r0, r4
   497dc:	bl	4a3c8 <SafeMulDims>
   497e0:	str	r9, [sp, #16]
   497e4:	str	r8, [sp, #12]
   497e8:	str	r7, [sp, #8]
   497ec:	ldr	r3, [r4, #32]
   497f0:	str	r3, [sp, #4]
   497f4:	ldr	r3, [r4, #4]
   497f8:	str	r3, [sp]
   497fc:	ldr	r3, [r4, #8]
   49800:	ldr	r2, [r4, #16]
   49804:	ldr	r1, [sl]
   49808:	mov	r0, r5
   4980c:	bl	16764 <ReadDataSlabN>
   49810:	ldr	r3, [r4, #52]	; 0x34
   49814:	ldr	r1, [r3]
   49818:	mov	r2, #0
   4981c:	ldr	r3, [sp, #28]
   49820:	add	r1, r1, r3
   49824:	ldr	r0, [r5]
   49828:	bl	1694 <fseek@plt>
   4982c:	str	r9, [sp, #16]
   49830:	str	r8, [sp, #12]
   49834:	str	r7, [sp, #8]
   49838:	ldr	r3, [r4, #32]
   4983c:	str	r3, [sp, #4]
   49840:	ldr	r3, [r4, #4]
   49844:	str	r3, [sp]
   49848:	ldr	r3, [r4, #8]
   4984c:	ldr	r2, [r4, #16]
   49850:	ldr	r1, [sl, #4]
   49854:	mov	r0, r5
   49858:	bl	16764 <ReadDataSlabN>
   4985c:	mov	r6, #0
   49860:	b	499a0 <Mat_VarReadData4+0x268>
   49864:	ldr	r0, [r4, #32]
   49868:	ldr	r2, [r9]
   4986c:	sub	r2, r2, #1
   49870:	ldr	ip, [r8]
   49874:	ldr	r1, [r7]
   49878:	add	r1, r1, #1
   4987c:	mla	r2, ip, r2, r1
   49880:	ldr	r1, [r0]
   49884:	cmp	r2, r1
   49888:	movhi	r6, #1
   4988c:	bhi	498b8 <Mat_VarReadData4+0x180>
   49890:	ldr	r6, [r9, #4]
   49894:	sub	r6, r6, #1
   49898:	ldr	r1, [r8, #4]
   4989c:	ldr	r2, [r7, #4]
   498a0:	add	r2, r2, #1
   498a4:	mla	r6, r1, r6, r2
   498a8:	ldr	r2, [r0, #4]
   498ac:	cmp	r6, r2
   498b0:	movls	r6, #0
   498b4:	movhi	r6, #1
   498b8:	ldr	r2, [r4, #20]
   498bc:	cmp	r2, #0
   498c0:	beq	4994c <Mat_VarReadData4+0x214>
   498c4:	mov	r0, r3
   498c8:	bl	1598 <Mat_SizeOf@plt>
   498cc:	str	r0, [sp, #28]
   498d0:	add	r1, sp, #28
   498d4:	mov	r0, r4
   498d8:	bl	4a3c8 <SafeMulDims>
   498dc:	str	r9, [sp, #12]
   498e0:	str	r8, [sp, #8]
   498e4:	str	r7, [sp, #4]
   498e8:	ldr	r3, [r4, #32]
   498ec:	str	r3, [sp]
   498f0:	ldr	r3, [r4, #8]
   498f4:	ldr	r2, [r4, #16]
   498f8:	ldr	r1, [sl]
   498fc:	mov	r0, r5
   49900:	bl	1e064 <ReadDataSlab2>
   49904:	ldr	r3, [r4, #52]	; 0x34
   49908:	ldr	r1, [r3]
   4990c:	mov	r2, #0
   49910:	ldr	r3, [sp, #28]
   49914:	add	r1, r1, r3
   49918:	ldr	r0, [r5]
   4991c:	bl	1694 <fseek@plt>
   49920:	str	r9, [sp, #12]
   49924:	str	r8, [sp, #8]
   49928:	str	r7, [sp, #4]
   4992c:	ldr	r3, [r4, #32]
   49930:	str	r3, [sp]
   49934:	ldr	r3, [r4, #8]
   49938:	ldr	r2, [r4, #16]
   4993c:	ldr	r1, [sl, #4]
   49940:	mov	r0, r5
   49944:	bl	1e064 <ReadDataSlab2>
   49948:	b	499a0 <Mat_VarReadData4+0x268>
   4994c:	str	r9, [sp, #12]
   49950:	str	r8, [sp, #8]
   49954:	str	r7, [sp, #4]
   49958:	str	r0, [sp]
   4995c:	ldr	r2, [r4, #16]
   49960:	mov	r1, sl
   49964:	mov	r0, r5
   49968:	bl	1e064 <ReadDataSlab2>
   4996c:	b	499a0 <Mat_VarReadData4+0x268>
   49970:	str	r9, [sp, #16]
   49974:	str	r8, [sp, #12]
   49978:	str	r7, [sp, #8]
   4997c:	ldr	r1, [r4, #32]
   49980:	str	r1, [sp, #4]
   49984:	str	r2, [sp]
   49988:	ldr	r2, [r4, #16]
   4998c:	mov	r1, sl
   49990:	mov	r0, r5
   49994:	bl	16764 <ReadDataSlabN>
   49998:	b	499a0 <Mat_VarReadData4+0x268>
   4999c:	mov	r6, #1
   499a0:	mov	r0, r6
   499a4:	add	sp, sp, #32
   499a8:	ldrd	r4, [sp]
   499ac:	ldrd	r6, [sp, #8]
   499b0:	ldrd	r8, [sp, #16]
   499b4:	ldr	sl, [sp, #24]
   499b8:	add	sp, sp, #28
   499bc:	pop	{pc}		; (ldr pc, [sp], #4)

000499c0 <Mat_VarReadDataLinear4>:
   499c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   499c4:	strd	r6, [sp, #8]
   499c8:	strd	r8, [sp, #16]
   499cc:	strd	sl, [sp, #24]
   499d0:	str	lr, [sp, #32]
   499d4:	sub	sp, sp, #36	; 0x24
   499d8:	mov	r5, r0
   499dc:	mov	r4, r1
   499e0:	mov	fp, r2
   499e4:	mov	r6, r3
   499e8:	ldr	r8, [sp, #72]	; 0x48
   499ec:	ldr	r7, [sp, #76]	; 0x4c
   499f0:	mov	r3, #1
   499f4:	str	r3, [sp, #28]
   499f8:	add	r1, sp, #28
   499fc:	mov	r0, r4
   49a00:	bl	4a3c8 <SafeMulDims>
   49a04:	str	r0, [sp, #20]
   49a08:	ldr	r3, [r4, #52]	; 0x34
   49a0c:	mov	r2, #0
   49a10:	ldr	r1, [r3]
   49a14:	ldr	r0, [r5]
   49a18:	bl	1694 <fseek@plt>
   49a1c:	ldr	r0, [r4, #8]
   49a20:	bl	1598 <Mat_SizeOf@plt>
   49a24:	str	r0, [r4, #12]
   49a28:	ldr	sl, [sp, #28]
   49a2c:	sub	r3, r7, #1
   49a30:	add	r2, r6, #1
   49a34:	mla	r3, r8, r3, r2
   49a38:	cmp	r3, sl
   49a3c:	bhi	49ad0 <Mat_VarReadDataLinear4+0x110>
   49a40:	mov	r9, r0
   49a44:	ldr	r3, [r4, #20]
   49a48:	cmp	r3, #0
   49a4c:	beq	49aac <Mat_VarReadDataLinear4+0xec>
   49a50:	str	r7, [sp, #8]
   49a54:	str	r8, [sp, #4]
   49a58:	str	r6, [sp]
   49a5c:	ldr	r3, [r4, #8]
   49a60:	ldr	r2, [r4, #16]
   49a64:	ldr	r1, [fp]
   49a68:	mov	r0, r5
   49a6c:	bl	1db08 <ReadDataSlab1>
   49a70:	ldr	r3, [r4, #52]	; 0x34
   49a74:	ldr	r1, [r3]
   49a78:	mov	r2, #0
   49a7c:	mla	r1, sl, r9, r1
   49a80:	ldr	r0, [r5]
   49a84:	bl	1694 <fseek@plt>
   49a88:	str	r7, [sp, #8]
   49a8c:	str	r8, [sp, #4]
   49a90:	str	r6, [sp]
   49a94:	ldr	r3, [r4, #8]
   49a98:	ldr	r2, [r4, #16]
   49a9c:	ldr	r1, [fp, #4]
   49aa0:	mov	r0, r5
   49aa4:	bl	1db08 <ReadDataSlab1>
   49aa8:	b	49ad8 <Mat_VarReadDataLinear4+0x118>
   49aac:	str	r7, [sp, #8]
   49ab0:	str	r8, [sp, #4]
   49ab4:	str	r6, [sp]
   49ab8:	ldr	r3, [r4, #8]
   49abc:	ldr	r2, [r4, #16]
   49ac0:	mov	r1, fp
   49ac4:	mov	r0, r5
   49ac8:	bl	1db08 <ReadDataSlab1>
   49acc:	b	49ad8 <Mat_VarReadDataLinear4+0x118>
   49ad0:	mov	r3, #1
   49ad4:	str	r3, [sp, #20]
   49ad8:	ldr	r0, [sp, #20]
   49adc:	add	sp, sp, #36	; 0x24
   49ae0:	ldrd	r4, [sp]
   49ae4:	ldrd	r6, [sp, #8]
   49ae8:	ldrd	r8, [sp, #16]
   49aec:	ldrd	sl, [sp, #24]
   49af0:	add	sp, sp, #32
   49af4:	pop	{pc}		; (ldr pc, [sp], #4)

00049af8 <Mat_VarReadNextInfo4>:
   49af8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   49afc:	strd	r6, [sp, #8]
   49b00:	str	r8, [sp, #16]
   49b04:	str	lr, [sp, #20]
   49b08:	sub	sp, sp, #8
   49b0c:	subs	r5, r0, #0
   49b10:	beq	49f90 <Mat_VarReadNextInfo4+0x498>
   49b14:	ldr	r4, [r5]
   49b18:	cmp	r4, #0
   49b1c:	beq	49bec <Mat_VarReadNextInfo4+0xf4>
   49b20:	bl	1508 <Mat_VarCalloc@plt>
   49b24:	subs	r4, r0, #0
   49b28:	beq	49bec <Mat_VarReadNextInfo4+0xf4>
   49b2c:	ldr	r3, [r5]
   49b30:	mov	r2, #1
   49b34:	mov	r1, #4
   49b38:	add	r0, sp, r1
   49b3c:	bl	1520 <fread@plt>
   49b40:	cmp	r0, #0
   49b44:	beq	49c08 <Mat_VarReadNextInfo4+0x110>
   49b48:	ldr	r2, [sp, #4]
   49b4c:	movw	r3, #4052	; 0xfd4
   49b50:	cmp	r2, r3
   49b54:	bhi	49c18 <Mat_VarReadNextInfo4+0x120>
   49b58:	ldr	r6, [sp, #4]
   49b5c:	vmov	s15, r6
   49b60:	vcvt.f64.s32	d0, s15
   49b64:	vldr	d7, [pc, #1004]	; 49f58 <Mat_VarReadNextInfo4+0x460>
   49b68:	vdiv.f64	d0, d0, d7
   49b6c:	bl	152c <floor@plt>
   49b70:	vcvt.s32.f64	s15, d0
   49b74:	vmov	r7, s15
   49b78:	movw	r3, #64536	; 0xfc18
   49b7c:	movt	r3, #65535	; 0xffff
   49b80:	mla	r6, r3, r7, r6
   49b84:	vmov	s15, r6
   49b88:	vcvt.f64.s32	d0, s15
   49b8c:	vldr	d7, [pc, #972]	; 49f60 <Mat_VarReadNextInfo4+0x468>
   49b90:	vdiv.f64	d0, d0, d7
   49b94:	bl	152c <floor@plt>
   49b98:	vcvt.s32.f64	s15, d0
   49b9c:	vmov	r8, s15
   49ba0:	mvn	r3, #99	; 0x63
   49ba4:	mla	r6, r3, r8, r6
   49ba8:	vmov	s15, r6
   49bac:	vcvt.f64.s32	d0, s15
   49bb0:	vldr	d7, [pc, #944]	; 49f68 <Mat_VarReadNextInfo4+0x470>
   49bb4:	vdiv.f64	d0, d0, d7
   49bb8:	bl	152c <floor@plt>
   49bbc:	vcvt.s32.f64	s15, d0
   49bc0:	vmov	r2, s15
   49bc4:	mvn	r3, #9
   49bc8:	mla	r3, r3, r2, r6
   49bcc:	str	r3, [sp, #4]
   49bd0:	cmp	r7, #0
   49bd4:	beq	49c3c <Mat_VarReadNextInfo4+0x144>
   49bd8:	cmp	r7, #1
   49bdc:	beq	49c70 <Mat_VarReadNextInfo4+0x178>
   49be0:	mov	r0, r4
   49be4:	bl	158c <Mat_VarFree@plt>
   49be8:	mov	r4, #0
   49bec:	mov	r0, r4
   49bf0:	add	sp, sp, #8
   49bf4:	ldrd	r4, [sp]
   49bf8:	ldrd	r6, [sp, #8]
   49bfc:	ldr	r8, [sp, #16]
   49c00:	add	sp, sp, #20
   49c04:	pop	{pc}		; (ldr pc, [sp], #4)
   49c08:	mov	r0, r4
   49c0c:	bl	158c <Mat_VarFree@plt>
   49c10:	mov	r4, #0
   49c14:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49c18:	add	r0, sp, #4
   49c1c:	bl	18a4 <Mat_int32Swap>
   49c20:	movw	r3, #4052	; 0xfd4
   49c24:	cmp	r0, r3
   49c28:	ble	49b58 <Mat_VarReadNextInfo4+0x60>
   49c2c:	mov	r0, r4
   49c30:	bl	158c <Mat_VarFree@plt>
   49c34:	mov	r4, #0
   49c38:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49c3c:	mov	r1, #0
   49c40:	str	r1, [r5, #20]
   49c44:	cmp	r8, #0
   49c48:	bne	49c7c <Mat_VarReadNextInfo4+0x184>
   49c4c:	cmp	r2, #5
   49c50:	addls	pc, pc, r2, lsl #2
   49c54:	b	49d00 <Mat_VarReadNextInfo4+0x208>
   49c58:	b	49c8c <Mat_VarReadNextInfo4+0x194>
   49c5c:	b	49cc4 <Mat_VarReadNextInfo4+0x1cc>
   49c60:	b	49cd0 <Mat_VarReadNextInfo4+0x1d8>
   49c64:	b	49cdc <Mat_VarReadNextInfo4+0x1e4>
   49c68:	b	49ce8 <Mat_VarReadNextInfo4+0x1f0>
   49c6c:	b	49cf4 <Mat_VarReadNextInfo4+0x1fc>
   49c70:	mov	r1, #1
   49c74:	str	r1, [r5, #20]
   49c78:	b	49c44 <Mat_VarReadNextInfo4+0x14c>
   49c7c:	mov	r0, r4
   49c80:	bl	158c <Mat_VarFree@plt>
   49c84:	mov	r4, #0
   49c88:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49c8c:	mov	r2, #9
   49c90:	str	r2, [r4, #8]
   49c94:	cmp	r3, #1
   49c98:	beq	49d10 <Mat_VarReadNextInfo4+0x218>
   49c9c:	cmp	r3, #2
   49ca0:	beq	49e98 <Mat_VarReadNextInfo4+0x3a0>
   49ca4:	cmp	r3, #0
   49ca8:	moveq	r3, #6
   49cac:	streq	r3, [r4, #16]
   49cb0:	beq	49d18 <Mat_VarReadNextInfo4+0x220>
   49cb4:	mov	r0, r4
   49cb8:	bl	158c <Mat_VarFree@plt>
   49cbc:	mov	r4, #0
   49cc0:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49cc4:	mov	r2, #7
   49cc8:	str	r2, [r4, #8]
   49ccc:	b	49c94 <Mat_VarReadNextInfo4+0x19c>
   49cd0:	mov	r2, #5
   49cd4:	str	r2, [r4, #8]
   49cd8:	b	49c94 <Mat_VarReadNextInfo4+0x19c>
   49cdc:	mov	r2, #3
   49ce0:	str	r2, [r4, #8]
   49ce4:	b	49c94 <Mat_VarReadNextInfo4+0x19c>
   49ce8:	mov	r2, #4
   49cec:	str	r2, [r4, #8]
   49cf0:	b	49c94 <Mat_VarReadNextInfo4+0x19c>
   49cf4:	mov	r2, #2
   49cf8:	str	r2, [r4, #8]
   49cfc:	b	49c94 <Mat_VarReadNextInfo4+0x19c>
   49d00:	mov	r0, r4
   49d04:	bl	158c <Mat_VarFree@plt>
   49d08:	mov	r4, #0
   49d0c:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49d10:	mov	r3, #4
   49d14:	str	r3, [r4, #16]
   49d18:	mov	r3, #2
   49d1c:	str	r3, [r4, #4]
   49d20:	mov	r0, #8
   49d24:	bl	1544 <malloc@plt>
   49d28:	mov	r6, r0
   49d2c:	str	r0, [r4, #32]
   49d30:	cmp	r0, #0
   49d34:	beq	49ea4 <Mat_VarReadNextInfo4+0x3ac>
   49d38:	ldr	r3, [r5]
   49d3c:	mov	r2, #1
   49d40:	mov	r1, #4
   49d44:	add	r0, sp, r1
   49d48:	bl	1520 <fread@plt>
   49d4c:	mov	r6, r0
   49d50:	ldr	r3, [r5, #20]
   49d54:	cmp	r3, #0
   49d58:	bne	49eb4 <Mat_VarReadNextInfo4+0x3bc>
   49d5c:	ldr	r3, [r4, #32]
   49d60:	ldr	r2, [sp, #4]
   49d64:	str	r2, [r3]
   49d68:	cmp	r6, #0
   49d6c:	beq	49ec0 <Mat_VarReadNextInfo4+0x3c8>
   49d70:	ldr	r3, [r5]
   49d74:	mov	r2, #1
   49d78:	mov	r1, #4
   49d7c:	add	r0, sp, r1
   49d80:	bl	1520 <fread@plt>
   49d84:	mov	r6, r0
   49d88:	ldr	r3, [r5, #20]
   49d8c:	cmp	r3, #0
   49d90:	bne	49ed0 <Mat_VarReadNextInfo4+0x3d8>
   49d94:	ldr	r3, [r4, #32]
   49d98:	ldr	r2, [sp, #4]
   49d9c:	str	r2, [r3, #4]
   49da0:	cmp	r6, #0
   49da4:	beq	49edc <Mat_VarReadNextInfo4+0x3e4>
   49da8:	ldr	r3, [r5]
   49dac:	mov	r2, #1
   49db0:	mov	r1, #4
   49db4:	add	r0, r4, #20
   49db8:	bl	1520 <fread@plt>
   49dbc:	cmp	r0, #0
   49dc0:	beq	49eec <Mat_VarReadNextInfo4+0x3f4>
   49dc4:	ldr	r3, [r4, #20]
   49dc8:	cmp	r3, #0
   49dcc:	beq	49ddc <Mat_VarReadNextInfo4+0x2e4>
   49dd0:	ldr	r3, [r4, #16]
   49dd4:	cmp	r3, #4
   49dd8:	beq	49efc <Mat_VarReadNextInfo4+0x404>
   49ddc:	ldr	r3, [r5]
   49de0:	mov	r2, #1
   49de4:	mov	r1, #4
   49de8:	add	r0, sp, r1
   49dec:	bl	1520 <fread@plt>
   49df0:	cmp	r0, #0
   49df4:	beq	49f0c <Mat_VarReadNextInfo4+0x414>
   49df8:	ldr	r3, [r5, #20]
   49dfc:	cmp	r3, #0
   49e00:	bne	49f1c <Mat_VarReadNextInfo4+0x424>
   49e04:	ldr	r0, [sp, #4]
   49e08:	cmp	r0, #0
   49e0c:	ble	49f28 <Mat_VarReadNextInfo4+0x430>
   49e10:	bl	1544 <malloc@plt>
   49e14:	mov	r6, r0
   49e18:	str	r0, [r4, #36]	; 0x24
   49e1c:	cmp	r0, #0
   49e20:	beq	49f38 <Mat_VarReadNextInfo4+0x440>
   49e24:	ldr	r3, [r5]
   49e28:	ldr	r2, [sp, #4]
   49e2c:	mov	r1, #1
   49e30:	bl	1520 <fread@plt>
   49e34:	cmp	r0, #0
   49e38:	beq	49f48 <Mat_VarReadNextInfo4+0x450>
   49e3c:	ldr	r6, [r4, #52]	; 0x34
   49e40:	ldr	r0, [r5]
   49e44:	bl	14b4 <ftell@plt>
   49e48:	str	r0, [r6]
   49e4c:	ldr	r3, [r4, #52]	; 0x34
   49e50:	ldr	r3, [r3]
   49e54:	cmn	r3, #1
   49e58:	beq	49f74 <Mat_VarReadNextInfo4+0x47c>
   49e5c:	ldr	r0, [r4, #8]
   49e60:	bl	1598 <Mat_SizeOf@plt>
   49e64:	str	r0, [sp]
   49e68:	ldr	r3, [r4, #20]
   49e6c:	cmp	r3, #0
   49e70:	lslne	r0, r0, #1
   49e74:	strne	r0, [sp]
   49e78:	mov	r1, sp
   49e7c:	mov	r0, r4
   49e80:	bl	4a3c8 <SafeMulDims>
   49e84:	mov	r2, #1
   49e88:	ldr	r1, [sp]
   49e8c:	ldr	r0, [r5]
   49e90:	bl	1694 <fseek@plt>
   49e94:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49e98:	mov	r3, #5
   49e9c:	str	r3, [r4, #16]
   49ea0:	b	49d18 <Mat_VarReadNextInfo4+0x220>
   49ea4:	mov	r0, r4
   49ea8:	bl	158c <Mat_VarFree@plt>
   49eac:	mov	r4, r6
   49eb0:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49eb4:	add	r0, sp, #4
   49eb8:	bl	18a4 <Mat_int32Swap>
   49ebc:	b	49d5c <Mat_VarReadNextInfo4+0x264>
   49ec0:	mov	r0, r4
   49ec4:	bl	158c <Mat_VarFree@plt>
   49ec8:	mov	r4, #0
   49ecc:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49ed0:	add	r0, sp, #4
   49ed4:	bl	18a4 <Mat_int32Swap>
   49ed8:	b	49d94 <Mat_VarReadNextInfo4+0x29c>
   49edc:	mov	r0, r4
   49ee0:	bl	158c <Mat_VarFree@plt>
   49ee4:	mov	r4, #0
   49ee8:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49eec:	mov	r0, r4
   49ef0:	bl	158c <Mat_VarFree@plt>
   49ef4:	mov	r4, #0
   49ef8:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49efc:	mov	r0, r4
   49f00:	bl	158c <Mat_VarFree@plt>
   49f04:	mov	r4, #0
   49f08:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f0c:	mov	r0, r4
   49f10:	bl	158c <Mat_VarFree@plt>
   49f14:	mov	r4, #0
   49f18:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f1c:	add	r0, sp, #4
   49f20:	bl	18a4 <Mat_int32Swap>
   49f24:	b	49e04 <Mat_VarReadNextInfo4+0x30c>
   49f28:	mov	r0, r4
   49f2c:	bl	158c <Mat_VarFree@plt>
   49f30:	mov	r4, #0
   49f34:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f38:	mov	r0, r4
   49f3c:	bl	158c <Mat_VarFree@plt>
   49f40:	mov	r4, r6
   49f44:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f48:	mov	r0, r4
   49f4c:	bl	158c <Mat_VarFree@plt>
   49f50:	mov	r4, #0
   49f54:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f58:	.word	0x00000000
   49f5c:	.word	0x408f4000
   49f60:	.word	0x00000000
   49f64:	.word	0x40590000
   49f68:	.word	0x00000000
   49f6c:	.word	0x40240000
   49f70:	.word	0x000054a8
   49f74:	mov	r0, r4
   49f78:	bl	158c <Mat_VarFree@plt>
   49f7c:	ldr	r0, [pc, #-20]	; 49f70 <Mat_VarReadNextInfo4+0x478>
   49f80:	add	r0, pc, r0
   49f84:	bl	161c <Mat_Critical@plt>
   49f88:	mov	r4, #0
   49f8c:	b	49bec <Mat_VarReadNextInfo4+0xf4>
   49f90:	mov	r4, r5
   49f94:	b	49bec <Mat_VarReadNextInfo4+0xf4>

00049f98 <mat_copy>:
   49f98:	strd	r4, [sp, #-32]!	; 0xffffffe0
   49f9c:	strd	r6, [sp, #8]
   49fa0:	strd	r8, [sp, #16]
   49fa4:	str	sl, [sp, #24]
   49fa8:	str	lr, [sp, #28]
   49fac:	sub	sp, sp, #8192	; 0x2000
   49fb0:	mov	r4, r0
   49fb4:	mov	sl, r1
   49fb8:	mov	r2, #8192	; 0x2000
   49fbc:	mov	r1, #0
   49fc0:	mov	r0, sp
   49fc4:	bl	15f8 <memset@plt>
   49fc8:	ldr	r1, [pc, #252]	; 4a0cc <mat_copy+0x134>
   49fcc:	add	r1, pc, r1
   49fd0:	mov	r0, r4
   49fd4:	bl	1454 <fopen@plt>
   49fd8:	subs	r7, r0, #0
   49fdc:	beq	4a064 <mat_copy+0xcc>
   49fe0:	ldr	r1, [pc, #232]	; 4a0d0 <mat_copy+0x138>
   49fe4:	add	r1, pc, r1
   49fe8:	mov	r0, sl
   49fec:	bl	1454 <fopen@plt>
   49ff0:	subs	r8, r0, #0
   49ff4:	beq	4a07c <mat_copy+0xe4>
   49ff8:	mov	r6, sp
   49ffc:	mov	r9, #8192	; 0x2000
   4a000:	mov	r5, #1
   4a004:	mov	r3, r7
   4a008:	mov	r2, r9
   4a00c:	mov	r1, r5
   4a010:	mov	r0, r6
   4a014:	bl	1520 <fread@plt>
   4a018:	subs	r4, r0, #0
   4a01c:	beq	4a09c <mat_copy+0x104>
   4a020:	mov	r3, r8
   4a024:	mov	r2, r4
   4a028:	mov	r1, r5
   4a02c:	mov	r0, r6
   4a030:	bl	1514 <fwrite@plt>
   4a034:	cmp	r0, r4
   4a038:	beq	4a004 <mat_copy+0x6c>
   4a03c:	mov	r0, r7
   4a040:	bl	1634 <fclose@plt>
   4a044:	mov	r0, r8
   4a048:	bl	1634 <fclose@plt>
   4a04c:	mov	r1, sl
   4a050:	ldr	r0, [pc, #124]	; 4a0d4 <mat_copy+0x13c>
   4a054:	add	r0, pc, r0
   4a058:	bl	161c <Mat_Critical@plt>
   4a05c:	mvn	r0, #0
   4a060:	b	4a0b0 <mat_copy+0x118>
   4a064:	mov	r1, r4
   4a068:	ldr	r0, [pc, #104]	; 4a0d8 <mat_copy+0x140>
   4a06c:	add	r0, pc, r0
   4a070:	bl	161c <Mat_Critical@plt>
   4a074:	mvn	r0, #0
   4a078:	b	4a0b0 <mat_copy+0x118>
   4a07c:	mov	r0, r7
   4a080:	bl	1634 <fclose@plt>
   4a084:	mov	r1, sl
   4a088:	ldr	r0, [pc, #76]	; 4a0dc <mat_copy+0x144>
   4a08c:	add	r0, pc, r0
   4a090:	bl	161c <Mat_Critical@plt>
   4a094:	mvn	r0, #0
   4a098:	b	4a0b0 <mat_copy+0x118>
   4a09c:	mov	r0, r7
   4a0a0:	bl	1634 <fclose@plt>
   4a0a4:	mov	r0, r8
   4a0a8:	bl	1634 <fclose@plt>
   4a0ac:	mov	r0, #0
   4a0b0:	add	sp, sp, #8192	; 0x2000
   4a0b4:	ldrd	r4, [sp]
   4a0b8:	ldrd	r6, [sp, #8]
   4a0bc:	ldrd	r8, [sp, #16]
   4a0c0:	ldr	sl, [sp, #24]
   4a0c4:	add	sp, sp, #28
   4a0c8:	pop	{pc}		; (ldr pc, [sp], #4)
   4a0cc:	.word	0x000059ec
   4a0d0:	.word	0x000059fc
   4a0d4:	.word	0x000059b4
   4a0d8:	.word	0x00005950
   4a0dc:	.word	0x00005958

0004a0e0 <Mat_PrintNumber>:
   4a0e0:	str	r4, [sp, #-8]!
   4a0e4:	str	lr, [sp, #4]
   4a0e8:	sub	r0, r0, #1
   4a0ec:	cmp	r0, #12
   4a0f0:	addls	pc, pc, r0, lsl #2
   4a0f4:	b	4a13c <Mat_PrintNumber+0x5c>
   4a0f8:	b	4a1dc <Mat_PrintNumber+0xfc>
   4a0fc:	b	4a1f0 <Mat_PrintNumber+0x110>
   4a100:	b	4a1b4 <Mat_PrintNumber+0xd4>
   4a104:	b	4a1c8 <Mat_PrintNumber+0xe8>
   4a108:	b	4a18c <Mat_PrintNumber+0xac>
   4a10c:	b	4a1a0 <Mat_PrintNumber+0xc0>
   4a110:	b	4a148 <Mat_PrintNumber+0x68>
   4a114:	b	4a13c <Mat_PrintNumber+0x5c>
   4a118:	b	4a12c <Mat_PrintNumber+0x4c>
   4a11c:	b	4a13c <Mat_PrintNumber+0x5c>
   4a120:	b	4a13c <Mat_PrintNumber+0x5c>
   4a124:	b	4a164 <Mat_PrintNumber+0x84>
   4a128:	b	4a178 <Mat_PrintNumber+0x98>
   4a12c:	ldrd	r2, [r1]
   4a130:	ldr	r0, [pc, #204]	; 4a204 <Mat_PrintNumber+0x124>
   4a134:	add	r0, pc, r0
   4a138:	bl	1448 <printf@plt>
   4a13c:	ldr	r4, [sp]
   4a140:	add	sp, sp, #4
   4a144:	pop	{pc}		; (ldr pc, [sp], #4)
   4a148:	vldr	s15, [r1]
   4a14c:	vcvt.f64.f32	d7, s15
   4a150:	vmov	r2, r3, d7
   4a154:	ldr	r0, [pc, #172]	; 4a208 <Mat_PrintNumber+0x128>
   4a158:	add	r0, pc, r0
   4a15c:	bl	1448 <printf@plt>
   4a160:	b	4a13c <Mat_PrintNumber+0x5c>
   4a164:	ldrd	r2, [r1]
   4a168:	ldr	r0, [pc, #156]	; 4a20c <Mat_PrintNumber+0x12c>
   4a16c:	add	r0, pc, r0
   4a170:	bl	1448 <printf@plt>
   4a174:	b	4a13c <Mat_PrintNumber+0x5c>
   4a178:	ldrd	r2, [r1]
   4a17c:	ldr	r0, [pc, #140]	; 4a210 <Mat_PrintNumber+0x130>
   4a180:	add	r0, pc, r0
   4a184:	bl	1448 <printf@plt>
   4a188:	b	4a13c <Mat_PrintNumber+0x5c>
   4a18c:	ldr	r1, [r1]
   4a190:	ldr	r0, [pc, #124]	; 4a214 <Mat_PrintNumber+0x134>
   4a194:	add	r0, pc, r0
   4a198:	bl	1448 <printf@plt>
   4a19c:	b	4a13c <Mat_PrintNumber+0x5c>
   4a1a0:	ldr	r1, [r1]
   4a1a4:	ldr	r0, [pc, #108]	; 4a218 <Mat_PrintNumber+0x138>
   4a1a8:	add	r0, pc, r0
   4a1ac:	bl	1448 <printf@plt>
   4a1b0:	b	4a13c <Mat_PrintNumber+0x5c>
   4a1b4:	ldrsh	r1, [r1]
   4a1b8:	ldr	r0, [pc, #92]	; 4a21c <Mat_PrintNumber+0x13c>
   4a1bc:	add	r0, pc, r0
   4a1c0:	bl	1448 <printf@plt>
   4a1c4:	b	4a13c <Mat_PrintNumber+0x5c>
   4a1c8:	ldrh	r1, [r1]
   4a1cc:	ldr	r0, [pc, #76]	; 4a220 <Mat_PrintNumber+0x140>
   4a1d0:	add	r0, pc, r0
   4a1d4:	bl	1448 <printf@plt>
   4a1d8:	b	4a13c <Mat_PrintNumber+0x5c>
   4a1dc:	ldrsb	r1, [r1]
   4a1e0:	ldr	r0, [pc, #60]	; 4a224 <Mat_PrintNumber+0x144>
   4a1e4:	add	r0, pc, r0
   4a1e8:	bl	1448 <printf@plt>
   4a1ec:	b	4a13c <Mat_PrintNumber+0x5c>
   4a1f0:	ldrb	r1, [r1]
   4a1f4:	ldr	r0, [pc, #44]	; 4a228 <Mat_PrintNumber+0x148>
   4a1f8:	add	r0, pc, r0
   4a1fc:	bl	1448 <printf@plt>
   4a200:	b	4a13c <Mat_PrintNumber+0x5c>
   4a204:	.word	0x000058f0
   4a208:	.word	0x000058cc
   4a20c:	.word	0x000058bc
   4a210:	.word	0x000058b0
   4a214:	.word	0x000058a4
   4a218:	.word	0x00005894
   4a21c:	.word	0x00005884
   4a220:	.word	0x00005874
   4a224:	.word	0x00005864
   4a228:	.word	0x00005858

0004a22c <ReadData>:
   4a22c:	cmp	r1, #0
   4a230:	cmpne	r0, #0
   4a234:	bxeq	lr
   4a238:	mov	r2, r1
   4a23c:	ldr	r1, [r0]
   4a240:	cmp	r1, #0
   4a244:	bxeq	lr
   4a248:	str	r4, [sp, #-8]!
   4a24c:	str	lr, [sp, #4]
   4a250:	ldr	r1, [r0, #16]
   4a254:	cmp	r1, #256	; 0x100
   4a258:	beq	4a270 <ReadData+0x44>
   4a25c:	cmp	r1, #16
   4a260:	beq	4a27c <ReadData+0x50>
   4a264:	ldr	r4, [sp]
   4a268:	add	sp, sp, #4
   4a26c:	pop	{pc}		; (ldr pc, [sp], #4)
   4a270:	mov	r1, r2
   4a274:	bl	43264 <Mat_VarRead5>
   4a278:	b	4a264 <ReadData+0x38>
   4a27c:	mov	r1, r2
   4a280:	bl	48d80 <Mat_VarRead4>
   4a284:	b	4a264 <ReadData+0x38>

0004a288 <ComplexMalloc>:
   4a288:	strd	r4, [sp, #-16]!
   4a28c:	str	r6, [sp, #8]
   4a290:	str	lr, [sp, #12]
   4a294:	mov	r5, r0
   4a298:	mov	r0, #8
   4a29c:	bl	1544 <malloc@plt>
   4a2a0:	subs	r4, r0, #0
   4a2a4:	beq	4a2d8 <ComplexMalloc+0x50>
   4a2a8:	mov	r0, r5
   4a2ac:	bl	1544 <malloc@plt>
   4a2b0:	mov	r6, r0
   4a2b4:	str	r0, [r4]
   4a2b8:	cmp	r0, #0
   4a2bc:	beq	4a304 <ComplexMalloc+0x7c>
   4a2c0:	mov	r0, r5
   4a2c4:	bl	1544 <malloc@plt>
   4a2c8:	mov	r5, r0
   4a2cc:	str	r0, [r4, #4]
   4a2d0:	cmp	r0, #0
   4a2d4:	beq	4a2ec <ComplexMalloc+0x64>
   4a2d8:	mov	r0, r4
   4a2dc:	ldrd	r4, [sp]
   4a2e0:	ldr	r6, [sp, #8]
   4a2e4:	add	sp, sp, #12
   4a2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   4a2ec:	mov	r0, r6
   4a2f0:	bl	1478 <free@plt>
   4a2f4:	mov	r0, r4
   4a2f8:	bl	1478 <free@plt>
   4a2fc:	mov	r4, r5
   4a300:	b	4a2d8 <ComplexMalloc+0x50>
   4a304:	mov	r0, r4
   4a308:	bl	1478 <free@plt>
   4a30c:	mov	r4, r6
   4a310:	b	4a2d8 <ComplexMalloc+0x50>

0004a314 <ClassType2DataType>:
   4a314:	sub	r3, r0, #1
   4a318:	cmp	r3, #14
   4a31c:	addls	pc, pc, r3, lsl #2
   4a320:	b	4a3b8 <ClassType2DataType+0xa4>
   4a324:	b	4a3a8 <ClassType2DataType+0x94>
   4a328:	b	4a3b0 <ClassType2DataType+0x9c>
   4a32c:	b	4a3b8 <ClassType2DataType+0xa4>
   4a330:	b	4a398 <ClassType2DataType+0x84>
   4a334:	b	4a3b8 <ClassType2DataType+0xa4>
   4a338:	b	4a3c0 <ClassType2DataType+0xac>
   4a33c:	b	4a3c4 <ClassType2DataType+0xb0>
   4a340:	b	4a390 <ClassType2DataType+0x7c>
   4a344:	b	4a3a0 <ClassType2DataType+0x8c>
   4a348:	b	4a380 <ClassType2DataType+0x6c>
   4a34c:	b	4a388 <ClassType2DataType+0x74>
   4a350:	b	4a370 <ClassType2DataType+0x5c>
   4a354:	b	4a378 <ClassType2DataType+0x64>
   4a358:	b	4a360 <ClassType2DataType+0x4c>
   4a35c:	b	4a368 <ClassType2DataType+0x54>
   4a360:	mov	r0, #12
   4a364:	bx	lr
   4a368:	mov	r0, #13
   4a36c:	bx	lr
   4a370:	mov	r0, #5
   4a374:	bx	lr
   4a378:	mov	r0, #6
   4a37c:	bx	lr
   4a380:	mov	r0, #3
   4a384:	bx	lr
   4a388:	mov	r0, #4
   4a38c:	bx	lr
   4a390:	mov	r0, #1
   4a394:	bx	lr
   4a398:	mov	r0, #2
   4a39c:	bx	lr
   4a3a0:	mov	r0, #2
   4a3a4:	bx	lr
   4a3a8:	mov	r0, #21
   4a3ac:	bx	lr
   4a3b0:	mov	r0, #22
   4a3b4:	bx	lr
   4a3b8:	mov	r0, #0
   4a3bc:	bx	lr
   4a3c0:	mov	r0, #9
   4a3c4:	bx	lr

0004a3c8 <SafeMulDims>:
   4a3c8:	ldr	r3, [r0, #4]
   4a3cc:	cmp	r3, #0
   4a3d0:	ble	4a438 <SafeMulDims+0x70>
   4a3d4:	ldr	r3, [r0, #32]
   4a3d8:	ldr	r2, [r1]
   4a3dc:	ldr	r3, [r3]
   4a3e0:	umull	r2, r3, r2, r3
   4a3e4:	str	r2, [r1]
   4a3e8:	cmp	r3, #0
   4a3ec:	bne	4a420 <SafeMulDims+0x58>
   4a3f0:	mov	ip, #0
   4a3f4:	add	ip, ip, #1
   4a3f8:	ldr	r3, [r0, #4]
   4a3fc:	cmp	r3, ip
   4a400:	ble	4a430 <SafeMulDims+0x68>
   4a404:	ldr	r3, [r0, #32]
   4a408:	ldr	r2, [r1]
   4a40c:	ldr	r3, [r3, ip, lsl #2]
   4a410:	umull	r2, r3, r2, r3
   4a414:	str	r2, [r1]
   4a418:	cmp	r3, #0
   4a41c:	beq	4a3f4 <SafeMulDims+0x2c>
   4a420:	mov	r3, #0
   4a424:	str	r3, [r1]
   4a428:	mov	r0, #1
   4a42c:	bx	lr
   4a430:	mov	r0, #0
   4a434:	bx	lr
   4a438:	mov	r0, #0
   4a43c:	bx	lr

0004a440 <SafeMul>:
   4a440:	mov	r3, r0
   4a444:	umull	r0, r1, r1, r2
   4a448:	str	r0, [r3]
   4a44c:	cmp	r1, #0
   4a450:	moveq	r2, r0
   4a454:	moveq	r0, #0
   4a458:	movne	r2, #0
   4a45c:	movne	r0, #1
   4a460:	str	r2, [r3]
   4a464:	bx	lr

0004a468 <Mat_GetLibraryVersion>:
   4a468:	cmp	r0, #0
   4a46c:	movne	r3, #1
   4a470:	strne	r3, [r0]
   4a474:	cmp	r1, #0
   4a478:	movne	r3, #5
   4a47c:	strne	r3, [r1]
   4a480:	cmp	r2, #0
   4a484:	movne	r3, #15
   4a488:	strne	r3, [r2]
   4a48c:	bx	lr

0004a490 <Mat_CreateVer>:
   4a490:	str	r4, [sp, #-8]!
   4a494:	str	lr, [sp, #4]
   4a498:	cmp	r2, #16
   4a49c:	beq	4a4b4 <Mat_CreateVer+0x24>
   4a4a0:	cmp	r2, #256	; 0x100
   4a4a4:	movne	r0, #0
   4a4a8:	bne	4a4b8 <Mat_CreateVer+0x28>
   4a4ac:	bl	4305c <Mat_Create5>
   4a4b0:	b	4a4b8 <Mat_CreateVer+0x28>
   4a4b4:	bl	48670 <Mat_Create4>
   4a4b8:	ldr	r4, [sp]
   4a4bc:	add	sp, sp, #4
   4a4c0:	pop	{pc}		; (ldr pc, [sp], #4)

0004a4c4 <Mat_Close>:
   4a4c4:	strd	r4, [sp, #-16]!
   4a4c8:	str	r6, [sp, #8]
   4a4cc:	str	lr, [sp, #12]
   4a4d0:	subs	r5, r0, #0
   4a4d4:	beq	4a570 <Mat_Close+0xac>
   4a4d8:	ldr	r0, [r5]
   4a4dc:	cmp	r0, #0
   4a4e0:	beq	4a4e8 <Mat_Close+0x24>
   4a4e4:	bl	1634 <fclose@plt>
   4a4e8:	ldr	r0, [r5, #4]
   4a4ec:	cmp	r0, #0
   4a4f0:	beq	4a4f8 <Mat_Close+0x34>
   4a4f4:	bl	1478 <free@plt>
   4a4f8:	ldr	r0, [r5, #8]
   4a4fc:	cmp	r0, #0
   4a500:	beq	4a508 <Mat_Close+0x44>
   4a504:	bl	1478 <free@plt>
   4a508:	ldr	r0, [r5, #12]
   4a50c:	cmp	r0, #0
   4a510:	beq	4a518 <Mat_Close+0x54>
   4a514:	bl	1478 <free@plt>
   4a518:	ldr	r3, [r5, #40]	; 0x28
   4a51c:	cmp	r3, #0
   4a520:	beq	4a568 <Mat_Close+0xa4>
   4a524:	ldr	r3, [r5, #36]	; 0x24
   4a528:	cmp	r3, #0
   4a52c:	beq	4a560 <Mat_Close+0x9c>
   4a530:	mov	r4, #0
   4a534:	b	4a54c <Mat_Close+0x88>
   4a538:	bl	1478 <free@plt>
   4a53c:	add	r4, r4, #1
   4a540:	ldr	r3, [r5, #36]	; 0x24
   4a544:	cmp	r3, r4
   4a548:	bls	4a560 <Mat_Close+0x9c>
   4a54c:	ldr	r3, [r5, #40]	; 0x28
   4a550:	ldr	r0, [r3, r4, lsl #2]
   4a554:	cmp	r0, #0
   4a558:	bne	4a538 <Mat_Close+0x74>
   4a55c:	b	4a53c <Mat_Close+0x78>
   4a560:	ldr	r0, [r5, #40]	; 0x28
   4a564:	bl	1478 <free@plt>
   4a568:	mov	r0, r5
   4a56c:	bl	1478 <free@plt>
   4a570:	mov	r0, #0
   4a574:	ldrd	r4, [sp]
   4a578:	ldr	r6, [sp, #8]
   4a57c:	add	sp, sp, #12
   4a580:	pop	{pc}		; (ldr pc, [sp], #4)

0004a584 <Mat_GetFilename>:
   4a584:	cmp	r0, #0
   4a588:	ldrne	r0, [r0, #12]
   4a58c:	bx	lr

0004a590 <Mat_GetHeader>:
   4a590:	cmp	r0, #0
   4a594:	ldrne	r0, [r0, #4]
   4a598:	bx	lr

0004a59c <Mat_GetVersion>:
   4a59c:	cmp	r0, #0
   4a5a0:	ldrne	r0, [r0, #16]
   4a5a4:	moveq	r0, #0
   4a5a8:	bx	lr

0004a5ac <Mat_Rewind>:
   4a5ac:	str	r4, [sp, #-8]!
   4a5b0:	str	lr, [sp, #4]
   4a5b4:	ldr	r3, [r0, #16]
   4a5b8:	cmp	r3, #256	; 0x100
   4a5bc:	beq	4a5e0 <Mat_Rewind+0x34>
   4a5c0:	cmp	r3, #512	; 0x200
   4a5c4:	beq	4a5f8 <Mat_Rewind+0x4c>
   4a5c8:	cmp	r3, #16
   4a5cc:	mvnne	r0, #0
   4a5d0:	beq	4a608 <Mat_Rewind+0x5c>
   4a5d4:	ldr	r4, [sp]
   4a5d8:	add	sp, sp, #4
   4a5dc:	pop	{pc}		; (ldr pc, [sp], #4)
   4a5e0:	mov	r2, #0
   4a5e4:	mov	r1, #128	; 0x80
   4a5e8:	ldr	r0, [r0]
   4a5ec:	bl	1694 <fseek@plt>
   4a5f0:	mov	r0, #0
   4a5f4:	b	4a5d4 <Mat_Rewind+0x28>
   4a5f8:	mov	r3, #0
   4a5fc:	str	r3, [r0, #32]
   4a600:	mov	r0, r3
   4a604:	b	4a5d4 <Mat_Rewind+0x28>
   4a608:	mov	r2, #0
   4a60c:	mov	r1, r2
   4a610:	ldr	r0, [r0]
   4a614:	bl	1694 <fseek@plt>
   4a618:	mov	r0, #0
   4a61c:	b	4a5d4 <Mat_Rewind+0x28>

0004a620 <Mat_SizeOfClass>:
   4a620:	sub	r0, r0, #4
   4a624:	cmp	r0, #11
   4a628:	addls	pc, pc, r0, lsl #2
   4a62c:	b	4a690 <Mat_SizeOfClass+0x70>
   4a630:	b	4a688 <Mat_SizeOfClass+0x68>
   4a634:	b	4a690 <Mat_SizeOfClass+0x70>
   4a638:	b	4a698 <Mat_SizeOfClass+0x78>
   4a63c:	b	4a660 <Mat_SizeOfClass+0x40>
   4a640:	b	4a678 <Mat_SizeOfClass+0x58>
   4a644:	b	4a680 <Mat_SizeOfClass+0x60>
   4a648:	b	4a668 <Mat_SizeOfClass+0x48>
   4a64c:	b	4a670 <Mat_SizeOfClass+0x50>
   4a650:	b	4a660 <Mat_SizeOfClass+0x40>
   4a654:	b	4a660 <Mat_SizeOfClass+0x40>
   4a658:	b	4a698 <Mat_SizeOfClass+0x78>
   4a65c:	b	4a698 <Mat_SizeOfClass+0x78>
   4a660:	mov	r0, #4
   4a664:	bx	lr
   4a668:	mov	r0, #2
   4a66c:	bx	lr
   4a670:	mov	r0, #2
   4a674:	bx	lr
   4a678:	mov	r0, #1
   4a67c:	bx	lr
   4a680:	mov	r0, #1
   4a684:	bx	lr
   4a688:	mov	r0, #2
   4a68c:	bx	lr
   4a690:	mov	r0, #0
   4a694:	bx	lr
   4a698:	mov	r0, #8
   4a69c:	bx	lr

0004a6a0 <Mat_VarCalloc>:
   4a6a0:	strd	r4, [sp, #-16]!
   4a6a4:	str	r6, [sp, #8]
   4a6a8:	str	lr, [sp, #12]
   4a6ac:	mov	r0, #56	; 0x38
   4a6b0:	bl	1544 <malloc@plt>
   4a6b4:	subs	r4, r0, #0
   4a6b8:	beq	4a724 <Mat_VarCalloc+0x84>
   4a6bc:	mov	r3, #0
   4a6c0:	str	r3, [r4]
   4a6c4:	str	r3, [r4, #4]
   4a6c8:	str	r3, [r4, #8]
   4a6cc:	str	r3, [r4, #12]
   4a6d0:	str	r3, [r4, #16]
   4a6d4:	str	r3, [r4, #20]
   4a6d8:	str	r3, [r4, #24]
   4a6dc:	str	r3, [r4, #28]
   4a6e0:	str	r3, [r4, #32]
   4a6e4:	str	r3, [r4, #36]	; 0x24
   4a6e8:	str	r3, [r4, #40]	; 0x28
   4a6ec:	str	r3, [r4, #44]	; 0x2c
   4a6f0:	str	r3, [r4, #48]	; 0x30
   4a6f4:	mov	r0, #20
   4a6f8:	bl	1544 <malloc@plt>
   4a6fc:	mov	r5, r0
   4a700:	str	r0, [r4, #52]	; 0x34
   4a704:	cmp	r0, #0
   4a708:	beq	4a738 <Mat_VarCalloc+0x98>
   4a70c:	mov	r3, #0
   4a710:	str	r3, [r0]
   4a714:	str	r3, [r0, #4]
   4a718:	str	r3, [r0, #8]
   4a71c:	str	r3, [r0, #12]
   4a720:	str	r3, [r0, #16]
   4a724:	mov	r0, r4
   4a728:	ldrd	r4, [sp]
   4a72c:	ldr	r6, [sp, #8]
   4a730:	add	sp, sp, #12
   4a734:	pop	{pc}		; (ldr pc, [sp], #4)
   4a738:	mov	r0, r4
   4a73c:	bl	1478 <free@plt>
   4a740:	mov	r4, r5
   4a744:	b	4a724 <Mat_VarCalloc+0x84>

0004a748 <Mat_VarDuplicate>:
   4a748:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4a74c:	strd	r6, [sp, #8]
   4a750:	strd	r8, [sp, #16]
   4a754:	strd	sl, [sp, #24]
   4a758:	str	lr, [sp, #32]
   4a75c:	sub	sp, sp, #12
   4a760:	mov	r4, r0
   4a764:	mov	r6, r1
   4a768:	bl	1508 <Mat_VarCalloc@plt>
   4a76c:	subs	r5, r0, #0
   4a770:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4a774:	ldr	r3, [r4]
   4a778:	str	r3, [r5]
   4a77c:	ldr	r3, [r4, #4]
   4a780:	str	r3, [r5, #4]
   4a784:	ldr	r3, [r4, #8]
   4a788:	str	r3, [r5, #8]
   4a78c:	ldr	r3, [r4, #12]
   4a790:	str	r3, [r5, #12]
   4a794:	ldr	r3, [r4, #16]
   4a798:	str	r3, [r5, #16]
   4a79c:	ldr	r3, [r4, #20]
   4a7a0:	str	r3, [r5, #20]
   4a7a4:	ldr	r3, [r4, #24]
   4a7a8:	str	r3, [r5, #24]
   4a7ac:	ldr	r3, [r4, #28]
   4a7b0:	str	r3, [r5, #28]
   4a7b4:	ldr	r3, [r4, #44]	; 0x2c
   4a7b8:	str	r3, [r5, #44]	; 0x2c
   4a7bc:	ldr	r3, [r4, #48]	; 0x30
   4a7c0:	str	r3, [r5, #48]	; 0x30
   4a7c4:	ldr	r0, [r4, #36]	; 0x24
   4a7c8:	cmp	r0, #0
   4a7cc:	beq	4a7f8 <Mat_VarDuplicate+0xb0>
   4a7d0:	bl	15c8 <strlen@plt>
   4a7d4:	add	r7, r0, #1
   4a7d8:	mov	r0, r7
   4a7dc:	bl	1544 <malloc@plt>
   4a7e0:	str	r0, [r5, #36]	; 0x24
   4a7e4:	cmp	r0, #0
   4a7e8:	beq	4a7f8 <Mat_VarDuplicate+0xb0>
   4a7ec:	mov	r2, r7
   4a7f0:	ldr	r1, [r4, #36]	; 0x24
   4a7f4:	bl	1490 <memcpy@plt>
   4a7f8:	ldr	r0, [r4, #4]
   4a7fc:	lsl	r0, r0, #2
   4a800:	bl	1544 <malloc@plt>
   4a804:	str	r0, [r5, #32]
   4a808:	cmp	r0, #0
   4a80c:	beq	4a820 <Mat_VarDuplicate+0xd8>
   4a810:	ldr	r2, [r4, #4]
   4a814:	lsl	r2, r2, #2
   4a818:	ldr	r1, [r4, #32]
   4a81c:	bl	1490 <memcpy@plt>
   4a820:	ldr	r3, [r4, #52]	; 0x34
   4a824:	cmp	r3, #0
   4a828:	beq	4ab80 <Mat_VarDuplicate+0x438>
   4a82c:	ldr	r2, [r5, #52]	; 0x34
   4a830:	ldr	r3, [r3]
   4a834:	str	r3, [r2]
   4a838:	ldr	r2, [r5, #52]	; 0x34
   4a83c:	mov	r3, #0
   4a840:	str	r3, [r2, #12]
   4a844:	ldr	r2, [r5, #52]	; 0x34
   4a848:	str	r3, [r2, #16]
   4a84c:	ldr	r3, [r5, #52]	; 0x34
   4a850:	ldr	r2, [r4, #52]	; 0x34
   4a854:	ldr	r2, [r2, #4]
   4a858:	str	r2, [r3, #4]
   4a85c:	ldr	r3, [r4, #52]	; 0x34
   4a860:	ldr	r2, [r3, #8]
   4a864:	cmp	r2, #0
   4a868:	beq	4a878 <Mat_VarDuplicate+0x130>
   4a86c:	ldr	r0, [r3, #4]
   4a870:	cmp	r0, #0
   4a874:	bne	4a948 <Mat_VarDuplicate+0x200>
   4a878:	ldr	r3, [r4, #52]	; 0x34
   4a87c:	ldr	r3, [r3, #12]
   4a880:	cmp	r3, #0
   4a884:	beq	4a8b4 <Mat_VarDuplicate+0x16c>
   4a888:	ldr	r7, [r5, #52]	; 0x34
   4a88c:	mov	r0, #56	; 0x38
   4a890:	bl	1544 <malloc@plt>
   4a894:	str	r0, [r7, #12]
   4a898:	cmp	r0, #0
   4a89c:	beq	4a8b4 <Mat_VarDuplicate+0x16c>
   4a8a0:	ldr	r2, [r4, #52]	; 0x34
   4a8a4:	ldr	r3, [r5, #52]	; 0x34
   4a8a8:	ldr	r1, [r2, #12]
   4a8ac:	ldr	r0, [r3, #12]
   4a8b0:	bl	15bc <inflateCopy@plt>
   4a8b4:	ldr	r3, [r4, #52]	; 0x34
   4a8b8:	ldr	r3, [r3, #16]
   4a8bc:	cmp	r3, #0
   4a8c0:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4a8c4:	ldr	r3, [r4, #16]
   4a8c8:	cmp	r3, #5
   4a8cc:	beq	4a9a8 <Mat_VarDuplicate+0x260>
   4a8d0:	ldr	r3, [r5, #20]
   4a8d4:	cmp	r3, #0
   4a8d8:	beq	4ab4c <Mat_VarDuplicate+0x404>
   4a8dc:	ldr	r7, [r5, #52]	; 0x34
   4a8e0:	mov	r0, #8
   4a8e4:	bl	1544 <malloc@plt>
   4a8e8:	str	r0, [r7, #16]
   4a8ec:	ldr	r3, [r5, #52]	; 0x34
   4a8f0:	ldr	r7, [r3, #16]
   4a8f4:	cmp	r7, #0
   4a8f8:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4a8fc:	ldr	r3, [r4, #52]	; 0x34
   4a900:	ldr	r8, [r3, #16]
   4a904:	ldr	r0, [r5]
   4a908:	bl	1544 <malloc@plt>
   4a90c:	str	r0, [r7]
   4a910:	cmp	r0, #0
   4a914:	beq	4a924 <Mat_VarDuplicate+0x1dc>
   4a918:	ldr	r2, [r5]
   4a91c:	ldr	r1, [r8]
   4a920:	bl	1490 <memcpy@plt>
   4a924:	ldr	r0, [r5]
   4a928:	bl	1544 <malloc@plt>
   4a92c:	str	r0, [r7, #4]
   4a930:	cmp	r0, #0
   4a934:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4a938:	ldr	r2, [r5]
   4a93c:	ldr	r1, [r8, #4]
   4a940:	bl	1490 <memcpy@plt>
   4a944:	b	4ab90 <Mat_VarDuplicate+0x448>
   4a948:	ldr	r7, [r5, #52]	; 0x34
   4a94c:	mov	r1, #4
   4a950:	bl	140c <calloc@plt>
   4a954:	str	r0, [r7, #8]
   4a958:	ldr	r3, [r4, #52]	; 0x34
   4a95c:	ldr	r2, [r3, #4]
   4a960:	cmp	r2, #0
   4a964:	beq	4a878 <Mat_VarDuplicate+0x130>
   4a968:	mov	r7, #0
   4a96c:	b	4a994 <Mat_VarDuplicate+0x24c>
   4a970:	ldr	r3, [r5, #52]	; 0x34
   4a974:	ldr	r8, [r3, #8]
   4a978:	bl	14cc <strdup@plt>
   4a97c:	str	r0, [r8, r7, lsl #2]
   4a980:	add	r7, r7, #1
   4a984:	ldr	r3, [r4, #52]	; 0x34
   4a988:	ldr	r2, [r3, #4]
   4a98c:	cmp	r2, r7
   4a990:	bls	4a878 <Mat_VarDuplicate+0x130>
   4a994:	ldr	r3, [r3, #8]
   4a998:	ldr	r0, [r3, r7, lsl #2]
   4a99c:	cmp	r0, #0
   4a9a0:	bne	4a970 <Mat_VarDuplicate+0x228>
   4a9a4:	b	4a980 <Mat_VarDuplicate+0x238>
   4a9a8:	ldr	r7, [r5, #52]	; 0x34
   4a9ac:	mov	r0, #28
   4a9b0:	bl	1544 <malloc@plt>
   4a9b4:	str	r0, [r7, #16]
   4a9b8:	ldr	r3, [r5, #52]	; 0x34
   4a9bc:	ldr	r9, [r3, #16]
   4a9c0:	cmp	r9, #0
   4a9c4:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4a9c8:	ldr	r3, [r4, #52]	; 0x34
   4a9cc:	ldr	r7, [r3, #16]
   4a9d0:	ldr	r3, [r7]
   4a9d4:	str	r3, [r9]
   4a9d8:	ldr	r0, [r7, #8]
   4a9dc:	str	r0, [r9, #8]
   4a9e0:	lsl	r0, r0, #2
   4a9e4:	bl	1544 <malloc@plt>
   4a9e8:	str	r0, [r9, #4]
   4a9ec:	cmp	r0, #0
   4a9f0:	beq	4aa04 <Mat_VarDuplicate+0x2bc>
   4a9f4:	ldr	r2, [r7, #8]
   4a9f8:	lsl	r2, r2, #2
   4a9fc:	ldr	r1, [r7, #4]
   4aa00:	bl	1490 <memcpy@plt>
   4aa04:	ldr	r0, [r7, #16]
   4aa08:	str	r0, [r9, #16]
   4aa0c:	lsl	r0, r0, #2
   4aa10:	bl	1544 <malloc@plt>
   4aa14:	str	r0, [r9, #12]
   4aa18:	cmp	r0, #0
   4aa1c:	beq	4aa30 <Mat_VarDuplicate+0x2e8>
   4aa20:	ldr	r2, [r7, #16]
   4aa24:	lsl	r2, r2, #2
   4aa28:	ldr	r1, [r7, #12]
   4aa2c:	bl	1490 <memcpy@plt>
   4aa30:	ldr	r8, [r7, #20]
   4aa34:	str	r8, [r9, #20]
   4aa38:	ldr	r3, [r5, #20]
   4aa3c:	cmp	r3, #0
   4aa40:	beq	4aafc <Mat_VarDuplicate+0x3b4>
   4aa44:	ldr	r3, [r7, #24]
   4aa48:	cmp	r3, #0
   4aa4c:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4aa50:	mov	r0, #8
   4aa54:	bl	1544 <malloc@plt>
   4aa58:	mov	r8, r0
   4aa5c:	str	r0, [r9, #24]
   4aa60:	cmp	r0, #0
   4aa64:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4aa68:	ldr	sl, [r7, #24]
   4aa6c:	ldr	r9, [r7, #20]
   4aa70:	ldr	r0, [r4, #8]
   4aa74:	bl	1598 <Mat_SizeOf@plt>
   4aa78:	mul	r0, r0, r9
   4aa7c:	bl	1544 <malloc@plt>
   4aa80:	mov	r9, r0
   4aa84:	str	r0, [r8]
   4aa88:	cmp	r0, #0
   4aa8c:	beq	4aab4 <Mat_VarDuplicate+0x36c>
   4aa90:	ldr	r3, [sl]
   4aa94:	str	r3, [sp, #4]
   4aa98:	ldr	fp, [r7, #20]
   4aa9c:	ldr	r0, [r4, #8]
   4aaa0:	bl	1598 <Mat_SizeOf@plt>
   4aaa4:	mul	r2, r0, fp
   4aaa8:	ldr	r1, [sp, #4]
   4aaac:	mov	r0, r9
   4aab0:	bl	1490 <memcpy@plt>
   4aab4:	ldr	r9, [r7, #20]
   4aab8:	ldr	r0, [r4, #8]
   4aabc:	bl	1598 <Mat_SizeOf@plt>
   4aac0:	mul	r0, r0, r9
   4aac4:	bl	1544 <malloc@plt>
   4aac8:	mov	r9, r0
   4aacc:	str	r0, [r8, #4]
   4aad0:	cmp	r0, #0
   4aad4:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4aad8:	ldr	r8, [sl, #4]
   4aadc:	ldr	r7, [r7, #20]
   4aae0:	ldr	r0, [r4, #8]
   4aae4:	bl	1598 <Mat_SizeOf@plt>
   4aae8:	mul	r2, r0, r7
   4aaec:	mov	r1, r8
   4aaf0:	mov	r0, r9
   4aaf4:	bl	1490 <memcpy@plt>
   4aaf8:	b	4ab90 <Mat_VarDuplicate+0x448>
   4aafc:	ldr	r3, [r7, #24]
   4ab00:	cmp	r3, #0
   4ab04:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4ab08:	ldr	r0, [r4, #8]
   4ab0c:	bl	1598 <Mat_SizeOf@plt>
   4ab10:	mul	r0, r0, r8
   4ab14:	bl	1544 <malloc@plt>
   4ab18:	mov	r8, r0
   4ab1c:	str	r0, [r9, #24]
   4ab20:	cmp	r0, #0
   4ab24:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4ab28:	ldr	r9, [r7, #24]
   4ab2c:	ldr	r7, [r7, #20]
   4ab30:	ldr	r0, [r4, #8]
   4ab34:	bl	1598 <Mat_SizeOf@plt>
   4ab38:	mul	r2, r0, r7
   4ab3c:	mov	r1, r9
   4ab40:	mov	r0, r8
   4ab44:	bl	1490 <memcpy@plt>
   4ab48:	b	4ab90 <Mat_VarDuplicate+0x448>
   4ab4c:	ldr	r7, [r5, #52]	; 0x34
   4ab50:	ldr	r0, [r4]
   4ab54:	bl	1544 <malloc@plt>
   4ab58:	str	r0, [r7, #16]
   4ab5c:	cmp	r0, #0
   4ab60:	beq	4ab90 <Mat_VarDuplicate+0x448>
   4ab64:	ldr	r3, [r5, #52]	; 0x34
   4ab68:	ldr	r1, [r4, #52]	; 0x34
   4ab6c:	ldr	r2, [r4]
   4ab70:	ldr	r1, [r1, #16]
   4ab74:	ldr	r0, [r3, #16]
   4ab78:	bl	1490 <memcpy@plt>
   4ab7c:	b	4ab90 <Mat_VarDuplicate+0x448>
   4ab80:	ldr	r0, [r5, #52]	; 0x34
   4ab84:	bl	1478 <free@plt>
   4ab88:	mov	r3, #0
   4ab8c:	str	r3, [r5, #52]	; 0x34
   4ab90:	cmp	r6, #0
   4ab94:	bne	4abc0 <Mat_VarDuplicate+0x478>
   4ab98:	ldr	r3, [r4, #40]	; 0x28
   4ab9c:	str	r3, [r5, #40]	; 0x28
   4aba0:	mov	r0, r5
   4aba4:	add	sp, sp, #12
   4aba8:	ldrd	r4, [sp]
   4abac:	ldrd	r6, [sp, #8]
   4abb0:	ldrd	r8, [sp, #16]
   4abb4:	ldrd	sl, [sp, #24]
   4abb8:	add	sp, sp, #32
   4abbc:	pop	{pc}		; (ldr pc, [sp], #4)
   4abc0:	ldr	r3, [r4, #40]	; 0x28
   4abc4:	cmp	r3, #0
   4abc8:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4abcc:	ldr	r3, [r4, #16]
   4abd0:	cmp	r3, #2
   4abd4:	beq	4ac54 <Mat_VarDuplicate+0x50c>
   4abd8:	cmp	r3, #1
   4abdc:	beq	4acb4 <Mat_VarDuplicate+0x56c>
   4abe0:	cmp	r3, #5
   4abe4:	beq	4ad14 <Mat_VarDuplicate+0x5cc>
   4abe8:	ldr	r3, [r5, #20]
   4abec:	cmp	r3, #0
   4abf0:	beq	4aeb4 <Mat_VarDuplicate+0x76c>
   4abf4:	mov	r0, #8
   4abf8:	bl	1544 <malloc@plt>
   4abfc:	mov	r6, r0
   4ac00:	str	r0, [r5, #40]	; 0x28
   4ac04:	cmp	r0, #0
   4ac08:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ac0c:	ldr	r4, [r4, #40]	; 0x28
   4ac10:	ldr	r0, [r5]
   4ac14:	bl	1544 <malloc@plt>
   4ac18:	str	r0, [r6]
   4ac1c:	cmp	r0, #0
   4ac20:	beq	4ac30 <Mat_VarDuplicate+0x4e8>
   4ac24:	ldr	r2, [r5]
   4ac28:	ldr	r1, [r4]
   4ac2c:	bl	1490 <memcpy@plt>
   4ac30:	ldr	r0, [r5]
   4ac34:	bl	1544 <malloc@plt>
   4ac38:	str	r0, [r6, #4]
   4ac3c:	cmp	r0, #0
   4ac40:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ac44:	ldr	r2, [r5]
   4ac48:	ldr	r1, [r4, #4]
   4ac4c:	bl	1490 <memcpy@plt>
   4ac50:	b	4aba0 <Mat_VarDuplicate+0x458>
   4ac54:	ldr	r0, [r4]
   4ac58:	bl	1544 <malloc@plt>
   4ac5c:	str	r0, [r5, #40]	; 0x28
   4ac60:	cmp	r0, #0
   4ac64:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ac68:	ldr	r3, [r4, #12]
   4ac6c:	cmp	r3, #0
   4ac70:	ble	4aba0 <Mat_VarDuplicate+0x458>
   4ac74:	ldr	r2, [r4]
   4ac78:	udiv	r9, r2, r3
   4ac7c:	cmp	r2, r3
   4ac80:	bcc	4aba0 <Mat_VarDuplicate+0x458>
   4ac84:	ldr	r8, [r4, #40]	; 0x28
   4ac88:	sub	r8, r8, #4
   4ac8c:	sub	r4, r0, #4
   4ac90:	mov	r7, #0
   4ac94:	mov	r1, r6
   4ac98:	ldr	r0, [r8, #4]!
   4ac9c:	bl	4a748 <Mat_VarDuplicate>
   4aca0:	str	r0, [r4, #4]!
   4aca4:	add	r7, r7, #1
   4aca8:	cmp	r9, r7
   4acac:	bhi	4ac94 <Mat_VarDuplicate+0x54c>
   4acb0:	b	4aba0 <Mat_VarDuplicate+0x458>
   4acb4:	ldr	r0, [r4]
   4acb8:	bl	1544 <malloc@plt>
   4acbc:	str	r0, [r5, #40]	; 0x28
   4acc0:	cmp	r0, #0
   4acc4:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4acc8:	ldr	r3, [r4, #12]
   4accc:	cmp	r3, #0
   4acd0:	ble	4aba0 <Mat_VarDuplicate+0x458>
   4acd4:	ldr	r2, [r4]
   4acd8:	udiv	r9, r2, r3
   4acdc:	cmp	r2, r3
   4ace0:	bcc	4aba0 <Mat_VarDuplicate+0x458>
   4ace4:	ldr	r8, [r4, #40]	; 0x28
   4ace8:	sub	r8, r8, #4
   4acec:	sub	r4, r0, #4
   4acf0:	mov	r7, #0
   4acf4:	mov	r1, r6
   4acf8:	ldr	r0, [r8, #4]!
   4acfc:	bl	4a748 <Mat_VarDuplicate>
   4ad00:	str	r0, [r4, #4]!
   4ad04:	add	r7, r7, #1
   4ad08:	cmp	r9, r7
   4ad0c:	bhi	4acf4 <Mat_VarDuplicate+0x5ac>
   4ad10:	b	4aba0 <Mat_VarDuplicate+0x458>
   4ad14:	mov	r0, #28
   4ad18:	bl	1544 <malloc@plt>
   4ad1c:	mov	r6, r0
   4ad20:	str	r0, [r5, #40]	; 0x28
   4ad24:	cmp	r0, #0
   4ad28:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ad2c:	ldr	r7, [r4, #40]	; 0x28
   4ad30:	ldr	r3, [r7]
   4ad34:	str	r3, [r0]
   4ad38:	ldr	r0, [r7, #8]
   4ad3c:	str	r0, [r6, #8]
   4ad40:	lsl	r0, r0, #2
   4ad44:	bl	1544 <malloc@plt>
   4ad48:	str	r0, [r6, #4]
   4ad4c:	cmp	r0, #0
   4ad50:	beq	4ad64 <Mat_VarDuplicate+0x61c>
   4ad54:	ldr	r2, [r7, #8]
   4ad58:	lsl	r2, r2, #2
   4ad5c:	ldr	r1, [r7, #4]
   4ad60:	bl	1490 <memcpy@plt>
   4ad64:	ldr	r0, [r7, #16]
   4ad68:	str	r0, [r6, #16]
   4ad6c:	lsl	r0, r0, #2
   4ad70:	bl	1544 <malloc@plt>
   4ad74:	str	r0, [r6, #12]
   4ad78:	cmp	r0, #0
   4ad7c:	beq	4ad90 <Mat_VarDuplicate+0x648>
   4ad80:	ldr	r2, [r7, #16]
   4ad84:	lsl	r2, r2, #2
   4ad88:	ldr	r1, [r7, #12]
   4ad8c:	bl	1490 <memcpy@plt>
   4ad90:	ldr	r8, [r7, #20]
   4ad94:	str	r8, [r6, #20]
   4ad98:	ldr	r3, [r5, #20]
   4ad9c:	cmp	r3, #0
   4ada0:	beq	4ae58 <Mat_VarDuplicate+0x710>
   4ada4:	ldr	r3, [r7, #24]
   4ada8:	cmp	r3, #0
   4adac:	beq	4aea8 <Mat_VarDuplicate+0x760>
   4adb0:	mov	r0, #8
   4adb4:	bl	1544 <malloc@plt>
   4adb8:	mov	r8, r0
   4adbc:	str	r0, [r6, #24]
   4adc0:	cmp	r0, #0
   4adc4:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4adc8:	ldr	r9, [r7, #24]
   4adcc:	ldr	r6, [r7, #20]
   4add0:	ldr	r0, [r4, #8]
   4add4:	bl	1598 <Mat_SizeOf@plt>
   4add8:	mul	r0, r0, r6
   4addc:	bl	1544 <malloc@plt>
   4ade0:	mov	r6, r0
   4ade4:	str	r0, [r8]
   4ade8:	cmp	r0, #0
   4adec:	beq	4ae10 <Mat_VarDuplicate+0x6c8>
   4adf0:	ldr	sl, [r9]
   4adf4:	ldr	fp, [r7, #20]
   4adf8:	ldr	r0, [r4, #8]
   4adfc:	bl	1598 <Mat_SizeOf@plt>
   4ae00:	mul	r2, r0, fp
   4ae04:	mov	r1, sl
   4ae08:	mov	r0, r6
   4ae0c:	bl	1490 <memcpy@plt>
   4ae10:	ldr	r6, [r7, #20]
   4ae14:	ldr	r0, [r4, #8]
   4ae18:	bl	1598 <Mat_SizeOf@plt>
   4ae1c:	mul	r0, r0, r6
   4ae20:	bl	1544 <malloc@plt>
   4ae24:	mov	r6, r0
   4ae28:	str	r0, [r8, #4]
   4ae2c:	cmp	r0, #0
   4ae30:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ae34:	ldr	r8, [r9, #4]
   4ae38:	ldr	r7, [r7, #20]
   4ae3c:	ldr	r0, [r4, #8]
   4ae40:	bl	1598 <Mat_SizeOf@plt>
   4ae44:	mul	r2, r0, r7
   4ae48:	mov	r1, r8
   4ae4c:	mov	r0, r6
   4ae50:	bl	1490 <memcpy@plt>
   4ae54:	b	4aba0 <Mat_VarDuplicate+0x458>
   4ae58:	ldr	r3, [r7, #24]
   4ae5c:	cmp	r3, #0
   4ae60:	beq	4aea8 <Mat_VarDuplicate+0x760>
   4ae64:	ldr	r0, [r4, #8]
   4ae68:	bl	1598 <Mat_SizeOf@plt>
   4ae6c:	mul	r0, r0, r8
   4ae70:	bl	1544 <malloc@plt>
   4ae74:	mov	r8, r0
   4ae78:	str	r0, [r6, #24]
   4ae7c:	cmp	r0, #0
   4ae80:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4ae84:	ldr	r6, [r7, #24]
   4ae88:	ldr	r7, [r7, #20]
   4ae8c:	ldr	r0, [r4, #8]
   4ae90:	bl	1598 <Mat_SizeOf@plt>
   4ae94:	mul	r2, r0, r7
   4ae98:	mov	r1, r6
   4ae9c:	mov	r0, r8
   4aea0:	bl	1490 <memcpy@plt>
   4aea4:	b	4aba0 <Mat_VarDuplicate+0x458>
   4aea8:	mov	r3, #0
   4aeac:	str	r3, [r6, #24]
   4aeb0:	b	4aba0 <Mat_VarDuplicate+0x458>
   4aeb4:	ldr	r0, [r4]
   4aeb8:	bl	1544 <malloc@plt>
   4aebc:	str	r0, [r5, #40]	; 0x28
   4aec0:	cmp	r0, #0
   4aec4:	beq	4aba0 <Mat_VarDuplicate+0x458>
   4aec8:	ldr	r2, [r4]
   4aecc:	ldr	r1, [r4, #40]	; 0x28
   4aed0:	bl	1490 <memcpy@plt>
   4aed4:	b	4aba0 <Mat_VarDuplicate+0x458>

0004aed8 <Mat_VarFree>:
   4aed8:	strd	r4, [sp, #-16]!
   4aedc:	str	r6, [sp, #8]
   4aee0:	str	lr, [sp, #12]
   4aee4:	sub	sp, sp, #8
   4aee8:	mov	r3, #0
   4aeec:	str	r3, [sp, #4]
   4aef0:	subs	r4, r0, #0
   4aef4:	beq	4b25c <Mat_VarFree+0x384>
   4aef8:	ldr	r3, [r4, #32]
   4aefc:	cmp	r3, #0
   4af00:	beq	4af20 <Mat_VarFree+0x48>
   4af04:	mov	r3, #1
   4af08:	str	r3, [sp, #4]
   4af0c:	add	r1, sp, #4
   4af10:	mov	r0, r4
   4af14:	bl	4a3c8 <SafeMulDims>
   4af18:	ldr	r0, [r4, #32]
   4af1c:	bl	1478 <free@plt>
   4af20:	ldr	r5, [r4, #40]	; 0x28
   4af24:	cmp	r5, #0
   4af28:	beq	4af8c <Mat_VarFree+0xb4>
   4af2c:	ldr	r3, [r4, #16]
   4af30:	sub	r3, r3, #1
   4af34:	cmp	r3, #15
   4af38:	addls	pc, pc, r3, lsl #2
   4af3c:	b	4af8c <Mat_VarFree+0xb4>
   4af40:	b	4b014 <Mat_VarFree+0x13c>
   4af44:	b	4af80 <Mat_VarFree+0xa8>
   4af48:	b	4af8c <Mat_VarFree+0xb4>
   4af4c:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af50:	b	4b058 <Mat_VarFree+0x180>
   4af54:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af58:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af5c:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af60:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af64:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af68:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af6c:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af70:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af74:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af78:	b	4b0d4 <Mat_VarFree+0x1fc>
   4af7c:	b	4b114 <Mat_VarFree+0x23c>
   4af80:	ldr	r3, [r4, #44]	; 0x2c
   4af84:	cmp	r3, #0
   4af88:	beq	4afc8 <Mat_VarFree+0xf0>
   4af8c:	ldr	r3, [r4, #52]	; 0x34
   4af90:	cmp	r3, #0
   4af94:	beq	4b244 <Mat_VarFree+0x36c>
   4af98:	ldr	r2, [r4, #48]	; 0x30
   4af9c:	cmp	r2, #1
   4afa0:	beq	4b12c <Mat_VarFree+0x254>
   4afa4:	ldr	r3, [r4, #52]	; 0x34
   4afa8:	ldr	r2, [r3, #8]
   4afac:	cmp	r2, #0
   4afb0:	beq	4b234 <Mat_VarFree+0x35c>
   4afb4:	ldr	r2, [r3, #4]
   4afb8:	cmp	r2, #0
   4afbc:	beq	4b234 <Mat_VarFree+0x35c>
   4afc0:	mov	r5, #0
   4afc4:	b	4b214 <Mat_VarFree+0x33c>
   4afc8:	ldr	r3, [r4, #52]	; 0x34
   4afcc:	ldr	r2, [r3, #4]
   4afd0:	ldr	r1, [sp, #4]
   4afd4:	mov	r0, sp
   4afd8:	bl	4a440 <SafeMul>
   4afdc:	ldr	r3, [sp]
   4afe0:	cmp	r3, #0
   4afe4:	beq	4b008 <Mat_VarFree+0x130>
   4afe8:	sub	r5, r5, #4
   4afec:	mov	r6, #0
   4aff0:	ldr	r0, [r5, #4]!
   4aff4:	bl	4aed8 <Mat_VarFree>
   4aff8:	add	r6, r6, #1
   4affc:	ldr	r3, [sp]
   4b000:	cmp	r3, r6
   4b004:	bhi	4aff0 <Mat_VarFree+0x118>
   4b008:	ldr	r0, [r4, #40]	; 0x28
   4b00c:	bl	1478 <free@plt>
   4b010:	b	4af8c <Mat_VarFree+0xb4>
   4b014:	ldr	r3, [r4, #44]	; 0x2c
   4b018:	cmp	r3, #0
   4b01c:	bne	4af8c <Mat_VarFree+0xb4>
   4b020:	ldr	r3, [sp, #4]
   4b024:	cmp	r3, #0
   4b028:	beq	4b04c <Mat_VarFree+0x174>
   4b02c:	sub	r5, r5, #4
   4b030:	mov	r6, #0
   4b034:	ldr	r0, [r5, #4]!
   4b038:	bl	4aed8 <Mat_VarFree>
   4b03c:	add	r6, r6, #1
   4b040:	ldr	r3, [sp, #4]
   4b044:	cmp	r3, r6
   4b048:	bhi	4b034 <Mat_VarFree+0x15c>
   4b04c:	ldr	r0, [r4, #40]	; 0x28
   4b050:	bl	1478 <free@plt>
   4b054:	b	4af8c <Mat_VarFree+0xb4>
   4b058:	ldr	r3, [r4, #44]	; 0x2c
   4b05c:	cmp	r3, #0
   4b060:	bne	4af8c <Mat_VarFree+0xb4>
   4b064:	ldr	r0, [r5, #4]
   4b068:	cmp	r0, #0
   4b06c:	beq	4b074 <Mat_VarFree+0x19c>
   4b070:	bl	1478 <free@plt>
   4b074:	ldr	r0, [r5, #12]
   4b078:	cmp	r0, #0
   4b07c:	beq	4b084 <Mat_VarFree+0x1ac>
   4b080:	bl	1478 <free@plt>
   4b084:	ldr	r3, [r4, #20]
   4b088:	cmp	r3, #0
   4b08c:	beq	4b0b8 <Mat_VarFree+0x1e0>
   4b090:	ldr	r6, [r5, #24]
   4b094:	cmp	r6, #0
   4b098:	beq	4b0c8 <Mat_VarFree+0x1f0>
   4b09c:	ldr	r0, [r6]
   4b0a0:	bl	1478 <free@plt>
   4b0a4:	ldr	r0, [r6, #4]
   4b0a8:	bl	1478 <free@plt>
   4b0ac:	mov	r0, r6
   4b0b0:	bl	1478 <free@plt>
   4b0b4:	b	4b0c8 <Mat_VarFree+0x1f0>
   4b0b8:	ldr	r0, [r5, #24]
   4b0bc:	cmp	r0, #0
   4b0c0:	beq	4b0c8 <Mat_VarFree+0x1f0>
   4b0c4:	bl	1478 <free@plt>
   4b0c8:	mov	r0, r5
   4b0cc:	bl	1478 <free@plt>
   4b0d0:	b	4af8c <Mat_VarFree+0xb4>
   4b0d4:	ldr	r3, [r4, #44]	; 0x2c
   4b0d8:	cmp	r3, #0
   4b0dc:	bne	4af8c <Mat_VarFree+0xb4>
   4b0e0:	ldr	r3, [r4, #20]
   4b0e4:	cmp	r3, #0
   4b0e8:	beq	4b108 <Mat_VarFree+0x230>
   4b0ec:	ldr	r0, [r5]
   4b0f0:	bl	1478 <free@plt>
   4b0f4:	ldr	r0, [r5, #4]
   4b0f8:	bl	1478 <free@plt>
   4b0fc:	mov	r0, r5
   4b100:	bl	1478 <free@plt>
   4b104:	b	4af8c <Mat_VarFree+0xb4>
   4b108:	mov	r0, r5
   4b10c:	bl	1478 <free@plt>
   4b110:	b	4af8c <Mat_VarFree+0xb4>
   4b114:	ldr	r3, [r4, #44]	; 0x2c
   4b118:	cmp	r3, #0
   4b11c:	bne	4af8c <Mat_VarFree+0xb4>
   4b120:	mov	r0, r5
   4b124:	bl	1478 <free@plt>
   4b128:	b	4af8c <Mat_VarFree+0xb4>
   4b12c:	ldr	r0, [r3, #12]
   4b130:	bl	15b0 <inflateEnd@plt>
   4b134:	ldr	r3, [r4, #52]	; 0x34
   4b138:	ldr	r0, [r3, #12]
   4b13c:	bl	1478 <free@plt>
   4b140:	ldr	r3, [r4, #52]	; 0x34
   4b144:	ldr	r5, [r3, #16]
   4b148:	cmp	r5, #0
   4b14c:	beq	4afa4 <Mat_VarFree+0xcc>
   4b150:	ldr	r3, [r4, #16]
   4b154:	cmp	r3, #5
   4b158:	beq	4b174 <Mat_VarFree+0x29c>
   4b15c:	ldr	r3, [r4, #20]
   4b160:	cmp	r3, #0
   4b164:	bne	4b1e4 <Mat_VarFree+0x30c>
   4b168:	mov	r0, r5
   4b16c:	bl	1478 <free@plt>
   4b170:	b	4afa4 <Mat_VarFree+0xcc>
   4b174:	ldr	r0, [r5, #4]
   4b178:	cmp	r0, #0
   4b17c:	beq	4b184 <Mat_VarFree+0x2ac>
   4b180:	bl	1478 <free@plt>
   4b184:	ldr	r0, [r5, #12]
   4b188:	cmp	r0, #0
   4b18c:	beq	4b194 <Mat_VarFree+0x2bc>
   4b190:	bl	1478 <free@plt>
   4b194:	ldr	r3, [r4, #20]
   4b198:	cmp	r3, #0
   4b19c:	beq	4b1c8 <Mat_VarFree+0x2f0>
   4b1a0:	ldr	r6, [r5, #24]
   4b1a4:	cmp	r6, #0
   4b1a8:	beq	4b1d8 <Mat_VarFree+0x300>
   4b1ac:	ldr	r0, [r6]
   4b1b0:	bl	1478 <free@plt>
   4b1b4:	ldr	r0, [r6, #4]
   4b1b8:	bl	1478 <free@plt>
   4b1bc:	mov	r0, r6
   4b1c0:	bl	1478 <free@plt>
   4b1c4:	b	4b1d8 <Mat_VarFree+0x300>
   4b1c8:	ldr	r0, [r5, #24]
   4b1cc:	cmp	r0, #0
   4b1d0:	beq	4b1d8 <Mat_VarFree+0x300>
   4b1d4:	bl	1478 <free@plt>
   4b1d8:	mov	r0, r5
   4b1dc:	bl	1478 <free@plt>
   4b1e0:	b	4afa4 <Mat_VarFree+0xcc>
   4b1e4:	ldr	r0, [r5]
   4b1e8:	bl	1478 <free@plt>
   4b1ec:	ldr	r0, [r5, #4]
   4b1f0:	bl	1478 <free@plt>
   4b1f4:	mov	r0, r5
   4b1f8:	bl	1478 <free@plt>
   4b1fc:	b	4afa4 <Mat_VarFree+0xcc>
   4b200:	add	r5, r5, #1
   4b204:	ldr	r3, [r4, #52]	; 0x34
   4b208:	ldr	r2, [r3, #4]
   4b20c:	cmp	r2, r5
   4b210:	bls	4b22c <Mat_VarFree+0x354>
   4b214:	ldr	r3, [r3, #8]
   4b218:	ldr	r0, [r3, r5, lsl #2]
   4b21c:	cmp	r0, #0
   4b220:	beq	4b200 <Mat_VarFree+0x328>
   4b224:	bl	1478 <free@plt>
   4b228:	b	4b200 <Mat_VarFree+0x328>
   4b22c:	ldr	r0, [r3, #8]
   4b230:	bl	1478 <free@plt>
   4b234:	ldr	r0, [r4, #52]	; 0x34
   4b238:	bl	1478 <free@plt>
   4b23c:	mov	r3, #0
   4b240:	str	r3, [r4, #52]	; 0x34
   4b244:	ldr	r0, [r4, #36]	; 0x24
   4b248:	cmp	r0, #0
   4b24c:	beq	4b254 <Mat_VarFree+0x37c>
   4b250:	bl	1478 <free@plt>
   4b254:	mov	r0, r4
   4b258:	bl	1478 <free@plt>
   4b25c:	add	sp, sp, #8
   4b260:	ldrd	r4, [sp]
   4b264:	ldr	r6, [sp, #8]
   4b268:	add	sp, sp, #12
   4b26c:	pop	{pc}		; (ldr pc, [sp], #4)

0004b270 <Mat_Open>:
   4b270:	strd	r4, [sp, #-28]!	; 0xffffffe4
   4b274:	strd	r6, [sp, #8]
   4b278:	strd	r8, [sp, #16]
   4b27c:	str	lr, [sp, #24]
   4b280:	sub	sp, sp, #12
   4b284:	mov	r9, r0
   4b288:	mov	r8, r1
   4b28c:	tst	r1, #1
   4b290:	bne	4b3cc <Mat_Open+0x15c>
   4b294:	ldr	r1, [pc, #836]	; 4b5e0 <Mat_Open+0x370>
   4b298:	add	r1, pc, r1
   4b29c:	bl	1454 <fopen@plt>
   4b2a0:	subs	r7, r0, #0
   4b2a4:	beq	4b5d8 <Mat_Open+0x368>
   4b2a8:	mov	r0, #44	; 0x2c
   4b2ac:	bl	1544 <malloc@plt>
   4b2b0:	subs	r4, r0, #0
   4b2b4:	beq	4b3f8 <Mat_Open+0x188>
   4b2b8:	str	r7, [r4]
   4b2bc:	mov	r1, #1
   4b2c0:	mov	r0, #128	; 0x80
   4b2c4:	bl	140c <calloc@plt>
   4b2c8:	mov	r5, r0
   4b2cc:	str	r0, [r4, #4]
   4b2d0:	cmp	r0, #0
   4b2d4:	beq	4b410 <Mat_Open+0x1a0>
   4b2d8:	mov	r1, #1
   4b2dc:	mov	r0, #8
   4b2e0:	bl	140c <calloc@plt>
   4b2e4:	mov	r6, r0
   4b2e8:	str	r0, [r4, #8]
   4b2ec:	cmp	r0, #0
   4b2f0:	beq	4b434 <Mat_Open+0x1c4>
   4b2f4:	mov	r6, #0
   4b2f8:	str	r6, [r4, #12]
   4b2fc:	str	r6, [r4, #16]
   4b300:	str	r6, [r4, #20]
   4b304:	str	r6, [r4, #36]	; 0x24
   4b308:	str	r6, [r4, #40]	; 0x28
   4b30c:	mov	r3, r7
   4b310:	mov	r2, #116	; 0x74
   4b314:	mov	r1, #1
   4b318:	mov	r0, r5
   4b31c:	bl	1520 <fread@plt>
   4b320:	mov	r5, r0
   4b324:	ldr	r3, [r4, #4]
   4b328:	strb	r6, [r3, #116]	; 0x74
   4b32c:	mov	r3, r7
   4b330:	mov	r2, #8
   4b334:	mov	r1, #1
   4b338:	ldr	r0, [r4, #8]
   4b33c:	bl	1520 <fread@plt>
   4b340:	add	r5, r5, r0
   4b344:	mov	r3, r7
   4b348:	mov	r2, #1
   4b34c:	mov	r1, #2
   4b350:	add	r0, sp, #4
   4b354:	bl	1520 <fread@plt>
   4b358:	mov	r6, r0
   4b35c:	mov	r3, r7
   4b360:	mov	r2, #2
   4b364:	mov	r1, #1
   4b368:	add	r0, sp, #6
   4b36c:	bl	1520 <fread@plt>
   4b370:	add	r5, r0, r5
   4b374:	add	r5, r5, r6, lsl #1
   4b378:	cmp	r5, #128	; 0x80
   4b37c:	beq	4b460 <Mat_Open+0x1f0>
   4b380:	ldr	r3, [r4, #16]
   4b384:	cmp	r3, #0
   4b388:	beq	4b4b4 <Mat_Open+0x244>
   4b38c:	mov	r1, r9
   4b390:	ldr	r0, [pc, #588]	; 4b5e4 <Mat_Open+0x374>
   4b394:	add	r0, pc, r0
   4b398:	bl	1cf0 <strdup_printf>
   4b39c:	str	r0, [r4, #12]
   4b3a0:	str	r8, [r4, #24]
   4b3a4:	ldr	r3, [r4, #16]
   4b3a8:	cmp	r3, #512	; 0x200
   4b3ac:	beq	4b5a8 <Mat_Open+0x338>
   4b3b0:	mov	r0, r4
   4b3b4:	add	sp, sp, #12
   4b3b8:	ldrd	r4, [sp]
   4b3bc:	ldrd	r6, [sp, #8]
   4b3c0:	ldrd	r8, [sp, #16]
   4b3c4:	add	sp, sp, #24
   4b3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   4b3cc:	ldr	r1, [pc, #532]	; 4b5e8 <Mat_Open+0x378>
   4b3d0:	add	r1, pc, r1
   4b3d4:	bl	1454 <fopen@plt>
   4b3d8:	subs	r7, r0, #0
   4b3dc:	bne	4b2a8 <Mat_Open+0x38>
   4b3e0:	bic	r2, r8, #1
   4b3e4:	mov	r1, #0
   4b3e8:	mov	r0, r9
   4b3ec:	bl	164c <Mat_CreateVer@plt>
   4b3f0:	mov	r4, r0
   4b3f4:	b	4b3b0 <Mat_Open+0x140>
   4b3f8:	mov	r0, r7
   4b3fc:	bl	1634 <fclose@plt>
   4b400:	ldr	r0, [pc, #484]	; 4b5ec <Mat_Open+0x37c>
   4b404:	add	r0, pc, r0
   4b408:	bl	161c <Mat_Critical@plt>
   4b40c:	b	4b3b0 <Mat_Open+0x140>
   4b410:	mov	r0, r4
   4b414:	bl	1478 <free@plt>
   4b418:	mov	r0, r7
   4b41c:	bl	1634 <fclose@plt>
   4b420:	ldr	r0, [pc, #456]	; 4b5f0 <Mat_Open+0x380>
   4b424:	add	r0, pc, r0
   4b428:	bl	161c <Mat_Critical@plt>
   4b42c:	mov	r4, r5
   4b430:	b	4b3b0 <Mat_Open+0x140>
   4b434:	mov	r0, r5
   4b438:	bl	1478 <free@plt>
   4b43c:	mov	r0, r4
   4b440:	bl	1478 <free@plt>
   4b444:	mov	r0, r7
   4b448:	bl	1634 <fclose@plt>
   4b44c:	ldr	r0, [pc, #416]	; 4b5f4 <Mat_Open+0x384>
   4b450:	add	r0, pc, r0
   4b454:	bl	161c <Mat_Critical@plt>
   4b458:	mov	r4, r6
   4b45c:	b	4b3b0 <Mat_Open+0x140>
   4b460:	mvn	r3, #0
   4b464:	str	r3, [r4, #20]
   4b468:	ldrsh	r3, [sp, #6]
   4b46c:	movw	r2, #19785	; 0x4d49
   4b470:	cmp	r3, r2
   4b474:	moveq	r3, #0
   4b478:	streq	r3, [r4, #20]
   4b47c:	beq	4b48c <Mat_Open+0x21c>
   4b480:	movw	r2, #18765	; 0x494d
   4b484:	cmp	r3, r2
   4b488:	beq	4b524 <Mat_Open+0x2b4>
   4b48c:	ldrsh	r3, [sp, #4]
   4b490:	str	r3, [r4, #16]
   4b494:	sub	r3, r3, #256	; 0x100
   4b498:	bic	r3, r3, #256	; 0x100
   4b49c:	uxth	r3, r3
   4b4a0:	cmp	r3, #0
   4b4a4:	bne	4b4b4 <Mat_Open+0x244>
   4b4a8:	ldr	r3, [r4, #20]
   4b4ac:	cmn	r3, #1
   4b4b0:	bne	4b538 <Mat_Open+0x2c8>
   4b4b4:	ldr	r0, [r4, #4]
   4b4b8:	bl	1478 <free@plt>
   4b4bc:	ldr	r0, [r4, #8]
   4b4c0:	bl	1478 <free@plt>
   4b4c4:	mov	r3, #0
   4b4c8:	str	r3, [r4, #4]
   4b4cc:	str	r3, [r4, #8]
   4b4d0:	str	r7, [r4]
   4b4d4:	mov	r2, #16
   4b4d8:	str	r2, [r4, #16]
   4b4dc:	str	r3, [r4, #20]
   4b4e0:	str	r8, [r4, #24]
   4b4e4:	str	r3, [r4, #28]
   4b4e8:	str	r3, [r4, #32]
   4b4ec:	mov	r0, r4
   4b4f0:	bl	15ec <Mat_Rewind@plt>
   4b4f4:	mov	r0, r4
   4b4f8:	bl	49af8 <Mat_VarReadNextInfo4>
   4b4fc:	adds	r5, r5, #0
   4b500:	movne	r5, #1
   4b504:	cmp	r0, #0
   4b508:	movne	r5, #0
   4b50c:	cmp	r5, #0
   4b510:	bne	4b588 <Mat_Open+0x318>
   4b514:	bl	158c <Mat_VarFree@plt>
   4b518:	mov	r0, r4
   4b51c:	bl	15ec <Mat_Rewind@plt>
   4b520:	b	4b38c <Mat_Open+0x11c>
   4b524:	mov	r3, #1
   4b528:	str	r3, [r4, #20]
   4b52c:	add	r0, sp, #4
   4b530:	bl	1904 <Mat_int16Swap>
   4b534:	b	4b48c <Mat_Open+0x21c>
   4b538:	ldr	r0, [r4]
   4b53c:	bl	14b4 <ftell@plt>
   4b540:	str	r0, [r4, #28]
   4b544:	cmn	r0, #1
   4b548:	movne	r3, #0
   4b54c:	strne	r3, [r4, #32]
   4b550:	bne	4b380 <Mat_Open+0x110>
   4b554:	ldr	r0, [r4, #4]
   4b558:	bl	1478 <free@plt>
   4b55c:	ldr	r0, [r4, #8]
   4b560:	bl	1478 <free@plt>
   4b564:	mov	r0, r4
   4b568:	bl	1478 <free@plt>
   4b56c:	mov	r0, r7
   4b570:	bl	1634 <fclose@plt>
   4b574:	ldr	r0, [pc, #124]	; 4b5f8 <Mat_Open+0x388>
   4b578:	add	r0, pc, r0
   4b57c:	bl	161c <Mat_Critical@plt>
   4b580:	mov	r4, #0
   4b584:	b	4b3b0 <Mat_Open+0x140>
   4b588:	mov	r0, r4
   4b58c:	bl	1610 <Mat_Close@plt>
   4b590:	mov	r1, r9
   4b594:	ldr	r0, [pc, #96]	; 4b5fc <Mat_Open+0x38c>
   4b598:	add	r0, pc, r0
   4b59c:	bl	161c <Mat_Critical@plt>
   4b5a0:	mov	r4, #0
   4b5a4:	b	4b3b0 <Mat_Open+0x140>
   4b5a8:	ldr	r0, [r4]
   4b5ac:	bl	1634 <fclose@plt>
   4b5b0:	mov	r5, #0
   4b5b4:	str	r5, [r4]
   4b5b8:	mov	r0, r4
   4b5bc:	bl	1610 <Mat_Close@plt>
   4b5c0:	mov	r1, r9
   4b5c4:	ldr	r0, [pc, #52]	; 4b600 <Mat_Open+0x390>
   4b5c8:	add	r0, pc, r0
   4b5cc:	bl	161c <Mat_Critical@plt>
   4b5d0:	mov	r4, r5
   4b5d4:	b	4b3b0 <Mat_Open+0x140>
   4b5d8:	mov	r4, r7
   4b5dc:	b	4b3b0 <Mat_Open+0x140>
   4b5e0:	.word	0x00004720
   4b5e4:	.word	0x00004860
   4b5e8:	.word	0x00004688
   4b5ec:	.word	0x00004498
   4b5f0:	.word	0x00004638
   4b5f4:	.word	0x00004640
   4b5f8:	.word	0x00003eb0
   4b5fc:	.word	0x00004530
   4b600:	.word	0x0000452c

0004b604 <Mat_VarCreate>:
   4b604:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4b608:	strd	r6, [sp, #8]
   4b60c:	strd	r8, [sp, #16]
   4b610:	strd	sl, [sp, #24]
   4b614:	str	lr, [sp, #32]
   4b618:	sub	sp, sp, #20
   4b61c:	ldr	r9, [sp, #56]	; 0x38
   4b620:	ldr	r6, [sp, #60]	; 0x3c
   4b624:	ldr	r5, [sp, #64]	; 0x40
   4b628:	mov	ip, #1
   4b62c:	str	ip, [sp, #12]
   4b630:	cmp	r9, #0
   4b634:	moveq	r4, r9
   4b638:	beq	4b894 <Mat_VarCreate+0x290>
   4b63c:	mov	sl, r3
   4b640:	mov	r7, r2
   4b644:	mov	r8, r1
   4b648:	mov	fp, r0
   4b64c:	bl	1508 <Mat_VarCalloc@plt>
   4b650:	subs	r4, r0, #0
   4b654:	beq	4b894 <Mat_VarCreate+0x290>
   4b658:	mov	r3, #0
   4b65c:	str	r3, [r4, #48]	; 0x30
   4b660:	and	r3, r5, #2048	; 0x800
   4b664:	str	r3, [r4, #20]
   4b668:	and	r3, r5, #1024	; 0x400
   4b66c:	str	r3, [r4, #24]
   4b670:	and	r3, r5, #512	; 0x200
   4b674:	str	r3, [r4, #28]
   4b678:	cmp	fp, #0
   4b67c:	beq	4b694 <Mat_VarCreate+0x90>
   4b680:	mov	r1, fp
   4b684:	ldr	r0, [pc, #1200]	; 4bb3c <Mat_VarCreate+0x538>
   4b688:	add	r0, pc, r0
   4b68c:	bl	1cf0 <strdup_printf>
   4b690:	str	r0, [r4, #36]	; 0x24
   4b694:	str	sl, [r4, #4]
   4b698:	lsl	r0, sl, #2
   4b69c:	bl	1544 <malloc@plt>
   4b6a0:	str	r0, [r4, #32]
   4b6a4:	cmp	sl, #0
   4b6a8:	ble	4b6dc <Mat_VarCreate+0xd8>
   4b6ac:	sub	r2, r9, #4
   4b6b0:	mov	r0, #0
   4b6b4:	ldr	r3, [r2, #4]!
   4b6b8:	ldr	r1, [r4, #32]
   4b6bc:	str	r3, [r1, r0, lsl #2]
   4b6c0:	ldr	r1, [sp, #12]
   4b6c4:	mul	r3, r3, r1
   4b6c8:	str	r3, [sp, #12]
   4b6cc:	add	r0, r0, #1
   4b6d0:	ldr	r3, [r4, #4]
   4b6d4:	cmp	r3, r0
   4b6d8:	bgt	4b6b4 <Mat_VarCreate+0xb0>
   4b6dc:	str	r8, [r4, #16]
   4b6e0:	str	r7, [r4, #8]
   4b6e4:	sub	r7, r7, #1
   4b6e8:	cmp	r7, #21
   4b6ec:	addls	pc, pc, r7, lsl #2
   4b6f0:	b	4b838 <Mat_VarCreate+0x234>
   4b6f4:	b	4b854 <Mat_VarCreate+0x250>
   4b6f8:	b	4b854 <Mat_VarCreate+0x250>
   4b6fc:	b	4b74c <Mat_VarCreate+0x148>
   4b700:	b	4b74c <Mat_VarCreate+0x148>
   4b704:	b	4b754 <Mat_VarCreate+0x150>
   4b708:	b	4b75c <Mat_VarCreate+0x158>
   4b70c:	b	4b764 <Mat_VarCreate+0x160>
   4b710:	b	4b838 <Mat_VarCreate+0x234>
   4b714:	b	4b85c <Mat_VarCreate+0x258>
   4b718:	b	4b838 <Mat_VarCreate+0x234>
   4b71c:	b	4b838 <Mat_VarCreate+0x234>
   4b720:	b	4b85c <Mat_VarCreate+0x258>
   4b724:	b	4b85c <Mat_VarCreate+0x258>
   4b728:	b	4b838 <Mat_VarCreate+0x234>
   4b72c:	b	4b838 <Mat_VarCreate+0x234>
   4b730:	b	4b854 <Mat_VarCreate+0x250>
   4b734:	b	4b74c <Mat_VarCreate+0x148>
   4b738:	b	4b76c <Mat_VarCreate+0x168>
   4b73c:	b	4b838 <Mat_VarCreate+0x234>
   4b740:	b	4b838 <Mat_VarCreate+0x234>
   4b744:	b	4b774 <Mat_VarCreate+0x170>
   4b748:	b	4b77c <Mat_VarCreate+0x178>
   4b74c:	mov	r7, #2
   4b750:	b	4b860 <Mat_VarCreate+0x25c>
   4b754:	mov	r7, #4
   4b758:	b	4b860 <Mat_VarCreate+0x25c>
   4b75c:	mov	r7, #4
   4b760:	b	4b860 <Mat_VarCreate+0x25c>
   4b764:	mov	r7, #4
   4b768:	b	4b860 <Mat_VarCreate+0x25c>
   4b76c:	mov	r7, #4
   4b770:	b	4b860 <Mat_VarCreate+0x25c>
   4b774:	mov	r7, #4
   4b778:	b	4b860 <Mat_VarCreate+0x25c>
   4b77c:	cmp	r6, #0
   4b780:	beq	4baf4 <Mat_VarCreate+0x4f0>
   4b784:	ldr	r3, [r6]
   4b788:	cmp	r3, #0
   4b78c:	beq	4bad4 <Mat_VarCreate+0x4d0>
   4b790:	mov	r3, r6
   4b794:	mov	r7, #0
   4b798:	add	r7, r7, #1
   4b79c:	ldr	r2, [r3, #4]!
   4b7a0:	cmp	r2, #0
   4b7a4:	bne	4b798 <Mat_VarCreate+0x194>
   4b7a8:	ldr	r3, [sp, #12]
   4b7ac:	cmp	r3, #0
   4b7b0:	beq	4b7b8 <Mat_VarCreate+0x1b4>
   4b7b4:	udiv	r7, r7, r3
   4b7b8:	ldr	r3, [r4, #52]	; 0x34
   4b7bc:	str	r7, [r3, #4]
   4b7c0:	cmp	r7, #0
   4b7c4:	moveq	r7, #4
   4b7c8:	beq	4b860 <Mat_VarCreate+0x25c>
   4b7cc:	ldr	r8, [r4, #52]	; 0x34
   4b7d0:	mov	r1, #4
   4b7d4:	mov	r0, r7
   4b7d8:	bl	140c <calloc@plt>
   4b7dc:	str	r0, [r8, #8]
   4b7e0:	sub	r8, r6, #4
   4b7e4:	add	fp, r8, r7, lsl #2
   4b7e8:	rsb	r3, r6, #4
   4b7ec:	str	r3, [sp, #4]
   4b7f0:	ldr	r3, [sp, #4]
   4b7f4:	add	r9, r3, r8
   4b7f8:	ldr	r3, [r4, #52]	; 0x34
   4b7fc:	ldr	sl, [r3, #8]
   4b800:	ldr	r3, [r8, #4]!
   4b804:	ldr	r0, [r3, #36]	; 0x24
   4b808:	bl	14cc <strdup@plt>
   4b80c:	str	r0, [sl, r9]
   4b810:	cmp	r8, fp
   4b814:	bne	4b7f0 <Mat_VarCreate+0x1ec>
   4b818:	mov	r2, r7
   4b81c:	ldr	r1, [sp, #12]
   4b820:	add	r0, sp, #12
   4b824:	bl	4a440 <SafeMul>
   4b828:	mov	r7, #4
   4b82c:	b	4b860 <Mat_VarCreate+0x25c>
   4b830:	mov	r7, #0
   4b834:	b	4b7b4 <Mat_VarCreate+0x1b0>
   4b838:	mov	r0, r4
   4b83c:	bl	158c <Mat_VarFree@plt>
   4b840:	ldr	r0, [pc, #760]	; 4bb40 <Mat_VarCreate+0x53c>
   4b844:	add	r0, pc, r0
   4b848:	bl	161c <Mat_Critical@plt>
   4b84c:	mov	r4, #0
   4b850:	b	4b894 <Mat_VarCreate+0x290>
   4b854:	mov	r7, #1
   4b858:	b	4b860 <Mat_VarCreate+0x25c>
   4b85c:	mov	r7, #8
   4b860:	ldr	r3, [r4, #16]
   4b864:	cmp	r3, #5
   4b868:	bne	4b8b4 <Mat_VarCreate+0x2b0>
   4b86c:	mov	r3, #28
   4b870:	str	r3, [r4, #12]
   4b874:	str	r3, [r4]
   4b878:	cmp	r6, #0
   4b87c:	beq	4bb30 <Mat_VarCreate+0x52c>
   4b880:	tst	r5, #1
   4b884:	beq	4b918 <Mat_VarCreate+0x314>
   4b888:	str	r6, [r4, #40]	; 0x28
   4b88c:	mov	r3, #1
   4b890:	str	r3, [r4, #44]	; 0x2c
   4b894:	mov	r0, r4
   4b898:	add	sp, sp, #20
   4b89c:	ldrd	r4, [sp]
   4b8a0:	ldrd	r6, [sp, #8]
   4b8a4:	ldrd	r8, [sp, #16]
   4b8a8:	ldrd	sl, [sp, #24]
   4b8ac:	add	sp, sp, #32
   4b8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   4b8b4:	str	r7, [r4, #12]
   4b8b8:	mov	r2, r7
   4b8bc:	ldr	r1, [sp, #12]
   4b8c0:	mov	r0, r4
   4b8c4:	bl	4a440 <SafeMul>
   4b8c8:	cmp	r6, #0
   4b8cc:	beq	4bb18 <Mat_VarCreate+0x514>
   4b8d0:	tst	r5, #1
   4b8d4:	bne	4b888 <Mat_VarCreate+0x284>
   4b8d8:	ldr	r3, [r4, #16]
   4b8dc:	cmp	r3, #5
   4b8e0:	beq	4b918 <Mat_VarCreate+0x314>
   4b8e4:	ldr	r3, [r4, #20]
   4b8e8:	cmp	r3, #0
   4b8ec:	bne	4ba3c <Mat_VarCreate+0x438>
   4b8f0:	ldr	r5, [r4]
   4b8f4:	cmp	r5, #0
   4b8f8:	bne	4bab0 <Mat_VarCreate+0x4ac>
   4b8fc:	mov	r3, #0
   4b900:	str	r3, [r4, #44]	; 0x2c
   4b904:	b	4b894 <Mat_VarCreate+0x290>
   4b908:	mov	r1, #4
   4b90c:	bl	140c <calloc@plt>
   4b910:	str	r0, [r4, #40]	; 0x28
   4b914:	b	4b894 <Mat_VarCreate+0x290>
   4b918:	mov	r0, #28
   4b91c:	bl	1544 <malloc@plt>
   4b920:	subs	r5, r0, #0
   4b924:	beq	4ba34 <Mat_VarCreate+0x430>
   4b928:	ldr	r3, [r6]
   4b92c:	str	r3, [r5]
   4b930:	ldr	r3, [r6, #8]
   4b934:	str	r3, [r5, #8]
   4b938:	ldr	r8, [r6, #16]
   4b93c:	str	r8, [r5, #16]
   4b940:	ldr	r9, [r6, #20]
   4b944:	str	r9, [r5, #20]
   4b948:	lsl	sl, r3, #2
   4b94c:	mov	r0, sl
   4b950:	bl	1544 <malloc@plt>
   4b954:	str	r0, [r5, #4]
   4b958:	cmp	r0, #0
   4b95c:	beq	4b96c <Mat_VarCreate+0x368>
   4b960:	mov	r2, sl
   4b964:	ldr	r1, [r6, #4]
   4b968:	bl	1490 <memcpy@plt>
   4b96c:	lsl	r8, r8, #2
   4b970:	mov	r0, r8
   4b974:	bl	1544 <malloc@plt>
   4b978:	str	r0, [r5, #12]
   4b97c:	cmp	r0, #0
   4b980:	beq	4b990 <Mat_VarCreate+0x38c>
   4b984:	mov	r2, r8
   4b988:	ldr	r1, [r6, #12]
   4b98c:	bl	1490 <memcpy@plt>
   4b990:	ldr	r3, [r4, #20]
   4b994:	cmp	r3, #0
   4b998:	beq	4ba10 <Mat_VarCreate+0x40c>
   4b99c:	mov	r0, #8
   4b9a0:	bl	1544 <malloc@plt>
   4b9a4:	mov	r8, r0
   4b9a8:	str	r0, [r5, #24]
   4b9ac:	cmp	r0, #0
   4b9b0:	beq	4ba34 <Mat_VarCreate+0x430>
   4b9b4:	ldr	sl, [r6, #24]
   4b9b8:	mul	r7, r7, r9
   4b9bc:	mov	r0, r7
   4b9c0:	bl	1544 <malloc@plt>
   4b9c4:	mov	r9, r0
   4b9c8:	str	r0, [r8]
   4b9cc:	mov	r0, r7
   4b9d0:	bl	1544 <malloc@plt>
   4b9d4:	mov	r6, r0
   4b9d8:	str	r0, [r8, #4]
   4b9dc:	cmp	r9, #0
   4b9e0:	beq	4b9f4 <Mat_VarCreate+0x3f0>
   4b9e4:	mov	r2, r7
   4b9e8:	ldr	r1, [sl]
   4b9ec:	mov	r0, r9
   4b9f0:	bl	1490 <memcpy@plt>
   4b9f4:	cmp	r6, #0
   4b9f8:	beq	4ba34 <Mat_VarCreate+0x430>
   4b9fc:	mov	r2, r7
   4ba00:	ldr	r1, [sl, #4]
   4ba04:	mov	r0, r6
   4ba08:	bl	1490 <memcpy@plt>
   4ba0c:	b	4ba34 <Mat_VarCreate+0x430>
   4ba10:	mul	r7, r7, r9
   4ba14:	mov	r0, r7
   4ba18:	bl	1544 <malloc@plt>
   4ba1c:	str	r0, [r5, #24]
   4ba20:	cmp	r0, #0
   4ba24:	beq	4ba34 <Mat_VarCreate+0x430>
   4ba28:	mov	r2, r7
   4ba2c:	ldr	r1, [r6, #24]
   4ba30:	bl	1490 <memcpy@plt>
   4ba34:	str	r5, [r4, #40]	; 0x28
   4ba38:	b	4b894 <Mat_VarCreate+0x290>
   4ba3c:	mov	r0, #8
   4ba40:	bl	1544 <malloc@plt>
   4ba44:	mov	r5, r0
   4ba48:	str	r0, [r4, #40]	; 0x28
   4ba4c:	cmp	r0, #0
   4ba50:	beq	4b8fc <Mat_VarCreate+0x2f8>
   4ba54:	ldr	r0, [r4]
   4ba58:	cmp	r0, #0
   4ba5c:	beq	4b8fc <Mat_VarCreate+0x2f8>
   4ba60:	bl	1544 <malloc@plt>
   4ba64:	mov	r8, r0
   4ba68:	str	r0, [r5]
   4ba6c:	ldr	r0, [r4]
   4ba70:	bl	1544 <malloc@plt>
   4ba74:	mov	r7, r0
   4ba78:	str	r0, [r5, #4]
   4ba7c:	cmp	r8, #0
   4ba80:	beq	4ba94 <Mat_VarCreate+0x490>
   4ba84:	ldr	r2, [r4]
   4ba88:	ldr	r1, [r6]
   4ba8c:	mov	r0, r8
   4ba90:	bl	1490 <memcpy@plt>
   4ba94:	cmp	r7, #0
   4ba98:	beq	4b8fc <Mat_VarCreate+0x2f8>
   4ba9c:	ldr	r2, [r4]
   4baa0:	ldr	r1, [r6, #4]
   4baa4:	mov	r0, r7
   4baa8:	bl	1490 <memcpy@plt>
   4baac:	b	4b8fc <Mat_VarCreate+0x2f8>
   4bab0:	mov	r0, r5
   4bab4:	bl	1544 <malloc@plt>
   4bab8:	str	r0, [r4, #40]	; 0x28
   4babc:	cmp	r0, #0
   4bac0:	beq	4b8fc <Mat_VarCreate+0x2f8>
   4bac4:	mov	r2, r5
   4bac8:	mov	r1, r6
   4bacc:	bl	1490 <memcpy@plt>
   4bad0:	b	4b8fc <Mat_VarCreate+0x2f8>
   4bad4:	ldr	r3, [sp, #12]
   4bad8:	cmp	r3, #0
   4badc:	bne	4b830 <Mat_VarCreate+0x22c>
   4bae0:	ldr	r3, [r4, #52]	; 0x34
   4bae4:	mov	r2, #0
   4bae8:	str	r2, [r3, #4]
   4baec:	mov	r7, #4
   4baf0:	b	4b860 <Mat_VarCreate+0x25c>
   4baf4:	ldr	r3, [r4, #16]
   4baf8:	cmp	r3, #5
   4bafc:	moveq	r7, #4
   4bb00:	beq	4b86c <Mat_VarCreate+0x268>
   4bb04:	mov	r2, #4
   4bb08:	str	r2, [r4, #12]
   4bb0c:	ldr	r1, [sp, #12]
   4bb10:	mov	r0, r4
   4bb14:	bl	4a440 <SafeMul>
   4bb18:	ldr	r3, [r4, #16]
   4bb1c:	cmp	r3, #1
   4bb20:	bne	4bb30 <Mat_VarCreate+0x52c>
   4bb24:	ldr	r0, [sp, #12]
   4bb28:	cmp	r0, #0
   4bb2c:	bne	4b908 <Mat_VarCreate+0x304>
   4bb30:	mov	r3, #0
   4bb34:	str	r3, [r4, #40]	; 0x28
   4bb38:	b	4b894 <Mat_VarCreate+0x290>
   4bb3c:	.word	0x0000456c
   4bb40:	.word	0x000042f4

0004bb44 <Mat_CalcSingleSubscript>:
   4bb44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4bb48:	strd	r6, [sp, #8]
   4bb4c:	str	r8, [sp, #16]
   4bb50:	str	lr, [sp, #20]
   4bb54:	subs	r6, r0, #0
   4bb58:	ble	4bc10 <Mat_CalcSingleSubscript+0xcc>
   4bb5c:	ldr	ip, [r2]
   4bb60:	ldr	r3, [r1]
   4bb64:	cmp	ip, r3
   4bb68:	bgt	4bb8c <Mat_CalcSingleSubscript+0x48>
   4bb6c:	cmp	ip, #0
   4bb70:	subgt	ip, ip, #1
   4bb74:	movgt	r4, r1
   4bb78:	movgt	r5, #0
   4bb7c:	movgt	r0, r5
   4bb80:	bgt	4bbcc <Mat_CalcSingleSubscript+0x88>
   4bb84:	mvn	r0, #0
   4bb88:	b	4bb9c <Mat_CalcSingleSubscript+0x58>
   4bb8c:	ldr	r0, [pc, #132]	; 4bc18 <Mat_CalcSingleSubscript+0xd4>
   4bb90:	add	r0, pc, r0
   4bb94:	bl	161c <Mat_Critical@plt>
   4bb98:	mvn	r0, #0
   4bb9c:	ldrd	r4, [sp]
   4bba0:	ldrd	r6, [sp, #8]
   4bba4:	ldr	r8, [sp, #16]
   4bba8:	add	sp, sp, #20
   4bbac:	pop	{pc}		; (ldr pc, [sp], #4)
   4bbb0:	mov	r1, r3
   4bbb4:	mov	r3, r1
   4bbb8:	ldr	lr, [r3], #-4
   4bbbc:	mul	ip, lr, ip
   4bbc0:	cmp	r4, r1
   4bbc4:	bne	4bbb0 <Mat_CalcSingleSubscript+0x6c>
   4bbc8:	mov	r1, r7
   4bbcc:	add	r0, r0, ip
   4bbd0:	add	r5, r5, #1
   4bbd4:	cmp	r6, r5
   4bbd8:	beq	4bb9c <Mat_CalcSingleSubscript+0x58>
   4bbdc:	ldr	ip, [r2, #4]!
   4bbe0:	add	r7, r1, #4
   4bbe4:	ldr	r3, [r1, #4]
   4bbe8:	cmp	r3, ip
   4bbec:	blt	4bb8c <Mat_CalcSingleSubscript+0x48>
   4bbf0:	cmp	ip, #0
   4bbf4:	ble	4bc08 <Mat_CalcSingleSubscript+0xc4>
   4bbf8:	sub	ip, ip, #1
   4bbfc:	cmp	r5, #0
   4bc00:	bne	4bbb4 <Mat_CalcSingleSubscript+0x70>
   4bc04:	b	4bbc8 <Mat_CalcSingleSubscript+0x84>
   4bc08:	mvn	r0, #0
   4bc0c:	b	4bb9c <Mat_CalcSingleSubscript+0x58>
   4bc10:	mov	r0, #0
   4bc14:	b	4bb9c <Mat_CalcSingleSubscript+0x58>
   4bc18:	.word	0x00003fc0

0004bc1c <Mat_CalcSingleSubscript2>:
   4bc1c:	cmp	r0, #0
   4bc20:	ble	4bcec <Mat_CalcSingleSubscript2+0xd0>
   4bc24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4bc28:	strd	r6, [sp, #8]
   4bc2c:	str	r8, [sp, #16]
   4bc30:	str	lr, [sp, #20]
   4bc34:	ldr	lr, [r2]
   4bc38:	ldr	ip, [r1]
   4bc3c:	cmp	lr, ip
   4bc40:	bhi	4bc60 <Mat_CalcSingleSubscript2+0x44>
   4bc44:	cmp	lr, #0
   4bc48:	subne	lr, lr, #1
   4bc4c:	movne	r5, r1
   4bc50:	movne	r6, #0
   4bc54:	bne	4bca0 <Mat_CalcSingleSubscript2+0x84>
   4bc58:	mov	r0, #1
   4bc5c:	b	4bc70 <Mat_CalcSingleSubscript2+0x54>
   4bc60:	ldr	r0, [pc, #148]	; 4bcfc <Mat_CalcSingleSubscript2+0xe0>
   4bc64:	add	r0, pc, r0
   4bc68:	bl	161c <Mat_Critical@plt>
   4bc6c:	mov	r0, #1
   4bc70:	ldrd	r4, [sp]
   4bc74:	ldrd	r6, [sp, #8]
   4bc78:	ldr	r8, [sp, #16]
   4bc7c:	add	sp, sp, #20
   4bc80:	pop	{pc}		; (ldr pc, [sp], #4)
   4bc84:	mov	r1, ip
   4bc88:	mov	ip, r1
   4bc8c:	ldr	r4, [ip], #-4
   4bc90:	mul	lr, r4, lr
   4bc94:	cmp	r1, r5
   4bc98:	bne	4bc84 <Mat_CalcSingleSubscript2+0x68>
   4bc9c:	mov	r1, r7
   4bca0:	ldr	ip, [r3]
   4bca4:	add	lr, ip, lr
   4bca8:	str	lr, [r3]
   4bcac:	add	r6, r6, #1
   4bcb0:	cmp	r0, r6
   4bcb4:	beq	4bce4 <Mat_CalcSingleSubscript2+0xc8>
   4bcb8:	ldr	lr, [r2, #4]!
   4bcbc:	add	r7, r1, #4
   4bcc0:	ldr	ip, [r1, #4]
   4bcc4:	cmp	ip, lr
   4bcc8:	bcc	4bc60 <Mat_CalcSingleSubscript2+0x44>
   4bccc:	cmp	lr, #0
   4bcd0:	beq	4bcf4 <Mat_CalcSingleSubscript2+0xd8>
   4bcd4:	sub	lr, lr, #1
   4bcd8:	cmp	r6, #0
   4bcdc:	bne	4bc88 <Mat_CalcSingleSubscript2+0x6c>
   4bce0:	b	4bc9c <Mat_CalcSingleSubscript2+0x80>
   4bce4:	mov	r0, #0
   4bce8:	b	4bc70 <Mat_CalcSingleSubscript2+0x54>
   4bcec:	mov	r0, #0
   4bcf0:	bx	lr
   4bcf4:	mov	r0, #1
   4bcf8:	b	4bc70 <Mat_CalcSingleSubscript2+0x54>
   4bcfc:	.word	0x00003f1c

0004bd00 <Mat_CalcSubscripts>:
   4bd00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4bd04:	strd	r6, [sp, #8]
   4bd08:	str	r8, [sp, #16]
   4bd0c:	str	lr, [sp, #20]
   4bd10:	vpush	{d8}
   4bd14:	mov	r6, r0
   4bd18:	mov	r5, r1
   4bd1c:	vmov	s16, r2
   4bd20:	lsl	r4, r0, #2
   4bd24:	mov	r0, r4
   4bd28:	bl	1544 <malloc@plt>
   4bd2c:	mov	r8, r0
   4bd30:	cmp	r6, #0
   4bd34:	beq	4bdb8 <Mat_CalcSubscripts+0xb8>
   4bd38:	vcvt.f64.s32	d8, s16
   4bd3c:	add	r7, r0, r4
   4bd40:	sub	r4, r4, #4
   4bd44:	add	r6, r5, r4
   4bd48:	cmp	r6, r5
   4bd4c:	beq	4bda0 <Mat_CalcSubscripts+0xa0>
   4bd50:	mov	r3, r6
   4bd54:	mov	r4, #1
   4bd58:	ldr	r2, [r3, #-4]!
   4bd5c:	mul	r4, r2, r4
   4bd60:	cmp	r3, r5
   4bd64:	bne	4bd58 <Mat_CalcSubscripts+0x58>
   4bd68:	vmov	s15, r4
   4bd6c:	vcvt.f64.s32	d0, s15
   4bd70:	vdiv.f64	d0, d8, d0
   4bd74:	bl	152c <floor@plt>
   4bd78:	vcvt.s32.f64	s15, d0
   4bd7c:	vmov	r3, s15
   4bd80:	mul	r4, r4, r3
   4bd84:	vmov	s15, r4
   4bd88:	vcvt.f64.s32	d7, s15
   4bd8c:	vsub.f64	d8, d8, d7
   4bd90:	add	r3, r3, #1
   4bd94:	str	r3, [r7, #-4]!
   4bd98:	sub	r6, r6, #4
   4bd9c:	b	4bd48 <Mat_CalcSubscripts+0x48>
   4bda0:	vmov.f64	d0, d8
   4bda4:	bl	152c <floor@plt>
   4bda8:	vcvt.s32.f64	s0, d0
   4bdac:	vmov	r3, s0
   4bdb0:	add	r3, r3, #1
   4bdb4:	str	r3, [r8]
   4bdb8:	mov	r0, r8
   4bdbc:	vpop	{d8}
   4bdc0:	ldrd	r4, [sp]
   4bdc4:	ldrd	r6, [sp, #8]
   4bdc8:	ldr	r8, [sp, #16]
   4bdcc:	add	sp, sp, #20
   4bdd0:	pop	{pc}		; (ldr pc, [sp], #4)

0004bdd4 <Mat_CalcSubscripts2>:
   4bdd4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4bdd8:	strd	r6, [sp, #8]
   4bddc:	str	r8, [sp, #16]
   4bde0:	str	lr, [sp, #20]
   4bde4:	vpush	{d8}
   4bde8:	mov	r6, r0
   4bdec:	mov	r5, r1
   4bdf0:	vmov	s16, r2
   4bdf4:	lsl	r4, r0, #2
   4bdf8:	mov	r0, r4
   4bdfc:	bl	1544 <malloc@plt>
   4be00:	mov	r8, r0
   4be04:	cmp	r6, #0
   4be08:	beq	4be8c <Mat_CalcSubscripts2+0xb8>
   4be0c:	vcvt.f64.u32	d8, s16
   4be10:	add	r7, r0, r4
   4be14:	sub	r4, r4, #4
   4be18:	add	r6, r5, r4
   4be1c:	cmp	r5, r6
   4be20:	beq	4be74 <Mat_CalcSubscripts2+0xa0>
   4be24:	mov	r3, r6
   4be28:	mov	r4, #1
   4be2c:	ldr	r2, [r3, #-4]!
   4be30:	mul	r4, r2, r4
   4be34:	cmp	r5, r3
   4be38:	bne	4be2c <Mat_CalcSubscripts2+0x58>
   4be3c:	vmov	s15, r4
   4be40:	vcvt.f64.u32	d0, s15
   4be44:	vdiv.f64	d0, d8, d0
   4be48:	bl	152c <floor@plt>
   4be4c:	vcvt.u32.f64	s15, d0
   4be50:	vmov	r3, s15
   4be54:	mul	r4, r3, r4
   4be58:	vmov	s15, r4
   4be5c:	vcvt.f64.u32	d7, s15
   4be60:	vsub.f64	d8, d8, d7
   4be64:	add	r3, r3, #1
   4be68:	str	r3, [r7, #-4]!
   4be6c:	sub	r6, r6, #4
   4be70:	b	4be1c <Mat_CalcSubscripts2+0x48>
   4be74:	vmov.f64	d0, d8
   4be78:	bl	152c <floor@plt>
   4be7c:	vcvt.u32.f64	s0, d0
   4be80:	vmov	r3, s0
   4be84:	add	r3, r3, #1
   4be88:	str	r3, [r8]
   4be8c:	mov	r0, r8
   4be90:	vpop	{d8}
   4be94:	ldrd	r4, [sp]
   4be98:	ldrd	r6, [sp, #8]
   4be9c:	ldr	r8, [sp, #16]
   4bea0:	add	sp, sp, #20
   4bea4:	pop	{pc}		; (ldr pc, [sp], #4)

0004bea8 <Mat_VarGetSize>:
   4bea8:	strd	r4, [sp, #-16]!
   4beac:	str	r6, [sp, #8]
   4beb0:	str	lr, [sp, #12]
   4beb4:	sub	sp, sp, #8
   4beb8:	mov	r4, r0
   4bebc:	mov	r3, #0
   4bec0:	str	r3, [sp, #4]
   4bec4:	ldr	r0, [r0, #16]
   4bec8:	cmp	r0, #2
   4becc:	beq	4bf1c <Mat_VarGetSize+0x74>
   4bed0:	cmp	r0, #1
   4bed4:	beq	4bfdc <Mat_VarGetSize+0x134>
   4bed8:	cmp	r0, #5
   4bedc:	beq	4c058 <Mat_VarGetSize+0x1b0>
   4bee0:	ldr	r3, [r4, #4]
   4bee4:	cmp	r3, #0
   4bee8:	ble	4bfc4 <Mat_VarGetSize+0x11c>
   4beec:	bl	167c <Mat_SizeOfClass@plt>
   4bef0:	str	r0, [sp, #4]
   4bef4:	add	r1, sp, #4
   4bef8:	mov	r0, r4
   4befc:	bl	4a3c8 <SafeMulDims>
   4bf00:	ldr	r3, [r4, #20]
   4bf04:	cmp	r3, #0
   4bf08:	beq	4bfc4 <Mat_VarGetSize+0x11c>
   4bf0c:	ldr	r3, [sp, #4]
   4bf10:	lsl	r3, r3, #1
   4bf14:	str	r3, [sp, #4]
   4bf18:	b	4bfc4 <Mat_VarGetSize+0x11c>
   4bf1c:	ldr	r5, [r4, #40]	; 0x28
   4bf20:	cmp	r5, r3
   4bf24:	beq	4bfb0 <Mat_VarGetSize+0x108>
   4bf28:	ldr	r3, [r4, #52]	; 0x34
   4bf2c:	ldr	r3, [r3, #4]
   4bf30:	str	r3, [sp]
   4bf34:	mov	r1, sp
   4bf38:	mov	r0, r4
   4bf3c:	bl	4a3c8 <SafeMulDims>
   4bf40:	mov	r2, #60	; 0x3c
   4bf44:	ldr	r1, [sp]
   4bf48:	add	r0, sp, #4
   4bf4c:	bl	4a440 <SafeMul>
   4bf50:	ldr	r3, [sp]
   4bf54:	cmp	r3, #0
   4bf58:	beq	4bfb0 <Mat_VarGetSize+0x108>
   4bf5c:	sub	r5, r5, #4
   4bf60:	mov	r6, #0
   4bf64:	b	4bf88 <Mat_VarGetSize+0xe0>
   4bf68:	bl	4bea8 <Mat_VarGetSize>
   4bf6c:	ldr	r3, [sp, #4]
   4bf70:	add	r0, r3, r0
   4bf74:	str	r0, [sp, #4]
   4bf78:	add	r6, r6, #1
   4bf7c:	ldr	r3, [sp]
   4bf80:	cmp	r3, r6
   4bf84:	bls	4bfb0 <Mat_VarGetSize+0x108>
   4bf88:	ldr	r0, [r5, #4]!
   4bf8c:	cmp	r0, #0
   4bf90:	beq	4bf78 <Mat_VarGetSize+0xd0>
   4bf94:	ldr	r3, [r0, #16]
   4bf98:	cmp	r3, #0
   4bf9c:	bne	4bf68 <Mat_VarGetSize+0xc0>
   4bfa0:	ldr	r3, [sp, #4]
   4bfa4:	sub	r3, r3, #56	; 0x38
   4bfa8:	str	r3, [sp, #4]
   4bfac:	b	4bf78 <Mat_VarGetSize+0xd0>
   4bfb0:	ldr	r3, [r4, #52]	; 0x34
   4bfb4:	ldr	r2, [r3, #4]
   4bfb8:	ldr	r3, [sp, #4]
   4bfbc:	add	r3, r3, r2, lsl #6
   4bfc0:	str	r3, [sp, #4]
   4bfc4:	ldr	r0, [sp, #4]
   4bfc8:	add	sp, sp, #8
   4bfcc:	ldrd	r4, [sp]
   4bfd0:	ldr	r6, [sp, #8]
   4bfd4:	add	sp, sp, #12
   4bfd8:	pop	{pc}		; (ldr pc, [sp], #4)
   4bfdc:	ldr	r2, [r4, #40]	; 0x28
   4bfe0:	cmp	r2, #0
   4bfe4:	beq	4bfc4 <Mat_VarGetSize+0x11c>
   4bfe8:	ldr	r0, [r4]
   4bfec:	ldr	r1, [r4, #12]
   4bff0:	udiv	r6, r0, r1
   4bff4:	rsb	r3, r6, r6, lsl #4
   4bff8:	lsl	r3, r3, #2
   4bffc:	str	r3, [sp, #4]
   4c000:	cmp	r0, r1
   4c004:	bcc	4bfc4 <Mat_VarGetSize+0x11c>
   4c008:	sub	r4, r2, #4
   4c00c:	mov	r5, #0
   4c010:	b	4c030 <Mat_VarGetSize+0x188>
   4c014:	bl	4bea8 <Mat_VarGetSize>
   4c018:	ldr	r3, [sp, #4]
   4c01c:	add	r0, r3, r0
   4c020:	str	r0, [sp, #4]
   4c024:	add	r5, r5, #1
   4c028:	cmp	r6, r5
   4c02c:	bls	4bfc4 <Mat_VarGetSize+0x11c>
   4c030:	ldr	r0, [r4, #4]!
   4c034:	cmp	r0, #0
   4c038:	beq	4c024 <Mat_VarGetSize+0x17c>
   4c03c:	ldr	r3, [r0, #16]
   4c040:	cmp	r3, #0
   4c044:	bne	4c014 <Mat_VarGetSize+0x16c>
   4c048:	ldr	r3, [sp, #4]
   4c04c:	sub	r3, r3, #56	; 0x38
   4c050:	str	r3, [sp, #4]
   4c054:	b	4c024 <Mat_VarGetSize+0x17c>
   4c058:	ldr	r5, [r4, #40]	; 0x28
   4c05c:	cmp	r5, #0
   4c060:	beq	4bfc4 <Mat_VarGetSize+0x11c>
   4c064:	ldr	r6, [r5, #20]
   4c068:	ldr	r0, [r4, #8]
   4c06c:	bl	1598 <Mat_SizeOf@plt>
   4c070:	mul	r0, r0, r6
   4c074:	str	r0, [sp, #4]
   4c078:	ldr	r3, [r4, #20]
   4c07c:	cmp	r3, #0
   4c080:	lslne	r0, r0, #1
   4c084:	strne	r0, [sp, #4]
   4c088:	ldr	r3, [r5, #8]
   4c08c:	ldr	r1, [r5, #16]
   4c090:	add	r0, r3, r1
   4c094:	ldr	r2, [sp, #4]
   4c098:	add	r2, r2, r0, lsl #2
   4c09c:	str	r2, [sp, #4]
   4c0a0:	ldr	r0, [r5, #20]
   4c0a4:	clz	r3, r3
   4c0a8:	lsr	r3, r3, #5
   4c0ac:	cmp	r0, #0
   4c0b0:	moveq	r3, #1
   4c0b4:	cmp	r1, #0
   4c0b8:	moveq	r3, #1
   4c0bc:	cmp	r3, #0
   4c0c0:	beq	4bfc4 <Mat_VarGetSize+0x11c>
   4c0c4:	ldr	r3, [r4, #28]
   4c0c8:	cmp	r3, #0
   4c0cc:	movne	r3, #1
   4c0d0:	moveq	r3, #8
   4c0d4:	add	r2, r2, r3
   4c0d8:	str	r2, [sp, #4]
   4c0dc:	b	4bfc4 <Mat_VarGetSize+0x11c>

0004c0e0 <Mat_VarPrint>:
   4c0e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4c0e4:	strd	r6, [sp, #8]
   4c0e8:	strd	r8, [sp, #16]
   4c0ec:	strd	sl, [sp, #24]
   4c0f0:	str	lr, [sp, #32]
   4c0f4:	sub	sp, sp, #204	; 0xcc
   4c0f8:	mov	r4, r0
   4c0fc:	mov	r7, r1
   4c100:	mov	r3, #0
   4c104:	str	r3, [sp, #196]	; 0xc4
   4c108:	mov	r2, #72	; 0x48
   4c10c:	ldr	r1, [pc, #2312]	; 4ca1c <Mat_VarPrint+0x93c>
   4c110:	add	r1, pc, r1
   4c114:	add	r0, sp, #124	; 0x7c
   4c118:	bl	1490 <memcpy@plt>
   4c11c:	cmp	r4, #0
   4c120:	beq	4c248 <Mat_VarPrint+0x168>
   4c124:	ldr	r1, [r4, #36]	; 0x24
   4c128:	cmp	r1, #0
   4c12c:	beq	4c13c <Mat_VarPrint+0x5c>
   4c130:	ldr	r0, [pc, #2280]	; 4ca20 <Mat_VarPrint+0x940>
   4c134:	add	r0, pc, r0
   4c138:	bl	1448 <printf@plt>
   4c13c:	ldr	r1, [r4, #4]
   4c140:	ldr	r0, [pc, #2268]	; 4ca24 <Mat_VarPrint+0x944>
   4c144:	add	r0, pc, r0
   4c148:	bl	1448 <printf@plt>
   4c14c:	ldr	r3, [r4, #4]
   4c150:	cmp	r3, #0
   4c154:	ble	4c248 <Mat_VarPrint+0x168>
   4c158:	ldr	r3, [r4, #32]
   4c15c:	cmp	r3, #0
   4c160:	beq	4c1cc <Mat_VarPrint+0xec>
   4c164:	mov	r3, #1
   4c168:	str	r3, [sp, #196]	; 0xc4
   4c16c:	add	r1, sp, #196	; 0xc4
   4c170:	mov	r0, r4
   4c174:	bl	4a3c8 <SafeMulDims>
   4c178:	ldr	r3, [r4, #32]
   4c17c:	ldr	r1, [r3]
   4c180:	ldr	r0, [pc, #2208]	; 4ca28 <Mat_VarPrint+0x948>
   4c184:	add	r0, pc, r0
   4c188:	bl	1448 <printf@plt>
   4c18c:	ldr	r3, [r4, #4]
   4c190:	cmp	r3, #1
   4c194:	ble	4c1c4 <Mat_VarPrint+0xe4>
   4c198:	mov	r5, #1
   4c19c:	ldr	r6, [pc, #2184]	; 4ca2c <Mat_VarPrint+0x94c>
   4c1a0:	add	r6, pc, r6
   4c1a4:	ldr	r3, [r4, #32]
   4c1a8:	ldr	r1, [r3, r5, lsl #2]
   4c1ac:	mov	r0, r6
   4c1b0:	bl	1448 <printf@plt>
   4c1b4:	add	r5, r5, #1
   4c1b8:	ldr	r3, [r4, #4]
   4c1bc:	cmp	r3, r5
   4c1c0:	bgt	4c1a4 <Mat_VarPrint+0xc4>
   4c1c4:	mov	r0, #10
   4c1c8:	bl	1604 <putchar@plt>
   4c1cc:	ldr	r3, [r4, #16]
   4c1d0:	add	r2, sp, #200	; 0xc8
   4c1d4:	add	r3, r2, r3, lsl #2
   4c1d8:	ldr	r1, [r3, #-76]	; 0xffffffb4
   4c1dc:	ldr	r0, [pc, #2124]	; 4ca30 <Mat_VarPrint+0x950>
   4c1e0:	add	r0, pc, r0
   4c1e4:	bl	1448 <printf@plt>
   4c1e8:	ldr	r3, [r4, #20]
   4c1ec:	cmp	r3, #0
   4c1f0:	bne	4c264 <Mat_VarPrint+0x184>
   4c1f4:	ldr	r3, [r4, #28]
   4c1f8:	cmp	r3, #0
   4c1fc:	bne	4c274 <Mat_VarPrint+0x194>
   4c200:	mov	r0, #10
   4c204:	bl	1604 <putchar@plt>
   4c208:	ldr	r5, [r4, #8]
   4c20c:	cmp	r5, #0
   4c210:	bne	4c284 <Mat_VarPrint+0x1a4>
   4c214:	ldr	r3, [r4, #16]
   4c218:	cmp	r3, #2
   4c21c:	beq	4c2b8 <Mat_VarPrint+0x1d8>
   4c220:	ldr	r5, [r4, #40]	; 0x28
   4c224:	cmp	r5, #0
   4c228:	beq	4c3cc <Mat_VarPrint+0x2ec>
   4c22c:	ldr	r2, [r4, #12]
   4c230:	cmp	r2, #0
   4c234:	ble	4c3cc <Mat_VarPrint+0x2ec>
   4c238:	cmp	r3, #1
   4c23c:	beq	4c3e4 <Mat_VarPrint+0x304>
   4c240:	cmp	r7, #0
   4c244:	bne	4c43c <Mat_VarPrint+0x35c>
   4c248:	add	sp, sp, #204	; 0xcc
   4c24c:	ldrd	r4, [sp]
   4c250:	ldrd	r6, [sp, #8]
   4c254:	ldrd	r8, [sp, #16]
   4c258:	ldrd	sl, [sp, #24]
   4c25c:	add	sp, sp, #32
   4c260:	pop	{pc}		; (ldr pc, [sp], #4)
   4c264:	ldr	r0, [pc, #1992]	; 4ca34 <Mat_VarPrint+0x954>
   4c268:	add	r0, pc, r0
   4c26c:	bl	1448 <printf@plt>
   4c270:	b	4c200 <Mat_VarPrint+0x120>
   4c274:	ldr	r0, [pc, #1980]	; 4ca38 <Mat_VarPrint+0x958>
   4c278:	add	r0, pc, r0
   4c27c:	bl	1448 <printf@plt>
   4c280:	b	4c200 <Mat_VarPrint+0x120>
   4c284:	mov	r2, #100	; 0x64
   4c288:	ldr	r1, [pc, #1964]	; 4ca3c <Mat_VarPrint+0x95c>
   4c28c:	add	r1, pc, r1
   4c290:	add	r1, r1, #72	; 0x48
   4c294:	add	r0, sp, #24
   4c298:	bl	1490 <memcpy@plt>
   4c29c:	add	r3, sp, #200	; 0xc8
   4c2a0:	add	r5, r3, r5, lsl #2
   4c2a4:	ldr	r1, [r5, #-176]	; 0xffffff50
   4c2a8:	ldr	r0, [pc, #1936]	; 4ca40 <Mat_VarPrint+0x960>
   4c2ac:	add	r0, pc, r0
   4c2b0:	bl	1448 <printf@plt>
   4c2b4:	b	4c214 <Mat_VarPrint+0x134>
   4c2b8:	ldr	r8, [r4, #40]	; 0x28
   4c2bc:	ldr	r3, [r4, #52]	; 0x34
   4c2c0:	ldr	r6, [r3, #4]
   4c2c4:	mov	r3, #1
   4c2c8:	str	r3, [sp, #24]
   4c2cc:	mov	r2, r6
   4c2d0:	ldr	r1, [sp, #196]	; 0xc4
   4c2d4:	add	r0, sp, #24
   4c2d8:	bl	4a440 <SafeMul>
   4c2dc:	ldr	r5, [sp, #24]
   4c2e0:	cmp	r5, #0
   4c2e4:	beq	4c374 <Mat_VarPrint+0x294>
   4c2e8:	mov	r1, r5
   4c2ec:	ldr	r0, [pc, #1872]	; 4ca44 <Mat_VarPrint+0x964>
   4c2f0:	add	r0, pc, r0
   4c2f4:	bl	1448 <printf@plt>
   4c2f8:	ldr	r3, [sp, #24]
   4c2fc:	cmp	r3, #0
   4c300:	beq	4c364 <Mat_VarPrint+0x284>
   4c304:	sub	r8, r8, #4
   4c308:	mov	r5, #0
   4c30c:	ldr	sl, [pc, #1844]	; 4ca48 <Mat_VarPrint+0x968>
   4c310:	add	sl, pc, sl
   4c314:	mov	r9, r5
   4c318:	b	4c34c <Mat_VarPrint+0x26c>
   4c31c:	ldr	r2, [r4, #52]	; 0x34
   4c320:	udiv	r3, r5, r6
   4c324:	mls	r3, r6, r3, r5
   4c328:	ldr	r1, [r2, #8]
   4c32c:	mov	r2, r9
   4c330:	ldr	r1, [r1, r3, lsl #2]
   4c334:	mov	r0, sl
   4c338:	bl	1448 <printf@plt>
   4c33c:	add	r5, r5, #1
   4c340:	ldr	r3, [sp, #24]
   4c344:	cmp	r3, r5
   4c348:	bls	4c364 <Mat_VarPrint+0x284>
   4c34c:	ldr	r0, [r8, #4]!
   4c350:	cmp	r0, #0
   4c354:	beq	4c31c <Mat_VarPrint+0x23c>
   4c358:	mov	r1, r7
   4c35c:	bl	4c0e0 <Mat_VarPrint>
   4c360:	b	4c33c <Mat_VarPrint+0x25c>
   4c364:	ldr	r0, [pc, #1760]	; 4ca4c <Mat_VarPrint+0x96c>
   4c368:	add	r0, pc, r0
   4c36c:	bl	1538 <puts@plt>
   4c370:	b	4c248 <Mat_VarPrint+0x168>
   4c374:	mov	r1, r6
   4c378:	ldr	r0, [pc, #1744]	; 4ca50 <Mat_VarPrint+0x970>
   4c37c:	add	r0, pc, r0
   4c380:	bl	1448 <printf@plt>
   4c384:	cmp	r6, #0
   4c388:	beq	4c3bc <Mat_VarPrint+0x2dc>
   4c38c:	ldr	r8, [pc, #1728]	; 4ca54 <Mat_VarPrint+0x974>
   4c390:	add	r8, pc, r8
   4c394:	mov	r7, #0
   4c398:	ldr	r3, [r4, #52]	; 0x34
   4c39c:	ldr	r3, [r3, #8]
   4c3a0:	mov	r2, r7
   4c3a4:	ldr	r1, [r3, r5, lsl #2]
   4c3a8:	mov	r0, r8
   4c3ac:	bl	1448 <printf@plt>
   4c3b0:	add	r5, r5, #1
   4c3b4:	cmp	r6, r5
   4c3b8:	bne	4c398 <Mat_VarPrint+0x2b8>
   4c3bc:	ldr	r0, [pc, #1684]	; 4ca58 <Mat_VarPrint+0x978>
   4c3c0:	add	r0, pc, r0
   4c3c4:	bl	1538 <puts@plt>
   4c3c8:	b	4c248 <Mat_VarPrint+0x168>
   4c3cc:	cmp	r7, #0
   4c3d0:	beq	4c248 <Mat_VarPrint+0x168>
   4c3d4:	ldr	r0, [pc, #1664]	; 4ca5c <Mat_VarPrint+0x97c>
   4c3d8:	add	r0, pc, r0
   4c3dc:	bl	1538 <puts@plt>
   4c3e0:	b	4c248 <Mat_VarPrint+0x168>
   4c3e4:	ldr	r3, [r4]
   4c3e8:	udiv	r2, r3, r2
   4c3ec:	str	r2, [sp, #196]	; 0xc4
   4c3f0:	ldr	r0, [pc, #1640]	; 4ca60 <Mat_VarPrint+0x980>
   4c3f4:	add	r0, pc, r0
   4c3f8:	bl	1538 <puts@plt>
   4c3fc:	ldr	r3, [sp, #196]	; 0xc4
   4c400:	cmp	r3, #0
   4c404:	beq	4c42c <Mat_VarPrint+0x34c>
   4c408:	sub	r5, r5, #4
   4c40c:	mov	r4, #0
   4c410:	mov	r1, r7
   4c414:	ldr	r0, [r5, #4]!
   4c418:	bl	4c0e0 <Mat_VarPrint>
   4c41c:	add	r4, r4, #1
   4c420:	ldr	r3, [sp, #196]	; 0xc4
   4c424:	cmp	r3, r4
   4c428:	bhi	4c410 <Mat_VarPrint+0x330>
   4c42c:	ldr	r0, [pc, #1584]	; 4ca64 <Mat_VarPrint+0x984>
   4c430:	add	r0, pc, r0
   4c434:	bl	1538 <puts@plt>
   4c438:	b	4c248 <Mat_VarPrint+0x168>
   4c43c:	ldr	r0, [pc, #1572]	; 4ca68 <Mat_VarPrint+0x988>
   4c440:	add	r0, pc, r0
   4c444:	bl	1538 <puts@plt>
   4c448:	ldr	r3, [r4, #4]
   4c44c:	cmp	r3, #2
   4c450:	bgt	4c4b4 <Mat_VarPrint+0x3d4>
   4c454:	cmp	r3, #1
   4c458:	beq	4c4d0 <Mat_VarPrint+0x3f0>
   4c45c:	cmp	r3, #2
   4c460:	bne	4c4c0 <Mat_VarPrint+0x3e0>
   4c464:	ldr	r2, [r4, #32]
   4c468:	cmp	r2, #0
   4c46c:	beq	4c4c0 <Mat_VarPrint+0x3e0>
   4c470:	ldr	r3, [r4, #16]
   4c474:	sub	r3, r3, #4
   4c478:	cmp	r3, #11
   4c47c:	addls	pc, pc, r3, lsl #2
   4c480:	b	4c4c0 <Mat_VarPrint+0x3e0>
   4c484:	b	4c700 <Mat_VarPrint+0x620>
   4c488:	b	4c860 <Mat_VarPrint+0x780>
   4c48c:	b	4c4f8 <Mat_VarPrint+0x418>
   4c490:	b	4c4f8 <Mat_VarPrint+0x418>
   4c494:	b	4c4f8 <Mat_VarPrint+0x418>
   4c498:	b	4c4f8 <Mat_VarPrint+0x418>
   4c49c:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4a0:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4a4:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4a8:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4ac:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4b0:	b	4c4f8 <Mat_VarPrint+0x418>
   4c4b4:	ldr	r0, [pc, #1456]	; 4ca6c <Mat_VarPrint+0x98c>
   4c4b8:	add	r0, pc, r0
   4c4bc:	bl	1538 <puts@plt>
   4c4c0:	ldr	r0, [pc, #1448]	; 4ca70 <Mat_VarPrint+0x990>
   4c4c4:	add	r0, pc, r0
   4c4c8:	bl	1538 <puts@plt>
   4c4cc:	b	4c248 <Mat_VarPrint+0x168>
   4c4d0:	ldr	r3, [r4, #32]
   4c4d4:	cmp	r3, #0
   4c4d8:	beq	4c4c0 <Mat_VarPrint+0x3e0>
   4c4dc:	ldr	r3, [r3]
   4c4e0:	cmp	r3, #15
   4c4e4:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c4e8:	ldr	r0, [pc, #1412]	; 4ca74 <Mat_VarPrint+0x994>
   4c4ec:	add	r0, pc, r0
   4c4f0:	bl	1538 <puts@plt>
   4c4f4:	b	4c4c0 <Mat_VarPrint+0x3e0>
   4c4f8:	ldr	r0, [r4, #8]
   4c4fc:	bl	1598 <Mat_SizeOf@plt>
   4c500:	mov	r7, r0
   4c504:	ldr	r3, [r4, #20]
   4c508:	cmp	r3, #0
   4c50c:	beq	4c620 <Mat_VarPrint+0x540>
   4c510:	ldr	r3, [r4, #40]	; 0x28
   4c514:	ldr	sl, [r3]
   4c518:	ldr	fp, [r3, #4]
   4c51c:	ldr	r3, [r4, #32]
   4c520:	ldr	r3, [r3]
   4c524:	cmp	r3, #0
   4c528:	beq	4c4c0 <Mat_VarPrint+0x3e0>
   4c52c:	mov	r8, #0
   4c530:	ldr	r9, [pc, #1344]	; 4ca78 <Mat_VarPrint+0x998>
   4c534:	add	r9, pc, r9
   4c538:	ldr	r3, [pc, #1340]	; 4ca7c <Mat_VarPrint+0x99c>
   4c53c:	add	r3, pc, r3
   4c540:	str	r3, [sp, #4]
   4c544:	ldr	r3, [pc, #1332]	; 4ca80 <Mat_VarPrint+0x9a0>
   4c548:	add	r3, pc, r3
   4c54c:	str	r3, [sp, #8]
   4c550:	b	4c584 <Mat_VarPrint+0x4a4>
   4c554:	mov	r0, #10
   4c558:	bl	1604 <putchar@plt>
   4c55c:	add	r8, r8, #1
   4c560:	ldr	r3, [r4, #32]
   4c564:	ldr	r3, [r3]
   4c568:	cmp	r8, #14
   4c56c:	movhi	r2, #0
   4c570:	movls	r2, #1
   4c574:	cmp	r3, r8
   4c578:	movls	r2, #0
   4c57c:	cmp	r2, #0
   4c580:	beq	4c608 <Mat_VarPrint+0x528>
   4c584:	ldr	r3, [r4, #32]
   4c588:	ldr	r2, [r3, #4]
   4c58c:	cmp	r2, #0
   4c590:	movne	r6, #0
   4c594:	beq	4c554 <Mat_VarPrint+0x474>
   4c598:	ldr	r5, [r3]
   4c59c:	mla	r5, r5, r6, r8
   4c5a0:	mul	r5, r7, r5
   4c5a4:	add	r1, sl, r5
   4c5a8:	ldr	r0, [r4, #8]
   4c5ac:	bl	4a0e0 <Mat_PrintNumber>
   4c5b0:	mov	r0, r9
   4c5b4:	bl	1448 <printf@plt>
   4c5b8:	add	r1, fp, r5
   4c5bc:	ldr	r0, [r4, #8]
   4c5c0:	bl	4a0e0 <Mat_PrintNumber>
   4c5c4:	ldr	r0, [sp, #4]
   4c5c8:	bl	1448 <printf@plt>
   4c5cc:	add	r6, r6, #1
   4c5d0:	ldr	r3, [r4, #32]
   4c5d4:	ldr	r2, [r3, #4]
   4c5d8:	cmp	r6, #14
   4c5dc:	movhi	r1, #0
   4c5e0:	movls	r1, #1
   4c5e4:	cmp	r2, r6
   4c5e8:	movls	r1, #0
   4c5ec:	cmp	r1, #0
   4c5f0:	bne	4c598 <Mat_VarPrint+0x4b8>
   4c5f4:	cmp	r2, r6
   4c5f8:	bls	4c554 <Mat_VarPrint+0x474>
   4c5fc:	ldr	r0, [sp, #8]
   4c600:	bl	1448 <printf@plt>
   4c604:	b	4c554 <Mat_VarPrint+0x474>
   4c608:	cmp	r3, r8
   4c60c:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c610:	ldr	r0, [pc, #1132]	; 4ca84 <Mat_VarPrint+0x9a4>
   4c614:	add	r0, pc, r0
   4c618:	bl	1538 <puts@plt>
   4c61c:	b	4c4c0 <Mat_VarPrint+0x3e0>
   4c620:	ldr	r9, [r4, #40]	; 0x28
   4c624:	ldr	r3, [r4, #32]
   4c628:	ldr	r3, [r3]
   4c62c:	cmp	r3, #0
   4c630:	beq	4c4c0 <Mat_VarPrint+0x3e0>
   4c634:	mov	r6, #0
   4c638:	mov	r8, #32
   4c63c:	ldr	fp, [pc, #1092]	; 4ca88 <Mat_VarPrint+0x9a8>
   4c640:	add	fp, pc, fp
   4c644:	mov	sl, #10
   4c648:	b	4c67c <Mat_VarPrint+0x59c>
   4c64c:	mov	r0, sl
   4c650:	bl	1604 <putchar@plt>
   4c654:	add	r6, r6, #1
   4c658:	ldr	r3, [r4, #32]
   4c65c:	ldr	r3, [r3]
   4c660:	cmp	r6, #14
   4c664:	movhi	r2, #0
   4c668:	movls	r2, #1
   4c66c:	cmp	r3, r6
   4c670:	movls	r2, #0
   4c674:	cmp	r2, #0
   4c678:	beq	4c6e8 <Mat_VarPrint+0x608>
   4c67c:	ldr	r3, [r4, #32]
   4c680:	ldr	r2, [r3, #4]
   4c684:	cmp	r2, #0
   4c688:	movne	r5, #0
   4c68c:	beq	4c64c <Mat_VarPrint+0x56c>
   4c690:	ldr	r1, [r3]
   4c694:	mla	r1, r1, r5, r6
   4c698:	mla	r1, r7, r1, r9
   4c69c:	ldr	r0, [r4, #8]
   4c6a0:	bl	4a0e0 <Mat_PrintNumber>
   4c6a4:	mov	r0, r8
   4c6a8:	bl	1604 <putchar@plt>
   4c6ac:	add	r5, r5, #1
   4c6b0:	ldr	r3, [r4, #32]
   4c6b4:	ldr	r2, [r3, #4]
   4c6b8:	cmp	r5, #14
   4c6bc:	movhi	r1, #0
   4c6c0:	movls	r1, #1
   4c6c4:	cmp	r2, r5
   4c6c8:	movls	r1, #0
   4c6cc:	cmp	r1, #0
   4c6d0:	bne	4c690 <Mat_VarPrint+0x5b0>
   4c6d4:	cmp	r2, r5
   4c6d8:	bls	4c64c <Mat_VarPrint+0x56c>
   4c6dc:	mov	r0, fp
   4c6e0:	bl	1448 <printf@plt>
   4c6e4:	b	4c64c <Mat_VarPrint+0x56c>
   4c6e8:	cmp	r3, r6
   4c6ec:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c6f0:	ldr	r0, [pc, #916]	; 4ca8c <Mat_VarPrint+0x9ac>
   4c6f4:	add	r0, pc, r0
   4c6f8:	bl	1538 <puts@plt>
   4c6fc:	b	4c4c0 <Mat_VarPrint+0x3e0>
   4c700:	ldr	r3, [r4, #8]
   4c704:	cmp	r3, #4
   4c708:	beq	4c730 <Mat_VarPrint+0x650>
   4c70c:	cmp	r3, #17
   4c710:	beq	4c730 <Mat_VarPrint+0x650>
   4c714:	ldr	r9, [r4, #40]	; 0x28
   4c718:	ldr	r3, [r2]
   4c71c:	cmp	r3, #0
   4c720:	movne	r7, #0
   4c724:	movne	r8, #10
   4c728:	bne	4c844 <Mat_VarPrint+0x764>
   4c72c:	b	4c4c0 <Mat_VarPrint+0x3e0>
   4c730:	ldr	r7, [r4, #40]	; 0x28
   4c734:	ldr	r3, [r2]
   4c738:	cmp	r3, #0
   4c73c:	beq	4c4c0 <Mat_VarPrint+0x3e0>
   4c740:	mov	r6, #0
   4c744:	ldr	r9, [pc, #836]	; 4ca90 <Mat_VarPrint+0x9b0>
   4c748:	add	r9, pc, r9
   4c74c:	ldr	r8, [pc, #832]	; 4ca94 <Mat_VarPrint+0x9b4>
   4c750:	add	r8, pc, r8
   4c754:	b	4c7ec <Mat_VarPrint+0x70c>
   4c758:	bl	1604 <putchar@plt>
   4c75c:	b	4c780 <Mat_VarPrint+0x6a0>
   4c760:	and	r3, r0, #63	; 0x3f
   4c764:	ubfx	r2, r0, #6, #6
   4c768:	lsr	r1, r0, #12
   4c76c:	orr	r3, r3, #128	; 0x80
   4c770:	orr	r2, r2, #128	; 0x80
   4c774:	orr	r1, r1, #224	; 0xe0
   4c778:	mov	r0, r8
   4c77c:	bl	1448 <printf@plt>
   4c780:	add	r5, r5, #1
   4c784:	ldr	r3, [r4, #32]
   4c788:	ldr	r2, [r3, #4]
   4c78c:	cmp	r2, r5
   4c790:	bls	4c7d0 <Mat_VarPrint+0x6f0>
   4c794:	ldr	r3, [r3]
   4c798:	mla	r3, r3, r5, r6
   4c79c:	lsl	r3, r3, #1
   4c7a0:	ldrh	r0, [r7, r3]
   4c7a4:	cmp	r0, #127	; 0x7f
   4c7a8:	bls	4c758 <Mat_VarPrint+0x678>
   4c7ac:	cmp	r0, #2048	; 0x800
   4c7b0:	bcs	4c760 <Mat_VarPrint+0x680>
   4c7b4:	and	r2, r0, #63	; 0x3f
   4c7b8:	lsr	r1, r0, #6
   4c7bc:	orr	r2, r2, #128	; 0x80
   4c7c0:	orr	r1, r1, #192	; 0xc0
   4c7c4:	mov	r0, r9
   4c7c8:	bl	1448 <printf@plt>
   4c7cc:	b	4c780 <Mat_VarPrint+0x6a0>
   4c7d0:	mov	r0, #10
   4c7d4:	bl	1604 <putchar@plt>
   4c7d8:	add	r6, r6, #1
   4c7dc:	ldr	r3, [r4, #32]
   4c7e0:	ldr	r3, [r3]
   4c7e4:	cmp	r3, r6
   4c7e8:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c7ec:	ldr	r3, [r4, #32]
   4c7f0:	ldr	r2, [r3, #4]
   4c7f4:	cmp	r2, #0
   4c7f8:	movne	r5, #0
   4c7fc:	bne	4c794 <Mat_VarPrint+0x6b4>
   4c800:	b	4c7d0 <Mat_VarPrint+0x6f0>
   4c804:	ldr	r3, [r3]
   4c808:	mul	r3, r3, r5
   4c80c:	ldrb	r0, [r6, r3]
   4c810:	bl	1604 <putchar@plt>
   4c814:	add	r5, r5, #1
   4c818:	ldr	r3, [r4, #32]
   4c81c:	ldr	r2, [r3, #4]
   4c820:	cmp	r2, r5
   4c824:	bhi	4c804 <Mat_VarPrint+0x724>
   4c828:	mov	r0, r8
   4c82c:	bl	1604 <putchar@plt>
   4c830:	add	r7, r7, #1
   4c834:	ldr	r3, [r4, #32]
   4c838:	ldr	r3, [r3]
   4c83c:	cmp	r3, r7
   4c840:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c844:	ldr	r3, [r4, #32]
   4c848:	ldr	r2, [r3, #4]
   4c84c:	cmp	r2, #0
   4c850:	movne	r5, #0
   4c854:	addne	r6, r9, r7
   4c858:	bne	4c804 <Mat_VarPrint+0x724>
   4c85c:	b	4c828 <Mat_VarPrint+0x748>
   4c860:	ldr	r0, [r4, #8]
   4c864:	bl	1598 <Mat_SizeOf@plt>
   4c868:	mov	r7, r0
   4c86c:	ldr	r5, [r4, #40]	; 0x28
   4c870:	ldr	r3, [r4, #20]
   4c874:	cmp	r3, #0
   4c878:	beq	4c974 <Mat_VarPrint+0x894>
   4c87c:	ldr	r3, [r5, #24]
   4c880:	ldr	r2, [r3]
   4c884:	str	r2, [sp, #16]
   4c888:	ldr	r3, [r3, #4]
   4c88c:	str	r3, [sp, #20]
   4c890:	mov	fp, #0
   4c894:	ldr	r3, [pc, #508]	; 4ca98 <Mat_VarPrint+0x9b8>
   4c898:	add	r3, pc, r3
   4c89c:	str	r3, [sp, #4]
   4c8a0:	ldr	r3, [pc, #500]	; 4ca9c <Mat_VarPrint+0x9bc>
   4c8a4:	add	r3, pc, r3
   4c8a8:	str	r3, [sp, #8]
   4c8ac:	ldr	r3, [pc, #492]	; 4caa0 <Mat_VarPrint+0x9c0>
   4c8b0:	add	r3, pc, r3
   4c8b4:	str	r3, [sp, #12]
   4c8b8:	ldr	r3, [r5, #16]
   4c8bc:	sub	r3, r3, #1
   4c8c0:	cmp	r3, fp
   4c8c4:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c8c8:	ldr	r3, [r5, #12]
   4c8cc:	lsl	sl, fp, #2
   4c8d0:	ldr	r6, [r3, fp, lsl #2]
   4c8d4:	add	sl, sl, #4
   4c8d8:	add	fp, fp, #1
   4c8dc:	ldr	r3, [r3, sl]
   4c8e0:	cmp	r6, r3
   4c8e4:	bcs	4c8b8 <Mat_VarPrint+0x7d8>
   4c8e8:	ldr	r3, [r5, #20]
   4c8ec:	cmp	r6, r3
   4c8f0:	bcs	4c8b8 <Mat_VarPrint+0x7d8>
   4c8f4:	mul	r8, r6, r7
   4c8f8:	ldr	r3, [sp, #16]
   4c8fc:	add	r9, r3, r8
   4c900:	ldr	r3, [sp, #20]
   4c904:	add	r8, r3, r8
   4c908:	ldr	r3, [r5, #4]
   4c90c:	ldr	r1, [r3, r6, lsl #2]
   4c910:	mov	r2, fp
   4c914:	add	r1, r1, #1
   4c918:	ldr	r0, [sp, #4]
   4c91c:	bl	1448 <printf@plt>
   4c920:	mov	r1, r9
   4c924:	ldr	r0, [r4, #8]
   4c928:	bl	4a0e0 <Mat_PrintNumber>
   4c92c:	ldr	r0, [sp, #8]
   4c930:	bl	1448 <printf@plt>
   4c934:	mov	r1, r8
   4c938:	ldr	r0, [r4, #8]
   4c93c:	bl	4a0e0 <Mat_PrintNumber>
   4c940:	ldr	r0, [sp, #12]
   4c944:	bl	1538 <puts@plt>
   4c948:	add	r6, r6, #1
   4c94c:	ldr	r3, [r5, #12]
   4c950:	ldr	r3, [r3, sl]
   4c954:	cmp	r3, r6
   4c958:	bls	4c8b8 <Mat_VarPrint+0x7d8>
   4c95c:	add	r9, r9, r7
   4c960:	add	r8, r8, r7
   4c964:	ldr	r3, [r5, #20]
   4c968:	cmp	r3, r6
   4c96c:	bhi	4c908 <Mat_VarPrint+0x828>
   4c970:	b	4c8b8 <Mat_VarPrint+0x7d8>
   4c974:	ldr	fp, [r5, #24]
   4c978:	mov	sl, #0
   4c97c:	ldr	r3, [pc, #288]	; 4caa4 <Mat_VarPrint+0x9c4>
   4c980:	add	r3, pc, r3
   4c984:	str	r3, [sp, #4]
   4c988:	ldr	r3, [r5, #16]
   4c98c:	sub	r3, r3, #1
   4c990:	cmp	r3, sl
   4c994:	bls	4c4c0 <Mat_VarPrint+0x3e0>
   4c998:	ldr	r3, [r5, #12]
   4c99c:	lsl	r9, sl, #2
   4c9a0:	ldr	r6, [r3, sl, lsl #2]
   4c9a4:	add	r9, r9, #4
   4c9a8:	add	sl, sl, #1
   4c9ac:	ldr	r3, [r3, r9]
   4c9b0:	cmp	r6, r3
   4c9b4:	bcs	4c988 <Mat_VarPrint+0x8a8>
   4c9b8:	ldr	r3, [r5, #20]
   4c9bc:	cmp	r6, r3
   4c9c0:	bcs	4c988 <Mat_VarPrint+0x8a8>
   4c9c4:	mla	r8, r6, r7, fp
   4c9c8:	ldr	r3, [r5, #4]
   4c9cc:	ldr	r1, [r3, r6, lsl #2]
   4c9d0:	mov	r2, sl
   4c9d4:	add	r1, r1, #1
   4c9d8:	ldr	r0, [sp, #4]
   4c9dc:	bl	1448 <printf@plt>
   4c9e0:	mov	r1, r8
   4c9e4:	ldr	r0, [r4, #8]
   4c9e8:	bl	4a0e0 <Mat_PrintNumber>
   4c9ec:	mov	r0, #10
   4c9f0:	bl	1604 <putchar@plt>
   4c9f4:	add	r6, r6, #1
   4c9f8:	ldr	r3, [r5, #12]
   4c9fc:	ldr	r3, [r3, r9]
   4ca00:	cmp	r3, r6
   4ca04:	bls	4c988 <Mat_VarPrint+0x8a8>
   4ca08:	add	r8, r8, r7
   4ca0c:	ldr	r3, [r5, #20]
   4ca10:	cmp	r3, r6
   4ca14:	bhi	4c9c8 <Mat_VarPrint+0x8e8>
   4ca18:	b	4c988 <Mat_VarPrint+0x8a8>
   4ca1c:	.word	0x00014ff8
   4ca20:	.word	0x00003a7c
   4ca24:	.word	0x00003a7c
   4ca28:	.word	0x00003a4c
   4ca2c:	.word	0x00003a40
   4ca30:	.word	0x00003a08
   4ca34:	.word	0x00003990
   4ca38:	.word	0x0000398c
   4ca3c:	.word	0x00014e7c
   4ca40:	.word	0x00003964
   4ca44:	.word	0x00003930
   4ca48:	.word	0x00003920
   4ca4c:	.word	0x000038e8
   4ca50:	.word	0x000038a4
   4ca54:	.word	0x000038a0
   4ca58:	.word	0x00003890
   4ca5c:	.word	0x0000387c
   4ca60:	.word	0x00003864
   4ca64:	.word	0x00003820
   4ca68:	.word	0x00003818
   4ca6c:	.word	0x000037a4
   4ca70:	.word	0x0000378c
   4ca74:	.word	0x00003798
   4ca78:	.word	0x00003780
   4ca7c:	.word	0x0000377c
   4ca80:	.word	0x00003774
   4ca84:	.word	0x000036ac
   4ca88:	.word	0x0000367c
   4ca8c:	.word	0x000035cc
   4ca90:	.word	0x00003580
   4ca94:	.word	0x00003580
   4ca98:	.word	0x00003440
   4ca9c:	.word	0x00003410
   4caa0:	.word	0x00003438
   4caa4:	.word	0x00003358

0004caa8 <Mat_VarReadData>:
   4caa8:	ldr	ip, [r1, #16]
   4caac:	sub	ip, ip, #6
   4cab0:	cmp	ip, #9
   4cab4:	bhi	4cb1c <Mat_VarReadData+0x74>
   4cab8:	push	{lr}		; (str lr, [sp, #-4]!)
   4cabc:	sub	sp, sp, #12
   4cac0:	ldr	ip, [r0, #16]
   4cac4:	cmp	ip, #256	; 0x100
   4cac8:	beq	4caec <Mat_VarReadData+0x44>
   4cacc:	cmp	ip, #512	; 0x200
   4cad0:	moveq	r0, #1
   4cad4:	beq	4cae4 <Mat_VarReadData+0x3c>
   4cad8:	cmp	ip, #16
   4cadc:	movne	r0, #2
   4cae0:	beq	4cb04 <Mat_VarReadData+0x5c>
   4cae4:	add	sp, sp, #12
   4cae8:	pop	{pc}		; (ldr pc, [sp], #4)
   4caec:	ldr	ip, [sp, #20]
   4caf0:	str	ip, [sp, #4]
   4caf4:	ldr	ip, [sp, #16]
   4caf8:	str	ip, [sp]
   4cafc:	bl	46630 <Mat_VarReadData5>
   4cb00:	b	4cae4 <Mat_VarReadData+0x3c>
   4cb04:	ldr	ip, [sp, #20]
   4cb08:	str	ip, [sp, #4]
   4cb0c:	ldr	ip, [sp, #16]
   4cb10:	str	ip, [sp]
   4cb14:	bl	49738 <Mat_VarReadData4>
   4cb18:	b	4cae4 <Mat_VarReadData+0x3c>
   4cb1c:	mvn	r0, #0
   4cb20:	bx	lr

0004cb24 <Mat_VarReadDataAll>:
   4cb24:	cmp	r1, #0
   4cb28:	cmpne	r0, #0
   4cb2c:	bne	4cb38 <Mat_VarReadDataAll+0x14>
   4cb30:	mov	r0, #1
   4cb34:	bx	lr
   4cb38:	str	r4, [sp, #-8]!
   4cb3c:	str	lr, [sp, #4]
   4cb40:	bl	4a22c <ReadData>
   4cb44:	mov	r0, #0
   4cb48:	ldr	r4, [sp]
   4cb4c:	add	sp, sp, #4
   4cb50:	pop	{pc}		; (ldr pc, [sp], #4)

0004cb54 <Mat_VarReadDataLinear>:
   4cb54:	ldr	ip, [r1, #16]
   4cb58:	sub	ip, ip, #6
   4cb5c:	cmp	ip, #9
   4cb60:	bhi	4cbc8 <Mat_VarReadDataLinear+0x74>
   4cb64:	push	{lr}		; (str lr, [sp, #-4]!)
   4cb68:	sub	sp, sp, #12
   4cb6c:	ldr	ip, [r0, #16]
   4cb70:	cmp	ip, #256	; 0x100
   4cb74:	beq	4cb98 <Mat_VarReadDataLinear+0x44>
   4cb78:	cmp	ip, #512	; 0x200
   4cb7c:	moveq	r0, #1
   4cb80:	beq	4cb90 <Mat_VarReadDataLinear+0x3c>
   4cb84:	cmp	ip, #16
   4cb88:	movne	r0, #2
   4cb8c:	beq	4cbb0 <Mat_VarReadDataLinear+0x5c>
   4cb90:	add	sp, sp, #12
   4cb94:	pop	{pc}		; (ldr pc, [sp], #4)
   4cb98:	ldr	ip, [sp, #20]
   4cb9c:	str	ip, [sp, #4]
   4cba0:	ldr	ip, [sp, #16]
   4cba4:	str	ip, [sp]
   4cba8:	bl	46ec8 <Mat_VarReadDataLinear5>
   4cbac:	b	4cb90 <Mat_VarReadDataLinear+0x3c>
   4cbb0:	ldr	ip, [sp, #20]
   4cbb4:	str	ip, [sp, #4]
   4cbb8:	ldr	ip, [sp, #16]
   4cbbc:	str	ip, [sp]
   4cbc0:	bl	499c0 <Mat_VarReadDataLinear4>
   4cbc4:	b	4cb90 <Mat_VarReadDataLinear+0x3c>
   4cbc8:	mvn	r0, #0
   4cbcc:	bx	lr

0004cbd0 <Mat_VarReadNextInfo>:
   4cbd0:	cmp	r0, #0
   4cbd4:	bxeq	lr
   4cbd8:	str	r4, [sp, #-8]!
   4cbdc:	str	lr, [sp, #4]
   4cbe0:	ldr	r3, [r0, #16]
   4cbe4:	cmp	r3, #16
   4cbe8:	beq	4cc08 <Mat_VarReadNextInfo+0x38>
   4cbec:	cmp	r3, #256	; 0x100
   4cbf0:	movne	r0, #0
   4cbf4:	bne	4cbfc <Mat_VarReadNextInfo+0x2c>
   4cbf8:	bl	47e4c <Mat_VarReadNextInfo5>
   4cbfc:	ldr	r4, [sp]
   4cc00:	add	sp, sp, #4
   4cc04:	pop	{pc}		; (ldr pc, [sp], #4)
   4cc08:	bl	49af8 <Mat_VarReadNextInfo4>
   4cc0c:	b	4cbfc <Mat_VarReadNextInfo+0x2c>

0004cc10 <Mat_GetDir>:
   4cc10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4cc14:	strd	r6, [sp, #8]
   4cc18:	strd	r8, [sp, #16]
   4cc1c:	strd	sl, [sp, #24]
   4cc20:	str	lr, [sp, #32]
   4cc24:	sub	sp, sp, #4
   4cc28:	subs	r7, r1, #0
   4cc2c:	beq	4ced4 <Mat_GetDir+0x2c4>
   4cc30:	cmp	r0, #0
   4cc34:	moveq	r3, #0
   4cc38:	streq	r3, [r7]
   4cc3c:	moveq	r5, r0
   4cc40:	beq	4cc6c <Mat_GetDir+0x5c>
   4cc44:	mov	r4, r0
   4cc48:	ldr	r5, [r0, #40]	; 0x28
   4cc4c:	cmp	r5, #0
   4cc50:	beq	4cc8c <Mat_GetDir+0x7c>
   4cc54:	ldr	r3, [r0, #16]
   4cc58:	cmp	r3, #512	; 0x200
   4cc5c:	beq	4ce84 <Mat_GetDir+0x274>
   4cc60:	ldr	r3, [r0, #36]	; 0x24
   4cc64:	str	r3, [r7]
   4cc68:	ldr	r5, [r4, #40]	; 0x28
   4cc6c:	mov	r0, r5
   4cc70:	add	sp, sp, #4
   4cc74:	ldrd	r4, [sp]
   4cc78:	ldrd	r6, [sp, #8]
   4cc7c:	ldrd	r8, [sp, #16]
   4cc80:	ldrd	sl, [sp, #24]
   4cc84:	add	sp, sp, #32
   4cc88:	pop	{pc}		; (ldr pc, [sp], #4)
   4cc8c:	ldr	r3, [r0, #16]
   4cc90:	cmp	r3, #512	; 0x200
   4cc94:	bne	4cd5c <Mat_GetDir+0x14c>
   4cc98:	ldr	r0, [r0, #36]	; 0x24
   4cc9c:	cmp	r0, #0
   4cca0:	moveq	r3, #0
   4cca4:	streq	r3, [r7]
   4cca8:	beq	4cc6c <Mat_GetDir+0x5c>
   4ccac:	ldr	sl, [r4, #32]
   4ccb0:	mov	r1, #4
   4ccb4:	bl	140c <calloc@plt>
   4ccb8:	mov	r5, r0
   4ccbc:	str	r0, [r4, #40]	; 0x28
   4ccc0:	cmp	r0, #0
   4ccc4:	beq	4ccdc <Mat_GetDir+0xcc>
   4ccc8:	mov	r6, #0
   4cccc:	str	r6, [r4, #32]
   4ccd0:	ldr	fp, [pc, #516]	; 4cedc <Mat_GetDir+0x2cc>
   4ccd4:	add	fp, pc, fp
   4ccd8:	b	4cd0c <Mat_GetDir+0xfc>
   4ccdc:	mov	r3, #0
   4cce0:	str	r3, [r7]
   4cce4:	ldr	r0, [pc, #500]	; 4cee0 <Mat_GetDir+0x2d0>
   4cce8:	add	r0, pc, r0
   4ccec:	bl	161c <Mat_Critical@plt>
   4ccf0:	b	4cc6c <Mat_GetDir+0x5c>
   4ccf4:	mov	r0, r5
   4ccf8:	bl	158c <Mat_VarFree@plt>
   4ccfc:	ldr	r2, [r4, #32]
   4cd00:	ldr	r3, [r4, #36]	; 0x24
   4cd04:	cmp	r2, r3
   4cd08:	bcs	4cd50 <Mat_GetDir+0x140>
   4cd0c:	mov	r0, r4
   4cd10:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4cd14:	subs	r5, r0, #0
   4cd18:	beq	4cd44 <Mat_GetDir+0x134>
   4cd1c:	ldr	r1, [r5, #36]	; 0x24
   4cd20:	cmp	r1, #0
   4cd24:	beq	4ccf4 <Mat_GetDir+0xe4>
   4cd28:	add	r8, r6, #1
   4cd2c:	ldr	r9, [r4, #40]	; 0x28
   4cd30:	mov	r0, fp
   4cd34:	bl	1cf0 <strdup_printf>
   4cd38:	str	r0, [r9, r6, lsl #2]
   4cd3c:	mov	r6, r8
   4cd40:	b	4ccf4 <Mat_GetDir+0xe4>
   4cd44:	ldr	r0, [pc, #408]	; 4cee4 <Mat_GetDir+0x2d4>
   4cd48:	add	r0, pc, r0
   4cd4c:	bl	161c <Mat_Critical@plt>
   4cd50:	str	sl, [r4, #32]
   4cd54:	str	r6, [r7]
   4cd58:	b	4cc68 <Mat_GetDir+0x58>
   4cd5c:	ldr	r0, [r0]
   4cd60:	bl	14b4 <ftell@plt>
   4cd64:	mov	r8, r0
   4cd68:	cmn	r0, #1
   4cd6c:	beq	4cd98 <Mat_GetDir+0x188>
   4cd70:	mov	r2, #0
   4cd74:	ldr	r1, [r4, #28]
   4cd78:	ldr	r0, [r4]
   4cd7c:	bl	1694 <fseek@plt>
   4cd80:	mov	r3, #0
   4cd84:	str	r3, [r4, #36]	; 0x24
   4cd88:	ldr	r5, [pc, #344]	; 4cee8 <Mat_GetDir+0x2d8>
   4cd8c:	add	r5, pc, r5
   4cd90:	mov	r9, #4
   4cd94:	b	4cdfc <Mat_GetDir+0x1ec>
   4cd98:	mov	r3, #0
   4cd9c:	str	r3, [r7]
   4cda0:	ldr	r0, [pc, #324]	; 4ceec <Mat_GetDir+0x2dc>
   4cda4:	add	r0, pc, r0
   4cda8:	bl	161c <Mat_Critical@plt>
   4cdac:	b	4cc6c <Mat_GetDir+0x5c>
   4cdb0:	mov	r0, r9
   4cdb4:	bl	1544 <malloc@plt>
   4cdb8:	mov	sl, r0
   4cdbc:	cmp	sl, #0
   4cdc0:	beq	4ce3c <Mat_GetDir+0x22c>
   4cdc4:	str	sl, [r4, #40]	; 0x28
   4cdc8:	ldr	r1, [r6, #36]	; 0x24
   4cdcc:	ldr	fp, [r4, #36]	; 0x24
   4cdd0:	add	r3, fp, #1
   4cdd4:	str	r3, [r4, #36]	; 0x24
   4cdd8:	mov	r0, r5
   4cddc:	bl	1cf0 <strdup_printf>
   4cde0:	str	r0, [sl, fp, lsl #2]
   4cde4:	mov	r0, r6
   4cde8:	bl	158c <Mat_VarFree@plt>
   4cdec:	ldr	r0, [r4]
   4cdf0:	bl	1580 <feof@plt>
   4cdf4:	cmp	r0, #0
   4cdf8:	bne	4ce48 <Mat_GetDir+0x238>
   4cdfc:	mov	r0, r4
   4ce00:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4ce04:	subs	r6, r0, #0
   4ce08:	beq	4ce64 <Mat_GetDir+0x254>
   4ce0c:	ldr	r3, [r6, #36]	; 0x24
   4ce10:	cmp	r3, #0
   4ce14:	beq	4cde4 <Mat_GetDir+0x1d4>
   4ce18:	ldr	r0, [r4, #40]	; 0x28
   4ce1c:	cmp	r0, #0
   4ce20:	beq	4cdb0 <Mat_GetDir+0x1a0>
   4ce24:	ldr	r1, [r4, #36]	; 0x24
   4ce28:	add	r1, r1, #1
   4ce2c:	lsl	r1, r1, #2
   4ce30:	bl	14d8 <realloc@plt>
   4ce34:	mov	sl, r0
   4ce38:	b	4cdbc <Mat_GetDir+0x1ac>
   4ce3c:	ldr	r0, [pc, #172]	; 4cef0 <Mat_GetDir+0x2e0>
   4ce40:	add	r0, pc, r0
   4ce44:	bl	161c <Mat_Critical@plt>
   4ce48:	mov	r2, #0
   4ce4c:	mov	r1, r8
   4ce50:	ldr	r0, [r4]
   4ce54:	bl	1694 <fseek@plt>
   4ce58:	ldr	r3, [r4, #36]	; 0x24
   4ce5c:	str	r3, [r7]
   4ce60:	b	4cc68 <Mat_GetDir+0x58>
   4ce64:	ldr	r0, [r4]
   4ce68:	bl	1580 <feof@plt>
   4ce6c:	cmp	r0, #0
   4ce70:	bne	4cdec <Mat_GetDir+0x1dc>
   4ce74:	ldr	r0, [pc, #120]	; 4cef4 <Mat_GetDir+0x2e4>
   4ce78:	add	r0, pc, r0
   4ce7c:	bl	161c <Mat_Critical@plt>
   4ce80:	b	4ce48 <Mat_GetDir+0x238>
   4ce84:	mov	r3, #0
   4ce88:	str	r3, [r7]
   4ce8c:	ldr	r3, [r0, #36]	; 0x24
   4ce90:	cmp	r3, #0
   4ce94:	beq	4cc68 <Mat_GetDir+0x58>
   4ce98:	ldr	r3, [r0, #40]	; 0x28
   4ce9c:	ldr	r3, [r3]
   4cea0:	cmp	r3, #0
   4cea4:	beq	4cc68 <Mat_GetDir+0x58>
   4cea8:	mov	r3, #1
   4ceac:	str	r3, [r7]
   4ceb0:	ldr	r2, [r4, #36]	; 0x24
   4ceb4:	cmp	r2, r3
   4ceb8:	bls	4cc68 <Mat_GetDir+0x58>
   4cebc:	ldr	r2, [r4, #40]	; 0x28
   4cec0:	ldr	r2, [r2, r3, lsl #2]
   4cec4:	add	r3, r3, #1
   4cec8:	cmp	r2, #0
   4cecc:	bne	4ceac <Mat_GetDir+0x29c>
   4ced0:	b	4cc68 <Mat_GetDir+0x58>
   4ced4:	mov	r5, r7
   4ced8:	b	4cc6c <Mat_GetDir+0x5c>
   4cedc:	.word	0x00002f20
   4cee0:	.word	0x00003004
   4cee4:	.word	0x00002704
   4cee8:	.word	0x00002e68
   4ceec:	.word	0x00002684
   4cef0:	.word	0x00002eac
   4cef4:	.word	0x000025d4

0004cef8 <Mat_VarReadInfo>:
   4cef8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4cefc:	strd	r6, [sp, #8]
   4cf00:	str	r8, [sp, #16]
   4cf04:	str	lr, [sp, #20]
   4cf08:	cmp	r1, #0
   4cf0c:	cmpne	r0, #0
   4cf10:	moveq	r5, #0
   4cf14:	beq	4cfac <Mat_VarReadInfo+0xb4>
   4cf18:	mov	r4, r0
   4cf1c:	mov	r6, r1
   4cf20:	ldr	r3, [r0, #16]
   4cf24:	cmp	r3, #512	; 0x200
   4cf28:	bne	4cfc4 <Mat_VarReadInfo+0xcc>
   4cf2c:	ldr	r7, [r0, #32]
   4cf30:	mov	r3, #0
   4cf34:	str	r3, [r0, #32]
   4cf38:	ldr	r3, [r0, #36]	; 0x24
   4cf3c:	cmp	r3, #0
   4cf40:	bne	4cf64 <Mat_VarReadInfo+0x6c>
   4cf44:	mov	r5, #0
   4cf48:	b	4cfa8 <Mat_VarReadInfo+0xb0>
   4cf4c:	mov	r0, r5
   4cf50:	bl	158c <Mat_VarFree@plt>
   4cf54:	ldr	r2, [r4, #32]
   4cf58:	ldr	r3, [r4, #36]	; 0x24
   4cf5c:	cmp	r2, r3
   4cf60:	bcs	4cf94 <Mat_VarReadInfo+0x9c>
   4cf64:	mov	r0, r4
   4cf68:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4cf6c:	subs	r5, r0, #0
   4cf70:	beq	4cf9c <Mat_VarReadInfo+0xa4>
   4cf74:	ldr	r0, [r5, #36]	; 0x24
   4cf78:	cmp	r0, #0
   4cf7c:	beq	4cf4c <Mat_VarReadInfo+0x54>
   4cf80:	mov	r1, r6
   4cf84:	bl	1424 <strcmp@plt>
   4cf88:	cmp	r0, #0
   4cf8c:	bne	4cf4c <Mat_VarReadInfo+0x54>
   4cf90:	b	4cfa8 <Mat_VarReadInfo+0xb0>
   4cf94:	mov	r5, #0
   4cf98:	b	4cfa8 <Mat_VarReadInfo+0xb0>
   4cf9c:	ldr	r0, [pc, #220]	; 4d080 <Mat_VarReadInfo+0x188>
   4cfa0:	add	r0, pc, r0
   4cfa4:	bl	161c <Mat_Critical@plt>
   4cfa8:	str	r7, [r4, #32]
   4cfac:	mov	r0, r5
   4cfb0:	ldrd	r4, [sp]
   4cfb4:	ldrd	r6, [sp, #8]
   4cfb8:	ldr	r8, [sp, #16]
   4cfbc:	add	sp, sp, #20
   4cfc0:	pop	{pc}		; (ldr pc, [sp], #4)
   4cfc4:	ldr	r0, [r0]
   4cfc8:	bl	14b4 <ftell@plt>
   4cfcc:	mov	r7, r0
   4cfd0:	cmn	r0, #1
   4cfd4:	beq	4d06c <Mat_VarReadInfo+0x174>
   4cfd8:	mov	r2, #0
   4cfdc:	ldr	r1, [r4, #28]
   4cfe0:	ldr	r0, [r4]
   4cfe4:	bl	1694 <fseek@plt>
   4cfe8:	b	4d004 <Mat_VarReadInfo+0x10c>
   4cfec:	mov	r0, r5
   4cff0:	bl	158c <Mat_VarFree@plt>
   4cff4:	ldr	r0, [r4]
   4cff8:	bl	1580 <feof@plt>
   4cffc:	cmp	r0, #0
   4d000:	bne	4d064 <Mat_VarReadInfo+0x16c>
   4d004:	mov	r0, r4
   4d008:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4d00c:	subs	r5, r0, #0
   4d010:	beq	4d044 <Mat_VarReadInfo+0x14c>
   4d014:	ldr	r0, [r5, #36]	; 0x24
   4d018:	cmp	r0, #0
   4d01c:	beq	4cfec <Mat_VarReadInfo+0xf4>
   4d020:	mov	r1, r6
   4d024:	bl	1424 <strcmp@plt>
   4d028:	cmp	r0, #0
   4d02c:	bne	4cfec <Mat_VarReadInfo+0xf4>
   4d030:	mov	r2, #0
   4d034:	mov	r1, r7
   4d038:	ldr	r0, [r4]
   4d03c:	bl	1694 <fseek@plt>
   4d040:	b	4cfac <Mat_VarReadInfo+0xb4>
   4d044:	ldr	r0, [r4]
   4d048:	bl	1580 <feof@plt>
   4d04c:	cmp	r0, #0
   4d050:	bne	4cff4 <Mat_VarReadInfo+0xfc>
   4d054:	ldr	r0, [pc, #40]	; 4d084 <Mat_VarReadInfo+0x18c>
   4d058:	add	r0, pc, r0
   4d05c:	bl	161c <Mat_Critical@plt>
   4d060:	b	4d030 <Mat_VarReadInfo+0x138>
   4d064:	mov	r5, #0
   4d068:	b	4d030 <Mat_VarReadInfo+0x138>
   4d06c:	ldr	r0, [pc, #20]	; 4d088 <Mat_VarReadInfo+0x190>
   4d070:	add	r0, pc, r0
   4d074:	bl	161c <Mat_Critical@plt>
   4d078:	mov	r5, #0
   4d07c:	b	4cfac <Mat_VarReadInfo+0xb4>
   4d080:	.word	0x000024ac
   4d084:	.word	0x000023f4
   4d088:	.word	0x000023b8

0004d08c <Mat_VarRead>:
   4d08c:	strd	r4, [sp, #-16]!
   4d090:	str	r6, [sp, #8]
   4d094:	str	lr, [sp, #12]
   4d098:	cmp	r1, #0
   4d09c:	cmpne	r0, #0
   4d0a0:	moveq	r5, #0
   4d0a4:	beq	4d100 <Mat_VarRead+0x74>
   4d0a8:	mov	r4, r0
   4d0ac:	mov	r5, r1
   4d0b0:	ldr	r3, [r0, #16]
   4d0b4:	cmp	r3, #512	; 0x200
   4d0b8:	beq	4d128 <Mat_VarRead+0x9c>
   4d0bc:	ldr	r0, [r0]
   4d0c0:	bl	14b4 <ftell@plt>
   4d0c4:	mov	r6, r0
   4d0c8:	cmn	r0, #1
   4d0cc:	beq	4d114 <Mat_VarRead+0x88>
   4d0d0:	mov	r1, r5
   4d0d4:	mov	r0, r4
   4d0d8:	bl	14e4 <Mat_VarReadInfo@plt>
   4d0dc:	subs	r5, r0, #0
   4d0e0:	beq	4d0f0 <Mat_VarRead+0x64>
   4d0e4:	mov	r1, r5
   4d0e8:	mov	r0, r4
   4d0ec:	bl	4a22c <ReadData>
   4d0f0:	mov	r2, #0
   4d0f4:	mov	r1, r6
   4d0f8:	ldr	r0, [r4]
   4d0fc:	bl	1694 <fseek@plt>
   4d100:	mov	r0, r5
   4d104:	ldrd	r4, [sp]
   4d108:	ldr	r6, [sp, #8]
   4d10c:	add	sp, sp, #12
   4d110:	pop	{pc}		; (ldr pc, [sp], #4)
   4d114:	ldr	r0, [pc, #56]	; 4d154 <Mat_VarRead+0xc8>
   4d118:	add	r0, pc, r0
   4d11c:	bl	161c <Mat_Critical@plt>
   4d120:	mov	r5, #0
   4d124:	b	4d100 <Mat_VarRead+0x74>
   4d128:	ldr	r6, [r0, #32]
   4d12c:	mov	r3, #0
   4d130:	str	r3, [r0, #32]
   4d134:	bl	14e4 <Mat_VarReadInfo@plt>
   4d138:	subs	r5, r0, #0
   4d13c:	beq	4d14c <Mat_VarRead+0xc0>
   4d140:	mov	r1, r5
   4d144:	mov	r0, r4
   4d148:	bl	4a22c <ReadData>
   4d14c:	str	r6, [r4, #32]
   4d150:	b	4d100 <Mat_VarRead+0x74>
   4d154:	.word	0x00002310

0004d158 <Mat_VarReadNext>:
   4d158:	strd	r4, [sp, #-16]!
   4d15c:	str	r6, [sp, #8]
   4d160:	str	lr, [sp, #12]
   4d164:	mov	r4, r0
   4d168:	ldr	r3, [r0, #16]
   4d16c:	cmp	r3, #512	; 0x200
   4d170:	beq	4d1e0 <Mat_VarReadNext+0x88>
   4d174:	ldr	r0, [r0]
   4d178:	bl	1580 <feof@plt>
   4d17c:	cmp	r0, #0
   4d180:	movne	r5, #0
   4d184:	bne	4d1b8 <Mat_VarReadNext+0x60>
   4d188:	ldr	r0, [r4]
   4d18c:	bl	14b4 <ftell@plt>
   4d190:	mov	r6, r0
   4d194:	cmn	r0, #1
   4d198:	beq	4d1cc <Mat_VarReadNext+0x74>
   4d19c:	mov	r0, r4
   4d1a0:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4d1a4:	subs	r5, r0, #0
   4d1a8:	beq	4d1e8 <Mat_VarReadNext+0x90>
   4d1ac:	mov	r1, r5
   4d1b0:	mov	r0, r4
   4d1b4:	bl	4a22c <ReadData>
   4d1b8:	mov	r0, r5
   4d1bc:	ldrd	r4, [sp]
   4d1c0:	ldr	r6, [sp, #8]
   4d1c4:	add	sp, sp, #12
   4d1c8:	pop	{pc}		; (ldr pc, [sp], #4)
   4d1cc:	ldr	r0, [pc, #52]	; 4d208 <Mat_VarReadNext+0xb0>
   4d1d0:	add	r0, pc, r0
   4d1d4:	bl	161c <Mat_Critical@plt>
   4d1d8:	mov	r5, #0
   4d1dc:	b	4d1b8 <Mat_VarReadNext+0x60>
   4d1e0:	mov	r6, #0
   4d1e4:	b	4d19c <Mat_VarReadNext+0x44>
   4d1e8:	ldr	r3, [r4, #16]
   4d1ec:	cmp	r3, #512	; 0x200
   4d1f0:	beq	4d1b8 <Mat_VarReadNext+0x60>
   4d1f4:	mov	r2, #0
   4d1f8:	mov	r1, r6
   4d1fc:	ldr	r0, [r4]
   4d200:	bl	1694 <fseek@plt>
   4d204:	b	4d1b8 <Mat_VarReadNext+0x60>
   4d208:	.word	0x00002258

0004d20c <Mat_VarWriteInfo>:
   4d20c:	str	r4, [sp, #-8]!
   4d210:	str	lr, [sp, #4]
   4d214:	ldr	r3, [r0, #16]
   4d218:	cmp	r3, #512	; 0x200
   4d21c:	beq	4d244 <Mat_VarWriteInfo+0x38>
   4d220:	ldr	r1, [pc, #40]	; 4d250 <Mat_VarWriteInfo+0x44>
   4d224:	add	r1, pc, r1
   4d228:	ldr	r0, [pc, #36]	; 4d254 <Mat_VarWriteInfo+0x48>
   4d22c:	add	r0, pc, r0
   4d230:	bl	161c <Mat_Critical@plt>
   4d234:	mov	r0, #1
   4d238:	ldr	r4, [sp]
   4d23c:	add	sp, sp, #4
   4d240:	pop	{pc}		; (ldr pc, [sp], #4)
   4d244:	ldr	r1, [pc, #12]	; 4d258 <Mat_VarWriteInfo+0x4c>
   4d248:	add	r1, pc, r1
   4d24c:	b	4d228 <Mat_VarWriteInfo+0x1c>
   4d250:	.word	0x00002b14
   4d254:	.word	0x00002b1c
   4d258:	.word	0x00002ad0

0004d25c <Mat_VarWriteData>:
   4d25c:	str	r4, [sp, #-8]!
   4d260:	str	lr, [sp, #4]
   4d264:	ldr	r3, [r0, #16]
   4d268:	cmp	r3, #512	; 0x200
   4d26c:	beq	4d294 <Mat_VarWriteData+0x38>
   4d270:	ldr	r1, [pc, #40]	; 4d2a0 <Mat_VarWriteData+0x44>
   4d274:	add	r1, pc, r1
   4d278:	ldr	r0, [pc, #36]	; 4d2a4 <Mat_VarWriteData+0x48>
   4d27c:	add	r0, pc, r0
   4d280:	bl	161c <Mat_Critical@plt>
   4d284:	mov	r0, #1
   4d288:	ldr	r4, [sp]
   4d28c:	add	sp, sp, #4
   4d290:	pop	{pc}		; (ldr pc, [sp], #4)
   4d294:	ldr	r1, [pc, #12]	; 4d2a8 <Mat_VarWriteData+0x4c>
   4d298:	add	r1, pc, r1
   4d29c:	b	4d278 <Mat_VarWriteData+0x1c>
   4d2a0:	.word	0x00002ac4
   4d2a4:	.word	0x00002acc
   4d2a8:	.word	0x00002a80

0004d2ac <Mat_VarWrite>:
   4d2ac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4d2b0:	strd	r6, [sp, #8]
   4d2b4:	strd	r8, [sp, #16]
   4d2b8:	str	sl, [sp, #24]
   4d2bc:	str	lr, [sp, #28]
   4d2c0:	sub	sp, sp, #8
   4d2c4:	cmp	r1, #0
   4d2c8:	cmpne	r0, #0
   4d2cc:	beq	4d45c <Mat_VarWrite+0x1b0>
   4d2d0:	mov	r8, r0
   4d2d4:	mov	r7, r1
   4d2d8:	mov	r9, r2
   4d2dc:	ldr	r3, [r0, #40]	; 0x28
   4d2e0:	cmp	r3, #0
   4d2e4:	beq	4d304 <Mat_VarWrite+0x58>
   4d2e8:	ldr	r6, [r8, #36]	; 0x24
   4d2ec:	cmp	r6, #0
   4d2f0:	beq	4d374 <Mat_VarWrite+0xc8>
   4d2f4:	ldr	r5, [r8, #40]	; 0x28
   4d2f8:	sub	r5, r5, #4
   4d2fc:	mov	r4, #0
   4d300:	b	4d320 <Mat_VarWrite+0x74>
   4d304:	str	r3, [sp, #4]
   4d308:	add	r1, sp, #4
   4d30c:	bl	15a4 <Mat_GetDir@plt>
   4d310:	b	4d2e8 <Mat_VarWrite+0x3c>
   4d314:	add	r4, r4, #1
   4d318:	cmp	r4, r6
   4d31c:	beq	4d374 <Mat_VarWrite+0xc8>
   4d320:	ldr	r0, [r5, #4]!
   4d324:	cmp	r0, #0
   4d328:	beq	4d314 <Mat_VarWrite+0x68>
   4d32c:	ldr	sl, [r7, #36]	; 0x24
   4d330:	mov	r1, sl
   4d334:	bl	1424 <strcmp@plt>
   4d338:	cmp	r0, #0
   4d33c:	bne	4d314 <Mat_VarWrite+0x68>
   4d340:	mov	r1, sl
   4d344:	ldr	r0, [pc, #280]	; 4d464 <Mat_VarWrite+0x1b8>
   4d348:	add	r0, pc, r0
   4d34c:	bl	161c <Mat_Critical@plt>
   4d350:	mov	r4, #1
   4d354:	mov	r0, r4
   4d358:	add	sp, sp, #8
   4d35c:	ldrd	r4, [sp]
   4d360:	ldrd	r6, [sp, #8]
   4d364:	ldrd	r8, [sp, #16]
   4d368:	ldr	sl, [sp, #24]
   4d36c:	add	sp, sp, #28
   4d370:	pop	{pc}		; (ldr pc, [sp], #4)
   4d374:	ldr	r3, [r8, #16]
   4d378:	cmp	r3, #256	; 0x100
   4d37c:	beq	4d3ac <Mat_VarWrite+0x100>
   4d380:	cmp	r3, #512	; 0x200
   4d384:	moveq	r4, #1
   4d388:	beq	4d354 <Mat_VarWrite+0xa8>
   4d38c:	cmp	r3, #16
   4d390:	movne	r4, #2
   4d394:	bne	4d354 <Mat_VarWrite+0xa8>
   4d398:	mov	r1, r7
   4d39c:	mov	r0, r8
   4d3a0:	bl	4872c <Mat_VarWrite4>
   4d3a4:	mov	r4, r0
   4d3a8:	b	4d3c0 <Mat_VarWrite+0x114>
   4d3ac:	mov	r2, r9
   4d3b0:	mov	r1, r7
   4d3b4:	mov	r0, r8
   4d3b8:	bl	47418 <Mat_VarWrite5>
   4d3bc:	mov	r4, r0
   4d3c0:	cmp	r4, #0
   4d3c4:	bne	4d354 <Mat_VarWrite+0xa8>
   4d3c8:	ldr	r0, [r8, #40]	; 0x28
   4d3cc:	cmp	r0, #0
   4d3d0:	beq	4d420 <Mat_VarWrite+0x174>
   4d3d4:	ldr	r1, [r8, #36]	; 0x24
   4d3d8:	add	r1, r1, #1
   4d3dc:	lsl	r1, r1, #2
   4d3e0:	bl	14d8 <realloc@plt>
   4d3e4:	mov	r5, r0
   4d3e8:	cmp	r5, #0
   4d3ec:	beq	4d448 <Mat_VarWrite+0x19c>
   4d3f0:	str	r5, [r8, #40]	; 0x28
   4d3f4:	ldr	r1, [r7, #36]	; 0x24
   4d3f8:	cmp	r1, #0
   4d3fc:	beq	4d430 <Mat_VarWrite+0x184>
   4d400:	ldr	r6, [r8, #36]	; 0x24
   4d404:	add	r3, r6, #1
   4d408:	str	r3, [r8, #36]	; 0x24
   4d40c:	ldr	r0, [pc, #84]	; 4d468 <Mat_VarWrite+0x1bc>
   4d410:	add	r0, pc, r0
   4d414:	bl	1cf0 <strdup_printf>
   4d418:	str	r0, [r5, r6, lsl #2]
   4d41c:	b	4d354 <Mat_VarWrite+0xa8>
   4d420:	mov	r0, #4
   4d424:	bl	1544 <malloc@plt>
   4d428:	mov	r5, r0
   4d42c:	b	4d3e8 <Mat_VarWrite+0x13c>
   4d430:	ldr	r3, [r8, #36]	; 0x24
   4d434:	add	r2, r3, #1
   4d438:	str	r2, [r8, #36]	; 0x24
   4d43c:	mov	r2, #0
   4d440:	str	r2, [r5, r3, lsl #2]
   4d444:	b	4d354 <Mat_VarWrite+0xa8>
   4d448:	ldr	r0, [pc, #28]	; 4d46c <Mat_VarWrite+0x1c0>
   4d44c:	add	r0, pc, r0
   4d450:	bl	161c <Mat_Critical@plt>
   4d454:	mov	r4, #3
   4d458:	b	4d354 <Mat_VarWrite+0xa8>
   4d45c:	mvn	r4, #0
   4d460:	b	4d354 <Mat_VarWrite+0xa8>
   4d464:	.word	0x00002a44
   4d468:	.word	0x000027e4
   4d46c:	.word	0x000028a0

0004d470 <Mat_VarDelete>:
   4d470:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4d474:	strd	r6, [sp, #8]
   4d478:	strd	r8, [sp, #16]
   4d47c:	str	sl, [sp, #24]
   4d480:	str	lr, [sp, #28]
   4d484:	sub	sp, sp, #8
   4d488:	ldr	r2, [pc, #856]	; 4d7e8 <Mat_VarDelete+0x378>
   4d48c:	add	r2, pc, r2
   4d490:	ldr	r3, [r2]
   4d494:	str	r3, [sp]
   4d498:	ldrh	ip, [r2, #4]
   4d49c:	mov	r3, sp
   4d4a0:	strh	ip, [r3, #4]
   4d4a4:	ldrb	r2, [r2, #6]
   4d4a8:	strb	r2, [r3, #6]
   4d4ac:	cmp	r1, #0
   4d4b0:	cmpne	r0, #0
   4d4b4:	moveq	r4, #1
   4d4b8:	bne	4d4dc <Mat_VarDelete+0x6c>
   4d4bc:	mov	r0, r4
   4d4c0:	add	sp, sp, #8
   4d4c4:	ldrd	r4, [sp]
   4d4c8:	ldrd	r6, [sp, #8]
   4d4cc:	ldrd	r8, [sp, #16]
   4d4d0:	ldr	sl, [sp, #24]
   4d4d4:	add	sp, sp, #28
   4d4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   4d4dc:	mov	r5, r0
   4d4e0:	mov	r9, r1
   4d4e4:	mov	r0, sp
   4d4e8:	bl	155c <mktemp@plt>
   4d4ec:	subs	sl, r0, #0
   4d4f0:	beq	4d7d4 <Mat_VarDelete+0x364>
   4d4f4:	ldr	r3, [r5, #16]
   4d4f8:	cmp	r3, #16
   4d4fc:	moveq	r2, #16
   4d500:	beq	4d510 <Mat_VarDelete+0xa0>
   4d504:	cmp	r3, #512	; 0x200
   4d508:	moveq	r2, #512	; 0x200
   4d50c:	movne	r2, #256	; 0x100
   4d510:	ldr	r1, [r5, #4]
   4d514:	mov	r0, sl
   4d518:	bl	164c <Mat_CreateVer@plt>
   4d51c:	subs	r8, r0, #0
   4d520:	moveq	r4, #1
   4d524:	beq	4d4bc <Mat_VarDelete+0x4c>
   4d528:	mov	r0, r5
   4d52c:	bl	15ec <Mat_Rewind@plt>
   4d530:	mov	r7, #1
   4d534:	b	4d558 <Mat_VarDelete+0xe8>
   4d538:	ldr	r2, [r4, #48]	; 0x30
   4d53c:	mov	r1, r4
   4d540:	mov	r0, r8
   4d544:	bl	149c <Mat_VarWrite@plt>
   4d548:	mov	r6, r7
   4d54c:	mov	r0, r4
   4d550:	bl	158c <Mat_VarFree@plt>
   4d554:	mov	r7, r6
   4d558:	mov	r0, r5
   4d55c:	bl	1418 <Mat_VarReadNext@plt>
   4d560:	subs	r4, r0, #0
   4d564:	beq	4d580 <Mat_VarDelete+0x110>
   4d568:	mov	r1, r9
   4d56c:	ldr	r0, [r4, #36]	; 0x24
   4d570:	bl	1424 <strcmp@plt>
   4d574:	subs	r6, r0, #0
   4d578:	beq	4d54c <Mat_VarDelete+0xdc>
   4d57c:	b	4d538 <Mat_VarDelete+0xc8>
   4d580:	ldr	r9, [r8, #40]	; 0x28
   4d584:	mov	r3, #0
   4d588:	str	r3, [r8, #40]	; 0x28
   4d58c:	ldr	r6, [r8, #36]	; 0x24
   4d590:	mov	r0, r8
   4d594:	bl	1610 <Mat_Close@plt>
   4d598:	cmp	r7, #0
   4d59c:	bne	4d7ac <Mat_VarDelete+0x33c>
   4d5a0:	ldr	r1, [r5, #12]
   4d5a4:	ldr	r0, [pc, #576]	; 4d7ec <Mat_VarDelete+0x37c>
   4d5a8:	add	r0, pc, r0
   4d5ac:	bl	1cf0 <strdup_printf>
   4d5b0:	mov	r7, r0
   4d5b4:	ldr	r0, [r5]
   4d5b8:	cmp	r0, #0
   4d5bc:	beq	4d5cc <Mat_VarDelete+0x15c>
   4d5c0:	bl	1634 <fclose@plt>
   4d5c4:	mov	r3, #0
   4d5c8:	str	r3, [r5]
   4d5cc:	mov	r1, r7
   4d5d0:	mov	r0, sl
   4d5d4:	bl	49f98 <mat_copy>
   4d5d8:	mov	r4, r0
   4d5dc:	cmn	r0, #1
   4d5e0:	bne	4d644 <Mat_VarDelete+0x1d4>
   4d5e4:	cmp	r9, #0
   4d5e8:	beq	4d624 <Mat_VarDelete+0x1b4>
   4d5ec:	cmp	r6, #0
   4d5f0:	beq	4d61c <Mat_VarDelete+0x1ac>
   4d5f4:	mov	r5, r9
   4d5f8:	add	r6, r9, r6, lsl #2
   4d5fc:	b	4d60c <Mat_VarDelete+0x19c>
   4d600:	bl	1478 <free@plt>
   4d604:	cmp	r6, r5
   4d608:	beq	4d61c <Mat_VarDelete+0x1ac>
   4d60c:	ldr	r0, [r5], #4
   4d610:	cmp	r0, #0
   4d614:	bne	4d600 <Mat_VarDelete+0x190>
   4d618:	b	4d604 <Mat_VarDelete+0x194>
   4d61c:	mov	r0, r9
   4d620:	bl	1478 <free@plt>
   4d624:	mov	r2, r7
   4d628:	mov	r1, sl
   4d62c:	ldr	r0, [pc, #444]	; 4d7f0 <Mat_VarDelete+0x380>
   4d630:	add	r0, pc, r0
   4d634:	bl	161c <Mat_Critical@plt>
   4d638:	mov	r0, r7
   4d63c:	bl	1478 <free@plt>
   4d640:	b	4d4bc <Mat_VarDelete+0x4c>
   4d644:	mov	r0, sl
   4d648:	bl	1658 <remove@plt>
   4d64c:	mov	r4, r0
   4d650:	cmn	r0, #1
   4d654:	bne	4d6ac <Mat_VarDelete+0x23c>
   4d658:	cmp	r9, #0
   4d65c:	beq	4d698 <Mat_VarDelete+0x228>
   4d660:	cmp	r6, #0
   4d664:	beq	4d690 <Mat_VarDelete+0x220>
   4d668:	mov	r5, r9
   4d66c:	add	r6, r9, r6, lsl #2
   4d670:	b	4d680 <Mat_VarDelete+0x210>
   4d674:	bl	1478 <free@plt>
   4d678:	cmp	r5, r6
   4d67c:	beq	4d690 <Mat_VarDelete+0x220>
   4d680:	ldr	r0, [r5], #4
   4d684:	cmp	r0, #0
   4d688:	bne	4d674 <Mat_VarDelete+0x204>
   4d68c:	b	4d678 <Mat_VarDelete+0x208>
   4d690:	mov	r0, r9
   4d694:	bl	1478 <free@plt>
   4d698:	mov	r1, sl
   4d69c:	ldr	r0, [pc, #336]	; 4d7f4 <Mat_VarDelete+0x384>
   4d6a0:	add	r0, pc, r0
   4d6a4:	bl	161c <Mat_Critical@plt>
   4d6a8:	b	4d638 <Mat_VarDelete+0x1c8>
   4d6ac:	ldr	r1, [r5, #24]
   4d6b0:	mov	r0, r7
   4d6b4:	bl	143c <Mat_Open@plt>
   4d6b8:	subs	sl, r0, #0
   4d6bc:	beq	4d798 <Mat_VarDelete+0x328>
   4d6c0:	ldr	r0, [r5, #4]
   4d6c4:	cmp	r0, #0
   4d6c8:	beq	4d6d0 <Mat_VarDelete+0x260>
   4d6cc:	bl	1478 <free@plt>
   4d6d0:	ldr	r0, [r5, #8]
   4d6d4:	cmp	r0, #0
   4d6d8:	beq	4d6e0 <Mat_VarDelete+0x270>
   4d6dc:	bl	1478 <free@plt>
   4d6e0:	ldr	r0, [r5, #12]
   4d6e4:	cmp	r0, #0
   4d6e8:	beq	4d6f0 <Mat_VarDelete+0x280>
   4d6ec:	bl	1478 <free@plt>
   4d6f0:	ldr	r3, [r5, #40]	; 0x28
   4d6f4:	cmp	r3, #0
   4d6f8:	beq	4d740 <Mat_VarDelete+0x2d0>
   4d6fc:	ldr	r3, [r5, #36]	; 0x24
   4d700:	cmp	r3, #0
   4d704:	beq	4d738 <Mat_VarDelete+0x2c8>
   4d708:	mov	r8, #0
   4d70c:	b	4d720 <Mat_VarDelete+0x2b0>
   4d710:	add	r8, r8, #1
   4d714:	ldr	r3, [r5, #36]	; 0x24
   4d718:	cmp	r3, r8
   4d71c:	bls	4d738 <Mat_VarDelete+0x2c8>
   4d720:	ldr	r3, [r5, #40]	; 0x28
   4d724:	ldr	r0, [r3, r8, lsl #2]
   4d728:	cmp	r0, #0
   4d72c:	beq	4d710 <Mat_VarDelete+0x2a0>
   4d730:	bl	1478 <free@plt>
   4d734:	b	4d710 <Mat_VarDelete+0x2a0>
   4d738:	ldr	r0, [r5, #40]	; 0x28
   4d73c:	bl	1478 <free@plt>
   4d740:	mov	r3, sl
   4d744:	mov	r2, r5
   4d748:	add	r8, sl, #32
   4d74c:	ldr	lr, [r3]
   4d750:	ldr	ip, [r3, #4]
   4d754:	ldr	r0, [r3, #8]
   4d758:	ldr	r1, [r3, #12]
   4d75c:	str	lr, [r2]
   4d760:	str	ip, [r2, #4]
   4d764:	str	r0, [r2, #8]
   4d768:	str	r1, [r2, #12]
   4d76c:	add	r3, r3, #16
   4d770:	add	r2, r2, #16
   4d774:	cmp	r3, r8
   4d778:	bne	4d74c <Mat_VarDelete+0x2dc>
   4d77c:	ldr	r3, [r3]
   4d780:	str	r3, [r2]
   4d784:	mov	r0, sl
   4d788:	bl	1478 <free@plt>
   4d78c:	str	r6, [r5, #36]	; 0x24
   4d790:	str	r9, [r5, #40]	; 0x28
   4d794:	b	4d638 <Mat_VarDelete+0x1c8>
   4d798:	mov	r1, r7
   4d79c:	ldr	r0, [pc, #84]	; 4d7f8 <Mat_VarDelete+0x388>
   4d7a0:	add	r0, pc, r0
   4d7a4:	bl	161c <Mat_Critical@plt>
   4d7a8:	b	4d638 <Mat_VarDelete+0x1c8>
   4d7ac:	mov	r0, sl
   4d7b0:	bl	1658 <remove@plt>
   4d7b4:	mov	r4, r0
   4d7b8:	cmn	r0, #1
   4d7bc:	bne	4d4bc <Mat_VarDelete+0x4c>
   4d7c0:	mov	r1, sl
   4d7c4:	ldr	r0, [pc, #48]	; 4d7fc <Mat_VarDelete+0x38c>
   4d7c8:	add	r0, pc, r0
   4d7cc:	bl	161c <Mat_Critical@plt>
   4d7d0:	b	4d4bc <Mat_VarDelete+0x4c>
   4d7d4:	ldr	r0, [pc, #36]	; 4d800 <Mat_VarDelete+0x390>
   4d7d8:	add	r0, pc, r0
   4d7dc:	bl	161c <Mat_Critical@plt>
   4d7e0:	mov	r4, #1
   4d7e4:	b	4d4bc <Mat_VarDelete+0x4c>
   4d7e8:	.word	0x00002998
   4d7ec:	.word	0x0000264c
   4d7f0:	.word	0x00002778
   4d7f4:	.word	0x0000272c
   4d7f8:	.word	0x00002648
   4d7fc:	.word	0x00002604
   4d800:	.word	0x00002628

0004d804 <Mat_VarWriteAppend>:
   4d804:	cmp	r1, #0
   4d808:	cmpne	r0, #0
   4d80c:	beq	4d85c <Mat_VarWriteAppend+0x58>
   4d810:	str	r4, [sp, #-8]!
   4d814:	str	lr, [sp, #4]
   4d818:	sub	sp, sp, #8
   4d81c:	mov	r4, r0
   4d820:	ldr	r3, [r0, #40]	; 0x28
   4d824:	cmp	r3, #0
   4d828:	beq	4d84c <Mat_VarWriteAppend+0x48>
   4d82c:	ldr	r3, [r4, #16]
   4d830:	cmp	r3, #512	; 0x200
   4d834:	moveq	r0, #1
   4d838:	movne	r0, #2
   4d83c:	add	sp, sp, #8
   4d840:	ldr	r4, [sp]
   4d844:	add	sp, sp, #4
   4d848:	pop	{pc}		; (ldr pc, [sp], #4)
   4d84c:	str	r3, [sp, #4]
   4d850:	add	r1, sp, #4
   4d854:	bl	15a4 <Mat_GetDir@plt>
   4d858:	b	4d82c <Mat_VarWriteAppend+0x28>
   4d85c:	mvn	r0, #0
   4d860:	bx	lr

0004d864 <Mat_VarGetCell>:
   4d864:	strd	r4, [sp, #-12]!
   4d868:	str	lr, [sp, #8]
   4d86c:	sub	sp, sp, #12
   4d870:	mov	r3, #1
   4d874:	str	r3, [sp, #4]
   4d878:	subs	r4, r0, #0
   4d87c:	moveq	r0, r4
   4d880:	beq	4d8b4 <Mat_VarGetCell+0x50>
   4d884:	mov	r5, r1
   4d888:	add	r1, sp, #4
   4d88c:	mov	r0, r4
   4d890:	bl	4a3c8 <SafeMulDims>
   4d894:	cmp	r5, #0
   4d898:	movlt	r0, #0
   4d89c:	blt	4d8b4 <Mat_VarGetCell+0x50>
   4d8a0:	ldr	r3, [sp, #4]
   4d8a4:	cmp	r5, r3
   4d8a8:	movcs	r0, #0
   4d8ac:	ldrcc	r3, [r4, #40]	; 0x28
   4d8b0:	ldrcc	r0, [r3, r5, lsl #2]
   4d8b4:	add	sp, sp, #12
   4d8b8:	ldrd	r4, [sp]
   4d8bc:	add	sp, sp, #8
   4d8c0:	pop	{pc}		; (ldr pc, [sp], #4)

0004d8c4 <Mat_VarGetCells>:
   4d8c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4d8c8:	strd	r6, [sp, #8]
   4d8cc:	strd	r8, [sp, #16]
   4d8d0:	strd	sl, [sp, #24]
   4d8d4:	str	lr, [sp, #32]
   4d8d8:	sub	sp, sp, #156	; 0x9c
   4d8dc:	mov	ip, r2
   4d8e0:	str	r2, [sp]
   4d8e4:	mov	r4, #0
   4d8e8:	mov	r5, #0
   4d8ec:	strd	r4, [sp, #112]	; 0x70
   4d8f0:	strd	r4, [sp, #120]	; 0x78
   4d8f4:	strd	r4, [sp, #128]	; 0x80
   4d8f8:	strd	r4, [sp, #136]	; 0x88
   4d8fc:	strd	r4, [sp, #144]	; 0x90
   4d900:	strd	r4, [sp, #72]	; 0x48
   4d904:	strd	r4, [sp, #80]	; 0x50
   4d908:	strd	r4, [sp, #88]	; 0x58
   4d90c:	strd	r4, [sp, #96]	; 0x60
   4d910:	strd	r4, [sp, #104]	; 0x68
   4d914:	strd	r4, [sp, #32]
   4d918:	strd	r4, [sp, #40]	; 0x28
   4d91c:	strd	r4, [sp, #48]	; 0x30
   4d920:	strd	r4, [sp, #56]	; 0x38
   4d924:	strd	r4, [sp, #64]	; 0x40
   4d928:	cmp	r1, #0
   4d92c:	cmpne	r0, #0
   4d930:	beq	4db20 <Mat_VarGetCells+0x25c>
   4d934:	mov	r9, r0
   4d938:	mov	r2, r1
   4d93c:	cmp	r3, #0
   4d940:	cmpne	ip, #0
   4d944:	beq	4db48 <Mat_VarGetCells+0x284>
   4d948:	ldr	r5, [r0, #4]
   4d94c:	cmp	r5, #9
   4d950:	bgt	4db54 <Mat_VarGetCells+0x290>
   4d954:	ldr	r6, [r0, #32]
   4d958:	ldr	r1, [r6]
   4d95c:	str	r1, [sp, #32]
   4d960:	ldr	r0, [r3]
   4d964:	str	r0, [sp, #8]
   4d968:	ldr	r4, [r2]
   4d96c:	str	r4, [sp, #112]	; 0x70
   4d970:	cmp	r5, #1
   4d974:	ble	4d9d0 <Mat_VarGetCells+0x10c>
   4d978:	mov	ip, r2
   4d97c:	add	r8, sp, #112	; 0x70
   4d980:	add	r1, sp, #32
   4d984:	mov	r7, r3
   4d988:	sub	fp, r2, #4
   4d98c:	add	fp, fp, r5, lsl #2
   4d990:	str	r5, [sp, #4]
   4d994:	mov	r5, r0
   4d998:	ldr	lr, [ip, #4]!
   4d99c:	str	lr, [r8, #4]!
   4d9a0:	ldr	r0, [r1]
   4d9a4:	ldr	sl, [r6, #4]!
   4d9a8:	mul	r0, r0, sl
   4d9ac:	str	r0, [r1, #4]!
   4d9b0:	ldr	r0, [r7, #4]!
   4d9b4:	mul	r5, r0, r5
   4d9b8:	ldr	r0, [r1, #-4]
   4d9bc:	mla	r4, r0, lr, r4
   4d9c0:	cmp	ip, fp
   4d9c4:	bne	4d998 <Mat_VarGetCells+0xd4>
   4d9c8:	str	r5, [sp, #8]
   4d9cc:	ldr	r5, [sp, #4]
   4d9d0:	mov	r6, r2
   4d9d4:	str	r9, [sp, #20]
   4d9d8:	mov	r9, r3
   4d9dc:	str	r3, [sp, #16]
   4d9e0:	ldr	r7, [sp]
   4d9e4:	ldr	r8, [sp, #8]
   4d9e8:	lsl	r0, r8, #2
   4d9ec:	bl	1544 <malloc@plt>
   4d9f0:	str	r0, [sp, #28]
   4d9f4:	cmp	r8, #0
   4d9f8:	ble	4db28 <Mat_VarGetCells+0x264>
   4d9fc:	ldr	r3, [r9]
   4da00:	str	r3, [sp]
   4da04:	lsl	r3, r3, #2
   4da08:	str	r3, [sp, #12]
   4da0c:	str	r0, [sp, #24]
   4da10:	add	r9, r3, r0
   4da14:	mov	sl, #0
   4da18:	sub	fp, r5, #1
   4da1c:	add	r3, r7, #4
   4da20:	str	r3, [sp, #4]
   4da24:	b	4daa8 <Mat_VarGetCells+0x1e4>
   4da28:	ldr	lr, [r2], #4
   4da2c:	ldr	r8, [r0], #4
   4da30:	mla	r4, r8, lr, r4
   4da34:	add	r3, r3, #1
   4da38:	cmp	r5, r3
   4da3c:	beq	4da8c <Mat_VarGetCells+0x1c8>
   4da40:	ldr	r8, [r1], #4
   4da44:	ldr	lr, [ip, #4]!
   4da48:	cmp	r8, lr
   4da4c:	bne	4da28 <Mat_VarGetCells+0x164>
   4da50:	mov	lr, #0
   4da54:	str	lr, [r1, #-4]
   4da58:	ldr	lr, [r6, r3, lsl #2]
   4da5c:	str	lr, [r2]
   4da60:	cmp	fp, r3
   4da64:	ble	4da28 <Mat_VarGetCells+0x164>
   4da68:	ldr	lr, [r1]
   4da6c:	add	lr, lr, #1
   4da70:	str	lr, [r1]
   4da74:	ldr	lr, [r2, #4]
   4da78:	ldr	r8, [sp, #4]
   4da7c:	ldr	r8, [r8, r3, lsl #2]
   4da80:	add	lr, lr, r8
   4da84:	str	lr, [r2, #4]
   4da88:	b	4da28 <Mat_VarGetCells+0x164>
   4da8c:	ldr	r3, [sp]
   4da90:	add	sl, sl, r3
   4da94:	ldr	r3, [sp, #12]
   4da98:	add	r9, r9, r3
   4da9c:	ldr	r3, [sp, #8]
   4daa0:	cmp	sl, r3
   4daa4:	bge	4db28 <Mat_VarGetCells+0x264>
   4daa8:	ldr	r3, [sp]
   4daac:	cmp	r3, #0
   4dab0:	ble	4dadc <Mat_VarGetCells+0x218>
   4dab4:	ldr	r3, [sp, #20]
   4dab8:	ldr	r1, [r3, #40]	; 0x28
   4dabc:	ldr	r2, [r7]
   4dac0:	ldr	r3, [sp, #24]
   4dac4:	add	r3, r3, sl, lsl #2
   4dac8:	ldr	r0, [r1, r4, lsl #2]
   4dacc:	str	r0, [r3], #4
   4dad0:	add	r4, r4, r2
   4dad4:	cmp	r3, r9
   4dad8:	bne	4dac8 <Mat_VarGetCells+0x204>
   4dadc:	ldr	r4, [r6]
   4dae0:	str	r4, [sp, #112]	; 0x70
   4dae4:	ldr	r3, [sp, #76]	; 0x4c
   4dae8:	add	r3, r3, #1
   4daec:	str	r3, [sp, #76]	; 0x4c
   4daf0:	ldr	r2, [r7, #4]
   4daf4:	ldr	r3, [sp, #116]	; 0x74
   4daf8:	add	r3, r3, r2
   4dafc:	str	r3, [sp, #116]	; 0x74
   4db00:	cmp	r5, #1
   4db04:	ble	4da8c <Mat_VarGetCells+0x1c8>
   4db08:	add	r1, sp, #76	; 0x4c
   4db0c:	ldr	ip, [sp, #16]
   4db10:	add	r2, sp, #116	; 0x74
   4db14:	add	r0, sp, #32
   4db18:	mov	r3, #1
   4db1c:	b	4da40 <Mat_VarGetCells+0x17c>
   4db20:	mov	r3, #0
   4db24:	str	r3, [sp, #28]
   4db28:	ldr	r0, [sp, #28]
   4db2c:	add	sp, sp, #156	; 0x9c
   4db30:	ldrd	r4, [sp]
   4db34:	ldrd	r6, [sp, #8]
   4db38:	ldrd	r8, [sp, #16]
   4db3c:	ldrd	sl, [sp, #24]
   4db40:	add	sp, sp, #32
   4db44:	pop	{pc}		; (ldr pc, [sp], #4)
   4db48:	mov	r3, #0
   4db4c:	str	r3, [sp, #28]
   4db50:	b	4db28 <Mat_VarGetCells+0x264>
   4db54:	mov	r3, #0
   4db58:	str	r3, [sp, #28]
   4db5c:	b	4db28 <Mat_VarGetCells+0x264>

0004db60 <Mat_VarGetCellsLinear>:
   4db60:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4db64:	strd	r6, [sp, #8]
   4db68:	str	r8, [sp, #16]
   4db6c:	str	lr, [sp, #20]
   4db70:	subs	r8, r0, #0
   4db74:	moveq	r0, r8
   4db78:	beq	4dbbc <Mat_VarGetCellsLinear+0x5c>
   4db7c:	mov	r4, r1
   4db80:	mov	r6, r2
   4db84:	mov	r7, r3
   4db88:	lsl	r5, r3, #2
   4db8c:	mov	r0, r5
   4db90:	bl	1544 <malloc@plt>
   4db94:	cmp	r7, #0
   4db98:	ble	4dbbc <Mat_VarGetCellsLinear+0x5c>
   4db9c:	ldr	ip, [r8, #40]	; 0x28
   4dba0:	mov	r3, r0
   4dba4:	add	r1, r5, r0
   4dba8:	ldr	r2, [ip, r4, lsl #2]
   4dbac:	str	r2, [r3], #4
   4dbb0:	add	r4, r4, r6
   4dbb4:	cmp	r3, r1
   4dbb8:	bne	4dba8 <Mat_VarGetCellsLinear+0x48>
   4dbbc:	ldrd	r4, [sp]
   4dbc0:	ldrd	r6, [sp, #8]
   4dbc4:	ldr	r8, [sp, #16]
   4dbc8:	add	sp, sp, #20
   4dbcc:	pop	{pc}		; (ldr pc, [sp], #4)

0004dbd0 <Mat_VarSetCell>:
   4dbd0:	strd	r4, [sp, #-16]!
   4dbd4:	str	r6, [sp, #8]
   4dbd8:	str	lr, [sp, #12]
   4dbdc:	sub	sp, sp, #8
   4dbe0:	mov	r3, #1
   4dbe4:	str	r3, [sp, #4]
   4dbe8:	subs	r4, r0, #0
   4dbec:	beq	4dc50 <Mat_VarSetCell+0x80>
   4dbf0:	ldr	r3, [r4, #4]
   4dbf4:	cmp	r3, #0
   4dbf8:	movle	r0, #0
   4dbfc:	ble	4dc3c <Mat_VarSetCell+0x6c>
   4dc00:	mov	r6, r2
   4dc04:	mov	r5, r1
   4dc08:	add	r1, sp, #4
   4dc0c:	mov	r0, r4
   4dc10:	bl	4a3c8 <SafeMulDims>
   4dc14:	cmp	r5, #0
   4dc18:	movlt	r0, #0
   4dc1c:	blt	4dc3c <Mat_VarSetCell+0x6c>
   4dc20:	ldr	r3, [sp, #4]
   4dc24:	cmp	r5, r3
   4dc28:	movcs	r0, #0
   4dc2c:	bcs	4dc3c <Mat_VarSetCell+0x6c>
   4dc30:	ldr	r3, [r4, #40]	; 0x28
   4dc34:	ldr	r0, [r3, r5, lsl #2]
   4dc38:	str	r6, [r3, r5, lsl #2]
   4dc3c:	add	sp, sp, #8
   4dc40:	ldrd	r4, [sp]
   4dc44:	ldr	r6, [sp, #8]
   4dc48:	add	sp, sp, #12
   4dc4c:	pop	{pc}		; (ldr pc, [sp], #4)
   4dc50:	mov	r0, r4
   4dc54:	b	4dc3c <Mat_VarSetCell+0x6c>

0004dc58 <Mat_VarCreateStruct>:
   4dc58:	strd	r4, [sp, #-28]!	; 0xffffffe4
   4dc5c:	strd	r6, [sp, #8]
   4dc60:	strd	r8, [sp, #16]
   4dc64:	str	lr, [sp, #24]
   4dc68:	sub	sp, sp, #12
   4dc6c:	ldr	r6, [sp, #40]	; 0x28
   4dc70:	subs	r5, r2, #0
   4dc74:	moveq	r4, r5
   4dc78:	beq	4dd14 <Mat_VarCreateStruct+0xbc>
   4dc7c:	mov	r7, r3
   4dc80:	mov	r8, r1
   4dc84:	mov	r9, r0
   4dc88:	bl	1508 <Mat_VarCalloc@plt>
   4dc8c:	subs	r4, r0, #0
   4dc90:	beq	4dd14 <Mat_VarCreateStruct+0xbc>
   4dc94:	mov	r3, #0
   4dc98:	str	r3, [r4, #48]	; 0x30
   4dc9c:	cmp	r9, r3
   4dca0:	beq	4dcb0 <Mat_VarCreateStruct+0x58>
   4dca4:	mov	r0, r9
   4dca8:	bl	14cc <strdup@plt>
   4dcac:	str	r0, [r4, #36]	; 0x24
   4dcb0:	str	r8, [r4, #4]
   4dcb4:	lsl	r0, r8, #2
   4dcb8:	bl	1544 <malloc@plt>
   4dcbc:	str	r0, [r4, #32]
   4dcc0:	cmp	r8, #0
   4dcc4:	ble	4dd30 <Mat_VarCreateStruct+0xd8>
   4dcc8:	sub	r0, r5, #4
   4dccc:	mov	r2, #0
   4dcd0:	mov	r5, #1
   4dcd4:	ldr	r1, [r0, #4]!
   4dcd8:	ldr	r3, [r4, #32]
   4dcdc:	str	r1, [r3, r2, lsl #2]
   4dce0:	mul	r5, r1, r5
   4dce4:	add	r2, r2, #1
   4dce8:	ldr	r3, [r4, #4]
   4dcec:	cmp	r3, r2
   4dcf0:	bgt	4dcd4 <Mat_VarCreateStruct+0x7c>
   4dcf4:	mov	r3, #2
   4dcf8:	str	r3, [r4, #16]
   4dcfc:	mov	r3, #22
   4dd00:	str	r3, [r4, #8]
   4dd04:	mov	r3, #4
   4dd08:	str	r3, [r4, #12]
   4dd0c:	cmp	r6, #0
   4dd10:	bne	4dd38 <Mat_VarCreateStruct+0xe0>
   4dd14:	mov	r0, r4
   4dd18:	add	sp, sp, #12
   4dd1c:	ldrd	r4, [sp]
   4dd20:	ldrd	r6, [sp, #8]
   4dd24:	ldrd	r8, [sp, #16]
   4dd28:	add	sp, sp, #24
   4dd2c:	pop	{pc}		; (ldr pc, [sp], #4)
   4dd30:	mov	r5, #1
   4dd34:	b	4dcf4 <Mat_VarCreateStruct+0x9c>
   4dd38:	ldr	r3, [r4, #52]	; 0x34
   4dd3c:	str	r6, [r3, #4]
   4dd40:	ldr	r8, [r4, #52]	; 0x34
   4dd44:	lsl	r0, r6, #2
   4dd48:	bl	1544 <malloc@plt>
   4dd4c:	str	r0, [r8, #8]
   4dd50:	ldr	r3, [r4, #52]	; 0x34
   4dd54:	ldr	r3, [r3, #8]
   4dd58:	cmp	r3, #0
   4dd5c:	beq	4dda8 <Mat_VarCreateStruct+0x150>
   4dd60:	ldr	r0, [r7]
   4dd64:	cmp	r0, #0
   4dd68:	movne	r8, #0
   4dd6c:	beq	4dd98 <Mat_VarCreateStruct+0x140>
   4dd70:	ldr	r3, [r4, #52]	; 0x34
   4dd74:	ldr	r9, [r3, #8]
   4dd78:	bl	14cc <strdup@plt>
   4dd7c:	str	r0, [r9, r8, lsl #2]
   4dd80:	add	r8, r8, #1
   4dd84:	cmp	r6, r8
   4dd88:	beq	4ddb4 <Mat_VarCreateStruct+0x15c>
   4dd8c:	ldr	r0, [r7, #4]!
   4dd90:	cmp	r0, #0
   4dd94:	bne	4dd70 <Mat_VarCreateStruct+0x118>
   4dd98:	mov	r0, r4
   4dd9c:	bl	158c <Mat_VarFree@plt>
   4dda0:	mov	r4, #0
   4dda4:	b	4dd14 <Mat_VarCreateStruct+0xbc>
   4dda8:	mov	r0, r4
   4ddac:	bl	158c <Mat_VarFree@plt>
   4ddb0:	b	4dda0 <Mat_VarCreateStruct+0x148>
   4ddb4:	cmp	r5, #0
   4ddb8:	beq	4dd14 <Mat_VarCreateStruct+0xbc>
   4ddbc:	mov	r2, r8
   4ddc0:	mov	r1, r5
   4ddc4:	add	r0, sp, #4
   4ddc8:	bl	4a440 <SafeMul>
   4ddcc:	ldr	r2, [r4, #12]
   4ddd0:	ldr	r1, [sp, #4]
   4ddd4:	mov	r0, r4
   4ddd8:	bl	4a440 <SafeMul>
   4dddc:	ldr	r1, [r4, #12]
   4dde0:	ldr	r0, [sp, #4]
   4dde4:	bl	140c <calloc@plt>
   4dde8:	str	r0, [r4, #40]	; 0x28
   4ddec:	b	4dd14 <Mat_VarCreateStruct+0xbc>

0004ddf0 <Mat_VarAddStructField>:
   4ddf0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4ddf4:	strd	r6, [sp, #8]
   4ddf8:	strd	r8, [sp, #16]
   4ddfc:	strd	sl, [sp, #24]
   4de00:	str	lr, [sp, #32]
   4de04:	sub	sp, sp, #12
   4de08:	mov	r3, #1
   4de0c:	str	r3, [sp, #4]
   4de10:	cmp	r1, #0
   4de14:	cmpne	r0, #0
   4de18:	beq	4df50 <Mat_VarAddStructField+0x160>
   4de1c:	mov	r6, r0
   4de20:	mov	r8, r1
   4de24:	add	r1, sp, #4
   4de28:	bl	4a3c8 <SafeMulDims>
   4de2c:	ldr	r3, [r6, #52]	; 0x34
   4de30:	ldr	r4, [r3, #4]
   4de34:	add	r7, r4, #1
   4de38:	str	r7, [r3, #4]
   4de3c:	lsl	r5, r7, #2
   4de40:	ldr	r3, [r6, #52]	; 0x34
   4de44:	mov	r1, r5
   4de48:	ldr	r0, [r3, #8]
   4de4c:	bl	14d8 <realloc@plt>
   4de50:	cmp	r0, #0
   4de54:	beq	4df58 <Mat_VarAddStructField+0x168>
   4de58:	ldr	r3, [r6, #52]	; 0x34
   4de5c:	str	r0, [r3, #8]
   4de60:	ldr	r3, [r6, #52]	; 0x34
   4de64:	sub	r5, r5, #4
   4de68:	ldr	r9, [r3, #8]
   4de6c:	mov	r0, r8
   4de70:	bl	14cc <strdup@plt>
   4de74:	str	r0, [r9, r5]
   4de78:	mov	r2, r7
   4de7c:	ldr	r1, [sp, #4]
   4de80:	mov	r0, sp
   4de84:	bl	4a440 <SafeMul>
   4de88:	mov	r2, #4
   4de8c:	ldr	r1, [sp]
   4de90:	mov	r0, r6
   4de94:	bl	4a440 <SafeMul>
   4de98:	ldr	r0, [r6]
   4de9c:	bl	1544 <malloc@plt>
   4dea0:	subs	r5, r0, #0
   4dea4:	moveq	r3, #0
   4dea8:	streq	r3, [r6]
   4deac:	mvneq	r0, #0
   4deb0:	beq	4df34 <Mat_VarAddStructField+0x144>
   4deb4:	ldr	r0, [r6, #40]	; 0x28
   4deb8:	ldr	r8, [sp, #4]
   4debc:	cmp	r8, #0
   4dec0:	beq	4df28 <Mat_VarAddStructField+0x138>
   4dec4:	lsl	r7, r4, #2
   4dec8:	add	r1, r0, r7
   4decc:	rsb	sl, r7, #0
   4ded0:	mov	lr, #0
   4ded4:	mov	r2, lr
   4ded8:	mov	r9, lr
   4dedc:	b	4def8 <Mat_VarAddStructField+0x108>
   4dee0:	add	r2, ip, #1
   4dee4:	str	r9, [r5, ip, lsl #2]
   4dee8:	add	lr, lr, #1
   4deec:	add	r1, r1, r7
   4def0:	cmp	lr, r8
   4def4:	beq	4df28 <Mat_VarAddStructField+0x138>
   4def8:	cmp	r4, #0
   4defc:	moveq	ip, r2
   4df00:	beq	4dee0 <Mat_VarAddStructField+0xf0>
   4df04:	add	r3, r1, sl
   4df08:	mov	ip, r2
   4df0c:	add	r2, r5, r2, lsl #2
   4df10:	ldr	fp, [r3], #4
   4df14:	str	fp, [r2], #4
   4df18:	cmp	r3, r1
   4df1c:	bne	4df10 <Mat_VarAddStructField+0x120>
   4df20:	add	ip, r4, ip
   4df24:	b	4dee0 <Mat_VarAddStructField+0xf0>
   4df28:	bl	1478 <free@plt>
   4df2c:	str	r5, [r6, #40]	; 0x28
   4df30:	mov	r0, #0
   4df34:	add	sp, sp, #12
   4df38:	ldrd	r4, [sp]
   4df3c:	ldrd	r6, [sp, #8]
   4df40:	ldrd	r8, [sp, #16]
   4df44:	ldrd	sl, [sp, #24]
   4df48:	add	sp, sp, #32
   4df4c:	pop	{pc}		; (ldr pc, [sp], #4)
   4df50:	mvn	r0, #0
   4df54:	b	4df34 <Mat_VarAddStructField+0x144>
   4df58:	mvn	r0, #0
   4df5c:	b	4df34 <Mat_VarAddStructField+0x144>

0004df60 <Mat_VarGetNumberOfFields>:
   4df60:	cmp	r0, #0
   4df64:	beq	4df90 <Mat_VarGetNumberOfFields+0x30>
   4df68:	ldr	r3, [r0, #16]
   4df6c:	cmp	r3, #2
   4df70:	beq	4df7c <Mat_VarGetNumberOfFields+0x1c>
   4df74:	mov	r0, #0
   4df78:	bx	lr
   4df7c:	ldr	r3, [r0, #52]	; 0x34
   4df80:	cmp	r3, #0
   4df84:	beq	4df98 <Mat_VarGetNumberOfFields+0x38>
   4df88:	ldr	r0, [r3, #4]
   4df8c:	bx	lr
   4df90:	mov	r0, #0
   4df94:	bx	lr
   4df98:	mov	r0, #0
   4df9c:	bx	lr

0004dfa0 <Mat_VarGetStructFieldnames>:
   4dfa0:	cmp	r0, #0
   4dfa4:	beq	4dfcc <Mat_VarGetStructFieldnames+0x2c>
   4dfa8:	ldr	r3, [r0, #16]
   4dfac:	cmp	r3, #2
   4dfb0:	bne	4dfc8 <Mat_VarGetStructFieldnames+0x28>
   4dfb4:	ldr	r0, [r0, #52]	; 0x34
   4dfb8:	cmp	r0, #0
   4dfbc:	beq	4dfcc <Mat_VarGetStructFieldnames+0x2c>
   4dfc0:	ldr	r0, [r0, #8]
   4dfc4:	bx	lr
   4dfc8:	mov	r0, #0
   4dfcc:	bx	lr

0004dfd0 <Mat_VarGetStructFieldByIndex>:
   4dfd0:	strd	r4, [sp, #-16]!
   4dfd4:	str	r6, [sp, #8]
   4dfd8:	str	lr, [sp, #12]
   4dfdc:	sub	sp, sp, #8
   4dfe0:	mov	r3, #1
   4dfe4:	str	r3, [sp, #4]
   4dfe8:	subs	r4, r0, #0
   4dfec:	beq	4e0a8 <Mat_VarGetStructFieldByIndex+0xd8>
   4dff0:	ldr	r3, [r4, #16]
   4dff4:	cmp	r3, #2
   4dff8:	movne	r0, #0
   4dffc:	bne	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e000:	ldr	r3, [r4, #12]
   4e004:	cmp	r3, #0
   4e008:	moveq	r0, #0
   4e00c:	beq	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e010:	mov	r5, r2
   4e014:	mov	r6, r1
   4e018:	add	r1, sp, #4
   4e01c:	mov	r0, r4
   4e020:	bl	4a3c8 <SafeMulDims>
   4e024:	ldr	r3, [r4, #52]	; 0x34
   4e028:	ldr	r2, [r3, #4]
   4e02c:	ldr	r3, [sp, #4]
   4e030:	cmp	r3, r5
   4e034:	movhi	r1, #0
   4e038:	movls	r1, #1
   4e03c:	cmp	r3, #0
   4e040:	moveq	r1, #0
   4e044:	cmp	r1, #0
   4e048:	bne	4e080 <Mat_VarGetStructFieldByIndex+0xb0>
   4e04c:	cmp	r2, #0
   4e050:	moveq	r0, #0
   4e054:	beq	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e058:	cmp	r2, r6
   4e05c:	bcc	4e094 <Mat_VarGetStructFieldByIndex+0xc4>
   4e060:	mla	r2, r5, r2, r6
   4e064:	ldr	r3, [r4, #40]	; 0x28
   4e068:	ldr	r0, [r3, r2, lsl #2]
   4e06c:	add	sp, sp, #8
   4e070:	ldrd	r4, [sp]
   4e074:	ldr	r6, [sp, #8]
   4e078:	add	sp, sp, #12
   4e07c:	pop	{pc}		; (ldr pc, [sp], #4)
   4e080:	ldr	r0, [pc, #40]	; 4e0b0 <Mat_VarGetStructFieldByIndex+0xe0>
   4e084:	add	r0, pc, r0
   4e088:	bl	161c <Mat_Critical@plt>
   4e08c:	mov	r0, #0
   4e090:	b	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e094:	ldr	r0, [pc, #24]	; 4e0b4 <Mat_VarGetStructFieldByIndex+0xe4>
   4e098:	add	r0, pc, r0
   4e09c:	bl	161c <Mat_Critical@plt>
   4e0a0:	mov	r0, #0
   4e0a4:	b	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e0a8:	mov	r0, r4
   4e0ac:	b	4e06c <Mat_VarGetStructFieldByIndex+0x9c>
   4e0b0:	.word	0x000020f4
   4e0b4:	.word	0x00002118

0004e0b8 <Mat_VarGetStructFieldByName>:
   4e0b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4e0bc:	strd	r6, [sp, #8]
   4e0c0:	strd	r8, [sp, #16]
   4e0c4:	str	sl, [sp, #24]
   4e0c8:	str	lr, [sp, #28]
   4e0cc:	sub	sp, sp, #8
   4e0d0:	mov	r3, #1
   4e0d4:	str	r3, [sp, #4]
   4e0d8:	subs	r6, r0, #0
   4e0dc:	beq	4e1b0 <Mat_VarGetStructFieldByName+0xf8>
   4e0e0:	ldr	r3, [r6, #16]
   4e0e4:	cmp	r3, #2
   4e0e8:	movne	r0, #0
   4e0ec:	bne	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e0f0:	ldr	r3, [r6, #12]
   4e0f4:	cmp	r3, #0
   4e0f8:	moveq	r0, #0
   4e0fc:	beq	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e100:	mov	r9, r2
   4e104:	mov	r7, r1
   4e108:	add	r1, sp, #4
   4e10c:	mov	r0, r6
   4e110:	bl	4a3c8 <SafeMulDims>
   4e114:	ldr	r3, [r6, #52]	; 0x34
   4e118:	ldr	sl, [r3, #4]
   4e11c:	mov	r8, sl
   4e120:	cmp	sl, #0
   4e124:	ble	4e154 <Mat_VarGetStructFieldByName+0x9c>
   4e128:	ldr	r5, [r3, #8]
   4e12c:	sub	r5, r5, #4
   4e130:	mov	r4, #0
   4e134:	mov	r1, r7
   4e138:	ldr	r0, [r5, #4]!
   4e13c:	bl	1424 <strcmp@plt>
   4e140:	cmp	r0, #0
   4e144:	beq	4e174 <Mat_VarGetStructFieldByName+0xbc>
   4e148:	add	r4, r4, #1
   4e14c:	cmp	r8, r4
   4e150:	bne	4e134 <Mat_VarGetStructFieldByName+0x7c>
   4e154:	ldr	r3, [sp, #4]
   4e158:	cmp	r9, r3
   4e15c:	bcc	4e1c0 <Mat_VarGetStructFieldByName+0x108>
   4e160:	ldr	r0, [pc, #96]	; 4e1c8 <Mat_VarGetStructFieldByName+0x110>
   4e164:	add	r0, pc, r0
   4e168:	bl	161c <Mat_Critical@plt>
   4e16c:	mov	r0, #0
   4e170:	b	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e174:	ldr	r3, [sp, #4]
   4e178:	cmp	r3, r9
   4e17c:	bls	4e160 <Mat_VarGetStructFieldByName+0xa8>
   4e180:	cmp	r4, #0
   4e184:	blt	4e1b8 <Mat_VarGetStructFieldByName+0x100>
   4e188:	mla	r4, r9, sl, r4
   4e18c:	ldr	r3, [r6, #40]	; 0x28
   4e190:	ldr	r0, [r3, r4, lsl #2]
   4e194:	add	sp, sp, #8
   4e198:	ldrd	r4, [sp]
   4e19c:	ldrd	r6, [sp, #8]
   4e1a0:	ldrd	r8, [sp, #16]
   4e1a4:	ldr	sl, [sp, #24]
   4e1a8:	add	sp, sp, #28
   4e1ac:	pop	{pc}		; (ldr pc, [sp], #4)
   4e1b0:	mov	r0, r6
   4e1b4:	b	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e1b8:	mov	r0, #0
   4e1bc:	b	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e1c0:	mov	r0, #0
   4e1c4:	b	4e194 <Mat_VarGetStructFieldByName+0xdc>
   4e1c8:	.word	0x00002014

0004e1cc <Mat_VarGetStructField>:
   4e1cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   4e1d0:	strd	r6, [sp, #8]
   4e1d4:	str	lr, [sp, #16]
   4e1d8:	sub	sp, sp, #12
   4e1dc:	mov	r5, r0
   4e1e0:	mov	r6, r1
   4e1e4:	mov	r7, r2
   4e1e8:	mov	r4, r3
   4e1ec:	mov	r3, #1
   4e1f0:	str	r3, [sp, #4]
   4e1f4:	add	r1, sp, #4
   4e1f8:	bl	4a3c8 <SafeMulDims>
   4e1fc:	cmp	r4, #0
   4e200:	movlt	r0, #0
   4e204:	blt	4e268 <Mat_VarGetStructField+0x9c>
   4e208:	ldr	r3, [sp, #4]
   4e20c:	cmp	r3, #0
   4e210:	beq	4e220 <Mat_VarGetStructField+0x54>
   4e214:	cmp	r3, r4
   4e218:	movls	r0, #0
   4e21c:	bls	4e268 <Mat_VarGetStructField+0x9c>
   4e220:	ldr	r3, [r5, #52]	; 0x34
   4e224:	ldr	r2, [r3, #4]
   4e228:	cmp	r2, #0
   4e22c:	movle	r2, #0
   4e230:	movgt	r2, #1
   4e234:	cmp	r7, #2
   4e238:	movne	r3, #0
   4e23c:	andeq	r3, r2, #1
   4e240:	cmp	r3, #0
   4e244:	beq	4e27c <Mat_VarGetStructField+0xb0>
   4e248:	ldr	r1, [r6]
   4e24c:	cmp	r1, #0
   4e250:	moveq	r0, #0
   4e254:	beq	4e268 <Mat_VarGetStructField+0x9c>
   4e258:	mov	r2, r4
   4e25c:	sub	r1, r1, #1
   4e260:	mov	r0, r5
   4e264:	bl	1688 <Mat_VarGetStructFieldByIndex@plt>
   4e268:	add	sp, sp, #12
   4e26c:	ldrd	r4, [sp]
   4e270:	ldrd	r6, [sp, #8]
   4e274:	add	sp, sp, #16
   4e278:	pop	{pc}		; (ldr pc, [sp], #4)
   4e27c:	cmp	r7, #1
   4e280:	movne	r2, #0
   4e284:	andeq	r2, r2, #1
   4e288:	cmp	r2, #0
   4e28c:	beq	4e2a4 <Mat_VarGetStructField+0xd8>
   4e290:	mov	r2, r4
   4e294:	mov	r1, r6
   4e298:	mov	r0, r5
   4e29c:	bl	1670 <Mat_VarGetStructFieldByName@plt>
   4e2a0:	b	4e268 <Mat_VarGetStructField+0x9c>
   4e2a4:	mov	r0, #0
   4e2a8:	b	4e268 <Mat_VarGetStructField+0x9c>

0004e2ac <Mat_VarGetStructs>:
   4e2ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4e2b0:	strd	r6, [sp, #8]
   4e2b4:	strd	r8, [sp, #16]
   4e2b8:	strd	sl, [sp, #24]
   4e2bc:	str	lr, [sp, #32]
   4e2c0:	sub	sp, sp, #164	; 0xa4
   4e2c4:	ldr	r5, [sp, #200]	; 0xc8
   4e2c8:	mov	r6, #0
   4e2cc:	mov	r7, #0
   4e2d0:	strd	r6, [sp, #120]	; 0x78
   4e2d4:	strd	r6, [sp, #128]	; 0x80
   4e2d8:	strd	r6, [sp, #136]	; 0x88
   4e2dc:	strd	r6, [sp, #144]	; 0x90
   4e2e0:	strd	r6, [sp, #152]	; 0x98
   4e2e4:	strd	r6, [sp, #80]	; 0x50
   4e2e8:	strd	r6, [sp, #88]	; 0x58
   4e2ec:	strd	r6, [sp, #96]	; 0x60
   4e2f0:	strd	r6, [sp, #104]	; 0x68
   4e2f4:	strd	r6, [sp, #112]	; 0x70
   4e2f8:	strd	r6, [sp, #40]	; 0x28
   4e2fc:	strd	r6, [sp, #48]	; 0x30
   4e300:	strd	r6, [sp, #56]	; 0x38
   4e304:	strd	r6, [sp, #64]	; 0x40
   4e308:	strd	r6, [sp, #72]	; 0x48
   4e30c:	cmp	r1, #0
   4e310:	cmpne	r0, #0
   4e314:	beq	4e5f0 <Mat_VarGetStructs+0x344>
   4e318:	mov	r4, r0
   4e31c:	mov	ip, r1
   4e320:	cmp	r3, #0
   4e324:	cmpne	r2, #0
   4e328:	beq	4e618 <Mat_VarGetStructs+0x36c>
   4e32c:	ldr	r1, [r0, #4]
   4e330:	cmp	r1, #9
   4e334:	bgt	4e624 <Mat_VarGetStructs+0x378>
   4e338:	ldr	r1, [r0, #16]
   4e33c:	cmp	r1, #2
   4e340:	movne	r3, #0
   4e344:	strne	r3, [sp, #36]	; 0x24
   4e348:	bne	4e5f8 <Mat_VarGetStructs+0x34c>
   4e34c:	str	ip, [sp, #32]
   4e350:	str	r3, [sp, #4]
   4e354:	str	r2, [sp, #8]
   4e358:	mov	r1, #0
   4e35c:	bl	16ac <Mat_VarDuplicate@plt>
   4e360:	str	r0, [sp, #36]	; 0x24
   4e364:	cmp	r5, #0
   4e368:	moveq	r3, #1
   4e36c:	streq	r3, [r0, #44]	; 0x2c
   4e370:	ldr	r3, [r4, #52]	; 0x34
   4e374:	ldr	fp, [r3, #4]
   4e378:	ldr	r3, [r4, #32]
   4e37c:	ldr	r3, [r3]
   4e380:	str	r3, [sp, #40]	; 0x28
   4e384:	ldr	lr, [sp, #4]
   4e388:	ldr	r7, [lr]
   4e38c:	str	r7, [sp, #28]
   4e390:	ldr	r1, [sp, #32]
   4e394:	ldr	r3, [r1]
   4e398:	ldr	r9, [sp, #36]	; 0x24
   4e39c:	ldr	r2, [r9, #32]
   4e3a0:	str	r7, [r2]
   4e3a4:	ldr	r2, [r1]
   4e3a8:	str	r2, [sp, #120]	; 0x78
   4e3ac:	ldr	r2, [r4, #4]
   4e3b0:	cmp	r2, #1
   4e3b4:	ble	4e410 <Mat_VarGetStructs+0x164>
   4e3b8:	mov	r6, r1
   4e3bc:	add	r1, sp, #40	; 0x28
   4e3c0:	mov	r2, #1
   4e3c4:	add	r8, sp, #120	; 0x78
   4e3c8:	ldr	ip, [r6, #4]!
   4e3cc:	str	ip, [r8, r2, lsl #2]
   4e3d0:	ldr	r0, [r1]
   4e3d4:	ldr	sl, [r4, #32]
   4e3d8:	ldr	sl, [sl, r2, lsl #2]
   4e3dc:	mul	r0, r0, sl
   4e3e0:	str	r0, [r1, #4]!
   4e3e4:	ldr	r0, [lr, #4]!
   4e3e8:	mul	r7, r0, r7
   4e3ec:	ldr	sl, [r1, #-4]
   4e3f0:	mla	r3, sl, ip, r3
   4e3f4:	ldr	ip, [r9, #32]
   4e3f8:	str	r0, [ip, r2, lsl #2]
   4e3fc:	add	r2, r2, #1
   4e400:	ldr	r0, [r4, #4]
   4e404:	cmp	r0, r2
   4e408:	bgt	4e3c8 <Mat_VarGetStructs+0x11c>
   4e40c:	str	r7, [sp, #28]
   4e410:	mul	r6, r3, fp
   4e414:	ldr	r7, [sp, #28]
   4e418:	mul	r0, r7, fp
   4e41c:	lsl	r0, r0, #2
   4e420:	ldr	r8, [sp, #36]	; 0x24
   4e424:	str	r0, [r8]
   4e428:	bl	1544 <malloc@plt>
   4e42c:	str	r0, [sp, #12]
   4e430:	mov	r3, r8
   4e434:	str	r0, [r8, #40]	; 0x28
   4e438:	cmp	r0, #0
   4e43c:	beq	4e454 <Mat_VarGetStructs+0x1a8>
   4e440:	cmp	r7, #0
   4e444:	movne	r3, #0
   4e448:	strne	r3, [sp, #16]
   4e44c:	bne	4e5d0 <Mat_VarGetStructs+0x324>
   4e450:	b	4e5f8 <Mat_VarGetStructs+0x34c>
   4e454:	ldr	r0, [sp, #36]	; 0x24
   4e458:	bl	158c <Mat_VarFree@plt>
   4e45c:	ldr	r3, [sp, #12]
   4e460:	str	r3, [sp, #36]	; 0x24
   4e464:	b	4e5f8 <Mat_VarGetStructs+0x34c>
   4e468:	ldr	r3, [r4, #40]	; 0x28
   4e46c:	mov	r1, #1
   4e470:	ldr	r0, [r3, r6, lsl #2]
   4e474:	bl	16ac <Mat_VarDuplicate@plt>
   4e478:	str	r0, [r7, r6, lsl #2]
   4e47c:	add	r6, r6, #1
   4e480:	cmp	r6, r8
   4e484:	beq	4e4a0 <Mat_VarGetStructs+0x1f4>
   4e488:	cmp	r5, #0
   4e48c:	bne	4e468 <Mat_VarGetStructs+0x1bc>
   4e490:	ldr	r3, [r4, #40]	; 0x28
   4e494:	ldr	r3, [r3, r6, lsl #2]
   4e498:	str	r3, [r7, r6, lsl #2]
   4e49c:	b	4e47c <Mat_VarGetStructs+0x1d0>
   4e4a0:	ldr	r3, [sp, #8]
   4e4a4:	ldr	r6, [r3]
   4e4a8:	sub	r6, r6, #1
   4e4ac:	mla	r6, fp, r6, r8
   4e4b0:	add	r9, r9, #1
   4e4b4:	ldr	r3, [sp, #4]
   4e4b8:	ldr	r0, [r3]
   4e4bc:	add	sl, sl, fp
   4e4c0:	cmp	r0, r9
   4e4c4:	ble	4e4e8 <Mat_VarGetStructs+0x23c>
   4e4c8:	cmp	fp, #0
   4e4cc:	moveq	r8, r6
   4e4d0:	beq	4e4a0 <Mat_VarGetStructs+0x1f4>
   4e4d4:	add	r8, fp, r6
   4e4d8:	sub	r7, sl, r6
   4e4dc:	ldr	r3, [sp, #12]
   4e4e0:	add	r7, r3, r7, lsl #2
   4e4e4:	b	4e488 <Mat_VarGetStructs+0x1dc>
   4e4e8:	ldr	r7, [sp, #32]
   4e4ec:	ldr	r6, [r7]
   4e4f0:	str	r6, [sp, #120]	; 0x78
   4e4f4:	ldr	r3, [sp, #84]	; 0x54
   4e4f8:	add	r3, r3, #1
   4e4fc:	str	r3, [sp, #84]	; 0x54
   4e500:	ldr	r8, [sp, #8]
   4e504:	ldr	r2, [r8, #4]
   4e508:	ldr	r3, [sp, #124]	; 0x7c
   4e50c:	add	r3, r3, r2
   4e510:	str	r3, [sp, #124]	; 0x7c
   4e514:	ldr	r9, [r4, #4]
   4e518:	cmp	r9, #1
   4e51c:	ble	4e5b4 <Mat_VarGetStructs+0x308>
   4e520:	add	r1, sp, #84	; 0x54
   4e524:	ldr	lr, [sp, #4]
   4e528:	add	r2, sp, #124	; 0x7c
   4e52c:	add	ip, sp, #36	; 0x24
   4e530:	mov	r3, #1
   4e534:	sub	sl, r9, #1
   4e538:	add	r8, r8, #4
   4e53c:	str	r8, [sp, #20]
   4e540:	str	r0, [sp, #24]
   4e544:	mov	r0, r7
   4e548:	b	4e564 <Mat_VarGetStructs+0x2b8>
   4e54c:	ldr	r7, [r2], #4
   4e550:	ldr	r8, [ip, #4]!
   4e554:	mla	r6, r8, r7, r6
   4e558:	add	r3, r3, #1
   4e55c:	cmp	r3, r9
   4e560:	beq	4e5b0 <Mat_VarGetStructs+0x304>
   4e564:	ldr	r8, [r1], #4
   4e568:	ldr	r7, [lr, #4]!
   4e56c:	cmp	r8, r7
   4e570:	bne	4e54c <Mat_VarGetStructs+0x2a0>
   4e574:	mov	r7, #0
   4e578:	str	r7, [r1, #-4]
   4e57c:	ldr	r7, [r0, r3, lsl #2]
   4e580:	str	r7, [r2]
   4e584:	cmp	sl, r3
   4e588:	ble	4e54c <Mat_VarGetStructs+0x2a0>
   4e58c:	ldr	r7, [r1]
   4e590:	add	r7, r7, #1
   4e594:	str	r7, [r1]
   4e598:	ldr	r7, [r2, #4]
   4e59c:	ldr	r8, [sp, #20]
   4e5a0:	ldr	r8, [r8, r3, lsl #2]
   4e5a4:	add	r7, r7, r8
   4e5a8:	str	r7, [r2, #4]
   4e5ac:	b	4e54c <Mat_VarGetStructs+0x2a0>
   4e5b0:	ldr	r0, [sp, #24]
   4e5b4:	mul	r6, r6, fp
   4e5b8:	ldr	r3, [sp, #16]
   4e5bc:	add	r3, r3, r0
   4e5c0:	str	r3, [sp, #16]
   4e5c4:	ldr	r2, [sp, #28]
   4e5c8:	cmp	r3, r2
   4e5cc:	bcs	4e5f8 <Mat_VarGetStructs+0x34c>
   4e5d0:	ldr	r3, [sp, #4]
   4e5d4:	ldr	r0, [r3]
   4e5d8:	cmp	r0, #0
   4e5dc:	ble	4e4e8 <Mat_VarGetStructs+0x23c>
   4e5e0:	ldr	r3, [sp, #16]
   4e5e4:	mul	sl, r3, fp
   4e5e8:	mov	r9, #0
   4e5ec:	b	4e4c8 <Mat_VarGetStructs+0x21c>
   4e5f0:	mov	r3, #0
   4e5f4:	str	r3, [sp, #36]	; 0x24
   4e5f8:	ldr	r0, [sp, #36]	; 0x24
   4e5fc:	add	sp, sp, #164	; 0xa4
   4e600:	ldrd	r4, [sp]
   4e604:	ldrd	r6, [sp, #8]
   4e608:	ldrd	r8, [sp, #16]
   4e60c:	ldrd	sl, [sp, #24]
   4e610:	add	sp, sp, #32
   4e614:	pop	{pc}		; (ldr pc, [sp], #4)
   4e618:	mov	r3, #0
   4e61c:	str	r3, [sp, #36]	; 0x24
   4e620:	b	4e5f8 <Mat_VarGetStructs+0x34c>
   4e624:	mov	r3, #0
   4e628:	str	r3, [sp, #36]	; 0x24
   4e62c:	b	4e5f8 <Mat_VarGetStructs+0x34c>

0004e630 <Mat_VarGetStructsLinear>:
   4e630:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4e634:	strd	r6, [sp, #8]
   4e638:	strd	r8, [sp, #16]
   4e63c:	strd	sl, [sp, #24]
   4e640:	str	lr, [sp, #32]
   4e644:	sub	sp, sp, #28
   4e648:	subs	r7, r0, #0
   4e64c:	streq	r7, [sp, #20]
   4e650:	beq	4e7e4 <Mat_VarGetStructsLinear+0x1b4>
   4e654:	ldr	r0, [r7, #4]
   4e658:	cmp	r0, #10
   4e65c:	bgt	4e7dc <Mat_VarGetStructsLinear+0x1ac>
   4e660:	str	r3, [sp]
   4e664:	mov	r8, r2
   4e668:	mov	r4, r1
   4e66c:	mov	r1, #0
   4e670:	mov	r0, r7
   4e674:	bl	16ac <Mat_VarDuplicate@plt>
   4e678:	str	r0, [sp, #20]
   4e67c:	ldr	r3, [sp, #64]	; 0x40
   4e680:	cmp	r3, #0
   4e684:	moveq	r3, #1
   4e688:	streq	r3, [r0, #44]	; 0x2c
   4e68c:	ldr	r3, [r7, #52]	; 0x34
   4e690:	ldr	r3, [r3, #4]
   4e694:	str	r3, [sp, #4]
   4e698:	str	r3, [sp, #8]
   4e69c:	ldr	r2, [sp]
   4e6a0:	mul	r0, r2, r3
   4e6a4:	lsl	r0, r0, #2
   4e6a8:	ldr	r6, [sp, #20]
   4e6ac:	str	r0, [r6]
   4e6b0:	bl	1544 <malloc@plt>
   4e6b4:	mov	r5, r0
   4e6b8:	str	r0, [r6, #40]	; 0x28
   4e6bc:	cmp	r0, #0
   4e6c0:	beq	4e718 <Mat_VarGetStructsLinear+0xe8>
   4e6c4:	ldr	r1, [sp, #20]
   4e6c8:	ldr	r3, [r1, #32]
   4e6cc:	ldr	r0, [sp]
   4e6d0:	str	r0, [r3]
   4e6d4:	ldr	r3, [r1, #32]
   4e6d8:	mov	r2, #1
   4e6dc:	str	r2, [r3, #4]
   4e6e0:	ldr	r6, [r1, #40]	; 0x28
   4e6e4:	ldr	r3, [sp, #4]
   4e6e8:	mul	r5, r4, r3
   4e6ec:	cmp	r0, #0
   4e6f0:	ble	4e7e4 <Mat_VarGetStructsLinear+0x1b4>
   4e6f4:	sub	r8, r8, #1
   4e6f8:	mul	r2, r3, r8
   4e6fc:	str	r2, [sp, #12]
   4e700:	lsl	sl, r3, #2
   4e704:	mov	fp, r6
   4e708:	add	r6, r6, sl
   4e70c:	mov	r8, #0
   4e710:	mov	r9, r8
   4e714:	b	4e790 <Mat_VarGetStructsLinear+0x160>
   4e718:	ldr	r0, [sp, #20]
   4e71c:	bl	158c <Mat_VarFree@plt>
   4e720:	str	r5, [sp, #20]
   4e724:	b	4e7e4 <Mat_VarGetStructsLinear+0x1b4>
   4e728:	ldr	r3, [sp, #8]
   4e72c:	cmp	r3, #0
   4e730:	ble	4e770 <Mat_VarGetStructsLinear+0x140>
   4e734:	add	r4, r8, fp
   4e738:	str	r5, [sp, #16]
   4e73c:	rsb	r5, r8, r5, lsl #2
   4e740:	sub	r5, r5, fp
   4e744:	ldr	r3, [r7, #40]	; 0x28
   4e748:	add	r3, r3, r4
   4e74c:	mov	r1, #1
   4e750:	ldr	r0, [r3, r5]
   4e754:	bl	16ac <Mat_VarDuplicate@plt>
   4e758:	str	r0, [r4], #4
   4e75c:	cmp	r4, r6
   4e760:	bne	4e744 <Mat_VarGetStructsLinear+0x114>
   4e764:	ldr	r3, [sp, #4]
   4e768:	ldr	r2, [sp, #16]
   4e76c:	add	r5, r3, r2
   4e770:	ldr	r3, [sp, #12]
   4e774:	add	r5, r5, r3
   4e778:	add	r9, r9, #1
   4e77c:	add	r8, r8, sl
   4e780:	add	r6, r6, sl
   4e784:	ldr	r3, [sp]
   4e788:	cmp	r3, r9
   4e78c:	beq	4e7e4 <Mat_VarGetStructsLinear+0x1b4>
   4e790:	ldr	r3, [sp, #64]	; 0x40
   4e794:	cmp	r3, #0
   4e798:	bne	4e728 <Mat_VarGetStructsLinear+0xf8>
   4e79c:	ldr	r3, [sp, #8]
   4e7a0:	cmp	r3, #0
   4e7a4:	ble	4e770 <Mat_VarGetStructsLinear+0x140>
   4e7a8:	add	r3, r8, fp
   4e7ac:	mov	r1, r5
   4e7b0:	rsb	r5, r8, r5, lsl #2
   4e7b4:	sub	r5, r5, fp
   4e7b8:	ldr	r2, [r7, #40]	; 0x28
   4e7bc:	add	r2, r2, r3
   4e7c0:	ldr	r2, [r2, r5]
   4e7c4:	str	r2, [r3], #4
   4e7c8:	cmp	r3, r6
   4e7cc:	bne	4e7b8 <Mat_VarGetStructsLinear+0x188>
   4e7d0:	ldr	r3, [sp, #4]
   4e7d4:	add	r5, r3, r1
   4e7d8:	b	4e770 <Mat_VarGetStructsLinear+0x140>
   4e7dc:	mov	r3, #0
   4e7e0:	str	r3, [sp, #20]
   4e7e4:	ldr	r0, [sp, #20]
   4e7e8:	add	sp, sp, #28
   4e7ec:	ldrd	r4, [sp]
   4e7f0:	ldrd	r6, [sp, #8]
   4e7f4:	ldrd	r8, [sp, #16]
   4e7f8:	ldrd	sl, [sp, #24]
   4e7fc:	add	sp, sp, #32
   4e800:	pop	{pc}		; (ldr pc, [sp], #4)

0004e804 <Mat_VarSetStructFieldByIndex>:
   4e804:	strd	r4, [sp, #-20]!	; 0xffffffec
   4e808:	strd	r6, [sp, #8]
   4e80c:	str	lr, [sp, #16]
   4e810:	sub	sp, sp, #12
   4e814:	mov	ip, #1
   4e818:	str	ip, [sp, #4]
   4e81c:	subs	r4, r0, #0
   4e820:	beq	4e8c0 <Mat_VarSetStructFieldByIndex+0xbc>
   4e824:	ldr	ip, [r4, #16]
   4e828:	cmp	ip, #2
   4e82c:	movne	r6, #0
   4e830:	bne	4e8a8 <Mat_VarSetStructFieldByIndex+0xa4>
   4e834:	ldr	r6, [r4, #40]	; 0x28
   4e838:	cmp	r6, #0
   4e83c:	beq	4e8a8 <Mat_VarSetStructFieldByIndex+0xa4>
   4e840:	mov	r7, r3
   4e844:	mov	r6, r2
   4e848:	mov	r5, r1
   4e84c:	add	r1, sp, #4
   4e850:	mov	r0, r4
   4e854:	bl	4a3c8 <SafeMulDims>
   4e858:	ldr	r3, [r4, #52]	; 0x34
   4e85c:	ldr	r2, [r3, #4]
   4e860:	ldr	r3, [sp, #4]
   4e864:	cmp	r3, r6
   4e868:	cmphi	r2, r5
   4e86c:	movls	r6, #0
   4e870:	bls	4e8a8 <Mat_VarSetStructFieldByIndex+0xa4>
   4e874:	mla	r2, r6, r2, r5
   4e878:	ldr	r3, [r4, #40]	; 0x28
   4e87c:	ldr	r6, [r3, r2, lsl #2]
   4e880:	str	r7, [r3, r2, lsl #2]
   4e884:	ldr	r0, [r7, #36]	; 0x24
   4e888:	cmp	r0, #0
   4e88c:	beq	4e894 <Mat_VarSetStructFieldByIndex+0x90>
   4e890:	bl	1478 <free@plt>
   4e894:	ldr	r3, [r4, #52]	; 0x34
   4e898:	ldr	r3, [r3, #8]
   4e89c:	ldr	r0, [r3, r5, lsl #2]
   4e8a0:	bl	14cc <strdup@plt>
   4e8a4:	str	r0, [r7, #36]	; 0x24
   4e8a8:	mov	r0, r6
   4e8ac:	add	sp, sp, #12
   4e8b0:	ldrd	r4, [sp]
   4e8b4:	ldrd	r6, [sp, #8]
   4e8b8:	add	sp, sp, #16
   4e8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   4e8c0:	mov	r6, r4
   4e8c4:	b	4e8a8 <Mat_VarSetStructFieldByIndex+0xa4>

0004e8c8 <Mat_VarSetStructFieldByName>:
   4e8c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4e8cc:	strd	r6, [sp, #8]
   4e8d0:	strd	r8, [sp, #16]
   4e8d4:	strd	sl, [sp, #24]
   4e8d8:	str	lr, [sp, #32]
   4e8dc:	sub	sp, sp, #12
   4e8e0:	mov	ip, #1
   4e8e4:	str	ip, [sp, #4]
   4e8e8:	subs	r7, r0, #0
   4e8ec:	beq	4e9e4 <Mat_VarSetStructFieldByName+0x11c>
   4e8f0:	ldr	r0, [r7, #16]
   4e8f4:	cmp	r0, #2
   4e8f8:	movne	r5, #0
   4e8fc:	bne	4e9c4 <Mat_VarSetStructFieldByName+0xfc>
   4e900:	ldr	r5, [r7, #40]	; 0x28
   4e904:	cmp	r5, #0
   4e908:	beq	4e9c4 <Mat_VarSetStructFieldByName+0xfc>
   4e90c:	mov	r9, r3
   4e910:	mov	fp, r2
   4e914:	mov	r6, r1
   4e918:	add	r1, sp, #4
   4e91c:	mov	r0, r7
   4e920:	bl	4a3c8 <SafeMulDims>
   4e924:	ldr	r3, [r7, #52]	; 0x34
   4e928:	ldr	sl, [r3, #4]
   4e92c:	mov	r8, sl
   4e930:	cmp	sl, #0
   4e934:	ble	4e9ec <Mat_VarSetStructFieldByName+0x124>
   4e938:	ldr	r5, [r3, #8]
   4e93c:	sub	r5, r5, #4
   4e940:	mov	r4, #0
   4e944:	mov	r1, r6
   4e948:	ldr	r0, [r5, #4]!
   4e94c:	bl	1424 <strcmp@plt>
   4e950:	cmp	r0, #0
   4e954:	beq	4e96c <Mat_VarSetStructFieldByName+0xa4>
   4e958:	add	r4, r4, #1
   4e95c:	cmp	r8, r4
   4e960:	bne	4e944 <Mat_VarSetStructFieldByName+0x7c>
   4e964:	mov	r5, #0
   4e968:	b	4e9c4 <Mat_VarSetStructFieldByName+0xfc>
   4e96c:	ldr	r2, [sp, #4]
   4e970:	cmp	r2, fp
   4e974:	movls	r3, #0
   4e978:	movhi	r3, #1
   4e97c:	cmp	r4, #0
   4e980:	movlt	r3, #0
   4e984:	cmp	r3, #0
   4e988:	beq	4e9f4 <Mat_VarSetStructFieldByName+0x12c>
   4e98c:	mov	r6, r4
   4e990:	mla	r4, fp, sl, r4
   4e994:	ldr	r3, [r7, #40]	; 0x28
   4e998:	ldr	r5, [r3, r4, lsl #2]
   4e99c:	str	r9, [r3, r4, lsl #2]
   4e9a0:	ldr	r0, [r9, #36]	; 0x24
   4e9a4:	cmp	r0, #0
   4e9a8:	beq	4e9b0 <Mat_VarSetStructFieldByName+0xe8>
   4e9ac:	bl	1478 <free@plt>
   4e9b0:	ldr	r3, [r7, #52]	; 0x34
   4e9b4:	ldr	r3, [r3, #8]
   4e9b8:	ldr	r0, [r3, r6, lsl #2]
   4e9bc:	bl	14cc <strdup@plt>
   4e9c0:	str	r0, [r9, #36]	; 0x24
   4e9c4:	mov	r0, r5
   4e9c8:	add	sp, sp, #12
   4e9cc:	ldrd	r4, [sp]
   4e9d0:	ldrd	r6, [sp, #8]
   4e9d4:	ldrd	r8, [sp, #16]
   4e9d8:	ldrd	sl, [sp, #24]
   4e9dc:	add	sp, sp, #32
   4e9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   4e9e4:	mov	r5, r7
   4e9e8:	b	4e9c4 <Mat_VarSetStructFieldByName+0xfc>
   4e9ec:	mov	r5, #0
   4e9f0:	b	4e9c4 <Mat_VarSetStructFieldByName+0xfc>
   4e9f4:	mov	r5, #0
   4e9f8:	b	4e9c4 <Mat_VarSetStructFieldByName+0xfc>

0004e9fc <__aeabi_drsub>:
   4e9fc:	eor	r1, r1, #-2147483648	; 0x80000000
   4ea00:	b	4ea08 <__adddf3>

0004ea04 <__aeabi_dsub>:
   4ea04:	eor	r3, r3, #-2147483648	; 0x80000000

0004ea08 <__adddf3>:
   4ea08:	push	{r4, r5, lr}
   4ea0c:	lsl	r4, r1, #1
   4ea10:	lsl	r5, r3, #1
   4ea14:	teq	r4, r5
   4ea18:	teqeq	r0, r2
   4ea1c:	orrsne	ip, r4, r0
   4ea20:	orrsne	ip, r5, r2
   4ea24:	mvnsne	ip, r4, asr #21
   4ea28:	mvnsne	ip, r5, asr #21
   4ea2c:	beq	4ec18 <__adddf3+0x210>
   4ea30:	lsr	r4, r4, #21
   4ea34:	rsbs	r5, r4, r5, lsr #21
   4ea38:	rsblt	r5, r5, #0
   4ea3c:	ble	4ea5c <__adddf3+0x54>
   4ea40:	add	r4, r4, r5
   4ea44:	eor	r2, r0, r2
   4ea48:	eor	r3, r1, r3
   4ea4c:	eor	r0, r2, r0
   4ea50:	eor	r1, r3, r1
   4ea54:	eor	r2, r0, r2
   4ea58:	eor	r3, r1, r3
   4ea5c:	cmp	r5, #54	; 0x36
   4ea60:	pophi	{r4, r5, pc}
   4ea64:	tst	r1, #-2147483648	; 0x80000000
   4ea68:	lsl	r1, r1, #12
   4ea6c:	mov	ip, #1048576	; 0x100000
   4ea70:	orr	r1, ip, r1, lsr #12
   4ea74:	beq	4ea80 <__adddf3+0x78>
   4ea78:	rsbs	r0, r0, #0
   4ea7c:	rsc	r1, r1, #0
   4ea80:	tst	r3, #-2147483648	; 0x80000000
   4ea84:	lsl	r3, r3, #12
   4ea88:	orr	r3, ip, r3, lsr #12
   4ea8c:	beq	4ea98 <__adddf3+0x90>
   4ea90:	rsbs	r2, r2, #0
   4ea94:	rsc	r3, r3, #0
   4ea98:	teq	r4, r5
   4ea9c:	beq	4ec00 <__adddf3+0x1f8>
   4eaa0:	sub	r4, r4, #1
   4eaa4:	rsbs	lr, r5, #32
   4eaa8:	blt	4eac4 <__adddf3+0xbc>
   4eaac:	lsl	ip, r2, lr
   4eab0:	adds	r0, r0, r2, lsr r5
   4eab4:	adc	r1, r1, #0
   4eab8:	adds	r0, r0, r3, lsl lr
   4eabc:	adcs	r1, r1, r3, asr r5
   4eac0:	b	4eae0 <__adddf3+0xd8>
   4eac4:	sub	r5, r5, #32
   4eac8:	add	lr, lr, #32
   4eacc:	cmp	r2, #1
   4ead0:	lsl	ip, r3, lr
   4ead4:	orrcs	ip, ip, #2
   4ead8:	adds	r0, r0, r3, asr r5
   4eadc:	adcs	r1, r1, r3, asr #31
   4eae0:	and	r5, r1, #-2147483648	; 0x80000000
   4eae4:	bpl	4eaf4 <__adddf3+0xec>
   4eae8:	rsbs	ip, ip, #0
   4eaec:	rscs	r0, r0, #0
   4eaf0:	rsc	r1, r1, #0
   4eaf4:	cmp	r1, #1048576	; 0x100000
   4eaf8:	bcc	4eb38 <__adddf3+0x130>
   4eafc:	cmp	r1, #2097152	; 0x200000
   4eb00:	bcc	4eb20 <__adddf3+0x118>
   4eb04:	lsrs	r1, r1, #1
   4eb08:	rrxs	r0, r0
   4eb0c:	rrx	ip, ip
   4eb10:	add	r4, r4, #1
   4eb14:	lsl	r2, r4, #21
   4eb18:	cmn	r2, #4194304	; 0x400000
   4eb1c:	bcs	4ec78 <__adddf3+0x270>
   4eb20:	cmp	ip, #-2147483648	; 0x80000000
   4eb24:	lsrseq	ip, r0, #1
   4eb28:	adcs	r0, r0, #0
   4eb2c:	adc	r1, r1, r4, lsl #20
   4eb30:	orr	r1, r1, r5
   4eb34:	pop	{r4, r5, pc}
   4eb38:	lsls	ip, ip, #1
   4eb3c:	adcs	r0, r0, r0
   4eb40:	adc	r1, r1, r1
   4eb44:	tst	r1, #1048576	; 0x100000
   4eb48:	sub	r4, r4, #1
   4eb4c:	bne	4eb20 <__adddf3+0x118>
   4eb50:	teq	r1, #0
   4eb54:	moveq	r1, r0
   4eb58:	moveq	r0, #0
   4eb5c:	clz	r3, r1
   4eb60:	addeq	r3, r3, #32
   4eb64:	sub	r3, r3, #11
   4eb68:	subs	r2, r3, #32
   4eb6c:	bge	4eb90 <__adddf3+0x188>
   4eb70:	adds	r2, r2, #12
   4eb74:	ble	4eb8c <__adddf3+0x184>
   4eb78:	add	ip, r2, #20
   4eb7c:	rsb	r2, r2, #12
   4eb80:	lsl	r0, r1, ip
   4eb84:	lsr	r1, r1, r2
   4eb88:	b	4eba0 <__adddf3+0x198>
   4eb8c:	add	r2, r2, #20
   4eb90:	rsble	ip, r2, #32
   4eb94:	lsl	r1, r1, r2
   4eb98:	orrle	r1, r1, r0, lsr ip
   4eb9c:	lslle	r0, r0, r2
   4eba0:	subs	r4, r4, r3
   4eba4:	addge	r1, r1, r4, lsl #20
   4eba8:	orrge	r1, r1, r5
   4ebac:	popge	{r4, r5, pc}
   4ebb0:	mvn	r4, r4
   4ebb4:	subs	r4, r4, #31
   4ebb8:	bge	4ebf4 <__adddf3+0x1ec>
   4ebbc:	adds	r4, r4, #12
   4ebc0:	bgt	4ebdc <__adddf3+0x1d4>
   4ebc4:	add	r4, r4, #20
   4ebc8:	rsb	r2, r4, #32
   4ebcc:	lsr	r0, r0, r4
   4ebd0:	orr	r0, r0, r1, lsl r2
   4ebd4:	orr	r1, r5, r1, lsr r4
   4ebd8:	pop	{r4, r5, pc}
   4ebdc:	rsb	r4, r4, #12
   4ebe0:	rsb	r2, r4, #32
   4ebe4:	lsr	r0, r0, r2
   4ebe8:	orr	r0, r0, r1, lsl r4
   4ebec:	mov	r1, r5
   4ebf0:	pop	{r4, r5, pc}
   4ebf4:	lsr	r0, r1, r4
   4ebf8:	mov	r1, r5
   4ebfc:	pop	{r4, r5, pc}
   4ec00:	teq	r4, #0
   4ec04:	eor	r3, r3, #1048576	; 0x100000
   4ec08:	eoreq	r1, r1, #1048576	; 0x100000
   4ec0c:	addeq	r4, r4, #1
   4ec10:	subne	r5, r5, #1
   4ec14:	b	4eaa0 <__adddf3+0x98>
   4ec18:	mvns	ip, r4, asr #21
   4ec1c:	mvnsne	ip, r5, asr #21
   4ec20:	beq	4ec88 <__adddf3+0x280>
   4ec24:	teq	r4, r5
   4ec28:	teqeq	r0, r2
   4ec2c:	beq	4ec40 <__adddf3+0x238>
   4ec30:	orrs	ip, r4, r0
   4ec34:	moveq	r1, r3
   4ec38:	moveq	r0, r2
   4ec3c:	pop	{r4, r5, pc}
   4ec40:	teq	r1, r3
   4ec44:	movne	r1, #0
   4ec48:	movne	r0, #0
   4ec4c:	popne	{r4, r5, pc}
   4ec50:	lsrs	ip, r4, #21
   4ec54:	bne	4ec68 <__adddf3+0x260>
   4ec58:	lsls	r0, r0, #1
   4ec5c:	adcs	r1, r1, r1
   4ec60:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4ec64:	pop	{r4, r5, pc}
   4ec68:	adds	r4, r4, #4194304	; 0x400000
   4ec6c:	addcc	r1, r1, #1048576	; 0x100000
   4ec70:	popcc	{r4, r5, pc}
   4ec74:	and	r5, r1, #-2147483648	; 0x80000000
   4ec78:	orr	r1, r5, #2130706432	; 0x7f000000
   4ec7c:	orr	r1, r1, #15728640	; 0xf00000
   4ec80:	mov	r0, #0
   4ec84:	pop	{r4, r5, pc}
   4ec88:	mvns	ip, r4, asr #21
   4ec8c:	movne	r1, r3
   4ec90:	movne	r0, r2
   4ec94:	mvnseq	ip, r5, asr #21
   4ec98:	movne	r3, r1
   4ec9c:	movne	r2, r0
   4eca0:	orrs	r4, r0, r1, lsl #12
   4eca4:	orrseq	r5, r2, r3, lsl #12
   4eca8:	teqeq	r1, r3
   4ecac:	orrne	r1, r1, #524288	; 0x80000
   4ecb0:	pop	{r4, r5, pc}

0004ecb4 <__aeabi_ui2d>:
   4ecb4:	teq	r0, #0
   4ecb8:	moveq	r1, #0
   4ecbc:	bxeq	lr
   4ecc0:	push	{r4, r5, lr}
   4ecc4:	mov	r4, #1024	; 0x400
   4ecc8:	add	r4, r4, #50	; 0x32
   4eccc:	mov	r5, #0
   4ecd0:	mov	r1, #0
   4ecd4:	b	4eb50 <__adddf3+0x148>

0004ecd8 <__aeabi_i2d>:
   4ecd8:	teq	r0, #0
   4ecdc:	moveq	r1, #0
   4ece0:	bxeq	lr
   4ece4:	push	{r4, r5, lr}
   4ece8:	mov	r4, #1024	; 0x400
   4ecec:	add	r4, r4, #50	; 0x32
   4ecf0:	ands	r5, r0, #-2147483648	; 0x80000000
   4ecf4:	rsbmi	r0, r0, #0
   4ecf8:	mov	r1, #0
   4ecfc:	b	4eb50 <__adddf3+0x148>

0004ed00 <__aeabi_f2d>:
   4ed00:	lsls	r2, r0, #1
   4ed04:	asr	r1, r2, #3
   4ed08:	rrx	r1, r1
   4ed0c:	lsl	r0, r2, #28
   4ed10:	andsne	r3, r2, #-16777216	; 0xff000000
   4ed14:	teqne	r3, #-16777216	; 0xff000000
   4ed18:	eorne	r1, r1, #939524096	; 0x38000000
   4ed1c:	bxne	lr
   4ed20:	bics	r2, r2, #-16777216	; 0xff000000
   4ed24:	bxeq	lr
   4ed28:	teq	r3, #-16777216	; 0xff000000
   4ed2c:	orreq	r1, r1, #524288	; 0x80000
   4ed30:	bxeq	lr
   4ed34:	push	{r4, r5, lr}
   4ed38:	mov	r4, #896	; 0x380
   4ed3c:	and	r5, r1, #-2147483648	; 0x80000000
   4ed40:	bic	r1, r1, #-2147483648	; 0x80000000
   4ed44:	b	4eb50 <__adddf3+0x148>

0004ed48 <__aeabi_ul2d>:
   4ed48:	orrs	r2, r0, r1
   4ed4c:	bxeq	lr
   4ed50:	push	{r4, r5, lr}
   4ed54:	mov	r5, #0
   4ed58:	b	4ed78 <__aeabi_l2d+0x1c>

0004ed5c <__aeabi_l2d>:
   4ed5c:	orrs	r2, r0, r1
   4ed60:	bxeq	lr
   4ed64:	push	{r4, r5, lr}
   4ed68:	ands	r5, r1, #-2147483648	; 0x80000000
   4ed6c:	bpl	4ed78 <__aeabi_l2d+0x1c>
   4ed70:	rsbs	r0, r0, #0
   4ed74:	rsc	r1, r1, #0
   4ed78:	mov	r4, #1024	; 0x400
   4ed7c:	add	r4, r4, #50	; 0x32
   4ed80:	lsrs	ip, r1, #22
   4ed84:	beq	4eaf4 <__adddf3+0xec>
   4ed88:	mov	r2, #3
   4ed8c:	lsrs	ip, ip, #3
   4ed90:	addne	r2, r2, #3
   4ed94:	lsrs	ip, ip, #3
   4ed98:	addne	r2, r2, #3
   4ed9c:	add	r2, r2, ip, lsr #3
   4eda0:	rsb	r3, r2, #32
   4eda4:	lsl	ip, r0, r3
   4eda8:	lsr	r0, r0, r2
   4edac:	orr	r0, r0, r1, lsl r3
   4edb0:	lsr	r1, r1, r2
   4edb4:	add	r4, r4, r2
   4edb8:	b	4eaf4 <__adddf3+0xec>

0004edbc <__aeabi_frsub>:
   4edbc:	eor	r0, r0, #-2147483648	; 0x80000000
   4edc0:	b	4edc8 <__addsf3>

0004edc4 <__aeabi_fsub>:
   4edc4:	eor	r1, r1, #-2147483648	; 0x80000000

0004edc8 <__addsf3>:
   4edc8:	lsls	r2, r0, #1
   4edcc:	lslsne	r3, r1, #1
   4edd0:	teqne	r2, r3
   4edd4:	mvnsne	ip, r2, asr #24
   4edd8:	mvnsne	ip, r3, asr #24
   4eddc:	beq	4eed4 <__addsf3+0x10c>
   4ede0:	lsr	r2, r2, #24
   4ede4:	rsbs	r3, r2, r3, lsr #24
   4ede8:	addgt	r2, r2, r3
   4edec:	eorgt	r1, r0, r1
   4edf0:	eorgt	r0, r1, r0
   4edf4:	eorgt	r1, r0, r1
   4edf8:	rsblt	r3, r3, #0
   4edfc:	cmp	r3, #25
   4ee00:	bxhi	lr
   4ee04:	tst	r0, #-2147483648	; 0x80000000
   4ee08:	orr	r0, r0, #8388608	; 0x800000
   4ee0c:	bic	r0, r0, #-16777216	; 0xff000000
   4ee10:	rsbne	r0, r0, #0
   4ee14:	tst	r1, #-2147483648	; 0x80000000
   4ee18:	orr	r1, r1, #8388608	; 0x800000
   4ee1c:	bic	r1, r1, #-16777216	; 0xff000000
   4ee20:	rsbne	r1, r1, #0
   4ee24:	teq	r2, r3
   4ee28:	beq	4eebc <__addsf3+0xf4>
   4ee2c:	sub	r2, r2, #1
   4ee30:	adds	r0, r0, r1, asr r3
   4ee34:	rsb	r3, r3, #32
   4ee38:	lsl	r1, r1, r3
   4ee3c:	and	r3, r0, #-2147483648	; 0x80000000
   4ee40:	bpl	4ee4c <__addsf3+0x84>
   4ee44:	rsbs	r1, r1, #0
   4ee48:	rsc	r0, r0, #0
   4ee4c:	cmp	r0, #8388608	; 0x800000
   4ee50:	bcc	4ee84 <__addsf3+0xbc>
   4ee54:	cmp	r0, #16777216	; 0x1000000
   4ee58:	bcc	4ee70 <__addsf3+0xa8>
   4ee5c:	lsrs	r0, r0, #1
   4ee60:	rrx	r1, r1
   4ee64:	add	r2, r2, #1
   4ee68:	cmp	r2, #254	; 0xfe
   4ee6c:	bcs	4ef28 <__addsf3+0x160>
   4ee70:	cmp	r1, #-2147483648	; 0x80000000
   4ee74:	adc	r0, r0, r2, lsl #23
   4ee78:	biceq	r0, r0, #1
   4ee7c:	orr	r0, r0, r3
   4ee80:	bx	lr
   4ee84:	lsls	r1, r1, #1
   4ee88:	adc	r0, r0, r0
   4ee8c:	tst	r0, #8388608	; 0x800000
   4ee90:	sub	r2, r2, #1
   4ee94:	bne	4ee70 <__addsf3+0xa8>
   4ee98:	clz	ip, r0
   4ee9c:	sub	ip, ip, #8
   4eea0:	subs	r2, r2, ip
   4eea4:	lsl	r0, r0, ip
   4eea8:	addge	r0, r0, r2, lsl #23
   4eeac:	rsblt	r2, r2, #0
   4eeb0:	orrge	r0, r0, r3
   4eeb4:	orrlt	r0, r3, r0, lsr r2
   4eeb8:	bx	lr
   4eebc:	teq	r2, #0
   4eec0:	eor	r1, r1, #8388608	; 0x800000
   4eec4:	eoreq	r0, r0, #8388608	; 0x800000
   4eec8:	addeq	r2, r2, #1
   4eecc:	subne	r3, r3, #1
   4eed0:	b	4ee2c <__addsf3+0x64>
   4eed4:	lsl	r3, r1, #1
   4eed8:	mvns	ip, r2, asr #24
   4eedc:	mvnsne	ip, r3, asr #24
   4eee0:	beq	4ef34 <__addsf3+0x16c>
   4eee4:	teq	r2, r3
   4eee8:	beq	4eef8 <__addsf3+0x130>
   4eeec:	teq	r2, #0
   4eef0:	moveq	r0, r1
   4eef4:	bx	lr
   4eef8:	teq	r0, r1
   4eefc:	movne	r0, #0
   4ef00:	bxne	lr
   4ef04:	tst	r2, #-16777216	; 0xff000000
   4ef08:	bne	4ef18 <__addsf3+0x150>
   4ef0c:	lsls	r0, r0, #1
   4ef10:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4ef14:	bx	lr
   4ef18:	adds	r2, r2, #33554432	; 0x2000000
   4ef1c:	addcc	r0, r0, #8388608	; 0x800000
   4ef20:	bxcc	lr
   4ef24:	and	r3, r0, #-2147483648	; 0x80000000
   4ef28:	orr	r0, r3, #2130706432	; 0x7f000000
   4ef2c:	orr	r0, r0, #8388608	; 0x800000
   4ef30:	bx	lr
   4ef34:	mvns	r2, r2, asr #24
   4ef38:	movne	r0, r1
   4ef3c:	mvnseq	r3, r3, asr #24
   4ef40:	movne	r1, r0
   4ef44:	lsls	r2, r0, #9
   4ef48:	lslseq	r3, r1, #9
   4ef4c:	teqeq	r0, r1
   4ef50:	orrne	r0, r0, #4194304	; 0x400000
   4ef54:	bx	lr

0004ef58 <__aeabi_ui2f>:
   4ef58:	mov	r3, #0
   4ef5c:	b	4ef68 <__aeabi_i2f+0x8>

0004ef60 <__aeabi_i2f>:
   4ef60:	ands	r3, r0, #-2147483648	; 0x80000000
   4ef64:	rsbmi	r0, r0, #0
   4ef68:	movs	ip, r0
   4ef6c:	bxeq	lr
   4ef70:	orr	r3, r3, #1258291200	; 0x4b000000
   4ef74:	mov	r1, r0
   4ef78:	mov	r0, #0
   4ef7c:	b	4efc0 <__aeabi_l2f+0x30>

0004ef80 <__aeabi_ul2f>:
   4ef80:	orrs	r2, r0, r1
   4ef84:	bxeq	lr
   4ef88:	mov	r3, #0
   4ef8c:	b	4efa8 <__aeabi_l2f+0x18>

0004ef90 <__aeabi_l2f>:
   4ef90:	orrs	r2, r0, r1
   4ef94:	bxeq	lr
   4ef98:	ands	r3, r1, #-2147483648	; 0x80000000
   4ef9c:	bpl	4efa8 <__aeabi_l2f+0x18>
   4efa0:	rsbs	r0, r0, #0
   4efa4:	rsc	r1, r1, #0
   4efa8:	movs	ip, r1
   4efac:	moveq	ip, r0
   4efb0:	moveq	r1, r0
   4efb4:	moveq	r0, #0
   4efb8:	orr	r3, r3, #1526726656	; 0x5b000000
   4efbc:	subeq	r3, r3, #268435456	; 0x10000000
   4efc0:	sub	r3, r3, #8388608	; 0x800000
   4efc4:	clz	r2, ip
   4efc8:	subs	r2, r2, #8
   4efcc:	sub	r3, r3, r2, lsl #23
   4efd0:	blt	4eff0 <__aeabi_l2f+0x60>
   4efd4:	add	r3, r3, r1, lsl r2
   4efd8:	lsl	ip, r0, r2
   4efdc:	rsb	r2, r2, #32
   4efe0:	cmp	ip, #-2147483648	; 0x80000000
   4efe4:	adc	r0, r3, r0, lsr r2
   4efe8:	biceq	r0, r0, #1
   4efec:	bx	lr
   4eff0:	add	r2, r2, #32
   4eff4:	lsl	ip, r1, r2
   4eff8:	rsb	r2, r2, #32
   4effc:	orrs	r0, r0, ip, lsl #1
   4f000:	adc	r0, r3, r1, lsr r2
   4f004:	biceq	r0, r0, ip, lsr #31
   4f008:	bx	lr

0004f00c <__aeabi_f2lz>:
   4f00c:	vmov	s15, r0
   4f010:	vcmpe.f32	s15, #0.0
   4f014:	vmrs	APSR_nzcv, fpscr
   4f018:	bmi	4f020 <__aeabi_f2lz+0x14>
   4f01c:	b	4f068 <__aeabi_f2ulz>
   4f020:	push	{r4, lr}
   4f024:	eor	r0, r0, #-2147483648	; 0x80000000
   4f028:	bl	4f068 <__aeabi_f2ulz>
   4f02c:	rsbs	r0, r0, #0
   4f030:	rsc	r1, r1, #0
   4f034:	pop	{r4, pc}

0004f038 <__aeabi_d2lz>:
   4f038:	vmov	d7, r0, r1
   4f03c:	vcmpe.f64	d7, #0.0
   4f040:	vmrs	APSR_nzcv, fpscr
   4f044:	bmi	4f04c <__aeabi_d2lz+0x14>
   4f048:	b	4f0a8 <__aeabi_d2ulz>
   4f04c:	push	{r4, lr}
   4f050:	eor	r1, r1, #-2147483648	; 0x80000000
   4f054:	bl	4f0a8 <__aeabi_d2ulz>
   4f058:	rsbs	r0, r0, #0
   4f05c:	rsc	r1, r1, #0
   4f060:	pop	{r4, pc}
   4f064:	andeq	r0, r0, r0

0004f068 <__aeabi_f2ulz>:
   4f068:	vmov	s15, r0
   4f06c:	vldr	d5, [pc, #36]	; 4f098 <__aeabi_f2ulz+0x30>
   4f070:	vcvt.f64.f32	d6, s15
   4f074:	vldr	d7, [pc, #36]	; 4f0a0 <__aeabi_f2ulz+0x38>
   4f078:	vmul.f64	d7, d6, d7
   4f07c:	vcvt.u32.f64	s14, d7
   4f080:	vcvt.f64.u32	d4, s14
   4f084:	vmov	r1, s14
   4f088:	vmls.f64	d6, d4, d5
   4f08c:	vcvt.u32.f64	s15, d6
   4f090:	vmov	r0, s15
   4f094:	bx	lr
   4f098:	.word	0x00000000
   4f09c:	.word	0x41f00000
   4f0a0:	.word	0x00000000
   4f0a4:	.word	0x3df00000

0004f0a8 <__aeabi_d2ulz>:
   4f0a8:	vmov	d6, r0, r1
   4f0ac:	vldr	d7, [pc, #36]	; 4f0d8 <__aeabi_d2ulz+0x30>
   4f0b0:	vldr	d5, [pc, #40]	; 4f0e0 <__aeabi_d2ulz+0x38>
   4f0b4:	vmul.f64	d7, d6, d7
   4f0b8:	vcvt.u32.f64	s14, d7
   4f0bc:	vcvt.f64.u32	d4, s14
   4f0c0:	vmov	r1, s14
   4f0c4:	vmls.f64	d6, d4, d5
   4f0c8:	vcvt.u32.f64	s15, d6
   4f0cc:	vmov	r0, s15
   4f0d0:	bx	lr
   4f0d4:	nop			; (mov r0, r0)
   4f0d8:	.word	0x00000000
   4f0dc:	.word	0x3df00000
   4f0e0:	.word	0x00000000
   4f0e4:	.word	0x41f00000

Disassembly of section .fini:

0004f0e8 <_fini>:
   4f0e8:	push	{r3, lr}
   4f0ec:	pop	{r3, pc}
