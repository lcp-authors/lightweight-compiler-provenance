
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

00000944 <_init>:
 944:	push	{r3, lr}
 948:	bl	afc <call_weak_fn>
 94c:	pop	{r3, pc}

Disassembly of section .plt:

00000950 <.plt>:
 950:	push	{lr}		; (str lr, [sp, #-4]!)
 954:	ldr	lr, [pc, #4]	; 960 <.plt+0x10>
 958:	add	lr, pc, lr
 95c:	ldr	pc, [lr, #8]!
 960:	.word	0x000126a0

00000964 <calloc@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #73728	; 0x12000
 96c:	ldr	pc, [ip, #1696]!	; 0x6a0

00000970 <strstr@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #73728	; 0x12000
 978:	ldr	pc, [ip, #1688]!	; 0x698

0000097c <strcmp@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #73728	; 0x12000
 984:	ldr	pc, [ip, #1680]!	; 0x690

00000988 <__cxa_finalize@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #73728	; 0x12000
 990:	ldr	pc, [ip, #1672]!	; 0x688

00000994 <setsockopt@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #73728	; 0x12000
 99c:	ldr	pc, [ip, #1664]!	; 0x680

000009a0 <strcspn@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #73728	; 0x12000
 9a8:	ldr	pc, [ip, #1656]!	; 0x678

000009ac <printf@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #73728	; 0x12000
 9b4:	ldr	pc, [ip, #1648]!	; 0x670

000009b8 <free@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #73728	; 0x12000
 9c0:	ldr	pc, [ip, #1640]!	; 0x668

000009c4 <memcpy@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #73728	; 0x12000
 9cc:	ldr	pc, [ip, #1632]!	; 0x660

000009d0 <strdup@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #73728	; 0x12000
 9d8:	ldr	pc, [ip, #1624]!	; 0x658

000009dc <poll@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #73728	; 0x12000
 9e4:	ldr	pc, [ip, #1616]!	; 0x650

000009e8 <getsockopt@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #73728	; 0x12000
 9f0:	ldr	pc, [ip, #1608]!	; 0x648

000009f4 <ioctl@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #73728	; 0x12000
 9fc:	ldr	pc, [ip, #1600]!	; 0x640

00000a00 <sfbpf_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #73728	; 0x12000
 a08:	ldr	pc, [ip, #1592]!	; 0x638

00000a0c <getenv@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #73728	; 0x12000
 a14:	ldr	pc, [ip, #1584]!	; 0x630

00000a18 <puts@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #73728	; 0x12000
 a20:	ldr	pc, [ip, #1576]!	; 0x628

00000a24 <sfbpf_compile@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #73728	; 0x12000
 a2c:	ldr	pc, [ip, #1568]!	; 0x620

00000a30 <strerror@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #73728	; 0x12000
 a38:	ldr	pc, [ip, #1560]!	; 0x618

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #73728	; 0x12000
 a44:	ldr	pc, [ip, #1552]!	; 0x610

00000a48 <strtoul@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #73728	; 0x12000
 a50:	ldr	pc, [ip, #1544]!	; 0x608

00000a54 <strlen@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #73728	; 0x12000
 a5c:	ldr	pc, [ip, #1536]!	; 0x600

00000a60 <mmap@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #73728	; 0x12000
 a68:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a6c <fprintf@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #73728	; 0x12000
 a74:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a78 <getpagesize@plt>:
 a78:	add	ip, pc, #0, 12
 a7c:	add	ip, ip, #73728	; 0x12000
 a80:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a84 <__errno_location@plt>:
 a84:	add	ip, pc, #0, 12
 a88:	add	ip, ip, #73728	; 0x12000
 a8c:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a90 <snprintf@plt>:
 a90:	add	ip, pc, #0, 12
 a94:	add	ip, ip, #73728	; 0x12000
 a98:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a9c <bind@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1488]!	; 0x5d0

00000aa8 <memset@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1480]!	; 0x5c8

00000ab4 <strncpy@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1472]!	; 0x5c0

00000ac0 <munmap@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1464]!	; 0x5b8

00000acc <sfbpf_filter@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ad8 <socket@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ae4 <close@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1440]!	; 0x5a0

00000af0 <send@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00000afc <call_weak_fn>:
     afc:	ldr	r3, [pc, #20]	; b18 <call_weak_fn+0x1c>
     b00:	ldr	r2, [pc, #20]	; b1c <call_weak_fn+0x20>
     b04:	add	r3, pc, r3
     b08:	ldr	r2, [r3, r2]
     b0c:	cmp	r2, #0
     b10:	bxeq	lr
     b14:	b	a3c <__gmon_start__@plt>
     b18:	.word	0x000124f4
     b1c:	.word	0x000000a0

00000b20 <deregister_tm_clones>:
     b20:	ldr	r0, [pc, #44]	; b54 <deregister_tm_clones+0x34>
     b24:	ldr	r3, [pc, #44]	; b58 <deregister_tm_clones+0x38>
     b28:	add	r0, pc, r0
     b2c:	add	r3, pc, r3
     b30:	cmp	r3, r0
     b34:	ldr	r3, [pc, #32]	; b5c <deregister_tm_clones+0x3c>
     b38:	add	r3, pc, r3
     b3c:	bxeq	lr
     b40:	ldr	r2, [pc, #24]	; b60 <deregister_tm_clones+0x40>
     b44:	ldr	r3, [r3, r2]
     b48:	cmp	r3, #0
     b4c:	bxeq	lr
     b50:	bx	r3
     b54:	.word	0x0001257c
     b58:	.word	0x00012578
     b5c:	.word	0x000124c0
     b60:	.word	0x00000098

00000b64 <register_tm_clones>:
     b64:	ldr	r0, [pc, #56]	; ba4 <register_tm_clones+0x40>
     b68:	ldr	r3, [pc, #56]	; ba8 <register_tm_clones+0x44>
     b6c:	add	r0, pc, r0
     b70:	add	r3, pc, r3
     b74:	sub	r1, r3, r0
     b78:	ldr	r3, [pc, #44]	; bac <register_tm_clones+0x48>
     b7c:	asr	r1, r1, #2
     b80:	add	r3, pc, r3
     b84:	add	r1, r1, r1, lsr #31
     b88:	asrs	r1, r1, #1
     b8c:	bxeq	lr
     b90:	ldr	r2, [pc, #24]	; bb0 <register_tm_clones+0x4c>
     b94:	ldr	r3, [r3, r2]
     b98:	cmp	r3, #0
     b9c:	bxeq	lr
     ba0:	bx	r3
     ba4:	.word	0x00012538
     ba8:	.word	0x00012534
     bac:	.word	0x00012478
     bb0:	.word	0x000000a4

00000bb4 <__do_global_dtors_aux>:
     bb4:	ldr	r3, [pc, #76]	; c08 <__do_global_dtors_aux+0x54>
     bb8:	ldr	r2, [pc, #76]	; c0c <__do_global_dtors_aux+0x58>
     bbc:	add	r3, pc, r3
     bc0:	add	r2, pc, r2
     bc4:	ldrb	r3, [r3]
     bc8:	cmp	r3, #0
     bcc:	bxne	lr
     bd0:	ldr	r3, [pc, #56]	; c10 <__do_global_dtors_aux+0x5c>
     bd4:	push	{r4, lr}
     bd8:	ldr	r3, [r2, r3]
     bdc:	cmp	r3, #0
     be0:	beq	bf0 <__do_global_dtors_aux+0x3c>
     be4:	ldr	r3, [pc, #40]	; c14 <__do_global_dtors_aux+0x60>
     be8:	ldr	r0, [pc, r3]
     bec:	bl	988 <__cxa_finalize@plt>
     bf0:	bl	b20 <deregister_tm_clones>
     bf4:	ldr	r3, [pc, #28]	; c18 <__do_global_dtors_aux+0x64>
     bf8:	mov	r2, #1
     bfc:	add	r3, pc, r3
     c00:	strb	r2, [r3]
     c04:	pop	{r4, pc}
     c08:	.word	0x000124e8
     c0c:	.word	0x00012438
     c10:	.word	0x00000094
     c14:	.word	0x000124b8
     c18:	.word	0x000124a8

00000c1c <frame_dummy>:
     c1c:	b	b64 <register_tm_clones>

00000c20 <afpacket_daq_initialize>:
     c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c24:	add	fp, sp, #28
     c28:	sub	sp, sp, #36	; 0x24
     c2c:	mov	r7, r3
     c30:	mov	r9, r2
     c34:	mov	r8, r1
     c38:	mov	r5, r0
     c3c:	mov	r0, #1
     c40:	mov	r1, #408	; 0x198
     c44:	bl	964 <calloc@plt>
     c48:	cmp	r0, #0
     c4c:	beq	cd0 <afpacket_daq_initialize+0xb0>
     c50:	mov	r4, r0
     c54:	ldr	r0, [r5]
     c58:	bl	9d0 <strdup@plt>
     c5c:	str	r0, [r4]
     c60:	cmp	r0, #0
     c64:	beq	cf4 <afpacket_daq_initialize+0xd4>
     c68:	mov	r6, r0
     c6c:	ldmib	r5, {r0, r1}
     c70:	cmp	r1, #0
     c74:	mvneq	r1, #0
     c78:	strd	r0, [r4, #8]
     c7c:	ldrb	r0, [r6]
     c80:	cmp	r0, #58	; 0x3a
     c84:	beq	eac <afpacket_daq_initialize+0x28c>
     c88:	mov	r0, r6
     c8c:	bl	a54 <strlen@plt>
     c90:	cmp	r0, #0
     c94:	beq	ca8 <afpacket_daq_initialize+0x88>
     c98:	add	r0, r6, r0
     c9c:	ldrb	r0, [r0, #-1]
     ca0:	cmp	r0, #58	; 0x3a
     ca4:	beq	eac <afpacket_daq_initialize+0x28c>
     ca8:	ldr	r0, [r5, #12]
     cac:	cmp	r0, #0
     cb0:	beq	e94 <afpacket_daq_initialize+0x274>
     cb4:	str	r7, [sp, #16]
     cb8:	str	r8, [sp, #12]
     cbc:	ldrb	r0, [r6]
     cc0:	mov	sl, #0
     cc4:	cmp	r0, #0
     cc8:	bne	d28 <afpacket_daq_initialize+0x108>
     ccc:	b	e10 <afpacket_daq_initialize+0x1f0>
     cd0:	ldr	r2, [pc, #828]	; 1014 <afpacket_daq_initialize+0x3f4>
     cd4:	add	r2, pc, r2
     cd8:	ldr	r3, [pc, #824]	; 1018 <afpacket_daq_initialize+0x3f8>
     cdc:	add	r3, pc, r3
     ce0:	mov	r0, r9
     ce4:	mov	r1, r7
     ce8:	bl	a90 <snprintf@plt>
     cec:	mvn	r5, #1
     cf0:	b	ef0 <afpacket_daq_initialize+0x2d0>
     cf4:	ldr	r2, [pc, #800]	; 101c <afpacket_daq_initialize+0x3fc>
     cf8:	add	r2, pc, r2
     cfc:	ldr	r3, [pc, #796]	; 1020 <afpacket_daq_initialize+0x400>
     d00:	add	r3, pc, r3
     d04:	mov	r0, r9
     d08:	mov	r1, r7
     d0c:	bl	a90 <snprintf@plt>
     d10:	mvn	r5, #1
     d14:	b	ed0 <afpacket_daq_initialize+0x2b0>
     d18:	mov	r8, #1
     d1c:	ldrb	r0, [r6, r8]!
     d20:	cmp	r0, #0
     d24:	beq	e10 <afpacket_daq_initialize+0x1f0>
     d28:	mov	r0, r6
     d2c:	ldr	r1, [pc, #764]	; 1030 <afpacket_daq_initialize+0x410>
     d30:	add	r1, pc, r1
     d34:	bl	9a0 <strcspn@plt>
     d38:	mov	r8, r0
     d3c:	cmp	r0, #16
     d40:	bcs	f10 <afpacket_daq_initialize+0x2f0>
     d44:	cmp	r8, #0
     d48:	beq	d18 <afpacket_daq_initialize+0xf8>
     d4c:	ldr	r0, [r4, #28]
     d50:	add	r0, r0, #1
     d54:	str	r0, [r4, #28]
     d58:	cmp	r0, #32
     d5c:	bcs	fcc <afpacket_daq_initialize+0x3ac>
     d60:	add	r1, r8, #1
     d64:	add	r7, sp, #20
     d68:	mov	r0, r7
     d6c:	ldr	r2, [pc, #716]	; 1040 <afpacket_daq_initialize+0x420>
     d70:	add	r2, pc, r2
     d74:	mov	r3, r6
     d78:	bl	a90 <snprintf@plt>
     d7c:	mov	r0, r7
     d80:	mov	r1, r9
     d84:	ldr	r2, [sp, #16]
     d88:	bl	189c <create_instance>
     d8c:	cmp	r0, #0
     d90:	beq	ff0 <afpacket_daq_initialize+0x3d0>
     d94:	ldr	r1, [r4, #24]
     d98:	str	r1, [r0]
     d9c:	str	r0, [r4, #24]
     da0:	add	r1, sl, #1
     da4:	ldr	r2, [r5, #12]
     da8:	cmp	r2, #0
     dac:	beq	dc8 <afpacket_daq_initialize+0x1a8>
     db0:	cmp	r1, #2
     db4:	beq	ddc <afpacket_daq_initialize+0x1bc>
     db8:	cmp	sl, #1
     dbc:	mov	sl, r1
     dc0:	ble	e04 <afpacket_daq_initialize+0x1e4>
     dc4:	b	e10 <afpacket_daq_initialize+0x1f0>
     dc8:	mov	sl, r1
     dcc:	ldrb	r0, [r6, r8]!
     dd0:	cmp	r0, #0
     dd4:	bne	d28 <afpacket_daq_initialize+0x108>
     dd8:	b	e10 <afpacket_daq_initialize+0x1f0>
     ddc:	ldr	r1, [r0]
     de0:	ldr	r7, [r0, #84]	; 0x54
     de4:	ldr	r1, [r1, #84]	; 0x54
     de8:	mov	r0, r4
     dec:	str	r1, [sp, #8]
     df0:	mov	r2, r7
     df4:	bl	19ec <create_bridge>
     df8:	mov	sl, #0
     dfc:	cmp	r0, #0
     e00:	bne	1000 <afpacket_daq_initialize+0x3e0>
     e04:	ldrb	r0, [r6, r8]!
     e08:	cmp	r0, #0
     e0c:	bne	d28 <afpacket_daq_initialize+0x108>
     e10:	ldr	r0, [r4, #24]
     e14:	cmp	r0, #0
     e18:	beq	efc <afpacket_daq_initialize+0x2dc>
     e1c:	cmp	sl, #0
     e20:	ldrne	r0, [r5, #12]
     e24:	cmpne	r0, #0
     e28:	bne	efc <afpacket_daq_initialize+0x2dc>
     e2c:	ldr	r5, [r5, #20]
     e30:	cmp	r5, #0
     e34:	beq	f28 <afpacket_daq_initialize+0x308>
     e38:	mov	r9, #0
     e3c:	ldr	r6, [pc, #520]	; 104c <afpacket_daq_initialize+0x42c>
     e40:	add	r6, pc, r6
     e44:	ldr	r8, [pc, #516]	; 1050 <afpacket_daq_initialize+0x430>
     e48:	add	r8, pc, r8
     e4c:	mov	sl, #1
     e50:	b	e74 <afpacket_daq_initialize+0x254>
     e54:	mov	r0, r7
     e58:	mov	r1, r8
     e5c:	bl	97c <strcmp@plt>
     e60:	cmp	r0, #0
     e64:	streq	sl, [r4, #20]
     e68:	ldr	r5, [r5, #8]
     e6c:	cmp	r5, #0
     e70:	beq	f20 <afpacket_daq_initialize+0x300>
     e74:	ldr	r7, [r5]
     e78:	mov	r0, r7
     e7c:	mov	r1, r6
     e80:	bl	97c <strcmp@plt>
     e84:	cmp	r0, #0
     e88:	bne	e54 <afpacket_daq_initialize+0x234>
     e8c:	ldr	r9, [r5, #4]
     e90:	b	e68 <afpacket_daq_initialize+0x248>
     e94:	ldr	r1, [pc, #392]	; 1024 <afpacket_daq_initialize+0x404>
     e98:	add	r1, pc, r1
     e9c:	mov	r0, r6
     ea0:	bl	970 <strstr@plt>
     ea4:	cmp	r0, #0
     ea8:	beq	cb4 <afpacket_daq_initialize+0x94>
     eac:	str	r6, [sp]
     eb0:	ldr	r2, [pc, #368]	; 1028 <afpacket_daq_initialize+0x408>
     eb4:	add	r2, pc, r2
     eb8:	ldr	r3, [pc, #364]	; 102c <afpacket_daq_initialize+0x40c>
     ebc:	add	r3, pc, r3
     ec0:	mov	r0, r9
     ec4:	mov	r1, r7
     ec8:	bl	a90 <snprintf@plt>
     ecc:	mvn	r5, #0
     ed0:	mov	r0, r4
     ed4:	bl	1a7c <af_packet_close>
     ed8:	ldr	r0, [r4]
     edc:	cmp	r0, #0
     ee0:	beq	ee8 <afpacket_daq_initialize+0x2c8>
     ee4:	bl	9b8 <free@plt>
     ee8:	mov	r0, r4
     eec:	bl	9b8 <free@plt>
     ef0:	mov	r0, r5
     ef4:	sub	sp, fp, #28
     ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     efc:	ldr	r0, [r4]
     f00:	str	r0, [sp]
     f04:	ldr	r2, [pc, #316]	; 1048 <afpacket_daq_initialize+0x428>
     f08:	add	r2, pc, r2
     f0c:	b	fdc <afpacket_daq_initialize+0x3bc>
     f10:	str	r8, [sp]
     f14:	ldr	r2, [pc, #280]	; 1034 <afpacket_daq_initialize+0x414>
     f18:	add	r2, pc, r2
     f1c:	b	fdc <afpacket_daq_initialize+0x3bc>
     f20:	cmp	r9, #0
     f24:	bne	f40 <afpacket_daq_initialize+0x320>
     f28:	ldr	r0, [pc, #292]	; 1054 <afpacket_daq_initialize+0x434>
     f2c:	add	r0, pc, r0
     f30:	bl	a0c <getenv@plt>
     f34:	mov	r9, r0
     f38:	cmp	r0, #0
     f3c:	beq	f70 <afpacket_daq_initialize+0x350>
     f40:	ldr	r0, [pc, #272]	; 1058 <afpacket_daq_initialize+0x438>
     f44:	add	r0, pc, r0
     f48:	mov	r1, r9
     f4c:	bl	97c <strcmp@plt>
     f50:	cmp	r0, #0
     f54:	beq	f70 <afpacket_daq_initialize+0x350>
     f58:	mov	r0, r9
     f5c:	mov	r1, #0
     f60:	mov	r2, #10
     f64:	bl	a48 <strtoul@plt>
     f68:	lsl	r0, r0, #20
     f6c:	b	f74 <afpacket_daq_initialize+0x354>
     f70:	mov	r0, #134217728	; 0x8000000
     f74:	ldr	r7, [sp, #12]
     f78:	ldr	r2, [r4, #24]
     f7c:	mov	r5, #0
     f80:	cmp	r2, #0
     f84:	mov	r1, #0
     f88:	beq	fb4 <afpacket_daq_initialize+0x394>
     f8c:	mov	r1, #0
     f90:	ldr	r3, [r2]
     f94:	ldr	r2, [r2, #92]	; 0x5c
     f98:	cmp	r2, #0
     f9c:	mov	r2, #2
     fa0:	movweq	r2, #1
     fa4:	add	r1, r2, r1
     fa8:	cmp	r3, #0
     fac:	mov	r2, r3
     fb0:	bne	f90 <afpacket_daq_initialize+0x370>
     fb4:	mov	r2, #1
     fb8:	str	r2, [r4, #144]	; 0x90
     fbc:	udiv	r0, r0, r1
     fc0:	str	r0, [r4, #16]
     fc4:	str	r4, [r7]
     fc8:	b	ef0 <afpacket_daq_initialize+0x2d0>
     fcc:	mov	r0, #32
     fd0:	str	r0, [sp]
     fd4:	ldr	r2, [pc, #96]	; 103c <afpacket_daq_initialize+0x41c>
     fd8:	add	r2, pc, r2
     fdc:	ldr	r3, [pc, #84]	; 1038 <afpacket_daq_initialize+0x418>
     fe0:	add	r3, pc, r3
     fe4:	mov	r0, r9
     fe8:	ldr	r1, [sp, #16]
     fec:	bl	a90 <snprintf@plt>
     ff0:	mvn	r5, #0
     ff4:	cmp	r4, #0
     ff8:	bne	ed0 <afpacket_daq_initialize+0x2b0>
     ffc:	b	ef0 <afpacket_daq_initialize+0x2d0>
    1000:	ldr	r0, [sp, #8]
    1004:	stm	sp, {r0, r7}
    1008:	ldr	r2, [pc, #52]	; 1044 <afpacket_daq_initialize+0x424>
    100c:	add	r2, pc, r2
    1010:	b	fdc <afpacket_daq_initialize+0x3bc>
    1014:	.word	0x000018f9
    1018:	.word	0x0000192c
    101c:	.word	0x00001928
    1020:	.word	0x00001908
    1024:	.word	0x000017bc
    1028:	.word	0x000017a3
    102c:	.word	0x0000174c
    1030:	.word	0x00001925
    1034:	.word	0x0000176a
    1038:	.word	0x00001628
    103c:	.word	0x000016cd
    1040:	.word	0x00001b80
    1044:	.word	0x000016cd
    1048:	.word	0x0000174f
    104c:	.word	0x000018cb
    1050:	.word	0x000018d2
    1054:	.word	0x000017f4
    1058:	.word	0x000017f2

0000105c <afpacket_daq_set_filter>:
    105c:	push	{r4, r5, fp, lr}
    1060:	add	fp, sp, #8
    1064:	sub	sp, sp, #16
    1068:	mov	r5, r1
    106c:	mov	r4, r0
    1070:	ldr	r0, [r0, #4]
    1074:	cmp	r0, #0
    1078:	beq	1080 <afpacket_daq_set_filter+0x24>
    107c:	bl	9b8 <free@plt>
    1080:	mov	r0, r5
    1084:	bl	9d0 <strdup@plt>
    1088:	str	r0, [r4, #4]
    108c:	cmp	r0, #0
    1090:	beq	10d4 <afpacket_daq_set_filter+0x78>
    1094:	mov	r3, r0
    1098:	ldr	r0, [r4, #8]
    109c:	mov	r5, #0
    10a0:	mov	r1, #1
    10a4:	stm	sp, {r1, r5}
    10a8:	add	r2, sp, #8
    10ac:	mov	r1, #1
    10b0:	bl	a24 <sfbpf_compile@plt>
    10b4:	cmn	r0, #1
    10b8:	ble	10e4 <afpacket_daq_set_filter+0x88>
    10bc:	add	r0, r4, #32
    10c0:	bl	a00 <sfbpf_freecode@plt>
    10c4:	ldr	r0, [sp, #8]
    10c8:	ldr	r1, [sp, #12]
    10cc:	strd	r0, [r4, #32]
    10d0:	b	1104 <afpacket_daq_set_filter+0xa8>
    10d4:	add	r0, r4, #148	; 0x94
    10d8:	ldr	r2, [pc, #48]	; 1110 <afpacket_daq_set_filter+0xb4>
    10dc:	add	r2, pc, r2
    10e0:	b	10f0 <afpacket_daq_set_filter+0x94>
    10e4:	add	r0, r4, #148	; 0x94
    10e8:	ldr	r2, [pc, #40]	; 1118 <afpacket_daq_set_filter+0xbc>
    10ec:	add	r2, pc, r2
    10f0:	ldr	r3, [pc, #28]	; 1114 <afpacket_daq_set_filter+0xb8>
    10f4:	add	r3, pc, r3
    10f8:	mov	r1, #256	; 0x100
    10fc:	bl	a90 <snprintf@plt>
    1100:	mvn	r5, #0
    1104:	mov	r0, r5
    1108:	sub	sp, fp, #8
    110c:	pop	{r4, r5, fp, pc}
    1110:	.word	0x00001747
    1114:	.word	0x00001763
    1118:	.word	0x00001783

0000111c <afpacket_daq_start>:
    111c:	push	{r4, r5, fp, lr}
    1120:	add	fp, sp, #8
    1124:	mov	r4, r0
    1128:	ldr	r5, [r0, #24]
    112c:	mov	r0, r4
    1130:	cmp	r5, #0
    1134:	beq	1150 <afpacket_daq_start+0x34>
    1138:	mov	r1, r5
    113c:	bl	1cb0 <start_instance>
    1140:	cmp	r0, #0
    1144:	bne	1164 <afpacket_daq_start+0x48>
    1148:	ldr	r5, [r5]
    114c:	b	112c <afpacket_daq_start+0x10>
    1150:	bl	1e78 <reset_stats>
    1154:	mov	r0, #2
    1158:	str	r0, [r4, #144]	; 0x90
    115c:	mov	r0, #0
    1160:	pop	{r4, r5, fp, pc}
    1164:	mvn	r0, #0
    1168:	pop	{r4, r5, fp, pc}

0000116c <afpacket_daq_acquire>:
    116c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1170:	add	fp, sp, #28
    1174:	sub	sp, sp, #372	; 0x174
    1178:	mov	r9, r2
    117c:	str	r1, [sp, #24]
    1180:	mov	r4, r0
    1184:	add	r0, sp, #60	; 0x3c
    1188:	add	r1, r0, #6
    118c:	str	r1, [sp, #12]
    1190:	add	r0, r0, #4
    1194:	str	r0, [sp, #16]
    1198:	add	r0, r4, #88	; 0x58
    119c:	str	r0, [sp, #28]
    11a0:	add	r0, r4, #72	; 0x48
    11a4:	str	r0, [sp, #20]
    11a8:	add	r0, r4, #64	; 0x40
    11ac:	str	r0, [sp, #32]
    11b0:	mov	r0, #0
    11b4:	str	r0, [sp, #52]	; 0x34
    11b8:	str	r2, [sp, #36]	; 0x24
    11bc:	str	r4, [sp, #44]	; 0x2c
    11c0:	ldr	r6, [r4, #24]
    11c4:	cmp	r6, #0
    11c8:	beq	1484 <afpacket_daq_acquire+0x318>
    11cc:	mov	r8, #0
    11d0:	mov	r0, #0
    11d4:	str	r0, [sp, #40]	; 0x28
    11d8:	b	1208 <afpacket_daq_acquire+0x9c>
    11dc:	ldr	r4, [sp, #44]	; 0x2c
    11e0:	ldr	r0, [r6, #8]
    11e4:	cmp	r0, #1
    11e8:	moveq	r0, #0
    11ec:	streq	r0, [sl]
    11f0:	ldr	r0, [r6, #48]	; 0x30
    11f4:	ldr	r0, [r0]
    11f8:	str	r0, [r6, #48]	; 0x30
    11fc:	ldr	r6, [r6]
    1200:	cmp	r6, #0
    1204:	beq	1490 <afpacket_daq_acquire+0x324>
    1208:	ldr	r0, [r4, #40]	; 0x28
    120c:	cmp	r0, #0
    1210:	bne	1574 <afpacket_daq_acquire+0x408>
    1214:	ldr	r0, [r6, #8]
    1218:	cmp	r0, #1
    121c:	bne	11fc <afpacket_daq_acquire+0x90>
    1220:	ldr	r1, [r6, #48]	; 0x30
    1224:	ldr	sl, [r1, #4]
    1228:	ldr	r0, [sl]
    122c:	tst	r0, #1
    1230:	beq	11fc <afpacket_daq_acquire+0x90>
    1234:	ldrh	r2, [sl, #12]
    1238:	ldr	r7, [sl, #8]
    123c:	ldr	r3, [sl, #20]
    1240:	add	r4, r7, r2
    1244:	movw	r5, #19923	; 0x4dd3
    1248:	movt	r5, #4194	; 0x1062
    124c:	umull	r3, r5, r3, r5
    1250:	ldr	r3, [r6, #28]
    1254:	cmp	r4, r3
    1258:	bhi	1580 <afpacket_daq_acquire+0x414>
    125c:	ldr	r9, [sl, #4]
    1260:	ldr	r3, [sl, #16]
    1264:	str	r3, [sp, #48]	; 0x30
    1268:	ldr	r1, [r1, #4]
    126c:	add	r4, r1, r2
    1270:	ldrh	r1, [sl, #24]
    1274:	and	r0, r0, #16
    1278:	orrs	r0, r0, r1
    127c:	movwne	r0, #1
    1280:	cmp	r7, #12
    1284:	bcc	12cc <afpacket_daq_acquire+0x160>
    1288:	cmp	r0, #0
    128c:	beq	12cc <afpacket_daq_acquire+0x160>
    1290:	vld1.8	{d16}, [r4]
    1294:	sub	r0, r4, #4
    1298:	str	r0, [sp, #56]	; 0x38
    129c:	vst1.8	{d16}, [r0]
    12a0:	ldr	r0, [r4, #8]
    12a4:	str	r0, [r4, #4]
    12a8:	mov	r0, #33024	; 0x8100
    12ac:	bl	1ac8 <__bswap_16>
    12b0:	strh	r0, [r4, #8]
    12b4:	ldrh	r0, [sl, #24]
    12b8:	bl	1ac8 <__bswap_16>
    12bc:	strh	r0, [r4, #10]
    12c0:	add	r9, r9, #4
    12c4:	add	r7, r7, #4
    12c8:	b	12d0 <afpacket_daq_acquire+0x164>
    12cc:	str	r4, [sp, #56]	; 0x38
    12d0:	ldr	r4, [sp, #44]	; 0x2c
    12d4:	ldr	r0, [r4, #36]	; 0x24
    12d8:	cmp	r0, #0
    12dc:	beq	12f8 <afpacket_daq_acquire+0x18c>
    12e0:	ldr	r1, [sp, #56]	; 0x38
    12e4:	mov	r2, r9
    12e8:	mov	r3, r7
    12ec:	bl	acc <sfbpf_filter@plt>
    12f0:	cmp	r0, #0
    12f4:	beq	13ec <afpacket_daq_acquire+0x280>
    12f8:	lsr	r0, r5, #6
    12fc:	sub	r1, fp, #80	; 0x50
    1300:	stm	r1, {r0, r7, r9}
    1304:	ldr	r0, [sp, #48]	; 0x30
    1308:	str	r0, [fp, #-84]	; 0xffffffac
    130c:	ldr	r1, [r6, #88]	; 0x58
    1310:	ldr	r0, [r6, #92]	; 0x5c
    1314:	str	r1, [fp, #-68]	; 0xffffffbc
    1318:	cmp	r0, #0
    131c:	beq	1328 <afpacket_daq_acquire+0x1bc>
    1320:	ldr	r0, [r0, #88]	; 0x58
    1324:	b	132c <afpacket_daq_acquire+0x1c0>
    1328:	mvn	r0, #0
    132c:	ldr	r9, [sp, #36]	; 0x24
    1330:	mov	r1, #0
    1334:	strh	r1, [fp, #-36]	; 0xffffffdc
    1338:	str	r1, [fp, #-44]	; 0xffffffd4
    133c:	str	r1, [fp, #-48]	; 0xffffffd0
    1340:	str	r1, [fp, #-52]	; 0xffffffcc
    1344:	mvn	r1, #0
    1348:	str	r1, [fp, #-56]	; 0xffffffc8
    134c:	str	r1, [fp, #-60]	; 0xffffffc4
    1350:	str	r0, [fp, #-64]	; 0xffffffc0
    1354:	cmp	r9, #0
    1358:	beq	13c4 <afpacket_daq_acquire+0x258>
    135c:	ldr	r0, [fp, #8]
    1360:	sub	r1, fp, #84	; 0x54
    1364:	ldr	r2, [sp, #56]	; 0x38
    1368:	blx	r9
    136c:	cmp	r0, #6
    1370:	movwhi	r0, #0
    1374:	ldr	r1, [sp, #28]
    1378:	ldr	r2, [r1, r0, lsl #3]!
    137c:	adds	r2, r2, #1
    1380:	str	r2, [r1]
    1384:	ldr	r2, [r1, #4]
    1388:	adc	r2, r2, #0
    138c:	str	r2, [r1, #4]
    1390:	ldr	r1, [sp, #32]
    1394:	ldrd	r2, [r1]
    1398:	adds	r2, r2, #1
    139c:	adc	r3, r3, #0
    13a0:	strd	r2, [r1]
    13a4:	ldr	r1, [sp, #52]	; 0x34
    13a8:	add	r1, r1, #1
    13ac:	str	r1, [sp, #52]	; 0x34
    13b0:	mov	r8, #1
    13b4:	mov	r1, #45	; 0x2d
    13b8:	tst	r8, r1, lsr r0
    13bc:	beq	11e0 <afpacket_daq_acquire+0x74>
    13c0:	b	1408 <afpacket_daq_acquire+0x29c>
    13c4:	ldr	r2, [sp, #32]
    13c8:	ldrd	r0, [r2]
    13cc:	adds	r0, r0, #1
    13d0:	adc	r1, r1, #0
    13d4:	strd	r0, [r2]
    13d8:	ldr	r0, [sp, #52]	; 0x34
    13dc:	add	r0, r0, #1
    13e0:	str	r0, [sp, #52]	; 0x34
    13e4:	mov	r8, #1
    13e8:	b	1408 <afpacket_daq_acquire+0x29c>
    13ec:	ldr	r2, [sp, #20]
    13f0:	ldrd	r0, [r2]
    13f4:	adds	r0, r0, #1
    13f8:	adc	r1, r1, #0
    13fc:	strd	r0, [r2]
    1400:	mov	r0, #1
    1404:	str	r0, [sp, #40]	; 0x28
    1408:	ldr	r0, [r6, #92]	; 0x5c
    140c:	cmp	r0, #0
    1410:	beq	11e0 <afpacket_daq_acquire+0x74>
    1414:	ldr	r4, [r0, #80]	; 0x50
    1418:	ldr	r1, [r4, #4]
    141c:	ldr	r1, [r1]
    1420:	cmp	r1, #0
    1424:	bne	11dc <afpacket_daq_acquire+0x70>
    1428:	ldr	r1, [r4, #4]
    142c:	ldr	r0, [r0, #12]
    1430:	add	r0, r0, #15
    1434:	bic	r0, r0, #15
    1438:	add	r0, r1, r0
    143c:	ldr	r1, [sp, #56]	; 0x38
    1440:	mov	r2, r7
    1444:	bl	9c4 <memcpy@plt>
    1448:	ldr	r0, [r4, #4]
    144c:	str	r7, [r0, #4]
    1450:	ldr	r0, [r4, #4]
    1454:	mov	r1, #1
    1458:	str	r1, [r0]
    145c:	ldr	r0, [r6, #92]	; 0x5c
    1460:	ldr	r0, [r0, #4]
    1464:	mov	r1, #0
    1468:	mov	r2, #0
    146c:	mov	r3, #0
    1470:	bl	af0 <send@plt>
    1474:	ldr	r0, [r4]
    1478:	ldr	r1, [r6, #92]	; 0x5c
    147c:	str	r0, [r1, #80]	; 0x50
    1480:	b	11dc <afpacket_daq_acquire+0x70>
    1484:	mov	r0, #0
    1488:	str	r0, [sp, #40]	; 0x28
    148c:	mov	r8, #0
    1490:	ldr	r0, [sp, #40]	; 0x28
    1494:	orrs	r0, r8, r0
    1498:	movw	r5, #8248	; 0x2038
    149c:	mov	r3, #1
    14a0:	beq	14c4 <afpacket_daq_acquire+0x358>
    14a4:	ldr	r0, [sp, #24]
    14a8:	cmp	r0, #1
    14ac:	blt	11c0 <afpacket_daq_acquire+0x54>
    14b0:	ldr	r0, [sp, #24]
    14b4:	ldr	r1, [sp, #52]	; 0x34
    14b8:	cmp	r1, r0
    14bc:	blt	11c0 <afpacket_daq_acquire+0x54>
    14c0:	b	15bc <afpacket_daq_acquire+0x450>
    14c4:	ldr	r0, [r4, #24]
    14c8:	cmp	r0, #0
    14cc:	beq	14ec <afpacket_daq_acquire+0x380>
    14d0:	ldr	r1, [sp, #16]
    14d4:	ldr	r2, [r0, #4]
    14d8:	stmda	r1, {r2, r3}
    14dc:	add	r1, r1, #8
    14e0:	ldr	r0, [r0]
    14e4:	cmp	r0, #0
    14e8:	bne	14d4 <afpacket_daq_acquire+0x368>
    14ec:	ldr	r2, [r4, #12]
    14f0:	ldr	r1, [r4, #28]
    14f4:	add	r0, sp, #60	; 0x3c
    14f8:	bl	9dc <poll@plt>
    14fc:	cmn	r0, #1
    1500:	ble	1544 <afpacket_daq_acquire+0x3d8>
    1504:	cmp	r0, #0
    1508:	beq	15bc <afpacket_daq_acquire+0x450>
    150c:	ldr	r0, [r4, #28]
    1510:	cmp	r0, #0
    1514:	beq	14a4 <afpacket_daq_acquire+0x338>
    1518:	mov	r0, #0
    151c:	ldr	r1, [sp, #12]
    1520:	ldrh	r2, [r1]
    1524:	tst	r2, r5
    1528:	bne	159c <afpacket_daq_acquire+0x430>
    152c:	add	r0, r0, #1
    1530:	add	r1, r1, #8
    1534:	ldr	r2, [r4, #28]
    1538:	cmp	r0, r2
    153c:	bcc	1520 <afpacket_daq_acquire+0x3b4>
    1540:	b	14a4 <afpacket_daq_acquire+0x338>
    1544:	bl	a84 <__errno_location@plt>
    1548:	mov	r7, r0
    154c:	ldr	r0, [r0]
    1550:	cmp	r0, #4
    1554:	beq	14a4 <afpacket_daq_acquire+0x338>
    1558:	bl	a30 <strerror@plt>
    155c:	ldr	r1, [r7]
    1560:	stm	sp, {r0, r1}
    1564:	add	r0, r4, #148	; 0x94
    1568:	ldr	r2, [pc, #184]	; 1628 <afpacket_daq_acquire+0x4bc>
    156c:	add	r2, pc, r2
    1570:	b	1604 <afpacket_daq_acquire+0x498>
    1574:	mov	r5, #0
    1578:	str	r5, [r4, #40]	; 0x28
    157c:	b	1618 <afpacket_daq_acquire+0x4ac>
    1580:	stm	sp, {r2, r7}
    1584:	str	r3, [sp, #8]
    1588:	ldr	r0, [sp, #44]	; 0x2c
    158c:	add	r0, r0, #148	; 0x94
    1590:	ldr	r2, [pc, #140]	; 1624 <afpacket_daq_acquire+0x4b8>
    1594:	add	r2, pc, r2
    1598:	b	1604 <afpacket_daq_acquire+0x498>
    159c:	sxth	r0, r2
    15a0:	movw	r1, #8208	; 0x2010
    15a4:	tst	r0, r1
    15a8:	beq	15c4 <afpacket_daq_acquire+0x458>
    15ac:	add	r0, r4, #148	; 0x94
    15b0:	ldr	r2, [pc, #116]	; 162c <afpacket_daq_acquire+0x4c0>
    15b4:	add	r2, pc, r2
    15b8:	b	1604 <afpacket_daq_acquire+0x498>
    15bc:	mov	r5, #0
    15c0:	b	1618 <afpacket_daq_acquire+0x4ac>
    15c4:	tst	r0, #8
    15c8:	bne	15f8 <afpacket_daq_acquire+0x48c>
    15cc:	mvn	r5, #0
    15d0:	tst	r0, #32
    15d4:	beq	1618 <afpacket_daq_acquire+0x4ac>
    15d8:	add	r0, r4, #148	; 0x94
    15dc:	ldr	r2, [pc, #84]	; 1638 <afpacket_daq_acquire+0x4cc>
    15e0:	add	r2, pc, r2
    15e4:	ldr	r3, [pc, #80]	; 163c <afpacket_daq_acquire+0x4d0>
    15e8:	add	r3, pc, r3
    15ec:	mov	r1, #256	; 0x100
    15f0:	bl	a90 <snprintf@plt>
    15f4:	b	1618 <afpacket_daq_acquire+0x4ac>
    15f8:	add	r0, r4, #148	; 0x94
    15fc:	ldr	r2, [pc, #48]	; 1634 <afpacket_daq_acquire+0x4c8>
    1600:	add	r2, pc, r2
    1604:	ldr	r3, [pc, #36]	; 1630 <afpacket_daq_acquire+0x4c4>
    1608:	add	r3, pc, r3
    160c:	mov	r1, #256	; 0x100
    1610:	bl	a90 <snprintf@plt>
    1614:	mvn	r5, #0
    1618:	mov	r0, r5
    161c:	sub	sp, fp, #28
    1620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1624:	.word	0x0000165b
    1628:	.word	0x000016d1
    162c:	.word	0x000016a2
    1630:	.word	0x000015d2
    1634:	.word	0x00001675
    1638:	.word	0x000016c8
    163c:	.word	0x000015f2

00001640 <afpacket_daq_inject>:
    1640:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1644:	add	fp, sp, #24
    1648:	sub	sp, sp, #8
    164c:	ldr	r7, [r0, #24]
    1650:	mvn	r5, #0
    1654:	cmp	r7, #0
    1658:	beq	175c <afpacket_daq_inject+0x11c>
    165c:	mov	r8, r3
    1660:	mov	r4, r0
    1664:	ldr	r0, [fp, #8]
    1668:	ldr	r1, [r1, #16]
    166c:	ldr	r3, [r7, #88]	; 0x58
    1670:	cmp	r3, r1
    1674:	beq	1688 <afpacket_daq_inject+0x48>
    1678:	ldr	r7, [r7]
    167c:	cmp	r7, #0
    1680:	bne	166c <afpacket_daq_inject+0x2c>
    1684:	b	175c <afpacket_daq_inject+0x11c>
    1688:	cmp	r0, #0
    168c:	bne	169c <afpacket_daq_inject+0x5c>
    1690:	ldr	r7, [r7, #92]	; 0x5c
    1694:	cmp	r7, #0
    1698:	beq	175c <afpacket_daq_inject+0x11c>
    169c:	ldr	r6, [r7, #80]	; 0x50
    16a0:	ldr	r0, [r6, #4]
    16a4:	ldr	r0, [r0]
    16a8:	mov	r5, #0
    16ac:	cmp	r0, #0
    16b0:	bne	175c <afpacket_daq_inject+0x11c>
    16b4:	ldr	r0, [r6, #4]
    16b8:	ldr	r1, [r7, #12]
    16bc:	add	r1, r1, #15
    16c0:	bic	r1, r1, #15
    16c4:	add	r0, r0, r1
    16c8:	mov	r1, r2
    16cc:	mov	r2, r8
    16d0:	bl	9c4 <memcpy@plt>
    16d4:	ldr	r0, [r6, #4]
    16d8:	str	r8, [r0, #4]
    16dc:	ldr	r0, [r6, #4]
    16e0:	mov	r1, #1
    16e4:	str	r1, [r0]
    16e8:	ldr	r0, [r6]
    16ec:	str	r0, [r7, #80]	; 0x50
    16f0:	ldr	r0, [r7, #4]
    16f4:	mov	r5, #0
    16f8:	mov	r1, #0
    16fc:	mov	r2, #0
    1700:	mov	r3, #0
    1704:	bl	af0 <send@plt>
    1708:	cmn	r0, #1
    170c:	ble	1724 <afpacket_daq_inject+0xe4>
    1710:	ldrd	r0, [r4, #80]	; 0x50
    1714:	adds	r0, r0, #1
    1718:	adc	r1, r1, #0
    171c:	strd	r0, [r4, #80]	; 0x50
    1720:	b	175c <afpacket_daq_inject+0x11c>
    1724:	bl	a84 <__errno_location@plt>
    1728:	mov	r5, r0
    172c:	ldr	r0, [r0]
    1730:	bl	a30 <strerror@plt>
    1734:	ldr	r1, [r5]
    1738:	stm	sp, {r0, r1}
    173c:	add	r0, r4, #148	; 0x94
    1740:	ldr	r2, [pc, #32]	; 1768 <afpacket_daq_inject+0x128>
    1744:	add	r2, pc, r2
    1748:	ldr	r3, [pc, #28]	; 176c <afpacket_daq_inject+0x12c>
    174c:	add	r3, pc, r3
    1750:	mov	r1, #256	; 0x100
    1754:	bl	a90 <snprintf@plt>
    1758:	mvn	r5, #0
    175c:	mov	r0, r5
    1760:	sub	sp, fp, #24
    1764:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1768:	.word	0x00001593
    176c:	.word	0x000015ad

00001770 <afpacket_daq_breakloop>:
    1770:	mov	r1, #1
    1774:	str	r1, [r0, #40]	; 0x28
    1778:	mov	r0, #0
    177c:	bx	lr

00001780 <afpacket_daq_stop>:
    1780:	push	{fp, lr}
    1784:	mov	fp, sp
    1788:	bl	1a7c <af_packet_close>
    178c:	mov	r0, #0
    1790:	pop	{fp, pc}

00001794 <afpacket_daq_shutdown>:
    1794:	push	{r4, sl, fp, lr}
    1798:	add	fp, sp, #8
    179c:	mov	r4, r0
    17a0:	bl	1a7c <af_packet_close>
    17a4:	ldr	r0, [r4]
    17a8:	cmp	r0, #0
    17ac:	beq	17b4 <afpacket_daq_shutdown+0x20>
    17b0:	bl	9b8 <free@plt>
    17b4:	ldr	r0, [r4, #4]
    17b8:	cmp	r0, #0
    17bc:	beq	17c4 <afpacket_daq_shutdown+0x30>
    17c0:	bl	9b8 <free@plt>
    17c4:	mov	r0, r4
    17c8:	pop	{r4, sl, fp, lr}
    17cc:	b	9b8 <free@plt>

000017d0 <afpacket_daq_check_status>:
    17d0:	ldr	r0, [r0, #144]	; 0x90
    17d4:	bx	lr

000017d8 <afpacket_daq_get_stats>:
    17d8:	push	{r4, r5, fp, lr}
    17dc:	add	fp, sp, #8
    17e0:	mov	r4, r1
    17e4:	mov	r5, r0
    17e8:	bl	1bb4 <update_hw_stats>
    17ec:	add	r1, r5, #48	; 0x30
    17f0:	mov	r0, r4
    17f4:	mov	r2, #96	; 0x60
    17f8:	bl	9c4 <memcpy@plt>
    17fc:	mov	r0, #0
    1800:	pop	{r4, r5, fp, pc}

00001804 <afpacket_daq_reset_stats>:
    1804:	b	1e78 <reset_stats>

00001808 <afpacket_daq_get_snaplen>:
    1808:	ldr	r0, [r0, #8]
    180c:	bx	lr

00001810 <afpacket_daq_get_capabilities>:
    1810:	movw	r0, #487	; 0x1e7
    1814:	bx	lr

00001818 <afpacket_daq_get_datalink_type>:
    1818:	mov	r0, #1
    181c:	bx	lr

00001820 <afpacket_daq_get_errbuf>:
    1820:	add	r0, r0, #148	; 0x94
    1824:	bx	lr

00001828 <afpacket_daq_set_errbuf>:
    1828:	cmp	r1, #0
    182c:	bxeq	lr
    1830:	mov	r3, r1
    1834:	add	r0, r0, #148	; 0x94
    1838:	ldr	r2, [pc, #8]	; 1848 <afpacket_daq_set_errbuf+0x20>
    183c:	add	r2, pc, r2
    1840:	mov	r1, #256	; 0x100
    1844:	b	a90 <snprintf@plt>
    1848:	.word	0x000010b4

0000184c <afpacket_daq_get_device_index>:
    184c:	push	{r4, r5, r6, sl, fp, lr}
    1850:	add	fp, sp, #16
    1854:	ldr	r6, [r0, #24]
    1858:	mvn	r4, #2
    185c:	cmp	r6, #0
    1860:	beq	1888 <afpacket_daq_get_device_index+0x3c>
    1864:	mov	r5, r1
    1868:	ldr	r1, [r6, #84]	; 0x54
    186c:	mov	r0, r5
    1870:	bl	97c <strcmp@plt>
    1874:	cmp	r0, #0
    1878:	beq	1890 <afpacket_daq_get_device_index+0x44>
    187c:	ldr	r6, [r6]
    1880:	cmp	r6, #0
    1884:	bne	1868 <afpacket_daq_get_device_index+0x1c>
    1888:	mov	r0, r4
    188c:	pop	{r4, r5, r6, sl, fp, pc}
    1890:	ldr	r4, [r6, #88]	; 0x58
    1894:	mov	r0, r4
    1898:	pop	{r4, r5, r6, sl, fp, pc}

0000189c <create_instance>:
    189c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    18a0:	add	fp, sp, #24
    18a4:	sub	sp, sp, #40	; 0x28
    18a8:	mov	r5, r2
    18ac:	mov	r6, r1
    18b0:	mov	r7, r0
    18b4:	mov	r0, #1
    18b8:	mov	r1, #116	; 0x74
    18bc:	bl	964 <calloc@plt>
    18c0:	mov	r4, r0
    18c4:	cmp	r0, #0
    18c8:	beq	1968 <create_instance+0xcc>
    18cc:	mvn	r0, #0
    18d0:	str	r0, [r4, #16]
    18d4:	mov	r0, r7
    18d8:	bl	9d0 <strdup@plt>
    18dc:	str	r0, [r4, #84]	; 0x54
    18e0:	cmp	r0, #0
    18e4:	beq	1974 <create_instance+0xd8>
    18e8:	mov	r0, #3
    18ec:	bl	1ac8 <__bswap_16>
    18f0:	mov	r8, r0
    18f4:	mov	r0, #17
    18f8:	mov	r1, #3
    18fc:	mov	r2, r8
    1900:	bl	ad8 <socket@plt>
    1904:	str	r0, [r4, #4]
    1908:	cmn	r0, #1
    190c:	beq	1980 <create_instance+0xe4>
    1910:	vmov.i32	q8, #0	; 0x00000000
    1914:	add	r9, sp, #8
    1918:	mov	r0, r9
    191c:	vst1.64	{d16-d17}, [r0]!
    1920:	vst1.64	{d16-d17}, [r0]
    1924:	mov	r0, r9
    1928:	mov	r1, r7
    192c:	mov	r2, #16
    1930:	bl	ab4 <strncpy@plt>
    1934:	ldr	r0, [r4, #4]
    1938:	movw	r1, #35123	; 0x8933
    193c:	mov	r2, r9
    1940:	bl	9f4 <ioctl@plt>
    1944:	cmn	r0, #1
    1948:	beq	199c <create_instance+0x100>
    194c:	ldr	r0, [sp, #24]
    1950:	mov	r1, #17
    1954:	strh	r1, [r4, #96]	; 0x60
    1958:	strh	r8, [r4, #98]	; 0x62
    195c:	str	r0, [r4, #100]	; 0x64
    1960:	str	r0, [r4, #88]	; 0x58
    1964:	b	19cc <create_instance+0x130>
    1968:	ldr	r2, [pc, #104]	; 19d8 <create_instance+0x13c>
    196c:	add	r2, pc, r2
    1970:	b	19ac <create_instance+0x110>
    1974:	ldr	r2, [pc, #100]	; 19e0 <create_instance+0x144>
    1978:	add	r2, pc, r2
    197c:	b	19ac <create_instance+0x110>
    1980:	bl	a84 <__errno_location@plt>
    1984:	ldr	r0, [r0]
    1988:	bl	a30 <strerror@plt>
    198c:	str	r0, [sp]
    1990:	ldr	r2, [pc, #76]	; 19e4 <create_instance+0x148>
    1994:	add	r2, pc, r2
    1998:	b	19ac <create_instance+0x110>
    199c:	ldr	r0, [r4, #84]	; 0x54
    19a0:	str	r0, [sp]
    19a4:	ldr	r2, [pc, #60]	; 19e8 <create_instance+0x14c>
    19a8:	add	r2, pc, r2
    19ac:	ldr	r3, [pc, #40]	; 19dc <create_instance+0x140>
    19b0:	add	r3, pc, r3
    19b4:	mov	r0, r6
    19b8:	mov	r1, r5
    19bc:	bl	a90 <snprintf@plt>
    19c0:	mov	r0, r4
    19c4:	bl	1ad0 <destroy_instance>
    19c8:	mov	r4, #0
    19cc:	mov	r0, r4
    19d0:	sub	sp, fp, #24
    19d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    19d8:	.word	0x00000dce
    19dc:	.word	0x00000dbb
    19e0:	.word	0x00000e03
    19e4:	.word	0x00000e19
    19e8:	.word	0x00000e31

000019ec <create_bridge>:
    19ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19f0:	add	fp, sp, #28
    19f4:	sub	sp, sp, #4
    19f8:	ldr	r5, [r0, #24]
    19fc:	mvn	r8, #2
    1a00:	cmp	r5, #0
    1a04:	beq	1a70 <create_bridge+0x84>
    1a08:	mov	sl, r2
    1a0c:	mov	r6, r1
    1a10:	mov	r4, #0
    1a14:	mov	r9, #0
    1a18:	b	1a3c <create_bridge+0x50>
    1a1c:	mov	r0, r7
    1a20:	mov	r1, sl
    1a24:	bl	97c <strcmp@plt>
    1a28:	cmp	r0, #0
    1a2c:	moveq	r4, r5
    1a30:	ldr	r5, [r5]
    1a34:	cmp	r5, #0
    1a38:	beq	1a5c <create_bridge+0x70>
    1a3c:	ldr	r7, [r5, #84]	; 0x54
    1a40:	mov	r0, r7
    1a44:	mov	r1, r6
    1a48:	bl	97c <strcmp@plt>
    1a4c:	cmp	r0, #0
    1a50:	bne	1a1c <create_bridge+0x30>
    1a54:	mov	r9, r5
    1a58:	b	1a30 <create_bridge+0x44>
    1a5c:	cmp	r9, #0
    1a60:	cmpne	r4, #0
    1a64:	strne	r4, [r9, #92]	; 0x5c
    1a68:	strne	r9, [r4, #92]	; 0x5c
    1a6c:	movne	r8, #0
    1a70:	mov	r0, r8
    1a74:	sub	sp, fp, #28
    1a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00001a7c <af_packet_close>:
    1a7c:	cmp	r0, #0
    1a80:	bxeq	lr
    1a84:	push	{r4, sl, fp, lr}
    1a88:	add	fp, sp, #8
    1a8c:	mov	r4, r0
    1a90:	bl	1bb4 <update_hw_stats>
    1a94:	ldr	r0, [r4, #24]
    1a98:	cmp	r0, #0
    1a9c:	beq	1ab0 <af_packet_close+0x34>
    1aa0:	ldr	r1, [r0]
    1aa4:	str	r1, [r4, #24]
    1aa8:	bl	1ad0 <destroy_instance>
    1aac:	b	1a94 <af_packet_close+0x18>
    1ab0:	add	r0, r4, #32
    1ab4:	bl	a00 <sfbpf_freecode@plt>
    1ab8:	mov	r0, #3
    1abc:	str	r0, [r4, #144]	; 0x90
    1ac0:	pop	{r4, sl, fp, lr}
    1ac4:	bx	lr

00001ac8 <__bswap_16>:
    1ac8:	rev16	r0, r0
    1acc:	bx	lr

00001ad0 <destroy_instance>:
    1ad0:	cmp	r0, #0
    1ad4:	bxeq	lr
    1ad8:	push	{r4, r5, r6, sl, fp, lr}
    1adc:	add	fp, sp, #16
    1ae0:	sub	sp, sp, #24
    1ae4:	mov	r4, r0
    1ae8:	ldr	r0, [r0, #4]
    1aec:	cmn	r0, #1
    1af0:	beq	1b90 <destroy_instance+0xc0>
    1af4:	ldr	r0, [r4, #44]	; 0x2c
    1af8:	cmp	r0, #0
    1afc:	beq	1b0c <destroy_instance+0x3c>
    1b00:	bl	9b8 <free@plt>
    1b04:	mov	r0, #0
    1b08:	str	r0, [r4, #44]	; 0x2c
    1b0c:	ldr	r0, [r4, #76]	; 0x4c
    1b10:	cmp	r0, #0
    1b14:	beq	1b24 <destroy_instance+0x54>
    1b18:	bl	9b8 <free@plt>
    1b1c:	mov	r0, #0
    1b20:	str	r0, [r4, #76]	; 0x4c
    1b24:	ldr	r0, [r4, #16]
    1b28:	cmn	r0, #1
    1b2c:	beq	1b48 <destroy_instance+0x78>
    1b30:	ldr	r1, [r4, #36]	; 0x24
    1b34:	ldr	r2, [r4, #68]	; 0x44
    1b38:	add	r1, r2, r1
    1b3c:	bl	ac0 <munmap@plt>
    1b40:	mvn	r0, #0
    1b44:	str	r0, [r4, #16]
    1b48:	vmov.i32	q8, #0	; 0x00000000
    1b4c:	add	r5, sp, #8
    1b50:	vst1.64	{d16-d17}, [r5]
    1b54:	ldr	r0, [r4, #4]
    1b58:	mov	r6, #16
    1b5c:	str	r6, [sp]
    1b60:	movw	r1, #263	; 0x107
    1b64:	mov	r2, #5
    1b68:	mov	r3, r5
    1b6c:	bl	994 <setsockopt@plt>
    1b70:	ldr	r0, [r4, #4]
    1b74:	str	r6, [sp]
    1b78:	movw	r1, #263	; 0x107
    1b7c:	mov	r2, #13
    1b80:	mov	r3, r5
    1b84:	bl	994 <setsockopt@plt>
    1b88:	ldr	r0, [r4, #4]
    1b8c:	bl	ae4 <close@plt>
    1b90:	ldr	r0, [r4, #84]	; 0x54
    1b94:	cmp	r0, #0
    1b98:	beq	1ba0 <destroy_instance+0xd0>
    1b9c:	bl	9b8 <free@plt>
    1ba0:	mov	r0, r4
    1ba4:	bl	9b8 <free@plt>
    1ba8:	sub	sp, fp, #16
    1bac:	pop	{r4, r5, r6, sl, fp, lr}
    1bb0:	bx	lr

00001bb4 <update_hw_stats>:
    1bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1bb8:	add	fp, sp, #28
    1bbc:	sub	sp, sp, #28
    1bc0:	mov	r1, #8
    1bc4:	str	r1, [sp, #12]
    1bc8:	ldr	r1, [r0, #144]	; 0x90
    1bcc:	cmp	r1, #2
    1bd0:	bne	1ca0 <update_hw_stats+0xec>
    1bd4:	ldr	r6, [r0, #24]
    1bd8:	cmp	r6, #0
    1bdc:	beq	1ca0 <update_hw_stats+0xec>
    1be0:	add	r7, r0, #48	; 0x30
    1be4:	add	r8, r0, #56	; 0x38
    1be8:	add	r4, sp, #16
    1bec:	add	r9, sp, #12
    1bf0:	ldr	r2, [sp, #12]
    1bf4:	mov	r0, r4
    1bf8:	mov	r1, #0
    1bfc:	bl	aa8 <memset@plt>
    1c00:	ldr	r0, [r6, #4]
    1c04:	str	r9, [sp]
    1c08:	movw	r1, #263	; 0x107
    1c0c:	mov	r2, #6
    1c10:	mov	r3, r4
    1c14:	bl	9e8 <getsockopt@plt>
    1c18:	cmp	r0, #0
    1c1c:	bmi	1c5c <update_hw_stats+0xa8>
    1c20:	ldrd	r0, [r7]
    1c24:	ldr	r2, [sp, #16]
    1c28:	ldr	r3, [sp, #20]
    1c2c:	sub	r2, r2, r3
    1c30:	adds	r0, r0, r2
    1c34:	adc	r1, r1, #0
    1c38:	strd	r0, [r7]
    1c3c:	ldrd	r0, [r8]
    1c40:	adds	r0, r0, r3
    1c44:	adc	r1, r1, #0
    1c48:	strd	r0, [r8]
    1c4c:	ldr	r6, [r6]
    1c50:	cmp	r6, #0
    1c54:	bne	1bf0 <update_hw_stats+0x3c>
    1c58:	b	1ca0 <update_hw_stats+0xec>
    1c5c:	ldr	r0, [r6, #84]	; 0x54
    1c60:	str	r0, [sp, #8]
    1c64:	ldr	r0, [pc, #60]	; 1ca8 <update_hw_stats+0xf4>
    1c68:	ldr	r0, [pc, r0]
    1c6c:	ldr	sl, [r0]
    1c70:	bl	a84 <__errno_location@plt>
    1c74:	ldr	r5, [r0]
    1c78:	mov	r0, r5
    1c7c:	bl	a30 <strerror@plt>
    1c80:	str	r0, [sp]
    1c84:	mov	r0, sl
    1c88:	ldr	r1, [pc, #28]	; 1cac <update_hw_stats+0xf8>
    1c8c:	add	r1, pc, r1
    1c90:	ldr	r2, [sp, #8]
    1c94:	mov	r3, r5
    1c98:	bl	a6c <fprintf@plt>
    1c9c:	b	1c4c <update_hw_stats+0x98>
    1ca0:	sub	sp, fp, #28
    1ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ca8:	.word	0x0001142c
    1cac:	.word	0x00000b74

00001cb0 <start_instance>:
    1cb0:	push	{r4, r5, r6, r7, fp, lr}
    1cb4:	add	fp, sp, #16
    1cb8:	sub	sp, sp, #32
    1cbc:	mov	r6, r1
    1cc0:	mov	r5, r0
    1cc4:	bl	1f00 <bind_instance_interface>
    1cc8:	mvn	r4, #0
    1ccc:	cmp	r0, #0
    1cd0:	bne	1e54 <start_instance+0x1a4>
    1cd4:	vmov.i32	q8, #0	; 0x00000000
    1cd8:	add	r3, sp, #16
    1cdc:	vst1.64	{d16-d17}, [r3]
    1ce0:	ldr	r0, [r6, #88]	; 0x58
    1ce4:	mov	r1, #1
    1ce8:	strh	r1, [sp, #20]
    1cec:	str	r0, [sp, #16]
    1cf0:	ldr	r0, [r6, #4]
    1cf4:	mov	r1, #16
    1cf8:	str	r1, [sp]
    1cfc:	movw	r1, #263	; 0x107
    1d00:	mov	r2, #1
    1d04:	bl	994 <setsockopt@plt>
    1d08:	cmn	r0, #1
    1d0c:	beq	1dd8 <start_instance+0x128>
    1d10:	mov	r0, r6
    1d14:	bl	1ff8 <iface_get_arptype>
    1d18:	cmn	r0, #1
    1d1c:	ble	1df8 <start_instance+0x148>
    1d20:	cmp	r0, #1
    1d24:	bne	1e28 <start_instance+0x178>
    1d28:	mov	r0, r5
    1d2c:	mov	r1, r6
    1d30:	bl	206c <determine_version>
    1d34:	cmp	r0, #0
    1d38:	bne	1e54 <start_instance+0x1a4>
    1d3c:	add	r7, r6, #20
    1d40:	mov	r0, r5
    1d44:	mov	r1, r6
    1d48:	mov	r2, r7
    1d4c:	mov	r3, #5
    1d50:	bl	21d8 <create_ring>
    1d54:	cmp	r0, #0
    1d58:	bne	1e54 <start_instance+0x1a4>
    1d5c:	ldr	r0, [r6, #92]	; 0x5c
    1d60:	cmp	r0, #0
    1d64:	beq	1d84 <start_instance+0xd4>
    1d68:	add	r2, r6, #52	; 0x34
    1d6c:	mov	r0, r5
    1d70:	mov	r1, r6
    1d74:	mov	r3, #13
    1d78:	bl	21d8 <create_ring>
    1d7c:	cmp	r0, #0
    1d80:	bne	1e54 <start_instance+0x1a4>
    1d84:	mov	r0, r5
    1d88:	mov	r1, r6
    1d8c:	bl	2308 <mmap_rings>
    1d90:	cmp	r0, #0
    1d94:	bne	1e54 <start_instance+0x1a4>
    1d98:	mov	r0, r5
    1d9c:	mov	r1, r6
    1da0:	mov	r2, r7
    1da4:	bl	23a8 <set_up_ring>
    1da8:	cmp	r0, #0
    1dac:	bne	1e54 <start_instance+0x1a4>
    1db0:	ldr	r0, [r6, #92]	; 0x5c
    1db4:	cmp	r0, #0
    1db8:	beq	1e60 <start_instance+0x1b0>
    1dbc:	add	r2, r6, #52	; 0x34
    1dc0:	mov	r0, r5
    1dc4:	mov	r1, r6
    1dc8:	bl	23a8 <set_up_ring>
    1dcc:	cmp	r0, #0
    1dd0:	moveq	r4, #0
    1dd4:	b	1e54 <start_instance+0x1a4>
    1dd8:	bl	a84 <__errno_location@plt>
    1ddc:	ldr	r0, [r0]
    1de0:	bl	a30 <strerror@plt>
    1de4:	str	r0, [sp]
    1de8:	add	r0, r5, #148	; 0x94
    1dec:	ldr	r2, [pc, #116]	; 1e68 <start_instance+0x1b8>
    1df0:	add	r2, pc, r2
    1df4:	b	1e44 <start_instance+0x194>
    1df8:	ldr	r7, [r6, #84]	; 0x54
    1dfc:	bl	a84 <__errno_location@plt>
    1e00:	ldr	r6, [r0]
    1e04:	mov	r0, r6
    1e08:	bl	a30 <strerror@plt>
    1e0c:	str	r7, [sp]
    1e10:	str	r6, [sp, #4]
    1e14:	str	r0, [sp, #8]
    1e18:	add	r0, r5, #148	; 0x94
    1e1c:	ldr	r2, [pc, #72]	; 1e6c <start_instance+0x1bc>
    1e20:	add	r2, pc, r2
    1e24:	b	1e44 <start_instance+0x194>
    1e28:	ldr	r1, [r6, #84]	; 0x54
    1e2c:	mov	r2, #1
    1e30:	str	r1, [sp]
    1e34:	stmib	sp, {r0, r2}
    1e38:	add	r0, r5, #148	; 0x94
    1e3c:	ldr	r2, [pc, #44]	; 1e70 <start_instance+0x1c0>
    1e40:	add	r2, pc, r2
    1e44:	ldr	r3, [pc, #40]	; 1e74 <start_instance+0x1c4>
    1e48:	add	r3, pc, r3
    1e4c:	mov	r1, #256	; 0x100
    1e50:	bl	a90 <snprintf@plt>
    1e54:	mov	r0, r4
    1e58:	sub	sp, fp, #16
    1e5c:	pop	{r4, r5, r6, r7, fp, pc}
    1e60:	mov	r4, #0
    1e64:	b	1e54 <start_instance+0x1a4>
    1e68:	.word	0x00000aa9
    1e6c:	.word	0x00000a9b
    1e70:	.word	0x00000ab3
    1e74:	.word	0x00000a64

00001e78 <reset_stats>:
    1e78:	push	{r4, r5, r6, sl, fp, lr}
    1e7c:	add	fp, sp, #16
    1e80:	sub	sp, sp, #16
    1e84:	mov	r1, #8
    1e88:	vmov.i32	q8, #0	; 0x00000000
    1e8c:	str	r1, [sp, #4]
    1e90:	add	r1, r0, #128	; 0x80
    1e94:	vst1.64	{d16-d17}, [r1]
    1e98:	add	r1, r0, #112	; 0x70
    1e9c:	vst1.64	{d16-d17}, [r1]
    1ea0:	add	r1, r0, #96	; 0x60
    1ea4:	vst1.64	{d16-d17}, [r1]
    1ea8:	add	r1, r0, #80	; 0x50
    1eac:	vst1.64	{d16-d17}, [r1]
    1eb0:	add	r1, r0, #64	; 0x40
    1eb4:	vst1.64	{d16-d17}, [r1]
    1eb8:	add	r1, r0, #48	; 0x30
    1ebc:	vst1.64	{d16-d17}, [r1]
    1ec0:	ldr	r5, [r0, #24]
    1ec4:	cmp	r5, #0
    1ec8:	beq	1ef8 <reset_stats+0x80>
    1ecc:	add	r6, sp, #4
    1ed0:	add	r4, sp, #8
    1ed4:	ldr	r0, [r5, #4]
    1ed8:	str	r6, [sp]
    1edc:	movw	r1, #263	; 0x107
    1ee0:	mov	r2, #6
    1ee4:	mov	r3, r4
    1ee8:	bl	9e8 <getsockopt@plt>
    1eec:	ldr	r5, [r5]
    1ef0:	cmp	r5, #0
    1ef4:	bne	1ed4 <reset_stats+0x5c>
    1ef8:	sub	sp, fp, #16
    1efc:	pop	{r4, r5, r6, sl, fp, pc}

00001f00 <bind_instance_interface>:
    1f00:	push	{r4, r5, r6, sl, fp, lr}
    1f04:	add	fp, sp, #16
    1f08:	sub	sp, sp, #40	; 0x28
    1f0c:	mov	r6, r1
    1f10:	mov	r4, r0
    1f14:	mov	r5, #0
    1f18:	str	r5, [sp, #28]
    1f1c:	str	r5, [sp, #24]
    1f20:	str	r5, [sp, #32]
    1f24:	mov	r0, #17
    1f28:	strh	r0, [sp, #16]
    1f2c:	mov	r0, #4
    1f30:	str	r0, [sp, #8]
    1f34:	ldr	r0, [r1, #88]	; 0x58
    1f38:	str	r0, [sp, #20]
    1f3c:	mov	r0, #3
    1f40:	bl	1ac8 <__bswap_16>
    1f44:	strh	r0, [sp, #18]
    1f48:	ldr	r0, [r6, #4]
    1f4c:	add	r1, sp, #16
    1f50:	mov	r2, #20
    1f54:	bl	a9c <bind@plt>
    1f58:	cmn	r0, #1
    1f5c:	beq	1fa8 <bind_instance_interface+0xa8>
    1f60:	ldr	r0, [r6, #4]
    1f64:	add	r1, sp, #8
    1f68:	str	r1, [sp]
    1f6c:	add	r3, sp, #12
    1f70:	mov	r1, #1
    1f74:	mov	r2, #4
    1f78:	bl	9e8 <getsockopt@plt>
    1f7c:	ldr	r1, [sp, #12]
    1f80:	orrs	r0, r1, r0
    1f84:	beq	1fe0 <bind_instance_interface+0xe0>
    1f88:	bl	a84 <__errno_location@plt>
    1f8c:	ldr	r0, [r0]
    1f90:	bl	a30 <strerror@plt>
    1f94:	str	r0, [sp]
    1f98:	add	r0, r4, #148	; 0x94
    1f9c:	ldr	r2, [pc, #76]	; 1ff0 <bind_instance_interface+0xf0>
    1fa0:	add	r2, pc, r2
    1fa4:	b	1fcc <bind_instance_interface+0xcc>
    1fa8:	ldr	r5, [r6, #84]	; 0x54
    1fac:	bl	a84 <__errno_location@plt>
    1fb0:	ldr	r0, [r0]
    1fb4:	bl	a30 <strerror@plt>
    1fb8:	str	r5, [sp]
    1fbc:	str	r0, [sp, #4]
    1fc0:	add	r0, r4, #148	; 0x94
    1fc4:	ldr	r2, [pc, #32]	; 1fec <bind_instance_interface+0xec>
    1fc8:	add	r2, pc, r2
    1fcc:	ldr	r3, [pc, #32]	; 1ff4 <bind_instance_interface+0xf4>
    1fd0:	add	r3, pc, r3
    1fd4:	mov	r1, #256	; 0x100
    1fd8:	bl	a90 <snprintf@plt>
    1fdc:	mvn	r5, #0
    1fe0:	mov	r0, r5
    1fe4:	sub	sp, fp, #16
    1fe8:	pop	{r4, r5, r6, sl, fp, pc}
    1fec:	.word	0x0000095e
    1ff0:	.word	0x000009b0
    1ff4:	.word	0x00000968

00001ff8 <iface_get_arptype>:
    1ff8:	push	{r4, r5, fp, lr}
    1ffc:	add	fp, sp, #8
    2000:	sub	sp, sp, #32
    2004:	mov	r4, r0
    2008:	vmov.i32	q8, #0	; 0x00000000
    200c:	mov	r5, sp
    2010:	mov	r0, r5
    2014:	vst1.64	{d16-d17}, [r0]!
    2018:	vst1.64	{d16-d17}, [r0]
    201c:	ldr	r1, [r4, #84]	; 0x54
    2020:	mov	r0, r5
    2024:	mov	r2, #16
    2028:	bl	ab4 <strncpy@plt>
    202c:	ldr	r0, [r4, #4]
    2030:	movw	r1, #35111	; 0x8927
    2034:	mov	r2, r5
    2038:	bl	9f4 <ioctl@plt>
    203c:	cmn	r0, #1
    2040:	beq	2050 <iface_get_arptype+0x58>
    2044:	ldrh	r0, [sp, #16]
    2048:	sub	sp, fp, #8
    204c:	pop	{r4, r5, fp, pc}
    2050:	bl	a84 <__errno_location@plt>
    2054:	ldr	r1, [r0]
    2058:	mvn	r0, #0
    205c:	cmp	r1, #19
    2060:	mvneq	r0, #2
    2064:	sub	sp, fp, #8
    2068:	pop	{r4, r5, fp, pc}

0000206c <determine_version>:
    206c:	push	{r4, r5, r6, r7, fp, lr}
    2070:	add	fp, sp, #16
    2074:	sub	sp, sp, #16
    2078:	mov	r5, r1
    207c:	mov	r4, r0
    2080:	mov	r6, #4
    2084:	str	r6, [sp, #12]
    2088:	mov	r7, #1
    208c:	str	r7, [sp, #8]
    2090:	ldr	r0, [r1, #4]
    2094:	add	r1, sp, #12
    2098:	str	r1, [sp]
    209c:	add	r3, sp, #8
    20a0:	movw	r1, #263	; 0x107
    20a4:	mov	r2, #11
    20a8:	bl	9e8 <getsockopt@plt>
    20ac:	cmn	r0, #1
    20b0:	ble	2144 <determine_version+0xd8>
    20b4:	ldr	r0, [sp, #8]
    20b8:	str	r0, [r5, #12]
    20bc:	str	r7, [sp, #8]
    20c0:	ldr	r0, [r5, #4]
    20c4:	str	r6, [sp]
    20c8:	add	r3, sp, #8
    20cc:	movw	r1, #263	; 0x107
    20d0:	mov	r2, #10
    20d4:	bl	994 <setsockopt@plt>
    20d8:	cmn	r0, #1
    20dc:	ble	2164 <determine_version+0xf8>
    20e0:	mov	r0, #1
    20e4:	str	r0, [r5, #8]
    20e8:	mov	r1, #4
    20ec:	str	r1, [sp, #8]
    20f0:	ldr	r0, [r5, #4]
    20f4:	str	r1, [sp]
    20f8:	add	r3, sp, #8
    20fc:	movw	r1, #263	; 0x107
    2100:	mov	r2, #12
    2104:	bl	994 <setsockopt@plt>
    2108:	cmn	r0, #1
    210c:	ble	2188 <determine_version+0x11c>
    2110:	ldr	r0, [r4, #20]
    2114:	mov	r4, #0
    2118:	cmp	r0, #0
    211c:	beq	21b8 <determine_version+0x14c>
    2120:	ldr	r1, [r5, #8]
    2124:	ldr	r0, [pc, #164]	; 21d0 <determine_version+0x164>
    2128:	add	r0, pc, r0
    212c:	bl	9ac <printf@plt>
    2130:	ldr	r1, [r5, #12]
    2134:	ldr	r0, [pc, #152]	; 21d4 <determine_version+0x168>
    2138:	add	r0, pc, r0
    213c:	bl	9ac <printf@plt>
    2140:	b	21b8 <determine_version+0x14c>
    2144:	bl	a84 <__errno_location@plt>
    2148:	ldr	r0, [r0]
    214c:	bl	a30 <strerror@plt>
    2150:	mov	r3, r0
    2154:	add	r0, r4, #148	; 0x94
    2158:	ldr	r2, [pc, #100]	; 21c4 <determine_version+0x158>
    215c:	add	r2, pc, r2
    2160:	b	2180 <determine_version+0x114>
    2164:	bl	a84 <__errno_location@plt>
    2168:	ldr	r0, [r0]
    216c:	bl	a30 <strerror@plt>
    2170:	mov	r3, r0
    2174:	add	r0, r4, #148	; 0x94
    2178:	ldr	r2, [pc, #72]	; 21c8 <determine_version+0x15c>
    217c:	add	r2, pc, r2
    2180:	mov	r1, #256	; 0x100
    2184:	b	21b0 <determine_version+0x144>
    2188:	ldr	r5, [sp, #8]
    218c:	bl	a84 <__errno_location@plt>
    2190:	ldr	r0, [r0]
    2194:	bl	a30 <strerror@plt>
    2198:	str	r0, [sp]
    219c:	add	r0, r4, #148	; 0x94
    21a0:	ldr	r2, [pc, #36]	; 21cc <determine_version+0x160>
    21a4:	add	r2, pc, r2
    21a8:	mov	r1, #256	; 0x100
    21ac:	mov	r3, r5
    21b0:	bl	a90 <snprintf@plt>
    21b4:	mvn	r4, #0
    21b8:	mov	r0, r4
    21bc:	sub	sp, fp, #16
    21c0:	pop	{r4, r5, r6, r7, fp, pc}
    21c4:	.word	0x00000807
    21c8:	.word	0x00000816
    21cc:	.word	0x00000820
    21d0:	.word	0x000008d4
    21d4:	.word	0x000008d1

000021d8 <create_ring>:
    21d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21dc:	add	fp, sp, #28
    21e0:	sub	sp, sp, #4
    21e4:	mov	r8, r3
    21e8:	mov	r7, r2
    21ec:	mov	r6, r1
    21f0:	mov	r9, r0
    21f4:	mov	r5, #3
    21f8:	mov	sl, #16
    21fc:	mvn	r4, #0
    2200:	b	2210 <create_ring+0x38>
    2204:	sub	r5, r5, #1
    2208:	cmn	r5, #1
    220c:	beq	2280 <create_ring+0xa8>
    2210:	ldr	r2, [r6, #12]
    2214:	mov	r0, r9
    2218:	mov	r1, r7
    221c:	mov	r3, r5
    2220:	bl	24e0 <calculate_layout>
    2224:	cmp	r0, #0
    2228:	bne	22e8 <create_ring+0x110>
    222c:	ldr	r0, [r6, #4]
    2230:	str	sl, [sp]
    2234:	movw	r1, #263	; 0x107
    2238:	mov	r2, r8
    223c:	mov	r3, r7
    2240:	bl	994 <setsockopt@plt>
    2244:	cmp	r0, #0
    2248:	beq	2294 <create_ring+0xbc>
    224c:	bl	a84 <__errno_location@plt>
    2250:	ldr	r0, [r0]
    2254:	cmp	r0, #12
    2258:	bne	22c4 <create_ring+0xec>
    225c:	ldr	r0, [r9, #20]
    2260:	cmp	r0, #0
    2264:	beq	2204 <create_ring+0x2c>
    2268:	ldr	r1, [r6, #84]	; 0x54
    226c:	ldr	r0, [pc, #128]	; 22f4 <create_ring+0x11c>
    2270:	add	r0, pc, r0
    2274:	mov	r2, r5
    2278:	bl	9ac <printf@plt>
    227c:	b	2204 <create_ring+0x2c>
    2280:	ldr	r3, [r6, #84]	; 0x54
    2284:	add	r0, r9, #148	; 0x94
    2288:	ldr	r2, [pc, #104]	; 22f8 <create_ring+0x120>
    228c:	add	r2, pc, r2
    2290:	b	22e0 <create_ring+0x108>
    2294:	ldm	r7, {r0, r1}
    2298:	mul	r2, r1, r0
    229c:	str	r2, [r7, #16]
    22a0:	ldr	r0, [r9, #20]
    22a4:	mov	r4, #0
    22a8:	cmp	r0, #0
    22ac:	beq	22e8 <create_ring+0x110>
    22b0:	ldr	r0, [pc, #76]	; 2304 <create_ring+0x12c>
    22b4:	add	r0, pc, r0
    22b8:	mov	r1, r8
    22bc:	bl	9ac <printf@plt>
    22c0:	b	22e8 <create_ring+0x110>
    22c4:	bl	a30 <strerror@plt>
    22c8:	str	r0, [sp]
    22cc:	add	r0, r9, #148	; 0x94
    22d0:	ldr	r2, [pc, #36]	; 22fc <create_ring+0x124>
    22d4:	add	r2, pc, r2
    22d8:	ldr	r3, [pc, #32]	; 2300 <create_ring+0x128>
    22dc:	add	r3, pc, r3
    22e0:	mov	r1, #256	; 0x100
    22e4:	bl	a90 <snprintf@plt>
    22e8:	mov	r0, r4
    22ec:	sub	sp, fp, #28
    22f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22f4:	.word	0x000007ac
    22f8:	.word	0x0000084a
    22fc:	.word	0x00000790
    2300:	.word	0x000007bd
    2304:	.word	0x000007f1

00002308 <mmap_rings>:
    2308:	push	{r4, r5, r6, sl, fp, lr}
    230c:	add	fp, sp, #16
    2310:	sub	sp, sp, #8
    2314:	mov	r6, r1
    2318:	mov	r4, r0
    231c:	ldr	r0, [r1, #4]
    2320:	ldr	r1, [r1, #36]	; 0x24
    2324:	ldr	r2, [r6, #68]	; 0x44
    2328:	mov	r5, #0
    232c:	stm	sp, {r0, r5}
    2330:	add	r1, r2, r1
    2334:	mov	r0, #0
    2338:	mov	r2, #3
    233c:	mov	r3, #1
    2340:	bl	a60 <mmap@plt>
    2344:	str	r0, [r6, #16]
    2348:	cmn	r0, #1
    234c:	beq	2364 <mmap_rings+0x5c>
    2350:	str	r0, [r6, #40]	; 0x28
    2354:	ldr	r1, [r6, #68]	; 0x44
    2358:	add	r0, r0, r1
    235c:	str	r0, [r6, #72]	; 0x48
    2360:	b	2394 <mmap_rings+0x8c>
    2364:	bl	a84 <__errno_location@plt>
    2368:	ldr	r0, [r0]
    236c:	bl	a30 <strerror@plt>
    2370:	str	r0, [sp]
    2374:	add	r0, r4, #148	; 0x94
    2378:	ldr	r2, [pc, #32]	; 23a0 <mmap_rings+0x98>
    237c:	add	r2, pc, r2
    2380:	ldr	r3, [pc, #28]	; 23a4 <mmap_rings+0x9c>
    2384:	add	r3, pc, r3
    2388:	mov	r1, #256	; 0x100
    238c:	bl	a90 <snprintf@plt>
    2390:	mvn	r5, #0
    2394:	mov	r0, r5
    2398:	sub	sp, fp, #16
    239c:	pop	{r4, r5, r6, sl, fp, pc}
    23a0:	.word	0x000007ed
    23a4:	.word	0x00000805

000023a8 <set_up_ring>:
    23a8:	push	{r4, r5, r6, r7, fp, lr}
    23ac:	add	fp, sp, #16
    23b0:	sub	sp, sp, #8
    23b4:	mov	r4, r2
    23b8:	mov	r6, r1
    23bc:	mov	r5, r0
    23c0:	ldr	r0, [r2, #12]
    23c4:	mov	r1, #8
    23c8:	bl	964 <calloc@plt>
    23cc:	str	r0, [r4, #24]
    23d0:	cmp	r0, #0
    23d4:	beq	24a8 <set_up_ring+0x100>
    23d8:	ldr	r0, [r4, #4]
    23dc:	cmp	r0, #0
    23e0:	beq	2484 <set_up_ring+0xdc>
    23e4:	mov	lr, #0
    23e8:	mov	ip, #0
    23ec:	b	2404 <set_up_ring+0x5c>
    23f0:	mov	lr, r0
    23f4:	ldr	r0, [r4, #4]
    23f8:	add	ip, ip, #1
    23fc:	cmp	ip, r0
    2400:	bcs	2484 <set_up_ring+0xdc>
    2404:	ldr	r0, [r4]
    2408:	ldr	r1, [r4, #8]
    240c:	cmp	r1, r0
    2410:	bhi	23f4 <set_up_ring+0x4c>
    2414:	mul	r2, r0, ip
    2418:	lsl	r6, lr, #3
    241c:	mov	r3, #0
    2420:	mov	r5, #8
    2424:	add	r0, lr, r3
    2428:	ldr	r7, [r4, #12]
    242c:	cmp	r0, r7
    2430:	bcs	23f0 <set_up_ring+0x48>
    2434:	ldr	r0, [r4, #20]
    2438:	ldr	r7, [r4, #24]
    243c:	add	r0, r0, r2
    2440:	mla	r0, r1, r3, r0
    2444:	add	r1, r7, r6
    2448:	add	r1, r1, r3, lsl #3
    244c:	str	r0, [r1, #4]
    2450:	ldr	r0, [r4, #24]
    2454:	add	r0, r0, r6
    2458:	add	r1, r0, r5
    245c:	str	r1, [r0, r3, lsl #3]
    2460:	add	r5, r5, #8
    2464:	add	r3, r3, #1
    2468:	ldr	r0, [r4]
    246c:	ldr	r1, [r4, #8]
    2470:	udiv	r0, r0, r1
    2474:	cmp	r3, r0
    2478:	bcc	2424 <set_up_ring+0x7c>
    247c:	add	lr, lr, r3
    2480:	b	23f4 <set_up_ring+0x4c>
    2484:	ldr	r0, [r4, #12]
    2488:	ldr	r1, [r4, #24]
    248c:	add	r0, r1, r0, lsl #3
    2490:	str	r1, [r0, #-8]
    2494:	ldr	r0, [r4, #24]
    2498:	str	r0, [r4, #28]
    249c:	mov	r0, #0
    24a0:	sub	sp, fp, #16
    24a4:	pop	{r4, r5, r6, r7, fp, pc}
    24a8:	ldr	r0, [r6, #84]	; 0x54
    24ac:	str	r0, [sp]
    24b0:	add	r0, r5, #148	; 0x94
    24b4:	ldr	r2, [pc, #28]	; 24d8 <set_up_ring+0x130>
    24b8:	add	r2, pc, r2
    24bc:	ldr	r3, [pc, #24]	; 24dc <set_up_ring+0x134>
    24c0:	add	r3, pc, r3
    24c4:	mov	r1, #256	; 0x100
    24c8:	bl	a90 <snprintf@plt>
    24cc:	mvn	r0, #1
    24d0:	sub	sp, fp, #16
    24d4:	pop	{r4, r5, r6, r7, fp, pc}
    24d8:	.word	0x000006dc
    24dc:	.word	0x0000070e

000024e0 <calculate_layout>:
    24e0:	push	{r4, r5, r6, r7, fp, lr}
    24e4:	add	fp, sp, #16
    24e8:	mov	r5, r3
    24ec:	mov	r4, r1
    24f0:	mov	r6, r0
    24f4:	ldr	r0, [r0, #8]
    24f8:	add	r1, r2, #15
    24fc:	bic	r1, r1, #15
    2500:	add	r1, r1, #49	; 0x31
    2504:	orr	r1, r1, #5
    2508:	add	r0, r1, r0
    250c:	bic	r7, r0, #15
    2510:	str	r7, [r4, #8]
    2514:	bl	a78 <getpagesize@plt>
    2518:	lsl	r0, r0, r5
    251c:	mov	r1, r0
    2520:	lsl	r0, r0, #1
    2524:	cmp	r1, r7
    2528:	bcc	251c <calculate_layout+0x3c>
    252c:	str	r1, [r4]
    2530:	udiv	r0, r1, r7
    2534:	ldr	r1, [r6, #16]
    2538:	udiv	r1, r1, r7
    253c:	udiv	r1, r1, r0
    2540:	str	r1, [r4, #4]
    2544:	mul	r0, r1, r0
    2548:	str	r0, [r4, #12]
    254c:	ldr	r0, [r6, #20]
    2550:	cmp	r0, #0
    2554:	beq	25a8 <calculate_layout+0xc8>
    2558:	ldr	r0, [pc, #80]	; 25b0 <calculate_layout+0xd0>
    255c:	add	r0, pc, r0
    2560:	bl	a18 <puts@plt>
    2564:	ldr	r1, [r4, #8]
    2568:	ldr	r0, [pc, #68]	; 25b4 <calculate_layout+0xd4>
    256c:	add	r0, pc, r0
    2570:	bl	9ac <printf@plt>
    2574:	ldr	r1, [r4, #12]
    2578:	ldr	r0, [pc, #56]	; 25b8 <calculate_layout+0xd8>
    257c:	add	r0, pc, r0
    2580:	bl	9ac <printf@plt>
    2584:	ldr	r1, [r4]
    2588:	ldr	r0, [pc, #44]	; 25bc <calculate_layout+0xdc>
    258c:	add	r0, pc, r0
    2590:	mov	r2, r5
    2594:	bl	9ac <printf@plt>
    2598:	ldr	r1, [r4, #4]
    259c:	ldr	r0, [pc, #28]	; 25c0 <calculate_layout+0xe0>
    25a0:	add	r0, pc, r0
    25a4:	bl	9ac <printf@plt>
    25a8:	mov	r0, #0
    25ac:	pop	{r4, r5, r6, r7, fp, pc}
    25b0:	.word	0x000007b1
    25b4:	.word	0x000005aa
    25b8:	.word	0x000005ac
    25bc:	.word	0x000005ae
    25c0:	.word	0x000005b7

Disassembly of section .fini:

000025c4 <_fini>:
    25c4:	push	{r3, lr}
    25c8:	pop	{r3, pc}
