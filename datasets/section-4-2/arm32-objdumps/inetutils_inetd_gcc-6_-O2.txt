
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011704 <.init>:
   11704:	push	{r3, lr}
   11708:	bl	123d0 <__assert_fail@plt+0x7a8>
   1170c:	pop	{r3, pc}

Disassembly of section .plt:

00011710 <calloc@plt-0x14>:
   11710:	push	{lr}		; (str lr, [sp, #-4]!)
   11714:	ldr	lr, [pc, #4]	; 11720 <calloc@plt-0x4>
   11718:	add	lr, pc, lr
   1171c:	ldr	pc, [lr, #8]!
   11720:	andeq	ip, r1, r0, ror #17

00011724 <calloc@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #28, 20	; 0x1c000
   1172c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011730 <fputs_unlocked@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #28, 20	; 0x1c000
   11738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001173c <__getdelim@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #28, 20	; 0x1c000
   11744:	ldr	pc, [ip, #2256]!	; 0x8d0

00011748 <getpwnam@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #28, 20	; 0x1c000
   11750:	ldr	pc, [ip, #2248]!	; 0x8c8

00011754 <strcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #28, 20	; 0x1c000
   1175c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011760 <strtol@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #28, 20	; 0x1c000
   11768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001176c <setsockopt@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #28, 20	; 0x1c000
   11774:	ldr	pc, [ip, #2224]!	; 0x8b0

00011778 <strcspn@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #28, 20	; 0x1c000
   11780:	ldr	pc, [ip, #2216]!	; 0x8a8

00011784 <pause@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #28, 20	; 0x1c000
   1178c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011790 <printf@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #28, 20	; 0x1c000
   11798:	ldr	pc, [ip, #2200]!	; 0x898

0001179c <read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #28, 20	; 0x1c000
   117a4:	ldr	pc, [ip, #2192]!	; 0x890

000117a8 <getprotobyname@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #28, 20	; 0x1c000
   117b0:	ldr	pc, [ip, #2184]!	; 0x888

000117b4 <sigprocmask@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #28, 20	; 0x1c000
   117bc:	ldr	pc, [ip, #2176]!	; 0x880

000117c0 <memmove@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #28, 20	; 0x1c000
   117c8:	ldr	pc, [ip, #2168]!	; 0x878

000117cc <strchrnul@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #28, 20	; 0x1c000
   117d4:	ldr	pc, [ip, #2160]!	; 0x870

000117d8 <free@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #28, 20	; 0x1c000
   117e0:	ldr	pc, [ip, #2152]!	; 0x868

000117e4 <gai_strerror@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #28, 20	; 0x1c000
   117ec:	ldr	pc, [ip, #2144]!	; 0x860

000117f0 <strndup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #28, 20	; 0x1c000
   117f8:	ldr	pc, [ip, #2136]!	; 0x858

000117fc <_exit@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #28, 20	; 0x1c000
   11804:	ldr	pc, [ip, #2128]!	; 0x850

00011808 <memcpy@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #28, 20	; 0x1c000
   11810:	ldr	pc, [ip, #2120]!	; 0x848

00011814 <signal@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #28, 20	; 0x1c000
   1181c:	ldr	pc, [ip, #2112]!	; 0x840

00011820 <time@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #28, 20	; 0x1c000
   11828:	ldr	pc, [ip, #2104]!	; 0x838

0001182c <fwrite_unlocked@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #28, 20	; 0x1c000
   11834:	ldr	pc, [ip, #2096]!	; 0x830

00011838 <memcmp@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #28, 20	; 0x1c000
   11840:	ldr	pc, [ip, #2088]!	; 0x828

00011844 <select@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #28, 20	; 0x1c000
   1184c:	ldr	pc, [ip, #2080]!	; 0x820

00011850 <sleep@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #28, 20	; 0x1c000
   11858:	ldr	pc, [ip, #2072]!	; 0x818

0001185c <ctime@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #28, 20	; 0x1c000
   11864:	ldr	pc, [ip, #2064]!	; 0x810

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #28, 20	; 0x1c000
   11870:	ldr	pc, [ip, #2056]!	; 0x808

00011874 <strdup@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #28, 20	; 0x1c000
   1187c:	ldr	pc, [ip, #2048]!	; 0x800

00011880 <alarm@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #28, 20	; 0x1c000
   11888:	ldr	pc, [ip, #2040]!	; 0x7f8

0001188c <sysconf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #28, 20	; 0x1c000
   11894:	ldr	pc, [ip, #2032]!	; 0x7f0

00011898 <dup2@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #28, 20	; 0x1c000
   118a0:	ldr	pc, [ip, #2024]!	; 0x7e8

000118a4 <realloc@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #28, 20	; 0x1c000
   118ac:	ldr	pc, [ip, #2016]!	; 0x7e0

000118b0 <initgroups@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #28, 20	; 0x1c000
   118b8:	ldr	pc, [ip, #2008]!	; 0x7d8

000118bc <chdir@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #28, 20	; 0x1c000
   118c4:	ldr	pc, [ip, #2000]!	; 0x7d0

000118c8 <strcasecmp@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #28, 20	; 0x1c000
   118d0:	ldr	pc, [ip, #1992]!	; 0x7c8

000118d4 <funlockfile@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #28, 20	; 0x1c000
   118dc:	ldr	pc, [ip, #1984]!	; 0x7c0

000118e0 <accept@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #28, 20	; 0x1c000
   118e8:	ldr	pc, [ip, #1976]!	; 0x7b8

000118ec <sigaction@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #28, 20	; 0x1c000
   118f4:	ldr	pc, [ip, #1968]!	; 0x7b0

000118f8 <fwrite@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #28, 20	; 0x1c000
   11900:	ldr	pc, [ip, #1960]!	; 0x7a8

00011904 <strcat@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #28, 20	; 0x1c000
   1190c:	ldr	pc, [ip, #1952]!	; 0x7a0

00011910 <gettimeofday@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #28, 20	; 0x1c000
   11918:	ldr	pc, [ip, #1944]!	; 0x798

0001191c <error@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #28, 20	; 0x1c000
   11924:	ldr	pc, [ip, #1936]!	; 0x790

00011928 <opendir@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #28, 20	; 0x1c000
   11930:	ldr	pc, [ip, #1928]!	; 0x788

00011934 <open64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #28, 20	; 0x1c000
   1193c:	ldr	pc, [ip, #1920]!	; 0x780

00011940 <getenv@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #28, 20	; 0x1c000
   11948:	ldr	pc, [ip, #1912]!	; 0x778

0001194c <setgid@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #28, 20	; 0x1c000
   11954:	ldr	pc, [ip, #1904]!	; 0x770

00011958 <malloc@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #28, 20	; 0x1c000
   11960:	ldr	pc, [ip, #1896]!	; 0x768

00011964 <sigaddset@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #28, 20	; 0x1c000
   1196c:	ldr	pc, [ip, #1888]!	; 0x760

00011970 <__libc_start_main@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #28, 20	; 0x1c000
   11978:	ldr	pc, [ip, #1880]!	; 0x758

0001197c <strerror@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #28, 20	; 0x1c000
   11984:	ldr	pc, [ip, #1872]!	; 0x750

00011988 <__ctype_tolower_loc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #28, 20	; 0x1c000
   11990:	ldr	pc, [ip, #1864]!	; 0x748

00011994 <__gmon_start__@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #28, 20	; 0x1c000
   1199c:	ldr	pc, [ip, #1856]!	; 0x740

000119a0 <mempcpy@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #28, 20	; 0x1c000
   119a8:	ldr	pc, [ip, #1848]!	; 0x738

000119ac <__ctype_b_loc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #28, 20	; 0x1c000
   119b4:	ldr	pc, [ip, #1840]!	; 0x730

000119b8 <getpid@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #28, 20	; 0x1c000
   119c0:	ldr	pc, [ip, #1832]!	; 0x728

000119c4 <exit@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #28, 20	; 0x1c000
   119cc:	ldr	pc, [ip, #1824]!	; 0x720

000119d0 <strtoul@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #28, 20	; 0x1c000
   119d8:	ldr	pc, [ip, #1816]!	; 0x718

000119dc <strlen@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #28, 20	; 0x1c000
   119e4:	ldr	pc, [ip, #1808]!	; 0x710

000119e8 <setsid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #28, 20	; 0x1c000
   119f0:	ldr	pc, [ip, #1800]!	; 0x708

000119f4 <strchr@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #28, 20	; 0x1c000
   119fc:	ldr	pc, [ip, #1792]!	; 0x700

00011a00 <setenv@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #28, 20	; 0x1c000
   11a08:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a0c <fprintf@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #28, 20	; 0x1c000
   11a14:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a18 <execv@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #28, 20	; 0x1c000
   11a20:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a24 <__errno_location@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #28, 20	; 0x1c000
   11a2c:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a30 <snprintf@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #28, 20	; 0x1c000
   11a38:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a3c <strerror_r@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #28, 20	; 0x1c000
   11a44:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a48 <bind@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #28, 20	; 0x1c000
   11a50:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a54 <memset@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #28, 20	; 0x1c000
   11a5c:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a60 <strncpy@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #28, 20	; 0x1c000
   11a68:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a6c <sigsuspend@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #28, 20	; 0x1c000
   11a74:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a78 <wait3@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #28, 20	; 0x1c000
   11a80:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a84 <write@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #28, 20	; 0x1c000
   11a8c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a90 <memchr@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #28, 20	; 0x1c000
   11a98:	ldr	pc, [ip, #1688]!	; 0x698

00011a9c <fclose@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #28, 20	; 0x1c000
   11aa4:	ldr	pc, [ip, #1680]!	; 0x690

00011aa8 <sendto@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #28, 20	; 0x1c000
   11ab0:	ldr	pc, [ip, #1672]!	; 0x688

00011ab4 <__overflow@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #28, 20	; 0x1c000
   11abc:	ldr	pc, [ip, #1664]!	; 0x680

00011ac0 <sigemptyset@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #28, 20	; 0x1c000
   11ac8:	ldr	pc, [ip, #1656]!	; 0x678

00011acc <fork@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #28, 20	; 0x1c000
   11ad4:	ldr	pc, [ip, #1648]!	; 0x670

00011ad8 <getnameinfo@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #28, 20	; 0x1c000
   11ae0:	ldr	pc, [ip, #1640]!	; 0x668

00011ae4 <strrchr@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #28, 20	; 0x1c000
   11aec:	ldr	pc, [ip, #1632]!	; 0x660

00011af0 <listen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #28, 20	; 0x1c000
   11af8:	ldr	pc, [ip, #1624]!	; 0x658

00011afc <vfprintf@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #28, 20	; 0x1c000
   11b04:	ldr	pc, [ip, #1616]!	; 0x650

00011b08 <fputc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #28, 20	; 0x1c000
   11b10:	ldr	pc, [ip, #1608]!	; 0x648

00011b14 <syslog@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #28, 20	; 0x1c000
   11b1c:	ldr	pc, [ip, #1600]!	; 0x640

00011b20 <setuid@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #28, 20	; 0x1c000
   11b28:	ldr	pc, [ip, #1592]!	; 0x638

00011b2c <sprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #28, 20	; 0x1c000
   11b34:	ldr	pc, [ip, #1584]!	; 0x630

00011b38 <readdir64@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #28, 20	; 0x1c000
   11b40:	ldr	pc, [ip, #1576]!	; 0x628

00011b44 <openlog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #28, 20	; 0x1c000
   11b4c:	ldr	pc, [ip, #1568]!	; 0x620

00011b50 <getsockname@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #28, 20	; 0x1c000
   11b58:	ldr	pc, [ip, #1560]!	; 0x618

00011b5c <flockfile@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #28, 20	; 0x1c000
   11b64:	ldr	pc, [ip, #1552]!	; 0x610

00011b68 <vsnprintf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #28, 20	; 0x1c000
   11b70:	ldr	pc, [ip, #1544]!	; 0x608

00011b74 <fopen64@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #28, 20	; 0x1c000
   11b7c:	ldr	pc, [ip, #1536]!	; 0x600

00011b80 <qsort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #28, 20	; 0x1c000
   11b88:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b8c <getpeername@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #28, 20	; 0x1c000
   11b94:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b98 <freeaddrinfo@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #28, 20	; 0x1c000
   11ba0:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ba4 <getaddrinfo@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #28, 20	; 0x1c000
   11bac:	ldr	pc, [ip, #1504]!	; 0x5e0

00011bb0 <socket@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #28, 20	; 0x1c000
   11bb8:	ldr	pc, [ip, #1496]!	; 0x5d8

00011bbc <__xstat64@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #28, 20	; 0x1c000
   11bc4:	ldr	pc, [ip, #1488]!	; 0x5d0

00011bc8 <unsetenv@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #28, 20	; 0x1c000
   11bd0:	ldr	pc, [ip, #1480]!	; 0x5c8

00011bd4 <strncmp@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #28, 20	; 0x1c000
   11bdc:	ldr	pc, [ip, #1472]!	; 0x5c0

00011be0 <abort@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #28, 20	; 0x1c000
   11be8:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bec <recv@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #28, 20	; 0x1c000
   11bf4:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bf8 <close@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #28, 20	; 0x1c000
   11c00:	ldr	pc, [ip, #1448]!	; 0x5a8

00011c04 <closedir@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #28, 20	; 0x1c000
   11c0c:	ldr	pc, [ip, #1440]!	; 0x5a0

00011c10 <getgrnam@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #28, 20	; 0x1c000
   11c18:	ldr	pc, [ip, #1432]!	; 0x598

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #28, 20	; 0x1c000
   11c24:	ldr	pc, [ip, #1424]!	; 0x590

00011c28 <__assert_fail@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #28, 20	; 0x1c000
   11c30:	ldr	pc, [ip, #1416]!	; 0x588

Disassembly of section .text:

00011c34 <daemon@@Base-0x3b3c>:
   11c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c38:	mov	r6, r0
   11c3c:	sub	sp, sp, #284	; 0x11c
   11c40:	ldr	r0, [r1]
   11c44:	mov	r4, r1
   11c48:	mov	r5, r2
   11c4c:	bl	16c90 <argp_parse@@Base+0xfa0>
   11c50:	ldr	r3, [pc, #1716]	; 1230c <__assert_fail@plt+0x6e4>
   11c54:	cmp	r5, #0
   11c58:	str	r4, [r3]
   11c5c:	beq	11d30 <__assert_fail@plt+0x108>
   11c60:	ldr	r3, [r5]
   11c64:	cmp	r3, #0
   11c68:	beq	11d30 <__assert_fail@plt+0x108>
   11c6c:	ldr	r3, [r5, #4]!
   11c70:	cmp	r3, #0
   11c74:	bne	11c6c <__assert_fail@plt+0x44>
   11c78:	ldr	r5, [r5, #-4]
   11c7c:	ldr	r9, [pc, #1676]	; 12310 <__assert_fail@plt+0x6e8>
   11c80:	mov	r0, r5
   11c84:	bl	119dc <strlen@plt>
   11c88:	ldr	r3, [pc, #1668]	; 12314 <__assert_fail@plt+0x6ec>
   11c8c:	ldr	r2, [pc, #1668]	; 12318 <__assert_fail@plt+0x6f0>
   11c90:	ldr	ip, [pc, #1668]	; 1231c <__assert_fail@plt+0x6f4>
   11c94:	ldr	r1, [pc, #1668]	; 12320 <__assert_fail@plt+0x6f8>
   11c98:	str	ip, [r2]
   11c9c:	add	r5, r5, r0
   11ca0:	ldr	r0, [pc, #1660]	; 12324 <__assert_fail@plt+0x6fc>
   11ca4:	str	r5, [r3]
   11ca8:	bl	16ab4 <argp_parse@@Base+0xdc4>
   11cac:	mov	r3, #0
   11cb0:	add	r2, sp, #16
   11cb4:	mov	r1, r6
   11cb8:	stm	sp, {r2, r3}
   11cbc:	ldr	r0, [pc, #1636]	; 12328 <__assert_fail@plt+0x700>
   11cc0:	mov	r2, r4
   11cc4:	bl	15cf0 <argp_parse@@Base>
   11cc8:	ldrb	r3, [r9, #2]
   11ccc:	cmp	r3, #0
   11cd0:	movne	r3, #1
   11cd4:	strbne	r3, [r9, #1]
   11cd8:	ldr	r3, [sp, #16]
   11cdc:	cmp	r6, r3
   11ce0:	ble	11d44 <__assert_fail@plt+0x11c>
   11ce4:	sub	r3, r6, r3
   11ce8:	add	r0, r3, #1
   11cec:	mov	r1, #4
   11cf0:	bl	17138 <argp_parse@@Base+0x1448>
   11cf4:	ldr	r2, [pc, #1584]	; 1232c <__assert_fail@plt+0x704>
   11cf8:	ldr	r3, [sp, #16]
   11cfc:	cmp	r6, r3
   11d00:	str	r0, [r2]
   11d04:	ble	11d84 <__assert_fail@plt+0x15c>
   11d08:	sub	r5, r0, #4
   11d0c:	ldr	r0, [r4, r3, lsl #2]
   11d10:	bl	11874 <strdup@plt>
   11d14:	ldr	r3, [sp, #16]
   11d18:	add	r3, r3, #1
   11d1c:	cmp	r6, r3
   11d20:	str	r3, [sp, #16]
   11d24:	str	r0, [r5, #4]!
   11d28:	bgt	11d0c <__assert_fail@plt+0xe4>
   11d2c:	b	11d84 <__assert_fail@plt+0x15c>
   11d30:	ldr	r3, [r4]
   11d34:	mov	r5, r4
   11d38:	cmp	r3, #0
   11d3c:	bne	11c6c <__assert_fail@plt+0x44>
   11d40:	b	11c78 <__assert_fail@plt+0x50>
   11d44:	mov	r1, #4
   11d48:	mov	r0, #3
   11d4c:	bl	17138 <argp_parse@@Base+0x1448>
   11d50:	ldr	r3, [pc, #1492]	; 1232c <__assert_fail@plt+0x704>
   11d54:	mov	r5, r0
   11d58:	ldr	r0, [pc, #1488]	; 12330 <__assert_fail@plt+0x708>
   11d5c:	str	r5, [r3]
   11d60:	bl	11874 <strdup@plt>
   11d64:	subs	r3, r0, #0
   11d68:	beq	122f0 <__assert_fail@plt+0x6c8>
   11d6c:	ldr	r0, [pc, #1472]	; 12334 <__assert_fail@plt+0x70c>
   11d70:	str	r3, [r5]
   11d74:	bl	11874 <strdup@plt>
   11d78:	cmp	r0, #0
   11d7c:	strne	r0, [r5, #4]
   11d80:	beq	122f0 <__assert_fail@plt+0x6c8>
   11d84:	ldrb	r1, [r9]
   11d88:	cmp	r1, #0
   11d8c:	bne	11da0 <__assert_fail@plt+0x178>
   11d90:	mov	r0, r1
   11d94:	bl	15770 <daemon@@Base>
   11d98:	cmp	r0, #0
   11d9c:	blt	122f4 <__assert_fail@plt+0x6cc>
   11da0:	mov	r2, #24
   11da4:	mov	r1, #17
   11da8:	ldr	r0, [pc, #1396]	; 12324 <__assert_fail@plt+0x6fc>
   11dac:	bl	11b44 <openlog@plt>
   11db0:	ldr	r3, [pc, #1408]	; 12338 <__assert_fail@plt+0x710>
   11db4:	ldrb	r3, [r3, #4]
   11db8:	cmp	r3, #0
   11dbc:	bne	1225c <__assert_fail@plt+0x634>
   11dc0:	ldr	r3, [pc, #1396]	; 1233c <__assert_fail@plt+0x714>
   11dc4:	str	r3, [sp, #12]
   11dc8:	ldr	r1, [pc, #1392]	; 12340 <__assert_fail@plt+0x718>
   11dcc:	mov	r0, #14
   11dd0:	bl	12958 <__assert_fail@plt+0xd30>
   11dd4:	mov	r0, #0
   11dd8:	bl	14770 <__assert_fail@plt+0x2b48>
   11ddc:	ldr	r1, [pc, #1376]	; 12344 <__assert_fail@plt+0x71c>
   11de0:	mov	r0, #1
   11de4:	bl	12958 <__assert_fail@plt+0xd30>
   11de8:	ldr	r1, [pc, #1368]	; 12348 <__assert_fail@plt+0x720>
   11dec:	mov	r0, #17
   11df0:	bl	12958 <__assert_fail@plt+0xd30>
   11df4:	add	r7, sp, #152	; 0x98
   11df8:	mov	r1, #1
   11dfc:	mov	r0, #13
   11e00:	bl	12958 <__assert_fail@plt+0xd30>
   11e04:	mov	r2, #99	; 0x63
   11e08:	mov	r1, #120	; 0x78
   11e0c:	mov	r0, r7
   11e10:	bl	11a54 <memset@plt>
   11e14:	mov	r3, #0
   11e18:	mov	r1, r7
   11e1c:	mov	r2, #1
   11e20:	ldr	r0, [pc, #1316]	; 1234c <__assert_fail@plt+0x724>
   11e24:	strb	r3, [sp, #251]	; 0xfb
   11e28:	bl	11a00 <setenv@plt>
   11e2c:	ldr	r6, [pc, #1308]	; 12350 <__assert_fail@plt+0x728>
   11e30:	ldr	sl, [pc, #1308]	; 12354 <__assert_fail@plt+0x72c>
   11e34:	ldr	r4, [r6]
   11e38:	cmp	r4, #0
   11e3c:	bne	11e74 <__assert_fail@plt+0x24c>
   11e40:	mov	r0, r7
   11e44:	bl	11ac0 <sigemptyset@plt>
   11e48:	mov	r0, r4
   11e4c:	bl	129b0 <__assert_fail@plt+0xd88>
   11e50:	ldr	r3, [r6]
   11e54:	cmp	r3, #0
   11e58:	bne	11e70 <__assert_fail@plt+0x248>
   11e5c:	mov	r0, r7
   11e60:	bl	11a6c <sigsuspend@plt>
   11e64:	ldr	r3, [r6]
   11e68:	cmp	r3, #0
   11e6c:	beq	11e5c <__assert_fail@plt+0x234>
   11e70:	bl	128ac <__assert_fail@plt+0xc84>
   11e74:	mov	r2, #128	; 0x80
   11e78:	ldr	r1, [pc, #1240]	; 12358 <__assert_fail@plt+0x730>
   11e7c:	add	r0, sp, #24
   11e80:	bl	11808 <memcpy@plt>
   11e84:	ldr	r0, [sl]
   11e88:	mov	r3, #0
   11e8c:	add	r0, r0, #1
   11e90:	str	r3, [sp]
   11e94:	mov	r2, r3
   11e98:	add	r1, sp, #24
   11e9c:	bl	11844 <select@plt>
   11ea0:	subs	r8, r0, #0
   11ea4:	ble	120f0 <__assert_fail@plt+0x4c8>
   11ea8:	ldr	r3, [pc, #1196]	; 1235c <__assert_fail@plt+0x734>
   11eac:	ldr	r4, [r3]
   11eb0:	cmp	r4, #0
   11eb4:	bne	11ef4 <__assert_fail@plt+0x2cc>
   11eb8:	b	11e34 <__assert_fail@plt+0x20c>
   11ebc:	bl	128ac <__assert_fail@plt+0xc84>
   11ec0:	mov	r1, r4
   11ec4:	mov	r0, r5
   11ec8:	bl	12a18 <__assert_fail@plt+0xdf0>
   11ecc:	ldr	r3, [r4, #24]
   11ed0:	cmp	r3, #0
   11ed4:	bne	11ee4 <__assert_fail@plt+0x2bc>
   11ed8:	ldr	r3, [r4, #16]
   11edc:	cmp	r3, #1
   11ee0:	beq	121d8 <__assert_fail@plt+0x5b0>
   11ee4:	ldr	r4, [r4, #220]	; 0xdc
   11ee8:	cmp	r8, #0
   11eec:	cmpne	r4, #0
   11ef0:	beq	11e34 <__assert_fail@plt+0x20c>
   11ef4:	ldr	r5, [r4, #60]	; 0x3c
   11ef8:	cmn	r5, #1
   11efc:	beq	11ee4 <__assert_fail@plt+0x2bc>
   11f00:	cmp	r5, #0
   11f04:	add	r3, r5, #31
   11f08:	movge	r3, r5
   11f0c:	asr	r2, r5, #31
   11f10:	asr	r3, r3, #5
   11f14:	lsr	r2, r2, #27
   11f18:	add	r1, sp, #280	; 0x118
   11f1c:	add	r3, r1, r3, lsl #2
   11f20:	add	r1, r5, r2
   11f24:	and	r1, r1, #31
   11f28:	sub	r2, r1, r2
   11f2c:	ldr	r3, [r3, #-256]	; 0xffffff00
   11f30:	mov	r1, #1
   11f34:	ands	r3, r3, r1, lsl r2
   11f38:	beq	11ee4 <__assert_fail@plt+0x2bc>
   11f3c:	ldrb	r3, [r9]
   11f40:	sub	r8, r8, #1
   11f44:	cmp	r3, #0
   11f48:	bne	12078 <__assert_fail@plt+0x450>
   11f4c:	ldr	r3, [r4, #24]
   11f50:	cmp	r3, #0
   11f54:	bne	11f64 <__assert_fail@plt+0x33c>
   11f58:	ldr	r3, [r4, #16]
   11f5c:	cmp	r3, #1
   11f60:	beq	12100 <__assert_fail@plt+0x4d8>
   11f64:	mov	r0, #0
   11f68:	bl	129b0 <__assert_fail@plt+0xd88>
   11f6c:	ldr	r3, [r4, #44]	; 0x2c
   11f70:	cmp	r3, #0
   11f74:	beq	11f84 <__assert_fail@plt+0x35c>
   11f78:	ldrsh	r3, [r3, #8]
   11f7c:	cmp	r3, #0
   11f80:	beq	11ebc <__assert_fail@plt+0x294>
   11f84:	ldr	r1, [r4, #208]	; 0xd0
   11f88:	add	r3, r1, #1
   11f8c:	cmp	r1, #0
   11f90:	str	r3, [r4, #208]	; 0xd0
   11f94:	beq	120a8 <__assert_fail@plt+0x480>
   11f98:	ldr	r2, [r4, #28]
   11f9c:	cmp	r2, #0
   11fa0:	cmpne	r3, r2
   11fa4:	bls	12094 <__assert_fail@plt+0x46c>
   11fa8:	mov	r1, #0
   11fac:	mov	r0, r7
   11fb0:	bl	11910 <gettimeofday@plt>
   11fb4:	ldr	r3, [sp, #152]	; 0x98
   11fb8:	ldr	r2, [r4, #212]	; 0xd4
   11fbc:	sub	r3, r3, r2
   11fc0:	cmp	r3, #60	; 0x3c
   11fc4:	ble	12150 <__assert_fail@plt+0x528>
   11fc8:	ldm	r7, {r0, r1}
   11fcc:	add	r3, r4, #212	; 0xd4
   11fd0:	mov	r2, #1
   11fd4:	stm	r3, {r0, r1}
   11fd8:	str	r2, [r4, #208]	; 0xd0
   11fdc:	bl	11acc <fork@plt>
   11fe0:	cmp	r0, #0
   11fe4:	blt	120bc <__assert_fail@plt+0x494>
   11fe8:	bne	12028 <__assert_fail@plt+0x400>
   11fec:	bl	128ac <__assert_fail@plt+0xc84>
   11ff0:	ldrb	r3, [r9]
   11ff4:	cmp	r3, #0
   11ff8:	bne	121b0 <__assert_fail@plt+0x588>
   11ffc:	ldr	fp, [sl]
   12000:	cmp	fp, #2
   12004:	ble	11ec0 <__assert_fail@plt+0x298>
   12008:	cmp	r5, fp
   1200c:	beq	12018 <__assert_fail@plt+0x3f0>
   12010:	mov	r0, fp
   12014:	bl	11bf8 <close@plt>
   12018:	sub	fp, fp, #1
   1201c:	cmp	fp, #2
   12020:	bne	12008 <__assert_fail@plt+0x3e0>
   12024:	b	11ec0 <__assert_fail@plt+0x298>
   12028:	ldr	r3, [r4, #24]
   1202c:	cmp	r3, #0
   12030:	beq	12070 <__assert_fail@plt+0x448>
   12034:	ldr	r3, [r4, #60]	; 0x3c
   12038:	str	r0, [r4, #24]
   1203c:	cmp	r3, #0
   12040:	blt	12070 <__assert_fail@plt+0x448>
   12044:	ldr	r2, [pc, #780]	; 12358 <__assert_fail@plt+0x730>
   12048:	asr	r0, r3, #5
   1204c:	mov	ip, #1
   12050:	ldr	r1, [r2, r0, lsl #2]
   12054:	and	r3, r3, #31
   12058:	ldr	r2, [r6]
   1205c:	bic	r3, r1, ip, lsl r3
   12060:	ldr	r1, [pc, #752]	; 12358 <__assert_fail@plt+0x730>
   12064:	sub	r2, r2, #1
   12068:	str	r2, [r6]
   1206c:	str	r3, [r1, r0, lsl #2]
   12070:	bl	128ac <__assert_fail@plt+0xc84>
   12074:	b	11ecc <__assert_fail@plt+0x2a4>
   12078:	ldr	r3, [sp, #12]
   1207c:	ldr	r2, [r4, #12]
   12080:	ldr	r1, [pc, #728]	; 12360 <__assert_fail@plt+0x738>
   12084:	ldr	r0, [r3]
   12088:	bl	11a0c <fprintf@plt>
   1208c:	ldr	r5, [r4, #60]	; 0x3c
   12090:	b	11f4c <__assert_fail@plt+0x324>
   12094:	ldr	r2, [pc, #668]	; 12338 <__assert_fail@plt+0x710>
   12098:	ldr	r2, [r2, #8]
   1209c:	cmp	r3, r2
   120a0:	bcc	11fdc <__assert_fail@plt+0x3b4>
   120a4:	b	11fa8 <__assert_fail@plt+0x380>
   120a8:	add	r0, r4, #212	; 0xd4
   120ac:	bl	11910 <gettimeofday@plt>
   120b0:	bl	11acc <fork@plt>
   120b4:	cmp	r0, #0
   120b8:	bge	11fe8 <__assert_fail@plt+0x3c0>
   120bc:	ldr	r1, [pc, #672]	; 12364 <__assert_fail@plt+0x73c>
   120c0:	mov	r0, #3
   120c4:	bl	11b14 <syslog@plt>
   120c8:	ldr	r3, [r4, #24]
   120cc:	cmp	r3, #0
   120d0:	bne	120e0 <__assert_fail@plt+0x4b8>
   120d4:	ldr	r3, [r4, #16]
   120d8:	cmp	r3, #1
   120dc:	beq	12244 <__assert_fail@plt+0x61c>
   120e0:	bl	128ac <__assert_fail@plt+0xc84>
   120e4:	mov	r0, #1
   120e8:	bl	11850 <sleep@plt>
   120ec:	b	11ee4 <__assert_fail@plt+0x2bc>
   120f0:	bne	121e4 <__assert_fail@plt+0x5bc>
   120f4:	mov	r0, #1
   120f8:	bl	11850 <sleep@plt>
   120fc:	b	11e34 <__assert_fail@plt+0x20c>
   12100:	mov	r3, #128	; 0x80
   12104:	mov	r0, r5
   12108:	add	r2, sp, #20
   1210c:	mov	r1, r7
   12110:	str	r3, [sp, #20]
   12114:	bl	118e0 <accept@plt>
   12118:	ldrb	r3, [r9]
   1211c:	cmp	r3, #0
   12120:	mov	r5, r0
   12124:	bne	12204 <__assert_fail@plt+0x5dc>
   12128:	cmp	r5, #0
   1212c:	blt	12220 <__assert_fail@plt+0x5f8>
   12130:	ldrb	r3, [r9, #1]
   12134:	cmp	r3, #0
   12138:	beq	11f64 <__assert_fail@plt+0x33c>
   1213c:	ldr	r2, [sp, #20]
   12140:	mov	r1, r7
   12144:	mov	r0, r5
   12148:	bl	14e58 <__assert_fail@plt+0x3230>
   1214c:	b	11f64 <__assert_fail@plt+0x33c>
   12150:	ldr	r3, [r4, #20]
   12154:	ldr	r2, [r4, #12]
   12158:	ldr	r1, [pc, #520]	; 12368 <__assert_fail@plt+0x740>
   1215c:	mov	r0, #3
   12160:	bl	11b14 <syslog@plt>
   12164:	mov	r0, r4
   12168:	bl	13488 <__assert_fail@plt+0x1860>
   1216c:	ldr	r3, [r4, #24]
   12170:	cmp	r3, #0
   12174:	bne	12184 <__assert_fail@plt+0x55c>
   12178:	ldr	r3, [r4, #16]
   1217c:	cmp	r3, #1
   12180:	beq	12250 <__assert_fail@plt+0x628>
   12184:	bl	128ac <__assert_fail@plt+0xc84>
   12188:	ldr	r3, [pc, #476]	; 1236c <__assert_fail@plt+0x744>
   1218c:	ldr	r3, [r3]
   12190:	cmp	r3, #0
   12194:	bne	11ee4 <__assert_fail@plt+0x2bc>
   12198:	ldr	r2, [pc, #460]	; 1236c <__assert_fail@plt+0x744>
   1219c:	mov	r3, #1
   121a0:	mov	r0, #600	; 0x258
   121a4:	str	r3, [r2]
   121a8:	bl	11880 <alarm@plt>
   121ac:	b	11ee4 <__assert_fail@plt+0x2bc>
   121b0:	bl	119e8 <setsid@plt>
   121b4:	ldrb	r3, [r9]
   121b8:	cmp	r3, #0
   121bc:	beq	11ffc <__assert_fail@plt+0x3d4>
   121c0:	ldr	r3, [sp, #12]
   121c4:	ldr	r2, [sl]
   121c8:	ldr	r1, [pc, #416]	; 12370 <__assert_fail@plt+0x748>
   121cc:	ldr	r0, [r3]
   121d0:	bl	11a0c <fprintf@plt>
   121d4:	b	11ffc <__assert_fail@plt+0x3d4>
   121d8:	mov	r0, r5
   121dc:	bl	11bf8 <close@plt>
   121e0:	b	11ee4 <__assert_fail@plt+0x2bc>
   121e4:	bl	11a24 <__errno_location@plt>
   121e8:	ldr	r3, [r0]
   121ec:	cmp	r3, #4
   121f0:	beq	120f4 <__assert_fail@plt+0x4cc>
   121f4:	ldr	r1, [pc, #376]	; 12374 <__assert_fail@plt+0x74c>
   121f8:	mov	r0, #4
   121fc:	bl	11b14 <syslog@plt>
   12200:	b	120f4 <__assert_fail@plt+0x4cc>
   12204:	ldr	r3, [sp, #12]
   12208:	mov	r2, r0
   1220c:	ldr	r1, [pc, #356]	; 12378 <__assert_fail@plt+0x750>
   12210:	ldr	r0, [r3]
   12214:	bl	11a0c <fprintf@plt>
   12218:	cmp	r5, #0
   1221c:	bge	12130 <__assert_fail@plt+0x508>
   12220:	bl	11a24 <__errno_location@plt>
   12224:	ldr	r3, [r0]
   12228:	cmp	r3, #4
   1222c:	beq	11ee4 <__assert_fail@plt+0x2bc>
   12230:	ldr	r2, [r4, #12]
   12234:	ldr	r1, [pc, #320]	; 1237c <__assert_fail@plt+0x754>
   12238:	mov	r0, #4
   1223c:	bl	11b14 <syslog@plt>
   12240:	b	11ee4 <__assert_fail@plt+0x2bc>
   12244:	mov	r0, r5
   12248:	bl	11bf8 <close@plt>
   1224c:	b	120e0 <__assert_fail@plt+0x4b8>
   12250:	mov	r0, r5
   12254:	bl	11bf8 <close@plt>
   12258:	b	12184 <__assert_fail@plt+0x55c>
   1225c:	ldr	r3, [pc, #212]	; 12338 <__assert_fail@plt+0x710>
   12260:	ldr	r1, [pc, #280]	; 12380 <__assert_fail@plt+0x758>
   12264:	ldr	r0, [r3]
   12268:	bl	11b74 <fopen64@plt>
   1226c:	subs	r4, r0, #0
   12270:	beq	122bc <__assert_fail@plt+0x694>
   12274:	ldrb	r3, [r9]
   12278:	cmp	r3, #0
   1227c:	ldr	r3, [pc, #184]	; 1233c <__assert_fail@plt+0x714>
   12280:	str	r3, [sp, #12]
   12284:	beq	1229c <__assert_fail@plt+0x674>
   12288:	ldr	r2, [pc, #168]	; 12338 <__assert_fail@plt+0x710>
   1228c:	ldr	r1, [pc, #240]	; 12384 <__assert_fail@plt+0x75c>
   12290:	ldr	r0, [r3]
   12294:	ldr	r2, [r2]
   12298:	bl	11a0c <fprintf@plt>
   1229c:	bl	119b8 <getpid@plt>
   122a0:	ldr	r1, [pc, #224]	; 12388 <__assert_fail@plt+0x760>
   122a4:	mov	r2, r0
   122a8:	mov	r0, r4
   122ac:	bl	11a0c <fprintf@plt>
   122b0:	mov	r0, r4
   122b4:	bl	11a9c <fclose@plt>
   122b8:	b	11dc8 <__assert_fail@plt+0x1a0>
   122bc:	bl	11a24 <__errno_location@plt>
   122c0:	ldr	r3, [pc, #112]	; 12338 <__assert_fail@plt+0x710>
   122c4:	ldr	r4, [r3]
   122c8:	ldr	r3, [pc, #108]	; 1233c <__assert_fail@plt+0x714>
   122cc:	str	r3, [sp, #12]
   122d0:	ldr	r0, [r0]
   122d4:	bl	1197c <strerror@plt>
   122d8:	mov	r2, r4
   122dc:	ldr	r1, [pc, #168]	; 1238c <__assert_fail@plt+0x764>
   122e0:	mov	r3, r0
   122e4:	mov	r0, #2
   122e8:	bl	11b14 <syslog@plt>
   122ec:	b	11dc8 <__assert_fail@plt+0x1a0>
   122f0:	bl	128d4 <__assert_fail@plt+0xcac>
   122f4:	mov	r0, #27
   122f8:	ldr	r2, [r4]
   122fc:	ldr	r1, [pc, #140]	; 12390 <__assert_fail@plt+0x768>
   12300:	bl	11b14 <syslog@plt>
   12304:	mov	r0, #1
   12308:	bl	119c4 <exit@plt>
   1230c:	strdeq	lr, [r2], -r4
   12310:			; <UNDEFINED> instruction: 0x0002e3bc
   12314:	strdeq	lr, [r2], -r8
   12318:	andeq	lr, r2, r4, lsl r6
   1231c:	muleq	r1, r8, r1
   12320:	muleq	r2, ip, r2
   12324:			; <UNDEFINED> instruction: 0x0001c1b0
   12328:	andeq	lr, r2, r4, asr #5
   1232c:	andeq	lr, r2, r8, lsl #12
   12330:			; <UNDEFINED> instruction: 0x0001c1b8
   12334:	ldrdeq	ip, [r1], -r4
   12338:	andeq	lr, r2, r8, asr #3
   1233c:			; <UNDEFINED> instruction: 0x0002e3b0
   12340:	andeq	r3, r1, ip, lsr r3
   12344:	andeq	r4, r1, r0, ror r7
   12348:			; <UNDEFINED> instruction: 0x000124bc
   1234c:	andeq	ip, r1, r4, asr #4
   12350:	andeq	lr, r2, ip, ror #11
   12354:	andeq	lr, r2, r4, ror #10
   12358:	andeq	lr, r2, r8, ror #10
   1235c:	andeq	lr, r2, ip, lsl #12
   12360:	andeq	fp, r1, ip, asr #21
   12364:			; <UNDEFINED> instruction: 0x0001c2b8
   12368:	andeq	ip, r1, r4, lsl #5
   1236c:	andeq	lr, r2, r0, lsl #12
   12370:	andeq	ip, r1, r4, asr #5
   12374:	andeq	ip, r1, r0, asr r2
   12378:	andeq	ip, r1, ip, asr r2
   1237c:	andeq	ip, r1, r0, ror r2
   12380:	andeq	ip, r1, r0, lsl r2
   12384:	andeq	ip, r1, r4, lsl r2
   12388:	andeq	fp, r1, r8, ror #19
   1238c:	andeq	ip, r1, r0, lsr r2
   12390:	andeq	ip, r1, ip, ror #3
   12394:	mov	fp, #0
   12398:	mov	lr, #0
   1239c:	pop	{r1}		; (ldr r1, [sp], #4)
   123a0:	mov	r2, sp
   123a4:	push	{r2}		; (str r2, [sp, #-4]!)
   123a8:	push	{r0}		; (str r0, [sp, #-4]!)
   123ac:	ldr	ip, [pc, #16]	; 123c4 <__assert_fail@plt+0x79c>
   123b0:	push	{ip}		; (str ip, [sp, #-4]!)
   123b4:	ldr	r0, [pc, #12]	; 123c8 <__assert_fail@plt+0x7a0>
   123b8:	ldr	r3, [pc, #12]	; 123cc <__assert_fail@plt+0x7a4>
   123bc:	bl	11970 <__libc_start_main@plt>
   123c0:	bl	11be0 <abort@plt>
   123c4:	andeq	fp, r1, r4, ror #18
   123c8:	andeq	r1, r1, r4, lsr ip
   123cc:	andeq	fp, r1, r4, lsl #18
   123d0:	ldr	r3, [pc, #20]	; 123ec <__assert_fail@plt+0x7c4>
   123d4:	ldr	r2, [pc, #20]	; 123f0 <__assert_fail@plt+0x7c8>
   123d8:	add	r3, pc, r3
   123dc:	ldr	r2, [r3, r2]
   123e0:	cmp	r2, #0
   123e4:	bxeq	lr
   123e8:	b	11994 <__gmon_start__@plt>
   123ec:	andeq	fp, r1, r0, lsr #24
   123f0:			; <UNDEFINED> instruction: 0x000001bc
   123f4:	ldr	r3, [pc, #28]	; 12418 <__assert_fail@plt+0x7f0>
   123f8:	ldr	r0, [pc, #28]	; 1241c <__assert_fail@plt+0x7f4>
   123fc:	sub	r3, r3, r0
   12400:	cmp	r3, #6
   12404:	bxls	lr
   12408:	ldr	r3, [pc, #16]	; 12420 <__assert_fail@plt+0x7f8>
   1240c:	cmp	r3, #0
   12410:	bxeq	lr
   12414:	bx	r3
   12418:	andeq	lr, r2, fp, lsr #7
   1241c:	andeq	lr, r2, r8, lsr #7
   12420:	andeq	r0, r0, r0
   12424:	ldr	r1, [pc, #36]	; 12450 <__assert_fail@plt+0x828>
   12428:	ldr	r0, [pc, #36]	; 12454 <__assert_fail@plt+0x82c>
   1242c:	sub	r1, r1, r0
   12430:	asr	r1, r1, #2
   12434:	add	r1, r1, r1, lsr #31
   12438:	asrs	r1, r1, #1
   1243c:	bxeq	lr
   12440:	ldr	r3, [pc, #16]	; 12458 <__assert_fail@plt+0x830>
   12444:	cmp	r3, #0
   12448:	bxeq	lr
   1244c:	bx	r3
   12450:	andeq	lr, r2, r8, lsr #7
   12454:	andeq	lr, r2, r8, lsr #7
   12458:	andeq	r0, r0, r0
   1245c:	push	{r4, lr}
   12460:	ldr	r4, [pc, #24]	; 12480 <__assert_fail@plt+0x858>
   12464:	ldrb	r3, [r4]
   12468:	cmp	r3, #0
   1246c:	popne	{r4, pc}
   12470:	bl	123f4 <__assert_fail@plt+0x7cc>
   12474:	mov	r3, #1
   12478:	strb	r3, [r4]
   1247c:	pop	{r4, pc}
   12480:			; <UNDEFINED> instruction: 0x0002e3b8
   12484:	ldr	r0, [pc, #40]	; 124b4 <__assert_fail@plt+0x88c>
   12488:	ldr	r3, [r0]
   1248c:	cmp	r3, #0
   12490:	bne	12498 <__assert_fail@plt+0x870>
   12494:	b	12424 <__assert_fail@plt+0x7fc>
   12498:	ldr	r3, [pc, #24]	; 124b8 <__assert_fail@plt+0x890>
   1249c:	cmp	r3, #0
   124a0:	beq	12494 <__assert_fail@plt+0x86c>
   124a4:	push	{r4, lr}
   124a8:	blx	r3
   124ac:	pop	{r4, lr}
   124b0:	b	12424 <__assert_fail@plt+0x7fc>
   124b4:	andeq	sp, r2, ip, lsl #30
   124b8:	andeq	r0, r0, r0
   124bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124c0:	sub	sp, sp, #12
   124c4:	ldr	r9, [pc, #284]	; 125e8 <__assert_fail@plt+0x9c0>
   124c8:	ldr	r8, [pc, #284]	; 125ec <__assert_fail@plt+0x9c4>
   124cc:	ldr	r7, [pc, #284]	; 125f0 <__assert_fail@plt+0x9c8>
   124d0:	mov	r2, #0
   124d4:	mov	r1, #1
   124d8:	add	r0, sp, #4
   124dc:	bl	11a78 <wait3@plt>
   124e0:	subs	r5, r0, #0
   124e4:	ble	125e0 <__assert_fail@plt+0x9b8>
   124e8:	ldrb	r3, [r9]
   124ec:	cmp	r3, #0
   124f0:	bne	125c4 <__assert_fail@plt+0x99c>
   124f4:	ldr	r3, [pc, #248]	; 125f4 <__assert_fail@plt+0x9cc>
   124f8:	ldr	r4, [r3]
   124fc:	cmp	r4, #0
   12500:	beq	124d0 <__assert_fail@plt+0x8a8>
   12504:	ldr	fp, [pc, #236]	; 125f8 <__assert_fail@plt+0x9d0>
   12508:	ldr	sl, [pc, #236]	; 125fc <__assert_fail@plt+0x9d4>
   1250c:	mov	r6, #1
   12510:	b	12520 <__assert_fail@plt+0x8f8>
   12514:	ldr	r4, [r4, #220]	; 0xdc
   12518:	cmp	r4, #0
   1251c:	beq	124d0 <__assert_fail@plt+0x8a8>
   12520:	ldr	r3, [r4, #24]
   12524:	cmp	r5, r3
   12528:	bne	12514 <__assert_fail@plt+0x8ec>
   1252c:	ldr	r3, [sp, #4]
   12530:	cmp	r3, #0
   12534:	bne	1258c <__assert_fail@plt+0x964>
   12538:	ldrb	r3, [r9]
   1253c:	cmp	r3, #0
   12540:	bne	125a8 <__assert_fail@plt+0x980>
   12544:	ldr	r3, [r4, #60]	; 0x3c
   12548:	ldr	r1, [r7]
   1254c:	cmp	r3, #0
   12550:	asr	r0, r3, #31
   12554:	add	r2, r3, #31
   12558:	movge	r2, r3
   1255c:	lsr	r0, r0, #27
   12560:	add	r3, r3, r0
   12564:	asr	r2, r2, #5
   12568:	and	r3, r3, #31
   1256c:	sub	r3, r3, r0
   12570:	ldr	r0, [r8, r2, lsl #2]
   12574:	add	r1, r1, #1
   12578:	orr	r3, r0, r6, lsl r3
   1257c:	str	r1, [r7]
   12580:	str	r3, [r8, r2, lsl #2]
   12584:	str	r6, [r4, #24]
   12588:	b	12514 <__assert_fail@plt+0x8ec>
   1258c:	ldr	r2, [r4, #48]	; 0x30
   12590:	mov	r1, sl
   12594:	mov	r0, #4
   12598:	bl	11b14 <syslog@plt>
   1259c:	ldrb	r3, [r9]
   125a0:	cmp	r3, #0
   125a4:	beq	12544 <__assert_fail@plt+0x91c>
   125a8:	ldr	r0, [pc, #80]	; 12600 <__assert_fail@plt+0x9d8>
   125ac:	ldr	r3, [r4, #60]	; 0x3c
   125b0:	ldr	r2, [r4, #12]
   125b4:	mov	r1, fp
   125b8:	ldr	r0, [r0]
   125bc:	bl	11a0c <fprintf@plt>
   125c0:	b	12544 <__assert_fail@plt+0x91c>
   125c4:	ldr	r0, [pc, #52]	; 12600 <__assert_fail@plt+0x9d8>
   125c8:	ldr	r3, [sp, #4]
   125cc:	mov	r2, r5
   125d0:	ldr	r1, [pc, #44]	; 12604 <__assert_fail@plt+0x9dc>
   125d4:	ldr	r0, [r0]
   125d8:	bl	11a0c <fprintf@plt>
   125dc:	b	124f4 <__assert_fail@plt+0x8cc>
   125e0:	add	sp, sp, #12
   125e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125e8:			; <UNDEFINED> instruction: 0x0002e3bc
   125ec:	andeq	lr, r2, r8, ror #10
   125f0:	andeq	lr, r2, ip, ror #11
   125f4:	andeq	lr, r2, ip, lsl #12
   125f8:	ldrdeq	fp, [r1], -r8
   125fc:	andeq	fp, r1, r0, asr #19
   12600:			; <UNDEFINED> instruction: 0x0002e3b0
   12604:	andeq	fp, r1, r8, lsr #19
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	sub	sp, sp, #8192	; 0x2000
   12610:	sub	sp, sp, #4
   12614:	mov	r2, #8192	; 0x2000
   12618:	mov	r1, sp
   1261c:	bl	1179c <read@plt>
   12620:	add	sp, sp, #8192	; 0x2000
   12624:	add	sp, sp, #4
   12628:	pop	{pc}		; (ldr pc, [sp], #4)
   1262c:	push	{r4, r5, lr}
   12630:	sub	sp, sp, #8320	; 0x2080
   12634:	sub	sp, sp, #20
   12638:	add	r3, sp, #12
   1263c:	add	r2, sp, #16
   12640:	add	r1, sp, #144	; 0x90
   12644:	stm	sp, {r2, r3}
   12648:	mov	r4, #128	; 0x80
   1264c:	mov	r2, #8192	; 0x2000
   12650:	mov	r3, #0
   12654:	str	r4, [sp, #12]
   12658:	mov	r5, r0
   1265c:	bl	11868 <recvfrom@plt>
   12660:	subs	r2, r0, #0
   12664:	blt	12684 <__assert_fail@plt+0xa5c>
   12668:	add	r3, sp, #16
   1266c:	str	r3, [sp]
   12670:	str	r4, [sp, #4]
   12674:	add	r1, sp, #144	; 0x90
   12678:	mov	r0, r5
   1267c:	mov	r3, #0
   12680:	bl	11aa8 <sendto@plt>
   12684:	add	sp, sp, #8320	; 0x2080
   12688:	add	sp, sp, #20
   1268c:	pop	{r4, r5, pc}
   12690:	push	{r4, lr}
   12694:	mov	r4, r0
   12698:	sub	sp, sp, #264	; 0x108
   1269c:	mov	r0, #0
   126a0:	bl	11820 <time@plt>
   126a4:	add	r3, sp, #264	; 0x108
   126a8:	str	r0, [r3, #-260]!	; 0xfffffefc
   126ac:	mov	r0, r3
   126b0:	bl	1185c <ctime@plt>
   126b4:	ldr	r1, [pc, #40]	; 126e4 <__assert_fail@plt+0xabc>
   126b8:	mov	r2, r0
   126bc:	add	r0, sp, #8
   126c0:	bl	11b2c <sprintf@plt>
   126c4:	add	r0, sp, #8
   126c8:	bl	119dc <strlen@plt>
   126cc:	add	r1, sp, #8
   126d0:	mov	r2, r0
   126d4:	mov	r0, r4
   126d8:	bl	11a84 <write@plt>
   126dc:	add	sp, sp, #264	; 0x108
   126e0:	pop	{r4, pc}
   126e4:	andeq	fp, r1, ip, ror #19
   126e8:	push	{r4, r5, lr}
   126ec:	mov	r4, r0
   126f0:	sub	sp, sp, #404	; 0x194
   126f4:	mov	r0, #0
   126f8:	bl	11820 <time@plt>
   126fc:	add	r3, sp, #12
   12700:	add	r2, sp, #16
   12704:	str	r2, [sp]
   12708:	str	r3, [sp, #4]
   1270c:	add	r1, sp, #144	; 0x90
   12710:	mov	r5, #128	; 0x80
   12714:	mov	r3, #0
   12718:	mov	r2, #256	; 0x100
   1271c:	str	r5, [sp, #12]
   12720:	str	r0, [sp, #8]
   12724:	mov	r0, r4
   12728:	bl	11868 <recvfrom@plt>
   1272c:	cmp	r0, #0
   12730:	blt	12774 <__assert_fail@plt+0xb4c>
   12734:	add	r0, sp, #8
   12738:	bl	1185c <ctime@plt>
   1273c:	ldr	r1, [pc, #56]	; 1277c <__assert_fail@plt+0xb54>
   12740:	mov	r2, r0
   12744:	add	r0, sp, #144	; 0x90
   12748:	bl	11b2c <sprintf@plt>
   1274c:	add	r0, sp, #144	; 0x90
   12750:	bl	119dc <strlen@plt>
   12754:	add	r3, sp, #16
   12758:	str	r3, [sp]
   1275c:	str	r5, [sp, #4]
   12760:	add	r1, sp, #144	; 0x90
   12764:	mov	r3, #0
   12768:	mov	r2, r0
   1276c:	mov	r0, r4
   12770:	bl	11aa8 <sendto@plt>
   12774:	add	sp, sp, #404	; 0x194
   12778:	pop	{r4, r5, pc}
   1277c:	andeq	fp, r1, ip, ror #19
   12780:	cmp	r0, #112	; 0x70
   12784:	beq	1284c <__assert_fail@plt+0xc24>
   12788:	bgt	127c0 <__assert_fail@plt+0xb98>
   1278c:	cmp	r0, #82	; 0x52
   12790:	beq	12804 <__assert_fail@plt+0xbdc>
   12794:	cmp	r0, #100	; 0x64
   12798:	bne	127e8 <__assert_fail@plt+0xbc0>
   1279c:	ldr	r2, [pc, #244]	; 12898 <__assert_fail@plt+0xc70>
   127a0:	ldr	r1, [pc, #244]	; 1289c <__assert_fail@plt+0xc74>
   127a4:	mov	r0, #1
   127a8:	ldr	r3, [r2]
   127ac:	strb	r0, [r1]
   127b0:	orr	r3, r3, r0
   127b4:	str	r3, [r2]
   127b8:	mov	r0, #0
   127bc:	bx	lr
   127c0:	cmp	r0, #256	; 0x100
   127c4:	beq	127f0 <__assert_fail@plt+0xbc8>
   127c8:	ldr	r3, [pc, #208]	; 128a0 <__assert_fail@plt+0xc78>
   127cc:	cmp	r0, r3
   127d0:	bne	127e8 <__assert_fail@plt+0xbc0>
   127d4:	ldr	r3, [pc, #192]	; 1289c <__assert_fail@plt+0xc74>
   127d8:	mov	r2, #1
   127dc:	mov	r0, #0
   127e0:	strb	r2, [r3, #2]
   127e4:	bx	lr
   127e8:	mov	r0, #7
   127ec:	bx	lr
   127f0:	ldr	r3, [pc, #164]	; 1289c <__assert_fail@plt+0xc74>
   127f4:	mov	r2, #1
   127f8:	mov	r0, #0
   127fc:	strb	r2, [r3, #1]
   12800:	bx	lr
   12804:	push	{r4, lr}
   12808:	mov	r4, r1
   1280c:	sub	sp, sp, #8
   12810:	mov	r2, #0
   12814:	add	r1, sp, #4
   12818:	mov	r0, r4
   1281c:	bl	11760 <strtol@plt>
   12820:	cmp	r0, #0
   12824:	ble	12884 <__assert_fail@plt+0xc5c>
   12828:	ldr	r3, [sp, #4]
   1282c:	ldrb	r3, [r3]
   12830:	cmp	r3, #0
   12834:	bne	12884 <__assert_fail@plt+0xc5c>
   12838:	ldr	r3, [pc, #100]	; 128a4 <__assert_fail@plt+0xc7c>
   1283c:	str	r0, [r3, #8]
   12840:	mov	r0, #0
   12844:	add	sp, sp, #8
   12848:	pop	{r4, pc}
   1284c:	cmp	r1, #0
   12850:	beq	12870 <__assert_fail@plt+0xc48>
   12854:	ldrb	r3, [r1]
   12858:	cmp	r3, #0
   1285c:	beq	12870 <__assert_fail@plt+0xc48>
   12860:	ldr	r3, [pc, #60]	; 128a4 <__assert_fail@plt+0xc7c>
   12864:	mov	r0, #0
   12868:	str	r1, [r3]
   1286c:	bx	lr
   12870:	ldr	r2, [pc, #44]	; 128a4 <__assert_fail@plt+0xc7c>
   12874:	mov	r3, #0
   12878:	mov	r0, r3
   1287c:	strb	r3, [r2, #4]
   12880:	bx	lr
   12884:	mov	r2, r4
   12888:	ldr	r1, [pc, #24]	; 128a8 <__assert_fail@plt+0xc80>
   1288c:	mov	r0, #3
   12890:	bl	11b14 <syslog@plt>
   12894:	b	12840 <__assert_fail@plt+0xc18>
   12898:	strdeq	lr, [r2], -r0
   1289c:			; <UNDEFINED> instruction: 0x0002e3bc
   128a0:	andeq	r0, r0, r1, lsl #2
   128a4:	andeq	lr, r2, r8, asr #3
   128a8:	strdeq	fp, [r1], -r4
   128ac:	push	{lr}		; (str lr, [sp, #-4]!)
   128b0:	sub	sp, sp, #132	; 0x84
   128b4:	mov	r0, sp
   128b8:	bl	11ac0 <sigemptyset@plt>
   128bc:	mov	r1, sp
   128c0:	mov	r2, #0
   128c4:	mov	r0, #2
   128c8:	bl	117b4 <sigprocmask@plt>
   128cc:	add	sp, sp, #132	; 0x84
   128d0:	pop	{pc}		; (ldr pc, [sp], #4)
   128d4:	mov	r0, #3
   128d8:	push	{r4, lr}
   128dc:	ldr	r1, [pc, #8]	; 128ec <__assert_fail@plt+0xcc4>
   128e0:	bl	11b14 <syslog@plt>
   128e4:	mvn	r0, #0
   128e8:	bl	119c4 <exit@plt>
   128ec:	andeq	fp, r1, r4, lsr #20
   128f0:	push	{r4, r5, r6, r7, r8, lr}
   128f4:	mov	r7, r0
   128f8:	ldr	r4, [pc, #84]	; 12954 <__assert_fail@plt+0xd2c>
   128fc:	ldr	r0, [r4, #12]
   12900:	cmp	r0, #0
   12904:	beq	12948 <__assert_fail@plt+0xd20>
   12908:	ldr	r6, [r7, #16]
   1290c:	add	r4, r4, #12
   12910:	b	12920 <__assert_fail@plt+0xcf8>
   12914:	ldr	r0, [r4, #16]!
   12918:	cmp	r0, #0
   1291c:	beq	12948 <__assert_fail@plt+0xd20>
   12920:	ldr	r3, [r4, #4]
   12924:	mov	r5, r4
   12928:	cmp	r3, r6
   1292c:	bne	12914 <__assert_fail@plt+0xcec>
   12930:	ldr	r1, [r7, #12]
   12934:	bl	11754 <strcmp@plt>
   12938:	cmp	r0, #0
   1293c:	bne	12914 <__assert_fail@plt+0xcec>
   12940:	mov	r0, r5
   12944:	pop	{r4, r5, r6, r7, r8, pc}
   12948:	mov	r5, r0
   1294c:	mov	r0, r5
   12950:	pop	{r4, r5, r6, r7, r8, pc}
   12954:	andeq	lr, r2, r8, asr #3
   12958:	push	{r4, r5, lr}
   1295c:	sub	sp, sp, #148	; 0x94
   12960:	mov	r4, r0
   12964:	mov	r2, #140	; 0x8c
   12968:	mov	r5, r1
   1296c:	add	r0, sp, #4
   12970:	mov	r1, #0
   12974:	bl	11a54 <memset@plt>
   12978:	add	r0, sp, #8
   1297c:	bl	11ac0 <sigemptyset@plt>
   12980:	mov	r1, r4
   12984:	add	r0, sp, #8
   12988:	bl	11964 <sigaddset@plt>
   1298c:	mov	r3, #268435456	; 0x10000000
   12990:	add	r1, sp, #4
   12994:	mov	r0, r4
   12998:	mov	r2, #0
   1299c:	str	r5, [sp, #4]
   129a0:	str	r3, [sp, #136]	; 0x88
   129a4:	bl	118ec <sigaction@plt>
   129a8:	add	sp, sp, #148	; 0x94
   129ac:	pop	{r4, r5, pc}
   129b0:	push	{r4, lr}
   129b4:	sub	sp, sp, #128	; 0x80
   129b8:	mov	r4, r0
   129bc:	mov	r0, sp
   129c0:	bl	11ac0 <sigemptyset@plt>
   129c4:	mov	r0, sp
   129c8:	mov	r1, #17
   129cc:	bl	11964 <sigaddset@plt>
   129d0:	mov	r0, sp
   129d4:	mov	r1, #1
   129d8:	bl	11964 <sigaddset@plt>
   129dc:	mov	r0, sp
   129e0:	mov	r1, #14
   129e4:	bl	11964 <sigaddset@plt>
   129e8:	mov	r2, r4
   129ec:	mov	r1, sp
   129f0:	mov	r0, #0
   129f4:	bl	117b4 <sigprocmask@plt>
   129f8:	add	sp, sp, #128	; 0x80
   129fc:	pop	{r4, pc}
   12a00:	subs	r1, r0, #0
   12a04:	beq	12a14 <__assert_fail@plt+0xdec>
   12a08:	mov	r2, #0
   12a0c:	mov	r0, #2
   12a10:	b	117b4 <sigprocmask@plt>
   12a14:	b	128ac <__assert_fail@plt+0xc84>
   12a18:	ldr	r3, [r1, #44]	; 0x2c
   12a1c:	push	{r4, r5, r6, lr}
   12a20:	cmp	r3, #0
   12a24:	sub	sp, sp, #64	; 0x40
   12a28:	beq	12a3c <__assert_fail@plt+0xe14>
   12a2c:	ldr	r3, [r3, #12]
   12a30:	blx	r3
   12a34:	add	sp, sp, #64	; 0x40
   12a38:	pop	{r4, r5, r6, pc}
   12a3c:	ldr	r3, [pc, #492]	; 12c30 <__assert_fail@plt+0x1008>
   12a40:	mov	r4, r1
   12a44:	mov	r5, r0
   12a48:	ldrb	r3, [r3]
   12a4c:	cmp	r3, #0
   12a50:	bne	12b70 <__assert_fail@plt+0xf48>
   12a54:	mov	r1, #0
   12a58:	mov	r0, r5
   12a5c:	bl	11898 <dup2@plt>
   12a60:	mov	r0, r5
   12a64:	bl	11bf8 <close@plt>
   12a68:	mov	r1, #1
   12a6c:	mov	r0, #0
   12a70:	bl	11898 <dup2@plt>
   12a74:	mov	r1, #2
   12a78:	mov	r0, #0
   12a7c:	bl	11898 <dup2@plt>
   12a80:	ldr	r0, [r4, #36]	; 0x24
   12a84:	bl	11748 <getpwnam@plt>
   12a88:	subs	r5, r0, #0
   12a8c:	beq	12bd8 <__assert_fail@plt+0xfb0>
   12a90:	ldr	r0, [r4, #40]	; 0x28
   12a94:	cmp	r0, #0
   12a98:	beq	12aa8 <__assert_fail@plt+0xe80>
   12a9c:	ldrb	r3, [r0]
   12aa0:	cmp	r3, #0
   12aa4:	bne	12af8 <__assert_fail@plt+0xed0>
   12aa8:	ldr	r3, [r5, #8]
   12aac:	cmp	r3, #0
   12ab0:	bne	12ba8 <__assert_fail@plt+0xf80>
   12ab4:	ldr	r1, [r4, #52]	; 0x34
   12ab8:	ldr	r0, [r4, #48]	; 0x30
   12abc:	bl	11a18 <execv@plt>
   12ac0:	ldr	r3, [r4, #16]
   12ac4:	cmp	r3, #1
   12ac8:	beq	12ae0 <__assert_fail@plt+0xeb8>
   12acc:	mov	r3, #0
   12ad0:	mov	r0, r3
   12ad4:	mov	r2, #50	; 0x32
   12ad8:	add	r1, sp, #12
   12adc:	bl	11bec <recv@plt>
   12ae0:	mov	r0, #3
   12ae4:	ldr	r2, [r4, #48]	; 0x30
   12ae8:	ldr	r1, [pc, #324]	; 12c34 <__assert_fail@plt+0x100c>
   12aec:	bl	11b14 <syslog@plt>
   12af0:	mov	r0, #1
   12af4:	bl	117fc <_exit@plt>
   12af8:	bl	11c10 <getgrnam@plt>
   12afc:	subs	r6, r0, #0
   12b00:	beq	12c18 <__assert_fail@plt+0xff0>
   12b04:	ldr	r3, [r5, #8]
   12b08:	cmp	r3, #0
   12b0c:	beq	12ab4 <__assert_fail@plt+0xe8c>
   12b10:	ldr	r0, [r6, #8]
   12b14:	cmp	r0, #0
   12b18:	bne	12b94 <__assert_fail@plt+0xf6c>
   12b1c:	ldr	r0, [r5, #12]
   12b20:	bl	1194c <setgid@plt>
   12b24:	cmp	r0, #0
   12b28:	blt	12bbc <__assert_fail@plt+0xf94>
   12b2c:	ldr	r1, [r6, #8]
   12b30:	ldr	r0, [r5]
   12b34:	cmp	r1, #0
   12b38:	bne	12b40 <__assert_fail@plt+0xf18>
   12b3c:	ldr	r1, [r5, #12]
   12b40:	bl	118b0 <initgroups@plt>
   12b44:	ldr	r0, [r5, #8]
   12b48:	bl	11b20 <setuid@plt>
   12b4c:	cmp	r0, #0
   12b50:	bge	12ab4 <__assert_fail@plt+0xe8c>
   12b54:	mov	r0, #3
   12b58:	ldr	r3, [r5, #8]
   12b5c:	ldr	r2, [r4, #12]
   12b60:	ldr	r1, [pc, #208]	; 12c38 <__assert_fail@plt+0x1010>
   12b64:	bl	11b14 <syslog@plt>
   12b68:	mov	r0, #1
   12b6c:	bl	117fc <_exit@plt>
   12b70:	ldr	r3, [pc, #196]	; 12c3c <__assert_fail@plt+0x1014>
   12b74:	ldr	r6, [r3]
   12b78:	bl	119b8 <getpid@plt>
   12b7c:	ldr	r3, [r4, #48]	; 0x30
   12b80:	ldr	r1, [pc, #184]	; 12c40 <__assert_fail@plt+0x1018>
   12b84:	mov	r2, r0
   12b88:	mov	r0, r6
   12b8c:	bl	11a0c <fprintf@plt>
   12b90:	b	12a54 <__assert_fail@plt+0xe2c>
   12b94:	bl	1194c <setgid@plt>
   12b98:	cmp	r0, #0
   12b9c:	bge	12b2c <__assert_fail@plt+0xf04>
   12ba0:	ldr	r3, [r6, #8]
   12ba4:	b	12bc0 <__assert_fail@plt+0xf98>
   12ba8:	ldr	r0, [r5, #12]
   12bac:	bl	1194c <setgid@plt>
   12bb0:	cmp	r0, #0
   12bb4:	ldrge	r0, [r5]
   12bb8:	bge	12b3c <__assert_fail@plt+0xf14>
   12bbc:	ldr	r3, [r5, #12]
   12bc0:	ldr	r2, [r4, #12]
   12bc4:	ldr	r1, [pc, #120]	; 12c44 <__assert_fail@plt+0x101c>
   12bc8:	mov	r0, #3
   12bcc:	bl	11b14 <syslog@plt>
   12bd0:	mov	r0, #1
   12bd4:	bl	117fc <_exit@plt>
   12bd8:	ldr	r2, [r4, #36]	; 0x24
   12bdc:	ldr	r3, [r4, #20]
   12be0:	ldr	r1, [pc, #96]	; 12c48 <__assert_fail@plt+0x1020>
   12be4:	str	r2, [sp]
   12be8:	ldr	r2, [r4, #12]
   12bec:	mov	r0, #3
   12bf0:	bl	11b14 <syslog@plt>
   12bf4:	ldr	r3, [r4, #16]
   12bf8:	cmp	r3, #1
   12bfc:	beq	12bd0 <__assert_fail@plt+0xfa8>
   12c00:	mov	r3, #0
   12c04:	mov	r0, r3
   12c08:	mov	r2, #50	; 0x32
   12c0c:	add	r1, sp, #12
   12c10:	bl	11bec <recv@plt>
   12c14:	b	12bd0 <__assert_fail@plt+0xfa8>
   12c18:	ldr	r2, [r4, #40]	; 0x28
   12c1c:	ldr	r3, [r4, #20]
   12c20:	ldr	r1, [pc, #36]	; 12c4c <__assert_fail@plt+0x1024>
   12c24:	str	r2, [sp]
   12c28:	ldr	r2, [r4, #12]
   12c2c:	b	12bec <__assert_fail@plt+0xfc4>
   12c30:			; <UNDEFINED> instruction: 0x0002e3bc
   12c34:	andeq	fp, r1, ip, lsr #21
   12c38:	muleq	r1, r0, sl
   12c3c:			; <UNDEFINED> instruction: 0x0002e3b0
   12c40:	andeq	fp, r1, r0, lsr sl
   12c44:	andeq	fp, r1, r4, ror sl
   12c48:	andeq	fp, r1, r0, asr #20
   12c4c:	andeq	fp, r1, r8, asr sl
   12c50:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c54:	sub	sp, sp, #268	; 0x10c
   12c58:	ldr	r7, [pc, #472]	; 12e38 <__assert_fail@plt+0x1210>
   12c5c:	ldr	r9, [pc, #472]	; 12e3c <__assert_fail@plt+0x1214>
   12c60:	ldr	r8, [pc, #472]	; 12e40 <__assert_fail@plt+0x1218>
   12c64:	mov	r6, r0
   12c68:	add	r4, sp, #4
   12c6c:	mov	r5, #0
   12c70:	sub	r2, r7, r5
   12c74:	mov	r1, r4
   12c78:	mov	r0, r6
   12c7c:	bl	1179c <read@plt>
   12c80:	cmp	r0, #0
   12c84:	beq	12cec <__assert_fail@plt+0x10c4>
   12c88:	blt	12da8 <__assert_fail@plt+0x1180>
   12c8c:	ldrb	r3, [r4]
   12c90:	cmp	r3, #13
   12c94:	bhi	12ca4 <__assert_fail@plt+0x107c>
   12c98:	mvn	r3, r9, lsr r3
   12c9c:	tst	r3, #1
   12ca0:	beq	12cec <__assert_fail@plt+0x10c4>
   12ca4:	add	r0, r4, r0
   12ca8:	sub	r5, r5, r4
   12cac:	add	r2, r4, #1
   12cb0:	b	12ccc <__assert_fail@plt+0x10a4>
   12cb4:	ldrb	r3, [r2], #1
   12cb8:	cmp	r3, #13
   12cbc:	bhi	12ccc <__assert_fail@plt+0x10a4>
   12cc0:	mvn	r3, r9, lsr r3
   12cc4:	tst	r3, #1
   12cc8:	beq	12cf0 <__assert_fail@plt+0x10c8>
   12ccc:	cmp	r2, r0
   12cd0:	add	r1, r5, r2
   12cd4:	bne	12cb4 <__assert_fail@plt+0x108c>
   12cd8:	cmp	r1, r8
   12cdc:	mov	r5, r1
   12ce0:	bgt	12cf0 <__assert_fail@plt+0x10c8>
   12ce4:	mov	r4, r2
   12ce8:	b	12c70 <__assert_fail@plt+0x1048>
   12cec:	mov	r1, r5
   12cf0:	ldr	r3, [pc, #332]	; 12e44 <__assert_fail@plt+0x121c>
   12cf4:	add	r2, sp, #264	; 0x108
   12cf8:	add	r1, r2, r1
   12cfc:	ldrb	r3, [r3]
   12d00:	mov	r2, #0
   12d04:	strb	r2, [r1, #-260]	; 0xfffffefc
   12d08:	cmp	r3, r2
   12d0c:	bne	12d7c <__assert_fail@plt+0x1154>
   12d10:	ldr	r1, [pc, #304]	; 12e48 <__assert_fail@plt+0x1220>
   12d14:	add	r0, sp, #4
   12d18:	bl	118c8 <strcasecmp@plt>
   12d1c:	ldr	r3, [pc, #296]	; 12e4c <__assert_fail@plt+0x1224>
   12d20:	ldr	r4, [r3]
   12d24:	cmp	r0, #0
   12d28:	bne	12d34 <__assert_fail@plt+0x110c>
   12d2c:	b	12dd8 <__assert_fail@plt+0x11b0>
   12d30:	ldr	r4, [r4, #220]	; 0xdc
   12d34:	cmp	r4, #0
   12d38:	beq	12dc0 <__assert_fail@plt+0x1198>
   12d3c:	ldr	r5, [r4, #64]	; 0x40
   12d40:	sub	r3, r5, #1
   12d44:	cmp	r3, #1
   12d48:	bhi	12d30 <__assert_fail@plt+0x1108>
   12d4c:	ldr	r1, [r4, #12]
   12d50:	add	r0, sp, #4
   12d54:	bl	118c8 <strcasecmp@plt>
   12d58:	cmp	r0, #0
   12d5c:	bne	12d30 <__assert_fail@plt+0x1108>
   12d60:	cmp	r5, #2
   12d64:	beq	12d94 <__assert_fail@plt+0x116c>
   12d68:	mov	r1, r4
   12d6c:	mov	r0, r6
   12d70:	bl	12a18 <__assert_fail@plt+0xdf0>
   12d74:	add	sp, sp, #268	; 0x10c
   12d78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d7c:	ldr	r3, [pc, #204]	; 12e50 <__assert_fail@plt+0x1228>
   12d80:	add	r2, sp, #4
   12d84:	ldr	r1, [pc, #200]	; 12e54 <__assert_fail@plt+0x122c>
   12d88:	ldr	r0, [r3]
   12d8c:	bl	11a0c <fprintf@plt>
   12d90:	b	12d10 <__assert_fail@plt+0x10e8>
   12d94:	mov	r2, #5
   12d98:	ldr	r1, [pc, #184]	; 12e58 <__assert_fail@plt+0x1230>
   12d9c:	mov	r0, r6
   12da0:	bl	11a84 <write@plt>
   12da4:	b	12d68 <__assert_fail@plt+0x1140>
   12da8:	mov	r0, r6
   12dac:	mov	r2, #29
   12db0:	ldr	r1, [pc, #164]	; 12e5c <__assert_fail@plt+0x1234>
   12db4:	bl	11a84 <write@plt>
   12db8:	mov	r0, #1
   12dbc:	bl	117fc <_exit@plt>
   12dc0:	mov	r0, r6
   12dc4:	mov	r2, #24
   12dc8:	ldr	r1, [pc, #144]	; 12e60 <__assert_fail@plt+0x1238>
   12dcc:	bl	11a84 <write@plt>
   12dd0:	mov	r0, #1
   12dd4:	bl	119c4 <exit@plt>
   12dd8:	cmp	r4, #0
   12ddc:	beq	12db8 <__assert_fail@plt+0x1190>
   12de0:	ldr	r8, [pc, #124]	; 12e64 <__assert_fail@plt+0x123c>
   12de4:	mov	r7, #2
   12de8:	b	12df8 <__assert_fail@plt+0x11d0>
   12dec:	ldr	r4, [r4, #220]	; 0xdc
   12df0:	cmp	r4, #0
   12df4:	beq	12db8 <__assert_fail@plt+0x1190>
   12df8:	ldr	r3, [r4, #64]	; 0x40
   12dfc:	sub	r3, r3, #1
   12e00:	cmp	r3, #1
   12e04:	bhi	12dec <__assert_fail@plt+0x11c4>
   12e08:	ldr	r5, [r4, #12]
   12e0c:	mov	r0, r5
   12e10:	bl	119dc <strlen@plt>
   12e14:	mov	r1, r5
   12e18:	mov	r2, r0
   12e1c:	mov	r0, r6
   12e20:	bl	11a84 <write@plt>
   12e24:	mov	r2, r7
   12e28:	mov	r1, r8
   12e2c:	mov	r0, r6
   12e30:	bl	11a84 <write@plt>
   12e34:	b	12dec <__assert_fail@plt+0x11c4>
   12e38:	andeq	r0, r0, r2, lsl #2
   12e3c:	andeq	r2, r0, r1, lsl #8
   12e40:	andeq	r0, r0, r1, lsl #2
   12e44:			; <UNDEFINED> instruction: 0x0002e3bc
   12e48:	andeq	fp, r1, r0, ror #21
   12e4c:	andeq	lr, r2, ip, lsl #12
   12e50:			; <UNDEFINED> instruction: 0x0002e3b0
   12e54:	andeq	fp, r1, r4, asr #21
   12e58:	andeq	fp, r1, ip, ror #21
   12e5c:	andeq	fp, r1, r0, lsl fp
   12e60:	strdeq	fp, [r1], -r4
   12e64:	andeq	fp, r1, r8, ror #21
   12e68:	ldr	r3, [pc, #24]	; 12e88 <__assert_fail@plt+0x1260>
   12e6c:	cmp	r0, #0
   12e70:	moveq	r0, r3
   12e74:	push	{r4, lr}
   12e78:	bl	11874 <strdup@plt>
   12e7c:	cmp	r0, #0
   12e80:	popne	{r4, pc}
   12e84:	bl	128d4 <__assert_fail@plt+0xcac>
   12e88:	andeq	fp, r1, ip, lsl #22
   12e8c:	push	{r4, r5, r6, lr}
   12e90:	mov	r5, r0
   12e94:	mov	r0, r1
   12e98:	mov	r4, r1
   12e9c:	bl	17180 <argp_parse@@Base+0x1490>
   12ea0:	subs	r6, r0, #0
   12ea4:	beq	12ebc <__assert_fail@plt+0x1294>
   12ea8:	mov	r2, r4
   12eac:	ldr	r1, [r5]
   12eb0:	bl	11808 <memcpy@plt>
   12eb4:	str	r6, [r5]
   12eb8:	pop	{r4, r5, r6, pc}
   12ebc:	mov	r0, #3
   12ec0:	ldr	r1, [pc, #8]	; 12ed0 <__assert_fail@plt+0x12a8>
   12ec4:	bl	11b14 <syslog@plt>
   12ec8:	mvn	r0, #0
   12ecc:	bl	119c4 <exit@plt>
   12ed0:	andeq	fp, r1, r0, lsr fp
   12ed4:	ldr	r3, [r0]
   12ed8:	cmp	r3, #0
   12edc:	bxeq	lr
   12ee0:	push	{r4, lr}
   12ee4:	mov	r4, r0
   12ee8:	mov	r0, r3
   12eec:	bl	119dc <strlen@plt>
   12ef0:	add	r1, r0, #1
   12ef4:	mov	r0, r4
   12ef8:	pop	{r4, lr}
   12efc:	b	12e8c <__assert_fail@plt+0x1264>
   12f00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f04:	mov	r4, r0
   12f08:	ldr	lr, [r1, #64]	; 0x40
   12f0c:	ldr	ip, [pc, #148]	; 12fa8 <__assert_fail@plt+0x1380>
   12f10:	sub	r3, lr, #1
   12f14:	cmp	r3, #1
   12f18:	sub	sp, sp, #40	; 0x28
   12f1c:	ldm	r1, {r2, r3}
   12f20:	ldr	r0, [ip]
   12f24:	bls	12f94 <__assert_fail@plt+0x136c>
   12f28:	ldr	ip, [r1, #8]
   12f2c:	ldr	lr, [pc, #120]	; 12fac <__assert_fail@plt+0x1384>
   12f30:	cmp	ip, #0
   12f34:	moveq	ip, lr
   12f38:	ldr	lr, [r1, #44]	; 0x2c
   12f3c:	add	r6, r1, #20
   12f40:	cmp	lr, #0
   12f44:	ldm	r6, {r6, r7, r8}
   12f48:	ldr	r5, [r1, #12]
   12f4c:	ldr	r9, [r1, #36]	; 0x24
   12f50:	ldr	sl, [r1, #40]	; 0x28
   12f54:	ldrne	lr, [lr]
   12f58:	ldr	r1, [r1, #48]	; 0x30
   12f5c:	ldreq	lr, [pc, #76]	; 12fb0 <__assert_fail@plt+0x1388>
   12f60:	str	r1, [sp, #36]	; 0x24
   12f64:	str	lr, [sp, #32]
   12f68:	str	sl, [sp, #28]
   12f6c:	str	r9, [sp, #24]
   12f70:	str	r8, [sp, #20]
   12f74:	str	r7, [sp, #16]
   12f78:	str	r6, [sp, #12]
   12f7c:	str	r5, [sp, #8]
   12f80:	stm	sp, {r4, ip}
   12f84:	ldr	r1, [pc, #40]	; 12fb4 <__assert_fail@plt+0x138c>
   12f88:	bl	11a0c <fprintf@plt>
   12f8c:	add	sp, sp, #40	; 0x28
   12f90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f94:	ldr	r5, [pc, #28]	; 12fb8 <__assert_fail@plt+0x1390>
   12f98:	cmp	lr, #2
   12f9c:	ldr	ip, [pc, #24]	; 12fbc <__assert_fail@plt+0x1394>
   12fa0:	moveq	ip, r5
   12fa4:	b	12f38 <__assert_fail@plt+0x1310>
   12fa8:			; <UNDEFINED> instruction: 0x0002e3b0
   12fac:	andeq	fp, r1, ip, lsr fp
   12fb0:	andeq	fp, r1, ip, asr #22
   12fb4:	andeq	fp, r1, r0, asr fp
   12fb8:	andeq	fp, r1, r0, asr #22
   12fbc:	andeq	fp, r1, ip, asr #30
   12fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fc4:	mov	r4, r0
   12fc8:	ldrh	r0, [r0, #68]	; 0x44
   12fcc:	ldr	r8, [pc, #816]	; 13304 <__assert_fail@plt+0x16dc>
   12fd0:	ldr	sl, [pc, #816]	; 13308 <__assert_fail@plt+0x16e0>
   12fd4:	ldr	r9, [pc, #816]	; 1330c <__assert_fail@plt+0x16e4>
   12fd8:	ldr	fp, [pc, #816]	; 13310 <__assert_fail@plt+0x16e8>
   12fdc:	sub	sp, sp, #20
   12fe0:	mov	r7, #0
   12fe4:	mov	r3, #1
   12fe8:	str	r3, [sp, #8]
   12fec:	mov	r2, r7
   12ff0:	ldr	r1, [r4, #16]
   12ff4:	bl	11bb0 <socket@plt>
   12ff8:	cmp	r0, #0
   12ffc:	mov	r5, r0
   13000:	str	r0, [r4, #60]	; 0x3c
   13004:	blt	130c0 <__assert_fail@plt+0x1498>
   13008:	ldrh	r3, [r4, #68]	; 0x44
   1300c:	cmp	r3, #10
   13010:	beq	13120 <__assert_fail@plt+0x14f8>
   13014:	mov	r2, #3
   13018:	mov	r1, r8
   1301c:	ldr	r0, [r4, #20]
   13020:	bl	11bd4 <strncmp@plt>
   13024:	cmp	r0, #0
   13028:	addne	r6, sp, #8
   1302c:	bne	13040 <__assert_fail@plt+0x1418>
   13030:	ldr	r3, [r9]
   13034:	add	r6, sp, #8
   13038:	tst	r3, #1
   1303c:	bne	130f4 <__assert_fail@plt+0x14cc>
   13040:	mov	r2, #4
   13044:	str	r2, [sp]
   13048:	mov	r3, r6
   1304c:	mov	r0, r5
   13050:	mov	r2, #2
   13054:	mov	r1, #1
   13058:	bl	1176c <setsockopt@plt>
   1305c:	cmp	r0, #0
   13060:	blt	13158 <__assert_fail@plt+0x1530>
   13064:	ldr	r2, [r4, #200]	; 0xc8
   13068:	add	r1, r4, #72	; 0x48
   1306c:	ldr	r0, [r4, #60]	; 0x3c
   13070:	bl	11a48 <bind@plt>
   13074:	cmp	r0, #0
   13078:	bge	13230 <__assert_fail@plt+0x1608>
   1307c:	bl	11a24 <__errno_location@plt>
   13080:	ldr	r0, [r0]
   13084:	bic	r3, r0, #2
   13088:	cmp	r3, #97	; 0x61
   1308c:	bne	13168 <__assert_fail@plt+0x1540>
   13090:	ldrh	r3, [r4, #68]	; 0x44
   13094:	cmp	r3, #10
   13098:	bne	13168 <__assert_fail@plt+0x1540>
   1309c:	ldrb	r3, [r4, #70]	; 0x46
   130a0:	cmp	r3, #0
   130a4:	beq	13168 <__assert_fail@plt+0x1540>
   130a8:	mov	r3, #2
   130ac:	strh	r3, [r4, #68]	; 0x44
   130b0:	ldr	r0, [r4, #60]	; 0x3c
   130b4:	bl	11bf8 <close@plt>
   130b8:	ldrh	r0, [r4, #68]	; 0x44
   130bc:	b	12fec <__assert_fail@plt+0x13c4>
   130c0:	bl	11a24 <__errno_location@plt>
   130c4:	ldr	r0, [r0]
   130c8:	cmp	r0, #97	; 0x61
   130cc:	bne	13200 <__assert_fail@plt+0x15d8>
   130d0:	ldrh	r3, [r4, #68]	; 0x44
   130d4:	cmp	r3, #10
   130d8:	bne	13200 <__assert_fail@plt+0x15d8>
   130dc:	ldrb	r3, [r4, #70]	; 0x46
   130e0:	cmp	r3, #0
   130e4:	beq	13200 <__assert_fail@plt+0x15d8>
   130e8:	mov	r0, #2
   130ec:	strh	r0, [r4, #68]	; 0x44
   130f0:	b	12fec <__assert_fail@plt+0x13c4>
   130f4:	mov	r1, #4
   130f8:	mov	r2, #1
   130fc:	str	r1, [sp]
   13100:	mov	r0, r5
   13104:	mov	r3, r6
   13108:	mov	r1, r2
   1310c:	bl	1176c <setsockopt@plt>
   13110:	cmp	r0, #0
   13114:	blt	131e0 <__assert_fail@plt+0x15b8>
   13118:	ldr	r5, [r4, #60]	; 0x3c
   1311c:	b	13040 <__assert_fail@plt+0x1418>
   13120:	add	r3, sp, #16
   13124:	ldrb	r2, [r4, #70]	; 0x46
   13128:	mov	r1, #4
   1312c:	clz	r2, r2
   13130:	lsr	r2, r2, #5
   13134:	str	r2, [r3, #-4]!
   13138:	str	r1, [sp]
   1313c:	mov	r2, #26
   13140:	mov	r1, #41	; 0x29
   13144:	bl	1176c <setsockopt@plt>
   13148:	cmp	r0, #0
   1314c:	blt	1328c <__assert_fail@plt+0x1664>
   13150:	ldr	r5, [r4, #60]	; 0x3c
   13154:	b	13014 <__assert_fail@plt+0x13ec>
   13158:	mov	r1, sl
   1315c:	mov	r0, #3
   13160:	bl	11b14 <syslog@plt>
   13164:	b	13064 <__assert_fail@plt+0x143c>
   13168:	ldr	r5, [r4, #8]
   1316c:	ldr	r3, [pc, #416]	; 13314 <__assert_fail@plt+0x16ec>
   13170:	cmp	r5, #0
   13174:	ldrb	r3, [r3]
   13178:	beq	1323c <__assert_fail@plt+0x1614>
   1317c:	cmp	r3, #0
   13180:	bne	1329c <__assert_fail@plt+0x1674>
   13184:	ldr	r1, [r4, #20]
   13188:	ldr	r3, [r4, #12]
   1318c:	mov	r2, r5
   13190:	str	r1, [sp]
   13194:	mov	r0, #3
   13198:	ldr	r1, [pc, #376]	; 13318 <__assert_fail@plt+0x16f0>
   1319c:	bl	11b14 <syslog@plt>
   131a0:	ldr	r0, [r4, #60]	; 0x3c
   131a4:	bl	11bf8 <close@plt>
   131a8:	ldr	r3, [pc, #364]	; 1331c <__assert_fail@plt+0x16f4>
   131ac:	mvn	r2, #0
   131b0:	str	r2, [r4, #60]	; 0x3c
   131b4:	ldr	r2, [r3]
   131b8:	cmp	r2, #0
   131bc:	movne	r0, #1
   131c0:	bne	131d8 <__assert_fail@plt+0x15b0>
   131c4:	mov	r4, #1
   131c8:	mov	r0, #600	; 0x258
   131cc:	str	r4, [r3]
   131d0:	bl	11880 <alarm@plt>
   131d4:	mov	r0, r4
   131d8:	add	sp, sp, #20
   131dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e0:	bl	11a24 <__errno_location@plt>
   131e4:	ldr	r3, [r0]
   131e8:	cmp	r3, #13
   131ec:	beq	13118 <__assert_fail@plt+0x14f0>
   131f0:	mov	r1, fp
   131f4:	mov	r0, #3
   131f8:	bl	11b14 <syslog@plt>
   131fc:	b	13118 <__assert_fail@plt+0x14f0>
   13200:	ldr	r3, [pc, #268]	; 13314 <__assert_fail@plt+0x16ec>
   13204:	ldrb	r3, [r3]
   13208:	cmp	r3, #0
   1320c:	bne	1325c <__assert_fail@plt+0x1634>
   13210:	ldr	r3, [r4, #20]
   13214:	ldr	r2, [r4, #12]
   13218:	ldr	r1, [pc, #256]	; 13320 <__assert_fail@plt+0x16f8>
   1321c:	mov	r0, #3
   13220:	bl	11b14 <syslog@plt>
   13224:	mov	r0, #1
   13228:	add	sp, sp, #20
   1322c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13230:	mov	r0, #0
   13234:	add	sp, sp, #20
   13238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1323c:	cmp	r3, #0
   13240:	bne	132d4 <__assert_fail@plt+0x16ac>
   13244:	ldr	r3, [r4, #20]
   13248:	ldr	r2, [r4, #12]
   1324c:	ldr	r1, [pc, #208]	; 13324 <__assert_fail@plt+0x16fc>
   13250:	mov	r0, #3
   13254:	bl	11b14 <syslog@plt>
   13258:	b	131a0 <__assert_fail@plt+0x1578>
   1325c:	ldr	r3, [pc, #196]	; 13328 <__assert_fail@plt+0x1700>
   13260:	ldr	r6, [r4, #12]
   13264:	ldr	r7, [r4, #20]
   13268:	ldr	r5, [r3]
   1326c:	bl	1197c <strerror@plt>
   13270:	mov	r3, r7
   13274:	mov	r2, r6
   13278:	ldr	r1, [pc, #172]	; 1332c <__assert_fail@plt+0x1704>
   1327c:	str	r0, [sp]
   13280:	mov	r0, r5
   13284:	bl	11a0c <fprintf@plt>
   13288:	b	13210 <__assert_fail@plt+0x15e8>
   1328c:	ldr	r1, [pc, #156]	; 13330 <__assert_fail@plt+0x1708>
   13290:	mov	r0, #3
   13294:	bl	11b14 <syslog@plt>
   13298:	b	13150 <__assert_fail@plt+0x1528>
   1329c:	ldr	r3, [pc, #132]	; 13328 <__assert_fail@plt+0x1700>
   132a0:	ldr	r7, [r4, #12]
   132a4:	ldr	r8, [r4, #20]
   132a8:	ldr	r6, [r3]
   132ac:	bl	1197c <strerror@plt>
   132b0:	mov	r2, r5
   132b4:	str	r8, [sp]
   132b8:	mov	r3, r7
   132bc:	ldr	r1, [pc, #112]	; 13334 <__assert_fail@plt+0x170c>
   132c0:	str	r0, [sp, #4]
   132c4:	mov	r0, r6
   132c8:	bl	11a0c <fprintf@plt>
   132cc:	ldr	r5, [r4, #8]
   132d0:	b	13184 <__assert_fail@plt+0x155c>
   132d4:	ldr	r3, [pc, #76]	; 13328 <__assert_fail@plt+0x1700>
   132d8:	ldr	r6, [r4, #12]
   132dc:	ldr	r7, [r4, #20]
   132e0:	ldr	r5, [r3]
   132e4:	bl	1197c <strerror@plt>
   132e8:	mov	r3, r7
   132ec:	mov	r2, r6
   132f0:	ldr	r1, [pc, #64]	; 13338 <__assert_fail@plt+0x1710>
   132f4:	str	r0, [sp]
   132f8:	mov	r0, r5
   132fc:	bl	11a0c <fprintf@plt>
   13300:	b	13244 <__assert_fail@plt+0x161c>
   13304:	strdeq	fp, [r1], -r4
   13308:	andeq	fp, r1, r4, lsl ip
   1330c:	strdeq	lr, [r2], -r0
   13310:	strdeq	fp, [r1], -r8
   13314:			; <UNDEFINED> instruction: 0x0002e3bc
   13318:	andeq	fp, r1, r4, asr ip
   1331c:	andeq	lr, r2, r0, lsl #12
   13320:	andeq	fp, r1, r0, asr #23
   13324:	andeq	fp, r1, r4, lsl #25
   13328:			; <UNDEFINED> instruction: 0x0002e3b0
   1332c:	andeq	fp, r1, r4, lsr #23
   13330:	ldrdeq	fp, [r1], -r4
   13334:	andeq	fp, r1, r4, lsr ip
   13338:	andeq	fp, r1, r8, ror #24
   1333c:	ldr	r1, [pc, #92]	; 133a0 <__assert_fail@plt+0x1778>
   13340:	push	{r4, lr}
   13344:	mov	r2, #0
   13348:	ldr	r3, [pc, #84]	; 133a4 <__assert_fail@plt+0x177c>
   1334c:	ldr	r4, [r1]
   13350:	cmp	r4, r2
   13354:	str	r2, [r3]
   13358:	bne	1336c <__assert_fail@plt+0x1744>
   1335c:	pop	{r4, pc}
   13360:	ldr	r4, [r4, #220]	; 0xdc
   13364:	cmp	r4, #0
   13368:	beq	1339c <__assert_fail@plt+0x1774>
   1336c:	ldr	r3, [r4, #60]	; 0x3c
   13370:	cmn	r3, #1
   13374:	bne	13360 <__assert_fail@plt+0x1738>
   13378:	ldr	r3, [r4, #64]	; 0x40
   1337c:	mov	r0, r4
   13380:	sub	r3, r3, #1
   13384:	cmp	r3, #1
   13388:	bls	13360 <__assert_fail@plt+0x1738>
   1338c:	bl	12fc0 <__assert_fail@plt+0x1398>
   13390:	ldr	r4, [r4, #220]	; 0xdc
   13394:	cmp	r4, #0
   13398:	bne	1336c <__assert_fail@plt+0x1744>
   1339c:	pop	{r4, pc}
   133a0:	andeq	lr, r2, ip, lsl #12
   133a4:	andeq	lr, r2, r0, lsl #12
   133a8:	ldr	r2, [r0, #60]	; 0x3c
   133ac:	mov	r1, #1
   133b0:	cmn	r2, #1
   133b4:	strh	r1, [r0, #32]
   133b8:	bxne	lr
   133bc:	push	{r4, r5, r6, r7, r8, lr}
   133c0:	mov	r4, r0
   133c4:	bl	12fc0 <__assert_fail@plt+0x1398>
   133c8:	cmp	r0, #0
   133cc:	popne	{r4, r5, r6, r7, r8, pc}
   133d0:	ldr	r3, [r4, #16]
   133d4:	cmp	r3, #1
   133d8:	beq	13460 <__assert_fail@plt+0x1838>
   133dc:	ldr	r3, [r4, #60]	; 0x3c
   133e0:	ldr	ip, [pc, #136]	; 13470 <__assert_fail@plt+0x1848>
   133e4:	cmp	r3, #0
   133e8:	asr	r1, r3, #31
   133ec:	add	r2, r3, #31
   133f0:	movge	r2, r3
   133f4:	lsr	r0, r1, #27
   133f8:	asr	r2, r2, #5
   133fc:	add	r1, r3, r0
   13400:	ldr	lr, [pc, #108]	; 13474 <__assert_fail@plt+0x184c>
   13404:	and	r1, r1, #31
   13408:	sub	r1, r1, r0
   1340c:	mov	r6, #1
   13410:	ldr	r0, [ip, r2, lsl #2]
   13414:	ldr	r5, [pc, #92]	; 13478 <__assert_fail@plt+0x1850>
   13418:	orr	r1, r0, r6, lsl r1
   1341c:	ldr	r0, [lr]
   13420:	str	r1, [ip, r2, lsl #2]
   13424:	add	r2, r0, r6
   13428:	str	r2, [lr]
   1342c:	ldr	r2, [pc, #72]	; 1347c <__assert_fail@plt+0x1854>
   13430:	ldr	r7, [r5]
   13434:	ldrb	r2, [r2]
   13438:	cmp	r3, r7
   1343c:	strgt	r3, [r5]
   13440:	cmp	r2, #0
   13444:	popeq	{r4, r5, r6, r7, r8, pc}
   13448:	ldr	r1, [pc, #48]	; 13480 <__assert_fail@plt+0x1858>
   1344c:	ldr	r2, [r4, #48]	; 0x30
   13450:	pop	{r4, r5, r6, r7, r8, lr}
   13454:	ldr	r0, [r1]
   13458:	ldr	r1, [pc, #36]	; 13484 <__assert_fail@plt+0x185c>
   1345c:	b	11a0c <fprintf@plt>
   13460:	mov	r1, #10
   13464:	ldr	r0, [r4, #60]	; 0x3c
   13468:	bl	11af0 <listen@plt>
   1346c:	b	133dc <__assert_fail@plt+0x17b4>
   13470:	andeq	lr, r2, r8, ror #10
   13474:	andeq	lr, r2, ip, ror #11
   13478:	andeq	lr, r2, r4, ror #10
   1347c:			; <UNDEFINED> instruction: 0x0002e3bc
   13480:			; <UNDEFINED> instruction: 0x0002e3b0
   13484:	muleq	r1, r4, ip
   13488:	push	{r4, r5, r6, lr}
   1348c:	mov	r4, r0
   13490:	ldr	r0, [r0, #60]	; 0x3c
   13494:	cmp	r0, #0
   13498:	blt	134d4 <__assert_fail@plt+0x18ac>
   1349c:	ldr	ip, [pc, #76]	; 134f0 <__assert_fail@plt+0x18c8>
   134a0:	asr	lr, r0, #5
   134a4:	ldr	r1, [pc, #72]	; 134f4 <__assert_fail@plt+0x18cc>
   134a8:	ldr	r2, [ip, lr, lsl #2]
   134ac:	and	r3, r0, #31
   134b0:	mov	r5, #1
   134b4:	bic	r2, r2, r5, lsl r3
   134b8:	ldr	r3, [r1]
   134bc:	str	r2, [ip, lr, lsl #2]
   134c0:	sub	r3, r3, #1
   134c4:	str	r3, [r1]
   134c8:	bl	11bf8 <close@plt>
   134cc:	mvn	r3, #0
   134d0:	str	r3, [r4, #60]	; 0x3c
   134d4:	ldr	r2, [r4, #24]
   134d8:	mov	r3, #0
   134dc:	cmp	r2, #1
   134e0:	str	r3, [r4, #208]	; 0xd0
   134e4:	movgt	r3, #1
   134e8:	strgt	r3, [r4, #24]
   134ec:	pop	{r4, r5, r6, pc}
   134f0:	andeq	lr, r2, r8, ror #10
   134f4:	andeq	lr, r2, ip, ror #11
   134f8:	push	{r4, r5, r6, r7, r8, lr}
   134fc:	mov	r5, r0
   13500:	ldr	r8, [pc, #604]	; 13764 <__assert_fail@plt+0x1b3c>
   13504:	sub	sp, sp, #128	; 0x80
   13508:	ldr	r4, [r8]
   1350c:	cmp	r4, #0
   13510:	beq	13598 <__assert_fail@plt+0x1970>
   13514:	add	r7, r0, #72	; 0x48
   13518:	mov	r6, #128	; 0x80
   1351c:	mov	r2, r6
   13520:	mov	r1, r7
   13524:	add	r0, r4, #72	; 0x48
   13528:	bl	11838 <memcmp@plt>
   1352c:	cmp	r0, #0
   13530:	bne	1358c <__assert_fail@plt+0x1964>
   13534:	ldr	r1, [r5, #12]
   13538:	ldr	r0, [r4, #12]
   1353c:	bl	11754 <strcmp@plt>
   13540:	cmp	r0, #0
   13544:	bne	1358c <__assert_fail@plt+0x1964>
   13548:	ldr	r1, [r5, #20]
   1354c:	ldr	r0, [r4, #20]
   13550:	bl	11754 <strcmp@plt>
   13554:	cmp	r0, #0
   13558:	bne	1358c <__assert_fail@plt+0x1964>
   1355c:	ldr	r2, [r4, #64]	; 0x40
   13560:	ldr	r3, [r5, #64]	; 0x40
   13564:	sub	r2, r2, #1
   13568:	sub	r3, r3, #1
   1356c:	cmp	r2, #1
   13570:	movls	r2, #0
   13574:	movhi	r2, #1
   13578:	cmp	r3, #1
   1357c:	movhi	r3, #0
   13580:	movls	r3, #1
   13584:	cmp	r2, r3
   13588:	bne	13668 <__assert_fail@plt+0x1a40>
   1358c:	ldr	r4, [r4, #220]	; 0xdc
   13590:	cmp	r4, #0
   13594:	bne	1351c <__assert_fail@plt+0x18f4>
   13598:	ldr	r3, [pc, #456]	; 13768 <__assert_fail@plt+0x1b40>
   1359c:	ldrb	r3, [r3]
   135a0:	cmp	r3, #0
   135a4:	bne	13740 <__assert_fail@plt+0x1b18>
   135a8:	mov	r0, #224	; 0xe0
   135ac:	bl	17180 <argp_parse@@Base+0x1490>
   135b0:	subs	r4, r0, #0
   135b4:	beq	13750 <__assert_fail@plt+0x1b28>
   135b8:	mov	r1, r5
   135bc:	mov	r2, #224	; 0xe0
   135c0:	bl	11808 <memcpy@plt>
   135c4:	add	r0, r4, #8
   135c8:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135cc:	add	r0, r4, #12
   135d0:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135d4:	add	r0, r4, #20
   135d8:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135dc:	add	r0, r4, #36	; 0x24
   135e0:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135e4:	add	r0, r4, #40	; 0x28
   135e8:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135ec:	add	r0, r4, #48	; 0x30
   135f0:	bl	12ed4 <__assert_fail@plt+0x12ac>
   135f4:	ldr	r1, [r4, #56]	; 0x38
   135f8:	add	r0, r4, #52	; 0x34
   135fc:	lsl	r1, r1, #2
   13600:	bl	12e8c <__assert_fail@plt+0x1264>
   13604:	ldr	r3, [r4, #56]	; 0x38
   13608:	cmp	r3, #0
   1360c:	movne	r5, #0
   13610:	beq	13630 <__assert_fail@plt+0x1a08>
   13614:	ldr	r0, [r4, #52]	; 0x34
   13618:	add	r0, r0, r5, lsl #2
   1361c:	bl	12ed4 <__assert_fail@plt+0x12ac>
   13620:	ldr	r3, [r4, #56]	; 0x38
   13624:	add	r5, r5, #1
   13628:	cmp	r3, r5
   1362c:	bhi	13614 <__assert_fail@plt+0x19ec>
   13630:	mvn	r3, #0
   13634:	str	r3, [r4, #60]	; 0x3c
   13638:	mov	r0, sp
   1363c:	bl	129b0 <__assert_fail@plt+0xd88>
   13640:	ldr	r3, [r8]
   13644:	mov	r1, sp
   13648:	str	r3, [r4, #220]	; 0xdc
   1364c:	mov	r2, #0
   13650:	mov	r0, #2
   13654:	str	r4, [r8]
   13658:	bl	117b4 <sigprocmask@plt>
   1365c:	mov	r0, r4
   13660:	add	sp, sp, #128	; 0x80
   13664:	pop	{r4, r5, r6, r7, r8, pc}
   13668:	mov	r0, sp
   1366c:	bl	129b0 <__assert_fail@plt+0xd88>
   13670:	ldr	r3, [r5, #44]	; 0x2c
   13674:	cmp	r3, #0
   13678:	beq	13720 <__assert_fail@plt+0x1af8>
   1367c:	ldr	r3, [r5, #36]	; 0x24
   13680:	ldr	r1, [r4, #52]	; 0x34
   13684:	cmp	r3, #0
   13688:	ldr	r0, [r4, #56]	; 0x38
   1368c:	ldrne	r2, [r4, #36]	; 0x24
   13690:	strne	r3, [r4, #36]	; 0x24
   13694:	ldr	r3, [r5, #40]	; 0x28
   13698:	strne	r2, [r5, #36]	; 0x24
   1369c:	cmp	r3, #0
   136a0:	ldrne	r2, [r4, #40]	; 0x28
   136a4:	strne	r3, [r4, #40]	; 0x28
   136a8:	ldr	r3, [r5, #48]	; 0x30
   136ac:	strne	r2, [r5, #40]	; 0x28
   136b0:	cmp	r3, #0
   136b4:	ldrne	r2, [r4, #48]	; 0x30
   136b8:	strne	r3, [r4, #48]	; 0x30
   136bc:	strne	r2, [r5, #48]	; 0x30
   136c0:	bl	154d4 <__assert_fail@plt+0x38ac>
   136c4:	ldr	r0, [r5, #56]	; 0x38
   136c8:	ldr	r2, [r5, #52]	; 0x34
   136cc:	mov	r3, #0
   136d0:	mov	ip, #1
   136d4:	str	r0, [r4, #56]	; 0x38
   136d8:	str	r2, [r4, #52]	; 0x34
   136dc:	mov	r1, sp
   136e0:	str	r3, [r5, #56]	; 0x38
   136e4:	str	r3, [r5, #52]	; 0x34
   136e8:	mov	r2, r3
   136ec:	mov	r0, #2
   136f0:	strh	ip, [r4, #32]
   136f4:	bl	117b4 <sigprocmask@plt>
   136f8:	ldr	r3, [pc, #104]	; 13768 <__assert_fail@plt+0x1b40>
   136fc:	ldrb	r3, [r3]
   13700:	cmp	r3, #0
   13704:	beq	1365c <__assert_fail@plt+0x1a34>
   13708:	mov	r1, r4
   1370c:	ldr	r0, [pc, #88]	; 1376c <__assert_fail@plt+0x1b44>
   13710:	bl	12f00 <__assert_fail@plt+0x12d8>
   13714:	mov	r0, r4
   13718:	add	sp, sp, #128	; 0x80
   1371c:	pop	{r4, r5, r6, r7, r8, pc}
   13720:	ldr	r3, [r4, #24]
   13724:	cmp	r3, #1
   13728:	ldr	r3, [r5, #24]
   1372c:	beq	13738 <__assert_fail@plt+0x1b10>
   13730:	cmp	r3, #0
   13734:	bne	1367c <__assert_fail@plt+0x1a54>
   13738:	str	r3, [r4, #24]
   1373c:	b	1367c <__assert_fail@plt+0x1a54>
   13740:	mov	r1, r5
   13744:	ldr	r0, [pc, #36]	; 13770 <__assert_fail@plt+0x1b48>
   13748:	bl	12f00 <__assert_fail@plt+0x12d8>
   1374c:	b	135a8 <__assert_fail@plt+0x1980>
   13750:	mov	r0, #3
   13754:	ldr	r1, [pc, #24]	; 13774 <__assert_fail@plt+0x1b4c>
   13758:	bl	11b14 <syslog@plt>
   1375c:	mvn	r0, #0
   13760:	bl	119c4 <exit@plt>
   13764:	andeq	lr, r2, ip, lsl #12
   13768:			; <UNDEFINED> instruction: 0x0002e3bc
   1376c:	andeq	fp, r1, ip, lsr #25
   13770:			; <UNDEFINED> instruction: 0x0001bcb4
   13774:	ldrdeq	fp, [r1], -r0
   13778:	push	{r4, r5, r6, r7, r8, lr}
   1377c:	mov	r5, r0
   13780:	ldr	r4, [r0, #8]
   13784:	sub	sp, sp, #32
   13788:	cmp	r4, #0
   1378c:	mov	r7, r1
   13790:	mov	r8, r2
   13794:	beq	13860 <__assert_fail@plt+0x1c38>
   13798:	ldr	r1, [pc, #268]	; 138ac <__assert_fail@plt+0x1c84>
   1379c:	mov	r0, r4
   137a0:	bl	11c1c <strspn@plt>
   137a4:	mov	r6, r0
   137a8:	mov	r0, r4
   137ac:	bl	119dc <strlen@plt>
   137b0:	cmp	r6, r0
   137b4:	beq	137e0 <__assert_fail@plt+0x1bb8>
   137b8:	mov	r1, #58	; 0x3a
   137bc:	mov	r0, r4
   137c0:	bl	119f4 <strchr@plt>
   137c4:	cmp	r0, #0
   137c8:	beq	13838 <__assert_fail@plt+0x1c10>
   137cc:	ldr	r1, [pc, #220]	; 138b0 <__assert_fail@plt+0x1c88>
   137d0:	mov	r0, r4
   137d4:	bl	11c1c <strspn@plt>
   137d8:	cmp	r0, #0
   137dc:	beq	13838 <__assert_fail@plt+0x1c10>
   137e0:	mov	r0, sp
   137e4:	mov	r2, #32
   137e8:	mov	r1, #0
   137ec:	bl	11a54 <memset@plt>
   137f0:	ldrb	r3, [r5, #70]	; 0x46
   137f4:	mov	r6, sp
   137f8:	ldrh	ip, [r5, #68]	; 0x44
   137fc:	cmp	r3, #0
   13800:	bne	1389c <__assert_fail@plt+0x1c74>
   13804:	mov	r3, #5
   13808:	str	r3, [sp]
   1380c:	ldr	lr, [r5, #16]
   13810:	mov	r3, r8
   13814:	mov	r2, r6
   13818:	mov	r0, r4
   1381c:	ldr	r1, [r5, #12]
   13820:	str	ip, [sp, #4]
   13824:	str	r7, [sp, #12]
   13828:	str	lr, [sp, #8]
   1382c:	bl	11ba4 <getaddrinfo@plt>
   13830:	add	sp, sp, #32
   13834:	pop	{r4, r5, r6, r7, r8, pc}
   13838:	ldr	r3, [pc, #116]	; 138b4 <__assert_fail@plt+0x1c8c>
   1383c:	ldrb	r3, [r3]
   13840:	cmp	r3, #0
   13844:	beq	13860 <__assert_fail@plt+0x1c38>
   13848:	ldr	r3, [pc, #104]	; 138b8 <__assert_fail@plt+0x1c90>
   1384c:	mov	r2, r4
   13850:	ldr	r1, [pc, #100]	; 138bc <__assert_fail@plt+0x1c94>
   13854:	ldr	r0, [r3]
   13858:	bl	11a0c <fprintf@plt>
   1385c:	ldr	r4, [r5, #8]
   13860:	mov	r2, #32
   13864:	mov	r0, sp
   13868:	mov	r1, #0
   1386c:	bl	11a54 <memset@plt>
   13870:	ldrb	r3, [r5, #70]	; 0x46
   13874:	mov	r2, #1
   13878:	mov	r6, sp
   1387c:	cmp	r3, #0
   13880:	str	r2, [sp]
   13884:	ldrh	ip, [r5, #68]	; 0x44
   13888:	beq	1380c <__assert_fail@plt+0x1be4>
   1388c:	cmp	ip, #2
   13890:	movne	r3, #9
   13894:	strne	r3, [sp]
   13898:	b	1380c <__assert_fail@plt+0x1be4>
   1389c:	cmp	ip, #2
   138a0:	movne	r3, #13
   138a4:	moveq	r3, #5
   138a8:	b	13808 <__assert_fail@plt+0x1be0>
   138ac:			; <UNDEFINED> instruction: 0x0001bcbc
   138b0:	andeq	fp, r1, r8, asr #25
   138b4:			; <UNDEFINED> instruction: 0x0002e3bc
   138b8:			; <UNDEFINED> instruction: 0x0002e3b0
   138bc:	andeq	fp, r1, r4, ror #25
   138c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   138c4:	mov	r2, #3
   138c8:	ldr	r4, [r0, #20]
   138cc:	sub	sp, sp, #20
   138d0:	mov	r5, r0
   138d4:	ldr	r1, [pc, #524]	; 13ae8 <__assert_fail@plt+0x1ec0>
   138d8:	mov	r0, r4
   138dc:	bl	11bd4 <strncmp@plt>
   138e0:	cmp	r0, #0
   138e4:	beq	13a40 <__assert_fail@plt+0x1e18>
   138e8:	mov	r2, #3
   138ec:	ldr	r1, [pc, #504]	; 13aec <__assert_fail@plt+0x1ec4>
   138f0:	mov	r0, r4
   138f4:	bl	11bd4 <strncmp@plt>
   138f8:	cmp	r0, #0
   138fc:	movne	r0, r4
   13900:	ldreq	r0, [pc, #484]	; 13aec <__assert_fail@plt+0x1ec4>
   13904:	bl	117a8 <getprotobyname@plt>
   13908:	mov	r4, r0
   1390c:	cmp	r4, #0
   13910:	beq	13a54 <__assert_fail@plt+0x1e2c>
   13914:	add	r2, sp, #12
   13918:	ldr	r1, [r4, #8]
   1391c:	mov	r0, r5
   13920:	bl	13778 <__assert_fail@plt+0x1b50>
   13924:	cmn	r0, #9
   13928:	mov	r7, r0
   1392c:	beq	139c4 <__assert_fail@plt+0x1d9c>
   13930:	cmp	r7, #0
   13934:	bne	139a8 <__assert_fail@plt+0x1d80>
   13938:	ldr	r4, [sp, #12]
   1393c:	cmp	r4, #0
   13940:	beq	13994 <__assert_fail@plt+0x1d6c>
   13944:	add	r6, r5, #72	; 0x48
   13948:	mov	r9, #128	; 0x80
   1394c:	mov	r8, r7
   13950:	mov	r2, r9
   13954:	mov	r1, r8
   13958:	mov	r0, r6
   1395c:	bl	11a54 <memset@plt>
   13960:	ldr	r2, [r4, #16]
   13964:	ldr	r1, [r4, #20]
   13968:	mov	r0, r6
   1396c:	bl	11808 <memcpy@plt>
   13970:	ldr	r3, [r4, #16]
   13974:	mov	r0, r5
   13978:	str	r3, [r5, #200]	; 0xc8
   1397c:	bl	134f8 <__assert_fail@plt+0x18d0>
   13980:	bl	133a8 <__assert_fail@plt+0x1780>
   13984:	ldr	r4, [r4, #28]
   13988:	cmp	r4, #0
   1398c:	bne	13950 <__assert_fail@plt+0x1d28>
   13990:	ldr	r4, [sp, #12]
   13994:	mov	r0, r4
   13998:	bl	11b98 <freeaddrinfo@plt>
   1399c:	mov	r0, r7
   139a0:	add	sp, sp, #20
   139a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   139a8:	cmn	r7, #11
   139ac:	bne	139d0 <__assert_fail@plt+0x1da8>
   139b0:	bl	11a24 <__errno_location@plt>
   139b4:	ldr	r0, [r0]
   139b8:	bl	1197c <strerror@plt>
   139bc:	mov	r4, r0
   139c0:	b	139dc <__assert_fail@plt+0x1db4>
   139c4:	ldrh	r3, [r5, #68]	; 0x44
   139c8:	cmp	r3, #10
   139cc:	beq	13a74 <__assert_fail@plt+0x1e4c>
   139d0:	mov	r0, r7
   139d4:	bl	117e4 <gai_strerror@plt>
   139d8:	mov	r4, r0
   139dc:	ldr	r2, [r5, #8]
   139e0:	ldr	r3, [pc, #264]	; 13af0 <__assert_fail@plt+0x1ec8>
   139e4:	cmp	r2, #0
   139e8:	ldrb	r3, [r3]
   139ec:	beq	13aa0 <__assert_fail@plt+0x1e78>
   139f0:	cmp	r3, #0
   139f4:	beq	13a18 <__assert_fail@plt+0x1df0>
   139f8:	ldr	r1, [r5, #20]
   139fc:	ldr	r0, [pc, #240]	; 13af4 <__assert_fail@plt+0x1ecc>
   13a00:	ldr	r3, [r5, #12]
   13a04:	ldr	r0, [r0]
   13a08:	stm	sp, {r1, r4}
   13a0c:	ldr	r1, [pc, #228]	; 13af8 <__assert_fail@plt+0x1ed0>
   13a10:	bl	11a0c <fprintf@plt>
   13a14:	ldr	r2, [r5, #8]
   13a18:	ldr	r1, [r5, #20]
   13a1c:	ldr	r3, [r5, #12]
   13a20:	mov	r0, #3
   13a24:	stm	sp, {r1, r4}
   13a28:	ldr	r1, [pc, #204]	; 13afc <__assert_fail@plt+0x1ed4>
   13a2c:	bl	11b14 <syslog@plt>
   13a30:	mov	r7, #1
   13a34:	mov	r0, r7
   13a38:	add	sp, sp, #20
   13a3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a40:	ldr	r0, [pc, #160]	; 13ae8 <__assert_fail@plt+0x1ec0>
   13a44:	bl	117a8 <getprotobyname@plt>
   13a48:	mov	r4, r0
   13a4c:	cmp	r4, #0
   13a50:	bne	13914 <__assert_fail@plt+0x1cec>
   13a54:	ldr	r2, [r5, #20]
   13a58:	ldr	r1, [pc, #160]	; 13b00 <__assert_fail@plt+0x1ed8>
   13a5c:	mov	r0, #3
   13a60:	bl	11b14 <syslog@plt>
   13a64:	mov	r7, #1
   13a68:	mov	r0, r7
   13a6c:	add	sp, sp, #20
   13a70:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a74:	ldrb	r3, [r5, #70]	; 0x46
   13a78:	cmp	r3, #0
   13a7c:	beq	139d0 <__assert_fail@plt+0x1da8>
   13a80:	mov	r3, #2
   13a84:	ldr	r1, [r4, #8]
   13a88:	add	r2, sp, #12
   13a8c:	strh	r3, [r5, #68]	; 0x44
   13a90:	mov	r0, r5
   13a94:	bl	13778 <__assert_fail@plt+0x1b50>
   13a98:	mov	r7, r0
   13a9c:	b	13930 <__assert_fail@plt+0x1d08>
   13aa0:	cmp	r3, #0
   13aa4:	bne	13ac8 <__assert_fail@plt+0x1ea0>
   13aa8:	ldr	r3, [r5, #20]
   13aac:	ldr	r2, [r5, #12]
   13ab0:	ldr	r1, [pc, #76]	; 13b04 <__assert_fail@plt+0x1edc>
   13ab4:	str	r4, [sp]
   13ab8:	mov	r0, #3
   13abc:	bl	11b14 <syslog@plt>
   13ac0:	mov	r7, #1
   13ac4:	b	1399c <__assert_fail@plt+0x1d74>
   13ac8:	ldr	r1, [pc, #36]	; 13af4 <__assert_fail@plt+0x1ecc>
   13acc:	ldr	r3, [r5, #20]
   13ad0:	ldr	r2, [r5, #12]
   13ad4:	ldr	r0, [r1]
   13ad8:	str	r4, [sp]
   13adc:	ldr	r1, [pc, #36]	; 13b08 <__assert_fail@plt+0x1ee0>
   13ae0:	bl	11a0c <fprintf@plt>
   13ae4:	b	13aa8 <__assert_fail@plt+0x1e80>
   13ae8:	strdeq	fp, [r1], -r4
   13aec:	strdeq	fp, [r1], -ip
   13af0:			; <UNDEFINED> instruction: 0x0002e3bc
   13af4:			; <UNDEFINED> instruction: 0x0002e3b0
   13af8:	andeq	fp, r1, r8, lsl sp
   13afc:	andeq	fp, r1, ip, lsr sp
   13b00:	andeq	fp, r1, r0, lsl #26
   13b04:	andeq	fp, r1, r8, ror sp
   13b08:	andeq	fp, r1, r8, asr sp
   13b0c:	ldr	r1, [pc]	; 13b14 <__assert_fail@plt+0x1eec>
   13b10:	b	11b74 <fopen64@plt>
   13b14:	andeq	ip, r1, r0, ror #26
   13b18:	cmp	r0, #0
   13b1c:	bxeq	lr
   13b20:	b	11a9c <fclose@plt>
   13b24:	push	{r4, lr}
   13b28:	mov	r4, r0
   13b2c:	ldr	r0, [r0, #8]
   13b30:	bl	16b88 <argp_parse@@Base+0xe98>
   13b34:	ldr	r0, [r4, #12]
   13b38:	bl	16b88 <argp_parse@@Base+0xe98>
   13b3c:	ldr	r0, [r4, #20]
   13b40:	bl	16b88 <argp_parse@@Base+0xe98>
   13b44:	ldr	r0, [r4, #36]	; 0x24
   13b48:	bl	16b88 <argp_parse@@Base+0xe98>
   13b4c:	ldr	r0, [r4, #40]	; 0x28
   13b50:	bl	16b88 <argp_parse@@Base+0xe98>
   13b54:	ldr	r0, [r4, #48]	; 0x30
   13b58:	bl	16b88 <argp_parse@@Base+0xe98>
   13b5c:	ldr	r1, [r4, #52]	; 0x34
   13b60:	ldr	r0, [r4, #56]	; 0x38
   13b64:	pop	{r4, lr}
   13b68:	b	154d4 <__assert_fail@plt+0x38ac>
   13b6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b70:	mov	r9, r0
   13b74:	ldr	r8, [pc, #160]	; 13c1c <__assert_fail@plt+0x1ff4>
   13b78:	ldr	r3, [r8]
   13b7c:	cmp	r3, #0
   13b80:	beq	13bec <__assert_fail@plt+0x1fc4>
   13b84:	ldr	r6, [pc, #148]	; 13c20 <__assert_fail@plt+0x1ff8>
   13b88:	ldr	r1, [pc, #148]	; 13c24 <__assert_fail@plt+0x1ffc>
   13b8c:	ldr	r0, [r6]
   13b90:	add	r0, r3, r0
   13b94:	bl	11778 <strcspn@plt>
   13b98:	mov	r5, r0
   13b9c:	add	r0, r0, #1
   13ba0:	bl	17180 <argp_parse@@Base+0x1490>
   13ba4:	cmp	r0, #0
   13ba8:	mov	r7, r0
   13bac:	str	r0, [r9, #8]
   13bb0:	beq	13c08 <__assert_fail@plt+0x1fe0>
   13bb4:	ldr	r4, [r6]
   13bb8:	ldr	sl, [r8]
   13bbc:	mov	r2, r5
   13bc0:	add	r1, sl, r4
   13bc4:	bl	11808 <memcpy@plt>
   13bc8:	add	r3, r5, r4
   13bcc:	mov	r2, #0
   13bd0:	str	r3, [r6]
   13bd4:	strb	r2, [r7, r5]
   13bd8:	ldrb	r4, [sl, r3]
   13bdc:	cmp	r4, r2
   13be0:	addne	r3, r3, #1
   13be4:	strne	r3, [r6]
   13be8:	beq	13bf4 <__assert_fail@plt+0x1fcc>
   13bec:	mov	r0, r9
   13bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bf4:	mov	r0, sl
   13bf8:	bl	16b88 <argp_parse@@Base+0xe98>
   13bfc:	str	r4, [r8]
   13c00:	mov	r0, r9
   13c04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c08:	mov	r0, #3
   13c0c:	ldr	r1, [pc, #20]	; 13c28 <__assert_fail@plt+0x2000>
   13c10:	bl	11b14 <syslog@plt>
   13c14:	mvn	r0, #0
   13c18:	bl	119c4 <exit@plt>
   13c1c:	andeq	lr, r2, r4, lsl #12
   13c20:	strdeq	lr, [r2], -ip
   13c24:	muleq	r1, r0, sp
   13c28:	muleq	r1, r4, sp
   13c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c30:	mov	r5, r0
   13c34:	ldr	r9, [pc, #1716]	; 142f0 <__assert_fail@plt+0x26c8>
   13c38:	mov	r3, #0
   13c3c:	sub	sp, sp, #36	; 0x24
   13c40:	ldr	r0, [r9]
   13c44:	str	r3, [sp, #20]
   13c48:	cmp	r0, r3
   13c4c:	str	r3, [sp, #24]
   13c50:	beq	13c64 <__assert_fail@plt+0x203c>
   13c54:	ldr	r0, [pc, #1688]	; 142f4 <__assert_fail@plt+0x26cc>
   13c58:	bl	13b6c <__assert_fail@plt+0x1f44>
   13c5c:	add	sp, sp, #36	; 0x24
   13c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c64:	ldr	r4, [pc, #1676]	; 142f8 <__assert_fail@plt+0x26d0>
   13c68:	mov	fp, r1
   13c6c:	str	r0, [sp, #8]
   13c70:	mov	r1, r0
   13c74:	mov	r6, r2
   13c78:	add	r0, r4, #4
   13c7c:	mov	r2, #224	; 0xe0
   13c80:	bl	11a54 <memset@plt>
   13c84:	ldr	r3, [sp, #8]
   13c88:	add	r8, r4, #228	; 0xe4
   13c8c:	mov	r0, r3
   13c90:	str	fp, [sp, #8]
   13c94:	mov	fp, #224	; 0xe0
   13c98:	mov	sl, #0
   13c9c:	mov	r7, #10
   13ca0:	mov	r1, r3
   13ca4:	bl	154d4 <__assert_fail@plt+0x38ac>
   13ca8:	ldr	r0, [pc, #1604]	; 142f4 <__assert_fail@plt+0x26cc>
   13cac:	bl	13b24 <__assert_fail@plt+0x1efc>
   13cb0:	mov	r2, fp
   13cb4:	mov	r1, sl
   13cb8:	ldr	r0, [pc, #1588]	; 142f4 <__assert_fail@plt+0x26cc>
   13cbc:	bl	11a54 <memset@plt>
   13cc0:	b	13cfc <__assert_fail@plt+0x20d4>
   13cc4:	ldr	r2, [r4, #232]	; 0xe8
   13cc8:	beq	13cec <__assert_fail@plt+0x20c4>
   13ccc:	sub	r0, r0, #1
   13cd0:	ldrb	r3, [r2, r0]
   13cd4:	cmp	r3, #10
   13cd8:	strbeq	sl, [r2, r0]
   13cdc:	ldr	r3, [r6]
   13ce0:	ldreq	r2, [r4, #232]	; 0xe8
   13ce4:	add	r3, r3, #1
   13ce8:	str	r3, [r6]
   13cec:	ldrb	r3, [r2]
   13cf0:	cmp	r3, #0
   13cf4:	cmpne	r3, #35	; 0x23
   13cf8:	bne	13d24 <__assert_fail@plt+0x20fc>
   13cfc:	mov	r3, r5
   13d00:	mov	r2, r7
   13d04:	mov	r1, r8
   13d08:	ldr	r0, [pc, #1516]	; 142fc <__assert_fail@plt+0x26d4>
   13d0c:	bl	1173c <__getdelim@plt>
   13d10:	cmp	r0, #0
   13d14:	bge	13cc4 <__assert_fail@plt+0x209c>
   13d18:	mov	r0, #0
   13d1c:	add	sp, sp, #36	; 0x24
   13d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d24:	mov	r0, r2
   13d28:	add	r3, sp, #24
   13d2c:	add	r2, sp, #20
   13d30:	ldr	r1, [pc, #1480]	; 14300 <__assert_fail@plt+0x26d8>
   13d34:	bl	15308 <__assert_fail@plt+0x36e0>
   13d38:	cmp	r0, #0
   13d3c:	ldrne	r0, [sp, #20]
   13d40:	ldrne	r1, [sp, #24]
   13d44:	bne	13ca4 <__assert_fail@plt+0x207c>
   13d48:	ldr	r2, [sp, #20]
   13d4c:	str	r0, [sp, #12]
   13d50:	cmp	r2, #5
   13d54:	ble	14078 <__assert_fail@plt+0x2450>
   13d58:	ldr	r1, [sp, #24]
   13d5c:	ldr	r3, [sp, #8]
   13d60:	ldr	r2, [r6]
   13d64:	str	r3, [r4, #4]
   13d68:	ldr	sl, [r1]
   13d6c:	mov	r1, #58	; 0x3a
   13d70:	mov	r0, sl
   13d74:	str	r2, [r4, #8]
   13d78:	bl	11ae4 <strrchr@plt>
   13d7c:	ldr	r3, [sp, #12]
   13d80:	subs	r7, r0, #0
   13d84:	beq	141b0 <__assert_fail@plt+0x2588>
   13d88:	strb	r3, [r7]
   13d8c:	ldr	r1, [pc, #1392]	; 14304 <__assert_fail@plt+0x26dc>
   13d90:	mov	r0, sl
   13d94:	str	r3, [sp, #12]
   13d98:	bl	11754 <strcmp@plt>
   13d9c:	add	r7, r7, #1
   13da0:	cmp	r0, #0
   13da4:	bne	1412c <__assert_fail@plt+0x2504>
   13da8:	mov	r2, #7
   13dac:	ldr	r1, [pc, #1364]	; 14308 <__assert_fail@plt+0x26e0>
   13db0:	mov	r0, r7
   13db4:	bl	11bd4 <strncmp@plt>
   13db8:	cmp	r0, #0
   13dbc:	bne	14114 <__assert_fail@plt+0x24ec>
   13dc0:	ldrb	r3, [r7, #7]
   13dc4:	cmp	r3, #43	; 0x2b
   13dc8:	moveq	r3, #2
   13dcc:	movne	r3, #1
   13dd0:	addeq	r0, r7, #8
   13dd4:	addne	r0, r7, #7
   13dd8:	str	r3, [r4, #68]	; 0x44
   13ddc:	bl	12e68 <__assert_fail@plt+0x1240>
   13de0:	str	r0, [r4, #16]
   13de4:	ldr	r7, [sp, #24]
   13de8:	ldr	r1, [pc, #1308]	; 1430c <__assert_fail@plt+0x26e4>
   13dec:	ldr	sl, [r7, #4]
   13df0:	mov	r0, sl
   13df4:	bl	11754 <strcmp@plt>
   13df8:	cmp	r0, #0
   13dfc:	moveq	r3, #1
   13e00:	streq	r3, [r4, #20]
   13e04:	beq	13e78 <__assert_fail@plt+0x2250>
   13e08:	ldr	r1, [pc, #1280]	; 14310 <__assert_fail@plt+0x26e8>
   13e0c:	mov	r0, sl
   13e10:	bl	11754 <strcmp@plt>
   13e14:	cmp	r0, #0
   13e18:	moveq	r3, #2
   13e1c:	streq	r3, [r4, #20]
   13e20:	beq	13e78 <__assert_fail@plt+0x2250>
   13e24:	ldr	r1, [pc, #1256]	; 14314 <__assert_fail@plt+0x26ec>
   13e28:	mov	r0, sl
   13e2c:	bl	11754 <strcmp@plt>
   13e30:	cmp	r0, #0
   13e34:	moveq	r3, #4
   13e38:	streq	r3, [r4, #20]
   13e3c:	beq	13e78 <__assert_fail@plt+0x2250>
   13e40:	ldr	r1, [pc, #1232]	; 14318 <__assert_fail@plt+0x26f0>
   13e44:	mov	r0, sl
   13e48:	bl	11754 <strcmp@plt>
   13e4c:	cmp	r0, #0
   13e50:	moveq	r3, #5
   13e54:	streq	r3, [r4, #20]
   13e58:	beq	13e78 <__assert_fail@plt+0x2250>
   13e5c:	mov	r0, sl
   13e60:	ldr	r1, [pc, #1204]	; 1431c <__assert_fail@plt+0x26f4>
   13e64:	bl	11754 <strcmp@plt>
   13e68:	cmp	r0, #0
   13e6c:	bne	1429c <__assert_fail@plt+0x2674>
   13e70:	mov	r3, #3
   13e74:	str	r3, [r4, #20]
   13e78:	ldr	r0, [r7, #8]
   13e7c:	bl	12e68 <__assert_fail@plt+0x1240>
   13e80:	mov	r1, #2
   13e84:	mov	r3, #1
   13e88:	strh	r1, [r4, #72]	; 0x48
   13e8c:	mov	r2, #3
   13e90:	ldr	r1, [pc, #1160]	; 14320 <__assert_fail@plt+0x26f8>
   13e94:	strb	r3, [r4, #74]	; 0x4a
   13e98:	mov	r7, r0
   13e9c:	str	r0, [r4, #24]
   13ea0:	bl	11bd4 <strncmp@plt>
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ec4 <__assert_fail@plt+0x229c>
   13eac:	mov	r2, #3
   13eb0:	ldr	r1, [pc, #1132]	; 14324 <__assert_fail@plt+0x26fc>
   13eb4:	mov	r0, r7
   13eb8:	bl	11bd4 <strncmp@plt>
   13ebc:	cmp	r0, #0
   13ec0:	bne	13edc <__assert_fail@plt+0x22b4>
   13ec4:	ldrb	r3, [r7, #3]
   13ec8:	cmp	r3, #54	; 0x36
   13ecc:	moveq	r2, #10
   13ed0:	moveq	r3, #0
   13ed4:	strheq	r2, [r4, #72]	; 0x48
   13ed8:	strbeq	r3, [r4, #74]	; 0x4a
   13edc:	ldr	r3, [sp, #24]
   13ee0:	mov	r1, #46	; 0x2e
   13ee4:	ldr	r7, [r3, #12]
   13ee8:	mov	r0, r7
   13eec:	bl	119f4 <strchr@plt>
   13ef0:	ldr	r1, [pc, #1072]	; 14328 <__assert_fail@plt+0x2700>
   13ef4:	subs	sl, r0, #0
   13ef8:	movne	r3, #0
   13efc:	strbne	r3, [sl]
   13f00:	ldrne	r3, [sp, #24]
   13f04:	addne	sl, sl, #1
   13f08:	ldrne	r7, [r3, #12]
   13f0c:	mov	r0, r7
   13f10:	bl	11754 <strcmp@plt>
   13f14:	cmp	r0, #0
   13f18:	moveq	r3, #1
   13f1c:	streq	r3, [r4, #28]
   13f20:	beq	13f3c <__assert_fail@plt+0x2314>
   13f24:	mov	r0, r7
   13f28:	ldr	r1, [pc, #1020]	; 1432c <__assert_fail@plt+0x2704>
   13f2c:	bl	11754 <strcmp@plt>
   13f30:	cmp	r0, #0
   13f34:	streq	r0, [r4, #28]
   13f38:	bne	14198 <__assert_fail@plt+0x2570>
   13f3c:	cmp	sl, #0
   13f40:	beq	13f68 <__assert_fail@plt+0x2340>
   13f44:	mov	r2, #10
   13f48:	add	r1, sp, #28
   13f4c:	mov	r0, sl
   13f50:	bl	119d0 <strtoul@plt>
   13f54:	ldr	r3, [sp, #28]
   13f58:	str	r0, [r4, #32]
   13f5c:	ldrb	r3, [r3]
   13f60:	cmp	r3, #0
   13f64:	bne	14148 <__assert_fail@plt+0x2520>
   13f68:	ldr	r3, [r4, #68]	; 0x44
   13f6c:	sub	r3, r3, #1
   13f70:	cmp	r3, #1
   13f74:	bls	140c4 <__assert_fail@plt+0x249c>
   13f78:	ldr	r3, [sp, #24]
   13f7c:	ldr	r0, [r3, #16]
   13f80:	bl	12e68 <__assert_fail@plt+0x1240>
   13f84:	mov	r1, #58	; 0x3a
   13f88:	mov	r7, r0
   13f8c:	str	r0, [r4, #40]	; 0x28
   13f90:	bl	119f4 <strchr@plt>
   13f94:	cmp	r0, #0
   13f98:	beq	14204 <__assert_fail@plt+0x25dc>
   13f9c:	mov	r3, #0
   13fa0:	strb	r3, [r0], #1
   13fa4:	bl	12e68 <__assert_fail@plt+0x1240>
   13fa8:	str	r0, [r4, #44]	; 0x2c
   13fac:	ldr	r3, [sp, #24]
   13fb0:	ldr	r0, [r3, #20]
   13fb4:	bl	12e68 <__assert_fail@plt+0x1240>
   13fb8:	ldr	r1, [pc, #880]	; 14330 <__assert_fail@plt+0x2708>
   13fbc:	str	r0, [r4, #52]	; 0x34
   13fc0:	bl	11754 <strcmp@plt>
   13fc4:	cmp	r0, #0
   13fc8:	bne	142c0 <__assert_fail@plt+0x2698>
   13fcc:	ldr	r0, [pc, #800]	; 142f4 <__assert_fail@plt+0x26cc>
   13fd0:	bl	128f0 <__assert_fail@plt+0xcc8>
   13fd4:	cmp	r0, #0
   13fd8:	str	r0, [r4, #48]	; 0x30
   13fdc:	beq	14278 <__assert_fail@plt+0x2650>
   13fe0:	ldrsh	r3, [r0, #10]
   13fe4:	ldr	fp, [sp, #8]
   13fe8:	str	r3, [r4, #28]
   13fec:	ldr	r0, [sp, #20]
   13ff0:	mov	r1, #4
   13ff4:	sub	r3, r0, #5
   13ff8:	sub	r0, r0, #4
   13ffc:	str	r3, [r4, #60]	; 0x3c
   14000:	bl	17138 <argp_parse@@Base+0x1448>
   14004:	cmp	r0, #0
   14008:	mov	r5, r0
   1400c:	str	r0, [r4, #56]	; 0x38
   14010:	beq	142d0 <__assert_fail@plt+0x26a8>
   14014:	ldr	r6, [r4, #60]	; 0x3c
   14018:	cmp	r6, #0
   1401c:	moveq	r3, r0
   14020:	ldreq	r1, [sp, #24]
   14024:	beq	14064 <__assert_fail@plt+0x243c>
   14028:	ldr	r1, [sp, #24]
   1402c:	lsl	r7, r6, #2
   14030:	add	r2, r1, #20
   14034:	add	lr, r0, r7
   14038:	mov	r3, r0
   1403c:	mov	ip, #0
   14040:	ldr	r0, [r2, #4]
   14044:	str	r0, [r3], #4
   14048:	cmp	lr, r3
   1404c:	str	ip, [r2, #4]!
   14050:	bne	14040 <__assert_fail@plt+0x2418>
   14054:	cmp	r6, #1
   14058:	movne	r6, r7
   1405c:	movne	r3, r5
   14060:	beq	14164 <__assert_fail@plt+0x253c>
   14064:	mov	r2, #0
   14068:	str	r2, [r3, r6]
   1406c:	ldr	r0, [sp, #20]
   14070:	bl	154d4 <__assert_fail@plt+0x38ac>
   14074:	b	13c54 <__assert_fail@plt+0x202c>
   14078:	cmp	r2, #1
   1407c:	bne	140a4 <__assert_fail@plt+0x247c>
   14080:	ldr	r2, [sp, #24]
   14084:	ldr	sl, [r2]
   14088:	mov	r0, sl
   1408c:	bl	119dc <strlen@plt>
   14090:	ldr	r3, [sp, #12]
   14094:	sub	r0, r0, #1
   14098:	ldrb	r2, [sl, r0]
   1409c:	cmp	r2, #58	; 0x3a
   140a0:	beq	14230 <__assert_fail@plt+0x2608>
   140a4:	ldr	r3, [r6]
   140a8:	ldr	r2, [sp, #8]
   140ac:	ldr	r1, [pc, #640]	; 14334 <__assert_fail@plt+0x270c>
   140b0:	mov	r0, #3
   140b4:	bl	11b14 <syslog@plt>
   140b8:	ldr	r3, [sp, #24]
   140bc:	ldr	r0, [sp, #20]
   140c0:	b	13c94 <__assert_fail@plt+0x206c>
   140c4:	mov	r3, #0
   140c8:	mov	r2, #3
   140cc:	ldr	r1, [pc, #588]	; 14320 <__assert_fail@plt+0x26f8>
   140d0:	ldr	r0, [r4, #24]
   140d4:	str	r3, [r4, #28]
   140d8:	bl	11bd4 <strncmp@plt>
   140dc:	cmp	r0, #0
   140e0:	bne	141e0 <__assert_fail@plt+0x25b8>
   140e4:	ldr	r3, [r4, #20]
   140e8:	cmp	r3, #1
   140ec:	beq	13f78 <__assert_fail@plt+0x2350>
   140f0:	ldr	r2, [r4, #16]
   140f4:	ldr	r3, [r6]
   140f8:	ldr	r1, [pc, #568]	; 14338 <__assert_fail@plt+0x2710>
   140fc:	str	r2, [sp]
   14100:	mov	r0, #3
   14104:	ldr	r2, [sp, #8]
   14108:	bl	11b14 <syslog@plt>
   1410c:	ldr	r3, [sp, #24]
   14110:	b	140bc <__assert_fail@plt+0x2494>
   14114:	mov	r0, r7
   14118:	bl	12e68 <__assert_fail@plt+0x1240>
   1411c:	mov	r3, #0
   14120:	str	r3, [r4, #68]	; 0x44
   14124:	str	r0, [r4, #16]
   14128:	b	13de4 <__assert_fail@plt+0x21bc>
   1412c:	mov	r0, sl
   14130:	bl	12e68 <__assert_fail@plt+0x1240>
   14134:	ldr	r2, [pc, #512]	; 1433c <__assert_fail@plt+0x2714>
   14138:	ldr	r3, [sp, #12]
   1413c:	str	r3, [r2]
   14140:	str	r0, [r9]
   14144:	b	13da8 <__assert_fail@plt+0x2180>
   14148:	ldr	r3, [r6]
   1414c:	ldr	r2, [sp, #8]
   14150:	str	sl, [sp]
   14154:	ldr	r1, [pc, #484]	; 14340 <__assert_fail@plt+0x2718>
   14158:	mov	r0, #4
   1415c:	bl	11b14 <syslog@plt>
   14160:	b	13f68 <__assert_fail@plt+0x2340>
   14164:	ldr	r6, [r4, #52]	; 0x34
   14168:	mov	r1, #47	; 0x2f
   1416c:	mov	r0, r6
   14170:	bl	11ae4 <strrchr@plt>
   14174:	cmp	r0, #0
   14178:	moveq	r0, r6
   1417c:	addne	r0, r0, #1
   14180:	bl	12e68 <__assert_fail@plt+0x1240>
   14184:	mov	r6, #4
   14188:	ldr	r3, [r4, #56]	; 0x38
   1418c:	ldr	r1, [sp, #24]
   14190:	str	r0, [r5]
   14194:	b	14064 <__assert_fail@plt+0x243c>
   14198:	ldr	r3, [r6]
   1419c:	ldr	r2, [sp, #8]
   141a0:	ldr	r1, [pc, #412]	; 14344 <__assert_fail@plt+0x271c>
   141a4:	mov	r0, #4
   141a8:	bl	11b14 <syslog@plt>
   141ac:	b	13f3c <__assert_fail@plt+0x2314>
   141b0:	ldr	r3, [pc, #400]	; 14348 <__assert_fail@plt+0x2720>
   141b4:	ldr	r0, [r3]
   141b8:	cmp	r0, #0
   141bc:	moveq	r7, sl
   141c0:	beq	13da8 <__assert_fail@plt+0x2180>
   141c4:	bl	12e68 <__assert_fail@plt+0x1240>
   141c8:	ldr	r3, [sp, #24]
   141cc:	ldr	r2, [pc, #360]	; 1433c <__assert_fail@plt+0x2714>
   141d0:	str	r7, [r2]
   141d4:	str	r0, [r9]
   141d8:	ldr	r7, [r3]
   141dc:	b	13da8 <__assert_fail@plt+0x2180>
   141e0:	ldr	r2, [r4, #16]
   141e4:	ldr	r3, [r6]
   141e8:	ldr	r1, [pc, #348]	; 1434c <__assert_fail@plt+0x2724>
   141ec:	str	r2, [sp]
   141f0:	mov	r0, #3
   141f4:	ldr	r2, [sp, #8]
   141f8:	bl	11b14 <syslog@plt>
   141fc:	ldr	r3, [sp, #24]
   14200:	b	140bc <__assert_fail@plt+0x2494>
   14204:	mov	r0, r7
   14208:	mov	r1, #46	; 0x2e
   1420c:	bl	119f4 <strchr@plt>
   14210:	cmp	r0, #0
   14214:	bne	13f9c <__assert_fail@plt+0x2374>
   14218:	ldr	r0, [pc, #224]	; 14300 <__assert_fail@plt+0x26d8>
   1421c:	bl	11874 <strdup@plt>
   14220:	cmp	r0, #0
   14224:	beq	142ec <__assert_fail@plt+0x26c4>
   14228:	str	r0, [r4, #44]	; 0x2c
   1422c:	b	13fac <__assert_fail@plt+0x2384>
   14230:	ldr	r7, [pc, #272]	; 14348 <__assert_fail@plt+0x2720>
   14234:	strb	r3, [sl, r0]
   14238:	ldr	r0, [r7]
   1423c:	bl	16b88 <argp_parse@@Base+0xe98>
   14240:	ldr	r3, [sp, #24]
   14244:	ldr	r1, [pc, #184]	; 14304 <__assert_fail@plt+0x26dc>
   14248:	str	r3, [sp, #12]
   1424c:	ldr	sl, [r3]
   14250:	mov	r0, sl
   14254:	bl	11754 <strcmp@plt>
   14258:	ldr	r3, [sp, #12]
   1425c:	cmp	r0, #0
   14260:	beq	140bc <__assert_fail@plt+0x2494>
   14264:	mov	r0, sl
   14268:	bl	12e68 <__assert_fail@plt+0x1240>
   1426c:	ldr	r3, [sp, #24]
   14270:	str	r0, [r7]
   14274:	b	140bc <__assert_fail@plt+0x2494>
   14278:	ldr	r2, [r4, #16]
   1427c:	ldr	r3, [r6]
   14280:	ldr	r1, [pc, #200]	; 14350 <__assert_fail@plt+0x2728>
   14284:	str	r2, [sp]
   14288:	mov	r0, #3
   1428c:	ldr	r2, [sp, #8]
   14290:	bl	11b14 <syslog@plt>
   14294:	ldr	r3, [sp, #24]
   14298:	b	140bc <__assert_fail@plt+0x2494>
   1429c:	ldr	r3, [r6]
   142a0:	ldr	r2, [sp, #8]
   142a4:	ldr	r1, [pc, #168]	; 14354 <__assert_fail@plt+0x272c>
   142a8:	mov	r0, #4
   142ac:	bl	11b14 <syslog@plt>
   142b0:	mvn	r3, #0
   142b4:	ldr	r7, [sp, #24]
   142b8:	str	r3, [r4, #20]
   142bc:	b	13e78 <__assert_fail@plt+0x2250>
   142c0:	mov	r3, #0
   142c4:	ldr	fp, [sp, #8]
   142c8:	str	r3, [r4, #48]	; 0x30
   142cc:	b	13fec <__assert_fail@plt+0x23c4>
   142d0:	mov	r0, #3
   142d4:	ldr	r3, [r6]
   142d8:	mov	r2, fp
   142dc:	ldr	r1, [pc, #116]	; 14358 <__assert_fail@plt+0x2730>
   142e0:	bl	11b14 <syslog@plt>
   142e4:	mvn	r0, #0
   142e8:	bl	119c4 <exit@plt>
   142ec:	bl	128d4 <__assert_fail@plt+0xcac>
   142f0:	andeq	lr, r2, r4, lsl #12
   142f4:	andeq	lr, r2, r0, asr #7
   142f8:			; <UNDEFINED> instruction: 0x0002e3bc
   142fc:	andeq	lr, r2, r4, lsr #9
   14300:	andeq	fp, r1, ip, lsl #22
   14304:	andeq	fp, r1, ip, lsr fp
   14308:	muleq	r2, r4, r2
   1430c:			; <UNDEFINED> instruction: 0x0001bdbc
   14310:	andeq	fp, r1, r4, asr #27
   14314:	andeq	fp, r1, ip, asr #27
   14318:	ldrdeq	fp, [r1], -r0
   1431c:	ldrdeq	fp, [r1], -ip
   14320:	strdeq	fp, [r1], -r4
   14324:	strdeq	fp, [r1], -ip
   14328:	strdeq	fp, [r1], -r8
   1432c:	andeq	fp, r1, r0, lsl #28
   14330:	muleq	r1, r8, lr
   14334:	andeq	fp, r1, r0, lsr #27
   14338:	andeq	fp, r1, r8, ror #28
   1433c:	strdeq	lr, [r2], -ip
   14340:	andeq	fp, r1, r0, lsr #28
   14344:	andeq	fp, r1, r8, lsl #28
   14348:	andeq	lr, r2, r0, lsl r6
   1434c:	andeq	fp, r1, ip, lsr lr
   14350:	andeq	fp, r1, r4, lsr #29
   14354:	andeq	fp, r1, r0, ror #27
   14358:	andeq	fp, r1, r8, asr #29
   1435c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14360:	sub	sp, sp, #148	; 0x94
   14364:	mov	r3, #0
   14368:	ldr	r1, [pc, #448]	; 14530 <__assert_fail@plt+0x2908>
   1436c:	str	r3, [sp, #12]
   14370:	mov	r5, r0
   14374:	bl	11b74 <fopen64@plt>
   14378:	subs	r4, r0, #0
   1437c:	beq	1451c <__assert_fail@plt+0x28f4>
   14380:	ldr	r6, [pc, #428]	; 14534 <__assert_fail@plt+0x290c>
   14384:	ldr	sl, [pc, #428]	; 14538 <__assert_fail@plt+0x2910>
   14388:	mvn	r8, #0
   1438c:	mov	r7, #1
   14390:	mov	r9, #3
   14394:	add	r2, sp, #12
   14398:	mov	r1, r5
   1439c:	mov	r0, r4
   143a0:	bl	13c2c <__assert_fail@plt+0x2004>
   143a4:	subs	fp, r0, #0
   143a8:	beq	14458 <__assert_fail@plt+0x2830>
   143ac:	ldr	r0, [fp, #36]	; 0x24
   143b0:	bl	11748 <getpwnam@plt>
   143b4:	cmp	r0, #0
   143b8:	beq	144fc <__assert_fail@plt+0x28d4>
   143bc:	ldr	r0, [fp, #40]	; 0x28
   143c0:	cmp	r0, #0
   143c4:	beq	143d4 <__assert_fail@plt+0x27ac>
   143c8:	ldrb	r3, [r0]
   143cc:	cmp	r3, #0
   143d0:	bne	1442c <__assert_fail@plt+0x2804>
   143d4:	ldr	r3, [fp, #64]	; 0x40
   143d8:	sub	r3, r3, #1
   143dc:	cmp	r3, #1
   143e0:	bls	14404 <__assert_fail@plt+0x27dc>
   143e4:	mov	r0, fp
   143e8:	bl	138c0 <__assert_fail@plt+0x1c98>
   143ec:	ldr	r3, [r6]
   143f0:	cmp	r3, #0
   143f4:	beq	14420 <__assert_fail@plt+0x27f8>
   143f8:	ldr	r0, [fp, #8]
   143fc:	bl	16b88 <argp_parse@@Base+0xe98>
   14400:	b	14394 <__assert_fail@plt+0x276c>
   14404:	str	r8, [fp, #60]	; 0x3c
   14408:	strh	r7, [fp, #32]
   1440c:	mov	r0, fp
   14410:	bl	134f8 <__assert_fail@plt+0x18d0>
   14414:	ldr	r3, [r6]
   14418:	cmp	r3, #0
   1441c:	bne	143f8 <__assert_fail@plt+0x27d0>
   14420:	mov	r0, fp
   14424:	bl	13b24 <__assert_fail@plt+0x1efc>
   14428:	b	14394 <__assert_fail@plt+0x276c>
   1442c:	bl	11c10 <getgrnam@plt>
   14430:	cmp	r0, #0
   14434:	bne	143d4 <__assert_fail@plt+0x27ac>
   14438:	ldr	r1, [fp, #40]	; 0x28
   1443c:	ldr	r3, [fp, #20]
   14440:	ldr	r2, [fp, #12]
   14444:	mov	r0, r9
   14448:	str	r1, [sp]
   1444c:	ldr	r1, [pc, #232]	; 1453c <__assert_fail@plt+0x2914>
   14450:	bl	11b14 <syslog@plt>
   14454:	b	14394 <__assert_fail@plt+0x276c>
   14458:	mov	r0, r4
   1445c:	bl	11a9c <fclose@plt>
   14460:	add	r0, sp, #16
   14464:	bl	129b0 <__assert_fail@plt+0xd88>
   14468:	ldr	r5, [pc, #208]	; 14540 <__assert_fail@plt+0x2918>
   1446c:	ldr	r6, [pc, #208]	; 14544 <__assert_fail@plt+0x291c>
   14470:	ldr	r7, [pc, #208]	; 14548 <__assert_fail@plt+0x2920>
   14474:	ldr	r4, [r5]
   14478:	cmp	r4, #0
   1447c:	beq	144d4 <__assert_fail@plt+0x28ac>
   14480:	ldrsh	r3, [r4, #32]
   14484:	cmp	r3, #0
   14488:	addne	r5, r4, #220	; 0xdc
   1448c:	bne	14474 <__assert_fail@plt+0x284c>
   14490:	ldr	r2, [r4, #60]	; 0x3c
   14494:	ldr	r3, [r4, #220]	; 0xdc
   14498:	cmp	r2, #0
   1449c:	mov	r0, r4
   144a0:	str	r3, [r5]
   144a4:	blt	144ac <__assert_fail@plt+0x2884>
   144a8:	bl	13488 <__assert_fail@plt+0x1860>
   144ac:	ldrb	r3, [r6]
   144b0:	cmp	r3, #0
   144b4:	bne	144ec <__assert_fail@plt+0x28c4>
   144b8:	mov	r0, r4
   144bc:	bl	13b24 <__assert_fail@plt+0x1efc>
   144c0:	mov	r0, r4
   144c4:	bl	16b88 <argp_parse@@Base+0xe98>
   144c8:	ldr	r4, [r5]
   144cc:	cmp	r4, #0
   144d0:	bne	14480 <__assert_fail@plt+0x2858>
   144d4:	mov	r2, r4
   144d8:	add	r1, sp, #16
   144dc:	mov	r0, #2
   144e0:	bl	117b4 <sigprocmask@plt>
   144e4:	add	sp, sp, #148	; 0x94
   144e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144ec:	mov	r1, r4
   144f0:	mov	r0, r7
   144f4:	bl	12f00 <__assert_fail@plt+0x12d8>
   144f8:	b	144b8 <__assert_fail@plt+0x2890>
   144fc:	ldr	r1, [fp, #36]	; 0x24
   14500:	ldr	r3, [fp, #20]
   14504:	ldr	r2, [fp, #12]
   14508:	mov	r0, r9
   1450c:	str	r1, [sp]
   14510:	mov	r1, sl
   14514:	bl	11b14 <syslog@plt>
   14518:	b	14394 <__assert_fail@plt+0x276c>
   1451c:	mov	r2, r5
   14520:	ldr	r1, [pc, #36]	; 1454c <__assert_fail@plt+0x2924>
   14524:	mov	r0, #3
   14528:	bl	11b14 <syslog@plt>
   1452c:	b	144e4 <__assert_fail@plt+0x28bc>
   14530:	andeq	ip, r1, r0, ror #26
   14534:	andeq	lr, r2, r4, lsl #12
   14538:	andeq	fp, r1, r8, ror #29
   1453c:	andeq	fp, r1, r4, lsl pc
   14540:	andeq	lr, r2, ip, lsl #12
   14544:			; <UNDEFINED> instruction: 0x0002e3bc
   14548:	andeq	fp, r1, r0, asr #30
   1454c:	andeq	fp, r1, r0, ror #29
   14550:	ldr	r3, [pc, #488]	; 14740 <__assert_fail@plt+0x2b18>
   14554:	push	{r4, r5, r6, r7, r8, lr}
   14558:	sub	sp, sp, #224	; 0xe0
   1455c:	ldr	r4, [r3]
   14560:	cmp	r4, #0
   14564:	beq	146d8 <__assert_fail@plt+0x2ab0>
   14568:	mov	r6, #0
   1456c:	ldr	r5, [pc, #464]	; 14744 <__assert_fail@plt+0x2b1c>
   14570:	mov	r7, r6
   14574:	mov	r8, #1
   14578:	b	145a8 <__assert_fail@plt+0x2980>
   1457c:	mov	r1, r5
   14580:	ldr	r0, [r4, #12]
   14584:	bl	11754 <strcmp@plt>
   14588:	cmp	r0, #0
   1458c:	bne	1459c <__assert_fail@plt+0x2974>
   14590:	cmp	r7, #0
   14594:	bne	146d8 <__assert_fail@plt+0x2ab0>
   14598:	mov	r6, r8
   1459c:	ldr	r4, [r4, #220]	; 0xdc
   145a0:	cmp	r4, #0
   145a4:	beq	145f0 <__assert_fail@plt+0x29c8>
   145a8:	ldrsh	r3, [r4, #32]
   145ac:	cmp	r3, #0
   145b0:	beq	1459c <__assert_fail@plt+0x2974>
   145b4:	ldr	r3, [r4, #64]	; 0x40
   145b8:	sub	r3, r3, #1
   145bc:	cmp	r3, #1
   145c0:	bhi	1457c <__assert_fail@plt+0x2954>
   145c4:	cmp	r6, #0
   145c8:	bne	146d8 <__assert_fail@plt+0x2ab0>
   145cc:	mov	r1, r5
   145d0:	ldr	r0, [r4, #12]
   145d4:	bl	11754 <strcmp@plt>
   145d8:	cmp	r0, #0
   145dc:	beq	146d8 <__assert_fail@plt+0x2ab0>
   145e0:	ldr	r4, [r4, #220]	; 0xdc
   145e4:	mov	r7, r8
   145e8:	cmp	r4, #0
   145ec:	bne	145a8 <__assert_fail@plt+0x2980>
   145f0:	eor	r6, r6, #1
   145f4:	tst	r6, r7
   145f8:	beq	146d8 <__assert_fail@plt+0x2ab0>
   145fc:	mov	r1, r4
   14600:	mov	r2, #224	; 0xe0
   14604:	mov	r0, sp
   14608:	bl	11a54 <memset@plt>
   1460c:	ldr	r3, [pc, #308]	; 14748 <__assert_fail@plt+0x2b20>
   14610:	ldr	r0, [pc, #300]	; 14744 <__assert_fail@plt+0x2b1c>
   14614:	str	r3, [sp]
   14618:	bl	11874 <strdup@plt>
   1461c:	subs	r3, r0, #0
   14620:	beq	1473c <__assert_fail@plt+0x2b14>
   14624:	mov	r4, #1
   14628:	ldr	r0, [pc, #284]	; 1474c <__assert_fail@plt+0x2b24>
   1462c:	str	r3, [sp, #12]
   14630:	str	r4, [sp, #16]
   14634:	strh	r4, [sp, #32]
   14638:	bl	11874 <strdup@plt>
   1463c:	subs	r3, r0, #0
   14640:	beq	1473c <__assert_fail@plt+0x2b14>
   14644:	ldr	r0, [pc, #260]	; 14750 <__assert_fail@plt+0x2b28>
   14648:	str	r3, [sp, #36]	; 0x24
   1464c:	bl	11874 <strdup@plt>
   14650:	subs	r3, r0, #0
   14654:	beq	1473c <__assert_fail@plt+0x2b14>
   14658:	mov	r0, sp
   1465c:	str	r3, [sp, #40]	; 0x28
   14660:	bl	128f0 <__assert_fail@plt+0xcc8>
   14664:	cmp	r0, #0
   14668:	str	r0, [sp, #44]	; 0x2c
   1466c:	beq	146fc <__assert_fail@plt+0x2ad4>
   14670:	ldrsh	r3, [r0, #10]
   14674:	ldr	r0, [pc, #216]	; 14754 <__assert_fail@plt+0x2b2c>
   14678:	str	r3, [sp, #24]
   1467c:	bl	11874 <strdup@plt>
   14680:	subs	r2, r0, #0
   14684:	beq	1473c <__assert_fail@plt+0x2b14>
   14688:	mvn	r3, #0
   1468c:	ldr	r0, [pc, #196]	; 14758 <__assert_fail@plt+0x2b30>
   14690:	str	r2, [sp, #48]	; 0x30
   14694:	str	r3, [sp, #60]	; 0x3c
   14698:	bl	11874 <strdup@plt>
   1469c:	cmp	r0, #0
   146a0:	beq	1473c <__assert_fail@plt+0x2b14>
   146a4:	ldr	r3, [pc, #176]	; 1475c <__assert_fail@plt+0x2b34>
   146a8:	mov	r2, #10
   146ac:	str	r0, [sp, #20]
   146b0:	ldrb	r3, [r3]
   146b4:	strb	r4, [sp, #70]	; 0x46
   146b8:	strh	r2, [sp, #68]	; 0x44
   146bc:	cmp	r3, #0
   146c0:	bne	146e0 <__assert_fail@plt+0x2ab8>
   146c4:	mov	r0, #6
   146c8:	ldr	r1, [pc, #144]	; 14760 <__assert_fail@plt+0x2b38>
   146cc:	bl	11b14 <syslog@plt>
   146d0:	mov	r0, sp
   146d4:	bl	138c0 <__assert_fail@plt+0x1c98>
   146d8:	add	sp, sp, #224	; 0xe0
   146dc:	pop	{r4, r5, r6, r7, r8, pc}
   146e0:	ldr	r3, [pc, #124]	; 14764 <__assert_fail@plt+0x2b3c>
   146e4:	mov	r1, r4
   146e8:	mov	r2, #31
   146ec:	ldr	r3, [r3]
   146f0:	ldr	r0, [pc, #112]	; 14768 <__assert_fail@plt+0x2b40>
   146f4:	bl	118f8 <fwrite@plt>
   146f8:	b	146c4 <__assert_fail@plt+0x2a9c>
   146fc:	mov	r0, sp
   14700:	bl	13b24 <__assert_fail@plt+0x1efc>
   14704:	ldr	r3, [pc, #80]	; 1475c <__assert_fail@plt+0x2b34>
   14708:	ldrb	r3, [r3]
   1470c:	cmp	r3, #0
   14710:	beq	1472c <__assert_fail@plt+0x2b04>
   14714:	ldr	r3, [pc, #72]	; 14764 <__assert_fail@plt+0x2b3c>
   14718:	mov	r1, r4
   1471c:	mov	r2, #46	; 0x2e
   14720:	ldr	r3, [r3]
   14724:	ldr	r0, [pc, #64]	; 1476c <__assert_fail@plt+0x2b44>
   14728:	bl	118f8 <fwrite@plt>
   1472c:	ldr	r1, [pc, #56]	; 1476c <__assert_fail@plt+0x2b44>
   14730:	mov	r0, #3
   14734:	bl	11b14 <syslog@plt>
   14738:	b	146d8 <__assert_fail@plt+0x2ab0>
   1473c:	bl	128d4 <__assert_fail@plt+0xcac>
   14740:	andeq	lr, r2, ip, lsl #12
   14744:	andeq	fp, r1, ip, asr #30
   14748:	andeq	fp, r1, r8, asr #30
   1474c:	andeq	fp, r1, r4, asr pc
   14750:	andeq	fp, r1, ip, lsl #22
   14754:	muleq	r1, r8, lr
   14758:	andeq	fp, r1, ip, lsl #31
   1475c:			; <UNDEFINED> instruction: 0x0002e3bc
   14760:			; <UNDEFINED> instruction: 0x0001bfb4
   14764:			; <UNDEFINED> instruction: 0x0002e3b0
   14768:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1476c:	andeq	fp, r1, ip, asr pc
   14770:	ldr	r3, [pc, #460]	; 14944 <__assert_fail@plt+0x2d1c>
   14774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14778:	mov	fp, r0
   1477c:	ldr	r3, [r3]
   14780:	sub	sp, sp, #212	; 0xd4
   14784:	cmp	r3, #0
   14788:	movne	r2, #0
   1478c:	beq	147a0 <__assert_fail@plt+0x2b78>
   14790:	strh	r2, [r3, #32]
   14794:	ldr	r3, [r3, #220]	; 0xdc
   14798:	cmp	r3, #0
   1479c:	bne	14790 <__assert_fail@plt+0x2b68>
   147a0:	ldr	r6, [pc, #416]	; 14948 <__assert_fail@plt+0x2d20>
   147a4:	ldr	r3, [r6]
   147a8:	ldr	r1, [r3]
   147ac:	cmp	r1, #0
   147b0:	movne	r5, #0
   147b4:	movne	r8, #3
   147b8:	movne	sl, #1
   147bc:	bne	147f0 <__assert_fail@plt+0x2bc8>
   147c0:	b	14854 <__assert_fail@plt+0x2c2c>
   147c4:	ldr	r3, [sp, #120]	; 0x78
   147c8:	and	r3, r3, #61440	; 0xf000
   147cc:	cmp	r3, #16384	; 0x4000
   147d0:	beq	14878 <__assert_fail@plt+0x2c50>
   147d4:	cmp	r3, #32768	; 0x8000
   147d8:	beq	148e0 <__assert_fail@plt+0x2cb8>
   147dc:	ldr	r3, [r6]
   147e0:	add	r5, r5, #4
   147e4:	ldr	r1, [r3, r5]
   147e8:	cmp	r1, #0
   147ec:	beq	14854 <__assert_fail@plt+0x2c2c>
   147f0:	add	r2, sp, #104	; 0x68
   147f4:	mov	r0, r8
   147f8:	bl	11bbc <__xstat64@plt>
   147fc:	cmp	r0, #0
   14800:	beq	147c4 <__assert_fail@plt+0x2b9c>
   14804:	cmp	fp, #0
   14808:	ldr	r3, [r6]
   1480c:	bne	14840 <__assert_fail@plt+0x2c18>
   14810:	ldr	r2, [pc, #308]	; 1494c <__assert_fail@plt+0x2d24>
   14814:	ldr	r7, [r3, r5]
   14818:	ldr	r4, [r2]
   1481c:	bl	11a24 <__errno_location@plt>
   14820:	ldr	r0, [r0]
   14824:	bl	1197c <strerror@plt>
   14828:	mov	r2, r7
   1482c:	ldr	r1, [pc, #284]	; 14950 <__assert_fail@plt+0x2d28>
   14830:	mov	r3, r0
   14834:	mov	r0, r4
   14838:	bl	11a0c <fprintf@plt>
   1483c:	b	147dc <__assert_fail@plt+0x2bb4>
   14840:	ldr	r1, [pc, #268]	; 14954 <__assert_fail@plt+0x2d2c>
   14844:	mov	r0, r8
   14848:	ldr	r2, [r3, r5]
   1484c:	bl	11b14 <syslog@plt>
   14850:	b	147dc <__assert_fail@plt+0x2bb4>
   14854:	ldr	r4, [pc, #252]	; 14958 <__assert_fail@plt+0x2d30>
   14858:	ldr	r0, [r4, #232]	; 0xe8
   1485c:	bl	16b88 <argp_parse@@Base+0xe98>
   14860:	mov	r3, #0
   14864:	str	r3, [r4, #232]	; 0xe8
   14868:	str	r3, [r4, #228]	; 0xe4
   1486c:	bl	14550 <__assert_fail@plt+0x2928>
   14870:	add	sp, sp, #212	; 0xd4
   14874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14878:	ldr	r3, [r6]
   1487c:	ldr	r0, [r3, r5]
   14880:	bl	11928 <opendir@plt>
   14884:	subs	r9, r0, #0
   14888:	bne	148c0 <__assert_fail@plt+0x2c98>
   1488c:	b	147dc <__assert_fail@plt+0x2bb4>
   14890:	ldr	r3, [r6]
   14894:	ldr	r0, [r3, r5]
   14898:	bl	119dc <strlen@plt>
   1489c:	mov	r7, r0
   148a0:	mov	r0, r4
   148a4:	bl	119dc <strlen@plt>
   148a8:	mov	r1, sl
   148ac:	add	r0, r7, r0
   148b0:	add	r0, r0, #2
   148b4:	bl	17138 <argp_parse@@Base+0x1448>
   148b8:	subs	r7, r0, #0
   148bc:	bne	148f0 <__assert_fail@plt+0x2cc8>
   148c0:	mov	r0, r9
   148c4:	bl	11b38 <readdir64@plt>
   148c8:	cmp	r0, #0
   148cc:	add	r4, r0, #19
   148d0:	bne	14890 <__assert_fail@plt+0x2c68>
   148d4:	mov	r0, r9
   148d8:	bl	11c04 <closedir@plt>
   148dc:	b	147dc <__assert_fail@plt+0x2bb4>
   148e0:	ldr	r3, [r6]
   148e4:	ldr	r0, [r3, r5]
   148e8:	bl	1435c <__assert_fail@plt+0x2734>
   148ec:	b	147dc <__assert_fail@plt+0x2bb4>
   148f0:	ldr	r2, [r6]
   148f4:	mov	r3, r4
   148f8:	ldr	r1, [pc, #92]	; 1495c <__assert_fail@plt+0x2d34>
   148fc:	ldr	r2, [r2, r5]
   14900:	bl	11b2c <sprintf@plt>
   14904:	mov	r2, sp
   14908:	mov	r1, r7
   1490c:	mov	r0, r8
   14910:	bl	11bbc <__xstat64@plt>
   14914:	cmp	r0, #0
   14918:	bne	1492c <__assert_fail@plt+0x2d04>
   1491c:	ldr	r3, [sp, #16]
   14920:	and	r3, r3, #61440	; 0xf000
   14924:	cmp	r3, #32768	; 0x8000
   14928:	beq	14938 <__assert_fail@plt+0x2d10>
   1492c:	mov	r0, r7
   14930:	bl	16b88 <argp_parse@@Base+0xe98>
   14934:	b	148c0 <__assert_fail@plt+0x2c98>
   14938:	mov	r0, r7
   1493c:	bl	1435c <__assert_fail@plt+0x2734>
   14940:	b	1492c <__assert_fail@plt+0x2d04>
   14944:	andeq	lr, r2, ip, lsl #12
   14948:	andeq	lr, r2, r8, lsl #12
   1494c:			; <UNDEFINED> instruction: 0x0002e3b0
   14950:	ldrdeq	fp, [r1], -ip
   14954:	andeq	fp, r1, r0, ror #29
   14958:			; <UNDEFINED> instruction: 0x0002e3bc
   1495c:	ldrdeq	fp, [r1], -r4
   14960:	ldr	r3, [pc, #236]	; 14a54 <__assert_fail@plt+0x2e2c>
   14964:	push	{r4, r5, r6, r7, lr}
   14968:	mov	r2, r1
   1496c:	ldr	r3, [r3]
   14970:	sub	sp, sp, #316	; 0x13c
   14974:	mov	r7, r0
   14978:	add	r1, sp, #184	; 0xb8
   1497c:	mov	r0, r2
   14980:	mov	r5, #128	; 0x80
   14984:	add	r2, sp, #20
   14988:	ldr	r4, [r3]
   1498c:	str	r5, [sp, #20]
   14990:	bl	11b8c <getpeername@plt>
   14994:	cmp	r0, #0
   14998:	bne	14a2c <__assert_fail@plt+0x2e04>
   1499c:	mov	r3, #1
   149a0:	str	r0, [sp, #4]
   149a4:	str	r0, [sp]
   149a8:	str	r3, [sp, #8]
   149ac:	mov	r1, r5
   149b0:	add	r0, sp, #184	; 0xb8
   149b4:	add	r2, sp, #104	; 0x68
   149b8:	mov	r3, #80	; 0x50
   149bc:	bl	11ad8 <getnameinfo@plt>
   149c0:	add	r6, sp, #24
   149c4:	cmp	r0, #0
   149c8:	beq	14a34 <__assert_fail@plt+0x2e0c>
   149cc:	mov	r3, r7
   149d0:	mov	r0, r6
   149d4:	ldr	r2, [pc, #124]	; 14a58 <__assert_fail@plt+0x2e30>
   149d8:	mov	r1, #80	; 0x50
   149dc:	bl	11a30 <snprintf@plt>
   149e0:	ldr	r5, [pc, #116]	; 14a5c <__assert_fail@plt+0x2e34>
   149e4:	mov	r1, r6
   149e8:	mov	r0, r4
   149ec:	ldr	r2, [r5]
   149f0:	sub	r2, r2, r4
   149f4:	bl	11a60 <strncpy@plt>
   149f8:	mov	r0, r4
   149fc:	bl	119dc <strlen@plt>
   14a00:	ldr	r3, [r5]
   14a04:	add	r0, r4, r0
   14a08:	cmp	r0, r3
   14a0c:	bcs	14a24 <__assert_fail@plt+0x2dfc>
   14a10:	mov	r2, #32
   14a14:	strb	r2, [r0], #1
   14a18:	ldr	r3, [r5]
   14a1c:	cmp	r3, r0
   14a20:	bhi	14a14 <__assert_fail@plt+0x2dec>
   14a24:	add	sp, sp, #316	; 0x13c
   14a28:	pop	{r4, r5, r6, r7, pc}
   14a2c:	add	r6, sp, #24
   14a30:	b	149cc <__assert_fail@plt+0x2da4>
   14a34:	add	r3, sp, #104	; 0x68
   14a38:	str	r3, [sp]
   14a3c:	mov	r0, r6
   14a40:	mov	r3, r7
   14a44:	ldr	r2, [pc, #20]	; 14a60 <__assert_fail@plt+0x2e38>
   14a48:	mov	r1, #80	; 0x50
   14a4c:	bl	11a30 <snprintf@plt>
   14a50:	b	149e0 <__assert_fail@plt+0x2db8>
   14a54:	strdeq	lr, [r2], -r4
   14a58:	strdeq	fp, [r1], -r8
   14a5c:	strdeq	lr, [r2], -r8
   14a60:	andeq	fp, r1, ip, ror #31
   14a64:	ldr	r3, [r1, #12]
   14a68:	push	{r4, r5, lr}
   14a6c:	sub	sp, sp, #8192	; 0x2000
   14a70:	mov	r1, r0
   14a74:	sub	sp, sp, #4
   14a78:	mov	r4, r0
   14a7c:	mov	r0, r3
   14a80:	bl	14960 <__assert_fail@plt+0x2d38>
   14a84:	mov	r5, #8192	; 0x2000
   14a88:	b	14aa0 <__assert_fail@plt+0x2e78>
   14a8c:	mov	r1, sp
   14a90:	mov	r0, r4
   14a94:	bl	11a84 <write@plt>
   14a98:	cmp	r0, #0
   14a9c:	ble	14ab8 <__assert_fail@plt+0x2e90>
   14aa0:	mov	r2, r5
   14aa4:	mov	r1, sp
   14aa8:	mov	r0, r4
   14aac:	bl	1179c <read@plt>
   14ab0:	subs	r2, r0, #0
   14ab4:	bgt	14a8c <__assert_fail@plt+0x2e64>
   14ab8:	mov	r0, #0
   14abc:	bl	119c4 <exit@plt>
   14ac0:	ldr	r3, [r1, #12]
   14ac4:	push	{r4, r5, lr}
   14ac8:	sub	sp, sp, #8192	; 0x2000
   14acc:	mov	r1, r0
   14ad0:	sub	sp, sp, #4
   14ad4:	mov	r4, r0
   14ad8:	mov	r0, r3
   14adc:	bl	14960 <__assert_fail@plt+0x2d38>
   14ae0:	mov	r5, #8192	; 0x2000
   14ae4:	mov	r2, r5
   14ae8:	mov	r1, sp
   14aec:	mov	r0, r4
   14af0:	bl	1179c <read@plt>
   14af4:	cmp	r0, #0
   14af8:	bgt	14ae4 <__assert_fail@plt+0x2ebc>
   14afc:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14b00:	bl	11a24 <__errno_location@plt>
   14b04:	ldr	r3, [r0]
   14b08:	cmp	r3, #4
   14b0c:	beq	14ae4 <__assert_fail@plt+0x2ebc>
   14b10:	mov	r0, #0
   14b14:	bl	119c4 <exit@plt>
   14b18:	push	{r4, lr}
   14b1c:	ldr	r4, [pc, #60]	; 14b60 <__assert_fail@plt+0x2f38>
   14b20:	ldr	r3, [pc, #60]	; 14b64 <__assert_fail@plt+0x2f3c>
   14b24:	str	r3, [r4]
   14b28:	bl	119ac <__ctype_b_loc@plt>
   14b2c:	mov	r3, #0
   14b30:	ldr	r1, [r0]
   14b34:	lsl	r2, r3, #1
   14b38:	ldrh	r2, [r1, r2]
   14b3c:	tst	r2, #16384	; 0x4000
   14b40:	ldrne	r2, [r4]
   14b44:	addne	r1, r2, #1
   14b48:	strne	r1, [r4]
   14b4c:	strbne	r3, [r2]
   14b50:	add	r3, r3, #1
   14b54:	cmp	r3, #129	; 0x81
   14b58:	bne	14b30 <__assert_fail@plt+0x2f08>
   14b5c:	pop	{r4, pc}
   14b60:	andeq	lr, r2, r8, ror #11
   14b64:	andeq	lr, r2, r4, ror #9
   14b68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b6c:	mov	r8, r0
   14b70:	ldr	r3, [r1, #12]
   14b74:	ldr	r9, [pc, #188]	; 14c38 <__assert_fail@plt+0x3010>
   14b78:	mov	r1, r0
   14b7c:	sub	sp, sp, #84	; 0x54
   14b80:	mov	r0, r3
   14b84:	bl	14960 <__assert_fail@plt+0x2d38>
   14b88:	ldr	r6, [r9]
   14b8c:	cmp	r6, #0
   14b90:	beq	14c2c <__assert_fail@plt+0x3004>
   14b94:	mov	r3, #13
   14b98:	ldr	r4, [pc, #156]	; 14c3c <__assert_fail@plt+0x3014>
   14b9c:	strb	r3, [sp, #76]	; 0x4c
   14ba0:	mov	r3, #10
   14ba4:	mov	r7, r4
   14ba8:	mov	fp, #72	; 0x48
   14bac:	mov	sl, #74	; 0x4a
   14bb0:	strb	r3, [sp, #77]	; 0x4d
   14bb4:	b	14bf0 <__assert_fail@plt+0x2fc8>
   14bb8:	mov	r2, fp
   14bbc:	mov	r1, r4
   14bc0:	add	r0, sp, #4
   14bc4:	bl	11808 <memcpy@plt>
   14bc8:	mov	r2, sl
   14bcc:	add	r1, sp, #4
   14bd0:	mov	r0, r8
   14bd4:	bl	11a84 <write@plt>
   14bd8:	add	r4, r4, #1
   14bdc:	cmp	r4, r6
   14be0:	moveq	r4, r7
   14be4:	cmp	r0, #74	; 0x4a
   14be8:	bne	14c24 <__assert_fail@plt+0x2ffc>
   14bec:	ldr	r6, [r9]
   14bf0:	sub	r5, r6, r4
   14bf4:	cmp	r5, #71	; 0x47
   14bf8:	bgt	14bb8 <__assert_fail@plt+0x2f90>
   14bfc:	mov	r2, r5
   14c00:	mov	r1, r4
   14c04:	add	r0, sp, #4
   14c08:	bl	11808 <memcpy@plt>
   14c0c:	add	r3, sp, #4
   14c10:	rsb	r2, r5, #72	; 0x48
   14c14:	add	r0, r3, r5
   14c18:	mov	r1, r7
   14c1c:	bl	11808 <memcpy@plt>
   14c20:	b	14bc8 <__assert_fail@plt+0x2fa0>
   14c24:	mov	r0, #0
   14c28:	bl	119c4 <exit@plt>
   14c2c:	bl	14b18 <__assert_fail@plt+0x2ef0>
   14c30:	ldr	r6, [r9]
   14c34:	b	14b94 <__assert_fail@plt+0x2f6c>
   14c38:	andeq	lr, r2, r8, ror #11
   14c3c:	andeq	lr, r2, r4, ror #9
   14c40:	push	{r4, r5, r6, r7, r8, r9, lr}
   14c44:	mov	r5, r0
   14c48:	ldr	r4, [pc, #240]	; 14d40 <__assert_fail@plt+0x3118>
   14c4c:	sub	sp, sp, #220	; 0xdc
   14c50:	ldr	r3, [r4]
   14c54:	cmp	r3, #0
   14c58:	beq	14d2c <__assert_fail@plt+0x3104>
   14c5c:	add	r3, sp, #8
   14c60:	add	r6, sp, #88	; 0x58
   14c64:	str	r3, [sp, #4]
   14c68:	mov	ip, #128	; 0x80
   14c6c:	str	r6, [sp]
   14c70:	add	r1, sp, #12
   14c74:	mov	r3, #0
   14c78:	mov	r2, #74	; 0x4a
   14c7c:	mov	r0, r5
   14c80:	str	ip, [sp, #8]
   14c84:	bl	11868 <recvfrom@plt>
   14c88:	cmp	r0, #0
   14c8c:	blt	14d10 <__assert_fail@plt+0x30e8>
   14c90:	ldr	r9, [pc, #172]	; 14d44 <__assert_fail@plt+0x311c>
   14c94:	ldr	r8, [r4]
   14c98:	ldr	r4, [r9, #236]	; 0xec
   14c9c:	sub	r7, r8, r4
   14ca0:	cmp	r7, #71	; 0x47
   14ca4:	bgt	14d18 <__assert_fail@plt+0x30f0>
   14ca8:	mov	r2, r7
   14cac:	mov	r1, r4
   14cb0:	add	r0, sp, #12
   14cb4:	bl	117c0 <memmove@plt>
   14cb8:	add	r3, sp, #12
   14cbc:	rsb	r2, r7, #72	; 0x48
   14cc0:	add	r0, r3, r7
   14cc4:	ldr	r1, [pc, #124]	; 14d48 <__assert_fail@plt+0x3120>
   14cc8:	bl	11808 <memcpy@plt>
   14ccc:	add	r4, r4, #1
   14cd0:	cmp	r8, r4
   14cd4:	mov	lr, #13
   14cd8:	ldreq	r3, [pc, #104]	; 14d48 <__assert_fail@plt+0x3120>
   14cdc:	mov	ip, #10
   14ce0:	streq	r3, [r9, #236]	; 0xec
   14ce4:	mov	r3, #128	; 0x80
   14ce8:	str	r3, [sp, #4]
   14cec:	str	r6, [sp]
   14cf0:	add	r1, sp, #12
   14cf4:	mov	r0, r5
   14cf8:	mov	r3, #0
   14cfc:	mov	r2, #74	; 0x4a
   14d00:	strne	r4, [r9, #236]	; 0xec
   14d04:	strb	lr, [sp, #84]	; 0x54
   14d08:	strb	ip, [sp, #85]	; 0x55
   14d0c:	bl	11aa8 <sendto@plt>
   14d10:	add	sp, sp, #220	; 0xdc
   14d14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d18:	mov	r2, #72	; 0x48
   14d1c:	mov	r1, r4
   14d20:	add	r0, sp, #12
   14d24:	bl	117c0 <memmove@plt>
   14d28:	b	14ccc <__assert_fail@plt+0x30a4>
   14d2c:	bl	14b18 <__assert_fail@plt+0x2ef0>
   14d30:	ldr	r3, [pc, #12]	; 14d44 <__assert_fail@plt+0x311c>
   14d34:	ldr	r2, [pc, #12]	; 14d48 <__assert_fail@plt+0x3120>
   14d38:	str	r2, [r3, #236]	; 0xec
   14d3c:	b	14c5c <__assert_fail@plt+0x3034>
   14d40:	andeq	lr, r2, r8, ror #11
   14d44:			; <UNDEFINED> instruction: 0x0002e3bc
   14d48:	andeq	lr, r2, r4, ror #9
   14d4c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d50:	sub	sp, sp, #12
   14d54:	mov	r1, #0
   14d58:	mov	r0, sp
   14d5c:	bl	11910 <gettimeofday@plt>
   14d60:	cmp	r0, #0
   14d64:	blt	14d80 <__assert_fail@plt+0x3158>
   14d68:	ldr	r3, [sp]
   14d6c:	ldr	r0, [pc, #60]	; 14db0 <__assert_fail@plt+0x3188>
   14d70:	add	r0, r3, r0
   14d74:	rev	r0, r0
   14d78:	add	sp, sp, #12
   14d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d80:	ldr	r3, [pc, #44]	; 14db4 <__assert_fail@plt+0x318c>
   14d84:	ldrb	r0, [r3]
   14d88:	cmp	r0, #0
   14d8c:	beq	14d78 <__assert_fail@plt+0x3150>
   14d90:	ldr	r3, [pc, #32]	; 14db8 <__assert_fail@plt+0x3190>
   14d94:	mov	r2, #26
   14d98:	mov	r1, #1
   14d9c:	ldr	r3, [r3]
   14da0:	ldr	r0, [pc, #20]	; 14dbc <__assert_fail@plt+0x3194>
   14da4:	bl	118f8 <fwrite@plt>
   14da8:	mov	r0, #0
   14dac:	b	14d78 <__assert_fail@plt+0x3150>
   14db0:			; <UNDEFINED> instruction: 0x83aa7e80
   14db4:			; <UNDEFINED> instruction: 0x0002e3bc
   14db8:			; <UNDEFINED> instruction: 0x0002e3b0
   14dbc:	strdeq	fp, [r1], -ip
   14dc0:	push	{r4, lr}
   14dc4:	sub	sp, sp, #8
   14dc8:	mov	r4, r0
   14dcc:	bl	14d4c <__assert_fail@plt+0x3124>
   14dd0:	add	r1, sp, #8
   14dd4:	mov	r2, #4
   14dd8:	str	r0, [r1, #-4]!
   14ddc:	mov	r0, r4
   14de0:	bl	11a84 <write@plt>
   14de4:	add	sp, sp, #8
   14de8:	pop	{r4, pc}
   14dec:	push	{r4, r5, lr}
   14df0:	sub	sp, sp, #148	; 0x94
   14df4:	add	r3, sp, #12
   14df8:	add	r2, sp, #16
   14dfc:	str	r2, [sp]
   14e00:	str	r3, [sp, #4]
   14e04:	add	r1, sp, #8
   14e08:	mov	r4, #128	; 0x80
   14e0c:	mov	r3, #0
   14e10:	mov	r2, #4
   14e14:	str	r4, [sp, #12]
   14e18:	mov	r5, r0
   14e1c:	bl	11868 <recvfrom@plt>
   14e20:	cmp	r0, #0
   14e24:	blt	14e50 <__assert_fail@plt+0x3228>
   14e28:	bl	14d4c <__assert_fail@plt+0x3124>
   14e2c:	add	r3, sp, #16
   14e30:	str	r3, [sp]
   14e34:	str	r4, [sp, #4]
   14e38:	add	r1, sp, #8
   14e3c:	mov	r3, #0
   14e40:	mov	r2, #4
   14e44:	str	r0, [sp, #8]
   14e48:	mov	r0, r5
   14e4c:	bl	11aa8 <sendto@plt>
   14e50:	add	sp, sp, #148	; 0x94
   14e54:	pop	{r4, r5, pc}
   14e58:	push	{r4, r5, r6, r7, r8, lr}
   14e5c:	sub	sp, sp, #352	; 0x160
   14e60:	mov	r3, #128	; 0x80
   14e64:	mov	r4, r0
   14e68:	mov	r7, r1
   14e6c:	mov	r8, r2
   14e70:	ldr	r1, [pc, #772]	; 1517c <__assert_fail@plt+0x3554>
   14e74:	mov	r2, #1
   14e78:	ldr	r0, [pc, #768]	; 15180 <__assert_fail@plt+0x3558>
   14e7c:	str	r3, [sp, #20]
   14e80:	bl	11a00 <setenv@plt>
   14e84:	ldr	r0, [pc, #760]	; 15184 <__assert_fail@plt+0x355c>
   14e88:	bl	11bc8 <unsetenv@plt>
   14e8c:	ldr	r0, [pc, #756]	; 15188 <__assert_fail@plt+0x3560>
   14e90:	bl	11bc8 <unsetenv@plt>
   14e94:	ldr	r0, [pc, #752]	; 1518c <__assert_fail@plt+0x3564>
   14e98:	bl	11bc8 <unsetenv@plt>
   14e9c:	ldr	r0, [pc, #748]	; 15190 <__assert_fail@plt+0x3568>
   14ea0:	bl	11bc8 <unsetenv@plt>
   14ea4:	ldr	r0, [pc, #744]	; 15194 <__assert_fail@plt+0x356c>
   14ea8:	bl	11bc8 <unsetenv@plt>
   14eac:	ldr	r0, [pc, #740]	; 15198 <__assert_fail@plt+0x3570>
   14eb0:	bl	11bc8 <unsetenv@plt>
   14eb4:	mov	r0, r4
   14eb8:	add	r1, sp, #40	; 0x28
   14ebc:	add	r2, sp, #20
   14ec0:	bl	11b50 <getsockname@plt>
   14ec4:	cmp	r0, #0
   14ec8:	blt	15018 <__assert_fail@plt+0x33f0>
   14ecc:	mov	r0, #3
   14ed0:	mov	r3, #16
   14ed4:	add	r4, sp, #168	; 0xa8
   14ed8:	add	r5, sp, #24
   14edc:	str	r0, [sp, #8]
   14ee0:	str	r3, [sp, #4]
   14ee4:	ldr	r1, [sp, #20]
   14ee8:	mov	r2, r4
   14eec:	str	r5, [sp]
   14ef0:	mov	r3, #184	; 0xb8
   14ef4:	add	r0, sp, #40	; 0x28
   14ef8:	bl	11ad8 <getnameinfo@plt>
   14efc:	cmp	r0, #0
   14f00:	beq	14fac <__assert_fail@plt+0x3384>
   14f04:	bl	117e4 <gai_strerror@plt>
   14f08:	ldr	r1, [pc, #652]	; 1519c <__assert_fail@plt+0x3574>
   14f0c:	ldr	r6, [pc, #652]	; 151a0 <__assert_fail@plt+0x3578>
   14f10:	mov	r2, r0
   14f14:	mov	r0, #4
   14f18:	bl	11b14 <syslog@plt>
   14f1c:	ldrb	r3, [r6, #2]
   14f20:	cmp	r3, #0
   14f24:	bne	15030 <__assert_fail@plt+0x3408>
   14f28:	mov	r2, #3
   14f2c:	mov	r3, #16
   14f30:	str	r2, [sp, #8]
   14f34:	str	r3, [sp, #4]
   14f38:	str	r5, [sp]
   14f3c:	mov	r3, #184	; 0xb8
   14f40:	mov	r2, r4
   14f44:	mov	r1, r8
   14f48:	mov	r0, r7
   14f4c:	bl	11ad8 <getnameinfo@plt>
   14f50:	cmp	r0, #0
   14f54:	bne	14ffc <__assert_fail@plt+0x33d4>
   14f58:	mov	r2, #1
   14f5c:	mov	r1, r4
   14f60:	ldr	r0, [pc, #552]	; 15190 <__assert_fail@plt+0x3568>
   14f64:	bl	11a00 <setenv@plt>
   14f68:	cmp	r0, #0
   14f6c:	blt	15144 <__assert_fail@plt+0x351c>
   14f70:	ldr	r6, [pc, #552]	; 151a0 <__assert_fail@plt+0x3578>
   14f74:	ldrb	r3, [r6]
   14f78:	cmp	r3, #0
   14f7c:	bne	15104 <__assert_fail@plt+0x34dc>
   14f80:	mov	r1, r5
   14f84:	mov	r2, #1
   14f88:	ldr	r0, [pc, #516]	; 15194 <__assert_fail@plt+0x356c>
   14f8c:	bl	11a00 <setenv@plt>
   14f90:	cmp	r0, #0
   14f94:	blt	15134 <__assert_fail@plt+0x350c>
   14f98:	ldrb	r3, [r6, #2]
   14f9c:	cmp	r3, #0
   14fa0:	bne	1509c <__assert_fail@plt+0x3474>
   14fa4:	add	sp, sp, #352	; 0x160
   14fa8:	pop	{r4, r5, r6, r7, r8, pc}
   14fac:	mov	r2, #1
   14fb0:	mov	r1, r4
   14fb4:	ldr	r0, [pc, #456]	; 15184 <__assert_fail@plt+0x355c>
   14fb8:	bl	11a00 <setenv@plt>
   14fbc:	cmp	r0, #0
   14fc0:	blt	15158 <__assert_fail@plt+0x3530>
   14fc4:	ldr	r6, [pc, #468]	; 151a0 <__assert_fail@plt+0x3578>
   14fc8:	ldrb	r3, [r6]
   14fcc:	cmp	r3, #0
   14fd0:	bne	1511c <__assert_fail@plt+0x34f4>
   14fd4:	mov	r2, #1
   14fd8:	mov	r1, r5
   14fdc:	ldr	r0, [pc, #424]	; 1518c <__assert_fail@plt+0x3564>
   14fe0:	bl	11a00 <setenv@plt>
   14fe4:	cmp	r0, #0
   14fe8:	bge	14f1c <__assert_fail@plt+0x32f4>
   14fec:	ldr	r1, [pc, #432]	; 151a4 <__assert_fail@plt+0x357c>
   14ff0:	mov	r0, #4
   14ff4:	bl	11b14 <syslog@plt>
   14ff8:	b	14f1c <__assert_fail@plt+0x32f4>
   14ffc:	bl	117e4 <gai_strerror@plt>
   15000:	ldr	r1, [pc, #404]	; 1519c <__assert_fail@plt+0x3574>
   15004:	mov	r2, r0
   15008:	mov	r0, #4
   1500c:	bl	11b14 <syslog@plt>
   15010:	add	sp, sp, #352	; 0x160
   15014:	pop	{r4, r5, r6, r7, r8, pc}
   15018:	ldr	r1, [pc, #392]	; 151a8 <__assert_fail@plt+0x3580>
   1501c:	mov	r0, #4
   15020:	bl	11b14 <syslog@plt>
   15024:	add	r4, sp, #168	; 0xa8
   15028:	add	r5, sp, #24
   1502c:	b	14f28 <__assert_fail@plt+0x3300>
   15030:	mov	r3, #0
   15034:	str	r3, [sp, #8]
   15038:	str	r3, [sp, #4]
   1503c:	str	r3, [sp]
   15040:	ldr	r1, [sp, #20]
   15044:	add	r0, sp, #40	; 0x28
   15048:	mov	r3, #184	; 0xb8
   1504c:	mov	r2, r4
   15050:	bl	11ad8 <getnameinfo@plt>
   15054:	cmp	r0, #0
   15058:	beq	15074 <__assert_fail@plt+0x344c>
   1505c:	bl	117e4 <gai_strerror@plt>
   15060:	ldr	r1, [pc, #308]	; 1519c <__assert_fail@plt+0x3574>
   15064:	mov	r2, r0
   15068:	mov	r0, #4
   1506c:	bl	11b14 <syslog@plt>
   15070:	b	14f28 <__assert_fail@plt+0x3300>
   15074:	mov	r2, #1
   15078:	mov	r1, r4
   1507c:	ldr	r0, [pc, #260]	; 15188 <__assert_fail@plt+0x3560>
   15080:	bl	11a00 <setenv@plt>
   15084:	cmp	r0, #0
   15088:	bge	14f28 <__assert_fail@plt+0x3300>
   1508c:	ldr	r1, [pc, #280]	; 151ac <__assert_fail@plt+0x3584>
   15090:	mov	r0, #4
   15094:	bl	11b14 <syslog@plt>
   15098:	b	14f28 <__assert_fail@plt+0x3300>
   1509c:	mov	r3, #0
   150a0:	str	r3, [sp, #8]
   150a4:	str	r3, [sp, #4]
   150a8:	str	r3, [sp]
   150ac:	mov	r1, r8
   150b0:	mov	r0, r7
   150b4:	mov	r3, #184	; 0xb8
   150b8:	mov	r2, r4
   150bc:	bl	11ad8 <getnameinfo@plt>
   150c0:	cmp	r0, #0
   150c4:	bne	14ffc <__assert_fail@plt+0x33d4>
   150c8:	mov	r2, #1
   150cc:	mov	r1, r4
   150d0:	ldr	r0, [pc, #192]	; 15198 <__assert_fail@plt+0x3570>
   150d4:	bl	11a00 <setenv@plt>
   150d8:	cmp	r0, #0
   150dc:	blt	1516c <__assert_fail@plt+0x3544>
   150e0:	ldrb	r3, [r6]
   150e4:	cmp	r3, #0
   150e8:	beq	14fa4 <__assert_fail@plt+0x337c>
   150ec:	ldr	r3, [pc, #188]	; 151b0 <__assert_fail@plt+0x3588>
   150f0:	mov	r2, r4
   150f4:	ldr	r1, [pc, #184]	; 151b4 <__assert_fail@plt+0x358c>
   150f8:	ldr	r0, [r3]
   150fc:	bl	11a0c <fprintf@plt>
   15100:	b	14fa4 <__assert_fail@plt+0x337c>
   15104:	ldr	r3, [pc, #164]	; 151b0 <__assert_fail@plt+0x3588>
   15108:	mov	r2, r4
   1510c:	ldr	r1, [pc, #164]	; 151b8 <__assert_fail@plt+0x3590>
   15110:	ldr	r0, [r3]
   15114:	bl	11a0c <fprintf@plt>
   15118:	b	14f80 <__assert_fail@plt+0x3358>
   1511c:	ldr	r3, [pc, #140]	; 151b0 <__assert_fail@plt+0x3588>
   15120:	mov	r2, r4
   15124:	ldr	r1, [pc, #144]	; 151bc <__assert_fail@plt+0x3594>
   15128:	ldr	r0, [r3]
   1512c:	bl	11a0c <fprintf@plt>
   15130:	b	14fd4 <__assert_fail@plt+0x33ac>
   15134:	ldr	r1, [pc, #132]	; 151c0 <__assert_fail@plt+0x3598>
   15138:	mov	r0, #4
   1513c:	bl	11b14 <syslog@plt>
   15140:	b	14f98 <__assert_fail@plt+0x3370>
   15144:	ldr	r1, [pc, #120]	; 151c4 <__assert_fail@plt+0x359c>
   15148:	mov	r0, #4
   1514c:	bl	11b14 <syslog@plt>
   15150:	ldr	r6, [pc, #72]	; 151a0 <__assert_fail@plt+0x3578>
   15154:	b	14f80 <__assert_fail@plt+0x3358>
   15158:	ldr	r1, [pc, #104]	; 151c8 <__assert_fail@plt+0x35a0>
   1515c:	mov	r0, #4
   15160:	bl	11b14 <syslog@plt>
   15164:	ldr	r6, [pc, #52]	; 151a0 <__assert_fail@plt+0x3578>
   15168:	b	14fd4 <__assert_fail@plt+0x33ac>
   1516c:	ldr	r1, [pc, #88]	; 151cc <__assert_fail@plt+0x35a4>
   15170:	mov	r0, #4
   15174:	bl	11b14 <syslog@plt>
   15178:	b	14fa4 <__assert_fail@plt+0x337c>
   1517c:	andeq	ip, r1, r8, lsl r0
   15180:	andeq	ip, r1, ip, lsl r0
   15184:	andeq	ip, r1, r4, lsr #32
   15188:	andeq	ip, r1, r0, lsr r0
   1518c:	andeq	ip, r1, r0, asr #32
   15190:	andeq	ip, r1, r0, asr r0
   15194:	andeq	ip, r1, ip, asr r0
   15198:	andeq	ip, r1, ip, rrx
   1519c:	andeq	ip, r1, r0, ror #1
   151a0:			; <UNDEFINED> instruction: 0x0002e3bc
   151a4:	andeq	ip, r1, r4, asr #1
   151a8:	andeq	ip, r1, ip, ror r0
   151ac:	strdeq	ip, [r1], -r0
   151b0:			; <UNDEFINED> instruction: 0x0002e3b0
   151b4:	andeq	ip, r1, r8, ror r1
   151b8:	andeq	ip, r1, r4, lsr #2
   151bc:	andeq	ip, r1, r8, lsr #1
   151c0:	andeq	ip, r1, r0, asr #2
   151c4:	andeq	ip, r1, ip, lsl #2
   151c8:	muleq	r1, r0, r0
   151cc:	andeq	ip, r1, ip, asr r1
   151d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151d4:	ldr	r6, [sp, #36]	; 0x24
   151d8:	ldr	r7, [sp, #32]
   151dc:	ldr	r4, [r6]
   151e0:	cmp	r4, r0
   151e4:	addge	r8, r1, r4
   151e8:	bge	15234 <__assert_fail@plt+0x360c>
   151ec:	ldrb	ip, [r1, r4]
   151f0:	add	r8, r1, r4
   151f4:	cmp	ip, #32
   151f8:	cmpne	ip, #9
   151fc:	bne	15234 <__assert_fail@plt+0x360c>
   15200:	add	ip, r4, #1
   15204:	add	lr, r1, ip
   15208:	b	15220 <__assert_fail@plt+0x35f8>
   1520c:	ldrb	r5, [lr], #1
   15210:	add	ip, ip, #1
   15214:	cmp	r5, #9
   15218:	cmpne	r5, #32
   1521c:	bne	15234 <__assert_fail@plt+0x360c>
   15220:	cmp	r0, ip
   15224:	mov	r8, lr
   15228:	mov	r4, ip
   1522c:	bne	1520c <__assert_fail@plt+0x35e4>
   15230:	add	r8, r1, r0
   15234:	str	r4, [r3]
   15238:	ldrb	r5, [r8]
   1523c:	cmp	r5, #34	; 0x22
   15240:	beq	15288 <__assert_fail@plt+0x3660>
   15244:	cmp	r5, #39	; 0x27
   15248:	beq	15288 <__assert_fail@plt+0x3660>
   1524c:	cmp	r5, #34	; 0x22
   15250:	beq	15274 <__assert_fail@plt+0x364c>
   15254:	mov	r9, r1
   15258:	mov	sl, r0
   1525c:	mov	r1, r5
   15260:	mov	r0, r2
   15264:	mov	r8, r2
   15268:	bl	119f4 <strchr@plt>
   1526c:	cmp	r0, #0
   15270:	beq	152c4 <__assert_fail@plt+0x369c>
   15274:	add	r9, r4, #1
   15278:	str	r4, [r7]
   1527c:	mov	r0, r9
   15280:	str	r9, [r6]
   15284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15288:	add	ip, r1, r4
   1528c:	b	152a0 <__assert_fail@plt+0x3678>
   15290:	ldrb	lr, [ip, #1]!
   15294:	cmp	lr, r5
   15298:	beq	152b8 <__assert_fail@plt+0x3690>
   1529c:	mov	r4, r3
   152a0:	add	r3, r4, #1
   152a4:	cmp	r0, r3
   152a8:	bgt	15290 <__assert_fail@plt+0x3668>
   152ac:	ldrb	r5, [r1, r3]
   152b0:	mov	r4, r3
   152b4:	b	1524c <__assert_fail@plt+0x3624>
   152b8:	add	r9, r4, #2
   152bc:	mov	r4, r3
   152c0:	b	15278 <__assert_fail@plt+0x3650>
   152c4:	add	r5, r9, r4
   152c8:	b	152f4 <__assert_fail@plt+0x36cc>
   152cc:	ldrb	r3, [r5, #1]!
   152d0:	and	r2, r3, #253	; 0xfd
   152d4:	cmp	r2, #32
   152d8:	cmpne	r3, #9
   152dc:	mov	r1, r3
   152e0:	beq	15278 <__assert_fail@plt+0x3650>
   152e4:	bl	119f4 <strchr@plt>
   152e8:	cmp	r0, #0
   152ec:	bne	15278 <__assert_fail@plt+0x3650>
   152f0:	mov	r4, r9
   152f4:	add	r9, r4, #1
   152f8:	cmp	sl, r9
   152fc:	mov	r0, r8
   15300:	bgt	152cc <__assert_fail@plt+0x36a4>
   15304:	b	15278 <__assert_fail@plt+0x3650>
   15308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1530c:	sub	sp, sp, #36	; 0x24
   15310:	mov	r9, r3
   15314:	mov	r8, r2
   15318:	mov	sl, r1
   1531c:	mov	r7, r0
   15320:	bl	119dc <strlen@plt>
   15324:	mov	r3, #0
   15328:	str	r3, [r8]
   1532c:	str	r3, [r9]
   15330:	subs	r5, r0, #0
   15334:	ble	154a8 <__assert_fail@plt+0x3880>
   15338:	bl	119ac <__ctype_b_loc@plt>
   1533c:	add	r2, r7, r5
   15340:	ldr	r1, [r0]
   15344:	b	15350 <__assert_fail@plt+0x3728>
   15348:	subs	r5, r5, #1
   1534c:	beq	154a8 <__assert_fail@plt+0x3880>
   15350:	ldrb	r3, [r2, #-1]!
   15354:	lsl	r3, r3, #1
   15358:	ldrh	r3, [r1, r3]
   1535c:	ands	r3, r3, #8192	; 0x2000
   15360:	bne	15348 <__assert_fail@plt+0x3720>
   15364:	mov	r2, #1
   15368:	str	r3, [sp, #28]
   1536c:	str	r2, [r8]
   15370:	add	fp, sp, #28
   15374:	b	15384 <__assert_fail@plt+0x375c>
   15378:	ldr	r3, [r8]
   1537c:	add	r3, r3, #1
   15380:	str	r3, [r8]
   15384:	add	r3, sp, #24
   15388:	str	r3, [sp]
   1538c:	str	fp, [sp, #4]
   15390:	add	r3, sp, #20
   15394:	mov	r2, sl
   15398:	mov	r1, r7
   1539c:	mov	r0, r5
   153a0:	bl	151d0 <__assert_fail@plt+0x35a8>
   153a4:	cmp	r0, r5
   153a8:	blt	15378 <__assert_fail@plt+0x3750>
   153ac:	ldr	r0, [r8]
   153b0:	mov	r1, #4
   153b4:	add	r0, r0, #1
   153b8:	bl	17138 <argp_parse@@Base+0x1448>
   153bc:	ldr	r3, [r8]
   153c0:	mov	r6, #0
   153c4:	cmp	r3, r6
   153c8:	str	r6, [sp, #28]
   153cc:	str	r0, [r9]
   153d0:	ble	154cc <__assert_fail@plt+0x38a4>
   153d4:	str	r5, [sp, #12]
   153d8:	b	15444 <__assert_fail@plt+0x381c>
   153dc:	cmp	r2, #39	; 0x27
   153e0:	ldr	r2, [sp, #24]
   153e4:	beq	15498 <__assert_fail@plt+0x3870>
   153e8:	sub	r2, r2, r3
   153ec:	mov	r1, #1
   153f0:	add	r0, r2, #2
   153f4:	add	r4, r2, r1
   153f8:	ldr	r5, [r9]
   153fc:	bl	17138 <argp_parse@@Base+0x1448>
   15400:	ldr	r1, [r9]
   15404:	mov	r2, r4
   15408:	str	r0, [r5, r6, lsl #2]
   1540c:	ldr	r3, [r1, r6, lsl #2]
   15410:	subs	r0, r3, #0
   15414:	beq	154a8 <__assert_fail@plt+0x3880>
   15418:	ldr	r1, [sp, #20]
   1541c:	add	r1, r7, r1
   15420:	bl	11808 <memcpy@plt>
   15424:	ldr	r3, [r9]
   15428:	mov	r2, #0
   1542c:	ldr	r3, [r3, r6, lsl #2]
   15430:	add	r6, r6, #1
   15434:	strb	r2, [r3, r4]
   15438:	ldr	r3, [r8]
   1543c:	cmp	r3, r6
   15440:	ble	154b4 <__assert_fail@plt+0x388c>
   15444:	add	r3, sp, #24
   15448:	str	r3, [sp]
   1544c:	mov	r2, sl
   15450:	add	r3, sp, #20
   15454:	str	fp, [sp, #4]
   15458:	mov	r1, r7
   1545c:	ldr	r0, [sp, #12]
   15460:	bl	151d0 <__assert_fail@plt+0x35a8>
   15464:	ldr	r3, [sp, #20]
   15468:	ldrb	r2, [r7, r3]
   1546c:	cmp	r2, #34	; 0x22
   15470:	bne	153dc <__assert_fail@plt+0x37b4>
   15474:	ldr	r2, [sp, #24]
   15478:	ldrb	r1, [r7, r2]
   1547c:	cmp	r1, #34	; 0x22
   15480:	bne	153e8 <__assert_fail@plt+0x37c0>
   15484:	add	r3, r3, #1
   15488:	sub	r2, r2, #1
   1548c:	str	r3, [sp, #20]
   15490:	str	r2, [sp, #24]
   15494:	b	153e8 <__assert_fail@plt+0x37c0>
   15498:	ldrb	r1, [r7, r2]
   1549c:	cmp	r1, #39	; 0x27
   154a0:	bne	153e8 <__assert_fail@plt+0x37c0>
   154a4:	b	15484 <__assert_fail@plt+0x385c>
   154a8:	mov	r0, #1
   154ac:	add	sp, sp, #36	; 0x24
   154b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b4:	ldr	r3, [r9]
   154b8:	lsl	r6, r6, #2
   154bc:	mov	r0, #0
   154c0:	str	r0, [r3, r6]
   154c4:	add	sp, sp, #36	; 0x24
   154c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154cc:	mov	r3, r0
   154d0:	b	154bc <__assert_fail@plt+0x3894>
   154d4:	push	{r4, r5, r6, lr}
   154d8:	subs	r4, r0, #1
   154dc:	mov	r6, r1
   154e0:	bmi	154fc <__assert_fail@plt+0x38d4>
   154e4:	add	r5, r1, r0, lsl #2
   154e8:	sub	r4, r4, #1
   154ec:	ldr	r0, [r5, #-4]!
   154f0:	bl	16b88 <argp_parse@@Base+0xe98>
   154f4:	cmn	r4, #1
   154f8:	bne	154e8 <__assert_fail@plt+0x38c0>
   154fc:	mov	r0, r6
   15500:	bl	16b88 <argp_parse@@Base+0xe98>
   15504:	mov	r0, #1
   15508:	pop	{r4, r5, r6, pc}
   1550c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15510:	subs	sl, r2, #0
   15514:	beq	155a0 <__assert_fail@plt+0x3978>
   15518:	mov	r8, r0
   1551c:	mov	r0, #1
   15520:	mov	r7, r1
   15524:	bl	17180 <argp_parse@@Base+0x1490>
   15528:	subs	r4, r0, #0
   1552c:	beq	155a0 <__assert_fail@plt+0x3978>
   15530:	mov	r6, #0
   15534:	cmp	r8, #0
   15538:	strb	r6, [r4]
   1553c:	ble	155b8 <__assert_fail@plt+0x3990>
   15540:	ldr	r9, [pc, #156]	; 155e4 <__assert_fail@plt+0x39bc>
   15544:	sub	r7, r7, #4
   15548:	mov	r5, r6
   1554c:	b	1557c <__assert_fail@plt+0x3954>
   15550:	cmp	r5, #0
   15554:	add	r5, r5, #1
   15558:	beq	15568 <__assert_fail@plt+0x3940>
   1555c:	bl	119dc <strlen@plt>
   15560:	ldrh	r3, [r9]
   15564:	strh	r3, [r4, r0]
   15568:	ldr	r1, [r7, #4]!
   1556c:	mov	r0, r4
   15570:	bl	11904 <strcat@plt>
   15574:	cmp	r8, r5
   15578:	beq	155a8 <__assert_fail@plt+0x3980>
   1557c:	ldr	r0, [r7, #4]
   15580:	bl	119dc <strlen@plt>
   15584:	add	r0, r0, #2
   15588:	add	r6, r6, r0
   1558c:	mov	r1, r6
   15590:	mov	r0, r4
   15594:	bl	171ac <argp_parse@@Base+0x14bc>
   15598:	subs	r4, r0, #0
   1559c:	bne	15550 <__assert_fail@plt+0x3928>
   155a0:	mov	r0, #1
   155a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155a8:	ldrb	r3, [r4]
   155ac:	cmp	r3, #0
   155b0:	movne	r5, #0
   155b4:	bne	155c8 <__assert_fail@plt+0x39a0>
   155b8:	mov	r0, #0
   155bc:	str	r4, [sl]
   155c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155c4:	strb	r5, [r4, r0]
   155c8:	mov	r0, r4
   155cc:	bl	119dc <strlen@plt>
   155d0:	sub	r0, r0, #1
   155d4:	ldrb	r3, [r4, r0]
   155d8:	cmp	r3, #32
   155dc:	beq	155c4 <__assert_fail@plt+0x399c>
   155e0:	b	155b8 <__assert_fail@plt+0x3990>
   155e4:	andeq	ip, r1, ip, lsl #10
   155e8:	push	{r4, lr}
   155ec:	mov	r0, #0
   155f0:	bl	11880 <alarm@plt>
   155f4:	mov	r1, #0
   155f8:	mov	r4, r0
   155fc:	mov	r0, #14
   15600:	bl	11814 <signal@plt>
   15604:	cmp	r4, #0
   15608:	popne	{r4, pc}
   1560c:	mov	r1, r4
   15610:	ldr	r2, [pc, #8]	; 15620 <__assert_fail@plt+0x39f8>
   15614:	mov	r0, #1
   15618:	pop	{r4, lr}
   1561c:	b	1191c <error@plt>
   15620:	andeq	ip, r1, r0, lsl r5
   15624:	push	{r4, r5, r6, r7, r8, lr}
   15628:	mov	r5, r1
   1562c:	mov	r6, r2
   15630:	mov	r7, r0
   15634:	bl	119b8 <getpid@plt>
   15638:	mov	r8, r0
   1563c:	bl	11acc <fork@plt>
   15640:	cmn	r0, #1
   15644:	mov	r4, r0
   15648:	beq	156d0 <__assert_fail@plt+0x3aa8>
   1564c:	cmp	r0, #0
   15650:	bne	15698 <__assert_fail@plt+0x3a70>
   15654:	bl	119e8 <setsid@plt>
   15658:	cmn	r0, #1
   1565c:	beq	156d0 <__assert_fail@plt+0x3aa8>
   15660:	mov	r1, #1
   15664:	mov	r0, r1
   15668:	bl	11814 <signal@plt>
   1566c:	bl	11acc <fork@plt>
   15670:	cmn	r0, #1
   15674:	popeq	{r4, r5, r6, r7, r8, pc}
   15678:	cmp	r0, #0
   1567c:	bne	156b8 <__assert_fail@plt+0x3a90>
   15680:	cmp	r7, #0
   15684:	beq	156c0 <__assert_fail@plt+0x3a98>
   15688:	cmp	r5, #0
   1568c:	beq	156d8 <__assert_fail@plt+0x3ab0>
   15690:	mov	r0, r8
   15694:	pop	{r4, r5, r6, r7, r8, pc}
   15698:	cmp	r6, #0
   1569c:	ble	156b8 <__assert_fail@plt+0x3a90>
   156a0:	ldr	r1, [pc, #188]	; 15764 <__assert_fail@plt+0x3b3c>
   156a4:	mov	r0, #14
   156a8:	bl	11814 <signal@plt>
   156ac:	mov	r0, r6
   156b0:	bl	11880 <alarm@plt>
   156b4:	bl	11784 <pause@plt>
   156b8:	mov	r0, #0
   156bc:	bl	117fc <_exit@plt>
   156c0:	ldr	r0, [pc, #160]	; 15768 <__assert_fail@plt+0x3b40>
   156c4:	bl	118bc <chdir@plt>
   156c8:	cmp	r0, #0
   156cc:	bge	15688 <__assert_fail@plt+0x3a60>
   156d0:	mvn	r0, #0
   156d4:	pop	{r4, r5, r6, r7, r8, pc}
   156d8:	mov	r0, #4
   156dc:	bl	1188c <sysconf@plt>
   156e0:	cmn	r0, #1
   156e4:	mov	r4, r0
   156e8:	beq	1575c <__assert_fail@plt+0x3b34>
   156ec:	cmp	r0, #0
   156f0:	ble	15708 <__assert_fail@plt+0x3ae0>
   156f4:	mov	r0, r5
   156f8:	add	r5, r5, #1
   156fc:	bl	11bf8 <close@plt>
   15700:	cmp	r5, r4
   15704:	blt	156f4 <__assert_fail@plt+0x3acc>
   15708:	mov	r2, #0
   1570c:	mov	r1, #2
   15710:	ldr	r0, [pc, #84]	; 1576c <__assert_fail@plt+0x3b44>
   15714:	bl	11934 <open64@plt>
   15718:	cmn	r0, #1
   1571c:	mov	r4, r0
   15720:	beq	15690 <__assert_fail@plt+0x3a68>
   15724:	mov	r1, #0
   15728:	bl	11898 <dup2@plt>
   1572c:	mov	r1, #1
   15730:	mov	r0, r4
   15734:	bl	11898 <dup2@plt>
   15738:	mov	r1, #2
   1573c:	mov	r0, r4
   15740:	bl	11898 <dup2@plt>
   15744:	cmp	r4, #2
   15748:	ble	15690 <__assert_fail@plt+0x3a68>
   1574c:	mov	r0, r4
   15750:	bl	11bf8 <close@plt>
   15754:	mov	r0, r8
   15758:	pop	{r4, r5, r6, r7, r8, pc}
   1575c:	mov	r4, #64	; 0x40
   15760:	b	156f4 <__assert_fail@plt+0x3acc>
   15764:	andeq	r5, r1, r8, ror #11
   15768:	andeq	ip, r1, ip, lsr #10
   1576c:	andeq	ip, r1, r0, lsr r5

00015770 <daemon@@Base>:
   15770:	push	{r4, lr}
   15774:	mov	r2, #0
   15778:	bl	15624 <__assert_fail@plt+0x39fc>
   1577c:	cmn	r0, #1
   15780:	movne	r0, #0
   15784:	moveq	r0, #1
   15788:	rsb	r0, r0, #0
   1578c:	pop	{r4, pc}
   15790:	ldr	r3, [r0]
   15794:	push	{r4, r5, r6, lr}
   15798:	cmp	r3, #0
   1579c:	ldr	r5, [r0, #16]
   157a0:	beq	15808 <daemon@@Base+0x98>
   157a4:	ldr	r0, [r1, #8]
   157a8:	mov	r2, #0
   157ac:	add	r0, r0, #1
   157b0:	str	r0, [r1, #8]
   157b4:	b	157bc <daemon@@Base+0x4c>
   157b8:	add	r2, r2, #1
   157bc:	add	r3, r3, #24
   157c0:	ldr	r0, [r3, #-20]	; 0xffffffec
   157c4:	cmp	r0, #0
   157c8:	bne	157b8 <daemon@@Base+0x48>
   157cc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   157d0:	cmp	r0, #0
   157d4:	bne	157b8 <daemon@@Base+0x48>
   157d8:	ldr	r0, [r3, #-8]
   157dc:	cmp	r0, #0
   157e0:	bne	157b8 <daemon@@Base+0x48>
   157e4:	ldr	r0, [r3, #-4]
   157e8:	cmp	r0, #0
   157ec:	bne	157b8 <daemon@@Base+0x48>
   157f0:	ldm	r1, {r0, r3}
   157f4:	add	ip, r2, r2, lsl #1
   157f8:	add	r0, r0, ip
   157fc:	add	r2, r3, r2
   15800:	stm	r1, {r0, r2}
   15804:	b	1581c <daemon@@Base+0xac>
   15808:	ldr	r3, [r0, #4]
   1580c:	cmp	r3, #0
   15810:	ldrne	r3, [r1, #8]
   15814:	addne	r3, r3, #1
   15818:	strne	r3, [r1, #8]
   1581c:	cmp	r5, #0
   15820:	popeq	{r4, r5, r6, pc}
   15824:	ldr	r0, [r5]
   15828:	cmp	r0, #0
   1582c:	popeq	{r4, r5, r6, pc}
   15830:	mov	r4, r1
   15834:	mov	r1, r4
   15838:	bl	15790 <daemon@@Base+0x20>
   1583c:	ldr	r3, [r4, #12]
   15840:	ldr	r0, [r5, #16]!
   15844:	add	r3, r3, #1
   15848:	cmp	r0, #0
   1584c:	str	r3, [r4, #12]
   15850:	bne	15834 <daemon@@Base+0xc4>
   15854:	pop	{r4, r5, r6, pc}
   15858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1585c:	sub	sp, sp, #36	; 0x24
   15860:	ldr	sl, [r0]
   15864:	str	r0, [sp, #12]
   15868:	cmp	sl, #0
   1586c:	str	r1, [sp, #16]
   15870:	str	r2, [sp, #20]
   15874:	mov	r9, r3
   15878:	ldr	r8, [r0, #16]
   1587c:	ldr	r7, [sp, #72]	; 0x48
   15880:	beq	15a4c <daemon@@Base+0x2dc>
   15884:	add	fp, sl, #24
   15888:	str	r8, [sp, #28]
   1588c:	str	r3, [sp, #24]
   15890:	ldr	r4, [fp, #-20]	; 0xffffffec
   15894:	sub	r1, fp, #24
   15898:	cmp	r4, #0
   1589c:	bne	158ac <daemon@@Base+0x13c>
   158a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158a4:	cmp	r3, #0
   158a8:	beq	15a20 <daemon@@Base+0x2b0>
   158ac:	ldr	r3, [fp, #-12]
   158b0:	tst	r3, #4
   158b4:	moveq	sl, r1
   158b8:	moveq	r5, r3
   158bc:	ldrne	r5, [sl, #12]
   158c0:	ands	r5, r5, #8
   158c4:	bne	15a08 <daemon@@Base+0x298>
   158c8:	tst	r3, #8
   158cc:	bne	15948 <daemon@@Base+0x1d8>
   158d0:	sub	r3, r4, #1
   158d4:	cmp	r3, #254	; 0xfe
   158d8:	bhi	15948 <daemon@@Base+0x1d8>
   158dc:	bl	119ac <__ctype_b_loc@plt>
   158e0:	lsl	r3, r4, #1
   158e4:	ldr	r1, [r0]
   158e8:	ldrh	r3, [r1, r3]
   158ec:	tst	r3, #16384	; 0x4000
   158f0:	beq	15948 <daemon@@Base+0x1d8>
   158f4:	ldr	r3, [r7, #4]
   158f8:	add	r1, r3, #1
   158fc:	str	r1, [r7, #4]
   15900:	strb	r4, [r3]
   15904:	ldr	r3, [sl, #8]
   15908:	cmp	r3, #0
   1590c:	beq	1593c <daemon@@Base+0x1cc>
   15910:	ldr	r3, [r7, #4]
   15914:	mov	r2, #58	; 0x3a
   15918:	add	r1, r3, #1
   1591c:	str	r1, [r7, #4]
   15920:	strb	r2, [r3]
   15924:	ldr	r3, [sl, #12]
   15928:	tst	r3, #1
   1592c:	ldrne	r3, [r7, #4]
   15930:	addne	r1, r3, #1
   15934:	strne	r1, [r7, #4]
   15938:	strbne	r2, [r3]
   1593c:	ldr	r3, [r7, #4]
   15940:	mov	r2, #0
   15944:	strb	r2, [r3]
   15948:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1594c:	cmp	r4, #0
   15950:	beq	15a08 <daemon@@Base+0x298>
   15954:	ldr	r8, [r7]
   15958:	ldr	r6, [r8, #8]
   1595c:	ldr	r0, [r6]
   15960:	cmp	r0, #0
   15964:	beq	15988 <daemon@@Base+0x218>
   15968:	mov	r9, r6
   1596c:	mov	r1, r4
   15970:	bl	11754 <strcmp@plt>
   15974:	cmp	r0, #0
   15978:	beq	15a10 <daemon@@Base+0x2a0>
   1597c:	ldr	r0, [r9, #16]!
   15980:	cmp	r0, #0
   15984:	bne	1596c <daemon@@Base+0x1fc>
   15988:	ldr	r3, [sl, #8]
   1598c:	ldr	r1, [r7, #8]
   15990:	cmp	r3, #0
   15994:	str	r4, [r1]
   15998:	beq	159ac <daemon@@Base+0x23c>
   1599c:	ldr	r3, [sl, #12]
   159a0:	tst	r3, #1
   159a4:	moveq	r5, #1
   159a8:	movne	r5, #2
   159ac:	str	r5, [r1, #4]
   159b0:	ldr	ip, [fp, #-20]	; 0xffffffec
   159b4:	mov	r3, #0
   159b8:	cmp	ip, r3
   159bc:	str	r3, [r1, #8]
   159c0:	ldr	r2, [sp, #24]
   159c4:	ldr	r3, [r8, #48]	; 0x30
   159c8:	ldreq	ip, [sl, #4]
   159cc:	sub	r3, r2, r3
   159d0:	bic	ip, ip, #-16777216	; 0xff000000
   159d4:	asr	r3, r3, #2
   159d8:	add	lr, r1, #16
   159dc:	rsb	r0, r3, r3, lsl #3
   159e0:	add	r0, r0, r0, lsl #6
   159e4:	add	r0, r3, r0, lsl #3
   159e8:	rsb	r0, r0, r0, lsl #15
   159ec:	add	r3, r3, r0, lsl #3
   159f0:	add	r3, r3, #1
   159f4:	add	r3, ip, r3, lsl #24
   159f8:	str	r3, [r1, #12]
   159fc:	mov	r3, #0
   15a00:	str	lr, [r7, #8]
   15a04:	str	r3, [r1, #16]
   15a08:	add	fp, fp, #24
   15a0c:	b	15890 <daemon@@Base+0x120>
   15a10:	sub	r6, r9, r6
   15a14:	cmn	r6, #15
   15a18:	bge	15a08 <daemon@@Base+0x298>
   15a1c:	b	15988 <daemon@@Base+0x218>
   15a20:	ldr	r3, [fp, #-8]
   15a24:	cmp	r3, #0
   15a28:	bne	158ac <daemon@@Base+0x13c>
   15a2c:	ldr	r3, [fp, #-4]
   15a30:	cmp	r3, #0
   15a34:	bne	158ac <daemon@@Base+0x13c>
   15a38:	ldr	r3, [sp, #12]
   15a3c:	ldr	r8, [sp, #28]
   15a40:	ldr	r9, [sp, #24]
   15a44:	ldr	r3, [r3, #4]
   15a48:	b	15a64 <daemon@@Base+0x2f4>
   15a4c:	ldr	r3, [sp, #12]
   15a50:	ldr	r3, [r3, #4]
   15a54:	cmp	r3, #0
   15a58:	moveq	r0, r9
   15a5c:	moveq	r9, r3
   15a60:	beq	15ad4 <daemon@@Base+0x364>
   15a64:	ldr	r2, [r7, #4]
   15a68:	ldr	r1, [sp, #12]
   15a6c:	str	r3, [r9]
   15a70:	cmp	r8, #0
   15a74:	stmib	r9, {r1, r2}
   15a78:	ldr	r2, [sp, #16]
   15a7c:	mov	r3, #0
   15a80:	str	r2, [r9, #16]
   15a84:	ldr	r2, [sp, #20]
   15a88:	str	r3, [r9, #12]
   15a8c:	str	r2, [r9, #20]
   15a90:	str	r3, [r9, #24]
   15a94:	str	r3, [r9, #32]
   15a98:	str	r3, [r9, #28]
   15a9c:	beq	15ad0 <daemon@@Base+0x360>
   15aa0:	ldr	r2, [r8]
   15aa4:	cmp	r2, r3
   15aa8:	beq	15b1c <daemon@@Base+0x3ac>
   15aac:	add	r3, r3, #1
   15ab0:	ldr	r2, [r8, r3, lsl #4]
   15ab4:	cmp	r2, #0
   15ab8:	bne	15aac <daemon@@Base+0x33c>
   15abc:	lsl	r3, r3, #2
   15ac0:	ldr	r2, [r7, #12]
   15ac4:	add	r3, r2, r3
   15ac8:	str	r2, [r9, #28]
   15acc:	str	r3, [r7, #12]
   15ad0:	add	r0, r9, #36	; 0x24
   15ad4:	cmp	r8, #0
   15ad8:	beq	15b14 <daemon@@Base+0x3a4>
   15adc:	ldr	r1, [r8]
   15ae0:	cmp	r1, #0
   15ae4:	beq	15b14 <daemon@@Base+0x3a4>
   15ae8:	mov	r2, #0
   15aec:	add	r4, r2, #1
   15af0:	mov	r3, r0
   15af4:	str	r7, [sp]
   15af8:	mov	r0, r1
   15afc:	mov	r1, r9
   15b00:	bl	15858 <daemon@@Base+0xe8>
   15b04:	ldr	r1, [r8, r4, lsl #4]
   15b08:	mov	r2, r4
   15b0c:	cmp	r1, #0
   15b10:	bne	15aec <daemon@@Base+0x37c>
   15b14:	add	sp, sp, #36	; 0x24
   15b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b1c:	mov	r3, r2
   15b20:	b	15ac0 <daemon@@Base+0x350>
   15b24:	cmp	r0, #86	; 0x56
   15b28:	beq	15b34 <daemon@@Base+0x3c4>
   15b2c:	mov	r0, #7
   15b30:	bx	lr
   15b34:	ldr	r3, [pc, #104]	; 15ba4 <daemon@@Base+0x434>
   15b38:	push	{r4, lr}
   15b3c:	mov	r4, r2
   15b40:	ldr	r3, [r3]
   15b44:	cmp	r3, #0
   15b48:	beq	15b6c <daemon@@Base+0x3fc>
   15b4c:	mov	r1, r2
   15b50:	ldr	r0, [r2, #48]	; 0x30
   15b54:	blx	r3
   15b58:	ldr	r0, [r4, #16]
   15b5c:	ands	r0, r0, #32
   15b60:	beq	15ba0 <daemon@@Base+0x430>
   15b64:	mov	r0, #0
   15b68:	pop	{r4, pc}
   15b6c:	ldr	r3, [pc, #52]	; 15ba8 <daemon@@Base+0x438>
   15b70:	ldr	r2, [r3]
   15b74:	cmp	r2, #0
   15b78:	beq	15b8c <daemon@@Base+0x41c>
   15b7c:	ldr	r1, [pc, #40]	; 15bac <daemon@@Base+0x43c>
   15b80:	ldr	r0, [r4, #48]	; 0x30
   15b84:	bl	11a0c <fprintf@plt>
   15b88:	b	15b58 <daemon@@Base+0x3e8>
   15b8c:	ldr	r2, [pc, #28]	; 15bb0 <daemon@@Base+0x440>
   15b90:	ldr	r1, [pc, #28]	; 15bb4 <daemon@@Base+0x444>
   15b94:	mov	r0, r4
   15b98:	bl	1a404 <argp_error@@Base>
   15b9c:	b	15b58 <daemon@@Base+0x3e8>
   15ba0:	bl	119c4 <exit@plt>
   15ba4:			; <UNDEFINED> instruction: 0x0002e4b0
   15ba8:	andeq	lr, r2, r8, lsl r6
   15bac:	andeq	ip, r1, r8, ror #15
   15bb0:	andeq	ip, r1, r4, asr r6
   15bb4:	andeq	fp, r1, ip, lsl #27
   15bb8:	cmn	r0, #3
   15bbc:	push	{r4, r5, lr}
   15bc0:	mov	r4, r2
   15bc4:	sub	sp, sp, #12
   15bc8:	beq	15cac <daemon@@Base+0x53c>
   15bcc:	ble	15c3c <daemon@@Base+0x4cc>
   15bd0:	cmn	r0, #2
   15bd4:	beq	15bfc <daemon@@Base+0x48c>
   15bd8:	cmp	r0, #63	; 0x3f
   15bdc:	bne	15ca0 <daemon@@Base+0x530>
   15be0:	mov	r0, r4
   15be4:	ldr	r2, [pc, #236]	; 15cd8 <daemon@@Base+0x568>
   15be8:	ldr	r1, [r4, #48]	; 0x30
   15bec:	bl	1a354 <argp_state_help@@Base>
   15bf0:	mov	r0, #0
   15bf4:	add	sp, sp, #12
   15bf8:	pop	{r4, r5, pc}
   15bfc:	ldr	r3, [pc, #216]	; 15cdc <daemon@@Base+0x56c>
   15c00:	mov	r0, r1
   15c04:	str	r1, [sp, #4]
   15c08:	str	r1, [r3]
   15c0c:	bl	16adc <argp_parse@@Base+0xdec>
   15c10:	ldr	r3, [r4, #16]
   15c14:	ldr	r2, [pc, #196]	; 15ce0 <daemon@@Base+0x570>
   15c18:	and	r3, r3, #3
   15c1c:	cmp	r3, #1
   15c20:	ldr	r1, [sp, #4]
   15c24:	str	r0, [r4, #40]	; 0x28
   15c28:	str	r0, [r2]
   15c2c:	beq	15cc8 <daemon@@Base+0x558>
   15c30:	mov	r0, #0
   15c34:	add	sp, sp, #12
   15c38:	pop	{r4, r5, pc}
   15c3c:	cmn	r0, #4
   15c40:	bne	15ca0 <daemon@@Base+0x530>
   15c44:	cmp	r1, #0
   15c48:	ldr	r0, [pc, #148]	; 15ce4 <daemon@@Base+0x574>
   15c4c:	mov	r2, #10
   15c50:	movne	r0, r1
   15c54:	mov	r1, #0
   15c58:	bl	11760 <strtol@plt>
   15c5c:	ldr	r4, [pc, #132]	; 15ce8 <daemon@@Base+0x578>
   15c60:	str	r0, [r4]
   15c64:	ldr	r3, [r4]
   15c68:	cmp	r3, #0
   15c6c:	sub	r3, r3, #1
   15c70:	str	r3, [r4]
   15c74:	ble	15c30 <daemon@@Base+0x4c0>
   15c78:	mov	r5, #1
   15c7c:	mov	r0, r5
   15c80:	bl	11850 <sleep@plt>
   15c84:	ldr	r3, [r4]
   15c88:	cmp	r3, #0
   15c8c:	sub	r3, r3, #1
   15c90:	str	r3, [r4]
   15c94:	bgt	15c7c <daemon@@Base+0x50c>
   15c98:	mov	r0, #0
   15c9c:	b	15c34 <daemon@@Base+0x4c4>
   15ca0:	mov	r0, #7
   15ca4:	add	sp, sp, #12
   15ca8:	pop	{r4, r5, pc}
   15cac:	mov	r0, r4
   15cb0:	ldr	r2, [pc, #52]	; 15cec <daemon@@Base+0x57c>
   15cb4:	ldr	r1, [r4, #48]	; 0x30
   15cb8:	bl	1a354 <argp_state_help@@Base>
   15cbc:	mov	r0, #0
   15cc0:	add	sp, sp, #12
   15cc4:	pop	{r4, r5, pc}
   15cc8:	ldr	r3, [r4, #8]
   15ccc:	mov	r0, #0
   15cd0:	str	r1, [r3]
   15cd4:	b	15bf4 <daemon@@Base+0x484>
   15cd8:	andeq	r0, r0, sl, ror r2
   15cdc:	andeq	lr, r2, ip, lsr #7
   15ce0:	andeq	lr, r2, r8, lsr #7
   15ce4:	andeq	ip, r1, r8, ror r6
   15ce8:	andeq	lr, r2, ip, lsr #9
   15cec:	andeq	r0, r0, r1, lsl #4

00015cf0 <argp_parse@@Base>:
   15cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf4:	add	fp, sp, #32
   15cf8:	tst	r3, #1
   15cfc:	sub	sp, sp, #228	; 0xe4
   15d00:	mov	r6, r3
   15d04:	mov	r7, r0
   15d08:	str	r1, [fp, #-240]	; 0xffffff10
   15d0c:	str	r2, [fp, #-232]	; 0xffffff18
   15d10:	bne	15d3c <argp_parse@@Base+0x4c>
   15d14:	ldr	r3, [pc, #3260]	; 169d8 <argp_parse@@Base+0xce8>
   15d18:	ldr	r4, [pc, #3260]	; 169dc <argp_parse@@Base+0xcec>
   15d1c:	ldr	r2, [r3]
   15d20:	cmp	r2, #0
   15d24:	ldreq	r2, [fp, #-232]	; 0xffffff18
   15d28:	ldreq	r2, [r2]
   15d2c:	streq	r2, [r3]
   15d30:	ldr	r3, [r4]
   15d34:	cmp	r3, #0
   15d38:	beq	163dc <argp_parse@@Base+0x6ec>
   15d3c:	ands	r3, r6, #16
   15d40:	beq	162e4 <argp_parse@@Base+0x5f4>
   15d44:	sub	r4, fp, #196	; 0xc4
   15d48:	mov	r0, r4
   15d4c:	mov	r2, #36	; 0x24
   15d50:	mov	r1, #0
   15d54:	bl	11a54 <memset@plt>
   15d58:	ands	r3, r6, #4
   15d5c:	str	r3, [fp, #-244]	; 0xffffff0c
   15d60:	mov	r3, #0
   15d64:	moveq	r0, #1
   15d68:	movne	r0, #0
   15d6c:	cmp	r7, r3
   15d70:	str	r3, [fp, #-224]	; 0xffffff20
   15d74:	str	r3, [fp, #-220]	; 0xffffff24
   15d78:	str	r3, [fp, #-216]	; 0xffffff28
   15d7c:	str	r0, [fp, #-228]	; 0xffffff1c
   15d80:	beq	161e8 <argp_parse@@Base+0x4f8>
   15d84:	mov	r0, r7
   15d88:	sub	r1, fp, #228	; 0xe4
   15d8c:	bl	15790 <daemon@@Base+0x20>
   15d90:	ldr	r5, [fp, #-220]	; 0xffffff24
   15d94:	ldr	r9, [fp, #-216]	; 0xffffff28
   15d98:	add	r5, r5, #1
   15d9c:	ldr	r3, [fp, #-224]	; 0xffffff20
   15da0:	add	r5, r5, r5, lsl #3
   15da4:	lsl	r2, r9, #2
   15da8:	lsl	r5, r5, #2
   15dac:	add	r3, r3, #1
   15db0:	add	sl, r2, r5
   15db4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   15db8:	add	r9, sl, r3, lsl #4
   15dbc:	str	r2, [fp, #-236]	; 0xffffff14
   15dc0:	add	r0, r9, r0
   15dc4:	add	r0, r0, #1
   15dc8:	bl	17180 <argp_parse@@Base+0x1490>
   15dcc:	cmp	r0, #0
   15dd0:	mov	r8, r0
   15dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   15dd8:	moveq	r5, #12
   15ddc:	beq	161dc <argp_parse@@Base+0x4ec>
   15de0:	mov	r3, #1
   15de4:	str	r3, [fp, #-196]	; 0xffffff3c
   15de8:	str	r3, [fp, #-192]	; 0xffffff40
   15dec:	ldm	r4!, {r0, r1, r2, r3}
   15df0:	sub	ip, fp, #148	; 0x94
   15df4:	add	r5, r8, r5
   15df8:	str	r5, [fp, #-104]	; 0xffffff98
   15dfc:	stmia	ip!, {r0, r1, r2, r3}
   15e00:	add	r3, r8, sl
   15e04:	mov	lr, r3
   15e08:	ldm	r4!, {r0, r1, r2, r3}
   15e0c:	add	sl, r8, r9
   15e10:	str	lr, [fp, #-248]	; 0xffffff08
   15e14:	str	lr, [fp, #-152]	; 0xffffff68
   15e18:	ldr	lr, [r4]
   15e1c:	stmia	ip!, {r0, r1, r2, r3}
   15e20:	mov	r0, r5
   15e24:	ldr	r2, [fp, #-236]	; 0xffffff14
   15e28:	mov	r1, #0
   15e2c:	str	lr, [ip]
   15e30:	str	r8, [fp, #-112]	; 0xffffff90
   15e34:	str	sl, [fp, #-156]	; 0xffffff64
   15e38:	bl	11a54 <memset@plt>
   15e3c:	ldr	lr, [fp, #-248]	; 0xffffff08
   15e40:	sub	r4, fp, #160	; 0xa0
   15e44:	tst	r6, #8
   15e48:	str	lr, [fp, #-204]	; 0xffffff34
   15e4c:	str	sl, [fp, #-208]	; 0xffffff30
   15e50:	str	r5, [fp, #-200]	; 0xffffff38
   15e54:	str	r4, [fp, #-212]	; 0xffffff2c
   15e58:	bne	161fc <argp_parse@@Base+0x50c>
   15e5c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   15e60:	cmp	r3, #0
   15e64:	addne	r3, sl, #1
   15e68:	movne	r2, #43	; 0x2b
   15e6c:	strbne	r2, [sl]
   15e70:	movne	sl, r3
   15e74:	strne	r3, [fp, #-208]	; 0xffffff30
   15e78:	mov	r2, #0
   15e7c:	strb	r2, [sl]
   15e80:	ldr	r3, [fp, #-204]	; 0xffffff34
   15e84:	cmp	r7, r2
   15e88:	str	r2, [r3]
   15e8c:	str	r7, [fp, #-160]	; 0xffffff60
   15e90:	beq	163a4 <argp_parse@@Base+0x6b4>
   15e94:	sub	r1, fp, #212	; 0xd4
   15e98:	mov	r0, r7
   15e9c:	str	r1, [sp]
   15ea0:	ldr	r3, [fp, #-112]	; 0xffffff90
   15ea4:	mov	r1, r2
   15ea8:	bl	15858 <daemon@@Base+0xe8>
   15eac:	ldr	r7, [fp, #-160]	; 0xffffff60
   15eb0:	ldr	r5, [fp, #-112]	; 0xffffff90
   15eb4:	mov	r8, r0
   15eb8:	str	r0, [fp, #-108]	; 0xffffff94
   15ebc:	mov	r2, #56	; 0x38
   15ec0:	mov	r1, #0
   15ec4:	sub	r0, fp, #96	; 0x60
   15ec8:	bl	11a54 <memset@plt>
   15ecc:	ldr	r2, [pc, #2828]	; 169e0 <argp_parse@@Base+0xcf0>
   15ed0:	ldr	r3, [pc, #2828]	; 169e4 <argp_parse@@Base+0xcf4>
   15ed4:	ldr	r0, [fp, #-240]	; 0xffffff10
   15ed8:	ldr	r1, [r2]
   15edc:	str	r0, [fp, #-92]	; 0xffffffa4
   15ee0:	ldr	r2, [r3]
   15ee4:	ldr	r0, [fp, #-232]	; 0xffffff18
   15ee8:	mov	r3, #1
   15eec:	cmp	r5, r8
   15ef0:	str	r7, [fp, #-96]	; 0xffffffa0
   15ef4:	str	r0, [fp, #-88]	; 0xffffffa8
   15ef8:	str	r6, [fp, #-80]	; 0xffffffb0
   15efc:	str	r4, [fp, #-44]	; 0xffffffd4
   15f00:	str	r1, [fp, #-52]	; 0xffffffcc
   15f04:	str	r2, [fp, #-48]	; 0xffffffd0
   15f08:	str	r3, [fp, #-100]	; 0xffffff9c
   15f0c:	bcc	16210 <argp_parse@@Base+0x520>
   15f10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15f14:	tst	r3, #2
   15f18:	bne	163b4 <argp_parse@@Base+0x6c4>
   15f1c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15f20:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15f24:	mov	r2, #1
   15f28:	str	r2, [fp, #-144]	; 0xffffff70
   15f2c:	ldr	r2, [fp, #-232]	; 0xffffff18
   15f30:	cmp	r2, r3
   15f34:	beq	168b4 <argp_parse@@Base+0xbc4>
   15f38:	ldr	r3, [pc, #2716]	; 169dc <argp_parse@@Base+0xcec>
   15f3c:	ldr	r3, [r3]
   15f40:	str	r3, [fp, #-56]	; 0xffffffc8
   15f44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f48:	ldr	r5, [fp, #-84]	; 0xffffffac
   15f4c:	ldr	sl, [pc, #2708]	; 169e8 <argp_parse@@Base+0xcf8>
   15f50:	mov	r0, r4
   15f54:	mov	r6, #0
   15f58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15f5c:	cmp	r3, #0
   15f60:	beq	163f0 <argp_parse@@Base+0x700>
   15f64:	cmp	r3, r5
   15f68:	strgt	r6, [fp, #-72]	; 0xffffffb8
   15f6c:	bgt	163f0 <argp_parse@@Base+0x700>
   15f70:	cmp	r5, r0
   15f74:	blt	1678c <argp_parse@@Base+0xa9c>
   15f78:	cmp	r5, r0
   15f7c:	bne	16798 <argp_parse@@Base+0xaa8>
   15f80:	ldr	r3, [fp, #-112]	; 0xffffff90
   15f84:	ldr	ip, [fp, #-108]	; 0xffffff94
   15f88:	cmp	r3, ip
   15f8c:	bcs	1697c <argp_parse@@Base+0xc8c>
   15f90:	mov	r5, #0
   15f94:	add	r4, r3, #36	; 0x24
   15f98:	mov	r7, r5
   15f9c:	ldr	r6, [pc, #2632]	; 169ec <argp_parse@@Base+0xcfc>
   15fa0:	mov	r0, r5
   15fa4:	b	15fec <argp_parse@@Base+0x2fc>
   15fa8:	ldr	ip, [r4, #-4]
   15fac:	str	ip, [fp, #-60]	; 0xffffffc4
   15fb0:	ldr	ip, [r4, #-12]
   15fb4:	str	ip, [fp, #-68]	; 0xffffffbc
   15fb8:	ldr	ip, [r4, #-8]
   15fbc:	str	r3, [fp, #-76]	; 0xffffffb4
   15fc0:	str	ip, [fp, #-64]	; 0xffffffc0
   15fc4:	blx	r5
   15fc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15fcc:	str	r3, [r4, #-4]
   15fd0:	ldr	ip, [fp, #-108]	; 0xffffff94
   15fd4:	cmp	ip, r4
   15fd8:	bls	16924 <argp_parse@@Base+0xc34>
   15fdc:	cmp	r0, #7
   15fe0:	cmpne	r0, #0
   15fe4:	bne	16900 <argp_parse@@Base+0xc10>
   15fe8:	add	r4, r4, #36	; 0x24
   15fec:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15ff0:	cmp	r3, #0
   15ff4:	bne	15fd4 <argp_parse@@Base+0x2e4>
   15ff8:	ldr	r5, [r4, #-36]	; 0xffffffdc
   15ffc:	sub	r2, fp, #96	; 0x60
   16000:	cmp	r5, #0
   16004:	mov	r1, r7
   16008:	mov	r0, r6
   1600c:	bne	15fa8 <argp_parse@@Base+0x2b8>
   16010:	cmp	ip, r4
   16014:	mov	r0, #7
   16018:	bhi	15fe8 <argp_parse@@Base+0x2f8>
   1601c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16020:	sub	r4, ip, #36	; 0x24
   16024:	cmp	r4, r3
   16028:	movcs	r5, #7
   1602c:	bcc	160b4 <argp_parse@@Base+0x3c4>
   16030:	cmp	r5, #7
   16034:	cmpne	r5, #0
   16038:	bne	16914 <argp_parse@@Base+0xc24>
   1603c:	sub	r4, r4, #36	; 0x24
   16040:	mov	r7, #0
   16044:	ldr	r6, [pc, #2468]	; 169f0 <argp_parse@@Base+0xd00>
   16048:	b	16094 <argp_parse@@Base+0x3a4>
   1604c:	ldr	r3, [r4, #68]	; 0x44
   16050:	ldr	ip, [r4, #48]	; 0x30
   16054:	str	r3, [fp, #-60]	; 0xffffffc4
   16058:	ldr	r3, [r4, #60]	; 0x3c
   1605c:	str	r3, [fp, #-68]	; 0xffffffbc
   16060:	ldr	r3, [r4, #64]	; 0x40
   16064:	str	ip, [fp, #-76]	; 0xffffffb4
   16068:	str	r3, [fp, #-64]	; 0xffffffc0
   1606c:	blx	r5
   16070:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16074:	str	r3, [r4, #68]	; 0x44
   16078:	ldr	r3, [fp, #-112]	; 0xffffff90
   1607c:	cmp	r4, r3
   16080:	bcc	16974 <argp_parse@@Base+0xc84>
   16084:	cmp	r0, #7
   16088:	cmpne	r0, #0
   1608c:	bne	168e4 <argp_parse@@Base+0xbf4>
   16090:	sub	r4, r4, #36	; 0x24
   16094:	ldr	r5, [r4, #36]	; 0x24
   16098:	sub	r2, fp, #96	; 0x60
   1609c:	cmp	r5, #0
   160a0:	mov	r1, r7
   160a4:	mov	r0, r6
   160a8:	bne	1604c <argp_parse@@Base+0x35c>
   160ac:	cmp	r4, r3
   160b0:	bcs	16090 <argp_parse@@Base+0x3a0>
   160b4:	ldr	r2, [fp, #4]
   160b8:	cmp	r2, #0
   160bc:	beq	160d8 <argp_parse@@Base+0x3e8>
   160c0:	mov	r5, #0
   160c4:	ldr	r1, [fp, #4]
   160c8:	ldr	r2, [fp, #-84]	; 0xffffffac
   160cc:	str	r2, [r1]
   160d0:	cmp	r5, #0
   160d4:	bne	168f4 <argp_parse@@Base+0xc04>
   160d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   160dc:	b	167b0 <argp_parse@@Base+0xac0>
   160e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   160e4:	mov	r5, r0
   160e8:	ldr	ip, [fp, #-108]	; 0xffffff94
   160ec:	cmp	ip, r3
   160f0:	bls	168ac <argp_parse@@Base+0xbbc>
   160f4:	ldr	r7, [pc, #2296]	; 169f4 <argp_parse@@Base+0xd04>
   160f8:	add	r4, r3, #36	; 0x24
   160fc:	mov	r8, #0
   16100:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16104:	sub	r2, fp, #96	; 0x60
   16108:	cmp	r3, #0
   1610c:	mov	r1, r8
   16110:	mov	r0, r7
   16114:	mov	r6, r4
   16118:	beq	1614c <argp_parse@@Base+0x45c>
   1611c:	ldr	ip, [r4, #-4]
   16120:	ldr	lr, [r4, #-24]	; 0xffffffe8
   16124:	str	ip, [fp, #-60]	; 0xffffffc4
   16128:	ldr	ip, [r4, #-12]
   1612c:	str	ip, [fp, #-68]	; 0xffffffbc
   16130:	ldr	ip, [r4, #-8]
   16134:	str	lr, [fp, #-76]	; 0xffffffb4
   16138:	str	ip, [fp, #-64]	; 0xffffffc0
   1613c:	blx	r3
   16140:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16144:	str	r3, [r4, #-4]
   16148:	ldr	ip, [fp, #-108]	; 0xffffff94
   1614c:	cmp	ip, r6
   16150:	add	r4, r4, #36	; 0x24
   16154:	bhi	16100 <argp_parse@@Base+0x410>
   16158:	ldr	r3, [fp, #-112]	; 0xffffff90
   1615c:	sub	ip, ip, #36	; 0x24
   16160:	cmp	r3, ip
   16164:	bhi	161cc <argp_parse@@Base+0x4dc>
   16168:	ldr	r8, [pc, #2184]	; 169f8 <argp_parse@@Base+0xd08>
   1616c:	sub	r4, ip, #36	; 0x24
   16170:	mov	r9, #0
   16174:	ldr	r6, [r4, #36]	; 0x24
   16178:	sub	r2, fp, #96	; 0x60
   1617c:	cmp	r6, #0
   16180:	mov	r1, r9
   16184:	mov	r0, r8
   16188:	mov	r7, r4
   1618c:	beq	161c0 <argp_parse@@Base+0x4d0>
   16190:	ldr	r3, [r4, #68]	; 0x44
   16194:	ldr	ip, [r4, #48]	; 0x30
   16198:	str	r3, [fp, #-60]	; 0xffffffc4
   1619c:	ldr	r3, [r4, #60]	; 0x3c
   161a0:	str	r3, [fp, #-68]	; 0xffffffbc
   161a4:	ldr	r3, [r4, #64]	; 0x40
   161a8:	str	ip, [fp, #-76]	; 0xffffffb4
   161ac:	str	r3, [fp, #-64]	; 0xffffffc0
   161b0:	blx	r6
   161b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   161b8:	str	r3, [r4, #68]	; 0x44
   161bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   161c0:	cmp	r3, r7
   161c4:	sub	r4, r4, #36	; 0x24
   161c8:	bls	16174 <argp_parse@@Base+0x484>
   161cc:	cmp	r5, #7
   161d0:	moveq	r5, #22
   161d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161d8:	bl	16b88 <argp_parse@@Base+0xe98>
   161dc:	mov	r0, r5
   161e0:	sub	sp, fp, #32
   161e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161e8:	mov	sl, #36	; 0x24
   161ec:	mov	r5, sl
   161f0:	mov	r9, #52	; 0x34
   161f4:	str	r7, [fp, #-236]	; 0xffffff14
   161f8:	b	15dc0 <argp_parse@@Base+0xd0>
   161fc:	add	sl, sl, #1
   16200:	mov	r3, #45	; 0x2d
   16204:	str	sl, [fp, #-208]	; 0xffffff30
   16208:	strb	r3, [r8, r9]
   1620c:	b	15e78 <argp_parse@@Base+0x188>
   16210:	ldr	r3, [fp, #8]
   16214:	add	r4, r5, #36	; 0x24
   16218:	str	r3, [r5, #24]
   1621c:	mov	r7, #0
   16220:	ldr	r6, [pc, #2004]	; 169fc <argp_parse@@Base+0xd0c>
   16224:	b	1627c <argp_parse@@Base+0x58c>
   16228:	ldr	r2, [r4, #-4]
   1622c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   16230:	str	r2, [fp, #-60]	; 0xffffffc4
   16234:	ldr	r1, [r4, #-12]
   16238:	sub	r2, fp, #96	; 0x60
   1623c:	str	r1, [fp, #-68]	; 0xffffffbc
   16240:	ldr	ip, [r4, #-8]
   16244:	mov	r1, r7
   16248:	str	r0, [fp, #-76]	; 0xffffffb4
   1624c:	str	ip, [fp, #-64]	; 0xffffffc0
   16250:	mov	r0, r6
   16254:	blx	r3
   16258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1625c:	str	r3, [r4, #-4]
   16260:	ldr	r3, [fp, #-108]	; 0xffffff94
   16264:	cmp	r3, r4
   16268:	bls	16998 <argp_parse@@Base+0xca8>
   1626c:	cmp	r0, #7
   16270:	cmpne	r0, #0
   16274:	bne	16394 <argp_parse@@Base+0x6a4>
   16278:	add	r4, r4, #36	; 0x24
   1627c:	ldr	r3, [r4, #-20]	; 0xffffffec
   16280:	cmp	r3, #0
   16284:	ldrne	r3, [r3, #28]
   16288:	ldrne	r2, [r4, #-16]
   1628c:	ldrne	r3, [r3, r2, lsl #2]
   16290:	strne	r3, [r4, #-12]
   16294:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16298:	cmp	r3, #0
   1629c:	bne	16228 <argp_parse@@Base+0x538>
   162a0:	ldr	r3, [r4, #-32]	; 0xffffffe0
   162a4:	ldr	r3, [r3, #16]
   162a8:	cmp	r3, #0
   162ac:	beq	162d4 <argp_parse@@Base+0x5e4>
   162b0:	ldr	r3, [r3]
   162b4:	cmp	r3, #0
   162b8:	beq	162d4 <argp_parse@@Base+0x5e4>
   162bc:	ldr	r3, [r4, #-8]
   162c0:	ldr	r2, [r4, #-12]
   162c4:	str	r2, [r3]
   162c8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   162cc:	cmp	r3, #0
   162d0:	bne	16228 <argp_parse@@Base+0x538>
   162d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   162d8:	cmp	r3, r4
   162dc:	bhi	16278 <argp_parse@@Base+0x588>
   162e0:	b	15f10 <argp_parse@@Base+0x220>
   162e4:	sub	sp, sp, #72	; 0x48
   162e8:	add	r4, sp, #8
   162ec:	sub	sp, sp, #40	; 0x28
   162f0:	add	r5, sp, #8
   162f4:	mov	r1, r3
   162f8:	mov	r0, r4
   162fc:	mov	r2, #64	; 0x40
   16300:	str	r3, [r5]
   16304:	str	r3, [r5, #4]
   16308:	str	r3, [r5, #8]
   1630c:	str	r3, [r5, #12]
   16310:	str	r3, [r5, #20]
   16314:	str	r3, [r5, #24]
   16318:	str	r4, [r5, #16]
   1631c:	bl	11a54 <memset@plt>
   16320:	ldr	r3, [pc, #1752]	; 16a00 <argp_parse@@Base+0xd10>
   16324:	cmp	r7, #0
   16328:	strne	r7, [r4]
   1632c:	ldr	r3, [r3]
   16330:	addne	r4, r4, #16
   16334:	ldr	r2, [pc, #1736]	; 16a04 <argp_parse@@Base+0xd14>
   16338:	cmp	r3, #0
   1633c:	str	r2, [r4]
   16340:	beq	168cc <argp_parse@@Base+0xbdc>
   16344:	ldr	r2, [pc, #1724]	; 16a08 <argp_parse@@Base+0xd18>
   16348:	add	r3, r4, #32
   1634c:	str	r2, [r4, #16]
   16350:	mov	r8, #0
   16354:	sub	r4, fp, #196	; 0xc4
   16358:	str	r8, [r3]
   1635c:	mov	r1, r8
   16360:	mov	r0, r4
   16364:	mov	r2, #36	; 0x24
   16368:	bl	11a54 <memset@plt>
   1636c:	ands	r3, r6, #4
   16370:	str	r3, [fp, #-244]	; 0xffffff0c
   16374:	moveq	r3, #1
   16378:	movne	r3, r8
   1637c:	mov	r7, r5
   16380:	str	r8, [fp, #-224]	; 0xffffff20
   16384:	str	r8, [fp, #-220]	; 0xffffff24
   16388:	str	r8, [fp, #-216]	; 0xffffff28
   1638c:	str	r3, [fp, #-228]	; 0xffffff1c
   16390:	b	15d84 <argp_parse@@Base+0x94>
   16394:	mov	r5, r0
   16398:	mov	r0, r5
   1639c:	sub	sp, fp, #32
   163a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a4:	ldr	r5, [fp, #-112]	; 0xffffff90
   163a8:	mov	r8, r5
   163ac:	str	r5, [fp, #-108]	; 0xffffff94
   163b0:	b	15ebc <argp_parse@@Base+0x1cc>
   163b4:	tst	r3, #1
   163b8:	mov	r3, #0
   163bc:	str	r3, [fp, #-144]	; 0xffffff70
   163c0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   163c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   163c8:	subne	r3, r3, #4
   163cc:	addne	r4, r4, #1
   163d0:	strne	r3, [fp, #-88]	; 0xffffffa8
   163d4:	strne	r4, [fp, #-92]	; 0xffffffa4
   163d8:	b	15f2c <argp_parse@@Base+0x23c>
   163dc:	ldr	r3, [fp, #-232]	; 0xffffff18
   163e0:	ldr	r0, [r3]
   163e4:	bl	16adc <argp_parse@@Base+0xdec>
   163e8:	str	r0, [r4]
   163ec:	b	15d3c <argp_parse@@Base+0x4c>
   163f0:	cmp	r2, #0
   163f4:	beq	15f70 <argp_parse@@Base+0x280>
   163f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   163fc:	str	r5, [fp, #-148]	; 0xffffff6c
   16400:	ands	ip, r3, #64	; 0x40
   16404:	mvn	r3, #0
   16408:	str	r3, [fp, #-140]	; 0xffffff74
   1640c:	ldr	r2, [fp, #-156]	; 0xffffff64
   16410:	ldr	r3, [fp, #-152]	; 0xffffff68
   16414:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16418:	beq	16738 <argp_parse@@Base+0xa48>
   1641c:	sub	ip, fp, #148	; 0x94
   16420:	stm	sp, {r6, ip}
   16424:	bl	16c5c <argp_parse@@Base+0xf6c>
   16428:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1642c:	str	r5, [fp, #-84]	; 0xffffffac
   16430:	mov	r7, r0
   16434:	cmn	r7, #1
   16438:	beq	16758 <argp_parse@@Base+0xa68>
   1643c:	cmp	r7, #63	; 0x3f
   16440:	beq	1685c <argp_parse@@Base+0xb6c>
   16444:	cmp	r7, #1
   16448:	beq	165a0 <argp_parse@@Base+0x8b0>
   1644c:	asrs	r8, r7, #24
   16450:	bne	164fc <argp_parse@@Base+0x80c>
   16454:	mov	r1, r7
   16458:	ldr	r0, [fp, #-156]	; 0xffffff64
   1645c:	bl	119f4 <strchr@plt>
   16460:	cmp	r0, #0
   16464:	beq	1656c <argp_parse@@Base+0x87c>
   16468:	ldr	r4, [fp, #-112]	; 0xffffff90
   1646c:	ldr	r2, [fp, #-108]	; 0xffffff94
   16470:	cmp	r4, r2
   16474:	bcc	16488 <argp_parse@@Base+0x798>
   16478:	b	1656c <argp_parse@@Base+0x87c>
   1647c:	add	r4, r4, #36	; 0x24
   16480:	cmp	r4, r2
   16484:	bcs	1656c <argp_parse@@Base+0x87c>
   16488:	ldr	r3, [r4, #8]
   1648c:	cmp	r0, r3
   16490:	bcs	1647c <argp_parse@@Base+0x78c>
   16494:	ldr	r3, [r4]
   16498:	cmp	r3, #0
   1649c:	beq	1656c <argp_parse@@Base+0x87c>
   164a0:	ldr	r2, [r4, #32]
   164a4:	ldr	r0, [r4, #28]
   164a8:	ldr	ip, [r4, #24]
   164ac:	str	r2, [fp, #-60]	; 0xffffffc4
   164b0:	ldr	r2, [r4, #12]
   164b4:	ldr	r1, [fp, #-136]	; 0xffffff78
   164b8:	str	r0, [fp, #-64]	; 0xffffffc0
   164bc:	str	r2, [fp, #-76]	; 0xffffffb4
   164c0:	str	ip, [fp, #-68]	; 0xffffffbc
   164c4:	sub	r2, fp, #96	; 0x60
   164c8:	mov	r0, r7
   164cc:	blx	r3
   164d0:	mov	r8, r6
   164d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   164d8:	str	r3, [r4, #32]
   164dc:	cmp	r0, #7
   164e0:	beq	16564 <argp_parse@@Base+0x874>
   164e4:	cmp	r0, #0
   164e8:	bne	160e0 <argp_parse@@Base+0x3f0>
   164ec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   164f0:	ldr	r5, [fp, #-84]	; 0xffffffac
   164f4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   164f8:	b	15f58 <argp_parse@@Base+0x268>
   164fc:	add	r3, r8, r8, lsl #3
   16500:	ldr	r2, [fp, #-112]	; 0xffffff90
   16504:	lsl	r3, r3, #2
   16508:	sub	r3, r3, #36	; 0x24
   1650c:	add	r4, r2, r3
   16510:	ldr	r5, [r2, r3]
   16514:	ands	r3, r7, #8388608	; 0x800000
   16518:	movne	r3, #-16777216	; 0xff000000
   1651c:	cmp	r5, #0
   16520:	beq	166f0 <argp_parse@@Base+0xa00>
   16524:	ldr	r0, [r4, #32]
   16528:	ldr	r2, [r4, #24]
   1652c:	str	r0, [fp, #-60]	; 0xffffffc4
   16530:	ldr	r0, [r4, #28]
   16534:	str	r2, [fp, #-68]	; 0xffffffbc
   16538:	ldr	r2, [r4, #12]
   1653c:	str	r0, [fp, #-64]	; 0xffffffc0
   16540:	bic	r0, r7, #-16777216	; 0xff000000
   16544:	str	r2, [fp, #-76]	; 0xffffffb4
   16548:	orr	r0, r0, r3
   1654c:	ldr	r1, [fp, #-136]	; 0xffffff78
   16550:	sub	r2, fp, #96	; 0x60
   16554:	blx	r5
   16558:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1655c:	str	r3, [r4, #32]
   16560:	b	164dc <argp_parse@@Base+0x7ec>
   16564:	cmp	r8, #0
   16568:	bne	166f0 <argp_parse@@Base+0xa00>
   1656c:	mov	r2, r7
   16570:	ldr	r3, [pc, #1172]	; 16a0c <argp_parse@@Base+0xd1c>
   16574:	ldr	r1, [pc, #1172]	; 16a10 <argp_parse@@Base+0xd20>
   16578:	sub	r0, fp, #96	; 0x60
   1657c:	bl	1a404 <argp_error@@Base>
   16580:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16584:	mov	r2, #260	; 0x104
   16588:	sub	r0, fp, #96	; 0x60
   1658c:	bl	1a354 <argp_state_help@@Base>
   16590:	mov	r5, #7
   16594:	ldr	r3, [fp, #-112]	; 0xffffff90
   16598:	ldr	ip, [fp, #-108]	; 0xffffff94
   1659c:	b	160ec <argp_parse@@Base+0x3fc>
   165a0:	ldr	r7, [fp, #-136]	; 0xffffff78
   165a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   165a8:	ldr	ip, [fp, #-108]	; 0xffffff94
   165ac:	sub	r8, r5, #1
   165b0:	cmp	r3, ip
   165b4:	str	r8, [fp, #-84]	; 0xffffffac
   165b8:	bcs	166e4 <argp_parse@@Base+0x9f4>
   165bc:	mov	lr, r8
   165c0:	add	r4, r3, #36	; 0x24
   165c4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   165c8:	add	r5, lr, #1
   165cc:	cmp	r3, #0
   165d0:	str	r5, [fp, #-84]	; 0xffffffac
   165d4:	sub	r2, fp, #96	; 0x60
   165d8:	mov	r1, r7
   165dc:	mov	r0, r6
   165e0:	sub	r5, r4, #36	; 0x24
   165e4:	mov	r9, r4
   165e8:	streq	lr, [fp, #-84]	; 0xffffffac
   165ec:	beq	166d8 <argp_parse@@Base+0x9e8>
   165f0:	ldr	ip, [r4, #-4]
   165f4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   165f8:	str	ip, [fp, #-60]	; 0xffffffc4
   165fc:	ldr	ip, [r4, #-12]
   16600:	str	ip, [fp, #-68]	; 0xffffffbc
   16604:	ldr	ip, [r4, #-8]
   16608:	str	lr, [fp, #-76]	; 0xffffffb4
   1660c:	str	ip, [fp, #-64]	; 0xffffffc0
   16610:	blx	r3
   16614:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16618:	str	r3, [r4, #-4]
   1661c:	cmp	r0, #7
   16620:	beq	1665c <argp_parse@@Base+0x96c>
   16624:	cmp	r0, #0
   16628:	bne	160e0 <argp_parse@@Base+0x3f0>
   1662c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16630:	ldr	r5, [fp, #-84]	; 0xffffffac
   16634:	cmp	r8, r5
   16638:	sublt	r8, r5, r8
   1663c:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   16640:	movge	r3, #1
   16644:	addlt	r8, r3, r8
   16648:	strlt	r8, [r4, #-24]	; 0xffffffe8
   1664c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   16650:	strge	r3, [fp, #-100]	; 0xffffff9c
   16654:	movge	r2, r3
   16658:	b	15f58 <argp_parse@@Base+0x268>
   1665c:	ldr	lr, [fp, #-84]	; 0xffffffac
   16660:	ldr	r3, [r4, #-36]	; 0xffffffdc
   16664:	sub	lr, lr, #1
   16668:	cmp	r3, #0
   1666c:	str	lr, [fp, #-84]	; 0xffffffac
   16670:	beq	166d4 <argp_parse@@Base+0x9e4>
   16674:	add	r0, r5, #24
   16678:	ldr	r2, [r5, #12]
   1667c:	ldm	r0, {r0, r1, ip}
   16680:	str	r2, [fp, #-76]	; 0xffffffb4
   16684:	sub	r2, fp, #96	; 0x60
   16688:	str	ip, [fp, #-60]	; 0xffffffc4
   1668c:	str	r0, [fp, #-68]	; 0xffffffbc
   16690:	str	r1, [fp, #-64]	; 0xffffffc0
   16694:	mov	r0, sl
   16698:	mov	r1, r6
   1669c:	blx	r3
   166a0:	ldr	ip, [fp, #-108]	; 0xffffff94
   166a4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   166a8:	cmp	r4, ip
   166ac:	movcs	r1, #0
   166b0:	movcc	r1, #1
   166b4:	mov	r3, r4
   166b8:	str	r2, [r5, #32]
   166bc:	cmp	r0, #7
   166c0:	movne	r1, #0
   166c4:	cmp	r1, #0
   166c8:	beq	169b0 <argp_parse@@Base+0xcc0>
   166cc:	ldr	lr, [fp, #-84]	; 0xffffffac
   166d0:	b	165c0 <argp_parse@@Base+0x8d0>
   166d4:	ldr	ip, [fp, #-108]	; 0xffffff94
   166d8:	cmp	r9, ip
   166dc:	add	r4, r4, #36	; 0x24
   166e0:	bcc	165c4 <argp_parse@@Base+0x8d4>
   166e4:	ldr	r5, [fp, #-84]	; 0xffffffac
   166e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   166ec:	b	15f78 <argp_parse@@Base+0x288>
   166f0:	ldr	r3, [fp, #-152]	; 0xffffff68
   166f4:	ldr	r2, [r3, #12]
   166f8:	cmp	r2, r7
   166fc:	bne	16714 <argp_parse@@Base+0xa24>
   16700:	b	16848 <argp_parse@@Base+0xb58>
   16704:	add	r3, r3, #16
   16708:	ldr	r2, [r3, #12]
   1670c:	cmp	r2, r7
   16710:	beq	16848 <argp_parse@@Base+0xb58>
   16714:	ldr	r2, [r3]
   16718:	cmp	r2, #0
   1671c:	bne	16704 <argp_parse@@Base+0xa14>
   16720:	ldr	r2, [pc, #748]	; 16a14 <argp_parse@@Base+0xd24>
   16724:	ldr	r3, [pc, #736]	; 16a0c <argp_parse@@Base+0xd1c>
   16728:	ldr	r1, [pc, #744]	; 16a18 <argp_parse@@Base+0xd28>
   1672c:	sub	r0, fp, #96	; 0x60
   16730:	bl	1a404 <argp_error@@Base>
   16734:	b	16580 <argp_parse@@Base+0x890>
   16738:	sub	lr, fp, #148	; 0x94
   1673c:	stm	sp, {ip, lr}
   16740:	bl	16c08 <argp_parse@@Base+0xf18>
   16744:	ldr	r5, [fp, #-148]	; 0xffffff6c
   16748:	str	r5, [fp, #-84]	; 0xffffffac
   1674c:	mov	r7, r0
   16750:	cmn	r7, #1
   16754:	bne	1643c <argp_parse@@Base+0x74c>
   16758:	cmp	r5, #1
   1675c:	str	r6, [fp, #-100]	; 0xffffff9c
   16760:	ble	16780 <argp_parse@@Base+0xa90>
   16764:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16768:	sub	r3, r5, #-1073741823	; 0xc0000001
   1676c:	ldr	r1, [pc, #680]	; 16a1c <argp_parse@@Base+0xd2c>
   16770:	ldr	r0, [r2, r3, lsl #2]
   16774:	bl	11754 <strcmp@plt>
   16778:	cmp	r0, #0
   1677c:	streq	r5, [fp, #-72]	; 0xffffffb8
   16780:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16784:	cmp	r5, r0
   16788:	bge	15f78 <argp_parse@@Base+0x288>
   1678c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16790:	tst	r3, #4
   16794:	beq	1686c <argp_parse@@Base+0xb7c>
   16798:	ldr	r3, [fp, #4]
   1679c:	cmp	r3, #0
   167a0:	beq	16944 <argp_parse@@Base+0xc54>
   167a4:	str	r5, [r3]
   167a8:	ldr	ip, [fp, #-108]	; 0xffffff94
   167ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   167b0:	sub	r2, ip, #36	; 0x24
   167b4:	cmp	r3, r2
   167b8:	bhi	168a0 <argp_parse@@Base+0xbb0>
   167bc:	ldr	r6, [pc, #604]	; 16a20 <argp_parse@@Base+0xd30>
   167c0:	sub	r4, ip, #72	; 0x48
   167c4:	mov	r7, #0
   167c8:	ldr	r5, [r4, #36]	; 0x24
   167cc:	sub	r2, fp, #96	; 0x60
   167d0:	cmp	r5, #0
   167d4:	mov	r1, r7
   167d8:	mov	r0, r6
   167dc:	beq	16838 <argp_parse@@Base+0xb48>
   167e0:	ldr	r3, [r4, #68]	; 0x44
   167e4:	ldr	ip, [r4, #48]	; 0x30
   167e8:	str	r3, [fp, #-60]	; 0xffffffc4
   167ec:	ldr	r3, [r4, #60]	; 0x3c
   167f0:	str	r3, [fp, #-68]	; 0xffffffbc
   167f4:	ldr	r3, [r4, #64]	; 0x40
   167f8:	str	ip, [fp, #-76]	; 0xffffffb4
   167fc:	str	r3, [fp, #-64]	; 0xffffffc0
   16800:	blx	r5
   16804:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16808:	str	r3, [r4, #68]	; 0x44
   1680c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16810:	cmp	r4, r3
   16814:	bcc	16880 <argp_parse@@Base+0xb90>
   16818:	cmp	r0, #7
   1681c:	cmpne	r0, #0
   16820:	sub	r4, r4, #36	; 0x24
   16824:	beq	167c8 <argp_parse@@Base+0xad8>
   16828:	ldr	ip, [fp, #-108]	; 0xffffff94
   1682c:	mov	r5, r0
   16830:	sub	ip, ip, #36	; 0x24
   16834:	b	16160 <argp_parse@@Base+0x470>
   16838:	cmp	r4, r3
   1683c:	bcc	1688c <argp_parse@@Base+0xb9c>
   16840:	sub	r4, r4, #36	; 0x24
   16844:	b	167c8 <argp_parse@@Base+0xad8>
   16848:	ldr	r2, [r3]
   1684c:	ldr	r3, [pc, #448]	; 16a14 <argp_parse@@Base+0xd24>
   16850:	cmp	r2, #0
   16854:	moveq	r2, r3
   16858:	b	16724 <argp_parse@@Base+0xa34>
   1685c:	ldr	r3, [fp, #-140]	; 0xffffff74
   16860:	cmn	r3, #1
   16864:	bne	16580 <argp_parse@@Base+0x890>
   16868:	b	16454 <argp_parse@@Base+0x764>
   1686c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16870:	ldr	r7, [r3, r5, lsl #2]
   16874:	add	r5, r5, #1
   16878:	str	r7, [fp, #-136]	; 0xffffff78
   1687c:	b	165a4 <argp_parse@@Base+0x8b4>
   16880:	cmp	r0, #7
   16884:	mov	r5, r0
   16888:	bne	168a8 <argp_parse@@Base+0xbb8>
   1688c:	ldr	ip, [fp, #-108]	; 0xffffff94
   16890:	sub	ip, ip, #36	; 0x24
   16894:	cmp	ip, r3
   16898:	movcs	r5, #0
   1689c:	bcs	16168 <argp_parse@@Base+0x478>
   168a0:	mov	r5, #0
   168a4:	b	161d4 <argp_parse@@Base+0x4e4>
   168a8:	ldr	ip, [fp, #-108]	; 0xffffff94
   168ac:	sub	ip, ip, #36	; 0x24
   168b0:	b	16160 <argp_parse@@Base+0x470>
   168b4:	ldr	r0, [r2]
   168b8:	cmp	r0, #0
   168bc:	beq	15f38 <argp_parse@@Base+0x248>
   168c0:	bl	16adc <argp_parse@@Base+0xdec>
   168c4:	str	r0, [fp, #-56]	; 0xffffffc8
   168c8:	b	15f44 <argp_parse@@Base+0x254>
   168cc:	ldr	r3, [pc, #336]	; 16a24 <argp_parse@@Base+0xd34>
   168d0:	ldr	r3, [r3]
   168d4:	cmp	r3, #0
   168d8:	addeq	r3, r4, #16
   168dc:	bne	16344 <argp_parse@@Base+0x654>
   168e0:	b	16350 <argp_parse@@Base+0x660>
   168e4:	mov	r5, r0
   168e8:	ldr	r2, [fp, #4]
   168ec:	cmp	r2, #0
   168f0:	bne	160c4 <argp_parse@@Base+0x3d4>
   168f4:	cmp	r5, #7
   168f8:	bne	160e8 <argp_parse@@Base+0x3f8>
   168fc:	b	16580 <argp_parse@@Base+0x890>
   16900:	ldr	r3, [fp, #-112]	; 0xffffff90
   16904:	sub	ip, ip, #36	; 0x24
   16908:	cmp	r3, ip
   1690c:	mov	r5, r0
   16910:	bls	168e8 <argp_parse@@Base+0xbf8>
   16914:	ldr	r2, [fp, #4]
   16918:	cmp	r2, #0
   1691c:	bne	160c4 <argp_parse@@Base+0x3d4>
   16920:	b	160d0 <argp_parse@@Base+0x3e0>
   16924:	ldr	r3, [fp, #-112]	; 0xffffff90
   16928:	sub	r4, ip, #36	; 0x24
   1692c:	cmp	r4, r3
   16930:	mov	r5, r0
   16934:	bcs	16030 <argp_parse@@Base+0x340>
   16938:	cmp	r5, #7
   1693c:	beq	160b4 <argp_parse@@Base+0x3c4>
   16940:	b	16914 <argp_parse@@Base+0xc24>
   16944:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16948:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1694c:	tst	r3, #2
   16950:	bne	16584 <argp_parse@@Base+0x894>
   16954:	cmp	r1, #0
   16958:	beq	16584 <argp_parse@@Base+0x894>
   1695c:	mov	r0, r1
   16960:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16964:	ldr	r1, [pc, #188]	; 16a28 <argp_parse@@Base+0xd38>
   16968:	bl	11a0c <fprintf@plt>
   1696c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16970:	b	16584 <argp_parse@@Base+0x894>
   16974:	mov	r5, r0
   16978:	b	16938 <argp_parse@@Base+0xc48>
   1697c:	sub	r4, ip, #36	; 0x24
   16980:	cmp	r3, r4
   16984:	bls	1603c <argp_parse@@Base+0x34c>
   16988:	ldr	r2, [fp, #4]
   1698c:	cmp	r2, #0
   16990:	bne	160c0 <argp_parse@@Base+0x3d0>
   16994:	b	167b0 <argp_parse@@Base+0xac0>
   16998:	cmp	r0, #7
   1699c:	mov	r5, r0
   169a0:	beq	15f10 <argp_parse@@Base+0x220>
   169a4:	cmp	r0, #0
   169a8:	beq	15f10 <argp_parse@@Base+0x220>
   169ac:	b	161dc <argp_parse@@Base+0x4ec>
   169b0:	cmp	r0, #0
   169b4:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   169b8:	moveq	r5, r0
   169bc:	streq	r0, [fp, #-84]	; 0xffffffac
   169c0:	beq	16634 <argp_parse@@Base+0x944>
   169c4:	cmp	r0, #7
   169c8:	mov	r5, r0
   169cc:	beq	166e4 <argp_parse@@Base+0x9f4>
   169d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   169d4:	b	160ec <argp_parse@@Base+0x3fc>
   169d8:	andeq	lr, r2, ip, lsr #7
   169dc:	andeq	lr, r2, r8, lsr #7
   169e0:			; <UNDEFINED> instruction: 0x0002e3b0
   169e4:			; <UNDEFINED> instruction: 0x0002e3b4
   169e8:	tsteq	r0, r6
   169ec:	tsteq	r0, r2
   169f0:	tsteq	r0, r1
   169f4:	tsteq	r0, r5
   169f8:	tsteq	r0, r7
   169fc:	tsteq	r0, r3
   16a00:	andeq	lr, r2, r8, lsl r6
   16a04:	andeq	ip, r1, ip, lsr r5
   16a08:	andeq	ip, r1, r8, asr r5
   16a0c:	andeq	ip, r1, r4, ror r5
   16a10:	andeq	ip, r1, r8, lsl #13
   16a14:	andeq	ip, r1, r0, lsl #13
   16a18:	muleq	r1, r0, r6
   16a1c:	andeq	ip, r1, r4, lsl #13
   16a20:	tsteq	r0, r4
   16a24:			; <UNDEFINED> instruction: 0x0002e4b0
   16a28:	muleq	r1, ip, r6
   16a2c:	cmp	r1, #0
   16a30:	beq	16a70 <argp_parse@@Base+0xd80>
   16a34:	ldr	r2, [r1, #52]	; 0x34
   16a38:	ldr	r3, [r2, #48]	; 0x30
   16a3c:	ldr	r1, [r2, #52]	; 0x34
   16a40:	cmp	r3, r1
   16a44:	bcs	16a70 <argp_parse@@Base+0xd80>
   16a48:	ldr	r2, [r3, #4]
   16a4c:	cmp	r0, r2
   16a50:	bne	16a64 <argp_parse@@Base+0xd74>
   16a54:	b	16a78 <argp_parse@@Base+0xd88>
   16a58:	ldr	r2, [r3, #4]
   16a5c:	cmp	r2, r0
   16a60:	beq	16a78 <argp_parse@@Base+0xd88>
   16a64:	add	r3, r3, #36	; 0x24
   16a68:	cmp	r3, r1
   16a6c:	bcc	16a58 <argp_parse@@Base+0xd68>
   16a70:	mov	r0, #0
   16a74:	bx	lr
   16a78:	ldr	r0, [r3, #24]
   16a7c:	bx	lr
   16a80:	ldr	ip, [pc, #32]	; 16aa8 <argp_parse@@Base+0xdb8>
   16a84:	push	{lr}		; (str lr, [sp, #-4]!)
   16a88:	sub	sp, sp, #12
   16a8c:	ldm	ip, {r1, ip}
   16a90:	ldr	r3, [pc, #20]	; 16aac <argp_parse@@Base+0xdbc>
   16a94:	ldr	r2, [pc, #20]	; 16ab0 <argp_parse@@Base+0xdc0>
   16a98:	str	ip, [sp]
   16a9c:	bl	16fec <argp_parse@@Base+0x12fc>
   16aa0:	add	sp, sp, #12
   16aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   16aa8:			; <UNDEFINED> instruction: 0x0002e4b4
   16aac:	andeq	ip, r1, ip, ror r7
   16ab0:	andeq	ip, r1, ip, lsl #15
   16ab4:	ldr	r3, [pc, #20]	; 16ad0 <argp_parse@@Base+0xde0>
   16ab8:	ldr	r2, [pc, #20]	; 16ad4 <argp_parse@@Base+0xde4>
   16abc:	ldr	ip, [pc, #20]	; 16ad8 <argp_parse@@Base+0xde8>
   16ac0:	str	r0, [r3]
   16ac4:	str	ip, [r2]
   16ac8:	str	r1, [r3, #4]
   16acc:	bx	lr
   16ad0:			; <UNDEFINED> instruction: 0x0002e4b4
   16ad4:			; <UNDEFINED> instruction: 0x0002e4b0
   16ad8:	andeq	r6, r1, r0, lsl #21
   16adc:	ldrb	r3, [r0]
   16ae0:	cmp	r3, #47	; 0x2f
   16ae4:	bne	16af4 <argp_parse@@Base+0xe04>
   16ae8:	ldrb	r3, [r0, #1]!
   16aec:	cmp	r3, #47	; 0x2f
   16af0:	beq	16ae8 <argp_parse@@Base+0xdf8>
   16af4:	cmp	r3, #0
   16af8:	bxeq	lr
   16afc:	mov	r2, #0
   16b00:	push	{lr}		; (str lr, [sp, #-4]!)
   16b04:	mov	ip, r2
   16b08:	mov	r1, r0
   16b0c:	mov	lr, #1
   16b10:	cmp	r3, #47	; 0x2f
   16b14:	moveq	r2, lr
   16b18:	beq	16b28 <argp_parse@@Base+0xe38>
   16b1c:	cmp	r2, #0
   16b20:	movne	r0, r1
   16b24:	movne	r2, ip
   16b28:	ldrb	r3, [r1, #1]!
   16b2c:	cmp	r3, #0
   16b30:	bne	16b10 <argp_parse@@Base+0xe20>
   16b34:	pop	{pc}		; (ldr pc, [sp], #4)
   16b38:	push	{r4, lr}
   16b3c:	mov	r4, r0
   16b40:	bl	119dc <strlen@plt>
   16b44:	cmp	r0, #1
   16b48:	popls	{r4, pc}
   16b4c:	sub	r3, r0, #1
   16b50:	add	r2, r4, r3
   16b54:	ldrb	r1, [r4, r3]
   16b58:	cmp	r1, #47	; 0x2f
   16b5c:	popne	{r4, pc}
   16b60:	cmp	r3, #1
   16b64:	beq	16b78 <argp_parse@@Base+0xe88>
   16b68:	ldrb	r1, [r2, #-1]!
   16b6c:	sub	r0, r3, #1
   16b70:	cmp	r1, #47	; 0x2f
   16b74:	beq	16b80 <argp_parse@@Base+0xe90>
   16b78:	mov	r0, r3
   16b7c:	pop	{r4, pc}
   16b80:	mov	r3, r0
   16b84:	b	16b60 <argp_parse@@Base+0xe70>
   16b88:	push	{r4, r5, lr}
   16b8c:	sub	sp, sp, #12
   16b90:	mov	r5, r0
   16b94:	bl	11a24 <__errno_location@plt>
   16b98:	mov	r2, #0
   16b9c:	mov	r4, r0
   16ba0:	ldr	r3, [r0]
   16ba4:	str	r2, [r4]
   16ba8:	mov	r0, r5
   16bac:	str	r3, [sp]
   16bb0:	str	r3, [sp, #4]
   16bb4:	bl	117d8 <free@plt>
   16bb8:	ldr	r3, [r4]
   16bbc:	add	r2, sp, #8
   16bc0:	cmp	r3, #0
   16bc4:	moveq	r3, #4
   16bc8:	movne	r3, #0
   16bcc:	add	r3, r2, r3
   16bd0:	ldr	r3, [r3, #-8]
   16bd4:	str	r3, [r4]
   16bd8:	add	sp, sp, #12
   16bdc:	pop	{r4, r5, pc}
   16be0:	push	{lr}		; (str lr, [sp, #-4]!)
   16be4:	sub	sp, sp, #20
   16be8:	mov	ip, #0
   16bec:	ldr	lr, [sp, #24]
   16bf0:	str	ip, [sp, #8]
   16bf4:	str	lr, [sp]
   16bf8:	str	ip, [sp, #4]
   16bfc:	bl	1b0a8 <argp_error@@Base+0xca4>
   16c00:	add	sp, sp, #20
   16c04:	pop	{pc}		; (ldr pc, [sp], #4)
   16c08:	push	{r4, lr}
   16c0c:	sub	sp, sp, #16
   16c10:	mov	ip, #0
   16c14:	ldr	r4, [sp, #24]
   16c18:	ldr	lr, [sp, #28]
   16c1c:	str	r4, [sp]
   16c20:	str	lr, [sp, #8]
   16c24:	str	ip, [sp, #12]
   16c28:	str	ip, [sp, #4]
   16c2c:	bl	1ab48 <argp_error@@Base+0x744>
   16c30:	add	sp, sp, #16
   16c34:	pop	{r4, pc}
   16c38:	push	{r4, lr}
   16c3c:	sub	sp, sp, #16
   16c40:	mov	lr, #0
   16c44:	ldr	r4, [sp, #24]
   16c48:	mov	ip, #1
   16c4c:	stm	sp, {r4, ip, lr}
   16c50:	bl	1b0a8 <argp_error@@Base+0xca4>
   16c54:	add	sp, sp, #16
   16c58:	pop	{r4, pc}
   16c5c:	push	{r4, r5, lr}
   16c60:	sub	sp, sp, #20
   16c64:	mov	lr, #0
   16c68:	ldr	r5, [sp, #32]
   16c6c:	ldr	r4, [sp, #36]	; 0x24
   16c70:	mov	ip, #1
   16c74:	str	r5, [sp]
   16c78:	str	r4, [sp, #8]
   16c7c:	str	lr, [sp, #12]
   16c80:	str	ip, [sp, #4]
   16c84:	bl	1ab48 <argp_error@@Base+0x744>
   16c88:	add	sp, sp, #20
   16c8c:	pop	{r4, r5, pc}
   16c90:	push	{r4, r5, r6, lr}
   16c94:	subs	r4, r0, #0
   16c98:	beq	16d0c <argp_parse@@Base+0x101c>
   16c9c:	mov	r1, #47	; 0x2f
   16ca0:	bl	11ae4 <strrchr@plt>
   16ca4:	subs	r5, r0, #0
   16ca8:	beq	16cf8 <argp_parse@@Base+0x1008>
   16cac:	add	r6, r5, #1
   16cb0:	sub	r3, r6, r4
   16cb4:	cmp	r3, #6
   16cb8:	ble	16cf8 <argp_parse@@Base+0x1008>
   16cbc:	mov	r2, #7
   16cc0:	ldr	r1, [pc, #96]	; 16d28 <argp_parse@@Base+0x1038>
   16cc4:	sub	r0, r5, #6
   16cc8:	bl	11bd4 <strncmp@plt>
   16ccc:	cmp	r0, #0
   16cd0:	bne	16cf8 <argp_parse@@Base+0x1008>
   16cd4:	mov	r2, #3
   16cd8:	ldr	r1, [pc, #76]	; 16d2c <argp_parse@@Base+0x103c>
   16cdc:	mov	r0, r6
   16ce0:	bl	11bd4 <strncmp@plt>
   16ce4:	cmp	r0, #0
   16ce8:	movne	r4, r6
   16cec:	ldreq	r3, [pc, #60]	; 16d30 <argp_parse@@Base+0x1040>
   16cf0:	addeq	r4, r5, #4
   16cf4:	streq	r4, [r3]
   16cf8:	ldr	r2, [pc, #52]	; 16d34 <argp_parse@@Base+0x1044>
   16cfc:	ldr	r3, [pc, #52]	; 16d38 <argp_parse@@Base+0x1048>
   16d00:	str	r4, [r2]
   16d04:	str	r4, [r3]
   16d08:	pop	{r4, r5, r6, pc}
   16d0c:	ldr	r3, [pc, #40]	; 16d3c <argp_parse@@Base+0x104c>
   16d10:	mov	r2, #55	; 0x37
   16d14:	mov	r1, #1
   16d18:	ldr	r3, [r3]
   16d1c:	ldr	r0, [pc, #28]	; 16d40 <argp_parse@@Base+0x1050>
   16d20:	bl	118f8 <fwrite@plt>
   16d24:	bl	11be0 <abort@plt>
   16d28:	ldrdeq	ip, [r1], -r4
   16d2c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   16d30:	andeq	lr, r2, r8, lsr #7
   16d34:			; <UNDEFINED> instruction: 0x0002e4bc
   16d38:	andeq	lr, r2, ip, lsr #7
   16d3c:			; <UNDEFINED> instruction: 0x0002e3b0
   16d40:	muleq	r1, ip, r7
   16d44:	push	{r4, r5, r6, r7, lr}
   16d48:	sub	sp, sp, #36	; 0x24
   16d4c:	cmp	r1, #0
   16d50:	mov	r4, r0
   16d54:	ldr	r5, [sp, #56]	; 0x38
   16d58:	ldr	r6, [sp, #60]	; 0x3c
   16d5c:	beq	16f9c <argp_parse@@Base+0x12ac>
   16d60:	str	r3, [sp]
   16d64:	mov	r3, r2
   16d68:	mov	r2, r1
   16d6c:	ldr	r1, [pc, #564]	; 16fa8 <argp_parse@@Base+0x12b8>
   16d70:	bl	11a0c <fprintf@plt>
   16d74:	ldr	r3, [pc, #560]	; 16fac <argp_parse@@Base+0x12bc>
   16d78:	ldr	r2, [pc, #560]	; 16fb0 <argp_parse@@Base+0x12c0>
   16d7c:	ldr	r1, [pc, #560]	; 16fb4 <argp_parse@@Base+0x12c4>
   16d80:	mov	r0, r4
   16d84:	bl	11a0c <fprintf@plt>
   16d88:	mov	r1, r4
   16d8c:	mov	r0, #10
   16d90:	bl	11b08 <fputc@plt>
   16d94:	ldr	r1, [pc, #540]	; 16fb8 <argp_parse@@Base+0x12c8>
   16d98:	ldr	r2, [pc, #540]	; 16fbc <argp_parse@@Base+0x12cc>
   16d9c:	mov	r0, r4
   16da0:	bl	11a0c <fprintf@plt>
   16da4:	mov	r1, r4
   16da8:	mov	r0, #10
   16dac:	bl	11b08 <fputc@plt>
   16db0:	cmp	r6, #9
   16db4:	ldrls	pc, [pc, r6, lsl #2]
   16db8:	b	16de4 <argp_parse@@Base+0x10f4>
   16dbc:	andeq	r6, r1, r4, lsr #28
   16dc0:	andeq	r6, r1, r0, ror lr
   16dc4:	andeq	r6, r1, r8, lsl #29
   16dc8:	andeq	r6, r1, r0, lsr #29
   16dcc:	andeq	r6, r1, r0, asr #29
   16dd0:	andeq	r6, r1, r8, ror #29
   16dd4:	andeq	r6, r1, r8, lsl #30
   16dd8:	andeq	r6, r1, r0, lsr pc
   16ddc:	andeq	r6, r1, r0, ror #30
   16de0:	andeq	r6, r1, ip, lsr #28
   16de4:	ldr	ip, [r5, #32]
   16de8:	ldr	r1, [r5, #28]
   16dec:	ldm	r5, {r2, r3}
   16df0:	ldr	r7, [r5, #24]
   16df4:	ldr	r6, [r5, #20]
   16df8:	str	ip, [sp, #24]
   16dfc:	ldr	lr, [r5, #16]
   16e00:	str	r1, [sp, #20]
   16e04:	ldr	r1, [r5, #8]
   16e08:	ldr	ip, [r5, #12]
   16e0c:	mov	r0, r4
   16e10:	str	r7, [sp, #16]
   16e14:	stm	sp, {r1, ip, lr}
   16e18:	str	r6, [sp, #12]
   16e1c:	ldr	r1, [pc, #412]	; 16fc0 <argp_parse@@Base+0x12d0>
   16e20:	bl	11a0c <fprintf@plt>
   16e24:	add	sp, sp, #36	; 0x24
   16e28:	pop	{r4, r5, r6, r7, pc}
   16e2c:	ldr	ip, [r5, #32]
   16e30:	ldr	r1, [r5, #28]
   16e34:	ldm	r5, {r2, r3}
   16e38:	ldr	r7, [r5, #24]
   16e3c:	ldr	r6, [r5, #20]
   16e40:	str	ip, [sp, #24]
   16e44:	ldr	lr, [r5, #16]
   16e48:	str	r1, [sp, #20]
   16e4c:	ldr	r1, [r5, #8]
   16e50:	ldr	ip, [r5, #12]
   16e54:	mov	r0, r4
   16e58:	str	r7, [sp, #16]
   16e5c:	stm	sp, {r1, ip, lr}
   16e60:	str	r6, [sp, #12]
   16e64:	ldr	r1, [pc, #344]	; 16fc4 <argp_parse@@Base+0x12d4>
   16e68:	bl	11a0c <fprintf@plt>
   16e6c:	b	16e24 <argp_parse@@Base+0x1134>
   16e70:	ldr	r2, [r5]
   16e74:	mov	r0, r4
   16e78:	ldr	r1, [pc, #328]	; 16fc8 <argp_parse@@Base+0x12d8>
   16e7c:	add	sp, sp, #36	; 0x24
   16e80:	pop	{r4, r5, r6, r7, lr}
   16e84:	b	11a0c <fprintf@plt>
   16e88:	mov	r0, r4
   16e8c:	ldm	r5, {r2, r3}
   16e90:	ldr	r1, [pc, #308]	; 16fcc <argp_parse@@Base+0x12dc>
   16e94:	add	sp, sp, #36	; 0x24
   16e98:	pop	{r4, r5, r6, r7, lr}
   16e9c:	b	11a0c <fprintf@plt>
   16ea0:	ldr	r1, [r5, #8]
   16ea4:	ldm	r5, {r2, r3}
   16ea8:	mov	r0, r4
   16eac:	str	r1, [sp, #56]	; 0x38
   16eb0:	ldr	r1, [pc, #280]	; 16fd0 <argp_parse@@Base+0x12e0>
   16eb4:	add	sp, sp, #36	; 0x24
   16eb8:	pop	{r4, r5, r6, r7, lr}
   16ebc:	b	11a0c <fprintf@plt>
   16ec0:	ldr	r1, [r5, #8]
   16ec4:	ldr	ip, [r5, #12]
   16ec8:	ldm	r5, {r2, r3}
   16ecc:	mov	r0, r4
   16ed0:	str	r1, [sp, #56]	; 0x38
   16ed4:	str	ip, [sp, #60]	; 0x3c
   16ed8:	ldr	r1, [pc, #244]	; 16fd4 <argp_parse@@Base+0x12e4>
   16edc:	add	sp, sp, #36	; 0x24
   16ee0:	pop	{r4, r5, r6, r7, lr}
   16ee4:	b	11a0c <fprintf@plt>
   16ee8:	add	r1, r5, #8
   16eec:	ldm	r5, {r2, r3}
   16ef0:	ldm	r1, {r1, ip, lr}
   16ef4:	mov	r0, r4
   16ef8:	stm	sp, {r1, ip, lr}
   16efc:	ldr	r1, [pc, #212]	; 16fd8 <argp_parse@@Base+0x12e8>
   16f00:	bl	11a0c <fprintf@plt>
   16f04:	b	16e24 <argp_parse@@Base+0x1134>
   16f08:	add	r1, r5, #8
   16f0c:	ldr	r6, [r5, #20]
   16f10:	ldm	r1, {r1, ip, lr}
   16f14:	mov	r0, r4
   16f18:	ldm	r5, {r2, r3}
   16f1c:	str	r6, [sp, #12]
   16f20:	stm	sp, {r1, ip, lr}
   16f24:	ldr	r1, [pc, #176]	; 16fdc <argp_parse@@Base+0x12ec>
   16f28:	bl	11a0c <fprintf@plt>
   16f2c:	b	16e24 <argp_parse@@Base+0x1134>
   16f30:	add	r1, r5, #8
   16f34:	ldr	r7, [r5, #24]
   16f38:	ldm	r1, {r1, ip, lr}
   16f3c:	mov	r0, r4
   16f40:	ldr	r6, [r5, #20]
   16f44:	ldm	r5, {r2, r3}
   16f48:	stm	sp, {r1, ip, lr}
   16f4c:	str	r7, [sp, #16]
   16f50:	str	r6, [sp, #12]
   16f54:	ldr	r1, [pc, #132]	; 16fe0 <argp_parse@@Base+0x12f0>
   16f58:	bl	11a0c <fprintf@plt>
   16f5c:	b	16e24 <argp_parse@@Base+0x1134>
   16f60:	ldr	r1, [r5, #28]
   16f64:	ldm	r5, {r2, r3}
   16f68:	ldr	r7, [r5, #24]
   16f6c:	ldr	r6, [r5, #20]
   16f70:	ldr	lr, [r5, #16]
   16f74:	str	r1, [sp, #20]
   16f78:	ldr	r1, [r5, #8]
   16f7c:	ldr	ip, [r5, #12]
   16f80:	mov	r0, r4
   16f84:	str	r7, [sp, #16]
   16f88:	stm	sp, {r1, ip, lr}
   16f8c:	str	r6, [sp, #12]
   16f90:	ldr	r1, [pc, #76]	; 16fe4 <argp_parse@@Base+0x12f4>
   16f94:	bl	11a0c <fprintf@plt>
   16f98:	b	16e24 <argp_parse@@Base+0x1134>
   16f9c:	ldr	r1, [pc, #68]	; 16fe8 <argp_parse@@Base+0x12f8>
   16fa0:	bl	11a0c <fprintf@plt>
   16fa4:	b	16d74 <argp_parse@@Base+0x1084>
   16fa8:	andeq	ip, r1, r0, ror #15
   16fac:	andeq	r0, r0, r6, ror #15
   16fb0:	strdeq	ip, [r1], -r4
   16fb4:	strdeq	ip, [r1], -r4
   16fb8:	andeq	ip, r1, ip, lsl r8
   16fbc:	strdeq	ip, [r1], -r8
   16fc0:	andeq	ip, r1, r8, lsl #20
   16fc4:	ldrdeq	ip, [r1], -r4
   16fc8:	andeq	ip, r1, r8, asr #17
   16fcc:	ldrdeq	ip, [r1], -r8
   16fd0:	strdeq	ip, [r1], -r0
   16fd4:	andeq	ip, r1, ip, lsl #18
   16fd8:	andeq	ip, r1, ip, lsr #18
   16fdc:	andeq	ip, r1, r0, asr r9
   16fe0:	andeq	ip, r1, r8, ror r9
   16fe4:	andeq	ip, r1, r4, lsr #19
   16fe8:	andeq	ip, r1, ip, ror #15
   16fec:	push	{r4, r5, lr}
   16ff0:	sub	sp, sp, #12
   16ff4:	ldr	r5, [sp, #24]
   16ff8:	ldr	ip, [r5]
   16ffc:	cmp	ip, #0
   17000:	beq	1701c <argp_parse@@Base+0x132c>
   17004:	mov	lr, r5
   17008:	mov	ip, #0
   1700c:	ldr	r4, [lr, #4]!
   17010:	add	ip, ip, #1
   17014:	cmp	r4, #0
   17018:	bne	1700c <argp_parse@@Base+0x131c>
   1701c:	stm	sp, {r5, ip}
   17020:	bl	16d44 <argp_parse@@Base+0x1054>
   17024:	add	sp, sp, #12
   17028:	pop	{r4, r5, pc}
   1702c:	push	{r4, r5, lr}
   17030:	sub	sp, sp, #52	; 0x34
   17034:	add	r5, sp, #4
   17038:	ldr	r4, [sp, #64]	; 0x40
   1703c:	mov	ip, #0
   17040:	sub	r4, r4, #4
   17044:	ldr	lr, [r4, #4]!
   17048:	cmp	lr, #0
   1704c:	str	lr, [r5, #4]!
   17050:	beq	17060 <argp_parse@@Base+0x1370>
   17054:	add	ip, ip, #1
   17058:	cmp	ip, #10
   1705c:	bne	17044 <argp_parse@@Base+0x1354>
   17060:	add	lr, sp, #8
   17064:	str	ip, [sp, #4]
   17068:	str	lr, [sp]
   1706c:	bl	16d44 <argp_parse@@Base+0x1054>
   17070:	add	sp, sp, #52	; 0x34
   17074:	pop	{r4, r5, pc}
   17078:	push	{r3}		; (str r3, [sp, #-4]!)
   1707c:	push	{r4, lr}
   17080:	sub	sp, sp, #60	; 0x3c
   17084:	add	lr, sp, #56	; 0x38
   17088:	add	r3, sp, #72	; 0x48
   1708c:	str	r3, [lr, #-44]!	; 0xffffffd4
   17090:	add	r4, sp, #68	; 0x44
   17094:	mov	r3, #0
   17098:	ldr	ip, [r4, #4]!
   1709c:	cmp	ip, #0
   170a0:	str	ip, [lr, #4]!
   170a4:	beq	170b4 <argp_parse@@Base+0x13c4>
   170a8:	add	r3, r3, #1
   170ac:	cmp	r3, #10
   170b0:	bne	17098 <argp_parse@@Base+0x13a8>
   170b4:	add	ip, sp, #16
   170b8:	str	r3, [sp, #4]
   170bc:	str	ip, [sp]
   170c0:	ldr	r3, [sp, #68]	; 0x44
   170c4:	bl	16d44 <argp_parse@@Base+0x1054>
   170c8:	add	sp, sp, #60	; 0x3c
   170cc:	pop	{r4, lr}
   170d0:	add	sp, sp, #4
   170d4:	bx	lr
   170d8:	ldr	r3, [pc, #56]	; 17118 <argp_parse@@Base+0x1428>
   170dc:	push	{r4, lr}
   170e0:	mov	r0, #10
   170e4:	ldr	r1, [r3]
   170e8:	bl	11b08 <fputc@plt>
   170ec:	ldr	r1, [pc, #40]	; 1711c <argp_parse@@Base+0x142c>
   170f0:	ldr	r0, [pc, #40]	; 17120 <argp_parse@@Base+0x1430>
   170f4:	bl	11790 <printf@plt>
   170f8:	ldr	r1, [pc, #36]	; 17124 <argp_parse@@Base+0x1434>
   170fc:	ldr	r2, [pc, #36]	; 17128 <argp_parse@@Base+0x1438>
   17100:	ldr	r0, [pc, #36]	; 1712c <argp_parse@@Base+0x143c>
   17104:	bl	11790 <printf@plt>
   17108:	ldr	r1, [pc, #32]	; 17130 <argp_parse@@Base+0x1440>
   1710c:	ldr	r0, [pc, #32]	; 17134 <argp_parse@@Base+0x1444>
   17110:	pop	{r4, lr}
   17114:	b	11790 <printf@plt>
   17118:			; <UNDEFINED> instruction: 0x0002e3b4
   1711c:	andeq	ip, r1, r4, asr #20
   17120:	andeq	ip, r1, ip, asr sl
   17124:	andeq	ip, r1, ip, lsl #15
   17128:	andeq	ip, r1, r0, ror sl
   1712c:	muleq	r1, r8, sl
   17130:	andeq	ip, r1, ip, lsr #21
   17134:	andeq	ip, r1, ip, asr #21
   17138:	cmp	r1, #0
   1713c:	cmpne	r0, #0
   17140:	moveq	r1, #1
   17144:	moveq	r0, r1
   17148:	umull	r2, r3, r0, r1
   1714c:	adds	r3, r3, #0
   17150:	movne	r3, #1
   17154:	cmp	r2, #0
   17158:	blt	17168 <argp_parse@@Base+0x1478>
   1715c:	cmp	r3, #0
   17160:	bne	17168 <argp_parse@@Base+0x1478>
   17164:	b	11724 <calloc@plt>
   17168:	push	{r4, lr}
   1716c:	bl	11a24 <__errno_location@plt>
   17170:	mov	r3, #12
   17174:	str	r3, [r0]
   17178:	mov	r0, #0
   1717c:	pop	{r4, pc}
   17180:	cmp	r0, #0
   17184:	moveq	r0, #1
   17188:	cmp	r0, #0
   1718c:	blt	17194 <argp_parse@@Base+0x14a4>
   17190:	b	11958 <malloc@plt>
   17194:	push	{r4, lr}
   17198:	bl	11a24 <__errno_location@plt>
   1719c:	mov	r3, #12
   171a0:	str	r3, [r0]
   171a4:	mov	r0, #0
   171a8:	pop	{r4, pc}
   171ac:	cmp	r0, #0
   171b0:	beq	171d4 <argp_parse@@Base+0x14e4>
   171b4:	cmp	r1, #0
   171b8:	push	{lr}		; (str lr, [sp, #-4]!)
   171bc:	sub	sp, sp, #12
   171c0:	beq	171dc <argp_parse@@Base+0x14ec>
   171c4:	blt	171f4 <argp_parse@@Base+0x1504>
   171c8:	add	sp, sp, #12
   171cc:	pop	{lr}		; (ldr lr, [sp], #4)
   171d0:	b	118a4 <realloc@plt>
   171d4:	mov	r0, r1
   171d8:	b	17180 <argp_parse@@Base+0x1490>
   171dc:	str	r1, [sp, #4]
   171e0:	bl	16b88 <argp_parse@@Base+0xe98>
   171e4:	ldr	r3, [sp, #4]
   171e8:	mov	r0, r3
   171ec:	add	sp, sp, #12
   171f0:	pop	{pc}		; (ldr pc, [sp], #4)
   171f4:	bl	11a24 <__errno_location@plt>
   171f8:	mov	r2, #12
   171fc:	mov	r3, #0
   17200:	str	r2, [r0]
   17204:	b	171e8 <argp_parse@@Base+0x14f8>
   17208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1720c:	sub	sp, sp, #20
   17210:	ldr	r5, [r0, #4]
   17214:	ldr	r4, [r0]
   17218:	cmp	r5, #0
   1721c:	ldr	r7, [r0, #8]
   17220:	beq	172f8 <argp_parse@@Base+0x1608>
   17224:	stmib	sp, {r1, r2, r3}
   17228:	mov	r6, #1
   1722c:	str	r4, [sp]
   17230:	mov	r8, #0
   17234:	b	17254 <argp_parse@@Base+0x1564>
   17238:	mov	r3, r6
   1723c:	subs	r5, r5, #1
   17240:	moveq	r3, #0
   17244:	andne	r3, r3, #1
   17248:	cmp	r3, #0
   1724c:	add	r4, r4, #24
   17250:	beq	172c0 <argp_parse@@Base+0x15d0>
   17254:	ldr	fp, [r4, #12]
   17258:	ands	r9, fp, #8
   1725c:	movne	r3, r6
   17260:	movne	r9, r8
   17264:	bne	1723c <argp_parse@@Base+0x154c>
   17268:	ldr	sl, [r4, #4]
   1726c:	sub	r3, sl, #1
   17270:	cmp	r3, #254	; 0xfe
   17274:	bhi	17238 <argp_parse@@Base+0x1548>
   17278:	bl	119ac <__ctype_b_loc@plt>
   1727c:	lsl	r3, sl, #1
   17280:	ldr	r1, [r0]
   17284:	ldrh	r3, [r1, r3]
   17288:	tst	r3, #16384	; 0x4000
   1728c:	beq	17238 <argp_parse@@Base+0x1548>
   17290:	ldrb	r3, [r7]
   17294:	cmp	r3, sl
   17298:	bne	17238 <argp_parse@@Base+0x1548>
   1729c:	ldr	r3, [sp]
   172a0:	tst	fp, #4
   172a4:	moveq	r3, r4
   172a8:	tst	fp, #2
   172ac:	str	r3, [sp]
   172b0:	movne	r3, r6
   172b4:	beq	172d0 <argp_parse@@Base+0x15e0>
   172b8:	add	r7, r7, #1
   172bc:	b	1723c <argp_parse@@Base+0x154c>
   172c0:	mov	sl, r9
   172c4:	mov	r0, sl
   172c8:	add	sp, sp, #20
   172cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172d0:	ldr	r3, [sp, #12]
   172d4:	ldr	r2, [sp, #8]
   172d8:	ldr	r1, [sp]
   172dc:	mov	r0, r4
   172e0:	ldr	ip, [sp, #4]
   172e4:	blx	ip
   172e8:	clz	r3, r0
   172ec:	mov	r9, r0
   172f0:	lsr	r3, r3, #5
   172f4:	b	172b8 <argp_parse@@Base+0x15c8>
   172f8:	mov	sl, r5
   172fc:	b	172c4 <argp_parse@@Base+0x15d4>
   17300:	push	{r4, r5, r6, lr}
   17304:	ldr	r4, [r0, #12]
   17308:	ands	r4, r4, #8
   1730c:	movne	r4, #0
   17310:	bne	1733c <argp_parse@@Base+0x164c>
   17314:	ldr	r5, [r0, #4]
   17318:	sub	r3, r5, #1
   1731c:	cmp	r3, #254	; 0xfe
   17320:	bhi	1733c <argp_parse@@Base+0x164c>
   17324:	bl	119ac <__ctype_b_loc@plt>
   17328:	lsl	r3, r5, #1
   1732c:	ldr	r2, [r0]
   17330:	ldrh	r3, [r2, r3]
   17334:	tst	r3, #16384	; 0x4000
   17338:	movne	r4, r5
   1733c:	mov	r0, r4
   17340:	pop	{r4, r5, r6, pc}
   17344:	push	{r4, lr}
   17348:	mov	r4, r0
   1734c:	bl	119ac <__ctype_b_loc@plt>
   17350:	ldr	r2, [r4]
   17354:	ldr	lr, [r0]
   17358:	b	17360 <argp_parse@@Base+0x1670>
   1735c:	str	r2, [r4]
   17360:	ldrb	r1, [r2]
   17364:	mov	r3, r2
   17368:	add	r2, r2, #1
   1736c:	lsl	r0, r1, #1
   17370:	ldrh	ip, [lr, r0]
   17374:	tst	ip, #8192	; 0x2000
   17378:	bne	1735c <argp_parse@@Base+0x166c>
   1737c:	subs	r0, r1, #45	; 0x2d
   17380:	movne	r0, #1
   17384:	cmp	r1, #0
   17388:	popeq	{r4, pc}
   1738c:	tst	ip, #8
   17390:	popne	{r4, pc}
   17394:	add	r3, r3, #1
   17398:	str	r3, [r4]
   1739c:	ldrb	r2, [r3]
   173a0:	cmp	r2, #0
   173a4:	lsl	r2, r2, #1
   173a8:	popeq	{r4, pc}
   173ac:	ldrh	r2, [lr, r2]
   173b0:	tst	r2, #8
   173b4:	beq	17394 <argp_parse@@Base+0x16a4>
   173b8:	pop	{r4, pc}
   173bc:	push	{r4, r5, r6, lr}
   173c0:	mov	r5, r0
   173c4:	ldr	r0, [r0, #12]
   173c8:	cmp	r0, #0
   173cc:	beq	173e0 <argp_parse@@Base+0x16f0>
   173d0:	ldr	r4, [r0, #24]
   173d4:	bl	16b88 <argp_parse@@Base+0xe98>
   173d8:	subs	r0, r4, #0
   173dc:	bne	173d0 <argp_parse@@Base+0x16e0>
   173e0:	ldr	r3, [r5, #4]
   173e4:	cmp	r3, #0
   173e8:	beq	173fc <argp_parse@@Base+0x170c>
   173ec:	ldr	r0, [r5]
   173f0:	bl	16b88 <argp_parse@@Base+0xe98>
   173f4:	ldr	r0, [r5, #8]
   173f8:	bl	16b88 <argp_parse@@Base+0xe98>
   173fc:	mov	r0, r5
   17400:	pop	{r4, r5, r6, lr}
   17404:	b	16b88 <argp_parse@@Base+0xe98>
   17408:	push	{r4, r5, r6, r7, r8, lr}
   1740c:	mov	r5, r1
   17410:	ldr	r3, [r0, #28]
   17414:	ldr	r1, [r0, #24]
   17418:	ldr	r2, [r0, #16]
   1741c:	sub	r3, r3, r1
   17420:	cmp	r3, r2
   17424:	mov	r4, r0
   17428:	bhi	17494 <argp_parse@@Base+0x17a4>
   1742c:	ldr	r1, [r4, #20]
   17430:	mov	r6, #32
   17434:	cmp	r1, #0
   17438:	subge	r5, r5, r1
   1743c:	mov	r7, #1
   17440:	cmp	r5, #0
   17444:	sub	r5, r5, #1
   17448:	ble	17474 <argp_parse@@Base+0x1784>
   1744c:	ldr	r3, [r4, #28]
   17450:	ldr	r2, [r4, #32]
   17454:	cmp	r3, r2
   17458:	bcs	17478 <argp_parse@@Base+0x1788>
   1745c:	add	r2, r3, #1
   17460:	cmp	r5, #0
   17464:	str	r2, [r4, #28]
   17468:	sub	r5, r5, #1
   1746c:	strb	r6, [r3]
   17470:	bgt	1744c <argp_parse@@Base+0x175c>
   17474:	pop	{r4, r5, r6, r7, r8, pc}
   17478:	mov	r1, r7
   1747c:	mov	r0, r4
   17480:	bl	1b848 <argp_error@@Base+0x1444>
   17484:	cmp	r0, #0
   17488:	beq	17440 <argp_parse@@Base+0x1750>
   1748c:	ldr	r3, [r4, #28]
   17490:	b	1745c <argp_parse@@Base+0x176c>
   17494:	bl	1b1b8 <argp_error@@Base+0xdb4>
   17498:	b	1742c <argp_parse@@Base+0x173c>
   1749c:	push	{r4, r5, r6, lr}
   174a0:	subs	r4, r2, #0
   174a4:	popeq	{r4, r5, r6, pc}
   174a8:	ldr	ip, [r4, #20]
   174ac:	cmp	ip, #0
   174b0:	popeq	{r4, r5, r6, pc}
   174b4:	mov	r6, r1
   174b8:	mov	r5, r0
   174bc:	mov	r1, r3
   174c0:	mov	r0, r4
   174c4:	bl	16a2c <argp_parse@@Base+0xd3c>
   174c8:	ldr	r3, [r4, #20]
   174cc:	mov	r1, r5
   174d0:	mov	r2, r0
   174d4:	mov	r0, r6
   174d8:	pop	{r4, r5, r6, lr}
   174dc:	bx	r3
   174e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174e4:	mov	r5, r2
   174e8:	sub	sp, sp, #12
   174ec:	mov	r2, r1
   174f0:	ldr	r3, [r5, #16]
   174f4:	ldr	r1, [pc, #488]	; 176e4 <argp_parse@@Base+0x19f4>
   174f8:	mov	r8, r0
   174fc:	bl	1749c <argp_parse@@Base+0x17ac>
   17500:	subs	r6, r0, #0
   17504:	beq	17610 <argp_parse@@Base+0x1920>
   17508:	ldrb	r3, [r6]
   1750c:	cmp	r3, #0
   17510:	beq	17604 <argp_parse@@Base+0x1914>
   17514:	ldr	r3, [r5, #8]
   17518:	ldr	r3, [r3]
   1751c:	cmp	r3, #0
   17520:	beq	17548 <argp_parse@@Base+0x1858>
   17524:	ldr	r4, [r5, #4]
   17528:	ldr	r3, [r4, #28]
   1752c:	ldr	r2, [r4, #32]
   17530:	cmp	r3, r2
   17534:	bcs	176c8 <argp_parse@@Base+0x19d8>
   17538:	add	r1, r3, #1
   1753c:	mov	r2, #10
   17540:	str	r1, [r4, #28]
   17544:	strb	r2, [r3]
   17548:	ldr	sl, [pc, #408]	; 176e8 <argp_parse@@Base+0x19f8>
   1754c:	ldr	r0, [r5, #4]
   17550:	ldr	r1, [sl, #24]
   17554:	bl	17408 <argp_parse@@Base+0x1718>
   17558:	ldr	r4, [r5, #4]
   1755c:	ldr	r9, [sl, #24]
   17560:	ldr	r7, [r4, #28]
   17564:	ldr	r3, [r4, #24]
   17568:	ldr	r2, [r4, #16]
   1756c:	sub	r3, r7, r3
   17570:	cmp	r3, r2
   17574:	strls	r9, [r4, #4]
   17578:	movls	fp, r4
   1757c:	bhi	1764c <argp_parse@@Base+0x195c>
   17580:	str	r9, [fp, #12]
   17584:	mov	r0, r6
   17588:	bl	119dc <strlen@plt>
   1758c:	subs	r9, r0, #0
   17590:	beq	175c8 <argp_parse@@Base+0x18d8>
   17594:	ldr	r2, [r4, #32]
   17598:	add	r3, r7, r9
   1759c:	cmp	r2, r3
   175a0:	bcc	17630 <argp_parse@@Base+0x1940>
   175a4:	mov	r2, r9
   175a8:	mov	r0, r7
   175ac:	mov	r1, r6
   175b0:	bl	11808 <memcpy@plt>
   175b4:	ldr	r3, [r4, #28]
   175b8:	add	r9, r3, r9
   175bc:	str	r9, [r4, #28]
   175c0:	ldr	r4, [r5, #4]
   175c4:	ldr	r7, [r4, #28]
   175c8:	ldr	r3, [r4, #24]
   175cc:	ldr	r2, [r4, #16]
   175d0:	sub	r3, r7, r3
   175d4:	cmp	r3, r2
   175d8:	movls	r9, r4
   175dc:	bhi	17698 <argp_parse@@Base+0x19a8>
   175e0:	ldr	r2, [r9, #32]
   175e4:	mov	r3, #0
   175e8:	cmp	r2, r7
   175ec:	str	r3, [r4, #4]
   175f0:	bls	176ac <argp_parse@@Base+0x19bc>
   175f4:	add	r2, r7, #1
   175f8:	mov	r3, #10
   175fc:	str	r2, [r9, #28]
   17600:	strb	r3, [r7]
   17604:	ldr	r3, [r5, #8]
   17608:	mov	r2, #1
   1760c:	str	r2, [r3, #4]
   17610:	cmp	r8, r6
   17614:	beq	17628 <argp_parse@@Base+0x1938>
   17618:	mov	r0, r6
   1761c:	add	sp, sp, #12
   17620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17624:	b	16b88 <argp_parse@@Base+0xe98>
   17628:	add	sp, sp, #12
   1762c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17630:	mov	r1, r9
   17634:	mov	r0, r4
   17638:	bl	1b848 <argp_error@@Base+0x1444>
   1763c:	cmp	r0, #0
   17640:	beq	175c0 <argp_parse@@Base+0x18d0>
   17644:	ldr	r7, [r4, #28]
   17648:	b	175a4 <argp_parse@@Base+0x18b4>
   1764c:	mov	r0, r4
   17650:	str	r9, [sp, #4]
   17654:	bl	1b1b8 <argp_error@@Base+0xdb4>
   17658:	ldr	fp, [r5, #4]
   1765c:	ldr	r3, [sp, #4]
   17660:	ldr	r9, [sl, #24]
   17664:	ldr	r7, [fp, #28]
   17668:	ldr	r2, [fp, #24]
   1766c:	ldr	r1, [fp, #16]
   17670:	sub	r2, r7, r2
   17674:	cmp	r2, r1
   17678:	str	r3, [r4, #4]
   1767c:	movls	r4, fp
   17680:	bls	17580 <argp_parse@@Base+0x1890>
   17684:	mov	r0, fp
   17688:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1768c:	ldr	r4, [r5, #4]
   17690:	ldr	r7, [r4, #28]
   17694:	b	17580 <argp_parse@@Base+0x1890>
   17698:	mov	r0, r4
   1769c:	bl	1b1b8 <argp_error@@Base+0xdb4>
   176a0:	ldr	r9, [r5, #4]
   176a4:	ldr	r7, [r9, #28]
   176a8:	b	175e0 <argp_parse@@Base+0x18f0>
   176ac:	mov	r1, #1
   176b0:	mov	r0, r9
   176b4:	bl	1b848 <argp_error@@Base+0x1444>
   176b8:	cmp	r0, #0
   176bc:	beq	17604 <argp_parse@@Base+0x1914>
   176c0:	ldr	r7, [r9, #28]
   176c4:	b	175f4 <argp_parse@@Base+0x1904>
   176c8:	mov	r1, #1
   176cc:	mov	r0, r4
   176d0:	bl	1b848 <argp_error@@Base+0x1444>
   176d4:	cmp	r0, #0
   176d8:	beq	17548 <argp_parse@@Base+0x1858>
   176dc:	ldr	r3, [r4, #28]
   176e0:	b	17538 <argp_parse@@Base+0x1848>
   176e4:	andeq	r0, r0, #3
   176e8:	andeq	lr, r2, r0, ror r3
   176ec:	ldr	r3, [r1, #12]
   176f0:	push	{r4, r5, r6, r7, r8, lr}
   176f4:	cmp	r3, #0
   176f8:	mov	r4, r1
   176fc:	mov	r6, r0
   17700:	beq	177e8 <argp_parse@@Base+0x1af8>
   17704:	ldr	r3, [r1, #8]
   17708:	ldr	r2, [r1]
   1770c:	ldr	r7, [r3]
   17710:	ldr	r3, [r3, #4]
   17714:	ldr	r5, [r2, #16]
   17718:	cmp	r3, #0
   1771c:	cmpne	r7, #0
   17720:	beq	17758 <argp_parse@@Base+0x1a68>
   17724:	ldr	r2, [r2, #12]
   17728:	ldr	r3, [r7, #12]
   1772c:	cmp	r2, r3
   17730:	beq	17758 <argp_parse@@Base+0x1a68>
   17734:	ldr	r8, [r1, #4]
   17738:	ldr	r3, [r8, #28]
   1773c:	ldr	r2, [r8, #32]
   17740:	cmp	r3, r2
   17744:	bcs	17878 <argp_parse@@Base+0x1b88>
   17748:	add	r1, r3, #1
   1774c:	mov	r2, #10
   17750:	str	r1, [r8, #28]
   17754:	strb	r2, [r3]
   17758:	cmp	r5, #0
   1775c:	beq	17844 <argp_parse@@Base+0x1b54>
   17760:	ldr	r0, [r5]
   17764:	cmp	r0, #0
   17768:	beq	17844 <argp_parse@@Base+0x1b54>
   1776c:	ldrb	r3, [r0]
   17770:	cmp	r3, #0
   17774:	beq	17844 <argp_parse@@Base+0x1b54>
   17778:	cmp	r7, #0
   1777c:	beq	177ac <argp_parse@@Base+0x1abc>
   17780:	ldr	r3, [r7, #16]
   17784:	cmp	r5, r3
   17788:	beq	17844 <argp_parse@@Base+0x1b54>
   1778c:	cmp	r3, #0
   17790:	beq	177ac <argp_parse@@Base+0x1abc>
   17794:	ldr	r3, [r3, #12]
   17798:	cmp	r3, #0
   1779c:	cmpne	r5, r3
   177a0:	bne	17794 <argp_parse@@Base+0x1aa4>
   177a4:	cmp	r5, r3
   177a8:	beq	17844 <argp_parse@@Base+0x1b54>
   177ac:	ldr	r3, [r4, #4]
   177b0:	ldr	r1, [r5, #16]
   177b4:	mov	r2, r4
   177b8:	ldr	r7, [r3, #12]
   177bc:	bl	174e0 <argp_parse@@Base+0x17f0>
   177c0:	ldr	r5, [r4, #4]
   177c4:	mov	r0, r5
   177c8:	ldr	r3, [r5, #28]
   177cc:	ldr	r1, [r5, #24]
   177d0:	ldr	r2, [r5, #16]
   177d4:	sub	r3, r3, r1
   177d8:	cmp	r3, r2
   177dc:	bhi	1786c <argp_parse@@Base+0x1b7c>
   177e0:	str	r7, [r5, #12]
   177e4:	b	17848 <argp_parse@@Base+0x1b58>
   177e8:	ldr	r5, [r1, #4]
   177ec:	ldr	r3, [r5, #28]
   177f0:	ldr	r1, [r5, #32]
   177f4:	add	r2, r3, #2
   177f8:	cmp	r1, r2
   177fc:	bcc	17828 <argp_parse@@Base+0x1b38>
   17800:	ldr	r2, [pc, #140]	; 17894 <argp_parse@@Base+0x1ba4>
   17804:	mov	r1, r6
   17808:	ldrh	r2, [r2]
   1780c:	strh	r2, [r3]
   17810:	ldr	r3, [r5, #28]
   17814:	ldr	r0, [r4, #4]
   17818:	add	r3, r3, #2
   1781c:	str	r3, [r5, #28]
   17820:	pop	{r4, r5, r6, r7, r8, lr}
   17824:	b	17408 <argp_parse@@Base+0x1718>
   17828:	mov	r1, #2
   1782c:	mov	r0, r5
   17830:	bl	1b848 <argp_error@@Base+0x1444>
   17834:	cmp	r0, #0
   17838:	beq	1785c <argp_parse@@Base+0x1b6c>
   1783c:	ldr	r3, [r5, #28]
   17840:	b	17800 <argp_parse@@Base+0x1b10>
   17844:	ldr	r0, [r4, #4]
   17848:	mov	r3, #0
   1784c:	str	r3, [r4, #12]
   17850:	mov	r1, r6
   17854:	pop	{r4, r5, r6, r7, r8, lr}
   17858:	b	17408 <argp_parse@@Base+0x1718>
   1785c:	ldr	r0, [r4, #4]
   17860:	mov	r1, r6
   17864:	pop	{r4, r5, r6, r7, r8, lr}
   17868:	b	17408 <argp_parse@@Base+0x1718>
   1786c:	bl	1b1b8 <argp_error@@Base+0xdb4>
   17870:	ldr	r0, [r4, #4]
   17874:	b	177e0 <argp_parse@@Base+0x1af0>
   17878:	mov	r1, #1
   1787c:	mov	r0, r8
   17880:	bl	1b848 <argp_error@@Base+0x1444>
   17884:	cmp	r0, #0
   17888:	beq	17758 <argp_parse@@Base+0x1a68>
   1788c:	ldr	r3, [r8, #28]
   17890:	b	17748 <argp_parse@@Base+0x1a58>
   17894:	andeq	ip, r1, ip, asr #23
   17898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1789c:	mov	r7, r3
   178a0:	ldr	sl, [r0, #12]
   178a4:	sub	sp, sp, #36	; 0x24
   178a8:	ldr	r3, [r0, #16]
   178ac:	cmp	sl, #0
   178b0:	mov	fp, r0
   178b4:	mov	r6, r2
   178b8:	str	r3, [sp, #16]
   178bc:	mov	r9, r1
   178c0:	ldr	r8, [sp, #72]	; 0x48
   178c4:	ldr	r5, [sp, #76]	; 0x4c
   178c8:	beq	17c98 <argp_parse@@Base+0x1fa8>
   178cc:	mov	r1, #11
   178d0:	mov	r0, sl
   178d4:	bl	119f4 <strchr@plt>
   178d8:	cmp	r6, #0
   178dc:	bne	17bb4 <argp_parse@@Base+0x1ec4>
   178e0:	cmp	r0, #0
   178e4:	ldr	r3, [fp, #20]
   178e8:	beq	17df0 <argp_parse@@Base+0x2100>
   178ec:	cmp	r3, #0
   178f0:	sub	r4, r0, sl
   178f4:	beq	17d88 <argp_parse@@Base+0x2098>
   178f8:	cmp	r4, #0
   178fc:	beq	17d28 <argp_parse@@Base+0x2038>
   17900:	mov	r0, sl
   17904:	mov	r1, r4
   17908:	bl	117f0 <strndup@plt>
   1790c:	mov	r3, #1
   17910:	str	r3, [sp, #24]
   17914:	mov	sl, r0
   17918:	adds	r3, r0, #0
   1791c:	movne	r3, #1
   17920:	str	r3, [sp, #20]
   17924:	mov	r1, r9
   17928:	mov	r0, fp
   1792c:	bl	16a2c <argp_parse@@Base+0xd3c>
   17930:	ldr	r3, [fp, #20]
   17934:	str	r0, [sp, #12]
   17938:	ldr	r0, [pc, #1272]	; 17e38 <argp_parse@@Base+0x2148>
   1793c:	ldr	r2, [sp, #12]
   17940:	mov	r1, sl
   17944:	blx	r3
   17948:	subs	r3, r0, #0
   1794c:	beq	17cd8 <argp_parse@@Base+0x1fe8>
   17950:	cmp	r7, #0
   17954:	beq	17978 <argp_parse@@Base+0x1c88>
   17958:	ldr	r2, [r5, #28]
   1795c:	ldr	r1, [r5, #32]
   17960:	cmp	r2, r1
   17964:	bcs	17ce0 <argp_parse@@Base+0x1ff0>
   17968:	add	r0, r2, #1
   1796c:	mov	r1, #10
   17970:	str	r0, [r5, #28]
   17974:	strb	r1, [r2]
   17978:	ldr	r2, [sp, #24]
   1797c:	cmp	r3, sl
   17980:	movne	r2, #0
   17984:	andeq	r2, r2, #1
   17988:	cmp	r2, #0
   1798c:	beq	17bf8 <argp_parse@@Base+0x1f08>
   17990:	ldr	r0, [r5, #28]
   17994:	ldr	r1, [r5, #32]
   17998:	add	r2, r0, r4
   1799c:	cmp	r1, r2
   179a0:	bcs	17c58 <argp_parse@@Base+0x1f68>
   179a4:	mov	r1, r4
   179a8:	mov	r0, r5
   179ac:	str	r3, [sp, #24]
   179b0:	bl	1b848 <argp_error@@Base+0x1444>
   179b4:	ldr	r3, [sp, #24]
   179b8:	cmp	r0, #0
   179bc:	bne	17c54 <argp_parse@@Base+0x1f64>
   179c0:	ldr	r4, [r5, #28]
   179c4:	ldr	r1, [r5, #24]
   179c8:	ldr	r2, [r5, #16]
   179cc:	sub	r4, r4, r1
   179d0:	cmp	r4, r2
   179d4:	bhi	17c7c <argp_parse@@Base+0x1f8c>
   179d8:	ldr	r2, [r5, #20]
   179dc:	ldr	r1, [r5, #4]
   179e0:	bic	r2, r2, r2, asr #31
   179e4:	cmp	r1, r2
   179e8:	bcs	17a0c <argp_parse@@Base+0x1d1c>
   179ec:	ldr	r2, [r5, #28]
   179f0:	ldr	r1, [r5, #32]
   179f4:	cmp	r2, r1
   179f8:	bcs	17d04 <argp_parse@@Base+0x2014>
   179fc:	add	r0, r2, #1
   17a00:	mov	r1, #10
   17a04:	str	r0, [r5, #28]
   17a08:	strb	r1, [r2]
   17a0c:	cmp	r3, sl
   17a10:	moveq	r4, #1
   17a14:	beq	17a24 <argp_parse@@Base+0x1d34>
   17a18:	mov	r0, r3
   17a1c:	bl	16b88 <argp_parse@@Base+0xe98>
   17a20:	mov	r4, #1
   17a24:	ldr	r3, [sp, #20]
   17a28:	cmp	r3, #0
   17a2c:	beq	17a44 <argp_parse@@Base+0x1d54>
   17a30:	ldr	r3, [fp, #20]
   17a34:	cmp	r3, #0
   17a38:	beq	17b28 <argp_parse@@Base+0x1e38>
   17a3c:	mov	r0, sl
   17a40:	bl	16b88 <argp_parse@@Base+0xe98>
   17a44:	cmp	r6, #0
   17a48:	beq	17b28 <argp_parse@@Base+0x1e38>
   17a4c:	ldr	r3, [fp, #20]
   17a50:	cmp	r3, #0
   17a54:	beq	17b28 <argp_parse@@Base+0x1e38>
   17a58:	ldr	r2, [sp, #12]
   17a5c:	mov	r1, #0
   17a60:	ldr	r0, [pc, #980]	; 17e3c <argp_parse@@Base+0x214c>
   17a64:	blx	r3
   17a68:	subs	sl, r0, #0
   17a6c:	beq	17b28 <argp_parse@@Base+0x1e38>
   17a70:	orrs	r3, r7, r4
   17a74:	beq	17a98 <argp_parse@@Base+0x1da8>
   17a78:	ldr	r3, [r5, #28]
   17a7c:	ldr	r2, [r5, #32]
   17a80:	cmp	r3, r2
   17a84:	bcs	17dc0 <argp_parse@@Base+0x20d0>
   17a88:	add	r1, r3, #1
   17a8c:	mov	r2, #10
   17a90:	str	r1, [r5, #28]
   17a94:	strb	r2, [r3]
   17a98:	mov	r0, sl
   17a9c:	bl	119dc <strlen@plt>
   17aa0:	subs	r4, r0, #0
   17aa4:	beq	17ad0 <argp_parse@@Base+0x1de0>
   17aa8:	ldr	r0, [r5, #28]
   17aac:	ldr	r2, [r5, #32]
   17ab0:	add	r3, r0, r4
   17ab4:	cmp	r2, r3
   17ab8:	bcs	17d38 <argp_parse@@Base+0x2048>
   17abc:	mov	r1, r4
   17ac0:	mov	r0, r5
   17ac4:	bl	1b848 <argp_error@@Base+0x1444>
   17ac8:	cmp	r0, #0
   17acc:	bne	17d34 <argp_parse@@Base+0x2044>
   17ad0:	mov	r0, sl
   17ad4:	bl	16b88 <argp_parse@@Base+0xe98>
   17ad8:	ldr	r3, [r5, #28]
   17adc:	ldr	r1, [r5, #24]
   17ae0:	ldr	r2, [r5, #16]
   17ae4:	sub	r3, r3, r1
   17ae8:	cmp	r3, r2
   17aec:	bhi	17d54 <argp_parse@@Base+0x2064>
   17af0:	ldr	r3, [r5, #20]
   17af4:	ldr	r2, [r5, #4]
   17af8:	bic	r3, r3, r3, asr #31
   17afc:	cmp	r2, r3
   17b00:	bcs	17c90 <argp_parse@@Base+0x1fa0>
   17b04:	ldr	r3, [r5, #28]
   17b08:	ldr	r2, [r5, #32]
   17b0c:	cmp	r3, r2
   17b10:	bcs	17da4 <argp_parse@@Base+0x20b4>
   17b14:	mov	r4, #1
   17b18:	add	r2, r3, r4
   17b1c:	str	r2, [r5, #28]
   17b20:	mov	r2, #10
   17b24:	strb	r2, [r3]
   17b28:	ldr	fp, [sp, #16]
   17b2c:	cmp	fp, #0
   17b30:	beq	17ba8 <argp_parse@@Base+0x1eb8>
   17b34:	ldr	r3, [fp]
   17b38:	cmp	r3, #0
   17b3c:	beq	17ba8 <argp_parse@@Base+0x1eb8>
   17b40:	eor	r2, r4, #1
   17b44:	and	r2, r2, #1
   17b48:	clz	sl, r8
   17b4c:	lsr	sl, sl, #5
   17b50:	orrs	r2, sl, r2
   17b54:	bne	17b70 <argp_parse@@Base+0x1e80>
   17b58:	b	17ddc <argp_parse@@Base+0x20ec>
   17b5c:	cmp	r4, #0
   17b60:	movne	r2, sl
   17b64:	orreq	r2, sl, #1
   17b68:	cmp	r2, #0
   17b6c:	beq	17ba8 <argp_parse@@Base+0x1eb8>
   17b70:	orrs	r2, r7, r4
   17b74:	mov	r0, r3
   17b78:	str	r5, [sp, #4]
   17b7c:	movne	r3, #1
   17b80:	moveq	r3, #0
   17b84:	str	r8, [sp]
   17b88:	mov	r2, r6
   17b8c:	mov	r1, r9
   17b90:	bl	17898 <argp_parse@@Base+0x1ba8>
   17b94:	ldr	r3, [fp, #16]
   17b98:	add	fp, fp, #16
   17b9c:	cmp	r3, #0
   17ba0:	orr	r4, r4, r0
   17ba4:	bne	17b5c <argp_parse@@Base+0x1e6c>
   17ba8:	mov	r0, r4
   17bac:	add	sp, sp, #36	; 0x24
   17bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bb4:	cmp	r0, #0
   17bb8:	addne	sl, r0, #1
   17bbc:	beq	17d80 <argp_parse@@Base+0x2090>
   17bc0:	ldr	r3, [fp, #20]
   17bc4:	cmp	r3, #0
   17bc8:	beq	17d60 <argp_parse@@Base+0x2070>
   17bcc:	mov	r3, #0
   17bd0:	mov	r1, r9
   17bd4:	mov	r0, fp
   17bd8:	mov	r4, r3
   17bdc:	str	r3, [sp, #20]
   17be0:	bl	16a2c <argp_parse@@Base+0xd3c>
   17be4:	str	r4, [sp, #24]
   17be8:	ldr	r3, [fp, #20]
   17bec:	str	r0, [sp, #12]
   17bf0:	ldr	r0, [pc, #584]	; 17e40 <argp_parse@@Base+0x2150>
   17bf4:	b	1793c <argp_parse@@Base+0x1c4c>
   17bf8:	mov	r0, r3
   17bfc:	str	r3, [sp, #24]
   17c00:	bl	119dc <strlen@plt>
   17c04:	ldr	r3, [sp, #24]
   17c08:	subs	r4, r0, #0
   17c0c:	beq	179c0 <argp_parse@@Base+0x1cd0>
   17c10:	ldr	r0, [r5, #28]
   17c14:	ldr	r1, [r5, #32]
   17c18:	add	r2, r0, r4
   17c1c:	cmp	r1, r2
   17c20:	bcs	17c44 <argp_parse@@Base+0x1f54>
   17c24:	mov	r1, r4
   17c28:	mov	r0, r5
   17c2c:	str	r3, [sp, #24]
   17c30:	bl	1b848 <argp_error@@Base+0x1444>
   17c34:	ldr	r3, [sp, #24]
   17c38:	cmp	r0, #0
   17c3c:	beq	179c0 <argp_parse@@Base+0x1cd0>
   17c40:	ldr	r0, [r5, #28]
   17c44:	mov	r2, r4
   17c48:	mov	r1, r3
   17c4c:	str	r3, [sp, #24]
   17c50:	b	17c64 <argp_parse@@Base+0x1f74>
   17c54:	ldr	r0, [r5, #28]
   17c58:	mov	r2, r4
   17c5c:	mov	r1, sl
   17c60:	str	r3, [sp, #24]
   17c64:	bl	11808 <memcpy@plt>
   17c68:	ldr	r2, [r5, #28]
   17c6c:	ldr	r3, [sp, #24]
   17c70:	add	r4, r2, r4
   17c74:	str	r4, [r5, #28]
   17c78:	b	179c4 <argp_parse@@Base+0x1cd4>
   17c7c:	mov	r0, r5
   17c80:	str	r3, [sp, #24]
   17c84:	bl	1b1b8 <argp_error@@Base+0xdb4>
   17c88:	ldr	r3, [sp, #24]
   17c8c:	b	179d8 <argp_parse@@Base+0x1ce8>
   17c90:	mov	r4, #1
   17c94:	b	17b28 <argp_parse@@Base+0x1e38>
   17c98:	ldr	r4, [r0, #20]
   17c9c:	cmp	r4, #0
   17ca0:	beq	17de8 <argp_parse@@Base+0x20f8>
   17ca4:	bl	16a2c <argp_parse@@Base+0xd3c>
   17ca8:	cmp	r6, #0
   17cac:	ldr	r3, [fp, #20]
   17cb0:	strne	sl, [sp, #20]
   17cb4:	strne	sl, [sp, #24]
   17cb8:	movne	r4, sl
   17cbc:	streq	r6, [sp, #20]
   17cc0:	streq	r6, [sp, #24]
   17cc4:	moveq	r4, r6
   17cc8:	str	r0, [sp, #12]
   17ccc:	ldrne	r0, [pc, #364]	; 17e40 <argp_parse@@Base+0x2150>
   17cd0:	ldreq	r0, [pc, #352]	; 17e38 <argp_parse@@Base+0x2148>
   17cd4:	b	1793c <argp_parse@@Base+0x1c4c>
   17cd8:	mov	r4, r3
   17cdc:	b	17a24 <argp_parse@@Base+0x1d34>
   17ce0:	mov	r1, #1
   17ce4:	mov	r0, r5
   17ce8:	str	r3, [sp, #28]
   17cec:	bl	1b848 <argp_error@@Base+0x1444>
   17cf0:	ldr	r3, [sp, #28]
   17cf4:	cmp	r0, #0
   17cf8:	beq	17978 <argp_parse@@Base+0x1c88>
   17cfc:	ldr	r2, [r5, #28]
   17d00:	b	17968 <argp_parse@@Base+0x1c78>
   17d04:	mov	r1, #1
   17d08:	mov	r0, r5
   17d0c:	str	r3, [sp, #24]
   17d10:	bl	1b848 <argp_error@@Base+0x1444>
   17d14:	ldr	r3, [sp, #24]
   17d18:	cmp	r0, #0
   17d1c:	beq	17a0c <argp_parse@@Base+0x1d1c>
   17d20:	ldr	r2, [r5, #28]
   17d24:	b	179fc <argp_parse@@Base+0x1d0c>
   17d28:	str	r4, [sp, #20]
   17d2c:	str	r4, [sp, #24]
   17d30:	b	17924 <argp_parse@@Base+0x1c34>
   17d34:	ldr	r0, [r5, #28]
   17d38:	mov	r2, r4
   17d3c:	mov	r1, sl
   17d40:	bl	11808 <memcpy@plt>
   17d44:	ldr	r3, [r5, #28]
   17d48:	add	r4, r3, r4
   17d4c:	str	r4, [r5, #28]
   17d50:	b	17ad0 <argp_parse@@Base+0x1de0>
   17d54:	mov	r0, r5
   17d58:	bl	1b1b8 <argp_error@@Base+0xdb4>
   17d5c:	b	17af0 <argp_parse@@Base+0x1e00>
   17d60:	cmp	sl, #0
   17d64:	beq	17de4 <argp_parse@@Base+0x20f4>
   17d68:	str	r3, [sp, #20]
   17d6c:	str	r3, [sp, #24]
   17d70:	mov	r4, r3
   17d74:	str	r3, [sp, #12]
   17d78:	mov	r3, sl
   17d7c:	b	17950 <argp_parse@@Base+0x1c60>
   17d80:	mov	sl, r0
   17d84:	b	17bc0 <argp_parse@@Base+0x1ed0>
   17d88:	adds	r3, r4, #0
   17d8c:	movne	r3, #1
   17d90:	str	r3, [sp, #24]
   17d94:	str	r3, [sp, #20]
   17d98:	str	r6, [sp, #12]
   17d9c:	mov	r3, sl
   17da0:	b	17950 <argp_parse@@Base+0x1c60>
   17da4:	mov	r1, #1
   17da8:	mov	r0, r5
   17dac:	bl	1b848 <argp_error@@Base+0x1444>
   17db0:	cmp	r0, #0
   17db4:	beq	17c90 <argp_parse@@Base+0x1fa0>
   17db8:	ldr	r3, [r5, #28]
   17dbc:	b	17b14 <argp_parse@@Base+0x1e24>
   17dc0:	mov	r1, #1
   17dc4:	mov	r0, r5
   17dc8:	bl	1b848 <argp_error@@Base+0x1444>
   17dcc:	cmp	r0, #0
   17dd0:	beq	17a98 <argp_parse@@Base+0x1da8>
   17dd4:	ldr	r3, [r5, #28]
   17dd8:	b	17a88 <argp_parse@@Base+0x1d98>
   17ddc:	mov	r4, #1
   17de0:	b	17ba8 <argp_parse@@Base+0x1eb8>
   17de4:	mov	r4, sl
   17de8:	str	r4, [sp, #12]
   17dec:	b	17a44 <argp_parse@@Base+0x1d54>
   17df0:	cmp	r3, #0
   17df4:	beq	17e20 <argp_parse@@Base+0x2130>
   17df8:	mov	r1, r9
   17dfc:	mov	r0, fp
   17e00:	bl	16a2c <argp_parse@@Base+0xd3c>
   17e04:	mov	r4, r6
   17e08:	ldr	r3, [fp, #20]
   17e0c:	str	r6, [sp, #20]
   17e10:	str	r6, [sp, #24]
   17e14:	str	r0, [sp, #12]
   17e18:	ldr	r0, [pc, #24]	; 17e38 <argp_parse@@Base+0x2148>
   17e1c:	b	1793c <argp_parse@@Base+0x1c4c>
   17e20:	mov	r3, sl
   17e24:	str	r6, [sp, #20]
   17e28:	str	r6, [sp, #24]
   17e2c:	mov	r4, r6
   17e30:	str	r6, [sp, #12]
   17e34:	b	17950 <argp_parse@@Base+0x1c60>
   17e38:	andeq	r0, r0, #1
   17e3c:	andeq	r0, r0, #4
   17e40:	andeq	r0, r0, #2
   17e44:	ldr	r3, [r0, #12]
   17e48:	ldr	r2, [r1, #12]
   17e4c:	push	{r4, r5, r6, lr}
   17e50:	cmp	r3, r2
   17e54:	beq	17ea4 <argp_parse@@Base+0x21b4>
   17e58:	mov	r5, r1
   17e5c:	mov	r4, r0
   17e60:	mov	r1, r2
   17e64:	mov	r0, r3
   17e68:	bl	17e44 <argp_parse@@Base+0x2154>
   17e6c:	cmp	r0, #0
   17e70:	popne	{r4, r5, r6, pc}
   17e74:	ldr	r3, [r5, #8]
   17e78:	ldr	r0, [r4, #8]
   17e7c:	mvn	r2, r3
   17e80:	lsr	r2, r2, #31
   17e84:	cmp	r2, r0, lsr #31
   17e88:	subne	r0, r0, r3
   17e8c:	subeq	r0, r3, r0
   17e90:	cmp	r0, #0
   17e94:	ldreq	r3, [r5, #4]
   17e98:	ldreq	r0, [r4, #4]
   17e9c:	subeq	r0, r3, r0
   17ea0:	pop	{r4, r5, r6, pc}
   17ea4:	ldr	r3, [r1, #8]
   17ea8:	ldr	r2, [r0, #8]
   17eac:	mvn	ip, r3
   17eb0:	ldr	lr, [r1, #4]
   17eb4:	lsr	ip, ip, #31
   17eb8:	cmp	ip, r2, lsr #31
   17ebc:	ldr	r1, [r0, #4]
   17ec0:	subne	r0, r2, r3
   17ec4:	subeq	r0, r3, r2
   17ec8:	cmp	r0, #0
   17ecc:	subeq	r0, lr, r1
   17ed0:	pop	{r4, r5, r6, pc}
   17ed4:	push	{r4, r5, r6, r7, r8, r9, lr}
   17ed8:	sub	sp, sp, #12
   17edc:	ldr	lr, [r0, #16]
   17ee0:	cmp	lr, #0
   17ee4:	movne	r2, lr
   17ee8:	bne	17ef4 <argp_parse@@Base+0x2204>
   17eec:	b	181b8 <argp_parse@@Base+0x24c8>
   17ef0:	mov	r2, r3
   17ef4:	ldr	r3, [r2, #12]
   17ef8:	cmp	r3, #0
   17efc:	bne	17ef0 <argp_parse@@Base+0x2200>
   17f00:	ldr	ip, [r1, #16]
   17f04:	ldr	r4, [r2, #8]
   17f08:	cmp	ip, #0
   17f0c:	movne	r2, ip
   17f10:	bne	17f1c <argp_parse@@Base+0x222c>
   17f14:	b	181cc <argp_parse@@Base+0x24dc>
   17f18:	mov	r2, r3
   17f1c:	ldr	r3, [r2, #12]
   17f20:	cmp	r3, #0
   17f24:	bne	17f18 <argp_parse@@Base+0x2228>
   17f28:	ldr	r3, [r2, #8]
   17f2c:	mvn	r2, r3
   17f30:	lsr	r2, r2, #31
   17f34:	cmp	r2, r4, lsr #31
   17f38:	subne	r4, r4, r3
   17f3c:	subeq	r4, r3, r4
   17f40:	cmp	r4, #0
   17f44:	bne	17fac <argp_parse@@Base+0x22bc>
   17f48:	adds	r4, ip, #0
   17f4c:	movne	r4, #1
   17f50:	cmp	lr, #0
   17f54:	rsbeq	r4, r4, #0
   17f58:	rsbne	r4, r4, #1
   17f5c:	cmp	r4, #0
   17f60:	bne	17fac <argp_parse@@Base+0x22bc>
   17f64:	cmp	lr, #0
   17f68:	mov	r5, r1
   17f6c:	mov	r6, r0
   17f70:	beq	17fc8 <argp_parse@@Base+0x22d8>
   17f74:	ldr	r0, [lr, #20]
   17f78:	ldr	r2, [ip, #20]
   17f7c:	cmp	r0, r2
   17f80:	ble	1818c <argp_parse@@Base+0x249c>
   17f84:	mov	r0, lr
   17f88:	ldr	r0, [r0, #12]
   17f8c:	ldr	r3, [r0, #20]
   17f90:	cmp	r2, r3
   17f94:	blt	17f88 <argp_parse@@Base+0x2298>
   17f98:	mov	r1, ip
   17f9c:	bl	17e44 <argp_parse@@Base+0x2154>
   17fa0:	cmp	r0, #0
   17fa4:	movne	r4, r0
   17fa8:	moveq	r4, #1
   17fac:	mov	r0, r4
   17fb0:	add	sp, sp, #12
   17fb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17fb8:	mov	r0, lr
   17fbc:	bl	17e44 <argp_parse@@Base+0x2154>
   17fc0:	subs	r4, r0, #0
   17fc4:	bne	17fac <argp_parse@@Base+0x22bc>
   17fc8:	ldr	r4, [r5, #12]
   17fcc:	ldr	r3, [r6, #12]
   17fd0:	mvn	r2, r4
   17fd4:	lsr	r2, r2, #31
   17fd8:	cmp	r2, r3, lsr #31
   17fdc:	subne	r4, r3, r4
   17fe0:	subeq	r4, r4, r3
   17fe4:	cmp	r4, #0
   17fe8:	bne	17fac <argp_parse@@Base+0x22bc>
   17fec:	ldr	r2, [r6, #4]
   17ff0:	ldr	lr, [r6]
   17ff4:	cmp	r2, #0
   17ff8:	beq	18024 <argp_parse@@Base+0x2334>
   17ffc:	add	r3, lr, #24
   18000:	ldr	r1, [r3, #-24]	; 0xffffffe8
   18004:	cmp	r1, #0
   18008:	beq	18018 <argp_parse@@Base+0x2328>
   1800c:	ldr	r0, [r3, #-12]
   18010:	tst	r0, #2
   18014:	beq	181d4 <argp_parse@@Base+0x24e4>
   18018:	subs	r2, r2, #1
   1801c:	add	r3, r3, #24
   18020:	bne	18000 <argp_parse@@Base+0x2310>
   18024:	ldr	r2, [r5, #4]
   18028:	mov	ip, #0
   1802c:	cmp	r2, ip
   18030:	str	ip, [sp]
   18034:	ldr	r3, [r5]
   18038:	beq	18244 <argp_parse@@Base+0x2554>
   1803c:	add	r3, r3, #24
   18040:	ldr	r1, [r3, #-24]	; 0xffffffe8
   18044:	cmp	r1, #0
   18048:	beq	18058 <argp_parse@@Base+0x2368>
   1804c:	ldr	r0, [r3, #-12]
   18050:	tst	r0, #2
   18054:	beq	18068 <argp_parse@@Base+0x2378>
   18058:	subs	r2, r2, #1
   1805c:	add	r3, r3, #24
   18060:	bne	18040 <argp_parse@@Base+0x2350>
   18064:	mov	r1, r2
   18068:	ldr	r3, [lr, #12]
   1806c:	str	r1, [sp, #4]
   18070:	ands	r3, ip, r3, lsr #3
   18074:	beq	1823c <argp_parse@@Base+0x254c>
   18078:	mov	r0, sp
   1807c:	bl	17344 <argp_parse@@Base+0x1654>
   18080:	ldr	r3, [r5]
   18084:	cmp	r0, #0
   18088:	bne	18228 <argp_parse@@Base+0x2538>
   1808c:	ldr	r3, [r3, #12]
   18090:	tst	r3, #8
   18094:	beq	180bc <argp_parse@@Base+0x23cc>
   18098:	ldr	r3, [sp, #4]
   1809c:	cmp	r3, #0
   180a0:	beq	180bc <argp_parse@@Base+0x23cc>
   180a4:	add	r0, sp, #4
   180a8:	bl	17344 <argp_parse@@Base+0x1654>
   180ac:	cmp	r0, #0
   180b0:	subne	r4, r4, #1
   180b4:	cmp	r4, #0
   180b8:	bne	17fac <argp_parse@@Base+0x22bc>
   180bc:	ldr	r2, [r6, #20]
   180c0:	mov	r0, r6
   180c4:	mov	r3, #0
   180c8:	ldr	r2, [r2, #24]
   180cc:	ldr	r1, [pc, #408]	; 1826c <argp_parse@@Base+0x257c>
   180d0:	bl	17208 <argp_parse@@Base+0x1518>
   180d4:	ldr	r2, [r5, #20]
   180d8:	mov	r3, #0
   180dc:	ldr	r1, [pc, #392]	; 1826c <argp_parse@@Base+0x257c>
   180e0:	ldr	r2, [r2, #24]
   180e4:	uxtb	r6, r0
   180e8:	mov	r0, r5
   180ec:	bl	17208 <argp_parse@@Base+0x1518>
   180f0:	cmp	r6, #0
   180f4:	lslne	r4, r6, #2
   180f8:	movne	r7, r6
   180fc:	uxtb	r5, r0
   18100:	beq	1820c <argp_parse@@Base+0x251c>
   18104:	cmp	r5, #0
   18108:	lslne	r9, r5, #2
   1810c:	movne	r8, r5
   18110:	beq	181f0 <argp_parse@@Base+0x2500>
   18114:	bl	11988 <__ctype_tolower_loc@plt>
   18118:	ldr	r3, [r0]
   1811c:	ldr	r4, [r3, r4]
   18120:	ldr	r3, [r3, r9]
   18124:	subs	r4, r4, r3
   18128:	bne	17fac <argp_parse@@Base+0x22bc>
   1812c:	subs	r4, r8, r7
   18130:	bne	17fac <argp_parse@@Base+0x22bc>
   18134:	adds	r4, r5, #0
   18138:	movne	r4, #1
   1813c:	cmp	r6, #0
   18140:	rsbeq	r4, r4, #0
   18144:	rsbne	r4, r4, #1
   18148:	cmp	r4, #0
   1814c:	bne	17fac <argp_parse@@Base+0x22bc>
   18150:	cmp	r6, #0
   18154:	bne	17fac <argp_parse@@Base+0x22bc>
   18158:	ldm	sp, {r0, r1}
   1815c:	adds	r4, r1, #0
   18160:	movne	r4, #1
   18164:	cmp	r0, #0
   18168:	rsbeq	r4, r4, #0
   1816c:	rsbne	r4, r4, #1
   18170:	cmp	r4, #0
   18174:	bne	17fac <argp_parse@@Base+0x22bc>
   18178:	cmp	r0, #0
   1817c:	beq	17fac <argp_parse@@Base+0x22bc>
   18180:	bl	118c8 <strcasecmp@plt>
   18184:	mov	r4, r0
   18188:	b	17fac <argp_parse@@Base+0x22bc>
   1818c:	mov	r1, ip
   18190:	bge	17fb8 <argp_parse@@Base+0x22c8>
   18194:	ldr	r1, [r1, #12]
   18198:	ldr	r3, [r1, #20]
   1819c:	cmp	r0, r3
   181a0:	blt	18194 <argp_parse@@Base+0x24a4>
   181a4:	mov	r0, lr
   181a8:	bl	17e44 <argp_parse@@Base+0x2154>
   181ac:	subs	r4, r0, #0
   181b0:	mvneq	r4, #0
   181b4:	b	17fac <argp_parse@@Base+0x22bc>
   181b8:	ldr	ip, [r1, #16]
   181bc:	ldr	r4, [r0, #12]
   181c0:	cmp	ip, #0
   181c4:	movne	r2, ip
   181c8:	bne	17f1c <argp_parse@@Base+0x222c>
   181cc:	ldr	r3, [r1, #12]
   181d0:	b	17f2c <argp_parse@@Base+0x223c>
   181d4:	ldr	r2, [r5, #4]
   181d8:	str	r1, [sp]
   181dc:	cmp	r2, #0
   181e0:	ldr	r3, [r5]
   181e4:	beq	1824c <argp_parse@@Base+0x255c>
   181e8:	mov	ip, #1
   181ec:	b	1803c <argp_parse@@Base+0x234c>
   181f0:	ldr	r3, [sp, #4]
   181f4:	cmp	r3, #0
   181f8:	moveq	r9, r5
   181fc:	ldrbne	r8, [r3]
   18200:	moveq	r8, r5
   18204:	lslne	r9, r8, #2
   18208:	b	18114 <argp_parse@@Base+0x2424>
   1820c:	ldr	r3, [sp]
   18210:	cmp	r3, #0
   18214:	moveq	r4, r6
   18218:	ldrbne	r7, [r3]
   1821c:	moveq	r7, r6
   18220:	lslne	r4, r7, #2
   18224:	b	18104 <argp_parse@@Base+0x2414>
   18228:	ldr	r3, [r3, #12]
   1822c:	tst	r3, #8
   18230:	bne	18258 <argp_parse@@Base+0x2568>
   18234:	mov	r4, #1
   18238:	b	17fac <argp_parse@@Base+0x22bc>
   1823c:	ldr	r3, [r5]
   18240:	b	1808c <argp_parse@@Base+0x239c>
   18244:	str	r2, [sp, #4]
   18248:	b	180bc <argp_parse@@Base+0x23cc>
   1824c:	mov	r1, r2
   18250:	mov	ip, #1
   18254:	b	18068 <argp_parse@@Base+0x2378>
   18258:	ldr	r3, [sp, #4]
   1825c:	mov	r4, #1
   18260:	cmp	r3, #0
   18264:	bne	180a4 <argp_parse@@Base+0x23b4>
   18268:	b	17fac <argp_parse@@Base+0x22bc>
   1826c:	andeq	r7, r1, r0, lsl #6
   18270:	ldr	r3, [r0, #28]
   18274:	ldr	r2, [r0, #24]
   18278:	push	{r4, r5, r6, lr}
   1827c:	mov	r5, r1
   18280:	ldr	r1, [r0, #16]
   18284:	sub	r2, r3, r2
   18288:	cmp	r2, r1
   1828c:	mov	r4, r0
   18290:	movls	r2, r3
   18294:	bhi	182f0 <argp_parse@@Base+0x2600>
   18298:	ldr	r1, [r4, #20]
   1829c:	ldr	r0, [r4, #8]
   182a0:	cmp	r1, #0
   182a4:	addge	r5, r5, r1
   182a8:	cmp	r5, r0
   182ac:	bcc	182d0 <argp_parse@@Base+0x25e0>
   182b0:	ldr	r1, [r4, #32]
   182b4:	cmp	r1, r3
   182b8:	bls	18300 <argp_parse@@Base+0x2610>
   182bc:	add	r1, r2, #1
   182c0:	mov	r3, #10
   182c4:	str	r1, [r4, #28]
   182c8:	strb	r3, [r2]
   182cc:	pop	{r4, r5, r6, pc}
   182d0:	ldr	r2, [r4, #32]
   182d4:	cmp	r2, r3
   182d8:	bls	1831c <argp_parse@@Base+0x262c>
   182dc:	add	r1, r3, #1
   182e0:	mov	r2, #32
   182e4:	str	r1, [r4, #28]
   182e8:	strb	r2, [r3]
   182ec:	pop	{r4, r5, r6, pc}
   182f0:	bl	1b1b8 <argp_error@@Base+0xdb4>
   182f4:	ldr	r3, [r4, #28]
   182f8:	mov	r2, r3
   182fc:	b	18298 <argp_parse@@Base+0x25a8>
   18300:	mov	r1, #1
   18304:	mov	r0, r4
   18308:	bl	1b848 <argp_error@@Base+0x1444>
   1830c:	cmp	r0, #0
   18310:	popeq	{r4, r5, r6, pc}
   18314:	ldr	r2, [r4, #28]
   18318:	b	182bc <argp_parse@@Base+0x25cc>
   1831c:	mov	r1, #1
   18320:	mov	r0, r4
   18324:	bl	1b848 <argp_error@@Base+0x1444>
   18328:	cmp	r0, #0
   1832c:	popeq	{r4, r5, r6, pc}
   18330:	ldr	r3, [r4, #28]
   18334:	b	182dc <argp_parse@@Base+0x25ec>
   18338:	push	{r4, r5, r6, lr}
   1833c:	ldr	r5, [r0, #8]
   18340:	ldr	r2, [r0, #12]
   18344:	ldr	ip, [r1, #12]
   18348:	cmp	r5, #0
   1834c:	orr	r2, r2, ip
   18350:	beq	183b8 <argp_parse@@Base+0x26c8>
   18354:	tst	r2, #16
   18358:	bne	18394 <argp_parse@@Base+0x26a4>
   1835c:	tst	r2, #1
   18360:	mov	r6, r3
   18364:	mov	r4, r0
   18368:	bne	1839c <argp_parse@@Base+0x26ac>
   1836c:	mov	r0, r5
   18370:	bl	119dc <strlen@plt>
   18374:	add	r1, r0, #6
   18378:	mov	r0, r6
   1837c:	bl	18270 <argp_parse@@Base+0x2580>
   18380:	mov	r3, r5
   18384:	ldr	r2, [r4, #4]
   18388:	mov	r0, r6
   1838c:	ldr	r1, [pc, #56]	; 183cc <argp_parse@@Base+0x26dc>
   18390:	bl	1b868 <argp_error@@Base+0x1464>
   18394:	mov	r0, #0
   18398:	pop	{r4, r5, r6, pc}
   1839c:	ldr	r2, [r0, #4]
   183a0:	mov	r3, r5
   183a4:	mov	r0, r6
   183a8:	ldr	r1, [pc, #32]	; 183d0 <argp_parse@@Base+0x26e0>
   183ac:	bl	1b868 <argp_error@@Base+0x1464>
   183b0:	mov	r0, #0
   183b4:	pop	{r4, r5, r6, pc}
   183b8:	ldr	r5, [r1, #8]
   183bc:	cmp	r5, #0
   183c0:	bne	18354 <argp_parse@@Base+0x2664>
   183c4:	mov	r0, #0
   183c8:	pop	{r4, r5, r6, pc}
   183cc:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   183d0:	ldrdeq	ip, [r1], -r0
   183d4:	mov	ip, r0
   183d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183dc:	mov	r8, r2
   183e0:	sub	sp, sp, #28
   183e4:	mov	r2, ip
   183e8:	ldr	ip, [ip, #16]
   183ec:	mov	r9, r1
   183f0:	ldr	r1, [r0, #8]
   183f4:	str	ip, [sp, #8]
   183f8:	ldr	ip, [r8]
   183fc:	str	r1, [sp, #16]
   18400:	mov	r0, r1
   18404:	mov	r4, r3
   18408:	ldr	r1, [pc, #456]	; 185d8 <argp_parse@@Base+0x28e8>
   1840c:	mov	r3, r9
   18410:	mov	r5, ip
   18414:	str	ip, [sp, #20]
   18418:	ldr	r6, [sp, #64]	; 0x40
   1841c:	bl	1749c <argp_parse@@Base+0x17ac>
   18420:	subs	r3, r0, #0
   18424:	str	r3, [sp, #12]
   18428:	beq	18584 <argp_parse@@Base+0x2894>
   1842c:	mov	r1, #10
   18430:	bl	117cc <strchrnul@plt>
   18434:	ldrb	sl, [r0]
   18438:	mov	r7, r0
   1843c:	cmp	sl, #0
   18440:	bne	18540 <argp_parse@@Base+0x2850>
   18444:	ldr	r5, [sp, #12]
   18448:	add	r1, r7, #1
   1844c:	sub	r1, r1, r5
   18450:	mov	r0, r6
   18454:	bl	18270 <argp_parse@@Base+0x2580>
   18458:	ldr	r0, [r6, #28]
   1845c:	sub	fp, r7, r5
   18460:	ldr	r1, [r6, #32]
   18464:	add	r2, r0, fp
   18468:	cmp	r1, r2
   1846c:	bcs	18488 <argp_parse@@Base+0x2798>
   18470:	mov	r1, fp
   18474:	mov	r0, r6
   18478:	bl	1b848 <argp_error@@Base+0x1444>
   1847c:	cmp	r0, #0
   18480:	beq	184a0 <argp_parse@@Base+0x27b0>
   18484:	ldr	r0, [r6, #28]
   18488:	mov	r2, fp
   1848c:	mov	r1, r5
   18490:	bl	11808 <memcpy@plt>
   18494:	ldr	r3, [r6, #28]
   18498:	add	fp, r3, fp
   1849c:	str	fp, [r6, #28]
   184a0:	ldr	r3, [sp, #16]
   184a4:	ldr	r2, [sp, #12]
   184a8:	cmp	r3, r2
   184ac:	beq	184b8 <argp_parse@@Base+0x27c8>
   184b0:	mov	r0, r2
   184b4:	bl	16b88 <argp_parse@@Base+0xe98>
   184b8:	ldr	r3, [sp, #8]
   184bc:	cmp	r3, #0
   184c0:	beq	18504 <argp_parse@@Base+0x2814>
   184c4:	ldr	r2, [r3]
   184c8:	cmp	r2, #0
   184cc:	beq	18504 <argp_parse@@Base+0x2814>
   184d0:	ldr	r5, [sp, #8]
   184d4:	mov	r3, r4
   184d8:	mov	r0, r2
   184dc:	str	r6, [sp]
   184e0:	mov	r2, r8
   184e4:	mov	r1, r9
   184e8:	bl	183d4 <argp_parse@@Base+0x26e4>
   184ec:	ldr	r2, [r5, #16]!
   184f0:	cmp	r2, #0
   184f4:	clz	r3, r0
   184f8:	lsr	r3, r3, #5
   184fc:	bne	184d8 <argp_parse@@Base+0x27e8>
   18500:	mov	r4, r3
   18504:	cmp	r4, #0
   18508:	moveq	sl, #0
   1850c:	andne	sl, sl, #1
   18510:	cmp	sl, #0
   18514:	beq	185a4 <argp_parse@@Base+0x28b4>
   18518:	ldrb	r0, [r7]
   1851c:	cmp	r0, #0
   18520:	bne	185b4 <argp_parse@@Base+0x28c4>
   18524:	ldr	r3, [sp, #20]
   18528:	ldrb	r4, [r3]
   1852c:	cmp	r4, #0
   18530:	moveq	r0, r4
   18534:	strbne	r0, [r3]
   18538:	add	sp, sp, #28
   1853c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18540:	ldrb	sl, [r5]
   18544:	cmp	sl, #0
   18548:	beq	185d0 <argp_parse@@Base+0x28e0>
   1854c:	mov	fp, #0
   18550:	add	r5, r0, #1
   18554:	add	fp, fp, #1
   18558:	mov	r0, r5
   1855c:	mov	r1, #10
   18560:	bl	117cc <strchrnul@plt>
   18564:	cmp	fp, sl
   18568:	bne	18550 <argp_parse@@Base+0x2860>
   1856c:	mov	r7, r0
   18570:	ldr	r2, [r8]
   18574:	mov	sl, #1
   18578:	add	r2, r2, sl
   1857c:	str	r2, [r8]
   18580:	b	18448 <argp_parse@@Base+0x2758>
   18584:	ldr	r3, [sp, #8]
   18588:	cmp	r3, #0
   1858c:	beq	185a4 <argp_parse@@Base+0x28b4>
   18590:	ldr	r2, [r3]
   18594:	cmp	r2, #0
   18598:	ldrne	r7, [sp, #12]
   1859c:	movne	sl, r7
   185a0:	bne	184d0 <argp_parse@@Base+0x27e0>
   185a4:	clz	r0, r4
   185a8:	lsr	r0, r0, #5
   185ac:	add	sp, sp, #28
   185b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185b4:	ldr	r2, [sp, #20]
   185b8:	mov	r0, #1
   185bc:	ldrb	r3, [r2]
   185c0:	add	r3, r3, r0
   185c4:	strb	r3, [r2]
   185c8:	add	sp, sp, #28
   185cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185d0:	ldr	r5, [sp, #12]
   185d4:	b	18570 <argp_parse@@Base+0x2880>
   185d8:	andeq	r0, r0, #6
   185dc:	ldr	r2, [r0, #8]
   185e0:	cmp	r2, #0
   185e4:	beq	185f0 <argp_parse@@Base+0x2900>
   185e8:	mov	r0, #0
   185ec:	bx	lr
   185f0:	ldr	r2, [r1, #8]
   185f4:	cmp	r2, #0
   185f8:	bne	185e8 <argp_parse@@Base+0x28f8>
   185fc:	ldr	r1, [r1, #12]
   18600:	ldr	r2, [r0, #12]
   18604:	orr	r2, r2, r1
   18608:	tst	r2, #16
   1860c:	ldreq	r2, [r3]
   18610:	ldreq	r1, [r0, #4]
   18614:	addeq	r0, r2, #1
   18618:	streq	r0, [r3]
   1861c:	strbeq	r1, [r2]
   18620:	b	185e8 <argp_parse@@Base+0x28f8>
   18624:	mov	r3, r0
   18628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1862c:	sub	sp, sp, #52	; 0x34
   18630:	ldr	r2, [r3, #16]
   18634:	str	r0, [sp, #24]
   18638:	mov	r0, #16
   1863c:	ldr	r4, [r3]
   18640:	str	r1, [sp, #28]
   18644:	str	r2, [sp, #8]
   18648:	bl	17180 <argp_parse@@Base+0x1490>
   1864c:	subs	r3, r0, #0
   18650:	str	r3, [sp, #20]
   18654:	beq	18cb8 <argp_parse@@Base+0x2fc8>
   18658:	ldr	r2, [sp, #20]
   1865c:	mov	r3, #0
   18660:	cmp	r4, #0
   18664:	str	r3, [r2, #4]
   18668:	str	r3, [r2, #12]
   1866c:	beq	18870 <argp_parse@@Base+0x2b80>
   18670:	ldr	r5, [r4, #12]
   18674:	ands	r5, r5, #4
   18678:	bne	18ccc <argp_parse@@Base+0x2fdc>
   1867c:	add	r6, r4, #24
   18680:	mov	r9, r5
   18684:	mov	sl, r5
   18688:	mov	fp, r2
   1868c:	b	186d0 <argp_parse@@Base+0x29e0>
   18690:	ldr	r3, [r6, #-12]
   18694:	tst	r3, #4
   18698:	addeq	r9, r9, #1
   1869c:	streq	r9, [fp, #4]
   186a0:	tst	r3, #8
   186a4:	bne	186cc <argp_parse@@Base+0x29dc>
   186a8:	sub	r3, r8, #1
   186ac:	cmp	r3, #254	; 0xfe
   186b0:	bhi	186cc <argp_parse@@Base+0x29dc>
   186b4:	bl	119ac <__ctype_b_loc@plt>
   186b8:	lsl	r8, r8, #1
   186bc:	ldr	r3, [r0]
   186c0:	ldrh	r3, [r3, r8]
   186c4:	tst	r3, #16384	; 0x4000
   186c8:	addne	sl, sl, #1
   186cc:	add	r6, r6, #24
   186d0:	ldr	r8, [r6, #-20]	; 0xffffffec
   186d4:	cmp	r8, #0
   186d8:	bne	18690 <argp_parse@@Base+0x29a0>
   186dc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   186e0:	cmp	r3, #0
   186e4:	bne	18690 <argp_parse@@Base+0x29a0>
   186e8:	ldr	r3, [r6, #-8]
   186ec:	cmp	r3, #0
   186f0:	bne	18690 <argp_parse@@Base+0x29a0>
   186f4:	ldr	r7, [r6, #-4]
   186f8:	cmp	r7, #0
   186fc:	bne	18690 <argp_parse@@Base+0x29a0>
   18700:	rsb	r9, r9, r9, lsl #3
   18704:	lsl	r0, r9, #2
   18708:	bl	17180 <argp_parse@@Base+0x1490>
   1870c:	ldr	r6, [sp, #20]
   18710:	str	r0, [r6]
   18714:	add	r0, sl, #1
   18718:	bl	17180 <argp_parse@@Base+0x1490>
   1871c:	ldr	r8, [r6]
   18720:	mov	r3, r6
   18724:	cmp	r0, #0
   18728:	cmpne	r8, #0
   1872c:	mov	sl, r0
   18730:	str	r0, [r3, #8]
   18734:	beq	18c7c <argp_parse@@Base+0x2f8c>
   18738:	ldr	r2, [sp, #20]
   1873c:	ldr	r3, [pc, #1436]	; 18ce0 <argp_parse@@Base+0x2ff0>
   18740:	ldr	r2, [r2, #4]
   18744:	cmp	r2, r3
   18748:	bhi	18c68 <argp_parse@@Base+0x2f78>
   1874c:	add	r8, r8, #28
   18750:	mov	r2, r8
   18754:	ldr	r3, [r4, #4]
   18758:	mov	r8, sl
   1875c:	mov	r9, r2
   18760:	cmp	r3, #0
   18764:	bne	18774 <argp_parse@@Base+0x2a84>
   18768:	ldr	r2, [r4]
   1876c:	cmp	r2, #0
   18770:	beq	18c20 <argp_parse@@Base+0x2f30>
   18774:	str	r7, [r9, #-24]	; 0xffffffe8
   18778:	ldr	r6, [r4, #20]
   1877c:	str	r4, [r9, #-28]	; 0xffffffe4
   18780:	cmp	r6, #0
   18784:	str	sl, [r9, #-20]	; 0xffffffec
   18788:	bne	187a0 <argp_parse@@Base+0x2ab0>
   1878c:	ldr	r2, [r4]
   18790:	cmp	r2, #0
   18794:	cmpeq	r3, #0
   18798:	movne	r6, r5
   1879c:	beq	18c44 <argp_parse@@Base+0x2f54>
   187a0:	ldr	r1, [sp, #28]
   187a4:	str	r6, [r9, #-16]
   187a8:	mov	r5, r4
   187ac:	ldr	r2, [r4, #12]
   187b0:	mov	r3, r7
   187b4:	str	r1, [r9, #-12]
   187b8:	ldr	r1, [sp, #24]
   187bc:	str	r1, [r9, #-8]
   187c0:	add	r3, r3, #1
   187c4:	tst	r2, #8
   187c8:	str	r3, [r9, #-24]	; 0xffffffe8
   187cc:	bne	18838 <argp_parse@@Base+0x2b48>
   187d0:	ldr	fp, [r4, #4]
   187d4:	sub	r3, fp, #1
   187d8:	cmp	r3, #254	; 0xfe
   187dc:	bhi	18838 <argp_parse@@Base+0x2b48>
   187e0:	bl	119ac <__ctype_b_loc@plt>
   187e4:	lsl	r3, fp, #1
   187e8:	ldr	r2, [r0]
   187ec:	ldrh	r3, [r2, r3]
   187f0:	tst	r3, #16384	; 0x4000
   187f4:	beq	18838 <argp_parse@@Base+0x2b48>
   187f8:	cmp	r8, sl
   187fc:	uxtb	r1, fp
   18800:	bcs	18830 <argp_parse@@Base+0x2b40>
   18804:	ldrb	r3, [r8]
   18808:	cmp	r3, r1
   1880c:	movne	r3, r8
   18810:	subne	r0, sl, #1
   18814:	bne	18828 <argp_parse@@Base+0x2b38>
   18818:	b	18838 <argp_parse@@Base+0x2b48>
   1881c:	ldrb	r2, [r3, #1]!
   18820:	cmp	r2, r1
   18824:	beq	18838 <argp_parse@@Base+0x2b48>
   18828:	cmp	r0, r3
   1882c:	bne	1881c <argp_parse@@Base+0x2b2c>
   18830:	strb	r1, [sl]
   18834:	add	sl, sl, #1
   18838:	ldr	r3, [r5, #28]
   1883c:	add	r4, r4, #24
   18840:	cmp	r3, #0
   18844:	bne	18854 <argp_parse@@Base+0x2b64>
   18848:	ldr	r2, [r5, #24]
   1884c:	cmp	r2, #0
   18850:	beq	18bfc <argp_parse@@Base+0x2f0c>
   18854:	ldr	r2, [r5, #36]	; 0x24
   18858:	tst	r2, #4
   1885c:	beq	18c14 <argp_parse@@Base+0x2f24>
   18860:	ldr	r3, [r9, #-24]	; 0xffffffe8
   18864:	mov	r5, r4
   18868:	b	187c0 <argp_parse@@Base+0x2ad0>
   1886c:	strb	r3, [sl]
   18870:	ldr	r3, [sp, #8]
   18874:	cmp	r3, #0
   18878:	beq	189b4 <argp_parse@@Base+0x2cc4>
   1887c:	ldr	r3, [r3]
   18880:	cmp	r3, #0
   18884:	beq	189b4 <argp_parse@@Base+0x2cc4>
   18888:	ldr	r3, [sp, #20]
   1888c:	add	r3, r3, #12
   18890:	str	r3, [sp, #44]	; 0x2c
   18894:	ldr	r3, [sp, #8]
   18898:	ldr	r5, [r3, #12]
   1889c:	cmp	r5, #0
   188a0:	ldrne	r6, [r3, #8]
   188a4:	bne	188b8 <argp_parse@@Base+0x2bc8>
   188a8:	ldr	r3, [sp, #8]
   188ac:	ldr	r6, [r3, #8]
   188b0:	cmp	r6, #0
   188b4:	beq	18bdc <argp_parse@@Base+0x2eec>
   188b8:	ldr	r7, [sp, #24]
   188bc:	ldr	r2, [sp, #8]
   188c0:	mov	r0, #28
   188c4:	ldr	r3, [r7, #16]
   188c8:	sub	r3, r2, r3
   188cc:	asr	r4, r3, #4
   188d0:	bl	17180 <argp_parse@@Base+0x1490>
   188d4:	subs	r1, r0, #0
   188d8:	beq	18918 <argp_parse@@Base+0x2c28>
   188dc:	ldr	r3, [sp, #28]
   188e0:	ldr	r0, [sp, #20]
   188e4:	cmp	r3, #0
   188e8:	str	r3, [r1, #12]
   188ec:	ldrne	r3, [r3, #20]
   188f0:	ldr	r2, [r0, #12]
   188f4:	addne	r3, r3, #1
   188f8:	moveq	r3, #0
   188fc:	str	r5, [r1, #8]
   18900:	str	r6, [r1]
   18904:	str	r4, [r1, #4]
   18908:	str	r7, [r1, #16]
   1890c:	str	r3, [r1, #20]
   18910:	str	r2, [r1, #24]
   18914:	str	r1, [r0, #12]
   18918:	ldr	r3, [sp, #8]
   1891c:	ldr	r0, [r3]
   18920:	bl	18624 <argp_parse@@Base+0x2934>
   18924:	ldr	r3, [sp, #20]
   18928:	ldr	r2, [r3, #12]
   1892c:	cmp	r2, #0
   18930:	str	r0, [sp, #16]
   18934:	bne	18940 <argp_parse@@Base+0x2c50>
   18938:	b	18be4 <argp_parse@@Base+0x2ef4>
   1893c:	mov	r2, r3
   18940:	ldr	r3, [r2, #24]
   18944:	cmp	r3, #0
   18948:	bne	1893c <argp_parse@@Base+0x2c4c>
   1894c:	add	r2, r2, #24
   18950:	ldr	r0, [sp, #16]
   18954:	mov	ip, r0
   18958:	ldr	r3, [r0, #4]
   1895c:	ldr	r1, [r0, #12]
   18960:	cmp	r3, #0
   18964:	str	r1, [r2]
   18968:	mov	r2, #0
   1896c:	str	r2, [r0, #12]
   18970:	beq	18998 <argp_parse@@Base+0x2ca8>
   18974:	ldr	lr, [sp, #20]
   18978:	ldr	r2, [lr, #4]
   1897c:	cmp	r2, #0
   18980:	bne	189c0 <argp_parse@@Base+0x2cd0>
   18984:	ldr	r0, [r0]
   18988:	ldr	r1, [ip, #8]
   1898c:	stm	lr, {r0, r3}
   18990:	str	r1, [lr, #8]
   18994:	str	r2, [ip, #4]
   18998:	ldr	r0, [sp, #16]
   1899c:	bl	173bc <argp_parse@@Base+0x16cc>
   189a0:	ldr	r2, [sp, #8]
   189a4:	ldr	r3, [r2, #16]!
   189a8:	cmp	r3, #0
   189ac:	str	r2, [sp, #8]
   189b0:	bne	18894 <argp_parse@@Base+0x2ba4>
   189b4:	ldr	r0, [sp, #20]
   189b8:	add	sp, sp, #52	; 0x34
   189bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189c0:	add	r3, r3, r2
   189c4:	str	r3, [sp, #36]	; 0x24
   189c8:	rsb	r0, r3, r3, lsl #3
   189cc:	lsl	r0, r0, #2
   189d0:	bl	17180 <argp_parse@@Base+0x1490>
   189d4:	ldr	r3, [sp, #20]
   189d8:	mov	r4, r0
   189dc:	str	r0, [sp, #32]
   189e0:	ldr	r0, [r3, #8]
   189e4:	bl	119dc <strlen@plt>
   189e8:	ldr	r3, [sp, #16]
   189ec:	mov	r8, r0
   189f0:	ldr	r0, [r3, #8]
   189f4:	bl	119dc <strlen@plt>
   189f8:	add	r0, r8, r0
   189fc:	add	r0, r0, #1
   18a00:	bl	17180 <argp_parse@@Base+0x1490>
   18a04:	cmp	r4, #0
   18a08:	cmpne	r0, #0
   18a0c:	mov	r7, r0
   18a10:	beq	18c90 <argp_parse@@Base+0x2fa0>
   18a14:	ldr	r3, [sp, #36]	; 0x24
   18a18:	ldr	r2, [pc, #704]	; 18ce0 <argp_parse@@Base+0x2ff0>
   18a1c:	cmp	r3, r2
   18a20:	bhi	18ca4 <argp_parse@@Base+0x2fb4>
   18a24:	ldr	r5, [sp, #20]
   18a28:	ldr	r9, [sp, #32]
   18a2c:	ldm	r5, {r3, r4}
   18a30:	mov	r0, r9
   18a34:	rsb	r6, r4, r4, lsl #3
   18a38:	mov	r1, r3
   18a3c:	lsl	r6, r6, #2
   18a40:	mov	r2, r6
   18a44:	str	r3, [sp, #40]	; 0x28
   18a48:	bl	119a0 <mempcpy@plt>
   18a4c:	ldr	r3, [sp, #16]
   18a50:	ldr	r1, [r3, #4]
   18a54:	mov	ip, r1
   18a58:	str	r1, [sp, #4]
   18a5c:	rsb	r2, ip, ip, lsl #3
   18a60:	ldr	r1, [r3]
   18a64:	lsl	r2, r2, #2
   18a68:	bl	11808 <memcpy@plt>
   18a6c:	ldr	r5, [r5, #8]
   18a70:	mov	r2, r8
   18a74:	mov	r1, r5
   18a78:	mov	r0, r7
   18a7c:	bl	11808 <memcpy@plt>
   18a80:	cmp	r4, #0
   18a84:	beq	18bf4 <argp_parse@@Base+0x2f04>
   18a88:	mov	r2, r9
   18a8c:	ldr	r3, [r2, #8]
   18a90:	subs	r4, r4, #1
   18a94:	sub	r3, r3, r5
   18a98:	add	r3, r7, r3
   18a9c:	str	r3, [r2, #8]
   18aa0:	add	r2, r2, #28
   18aa4:	bne	18a8c <argp_parse@@Base+0x2d9c>
   18aa8:	ldr	r3, [sp, #32]
   18aac:	add	r1, r3, r6
   18ab0:	ldr	r3, [sp, #4]
   18ab4:	ldr	r2, [sp, #16]
   18ab8:	cmp	r3, #0
   18abc:	add	r3, r7, r8
   18ac0:	str	r3, [sp, #12]
   18ac4:	ldr	sl, [r2, #8]
   18ac8:	beq	18bec <argp_parse@@Base+0x2efc>
   18acc:	sub	r8, r3, #1
   18ad0:	add	fp, r1, #28
   18ad4:	mov	r9, r3
   18ad8:	mov	r3, r8
   18adc:	mov	r8, fp
   18ae0:	mov	fp, sl
   18ae4:	mov	sl, r3
   18ae8:	ldr	r5, [r8, #-24]	; 0xffffffe8
   18aec:	str	r9, [r8, #-20]	; 0xffffffec
   18af0:	cmp	r5, #0
   18af4:	ldr	r4, [r8, #-28]	; 0xffffffe4
   18af8:	bne	18b0c <argp_parse@@Base+0x2e1c>
   18afc:	b	18b98 <argp_parse@@Base+0x2ea8>
   18b00:	subs	r5, r5, #1
   18b04:	add	r4, r4, #24
   18b08:	beq	18b98 <argp_parse@@Base+0x2ea8>
   18b0c:	ldr	r3, [r4, #12]
   18b10:	tst	r3, #8
   18b14:	bne	18b00 <argp_parse@@Base+0x2e10>
   18b18:	ldr	r6, [r4, #4]
   18b1c:	sub	r3, r6, #1
   18b20:	cmp	r3, #254	; 0xfe
   18b24:	bhi	18b00 <argp_parse@@Base+0x2e10>
   18b28:	bl	119ac <__ctype_b_loc@plt>
   18b2c:	lsl	r3, r6, #1
   18b30:	ldr	r2, [r0]
   18b34:	ldrh	r3, [r2, r3]
   18b38:	tst	r3, #16384	; 0x4000
   18b3c:	beq	18b00 <argp_parse@@Base+0x2e10>
   18b40:	ldrb	r1, [fp]
   18b44:	cmp	r1, r6
   18b48:	bne	18b00 <argp_parse@@Base+0x2e10>
   18b4c:	ldr	r3, [sp, #12]
   18b50:	cmp	r7, r3
   18b54:	bcs	18b80 <argp_parse@@Base+0x2e90>
   18b58:	ldrb	r3, [r7]
   18b5c:	cmp	r3, r1
   18b60:	movne	r3, r7
   18b64:	bne	18b78 <argp_parse@@Base+0x2e88>
   18b68:	b	18b88 <argp_parse@@Base+0x2e98>
   18b6c:	ldrb	r2, [r3, #1]!
   18b70:	cmp	r2, r1
   18b74:	beq	18b88 <argp_parse@@Base+0x2e98>
   18b78:	cmp	sl, r3
   18b7c:	bne	18b6c <argp_parse@@Base+0x2e7c>
   18b80:	strb	r1, [r9]
   18b84:	add	r9, r9, #1
   18b88:	subs	r5, r5, #1
   18b8c:	add	fp, fp, #1
   18b90:	add	r4, r4, #24
   18b94:	bne	18b0c <argp_parse@@Base+0x2e1c>
   18b98:	ldr	r3, [sp, #4]
   18b9c:	add	r8, r8, #28
   18ba0:	subs	r3, r3, #1
   18ba4:	str	r3, [sp, #4]
   18ba8:	bne	18ae8 <argp_parse@@Base+0x2df8>
   18bac:	mov	r3, #0
   18bb0:	strb	r3, [r9]
   18bb4:	ldr	r0, [sp, #40]	; 0x28
   18bb8:	bl	16b88 <argp_parse@@Base+0xe98>
   18bbc:	ldr	r4, [sp, #20]
   18bc0:	ldr	r0, [r4, #8]
   18bc4:	bl	16b88 <argp_parse@@Base+0xe98>
   18bc8:	ldr	r2, [sp, #32]
   18bcc:	str	r2, [r4]
   18bd0:	ldr	r2, [sp, #36]	; 0x24
   18bd4:	stmib	r4, {r2, r7}
   18bd8:	b	18998 <argp_parse@@Base+0x2ca8>
   18bdc:	ldr	r1, [sp, #28]
   18be0:	b	18918 <argp_parse@@Base+0x2c28>
   18be4:	ldr	r2, [sp, #44]	; 0x2c
   18be8:	b	18950 <argp_parse@@Base+0x2c60>
   18bec:	ldr	r9, [sp, #12]
   18bf0:	b	18bac <argp_parse@@Base+0x2ebc>
   18bf4:	ldr	r1, [sp, #32]
   18bf8:	b	18ab0 <argp_parse@@Base+0x2dc0>
   18bfc:	ldr	r2, [r5, #40]	; 0x28
   18c00:	cmp	r2, #0
   18c04:	bne	18854 <argp_parse@@Base+0x2b64>
   18c08:	ldr	r2, [r5, #44]	; 0x2c
   18c0c:	cmp	r2, #0
   18c10:	bne	18854 <argp_parse@@Base+0x2b64>
   18c14:	add	r9, r9, #28
   18c18:	mov	r5, r6
   18c1c:	b	18760 <argp_parse@@Base+0x2a70>
   18c20:	ldr	r2, [r4, #16]
   18c24:	cmp	r2, #0
   18c28:	beq	18c4c <argp_parse@@Base+0x2f5c>
   18c2c:	str	r3, [r9, #-24]	; 0xffffffe8
   18c30:	ldr	r6, [r4, #20]
   18c34:	str	r4, [r9, #-28]	; 0xffffffe4
   18c38:	cmp	r6, #0
   18c3c:	str	sl, [r9, #-20]	; 0xffffffec
   18c40:	bne	187a0 <argp_parse@@Base+0x2ab0>
   18c44:	add	r6, r5, #1
   18c48:	b	187a0 <argp_parse@@Base+0x2ab0>
   18c4c:	ldr	r6, [r4, #20]
   18c50:	cmp	r6, #0
   18c54:	beq	1886c <argp_parse@@Base+0x2b7c>
   18c58:	str	r4, [r9, #-28]	; 0xffffffe4
   18c5c:	str	r3, [r9, #-24]	; 0xffffffe8
   18c60:	str	sl, [r9, #-20]	; 0xffffffec
   18c64:	b	187a0 <argp_parse@@Base+0x2ab0>
   18c68:	ldr	r3, [pc, #116]	; 18ce4 <argp_parse@@Base+0x2ff4>
   18c6c:	mov	r2, #476	; 0x1dc
   18c70:	ldr	r1, [pc, #112]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18c74:	ldr	r0, [pc, #112]	; 18cec <argp_parse@@Base+0x2ffc>
   18c78:	bl	11c28 <__assert_fail@plt>
   18c7c:	ldr	r3, [pc, #96]	; 18ce4 <argp_parse@@Base+0x2ff4>
   18c80:	ldr	r2, [pc, #104]	; 18cf0 <argp_parse@@Base+0x3000>
   18c84:	ldr	r1, [pc, #92]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18c88:	ldr	r0, [pc, #100]	; 18cf4 <argp_parse@@Base+0x3004>
   18c8c:	bl	11c28 <__assert_fail@plt>
   18c90:	ldr	r3, [pc, #96]	; 18cf8 <argp_parse@@Base+0x3008>
   18c94:	ldr	r2, [pc, #96]	; 18cfc <argp_parse@@Base+0x300c>
   18c98:	ldr	r1, [pc, #72]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18c9c:	ldr	r0, [pc, #92]	; 18d00 <argp_parse@@Base+0x3010>
   18ca0:	bl	11c28 <__assert_fail@plt>
   18ca4:	ldr	r3, [pc, #76]	; 18cf8 <argp_parse@@Base+0x3008>
   18ca8:	mov	r2, #972	; 0x3cc
   18cac:	ldr	r1, [pc, #52]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18cb0:	ldr	r0, [pc, #76]	; 18d04 <argp_parse@@Base+0x3014>
   18cb4:	bl	11c28 <__assert_fail@plt>
   18cb8:	ldr	r3, [pc, #36]	; 18ce4 <argp_parse@@Base+0x2ff4>
   18cbc:	ldr	r2, [pc, #68]	; 18d08 <argp_parse@@Base+0x3018>
   18cc0:	ldr	r1, [pc, #32]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18cc4:	ldr	r0, [pc, #64]	; 18d0c <argp_parse@@Base+0x301c>
   18cc8:	bl	11c28 <__assert_fail@plt>
   18ccc:	ldr	r3, [pc, #16]	; 18ce4 <argp_parse@@Base+0x2ff4>
   18cd0:	mov	r2, #460	; 0x1cc
   18cd4:	ldr	r1, [pc, #12]	; 18ce8 <argp_parse@@Base+0x2ff8>
   18cd8:	ldr	r0, [pc, #48]	; 18d10 <argp_parse@@Base+0x3020>
   18cdc:	bl	11c28 <__assert_fail@plt>
   18ce0:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   18ce4:	andeq	ip, r1, r4, lsr #22
   18ce8:	andeq	ip, r1, r8, ror #23
   18cec:	andeq	ip, r1, ip, lsr #24
   18cf0:	ldrdeq	r0, [r0], -sl
   18cf4:	andeq	ip, r1, r8, lsl #24
   18cf8:	andeq	ip, r1, r0, lsr fp
   18cfc:	andeq	r0, r0, sl, asr #7
   18d00:	andeq	ip, r1, r8, ror #24
   18d04:	andeq	ip, r1, r4, lsl #25
   18d08:	andeq	r0, r0, r2, asr #3
   18d0c:	strdeq	ip, [r1], -r4
   18d10:	strdeq	ip, [r1], -r8
   18d14:	cmp	r1, #0
   18d18:	push	{r4, r5, r6, r7, r8, lr}
   18d1c:	beq	18d94 <argp_parse@@Base+0x30a4>
   18d20:	sub	r7, r1, #1
   18d24:	mov	r8, r2
   18d28:	mov	r6, r0
   18d2c:	ldm	r6, {r4, r5}
   18d30:	cmp	r5, #0
   18d34:	sub	r5, r5, #1
   18d38:	beq	18d78 <argp_parse@@Base+0x3088>
   18d3c:	add	r4, r4, #24
   18d40:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18d44:	mov	r1, r8
   18d48:	subs	r0, r3, #0
   18d4c:	sub	r5, r5, #1
   18d50:	beq	18d6c <argp_parse@@Base+0x307c>
   18d54:	ldr	r3, [r4, #-12]
   18d58:	tst	r3, #2
   18d5c:	bne	18d6c <argp_parse@@Base+0x307c>
   18d60:	bl	11754 <strcmp@plt>
   18d64:	cmp	r0, #0
   18d68:	beq	18d8c <argp_parse@@Base+0x309c>
   18d6c:	cmn	r5, #1
   18d70:	add	r4, r4, #24
   18d74:	bne	18d40 <argp_parse@@Base+0x3050>
   18d78:	sub	r7, r7, #1
   18d7c:	cmn	r7, #1
   18d80:	add	r6, r6, #28
   18d84:	bne	18d2c <argp_parse@@Base+0x303c>
   18d88:	mov	r6, #0
   18d8c:	mov	r0, r6
   18d90:	pop	{r4, r5, r6, r7, r8, pc}
   18d94:	mov	r6, r1
   18d98:	b	18d8c <argp_parse@@Base+0x309c>
   18d9c:	push	{r4, r5, r6, lr}
   18da0:	subs	r4, r0, #0
   18da4:	mov	r5, r1
   18da8:	beq	18dbc <argp_parse@@Base+0x30cc>
   18dac:	mov	r1, #10
   18db0:	bl	119f4 <strchr@plt>
   18db4:	adds	r4, r0, #0
   18db8:	movne	r4, #1
   18dbc:	cmp	r5, #0
   18dc0:	beq	18dec <argp_parse@@Base+0x30fc>
   18dc4:	ldr	r3, [r5]
   18dc8:	cmp	r3, #0
   18dcc:	beq	18dec <argp_parse@@Base+0x30fc>
   18dd0:	ldr	r1, [r3, #16]
   18dd4:	ldr	r0, [r3, #8]
   18dd8:	bl	18d9c <argp_parse@@Base+0x30ac>
   18ddc:	ldr	r3, [r5, #16]!
   18de0:	cmp	r3, #0
   18de4:	add	r4, r4, r0
   18de8:	bne	18dd0 <argp_parse@@Base+0x30e0>
   18dec:	mov	r0, r4
   18df0:	pop	{r4, r5, r6, pc}
   18df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18df8:	add	fp, sp, #32
   18dfc:	sub	sp, sp, #12
   18e00:	ldr	r5, [r0, #4]
   18e04:	cmp	r5, #0
   18e08:	bne	18e14 <argp_parse@@Base+0x3124>
   18e0c:	sub	sp, fp, #32
   18e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e14:	mov	r6, r0
   18e18:	ldr	r0, [r0, #8]
   18e1c:	mov	r9, r1
   18e20:	bl	119dc <strlen@plt>
   18e24:	ldr	r8, [pc, #360]	; 18f94 <argp_parse@@Base+0x32a4>
   18e28:	ldr	r4, [r6]
   18e2c:	sub	r7, fp, #36	; 0x24
   18e30:	add	r3, r0, #15
   18e34:	bic	r3, r3, #7
   18e38:	sub	sp, sp, r3
   18e3c:	mov	sl, sp
   18e40:	str	sp, [r7, #-4]!
   18e44:	ldr	r2, [r4, #20]
   18e48:	mov	r0, r4
   18e4c:	mov	r3, r7
   18e50:	mov	r1, r8
   18e54:	ldr	r2, [r2, #24]
   18e58:	bl	17208 <argp_parse@@Base+0x1518>
   18e5c:	subs	r5, r5, #1
   18e60:	add	r4, r4, #28
   18e64:	bne	18e44 <argp_parse@@Base+0x3154>
   18e68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e6c:	cmp	sl, r3
   18e70:	bcc	18f74 <argp_parse@@Base+0x3284>
   18e74:	ldm	r6, {r4, r5}
   18e78:	cmp	r5, #0
   18e7c:	beq	18e0c <argp_parse@@Base+0x311c>
   18e80:	ldr	r7, [pc, #272]	; 18f98 <argp_parse@@Base+0x32a8>
   18e84:	ldr	r2, [r4, #20]
   18e88:	mov	r0, r4
   18e8c:	mov	r3, r9
   18e90:	mov	r1, r7
   18e94:	ldr	r2, [r2, #24]
   18e98:	bl	17208 <argp_parse@@Base+0x1518>
   18e9c:	subs	r5, r5, #1
   18ea0:	add	r4, r4, #28
   18ea4:	bne	18e84 <argp_parse@@Base+0x3194>
   18ea8:	ldm	r6, {r7, r8}
   18eac:	cmp	r8, #0
   18eb0:	beq	18e0c <argp_parse@@Base+0x311c>
   18eb4:	ldr	sl, [pc, #224]	; 18f9c <argp_parse@@Base+0x32ac>
   18eb8:	add	r7, r7, #28
   18ebc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   18ec0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   18ec4:	cmp	r5, #0
   18ec8:	movne	r6, r4
   18ecc:	bne	18ee0 <argp_parse@@Base+0x31f0>
   18ed0:	b	18f3c <argp_parse@@Base+0x324c>
   18ed4:	subs	r5, r5, #1
   18ed8:	add	r4, r4, #24
   18edc:	beq	18f3c <argp_parse@@Base+0x324c>
   18ee0:	ldr	r2, [r4]
   18ee4:	cmp	r2, #0
   18ee8:	beq	18ed4 <argp_parse@@Base+0x31e4>
   18eec:	ldr	r1, [r4, #12]
   18ef0:	tst	r1, #4
   18ef4:	moveq	r6, r4
   18ef8:	tst	r1, #2
   18efc:	bne	18ed4 <argp_parse@@Base+0x31e4>
   18f00:	ldr	r3, [r4, #8]
   18f04:	ldr	r0, [r6, #12]
   18f08:	cmp	r3, #0
   18f0c:	orr	r1, r1, r0
   18f10:	beq	18f50 <argp_parse@@Base+0x3260>
   18f14:	tst	r1, #16
   18f18:	bne	18ed4 <argp_parse@@Base+0x31e4>
   18f1c:	tst	r1, #1
   18f20:	moveq	r1, sl
   18f24:	ldrne	r1, [pc, #116]	; 18fa0 <argp_parse@@Base+0x32b0>
   18f28:	mov	r0, r9
   18f2c:	bl	1b868 <argp_error@@Base+0x1464>
   18f30:	subs	r5, r5, #1
   18f34:	add	r4, r4, #24
   18f38:	bne	18ee0 <argp_parse@@Base+0x31f0>
   18f3c:	subs	r8, r8, #1
   18f40:	add	r7, r7, #28
   18f44:	bne	18ebc <argp_parse@@Base+0x31cc>
   18f48:	sub	sp, fp, #32
   18f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f50:	tst	r1, #16
   18f54:	bne	18ed4 <argp_parse@@Base+0x31e4>
   18f58:	ldr	r3, [r6, #8]
   18f5c:	cmp	r3, #0
   18f60:	bne	18f1c <argp_parse@@Base+0x322c>
   18f64:	ldr	r1, [pc, #56]	; 18fa4 <argp_parse@@Base+0x32b4>
   18f68:	mov	r0, r9
   18f6c:	bl	1b868 <argp_error@@Base+0x1464>
   18f70:	b	18ed4 <argp_parse@@Base+0x31e4>
   18f74:	add	r1, r3, #1
   18f78:	str	r1, [fp, #-40]	; 0xffffffd8
   18f7c:	mov	r2, sl
   18f80:	ldr	r1, [pc, #32]	; 18fa8 <argp_parse@@Base+0x32b8>
   18f84:	strb	r5, [r3]
   18f88:	mov	r0, r9
   18f8c:	bl	1b868 <argp_error@@Base+0x1464>
   18f90:	b	18e74 <argp_parse@@Base+0x3184>
   18f94:	ldrdeq	r8, [r1], -ip
   18f98:	andeq	r8, r1, r8, lsr r3
   18f9c:	ldrdeq	ip, [r1], -r0
   18fa0:	andeq	ip, r1, r0, asr #25
   18fa4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   18fa8:			; <UNDEFINED> instruction: 0x0001ccb8

00018fac <argp_failure@@Base>:
   18fac:	push	{r3}		; (str r3, [sp, #-4]!)
   18fb0:	push	{r4, r5, r6, r7, lr}
   18fb4:	subs	r5, r0, #0
   18fb8:	sub	sp, sp, #200	; 0xc8
   18fbc:	mov	r7, r1
   18fc0:	mov	r6, r2
   18fc4:	beq	19114 <argp_failure@@Base+0x168>
   18fc8:	ldr	r3, [r5, #16]
   18fcc:	tst	r3, #2
   18fd0:	bne	19104 <argp_failure@@Base+0x158>
   18fd4:	ldr	r4, [r5, #44]	; 0x2c
   18fd8:	cmp	r4, #0
   18fdc:	beq	19104 <argp_failure@@Base+0x158>
   18fe0:	mov	r0, r4
   18fe4:	bl	11b5c <flockfile@plt>
   18fe8:	ldr	r0, [r5, #40]	; 0x28
   18fec:	mov	r1, r4
   18ff0:	bl	11730 <fputs_unlocked@plt>
   18ff4:	ldr	r3, [sp, #220]	; 0xdc
   18ff8:	cmp	r3, #0
   18ffc:	beq	19058 <argp_failure@@Base+0xac>
   19000:	ldr	r3, [r4, #20]
   19004:	ldr	r1, [r4, #24]
   19008:	add	r2, sp, #224	; 0xe0
   1900c:	cmp	r3, r1
   19010:	str	r2, [sp]
   19014:	addcc	r1, r3, #1
   19018:	movcc	r2, #58	; 0x3a
   1901c:	strcc	r1, [r4, #20]
   19020:	strbcc	r2, [r3]
   19024:	bcs	19160 <argp_failure@@Base+0x1b4>
   19028:	ldr	r3, [r4, #20]
   1902c:	ldr	r2, [r4, #24]
   19030:	cmp	r3, r2
   19034:	addcc	r1, r3, #1
   19038:	movcc	r2, #32
   1903c:	strcc	r1, [r4, #20]
   19040:	strbcc	r2, [r3]
   19044:	bcs	19150 <argp_failure@@Base+0x1a4>
   19048:	ldr	r2, [sp]
   1904c:	ldr	r1, [sp, #220]	; 0xdc
   19050:	mov	r0, r4
   19054:	bl	11afc <vfprintf@plt>
   19058:	cmp	r6, #0
   1905c:	beq	190c0 <argp_failure@@Base+0x114>
   19060:	ldr	r3, [r4, #20]
   19064:	ldr	r2, [r4, #24]
   19068:	cmp	r3, r2
   1906c:	addcc	r1, r3, #1
   19070:	movcc	r2, #58	; 0x3a
   19074:	strcc	r1, [r4, #20]
   19078:	strbcc	r2, [r3]
   1907c:	bcs	19180 <argp_failure@@Base+0x1d4>
   19080:	ldr	r3, [r4, #20]
   19084:	ldr	r2, [r4, #24]
   19088:	cmp	r3, r2
   1908c:	addcc	r1, r3, #1
   19090:	movcc	r2, #32
   19094:	strcc	r1, [r4, #20]
   19098:	strbcc	r2, [r3]
   1909c:	bcs	19170 <argp_failure@@Base+0x1c4>
   190a0:	mov	r2, #200	; 0xc8
   190a4:	mov	r1, sp
   190a8:	mov	r0, r6
   190ac:	bl	11a3c <strerror_r@plt>
   190b0:	cmp	r0, #0
   190b4:	beq	19190 <argp_failure@@Base+0x1e4>
   190b8:	mov	r1, r4
   190bc:	bl	11730 <fputs_unlocked@plt>
   190c0:	ldr	r3, [r4, #20]
   190c4:	ldr	r2, [r4, #24]
   190c8:	cmp	r3, r2
   190cc:	addcc	r1, r3, #1
   190d0:	movcc	r2, #10
   190d4:	strcc	r1, [r4, #20]
   190d8:	strbcc	r2, [r3]
   190dc:	bcs	19138 <argp_failure@@Base+0x18c>
   190e0:	mov	r0, r4
   190e4:	bl	118d4 <funlockfile@plt>
   190e8:	cmp	r7, #0
   190ec:	beq	19104 <argp_failure@@Base+0x158>
   190f0:	cmp	r5, #0
   190f4:	beq	19148 <argp_failure@@Base+0x19c>
   190f8:	ldr	r3, [r5, #16]
   190fc:	tst	r3, #32
   19100:	beq	19148 <argp_failure@@Base+0x19c>
   19104:	add	sp, sp, #200	; 0xc8
   19108:	pop	{r4, r5, r6, r7, lr}
   1910c:	add	sp, sp, #4
   19110:	bx	lr
   19114:	ldr	r3, [pc, #140]	; 191a8 <argp_failure@@Base+0x1fc>
   19118:	ldr	r4, [r3]
   1911c:	cmp	r4, #0
   19120:	beq	19104 <argp_failure@@Base+0x158>
   19124:	mov	r0, r4
   19128:	bl	11b5c <flockfile@plt>
   1912c:	ldr	r3, [pc, #120]	; 191ac <argp_failure@@Base+0x200>
   19130:	ldr	r0, [r3]
   19134:	b	18fec <argp_failure@@Base+0x40>
   19138:	mov	r1, #10
   1913c:	mov	r0, r4
   19140:	bl	11ab4 <__overflow@plt>
   19144:	b	190e0 <argp_failure@@Base+0x134>
   19148:	mov	r0, r7
   1914c:	bl	119c4 <exit@plt>
   19150:	mov	r1, #32
   19154:	mov	r0, r4
   19158:	bl	11ab4 <__overflow@plt>
   1915c:	b	19048 <argp_failure@@Base+0x9c>
   19160:	mov	r1, #58	; 0x3a
   19164:	mov	r0, r4
   19168:	bl	11ab4 <__overflow@plt>
   1916c:	b	19028 <argp_failure@@Base+0x7c>
   19170:	mov	r1, #32
   19174:	mov	r0, r4
   19178:	bl	11ab4 <__overflow@plt>
   1917c:	b	190a0 <argp_failure@@Base+0xf4>
   19180:	mov	r1, #58	; 0x3a
   19184:	mov	r0, r4
   19188:	bl	11ab4 <__overflow@plt>
   1918c:	b	19080 <argp_failure@@Base+0xd4>
   19190:	mov	r0, r6
   19194:	bl	1197c <strerror@plt>
   19198:	ldr	r3, [pc, #16]	; 191b0 <argp_failure@@Base+0x204>
   1919c:	cmp	r0, #0
   191a0:	moveq	r0, r3
   191a4:	b	190b8 <argp_failure@@Base+0x10c>
   191a8:			; <UNDEFINED> instruction: 0x0002e3b0
   191ac:	andeq	lr, r2, r8, lsr #7
   191b0:	andeq	ip, r1, r4, ror #25
   191b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191b8:	add	fp, sp, #32
   191bc:	cmp	r2, #0
   191c0:	sub	sp, sp, #116	; 0x74
   191c4:	str	r2, [fp, #-132]	; 0xffffff7c
   191c8:	str	r0, [fp, #-112]	; 0xffffff90
   191cc:	str	r1, [fp, #-104]	; 0xffffff98
   191d0:	str	r3, [fp, #-96]	; 0xffffffa0
   191d4:	beq	1928c <argp_failure@@Base+0x2e0>
   191d8:	ldr	sl, [pc, #4064]	; 1a1c0 <argp_failure@@Base+0x1214>
   191dc:	mov	r0, r2
   191e0:	bl	11b5c <flockfile@plt>
   191e4:	ldr	r3, [sl, #36]	; 0x24
   191e8:	cmp	r3, #0
   191ec:	str	r3, [fp, #-108]	; 0xffffff94
   191f0:	beq	1973c <argp_failure@@Base+0x790>
   191f4:	mov	r3, #0
   191f8:	mov	r1, r3
   191fc:	ldr	r2, [sl, #32]
   19200:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19204:	bl	1b13c <argp_error@@Base+0xd38>
   19208:	subs	r9, r0, #0
   1920c:	beq	1a280 <argp_failure@@Base+0x12d4>
   19210:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19214:	ands	r3, r3, #11
   19218:	streq	r3, [fp, #-136]	; 0xffffff78
   1921c:	bne	19b98 <argp_failure@@Base+0xbec>
   19220:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19224:	ands	r4, r3, #3
   19228:	bne	1998c <argp_failure@@Base+0x9e0>
   1922c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19230:	tst	r3, #16
   19234:	bne	19968 <argp_failure@@Base+0x9bc>
   19238:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1923c:	tst	r3, #4
   19240:	bne	1994c <argp_failure@@Base+0x9a0>
   19244:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19248:	tst	r3, #8
   1924c:	bne	192e0 <argp_failure@@Base+0x334>
   19250:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19254:	tst	r3, #32
   19258:	bne	19714 <argp_failure@@Base+0x768>
   1925c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19260:	tst	r3, #64	; 0x40
   19264:	bne	19294 <argp_failure@@Base+0x2e8>
   19268:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1926c:	bl	118d4 <funlockfile@plt>
   19270:	ldr	r3, [fp, #-136]	; 0xffffff78
   19274:	cmp	r3, #0
   19278:	beq	19284 <argp_failure@@Base+0x2d8>
   1927c:	mov	r0, r3
   19280:	bl	173bc <argp_parse@@Base+0x16cc>
   19284:	mov	r0, r9
   19288:	bl	1b728 <argp_error@@Base+0x1324>
   1928c:	sub	sp, fp, #32
   19290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19294:	ldr	r5, [pc, #3880]	; 1a1c4 <argp_failure@@Base+0x1218>
   19298:	ldr	r2, [r5]
   1929c:	cmp	r2, #0
   192a0:	beq	19268 <argp_failure@@Base+0x2bc>
   192a4:	cmp	r4, #0
   192a8:	beq	192d0 <argp_failure@@Base+0x324>
   192ac:	ldr	r3, [r9, #28]
   192b0:	ldr	r2, [r9, #32]
   192b4:	cmp	r3, r2
   192b8:	bcs	1a264 <argp_failure@@Base+0x12b8>
   192bc:	add	r1, r3, #1
   192c0:	mov	r2, #10
   192c4:	str	r1, [r9, #28]
   192c8:	strb	r2, [r3]
   192cc:	ldr	r2, [r5]
   192d0:	ldr	r1, [pc, #3824]	; 1a1c8 <argp_failure@@Base+0x121c>
   192d4:	mov	r0, r9
   192d8:	bl	1b868 <argp_error@@Base+0x1464>
   192dc:	b	19268 <argp_failure@@Base+0x2bc>
   192e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   192e4:	ldr	r3, [r3, #4]
   192e8:	cmp	r3, #0
   192ec:	str	r3, [fp, #-108]	; 0xffffff94
   192f0:	beq	19250 <argp_failure@@Base+0x2a4>
   192f4:	cmp	r4, #0
   192f8:	beq	1a114 <argp_failure@@Base+0x1168>
   192fc:	ldr	r3, [r9, #28]
   19300:	ldr	r2, [r9, #32]
   19304:	cmp	r3, r2
   19308:	bcs	1a2b8 <argp_failure@@Base+0x130c>
   1930c:	add	r1, r3, #1
   19310:	mov	r2, #10
   19314:	str	r1, [r9, #28]
   19318:	strb	r2, [r3]
   1931c:	ldr	r3, [fp, #-136]	; 0xffffff78
   19320:	ldr	r2, [fp, #-136]	; 0xffffff78
   19324:	ldr	r3, [r3, #4]
   19328:	ldr	r8, [r2]
   1932c:	str	r3, [fp, #-108]	; 0xffffff94
   19330:	ldr	r3, [fp, #-108]	; 0xffffff94
   19334:	cmp	r3, #0
   19338:	mov	r3, #0
   1933c:	str	r3, [fp, #-88]	; 0xffffffa8
   19340:	str	r3, [fp, #-84]	; 0xffffffac
   19344:	str	r3, [fp, #-80]	; 0xffffffb0
   19348:	beq	19704 <argp_failure@@Base+0x758>
   1934c:	str	sl, [fp, #-100]	; 0xffffff9c
   19350:	ldr	lr, [r9, #28]
   19354:	ldr	r3, [r9, #24]
   19358:	ldr	r5, [r9, #16]
   1935c:	sub	lr, lr, r3
   19360:	cmp	lr, r5
   19364:	ldr	r6, [r8]
   19368:	ldr	sl, [r8, #8]
   1936c:	bhi	19e6c <argp_failure@@Base+0xec0>
   19370:	ldr	r1, [r9, #4]
   19374:	ldr	r7, [r6, #12]
   19378:	str	r1, [fp, #-116]	; 0xffffff8c
   1937c:	ldr	r1, [r9, #12]
   19380:	mov	r3, #0
   19384:	str	r1, [fp, #-120]	; 0xffffff88
   19388:	sub	r1, fp, #88	; 0x58
   1938c:	str	r3, [r9, #4]
   19390:	and	r2, r7, #8
   19394:	str	r1, [fp, #-68]	; 0xffffffbc
   19398:	ldr	r1, [fp, #-104]	; 0xffffff98
   1939c:	mov	r0, #1
   193a0:	cmp	r2, r3
   193a4:	mov	r4, r2
   193a8:	str	r0, [fp, #-64]	; 0xffffffc0
   193ac:	str	r8, [fp, #-76]	; 0xffffffb4
   193b0:	str	r9, [fp, #-72]	; 0xffffffb8
   193b4:	str	r1, [fp, #-60]	; 0xffffffc4
   193b8:	bne	19cf8 <argp_failure@@Base+0xd4c>
   193bc:	ldr	ip, [r8, #4]
   193c0:	cmp	ip, r3
   193c4:	beq	193f0 <argp_failure@@Base+0x444>
   193c8:	add	r0, r6, #24
   193cc:	ldr	r3, [r0, #-24]	; 0xffffffe8
   193d0:	cmp	r3, #0
   193d4:	beq	193e4 <argp_failure@@Base+0x438>
   193d8:	ldr	r3, [r0, #-12]
   193dc:	tst	r3, #2
   193e0:	beq	19cf4 <argp_failure@@Base+0xd48>
   193e4:	subs	ip, ip, #1
   193e8:	add	r0, r0, #24
   193ec:	bne	193cc <argp_failure@@Base+0x420>
   193f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   193f4:	cmp	lr, r5
   193f8:	str	r2, [fp, #-128]	; 0xffffff80
   193fc:	ldr	r5, [r3, #8]
   19400:	bhi	19d0c <argp_failure@@Base+0xd60>
   19404:	str	r5, [r9, #12]
   19408:	ldr	r5, [r8, #4]
   1940c:	cmp	r5, #0
   19410:	beq	19494 <argp_failure@@Base+0x4e8>
   19414:	mov	r4, r6
   19418:	str	r8, [fp, #-124]	; 0xffffff84
   1941c:	b	19434 <argp_failure@@Base+0x488>
   19420:	subs	r5, r5, #1
   19424:	add	r4, r4, #24
   19428:	beq	19488 <argp_failure@@Base+0x4dc>
   1942c:	ldr	r7, [r4, #12]
   19430:	and	r2, r7, #8
   19434:	cmp	r2, #0
   19438:	bne	19420 <argp_failure@@Base+0x474>
   1943c:	ldr	r8, [r4, #4]
   19440:	sub	r2, r8, #1
   19444:	cmp	r2, #254	; 0xfe
   19448:	bhi	19420 <argp_failure@@Base+0x474>
   1944c:	bl	119ac <__ctype_b_loc@plt>
   19450:	lsl	r2, r8, #1
   19454:	ldr	r1, [r0]
   19458:	ldrh	r2, [r1, r2]
   1945c:	tst	r2, #16384	; 0x4000
   19460:	beq	19420 <argp_failure@@Base+0x474>
   19464:	ldrb	r2, [sl]
   19468:	cmp	r8, r2
   1946c:	bne	19420 <argp_failure@@Base+0x474>
   19470:	tst	r7, #2
   19474:	beq	19db8 <argp_failure@@Base+0xe0c>
   19478:	subs	r5, r5, #1
   1947c:	add	sl, sl, #1
   19480:	add	r4, r4, #24
   19484:	bne	1942c <argp_failure@@Base+0x480>
   19488:	ldr	r4, [r6, #12]
   1948c:	ldr	r8, [fp, #-124]	; 0xffffff84
   19490:	and	r4, r4, #8
   19494:	ldr	r3, [r9, #28]
   19498:	ldr	r1, [r9, #24]
   1949c:	cmp	r4, #0
   194a0:	ldr	r2, [r9, #16]
   194a4:	sub	r3, r3, r1
   194a8:	beq	19d24 <argp_failure@@Base+0xd78>
   194ac:	cmp	r3, r2
   194b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   194b4:	ldr	r4, [r3, #16]
   194b8:	bhi	19fec <argp_failure@@Base+0x1040>
   194bc:	str	r4, [r9, #12]
   194c0:	ldr	r5, [r8, #4]
   194c4:	cmp	r5, #0
   194c8:	addne	r4, r6, #24
   194cc:	bne	194e0 <argp_failure@@Base+0x534>
   194d0:	b	19570 <argp_failure@@Base+0x5c4>
   194d4:	subs	r5, r5, #1
   194d8:	add	r4, r4, #24
   194dc:	beq	19570 <argp_failure@@Base+0x5c4>
   194e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   194e4:	cmp	r3, #0
   194e8:	beq	194d4 <argp_failure@@Base+0x528>
   194ec:	ldr	r3, [r4, #-12]
   194f0:	tst	r3, #2
   194f4:	bne	194d4 <argp_failure@@Base+0x528>
   194f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   194fc:	sub	r1, fp, #76	; 0x4c
   19500:	ldr	r0, [r3, #16]
   19504:	bl	176ec <argp_parse@@Base+0x19fc>
   19508:	ldr	sl, [r4, #-24]	; 0xffffffe8
   1950c:	mov	r0, sl
   19510:	bl	119dc <strlen@plt>
   19514:	subs	r7, r0, #0
   19518:	beq	194d4 <argp_failure@@Base+0x528>
   1951c:	ldr	r2, [r9, #28]
   19520:	ldr	lr, [r9, #32]
   19524:	add	ip, r2, r7
   19528:	cmp	lr, ip
   1952c:	mov	r1, r7
   19530:	mov	r0, r9
   19534:	bcs	19548 <argp_failure@@Base+0x59c>
   19538:	bl	1b848 <argp_error@@Base+0x1444>
   1953c:	cmp	r0, #0
   19540:	beq	194d4 <argp_failure@@Base+0x528>
   19544:	ldr	r2, [r9, #28]
   19548:	mov	r0, r2
   1954c:	mov	r1, sl
   19550:	mov	r2, r7
   19554:	bl	11808 <memcpy@plt>
   19558:	ldr	r2, [r9, #28]
   1955c:	subs	r5, r5, #1
   19560:	add	r3, r2, r7
   19564:	str	r3, [r9, #28]
   19568:	add	r4, r4, #24
   1956c:	bne	194e0 <argp_failure@@Base+0x534>
   19570:	ldr	r3, [r9, #28]
   19574:	ldr	r1, [r9, #24]
   19578:	ldr	r2, [r9, #16]
   1957c:	sub	r3, r3, r1
   19580:	cmp	r3, r2
   19584:	bhi	19fa0 <argp_failure@@Base+0xff4>
   19588:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1958c:	mov	r3, #0
   19590:	cmp	r2, r3
   19594:	str	r3, [r9, #4]
   19598:	beq	19e88 <argp_failure@@Base+0xedc>
   1959c:	ldr	r3, [r6, #12]
   195a0:	tst	r3, #8
   195a4:	bne	195d0 <argp_failure@@Base+0x624>
   195a8:	ldr	r4, [r6, #4]
   195ac:	sub	r3, r4, #1
   195b0:	cmp	r3, #254	; 0xfe
   195b4:	bhi	195d0 <argp_failure@@Base+0x624>
   195b8:	bl	119ac <__ctype_b_loc@plt>
   195bc:	lsl	r4, r4, #1
   195c0:	ldr	r3, [r0]
   195c4:	ldrh	r3, [r3, r4]
   195c8:	tst	r3, #16384	; 0x4000
   195cc:	bne	195dc <argp_failure@@Base+0x630>
   195d0:	ldr	r3, [r6]
   195d4:	cmp	r3, #0
   195d8:	beq	1a250 <argp_failure@@Base+0x12a4>
   195dc:	ldr	r3, [r9, #28]
   195e0:	ldr	r1, [r9, #24]
   195e4:	ldr	r2, [r9, #16]
   195e8:	sub	r3, r3, r1
   195ec:	cmp	r3, r2
   195f0:	bhi	19e38 <argp_failure@@Base+0xe8c>
   195f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   195f8:	str	r3, [r9, #4]
   195fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   19600:	add	r8, r8, #28
   19604:	subs	r3, r3, #1
   19608:	str	r3, [fp, #-108]	; 0xffffff94
   1960c:	ldr	r3, [fp, #-120]	; 0xffffff88
   19610:	str	r3, [r9, #12]
   19614:	bne	19350 <argp_failure@@Base+0x3a4>
   19618:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1961c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   19620:	cmp	r3, #0
   19624:	beq	19704 <argp_failure@@Base+0x758>
   19628:	ldr	r3, [sl, #4]
   1962c:	cmp	r3, #0
   19630:	beq	19704 <argp_failure@@Base+0x758>
   19634:	ldr	r3, [fp, #-104]	; 0xffffff98
   19638:	ldr	r1, [pc, #2956]	; 1a1cc <argp_failure@@Base+0x1220>
   1963c:	cmp	r3, #0
   19640:	ldr	r0, [pc, #2952]	; 1a1d0 <argp_failure@@Base+0x1224>
   19644:	ldrne	r2, [r3]
   19648:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1964c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19650:	bl	1749c <argp_parse@@Base+0x17ac>
   19654:	subs	r4, r0, #0
   19658:	beq	19704 <argp_failure@@Base+0x758>
   1965c:	ldrb	r3, [r4]
   19660:	cmp	r3, #0
   19664:	beq	196f8 <argp_failure@@Base+0x74c>
   19668:	ldr	r3, [r9, #28]
   1966c:	ldr	r2, [r9, #32]
   19670:	cmp	r3, r2
   19674:	bcs	1a314 <argp_failure@@Base+0x1368>
   19678:	add	r1, r3, #1
   1967c:	mov	r2, #10
   19680:	str	r1, [r9, #28]
   19684:	strb	r2, [r3]
   19688:	mov	r0, r4
   1968c:	bl	119dc <strlen@plt>
   19690:	subs	r5, r0, #0
   19694:	beq	1a2f0 <argp_failure@@Base+0x1344>
   19698:	ldr	r0, [r9, #28]
   1969c:	ldr	r2, [r9, #32]
   196a0:	add	r3, r0, r5
   196a4:	cmp	r2, r3
   196a8:	bcs	196c4 <argp_failure@@Base+0x718>
   196ac:	mov	r1, r5
   196b0:	mov	r0, r9
   196b4:	bl	1b848 <argp_error@@Base+0x1444>
   196b8:	cmp	r0, #0
   196bc:	beq	1a2f0 <argp_failure@@Base+0x1344>
   196c0:	ldr	r0, [r9, #28]
   196c4:	mov	r2, r5
   196c8:	mov	r1, r4
   196cc:	bl	11808 <memcpy@plt>
   196d0:	ldr	r3, [r9, #28]
   196d4:	add	r3, r3, r5
   196d8:	str	r3, [r9, #28]
   196dc:	ldr	r2, [r9, #32]
   196e0:	cmp	r2, r3
   196e4:	bls	1a2f8 <argp_failure@@Base+0x134c>
   196e8:	add	r1, r3, #1
   196ec:	mov	r2, #10
   196f0:	str	r1, [r9, #28]
   196f4:	strb	r2, [r3]
   196f8:	ldr	r3, [pc, #2768]	; 1a1d0 <argp_failure@@Base+0x1224>
   196fc:	cmp	r4, r3
   19700:	bne	1a244 <argp_failure@@Base+0x1298>
   19704:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19708:	mov	r4, #1
   1970c:	tst	r3, #32
   19710:	beq	1925c <argp_failure@@Base+0x2b0>
   19714:	mov	r3, #0
   19718:	str	r3, [sp]
   1971c:	str	r9, [sp, #4]
   19720:	mov	r3, r4
   19724:	ldr	r1, [fp, #-104]	; 0xffffff98
   19728:	ldr	r0, [fp, #-112]	; 0xffffff90
   1972c:	mov	r2, #1
   19730:	bl	17898 <argp_parse@@Base+0x1ba8>
   19734:	orr	r4, r4, r0
   19738:	b	1925c <argp_failure@@Base+0x2b0>
   1973c:	ldr	r0, [pc, #2704]	; 1a1d4 <argp_failure@@Base+0x1228>
   19740:	bl	11940 <getenv@plt>
   19744:	mov	lr, sl
   19748:	sub	r3, fp, #76	; 0x4c
   1974c:	mov	ip, r3
   19750:	str	r3, [fp, #-100]	; 0xffffff9c
   19754:	mov	r6, r0
   19758:	ldm	lr!, {r0, r1, r2, r3}
   1975c:	cmp	r6, #0
   19760:	stmia	ip!, {r0, r1, r2, r3}
   19764:	ldm	lr!, {r0, r1, r2, r3}
   19768:	stmia	ip!, {r0, r1, r2, r3}
   1976c:	ldm	lr, {r0, r1}
   19770:	stm	ip, {r0, r1}
   19774:	beq	191f4 <argp_failure@@Base+0x248>
   19778:	ldrb	r9, [r6]
   1977c:	ldr	r8, [pc, #2644]	; 1a1d8 <argp_failure@@Base+0x122c>
   19780:	cmp	r9, #0
   19784:	beq	198d8 <argp_failure@@Base+0x92c>
   19788:	bl	119ac <__ctype_b_loc@plt>
   1978c:	mov	r5, r0
   19790:	ldr	r1, [r0]
   19794:	b	1979c <argp_failure@@Base+0x7f0>
   19798:	ldrb	r9, [r6, #1]!
   1979c:	lsl	r3, r9, #1
   197a0:	ldrh	r3, [r1, r3]
   197a4:	tst	r3, #8192	; 0x2000
   197a8:	bne	19798 <argp_failure@@Base+0x7ec>
   197ac:	ands	r2, r3, #1024	; 0x400
   197b0:	beq	198d0 <argp_failure@@Base+0x924>
   197b4:	cmp	r9, #95	; 0x5f
   197b8:	cmpne	r9, #45	; 0x2d
   197bc:	lsl	r3, r3, #28
   197c0:	moveq	r7, #1
   197c4:	movne	r7, #0
   197c8:	orrs	r3, r7, r3, lsr #31
   197cc:	beq	1a08c <argp_failure@@Base+0x10e0>
   197d0:	mov	r4, r6
   197d4:	ldrb	r3, [r4, #1]!
   197d8:	cmp	r3, #95	; 0x5f
   197dc:	cmpne	r3, #45	; 0x2d
   197e0:	lsl	r2, r3, #1
   197e4:	moveq	r0, #1
   197e8:	ldrh	r2, [r1, r2]
   197ec:	movne	r0, #0
   197f0:	lsl	ip, r2, #28
   197f4:	orrs	r0, r0, ip, lsr #31
   197f8:	bne	197d4 <argp_failure@@Base+0x828>
   197fc:	tst	r2, #8192	; 0x2000
   19800:	sub	r7, r4, r6
   19804:	beq	1981c <argp_failure@@Base+0x870>
   19808:	ldrb	r3, [r4, #1]!
   1980c:	lsl	r2, r3, #1
   19810:	ldrh	r2, [r1, r2]
   19814:	tst	r2, #8192	; 0x2000
   19818:	bne	19808 <argp_failure@@Base+0x85c>
   1981c:	cmp	r3, #44	; 0x2c
   19820:	cmpne	r3, #0
   19824:	beq	19938 <argp_failure@@Base+0x98c>
   19828:	cmp	r3, #61	; 0x3d
   1982c:	beq	19c94 <argp_failure@@Base+0xce8>
   19830:	ldrb	r3, [r4]
   19834:	lsl	r3, r3, #1
   19838:	ldrh	r3, [r1, r3]
   1983c:	tst	r3, #2048	; 0x800
   19840:	bne	19c34 <argp_failure@@Base+0xc88>
   19844:	ldr	r3, [fp, #-108]	; 0xffffff94
   19848:	mov	r9, r3
   1984c:	str	r3, [fp, #-116]	; 0xffffff8c
   19850:	ldr	r5, [pc, #2436]	; 1a1dc <argp_failure@@Base+0x1230>
   19854:	b	19864 <argp_failure@@Base+0x8b8>
   19858:	add	r5, r5, #16
   1985c:	cmp	r5, r8
   19860:	beq	1a0f4 <argp_failure@@Base+0x1148>
   19864:	mov	r0, r5
   19868:	bl	119dc <strlen@plt>
   1986c:	cmp	r0, r7
   19870:	bne	19858 <argp_failure@@Base+0x8ac>
   19874:	mov	r2, r7
   19878:	mov	r1, r5
   1987c:	mov	r0, r6
   19880:	bl	11bd4 <strncmp@plt>
   19884:	cmp	r0, #0
   19888:	bne	19858 <argp_failure@@Base+0x8ac>
   1988c:	cmp	r9, #0
   19890:	beq	198a0 <argp_failure@@Base+0x8f4>
   19894:	ldrb	r1, [r5, #14]
   19898:	cmp	r1, #0
   1989c:	beq	1a2d4 <argp_failure@@Base+0x1328>
   198a0:	ldrb	r3, [r5, #15]
   198a4:	sub	r2, fp, #36	; 0x24
   198a8:	add	r3, r2, r3
   198ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   198b0:	str	r2, [r3, #-40]	; 0xffffffd8
   198b4:	cmp	r5, r8
   198b8:	beq	1a0f4 <argp_failure@@Base+0x1148>
   198bc:	ldrb	r9, [r4]
   198c0:	cmp	r9, #44	; 0x2c
   198c4:	beq	19fd4 <argp_failure@@Base+0x1028>
   198c8:	mov	r6, r4
   198cc:	b	19780 <argp_failure@@Base+0x7d4>
   198d0:	cmp	r9, #0
   198d4:	bne	1a22c <argp_failure@@Base+0x1280>
   198d8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   198dc:	ldr	r1, [pc, #2296]	; 1a1dc <argp_failure@@Base+0x1230>
   198e0:	add	r3, r1, #16
   198e4:	cmp	r3, r8
   198e8:	mov	r1, r3
   198ec:	beq	1a030 <argp_failure@@Base+0x1084>
   198f0:	ldrb	r2, [r3, #14]
   198f4:	cmp	r2, #0
   198f8:	bne	198e0 <argp_failure@@Base+0x934>
   198fc:	ldrb	r0, [r3, #15]
   19900:	sub	ip, fp, #36	; 0x24
   19904:	cmp	r0, #32
   19908:	add	ip, ip, r0
   1990c:	beq	198e0 <argp_failure@@Base+0x934>
   19910:	ldr	r0, [ip, #-40]	; 0xffffffd8
   19914:	cmp	r0, lr
   19918:	blt	198e0 <argp_failure@@Base+0x934>
   1991c:	ldr	r1, [pc, #2236]	; 1a1e0 <argp_failure@@Base+0x1234>
   19920:	ldr	r0, [fp, #-104]	; 0xffffff98
   19924:	stm	sp, {r1, r3}
   19928:	ldr	r3, [pc, #2228]	; 1a1e4 <argp_failure@@Base+0x1238>
   1992c:	mov	r1, r2
   19930:	bl	18fac <argp_failure@@Base>
   19934:	b	191f4 <argp_failure@@Base+0x248>
   19938:	cmp	r9, #110	; 0x6e
   1993c:	beq	19cc4 <argp_failure@@Base+0xd18>
   19940:	mov	r9, #1
   19944:	str	r9, [fp, #-116]	; 0xffffff8c
   19948:	b	19850 <argp_failure@@Base+0x8a4>
   1994c:	ldr	r3, [fp, #4]
   19950:	ldr	r1, [pc, #2192]	; 1a1e8 <argp_failure@@Base+0x123c>
   19954:	mov	r2, r3
   19958:	mov	r0, r9
   1995c:	bl	1b868 <argp_error@@Base+0x1464>
   19960:	mov	r4, #1
   19964:	b	19244 <argp_failure@@Base+0x298>
   19968:	mov	r2, #1
   1996c:	mov	r3, #0
   19970:	stm	sp, {r2, r9}
   19974:	ldr	r1, [fp, #-104]	; 0xffffff98
   19978:	mov	r2, r3
   1997c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19980:	bl	17898 <argp_parse@@Base+0x1ba8>
   19984:	orr	r4, r4, r0
   19988:	b	19238 <argp_failure@@Base+0x28c>
   1998c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19990:	mov	r4, #1
   19994:	mov	r6, r4
   19998:	ldr	r1, [r3, #16]
   1999c:	ldr	r0, [r3, #8]
   199a0:	bl	18d9c <argp_parse@@Base+0x30ac>
   199a4:	mov	r1, #0
   199a8:	add	r3, r0, #14
   199ac:	bic	r3, r3, #7
   199b0:	sub	sp, sp, r3
   199b4:	add	r7, sp, #8
   199b8:	mov	r2, r0
   199bc:	mov	r0, r7
   199c0:	bl	11a54 <memset@plt>
   199c4:	sub	r3, fp, #76	; 0x4c
   199c8:	str	r3, [fp, #-100]	; 0xffffff9c
   199cc:	ldr	r8, [fp, #-136]	; 0xffffff78
   199d0:	str	r7, [fp, #-108]	; 0xffffff94
   199d4:	b	19af0 <argp_failure@@Base+0xb44>
   199d8:	cmp	r4, #0
   199dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   199e0:	ldr	r5, [r9, #12]
   199e4:	ldrne	r2, [pc, #2048]	; 1a1ec <argp_failure@@Base+0x1240>
   199e8:	str	r7, [r9, #12]
   199ec:	ldreq	r2, [pc, #2044]	; 1a1f0 <argp_failure@@Base+0x1244>
   199f0:	str	r3, [fp, #-76]	; 0xffffffb4
   199f4:	ldr	r1, [pc, #2040]	; 1a1f4 <argp_failure@@Base+0x1248>
   199f8:	ldr	r3, [fp, #4]
   199fc:	mov	r0, r9
   19a00:	bl	1b868 <argp_error@@Base+0x1464>
   19a04:	ldr	r3, [r9, #28]
   19a08:	ldr	r1, [r9, #24]
   19a0c:	ldr	r2, [r9, #16]
   19a10:	sub	r3, r3, r1
   19a14:	cmp	r3, r2
   19a18:	ldr	r7, [sl, #28]
   19a1c:	bhi	19b84 <argp_failure@@Base+0xbd8>
   19a20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a24:	ldr	r4, [r9, #4]
   19a28:	tst	r3, #2
   19a2c:	str	r7, [r9, #4]
   19a30:	beq	19b68 <argp_failure@@Base+0xbbc>
   19a34:	ldr	r3, [r8, #4]
   19a38:	cmp	r3, #0
   19a3c:	beq	19a8c <argp_failure@@Base+0xae0>
   19a40:	ldr	ip, [r9, #28]
   19a44:	ldr	r2, [r9, #32]
   19a48:	add	r3, ip, #12
   19a4c:	cmp	r2, r3
   19a50:	bcs	19a6c <argp_failure@@Base+0xac0>
   19a54:	mov	r1, #12
   19a58:	mov	r0, r9
   19a5c:	bl	1b848 <argp_error@@Base+0x1444>
   19a60:	cmp	r0, #0
   19a64:	beq	19a8c <argp_failure@@Base+0xae0>
   19a68:	ldr	ip, [r9, #28]
   19a6c:	ldr	r3, [pc, #1924]	; 1a1f8 <argp_failure@@Base+0x124c>
   19a70:	ldm	r3!, {r0, r1, r2}
   19a74:	str	r0, [ip]
   19a78:	str	r1, [ip, #4]
   19a7c:	str	r2, [ip, #8]
   19a80:	ldr	r3, [r9, #28]
   19a84:	add	r3, r3, #12
   19a88:	str	r3, [r9, #28]
   19a8c:	mov	r3, r6
   19a90:	ldr	r1, [fp, #-104]	; 0xffffff98
   19a94:	str	r9, [sp]
   19a98:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19a9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19aa0:	bl	183d4 <argp_parse@@Base+0x26e4>
   19aa4:	ldr	r3, [r9, #28]
   19aa8:	ldr	r1, [r9, #24]
   19aac:	sub	r1, r3, r1
   19ab0:	mov	r7, r0
   19ab4:	ldr	r0, [r9, #16]
   19ab8:	cmp	r1, r0
   19abc:	strls	r5, [r9, #12]
   19ac0:	bhi	19b34 <argp_failure@@Base+0xb88>
   19ac4:	ldr	r1, [r9, #32]
   19ac8:	str	r4, [r9, #4]
   19acc:	cmp	r1, r3
   19ad0:	bls	19b18 <argp_failure@@Base+0xb6c>
   19ad4:	add	r1, r3, #1
   19ad8:	mov	r2, #10
   19adc:	str	r1, [r9, #28]
   19ae0:	strb	r2, [r3]
   19ae4:	cmp	r7, #0
   19ae8:	mov	r4, #0
   19aec:	beq	19b90 <argp_failure@@Base+0xbe4>
   19af0:	ldr	r3, [r9, #28]
   19af4:	ldr	r1, [r9, #24]
   19af8:	ldr	r2, [r9, #16]
   19afc:	sub	r3, r3, r1
   19b00:	cmp	r3, r2
   19b04:	ldr	r7, [sl, #28]
   19b08:	bls	199d8 <argp_failure@@Base+0xa2c>
   19b0c:	mov	r0, r9
   19b10:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19b14:	b	199d8 <argp_failure@@Base+0xa2c>
   19b18:	mov	r1, r6
   19b1c:	mov	r0, r9
   19b20:	bl	1b848 <argp_error@@Base+0x1444>
   19b24:	cmp	r0, #0
   19b28:	beq	19ae4 <argp_failure@@Base+0xb38>
   19b2c:	ldr	r3, [r9, #28]
   19b30:	b	19ad4 <argp_failure@@Base+0xb28>
   19b34:	mov	r0, r9
   19b38:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19b3c:	ldr	r3, [r9, #28]
   19b40:	ldr	r1, [r9, #24]
   19b44:	ldr	r0, [r9, #16]
   19b48:	sub	r1, r3, r1
   19b4c:	cmp	r1, r0
   19b50:	str	r5, [r9, #12]
   19b54:	bls	19ac4 <argp_failure@@Base+0xb18>
   19b58:	mov	r0, r9
   19b5c:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19b60:	ldr	r3, [r9, #28]
   19b64:	b	19ac4 <argp_failure@@Base+0xb18>
   19b68:	mov	r1, r9
   19b6c:	mov	r0, r8
   19b70:	bl	18df4 <argp_parse@@Base+0x3104>
   19b74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b78:	orr	r3, r3, #2
   19b7c:	str	r3, [fp, #-96]	; 0xffffffa0
   19b80:	b	19a8c <argp_failure@@Base+0xae0>
   19b84:	mov	r0, r9
   19b88:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19b8c:	b	19a20 <argp_failure@@Base+0xa74>
   19b90:	mov	r4, #1
   19b94:	b	1922c <argp_failure@@Base+0x280>
   19b98:	mov	r1, #0
   19b9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19ba0:	bl	18624 <argp_parse@@Base+0x2934>
   19ba4:	ldr	r2, [pc, #1616]	; 1a1fc <argp_failure@@Base+0x1250>
   19ba8:	ldr	r4, [r0, #4]
   19bac:	ldr	r5, [r0]
   19bb0:	mov	r1, r4
   19bb4:	mov	r6, r0
   19bb8:	str	r0, [fp, #-136]	; 0xffffff78
   19bbc:	mov	r0, r5
   19bc0:	bl	18d14 <argp_parse@@Base+0x3024>
   19bc4:	ldr	r2, [pc, #1588]	; 1a200 <argp_failure@@Base+0x1254>
   19bc8:	cmp	r0, #0
   19bcc:	mvnne	r3, #0
   19bd0:	strne	r3, [r0, #12]
   19bd4:	movne	r3, r6
   19bd8:	mov	r0, r5
   19bdc:	ldrne	r4, [r3, #4]
   19be0:	mov	r1, r4
   19be4:	bl	18d14 <argp_parse@@Base+0x3024>
   19be8:	cmp	r0, #0
   19bec:	mvnne	r3, #0
   19bf0:	strne	r3, [r0, #12]
   19bf4:	ldrne	r3, [fp, #-136]	; 0xffffff78
   19bf8:	ldrne	r4, [r3, #4]
   19bfc:	cmp	r4, #0
   19c00:	beq	19220 <argp_failure@@Base+0x274>
   19c04:	mov	r3, r5
   19c08:	mov	r1, #0
   19c0c:	str	r1, [r3, #24]
   19c10:	add	r1, r1, #1
   19c14:	cmp	r1, r4
   19c18:	add	r3, r3, #28
   19c1c:	bne	19c0c <argp_failure@@Base+0xc60>
   19c20:	mov	r0, r5
   19c24:	ldr	r3, [pc, #1496]	; 1a204 <argp_failure@@Base+0x1258>
   19c28:	mov	r2, #28
   19c2c:	bl	11b80 <qsort@plt>
   19c30:	b	19220 <argp_failure@@Base+0x274>
   19c34:	mov	r2, #10
   19c38:	mov	r1, #0
   19c3c:	mov	r0, r4
   19c40:	bl	11760 <strtol@plt>
   19c44:	ldrb	r3, [r4]
   19c48:	ldr	r2, [r5]
   19c4c:	lsl	r3, r3, #1
   19c50:	ldrh	r3, [r2, r3]
   19c54:	tst	r3, #2048	; 0x800
   19c58:	str	r0, [fp, #-116]	; 0xffffff8c
   19c5c:	beq	19c84 <argp_failure@@Base+0xcd8>
   19c60:	ldrb	r3, [r4, #1]!
   19c64:	lsl	r3, r3, #1
   19c68:	ldrh	r3, [r2, r3]
   19c6c:	tst	r3, #2048	; 0x800
   19c70:	bne	19c60 <argp_failure@@Base+0xcb4>
   19c74:	b	19c84 <argp_failure@@Base+0xcd8>
   19c78:	ldrb	r3, [r4, #1]!
   19c7c:	lsl	r3, r3, #1
   19c80:	ldrh	r3, [r2, r3]
   19c84:	tst	r3, #8192	; 0x2000
   19c88:	bne	19c78 <argp_failure@@Base+0xccc>
   19c8c:	ldr	r9, [fp, #-108]	; 0xffffff94
   19c90:	b	19850 <argp_failure@@Base+0x8a4>
   19c94:	ldrb	r3, [r4, #1]
   19c98:	add	r4, r4, #1
   19c9c:	lsl	r3, r3, #1
   19ca0:	ldrh	r3, [r1, r3]
   19ca4:	tst	r3, #8192	; 0x2000
   19ca8:	beq	1983c <argp_failure@@Base+0x890>
   19cac:	ldrb	r3, [r4, #1]!
   19cb0:	lsl	r3, r3, #1
   19cb4:	ldrh	r3, [r1, r3]
   19cb8:	tst	r3, #8192	; 0x2000
   19cbc:	bne	19cac <argp_failure@@Base+0xd00>
   19cc0:	b	1983c <argp_failure@@Base+0x890>
   19cc4:	ldrb	r3, [r6, #1]
   19cc8:	cmp	r3, #111	; 0x6f
   19ccc:	bne	19940 <argp_failure@@Base+0x994>
   19cd0:	ldrb	r3, [r6, #2]
   19cd4:	cmp	r3, #45	; 0x2d
   19cd8:	bne	19940 <argp_failure@@Base+0x994>
   19cdc:	ldr	r3, [fp, #-108]	; 0xffffff94
   19ce0:	add	r6, r6, #3
   19ce4:	sub	r7, r7, #3
   19ce8:	str	r3, [fp, #-116]	; 0xffffff8c
   19cec:	mov	r9, #1
   19cf0:	b	19850 <argp_failure@@Base+0x8a4>
   19cf4:	mov	r3, #1
   19cf8:	str	r3, [fp, #-128]	; 0xffffff80
   19cfc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d00:	cmp	lr, r5
   19d04:	ldr	r5, [r3, #8]
   19d08:	bls	19404 <argp_failure@@Base+0x458>
   19d0c:	mov	r0, r9
   19d10:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19d14:	ldr	r7, [r6, #12]
   19d18:	and	r2, r7, #8
   19d1c:	mov	r4, r2
   19d20:	b	19404 <argp_failure@@Base+0x458>
   19d24:	cmp	r3, r2
   19d28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d2c:	ldr	r4, [r3, #12]
   19d30:	bhi	19fe0 <argp_failure@@Base+0x1034>
   19d34:	str	r4, [r9, #12]
   19d38:	ldr	r5, [r8, #4]
   19d3c:	cmp	r5, #0
   19d40:	beq	19570 <argp_failure@@Base+0x5c4>
   19d44:	add	r4, r6, #24
   19d48:	ldr	r7, [fp, #-100]	; 0xffffff9c
   19d4c:	b	19d5c <argp_failure@@Base+0xdb0>
   19d50:	subs	r5, r5, #1
   19d54:	add	r4, r4, #24
   19d58:	beq	19570 <argp_failure@@Base+0x5c4>
   19d5c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19d60:	cmp	r3, #0
   19d64:	beq	19d50 <argp_failure@@Base+0xda4>
   19d68:	ldr	r3, [r4, #-12]
   19d6c:	tst	r3, #2
   19d70:	bne	19d50 <argp_failure@@Base+0xda4>
   19d74:	sub	r1, fp, #76	; 0x4c
   19d78:	ldr	r0, [r7, #12]
   19d7c:	bl	176ec <argp_parse@@Base+0x19fc>
   19d80:	ldr	r2, [r4, #-24]	; 0xffffffe8
   19d84:	ldr	r1, [pc, #1148]	; 1a208 <argp_failure@@Base+0x125c>
   19d88:	mov	r0, r9
   19d8c:	bl	1b868 <argp_error@@Base+0x1464>
   19d90:	ldr	r3, [r6, #8]
   19d94:	ldr	r1, [pc, #1136]	; 1a20c <argp_failure@@Base+0x1260>
   19d98:	subs	r2, r3, #0
   19d9c:	mov	r0, r9
   19da0:	beq	19d50 <argp_failure@@Base+0xda4>
   19da4:	ldr	ip, [r6, #12]
   19da8:	tst	ip, #1
   19dac:	ldrne	r1, [pc, #1116]	; 1a210 <argp_failure@@Base+0x1264>
   19db0:	bl	1b868 <argp_error@@Base+0x1464>
   19db4:	b	19d50 <argp_failure@@Base+0xda4>
   19db8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19dbc:	sub	r1, fp, #76	; 0x4c
   19dc0:	ldr	r0, [r3, #8]
   19dc4:	bl	176ec <argp_parse@@Base+0x19fc>
   19dc8:	ldr	r3, [r9, #28]
   19dcc:	ldr	r2, [r9, #32]
   19dd0:	cmp	r3, r2
   19dd4:	bcs	1a014 <argp_failure@@Base+0x1068>
   19dd8:	add	r2, r3, #1
   19ddc:	str	r2, [r9, #28]
   19de0:	mov	r2, #45	; 0x2d
   19de4:	strb	r2, [r3]
   19de8:	ldr	r3, [r9, #28]
   19dec:	ldr	r2, [r9, #32]
   19df0:	ldrb	r7, [sl]
   19df4:	cmp	r3, r2
   19df8:	bcs	19ff8 <argp_failure@@Base+0x104c>
   19dfc:	add	r2, r3, #1
   19e00:	str	r2, [r9, #28]
   19e04:	strb	r7, [r3]
   19e08:	ldr	r3, [fp, #-128]	; 0xffffff80
   19e0c:	cmp	r3, #0
   19e10:	beq	19fac <argp_failure@@Base+0x1000>
   19e14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e18:	ldr	r3, [r3]
   19e1c:	cmp	r3, #0
   19e20:	bne	19fac <argp_failure@@Base+0x1000>
   19e24:	ldr	r3, [r6, #8]
   19e28:	cmp	r3, #0
   19e2c:	movne	r3, #1
   19e30:	strne	r3, [fp, #-80]	; 0xffffffb0
   19e34:	b	19478 <argp_failure@@Base+0x4cc>
   19e38:	mov	r0, r9
   19e3c:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19e40:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19e44:	ldr	r3, [r9, #28]
   19e48:	ldr	r1, [r9, #24]
   19e4c:	str	r2, [r9, #4]
   19e50:	ldr	r2, [r9, #16]
   19e54:	sub	r3, r3, r1
   19e58:	cmp	r3, r2
   19e5c:	bls	195fc <argp_failure@@Base+0x650>
   19e60:	mov	r0, r9
   19e64:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19e68:	b	195fc <argp_failure@@Base+0x650>
   19e6c:	mov	r0, r9
   19e70:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19e74:	ldr	lr, [r9, #28]
   19e78:	ldr	r2, [r9, #24]
   19e7c:	ldr	r5, [r9, #16]
   19e80:	sub	lr, lr, r2
   19e84:	b	19370 <argp_failure@@Base+0x3c4>
   19e88:	ldr	r4, [r6, #16]
   19e8c:	ldr	r1, [r6, #4]
   19e90:	mov	r0, r4
   19e94:	ldr	r3, [fp, #-104]	; 0xffffff98
   19e98:	ldr	r2, [r8, #20]
   19e9c:	bl	1749c <argp_parse@@Base+0x17ac>
   19ea0:	subs	r5, r0, #0
   19ea4:	beq	19f5c <argp_failure@@Base+0xfb0>
   19ea8:	ldrb	r3, [r5]
   19eac:	cmp	r3, #0
   19eb0:	beq	19f4c <argp_failure@@Base+0xfa0>
   19eb4:	ldr	r3, [r9, #28]
   19eb8:	ldr	r1, [r9, #24]
   19ebc:	ldr	r2, [r9, #16]
   19ec0:	sub	r3, r3, r1
   19ec4:	cmp	r3, r2
   19ec8:	bhi	1a14c <argp_failure@@Base+0x11a0>
   19ecc:	ldr	r7, [r9, #20]
   19ed0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ed4:	bic	r7, r7, r7, asr #31
   19ed8:	ldr	r6, [r3, #20]
   19edc:	mov	r3, r6
   19ee0:	str	r6, [r9, #4]
   19ee4:	add	r2, r6, #3
   19ee8:	cmp	r2, r7
   19eec:	str	r3, [r9, #12]
   19ef0:	bcs	1a09c <argp_failure@@Base+0x10f0>
   19ef4:	ldr	r3, [r9, #28]
   19ef8:	ldr	r2, [r9, #32]
   19efc:	cmp	r3, r2
   19f00:	bcs	1a29c <argp_failure@@Base+0x12f0>
   19f04:	add	r1, r3, #1
   19f08:	mov	r2, #10
   19f0c:	str	r1, [r9, #28]
   19f10:	strb	r2, [r3]
   19f14:	mov	r0, r5
   19f18:	bl	119dc <strlen@plt>
   19f1c:	subs	r6, r0, #0
   19f20:	beq	19f4c <argp_failure@@Base+0xfa0>
   19f24:	ldr	r0, [r9, #28]
   19f28:	ldr	r2, [r9, #32]
   19f2c:	add	r3, r0, r6
   19f30:	cmp	r2, r3
   19f34:	bcs	1a130 <argp_failure@@Base+0x1184>
   19f38:	mov	r1, r6
   19f3c:	mov	r0, r9
   19f40:	bl	1b848 <argp_error@@Base+0x1444>
   19f44:	cmp	r0, #0
   19f48:	bne	1a12c <argp_failure@@Base+0x1180>
   19f4c:	cmp	r4, r5
   19f50:	beq	19f5c <argp_failure@@Base+0xfb0>
   19f54:	mov	r0, r5
   19f58:	bl	16b88 <argp_parse@@Base+0xe98>
   19f5c:	ldr	r3, [r9, #28]
   19f60:	ldr	r2, [r9, #24]
   19f64:	ldr	r1, [r9, #16]
   19f68:	sub	r2, r3, r2
   19f6c:	cmp	r2, r1
   19f70:	bhi	1a07c <argp_failure@@Base+0x10d0>
   19f74:	ldr	r1, [r9, #32]
   19f78:	mov	r2, #0
   19f7c:	cmp	r1, r3
   19f80:	str	r2, [r9, #4]
   19f84:	bls	1a060 <argp_failure@@Base+0x10b4>
   19f88:	add	r1, r3, #1
   19f8c:	mov	r2, #10
   19f90:	str	r1, [r9, #28]
   19f94:	strb	r2, [r3]
   19f98:	str	r8, [fp, #-88]	; 0xffffffa8
   19f9c:	b	195dc <argp_failure@@Base+0x630>
   19fa0:	mov	r0, r9
   19fa4:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19fa8:	b	19588 <argp_failure@@Base+0x5dc>
   19fac:	ldr	r2, [r6, #8]
   19fb0:	cmp	r2, #0
   19fb4:	beq	19478 <argp_failure@@Base+0x4cc>
   19fb8:	ldr	r3, [r6, #12]
   19fbc:	mov	r0, r9
   19fc0:	tst	r3, #1
   19fc4:	ldrne	r1, [pc, #584]	; 1a214 <argp_failure@@Base+0x1268>
   19fc8:	ldreq	r1, [pc, #584]	; 1a218 <argp_failure@@Base+0x126c>
   19fcc:	bl	1b868 <argp_error@@Base+0x1464>
   19fd0:	b	19478 <argp_failure@@Base+0x4cc>
   19fd4:	ldrb	r9, [r4, #1]
   19fd8:	add	r4, r4, #1
   19fdc:	b	198c8 <argp_failure@@Base+0x91c>
   19fe0:	mov	r0, r9
   19fe4:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19fe8:	b	19d34 <argp_failure@@Base+0xd88>
   19fec:	mov	r0, r9
   19ff0:	bl	1b1b8 <argp_error@@Base+0xdb4>
   19ff4:	b	194bc <argp_failure@@Base+0x510>
   19ff8:	mov	r1, #1
   19ffc:	mov	r0, r9
   1a000:	bl	1b848 <argp_error@@Base+0x1444>
   1a004:	cmp	r0, #0
   1a008:	beq	19e08 <argp_failure@@Base+0xe5c>
   1a00c:	ldr	r3, [r9, #28]
   1a010:	b	19dfc <argp_failure@@Base+0xe50>
   1a014:	mov	r1, #1
   1a018:	mov	r0, r9
   1a01c:	bl	1b848 <argp_error@@Base+0x1444>
   1a020:	cmp	r0, #0
   1a024:	beq	19de8 <argp_failure@@Base+0xe3c>
   1a028:	ldr	r3, [r9, #28]
   1a02c:	b	19dd8 <argp_failure@@Base+0xe2c>
   1a030:	ldr	lr, [fp, #-100]	; 0xffffff9c
   1a034:	ldr	sl, [pc, #388]	; 1a1c0 <argp_failure@@Base+0x1214>
   1a038:	mov	r4, #1
   1a03c:	ldm	lr!, {r0, r1, r2, r3}
   1a040:	mov	ip, sl
   1a044:	stmia	ip!, {r0, r1, r2, r3}
   1a048:	ldm	lr!, {r0, r1, r2, r3}
   1a04c:	stmia	ip!, {r0, r1, r2, r3}
   1a050:	ldm	lr, {r0, r1}
   1a054:	stm	ip, {r0, r1}
   1a058:	str	r4, [sl, #36]	; 0x24
   1a05c:	b	191f4 <argp_failure@@Base+0x248>
   1a060:	mov	r1, #1
   1a064:	mov	r0, r9
   1a068:	bl	1b848 <argp_error@@Base+0x1444>
   1a06c:	cmp	r0, #0
   1a070:	beq	19f98 <argp_failure@@Base+0xfec>
   1a074:	ldr	r3, [r9, #28]
   1a078:	b	19f88 <argp_failure@@Base+0xfdc>
   1a07c:	mov	r0, r9
   1a080:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1a084:	ldr	r3, [r9, #28]
   1a088:	b	19f74 <argp_failure@@Base+0xfc8>
   1a08c:	mov	r7, r3
   1a090:	mov	r4, r6
   1a094:	mov	r3, r9
   1a098:	b	1981c <argp_failure@@Base+0x870>
   1a09c:	cmp	r6, r7
   1a0a0:	bhi	1a28c <argp_failure@@Base+0x12e0>
   1a0a4:	ldr	r3, [r9, #28]
   1a0a8:	ldr	r1, [r9, #32]
   1a0ac:	add	r2, r3, #3
   1a0b0:	cmp	r1, r2
   1a0b4:	bcs	1a0d0 <argp_failure@@Base+0x1124>
   1a0b8:	mov	r1, #3
   1a0bc:	mov	r0, r9
   1a0c0:	bl	1b848 <argp_error@@Base+0x1444>
   1a0c4:	cmp	r0, #0
   1a0c8:	beq	19f14 <argp_failure@@Base+0xf68>
   1a0cc:	ldr	r3, [r9, #28]
   1a0d0:	ldr	r2, [pc, #324]	; 1a21c <argp_failure@@Base+0x1270>
   1a0d4:	ldrh	r1, [r2]
   1a0d8:	ldrb	r2, [r2, #2]
   1a0dc:	strh	r1, [r3]
   1a0e0:	strb	r2, [r3, #2]
   1a0e4:	ldr	r3, [r9, #28]
   1a0e8:	add	r3, r3, #3
   1a0ec:	str	r3, [r9, #28]
   1a0f0:	b	19f14 <argp_failure@@Base+0xf68>
   1a0f4:	mov	r2, #0
   1a0f8:	str	r6, [sp, #4]
   1a0fc:	str	r7, [sp]
   1a100:	ldr	r3, [pc, #280]	; 1a220 <argp_failure@@Base+0x1274>
   1a104:	mov	r1, r2
   1a108:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a10c:	bl	18fac <argp_failure@@Base>
   1a110:	b	198bc <argp_failure@@Base+0x910>
   1a114:	ldr	r3, [fp, #-136]	; 0xffffff78
   1a118:	ldr	r8, [r3]
   1a11c:	str	r4, [fp, #-88]	; 0xffffffa8
   1a120:	str	r4, [fp, #-84]	; 0xffffffac
   1a124:	str	r4, [fp, #-80]	; 0xffffffb0
   1a128:	b	1934c <argp_failure@@Base+0x3a0>
   1a12c:	ldr	r0, [r9, #28]
   1a130:	mov	r2, r6
   1a134:	mov	r1, r5
   1a138:	bl	11808 <memcpy@plt>
   1a13c:	ldr	r3, [r9, #28]
   1a140:	add	r6, r3, r6
   1a144:	str	r6, [r9, #28]
   1a148:	b	19f4c <argp_failure@@Base+0xfa0>
   1a14c:	mov	r0, r9
   1a150:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1a154:	ldr	r3, [r9, #28]
   1a158:	ldr	r1, [r9, #24]
   1a15c:	ldr	r2, [r9, #16]
   1a160:	ldr	r7, [r9, #20]
   1a164:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1a168:	sub	r3, r3, r1
   1a16c:	cmp	r3, r2
   1a170:	ldr	r6, [sl, #20]
   1a174:	bic	r7, r7, r7, asr #31
   1a178:	bls	19edc <argp_failure@@Base+0xf30>
   1a17c:	mov	r0, r9
   1a180:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1a184:	ldr	r3, [r9, #28]
   1a188:	ldr	r1, [r9, #24]
   1a18c:	ldr	r2, [r9, #16]
   1a190:	sub	r3, r3, r1
   1a194:	cmp	r3, r2
   1a198:	ldr	r3, [sl, #20]
   1a19c:	str	r6, [r9, #4]
   1a1a0:	movls	r6, r3
   1a1a4:	bls	19ee4 <argp_failure@@Base+0xf38>
   1a1a8:	mov	r0, r9
   1a1ac:	str	r3, [fp, #-124]	; 0xffffff84
   1a1b0:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1a1b4:	ldr	r6, [sl, #20]
   1a1b8:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a1bc:	b	19ee4 <argp_failure@@Base+0xf38>
   1a1c0:	andeq	lr, r2, r0, ror r3
   1a1c4:	andeq	lr, r2, r4, lsl r6
   1a1c8:	andeq	ip, r1, ip, lsr #29
   1a1cc:	andeq	r0, r0, #5
   1a1d0:	andeq	ip, r1, r8, lsr lr
   1a1d4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a1d8:	andeq	ip, r1, ip, asr #23
   1a1dc:	andeq	ip, r1, ip, lsr fp
   1a1e0:			; <UNDEFINED> instruction: 0x0001cdb8
   1a1e4:	andeq	ip, r1, r4, lsl #27
   1a1e8:	andeq	ip, r1, r8, ror #27
   1a1ec:	andeq	ip, r1, r0, asr #27
   1a1f0:	ldrdeq	ip, [r1], -r0
   1a1f4:	andeq	ip, r1, r8, asr #27
   1a1f8:	ldrdeq	ip, [r1], -r8
   1a1fc:	andeq	fp, r1, r0, ror #21
   1a200:			; <UNDEFINED> instruction: 0x0001c6bc
   1a204:	ldrdeq	r7, [r1], -r4
   1a208:	andeq	ip, r1, r0, lsr #28
   1a20c:	andeq	ip, r1, r0, lsr lr
   1a210:	andeq	ip, r1, r8, lsr #28
   1a214:	strdeq	fp, [r1], -r0
   1a218:	andeq	ip, r1, ip, lsl #13
   1a21c:	andeq	ip, r1, r4, lsr lr
   1a220:	andeq	ip, r1, ip, lsr sp
   1a224:	andeq	ip, r1, r4, ror #26
   1a228:	andeq	ip, r1, ip, lsl #26
   1a22c:	str	r6, [sp]
   1a230:	ldr	r3, [pc, #-20]	; 1a224 <argp_failure@@Base+0x1278>
   1a234:	mov	r1, r2
   1a238:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a23c:	bl	18fac <argp_failure@@Base>
   1a240:	b	198d8 <argp_failure@@Base+0x92c>
   1a244:	mov	r0, r4
   1a248:	bl	16b88 <argp_parse@@Base+0xe98>
   1a24c:	b	19704 <argp_failure@@Base+0x758>
   1a250:	ldr	r0, [r6, #16]
   1a254:	sub	r2, fp, #76	; 0x4c
   1a258:	ldr	r1, [r8, #20]
   1a25c:	bl	174e0 <argp_parse@@Base+0x17f0>
   1a260:	b	19f98 <argp_failure@@Base+0xfec>
   1a264:	mov	r1, #1
   1a268:	mov	r0, r9
   1a26c:	bl	1b848 <argp_error@@Base+0x1444>
   1a270:	cmp	r0, #0
   1a274:	beq	192cc <argp_failure@@Base+0x320>
   1a278:	ldr	r3, [r9, #28]
   1a27c:	b	192bc <argp_failure@@Base+0x310>
   1a280:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1a284:	bl	118d4 <funlockfile@plt>
   1a288:	b	1928c <argp_failure@@Base+0x2e0>
   1a28c:	mov	r1, r6
   1a290:	mov	r0, r9
   1a294:	bl	17408 <argp_parse@@Base+0x1718>
   1a298:	b	19f14 <argp_failure@@Base+0xf68>
   1a29c:	mov	r1, #1
   1a2a0:	mov	r0, r9
   1a2a4:	bl	1b848 <argp_error@@Base+0x1444>
   1a2a8:	cmp	r0, #0
   1a2ac:	beq	19f14 <argp_failure@@Base+0xf68>
   1a2b0:	ldr	r3, [r9, #28]
   1a2b4:	b	19f04 <argp_failure@@Base+0xf58>
   1a2b8:	mov	r1, #1
   1a2bc:	mov	r0, r9
   1a2c0:	bl	1b848 <argp_error@@Base+0x1444>
   1a2c4:	cmp	r0, #0
   1a2c8:	beq	1931c <argp_failure@@Base+0x370>
   1a2cc:	ldr	r3, [r9, #28]
   1a2d0:	b	1930c <argp_failure@@Base+0x360>
   1a2d4:	str	r6, [sp, #4]
   1a2d8:	str	r7, [sp]
   1a2dc:	ldr	r3, [pc, #-188]	; 1a228 <argp_failure@@Base+0x127c>
   1a2e0:	mov	r2, #0
   1a2e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a2e8:	bl	18fac <argp_failure@@Base>
   1a2ec:	b	198b4 <argp_failure@@Base+0x908>
   1a2f0:	ldr	r3, [r9, #28]
   1a2f4:	b	196dc <argp_failure@@Base+0x730>
   1a2f8:	mov	r1, #1
   1a2fc:	mov	r0, r9
   1a300:	bl	1b848 <argp_error@@Base+0x1444>
   1a304:	cmp	r0, #0
   1a308:	beq	196f8 <argp_failure@@Base+0x74c>
   1a30c:	ldr	r3, [r9, #28]
   1a310:	b	196e8 <argp_failure@@Base+0x73c>
   1a314:	mov	r1, #1
   1a318:	mov	r0, r9
   1a31c:	bl	1b848 <argp_error@@Base+0x1444>
   1a320:	cmp	r0, #0
   1a324:	beq	19688 <argp_failure@@Base+0x6dc>
   1a328:	ldr	r3, [r9, #28]
   1a32c:	b	19678 <argp_failure@@Base+0x6cc>

0001a330 <argp_help@@Base>:
   1a330:	push	{lr}		; (str lr, [sp, #-4]!)
   1a334:	sub	sp, sp, #12
   1a338:	str	r3, [sp]
   1a33c:	mov	r3, r2
   1a340:	mov	r2, r1
   1a344:	mov	r1, #0
   1a348:	bl	191b4 <argp_failure@@Base+0x208>
   1a34c:	add	sp, sp, #12
   1a350:	pop	{pc}		; (ldr pc, [sp], #4)

0001a354 <argp_state_help@@Base>:
   1a354:	push	{r4, r5, lr}
   1a358:	subs	r4, r0, #0
   1a35c:	sub	sp, sp, #12
   1a360:	mov	r5, r2
   1a364:	beq	1a3c4 <argp_state_help@@Base+0x70>
   1a368:	ldr	r3, [r4, #16]
   1a36c:	tst	r3, #2
   1a370:	bne	1a3bc <argp_state_help@@Base+0x68>
   1a374:	cmp	r1, #0
   1a378:	beq	1a3bc <argp_state_help@@Base+0x68>
   1a37c:	tst	r3, #64	; 0x40
   1a380:	ldr	r3, [r4, #40]	; 0x28
   1a384:	orrne	r5, r5, #128	; 0x80
   1a388:	ldr	r0, [r4]
   1a38c:	mov	r2, r1
   1a390:	str	r3, [sp]
   1a394:	mov	r1, r4
   1a398:	mov	r3, r5
   1a39c:	bl	191b4 <argp_failure@@Base+0x208>
   1a3a0:	ldr	r3, [r4, #16]
   1a3a4:	tst	r3, #32
   1a3a8:	bne	1a3bc <argp_state_help@@Base+0x68>
   1a3ac:	ands	r0, r5, #256	; 0x100
   1a3b0:	bne	1a3f0 <argp_state_help@@Base+0x9c>
   1a3b4:	tst	r5, #512	; 0x200
   1a3b8:	bne	1a3ec <argp_state_help@@Base+0x98>
   1a3bc:	add	sp, sp, #12
   1a3c0:	pop	{r4, r5, pc}
   1a3c4:	cmp	r1, #0
   1a3c8:	beq	1a3bc <argp_state_help@@Base+0x68>
   1a3cc:	ldr	r3, [pc, #40]	; 1a3fc <argp_state_help@@Base+0xa8>
   1a3d0:	mov	r2, r1
   1a3d4:	mov	r1, r4
   1a3d8:	ldr	ip, [r3]
   1a3dc:	mov	r3, r5
   1a3e0:	str	ip, [sp]
   1a3e4:	bl	191b4 <argp_failure@@Base+0x208>
   1a3e8:	b	1a3ac <argp_state_help@@Base+0x58>
   1a3ec:	bl	119c4 <exit@plt>
   1a3f0:	ldr	r3, [pc, #8]	; 1a400 <argp_state_help@@Base+0xac>
   1a3f4:	ldr	r0, [r3]
   1a3f8:	bl	119c4 <exit@plt>
   1a3fc:	andeq	lr, r2, r8, lsr #7
   1a400:	andeq	lr, r2, r4, lsr #7

0001a404 <argp_error@@Base>:
   1a404:	push	{r1, r2, r3}
   1a408:	push	{r4, r5, lr}
   1a40c:	subs	r5, r0, #0
   1a410:	sub	sp, sp, #8
   1a414:	beq	1a4e4 <argp_error@@Base+0xe0>
   1a418:	ldr	r3, [r5, #16]
   1a41c:	tst	r3, #2
   1a420:	bne	1a4d4 <argp_error@@Base+0xd0>
   1a424:	ldr	r4, [r5, #44]	; 0x2c
   1a428:	cmp	r4, #0
   1a42c:	beq	1a4d4 <argp_error@@Base+0xd0>
   1a430:	mov	r0, r4
   1a434:	bl	11b5c <flockfile@plt>
   1a438:	ldr	r0, [r5, #40]	; 0x28
   1a43c:	add	r3, sp, #24
   1a440:	str	r3, [sp, #4]
   1a444:	mov	r1, r4
   1a448:	bl	11730 <fputs_unlocked@plt>
   1a44c:	ldr	r3, [r4, #20]
   1a450:	ldr	r2, [r4, #24]
   1a454:	cmp	r3, r2
   1a458:	addcc	r1, r3, #1
   1a45c:	movcc	r2, #58	; 0x3a
   1a460:	strcc	r1, [r4, #20]
   1a464:	strbcc	r2, [r3]
   1a468:	bcs	1a530 <argp_error@@Base+0x12c>
   1a46c:	ldr	r3, [r4, #20]
   1a470:	ldr	r2, [r4, #24]
   1a474:	cmp	r3, r2
   1a478:	addcc	r1, r3, #1
   1a47c:	movcc	r2, #32
   1a480:	strcc	r1, [r4, #20]
   1a484:	strbcc	r2, [r3]
   1a488:	bcs	1a520 <argp_error@@Base+0x11c>
   1a48c:	ldr	r1, [sp, #20]
   1a490:	ldr	r2, [sp, #4]
   1a494:	mov	r0, r4
   1a498:	bl	11afc <vfprintf@plt>
   1a49c:	ldr	r3, [r4, #20]
   1a4a0:	ldr	r2, [r4, #24]
   1a4a4:	cmp	r3, r2
   1a4a8:	addcc	r1, r3, #1
   1a4ac:	movcc	r2, #10
   1a4b0:	strcc	r1, [r4, #20]
   1a4b4:	strbcc	r2, [r3]
   1a4b8:	bcs	1a510 <argp_error@@Base+0x10c>
   1a4bc:	mov	r0, r5
   1a4c0:	mov	r2, #260	; 0x104
   1a4c4:	mov	r1, r4
   1a4c8:	bl	1a354 <argp_state_help@@Base>
   1a4cc:	mov	r0, r4
   1a4d0:	bl	118d4 <funlockfile@plt>
   1a4d4:	add	sp, sp, #8
   1a4d8:	pop	{r4, r5, lr}
   1a4dc:	add	sp, sp, #12
   1a4e0:	bx	lr
   1a4e4:	ldr	r3, [pc, #84]	; 1a540 <argp_error@@Base+0x13c>
   1a4e8:	ldr	r4, [r3]
   1a4ec:	cmp	r4, #0
   1a4f0:	beq	1a4d4 <argp_error@@Base+0xd0>
   1a4f4:	mov	r0, r4
   1a4f8:	bl	11b5c <flockfile@plt>
   1a4fc:	ldr	r2, [pc, #64]	; 1a544 <argp_error@@Base+0x140>
   1a500:	add	r3, sp, #24
   1a504:	str	r3, [sp, #4]
   1a508:	ldr	r0, [r2]
   1a50c:	b	1a444 <argp_error@@Base+0x40>
   1a510:	mov	r1, #10
   1a514:	mov	r0, r4
   1a518:	bl	11ab4 <__overflow@plt>
   1a51c:	b	1a4bc <argp_error@@Base+0xb8>
   1a520:	mov	r1, #32
   1a524:	mov	r0, r4
   1a528:	bl	11ab4 <__overflow@plt>
   1a52c:	b	1a48c <argp_error@@Base+0x88>
   1a530:	mov	r1, #58	; 0x3a
   1a534:	mov	r0, r4
   1a538:	bl	11ab4 <__overflow@plt>
   1a53c:	b	1a46c <argp_error@@Base+0x68>
   1a540:			; <UNDEFINED> instruction: 0x0002e3b0
   1a544:	andeq	lr, r2, r8, lsr #7
   1a548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a54c:	ldr	r4, [r1, #32]
   1a550:	ldr	r8, [r1, #28]
   1a554:	ldr	r7, [r1]
   1a558:	add	r6, r0, r4, lsl #2
   1a55c:	mov	r2, r8
   1a560:	mov	r5, r7
   1a564:	cmp	r5, r4
   1a568:	movle	r3, #0
   1a56c:	movgt	r3, #1
   1a570:	cmp	r2, r4
   1a574:	movge	r3, #0
   1a578:	cmp	r3, #0
   1a57c:	beq	1a5f0 <argp_error@@Base+0x1ec>
   1a580:	sub	r3, r5, r4
   1a584:	sub	sl, r4, r2
   1a588:	cmp	r3, sl
   1a58c:	ble	1a5c0 <argp_error@@Base+0x1bc>
   1a590:	sub	r5, r5, sl
   1a594:	add	sl, sl, r2
   1a598:	add	ip, r0, r5, lsl #2
   1a59c:	add	sl, r0, sl, lsl #2
   1a5a0:	add	r3, r0, r2, lsl #2
   1a5a4:	ldr	r9, [ip]
   1a5a8:	ldr	lr, [r3]
   1a5ac:	str	r9, [r3], #4
   1a5b0:	cmp	sl, r3
   1a5b4:	str	lr, [ip], #4
   1a5b8:	bne	1a5a4 <argp_error@@Base+0x1a0>
   1a5bc:	b	1a564 <argp_error@@Base+0x160>
   1a5c0:	add	sl, r3, r2
   1a5c4:	add	r3, r0, r2, lsl #2
   1a5c8:	add	r9, r0, sl, lsl #2
   1a5cc:	mov	r2, r6
   1a5d0:	ldr	lr, [r2]
   1a5d4:	ldr	ip, [r3]
   1a5d8:	str	lr, [r3], #4
   1a5dc:	cmp	r3, r9
   1a5e0:	str	ip, [r2], #4
   1a5e4:	bne	1a5d0 <argp_error@@Base+0x1cc>
   1a5e8:	mov	r2, sl
   1a5ec:	b	1a564 <argp_error@@Base+0x160>
   1a5f0:	sub	r4, r7, r4
   1a5f4:	add	r8, r4, r8
   1a5f8:	str	r8, [r1, #28]
   1a5fc:	str	r7, [r1, #32]
   1a600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a608:	sub	sp, sp, #44	; 0x2c
   1a60c:	str	r1, [sp, #20]
   1a610:	ldr	r1, [sp, #88]	; 0x58
   1a614:	str	r0, [sp, #24]
   1a618:	str	r2, [sp, #28]
   1a61c:	ldr	r8, [r1, #20]
   1a620:	str	r3, [sp, #12]
   1a624:	mov	r7, r8
   1a628:	ldrb	r5, [r8]
   1a62c:	cmp	r5, #61	; 0x3d
   1a630:	cmpne	r5, #0
   1a634:	movne	r5, #1
   1a638:	moveq	r5, #0
   1a63c:	beq	1a654 <argp_error@@Base+0x250>
   1a640:	ldrb	r3, [r7, #1]!
   1a644:	cmp	r3, #0
   1a648:	cmpne	r3, #61	; 0x3d
   1a64c:	bne	1a640 <argp_error@@Base+0x23c>
   1a650:	sub	r5, r7, r8
   1a654:	ldr	r3, [sp, #12]
   1a658:	ldr	sl, [r3]
   1a65c:	cmp	sl, #0
   1a660:	beq	1a914 <argp_error@@Base+0x510>
   1a664:	mov	fp, r3
   1a668:	mov	r4, sl
   1a66c:	mov	r6, #0
   1a670:	mov	r2, r5
   1a674:	mov	r1, r8
   1a678:	mov	r0, r4
   1a67c:	bl	11bd4 <strncmp@plt>
   1a680:	mov	r9, fp
   1a684:	cmp	r0, #0
   1a688:	mov	r0, r4
   1a68c:	bne	1a69c <argp_error@@Base+0x298>
   1a690:	bl	119dc <strlen@plt>
   1a694:	cmp	r0, r5
   1a698:	beq	1a728 <argp_error@@Base+0x324>
   1a69c:	ldr	r4, [fp, #16]!
   1a6a0:	add	r6, r6, #1
   1a6a4:	cmp	r4, #0
   1a6a8:	bne	1a670 <argp_error@@Base+0x26c>
   1a6ac:	ldr	r3, [sp, #12]
   1a6b0:	ldr	fp, [sp, #88]	; 0x58
   1a6b4:	mov	r0, sl
   1a6b8:	mov	r1, r8
   1a6bc:	mov	r9, r4
   1a6c0:	mov	sl, r4
   1a6c4:	mov	r8, r3
   1a6c8:	mvn	r2, #0
   1a6cc:	str	r4, [sp, #36]	; 0x24
   1a6d0:	str	r4, [sp, #16]
   1a6d4:	str	r2, [sp, #32]
   1a6d8:	mov	r2, r5
   1a6dc:	bl	11bd4 <strncmp@plt>
   1a6e0:	cmp	r0, #0
   1a6e4:	bne	1a704 <argp_error@@Base+0x300>
   1a6e8:	cmp	r9, #0
   1a6ec:	beq	1a984 <argp_error@@Base+0x580>
   1a6f0:	ldr	r3, [sp, #84]	; 0x54
   1a6f4:	cmp	r3, #0
   1a6f8:	beq	1a7cc <argp_error@@Base+0x3c8>
   1a6fc:	cmp	r4, #0
   1a700:	beq	1a800 <argp_error@@Base+0x3fc>
   1a704:	ldr	r0, [r8, #16]!
   1a708:	add	sl, sl, #1
   1a70c:	cmp	r0, #0
   1a710:	beq	1a834 <argp_error@@Base+0x430>
   1a714:	ldr	r1, [fp, #20]
   1a718:	b	1a6d8 <argp_error@@Base+0x2d4>
   1a71c:	cmp	r9, #0
   1a720:	beq	1a914 <argp_error@@Base+0x510>
   1a724:	ldr	r6, [sp, #32]
   1a728:	ldr	r3, [sp, #88]	; 0x58
   1a72c:	ldr	r0, [sp, #88]	; 0x58
   1a730:	mov	r1, #0
   1a734:	ldr	r2, [r3]
   1a738:	str	r1, [r0, #20]
   1a73c:	add	r3, r2, #1
   1a740:	str	r3, [r0]
   1a744:	ldrb	r1, [r7]
   1a748:	cmp	r1, #0
   1a74c:	bne	1a78c <argp_error@@Base+0x388>
   1a750:	ldr	r1, [r9, #4]
   1a754:	cmp	r1, #1
   1a758:	beq	1a990 <argp_error@@Base+0x58c>
   1a75c:	ldr	r3, [sp, #80]	; 0x50
   1a760:	ldr	r2, [r9, #8]
   1a764:	cmp	r3, #0
   1a768:	strne	r6, [r3]
   1a76c:	cmp	r2, #0
   1a770:	movne	r3, #0
   1a774:	ldreq	r3, [r9, #12]
   1a778:	ldrne	r1, [r9, #12]
   1a77c:	strne	r1, [r2]
   1a780:	mov	r0, r3
   1a784:	add	sp, sp, #44	; 0x2c
   1a788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a78c:	ldr	r3, [r9, #4]
   1a790:	cmp	r3, #0
   1a794:	movne	r3, r0
   1a798:	addne	r7, r7, #1
   1a79c:	strne	r7, [r3, #12]
   1a7a0:	bne	1a75c <argp_error@@Base+0x358>
   1a7a4:	ldr	r3, [sp, #92]	; 0x5c
   1a7a8:	cmp	r3, #0
   1a7ac:	bne	1a8dc <argp_error@@Base+0x4d8>
   1a7b0:	ldr	r1, [sp, #88]	; 0x58
   1a7b4:	ldr	r2, [r9, #12]
   1a7b8:	mov	r3, #63	; 0x3f
   1a7bc:	str	r2, [r1, #8]
   1a7c0:	mov	r0, r3
   1a7c4:	add	sp, sp, #44	; 0x2c
   1a7c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7cc:	ldr	r2, [r9, #4]
   1a7d0:	ldr	r3, [r8, #4]
   1a7d4:	cmp	r2, r3
   1a7d8:	bne	1a6fc <argp_error@@Base+0x2f8>
   1a7dc:	ldr	r2, [r9, #8]
   1a7e0:	ldr	r3, [r8, #8]
   1a7e4:	cmp	r2, r3
   1a7e8:	bne	1a6fc <argp_error@@Base+0x2f8>
   1a7ec:	ldr	r2, [r9, #12]
   1a7f0:	ldr	r3, [r8, #12]
   1a7f4:	cmp	r2, r3
   1a7f8:	bne	1a6fc <argp_error@@Base+0x2f8>
   1a7fc:	b	1a704 <argp_error@@Base+0x300>
   1a800:	ldr	r3, [sp, #92]	; 0x5c
   1a804:	cmp	r3, #0
   1a808:	ldr	r3, [sp, #16]
   1a80c:	beq	1a8cc <argp_error@@Base+0x4c8>
   1a810:	cmp	r3, #0
   1a814:	beq	1aae8 <argp_error@@Base+0x6e4>
   1a818:	ldr	r3, [sp, #16]
   1a81c:	ldr	r0, [r8, #16]!
   1a820:	mov	r2, #1
   1a824:	cmp	r0, #0
   1a828:	strb	r2, [r3, sl]
   1a82c:	add	sl, sl, #1
   1a830:	bne	1a714 <argp_error@@Base+0x310>
   1a834:	ldr	r3, [sp, #16]
   1a838:	cmp	r3, #0
   1a83c:	cmpeq	r4, #0
   1a840:	beq	1a71c <argp_error@@Base+0x318>
   1a844:	ldr	r3, [sp, #92]	; 0x5c
   1a848:	cmp	r3, #0
   1a84c:	beq	1a9cc <argp_error@@Base+0x5c8>
   1a850:	cmp	r4, #0
   1a854:	bne	1aa54 <argp_error@@Base+0x650>
   1a858:	ldr	r5, [pc, #716]	; 1ab2c <argp_error@@Base+0x728>
   1a85c:	ldr	r8, [sp, #16]
   1a860:	ldr	r7, [pc, #712]	; 1ab30 <argp_error@@Base+0x72c>
   1a864:	ldr	r0, [r5]
   1a868:	bl	11b5c <flockfile@plt>
   1a86c:	ldr	r3, [sp, #20]
   1a870:	ldr	r0, [r5]
   1a874:	ldr	r1, [pc, #696]	; 1ab34 <argp_error@@Base+0x730>
   1a878:	ldr	r2, [r3]
   1a87c:	ldr	r3, [sp, #88]	; 0x58
   1a880:	add	r6, r8, r6
   1a884:	ldr	r3, [r3, #20]
   1a888:	str	r3, [sp]
   1a88c:	ldr	r3, [sp, #96]	; 0x60
   1a890:	bl	11a0c <fprintf@plt>
   1a894:	ldr	r9, [sp, #12]
   1a898:	b	1a8a8 <argp_error@@Base+0x4a4>
   1a89c:	cmp	r8, r6
   1a8a0:	add	r4, r4, #1
   1a8a4:	beq	1a9b8 <argp_error@@Base+0x5b4>
   1a8a8:	ldrb	r3, [r8], #1
   1a8ac:	cmp	r3, #0
   1a8b0:	beq	1a89c <argp_error@@Base+0x498>
   1a8b4:	ldr	r3, [r9, r4, lsl #4]
   1a8b8:	ldr	r2, [sp, #96]	; 0x60
   1a8bc:	mov	r1, r7
   1a8c0:	ldr	r0, [r5]
   1a8c4:	bl	11a0c <fprintf@plt>
   1a8c8:	b	1a89c <argp_error@@Base+0x498>
   1a8cc:	cmp	r3, #0
   1a8d0:	mov	r4, #1
   1a8d4:	bne	1a818 <argp_error@@Base+0x414>
   1a8d8:	b	1a704 <argp_error@@Base+0x300>
   1a8dc:	ldr	r3, [sp, #20]
   1a8e0:	ldr	r1, [pc, #580]	; 1ab2c <argp_error@@Base+0x728>
   1a8e4:	ldr	r2, [r3]
   1a8e8:	ldr	r3, [r9]
   1a8ec:	ldr	r0, [r1]
   1a8f0:	str	r3, [sp]
   1a8f4:	ldr	r1, [pc, #572]	; 1ab38 <argp_error@@Base+0x734>
   1a8f8:	ldr	r3, [sp, #96]	; 0x60
   1a8fc:	bl	11a0c <fprintf@plt>
   1a900:	ldr	r1, [sp, #88]	; 0x58
   1a904:	ldr	r2, [r9, #12]
   1a908:	mov	r3, #63	; 0x3f
   1a90c:	str	r2, [r1, #8]
   1a910:	b	1a7c0 <argp_error@@Base+0x3bc>
   1a914:	ldr	r3, [sp, #84]	; 0x54
   1a918:	cmp	r3, #0
   1a91c:	bne	1aaa8 <argp_error@@Base+0x6a4>
   1a920:	ldr	r3, [sp, #92]	; 0x5c
   1a924:	cmp	r3, #0
   1a928:	beq	1a954 <argp_error@@Base+0x550>
   1a92c:	ldr	r3, [sp, #20]
   1a930:	ldr	r1, [pc, #500]	; 1ab2c <argp_error@@Base+0x728>
   1a934:	ldr	r2, [r3]
   1a938:	ldr	r3, [sp, #88]	; 0x58
   1a93c:	ldr	r0, [r1]
   1a940:	ldr	r1, [pc, #500]	; 1ab3c <argp_error@@Base+0x738>
   1a944:	ldr	r3, [r3, #20]
   1a948:	str	r3, [sp]
   1a94c:	ldr	r3, [sp, #96]	; 0x60
   1a950:	bl	11a0c <fprintf@plt>
   1a954:	ldr	r3, [sp, #88]	; 0x58
   1a958:	ldr	r1, [sp, #88]	; 0x58
   1a95c:	mov	r2, #0
   1a960:	ldr	r3, [r3]
   1a964:	str	r2, [r1, #20]
   1a968:	add	r3, r3, #1
   1a96c:	str	r3, [r1]
   1a970:	mov	r3, #63	; 0x3f
   1a974:	mov	r0, r3
   1a978:	str	r2, [r1, #8]
   1a97c:	add	sp, sp, #44	; 0x2c
   1a980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a984:	str	sl, [sp, #32]
   1a988:	mov	r9, r8
   1a98c:	b	1a704 <argp_error@@Base+0x300>
   1a990:	ldr	r1, [sp, #24]
   1a994:	cmp	r3, r1
   1a998:	bge	1aa24 <argp_error@@Base+0x620>
   1a99c:	ldr	r1, [sp, #20]
   1a9a0:	add	r2, r2, #2
   1a9a4:	ldr	r3, [r1, r3, lsl #2]
   1a9a8:	ldr	r1, [sp, #88]	; 0x58
   1a9ac:	str	r3, [r1, #12]
   1a9b0:	str	r2, [r1]
   1a9b4:	b	1a75c <argp_error@@Base+0x358>
   1a9b8:	ldr	r1, [r5]
   1a9bc:	mov	r0, #10
   1a9c0:	bl	11b08 <fputc@plt>
   1a9c4:	ldr	r0, [r5]
   1a9c8:	bl	118d4 <funlockfile@plt>
   1a9cc:	ldr	r3, [sp, #36]	; 0x24
   1a9d0:	cmp	r3, #0
   1a9d4:	beq	1a9e0 <argp_error@@Base+0x5dc>
   1a9d8:	ldr	r0, [sp, #16]
   1a9dc:	bl	16b88 <argp_parse@@Base+0xe98>
   1a9e0:	ldr	r3, [sp, #88]	; 0x58
   1a9e4:	ldr	r4, [r3, #20]
   1a9e8:	mov	r0, r4
   1a9ec:	bl	119dc <strlen@plt>
   1a9f0:	ldr	r3, [sp, #88]	; 0x58
   1a9f4:	ldr	r1, [sp, #88]	; 0x58
   1a9f8:	mov	r2, #0
   1a9fc:	ldr	r3, [r3]
   1aa00:	str	r2, [r1, #8]
   1aa04:	add	r3, r3, #1
   1aa08:	str	r3, [r1]
   1aa0c:	mov	r3, #63	; 0x3f
   1aa10:	add	r0, r4, r0
   1aa14:	str	r0, [r1, #20]
   1aa18:	mov	r0, r3
   1aa1c:	add	sp, sp, #44	; 0x2c
   1aa20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa24:	ldr	r3, [sp, #92]	; 0x5c
   1aa28:	cmp	r3, #0
   1aa2c:	bne	1aa80 <argp_error@@Base+0x67c>
   1aa30:	ldr	r2, [sp, #88]	; 0x58
   1aa34:	ldr	r3, [r9, #12]
   1aa38:	str	r3, [r2, #8]
   1aa3c:	ldr	r3, [sp, #28]
   1aa40:	ldrb	r3, [r3]
   1aa44:	cmp	r3, #58	; 0x3a
   1aa48:	movne	r3, #63	; 0x3f
   1aa4c:	moveq	r3, #58	; 0x3a
   1aa50:	b	1a780 <argp_error@@Base+0x37c>
   1aa54:	ldr	r3, [sp, #20]
   1aa58:	ldr	r1, [pc, #204]	; 1ab2c <argp_error@@Base+0x728>
   1aa5c:	ldr	r2, [r3]
   1aa60:	ldr	r3, [sp, #88]	; 0x58
   1aa64:	ldr	r0, [r1]
   1aa68:	ldr	r1, [pc, #208]	; 1ab40 <argp_error@@Base+0x73c>
   1aa6c:	ldr	r3, [r3, #20]
   1aa70:	str	r3, [sp]
   1aa74:	ldr	r3, [sp, #96]	; 0x60
   1aa78:	bl	11a0c <fprintf@plt>
   1aa7c:	b	1a9cc <argp_error@@Base+0x5c8>
   1aa80:	ldr	r3, [sp, #20]
   1aa84:	ldr	r1, [pc, #160]	; 1ab2c <argp_error@@Base+0x728>
   1aa88:	ldr	r2, [r3]
   1aa8c:	ldr	r3, [r9]
   1aa90:	ldr	r0, [r1]
   1aa94:	str	r3, [sp]
   1aa98:	ldr	r1, [pc, #164]	; 1ab44 <argp_error@@Base+0x740>
   1aa9c:	ldr	r3, [sp, #96]	; 0x60
   1aaa0:	bl	11a0c <fprintf@plt>
   1aaa4:	b	1aa30 <argp_error@@Base+0x62c>
   1aaa8:	ldr	r3, [sp, #88]	; 0x58
   1aaac:	ldr	r2, [sp, #20]
   1aab0:	ldr	r3, [r3]
   1aab4:	ldr	r3, [r2, r3, lsl #2]
   1aab8:	ldrb	r3, [r3, #1]
   1aabc:	cmp	r3, #45	; 0x2d
   1aac0:	beq	1a920 <argp_error@@Base+0x51c>
   1aac4:	ldr	r3, [sp, #88]	; 0x58
   1aac8:	ldr	r0, [sp, #28]
   1aacc:	ldr	r3, [r3, #20]
   1aad0:	ldrb	r1, [r3]
   1aad4:	bl	119f4 <strchr@plt>
   1aad8:	cmp	r0, #0
   1aadc:	beq	1a920 <argp_error@@Base+0x51c>
   1aae0:	mvn	r3, #0
   1aae4:	b	1a780 <argp_error@@Base+0x37c>
   1aae8:	mov	r0, r6
   1aaec:	bl	17180 <argp_parse@@Base+0x1490>
   1aaf0:	subs	r3, r0, #0
   1aaf4:	str	r3, [sp, #16]
   1aaf8:	beq	1ab24 <argp_error@@Base+0x720>
   1aafc:	mov	r2, r6
   1ab00:	mov	r1, #0
   1ab04:	bl	11a54 <memset@plt>
   1ab08:	mov	r3, #1
   1ab0c:	str	r3, [sp, #36]	; 0x24
   1ab10:	ldr	r2, [sp, #32]
   1ab14:	ldr	r3, [sp, #16]
   1ab18:	mov	r1, #1
   1ab1c:	strb	r1, [r3, r2]
   1ab20:	b	1a818 <argp_error@@Base+0x414>
   1ab24:	mov	r4, #1
   1ab28:	b	1a704 <argp_error@@Base+0x300>
   1ab2c:			; <UNDEFINED> instruction: 0x0002e3b0
   1ab30:	andeq	ip, r1, r0, lsl pc
   1ab34:	andeq	ip, r1, r0, ror #29
   1ab38:	andeq	ip, r1, r8, lsr pc
   1ab3c:	andeq	ip, r1, r8, lsl pc
   1ab40:	andeq	ip, r1, r0, asr #29
   1ab44:	andeq	ip, r1, r8, ror #30
   1ab48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab4c:	sub	sp, sp, #36	; 0x24
   1ab50:	subs	r6, r0, #0
   1ab54:	ldr	r4, [sp, #80]	; 0x50
   1ab58:	ldr	r8, [r4, #4]
   1ab5c:	ble	1ad38 <argp_error@@Base+0x934>
   1ab60:	mov	sl, r3
   1ab64:	ldr	r3, [r4]
   1ab68:	mov	r7, r2
   1ab6c:	mov	r2, #0
   1ab70:	cmp	r3, r2
   1ab74:	mov	r9, r1
   1ab78:	str	r2, [r4, #12]
   1ab7c:	beq	1adc0 <argp_error@@Base+0x9bc>
   1ab80:	ldr	r2, [r4, #16]
   1ab84:	cmp	r2, #0
   1ab88:	bne	1ad44 <argp_error@@Base+0x940>
   1ab8c:	mov	r5, #0
   1ab90:	str	r3, [r4, #32]
   1ab94:	str	r3, [r4, #28]
   1ab98:	str	r5, [r4, #20]
   1ab9c:	ldrb	r3, [r7]
   1aba0:	cmp	r3, #45	; 0x2d
   1aba4:	moveq	r3, #2
   1aba8:	addeq	r7, r7, #1
   1abac:	streq	r3, [r4, #24]
   1abb0:	beq	1abd8 <argp_error@@Base+0x7d4>
   1abb4:	cmp	r3, #43	; 0x2b
   1abb8:	streq	r5, [r4, #24]
   1abbc:	addeq	r7, r7, #1
   1abc0:	beq	1abd8 <argp_error@@Base+0x7d4>
   1abc4:	ldr	r3, [sp, #84]	; 0x54
   1abc8:	cmp	r3, #0
   1abcc:	beq	1ae60 <argp_error@@Base+0xa5c>
   1abd0:	mov	r3, #0
   1abd4:	str	r3, [r4, #24]
   1abd8:	mov	r3, #1
   1abdc:	str	r3, [r4, #16]
   1abe0:	ldrb	r3, [r7]
   1abe4:	cmp	r3, #58	; 0x3a
   1abe8:	moveq	r8, #0
   1abec:	cmp	r5, #0
   1abf0:	beq	1aca4 <argp_error@@Base+0x8a0>
   1abf4:	ldrb	r3, [r5]
   1abf8:	cmp	r3, #0
   1abfc:	beq	1aca4 <argp_error@@Base+0x8a0>
   1ac00:	add	r3, r5, #1
   1ac04:	str	r3, [r4, #20]
   1ac08:	ldrb	fp, [r5]
   1ac0c:	mov	r0, r7
   1ac10:	str	r3, [sp, #28]
   1ac14:	mov	r1, fp
   1ac18:	bl	119f4 <strchr@plt>
   1ac1c:	ldrb	r1, [r5, #1]
   1ac20:	ldr	r3, [sp, #28]
   1ac24:	cmp	r1, #0
   1ac28:	ldreq	r1, [r4]
   1ac2c:	addeq	r1, r1, #1
   1ac30:	streq	r1, [r4]
   1ac34:	sub	r1, fp, #58	; 0x3a
   1ac38:	mov	r2, r0
   1ac3c:	cmp	r2, #0
   1ac40:	cmpne	r1, #1
   1ac44:	mov	r0, fp
   1ac48:	bls	1ad90 <argp_error@@Base+0x98c>
   1ac4c:	ldrb	r1, [r2]
   1ac50:	cmp	r1, #87	; 0x57
   1ac54:	ldrb	r1, [r2, #1]
   1ac58:	beq	1aee4 <argp_error@@Base+0xae0>
   1ac5c:	cmp	r1, #58	; 0x3a
   1ac60:	bne	1ad88 <argp_error@@Base+0x984>
   1ac64:	ldrb	r2, [r2, #2]
   1ac68:	cmp	r2, #58	; 0x3a
   1ac6c:	ldrb	r2, [r5, #1]
   1ac70:	beq	1af6c <argp_error@@Base+0xb68>
   1ac74:	cmp	r2, #0
   1ac78:	bne	1af78 <argp_error@@Base+0xb74>
   1ac7c:	ldr	r3, [r4]
   1ac80:	cmp	r6, r3
   1ac84:	beq	1b018 <argp_error@@Base+0xc14>
   1ac88:	ldr	r2, [r9, r3, lsl #2]
   1ac8c:	add	r3, r3, #1
   1ac90:	str	r2, [r4, #12]
   1ac94:	str	r3, [r4]
   1ac98:	mov	r3, #0
   1ac9c:	str	r3, [r4, #20]
   1aca0:	b	1ad88 <argp_error@@Base+0x984>
   1aca4:	ldr	fp, [r4]
   1aca8:	ldr	r3, [r4, #32]
   1acac:	cmp	r3, fp
   1acb0:	ldr	r3, [r4, #28]
   1acb4:	strgt	fp, [r4, #32]
   1acb8:	cmp	fp, r3
   1acbc:	ldr	r3, [r4, #24]
   1acc0:	strlt	fp, [r4, #28]
   1acc4:	cmp	r3, #1
   1acc8:	beq	1add0 <argp_error@@Base+0x9cc>
   1accc:	cmp	r6, fp
   1acd0:	beq	1ae48 <argp_error@@Base+0xa44>
   1acd4:	ldr	r3, [pc, #944]	; 1b08c <argp_error@@Base+0xc88>
   1acd8:	ldr	r5, [r9, fp, lsl #2]
   1acdc:	mov	r1, r3
   1ace0:	mov	r0, r5
   1ace4:	str	r3, [sp, #28]
   1ace8:	bl	11754 <strcmp@plt>
   1acec:	ldr	r3, [sp, #28]
   1acf0:	cmp	r0, #0
   1acf4:	bne	1ad60 <argp_error@@Base+0x95c>
   1acf8:	ldr	r3, [r4, #28]
   1acfc:	ldr	r2, [r4, #32]
   1ad00:	add	fp, fp, #1
   1ad04:	cmp	r3, r2
   1ad08:	str	fp, [r4]
   1ad0c:	beq	1aed8 <argp_error@@Base+0xad4>
   1ad10:	cmp	fp, r2
   1ad14:	beq	1ad28 <argp_error@@Base+0x924>
   1ad18:	mov	r0, r9
   1ad1c:	mov	r1, r4
   1ad20:	bl	1a548 <argp_error@@Base+0x144>
   1ad24:	ldr	r3, [r4, #28]
   1ad28:	cmp	r3, r6
   1ad2c:	str	r6, [r4]
   1ad30:	str	r6, [r4, #32]
   1ad34:	strne	r3, [r4]
   1ad38:	mvn	r0, #0
   1ad3c:	add	sp, sp, #36	; 0x24
   1ad40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad44:	ldrb	r3, [r7]
   1ad48:	ldr	r5, [r4, #20]
   1ad4c:	sub	r2, r3, #43	; 0x2b
   1ad50:	tst	r2, #253	; 0xfd
   1ad54:	ldrbeq	r3, [r7, #1]
   1ad58:	addeq	r7, r7, #1
   1ad5c:	b	1abe4 <argp_error@@Base+0x7e0>
   1ad60:	ldrb	r2, [r5]
   1ad64:	cmp	r2, #45	; 0x2d
   1ad68:	beq	1ae8c <argp_error@@Base+0xa88>
   1ad6c:	ldr	r3, [r4, #24]
   1ad70:	cmp	r3, #0
   1ad74:	beq	1ad38 <argp_error@@Base+0x934>
   1ad78:	mov	r0, #1
   1ad7c:	add	fp, fp, #1
   1ad80:	str	fp, [r4]
   1ad84:	str	r5, [r4, #12]
   1ad88:	add	sp, sp, #36	; 0x24
   1ad8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad90:	cmp	r8, #0
   1ad94:	beq	1adb0 <argp_error@@Base+0x9ac>
   1ad98:	ldr	r1, [pc, #752]	; 1b090 <argp_error@@Base+0xc8c>
   1ad9c:	ldr	r2, [r9]
   1ada0:	mov	r3, fp
   1ada4:	ldr	r0, [r1]
   1ada8:	ldr	r1, [pc, #740]	; 1b094 <argp_error@@Base+0xc90>
   1adac:	bl	11a0c <fprintf@plt>
   1adb0:	mov	r0, #63	; 0x3f
   1adb4:	str	fp, [r4, #8]
   1adb8:	add	sp, sp, #36	; 0x24
   1adbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adc0:	mov	r2, #1
   1adc4:	mov	r3, r2
   1adc8:	str	r2, [r4]
   1adcc:	b	1ab8c <argp_error@@Base+0x788>
   1add0:	ldr	r2, [r4, #28]
   1add4:	ldr	r3, [r4, #32]
   1add8:	cmp	r2, r3
   1addc:	beq	1af5c <argp_error@@Base+0xb58>
   1ade0:	cmp	fp, r3
   1ade4:	beq	1adf8 <argp_error@@Base+0x9f4>
   1ade8:	mov	r1, r4
   1adec:	mov	r0, r9
   1adf0:	bl	1a548 <argp_error@@Base+0x144>
   1adf4:	ldr	r3, [r4]
   1adf8:	cmp	r6, r3
   1adfc:	movle	fp, r3
   1ae00:	ble	1ae3c <argp_error@@Base+0xa38>
   1ae04:	add	r1, r9, r3, lsl #2
   1ae08:	b	1ae1c <argp_error@@Base+0xa18>
   1ae0c:	add	r3, r3, #1
   1ae10:	cmp	r6, r3
   1ae14:	str	r3, [r4]
   1ae18:	beq	1ae80 <argp_error@@Base+0xa7c>
   1ae1c:	ldr	r2, [r1], #4
   1ae20:	ldrb	r0, [r2]
   1ae24:	cmp	r0, #45	; 0x2d
   1ae28:	bne	1ae0c <argp_error@@Base+0xa08>
   1ae2c:	ldrb	r2, [r2, #1]
   1ae30:	cmp	r2, #0
   1ae34:	beq	1ae0c <argp_error@@Base+0xa08>
   1ae38:	ldr	fp, [r4]
   1ae3c:	str	r3, [r4, #32]
   1ae40:	cmp	r6, fp
   1ae44:	bne	1acd4 <argp_error@@Base+0x8d0>
   1ae48:	ldr	r3, [r4, #28]
   1ae4c:	ldr	r6, [r4, #32]
   1ae50:	mvn	r0, #0
   1ae54:	cmp	r3, r6
   1ae58:	strne	r3, [r4]
   1ae5c:	b	1ad3c <argp_error@@Base+0x938>
   1ae60:	ldr	r0, [pc, #560]	; 1b098 <argp_error@@Base+0xc94>
   1ae64:	bl	11940 <getenv@plt>
   1ae68:	ldr	r5, [r4, #20]
   1ae6c:	cmp	r0, #0
   1ae70:	bne	1abd0 <argp_error@@Base+0x7cc>
   1ae74:	mov	r3, #1
   1ae78:	str	r3, [r4, #24]
   1ae7c:	b	1abd8 <argp_error@@Base+0x7d4>
   1ae80:	mov	fp, r6
   1ae84:	str	r3, [r4, #32]
   1ae88:	b	1ae40 <argp_error@@Base+0xa3c>
   1ae8c:	ldrb	r1, [r5, #1]
   1ae90:	cmp	r1, #0
   1ae94:	beq	1ad6c <argp_error@@Base+0x968>
   1ae98:	cmp	sl, #0
   1ae9c:	beq	1aed0 <argp_error@@Base+0xacc>
   1aea0:	cmp	r1, #45	; 0x2d
   1aea4:	beq	1afdc <argp_error@@Base+0xbd8>
   1aea8:	ldr	r3, [sp, #76]	; 0x4c
   1aeac:	cmp	r3, #0
   1aeb0:	beq	1aed0 <argp_error@@Base+0xacc>
   1aeb4:	ldrb	r3, [r5, #2]
   1aeb8:	cmp	r3, #0
   1aebc:	bne	1af8c <argp_error@@Base+0xb88>
   1aec0:	mov	r0, r7
   1aec4:	bl	119f4 <strchr@plt>
   1aec8:	cmp	r0, #0
   1aecc:	beq	1af8c <argp_error@@Base+0xb88>
   1aed0:	add	r5, r5, #1
   1aed4:	b	1ac00 <argp_error@@Base+0x7fc>
   1aed8:	mov	r3, fp
   1aedc:	str	fp, [r4, #28]
   1aee0:	b	1ad28 <argp_error@@Base+0x924>
   1aee4:	cmp	sl, #0
   1aee8:	sub	ip, r1, #59	; 0x3b
   1aeec:	clz	ip, ip
   1aef0:	lsr	ip, ip, #5
   1aef4:	moveq	ip, #0
   1aef8:	cmp	ip, #0
   1aefc:	beq	1ac5c <argp_error@@Base+0x858>
   1af00:	ldrb	r2, [r5, #1]
   1af04:	cmp	r2, #0
   1af08:	bne	1af1c <argp_error@@Base+0xb18>
   1af0c:	ldr	r3, [r4]
   1af10:	cmp	r6, r3
   1af14:	ldrne	r3, [r9, r3, lsl #2]
   1af18:	beq	1b038 <argp_error@@Base+0xc34>
   1af1c:	str	r3, [r4, #20]
   1af20:	ldr	lr, [pc, #372]	; 1b09c <argp_error@@Base+0xc98>
   1af24:	ldr	r3, [sp, #72]	; 0x48
   1af28:	mov	ip, #0
   1af2c:	str	r3, [sp]
   1af30:	str	r8, [sp, #12]
   1af34:	str	r4, [sp, #8]
   1af38:	str	lr, [sp, #16]
   1af3c:	mov	r3, sl
   1af40:	str	ip, [r4, #12]
   1af44:	mov	r2, r7
   1af48:	mov	r1, r9
   1af4c:	mov	r0, r6
   1af50:	str	ip, [sp, #4]
   1af54:	bl	1a604 <argp_error@@Base+0x200>
   1af58:	b	1ad88 <argp_error@@Base+0x984>
   1af5c:	cmp	fp, r3
   1af60:	movne	r3, fp
   1af64:	strne	fp, [r4, #28]
   1af68:	b	1adf8 <argp_error@@Base+0x9f4>
   1af6c:	cmp	r2, #0
   1af70:	streq	r2, [r4, #12]
   1af74:	beq	1ac98 <argp_error@@Base+0x894>
   1af78:	ldr	r2, [r4]
   1af7c:	str	r3, [r4, #12]
   1af80:	add	r3, r2, #1
   1af84:	str	r3, [r4]
   1af88:	b	1ac98 <argp_error@@Base+0x894>
   1af8c:	ldr	r2, [sp, #76]	; 0x4c
   1af90:	add	r5, r5, #1
   1af94:	str	r5, [r4, #20]
   1af98:	ldr	r3, [pc, #256]	; 1b0a0 <argp_error@@Base+0xc9c>
   1af9c:	str	r2, [sp, #4]
   1afa0:	ldr	r2, [sp, #72]	; 0x48
   1afa4:	str	r3, [sp, #16]
   1afa8:	str	r2, [sp]
   1afac:	str	r8, [sp, #12]
   1afb0:	str	r4, [sp, #8]
   1afb4:	mov	r3, sl
   1afb8:	mov	r2, r7
   1afbc:	mov	r1, r9
   1afc0:	mov	r0, r6
   1afc4:	bl	1a604 <argp_error@@Base+0x200>
   1afc8:	cmn	r0, #1
   1afcc:	bne	1ad88 <argp_error@@Base+0x984>
   1afd0:	ldr	r3, [r4]
   1afd4:	ldr	r5, [r9, r3, lsl #2]
   1afd8:	b	1aed0 <argp_error@@Base+0xacc>
   1afdc:	add	r5, r5, #2
   1afe0:	str	r5, [r4, #20]
   1afe4:	str	r3, [sp, #16]
   1afe8:	ldr	r3, [sp, #76]	; 0x4c
   1afec:	str	r8, [sp, #12]
   1aff0:	str	r3, [sp, #4]
   1aff4:	ldr	r3, [sp, #72]	; 0x48
   1aff8:	str	r4, [sp, #8]
   1affc:	str	r3, [sp]
   1b000:	mov	r2, r7
   1b004:	mov	r3, sl
   1b008:	mov	r1, r9
   1b00c:	mov	r0, r6
   1b010:	bl	1a604 <argp_error@@Base+0x200>
   1b014:	b	1ad88 <argp_error@@Base+0x984>
   1b018:	cmp	r8, #0
   1b01c:	bne	1b070 <argp_error@@Base+0xc6c>
   1b020:	str	fp, [r4, #8]
   1b024:	ldrb	r0, [r7]
   1b028:	cmp	r0, #58	; 0x3a
   1b02c:	movne	r0, #63	; 0x3f
   1b030:	moveq	r0, #58	; 0x3a
   1b034:	b	1ac98 <argp_error@@Base+0x894>
   1b038:	cmp	r8, #0
   1b03c:	beq	1b058 <argp_error@@Base+0xc54>
   1b040:	ldr	r1, [pc, #72]	; 1b090 <argp_error@@Base+0xc8c>
   1b044:	ldr	r2, [r9]
   1b048:	mov	r3, fp
   1b04c:	ldr	r0, [r1]
   1b050:	ldr	r1, [pc, #76]	; 1b0a4 <argp_error@@Base+0xca0>
   1b054:	bl	11a0c <fprintf@plt>
   1b058:	str	fp, [r4, #8]
   1b05c:	ldrb	r0, [r7]
   1b060:	cmp	r0, #58	; 0x3a
   1b064:	movne	r0, #63	; 0x3f
   1b068:	moveq	r0, #58	; 0x3a
   1b06c:	b	1ad88 <argp_error@@Base+0x984>
   1b070:	ldr	r1, [pc, #24]	; 1b090 <argp_error@@Base+0xc8c>
   1b074:	ldr	r2, [r9]
   1b078:	mov	r3, fp
   1b07c:	ldr	r0, [r1]
   1b080:	ldr	r1, [pc, #28]	; 1b0a4 <argp_error@@Base+0xca0>
   1b084:	bl	11a0c <fprintf@plt>
   1b088:	b	1b020 <argp_error@@Base+0xc1c>
   1b08c:	andeq	ip, r1, r4, lsl #13
   1b090:			; <UNDEFINED> instruction: 0x0002e3b0
   1b094:	andeq	ip, r1, r4, lsr #31
   1b098:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1b09c:	andeq	ip, r1, ip, ror #31
   1b0a0:	andeq	ip, r1, r0, lsr #31
   1b0a4:	andeq	ip, r1, r0, asr #31
   1b0a8:	push	{r4, r5, r6, lr}
   1b0ac:	sub	sp, sp, #16
   1b0b0:	ldr	r5, [pc, #84]	; 1b10c <argp_error@@Base+0xd08>
   1b0b4:	ldr	ip, [sp, #32]
   1b0b8:	ldr	r4, [pc, #80]	; 1b110 <argp_error@@Base+0xd0c>
   1b0bc:	str	ip, [sp]
   1b0c0:	ldr	ip, [sp, #40]	; 0x28
   1b0c4:	ldr	r6, [sp, #36]	; 0x24
   1b0c8:	ldr	lr, [r5]
   1b0cc:	str	ip, [sp, #12]
   1b0d0:	ldr	ip, [r5, #4]
   1b0d4:	str	r4, [sp, #8]
   1b0d8:	str	r6, [sp, #4]
   1b0dc:	str	ip, [r4, #4]
   1b0e0:	str	lr, [r4]
   1b0e4:	bl	1ab48 <argp_error@@Base+0x744>
   1b0e8:	ldr	r3, [pc, #36]	; 1b114 <argp_error@@Base+0xd10>
   1b0ec:	ldr	ip, [r4]
   1b0f0:	ldr	r1, [r4, #8]
   1b0f4:	ldr	r2, [r4, #12]
   1b0f8:	str	ip, [r5]
   1b0fc:	str	r1, [r5, #8]
   1b100:	str	r2, [r3]
   1b104:	add	sp, sp, #16
   1b108:	pop	{r4, r5, r6, pc}
   1b10c:	muleq	r2, r8, r3
   1b110:	andeq	lr, r2, r0, asr #9
   1b114:	andeq	lr, r2, ip, lsl r6
   1b118:	push	{lr}		; (str lr, [sp, #-4]!)
   1b11c:	mov	r3, #0
   1b120:	sub	sp, sp, #20
   1b124:	mov	ip, #1
   1b128:	str	r3, [sp]
   1b12c:	stmib	sp, {r3, ip}
   1b130:	bl	1b0a8 <argp_error@@Base+0xca4>
   1b134:	add	sp, sp, #20
   1b138:	pop	{pc}		; (ldr pc, [sp], #4)
   1b13c:	push	{r4, r5, r6, r7, r8, lr}
   1b140:	mov	r8, r0
   1b144:	mov	r0, #36	; 0x24
   1b148:	mov	r7, r1
   1b14c:	mov	r6, r2
   1b150:	mov	r5, r3
   1b154:	bl	17180 <argp_parse@@Base+0x1490>
   1b158:	subs	r4, r0, #0
   1b15c:	beq	1b1a0 <argp_error@@Base+0xd9c>
   1b160:	mov	r0, #0
   1b164:	str	r5, [r4, #12]
   1b168:	str	r0, [r4, #20]
   1b16c:	str	r0, [r4, #16]
   1b170:	str	r8, [r4]
   1b174:	str	r7, [r4, #4]
   1b178:	str	r6, [r4, #8]
   1b17c:	mov	r0, #200	; 0xc8
   1b180:	bl	17180 <argp_parse@@Base+0x1490>
   1b184:	cmp	r0, #0
   1b188:	addne	r3, r0, #200	; 0xc8
   1b18c:	mov	r5, r0
   1b190:	str	r0, [r4, #24]
   1b194:	strne	r0, [r4, #28]
   1b198:	strne	r3, [r4, #32]
   1b19c:	beq	1b1a8 <argp_error@@Base+0xda4>
   1b1a0:	mov	r0, r4
   1b1a4:	pop	{r4, r5, r6, r7, r8, pc}
   1b1a8:	mov	r0, r4
   1b1ac:	bl	16b88 <argp_parse@@Base+0xe98>
   1b1b0:	mov	r4, r5
   1b1b4:	b	1b1a0 <argp_error@@Base+0xd9c>
   1b1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1bc:	mov	r7, r0
   1b1c0:	ldr	r6, [r0, #24]
   1b1c4:	ldr	r3, [r0, #16]
   1b1c8:	ldr	fp, [r0, #28]
   1b1cc:	sub	sp, sp, #12
   1b1d0:	add	r6, r6, r3
   1b1d4:	mov	r9, #32
   1b1d8:	cmp	r6, fp
   1b1dc:	bcs	1b2b8 <argp_error@@Base+0xeb4>
   1b1e0:	ldr	r8, [r7, #20]
   1b1e4:	cmp	r8, #0
   1b1e8:	bne	1b258 <argp_error@@Base+0xe54>
   1b1ec:	ldr	r4, [r7, #4]
   1b1f0:	cmp	r4, #0
   1b1f4:	beq	1b4fc <argp_error@@Base+0x10f8>
   1b1f8:	ldr	r2, [r7, #32]
   1b1fc:	add	r3, fp, r4
   1b200:	cmp	r2, r3
   1b204:	bls	1b218 <argp_error@@Base+0xe14>
   1b208:	b	1b644 <argp_error@@Base+0x1240>
   1b20c:	add	r8, r8, #1
   1b210:	cmp	r4, r8
   1b214:	beq	1b24c <argp_error@@Base+0xe48>
   1b218:	ldr	r0, [r7]
   1b21c:	ldr	r3, [r0, #20]
   1b220:	ldr	r2, [r0, #24]
   1b224:	add	r1, r3, #1
   1b228:	cmp	r3, r2
   1b22c:	strcc	r1, [r0, #20]
   1b230:	strbcc	r9, [r3]
   1b234:	bcc	1b20c <argp_error@@Base+0xe08>
   1b238:	mov	r1, r9
   1b23c:	add	r8, r8, #1
   1b240:	bl	11ab4 <__overflow@plt>
   1b244:	cmp	r4, r8
   1b248:	bne	1b218 <argp_error@@Base+0xe14>
   1b24c:	ldr	fp, [r7, #28]
   1b250:	mov	r8, r4
   1b254:	str	r4, [r7, #20]
   1b258:	sub	sl, fp, r6
   1b25c:	mov	r2, sl
   1b260:	mov	r1, #10
   1b264:	mov	r0, r6
   1b268:	bl	11a90 <memchr@plt>
   1b26c:	cmp	r8, #0
   1b270:	movlt	r8, #0
   1b274:	movlt	r3, r8
   1b278:	str	r6, [sp]
   1b27c:	mov	r4, r0
   1b280:	strlt	r3, [r7, #20]
   1b284:	cmp	r4, #0
   1b288:	beq	1b520 <argp_error@@Base+0x111c>
   1b28c:	sub	r2, r4, r6
   1b290:	ldr	r3, [r7, #8]
   1b294:	add	r2, r2, r8
   1b298:	cmp	r2, r3
   1b29c:	bge	1b2cc <argp_error@@Base+0xec8>
   1b2a0:	ldr	fp, [r7, #28]
   1b2a4:	add	r6, r4, #1
   1b2a8:	mov	r3, #0
   1b2ac:	cmp	r6, fp
   1b2b0:	str	r3, [r7, #20]
   1b2b4:	bcc	1b1e0 <argp_error@@Base+0xddc>
   1b2b8:	ldr	r3, [r7, #24]
   1b2bc:	sub	r3, fp, r3
   1b2c0:	str	r3, [r7, #16]
   1b2c4:	add	sp, sp, #12
   1b2c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2cc:	ldr	r2, [r7, #12]
   1b2d0:	sub	r5, r3, #1
   1b2d4:	cmp	r2, #0
   1b2d8:	str	r2, [sp, #4]
   1b2dc:	blt	1b5d8 <argp_error@@Base+0x11d4>
   1b2e0:	add	r5, r5, #1
   1b2e4:	sub	r8, r5, r8
   1b2e8:	adds	r8, r6, r8
   1b2ec:	bcs	1b558 <argp_error@@Base+0x1154>
   1b2f0:	bl	119ac <__ctype_b_loc@plt>
   1b2f4:	mov	r3, r8
   1b2f8:	ldr	r0, [r0]
   1b2fc:	b	1b308 <argp_error@@Base+0xf04>
   1b300:	cmp	r3, r6
   1b304:	bcc	1b55c <argp_error@@Base+0x1158>
   1b308:	mov	r1, r3
   1b30c:	sub	r3, r3, #1
   1b310:	ldrb	r2, [r1]
   1b314:	mov	r5, r3
   1b318:	lsl	r2, r2, #1
   1b31c:	ldrh	r2, [r0, r2]
   1b320:	tst	r2, #1
   1b324:	beq	1b300 <argp_error@@Base+0xefc>
   1b328:	add	r5, r1, #1
   1b32c:	cmp	r5, r6
   1b330:	bls	1b570 <argp_error@@Base+0x116c>
   1b334:	cmp	r1, r6
   1b338:	bcc	1b568 <argp_error@@Base+0x1164>
   1b33c:	mov	r1, r3
   1b340:	sub	r8, r6, #1
   1b344:	b	1b360 <argp_error@@Base+0xf5c>
   1b348:	ldrb	r3, [r1]
   1b34c:	sub	r1, r1, #1
   1b350:	lsl	r3, r3, #1
   1b354:	ldrh	r3, [r0, r3]
   1b358:	tst	r3, #1
   1b35c:	beq	1b688 <argp_error@@Base+0x1284>
   1b360:	cmp	r8, r1
   1b364:	mov	r2, r1
   1b368:	bne	1b348 <argp_error@@Base+0xf44>
   1b36c:	add	r8, r8, #1
   1b370:	add	r3, sl, #1
   1b374:	add	r3, r6, r3
   1b378:	cmp	r5, r3
   1b37c:	beq	1b464 <argp_error@@Base+0x1060>
   1b380:	add	r3, r8, #1
   1b384:	ldr	r1, [sp, #4]
   1b388:	sub	r2, r5, r3
   1b38c:	cmp	r2, r1
   1b390:	bge	1b480 <argp_error@@Base+0x107c>
   1b394:	cmp	r5, fp
   1b398:	bcs	1b478 <argp_error@@Base+0x1074>
   1b39c:	ldr	r3, [r7, #32]
   1b3a0:	ldr	r2, [sp, #4]
   1b3a4:	sub	r3, r3, fp
   1b3a8:	add	r0, r2, #1
   1b3ac:	cmp	r3, r0
   1b3b0:	bgt	1b6b8 <argp_error@@Base+0x12b4>
   1b3b4:	ldr	r0, [r7, #24]
   1b3b8:	cmp	r8, r0
   1b3bc:	bls	1b3d0 <argp_error@@Base+0xfcc>
   1b3c0:	sub	r2, r8, r0
   1b3c4:	ldr	r3, [r7]
   1b3c8:	mov	r1, #1
   1b3cc:	bl	1182c <fwrite_unlocked@plt>
   1b3d0:	ldr	r0, [r7]
   1b3d4:	ldr	r2, [r0, #24]
   1b3d8:	ldr	r3, [r0, #20]
   1b3dc:	cmp	r3, r2
   1b3e0:	addcc	r2, r3, #1
   1b3e4:	strcc	r2, [r0, #20]
   1b3e8:	movcc	r2, #10
   1b3ec:	strbcc	r2, [r3]
   1b3f0:	bcs	1b6f8 <argp_error@@Base+0x12f4>
   1b3f4:	ldr	r6, [r7, #24]
   1b3f8:	ldr	r3, [sp]
   1b3fc:	sub	r2, r5, r6
   1b400:	sub	r3, r3, r6
   1b404:	add	sl, sl, r3
   1b408:	mov	fp, r2
   1b40c:	mov	r4, r6
   1b410:	ldr	r3, [r7, #12]
   1b414:	cmp	r3, r2
   1b418:	bgt	1b4a0 <argp_error@@Base+0x109c>
   1b41c:	cmp	r3, #0
   1b420:	movgt	r2, r6
   1b424:	ble	1b440 <argp_error@@Base+0x103c>
   1b428:	strb	r9, [r2], #1
   1b42c:	ldr	r3, [r7, #12]
   1b430:	sub	r1, r2, r6
   1b434:	cmp	r3, r1
   1b438:	bgt	1b428 <argp_error@@Base+0x1024>
   1b43c:	mov	r6, r2
   1b440:	cmp	r6, r5
   1b444:	bcc	1b628 <argp_error@@Base+0x1224>
   1b448:	sub	fp, sl, fp
   1b44c:	cmp	r3, #0
   1b450:	add	fp, r6, fp
   1b454:	mvneq	r3, #0
   1b458:	str	fp, [r7, #28]
   1b45c:	str	r3, [r7, #20]
   1b460:	b	1b1d8 <argp_error@@Base+0xdd4>
   1b464:	ldr	r3, [r7, #32]
   1b468:	ldr	r2, [sp, #4]
   1b46c:	sub	r3, r3, r8
   1b470:	cmp	r3, r2
   1b474:	ble	1b394 <argp_error@@Base+0xf90>
   1b478:	add	r3, r8, #1
   1b47c:	sub	r2, r5, r3
   1b480:	sub	fp, r5, r6
   1b484:	mov	r4, r6
   1b488:	mov	r6, r3
   1b48c:	mov	r3, #10
   1b490:	strb	r3, [r8]
   1b494:	ldr	r3, [r7, #12]
   1b498:	cmp	r3, r2
   1b49c:	ble	1b41c <argp_error@@Base+0x1018>
   1b4a0:	add	r2, sl, #1
   1b4a4:	add	r2, r4, r2
   1b4a8:	cmp	r5, r2
   1b4ac:	beq	1b6a4 <argp_error@@Base+0x12a0>
   1b4b0:	cmp	r3, #0
   1b4b4:	movgt	r8, #0
   1b4b8:	bgt	1b4d0 <argp_error@@Base+0x10cc>
   1b4bc:	b	1b440 <argp_error@@Base+0x103c>
   1b4c0:	ldr	r3, [r7, #12]
   1b4c4:	add	r8, r8, #1
   1b4c8:	cmp	r3, r8
   1b4cc:	ble	1b440 <argp_error@@Base+0x103c>
   1b4d0:	ldr	r0, [r7]
   1b4d4:	ldr	r3, [r0, #20]
   1b4d8:	ldr	r2, [r0, #24]
   1b4dc:	add	r1, r3, #1
   1b4e0:	cmp	r3, r2
   1b4e4:	strcc	r1, [r0, #20]
   1b4e8:	strbcc	r9, [r3]
   1b4ec:	bcc	1b4c0 <argp_error@@Base+0x10bc>
   1b4f0:	mov	r1, r9
   1b4f4:	bl	11ab4 <__overflow@plt>
   1b4f8:	b	1b4c0 <argp_error@@Base+0x10bc>
   1b4fc:	sub	sl, fp, r6
   1b500:	mov	r2, sl
   1b504:	mov	r1, #10
   1b508:	mov	r0, r6
   1b50c:	bl	11a90 <memchr@plt>
   1b510:	str	r6, [sp]
   1b514:	mov	r4, r0
   1b518:	cmp	r4, #0
   1b51c:	bne	1b28c <argp_error@@Base+0xe88>
   1b520:	ldr	r5, [r7, #8]
   1b524:	add	r3, r8, sl
   1b528:	cmp	r3, r5
   1b52c:	bcc	1b71c <argp_error@@Base+0x1318>
   1b530:	ldr	r2, [r7, #12]
   1b534:	sub	r5, r5, #1
   1b538:	cmp	r2, #0
   1b53c:	str	r2, [sp, #4]
   1b540:	blt	1b708 <argp_error@@Base+0x1304>
   1b544:	add	r5, r5, #1
   1b548:	sub	r8, r5, r8
   1b54c:	adds	r8, r6, r8
   1b550:	mov	r4, fp
   1b554:	bcc	1b2f0 <argp_error@@Base+0xeec>
   1b558:	mov	r5, r8
   1b55c:	add	r5, r5, #1
   1b560:	cmp	r5, r6
   1b564:	bls	1b570 <argp_error@@Base+0x116c>
   1b568:	mov	r8, r5
   1b56c:	b	1b370 <argp_error@@Base+0xf6c>
   1b570:	cmp	r8, r4
   1b574:	bcs	1b5ac <argp_error@@Base+0x11a8>
   1b578:	add	r5, r8, #1
   1b57c:	b	1b5a0 <argp_error@@Base+0x119c>
   1b580:	bl	119ac <__ctype_b_loc@plt>
   1b584:	ldrb	r3, [r5]
   1b588:	add	r5, r5, #1
   1b58c:	lsl	r3, r3, #1
   1b590:	ldr	r2, [r0]
   1b594:	ldrh	r3, [r2, r3]
   1b598:	tst	r3, #1
   1b59c:	bne	1b5bc <argp_error@@Base+0x11b8>
   1b5a0:	cmp	r5, r4
   1b5a4:	mov	r8, r5
   1b5a8:	bne	1b580 <argp_error@@Base+0x117c>
   1b5ac:	cmp	r8, r4
   1b5b0:	beq	1b690 <argp_error@@Base+0x128c>
   1b5b4:	bl	119ac <__ctype_b_loc@plt>
   1b5b8:	ldr	r2, [r0]
   1b5bc:	mov	r5, r8
   1b5c0:	ldrb	r3, [r5, #1]!
   1b5c4:	lsl	r3, r3, #1
   1b5c8:	ldrh	r3, [r2, r3]
   1b5cc:	tst	r3, #1
   1b5d0:	bne	1b5c0 <argp_error@@Base+0x11bc>
   1b5d4:	b	1b370 <argp_error@@Base+0xf6c>
   1b5d8:	cmp	r4, fp
   1b5dc:	str	r3, [sp]
   1b5e0:	bcs	1b704 <argp_error@@Base+0x1300>
   1b5e4:	sub	r0, r5, r8
   1b5e8:	sub	r2, fp, r4
   1b5ec:	add	r0, r6, r0
   1b5f0:	mov	r1, r4
   1b5f4:	bl	117c0 <memmove@plt>
   1b5f8:	ldr	r2, [r7, #20]
   1b5fc:	ldr	fp, [r7, #28]
   1b600:	sub	r5, r5, r2
   1b604:	add	r5, r6, r5
   1b608:	mov	r3, #0
   1b60c:	sub	r4, r5, r4
   1b610:	str	r3, [r7, #20]
   1b614:	ldr	r3, [sp]
   1b618:	sub	fp, fp, r4
   1b61c:	add	r6, r6, r3
   1b620:	str	fp, [r7, #28]
   1b624:	b	1b1d8 <argp_error@@Base+0xdd4>
   1b628:	add	r2, r4, sl
   1b62c:	sub	r2, r2, r5
   1b630:	mov	r1, r5
   1b634:	mov	r0, r6
   1b638:	bl	117c0 <memmove@plt>
   1b63c:	ldr	r3, [r7, #12]
   1b640:	b	1b448 <argp_error@@Base+0x1044>
   1b644:	add	r5, r6, r4
   1b648:	sub	r2, fp, r6
   1b64c:	mov	r1, r6
   1b650:	mov	r0, r5
   1b654:	bl	117c0 <memmove@plt>
   1b658:	ldr	r3, [r7, #28]
   1b65c:	mov	r0, r6
   1b660:	add	r3, r3, r4
   1b664:	str	r3, [r7, #28]
   1b668:	mov	r2, r4
   1b66c:	mov	r1, r9
   1b670:	bl	11a54 <memset@plt>
   1b674:	mov	r6, r5
   1b678:	ldr	fp, [r7, #28]
   1b67c:	mov	r8, r4
   1b680:	str	r4, [r7, #20]
   1b684:	b	1b258 <argp_error@@Base+0xe54>
   1b688:	add	r8, r2, #1
   1b68c:	b	1b370 <argp_error@@Base+0xf6c>
   1b690:	mov	r3, #0
   1b694:	str	r3, [r7, #20]
   1b698:	add	r6, r8, #1
   1b69c:	ldr	fp, [r7, #28]
   1b6a0:	b	1b1d8 <argp_error@@Base+0xdd4>
   1b6a4:	ldr	r2, [r7, #32]
   1b6a8:	sub	r2, r2, r5
   1b6ac:	cmp	r3, r2
   1b6b0:	ble	1b41c <argp_error@@Base+0x1018>
   1b6b4:	b	1b4b0 <argp_error@@Base+0x10ac>
   1b6b8:	sub	fp, fp, r5
   1b6bc:	mov	r2, fp
   1b6c0:	mov	r1, r5
   1b6c4:	add	r0, r8, r0
   1b6c8:	bl	117c0 <memmove@plt>
   1b6cc:	ldr	r2, [r7, #12]
   1b6d0:	mov	r3, #10
   1b6d4:	add	r5, r2, #1
   1b6d8:	add	r5, r8, r5
   1b6dc:	add	fp, r5, fp
   1b6e0:	sub	sl, fp, r6
   1b6e4:	mov	r4, r6
   1b6e8:	sub	fp, r5, r6
   1b6ec:	strb	r3, [r8]
   1b6f0:	add	r6, r8, #1
   1b6f4:	b	1b410 <argp_error@@Base+0x100c>
   1b6f8:	mov	r1, #10
   1b6fc:	bl	11ab4 <__overflow@plt>
   1b700:	b	1b3f4 <argp_error@@Base+0xff0>
   1b704:	add	r3, r8, sl
   1b708:	sub	r5, r5, r3
   1b70c:	add	fp, fp, r5
   1b710:	str	fp, [r7, #28]
   1b714:	str	r3, [r7, #20]
   1b718:	b	1b2b8 <argp_error@@Base+0xeb4>
   1b71c:	str	r3, [r7, #20]
   1b720:	ldr	fp, [r7, #28]
   1b724:	b	1b2b8 <argp_error@@Base+0xeb4>
   1b728:	push	{r4, lr}
   1b72c:	mov	r4, r0
   1b730:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1b734:	ldr	r2, [r4, #28]
   1b738:	ldr	r0, [r4, #24]
   1b73c:	cmp	r2, r0
   1b740:	bls	1b758 <argp_error@@Base+0x1354>
   1b744:	sub	r2, r2, r0
   1b748:	ldr	r3, [r4]
   1b74c:	mov	r1, #1
   1b750:	bl	1182c <fwrite_unlocked@plt>
   1b754:	ldr	r0, [r4, #24]
   1b758:	bl	16b88 <argp_parse@@Base+0xe98>
   1b75c:	mov	r0, r4
   1b760:	pop	{r4, lr}
   1b764:	b	16b88 <argp_parse@@Base+0xe98>
   1b768:	push	{r4, r5, r6, lr}
   1b76c:	mov	r4, r0
   1b770:	mov	r5, r1
   1b774:	bl	1b1b8 <argp_error@@Base+0xdb4>
   1b778:	ldr	r3, [r4, #24]
   1b77c:	ldr	r2, [r4, #28]
   1b780:	mov	r0, r3
   1b784:	sub	r2, r2, r3
   1b788:	mov	r1, #1
   1b78c:	ldr	r3, [r4]
   1b790:	bl	1182c <fwrite_unlocked@plt>
   1b794:	ldr	r2, [r4, #28]
   1b798:	ldr	r3, [r4, #24]
   1b79c:	sub	r1, r2, r3
   1b7a0:	cmp	r0, r1
   1b7a4:	bne	1b7e8 <argp_error@@Base+0x13e4>
   1b7a8:	ldr	r1, [r4, #32]
   1b7ac:	mov	r2, #0
   1b7b0:	sub	r1, r1, r3
   1b7b4:	cmp	r1, r5
   1b7b8:	str	r3, [r4, #28]
   1b7bc:	str	r2, [r4, #16]
   1b7c0:	movcs	r3, #1
   1b7c4:	bcs	1b7e0 <argp_error@@Base+0x13dc>
   1b7c8:	adds	r5, r1, r5
   1b7cc:	bcc	1b818 <argp_error@@Base+0x1414>
   1b7d0:	bl	11a24 <__errno_location@plt>
   1b7d4:	mov	r3, #0
   1b7d8:	mov	r2, #12
   1b7dc:	str	r2, [r0]
   1b7e0:	mov	r0, r3
   1b7e4:	pop	{r4, r5, r6, pc}
   1b7e8:	ldr	r1, [r4, #16]
   1b7ec:	sub	r2, r2, r0
   1b7f0:	sub	r1, r1, r0
   1b7f4:	str	r2, [r4, #28]
   1b7f8:	str	r1, [r4, #16]
   1b7fc:	sub	r2, r2, r3
   1b800:	add	r1, r3, r0
   1b804:	mov	r0, r3
   1b808:	bl	117c0 <memmove@plt>
   1b80c:	mov	r3, #0
   1b810:	mov	r0, r3
   1b814:	pop	{r4, r5, r6, pc}
   1b818:	mov	r0, r3
   1b81c:	mov	r1, r5
   1b820:	bl	171ac <argp_parse@@Base+0x14bc>
   1b824:	cmp	r0, #0
   1b828:	beq	1b7d0 <argp_error@@Base+0x13cc>
   1b82c:	add	r1, r0, r5
   1b830:	mov	r3, #1
   1b834:	str	r0, [r4, #24]
   1b838:	str	r0, [r4, #28]
   1b83c:	str	r1, [r4, #32]
   1b840:	mov	r0, r3
   1b844:	pop	{r4, r5, r6, pc}
   1b848:	ldr	r3, [r0, #32]
   1b84c:	ldr	r2, [r0, #28]
   1b850:	sub	r3, r3, r2
   1b854:	cmp	r3, r1
   1b858:	bcc	1b864 <argp_error@@Base+0x1460>
   1b85c:	mov	r0, #1
   1b860:	bx	lr
   1b864:	b	1b768 <argp_error@@Base+0x1364>
   1b868:	push	{r1, r2, r3}
   1b86c:	mov	r1, #150	; 0x96
   1b870:	push	{r4, r5, r6, r7, lr}
   1b874:	sub	sp, sp, #8
   1b878:	mov	r5, r0
   1b87c:	ldr	r7, [sp, #28]
   1b880:	add	r6, sp, #32
   1b884:	ldr	r3, [r5, #32]
   1b888:	ldr	r0, [r5, #28]
   1b88c:	sub	r2, r3, r0
   1b890:	cmp	r1, r2
   1b894:	bhi	1b8d8 <argp_error@@Base+0x14d4>
   1b898:	sub	r4, r3, r0
   1b89c:	mov	r1, r4
   1b8a0:	mov	r3, r6
   1b8a4:	mov	r2, r7
   1b8a8:	str	r6, [sp, #4]
   1b8ac:	bl	11b68 <vsnprintf@plt>
   1b8b0:	cmp	r4, r0
   1b8b4:	addls	r1, r0, #1
   1b8b8:	bls	1b884 <argp_error@@Base+0x1480>
   1b8bc:	ldr	r3, [r5, #28]
   1b8c0:	add	r3, r3, r0
   1b8c4:	str	r3, [r5, #28]
   1b8c8:	add	sp, sp, #8
   1b8cc:	pop	{r4, r5, r6, r7, lr}
   1b8d0:	add	sp, sp, #12
   1b8d4:	bx	lr
   1b8d8:	mov	r0, r5
   1b8dc:	bl	1b768 <argp_error@@Base+0x1364>
   1b8e0:	cmp	r0, #0
   1b8e4:	ldrne	r3, [r5, #32]
   1b8e8:	ldrne	r0, [r5, #28]
   1b8ec:	bne	1b898 <argp_error@@Base+0x1494>
   1b8f0:	mvn	r0, #0
   1b8f4:	add	sp, sp, #8
   1b8f8:	pop	{r4, r5, r6, r7, lr}
   1b8fc:	add	sp, sp, #12
   1b900:	bx	lr
   1b904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b908:	mov	r7, r0
   1b90c:	ldr	r6, [pc, #72]	; 1b95c <argp_error@@Base+0x1558>
   1b910:	ldr	r5, [pc, #72]	; 1b960 <argp_error@@Base+0x155c>
   1b914:	add	r6, pc, r6
   1b918:	add	r5, pc, r5
   1b91c:	sub	r6, r6, r5
   1b920:	mov	r8, r1
   1b924:	mov	r9, r2
   1b928:	bl	11704 <calloc@plt-0x20>
   1b92c:	asrs	r6, r6, #2
   1b930:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b934:	mov	r4, #0
   1b938:	add	r4, r4, #1
   1b93c:	ldr	r3, [r5], #4
   1b940:	mov	r2, r9
   1b944:	mov	r1, r8
   1b948:	mov	r0, r7
   1b94c:	blx	r3
   1b950:	cmp	r6, r4
   1b954:	bne	1b938 <argp_error@@Base+0x1534>
   1b958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b95c:	andeq	r2, r1, ip, ror #11
   1b960:	andeq	r2, r1, r4, ror #11
   1b964:	bx	lr

Disassembly of section .fini:

0001b968 <.fini>:
   1b968:	push	{r3, lr}
   1b96c:	pop	{r3, pc}
