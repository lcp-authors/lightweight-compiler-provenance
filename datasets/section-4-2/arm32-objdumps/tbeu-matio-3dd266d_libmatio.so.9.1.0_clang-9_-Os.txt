
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001790 <_init>:
    1790:	push	{r3, lr}
    1794:	bl	1a98 <call_weak_fn>
    1798:	pop	{r3, pc}

Disassembly of section .plt:

0000179c <.plt>:
    179c:	push	{lr}		; (str lr, [sp, #-4]!)
    17a0:	ldr	lr, [pc, #4]	; 17ac <.plt+0x10>
    17a4:	add	lr, pc, lr
    17a8:	ldr	pc, [lr, #8]!
    17ac:	.word	0x0005b854

000017b0 <calloc@plt>:
    17b0:	add	ip, pc, #0, 12
    17b4:	add	ip, ip, #372736	; 0x5b000
    17b8:	ldr	pc, [ip, #2132]!	; 0x854

000017bc <Mat_VarReadNext@plt>:
    17bc:	add	ip, pc, #0, 12
    17c0:	add	ip, ip, #372736	; 0x5b000
    17c4:	ldr	pc, [ip, #2124]!	; 0x84c

000017c8 <strcmp@plt>:
    17c8:	add	ip, pc, #0, 12
    17cc:	add	ip, ip, #372736	; 0x5b000
    17d0:	ldr	pc, [ip, #2116]!	; 0x844

000017d4 <__cxa_finalize@plt>:
    17d4:	add	ip, pc, #0, 12
    17d8:	add	ip, ip, #372736	; 0x5b000
    17dc:	ldr	pc, [ip, #2108]!	; 0x83c

000017e0 <Mat_Open@plt>:
    17e0:	add	ip, pc, #0, 12
    17e4:	add	ip, ip, #372736	; 0x5b000
    17e8:	ldr	pc, [ip, #2100]!	; 0x834

000017ec <printf@plt>:
    17ec:	add	ip, pc, #0, 12
    17f0:	add	ip, ip, #372736	; 0x5b000
    17f4:	ldr	pc, [ip, #2092]!	; 0x82c

000017f8 <fopen@plt>:
    17f8:	add	ip, pc, #0, 12
    17fc:	add	ip, ip, #372736	; 0x5b000
    1800:	ldr	pc, [ip, #2084]!	; 0x824

00001804 <inflate@plt>:
    1804:	add	ip, pc, #0, 12
    1808:	add	ip, ip, #372736	; 0x5b000
    180c:	ldr	pc, [ip, #2076]!	; 0x81c

00001810 <fflush@plt>:
    1810:	add	ip, pc, #0, 12
    1814:	add	ip, ip, #372736	; 0x5b000
    1818:	ldr	pc, [ip, #2068]!	; 0x814

0000181c <free@plt>:
    181c:	add	ip, pc, #0, 12
    1820:	add	ip, ip, #372736	; 0x5b000
    1824:	ldr	pc, [ip, #2060]!	; 0x80c

00001828 <Mat_Warning@plt>:
    1828:	add	ip, pc, #0, 12
    182c:	add	ip, ip, #372736	; 0x5b000
    1830:	ldr	pc, [ip, #2052]!	; 0x804

00001834 <memcpy@plt>:
    1834:	add	ip, pc, #0, 12
    1838:	add	ip, ip, #372736	; 0x5b000
    183c:	ldr	pc, [ip, #2044]!	; 0x7fc

00001840 <Mat_VarWrite@plt>:
    1840:	add	ip, pc, #0, 12
    1844:	add	ip, ip, #372736	; 0x5b000
    1848:	ldr	pc, [ip, #2036]!	; 0x7f4

0000184c <time@plt>:
    184c:	add	ip, pc, #0, 12
    1850:	add	ip, ip, #372736	; 0x5b000
    1854:	ldr	pc, [ip, #2028]!	; 0x7ec

00001858 <ftell@plt>:
    1858:	add	ip, pc, #0, 12
    185c:	add	ip, ip, #372736	; 0x5b000
    1860:	ldr	pc, [ip, #2020]!	; 0x7e4

00001864 <fwrite_unlocked@plt>:
    1864:	add	ip, pc, #0, 12
    1868:	add	ip, ip, #372736	; 0x5b000
    186c:	ldr	pc, [ip, #2012]!	; 0x7dc

00001870 <ctime@plt>:
    1870:	add	ip, pc, #0, 12
    1874:	add	ip, ip, #372736	; 0x5b000
    1878:	ldr	pc, [ip, #2004]!	; 0x7d4

0000187c <strdup@plt>:
    187c:	add	ip, pc, #0, 12
    1880:	add	ip, ip, #372736	; 0x5b000
    1884:	ldr	pc, [ip, #1996]!	; 0x7cc

00001888 <realloc@plt>:
    1888:	add	ip, pc, #0, 12
    188c:	add	ip, ip, #372736	; 0x5b000
    1890:	ldr	pc, [ip, #1988]!	; 0x7c4

00001894 <Mat_VarReadInfo@plt>:
    1894:	add	ip, pc, #0, 12
    1898:	add	ip, ip, #372736	; 0x5b000
    189c:	ldr	pc, [ip, #1980]!	; 0x7bc

000018a0 <zError@plt>:
    18a0:	add	ip, pc, #0, 12
    18a4:	add	ip, ip, #372736	; 0x5b000
    18a8:	ldr	pc, [ip, #1972]!	; 0x7b4

000018ac <deflate@plt>:
    18ac:	add	ip, pc, #0, 12
    18b0:	add	ip, ip, #372736	; 0x5b000
    18b4:	ldr	pc, [ip, #1964]!	; 0x7ac

000018b8 <Mat_VarCalloc@plt>:
    18b8:	add	ip, pc, #0, 12
    18bc:	add	ip, ip, #372736	; 0x5b000
    18c0:	ldr	pc, [ip, #1956]!	; 0x7a4

000018c4 <fwrite@plt>:
    18c4:	add	ip, pc, #0, 12
    18c8:	add	ip, ip, #372736	; 0x5b000
    18cc:	ldr	pc, [ip, #1948]!	; 0x79c

000018d0 <fread@plt>:
    18d0:	add	ip, pc, #0, 12
    18d4:	add	ip, ip, #372736	; 0x5b000
    18d8:	ldr	pc, [ip, #1940]!	; 0x794

000018dc <puts@plt>:
    18dc:	add	ip, pc, #0, 12
    18e0:	add	ip, ip, #372736	; 0x5b000
    18e4:	ldr	pc, [ip, #1932]!	; 0x78c

000018e8 <malloc@plt>:
    18e8:	add	ip, pc, #0, 12
    18ec:	add	ip, ip, #372736	; 0x5b000
    18f0:	ldr	pc, [ip, #1924]!	; 0x784

000018f4 <deflateInit_@plt>:
    18f4:	add	ip, pc, #0, 12
    18f8:	add	ip, ip, #372736	; 0x5b000
    18fc:	ldr	pc, [ip, #1916]!	; 0x77c

00001900 <mktemp@plt>:
    1900:	add	ip, pc, #0, 12
    1904:	add	ip, ip, #372736	; 0x5b000
    1908:	ldr	pc, [ip, #1908]!	; 0x774

0000190c <__gmon_start__@plt>:
    190c:	add	ip, pc, #0, 12
    1910:	add	ip, ip, #372736	; 0x5b000
    1914:	ldr	pc, [ip, #1900]!	; 0x76c

00001918 <exit@plt>:
    1918:	add	ip, pc, #0, 12
    191c:	add	ip, ip, #372736	; 0x5b000
    1920:	ldr	pc, [ip, #1892]!	; 0x764

00001924 <feof@plt>:
    1924:	add	ip, pc, #0, 12
    1928:	add	ip, ip, #372736	; 0x5b000
    192c:	ldr	pc, [ip, #1884]!	; 0x75c

00001930 <Mat_VarFree@plt>:
    1930:	add	ip, pc, #0, 12
    1934:	add	ip, ip, #372736	; 0x5b000
    1938:	ldr	pc, [ip, #1876]!	; 0x754

0000193c <Mat_SizeOf@plt>:
    193c:	add	ip, pc, #0, 12
    1940:	add	ip, ip, #372736	; 0x5b000
    1944:	ldr	pc, [ip, #1868]!	; 0x74c

00001948 <Mat_GetDir@plt>:
    1948:	add	ip, pc, #0, 12
    194c:	add	ip, ip, #372736	; 0x5b000
    1950:	ldr	pc, [ip, #1860]!	; 0x744

00001954 <inflateEnd@plt>:
    1954:	add	ip, pc, #0, 12
    1958:	add	ip, ip, #372736	; 0x5b000
    195c:	ldr	pc, [ip, #1852]!	; 0x73c

00001960 <inflateCopy@plt>:
    1960:	add	ip, pc, #0, 12
    1964:	add	ip, ip, #372736	; 0x5b000
    1968:	ldr	pc, [ip, #1844]!	; 0x734

0000196c <strlen@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #372736	; 0x5b000
    1974:	ldr	pc, [ip, #1836]!	; 0x72c

00001978 <fprintf@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #372736	; 0x5b000
    1980:	ldr	pc, [ip, #1828]!	; 0x724

00001984 <Mat_VarPrint@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #372736	; 0x5b000
    198c:	ldr	pc, [ip, #1820]!	; 0x71c

00001990 <snprintf@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #372736	; 0x5b000
    1998:	ldr	pc, [ip, #1812]!	; 0x714

0000199c <Mat_Rewind@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #372736	; 0x5b000
    19a4:	ldr	pc, [ip, #1804]!	; 0x70c

000019a8 <memset@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #372736	; 0x5b000
    19b0:	ldr	pc, [ip, #1796]!	; 0x704

000019b4 <putchar@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #372736	; 0x5b000
    19bc:	ldr	pc, [ip, #1788]!	; 0x6fc

000019c0 <Mat_Close@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #372736	; 0x5b000
    19c8:	ldr	pc, [ip, #1780]!	; 0x6f4

000019cc <Mat_Critical@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #372736	; 0x5b000
    19d4:	ldr	pc, [ip, #1772]!	; 0x6ec

000019d8 <deflateEnd@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #372736	; 0x5b000
    19e0:	ldr	pc, [ip, #1764]!	; 0x6e4

000019e4 <fclose@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #372736	; 0x5b000
    19ec:	ldr	pc, [ip, #1756]!	; 0x6dc

000019f0 <inflateInit_@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #372736	; 0x5b000
    19f8:	ldr	pc, [ip, #1748]!	; 0x6d4

000019fc <Mat_CreateVer@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #372736	; 0x5b000
    1a04:	ldr	pc, [ip, #1740]!	; 0x6cc

00001a08 <fputc@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #372736	; 0x5b000
    1a10:	ldr	pc, [ip, #1732]!	; 0x6c4

00001a14 <remove@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #372736	; 0x5b000
    1a1c:	ldr	pc, [ip, #1724]!	; 0x6bc

00001a20 <vsnprintf@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #372736	; 0x5b000
    1a28:	ldr	pc, [ip, #1716]!	; 0x6b4

00001a2c <Mat_VarGetStructFieldByName@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #372736	; 0x5b000
    1a34:	ldr	pc, [ip, #1708]!	; 0x6ac

00001a38 <Mat_SizeOfClass@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #372736	; 0x5b000
    1a40:	ldr	pc, [ip, #1700]!	; 0x6a4

00001a44 <Mat_VarGetStructFieldByIndex@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #372736	; 0x5b000
    1a4c:	ldr	pc, [ip, #1692]!	; 0x69c

00001a50 <fread_unlocked@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #372736	; 0x5b000
    1a58:	ldr	pc, [ip, #1684]!	; 0x694

00001a5c <Mat_VarGetSize@plt>:
    1a5c:	add	ip, pc, #0, 12
    1a60:	add	ip, ip, #372736	; 0x5b000
    1a64:	ldr	pc, [ip, #1676]!	; 0x68c

00001a68 <fseek@plt>:
    1a68:	add	ip, pc, #0, 12
    1a6c:	add	ip, ip, #372736	; 0x5b000
    1a70:	ldr	pc, [ip, #1668]!	; 0x684

00001a74 <abort@plt>:
    1a74:	add	ip, pc, #0, 12
    1a78:	add	ip, ip, #372736	; 0x5b000
    1a7c:	ldr	pc, [ip, #1660]!	; 0x67c

00001a80 <Mat_VarDuplicate@plt>:
    1a80:	add	ip, pc, #0, 12
    1a84:	add	ip, ip, #372736	; 0x5b000
    1a88:	ldr	pc, [ip, #1652]!	; 0x674

00001a8c <Mat_VarReadNextInfo@plt>:
    1a8c:	add	ip, pc, #0, 12
    1a90:	add	ip, ip, #372736	; 0x5b000
    1a94:	ldr	pc, [ip, #1644]!	; 0x66c

Disassembly of section .text:

00001a98 <call_weak_fn>:
    1a98:	ldr	r3, [pc, #20]	; 1ab4 <call_weak_fn+0x1c>
    1a9c:	ldr	r2, [pc, #20]	; 1ab8 <call_weak_fn+0x20>
    1aa0:	add	r3, pc, r3
    1aa4:	ldr	r2, [r3, r2]
    1aa8:	cmp	r2, #0
    1aac:	bxeq	lr
    1ab0:	b	190c <__gmon_start__@plt>
    1ab4:	.word	0x0005b558
    1ab8:	.word	0x00000110

00001abc <deregister_tm_clones>:
    1abc:	ldr	r0, [pc, #44]	; 1af0 <deregister_tm_clones+0x34>
    1ac0:	ldr	r3, [pc, #44]	; 1af4 <deregister_tm_clones+0x38>
    1ac4:	add	r0, pc, r0
    1ac8:	add	r3, pc, r3
    1acc:	cmp	r3, r0
    1ad0:	ldr	r3, [pc, #32]	; 1af8 <deregister_tm_clones+0x3c>
    1ad4:	add	r3, pc, r3
    1ad8:	bxeq	lr
    1adc:	ldr	r2, [pc, #24]	; 1afc <deregister_tm_clones+0x40>
    1ae0:	ldr	r3, [r3, r2]
    1ae4:	cmp	r3, #0
    1ae8:	bxeq	lr
    1aec:	bx	r3
    1af0:	.word	0x0005b654
    1af4:	.word	0x0005b650
    1af8:	.word	0x0005b524
    1afc:	.word	0x00000108

00001b00 <register_tm_clones>:
    1b00:	ldr	r0, [pc, #56]	; 1b40 <register_tm_clones+0x40>
    1b04:	ldr	r3, [pc, #56]	; 1b44 <register_tm_clones+0x44>
    1b08:	add	r0, pc, r0
    1b0c:	add	r3, pc, r3
    1b10:	sub	r1, r3, r0
    1b14:	ldr	r3, [pc, #44]	; 1b48 <register_tm_clones+0x48>
    1b18:	asr	r1, r1, #2
    1b1c:	add	r3, pc, r3
    1b20:	add	r1, r1, r1, lsr #31
    1b24:	asrs	r1, r1, #1
    1b28:	bxeq	lr
    1b2c:	ldr	r2, [pc, #24]	; 1b4c <register_tm_clones+0x4c>
    1b30:	ldr	r3, [r3, r2]
    1b34:	cmp	r3, #0
    1b38:	bxeq	lr
    1b3c:	bx	r3
    1b40:	.word	0x0005b610
    1b44:	.word	0x0005b60c
    1b48:	.word	0x0005b4dc
    1b4c:	.word	0x00000118

00001b50 <__do_global_dtors_aux>:
    1b50:	ldr	r3, [pc, #76]	; 1ba4 <__do_global_dtors_aux+0x54>
    1b54:	ldr	r2, [pc, #76]	; 1ba8 <__do_global_dtors_aux+0x58>
    1b58:	add	r3, pc, r3
    1b5c:	add	r2, pc, r2
    1b60:	ldrb	r3, [r3]
    1b64:	cmp	r3, #0
    1b68:	bxne	lr
    1b6c:	ldr	r3, [pc, #56]	; 1bac <__do_global_dtors_aux+0x5c>
    1b70:	push	{r4, lr}
    1b74:	ldr	r3, [r2, r3]
    1b78:	cmp	r3, #0
    1b7c:	beq	1b8c <__do_global_dtors_aux+0x3c>
    1b80:	ldr	r3, [pc, #40]	; 1bb0 <__do_global_dtors_aux+0x60>
    1b84:	ldr	r0, [pc, r3]
    1b88:	bl	17d4 <__cxa_finalize@plt>
    1b8c:	bl	1abc <deregister_tm_clones>
    1b90:	ldr	r3, [pc, #28]	; 1bb4 <__do_global_dtors_aux+0x64>
    1b94:	mov	r2, #1
    1b98:	add	r3, pc, r3
    1b9c:	strb	r2, [r3]
    1ba0:	pop	{r4, pc}
    1ba4:	.word	0x0005b5c0
    1ba8:	.word	0x0005b49c
    1bac:	.word	0x00000104
    1bb0:	.word	0x0005b590
    1bb4:	.word	0x0005b580

00001bb8 <frame_dummy>:
    1bb8:	b	1b00 <register_tm_clones>

00001bbc <Mat_int64Swap>:
    1bbc:	push	{r4, r5, fp, lr}
    1bc0:	add	fp, sp, #8
    1bc4:	ldrd	r2, [r0]
    1bc8:	mov	ip, #65280	; 0xff00
    1bcc:	lsr	r1, r3, #24
    1bd0:	and	lr, ip, r3, lsr #8
    1bd4:	orr	r1, r1, r3, lsl #24
    1bd8:	and	r3, r3, #65280	; 0xff00
    1bdc:	orr	r1, r1, r3, lsl #8
    1be0:	lsl	r3, r2, #8
    1be4:	uxtb16	r3, r3
    1be8:	orr	r4, r1, lr
    1bec:	and	r1, ip, r2, lsr #8
    1bf0:	orr	r3, r3, r2, lsl #24
    1bf4:	orr	r1, r3, r1
    1bf8:	orr	r5, r1, r2, lsr #24
    1bfc:	strd	r4, [r0]
    1c00:	mov	r0, r4
    1c04:	mov	r1, r5
    1c08:	pop	{r4, r5, fp, pc}

00001c0c <Mat_uint64Swap>:
    1c0c:	push	{r4, r5, fp, lr}
    1c10:	add	fp, sp, #8
    1c14:	ldrd	r2, [r0]
    1c18:	rev	r5, r2
    1c1c:	rev	r4, r3
    1c20:	strd	r4, [r0]
    1c24:	mov	r0, r4
    1c28:	mov	r1, r5
    1c2c:	pop	{r4, r5, fp, pc}

00001c30 <Mat_int32Swap>:
    1c30:	ldr	r1, [r0]
    1c34:	rev	r1, r1
    1c38:	str	r1, [r0]
    1c3c:	mov	r0, r1
    1c40:	bx	lr

00001c44 <Mat_uint32Swap>:
    1c44:	ldr	r1, [r0]
    1c48:	rev	r1, r1
    1c4c:	str	r1, [r0]
    1c50:	mov	r0, r1
    1c54:	bx	lr

00001c58 <Mat_int16Swap>:
    1c58:	ldrh	r1, [r0]
    1c5c:	rev16	r2, r1
    1c60:	strh	r2, [r0]
    1c64:	revsh	r0, r1
    1c68:	bx	lr

00001c6c <Mat_uint16Swap>:
    1c6c:	ldrh	r1, [r0]
    1c70:	rev16	r2, r1
    1c74:	strh	r2, [r0]
    1c78:	rev	r0, r1
    1c7c:	lsr	r0, r0, #16
    1c80:	bx	lr

00001c84 <Mat_floatSwap>:
    1c84:	ldr	r1, [r0]
    1c88:	uxtb	r2, r1
    1c8c:	and	r3, r1, #-16777216	; 0xff000000
    1c90:	eor	r2, r2, r1, lsr #24
    1c94:	eor	r3, r3, r2, lsl #24
    1c98:	eor	ip, r2, r3, lsr #24
    1c9c:	and	r2, r1, #16711680	; 0xff0000
    1ca0:	eor	r1, r1, r1, lsr #8
    1ca4:	and	r1, r1, #65280	; 0xff00
    1ca8:	eor	r2, r2, r1, lsl #8
    1cac:	orr	r3, r2, r3
    1cb0:	eor	r1, r1, r2, lsr #8
    1cb4:	orr	r3, r3, ip
    1cb8:	orr	r1, r3, r1
    1cbc:	vmov	s0, r1
    1cc0:	str	r1, [r0]
    1cc4:	bx	lr

00001cc8 <Mat_doubleSwap>:
    1cc8:	push	{r4, r5, r6, r7, fp, lr}
    1ccc:	add	fp, sp, #16
    1cd0:	ldrd	r2, [r0]
    1cd4:	uxtb	r1, r2
    1cd8:	lsr	r5, r2, #24
    1cdc:	eor	r6, r3, r3, lsr #24
    1ce0:	orr	r5, r5, r3, lsl #8
    1ce4:	eor	ip, r1, r3, lsr #24
    1ce8:	and	r1, r3, #-16777216	; 0xff000000
    1cec:	lsl	r6, r6, #24
    1cf0:	eor	r5, r5, r2
    1cf4:	eor	lr, r1, ip, lsl #24
    1cf8:	eor	r1, r2, r3, lsr #8
    1cfc:	orr	r6, r6, r5, lsr #8
    1d00:	eor	ip, ip, lr, lsr #24
    1d04:	and	r1, r1, #65280	; 0xff00
    1d08:	eor	r6, r6, r3
    1d0c:	and	r7, r6, #65280	; 0xff00
    1d10:	orr	r1, ip, r1
    1d14:	orr	r7, r7, lr
    1d18:	eor	r4, r3, r1, lsl #8
    1d1c:	eor	r1, r1, r4, lsr #8
    1d20:	and	r4, r4, #16711680	; 0xff0000
    1d24:	orr	r7, r7, r4
    1d28:	lsr	r4, r2, #8
    1d2c:	orr	r4, r4, r3, lsl #24
    1d30:	and	r1, r1, #65280	; 0xff00
    1d34:	orr	r1, ip, r1
    1d38:	eor	r2, r4, r2
    1d3c:	eor	r4, r3, r3, lsr #8
    1d40:	lsl	r4, r4, #8
    1d44:	orr	r4, r4, r2, lsr #24
    1d48:	eor	r3, r4, r3
    1d4c:	eor	r2, r2, r3, lsl #24
    1d50:	uxtb	r4, r3
    1d54:	and	r2, r2, #-16777216	; 0xff000000
    1d58:	orr	r7, r4, r7
    1d5c:	orr	r1, r2, r1
    1d60:	eor	r2, r5, r6, lsl #8
    1d64:	and	r2, r2, #16711680	; 0xff0000
    1d68:	orr	r6, r1, r2
    1d6c:	vmov	d0, r6, r7
    1d70:	strd	r6, [r0]
    1d74:	pop	{r4, r5, r6, r7, fp, pc}

00001d78 <strdup_vprintf>:
    1d78:	push	{r4, r5, r6, sl, fp, lr}
    1d7c:	add	fp, sp, #16
    1d80:	sub	sp, sp, #8
    1d84:	mov	r4, r0
    1d88:	mov	r3, r1
    1d8c:	str	r1, [sp, #4]
    1d90:	str	r1, [sp]
    1d94:	mov	r0, #0
    1d98:	mov	r1, #0
    1d9c:	mov	r2, r4
    1da0:	bl	1a20 <vsnprintf@plt>
    1da4:	mov	r6, r0
    1da8:	add	r0, r0, #2
    1dac:	bl	18e8 <malloc@plt>
    1db0:	mov	r5, r0
    1db4:	cmp	r0, #0
    1db8:	beq	1dd0 <strdup_vprintf+0x58>
    1dbc:	ldr	r3, [sp, #4]
    1dc0:	add	r1, r6, #1
    1dc4:	mov	r0, r5
    1dc8:	mov	r2, r4
    1dcc:	bl	1a20 <vsnprintf@plt>
    1dd0:	mov	r0, r5
    1dd4:	sub	sp, fp, #16
    1dd8:	pop	{r4, r5, r6, sl, fp, pc}

00001ddc <strdup_printf>:
    1ddc:	sub	sp, sp, #12
    1de0:	push	{fp, lr}
    1de4:	mov	fp, sp
    1de8:	sub	sp, sp, #4
    1dec:	add	ip, fp, #8
    1df0:	stm	ip, {r1, r2, r3}
    1df4:	add	r1, fp, #8
    1df8:	str	r1, [sp]
    1dfc:	bl	1d78 <strdup_vprintf>
    1e00:	mov	sp, fp
    1e04:	pop	{fp, lr}
    1e08:	add	sp, sp, #12
    1e0c:	bx	lr

00001e10 <Mat_SetVerbose>:
    1e10:	ldr	r2, [pc, #24]	; 1e30 <Mat_SetVerbose+0x20>
    1e14:	add	r2, pc, r2
    1e18:	str	r1, [r2]
    1e1c:	ldr	r1, [pc, #16]	; 1e34 <Mat_SetVerbose+0x24>
    1e20:	add	r1, pc, r1
    1e24:	str	r0, [r1]
    1e28:	mov	r0, #0
    1e2c:	bx	lr
    1e30:	.word	0x0005b30c
    1e34:	.word	0x0005b2fc

00001e38 <Mat_SetDebug>:
    1e38:	ldr	r1, [pc, #12]	; 1e4c <Mat_SetDebug+0x14>
    1e3c:	add	r1, pc, r1
    1e40:	str	r0, [r1]
    1e44:	mov	r0, #0
    1e48:	bx	lr
    1e4c:	.word	0x0005b2e8

00001e50 <Mat_Message>:
    1e50:	sub	sp, sp, #12
    1e54:	push	{fp, lr}
    1e58:	mov	fp, sp
    1e5c:	sub	sp, sp, #4
    1e60:	mov	ip, r0
    1e64:	add	r0, fp, #8
    1e68:	stm	r0, {r1, r2, r3}
    1e6c:	ldr	r0, [pc, #64]	; 1eb4 <Mat_Message+0x64>
    1e70:	ldr	r0, [pc, r0]
    1e74:	cmp	r0, #0
    1e78:	bne	1ea0 <Mat_Message+0x50>
    1e7c:	ldr	r0, [pc, #52]	; 1eb8 <Mat_Message+0x68>
    1e80:	ldr	r0, [pc, r0]
    1e84:	cmp	r0, #0
    1e88:	beq	1ea0 <Mat_Message+0x50>
    1e8c:	add	r2, fp, #8
    1e90:	mov	r0, #8
    1e94:	mov	r1, ip
    1e98:	str	r2, [sp]
    1e9c:	bl	1ebc <mat_log>
    1ea0:	mov	r0, #0
    1ea4:	mov	sp, fp
    1ea8:	pop	{fp, lr}
    1eac:	add	sp, sp, #12
    1eb0:	bx	lr
    1eb4:	.word	0x0005b2b0
    1eb8:	.word	0x0005b2a8

00001ebc <mat_log>:
    1ebc:	push	{r4, r5, fp, lr}
    1ec0:	add	fp, sp, #8
    1ec4:	mov	r4, r0
    1ec8:	ldr	r0, [pc, #56]	; 1f08 <mat_log+0x4c>
    1ecc:	ldr	r0, [pc, r0]
    1ed0:	cmp	r0, #0
    1ed4:	popeq	{r4, r5, fp, pc}
    1ed8:	mov	r0, r1
    1edc:	mov	r1, r2
    1ee0:	bl	1d78 <strdup_vprintf>
    1ee4:	ldr	r2, [pc, #32]	; 1f0c <mat_log+0x50>
    1ee8:	mov	r5, r0
    1eec:	mov	r0, r4
    1ef0:	mov	r1, r5
    1ef4:	ldr	r2, [pc, r2]
    1ef8:	blx	r2
    1efc:	mov	r0, r5
    1f00:	pop	{r4, r5, fp, lr}
    1f04:	b	181c <free@plt>
    1f08:	.word	0x0005b25c
    1f0c:	.word	0x0005b234

00001f10 <Mat_DebugMessage>:
    1f10:	sub	sp, sp, #8
    1f14:	push	{fp, lr}
    1f18:	mov	fp, sp
    1f1c:	sub	sp, sp, #8
    1f20:	str	r2, [fp, #8]
    1f24:	str	r3, [fp, #12]
    1f28:	ldr	r2, [pc, #56]	; 1f68 <Mat_DebugMessage+0x58>
    1f2c:	ldr	r2, [pc, r2]
    1f30:	cmp	r2, #0
    1f34:	bne	1f54 <Mat_DebugMessage+0x44>
    1f38:	ldr	r2, [pc, #44]	; 1f6c <Mat_DebugMessage+0x5c>
    1f3c:	ldr	r2, [pc, r2]
    1f40:	cmp	r2, r0
    1f44:	addge	r2, fp, #8
    1f48:	movge	r0, #16
    1f4c:	strge	r2, [sp, #4]
    1f50:	blge	1ebc <mat_log>
    1f54:	mov	r0, #0
    1f58:	mov	sp, fp
    1f5c:	pop	{fp, lr}
    1f60:	add	sp, sp, #8
    1f64:	bx	lr
    1f68:	.word	0x0005b1f4
    1f6c:	.word	0x0005b1e8

00001f70 <Mat_VerbMessage>:
    1f70:	sub	sp, sp, #8
    1f74:	push	{fp, lr}
    1f78:	mov	fp, sp
    1f7c:	sub	sp, sp, #8
    1f80:	str	r2, [fp, #8]
    1f84:	str	r3, [fp, #12]
    1f88:	ldr	r2, [pc, #56]	; 1fc8 <Mat_VerbMessage+0x58>
    1f8c:	ldr	r2, [pc, r2]
    1f90:	cmp	r2, #0
    1f94:	bne	1fb4 <Mat_VerbMessage+0x44>
    1f98:	ldr	r2, [pc, #44]	; 1fcc <Mat_VerbMessage+0x5c>
    1f9c:	ldr	r2, [pc, r2]
    1fa0:	cmp	r2, r0
    1fa4:	addge	r2, fp, #8
    1fa8:	movge	r0, #8
    1fac:	strge	r2, [sp, #4]
    1fb0:	blge	1ebc <mat_log>
    1fb4:	mov	r0, #0
    1fb8:	mov	sp, fp
    1fbc:	pop	{fp, lr}
    1fc0:	add	sp, sp, #8
    1fc4:	bx	lr
    1fc8:	.word	0x0005b194
    1fcc:	.word	0x0005b180

00001fd0 <Mat_Critical>:
    1fd0:	sub	sp, sp, #12
    1fd4:	push	{fp, lr}
    1fd8:	mov	fp, sp
    1fdc:	sub	sp, sp, #4
    1fe0:	mov	ip, r0
    1fe4:	add	r0, fp, #8
    1fe8:	stm	r0, {r1, r2, r3}
    1fec:	add	r2, fp, #8
    1ff0:	mov	r0, #2
    1ff4:	mov	r1, ip
    1ff8:	str	r2, [sp]
    1ffc:	bl	1ebc <mat_log>
    2000:	mov	sp, fp
    2004:	pop	{fp, lr}
    2008:	add	sp, sp, #12
    200c:	bx	lr

00002010 <Mat_Error>:
    2010:	sub	sp, sp, #12
    2014:	push	{fp, lr}
    2018:	mov	fp, sp
    201c:	sub	sp, sp, #4
    2020:	mov	ip, r0
    2024:	add	r0, fp, #8
    2028:	stm	r0, {r1, r2, r3}
    202c:	add	r2, fp, #8
    2030:	mov	r0, #1
    2034:	mov	r1, ip
    2038:	str	r2, [sp]
    203c:	bl	1ebc <mat_log>
    2040:	bl	1a74 <abort@plt>

00002044 <Mat_Help>:
    2044:	push	{fp, lr}
    2048:	mov	fp, sp
    204c:	mov	r1, r0
    2050:	ldr	r0, [r0]
    2054:	cmp	r0, #0
    2058:	beq	2070 <Mat_Help+0x2c>
    205c:	add	r4, r1, #4
    2060:	bl	18dc <puts@plt>
    2064:	ldr	r0, [r4], #4
    2068:	cmp	r0, #0
    206c:	bne	2060 <Mat_Help+0x1c>
    2070:	mov	r0, #0
    2074:	bl	1918 <exit@plt>

00002078 <Mat_LogClose>:
    2078:	ldr	r0, [pc, #16]	; 2090 <Mat_LogClose+0x18>
    207c:	mov	r1, #0
    2080:	add	r0, pc, r0
    2084:	str	r1, [r0]
    2088:	mov	r0, #1
    208c:	bx	lr
    2090:	.word	0x0005b0a8

00002094 <Mat_LogInit>:
    2094:	ldr	r0, [pc, #48]	; 20cc <Mat_LogInit+0x38>
    2098:	mov	r1, #0
    209c:	add	r0, pc, r0
    20a0:	str	r1, [r0]
    20a4:	ldr	r0, [pc, #36]	; 20d0 <Mat_LogInit+0x3c>
    20a8:	ldr	r2, [pc, #36]	; 20d4 <Mat_LogInit+0x40>
    20ac:	add	r0, pc, r0
    20b0:	add	r2, pc, r2
    20b4:	str	r2, [r0]
    20b8:	ldr	r0, [pc, #24]	; 20d8 <Mat_LogInit+0x44>
    20bc:	add	r0, pc, r0
    20c0:	str	r1, [r0]
    20c4:	mov	r0, #0
    20c8:	bx	lr
    20cc:	.word	0x0005b080
    20d0:	.word	0x0005b07c
    20d4:	.word	0x00000024
    20d8:	.word	0x0005b064

000020dc <mat_logfunc>:
    20dc:	push	{r4, sl, fp, lr}
    20e0:	add	fp, sp, #8
    20e4:	ldr	r2, [pc, #344]	; 2244 <mat_logfunc+0x168>
    20e8:	mov	r3, r1
    20ec:	and	r1, r0, #2
    20f0:	ldr	r2, [pc, r2]
    20f4:	cmp	r2, #0
    20f8:	beq	211c <mat_logfunc+0x40>
    20fc:	cmp	r1, #0
    2100:	beq	213c <mat_logfunc+0x60>
    2104:	ldr	r4, [pc, #316]	; 2248 <mat_logfunc+0x16c>
    2108:	ldr	r4, [pc, r4]
    210c:	ldr	r0, [r4]
    2110:	ldr	r1, [pc, #308]	; 224c <mat_logfunc+0x170>
    2114:	add	r1, pc, r1
    2118:	b	21b8 <mat_logfunc+0xdc>
    211c:	cmp	r1, #0
    2120:	beq	216c <mat_logfunc+0x90>
    2124:	ldr	r4, [pc, #324]	; 2270 <mat_logfunc+0x194>
    2128:	ldr	r4, [pc, r4]
    212c:	ldr	r0, [r4]
    2130:	ldr	r1, [pc, #316]	; 2274 <mat_logfunc+0x198>
    2134:	add	r1, pc, r1
    2138:	b	21ec <mat_logfunc+0x110>
    213c:	tst	r0, #1
    2140:	bne	2200 <mat_logfunc+0x124>
    2144:	tst	r0, #4
    2148:	bne	21a4 <mat_logfunc+0xc8>
    214c:	tst	r0, #16
    2150:	beq	2184 <mat_logfunc+0xa8>
    2154:	ldr	r4, [pc, #260]	; 2260 <mat_logfunc+0x184>
    2158:	ldr	r4, [pc, r4]
    215c:	ldr	r0, [r4]
    2160:	ldr	r1, [pc, #252]	; 2264 <mat_logfunc+0x188>
    2164:	add	r1, pc, r1
    2168:	b	21b8 <mat_logfunc+0xdc>
    216c:	tst	r0, #1
    2170:	bne	221c <mat_logfunc+0x140>
    2174:	tst	r0, #4
    2178:	bne	21c0 <mat_logfunc+0xe4>
    217c:	tst	r0, #16
    2180:	bne	21d8 <mat_logfunc+0xfc>
    2184:	tst	r0, #8
    2188:	popeq	{r4, sl, fp, pc}
    218c:	ldr	r4, [pc, #212]	; 2268 <mat_logfunc+0x18c>
    2190:	ldr	r4, [pc, r4]
    2194:	ldr	r0, [r4]
    2198:	ldr	r1, [pc, #204]	; 226c <mat_logfunc+0x190>
    219c:	add	r1, pc, r1
    21a0:	b	21ec <mat_logfunc+0x110>
    21a4:	ldr	r4, [pc, #172]	; 2258 <mat_logfunc+0x17c>
    21a8:	ldr	r4, [pc, r4]
    21ac:	ldr	r0, [r4]
    21b0:	ldr	r1, [pc, #164]	; 225c <mat_logfunc+0x180>
    21b4:	add	r1, pc, r1
    21b8:	bl	1978 <fprintf@plt>
    21bc:	b	21f4 <mat_logfunc+0x118>
    21c0:	ldr	r4, [pc, #184]	; 2280 <mat_logfunc+0x1a4>
    21c4:	ldr	r4, [pc, r4]
    21c8:	ldr	r0, [r4]
    21cc:	ldr	r1, [pc, #176]	; 2284 <mat_logfunc+0x1a8>
    21d0:	add	r1, pc, r1
    21d4:	b	21ec <mat_logfunc+0x110>
    21d8:	ldr	r4, [pc, #168]	; 2288 <mat_logfunc+0x1ac>
    21dc:	ldr	r4, [pc, r4]
    21e0:	ldr	r0, [r4]
    21e4:	ldr	r1, [pc, #160]	; 228c <mat_logfunc+0x1b0>
    21e8:	add	r1, pc, r1
    21ec:	mov	r2, r3
    21f0:	bl	1978 <fprintf@plt>
    21f4:	ldr	r0, [r4]
    21f8:	pop	{r4, sl, fp, lr}
    21fc:	b	1810 <fflush@plt>
    2200:	ldr	r4, [pc, #72]	; 2250 <mat_logfunc+0x174>
    2204:	ldr	r4, [pc, r4]
    2208:	ldr	r0, [r4]
    220c:	ldr	r1, [pc, #64]	; 2254 <mat_logfunc+0x178>
    2210:	add	r1, pc, r1
    2214:	bl	1978 <fprintf@plt>
    2218:	b	2238 <mat_logfunc+0x15c>
    221c:	ldr	r4, [pc, #84]	; 2278 <mat_logfunc+0x19c>
    2220:	mov	r2, r3
    2224:	ldr	r4, [pc, r4]
    2228:	ldr	r0, [r4]
    222c:	ldr	r1, [pc, #72]	; 227c <mat_logfunc+0x1a0>
    2230:	add	r1, pc, r1
    2234:	bl	1978 <fprintf@plt>
    2238:	ldr	r0, [r4]
    223c:	bl	1810 <fflush@plt>
    2240:	bl	1a74 <abort@plt>
    2244:	.word	0x0005b03c
    2248:	.word	0x0005affc
    224c:	.word	0x0004967c
    2250:	.word	0x0005af00
    2254:	.word	0x00049580
    2258:	.word	0x0005af5c
    225c:	.word	0x000495e8
    2260:	.word	0x0005afac
    2264:	.word	0x00049644
    2268:	.word	0x0005af7c
    226c:	.word	0x00049632
    2270:	.word	0x0005afdc
    2274:	.word	0x00049680
    2278:	.word	0x0005aee0
    227c:	.word	0x00049584
    2280:	.word	0x0005af40
    2284:	.word	0x000495ee
    2288:	.word	0x0005af28
    228c:	.word	0x000495e0

00002290 <Mat_LogInitFunc>:
    2290:	ldr	r2, [pc, #52]	; 22cc <Mat_LogInitFunc+0x3c>
    2294:	add	r2, pc, r2
    2298:	str	r0, [r2]
    229c:	ldr	r0, [pc, #44]	; 22d0 <Mat_LogInitFunc+0x40>
    22a0:	add	r0, pc, r0
    22a4:	str	r1, [r0]
    22a8:	mov	r1, #0
    22ac:	ldr	r0, [pc, #32]	; 22d4 <Mat_LogInitFunc+0x44>
    22b0:	add	r0, pc, r0
    22b4:	str	r1, [r0]
    22b8:	ldr	r0, [pc, #24]	; 22d8 <Mat_LogInitFunc+0x48>
    22bc:	add	r0, pc, r0
    22c0:	str	r1, [r0]
    22c4:	mov	r0, #0
    22c8:	bx	lr
    22cc:	.word	0x0005ae98
    22d0:	.word	0x0005ae88
    22d4:	.word	0x0005ae6c
    22d8:	.word	0x0005ae64

000022dc <Mat_Warning>:
    22dc:	sub	sp, sp, #12
    22e0:	push	{fp, lr}
    22e4:	mov	fp, sp
    22e8:	sub	sp, sp, #4
    22ec:	mov	ip, r0
    22f0:	add	r0, fp, #8
    22f4:	stm	r0, {r1, r2, r3}
    22f8:	add	r2, fp, #8
    22fc:	mov	r0, #4
    2300:	mov	r1, ip
    2304:	str	r2, [sp]
    2308:	bl	1ebc <mat_log>
    230c:	mov	sp, fp
    2310:	pop	{fp, lr}
    2314:	add	sp, sp, #12
    2318:	bx	lr

0000231c <Mat_SizeOf>:
    231c:	sub	r0, r0, #1
    2320:	cmp	r0, #17
    2324:	movhi	r0, #0
    2328:	bxhi	lr
    232c:	ldr	r1, [pc, #8]	; 233c <Mat_SizeOf+0x20>
    2330:	add	r1, pc, r1
    2334:	ldr	r0, [r1, r0, lsl #2]
    2338:	bx	lr
    233c:	.word	0x000494a4

00002340 <InflateSkip>:
    2340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2344:	add	fp, sp, #28
    2348:	sub	sp, sp, #4
    234c:	sub	sp, sp, #1024	; 0x400
    2350:	cmp	r2, #1
    2354:	blt	23ec <InflateSkip+0xac>
    2358:	mov	r8, r0
    235c:	ldr	r0, [r1, #4]
    2360:	cmp	r2, #512	; 0x200
    2364:	mov	r6, r2
    2368:	mov	r4, r2
    236c:	mov	r5, r1
    2370:	mov	r9, #0
    2374:	movge	r6, #512	; 0x200
    2378:	cmp	r0, #0
    237c:	bne	23a4 <InflateSkip+0x64>
    2380:	add	r0, sp, #512	; 0x200
    2384:	mov	r1, #1
    2388:	mov	r2, r6
    238c:	str	r0, [r5]
    2390:	ldr	r3, [r8]
    2394:	bl	18d0 <fread@plt>
    2398:	ldr	r1, [r5, #4]
    239c:	add	r9, r1, r0
    23a0:	str	r9, [r5, #4]
    23a4:	mov	sl, sp
    23a8:	mov	r0, r5
    23ac:	mov	r1, #3
    23b0:	str	sl, [r5, #12]
    23b4:	str	r6, [r5, #16]
    23b8:	bl	1804 <inflate@plt>
    23bc:	cmp	r0, #0
    23c0:	beq	23f4 <InflateSkip+0xb4>
    23c4:	cmp	r0, #1
    23c8:	beq	24d4 <InflateSkip+0x194>
    23cc:	cmp	r0, #2
    23d0:	mvneq	r0, #2
    23d4:	bl	18a0 <zError@plt>
    23d8:	mov	r1, r0
    23dc:	ldr	r0, [pc, #252]	; 24e0 <InflateSkip+0x1a0>
    23e0:	add	r0, pc, r0
    23e4:	bl	19cc <Mat_Critical@plt>
    23e8:	b	24d4 <InflateSkip+0x194>
    23ec:	mov	r9, #0
    23f0:	b	24d4 <InflateSkip+0x194>
    23f4:	ldr	r0, [r5, #16]
    23f8:	cmp	r0, #0
    23fc:	beq	240c <InflateSkip+0xcc>
    2400:	mov	r7, r6
    2404:	mov	r6, #0
    2408:	b	2420 <InflateSkip+0xe0>
    240c:	sub	r7, r4, r6
    2410:	str	sl, [r5, #12]
    2414:	cmp	r7, #512	; 0x200
    2418:	movge	r7, #512	; 0x200
    241c:	str	r7, [r5, #16]
    2420:	cmp	r6, r4
    2424:	bge	24a8 <InflateSkip+0x168>
    2428:	ldr	r0, [r5, #4]
    242c:	cmp	r0, #0
    2430:	bne	245c <InflateSkip+0x11c>
    2434:	add	r0, sp, #512	; 0x200
    2438:	mov	r1, #1
    243c:	mov	r2, r7
    2440:	str	r0, [r5]
    2444:	ldr	r3, [r8]
    2448:	bl	18d0 <fread@plt>
    244c:	ldr	r1, [r5, #4]
    2450:	add	r0, r1, r0
    2454:	add	r9, r0, r9
    2458:	str	r0, [r5, #4]
    245c:	mov	r0, r5
    2460:	mov	r1, #3
    2464:	bl	1804 <inflate@plt>
    2468:	cmp	r0, #0
    246c:	bne	2484 <InflateSkip+0x144>
    2470:	ldr	r0, [r5, #16]
    2474:	cmp	r0, #0
    2478:	bne	2420 <InflateSkip+0xe0>
    247c:	add	r6, r6, r7
    2480:	b	240c <InflateSkip+0xcc>
    2484:	cmp	r0, #1
    2488:	beq	24a8 <InflateSkip+0x168>
    248c:	cmp	r0, #2
    2490:	mvneq	r0, #2
    2494:	bl	18a0 <zError@plt>
    2498:	mov	r1, r0
    249c:	ldr	r0, [pc, #64]	; 24e4 <InflateSkip+0x1a4>
    24a0:	add	r0, pc, r0
    24a4:	bl	19cc <Mat_Critical@plt>
    24a8:	ldr	r1, [r5, #4]
    24ac:	cmp	r1, #0
    24b0:	beq	24d4 <InflateSkip+0x194>
    24b4:	ldr	r0, [r8]
    24b8:	rsb	r1, r1, #0
    24bc:	mov	r2, #1
    24c0:	bl	1a68 <fseek@plt>
    24c4:	ldr	r0, [r5, #4]
    24c8:	mov	r1, #0
    24cc:	str	r1, [r5, #4]
    24d0:	sub	r9, r9, r0
    24d4:	mov	r0, r9
    24d8:	sub	sp, fp, #28
    24dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    24e0:	.word	0x0004943c
    24e4:	.word	0x0004937c

000024e8 <InflateSkip2>:
    24e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    24ec:	add	fp, sp, #28
    24f0:	sub	sp, sp, #68	; 0x44
    24f4:	mov	r8, r0
    24f8:	ldr	r0, [r1, #52]	; 0x34
    24fc:	mov	r5, r1
    2500:	mov	r7, r2
    2504:	mov	r9, #0
    2508:	ldr	r0, [r0, #12]
    250c:	ldr	r1, [r0, #4]
    2510:	cmp	r1, #0
    2514:	bne	2544 <InflateSkip2+0x5c>
    2518:	add	r1, sp, #36	; 0x24
    251c:	mov	r2, #1
    2520:	stm	r0, {r1, r2}
    2524:	mov	r0, r1
    2528:	mov	r1, #1
    252c:	mov	r2, #1
    2530:	ldr	r3, [r8]
    2534:	bl	18d0 <fread@plt>
    2538:	mov	r9, r0
    253c:	ldr	r0, [r5, #52]	; 0x34
    2540:	ldr	r0, [r0, #12]
    2544:	add	r4, sp, #4
    2548:	mov	r1, #1
    254c:	str	r4, [r0, #12]
    2550:	str	r1, [r0, #16]
    2554:	mov	r1, #0
    2558:	bl	1804 <inflate@plt>
    255c:	cmp	r0, #0
    2560:	beq	2594 <InflateSkip2+0xac>
    2564:	ldr	r5, [r5, #36]	; 0x24
    2568:	cmp	r0, #2
    256c:	mvneq	r0, #2
    2570:	bl	18a0 <zError@plt>
    2574:	mov	r2, r0
    2578:	ldr	r0, [pc, #268]	; 268c <InflateSkip2+0x1a4>
    257c:	mov	r1, r5
    2580:	add	r0, pc, r0
    2584:	bl	19cc <Mat_Critical@plt>
    2588:	mov	r0, r9
    258c:	sub	sp, fp, #28
    2590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2594:	ldr	r0, [r5, #52]	; 0x34
    2598:	ldr	r1, [r0, #12]
    259c:	ldr	r2, [r1, #16]
    25a0:	mov	r3, r1
    25a4:	cmp	r2, #0
    25a8:	moveq	r2, #1
    25ac:	streq	r4, [r1, #12]
    25b0:	streq	r2, [r1, #16]
    25b4:	ldr	r4, [r3, #4]!
    25b8:	cmp	r4, #0
    25bc:	mov	r2, r4
    25c0:	movwne	r2, #1
    25c4:	cmp	r7, #1
    25c8:	blt	2658 <InflateSkip2+0x170>
    25cc:	mov	r6, #0
    25d0:	add	sl, sp, #36	; 0x24
    25d4:	tst	r2, #1
    25d8:	bne	2608 <InflateSkip2+0x120>
    25dc:	mov	r0, #1
    25e0:	mov	r2, #1
    25e4:	str	r0, [r3]
    25e8:	str	sl, [r1]
    25ec:	mov	r0, sl
    25f0:	mov	r1, #1
    25f4:	ldr	r3, [r8]
    25f8:	bl	18d0 <fread@plt>
    25fc:	add	r9, r0, r9
    2600:	ldr	r0, [r5, #52]	; 0x34
    2604:	add	r6, r6, #1
    2608:	ldr	r0, [r0, #12]
    260c:	mov	r1, #0
    2610:	bl	1804 <inflate@plt>
    2614:	cmp	r0, #0
    2618:	bne	2564 <InflateSkip2+0x7c>
    261c:	ldr	r0, [r5, #52]	; 0x34
    2620:	ldr	r1, [r0, #12]
    2624:	ldr	r2, [r1, #16]
    2628:	mov	r3, r1
    262c:	cmp	r2, #0
    2630:	addeq	r2, sp, #4
    2634:	streq	r2, [r1, #12]
    2638:	moveq	r2, #1
    263c:	streq	r2, [r1, #16]
    2640:	ldr	r4, [r3, #4]!
    2644:	cmp	r4, #0
    2648:	mov	r2, r4
    264c:	movwne	r2, #1
    2650:	cmp	r6, r7
    2654:	blt	25d4 <InflateSkip2+0xec>
    2658:	cmp	r2, #0
    265c:	beq	2588 <InflateSkip2+0xa0>
    2660:	ldr	r0, [r8]
    2664:	rsb	r1, r4, #0
    2668:	mov	r2, #1
    266c:	bl	1a68 <fseek@plt>
    2670:	ldr	r0, [r5, #52]	; 0x34
    2674:	mov	r2, #0
    2678:	ldr	r0, [r0, #12]
    267c:	ldr	r1, [r0, #4]
    2680:	str	r2, [r0, #4]
    2684:	sub	r9, r9, r1
    2688:	b	2588 <InflateSkip2+0xa0>
    268c:	.word	0x000492bd

00002690 <InflateSkipData>:
    2690:	push	{r4, r5, fp, lr}
    2694:	add	fp, sp, #8
    2698:	mov	r4, r3
    269c:	mov	r3, r0
    26a0:	mov	r0, #0
    26a4:	cmp	r3, #0
    26a8:	cmpne	r1, #0
    26ac:	bne	26b4 <InflateSkipData+0x24>
    26b0:	pop	{r4, r5, fp, pc}
    26b4:	cmp	r4, #1
    26b8:	blt	26b0 <InflateSkipData+0x20>
    26bc:	sub	r2, r2, #1
    26c0:	cmp	r2, #12
    26c4:	bhi	26b0 <InflateSkipData+0x20>
    26c8:	uxth	ip, r2
    26cc:	movw	lr, #6527	; 0x197f
    26d0:	mov	r5, #1
    26d4:	tst	r5, lr, lsr ip
    26d8:	popeq	{r4, r5, fp, pc}
    26dc:	ldr	r0, [pc, #24]	; 26fc <InflateSkipData+0x6c>
    26e0:	add	r0, pc, r0
    26e4:	ldr	r0, [r0, r2, lsl #2]
    26e8:	mul	r2, r0, r4
    26ec:	mov	r0, r3
    26f0:	bl	2340 <InflateSkip>
    26f4:	mov	r0, r4
    26f8:	pop	{r4, r5, fp, pc}
    26fc:	.word	0x0004938c

00002700 <InflateVarTag>:
    2700:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2704:	add	fp, sp, #24
    2708:	sub	sp, sp, #32
    270c:	cmp	r2, #0
    2710:	beq	27a0 <InflateVarTag+0xa0>
    2714:	mov	r8, r0
    2718:	ldr	r0, [r1, #52]	; 0x34
    271c:	mov	r5, r1
    2720:	mov	r7, r2
    2724:	mov	r4, #0
    2728:	ldr	r0, [r0, #12]
    272c:	ldr	r1, [r0, #4]
    2730:	cmp	r1, #0
    2734:	bne	2764 <InflateVarTag+0x64>
    2738:	mov	r1, sp
    273c:	mov	r2, #1
    2740:	stm	r0, {r1, r2}
    2744:	mov	r0, r1
    2748:	mov	r1, #1
    274c:	mov	r2, #1
    2750:	ldr	r3, [r8]
    2754:	bl	18d0 <fread@plt>
    2758:	mov	r4, r0
    275c:	ldr	r0, [r5, #52]	; 0x34
    2760:	ldr	r0, [r0, #12]
    2764:	mov	r1, #8
    2768:	str	r7, [r0, #12]
    276c:	str	r1, [r0, #16]
    2770:	mov	r1, #0
    2774:	bl	1804 <inflate@plt>
    2778:	cmp	r0, #0
    277c:	beq	27a8 <InflateVarTag+0xa8>
    2780:	cmp	r0, #2
    2784:	mvneq	r0, #2
    2788:	bl	18a0 <zError@plt>
    278c:	mov	r1, r0
    2790:	ldr	r0, [pc, #184]	; 2850 <InflateVarTag+0x150>
    2794:	add	r0, pc, r0
    2798:	bl	19cc <Mat_Critical@plt>
    279c:	b	2844 <InflateVarTag+0x144>
    27a0:	mov	r4, #0
    27a4:	b	2844 <InflateVarTag+0x144>
    27a8:	mov	r9, #1
    27ac:	mov	r7, sp
    27b0:	mov	r6, #1
    27b4:	ldr	r0, [r5, #52]	; 0x34
    27b8:	ldr	r0, [r0, #12]
    27bc:	ldr	r2, [r0, #16]
    27c0:	ldr	r1, [r0, #4]
    27c4:	cmp	r2, #0
    27c8:	beq	2814 <InflateVarTag+0x114>
    27cc:	cmp	r6, #1
    27d0:	cmpeq	r1, #0
    27d4:	bne	2814 <InflateVarTag+0x114>
    27d8:	stm	r0, {r7, r9}
    27dc:	mov	r0, r7
    27e0:	mov	r1, #1
    27e4:	mov	r2, #1
    27e8:	ldr	r3, [r8]
    27ec:	bl	18d0 <fread@plt>
    27f0:	mov	r6, r0
    27f4:	add	r4, r0, r4
    27f8:	ldr	r0, [r5, #52]	; 0x34
    27fc:	mov	r1, #0
    2800:	ldr	r0, [r0, #12]
    2804:	bl	1804 <inflate@plt>
    2808:	cmp	r0, #0
    280c:	beq	27b4 <InflateVarTag+0xb4>
    2810:	b	2780 <InflateVarTag+0x80>
    2814:	cmp	r1, #0
    2818:	beq	2844 <InflateVarTag+0x144>
    281c:	ldr	r0, [r8]
    2820:	rsb	r1, r1, #0
    2824:	mov	r2, #1
    2828:	bl	1a68 <fseek@plt>
    282c:	ldr	r0, [r5, #52]	; 0x34
    2830:	mov	r2, #0
    2834:	ldr	r0, [r0, #12]
    2838:	ldr	r1, [r0, #4]
    283c:	str	r2, [r0, #4]
    2840:	sub	r4, r4, r1
    2844:	mov	r0, r4
    2848:	sub	sp, fp, #24
    284c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2850:	.word	0x000490d0

00002854 <InflateArrayFlags>:
    2854:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2858:	add	fp, sp, #24
    285c:	sub	sp, sp, #32
    2860:	cmp	r2, #0
    2864:	beq	28f4 <InflateArrayFlags+0xa0>
    2868:	mov	r8, r0
    286c:	ldr	r0, [r1, #52]	; 0x34
    2870:	mov	r5, r1
    2874:	mov	r7, r2
    2878:	mov	r4, #0
    287c:	ldr	r0, [r0, #12]
    2880:	ldr	r1, [r0, #4]
    2884:	cmp	r1, #0
    2888:	bne	28b8 <InflateArrayFlags+0x64>
    288c:	mov	r1, sp
    2890:	mov	r2, #1
    2894:	stm	r0, {r1, r2}
    2898:	mov	r0, r1
    289c:	mov	r1, #1
    28a0:	mov	r2, #1
    28a4:	ldr	r3, [r8]
    28a8:	bl	18d0 <fread@plt>
    28ac:	mov	r4, r0
    28b0:	ldr	r0, [r5, #52]	; 0x34
    28b4:	ldr	r0, [r0, #12]
    28b8:	mov	r1, #16
    28bc:	str	r7, [r0, #12]
    28c0:	str	r1, [r0, #16]
    28c4:	mov	r1, #0
    28c8:	bl	1804 <inflate@plt>
    28cc:	cmp	r0, #0
    28d0:	beq	28fc <InflateArrayFlags+0xa8>
    28d4:	cmp	r0, #2
    28d8:	mvneq	r0, #2
    28dc:	bl	18a0 <zError@plt>
    28e0:	mov	r1, r0
    28e4:	ldr	r0, [pc, #184]	; 29a4 <InflateArrayFlags+0x150>
    28e8:	add	r0, pc, r0
    28ec:	bl	19cc <Mat_Critical@plt>
    28f0:	b	2998 <InflateArrayFlags+0x144>
    28f4:	mov	r4, #0
    28f8:	b	2998 <InflateArrayFlags+0x144>
    28fc:	mov	r9, #1
    2900:	mov	r7, sp
    2904:	mov	r6, #1
    2908:	ldr	r0, [r5, #52]	; 0x34
    290c:	ldr	r0, [r0, #12]
    2910:	ldr	r2, [r0, #16]
    2914:	ldr	r1, [r0, #4]
    2918:	cmp	r2, #0
    291c:	beq	2968 <InflateArrayFlags+0x114>
    2920:	cmp	r6, #1
    2924:	cmpeq	r1, #0
    2928:	bne	2968 <InflateArrayFlags+0x114>
    292c:	stm	r0, {r7, r9}
    2930:	mov	r0, r7
    2934:	mov	r1, #1
    2938:	mov	r2, #1
    293c:	ldr	r3, [r8]
    2940:	bl	18d0 <fread@plt>
    2944:	mov	r6, r0
    2948:	add	r4, r0, r4
    294c:	ldr	r0, [r5, #52]	; 0x34
    2950:	mov	r1, #0
    2954:	ldr	r0, [r0, #12]
    2958:	bl	1804 <inflate@plt>
    295c:	cmp	r0, #0
    2960:	beq	2908 <InflateArrayFlags+0xb4>
    2964:	b	28d4 <InflateArrayFlags+0x80>
    2968:	cmp	r1, #0
    296c:	beq	2998 <InflateArrayFlags+0x144>
    2970:	ldr	r0, [r8]
    2974:	rsb	r1, r1, #0
    2978:	mov	r2, #1
    297c:	bl	1a68 <fseek@plt>
    2980:	ldr	r0, [r5, #52]	; 0x34
    2984:	mov	r2, #0
    2988:	ldr	r0, [r0, #12]
    298c:	ldr	r1, [r0, #4]
    2990:	str	r2, [r0, #4]
    2994:	sub	r4, r4, r1
    2998:	mov	r0, r4
    299c:	sub	sp, fp, #24
    29a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    29a4:	.word	0x00048f9f

000029a8 <InflateRankDims>:
    29a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29ac:	add	fp, sp, #28
    29b0:	sub	sp, sp, #44	; 0x2c
    29b4:	cmp	r2, #0
    29b8:	beq	2a4c <InflateRankDims+0xa4>
    29bc:	mov	sl, r0
    29c0:	ldr	r0, [r1, #52]	; 0x34
    29c4:	mov	r5, r1
    29c8:	mov	r6, r3
    29cc:	mov	r9, r2
    29d0:	mov	r4, #0
    29d4:	ldr	r0, [r0, #12]
    29d8:	ldr	r1, [r0, #4]
    29dc:	cmp	r1, #0
    29e0:	bne	2a10 <InflateRankDims+0x68>
    29e4:	add	r1, sp, #12
    29e8:	mov	r2, #1
    29ec:	stm	r0, {r1, r2}
    29f0:	mov	r0, r1
    29f4:	mov	r1, #1
    29f8:	mov	r2, #1
    29fc:	ldr	r3, [sl]
    2a00:	bl	18d0 <fread@plt>
    2a04:	mov	r4, r0
    2a08:	ldr	r0, [r5, #52]	; 0x34
    2a0c:	ldr	r0, [r0, #12]
    2a10:	mov	r1, #8
    2a14:	str	r9, [r0, #12]
    2a18:	str	r1, [r0, #16]
    2a1c:	mov	r1, #0
    2a20:	bl	1804 <inflate@plt>
    2a24:	cmp	r0, #0
    2a28:	beq	2a54 <InflateRankDims+0xac>
    2a2c:	cmp	r0, #2
    2a30:	mvneq	r0, #2
    2a34:	bl	18a0 <zError@plt>
    2a38:	mov	r1, r0
    2a3c:	ldr	r0, [pc, #580]	; 2c88 <InflateRankDims+0x2e0>
    2a40:	add	r0, pc, r0
    2a44:	bl	19cc <Mat_Critical@plt>
    2a48:	b	2bac <InflateRankDims+0x204>
    2a4c:	mov	r4, #0
    2a50:	b	2bac <InflateRankDims+0x204>
    2a54:	str	r6, [sp]
    2a58:	mov	r6, #1
    2a5c:	add	r8, sp, #12
    2a60:	mov	r7, #1
    2a64:	ldr	r0, [r5, #52]	; 0x34
    2a68:	ldr	r0, [r0, #12]
    2a6c:	ldr	r1, [r0, #16]
    2a70:	cmp	r1, #0
    2a74:	beq	2ac8 <InflateRankDims+0x120>
    2a78:	cmp	r7, #1
    2a7c:	ldreq	r1, [r0, #4]
    2a80:	cmpeq	r1, #0
    2a84:	bne	2ac8 <InflateRankDims+0x120>
    2a88:	str	r8, [r0]
    2a8c:	str	r6, [r0, #4]
    2a90:	mov	r0, r8
    2a94:	mov	r1, #1
    2a98:	mov	r2, #1
    2a9c:	ldr	r3, [sl]
    2aa0:	bl	18d0 <fread@plt>
    2aa4:	mov	r7, r0
    2aa8:	add	r4, r0, r4
    2aac:	ldr	r0, [r5, #52]	; 0x34
    2ab0:	mov	r1, #0
    2ab4:	ldr	r0, [r0, #12]
    2ab8:	bl	1804 <inflate@plt>
    2abc:	cmp	r0, #0
    2ac0:	beq	2a64 <InflateRankDims+0xbc>
    2ac4:	b	2a2c <InflateRankDims+0x84>
    2ac8:	ldm	r9, {r0, r1}
    2acc:	stmib	sp, {r0, r1}
    2ad0:	ldr	r1, [sl, #20]
    2ad4:	cmp	r1, #0
    2ad8:	beq	2af8 <InflateRankDims+0x150>
    2adc:	add	r0, sp, #4
    2ae0:	add	r7, r0, #4
    2ae4:	add	r0, sp, #4
    2ae8:	bl	1c30 <Mat_int32Swap>
    2aec:	mov	r0, r7
    2af0:	bl	1c30 <Mat_int32Swap>
    2af4:	ldrh	r0, [sp, #4]
    2af8:	uxth	r0, r0
    2afc:	cmp	r0, #5
    2b00:	bne	2ba0 <InflateRankDims+0x1f8>
    2b04:	ldr	r6, [sp, #8]
    2b08:	asr	r0, r6, #31
    2b0c:	add	r0, r6, r0, lsr #29
    2b10:	bic	r0, r0, #7
    2b14:	subs	r1, r6, r0
    2b18:	addne	r6, r0, #8
    2b1c:	ldr	r0, [r5, #52]	; 0x34
    2b20:	ldr	r0, [r0, #12]
    2b24:	ldr	r1, [r0, #4]
    2b28:	cmp	r1, #0
    2b2c:	bne	2b5c <InflateRankDims+0x1b4>
    2b30:	mov	r1, #1
    2b34:	str	r8, [r0]
    2b38:	mov	r2, #1
    2b3c:	str	r1, [r0, #4]
    2b40:	mov	r0, r8
    2b44:	mov	r1, #1
    2b48:	ldr	r3, [sl]
    2b4c:	bl	18d0 <fread@plt>
    2b50:	add	r4, r0, r4
    2b54:	ldr	r0, [r5, #52]	; 0x34
    2b58:	ldr	r0, [r0, #12]
    2b5c:	ldr	r2, [sp]
    2b60:	add	r1, r6, #2
    2b64:	str	r6, [r0, #16]
    2b68:	lsl	r1, r1, #2
    2b6c:	cmp	r1, r2
    2b70:	bls	2bb8 <InflateRankDims+0x210>
    2b74:	mov	r0, r6
    2b78:	mov	r1, #4
    2b7c:	bl	17b0 <calloc@plt>
    2b80:	mov	r1, r0
    2b84:	ldr	r0, [fp, #8]
    2b88:	cmp	r1, #0
    2b8c:	str	r1, [r0]
    2b90:	beq	2c70 <InflateRankDims+0x2c8>
    2b94:	ldr	r0, [r5, #52]	; 0x34
    2b98:	ldr	r0, [r0, #12]
    2b9c:	b	2bbc <InflateRankDims+0x214>
    2ba0:	ldr	r0, [pc, #220]	; 2c84 <InflateRankDims+0x2dc>
    2ba4:	add	r0, pc, r0
    2ba8:	bl	19cc <Mat_Critical@plt>
    2bac:	mov	r0, r4
    2bb0:	sub	sp, fp, #28
    2bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bb8:	add	r1, r9, #8
    2bbc:	str	r1, [r0, #12]
    2bc0:	mov	r1, #0
    2bc4:	bl	1804 <inflate@plt>
    2bc8:	cmp	r0, #0
    2bcc:	bne	2a2c <InflateRankDims+0x84>
    2bd0:	mov	r6, #1
    2bd4:	mov	r7, #1
    2bd8:	ldr	r0, [r5, #52]	; 0x34
    2bdc:	ldr	r0, [r0, #12]
    2be0:	ldr	r2, [r0, #16]
    2be4:	ldr	r1, [r0, #4]
    2be8:	cmp	r2, #0
    2bec:	beq	2c3c <InflateRankDims+0x294>
    2bf0:	cmp	r7, #1
    2bf4:	cmpeq	r1, #0
    2bf8:	bne	2c3c <InflateRankDims+0x294>
    2bfc:	str	r8, [r0]
    2c00:	str	r6, [r0, #4]
    2c04:	mov	r0, r8
    2c08:	mov	r1, #1
    2c0c:	mov	r2, #1
    2c10:	ldr	r3, [sl]
    2c14:	bl	18d0 <fread@plt>
    2c18:	mov	r7, r0
    2c1c:	add	r4, r0, r4
    2c20:	ldr	r0, [r5, #52]	; 0x34
    2c24:	mov	r1, #0
    2c28:	ldr	r0, [r0, #12]
    2c2c:	bl	1804 <inflate@plt>
    2c30:	cmp	r0, #0
    2c34:	beq	2bd8 <InflateRankDims+0x230>
    2c38:	b	2a2c <InflateRankDims+0x84>
    2c3c:	cmp	r1, #0
    2c40:	beq	2bac <InflateRankDims+0x204>
    2c44:	ldr	r0, [sl]
    2c48:	rsb	r1, r1, #0
    2c4c:	mov	r2, #1
    2c50:	bl	1a68 <fseek@plt>
    2c54:	ldr	r0, [r5, #52]	; 0x34
    2c58:	mov	r2, #0
    2c5c:	ldr	r0, [r0, #12]
    2c60:	ldr	r1, [r0, #4]
    2c64:	str	r2, [r0, #4]
    2c68:	sub	r4, r4, r1
    2c6c:	b	2bac <InflateRankDims+0x204>
    2c70:	mov	r0, #0
    2c74:	str	r0, [r9, #4]
    2c78:	ldr	r0, [pc, #12]	; 2c8c <InflateRankDims+0x2e4>
    2c7c:	add	r0, pc, r0
    2c80:	b	2ba8 <InflateRankDims+0x200>
    2c84:	.word	0x00048d2f
    2c88:	.word	0x00048e6e
    2c8c:	.word	0x00048c95

00002c90 <InflateVarNameTag>:
    2c90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2c94:	add	fp, sp, #24
    2c98:	sub	sp, sp, #32
    2c9c:	cmp	r2, #0
    2ca0:	beq	2d30 <InflateVarNameTag+0xa0>
    2ca4:	mov	r8, r0
    2ca8:	ldr	r0, [r1, #52]	; 0x34
    2cac:	mov	r5, r1
    2cb0:	mov	r7, r2
    2cb4:	mov	r4, #0
    2cb8:	ldr	r0, [r0, #12]
    2cbc:	ldr	r1, [r0, #4]
    2cc0:	cmp	r1, #0
    2cc4:	bne	2cf4 <InflateVarNameTag+0x64>
    2cc8:	mov	r1, sp
    2ccc:	mov	r2, #1
    2cd0:	stm	r0, {r1, r2}
    2cd4:	mov	r0, r1
    2cd8:	mov	r1, #1
    2cdc:	mov	r2, #1
    2ce0:	ldr	r3, [r8]
    2ce4:	bl	18d0 <fread@plt>
    2ce8:	mov	r4, r0
    2cec:	ldr	r0, [r5, #52]	; 0x34
    2cf0:	ldr	r0, [r0, #12]
    2cf4:	mov	r1, #8
    2cf8:	str	r7, [r0, #12]
    2cfc:	str	r1, [r0, #16]
    2d00:	mov	r1, #0
    2d04:	bl	1804 <inflate@plt>
    2d08:	cmp	r0, #0
    2d0c:	beq	2d38 <InflateVarNameTag+0xa8>
    2d10:	cmp	r0, #2
    2d14:	mvneq	r0, #2
    2d18:	bl	18a0 <zError@plt>
    2d1c:	mov	r1, r0
    2d20:	ldr	r0, [pc, #184]	; 2de0 <InflateVarNameTag+0x150>
    2d24:	add	r0, pc, r0
    2d28:	bl	19cc <Mat_Critical@plt>
    2d2c:	b	2dd4 <InflateVarNameTag+0x144>
    2d30:	mov	r4, #0
    2d34:	b	2dd4 <InflateVarNameTag+0x144>
    2d38:	mov	r9, #1
    2d3c:	mov	r7, sp
    2d40:	mov	r6, #1
    2d44:	ldr	r0, [r5, #52]	; 0x34
    2d48:	ldr	r0, [r0, #12]
    2d4c:	ldr	r2, [r0, #16]
    2d50:	ldr	r1, [r0, #4]
    2d54:	cmp	r2, #0
    2d58:	beq	2da4 <InflateVarNameTag+0x114>
    2d5c:	cmp	r6, #1
    2d60:	cmpeq	r1, #0
    2d64:	bne	2da4 <InflateVarNameTag+0x114>
    2d68:	stm	r0, {r7, r9}
    2d6c:	mov	r0, r7
    2d70:	mov	r1, #1
    2d74:	mov	r2, #1
    2d78:	ldr	r3, [r8]
    2d7c:	bl	18d0 <fread@plt>
    2d80:	mov	r6, r0
    2d84:	add	r4, r0, r4
    2d88:	ldr	r0, [r5, #52]	; 0x34
    2d8c:	mov	r1, #0
    2d90:	ldr	r0, [r0, #12]
    2d94:	bl	1804 <inflate@plt>
    2d98:	cmp	r0, #0
    2d9c:	beq	2d44 <InflateVarNameTag+0xb4>
    2da0:	b	2d10 <InflateVarNameTag+0x80>
    2da4:	cmp	r1, #0
    2da8:	beq	2dd4 <InflateVarNameTag+0x144>
    2dac:	ldr	r0, [r8]
    2db0:	rsb	r1, r1, #0
    2db4:	mov	r2, #1
    2db8:	bl	1a68 <fseek@plt>
    2dbc:	ldr	r0, [r5, #52]	; 0x34
    2dc0:	mov	r2, #0
    2dc4:	ldr	r0, [r0, #12]
    2dc8:	ldr	r1, [r0, #4]
    2dcc:	str	r2, [r0, #4]
    2dd0:	sub	r4, r4, r1
    2dd4:	mov	r0, r4
    2dd8:	sub	sp, fp, #24
    2ddc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2de0:	.word	0x00048c0e

00002de4 <InflateVarName>:
    2de4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2de8:	add	fp, sp, #24
    2dec:	sub	sp, sp, #32
    2df0:	cmp	r2, #0
    2df4:	beq	2e84 <InflateVarName+0xa0>
    2df8:	mov	r9, r0
    2dfc:	ldr	r0, [r1, #52]	; 0x34
    2e00:	mov	r5, r1
    2e04:	mov	r8, r3
    2e08:	mov	r7, r2
    2e0c:	mov	r4, #0
    2e10:	ldr	r0, [r0, #12]
    2e14:	ldr	r1, [r0, #4]
    2e18:	cmp	r1, #0
    2e1c:	bne	2e4c <InflateVarName+0x68>
    2e20:	mov	r1, sp
    2e24:	mov	r2, #1
    2e28:	stm	r0, {r1, r2}
    2e2c:	mov	r0, r1
    2e30:	mov	r1, #1
    2e34:	mov	r2, #1
    2e38:	ldr	r3, [r9]
    2e3c:	bl	18d0 <fread@plt>
    2e40:	mov	r4, r0
    2e44:	ldr	r0, [r5, #52]	; 0x34
    2e48:	ldr	r0, [r0, #12]
    2e4c:	mov	r1, #0
    2e50:	str	r7, [r0, #12]
    2e54:	str	r8, [r0, #16]
    2e58:	bl	1804 <inflate@plt>
    2e5c:	cmp	r0, #0
    2e60:	beq	2e8c <InflateVarName+0xa8>
    2e64:	cmp	r0, #2
    2e68:	mvneq	r0, #2
    2e6c:	bl	18a0 <zError@plt>
    2e70:	mov	r1, r0
    2e74:	ldr	r0, [pc, #184]	; 2f34 <InflateVarName+0x150>
    2e78:	add	r0, pc, r0
    2e7c:	bl	19cc <Mat_Critical@plt>
    2e80:	b	2f28 <InflateVarName+0x144>
    2e84:	mov	r4, #0
    2e88:	b	2f28 <InflateVarName+0x144>
    2e8c:	mov	r8, #1
    2e90:	mov	r7, sp
    2e94:	mov	r6, #1
    2e98:	ldr	r0, [r5, #52]	; 0x34
    2e9c:	ldr	r0, [r0, #12]
    2ea0:	ldr	r2, [r0, #16]
    2ea4:	ldr	r1, [r0, #4]
    2ea8:	cmp	r2, #0
    2eac:	beq	2ef8 <InflateVarName+0x114>
    2eb0:	cmp	r6, #1
    2eb4:	cmpeq	r1, #0
    2eb8:	bne	2ef8 <InflateVarName+0x114>
    2ebc:	stm	r0, {r7, r8}
    2ec0:	mov	r0, r7
    2ec4:	mov	r1, #1
    2ec8:	mov	r2, #1
    2ecc:	ldr	r3, [r9]
    2ed0:	bl	18d0 <fread@plt>
    2ed4:	mov	r6, r0
    2ed8:	add	r4, r0, r4
    2edc:	ldr	r0, [r5, #52]	; 0x34
    2ee0:	mov	r1, #0
    2ee4:	ldr	r0, [r0, #12]
    2ee8:	bl	1804 <inflate@plt>
    2eec:	cmp	r0, #0
    2ef0:	beq	2e98 <InflateVarName+0xb4>
    2ef4:	b	2e64 <InflateVarName+0x80>
    2ef8:	cmp	r1, #0
    2efc:	beq	2f28 <InflateVarName+0x144>
    2f00:	ldr	r0, [r9]
    2f04:	rsb	r1, r1, #0
    2f08:	mov	r2, #1
    2f0c:	bl	1a68 <fseek@plt>
    2f10:	ldr	r0, [r5, #52]	; 0x34
    2f14:	mov	r2, #0
    2f18:	ldr	r0, [r0, #12]
    2f1c:	ldr	r1, [r0, #4]
    2f20:	str	r2, [r0, #4]
    2f24:	sub	r4, r4, r1
    2f28:	mov	r0, r4
    2f2c:	sub	sp, fp, #24
    2f30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2f34:	.word	0x00048ae1

00002f38 <InflateDataTag>:
    2f38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2f3c:	add	fp, sp, #24
    2f40:	sub	sp, sp, #32
    2f44:	cmp	r2, #0
    2f48:	beq	3070 <InflateDataTag+0x138>
    2f4c:	mov	r8, r0
    2f50:	ldr	r0, [r1, #52]	; 0x34
    2f54:	mov	r5, r1
    2f58:	mov	r7, r2
    2f5c:	mov	r4, #0
    2f60:	ldr	r0, [r0, #12]
    2f64:	ldr	r1, [r0, #4]
    2f68:	cmp	r1, #0
    2f6c:	bne	2f9c <InflateDataTag+0x64>
    2f70:	mov	r1, sp
    2f74:	mov	r2, #1
    2f78:	stm	r0, {r1, r2}
    2f7c:	mov	r0, r1
    2f80:	mov	r1, #1
    2f84:	mov	r2, #1
    2f88:	ldr	r3, [r8]
    2f8c:	bl	18d0 <fread@plt>
    2f90:	mov	r4, r0
    2f94:	ldr	r0, [r5, #52]	; 0x34
    2f98:	ldr	r0, [r0, #12]
    2f9c:	mov	r1, #8
    2fa0:	str	r7, [r0, #12]
    2fa4:	str	r1, [r0, #16]
    2fa8:	mov	r1, #0
    2fac:	bl	1804 <inflate@plt>
    2fb0:	cmp	r0, #1
    2fb4:	beq	309c <InflateDataTag+0x164>
    2fb8:	cmp	r0, #0
    2fbc:	bne	3078 <InflateDataTag+0x140>
    2fc0:	mov	r9, #1
    2fc4:	mov	r7, sp
    2fc8:	mov	r6, #1
    2fcc:	ldr	r0, [r5, #52]	; 0x34
    2fd0:	ldr	r0, [r0, #12]
    2fd4:	ldr	r1, [r0, #16]
    2fd8:	cmp	r1, #0
    2fdc:	beq	3038 <InflateDataTag+0x100>
    2fe0:	cmp	r6, #1
    2fe4:	ldreq	r1, [r0, #4]
    2fe8:	cmpeq	r1, #0
    2fec:	bne	3038 <InflateDataTag+0x100>
    2ff0:	stm	r0, {r7, r9}
    2ff4:	mov	r0, r7
    2ff8:	mov	r1, #1
    2ffc:	mov	r2, #1
    3000:	ldr	r3, [r8]
    3004:	bl	18d0 <fread@plt>
    3008:	mov	r6, r0
    300c:	add	r4, r0, r4
    3010:	ldr	r0, [r5, #52]	; 0x34
    3014:	mov	r1, #0
    3018:	ldr	r0, [r0, #12]
    301c:	bl	1804 <inflate@plt>
    3020:	cmp	r0, #0
    3024:	beq	2fcc <InflateDataTag+0x94>
    3028:	cmp	r0, #1
    302c:	bne	3078 <InflateDataTag+0x140>
    3030:	ldr	r0, [r5, #52]	; 0x34
    3034:	ldr	r0, [r0, #12]
    3038:	ldr	r1, [r0, #4]
    303c:	cmp	r1, #0
    3040:	beq	309c <InflateDataTag+0x164>
    3044:	ldr	r0, [r8]
    3048:	rsb	r1, r1, #0
    304c:	mov	r2, #1
    3050:	bl	1a68 <fseek@plt>
    3054:	ldr	r0, [r5, #52]	; 0x34
    3058:	mov	r2, #0
    305c:	ldr	r0, [r0, #12]
    3060:	ldr	r1, [r0, #4]
    3064:	str	r2, [r0, #4]
    3068:	sub	r4, r4, r1
    306c:	b	309c <InflateDataTag+0x164>
    3070:	mov	r4, #0
    3074:	b	309c <InflateDataTag+0x164>
    3078:	ldr	r5, [r5, #36]	; 0x24
    307c:	cmp	r0, #2
    3080:	mvneq	r0, #2
    3084:	bl	18a0 <zError@plt>
    3088:	mov	r2, r0
    308c:	ldr	r0, [pc, #20]	; 30a8 <InflateDataTag+0x170>
    3090:	mov	r1, r5
    3094:	add	r0, pc, r0
    3098:	bl	19cc <Mat_Critical@plt>
    309c:	mov	r0, r4
    30a0:	sub	sp, fp, #24
    30a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    30a8:	.word	0x000488e9

000030ac <InflateDataType>:
    30ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    30b0:	add	fp, sp, #24
    30b4:	sub	sp, sp, #32
    30b8:	cmp	r2, #0
    30bc:	beq	313c <InflateDataType+0x90>
    30c0:	mov	r8, r0
    30c4:	ldr	r0, [r1, #4]
    30c8:	mov	r7, r2
    30cc:	mov	r5, r1
    30d0:	mov	r4, #0
    30d4:	cmp	r0, #0
    30d8:	bne	30fc <InflateDataType+0x50>
    30dc:	mov	r0, sp
    30e0:	mov	r1, #1
    30e4:	mov	r2, #1
    30e8:	stm	r5, {r0, r1}
    30ec:	mov	r1, #1
    30f0:	ldr	r3, [r8]
    30f4:	bl	18d0 <fread@plt>
    30f8:	mov	r4, r0
    30fc:	mov	r0, #4
    3100:	str	r7, [r5, #12]
    3104:	mov	r1, #0
    3108:	str	r0, [r5, #16]
    310c:	mov	r0, r5
    3110:	bl	1804 <inflate@plt>
    3114:	cmp	r0, #0
    3118:	beq	3144 <InflateDataType+0x98>
    311c:	cmp	r0, #2
    3120:	mvneq	r0, #2
    3124:	bl	18a0 <zError@plt>
    3128:	mov	r1, r0
    312c:	ldr	r0, [pc, #164]	; 31d8 <InflateDataType+0x12c>
    3130:	add	r0, pc, r0
    3134:	bl	19cc <Mat_Critical@plt>
    3138:	b	31cc <InflateDataType+0x120>
    313c:	mov	r4, #0
    3140:	b	31cc <InflateDataType+0x120>
    3144:	mov	r9, #1
    3148:	mov	r7, sp
    314c:	mov	r6, #1
    3150:	ldr	r0, [r5, #16]
    3154:	ldr	r1, [r5, #4]
    3158:	cmp	r0, #0
    315c:	beq	31a4 <InflateDataType+0xf8>
    3160:	cmp	r6, #1
    3164:	cmpeq	r1, #0
    3168:	bne	31a4 <InflateDataType+0xf8>
    316c:	stm	r5, {r7, r9}
    3170:	mov	r0, r7
    3174:	mov	r1, #1
    3178:	mov	r2, #1
    317c:	ldr	r3, [r8]
    3180:	bl	18d0 <fread@plt>
    3184:	mov	r6, r0
    3188:	add	r4, r0, r4
    318c:	mov	r0, r5
    3190:	mov	r1, #0
    3194:	bl	1804 <inflate@plt>
    3198:	cmp	r0, #0
    319c:	beq	3150 <InflateDataType+0xa4>
    31a0:	b	311c <InflateDataType+0x70>
    31a4:	cmp	r1, #0
    31a8:	beq	31cc <InflateDataType+0x120>
    31ac:	ldr	r0, [r8]
    31b0:	rsb	r1, r1, #0
    31b4:	mov	r2, #1
    31b8:	bl	1a68 <fseek@plt>
    31bc:	ldr	r0, [r5, #4]
    31c0:	mov	r1, #0
    31c4:	str	r1, [r5, #4]
    31c8:	sub	r4, r4, r0
    31cc:	mov	r0, r4
    31d0:	sub	sp, fp, #24
    31d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    31d8:	.word	0x00048876

000031dc <InflateData>:
    31dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    31e0:	add	fp, sp, #24
    31e4:	sub	sp, sp, #8
    31e8:	sub	sp, sp, #1024	; 0x400
    31ec:	cmp	r2, #0
    31f0:	mov	r4, #0
    31f4:	movne	r7, r3
    31f8:	cmpne	r3, #0
    31fc:	bne	320c <InflateData+0x30>
    3200:	mov	r0, r4
    3204:	sub	sp, fp, #24
    3208:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    320c:	mov	r8, r0
    3210:	ldr	r0, [r1, #4]
    3214:	mov	r6, r2
    3218:	mov	r5, r1
    321c:	mov	r4, #0
    3220:	cmp	r0, #0
    3224:	bne	3254 <InflateData+0x78>
    3228:	ldr	r3, [r8]
    322c:	add	r9, sp, #4
    3230:	cmp	r7, #1024	; 0x400
    3234:	mov	r2, r7
    3238:	mov	r1, #1
    323c:	movcs	r2, #1024	; 0x400
    3240:	mov	r0, r9
    3244:	bl	18d0 <fread@plt>
    3248:	mov	r4, r0
    324c:	str	r9, [r5]
    3250:	str	r0, [r5, #4]
    3254:	mov	r0, r5
    3258:	mov	r1, #3
    325c:	str	r6, [r5, #12]
    3260:	str	r7, [r5, #16]
    3264:	bl	1804 <inflate@plt>
    3268:	cmp	r0, #1
    326c:	beq	3200 <InflateData+0x24>
    3270:	cmp	r0, #0
    3274:	bne	32f8 <InflateData+0x11c>
    3278:	ldr	r0, [r5, #16]
    327c:	cmp	r0, #0
    3280:	beq	333c <InflateData+0x160>
    3284:	add	r6, sp, #4
    3288:	ldr	r1, [r5, #4]
    328c:	cmp	r1, #0
    3290:	bne	3348 <InflateData+0x16c>
    3294:	add	r0, r4, #1024	; 0x400
    3298:	mov	r2, #1024	; 0x400
    329c:	cmp	r0, r7
    32a0:	bcc	32b4 <InflateData+0xd8>
    32a4:	add	r0, r4, #1
    32a8:	sub	r2, r7, r4
    32ac:	cmp	r0, r7
    32b0:	movwhi	r2, #1
    32b4:	ldr	r3, [r8]
    32b8:	mov	r0, r6
    32bc:	mov	r1, #1
    32c0:	bl	18d0 <fread@plt>
    32c4:	str	r6, [r5]
    32c8:	str	r0, [r5, #4]
    32cc:	add	r4, r0, r4
    32d0:	mov	r0, r5
    32d4:	mov	r1, #3
    32d8:	bl	1804 <inflate@plt>
    32dc:	cmn	r0, #5
    32e0:	cmpne	r0, #0
    32e4:	bne	3318 <InflateData+0x13c>
    32e8:	ldr	r0, [r5, #16]
    32ec:	cmp	r0, #0
    32f0:	bne	3288 <InflateData+0xac>
    32f4:	b	333c <InflateData+0x160>
    32f8:	cmp	r0, #2
    32fc:	mvneq	r0, #2
    3300:	bl	18a0 <zError@plt>
    3304:	mov	r1, r0
    3308:	ldr	r0, [pc, #96]	; 3370 <InflateData+0x194>
    330c:	add	r0, pc, r0
    3310:	bl	19cc <Mat_Critical@plt>
    3314:	b	3200 <InflateData+0x24>
    3318:	cmp	r0, #1
    331c:	beq	333c <InflateData+0x160>
    3320:	cmp	r0, #2
    3324:	mvneq	r0, #2
    3328:	bl	18a0 <zError@plt>
    332c:	mov	r1, r0
    3330:	ldr	r0, [pc, #52]	; 336c <InflateData+0x190>
    3334:	add	r0, pc, r0
    3338:	bl	19cc <Mat_Critical@plt>
    333c:	ldr	r1, [r5, #4]
    3340:	cmp	r1, #0
    3344:	beq	3200 <InflateData+0x24>
    3348:	ldr	r0, [r8]
    334c:	rsb	r1, r1, #0
    3350:	mov	r2, #1
    3354:	bl	1a68 <fseek@plt>
    3358:	ldr	r0, [r5, #4]
    335c:	mov	r1, #0
    3360:	str	r1, [r5, #4]
    3364:	sub	r4, r4, r0
    3368:	b	3200 <InflateData+0x24>
    336c:	.word	0x00048697
    3370:	.word	0x000486bf

00003374 <InflateFieldNameLength>:
    3374:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3378:	add	fp, sp, #24
    337c:	sub	sp, sp, #32
    3380:	cmp	r2, #0
    3384:	beq	3414 <InflateFieldNameLength+0xa0>
    3388:	mov	r8, r0
    338c:	ldr	r0, [r1, #52]	; 0x34
    3390:	mov	r5, r1
    3394:	mov	r7, r2
    3398:	mov	r4, #0
    339c:	ldr	r0, [r0, #12]
    33a0:	ldr	r1, [r0, #4]
    33a4:	cmp	r1, #0
    33a8:	bne	33d8 <InflateFieldNameLength+0x64>
    33ac:	mov	r1, sp
    33b0:	mov	r2, #1
    33b4:	stm	r0, {r1, r2}
    33b8:	mov	r0, r1
    33bc:	mov	r1, #1
    33c0:	mov	r2, #1
    33c4:	ldr	r3, [r8]
    33c8:	bl	18d0 <fread@plt>
    33cc:	mov	r4, r0
    33d0:	ldr	r0, [r5, #52]	; 0x34
    33d4:	ldr	r0, [r0, #12]
    33d8:	mov	r1, #8
    33dc:	str	r7, [r0, #12]
    33e0:	str	r1, [r0, #16]
    33e4:	mov	r1, #0
    33e8:	bl	1804 <inflate@plt>
    33ec:	cmp	r0, #0
    33f0:	beq	341c <InflateFieldNameLength+0xa8>
    33f4:	cmp	r0, #2
    33f8:	mvneq	r0, #2
    33fc:	bl	18a0 <zError@plt>
    3400:	mov	r1, r0
    3404:	ldr	r0, [pc, #184]	; 34c4 <InflateFieldNameLength+0x150>
    3408:	add	r0, pc, r0
    340c:	bl	19cc <Mat_Critical@plt>
    3410:	b	34b8 <InflateFieldNameLength+0x144>
    3414:	mov	r4, #0
    3418:	b	34b8 <InflateFieldNameLength+0x144>
    341c:	mov	r9, #1
    3420:	mov	r7, sp
    3424:	mov	r6, #1
    3428:	ldr	r0, [r5, #52]	; 0x34
    342c:	ldr	r0, [r0, #12]
    3430:	ldr	r2, [r0, #16]
    3434:	ldr	r1, [r0, #4]
    3438:	cmp	r2, #0
    343c:	beq	3488 <InflateFieldNameLength+0x114>
    3440:	cmp	r6, #1
    3444:	cmpeq	r1, #0
    3448:	bne	3488 <InflateFieldNameLength+0x114>
    344c:	stm	r0, {r7, r9}
    3450:	mov	r0, r7
    3454:	mov	r1, #1
    3458:	mov	r2, #1
    345c:	ldr	r3, [r8]
    3460:	bl	18d0 <fread@plt>
    3464:	mov	r6, r0
    3468:	add	r4, r0, r4
    346c:	ldr	r0, [r5, #52]	; 0x34
    3470:	mov	r1, #0
    3474:	ldr	r0, [r0, #12]
    3478:	bl	1804 <inflate@plt>
    347c:	cmp	r0, #0
    3480:	beq	3428 <InflateFieldNameLength+0xb4>
    3484:	b	33f4 <InflateFieldNameLength+0x80>
    3488:	cmp	r1, #0
    348c:	beq	34b8 <InflateFieldNameLength+0x144>
    3490:	ldr	r0, [r8]
    3494:	rsb	r1, r1, #0
    3498:	mov	r2, #1
    349c:	bl	1a68 <fseek@plt>
    34a0:	ldr	r0, [r5, #52]	; 0x34
    34a4:	mov	r2, #0
    34a8:	ldr	r0, [r0, #12]
    34ac:	ldr	r1, [r0, #4]
    34b0:	str	r2, [r0, #4]
    34b4:	sub	r4, r4, r1
    34b8:	mov	r0, r4
    34bc:	sub	sp, fp, #24
    34c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    34c4:	.word	0x000485e4

000034c8 <InflateFieldNamesTag>:
    34c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    34cc:	add	fp, sp, #24
    34d0:	sub	sp, sp, #32
    34d4:	cmp	r2, #0
    34d8:	beq	3568 <InflateFieldNamesTag+0xa0>
    34dc:	mov	r8, r0
    34e0:	ldr	r0, [r1, #52]	; 0x34
    34e4:	mov	r5, r1
    34e8:	mov	r7, r2
    34ec:	mov	r4, #0
    34f0:	ldr	r0, [r0, #12]
    34f4:	ldr	r1, [r0, #4]
    34f8:	cmp	r1, #0
    34fc:	bne	352c <InflateFieldNamesTag+0x64>
    3500:	mov	r1, sp
    3504:	mov	r2, #1
    3508:	stm	r0, {r1, r2}
    350c:	mov	r0, r1
    3510:	mov	r1, #1
    3514:	mov	r2, #1
    3518:	ldr	r3, [r8]
    351c:	bl	18d0 <fread@plt>
    3520:	mov	r4, r0
    3524:	ldr	r0, [r5, #52]	; 0x34
    3528:	ldr	r0, [r0, #12]
    352c:	mov	r1, #8
    3530:	str	r7, [r0, #12]
    3534:	str	r1, [r0, #16]
    3538:	mov	r1, #0
    353c:	bl	1804 <inflate@plt>
    3540:	cmp	r0, #0
    3544:	beq	3570 <InflateFieldNamesTag+0xa8>
    3548:	cmp	r0, #2
    354c:	mvneq	r0, #2
    3550:	bl	18a0 <zError@plt>
    3554:	mov	r1, r0
    3558:	ldr	r0, [pc, #184]	; 3618 <InflateFieldNamesTag+0x150>
    355c:	add	r0, pc, r0
    3560:	bl	19cc <Mat_Critical@plt>
    3564:	b	360c <InflateFieldNamesTag+0x144>
    3568:	mov	r4, #0
    356c:	b	360c <InflateFieldNamesTag+0x144>
    3570:	mov	r9, #1
    3574:	mov	r7, sp
    3578:	mov	r6, #1
    357c:	ldr	r0, [r5, #52]	; 0x34
    3580:	ldr	r0, [r0, #12]
    3584:	ldr	r2, [r0, #16]
    3588:	ldr	r1, [r0, #4]
    358c:	cmp	r2, #0
    3590:	beq	35dc <InflateFieldNamesTag+0x114>
    3594:	cmp	r6, #1
    3598:	cmpeq	r1, #0
    359c:	bne	35dc <InflateFieldNamesTag+0x114>
    35a0:	stm	r0, {r7, r9}
    35a4:	mov	r0, r7
    35a8:	mov	r1, #1
    35ac:	mov	r2, #1
    35b0:	ldr	r3, [r8]
    35b4:	bl	18d0 <fread@plt>
    35b8:	mov	r6, r0
    35bc:	add	r4, r0, r4
    35c0:	ldr	r0, [r5, #52]	; 0x34
    35c4:	mov	r1, #0
    35c8:	ldr	r0, [r0, #12]
    35cc:	bl	1804 <inflate@plt>
    35d0:	cmp	r0, #0
    35d4:	beq	357c <InflateFieldNamesTag+0xb4>
    35d8:	b	3548 <InflateFieldNamesTag+0x80>
    35dc:	cmp	r1, #0
    35e0:	beq	360c <InflateFieldNamesTag+0x144>
    35e4:	ldr	r0, [r8]
    35e8:	rsb	r1, r1, #0
    35ec:	mov	r2, #1
    35f0:	bl	1a68 <fseek@plt>
    35f4:	ldr	r0, [r5, #52]	; 0x34
    35f8:	mov	r2, #0
    35fc:	ldr	r0, [r0, #12]
    3600:	ldr	r1, [r0, #4]
    3604:	str	r2, [r0, #4]
    3608:	sub	r4, r4, r1
    360c:	mov	r0, r4
    3610:	sub	sp, fp, #24
    3614:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3618:	.word	0x000484bc

0000361c <InflateFieldNames>:
    361c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3620:	add	fp, sp, #28
    3624:	sub	sp, sp, #36	; 0x24
    3628:	cmp	r2, #0
    362c:	beq	36c8 <InflateFieldNames+0xac>
    3630:	mov	r9, r0
    3634:	ldr	r0, [r1, #52]	; 0x34
    3638:	mov	r5, r1
    363c:	ldr	sl, [fp, #12]
    3640:	ldr	r6, [fp, #8]
    3644:	mov	r8, r3
    3648:	mov	r7, r2
    364c:	mov	r4, #0
    3650:	ldr	r0, [r0, #12]
    3654:	ldr	r1, [r0, #4]
    3658:	cmp	r1, #0
    365c:	bne	368c <InflateFieldNames+0x70>
    3660:	add	r1, sp, #4
    3664:	mov	r2, #1
    3668:	stm	r0, {r1, r2}
    366c:	mov	r0, r1
    3670:	mov	r1, #1
    3674:	mov	r2, #1
    3678:	ldr	r3, [r9]
    367c:	bl	18d0 <fread@plt>
    3680:	mov	r4, r0
    3684:	ldr	r0, [r5, #52]	; 0x34
    3688:	ldr	r0, [r0, #12]
    368c:	mla	r1, r6, r8, sl
    3690:	str	r7, [r0, #12]
    3694:	str	r1, [r0, #16]
    3698:	mov	r1, #0
    369c:	bl	1804 <inflate@plt>
    36a0:	cmp	r0, #0
    36a4:	beq	36d0 <InflateFieldNames+0xb4>
    36a8:	cmp	r0, #2
    36ac:	mvneq	r0, #2
    36b0:	bl	18a0 <zError@plt>
    36b4:	mov	r1, r0
    36b8:	ldr	r0, [pc, #184]	; 3778 <InflateFieldNames+0x15c>
    36bc:	add	r0, pc, r0
    36c0:	bl	19cc <Mat_Critical@plt>
    36c4:	b	376c <InflateFieldNames+0x150>
    36c8:	mov	r4, #0
    36cc:	b	376c <InflateFieldNames+0x150>
    36d0:	mov	r8, #1
    36d4:	add	r7, sp, #4
    36d8:	mov	r6, #1
    36dc:	ldr	r0, [r5, #52]	; 0x34
    36e0:	ldr	r0, [r0, #12]
    36e4:	ldr	r2, [r0, #16]
    36e8:	ldr	r1, [r0, #4]
    36ec:	cmp	r2, #0
    36f0:	beq	373c <InflateFieldNames+0x120>
    36f4:	cmp	r6, #1
    36f8:	cmpeq	r1, #0
    36fc:	bne	373c <InflateFieldNames+0x120>
    3700:	stm	r0, {r7, r8}
    3704:	mov	r0, r7
    3708:	mov	r1, #1
    370c:	mov	r2, #1
    3710:	ldr	r3, [r9]
    3714:	bl	18d0 <fread@plt>
    3718:	mov	r6, r0
    371c:	add	r4, r0, r4
    3720:	ldr	r0, [r5, #52]	; 0x34
    3724:	mov	r1, #0
    3728:	ldr	r0, [r0, #12]
    372c:	bl	1804 <inflate@plt>
    3730:	cmp	r0, #0
    3734:	beq	36dc <InflateFieldNames+0xc0>
    3738:	b	36a8 <InflateFieldNames+0x8c>
    373c:	cmp	r1, #0
    3740:	beq	376c <InflateFieldNames+0x150>
    3744:	ldr	r0, [r9]
    3748:	rsb	r1, r1, #0
    374c:	mov	r2, #1
    3750:	bl	1a68 <fseek@plt>
    3754:	ldr	r0, [r5, #52]	; 0x34
    3758:	mov	r2, #0
    375c:	ldr	r0, [r0, #12]
    3760:	ldr	r1, [r0, #4]
    3764:	str	r2, [r0, #4]
    3768:	sub	r4, r4, r1
    376c:	mov	r0, r4
    3770:	sub	sp, fp, #28
    3774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3778:	.word	0x00048386

0000377c <ReadDoubleData>:
    377c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3780:	add	fp, sp, #28
    3784:	sub	sp, sp, #4
    3788:	vpush	{d8-d9}
    378c:	sub	sp, sp, #2096	; 0x830
    3790:	cmp	r0, #0
    3794:	mov	r4, #0
    3798:	str	r0, [sp, #20]
    379c:	movne	r8, r1
    37a0:	cmpne	r1, #0
    37a4:	bne	37bc <ReadDoubleData+0x40>
    37a8:	mov	r0, r4
    37ac:	sub	sp, fp, #48	; 0x30
    37b0:	vpop	{d8-d9}
    37b4:	add	sp, sp, #4
    37b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    37bc:	ldr	r0, [sp, #20]
    37c0:	ldr	r0, [r0]
    37c4:	cmp	r0, #0
    37c8:	beq	37a8 <ReadDoubleData+0x2c>
    37cc:	mov	r0, r2
    37d0:	mov	r6, r3
    37d4:	mov	r5, r2
    37d8:	bl	193c <Mat_SizeOf@plt>
    37dc:	mov	r7, r0
    37e0:	sub	r0, r5, #1
    37e4:	cmp	r0, #12
    37e8:	bhi	37a8 <ReadDoubleData+0x2c>
    37ec:	add	r1, pc, #8
    37f0:	str	r7, [sp, #16]
    37f4:	ldr	r0, [r1, r0, lsl #2]
    37f8:	add	pc, r1, r0
    37fc:	.word	0x00000034
    3800:	.word	0x00000080
    3804:	.word	0x000000cc
    3808:	.word	0x00000134
    380c:	.word	0x0000019c
    3810:	.word	0x00000204
    3814:	.word	0x0000026c
    3818:	.word	0xffffffac
    381c:	.word	0x000002d0
    3820:	.word	0xffffffac
    3824:	.word	0xffffffac
    3828:	.word	0x00000318
    382c:	.word	0x0000037c
    3830:	cmp	r6, #256	; 0x100
    3834:	bgt	3bdc <ReadDoubleData+0x460>
    3838:	ldr	r0, [sp, #20]
    383c:	add	r4, sp, #40	; 0x28
    3840:	mov	r1, r7
    3844:	mov	r2, r6
    3848:	ldr	r3, [r0]
    384c:	mov	r0, r4
    3850:	bl	18d0 <fread@plt>
    3854:	mov	r5, r0
    3858:	cmp	r6, #1
    385c:	blt	4cac <ReadDoubleData+0x1530>
    3860:	ldrsb	r0, [r4], #1
    3864:	subs	r6, r6, #1
    3868:	vmov	s0, r0
    386c:	vcvt.f64.s32	d16, s0
    3870:	vstmia	r8!, {d16}
    3874:	bne	3860 <ReadDoubleData+0xe4>
    3878:	b	4cac <ReadDoubleData+0x1530>
    387c:	cmp	r6, #256	; 0x100
    3880:	bgt	3ccc <ReadDoubleData+0x550>
    3884:	ldr	r0, [sp, #20]
    3888:	add	r4, sp, #40	; 0x28
    388c:	mov	r1, r7
    3890:	mov	r2, r6
    3894:	ldr	r3, [r0]
    3898:	mov	r0, r4
    389c:	bl	18d0 <fread@plt>
    38a0:	mov	r5, r0
    38a4:	cmp	r6, #1
    38a8:	blt	4cac <ReadDoubleData+0x1530>
    38ac:	ldrb	r0, [r4], #1
    38b0:	subs	r6, r6, #1
    38b4:	vmov	s0, r0
    38b8:	vcvt.f64.u32	d16, s0
    38bc:	vstmia	r8!, {d16}
    38c0:	bne	38ac <ReadDoubleData+0x130>
    38c4:	b	4cac <ReadDoubleData+0x1530>
    38c8:	ldr	r0, [sp, #20]
    38cc:	ldr	r0, [r0, #20]
    38d0:	cmp	r0, #0
    38d4:	beq	3dbc <ReadDoubleData+0x640>
    38d8:	cmp	r6, #256	; 0x100
    38dc:	bgt	3fdc <ReadDoubleData+0x860>
    38e0:	ldr	r0, [sp, #20]
    38e4:	add	r4, sp, #40	; 0x28
    38e8:	mov	r1, r7
    38ec:	mov	r2, r6
    38f0:	ldr	r3, [r0]
    38f4:	mov	r0, r4
    38f8:	bl	18d0 <fread@plt>
    38fc:	mov	r5, r0
    3900:	cmp	r6, #1
    3904:	blt	4cac <ReadDoubleData+0x1530>
    3908:	mov	r0, r4
    390c:	bl	1c58 <Mat_int16Swap>
    3910:	vmov	s0, r0
    3914:	add	r4, r4, #2
    3918:	subs	r6, r6, #1
    391c:	vcvt.f64.s32	d16, s0
    3920:	vstr	d16, [r8]
    3924:	add	r8, r8, #8
    3928:	bne	3908 <ReadDoubleData+0x18c>
    392c:	b	4cac <ReadDoubleData+0x1530>
    3930:	ldr	r0, [sp, #20]
    3934:	ldr	r0, [r0, #20]
    3938:	cmp	r0, #0
    393c:	beq	3e08 <ReadDoubleData+0x68c>
    3940:	cmp	r6, #256	; 0x100
    3944:	bgt	40cc <ReadDoubleData+0x950>
    3948:	ldr	r0, [sp, #20]
    394c:	add	r4, sp, #40	; 0x28
    3950:	mov	r1, r7
    3954:	mov	r2, r6
    3958:	ldr	r3, [r0]
    395c:	mov	r0, r4
    3960:	bl	18d0 <fread@plt>
    3964:	mov	r5, r0
    3968:	cmp	r6, #1
    396c:	blt	4cac <ReadDoubleData+0x1530>
    3970:	mov	r0, r4
    3974:	bl	1c6c <Mat_uint16Swap>
    3978:	vmov	s0, r0
    397c:	add	r4, r4, #2
    3980:	subs	r6, r6, #1
    3984:	vcvt.f64.u32	d16, s0
    3988:	vstr	d16, [r8]
    398c:	add	r8, r8, #8
    3990:	bne	3970 <ReadDoubleData+0x1f4>
    3994:	b	4cac <ReadDoubleData+0x1530>
    3998:	ldr	r0, [sp, #20]
    399c:	ldr	r0, [r0, #20]
    39a0:	cmp	r0, #0
    39a4:	beq	3e54 <ReadDoubleData+0x6d8>
    39a8:	cmp	r6, #256	; 0x100
    39ac:	bgt	41bc <ReadDoubleData+0xa40>
    39b0:	ldr	r0, [sp, #20]
    39b4:	add	r4, sp, #40	; 0x28
    39b8:	mov	r1, r7
    39bc:	mov	r2, r6
    39c0:	ldr	r3, [r0]
    39c4:	mov	r0, r4
    39c8:	bl	18d0 <fread@plt>
    39cc:	mov	r5, r0
    39d0:	cmp	r6, #1
    39d4:	blt	4cac <ReadDoubleData+0x1530>
    39d8:	mov	r0, r4
    39dc:	bl	1c30 <Mat_int32Swap>
    39e0:	vmov	s0, r0
    39e4:	add	r4, r4, #4
    39e8:	subs	r6, r6, #1
    39ec:	vcvt.f64.s32	d16, s0
    39f0:	vstr	d16, [r8]
    39f4:	add	r8, r8, #8
    39f8:	bne	39d8 <ReadDoubleData+0x25c>
    39fc:	b	4cac <ReadDoubleData+0x1530>
    3a00:	ldr	r0, [sp, #20]
    3a04:	ldr	r0, [r0, #20]
    3a08:	cmp	r0, #0
    3a0c:	beq	3ea0 <ReadDoubleData+0x724>
    3a10:	cmp	r6, #256	; 0x100
    3a14:	bgt	42ac <ReadDoubleData+0xb30>
    3a18:	ldr	r0, [sp, #20]
    3a1c:	add	r4, sp, #40	; 0x28
    3a20:	mov	r1, r7
    3a24:	mov	r2, r6
    3a28:	ldr	r3, [r0]
    3a2c:	mov	r0, r4
    3a30:	bl	18d0 <fread@plt>
    3a34:	mov	r5, r0
    3a38:	cmp	r6, #1
    3a3c:	blt	4cac <ReadDoubleData+0x1530>
    3a40:	mov	r0, r4
    3a44:	bl	1c44 <Mat_uint32Swap>
    3a48:	vmov	s0, r0
    3a4c:	add	r4, r4, #4
    3a50:	subs	r6, r6, #1
    3a54:	vcvt.f64.u32	d16, s0
    3a58:	vstr	d16, [r8]
    3a5c:	add	r8, r8, #8
    3a60:	bne	3a40 <ReadDoubleData+0x2c4>
    3a64:	b	4cac <ReadDoubleData+0x1530>
    3a68:	ldr	r0, [sp, #20]
    3a6c:	ldr	r0, [r0, #20]
    3a70:	cmp	r0, #0
    3a74:	beq	3eec <ReadDoubleData+0x770>
    3a78:	cmp	r6, #256	; 0x100
    3a7c:	bgt	439c <ReadDoubleData+0xc20>
    3a80:	ldr	r0, [sp, #20]
    3a84:	add	r4, sp, #40	; 0x28
    3a88:	mov	r1, r7
    3a8c:	mov	r2, r6
    3a90:	ldr	r3, [r0]
    3a94:	mov	r0, r4
    3a98:	bl	18d0 <fread@plt>
    3a9c:	mov	r5, r0
    3aa0:	cmp	r6, #1
    3aa4:	blt	4cac <ReadDoubleData+0x1530>
    3aa8:	mov	r0, r4
    3aac:	bl	1c84 <Mat_floatSwap>
    3ab0:	vcvt.f64.f32	d16, s0
    3ab4:	add	r4, r4, #4
    3ab8:	subs	r6, r6, #1
    3abc:	vstr	d16, [r8]
    3ac0:	add	r8, r8, #8
    3ac4:	bne	3aa8 <ReadDoubleData+0x32c>
    3ac8:	b	4cac <ReadDoubleData+0x1530>
    3acc:	ldr	r4, [sp, #20]
    3ad0:	mov	r0, r8
    3ad4:	mov	r1, r7
    3ad8:	mov	r2, r6
    3adc:	ldr	r3, [r4]
    3ae0:	bl	18d0 <fread@plt>
    3ae4:	mov	r5, r0
    3ae8:	ldr	r0, [r4, #20]
    3aec:	cmp	r0, #0
    3af0:	beq	4cac <ReadDoubleData+0x1530>
    3af4:	cmp	r6, #1
    3af8:	blt	4cac <ReadDoubleData+0x1530>
    3afc:	mov	r0, r8
    3b00:	bl	1cc8 <Mat_doubleSwap>
    3b04:	add	r8, r8, #8
    3b08:	subs	r6, r6, #1
    3b0c:	bne	3afc <ReadDoubleData+0x380>
    3b10:	b	4cac <ReadDoubleData+0x1530>
    3b14:	ldr	r0, [sp, #20]
    3b18:	ldr	r0, [r0, #20]
    3b1c:	cmp	r0, #0
    3b20:	beq	3f3c <ReadDoubleData+0x7c0>
    3b24:	cmp	r6, #256	; 0x100
    3b28:	bgt	4484 <ReadDoubleData+0xd08>
    3b2c:	ldr	r0, [sp, #20]
    3b30:	add	r4, sp, #40	; 0x28
    3b34:	mov	r1, r7
    3b38:	mov	r2, r6
    3b3c:	ldr	r3, [r0]
    3b40:	mov	r0, r4
    3b44:	bl	18d0 <fread@plt>
    3b48:	mov	r5, r0
    3b4c:	cmp	r6, #1
    3b50:	blt	4cac <ReadDoubleData+0x1530>
    3b54:	mov	r0, r4
    3b58:	bl	1bbc <Mat_int64Swap>
    3b5c:	bl	4b404 <__aeabi_l2d>
    3b60:	strd	r0, [r8]
    3b64:	add	r4, r4, #8
    3b68:	add	r8, r8, #8
    3b6c:	subs	r6, r6, #1
    3b70:	bne	3b54 <ReadDoubleData+0x3d8>
    3b74:	b	4cac <ReadDoubleData+0x1530>
    3b78:	ldr	r0, [sp, #20]
    3b7c:	ldr	r0, [r0, #20]
    3b80:	cmp	r0, #0
    3b84:	beq	3f8c <ReadDoubleData+0x810>
    3b88:	cmp	r6, #256	; 0x100
    3b8c:	bgt	456c <ReadDoubleData+0xdf0>
    3b90:	ldr	r0, [sp, #20]
    3b94:	add	r4, sp, #40	; 0x28
    3b98:	mov	r1, r7
    3b9c:	mov	r2, r6
    3ba0:	ldr	r3, [r0]
    3ba4:	mov	r0, r4
    3ba8:	bl	18d0 <fread@plt>
    3bac:	mov	r5, r0
    3bb0:	cmp	r6, #1
    3bb4:	blt	4cac <ReadDoubleData+0x1530>
    3bb8:	mov	r0, r4
    3bbc:	bl	1c0c <Mat_uint64Swap>
    3bc0:	bl	4b3f0 <__aeabi_ul2d>
    3bc4:	strd	r0, [r8]
    3bc8:	add	r4, r4, #8
    3bcc:	add	r8, r8, #8
    3bd0:	subs	r6, r6, #1
    3bd4:	bne	3bb8 <ReadDoubleData+0x43c>
    3bd8:	b	4cac <ReadDoubleData+0x1530>
    3bdc:	sub	r0, r6, #256	; 0x100
    3be0:	add	r1, r8, #2048	; 0x800
    3be4:	add	r4, sp, #40	; 0x28
    3be8:	add	r9, sp, #32
    3bec:	mov	r5, #0
    3bf0:	str	r6, [sp, #4]
    3bf4:	str	r0, [sp, #12]
    3bf8:	mov	r0, #0
    3bfc:	mov	sl, r0
    3c00:	ldr	r0, [sp, #20]
    3c04:	mov	r6, r1
    3c08:	mov	r1, r7
    3c0c:	mov	r2, #256	; 0x100
    3c10:	ldr	r3, [r0]
    3c14:	mov	r0, r4
    3c18:	bl	18d0 <fread@plt>
    3c1c:	mov	r1, r8
    3c20:	mov	r2, #0
    3c24:	add	r3, r4, r2
    3c28:	add	r2, r2, #2
    3c2c:	ldrh	r3, [r3]
    3c30:	cmp	r2, #256	; 0x100
    3c34:	strh	r3, [sp, #32]
    3c38:	vld1.16	{d16[0]}, [r9 :16]
    3c3c:	vmovl.s8	q8, d16
    3c40:	vmovl.s16	q0, d16
    3c44:	vcvt.f64.s32	d17, s1
    3c48:	vcvt.f64.s32	d16, s0
    3c4c:	vst1.64	{d16-d17}, [r1]!
    3c50:	bne	3c24 <ReadDoubleData+0x4a8>
    3c54:	ldr	r2, [sp, #12]
    3c58:	add	r5, r0, r5
    3c5c:	add	r0, sl, #256	; 0x100
    3c60:	add	r8, r8, #2048	; 0x800
    3c64:	add	r1, r6, #2048	; 0x800
    3c68:	cmp	r0, r2
    3c6c:	blt	3bfc <ReadDoubleData+0x480>
    3c70:	ldr	r8, [sp, #4]
    3c74:	cmp	r0, r8
    3c78:	bge	4cac <ReadDoubleData+0x1530>
    3c7c:	mov	r1, r7
    3c80:	sub	r7, r8, r0
    3c84:	ldr	r0, [sp, #20]
    3c88:	add	r4, sp, #40	; 0x28
    3c8c:	mov	r2, r7
    3c90:	ldr	r3, [r0]
    3c94:	mov	r0, r4
    3c98:	bl	18d0 <fread@plt>
    3c9c:	add	r5, r0, r5
    3ca0:	cmp	r7, #1
    3ca4:	blt	4ca8 <ReadDoubleData+0x152c>
    3ca8:	sub	r0, r8, sl
    3cac:	sub	r0, r0, #256	; 0x100
    3cb0:	ldrsb	r1, [r4], #1
    3cb4:	subs	r0, r0, #1
    3cb8:	vmov	s0, r1
    3cbc:	vcvt.f64.s32	d16, s0
    3cc0:	vstmia	r6!, {d16}
    3cc4:	bne	3cb0 <ReadDoubleData+0x534>
    3cc8:	b	4ca8 <ReadDoubleData+0x152c>
    3ccc:	sub	r0, r6, #256	; 0x100
    3cd0:	add	r1, r8, #2048	; 0x800
    3cd4:	add	r4, sp, #40	; 0x28
    3cd8:	add	r9, sp, #36	; 0x24
    3cdc:	mov	r5, #0
    3ce0:	str	r6, [sp, #4]
    3ce4:	str	r0, [sp, #12]
    3ce8:	mov	r0, #0
    3cec:	mov	sl, r0
    3cf0:	ldr	r0, [sp, #20]
    3cf4:	mov	r6, r1
    3cf8:	mov	r1, r7
    3cfc:	mov	r2, #256	; 0x100
    3d00:	ldr	r3, [r0]
    3d04:	mov	r0, r4
    3d08:	bl	18d0 <fread@plt>
    3d0c:	mov	r1, r8
    3d10:	mov	r2, #0
    3d14:	add	r3, r4, r2
    3d18:	add	r2, r2, #2
    3d1c:	ldrh	r3, [r3]
    3d20:	cmp	r2, #256	; 0x100
    3d24:	strh	r3, [sp, #36]	; 0x24
    3d28:	vld1.16	{d16[0]}, [r9 :16]
    3d2c:	vmovl.u8	q8, d16
    3d30:	vmovl.u16	q0, d16
    3d34:	vcvt.f64.u32	d17, s1
    3d38:	vcvt.f64.u32	d16, s0
    3d3c:	vst1.64	{d16-d17}, [r1]!
    3d40:	bne	3d14 <ReadDoubleData+0x598>
    3d44:	ldr	r2, [sp, #12]
    3d48:	add	r5, r0, r5
    3d4c:	add	r0, sl, #256	; 0x100
    3d50:	add	r8, r8, #2048	; 0x800
    3d54:	add	r1, r6, #2048	; 0x800
    3d58:	cmp	r0, r2
    3d5c:	blt	3cec <ReadDoubleData+0x570>
    3d60:	ldr	r8, [sp, #4]
    3d64:	cmp	r0, r8
    3d68:	bge	4cac <ReadDoubleData+0x1530>
    3d6c:	mov	r1, r7
    3d70:	sub	r7, r8, r0
    3d74:	ldr	r0, [sp, #20]
    3d78:	add	r4, sp, #40	; 0x28
    3d7c:	mov	r2, r7
    3d80:	ldr	r3, [r0]
    3d84:	mov	r0, r4
    3d88:	bl	18d0 <fread@plt>
    3d8c:	add	r5, r0, r5
    3d90:	cmp	r7, #1
    3d94:	blt	4ca8 <ReadDoubleData+0x152c>
    3d98:	sub	r0, r8, sl
    3d9c:	sub	r0, r0, #256	; 0x100
    3da0:	ldrb	r1, [r4], #1
    3da4:	subs	r0, r0, #1
    3da8:	vmov	s0, r1
    3dac:	vcvt.f64.u32	d16, s0
    3db0:	vstmia	r6!, {d16}
    3db4:	bne	3da0 <ReadDoubleData+0x624>
    3db8:	b	4ca8 <ReadDoubleData+0x152c>
    3dbc:	cmp	r6, #256	; 0x100
    3dc0:	bgt	4654 <ReadDoubleData+0xed8>
    3dc4:	ldr	r0, [sp, #20]
    3dc8:	add	r4, sp, #40	; 0x28
    3dcc:	mov	r1, r7
    3dd0:	mov	r2, r6
    3dd4:	ldr	r3, [r0]
    3dd8:	mov	r0, r4
    3ddc:	bl	18d0 <fread@plt>
    3de0:	mov	r5, r0
    3de4:	cmp	r6, #1
    3de8:	blt	4cac <ReadDoubleData+0x1530>
    3dec:	ldrsh	r0, [r4], #2
    3df0:	subs	r6, r6, #1
    3df4:	vmov	s0, r0
    3df8:	vcvt.f64.s32	d16, s0
    3dfc:	vstmia	r8!, {d16}
    3e00:	bne	3dec <ReadDoubleData+0x670>
    3e04:	b	4cac <ReadDoubleData+0x1530>
    3e08:	cmp	r6, #256	; 0x100
    3e0c:	bgt	473c <ReadDoubleData+0xfc0>
    3e10:	ldr	r0, [sp, #20]
    3e14:	add	r4, sp, #40	; 0x28
    3e18:	mov	r1, r7
    3e1c:	mov	r2, r6
    3e20:	ldr	r3, [r0]
    3e24:	mov	r0, r4
    3e28:	bl	18d0 <fread@plt>
    3e2c:	mov	r5, r0
    3e30:	cmp	r6, #1
    3e34:	blt	4cac <ReadDoubleData+0x1530>
    3e38:	ldrh	r0, [r4], #2
    3e3c:	subs	r6, r6, #1
    3e40:	vmov	s0, r0
    3e44:	vcvt.f64.u32	d16, s0
    3e48:	vstmia	r8!, {d16}
    3e4c:	bne	3e38 <ReadDoubleData+0x6bc>
    3e50:	b	4cac <ReadDoubleData+0x1530>
    3e54:	cmp	r6, #256	; 0x100
    3e58:	bgt	4824 <ReadDoubleData+0x10a8>
    3e5c:	ldr	r0, [sp, #20]
    3e60:	add	r4, sp, #40	; 0x28
    3e64:	mov	r1, r7
    3e68:	mov	r2, r6
    3e6c:	ldr	r3, [r0]
    3e70:	mov	r0, r4
    3e74:	bl	18d0 <fread@plt>
    3e78:	mov	r5, r0
    3e7c:	cmp	r6, #1
    3e80:	blt	4cac <ReadDoubleData+0x1530>
    3e84:	ldr	r0, [r4], #4
    3e88:	subs	r6, r6, #1
    3e8c:	vmov	s0, r0
    3e90:	vcvt.f64.s32	d16, s0
    3e94:	vstmia	r8!, {d16}
    3e98:	bne	3e84 <ReadDoubleData+0x708>
    3e9c:	b	4cac <ReadDoubleData+0x1530>
    3ea0:	cmp	r6, #256	; 0x100
    3ea4:	bgt	48f8 <ReadDoubleData+0x117c>
    3ea8:	ldr	r0, [sp, #20]
    3eac:	add	r4, sp, #40	; 0x28
    3eb0:	mov	r1, r7
    3eb4:	mov	r2, r6
    3eb8:	ldr	r3, [r0]
    3ebc:	mov	r0, r4
    3ec0:	bl	18d0 <fread@plt>
    3ec4:	mov	r5, r0
    3ec8:	cmp	r6, #1
    3ecc:	blt	4cac <ReadDoubleData+0x1530>
    3ed0:	ldr	r0, [r4], #4
    3ed4:	subs	r6, r6, #1
    3ed8:	vmov	s0, r0
    3edc:	vcvt.f64.u32	d16, s0
    3ee0:	vstmia	r8!, {d16}
    3ee4:	bne	3ed0 <ReadDoubleData+0x754>
    3ee8:	b	4cac <ReadDoubleData+0x1530>
    3eec:	cmp	r6, #256	; 0x100
    3ef0:	bgt	49cc <ReadDoubleData+0x1250>
    3ef4:	ldr	r0, [sp, #20]
    3ef8:	add	r4, sp, #40	; 0x28
    3efc:	mov	r1, r7
    3f00:	mov	r2, r6
    3f04:	ldr	r3, [r0]
    3f08:	mov	r0, r4
    3f0c:	bl	18d0 <fread@plt>
    3f10:	mov	r5, r0
    3f14:	cmp	r6, #1
    3f18:	blt	4cac <ReadDoubleData+0x1530>
    3f1c:	vldr	s0, [r4]
    3f20:	add	r4, r4, #4
    3f24:	subs	r6, r6, #1
    3f28:	vcvt.f64.f32	d16, s0
    3f2c:	vstr	d16, [r8]
    3f30:	add	r8, r8, #8
    3f34:	bne	3f1c <ReadDoubleData+0x7a0>
    3f38:	b	4cac <ReadDoubleData+0x1530>
    3f3c:	cmp	r6, #256	; 0x100
    3f40:	bgt	4aa0 <ReadDoubleData+0x1324>
    3f44:	ldr	r0, [sp, #20]
    3f48:	add	r4, sp, #40	; 0x28
    3f4c:	mov	r1, r7
    3f50:	mov	r2, r6
    3f54:	ldr	r3, [r0]
    3f58:	mov	r0, r4
    3f5c:	bl	18d0 <fread@plt>
    3f60:	mov	r5, r0
    3f64:	cmp	r6, #1
    3f68:	blt	4cac <ReadDoubleData+0x1530>
    3f6c:	ldrd	r0, [r4]
    3f70:	bl	4b404 <__aeabi_l2d>
    3f74:	strd	r0, [r8]
    3f78:	add	r4, r4, #8
    3f7c:	add	r8, r8, #8
    3f80:	subs	r6, r6, #1
    3f84:	bne	3f6c <ReadDoubleData+0x7f0>
    3f88:	b	4cac <ReadDoubleData+0x1530>
    3f8c:	cmp	r6, #256	; 0x100
    3f90:	bgt	4ba4 <ReadDoubleData+0x1428>
    3f94:	ldr	r0, [sp, #20]
    3f98:	add	r4, sp, #40	; 0x28
    3f9c:	mov	r1, r7
    3fa0:	mov	r2, r6
    3fa4:	ldr	r3, [r0]
    3fa8:	mov	r0, r4
    3fac:	bl	18d0 <fread@plt>
    3fb0:	mov	r5, r0
    3fb4:	cmp	r6, #1
    3fb8:	blt	4cac <ReadDoubleData+0x1530>
    3fbc:	ldrd	r0, [r4]
    3fc0:	bl	4b3f0 <__aeabi_ul2d>
    3fc4:	strd	r0, [r8]
    3fc8:	add	r4, r4, #8
    3fcc:	add	r8, r8, #8
    3fd0:	subs	r6, r6, #1
    3fd4:	bne	3fbc <ReadDoubleData+0x840>
    3fd8:	b	4cac <ReadDoubleData+0x1530>
    3fdc:	sub	r0, r6, #256	; 0x100
    3fe0:	add	r1, r8, #2048	; 0x800
    3fe4:	add	r4, sp, #40	; 0x28
    3fe8:	mov	r5, #0
    3fec:	str	r6, [sp, #4]
    3ff0:	str	r0, [sp, #8]
    3ff4:	mov	r0, #0
    3ff8:	str	r0, [sp, #12]
    3ffc:	ldr	r0, [sp, #20]
    4000:	mov	sl, r1
    4004:	mov	r1, r7
    4008:	mov	r2, #256	; 0x100
    400c:	ldr	r3, [r0]
    4010:	mov	r0, r4
    4014:	bl	18d0 <fread@plt>
    4018:	mov	r6, r0
    401c:	mov	r7, r8
    4020:	mov	r9, #0
    4024:	add	r0, r4, r9
    4028:	bl	1c58 <Mat_int16Swap>
    402c:	vmov	s0, r0
    4030:	add	r9, r9, #2
    4034:	cmp	r9, #512	; 0x200
    4038:	vcvt.f64.s32	d16, s0
    403c:	vstmia	r7!, {d16}
    4040:	bne	4024 <ReadDoubleData+0x8a8>
    4044:	add	r5, r6, r5
    4048:	ldr	r6, [sp, #12]
    404c:	ldr	r2, [sp, #8]
    4050:	ldr	r7, [sp, #16]
    4054:	add	r8, r8, #2048	; 0x800
    4058:	add	r1, sl, #2048	; 0x800
    405c:	add	r0, r6, #256	; 0x100
    4060:	cmp	r0, r2
    4064:	blt	3ff8 <ReadDoubleData+0x87c>
    4068:	ldr	r9, [sp, #4]
    406c:	cmp	r0, r9
    4070:	bge	4cac <ReadDoubleData+0x1530>
    4074:	sub	r8, r9, r0
    4078:	ldr	r0, [sp, #20]
    407c:	add	r4, sp, #40	; 0x28
    4080:	mov	r1, r7
    4084:	mov	r2, r8
    4088:	ldr	r3, [r0]
    408c:	mov	r0, r4
    4090:	bl	18d0 <fread@plt>
    4094:	add	r5, r0, r5
    4098:	cmp	r8, #1
    409c:	blt	4cac <ReadDoubleData+0x1530>
    40a0:	sub	r0, r9, r6
    40a4:	sub	r6, r0, #256	; 0x100
    40a8:	mov	r0, r4
    40ac:	bl	1c58 <Mat_int16Swap>
    40b0:	vmov	s0, r0
    40b4:	add	r4, r4, #2
    40b8:	subs	r6, r6, #1
    40bc:	vcvt.f64.s32	d16, s0
    40c0:	vstmia	sl!, {d16}
    40c4:	bne	40a8 <ReadDoubleData+0x92c>
    40c8:	b	4cac <ReadDoubleData+0x1530>
    40cc:	sub	r0, r6, #256	; 0x100
    40d0:	add	r1, r8, #2048	; 0x800
    40d4:	add	r4, sp, #40	; 0x28
    40d8:	mov	r5, #0
    40dc:	str	r6, [sp, #4]
    40e0:	str	r0, [sp, #8]
    40e4:	mov	r0, #0
    40e8:	str	r0, [sp, #12]
    40ec:	ldr	r0, [sp, #20]
    40f0:	mov	sl, r1
    40f4:	mov	r1, r7
    40f8:	mov	r2, #256	; 0x100
    40fc:	ldr	r3, [r0]
    4100:	mov	r0, r4
    4104:	bl	18d0 <fread@plt>
    4108:	mov	r6, r0
    410c:	mov	r7, r8
    4110:	mov	r9, #0
    4114:	add	r0, r4, r9
    4118:	bl	1c6c <Mat_uint16Swap>
    411c:	vmov	s0, r0
    4120:	add	r9, r9, #2
    4124:	cmp	r9, #512	; 0x200
    4128:	vcvt.f64.u32	d16, s0
    412c:	vstmia	r7!, {d16}
    4130:	bne	4114 <ReadDoubleData+0x998>
    4134:	add	r5, r6, r5
    4138:	ldr	r6, [sp, #12]
    413c:	ldr	r2, [sp, #8]
    4140:	ldr	r7, [sp, #16]
    4144:	add	r8, r8, #2048	; 0x800
    4148:	add	r1, sl, #2048	; 0x800
    414c:	add	r0, r6, #256	; 0x100
    4150:	cmp	r0, r2
    4154:	blt	40e8 <ReadDoubleData+0x96c>
    4158:	ldr	r9, [sp, #4]
    415c:	cmp	r0, r9
    4160:	bge	4cac <ReadDoubleData+0x1530>
    4164:	sub	r8, r9, r0
    4168:	ldr	r0, [sp, #20]
    416c:	add	r4, sp, #40	; 0x28
    4170:	mov	r1, r7
    4174:	mov	r2, r8
    4178:	ldr	r3, [r0]
    417c:	mov	r0, r4
    4180:	bl	18d0 <fread@plt>
    4184:	add	r5, r0, r5
    4188:	cmp	r8, #1
    418c:	blt	4cac <ReadDoubleData+0x1530>
    4190:	sub	r0, r9, r6
    4194:	sub	r6, r0, #256	; 0x100
    4198:	mov	r0, r4
    419c:	bl	1c6c <Mat_uint16Swap>
    41a0:	vmov	s0, r0
    41a4:	add	r4, r4, #2
    41a8:	subs	r6, r6, #1
    41ac:	vcvt.f64.u32	d16, s0
    41b0:	vstmia	sl!, {d16}
    41b4:	bne	4198 <ReadDoubleData+0xa1c>
    41b8:	b	4cac <ReadDoubleData+0x1530>
    41bc:	sub	r0, r6, #256	; 0x100
    41c0:	add	r1, r8, #2048	; 0x800
    41c4:	add	r4, sp, #40	; 0x28
    41c8:	mov	r5, #0
    41cc:	str	r6, [sp, #4]
    41d0:	str	r0, [sp, #8]
    41d4:	mov	r0, #0
    41d8:	str	r0, [sp, #12]
    41dc:	ldr	r0, [sp, #20]
    41e0:	mov	sl, r1
    41e4:	mov	r1, r7
    41e8:	mov	r2, #256	; 0x100
    41ec:	ldr	r3, [r0]
    41f0:	mov	r0, r4
    41f4:	bl	18d0 <fread@plt>
    41f8:	mov	r6, r0
    41fc:	mov	r7, r8
    4200:	mov	r9, #0
    4204:	add	r0, r4, r9
    4208:	bl	1c30 <Mat_int32Swap>
    420c:	vmov	s0, r0
    4210:	add	r9, r9, #4
    4214:	cmp	r9, #1024	; 0x400
    4218:	vcvt.f64.s32	d16, s0
    421c:	vstmia	r7!, {d16}
    4220:	bne	4204 <ReadDoubleData+0xa88>
    4224:	add	r5, r6, r5
    4228:	ldr	r6, [sp, #12]
    422c:	ldr	r2, [sp, #8]
    4230:	ldr	r7, [sp, #16]
    4234:	add	r8, r8, #2048	; 0x800
    4238:	add	r1, sl, #2048	; 0x800
    423c:	add	r0, r6, #256	; 0x100
    4240:	cmp	r0, r2
    4244:	blt	41d8 <ReadDoubleData+0xa5c>
    4248:	ldr	r9, [sp, #4]
    424c:	cmp	r0, r9
    4250:	bge	4cac <ReadDoubleData+0x1530>
    4254:	sub	r8, r9, r0
    4258:	ldr	r0, [sp, #20]
    425c:	add	r4, sp, #40	; 0x28
    4260:	mov	r1, r7
    4264:	mov	r2, r8
    4268:	ldr	r3, [r0]
    426c:	mov	r0, r4
    4270:	bl	18d0 <fread@plt>
    4274:	add	r5, r0, r5
    4278:	cmp	r8, #1
    427c:	blt	4cac <ReadDoubleData+0x1530>
    4280:	sub	r0, r9, r6
    4284:	sub	r6, r0, #256	; 0x100
    4288:	mov	r0, r4
    428c:	bl	1c30 <Mat_int32Swap>
    4290:	vmov	s0, r0
    4294:	add	r4, r4, #4
    4298:	subs	r6, r6, #1
    429c:	vcvt.f64.s32	d16, s0
    42a0:	vstmia	sl!, {d16}
    42a4:	bne	4288 <ReadDoubleData+0xb0c>
    42a8:	b	4cac <ReadDoubleData+0x1530>
    42ac:	sub	r0, r6, #256	; 0x100
    42b0:	add	r1, r8, #2048	; 0x800
    42b4:	add	r4, sp, #40	; 0x28
    42b8:	mov	r5, #0
    42bc:	str	r6, [sp, #4]
    42c0:	str	r0, [sp, #8]
    42c4:	mov	r0, #0
    42c8:	str	r0, [sp, #12]
    42cc:	ldr	r0, [sp, #20]
    42d0:	mov	sl, r1
    42d4:	mov	r1, r7
    42d8:	mov	r2, #256	; 0x100
    42dc:	ldr	r3, [r0]
    42e0:	mov	r0, r4
    42e4:	bl	18d0 <fread@plt>
    42e8:	mov	r6, r0
    42ec:	mov	r7, r8
    42f0:	mov	r9, #0
    42f4:	add	r0, r4, r9
    42f8:	bl	1c44 <Mat_uint32Swap>
    42fc:	vmov	s0, r0
    4300:	add	r9, r9, #4
    4304:	cmp	r9, #1024	; 0x400
    4308:	vcvt.f64.u32	d16, s0
    430c:	vstmia	r7!, {d16}
    4310:	bne	42f4 <ReadDoubleData+0xb78>
    4314:	add	r5, r6, r5
    4318:	ldr	r6, [sp, #12]
    431c:	ldr	r2, [sp, #8]
    4320:	ldr	r7, [sp, #16]
    4324:	add	r8, r8, #2048	; 0x800
    4328:	add	r1, sl, #2048	; 0x800
    432c:	add	r0, r6, #256	; 0x100
    4330:	cmp	r0, r2
    4334:	blt	42c8 <ReadDoubleData+0xb4c>
    4338:	ldr	r9, [sp, #4]
    433c:	cmp	r0, r9
    4340:	bge	4cac <ReadDoubleData+0x1530>
    4344:	sub	r8, r9, r0
    4348:	ldr	r0, [sp, #20]
    434c:	add	r4, sp, #40	; 0x28
    4350:	mov	r1, r7
    4354:	mov	r2, r8
    4358:	ldr	r3, [r0]
    435c:	mov	r0, r4
    4360:	bl	18d0 <fread@plt>
    4364:	add	r5, r0, r5
    4368:	cmp	r8, #1
    436c:	blt	4cac <ReadDoubleData+0x1530>
    4370:	sub	r0, r9, r6
    4374:	sub	r6, r0, #256	; 0x100
    4378:	mov	r0, r4
    437c:	bl	1c44 <Mat_uint32Swap>
    4380:	vmov	s0, r0
    4384:	add	r4, r4, #4
    4388:	subs	r6, r6, #1
    438c:	vcvt.f64.u32	d16, s0
    4390:	vstmia	sl!, {d16}
    4394:	bne	4378 <ReadDoubleData+0xbfc>
    4398:	b	4cac <ReadDoubleData+0x1530>
    439c:	sub	r0, r6, #256	; 0x100
    43a0:	add	r1, r8, #2048	; 0x800
    43a4:	add	r4, sp, #40	; 0x28
    43a8:	mov	r5, #0
    43ac:	str	r6, [sp, #4]
    43b0:	str	r0, [sp, #8]
    43b4:	mov	r0, #0
    43b8:	str	r0, [sp, #12]
    43bc:	ldr	r0, [sp, #20]
    43c0:	mov	sl, r1
    43c4:	mov	r1, r7
    43c8:	mov	r2, #256	; 0x100
    43cc:	ldr	r3, [r0]
    43d0:	mov	r0, r4
    43d4:	bl	18d0 <fread@plt>
    43d8:	mov	r6, r0
    43dc:	mov	r7, r8
    43e0:	mov	r9, #0
    43e4:	add	r0, r4, r9
    43e8:	bl	1c84 <Mat_floatSwap>
    43ec:	vcvt.f64.f32	d16, s0
    43f0:	add	r9, r9, #4
    43f4:	cmp	r9, #1024	; 0x400
    43f8:	vstmia	r7!, {d16}
    43fc:	bne	43e4 <ReadDoubleData+0xc68>
    4400:	add	r5, r6, r5
    4404:	ldr	r6, [sp, #12]
    4408:	ldr	r2, [sp, #8]
    440c:	ldr	r7, [sp, #16]
    4410:	add	r8, r8, #2048	; 0x800
    4414:	add	r1, sl, #2048	; 0x800
    4418:	add	r0, r6, #256	; 0x100
    441c:	cmp	r0, r2
    4420:	blt	43b8 <ReadDoubleData+0xc3c>
    4424:	ldr	r9, [sp, #4]
    4428:	cmp	r0, r9
    442c:	bge	4cac <ReadDoubleData+0x1530>
    4430:	sub	r8, r9, r0
    4434:	ldr	r0, [sp, #20]
    4438:	add	r4, sp, #40	; 0x28
    443c:	mov	r1, r7
    4440:	mov	r2, r8
    4444:	ldr	r3, [r0]
    4448:	mov	r0, r4
    444c:	bl	18d0 <fread@plt>
    4450:	add	r5, r0, r5
    4454:	cmp	r8, #1
    4458:	blt	4cac <ReadDoubleData+0x1530>
    445c:	sub	r0, r9, r6
    4460:	sub	r6, r0, #256	; 0x100
    4464:	mov	r0, r4
    4468:	bl	1c84 <Mat_floatSwap>
    446c:	vcvt.f64.f32	d16, s0
    4470:	add	r4, r4, #4
    4474:	subs	r6, r6, #1
    4478:	vstmia	sl!, {d16}
    447c:	bne	4464 <ReadDoubleData+0xce8>
    4480:	b	4cac <ReadDoubleData+0x1530>
    4484:	sub	r0, r6, #256	; 0x100
    4488:	add	r1, r8, #2048	; 0x800
    448c:	add	r4, sp, #40	; 0x28
    4490:	mov	r5, #0
    4494:	str	r6, [sp, #4]
    4498:	str	r0, [sp, #12]
    449c:	mov	r0, #0
    44a0:	mov	r7, r0
    44a4:	ldr	r0, [sp, #20]
    44a8:	mov	sl, r1
    44ac:	ldr	r1, [sp, #16]
    44b0:	mov	r2, #256	; 0x100
    44b4:	ldr	r3, [r0]
    44b8:	mov	r0, r4
    44bc:	bl	18d0 <fread@plt>
    44c0:	mov	r6, r0
    44c4:	mov	r9, #0
    44c8:	add	r0, r4, r9
    44cc:	bl	1bbc <Mat_int64Swap>
    44d0:	bl	4b404 <__aeabi_l2d>
    44d4:	mov	r2, r8
    44d8:	str	r0, [r2, r9]!
    44dc:	add	r9, r9, #8
    44e0:	cmp	r9, #2048	; 0x800
    44e4:	str	r1, [r2, #4]
    44e8:	bne	44c8 <ReadDoubleData+0xd4c>
    44ec:	ldr	r2, [sp, #12]
    44f0:	add	r0, r7, #256	; 0x100
    44f4:	add	r5, r6, r5
    44f8:	add	r8, r8, #2048	; 0x800
    44fc:	add	r1, sl, #2048	; 0x800
    4500:	cmp	r0, r2
    4504:	blt	44a0 <ReadDoubleData+0xd24>
    4508:	ldr	r6, [sp, #4]
    450c:	cmp	r0, r6
    4510:	bge	4ca8 <ReadDoubleData+0x152c>
    4514:	sub	r8, r6, r0
    4518:	ldr	r0, [sp, #20]
    451c:	ldr	r1, [sp, #16]
    4520:	add	r4, sp, #40	; 0x28
    4524:	mov	r2, r8
    4528:	ldr	r3, [r0]
    452c:	mov	r0, r4
    4530:	bl	18d0 <fread@plt>
    4534:	add	r5, r0, r5
    4538:	cmp	r8, #1
    453c:	blt	4ca8 <ReadDoubleData+0x152c>
    4540:	sub	r0, r6, r7
    4544:	sub	r6, r0, #256	; 0x100
    4548:	mov	r0, r4
    454c:	bl	1bbc <Mat_int64Swap>
    4550:	bl	4b404 <__aeabi_l2d>
    4554:	strd	r0, [sl]
    4558:	add	sl, sl, #8
    455c:	add	r4, r4, #8
    4560:	subs	r6, r6, #1
    4564:	bne	4548 <ReadDoubleData+0xdcc>
    4568:	b	4ca8 <ReadDoubleData+0x152c>
    456c:	sub	r0, r6, #256	; 0x100
    4570:	add	r1, r8, #2048	; 0x800
    4574:	add	r4, sp, #40	; 0x28
    4578:	mov	r5, #0
    457c:	str	r6, [sp, #4]
    4580:	str	r0, [sp, #12]
    4584:	mov	r0, #0
    4588:	mov	r7, r0
    458c:	ldr	r0, [sp, #20]
    4590:	mov	sl, r1
    4594:	ldr	r1, [sp, #16]
    4598:	mov	r2, #256	; 0x100
    459c:	ldr	r3, [r0]
    45a0:	mov	r0, r4
    45a4:	bl	18d0 <fread@plt>
    45a8:	mov	r6, r0
    45ac:	mov	r9, #0
    45b0:	add	r0, r4, r9
    45b4:	bl	1c0c <Mat_uint64Swap>
    45b8:	bl	4b3f0 <__aeabi_ul2d>
    45bc:	mov	r2, r8
    45c0:	str	r0, [r2, r9]!
    45c4:	add	r9, r9, #8
    45c8:	cmp	r9, #2048	; 0x800
    45cc:	str	r1, [r2, #4]
    45d0:	bne	45b0 <ReadDoubleData+0xe34>
    45d4:	ldr	r2, [sp, #12]
    45d8:	add	r0, r7, #256	; 0x100
    45dc:	add	r5, r6, r5
    45e0:	add	r8, r8, #2048	; 0x800
    45e4:	add	r1, sl, #2048	; 0x800
    45e8:	cmp	r0, r2
    45ec:	blt	4588 <ReadDoubleData+0xe0c>
    45f0:	ldr	r6, [sp, #4]
    45f4:	cmp	r0, r6
    45f8:	bge	4ca8 <ReadDoubleData+0x152c>
    45fc:	sub	r8, r6, r0
    4600:	ldr	r0, [sp, #20]
    4604:	ldr	r1, [sp, #16]
    4608:	add	r4, sp, #40	; 0x28
    460c:	mov	r2, r8
    4610:	ldr	r3, [r0]
    4614:	mov	r0, r4
    4618:	bl	18d0 <fread@plt>
    461c:	add	r5, r0, r5
    4620:	cmp	r8, #1
    4624:	blt	4ca8 <ReadDoubleData+0x152c>
    4628:	sub	r0, r6, r7
    462c:	sub	r6, r0, #256	; 0x100
    4630:	mov	r0, r4
    4634:	bl	1c0c <Mat_uint64Swap>
    4638:	bl	4b3f0 <__aeabi_ul2d>
    463c:	strd	r0, [sl]
    4640:	add	sl, sl, #8
    4644:	add	r4, r4, #8
    4648:	subs	r6, r6, #1
    464c:	bne	4630 <ReadDoubleData+0xeb4>
    4650:	b	4ca8 <ReadDoubleData+0x152c>
    4654:	sub	r0, r6, #256	; 0x100
    4658:	add	r1, r8, #2048	; 0x800
    465c:	add	r4, sp, #40	; 0x28
    4660:	add	sl, sp, #24
    4664:	mov	r5, #0
    4668:	str	r6, [sp, #4]
    466c:	str	r0, [sp, #12]
    4670:	mov	r0, #0
    4674:	mov	r9, r0
    4678:	ldr	r0, [sp, #20]
    467c:	mov	r6, r1
    4680:	mov	r1, r7
    4684:	mov	r2, #256	; 0x100
    4688:	ldr	r3, [r0]
    468c:	mov	r0, r4
    4690:	bl	18d0 <fread@plt>
    4694:	mov	r1, r8
    4698:	mov	r2, #0
    469c:	ldr	r3, [r4, r2]
    46a0:	add	r2, r2, #4
    46a4:	cmp	r2, #512	; 0x200
    46a8:	str	r3, [sp, #24]
    46ac:	vld1.32	{d16[0]}, [sl :32]
    46b0:	vmovl.s16	q0, d16
    46b4:	vcvt.f64.s32	d17, s1
    46b8:	vcvt.f64.s32	d16, s0
    46bc:	vst1.64	{d16-d17}, [r1]!
    46c0:	bne	469c <ReadDoubleData+0xf20>
    46c4:	ldr	r2, [sp, #12]
    46c8:	add	r5, r0, r5
    46cc:	add	r0, r9, #256	; 0x100
    46d0:	add	r8, r8, #2048	; 0x800
    46d4:	add	r1, r6, #2048	; 0x800
    46d8:	cmp	r0, r2
    46dc:	blt	4674 <ReadDoubleData+0xef8>
    46e0:	ldr	r8, [sp, #4]
    46e4:	cmp	r0, r8
    46e8:	bge	4cac <ReadDoubleData+0x1530>
    46ec:	mov	r1, r7
    46f0:	sub	r7, r8, r0
    46f4:	ldr	r0, [sp, #20]
    46f8:	add	r4, sp, #40	; 0x28
    46fc:	mov	r2, r7
    4700:	ldr	r3, [r0]
    4704:	mov	r0, r4
    4708:	bl	18d0 <fread@plt>
    470c:	add	r5, r0, r5
    4710:	cmp	r7, #1
    4714:	blt	4ca8 <ReadDoubleData+0x152c>
    4718:	sub	r0, r8, r9
    471c:	sub	r0, r0, #256	; 0x100
    4720:	ldrsh	r1, [r4], #2
    4724:	subs	r0, r0, #1
    4728:	vmov	s0, r1
    472c:	vcvt.f64.s32	d16, s0
    4730:	vstmia	r6!, {d16}
    4734:	bne	4720 <ReadDoubleData+0xfa4>
    4738:	b	4ca8 <ReadDoubleData+0x152c>
    473c:	sub	r0, r6, #256	; 0x100
    4740:	add	r1, r8, #2048	; 0x800
    4744:	add	r4, sp, #40	; 0x28
    4748:	add	sl, sp, #28
    474c:	mov	r5, #0
    4750:	str	r6, [sp, #4]
    4754:	str	r0, [sp, #12]
    4758:	mov	r0, #0
    475c:	mov	r9, r0
    4760:	ldr	r0, [sp, #20]
    4764:	mov	r6, r1
    4768:	mov	r1, r7
    476c:	mov	r2, #256	; 0x100
    4770:	ldr	r3, [r0]
    4774:	mov	r0, r4
    4778:	bl	18d0 <fread@plt>
    477c:	mov	r1, r8
    4780:	mov	r2, #0
    4784:	ldr	r3, [r4, r2]
    4788:	add	r2, r2, #4
    478c:	cmp	r2, #512	; 0x200
    4790:	str	r3, [sp, #28]
    4794:	vld1.32	{d16[0]}, [sl :32]
    4798:	vmovl.u16	q0, d16
    479c:	vcvt.f64.u32	d17, s1
    47a0:	vcvt.f64.u32	d16, s0
    47a4:	vst1.64	{d16-d17}, [r1]!
    47a8:	bne	4784 <ReadDoubleData+0x1008>
    47ac:	ldr	r2, [sp, #12]
    47b0:	add	r5, r0, r5
    47b4:	add	r0, r9, #256	; 0x100
    47b8:	add	r8, r8, #2048	; 0x800
    47bc:	add	r1, r6, #2048	; 0x800
    47c0:	cmp	r0, r2
    47c4:	blt	475c <ReadDoubleData+0xfe0>
    47c8:	ldr	r8, [sp, #4]
    47cc:	cmp	r0, r8
    47d0:	bge	4cac <ReadDoubleData+0x1530>
    47d4:	mov	r1, r7
    47d8:	sub	r7, r8, r0
    47dc:	ldr	r0, [sp, #20]
    47e0:	add	r4, sp, #40	; 0x28
    47e4:	mov	r2, r7
    47e8:	ldr	r3, [r0]
    47ec:	mov	r0, r4
    47f0:	bl	18d0 <fread@plt>
    47f4:	add	r5, r0, r5
    47f8:	cmp	r7, #1
    47fc:	blt	4ca8 <ReadDoubleData+0x152c>
    4800:	sub	r0, r8, r9
    4804:	sub	r0, r0, #256	; 0x100
    4808:	ldrh	r1, [r4], #2
    480c:	subs	r0, r0, #1
    4810:	vmov	s0, r1
    4814:	vcvt.f64.u32	d16, s0
    4818:	vstmia	r6!, {d16}
    481c:	bne	4808 <ReadDoubleData+0x108c>
    4820:	b	4ca8 <ReadDoubleData+0x152c>
    4824:	add	r1, r8, #2048	; 0x800
    4828:	sub	sl, r6, #256	; 0x100
    482c:	mov	r0, #0
    4830:	add	r4, sp, #40	; 0x28
    4834:	mov	r5, #0
    4838:	str	r6, [sp, #4]
    483c:	mov	r9, r0
    4840:	ldr	r0, [sp, #20]
    4844:	mov	r6, r1
    4848:	mov	r1, r7
    484c:	mov	r2, #256	; 0x100
    4850:	ldr	r3, [r0]
    4854:	mov	r0, r4
    4858:	bl	18d0 <fread@plt>
    485c:	mov	r1, r8
    4860:	mov	r2, #0
    4864:	add	r3, r4, r2
    4868:	add	r2, r2, #8
    486c:	vldr	d0, [r3]
    4870:	cmp	r2, #1024	; 0x400
    4874:	vcvt.f64.s32	d17, s1
    4878:	vcvt.f64.s32	d16, s0
    487c:	vst1.64	{d16-d17}, [r1]!
    4880:	bne	4864 <ReadDoubleData+0x10e8>
    4884:	add	r5, r0, r5
    4888:	add	r0, r9, #256	; 0x100
    488c:	add	r8, r8, #2048	; 0x800
    4890:	add	r1, r6, #2048	; 0x800
    4894:	cmp	r0, sl
    4898:	blt	483c <ReadDoubleData+0x10c0>
    489c:	ldr	r8, [sp, #4]
    48a0:	cmp	r0, r8
    48a4:	bge	4cac <ReadDoubleData+0x1530>
    48a8:	mov	r1, r7
    48ac:	sub	r7, r8, r0
    48b0:	ldr	r0, [sp, #20]
    48b4:	add	r4, sp, #40	; 0x28
    48b8:	mov	r2, r7
    48bc:	ldr	r3, [r0]
    48c0:	mov	r0, r4
    48c4:	bl	18d0 <fread@plt>
    48c8:	add	r5, r0, r5
    48cc:	cmp	r7, #1
    48d0:	blt	4ca8 <ReadDoubleData+0x152c>
    48d4:	sub	r0, r8, r9
    48d8:	sub	r0, r0, #256	; 0x100
    48dc:	ldr	r1, [r4], #4
    48e0:	subs	r0, r0, #1
    48e4:	vmov	s0, r1
    48e8:	vcvt.f64.s32	d16, s0
    48ec:	vstmia	r6!, {d16}
    48f0:	bne	48dc <ReadDoubleData+0x1160>
    48f4:	b	4ca8 <ReadDoubleData+0x152c>
    48f8:	add	r1, r8, #2048	; 0x800
    48fc:	sub	sl, r6, #256	; 0x100
    4900:	mov	r0, #0
    4904:	add	r4, sp, #40	; 0x28
    4908:	mov	r5, #0
    490c:	str	r6, [sp, #4]
    4910:	mov	r9, r0
    4914:	ldr	r0, [sp, #20]
    4918:	mov	r6, r1
    491c:	mov	r1, r7
    4920:	mov	r2, #256	; 0x100
    4924:	ldr	r3, [r0]
    4928:	mov	r0, r4
    492c:	bl	18d0 <fread@plt>
    4930:	mov	r1, r8
    4934:	mov	r2, #0
    4938:	add	r3, r4, r2
    493c:	add	r2, r2, #8
    4940:	vldr	d0, [r3]
    4944:	cmp	r2, #1024	; 0x400
    4948:	vcvt.f64.u32	d17, s1
    494c:	vcvt.f64.u32	d16, s0
    4950:	vst1.64	{d16-d17}, [r1]!
    4954:	bne	4938 <ReadDoubleData+0x11bc>
    4958:	add	r5, r0, r5
    495c:	add	r0, r9, #256	; 0x100
    4960:	add	r8, r8, #2048	; 0x800
    4964:	add	r1, r6, #2048	; 0x800
    4968:	cmp	r0, sl
    496c:	blt	4910 <ReadDoubleData+0x1194>
    4970:	ldr	r8, [sp, #4]
    4974:	cmp	r0, r8
    4978:	bge	4cac <ReadDoubleData+0x1530>
    497c:	mov	r1, r7
    4980:	sub	r7, r8, r0
    4984:	ldr	r0, [sp, #20]
    4988:	add	r4, sp, #40	; 0x28
    498c:	mov	r2, r7
    4990:	ldr	r3, [r0]
    4994:	mov	r0, r4
    4998:	bl	18d0 <fread@plt>
    499c:	add	r5, r0, r5
    49a0:	cmp	r7, #1
    49a4:	blt	4ca8 <ReadDoubleData+0x152c>
    49a8:	sub	r0, r8, r9
    49ac:	sub	r0, r0, #256	; 0x100
    49b0:	ldr	r1, [r4], #4
    49b4:	subs	r0, r0, #1
    49b8:	vmov	s0, r1
    49bc:	vcvt.f64.u32	d16, s0
    49c0:	vstmia	r6!, {d16}
    49c4:	bne	49b0 <ReadDoubleData+0x1234>
    49c8:	b	4ca8 <ReadDoubleData+0x152c>
    49cc:	add	r1, r8, #2048	; 0x800
    49d0:	sub	sl, r6, #256	; 0x100
    49d4:	mov	r0, #0
    49d8:	add	r4, sp, #40	; 0x28
    49dc:	mov	r5, #0
    49e0:	str	r6, [sp, #4]
    49e4:	mov	r9, r0
    49e8:	ldr	r0, [sp, #20]
    49ec:	mov	r6, r1
    49f0:	mov	r1, r7
    49f4:	mov	r2, #256	; 0x100
    49f8:	ldr	r3, [r0]
    49fc:	mov	r0, r4
    4a00:	bl	18d0 <fread@plt>
    4a04:	mov	r1, r8
    4a08:	mov	r2, #0
    4a0c:	add	r3, r4, r2
    4a10:	add	r2, r2, #8
    4a14:	vldr	d0, [r3]
    4a18:	cmp	r2, #1024	; 0x400
    4a1c:	vcvt.f64.f32	d17, s1
    4a20:	vcvt.f64.f32	d16, s0
    4a24:	vst1.64	{d16-d17}, [r1]!
    4a28:	bne	4a0c <ReadDoubleData+0x1290>
    4a2c:	add	r5, r0, r5
    4a30:	add	r0, r9, #256	; 0x100
    4a34:	add	r8, r8, #2048	; 0x800
    4a38:	add	r1, r6, #2048	; 0x800
    4a3c:	cmp	r0, sl
    4a40:	blt	49e4 <ReadDoubleData+0x1268>
    4a44:	ldr	r8, [sp, #4]
    4a48:	cmp	r0, r8
    4a4c:	bge	4cac <ReadDoubleData+0x1530>
    4a50:	mov	r1, r7
    4a54:	sub	r7, r8, r0
    4a58:	ldr	r0, [sp, #20]
    4a5c:	add	r4, sp, #40	; 0x28
    4a60:	mov	r2, r7
    4a64:	ldr	r3, [r0]
    4a68:	mov	r0, r4
    4a6c:	bl	18d0 <fread@plt>
    4a70:	add	r5, r0, r5
    4a74:	cmp	r7, #1
    4a78:	blt	4ca8 <ReadDoubleData+0x152c>
    4a7c:	sub	r0, r8, r9
    4a80:	sub	r0, r0, #256	; 0x100
    4a84:	vldr	s0, [r4]
    4a88:	add	r4, r4, #4
    4a8c:	subs	r0, r0, #1
    4a90:	vcvt.f64.f32	d16, s0
    4a94:	vstmia	r6!, {d16}
    4a98:	bne	4a84 <ReadDoubleData+0x1308>
    4a9c:	b	4ca8 <ReadDoubleData+0x152c>
    4aa0:	sub	r0, r6, #256	; 0x100
    4aa4:	add	r1, r8, #2048	; 0x800
    4aa8:	add	r4, sp, #40	; 0x28
    4aac:	mov	r5, #0
    4ab0:	str	r6, [sp, #4]
    4ab4:	str	r0, [sp, #12]
    4ab8:	mov	r0, #0
    4abc:	mov	r7, r0
    4ac0:	ldr	r0, [sp, #20]
    4ac4:	mov	r9, r1
    4ac8:	ldr	r1, [sp, #16]
    4acc:	mov	r2, #256	; 0x100
    4ad0:	ldr	r3, [r0]
    4ad4:	mov	r0, r4
    4ad8:	bl	18d0 <fread@plt>
    4adc:	mov	sl, r0
    4ae0:	mov	r6, #0
    4ae4:	add	r0, r4, r6
    4ae8:	vld1.64	{d8-d9}, [r0]
    4aec:	vmov.32	r0, d9[0]
    4af0:	vmov.32	r1, d9[1]
    4af4:	bl	4b404 <__aeabi_l2d>
    4af8:	vmov.32	r2, d8[0]
    4afc:	vmov.32	r3, d8[1]
    4b00:	vmov	d9, r0, r1
    4b04:	mov	r0, r2
    4b08:	mov	r1, r3
    4b0c:	bl	4b404 <__aeabi_l2d>
    4b10:	vmov	d8, r0, r1
    4b14:	add	r0, r8, r6
    4b18:	add	r6, r6, #16
    4b1c:	cmp	r6, #2048	; 0x800
    4b20:	vst1.64	{d8-d9}, [r0]
    4b24:	bne	4ae4 <ReadDoubleData+0x1368>
    4b28:	ldr	r2, [sp, #12]
    4b2c:	add	r0, r7, #256	; 0x100
    4b30:	add	r5, sl, r5
    4b34:	add	r8, r8, #2048	; 0x800
    4b38:	add	r1, r9, #2048	; 0x800
    4b3c:	cmp	r0, r2
    4b40:	blt	4abc <ReadDoubleData+0x1340>
    4b44:	ldr	r6, [sp, #4]
    4b48:	cmp	r0, r6
    4b4c:	bge	4ca8 <ReadDoubleData+0x152c>
    4b50:	sub	r8, r6, r0
    4b54:	ldr	r0, [sp, #20]
    4b58:	ldr	r1, [sp, #16]
    4b5c:	add	r4, sp, #40	; 0x28
    4b60:	mov	r2, r8
    4b64:	ldr	r3, [r0]
    4b68:	mov	r0, r4
    4b6c:	bl	18d0 <fread@plt>
    4b70:	add	r5, r0, r5
    4b74:	cmp	r8, #1
    4b78:	blt	4ca8 <ReadDoubleData+0x152c>
    4b7c:	sub	r0, r6, r7
    4b80:	sub	r6, r0, #256	; 0x100
    4b84:	ldrd	r0, [r4]
    4b88:	bl	4b404 <__aeabi_l2d>
    4b8c:	strd	r0, [r9]
    4b90:	add	r9, r9, #8
    4b94:	add	r4, r4, #8
    4b98:	subs	r6, r6, #1
    4b9c:	bne	4b84 <ReadDoubleData+0x1408>
    4ba0:	b	4ca8 <ReadDoubleData+0x152c>
    4ba4:	sub	r0, r6, #256	; 0x100
    4ba8:	add	r1, r8, #2048	; 0x800
    4bac:	add	r4, sp, #40	; 0x28
    4bb0:	mov	r5, #0
    4bb4:	str	r6, [sp, #4]
    4bb8:	str	r0, [sp, #8]
    4bbc:	mov	r0, #0
    4bc0:	str	r0, [sp, #12]
    4bc4:	ldr	r0, [sp, #20]
    4bc8:	mov	r9, r1
    4bcc:	mov	r1, r7
    4bd0:	mov	r2, #256	; 0x100
    4bd4:	ldr	r3, [r0]
    4bd8:	mov	r0, r4
    4bdc:	bl	18d0 <fread@plt>
    4be0:	mov	sl, r0
    4be4:	mov	r6, #0
    4be8:	add	r0, r4, r6
    4bec:	vld1.64	{d8-d9}, [r0]
    4bf0:	vmov.32	r0, d9[0]
    4bf4:	vmov.32	r1, d9[1]
    4bf8:	bl	4b3f0 <__aeabi_ul2d>
    4bfc:	vmov.32	r2, d8[0]
    4c00:	vmov.32	r3, d8[1]
    4c04:	vmov	d9, r0, r1
    4c08:	mov	r0, r2
    4c0c:	mov	r1, r3
    4c10:	bl	4b3f0 <__aeabi_ul2d>
    4c14:	vmov	d8, r0, r1
    4c18:	add	r0, r8, r6
    4c1c:	add	r6, r6, #16
    4c20:	cmp	r6, #2048	; 0x800
    4c24:	vst1.64	{d8-d9}, [r0]
    4c28:	bne	4be8 <ReadDoubleData+0x146c>
    4c2c:	ldr	r6, [sp, #12]
    4c30:	ldr	r2, [sp, #8]
    4c34:	add	r5, sl, r5
    4c38:	add	r8, r8, #2048	; 0x800
    4c3c:	add	r1, r9, #2048	; 0x800
    4c40:	add	r0, r6, #256	; 0x100
    4c44:	cmp	r0, r2
    4c48:	blt	4bc0 <ReadDoubleData+0x1444>
    4c4c:	ldr	r8, [sp, #4]
    4c50:	cmp	r0, r8
    4c54:	bge	4cac <ReadDoubleData+0x1530>
    4c58:	mov	r1, r7
    4c5c:	sub	r7, r8, r0
    4c60:	ldr	r0, [sp, #20]
    4c64:	add	r4, sp, #40	; 0x28
    4c68:	mov	r2, r7
    4c6c:	ldr	r3, [r0]
    4c70:	mov	r0, r4
    4c74:	bl	18d0 <fread@plt>
    4c78:	add	r5, r0, r5
    4c7c:	cmp	r7, #1
    4c80:	blt	4ca8 <ReadDoubleData+0x152c>
    4c84:	sub	r0, r8, r6
    4c88:	sub	r6, r0, #256	; 0x100
    4c8c:	ldrd	r0, [r4]
    4c90:	bl	4b3f0 <__aeabi_ul2d>
    4c94:	strd	r0, [r9]
    4c98:	add	r9, r9, #8
    4c9c:	add	r4, r4, #8
    4ca0:	subs	r6, r6, #1
    4ca4:	bne	4c8c <ReadDoubleData+0x1510>
    4ca8:	ldr	r7, [sp, #16]
    4cac:	mul	r4, r5, r7
    4cb0:	b	37a8 <ReadDoubleData+0x2c>

00004cb4 <ReadCompressedDoubleData>:
    4cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4cb8:	add	fp, sp, #28
    4cbc:	sub	sp, sp, #4
    4cc0:	vpush	{d8-d9}
    4cc4:	sub	sp, sp, #24
    4cc8:	sub	sp, sp, #1024	; 0x400
    4ccc:	str	r0, [sp, #12]
    4cd0:	mov	r0, r3
    4cd4:	mov	r5, r3
    4cd8:	mov	r8, r2
    4cdc:	str	r1, [sp, #8]
    4ce0:	bl	193c <Mat_SizeOf@plt>
    4ce4:	mov	r2, r0
    4ce8:	sub	r0, r5, #1
    4cec:	mov	r9, #0
    4cf0:	cmp	r0, #12
    4cf4:	bhi	5f8c <ReadCompressedDoubleData+0x12d8>
    4cf8:	add	r1, pc, #8
    4cfc:	ldr	r5, [fp, #8]
    4d00:	ldr	r0, [r1, r0, lsl #2]
    4d04:	add	pc, r1, r0
    4d08:	.word	0x00000034
    4d0c:	.word	0x0000007c
    4d10:	.word	0x000000c4
    4d14:	.word	0x00000128
    4d18:	.word	0x0000018c
    4d1c:	.word	0x000001f0
    4d20:	.word	0x00000254
    4d24:	.word	0x00001284
    4d28:	.word	0x000002b4
    4d2c:	.word	0x00001284
    4d30:	.word	0x00001284
    4d34:	.word	0x000002f8
    4d38:	.word	0x00000358
    4d3c:	cmp	r5, #1024	; 0x400
    4d40:	bgt	50c0 <ReadCompressedDoubleData+0x40c>
    4d44:	mul	r9, r2, r5
    4d48:	ldr	r0, [sp, #12]
    4d4c:	ldr	r1, [sp, #8]
    4d50:	add	r6, sp, #16
    4d54:	mov	r2, r6
    4d58:	mov	r3, r9
    4d5c:	bl	31dc <InflateData>
    4d60:	cmp	r5, #1
    4d64:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4d68:	ldrsb	r0, [r6], #1
    4d6c:	subs	r5, r5, #1
    4d70:	vmov	s0, r0
    4d74:	vcvt.f64.s32	d16, s0
    4d78:	vstmia	r8!, {d16}
    4d7c:	bne	4d68 <ReadCompressedDoubleData+0xb4>
    4d80:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4d84:	cmp	r5, #1024	; 0x400
    4d88:	bgt	5188 <ReadCompressedDoubleData+0x4d4>
    4d8c:	mul	r9, r2, r5
    4d90:	ldr	r0, [sp, #12]
    4d94:	ldr	r1, [sp, #8]
    4d98:	add	r6, sp, #16
    4d9c:	mov	r2, r6
    4da0:	mov	r3, r9
    4da4:	bl	31dc <InflateData>
    4da8:	cmp	r5, #1
    4dac:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4db0:	ldrb	r0, [r6], #1
    4db4:	subs	r5, r5, #1
    4db8:	vmov	s0, r0
    4dbc:	vcvt.f64.u32	d16, s0
    4dc0:	vstmia	r8!, {d16}
    4dc4:	bne	4db0 <ReadCompressedDoubleData+0xfc>
    4dc8:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4dcc:	ldr	r0, [sp, #12]
    4dd0:	ldr	r0, [r0, #20]
    4dd4:	cmp	r0, #0
    4dd8:	beq	5250 <ReadCompressedDoubleData+0x59c>
    4ddc:	cmp	r5, #512	; 0x200
    4de0:	bgt	5454 <ReadCompressedDoubleData+0x7a0>
    4de4:	mul	r9, r2, r5
    4de8:	ldr	r0, [sp, #12]
    4dec:	ldr	r1, [sp, #8]
    4df0:	add	r6, sp, #16
    4df4:	mov	r2, r6
    4df8:	mov	r3, r9
    4dfc:	bl	31dc <InflateData>
    4e00:	cmp	r5, #1
    4e04:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4e08:	mov	r0, r6
    4e0c:	bl	1c58 <Mat_int16Swap>
    4e10:	vmov	s0, r0
    4e14:	add	r6, r6, #2
    4e18:	subs	r5, r5, #1
    4e1c:	vcvt.f64.s32	d16, s0
    4e20:	vstr	d16, [r8]
    4e24:	add	r8, r8, #8
    4e28:	bne	4e08 <ReadCompressedDoubleData+0x154>
    4e2c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4e30:	ldr	r0, [sp, #12]
    4e34:	ldr	r0, [r0, #20]
    4e38:	cmp	r0, #0
    4e3c:	beq	5298 <ReadCompressedDoubleData+0x5e4>
    4e40:	cmp	r5, #512	; 0x200
    4e44:	bgt	5524 <ReadCompressedDoubleData+0x870>
    4e48:	mul	r9, r2, r5
    4e4c:	ldr	r0, [sp, #12]
    4e50:	ldr	r1, [sp, #8]
    4e54:	add	r6, sp, #16
    4e58:	mov	r2, r6
    4e5c:	mov	r3, r9
    4e60:	bl	31dc <InflateData>
    4e64:	cmp	r5, #1
    4e68:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4e6c:	mov	r0, r6
    4e70:	bl	1c6c <Mat_uint16Swap>
    4e74:	vmov	s0, r0
    4e78:	add	r6, r6, #2
    4e7c:	subs	r5, r5, #1
    4e80:	vcvt.f64.u32	d16, s0
    4e84:	vstr	d16, [r8]
    4e88:	add	r8, r8, #8
    4e8c:	bne	4e6c <ReadCompressedDoubleData+0x1b8>
    4e90:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4e94:	ldr	r0, [sp, #12]
    4e98:	ldr	r0, [r0, #20]
    4e9c:	cmp	r0, #0
    4ea0:	beq	52e0 <ReadCompressedDoubleData+0x62c>
    4ea4:	cmp	r5, #256	; 0x100
    4ea8:	bgt	55f4 <ReadCompressedDoubleData+0x940>
    4eac:	mul	r9, r2, r5
    4eb0:	ldr	r0, [sp, #12]
    4eb4:	ldr	r1, [sp, #8]
    4eb8:	add	r6, sp, #16
    4ebc:	mov	r2, r6
    4ec0:	mov	r3, r9
    4ec4:	bl	31dc <InflateData>
    4ec8:	cmp	r5, #1
    4ecc:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4ed0:	mov	r0, r6
    4ed4:	bl	1c30 <Mat_int32Swap>
    4ed8:	vmov	s0, r0
    4edc:	add	r6, r6, #4
    4ee0:	subs	r5, r5, #1
    4ee4:	vcvt.f64.s32	d16, s0
    4ee8:	vstr	d16, [r8]
    4eec:	add	r8, r8, #8
    4ef0:	bne	4ed0 <ReadCompressedDoubleData+0x21c>
    4ef4:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4ef8:	ldr	r0, [sp, #12]
    4efc:	ldr	r0, [r0, #20]
    4f00:	cmp	r0, #0
    4f04:	beq	5328 <ReadCompressedDoubleData+0x674>
    4f08:	cmp	r5, #256	; 0x100
    4f0c:	bgt	56c4 <ReadCompressedDoubleData+0xa10>
    4f10:	mul	r9, r2, r5
    4f14:	ldr	r0, [sp, #12]
    4f18:	ldr	r1, [sp, #8]
    4f1c:	add	r6, sp, #16
    4f20:	mov	r2, r6
    4f24:	mov	r3, r9
    4f28:	bl	31dc <InflateData>
    4f2c:	cmp	r5, #1
    4f30:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4f34:	mov	r0, r6
    4f38:	bl	1c44 <Mat_uint32Swap>
    4f3c:	vmov	s0, r0
    4f40:	add	r6, r6, #4
    4f44:	subs	r5, r5, #1
    4f48:	vcvt.f64.u32	d16, s0
    4f4c:	vstr	d16, [r8]
    4f50:	add	r8, r8, #8
    4f54:	bne	4f34 <ReadCompressedDoubleData+0x280>
    4f58:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4f5c:	ldr	r0, [sp, #12]
    4f60:	ldr	r0, [r0, #20]
    4f64:	cmp	r0, #0
    4f68:	beq	5370 <ReadCompressedDoubleData+0x6bc>
    4f6c:	cmp	r5, #256	; 0x100
    4f70:	bgt	5794 <ReadCompressedDoubleData+0xae0>
    4f74:	mul	r9, r2, r5
    4f78:	ldr	r0, [sp, #12]
    4f7c:	ldr	r1, [sp, #8]
    4f80:	add	r6, sp, #16
    4f84:	mov	r2, r6
    4f88:	mov	r3, r9
    4f8c:	bl	31dc <InflateData>
    4f90:	cmp	r5, #1
    4f94:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4f98:	mov	r0, r6
    4f9c:	bl	1c84 <Mat_floatSwap>
    4fa0:	vcvt.f64.f32	d16, s0
    4fa4:	add	r6, r6, #4
    4fa8:	subs	r5, r5, #1
    4fac:	vstr	d16, [r8]
    4fb0:	add	r8, r8, #8
    4fb4:	bne	4f98 <ReadCompressedDoubleData+0x2e4>
    4fb8:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    4fbc:	ldr	r0, [sp, #12]
    4fc0:	mul	r9, r2, r5
    4fc4:	ldr	r1, [sp, #8]
    4fc8:	mov	r2, r8
    4fcc:	mov	r3, r9
    4fd0:	ldr	r4, [r0, #20]
    4fd4:	bl	31dc <InflateData>
    4fd8:	cmp	r4, #0
    4fdc:	beq	5f8c <ReadCompressedDoubleData+0x12d8>
    4fe0:	cmp	r5, #1
    4fe4:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    4fe8:	mov	r0, r8
    4fec:	bl	1cc8 <Mat_doubleSwap>
    4ff0:	add	r8, r8, #8
    4ff4:	subs	r5, r5, #1
    4ff8:	bne	4fe8 <ReadCompressedDoubleData+0x334>
    4ffc:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5000:	ldr	r0, [sp, #12]
    5004:	ldr	r0, [r0, #20]
    5008:	cmp	r0, #0
    500c:	beq	53bc <ReadCompressedDoubleData+0x708>
    5010:	cmp	r5, #128	; 0x80
    5014:	bgt	585c <ReadCompressedDoubleData+0xba8>
    5018:	mul	r9, r2, r5
    501c:	ldr	r0, [sp, #12]
    5020:	ldr	r1, [sp, #8]
    5024:	add	r6, sp, #16
    5028:	mov	r2, r6
    502c:	mov	r3, r9
    5030:	bl	31dc <InflateData>
    5034:	cmp	r5, #1
    5038:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    503c:	mov	r0, r6
    5040:	bl	1bbc <Mat_int64Swap>
    5044:	bl	4b404 <__aeabi_l2d>
    5048:	strd	r0, [r8]
    504c:	add	r6, r6, #8
    5050:	add	r8, r8, #8
    5054:	subs	r5, r5, #1
    5058:	bne	503c <ReadCompressedDoubleData+0x388>
    505c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5060:	ldr	r0, [sp, #12]
    5064:	ldr	r0, [r0, #20]
    5068:	cmp	r0, #0
    506c:	beq	5408 <ReadCompressedDoubleData+0x754>
    5070:	cmp	r5, #128	; 0x80
    5074:	bgt	5928 <ReadCompressedDoubleData+0xc74>
    5078:	mul	r9, r2, r5
    507c:	ldr	r0, [sp, #12]
    5080:	ldr	r1, [sp, #8]
    5084:	add	r6, sp, #16
    5088:	mov	r2, r6
    508c:	mov	r3, r9
    5090:	bl	31dc <InflateData>
    5094:	cmp	r5, #1
    5098:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    509c:	mov	r0, r6
    50a0:	bl	1c0c <Mat_uint64Swap>
    50a4:	bl	4b3f0 <__aeabi_ul2d>
    50a8:	strd	r0, [r8]
    50ac:	add	r6, r6, #8
    50b0:	add	r8, r8, #8
    50b4:	subs	r5, r5, #1
    50b8:	bne	509c <ReadCompressedDoubleData+0x3e8>
    50bc:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    50c0:	add	r0, r8, #8192	; 0x2000
    50c4:	mov	r4, r2
    50c8:	lsl	r9, r2, #10
    50cc:	sub	sl, r5, #1024	; 0x400
    50d0:	mov	r1, #0
    50d4:	add	r6, sp, #16
    50d8:	mov	r5, r1
    50dc:	mov	r7, r0
    50e0:	ldr	r0, [sp, #12]
    50e4:	ldr	r1, [sp, #8]
    50e8:	mov	r2, r6
    50ec:	mov	r3, r9
    50f0:	bl	31dc <InflateData>
    50f4:	mov	r0, r8
    50f8:	mov	r1, #0
    50fc:	add	r2, r6, r1
    5100:	add	r1, r1, #2
    5104:	vld1.16	{d16[0]}, [r2 :16]
    5108:	cmp	r1, #1024	; 0x400
    510c:	vmovl.s8	q8, d16
    5110:	vmovl.s16	q0, d16
    5114:	vcvt.f64.s32	d17, s1
    5118:	vcvt.f64.s32	d16, s0
    511c:	vst1.64	{d16-d17}, [r0]!
    5120:	bne	50fc <ReadCompressedDoubleData+0x448>
    5124:	add	r1, r5, #1024	; 0x400
    5128:	add	r8, r8, #8192	; 0x2000
    512c:	add	r0, r7, #8192	; 0x2000
    5130:	cmp	r1, sl
    5134:	blt	50d8 <ReadCompressedDoubleData+0x424>
    5138:	ldr	r8, [fp, #8]
    513c:	ldr	r0, [sp, #12]
    5140:	sub	r6, r8, r1
    5144:	ldr	r1, [sp, #8]
    5148:	mul	r9, r6, r4
    514c:	add	r4, sp, #16
    5150:	mov	r2, r4
    5154:	mov	r3, r9
    5158:	bl	31dc <InflateData>
    515c:	cmp	r6, #1
    5160:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5164:	sub	r0, r8, r5
    5168:	sub	r0, r0, #1024	; 0x400
    516c:	ldrsb	r1, [r4], #1
    5170:	subs	r0, r0, #1
    5174:	vmov	s0, r1
    5178:	vcvt.f64.s32	d16, s0
    517c:	vstmia	r7!, {d16}
    5180:	bne	516c <ReadCompressedDoubleData+0x4b8>
    5184:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5188:	add	r0, r8, #8192	; 0x2000
    518c:	mov	r4, r2
    5190:	lsl	r9, r2, #10
    5194:	sub	sl, r5, #1024	; 0x400
    5198:	mov	r1, #0
    519c:	add	r6, sp, #16
    51a0:	mov	r5, r1
    51a4:	mov	r7, r0
    51a8:	ldr	r0, [sp, #12]
    51ac:	ldr	r1, [sp, #8]
    51b0:	mov	r2, r6
    51b4:	mov	r3, r9
    51b8:	bl	31dc <InflateData>
    51bc:	mov	r0, r8
    51c0:	mov	r1, #0
    51c4:	add	r2, r6, r1
    51c8:	add	r1, r1, #2
    51cc:	vld1.16	{d16[0]}, [r2 :16]
    51d0:	cmp	r1, #1024	; 0x400
    51d4:	vmovl.u8	q8, d16
    51d8:	vmovl.u16	q0, d16
    51dc:	vcvt.f64.u32	d17, s1
    51e0:	vcvt.f64.u32	d16, s0
    51e4:	vst1.64	{d16-d17}, [r0]!
    51e8:	bne	51c4 <ReadCompressedDoubleData+0x510>
    51ec:	add	r1, r5, #1024	; 0x400
    51f0:	add	r8, r8, #8192	; 0x2000
    51f4:	add	r0, r7, #8192	; 0x2000
    51f8:	cmp	r1, sl
    51fc:	blt	51a0 <ReadCompressedDoubleData+0x4ec>
    5200:	ldr	r8, [fp, #8]
    5204:	ldr	r0, [sp, #12]
    5208:	sub	r6, r8, r1
    520c:	ldr	r1, [sp, #8]
    5210:	mul	r9, r6, r4
    5214:	add	r4, sp, #16
    5218:	mov	r2, r4
    521c:	mov	r3, r9
    5220:	bl	31dc <InflateData>
    5224:	cmp	r6, #1
    5228:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    522c:	sub	r0, r8, r5
    5230:	sub	r0, r0, #1024	; 0x400
    5234:	ldrb	r1, [r4], #1
    5238:	subs	r0, r0, #1
    523c:	vmov	s0, r1
    5240:	vcvt.f64.u32	d16, s0
    5244:	vstmia	r7!, {d16}
    5248:	bne	5234 <ReadCompressedDoubleData+0x580>
    524c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5250:	cmp	r5, #512	; 0x200
    5254:	bgt	59f8 <ReadCompressedDoubleData+0xd44>
    5258:	mul	r9, r2, r5
    525c:	ldr	r0, [sp, #12]
    5260:	ldr	r1, [sp, #8]
    5264:	add	r6, sp, #16
    5268:	mov	r2, r6
    526c:	mov	r3, r9
    5270:	bl	31dc <InflateData>
    5274:	cmp	r5, #1
    5278:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    527c:	ldrsh	r0, [r6], #2
    5280:	subs	r5, r5, #1
    5284:	vmov	s0, r0
    5288:	vcvt.f64.s32	d16, s0
    528c:	vstmia	r8!, {d16}
    5290:	bne	527c <ReadCompressedDoubleData+0x5c8>
    5294:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5298:	cmp	r5, #512	; 0x200
    529c:	bgt	5abc <ReadCompressedDoubleData+0xe08>
    52a0:	mul	r9, r2, r5
    52a4:	ldr	r0, [sp, #12]
    52a8:	ldr	r1, [sp, #8]
    52ac:	add	r6, sp, #16
    52b0:	mov	r2, r6
    52b4:	mov	r3, r9
    52b8:	bl	31dc <InflateData>
    52bc:	cmp	r5, #1
    52c0:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    52c4:	ldrh	r0, [r6], #2
    52c8:	subs	r5, r5, #1
    52cc:	vmov	s0, r0
    52d0:	vcvt.f64.u32	d16, s0
    52d4:	vstmia	r8!, {d16}
    52d8:	bne	52c4 <ReadCompressedDoubleData+0x610>
    52dc:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    52e0:	cmp	r5, #256	; 0x100
    52e4:	bgt	5b80 <ReadCompressedDoubleData+0xecc>
    52e8:	mul	r9, r2, r5
    52ec:	ldr	r0, [sp, #12]
    52f0:	ldr	r1, [sp, #8]
    52f4:	add	r6, sp, #16
    52f8:	mov	r2, r6
    52fc:	mov	r3, r9
    5300:	bl	31dc <InflateData>
    5304:	cmp	r5, #1
    5308:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    530c:	ldr	r0, [r6], #4
    5310:	subs	r5, r5, #1
    5314:	vmov	s0, r0
    5318:	vcvt.f64.s32	d16, s0
    531c:	vstmia	r8!, {d16}
    5320:	bne	530c <ReadCompressedDoubleData+0x658>
    5324:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5328:	cmp	r5, #256	; 0x100
    532c:	bgt	5c40 <ReadCompressedDoubleData+0xf8c>
    5330:	mul	r9, r2, r5
    5334:	ldr	r0, [sp, #12]
    5338:	ldr	r1, [sp, #8]
    533c:	add	r6, sp, #16
    5340:	mov	r2, r6
    5344:	mov	r3, r9
    5348:	bl	31dc <InflateData>
    534c:	cmp	r5, #1
    5350:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5354:	ldr	r0, [r6], #4
    5358:	subs	r5, r5, #1
    535c:	vmov	s0, r0
    5360:	vcvt.f64.u32	d16, s0
    5364:	vstmia	r8!, {d16}
    5368:	bne	5354 <ReadCompressedDoubleData+0x6a0>
    536c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5370:	cmp	r5, #256	; 0x100
    5374:	bgt	5d00 <ReadCompressedDoubleData+0x104c>
    5378:	mul	r9, r2, r5
    537c:	ldr	r0, [sp, #12]
    5380:	ldr	r1, [sp, #8]
    5384:	add	r6, sp, #16
    5388:	mov	r2, r6
    538c:	mov	r3, r9
    5390:	bl	31dc <InflateData>
    5394:	cmp	r5, #1
    5398:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    539c:	vldr	s0, [r6]
    53a0:	add	r6, r6, #4
    53a4:	subs	r5, r5, #1
    53a8:	vcvt.f64.f32	d16, s0
    53ac:	vstr	d16, [r8]
    53b0:	add	r8, r8, #8
    53b4:	bne	539c <ReadCompressedDoubleData+0x6e8>
    53b8:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    53bc:	cmp	r5, #128	; 0x80
    53c0:	bgt	5dc0 <ReadCompressedDoubleData+0x110c>
    53c4:	mul	r9, r2, r5
    53c8:	ldr	r0, [sp, #12]
    53cc:	ldr	r1, [sp, #8]
    53d0:	add	r6, sp, #16
    53d4:	mov	r2, r6
    53d8:	mov	r3, r9
    53dc:	bl	31dc <InflateData>
    53e0:	cmp	r5, #1
    53e4:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    53e8:	ldrd	r0, [r6]
    53ec:	bl	4b404 <__aeabi_l2d>
    53f0:	strd	r0, [r8]
    53f4:	add	r6, r6, #8
    53f8:	add	r8, r8, #8
    53fc:	subs	r5, r5, #1
    5400:	bne	53e8 <ReadCompressedDoubleData+0x734>
    5404:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5408:	cmp	r5, #128	; 0x80
    540c:	bgt	5ea8 <ReadCompressedDoubleData+0x11f4>
    5410:	mul	r9, r2, r5
    5414:	ldr	r0, [sp, #12]
    5418:	ldr	r1, [sp, #8]
    541c:	add	r6, sp, #16
    5420:	mov	r2, r6
    5424:	mov	r3, r9
    5428:	bl	31dc <InflateData>
    542c:	cmp	r5, #1
    5430:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5434:	ldrd	r0, [r6]
    5438:	bl	4b3f0 <__aeabi_ul2d>
    543c:	strd	r0, [r8]
    5440:	add	r6, r6, #8
    5444:	add	r8, r8, #8
    5448:	subs	r5, r5, #1
    544c:	bne	5434 <ReadCompressedDoubleData+0x780>
    5450:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5454:	lsl	r1, r2, #9
    5458:	add	r0, r8, #4096	; 0x1000
    545c:	sub	sl, r5, #512	; 0x200
    5460:	add	r6, sp, #16
    5464:	str	r2, [sp]
    5468:	str	r1, [sp, #4]
    546c:	mov	r1, #0
    5470:	mov	r7, r1
    5474:	mov	r5, r0
    5478:	ldr	r0, [sp, #12]
    547c:	ldr	r1, [sp, #8]
    5480:	ldr	r3, [sp, #4]
    5484:	mov	r2, r6
    5488:	bl	31dc <InflateData>
    548c:	mov	r4, r8
    5490:	mov	r9, #0
    5494:	add	r0, r6, r9
    5498:	bl	1c58 <Mat_int16Swap>
    549c:	vmov	s0, r0
    54a0:	add	r9, r9, #2
    54a4:	cmp	r9, #1024	; 0x400
    54a8:	vcvt.f64.s32	d16, s0
    54ac:	vstmia	r4!, {d16}
    54b0:	bne	5494 <ReadCompressedDoubleData+0x7e0>
    54b4:	add	r1, r7, #512	; 0x200
    54b8:	add	r8, r8, #4096	; 0x1000
    54bc:	add	r0, r5, #4096	; 0x1000
    54c0:	cmp	r1, sl
    54c4:	blt	5470 <ReadCompressedDoubleData+0x7bc>
    54c8:	ldr	r8, [fp, #8]
    54cc:	ldr	r0, [sp]
    54d0:	add	r4, sp, #16
    54d4:	mov	r2, r4
    54d8:	sub	r6, r8, r1
    54dc:	ldr	r1, [sp, #8]
    54e0:	mul	r9, r6, r0
    54e4:	ldr	r0, [sp, #12]
    54e8:	mov	r3, r9
    54ec:	bl	31dc <InflateData>
    54f0:	cmp	r6, #1
    54f4:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    54f8:	sub	r0, r8, r7
    54fc:	sub	r6, r0, #512	; 0x200
    5500:	mov	r0, r4
    5504:	bl	1c58 <Mat_int16Swap>
    5508:	vmov	s0, r0
    550c:	add	r4, r4, #2
    5510:	subs	r6, r6, #1
    5514:	vcvt.f64.s32	d16, s0
    5518:	vstmia	r5!, {d16}
    551c:	bne	5500 <ReadCompressedDoubleData+0x84c>
    5520:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5524:	lsl	r1, r2, #9
    5528:	add	r0, r8, #4096	; 0x1000
    552c:	sub	sl, r5, #512	; 0x200
    5530:	add	r6, sp, #16
    5534:	str	r2, [sp]
    5538:	str	r1, [sp, #4]
    553c:	mov	r1, #0
    5540:	mov	r7, r1
    5544:	mov	r5, r0
    5548:	ldr	r0, [sp, #12]
    554c:	ldr	r1, [sp, #8]
    5550:	ldr	r3, [sp, #4]
    5554:	mov	r2, r6
    5558:	bl	31dc <InflateData>
    555c:	mov	r4, r8
    5560:	mov	r9, #0
    5564:	add	r0, r6, r9
    5568:	bl	1c6c <Mat_uint16Swap>
    556c:	vmov	s0, r0
    5570:	add	r9, r9, #2
    5574:	cmp	r9, #1024	; 0x400
    5578:	vcvt.f64.u32	d16, s0
    557c:	vstmia	r4!, {d16}
    5580:	bne	5564 <ReadCompressedDoubleData+0x8b0>
    5584:	add	r1, r7, #512	; 0x200
    5588:	add	r8, r8, #4096	; 0x1000
    558c:	add	r0, r5, #4096	; 0x1000
    5590:	cmp	r1, sl
    5594:	blt	5540 <ReadCompressedDoubleData+0x88c>
    5598:	ldr	r8, [fp, #8]
    559c:	ldr	r0, [sp]
    55a0:	add	r4, sp, #16
    55a4:	mov	r2, r4
    55a8:	sub	r6, r8, r1
    55ac:	ldr	r1, [sp, #8]
    55b0:	mul	r9, r6, r0
    55b4:	ldr	r0, [sp, #12]
    55b8:	mov	r3, r9
    55bc:	bl	31dc <InflateData>
    55c0:	cmp	r6, #1
    55c4:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    55c8:	sub	r0, r8, r7
    55cc:	sub	r6, r0, #512	; 0x200
    55d0:	mov	r0, r4
    55d4:	bl	1c6c <Mat_uint16Swap>
    55d8:	vmov	s0, r0
    55dc:	add	r4, r4, #2
    55e0:	subs	r6, r6, #1
    55e4:	vcvt.f64.u32	d16, s0
    55e8:	vstmia	r5!, {d16}
    55ec:	bne	55d0 <ReadCompressedDoubleData+0x91c>
    55f0:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    55f4:	lsl	r1, r2, #8
    55f8:	add	r0, r8, #2048	; 0x800
    55fc:	sub	sl, r5, #256	; 0x100
    5600:	add	r6, sp, #16
    5604:	str	r2, [sp]
    5608:	str	r1, [sp, #4]
    560c:	mov	r1, #0
    5610:	mov	r7, r1
    5614:	mov	r5, r0
    5618:	ldr	r0, [sp, #12]
    561c:	ldr	r1, [sp, #8]
    5620:	ldr	r3, [sp, #4]
    5624:	mov	r2, r6
    5628:	bl	31dc <InflateData>
    562c:	mov	r4, r8
    5630:	mov	r9, #0
    5634:	add	r0, r6, r9
    5638:	bl	1c30 <Mat_int32Swap>
    563c:	vmov	s0, r0
    5640:	add	r9, r9, #4
    5644:	cmp	r9, #1024	; 0x400
    5648:	vcvt.f64.s32	d16, s0
    564c:	vstmia	r4!, {d16}
    5650:	bne	5634 <ReadCompressedDoubleData+0x980>
    5654:	add	r1, r7, #256	; 0x100
    5658:	add	r8, r8, #2048	; 0x800
    565c:	add	r0, r5, #2048	; 0x800
    5660:	cmp	r1, sl
    5664:	blt	5610 <ReadCompressedDoubleData+0x95c>
    5668:	ldr	r8, [fp, #8]
    566c:	ldr	r0, [sp]
    5670:	add	r4, sp, #16
    5674:	mov	r2, r4
    5678:	sub	r6, r8, r1
    567c:	ldr	r1, [sp, #8]
    5680:	mul	r9, r6, r0
    5684:	ldr	r0, [sp, #12]
    5688:	mov	r3, r9
    568c:	bl	31dc <InflateData>
    5690:	cmp	r6, #1
    5694:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5698:	sub	r0, r8, r7
    569c:	sub	r6, r0, #256	; 0x100
    56a0:	mov	r0, r4
    56a4:	bl	1c30 <Mat_int32Swap>
    56a8:	vmov	s0, r0
    56ac:	add	r4, r4, #4
    56b0:	subs	r6, r6, #1
    56b4:	vcvt.f64.s32	d16, s0
    56b8:	vstmia	r5!, {d16}
    56bc:	bne	56a0 <ReadCompressedDoubleData+0x9ec>
    56c0:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    56c4:	lsl	r1, r2, #8
    56c8:	add	r0, r8, #2048	; 0x800
    56cc:	sub	sl, r5, #256	; 0x100
    56d0:	add	r6, sp, #16
    56d4:	str	r2, [sp]
    56d8:	str	r1, [sp, #4]
    56dc:	mov	r1, #0
    56e0:	mov	r7, r1
    56e4:	mov	r5, r0
    56e8:	ldr	r0, [sp, #12]
    56ec:	ldr	r1, [sp, #8]
    56f0:	ldr	r3, [sp, #4]
    56f4:	mov	r2, r6
    56f8:	bl	31dc <InflateData>
    56fc:	mov	r4, r8
    5700:	mov	r9, #0
    5704:	add	r0, r6, r9
    5708:	bl	1c44 <Mat_uint32Swap>
    570c:	vmov	s0, r0
    5710:	add	r9, r9, #4
    5714:	cmp	r9, #1024	; 0x400
    5718:	vcvt.f64.u32	d16, s0
    571c:	vstmia	r4!, {d16}
    5720:	bne	5704 <ReadCompressedDoubleData+0xa50>
    5724:	add	r1, r7, #256	; 0x100
    5728:	add	r8, r8, #2048	; 0x800
    572c:	add	r0, r5, #2048	; 0x800
    5730:	cmp	r1, sl
    5734:	blt	56e0 <ReadCompressedDoubleData+0xa2c>
    5738:	ldr	r8, [fp, #8]
    573c:	ldr	r0, [sp]
    5740:	add	r4, sp, #16
    5744:	mov	r2, r4
    5748:	sub	r6, r8, r1
    574c:	ldr	r1, [sp, #8]
    5750:	mul	r9, r6, r0
    5754:	ldr	r0, [sp, #12]
    5758:	mov	r3, r9
    575c:	bl	31dc <InflateData>
    5760:	cmp	r6, #1
    5764:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5768:	sub	r0, r8, r7
    576c:	sub	r6, r0, #256	; 0x100
    5770:	mov	r0, r4
    5774:	bl	1c44 <Mat_uint32Swap>
    5778:	vmov	s0, r0
    577c:	add	r4, r4, #4
    5780:	subs	r6, r6, #1
    5784:	vcvt.f64.u32	d16, s0
    5788:	vstmia	r5!, {d16}
    578c:	bne	5770 <ReadCompressedDoubleData+0xabc>
    5790:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5794:	lsl	r1, r2, #8
    5798:	add	r0, r8, #2048	; 0x800
    579c:	sub	sl, r5, #256	; 0x100
    57a0:	add	r6, sp, #16
    57a4:	str	r2, [sp]
    57a8:	str	r1, [sp, #4]
    57ac:	mov	r1, #0
    57b0:	mov	r5, r1
    57b4:	mov	r7, r0
    57b8:	ldr	r0, [sp, #12]
    57bc:	ldr	r1, [sp, #8]
    57c0:	ldr	r3, [sp, #4]
    57c4:	mov	r2, r6
    57c8:	bl	31dc <InflateData>
    57cc:	mov	r4, r8
    57d0:	mov	r9, #0
    57d4:	add	r0, r6, r9
    57d8:	bl	1c84 <Mat_floatSwap>
    57dc:	vcvt.f64.f32	d16, s0
    57e0:	add	r9, r9, #4
    57e4:	cmp	r9, #1024	; 0x400
    57e8:	vstmia	r4!, {d16}
    57ec:	bne	57d4 <ReadCompressedDoubleData+0xb20>
    57f0:	add	r1, r5, #256	; 0x100
    57f4:	add	r8, r8, #2048	; 0x800
    57f8:	add	r0, r7, #2048	; 0x800
    57fc:	cmp	r1, sl
    5800:	blt	57b0 <ReadCompressedDoubleData+0xafc>
    5804:	ldr	r8, [fp, #8]
    5808:	ldr	r0, [sp]
    580c:	add	r4, sp, #16
    5810:	mov	r2, r4
    5814:	sub	r6, r8, r1
    5818:	ldr	r1, [sp, #8]
    581c:	mul	r9, r6, r0
    5820:	ldr	r0, [sp, #12]
    5824:	mov	r3, r9
    5828:	bl	31dc <InflateData>
    582c:	cmp	r6, #1
    5830:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5834:	sub	r0, r8, r5
    5838:	sub	r5, r0, #256	; 0x100
    583c:	mov	r0, r4
    5840:	bl	1c84 <Mat_floatSwap>
    5844:	vcvt.f64.f32	d16, s0
    5848:	add	r4, r4, #4
    584c:	subs	r5, r5, #1
    5850:	vstmia	r7!, {d16}
    5854:	bne	583c <ReadCompressedDoubleData+0xb88>
    5858:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    585c:	lsl	r1, r2, #7
    5860:	add	r0, r8, #1024	; 0x400
    5864:	mov	r4, r2
    5868:	sub	r9, r5, #128	; 0x80
    586c:	add	r6, sp, #16
    5870:	str	r1, [sp, #4]
    5874:	mov	r1, #0
    5878:	mov	sl, r1
    587c:	mov	r5, r0
    5880:	ldr	r0, [sp, #12]
    5884:	ldr	r1, [sp, #8]
    5888:	ldr	r3, [sp, #4]
    588c:	mov	r2, r6
    5890:	bl	31dc <InflateData>
    5894:	mov	r7, #0
    5898:	add	r0, r6, r7
    589c:	bl	1bbc <Mat_int64Swap>
    58a0:	bl	4b404 <__aeabi_l2d>
    58a4:	mov	r2, r8
    58a8:	str	r0, [r2, r7]!
    58ac:	add	r7, r7, #8
    58b0:	cmp	r7, #1024	; 0x400
    58b4:	str	r1, [r2, #4]
    58b8:	bne	5898 <ReadCompressedDoubleData+0xbe4>
    58bc:	add	r1, sl, #128	; 0x80
    58c0:	add	r8, r8, #1024	; 0x400
    58c4:	add	r0, r5, #1024	; 0x400
    58c8:	cmp	r1, r9
    58cc:	blt	5878 <ReadCompressedDoubleData+0xbc4>
    58d0:	ldr	r7, [fp, #8]
    58d4:	ldr	r0, [sp, #12]
    58d8:	sub	r6, r7, r1
    58dc:	ldr	r1, [sp, #8]
    58e0:	mul	r9, r6, r4
    58e4:	add	r4, sp, #16
    58e8:	mov	r2, r4
    58ec:	mov	r3, r9
    58f0:	bl	31dc <InflateData>
    58f4:	cmp	r6, #1
    58f8:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    58fc:	sub	r0, r7, sl
    5900:	sub	r6, r0, #128	; 0x80
    5904:	mov	r0, r4
    5908:	bl	1bbc <Mat_int64Swap>
    590c:	bl	4b404 <__aeabi_l2d>
    5910:	strd	r0, [r5]
    5914:	add	r5, r5, #8
    5918:	add	r4, r4, #8
    591c:	subs	r6, r6, #1
    5920:	bne	5904 <ReadCompressedDoubleData+0xc50>
    5924:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5928:	lsl	r1, r2, #7
    592c:	add	r0, r8, #1024	; 0x400
    5930:	mov	r4, r2
    5934:	sub	sl, r5, #128	; 0x80
    5938:	add	r6, sp, #16
    593c:	str	r1, [sp, #4]
    5940:	mov	r1, #0
    5944:	mov	r7, r1
    5948:	mov	r9, r0
    594c:	ldr	r0, [sp, #12]
    5950:	ldr	r1, [sp, #8]
    5954:	ldr	r3, [sp, #4]
    5958:	mov	r2, r6
    595c:	bl	31dc <InflateData>
    5960:	mov	r5, #0
    5964:	add	r0, r6, r5
    5968:	bl	1c0c <Mat_uint64Swap>
    596c:	bl	4b3f0 <__aeabi_ul2d>
    5970:	mov	r2, r8
    5974:	str	r0, [r2, r5]!
    5978:	add	r5, r5, #8
    597c:	cmp	r5, #1024	; 0x400
    5980:	str	r1, [r2, #4]
    5984:	bne	5964 <ReadCompressedDoubleData+0xcb0>
    5988:	add	r1, r7, #128	; 0x80
    598c:	add	r8, r8, #1024	; 0x400
    5990:	add	r0, r9, #1024	; 0x400
    5994:	cmp	r1, sl
    5998:	blt	5944 <ReadCompressedDoubleData+0xc90>
    599c:	ldr	r6, [fp, #8]
    59a0:	ldr	r0, [sp, #12]
    59a4:	sub	r5, r6, r1
    59a8:	ldr	r1, [sp, #8]
    59ac:	mul	r3, r5, r4
    59b0:	add	r4, sp, #16
    59b4:	mov	r2, r4
    59b8:	mov	r8, r3
    59bc:	bl	31dc <InflateData>
    59c0:	cmp	r5, #1
    59c4:	blt	59f0 <ReadCompressedDoubleData+0xd3c>
    59c8:	sub	r0, r6, r7
    59cc:	sub	r5, r0, #128	; 0x80
    59d0:	mov	r0, r4
    59d4:	bl	1c0c <Mat_uint64Swap>
    59d8:	bl	4b3f0 <__aeabi_ul2d>
    59dc:	strd	r0, [r9]
    59e0:	add	r9, r9, #8
    59e4:	add	r4, r4, #8
    59e8:	subs	r5, r5, #1
    59ec:	bne	59d0 <ReadCompressedDoubleData+0xd1c>
    59f0:	mov	r9, r8
    59f4:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    59f8:	add	r0, r8, #4096	; 0x1000
    59fc:	mov	r4, r2
    5a00:	lsl	r9, r2, #9
    5a04:	sub	sl, r5, #512	; 0x200
    5a08:	mov	r1, #0
    5a0c:	add	r6, sp, #16
    5a10:	mov	r5, r1
    5a14:	mov	r7, r0
    5a18:	ldr	r0, [sp, #12]
    5a1c:	ldr	r1, [sp, #8]
    5a20:	mov	r2, r6
    5a24:	mov	r3, r9
    5a28:	bl	31dc <InflateData>
    5a2c:	mov	r0, r8
    5a30:	mov	r1, #0
    5a34:	add	r2, r6, r1
    5a38:	add	r1, r1, #4
    5a3c:	vld1.32	{d16[0]}, [r2 :32]
    5a40:	cmp	r1, #1024	; 0x400
    5a44:	vmovl.s16	q0, d16
    5a48:	vcvt.f64.s32	d17, s1
    5a4c:	vcvt.f64.s32	d16, s0
    5a50:	vst1.64	{d16-d17}, [r0]!
    5a54:	bne	5a34 <ReadCompressedDoubleData+0xd80>
    5a58:	add	r1, r5, #512	; 0x200
    5a5c:	add	r8, r8, #4096	; 0x1000
    5a60:	add	r0, r7, #4096	; 0x1000
    5a64:	cmp	r1, sl
    5a68:	blt	5a10 <ReadCompressedDoubleData+0xd5c>
    5a6c:	ldr	r8, [fp, #8]
    5a70:	ldr	r0, [sp, #12]
    5a74:	sub	r6, r8, r1
    5a78:	ldr	r1, [sp, #8]
    5a7c:	mul	r9, r6, r4
    5a80:	add	r4, sp, #16
    5a84:	mov	r2, r4
    5a88:	mov	r3, r9
    5a8c:	bl	31dc <InflateData>
    5a90:	cmp	r6, #1
    5a94:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5a98:	sub	r0, r8, r5
    5a9c:	sub	r0, r0, #512	; 0x200
    5aa0:	ldrsh	r1, [r4], #2
    5aa4:	subs	r0, r0, #1
    5aa8:	vmov	s0, r1
    5aac:	vcvt.f64.s32	d16, s0
    5ab0:	vstmia	r7!, {d16}
    5ab4:	bne	5aa0 <ReadCompressedDoubleData+0xdec>
    5ab8:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5abc:	add	r0, r8, #4096	; 0x1000
    5ac0:	mov	r4, r2
    5ac4:	lsl	r9, r2, #9
    5ac8:	sub	sl, r5, #512	; 0x200
    5acc:	mov	r1, #0
    5ad0:	add	r6, sp, #16
    5ad4:	mov	r5, r1
    5ad8:	mov	r7, r0
    5adc:	ldr	r0, [sp, #12]
    5ae0:	ldr	r1, [sp, #8]
    5ae4:	mov	r2, r6
    5ae8:	mov	r3, r9
    5aec:	bl	31dc <InflateData>
    5af0:	mov	r0, r8
    5af4:	mov	r1, #0
    5af8:	add	r2, r6, r1
    5afc:	add	r1, r1, #4
    5b00:	vld1.32	{d16[0]}, [r2 :32]
    5b04:	cmp	r1, #1024	; 0x400
    5b08:	vmovl.u16	q0, d16
    5b0c:	vcvt.f64.u32	d17, s1
    5b10:	vcvt.f64.u32	d16, s0
    5b14:	vst1.64	{d16-d17}, [r0]!
    5b18:	bne	5af8 <ReadCompressedDoubleData+0xe44>
    5b1c:	add	r1, r5, #512	; 0x200
    5b20:	add	r8, r8, #4096	; 0x1000
    5b24:	add	r0, r7, #4096	; 0x1000
    5b28:	cmp	r1, sl
    5b2c:	blt	5ad4 <ReadCompressedDoubleData+0xe20>
    5b30:	ldr	r8, [fp, #8]
    5b34:	ldr	r0, [sp, #12]
    5b38:	sub	r6, r8, r1
    5b3c:	ldr	r1, [sp, #8]
    5b40:	mul	r9, r6, r4
    5b44:	add	r4, sp, #16
    5b48:	mov	r2, r4
    5b4c:	mov	r3, r9
    5b50:	bl	31dc <InflateData>
    5b54:	cmp	r6, #1
    5b58:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5b5c:	sub	r0, r8, r5
    5b60:	sub	r0, r0, #512	; 0x200
    5b64:	ldrh	r1, [r4], #2
    5b68:	subs	r0, r0, #1
    5b6c:	vmov	s0, r1
    5b70:	vcvt.f64.u32	d16, s0
    5b74:	vstmia	r7!, {d16}
    5b78:	bne	5b64 <ReadCompressedDoubleData+0xeb0>
    5b7c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5b80:	add	r0, r8, #2048	; 0x800
    5b84:	mov	r4, r2
    5b88:	lsl	r9, r2, #8
    5b8c:	sub	sl, r5, #256	; 0x100
    5b90:	mov	r1, #0
    5b94:	add	r6, sp, #16
    5b98:	mov	r5, r1
    5b9c:	mov	r7, r0
    5ba0:	ldr	r0, [sp, #12]
    5ba4:	ldr	r1, [sp, #8]
    5ba8:	mov	r2, r6
    5bac:	mov	r3, r9
    5bb0:	bl	31dc <InflateData>
    5bb4:	mov	r0, r8
    5bb8:	mov	r1, #0
    5bbc:	add	r2, r6, r1
    5bc0:	add	r1, r1, #8
    5bc4:	vldr	d0, [r2]
    5bc8:	cmp	r1, #1024	; 0x400
    5bcc:	vcvt.f64.s32	d17, s1
    5bd0:	vcvt.f64.s32	d16, s0
    5bd4:	vst1.64	{d16-d17}, [r0]!
    5bd8:	bne	5bbc <ReadCompressedDoubleData+0xf08>
    5bdc:	add	r1, r5, #256	; 0x100
    5be0:	add	r8, r8, #2048	; 0x800
    5be4:	add	r0, r7, #2048	; 0x800
    5be8:	cmp	r1, sl
    5bec:	blt	5b98 <ReadCompressedDoubleData+0xee4>
    5bf0:	ldr	r8, [fp, #8]
    5bf4:	ldr	r0, [sp, #12]
    5bf8:	sub	r6, r8, r1
    5bfc:	ldr	r1, [sp, #8]
    5c00:	mul	r9, r6, r4
    5c04:	add	r4, sp, #16
    5c08:	mov	r2, r4
    5c0c:	mov	r3, r9
    5c10:	bl	31dc <InflateData>
    5c14:	cmp	r6, #1
    5c18:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5c1c:	sub	r0, r8, r5
    5c20:	sub	r0, r0, #256	; 0x100
    5c24:	ldr	r1, [r4], #4
    5c28:	subs	r0, r0, #1
    5c2c:	vmov	s0, r1
    5c30:	vcvt.f64.s32	d16, s0
    5c34:	vstmia	r7!, {d16}
    5c38:	bne	5c24 <ReadCompressedDoubleData+0xf70>
    5c3c:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5c40:	add	r0, r8, #2048	; 0x800
    5c44:	mov	r4, r2
    5c48:	lsl	r9, r2, #8
    5c4c:	sub	sl, r5, #256	; 0x100
    5c50:	mov	r1, #0
    5c54:	add	r6, sp, #16
    5c58:	mov	r5, r1
    5c5c:	mov	r7, r0
    5c60:	ldr	r0, [sp, #12]
    5c64:	ldr	r1, [sp, #8]
    5c68:	mov	r2, r6
    5c6c:	mov	r3, r9
    5c70:	bl	31dc <InflateData>
    5c74:	mov	r0, r8
    5c78:	mov	r1, #0
    5c7c:	add	r2, r6, r1
    5c80:	add	r1, r1, #8
    5c84:	vldr	d0, [r2]
    5c88:	cmp	r1, #1024	; 0x400
    5c8c:	vcvt.f64.u32	d17, s1
    5c90:	vcvt.f64.u32	d16, s0
    5c94:	vst1.64	{d16-d17}, [r0]!
    5c98:	bne	5c7c <ReadCompressedDoubleData+0xfc8>
    5c9c:	add	r1, r5, #256	; 0x100
    5ca0:	add	r8, r8, #2048	; 0x800
    5ca4:	add	r0, r7, #2048	; 0x800
    5ca8:	cmp	r1, sl
    5cac:	blt	5c58 <ReadCompressedDoubleData+0xfa4>
    5cb0:	ldr	r8, [fp, #8]
    5cb4:	ldr	r0, [sp, #12]
    5cb8:	sub	r6, r8, r1
    5cbc:	ldr	r1, [sp, #8]
    5cc0:	mul	r9, r6, r4
    5cc4:	add	r4, sp, #16
    5cc8:	mov	r2, r4
    5ccc:	mov	r3, r9
    5cd0:	bl	31dc <InflateData>
    5cd4:	cmp	r6, #1
    5cd8:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5cdc:	sub	r0, r8, r5
    5ce0:	sub	r0, r0, #256	; 0x100
    5ce4:	ldr	r1, [r4], #4
    5ce8:	subs	r0, r0, #1
    5cec:	vmov	s0, r1
    5cf0:	vcvt.f64.u32	d16, s0
    5cf4:	vstmia	r7!, {d16}
    5cf8:	bne	5ce4 <ReadCompressedDoubleData+0x1030>
    5cfc:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5d00:	add	r0, r8, #2048	; 0x800
    5d04:	mov	r4, r2
    5d08:	lsl	r9, r2, #8
    5d0c:	sub	sl, r5, #256	; 0x100
    5d10:	mov	r1, #0
    5d14:	add	r6, sp, #16
    5d18:	mov	r5, r1
    5d1c:	mov	r7, r0
    5d20:	ldr	r0, [sp, #12]
    5d24:	ldr	r1, [sp, #8]
    5d28:	mov	r2, r6
    5d2c:	mov	r3, r9
    5d30:	bl	31dc <InflateData>
    5d34:	mov	r0, r8
    5d38:	mov	r1, #0
    5d3c:	add	r2, r6, r1
    5d40:	add	r1, r1, #8
    5d44:	vldr	d0, [r2]
    5d48:	cmp	r1, #1024	; 0x400
    5d4c:	vcvt.f64.f32	d17, s1
    5d50:	vcvt.f64.f32	d16, s0
    5d54:	vst1.64	{d16-d17}, [r0]!
    5d58:	bne	5d3c <ReadCompressedDoubleData+0x1088>
    5d5c:	add	r1, r5, #256	; 0x100
    5d60:	add	r8, r8, #2048	; 0x800
    5d64:	add	r0, r7, #2048	; 0x800
    5d68:	cmp	r1, sl
    5d6c:	blt	5d18 <ReadCompressedDoubleData+0x1064>
    5d70:	ldr	r8, [fp, #8]
    5d74:	ldr	r0, [sp, #12]
    5d78:	sub	r6, r8, r1
    5d7c:	ldr	r1, [sp, #8]
    5d80:	mul	r9, r6, r4
    5d84:	add	r4, sp, #16
    5d88:	mov	r2, r4
    5d8c:	mov	r3, r9
    5d90:	bl	31dc <InflateData>
    5d94:	cmp	r6, #1
    5d98:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5d9c:	sub	r0, r8, r5
    5da0:	sub	r0, r0, #256	; 0x100
    5da4:	vldr	s0, [r4]
    5da8:	add	r4, r4, #4
    5dac:	subs	r0, r0, #1
    5db0:	vcvt.f64.f32	d16, s0
    5db4:	vstmia	r7!, {d16}
    5db8:	bne	5da4 <ReadCompressedDoubleData+0x10f0>
    5dbc:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5dc0:	lsl	r1, r2, #7
    5dc4:	sub	r9, r5, #128	; 0x80
    5dc8:	add	r0, r8, #1024	; 0x400
    5dcc:	mov	r4, r2
    5dd0:	add	r5, sp, #16
    5dd4:	str	r1, [sp, #4]
    5dd8:	mov	r1, #0
    5ddc:	mov	sl, r1
    5de0:	mov	r6, r0
    5de4:	ldr	r0, [sp, #12]
    5de8:	ldr	r1, [sp, #8]
    5dec:	ldr	r3, [sp, #4]
    5df0:	mov	r2, r5
    5df4:	bl	31dc <InflateData>
    5df8:	mov	r7, #0
    5dfc:	add	r0, r5, r7
    5e00:	vld1.64	{d8-d9}, [r0]
    5e04:	vmov.32	r0, d9[0]
    5e08:	vmov.32	r1, d9[1]
    5e0c:	bl	4b404 <__aeabi_l2d>
    5e10:	vmov.32	r2, d8[0]
    5e14:	vmov.32	r3, d8[1]
    5e18:	vmov	d9, r0, r1
    5e1c:	mov	r0, r2
    5e20:	mov	r1, r3
    5e24:	bl	4b404 <__aeabi_l2d>
    5e28:	vmov	d8, r0, r1
    5e2c:	add	r0, r8, r7
    5e30:	add	r7, r7, #16
    5e34:	cmp	r7, #1024	; 0x400
    5e38:	vst1.64	{d8-d9}, [r0]
    5e3c:	bne	5dfc <ReadCompressedDoubleData+0x1148>
    5e40:	add	r1, sl, #128	; 0x80
    5e44:	add	r8, r8, #1024	; 0x400
    5e48:	add	r0, r6, #1024	; 0x400
    5e4c:	cmp	r1, r9
    5e50:	blt	5ddc <ReadCompressedDoubleData+0x1128>
    5e54:	ldr	r7, [fp, #8]
    5e58:	ldr	r0, [sp, #12]
    5e5c:	sub	r5, r7, r1
    5e60:	ldr	r1, [sp, #8]
    5e64:	mul	r9, r5, r4
    5e68:	add	r4, sp, #16
    5e6c:	mov	r2, r4
    5e70:	mov	r3, r9
    5e74:	bl	31dc <InflateData>
    5e78:	cmp	r5, #1
    5e7c:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5e80:	sub	r0, r7, sl
    5e84:	sub	r5, r0, #128	; 0x80
    5e88:	ldrd	r0, [r4]
    5e8c:	bl	4b404 <__aeabi_l2d>
    5e90:	strd	r0, [r6]
    5e94:	add	r6, r6, #8
    5e98:	add	r4, r4, #8
    5e9c:	subs	r5, r5, #1
    5ea0:	bne	5e88 <ReadCompressedDoubleData+0x11d4>
    5ea4:	b	5f8c <ReadCompressedDoubleData+0x12d8>
    5ea8:	lsl	r1, r2, #7
    5eac:	sub	r9, r5, #128	; 0x80
    5eb0:	add	r0, r8, #1024	; 0x400
    5eb4:	mov	r4, r2
    5eb8:	add	r5, sp, #16
    5ebc:	str	r1, [sp, #4]
    5ec0:	mov	r1, #0
    5ec4:	mov	sl, r1
    5ec8:	mov	r6, r0
    5ecc:	ldr	r0, [sp, #12]
    5ed0:	ldr	r1, [sp, #8]
    5ed4:	ldr	r3, [sp, #4]
    5ed8:	mov	r2, r5
    5edc:	bl	31dc <InflateData>
    5ee0:	mov	r7, #0
    5ee4:	add	r0, r5, r7
    5ee8:	vld1.64	{d8-d9}, [r0]
    5eec:	vmov.32	r0, d9[0]
    5ef0:	vmov.32	r1, d9[1]
    5ef4:	bl	4b3f0 <__aeabi_ul2d>
    5ef8:	vmov.32	r2, d8[0]
    5efc:	vmov.32	r3, d8[1]
    5f00:	vmov	d9, r0, r1
    5f04:	mov	r0, r2
    5f08:	mov	r1, r3
    5f0c:	bl	4b3f0 <__aeabi_ul2d>
    5f10:	vmov	d8, r0, r1
    5f14:	add	r0, r8, r7
    5f18:	add	r7, r7, #16
    5f1c:	cmp	r7, #1024	; 0x400
    5f20:	vst1.64	{d8-d9}, [r0]
    5f24:	bne	5ee4 <ReadCompressedDoubleData+0x1230>
    5f28:	add	r1, sl, #128	; 0x80
    5f2c:	add	r8, r8, #1024	; 0x400
    5f30:	add	r0, r6, #1024	; 0x400
    5f34:	cmp	r1, r9
    5f38:	blt	5ec4 <ReadCompressedDoubleData+0x1210>
    5f3c:	ldr	r7, [fp, #8]
    5f40:	ldr	r0, [sp, #12]
    5f44:	sub	r5, r7, r1
    5f48:	ldr	r1, [sp, #8]
    5f4c:	mul	r9, r5, r4
    5f50:	add	r4, sp, #16
    5f54:	mov	r2, r4
    5f58:	mov	r3, r9
    5f5c:	bl	31dc <InflateData>
    5f60:	cmp	r5, #1
    5f64:	blt	5f8c <ReadCompressedDoubleData+0x12d8>
    5f68:	sub	r0, r7, sl
    5f6c:	sub	r5, r0, #128	; 0x80
    5f70:	ldrd	r0, [r4]
    5f74:	bl	4b3f0 <__aeabi_ul2d>
    5f78:	strd	r0, [r6]
    5f7c:	add	r6, r6, #8
    5f80:	add	r4, r4, #8
    5f84:	subs	r5, r5, #1
    5f88:	bne	5f70 <ReadCompressedDoubleData+0x12bc>
    5f8c:	mov	r0, r9
    5f90:	sub	sp, fp, #48	; 0x30
    5f94:	vpop	{d8-d9}
    5f98:	add	sp, sp, #4
    5f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005fa0 <ReadSingleData>:
    5fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5fa4:	add	fp, sp, #28
    5fa8:	sub	sp, sp, #4
    5fac:	vpush	{d8-d9}
    5fb0:	sub	sp, sp, #56	; 0x38
    5fb4:	sub	sp, sp, #2048	; 0x800
    5fb8:	mov	r4, r0
    5fbc:	mov	r0, #0
    5fc0:	cmp	r4, #0
    5fc4:	movne	r9, r1
    5fc8:	cmpne	r1, #0
    5fcc:	bne	5fe0 <ReadSingleData+0x40>
    5fd0:	sub	sp, fp, #48	; 0x30
    5fd4:	vpop	{d8-d9}
    5fd8:	add	sp, sp, #4
    5fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5fe0:	ldr	r1, [r4]
    5fe4:	cmp	r1, #0
    5fe8:	beq	5fd0 <ReadSingleData+0x30>
    5fec:	mov	r0, r2
    5ff0:	mov	r7, r3
    5ff4:	mov	r6, r2
    5ff8:	bl	193c <Mat_SizeOf@plt>
    5ffc:	mov	sl, r0
    6000:	sub	r0, r6, #1
    6004:	mov	r5, #0
    6008:	str	r4, [sp, #20]
    600c:	cmp	r0, #11
    6010:	str	sl, [sp, #16]
    6014:	bhi	73c0 <ReadSingleData+0x1420>
    6018:	add	r1, pc, #4
    601c:	ldr	r0, [r1, r0, lsl #2]
    6020:	add	pc, r1, r0
    6024:	.word	0x00000030
    6028:	.word	0x00000078
    602c:	.word	0x000000c0
    6030:	.word	0x00000120
    6034:	.word	0x00000180
    6038:	.word	0x000001e0
    603c:	.word	0x00000240
    6040:	.word	0x0000139c
    6044:	.word	0x00000298
    6048:	.word	0x0000139c
    604c:	.word	0x0000139c
    6050:	.word	0x000002f4
    6054:	cmp	r7, #256	; 0x100
    6058:	bgt	637c <ReadSingleData+0x3dc>
    605c:	ldr	r3, [r4]
    6060:	add	r4, sp, #48	; 0x30
    6064:	mov	r1, sl
    6068:	mov	r2, r7
    606c:	mov	r0, r4
    6070:	bl	18d0 <fread@plt>
    6074:	mov	r5, r0
    6078:	cmp	r7, #1
    607c:	blt	7630 <ReadSingleData+0x1690>
    6080:	ldrsb	r0, [r4], #1
    6084:	subs	r7, r7, #1
    6088:	vmov	s0, r0
    608c:	vcvt.f32.s32	s0, s0
    6090:	vstmia	r9!, {s0}
    6094:	bne	6080 <ReadSingleData+0xe0>
    6098:	b	7630 <ReadSingleData+0x1690>
    609c:	cmp	r7, #256	; 0x100
    60a0:	bgt	645c <ReadSingleData+0x4bc>
    60a4:	ldr	r3, [r4]
    60a8:	add	r4, sp, #48	; 0x30
    60ac:	mov	r1, sl
    60b0:	mov	r2, r7
    60b4:	mov	r0, r4
    60b8:	bl	18d0 <fread@plt>
    60bc:	mov	r5, r0
    60c0:	cmp	r7, #1
    60c4:	blt	7630 <ReadSingleData+0x1690>
    60c8:	ldrb	r0, [r4], #1
    60cc:	subs	r7, r7, #1
    60d0:	vmov	s0, r0
    60d4:	vcvt.f32.u32	s0, s0
    60d8:	vstmia	r9!, {s0}
    60dc:	bne	60c8 <ReadSingleData+0x128>
    60e0:	b	7630 <ReadSingleData+0x1690>
    60e4:	ldr	r0, [r4, #20]
    60e8:	cmp	r0, #0
    60ec:	beq	653c <ReadSingleData+0x59c>
    60f0:	cmp	r7, #256	; 0x100
    60f4:	bgt	6738 <ReadSingleData+0x798>
    60f8:	ldr	r3, [r4]
    60fc:	add	r4, sp, #48	; 0x30
    6100:	mov	r1, sl
    6104:	mov	r2, r7
    6108:	mov	r0, r4
    610c:	bl	18d0 <fread@plt>
    6110:	mov	r5, r0
    6114:	cmp	r7, #1
    6118:	blt	7630 <ReadSingleData+0x1690>
    611c:	mov	r0, r4
    6120:	bl	1c58 <Mat_int16Swap>
    6124:	vmov	s0, r0
    6128:	add	r4, r4, #2
    612c:	subs	r7, r7, #1
    6130:	vcvt.f32.s32	s0, s0
    6134:	vstr	s0, [r9]
    6138:	add	r9, r9, #4
    613c:	bne	611c <ReadSingleData+0x17c>
    6140:	b	7630 <ReadSingleData+0x1690>
    6144:	ldr	r0, [r4, #20]
    6148:	cmp	r0, #0
    614c:	beq	6584 <ReadSingleData+0x5e4>
    6150:	cmp	r7, #256	; 0x100
    6154:	bgt	682c <ReadSingleData+0x88c>
    6158:	ldr	r3, [r4]
    615c:	add	r4, sp, #48	; 0x30
    6160:	mov	r1, sl
    6164:	mov	r2, r7
    6168:	mov	r0, r4
    616c:	bl	18d0 <fread@plt>
    6170:	mov	r5, r0
    6174:	cmp	r7, #1
    6178:	blt	7630 <ReadSingleData+0x1690>
    617c:	mov	r0, r4
    6180:	bl	1c6c <Mat_uint16Swap>
    6184:	vmov	s0, r0
    6188:	add	r4, r4, #2
    618c:	subs	r7, r7, #1
    6190:	vcvt.f32.u32	s0, s0
    6194:	vstr	s0, [r9]
    6198:	add	r9, r9, #4
    619c:	bne	617c <ReadSingleData+0x1dc>
    61a0:	b	7630 <ReadSingleData+0x1690>
    61a4:	ldr	r0, [r4, #20]
    61a8:	cmp	r0, #0
    61ac:	beq	65cc <ReadSingleData+0x62c>
    61b0:	cmp	r7, #256	; 0x100
    61b4:	bgt	6920 <ReadSingleData+0x980>
    61b8:	ldr	r3, [r4]
    61bc:	add	r4, sp, #48	; 0x30
    61c0:	mov	r1, sl
    61c4:	mov	r2, r7
    61c8:	mov	r0, r4
    61cc:	bl	18d0 <fread@plt>
    61d0:	mov	r5, r0
    61d4:	cmp	r7, #1
    61d8:	blt	7630 <ReadSingleData+0x1690>
    61dc:	mov	r0, r4
    61e0:	bl	1c30 <Mat_int32Swap>
    61e4:	vmov	s0, r0
    61e8:	add	r4, r4, #4
    61ec:	subs	r7, r7, #1
    61f0:	vcvt.f32.s32	s0, s0
    61f4:	vstr	s0, [r9]
    61f8:	add	r9, r9, #4
    61fc:	bne	61dc <ReadSingleData+0x23c>
    6200:	b	7630 <ReadSingleData+0x1690>
    6204:	ldr	r0, [r4, #20]
    6208:	cmp	r0, #0
    620c:	beq	6614 <ReadSingleData+0x674>
    6210:	cmp	r7, #256	; 0x100
    6214:	bgt	6a0c <ReadSingleData+0xa6c>
    6218:	ldr	r3, [r4]
    621c:	add	r4, sp, #48	; 0x30
    6220:	mov	r1, sl
    6224:	mov	r2, r7
    6228:	mov	r0, r4
    622c:	bl	18d0 <fread@plt>
    6230:	mov	r5, r0
    6234:	cmp	r7, #1
    6238:	blt	7630 <ReadSingleData+0x1690>
    623c:	mov	r0, r4
    6240:	bl	1c44 <Mat_uint32Swap>
    6244:	vmov	s0, r0
    6248:	add	r4, r4, #4
    624c:	subs	r7, r7, #1
    6250:	vcvt.f32.u32	s0, s0
    6254:	vstr	s0, [r9]
    6258:	add	r9, r9, #4
    625c:	bne	623c <ReadSingleData+0x29c>
    6260:	b	7630 <ReadSingleData+0x1690>
    6264:	ldr	r0, [r4, #20]
    6268:	cmp	r0, #0
    626c:	beq	665c <ReadSingleData+0x6bc>
    6270:	cmp	r7, #256	; 0x100
    6274:	bgt	6af8 <ReadSingleData+0xb58>
    6278:	ldr	r3, [r4]
    627c:	add	r4, sp, #48	; 0x30
    6280:	mov	r1, sl
    6284:	mov	r2, r7
    6288:	mov	r0, r4
    628c:	bl	18d0 <fread@plt>
    6290:	mov	r5, r0
    6294:	cmp	r7, #1
    6298:	blt	7630 <ReadSingleData+0x1690>
    629c:	mov	r0, r4
    62a0:	bl	1c84 <Mat_floatSwap>
    62a4:	vstr	s0, [r9]
    62a8:	add	r4, r4, #4
    62ac:	add	r9, r9, #4
    62b0:	subs	r7, r7, #1
    62b4:	bne	629c <ReadSingleData+0x2fc>
    62b8:	b	7630 <ReadSingleData+0x1690>
    62bc:	ldr	r0, [r4, #20]
    62c0:	cmp	r0, #0
    62c4:	beq	6694 <ReadSingleData+0x6f4>
    62c8:	cmp	r7, #256	; 0x100
    62cc:	bgt	6bd4 <ReadSingleData+0xc34>
    62d0:	ldr	r3, [r4]
    62d4:	add	r4, sp, #48	; 0x30
    62d8:	mov	r1, sl
    62dc:	mov	r2, r7
    62e0:	mov	r0, r4
    62e4:	bl	18d0 <fread@plt>
    62e8:	mov	r5, r0
    62ec:	cmp	r7, #1
    62f0:	blt	7630 <ReadSingleData+0x1690>
    62f4:	mov	r0, r4
    62f8:	bl	1cc8 <Mat_doubleSwap>
    62fc:	vcvt.f32.f64	s0, d0
    6300:	add	r4, r4, #8
    6304:	subs	r7, r7, #1
    6308:	vstr	s0, [r9]
    630c:	add	r9, r9, #4
    6310:	bne	62f4 <ReadSingleData+0x354>
    6314:	b	7630 <ReadSingleData+0x1690>
    6318:	ldr	r0, [r4, #20]
    631c:	cmp	r0, #0
    6320:	beq	66e0 <ReadSingleData+0x740>
    6324:	cmp	r7, #256	; 0x100
    6328:	bgt	6cc0 <ReadSingleData+0xd20>
    632c:	ldr	r3, [r4]
    6330:	add	r4, sp, #48	; 0x30
    6334:	mov	r1, sl
    6338:	mov	r2, r7
    633c:	mov	r0, r4
    6340:	bl	18d0 <fread@plt>
    6344:	mov	r5, r0
    6348:	cmp	r7, #1
    634c:	blt	73b0 <ReadSingleData+0x1410>
    6350:	str	r6, [sp]
    6354:	mov	r6, r9
    6358:	mov	r8, r7
    635c:	mov	r0, r4
    6360:	bl	1bbc <Mat_int64Swap>
    6364:	bl	4b638 <__aeabi_l2f>
    6368:	str	r0, [r6], #4
    636c:	add	r4, r4, #8
    6370:	subs	r7, r7, #1
    6374:	bne	635c <ReadSingleData+0x3bc>
    6378:	b	6730 <ReadSingleData+0x790>
    637c:	add	r1, r9, #1024	; 0x400
    6380:	str	r7, [sp, #4]
    6384:	sub	r8, r7, #256	; 0x100
    6388:	mov	r0, #0
    638c:	add	r4, sp, #48	; 0x30
    6390:	add	r7, sp, #40	; 0x28
    6394:	mov	r5, #0
    6398:	mov	sl, r0
    639c:	ldr	r0, [sp, #20]
    63a0:	mov	r6, r1
    63a4:	ldr	r1, [sp, #16]
    63a8:	mov	r2, #256	; 0x100
    63ac:	ldr	r3, [r0]
    63b0:	mov	r0, r4
    63b4:	bl	18d0 <fread@plt>
    63b8:	mov	r1, r9
    63bc:	mov	r2, #0
    63c0:	ldr	r3, [r4, r2]
    63c4:	add	r2, r2, #4
    63c8:	cmp	r2, #256	; 0x100
    63cc:	str	r3, [sp, #40]	; 0x28
    63d0:	vld1.32	{d16[0]}, [r7 :32]
    63d4:	vmovl.s8	q8, d16
    63d8:	vmovl.s16	q8, d16
    63dc:	vcvt.f32.s32	q8, q8
    63e0:	vst1.32	{d16-d17}, [r1]!
    63e4:	bne	63c0 <ReadSingleData+0x420>
    63e8:	add	r5, r0, r5
    63ec:	add	r0, sl, #256	; 0x100
    63f0:	add	r9, r9, #1024	; 0x400
    63f4:	add	r1, r6, #1024	; 0x400
    63f8:	cmp	r0, r8
    63fc:	blt	6398 <ReadSingleData+0x3f8>
    6400:	ldr	r7, [sp, #4]
    6404:	cmp	r0, r7
    6408:	bge	762c <ReadSingleData+0x168c>
    640c:	sub	r8, r7, r0
    6410:	ldr	r0, [sp, #20]
    6414:	ldr	r1, [sp, #16]
    6418:	add	r4, sp, #48	; 0x30
    641c:	mov	r2, r8
    6420:	ldr	r3, [r0]
    6424:	mov	r0, r4
    6428:	bl	18d0 <fread@plt>
    642c:	add	r5, r0, r5
    6430:	cmp	r8, #1
    6434:	blt	762c <ReadSingleData+0x168c>
    6438:	sub	r0, r7, sl
    643c:	sub	r0, r0, #256	; 0x100
    6440:	ldrsb	r1, [r4], #1
    6444:	subs	r0, r0, #1
    6448:	vmov	s0, r1
    644c:	vcvt.f32.s32	s0, s0
    6450:	vstmia	r6!, {s0}
    6454:	bne	6440 <ReadSingleData+0x4a0>
    6458:	b	762c <ReadSingleData+0x168c>
    645c:	add	r1, r9, #1024	; 0x400
    6460:	str	r7, [sp, #4]
    6464:	sub	r8, r7, #256	; 0x100
    6468:	mov	r0, #0
    646c:	add	r4, sp, #48	; 0x30
    6470:	add	r7, sp, #44	; 0x2c
    6474:	mov	r5, #0
    6478:	mov	sl, r0
    647c:	ldr	r0, [sp, #20]
    6480:	mov	r6, r1
    6484:	ldr	r1, [sp, #16]
    6488:	mov	r2, #256	; 0x100
    648c:	ldr	r3, [r0]
    6490:	mov	r0, r4
    6494:	bl	18d0 <fread@plt>
    6498:	mov	r1, r9
    649c:	mov	r2, #0
    64a0:	ldr	r3, [r4, r2]
    64a4:	add	r2, r2, #4
    64a8:	cmp	r2, #256	; 0x100
    64ac:	str	r3, [sp, #44]	; 0x2c
    64b0:	vld1.32	{d16[0]}, [r7 :32]
    64b4:	vmovl.u8	q8, d16
    64b8:	vmovl.u16	q8, d16
    64bc:	vcvt.f32.u32	q8, q8
    64c0:	vst1.32	{d16-d17}, [r1]!
    64c4:	bne	64a0 <ReadSingleData+0x500>
    64c8:	add	r5, r0, r5
    64cc:	add	r0, sl, #256	; 0x100
    64d0:	add	r9, r9, #1024	; 0x400
    64d4:	add	r1, r6, #1024	; 0x400
    64d8:	cmp	r0, r8
    64dc:	blt	6478 <ReadSingleData+0x4d8>
    64e0:	ldr	r7, [sp, #4]
    64e4:	cmp	r0, r7
    64e8:	bge	762c <ReadSingleData+0x168c>
    64ec:	sub	r8, r7, r0
    64f0:	ldr	r0, [sp, #20]
    64f4:	ldr	r1, [sp, #16]
    64f8:	add	r4, sp, #48	; 0x30
    64fc:	mov	r2, r8
    6500:	ldr	r3, [r0]
    6504:	mov	r0, r4
    6508:	bl	18d0 <fread@plt>
    650c:	add	r5, r0, r5
    6510:	cmp	r8, #1
    6514:	blt	762c <ReadSingleData+0x168c>
    6518:	sub	r0, r7, sl
    651c:	sub	r0, r0, #256	; 0x100
    6520:	ldrb	r1, [r4], #1
    6524:	subs	r0, r0, #1
    6528:	vmov	s0, r1
    652c:	vcvt.f32.u32	s0, s0
    6530:	vstmia	r6!, {s0}
    6534:	bne	6520 <ReadSingleData+0x580>
    6538:	b	762c <ReadSingleData+0x168c>
    653c:	cmp	r7, #256	; 0x100
    6540:	bgt	6db4 <ReadSingleData+0xe14>
    6544:	ldr	r3, [r4]
    6548:	add	r4, sp, #48	; 0x30
    654c:	mov	r1, sl
    6550:	mov	r2, r7
    6554:	mov	r0, r4
    6558:	bl	18d0 <fread@plt>
    655c:	mov	r5, r0
    6560:	cmp	r7, #1
    6564:	blt	7630 <ReadSingleData+0x1690>
    6568:	ldrsh	r0, [r4], #2
    656c:	subs	r7, r7, #1
    6570:	vmov	s0, r0
    6574:	vcvt.f32.s32	s0, s0
    6578:	vstmia	r9!, {s0}
    657c:	bne	6568 <ReadSingleData+0x5c8>
    6580:	b	7630 <ReadSingleData+0x1690>
    6584:	cmp	r7, #256	; 0x100
    6588:	bgt	6e9c <ReadSingleData+0xefc>
    658c:	ldr	r3, [r4]
    6590:	add	r4, sp, #48	; 0x30
    6594:	mov	r1, sl
    6598:	mov	r2, r7
    659c:	mov	r0, r4
    65a0:	bl	18d0 <fread@plt>
    65a4:	mov	r5, r0
    65a8:	cmp	r7, #1
    65ac:	blt	7630 <ReadSingleData+0x1690>
    65b0:	ldrh	r0, [r4], #2
    65b4:	subs	r7, r7, #1
    65b8:	vmov	s0, r0
    65bc:	vcvt.f32.u32	s0, s0
    65c0:	vstmia	r9!, {s0}
    65c4:	bne	65b0 <ReadSingleData+0x610>
    65c8:	b	7630 <ReadSingleData+0x1690>
    65cc:	cmp	r7, #256	; 0x100
    65d0:	bgt	6f84 <ReadSingleData+0xfe4>
    65d4:	ldr	r3, [r4]
    65d8:	add	r4, sp, #48	; 0x30
    65dc:	mov	r1, sl
    65e0:	mov	r2, r7
    65e4:	mov	r0, r4
    65e8:	bl	18d0 <fread@plt>
    65ec:	mov	r5, r0
    65f0:	cmp	r7, #1
    65f4:	blt	7630 <ReadSingleData+0x1690>
    65f8:	ldr	r0, [r4], #4
    65fc:	subs	r7, r7, #1
    6600:	vmov	s0, r0
    6604:	vcvt.f32.s32	s0, s0
    6608:	vstmia	r9!, {s0}
    660c:	bne	65f8 <ReadSingleData+0x658>
    6610:	b	7630 <ReadSingleData+0x1690>
    6614:	cmp	r7, #256	; 0x100
    6618:	bgt	7054 <ReadSingleData+0x10b4>
    661c:	ldr	r3, [r4]
    6620:	add	r4, sp, #48	; 0x30
    6624:	mov	r1, sl
    6628:	mov	r2, r7
    662c:	mov	r0, r4
    6630:	bl	18d0 <fread@plt>
    6634:	mov	r5, r0
    6638:	cmp	r7, #1
    663c:	blt	7630 <ReadSingleData+0x1690>
    6640:	ldr	r0, [r4], #4
    6644:	subs	r7, r7, #1
    6648:	vmov	s0, r0
    664c:	vcvt.f32.u32	s0, s0
    6650:	vstmia	r9!, {s0}
    6654:	bne	6640 <ReadSingleData+0x6a0>
    6658:	b	7630 <ReadSingleData+0x1690>
    665c:	cmp	r7, #256	; 0x100
    6660:	bgt	7124 <ReadSingleData+0x1184>
    6664:	ldr	r3, [r4]
    6668:	add	r0, sp, #48	; 0x30
    666c:	mov	r1, sl
    6670:	mov	r2, r7
    6674:	bl	18d0 <fread@plt>
    6678:	mov	r5, r0
    667c:	cmp	r7, #1
    6680:	blt	7630 <ReadSingleData+0x1690>
    6684:	lsl	r2, r7, #2
    6688:	add	r1, sp, #48	; 0x30
    668c:	mov	r0, r9
    6690:	b	71c8 <ReadSingleData+0x1228>
    6694:	cmp	r7, #256	; 0x100
    6698:	bgt	71d0 <ReadSingleData+0x1230>
    669c:	ldr	r3, [r4]
    66a0:	add	r4, sp, #48	; 0x30
    66a4:	mov	r1, sl
    66a8:	mov	r2, r7
    66ac:	mov	r0, r4
    66b0:	bl	18d0 <fread@plt>
    66b4:	mov	r5, r0
    66b8:	cmp	r7, #1
    66bc:	blt	7630 <ReadSingleData+0x1690>
    66c0:	vldr	d16, [r4]
    66c4:	add	r4, r4, #8
    66c8:	subs	r7, r7, #1
    66cc:	vcvt.f32.f64	s0, d16
    66d0:	vstr	s0, [r9]
    66d4:	add	r9, r9, #4
    66d8:	bne	66c0 <ReadSingleData+0x720>
    66dc:	b	7630 <ReadSingleData+0x1690>
    66e0:	cmp	r7, #256	; 0x100
    66e4:	bgt	72a4 <ReadSingleData+0x1304>
    66e8:	ldr	r3, [r4]
    66ec:	add	r4, sp, #48	; 0x30
    66f0:	mov	r1, sl
    66f4:	mov	r2, r7
    66f8:	mov	r0, r4
    66fc:	bl	18d0 <fread@plt>
    6700:	mov	r5, r0
    6704:	cmp	r7, #1
    6708:	blt	73b0 <ReadSingleData+0x1410>
    670c:	str	r6, [sp]
    6710:	mov	r6, r9
    6714:	mov	r8, r7
    6718:	ldrd	r0, [r4]
    671c:	bl	4b638 <__aeabi_l2f>
    6720:	str	r0, [r6], #4
    6724:	add	r4, r4, #8
    6728:	subs	r7, r7, #1
    672c:	bne	6718 <ReadSingleData+0x778>
    6730:	mov	r7, r8
    6734:	b	73a8 <ReadSingleData+0x1408>
    6738:	sub	r0, r7, #256	; 0x100
    673c:	add	r1, r9, #1024	; 0x400
    6740:	add	r4, sp, #48	; 0x30
    6744:	mov	r5, #0
    6748:	str	r7, [sp, #4]
    674c:	str	r0, [sp, #8]
    6750:	mov	r0, #0
    6754:	str	r0, [sp, #12]
    6758:	ldr	r0, [sp, #20]
    675c:	mov	r8, r1
    6760:	mov	r1, sl
    6764:	mov	r2, #256	; 0x100
    6768:	ldr	r3, [r0]
    676c:	mov	r0, r4
    6770:	bl	18d0 <fread@plt>
    6774:	mov	r6, r0
    6778:	mov	r7, r9
    677c:	mov	sl, #0
    6780:	add	r0, r4, sl
    6784:	bl	1c58 <Mat_int16Swap>
    6788:	vmov	s0, r0
    678c:	add	sl, sl, #2
    6790:	cmp	sl, #512	; 0x200
    6794:	vcvt.f32.s32	s0, s0
    6798:	vstmia	r7!, {s0}
    679c:	bne	6780 <ReadSingleData+0x7e0>
    67a0:	ldr	r0, [sp, #12]
    67a4:	ldr	r2, [sp, #8]
    67a8:	ldr	sl, [sp, #16]
    67ac:	add	r5, r6, r5
    67b0:	add	r9, r9, #1024	; 0x400
    67b4:	add	r1, r8, #1024	; 0x400
    67b8:	add	r0, r0, #256	; 0x100
    67bc:	cmp	r0, r2
    67c0:	blt	6754 <ReadSingleData+0x7b4>
    67c4:	ldr	r7, [sp, #4]
    67c8:	cmp	r0, r7
    67cc:	bge	7630 <ReadSingleData+0x1690>
    67d0:	sub	r6, r7, r0
    67d4:	ldr	r0, [sp, #20]
    67d8:	add	r4, sp, #48	; 0x30
    67dc:	mov	r1, sl
    67e0:	mov	r2, r6
    67e4:	ldr	r3, [r0]
    67e8:	mov	r0, r4
    67ec:	bl	18d0 <fread@plt>
    67f0:	add	r5, r0, r5
    67f4:	cmp	r6, #1
    67f8:	blt	7630 <ReadSingleData+0x1690>
    67fc:	ldr	r0, [sp, #12]
    6800:	sub	r0, r7, r0
    6804:	sub	r6, r0, #256	; 0x100
    6808:	mov	r0, r4
    680c:	bl	1c58 <Mat_int16Swap>
    6810:	vmov	s0, r0
    6814:	add	r4, r4, #2
    6818:	subs	r6, r6, #1
    681c:	vcvt.f32.s32	s0, s0
    6820:	vstmia	r8!, {s0}
    6824:	bne	6808 <ReadSingleData+0x868>
    6828:	b	7630 <ReadSingleData+0x1690>
    682c:	sub	r0, r7, #256	; 0x100
    6830:	add	r1, r9, #1024	; 0x400
    6834:	add	r4, sp, #48	; 0x30
    6838:	mov	r5, #0
    683c:	str	r7, [sp, #4]
    6840:	str	r0, [sp, #8]
    6844:	mov	r0, #0
    6848:	str	r0, [sp, #12]
    684c:	ldr	r0, [sp, #20]
    6850:	mov	r8, r1
    6854:	mov	r1, sl
    6858:	mov	r2, #256	; 0x100
    685c:	ldr	r3, [r0]
    6860:	mov	r0, r4
    6864:	bl	18d0 <fread@plt>
    6868:	mov	r6, r0
    686c:	mov	r7, r9
    6870:	mov	sl, #0
    6874:	add	r0, r4, sl
    6878:	bl	1c6c <Mat_uint16Swap>
    687c:	vmov	s0, r0
    6880:	add	sl, sl, #2
    6884:	cmp	sl, #512	; 0x200
    6888:	vcvt.f32.u32	s0, s0
    688c:	vstmia	r7!, {s0}
    6890:	bne	6874 <ReadSingleData+0x8d4>
    6894:	ldr	r0, [sp, #12]
    6898:	ldr	r2, [sp, #8]
    689c:	ldr	sl, [sp, #16]
    68a0:	add	r5, r6, r5
    68a4:	add	r9, r9, #1024	; 0x400
    68a8:	add	r1, r8, #1024	; 0x400
    68ac:	add	r0, r0, #256	; 0x100
    68b0:	cmp	r0, r2
    68b4:	blt	6848 <ReadSingleData+0x8a8>
    68b8:	ldr	r7, [sp, #4]
    68bc:	cmp	r0, r7
    68c0:	bge	7630 <ReadSingleData+0x1690>
    68c4:	sub	r6, r7, r0
    68c8:	ldr	r0, [sp, #20]
    68cc:	add	r4, sp, #48	; 0x30
    68d0:	mov	r1, sl
    68d4:	mov	r2, r6
    68d8:	ldr	r3, [r0]
    68dc:	mov	r0, r4
    68e0:	bl	18d0 <fread@plt>
    68e4:	add	r5, r0, r5
    68e8:	cmp	r6, #1
    68ec:	blt	7630 <ReadSingleData+0x1690>
    68f0:	ldr	r0, [sp, #12]
    68f4:	sub	r0, r7, r0
    68f8:	sub	r6, r0, #256	; 0x100
    68fc:	mov	r0, r4
    6900:	bl	1c6c <Mat_uint16Swap>
    6904:	vmov	s0, r0
    6908:	add	r4, r4, #2
    690c:	subs	r6, r6, #1
    6910:	vcvt.f32.u32	s0, s0
    6914:	vstmia	r8!, {s0}
    6918:	bne	68fc <ReadSingleData+0x95c>
    691c:	b	7630 <ReadSingleData+0x1690>
    6920:	sub	r0, r7, #256	; 0x100
    6924:	add	r1, r9, #1024	; 0x400
    6928:	add	r4, sp, #48	; 0x30
    692c:	mov	r5, #0
    6930:	str	r7, [sp, #4]
    6934:	str	r0, [sp, #12]
    6938:	mov	r0, #0
    693c:	mov	r7, r0
    6940:	ldr	r0, [sp, #20]
    6944:	mov	r8, r1
    6948:	mov	r1, sl
    694c:	mov	r2, #256	; 0x100
    6950:	ldr	r3, [r0]
    6954:	mov	r0, r4
    6958:	bl	18d0 <fread@plt>
    695c:	mov	r6, r0
    6960:	mov	sl, #0
    6964:	add	r0, r4, sl
    6968:	bl	1c30 <Mat_int32Swap>
    696c:	vmov	s0, r0
    6970:	add	r1, r9, sl
    6974:	add	sl, sl, #4
    6978:	cmp	sl, #1024	; 0x400
    697c:	vcvt.f32.s32	s0, s0
    6980:	vstr	s0, [r1]
    6984:	bne	6964 <ReadSingleData+0x9c4>
    6988:	ldr	r2, [sp, #12]
    698c:	ldr	sl, [sp, #16]
    6990:	add	r0, r7, #256	; 0x100
    6994:	add	r5, r6, r5
    6998:	add	r9, r9, #1024	; 0x400
    699c:	add	r1, r8, #1024	; 0x400
    69a0:	cmp	r0, r2
    69a4:	blt	693c <ReadSingleData+0x99c>
    69a8:	ldr	r6, [sp, #4]
    69ac:	cmp	r0, r6
    69b0:	bge	7630 <ReadSingleData+0x1690>
    69b4:	sub	r9, r6, r0
    69b8:	ldr	r0, [sp, #20]
    69bc:	add	r4, sp, #48	; 0x30
    69c0:	mov	r1, sl
    69c4:	mov	r2, r9
    69c8:	ldr	r3, [r0]
    69cc:	mov	r0, r4
    69d0:	bl	18d0 <fread@plt>
    69d4:	add	r5, r0, r5
    69d8:	cmp	r9, #1
    69dc:	blt	7630 <ReadSingleData+0x1690>
    69e0:	sub	r0, r6, r7
    69e4:	sub	r6, r0, #256	; 0x100
    69e8:	mov	r0, r4
    69ec:	bl	1c30 <Mat_int32Swap>
    69f0:	vmov	s0, r0
    69f4:	add	r4, r4, #4
    69f8:	subs	r6, r6, #1
    69fc:	vcvt.f32.s32	s0, s0
    6a00:	vstmia	r8!, {s0}
    6a04:	bne	69e8 <ReadSingleData+0xa48>
    6a08:	b	7630 <ReadSingleData+0x1690>
    6a0c:	sub	r0, r7, #256	; 0x100
    6a10:	add	r1, r9, #1024	; 0x400
    6a14:	add	r4, sp, #48	; 0x30
    6a18:	mov	r5, #0
    6a1c:	str	r7, [sp, #4]
    6a20:	str	r0, [sp, #12]
    6a24:	mov	r0, #0
    6a28:	mov	r7, r0
    6a2c:	ldr	r0, [sp, #20]
    6a30:	mov	r8, r1
    6a34:	mov	r1, sl
    6a38:	mov	r2, #256	; 0x100
    6a3c:	ldr	r3, [r0]
    6a40:	mov	r0, r4
    6a44:	bl	18d0 <fread@plt>
    6a48:	mov	r6, r0
    6a4c:	mov	sl, #0
    6a50:	add	r0, r4, sl
    6a54:	bl	1c44 <Mat_uint32Swap>
    6a58:	vmov	s0, r0
    6a5c:	add	r1, r9, sl
    6a60:	add	sl, sl, #4
    6a64:	cmp	sl, #1024	; 0x400
    6a68:	vcvt.f32.u32	s0, s0
    6a6c:	vstr	s0, [r1]
    6a70:	bne	6a50 <ReadSingleData+0xab0>
    6a74:	ldr	r2, [sp, #12]
    6a78:	ldr	sl, [sp, #16]
    6a7c:	add	r0, r7, #256	; 0x100
    6a80:	add	r5, r6, r5
    6a84:	add	r9, r9, #1024	; 0x400
    6a88:	add	r1, r8, #1024	; 0x400
    6a8c:	cmp	r0, r2
    6a90:	blt	6a28 <ReadSingleData+0xa88>
    6a94:	ldr	r6, [sp, #4]
    6a98:	cmp	r0, r6
    6a9c:	bge	7630 <ReadSingleData+0x1690>
    6aa0:	sub	r9, r6, r0
    6aa4:	ldr	r0, [sp, #20]
    6aa8:	add	r4, sp, #48	; 0x30
    6aac:	mov	r1, sl
    6ab0:	mov	r2, r9
    6ab4:	ldr	r3, [r0]
    6ab8:	mov	r0, r4
    6abc:	bl	18d0 <fread@plt>
    6ac0:	add	r5, r0, r5
    6ac4:	cmp	r9, #1
    6ac8:	blt	7630 <ReadSingleData+0x1690>
    6acc:	sub	r0, r6, r7
    6ad0:	sub	r6, r0, #256	; 0x100
    6ad4:	mov	r0, r4
    6ad8:	bl	1c44 <Mat_uint32Swap>
    6adc:	vmov	s0, r0
    6ae0:	add	r4, r4, #4
    6ae4:	subs	r6, r6, #1
    6ae8:	vcvt.f32.u32	s0, s0
    6aec:	vstmia	r8!, {s0}
    6af0:	bne	6ad4 <ReadSingleData+0xb34>
    6af4:	b	7630 <ReadSingleData+0x1690>
    6af8:	sub	r0, r7, #256	; 0x100
    6afc:	add	r1, r9, #1024	; 0x400
    6b00:	add	r4, sp, #48	; 0x30
    6b04:	mov	r5, #0
    6b08:	str	r7, [sp, #4]
    6b0c:	str	r0, [sp, #12]
    6b10:	mov	r0, #0
    6b14:	mov	r7, r0
    6b18:	ldr	r0, [sp, #20]
    6b1c:	mov	r8, r1
    6b20:	mov	r1, sl
    6b24:	mov	r2, #256	; 0x100
    6b28:	ldr	r3, [r0]
    6b2c:	mov	r0, r4
    6b30:	bl	18d0 <fread@plt>
    6b34:	mov	r6, r0
    6b38:	mov	sl, #0
    6b3c:	add	r0, r4, sl
    6b40:	bl	1c84 <Mat_floatSwap>
    6b44:	add	r0, r9, sl
    6b48:	add	sl, sl, #4
    6b4c:	cmp	sl, #1024	; 0x400
    6b50:	vstr	s0, [r0]
    6b54:	bne	6b3c <ReadSingleData+0xb9c>
    6b58:	ldr	r2, [sp, #12]
    6b5c:	ldr	sl, [sp, #16]
    6b60:	add	r0, r7, #256	; 0x100
    6b64:	add	r5, r6, r5
    6b68:	add	r9, r9, #1024	; 0x400
    6b6c:	add	r1, r8, #1024	; 0x400
    6b70:	cmp	r0, r2
    6b74:	blt	6b14 <ReadSingleData+0xb74>
    6b78:	ldr	r6, [sp, #4]
    6b7c:	cmp	r0, r6
    6b80:	bge	7630 <ReadSingleData+0x1690>
    6b84:	sub	r9, r6, r0
    6b88:	ldr	r0, [sp, #20]
    6b8c:	add	r4, sp, #48	; 0x30
    6b90:	mov	r1, sl
    6b94:	mov	r2, r9
    6b98:	ldr	r3, [r0]
    6b9c:	mov	r0, r4
    6ba0:	bl	18d0 <fread@plt>
    6ba4:	add	r5, r0, r5
    6ba8:	cmp	r9, #1
    6bac:	blt	7630 <ReadSingleData+0x1690>
    6bb0:	sub	r0, r6, r7
    6bb4:	sub	r6, r0, #256	; 0x100
    6bb8:	mov	r0, r4
    6bbc:	bl	1c84 <Mat_floatSwap>
    6bc0:	vstmia	r8!, {s0}
    6bc4:	add	r4, r4, #4
    6bc8:	subs	r6, r6, #1
    6bcc:	bne	6bb8 <ReadSingleData+0xc18>
    6bd0:	b	7630 <ReadSingleData+0x1690>
    6bd4:	sub	r0, r7, #256	; 0x100
    6bd8:	add	r1, r9, #1024	; 0x400
    6bdc:	mov	r5, #0
    6be0:	str	r7, [sp, #4]
    6be4:	str	r0, [sp, #8]
    6be8:	mov	r0, #0
    6bec:	ldr	r3, [r4]
    6bf0:	add	r4, sp, #48	; 0x30
    6bf4:	str	r0, [sp, #12]
    6bf8:	mov	r8, r1
    6bfc:	mov	r1, sl
    6c00:	mov	r2, #256	; 0x100
    6c04:	mov	r0, r4
    6c08:	bl	18d0 <fread@plt>
    6c0c:	mov	r6, r0
    6c10:	mov	sl, #0
    6c14:	mov	r0, r4
    6c18:	add	r7, r9, sl
    6c1c:	bl	1cc8 <Mat_doubleSwap>
    6c20:	vcvt.f32.f64	s0, d0
    6c24:	add	sl, sl, #4
    6c28:	add	r4, r4, #8
    6c2c:	cmp	sl, #1024	; 0x400
    6c30:	vstr	s0, [r7]
    6c34:	bne	6c14 <ReadSingleData+0xc74>
    6c38:	ldr	r0, [sp, #12]
    6c3c:	ldr	r2, [sp, #8]
    6c40:	ldr	sl, [sp, #16]
    6c44:	ldr	r4, [sp, #20]
    6c48:	add	r5, r6, r5
    6c4c:	add	r9, r9, #1024	; 0x400
    6c50:	add	r1, r8, #1024	; 0x400
    6c54:	add	r0, r0, #256	; 0x100
    6c58:	cmp	r0, r2
    6c5c:	blt	6bec <ReadSingleData+0xc4c>
    6c60:	ldr	r7, [sp, #4]
    6c64:	cmp	r0, r7
    6c68:	bge	7630 <ReadSingleData+0x1690>
    6c6c:	ldr	r3, [r4]
    6c70:	sub	r6, r7, r0
    6c74:	add	r4, sp, #48	; 0x30
    6c78:	mov	r1, sl
    6c7c:	mov	r0, r4
    6c80:	mov	r2, r6
    6c84:	bl	18d0 <fread@plt>
    6c88:	add	r5, r0, r5
    6c8c:	cmp	r6, #1
    6c90:	blt	7630 <ReadSingleData+0x1690>
    6c94:	ldr	r0, [sp, #12]
    6c98:	sub	r0, r7, r0
    6c9c:	sub	r6, r0, #256	; 0x100
    6ca0:	mov	r0, r4
    6ca4:	bl	1cc8 <Mat_doubleSwap>
    6ca8:	vcvt.f32.f64	s0, d0
    6cac:	add	r4, r4, #8
    6cb0:	subs	r6, r6, #1
    6cb4:	vstmia	r8!, {s0}
    6cb8:	bne	6ca0 <ReadSingleData+0xd00>
    6cbc:	b	7630 <ReadSingleData+0x1690>
    6cc0:	sub	r0, r7, #256	; 0x100
    6cc4:	add	r1, r9, #1024	; 0x400
    6cc8:	mov	sl, r9
    6ccc:	mov	r5, #0
    6cd0:	str	r6, [sp]
    6cd4:	str	r7, [sp, #4]
    6cd8:	str	r0, [sp, #8]
    6cdc:	mov	r0, #0
    6ce0:	mov	r6, r1
    6ce4:	ldr	r3, [r4]
    6ce8:	ldr	r1, [sp, #16]
    6cec:	add	r4, sp, #48	; 0x30
    6cf0:	str	r0, [sp, #12]
    6cf4:	mov	r2, #256	; 0x100
    6cf8:	mov	r0, r4
    6cfc:	bl	18d0 <fread@plt>
    6d00:	mov	r8, r0
    6d04:	mov	r7, #0
    6d08:	mov	r0, r4
    6d0c:	bl	1bbc <Mat_int64Swap>
    6d10:	bl	4b638 <__aeabi_l2f>
    6d14:	str	r0, [sl, r7]
    6d18:	add	r7, r7, #4
    6d1c:	add	r4, r4, #8
    6d20:	cmp	r7, #1024	; 0x400
    6d24:	bne	6d08 <ReadSingleData+0xd68>
    6d28:	ldr	r0, [sp, #12]
    6d2c:	ldr	r2, [sp, #8]
    6d30:	ldr	r4, [sp, #20]
    6d34:	add	r5, r8, r5
    6d38:	add	sl, sl, #1024	; 0x400
    6d3c:	add	r1, r6, #1024	; 0x400
    6d40:	add	r0, r0, #256	; 0x100
    6d44:	cmp	r0, r2
    6d48:	blt	6ce0 <ReadSingleData+0xd40>
    6d4c:	ldr	r7, [sp, #4]
    6d50:	cmp	r0, r7
    6d54:	bge	73b8 <ReadSingleData+0x1418>
    6d58:	ldr	sl, [sp, #16]
    6d5c:	ldr	r3, [r4]
    6d60:	sub	r8, r7, r0
    6d64:	add	r4, sp, #48	; 0x30
    6d68:	mov	r0, r4
    6d6c:	mov	r2, r8
    6d70:	mov	r1, sl
    6d74:	bl	18d0 <fread@plt>
    6d78:	add	r5, r0, r5
    6d7c:	cmp	r8, #1
    6d80:	blt	73a8 <ReadSingleData+0x1408>
    6d84:	ldr	r0, [sp, #12]
    6d88:	sub	r0, r7, r0
    6d8c:	sub	r7, r0, #256	; 0x100
    6d90:	mov	r0, r4
    6d94:	bl	1bbc <Mat_int64Swap>
    6d98:	bl	4b638 <__aeabi_l2f>
    6d9c:	str	r0, [r6], #4
    6da0:	add	r4, r4, #8
    6da4:	subs	r7, r7, #1
    6da8:	bne	6d90 <ReadSingleData+0xdf0>
    6dac:	ldr	r7, [sp, #4]
    6db0:	b	73a8 <ReadSingleData+0x1408>
    6db4:	add	r1, r9, #1024	; 0x400
    6db8:	str	r7, [sp, #4]
    6dbc:	sub	r8, r7, #256	; 0x100
    6dc0:	mov	r0, #0
    6dc4:	add	r4, sp, #48	; 0x30
    6dc8:	add	r7, sp, #24
    6dcc:	mov	r5, #0
    6dd0:	mov	sl, r0
    6dd4:	ldr	r0, [sp, #20]
    6dd8:	mov	r6, r1
    6ddc:	ldr	r1, [sp, #16]
    6de0:	mov	r2, #256	; 0x100
    6de4:	ldr	r3, [r0]
    6de8:	mov	r0, r4
    6dec:	bl	18d0 <fread@plt>
    6df0:	mov	r1, r9
    6df4:	mov	r2, #0
    6df8:	ldr	r3, [r4, r2]
    6dfc:	str	r3, [sp, #24]
    6e00:	add	r3, r4, r2
    6e04:	add	r2, r2, #8
    6e08:	ldr	r3, [r3, #4]
    6e0c:	cmp	r2, #512	; 0x200
    6e10:	str	r3, [sp, #28]
    6e14:	vld1.16	{d16}, [r7 :64]
    6e18:	vmovl.s16	q8, d16
    6e1c:	vcvt.f32.s32	q8, q8
    6e20:	vst1.32	{d16-d17}, [r1]!
    6e24:	bne	6df8 <ReadSingleData+0xe58>
    6e28:	add	r5, r0, r5
    6e2c:	add	r0, sl, #256	; 0x100
    6e30:	add	r9, r9, #1024	; 0x400
    6e34:	add	r1, r6, #1024	; 0x400
    6e38:	cmp	r0, r8
    6e3c:	blt	6dd0 <ReadSingleData+0xe30>
    6e40:	ldr	r7, [sp, #4]
    6e44:	cmp	r0, r7
    6e48:	bge	762c <ReadSingleData+0x168c>
    6e4c:	sub	r8, r7, r0
    6e50:	ldr	r0, [sp, #20]
    6e54:	ldr	r1, [sp, #16]
    6e58:	add	r4, sp, #48	; 0x30
    6e5c:	mov	r2, r8
    6e60:	ldr	r3, [r0]
    6e64:	mov	r0, r4
    6e68:	bl	18d0 <fread@plt>
    6e6c:	add	r5, r0, r5
    6e70:	cmp	r8, #1
    6e74:	blt	762c <ReadSingleData+0x168c>
    6e78:	sub	r0, r7, sl
    6e7c:	sub	r0, r0, #256	; 0x100
    6e80:	ldrsh	r1, [r4], #2
    6e84:	subs	r0, r0, #1
    6e88:	vmov	s0, r1
    6e8c:	vcvt.f32.s32	s0, s0
    6e90:	vstmia	r6!, {s0}
    6e94:	bne	6e80 <ReadSingleData+0xee0>
    6e98:	b	762c <ReadSingleData+0x168c>
    6e9c:	add	r1, r9, #1024	; 0x400
    6ea0:	str	r7, [sp, #4]
    6ea4:	sub	r8, r7, #256	; 0x100
    6ea8:	mov	r0, #0
    6eac:	add	r4, sp, #48	; 0x30
    6eb0:	add	r7, sp, #32
    6eb4:	mov	r5, #0
    6eb8:	mov	sl, r0
    6ebc:	ldr	r0, [sp, #20]
    6ec0:	mov	r6, r1
    6ec4:	ldr	r1, [sp, #16]
    6ec8:	mov	r2, #256	; 0x100
    6ecc:	ldr	r3, [r0]
    6ed0:	mov	r0, r4
    6ed4:	bl	18d0 <fread@plt>
    6ed8:	mov	r1, r9
    6edc:	mov	r2, #0
    6ee0:	ldr	r3, [r4, r2]
    6ee4:	str	r3, [sp, #32]
    6ee8:	add	r3, r4, r2
    6eec:	add	r2, r2, #8
    6ef0:	ldr	r3, [r3, #4]
    6ef4:	cmp	r2, #512	; 0x200
    6ef8:	str	r3, [sp, #36]	; 0x24
    6efc:	vld1.16	{d16}, [r7 :64]
    6f00:	vmovl.u16	q8, d16
    6f04:	vcvt.f32.u32	q8, q8
    6f08:	vst1.32	{d16-d17}, [r1]!
    6f0c:	bne	6ee0 <ReadSingleData+0xf40>
    6f10:	add	r5, r0, r5
    6f14:	add	r0, sl, #256	; 0x100
    6f18:	add	r9, r9, #1024	; 0x400
    6f1c:	add	r1, r6, #1024	; 0x400
    6f20:	cmp	r0, r8
    6f24:	blt	6eb8 <ReadSingleData+0xf18>
    6f28:	ldr	r7, [sp, #4]
    6f2c:	cmp	r0, r7
    6f30:	bge	762c <ReadSingleData+0x168c>
    6f34:	sub	r8, r7, r0
    6f38:	ldr	r0, [sp, #20]
    6f3c:	ldr	r1, [sp, #16]
    6f40:	add	r4, sp, #48	; 0x30
    6f44:	mov	r2, r8
    6f48:	ldr	r3, [r0]
    6f4c:	mov	r0, r4
    6f50:	bl	18d0 <fread@plt>
    6f54:	add	r5, r0, r5
    6f58:	cmp	r8, #1
    6f5c:	blt	762c <ReadSingleData+0x168c>
    6f60:	sub	r0, r7, sl
    6f64:	sub	r0, r0, #256	; 0x100
    6f68:	ldrh	r1, [r4], #2
    6f6c:	subs	r0, r0, #1
    6f70:	vmov	s0, r1
    6f74:	vcvt.f32.u32	s0, s0
    6f78:	vstmia	r6!, {s0}
    6f7c:	bne	6f68 <ReadSingleData+0xfc8>
    6f80:	b	762c <ReadSingleData+0x168c>
    6f84:	add	r1, r9, #1024	; 0x400
    6f88:	sub	r8, r7, #256	; 0x100
    6f8c:	mov	r0, #0
    6f90:	add	r4, sp, #48	; 0x30
    6f94:	mov	r5, #0
    6f98:	str	r7, [sp, #4]
    6f9c:	mov	r7, r0
    6fa0:	ldr	r0, [sp, #20]
    6fa4:	mov	r6, r1
    6fa8:	mov	r1, sl
    6fac:	mov	r2, #256	; 0x100
    6fb0:	ldr	r3, [r0]
    6fb4:	mov	r0, r4
    6fb8:	bl	18d0 <fread@plt>
    6fbc:	mov	r1, #0
    6fc0:	add	r2, r4, r1
    6fc4:	vld1.32	{d16-d17}, [r2]
    6fc8:	add	r2, r9, r1
    6fcc:	add	r1, r1, #16
    6fd0:	cmp	r1, #1024	; 0x400
    6fd4:	vcvt.f32.s32	q8, q8
    6fd8:	vst1.32	{d16-d17}, [r2]
    6fdc:	bne	6fc0 <ReadSingleData+0x1020>
    6fe0:	add	r5, r0, r5
    6fe4:	add	r0, r7, #256	; 0x100
    6fe8:	add	r9, r9, #1024	; 0x400
    6fec:	add	r1, r6, #1024	; 0x400
    6ff0:	cmp	r0, r8
    6ff4:	blt	6f9c <ReadSingleData+0xffc>
    6ff8:	ldr	r9, [sp, #4]
    6ffc:	cmp	r0, r9
    7000:	bge	7630 <ReadSingleData+0x1690>
    7004:	sub	r8, r9, r0
    7008:	ldr	r0, [sp, #20]
    700c:	add	r4, sp, #48	; 0x30
    7010:	mov	r1, sl
    7014:	mov	r2, r8
    7018:	ldr	r3, [r0]
    701c:	mov	r0, r4
    7020:	bl	18d0 <fread@plt>
    7024:	add	r5, r0, r5
    7028:	cmp	r8, #1
    702c:	blt	7630 <ReadSingleData+0x1690>
    7030:	sub	r0, r9, r7
    7034:	sub	r0, r0, #256	; 0x100
    7038:	ldr	r1, [r4], #4
    703c:	subs	r0, r0, #1
    7040:	vmov	s0, r1
    7044:	vcvt.f32.s32	s0, s0
    7048:	vstmia	r6!, {s0}
    704c:	bne	7038 <ReadSingleData+0x1098>
    7050:	b	7630 <ReadSingleData+0x1690>
    7054:	add	r1, r9, #1024	; 0x400
    7058:	sub	r8, r7, #256	; 0x100
    705c:	mov	r0, #0
    7060:	add	r4, sp, #48	; 0x30
    7064:	mov	r5, #0
    7068:	str	r7, [sp, #4]
    706c:	mov	r7, r0
    7070:	ldr	r0, [sp, #20]
    7074:	mov	r6, r1
    7078:	mov	r1, sl
    707c:	mov	r2, #256	; 0x100
    7080:	ldr	r3, [r0]
    7084:	mov	r0, r4
    7088:	bl	18d0 <fread@plt>
    708c:	mov	r1, #0
    7090:	add	r2, r4, r1
    7094:	vld1.32	{d16-d17}, [r2]
    7098:	add	r2, r9, r1
    709c:	add	r1, r1, #16
    70a0:	cmp	r1, #1024	; 0x400
    70a4:	vcvt.f32.u32	q8, q8
    70a8:	vst1.32	{d16-d17}, [r2]
    70ac:	bne	7090 <ReadSingleData+0x10f0>
    70b0:	add	r5, r0, r5
    70b4:	add	r0, r7, #256	; 0x100
    70b8:	add	r9, r9, #1024	; 0x400
    70bc:	add	r1, r6, #1024	; 0x400
    70c0:	cmp	r0, r8
    70c4:	blt	706c <ReadSingleData+0x10cc>
    70c8:	ldr	r9, [sp, #4]
    70cc:	cmp	r0, r9
    70d0:	bge	7630 <ReadSingleData+0x1690>
    70d4:	sub	r8, r9, r0
    70d8:	ldr	r0, [sp, #20]
    70dc:	add	r4, sp, #48	; 0x30
    70e0:	mov	r1, sl
    70e4:	mov	r2, r8
    70e8:	ldr	r3, [r0]
    70ec:	mov	r0, r4
    70f0:	bl	18d0 <fread@plt>
    70f4:	add	r5, r0, r5
    70f8:	cmp	r8, #1
    70fc:	blt	7630 <ReadSingleData+0x1690>
    7100:	sub	r0, r9, r7
    7104:	sub	r0, r0, #256	; 0x100
    7108:	ldr	r1, [r4], #4
    710c:	subs	r0, r0, #1
    7110:	vmov	s0, r1
    7114:	vcvt.f32.u32	s0, s0
    7118:	vstmia	r6!, {s0}
    711c:	bne	7108 <ReadSingleData+0x1168>
    7120:	b	7630 <ReadSingleData+0x1690>
    7124:	sub	r0, r7, #256	; 0x100
    7128:	lsl	r4, r7, #2
    712c:	str	r7, [sp, #4]
    7130:	mov	r7, #0
    7134:	add	r8, sp, #48	; 0x30
    7138:	mov	r5, #0
    713c:	str	r0, [sp, #12]
    7140:	ldr	r0, [sp, #20]
    7144:	mov	r1, sl
    7148:	mov	r2, #256	; 0x100
    714c:	ldr	r3, [r0]
    7150:	mov	r0, r8
    7154:	bl	18d0 <fread@plt>
    7158:	mov	r6, r0
    715c:	add	r0, r9, r7, lsl #2
    7160:	mov	r1, r8
    7164:	mov	r2, #1024	; 0x400
    7168:	bl	1834 <memcpy@plt>
    716c:	ldr	r0, [sp, #12]
    7170:	add	r7, r7, #256	; 0x100
    7174:	add	r5, r6, r5
    7178:	sub	r4, r4, #1024	; 0x400
    717c:	cmp	r7, r0
    7180:	blt	7140 <ReadSingleData+0x11a0>
    7184:	ldr	r0, [sp, #4]
    7188:	cmp	r7, r0
    718c:	bge	762c <ReadSingleData+0x168c>
    7190:	sub	r6, r0, r7
    7194:	ldr	r0, [sp, #20]
    7198:	ldr	sl, [sp, #16]
    719c:	mov	r2, r6
    71a0:	ldr	r3, [r0]
    71a4:	add	r0, sp, #48	; 0x30
    71a8:	mov	r1, sl
    71ac:	bl	18d0 <fread@plt>
    71b0:	add	r5, r0, r5
    71b4:	cmp	r6, #1
    71b8:	blt	7630 <ReadSingleData+0x1690>
    71bc:	add	r0, r9, r7, lsl #2
    71c0:	add	r1, sp, #48	; 0x30
    71c4:	mov	r2, r4
    71c8:	bl	1834 <memcpy@plt>
    71cc:	b	7630 <ReadSingleData+0x1690>
    71d0:	add	r1, r9, #1024	; 0x400
    71d4:	sub	r8, r7, #256	; 0x100
    71d8:	mov	r0, #0
    71dc:	add	r4, sp, #48	; 0x30
    71e0:	mov	r5, #0
    71e4:	str	r7, [sp, #4]
    71e8:	mov	r7, r0
    71ec:	ldr	r0, [sp, #20]
    71f0:	mov	r6, r1
    71f4:	mov	r1, sl
    71f8:	mov	r2, #256	; 0x100
    71fc:	ldr	r3, [r0]
    7200:	mov	r0, r4
    7204:	bl	18d0 <fread@plt>
    7208:	mov	r1, #0
    720c:	mov	r2, r4
    7210:	vld1.64	{d16-d17}, [r2]!
    7214:	add	r3, r9, r1
    7218:	add	r1, r1, #8
    721c:	cmp	r1, #1024	; 0x400
    7220:	vcvt.f32.f64	s1, d17
    7224:	vcvt.f32.f64	s0, d16
    7228:	vstr	d0, [r3]
    722c:	bne	7210 <ReadSingleData+0x1270>
    7230:	add	r5, r0, r5
    7234:	add	r0, r7, #256	; 0x100
    7238:	add	r9, r9, #1024	; 0x400
    723c:	add	r1, r6, #1024	; 0x400
    7240:	cmp	r0, r8
    7244:	blt	71e8 <ReadSingleData+0x1248>
    7248:	ldr	r9, [sp, #4]
    724c:	cmp	r0, r9
    7250:	bge	7630 <ReadSingleData+0x1690>
    7254:	sub	r8, r9, r0
    7258:	ldr	r0, [sp, #20]
    725c:	add	r4, sp, #48	; 0x30
    7260:	mov	r1, sl
    7264:	mov	r2, r8
    7268:	ldr	r3, [r0]
    726c:	mov	r0, r4
    7270:	bl	18d0 <fread@plt>
    7274:	add	r5, r0, r5
    7278:	cmp	r8, #1
    727c:	blt	7630 <ReadSingleData+0x1690>
    7280:	sub	r0, r9, r7
    7284:	sub	r0, r0, #256	; 0x100
    7288:	vldr	d16, [r4]
    728c:	add	r4, r4, #8
    7290:	subs	r0, r0, #1
    7294:	vcvt.f32.f64	s0, d16
    7298:	vstmia	r6!, {s0}
    729c:	bne	7288 <ReadSingleData+0x12e8>
    72a0:	b	7630 <ReadSingleData+0x1690>
    72a4:	sub	r0, r7, #256	; 0x100
    72a8:	str	r7, [sp, #4]
    72ac:	add	r1, r9, #1024	; 0x400
    72b0:	mov	r7, r9
    72b4:	mov	r5, #0
    72b8:	str	r6, [sp]
    72bc:	str	r0, [sp, #8]
    72c0:	mov	r0, #0
    72c4:	ldr	r3, [r4]
    72c8:	mov	r8, r1
    72cc:	mov	r1, sl
    72d0:	add	sl, sp, #48	; 0x30
    72d4:	str	r0, [sp, #12]
    72d8:	mov	r2, #256	; 0x100
    72dc:	mov	r0, sl
    72e0:	bl	18d0 <fread@plt>
    72e4:	mov	r4, r0
    72e8:	mov	r6, #0
    72ec:	vld1.64	{d8-d9}, [sl]!
    72f0:	vmov.32	r0, d9[0]
    72f4:	vmov.32	r1, d9[1]
    72f8:	bl	4b638 <__aeabi_l2f>
    72fc:	vmov.32	r2, d8[0]
    7300:	vmov.32	r1, d8[1]
    7304:	vmov	s17, r0
    7308:	mov	r0, r2
    730c:	bl	4b638 <__aeabi_l2f>
    7310:	vmov	s16, r0
    7314:	add	r0, r7, r6
    7318:	add	r6, r6, #8
    731c:	cmp	r6, #1024	; 0x400
    7320:	vstr	d8, [r0]
    7324:	bne	72ec <ReadSingleData+0x134c>
    7328:	ldr	r6, [sp, #12]
    732c:	ldr	r2, [sp, #8]
    7330:	add	r5, r4, r5
    7334:	ldr	sl, [sp, #16]
    7338:	ldr	r4, [sp, #20]
    733c:	add	r7, r7, #1024	; 0x400
    7340:	add	r1, r8, #1024	; 0x400
    7344:	add	r0, r6, #256	; 0x100
    7348:	cmp	r0, r2
    734c:	blt	72c4 <ReadSingleData+0x1324>
    7350:	ldr	r7, [sp, #4]
    7354:	cmp	r0, r7
    7358:	bge	73bc <ReadSingleData+0x141c>
    735c:	ldr	r3, [r4]
    7360:	add	r4, sp, #48	; 0x30
    7364:	sub	r2, r7, r0
    7368:	mov	r1, sl
    736c:	mov	r0, r4
    7370:	str	r2, [sp, #8]
    7374:	bl	18d0 <fread@plt>
    7378:	add	r5, r0, r5
    737c:	ldr	r0, [sp, #8]
    7380:	cmp	r0, #1
    7384:	blt	73a8 <ReadSingleData+0x1408>
    7388:	sub	r0, r7, r6
    738c:	sub	r6, r0, #256	; 0x100
    7390:	ldrd	r0, [r4]
    7394:	bl	4b638 <__aeabi_l2f>
    7398:	str	r0, [r8], #4
    739c:	add	r4, r4, #8
    73a0:	subs	r6, r6, #1
    73a4:	bne	7390 <ReadSingleData+0x13f0>
    73a8:	ldr	r4, [sp, #20]
    73ac:	b	73bc <ReadSingleData+0x141c>
    73b0:	ldr	r4, [sp, #20]
    73b4:	b	73c0 <ReadSingleData+0x1420>
    73b8:	ldr	sl, [sp, #16]
    73bc:	ldr	r6, [sp]
    73c0:	cmp	r6, #13
    73c4:	bne	7630 <ReadSingleData+0x1690>
    73c8:	ldr	r0, [r4, #20]
    73cc:	cmp	r0, #0
    73d0:	beq	7420 <ReadSingleData+0x1480>
    73d4:	cmp	r7, #256	; 0x100
    73d8:	bgt	7468 <ReadSingleData+0x14c8>
    73dc:	ldr	r3, [r4]
    73e0:	add	r4, sp, #48	; 0x30
    73e4:	mov	r1, sl
    73e8:	mov	r2, r7
    73ec:	mov	r0, r4
    73f0:	bl	18d0 <fread@plt>
    73f4:	add	r5, r0, r5
    73f8:	cmp	r7, #1
    73fc:	blt	7630 <ReadSingleData+0x1690>
    7400:	mov	r0, r4
    7404:	bl	1c0c <Mat_uint64Swap>
    7408:	bl	4b628 <__aeabi_ul2f>
    740c:	str	r0, [r9], #4
    7410:	add	r4, r4, #8
    7414:	subs	r7, r7, #1
    7418:	bne	7400 <ReadSingleData+0x1460>
    741c:	b	7630 <ReadSingleData+0x1690>
    7420:	cmp	r7, #256	; 0x100
    7424:	bgt	7540 <ReadSingleData+0x15a0>
    7428:	ldr	r3, [r4]
    742c:	add	r4, sp, #48	; 0x30
    7430:	mov	r1, sl
    7434:	mov	r2, r7
    7438:	mov	r0, r4
    743c:	bl	18d0 <fread@plt>
    7440:	add	r5, r0, r5
    7444:	cmp	r7, #1
    7448:	blt	7630 <ReadSingleData+0x1690>
    744c:	ldrd	r0, [r4]
    7450:	bl	4b628 <__aeabi_ul2f>
    7454:	str	r0, [r9], #4
    7458:	add	r4, r4, #8
    745c:	subs	r7, r7, #1
    7460:	bne	744c <ReadSingleData+0x14ac>
    7464:	b	7630 <ReadSingleData+0x1690>
    7468:	sub	r0, r7, #256	; 0x100
    746c:	add	r1, r9, #1024	; 0x400
    7470:	str	r7, [sp, #4]
    7474:	str	r0, [sp, #12]
    7478:	mov	r0, #0
    747c:	mov	r8, r1
    7480:	ldr	r3, [r4]
    7484:	ldr	r1, [sp, #16]
    7488:	add	r6, sp, #48	; 0x30
    748c:	mov	sl, r0
    7490:	mov	r2, #256	; 0x100
    7494:	mov	r0, r6
    7498:	bl	18d0 <fread@plt>
    749c:	mov	r4, r0
    74a0:	mov	r7, #0
    74a4:	mov	r0, r6
    74a8:	bl	1c0c <Mat_uint64Swap>
    74ac:	bl	4b628 <__aeabi_ul2f>
    74b0:	str	r0, [r9, r7]
    74b4:	add	r7, r7, #4
    74b8:	add	r6, r6, #8
    74bc:	cmp	r7, #1024	; 0x400
    74c0:	bne	74a4 <ReadSingleData+0x1504>
    74c4:	ldr	r2, [sp, #12]
    74c8:	add	r5, r4, r5
    74cc:	ldr	r4, [sp, #20]
    74d0:	add	r0, sl, #256	; 0x100
    74d4:	add	r9, r9, #1024	; 0x400
    74d8:	add	r1, r8, #1024	; 0x400
    74dc:	cmp	r0, r2
    74e0:	blt	747c <ReadSingleData+0x14dc>
    74e4:	ldr	r7, [sp, #4]
    74e8:	cmp	r0, r7
    74ec:	bge	762c <ReadSingleData+0x168c>
    74f0:	ldr	r3, [r4]
    74f4:	ldr	r1, [sp, #16]
    74f8:	sub	r6, r7, r0
    74fc:	add	r4, sp, #48	; 0x30
    7500:	mov	r0, r4
    7504:	mov	r2, r6
    7508:	bl	18d0 <fread@plt>
    750c:	add	r5, r0, r5
    7510:	cmp	r6, #1
    7514:	blt	762c <ReadSingleData+0x168c>
    7518:	sub	r0, r7, sl
    751c:	sub	r6, r0, #256	; 0x100
    7520:	mov	r0, r4
    7524:	bl	1c0c <Mat_uint64Swap>
    7528:	bl	4b628 <__aeabi_ul2f>
    752c:	str	r0, [r8], #4
    7530:	add	r4, r4, #8
    7534:	subs	r6, r6, #1
    7538:	bne	7520 <ReadSingleData+0x1580>
    753c:	b	762c <ReadSingleData+0x168c>
    7540:	sub	r0, r7, #256	; 0x100
    7544:	add	r1, r9, #1024	; 0x400
    7548:	str	r7, [sp, #4]
    754c:	str	r0, [sp, #12]
    7550:	mov	r0, #0
    7554:	mov	sl, r1
    7558:	ldr	r3, [r4]
    755c:	ldr	r1, [sp, #16]
    7560:	add	r6, sp, #48	; 0x30
    7564:	mov	r8, r0
    7568:	mov	r2, #256	; 0x100
    756c:	mov	r0, r6
    7570:	bl	18d0 <fread@plt>
    7574:	mov	r4, r0
    7578:	mov	r7, #0
    757c:	vld1.64	{d8-d9}, [r6]!
    7580:	vmov.32	r0, d9[0]
    7584:	vmov.32	r1, d9[1]
    7588:	bl	4b628 <__aeabi_ul2f>
    758c:	vmov.32	r2, d8[0]
    7590:	vmov.32	r1, d8[1]
    7594:	vmov	s17, r0
    7598:	mov	r0, r2
    759c:	bl	4b628 <__aeabi_ul2f>
    75a0:	vmov	s16, r0
    75a4:	add	r0, r9, r7
    75a8:	add	r7, r7, #8
    75ac:	cmp	r7, #1024	; 0x400
    75b0:	vstr	d8, [r0]
    75b4:	bne	757c <ReadSingleData+0x15dc>
    75b8:	ldr	r2, [sp, #12]
    75bc:	add	r5, r4, r5
    75c0:	ldr	r4, [sp, #20]
    75c4:	add	r0, r8, #256	; 0x100
    75c8:	add	r9, r9, #1024	; 0x400
    75cc:	add	r1, sl, #1024	; 0x400
    75d0:	cmp	r0, r2
    75d4:	blt	7554 <ReadSingleData+0x15b4>
    75d8:	ldr	r6, [sp, #4]
    75dc:	cmp	r0, r6
    75e0:	bge	762c <ReadSingleData+0x168c>
    75e4:	ldr	r3, [r4]
    75e8:	ldr	r1, [sp, #16]
    75ec:	sub	r7, r6, r0
    75f0:	add	r4, sp, #48	; 0x30
    75f4:	mov	r0, r4
    75f8:	mov	r2, r7
    75fc:	bl	18d0 <fread@plt>
    7600:	add	r5, r0, r5
    7604:	cmp	r7, #1
    7608:	blt	762c <ReadSingleData+0x168c>
    760c:	sub	r0, r6, r8
    7610:	sub	r6, r0, #256	; 0x100
    7614:	ldrd	r0, [r4]
    7618:	bl	4b628 <__aeabi_ul2f>
    761c:	str	r0, [sl], #4
    7620:	add	r4, r4, #8
    7624:	subs	r6, r6, #1
    7628:	bne	7614 <ReadSingleData+0x1674>
    762c:	ldr	sl, [sp, #16]
    7630:	mul	r0, r5, sl
    7634:	b	5fd0 <ReadSingleData+0x30>

00007638 <ReadCompressedSingleData>:
    7638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    763c:	add	fp, sp, #28
    7640:	sub	sp, sp, #12
    7644:	mov	r7, r0
    7648:	mov	r0, #0
    764c:	cmp	r1, #0
    7650:	beq	7b98 <ReadCompressedSingleData+0x560>
    7654:	cmp	r7, #0
    7658:	movne	r5, r2
    765c:	cmpne	r2, #0
    7660:	beq	7b98 <ReadCompressedSingleData+0x560>
    7664:	ldr	sl, [fp, #8]
    7668:	mov	r0, r3
    766c:	mov	r4, r3
    7670:	mov	r6, r1
    7674:	bl	193c <Mat_SizeOf@plt>
    7678:	mov	r9, r0
    767c:	sub	r0, r4, #1
    7680:	cmp	r0, #12
    7684:	bhi	7b94 <ReadCompressedSingleData+0x55c>
    7688:	add	r1, pc, #4
    768c:	ldr	r0, [r1, r0, lsl #2]
    7690:	add	pc, r1, r0
    7694:	.word	0x00000034
    7698:	.word	0x00000074
    769c:	.word	0x000000b4
    76a0:	.word	0x00000104
    76a4:	.word	0x00000154
    76a8:	.word	0x000001a4
    76ac:	.word	0x000001f4
    76b0:	.word	0x00000500
    76b4:	.word	0x0000023c
    76b8:	.word	0x00000500
    76bc:	.word	0x00000500
    76c0:	.word	0x00000288
    76c4:	.word	0x000002d4
    76c8:	cmp	sl, #1
    76cc:	blt	7b94 <ReadCompressedSingleData+0x55c>
    76d0:	mov	r8, sp
    76d4:	mov	r4, sl
    76d8:	mov	r0, r7
    76dc:	mov	r1, r6
    76e0:	mov	r2, r8
    76e4:	mov	r3, r9
    76e8:	bl	31dc <InflateData>
    76ec:	ldrsb	r0, [sp]
    76f0:	subs	r4, r4, #1
    76f4:	vmov	s0, r0
    76f8:	vcvt.f32.s32	s0, s0
    76fc:	vstmia	r5!, {s0}
    7700:	bne	76d8 <ReadCompressedSingleData+0xa0>
    7704:	b	7b94 <ReadCompressedSingleData+0x55c>
    7708:	cmp	sl, #1
    770c:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7710:	mov	r8, sp
    7714:	mov	r4, sl
    7718:	mov	r0, r7
    771c:	mov	r1, r6
    7720:	mov	r2, r8
    7724:	mov	r3, r9
    7728:	bl	31dc <InflateData>
    772c:	ldrb	r0, [sp]
    7730:	subs	r4, r4, #1
    7734:	vmov	s0, r0
    7738:	vcvt.f32.u32	s0, s0
    773c:	vstmia	r5!, {s0}
    7740:	bne	7718 <ReadCompressedSingleData+0xe0>
    7744:	b	7b94 <ReadCompressedSingleData+0x55c>
    7748:	ldr	r0, [r7, #20]
    774c:	cmp	r0, #0
    7750:	beq	79b4 <ReadCompressedSingleData+0x37c>
    7754:	cmp	sl, #1
    7758:	blt	7b94 <ReadCompressedSingleData+0x55c>
    775c:	mov	r8, sp
    7760:	mov	r4, sl
    7764:	mov	r0, r7
    7768:	mov	r1, r6
    776c:	mov	r2, r8
    7770:	mov	r3, r9
    7774:	bl	31dc <InflateData>
    7778:	mov	r0, r8
    777c:	bl	1c58 <Mat_int16Swap>
    7780:	vmov	s0, r0
    7784:	subs	r4, r4, #1
    7788:	vcvt.f32.s32	s0, s0
    778c:	vstmia	r5!, {s0}
    7790:	bne	7764 <ReadCompressedSingleData+0x12c>
    7794:	b	7b94 <ReadCompressedSingleData+0x55c>
    7798:	ldr	r0, [r7, #20]
    779c:	cmp	r0, #0
    77a0:	beq	79f4 <ReadCompressedSingleData+0x3bc>
    77a4:	cmp	sl, #1
    77a8:	blt	7b94 <ReadCompressedSingleData+0x55c>
    77ac:	mov	r8, sp
    77b0:	mov	r4, sl
    77b4:	mov	r0, r7
    77b8:	mov	r1, r6
    77bc:	mov	r2, r8
    77c0:	mov	r3, r9
    77c4:	bl	31dc <InflateData>
    77c8:	mov	r0, r8
    77cc:	bl	1c6c <Mat_uint16Swap>
    77d0:	vmov	s0, r0
    77d4:	subs	r4, r4, #1
    77d8:	vcvt.f32.u32	s0, s0
    77dc:	vstmia	r5!, {s0}
    77e0:	bne	77b4 <ReadCompressedSingleData+0x17c>
    77e4:	b	7b94 <ReadCompressedSingleData+0x55c>
    77e8:	ldr	r0, [r7, #20]
    77ec:	cmp	r0, #0
    77f0:	beq	7a34 <ReadCompressedSingleData+0x3fc>
    77f4:	cmp	sl, #1
    77f8:	blt	7b94 <ReadCompressedSingleData+0x55c>
    77fc:	mov	r8, sp
    7800:	mov	r4, sl
    7804:	mov	r0, r7
    7808:	mov	r1, r6
    780c:	mov	r2, r8
    7810:	mov	r3, r9
    7814:	bl	31dc <InflateData>
    7818:	mov	r0, r8
    781c:	bl	1c30 <Mat_int32Swap>
    7820:	vmov	s0, r0
    7824:	subs	r4, r4, #1
    7828:	vcvt.f32.s32	s0, s0
    782c:	vstmia	r5!, {s0}
    7830:	bne	7804 <ReadCompressedSingleData+0x1cc>
    7834:	b	7b94 <ReadCompressedSingleData+0x55c>
    7838:	ldr	r0, [r7, #20]
    783c:	cmp	r0, #0
    7840:	beq	7a70 <ReadCompressedSingleData+0x438>
    7844:	cmp	sl, #1
    7848:	blt	7b94 <ReadCompressedSingleData+0x55c>
    784c:	mov	r8, sp
    7850:	mov	r4, sl
    7854:	mov	r0, r7
    7858:	mov	r1, r6
    785c:	mov	r2, r8
    7860:	mov	r3, r9
    7864:	bl	31dc <InflateData>
    7868:	mov	r0, r8
    786c:	bl	1c44 <Mat_uint32Swap>
    7870:	vmov	s0, r0
    7874:	subs	r4, r4, #1
    7878:	vcvt.f32.u32	s0, s0
    787c:	vstmia	r5!, {s0}
    7880:	bne	7854 <ReadCompressedSingleData+0x21c>
    7884:	b	7b94 <ReadCompressedSingleData+0x55c>
    7888:	ldr	r0, [r7, #20]
    788c:	cmp	r0, #0
    7890:	beq	7aac <ReadCompressedSingleData+0x474>
    7894:	cmp	sl, #1
    7898:	blt	7b94 <ReadCompressedSingleData+0x55c>
    789c:	mov	r8, sp
    78a0:	mov	r4, sl
    78a4:	mov	r0, r7
    78a8:	mov	r1, r6
    78ac:	mov	r2, r8
    78b0:	mov	r3, r9
    78b4:	bl	31dc <InflateData>
    78b8:	mov	r0, r8
    78bc:	bl	1c84 <Mat_floatSwap>
    78c0:	vstmia	r5!, {s0}
    78c4:	subs	r4, r4, #1
    78c8:	bne	78a4 <ReadCompressedSingleData+0x26c>
    78cc:	b	7b94 <ReadCompressedSingleData+0x55c>
    78d0:	ldr	r0, [r7, #20]
    78d4:	cmp	r0, #0
    78d8:	beq	7ae4 <ReadCompressedSingleData+0x4ac>
    78dc:	cmp	sl, #1
    78e0:	blt	7b94 <ReadCompressedSingleData+0x55c>
    78e4:	mov	r8, sp
    78e8:	mov	r4, sl
    78ec:	mov	r0, r7
    78f0:	mov	r1, r6
    78f4:	mov	r2, r8
    78f8:	mov	r3, r9
    78fc:	bl	31dc <InflateData>
    7900:	mov	r0, r8
    7904:	bl	1cc8 <Mat_doubleSwap>
    7908:	vcvt.f32.f64	s0, d0
    790c:	subs	r4, r4, #1
    7910:	vstmia	r5!, {s0}
    7914:	bne	78ec <ReadCompressedSingleData+0x2b4>
    7918:	b	7b94 <ReadCompressedSingleData+0x55c>
    791c:	ldr	r0, [r7, #20]
    7920:	cmp	r0, #0
    7924:	beq	7b20 <ReadCompressedSingleData+0x4e8>
    7928:	cmp	sl, #1
    792c:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7930:	mov	r8, sp
    7934:	mov	r4, sl
    7938:	mov	r0, r7
    793c:	mov	r1, r6
    7940:	mov	r2, r8
    7944:	mov	r3, r9
    7948:	bl	31dc <InflateData>
    794c:	mov	r0, r8
    7950:	bl	1bbc <Mat_int64Swap>
    7954:	bl	4b638 <__aeabi_l2f>
    7958:	str	r0, [r5], #4
    795c:	subs	r4, r4, #1
    7960:	bne	7938 <ReadCompressedSingleData+0x300>
    7964:	b	7b94 <ReadCompressedSingleData+0x55c>
    7968:	ldr	r0, [r7, #20]
    796c:	cmp	r0, #0
    7970:	beq	7b5c <ReadCompressedSingleData+0x524>
    7974:	cmp	sl, #1
    7978:	blt	7b94 <ReadCompressedSingleData+0x55c>
    797c:	mov	r8, sp
    7980:	mov	r4, sl
    7984:	mov	r0, r7
    7988:	mov	r1, r6
    798c:	mov	r2, r8
    7990:	mov	r3, r9
    7994:	bl	31dc <InflateData>
    7998:	mov	r0, r8
    799c:	bl	1c0c <Mat_uint64Swap>
    79a0:	bl	4b628 <__aeabi_ul2f>
    79a4:	str	r0, [r5], #4
    79a8:	subs	r4, r4, #1
    79ac:	bne	7984 <ReadCompressedSingleData+0x34c>
    79b0:	b	7b94 <ReadCompressedSingleData+0x55c>
    79b4:	cmp	sl, #1
    79b8:	blt	7b94 <ReadCompressedSingleData+0x55c>
    79bc:	mov	r8, sp
    79c0:	mov	r4, sl
    79c4:	mov	r0, r7
    79c8:	mov	r1, r6
    79cc:	mov	r2, r8
    79d0:	mov	r3, r9
    79d4:	bl	31dc <InflateData>
    79d8:	ldrsh	r0, [sp]
    79dc:	subs	r4, r4, #1
    79e0:	vmov	s0, r0
    79e4:	vcvt.f32.s32	s0, s0
    79e8:	vstmia	r5!, {s0}
    79ec:	bne	79c4 <ReadCompressedSingleData+0x38c>
    79f0:	b	7b94 <ReadCompressedSingleData+0x55c>
    79f4:	cmp	sl, #1
    79f8:	blt	7b94 <ReadCompressedSingleData+0x55c>
    79fc:	mov	r8, sp
    7a00:	mov	r4, sl
    7a04:	mov	r0, r7
    7a08:	mov	r1, r6
    7a0c:	mov	r2, r8
    7a10:	mov	r3, r9
    7a14:	bl	31dc <InflateData>
    7a18:	ldrh	r0, [sp]
    7a1c:	subs	r4, r4, #1
    7a20:	vmov	s0, r0
    7a24:	vcvt.f32.u32	s0, s0
    7a28:	vstmia	r5!, {s0}
    7a2c:	bne	7a04 <ReadCompressedSingleData+0x3cc>
    7a30:	b	7b94 <ReadCompressedSingleData+0x55c>
    7a34:	cmp	sl, #1
    7a38:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7a3c:	mov	r8, sp
    7a40:	mov	r4, sl
    7a44:	mov	r0, r7
    7a48:	mov	r1, r6
    7a4c:	mov	r2, r8
    7a50:	mov	r3, r9
    7a54:	bl	31dc <InflateData>
    7a58:	vldr	s0, [sp]
    7a5c:	subs	r4, r4, #1
    7a60:	vcvt.f32.s32	s0, s0
    7a64:	vstmia	r5!, {s0}
    7a68:	bne	7a44 <ReadCompressedSingleData+0x40c>
    7a6c:	b	7b94 <ReadCompressedSingleData+0x55c>
    7a70:	cmp	sl, #1
    7a74:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7a78:	mov	r8, sp
    7a7c:	mov	r4, sl
    7a80:	mov	r0, r7
    7a84:	mov	r1, r6
    7a88:	mov	r2, r8
    7a8c:	mov	r3, r9
    7a90:	bl	31dc <InflateData>
    7a94:	vldr	s0, [sp]
    7a98:	subs	r4, r4, #1
    7a9c:	vcvt.f32.u32	s0, s0
    7aa0:	vstmia	r5!, {s0}
    7aa4:	bne	7a80 <ReadCompressedSingleData+0x448>
    7aa8:	b	7b94 <ReadCompressedSingleData+0x55c>
    7aac:	cmp	sl, #1
    7ab0:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7ab4:	mov	r8, sp
    7ab8:	mov	r4, sl
    7abc:	mov	r0, r7
    7ac0:	mov	r1, r6
    7ac4:	mov	r2, r8
    7ac8:	mov	r3, r9
    7acc:	bl	31dc <InflateData>
    7ad0:	ldr	r0, [sp]
    7ad4:	subs	r4, r4, #1
    7ad8:	str	r0, [r5], #4
    7adc:	bne	7abc <ReadCompressedSingleData+0x484>
    7ae0:	b	7b94 <ReadCompressedSingleData+0x55c>
    7ae4:	cmp	sl, #1
    7ae8:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7aec:	mov	r8, sp
    7af0:	mov	r4, sl
    7af4:	mov	r0, r7
    7af8:	mov	r1, r6
    7afc:	mov	r2, r8
    7b00:	mov	r3, r9
    7b04:	bl	31dc <InflateData>
    7b08:	vldr	d16, [sp]
    7b0c:	subs	r4, r4, #1
    7b10:	vcvt.f32.f64	s0, d16
    7b14:	vstmia	r5!, {s0}
    7b18:	bne	7af4 <ReadCompressedSingleData+0x4bc>
    7b1c:	b	7b94 <ReadCompressedSingleData+0x55c>
    7b20:	cmp	sl, #1
    7b24:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7b28:	mov	r8, sp
    7b2c:	mov	r4, sl
    7b30:	mov	r0, r7
    7b34:	mov	r1, r6
    7b38:	mov	r2, r8
    7b3c:	mov	r3, r9
    7b40:	bl	31dc <InflateData>
    7b44:	ldm	sp, {r0, r1}
    7b48:	bl	4b638 <__aeabi_l2f>
    7b4c:	str	r0, [r5], #4
    7b50:	subs	r4, r4, #1
    7b54:	bne	7b30 <ReadCompressedSingleData+0x4f8>
    7b58:	b	7b94 <ReadCompressedSingleData+0x55c>
    7b5c:	cmp	sl, #1
    7b60:	blt	7b94 <ReadCompressedSingleData+0x55c>
    7b64:	mov	r8, sp
    7b68:	mov	r4, sl
    7b6c:	mov	r0, r7
    7b70:	mov	r1, r6
    7b74:	mov	r2, r8
    7b78:	mov	r3, r9
    7b7c:	bl	31dc <InflateData>
    7b80:	ldm	sp, {r0, r1}
    7b84:	bl	4b628 <__aeabi_ul2f>
    7b88:	str	r0, [r5], #4
    7b8c:	subs	r4, r4, #1
    7b90:	bne	7b6c <ReadCompressedSingleData+0x534>
    7b94:	mul	r0, r9, sl
    7b98:	sub	sp, fp, #28
    7b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007ba0 <ReadInt64Data>:
    7ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ba4:	add	fp, sp, #28
    7ba8:	sub	sp, sp, #60	; 0x3c
    7bac:	sub	sp, sp, #2048	; 0x800
    7bb0:	mov	r4, r0
    7bb4:	mov	r0, #0
    7bb8:	cmp	r4, #0
    7bbc:	movne	r8, r1
    7bc0:	cmpne	r1, #0
    7bc4:	bne	7bd0 <ReadInt64Data+0x30>
    7bc8:	sub	sp, fp, #28
    7bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7bd0:	ldr	r1, [r4]
    7bd4:	cmp	r1, #0
    7bd8:	beq	7bc8 <ReadInt64Data+0x28>
    7bdc:	mov	r0, r2
    7be0:	mov	r5, r3
    7be4:	mov	r9, r2
    7be8:	bl	193c <Mat_SizeOf@plt>
    7bec:	mov	r7, r0
    7bf0:	sub	r0, r9, #1
    7bf4:	mov	sl, #0
    7bf8:	str	r4, [sp, #20]
    7bfc:	cmp	r0, #11
    7c00:	str	r7, [sp, #16]
    7c04:	bhi	906c <ReadInt64Data+0x14cc>
    7c08:	add	r1, pc, #4
    7c0c:	ldr	r0, [r1, r0, lsl #2]
    7c10:	add	pc, r1, r0
    7c14:	.word	0x00000030
    7c18:	.word	0x00000078
    7c1c:	.word	0x000000c0
    7c20:	.word	0x0000011c
    7c24:	.word	0x0000017c
    7c28:	.word	0x000001d8
    7c2c:	.word	0x00000240
    7c30:	.word	0x00001458
    7c34:	.word	0x000002a0
    7c38:	.word	0x00001458
    7c3c:	.word	0x00001458
    7c40:	.word	0x00000300
    7c44:	cmp	r5, #256	; 0x100
    7c48:	bgt	7f7c <ReadInt64Data+0x3dc>
    7c4c:	ldr	r3, [r4]
    7c50:	add	r4, sp, #56	; 0x38
    7c54:	mov	r1, r7
    7c58:	mov	r2, r5
    7c5c:	mov	r0, r4
    7c60:	bl	18d0 <fread@plt>
    7c64:	cmp	r5, #1
    7c68:	blt	827c <ReadInt64Data+0x6dc>
    7c6c:	ldrsb	r2, [r4], #1
    7c70:	subs	r5, r5, #1
    7c74:	asr	r1, r2, #31
    7c78:	str	r2, [r8]
    7c7c:	str	r1, [r8, #4]
    7c80:	add	r8, r8, #8
    7c84:	bne	7c6c <ReadInt64Data+0xcc>
    7c88:	b	827c <ReadInt64Data+0x6dc>
    7c8c:	cmp	r5, #256	; 0x100
    7c90:	bgt	806c <ReadInt64Data+0x4cc>
    7c94:	ldr	r3, [r4]
    7c98:	add	r4, sp, #56	; 0x38
    7c9c:	mov	r1, r7
    7ca0:	mov	r2, r5
    7ca4:	mov	r0, r4
    7ca8:	bl	18d0 <fread@plt>
    7cac:	cmp	r5, #1
    7cb0:	blt	827c <ReadInt64Data+0x6dc>
    7cb4:	mov	r1, #0
    7cb8:	ldrb	r2, [r4], #1
    7cbc:	subs	r5, r5, #1
    7cc0:	str	r2, [r8]
    7cc4:	str	r1, [r8, #4]
    7cc8:	add	r8, r8, #8
    7ccc:	bne	7cb8 <ReadInt64Data+0x118>
    7cd0:	b	827c <ReadInt64Data+0x6dc>
    7cd4:	ldr	r0, [r4, #20]
    7cd8:	cmp	r0, #0
    7cdc:	beq	8160 <ReadInt64Data+0x5c0>
    7ce0:	cmp	r5, #256	; 0x100
    7ce4:	bgt	835c <ReadInt64Data+0x7bc>
    7ce8:	ldr	r3, [r4]
    7cec:	add	r4, sp, #56	; 0x38
    7cf0:	mov	r1, r7
    7cf4:	mov	r2, r5
    7cf8:	mov	r0, r4
    7cfc:	bl	18d0 <fread@plt>
    7d00:	mov	r6, r0
    7d04:	cmp	r5, #1
    7d08:	blt	8318 <ReadInt64Data+0x778>
    7d0c:	mov	r0, r4
    7d10:	bl	1c58 <Mat_int16Swap>
    7d14:	asr	r1, r0, #31
    7d18:	add	r4, r4, #2
    7d1c:	subs	r5, r5, #1
    7d20:	strd	r0, [r8]
    7d24:	add	r8, r8, #8
    7d28:	bne	7d0c <ReadInt64Data+0x16c>
    7d2c:	b	8318 <ReadInt64Data+0x778>
    7d30:	ldr	r0, [r4, #20]
    7d34:	cmp	r0, #0
    7d38:	beq	81a8 <ReadInt64Data+0x608>
    7d3c:	cmp	r5, #256	; 0x100
    7d40:	bgt	844c <ReadInt64Data+0x8ac>
    7d44:	ldr	r3, [r4]
    7d48:	add	r4, sp, #56	; 0x38
    7d4c:	mov	r1, r7
    7d50:	mov	r2, r5
    7d54:	mov	r0, r4
    7d58:	bl	18d0 <fread@plt>
    7d5c:	mov	r9, r0
    7d60:	cmp	r5, #1
    7d64:	blt	7e4c <ReadInt64Data+0x2ac>
    7d68:	mov	r7, #0
    7d6c:	mov	r0, r4
    7d70:	bl	1c6c <Mat_uint16Swap>
    7d74:	mov	r6, r0
    7d78:	add	r4, r4, #2
    7d7c:	subs	r5, r5, #1
    7d80:	strd	r6, [r8]
    7d84:	add	r8, r8, #8
    7d88:	bne	7d6c <ReadInt64Data+0x1cc>
    7d8c:	b	7e48 <ReadInt64Data+0x2a8>
    7d90:	ldr	r0, [r4, #20]
    7d94:	cmp	r0, #0
    7d98:	beq	81f0 <ReadInt64Data+0x650>
    7d9c:	cmp	r5, #256	; 0x100
    7da0:	bgt	8544 <ReadInt64Data+0x9a4>
    7da4:	ldr	r3, [r4]
    7da8:	add	r4, sp, #56	; 0x38
    7dac:	mov	r1, r7
    7db0:	mov	r2, r5
    7db4:	mov	r0, r4
    7db8:	bl	18d0 <fread@plt>
    7dbc:	mov	r6, r0
    7dc0:	cmp	r5, #1
    7dc4:	blt	8318 <ReadInt64Data+0x778>
    7dc8:	mov	r0, r4
    7dcc:	bl	1c30 <Mat_int32Swap>
    7dd0:	asr	r1, r0, #31
    7dd4:	add	r4, r4, #4
    7dd8:	subs	r5, r5, #1
    7ddc:	strd	r0, [r8]
    7de0:	add	r8, r8, #8
    7de4:	bne	7dc8 <ReadInt64Data+0x228>
    7de8:	b	8318 <ReadInt64Data+0x778>
    7dec:	ldr	r0, [r4, #20]
    7df0:	cmp	r0, #0
    7df4:	beq	8238 <ReadInt64Data+0x698>
    7df8:	cmp	r5, #256	; 0x100
    7dfc:	bgt	8634 <ReadInt64Data+0xa94>
    7e00:	ldr	r3, [r4]
    7e04:	add	r4, sp, #56	; 0x38
    7e08:	mov	r1, r7
    7e0c:	mov	r2, r5
    7e10:	mov	r0, r4
    7e14:	bl	18d0 <fread@plt>
    7e18:	mov	r9, r0
    7e1c:	cmp	r5, #1
    7e20:	blt	7e4c <ReadInt64Data+0x2ac>
    7e24:	mov	r7, #0
    7e28:	mov	r0, r4
    7e2c:	bl	1c44 <Mat_uint32Swap>
    7e30:	mov	r6, r0
    7e34:	add	r4, r4, #4
    7e38:	subs	r5, r5, #1
    7e3c:	strd	r6, [r8]
    7e40:	add	r8, r8, #8
    7e44:	bne	7e28 <ReadInt64Data+0x288>
    7e48:	ldr	r7, [sp, #16]
    7e4c:	mov	r5, r9
    7e50:	b	9108 <ReadInt64Data+0x1568>
    7e54:	ldr	r0, [r4, #20]
    7e58:	cmp	r0, #0
    7e5c:	beq	8284 <ReadInt64Data+0x6e4>
    7e60:	cmp	r5, #256	; 0x100
    7e64:	bgt	872c <ReadInt64Data+0xb8c>
    7e68:	ldr	r3, [r4]
    7e6c:	add	r4, sp, #56	; 0x38
    7e70:	mov	r1, r7
    7e74:	mov	r2, r5
    7e78:	mov	r0, r4
    7e7c:	bl	18d0 <fread@plt>
    7e80:	mov	r6, r0
    7e84:	cmp	r5, #1
    7e88:	blt	8318 <ReadInt64Data+0x778>
    7e8c:	mov	r0, r4
    7e90:	bl	1c84 <Mat_floatSwap>
    7e94:	vmov	r0, s0
    7e98:	bl	4b6b4 <__aeabi_f2lz>
    7e9c:	strd	r0, [r8]
    7ea0:	add	r4, r4, #4
    7ea4:	add	r8, r8, #8
    7ea8:	subs	r5, r5, #1
    7eac:	bne	7e8c <ReadInt64Data+0x2ec>
    7eb0:	b	8318 <ReadInt64Data+0x778>
    7eb4:	ldr	r0, [r4, #20]
    7eb8:	cmp	r0, #0
    7ebc:	beq	82cc <ReadInt64Data+0x72c>
    7ec0:	cmp	r5, #256	; 0x100
    7ec4:	bgt	8824 <ReadInt64Data+0xc84>
    7ec8:	ldr	r3, [r4]
    7ecc:	add	r4, sp, #56	; 0x38
    7ed0:	mov	r1, r7
    7ed4:	mov	r2, r5
    7ed8:	mov	r0, r4
    7edc:	bl	18d0 <fread@plt>
    7ee0:	mov	r6, r0
    7ee4:	cmp	r5, #1
    7ee8:	blt	8318 <ReadInt64Data+0x778>
    7eec:	mov	r0, r4
    7ef0:	bl	1cc8 <Mat_doubleSwap>
    7ef4:	vmov	r0, r1, d0
    7ef8:	bl	4b6e0 <__aeabi_d2lz>
    7efc:	strd	r0, [r8]
    7f00:	add	r4, r4, #8
    7f04:	add	r8, r8, #8
    7f08:	subs	r5, r5, #1
    7f0c:	bne	7eec <ReadInt64Data+0x34c>
    7f10:	b	8318 <ReadInt64Data+0x778>
    7f14:	ldr	r0, [r4, #20]
    7f18:	cmp	r0, #0
    7f1c:	beq	8320 <ReadInt64Data+0x780>
    7f20:	cmp	r5, #256	; 0x100
    7f24:	bgt	891c <ReadInt64Data+0xd7c>
    7f28:	ldr	r3, [r4]
    7f2c:	add	r4, sp, #56	; 0x38
    7f30:	mov	r1, r7
    7f34:	mov	r2, r5
    7f38:	mov	r0, r4
    7f3c:	bl	18d0 <fread@plt>
    7f40:	mov	sl, r0
    7f44:	cmp	r5, #1
    7f48:	blt	7f74 <ReadInt64Data+0x3d4>
    7f4c:	mov	r6, r8
    7f50:	mov	r7, r5
    7f54:	mov	r0, r4
    7f58:	bl	1bbc <Mat_int64Swap>
    7f5c:	strd	r0, [r6]
    7f60:	add	r4, r4, #8
    7f64:	add	r6, r6, #8
    7f68:	subs	r7, r7, #1
    7f6c:	bne	7f54 <ReadInt64Data+0x3b4>
    7f70:	ldr	r7, [sp, #16]
    7f74:	ldr	r4, [sp, #20]
    7f78:	b	906c <ReadInt64Data+0x14cc>
    7f7c:	sub	r0, r5, #256	; 0x100
    7f80:	str	r5, [sp, #4]
    7f84:	add	r1, r8, #2048	; 0x800
    7f88:	add	r4, sp, #56	; 0x38
    7f8c:	add	sl, sp, #48	; 0x30
    7f90:	mov	r5, #0
    7f94:	str	r0, [sp, #12]
    7f98:	mov	r0, #0
    7f9c:	mov	r9, r0
    7fa0:	ldr	r0, [sp, #20]
    7fa4:	mov	r6, r1
    7fa8:	mov	r1, r7
    7fac:	mov	r2, #256	; 0x100
    7fb0:	ldr	r3, [r0]
    7fb4:	mov	r0, r4
    7fb8:	bl	18d0 <fread@plt>
    7fbc:	mov	r1, r8
    7fc0:	mov	r2, #0
    7fc4:	add	r3, r4, r2
    7fc8:	add	r2, r2, #2
    7fcc:	ldrh	r3, [r3]
    7fd0:	cmp	r2, #256	; 0x100
    7fd4:	strh	r3, [sp, #48]	; 0x30
    7fd8:	vld1.16	{d16[0]}, [sl :16]
    7fdc:	vmovl.s8	q8, d16
    7fe0:	vmovl.s16	q8, d16
    7fe4:	vmovl.s32	q8, d16
    7fe8:	vst1.64	{d16-d17}, [r1]!
    7fec:	bne	7fc4 <ReadInt64Data+0x424>
    7ff0:	ldr	r2, [sp, #12]
    7ff4:	add	r5, r0, r5
    7ff8:	add	r0, r9, #256	; 0x100
    7ffc:	add	r8, r8, #2048	; 0x800
    8000:	add	r1, r6, #2048	; 0x800
    8004:	cmp	r0, r2
    8008:	blt	7f9c <ReadInt64Data+0x3fc>
    800c:	mov	r8, r5
    8010:	ldr	r5, [sp, #4]
    8014:	cmp	r0, r5
    8018:	bge	8eb0 <ReadInt64Data+0x1310>
    801c:	mov	r1, r7
    8020:	sub	r7, r5, r0
    8024:	ldr	r0, [sp, #20]
    8028:	add	r4, sp, #56	; 0x38
    802c:	mov	r2, r7
    8030:	ldr	r3, [r0]
    8034:	mov	r0, r4
    8038:	bl	18d0 <fread@plt>
    803c:	add	r8, r0, r8
    8040:	cmp	r7, #1
    8044:	blt	8eac <ReadInt64Data+0x130c>
    8048:	sub	r0, r5, r9
    804c:	sub	r0, r0, #256	; 0x100
    8050:	ldrsb	r2, [r4], #1
    8054:	subs	r0, r0, #1
    8058:	asr	r3, r2, #31
    805c:	strd	r2, [r6]
    8060:	add	r6, r6, #8
    8064:	bne	8050 <ReadInt64Data+0x4b0>
    8068:	b	8eac <ReadInt64Data+0x130c>
    806c:	sub	r0, r5, #256	; 0x100
    8070:	str	r5, [sp, #4]
    8074:	add	r1, r8, #2048	; 0x800
    8078:	add	r4, sp, #56	; 0x38
    807c:	add	sl, sp, #52	; 0x34
    8080:	mov	r5, #0
    8084:	str	r0, [sp, #12]
    8088:	mov	r0, #0
    808c:	mov	r9, r0
    8090:	ldr	r0, [sp, #20]
    8094:	mov	r6, r1
    8098:	mov	r1, r7
    809c:	mov	r2, #256	; 0x100
    80a0:	ldr	r3, [r0]
    80a4:	mov	r0, r4
    80a8:	bl	18d0 <fread@plt>
    80ac:	mov	r1, r8
    80b0:	mov	r2, #0
    80b4:	add	r3, r4, r2
    80b8:	add	r2, r2, #2
    80bc:	ldrh	r3, [r3]
    80c0:	cmp	r2, #256	; 0x100
    80c4:	strh	r3, [sp, #52]	; 0x34
    80c8:	vld1.16	{d16[0]}, [sl :16]
    80cc:	vmovl.u8	q8, d16
    80d0:	vmovl.u16	q8, d16
    80d4:	vmovl.u32	q8, d16
    80d8:	vst1.64	{d16-d17}, [r1]!
    80dc:	bne	80b4 <ReadInt64Data+0x514>
    80e0:	ldr	r2, [sp, #12]
    80e4:	add	r5, r0, r5
    80e8:	add	r0, r9, #256	; 0x100
    80ec:	add	r8, r8, #2048	; 0x800
    80f0:	add	r1, r6, #2048	; 0x800
    80f4:	cmp	r0, r2
    80f8:	blt	808c <ReadInt64Data+0x4ec>
    80fc:	mov	r8, r5
    8100:	ldr	r5, [sp, #4]
    8104:	cmp	r0, r5
    8108:	bge	8eb0 <ReadInt64Data+0x1310>
    810c:	mov	r1, r7
    8110:	sub	r7, r5, r0
    8114:	ldr	r0, [sp, #20]
    8118:	add	r4, sp, #56	; 0x38
    811c:	mov	r2, r7
    8120:	ldr	r3, [r0]
    8124:	mov	r0, r4
    8128:	bl	18d0 <fread@plt>
    812c:	add	r8, r0, r8
    8130:	cmp	r7, #1
    8134:	blt	8eac <ReadInt64Data+0x130c>
    8138:	sub	r0, r5, r9
    813c:	mov	r1, #0
    8140:	sub	r0, r0, #256	; 0x100
    8144:	ldrb	r2, [r4], #1
    8148:	subs	r0, r0, #1
    814c:	str	r2, [r6]
    8150:	str	r1, [r6, #4]
    8154:	add	r6, r6, #8
    8158:	bne	8144 <ReadInt64Data+0x5a4>
    815c:	b	8eac <ReadInt64Data+0x130c>
    8160:	cmp	r5, #256	; 0x100
    8164:	bgt	8a14 <ReadInt64Data+0xe74>
    8168:	ldr	r3, [r4]
    816c:	add	r4, sp, #56	; 0x38
    8170:	mov	r1, r7
    8174:	mov	r2, r5
    8178:	mov	r0, r4
    817c:	bl	18d0 <fread@plt>
    8180:	cmp	r5, #1
    8184:	blt	827c <ReadInt64Data+0x6dc>
    8188:	ldrsh	r2, [r4], #2
    818c:	subs	r5, r5, #1
    8190:	asr	r1, r2, #31
    8194:	str	r2, [r8]
    8198:	str	r1, [r8, #4]
    819c:	add	r8, r8, #8
    81a0:	bne	8188 <ReadInt64Data+0x5e8>
    81a4:	b	827c <ReadInt64Data+0x6dc>
    81a8:	cmp	r5, #256	; 0x100
    81ac:	bgt	8afc <ReadInt64Data+0xf5c>
    81b0:	ldr	r3, [r4]
    81b4:	add	r4, sp, #56	; 0x38
    81b8:	mov	r1, r7
    81bc:	mov	r2, r5
    81c0:	mov	r0, r4
    81c4:	bl	18d0 <fread@plt>
    81c8:	cmp	r5, #1
    81cc:	blt	827c <ReadInt64Data+0x6dc>
    81d0:	mov	r1, #0
    81d4:	ldrh	r2, [r4], #2
    81d8:	subs	r5, r5, #1
    81dc:	str	r2, [r8]
    81e0:	str	r1, [r8, #4]
    81e4:	add	r8, r8, #8
    81e8:	bne	81d4 <ReadInt64Data+0x634>
    81ec:	b	827c <ReadInt64Data+0x6dc>
    81f0:	cmp	r5, #256	; 0x100
    81f4:	bgt	8be8 <ReadInt64Data+0x1048>
    81f8:	ldr	r3, [r4]
    81fc:	add	r4, sp, #56	; 0x38
    8200:	mov	r1, r7
    8204:	mov	r2, r5
    8208:	mov	r0, r4
    820c:	bl	18d0 <fread@plt>
    8210:	cmp	r5, #1
    8214:	blt	827c <ReadInt64Data+0x6dc>
    8218:	ldr	r2, [r4], #4
    821c:	subs	r5, r5, #1
    8220:	asr	r1, r2, #31
    8224:	str	r2, [r8]
    8228:	str	r1, [r8, #4]
    822c:	add	r8, r8, #8
    8230:	bne	8218 <ReadInt64Data+0x678>
    8234:	b	827c <ReadInt64Data+0x6dc>
    8238:	cmp	r5, #256	; 0x100
    823c:	bgt	8cd8 <ReadInt64Data+0x1138>
    8240:	ldr	r3, [r4]
    8244:	add	r4, sp, #56	; 0x38
    8248:	mov	r1, r7
    824c:	mov	r2, r5
    8250:	mov	r0, r4
    8254:	bl	18d0 <fread@plt>
    8258:	cmp	r5, #1
    825c:	blt	827c <ReadInt64Data+0x6dc>
    8260:	mov	r1, #0
    8264:	ldr	r2, [r4], #4
    8268:	subs	r5, r5, #1
    826c:	str	r2, [r8]
    8270:	str	r1, [r8, #4]
    8274:	add	r8, r8, #8
    8278:	bne	8264 <ReadInt64Data+0x6c4>
    827c:	mov	r5, r0
    8280:	b	9108 <ReadInt64Data+0x1568>
    8284:	cmp	r5, #256	; 0x100
    8288:	bgt	8dcc <ReadInt64Data+0x122c>
    828c:	ldr	r3, [r4]
    8290:	add	r4, sp, #56	; 0x38
    8294:	mov	r1, r7
    8298:	mov	r2, r5
    829c:	mov	r0, r4
    82a0:	bl	18d0 <fread@plt>
    82a4:	mov	r6, r0
    82a8:	cmp	r5, #1
    82ac:	blt	8318 <ReadInt64Data+0x778>
    82b0:	ldr	r0, [r4], #4
    82b4:	bl	4b6b4 <__aeabi_f2lz>
    82b8:	strd	r0, [r8]
    82bc:	add	r8, r8, #8
    82c0:	subs	r5, r5, #1
    82c4:	bne	82b0 <ReadInt64Data+0x710>
    82c8:	b	8318 <ReadInt64Data+0x778>
    82cc:	cmp	r5, #256	; 0x100
    82d0:	bgt	8eb8 <ReadInt64Data+0x1318>
    82d4:	ldr	r3, [r4]
    82d8:	add	r4, sp, #56	; 0x38
    82dc:	mov	r1, r7
    82e0:	mov	r2, r5
    82e4:	mov	r0, r4
    82e8:	bl	18d0 <fread@plt>
    82ec:	mov	r6, r0
    82f0:	cmp	r5, #1
    82f4:	blt	8318 <ReadInt64Data+0x778>
    82f8:	vldr	d16, [r4]
    82fc:	vmov	r0, r1, d16
    8300:	bl	4b6e0 <__aeabi_d2lz>
    8304:	strd	r0, [r8]
    8308:	add	r4, r4, #8
    830c:	add	r8, r8, #8
    8310:	subs	r5, r5, #1
    8314:	bne	82f8 <ReadInt64Data+0x758>
    8318:	mov	r5, r6
    831c:	b	9108 <ReadInt64Data+0x1568>
    8320:	cmp	r5, #256	; 0x100
    8324:	bgt	8fac <ReadInt64Data+0x140c>
    8328:	ldr	r3, [r4]
    832c:	add	r0, sp, #56	; 0x38
    8330:	mov	r1, r7
    8334:	mov	r2, r5
    8338:	bl	18d0 <fread@plt>
    833c:	mov	sl, r0
    8340:	cmp	r5, #1
    8344:	blt	906c <ReadInt64Data+0x14cc>
    8348:	lsl	r2, r5, #3
    834c:	add	r1, sp, #56	; 0x38
    8350:	mov	r0, r8
    8354:	bl	1834 <memcpy@plt>
    8358:	b	906c <ReadInt64Data+0x14cc>
    835c:	sub	r0, r5, #256	; 0x100
    8360:	str	r5, [sp, #4]
    8364:	add	r1, r8, #2048	; 0x800
    8368:	mov	r5, #0
    836c:	str	r0, [sp, #12]
    8370:	mov	r0, #0
    8374:	ldr	r3, [r4]
    8378:	add	r4, sp, #56	; 0x38
    837c:	mov	sl, r0
    8380:	mov	r9, r1
    8384:	mov	r1, r7
    8388:	mov	r2, #256	; 0x100
    838c:	mov	r0, r4
    8390:	bl	18d0 <fread@plt>
    8394:	mov	r6, r0
    8398:	mov	r7, #0
    839c:	mov	r0, r4
    83a0:	bl	1c58 <Mat_int16Swap>
    83a4:	mov	r1, r8
    83a8:	add	r4, r4, #2
    83ac:	str	r0, [r1, r7]!
    83b0:	add	r7, r7, #8
    83b4:	asr	r0, r0, #31
    83b8:	cmp	r7, #2048	; 0x800
    83bc:	str	r0, [r1, #4]
    83c0:	bne	839c <ReadInt64Data+0x7fc>
    83c4:	ldr	r2, [sp, #12]
    83c8:	ldr	r7, [sp, #16]
    83cc:	ldr	r4, [sp, #20]
    83d0:	add	r0, sl, #256	; 0x100
    83d4:	add	r5, r6, r5
    83d8:	add	r8, r8, #2048	; 0x800
    83dc:	add	r1, r9, #2048	; 0x800
    83e0:	cmp	r0, r2
    83e4:	blt	8374 <ReadInt64Data+0x7d4>
    83e8:	mov	r8, r5
    83ec:	ldr	r5, [sp, #4]
    83f0:	cmp	r0, r5
    83f4:	bge	8eb0 <ReadInt64Data+0x1310>
    83f8:	ldr	r3, [r4]
    83fc:	sub	r6, r5, r0
    8400:	add	r4, sp, #56	; 0x38
    8404:	mov	r1, r7
    8408:	mov	r0, r4
    840c:	mov	r2, r6
    8410:	bl	18d0 <fread@plt>
    8414:	add	r8, r0, r8
    8418:	cmp	r6, #1
    841c:	blt	8eb0 <ReadInt64Data+0x1310>
    8420:	sub	r0, r5, sl
    8424:	sub	r6, r0, #256	; 0x100
    8428:	mov	r0, r4
    842c:	bl	1c58 <Mat_int16Swap>
    8430:	asr	r1, r0, #31
    8434:	add	r4, r4, #2
    8438:	subs	r6, r6, #1
    843c:	strd	r0, [r9]
    8440:	add	r9, r9, #8
    8444:	bne	8428 <ReadInt64Data+0x888>
    8448:	b	8eb0 <ReadInt64Data+0x1310>
    844c:	sub	r1, r5, #256	; 0x100
    8450:	str	r5, [sp, #4]
    8454:	add	r0, r8, #2048	; 0x800
    8458:	mov	sl, #0
    845c:	mov	r5, #0
    8460:	str	r1, [sp, #8]
    8464:	mov	r1, #0
    8468:	ldr	r3, [r4]
    846c:	add	r4, sp, #56	; 0x38
    8470:	str	r1, [sp, #12]
    8474:	mov	r9, r0
    8478:	mov	r1, r7
    847c:	mov	r2, #256	; 0x100
    8480:	mov	r0, r4
    8484:	bl	18d0 <fread@plt>
    8488:	mov	r6, r0
    848c:	mov	r7, #0
    8490:	mov	r0, r4
    8494:	bl	1c6c <Mat_uint16Swap>
    8498:	mov	r1, r8
    849c:	add	r4, r4, #2
    84a0:	str	r0, [r1, r7]!
    84a4:	add	r7, r7, #8
    84a8:	cmp	r7, #2048	; 0x800
    84ac:	str	sl, [r1, #4]
    84b0:	bne	8490 <ReadInt64Data+0x8f0>
    84b4:	ldr	r1, [sp, #12]
    84b8:	ldr	r2, [sp, #8]
    84bc:	ldr	r7, [sp, #16]
    84c0:	ldr	r4, [sp, #20]
    84c4:	add	r5, r6, r5
    84c8:	add	r8, r8, #2048	; 0x800
    84cc:	add	r0, r9, #2048	; 0x800
    84d0:	add	r1, r1, #256	; 0x100
    84d4:	cmp	r1, r2
    84d8:	blt	8468 <ReadInt64Data+0x8c8>
    84dc:	mov	r8, r5
    84e0:	ldr	r5, [sp, #4]
    84e4:	cmp	r1, r5
    84e8:	bge	8eb0 <ReadInt64Data+0x1310>
    84ec:	ldr	r3, [r4]
    84f0:	sub	r6, r5, r1
    84f4:	add	r4, sp, #56	; 0x38
    84f8:	mov	r1, r7
    84fc:	mov	r0, r4
    8500:	mov	r2, r6
    8504:	bl	18d0 <fread@plt>
    8508:	add	r8, r0, r8
    850c:	cmp	r6, #1
    8510:	blt	8eb0 <ReadInt64Data+0x1310>
    8514:	ldr	r0, [sp, #12]
    8518:	mov	r7, #0
    851c:	sub	r0, r5, r0
    8520:	sub	r6, r0, #256	; 0x100
    8524:	mov	r0, r4
    8528:	bl	1c6c <Mat_uint16Swap>
    852c:	stm	r9, {r0, r7}
    8530:	add	r9, r9, #8
    8534:	add	r4, r4, #2
    8538:	subs	r6, r6, #1
    853c:	bne	8524 <ReadInt64Data+0x984>
    8540:	b	8eac <ReadInt64Data+0x130c>
    8544:	sub	r0, r5, #256	; 0x100
    8548:	str	r5, [sp, #4]
    854c:	add	r1, r8, #2048	; 0x800
    8550:	mov	r5, #0
    8554:	str	r0, [sp, #12]
    8558:	mov	r0, #0
    855c:	ldr	r3, [r4]
    8560:	add	r4, sp, #56	; 0x38
    8564:	mov	sl, r0
    8568:	mov	r9, r1
    856c:	mov	r1, r7
    8570:	mov	r2, #256	; 0x100
    8574:	mov	r0, r4
    8578:	bl	18d0 <fread@plt>
    857c:	mov	r6, r0
    8580:	mov	r7, #0
    8584:	mov	r0, r4
    8588:	bl	1c30 <Mat_int32Swap>
    858c:	mov	r1, r8
    8590:	add	r4, r4, #4
    8594:	str	r0, [r1, r7]!
    8598:	add	r7, r7, #8
    859c:	asr	r0, r0, #31
    85a0:	cmp	r7, #2048	; 0x800
    85a4:	str	r0, [r1, #4]
    85a8:	bne	8584 <ReadInt64Data+0x9e4>
    85ac:	ldr	r2, [sp, #12]
    85b0:	ldr	r7, [sp, #16]
    85b4:	ldr	r4, [sp, #20]
    85b8:	add	r0, sl, #256	; 0x100
    85bc:	add	r5, r6, r5
    85c0:	add	r8, r8, #2048	; 0x800
    85c4:	add	r1, r9, #2048	; 0x800
    85c8:	cmp	r0, r2
    85cc:	blt	855c <ReadInt64Data+0x9bc>
    85d0:	mov	r8, r5
    85d4:	ldr	r5, [sp, #4]
    85d8:	cmp	r0, r5
    85dc:	bge	8eb0 <ReadInt64Data+0x1310>
    85e0:	ldr	r3, [r4]
    85e4:	sub	r6, r5, r0
    85e8:	add	r4, sp, #56	; 0x38
    85ec:	mov	r1, r7
    85f0:	mov	r0, r4
    85f4:	mov	r2, r6
    85f8:	bl	18d0 <fread@plt>
    85fc:	add	r8, r0, r8
    8600:	cmp	r6, #1
    8604:	blt	8eb0 <ReadInt64Data+0x1310>
    8608:	sub	r0, r5, sl
    860c:	sub	r6, r0, #256	; 0x100
    8610:	mov	r0, r4
    8614:	bl	1c30 <Mat_int32Swap>
    8618:	asr	r1, r0, #31
    861c:	add	r4, r4, #4
    8620:	subs	r6, r6, #1
    8624:	strd	r0, [r9]
    8628:	add	r9, r9, #8
    862c:	bne	8610 <ReadInt64Data+0xa70>
    8630:	b	8eb0 <ReadInt64Data+0x1310>
    8634:	sub	r1, r5, #256	; 0x100
    8638:	str	r5, [sp, #4]
    863c:	add	r0, r8, #2048	; 0x800
    8640:	mov	sl, #0
    8644:	mov	r5, #0
    8648:	str	r1, [sp, #8]
    864c:	mov	r1, #0
    8650:	ldr	r3, [r4]
    8654:	add	r4, sp, #56	; 0x38
    8658:	str	r1, [sp, #12]
    865c:	mov	r9, r0
    8660:	mov	r1, r7
    8664:	mov	r2, #256	; 0x100
    8668:	mov	r0, r4
    866c:	bl	18d0 <fread@plt>
    8670:	mov	r6, r0
    8674:	mov	r7, #0
    8678:	mov	r0, r4
    867c:	bl	1c44 <Mat_uint32Swap>
    8680:	mov	r1, r8
    8684:	add	r4, r4, #4
    8688:	str	r0, [r1, r7]!
    868c:	add	r7, r7, #8
    8690:	cmp	r7, #2048	; 0x800
    8694:	str	sl, [r1, #4]
    8698:	bne	8678 <ReadInt64Data+0xad8>
    869c:	ldr	r1, [sp, #12]
    86a0:	ldr	r2, [sp, #8]
    86a4:	ldr	r7, [sp, #16]
    86a8:	ldr	r4, [sp, #20]
    86ac:	add	r5, r6, r5
    86b0:	add	r8, r8, #2048	; 0x800
    86b4:	add	r0, r9, #2048	; 0x800
    86b8:	add	r1, r1, #256	; 0x100
    86bc:	cmp	r1, r2
    86c0:	blt	8650 <ReadInt64Data+0xab0>
    86c4:	mov	r8, r5
    86c8:	ldr	r5, [sp, #4]
    86cc:	cmp	r1, r5
    86d0:	bge	8eb0 <ReadInt64Data+0x1310>
    86d4:	ldr	r3, [r4]
    86d8:	sub	r6, r5, r1
    86dc:	add	r4, sp, #56	; 0x38
    86e0:	mov	r1, r7
    86e4:	mov	r0, r4
    86e8:	mov	r2, r6
    86ec:	bl	18d0 <fread@plt>
    86f0:	add	r8, r0, r8
    86f4:	cmp	r6, #1
    86f8:	blt	8eb0 <ReadInt64Data+0x1310>
    86fc:	ldr	r0, [sp, #12]
    8700:	mov	r7, #0
    8704:	sub	r0, r5, r0
    8708:	sub	r6, r0, #256	; 0x100
    870c:	mov	r0, r4
    8710:	bl	1c44 <Mat_uint32Swap>
    8714:	stm	r9, {r0, r7}
    8718:	add	r9, r9, #8
    871c:	add	r4, r4, #4
    8720:	subs	r6, r6, #1
    8724:	bne	870c <ReadInt64Data+0xb6c>
    8728:	b	8eac <ReadInt64Data+0x130c>
    872c:	sub	r0, r5, #256	; 0x100
    8730:	str	r5, [sp, #4]
    8734:	add	r1, r8, #2048	; 0x800
    8738:	mov	r5, #0
    873c:	str	r0, [sp, #12]
    8740:	mov	r0, #0
    8744:	ldr	r3, [r4]
    8748:	add	r6, sp, #56	; 0x38
    874c:	mov	sl, r0
    8750:	mov	r9, r1
    8754:	mov	r1, r7
    8758:	mov	r2, #256	; 0x100
    875c:	mov	r0, r6
    8760:	bl	18d0 <fread@plt>
    8764:	mov	r4, r0
    8768:	mov	r7, #0
    876c:	mov	r0, r6
    8770:	bl	1c84 <Mat_floatSwap>
    8774:	vmov	r0, s0
    8778:	bl	4b6b4 <__aeabi_f2lz>
    877c:	mov	r2, r8
    8780:	add	r6, r6, #4
    8784:	str	r0, [r2, r7]!
    8788:	add	r7, r7, #8
    878c:	cmp	r7, #2048	; 0x800
    8790:	str	r1, [r2, #4]
    8794:	bne	876c <ReadInt64Data+0xbcc>
    8798:	ldr	r2, [sp, #12]
    879c:	add	r5, r4, r5
    87a0:	ldr	r7, [sp, #16]
    87a4:	ldr	r4, [sp, #20]
    87a8:	add	r0, sl, #256	; 0x100
    87ac:	add	r8, r8, #2048	; 0x800
    87b0:	add	r1, r9, #2048	; 0x800
    87b4:	cmp	r0, r2
    87b8:	blt	8744 <ReadInt64Data+0xba4>
    87bc:	mov	r8, r5
    87c0:	ldr	r5, [sp, #4]
    87c4:	cmp	r0, r5
    87c8:	bge	8eb0 <ReadInt64Data+0x1310>
    87cc:	ldr	r3, [r4]
    87d0:	sub	r6, r5, r0
    87d4:	add	r4, sp, #56	; 0x38
    87d8:	mov	r1, r7
    87dc:	mov	r0, r4
    87e0:	mov	r2, r6
    87e4:	bl	18d0 <fread@plt>
    87e8:	add	r8, r0, r8
    87ec:	cmp	r6, #1
    87f0:	blt	8eb0 <ReadInt64Data+0x1310>
    87f4:	sub	r0, r5, sl
    87f8:	sub	r6, r0, #256	; 0x100
    87fc:	mov	r0, r4
    8800:	bl	1c84 <Mat_floatSwap>
    8804:	vmov	r0, s0
    8808:	bl	4b6b4 <__aeabi_f2lz>
    880c:	strd	r0, [r9]
    8810:	add	r9, r9, #8
    8814:	add	r4, r4, #4
    8818:	subs	r6, r6, #1
    881c:	bne	87fc <ReadInt64Data+0xc5c>
    8820:	b	8eb0 <ReadInt64Data+0x1310>
    8824:	sub	r0, r5, #256	; 0x100
    8828:	str	r5, [sp, #4]
    882c:	add	r1, r8, #2048	; 0x800
    8830:	add	r4, sp, #56	; 0x38
    8834:	mov	r5, #0
    8838:	str	r0, [sp, #12]
    883c:	mov	r0, #0
    8840:	mov	sl, r0
    8844:	ldr	r0, [sp, #20]
    8848:	mov	r9, r1
    884c:	mov	r1, r7
    8850:	mov	r2, #256	; 0x100
    8854:	ldr	r3, [r0]
    8858:	mov	r0, r4
    885c:	bl	18d0 <fread@plt>
    8860:	mov	r6, r0
    8864:	mov	r7, #0
    8868:	add	r0, r4, r7
    886c:	bl	1cc8 <Mat_doubleSwap>
    8870:	vmov	r0, r1, d0
    8874:	bl	4b6e0 <__aeabi_d2lz>
    8878:	mov	r2, r8
    887c:	str	r0, [r2, r7]!
    8880:	add	r7, r7, #8
    8884:	cmp	r7, #2048	; 0x800
    8888:	str	r1, [r2, #4]
    888c:	bne	8868 <ReadInt64Data+0xcc8>
    8890:	ldr	r2, [sp, #12]
    8894:	ldr	r7, [sp, #16]
    8898:	add	r0, sl, #256	; 0x100
    889c:	add	r5, r6, r5
    88a0:	add	r8, r8, #2048	; 0x800
    88a4:	add	r1, r9, #2048	; 0x800
    88a8:	cmp	r0, r2
    88ac:	blt	8840 <ReadInt64Data+0xca0>
    88b0:	mov	r8, r5
    88b4:	ldr	r5, [sp, #4]
    88b8:	cmp	r0, r5
    88bc:	bge	8eb0 <ReadInt64Data+0x1310>
    88c0:	sub	r6, r5, r0
    88c4:	ldr	r0, [sp, #20]
    88c8:	add	r4, sp, #56	; 0x38
    88cc:	mov	r1, r7
    88d0:	mov	r2, r6
    88d4:	ldr	r3, [r0]
    88d8:	mov	r0, r4
    88dc:	bl	18d0 <fread@plt>
    88e0:	add	r8, r0, r8
    88e4:	cmp	r6, #1
    88e8:	blt	8eb0 <ReadInt64Data+0x1310>
    88ec:	sub	r0, r5, sl
    88f0:	sub	r6, r0, #256	; 0x100
    88f4:	mov	r0, r4
    88f8:	bl	1cc8 <Mat_doubleSwap>
    88fc:	vmov	r0, r1, d0
    8900:	bl	4b6e0 <__aeabi_d2lz>
    8904:	strd	r0, [r9]
    8908:	add	r9, r9, #8
    890c:	add	r4, r4, #8
    8910:	subs	r6, r6, #1
    8914:	bne	88f4 <ReadInt64Data+0xd54>
    8918:	b	8eb0 <ReadInt64Data+0x1310>
    891c:	sub	r0, r5, #256	; 0x100
    8920:	str	r5, [sp, #4]
    8924:	add	r1, r8, #2048	; 0x800
    8928:	add	r4, sp, #56	; 0x38
    892c:	mov	r7, r8
    8930:	mov	r5, #0
    8934:	str	r9, [sp]
    8938:	str	r0, [sp, #8]
    893c:	mov	r0, #0
    8940:	str	r0, [sp, #12]
    8944:	ldr	r0, [sp, #20]
    8948:	mov	r9, r1
    894c:	ldr	r1, [sp, #16]
    8950:	mov	r2, #256	; 0x100
    8954:	ldr	r3, [r0]
    8958:	mov	r0, r4
    895c:	bl	18d0 <fread@plt>
    8960:	mov	r6, r0
    8964:	mov	sl, #0
    8968:	add	r0, r4, sl
    896c:	bl	1bbc <Mat_int64Swap>
    8970:	mov	r2, r7
    8974:	str	r0, [r2, sl]!
    8978:	add	sl, sl, #8
    897c:	cmp	sl, #2048	; 0x800
    8980:	str	r1, [r2, #4]
    8984:	bne	8968 <ReadInt64Data+0xdc8>
    8988:	ldr	r0, [sp, #12]
    898c:	ldr	r2, [sp, #8]
    8990:	add	r5, r6, r5
    8994:	add	r7, r7, #2048	; 0x800
    8998:	add	r1, r9, #2048	; 0x800
    899c:	add	r0, r0, #256	; 0x100
    89a0:	cmp	r0, r2
    89a4:	blt	8940 <ReadInt64Data+0xda0>
    89a8:	mov	sl, r5
    89ac:	ldr	r5, [sp, #4]
    89b0:	cmp	r0, r5
    89b4:	bge	9060 <ReadInt64Data+0x14c0>
    89b8:	sub	r6, r5, r0
    89bc:	ldr	r0, [sp, #20]
    89c0:	ldr	r7, [sp, #16]
    89c4:	add	r4, sp, #56	; 0x38
    89c8:	mov	r2, r6
    89cc:	ldr	r3, [r0]
    89d0:	mov	r0, r4
    89d4:	mov	r1, r7
    89d8:	bl	18d0 <fread@plt>
    89dc:	add	sl, r0, sl
    89e0:	cmp	r6, #1
    89e4:	blt	9064 <ReadInt64Data+0x14c4>
    89e8:	ldr	r0, [sp, #12]
    89ec:	sub	r0, r5, r0
    89f0:	sub	r6, r0, #256	; 0x100
    89f4:	mov	r0, r4
    89f8:	bl	1bbc <Mat_int64Swap>
    89fc:	strd	r0, [r9]
    8a00:	add	r9, r9, #8
    8a04:	add	r4, r4, #8
    8a08:	subs	r6, r6, #1
    8a0c:	bne	89f4 <ReadInt64Data+0xe54>
    8a10:	b	9064 <ReadInt64Data+0x14c4>
    8a14:	sub	r0, r5, #256	; 0x100
    8a18:	str	r5, [sp, #4]
    8a1c:	add	r1, r8, #2048	; 0x800
    8a20:	add	r4, sp, #56	; 0x38
    8a24:	add	sl, sp, #40	; 0x28
    8a28:	mov	r5, #0
    8a2c:	str	r0, [sp, #12]
    8a30:	mov	r0, #0
    8a34:	mov	r9, r0
    8a38:	ldr	r0, [sp, #20]
    8a3c:	mov	r6, r1
    8a40:	mov	r1, r7
    8a44:	mov	r2, #256	; 0x100
    8a48:	ldr	r3, [r0]
    8a4c:	mov	r0, r4
    8a50:	bl	18d0 <fread@plt>
    8a54:	mov	r1, r8
    8a58:	mov	r2, #0
    8a5c:	ldr	r3, [r4, r2]
    8a60:	add	r2, r2, #4
    8a64:	cmp	r2, #512	; 0x200
    8a68:	str	r3, [sp, #40]	; 0x28
    8a6c:	vld1.32	{d16[0]}, [sl :32]
    8a70:	vmovl.s16	q8, d16
    8a74:	vmovl.s32	q8, d16
    8a78:	vst1.64	{d16-d17}, [r1]!
    8a7c:	bne	8a5c <ReadInt64Data+0xebc>
    8a80:	ldr	r2, [sp, #12]
    8a84:	add	r5, r0, r5
    8a88:	add	r0, r9, #256	; 0x100
    8a8c:	add	r8, r8, #2048	; 0x800
    8a90:	add	r1, r6, #2048	; 0x800
    8a94:	cmp	r0, r2
    8a98:	blt	8a34 <ReadInt64Data+0xe94>
    8a9c:	mov	r8, r5
    8aa0:	ldr	r5, [sp, #4]
    8aa4:	cmp	r0, r5
    8aa8:	bge	8eb0 <ReadInt64Data+0x1310>
    8aac:	mov	r1, r7
    8ab0:	sub	r7, r5, r0
    8ab4:	ldr	r0, [sp, #20]
    8ab8:	add	r4, sp, #56	; 0x38
    8abc:	mov	r2, r7
    8ac0:	ldr	r3, [r0]
    8ac4:	mov	r0, r4
    8ac8:	bl	18d0 <fread@plt>
    8acc:	add	r8, r0, r8
    8ad0:	cmp	r7, #1
    8ad4:	blt	8eac <ReadInt64Data+0x130c>
    8ad8:	sub	r0, r5, r9
    8adc:	sub	r0, r0, #256	; 0x100
    8ae0:	ldrsh	r2, [r4], #2
    8ae4:	subs	r0, r0, #1
    8ae8:	asr	r3, r2, #31
    8aec:	strd	r2, [r6]
    8af0:	add	r6, r6, #8
    8af4:	bne	8ae0 <ReadInt64Data+0xf40>
    8af8:	b	8eac <ReadInt64Data+0x130c>
    8afc:	sub	r0, r5, #256	; 0x100
    8b00:	str	r5, [sp, #4]
    8b04:	add	r1, r8, #2048	; 0x800
    8b08:	add	r4, sp, #56	; 0x38
    8b0c:	add	sl, sp, #44	; 0x2c
    8b10:	mov	r5, #0
    8b14:	str	r0, [sp, #12]
    8b18:	mov	r0, #0
    8b1c:	mov	r9, r0
    8b20:	ldr	r0, [sp, #20]
    8b24:	mov	r6, r1
    8b28:	mov	r1, r7
    8b2c:	mov	r2, #256	; 0x100
    8b30:	ldr	r3, [r0]
    8b34:	mov	r0, r4
    8b38:	bl	18d0 <fread@plt>
    8b3c:	mov	r1, r8
    8b40:	mov	r2, #0
    8b44:	ldr	r3, [r4, r2]
    8b48:	add	r2, r2, #4
    8b4c:	cmp	r2, #512	; 0x200
    8b50:	str	r3, [sp, #44]	; 0x2c
    8b54:	vld1.32	{d16[0]}, [sl :32]
    8b58:	vmovl.u16	q8, d16
    8b5c:	vmovl.u32	q8, d16
    8b60:	vst1.64	{d16-d17}, [r1]!
    8b64:	bne	8b44 <ReadInt64Data+0xfa4>
    8b68:	ldr	r2, [sp, #12]
    8b6c:	add	r5, r0, r5
    8b70:	add	r0, r9, #256	; 0x100
    8b74:	add	r8, r8, #2048	; 0x800
    8b78:	add	r1, r6, #2048	; 0x800
    8b7c:	cmp	r0, r2
    8b80:	blt	8b1c <ReadInt64Data+0xf7c>
    8b84:	mov	r8, r5
    8b88:	ldr	r5, [sp, #4]
    8b8c:	cmp	r0, r5
    8b90:	bge	8eb0 <ReadInt64Data+0x1310>
    8b94:	mov	r1, r7
    8b98:	sub	r7, r5, r0
    8b9c:	ldr	r0, [sp, #20]
    8ba0:	add	r4, sp, #56	; 0x38
    8ba4:	mov	r2, r7
    8ba8:	ldr	r3, [r0]
    8bac:	mov	r0, r4
    8bb0:	bl	18d0 <fread@plt>
    8bb4:	add	r8, r0, r8
    8bb8:	cmp	r7, #1
    8bbc:	blt	8eac <ReadInt64Data+0x130c>
    8bc0:	sub	r0, r5, r9
    8bc4:	mov	r1, #0
    8bc8:	sub	r0, r0, #256	; 0x100
    8bcc:	ldrh	r2, [r4], #2
    8bd0:	subs	r0, r0, #1
    8bd4:	str	r2, [r6]
    8bd8:	str	r1, [r6, #4]
    8bdc:	add	r6, r6, #8
    8be0:	bne	8bcc <ReadInt64Data+0x102c>
    8be4:	b	8eac <ReadInt64Data+0x130c>
    8be8:	sub	r0, r5, #256	; 0x100
    8bec:	str	r5, [sp, #4]
    8bf0:	add	r1, r8, #2048	; 0x800
    8bf4:	add	r4, sp, #56	; 0x38
    8bf8:	add	sl, sp, #24
    8bfc:	mov	r5, #0
    8c00:	str	r0, [sp, #12]
    8c04:	mov	r0, #0
    8c08:	mov	r9, r0
    8c0c:	ldr	r0, [sp, #20]
    8c10:	mov	r6, r1
    8c14:	mov	r1, r7
    8c18:	mov	r2, #256	; 0x100
    8c1c:	ldr	r3, [r0]
    8c20:	mov	r0, r4
    8c24:	bl	18d0 <fread@plt>
    8c28:	mov	r1, r8
    8c2c:	mov	r2, #0
    8c30:	ldr	r3, [r4, r2]
    8c34:	str	r3, [sp, #24]
    8c38:	add	r3, r4, r2
    8c3c:	add	r2, r2, #8
    8c40:	ldr	r3, [r3, #4]
    8c44:	cmp	r2, #1024	; 0x400
    8c48:	str	r3, [sp, #28]
    8c4c:	vld1.32	{d16}, [sl :64]
    8c50:	vmovl.s32	q8, d16
    8c54:	vst1.64	{d16-d17}, [r1]!
    8c58:	bne	8c30 <ReadInt64Data+0x1090>
    8c5c:	ldr	r2, [sp, #12]
    8c60:	add	r5, r0, r5
    8c64:	add	r0, r9, #256	; 0x100
    8c68:	add	r8, r8, #2048	; 0x800
    8c6c:	add	r1, r6, #2048	; 0x800
    8c70:	cmp	r0, r2
    8c74:	blt	8c08 <ReadInt64Data+0x1068>
    8c78:	mov	r8, r5
    8c7c:	ldr	r5, [sp, #4]
    8c80:	cmp	r0, r5
    8c84:	bge	8eb0 <ReadInt64Data+0x1310>
    8c88:	mov	r1, r7
    8c8c:	sub	r7, r5, r0
    8c90:	ldr	r0, [sp, #20]
    8c94:	add	r4, sp, #56	; 0x38
    8c98:	mov	r2, r7
    8c9c:	ldr	r3, [r0]
    8ca0:	mov	r0, r4
    8ca4:	bl	18d0 <fread@plt>
    8ca8:	add	r8, r0, r8
    8cac:	cmp	r7, #1
    8cb0:	blt	8eac <ReadInt64Data+0x130c>
    8cb4:	sub	r0, r5, r9
    8cb8:	sub	r0, r0, #256	; 0x100
    8cbc:	ldr	r2, [r4], #4
    8cc0:	subs	r0, r0, #1
    8cc4:	asr	r3, r2, #31
    8cc8:	strd	r2, [r6]
    8ccc:	add	r6, r6, #8
    8cd0:	bne	8cbc <ReadInt64Data+0x111c>
    8cd4:	b	8eac <ReadInt64Data+0x130c>
    8cd8:	sub	r0, r5, #256	; 0x100
    8cdc:	str	r5, [sp, #4]
    8ce0:	add	r1, r8, #2048	; 0x800
    8ce4:	add	r4, sp, #56	; 0x38
    8ce8:	add	sl, sp, #32
    8cec:	mov	r5, #0
    8cf0:	str	r0, [sp, #12]
    8cf4:	mov	r0, #0
    8cf8:	mov	r9, r0
    8cfc:	ldr	r0, [sp, #20]
    8d00:	mov	r6, r1
    8d04:	mov	r1, r7
    8d08:	mov	r2, #256	; 0x100
    8d0c:	ldr	r3, [r0]
    8d10:	mov	r0, r4
    8d14:	bl	18d0 <fread@plt>
    8d18:	mov	r1, r8
    8d1c:	mov	r2, #0
    8d20:	ldr	r3, [r4, r2]
    8d24:	str	r3, [sp, #32]
    8d28:	add	r3, r4, r2
    8d2c:	add	r2, r2, #8
    8d30:	ldr	r3, [r3, #4]
    8d34:	cmp	r2, #1024	; 0x400
    8d38:	str	r3, [sp, #36]	; 0x24
    8d3c:	vld1.32	{d16}, [sl :64]
    8d40:	vmovl.u32	q8, d16
    8d44:	vst1.64	{d16-d17}, [r1]!
    8d48:	bne	8d20 <ReadInt64Data+0x1180>
    8d4c:	ldr	r2, [sp, #12]
    8d50:	add	r5, r0, r5
    8d54:	add	r0, r9, #256	; 0x100
    8d58:	add	r8, r8, #2048	; 0x800
    8d5c:	add	r1, r6, #2048	; 0x800
    8d60:	cmp	r0, r2
    8d64:	blt	8cf8 <ReadInt64Data+0x1158>
    8d68:	mov	r8, r5
    8d6c:	ldr	r5, [sp, #4]
    8d70:	cmp	r0, r5
    8d74:	bge	8eb0 <ReadInt64Data+0x1310>
    8d78:	mov	r1, r7
    8d7c:	sub	r7, r5, r0
    8d80:	ldr	r0, [sp, #20]
    8d84:	add	r4, sp, #56	; 0x38
    8d88:	mov	r2, r7
    8d8c:	ldr	r3, [r0]
    8d90:	mov	r0, r4
    8d94:	bl	18d0 <fread@plt>
    8d98:	add	r8, r0, r8
    8d9c:	cmp	r7, #1
    8da0:	blt	8eac <ReadInt64Data+0x130c>
    8da4:	sub	r0, r5, r9
    8da8:	mov	r1, #0
    8dac:	sub	r0, r0, #256	; 0x100
    8db0:	ldr	r2, [r4], #4
    8db4:	subs	r0, r0, #1
    8db8:	str	r2, [r6]
    8dbc:	str	r1, [r6, #4]
    8dc0:	add	r6, r6, #8
    8dc4:	bne	8db0 <ReadInt64Data+0x1210>
    8dc8:	b	8eac <ReadInt64Data+0x130c>
    8dcc:	sub	r0, r5, #256	; 0x100
    8dd0:	str	r5, [sp, #4]
    8dd4:	add	r1, r8, #2048	; 0x800
    8dd8:	mov	r5, #0
    8ddc:	str	r0, [sp, #12]
    8de0:	mov	r0, #0
    8de4:	mov	sl, r0
    8de8:	ldr	r0, [sp, #20]
    8dec:	mov	r4, r1
    8df0:	mov	r1, r7
    8df4:	add	r7, sp, #56	; 0x38
    8df8:	mov	r2, #256	; 0x100
    8dfc:	ldr	r3, [r0]
    8e00:	mov	r0, r7
    8e04:	bl	18d0 <fread@plt>
    8e08:	mov	r6, r0
    8e0c:	mov	r9, #0
    8e10:	ldr	r0, [r7], #4
    8e14:	bl	4b6b4 <__aeabi_f2lz>
    8e18:	mov	r2, r8
    8e1c:	str	r0, [r2, r9]!
    8e20:	add	r9, r9, #8
    8e24:	cmp	r9, #2048	; 0x800
    8e28:	str	r1, [r2, #4]
    8e2c:	bne	8e10 <ReadInt64Data+0x1270>
    8e30:	ldr	r2, [sp, #12]
    8e34:	ldr	r7, [sp, #16]
    8e38:	add	r0, sl, #256	; 0x100
    8e3c:	add	r5, r6, r5
    8e40:	add	r8, r8, #2048	; 0x800
    8e44:	add	r1, r4, #2048	; 0x800
    8e48:	cmp	r0, r2
    8e4c:	blt	8de4 <ReadInt64Data+0x1244>
    8e50:	mov	r8, r5
    8e54:	ldr	r5, [sp, #4]
    8e58:	cmp	r0, r5
    8e5c:	bge	8eb0 <ReadInt64Data+0x1310>
    8e60:	sub	r6, r5, r0
    8e64:	ldr	r0, [sp, #20]
    8e68:	mov	r1, r7
    8e6c:	add	r7, sp, #56	; 0x38
    8e70:	mov	r2, r6
    8e74:	ldr	r3, [r0]
    8e78:	mov	r0, r7
    8e7c:	bl	18d0 <fread@plt>
    8e80:	add	r8, r0, r8
    8e84:	cmp	r6, #1
    8e88:	blt	8eac <ReadInt64Data+0x130c>
    8e8c:	sub	r0, r5, sl
    8e90:	sub	r6, r0, #256	; 0x100
    8e94:	ldr	r0, [r7], #4
    8e98:	bl	4b6b4 <__aeabi_f2lz>
    8e9c:	strd	r0, [r4]
    8ea0:	add	r4, r4, #8
    8ea4:	subs	r6, r6, #1
    8ea8:	bne	8e94 <ReadInt64Data+0x12f4>
    8eac:	ldr	r7, [sp, #16]
    8eb0:	mov	r5, r8
    8eb4:	b	9108 <ReadInt64Data+0x1568>
    8eb8:	sub	r0, r5, #256	; 0x100
    8ebc:	str	r5, [sp, #4]
    8ec0:	add	r1, r8, #2048	; 0x800
    8ec4:	add	r4, sp, #56	; 0x38
    8ec8:	mov	r5, #0
    8ecc:	str	r0, [sp, #12]
    8ed0:	mov	r0, #0
    8ed4:	mov	sl, r0
    8ed8:	ldr	r0, [sp, #20]
    8edc:	mov	r9, r1
    8ee0:	mov	r1, r7
    8ee4:	mov	r2, #256	; 0x100
    8ee8:	ldr	r3, [r0]
    8eec:	mov	r0, r4
    8ef0:	bl	18d0 <fread@plt>
    8ef4:	mov	r6, r0
    8ef8:	mov	r7, #0
    8efc:	add	r0, r4, r7
    8f00:	vldr	d16, [r0]
    8f04:	vmov	r0, r1, d16
    8f08:	bl	4b6e0 <__aeabi_d2lz>
    8f0c:	mov	r2, r8
    8f10:	str	r0, [r2, r7]!
    8f14:	add	r7, r7, #8
    8f18:	cmp	r7, #2048	; 0x800
    8f1c:	str	r1, [r2, #4]
    8f20:	bne	8efc <ReadInt64Data+0x135c>
    8f24:	ldr	r2, [sp, #12]
    8f28:	ldr	r7, [sp, #16]
    8f2c:	add	r0, sl, #256	; 0x100
    8f30:	add	r5, r6, r5
    8f34:	add	r8, r8, #2048	; 0x800
    8f38:	add	r1, r9, #2048	; 0x800
    8f3c:	cmp	r0, r2
    8f40:	blt	8ed4 <ReadInt64Data+0x1334>
    8f44:	mov	r8, r5
    8f48:	ldr	r5, [sp, #4]
    8f4c:	cmp	r0, r5
    8f50:	bge	8eb0 <ReadInt64Data+0x1310>
    8f54:	sub	r6, r5, r0
    8f58:	ldr	r0, [sp, #20]
    8f5c:	add	r4, sp, #56	; 0x38
    8f60:	mov	r1, r7
    8f64:	mov	r2, r6
    8f68:	ldr	r3, [r0]
    8f6c:	mov	r0, r4
    8f70:	bl	18d0 <fread@plt>
    8f74:	add	r8, r0, r8
    8f78:	cmp	r6, #1
    8f7c:	blt	8eb0 <ReadInt64Data+0x1310>
    8f80:	sub	r0, r5, sl
    8f84:	sub	r6, r0, #256	; 0x100
    8f88:	vldr	d16, [r4]
    8f8c:	vmov	r0, r1, d16
    8f90:	bl	4b6e0 <__aeabi_d2lz>
    8f94:	strd	r0, [r9]
    8f98:	add	r9, r9, #8
    8f9c:	add	r4, r4, #8
    8fa0:	subs	r6, r6, #1
    8fa4:	bne	8f88 <ReadInt64Data+0x13e8>
    8fa8:	b	8eb0 <ReadInt64Data+0x1310>
    8fac:	sub	r0, r5, #256	; 0x100
    8fb0:	lsl	r4, r5, #3
    8fb4:	str	r5, [sp, #4]
    8fb8:	mov	r6, #0
    8fbc:	mov	r5, #0
    8fc0:	str	r9, [sp]
    8fc4:	str	r0, [sp, #12]
    8fc8:	ldr	r0, [sp, #20]
    8fcc:	add	sl, sp, #56	; 0x38
    8fd0:	mov	r1, r7
    8fd4:	mov	r2, #256	; 0x100
    8fd8:	ldr	r3, [r0]
    8fdc:	mov	r0, sl
    8fe0:	bl	18d0 <fread@plt>
    8fe4:	mov	r9, r0
    8fe8:	add	r0, r8, r6, lsl #3
    8fec:	mov	r1, sl
    8ff0:	mov	r2, #2048	; 0x800
    8ff4:	bl	1834 <memcpy@plt>
    8ff8:	ldr	r0, [sp, #12]
    8ffc:	add	r6, r6, #256	; 0x100
    9000:	add	r5, r9, r5
    9004:	sub	r4, r4, #2048	; 0x800
    9008:	cmp	r6, r0
    900c:	blt	8fc8 <ReadInt64Data+0x1428>
    9010:	mov	sl, r5
    9014:	ldr	r5, [sp, #4]
    9018:	cmp	r6, r5
    901c:	bge	9060 <ReadInt64Data+0x14c0>
    9020:	ldr	r0, [sp, #20]
    9024:	ldr	r7, [sp, #16]
    9028:	sub	r9, r5, r6
    902c:	mov	r2, r9
    9030:	ldr	r3, [r0]
    9034:	add	r0, sp, #56	; 0x38
    9038:	mov	r1, r7
    903c:	bl	18d0 <fread@plt>
    9040:	add	sl, r0, sl
    9044:	cmp	r9, #1
    9048:	blt	9064 <ReadInt64Data+0x14c4>
    904c:	add	r0, r8, r6, lsl #3
    9050:	add	r1, sp, #56	; 0x38
    9054:	mov	r2, r4
    9058:	bl	1834 <memcpy@plt>
    905c:	b	9064 <ReadInt64Data+0x14c4>
    9060:	ldr	r7, [sp, #16]
    9064:	ldr	r4, [sp, #20]
    9068:	ldr	r9, [sp]
    906c:	cmp	r9, #13
    9070:	bne	9104 <ReadInt64Data+0x1564>
    9074:	ldr	r0, [r4, #20]
    9078:	cmp	r0, #0
    907c:	beq	90cc <ReadInt64Data+0x152c>
    9080:	cmp	r5, #256	; 0x100
    9084:	bgt	9110 <ReadInt64Data+0x1570>
    9088:	ldr	r3, [r4]
    908c:	add	r4, sp, #56	; 0x38
    9090:	mov	r1, r7
    9094:	mov	r2, r5
    9098:	mov	r0, r4
    909c:	bl	18d0 <fread@plt>
    90a0:	add	sl, r0, sl
    90a4:	cmp	r5, #1
    90a8:	blt	9104 <ReadInt64Data+0x1564>
    90ac:	mov	r0, r4
    90b0:	bl	1c0c <Mat_uint64Swap>
    90b4:	strd	r0, [r8]
    90b8:	add	r4, r4, #8
    90bc:	add	r8, r8, #8
    90c0:	subs	r5, r5, #1
    90c4:	bne	90ac <ReadInt64Data+0x150c>
    90c8:	b	9104 <ReadInt64Data+0x1564>
    90cc:	cmp	r5, #256	; 0x100
    90d0:	bgt	91f8 <ReadInt64Data+0x1658>
    90d4:	ldr	r3, [r4]
    90d8:	add	r0, sp, #56	; 0x38
    90dc:	mov	r1, r7
    90e0:	mov	r2, r5
    90e4:	bl	18d0 <fread@plt>
    90e8:	add	sl, r0, sl
    90ec:	cmp	r5, #1
    90f0:	blt	9104 <ReadInt64Data+0x1564>
    90f4:	lsl	r2, r5, #3
    90f8:	add	r1, sp, #56	; 0x38
    90fc:	mov	r0, r8
    9100:	bl	1834 <memcpy@plt>
    9104:	mov	r5, sl
    9108:	mul	r0, r5, r7
    910c:	b	7bc8 <ReadInt64Data+0x28>
    9110:	sub	r0, r5, #256	; 0x100
    9114:	str	r5, [sp, #4]
    9118:	add	r1, r8, #2048	; 0x800
    911c:	add	r4, sp, #56	; 0x38
    9120:	mov	r5, sl
    9124:	str	r0, [sp, #12]
    9128:	mov	r0, #0
    912c:	mov	sl, r0
    9130:	ldr	r0, [sp, #20]
    9134:	mov	r9, r1
    9138:	mov	r1, r7
    913c:	mov	r2, #256	; 0x100
    9140:	ldr	r3, [r0]
    9144:	mov	r0, r4
    9148:	bl	18d0 <fread@plt>
    914c:	mov	r6, r0
    9150:	mov	r7, #0
    9154:	add	r0, r4, r7
    9158:	bl	1c0c <Mat_uint64Swap>
    915c:	mov	r2, r8
    9160:	str	r0, [r2, r7]!
    9164:	add	r7, r7, #8
    9168:	cmp	r7, #2048	; 0x800
    916c:	str	r1, [r2, #4]
    9170:	bne	9154 <ReadInt64Data+0x15b4>
    9174:	ldr	r2, [sp, #12]
    9178:	ldr	r7, [sp, #16]
    917c:	add	r0, sl, #256	; 0x100
    9180:	add	r5, r6, r5
    9184:	add	r8, r8, #2048	; 0x800
    9188:	add	r1, r9, #2048	; 0x800
    918c:	cmp	r0, r2
    9190:	blt	912c <ReadInt64Data+0x158c>
    9194:	mov	r8, r5
    9198:	ldr	r5, [sp, #4]
    919c:	cmp	r0, r5
    91a0:	bge	8eb0 <ReadInt64Data+0x1310>
    91a4:	sub	r6, r5, r0
    91a8:	ldr	r0, [sp, #20]
    91ac:	add	r4, sp, #56	; 0x38
    91b0:	mov	r1, r7
    91b4:	mov	r2, r6
    91b8:	ldr	r3, [r0]
    91bc:	mov	r0, r4
    91c0:	bl	18d0 <fread@plt>
    91c4:	add	r8, r0, r8
    91c8:	cmp	r6, #1
    91cc:	blt	8eb0 <ReadInt64Data+0x1310>
    91d0:	sub	r0, r5, sl
    91d4:	sub	r6, r0, #256	; 0x100
    91d8:	mov	r0, r4
    91dc:	bl	1c0c <Mat_uint64Swap>
    91e0:	strd	r0, [r9]
    91e4:	add	r9, r9, #8
    91e8:	add	r4, r4, #8
    91ec:	subs	r6, r6, #1
    91f0:	bne	91d8 <ReadInt64Data+0x1638>
    91f4:	b	8eb0 <ReadInt64Data+0x1310>
    91f8:	sub	r0, r5, #256	; 0x100
    91fc:	lsl	r4, r5, #3
    9200:	str	r5, [sp, #4]
    9204:	mov	r6, #0
    9208:	add	r9, sp, #56	; 0x38
    920c:	mov	r5, sl
    9210:	str	r0, [sp, #12]
    9214:	ldr	r0, [sp, #20]
    9218:	mov	r1, r7
    921c:	mov	r2, #256	; 0x100
    9220:	ldr	r3, [r0]
    9224:	mov	r0, r9
    9228:	bl	18d0 <fread@plt>
    922c:	mov	sl, r0
    9230:	add	r0, r8, r6, lsl #3
    9234:	mov	r1, r9
    9238:	mov	r2, #2048	; 0x800
    923c:	bl	1834 <memcpy@plt>
    9240:	ldr	r0, [sp, #12]
    9244:	add	r6, r6, #256	; 0x100
    9248:	add	r5, sl, r5
    924c:	sub	r4, r4, #2048	; 0x800
    9250:	cmp	r6, r0
    9254:	blt	9214 <ReadInt64Data+0x1674>
    9258:	ldr	r0, [sp, #4]
    925c:	cmp	r6, r0
    9260:	bge	929c <ReadInt64Data+0x16fc>
    9264:	sub	r7, r0, r6
    9268:	ldr	r0, [sp, #20]
    926c:	ldr	r1, [sp, #16]
    9270:	mov	r2, r7
    9274:	ldr	r3, [r0]
    9278:	add	r0, sp, #56	; 0x38
    927c:	bl	18d0 <fread@plt>
    9280:	add	r5, r0, r5
    9284:	cmp	r7, #1
    9288:	blt	929c <ReadInt64Data+0x16fc>
    928c:	add	r0, r8, r6, lsl #3
    9290:	add	r1, sp, #56	; 0x38
    9294:	mov	r2, r4
    9298:	bl	1834 <memcpy@plt>
    929c:	ldr	r7, [sp, #16]
    92a0:	b	9108 <ReadInt64Data+0x1568>

000092a4 <ReadCompressedInt64Data>:
    92a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    92a8:	add	fp, sp, #28
    92ac:	sub	sp, sp, #12
    92b0:	mov	r7, r0
    92b4:	mov	r0, #0
    92b8:	cmp	r1, #0
    92bc:	beq	9738 <ReadCompressedInt64Data+0x494>
    92c0:	cmp	r7, #0
    92c4:	movne	r5, r2
    92c8:	cmpne	r2, #0
    92cc:	beq	9738 <ReadCompressedInt64Data+0x494>
    92d0:	ldr	sl, [fp, #8]
    92d4:	mov	r0, r3
    92d8:	mov	r4, r3
    92dc:	mov	r6, r1
    92e0:	bl	193c <Mat_SizeOf@plt>
    92e4:	mov	r9, r0
    92e8:	sub	r0, r4, #1
    92ec:	cmp	r0, #12
    92f0:	bhi	9734 <ReadCompressedInt64Data+0x490>
    92f4:	add	r1, pc, #4
    92f8:	ldr	r0, [r1, r0, lsl #2]
    92fc:	add	pc, r1, r0
    9300:	.word	0x00000034
    9304:	.word	0x00000074
    9308:	.word	0x000000b4
    930c:	.word	0x00000104
    9310:	.word	0x00000154
    9314:	.word	0x000001a4
    9318:	.word	0x000001f4
    931c:	.word	0x00000434
    9320:	.word	0x00000248
    9324:	.word	0x00000434
    9328:	.word	0x00000434
    932c:	.word	0x0000029c
    9330:	.word	0x000002e8
    9334:	cmp	sl, #1
    9338:	blt	9734 <ReadCompressedInt64Data+0x490>
    933c:	mov	r8, sp
    9340:	mov	r4, sl
    9344:	mov	r0, r7
    9348:	mov	r1, r6
    934c:	mov	r2, r8
    9350:	mov	r3, r9
    9354:	bl	31dc <InflateData>
    9358:	ldrsb	r0, [sp]
    935c:	subs	r4, r4, #1
    9360:	asr	r1, r0, #31
    9364:	strd	r0, [r5]
    9368:	add	r5, r5, #8
    936c:	bne	9344 <ReadCompressedInt64Data+0xa0>
    9370:	b	9734 <ReadCompressedInt64Data+0x490>
    9374:	cmp	sl, #1
    9378:	blt	9730 <ReadCompressedInt64Data+0x48c>
    937c:	ldr	r4, [fp, #8]
    9380:	mov	r8, sp
    9384:	mov	sl, #0
    9388:	mov	r0, r7
    938c:	mov	r1, r6
    9390:	mov	r2, r8
    9394:	mov	r3, r9
    9398:	bl	31dc <InflateData>
    939c:	ldrb	r0, [sp]
    93a0:	subs	r4, r4, #1
    93a4:	stm	r5, {r0, sl}
    93a8:	add	r5, r5, #8
    93ac:	bne	9388 <ReadCompressedInt64Data+0xe4>
    93b0:	b	9730 <ReadCompressedInt64Data+0x48c>
    93b4:	ldr	r0, [r7, #20]
    93b8:	cmp	r0, #0
    93bc:	beq	9634 <ReadCompressedInt64Data+0x390>
    93c0:	cmp	sl, #1
    93c4:	blt	9734 <ReadCompressedInt64Data+0x490>
    93c8:	mov	r8, sp
    93cc:	mov	r4, sl
    93d0:	mov	r0, r7
    93d4:	mov	r1, r6
    93d8:	mov	r2, r8
    93dc:	mov	r3, r9
    93e0:	bl	31dc <InflateData>
    93e4:	mov	r0, r8
    93e8:	bl	1c58 <Mat_int16Swap>
    93ec:	asr	r1, r0, #31
    93f0:	subs	r4, r4, #1
    93f4:	strd	r0, [r5]
    93f8:	add	r5, r5, #8
    93fc:	bne	93d0 <ReadCompressedInt64Data+0x12c>
    9400:	b	9734 <ReadCompressedInt64Data+0x490>
    9404:	ldr	r0, [r7, #20]
    9408:	cmp	r0, #0
    940c:	beq	9674 <ReadCompressedInt64Data+0x3d0>
    9410:	cmp	sl, #1
    9414:	blt	9730 <ReadCompressedInt64Data+0x48c>
    9418:	ldr	r4, [fp, #8]
    941c:	mov	r8, sp
    9420:	mov	sl, #0
    9424:	mov	r0, r7
    9428:	mov	r1, r6
    942c:	mov	r2, r8
    9430:	mov	r3, r9
    9434:	bl	31dc <InflateData>
    9438:	mov	r0, r8
    943c:	bl	1c6c <Mat_uint16Swap>
    9440:	stm	r5, {r0, sl}
    9444:	add	r5, r5, #8
    9448:	subs	r4, r4, #1
    944c:	bne	9424 <ReadCompressedInt64Data+0x180>
    9450:	b	9730 <ReadCompressedInt64Data+0x48c>
    9454:	ldr	r0, [r7, #20]
    9458:	cmp	r0, #0
    945c:	beq	96b4 <ReadCompressedInt64Data+0x410>
    9460:	cmp	sl, #1
    9464:	blt	9734 <ReadCompressedInt64Data+0x490>
    9468:	mov	r8, sp
    946c:	mov	r4, sl
    9470:	mov	r0, r7
    9474:	mov	r1, r6
    9478:	mov	r2, r8
    947c:	mov	r3, r9
    9480:	bl	31dc <InflateData>
    9484:	mov	r0, r8
    9488:	bl	1c30 <Mat_int32Swap>
    948c:	asr	r1, r0, #31
    9490:	subs	r4, r4, #1
    9494:	strd	r0, [r5]
    9498:	add	r5, r5, #8
    949c:	bne	9470 <ReadCompressedInt64Data+0x1cc>
    94a0:	b	9734 <ReadCompressedInt64Data+0x490>
    94a4:	ldr	r0, [r7, #20]
    94a8:	cmp	r0, #0
    94ac:	beq	96f4 <ReadCompressedInt64Data+0x450>
    94b0:	cmp	sl, #1
    94b4:	blt	9730 <ReadCompressedInt64Data+0x48c>
    94b8:	ldr	sl, [fp, #8]
    94bc:	mov	r8, sp
    94c0:	mov	r4, #0
    94c4:	mov	r0, r7
    94c8:	mov	r1, r6
    94cc:	mov	r2, r8
    94d0:	mov	r3, r9
    94d4:	bl	31dc <InflateData>
    94d8:	mov	r0, r8
    94dc:	bl	1c44 <Mat_uint32Swap>
    94e0:	stm	r5, {r0, r4}
    94e4:	add	r5, r5, #8
    94e8:	subs	sl, sl, #1
    94ec:	bne	94c4 <ReadCompressedInt64Data+0x220>
    94f0:	b	9730 <ReadCompressedInt64Data+0x48c>
    94f4:	ldr	r0, [r7, #20]
    94f8:	cmp	r0, #0
    94fc:	beq	9740 <ReadCompressedInt64Data+0x49c>
    9500:	cmp	sl, #1
    9504:	blt	9734 <ReadCompressedInt64Data+0x490>
    9508:	mov	r8, sp
    950c:	mov	r4, sl
    9510:	mov	r0, r7
    9514:	mov	r1, r6
    9518:	mov	r2, r8
    951c:	mov	r3, r9
    9520:	bl	31dc <InflateData>
    9524:	mov	r0, r8
    9528:	bl	1c84 <Mat_floatSwap>
    952c:	vmov	r0, s0
    9530:	bl	4b6b4 <__aeabi_f2lz>
    9534:	strd	r0, [r5]
    9538:	add	r5, r5, #8
    953c:	subs	r4, r4, #1
    9540:	bne	9510 <ReadCompressedInt64Data+0x26c>
    9544:	b	9734 <ReadCompressedInt64Data+0x490>
    9548:	ldr	r0, [r7, #20]
    954c:	cmp	r0, #0
    9550:	beq	9780 <ReadCompressedInt64Data+0x4dc>
    9554:	cmp	sl, #1
    9558:	blt	9734 <ReadCompressedInt64Data+0x490>
    955c:	mov	r8, sp
    9560:	mov	r4, sl
    9564:	mov	r0, r7
    9568:	mov	r1, r6
    956c:	mov	r2, r8
    9570:	mov	r3, r9
    9574:	bl	31dc <InflateData>
    9578:	mov	r0, r8
    957c:	bl	1cc8 <Mat_doubleSwap>
    9580:	vmov	r0, r1, d0
    9584:	bl	4b6e0 <__aeabi_d2lz>
    9588:	strd	r0, [r5]
    958c:	add	r5, r5, #8
    9590:	subs	r4, r4, #1
    9594:	bne	9564 <ReadCompressedInt64Data+0x2c0>
    9598:	b	9734 <ReadCompressedInt64Data+0x490>
    959c:	ldr	r0, [r7, #20]
    95a0:	cmp	r0, #0
    95a4:	beq	97c4 <ReadCompressedInt64Data+0x520>
    95a8:	cmp	sl, #1
    95ac:	blt	9734 <ReadCompressedInt64Data+0x490>
    95b0:	mov	r8, sp
    95b4:	mov	r4, sl
    95b8:	mov	r0, r7
    95bc:	mov	r1, r6
    95c0:	mov	r2, r8
    95c4:	mov	r3, r9
    95c8:	bl	31dc <InflateData>
    95cc:	mov	r0, r8
    95d0:	bl	1bbc <Mat_int64Swap>
    95d4:	strd	r0, [r5]
    95d8:	add	r5, r5, #8
    95dc:	subs	r4, r4, #1
    95e0:	bne	95b8 <ReadCompressedInt64Data+0x314>
    95e4:	b	9734 <ReadCompressedInt64Data+0x490>
    95e8:	ldr	r0, [r7, #20]
    95ec:	cmp	r0, #0
    95f0:	beq	9800 <ReadCompressedInt64Data+0x55c>
    95f4:	cmp	sl, #1
    95f8:	blt	9734 <ReadCompressedInt64Data+0x490>
    95fc:	mov	r8, sp
    9600:	mov	r4, sl
    9604:	mov	r0, r7
    9608:	mov	r1, r6
    960c:	mov	r2, r8
    9610:	mov	r3, r9
    9614:	bl	31dc <InflateData>
    9618:	mov	r0, r8
    961c:	bl	1c0c <Mat_uint64Swap>
    9620:	strd	r0, [r5]
    9624:	add	r5, r5, #8
    9628:	subs	r4, r4, #1
    962c:	bne	9604 <ReadCompressedInt64Data+0x360>
    9630:	b	9734 <ReadCompressedInt64Data+0x490>
    9634:	cmp	sl, #1
    9638:	blt	9734 <ReadCompressedInt64Data+0x490>
    963c:	mov	r8, sp
    9640:	mov	r4, sl
    9644:	mov	r0, r7
    9648:	mov	r1, r6
    964c:	mov	r2, r8
    9650:	mov	r3, r9
    9654:	bl	31dc <InflateData>
    9658:	ldrsh	r0, [sp]
    965c:	subs	r4, r4, #1
    9660:	asr	r1, r0, #31
    9664:	strd	r0, [r5]
    9668:	add	r5, r5, #8
    966c:	bne	9644 <ReadCompressedInt64Data+0x3a0>
    9670:	b	9734 <ReadCompressedInt64Data+0x490>
    9674:	cmp	sl, #1
    9678:	blt	9730 <ReadCompressedInt64Data+0x48c>
    967c:	ldr	r4, [fp, #8]
    9680:	mov	r8, sp
    9684:	mov	sl, #0
    9688:	mov	r0, r7
    968c:	mov	r1, r6
    9690:	mov	r2, r8
    9694:	mov	r3, r9
    9698:	bl	31dc <InflateData>
    969c:	ldrh	r0, [sp]
    96a0:	subs	r4, r4, #1
    96a4:	stm	r5, {r0, sl}
    96a8:	add	r5, r5, #8
    96ac:	bne	9688 <ReadCompressedInt64Data+0x3e4>
    96b0:	b	9730 <ReadCompressedInt64Data+0x48c>
    96b4:	cmp	sl, #1
    96b8:	blt	9734 <ReadCompressedInt64Data+0x490>
    96bc:	mov	r8, sp
    96c0:	mov	r4, sl
    96c4:	mov	r0, r7
    96c8:	mov	r1, r6
    96cc:	mov	r2, r8
    96d0:	mov	r3, r9
    96d4:	bl	31dc <InflateData>
    96d8:	ldr	r0, [sp]
    96dc:	subs	r4, r4, #1
    96e0:	asr	r1, r0, #31
    96e4:	strd	r0, [r5]
    96e8:	add	r5, r5, #8
    96ec:	bne	96c4 <ReadCompressedInt64Data+0x420>
    96f0:	b	9734 <ReadCompressedInt64Data+0x490>
    96f4:	cmp	sl, #1
    96f8:	blt	9730 <ReadCompressedInt64Data+0x48c>
    96fc:	ldr	r4, [fp, #8]
    9700:	mov	r8, sp
    9704:	mov	sl, #0
    9708:	mov	r0, r7
    970c:	mov	r1, r6
    9710:	mov	r2, r8
    9714:	mov	r3, r9
    9718:	bl	31dc <InflateData>
    971c:	ldr	r0, [sp]
    9720:	subs	r4, r4, #1
    9724:	stm	r5, {r0, sl}
    9728:	add	r5, r5, #8
    972c:	bne	9708 <ReadCompressedInt64Data+0x464>
    9730:	ldr	sl, [fp, #8]
    9734:	mul	r0, r9, sl
    9738:	sub	sp, fp, #28
    973c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9740:	cmp	sl, #1
    9744:	blt	9734 <ReadCompressedInt64Data+0x490>
    9748:	mov	r8, sp
    974c:	mov	r4, sl
    9750:	mov	r0, r7
    9754:	mov	r1, r6
    9758:	mov	r2, r8
    975c:	mov	r3, r9
    9760:	bl	31dc <InflateData>
    9764:	ldr	r0, [sp]
    9768:	bl	4b6b4 <__aeabi_f2lz>
    976c:	strd	r0, [r5]
    9770:	add	r5, r5, #8
    9774:	subs	r4, r4, #1
    9778:	bne	9750 <ReadCompressedInt64Data+0x4ac>
    977c:	b	9734 <ReadCompressedInt64Data+0x490>
    9780:	cmp	sl, #1
    9784:	blt	9734 <ReadCompressedInt64Data+0x490>
    9788:	mov	r8, sp
    978c:	mov	r4, sl
    9790:	mov	r0, r7
    9794:	mov	r1, r6
    9798:	mov	r2, r8
    979c:	mov	r3, r9
    97a0:	bl	31dc <InflateData>
    97a4:	vldr	d16, [sp]
    97a8:	vmov	r0, r1, d16
    97ac:	bl	4b6e0 <__aeabi_d2lz>
    97b0:	strd	r0, [r5]
    97b4:	add	r5, r5, #8
    97b8:	subs	r4, r4, #1
    97bc:	bne	9790 <ReadCompressedInt64Data+0x4ec>
    97c0:	b	9734 <ReadCompressedInt64Data+0x490>
    97c4:	cmp	sl, #1
    97c8:	blt	9734 <ReadCompressedInt64Data+0x490>
    97cc:	mov	r8, sp
    97d0:	mov	r4, sl
    97d4:	mov	r0, r7
    97d8:	mov	r1, r6
    97dc:	mov	r2, r8
    97e0:	mov	r3, r9
    97e4:	bl	31dc <InflateData>
    97e8:	ldm	sp, {r0, r1}
    97ec:	subs	r4, r4, #1
    97f0:	strd	r0, [r5]
    97f4:	add	r5, r5, #8
    97f8:	bne	97d4 <ReadCompressedInt64Data+0x530>
    97fc:	b	9734 <ReadCompressedInt64Data+0x490>
    9800:	cmp	sl, #1
    9804:	blt	9734 <ReadCompressedInt64Data+0x490>
    9808:	mov	r8, sp
    980c:	mov	r4, sl
    9810:	mov	r0, r7
    9814:	mov	r1, r6
    9818:	mov	r2, r8
    981c:	mov	r3, r9
    9820:	bl	31dc <InflateData>
    9824:	ldm	sp, {r0, r1}
    9828:	subs	r4, r4, #1
    982c:	strd	r0, [r5]
    9830:	add	r5, r5, #8
    9834:	bne	9810 <ReadCompressedInt64Data+0x56c>
    9838:	b	9734 <ReadCompressedInt64Data+0x490>

0000983c <ReadUInt64Data>:
    983c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9840:	add	fp, sp, #28
    9844:	sub	sp, sp, #60	; 0x3c
    9848:	sub	sp, sp, #2048	; 0x800
    984c:	mov	r4, r0
    9850:	mov	r0, #0
    9854:	cmp	r4, #0
    9858:	movne	r8, r1
    985c:	cmpne	r1, #0
    9860:	bne	986c <ReadUInt64Data+0x30>
    9864:	sub	sp, fp, #28
    9868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    986c:	ldr	r1, [r4]
    9870:	cmp	r1, #0
    9874:	beq	9864 <ReadUInt64Data+0x28>
    9878:	mov	r0, r2
    987c:	mov	r5, r3
    9880:	mov	r9, r2
    9884:	bl	193c <Mat_SizeOf@plt>
    9888:	mov	r7, r0
    988c:	sub	r0, r9, #1
    9890:	mov	sl, #0
    9894:	str	r4, [sp, #20]
    9898:	cmp	r0, #11
    989c:	str	r7, [sp, #16]
    98a0:	bhi	ad08 <ReadUInt64Data+0x14cc>
    98a4:	add	r1, pc, #4
    98a8:	ldr	r0, [r1, r0, lsl #2]
    98ac:	add	pc, r1, r0
    98b0:	.word	0x00000030
    98b4:	.word	0x00000078
    98b8:	.word	0x000000c0
    98bc:	.word	0x0000011c
    98c0:	.word	0x0000017c
    98c4:	.word	0x000001d8
    98c8:	.word	0x00000240
    98cc:	.word	0x00001458
    98d0:	.word	0x000002a0
    98d4:	.word	0x00001458
    98d8:	.word	0x00001458
    98dc:	.word	0x00000300
    98e0:	cmp	r5, #256	; 0x100
    98e4:	bgt	9c18 <ReadUInt64Data+0x3dc>
    98e8:	ldr	r3, [r4]
    98ec:	add	r4, sp, #56	; 0x38
    98f0:	mov	r1, r7
    98f4:	mov	r2, r5
    98f8:	mov	r0, r4
    98fc:	bl	18d0 <fread@plt>
    9900:	cmp	r5, #1
    9904:	blt	9f18 <ReadUInt64Data+0x6dc>
    9908:	ldrsb	r2, [r4], #1
    990c:	subs	r5, r5, #1
    9910:	asr	r1, r2, #31
    9914:	str	r2, [r8]
    9918:	str	r1, [r8, #4]
    991c:	add	r8, r8, #8
    9920:	bne	9908 <ReadUInt64Data+0xcc>
    9924:	b	9f18 <ReadUInt64Data+0x6dc>
    9928:	cmp	r5, #256	; 0x100
    992c:	bgt	9d08 <ReadUInt64Data+0x4cc>
    9930:	ldr	r3, [r4]
    9934:	add	r4, sp, #56	; 0x38
    9938:	mov	r1, r7
    993c:	mov	r2, r5
    9940:	mov	r0, r4
    9944:	bl	18d0 <fread@plt>
    9948:	cmp	r5, #1
    994c:	blt	9f18 <ReadUInt64Data+0x6dc>
    9950:	mov	r1, #0
    9954:	ldrb	r2, [r4], #1
    9958:	subs	r5, r5, #1
    995c:	str	r2, [r8]
    9960:	str	r1, [r8, #4]
    9964:	add	r8, r8, #8
    9968:	bne	9954 <ReadUInt64Data+0x118>
    996c:	b	9f18 <ReadUInt64Data+0x6dc>
    9970:	ldr	r0, [r4, #20]
    9974:	cmp	r0, #0
    9978:	beq	9dfc <ReadUInt64Data+0x5c0>
    997c:	cmp	r5, #256	; 0x100
    9980:	bgt	9ff8 <ReadUInt64Data+0x7bc>
    9984:	ldr	r3, [r4]
    9988:	add	r4, sp, #56	; 0x38
    998c:	mov	r1, r7
    9990:	mov	r2, r5
    9994:	mov	r0, r4
    9998:	bl	18d0 <fread@plt>
    999c:	mov	r6, r0
    99a0:	cmp	r5, #1
    99a4:	blt	9fb4 <ReadUInt64Data+0x778>
    99a8:	mov	r0, r4
    99ac:	bl	1c58 <Mat_int16Swap>
    99b0:	asr	r1, r0, #31
    99b4:	add	r4, r4, #2
    99b8:	subs	r5, r5, #1
    99bc:	strd	r0, [r8]
    99c0:	add	r8, r8, #8
    99c4:	bne	99a8 <ReadUInt64Data+0x16c>
    99c8:	b	9fb4 <ReadUInt64Data+0x778>
    99cc:	ldr	r0, [r4, #20]
    99d0:	cmp	r0, #0
    99d4:	beq	9e44 <ReadUInt64Data+0x608>
    99d8:	cmp	r5, #256	; 0x100
    99dc:	bgt	a0e8 <ReadUInt64Data+0x8ac>
    99e0:	ldr	r3, [r4]
    99e4:	add	r4, sp, #56	; 0x38
    99e8:	mov	r1, r7
    99ec:	mov	r2, r5
    99f0:	mov	r0, r4
    99f4:	bl	18d0 <fread@plt>
    99f8:	mov	r9, r0
    99fc:	cmp	r5, #1
    9a00:	blt	9ae8 <ReadUInt64Data+0x2ac>
    9a04:	mov	r7, #0
    9a08:	mov	r0, r4
    9a0c:	bl	1c6c <Mat_uint16Swap>
    9a10:	mov	r6, r0
    9a14:	add	r4, r4, #2
    9a18:	subs	r5, r5, #1
    9a1c:	strd	r6, [r8]
    9a20:	add	r8, r8, #8
    9a24:	bne	9a08 <ReadUInt64Data+0x1cc>
    9a28:	b	9ae4 <ReadUInt64Data+0x2a8>
    9a2c:	ldr	r0, [r4, #20]
    9a30:	cmp	r0, #0
    9a34:	beq	9e8c <ReadUInt64Data+0x650>
    9a38:	cmp	r5, #256	; 0x100
    9a3c:	bgt	a1e0 <ReadUInt64Data+0x9a4>
    9a40:	ldr	r3, [r4]
    9a44:	add	r4, sp, #56	; 0x38
    9a48:	mov	r1, r7
    9a4c:	mov	r2, r5
    9a50:	mov	r0, r4
    9a54:	bl	18d0 <fread@plt>
    9a58:	mov	r6, r0
    9a5c:	cmp	r5, #1
    9a60:	blt	9fb4 <ReadUInt64Data+0x778>
    9a64:	mov	r0, r4
    9a68:	bl	1c30 <Mat_int32Swap>
    9a6c:	asr	r1, r0, #31
    9a70:	add	r4, r4, #4
    9a74:	subs	r5, r5, #1
    9a78:	strd	r0, [r8]
    9a7c:	add	r8, r8, #8
    9a80:	bne	9a64 <ReadUInt64Data+0x228>
    9a84:	b	9fb4 <ReadUInt64Data+0x778>
    9a88:	ldr	r0, [r4, #20]
    9a8c:	cmp	r0, #0
    9a90:	beq	9ed4 <ReadUInt64Data+0x698>
    9a94:	cmp	r5, #256	; 0x100
    9a98:	bgt	a2d0 <ReadUInt64Data+0xa94>
    9a9c:	ldr	r3, [r4]
    9aa0:	add	r4, sp, #56	; 0x38
    9aa4:	mov	r1, r7
    9aa8:	mov	r2, r5
    9aac:	mov	r0, r4
    9ab0:	bl	18d0 <fread@plt>
    9ab4:	mov	r9, r0
    9ab8:	cmp	r5, #1
    9abc:	blt	9ae8 <ReadUInt64Data+0x2ac>
    9ac0:	mov	r7, #0
    9ac4:	mov	r0, r4
    9ac8:	bl	1c44 <Mat_uint32Swap>
    9acc:	mov	r6, r0
    9ad0:	add	r4, r4, #4
    9ad4:	subs	r5, r5, #1
    9ad8:	strd	r6, [r8]
    9adc:	add	r8, r8, #8
    9ae0:	bne	9ac4 <ReadUInt64Data+0x288>
    9ae4:	ldr	r7, [sp, #16]
    9ae8:	mov	r5, r9
    9aec:	b	ada4 <ReadUInt64Data+0x1568>
    9af0:	ldr	r0, [r4, #20]
    9af4:	cmp	r0, #0
    9af8:	beq	9f20 <ReadUInt64Data+0x6e4>
    9afc:	cmp	r5, #256	; 0x100
    9b00:	bgt	a3c8 <ReadUInt64Data+0xb8c>
    9b04:	ldr	r3, [r4]
    9b08:	add	r4, sp, #56	; 0x38
    9b0c:	mov	r1, r7
    9b10:	mov	r2, r5
    9b14:	mov	r0, r4
    9b18:	bl	18d0 <fread@plt>
    9b1c:	mov	r6, r0
    9b20:	cmp	r5, #1
    9b24:	blt	9fb4 <ReadUInt64Data+0x778>
    9b28:	mov	r0, r4
    9b2c:	bl	1c84 <Mat_floatSwap>
    9b30:	vmov	r0, s0
    9b34:	bl	4b710 <__aeabi_f2ulz>
    9b38:	strd	r0, [r8]
    9b3c:	add	r4, r4, #4
    9b40:	add	r8, r8, #8
    9b44:	subs	r5, r5, #1
    9b48:	bne	9b28 <ReadUInt64Data+0x2ec>
    9b4c:	b	9fb4 <ReadUInt64Data+0x778>
    9b50:	ldr	r0, [r4, #20]
    9b54:	cmp	r0, #0
    9b58:	beq	9f68 <ReadUInt64Data+0x72c>
    9b5c:	cmp	r5, #256	; 0x100
    9b60:	bgt	a4c0 <ReadUInt64Data+0xc84>
    9b64:	ldr	r3, [r4]
    9b68:	add	r4, sp, #56	; 0x38
    9b6c:	mov	r1, r7
    9b70:	mov	r2, r5
    9b74:	mov	r0, r4
    9b78:	bl	18d0 <fread@plt>
    9b7c:	mov	r6, r0
    9b80:	cmp	r5, #1
    9b84:	blt	9fb4 <ReadUInt64Data+0x778>
    9b88:	mov	r0, r4
    9b8c:	bl	1cc8 <Mat_doubleSwap>
    9b90:	vmov	r0, r1, d0
    9b94:	bl	4b750 <__aeabi_d2ulz>
    9b98:	strd	r0, [r8]
    9b9c:	add	r4, r4, #8
    9ba0:	add	r8, r8, #8
    9ba4:	subs	r5, r5, #1
    9ba8:	bne	9b88 <ReadUInt64Data+0x34c>
    9bac:	b	9fb4 <ReadUInt64Data+0x778>
    9bb0:	ldr	r0, [r4, #20]
    9bb4:	cmp	r0, #0
    9bb8:	beq	9fbc <ReadUInt64Data+0x780>
    9bbc:	cmp	r5, #256	; 0x100
    9bc0:	bgt	a5b8 <ReadUInt64Data+0xd7c>
    9bc4:	ldr	r3, [r4]
    9bc8:	add	r4, sp, #56	; 0x38
    9bcc:	mov	r1, r7
    9bd0:	mov	r2, r5
    9bd4:	mov	r0, r4
    9bd8:	bl	18d0 <fread@plt>
    9bdc:	mov	sl, r0
    9be0:	cmp	r5, #1
    9be4:	blt	9c10 <ReadUInt64Data+0x3d4>
    9be8:	mov	r6, r8
    9bec:	mov	r7, r5
    9bf0:	mov	r0, r4
    9bf4:	bl	1bbc <Mat_int64Swap>
    9bf8:	strd	r0, [r6]
    9bfc:	add	r4, r4, #8
    9c00:	add	r6, r6, #8
    9c04:	subs	r7, r7, #1
    9c08:	bne	9bf0 <ReadUInt64Data+0x3b4>
    9c0c:	ldr	r7, [sp, #16]
    9c10:	ldr	r4, [sp, #20]
    9c14:	b	ad08 <ReadUInt64Data+0x14cc>
    9c18:	sub	r0, r5, #256	; 0x100
    9c1c:	str	r5, [sp, #4]
    9c20:	add	r1, r8, #2048	; 0x800
    9c24:	add	r4, sp, #56	; 0x38
    9c28:	add	sl, sp, #48	; 0x30
    9c2c:	mov	r5, #0
    9c30:	str	r0, [sp, #12]
    9c34:	mov	r0, #0
    9c38:	mov	r9, r0
    9c3c:	ldr	r0, [sp, #20]
    9c40:	mov	r6, r1
    9c44:	mov	r1, r7
    9c48:	mov	r2, #256	; 0x100
    9c4c:	ldr	r3, [r0]
    9c50:	mov	r0, r4
    9c54:	bl	18d0 <fread@plt>
    9c58:	mov	r1, r8
    9c5c:	mov	r2, #0
    9c60:	add	r3, r4, r2
    9c64:	add	r2, r2, #2
    9c68:	ldrh	r3, [r3]
    9c6c:	cmp	r2, #256	; 0x100
    9c70:	strh	r3, [sp, #48]	; 0x30
    9c74:	vld1.16	{d16[0]}, [sl :16]
    9c78:	vmovl.s8	q8, d16
    9c7c:	vmovl.s16	q8, d16
    9c80:	vmovl.s32	q8, d16
    9c84:	vst1.64	{d16-d17}, [r1]!
    9c88:	bne	9c60 <ReadUInt64Data+0x424>
    9c8c:	ldr	r2, [sp, #12]
    9c90:	add	r5, r0, r5
    9c94:	add	r0, r9, #256	; 0x100
    9c98:	add	r8, r8, #2048	; 0x800
    9c9c:	add	r1, r6, #2048	; 0x800
    9ca0:	cmp	r0, r2
    9ca4:	blt	9c38 <ReadUInt64Data+0x3fc>
    9ca8:	mov	r8, r5
    9cac:	ldr	r5, [sp, #4]
    9cb0:	cmp	r0, r5
    9cb4:	bge	ab4c <ReadUInt64Data+0x1310>
    9cb8:	mov	r1, r7
    9cbc:	sub	r7, r5, r0
    9cc0:	ldr	r0, [sp, #20]
    9cc4:	add	r4, sp, #56	; 0x38
    9cc8:	mov	r2, r7
    9ccc:	ldr	r3, [r0]
    9cd0:	mov	r0, r4
    9cd4:	bl	18d0 <fread@plt>
    9cd8:	add	r8, r0, r8
    9cdc:	cmp	r7, #1
    9ce0:	blt	ab48 <ReadUInt64Data+0x130c>
    9ce4:	sub	r0, r5, r9
    9ce8:	sub	r0, r0, #256	; 0x100
    9cec:	ldrsb	r2, [r4], #1
    9cf0:	subs	r0, r0, #1
    9cf4:	asr	r3, r2, #31
    9cf8:	strd	r2, [r6]
    9cfc:	add	r6, r6, #8
    9d00:	bne	9cec <ReadUInt64Data+0x4b0>
    9d04:	b	ab48 <ReadUInt64Data+0x130c>
    9d08:	sub	r0, r5, #256	; 0x100
    9d0c:	str	r5, [sp, #4]
    9d10:	add	r1, r8, #2048	; 0x800
    9d14:	add	r4, sp, #56	; 0x38
    9d18:	add	sl, sp, #52	; 0x34
    9d1c:	mov	r5, #0
    9d20:	str	r0, [sp, #12]
    9d24:	mov	r0, #0
    9d28:	mov	r9, r0
    9d2c:	ldr	r0, [sp, #20]
    9d30:	mov	r6, r1
    9d34:	mov	r1, r7
    9d38:	mov	r2, #256	; 0x100
    9d3c:	ldr	r3, [r0]
    9d40:	mov	r0, r4
    9d44:	bl	18d0 <fread@plt>
    9d48:	mov	r1, r8
    9d4c:	mov	r2, #0
    9d50:	add	r3, r4, r2
    9d54:	add	r2, r2, #2
    9d58:	ldrh	r3, [r3]
    9d5c:	cmp	r2, #256	; 0x100
    9d60:	strh	r3, [sp, #52]	; 0x34
    9d64:	vld1.16	{d16[0]}, [sl :16]
    9d68:	vmovl.u8	q8, d16
    9d6c:	vmovl.u16	q8, d16
    9d70:	vmovl.u32	q8, d16
    9d74:	vst1.64	{d16-d17}, [r1]!
    9d78:	bne	9d50 <ReadUInt64Data+0x514>
    9d7c:	ldr	r2, [sp, #12]
    9d80:	add	r5, r0, r5
    9d84:	add	r0, r9, #256	; 0x100
    9d88:	add	r8, r8, #2048	; 0x800
    9d8c:	add	r1, r6, #2048	; 0x800
    9d90:	cmp	r0, r2
    9d94:	blt	9d28 <ReadUInt64Data+0x4ec>
    9d98:	mov	r8, r5
    9d9c:	ldr	r5, [sp, #4]
    9da0:	cmp	r0, r5
    9da4:	bge	ab4c <ReadUInt64Data+0x1310>
    9da8:	mov	r1, r7
    9dac:	sub	r7, r5, r0
    9db0:	ldr	r0, [sp, #20]
    9db4:	add	r4, sp, #56	; 0x38
    9db8:	mov	r2, r7
    9dbc:	ldr	r3, [r0]
    9dc0:	mov	r0, r4
    9dc4:	bl	18d0 <fread@plt>
    9dc8:	add	r8, r0, r8
    9dcc:	cmp	r7, #1
    9dd0:	blt	ab48 <ReadUInt64Data+0x130c>
    9dd4:	sub	r0, r5, r9
    9dd8:	mov	r1, #0
    9ddc:	sub	r0, r0, #256	; 0x100
    9de0:	ldrb	r2, [r4], #1
    9de4:	subs	r0, r0, #1
    9de8:	str	r2, [r6]
    9dec:	str	r1, [r6, #4]
    9df0:	add	r6, r6, #8
    9df4:	bne	9de0 <ReadUInt64Data+0x5a4>
    9df8:	b	ab48 <ReadUInt64Data+0x130c>
    9dfc:	cmp	r5, #256	; 0x100
    9e00:	bgt	a6b0 <ReadUInt64Data+0xe74>
    9e04:	ldr	r3, [r4]
    9e08:	add	r4, sp, #56	; 0x38
    9e0c:	mov	r1, r7
    9e10:	mov	r2, r5
    9e14:	mov	r0, r4
    9e18:	bl	18d0 <fread@plt>
    9e1c:	cmp	r5, #1
    9e20:	blt	9f18 <ReadUInt64Data+0x6dc>
    9e24:	ldrsh	r2, [r4], #2
    9e28:	subs	r5, r5, #1
    9e2c:	asr	r1, r2, #31
    9e30:	str	r2, [r8]
    9e34:	str	r1, [r8, #4]
    9e38:	add	r8, r8, #8
    9e3c:	bne	9e24 <ReadUInt64Data+0x5e8>
    9e40:	b	9f18 <ReadUInt64Data+0x6dc>
    9e44:	cmp	r5, #256	; 0x100
    9e48:	bgt	a798 <ReadUInt64Data+0xf5c>
    9e4c:	ldr	r3, [r4]
    9e50:	add	r4, sp, #56	; 0x38
    9e54:	mov	r1, r7
    9e58:	mov	r2, r5
    9e5c:	mov	r0, r4
    9e60:	bl	18d0 <fread@plt>
    9e64:	cmp	r5, #1
    9e68:	blt	9f18 <ReadUInt64Data+0x6dc>
    9e6c:	mov	r1, #0
    9e70:	ldrh	r2, [r4], #2
    9e74:	subs	r5, r5, #1
    9e78:	str	r2, [r8]
    9e7c:	str	r1, [r8, #4]
    9e80:	add	r8, r8, #8
    9e84:	bne	9e70 <ReadUInt64Data+0x634>
    9e88:	b	9f18 <ReadUInt64Data+0x6dc>
    9e8c:	cmp	r5, #256	; 0x100
    9e90:	bgt	a884 <ReadUInt64Data+0x1048>
    9e94:	ldr	r3, [r4]
    9e98:	add	r4, sp, #56	; 0x38
    9e9c:	mov	r1, r7
    9ea0:	mov	r2, r5
    9ea4:	mov	r0, r4
    9ea8:	bl	18d0 <fread@plt>
    9eac:	cmp	r5, #1
    9eb0:	blt	9f18 <ReadUInt64Data+0x6dc>
    9eb4:	ldr	r2, [r4], #4
    9eb8:	subs	r5, r5, #1
    9ebc:	asr	r1, r2, #31
    9ec0:	str	r2, [r8]
    9ec4:	str	r1, [r8, #4]
    9ec8:	add	r8, r8, #8
    9ecc:	bne	9eb4 <ReadUInt64Data+0x678>
    9ed0:	b	9f18 <ReadUInt64Data+0x6dc>
    9ed4:	cmp	r5, #256	; 0x100
    9ed8:	bgt	a974 <ReadUInt64Data+0x1138>
    9edc:	ldr	r3, [r4]
    9ee0:	add	r4, sp, #56	; 0x38
    9ee4:	mov	r1, r7
    9ee8:	mov	r2, r5
    9eec:	mov	r0, r4
    9ef0:	bl	18d0 <fread@plt>
    9ef4:	cmp	r5, #1
    9ef8:	blt	9f18 <ReadUInt64Data+0x6dc>
    9efc:	mov	r1, #0
    9f00:	ldr	r2, [r4], #4
    9f04:	subs	r5, r5, #1
    9f08:	str	r2, [r8]
    9f0c:	str	r1, [r8, #4]
    9f10:	add	r8, r8, #8
    9f14:	bne	9f00 <ReadUInt64Data+0x6c4>
    9f18:	mov	r5, r0
    9f1c:	b	ada4 <ReadUInt64Data+0x1568>
    9f20:	cmp	r5, #256	; 0x100
    9f24:	bgt	aa68 <ReadUInt64Data+0x122c>
    9f28:	ldr	r3, [r4]
    9f2c:	add	r4, sp, #56	; 0x38
    9f30:	mov	r1, r7
    9f34:	mov	r2, r5
    9f38:	mov	r0, r4
    9f3c:	bl	18d0 <fread@plt>
    9f40:	mov	r6, r0
    9f44:	cmp	r5, #1
    9f48:	blt	9fb4 <ReadUInt64Data+0x778>
    9f4c:	ldr	r0, [r4], #4
    9f50:	bl	4b710 <__aeabi_f2ulz>
    9f54:	strd	r0, [r8]
    9f58:	add	r8, r8, #8
    9f5c:	subs	r5, r5, #1
    9f60:	bne	9f4c <ReadUInt64Data+0x710>
    9f64:	b	9fb4 <ReadUInt64Data+0x778>
    9f68:	cmp	r5, #256	; 0x100
    9f6c:	bgt	ab54 <ReadUInt64Data+0x1318>
    9f70:	ldr	r3, [r4]
    9f74:	add	r4, sp, #56	; 0x38
    9f78:	mov	r1, r7
    9f7c:	mov	r2, r5
    9f80:	mov	r0, r4
    9f84:	bl	18d0 <fread@plt>
    9f88:	mov	r6, r0
    9f8c:	cmp	r5, #1
    9f90:	blt	9fb4 <ReadUInt64Data+0x778>
    9f94:	vldr	d16, [r4]
    9f98:	vmov	r0, r1, d16
    9f9c:	bl	4b750 <__aeabi_d2ulz>
    9fa0:	strd	r0, [r8]
    9fa4:	add	r4, r4, #8
    9fa8:	add	r8, r8, #8
    9fac:	subs	r5, r5, #1
    9fb0:	bne	9f94 <ReadUInt64Data+0x758>
    9fb4:	mov	r5, r6
    9fb8:	b	ada4 <ReadUInt64Data+0x1568>
    9fbc:	cmp	r5, #256	; 0x100
    9fc0:	bgt	ac48 <ReadUInt64Data+0x140c>
    9fc4:	ldr	r3, [r4]
    9fc8:	add	r0, sp, #56	; 0x38
    9fcc:	mov	r1, r7
    9fd0:	mov	r2, r5
    9fd4:	bl	18d0 <fread@plt>
    9fd8:	mov	sl, r0
    9fdc:	cmp	r5, #1
    9fe0:	blt	ad08 <ReadUInt64Data+0x14cc>
    9fe4:	lsl	r2, r5, #3
    9fe8:	add	r1, sp, #56	; 0x38
    9fec:	mov	r0, r8
    9ff0:	bl	1834 <memcpy@plt>
    9ff4:	b	ad08 <ReadUInt64Data+0x14cc>
    9ff8:	sub	r0, r5, #256	; 0x100
    9ffc:	str	r5, [sp, #4]
    a000:	add	r1, r8, #2048	; 0x800
    a004:	mov	r5, #0
    a008:	str	r0, [sp, #12]
    a00c:	mov	r0, #0
    a010:	ldr	r3, [r4]
    a014:	add	r4, sp, #56	; 0x38
    a018:	mov	sl, r0
    a01c:	mov	r9, r1
    a020:	mov	r1, r7
    a024:	mov	r2, #256	; 0x100
    a028:	mov	r0, r4
    a02c:	bl	18d0 <fread@plt>
    a030:	mov	r6, r0
    a034:	mov	r7, #0
    a038:	mov	r0, r4
    a03c:	bl	1c58 <Mat_int16Swap>
    a040:	mov	r1, r8
    a044:	add	r4, r4, #2
    a048:	str	r0, [r1, r7]!
    a04c:	add	r7, r7, #8
    a050:	asr	r0, r0, #31
    a054:	cmp	r7, #2048	; 0x800
    a058:	str	r0, [r1, #4]
    a05c:	bne	a038 <ReadUInt64Data+0x7fc>
    a060:	ldr	r2, [sp, #12]
    a064:	ldr	r7, [sp, #16]
    a068:	ldr	r4, [sp, #20]
    a06c:	add	r0, sl, #256	; 0x100
    a070:	add	r5, r6, r5
    a074:	add	r8, r8, #2048	; 0x800
    a078:	add	r1, r9, #2048	; 0x800
    a07c:	cmp	r0, r2
    a080:	blt	a010 <ReadUInt64Data+0x7d4>
    a084:	mov	r8, r5
    a088:	ldr	r5, [sp, #4]
    a08c:	cmp	r0, r5
    a090:	bge	ab4c <ReadUInt64Data+0x1310>
    a094:	ldr	r3, [r4]
    a098:	sub	r6, r5, r0
    a09c:	add	r4, sp, #56	; 0x38
    a0a0:	mov	r1, r7
    a0a4:	mov	r0, r4
    a0a8:	mov	r2, r6
    a0ac:	bl	18d0 <fread@plt>
    a0b0:	add	r8, r0, r8
    a0b4:	cmp	r6, #1
    a0b8:	blt	ab4c <ReadUInt64Data+0x1310>
    a0bc:	sub	r0, r5, sl
    a0c0:	sub	r6, r0, #256	; 0x100
    a0c4:	mov	r0, r4
    a0c8:	bl	1c58 <Mat_int16Swap>
    a0cc:	asr	r1, r0, #31
    a0d0:	add	r4, r4, #2
    a0d4:	subs	r6, r6, #1
    a0d8:	strd	r0, [r9]
    a0dc:	add	r9, r9, #8
    a0e0:	bne	a0c4 <ReadUInt64Data+0x888>
    a0e4:	b	ab4c <ReadUInt64Data+0x1310>
    a0e8:	sub	r1, r5, #256	; 0x100
    a0ec:	str	r5, [sp, #4]
    a0f0:	add	r0, r8, #2048	; 0x800
    a0f4:	mov	sl, #0
    a0f8:	mov	r5, #0
    a0fc:	str	r1, [sp, #8]
    a100:	mov	r1, #0
    a104:	ldr	r3, [r4]
    a108:	add	r4, sp, #56	; 0x38
    a10c:	str	r1, [sp, #12]
    a110:	mov	r9, r0
    a114:	mov	r1, r7
    a118:	mov	r2, #256	; 0x100
    a11c:	mov	r0, r4
    a120:	bl	18d0 <fread@plt>
    a124:	mov	r6, r0
    a128:	mov	r7, #0
    a12c:	mov	r0, r4
    a130:	bl	1c6c <Mat_uint16Swap>
    a134:	mov	r1, r8
    a138:	add	r4, r4, #2
    a13c:	str	r0, [r1, r7]!
    a140:	add	r7, r7, #8
    a144:	cmp	r7, #2048	; 0x800
    a148:	str	sl, [r1, #4]
    a14c:	bne	a12c <ReadUInt64Data+0x8f0>
    a150:	ldr	r1, [sp, #12]
    a154:	ldr	r2, [sp, #8]
    a158:	ldr	r7, [sp, #16]
    a15c:	ldr	r4, [sp, #20]
    a160:	add	r5, r6, r5
    a164:	add	r8, r8, #2048	; 0x800
    a168:	add	r0, r9, #2048	; 0x800
    a16c:	add	r1, r1, #256	; 0x100
    a170:	cmp	r1, r2
    a174:	blt	a104 <ReadUInt64Data+0x8c8>
    a178:	mov	r8, r5
    a17c:	ldr	r5, [sp, #4]
    a180:	cmp	r1, r5
    a184:	bge	ab4c <ReadUInt64Data+0x1310>
    a188:	ldr	r3, [r4]
    a18c:	sub	r6, r5, r1
    a190:	add	r4, sp, #56	; 0x38
    a194:	mov	r1, r7
    a198:	mov	r0, r4
    a19c:	mov	r2, r6
    a1a0:	bl	18d0 <fread@plt>
    a1a4:	add	r8, r0, r8
    a1a8:	cmp	r6, #1
    a1ac:	blt	ab4c <ReadUInt64Data+0x1310>
    a1b0:	ldr	r0, [sp, #12]
    a1b4:	mov	r7, #0
    a1b8:	sub	r0, r5, r0
    a1bc:	sub	r6, r0, #256	; 0x100
    a1c0:	mov	r0, r4
    a1c4:	bl	1c6c <Mat_uint16Swap>
    a1c8:	stm	r9, {r0, r7}
    a1cc:	add	r9, r9, #8
    a1d0:	add	r4, r4, #2
    a1d4:	subs	r6, r6, #1
    a1d8:	bne	a1c0 <ReadUInt64Data+0x984>
    a1dc:	b	ab48 <ReadUInt64Data+0x130c>
    a1e0:	sub	r0, r5, #256	; 0x100
    a1e4:	str	r5, [sp, #4]
    a1e8:	add	r1, r8, #2048	; 0x800
    a1ec:	mov	r5, #0
    a1f0:	str	r0, [sp, #12]
    a1f4:	mov	r0, #0
    a1f8:	ldr	r3, [r4]
    a1fc:	add	r4, sp, #56	; 0x38
    a200:	mov	sl, r0
    a204:	mov	r9, r1
    a208:	mov	r1, r7
    a20c:	mov	r2, #256	; 0x100
    a210:	mov	r0, r4
    a214:	bl	18d0 <fread@plt>
    a218:	mov	r6, r0
    a21c:	mov	r7, #0
    a220:	mov	r0, r4
    a224:	bl	1c30 <Mat_int32Swap>
    a228:	mov	r1, r8
    a22c:	add	r4, r4, #4
    a230:	str	r0, [r1, r7]!
    a234:	add	r7, r7, #8
    a238:	asr	r0, r0, #31
    a23c:	cmp	r7, #2048	; 0x800
    a240:	str	r0, [r1, #4]
    a244:	bne	a220 <ReadUInt64Data+0x9e4>
    a248:	ldr	r2, [sp, #12]
    a24c:	ldr	r7, [sp, #16]
    a250:	ldr	r4, [sp, #20]
    a254:	add	r0, sl, #256	; 0x100
    a258:	add	r5, r6, r5
    a25c:	add	r8, r8, #2048	; 0x800
    a260:	add	r1, r9, #2048	; 0x800
    a264:	cmp	r0, r2
    a268:	blt	a1f8 <ReadUInt64Data+0x9bc>
    a26c:	mov	r8, r5
    a270:	ldr	r5, [sp, #4]
    a274:	cmp	r0, r5
    a278:	bge	ab4c <ReadUInt64Data+0x1310>
    a27c:	ldr	r3, [r4]
    a280:	sub	r6, r5, r0
    a284:	add	r4, sp, #56	; 0x38
    a288:	mov	r1, r7
    a28c:	mov	r0, r4
    a290:	mov	r2, r6
    a294:	bl	18d0 <fread@plt>
    a298:	add	r8, r0, r8
    a29c:	cmp	r6, #1
    a2a0:	blt	ab4c <ReadUInt64Data+0x1310>
    a2a4:	sub	r0, r5, sl
    a2a8:	sub	r6, r0, #256	; 0x100
    a2ac:	mov	r0, r4
    a2b0:	bl	1c30 <Mat_int32Swap>
    a2b4:	asr	r1, r0, #31
    a2b8:	add	r4, r4, #4
    a2bc:	subs	r6, r6, #1
    a2c0:	strd	r0, [r9]
    a2c4:	add	r9, r9, #8
    a2c8:	bne	a2ac <ReadUInt64Data+0xa70>
    a2cc:	b	ab4c <ReadUInt64Data+0x1310>
    a2d0:	sub	r1, r5, #256	; 0x100
    a2d4:	str	r5, [sp, #4]
    a2d8:	add	r0, r8, #2048	; 0x800
    a2dc:	mov	sl, #0
    a2e0:	mov	r5, #0
    a2e4:	str	r1, [sp, #8]
    a2e8:	mov	r1, #0
    a2ec:	ldr	r3, [r4]
    a2f0:	add	r4, sp, #56	; 0x38
    a2f4:	str	r1, [sp, #12]
    a2f8:	mov	r9, r0
    a2fc:	mov	r1, r7
    a300:	mov	r2, #256	; 0x100
    a304:	mov	r0, r4
    a308:	bl	18d0 <fread@plt>
    a30c:	mov	r6, r0
    a310:	mov	r7, #0
    a314:	mov	r0, r4
    a318:	bl	1c44 <Mat_uint32Swap>
    a31c:	mov	r1, r8
    a320:	add	r4, r4, #4
    a324:	str	r0, [r1, r7]!
    a328:	add	r7, r7, #8
    a32c:	cmp	r7, #2048	; 0x800
    a330:	str	sl, [r1, #4]
    a334:	bne	a314 <ReadUInt64Data+0xad8>
    a338:	ldr	r1, [sp, #12]
    a33c:	ldr	r2, [sp, #8]
    a340:	ldr	r7, [sp, #16]
    a344:	ldr	r4, [sp, #20]
    a348:	add	r5, r6, r5
    a34c:	add	r8, r8, #2048	; 0x800
    a350:	add	r0, r9, #2048	; 0x800
    a354:	add	r1, r1, #256	; 0x100
    a358:	cmp	r1, r2
    a35c:	blt	a2ec <ReadUInt64Data+0xab0>
    a360:	mov	r8, r5
    a364:	ldr	r5, [sp, #4]
    a368:	cmp	r1, r5
    a36c:	bge	ab4c <ReadUInt64Data+0x1310>
    a370:	ldr	r3, [r4]
    a374:	sub	r6, r5, r1
    a378:	add	r4, sp, #56	; 0x38
    a37c:	mov	r1, r7
    a380:	mov	r0, r4
    a384:	mov	r2, r6
    a388:	bl	18d0 <fread@plt>
    a38c:	add	r8, r0, r8
    a390:	cmp	r6, #1
    a394:	blt	ab4c <ReadUInt64Data+0x1310>
    a398:	ldr	r0, [sp, #12]
    a39c:	mov	r7, #0
    a3a0:	sub	r0, r5, r0
    a3a4:	sub	r6, r0, #256	; 0x100
    a3a8:	mov	r0, r4
    a3ac:	bl	1c44 <Mat_uint32Swap>
    a3b0:	stm	r9, {r0, r7}
    a3b4:	add	r9, r9, #8
    a3b8:	add	r4, r4, #4
    a3bc:	subs	r6, r6, #1
    a3c0:	bne	a3a8 <ReadUInt64Data+0xb6c>
    a3c4:	b	ab48 <ReadUInt64Data+0x130c>
    a3c8:	sub	r0, r5, #256	; 0x100
    a3cc:	str	r5, [sp, #4]
    a3d0:	add	r1, r8, #2048	; 0x800
    a3d4:	mov	r5, #0
    a3d8:	str	r0, [sp, #12]
    a3dc:	mov	r0, #0
    a3e0:	ldr	r3, [r4]
    a3e4:	add	r6, sp, #56	; 0x38
    a3e8:	mov	sl, r0
    a3ec:	mov	r9, r1
    a3f0:	mov	r1, r7
    a3f4:	mov	r2, #256	; 0x100
    a3f8:	mov	r0, r6
    a3fc:	bl	18d0 <fread@plt>
    a400:	mov	r4, r0
    a404:	mov	r7, #0
    a408:	mov	r0, r6
    a40c:	bl	1c84 <Mat_floatSwap>
    a410:	vmov	r0, s0
    a414:	bl	4b710 <__aeabi_f2ulz>
    a418:	mov	r2, r8
    a41c:	add	r6, r6, #4
    a420:	str	r0, [r2, r7]!
    a424:	add	r7, r7, #8
    a428:	cmp	r7, #2048	; 0x800
    a42c:	str	r1, [r2, #4]
    a430:	bne	a408 <ReadUInt64Data+0xbcc>
    a434:	ldr	r2, [sp, #12]
    a438:	add	r5, r4, r5
    a43c:	ldr	r7, [sp, #16]
    a440:	ldr	r4, [sp, #20]
    a444:	add	r0, sl, #256	; 0x100
    a448:	add	r8, r8, #2048	; 0x800
    a44c:	add	r1, r9, #2048	; 0x800
    a450:	cmp	r0, r2
    a454:	blt	a3e0 <ReadUInt64Data+0xba4>
    a458:	mov	r8, r5
    a45c:	ldr	r5, [sp, #4]
    a460:	cmp	r0, r5
    a464:	bge	ab4c <ReadUInt64Data+0x1310>
    a468:	ldr	r3, [r4]
    a46c:	sub	r6, r5, r0
    a470:	add	r4, sp, #56	; 0x38
    a474:	mov	r1, r7
    a478:	mov	r0, r4
    a47c:	mov	r2, r6
    a480:	bl	18d0 <fread@plt>
    a484:	add	r8, r0, r8
    a488:	cmp	r6, #1
    a48c:	blt	ab4c <ReadUInt64Data+0x1310>
    a490:	sub	r0, r5, sl
    a494:	sub	r6, r0, #256	; 0x100
    a498:	mov	r0, r4
    a49c:	bl	1c84 <Mat_floatSwap>
    a4a0:	vmov	r0, s0
    a4a4:	bl	4b710 <__aeabi_f2ulz>
    a4a8:	strd	r0, [r9]
    a4ac:	add	r9, r9, #8
    a4b0:	add	r4, r4, #4
    a4b4:	subs	r6, r6, #1
    a4b8:	bne	a498 <ReadUInt64Data+0xc5c>
    a4bc:	b	ab4c <ReadUInt64Data+0x1310>
    a4c0:	sub	r0, r5, #256	; 0x100
    a4c4:	str	r5, [sp, #4]
    a4c8:	add	r1, r8, #2048	; 0x800
    a4cc:	add	r4, sp, #56	; 0x38
    a4d0:	mov	r5, #0
    a4d4:	str	r0, [sp, #12]
    a4d8:	mov	r0, #0
    a4dc:	mov	sl, r0
    a4e0:	ldr	r0, [sp, #20]
    a4e4:	mov	r9, r1
    a4e8:	mov	r1, r7
    a4ec:	mov	r2, #256	; 0x100
    a4f0:	ldr	r3, [r0]
    a4f4:	mov	r0, r4
    a4f8:	bl	18d0 <fread@plt>
    a4fc:	mov	r6, r0
    a500:	mov	r7, #0
    a504:	add	r0, r4, r7
    a508:	bl	1cc8 <Mat_doubleSwap>
    a50c:	vmov	r0, r1, d0
    a510:	bl	4b750 <__aeabi_d2ulz>
    a514:	mov	r2, r8
    a518:	str	r0, [r2, r7]!
    a51c:	add	r7, r7, #8
    a520:	cmp	r7, #2048	; 0x800
    a524:	str	r1, [r2, #4]
    a528:	bne	a504 <ReadUInt64Data+0xcc8>
    a52c:	ldr	r2, [sp, #12]
    a530:	ldr	r7, [sp, #16]
    a534:	add	r0, sl, #256	; 0x100
    a538:	add	r5, r6, r5
    a53c:	add	r8, r8, #2048	; 0x800
    a540:	add	r1, r9, #2048	; 0x800
    a544:	cmp	r0, r2
    a548:	blt	a4dc <ReadUInt64Data+0xca0>
    a54c:	mov	r8, r5
    a550:	ldr	r5, [sp, #4]
    a554:	cmp	r0, r5
    a558:	bge	ab4c <ReadUInt64Data+0x1310>
    a55c:	sub	r6, r5, r0
    a560:	ldr	r0, [sp, #20]
    a564:	add	r4, sp, #56	; 0x38
    a568:	mov	r1, r7
    a56c:	mov	r2, r6
    a570:	ldr	r3, [r0]
    a574:	mov	r0, r4
    a578:	bl	18d0 <fread@plt>
    a57c:	add	r8, r0, r8
    a580:	cmp	r6, #1
    a584:	blt	ab4c <ReadUInt64Data+0x1310>
    a588:	sub	r0, r5, sl
    a58c:	sub	r6, r0, #256	; 0x100
    a590:	mov	r0, r4
    a594:	bl	1cc8 <Mat_doubleSwap>
    a598:	vmov	r0, r1, d0
    a59c:	bl	4b750 <__aeabi_d2ulz>
    a5a0:	strd	r0, [r9]
    a5a4:	add	r9, r9, #8
    a5a8:	add	r4, r4, #8
    a5ac:	subs	r6, r6, #1
    a5b0:	bne	a590 <ReadUInt64Data+0xd54>
    a5b4:	b	ab4c <ReadUInt64Data+0x1310>
    a5b8:	sub	r0, r5, #256	; 0x100
    a5bc:	str	r5, [sp, #4]
    a5c0:	add	r1, r8, #2048	; 0x800
    a5c4:	add	r4, sp, #56	; 0x38
    a5c8:	mov	r7, r8
    a5cc:	mov	r5, #0
    a5d0:	str	r9, [sp]
    a5d4:	str	r0, [sp, #8]
    a5d8:	mov	r0, #0
    a5dc:	str	r0, [sp, #12]
    a5e0:	ldr	r0, [sp, #20]
    a5e4:	mov	r9, r1
    a5e8:	ldr	r1, [sp, #16]
    a5ec:	mov	r2, #256	; 0x100
    a5f0:	ldr	r3, [r0]
    a5f4:	mov	r0, r4
    a5f8:	bl	18d0 <fread@plt>
    a5fc:	mov	r6, r0
    a600:	mov	sl, #0
    a604:	add	r0, r4, sl
    a608:	bl	1bbc <Mat_int64Swap>
    a60c:	mov	r2, r7
    a610:	str	r0, [r2, sl]!
    a614:	add	sl, sl, #8
    a618:	cmp	sl, #2048	; 0x800
    a61c:	str	r1, [r2, #4]
    a620:	bne	a604 <ReadUInt64Data+0xdc8>
    a624:	ldr	r0, [sp, #12]
    a628:	ldr	r2, [sp, #8]
    a62c:	add	r5, r6, r5
    a630:	add	r7, r7, #2048	; 0x800
    a634:	add	r1, r9, #2048	; 0x800
    a638:	add	r0, r0, #256	; 0x100
    a63c:	cmp	r0, r2
    a640:	blt	a5dc <ReadUInt64Data+0xda0>
    a644:	mov	sl, r5
    a648:	ldr	r5, [sp, #4]
    a64c:	cmp	r0, r5
    a650:	bge	acfc <ReadUInt64Data+0x14c0>
    a654:	sub	r6, r5, r0
    a658:	ldr	r0, [sp, #20]
    a65c:	ldr	r7, [sp, #16]
    a660:	add	r4, sp, #56	; 0x38
    a664:	mov	r2, r6
    a668:	ldr	r3, [r0]
    a66c:	mov	r0, r4
    a670:	mov	r1, r7
    a674:	bl	18d0 <fread@plt>
    a678:	add	sl, r0, sl
    a67c:	cmp	r6, #1
    a680:	blt	ad00 <ReadUInt64Data+0x14c4>
    a684:	ldr	r0, [sp, #12]
    a688:	sub	r0, r5, r0
    a68c:	sub	r6, r0, #256	; 0x100
    a690:	mov	r0, r4
    a694:	bl	1bbc <Mat_int64Swap>
    a698:	strd	r0, [r9]
    a69c:	add	r9, r9, #8
    a6a0:	add	r4, r4, #8
    a6a4:	subs	r6, r6, #1
    a6a8:	bne	a690 <ReadUInt64Data+0xe54>
    a6ac:	b	ad00 <ReadUInt64Data+0x14c4>
    a6b0:	sub	r0, r5, #256	; 0x100
    a6b4:	str	r5, [sp, #4]
    a6b8:	add	r1, r8, #2048	; 0x800
    a6bc:	add	r4, sp, #56	; 0x38
    a6c0:	add	sl, sp, #40	; 0x28
    a6c4:	mov	r5, #0
    a6c8:	str	r0, [sp, #12]
    a6cc:	mov	r0, #0
    a6d0:	mov	r9, r0
    a6d4:	ldr	r0, [sp, #20]
    a6d8:	mov	r6, r1
    a6dc:	mov	r1, r7
    a6e0:	mov	r2, #256	; 0x100
    a6e4:	ldr	r3, [r0]
    a6e8:	mov	r0, r4
    a6ec:	bl	18d0 <fread@plt>
    a6f0:	mov	r1, r8
    a6f4:	mov	r2, #0
    a6f8:	ldr	r3, [r4, r2]
    a6fc:	add	r2, r2, #4
    a700:	cmp	r2, #512	; 0x200
    a704:	str	r3, [sp, #40]	; 0x28
    a708:	vld1.32	{d16[0]}, [sl :32]
    a70c:	vmovl.s16	q8, d16
    a710:	vmovl.s32	q8, d16
    a714:	vst1.64	{d16-d17}, [r1]!
    a718:	bne	a6f8 <ReadUInt64Data+0xebc>
    a71c:	ldr	r2, [sp, #12]
    a720:	add	r5, r0, r5
    a724:	add	r0, r9, #256	; 0x100
    a728:	add	r8, r8, #2048	; 0x800
    a72c:	add	r1, r6, #2048	; 0x800
    a730:	cmp	r0, r2
    a734:	blt	a6d0 <ReadUInt64Data+0xe94>
    a738:	mov	r8, r5
    a73c:	ldr	r5, [sp, #4]
    a740:	cmp	r0, r5
    a744:	bge	ab4c <ReadUInt64Data+0x1310>
    a748:	mov	r1, r7
    a74c:	sub	r7, r5, r0
    a750:	ldr	r0, [sp, #20]
    a754:	add	r4, sp, #56	; 0x38
    a758:	mov	r2, r7
    a75c:	ldr	r3, [r0]
    a760:	mov	r0, r4
    a764:	bl	18d0 <fread@plt>
    a768:	add	r8, r0, r8
    a76c:	cmp	r7, #1
    a770:	blt	ab48 <ReadUInt64Data+0x130c>
    a774:	sub	r0, r5, r9
    a778:	sub	r0, r0, #256	; 0x100
    a77c:	ldrsh	r2, [r4], #2
    a780:	subs	r0, r0, #1
    a784:	asr	r3, r2, #31
    a788:	strd	r2, [r6]
    a78c:	add	r6, r6, #8
    a790:	bne	a77c <ReadUInt64Data+0xf40>
    a794:	b	ab48 <ReadUInt64Data+0x130c>
    a798:	sub	r0, r5, #256	; 0x100
    a79c:	str	r5, [sp, #4]
    a7a0:	add	r1, r8, #2048	; 0x800
    a7a4:	add	r4, sp, #56	; 0x38
    a7a8:	add	sl, sp, #44	; 0x2c
    a7ac:	mov	r5, #0
    a7b0:	str	r0, [sp, #12]
    a7b4:	mov	r0, #0
    a7b8:	mov	r9, r0
    a7bc:	ldr	r0, [sp, #20]
    a7c0:	mov	r6, r1
    a7c4:	mov	r1, r7
    a7c8:	mov	r2, #256	; 0x100
    a7cc:	ldr	r3, [r0]
    a7d0:	mov	r0, r4
    a7d4:	bl	18d0 <fread@plt>
    a7d8:	mov	r1, r8
    a7dc:	mov	r2, #0
    a7e0:	ldr	r3, [r4, r2]
    a7e4:	add	r2, r2, #4
    a7e8:	cmp	r2, #512	; 0x200
    a7ec:	str	r3, [sp, #44]	; 0x2c
    a7f0:	vld1.32	{d16[0]}, [sl :32]
    a7f4:	vmovl.u16	q8, d16
    a7f8:	vmovl.u32	q8, d16
    a7fc:	vst1.64	{d16-d17}, [r1]!
    a800:	bne	a7e0 <ReadUInt64Data+0xfa4>
    a804:	ldr	r2, [sp, #12]
    a808:	add	r5, r0, r5
    a80c:	add	r0, r9, #256	; 0x100
    a810:	add	r8, r8, #2048	; 0x800
    a814:	add	r1, r6, #2048	; 0x800
    a818:	cmp	r0, r2
    a81c:	blt	a7b8 <ReadUInt64Data+0xf7c>
    a820:	mov	r8, r5
    a824:	ldr	r5, [sp, #4]
    a828:	cmp	r0, r5
    a82c:	bge	ab4c <ReadUInt64Data+0x1310>
    a830:	mov	r1, r7
    a834:	sub	r7, r5, r0
    a838:	ldr	r0, [sp, #20]
    a83c:	add	r4, sp, #56	; 0x38
    a840:	mov	r2, r7
    a844:	ldr	r3, [r0]
    a848:	mov	r0, r4
    a84c:	bl	18d0 <fread@plt>
    a850:	add	r8, r0, r8
    a854:	cmp	r7, #1
    a858:	blt	ab48 <ReadUInt64Data+0x130c>
    a85c:	sub	r0, r5, r9
    a860:	mov	r1, #0
    a864:	sub	r0, r0, #256	; 0x100
    a868:	ldrh	r2, [r4], #2
    a86c:	subs	r0, r0, #1
    a870:	str	r2, [r6]
    a874:	str	r1, [r6, #4]
    a878:	add	r6, r6, #8
    a87c:	bne	a868 <ReadUInt64Data+0x102c>
    a880:	b	ab48 <ReadUInt64Data+0x130c>
    a884:	sub	r0, r5, #256	; 0x100
    a888:	str	r5, [sp, #4]
    a88c:	add	r1, r8, #2048	; 0x800
    a890:	add	r4, sp, #56	; 0x38
    a894:	add	sl, sp, #24
    a898:	mov	r5, #0
    a89c:	str	r0, [sp, #12]
    a8a0:	mov	r0, #0
    a8a4:	mov	r9, r0
    a8a8:	ldr	r0, [sp, #20]
    a8ac:	mov	r6, r1
    a8b0:	mov	r1, r7
    a8b4:	mov	r2, #256	; 0x100
    a8b8:	ldr	r3, [r0]
    a8bc:	mov	r0, r4
    a8c0:	bl	18d0 <fread@plt>
    a8c4:	mov	r1, r8
    a8c8:	mov	r2, #0
    a8cc:	ldr	r3, [r4, r2]
    a8d0:	str	r3, [sp, #24]
    a8d4:	add	r3, r4, r2
    a8d8:	add	r2, r2, #8
    a8dc:	ldr	r3, [r3, #4]
    a8e0:	cmp	r2, #1024	; 0x400
    a8e4:	str	r3, [sp, #28]
    a8e8:	vld1.32	{d16}, [sl :64]
    a8ec:	vmovl.s32	q8, d16
    a8f0:	vst1.64	{d16-d17}, [r1]!
    a8f4:	bne	a8cc <ReadUInt64Data+0x1090>
    a8f8:	ldr	r2, [sp, #12]
    a8fc:	add	r5, r0, r5
    a900:	add	r0, r9, #256	; 0x100
    a904:	add	r8, r8, #2048	; 0x800
    a908:	add	r1, r6, #2048	; 0x800
    a90c:	cmp	r0, r2
    a910:	blt	a8a4 <ReadUInt64Data+0x1068>
    a914:	mov	r8, r5
    a918:	ldr	r5, [sp, #4]
    a91c:	cmp	r0, r5
    a920:	bge	ab4c <ReadUInt64Data+0x1310>
    a924:	mov	r1, r7
    a928:	sub	r7, r5, r0
    a92c:	ldr	r0, [sp, #20]
    a930:	add	r4, sp, #56	; 0x38
    a934:	mov	r2, r7
    a938:	ldr	r3, [r0]
    a93c:	mov	r0, r4
    a940:	bl	18d0 <fread@plt>
    a944:	add	r8, r0, r8
    a948:	cmp	r7, #1
    a94c:	blt	ab48 <ReadUInt64Data+0x130c>
    a950:	sub	r0, r5, r9
    a954:	sub	r0, r0, #256	; 0x100
    a958:	ldr	r2, [r4], #4
    a95c:	subs	r0, r0, #1
    a960:	asr	r3, r2, #31
    a964:	strd	r2, [r6]
    a968:	add	r6, r6, #8
    a96c:	bne	a958 <ReadUInt64Data+0x111c>
    a970:	b	ab48 <ReadUInt64Data+0x130c>
    a974:	sub	r0, r5, #256	; 0x100
    a978:	str	r5, [sp, #4]
    a97c:	add	r1, r8, #2048	; 0x800
    a980:	add	r4, sp, #56	; 0x38
    a984:	add	sl, sp, #32
    a988:	mov	r5, #0
    a98c:	str	r0, [sp, #12]
    a990:	mov	r0, #0
    a994:	mov	r9, r0
    a998:	ldr	r0, [sp, #20]
    a99c:	mov	r6, r1
    a9a0:	mov	r1, r7
    a9a4:	mov	r2, #256	; 0x100
    a9a8:	ldr	r3, [r0]
    a9ac:	mov	r0, r4
    a9b0:	bl	18d0 <fread@plt>
    a9b4:	mov	r1, r8
    a9b8:	mov	r2, #0
    a9bc:	ldr	r3, [r4, r2]
    a9c0:	str	r3, [sp, #32]
    a9c4:	add	r3, r4, r2
    a9c8:	add	r2, r2, #8
    a9cc:	ldr	r3, [r3, #4]
    a9d0:	cmp	r2, #1024	; 0x400
    a9d4:	str	r3, [sp, #36]	; 0x24
    a9d8:	vld1.32	{d16}, [sl :64]
    a9dc:	vmovl.u32	q8, d16
    a9e0:	vst1.64	{d16-d17}, [r1]!
    a9e4:	bne	a9bc <ReadUInt64Data+0x1180>
    a9e8:	ldr	r2, [sp, #12]
    a9ec:	add	r5, r0, r5
    a9f0:	add	r0, r9, #256	; 0x100
    a9f4:	add	r8, r8, #2048	; 0x800
    a9f8:	add	r1, r6, #2048	; 0x800
    a9fc:	cmp	r0, r2
    aa00:	blt	a994 <ReadUInt64Data+0x1158>
    aa04:	mov	r8, r5
    aa08:	ldr	r5, [sp, #4]
    aa0c:	cmp	r0, r5
    aa10:	bge	ab4c <ReadUInt64Data+0x1310>
    aa14:	mov	r1, r7
    aa18:	sub	r7, r5, r0
    aa1c:	ldr	r0, [sp, #20]
    aa20:	add	r4, sp, #56	; 0x38
    aa24:	mov	r2, r7
    aa28:	ldr	r3, [r0]
    aa2c:	mov	r0, r4
    aa30:	bl	18d0 <fread@plt>
    aa34:	add	r8, r0, r8
    aa38:	cmp	r7, #1
    aa3c:	blt	ab48 <ReadUInt64Data+0x130c>
    aa40:	sub	r0, r5, r9
    aa44:	mov	r1, #0
    aa48:	sub	r0, r0, #256	; 0x100
    aa4c:	ldr	r2, [r4], #4
    aa50:	subs	r0, r0, #1
    aa54:	str	r2, [r6]
    aa58:	str	r1, [r6, #4]
    aa5c:	add	r6, r6, #8
    aa60:	bne	aa4c <ReadUInt64Data+0x1210>
    aa64:	b	ab48 <ReadUInt64Data+0x130c>
    aa68:	sub	r0, r5, #256	; 0x100
    aa6c:	str	r5, [sp, #4]
    aa70:	add	r1, r8, #2048	; 0x800
    aa74:	mov	r5, #0
    aa78:	str	r0, [sp, #12]
    aa7c:	mov	r0, #0
    aa80:	mov	sl, r0
    aa84:	ldr	r0, [sp, #20]
    aa88:	mov	r4, r1
    aa8c:	mov	r1, r7
    aa90:	add	r7, sp, #56	; 0x38
    aa94:	mov	r2, #256	; 0x100
    aa98:	ldr	r3, [r0]
    aa9c:	mov	r0, r7
    aaa0:	bl	18d0 <fread@plt>
    aaa4:	mov	r6, r0
    aaa8:	mov	r9, #0
    aaac:	ldr	r0, [r7], #4
    aab0:	bl	4b710 <__aeabi_f2ulz>
    aab4:	mov	r2, r8
    aab8:	str	r0, [r2, r9]!
    aabc:	add	r9, r9, #8
    aac0:	cmp	r9, #2048	; 0x800
    aac4:	str	r1, [r2, #4]
    aac8:	bne	aaac <ReadUInt64Data+0x1270>
    aacc:	ldr	r2, [sp, #12]
    aad0:	ldr	r7, [sp, #16]
    aad4:	add	r0, sl, #256	; 0x100
    aad8:	add	r5, r6, r5
    aadc:	add	r8, r8, #2048	; 0x800
    aae0:	add	r1, r4, #2048	; 0x800
    aae4:	cmp	r0, r2
    aae8:	blt	aa80 <ReadUInt64Data+0x1244>
    aaec:	mov	r8, r5
    aaf0:	ldr	r5, [sp, #4]
    aaf4:	cmp	r0, r5
    aaf8:	bge	ab4c <ReadUInt64Data+0x1310>
    aafc:	sub	r6, r5, r0
    ab00:	ldr	r0, [sp, #20]
    ab04:	mov	r1, r7
    ab08:	add	r7, sp, #56	; 0x38
    ab0c:	mov	r2, r6
    ab10:	ldr	r3, [r0]
    ab14:	mov	r0, r7
    ab18:	bl	18d0 <fread@plt>
    ab1c:	add	r8, r0, r8
    ab20:	cmp	r6, #1
    ab24:	blt	ab48 <ReadUInt64Data+0x130c>
    ab28:	sub	r0, r5, sl
    ab2c:	sub	r6, r0, #256	; 0x100
    ab30:	ldr	r0, [r7], #4
    ab34:	bl	4b710 <__aeabi_f2ulz>
    ab38:	strd	r0, [r4]
    ab3c:	add	r4, r4, #8
    ab40:	subs	r6, r6, #1
    ab44:	bne	ab30 <ReadUInt64Data+0x12f4>
    ab48:	ldr	r7, [sp, #16]
    ab4c:	mov	r5, r8
    ab50:	b	ada4 <ReadUInt64Data+0x1568>
    ab54:	sub	r0, r5, #256	; 0x100
    ab58:	str	r5, [sp, #4]
    ab5c:	add	r1, r8, #2048	; 0x800
    ab60:	add	r4, sp, #56	; 0x38
    ab64:	mov	r5, #0
    ab68:	str	r0, [sp, #12]
    ab6c:	mov	r0, #0
    ab70:	mov	sl, r0
    ab74:	ldr	r0, [sp, #20]
    ab78:	mov	r9, r1
    ab7c:	mov	r1, r7
    ab80:	mov	r2, #256	; 0x100
    ab84:	ldr	r3, [r0]
    ab88:	mov	r0, r4
    ab8c:	bl	18d0 <fread@plt>
    ab90:	mov	r6, r0
    ab94:	mov	r7, #0
    ab98:	add	r0, r4, r7
    ab9c:	vldr	d16, [r0]
    aba0:	vmov	r0, r1, d16
    aba4:	bl	4b750 <__aeabi_d2ulz>
    aba8:	mov	r2, r8
    abac:	str	r0, [r2, r7]!
    abb0:	add	r7, r7, #8
    abb4:	cmp	r7, #2048	; 0x800
    abb8:	str	r1, [r2, #4]
    abbc:	bne	ab98 <ReadUInt64Data+0x135c>
    abc0:	ldr	r2, [sp, #12]
    abc4:	ldr	r7, [sp, #16]
    abc8:	add	r0, sl, #256	; 0x100
    abcc:	add	r5, r6, r5
    abd0:	add	r8, r8, #2048	; 0x800
    abd4:	add	r1, r9, #2048	; 0x800
    abd8:	cmp	r0, r2
    abdc:	blt	ab70 <ReadUInt64Data+0x1334>
    abe0:	mov	r8, r5
    abe4:	ldr	r5, [sp, #4]
    abe8:	cmp	r0, r5
    abec:	bge	ab4c <ReadUInt64Data+0x1310>
    abf0:	sub	r6, r5, r0
    abf4:	ldr	r0, [sp, #20]
    abf8:	add	r4, sp, #56	; 0x38
    abfc:	mov	r1, r7
    ac00:	mov	r2, r6
    ac04:	ldr	r3, [r0]
    ac08:	mov	r0, r4
    ac0c:	bl	18d0 <fread@plt>
    ac10:	add	r8, r0, r8
    ac14:	cmp	r6, #1
    ac18:	blt	ab4c <ReadUInt64Data+0x1310>
    ac1c:	sub	r0, r5, sl
    ac20:	sub	r6, r0, #256	; 0x100
    ac24:	vldr	d16, [r4]
    ac28:	vmov	r0, r1, d16
    ac2c:	bl	4b750 <__aeabi_d2ulz>
    ac30:	strd	r0, [r9]
    ac34:	add	r9, r9, #8
    ac38:	add	r4, r4, #8
    ac3c:	subs	r6, r6, #1
    ac40:	bne	ac24 <ReadUInt64Data+0x13e8>
    ac44:	b	ab4c <ReadUInt64Data+0x1310>
    ac48:	sub	r0, r5, #256	; 0x100
    ac4c:	lsl	r4, r5, #3
    ac50:	str	r5, [sp, #4]
    ac54:	mov	r6, #0
    ac58:	mov	r5, #0
    ac5c:	str	r9, [sp]
    ac60:	str	r0, [sp, #12]
    ac64:	ldr	r0, [sp, #20]
    ac68:	add	sl, sp, #56	; 0x38
    ac6c:	mov	r1, r7
    ac70:	mov	r2, #256	; 0x100
    ac74:	ldr	r3, [r0]
    ac78:	mov	r0, sl
    ac7c:	bl	18d0 <fread@plt>
    ac80:	mov	r9, r0
    ac84:	add	r0, r8, r6, lsl #3
    ac88:	mov	r1, sl
    ac8c:	mov	r2, #2048	; 0x800
    ac90:	bl	1834 <memcpy@plt>
    ac94:	ldr	r0, [sp, #12]
    ac98:	add	r6, r6, #256	; 0x100
    ac9c:	add	r5, r9, r5
    aca0:	sub	r4, r4, #2048	; 0x800
    aca4:	cmp	r6, r0
    aca8:	blt	ac64 <ReadUInt64Data+0x1428>
    acac:	mov	sl, r5
    acb0:	ldr	r5, [sp, #4]
    acb4:	cmp	r6, r5
    acb8:	bge	acfc <ReadUInt64Data+0x14c0>
    acbc:	ldr	r0, [sp, #20]
    acc0:	ldr	r7, [sp, #16]
    acc4:	sub	r9, r5, r6
    acc8:	mov	r2, r9
    accc:	ldr	r3, [r0]
    acd0:	add	r0, sp, #56	; 0x38
    acd4:	mov	r1, r7
    acd8:	bl	18d0 <fread@plt>
    acdc:	add	sl, r0, sl
    ace0:	cmp	r9, #1
    ace4:	blt	ad00 <ReadUInt64Data+0x14c4>
    ace8:	add	r0, r8, r6, lsl #3
    acec:	add	r1, sp, #56	; 0x38
    acf0:	mov	r2, r4
    acf4:	bl	1834 <memcpy@plt>
    acf8:	b	ad00 <ReadUInt64Data+0x14c4>
    acfc:	ldr	r7, [sp, #16]
    ad00:	ldr	r4, [sp, #20]
    ad04:	ldr	r9, [sp]
    ad08:	cmp	r9, #13
    ad0c:	bne	ada0 <ReadUInt64Data+0x1564>
    ad10:	ldr	r0, [r4, #20]
    ad14:	cmp	r0, #0
    ad18:	beq	ad68 <ReadUInt64Data+0x152c>
    ad1c:	cmp	r5, #256	; 0x100
    ad20:	bgt	adac <ReadUInt64Data+0x1570>
    ad24:	ldr	r3, [r4]
    ad28:	add	r4, sp, #56	; 0x38
    ad2c:	mov	r1, r7
    ad30:	mov	r2, r5
    ad34:	mov	r0, r4
    ad38:	bl	18d0 <fread@plt>
    ad3c:	add	sl, r0, sl
    ad40:	cmp	r5, #1
    ad44:	blt	ada0 <ReadUInt64Data+0x1564>
    ad48:	mov	r0, r4
    ad4c:	bl	1c0c <Mat_uint64Swap>
    ad50:	strd	r0, [r8]
    ad54:	add	r4, r4, #8
    ad58:	add	r8, r8, #8
    ad5c:	subs	r5, r5, #1
    ad60:	bne	ad48 <ReadUInt64Data+0x150c>
    ad64:	b	ada0 <ReadUInt64Data+0x1564>
    ad68:	cmp	r5, #256	; 0x100
    ad6c:	bgt	ae94 <ReadUInt64Data+0x1658>
    ad70:	ldr	r3, [r4]
    ad74:	add	r0, sp, #56	; 0x38
    ad78:	mov	r1, r7
    ad7c:	mov	r2, r5
    ad80:	bl	18d0 <fread@plt>
    ad84:	add	sl, r0, sl
    ad88:	cmp	r5, #1
    ad8c:	blt	ada0 <ReadUInt64Data+0x1564>
    ad90:	lsl	r2, r5, #3
    ad94:	add	r1, sp, #56	; 0x38
    ad98:	mov	r0, r8
    ad9c:	bl	1834 <memcpy@plt>
    ada0:	mov	r5, sl
    ada4:	mul	r0, r5, r7
    ada8:	b	9864 <ReadUInt64Data+0x28>
    adac:	sub	r0, r5, #256	; 0x100
    adb0:	str	r5, [sp, #4]
    adb4:	add	r1, r8, #2048	; 0x800
    adb8:	add	r4, sp, #56	; 0x38
    adbc:	mov	r5, sl
    adc0:	str	r0, [sp, #12]
    adc4:	mov	r0, #0
    adc8:	mov	sl, r0
    adcc:	ldr	r0, [sp, #20]
    add0:	mov	r9, r1
    add4:	mov	r1, r7
    add8:	mov	r2, #256	; 0x100
    addc:	ldr	r3, [r0]
    ade0:	mov	r0, r4
    ade4:	bl	18d0 <fread@plt>
    ade8:	mov	r6, r0
    adec:	mov	r7, #0
    adf0:	add	r0, r4, r7
    adf4:	bl	1c0c <Mat_uint64Swap>
    adf8:	mov	r2, r8
    adfc:	str	r0, [r2, r7]!
    ae00:	add	r7, r7, #8
    ae04:	cmp	r7, #2048	; 0x800
    ae08:	str	r1, [r2, #4]
    ae0c:	bne	adf0 <ReadUInt64Data+0x15b4>
    ae10:	ldr	r2, [sp, #12]
    ae14:	ldr	r7, [sp, #16]
    ae18:	add	r0, sl, #256	; 0x100
    ae1c:	add	r5, r6, r5
    ae20:	add	r8, r8, #2048	; 0x800
    ae24:	add	r1, r9, #2048	; 0x800
    ae28:	cmp	r0, r2
    ae2c:	blt	adc8 <ReadUInt64Data+0x158c>
    ae30:	mov	r8, r5
    ae34:	ldr	r5, [sp, #4]
    ae38:	cmp	r0, r5
    ae3c:	bge	ab4c <ReadUInt64Data+0x1310>
    ae40:	sub	r6, r5, r0
    ae44:	ldr	r0, [sp, #20]
    ae48:	add	r4, sp, #56	; 0x38
    ae4c:	mov	r1, r7
    ae50:	mov	r2, r6
    ae54:	ldr	r3, [r0]
    ae58:	mov	r0, r4
    ae5c:	bl	18d0 <fread@plt>
    ae60:	add	r8, r0, r8
    ae64:	cmp	r6, #1
    ae68:	blt	ab4c <ReadUInt64Data+0x1310>
    ae6c:	sub	r0, r5, sl
    ae70:	sub	r6, r0, #256	; 0x100
    ae74:	mov	r0, r4
    ae78:	bl	1c0c <Mat_uint64Swap>
    ae7c:	strd	r0, [r9]
    ae80:	add	r9, r9, #8
    ae84:	add	r4, r4, #8
    ae88:	subs	r6, r6, #1
    ae8c:	bne	ae74 <ReadUInt64Data+0x1638>
    ae90:	b	ab4c <ReadUInt64Data+0x1310>
    ae94:	sub	r0, r5, #256	; 0x100
    ae98:	lsl	r4, r5, #3
    ae9c:	str	r5, [sp, #4]
    aea0:	mov	r6, #0
    aea4:	add	r9, sp, #56	; 0x38
    aea8:	mov	r5, sl
    aeac:	str	r0, [sp, #12]
    aeb0:	ldr	r0, [sp, #20]
    aeb4:	mov	r1, r7
    aeb8:	mov	r2, #256	; 0x100
    aebc:	ldr	r3, [r0]
    aec0:	mov	r0, r9
    aec4:	bl	18d0 <fread@plt>
    aec8:	mov	sl, r0
    aecc:	add	r0, r8, r6, lsl #3
    aed0:	mov	r1, r9
    aed4:	mov	r2, #2048	; 0x800
    aed8:	bl	1834 <memcpy@plt>
    aedc:	ldr	r0, [sp, #12]
    aee0:	add	r6, r6, #256	; 0x100
    aee4:	add	r5, sl, r5
    aee8:	sub	r4, r4, #2048	; 0x800
    aeec:	cmp	r6, r0
    aef0:	blt	aeb0 <ReadUInt64Data+0x1674>
    aef4:	ldr	r0, [sp, #4]
    aef8:	cmp	r6, r0
    aefc:	bge	af38 <ReadUInt64Data+0x16fc>
    af00:	sub	r7, r0, r6
    af04:	ldr	r0, [sp, #20]
    af08:	ldr	r1, [sp, #16]
    af0c:	mov	r2, r7
    af10:	ldr	r3, [r0]
    af14:	add	r0, sp, #56	; 0x38
    af18:	bl	18d0 <fread@plt>
    af1c:	add	r5, r0, r5
    af20:	cmp	r7, #1
    af24:	blt	af38 <ReadUInt64Data+0x16fc>
    af28:	add	r0, r8, r6, lsl #3
    af2c:	add	r1, sp, #56	; 0x38
    af30:	mov	r2, r4
    af34:	bl	1834 <memcpy@plt>
    af38:	ldr	r7, [sp, #16]
    af3c:	b	ada4 <ReadUInt64Data+0x1568>

0000af40 <ReadCompressedUInt64Data>:
    af40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    af44:	add	fp, sp, #28
    af48:	sub	sp, sp, #12
    af4c:	mov	r7, r0
    af50:	mov	r0, #0
    af54:	cmp	r1, #0
    af58:	beq	b3d4 <ReadCompressedUInt64Data+0x494>
    af5c:	cmp	r7, #0
    af60:	movne	r5, r2
    af64:	cmpne	r2, #0
    af68:	beq	b3d4 <ReadCompressedUInt64Data+0x494>
    af6c:	ldr	sl, [fp, #8]
    af70:	mov	r0, r3
    af74:	mov	r4, r3
    af78:	mov	r6, r1
    af7c:	bl	193c <Mat_SizeOf@plt>
    af80:	mov	r9, r0
    af84:	sub	r0, r4, #1
    af88:	cmp	r0, #12
    af8c:	bhi	b3d0 <ReadCompressedUInt64Data+0x490>
    af90:	add	r1, pc, #4
    af94:	ldr	r0, [r1, r0, lsl #2]
    af98:	add	pc, r1, r0
    af9c:	.word	0x00000034
    afa0:	.word	0x00000074
    afa4:	.word	0x000000b4
    afa8:	.word	0x00000104
    afac:	.word	0x00000154
    afb0:	.word	0x000001a4
    afb4:	.word	0x000001f4
    afb8:	.word	0x00000434
    afbc:	.word	0x00000248
    afc0:	.word	0x00000434
    afc4:	.word	0x00000434
    afc8:	.word	0x0000029c
    afcc:	.word	0x000002e8
    afd0:	cmp	sl, #1
    afd4:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    afd8:	mov	r8, sp
    afdc:	mov	r4, sl
    afe0:	mov	r0, r7
    afe4:	mov	r1, r6
    afe8:	mov	r2, r8
    afec:	mov	r3, r9
    aff0:	bl	31dc <InflateData>
    aff4:	ldrsb	r0, [sp]
    aff8:	subs	r4, r4, #1
    affc:	asr	r1, r0, #31
    b000:	strd	r0, [r5]
    b004:	add	r5, r5, #8
    b008:	bne	afe0 <ReadCompressedUInt64Data+0xa0>
    b00c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b010:	cmp	sl, #1
    b014:	blt	b3cc <ReadCompressedUInt64Data+0x48c>
    b018:	ldr	r4, [fp, #8]
    b01c:	mov	r8, sp
    b020:	mov	sl, #0
    b024:	mov	r0, r7
    b028:	mov	r1, r6
    b02c:	mov	r2, r8
    b030:	mov	r3, r9
    b034:	bl	31dc <InflateData>
    b038:	ldrb	r0, [sp]
    b03c:	subs	r4, r4, #1
    b040:	stm	r5, {r0, sl}
    b044:	add	r5, r5, #8
    b048:	bne	b024 <ReadCompressedUInt64Data+0xe4>
    b04c:	b	b3cc <ReadCompressedUInt64Data+0x48c>
    b050:	ldr	r0, [r7, #20]
    b054:	cmp	r0, #0
    b058:	beq	b2d0 <ReadCompressedUInt64Data+0x390>
    b05c:	cmp	sl, #1
    b060:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b064:	mov	r8, sp
    b068:	mov	r4, sl
    b06c:	mov	r0, r7
    b070:	mov	r1, r6
    b074:	mov	r2, r8
    b078:	mov	r3, r9
    b07c:	bl	31dc <InflateData>
    b080:	mov	r0, r8
    b084:	bl	1c58 <Mat_int16Swap>
    b088:	asr	r1, r0, #31
    b08c:	subs	r4, r4, #1
    b090:	strd	r0, [r5]
    b094:	add	r5, r5, #8
    b098:	bne	b06c <ReadCompressedUInt64Data+0x12c>
    b09c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b0a0:	ldr	r0, [r7, #20]
    b0a4:	cmp	r0, #0
    b0a8:	beq	b310 <ReadCompressedUInt64Data+0x3d0>
    b0ac:	cmp	sl, #1
    b0b0:	blt	b3cc <ReadCompressedUInt64Data+0x48c>
    b0b4:	ldr	r4, [fp, #8]
    b0b8:	mov	r8, sp
    b0bc:	mov	sl, #0
    b0c0:	mov	r0, r7
    b0c4:	mov	r1, r6
    b0c8:	mov	r2, r8
    b0cc:	mov	r3, r9
    b0d0:	bl	31dc <InflateData>
    b0d4:	mov	r0, r8
    b0d8:	bl	1c6c <Mat_uint16Swap>
    b0dc:	stm	r5, {r0, sl}
    b0e0:	add	r5, r5, #8
    b0e4:	subs	r4, r4, #1
    b0e8:	bne	b0c0 <ReadCompressedUInt64Data+0x180>
    b0ec:	b	b3cc <ReadCompressedUInt64Data+0x48c>
    b0f0:	ldr	r0, [r7, #20]
    b0f4:	cmp	r0, #0
    b0f8:	beq	b350 <ReadCompressedUInt64Data+0x410>
    b0fc:	cmp	sl, #1
    b100:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b104:	mov	r8, sp
    b108:	mov	r4, sl
    b10c:	mov	r0, r7
    b110:	mov	r1, r6
    b114:	mov	r2, r8
    b118:	mov	r3, r9
    b11c:	bl	31dc <InflateData>
    b120:	mov	r0, r8
    b124:	bl	1c30 <Mat_int32Swap>
    b128:	asr	r1, r0, #31
    b12c:	subs	r4, r4, #1
    b130:	strd	r0, [r5]
    b134:	add	r5, r5, #8
    b138:	bne	b10c <ReadCompressedUInt64Data+0x1cc>
    b13c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b140:	ldr	r0, [r7, #20]
    b144:	cmp	r0, #0
    b148:	beq	b390 <ReadCompressedUInt64Data+0x450>
    b14c:	cmp	sl, #1
    b150:	blt	b3cc <ReadCompressedUInt64Data+0x48c>
    b154:	ldr	sl, [fp, #8]
    b158:	mov	r8, sp
    b15c:	mov	r4, #0
    b160:	mov	r0, r7
    b164:	mov	r1, r6
    b168:	mov	r2, r8
    b16c:	mov	r3, r9
    b170:	bl	31dc <InflateData>
    b174:	mov	r0, r8
    b178:	bl	1c44 <Mat_uint32Swap>
    b17c:	stm	r5, {r0, r4}
    b180:	add	r5, r5, #8
    b184:	subs	sl, sl, #1
    b188:	bne	b160 <ReadCompressedUInt64Data+0x220>
    b18c:	b	b3cc <ReadCompressedUInt64Data+0x48c>
    b190:	ldr	r0, [r7, #20]
    b194:	cmp	r0, #0
    b198:	beq	b3dc <ReadCompressedUInt64Data+0x49c>
    b19c:	cmp	sl, #1
    b1a0:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b1a4:	mov	r8, sp
    b1a8:	mov	r4, sl
    b1ac:	mov	r0, r7
    b1b0:	mov	r1, r6
    b1b4:	mov	r2, r8
    b1b8:	mov	r3, r9
    b1bc:	bl	31dc <InflateData>
    b1c0:	mov	r0, r8
    b1c4:	bl	1c84 <Mat_floatSwap>
    b1c8:	vmov	r0, s0
    b1cc:	bl	4b710 <__aeabi_f2ulz>
    b1d0:	strd	r0, [r5]
    b1d4:	add	r5, r5, #8
    b1d8:	subs	r4, r4, #1
    b1dc:	bne	b1ac <ReadCompressedUInt64Data+0x26c>
    b1e0:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b1e4:	ldr	r0, [r7, #20]
    b1e8:	cmp	r0, #0
    b1ec:	beq	b41c <ReadCompressedUInt64Data+0x4dc>
    b1f0:	cmp	sl, #1
    b1f4:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b1f8:	mov	r8, sp
    b1fc:	mov	r4, sl
    b200:	mov	r0, r7
    b204:	mov	r1, r6
    b208:	mov	r2, r8
    b20c:	mov	r3, r9
    b210:	bl	31dc <InflateData>
    b214:	mov	r0, r8
    b218:	bl	1cc8 <Mat_doubleSwap>
    b21c:	vmov	r0, r1, d0
    b220:	bl	4b750 <__aeabi_d2ulz>
    b224:	strd	r0, [r5]
    b228:	add	r5, r5, #8
    b22c:	subs	r4, r4, #1
    b230:	bne	b200 <ReadCompressedUInt64Data+0x2c0>
    b234:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b238:	ldr	r0, [r7, #20]
    b23c:	cmp	r0, #0
    b240:	beq	b460 <ReadCompressedUInt64Data+0x520>
    b244:	cmp	sl, #1
    b248:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b24c:	mov	r8, sp
    b250:	mov	r4, sl
    b254:	mov	r0, r7
    b258:	mov	r1, r6
    b25c:	mov	r2, r8
    b260:	mov	r3, r9
    b264:	bl	31dc <InflateData>
    b268:	mov	r0, r8
    b26c:	bl	1bbc <Mat_int64Swap>
    b270:	strd	r0, [r5]
    b274:	add	r5, r5, #8
    b278:	subs	r4, r4, #1
    b27c:	bne	b254 <ReadCompressedUInt64Data+0x314>
    b280:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b284:	ldr	r0, [r7, #20]
    b288:	cmp	r0, #0
    b28c:	beq	b49c <ReadCompressedUInt64Data+0x55c>
    b290:	cmp	sl, #1
    b294:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b298:	mov	r8, sp
    b29c:	mov	r4, sl
    b2a0:	mov	r0, r7
    b2a4:	mov	r1, r6
    b2a8:	mov	r2, r8
    b2ac:	mov	r3, r9
    b2b0:	bl	31dc <InflateData>
    b2b4:	mov	r0, r8
    b2b8:	bl	1c0c <Mat_uint64Swap>
    b2bc:	strd	r0, [r5]
    b2c0:	add	r5, r5, #8
    b2c4:	subs	r4, r4, #1
    b2c8:	bne	b2a0 <ReadCompressedUInt64Data+0x360>
    b2cc:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b2d0:	cmp	sl, #1
    b2d4:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b2d8:	mov	r8, sp
    b2dc:	mov	r4, sl
    b2e0:	mov	r0, r7
    b2e4:	mov	r1, r6
    b2e8:	mov	r2, r8
    b2ec:	mov	r3, r9
    b2f0:	bl	31dc <InflateData>
    b2f4:	ldrsh	r0, [sp]
    b2f8:	subs	r4, r4, #1
    b2fc:	asr	r1, r0, #31
    b300:	strd	r0, [r5]
    b304:	add	r5, r5, #8
    b308:	bne	b2e0 <ReadCompressedUInt64Data+0x3a0>
    b30c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b310:	cmp	sl, #1
    b314:	blt	b3cc <ReadCompressedUInt64Data+0x48c>
    b318:	ldr	r4, [fp, #8]
    b31c:	mov	r8, sp
    b320:	mov	sl, #0
    b324:	mov	r0, r7
    b328:	mov	r1, r6
    b32c:	mov	r2, r8
    b330:	mov	r3, r9
    b334:	bl	31dc <InflateData>
    b338:	ldrh	r0, [sp]
    b33c:	subs	r4, r4, #1
    b340:	stm	r5, {r0, sl}
    b344:	add	r5, r5, #8
    b348:	bne	b324 <ReadCompressedUInt64Data+0x3e4>
    b34c:	b	b3cc <ReadCompressedUInt64Data+0x48c>
    b350:	cmp	sl, #1
    b354:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b358:	mov	r8, sp
    b35c:	mov	r4, sl
    b360:	mov	r0, r7
    b364:	mov	r1, r6
    b368:	mov	r2, r8
    b36c:	mov	r3, r9
    b370:	bl	31dc <InflateData>
    b374:	ldr	r0, [sp]
    b378:	subs	r4, r4, #1
    b37c:	asr	r1, r0, #31
    b380:	strd	r0, [r5]
    b384:	add	r5, r5, #8
    b388:	bne	b360 <ReadCompressedUInt64Data+0x420>
    b38c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b390:	cmp	sl, #1
    b394:	blt	b3cc <ReadCompressedUInt64Data+0x48c>
    b398:	ldr	r4, [fp, #8]
    b39c:	mov	r8, sp
    b3a0:	mov	sl, #0
    b3a4:	mov	r0, r7
    b3a8:	mov	r1, r6
    b3ac:	mov	r2, r8
    b3b0:	mov	r3, r9
    b3b4:	bl	31dc <InflateData>
    b3b8:	ldr	r0, [sp]
    b3bc:	subs	r4, r4, #1
    b3c0:	stm	r5, {r0, sl}
    b3c4:	add	r5, r5, #8
    b3c8:	bne	b3a4 <ReadCompressedUInt64Data+0x464>
    b3cc:	ldr	sl, [fp, #8]
    b3d0:	mul	r0, r9, sl
    b3d4:	sub	sp, fp, #28
    b3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b3dc:	cmp	sl, #1
    b3e0:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b3e4:	mov	r8, sp
    b3e8:	mov	r4, sl
    b3ec:	mov	r0, r7
    b3f0:	mov	r1, r6
    b3f4:	mov	r2, r8
    b3f8:	mov	r3, r9
    b3fc:	bl	31dc <InflateData>
    b400:	ldr	r0, [sp]
    b404:	bl	4b710 <__aeabi_f2ulz>
    b408:	strd	r0, [r5]
    b40c:	add	r5, r5, #8
    b410:	subs	r4, r4, #1
    b414:	bne	b3ec <ReadCompressedUInt64Data+0x4ac>
    b418:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b41c:	cmp	sl, #1
    b420:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b424:	mov	r8, sp
    b428:	mov	r4, sl
    b42c:	mov	r0, r7
    b430:	mov	r1, r6
    b434:	mov	r2, r8
    b438:	mov	r3, r9
    b43c:	bl	31dc <InflateData>
    b440:	vldr	d16, [sp]
    b444:	vmov	r0, r1, d16
    b448:	bl	4b750 <__aeabi_d2ulz>
    b44c:	strd	r0, [r5]
    b450:	add	r5, r5, #8
    b454:	subs	r4, r4, #1
    b458:	bne	b42c <ReadCompressedUInt64Data+0x4ec>
    b45c:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b460:	cmp	sl, #1
    b464:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b468:	mov	r8, sp
    b46c:	mov	r4, sl
    b470:	mov	r0, r7
    b474:	mov	r1, r6
    b478:	mov	r2, r8
    b47c:	mov	r3, r9
    b480:	bl	31dc <InflateData>
    b484:	ldm	sp, {r0, r1}
    b488:	subs	r4, r4, #1
    b48c:	strd	r0, [r5]
    b490:	add	r5, r5, #8
    b494:	bne	b470 <ReadCompressedUInt64Data+0x530>
    b498:	b	b3d0 <ReadCompressedUInt64Data+0x490>
    b49c:	cmp	sl, #1
    b4a0:	blt	b3d0 <ReadCompressedUInt64Data+0x490>
    b4a4:	mov	r8, sp
    b4a8:	mov	r4, sl
    b4ac:	mov	r0, r7
    b4b0:	mov	r1, r6
    b4b4:	mov	r2, r8
    b4b8:	mov	r3, r9
    b4bc:	bl	31dc <InflateData>
    b4c0:	ldm	sp, {r0, r1}
    b4c4:	subs	r4, r4, #1
    b4c8:	strd	r0, [r5]
    b4cc:	add	r5, r5, #8
    b4d0:	bne	b4ac <ReadCompressedUInt64Data+0x56c>
    b4d4:	b	b3d0 <ReadCompressedUInt64Data+0x490>

0000b4d8 <ReadInt32Data>:
    b4d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4dc:	add	fp, sp, #28
    b4e0:	sub	sp, sp, #52	; 0x34
    b4e4:	sub	sp, sp, #2048	; 0x800
    b4e8:	mov	sl, r0
    b4ec:	mov	r0, #0
    b4f0:	cmp	sl, #0
    b4f4:	movne	r9, r1
    b4f8:	cmpne	r1, #0
    b4fc:	bne	b508 <ReadInt32Data+0x30>
    b500:	sub	sp, fp, #28
    b504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b508:	ldr	r1, [sl]
    b50c:	cmp	r1, #0
    b510:	beq	b500 <ReadInt32Data+0x28>
    b514:	mov	r0, r2
    b518:	mov	r5, r3
    b51c:	mov	r6, r2
    b520:	bl	193c <Mat_SizeOf@plt>
    b524:	mov	r7, r0
    b528:	sub	r0, r6, #1
    b52c:	mov	r8, #0
    b530:	str	sl, [sp, #20]
    b534:	cmp	r0, #11
    b538:	str	r7, [sp, #16]
    b53c:	bhi	c798 <ReadInt32Data+0x12c0>
    b540:	add	r1, pc, #4
    b544:	ldr	r0, [r1, r0, lsl #2]
    b548:	add	pc, r1, r0
    b54c:	.word	0x00000030
    b550:	.word	0x0000006c
    b554:	.word	0x000000a8
    b558:	.word	0x000000fc
    b55c:	.word	0x00000150
    b560:	.word	0x000001a4
    b564:	.word	0x000001f8
    b568:	.word	0x0000124c
    b56c:	.word	0x00000254
    b570:	.word	0x0000124c
    b574:	.word	0x0000124c
    b578:	.word	0x000002b4
    b57c:	cmp	r5, #256	; 0x100
    b580:	bgt	b860 <ReadInt32Data+0x388>
    b584:	ldr	r3, [sl]
    b588:	add	r4, sp, #48	; 0x30
    b58c:	mov	r1, r7
    b590:	mov	r2, r5
    b594:	mov	r0, r4
    b598:	bl	18d0 <fread@plt>
    b59c:	cmp	r5, #1
    b5a0:	blt	bbd0 <ReadInt32Data+0x6f8>
    b5a4:	ldrsb	r1, [r4], #1
    b5a8:	subs	r5, r5, #1
    b5ac:	str	r1, [r9], #4
    b5b0:	bne	b5a4 <ReadInt32Data+0xcc>
    b5b4:	b	bbd0 <ReadInt32Data+0x6f8>
    b5b8:	cmp	r5, #256	; 0x100
    b5bc:	bgt	b940 <ReadInt32Data+0x468>
    b5c0:	ldr	r3, [sl]
    b5c4:	add	r4, sp, #48	; 0x30
    b5c8:	mov	r1, r7
    b5cc:	mov	r2, r5
    b5d0:	mov	r0, r4
    b5d4:	bl	18d0 <fread@plt>
    b5d8:	cmp	r5, #1
    b5dc:	blt	bbd0 <ReadInt32Data+0x6f8>
    b5e0:	ldrb	r1, [r4], #1
    b5e4:	subs	r5, r5, #1
    b5e8:	str	r1, [r9], #4
    b5ec:	bne	b5e0 <ReadInt32Data+0x108>
    b5f0:	b	bbd0 <ReadInt32Data+0x6f8>
    b5f4:	ldr	r0, [sl, #20]
    b5f8:	cmp	r0, #0
    b5fc:	beq	ba20 <ReadInt32Data+0x548>
    b600:	cmp	r5, #256	; 0x100
    b604:	bgt	bc20 <ReadInt32Data+0x748>
    b608:	ldr	r3, [sl]
    b60c:	add	r4, sp, #48	; 0x30
    b610:	mov	r1, r7
    b614:	mov	r2, r5
    b618:	mov	r0, r4
    b61c:	bl	18d0 <fread@plt>
    b620:	mov	r6, r0
    b624:	cmp	r5, #1
    b628:	blt	b7f8 <ReadInt32Data+0x320>
    b62c:	mov	r0, r4
    b630:	bl	1c58 <Mat_int16Swap>
    b634:	str	r0, [r9], #4
    b638:	add	r4, r4, #2
    b63c:	subs	r5, r5, #1
    b640:	bne	b62c <ReadInt32Data+0x154>
    b644:	b	b7f8 <ReadInt32Data+0x320>
    b648:	ldr	r0, [sl, #20]
    b64c:	cmp	r0, #0
    b650:	beq	ba5c <ReadInt32Data+0x584>
    b654:	cmp	r5, #256	; 0x100
    b658:	bgt	bd00 <ReadInt32Data+0x828>
    b65c:	ldr	r3, [sl]
    b660:	add	r4, sp, #48	; 0x30
    b664:	mov	r1, r7
    b668:	mov	r2, r5
    b66c:	mov	r0, r4
    b670:	bl	18d0 <fread@plt>
    b674:	mov	r6, r0
    b678:	cmp	r5, #1
    b67c:	blt	b7f8 <ReadInt32Data+0x320>
    b680:	mov	r0, r4
    b684:	bl	1c6c <Mat_uint16Swap>
    b688:	str	r0, [r9], #4
    b68c:	add	r4, r4, #2
    b690:	subs	r5, r5, #1
    b694:	bne	b680 <ReadInt32Data+0x1a8>
    b698:	b	b7f8 <ReadInt32Data+0x320>
    b69c:	ldr	r0, [sl, #20]
    b6a0:	cmp	r0, #0
    b6a4:	beq	ba98 <ReadInt32Data+0x5c0>
    b6a8:	cmp	r5, #256	; 0x100
    b6ac:	bgt	bde0 <ReadInt32Data+0x908>
    b6b0:	ldr	r3, [sl]
    b6b4:	add	r4, sp, #48	; 0x30
    b6b8:	mov	r1, r7
    b6bc:	mov	r2, r5
    b6c0:	mov	r0, r4
    b6c4:	bl	18d0 <fread@plt>
    b6c8:	mov	r6, r0
    b6cc:	cmp	r5, #1
    b6d0:	blt	b7f8 <ReadInt32Data+0x320>
    b6d4:	mov	r0, r4
    b6d8:	bl	1c30 <Mat_int32Swap>
    b6dc:	str	r0, [r9], #4
    b6e0:	add	r4, r4, #4
    b6e4:	subs	r5, r5, #1
    b6e8:	bne	b6d4 <ReadInt32Data+0x1fc>
    b6ec:	b	b7f8 <ReadInt32Data+0x320>
    b6f0:	ldr	r0, [sl, #20]
    b6f4:	cmp	r0, #0
    b6f8:	beq	bb04 <ReadInt32Data+0x62c>
    b6fc:	cmp	r5, #256	; 0x100
    b700:	bgt	bec0 <ReadInt32Data+0x9e8>
    b704:	ldr	r3, [sl]
    b708:	add	r4, sp, #48	; 0x30
    b70c:	mov	r1, r7
    b710:	mov	r2, r5
    b714:	mov	r0, r4
    b718:	bl	18d0 <fread@plt>
    b71c:	mov	r6, r0
    b720:	cmp	r5, #1
    b724:	blt	b7f8 <ReadInt32Data+0x320>
    b728:	mov	r0, r4
    b72c:	bl	1c44 <Mat_uint32Swap>
    b730:	str	r0, [r9], #4
    b734:	add	r4, r4, #4
    b738:	subs	r5, r5, #1
    b73c:	bne	b728 <ReadInt32Data+0x250>
    b740:	b	b7f8 <ReadInt32Data+0x320>
    b744:	ldr	r0, [sl, #20]
    b748:	cmp	r0, #0
    b74c:	beq	bb44 <ReadInt32Data+0x66c>
    b750:	cmp	r5, #256	; 0x100
    b754:	bgt	bfa0 <ReadInt32Data+0xac8>
    b758:	ldr	r3, [sl]
    b75c:	add	r4, sp, #48	; 0x30
    b760:	mov	r1, r7
    b764:	mov	r2, r5
    b768:	mov	r0, r4
    b76c:	bl	18d0 <fread@plt>
    b770:	mov	r6, r0
    b774:	cmp	r5, #1
    b778:	blt	b7f8 <ReadInt32Data+0x320>
    b77c:	mov	r0, r4
    b780:	bl	1c84 <Mat_floatSwap>
    b784:	vcvt.s32.f32	s0, s0
    b788:	add	r4, r4, #4
    b78c:	subs	r5, r5, #1
    b790:	vmov	r0, s0
    b794:	str	r0, [r9], #4
    b798:	bne	b77c <ReadInt32Data+0x2a4>
    b79c:	b	b7f8 <ReadInt32Data+0x320>
    b7a0:	ldr	r0, [sl, #20]
    b7a4:	cmp	r0, #0
    b7a8:	beq	bb8c <ReadInt32Data+0x6b4>
    b7ac:	cmp	r5, #256	; 0x100
    b7b0:	bgt	c090 <ReadInt32Data+0xbb8>
    b7b4:	ldr	r3, [sl]
    b7b8:	add	r4, sp, #48	; 0x30
    b7bc:	mov	r1, r7
    b7c0:	mov	r2, r5
    b7c4:	mov	r0, r4
    b7c8:	bl	18d0 <fread@plt>
    b7cc:	mov	r6, r0
    b7d0:	cmp	r5, #1
    b7d4:	blt	b7f8 <ReadInt32Data+0x320>
    b7d8:	mov	r0, r4
    b7dc:	bl	1cc8 <Mat_doubleSwap>
    b7e0:	vcvt.s32.f64	s0, d0
    b7e4:	add	r4, r4, #8
    b7e8:	subs	r5, r5, #1
    b7ec:	vmov	r0, s0
    b7f0:	str	r0, [r9], #4
    b7f4:	bne	b7d8 <ReadInt32Data+0x300>
    b7f8:	mov	r5, r6
    b7fc:	b	ca0c <ReadInt32Data+0x1534>
    b800:	ldr	r0, [sl, #20]
    b804:	cmp	r0, #0
    b808:	beq	bbd8 <ReadInt32Data+0x700>
    b80c:	cmp	r5, #256	; 0x100
    b810:	bgt	c184 <ReadInt32Data+0xcac>
    b814:	ldr	r3, [sl]
    b818:	add	r4, sp, #48	; 0x30
    b81c:	mov	r1, r7
    b820:	mov	r2, r5
    b824:	mov	r0, r4
    b828:	bl	18d0 <fread@plt>
    b82c:	mov	r8, r0
    b830:	cmp	r5, #1
    b834:	blt	c798 <ReadInt32Data+0x12c0>
    b838:	str	r6, [sp]
    b83c:	mov	r6, r9
    b840:	mov	r7, r5
    b844:	mov	r0, r4
    b848:	bl	1bbc <Mat_int64Swap>
    b84c:	str	r0, [r6], #4
    b850:	add	r4, r4, #8
    b854:	subs	r7, r7, #1
    b858:	bne	b844 <ReadInt32Data+0x36c>
    b85c:	b	c274 <ReadInt32Data+0xd9c>
    b860:	sub	r0, r5, #256	; 0x100
    b864:	str	r5, [sp, #4]
    b868:	add	r1, r9, #1024	; 0x400
    b86c:	add	r4, sp, #48	; 0x30
    b870:	add	sl, sp, #40	; 0x28
    b874:	mov	r5, #0
    b878:	str	r0, [sp, #12]
    b87c:	mov	r0, #0
    b880:	mov	r8, r0
    b884:	ldr	r0, [sp, #20]
    b888:	mov	r6, r1
    b88c:	mov	r1, r7
    b890:	mov	r2, #256	; 0x100
    b894:	ldr	r3, [r0]
    b898:	mov	r0, r4
    b89c:	bl	18d0 <fread@plt>
    b8a0:	mov	r1, r9
    b8a4:	mov	r2, #0
    b8a8:	ldr	r3, [r4, r2]
    b8ac:	add	r2, r2, #4
    b8b0:	cmp	r2, #256	; 0x100
    b8b4:	str	r3, [sp, #40]	; 0x28
    b8b8:	vld1.32	{d16[0]}, [sl :32]
    b8bc:	vmovl.s8	q8, d16
    b8c0:	vmovl.s16	q8, d16
    b8c4:	vst1.32	{d16-d17}, [r1]!
    b8c8:	bne	b8a8 <ReadInt32Data+0x3d0>
    b8cc:	ldr	r2, [sp, #12]
    b8d0:	add	r5, r0, r5
    b8d4:	add	r0, r8, #256	; 0x100
    b8d8:	add	r9, r9, #1024	; 0x400
    b8dc:	add	r1, r6, #1024	; 0x400
    b8e0:	cmp	r0, r2
    b8e4:	blt	b880 <ReadInt32Data+0x3a8>
    b8e8:	mov	r1, r7
    b8ec:	mov	r7, r5
    b8f0:	ldr	r5, [sp, #4]
    b8f4:	cmp	r0, r5
    b8f8:	bge	ca04 <ReadInt32Data+0x152c>
    b8fc:	sub	r9, r5, r0
    b900:	ldr	r0, [sp, #20]
    b904:	add	r4, sp, #48	; 0x30
    b908:	mov	r2, r9
    b90c:	ldr	r3, [r0]
    b910:	mov	r0, r4
    b914:	bl	18d0 <fread@plt>
    b918:	add	r7, r0, r7
    b91c:	cmp	r9, #1
    b920:	blt	c9f4 <ReadInt32Data+0x151c>
    b924:	sub	r0, r5, r8
    b928:	sub	r0, r0, #256	; 0x100
    b92c:	ldrsb	r1, [r4], #1
    b930:	subs	r0, r0, #1
    b934:	str	r1, [r6], #4
    b938:	bne	b92c <ReadInt32Data+0x454>
    b93c:	b	c9f4 <ReadInt32Data+0x151c>
    b940:	sub	r0, r5, #256	; 0x100
    b944:	str	r5, [sp, #4]
    b948:	add	r1, r9, #1024	; 0x400
    b94c:	add	r4, sp, #48	; 0x30
    b950:	add	sl, sp, #44	; 0x2c
    b954:	mov	r5, #0
    b958:	str	r0, [sp, #12]
    b95c:	mov	r0, #0
    b960:	mov	r8, r0
    b964:	ldr	r0, [sp, #20]
    b968:	mov	r6, r1
    b96c:	mov	r1, r7
    b970:	mov	r2, #256	; 0x100
    b974:	ldr	r3, [r0]
    b978:	mov	r0, r4
    b97c:	bl	18d0 <fread@plt>
    b980:	mov	r1, r9
    b984:	mov	r2, #0
    b988:	ldr	r3, [r4, r2]
    b98c:	add	r2, r2, #4
    b990:	cmp	r2, #256	; 0x100
    b994:	str	r3, [sp, #44]	; 0x2c
    b998:	vld1.32	{d16[0]}, [sl :32]
    b99c:	vmovl.u8	q8, d16
    b9a0:	vmovl.u16	q8, d16
    b9a4:	vst1.32	{d16-d17}, [r1]!
    b9a8:	bne	b988 <ReadInt32Data+0x4b0>
    b9ac:	ldr	r2, [sp, #12]
    b9b0:	add	r5, r0, r5
    b9b4:	add	r0, r8, #256	; 0x100
    b9b8:	add	r9, r9, #1024	; 0x400
    b9bc:	add	r1, r6, #1024	; 0x400
    b9c0:	cmp	r0, r2
    b9c4:	blt	b960 <ReadInt32Data+0x488>
    b9c8:	mov	r1, r7
    b9cc:	mov	r7, r5
    b9d0:	ldr	r5, [sp, #4]
    b9d4:	cmp	r0, r5
    b9d8:	bge	ca04 <ReadInt32Data+0x152c>
    b9dc:	sub	r9, r5, r0
    b9e0:	ldr	r0, [sp, #20]
    b9e4:	add	r4, sp, #48	; 0x30
    b9e8:	mov	r2, r9
    b9ec:	ldr	r3, [r0]
    b9f0:	mov	r0, r4
    b9f4:	bl	18d0 <fread@plt>
    b9f8:	add	r7, r0, r7
    b9fc:	cmp	r9, #1
    ba00:	blt	c9f4 <ReadInt32Data+0x151c>
    ba04:	sub	r0, r5, r8
    ba08:	sub	r0, r0, #256	; 0x100
    ba0c:	ldrb	r1, [r4], #1
    ba10:	subs	r0, r0, #1
    ba14:	str	r1, [r6], #4
    ba18:	bne	ba0c <ReadInt32Data+0x534>
    ba1c:	b	c9f4 <ReadInt32Data+0x151c>
    ba20:	cmp	r5, #256	; 0x100
    ba24:	bgt	c27c <ReadInt32Data+0xda4>
    ba28:	ldr	r3, [sl]
    ba2c:	add	r4, sp, #48	; 0x30
    ba30:	mov	r1, r7
    ba34:	mov	r2, r5
    ba38:	mov	r0, r4
    ba3c:	bl	18d0 <fread@plt>
    ba40:	cmp	r5, #1
    ba44:	blt	bbd0 <ReadInt32Data+0x6f8>
    ba48:	ldrsh	r1, [r4], #2
    ba4c:	subs	r5, r5, #1
    ba50:	str	r1, [r9], #4
    ba54:	bne	ba48 <ReadInt32Data+0x570>
    ba58:	b	bbd0 <ReadInt32Data+0x6f8>
    ba5c:	cmp	r5, #256	; 0x100
    ba60:	bgt	c364 <ReadInt32Data+0xe8c>
    ba64:	ldr	r3, [sl]
    ba68:	add	r4, sp, #48	; 0x30
    ba6c:	mov	r1, r7
    ba70:	mov	r2, r5
    ba74:	mov	r0, r4
    ba78:	bl	18d0 <fread@plt>
    ba7c:	cmp	r5, #1
    ba80:	blt	bbd0 <ReadInt32Data+0x6f8>
    ba84:	ldrh	r1, [r4], #2
    ba88:	subs	r5, r5, #1
    ba8c:	str	r1, [r9], #4
    ba90:	bne	ba84 <ReadInt32Data+0x5ac>
    ba94:	b	bbd0 <ReadInt32Data+0x6f8>
    ba98:	cmp	r5, #256	; 0x100
    ba9c:	ble	bb0c <ReadInt32Data+0x634>
    baa0:	sub	r0, r5, #256	; 0x100
    baa4:	lsl	r4, r5, #2
    baa8:	str	r5, [sp, #4]
    baac:	mov	r6, #0
    bab0:	add	r8, sp, #48	; 0x30
    bab4:	mov	r5, #0
    bab8:	str	r0, [sp, #12]
    babc:	ldr	r3, [sl]
    bac0:	mov	r0, r8
    bac4:	mov	r1, r7
    bac8:	mov	r2, #256	; 0x100
    bacc:	bl	18d0 <fread@plt>
    bad0:	mov	sl, r0
    bad4:	add	r0, r9, r6, lsl #2
    bad8:	mov	r1, r8
    badc:	mov	r2, #1024	; 0x400
    bae0:	bl	1834 <memcpy@plt>
    bae4:	ldr	r0, [sp, #12]
    bae8:	add	r5, sl, r5
    baec:	ldr	sl, [sp, #20]
    baf0:	add	r6, r6, #256	; 0x100
    baf4:	sub	r4, r4, #1024	; 0x400
    baf8:	cmp	r6, r0
    bafc:	blt	babc <ReadInt32Data+0x5e4>
    bb00:	b	c4ac <ReadInt32Data+0xfd4>
    bb04:	cmp	r5, #256	; 0x100
    bb08:	bgt	c44c <ReadInt32Data+0xf74>
    bb0c:	ldr	r3, [sl]
    bb10:	add	r0, sp, #48	; 0x30
    bb14:	mov	r1, r7
    bb18:	mov	r2, r5
    bb1c:	bl	18d0 <fread@plt>
    bb20:	mov	r4, r0
    bb24:	cmp	r5, #1
    bb28:	blt	bb3c <ReadInt32Data+0x664>
    bb2c:	lsl	r2, r5, #2
    bb30:	add	r1, sp, #48	; 0x30
    bb34:	mov	r0, r9
    bb38:	bl	1834 <memcpy@plt>
    bb3c:	mov	r5, r4
    bb40:	b	ca0c <ReadInt32Data+0x1534>
    bb44:	cmp	r5, #256	; 0x100
    bb48:	bgt	c4f4 <ReadInt32Data+0x101c>
    bb4c:	ldr	r3, [sl]
    bb50:	add	r4, sp, #48	; 0x30
    bb54:	mov	r1, r7
    bb58:	mov	r2, r5
    bb5c:	mov	r0, r4
    bb60:	bl	18d0 <fread@plt>
    bb64:	cmp	r5, #1
    bb68:	blt	bbd0 <ReadInt32Data+0x6f8>
    bb6c:	vldr	s0, [r4]
    bb70:	add	r4, r4, #4
    bb74:	subs	r5, r5, #1
    bb78:	vcvt.s32.f32	s0, s0
    bb7c:	vmov	r1, s0
    bb80:	str	r1, [r9], #4
    bb84:	bne	bb6c <ReadInt32Data+0x694>
    bb88:	b	bbd0 <ReadInt32Data+0x6f8>
    bb8c:	cmp	r5, #256	; 0x100
    bb90:	bgt	c5c0 <ReadInt32Data+0x10e8>
    bb94:	ldr	r3, [sl]
    bb98:	add	r4, sp, #48	; 0x30
    bb9c:	mov	r1, r7
    bba0:	mov	r2, r5
    bba4:	mov	r0, r4
    bba8:	bl	18d0 <fread@plt>
    bbac:	cmp	r5, #1
    bbb0:	blt	bbd0 <ReadInt32Data+0x6f8>
    bbb4:	vldr	d16, [r4]
    bbb8:	add	r4, r4, #8
    bbbc:	subs	r5, r5, #1
    bbc0:	vcvt.s32.f64	s0, d16
    bbc4:	vmov	r1, s0
    bbc8:	str	r1, [r9], #4
    bbcc:	bne	bbb4 <ReadInt32Data+0x6dc>
    bbd0:	mov	r5, r0
    bbd4:	b	ca0c <ReadInt32Data+0x1534>
    bbd8:	cmp	r5, #256	; 0x100
    bbdc:	bgt	c6b0 <ReadInt32Data+0x11d8>
    bbe0:	ldr	r3, [sl]
    bbe4:	add	r4, sp, #48	; 0x30
    bbe8:	mov	r1, r7
    bbec:	mov	r2, r5
    bbf0:	mov	r0, r4
    bbf4:	bl	18d0 <fread@plt>
    bbf8:	mov	r8, r0
    bbfc:	cmp	r5, #1
    bc00:	blt	c798 <ReadInt32Data+0x12c0>
    bc04:	mov	r0, r9
    bc08:	mov	r1, r5
    bc0c:	ldr	r2, [r4], #8
    bc10:	subs	r1, r1, #1
    bc14:	str	r2, [r0], #4
    bc18:	bne	bc0c <ReadInt32Data+0x734>
    bc1c:	b	c798 <ReadInt32Data+0x12c0>
    bc20:	sub	r0, r5, #256	; 0x100
    bc24:	str	r5, [sp, #4]
    bc28:	add	r1, r9, #1024	; 0x400
    bc2c:	add	r4, sp, #48	; 0x30
    bc30:	mov	r5, #0
    bc34:	str	r0, [sp, #12]
    bc38:	mov	r0, #0
    bc3c:	mov	sl, r0
    bc40:	ldr	r0, [sp, #20]
    bc44:	mov	r8, r1
    bc48:	mov	r1, r7
    bc4c:	mov	r2, #256	; 0x100
    bc50:	ldr	r3, [r0]
    bc54:	mov	r0, r4
    bc58:	bl	18d0 <fread@plt>
    bc5c:	mov	r6, r0
    bc60:	mov	r7, #0
    bc64:	add	r0, r4, r7
    bc68:	bl	1c58 <Mat_int16Swap>
    bc6c:	str	r0, [r9, r7, lsl #1]
    bc70:	add	r7, r7, #2
    bc74:	cmp	r7, #512	; 0x200
    bc78:	bne	bc64 <ReadInt32Data+0x78c>
    bc7c:	ldr	r2, [sp, #12]
    bc80:	ldr	r7, [sp, #16]
    bc84:	add	r0, sl, #256	; 0x100
    bc88:	add	r5, r6, r5
    bc8c:	add	r9, r9, #1024	; 0x400
    bc90:	add	r1, r8, #1024	; 0x400
    bc94:	cmp	r0, r2
    bc98:	blt	bc3c <ReadInt32Data+0x764>
    bc9c:	mov	r9, r7
    bca0:	mov	r7, r5
    bca4:	ldr	r5, [sp, #4]
    bca8:	cmp	r0, r5
    bcac:	bge	c918 <ReadInt32Data+0x1440>
    bcb0:	sub	r6, r5, r0
    bcb4:	ldr	r0, [sp, #20]
    bcb8:	add	r4, sp, #48	; 0x30
    bcbc:	mov	r1, r9
    bcc0:	mov	r2, r6
    bcc4:	ldr	r3, [r0]
    bcc8:	mov	r0, r4
    bccc:	bl	18d0 <fread@plt>
    bcd0:	add	r7, r0, r7
    bcd4:	cmp	r6, #1
    bcd8:	blt	c918 <ReadInt32Data+0x1440>
    bcdc:	sub	r0, r5, sl
    bce0:	sub	r6, r0, #256	; 0x100
    bce4:	mov	r0, r4
    bce8:	bl	1c58 <Mat_int16Swap>
    bcec:	str	r0, [r8], #4
    bcf0:	add	r4, r4, #2
    bcf4:	subs	r6, r6, #1
    bcf8:	bne	bce4 <ReadInt32Data+0x80c>
    bcfc:	b	c918 <ReadInt32Data+0x1440>
    bd00:	sub	r0, r5, #256	; 0x100
    bd04:	str	r5, [sp, #4]
    bd08:	add	r1, r9, #1024	; 0x400
    bd0c:	add	r4, sp, #48	; 0x30
    bd10:	mov	r5, #0
    bd14:	str	r0, [sp, #12]
    bd18:	mov	r0, #0
    bd1c:	mov	sl, r0
    bd20:	ldr	r0, [sp, #20]
    bd24:	mov	r8, r1
    bd28:	mov	r1, r7
    bd2c:	mov	r2, #256	; 0x100
    bd30:	ldr	r3, [r0]
    bd34:	mov	r0, r4
    bd38:	bl	18d0 <fread@plt>
    bd3c:	mov	r6, r0
    bd40:	mov	r7, #0
    bd44:	add	r0, r4, r7
    bd48:	bl	1c6c <Mat_uint16Swap>
    bd4c:	str	r0, [r9, r7, lsl #1]
    bd50:	add	r7, r7, #2
    bd54:	cmp	r7, #512	; 0x200
    bd58:	bne	bd44 <ReadInt32Data+0x86c>
    bd5c:	ldr	r2, [sp, #12]
    bd60:	ldr	r7, [sp, #16]
    bd64:	add	r0, sl, #256	; 0x100
    bd68:	add	r5, r6, r5
    bd6c:	add	r9, r9, #1024	; 0x400
    bd70:	add	r1, r8, #1024	; 0x400
    bd74:	cmp	r0, r2
    bd78:	blt	bd1c <ReadInt32Data+0x844>
    bd7c:	mov	r9, r7
    bd80:	mov	r7, r5
    bd84:	ldr	r5, [sp, #4]
    bd88:	cmp	r0, r5
    bd8c:	bge	c918 <ReadInt32Data+0x1440>
    bd90:	sub	r6, r5, r0
    bd94:	ldr	r0, [sp, #20]
    bd98:	add	r4, sp, #48	; 0x30
    bd9c:	mov	r1, r9
    bda0:	mov	r2, r6
    bda4:	ldr	r3, [r0]
    bda8:	mov	r0, r4
    bdac:	bl	18d0 <fread@plt>
    bdb0:	add	r7, r0, r7
    bdb4:	cmp	r6, #1
    bdb8:	blt	c918 <ReadInt32Data+0x1440>
    bdbc:	sub	r0, r5, sl
    bdc0:	sub	r6, r0, #256	; 0x100
    bdc4:	mov	r0, r4
    bdc8:	bl	1c6c <Mat_uint16Swap>
    bdcc:	str	r0, [r8], #4
    bdd0:	add	r4, r4, #2
    bdd4:	subs	r6, r6, #1
    bdd8:	bne	bdc4 <ReadInt32Data+0x8ec>
    bddc:	b	c918 <ReadInt32Data+0x1440>
    bde0:	sub	r0, r5, #256	; 0x100
    bde4:	str	r5, [sp, #4]
    bde8:	add	r1, r9, #1024	; 0x400
    bdec:	add	r4, sp, #48	; 0x30
    bdf0:	mov	r5, #0
    bdf4:	str	r0, [sp, #12]
    bdf8:	mov	r0, #0
    bdfc:	mov	sl, r0
    be00:	ldr	r0, [sp, #20]
    be04:	mov	r8, r1
    be08:	mov	r1, r7
    be0c:	mov	r2, #256	; 0x100
    be10:	ldr	r3, [r0]
    be14:	mov	r0, r4
    be18:	bl	18d0 <fread@plt>
    be1c:	mov	r6, r0
    be20:	mov	r7, #0
    be24:	add	r0, r4, r7
    be28:	bl	1c30 <Mat_int32Swap>
    be2c:	str	r0, [r9, r7]
    be30:	add	r7, r7, #4
    be34:	cmp	r7, #1024	; 0x400
    be38:	bne	be24 <ReadInt32Data+0x94c>
    be3c:	ldr	r2, [sp, #12]
    be40:	ldr	r7, [sp, #16]
    be44:	add	r0, sl, #256	; 0x100
    be48:	add	r5, r6, r5
    be4c:	add	r9, r9, #1024	; 0x400
    be50:	add	r1, r8, #1024	; 0x400
    be54:	cmp	r0, r2
    be58:	blt	bdfc <ReadInt32Data+0x924>
    be5c:	mov	r9, r7
    be60:	mov	r7, r5
    be64:	ldr	r5, [sp, #4]
    be68:	cmp	r0, r5
    be6c:	bge	c918 <ReadInt32Data+0x1440>
    be70:	sub	r6, r5, r0
    be74:	ldr	r0, [sp, #20]
    be78:	add	r4, sp, #48	; 0x30
    be7c:	mov	r1, r9
    be80:	mov	r2, r6
    be84:	ldr	r3, [r0]
    be88:	mov	r0, r4
    be8c:	bl	18d0 <fread@plt>
    be90:	add	r7, r0, r7
    be94:	cmp	r6, #1
    be98:	blt	c918 <ReadInt32Data+0x1440>
    be9c:	sub	r0, r5, sl
    bea0:	sub	r6, r0, #256	; 0x100
    bea4:	mov	r0, r4
    bea8:	bl	1c30 <Mat_int32Swap>
    beac:	str	r0, [r8], #4
    beb0:	add	r4, r4, #4
    beb4:	subs	r6, r6, #1
    beb8:	bne	bea4 <ReadInt32Data+0x9cc>
    bebc:	b	c918 <ReadInt32Data+0x1440>
    bec0:	sub	r0, r5, #256	; 0x100
    bec4:	str	r5, [sp, #4]
    bec8:	add	r1, r9, #1024	; 0x400
    becc:	add	r4, sp, #48	; 0x30
    bed0:	mov	r5, #0
    bed4:	str	r0, [sp, #12]
    bed8:	mov	r0, #0
    bedc:	mov	sl, r0
    bee0:	ldr	r0, [sp, #20]
    bee4:	mov	r8, r1
    bee8:	mov	r1, r7
    beec:	mov	r2, #256	; 0x100
    bef0:	ldr	r3, [r0]
    bef4:	mov	r0, r4
    bef8:	bl	18d0 <fread@plt>
    befc:	mov	r6, r0
    bf00:	mov	r7, #0
    bf04:	add	r0, r4, r7
    bf08:	bl	1c44 <Mat_uint32Swap>
    bf0c:	str	r0, [r9, r7]
    bf10:	add	r7, r7, #4
    bf14:	cmp	r7, #1024	; 0x400
    bf18:	bne	bf04 <ReadInt32Data+0xa2c>
    bf1c:	ldr	r2, [sp, #12]
    bf20:	ldr	r7, [sp, #16]
    bf24:	add	r0, sl, #256	; 0x100
    bf28:	add	r5, r6, r5
    bf2c:	add	r9, r9, #1024	; 0x400
    bf30:	add	r1, r8, #1024	; 0x400
    bf34:	cmp	r0, r2
    bf38:	blt	bedc <ReadInt32Data+0xa04>
    bf3c:	mov	r9, r7
    bf40:	mov	r7, r5
    bf44:	ldr	r5, [sp, #4]
    bf48:	cmp	r0, r5
    bf4c:	bge	c918 <ReadInt32Data+0x1440>
    bf50:	sub	r6, r5, r0
    bf54:	ldr	r0, [sp, #20]
    bf58:	add	r4, sp, #48	; 0x30
    bf5c:	mov	r1, r9
    bf60:	mov	r2, r6
    bf64:	ldr	r3, [r0]
    bf68:	mov	r0, r4
    bf6c:	bl	18d0 <fread@plt>
    bf70:	add	r7, r0, r7
    bf74:	cmp	r6, #1
    bf78:	blt	c918 <ReadInt32Data+0x1440>
    bf7c:	sub	r0, r5, sl
    bf80:	sub	r6, r0, #256	; 0x100
    bf84:	mov	r0, r4
    bf88:	bl	1c44 <Mat_uint32Swap>
    bf8c:	str	r0, [r8], #4
    bf90:	add	r4, r4, #4
    bf94:	subs	r6, r6, #1
    bf98:	bne	bf84 <ReadInt32Data+0xaac>
    bf9c:	b	c918 <ReadInt32Data+0x1440>
    bfa0:	sub	r0, r5, #256	; 0x100
    bfa4:	str	r5, [sp, #4]
    bfa8:	add	r1, r9, #1024	; 0x400
    bfac:	add	r4, sp, #48	; 0x30
    bfb0:	mov	r5, #0
    bfb4:	str	r0, [sp, #12]
    bfb8:	mov	r0, #0
    bfbc:	mov	sl, r0
    bfc0:	ldr	r0, [sp, #20]
    bfc4:	mov	r8, r1
    bfc8:	mov	r1, r7
    bfcc:	mov	r2, #256	; 0x100
    bfd0:	ldr	r3, [r0]
    bfd4:	mov	r0, r4
    bfd8:	bl	18d0 <fread@plt>
    bfdc:	mov	r6, r0
    bfe0:	mov	r7, #0
    bfe4:	add	r0, r4, r7
    bfe8:	bl	1c84 <Mat_floatSwap>
    bfec:	vcvt.s32.f32	s0, s0
    bff0:	vmov	r0, s0
    bff4:	str	r0, [r9, r7]
    bff8:	add	r7, r7, #4
    bffc:	cmp	r7, #1024	; 0x400
    c000:	bne	bfe4 <ReadInt32Data+0xb0c>
    c004:	ldr	r2, [sp, #12]
    c008:	ldr	r7, [sp, #16]
    c00c:	add	r0, sl, #256	; 0x100
    c010:	add	r5, r6, r5
    c014:	add	r9, r9, #1024	; 0x400
    c018:	add	r1, r8, #1024	; 0x400
    c01c:	cmp	r0, r2
    c020:	blt	bfbc <ReadInt32Data+0xae4>
    c024:	mov	r9, r7
    c028:	mov	r7, r5
    c02c:	ldr	r5, [sp, #4]
    c030:	cmp	r0, r5
    c034:	bge	c918 <ReadInt32Data+0x1440>
    c038:	sub	r6, r5, r0
    c03c:	ldr	r0, [sp, #20]
    c040:	add	r4, sp, #48	; 0x30
    c044:	mov	r1, r9
    c048:	mov	r2, r6
    c04c:	ldr	r3, [r0]
    c050:	mov	r0, r4
    c054:	bl	18d0 <fread@plt>
    c058:	add	r7, r0, r7
    c05c:	cmp	r6, #1
    c060:	blt	c918 <ReadInt32Data+0x1440>
    c064:	sub	r0, r5, sl
    c068:	sub	r6, r0, #256	; 0x100
    c06c:	mov	r0, r4
    c070:	bl	1c84 <Mat_floatSwap>
    c074:	vcvt.s32.f32	s0, s0
    c078:	add	r4, r4, #4
    c07c:	subs	r6, r6, #1
    c080:	vmov	r0, s0
    c084:	str	r0, [r8], #4
    c088:	bne	c06c <ReadInt32Data+0xb94>
    c08c:	b	c918 <ReadInt32Data+0x1440>
    c090:	sub	r0, r5, #256	; 0x100
    c094:	str	r5, [sp, #4]
    c098:	add	r1, r9, #1024	; 0x400
    c09c:	mov	r5, #0
    c0a0:	str	r0, [sp, #12]
    c0a4:	mov	r0, #0
    c0a8:	mov	sl, r0
    c0ac:	ldr	r0, [sp, #20]
    c0b0:	add	r6, sp, #48	; 0x30
    c0b4:	mov	r8, r1
    c0b8:	mov	r1, r7
    c0bc:	mov	r2, #256	; 0x100
    c0c0:	ldr	r3, [r0]
    c0c4:	mov	r0, r6
    c0c8:	bl	18d0 <fread@plt>
    c0cc:	mov	r4, r0
    c0d0:	mov	r7, #0
    c0d4:	mov	r0, r6
    c0d8:	bl	1cc8 <Mat_doubleSwap>
    c0dc:	vcvt.s32.f64	s0, d0
    c0e0:	add	r6, r6, #8
    c0e4:	vmov	r0, s0
    c0e8:	str	r0, [r9, r7, lsl #2]
    c0ec:	add	r7, r7, #1
    c0f0:	cmp	r7, #256	; 0x100
    c0f4:	bne	c0d4 <ReadInt32Data+0xbfc>
    c0f8:	ldr	r2, [sp, #12]
    c0fc:	ldr	r7, [sp, #16]
    c100:	add	r0, sl, #256	; 0x100
    c104:	add	r5, r4, r5
    c108:	add	r9, r9, #1024	; 0x400
    c10c:	add	r1, r8, #1024	; 0x400
    c110:	cmp	r0, r2
    c114:	blt	c0a8 <ReadInt32Data+0xbd0>
    c118:	mov	r9, r7
    c11c:	mov	r7, r5
    c120:	ldr	r5, [sp, #4]
    c124:	cmp	r0, r5
    c128:	bge	c918 <ReadInt32Data+0x1440>
    c12c:	sub	r6, r5, r0
    c130:	ldr	r0, [sp, #20]
    c134:	add	r4, sp, #48	; 0x30
    c138:	mov	r1, r9
    c13c:	mov	r2, r6
    c140:	ldr	r3, [r0]
    c144:	mov	r0, r4
    c148:	bl	18d0 <fread@plt>
    c14c:	add	r7, r0, r7
    c150:	cmp	r6, #1
    c154:	blt	c918 <ReadInt32Data+0x1440>
    c158:	sub	r0, r5, sl
    c15c:	sub	r6, r0, #256	; 0x100
    c160:	mov	r0, r4
    c164:	bl	1cc8 <Mat_doubleSwap>
    c168:	vcvt.s32.f64	s0, d0
    c16c:	add	r4, r4, #8
    c170:	subs	r6, r6, #1
    c174:	vmov	r0, s0
    c178:	str	r0, [r8], #4
    c17c:	bne	c160 <ReadInt32Data+0xc88>
    c180:	b	c918 <ReadInt32Data+0x1440>
    c184:	sub	r0, r5, #256	; 0x100
    c188:	str	r5, [sp, #4]
    c18c:	add	r1, r9, #1024	; 0x400
    c190:	mov	r7, r9
    c194:	mov	r5, #0
    c198:	str	r6, [sp]
    c19c:	str	r0, [sp, #8]
    c1a0:	mov	r0, #0
    c1a4:	mov	r6, r1
    c1a8:	ldr	r3, [sl]
    c1ac:	ldr	r1, [sp, #16]
    c1b0:	add	r4, sp, #48	; 0x30
    c1b4:	str	r0, [sp, #12]
    c1b8:	mov	r2, #256	; 0x100
    c1bc:	mov	r0, r4
    c1c0:	bl	18d0 <fread@plt>
    c1c4:	mov	r8, r0
    c1c8:	mov	sl, #0
    c1cc:	mov	r0, r4
    c1d0:	bl	1bbc <Mat_int64Swap>
    c1d4:	str	r0, [r7, sl, lsl #2]
    c1d8:	add	sl, sl, #1
    c1dc:	add	r4, r4, #8
    c1e0:	cmp	sl, #256	; 0x100
    c1e4:	bne	c1cc <ReadInt32Data+0xcf4>
    c1e8:	ldr	r0, [sp, #12]
    c1ec:	ldr	r2, [sp, #8]
    c1f0:	ldr	sl, [sp, #20]
    c1f4:	add	r5, r8, r5
    c1f8:	add	r7, r7, #1024	; 0x400
    c1fc:	add	r1, r6, #1024	; 0x400
    c200:	add	r0, r0, #256	; 0x100
    c204:	cmp	r0, r2
    c208:	blt	c1a4 <ReadInt32Data+0xccc>
    c20c:	mov	r8, r5
    c210:	ldr	r5, [sp, #4]
    c214:	cmp	r0, r5
    c218:	bge	c274 <ReadInt32Data+0xd9c>
    c21c:	mov	r1, sl
    c220:	ldr	r7, [sp, #16]
    c224:	sub	sl, r5, r0
    c228:	add	r4, sp, #48	; 0x30
    c22c:	ldr	r3, [r1]
    c230:	mov	r0, r4
    c234:	mov	r2, sl
    c238:	mov	r1, r7
    c23c:	bl	18d0 <fread@plt>
    c240:	add	r8, r0, r8
    c244:	cmp	sl, #1
    c248:	blt	c790 <ReadInt32Data+0x12b8>
    c24c:	ldr	r0, [sp, #12]
    c250:	sub	r0, r5, r0
    c254:	sub	r7, r0, #256	; 0x100
    c258:	mov	r0, r4
    c25c:	bl	1bbc <Mat_int64Swap>
    c260:	str	r0, [r6], #4
    c264:	add	r4, r4, #8
    c268:	subs	r7, r7, #1
    c26c:	bne	c258 <ReadInt32Data+0xd80>
    c270:	b	c78c <ReadInt32Data+0x12b4>
    c274:	ldr	r7, [sp, #16]
    c278:	b	c794 <ReadInt32Data+0x12bc>
    c27c:	sub	r0, r5, #256	; 0x100
    c280:	str	r5, [sp, #4]
    c284:	add	r1, r9, #1024	; 0x400
    c288:	add	r4, sp, #48	; 0x30
    c28c:	add	sl, sp, #24
    c290:	mov	r5, #0
    c294:	str	r0, [sp, #12]
    c298:	mov	r0, #0
    c29c:	mov	r8, r0
    c2a0:	ldr	r0, [sp, #20]
    c2a4:	mov	r6, r1
    c2a8:	mov	r1, r7
    c2ac:	mov	r2, #256	; 0x100
    c2b0:	ldr	r3, [r0]
    c2b4:	mov	r0, r4
    c2b8:	bl	18d0 <fread@plt>
    c2bc:	mov	r1, r9
    c2c0:	mov	r2, #0
    c2c4:	ldr	r3, [r4, r2]
    c2c8:	str	r3, [sp, #24]
    c2cc:	add	r3, r4, r2
    c2d0:	add	r2, r2, #8
    c2d4:	ldr	r3, [r3, #4]
    c2d8:	cmp	r2, #512	; 0x200
    c2dc:	str	r3, [sp, #28]
    c2e0:	vld1.16	{d16}, [sl :64]
    c2e4:	vmovl.s16	q8, d16
    c2e8:	vst1.32	{d16-d17}, [r1]!
    c2ec:	bne	c2c4 <ReadInt32Data+0xdec>
    c2f0:	ldr	r2, [sp, #12]
    c2f4:	add	r5, r0, r5
    c2f8:	add	r0, r8, #256	; 0x100
    c2fc:	add	r9, r9, #1024	; 0x400
    c300:	add	r1, r6, #1024	; 0x400
    c304:	cmp	r0, r2
    c308:	blt	c29c <ReadInt32Data+0xdc4>
    c30c:	mov	r1, r7
    c310:	mov	r7, r5
    c314:	ldr	r5, [sp, #4]
    c318:	cmp	r0, r5
    c31c:	bge	ca04 <ReadInt32Data+0x152c>
    c320:	sub	r9, r5, r0
    c324:	ldr	r0, [sp, #20]
    c328:	add	r4, sp, #48	; 0x30
    c32c:	mov	r2, r9
    c330:	ldr	r3, [r0]
    c334:	mov	r0, r4
    c338:	bl	18d0 <fread@plt>
    c33c:	add	r7, r0, r7
    c340:	cmp	r9, #1
    c344:	blt	c9f4 <ReadInt32Data+0x151c>
    c348:	sub	r0, r5, r8
    c34c:	sub	r0, r0, #256	; 0x100
    c350:	ldrsh	r1, [r4], #2
    c354:	subs	r0, r0, #1
    c358:	str	r1, [r6], #4
    c35c:	bne	c350 <ReadInt32Data+0xe78>
    c360:	b	c9f4 <ReadInt32Data+0x151c>
    c364:	sub	r0, r5, #256	; 0x100
    c368:	str	r5, [sp, #4]
    c36c:	add	r1, r9, #1024	; 0x400
    c370:	add	r4, sp, #48	; 0x30
    c374:	add	sl, sp, #32
    c378:	mov	r5, #0
    c37c:	str	r0, [sp, #12]
    c380:	mov	r0, #0
    c384:	mov	r8, r0
    c388:	ldr	r0, [sp, #20]
    c38c:	mov	r6, r1
    c390:	mov	r1, r7
    c394:	mov	r2, #256	; 0x100
    c398:	ldr	r3, [r0]
    c39c:	mov	r0, r4
    c3a0:	bl	18d0 <fread@plt>
    c3a4:	mov	r1, r9
    c3a8:	mov	r2, #0
    c3ac:	ldr	r3, [r4, r2]
    c3b0:	str	r3, [sp, #32]
    c3b4:	add	r3, r4, r2
    c3b8:	add	r2, r2, #8
    c3bc:	ldr	r3, [r3, #4]
    c3c0:	cmp	r2, #512	; 0x200
    c3c4:	str	r3, [sp, #36]	; 0x24
    c3c8:	vld1.16	{d16}, [sl :64]
    c3cc:	vmovl.u16	q8, d16
    c3d0:	vst1.32	{d16-d17}, [r1]!
    c3d4:	bne	c3ac <ReadInt32Data+0xed4>
    c3d8:	ldr	r2, [sp, #12]
    c3dc:	add	r5, r0, r5
    c3e0:	add	r0, r8, #256	; 0x100
    c3e4:	add	r9, r9, #1024	; 0x400
    c3e8:	add	r1, r6, #1024	; 0x400
    c3ec:	cmp	r0, r2
    c3f0:	blt	c384 <ReadInt32Data+0xeac>
    c3f4:	mov	r1, r7
    c3f8:	mov	r7, r5
    c3fc:	ldr	r5, [sp, #4]
    c400:	cmp	r0, r5
    c404:	bge	ca04 <ReadInt32Data+0x152c>
    c408:	sub	r9, r5, r0
    c40c:	ldr	r0, [sp, #20]
    c410:	add	r4, sp, #48	; 0x30
    c414:	mov	r2, r9
    c418:	ldr	r3, [r0]
    c41c:	mov	r0, r4
    c420:	bl	18d0 <fread@plt>
    c424:	add	r7, r0, r7
    c428:	cmp	r9, #1
    c42c:	blt	c9f4 <ReadInt32Data+0x151c>
    c430:	sub	r0, r5, r8
    c434:	sub	r0, r0, #256	; 0x100
    c438:	ldrh	r1, [r4], #2
    c43c:	subs	r0, r0, #1
    c440:	str	r1, [r6], #4
    c444:	bne	c438 <ReadInt32Data+0xf60>
    c448:	b	c9f4 <ReadInt32Data+0x151c>
    c44c:	sub	r0, r5, #256	; 0x100
    c450:	lsl	r4, r5, #2
    c454:	str	r5, [sp, #4]
    c458:	mov	r6, #0
    c45c:	add	r8, sp, #48	; 0x30
    c460:	mov	r5, #0
    c464:	str	r0, [sp, #12]
    c468:	ldr	r3, [sl]
    c46c:	mov	r0, r8
    c470:	mov	r1, r7
    c474:	mov	r2, #256	; 0x100
    c478:	bl	18d0 <fread@plt>
    c47c:	mov	sl, r0
    c480:	add	r0, r9, r6, lsl #2
    c484:	mov	r1, r8
    c488:	mov	r2, #1024	; 0x400
    c48c:	bl	1834 <memcpy@plt>
    c490:	ldr	r0, [sp, #12]
    c494:	add	r5, sl, r5
    c498:	ldr	sl, [sp, #20]
    c49c:	add	r6, r6, #256	; 0x100
    c4a0:	sub	r4, r4, #1024	; 0x400
    c4a4:	cmp	r6, r0
    c4a8:	blt	c468 <ReadInt32Data+0xf90>
    c4ac:	ldr	r0, [sp, #4]
    c4b0:	cmp	r6, r0
    c4b4:	bge	c924 <ReadInt32Data+0x144c>
    c4b8:	ldr	r7, [sp, #16]
    c4bc:	ldr	r3, [sl]
    c4c0:	sub	r8, r0, r6
    c4c4:	add	r0, sp, #48	; 0x30
    c4c8:	mov	r2, r8
    c4cc:	mov	r1, r7
    c4d0:	bl	18d0 <fread@plt>
    c4d4:	add	r5, r0, r5
    c4d8:	cmp	r8, #1
    c4dc:	blt	ca0c <ReadInt32Data+0x1534>
    c4e0:	add	r0, r9, r6, lsl #2
    c4e4:	add	r1, sp, #48	; 0x30
    c4e8:	mov	r2, r4
    c4ec:	bl	1834 <memcpy@plt>
    c4f0:	b	ca0c <ReadInt32Data+0x1534>
    c4f4:	add	r1, r9, #1024	; 0x400
    c4f8:	sub	sl, r5, #256	; 0x100
    c4fc:	mov	r0, #0
    c500:	add	r4, sp, #48	; 0x30
    c504:	mov	r7, #0
    c508:	mov	r8, r0
    c50c:	ldr	r0, [sp, #20]
    c510:	mov	r6, r1
    c514:	ldr	r1, [sp, #16]
    c518:	mov	r2, #256	; 0x100
    c51c:	ldr	r3, [r0]
    c520:	mov	r0, r4
    c524:	bl	18d0 <fread@plt>
    c528:	mov	r1, #0
    c52c:	add	r2, r4, r1
    c530:	vld1.32	{d16-d17}, [r2]
    c534:	add	r2, r9, r1
    c538:	add	r1, r1, #16
    c53c:	cmp	r1, #1024	; 0x400
    c540:	vcvt.s32.f32	q8, q8
    c544:	vst1.32	{d16-d17}, [r2]
    c548:	bne	c52c <ReadInt32Data+0x1054>
    c54c:	add	r7, r0, r7
    c550:	add	r0, r8, #256	; 0x100
    c554:	add	r9, r9, #1024	; 0x400
    c558:	add	r1, r6, #1024	; 0x400
    c55c:	cmp	r0, sl
    c560:	blt	c508 <ReadInt32Data+0x1030>
    c564:	cmp	r0, r5
    c568:	bge	c9f4 <ReadInt32Data+0x151c>
    c56c:	sub	r9, r5, r0
    c570:	ldr	r0, [sp, #20]
    c574:	ldr	r1, [sp, #16]
    c578:	add	r4, sp, #48	; 0x30
    c57c:	mov	r2, r9
    c580:	ldr	r3, [r0]
    c584:	mov	r0, r4
    c588:	bl	18d0 <fread@plt>
    c58c:	add	r7, r0, r7
    c590:	cmp	r9, #1
    c594:	blt	c9f4 <ReadInt32Data+0x151c>
    c598:	sub	r0, r5, r8
    c59c:	sub	r0, r0, #256	; 0x100
    c5a0:	vldr	s0, [r4]
    c5a4:	add	r4, r4, #4
    c5a8:	subs	r0, r0, #1
    c5ac:	vcvt.s32.f32	s0, s0
    c5b0:	vmov	r1, s0
    c5b4:	str	r1, [r6], #4
    c5b8:	bne	c5a0 <ReadInt32Data+0x10c8>
    c5bc:	b	c9f4 <ReadInt32Data+0x151c>
    c5c0:	add	r1, r9, #1024	; 0x400
    c5c4:	str	r5, [sp, #4]
    c5c8:	sub	sl, r5, #256	; 0x100
    c5cc:	mov	r0, #0
    c5d0:	add	r4, sp, #48	; 0x30
    c5d4:	mov	r5, #0
    c5d8:	mov	r8, r0
    c5dc:	ldr	r0, [sp, #20]
    c5e0:	mov	r6, r1
    c5e4:	mov	r1, r7
    c5e8:	mov	r2, #256	; 0x100
    c5ec:	ldr	r3, [r0]
    c5f0:	mov	r0, r4
    c5f4:	bl	18d0 <fread@plt>
    c5f8:	mov	r1, #0
    c5fc:	mov	r2, r4
    c600:	vld1.64	{d16-d17}, [r2]!
    c604:	vcvt.s32.f64	s0, d16
    c608:	vmov	r3, s0
    c60c:	vcvt.s32.f64	s0, d17
    c610:	vmov.32	d16[0], r3
    c614:	vmov	r7, s0
    c618:	add	r3, r9, r1
    c61c:	add	r1, r1, #8
    c620:	cmp	r1, #1024	; 0x400
    c624:	vmov.32	d16[1], r7
    c628:	vstr	d16, [r3]
    c62c:	bne	c600 <ReadInt32Data+0x1128>
    c630:	ldr	r7, [sp, #16]
    c634:	add	r5, r0, r5
    c638:	add	r0, r8, #256	; 0x100
    c63c:	add	r9, r9, #1024	; 0x400
    c640:	add	r1, r6, #1024	; 0x400
    c644:	cmp	r0, sl
    c648:	blt	c5d8 <ReadInt32Data+0x1100>
    c64c:	mov	r1, r7
    c650:	mov	r7, r5
    c654:	ldr	r5, [sp, #4]
    c658:	cmp	r0, r5
    c65c:	bge	ca04 <ReadInt32Data+0x152c>
    c660:	sub	r9, r5, r0
    c664:	ldr	r0, [sp, #20]
    c668:	add	r4, sp, #48	; 0x30
    c66c:	mov	r2, r9
    c670:	ldr	r3, [r0]
    c674:	mov	r0, r4
    c678:	bl	18d0 <fread@plt>
    c67c:	add	r7, r0, r7
    c680:	cmp	r9, #1
    c684:	blt	c9f4 <ReadInt32Data+0x151c>
    c688:	sub	r0, r5, r8
    c68c:	sub	r0, r0, #256	; 0x100
    c690:	vldr	d16, [r4]
    c694:	add	r4, r4, #8
    c698:	subs	r0, r0, #1
    c69c:	vcvt.s32.f64	s0, d16
    c6a0:	vmov	r1, s0
    c6a4:	str	r1, [r6], #4
    c6a8:	bne	c690 <ReadInt32Data+0x11b8>
    c6ac:	b	c9f4 <ReadInt32Data+0x151c>
    c6b0:	add	r1, r9, #1024	; 0x400
    c6b4:	str	r5, [sp, #4]
    c6b8:	sub	r8, r5, #256	; 0x100
    c6bc:	mov	r0, #0
    c6c0:	add	r4, sp, #48	; 0x30
    c6c4:	mov	r7, r9
    c6c8:	mov	r5, #0
    c6cc:	str	r6, [sp]
    c6d0:	mov	sl, r0
    c6d4:	ldr	r0, [sp, #20]
    c6d8:	mov	r6, r1
    c6dc:	ldr	r1, [sp, #16]
    c6e0:	mov	r2, #256	; 0x100
    c6e4:	ldr	r3, [r0]
    c6e8:	mov	r0, r4
    c6ec:	bl	18d0 <fread@plt>
    c6f0:	mov	r1, #0
    c6f4:	mov	r2, r4
    c6f8:	vld1.64	{d16-d17}, [r2]!
    c6fc:	add	r3, r7, r1
    c700:	add	r1, r1, #8
    c704:	cmp	r1, #1024	; 0x400
    c708:	vmovn.i64	d16, q8
    c70c:	vstr	d16, [r3]
    c710:	bne	c6f8 <ReadInt32Data+0x1220>
    c714:	add	r5, r0, r5
    c718:	add	r0, sl, #256	; 0x100
    c71c:	add	r7, r7, #1024	; 0x400
    c720:	add	r1, r6, #1024	; 0x400
    c724:	cmp	r0, r8
    c728:	blt	c6d0 <ReadInt32Data+0x11f8>
    c72c:	mov	r8, r5
    c730:	ldr	r5, [sp, #4]
    c734:	cmp	r0, r5
    c738:	bge	c78c <ReadInt32Data+0x12b4>
    c73c:	sub	r2, r5, r0
    c740:	ldr	r0, [sp, #20]
    c744:	ldr	r7, [sp, #16]
    c748:	add	r4, sp, #48	; 0x30
    c74c:	str	r2, [sp, #12]
    c750:	ldr	r3, [r0]
    c754:	mov	r0, r4
    c758:	mov	r1, r7
    c75c:	bl	18d0 <fread@plt>
    c760:	add	r8, r0, r8
    c764:	ldr	r0, [sp, #12]
    c768:	cmp	r0, #1
    c76c:	blt	c790 <ReadInt32Data+0x12b8>
    c770:	sub	r0, r5, sl
    c774:	sub	r0, r0, #256	; 0x100
    c778:	ldr	r1, [r4], #8
    c77c:	subs	r0, r0, #1
    c780:	str	r1, [r6], #4
    c784:	bne	c778 <ReadInt32Data+0x12a0>
    c788:	b	c790 <ReadInt32Data+0x12b8>
    c78c:	ldr	r7, [sp, #16]
    c790:	ldr	sl, [sp, #20]
    c794:	ldr	r6, [sp]
    c798:	cmp	r6, #13
    c79c:	bne	c830 <ReadInt32Data+0x1358>
    c7a0:	ldr	r0, [sl, #20]
    c7a4:	cmp	r0, #0
    c7a8:	beq	c7f4 <ReadInt32Data+0x131c>
    c7ac:	cmp	r5, #256	; 0x100
    c7b0:	bgt	c838 <ReadInt32Data+0x1360>
    c7b4:	ldr	r3, [sl]
    c7b8:	add	r4, sp, #48	; 0x30
    c7bc:	mov	r1, r7
    c7c0:	mov	r2, r5
    c7c4:	mov	r0, r4
    c7c8:	bl	18d0 <fread@plt>
    c7cc:	add	r8, r0, r8
    c7d0:	cmp	r5, #1
    c7d4:	blt	c830 <ReadInt32Data+0x1358>
    c7d8:	mov	r0, r4
    c7dc:	bl	1c0c <Mat_uint64Swap>
    c7e0:	str	r0, [r9], #4
    c7e4:	add	r4, r4, #8
    c7e8:	subs	r5, r5, #1
    c7ec:	bne	c7d8 <ReadInt32Data+0x1300>
    c7f0:	b	c830 <ReadInt32Data+0x1358>
    c7f4:	cmp	r5, #256	; 0x100
    c7f8:	bgt	c92c <ReadInt32Data+0x1454>
    c7fc:	ldr	r3, [sl]
    c800:	add	r4, sp, #48	; 0x30
    c804:	mov	r1, r7
    c808:	mov	r2, r5
    c80c:	mov	r0, r4
    c810:	bl	18d0 <fread@plt>
    c814:	add	r8, r0, r8
    c818:	cmp	r5, #1
    c81c:	blt	c830 <ReadInt32Data+0x1358>
    c820:	ldr	r0, [r4], #8
    c824:	subs	r5, r5, #1
    c828:	str	r0, [r9], #4
    c82c:	bne	c820 <ReadInt32Data+0x1348>
    c830:	mov	r5, r8
    c834:	b	ca0c <ReadInt32Data+0x1534>
    c838:	sub	r0, r5, #256	; 0x100
    c83c:	str	r5, [sp, #4]
    c840:	add	r1, r9, #1024	; 0x400
    c844:	mov	r5, r8
    c848:	str	r0, [sp, #12]
    c84c:	mov	r0, #0
    c850:	mov	sl, r0
    c854:	ldr	r0, [sp, #20]
    c858:	add	r6, sp, #48	; 0x30
    c85c:	mov	r8, r1
    c860:	mov	r1, r7
    c864:	mov	r2, #256	; 0x100
    c868:	ldr	r3, [r0]
    c86c:	mov	r0, r6
    c870:	bl	18d0 <fread@plt>
    c874:	mov	r4, r0
    c878:	mov	r7, #0
    c87c:	mov	r0, r6
    c880:	bl	1c0c <Mat_uint64Swap>
    c884:	str	r0, [r9, r7, lsl #2]
    c888:	add	r7, r7, #1
    c88c:	add	r6, r6, #8
    c890:	cmp	r7, #256	; 0x100
    c894:	bne	c87c <ReadInt32Data+0x13a4>
    c898:	ldr	r2, [sp, #12]
    c89c:	ldr	r7, [sp, #16]
    c8a0:	add	r0, sl, #256	; 0x100
    c8a4:	add	r5, r4, r5
    c8a8:	add	r9, r9, #1024	; 0x400
    c8ac:	add	r1, r8, #1024	; 0x400
    c8b0:	cmp	r0, r2
    c8b4:	blt	c850 <ReadInt32Data+0x1378>
    c8b8:	mov	r9, r7
    c8bc:	mov	r7, r5
    c8c0:	ldr	r5, [sp, #4]
    c8c4:	cmp	r0, r5
    c8c8:	bge	c918 <ReadInt32Data+0x1440>
    c8cc:	sub	r6, r5, r0
    c8d0:	ldr	r0, [sp, #20]
    c8d4:	add	r4, sp, #48	; 0x30
    c8d8:	mov	r1, r9
    c8dc:	mov	r2, r6
    c8e0:	ldr	r3, [r0]
    c8e4:	mov	r0, r4
    c8e8:	bl	18d0 <fread@plt>
    c8ec:	add	r7, r0, r7
    c8f0:	cmp	r6, #1
    c8f4:	blt	c918 <ReadInt32Data+0x1440>
    c8f8:	sub	r0, r5, sl
    c8fc:	sub	r6, r0, #256	; 0x100
    c900:	mov	r0, r4
    c904:	bl	1c0c <Mat_uint64Swap>
    c908:	str	r0, [r8], #4
    c90c:	add	r4, r4, #8
    c910:	subs	r6, r6, #1
    c914:	bne	c900 <ReadInt32Data+0x1428>
    c918:	mov	r5, r7
    c91c:	mov	r7, r9
    c920:	b	ca0c <ReadInt32Data+0x1534>
    c924:	ldr	r7, [sp, #16]
    c928:	b	ca0c <ReadInt32Data+0x1534>
    c92c:	add	r1, r9, #1024	; 0x400
    c930:	str	r5, [sp, #4]
    c934:	sub	sl, r5, #256	; 0x100
    c938:	mov	r0, #0
    c93c:	add	r4, sp, #48	; 0x30
    c940:	mov	r5, r8
    c944:	mov	r8, r0
    c948:	ldr	r0, [sp, #20]
    c94c:	mov	r6, r1
    c950:	mov	r1, r7
    c954:	mov	r2, #256	; 0x100
    c958:	ldr	r3, [r0]
    c95c:	mov	r0, r4
    c960:	bl	18d0 <fread@plt>
    c964:	mov	r1, #0
    c968:	mov	r2, r4
    c96c:	vld1.64	{d16-d17}, [r2]!
    c970:	add	r3, r9, r1
    c974:	add	r1, r1, #8
    c978:	cmp	r1, #1024	; 0x400
    c97c:	vmovn.i64	d16, q8
    c980:	vstr	d16, [r3]
    c984:	bne	c96c <ReadInt32Data+0x1494>
    c988:	add	r5, r0, r5
    c98c:	add	r0, r8, #256	; 0x100
    c990:	add	r9, r9, #1024	; 0x400
    c994:	add	r1, r6, #1024	; 0x400
    c998:	cmp	r0, sl
    c99c:	blt	c944 <ReadInt32Data+0x146c>
    c9a0:	mov	r1, r7
    c9a4:	mov	r7, r5
    c9a8:	ldr	r5, [sp, #4]
    c9ac:	cmp	r0, r5
    c9b0:	bge	ca04 <ReadInt32Data+0x152c>
    c9b4:	sub	r9, r5, r0
    c9b8:	ldr	r0, [sp, #20]
    c9bc:	add	r4, sp, #48	; 0x30
    c9c0:	mov	r2, r9
    c9c4:	ldr	r3, [r0]
    c9c8:	mov	r0, r4
    c9cc:	bl	18d0 <fread@plt>
    c9d0:	add	r7, r0, r7
    c9d4:	cmp	r9, #1
    c9d8:	blt	c9f4 <ReadInt32Data+0x151c>
    c9dc:	sub	r0, r5, r8
    c9e0:	sub	r0, r0, #256	; 0x100
    c9e4:	ldr	r1, [r4], #8
    c9e8:	subs	r0, r0, #1
    c9ec:	str	r1, [r6], #4
    c9f0:	bne	c9e4 <ReadInt32Data+0x150c>
    c9f4:	ldr	r0, [sp, #16]
    c9f8:	mov	r5, r7
    c9fc:	mov	r7, r0
    ca00:	b	ca0c <ReadInt32Data+0x1534>
    ca04:	mov	r5, r7
    ca08:	mov	r7, r1
    ca0c:	mul	r0, r5, r7
    ca10:	b	b500 <ReadInt32Data+0x28>

0000ca14 <ReadCompressedInt32Data>:
    ca14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca18:	add	fp, sp, #28
    ca1c:	sub	sp, sp, #12
    ca20:	mov	r7, r0
    ca24:	mov	r0, #0
    ca28:	cmp	r1, #0
    ca2c:	beq	cf34 <ReadCompressedInt32Data+0x520>
    ca30:	cmp	r7, #0
    ca34:	movne	r5, r2
    ca38:	cmpne	r2, #0
    ca3c:	beq	cf34 <ReadCompressedInt32Data+0x520>
    ca40:	ldr	sl, [fp, #8]
    ca44:	mov	r0, r3
    ca48:	mov	r4, r3
    ca4c:	mov	r6, r1
    ca50:	bl	193c <Mat_SizeOf@plt>
    ca54:	mov	r9, r0
    ca58:	sub	r0, r4, #1
    ca5c:	cmp	r0, #12
    ca60:	bhi	cf30 <ReadCompressedInt32Data+0x51c>
    ca64:	add	r1, pc, #4
    ca68:	ldr	r0, [r1, r0, lsl #2]
    ca6c:	add	pc, r1, r0
    ca70:	.word	0x00000034
    ca74:	.word	0x0000006c
    ca78:	.word	0x000000a4
    ca7c:	.word	0x000000ec
    ca80:	.word	0x00000134
    ca84:	.word	0x0000017c
    ca88:	.word	0x000001c4
    ca8c:	.word	0x000004c0
    ca90:	.word	0x00000214
    ca94:	.word	0x000004c0
    ca98:	.word	0x000004c0
    ca9c:	.word	0x00000264
    caa0:	.word	0x000002ac
    caa4:	cmp	sl, #1
    caa8:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    caac:	mov	r8, sp
    cab0:	mov	r4, sl
    cab4:	mov	r0, r7
    cab8:	mov	r1, r6
    cabc:	mov	r2, r8
    cac0:	mov	r3, r9
    cac4:	bl	31dc <InflateData>
    cac8:	ldrsb	r0, [sp]
    cacc:	subs	r4, r4, #1
    cad0:	str	r0, [r5], #4
    cad4:	bne	cab4 <ReadCompressedInt32Data+0xa0>
    cad8:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cadc:	cmp	sl, #1
    cae0:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cae4:	mov	r8, sp
    cae8:	mov	r4, sl
    caec:	mov	r0, r7
    caf0:	mov	r1, r6
    caf4:	mov	r2, r8
    caf8:	mov	r3, r9
    cafc:	bl	31dc <InflateData>
    cb00:	ldrb	r0, [sp]
    cb04:	subs	r4, r4, #1
    cb08:	str	r0, [r5], #4
    cb0c:	bne	caec <ReadCompressedInt32Data+0xd8>
    cb10:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cb14:	ldr	r0, [r7, #20]
    cb18:	cmp	r0, #0
    cb1c:	beq	cd64 <ReadCompressedInt32Data+0x350>
    cb20:	cmp	sl, #1
    cb24:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cb28:	mov	r8, sp
    cb2c:	mov	r4, sl
    cb30:	mov	r0, r7
    cb34:	mov	r1, r6
    cb38:	mov	r2, r8
    cb3c:	mov	r3, r9
    cb40:	bl	31dc <InflateData>
    cb44:	mov	r0, r8
    cb48:	bl	1c58 <Mat_int16Swap>
    cb4c:	str	r0, [r5], #4
    cb50:	subs	r4, r4, #1
    cb54:	bne	cb30 <ReadCompressedInt32Data+0x11c>
    cb58:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cb5c:	ldr	r0, [r7, #20]
    cb60:	cmp	r0, #0
    cb64:	beq	cd9c <ReadCompressedInt32Data+0x388>
    cb68:	cmp	sl, #1
    cb6c:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cb70:	mov	r8, sp
    cb74:	mov	r4, sl
    cb78:	mov	r0, r7
    cb7c:	mov	r1, r6
    cb80:	mov	r2, r8
    cb84:	mov	r3, r9
    cb88:	bl	31dc <InflateData>
    cb8c:	mov	r0, r8
    cb90:	bl	1c6c <Mat_uint16Swap>
    cb94:	str	r0, [r5], #4
    cb98:	subs	r4, r4, #1
    cb9c:	bne	cb78 <ReadCompressedInt32Data+0x164>
    cba0:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cba4:	ldr	r0, [r7, #20]
    cba8:	cmp	r0, #0
    cbac:	beq	cdd4 <ReadCompressedInt32Data+0x3c0>
    cbb0:	cmp	sl, #1
    cbb4:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cbb8:	mov	r8, sp
    cbbc:	mov	r4, sl
    cbc0:	mov	r0, r7
    cbc4:	mov	r1, r6
    cbc8:	mov	r2, r8
    cbcc:	mov	r3, r9
    cbd0:	bl	31dc <InflateData>
    cbd4:	mov	r0, r8
    cbd8:	bl	1c30 <Mat_int32Swap>
    cbdc:	str	r0, [r5], #4
    cbe0:	subs	r4, r4, #1
    cbe4:	bne	cbc0 <ReadCompressedInt32Data+0x1ac>
    cbe8:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cbec:	ldr	r0, [r7, #20]
    cbf0:	cmp	r0, #0
    cbf4:	beq	ce0c <ReadCompressedInt32Data+0x3f8>
    cbf8:	cmp	sl, #1
    cbfc:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cc00:	mov	r8, sp
    cc04:	mov	r4, sl
    cc08:	mov	r0, r7
    cc0c:	mov	r1, r6
    cc10:	mov	r2, r8
    cc14:	mov	r3, r9
    cc18:	bl	31dc <InflateData>
    cc1c:	mov	r0, r8
    cc20:	bl	1c44 <Mat_uint32Swap>
    cc24:	str	r0, [r5], #4
    cc28:	subs	r4, r4, #1
    cc2c:	bne	cc08 <ReadCompressedInt32Data+0x1f4>
    cc30:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cc34:	ldr	r0, [r7, #20]
    cc38:	cmp	r0, #0
    cc3c:	beq	ce44 <ReadCompressedInt32Data+0x430>
    cc40:	cmp	sl, #1
    cc44:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cc48:	mov	r8, sp
    cc4c:	mov	r4, sl
    cc50:	mov	r0, r7
    cc54:	mov	r1, r6
    cc58:	mov	r2, r8
    cc5c:	mov	r3, r9
    cc60:	bl	31dc <InflateData>
    cc64:	mov	r0, r8
    cc68:	bl	1c84 <Mat_floatSwap>
    cc6c:	vcvt.s32.f32	s0, s0
    cc70:	subs	r4, r4, #1
    cc74:	vmov	r0, s0
    cc78:	str	r0, [r5], #4
    cc7c:	bne	cc50 <ReadCompressedInt32Data+0x23c>
    cc80:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cc84:	ldr	r0, [r7, #20]
    cc88:	cmp	r0, #0
    cc8c:	beq	ce84 <ReadCompressedInt32Data+0x470>
    cc90:	cmp	sl, #1
    cc94:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cc98:	mov	r8, sp
    cc9c:	mov	r4, sl
    cca0:	mov	r0, r7
    cca4:	mov	r1, r6
    cca8:	mov	r2, r8
    ccac:	mov	r3, r9
    ccb0:	bl	31dc <InflateData>
    ccb4:	mov	r0, r8
    ccb8:	bl	1cc8 <Mat_doubleSwap>
    ccbc:	vcvt.s32.f64	s0, d0
    ccc0:	subs	r4, r4, #1
    ccc4:	vmov	r0, s0
    ccc8:	str	r0, [r5], #4
    cccc:	bne	cca0 <ReadCompressedInt32Data+0x28c>
    ccd0:	b	cf30 <ReadCompressedInt32Data+0x51c>
    ccd4:	ldr	r0, [r7, #20]
    ccd8:	cmp	r0, #0
    ccdc:	beq	cec4 <ReadCompressedInt32Data+0x4b0>
    cce0:	cmp	sl, #1
    cce4:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cce8:	mov	r8, sp
    ccec:	mov	r4, sl
    ccf0:	mov	r0, r7
    ccf4:	mov	r1, r6
    ccf8:	mov	r2, r8
    ccfc:	mov	r3, r9
    cd00:	bl	31dc <InflateData>
    cd04:	mov	r0, r8
    cd08:	bl	1bbc <Mat_int64Swap>
    cd0c:	str	r0, [r5], #4
    cd10:	subs	r4, r4, #1
    cd14:	bne	ccf0 <ReadCompressedInt32Data+0x2dc>
    cd18:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cd1c:	ldr	r0, [r7, #20]
    cd20:	cmp	r0, #0
    cd24:	beq	cefc <ReadCompressedInt32Data+0x4e8>
    cd28:	cmp	sl, #1
    cd2c:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cd30:	mov	r8, sp
    cd34:	mov	r4, sl
    cd38:	mov	r0, r7
    cd3c:	mov	r1, r6
    cd40:	mov	r2, r8
    cd44:	mov	r3, r9
    cd48:	bl	31dc <InflateData>
    cd4c:	mov	r0, r8
    cd50:	bl	1c0c <Mat_uint64Swap>
    cd54:	str	r0, [r5], #4
    cd58:	subs	r4, r4, #1
    cd5c:	bne	cd38 <ReadCompressedInt32Data+0x324>
    cd60:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cd64:	cmp	sl, #1
    cd68:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cd6c:	mov	r8, sp
    cd70:	mov	r4, sl
    cd74:	mov	r0, r7
    cd78:	mov	r1, r6
    cd7c:	mov	r2, r8
    cd80:	mov	r3, r9
    cd84:	bl	31dc <InflateData>
    cd88:	ldrsh	r0, [sp]
    cd8c:	subs	r4, r4, #1
    cd90:	str	r0, [r5], #4
    cd94:	bne	cd74 <ReadCompressedInt32Data+0x360>
    cd98:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cd9c:	cmp	sl, #1
    cda0:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cda4:	mov	r8, sp
    cda8:	mov	r4, sl
    cdac:	mov	r0, r7
    cdb0:	mov	r1, r6
    cdb4:	mov	r2, r8
    cdb8:	mov	r3, r9
    cdbc:	bl	31dc <InflateData>
    cdc0:	ldrh	r0, [sp]
    cdc4:	subs	r4, r4, #1
    cdc8:	str	r0, [r5], #4
    cdcc:	bne	cdac <ReadCompressedInt32Data+0x398>
    cdd0:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cdd4:	cmp	sl, #1
    cdd8:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cddc:	mov	r8, sp
    cde0:	mov	r4, sl
    cde4:	mov	r0, r7
    cde8:	mov	r1, r6
    cdec:	mov	r2, r8
    cdf0:	mov	r3, r9
    cdf4:	bl	31dc <InflateData>
    cdf8:	ldr	r0, [sp]
    cdfc:	subs	r4, r4, #1
    ce00:	str	r0, [r5], #4
    ce04:	bne	cde4 <ReadCompressedInt32Data+0x3d0>
    ce08:	b	cf30 <ReadCompressedInt32Data+0x51c>
    ce0c:	cmp	sl, #1
    ce10:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    ce14:	mov	r8, sp
    ce18:	mov	r4, sl
    ce1c:	mov	r0, r7
    ce20:	mov	r1, r6
    ce24:	mov	r2, r8
    ce28:	mov	r3, r9
    ce2c:	bl	31dc <InflateData>
    ce30:	ldr	r0, [sp]
    ce34:	subs	r4, r4, #1
    ce38:	str	r0, [r5], #4
    ce3c:	bne	ce1c <ReadCompressedInt32Data+0x408>
    ce40:	b	cf30 <ReadCompressedInt32Data+0x51c>
    ce44:	cmp	sl, #1
    ce48:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    ce4c:	mov	r8, sp
    ce50:	mov	r4, sl
    ce54:	mov	r0, r7
    ce58:	mov	r1, r6
    ce5c:	mov	r2, r8
    ce60:	mov	r3, r9
    ce64:	bl	31dc <InflateData>
    ce68:	vldr	s0, [sp]
    ce6c:	subs	r4, r4, #1
    ce70:	vcvt.s32.f32	s0, s0
    ce74:	vmov	r0, s0
    ce78:	str	r0, [r5], #4
    ce7c:	bne	ce54 <ReadCompressedInt32Data+0x440>
    ce80:	b	cf30 <ReadCompressedInt32Data+0x51c>
    ce84:	cmp	sl, #1
    ce88:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    ce8c:	mov	r8, sp
    ce90:	mov	r4, sl
    ce94:	mov	r0, r7
    ce98:	mov	r1, r6
    ce9c:	mov	r2, r8
    cea0:	mov	r3, r9
    cea4:	bl	31dc <InflateData>
    cea8:	vldr	d16, [sp]
    ceac:	subs	r4, r4, #1
    ceb0:	vcvt.s32.f64	s0, d16
    ceb4:	vmov	r0, s0
    ceb8:	str	r0, [r5], #4
    cebc:	bne	ce94 <ReadCompressedInt32Data+0x480>
    cec0:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cec4:	cmp	sl, #1
    cec8:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cecc:	mov	r8, sp
    ced0:	mov	r4, sl
    ced4:	mov	r0, r7
    ced8:	mov	r1, r6
    cedc:	mov	r2, r8
    cee0:	mov	r3, r9
    cee4:	bl	31dc <InflateData>
    cee8:	ldr	r0, [sp]
    ceec:	subs	r4, r4, #1
    cef0:	str	r0, [r5], #4
    cef4:	bne	ced4 <ReadCompressedInt32Data+0x4c0>
    cef8:	b	cf30 <ReadCompressedInt32Data+0x51c>
    cefc:	cmp	sl, #1
    cf00:	blt	cf30 <ReadCompressedInt32Data+0x51c>
    cf04:	mov	r8, sp
    cf08:	mov	r4, sl
    cf0c:	mov	r0, r7
    cf10:	mov	r1, r6
    cf14:	mov	r2, r8
    cf18:	mov	r3, r9
    cf1c:	bl	31dc <InflateData>
    cf20:	ldr	r0, [sp]
    cf24:	subs	r4, r4, #1
    cf28:	str	r0, [r5], #4
    cf2c:	bne	cf0c <ReadCompressedInt32Data+0x4f8>
    cf30:	mul	r0, r9, sl
    cf34:	sub	sp, fp, #28
    cf38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cf3c <ReadUInt32Data>:
    cf3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf40:	add	fp, sp, #28
    cf44:	sub	sp, sp, #52	; 0x34
    cf48:	sub	sp, sp, #2048	; 0x800
    cf4c:	mov	sl, r0
    cf50:	mov	r0, #0
    cf54:	cmp	sl, #0
    cf58:	movne	r9, r1
    cf5c:	cmpne	r1, #0
    cf60:	bne	cf6c <ReadUInt32Data+0x30>
    cf64:	sub	sp, fp, #28
    cf68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cf6c:	ldr	r1, [sl]
    cf70:	cmp	r1, #0
    cf74:	beq	cf64 <ReadUInt32Data+0x28>
    cf78:	mov	r0, r2
    cf7c:	mov	r5, r3
    cf80:	mov	r6, r2
    cf84:	bl	193c <Mat_SizeOf@plt>
    cf88:	mov	r7, r0
    cf8c:	sub	r0, r6, #1
    cf90:	mov	r8, #0
    cf94:	str	sl, [sp, #20]
    cf98:	cmp	r0, #11
    cf9c:	str	r7, [sp, #16]
    cfa0:	bhi	e1fc <ReadUInt32Data+0x12c0>
    cfa4:	add	r1, pc, #4
    cfa8:	ldr	r0, [r1, r0, lsl #2]
    cfac:	add	pc, r1, r0
    cfb0:	.word	0x00000030
    cfb4:	.word	0x0000006c
    cfb8:	.word	0x000000a8
    cfbc:	.word	0x000000fc
    cfc0:	.word	0x00000150
    cfc4:	.word	0x000001a4
    cfc8:	.word	0x000001f8
    cfcc:	.word	0x0000124c
    cfd0:	.word	0x00000254
    cfd4:	.word	0x0000124c
    cfd8:	.word	0x0000124c
    cfdc:	.word	0x000002b4
    cfe0:	cmp	r5, #256	; 0x100
    cfe4:	bgt	d2c4 <ReadUInt32Data+0x388>
    cfe8:	ldr	r3, [sl]
    cfec:	add	r4, sp, #48	; 0x30
    cff0:	mov	r1, r7
    cff4:	mov	r2, r5
    cff8:	mov	r0, r4
    cffc:	bl	18d0 <fread@plt>
    d000:	cmp	r5, #1
    d004:	blt	d634 <ReadUInt32Data+0x6f8>
    d008:	ldrsb	r1, [r4], #1
    d00c:	subs	r5, r5, #1
    d010:	str	r1, [r9], #4
    d014:	bne	d008 <ReadUInt32Data+0xcc>
    d018:	b	d634 <ReadUInt32Data+0x6f8>
    d01c:	cmp	r5, #256	; 0x100
    d020:	bgt	d3a4 <ReadUInt32Data+0x468>
    d024:	ldr	r3, [sl]
    d028:	add	r4, sp, #48	; 0x30
    d02c:	mov	r1, r7
    d030:	mov	r2, r5
    d034:	mov	r0, r4
    d038:	bl	18d0 <fread@plt>
    d03c:	cmp	r5, #1
    d040:	blt	d634 <ReadUInt32Data+0x6f8>
    d044:	ldrb	r1, [r4], #1
    d048:	subs	r5, r5, #1
    d04c:	str	r1, [r9], #4
    d050:	bne	d044 <ReadUInt32Data+0x108>
    d054:	b	d634 <ReadUInt32Data+0x6f8>
    d058:	ldr	r0, [sl, #20]
    d05c:	cmp	r0, #0
    d060:	beq	d484 <ReadUInt32Data+0x548>
    d064:	cmp	r5, #256	; 0x100
    d068:	bgt	d684 <ReadUInt32Data+0x748>
    d06c:	ldr	r3, [sl]
    d070:	add	r4, sp, #48	; 0x30
    d074:	mov	r1, r7
    d078:	mov	r2, r5
    d07c:	mov	r0, r4
    d080:	bl	18d0 <fread@plt>
    d084:	mov	r6, r0
    d088:	cmp	r5, #1
    d08c:	blt	d25c <ReadUInt32Data+0x320>
    d090:	mov	r0, r4
    d094:	bl	1c58 <Mat_int16Swap>
    d098:	str	r0, [r9], #4
    d09c:	add	r4, r4, #2
    d0a0:	subs	r5, r5, #1
    d0a4:	bne	d090 <ReadUInt32Data+0x154>
    d0a8:	b	d25c <ReadUInt32Data+0x320>
    d0ac:	ldr	r0, [sl, #20]
    d0b0:	cmp	r0, #0
    d0b4:	beq	d4c0 <ReadUInt32Data+0x584>
    d0b8:	cmp	r5, #256	; 0x100
    d0bc:	bgt	d764 <ReadUInt32Data+0x828>
    d0c0:	ldr	r3, [sl]
    d0c4:	add	r4, sp, #48	; 0x30
    d0c8:	mov	r1, r7
    d0cc:	mov	r2, r5
    d0d0:	mov	r0, r4
    d0d4:	bl	18d0 <fread@plt>
    d0d8:	mov	r6, r0
    d0dc:	cmp	r5, #1
    d0e0:	blt	d25c <ReadUInt32Data+0x320>
    d0e4:	mov	r0, r4
    d0e8:	bl	1c6c <Mat_uint16Swap>
    d0ec:	str	r0, [r9], #4
    d0f0:	add	r4, r4, #2
    d0f4:	subs	r5, r5, #1
    d0f8:	bne	d0e4 <ReadUInt32Data+0x1a8>
    d0fc:	b	d25c <ReadUInt32Data+0x320>
    d100:	ldr	r0, [sl, #20]
    d104:	cmp	r0, #0
    d108:	beq	d4fc <ReadUInt32Data+0x5c0>
    d10c:	cmp	r5, #256	; 0x100
    d110:	bgt	d844 <ReadUInt32Data+0x908>
    d114:	ldr	r3, [sl]
    d118:	add	r4, sp, #48	; 0x30
    d11c:	mov	r1, r7
    d120:	mov	r2, r5
    d124:	mov	r0, r4
    d128:	bl	18d0 <fread@plt>
    d12c:	mov	r6, r0
    d130:	cmp	r5, #1
    d134:	blt	d25c <ReadUInt32Data+0x320>
    d138:	mov	r0, r4
    d13c:	bl	1c30 <Mat_int32Swap>
    d140:	str	r0, [r9], #4
    d144:	add	r4, r4, #4
    d148:	subs	r5, r5, #1
    d14c:	bne	d138 <ReadUInt32Data+0x1fc>
    d150:	b	d25c <ReadUInt32Data+0x320>
    d154:	ldr	r0, [sl, #20]
    d158:	cmp	r0, #0
    d15c:	beq	d568 <ReadUInt32Data+0x62c>
    d160:	cmp	r5, #256	; 0x100
    d164:	bgt	d924 <ReadUInt32Data+0x9e8>
    d168:	ldr	r3, [sl]
    d16c:	add	r4, sp, #48	; 0x30
    d170:	mov	r1, r7
    d174:	mov	r2, r5
    d178:	mov	r0, r4
    d17c:	bl	18d0 <fread@plt>
    d180:	mov	r6, r0
    d184:	cmp	r5, #1
    d188:	blt	d25c <ReadUInt32Data+0x320>
    d18c:	mov	r0, r4
    d190:	bl	1c44 <Mat_uint32Swap>
    d194:	str	r0, [r9], #4
    d198:	add	r4, r4, #4
    d19c:	subs	r5, r5, #1
    d1a0:	bne	d18c <ReadUInt32Data+0x250>
    d1a4:	b	d25c <ReadUInt32Data+0x320>
    d1a8:	ldr	r0, [sl, #20]
    d1ac:	cmp	r0, #0
    d1b0:	beq	d5a8 <ReadUInt32Data+0x66c>
    d1b4:	cmp	r5, #256	; 0x100
    d1b8:	bgt	da04 <ReadUInt32Data+0xac8>
    d1bc:	ldr	r3, [sl]
    d1c0:	add	r4, sp, #48	; 0x30
    d1c4:	mov	r1, r7
    d1c8:	mov	r2, r5
    d1cc:	mov	r0, r4
    d1d0:	bl	18d0 <fread@plt>
    d1d4:	mov	r6, r0
    d1d8:	cmp	r5, #1
    d1dc:	blt	d25c <ReadUInt32Data+0x320>
    d1e0:	mov	r0, r4
    d1e4:	bl	1c84 <Mat_floatSwap>
    d1e8:	vcvt.u32.f32	s0, s0
    d1ec:	add	r4, r4, #4
    d1f0:	subs	r5, r5, #1
    d1f4:	vmov	r0, s0
    d1f8:	str	r0, [r9], #4
    d1fc:	bne	d1e0 <ReadUInt32Data+0x2a4>
    d200:	b	d25c <ReadUInt32Data+0x320>
    d204:	ldr	r0, [sl, #20]
    d208:	cmp	r0, #0
    d20c:	beq	d5f0 <ReadUInt32Data+0x6b4>
    d210:	cmp	r5, #256	; 0x100
    d214:	bgt	daf4 <ReadUInt32Data+0xbb8>
    d218:	ldr	r3, [sl]
    d21c:	add	r4, sp, #48	; 0x30
    d220:	mov	r1, r7
    d224:	mov	r2, r5
    d228:	mov	r0, r4
    d22c:	bl	18d0 <fread@plt>
    d230:	mov	r6, r0
    d234:	cmp	r5, #1
    d238:	blt	d25c <ReadUInt32Data+0x320>
    d23c:	mov	r0, r4
    d240:	bl	1cc8 <Mat_doubleSwap>
    d244:	vcvt.u32.f64	s0, d0
    d248:	add	r4, r4, #8
    d24c:	subs	r5, r5, #1
    d250:	vmov	r0, s0
    d254:	str	r0, [r9], #4
    d258:	bne	d23c <ReadUInt32Data+0x300>
    d25c:	mov	r5, r6
    d260:	b	e470 <ReadUInt32Data+0x1534>
    d264:	ldr	r0, [sl, #20]
    d268:	cmp	r0, #0
    d26c:	beq	d63c <ReadUInt32Data+0x700>
    d270:	cmp	r5, #256	; 0x100
    d274:	bgt	dbe8 <ReadUInt32Data+0xcac>
    d278:	ldr	r3, [sl]
    d27c:	add	r4, sp, #48	; 0x30
    d280:	mov	r1, r7
    d284:	mov	r2, r5
    d288:	mov	r0, r4
    d28c:	bl	18d0 <fread@plt>
    d290:	mov	r8, r0
    d294:	cmp	r5, #1
    d298:	blt	e1fc <ReadUInt32Data+0x12c0>
    d29c:	str	r6, [sp]
    d2a0:	mov	r6, r9
    d2a4:	mov	r7, r5
    d2a8:	mov	r0, r4
    d2ac:	bl	1bbc <Mat_int64Swap>
    d2b0:	str	r0, [r6], #4
    d2b4:	add	r4, r4, #8
    d2b8:	subs	r7, r7, #1
    d2bc:	bne	d2a8 <ReadUInt32Data+0x36c>
    d2c0:	b	dcd8 <ReadUInt32Data+0xd9c>
    d2c4:	sub	r0, r5, #256	; 0x100
    d2c8:	str	r5, [sp, #4]
    d2cc:	add	r1, r9, #1024	; 0x400
    d2d0:	add	r4, sp, #48	; 0x30
    d2d4:	add	sl, sp, #40	; 0x28
    d2d8:	mov	r5, #0
    d2dc:	str	r0, [sp, #12]
    d2e0:	mov	r0, #0
    d2e4:	mov	r8, r0
    d2e8:	ldr	r0, [sp, #20]
    d2ec:	mov	r6, r1
    d2f0:	mov	r1, r7
    d2f4:	mov	r2, #256	; 0x100
    d2f8:	ldr	r3, [r0]
    d2fc:	mov	r0, r4
    d300:	bl	18d0 <fread@plt>
    d304:	mov	r1, r9
    d308:	mov	r2, #0
    d30c:	ldr	r3, [r4, r2]
    d310:	add	r2, r2, #4
    d314:	cmp	r2, #256	; 0x100
    d318:	str	r3, [sp, #40]	; 0x28
    d31c:	vld1.32	{d16[0]}, [sl :32]
    d320:	vmovl.s8	q8, d16
    d324:	vmovl.s16	q8, d16
    d328:	vst1.32	{d16-d17}, [r1]!
    d32c:	bne	d30c <ReadUInt32Data+0x3d0>
    d330:	ldr	r2, [sp, #12]
    d334:	add	r5, r0, r5
    d338:	add	r0, r8, #256	; 0x100
    d33c:	add	r9, r9, #1024	; 0x400
    d340:	add	r1, r6, #1024	; 0x400
    d344:	cmp	r0, r2
    d348:	blt	d2e4 <ReadUInt32Data+0x3a8>
    d34c:	mov	r1, r7
    d350:	mov	r7, r5
    d354:	ldr	r5, [sp, #4]
    d358:	cmp	r0, r5
    d35c:	bge	e468 <ReadUInt32Data+0x152c>
    d360:	sub	r9, r5, r0
    d364:	ldr	r0, [sp, #20]
    d368:	add	r4, sp, #48	; 0x30
    d36c:	mov	r2, r9
    d370:	ldr	r3, [r0]
    d374:	mov	r0, r4
    d378:	bl	18d0 <fread@plt>
    d37c:	add	r7, r0, r7
    d380:	cmp	r9, #1
    d384:	blt	e458 <ReadUInt32Data+0x151c>
    d388:	sub	r0, r5, r8
    d38c:	sub	r0, r0, #256	; 0x100
    d390:	ldrsb	r1, [r4], #1
    d394:	subs	r0, r0, #1
    d398:	str	r1, [r6], #4
    d39c:	bne	d390 <ReadUInt32Data+0x454>
    d3a0:	b	e458 <ReadUInt32Data+0x151c>
    d3a4:	sub	r0, r5, #256	; 0x100
    d3a8:	str	r5, [sp, #4]
    d3ac:	add	r1, r9, #1024	; 0x400
    d3b0:	add	r4, sp, #48	; 0x30
    d3b4:	add	sl, sp, #44	; 0x2c
    d3b8:	mov	r5, #0
    d3bc:	str	r0, [sp, #12]
    d3c0:	mov	r0, #0
    d3c4:	mov	r8, r0
    d3c8:	ldr	r0, [sp, #20]
    d3cc:	mov	r6, r1
    d3d0:	mov	r1, r7
    d3d4:	mov	r2, #256	; 0x100
    d3d8:	ldr	r3, [r0]
    d3dc:	mov	r0, r4
    d3e0:	bl	18d0 <fread@plt>
    d3e4:	mov	r1, r9
    d3e8:	mov	r2, #0
    d3ec:	ldr	r3, [r4, r2]
    d3f0:	add	r2, r2, #4
    d3f4:	cmp	r2, #256	; 0x100
    d3f8:	str	r3, [sp, #44]	; 0x2c
    d3fc:	vld1.32	{d16[0]}, [sl :32]
    d400:	vmovl.u8	q8, d16
    d404:	vmovl.u16	q8, d16
    d408:	vst1.32	{d16-d17}, [r1]!
    d40c:	bne	d3ec <ReadUInt32Data+0x4b0>
    d410:	ldr	r2, [sp, #12]
    d414:	add	r5, r0, r5
    d418:	add	r0, r8, #256	; 0x100
    d41c:	add	r9, r9, #1024	; 0x400
    d420:	add	r1, r6, #1024	; 0x400
    d424:	cmp	r0, r2
    d428:	blt	d3c4 <ReadUInt32Data+0x488>
    d42c:	mov	r1, r7
    d430:	mov	r7, r5
    d434:	ldr	r5, [sp, #4]
    d438:	cmp	r0, r5
    d43c:	bge	e468 <ReadUInt32Data+0x152c>
    d440:	sub	r9, r5, r0
    d444:	ldr	r0, [sp, #20]
    d448:	add	r4, sp, #48	; 0x30
    d44c:	mov	r2, r9
    d450:	ldr	r3, [r0]
    d454:	mov	r0, r4
    d458:	bl	18d0 <fread@plt>
    d45c:	add	r7, r0, r7
    d460:	cmp	r9, #1
    d464:	blt	e458 <ReadUInt32Data+0x151c>
    d468:	sub	r0, r5, r8
    d46c:	sub	r0, r0, #256	; 0x100
    d470:	ldrb	r1, [r4], #1
    d474:	subs	r0, r0, #1
    d478:	str	r1, [r6], #4
    d47c:	bne	d470 <ReadUInt32Data+0x534>
    d480:	b	e458 <ReadUInt32Data+0x151c>
    d484:	cmp	r5, #256	; 0x100
    d488:	bgt	dce0 <ReadUInt32Data+0xda4>
    d48c:	ldr	r3, [sl]
    d490:	add	r4, sp, #48	; 0x30
    d494:	mov	r1, r7
    d498:	mov	r2, r5
    d49c:	mov	r0, r4
    d4a0:	bl	18d0 <fread@plt>
    d4a4:	cmp	r5, #1
    d4a8:	blt	d634 <ReadUInt32Data+0x6f8>
    d4ac:	ldrsh	r1, [r4], #2
    d4b0:	subs	r5, r5, #1
    d4b4:	str	r1, [r9], #4
    d4b8:	bne	d4ac <ReadUInt32Data+0x570>
    d4bc:	b	d634 <ReadUInt32Data+0x6f8>
    d4c0:	cmp	r5, #256	; 0x100
    d4c4:	bgt	ddc8 <ReadUInt32Data+0xe8c>
    d4c8:	ldr	r3, [sl]
    d4cc:	add	r4, sp, #48	; 0x30
    d4d0:	mov	r1, r7
    d4d4:	mov	r2, r5
    d4d8:	mov	r0, r4
    d4dc:	bl	18d0 <fread@plt>
    d4e0:	cmp	r5, #1
    d4e4:	blt	d634 <ReadUInt32Data+0x6f8>
    d4e8:	ldrh	r1, [r4], #2
    d4ec:	subs	r5, r5, #1
    d4f0:	str	r1, [r9], #4
    d4f4:	bne	d4e8 <ReadUInt32Data+0x5ac>
    d4f8:	b	d634 <ReadUInt32Data+0x6f8>
    d4fc:	cmp	r5, #256	; 0x100
    d500:	ble	d570 <ReadUInt32Data+0x634>
    d504:	sub	r0, r5, #256	; 0x100
    d508:	lsl	r4, r5, #2
    d50c:	str	r5, [sp, #4]
    d510:	mov	r6, #0
    d514:	add	r8, sp, #48	; 0x30
    d518:	mov	r5, #0
    d51c:	str	r0, [sp, #12]
    d520:	ldr	r3, [sl]
    d524:	mov	r0, r8
    d528:	mov	r1, r7
    d52c:	mov	r2, #256	; 0x100
    d530:	bl	18d0 <fread@plt>
    d534:	mov	sl, r0
    d538:	add	r0, r9, r6, lsl #2
    d53c:	mov	r1, r8
    d540:	mov	r2, #1024	; 0x400
    d544:	bl	1834 <memcpy@plt>
    d548:	ldr	r0, [sp, #12]
    d54c:	add	r5, sl, r5
    d550:	ldr	sl, [sp, #20]
    d554:	add	r6, r6, #256	; 0x100
    d558:	sub	r4, r4, #1024	; 0x400
    d55c:	cmp	r6, r0
    d560:	blt	d520 <ReadUInt32Data+0x5e4>
    d564:	b	df10 <ReadUInt32Data+0xfd4>
    d568:	cmp	r5, #256	; 0x100
    d56c:	bgt	deb0 <ReadUInt32Data+0xf74>
    d570:	ldr	r3, [sl]
    d574:	add	r0, sp, #48	; 0x30
    d578:	mov	r1, r7
    d57c:	mov	r2, r5
    d580:	bl	18d0 <fread@plt>
    d584:	mov	r4, r0
    d588:	cmp	r5, #1
    d58c:	blt	d5a0 <ReadUInt32Data+0x664>
    d590:	lsl	r2, r5, #2
    d594:	add	r1, sp, #48	; 0x30
    d598:	mov	r0, r9
    d59c:	bl	1834 <memcpy@plt>
    d5a0:	mov	r5, r4
    d5a4:	b	e470 <ReadUInt32Data+0x1534>
    d5a8:	cmp	r5, #256	; 0x100
    d5ac:	bgt	df58 <ReadUInt32Data+0x101c>
    d5b0:	ldr	r3, [sl]
    d5b4:	add	r4, sp, #48	; 0x30
    d5b8:	mov	r1, r7
    d5bc:	mov	r2, r5
    d5c0:	mov	r0, r4
    d5c4:	bl	18d0 <fread@plt>
    d5c8:	cmp	r5, #1
    d5cc:	blt	d634 <ReadUInt32Data+0x6f8>
    d5d0:	vldr	s0, [r4]
    d5d4:	add	r4, r4, #4
    d5d8:	subs	r5, r5, #1
    d5dc:	vcvt.u32.f32	s0, s0
    d5e0:	vmov	r1, s0
    d5e4:	str	r1, [r9], #4
    d5e8:	bne	d5d0 <ReadUInt32Data+0x694>
    d5ec:	b	d634 <ReadUInt32Data+0x6f8>
    d5f0:	cmp	r5, #256	; 0x100
    d5f4:	bgt	e024 <ReadUInt32Data+0x10e8>
    d5f8:	ldr	r3, [sl]
    d5fc:	add	r4, sp, #48	; 0x30
    d600:	mov	r1, r7
    d604:	mov	r2, r5
    d608:	mov	r0, r4
    d60c:	bl	18d0 <fread@plt>
    d610:	cmp	r5, #1
    d614:	blt	d634 <ReadUInt32Data+0x6f8>
    d618:	vldr	d16, [r4]
    d61c:	add	r4, r4, #8
    d620:	subs	r5, r5, #1
    d624:	vcvt.u32.f64	s0, d16
    d628:	vmov	r1, s0
    d62c:	str	r1, [r9], #4
    d630:	bne	d618 <ReadUInt32Data+0x6dc>
    d634:	mov	r5, r0
    d638:	b	e470 <ReadUInt32Data+0x1534>
    d63c:	cmp	r5, #256	; 0x100
    d640:	bgt	e114 <ReadUInt32Data+0x11d8>
    d644:	ldr	r3, [sl]
    d648:	add	r4, sp, #48	; 0x30
    d64c:	mov	r1, r7
    d650:	mov	r2, r5
    d654:	mov	r0, r4
    d658:	bl	18d0 <fread@plt>
    d65c:	mov	r8, r0
    d660:	cmp	r5, #1
    d664:	blt	e1fc <ReadUInt32Data+0x12c0>
    d668:	mov	r0, r9
    d66c:	mov	r1, r5
    d670:	ldr	r2, [r4], #8
    d674:	subs	r1, r1, #1
    d678:	str	r2, [r0], #4
    d67c:	bne	d670 <ReadUInt32Data+0x734>
    d680:	b	e1fc <ReadUInt32Data+0x12c0>
    d684:	sub	r0, r5, #256	; 0x100
    d688:	str	r5, [sp, #4]
    d68c:	add	r1, r9, #1024	; 0x400
    d690:	add	r4, sp, #48	; 0x30
    d694:	mov	r5, #0
    d698:	str	r0, [sp, #12]
    d69c:	mov	r0, #0
    d6a0:	mov	sl, r0
    d6a4:	ldr	r0, [sp, #20]
    d6a8:	mov	r8, r1
    d6ac:	mov	r1, r7
    d6b0:	mov	r2, #256	; 0x100
    d6b4:	ldr	r3, [r0]
    d6b8:	mov	r0, r4
    d6bc:	bl	18d0 <fread@plt>
    d6c0:	mov	r6, r0
    d6c4:	mov	r7, #0
    d6c8:	add	r0, r4, r7
    d6cc:	bl	1c58 <Mat_int16Swap>
    d6d0:	str	r0, [r9, r7, lsl #1]
    d6d4:	add	r7, r7, #2
    d6d8:	cmp	r7, #512	; 0x200
    d6dc:	bne	d6c8 <ReadUInt32Data+0x78c>
    d6e0:	ldr	r2, [sp, #12]
    d6e4:	ldr	r7, [sp, #16]
    d6e8:	add	r0, sl, #256	; 0x100
    d6ec:	add	r5, r6, r5
    d6f0:	add	r9, r9, #1024	; 0x400
    d6f4:	add	r1, r8, #1024	; 0x400
    d6f8:	cmp	r0, r2
    d6fc:	blt	d6a0 <ReadUInt32Data+0x764>
    d700:	mov	r9, r7
    d704:	mov	r7, r5
    d708:	ldr	r5, [sp, #4]
    d70c:	cmp	r0, r5
    d710:	bge	e37c <ReadUInt32Data+0x1440>
    d714:	sub	r6, r5, r0
    d718:	ldr	r0, [sp, #20]
    d71c:	add	r4, sp, #48	; 0x30
    d720:	mov	r1, r9
    d724:	mov	r2, r6
    d728:	ldr	r3, [r0]
    d72c:	mov	r0, r4
    d730:	bl	18d0 <fread@plt>
    d734:	add	r7, r0, r7
    d738:	cmp	r6, #1
    d73c:	blt	e37c <ReadUInt32Data+0x1440>
    d740:	sub	r0, r5, sl
    d744:	sub	r6, r0, #256	; 0x100
    d748:	mov	r0, r4
    d74c:	bl	1c58 <Mat_int16Swap>
    d750:	str	r0, [r8], #4
    d754:	add	r4, r4, #2
    d758:	subs	r6, r6, #1
    d75c:	bne	d748 <ReadUInt32Data+0x80c>
    d760:	b	e37c <ReadUInt32Data+0x1440>
    d764:	sub	r0, r5, #256	; 0x100
    d768:	str	r5, [sp, #4]
    d76c:	add	r1, r9, #1024	; 0x400
    d770:	add	r4, sp, #48	; 0x30
    d774:	mov	r5, #0
    d778:	str	r0, [sp, #12]
    d77c:	mov	r0, #0
    d780:	mov	sl, r0
    d784:	ldr	r0, [sp, #20]
    d788:	mov	r8, r1
    d78c:	mov	r1, r7
    d790:	mov	r2, #256	; 0x100
    d794:	ldr	r3, [r0]
    d798:	mov	r0, r4
    d79c:	bl	18d0 <fread@plt>
    d7a0:	mov	r6, r0
    d7a4:	mov	r7, #0
    d7a8:	add	r0, r4, r7
    d7ac:	bl	1c6c <Mat_uint16Swap>
    d7b0:	str	r0, [r9, r7, lsl #1]
    d7b4:	add	r7, r7, #2
    d7b8:	cmp	r7, #512	; 0x200
    d7bc:	bne	d7a8 <ReadUInt32Data+0x86c>
    d7c0:	ldr	r2, [sp, #12]
    d7c4:	ldr	r7, [sp, #16]
    d7c8:	add	r0, sl, #256	; 0x100
    d7cc:	add	r5, r6, r5
    d7d0:	add	r9, r9, #1024	; 0x400
    d7d4:	add	r1, r8, #1024	; 0x400
    d7d8:	cmp	r0, r2
    d7dc:	blt	d780 <ReadUInt32Data+0x844>
    d7e0:	mov	r9, r7
    d7e4:	mov	r7, r5
    d7e8:	ldr	r5, [sp, #4]
    d7ec:	cmp	r0, r5
    d7f0:	bge	e37c <ReadUInt32Data+0x1440>
    d7f4:	sub	r6, r5, r0
    d7f8:	ldr	r0, [sp, #20]
    d7fc:	add	r4, sp, #48	; 0x30
    d800:	mov	r1, r9
    d804:	mov	r2, r6
    d808:	ldr	r3, [r0]
    d80c:	mov	r0, r4
    d810:	bl	18d0 <fread@plt>
    d814:	add	r7, r0, r7
    d818:	cmp	r6, #1
    d81c:	blt	e37c <ReadUInt32Data+0x1440>
    d820:	sub	r0, r5, sl
    d824:	sub	r6, r0, #256	; 0x100
    d828:	mov	r0, r4
    d82c:	bl	1c6c <Mat_uint16Swap>
    d830:	str	r0, [r8], #4
    d834:	add	r4, r4, #2
    d838:	subs	r6, r6, #1
    d83c:	bne	d828 <ReadUInt32Data+0x8ec>
    d840:	b	e37c <ReadUInt32Data+0x1440>
    d844:	sub	r0, r5, #256	; 0x100
    d848:	str	r5, [sp, #4]
    d84c:	add	r1, r9, #1024	; 0x400
    d850:	add	r4, sp, #48	; 0x30
    d854:	mov	r5, #0
    d858:	str	r0, [sp, #12]
    d85c:	mov	r0, #0
    d860:	mov	sl, r0
    d864:	ldr	r0, [sp, #20]
    d868:	mov	r8, r1
    d86c:	mov	r1, r7
    d870:	mov	r2, #256	; 0x100
    d874:	ldr	r3, [r0]
    d878:	mov	r0, r4
    d87c:	bl	18d0 <fread@plt>
    d880:	mov	r6, r0
    d884:	mov	r7, #0
    d888:	add	r0, r4, r7
    d88c:	bl	1c30 <Mat_int32Swap>
    d890:	str	r0, [r9, r7]
    d894:	add	r7, r7, #4
    d898:	cmp	r7, #1024	; 0x400
    d89c:	bne	d888 <ReadUInt32Data+0x94c>
    d8a0:	ldr	r2, [sp, #12]
    d8a4:	ldr	r7, [sp, #16]
    d8a8:	add	r0, sl, #256	; 0x100
    d8ac:	add	r5, r6, r5
    d8b0:	add	r9, r9, #1024	; 0x400
    d8b4:	add	r1, r8, #1024	; 0x400
    d8b8:	cmp	r0, r2
    d8bc:	blt	d860 <ReadUInt32Data+0x924>
    d8c0:	mov	r9, r7
    d8c4:	mov	r7, r5
    d8c8:	ldr	r5, [sp, #4]
    d8cc:	cmp	r0, r5
    d8d0:	bge	e37c <ReadUInt32Data+0x1440>
    d8d4:	sub	r6, r5, r0
    d8d8:	ldr	r0, [sp, #20]
    d8dc:	add	r4, sp, #48	; 0x30
    d8e0:	mov	r1, r9
    d8e4:	mov	r2, r6
    d8e8:	ldr	r3, [r0]
    d8ec:	mov	r0, r4
    d8f0:	bl	18d0 <fread@plt>
    d8f4:	add	r7, r0, r7
    d8f8:	cmp	r6, #1
    d8fc:	blt	e37c <ReadUInt32Data+0x1440>
    d900:	sub	r0, r5, sl
    d904:	sub	r6, r0, #256	; 0x100
    d908:	mov	r0, r4
    d90c:	bl	1c30 <Mat_int32Swap>
    d910:	str	r0, [r8], #4
    d914:	add	r4, r4, #4
    d918:	subs	r6, r6, #1
    d91c:	bne	d908 <ReadUInt32Data+0x9cc>
    d920:	b	e37c <ReadUInt32Data+0x1440>
    d924:	sub	r0, r5, #256	; 0x100
    d928:	str	r5, [sp, #4]
    d92c:	add	r1, r9, #1024	; 0x400
    d930:	add	r4, sp, #48	; 0x30
    d934:	mov	r5, #0
    d938:	str	r0, [sp, #12]
    d93c:	mov	r0, #0
    d940:	mov	sl, r0
    d944:	ldr	r0, [sp, #20]
    d948:	mov	r8, r1
    d94c:	mov	r1, r7
    d950:	mov	r2, #256	; 0x100
    d954:	ldr	r3, [r0]
    d958:	mov	r0, r4
    d95c:	bl	18d0 <fread@plt>
    d960:	mov	r6, r0
    d964:	mov	r7, #0
    d968:	add	r0, r4, r7
    d96c:	bl	1c44 <Mat_uint32Swap>
    d970:	str	r0, [r9, r7]
    d974:	add	r7, r7, #4
    d978:	cmp	r7, #1024	; 0x400
    d97c:	bne	d968 <ReadUInt32Data+0xa2c>
    d980:	ldr	r2, [sp, #12]
    d984:	ldr	r7, [sp, #16]
    d988:	add	r0, sl, #256	; 0x100
    d98c:	add	r5, r6, r5
    d990:	add	r9, r9, #1024	; 0x400
    d994:	add	r1, r8, #1024	; 0x400
    d998:	cmp	r0, r2
    d99c:	blt	d940 <ReadUInt32Data+0xa04>
    d9a0:	mov	r9, r7
    d9a4:	mov	r7, r5
    d9a8:	ldr	r5, [sp, #4]
    d9ac:	cmp	r0, r5
    d9b0:	bge	e37c <ReadUInt32Data+0x1440>
    d9b4:	sub	r6, r5, r0
    d9b8:	ldr	r0, [sp, #20]
    d9bc:	add	r4, sp, #48	; 0x30
    d9c0:	mov	r1, r9
    d9c4:	mov	r2, r6
    d9c8:	ldr	r3, [r0]
    d9cc:	mov	r0, r4
    d9d0:	bl	18d0 <fread@plt>
    d9d4:	add	r7, r0, r7
    d9d8:	cmp	r6, #1
    d9dc:	blt	e37c <ReadUInt32Data+0x1440>
    d9e0:	sub	r0, r5, sl
    d9e4:	sub	r6, r0, #256	; 0x100
    d9e8:	mov	r0, r4
    d9ec:	bl	1c44 <Mat_uint32Swap>
    d9f0:	str	r0, [r8], #4
    d9f4:	add	r4, r4, #4
    d9f8:	subs	r6, r6, #1
    d9fc:	bne	d9e8 <ReadUInt32Data+0xaac>
    da00:	b	e37c <ReadUInt32Data+0x1440>
    da04:	sub	r0, r5, #256	; 0x100
    da08:	str	r5, [sp, #4]
    da0c:	add	r1, r9, #1024	; 0x400
    da10:	add	r4, sp, #48	; 0x30
    da14:	mov	r5, #0
    da18:	str	r0, [sp, #12]
    da1c:	mov	r0, #0
    da20:	mov	sl, r0
    da24:	ldr	r0, [sp, #20]
    da28:	mov	r8, r1
    da2c:	mov	r1, r7
    da30:	mov	r2, #256	; 0x100
    da34:	ldr	r3, [r0]
    da38:	mov	r0, r4
    da3c:	bl	18d0 <fread@plt>
    da40:	mov	r6, r0
    da44:	mov	r7, #0
    da48:	add	r0, r4, r7
    da4c:	bl	1c84 <Mat_floatSwap>
    da50:	vcvt.u32.f32	s0, s0
    da54:	vmov	r0, s0
    da58:	str	r0, [r9, r7]
    da5c:	add	r7, r7, #4
    da60:	cmp	r7, #1024	; 0x400
    da64:	bne	da48 <ReadUInt32Data+0xb0c>
    da68:	ldr	r2, [sp, #12]
    da6c:	ldr	r7, [sp, #16]
    da70:	add	r0, sl, #256	; 0x100
    da74:	add	r5, r6, r5
    da78:	add	r9, r9, #1024	; 0x400
    da7c:	add	r1, r8, #1024	; 0x400
    da80:	cmp	r0, r2
    da84:	blt	da20 <ReadUInt32Data+0xae4>
    da88:	mov	r9, r7
    da8c:	mov	r7, r5
    da90:	ldr	r5, [sp, #4]
    da94:	cmp	r0, r5
    da98:	bge	e37c <ReadUInt32Data+0x1440>
    da9c:	sub	r6, r5, r0
    daa0:	ldr	r0, [sp, #20]
    daa4:	add	r4, sp, #48	; 0x30
    daa8:	mov	r1, r9
    daac:	mov	r2, r6
    dab0:	ldr	r3, [r0]
    dab4:	mov	r0, r4
    dab8:	bl	18d0 <fread@plt>
    dabc:	add	r7, r0, r7
    dac0:	cmp	r6, #1
    dac4:	blt	e37c <ReadUInt32Data+0x1440>
    dac8:	sub	r0, r5, sl
    dacc:	sub	r6, r0, #256	; 0x100
    dad0:	mov	r0, r4
    dad4:	bl	1c84 <Mat_floatSwap>
    dad8:	vcvt.u32.f32	s0, s0
    dadc:	add	r4, r4, #4
    dae0:	subs	r6, r6, #1
    dae4:	vmov	r0, s0
    dae8:	str	r0, [r8], #4
    daec:	bne	dad0 <ReadUInt32Data+0xb94>
    daf0:	b	e37c <ReadUInt32Data+0x1440>
    daf4:	sub	r0, r5, #256	; 0x100
    daf8:	str	r5, [sp, #4]
    dafc:	add	r1, r9, #1024	; 0x400
    db00:	mov	r5, #0
    db04:	str	r0, [sp, #12]
    db08:	mov	r0, #0
    db0c:	mov	sl, r0
    db10:	ldr	r0, [sp, #20]
    db14:	add	r6, sp, #48	; 0x30
    db18:	mov	r8, r1
    db1c:	mov	r1, r7
    db20:	mov	r2, #256	; 0x100
    db24:	ldr	r3, [r0]
    db28:	mov	r0, r6
    db2c:	bl	18d0 <fread@plt>
    db30:	mov	r4, r0
    db34:	mov	r7, #0
    db38:	mov	r0, r6
    db3c:	bl	1cc8 <Mat_doubleSwap>
    db40:	vcvt.u32.f64	s0, d0
    db44:	add	r6, r6, #8
    db48:	vmov	r0, s0
    db4c:	str	r0, [r9, r7, lsl #2]
    db50:	add	r7, r7, #1
    db54:	cmp	r7, #256	; 0x100
    db58:	bne	db38 <ReadUInt32Data+0xbfc>
    db5c:	ldr	r2, [sp, #12]
    db60:	ldr	r7, [sp, #16]
    db64:	add	r0, sl, #256	; 0x100
    db68:	add	r5, r4, r5
    db6c:	add	r9, r9, #1024	; 0x400
    db70:	add	r1, r8, #1024	; 0x400
    db74:	cmp	r0, r2
    db78:	blt	db0c <ReadUInt32Data+0xbd0>
    db7c:	mov	r9, r7
    db80:	mov	r7, r5
    db84:	ldr	r5, [sp, #4]
    db88:	cmp	r0, r5
    db8c:	bge	e37c <ReadUInt32Data+0x1440>
    db90:	sub	r6, r5, r0
    db94:	ldr	r0, [sp, #20]
    db98:	add	r4, sp, #48	; 0x30
    db9c:	mov	r1, r9
    dba0:	mov	r2, r6
    dba4:	ldr	r3, [r0]
    dba8:	mov	r0, r4
    dbac:	bl	18d0 <fread@plt>
    dbb0:	add	r7, r0, r7
    dbb4:	cmp	r6, #1
    dbb8:	blt	e37c <ReadUInt32Data+0x1440>
    dbbc:	sub	r0, r5, sl
    dbc0:	sub	r6, r0, #256	; 0x100
    dbc4:	mov	r0, r4
    dbc8:	bl	1cc8 <Mat_doubleSwap>
    dbcc:	vcvt.u32.f64	s0, d0
    dbd0:	add	r4, r4, #8
    dbd4:	subs	r6, r6, #1
    dbd8:	vmov	r0, s0
    dbdc:	str	r0, [r8], #4
    dbe0:	bne	dbc4 <ReadUInt32Data+0xc88>
    dbe4:	b	e37c <ReadUInt32Data+0x1440>
    dbe8:	sub	r0, r5, #256	; 0x100
    dbec:	str	r5, [sp, #4]
    dbf0:	add	r1, r9, #1024	; 0x400
    dbf4:	mov	r7, r9
    dbf8:	mov	r5, #0
    dbfc:	str	r6, [sp]
    dc00:	str	r0, [sp, #8]
    dc04:	mov	r0, #0
    dc08:	mov	r6, r1
    dc0c:	ldr	r3, [sl]
    dc10:	ldr	r1, [sp, #16]
    dc14:	add	r4, sp, #48	; 0x30
    dc18:	str	r0, [sp, #12]
    dc1c:	mov	r2, #256	; 0x100
    dc20:	mov	r0, r4
    dc24:	bl	18d0 <fread@plt>
    dc28:	mov	r8, r0
    dc2c:	mov	sl, #0
    dc30:	mov	r0, r4
    dc34:	bl	1bbc <Mat_int64Swap>
    dc38:	str	r0, [r7, sl, lsl #2]
    dc3c:	add	sl, sl, #1
    dc40:	add	r4, r4, #8
    dc44:	cmp	sl, #256	; 0x100
    dc48:	bne	dc30 <ReadUInt32Data+0xcf4>
    dc4c:	ldr	r0, [sp, #12]
    dc50:	ldr	r2, [sp, #8]
    dc54:	ldr	sl, [sp, #20]
    dc58:	add	r5, r8, r5
    dc5c:	add	r7, r7, #1024	; 0x400
    dc60:	add	r1, r6, #1024	; 0x400
    dc64:	add	r0, r0, #256	; 0x100
    dc68:	cmp	r0, r2
    dc6c:	blt	dc08 <ReadUInt32Data+0xccc>
    dc70:	mov	r8, r5
    dc74:	ldr	r5, [sp, #4]
    dc78:	cmp	r0, r5
    dc7c:	bge	dcd8 <ReadUInt32Data+0xd9c>
    dc80:	mov	r1, sl
    dc84:	ldr	r7, [sp, #16]
    dc88:	sub	sl, r5, r0
    dc8c:	add	r4, sp, #48	; 0x30
    dc90:	ldr	r3, [r1]
    dc94:	mov	r0, r4
    dc98:	mov	r2, sl
    dc9c:	mov	r1, r7
    dca0:	bl	18d0 <fread@plt>
    dca4:	add	r8, r0, r8
    dca8:	cmp	sl, #1
    dcac:	blt	e1f4 <ReadUInt32Data+0x12b8>
    dcb0:	ldr	r0, [sp, #12]
    dcb4:	sub	r0, r5, r0
    dcb8:	sub	r7, r0, #256	; 0x100
    dcbc:	mov	r0, r4
    dcc0:	bl	1bbc <Mat_int64Swap>
    dcc4:	str	r0, [r6], #4
    dcc8:	add	r4, r4, #8
    dccc:	subs	r7, r7, #1
    dcd0:	bne	dcbc <ReadUInt32Data+0xd80>
    dcd4:	b	e1f0 <ReadUInt32Data+0x12b4>
    dcd8:	ldr	r7, [sp, #16]
    dcdc:	b	e1f8 <ReadUInt32Data+0x12bc>
    dce0:	sub	r0, r5, #256	; 0x100
    dce4:	str	r5, [sp, #4]
    dce8:	add	r1, r9, #1024	; 0x400
    dcec:	add	r4, sp, #48	; 0x30
    dcf0:	add	sl, sp, #24
    dcf4:	mov	r5, #0
    dcf8:	str	r0, [sp, #12]
    dcfc:	mov	r0, #0
    dd00:	mov	r8, r0
    dd04:	ldr	r0, [sp, #20]
    dd08:	mov	r6, r1
    dd0c:	mov	r1, r7
    dd10:	mov	r2, #256	; 0x100
    dd14:	ldr	r3, [r0]
    dd18:	mov	r0, r4
    dd1c:	bl	18d0 <fread@plt>
    dd20:	mov	r1, r9
    dd24:	mov	r2, #0
    dd28:	ldr	r3, [r4, r2]
    dd2c:	str	r3, [sp, #24]
    dd30:	add	r3, r4, r2
    dd34:	add	r2, r2, #8
    dd38:	ldr	r3, [r3, #4]
    dd3c:	cmp	r2, #512	; 0x200
    dd40:	str	r3, [sp, #28]
    dd44:	vld1.16	{d16}, [sl :64]
    dd48:	vmovl.s16	q8, d16
    dd4c:	vst1.32	{d16-d17}, [r1]!
    dd50:	bne	dd28 <ReadUInt32Data+0xdec>
    dd54:	ldr	r2, [sp, #12]
    dd58:	add	r5, r0, r5
    dd5c:	add	r0, r8, #256	; 0x100
    dd60:	add	r9, r9, #1024	; 0x400
    dd64:	add	r1, r6, #1024	; 0x400
    dd68:	cmp	r0, r2
    dd6c:	blt	dd00 <ReadUInt32Data+0xdc4>
    dd70:	mov	r1, r7
    dd74:	mov	r7, r5
    dd78:	ldr	r5, [sp, #4]
    dd7c:	cmp	r0, r5
    dd80:	bge	e468 <ReadUInt32Data+0x152c>
    dd84:	sub	r9, r5, r0
    dd88:	ldr	r0, [sp, #20]
    dd8c:	add	r4, sp, #48	; 0x30
    dd90:	mov	r2, r9
    dd94:	ldr	r3, [r0]
    dd98:	mov	r0, r4
    dd9c:	bl	18d0 <fread@plt>
    dda0:	add	r7, r0, r7
    dda4:	cmp	r9, #1
    dda8:	blt	e458 <ReadUInt32Data+0x151c>
    ddac:	sub	r0, r5, r8
    ddb0:	sub	r0, r0, #256	; 0x100
    ddb4:	ldrsh	r1, [r4], #2
    ddb8:	subs	r0, r0, #1
    ddbc:	str	r1, [r6], #4
    ddc0:	bne	ddb4 <ReadUInt32Data+0xe78>
    ddc4:	b	e458 <ReadUInt32Data+0x151c>
    ddc8:	sub	r0, r5, #256	; 0x100
    ddcc:	str	r5, [sp, #4]
    ddd0:	add	r1, r9, #1024	; 0x400
    ddd4:	add	r4, sp, #48	; 0x30
    ddd8:	add	sl, sp, #32
    dddc:	mov	r5, #0
    dde0:	str	r0, [sp, #12]
    dde4:	mov	r0, #0
    dde8:	mov	r8, r0
    ddec:	ldr	r0, [sp, #20]
    ddf0:	mov	r6, r1
    ddf4:	mov	r1, r7
    ddf8:	mov	r2, #256	; 0x100
    ddfc:	ldr	r3, [r0]
    de00:	mov	r0, r4
    de04:	bl	18d0 <fread@plt>
    de08:	mov	r1, r9
    de0c:	mov	r2, #0
    de10:	ldr	r3, [r4, r2]
    de14:	str	r3, [sp, #32]
    de18:	add	r3, r4, r2
    de1c:	add	r2, r2, #8
    de20:	ldr	r3, [r3, #4]
    de24:	cmp	r2, #512	; 0x200
    de28:	str	r3, [sp, #36]	; 0x24
    de2c:	vld1.16	{d16}, [sl :64]
    de30:	vmovl.u16	q8, d16
    de34:	vst1.32	{d16-d17}, [r1]!
    de38:	bne	de10 <ReadUInt32Data+0xed4>
    de3c:	ldr	r2, [sp, #12]
    de40:	add	r5, r0, r5
    de44:	add	r0, r8, #256	; 0x100
    de48:	add	r9, r9, #1024	; 0x400
    de4c:	add	r1, r6, #1024	; 0x400
    de50:	cmp	r0, r2
    de54:	blt	dde8 <ReadUInt32Data+0xeac>
    de58:	mov	r1, r7
    de5c:	mov	r7, r5
    de60:	ldr	r5, [sp, #4]
    de64:	cmp	r0, r5
    de68:	bge	e468 <ReadUInt32Data+0x152c>
    de6c:	sub	r9, r5, r0
    de70:	ldr	r0, [sp, #20]
    de74:	add	r4, sp, #48	; 0x30
    de78:	mov	r2, r9
    de7c:	ldr	r3, [r0]
    de80:	mov	r0, r4
    de84:	bl	18d0 <fread@plt>
    de88:	add	r7, r0, r7
    de8c:	cmp	r9, #1
    de90:	blt	e458 <ReadUInt32Data+0x151c>
    de94:	sub	r0, r5, r8
    de98:	sub	r0, r0, #256	; 0x100
    de9c:	ldrh	r1, [r4], #2
    dea0:	subs	r0, r0, #1
    dea4:	str	r1, [r6], #4
    dea8:	bne	de9c <ReadUInt32Data+0xf60>
    deac:	b	e458 <ReadUInt32Data+0x151c>
    deb0:	sub	r0, r5, #256	; 0x100
    deb4:	lsl	r4, r5, #2
    deb8:	str	r5, [sp, #4]
    debc:	mov	r6, #0
    dec0:	add	r8, sp, #48	; 0x30
    dec4:	mov	r5, #0
    dec8:	str	r0, [sp, #12]
    decc:	ldr	r3, [sl]
    ded0:	mov	r0, r8
    ded4:	mov	r1, r7
    ded8:	mov	r2, #256	; 0x100
    dedc:	bl	18d0 <fread@plt>
    dee0:	mov	sl, r0
    dee4:	add	r0, r9, r6, lsl #2
    dee8:	mov	r1, r8
    deec:	mov	r2, #1024	; 0x400
    def0:	bl	1834 <memcpy@plt>
    def4:	ldr	r0, [sp, #12]
    def8:	add	r5, sl, r5
    defc:	ldr	sl, [sp, #20]
    df00:	add	r6, r6, #256	; 0x100
    df04:	sub	r4, r4, #1024	; 0x400
    df08:	cmp	r6, r0
    df0c:	blt	decc <ReadUInt32Data+0xf90>
    df10:	ldr	r0, [sp, #4]
    df14:	cmp	r6, r0
    df18:	bge	e388 <ReadUInt32Data+0x144c>
    df1c:	ldr	r7, [sp, #16]
    df20:	ldr	r3, [sl]
    df24:	sub	r8, r0, r6
    df28:	add	r0, sp, #48	; 0x30
    df2c:	mov	r2, r8
    df30:	mov	r1, r7
    df34:	bl	18d0 <fread@plt>
    df38:	add	r5, r0, r5
    df3c:	cmp	r8, #1
    df40:	blt	e470 <ReadUInt32Data+0x1534>
    df44:	add	r0, r9, r6, lsl #2
    df48:	add	r1, sp, #48	; 0x30
    df4c:	mov	r2, r4
    df50:	bl	1834 <memcpy@plt>
    df54:	b	e470 <ReadUInt32Data+0x1534>
    df58:	add	r1, r9, #1024	; 0x400
    df5c:	sub	sl, r5, #256	; 0x100
    df60:	mov	r0, #0
    df64:	add	r4, sp, #48	; 0x30
    df68:	mov	r7, #0
    df6c:	mov	r8, r0
    df70:	ldr	r0, [sp, #20]
    df74:	mov	r6, r1
    df78:	ldr	r1, [sp, #16]
    df7c:	mov	r2, #256	; 0x100
    df80:	ldr	r3, [r0]
    df84:	mov	r0, r4
    df88:	bl	18d0 <fread@plt>
    df8c:	mov	r1, #0
    df90:	add	r2, r4, r1
    df94:	vld1.32	{d16-d17}, [r2]
    df98:	add	r2, r9, r1
    df9c:	add	r1, r1, #16
    dfa0:	cmp	r1, #1024	; 0x400
    dfa4:	vcvt.u32.f32	q8, q8
    dfa8:	vst1.32	{d16-d17}, [r2]
    dfac:	bne	df90 <ReadUInt32Data+0x1054>
    dfb0:	add	r7, r0, r7
    dfb4:	add	r0, r8, #256	; 0x100
    dfb8:	add	r9, r9, #1024	; 0x400
    dfbc:	add	r1, r6, #1024	; 0x400
    dfc0:	cmp	r0, sl
    dfc4:	blt	df6c <ReadUInt32Data+0x1030>
    dfc8:	cmp	r0, r5
    dfcc:	bge	e458 <ReadUInt32Data+0x151c>
    dfd0:	sub	r9, r5, r0
    dfd4:	ldr	r0, [sp, #20]
    dfd8:	ldr	r1, [sp, #16]
    dfdc:	add	r4, sp, #48	; 0x30
    dfe0:	mov	r2, r9
    dfe4:	ldr	r3, [r0]
    dfe8:	mov	r0, r4
    dfec:	bl	18d0 <fread@plt>
    dff0:	add	r7, r0, r7
    dff4:	cmp	r9, #1
    dff8:	blt	e458 <ReadUInt32Data+0x151c>
    dffc:	sub	r0, r5, r8
    e000:	sub	r0, r0, #256	; 0x100
    e004:	vldr	s0, [r4]
    e008:	add	r4, r4, #4
    e00c:	subs	r0, r0, #1
    e010:	vcvt.u32.f32	s0, s0
    e014:	vmov	r1, s0
    e018:	str	r1, [r6], #4
    e01c:	bne	e004 <ReadUInt32Data+0x10c8>
    e020:	b	e458 <ReadUInt32Data+0x151c>
    e024:	add	r1, r9, #1024	; 0x400
    e028:	str	r5, [sp, #4]
    e02c:	sub	sl, r5, #256	; 0x100
    e030:	mov	r0, #0
    e034:	add	r4, sp, #48	; 0x30
    e038:	mov	r5, #0
    e03c:	mov	r8, r0
    e040:	ldr	r0, [sp, #20]
    e044:	mov	r6, r1
    e048:	mov	r1, r7
    e04c:	mov	r2, #256	; 0x100
    e050:	ldr	r3, [r0]
    e054:	mov	r0, r4
    e058:	bl	18d0 <fread@plt>
    e05c:	mov	r1, #0
    e060:	mov	r2, r4
    e064:	vld1.64	{d16-d17}, [r2]!
    e068:	vcvt.u32.f64	s0, d16
    e06c:	vmov	r3, s0
    e070:	vcvt.u32.f64	s0, d17
    e074:	vmov.32	d16[0], r3
    e078:	vmov	r7, s0
    e07c:	add	r3, r9, r1
    e080:	add	r1, r1, #8
    e084:	cmp	r1, #1024	; 0x400
    e088:	vmov.32	d16[1], r7
    e08c:	vstr	d16, [r3]
    e090:	bne	e064 <ReadUInt32Data+0x1128>
    e094:	ldr	r7, [sp, #16]
    e098:	add	r5, r0, r5
    e09c:	add	r0, r8, #256	; 0x100
    e0a0:	add	r9, r9, #1024	; 0x400
    e0a4:	add	r1, r6, #1024	; 0x400
    e0a8:	cmp	r0, sl
    e0ac:	blt	e03c <ReadUInt32Data+0x1100>
    e0b0:	mov	r1, r7
    e0b4:	mov	r7, r5
    e0b8:	ldr	r5, [sp, #4]
    e0bc:	cmp	r0, r5
    e0c0:	bge	e468 <ReadUInt32Data+0x152c>
    e0c4:	sub	r9, r5, r0
    e0c8:	ldr	r0, [sp, #20]
    e0cc:	add	r4, sp, #48	; 0x30
    e0d0:	mov	r2, r9
    e0d4:	ldr	r3, [r0]
    e0d8:	mov	r0, r4
    e0dc:	bl	18d0 <fread@plt>
    e0e0:	add	r7, r0, r7
    e0e4:	cmp	r9, #1
    e0e8:	blt	e458 <ReadUInt32Data+0x151c>
    e0ec:	sub	r0, r5, r8
    e0f0:	sub	r0, r0, #256	; 0x100
    e0f4:	vldr	d16, [r4]
    e0f8:	add	r4, r4, #8
    e0fc:	subs	r0, r0, #1
    e100:	vcvt.u32.f64	s0, d16
    e104:	vmov	r1, s0
    e108:	str	r1, [r6], #4
    e10c:	bne	e0f4 <ReadUInt32Data+0x11b8>
    e110:	b	e458 <ReadUInt32Data+0x151c>
    e114:	add	r1, r9, #1024	; 0x400
    e118:	str	r5, [sp, #4]
    e11c:	sub	r8, r5, #256	; 0x100
    e120:	mov	r0, #0
    e124:	add	r4, sp, #48	; 0x30
    e128:	mov	r7, r9
    e12c:	mov	r5, #0
    e130:	str	r6, [sp]
    e134:	mov	sl, r0
    e138:	ldr	r0, [sp, #20]
    e13c:	mov	r6, r1
    e140:	ldr	r1, [sp, #16]
    e144:	mov	r2, #256	; 0x100
    e148:	ldr	r3, [r0]
    e14c:	mov	r0, r4
    e150:	bl	18d0 <fread@plt>
    e154:	mov	r1, #0
    e158:	mov	r2, r4
    e15c:	vld1.64	{d16-d17}, [r2]!
    e160:	add	r3, r7, r1
    e164:	add	r1, r1, #8
    e168:	cmp	r1, #1024	; 0x400
    e16c:	vmovn.i64	d16, q8
    e170:	vstr	d16, [r3]
    e174:	bne	e15c <ReadUInt32Data+0x1220>
    e178:	add	r5, r0, r5
    e17c:	add	r0, sl, #256	; 0x100
    e180:	add	r7, r7, #1024	; 0x400
    e184:	add	r1, r6, #1024	; 0x400
    e188:	cmp	r0, r8
    e18c:	blt	e134 <ReadUInt32Data+0x11f8>
    e190:	mov	r8, r5
    e194:	ldr	r5, [sp, #4]
    e198:	cmp	r0, r5
    e19c:	bge	e1f0 <ReadUInt32Data+0x12b4>
    e1a0:	sub	r2, r5, r0
    e1a4:	ldr	r0, [sp, #20]
    e1a8:	ldr	r7, [sp, #16]
    e1ac:	add	r4, sp, #48	; 0x30
    e1b0:	str	r2, [sp, #12]
    e1b4:	ldr	r3, [r0]
    e1b8:	mov	r0, r4
    e1bc:	mov	r1, r7
    e1c0:	bl	18d0 <fread@plt>
    e1c4:	add	r8, r0, r8
    e1c8:	ldr	r0, [sp, #12]
    e1cc:	cmp	r0, #1
    e1d0:	blt	e1f4 <ReadUInt32Data+0x12b8>
    e1d4:	sub	r0, r5, sl
    e1d8:	sub	r0, r0, #256	; 0x100
    e1dc:	ldr	r1, [r4], #8
    e1e0:	subs	r0, r0, #1
    e1e4:	str	r1, [r6], #4
    e1e8:	bne	e1dc <ReadUInt32Data+0x12a0>
    e1ec:	b	e1f4 <ReadUInt32Data+0x12b8>
    e1f0:	ldr	r7, [sp, #16]
    e1f4:	ldr	sl, [sp, #20]
    e1f8:	ldr	r6, [sp]
    e1fc:	cmp	r6, #13
    e200:	bne	e294 <ReadUInt32Data+0x1358>
    e204:	ldr	r0, [sl, #20]
    e208:	cmp	r0, #0
    e20c:	beq	e258 <ReadUInt32Data+0x131c>
    e210:	cmp	r5, #256	; 0x100
    e214:	bgt	e29c <ReadUInt32Data+0x1360>
    e218:	ldr	r3, [sl]
    e21c:	add	r4, sp, #48	; 0x30
    e220:	mov	r1, r7
    e224:	mov	r2, r5
    e228:	mov	r0, r4
    e22c:	bl	18d0 <fread@plt>
    e230:	add	r8, r0, r8
    e234:	cmp	r5, #1
    e238:	blt	e294 <ReadUInt32Data+0x1358>
    e23c:	mov	r0, r4
    e240:	bl	1c0c <Mat_uint64Swap>
    e244:	str	r0, [r9], #4
    e248:	add	r4, r4, #8
    e24c:	subs	r5, r5, #1
    e250:	bne	e23c <ReadUInt32Data+0x1300>
    e254:	b	e294 <ReadUInt32Data+0x1358>
    e258:	cmp	r5, #256	; 0x100
    e25c:	bgt	e390 <ReadUInt32Data+0x1454>
    e260:	ldr	r3, [sl]
    e264:	add	r4, sp, #48	; 0x30
    e268:	mov	r1, r7
    e26c:	mov	r2, r5
    e270:	mov	r0, r4
    e274:	bl	18d0 <fread@plt>
    e278:	add	r8, r0, r8
    e27c:	cmp	r5, #1
    e280:	blt	e294 <ReadUInt32Data+0x1358>
    e284:	ldr	r0, [r4], #8
    e288:	subs	r5, r5, #1
    e28c:	str	r0, [r9], #4
    e290:	bne	e284 <ReadUInt32Data+0x1348>
    e294:	mov	r5, r8
    e298:	b	e470 <ReadUInt32Data+0x1534>
    e29c:	sub	r0, r5, #256	; 0x100
    e2a0:	str	r5, [sp, #4]
    e2a4:	add	r1, r9, #1024	; 0x400
    e2a8:	mov	r5, r8
    e2ac:	str	r0, [sp, #12]
    e2b0:	mov	r0, #0
    e2b4:	mov	sl, r0
    e2b8:	ldr	r0, [sp, #20]
    e2bc:	add	r6, sp, #48	; 0x30
    e2c0:	mov	r8, r1
    e2c4:	mov	r1, r7
    e2c8:	mov	r2, #256	; 0x100
    e2cc:	ldr	r3, [r0]
    e2d0:	mov	r0, r6
    e2d4:	bl	18d0 <fread@plt>
    e2d8:	mov	r4, r0
    e2dc:	mov	r7, #0
    e2e0:	mov	r0, r6
    e2e4:	bl	1c0c <Mat_uint64Swap>
    e2e8:	str	r0, [r9, r7, lsl #2]
    e2ec:	add	r7, r7, #1
    e2f0:	add	r6, r6, #8
    e2f4:	cmp	r7, #256	; 0x100
    e2f8:	bne	e2e0 <ReadUInt32Data+0x13a4>
    e2fc:	ldr	r2, [sp, #12]
    e300:	ldr	r7, [sp, #16]
    e304:	add	r0, sl, #256	; 0x100
    e308:	add	r5, r4, r5
    e30c:	add	r9, r9, #1024	; 0x400
    e310:	add	r1, r8, #1024	; 0x400
    e314:	cmp	r0, r2
    e318:	blt	e2b4 <ReadUInt32Data+0x1378>
    e31c:	mov	r9, r7
    e320:	mov	r7, r5
    e324:	ldr	r5, [sp, #4]
    e328:	cmp	r0, r5
    e32c:	bge	e37c <ReadUInt32Data+0x1440>
    e330:	sub	r6, r5, r0
    e334:	ldr	r0, [sp, #20]
    e338:	add	r4, sp, #48	; 0x30
    e33c:	mov	r1, r9
    e340:	mov	r2, r6
    e344:	ldr	r3, [r0]
    e348:	mov	r0, r4
    e34c:	bl	18d0 <fread@plt>
    e350:	add	r7, r0, r7
    e354:	cmp	r6, #1
    e358:	blt	e37c <ReadUInt32Data+0x1440>
    e35c:	sub	r0, r5, sl
    e360:	sub	r6, r0, #256	; 0x100
    e364:	mov	r0, r4
    e368:	bl	1c0c <Mat_uint64Swap>
    e36c:	str	r0, [r8], #4
    e370:	add	r4, r4, #8
    e374:	subs	r6, r6, #1
    e378:	bne	e364 <ReadUInt32Data+0x1428>
    e37c:	mov	r5, r7
    e380:	mov	r7, r9
    e384:	b	e470 <ReadUInt32Data+0x1534>
    e388:	ldr	r7, [sp, #16]
    e38c:	b	e470 <ReadUInt32Data+0x1534>
    e390:	add	r1, r9, #1024	; 0x400
    e394:	str	r5, [sp, #4]
    e398:	sub	sl, r5, #256	; 0x100
    e39c:	mov	r0, #0
    e3a0:	add	r4, sp, #48	; 0x30
    e3a4:	mov	r5, r8
    e3a8:	mov	r8, r0
    e3ac:	ldr	r0, [sp, #20]
    e3b0:	mov	r6, r1
    e3b4:	mov	r1, r7
    e3b8:	mov	r2, #256	; 0x100
    e3bc:	ldr	r3, [r0]
    e3c0:	mov	r0, r4
    e3c4:	bl	18d0 <fread@plt>
    e3c8:	mov	r1, #0
    e3cc:	mov	r2, r4
    e3d0:	vld1.64	{d16-d17}, [r2]!
    e3d4:	add	r3, r9, r1
    e3d8:	add	r1, r1, #8
    e3dc:	cmp	r1, #1024	; 0x400
    e3e0:	vmovn.i64	d16, q8
    e3e4:	vstr	d16, [r3]
    e3e8:	bne	e3d0 <ReadUInt32Data+0x1494>
    e3ec:	add	r5, r0, r5
    e3f0:	add	r0, r8, #256	; 0x100
    e3f4:	add	r9, r9, #1024	; 0x400
    e3f8:	add	r1, r6, #1024	; 0x400
    e3fc:	cmp	r0, sl
    e400:	blt	e3a8 <ReadUInt32Data+0x146c>
    e404:	mov	r1, r7
    e408:	mov	r7, r5
    e40c:	ldr	r5, [sp, #4]
    e410:	cmp	r0, r5
    e414:	bge	e468 <ReadUInt32Data+0x152c>
    e418:	sub	r9, r5, r0
    e41c:	ldr	r0, [sp, #20]
    e420:	add	r4, sp, #48	; 0x30
    e424:	mov	r2, r9
    e428:	ldr	r3, [r0]
    e42c:	mov	r0, r4
    e430:	bl	18d0 <fread@plt>
    e434:	add	r7, r0, r7
    e438:	cmp	r9, #1
    e43c:	blt	e458 <ReadUInt32Data+0x151c>
    e440:	sub	r0, r5, r8
    e444:	sub	r0, r0, #256	; 0x100
    e448:	ldr	r1, [r4], #8
    e44c:	subs	r0, r0, #1
    e450:	str	r1, [r6], #4
    e454:	bne	e448 <ReadUInt32Data+0x150c>
    e458:	ldr	r0, [sp, #16]
    e45c:	mov	r5, r7
    e460:	mov	r7, r0
    e464:	b	e470 <ReadUInt32Data+0x1534>
    e468:	mov	r5, r7
    e46c:	mov	r7, r1
    e470:	mul	r0, r5, r7
    e474:	b	cf64 <ReadUInt32Data+0x28>

0000e478 <ReadCompressedUInt32Data>:
    e478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e47c:	add	fp, sp, #28
    e480:	sub	sp, sp, #12
    e484:	mov	r7, r0
    e488:	mov	r0, #0
    e48c:	cmp	r1, #0
    e490:	beq	e998 <ReadCompressedUInt32Data+0x520>
    e494:	cmp	r7, #0
    e498:	movne	r5, r2
    e49c:	cmpne	r2, #0
    e4a0:	beq	e998 <ReadCompressedUInt32Data+0x520>
    e4a4:	ldr	sl, [fp, #8]
    e4a8:	mov	r0, r3
    e4ac:	mov	r4, r3
    e4b0:	mov	r6, r1
    e4b4:	bl	193c <Mat_SizeOf@plt>
    e4b8:	mov	r9, r0
    e4bc:	sub	r0, r4, #1
    e4c0:	cmp	r0, #12
    e4c4:	bhi	e994 <ReadCompressedUInt32Data+0x51c>
    e4c8:	add	r1, pc, #4
    e4cc:	ldr	r0, [r1, r0, lsl #2]
    e4d0:	add	pc, r1, r0
    e4d4:	.word	0x00000034
    e4d8:	.word	0x0000006c
    e4dc:	.word	0x000000a4
    e4e0:	.word	0x000000ec
    e4e4:	.word	0x00000134
    e4e8:	.word	0x0000017c
    e4ec:	.word	0x000001c4
    e4f0:	.word	0x000004c0
    e4f4:	.word	0x00000214
    e4f8:	.word	0x000004c0
    e4fc:	.word	0x000004c0
    e500:	.word	0x00000264
    e504:	.word	0x000002ac
    e508:	cmp	sl, #1
    e50c:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e510:	mov	r8, sp
    e514:	mov	r4, sl
    e518:	mov	r0, r7
    e51c:	mov	r1, r6
    e520:	mov	r2, r8
    e524:	mov	r3, r9
    e528:	bl	31dc <InflateData>
    e52c:	ldrsb	r0, [sp]
    e530:	subs	r4, r4, #1
    e534:	str	r0, [r5], #4
    e538:	bne	e518 <ReadCompressedUInt32Data+0xa0>
    e53c:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e540:	cmp	sl, #1
    e544:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e548:	mov	r8, sp
    e54c:	mov	r4, sl
    e550:	mov	r0, r7
    e554:	mov	r1, r6
    e558:	mov	r2, r8
    e55c:	mov	r3, r9
    e560:	bl	31dc <InflateData>
    e564:	ldrb	r0, [sp]
    e568:	subs	r4, r4, #1
    e56c:	str	r0, [r5], #4
    e570:	bne	e550 <ReadCompressedUInt32Data+0xd8>
    e574:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e578:	ldr	r0, [r7, #20]
    e57c:	cmp	r0, #0
    e580:	beq	e7c8 <ReadCompressedUInt32Data+0x350>
    e584:	cmp	sl, #1
    e588:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e58c:	mov	r8, sp
    e590:	mov	r4, sl
    e594:	mov	r0, r7
    e598:	mov	r1, r6
    e59c:	mov	r2, r8
    e5a0:	mov	r3, r9
    e5a4:	bl	31dc <InflateData>
    e5a8:	mov	r0, r8
    e5ac:	bl	1c58 <Mat_int16Swap>
    e5b0:	str	r0, [r5], #4
    e5b4:	subs	r4, r4, #1
    e5b8:	bne	e594 <ReadCompressedUInt32Data+0x11c>
    e5bc:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e5c0:	ldr	r0, [r7, #20]
    e5c4:	cmp	r0, #0
    e5c8:	beq	e800 <ReadCompressedUInt32Data+0x388>
    e5cc:	cmp	sl, #1
    e5d0:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e5d4:	mov	r8, sp
    e5d8:	mov	r4, sl
    e5dc:	mov	r0, r7
    e5e0:	mov	r1, r6
    e5e4:	mov	r2, r8
    e5e8:	mov	r3, r9
    e5ec:	bl	31dc <InflateData>
    e5f0:	mov	r0, r8
    e5f4:	bl	1c6c <Mat_uint16Swap>
    e5f8:	str	r0, [r5], #4
    e5fc:	subs	r4, r4, #1
    e600:	bne	e5dc <ReadCompressedUInt32Data+0x164>
    e604:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e608:	ldr	r0, [r7, #20]
    e60c:	cmp	r0, #0
    e610:	beq	e838 <ReadCompressedUInt32Data+0x3c0>
    e614:	cmp	sl, #1
    e618:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e61c:	mov	r8, sp
    e620:	mov	r4, sl
    e624:	mov	r0, r7
    e628:	mov	r1, r6
    e62c:	mov	r2, r8
    e630:	mov	r3, r9
    e634:	bl	31dc <InflateData>
    e638:	mov	r0, r8
    e63c:	bl	1c30 <Mat_int32Swap>
    e640:	str	r0, [r5], #4
    e644:	subs	r4, r4, #1
    e648:	bne	e624 <ReadCompressedUInt32Data+0x1ac>
    e64c:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e650:	ldr	r0, [r7, #20]
    e654:	cmp	r0, #0
    e658:	beq	e870 <ReadCompressedUInt32Data+0x3f8>
    e65c:	cmp	sl, #1
    e660:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e664:	mov	r8, sp
    e668:	mov	r4, sl
    e66c:	mov	r0, r7
    e670:	mov	r1, r6
    e674:	mov	r2, r8
    e678:	mov	r3, r9
    e67c:	bl	31dc <InflateData>
    e680:	mov	r0, r8
    e684:	bl	1c44 <Mat_uint32Swap>
    e688:	str	r0, [r5], #4
    e68c:	subs	r4, r4, #1
    e690:	bne	e66c <ReadCompressedUInt32Data+0x1f4>
    e694:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e698:	ldr	r0, [r7, #20]
    e69c:	cmp	r0, #0
    e6a0:	beq	e8a8 <ReadCompressedUInt32Data+0x430>
    e6a4:	cmp	sl, #1
    e6a8:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e6ac:	mov	r8, sp
    e6b0:	mov	r4, sl
    e6b4:	mov	r0, r7
    e6b8:	mov	r1, r6
    e6bc:	mov	r2, r8
    e6c0:	mov	r3, r9
    e6c4:	bl	31dc <InflateData>
    e6c8:	mov	r0, r8
    e6cc:	bl	1c84 <Mat_floatSwap>
    e6d0:	vcvt.u32.f32	s0, s0
    e6d4:	subs	r4, r4, #1
    e6d8:	vmov	r0, s0
    e6dc:	str	r0, [r5], #4
    e6e0:	bne	e6b4 <ReadCompressedUInt32Data+0x23c>
    e6e4:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e6e8:	ldr	r0, [r7, #20]
    e6ec:	cmp	r0, #0
    e6f0:	beq	e8e8 <ReadCompressedUInt32Data+0x470>
    e6f4:	cmp	sl, #1
    e6f8:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e6fc:	mov	r8, sp
    e700:	mov	r4, sl
    e704:	mov	r0, r7
    e708:	mov	r1, r6
    e70c:	mov	r2, r8
    e710:	mov	r3, r9
    e714:	bl	31dc <InflateData>
    e718:	mov	r0, r8
    e71c:	bl	1cc8 <Mat_doubleSwap>
    e720:	vcvt.u32.f64	s0, d0
    e724:	subs	r4, r4, #1
    e728:	vmov	r0, s0
    e72c:	str	r0, [r5], #4
    e730:	bne	e704 <ReadCompressedUInt32Data+0x28c>
    e734:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e738:	ldr	r0, [r7, #20]
    e73c:	cmp	r0, #0
    e740:	beq	e928 <ReadCompressedUInt32Data+0x4b0>
    e744:	cmp	sl, #1
    e748:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e74c:	mov	r8, sp
    e750:	mov	r4, sl
    e754:	mov	r0, r7
    e758:	mov	r1, r6
    e75c:	mov	r2, r8
    e760:	mov	r3, r9
    e764:	bl	31dc <InflateData>
    e768:	mov	r0, r8
    e76c:	bl	1bbc <Mat_int64Swap>
    e770:	str	r0, [r5], #4
    e774:	subs	r4, r4, #1
    e778:	bne	e754 <ReadCompressedUInt32Data+0x2dc>
    e77c:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e780:	ldr	r0, [r7, #20]
    e784:	cmp	r0, #0
    e788:	beq	e960 <ReadCompressedUInt32Data+0x4e8>
    e78c:	cmp	sl, #1
    e790:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e794:	mov	r8, sp
    e798:	mov	r4, sl
    e79c:	mov	r0, r7
    e7a0:	mov	r1, r6
    e7a4:	mov	r2, r8
    e7a8:	mov	r3, r9
    e7ac:	bl	31dc <InflateData>
    e7b0:	mov	r0, r8
    e7b4:	bl	1c0c <Mat_uint64Swap>
    e7b8:	str	r0, [r5], #4
    e7bc:	subs	r4, r4, #1
    e7c0:	bne	e79c <ReadCompressedUInt32Data+0x324>
    e7c4:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e7c8:	cmp	sl, #1
    e7cc:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e7d0:	mov	r8, sp
    e7d4:	mov	r4, sl
    e7d8:	mov	r0, r7
    e7dc:	mov	r1, r6
    e7e0:	mov	r2, r8
    e7e4:	mov	r3, r9
    e7e8:	bl	31dc <InflateData>
    e7ec:	ldrsh	r0, [sp]
    e7f0:	subs	r4, r4, #1
    e7f4:	str	r0, [r5], #4
    e7f8:	bne	e7d8 <ReadCompressedUInt32Data+0x360>
    e7fc:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e800:	cmp	sl, #1
    e804:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e808:	mov	r8, sp
    e80c:	mov	r4, sl
    e810:	mov	r0, r7
    e814:	mov	r1, r6
    e818:	mov	r2, r8
    e81c:	mov	r3, r9
    e820:	bl	31dc <InflateData>
    e824:	ldrh	r0, [sp]
    e828:	subs	r4, r4, #1
    e82c:	str	r0, [r5], #4
    e830:	bne	e810 <ReadCompressedUInt32Data+0x398>
    e834:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e838:	cmp	sl, #1
    e83c:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e840:	mov	r8, sp
    e844:	mov	r4, sl
    e848:	mov	r0, r7
    e84c:	mov	r1, r6
    e850:	mov	r2, r8
    e854:	mov	r3, r9
    e858:	bl	31dc <InflateData>
    e85c:	ldr	r0, [sp]
    e860:	subs	r4, r4, #1
    e864:	str	r0, [r5], #4
    e868:	bne	e848 <ReadCompressedUInt32Data+0x3d0>
    e86c:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e870:	cmp	sl, #1
    e874:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e878:	mov	r8, sp
    e87c:	mov	r4, sl
    e880:	mov	r0, r7
    e884:	mov	r1, r6
    e888:	mov	r2, r8
    e88c:	mov	r3, r9
    e890:	bl	31dc <InflateData>
    e894:	ldr	r0, [sp]
    e898:	subs	r4, r4, #1
    e89c:	str	r0, [r5], #4
    e8a0:	bne	e880 <ReadCompressedUInt32Data+0x408>
    e8a4:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e8a8:	cmp	sl, #1
    e8ac:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e8b0:	mov	r8, sp
    e8b4:	mov	r4, sl
    e8b8:	mov	r0, r7
    e8bc:	mov	r1, r6
    e8c0:	mov	r2, r8
    e8c4:	mov	r3, r9
    e8c8:	bl	31dc <InflateData>
    e8cc:	vldr	s0, [sp]
    e8d0:	subs	r4, r4, #1
    e8d4:	vcvt.u32.f32	s0, s0
    e8d8:	vmov	r0, s0
    e8dc:	str	r0, [r5], #4
    e8e0:	bne	e8b8 <ReadCompressedUInt32Data+0x440>
    e8e4:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e8e8:	cmp	sl, #1
    e8ec:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e8f0:	mov	r8, sp
    e8f4:	mov	r4, sl
    e8f8:	mov	r0, r7
    e8fc:	mov	r1, r6
    e900:	mov	r2, r8
    e904:	mov	r3, r9
    e908:	bl	31dc <InflateData>
    e90c:	vldr	d16, [sp]
    e910:	subs	r4, r4, #1
    e914:	vcvt.u32.f64	s0, d16
    e918:	vmov	r0, s0
    e91c:	str	r0, [r5], #4
    e920:	bne	e8f8 <ReadCompressedUInt32Data+0x480>
    e924:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e928:	cmp	sl, #1
    e92c:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e930:	mov	r8, sp
    e934:	mov	r4, sl
    e938:	mov	r0, r7
    e93c:	mov	r1, r6
    e940:	mov	r2, r8
    e944:	mov	r3, r9
    e948:	bl	31dc <InflateData>
    e94c:	ldr	r0, [sp]
    e950:	subs	r4, r4, #1
    e954:	str	r0, [r5], #4
    e958:	bne	e938 <ReadCompressedUInt32Data+0x4c0>
    e95c:	b	e994 <ReadCompressedUInt32Data+0x51c>
    e960:	cmp	sl, #1
    e964:	blt	e994 <ReadCompressedUInt32Data+0x51c>
    e968:	mov	r8, sp
    e96c:	mov	r4, sl
    e970:	mov	r0, r7
    e974:	mov	r1, r6
    e978:	mov	r2, r8
    e97c:	mov	r3, r9
    e980:	bl	31dc <InflateData>
    e984:	ldr	r0, [sp]
    e988:	subs	r4, r4, #1
    e98c:	str	r0, [r5], #4
    e990:	bne	e970 <ReadCompressedUInt32Data+0x4f8>
    e994:	mul	r0, r9, sl
    e998:	sub	sp, fp, #28
    e99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e9a0 <ReadInt16Data>:
    e9a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e9a4:	add	fp, sp, #28
    e9a8:	sub	sp, sp, #52	; 0x34
    e9ac:	sub	sp, sp, #2048	; 0x800
    e9b0:	mov	sl, r0
    e9b4:	mov	r0, #0
    e9b8:	cmp	sl, #0
    e9bc:	movne	r9, r1
    e9c0:	cmpne	r1, #0
    e9c4:	bne	e9d0 <ReadInt16Data+0x30>
    e9c8:	sub	sp, fp, #28
    e9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e9d0:	ldr	r1, [sl]
    e9d4:	cmp	r1, #0
    e9d8:	beq	e9c8 <ReadInt16Data+0x28>
    e9dc:	mov	r0, r2
    e9e0:	mov	r5, r3
    e9e4:	mov	r6, r2
    e9e8:	bl	193c <Mat_SizeOf@plt>
    e9ec:	mov	r7, r0
    e9f0:	sub	r0, r6, #1
    e9f4:	mov	r1, #0
    e9f8:	str	sl, [sp, #28]
    e9fc:	cmp	r0, #11
    ea00:	str	r1, [sp, #12]
    ea04:	str	r7, [sp, #24]
    ea08:	bhi	fc78 <ReadInt16Data+0x12d8>
    ea0c:	add	r1, pc, #4
    ea10:	ldr	r0, [r1, r0, lsl #2]
    ea14:	add	pc, r1, r0
    ea18:	.word	0x00000030
    ea1c:	.word	0x0000006c
    ea20:	.word	0x000000a8
    ea24:	.word	0x000000fc
    ea28:	.word	0x00000150
    ea2c:	.word	0x000001a4
    ea30:	.word	0x000001f8
    ea34:	.word	0x00001260
    ea38:	.word	0x00000254
    ea3c:	.word	0x00001260
    ea40:	.word	0x00001260
    ea44:	.word	0x000002b4
    ea48:	cmp	r5, #256	; 0x100
    ea4c:	bgt	ed2c <ReadInt16Data+0x38c>
    ea50:	ldr	r3, [sl]
    ea54:	add	r4, sp, #48	; 0x30
    ea58:	mov	r1, r7
    ea5c:	mov	r2, r5
    ea60:	mov	r0, r4
    ea64:	bl	18d0 <fread@plt>
    ea68:	cmp	r5, #1
    ea6c:	blt	f0ac <ReadInt16Data+0x70c>
    ea70:	ldrsb	r1, [r4], #1
    ea74:	subs	r5, r5, #1
    ea78:	strh	r1, [r9], #2
    ea7c:	bne	ea70 <ReadInt16Data+0xd0>
    ea80:	b	f0ac <ReadInt16Data+0x70c>
    ea84:	cmp	r5, #256	; 0x100
    ea88:	bgt	ee14 <ReadInt16Data+0x474>
    ea8c:	ldr	r3, [sl]
    ea90:	add	r4, sp, #48	; 0x30
    ea94:	mov	r1, r7
    ea98:	mov	r2, r5
    ea9c:	mov	r0, r4
    eaa0:	bl	18d0 <fread@plt>
    eaa4:	cmp	r5, #1
    eaa8:	blt	f0ac <ReadInt16Data+0x70c>
    eaac:	ldrb	r1, [r4], #1
    eab0:	subs	r5, r5, #1
    eab4:	strh	r1, [r9], #2
    eab8:	bne	eaac <ReadInt16Data+0x10c>
    eabc:	b	f0ac <ReadInt16Data+0x70c>
    eac0:	ldr	r0, [sl, #20]
    eac4:	cmp	r0, #0
    eac8:	beq	eefc <ReadInt16Data+0x55c>
    eacc:	cmp	r5, #256	; 0x100
    ead0:	bgt	f0fc <ReadInt16Data+0x75c>
    ead4:	ldr	r3, [sl]
    ead8:	add	r4, sp, #48	; 0x30
    eadc:	mov	r1, r7
    eae0:	mov	r2, r5
    eae4:	mov	r0, r4
    eae8:	bl	18d0 <fread@plt>
    eaec:	mov	r6, r0
    eaf0:	cmp	r5, #1
    eaf4:	blt	ecc4 <ReadInt16Data+0x324>
    eaf8:	mov	r0, r4
    eafc:	bl	1c58 <Mat_int16Swap>
    eb00:	strh	r0, [r9], #2
    eb04:	add	r4, r4, #2
    eb08:	subs	r5, r5, #1
    eb0c:	bne	eaf8 <ReadInt16Data+0x158>
    eb10:	b	ecc4 <ReadInt16Data+0x324>
    eb14:	ldr	r0, [sl, #20]
    eb18:	cmp	r0, #0
    eb1c:	beq	ef68 <ReadInt16Data+0x5c8>
    eb20:	cmp	r5, #256	; 0x100
    eb24:	bgt	f1dc <ReadInt16Data+0x83c>
    eb28:	ldr	r3, [sl]
    eb2c:	add	r4, sp, #48	; 0x30
    eb30:	mov	r1, r7
    eb34:	mov	r2, r5
    eb38:	mov	r0, r4
    eb3c:	bl	18d0 <fread@plt>
    eb40:	mov	r6, r0
    eb44:	cmp	r5, #1
    eb48:	blt	ecc4 <ReadInt16Data+0x324>
    eb4c:	mov	r0, r4
    eb50:	bl	1c6c <Mat_uint16Swap>
    eb54:	strh	r0, [r9], #2
    eb58:	add	r4, r4, #2
    eb5c:	subs	r5, r5, #1
    eb60:	bne	eb4c <ReadInt16Data+0x1ac>
    eb64:	b	ecc4 <ReadInt16Data+0x324>
    eb68:	ldr	r0, [sl, #20]
    eb6c:	cmp	r0, #0
    eb70:	beq	efa8 <ReadInt16Data+0x608>
    eb74:	cmp	r5, #256	; 0x100
    eb78:	bgt	f2bc <ReadInt16Data+0x91c>
    eb7c:	ldr	r3, [sl]
    eb80:	add	r4, sp, #48	; 0x30
    eb84:	mov	r1, r7
    eb88:	mov	r2, r5
    eb8c:	mov	r0, r4
    eb90:	bl	18d0 <fread@plt>
    eb94:	mov	r6, r0
    eb98:	cmp	r5, #1
    eb9c:	blt	ecc4 <ReadInt16Data+0x324>
    eba0:	mov	r0, r4
    eba4:	bl	1c30 <Mat_int32Swap>
    eba8:	strh	r0, [r9], #2
    ebac:	add	r4, r4, #4
    ebb0:	subs	r5, r5, #1
    ebb4:	bne	eba0 <ReadInt16Data+0x200>
    ebb8:	b	ecc4 <ReadInt16Data+0x324>
    ebbc:	ldr	r0, [sl, #20]
    ebc0:	cmp	r0, #0
    ebc4:	beq	efe4 <ReadInt16Data+0x644>
    ebc8:	cmp	r5, #256	; 0x100
    ebcc:	bgt	f3a4 <ReadInt16Data+0xa04>
    ebd0:	ldr	r3, [sl]
    ebd4:	add	r4, sp, #48	; 0x30
    ebd8:	mov	r1, r7
    ebdc:	mov	r2, r5
    ebe0:	mov	r0, r4
    ebe4:	bl	18d0 <fread@plt>
    ebe8:	mov	r6, r0
    ebec:	cmp	r5, #1
    ebf0:	blt	ecc4 <ReadInt16Data+0x324>
    ebf4:	mov	r0, r4
    ebf8:	bl	1c44 <Mat_uint32Swap>
    ebfc:	strh	r0, [r9], #2
    ec00:	add	r4, r4, #4
    ec04:	subs	r5, r5, #1
    ec08:	bne	ebf4 <ReadInt16Data+0x254>
    ec0c:	b	ecc4 <ReadInt16Data+0x324>
    ec10:	ldr	r0, [sl, #20]
    ec14:	cmp	r0, #0
    ec18:	beq	f020 <ReadInt16Data+0x680>
    ec1c:	cmp	r5, #256	; 0x100
    ec20:	bgt	f48c <ReadInt16Data+0xaec>
    ec24:	ldr	r3, [sl]
    ec28:	add	r4, sp, #48	; 0x30
    ec2c:	mov	r1, r7
    ec30:	mov	r2, r5
    ec34:	mov	r0, r4
    ec38:	bl	18d0 <fread@plt>
    ec3c:	mov	r6, r0
    ec40:	cmp	r5, #1
    ec44:	blt	ecc4 <ReadInt16Data+0x324>
    ec48:	mov	r0, r4
    ec4c:	bl	1c84 <Mat_floatSwap>
    ec50:	vcvt.s32.f32	s0, s0
    ec54:	add	r4, r4, #4
    ec58:	subs	r5, r5, #1
    ec5c:	vmov	r0, s0
    ec60:	strh	r0, [r9], #2
    ec64:	bne	ec48 <ReadInt16Data+0x2a8>
    ec68:	b	ecc4 <ReadInt16Data+0x324>
    ec6c:	ldr	r0, [sl, #20]
    ec70:	cmp	r0, #0
    ec74:	beq	f068 <ReadInt16Data+0x6c8>
    ec78:	cmp	r5, #256	; 0x100
    ec7c:	bgt	f580 <ReadInt16Data+0xbe0>
    ec80:	ldr	r3, [sl]
    ec84:	add	r4, sp, #48	; 0x30
    ec88:	mov	r1, r7
    ec8c:	mov	r2, r5
    ec90:	mov	r0, r4
    ec94:	bl	18d0 <fread@plt>
    ec98:	mov	r6, r0
    ec9c:	cmp	r5, #1
    eca0:	blt	ecc4 <ReadInt16Data+0x324>
    eca4:	mov	r0, r4
    eca8:	bl	1cc8 <Mat_doubleSwap>
    ecac:	vcvt.s32.f64	s0, d0
    ecb0:	add	r4, r4, #8
    ecb4:	subs	r5, r5, #1
    ecb8:	vmov	r0, s0
    ecbc:	strh	r0, [r9], #2
    ecc0:	bne	eca4 <ReadInt16Data+0x304>
    ecc4:	mov	r5, r6
    ecc8:	b	fee4 <ReadInt16Data+0x1544>
    eccc:	ldr	r0, [sl, #20]
    ecd0:	cmp	r0, #0
    ecd4:	beq	f0b4 <ReadInt16Data+0x714>
    ecd8:	cmp	r5, #256	; 0x100
    ecdc:	bgt	f674 <ReadInt16Data+0xcd4>
    ece0:	ldr	r3, [sl]
    ece4:	add	r4, sp, #48	; 0x30
    ece8:	mov	r1, r7
    ecec:	mov	r2, r5
    ecf0:	mov	r0, r4
    ecf4:	bl	18d0 <fread@plt>
    ecf8:	cmp	r5, #1
    ecfc:	str	r0, [sp, #12]
    ed00:	blt	fc78 <ReadInt16Data+0x12d8>
    ed04:	str	r6, [sp, #4]
    ed08:	mov	r6, r9
    ed0c:	mov	r7, r5
    ed10:	mov	r0, r4
    ed14:	bl	1bbc <Mat_int64Swap>
    ed18:	strh	r0, [r6], #2
    ed1c:	add	r4, r4, #8
    ed20:	subs	r7, r7, #1
    ed24:	bne	ed10 <ReadInt16Data+0x370>
    ed28:	b	f778 <ReadInt16Data+0xdd8>
    ed2c:	sub	r0, r5, #256	; 0x100
    ed30:	str	r5, [sp, #8]
    ed34:	add	r1, r9, #512	; 0x200
    ed38:	add	r4, sp, #48	; 0x30
    ed3c:	add	sl, sp, #32
    ed40:	mov	r5, #0
    ed44:	str	r0, [sp, #20]
    ed48:	mov	r0, #0
    ed4c:	mov	r8, r0
    ed50:	ldr	r0, [sp, #28]
    ed54:	mov	r6, r1
    ed58:	mov	r1, r7
    ed5c:	mov	r2, #256	; 0x100
    ed60:	ldr	r3, [r0]
    ed64:	mov	r0, r4
    ed68:	bl	18d0 <fread@plt>
    ed6c:	mov	r1, r9
    ed70:	mov	r2, #0
    ed74:	ldr	r3, [r4, r2]
    ed78:	str	r3, [sp, #32]
    ed7c:	add	r3, r4, r2
    ed80:	add	r2, r2, #8
    ed84:	ldr	r3, [r3, #4]
    ed88:	cmp	r2, #256	; 0x100
    ed8c:	str	r3, [sp, #36]	; 0x24
    ed90:	vld1.8	{d16}, [sl :64]
    ed94:	vmovl.s8	q8, d16
    ed98:	vst1.16	{d16-d17}, [r1]!
    ed9c:	bne	ed74 <ReadInt16Data+0x3d4>
    eda0:	ldr	r2, [sp, #20]
    eda4:	add	r5, r0, r5
    eda8:	add	r0, r8, #256	; 0x100
    edac:	add	r9, r9, #512	; 0x200
    edb0:	add	r1, r6, #512	; 0x200
    edb4:	cmp	r0, r2
    edb8:	blt	ed4c <ReadInt16Data+0x3ac>
    edbc:	mov	r9, r5
    edc0:	ldr	r5, [sp, #8]
    edc4:	cmp	r0, r5
    edc8:	bge	fee0 <ReadInt16Data+0x1540>
    edcc:	mov	r1, r7
    edd0:	sub	r7, r5, r0
    edd4:	ldr	r0, [sp, #28]
    edd8:	add	r4, sp, #48	; 0x30
    eddc:	mov	r2, r7
    ede0:	ldr	r3, [r0]
    ede4:	mov	r0, r4
    ede8:	bl	18d0 <fread@plt>
    edec:	add	r9, r0, r9
    edf0:	cmp	r7, #1
    edf4:	blt	fedc <ReadInt16Data+0x153c>
    edf8:	sub	r0, r5, r8
    edfc:	sub	r0, r0, #256	; 0x100
    ee00:	ldrsb	r1, [r4], #1
    ee04:	subs	r0, r0, #1
    ee08:	strh	r1, [r6], #2
    ee0c:	bne	ee00 <ReadInt16Data+0x460>
    ee10:	b	fedc <ReadInt16Data+0x153c>
    ee14:	sub	r0, r5, #256	; 0x100
    ee18:	str	r5, [sp, #8]
    ee1c:	add	r1, r9, #512	; 0x200
    ee20:	add	r4, sp, #48	; 0x30
    ee24:	add	sl, sp, #40	; 0x28
    ee28:	mov	r5, #0
    ee2c:	str	r0, [sp, #20]
    ee30:	mov	r0, #0
    ee34:	mov	r8, r0
    ee38:	ldr	r0, [sp, #28]
    ee3c:	mov	r6, r1
    ee40:	mov	r1, r7
    ee44:	mov	r2, #256	; 0x100
    ee48:	ldr	r3, [r0]
    ee4c:	mov	r0, r4
    ee50:	bl	18d0 <fread@plt>
    ee54:	mov	r1, r9
    ee58:	mov	r2, #0
    ee5c:	ldr	r3, [r4, r2]
    ee60:	str	r3, [sp, #40]	; 0x28
    ee64:	add	r3, r4, r2
    ee68:	add	r2, r2, #8
    ee6c:	ldr	r3, [r3, #4]
    ee70:	cmp	r2, #256	; 0x100
    ee74:	str	r3, [sp, #44]	; 0x2c
    ee78:	vld1.8	{d16}, [sl :64]
    ee7c:	vmovl.u8	q8, d16
    ee80:	vst1.16	{d16-d17}, [r1]!
    ee84:	bne	ee5c <ReadInt16Data+0x4bc>
    ee88:	ldr	r2, [sp, #20]
    ee8c:	add	r5, r0, r5
    ee90:	add	r0, r8, #256	; 0x100
    ee94:	add	r9, r9, #512	; 0x200
    ee98:	add	r1, r6, #512	; 0x200
    ee9c:	cmp	r0, r2
    eea0:	blt	ee34 <ReadInt16Data+0x494>
    eea4:	mov	r9, r5
    eea8:	ldr	r5, [sp, #8]
    eeac:	cmp	r0, r5
    eeb0:	bge	fee0 <ReadInt16Data+0x1540>
    eeb4:	mov	r1, r7
    eeb8:	sub	r7, r5, r0
    eebc:	ldr	r0, [sp, #28]
    eec0:	add	r4, sp, #48	; 0x30
    eec4:	mov	r2, r7
    eec8:	ldr	r3, [r0]
    eecc:	mov	r0, r4
    eed0:	bl	18d0 <fread@plt>
    eed4:	add	r9, r0, r9
    eed8:	cmp	r7, #1
    eedc:	blt	fedc <ReadInt16Data+0x153c>
    eee0:	sub	r0, r5, r8
    eee4:	sub	r0, r0, #256	; 0x100
    eee8:	ldrb	r1, [r4], #1
    eeec:	subs	r0, r0, #1
    eef0:	strh	r1, [r6], #2
    eef4:	bne	eee8 <ReadInt16Data+0x548>
    eef8:	b	fedc <ReadInt16Data+0x153c>
    eefc:	cmp	r5, #256	; 0x100
    ef00:	ble	ef70 <ReadInt16Data+0x5d0>
    ef04:	sub	r0, r5, #256	; 0x100
    ef08:	lsl	r4, r5, #1
    ef0c:	str	r5, [sp, #8]
    ef10:	mov	r6, #0
    ef14:	add	r8, sp, #48	; 0x30
    ef18:	mov	r5, #0
    ef1c:	str	r0, [sp, #20]
    ef20:	ldr	r3, [sl]
    ef24:	mov	r0, r8
    ef28:	mov	r1, r7
    ef2c:	mov	r2, #256	; 0x100
    ef30:	bl	18d0 <fread@plt>
    ef34:	mov	sl, r0
    ef38:	add	r0, r9, r6, lsl #1
    ef3c:	mov	r1, r8
    ef40:	mov	r2, #512	; 0x200
    ef44:	bl	1834 <memcpy@plt>
    ef48:	ldr	r0, [sp, #20]
    ef4c:	add	r5, sl, r5
    ef50:	ldr	sl, [sp, #28]
    ef54:	add	r6, r6, #256	; 0x100
    ef58:	sub	r4, r4, #512	; 0x200
    ef5c:	cmp	r6, r0
    ef60:	blt	ef20 <ReadInt16Data+0x580>
    ef64:	b	f7e0 <ReadInt16Data+0xe40>
    ef68:	cmp	r5, #256	; 0x100
    ef6c:	bgt	f780 <ReadInt16Data+0xde0>
    ef70:	ldr	r3, [sl]
    ef74:	add	r0, sp, #48	; 0x30
    ef78:	mov	r1, r7
    ef7c:	mov	r2, r5
    ef80:	bl	18d0 <fread@plt>
    ef84:	mov	r4, r0
    ef88:	cmp	r5, #1
    ef8c:	blt	efa0 <ReadInt16Data+0x600>
    ef90:	lsl	r2, r5, #1
    ef94:	add	r1, sp, #48	; 0x30
    ef98:	mov	r0, r9
    ef9c:	bl	1834 <memcpy@plt>
    efa0:	mov	r5, r4
    efa4:	b	fee4 <ReadInt16Data+0x1544>
    efa8:	cmp	r5, #256	; 0x100
    efac:	bgt	f828 <ReadInt16Data+0xe88>
    efb0:	ldr	r3, [sl]
    efb4:	add	r4, sp, #48	; 0x30
    efb8:	mov	r1, r7
    efbc:	mov	r2, r5
    efc0:	mov	r0, r4
    efc4:	bl	18d0 <fread@plt>
    efc8:	cmp	r5, #1
    efcc:	blt	f0ac <ReadInt16Data+0x70c>
    efd0:	ldr	r1, [r4], #4
    efd4:	subs	r5, r5, #1
    efd8:	strh	r1, [r9], #2
    efdc:	bne	efd0 <ReadInt16Data+0x630>
    efe0:	b	f0ac <ReadInt16Data+0x70c>
    efe4:	cmp	r5, #256	; 0x100
    efe8:	bgt	f8f4 <ReadInt16Data+0xf54>
    efec:	ldr	r3, [sl]
    eff0:	add	r4, sp, #48	; 0x30
    eff4:	mov	r1, r7
    eff8:	mov	r2, r5
    effc:	mov	r0, r4
    f000:	bl	18d0 <fread@plt>
    f004:	cmp	r5, #1
    f008:	blt	f0ac <ReadInt16Data+0x70c>
    f00c:	ldr	r1, [r4], #4
    f010:	subs	r5, r5, #1
    f014:	strh	r1, [r9], #2
    f018:	bne	f00c <ReadInt16Data+0x66c>
    f01c:	b	f0ac <ReadInt16Data+0x70c>
    f020:	cmp	r5, #256	; 0x100
    f024:	bgt	f9c0 <ReadInt16Data+0x1020>
    f028:	ldr	r3, [sl]
    f02c:	add	r4, sp, #48	; 0x30
    f030:	mov	r1, r7
    f034:	mov	r2, r5
    f038:	mov	r0, r4
    f03c:	bl	18d0 <fread@plt>
    f040:	cmp	r5, #1
    f044:	blt	f0ac <ReadInt16Data+0x70c>
    f048:	vldr	s0, [r4]
    f04c:	add	r4, r4, #4
    f050:	subs	r5, r5, #1
    f054:	vcvt.s32.f32	s0, s0
    f058:	vmov	r1, s0
    f05c:	strh	r1, [r9], #2
    f060:	bne	f048 <ReadInt16Data+0x6a8>
    f064:	b	f0ac <ReadInt16Data+0x70c>
    f068:	cmp	r5, #256	; 0x100
    f06c:	bgt	fa9c <ReadInt16Data+0x10fc>
    f070:	ldr	r3, [sl]
    f074:	add	r4, sp, #48	; 0x30
    f078:	mov	r1, r7
    f07c:	mov	r2, r5
    f080:	mov	r0, r4
    f084:	bl	18d0 <fread@plt>
    f088:	cmp	r5, #1
    f08c:	blt	f0ac <ReadInt16Data+0x70c>
    f090:	vldr	d16, [r4]
    f094:	add	r4, r4, #8
    f098:	subs	r5, r5, #1
    f09c:	vcvt.s32.f64	s0, d16
    f0a0:	vmov	r1, s0
    f0a4:	strh	r1, [r9], #2
    f0a8:	bne	f090 <ReadInt16Data+0x6f0>
    f0ac:	mov	r5, r0
    f0b0:	b	fee4 <ReadInt16Data+0x1544>
    f0b4:	cmp	r5, #256	; 0x100
    f0b8:	bgt	fb80 <ReadInt16Data+0x11e0>
    f0bc:	ldr	r3, [sl]
    f0c0:	add	r4, sp, #48	; 0x30
    f0c4:	mov	r1, r7
    f0c8:	mov	r2, r5
    f0cc:	mov	r0, r4
    f0d0:	bl	18d0 <fread@plt>
    f0d4:	cmp	r5, #1
    f0d8:	str	r0, [sp, #12]
    f0dc:	blt	fc78 <ReadInt16Data+0x12d8>
    f0e0:	mov	r0, r9
    f0e4:	mov	r1, r5
    f0e8:	ldrh	r2, [r4], #8
    f0ec:	subs	r1, r1, #1
    f0f0:	strh	r2, [r0], #2
    f0f4:	bne	f0e8 <ReadInt16Data+0x748>
    f0f8:	b	fc78 <ReadInt16Data+0x12d8>
    f0fc:	sub	r0, r5, #256	; 0x100
    f100:	str	r5, [sp, #8]
    f104:	add	r1, r9, #512	; 0x200
    f108:	add	r4, sp, #48	; 0x30
    f10c:	mov	r5, #0
    f110:	str	r0, [sp, #20]
    f114:	mov	r0, #0
    f118:	mov	sl, r0
    f11c:	ldr	r0, [sp, #28]
    f120:	mov	r8, r1
    f124:	mov	r1, r7
    f128:	mov	r2, #256	; 0x100
    f12c:	ldr	r3, [r0]
    f130:	mov	r0, r4
    f134:	bl	18d0 <fread@plt>
    f138:	mov	r6, r0
    f13c:	mov	r7, #0
    f140:	add	r0, r4, r7
    f144:	bl	1c58 <Mat_int16Swap>
    f148:	add	r1, r9, r7
    f14c:	add	r7, r7, #2
    f150:	cmp	r7, #512	; 0x200
    f154:	strh	r0, [r1]
    f158:	bne	f140 <ReadInt16Data+0x7a0>
    f15c:	ldr	r2, [sp, #20]
    f160:	ldr	r7, [sp, #24]
    f164:	add	r0, sl, #256	; 0x100
    f168:	add	r5, r6, r5
    f16c:	add	r9, r9, #512	; 0x200
    f170:	add	r1, r8, #512	; 0x200
    f174:	cmp	r0, r2
    f178:	blt	f118 <ReadInt16Data+0x778>
    f17c:	mov	r9, r5
    f180:	ldr	r5, [sp, #8]
    f184:	cmp	r0, r5
    f188:	bge	fee0 <ReadInt16Data+0x1540>
    f18c:	sub	r6, r5, r0
    f190:	ldr	r0, [sp, #28]
    f194:	add	r4, sp, #48	; 0x30
    f198:	mov	r1, r7
    f19c:	mov	r2, r6
    f1a0:	ldr	r3, [r0]
    f1a4:	mov	r0, r4
    f1a8:	bl	18d0 <fread@plt>
    f1ac:	add	r9, r0, r9
    f1b0:	cmp	r6, #1
    f1b4:	blt	fee0 <ReadInt16Data+0x1540>
    f1b8:	sub	r0, r5, sl
    f1bc:	sub	r6, r0, #256	; 0x100
    f1c0:	mov	r0, r4
    f1c4:	bl	1c58 <Mat_int16Swap>
    f1c8:	strh	r0, [r8], #2
    f1cc:	add	r4, r4, #2
    f1d0:	subs	r6, r6, #1
    f1d4:	bne	f1c0 <ReadInt16Data+0x820>
    f1d8:	b	fee0 <ReadInt16Data+0x1540>
    f1dc:	sub	r0, r5, #256	; 0x100
    f1e0:	str	r5, [sp, #8]
    f1e4:	add	r1, r9, #512	; 0x200
    f1e8:	add	r4, sp, #48	; 0x30
    f1ec:	mov	r5, #0
    f1f0:	str	r0, [sp, #20]
    f1f4:	mov	r0, #0
    f1f8:	mov	sl, r0
    f1fc:	ldr	r0, [sp, #28]
    f200:	mov	r8, r1
    f204:	mov	r1, r7
    f208:	mov	r2, #256	; 0x100
    f20c:	ldr	r3, [r0]
    f210:	mov	r0, r4
    f214:	bl	18d0 <fread@plt>
    f218:	mov	r6, r0
    f21c:	mov	r7, #0
    f220:	add	r0, r4, r7
    f224:	bl	1c6c <Mat_uint16Swap>
    f228:	add	r1, r9, r7
    f22c:	add	r7, r7, #2
    f230:	cmp	r7, #512	; 0x200
    f234:	strh	r0, [r1]
    f238:	bne	f220 <ReadInt16Data+0x880>
    f23c:	ldr	r2, [sp, #20]
    f240:	ldr	r7, [sp, #24]
    f244:	add	r0, sl, #256	; 0x100
    f248:	add	r5, r6, r5
    f24c:	add	r9, r9, #512	; 0x200
    f250:	add	r1, r8, #512	; 0x200
    f254:	cmp	r0, r2
    f258:	blt	f1f8 <ReadInt16Data+0x858>
    f25c:	mov	r9, r5
    f260:	ldr	r5, [sp, #8]
    f264:	cmp	r0, r5
    f268:	bge	fee0 <ReadInt16Data+0x1540>
    f26c:	sub	r6, r5, r0
    f270:	ldr	r0, [sp, #28]
    f274:	add	r4, sp, #48	; 0x30
    f278:	mov	r1, r7
    f27c:	mov	r2, r6
    f280:	ldr	r3, [r0]
    f284:	mov	r0, r4
    f288:	bl	18d0 <fread@plt>
    f28c:	add	r9, r0, r9
    f290:	cmp	r6, #1
    f294:	blt	fee0 <ReadInt16Data+0x1540>
    f298:	sub	r0, r5, sl
    f29c:	sub	r6, r0, #256	; 0x100
    f2a0:	mov	r0, r4
    f2a4:	bl	1c6c <Mat_uint16Swap>
    f2a8:	strh	r0, [r8], #2
    f2ac:	add	r4, r4, #2
    f2b0:	subs	r6, r6, #1
    f2b4:	bne	f2a0 <ReadInt16Data+0x900>
    f2b8:	b	fee0 <ReadInt16Data+0x1540>
    f2bc:	sub	r0, r5, #256	; 0x100
    f2c0:	str	r5, [sp, #8]
    f2c4:	add	r1, r9, #512	; 0x200
    f2c8:	mov	r5, #0
    f2cc:	str	r0, [sp, #16]
    f2d0:	mov	r0, #0
    f2d4:	ldr	r3, [sl]
    f2d8:	add	r6, sp, #48	; 0x30
    f2dc:	str	r0, [sp, #20]
    f2e0:	mov	r8, r1
    f2e4:	mov	r1, r7
    f2e8:	mov	r2, #256	; 0x100
    f2ec:	mov	r0, r6
    f2f0:	bl	18d0 <fread@plt>
    f2f4:	mov	r4, r0
    f2f8:	mov	r7, #0
    f2fc:	mov	r0, r6
    f300:	add	sl, r9, r7
    f304:	bl	1c30 <Mat_int32Swap>
    f308:	add	r7, r7, #2
    f30c:	add	r6, r6, #4
    f310:	strh	r0, [sl]
    f314:	cmp	r7, #512	; 0x200
    f318:	bne	f2fc <ReadInt16Data+0x95c>
    f31c:	ldr	r0, [sp, #20]
    f320:	ldr	r2, [sp, #16]
    f324:	ldr	r7, [sp, #24]
    f328:	ldr	sl, [sp, #28]
    f32c:	add	r5, r4, r5
    f330:	add	r9, r9, #512	; 0x200
    f334:	add	r1, r8, #512	; 0x200
    f338:	add	r0, r0, #256	; 0x100
    f33c:	cmp	r0, r2
    f340:	blt	f2d4 <ReadInt16Data+0x934>
    f344:	mov	r9, r5
    f348:	ldr	r5, [sp, #8]
    f34c:	cmp	r0, r5
    f350:	bge	fee0 <ReadInt16Data+0x1540>
    f354:	ldr	r3, [sl]
    f358:	sub	r6, r5, r0
    f35c:	add	r4, sp, #48	; 0x30
    f360:	mov	r1, r7
    f364:	mov	r0, r4
    f368:	mov	r2, r6
    f36c:	bl	18d0 <fread@plt>
    f370:	add	r9, r0, r9
    f374:	cmp	r6, #1
    f378:	blt	fee0 <ReadInt16Data+0x1540>
    f37c:	ldr	r0, [sp, #20]
    f380:	sub	r0, r5, r0
    f384:	sub	r6, r0, #256	; 0x100
    f388:	mov	r0, r4
    f38c:	bl	1c30 <Mat_int32Swap>
    f390:	strh	r0, [r8], #2
    f394:	add	r4, r4, #4
    f398:	subs	r6, r6, #1
    f39c:	bne	f388 <ReadInt16Data+0x9e8>
    f3a0:	b	fee0 <ReadInt16Data+0x1540>
    f3a4:	sub	r0, r5, #256	; 0x100
    f3a8:	str	r5, [sp, #8]
    f3ac:	add	r1, r9, #512	; 0x200
    f3b0:	mov	r5, #0
    f3b4:	str	r0, [sp, #16]
    f3b8:	mov	r0, #0
    f3bc:	ldr	r3, [sl]
    f3c0:	add	r6, sp, #48	; 0x30
    f3c4:	str	r0, [sp, #20]
    f3c8:	mov	r8, r1
    f3cc:	mov	r1, r7
    f3d0:	mov	r2, #256	; 0x100
    f3d4:	mov	r0, r6
    f3d8:	bl	18d0 <fread@plt>
    f3dc:	mov	r4, r0
    f3e0:	mov	r7, #0
    f3e4:	mov	r0, r6
    f3e8:	add	sl, r9, r7
    f3ec:	bl	1c44 <Mat_uint32Swap>
    f3f0:	add	r7, r7, #2
    f3f4:	add	r6, r6, #4
    f3f8:	strh	r0, [sl]
    f3fc:	cmp	r7, #512	; 0x200
    f400:	bne	f3e4 <ReadInt16Data+0xa44>
    f404:	ldr	r0, [sp, #20]
    f408:	ldr	r2, [sp, #16]
    f40c:	ldr	r7, [sp, #24]
    f410:	ldr	sl, [sp, #28]
    f414:	add	r5, r4, r5
    f418:	add	r9, r9, #512	; 0x200
    f41c:	add	r1, r8, #512	; 0x200
    f420:	add	r0, r0, #256	; 0x100
    f424:	cmp	r0, r2
    f428:	blt	f3bc <ReadInt16Data+0xa1c>
    f42c:	mov	r9, r5
    f430:	ldr	r5, [sp, #8]
    f434:	cmp	r0, r5
    f438:	bge	fee0 <ReadInt16Data+0x1540>
    f43c:	ldr	r3, [sl]
    f440:	sub	r6, r5, r0
    f444:	add	r4, sp, #48	; 0x30
    f448:	mov	r1, r7
    f44c:	mov	r0, r4
    f450:	mov	r2, r6
    f454:	bl	18d0 <fread@plt>
    f458:	add	r9, r0, r9
    f45c:	cmp	r6, #1
    f460:	blt	fee0 <ReadInt16Data+0x1540>
    f464:	ldr	r0, [sp, #20]
    f468:	sub	r0, r5, r0
    f46c:	sub	r6, r0, #256	; 0x100
    f470:	mov	r0, r4
    f474:	bl	1c44 <Mat_uint32Swap>
    f478:	strh	r0, [r8], #2
    f47c:	add	r4, r4, #4
    f480:	subs	r6, r6, #1
    f484:	bne	f470 <ReadInt16Data+0xad0>
    f488:	b	fee0 <ReadInt16Data+0x1540>
    f48c:	sub	r0, r5, #256	; 0x100
    f490:	str	r5, [sp, #8]
    f494:	add	r1, r9, #512	; 0x200
    f498:	mov	r5, #0
    f49c:	str	r0, [sp, #20]
    f4a0:	mov	r0, #0
    f4a4:	mov	sl, r0
    f4a8:	ldr	r0, [sp, #28]
    f4ac:	add	r6, sp, #48	; 0x30
    f4b0:	mov	r8, r1
    f4b4:	mov	r1, r7
    f4b8:	mov	r2, #256	; 0x100
    f4bc:	ldr	r3, [r0]
    f4c0:	mov	r0, r6
    f4c4:	bl	18d0 <fread@plt>
    f4c8:	mov	r4, r0
    f4cc:	mov	r7, #0
    f4d0:	mov	r0, r6
    f4d4:	bl	1c84 <Mat_floatSwap>
    f4d8:	vcvt.s32.f32	s0, s0
    f4dc:	add	r0, r9, r7
    f4e0:	add	r7, r7, #2
    f4e4:	add	r6, r6, #4
    f4e8:	cmp	r7, #512	; 0x200
    f4ec:	vmov	r1, s0
    f4f0:	strh	r1, [r0]
    f4f4:	bne	f4d0 <ReadInt16Data+0xb30>
    f4f8:	ldr	r2, [sp, #20]
    f4fc:	ldr	r7, [sp, #24]
    f500:	add	r0, sl, #256	; 0x100
    f504:	add	r5, r4, r5
    f508:	add	r9, r9, #512	; 0x200
    f50c:	add	r1, r8, #512	; 0x200
    f510:	cmp	r0, r2
    f514:	blt	f4a4 <ReadInt16Data+0xb04>
    f518:	mov	r9, r5
    f51c:	ldr	r5, [sp, #8]
    f520:	cmp	r0, r5
    f524:	bge	fee0 <ReadInt16Data+0x1540>
    f528:	sub	r6, r5, r0
    f52c:	ldr	r0, [sp, #28]
    f530:	add	r4, sp, #48	; 0x30
    f534:	mov	r1, r7
    f538:	mov	r2, r6
    f53c:	ldr	r3, [r0]
    f540:	mov	r0, r4
    f544:	bl	18d0 <fread@plt>
    f548:	add	r9, r0, r9
    f54c:	cmp	r6, #1
    f550:	blt	fee0 <ReadInt16Data+0x1540>
    f554:	sub	r0, r5, sl
    f558:	sub	r6, r0, #256	; 0x100
    f55c:	mov	r0, r4
    f560:	bl	1c84 <Mat_floatSwap>
    f564:	vcvt.s32.f32	s0, s0
    f568:	add	r4, r4, #4
    f56c:	subs	r6, r6, #1
    f570:	vmov	r0, s0
    f574:	strh	r0, [r8], #2
    f578:	bne	f55c <ReadInt16Data+0xbbc>
    f57c:	b	fee0 <ReadInt16Data+0x1540>
    f580:	sub	r0, r5, #256	; 0x100
    f584:	str	r5, [sp, #8]
    f588:	add	r1, r9, #512	; 0x200
    f58c:	mov	r5, #0
    f590:	str	r0, [sp, #20]
    f594:	mov	r0, #0
    f598:	mov	sl, r0
    f59c:	ldr	r0, [sp, #28]
    f5a0:	add	r6, sp, #48	; 0x30
    f5a4:	mov	r8, r1
    f5a8:	mov	r1, r7
    f5ac:	mov	r2, #256	; 0x100
    f5b0:	ldr	r3, [r0]
    f5b4:	mov	r0, r6
    f5b8:	bl	18d0 <fread@plt>
    f5bc:	mov	r4, r0
    f5c0:	mov	r7, #0
    f5c4:	mov	r0, r6
    f5c8:	bl	1cc8 <Mat_doubleSwap>
    f5cc:	vcvt.s32.f64	s0, d0
    f5d0:	add	r0, r9, r7
    f5d4:	add	r7, r7, #2
    f5d8:	add	r6, r6, #8
    f5dc:	cmp	r7, #512	; 0x200
    f5e0:	vmov	r1, s0
    f5e4:	strh	r1, [r0]
    f5e8:	bne	f5c4 <ReadInt16Data+0xc24>
    f5ec:	ldr	r2, [sp, #20]
    f5f0:	ldr	r7, [sp, #24]
    f5f4:	add	r0, sl, #256	; 0x100
    f5f8:	add	r5, r4, r5
    f5fc:	add	r9, r9, #512	; 0x200
    f600:	add	r1, r8, #512	; 0x200
    f604:	cmp	r0, r2
    f608:	blt	f598 <ReadInt16Data+0xbf8>
    f60c:	mov	r9, r5
    f610:	ldr	r5, [sp, #8]
    f614:	cmp	r0, r5
    f618:	bge	fee0 <ReadInt16Data+0x1540>
    f61c:	sub	r6, r5, r0
    f620:	ldr	r0, [sp, #28]
    f624:	add	r4, sp, #48	; 0x30
    f628:	mov	r1, r7
    f62c:	mov	r2, r6
    f630:	ldr	r3, [r0]
    f634:	mov	r0, r4
    f638:	bl	18d0 <fread@plt>
    f63c:	add	r9, r0, r9
    f640:	cmp	r6, #1
    f644:	blt	fee0 <ReadInt16Data+0x1540>
    f648:	sub	r0, r5, sl
    f64c:	sub	r6, r0, #256	; 0x100
    f650:	mov	r0, r4
    f654:	bl	1cc8 <Mat_doubleSwap>
    f658:	vcvt.s32.f64	s0, d0
    f65c:	add	r4, r4, #8
    f660:	subs	r6, r6, #1
    f664:	vmov	r0, s0
    f668:	strh	r0, [r8], #2
    f66c:	bne	f650 <ReadInt16Data+0xcb0>
    f670:	b	fee0 <ReadInt16Data+0x1540>
    f674:	sub	r0, r5, #256	; 0x100
    f678:	str	r5, [sp, #8]
    f67c:	add	r1, r9, #512	; 0x200
    f680:	mov	r7, r9
    f684:	mov	r5, #0
    f688:	str	r6, [sp, #4]
    f68c:	str	r0, [sp, #12]
    f690:	mov	r0, #0
    f694:	str	r1, [sp, #20]
    f698:	ldr	r3, [sl]
    f69c:	ldr	r1, [sp, #24]
    f6a0:	add	r4, sp, #48	; 0x30
    f6a4:	str	r0, [sp, #16]
    f6a8:	mov	r2, #256	; 0x100
    f6ac:	mov	r0, r4
    f6b0:	bl	18d0 <fread@plt>
    f6b4:	mov	r8, r0
    f6b8:	mov	sl, #0
    f6bc:	mov	r0, r4
    f6c0:	add	r6, r7, sl
    f6c4:	bl	1bbc <Mat_int64Swap>
    f6c8:	add	sl, sl, #2
    f6cc:	add	r4, r4, #8
    f6d0:	strh	r0, [r6]
    f6d4:	cmp	sl, #512	; 0x200
    f6d8:	bne	f6bc <ReadInt16Data+0xd1c>
    f6dc:	ldr	r0, [sp, #20]
    f6e0:	ldr	r6, [sp, #16]
    f6e4:	ldr	r2, [sp, #12]
    f6e8:	ldr	sl, [sp, #28]
    f6ec:	add	r5, r8, r5
    f6f0:	add	r7, r7, #512	; 0x200
    f6f4:	add	r1, r0, #512	; 0x200
    f6f8:	add	r0, r6, #256	; 0x100
    f6fc:	cmp	r0, r2
    f700:	blt	f694 <ReadInt16Data+0xcf4>
    f704:	str	r5, [sp, #12]
    f708:	ldr	r5, [sp, #8]
    f70c:	cmp	r0, r5
    f710:	bge	f778 <ReadInt16Data+0xdd8>
    f714:	ldr	r7, [sp, #24]
    f718:	ldr	r3, [sl]
    f71c:	sub	r8, r5, r0
    f720:	add	r4, sp, #48	; 0x30
    f724:	mov	r0, r4
    f728:	mov	r2, r8
    f72c:	mov	r1, r7
    f730:	bl	18d0 <fread@plt>
    f734:	ldr	r1, [sp, #12]
    f738:	cmp	r8, #1
    f73c:	add	r1, r0, r1
    f740:	str	r1, [sp, #12]
    f744:	blt	fc74 <ReadInt16Data+0x12d4>
    f748:	sub	r0, r5, r6
    f74c:	ldr	r6, [sp, #4]
    f750:	ldr	r8, [sp, #20]
    f754:	sub	r7, r0, #256	; 0x100
    f758:	mov	r0, r4
    f75c:	bl	1bbc <Mat_int64Swap>
    f760:	strh	r0, [r8], #2
    f764:	add	r4, r4, #8
    f768:	subs	r7, r7, #1
    f76c:	bne	f758 <ReadInt16Data+0xdb8>
    f770:	ldr	r7, [sp, #24]
    f774:	b	fc78 <ReadInt16Data+0x12d8>
    f778:	ldr	r7, [sp, #24]
    f77c:	b	fc74 <ReadInt16Data+0x12d4>
    f780:	sub	r0, r5, #256	; 0x100
    f784:	lsl	r4, r5, #1
    f788:	str	r5, [sp, #8]
    f78c:	mov	r6, #0
    f790:	add	r8, sp, #48	; 0x30
    f794:	mov	r5, #0
    f798:	str	r0, [sp, #20]
    f79c:	ldr	r3, [sl]
    f7a0:	mov	r0, r8
    f7a4:	mov	r1, r7
    f7a8:	mov	r2, #256	; 0x100
    f7ac:	bl	18d0 <fread@plt>
    f7b0:	mov	sl, r0
    f7b4:	add	r0, r9, r6, lsl #1
    f7b8:	mov	r1, r8
    f7bc:	mov	r2, #512	; 0x200
    f7c0:	bl	1834 <memcpy@plt>
    f7c4:	ldr	r0, [sp, #20]
    f7c8:	add	r5, sl, r5
    f7cc:	ldr	sl, [sp, #28]
    f7d0:	add	r6, r6, #256	; 0x100
    f7d4:	sub	r4, r4, #512	; 0x200
    f7d8:	cmp	r6, r0
    f7dc:	blt	f79c <ReadInt16Data+0xdfc>
    f7e0:	ldr	r0, [sp, #8]
    f7e4:	cmp	r6, r0
    f7e8:	bge	fc64 <ReadInt16Data+0x12c4>
    f7ec:	ldr	r7, [sp, #24]
    f7f0:	ldr	r3, [sl]
    f7f4:	sub	r8, r0, r6
    f7f8:	add	r0, sp, #48	; 0x30
    f7fc:	mov	r2, r8
    f800:	mov	r1, r7
    f804:	bl	18d0 <fread@plt>
    f808:	add	r5, r0, r5
    f80c:	cmp	r8, #1
    f810:	blt	fee4 <ReadInt16Data+0x1544>
    f814:	add	r0, r9, r6, lsl #1
    f818:	add	r1, sp, #48	; 0x30
    f81c:	mov	r2, r4
    f820:	bl	1834 <memcpy@plt>
    f824:	b	fee4 <ReadInt16Data+0x1544>
    f828:	add	r1, r9, #512	; 0x200
    f82c:	str	r5, [sp, #8]
    f830:	sub	sl, r5, #256	; 0x100
    f834:	mov	r0, #0
    f838:	add	r4, sp, #48	; 0x30
    f83c:	mov	r5, #0
    f840:	mov	r8, r0
    f844:	ldr	r0, [sp, #28]
    f848:	mov	r6, r1
    f84c:	mov	r1, r7
    f850:	mov	r2, #256	; 0x100
    f854:	ldr	r3, [r0]
    f858:	mov	r0, r4
    f85c:	bl	18d0 <fread@plt>
    f860:	mov	r1, #0
    f864:	mov	r2, r4
    f868:	vld1.32	{d16-d17}, [r2]!
    f86c:	add	r3, r9, r1
    f870:	add	r1, r1, #8
    f874:	cmp	r1, #512	; 0x200
    f878:	vmovn.i32	d16, q8
    f87c:	vst1.16	{d16}, [r3]
    f880:	bne	f868 <ReadInt16Data+0xec8>
    f884:	add	r5, r0, r5
    f888:	add	r0, r8, #256	; 0x100
    f88c:	add	r9, r9, #512	; 0x200
    f890:	add	r1, r6, #512	; 0x200
    f894:	cmp	r0, sl
    f898:	blt	f840 <ReadInt16Data+0xea0>
    f89c:	mov	r9, r5
    f8a0:	ldr	r5, [sp, #8]
    f8a4:	cmp	r0, r5
    f8a8:	bge	fee0 <ReadInt16Data+0x1540>
    f8ac:	mov	r1, r7
    f8b0:	sub	r7, r5, r0
    f8b4:	ldr	r0, [sp, #28]
    f8b8:	add	r4, sp, #48	; 0x30
    f8bc:	mov	r2, r7
    f8c0:	ldr	r3, [r0]
    f8c4:	mov	r0, r4
    f8c8:	bl	18d0 <fread@plt>
    f8cc:	add	r9, r0, r9
    f8d0:	cmp	r7, #1
    f8d4:	blt	fedc <ReadInt16Data+0x153c>
    f8d8:	sub	r0, r5, r8
    f8dc:	sub	r0, r0, #256	; 0x100
    f8e0:	ldr	r1, [r4], #4
    f8e4:	subs	r0, r0, #1
    f8e8:	strh	r1, [r6], #2
    f8ec:	bne	f8e0 <ReadInt16Data+0xf40>
    f8f0:	b	fedc <ReadInt16Data+0x153c>
    f8f4:	add	r1, r9, #512	; 0x200
    f8f8:	str	r5, [sp, #8]
    f8fc:	sub	sl, r5, #256	; 0x100
    f900:	mov	r0, #0
    f904:	add	r4, sp, #48	; 0x30
    f908:	mov	r5, #0
    f90c:	mov	r8, r0
    f910:	ldr	r0, [sp, #28]
    f914:	mov	r6, r1
    f918:	mov	r1, r7
    f91c:	mov	r2, #256	; 0x100
    f920:	ldr	r3, [r0]
    f924:	mov	r0, r4
    f928:	bl	18d0 <fread@plt>
    f92c:	mov	r1, #0
    f930:	mov	r2, r4
    f934:	vld1.32	{d16-d17}, [r2]!
    f938:	add	r3, r9, r1
    f93c:	add	r1, r1, #8
    f940:	cmp	r1, #512	; 0x200
    f944:	vmovn.i32	d16, q8
    f948:	vst1.16	{d16}, [r3]
    f94c:	bne	f934 <ReadInt16Data+0xf94>
    f950:	add	r5, r0, r5
    f954:	add	r0, r8, #256	; 0x100
    f958:	add	r9, r9, #512	; 0x200
    f95c:	add	r1, r6, #512	; 0x200
    f960:	cmp	r0, sl
    f964:	blt	f90c <ReadInt16Data+0xf6c>
    f968:	mov	r9, r5
    f96c:	ldr	r5, [sp, #8]
    f970:	cmp	r0, r5
    f974:	bge	fee0 <ReadInt16Data+0x1540>
    f978:	mov	r1, r7
    f97c:	sub	r7, r5, r0
    f980:	ldr	r0, [sp, #28]
    f984:	add	r4, sp, #48	; 0x30
    f988:	mov	r2, r7
    f98c:	ldr	r3, [r0]
    f990:	mov	r0, r4
    f994:	bl	18d0 <fread@plt>
    f998:	add	r9, r0, r9
    f99c:	cmp	r7, #1
    f9a0:	blt	fedc <ReadInt16Data+0x153c>
    f9a4:	sub	r0, r5, r8
    f9a8:	sub	r0, r0, #256	; 0x100
    f9ac:	ldr	r1, [r4], #4
    f9b0:	subs	r0, r0, #1
    f9b4:	strh	r1, [r6], #2
    f9b8:	bne	f9ac <ReadInt16Data+0x100c>
    f9bc:	b	fedc <ReadInt16Data+0x153c>
    f9c0:	add	r1, r9, #512	; 0x200
    f9c4:	str	r5, [sp, #8]
    f9c8:	sub	sl, r5, #256	; 0x100
    f9cc:	mov	r0, #0
    f9d0:	add	r4, sp, #48	; 0x30
    f9d4:	mov	r5, #0
    f9d8:	mov	r8, r0
    f9dc:	ldr	r0, [sp, #28]
    f9e0:	mov	r6, r1
    f9e4:	mov	r1, r7
    f9e8:	mov	r2, #256	; 0x100
    f9ec:	ldr	r3, [r0]
    f9f0:	mov	r0, r4
    f9f4:	bl	18d0 <fread@plt>
    f9f8:	mov	r1, #0
    f9fc:	mov	r2, r4
    fa00:	vld1.32	{d16-d17}, [r2]!
    fa04:	add	r3, r9, r1
    fa08:	add	r1, r1, #8
    fa0c:	cmp	r1, #512	; 0x200
    fa10:	vcvt.s32.f32	q8, q8
    fa14:	vmovn.i32	d16, q8
    fa18:	vst1.16	{d16}, [r3]
    fa1c:	bne	fa00 <ReadInt16Data+0x1060>
    fa20:	add	r5, r0, r5
    fa24:	add	r0, r8, #256	; 0x100
    fa28:	add	r9, r9, #512	; 0x200
    fa2c:	add	r1, r6, #512	; 0x200
    fa30:	cmp	r0, sl
    fa34:	blt	f9d8 <ReadInt16Data+0x1038>
    fa38:	mov	r9, r5
    fa3c:	ldr	r5, [sp, #8]
    fa40:	cmp	r0, r5
    fa44:	bge	fee0 <ReadInt16Data+0x1540>
    fa48:	mov	r1, r7
    fa4c:	sub	r7, r5, r0
    fa50:	ldr	r0, [sp, #28]
    fa54:	add	r4, sp, #48	; 0x30
    fa58:	mov	r2, r7
    fa5c:	ldr	r3, [r0]
    fa60:	mov	r0, r4
    fa64:	bl	18d0 <fread@plt>
    fa68:	add	r9, r0, r9
    fa6c:	cmp	r7, #1
    fa70:	blt	fedc <ReadInt16Data+0x153c>
    fa74:	sub	r0, r5, r8
    fa78:	sub	r0, r0, #256	; 0x100
    fa7c:	vldr	s0, [r4]
    fa80:	add	r4, r4, #4
    fa84:	subs	r0, r0, #1
    fa88:	vcvt.s32.f32	s0, s0
    fa8c:	vmov	r1, s0
    fa90:	strh	r1, [r6], #2
    fa94:	bne	fa7c <ReadInt16Data+0x10dc>
    fa98:	b	fedc <ReadInt16Data+0x153c>
    fa9c:	add	r1, r9, #512	; 0x200
    faa0:	str	r5, [sp, #8]
    faa4:	sub	sl, r5, #256	; 0x100
    faa8:	mov	r0, #0
    faac:	add	r4, sp, #48	; 0x30
    fab0:	mov	r5, #0
    fab4:	mov	r8, r0
    fab8:	ldr	r0, [sp, #28]
    fabc:	mov	r6, r1
    fac0:	mov	r1, r7
    fac4:	mov	r2, #256	; 0x100
    fac8:	ldr	r3, [r0]
    facc:	mov	r0, r4
    fad0:	bl	18d0 <fread@plt>
    fad4:	mov	r1, r4
    fad8:	mov	r2, #0
    fadc:	vldr	d16, [r1]
    fae0:	add	r3, r9, r2
    fae4:	add	r2, r2, #2
    fae8:	add	r1, r1, #8
    faec:	cmp	r2, #512	; 0x200
    faf0:	vcvt.s32.f64	s0, d16
    faf4:	vmov	r7, s0
    faf8:	strh	r7, [r3]
    fafc:	bne	fadc <ReadInt16Data+0x113c>
    fb00:	ldr	r7, [sp, #24]
    fb04:	add	r5, r0, r5
    fb08:	add	r0, r8, #256	; 0x100
    fb0c:	add	r9, r9, #512	; 0x200
    fb10:	add	r1, r6, #512	; 0x200
    fb14:	cmp	r0, sl
    fb18:	blt	fab4 <ReadInt16Data+0x1114>
    fb1c:	mov	r9, r5
    fb20:	ldr	r5, [sp, #8]
    fb24:	cmp	r0, r5
    fb28:	bge	fee0 <ReadInt16Data+0x1540>
    fb2c:	mov	r1, r7
    fb30:	sub	r7, r5, r0
    fb34:	ldr	r0, [sp, #28]
    fb38:	add	r4, sp, #48	; 0x30
    fb3c:	mov	r2, r7
    fb40:	ldr	r3, [r0]
    fb44:	mov	r0, r4
    fb48:	bl	18d0 <fread@plt>
    fb4c:	add	r9, r0, r9
    fb50:	cmp	r7, #1
    fb54:	blt	fedc <ReadInt16Data+0x153c>
    fb58:	sub	r0, r5, r8
    fb5c:	sub	r0, r0, #256	; 0x100
    fb60:	vldr	d16, [r4]
    fb64:	add	r4, r4, #8
    fb68:	subs	r0, r0, #1
    fb6c:	vcvt.s32.f64	s0, d16
    fb70:	vmov	r1, s0
    fb74:	strh	r1, [r6], #2
    fb78:	bne	fb60 <ReadInt16Data+0x11c0>
    fb7c:	b	fedc <ReadInt16Data+0x153c>
    fb80:	add	r1, r9, #512	; 0x200
    fb84:	str	r5, [sp, #8]
    fb88:	sub	r8, r5, #256	; 0x100
    fb8c:	mov	r0, #0
    fb90:	add	r4, sp, #48	; 0x30
    fb94:	mov	r7, r9
    fb98:	mov	r5, #0
    fb9c:	str	r6, [sp, #4]
    fba0:	mov	sl, r0
    fba4:	ldr	r0, [sp, #28]
    fba8:	mov	r6, r1
    fbac:	ldr	r1, [sp, #24]
    fbb0:	mov	r2, #256	; 0x100
    fbb4:	ldr	r3, [r0]
    fbb8:	mov	r0, r4
    fbbc:	bl	18d0 <fread@plt>
    fbc0:	mov	r1, #0
    fbc4:	mov	r2, r4
    fbc8:	vld1.64	{d16-d17}, [r2]!
    fbcc:	add	r3, r7, r1
    fbd0:	add	r1, r1, #4
    fbd4:	cmp	r1, #512	; 0x200
    fbd8:	vmovn.i64	d16, q8
    fbdc:	vuzp.16	d16, d17
    fbe0:	vst1.32	{d16[0]}, [r3]
    fbe4:	bne	fbc8 <ReadInt16Data+0x1228>
    fbe8:	add	r5, r0, r5
    fbec:	add	r0, sl, #256	; 0x100
    fbf0:	add	r7, r7, #512	; 0x200
    fbf4:	add	r1, r6, #512	; 0x200
    fbf8:	cmp	r0, r8
    fbfc:	blt	fba0 <ReadInt16Data+0x1200>
    fc00:	str	r5, [sp, #12]
    fc04:	ldr	r5, [sp, #8]
    fc08:	cmp	r0, r5
    fc0c:	bge	fc6c <ReadInt16Data+0x12cc>
    fc10:	sub	r8, r5, r0
    fc14:	ldr	r0, [sp, #28]
    fc18:	ldr	r7, [sp, #24]
    fc1c:	add	r4, sp, #48	; 0x30
    fc20:	mov	r2, r8
    fc24:	ldr	r3, [r0]
    fc28:	mov	r0, r4
    fc2c:	mov	r1, r7
    fc30:	bl	18d0 <fread@plt>
    fc34:	ldr	r1, [sp, #12]
    fc38:	cmp	r8, #1
    fc3c:	add	r1, r0, r1
    fc40:	str	r1, [sp, #12]
    fc44:	blt	fc70 <ReadInt16Data+0x12d0>
    fc48:	sub	r0, r5, sl
    fc4c:	sub	r0, r0, #256	; 0x100
    fc50:	ldrh	r1, [r4], #8
    fc54:	subs	r0, r0, #1
    fc58:	strh	r1, [r6], #2
    fc5c:	bne	fc50 <ReadInt16Data+0x12b0>
    fc60:	b	fc70 <ReadInt16Data+0x12d0>
    fc64:	ldr	r7, [sp, #24]
    fc68:	b	fee4 <ReadInt16Data+0x1544>
    fc6c:	ldr	r7, [sp, #24]
    fc70:	ldr	sl, [sp, #28]
    fc74:	ldr	r6, [sp, #4]
    fc78:	cmp	r6, #13
    fc7c:	bne	fd20 <ReadInt16Data+0x1380>
    fc80:	ldr	r0, [sl, #20]
    fc84:	cmp	r0, #0
    fc88:	beq	fcdc <ReadInt16Data+0x133c>
    fc8c:	cmp	r5, #256	; 0x100
    fc90:	bgt	fd28 <ReadInt16Data+0x1388>
    fc94:	ldr	r3, [sl]
    fc98:	add	r4, sp, #48	; 0x30
    fc9c:	mov	r1, r7
    fca0:	mov	r2, r5
    fca4:	mov	r0, r4
    fca8:	bl	18d0 <fread@plt>
    fcac:	ldr	r1, [sp, #12]
    fcb0:	cmp	r5, #1
    fcb4:	add	r1, r0, r1
    fcb8:	str	r1, [sp, #12]
    fcbc:	blt	fd20 <ReadInt16Data+0x1380>
    fcc0:	mov	r0, r4
    fcc4:	bl	1c0c <Mat_uint64Swap>
    fcc8:	strh	r0, [r9], #2
    fccc:	add	r4, r4, #8
    fcd0:	subs	r5, r5, #1
    fcd4:	bne	fcc0 <ReadInt16Data+0x1320>
    fcd8:	b	fd20 <ReadInt16Data+0x1380>
    fcdc:	cmp	r5, #256	; 0x100
    fce0:	bgt	fe10 <ReadInt16Data+0x1470>
    fce4:	ldr	r3, [sl]
    fce8:	add	r4, sp, #48	; 0x30
    fcec:	mov	r1, r7
    fcf0:	mov	r2, r5
    fcf4:	mov	r0, r4
    fcf8:	bl	18d0 <fread@plt>
    fcfc:	ldr	r1, [sp, #12]
    fd00:	cmp	r5, #1
    fd04:	add	r1, r0, r1
    fd08:	str	r1, [sp, #12]
    fd0c:	blt	fd20 <ReadInt16Data+0x1380>
    fd10:	ldrh	r0, [r4], #8
    fd14:	subs	r5, r5, #1
    fd18:	strh	r0, [r9], #2
    fd1c:	bne	fd10 <ReadInt16Data+0x1370>
    fd20:	ldr	r5, [sp, #12]
    fd24:	b	fee4 <ReadInt16Data+0x1544>
    fd28:	sub	r0, r5, #256	; 0x100
    fd2c:	str	r5, [sp, #8]
    fd30:	ldr	r5, [sp, #12]
    fd34:	add	r1, r9, #512	; 0x200
    fd38:	str	r0, [sp, #16]
    fd3c:	mov	r0, #0
    fd40:	ldr	r3, [sl]
    fd44:	add	r6, sp, #48	; 0x30
    fd48:	str	r0, [sp, #20]
    fd4c:	mov	r8, r1
    fd50:	mov	r1, r7
    fd54:	mov	r2, #256	; 0x100
    fd58:	mov	r0, r6
    fd5c:	bl	18d0 <fread@plt>
    fd60:	mov	r4, r0
    fd64:	mov	r7, #0
    fd68:	mov	r0, r6
    fd6c:	add	sl, r9, r7
    fd70:	bl	1c0c <Mat_uint64Swap>
    fd74:	add	r7, r7, #2
    fd78:	add	r6, r6, #8
    fd7c:	strh	r0, [sl]
    fd80:	cmp	r7, #512	; 0x200
    fd84:	bne	fd68 <ReadInt16Data+0x13c8>
    fd88:	ldr	r0, [sp, #20]
    fd8c:	ldr	r2, [sp, #16]
    fd90:	ldr	r7, [sp, #24]
    fd94:	ldr	sl, [sp, #28]
    fd98:	add	r5, r4, r5
    fd9c:	add	r9, r9, #512	; 0x200
    fda0:	add	r1, r8, #512	; 0x200
    fda4:	add	r0, r0, #256	; 0x100
    fda8:	cmp	r0, r2
    fdac:	blt	fd40 <ReadInt16Data+0x13a0>
    fdb0:	mov	r9, r5
    fdb4:	ldr	r5, [sp, #8]
    fdb8:	cmp	r0, r5
    fdbc:	bge	fee0 <ReadInt16Data+0x1540>
    fdc0:	ldr	r3, [sl]
    fdc4:	sub	r6, r5, r0
    fdc8:	add	r4, sp, #48	; 0x30
    fdcc:	mov	r1, r7
    fdd0:	mov	r0, r4
    fdd4:	mov	r2, r6
    fdd8:	bl	18d0 <fread@plt>
    fddc:	add	r9, r0, r9
    fde0:	cmp	r6, #1
    fde4:	blt	fee0 <ReadInt16Data+0x1540>
    fde8:	ldr	r0, [sp, #20]
    fdec:	sub	r0, r5, r0
    fdf0:	sub	r6, r0, #256	; 0x100
    fdf4:	mov	r0, r4
    fdf8:	bl	1c0c <Mat_uint64Swap>
    fdfc:	strh	r0, [r8], #2
    fe00:	add	r4, r4, #8
    fe04:	subs	r6, r6, #1
    fe08:	bne	fdf4 <ReadInt16Data+0x1454>
    fe0c:	b	fee0 <ReadInt16Data+0x1540>
    fe10:	str	r5, [sp, #8]
    fe14:	sub	sl, r5, #256	; 0x100
    fe18:	ldr	r5, [sp, #12]
    fe1c:	add	r1, r9, #512	; 0x200
    fe20:	mov	r0, #0
    fe24:	add	r4, sp, #48	; 0x30
    fe28:	mov	r8, r0
    fe2c:	ldr	r0, [sp, #28]
    fe30:	mov	r6, r1
    fe34:	mov	r1, r7
    fe38:	mov	r2, #256	; 0x100
    fe3c:	ldr	r3, [r0]
    fe40:	mov	r0, r4
    fe44:	bl	18d0 <fread@plt>
    fe48:	mov	r1, #0
    fe4c:	mov	r2, r4
    fe50:	vld1.64	{d16-d17}, [r2]!
    fe54:	add	r3, r9, r1
    fe58:	add	r1, r1, #4
    fe5c:	cmp	r1, #512	; 0x200
    fe60:	vmovn.i64	d16, q8
    fe64:	vuzp.16	d16, d17
    fe68:	vst1.32	{d16[0]}, [r3]
    fe6c:	bne	fe50 <ReadInt16Data+0x14b0>
    fe70:	add	r5, r0, r5
    fe74:	add	r0, r8, #256	; 0x100
    fe78:	add	r9, r9, #512	; 0x200
    fe7c:	add	r1, r6, #512	; 0x200
    fe80:	cmp	r0, sl
    fe84:	blt	fe28 <ReadInt16Data+0x1488>
    fe88:	mov	r9, r5
    fe8c:	ldr	r5, [sp, #8]
    fe90:	cmp	r0, r5
    fe94:	bge	fee0 <ReadInt16Data+0x1540>
    fe98:	mov	r1, r7
    fe9c:	sub	r7, r5, r0
    fea0:	ldr	r0, [sp, #28]
    fea4:	add	r4, sp, #48	; 0x30
    fea8:	mov	r2, r7
    feac:	ldr	r3, [r0]
    feb0:	mov	r0, r4
    feb4:	bl	18d0 <fread@plt>
    feb8:	add	r9, r0, r9
    febc:	cmp	r7, #1
    fec0:	blt	fedc <ReadInt16Data+0x153c>
    fec4:	sub	r0, r5, r8
    fec8:	sub	r0, r0, #256	; 0x100
    fecc:	ldrh	r1, [r4], #8
    fed0:	subs	r0, r0, #1
    fed4:	strh	r1, [r6], #2
    fed8:	bne	fecc <ReadInt16Data+0x152c>
    fedc:	ldr	r7, [sp, #24]
    fee0:	mov	r5, r9
    fee4:	mul	r0, r5, r7
    fee8:	b	e9c8 <ReadInt16Data+0x28>

0000feec <ReadCompressedInt16Data>:
    feec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fef0:	add	fp, sp, #28
    fef4:	sub	sp, sp, #12
    fef8:	mov	r7, r0
    fefc:	mov	r0, #0
    ff00:	cmp	r1, #0
    ff04:	beq	1040c <ReadCompressedInt16Data+0x520>
    ff08:	cmp	r7, #0
    ff0c:	movne	r5, r2
    ff10:	cmpne	r2, #0
    ff14:	beq	1040c <ReadCompressedInt16Data+0x520>
    ff18:	ldr	sl, [fp, #8]
    ff1c:	mov	r0, r3
    ff20:	mov	r4, r3
    ff24:	mov	r6, r1
    ff28:	bl	193c <Mat_SizeOf@plt>
    ff2c:	mov	r9, r0
    ff30:	sub	r0, r4, #1
    ff34:	cmp	r0, #12
    ff38:	bhi	10408 <ReadCompressedInt16Data+0x51c>
    ff3c:	add	r1, pc, #4
    ff40:	ldr	r0, [r1, r0, lsl #2]
    ff44:	add	pc, r1, r0
    ff48:	.word	0x00000034
    ff4c:	.word	0x0000006c
    ff50:	.word	0x000000a4
    ff54:	.word	0x000000ec
    ff58:	.word	0x00000134
    ff5c:	.word	0x0000017c
    ff60:	.word	0x000001c4
    ff64:	.word	0x000004c0
    ff68:	.word	0x00000214
    ff6c:	.word	0x000004c0
    ff70:	.word	0x000004c0
    ff74:	.word	0x00000264
    ff78:	.word	0x000002ac
    ff7c:	cmp	sl, #1
    ff80:	blt	10408 <ReadCompressedInt16Data+0x51c>
    ff84:	mov	r8, sp
    ff88:	mov	r4, sl
    ff8c:	mov	r0, r7
    ff90:	mov	r1, r6
    ff94:	mov	r2, r8
    ff98:	mov	r3, r9
    ff9c:	bl	31dc <InflateData>
    ffa0:	ldrsb	r0, [sp]
    ffa4:	subs	r4, r4, #1
    ffa8:	strh	r0, [r5], #2
    ffac:	bne	ff8c <ReadCompressedInt16Data+0xa0>
    ffb0:	b	10408 <ReadCompressedInt16Data+0x51c>
    ffb4:	cmp	sl, #1
    ffb8:	blt	10408 <ReadCompressedInt16Data+0x51c>
    ffbc:	mov	r8, sp
    ffc0:	mov	r4, sl
    ffc4:	mov	r0, r7
    ffc8:	mov	r1, r6
    ffcc:	mov	r2, r8
    ffd0:	mov	r3, r9
    ffd4:	bl	31dc <InflateData>
    ffd8:	ldrb	r0, [sp]
    ffdc:	subs	r4, r4, #1
    ffe0:	strh	r0, [r5], #2
    ffe4:	bne	ffc4 <ReadCompressedInt16Data+0xd8>
    ffe8:	b	10408 <ReadCompressedInt16Data+0x51c>
    ffec:	ldr	r0, [r7, #20]
    fff0:	cmp	r0, #0
    fff4:	beq	1023c <ReadCompressedInt16Data+0x350>
    fff8:	cmp	sl, #1
    fffc:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10000:	mov	r8, sp
   10004:	mov	r4, sl
   10008:	mov	r0, r7
   1000c:	mov	r1, r6
   10010:	mov	r2, r8
   10014:	mov	r3, r9
   10018:	bl	31dc <InflateData>
   1001c:	mov	r0, r8
   10020:	bl	1c58 <Mat_int16Swap>
   10024:	strh	r0, [r5], #2
   10028:	subs	r4, r4, #1
   1002c:	bne	10008 <ReadCompressedInt16Data+0x11c>
   10030:	b	10408 <ReadCompressedInt16Data+0x51c>
   10034:	ldr	r0, [r7, #20]
   10038:	cmp	r0, #0
   1003c:	beq	10274 <ReadCompressedInt16Data+0x388>
   10040:	cmp	sl, #1
   10044:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10048:	mov	r8, sp
   1004c:	mov	r4, sl
   10050:	mov	r0, r7
   10054:	mov	r1, r6
   10058:	mov	r2, r8
   1005c:	mov	r3, r9
   10060:	bl	31dc <InflateData>
   10064:	mov	r0, r8
   10068:	bl	1c6c <Mat_uint16Swap>
   1006c:	strh	r0, [r5], #2
   10070:	subs	r4, r4, #1
   10074:	bne	10050 <ReadCompressedInt16Data+0x164>
   10078:	b	10408 <ReadCompressedInt16Data+0x51c>
   1007c:	ldr	r0, [r7, #20]
   10080:	cmp	r0, #0
   10084:	beq	102ac <ReadCompressedInt16Data+0x3c0>
   10088:	cmp	sl, #1
   1008c:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10090:	mov	r8, sp
   10094:	mov	r4, sl
   10098:	mov	r0, r7
   1009c:	mov	r1, r6
   100a0:	mov	r2, r8
   100a4:	mov	r3, r9
   100a8:	bl	31dc <InflateData>
   100ac:	mov	r0, r8
   100b0:	bl	1c30 <Mat_int32Swap>
   100b4:	strh	r0, [r5], #2
   100b8:	subs	r4, r4, #1
   100bc:	bne	10098 <ReadCompressedInt16Data+0x1ac>
   100c0:	b	10408 <ReadCompressedInt16Data+0x51c>
   100c4:	ldr	r0, [r7, #20]
   100c8:	cmp	r0, #0
   100cc:	beq	102e4 <ReadCompressedInt16Data+0x3f8>
   100d0:	cmp	sl, #1
   100d4:	blt	10408 <ReadCompressedInt16Data+0x51c>
   100d8:	mov	r8, sp
   100dc:	mov	r4, sl
   100e0:	mov	r0, r7
   100e4:	mov	r1, r6
   100e8:	mov	r2, r8
   100ec:	mov	r3, r9
   100f0:	bl	31dc <InflateData>
   100f4:	mov	r0, r8
   100f8:	bl	1c44 <Mat_uint32Swap>
   100fc:	strh	r0, [r5], #2
   10100:	subs	r4, r4, #1
   10104:	bne	100e0 <ReadCompressedInt16Data+0x1f4>
   10108:	b	10408 <ReadCompressedInt16Data+0x51c>
   1010c:	ldr	r0, [r7, #20]
   10110:	cmp	r0, #0
   10114:	beq	1031c <ReadCompressedInt16Data+0x430>
   10118:	cmp	sl, #1
   1011c:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10120:	mov	r8, sp
   10124:	mov	r4, sl
   10128:	mov	r0, r7
   1012c:	mov	r1, r6
   10130:	mov	r2, r8
   10134:	mov	r3, r9
   10138:	bl	31dc <InflateData>
   1013c:	mov	r0, r8
   10140:	bl	1c84 <Mat_floatSwap>
   10144:	vcvt.s32.f32	s0, s0
   10148:	subs	r4, r4, #1
   1014c:	vmov	r0, s0
   10150:	strh	r0, [r5], #2
   10154:	bne	10128 <ReadCompressedInt16Data+0x23c>
   10158:	b	10408 <ReadCompressedInt16Data+0x51c>
   1015c:	ldr	r0, [r7, #20]
   10160:	cmp	r0, #0
   10164:	beq	1035c <ReadCompressedInt16Data+0x470>
   10168:	cmp	sl, #1
   1016c:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10170:	mov	r8, sp
   10174:	mov	r4, sl
   10178:	mov	r0, r7
   1017c:	mov	r1, r6
   10180:	mov	r2, r8
   10184:	mov	r3, r9
   10188:	bl	31dc <InflateData>
   1018c:	mov	r0, r8
   10190:	bl	1cc8 <Mat_doubleSwap>
   10194:	vcvt.s32.f64	s0, d0
   10198:	subs	r4, r4, #1
   1019c:	vmov	r0, s0
   101a0:	strh	r0, [r5], #2
   101a4:	bne	10178 <ReadCompressedInt16Data+0x28c>
   101a8:	b	10408 <ReadCompressedInt16Data+0x51c>
   101ac:	ldr	r0, [r7, #20]
   101b0:	cmp	r0, #0
   101b4:	beq	1039c <ReadCompressedInt16Data+0x4b0>
   101b8:	cmp	sl, #1
   101bc:	blt	10408 <ReadCompressedInt16Data+0x51c>
   101c0:	mov	r8, sp
   101c4:	mov	r4, sl
   101c8:	mov	r0, r7
   101cc:	mov	r1, r6
   101d0:	mov	r2, r8
   101d4:	mov	r3, r9
   101d8:	bl	31dc <InflateData>
   101dc:	mov	r0, r8
   101e0:	bl	1bbc <Mat_int64Swap>
   101e4:	strh	r0, [r5], #2
   101e8:	subs	r4, r4, #1
   101ec:	bne	101c8 <ReadCompressedInt16Data+0x2dc>
   101f0:	b	10408 <ReadCompressedInt16Data+0x51c>
   101f4:	ldr	r0, [r7, #20]
   101f8:	cmp	r0, #0
   101fc:	beq	103d4 <ReadCompressedInt16Data+0x4e8>
   10200:	cmp	sl, #1
   10204:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10208:	mov	r8, sp
   1020c:	mov	r4, sl
   10210:	mov	r0, r7
   10214:	mov	r1, r6
   10218:	mov	r2, r8
   1021c:	mov	r3, r9
   10220:	bl	31dc <InflateData>
   10224:	mov	r0, r8
   10228:	bl	1c0c <Mat_uint64Swap>
   1022c:	strh	r0, [r5], #2
   10230:	subs	r4, r4, #1
   10234:	bne	10210 <ReadCompressedInt16Data+0x324>
   10238:	b	10408 <ReadCompressedInt16Data+0x51c>
   1023c:	cmp	sl, #1
   10240:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10244:	mov	r8, sp
   10248:	mov	r4, sl
   1024c:	mov	r0, r7
   10250:	mov	r1, r6
   10254:	mov	r2, r8
   10258:	mov	r3, r9
   1025c:	bl	31dc <InflateData>
   10260:	ldrh	r0, [sp]
   10264:	subs	r4, r4, #1
   10268:	strh	r0, [r5], #2
   1026c:	bne	1024c <ReadCompressedInt16Data+0x360>
   10270:	b	10408 <ReadCompressedInt16Data+0x51c>
   10274:	cmp	sl, #1
   10278:	blt	10408 <ReadCompressedInt16Data+0x51c>
   1027c:	mov	r8, sp
   10280:	mov	r4, sl
   10284:	mov	r0, r7
   10288:	mov	r1, r6
   1028c:	mov	r2, r8
   10290:	mov	r3, r9
   10294:	bl	31dc <InflateData>
   10298:	ldrh	r0, [sp]
   1029c:	subs	r4, r4, #1
   102a0:	strh	r0, [r5], #2
   102a4:	bne	10284 <ReadCompressedInt16Data+0x398>
   102a8:	b	10408 <ReadCompressedInt16Data+0x51c>
   102ac:	cmp	sl, #1
   102b0:	blt	10408 <ReadCompressedInt16Data+0x51c>
   102b4:	mov	r8, sp
   102b8:	mov	r4, sl
   102bc:	mov	r0, r7
   102c0:	mov	r1, r6
   102c4:	mov	r2, r8
   102c8:	mov	r3, r9
   102cc:	bl	31dc <InflateData>
   102d0:	ldr	r0, [sp]
   102d4:	subs	r4, r4, #1
   102d8:	strh	r0, [r5], #2
   102dc:	bne	102bc <ReadCompressedInt16Data+0x3d0>
   102e0:	b	10408 <ReadCompressedInt16Data+0x51c>
   102e4:	cmp	sl, #1
   102e8:	blt	10408 <ReadCompressedInt16Data+0x51c>
   102ec:	mov	r8, sp
   102f0:	mov	r4, sl
   102f4:	mov	r0, r7
   102f8:	mov	r1, r6
   102fc:	mov	r2, r8
   10300:	mov	r3, r9
   10304:	bl	31dc <InflateData>
   10308:	ldr	r0, [sp]
   1030c:	subs	r4, r4, #1
   10310:	strh	r0, [r5], #2
   10314:	bne	102f4 <ReadCompressedInt16Data+0x408>
   10318:	b	10408 <ReadCompressedInt16Data+0x51c>
   1031c:	cmp	sl, #1
   10320:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10324:	mov	r8, sp
   10328:	mov	r4, sl
   1032c:	mov	r0, r7
   10330:	mov	r1, r6
   10334:	mov	r2, r8
   10338:	mov	r3, r9
   1033c:	bl	31dc <InflateData>
   10340:	vldr	s0, [sp]
   10344:	subs	r4, r4, #1
   10348:	vcvt.s32.f32	s0, s0
   1034c:	vmov	r0, s0
   10350:	strh	r0, [r5], #2
   10354:	bne	1032c <ReadCompressedInt16Data+0x440>
   10358:	b	10408 <ReadCompressedInt16Data+0x51c>
   1035c:	cmp	sl, #1
   10360:	blt	10408 <ReadCompressedInt16Data+0x51c>
   10364:	mov	r8, sp
   10368:	mov	r4, sl
   1036c:	mov	r0, r7
   10370:	mov	r1, r6
   10374:	mov	r2, r8
   10378:	mov	r3, r9
   1037c:	bl	31dc <InflateData>
   10380:	vldr	d16, [sp]
   10384:	subs	r4, r4, #1
   10388:	vcvt.s32.f64	s0, d16
   1038c:	vmov	r0, s0
   10390:	strh	r0, [r5], #2
   10394:	bne	1036c <ReadCompressedInt16Data+0x480>
   10398:	b	10408 <ReadCompressedInt16Data+0x51c>
   1039c:	cmp	sl, #1
   103a0:	blt	10408 <ReadCompressedInt16Data+0x51c>
   103a4:	mov	r8, sp
   103a8:	mov	r4, sl
   103ac:	mov	r0, r7
   103b0:	mov	r1, r6
   103b4:	mov	r2, r8
   103b8:	mov	r3, r9
   103bc:	bl	31dc <InflateData>
   103c0:	ldrh	r0, [sp]
   103c4:	subs	r4, r4, #1
   103c8:	strh	r0, [r5], #2
   103cc:	bne	103ac <ReadCompressedInt16Data+0x4c0>
   103d0:	b	10408 <ReadCompressedInt16Data+0x51c>
   103d4:	cmp	sl, #1
   103d8:	blt	10408 <ReadCompressedInt16Data+0x51c>
   103dc:	mov	r8, sp
   103e0:	mov	r4, sl
   103e4:	mov	r0, r7
   103e8:	mov	r1, r6
   103ec:	mov	r2, r8
   103f0:	mov	r3, r9
   103f4:	bl	31dc <InflateData>
   103f8:	ldrh	r0, [sp]
   103fc:	subs	r4, r4, #1
   10400:	strh	r0, [r5], #2
   10404:	bne	103e4 <ReadCompressedInt16Data+0x4f8>
   10408:	mul	r0, r9, sl
   1040c:	sub	sp, fp, #28
   10410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010414 <ReadUInt16Data>:
   10414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10418:	add	fp, sp, #28
   1041c:	sub	sp, sp, #52	; 0x34
   10420:	sub	sp, sp, #2048	; 0x800
   10424:	mov	sl, r0
   10428:	mov	r0, #0
   1042c:	cmp	sl, #0
   10430:	movne	r9, r1
   10434:	cmpne	r1, #0
   10438:	bne	10444 <ReadUInt16Data+0x30>
   1043c:	sub	sp, fp, #28
   10440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10444:	ldr	r1, [sl]
   10448:	cmp	r1, #0
   1044c:	beq	1043c <ReadUInt16Data+0x28>
   10450:	mov	r0, r2
   10454:	mov	r5, r3
   10458:	mov	r6, r2
   1045c:	bl	193c <Mat_SizeOf@plt>
   10460:	mov	r7, r0
   10464:	sub	r0, r6, #1
   10468:	mov	r1, #0
   1046c:	str	sl, [sp, #28]
   10470:	cmp	r0, #11
   10474:	str	r1, [sp, #12]
   10478:	str	r7, [sp, #24]
   1047c:	bhi	116ec <ReadUInt16Data+0x12d8>
   10480:	add	r1, pc, #4
   10484:	ldr	r0, [r1, r0, lsl #2]
   10488:	add	pc, r1, r0
   1048c:	.word	0x00000030
   10490:	.word	0x0000006c
   10494:	.word	0x000000a8
   10498:	.word	0x000000fc
   1049c:	.word	0x00000150
   104a0:	.word	0x000001a4
   104a4:	.word	0x000001f8
   104a8:	.word	0x00001260
   104ac:	.word	0x00000254
   104b0:	.word	0x00001260
   104b4:	.word	0x00001260
   104b8:	.word	0x000002b4
   104bc:	cmp	r5, #256	; 0x100
   104c0:	bgt	107a0 <ReadUInt16Data+0x38c>
   104c4:	ldr	r3, [sl]
   104c8:	add	r4, sp, #48	; 0x30
   104cc:	mov	r1, r7
   104d0:	mov	r2, r5
   104d4:	mov	r0, r4
   104d8:	bl	18d0 <fread@plt>
   104dc:	cmp	r5, #1
   104e0:	blt	10b20 <ReadUInt16Data+0x70c>
   104e4:	ldrsb	r1, [r4], #1
   104e8:	subs	r5, r5, #1
   104ec:	strh	r1, [r9], #2
   104f0:	bne	104e4 <ReadUInt16Data+0xd0>
   104f4:	b	10b20 <ReadUInt16Data+0x70c>
   104f8:	cmp	r5, #256	; 0x100
   104fc:	bgt	10888 <ReadUInt16Data+0x474>
   10500:	ldr	r3, [sl]
   10504:	add	r4, sp, #48	; 0x30
   10508:	mov	r1, r7
   1050c:	mov	r2, r5
   10510:	mov	r0, r4
   10514:	bl	18d0 <fread@plt>
   10518:	cmp	r5, #1
   1051c:	blt	10b20 <ReadUInt16Data+0x70c>
   10520:	ldrb	r1, [r4], #1
   10524:	subs	r5, r5, #1
   10528:	strh	r1, [r9], #2
   1052c:	bne	10520 <ReadUInt16Data+0x10c>
   10530:	b	10b20 <ReadUInt16Data+0x70c>
   10534:	ldr	r0, [sl, #20]
   10538:	cmp	r0, #0
   1053c:	beq	10970 <ReadUInt16Data+0x55c>
   10540:	cmp	r5, #256	; 0x100
   10544:	bgt	10b70 <ReadUInt16Data+0x75c>
   10548:	ldr	r3, [sl]
   1054c:	add	r4, sp, #48	; 0x30
   10550:	mov	r1, r7
   10554:	mov	r2, r5
   10558:	mov	r0, r4
   1055c:	bl	18d0 <fread@plt>
   10560:	mov	r6, r0
   10564:	cmp	r5, #1
   10568:	blt	10738 <ReadUInt16Data+0x324>
   1056c:	mov	r0, r4
   10570:	bl	1c58 <Mat_int16Swap>
   10574:	strh	r0, [r9], #2
   10578:	add	r4, r4, #2
   1057c:	subs	r5, r5, #1
   10580:	bne	1056c <ReadUInt16Data+0x158>
   10584:	b	10738 <ReadUInt16Data+0x324>
   10588:	ldr	r0, [sl, #20]
   1058c:	cmp	r0, #0
   10590:	beq	109dc <ReadUInt16Data+0x5c8>
   10594:	cmp	r5, #256	; 0x100
   10598:	bgt	10c50 <ReadUInt16Data+0x83c>
   1059c:	ldr	r3, [sl]
   105a0:	add	r4, sp, #48	; 0x30
   105a4:	mov	r1, r7
   105a8:	mov	r2, r5
   105ac:	mov	r0, r4
   105b0:	bl	18d0 <fread@plt>
   105b4:	mov	r6, r0
   105b8:	cmp	r5, #1
   105bc:	blt	10738 <ReadUInt16Data+0x324>
   105c0:	mov	r0, r4
   105c4:	bl	1c6c <Mat_uint16Swap>
   105c8:	strh	r0, [r9], #2
   105cc:	add	r4, r4, #2
   105d0:	subs	r5, r5, #1
   105d4:	bne	105c0 <ReadUInt16Data+0x1ac>
   105d8:	b	10738 <ReadUInt16Data+0x324>
   105dc:	ldr	r0, [sl, #20]
   105e0:	cmp	r0, #0
   105e4:	beq	10a1c <ReadUInt16Data+0x608>
   105e8:	cmp	r5, #256	; 0x100
   105ec:	bgt	10d30 <ReadUInt16Data+0x91c>
   105f0:	ldr	r3, [sl]
   105f4:	add	r4, sp, #48	; 0x30
   105f8:	mov	r1, r7
   105fc:	mov	r2, r5
   10600:	mov	r0, r4
   10604:	bl	18d0 <fread@plt>
   10608:	mov	r6, r0
   1060c:	cmp	r5, #1
   10610:	blt	10738 <ReadUInt16Data+0x324>
   10614:	mov	r0, r4
   10618:	bl	1c30 <Mat_int32Swap>
   1061c:	strh	r0, [r9], #2
   10620:	add	r4, r4, #4
   10624:	subs	r5, r5, #1
   10628:	bne	10614 <ReadUInt16Data+0x200>
   1062c:	b	10738 <ReadUInt16Data+0x324>
   10630:	ldr	r0, [sl, #20]
   10634:	cmp	r0, #0
   10638:	beq	10a58 <ReadUInt16Data+0x644>
   1063c:	cmp	r5, #256	; 0x100
   10640:	bgt	10e18 <ReadUInt16Data+0xa04>
   10644:	ldr	r3, [sl]
   10648:	add	r4, sp, #48	; 0x30
   1064c:	mov	r1, r7
   10650:	mov	r2, r5
   10654:	mov	r0, r4
   10658:	bl	18d0 <fread@plt>
   1065c:	mov	r6, r0
   10660:	cmp	r5, #1
   10664:	blt	10738 <ReadUInt16Data+0x324>
   10668:	mov	r0, r4
   1066c:	bl	1c44 <Mat_uint32Swap>
   10670:	strh	r0, [r9], #2
   10674:	add	r4, r4, #4
   10678:	subs	r5, r5, #1
   1067c:	bne	10668 <ReadUInt16Data+0x254>
   10680:	b	10738 <ReadUInt16Data+0x324>
   10684:	ldr	r0, [sl, #20]
   10688:	cmp	r0, #0
   1068c:	beq	10a94 <ReadUInt16Data+0x680>
   10690:	cmp	r5, #256	; 0x100
   10694:	bgt	10f00 <ReadUInt16Data+0xaec>
   10698:	ldr	r3, [sl]
   1069c:	add	r4, sp, #48	; 0x30
   106a0:	mov	r1, r7
   106a4:	mov	r2, r5
   106a8:	mov	r0, r4
   106ac:	bl	18d0 <fread@plt>
   106b0:	mov	r6, r0
   106b4:	cmp	r5, #1
   106b8:	blt	10738 <ReadUInt16Data+0x324>
   106bc:	mov	r0, r4
   106c0:	bl	1c84 <Mat_floatSwap>
   106c4:	vcvt.u32.f32	s0, s0
   106c8:	add	r4, r4, #4
   106cc:	subs	r5, r5, #1
   106d0:	vmov	r0, s0
   106d4:	strh	r0, [r9], #2
   106d8:	bne	106bc <ReadUInt16Data+0x2a8>
   106dc:	b	10738 <ReadUInt16Data+0x324>
   106e0:	ldr	r0, [sl, #20]
   106e4:	cmp	r0, #0
   106e8:	beq	10adc <ReadUInt16Data+0x6c8>
   106ec:	cmp	r5, #256	; 0x100
   106f0:	bgt	10ff4 <ReadUInt16Data+0xbe0>
   106f4:	ldr	r3, [sl]
   106f8:	add	r4, sp, #48	; 0x30
   106fc:	mov	r1, r7
   10700:	mov	r2, r5
   10704:	mov	r0, r4
   10708:	bl	18d0 <fread@plt>
   1070c:	mov	r6, r0
   10710:	cmp	r5, #1
   10714:	blt	10738 <ReadUInt16Data+0x324>
   10718:	mov	r0, r4
   1071c:	bl	1cc8 <Mat_doubleSwap>
   10720:	vcvt.u32.f64	s0, d0
   10724:	add	r4, r4, #8
   10728:	subs	r5, r5, #1
   1072c:	vmov	r0, s0
   10730:	strh	r0, [r9], #2
   10734:	bne	10718 <ReadUInt16Data+0x304>
   10738:	mov	r5, r6
   1073c:	b	11958 <ReadUInt16Data+0x1544>
   10740:	ldr	r0, [sl, #20]
   10744:	cmp	r0, #0
   10748:	beq	10b28 <ReadUInt16Data+0x714>
   1074c:	cmp	r5, #256	; 0x100
   10750:	bgt	110e8 <ReadUInt16Data+0xcd4>
   10754:	ldr	r3, [sl]
   10758:	add	r4, sp, #48	; 0x30
   1075c:	mov	r1, r7
   10760:	mov	r2, r5
   10764:	mov	r0, r4
   10768:	bl	18d0 <fread@plt>
   1076c:	cmp	r5, #1
   10770:	str	r0, [sp, #12]
   10774:	blt	116ec <ReadUInt16Data+0x12d8>
   10778:	str	r6, [sp, #4]
   1077c:	mov	r6, r9
   10780:	mov	r7, r5
   10784:	mov	r0, r4
   10788:	bl	1bbc <Mat_int64Swap>
   1078c:	strh	r0, [r6], #2
   10790:	add	r4, r4, #8
   10794:	subs	r7, r7, #1
   10798:	bne	10784 <ReadUInt16Data+0x370>
   1079c:	b	111ec <ReadUInt16Data+0xdd8>
   107a0:	sub	r0, r5, #256	; 0x100
   107a4:	str	r5, [sp, #8]
   107a8:	add	r1, r9, #512	; 0x200
   107ac:	add	r4, sp, #48	; 0x30
   107b0:	add	sl, sp, #32
   107b4:	mov	r5, #0
   107b8:	str	r0, [sp, #20]
   107bc:	mov	r0, #0
   107c0:	mov	r8, r0
   107c4:	ldr	r0, [sp, #28]
   107c8:	mov	r6, r1
   107cc:	mov	r1, r7
   107d0:	mov	r2, #256	; 0x100
   107d4:	ldr	r3, [r0]
   107d8:	mov	r0, r4
   107dc:	bl	18d0 <fread@plt>
   107e0:	mov	r1, r9
   107e4:	mov	r2, #0
   107e8:	ldr	r3, [r4, r2]
   107ec:	str	r3, [sp, #32]
   107f0:	add	r3, r4, r2
   107f4:	add	r2, r2, #8
   107f8:	ldr	r3, [r3, #4]
   107fc:	cmp	r2, #256	; 0x100
   10800:	str	r3, [sp, #36]	; 0x24
   10804:	vld1.8	{d16}, [sl :64]
   10808:	vmovl.s8	q8, d16
   1080c:	vst1.16	{d16-d17}, [r1]!
   10810:	bne	107e8 <ReadUInt16Data+0x3d4>
   10814:	ldr	r2, [sp, #20]
   10818:	add	r5, r0, r5
   1081c:	add	r0, r8, #256	; 0x100
   10820:	add	r9, r9, #512	; 0x200
   10824:	add	r1, r6, #512	; 0x200
   10828:	cmp	r0, r2
   1082c:	blt	107c0 <ReadUInt16Data+0x3ac>
   10830:	mov	r9, r5
   10834:	ldr	r5, [sp, #8]
   10838:	cmp	r0, r5
   1083c:	bge	11954 <ReadUInt16Data+0x1540>
   10840:	mov	r1, r7
   10844:	sub	r7, r5, r0
   10848:	ldr	r0, [sp, #28]
   1084c:	add	r4, sp, #48	; 0x30
   10850:	mov	r2, r7
   10854:	ldr	r3, [r0]
   10858:	mov	r0, r4
   1085c:	bl	18d0 <fread@plt>
   10860:	add	r9, r0, r9
   10864:	cmp	r7, #1
   10868:	blt	11950 <ReadUInt16Data+0x153c>
   1086c:	sub	r0, r5, r8
   10870:	sub	r0, r0, #256	; 0x100
   10874:	ldrsb	r1, [r4], #1
   10878:	subs	r0, r0, #1
   1087c:	strh	r1, [r6], #2
   10880:	bne	10874 <ReadUInt16Data+0x460>
   10884:	b	11950 <ReadUInt16Data+0x153c>
   10888:	sub	r0, r5, #256	; 0x100
   1088c:	str	r5, [sp, #8]
   10890:	add	r1, r9, #512	; 0x200
   10894:	add	r4, sp, #48	; 0x30
   10898:	add	sl, sp, #40	; 0x28
   1089c:	mov	r5, #0
   108a0:	str	r0, [sp, #20]
   108a4:	mov	r0, #0
   108a8:	mov	r8, r0
   108ac:	ldr	r0, [sp, #28]
   108b0:	mov	r6, r1
   108b4:	mov	r1, r7
   108b8:	mov	r2, #256	; 0x100
   108bc:	ldr	r3, [r0]
   108c0:	mov	r0, r4
   108c4:	bl	18d0 <fread@plt>
   108c8:	mov	r1, r9
   108cc:	mov	r2, #0
   108d0:	ldr	r3, [r4, r2]
   108d4:	str	r3, [sp, #40]	; 0x28
   108d8:	add	r3, r4, r2
   108dc:	add	r2, r2, #8
   108e0:	ldr	r3, [r3, #4]
   108e4:	cmp	r2, #256	; 0x100
   108e8:	str	r3, [sp, #44]	; 0x2c
   108ec:	vld1.8	{d16}, [sl :64]
   108f0:	vmovl.u8	q8, d16
   108f4:	vst1.16	{d16-d17}, [r1]!
   108f8:	bne	108d0 <ReadUInt16Data+0x4bc>
   108fc:	ldr	r2, [sp, #20]
   10900:	add	r5, r0, r5
   10904:	add	r0, r8, #256	; 0x100
   10908:	add	r9, r9, #512	; 0x200
   1090c:	add	r1, r6, #512	; 0x200
   10910:	cmp	r0, r2
   10914:	blt	108a8 <ReadUInt16Data+0x494>
   10918:	mov	r9, r5
   1091c:	ldr	r5, [sp, #8]
   10920:	cmp	r0, r5
   10924:	bge	11954 <ReadUInt16Data+0x1540>
   10928:	mov	r1, r7
   1092c:	sub	r7, r5, r0
   10930:	ldr	r0, [sp, #28]
   10934:	add	r4, sp, #48	; 0x30
   10938:	mov	r2, r7
   1093c:	ldr	r3, [r0]
   10940:	mov	r0, r4
   10944:	bl	18d0 <fread@plt>
   10948:	add	r9, r0, r9
   1094c:	cmp	r7, #1
   10950:	blt	11950 <ReadUInt16Data+0x153c>
   10954:	sub	r0, r5, r8
   10958:	sub	r0, r0, #256	; 0x100
   1095c:	ldrb	r1, [r4], #1
   10960:	subs	r0, r0, #1
   10964:	strh	r1, [r6], #2
   10968:	bne	1095c <ReadUInt16Data+0x548>
   1096c:	b	11950 <ReadUInt16Data+0x153c>
   10970:	cmp	r5, #256	; 0x100
   10974:	ble	109e4 <ReadUInt16Data+0x5d0>
   10978:	sub	r0, r5, #256	; 0x100
   1097c:	lsl	r4, r5, #1
   10980:	str	r5, [sp, #8]
   10984:	mov	r6, #0
   10988:	add	r8, sp, #48	; 0x30
   1098c:	mov	r5, #0
   10990:	str	r0, [sp, #20]
   10994:	ldr	r3, [sl]
   10998:	mov	r0, r8
   1099c:	mov	r1, r7
   109a0:	mov	r2, #256	; 0x100
   109a4:	bl	18d0 <fread@plt>
   109a8:	mov	sl, r0
   109ac:	add	r0, r9, r6, lsl #1
   109b0:	mov	r1, r8
   109b4:	mov	r2, #512	; 0x200
   109b8:	bl	1834 <memcpy@plt>
   109bc:	ldr	r0, [sp, #20]
   109c0:	add	r5, sl, r5
   109c4:	ldr	sl, [sp, #28]
   109c8:	add	r6, r6, #256	; 0x100
   109cc:	sub	r4, r4, #512	; 0x200
   109d0:	cmp	r6, r0
   109d4:	blt	10994 <ReadUInt16Data+0x580>
   109d8:	b	11254 <ReadUInt16Data+0xe40>
   109dc:	cmp	r5, #256	; 0x100
   109e0:	bgt	111f4 <ReadUInt16Data+0xde0>
   109e4:	ldr	r3, [sl]
   109e8:	add	r0, sp, #48	; 0x30
   109ec:	mov	r1, r7
   109f0:	mov	r2, r5
   109f4:	bl	18d0 <fread@plt>
   109f8:	mov	r4, r0
   109fc:	cmp	r5, #1
   10a00:	blt	10a14 <ReadUInt16Data+0x600>
   10a04:	lsl	r2, r5, #1
   10a08:	add	r1, sp, #48	; 0x30
   10a0c:	mov	r0, r9
   10a10:	bl	1834 <memcpy@plt>
   10a14:	mov	r5, r4
   10a18:	b	11958 <ReadUInt16Data+0x1544>
   10a1c:	cmp	r5, #256	; 0x100
   10a20:	bgt	1129c <ReadUInt16Data+0xe88>
   10a24:	ldr	r3, [sl]
   10a28:	add	r4, sp, #48	; 0x30
   10a2c:	mov	r1, r7
   10a30:	mov	r2, r5
   10a34:	mov	r0, r4
   10a38:	bl	18d0 <fread@plt>
   10a3c:	cmp	r5, #1
   10a40:	blt	10b20 <ReadUInt16Data+0x70c>
   10a44:	ldr	r1, [r4], #4
   10a48:	subs	r5, r5, #1
   10a4c:	strh	r1, [r9], #2
   10a50:	bne	10a44 <ReadUInt16Data+0x630>
   10a54:	b	10b20 <ReadUInt16Data+0x70c>
   10a58:	cmp	r5, #256	; 0x100
   10a5c:	bgt	11368 <ReadUInt16Data+0xf54>
   10a60:	ldr	r3, [sl]
   10a64:	add	r4, sp, #48	; 0x30
   10a68:	mov	r1, r7
   10a6c:	mov	r2, r5
   10a70:	mov	r0, r4
   10a74:	bl	18d0 <fread@plt>
   10a78:	cmp	r5, #1
   10a7c:	blt	10b20 <ReadUInt16Data+0x70c>
   10a80:	ldr	r1, [r4], #4
   10a84:	subs	r5, r5, #1
   10a88:	strh	r1, [r9], #2
   10a8c:	bne	10a80 <ReadUInt16Data+0x66c>
   10a90:	b	10b20 <ReadUInt16Data+0x70c>
   10a94:	cmp	r5, #256	; 0x100
   10a98:	bgt	11434 <ReadUInt16Data+0x1020>
   10a9c:	ldr	r3, [sl]
   10aa0:	add	r4, sp, #48	; 0x30
   10aa4:	mov	r1, r7
   10aa8:	mov	r2, r5
   10aac:	mov	r0, r4
   10ab0:	bl	18d0 <fread@plt>
   10ab4:	cmp	r5, #1
   10ab8:	blt	10b20 <ReadUInt16Data+0x70c>
   10abc:	vldr	s0, [r4]
   10ac0:	add	r4, r4, #4
   10ac4:	subs	r5, r5, #1
   10ac8:	vcvt.u32.f32	s0, s0
   10acc:	vmov	r1, s0
   10ad0:	strh	r1, [r9], #2
   10ad4:	bne	10abc <ReadUInt16Data+0x6a8>
   10ad8:	b	10b20 <ReadUInt16Data+0x70c>
   10adc:	cmp	r5, #256	; 0x100
   10ae0:	bgt	11510 <ReadUInt16Data+0x10fc>
   10ae4:	ldr	r3, [sl]
   10ae8:	add	r4, sp, #48	; 0x30
   10aec:	mov	r1, r7
   10af0:	mov	r2, r5
   10af4:	mov	r0, r4
   10af8:	bl	18d0 <fread@plt>
   10afc:	cmp	r5, #1
   10b00:	blt	10b20 <ReadUInt16Data+0x70c>
   10b04:	vldr	d16, [r4]
   10b08:	add	r4, r4, #8
   10b0c:	subs	r5, r5, #1
   10b10:	vcvt.u32.f64	s0, d16
   10b14:	vmov	r1, s0
   10b18:	strh	r1, [r9], #2
   10b1c:	bne	10b04 <ReadUInt16Data+0x6f0>
   10b20:	mov	r5, r0
   10b24:	b	11958 <ReadUInt16Data+0x1544>
   10b28:	cmp	r5, #256	; 0x100
   10b2c:	bgt	115f4 <ReadUInt16Data+0x11e0>
   10b30:	ldr	r3, [sl]
   10b34:	add	r4, sp, #48	; 0x30
   10b38:	mov	r1, r7
   10b3c:	mov	r2, r5
   10b40:	mov	r0, r4
   10b44:	bl	18d0 <fread@plt>
   10b48:	cmp	r5, #1
   10b4c:	str	r0, [sp, #12]
   10b50:	blt	116ec <ReadUInt16Data+0x12d8>
   10b54:	mov	r0, r9
   10b58:	mov	r1, r5
   10b5c:	ldrh	r2, [r4], #8
   10b60:	subs	r1, r1, #1
   10b64:	strh	r2, [r0], #2
   10b68:	bne	10b5c <ReadUInt16Data+0x748>
   10b6c:	b	116ec <ReadUInt16Data+0x12d8>
   10b70:	sub	r0, r5, #256	; 0x100
   10b74:	str	r5, [sp, #8]
   10b78:	add	r1, r9, #512	; 0x200
   10b7c:	add	r4, sp, #48	; 0x30
   10b80:	mov	r5, #0
   10b84:	str	r0, [sp, #20]
   10b88:	mov	r0, #0
   10b8c:	mov	sl, r0
   10b90:	ldr	r0, [sp, #28]
   10b94:	mov	r8, r1
   10b98:	mov	r1, r7
   10b9c:	mov	r2, #256	; 0x100
   10ba0:	ldr	r3, [r0]
   10ba4:	mov	r0, r4
   10ba8:	bl	18d0 <fread@plt>
   10bac:	mov	r6, r0
   10bb0:	mov	r7, #0
   10bb4:	add	r0, r4, r7
   10bb8:	bl	1c58 <Mat_int16Swap>
   10bbc:	add	r1, r9, r7
   10bc0:	add	r7, r7, #2
   10bc4:	cmp	r7, #512	; 0x200
   10bc8:	strh	r0, [r1]
   10bcc:	bne	10bb4 <ReadUInt16Data+0x7a0>
   10bd0:	ldr	r2, [sp, #20]
   10bd4:	ldr	r7, [sp, #24]
   10bd8:	add	r0, sl, #256	; 0x100
   10bdc:	add	r5, r6, r5
   10be0:	add	r9, r9, #512	; 0x200
   10be4:	add	r1, r8, #512	; 0x200
   10be8:	cmp	r0, r2
   10bec:	blt	10b8c <ReadUInt16Data+0x778>
   10bf0:	mov	r9, r5
   10bf4:	ldr	r5, [sp, #8]
   10bf8:	cmp	r0, r5
   10bfc:	bge	11954 <ReadUInt16Data+0x1540>
   10c00:	sub	r6, r5, r0
   10c04:	ldr	r0, [sp, #28]
   10c08:	add	r4, sp, #48	; 0x30
   10c0c:	mov	r1, r7
   10c10:	mov	r2, r6
   10c14:	ldr	r3, [r0]
   10c18:	mov	r0, r4
   10c1c:	bl	18d0 <fread@plt>
   10c20:	add	r9, r0, r9
   10c24:	cmp	r6, #1
   10c28:	blt	11954 <ReadUInt16Data+0x1540>
   10c2c:	sub	r0, r5, sl
   10c30:	sub	r6, r0, #256	; 0x100
   10c34:	mov	r0, r4
   10c38:	bl	1c58 <Mat_int16Swap>
   10c3c:	strh	r0, [r8], #2
   10c40:	add	r4, r4, #2
   10c44:	subs	r6, r6, #1
   10c48:	bne	10c34 <ReadUInt16Data+0x820>
   10c4c:	b	11954 <ReadUInt16Data+0x1540>
   10c50:	sub	r0, r5, #256	; 0x100
   10c54:	str	r5, [sp, #8]
   10c58:	add	r1, r9, #512	; 0x200
   10c5c:	add	r4, sp, #48	; 0x30
   10c60:	mov	r5, #0
   10c64:	str	r0, [sp, #20]
   10c68:	mov	r0, #0
   10c6c:	mov	sl, r0
   10c70:	ldr	r0, [sp, #28]
   10c74:	mov	r8, r1
   10c78:	mov	r1, r7
   10c7c:	mov	r2, #256	; 0x100
   10c80:	ldr	r3, [r0]
   10c84:	mov	r0, r4
   10c88:	bl	18d0 <fread@plt>
   10c8c:	mov	r6, r0
   10c90:	mov	r7, #0
   10c94:	add	r0, r4, r7
   10c98:	bl	1c6c <Mat_uint16Swap>
   10c9c:	add	r1, r9, r7
   10ca0:	add	r7, r7, #2
   10ca4:	cmp	r7, #512	; 0x200
   10ca8:	strh	r0, [r1]
   10cac:	bne	10c94 <ReadUInt16Data+0x880>
   10cb0:	ldr	r2, [sp, #20]
   10cb4:	ldr	r7, [sp, #24]
   10cb8:	add	r0, sl, #256	; 0x100
   10cbc:	add	r5, r6, r5
   10cc0:	add	r9, r9, #512	; 0x200
   10cc4:	add	r1, r8, #512	; 0x200
   10cc8:	cmp	r0, r2
   10ccc:	blt	10c6c <ReadUInt16Data+0x858>
   10cd0:	mov	r9, r5
   10cd4:	ldr	r5, [sp, #8]
   10cd8:	cmp	r0, r5
   10cdc:	bge	11954 <ReadUInt16Data+0x1540>
   10ce0:	sub	r6, r5, r0
   10ce4:	ldr	r0, [sp, #28]
   10ce8:	add	r4, sp, #48	; 0x30
   10cec:	mov	r1, r7
   10cf0:	mov	r2, r6
   10cf4:	ldr	r3, [r0]
   10cf8:	mov	r0, r4
   10cfc:	bl	18d0 <fread@plt>
   10d00:	add	r9, r0, r9
   10d04:	cmp	r6, #1
   10d08:	blt	11954 <ReadUInt16Data+0x1540>
   10d0c:	sub	r0, r5, sl
   10d10:	sub	r6, r0, #256	; 0x100
   10d14:	mov	r0, r4
   10d18:	bl	1c6c <Mat_uint16Swap>
   10d1c:	strh	r0, [r8], #2
   10d20:	add	r4, r4, #2
   10d24:	subs	r6, r6, #1
   10d28:	bne	10d14 <ReadUInt16Data+0x900>
   10d2c:	b	11954 <ReadUInt16Data+0x1540>
   10d30:	sub	r0, r5, #256	; 0x100
   10d34:	str	r5, [sp, #8]
   10d38:	add	r1, r9, #512	; 0x200
   10d3c:	mov	r5, #0
   10d40:	str	r0, [sp, #16]
   10d44:	mov	r0, #0
   10d48:	ldr	r3, [sl]
   10d4c:	add	r6, sp, #48	; 0x30
   10d50:	str	r0, [sp, #20]
   10d54:	mov	r8, r1
   10d58:	mov	r1, r7
   10d5c:	mov	r2, #256	; 0x100
   10d60:	mov	r0, r6
   10d64:	bl	18d0 <fread@plt>
   10d68:	mov	r4, r0
   10d6c:	mov	r7, #0
   10d70:	mov	r0, r6
   10d74:	add	sl, r9, r7
   10d78:	bl	1c30 <Mat_int32Swap>
   10d7c:	add	r7, r7, #2
   10d80:	add	r6, r6, #4
   10d84:	strh	r0, [sl]
   10d88:	cmp	r7, #512	; 0x200
   10d8c:	bne	10d70 <ReadUInt16Data+0x95c>
   10d90:	ldr	r0, [sp, #20]
   10d94:	ldr	r2, [sp, #16]
   10d98:	ldr	r7, [sp, #24]
   10d9c:	ldr	sl, [sp, #28]
   10da0:	add	r5, r4, r5
   10da4:	add	r9, r9, #512	; 0x200
   10da8:	add	r1, r8, #512	; 0x200
   10dac:	add	r0, r0, #256	; 0x100
   10db0:	cmp	r0, r2
   10db4:	blt	10d48 <ReadUInt16Data+0x934>
   10db8:	mov	r9, r5
   10dbc:	ldr	r5, [sp, #8]
   10dc0:	cmp	r0, r5
   10dc4:	bge	11954 <ReadUInt16Data+0x1540>
   10dc8:	ldr	r3, [sl]
   10dcc:	sub	r6, r5, r0
   10dd0:	add	r4, sp, #48	; 0x30
   10dd4:	mov	r1, r7
   10dd8:	mov	r0, r4
   10ddc:	mov	r2, r6
   10de0:	bl	18d0 <fread@plt>
   10de4:	add	r9, r0, r9
   10de8:	cmp	r6, #1
   10dec:	blt	11954 <ReadUInt16Data+0x1540>
   10df0:	ldr	r0, [sp, #20]
   10df4:	sub	r0, r5, r0
   10df8:	sub	r6, r0, #256	; 0x100
   10dfc:	mov	r0, r4
   10e00:	bl	1c30 <Mat_int32Swap>
   10e04:	strh	r0, [r8], #2
   10e08:	add	r4, r4, #4
   10e0c:	subs	r6, r6, #1
   10e10:	bne	10dfc <ReadUInt16Data+0x9e8>
   10e14:	b	11954 <ReadUInt16Data+0x1540>
   10e18:	sub	r0, r5, #256	; 0x100
   10e1c:	str	r5, [sp, #8]
   10e20:	add	r1, r9, #512	; 0x200
   10e24:	mov	r5, #0
   10e28:	str	r0, [sp, #16]
   10e2c:	mov	r0, #0
   10e30:	ldr	r3, [sl]
   10e34:	add	r6, sp, #48	; 0x30
   10e38:	str	r0, [sp, #20]
   10e3c:	mov	r8, r1
   10e40:	mov	r1, r7
   10e44:	mov	r2, #256	; 0x100
   10e48:	mov	r0, r6
   10e4c:	bl	18d0 <fread@plt>
   10e50:	mov	r4, r0
   10e54:	mov	r7, #0
   10e58:	mov	r0, r6
   10e5c:	add	sl, r9, r7
   10e60:	bl	1c44 <Mat_uint32Swap>
   10e64:	add	r7, r7, #2
   10e68:	add	r6, r6, #4
   10e6c:	strh	r0, [sl]
   10e70:	cmp	r7, #512	; 0x200
   10e74:	bne	10e58 <ReadUInt16Data+0xa44>
   10e78:	ldr	r0, [sp, #20]
   10e7c:	ldr	r2, [sp, #16]
   10e80:	ldr	r7, [sp, #24]
   10e84:	ldr	sl, [sp, #28]
   10e88:	add	r5, r4, r5
   10e8c:	add	r9, r9, #512	; 0x200
   10e90:	add	r1, r8, #512	; 0x200
   10e94:	add	r0, r0, #256	; 0x100
   10e98:	cmp	r0, r2
   10e9c:	blt	10e30 <ReadUInt16Data+0xa1c>
   10ea0:	mov	r9, r5
   10ea4:	ldr	r5, [sp, #8]
   10ea8:	cmp	r0, r5
   10eac:	bge	11954 <ReadUInt16Data+0x1540>
   10eb0:	ldr	r3, [sl]
   10eb4:	sub	r6, r5, r0
   10eb8:	add	r4, sp, #48	; 0x30
   10ebc:	mov	r1, r7
   10ec0:	mov	r0, r4
   10ec4:	mov	r2, r6
   10ec8:	bl	18d0 <fread@plt>
   10ecc:	add	r9, r0, r9
   10ed0:	cmp	r6, #1
   10ed4:	blt	11954 <ReadUInt16Data+0x1540>
   10ed8:	ldr	r0, [sp, #20]
   10edc:	sub	r0, r5, r0
   10ee0:	sub	r6, r0, #256	; 0x100
   10ee4:	mov	r0, r4
   10ee8:	bl	1c44 <Mat_uint32Swap>
   10eec:	strh	r0, [r8], #2
   10ef0:	add	r4, r4, #4
   10ef4:	subs	r6, r6, #1
   10ef8:	bne	10ee4 <ReadUInt16Data+0xad0>
   10efc:	b	11954 <ReadUInt16Data+0x1540>
   10f00:	sub	r0, r5, #256	; 0x100
   10f04:	str	r5, [sp, #8]
   10f08:	add	r1, r9, #512	; 0x200
   10f0c:	mov	r5, #0
   10f10:	str	r0, [sp, #20]
   10f14:	mov	r0, #0
   10f18:	mov	sl, r0
   10f1c:	ldr	r0, [sp, #28]
   10f20:	add	r6, sp, #48	; 0x30
   10f24:	mov	r8, r1
   10f28:	mov	r1, r7
   10f2c:	mov	r2, #256	; 0x100
   10f30:	ldr	r3, [r0]
   10f34:	mov	r0, r6
   10f38:	bl	18d0 <fread@plt>
   10f3c:	mov	r4, r0
   10f40:	mov	r7, #0
   10f44:	mov	r0, r6
   10f48:	bl	1c84 <Mat_floatSwap>
   10f4c:	vcvt.u32.f32	s0, s0
   10f50:	add	r0, r9, r7
   10f54:	add	r7, r7, #2
   10f58:	add	r6, r6, #4
   10f5c:	cmp	r7, #512	; 0x200
   10f60:	vmov	r1, s0
   10f64:	strh	r1, [r0]
   10f68:	bne	10f44 <ReadUInt16Data+0xb30>
   10f6c:	ldr	r2, [sp, #20]
   10f70:	ldr	r7, [sp, #24]
   10f74:	add	r0, sl, #256	; 0x100
   10f78:	add	r5, r4, r5
   10f7c:	add	r9, r9, #512	; 0x200
   10f80:	add	r1, r8, #512	; 0x200
   10f84:	cmp	r0, r2
   10f88:	blt	10f18 <ReadUInt16Data+0xb04>
   10f8c:	mov	r9, r5
   10f90:	ldr	r5, [sp, #8]
   10f94:	cmp	r0, r5
   10f98:	bge	11954 <ReadUInt16Data+0x1540>
   10f9c:	sub	r6, r5, r0
   10fa0:	ldr	r0, [sp, #28]
   10fa4:	add	r4, sp, #48	; 0x30
   10fa8:	mov	r1, r7
   10fac:	mov	r2, r6
   10fb0:	ldr	r3, [r0]
   10fb4:	mov	r0, r4
   10fb8:	bl	18d0 <fread@plt>
   10fbc:	add	r9, r0, r9
   10fc0:	cmp	r6, #1
   10fc4:	blt	11954 <ReadUInt16Data+0x1540>
   10fc8:	sub	r0, r5, sl
   10fcc:	sub	r6, r0, #256	; 0x100
   10fd0:	mov	r0, r4
   10fd4:	bl	1c84 <Mat_floatSwap>
   10fd8:	vcvt.u32.f32	s0, s0
   10fdc:	add	r4, r4, #4
   10fe0:	subs	r6, r6, #1
   10fe4:	vmov	r0, s0
   10fe8:	strh	r0, [r8], #2
   10fec:	bne	10fd0 <ReadUInt16Data+0xbbc>
   10ff0:	b	11954 <ReadUInt16Data+0x1540>
   10ff4:	sub	r0, r5, #256	; 0x100
   10ff8:	str	r5, [sp, #8]
   10ffc:	add	r1, r9, #512	; 0x200
   11000:	mov	r5, #0
   11004:	str	r0, [sp, #20]
   11008:	mov	r0, #0
   1100c:	mov	sl, r0
   11010:	ldr	r0, [sp, #28]
   11014:	add	r6, sp, #48	; 0x30
   11018:	mov	r8, r1
   1101c:	mov	r1, r7
   11020:	mov	r2, #256	; 0x100
   11024:	ldr	r3, [r0]
   11028:	mov	r0, r6
   1102c:	bl	18d0 <fread@plt>
   11030:	mov	r4, r0
   11034:	mov	r7, #0
   11038:	mov	r0, r6
   1103c:	bl	1cc8 <Mat_doubleSwap>
   11040:	vcvt.u32.f64	s0, d0
   11044:	add	r0, r9, r7
   11048:	add	r7, r7, #2
   1104c:	add	r6, r6, #8
   11050:	cmp	r7, #512	; 0x200
   11054:	vmov	r1, s0
   11058:	strh	r1, [r0]
   1105c:	bne	11038 <ReadUInt16Data+0xc24>
   11060:	ldr	r2, [sp, #20]
   11064:	ldr	r7, [sp, #24]
   11068:	add	r0, sl, #256	; 0x100
   1106c:	add	r5, r4, r5
   11070:	add	r9, r9, #512	; 0x200
   11074:	add	r1, r8, #512	; 0x200
   11078:	cmp	r0, r2
   1107c:	blt	1100c <ReadUInt16Data+0xbf8>
   11080:	mov	r9, r5
   11084:	ldr	r5, [sp, #8]
   11088:	cmp	r0, r5
   1108c:	bge	11954 <ReadUInt16Data+0x1540>
   11090:	sub	r6, r5, r0
   11094:	ldr	r0, [sp, #28]
   11098:	add	r4, sp, #48	; 0x30
   1109c:	mov	r1, r7
   110a0:	mov	r2, r6
   110a4:	ldr	r3, [r0]
   110a8:	mov	r0, r4
   110ac:	bl	18d0 <fread@plt>
   110b0:	add	r9, r0, r9
   110b4:	cmp	r6, #1
   110b8:	blt	11954 <ReadUInt16Data+0x1540>
   110bc:	sub	r0, r5, sl
   110c0:	sub	r6, r0, #256	; 0x100
   110c4:	mov	r0, r4
   110c8:	bl	1cc8 <Mat_doubleSwap>
   110cc:	vcvt.u32.f64	s0, d0
   110d0:	add	r4, r4, #8
   110d4:	subs	r6, r6, #1
   110d8:	vmov	r0, s0
   110dc:	strh	r0, [r8], #2
   110e0:	bne	110c4 <ReadUInt16Data+0xcb0>
   110e4:	b	11954 <ReadUInt16Data+0x1540>
   110e8:	sub	r0, r5, #256	; 0x100
   110ec:	str	r5, [sp, #8]
   110f0:	add	r1, r9, #512	; 0x200
   110f4:	mov	r7, r9
   110f8:	mov	r5, #0
   110fc:	str	r6, [sp, #4]
   11100:	str	r0, [sp, #12]
   11104:	mov	r0, #0
   11108:	str	r1, [sp, #20]
   1110c:	ldr	r3, [sl]
   11110:	ldr	r1, [sp, #24]
   11114:	add	r4, sp, #48	; 0x30
   11118:	str	r0, [sp, #16]
   1111c:	mov	r2, #256	; 0x100
   11120:	mov	r0, r4
   11124:	bl	18d0 <fread@plt>
   11128:	mov	r8, r0
   1112c:	mov	sl, #0
   11130:	mov	r0, r4
   11134:	add	r6, r7, sl
   11138:	bl	1bbc <Mat_int64Swap>
   1113c:	add	sl, sl, #2
   11140:	add	r4, r4, #8
   11144:	strh	r0, [r6]
   11148:	cmp	sl, #512	; 0x200
   1114c:	bne	11130 <ReadUInt16Data+0xd1c>
   11150:	ldr	r0, [sp, #20]
   11154:	ldr	r6, [sp, #16]
   11158:	ldr	r2, [sp, #12]
   1115c:	ldr	sl, [sp, #28]
   11160:	add	r5, r8, r5
   11164:	add	r7, r7, #512	; 0x200
   11168:	add	r1, r0, #512	; 0x200
   1116c:	add	r0, r6, #256	; 0x100
   11170:	cmp	r0, r2
   11174:	blt	11108 <ReadUInt16Data+0xcf4>
   11178:	str	r5, [sp, #12]
   1117c:	ldr	r5, [sp, #8]
   11180:	cmp	r0, r5
   11184:	bge	111ec <ReadUInt16Data+0xdd8>
   11188:	ldr	r7, [sp, #24]
   1118c:	ldr	r3, [sl]
   11190:	sub	r8, r5, r0
   11194:	add	r4, sp, #48	; 0x30
   11198:	mov	r0, r4
   1119c:	mov	r2, r8
   111a0:	mov	r1, r7
   111a4:	bl	18d0 <fread@plt>
   111a8:	ldr	r1, [sp, #12]
   111ac:	cmp	r8, #1
   111b0:	add	r1, r0, r1
   111b4:	str	r1, [sp, #12]
   111b8:	blt	116e8 <ReadUInt16Data+0x12d4>
   111bc:	sub	r0, r5, r6
   111c0:	ldr	r6, [sp, #4]
   111c4:	ldr	r8, [sp, #20]
   111c8:	sub	r7, r0, #256	; 0x100
   111cc:	mov	r0, r4
   111d0:	bl	1bbc <Mat_int64Swap>
   111d4:	strh	r0, [r8], #2
   111d8:	add	r4, r4, #8
   111dc:	subs	r7, r7, #1
   111e0:	bne	111cc <ReadUInt16Data+0xdb8>
   111e4:	ldr	r7, [sp, #24]
   111e8:	b	116ec <ReadUInt16Data+0x12d8>
   111ec:	ldr	r7, [sp, #24]
   111f0:	b	116e8 <ReadUInt16Data+0x12d4>
   111f4:	sub	r0, r5, #256	; 0x100
   111f8:	lsl	r4, r5, #1
   111fc:	str	r5, [sp, #8]
   11200:	mov	r6, #0
   11204:	add	r8, sp, #48	; 0x30
   11208:	mov	r5, #0
   1120c:	str	r0, [sp, #20]
   11210:	ldr	r3, [sl]
   11214:	mov	r0, r8
   11218:	mov	r1, r7
   1121c:	mov	r2, #256	; 0x100
   11220:	bl	18d0 <fread@plt>
   11224:	mov	sl, r0
   11228:	add	r0, r9, r6, lsl #1
   1122c:	mov	r1, r8
   11230:	mov	r2, #512	; 0x200
   11234:	bl	1834 <memcpy@plt>
   11238:	ldr	r0, [sp, #20]
   1123c:	add	r5, sl, r5
   11240:	ldr	sl, [sp, #28]
   11244:	add	r6, r6, #256	; 0x100
   11248:	sub	r4, r4, #512	; 0x200
   1124c:	cmp	r6, r0
   11250:	blt	11210 <ReadUInt16Data+0xdfc>
   11254:	ldr	r0, [sp, #8]
   11258:	cmp	r6, r0
   1125c:	bge	116d8 <ReadUInt16Data+0x12c4>
   11260:	ldr	r7, [sp, #24]
   11264:	ldr	r3, [sl]
   11268:	sub	r8, r0, r6
   1126c:	add	r0, sp, #48	; 0x30
   11270:	mov	r2, r8
   11274:	mov	r1, r7
   11278:	bl	18d0 <fread@plt>
   1127c:	add	r5, r0, r5
   11280:	cmp	r8, #1
   11284:	blt	11958 <ReadUInt16Data+0x1544>
   11288:	add	r0, r9, r6, lsl #1
   1128c:	add	r1, sp, #48	; 0x30
   11290:	mov	r2, r4
   11294:	bl	1834 <memcpy@plt>
   11298:	b	11958 <ReadUInt16Data+0x1544>
   1129c:	add	r1, r9, #512	; 0x200
   112a0:	str	r5, [sp, #8]
   112a4:	sub	sl, r5, #256	; 0x100
   112a8:	mov	r0, #0
   112ac:	add	r4, sp, #48	; 0x30
   112b0:	mov	r5, #0
   112b4:	mov	r8, r0
   112b8:	ldr	r0, [sp, #28]
   112bc:	mov	r6, r1
   112c0:	mov	r1, r7
   112c4:	mov	r2, #256	; 0x100
   112c8:	ldr	r3, [r0]
   112cc:	mov	r0, r4
   112d0:	bl	18d0 <fread@plt>
   112d4:	mov	r1, #0
   112d8:	mov	r2, r4
   112dc:	vld1.32	{d16-d17}, [r2]!
   112e0:	add	r3, r9, r1
   112e4:	add	r1, r1, #8
   112e8:	cmp	r1, #512	; 0x200
   112ec:	vmovn.i32	d16, q8
   112f0:	vst1.16	{d16}, [r3]
   112f4:	bne	112dc <ReadUInt16Data+0xec8>
   112f8:	add	r5, r0, r5
   112fc:	add	r0, r8, #256	; 0x100
   11300:	add	r9, r9, #512	; 0x200
   11304:	add	r1, r6, #512	; 0x200
   11308:	cmp	r0, sl
   1130c:	blt	112b4 <ReadUInt16Data+0xea0>
   11310:	mov	r9, r5
   11314:	ldr	r5, [sp, #8]
   11318:	cmp	r0, r5
   1131c:	bge	11954 <ReadUInt16Data+0x1540>
   11320:	mov	r1, r7
   11324:	sub	r7, r5, r0
   11328:	ldr	r0, [sp, #28]
   1132c:	add	r4, sp, #48	; 0x30
   11330:	mov	r2, r7
   11334:	ldr	r3, [r0]
   11338:	mov	r0, r4
   1133c:	bl	18d0 <fread@plt>
   11340:	add	r9, r0, r9
   11344:	cmp	r7, #1
   11348:	blt	11950 <ReadUInt16Data+0x153c>
   1134c:	sub	r0, r5, r8
   11350:	sub	r0, r0, #256	; 0x100
   11354:	ldr	r1, [r4], #4
   11358:	subs	r0, r0, #1
   1135c:	strh	r1, [r6], #2
   11360:	bne	11354 <ReadUInt16Data+0xf40>
   11364:	b	11950 <ReadUInt16Data+0x153c>
   11368:	add	r1, r9, #512	; 0x200
   1136c:	str	r5, [sp, #8]
   11370:	sub	sl, r5, #256	; 0x100
   11374:	mov	r0, #0
   11378:	add	r4, sp, #48	; 0x30
   1137c:	mov	r5, #0
   11380:	mov	r8, r0
   11384:	ldr	r0, [sp, #28]
   11388:	mov	r6, r1
   1138c:	mov	r1, r7
   11390:	mov	r2, #256	; 0x100
   11394:	ldr	r3, [r0]
   11398:	mov	r0, r4
   1139c:	bl	18d0 <fread@plt>
   113a0:	mov	r1, #0
   113a4:	mov	r2, r4
   113a8:	vld1.32	{d16-d17}, [r2]!
   113ac:	add	r3, r9, r1
   113b0:	add	r1, r1, #8
   113b4:	cmp	r1, #512	; 0x200
   113b8:	vmovn.i32	d16, q8
   113bc:	vst1.16	{d16}, [r3]
   113c0:	bne	113a8 <ReadUInt16Data+0xf94>
   113c4:	add	r5, r0, r5
   113c8:	add	r0, r8, #256	; 0x100
   113cc:	add	r9, r9, #512	; 0x200
   113d0:	add	r1, r6, #512	; 0x200
   113d4:	cmp	r0, sl
   113d8:	blt	11380 <ReadUInt16Data+0xf6c>
   113dc:	mov	r9, r5
   113e0:	ldr	r5, [sp, #8]
   113e4:	cmp	r0, r5
   113e8:	bge	11954 <ReadUInt16Data+0x1540>
   113ec:	mov	r1, r7
   113f0:	sub	r7, r5, r0
   113f4:	ldr	r0, [sp, #28]
   113f8:	add	r4, sp, #48	; 0x30
   113fc:	mov	r2, r7
   11400:	ldr	r3, [r0]
   11404:	mov	r0, r4
   11408:	bl	18d0 <fread@plt>
   1140c:	add	r9, r0, r9
   11410:	cmp	r7, #1
   11414:	blt	11950 <ReadUInt16Data+0x153c>
   11418:	sub	r0, r5, r8
   1141c:	sub	r0, r0, #256	; 0x100
   11420:	ldr	r1, [r4], #4
   11424:	subs	r0, r0, #1
   11428:	strh	r1, [r6], #2
   1142c:	bne	11420 <ReadUInt16Data+0x100c>
   11430:	b	11950 <ReadUInt16Data+0x153c>
   11434:	add	r1, r9, #512	; 0x200
   11438:	str	r5, [sp, #8]
   1143c:	sub	sl, r5, #256	; 0x100
   11440:	mov	r0, #0
   11444:	add	r4, sp, #48	; 0x30
   11448:	mov	r5, #0
   1144c:	mov	r8, r0
   11450:	ldr	r0, [sp, #28]
   11454:	mov	r6, r1
   11458:	mov	r1, r7
   1145c:	mov	r2, #256	; 0x100
   11460:	ldr	r3, [r0]
   11464:	mov	r0, r4
   11468:	bl	18d0 <fread@plt>
   1146c:	mov	r1, #0
   11470:	mov	r2, r4
   11474:	vld1.32	{d16-d17}, [r2]!
   11478:	add	r3, r9, r1
   1147c:	add	r1, r1, #8
   11480:	cmp	r1, #512	; 0x200
   11484:	vcvt.u32.f32	q8, q8
   11488:	vmovn.i32	d16, q8
   1148c:	vst1.16	{d16}, [r3]
   11490:	bne	11474 <ReadUInt16Data+0x1060>
   11494:	add	r5, r0, r5
   11498:	add	r0, r8, #256	; 0x100
   1149c:	add	r9, r9, #512	; 0x200
   114a0:	add	r1, r6, #512	; 0x200
   114a4:	cmp	r0, sl
   114a8:	blt	1144c <ReadUInt16Data+0x1038>
   114ac:	mov	r9, r5
   114b0:	ldr	r5, [sp, #8]
   114b4:	cmp	r0, r5
   114b8:	bge	11954 <ReadUInt16Data+0x1540>
   114bc:	mov	r1, r7
   114c0:	sub	r7, r5, r0
   114c4:	ldr	r0, [sp, #28]
   114c8:	add	r4, sp, #48	; 0x30
   114cc:	mov	r2, r7
   114d0:	ldr	r3, [r0]
   114d4:	mov	r0, r4
   114d8:	bl	18d0 <fread@plt>
   114dc:	add	r9, r0, r9
   114e0:	cmp	r7, #1
   114e4:	blt	11950 <ReadUInt16Data+0x153c>
   114e8:	sub	r0, r5, r8
   114ec:	sub	r0, r0, #256	; 0x100
   114f0:	vldr	s0, [r4]
   114f4:	add	r4, r4, #4
   114f8:	subs	r0, r0, #1
   114fc:	vcvt.u32.f32	s0, s0
   11500:	vmov	r1, s0
   11504:	strh	r1, [r6], #2
   11508:	bne	114f0 <ReadUInt16Data+0x10dc>
   1150c:	b	11950 <ReadUInt16Data+0x153c>
   11510:	add	r1, r9, #512	; 0x200
   11514:	str	r5, [sp, #8]
   11518:	sub	sl, r5, #256	; 0x100
   1151c:	mov	r0, #0
   11520:	add	r4, sp, #48	; 0x30
   11524:	mov	r5, #0
   11528:	mov	r8, r0
   1152c:	ldr	r0, [sp, #28]
   11530:	mov	r6, r1
   11534:	mov	r1, r7
   11538:	mov	r2, #256	; 0x100
   1153c:	ldr	r3, [r0]
   11540:	mov	r0, r4
   11544:	bl	18d0 <fread@plt>
   11548:	mov	r1, r4
   1154c:	mov	r2, #0
   11550:	vldr	d16, [r1]
   11554:	add	r3, r9, r2
   11558:	add	r2, r2, #2
   1155c:	add	r1, r1, #8
   11560:	cmp	r2, #512	; 0x200
   11564:	vcvt.u32.f64	s0, d16
   11568:	vmov	r7, s0
   1156c:	strh	r7, [r3]
   11570:	bne	11550 <ReadUInt16Data+0x113c>
   11574:	ldr	r7, [sp, #24]
   11578:	add	r5, r0, r5
   1157c:	add	r0, r8, #256	; 0x100
   11580:	add	r9, r9, #512	; 0x200
   11584:	add	r1, r6, #512	; 0x200
   11588:	cmp	r0, sl
   1158c:	blt	11528 <ReadUInt16Data+0x1114>
   11590:	mov	r9, r5
   11594:	ldr	r5, [sp, #8]
   11598:	cmp	r0, r5
   1159c:	bge	11954 <ReadUInt16Data+0x1540>
   115a0:	mov	r1, r7
   115a4:	sub	r7, r5, r0
   115a8:	ldr	r0, [sp, #28]
   115ac:	add	r4, sp, #48	; 0x30
   115b0:	mov	r2, r7
   115b4:	ldr	r3, [r0]
   115b8:	mov	r0, r4
   115bc:	bl	18d0 <fread@plt>
   115c0:	add	r9, r0, r9
   115c4:	cmp	r7, #1
   115c8:	blt	11950 <ReadUInt16Data+0x153c>
   115cc:	sub	r0, r5, r8
   115d0:	sub	r0, r0, #256	; 0x100
   115d4:	vldr	d16, [r4]
   115d8:	add	r4, r4, #8
   115dc:	subs	r0, r0, #1
   115e0:	vcvt.u32.f64	s0, d16
   115e4:	vmov	r1, s0
   115e8:	strh	r1, [r6], #2
   115ec:	bne	115d4 <ReadUInt16Data+0x11c0>
   115f0:	b	11950 <ReadUInt16Data+0x153c>
   115f4:	add	r1, r9, #512	; 0x200
   115f8:	str	r5, [sp, #8]
   115fc:	sub	r8, r5, #256	; 0x100
   11600:	mov	r0, #0
   11604:	add	r4, sp, #48	; 0x30
   11608:	mov	r7, r9
   1160c:	mov	r5, #0
   11610:	str	r6, [sp, #4]
   11614:	mov	sl, r0
   11618:	ldr	r0, [sp, #28]
   1161c:	mov	r6, r1
   11620:	ldr	r1, [sp, #24]
   11624:	mov	r2, #256	; 0x100
   11628:	ldr	r3, [r0]
   1162c:	mov	r0, r4
   11630:	bl	18d0 <fread@plt>
   11634:	mov	r1, #0
   11638:	mov	r2, r4
   1163c:	vld1.64	{d16-d17}, [r2]!
   11640:	add	r3, r7, r1
   11644:	add	r1, r1, #4
   11648:	cmp	r1, #512	; 0x200
   1164c:	vmovn.i64	d16, q8
   11650:	vuzp.16	d16, d17
   11654:	vst1.32	{d16[0]}, [r3]
   11658:	bne	1163c <ReadUInt16Data+0x1228>
   1165c:	add	r5, r0, r5
   11660:	add	r0, sl, #256	; 0x100
   11664:	add	r7, r7, #512	; 0x200
   11668:	add	r1, r6, #512	; 0x200
   1166c:	cmp	r0, r8
   11670:	blt	11614 <ReadUInt16Data+0x1200>
   11674:	str	r5, [sp, #12]
   11678:	ldr	r5, [sp, #8]
   1167c:	cmp	r0, r5
   11680:	bge	116e0 <ReadUInt16Data+0x12cc>
   11684:	sub	r8, r5, r0
   11688:	ldr	r0, [sp, #28]
   1168c:	ldr	r7, [sp, #24]
   11690:	add	r4, sp, #48	; 0x30
   11694:	mov	r2, r8
   11698:	ldr	r3, [r0]
   1169c:	mov	r0, r4
   116a0:	mov	r1, r7
   116a4:	bl	18d0 <fread@plt>
   116a8:	ldr	r1, [sp, #12]
   116ac:	cmp	r8, #1
   116b0:	add	r1, r0, r1
   116b4:	str	r1, [sp, #12]
   116b8:	blt	116e4 <ReadUInt16Data+0x12d0>
   116bc:	sub	r0, r5, sl
   116c0:	sub	r0, r0, #256	; 0x100
   116c4:	ldrh	r1, [r4], #8
   116c8:	subs	r0, r0, #1
   116cc:	strh	r1, [r6], #2
   116d0:	bne	116c4 <ReadUInt16Data+0x12b0>
   116d4:	b	116e4 <ReadUInt16Data+0x12d0>
   116d8:	ldr	r7, [sp, #24]
   116dc:	b	11958 <ReadUInt16Data+0x1544>
   116e0:	ldr	r7, [sp, #24]
   116e4:	ldr	sl, [sp, #28]
   116e8:	ldr	r6, [sp, #4]
   116ec:	cmp	r6, #13
   116f0:	bne	11794 <ReadUInt16Data+0x1380>
   116f4:	ldr	r0, [sl, #20]
   116f8:	cmp	r0, #0
   116fc:	beq	11750 <ReadUInt16Data+0x133c>
   11700:	cmp	r5, #256	; 0x100
   11704:	bgt	1179c <ReadUInt16Data+0x1388>
   11708:	ldr	r3, [sl]
   1170c:	add	r4, sp, #48	; 0x30
   11710:	mov	r1, r7
   11714:	mov	r2, r5
   11718:	mov	r0, r4
   1171c:	bl	18d0 <fread@plt>
   11720:	ldr	r1, [sp, #12]
   11724:	cmp	r5, #1
   11728:	add	r1, r0, r1
   1172c:	str	r1, [sp, #12]
   11730:	blt	11794 <ReadUInt16Data+0x1380>
   11734:	mov	r0, r4
   11738:	bl	1c0c <Mat_uint64Swap>
   1173c:	strh	r0, [r9], #2
   11740:	add	r4, r4, #8
   11744:	subs	r5, r5, #1
   11748:	bne	11734 <ReadUInt16Data+0x1320>
   1174c:	b	11794 <ReadUInt16Data+0x1380>
   11750:	cmp	r5, #256	; 0x100
   11754:	bgt	11884 <ReadUInt16Data+0x1470>
   11758:	ldr	r3, [sl]
   1175c:	add	r4, sp, #48	; 0x30
   11760:	mov	r1, r7
   11764:	mov	r2, r5
   11768:	mov	r0, r4
   1176c:	bl	18d0 <fread@plt>
   11770:	ldr	r1, [sp, #12]
   11774:	cmp	r5, #1
   11778:	add	r1, r0, r1
   1177c:	str	r1, [sp, #12]
   11780:	blt	11794 <ReadUInt16Data+0x1380>
   11784:	ldrh	r0, [r4], #8
   11788:	subs	r5, r5, #1
   1178c:	strh	r0, [r9], #2
   11790:	bne	11784 <ReadUInt16Data+0x1370>
   11794:	ldr	r5, [sp, #12]
   11798:	b	11958 <ReadUInt16Data+0x1544>
   1179c:	sub	r0, r5, #256	; 0x100
   117a0:	str	r5, [sp, #8]
   117a4:	ldr	r5, [sp, #12]
   117a8:	add	r1, r9, #512	; 0x200
   117ac:	str	r0, [sp, #16]
   117b0:	mov	r0, #0
   117b4:	ldr	r3, [sl]
   117b8:	add	r6, sp, #48	; 0x30
   117bc:	str	r0, [sp, #20]
   117c0:	mov	r8, r1
   117c4:	mov	r1, r7
   117c8:	mov	r2, #256	; 0x100
   117cc:	mov	r0, r6
   117d0:	bl	18d0 <fread@plt>
   117d4:	mov	r4, r0
   117d8:	mov	r7, #0
   117dc:	mov	r0, r6
   117e0:	add	sl, r9, r7
   117e4:	bl	1c0c <Mat_uint64Swap>
   117e8:	add	r7, r7, #2
   117ec:	add	r6, r6, #8
   117f0:	strh	r0, [sl]
   117f4:	cmp	r7, #512	; 0x200
   117f8:	bne	117dc <ReadUInt16Data+0x13c8>
   117fc:	ldr	r0, [sp, #20]
   11800:	ldr	r2, [sp, #16]
   11804:	ldr	r7, [sp, #24]
   11808:	ldr	sl, [sp, #28]
   1180c:	add	r5, r4, r5
   11810:	add	r9, r9, #512	; 0x200
   11814:	add	r1, r8, #512	; 0x200
   11818:	add	r0, r0, #256	; 0x100
   1181c:	cmp	r0, r2
   11820:	blt	117b4 <ReadUInt16Data+0x13a0>
   11824:	mov	r9, r5
   11828:	ldr	r5, [sp, #8]
   1182c:	cmp	r0, r5
   11830:	bge	11954 <ReadUInt16Data+0x1540>
   11834:	ldr	r3, [sl]
   11838:	sub	r6, r5, r0
   1183c:	add	r4, sp, #48	; 0x30
   11840:	mov	r1, r7
   11844:	mov	r0, r4
   11848:	mov	r2, r6
   1184c:	bl	18d0 <fread@plt>
   11850:	add	r9, r0, r9
   11854:	cmp	r6, #1
   11858:	blt	11954 <ReadUInt16Data+0x1540>
   1185c:	ldr	r0, [sp, #20]
   11860:	sub	r0, r5, r0
   11864:	sub	r6, r0, #256	; 0x100
   11868:	mov	r0, r4
   1186c:	bl	1c0c <Mat_uint64Swap>
   11870:	strh	r0, [r8], #2
   11874:	add	r4, r4, #8
   11878:	subs	r6, r6, #1
   1187c:	bne	11868 <ReadUInt16Data+0x1454>
   11880:	b	11954 <ReadUInt16Data+0x1540>
   11884:	str	r5, [sp, #8]
   11888:	sub	sl, r5, #256	; 0x100
   1188c:	ldr	r5, [sp, #12]
   11890:	add	r1, r9, #512	; 0x200
   11894:	mov	r0, #0
   11898:	add	r4, sp, #48	; 0x30
   1189c:	mov	r8, r0
   118a0:	ldr	r0, [sp, #28]
   118a4:	mov	r6, r1
   118a8:	mov	r1, r7
   118ac:	mov	r2, #256	; 0x100
   118b0:	ldr	r3, [r0]
   118b4:	mov	r0, r4
   118b8:	bl	18d0 <fread@plt>
   118bc:	mov	r1, #0
   118c0:	mov	r2, r4
   118c4:	vld1.64	{d16-d17}, [r2]!
   118c8:	add	r3, r9, r1
   118cc:	add	r1, r1, #4
   118d0:	cmp	r1, #512	; 0x200
   118d4:	vmovn.i64	d16, q8
   118d8:	vuzp.16	d16, d17
   118dc:	vst1.32	{d16[0]}, [r3]
   118e0:	bne	118c4 <ReadUInt16Data+0x14b0>
   118e4:	add	r5, r0, r5
   118e8:	add	r0, r8, #256	; 0x100
   118ec:	add	r9, r9, #512	; 0x200
   118f0:	add	r1, r6, #512	; 0x200
   118f4:	cmp	r0, sl
   118f8:	blt	1189c <ReadUInt16Data+0x1488>
   118fc:	mov	r9, r5
   11900:	ldr	r5, [sp, #8]
   11904:	cmp	r0, r5
   11908:	bge	11954 <ReadUInt16Data+0x1540>
   1190c:	mov	r1, r7
   11910:	sub	r7, r5, r0
   11914:	ldr	r0, [sp, #28]
   11918:	add	r4, sp, #48	; 0x30
   1191c:	mov	r2, r7
   11920:	ldr	r3, [r0]
   11924:	mov	r0, r4
   11928:	bl	18d0 <fread@plt>
   1192c:	add	r9, r0, r9
   11930:	cmp	r7, #1
   11934:	blt	11950 <ReadUInt16Data+0x153c>
   11938:	sub	r0, r5, r8
   1193c:	sub	r0, r0, #256	; 0x100
   11940:	ldrh	r1, [r4], #8
   11944:	subs	r0, r0, #1
   11948:	strh	r1, [r6], #2
   1194c:	bne	11940 <ReadUInt16Data+0x152c>
   11950:	ldr	r7, [sp, #24]
   11954:	mov	r5, r9
   11958:	mul	r0, r5, r7
   1195c:	b	1043c <ReadUInt16Data+0x28>

00011960 <ReadCompressedUInt16Data>:
   11960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11964:	add	fp, sp, #28
   11968:	sub	sp, sp, #12
   1196c:	mov	r7, r0
   11970:	mov	r0, #0
   11974:	cmp	r1, #0
   11978:	beq	11e80 <ReadCompressedUInt16Data+0x520>
   1197c:	cmp	r7, #0
   11980:	movne	r5, r2
   11984:	cmpne	r2, #0
   11988:	beq	11e80 <ReadCompressedUInt16Data+0x520>
   1198c:	ldr	sl, [fp, #8]
   11990:	mov	r0, r3
   11994:	mov	r4, r3
   11998:	mov	r6, r1
   1199c:	bl	193c <Mat_SizeOf@plt>
   119a0:	mov	r9, r0
   119a4:	sub	r0, r4, #1
   119a8:	cmp	r0, #12
   119ac:	bhi	11e7c <ReadCompressedUInt16Data+0x51c>
   119b0:	add	r1, pc, #4
   119b4:	ldr	r0, [r1, r0, lsl #2]
   119b8:	add	pc, r1, r0
   119bc:	.word	0x00000034
   119c0:	.word	0x0000006c
   119c4:	.word	0x000000a4
   119c8:	.word	0x000000ec
   119cc:	.word	0x00000134
   119d0:	.word	0x0000017c
   119d4:	.word	0x000001c4
   119d8:	.word	0x000004c0
   119dc:	.word	0x00000214
   119e0:	.word	0x000004c0
   119e4:	.word	0x000004c0
   119e8:	.word	0x00000264
   119ec:	.word	0x000002ac
   119f0:	cmp	sl, #1
   119f4:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   119f8:	mov	r8, sp
   119fc:	mov	r4, sl
   11a00:	mov	r0, r7
   11a04:	mov	r1, r6
   11a08:	mov	r2, r8
   11a0c:	mov	r3, r9
   11a10:	bl	31dc <InflateData>
   11a14:	ldrsb	r0, [sp]
   11a18:	subs	r4, r4, #1
   11a1c:	strh	r0, [r5], #2
   11a20:	bne	11a00 <ReadCompressedUInt16Data+0xa0>
   11a24:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11a28:	cmp	sl, #1
   11a2c:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11a30:	mov	r8, sp
   11a34:	mov	r4, sl
   11a38:	mov	r0, r7
   11a3c:	mov	r1, r6
   11a40:	mov	r2, r8
   11a44:	mov	r3, r9
   11a48:	bl	31dc <InflateData>
   11a4c:	ldrb	r0, [sp]
   11a50:	subs	r4, r4, #1
   11a54:	strh	r0, [r5], #2
   11a58:	bne	11a38 <ReadCompressedUInt16Data+0xd8>
   11a5c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11a60:	ldr	r0, [r7, #20]
   11a64:	cmp	r0, #0
   11a68:	beq	11cb0 <ReadCompressedUInt16Data+0x350>
   11a6c:	cmp	sl, #1
   11a70:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11a74:	mov	r8, sp
   11a78:	mov	r4, sl
   11a7c:	mov	r0, r7
   11a80:	mov	r1, r6
   11a84:	mov	r2, r8
   11a88:	mov	r3, r9
   11a8c:	bl	31dc <InflateData>
   11a90:	mov	r0, r8
   11a94:	bl	1c58 <Mat_int16Swap>
   11a98:	strh	r0, [r5], #2
   11a9c:	subs	r4, r4, #1
   11aa0:	bne	11a7c <ReadCompressedUInt16Data+0x11c>
   11aa4:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11aa8:	ldr	r0, [r7, #20]
   11aac:	cmp	r0, #0
   11ab0:	beq	11ce8 <ReadCompressedUInt16Data+0x388>
   11ab4:	cmp	sl, #1
   11ab8:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11abc:	mov	r8, sp
   11ac0:	mov	r4, sl
   11ac4:	mov	r0, r7
   11ac8:	mov	r1, r6
   11acc:	mov	r2, r8
   11ad0:	mov	r3, r9
   11ad4:	bl	31dc <InflateData>
   11ad8:	mov	r0, r8
   11adc:	bl	1c6c <Mat_uint16Swap>
   11ae0:	strh	r0, [r5], #2
   11ae4:	subs	r4, r4, #1
   11ae8:	bne	11ac4 <ReadCompressedUInt16Data+0x164>
   11aec:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11af0:	ldr	r0, [r7, #20]
   11af4:	cmp	r0, #0
   11af8:	beq	11d20 <ReadCompressedUInt16Data+0x3c0>
   11afc:	cmp	sl, #1
   11b00:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11b04:	mov	r8, sp
   11b08:	mov	r4, sl
   11b0c:	mov	r0, r7
   11b10:	mov	r1, r6
   11b14:	mov	r2, r8
   11b18:	mov	r3, r9
   11b1c:	bl	31dc <InflateData>
   11b20:	mov	r0, r8
   11b24:	bl	1c30 <Mat_int32Swap>
   11b28:	strh	r0, [r5], #2
   11b2c:	subs	r4, r4, #1
   11b30:	bne	11b0c <ReadCompressedUInt16Data+0x1ac>
   11b34:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11b38:	ldr	r0, [r7, #20]
   11b3c:	cmp	r0, #0
   11b40:	beq	11d58 <ReadCompressedUInt16Data+0x3f8>
   11b44:	cmp	sl, #1
   11b48:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11b4c:	mov	r8, sp
   11b50:	mov	r4, sl
   11b54:	mov	r0, r7
   11b58:	mov	r1, r6
   11b5c:	mov	r2, r8
   11b60:	mov	r3, r9
   11b64:	bl	31dc <InflateData>
   11b68:	mov	r0, r8
   11b6c:	bl	1c44 <Mat_uint32Swap>
   11b70:	strh	r0, [r5], #2
   11b74:	subs	r4, r4, #1
   11b78:	bne	11b54 <ReadCompressedUInt16Data+0x1f4>
   11b7c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11b80:	ldr	r0, [r7, #20]
   11b84:	cmp	r0, #0
   11b88:	beq	11d90 <ReadCompressedUInt16Data+0x430>
   11b8c:	cmp	sl, #1
   11b90:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11b94:	mov	r8, sp
   11b98:	mov	r4, sl
   11b9c:	mov	r0, r7
   11ba0:	mov	r1, r6
   11ba4:	mov	r2, r8
   11ba8:	mov	r3, r9
   11bac:	bl	31dc <InflateData>
   11bb0:	mov	r0, r8
   11bb4:	bl	1c84 <Mat_floatSwap>
   11bb8:	vcvt.u32.f32	s0, s0
   11bbc:	subs	r4, r4, #1
   11bc0:	vmov	r0, s0
   11bc4:	strh	r0, [r5], #2
   11bc8:	bne	11b9c <ReadCompressedUInt16Data+0x23c>
   11bcc:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11bd0:	ldr	r0, [r7, #20]
   11bd4:	cmp	r0, #0
   11bd8:	beq	11dd0 <ReadCompressedUInt16Data+0x470>
   11bdc:	cmp	sl, #1
   11be0:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11be4:	mov	r8, sp
   11be8:	mov	r4, sl
   11bec:	mov	r0, r7
   11bf0:	mov	r1, r6
   11bf4:	mov	r2, r8
   11bf8:	mov	r3, r9
   11bfc:	bl	31dc <InflateData>
   11c00:	mov	r0, r8
   11c04:	bl	1cc8 <Mat_doubleSwap>
   11c08:	vcvt.u32.f64	s0, d0
   11c0c:	subs	r4, r4, #1
   11c10:	vmov	r0, s0
   11c14:	strh	r0, [r5], #2
   11c18:	bne	11bec <ReadCompressedUInt16Data+0x28c>
   11c1c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11c20:	ldr	r0, [r7, #20]
   11c24:	cmp	r0, #0
   11c28:	beq	11e10 <ReadCompressedUInt16Data+0x4b0>
   11c2c:	cmp	sl, #1
   11c30:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11c34:	mov	r8, sp
   11c38:	mov	r4, sl
   11c3c:	mov	r0, r7
   11c40:	mov	r1, r6
   11c44:	mov	r2, r8
   11c48:	mov	r3, r9
   11c4c:	bl	31dc <InflateData>
   11c50:	mov	r0, r8
   11c54:	bl	1bbc <Mat_int64Swap>
   11c58:	strh	r0, [r5], #2
   11c5c:	subs	r4, r4, #1
   11c60:	bne	11c3c <ReadCompressedUInt16Data+0x2dc>
   11c64:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11c68:	ldr	r0, [r7, #20]
   11c6c:	cmp	r0, #0
   11c70:	beq	11e48 <ReadCompressedUInt16Data+0x4e8>
   11c74:	cmp	sl, #1
   11c78:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11c7c:	mov	r8, sp
   11c80:	mov	r4, sl
   11c84:	mov	r0, r7
   11c88:	mov	r1, r6
   11c8c:	mov	r2, r8
   11c90:	mov	r3, r9
   11c94:	bl	31dc <InflateData>
   11c98:	mov	r0, r8
   11c9c:	bl	1c0c <Mat_uint64Swap>
   11ca0:	strh	r0, [r5], #2
   11ca4:	subs	r4, r4, #1
   11ca8:	bne	11c84 <ReadCompressedUInt16Data+0x324>
   11cac:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11cb0:	cmp	sl, #1
   11cb4:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11cb8:	mov	r8, sp
   11cbc:	mov	r4, sl
   11cc0:	mov	r0, r7
   11cc4:	mov	r1, r6
   11cc8:	mov	r2, r8
   11ccc:	mov	r3, r9
   11cd0:	bl	31dc <InflateData>
   11cd4:	ldrh	r0, [sp]
   11cd8:	subs	r4, r4, #1
   11cdc:	strh	r0, [r5], #2
   11ce0:	bne	11cc0 <ReadCompressedUInt16Data+0x360>
   11ce4:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11ce8:	cmp	sl, #1
   11cec:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11cf0:	mov	r8, sp
   11cf4:	mov	r4, sl
   11cf8:	mov	r0, r7
   11cfc:	mov	r1, r6
   11d00:	mov	r2, r8
   11d04:	mov	r3, r9
   11d08:	bl	31dc <InflateData>
   11d0c:	ldrh	r0, [sp]
   11d10:	subs	r4, r4, #1
   11d14:	strh	r0, [r5], #2
   11d18:	bne	11cf8 <ReadCompressedUInt16Data+0x398>
   11d1c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11d20:	cmp	sl, #1
   11d24:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11d28:	mov	r8, sp
   11d2c:	mov	r4, sl
   11d30:	mov	r0, r7
   11d34:	mov	r1, r6
   11d38:	mov	r2, r8
   11d3c:	mov	r3, r9
   11d40:	bl	31dc <InflateData>
   11d44:	ldr	r0, [sp]
   11d48:	subs	r4, r4, #1
   11d4c:	strh	r0, [r5], #2
   11d50:	bne	11d30 <ReadCompressedUInt16Data+0x3d0>
   11d54:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11d58:	cmp	sl, #1
   11d5c:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11d60:	mov	r8, sp
   11d64:	mov	r4, sl
   11d68:	mov	r0, r7
   11d6c:	mov	r1, r6
   11d70:	mov	r2, r8
   11d74:	mov	r3, r9
   11d78:	bl	31dc <InflateData>
   11d7c:	ldr	r0, [sp]
   11d80:	subs	r4, r4, #1
   11d84:	strh	r0, [r5], #2
   11d88:	bne	11d68 <ReadCompressedUInt16Data+0x408>
   11d8c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11d90:	cmp	sl, #1
   11d94:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11d98:	mov	r8, sp
   11d9c:	mov	r4, sl
   11da0:	mov	r0, r7
   11da4:	mov	r1, r6
   11da8:	mov	r2, r8
   11dac:	mov	r3, r9
   11db0:	bl	31dc <InflateData>
   11db4:	vldr	s0, [sp]
   11db8:	subs	r4, r4, #1
   11dbc:	vcvt.u32.f32	s0, s0
   11dc0:	vmov	r0, s0
   11dc4:	strh	r0, [r5], #2
   11dc8:	bne	11da0 <ReadCompressedUInt16Data+0x440>
   11dcc:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11dd0:	cmp	sl, #1
   11dd4:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11dd8:	mov	r8, sp
   11ddc:	mov	r4, sl
   11de0:	mov	r0, r7
   11de4:	mov	r1, r6
   11de8:	mov	r2, r8
   11dec:	mov	r3, r9
   11df0:	bl	31dc <InflateData>
   11df4:	vldr	d16, [sp]
   11df8:	subs	r4, r4, #1
   11dfc:	vcvt.u32.f64	s0, d16
   11e00:	vmov	r0, s0
   11e04:	strh	r0, [r5], #2
   11e08:	bne	11de0 <ReadCompressedUInt16Data+0x480>
   11e0c:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11e10:	cmp	sl, #1
   11e14:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11e18:	mov	r8, sp
   11e1c:	mov	r4, sl
   11e20:	mov	r0, r7
   11e24:	mov	r1, r6
   11e28:	mov	r2, r8
   11e2c:	mov	r3, r9
   11e30:	bl	31dc <InflateData>
   11e34:	ldrh	r0, [sp]
   11e38:	subs	r4, r4, #1
   11e3c:	strh	r0, [r5], #2
   11e40:	bne	11e20 <ReadCompressedUInt16Data+0x4c0>
   11e44:	b	11e7c <ReadCompressedUInt16Data+0x51c>
   11e48:	cmp	sl, #1
   11e4c:	blt	11e7c <ReadCompressedUInt16Data+0x51c>
   11e50:	mov	r8, sp
   11e54:	mov	r4, sl
   11e58:	mov	r0, r7
   11e5c:	mov	r1, r6
   11e60:	mov	r2, r8
   11e64:	mov	r3, r9
   11e68:	bl	31dc <InflateData>
   11e6c:	ldrh	r0, [sp]
   11e70:	subs	r4, r4, #1
   11e74:	strh	r0, [r5], #2
   11e78:	bne	11e58 <ReadCompressedUInt16Data+0x4f8>
   11e7c:	mul	r0, r9, sl
   11e80:	sub	sp, fp, #28
   11e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011e88 <ReadInt8Data>:
   11e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e8c:	add	fp, sp, #28
   11e90:	sub	sp, sp, #28
   11e94:	sub	sp, sp, #2048	; 0x800
   11e98:	mov	r4, r0
   11e9c:	mov	r0, #0
   11ea0:	cmp	r4, #0
   11ea4:	cmpne	r1, #0
   11ea8:	bne	11eb4 <ReadInt8Data+0x2c>
   11eac:	sub	sp, fp, #28
   11eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb4:	mov	r5, r2
   11eb8:	ldr	r2, [r4]
   11ebc:	cmp	r2, #0
   11ec0:	beq	11eac <ReadInt8Data+0x24>
   11ec4:	mov	r0, r5
   11ec8:	mov	r7, r3
   11ecc:	str	r1, [sp, #12]
   11ed0:	bl	193c <Mat_SizeOf@plt>
   11ed4:	mov	r2, r0
   11ed8:	sub	r0, r5, #1
   11edc:	mov	sl, #0
   11ee0:	str	r4, [sp, #20]
   11ee4:	cmp	r0, #11
   11ee8:	str	r2, [sp, #16]
   11eec:	bhi	12270 <ReadInt8Data+0x3e8>
   11ef0:	add	r1, pc, #8
   11ef4:	ldr	r6, [sp, #12]
   11ef8:	ldr	r0, [r1, r0, lsl #2]
   11efc:	add	pc, r1, r0
   11f00:	.word	0x00000030
   11f04:	.word	0x0000009c
   11f08:	.word	0x000000d8
   11f0c:	.word	0x00000134
   11f10:	.word	0x00000190
   11f14:	.word	0x000001ec
   11f18:	.word	0x00000248
   11f1c:	.word	0x0000128c
   11f20:	.word	0x000002ac
   11f24:	.word	0x0000128c
   11f28:	.word	0x0000128c
   11f2c:	.word	0x00000310
   11f30:	cmp	r7, #256	; 0x100
   11f34:	ble	11fa4 <ReadInt8Data+0x11c>
   11f38:	sub	r0, r7, #256	; 0x100
   11f3c:	str	r7, [sp, #4]
   11f40:	mov	r7, r4
   11f44:	mov	r4, #0
   11f48:	add	r8, sp, #24
   11f4c:	mov	sl, #0
   11f50:	mov	r9, r2
   11f54:	mov	r5, r6
   11f58:	str	r0, [sp, #8]
   11f5c:	ldr	r3, [r7]
   11f60:	mov	r0, r8
   11f64:	mov	r1, r9
   11f68:	mov	r2, #256	; 0x100
   11f6c:	bl	18d0 <fread@plt>
   11f70:	mov	r6, r0
   11f74:	add	r0, r5, r4
   11f78:	mov	r1, r8
   11f7c:	mov	r2, #256	; 0x100
   11f80:	bl	1834 <memcpy@plt>
   11f84:	ldr	r0, [sp, #8]
   11f88:	add	r4, r4, #256	; 0x100
   11f8c:	add	sl, r6, sl
   11f90:	cmp	r4, r0
   11f94:	blt	11f5c <ReadInt8Data+0xd4>
   11f98:	b	122d8 <ReadInt8Data+0x450>
   11f9c:	cmp	r7, #256	; 0x100
   11fa0:	bgt	12278 <ReadInt8Data+0x3f0>
   11fa4:	ldr	r3, [r4]
   11fa8:	mov	r1, r2
   11fac:	add	r0, sp, #24
   11fb0:	mov	r2, r7
   11fb4:	bl	18d0 <fread@plt>
   11fb8:	mov	sl, r0
   11fbc:	cmp	r7, #1
   11fc0:	blt	13230 <ReadInt8Data+0x13a8>
   11fc4:	ldr	r0, [sp, #12]
   11fc8:	add	r1, sp, #24
   11fcc:	mov	r2, r7
   11fd0:	bl	1834 <memcpy@plt>
   11fd4:	b	13230 <ReadInt8Data+0x13a8>
   11fd8:	ldr	r0, [r4, #20]
   11fdc:	cmp	r0, #0
   11fe0:	beq	12328 <ReadInt8Data+0x4a0>
   11fe4:	cmp	r7, #256	; 0x100
   11fe8:	bgt	12524 <ReadInt8Data+0x69c>
   11fec:	ldr	r3, [r4]
   11ff0:	add	r4, sp, #24
   11ff4:	mov	r1, r2
   11ff8:	mov	r5, r2
   11ffc:	mov	r2, r7
   12000:	mov	r0, r4
   12004:	bl	18d0 <fread@plt>
   12008:	mov	sl, r0
   1200c:	cmp	r7, #1
   12010:	blt	13318 <ReadInt8Data+0x1490>
   12014:	ldr	r5, [sp, #12]
   12018:	mov	r0, r4
   1201c:	bl	1c58 <Mat_int16Swap>
   12020:	strb	r0, [r5], #1
   12024:	add	r4, r4, #2
   12028:	subs	r7, r7, #1
   1202c:	bne	12018 <ReadInt8Data+0x190>
   12030:	b	13230 <ReadInt8Data+0x13a8>
   12034:	ldr	r0, [r4, #20]
   12038:	cmp	r0, #0
   1203c:	beq	1236c <ReadInt8Data+0x4e4>
   12040:	cmp	r7, #256	; 0x100
   12044:	bgt	1260c <ReadInt8Data+0x784>
   12048:	ldr	r3, [r4]
   1204c:	add	r4, sp, #24
   12050:	mov	r1, r2
   12054:	mov	r5, r2
   12058:	mov	r2, r7
   1205c:	mov	r0, r4
   12060:	bl	18d0 <fread@plt>
   12064:	mov	sl, r0
   12068:	cmp	r7, #1
   1206c:	blt	13318 <ReadInt8Data+0x1490>
   12070:	ldr	r5, [sp, #12]
   12074:	mov	r0, r4
   12078:	bl	1c6c <Mat_uint16Swap>
   1207c:	strb	r0, [r5], #1
   12080:	add	r4, r4, #2
   12084:	subs	r7, r7, #1
   12088:	bne	12074 <ReadInt8Data+0x1ec>
   1208c:	b	13230 <ReadInt8Data+0x13a8>
   12090:	ldr	r0, [r4, #20]
   12094:	cmp	r0, #0
   12098:	beq	123b0 <ReadInt8Data+0x528>
   1209c:	cmp	r7, #256	; 0x100
   120a0:	bgt	126f4 <ReadInt8Data+0x86c>
   120a4:	ldr	r3, [r4]
   120a8:	add	r4, sp, #24
   120ac:	mov	r1, r2
   120b0:	mov	r5, r2
   120b4:	mov	r2, r7
   120b8:	mov	r0, r4
   120bc:	bl	18d0 <fread@plt>
   120c0:	mov	sl, r0
   120c4:	cmp	r7, #1
   120c8:	blt	13318 <ReadInt8Data+0x1490>
   120cc:	ldr	r5, [sp, #12]
   120d0:	mov	r0, r4
   120d4:	bl	1c30 <Mat_int32Swap>
   120d8:	strb	r0, [r5], #1
   120dc:	add	r4, r4, #4
   120e0:	subs	r7, r7, #1
   120e4:	bne	120d0 <ReadInt8Data+0x248>
   120e8:	b	13230 <ReadInt8Data+0x13a8>
   120ec:	ldr	r0, [r4, #20]
   120f0:	cmp	r0, #0
   120f4:	beq	123f4 <ReadInt8Data+0x56c>
   120f8:	cmp	r7, #256	; 0x100
   120fc:	bgt	127dc <ReadInt8Data+0x954>
   12100:	ldr	r3, [r4]
   12104:	add	r4, sp, #24
   12108:	mov	r1, r2
   1210c:	mov	r5, r2
   12110:	mov	r2, r7
   12114:	mov	r0, r4
   12118:	bl	18d0 <fread@plt>
   1211c:	mov	sl, r0
   12120:	cmp	r7, #1
   12124:	blt	13318 <ReadInt8Data+0x1490>
   12128:	ldr	r5, [sp, #12]
   1212c:	mov	r0, r4
   12130:	bl	1c44 <Mat_uint32Swap>
   12134:	strb	r0, [r5], #1
   12138:	add	r4, r4, #4
   1213c:	subs	r7, r7, #1
   12140:	bne	1212c <ReadInt8Data+0x2a4>
   12144:	b	13230 <ReadInt8Data+0x13a8>
   12148:	ldr	r0, [r4, #20]
   1214c:	cmp	r0, #0
   12150:	beq	12438 <ReadInt8Data+0x5b0>
   12154:	cmp	r7, #256	; 0x100
   12158:	bgt	128c4 <ReadInt8Data+0xa3c>
   1215c:	ldr	r3, [r4]
   12160:	add	r4, sp, #24
   12164:	mov	r1, r2
   12168:	mov	r5, r2
   1216c:	mov	r2, r7
   12170:	mov	r0, r4
   12174:	bl	18d0 <fread@plt>
   12178:	mov	sl, r0
   1217c:	cmp	r7, #1
   12180:	blt	13318 <ReadInt8Data+0x1490>
   12184:	ldr	r5, [sp, #12]
   12188:	mov	r0, r4
   1218c:	bl	1c84 <Mat_floatSwap>
   12190:	vcvt.s32.f32	s0, s0
   12194:	add	r4, r4, #4
   12198:	subs	r7, r7, #1
   1219c:	vmov	r0, s0
   121a0:	strb	r0, [r5], #1
   121a4:	bne	12188 <ReadInt8Data+0x300>
   121a8:	b	13230 <ReadInt8Data+0x13a8>
   121ac:	ldr	r0, [r4, #20]
   121b0:	cmp	r0, #0
   121b4:	beq	12488 <ReadInt8Data+0x600>
   121b8:	cmp	r7, #256	; 0x100
   121bc:	bgt	129bc <ReadInt8Data+0xb34>
   121c0:	ldr	r3, [r4]
   121c4:	add	r4, sp, #24
   121c8:	mov	r1, r2
   121cc:	mov	r5, r2
   121d0:	mov	r2, r7
   121d4:	mov	r0, r4
   121d8:	bl	18d0 <fread@plt>
   121dc:	mov	sl, r0
   121e0:	cmp	r7, #1
   121e4:	blt	13318 <ReadInt8Data+0x1490>
   121e8:	ldr	r5, [sp, #12]
   121ec:	mov	r0, r4
   121f0:	bl	1cc8 <Mat_doubleSwap>
   121f4:	vcvt.s32.f64	s0, d0
   121f8:	add	r4, r4, #8
   121fc:	subs	r7, r7, #1
   12200:	vmov	r0, s0
   12204:	strb	r0, [r5], #1
   12208:	bne	121ec <ReadInt8Data+0x364>
   1220c:	b	13230 <ReadInt8Data+0x13a8>
   12210:	ldr	r0, [r4, #20]
   12214:	cmp	r0, #0
   12218:	beq	124d8 <ReadInt8Data+0x650>
   1221c:	cmp	r7, #256	; 0x100
   12220:	bgt	12ab4 <ReadInt8Data+0xc2c>
   12224:	ldr	r3, [r4]
   12228:	add	r4, sp, #24
   1222c:	mov	r1, r2
   12230:	mov	r2, r7
   12234:	mov	r0, r4
   12238:	bl	18d0 <fread@plt>
   1223c:	mov	sl, r0
   12240:	cmp	r7, #1
   12244:	blt	1314c <ReadInt8Data+0x12c4>
   12248:	ldr	r6, [sp, #12]
   1224c:	mov	r8, r7
   12250:	mov	r0, r4
   12254:	bl	1bbc <Mat_int64Swap>
   12258:	strb	r0, [r6], #1
   1225c:	add	r4, r4, #8
   12260:	subs	r7, r7, #1
   12264:	bne	12250 <ReadInt8Data+0x3c8>
   12268:	mov	r7, r8
   1226c:	b	1314c <ReadInt8Data+0x12c4>
   12270:	ldr	r6, [sp, #12]
   12274:	b	1318c <ReadInt8Data+0x1304>
   12278:	sub	r0, r7, #256	; 0x100
   1227c:	str	r7, [sp, #4]
   12280:	mov	r7, r4
   12284:	mov	r4, #0
   12288:	add	r8, sp, #24
   1228c:	mov	sl, #0
   12290:	mov	r9, r2
   12294:	mov	r5, r6
   12298:	str	r0, [sp, #8]
   1229c:	ldr	r3, [r7]
   122a0:	mov	r0, r8
   122a4:	mov	r1, r9
   122a8:	mov	r2, #256	; 0x100
   122ac:	bl	18d0 <fread@plt>
   122b0:	mov	r6, r0
   122b4:	add	r0, r5, r4
   122b8:	mov	r1, r8
   122bc:	mov	r2, #256	; 0x100
   122c0:	bl	1834 <memcpy@plt>
   122c4:	ldr	r0, [sp, #8]
   122c8:	add	r4, r4, #256	; 0x100
   122cc:	add	sl, r6, sl
   122d0:	cmp	r4, r0
   122d4:	blt	1229c <ReadInt8Data+0x414>
   122d8:	ldr	r9, [sp, #4]
   122dc:	cmp	r4, r9
   122e0:	bge	13230 <ReadInt8Data+0x13a8>
   122e4:	ldr	r0, [sp, #20]
   122e8:	ldr	r1, [sp, #16]
   122ec:	sub	r6, r9, r4
   122f0:	mov	r2, r6
   122f4:	ldr	r3, [r0]
   122f8:	add	r0, sp, #24
   122fc:	mov	r5, r1
   12300:	bl	18d0 <fread@plt>
   12304:	add	sl, r0, sl
   12308:	cmp	r6, #1
   1230c:	blt	13318 <ReadInt8Data+0x1490>
   12310:	ldr	r0, [sp, #12]
   12314:	add	r1, sp, #24
   12318:	mov	r2, r6
   1231c:	add	r0, r0, r4
   12320:	bl	1834 <memcpy@plt>
   12324:	b	13318 <ReadInt8Data+0x1490>
   12328:	cmp	r7, #256	; 0x100
   1232c:	bgt	12b94 <ReadInt8Data+0xd0c>
   12330:	ldr	r3, [r4]
   12334:	add	r4, sp, #24
   12338:	mov	r1, r2
   1233c:	mov	r2, r7
   12340:	mov	r0, r4
   12344:	bl	18d0 <fread@plt>
   12348:	mov	sl, r0
   1234c:	cmp	r7, #1
   12350:	blt	13230 <ReadInt8Data+0x13a8>
   12354:	ldr	r1, [sp, #12]
   12358:	ldrb	r0, [r4], #2
   1235c:	subs	r7, r7, #1
   12360:	strb	r0, [r1], #1
   12364:	bne	12358 <ReadInt8Data+0x4d0>
   12368:	b	13230 <ReadInt8Data+0x13a8>
   1236c:	cmp	r7, #256	; 0x100
   12370:	bgt	12c58 <ReadInt8Data+0xdd0>
   12374:	ldr	r3, [r4]
   12378:	add	r4, sp, #24
   1237c:	mov	r1, r2
   12380:	mov	r2, r7
   12384:	mov	r0, r4
   12388:	bl	18d0 <fread@plt>
   1238c:	mov	sl, r0
   12390:	cmp	r7, #1
   12394:	blt	13230 <ReadInt8Data+0x13a8>
   12398:	ldr	r1, [sp, #12]
   1239c:	ldrb	r0, [r4], #2
   123a0:	subs	r7, r7, #1
   123a4:	strb	r0, [r1], #1
   123a8:	bne	1239c <ReadInt8Data+0x514>
   123ac:	b	13230 <ReadInt8Data+0x13a8>
   123b0:	cmp	r7, #256	; 0x100
   123b4:	bgt	12d1c <ReadInt8Data+0xe94>
   123b8:	ldr	r3, [r4]
   123bc:	add	r4, sp, #24
   123c0:	mov	r1, r2
   123c4:	mov	r2, r7
   123c8:	mov	r0, r4
   123cc:	bl	18d0 <fread@plt>
   123d0:	mov	sl, r0
   123d4:	cmp	r7, #1
   123d8:	blt	13230 <ReadInt8Data+0x13a8>
   123dc:	ldr	r1, [sp, #12]
   123e0:	ldr	r0, [r4], #4
   123e4:	subs	r7, r7, #1
   123e8:	strb	r0, [r1], #1
   123ec:	bne	123e0 <ReadInt8Data+0x558>
   123f0:	b	13230 <ReadInt8Data+0x13a8>
   123f4:	cmp	r7, #256	; 0x100
   123f8:	bgt	12de4 <ReadInt8Data+0xf5c>
   123fc:	ldr	r3, [r4]
   12400:	add	r4, sp, #24
   12404:	mov	r1, r2
   12408:	mov	r2, r7
   1240c:	mov	r0, r4
   12410:	bl	18d0 <fread@plt>
   12414:	mov	sl, r0
   12418:	cmp	r7, #1
   1241c:	blt	13230 <ReadInt8Data+0x13a8>
   12420:	ldr	r1, [sp, #12]
   12424:	ldr	r0, [r4], #4
   12428:	subs	r7, r7, #1
   1242c:	strb	r0, [r1], #1
   12430:	bne	12424 <ReadInt8Data+0x59c>
   12434:	b	13230 <ReadInt8Data+0x13a8>
   12438:	cmp	r7, #256	; 0x100
   1243c:	bgt	12eac <ReadInt8Data+0x1024>
   12440:	ldr	r3, [r4]
   12444:	add	r4, sp, #24
   12448:	mov	r1, r2
   1244c:	mov	r2, r7
   12450:	mov	r0, r4
   12454:	bl	18d0 <fread@plt>
   12458:	mov	sl, r0
   1245c:	cmp	r7, #1
   12460:	blt	13230 <ReadInt8Data+0x13a8>
   12464:	ldr	r1, [sp, #12]
   12468:	vldr	s0, [r4]
   1246c:	add	r4, r4, #4
   12470:	subs	r7, r7, #1
   12474:	vcvt.s32.f32	s0, s0
   12478:	vmov	r0, s0
   1247c:	strb	r0, [r1], #1
   12480:	bne	12468 <ReadInt8Data+0x5e0>
   12484:	b	13230 <ReadInt8Data+0x13a8>
   12488:	cmp	r7, #256	; 0x100
   1248c:	bgt	12f84 <ReadInt8Data+0x10fc>
   12490:	ldr	r3, [r4]
   12494:	add	r4, sp, #24
   12498:	mov	r1, r2
   1249c:	mov	r2, r7
   124a0:	mov	r0, r4
   124a4:	bl	18d0 <fread@plt>
   124a8:	mov	sl, r0
   124ac:	cmp	r7, #1
   124b0:	blt	13230 <ReadInt8Data+0x13a8>
   124b4:	ldr	r1, [sp, #12]
   124b8:	vldr	d16, [r4]
   124bc:	add	r4, r4, #8
   124c0:	subs	r7, r7, #1
   124c4:	vcvt.s32.f64	s0, d16
   124c8:	vmov	r0, s0
   124cc:	strb	r0, [r1], #1
   124d0:	bne	124b8 <ReadInt8Data+0x630>
   124d4:	b	13230 <ReadInt8Data+0x13a8>
   124d8:	cmp	r7, #256	; 0x100
   124dc:	bgt	13058 <ReadInt8Data+0x11d0>
   124e0:	ldr	r3, [r4]
   124e4:	add	r4, sp, #24
   124e8:	mov	r1, r2
   124ec:	mov	r2, r7
   124f0:	mov	r0, r4
   124f4:	bl	18d0 <fread@plt>
   124f8:	mov	sl, r0
   124fc:	cmp	r7, #1
   12500:	blt	1314c <ReadInt8Data+0x12c4>
   12504:	ldr	r6, [sp, #12]
   12508:	mov	r1, r7
   1250c:	mov	r0, r6
   12510:	ldrb	r2, [r4], #8
   12514:	subs	r1, r1, #1
   12518:	strb	r2, [r0], #1
   1251c:	bne	12510 <ReadInt8Data+0x688>
   12520:	b	13150 <ReadInt8Data+0x12c8>
   12524:	sub	r0, r7, #256	; 0x100
   12528:	add	r1, r6, #256	; 0x100
   1252c:	mov	sl, #0
   12530:	str	r7, [sp, #4]
   12534:	str	r0, [sp, #8]
   12538:	mov	r0, #0
   1253c:	ldr	r3, [r4]
   12540:	add	r7, sp, #24
   12544:	mov	r8, r0
   12548:	mov	r9, r1
   1254c:	mov	r1, r2
   12550:	mov	r2, #256	; 0x100
   12554:	mov	r5, r6
   12558:	mov	r0, r7
   1255c:	bl	18d0 <fread@plt>
   12560:	mov	r6, r7
   12564:	mov	r4, r0
   12568:	mov	r7, #0
   1256c:	mov	r0, r6
   12570:	bl	1c58 <Mat_int16Swap>
   12574:	strb	r0, [r5, r7]
   12578:	add	r7, r7, #1
   1257c:	add	r6, r6, #2
   12580:	cmp	r7, #256	; 0x100
   12584:	bne	1256c <ReadInt8Data+0x6e4>
   12588:	ldr	r2, [sp, #8]
   1258c:	add	r0, r8, #256	; 0x100
   12590:	add	sl, r4, sl
   12594:	ldr	r4, [sp, #20]
   12598:	add	r5, r5, #256	; 0x100
   1259c:	add	r1, r9, #256	; 0x100
   125a0:	mov	r6, r5
   125a4:	cmp	r0, r2
   125a8:	ldr	r2, [sp, #16]
   125ac:	blt	1253c <ReadInt8Data+0x6b4>
   125b0:	ldr	r7, [sp, #4]
   125b4:	cmp	r0, r7
   125b8:	bge	1331c <ReadInt8Data+0x1494>
   125bc:	ldr	r3, [r4]
   125c0:	sub	r6, r7, r0
   125c4:	add	r4, sp, #24
   125c8:	mov	r5, r2
   125cc:	mov	r1, r2
   125d0:	mov	r0, r4
   125d4:	mov	r2, r6
   125d8:	bl	18d0 <fread@plt>
   125dc:	add	sl, r0, sl
   125e0:	cmp	r6, #1
   125e4:	blt	13318 <ReadInt8Data+0x1490>
   125e8:	sub	r0, r7, r8
   125ec:	sub	r6, r0, #256	; 0x100
   125f0:	mov	r0, r4
   125f4:	bl	1c58 <Mat_int16Swap>
   125f8:	strb	r0, [r9], #1
   125fc:	add	r4, r4, #2
   12600:	subs	r6, r6, #1
   12604:	bne	125f0 <ReadInt8Data+0x768>
   12608:	b	13318 <ReadInt8Data+0x1490>
   1260c:	sub	r0, r7, #256	; 0x100
   12610:	add	r1, r6, #256	; 0x100
   12614:	mov	sl, #0
   12618:	str	r7, [sp, #4]
   1261c:	str	r0, [sp, #8]
   12620:	mov	r0, #0
   12624:	ldr	r3, [r4]
   12628:	add	r7, sp, #24
   1262c:	mov	r8, r0
   12630:	mov	r9, r1
   12634:	mov	r1, r2
   12638:	mov	r2, #256	; 0x100
   1263c:	mov	r5, r6
   12640:	mov	r0, r7
   12644:	bl	18d0 <fread@plt>
   12648:	mov	r6, r7
   1264c:	mov	r4, r0
   12650:	mov	r7, #0
   12654:	mov	r0, r6
   12658:	bl	1c6c <Mat_uint16Swap>
   1265c:	strb	r0, [r5, r7]
   12660:	add	r7, r7, #1
   12664:	add	r6, r6, #2
   12668:	cmp	r7, #256	; 0x100
   1266c:	bne	12654 <ReadInt8Data+0x7cc>
   12670:	ldr	r2, [sp, #8]
   12674:	add	r0, r8, #256	; 0x100
   12678:	add	sl, r4, sl
   1267c:	ldr	r4, [sp, #20]
   12680:	add	r5, r5, #256	; 0x100
   12684:	add	r1, r9, #256	; 0x100
   12688:	mov	r6, r5
   1268c:	cmp	r0, r2
   12690:	ldr	r2, [sp, #16]
   12694:	blt	12624 <ReadInt8Data+0x79c>
   12698:	ldr	r7, [sp, #4]
   1269c:	cmp	r0, r7
   126a0:	bge	1331c <ReadInt8Data+0x1494>
   126a4:	ldr	r3, [r4]
   126a8:	sub	r6, r7, r0
   126ac:	add	r4, sp, #24
   126b0:	mov	r5, r2
   126b4:	mov	r1, r2
   126b8:	mov	r0, r4
   126bc:	mov	r2, r6
   126c0:	bl	18d0 <fread@plt>
   126c4:	add	sl, r0, sl
   126c8:	cmp	r6, #1
   126cc:	blt	13318 <ReadInt8Data+0x1490>
   126d0:	sub	r0, r7, r8
   126d4:	sub	r6, r0, #256	; 0x100
   126d8:	mov	r0, r4
   126dc:	bl	1c6c <Mat_uint16Swap>
   126e0:	strb	r0, [r9], #1
   126e4:	add	r4, r4, #2
   126e8:	subs	r6, r6, #1
   126ec:	bne	126d8 <ReadInt8Data+0x850>
   126f0:	b	13318 <ReadInt8Data+0x1490>
   126f4:	sub	r0, r7, #256	; 0x100
   126f8:	add	r1, r6, #256	; 0x100
   126fc:	mov	sl, #0
   12700:	str	r7, [sp, #4]
   12704:	str	r0, [sp, #8]
   12708:	mov	r0, #0
   1270c:	ldr	r3, [r4]
   12710:	add	r7, sp, #24
   12714:	mov	r8, r0
   12718:	mov	r9, r1
   1271c:	mov	r1, r2
   12720:	mov	r2, #256	; 0x100
   12724:	mov	r5, r6
   12728:	mov	r0, r7
   1272c:	bl	18d0 <fread@plt>
   12730:	mov	r6, r7
   12734:	mov	r4, r0
   12738:	mov	r7, #0
   1273c:	mov	r0, r6
   12740:	bl	1c30 <Mat_int32Swap>
   12744:	strb	r0, [r5, r7]
   12748:	add	r7, r7, #1
   1274c:	add	r6, r6, #4
   12750:	cmp	r7, #256	; 0x100
   12754:	bne	1273c <ReadInt8Data+0x8b4>
   12758:	ldr	r2, [sp, #8]
   1275c:	add	r0, r8, #256	; 0x100
   12760:	add	sl, r4, sl
   12764:	ldr	r4, [sp, #20]
   12768:	add	r5, r5, #256	; 0x100
   1276c:	add	r1, r9, #256	; 0x100
   12770:	mov	r6, r5
   12774:	cmp	r0, r2
   12778:	ldr	r2, [sp, #16]
   1277c:	blt	1270c <ReadInt8Data+0x884>
   12780:	ldr	r7, [sp, #4]
   12784:	cmp	r0, r7
   12788:	bge	1331c <ReadInt8Data+0x1494>
   1278c:	ldr	r3, [r4]
   12790:	sub	r6, r7, r0
   12794:	add	r4, sp, #24
   12798:	mov	r5, r2
   1279c:	mov	r1, r2
   127a0:	mov	r0, r4
   127a4:	mov	r2, r6
   127a8:	bl	18d0 <fread@plt>
   127ac:	add	sl, r0, sl
   127b0:	cmp	r6, #1
   127b4:	blt	13318 <ReadInt8Data+0x1490>
   127b8:	sub	r0, r7, r8
   127bc:	sub	r6, r0, #256	; 0x100
   127c0:	mov	r0, r4
   127c4:	bl	1c30 <Mat_int32Swap>
   127c8:	strb	r0, [r9], #1
   127cc:	add	r4, r4, #4
   127d0:	subs	r6, r6, #1
   127d4:	bne	127c0 <ReadInt8Data+0x938>
   127d8:	b	13318 <ReadInt8Data+0x1490>
   127dc:	sub	r0, r7, #256	; 0x100
   127e0:	add	r1, r6, #256	; 0x100
   127e4:	mov	sl, #0
   127e8:	str	r7, [sp, #4]
   127ec:	str	r0, [sp, #8]
   127f0:	mov	r0, #0
   127f4:	ldr	r3, [r4]
   127f8:	add	r7, sp, #24
   127fc:	mov	r8, r0
   12800:	mov	r9, r1
   12804:	mov	r1, r2
   12808:	mov	r2, #256	; 0x100
   1280c:	mov	r5, r6
   12810:	mov	r0, r7
   12814:	bl	18d0 <fread@plt>
   12818:	mov	r6, r7
   1281c:	mov	r4, r0
   12820:	mov	r7, #0
   12824:	mov	r0, r6
   12828:	bl	1c44 <Mat_uint32Swap>
   1282c:	strb	r0, [r5, r7]
   12830:	add	r7, r7, #1
   12834:	add	r6, r6, #4
   12838:	cmp	r7, #256	; 0x100
   1283c:	bne	12824 <ReadInt8Data+0x99c>
   12840:	ldr	r2, [sp, #8]
   12844:	add	r0, r8, #256	; 0x100
   12848:	add	sl, r4, sl
   1284c:	ldr	r4, [sp, #20]
   12850:	add	r5, r5, #256	; 0x100
   12854:	add	r1, r9, #256	; 0x100
   12858:	mov	r6, r5
   1285c:	cmp	r0, r2
   12860:	ldr	r2, [sp, #16]
   12864:	blt	127f4 <ReadInt8Data+0x96c>
   12868:	ldr	r7, [sp, #4]
   1286c:	cmp	r0, r7
   12870:	bge	1331c <ReadInt8Data+0x1494>
   12874:	ldr	r3, [r4]
   12878:	sub	r6, r7, r0
   1287c:	add	r4, sp, #24
   12880:	mov	r5, r2
   12884:	mov	r1, r2
   12888:	mov	r0, r4
   1288c:	mov	r2, r6
   12890:	bl	18d0 <fread@plt>
   12894:	add	sl, r0, sl
   12898:	cmp	r6, #1
   1289c:	blt	13318 <ReadInt8Data+0x1490>
   128a0:	sub	r0, r7, r8
   128a4:	sub	r6, r0, #256	; 0x100
   128a8:	mov	r0, r4
   128ac:	bl	1c44 <Mat_uint32Swap>
   128b0:	strb	r0, [r9], #1
   128b4:	add	r4, r4, #4
   128b8:	subs	r6, r6, #1
   128bc:	bne	128a8 <ReadInt8Data+0xa20>
   128c0:	b	13318 <ReadInt8Data+0x1490>
   128c4:	sub	r0, r7, #256	; 0x100
   128c8:	add	r1, r6, #256	; 0x100
   128cc:	mov	sl, #0
   128d0:	str	r7, [sp, #4]
   128d4:	str	r0, [sp, #8]
   128d8:	mov	r0, #0
   128dc:	ldr	r3, [r4]
   128e0:	add	r7, sp, #24
   128e4:	mov	r8, r0
   128e8:	mov	r9, r1
   128ec:	mov	r1, r2
   128f0:	mov	r2, #256	; 0x100
   128f4:	mov	r5, r6
   128f8:	mov	r0, r7
   128fc:	bl	18d0 <fread@plt>
   12900:	mov	r6, r7
   12904:	mov	r4, r0
   12908:	mov	r7, #0
   1290c:	mov	r0, r6
   12910:	bl	1c84 <Mat_floatSwap>
   12914:	vcvt.s32.f32	s0, s0
   12918:	add	r6, r6, #4
   1291c:	vmov	r0, s0
   12920:	strb	r0, [r5, r7]
   12924:	add	r7, r7, #1
   12928:	cmp	r7, #256	; 0x100
   1292c:	bne	1290c <ReadInt8Data+0xa84>
   12930:	ldr	r2, [sp, #8]
   12934:	add	r0, r8, #256	; 0x100
   12938:	add	sl, r4, sl
   1293c:	ldr	r4, [sp, #20]
   12940:	add	r5, r5, #256	; 0x100
   12944:	add	r1, r9, #256	; 0x100
   12948:	mov	r6, r5
   1294c:	cmp	r0, r2
   12950:	ldr	r2, [sp, #16]
   12954:	blt	128dc <ReadInt8Data+0xa54>
   12958:	ldr	r7, [sp, #4]
   1295c:	cmp	r0, r7
   12960:	bge	1331c <ReadInt8Data+0x1494>
   12964:	ldr	r3, [r4]
   12968:	sub	r6, r7, r0
   1296c:	add	r4, sp, #24
   12970:	mov	r5, r2
   12974:	mov	r1, r2
   12978:	mov	r0, r4
   1297c:	mov	r2, r6
   12980:	bl	18d0 <fread@plt>
   12984:	add	sl, r0, sl
   12988:	cmp	r6, #1
   1298c:	blt	13318 <ReadInt8Data+0x1490>
   12990:	sub	r0, r7, r8
   12994:	sub	r6, r0, #256	; 0x100
   12998:	mov	r0, r4
   1299c:	bl	1c84 <Mat_floatSwap>
   129a0:	vcvt.s32.f32	s0, s0
   129a4:	add	r4, r4, #4
   129a8:	subs	r6, r6, #1
   129ac:	vmov	r0, s0
   129b0:	strb	r0, [r9], #1
   129b4:	bne	12998 <ReadInt8Data+0xb10>
   129b8:	b	13318 <ReadInt8Data+0x1490>
   129bc:	sub	r0, r7, #256	; 0x100
   129c0:	add	r1, r6, #256	; 0x100
   129c4:	mov	sl, #0
   129c8:	str	r7, [sp, #4]
   129cc:	str	r0, [sp, #8]
   129d0:	mov	r0, #0
   129d4:	ldr	r3, [r4]
   129d8:	add	r7, sp, #24
   129dc:	mov	r8, r0
   129e0:	mov	r9, r1
   129e4:	mov	r1, r2
   129e8:	mov	r2, #256	; 0x100
   129ec:	mov	r5, r6
   129f0:	mov	r0, r7
   129f4:	bl	18d0 <fread@plt>
   129f8:	mov	r6, r7
   129fc:	mov	r4, r0
   12a00:	mov	r7, #0
   12a04:	mov	r0, r6
   12a08:	bl	1cc8 <Mat_doubleSwap>
   12a0c:	vcvt.s32.f64	s0, d0
   12a10:	add	r6, r6, #8
   12a14:	vmov	r0, s0
   12a18:	strb	r0, [r5, r7]
   12a1c:	add	r7, r7, #1
   12a20:	cmp	r7, #256	; 0x100
   12a24:	bne	12a04 <ReadInt8Data+0xb7c>
   12a28:	ldr	r2, [sp, #8]
   12a2c:	add	r0, r8, #256	; 0x100
   12a30:	add	sl, r4, sl
   12a34:	ldr	r4, [sp, #20]
   12a38:	add	r5, r5, #256	; 0x100
   12a3c:	add	r1, r9, #256	; 0x100
   12a40:	mov	r6, r5
   12a44:	cmp	r0, r2
   12a48:	ldr	r2, [sp, #16]
   12a4c:	blt	129d4 <ReadInt8Data+0xb4c>
   12a50:	ldr	r7, [sp, #4]
   12a54:	cmp	r0, r7
   12a58:	bge	1331c <ReadInt8Data+0x1494>
   12a5c:	ldr	r3, [r4]
   12a60:	sub	r6, r7, r0
   12a64:	add	r4, sp, #24
   12a68:	mov	r5, r2
   12a6c:	mov	r1, r2
   12a70:	mov	r0, r4
   12a74:	mov	r2, r6
   12a78:	bl	18d0 <fread@plt>
   12a7c:	add	sl, r0, sl
   12a80:	cmp	r6, #1
   12a84:	blt	13318 <ReadInt8Data+0x1490>
   12a88:	sub	r0, r7, r8
   12a8c:	sub	r6, r0, #256	; 0x100
   12a90:	mov	r0, r4
   12a94:	bl	1cc8 <Mat_doubleSwap>
   12a98:	vcvt.s32.f64	s0, d0
   12a9c:	add	r4, r4, #8
   12aa0:	subs	r6, r6, #1
   12aa4:	vmov	r0, s0
   12aa8:	strb	r0, [r9], #1
   12aac:	bne	12a90 <ReadInt8Data+0xc08>
   12ab0:	b	13318 <ReadInt8Data+0x1490>
   12ab4:	sub	r0, r7, #256	; 0x100
   12ab8:	str	r7, [sp, #4]
   12abc:	add	r1, r6, #256	; 0x100
   12ac0:	mov	r7, r6
   12ac4:	mov	sl, #0
   12ac8:	str	r5, [sp]
   12acc:	str	r0, [sp, #8]
   12ad0:	mov	r0, #0
   12ad4:	ldr	r3, [r4]
   12ad8:	add	r6, sp, #24
   12adc:	mov	r5, r0
   12ae0:	mov	r9, r1
   12ae4:	mov	r1, r2
   12ae8:	mov	r2, #256	; 0x100
   12aec:	mov	r0, r6
   12af0:	bl	18d0 <fread@plt>
   12af4:	mov	r4, r0
   12af8:	mov	r8, #0
   12afc:	mov	r0, r6
   12b00:	bl	1bbc <Mat_int64Swap>
   12b04:	strb	r0, [r7, r8]
   12b08:	add	r8, r8, #1
   12b0c:	add	r6, r6, #8
   12b10:	cmp	r8, #256	; 0x100
   12b14:	bne	12afc <ReadInt8Data+0xc74>
   12b18:	ldr	r2, [sp, #8]
   12b1c:	add	r0, r5, #256	; 0x100
   12b20:	add	sl, r4, sl
   12b24:	ldr	r4, [sp, #20]
   12b28:	add	r7, r7, #256	; 0x100
   12b2c:	add	r1, r9, #256	; 0x100
   12b30:	cmp	r0, r2
   12b34:	ldr	r2, [sp, #16]
   12b38:	blt	12ad4 <ReadInt8Data+0xc4c>
   12b3c:	ldr	r7, [sp, #4]
   12b40:	cmp	r0, r7
   12b44:	bge	13158 <ReadInt8Data+0x12d0>
   12b48:	ldr	r3, [r4]
   12b4c:	sub	r6, r7, r0
   12b50:	add	r4, sp, #24
   12b54:	mov	r1, r2
   12b58:	mov	r0, r4
   12b5c:	mov	r2, r6
   12b60:	bl	18d0 <fread@plt>
   12b64:	add	sl, r0, sl
   12b68:	cmp	r6, #1
   12b6c:	blt	1317c <ReadInt8Data+0x12f4>
   12b70:	sub	r0, r7, r5
   12b74:	sub	r6, r0, #256	; 0x100
   12b78:	mov	r0, r4
   12b7c:	bl	1bbc <Mat_int64Swap>
   12b80:	strb	r0, [r9], #1
   12b84:	add	r4, r4, #8
   12b88:	subs	r6, r6, #1
   12b8c:	bne	12b78 <ReadInt8Data+0xcf0>
   12b90:	b	1317c <ReadInt8Data+0x12f4>
   12b94:	add	r1, r6, #256	; 0x100
   12b98:	sub	r4, r7, #256	; 0x100
   12b9c:	mov	r0, #0
   12ba0:	add	r9, sp, #24
   12ba4:	mov	sl, #0
   12ba8:	mov	r8, r0
   12bac:	ldr	r0, [sp, #20]
   12bb0:	mov	r5, r1
   12bb4:	ldr	r1, [sp, #16]
   12bb8:	mov	r2, #256	; 0x100
   12bbc:	ldr	r3, [r0]
   12bc0:	mov	r0, r9
   12bc4:	bl	18d0 <fread@plt>
   12bc8:	mov	r1, r9
   12bcc:	mov	r2, #0
   12bd0:	vld1.16	{d16-d17}, [r1]!
   12bd4:	add	r3, r6, r2
   12bd8:	add	r2, r2, #8
   12bdc:	cmp	r2, #256	; 0x100
   12be0:	vmovn.i16	d16, q8
   12be4:	vst1.8	{d16}, [r3]
   12be8:	bne	12bd0 <ReadInt8Data+0xd48>
   12bec:	add	sl, r0, sl
   12bf0:	add	r0, r8, #256	; 0x100
   12bf4:	add	r6, r6, #256	; 0x100
   12bf8:	add	r1, r5, #256	; 0x100
   12bfc:	cmp	r0, r4
   12c00:	blt	12ba8 <ReadInt8Data+0xd20>
   12c04:	cmp	r0, r7
   12c08:	bge	13230 <ReadInt8Data+0x13a8>
   12c0c:	mov	r9, r7
   12c10:	sub	r7, r7, r0
   12c14:	ldr	r0, [sp, #20]
   12c18:	ldr	r1, [sp, #16]
   12c1c:	add	r4, sp, #24
   12c20:	mov	r2, r7
   12c24:	ldr	r3, [r0]
   12c28:	mov	r0, r4
   12c2c:	bl	18d0 <fread@plt>
   12c30:	add	sl, r0, sl
   12c34:	cmp	r7, #1
   12c38:	blt	13230 <ReadInt8Data+0x13a8>
   12c3c:	sub	r0, r9, r8
   12c40:	sub	r0, r0, #256	; 0x100
   12c44:	ldrb	r1, [r4], #2
   12c48:	subs	r0, r0, #1
   12c4c:	strb	r1, [r5], #1
   12c50:	bne	12c44 <ReadInt8Data+0xdbc>
   12c54:	b	13230 <ReadInt8Data+0x13a8>
   12c58:	add	r1, r6, #256	; 0x100
   12c5c:	sub	r4, r7, #256	; 0x100
   12c60:	mov	r0, #0
   12c64:	add	r9, sp, #24
   12c68:	mov	sl, #0
   12c6c:	mov	r8, r0
   12c70:	ldr	r0, [sp, #20]
   12c74:	mov	r5, r1
   12c78:	ldr	r1, [sp, #16]
   12c7c:	mov	r2, #256	; 0x100
   12c80:	ldr	r3, [r0]
   12c84:	mov	r0, r9
   12c88:	bl	18d0 <fread@plt>
   12c8c:	mov	r1, r9
   12c90:	mov	r2, #0
   12c94:	vld1.16	{d16-d17}, [r1]!
   12c98:	add	r3, r6, r2
   12c9c:	add	r2, r2, #8
   12ca0:	cmp	r2, #256	; 0x100
   12ca4:	vmovn.i16	d16, q8
   12ca8:	vst1.8	{d16}, [r3]
   12cac:	bne	12c94 <ReadInt8Data+0xe0c>
   12cb0:	add	sl, r0, sl
   12cb4:	add	r0, r8, #256	; 0x100
   12cb8:	add	r6, r6, #256	; 0x100
   12cbc:	add	r1, r5, #256	; 0x100
   12cc0:	cmp	r0, r4
   12cc4:	blt	12c6c <ReadInt8Data+0xde4>
   12cc8:	cmp	r0, r7
   12ccc:	bge	13230 <ReadInt8Data+0x13a8>
   12cd0:	mov	r9, r7
   12cd4:	sub	r7, r7, r0
   12cd8:	ldr	r0, [sp, #20]
   12cdc:	ldr	r1, [sp, #16]
   12ce0:	add	r4, sp, #24
   12ce4:	mov	r2, r7
   12ce8:	ldr	r3, [r0]
   12cec:	mov	r0, r4
   12cf0:	bl	18d0 <fread@plt>
   12cf4:	add	sl, r0, sl
   12cf8:	cmp	r7, #1
   12cfc:	blt	13230 <ReadInt8Data+0x13a8>
   12d00:	sub	r0, r9, r8
   12d04:	sub	r0, r0, #256	; 0x100
   12d08:	ldrb	r1, [r4], #2
   12d0c:	subs	r0, r0, #1
   12d10:	strb	r1, [r5], #1
   12d14:	bne	12d08 <ReadInt8Data+0xe80>
   12d18:	b	13230 <ReadInt8Data+0x13a8>
   12d1c:	add	r1, r6, #256	; 0x100
   12d20:	sub	r4, r7, #256	; 0x100
   12d24:	mov	r0, #0
   12d28:	add	r9, sp, #24
   12d2c:	mov	sl, #0
   12d30:	mov	r8, r0
   12d34:	ldr	r0, [sp, #20]
   12d38:	mov	r5, r1
   12d3c:	ldr	r1, [sp, #16]
   12d40:	mov	r2, #256	; 0x100
   12d44:	ldr	r3, [r0]
   12d48:	mov	r0, r9
   12d4c:	bl	18d0 <fread@plt>
   12d50:	mov	r1, r9
   12d54:	mov	r2, #0
   12d58:	vld1.32	{d16-d17}, [r1]!
   12d5c:	add	r3, r6, r2
   12d60:	add	r2, r2, #4
   12d64:	cmp	r2, #256	; 0x100
   12d68:	vmovn.i32	d16, q8
   12d6c:	vuzp.8	d16, d17
   12d70:	vst1.32	{d16[0]}, [r3]
   12d74:	bne	12d58 <ReadInt8Data+0xed0>
   12d78:	add	sl, r0, sl
   12d7c:	add	r0, r8, #256	; 0x100
   12d80:	add	r6, r6, #256	; 0x100
   12d84:	add	r1, r5, #256	; 0x100
   12d88:	cmp	r0, r4
   12d8c:	blt	12d30 <ReadInt8Data+0xea8>
   12d90:	cmp	r0, r7
   12d94:	bge	13230 <ReadInt8Data+0x13a8>
   12d98:	mov	r9, r7
   12d9c:	sub	r7, r7, r0
   12da0:	ldr	r0, [sp, #20]
   12da4:	ldr	r1, [sp, #16]
   12da8:	add	r4, sp, #24
   12dac:	mov	r2, r7
   12db0:	ldr	r3, [r0]
   12db4:	mov	r0, r4
   12db8:	bl	18d0 <fread@plt>
   12dbc:	add	sl, r0, sl
   12dc0:	cmp	r7, #1
   12dc4:	blt	13230 <ReadInt8Data+0x13a8>
   12dc8:	sub	r0, r9, r8
   12dcc:	sub	r0, r0, #256	; 0x100
   12dd0:	ldr	r1, [r4], #4
   12dd4:	subs	r0, r0, #1
   12dd8:	strb	r1, [r5], #1
   12ddc:	bne	12dd0 <ReadInt8Data+0xf48>
   12de0:	b	13230 <ReadInt8Data+0x13a8>
   12de4:	add	r1, r6, #256	; 0x100
   12de8:	sub	r4, r7, #256	; 0x100
   12dec:	mov	r0, #0
   12df0:	add	r9, sp, #24
   12df4:	mov	sl, #0
   12df8:	mov	r8, r0
   12dfc:	ldr	r0, [sp, #20]
   12e00:	mov	r5, r1
   12e04:	ldr	r1, [sp, #16]
   12e08:	mov	r2, #256	; 0x100
   12e0c:	ldr	r3, [r0]
   12e10:	mov	r0, r9
   12e14:	bl	18d0 <fread@plt>
   12e18:	mov	r1, r9
   12e1c:	mov	r2, #0
   12e20:	vld1.32	{d16-d17}, [r1]!
   12e24:	add	r3, r6, r2
   12e28:	add	r2, r2, #4
   12e2c:	cmp	r2, #256	; 0x100
   12e30:	vmovn.i32	d16, q8
   12e34:	vuzp.8	d16, d17
   12e38:	vst1.32	{d16[0]}, [r3]
   12e3c:	bne	12e20 <ReadInt8Data+0xf98>
   12e40:	add	sl, r0, sl
   12e44:	add	r0, r8, #256	; 0x100
   12e48:	add	r6, r6, #256	; 0x100
   12e4c:	add	r1, r5, #256	; 0x100
   12e50:	cmp	r0, r4
   12e54:	blt	12df8 <ReadInt8Data+0xf70>
   12e58:	cmp	r0, r7
   12e5c:	bge	13230 <ReadInt8Data+0x13a8>
   12e60:	mov	r9, r7
   12e64:	sub	r7, r7, r0
   12e68:	ldr	r0, [sp, #20]
   12e6c:	ldr	r1, [sp, #16]
   12e70:	add	r4, sp, #24
   12e74:	mov	r2, r7
   12e78:	ldr	r3, [r0]
   12e7c:	mov	r0, r4
   12e80:	bl	18d0 <fread@plt>
   12e84:	add	sl, r0, sl
   12e88:	cmp	r7, #1
   12e8c:	blt	13230 <ReadInt8Data+0x13a8>
   12e90:	sub	r0, r9, r8
   12e94:	sub	r0, r0, #256	; 0x100
   12e98:	ldr	r1, [r4], #4
   12e9c:	subs	r0, r0, #1
   12ea0:	strb	r1, [r5], #1
   12ea4:	bne	12e98 <ReadInt8Data+0x1010>
   12ea8:	b	13230 <ReadInt8Data+0x13a8>
   12eac:	add	r1, r6, #256	; 0x100
   12eb0:	sub	r4, r7, #256	; 0x100
   12eb4:	mov	r0, #0
   12eb8:	add	r5, sp, #24
   12ebc:	mov	sl, #0
   12ec0:	mov	r8, r0
   12ec4:	ldr	r0, [sp, #20]
   12ec8:	mov	r9, r1
   12ecc:	ldr	r1, [sp, #16]
   12ed0:	mov	r2, #256	; 0x100
   12ed4:	ldr	r3, [r0]
   12ed8:	mov	r0, r5
   12edc:	bl	18d0 <fread@plt>
   12ee0:	mov	r1, r5
   12ee4:	mov	r2, #0
   12ee8:	vld1.32	{d16-d17}, [r1]!
   12eec:	add	r3, r6, r2
   12ef0:	add	r2, r2, #4
   12ef4:	cmp	r2, #256	; 0x100
   12ef8:	vcvt.s32.f32	q8, q8
   12efc:	vmovn.i32	d16, q8
   12f00:	vuzp.8	d16, d17
   12f04:	vst1.32	{d16[0]}, [r3]
   12f08:	bne	12ee8 <ReadInt8Data+0x1060>
   12f0c:	add	sl, r0, sl
   12f10:	add	r0, r8, #256	; 0x100
   12f14:	add	r6, r6, #256	; 0x100
   12f18:	add	r1, r9, #256	; 0x100
   12f1c:	cmp	r0, r4
   12f20:	blt	12ec0 <ReadInt8Data+0x1038>
   12f24:	cmp	r0, r7
   12f28:	bge	13230 <ReadInt8Data+0x13a8>
   12f2c:	mov	r5, r7
   12f30:	sub	r7, r7, r0
   12f34:	ldr	r0, [sp, #20]
   12f38:	ldr	r1, [sp, #16]
   12f3c:	add	r4, sp, #24
   12f40:	mov	r2, r7
   12f44:	ldr	r3, [r0]
   12f48:	mov	r0, r4
   12f4c:	bl	18d0 <fread@plt>
   12f50:	add	sl, r0, sl
   12f54:	cmp	r7, #1
   12f58:	blt	13230 <ReadInt8Data+0x13a8>
   12f5c:	sub	r0, r5, r8
   12f60:	sub	r0, r0, #256	; 0x100
   12f64:	vldr	s0, [r4]
   12f68:	add	r4, r4, #4
   12f6c:	subs	r0, r0, #1
   12f70:	vcvt.s32.f32	s0, s0
   12f74:	vmov	r1, s0
   12f78:	strb	r1, [r9], #1
   12f7c:	bne	12f64 <ReadInt8Data+0x10dc>
   12f80:	b	13230 <ReadInt8Data+0x13a8>
   12f84:	add	r1, r6, #256	; 0x100
   12f88:	sub	r4, r7, #256	; 0x100
   12f8c:	mov	r0, #0
   12f90:	add	r9, sp, #24
   12f94:	mov	sl, #0
   12f98:	mov	r8, r0
   12f9c:	ldr	r0, [sp, #20]
   12fa0:	mov	r5, r1
   12fa4:	ldr	r1, [sp, #16]
   12fa8:	mov	r2, #256	; 0x100
   12fac:	ldr	r3, [r0]
   12fb0:	mov	r0, r9
   12fb4:	bl	18d0 <fread@plt>
   12fb8:	mov	r1, r9
   12fbc:	mov	r2, #0
   12fc0:	vldr	d16, [r1]
   12fc4:	add	r1, r1, #8
   12fc8:	vcvt.s32.f64	s0, d16
   12fcc:	vmov	r3, s0
   12fd0:	strb	r3, [r6, r2]
   12fd4:	add	r2, r2, #1
   12fd8:	cmp	r2, #256	; 0x100
   12fdc:	bne	12fc0 <ReadInt8Data+0x1138>
   12fe0:	add	sl, r0, sl
   12fe4:	add	r0, r8, #256	; 0x100
   12fe8:	add	r6, r6, #256	; 0x100
   12fec:	add	r1, r5, #256	; 0x100
   12ff0:	cmp	r0, r4
   12ff4:	blt	12f98 <ReadInt8Data+0x1110>
   12ff8:	cmp	r0, r7
   12ffc:	bge	13230 <ReadInt8Data+0x13a8>
   13000:	mov	r9, r7
   13004:	sub	r7, r7, r0
   13008:	ldr	r0, [sp, #20]
   1300c:	ldr	r1, [sp, #16]
   13010:	add	r4, sp, #24
   13014:	mov	r2, r7
   13018:	ldr	r3, [r0]
   1301c:	mov	r0, r4
   13020:	bl	18d0 <fread@plt>
   13024:	add	sl, r0, sl
   13028:	cmp	r7, #1
   1302c:	blt	13230 <ReadInt8Data+0x13a8>
   13030:	sub	r0, r9, r8
   13034:	sub	r0, r0, #256	; 0x100
   13038:	vldr	d16, [r4]
   1303c:	add	r4, r4, #8
   13040:	subs	r0, r0, #1
   13044:	vcvt.s32.f64	s0, d16
   13048:	vmov	r1, s0
   1304c:	strb	r1, [r5], #1
   13050:	bne	13038 <ReadInt8Data+0x11b0>
   13054:	b	13230 <ReadInt8Data+0x13a8>
   13058:	sub	r0, r7, #256	; 0x100
   1305c:	add	r1, r6, #256	; 0x100
   13060:	add	r4, sp, #24
   13064:	mov	sl, r6
   13068:	mov	r9, #0
   1306c:	str	r5, [sp]
   13070:	str	r7, [sp, #4]
   13074:	str	r0, [sp, #8]
   13078:	mov	r0, #0
   1307c:	mov	r8, r0
   13080:	ldr	r0, [sp, #20]
   13084:	mov	r6, r1
   13088:	mov	r1, r2
   1308c:	mov	r2, #256	; 0x100
   13090:	ldr	r3, [r0]
   13094:	mov	r0, r4
   13098:	bl	18d0 <fread@plt>
   1309c:	mov	r1, r4
   130a0:	mov	r2, #0
   130a4:	vld1.64	{d16-d17}, [r1]!
   130a8:	mov	r7, sl
   130ac:	vmovn.i64	d16, q8
   130b0:	vmov.32	r3, d16[0]
   130b4:	strb	r3, [r7, r2]!
   130b8:	vmov.32	r3, d16[1]
   130bc:	add	r2, r2, #2
   130c0:	cmp	r2, #256	; 0x100
   130c4:	strb	r3, [r7, #1]
   130c8:	bne	130a4 <ReadInt8Data+0x121c>
   130cc:	ldr	r2, [sp, #8]
   130d0:	add	r9, r0, r9
   130d4:	add	r0, r8, #256	; 0x100
   130d8:	add	sl, sl, #256	; 0x100
   130dc:	add	r1, r6, #256	; 0x100
   130e0:	cmp	r0, r2
   130e4:	ldr	r2, [sp, #16]
   130e8:	blt	1307c <ReadInt8Data+0x11f4>
   130ec:	ldr	r7, [sp, #4]
   130f0:	cmp	r0, r7
   130f4:	bge	13164 <ReadInt8Data+0x12dc>
   130f8:	mov	r5, r7
   130fc:	sub	r7, r7, r0
   13100:	ldr	r0, [sp, #20]
   13104:	add	r4, sp, #24
   13108:	mov	r1, r2
   1310c:	mov	r2, r7
   13110:	ldr	r3, [r0]
   13114:	mov	r0, r4
   13118:	bl	18d0 <fread@plt>
   1311c:	mov	sl, r9
   13120:	add	sl, r0, r9
   13124:	cmp	r7, #1
   13128:	blt	13178 <ReadInt8Data+0x12f0>
   1312c:	sub	r0, r5, r8
   13130:	mov	r7, r5
   13134:	ldr	r5, [sp]
   13138:	sub	r0, r0, #256	; 0x100
   1313c:	ldrb	r1, [r4], #8
   13140:	subs	r0, r0, #1
   13144:	strb	r1, [r6], #1
   13148:	bne	1313c <ReadInt8Data+0x12b4>
   1314c:	ldr	r6, [sp, #12]
   13150:	ldr	r4, [sp, #20]
   13154:	b	13188 <ReadInt8Data+0x1300>
   13158:	ldr	r6, [sp, #12]
   1315c:	ldr	r5, [sp]
   13160:	b	1318c <ReadInt8Data+0x1304>
   13164:	ldr	r6, [sp, #12]
   13168:	ldr	r4, [sp, #20]
   1316c:	ldr	r5, [sp]
   13170:	mov	sl, r9
   13174:	b	1318c <ReadInt8Data+0x1304>
   13178:	mov	r7, r5
   1317c:	ldr	r6, [sp, #12]
   13180:	ldr	r4, [sp, #20]
   13184:	ldr	r5, [sp]
   13188:	ldr	r2, [sp, #16]
   1318c:	cmp	r5, #13
   13190:	bne	1331c <ReadInt8Data+0x1494>
   13194:	ldr	r0, [r4, #20]
   13198:	cmp	r0, #0
   1319c:	beq	131f0 <ReadInt8Data+0x1368>
   131a0:	cmp	r7, #256	; 0x100
   131a4:	bgt	13238 <ReadInt8Data+0x13b0>
   131a8:	ldr	r3, [r4]
   131ac:	add	r4, sp, #24
   131b0:	mov	r1, r2
   131b4:	mov	r5, r2
   131b8:	mov	r2, r7
   131bc:	mov	r0, r4
   131c0:	bl	18d0 <fread@plt>
   131c4:	add	sl, r0, sl
   131c8:	cmp	r7, #1
   131cc:	blt	13318 <ReadInt8Data+0x1490>
   131d0:	ldr	r5, [sp, #12]
   131d4:	mov	r0, r4
   131d8:	bl	1c0c <Mat_uint64Swap>
   131dc:	strb	r0, [r5], #1
   131e0:	add	r4, r4, #8
   131e4:	subs	r7, r7, #1
   131e8:	bne	131d4 <ReadInt8Data+0x134c>
   131ec:	b	13230 <ReadInt8Data+0x13a8>
   131f0:	cmp	r7, #256	; 0x100
   131f4:	bgt	13324 <ReadInt8Data+0x149c>
   131f8:	ldr	r3, [r4]
   131fc:	add	r4, sp, #24
   13200:	mov	r1, r2
   13204:	mov	r2, r7
   13208:	mov	r0, r4
   1320c:	bl	18d0 <fread@plt>
   13210:	add	sl, r0, sl
   13214:	cmp	r7, #1
   13218:	blt	13230 <ReadInt8Data+0x13a8>
   1321c:	ldr	r1, [sp, #12]
   13220:	ldrb	r0, [r4], #8
   13224:	subs	r7, r7, #1
   13228:	strb	r0, [r1], #1
   1322c:	bne	13220 <ReadInt8Data+0x1398>
   13230:	ldr	r2, [sp, #16]
   13234:	b	1331c <ReadInt8Data+0x1494>
   13238:	sub	r0, r7, #256	; 0x100
   1323c:	add	r1, r6, #256	; 0x100
   13240:	str	r7, [sp, #4]
   13244:	str	r0, [sp, #12]
   13248:	mov	r0, #0
   1324c:	ldr	r3, [r4]
   13250:	add	r7, sp, #24
   13254:	mov	r8, r0
   13258:	mov	r9, r1
   1325c:	mov	r1, r2
   13260:	mov	r2, #256	; 0x100
   13264:	mov	r5, r6
   13268:	mov	r0, r7
   1326c:	bl	18d0 <fread@plt>
   13270:	mov	r6, r7
   13274:	mov	r4, r0
   13278:	mov	r7, #0
   1327c:	mov	r0, r6
   13280:	bl	1c0c <Mat_uint64Swap>
   13284:	strb	r0, [r5, r7]
   13288:	add	r7, r7, #1
   1328c:	add	r6, r6, #8
   13290:	cmp	r7, #256	; 0x100
   13294:	bne	1327c <ReadInt8Data+0x13f4>
   13298:	ldr	r2, [sp, #12]
   1329c:	add	r0, r8, #256	; 0x100
   132a0:	add	sl, r4, sl
   132a4:	ldr	r4, [sp, #20]
   132a8:	add	r5, r5, #256	; 0x100
   132ac:	add	r1, r9, #256	; 0x100
   132b0:	mov	r6, r5
   132b4:	cmp	r0, r2
   132b8:	ldr	r2, [sp, #16]
   132bc:	blt	1324c <ReadInt8Data+0x13c4>
   132c0:	ldr	r7, [sp, #4]
   132c4:	cmp	r0, r7
   132c8:	bge	1331c <ReadInt8Data+0x1494>
   132cc:	ldr	r3, [r4]
   132d0:	sub	r6, r7, r0
   132d4:	add	r4, sp, #24
   132d8:	mov	r5, r2
   132dc:	mov	r1, r2
   132e0:	mov	r0, r4
   132e4:	mov	r2, r6
   132e8:	bl	18d0 <fread@plt>
   132ec:	add	sl, r0, sl
   132f0:	cmp	r6, #1
   132f4:	blt	13318 <ReadInt8Data+0x1490>
   132f8:	sub	r0, r7, r8
   132fc:	sub	r6, r0, #256	; 0x100
   13300:	mov	r0, r4
   13304:	bl	1c0c <Mat_uint64Swap>
   13308:	strb	r0, [r9], #1
   1330c:	add	r4, r4, #8
   13310:	subs	r6, r6, #1
   13314:	bne	13300 <ReadInt8Data+0x1478>
   13318:	mov	r2, r5
   1331c:	mul	r0, sl, r2
   13320:	b	11eac <ReadInt8Data+0x24>
   13324:	sub	r0, r7, #256	; 0x100
   13328:	add	r1, r6, #256	; 0x100
   1332c:	add	r4, sp, #24
   13330:	str	r7, [sp, #4]
   13334:	str	r0, [sp, #12]
   13338:	mov	r0, #0
   1333c:	mov	r9, r0
   13340:	ldr	r0, [sp, #20]
   13344:	mov	r8, r1
   13348:	mov	r7, r2
   1334c:	mov	r1, r2
   13350:	mov	r2, #256	; 0x100
   13354:	ldr	r3, [r0]
   13358:	mov	r0, r4
   1335c:	bl	18d0 <fread@plt>
   13360:	mov	r1, r4
   13364:	mov	r2, #0
   13368:	vld1.64	{d16-d17}, [r1]!
   1336c:	mov	r5, r6
   13370:	vmovn.i64	d16, q8
   13374:	vmov.32	r3, d16[0]
   13378:	strb	r3, [r5, r2]!
   1337c:	vmov.32	r3, d16[1]
   13380:	add	r2, r2, #2
   13384:	cmp	r2, #256	; 0x100
   13388:	strb	r3, [r5, #1]
   1338c:	bne	13368 <ReadInt8Data+0x14e0>
   13390:	ldr	r2, [sp, #12]
   13394:	add	sl, r0, sl
   13398:	add	r0, r9, #256	; 0x100
   1339c:	add	r6, r6, #256	; 0x100
   133a0:	add	r1, r8, #256	; 0x100
   133a4:	cmp	r0, r2
   133a8:	mov	r2, r7
   133ac:	blt	1333c <ReadInt8Data+0x14b4>
   133b0:	ldr	r5, [sp, #4]
   133b4:	mov	r6, r2
   133b8:	cmp	r0, r5
   133bc:	bge	13404 <ReadInt8Data+0x157c>
   133c0:	sub	r7, r5, r0
   133c4:	ldr	r0, [sp, #20]
   133c8:	add	r4, sp, #24
   133cc:	mov	r1, r6
   133d0:	mov	r2, r7
   133d4:	ldr	r3, [r0]
   133d8:	mov	r0, r4
   133dc:	bl	18d0 <fread@plt>
   133e0:	add	sl, r0, sl
   133e4:	cmp	r7, #1
   133e8:	blt	13404 <ReadInt8Data+0x157c>
   133ec:	sub	r0, r5, r9
   133f0:	sub	r0, r0, #256	; 0x100
   133f4:	ldrb	r1, [r4], #8
   133f8:	subs	r0, r0, #1
   133fc:	strb	r1, [r8], #1
   13400:	bne	133f4 <ReadInt8Data+0x156c>
   13404:	mov	r2, r6
   13408:	b	1331c <ReadInt8Data+0x1494>

0001340c <ReadCompressedInt8Data>:
   1340c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13410:	add	fp, sp, #28
   13414:	sub	sp, sp, #12
   13418:	mov	r7, r0
   1341c:	mov	r0, #0
   13420:	cmp	r1, #0
   13424:	beq	1392c <ReadCompressedInt8Data+0x520>
   13428:	cmp	r7, #0
   1342c:	movne	r5, r2
   13430:	cmpne	r2, #0
   13434:	beq	1392c <ReadCompressedInt8Data+0x520>
   13438:	ldr	sl, [fp, #8]
   1343c:	mov	r0, r3
   13440:	mov	r4, r3
   13444:	mov	r6, r1
   13448:	bl	193c <Mat_SizeOf@plt>
   1344c:	mov	r9, r0
   13450:	sub	r0, r4, #1
   13454:	cmp	r0, #12
   13458:	bhi	13928 <ReadCompressedInt8Data+0x51c>
   1345c:	add	r1, pc, #4
   13460:	ldr	r0, [r1, r0, lsl #2]
   13464:	add	pc, r1, r0
   13468:	.word	0x00000034
   1346c:	.word	0x0000006c
   13470:	.word	0x000000a4
   13474:	.word	0x000000ec
   13478:	.word	0x00000134
   1347c:	.word	0x0000017c
   13480:	.word	0x000001c4
   13484:	.word	0x000004c0
   13488:	.word	0x00000214
   1348c:	.word	0x000004c0
   13490:	.word	0x000004c0
   13494:	.word	0x00000264
   13498:	.word	0x000002ac
   1349c:	cmp	sl, #1
   134a0:	blt	13928 <ReadCompressedInt8Data+0x51c>
   134a4:	mov	r8, sp
   134a8:	mov	r4, sl
   134ac:	mov	r0, r7
   134b0:	mov	r1, r6
   134b4:	mov	r2, r8
   134b8:	mov	r3, r9
   134bc:	bl	31dc <InflateData>
   134c0:	ldrb	r0, [sp]
   134c4:	subs	r4, r4, #1
   134c8:	strb	r0, [r5], #1
   134cc:	bne	134ac <ReadCompressedInt8Data+0xa0>
   134d0:	b	13928 <ReadCompressedInt8Data+0x51c>
   134d4:	cmp	sl, #1
   134d8:	blt	13928 <ReadCompressedInt8Data+0x51c>
   134dc:	mov	r8, sp
   134e0:	mov	r4, sl
   134e4:	mov	r0, r7
   134e8:	mov	r1, r6
   134ec:	mov	r2, r8
   134f0:	mov	r3, r9
   134f4:	bl	31dc <InflateData>
   134f8:	ldrb	r0, [sp]
   134fc:	subs	r4, r4, #1
   13500:	strb	r0, [r5], #1
   13504:	bne	134e4 <ReadCompressedInt8Data+0xd8>
   13508:	b	13928 <ReadCompressedInt8Data+0x51c>
   1350c:	ldr	r0, [r7, #20]
   13510:	cmp	r0, #0
   13514:	beq	1375c <ReadCompressedInt8Data+0x350>
   13518:	cmp	sl, #1
   1351c:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13520:	mov	r8, sp
   13524:	mov	r4, sl
   13528:	mov	r0, r7
   1352c:	mov	r1, r6
   13530:	mov	r2, r8
   13534:	mov	r3, r9
   13538:	bl	31dc <InflateData>
   1353c:	mov	r0, r8
   13540:	bl	1c58 <Mat_int16Swap>
   13544:	strb	r0, [r5], #1
   13548:	subs	r4, r4, #1
   1354c:	bne	13528 <ReadCompressedInt8Data+0x11c>
   13550:	b	13928 <ReadCompressedInt8Data+0x51c>
   13554:	ldr	r0, [r7, #20]
   13558:	cmp	r0, #0
   1355c:	beq	13794 <ReadCompressedInt8Data+0x388>
   13560:	cmp	sl, #1
   13564:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13568:	mov	r8, sp
   1356c:	mov	r4, sl
   13570:	mov	r0, r7
   13574:	mov	r1, r6
   13578:	mov	r2, r8
   1357c:	mov	r3, r9
   13580:	bl	31dc <InflateData>
   13584:	mov	r0, r8
   13588:	bl	1c6c <Mat_uint16Swap>
   1358c:	strb	r0, [r5], #1
   13590:	subs	r4, r4, #1
   13594:	bne	13570 <ReadCompressedInt8Data+0x164>
   13598:	b	13928 <ReadCompressedInt8Data+0x51c>
   1359c:	ldr	r0, [r7, #20]
   135a0:	cmp	r0, #0
   135a4:	beq	137cc <ReadCompressedInt8Data+0x3c0>
   135a8:	cmp	sl, #1
   135ac:	blt	13928 <ReadCompressedInt8Data+0x51c>
   135b0:	mov	r8, sp
   135b4:	mov	r4, sl
   135b8:	mov	r0, r7
   135bc:	mov	r1, r6
   135c0:	mov	r2, r8
   135c4:	mov	r3, r9
   135c8:	bl	31dc <InflateData>
   135cc:	mov	r0, r8
   135d0:	bl	1c30 <Mat_int32Swap>
   135d4:	strb	r0, [r5], #1
   135d8:	subs	r4, r4, #1
   135dc:	bne	135b8 <ReadCompressedInt8Data+0x1ac>
   135e0:	b	13928 <ReadCompressedInt8Data+0x51c>
   135e4:	ldr	r0, [r7, #20]
   135e8:	cmp	r0, #0
   135ec:	beq	13804 <ReadCompressedInt8Data+0x3f8>
   135f0:	cmp	sl, #1
   135f4:	blt	13928 <ReadCompressedInt8Data+0x51c>
   135f8:	mov	r8, sp
   135fc:	mov	r4, sl
   13600:	mov	r0, r7
   13604:	mov	r1, r6
   13608:	mov	r2, r8
   1360c:	mov	r3, r9
   13610:	bl	31dc <InflateData>
   13614:	mov	r0, r8
   13618:	bl	1c44 <Mat_uint32Swap>
   1361c:	strb	r0, [r5], #1
   13620:	subs	r4, r4, #1
   13624:	bne	13600 <ReadCompressedInt8Data+0x1f4>
   13628:	b	13928 <ReadCompressedInt8Data+0x51c>
   1362c:	ldr	r0, [r7, #20]
   13630:	cmp	r0, #0
   13634:	beq	1383c <ReadCompressedInt8Data+0x430>
   13638:	cmp	sl, #1
   1363c:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13640:	mov	r8, sp
   13644:	mov	r4, sl
   13648:	mov	r0, r7
   1364c:	mov	r1, r6
   13650:	mov	r2, r8
   13654:	mov	r3, r9
   13658:	bl	31dc <InflateData>
   1365c:	mov	r0, r8
   13660:	bl	1c84 <Mat_floatSwap>
   13664:	vcvt.s32.f32	s0, s0
   13668:	subs	r4, r4, #1
   1366c:	vmov	r0, s0
   13670:	strb	r0, [r5], #1
   13674:	bne	13648 <ReadCompressedInt8Data+0x23c>
   13678:	b	13928 <ReadCompressedInt8Data+0x51c>
   1367c:	ldr	r0, [r7, #20]
   13680:	cmp	r0, #0
   13684:	beq	1387c <ReadCompressedInt8Data+0x470>
   13688:	cmp	sl, #1
   1368c:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13690:	mov	r8, sp
   13694:	mov	r4, sl
   13698:	mov	r0, r7
   1369c:	mov	r1, r6
   136a0:	mov	r2, r8
   136a4:	mov	r3, r9
   136a8:	bl	31dc <InflateData>
   136ac:	mov	r0, r8
   136b0:	bl	1cc8 <Mat_doubleSwap>
   136b4:	vcvt.s32.f64	s0, d0
   136b8:	subs	r4, r4, #1
   136bc:	vmov	r0, s0
   136c0:	strb	r0, [r5], #1
   136c4:	bne	13698 <ReadCompressedInt8Data+0x28c>
   136c8:	b	13928 <ReadCompressedInt8Data+0x51c>
   136cc:	ldr	r0, [r7, #20]
   136d0:	cmp	r0, #0
   136d4:	beq	138bc <ReadCompressedInt8Data+0x4b0>
   136d8:	cmp	sl, #1
   136dc:	blt	13928 <ReadCompressedInt8Data+0x51c>
   136e0:	mov	r8, sp
   136e4:	mov	r4, sl
   136e8:	mov	r0, r7
   136ec:	mov	r1, r6
   136f0:	mov	r2, r8
   136f4:	mov	r3, r9
   136f8:	bl	31dc <InflateData>
   136fc:	mov	r0, r8
   13700:	bl	1bbc <Mat_int64Swap>
   13704:	strb	r0, [r5], #1
   13708:	subs	r4, r4, #1
   1370c:	bne	136e8 <ReadCompressedInt8Data+0x2dc>
   13710:	b	13928 <ReadCompressedInt8Data+0x51c>
   13714:	ldr	r0, [r7, #20]
   13718:	cmp	r0, #0
   1371c:	beq	138f4 <ReadCompressedInt8Data+0x4e8>
   13720:	cmp	sl, #1
   13724:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13728:	mov	r8, sp
   1372c:	mov	r4, sl
   13730:	mov	r0, r7
   13734:	mov	r1, r6
   13738:	mov	r2, r8
   1373c:	mov	r3, r9
   13740:	bl	31dc <InflateData>
   13744:	mov	r0, r8
   13748:	bl	1c0c <Mat_uint64Swap>
   1374c:	strb	r0, [r5], #1
   13750:	subs	r4, r4, #1
   13754:	bne	13730 <ReadCompressedInt8Data+0x324>
   13758:	b	13928 <ReadCompressedInt8Data+0x51c>
   1375c:	cmp	sl, #1
   13760:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13764:	mov	r8, sp
   13768:	mov	r4, sl
   1376c:	mov	r0, r7
   13770:	mov	r1, r6
   13774:	mov	r2, r8
   13778:	mov	r3, r9
   1377c:	bl	31dc <InflateData>
   13780:	ldrb	r0, [sp]
   13784:	subs	r4, r4, #1
   13788:	strb	r0, [r5], #1
   1378c:	bne	1376c <ReadCompressedInt8Data+0x360>
   13790:	b	13928 <ReadCompressedInt8Data+0x51c>
   13794:	cmp	sl, #1
   13798:	blt	13928 <ReadCompressedInt8Data+0x51c>
   1379c:	mov	r8, sp
   137a0:	mov	r4, sl
   137a4:	mov	r0, r7
   137a8:	mov	r1, r6
   137ac:	mov	r2, r8
   137b0:	mov	r3, r9
   137b4:	bl	31dc <InflateData>
   137b8:	ldrb	r0, [sp]
   137bc:	subs	r4, r4, #1
   137c0:	strb	r0, [r5], #1
   137c4:	bne	137a4 <ReadCompressedInt8Data+0x398>
   137c8:	b	13928 <ReadCompressedInt8Data+0x51c>
   137cc:	cmp	sl, #1
   137d0:	blt	13928 <ReadCompressedInt8Data+0x51c>
   137d4:	mov	r8, sp
   137d8:	mov	r4, sl
   137dc:	mov	r0, r7
   137e0:	mov	r1, r6
   137e4:	mov	r2, r8
   137e8:	mov	r3, r9
   137ec:	bl	31dc <InflateData>
   137f0:	ldr	r0, [sp]
   137f4:	subs	r4, r4, #1
   137f8:	strb	r0, [r5], #1
   137fc:	bne	137dc <ReadCompressedInt8Data+0x3d0>
   13800:	b	13928 <ReadCompressedInt8Data+0x51c>
   13804:	cmp	sl, #1
   13808:	blt	13928 <ReadCompressedInt8Data+0x51c>
   1380c:	mov	r8, sp
   13810:	mov	r4, sl
   13814:	mov	r0, r7
   13818:	mov	r1, r6
   1381c:	mov	r2, r8
   13820:	mov	r3, r9
   13824:	bl	31dc <InflateData>
   13828:	ldr	r0, [sp]
   1382c:	subs	r4, r4, #1
   13830:	strb	r0, [r5], #1
   13834:	bne	13814 <ReadCompressedInt8Data+0x408>
   13838:	b	13928 <ReadCompressedInt8Data+0x51c>
   1383c:	cmp	sl, #1
   13840:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13844:	mov	r8, sp
   13848:	mov	r4, sl
   1384c:	mov	r0, r7
   13850:	mov	r1, r6
   13854:	mov	r2, r8
   13858:	mov	r3, r9
   1385c:	bl	31dc <InflateData>
   13860:	vldr	s0, [sp]
   13864:	subs	r4, r4, #1
   13868:	vcvt.s32.f32	s0, s0
   1386c:	vmov	r0, s0
   13870:	strb	r0, [r5], #1
   13874:	bne	1384c <ReadCompressedInt8Data+0x440>
   13878:	b	13928 <ReadCompressedInt8Data+0x51c>
   1387c:	cmp	sl, #1
   13880:	blt	13928 <ReadCompressedInt8Data+0x51c>
   13884:	mov	r8, sp
   13888:	mov	r4, sl
   1388c:	mov	r0, r7
   13890:	mov	r1, r6
   13894:	mov	r2, r8
   13898:	mov	r3, r9
   1389c:	bl	31dc <InflateData>
   138a0:	vldr	d16, [sp]
   138a4:	subs	r4, r4, #1
   138a8:	vcvt.s32.f64	s0, d16
   138ac:	vmov	r0, s0
   138b0:	strb	r0, [r5], #1
   138b4:	bne	1388c <ReadCompressedInt8Data+0x480>
   138b8:	b	13928 <ReadCompressedInt8Data+0x51c>
   138bc:	cmp	sl, #1
   138c0:	blt	13928 <ReadCompressedInt8Data+0x51c>
   138c4:	mov	r8, sp
   138c8:	mov	r4, sl
   138cc:	mov	r0, r7
   138d0:	mov	r1, r6
   138d4:	mov	r2, r8
   138d8:	mov	r3, r9
   138dc:	bl	31dc <InflateData>
   138e0:	ldrb	r0, [sp]
   138e4:	subs	r4, r4, #1
   138e8:	strb	r0, [r5], #1
   138ec:	bne	138cc <ReadCompressedInt8Data+0x4c0>
   138f0:	b	13928 <ReadCompressedInt8Data+0x51c>
   138f4:	cmp	sl, #1
   138f8:	blt	13928 <ReadCompressedInt8Data+0x51c>
   138fc:	mov	r8, sp
   13900:	mov	r4, sl
   13904:	mov	r0, r7
   13908:	mov	r1, r6
   1390c:	mov	r2, r8
   13910:	mov	r3, r9
   13914:	bl	31dc <InflateData>
   13918:	ldrb	r0, [sp]
   1391c:	subs	r4, r4, #1
   13920:	strb	r0, [r5], #1
   13924:	bne	13904 <ReadCompressedInt8Data+0x4f8>
   13928:	mul	r0, r9, sl
   1392c:	sub	sp, fp, #28
   13930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013934 <ReadUInt8Data>:
   13934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13938:	add	fp, sp, #28
   1393c:	sub	sp, sp, #28
   13940:	sub	sp, sp, #2048	; 0x800
   13944:	mov	r4, r0
   13948:	mov	r0, #0
   1394c:	cmp	r4, #0
   13950:	cmpne	r1, #0
   13954:	bne	13960 <ReadUInt8Data+0x2c>
   13958:	sub	sp, fp, #28
   1395c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13960:	mov	r5, r2
   13964:	ldr	r2, [r4]
   13968:	cmp	r2, #0
   1396c:	beq	13958 <ReadUInt8Data+0x24>
   13970:	mov	r0, r5
   13974:	mov	r7, r3
   13978:	str	r1, [sp, #12]
   1397c:	bl	193c <Mat_SizeOf@plt>
   13980:	mov	r2, r0
   13984:	sub	r0, r5, #1
   13988:	mov	sl, #0
   1398c:	str	r4, [sp, #20]
   13990:	cmp	r0, #11
   13994:	str	r2, [sp, #16]
   13998:	bhi	13d1c <ReadUInt8Data+0x3e8>
   1399c:	add	r1, pc, #8
   139a0:	ldr	r6, [sp, #12]
   139a4:	ldr	r0, [r1, r0, lsl #2]
   139a8:	add	pc, r1, r0
   139ac:	.word	0x00000030
   139b0:	.word	0x0000009c
   139b4:	.word	0x000000d8
   139b8:	.word	0x00000134
   139bc:	.word	0x00000190
   139c0:	.word	0x000001ec
   139c4:	.word	0x00000248
   139c8:	.word	0x0000128c
   139cc:	.word	0x000002ac
   139d0:	.word	0x0000128c
   139d4:	.word	0x0000128c
   139d8:	.word	0x00000310
   139dc:	cmp	r7, #256	; 0x100
   139e0:	ble	13a50 <ReadUInt8Data+0x11c>
   139e4:	sub	r0, r7, #256	; 0x100
   139e8:	str	r7, [sp, #4]
   139ec:	mov	r7, r4
   139f0:	mov	r4, #0
   139f4:	add	r8, sp, #24
   139f8:	mov	sl, #0
   139fc:	mov	r9, r2
   13a00:	mov	r5, r6
   13a04:	str	r0, [sp, #8]
   13a08:	ldr	r3, [r7]
   13a0c:	mov	r0, r8
   13a10:	mov	r1, r9
   13a14:	mov	r2, #256	; 0x100
   13a18:	bl	18d0 <fread@plt>
   13a1c:	mov	r6, r0
   13a20:	add	r0, r5, r4
   13a24:	mov	r1, r8
   13a28:	mov	r2, #256	; 0x100
   13a2c:	bl	1834 <memcpy@plt>
   13a30:	ldr	r0, [sp, #8]
   13a34:	add	r4, r4, #256	; 0x100
   13a38:	add	sl, r6, sl
   13a3c:	cmp	r4, r0
   13a40:	blt	13a08 <ReadUInt8Data+0xd4>
   13a44:	b	13d84 <ReadUInt8Data+0x450>
   13a48:	cmp	r7, #256	; 0x100
   13a4c:	bgt	13d24 <ReadUInt8Data+0x3f0>
   13a50:	ldr	r3, [r4]
   13a54:	mov	r1, r2
   13a58:	add	r0, sp, #24
   13a5c:	mov	r2, r7
   13a60:	bl	18d0 <fread@plt>
   13a64:	mov	sl, r0
   13a68:	cmp	r7, #1
   13a6c:	blt	14cdc <ReadUInt8Data+0x13a8>
   13a70:	ldr	r0, [sp, #12]
   13a74:	add	r1, sp, #24
   13a78:	mov	r2, r7
   13a7c:	bl	1834 <memcpy@plt>
   13a80:	b	14cdc <ReadUInt8Data+0x13a8>
   13a84:	ldr	r0, [r4, #20]
   13a88:	cmp	r0, #0
   13a8c:	beq	13dd4 <ReadUInt8Data+0x4a0>
   13a90:	cmp	r7, #256	; 0x100
   13a94:	bgt	13fd0 <ReadUInt8Data+0x69c>
   13a98:	ldr	r3, [r4]
   13a9c:	add	r4, sp, #24
   13aa0:	mov	r1, r2
   13aa4:	mov	r5, r2
   13aa8:	mov	r2, r7
   13aac:	mov	r0, r4
   13ab0:	bl	18d0 <fread@plt>
   13ab4:	mov	sl, r0
   13ab8:	cmp	r7, #1
   13abc:	blt	14dc4 <ReadUInt8Data+0x1490>
   13ac0:	ldr	r5, [sp, #12]
   13ac4:	mov	r0, r4
   13ac8:	bl	1c58 <Mat_int16Swap>
   13acc:	strb	r0, [r5], #1
   13ad0:	add	r4, r4, #2
   13ad4:	subs	r7, r7, #1
   13ad8:	bne	13ac4 <ReadUInt8Data+0x190>
   13adc:	b	14cdc <ReadUInt8Data+0x13a8>
   13ae0:	ldr	r0, [r4, #20]
   13ae4:	cmp	r0, #0
   13ae8:	beq	13e18 <ReadUInt8Data+0x4e4>
   13aec:	cmp	r7, #256	; 0x100
   13af0:	bgt	140b8 <ReadUInt8Data+0x784>
   13af4:	ldr	r3, [r4]
   13af8:	add	r4, sp, #24
   13afc:	mov	r1, r2
   13b00:	mov	r5, r2
   13b04:	mov	r2, r7
   13b08:	mov	r0, r4
   13b0c:	bl	18d0 <fread@plt>
   13b10:	mov	sl, r0
   13b14:	cmp	r7, #1
   13b18:	blt	14dc4 <ReadUInt8Data+0x1490>
   13b1c:	ldr	r5, [sp, #12]
   13b20:	mov	r0, r4
   13b24:	bl	1c6c <Mat_uint16Swap>
   13b28:	strb	r0, [r5], #1
   13b2c:	add	r4, r4, #2
   13b30:	subs	r7, r7, #1
   13b34:	bne	13b20 <ReadUInt8Data+0x1ec>
   13b38:	b	14cdc <ReadUInt8Data+0x13a8>
   13b3c:	ldr	r0, [r4, #20]
   13b40:	cmp	r0, #0
   13b44:	beq	13e5c <ReadUInt8Data+0x528>
   13b48:	cmp	r7, #256	; 0x100
   13b4c:	bgt	141a0 <ReadUInt8Data+0x86c>
   13b50:	ldr	r3, [r4]
   13b54:	add	r4, sp, #24
   13b58:	mov	r1, r2
   13b5c:	mov	r5, r2
   13b60:	mov	r2, r7
   13b64:	mov	r0, r4
   13b68:	bl	18d0 <fread@plt>
   13b6c:	mov	sl, r0
   13b70:	cmp	r7, #1
   13b74:	blt	14dc4 <ReadUInt8Data+0x1490>
   13b78:	ldr	r5, [sp, #12]
   13b7c:	mov	r0, r4
   13b80:	bl	1c30 <Mat_int32Swap>
   13b84:	strb	r0, [r5], #1
   13b88:	add	r4, r4, #4
   13b8c:	subs	r7, r7, #1
   13b90:	bne	13b7c <ReadUInt8Data+0x248>
   13b94:	b	14cdc <ReadUInt8Data+0x13a8>
   13b98:	ldr	r0, [r4, #20]
   13b9c:	cmp	r0, #0
   13ba0:	beq	13ea0 <ReadUInt8Data+0x56c>
   13ba4:	cmp	r7, #256	; 0x100
   13ba8:	bgt	14288 <ReadUInt8Data+0x954>
   13bac:	ldr	r3, [r4]
   13bb0:	add	r4, sp, #24
   13bb4:	mov	r1, r2
   13bb8:	mov	r5, r2
   13bbc:	mov	r2, r7
   13bc0:	mov	r0, r4
   13bc4:	bl	18d0 <fread@plt>
   13bc8:	mov	sl, r0
   13bcc:	cmp	r7, #1
   13bd0:	blt	14dc4 <ReadUInt8Data+0x1490>
   13bd4:	ldr	r5, [sp, #12]
   13bd8:	mov	r0, r4
   13bdc:	bl	1c44 <Mat_uint32Swap>
   13be0:	strb	r0, [r5], #1
   13be4:	add	r4, r4, #4
   13be8:	subs	r7, r7, #1
   13bec:	bne	13bd8 <ReadUInt8Data+0x2a4>
   13bf0:	b	14cdc <ReadUInt8Data+0x13a8>
   13bf4:	ldr	r0, [r4, #20]
   13bf8:	cmp	r0, #0
   13bfc:	beq	13ee4 <ReadUInt8Data+0x5b0>
   13c00:	cmp	r7, #256	; 0x100
   13c04:	bgt	14370 <ReadUInt8Data+0xa3c>
   13c08:	ldr	r3, [r4]
   13c0c:	add	r4, sp, #24
   13c10:	mov	r1, r2
   13c14:	mov	r5, r2
   13c18:	mov	r2, r7
   13c1c:	mov	r0, r4
   13c20:	bl	18d0 <fread@plt>
   13c24:	mov	sl, r0
   13c28:	cmp	r7, #1
   13c2c:	blt	14dc4 <ReadUInt8Data+0x1490>
   13c30:	ldr	r5, [sp, #12]
   13c34:	mov	r0, r4
   13c38:	bl	1c84 <Mat_floatSwap>
   13c3c:	vcvt.u32.f32	s0, s0
   13c40:	add	r4, r4, #4
   13c44:	subs	r7, r7, #1
   13c48:	vmov	r0, s0
   13c4c:	strb	r0, [r5], #1
   13c50:	bne	13c34 <ReadUInt8Data+0x300>
   13c54:	b	14cdc <ReadUInt8Data+0x13a8>
   13c58:	ldr	r0, [r4, #20]
   13c5c:	cmp	r0, #0
   13c60:	beq	13f34 <ReadUInt8Data+0x600>
   13c64:	cmp	r7, #256	; 0x100
   13c68:	bgt	14468 <ReadUInt8Data+0xb34>
   13c6c:	ldr	r3, [r4]
   13c70:	add	r4, sp, #24
   13c74:	mov	r1, r2
   13c78:	mov	r5, r2
   13c7c:	mov	r2, r7
   13c80:	mov	r0, r4
   13c84:	bl	18d0 <fread@plt>
   13c88:	mov	sl, r0
   13c8c:	cmp	r7, #1
   13c90:	blt	14dc4 <ReadUInt8Data+0x1490>
   13c94:	ldr	r5, [sp, #12]
   13c98:	mov	r0, r4
   13c9c:	bl	1cc8 <Mat_doubleSwap>
   13ca0:	vcvt.u32.f64	s0, d0
   13ca4:	add	r4, r4, #8
   13ca8:	subs	r7, r7, #1
   13cac:	vmov	r0, s0
   13cb0:	strb	r0, [r5], #1
   13cb4:	bne	13c98 <ReadUInt8Data+0x364>
   13cb8:	b	14cdc <ReadUInt8Data+0x13a8>
   13cbc:	ldr	r0, [r4, #20]
   13cc0:	cmp	r0, #0
   13cc4:	beq	13f84 <ReadUInt8Data+0x650>
   13cc8:	cmp	r7, #256	; 0x100
   13ccc:	bgt	14560 <ReadUInt8Data+0xc2c>
   13cd0:	ldr	r3, [r4]
   13cd4:	add	r4, sp, #24
   13cd8:	mov	r1, r2
   13cdc:	mov	r2, r7
   13ce0:	mov	r0, r4
   13ce4:	bl	18d0 <fread@plt>
   13ce8:	mov	sl, r0
   13cec:	cmp	r7, #1
   13cf0:	blt	14bf8 <ReadUInt8Data+0x12c4>
   13cf4:	ldr	r6, [sp, #12]
   13cf8:	mov	r8, r7
   13cfc:	mov	r0, r4
   13d00:	bl	1bbc <Mat_int64Swap>
   13d04:	strb	r0, [r6], #1
   13d08:	add	r4, r4, #8
   13d0c:	subs	r7, r7, #1
   13d10:	bne	13cfc <ReadUInt8Data+0x3c8>
   13d14:	mov	r7, r8
   13d18:	b	14bf8 <ReadUInt8Data+0x12c4>
   13d1c:	ldr	r6, [sp, #12]
   13d20:	b	14c38 <ReadUInt8Data+0x1304>
   13d24:	sub	r0, r7, #256	; 0x100
   13d28:	str	r7, [sp, #4]
   13d2c:	mov	r7, r4
   13d30:	mov	r4, #0
   13d34:	add	r8, sp, #24
   13d38:	mov	sl, #0
   13d3c:	mov	r9, r2
   13d40:	mov	r5, r6
   13d44:	str	r0, [sp, #8]
   13d48:	ldr	r3, [r7]
   13d4c:	mov	r0, r8
   13d50:	mov	r1, r9
   13d54:	mov	r2, #256	; 0x100
   13d58:	bl	18d0 <fread@plt>
   13d5c:	mov	r6, r0
   13d60:	add	r0, r5, r4
   13d64:	mov	r1, r8
   13d68:	mov	r2, #256	; 0x100
   13d6c:	bl	1834 <memcpy@plt>
   13d70:	ldr	r0, [sp, #8]
   13d74:	add	r4, r4, #256	; 0x100
   13d78:	add	sl, r6, sl
   13d7c:	cmp	r4, r0
   13d80:	blt	13d48 <ReadUInt8Data+0x414>
   13d84:	ldr	r9, [sp, #4]
   13d88:	cmp	r4, r9
   13d8c:	bge	14cdc <ReadUInt8Data+0x13a8>
   13d90:	ldr	r0, [sp, #20]
   13d94:	ldr	r1, [sp, #16]
   13d98:	sub	r6, r9, r4
   13d9c:	mov	r2, r6
   13da0:	ldr	r3, [r0]
   13da4:	add	r0, sp, #24
   13da8:	mov	r5, r1
   13dac:	bl	18d0 <fread@plt>
   13db0:	add	sl, r0, sl
   13db4:	cmp	r6, #1
   13db8:	blt	14dc4 <ReadUInt8Data+0x1490>
   13dbc:	ldr	r0, [sp, #12]
   13dc0:	add	r1, sp, #24
   13dc4:	mov	r2, r6
   13dc8:	add	r0, r0, r4
   13dcc:	bl	1834 <memcpy@plt>
   13dd0:	b	14dc4 <ReadUInt8Data+0x1490>
   13dd4:	cmp	r7, #256	; 0x100
   13dd8:	bgt	14640 <ReadUInt8Data+0xd0c>
   13ddc:	ldr	r3, [r4]
   13de0:	add	r4, sp, #24
   13de4:	mov	r1, r2
   13de8:	mov	r2, r7
   13dec:	mov	r0, r4
   13df0:	bl	18d0 <fread@plt>
   13df4:	mov	sl, r0
   13df8:	cmp	r7, #1
   13dfc:	blt	14cdc <ReadUInt8Data+0x13a8>
   13e00:	ldr	r1, [sp, #12]
   13e04:	ldrb	r0, [r4], #2
   13e08:	subs	r7, r7, #1
   13e0c:	strb	r0, [r1], #1
   13e10:	bne	13e04 <ReadUInt8Data+0x4d0>
   13e14:	b	14cdc <ReadUInt8Data+0x13a8>
   13e18:	cmp	r7, #256	; 0x100
   13e1c:	bgt	14704 <ReadUInt8Data+0xdd0>
   13e20:	ldr	r3, [r4]
   13e24:	add	r4, sp, #24
   13e28:	mov	r1, r2
   13e2c:	mov	r2, r7
   13e30:	mov	r0, r4
   13e34:	bl	18d0 <fread@plt>
   13e38:	mov	sl, r0
   13e3c:	cmp	r7, #1
   13e40:	blt	14cdc <ReadUInt8Data+0x13a8>
   13e44:	ldr	r1, [sp, #12]
   13e48:	ldrb	r0, [r4], #2
   13e4c:	subs	r7, r7, #1
   13e50:	strb	r0, [r1], #1
   13e54:	bne	13e48 <ReadUInt8Data+0x514>
   13e58:	b	14cdc <ReadUInt8Data+0x13a8>
   13e5c:	cmp	r7, #256	; 0x100
   13e60:	bgt	147c8 <ReadUInt8Data+0xe94>
   13e64:	ldr	r3, [r4]
   13e68:	add	r4, sp, #24
   13e6c:	mov	r1, r2
   13e70:	mov	r2, r7
   13e74:	mov	r0, r4
   13e78:	bl	18d0 <fread@plt>
   13e7c:	mov	sl, r0
   13e80:	cmp	r7, #1
   13e84:	blt	14cdc <ReadUInt8Data+0x13a8>
   13e88:	ldr	r1, [sp, #12]
   13e8c:	ldr	r0, [r4], #4
   13e90:	subs	r7, r7, #1
   13e94:	strb	r0, [r1], #1
   13e98:	bne	13e8c <ReadUInt8Data+0x558>
   13e9c:	b	14cdc <ReadUInt8Data+0x13a8>
   13ea0:	cmp	r7, #256	; 0x100
   13ea4:	bgt	14890 <ReadUInt8Data+0xf5c>
   13ea8:	ldr	r3, [r4]
   13eac:	add	r4, sp, #24
   13eb0:	mov	r1, r2
   13eb4:	mov	r2, r7
   13eb8:	mov	r0, r4
   13ebc:	bl	18d0 <fread@plt>
   13ec0:	mov	sl, r0
   13ec4:	cmp	r7, #1
   13ec8:	blt	14cdc <ReadUInt8Data+0x13a8>
   13ecc:	ldr	r1, [sp, #12]
   13ed0:	ldr	r0, [r4], #4
   13ed4:	subs	r7, r7, #1
   13ed8:	strb	r0, [r1], #1
   13edc:	bne	13ed0 <ReadUInt8Data+0x59c>
   13ee0:	b	14cdc <ReadUInt8Data+0x13a8>
   13ee4:	cmp	r7, #256	; 0x100
   13ee8:	bgt	14958 <ReadUInt8Data+0x1024>
   13eec:	ldr	r3, [r4]
   13ef0:	add	r4, sp, #24
   13ef4:	mov	r1, r2
   13ef8:	mov	r2, r7
   13efc:	mov	r0, r4
   13f00:	bl	18d0 <fread@plt>
   13f04:	mov	sl, r0
   13f08:	cmp	r7, #1
   13f0c:	blt	14cdc <ReadUInt8Data+0x13a8>
   13f10:	ldr	r1, [sp, #12]
   13f14:	vldr	s0, [r4]
   13f18:	add	r4, r4, #4
   13f1c:	subs	r7, r7, #1
   13f20:	vcvt.u32.f32	s0, s0
   13f24:	vmov	r0, s0
   13f28:	strb	r0, [r1], #1
   13f2c:	bne	13f14 <ReadUInt8Data+0x5e0>
   13f30:	b	14cdc <ReadUInt8Data+0x13a8>
   13f34:	cmp	r7, #256	; 0x100
   13f38:	bgt	14a30 <ReadUInt8Data+0x10fc>
   13f3c:	ldr	r3, [r4]
   13f40:	add	r4, sp, #24
   13f44:	mov	r1, r2
   13f48:	mov	r2, r7
   13f4c:	mov	r0, r4
   13f50:	bl	18d0 <fread@plt>
   13f54:	mov	sl, r0
   13f58:	cmp	r7, #1
   13f5c:	blt	14cdc <ReadUInt8Data+0x13a8>
   13f60:	ldr	r1, [sp, #12]
   13f64:	vldr	d16, [r4]
   13f68:	add	r4, r4, #8
   13f6c:	subs	r7, r7, #1
   13f70:	vcvt.u32.f64	s0, d16
   13f74:	vmov	r0, s0
   13f78:	strb	r0, [r1], #1
   13f7c:	bne	13f64 <ReadUInt8Data+0x630>
   13f80:	b	14cdc <ReadUInt8Data+0x13a8>
   13f84:	cmp	r7, #256	; 0x100
   13f88:	bgt	14b04 <ReadUInt8Data+0x11d0>
   13f8c:	ldr	r3, [r4]
   13f90:	add	r4, sp, #24
   13f94:	mov	r1, r2
   13f98:	mov	r2, r7
   13f9c:	mov	r0, r4
   13fa0:	bl	18d0 <fread@plt>
   13fa4:	mov	sl, r0
   13fa8:	cmp	r7, #1
   13fac:	blt	14bf8 <ReadUInt8Data+0x12c4>
   13fb0:	ldr	r6, [sp, #12]
   13fb4:	mov	r1, r7
   13fb8:	mov	r0, r6
   13fbc:	ldrb	r2, [r4], #8
   13fc0:	subs	r1, r1, #1
   13fc4:	strb	r2, [r0], #1
   13fc8:	bne	13fbc <ReadUInt8Data+0x688>
   13fcc:	b	14bfc <ReadUInt8Data+0x12c8>
   13fd0:	sub	r0, r7, #256	; 0x100
   13fd4:	add	r1, r6, #256	; 0x100
   13fd8:	mov	sl, #0
   13fdc:	str	r7, [sp, #4]
   13fe0:	str	r0, [sp, #8]
   13fe4:	mov	r0, #0
   13fe8:	ldr	r3, [r4]
   13fec:	add	r7, sp, #24
   13ff0:	mov	r8, r0
   13ff4:	mov	r9, r1
   13ff8:	mov	r1, r2
   13ffc:	mov	r2, #256	; 0x100
   14000:	mov	r5, r6
   14004:	mov	r0, r7
   14008:	bl	18d0 <fread@plt>
   1400c:	mov	r6, r7
   14010:	mov	r4, r0
   14014:	mov	r7, #0
   14018:	mov	r0, r6
   1401c:	bl	1c58 <Mat_int16Swap>
   14020:	strb	r0, [r5, r7]
   14024:	add	r7, r7, #1
   14028:	add	r6, r6, #2
   1402c:	cmp	r7, #256	; 0x100
   14030:	bne	14018 <ReadUInt8Data+0x6e4>
   14034:	ldr	r2, [sp, #8]
   14038:	add	r0, r8, #256	; 0x100
   1403c:	add	sl, r4, sl
   14040:	ldr	r4, [sp, #20]
   14044:	add	r5, r5, #256	; 0x100
   14048:	add	r1, r9, #256	; 0x100
   1404c:	mov	r6, r5
   14050:	cmp	r0, r2
   14054:	ldr	r2, [sp, #16]
   14058:	blt	13fe8 <ReadUInt8Data+0x6b4>
   1405c:	ldr	r7, [sp, #4]
   14060:	cmp	r0, r7
   14064:	bge	14dc8 <ReadUInt8Data+0x1494>
   14068:	ldr	r3, [r4]
   1406c:	sub	r6, r7, r0
   14070:	add	r4, sp, #24
   14074:	mov	r5, r2
   14078:	mov	r1, r2
   1407c:	mov	r0, r4
   14080:	mov	r2, r6
   14084:	bl	18d0 <fread@plt>
   14088:	add	sl, r0, sl
   1408c:	cmp	r6, #1
   14090:	blt	14dc4 <ReadUInt8Data+0x1490>
   14094:	sub	r0, r7, r8
   14098:	sub	r6, r0, #256	; 0x100
   1409c:	mov	r0, r4
   140a0:	bl	1c58 <Mat_int16Swap>
   140a4:	strb	r0, [r9], #1
   140a8:	add	r4, r4, #2
   140ac:	subs	r6, r6, #1
   140b0:	bne	1409c <ReadUInt8Data+0x768>
   140b4:	b	14dc4 <ReadUInt8Data+0x1490>
   140b8:	sub	r0, r7, #256	; 0x100
   140bc:	add	r1, r6, #256	; 0x100
   140c0:	mov	sl, #0
   140c4:	str	r7, [sp, #4]
   140c8:	str	r0, [sp, #8]
   140cc:	mov	r0, #0
   140d0:	ldr	r3, [r4]
   140d4:	add	r7, sp, #24
   140d8:	mov	r8, r0
   140dc:	mov	r9, r1
   140e0:	mov	r1, r2
   140e4:	mov	r2, #256	; 0x100
   140e8:	mov	r5, r6
   140ec:	mov	r0, r7
   140f0:	bl	18d0 <fread@plt>
   140f4:	mov	r6, r7
   140f8:	mov	r4, r0
   140fc:	mov	r7, #0
   14100:	mov	r0, r6
   14104:	bl	1c6c <Mat_uint16Swap>
   14108:	strb	r0, [r5, r7]
   1410c:	add	r7, r7, #1
   14110:	add	r6, r6, #2
   14114:	cmp	r7, #256	; 0x100
   14118:	bne	14100 <ReadUInt8Data+0x7cc>
   1411c:	ldr	r2, [sp, #8]
   14120:	add	r0, r8, #256	; 0x100
   14124:	add	sl, r4, sl
   14128:	ldr	r4, [sp, #20]
   1412c:	add	r5, r5, #256	; 0x100
   14130:	add	r1, r9, #256	; 0x100
   14134:	mov	r6, r5
   14138:	cmp	r0, r2
   1413c:	ldr	r2, [sp, #16]
   14140:	blt	140d0 <ReadUInt8Data+0x79c>
   14144:	ldr	r7, [sp, #4]
   14148:	cmp	r0, r7
   1414c:	bge	14dc8 <ReadUInt8Data+0x1494>
   14150:	ldr	r3, [r4]
   14154:	sub	r6, r7, r0
   14158:	add	r4, sp, #24
   1415c:	mov	r5, r2
   14160:	mov	r1, r2
   14164:	mov	r0, r4
   14168:	mov	r2, r6
   1416c:	bl	18d0 <fread@plt>
   14170:	add	sl, r0, sl
   14174:	cmp	r6, #1
   14178:	blt	14dc4 <ReadUInt8Data+0x1490>
   1417c:	sub	r0, r7, r8
   14180:	sub	r6, r0, #256	; 0x100
   14184:	mov	r0, r4
   14188:	bl	1c6c <Mat_uint16Swap>
   1418c:	strb	r0, [r9], #1
   14190:	add	r4, r4, #2
   14194:	subs	r6, r6, #1
   14198:	bne	14184 <ReadUInt8Data+0x850>
   1419c:	b	14dc4 <ReadUInt8Data+0x1490>
   141a0:	sub	r0, r7, #256	; 0x100
   141a4:	add	r1, r6, #256	; 0x100
   141a8:	mov	sl, #0
   141ac:	str	r7, [sp, #4]
   141b0:	str	r0, [sp, #8]
   141b4:	mov	r0, #0
   141b8:	ldr	r3, [r4]
   141bc:	add	r7, sp, #24
   141c0:	mov	r8, r0
   141c4:	mov	r9, r1
   141c8:	mov	r1, r2
   141cc:	mov	r2, #256	; 0x100
   141d0:	mov	r5, r6
   141d4:	mov	r0, r7
   141d8:	bl	18d0 <fread@plt>
   141dc:	mov	r6, r7
   141e0:	mov	r4, r0
   141e4:	mov	r7, #0
   141e8:	mov	r0, r6
   141ec:	bl	1c30 <Mat_int32Swap>
   141f0:	strb	r0, [r5, r7]
   141f4:	add	r7, r7, #1
   141f8:	add	r6, r6, #4
   141fc:	cmp	r7, #256	; 0x100
   14200:	bne	141e8 <ReadUInt8Data+0x8b4>
   14204:	ldr	r2, [sp, #8]
   14208:	add	r0, r8, #256	; 0x100
   1420c:	add	sl, r4, sl
   14210:	ldr	r4, [sp, #20]
   14214:	add	r5, r5, #256	; 0x100
   14218:	add	r1, r9, #256	; 0x100
   1421c:	mov	r6, r5
   14220:	cmp	r0, r2
   14224:	ldr	r2, [sp, #16]
   14228:	blt	141b8 <ReadUInt8Data+0x884>
   1422c:	ldr	r7, [sp, #4]
   14230:	cmp	r0, r7
   14234:	bge	14dc8 <ReadUInt8Data+0x1494>
   14238:	ldr	r3, [r4]
   1423c:	sub	r6, r7, r0
   14240:	add	r4, sp, #24
   14244:	mov	r5, r2
   14248:	mov	r1, r2
   1424c:	mov	r0, r4
   14250:	mov	r2, r6
   14254:	bl	18d0 <fread@plt>
   14258:	add	sl, r0, sl
   1425c:	cmp	r6, #1
   14260:	blt	14dc4 <ReadUInt8Data+0x1490>
   14264:	sub	r0, r7, r8
   14268:	sub	r6, r0, #256	; 0x100
   1426c:	mov	r0, r4
   14270:	bl	1c30 <Mat_int32Swap>
   14274:	strb	r0, [r9], #1
   14278:	add	r4, r4, #4
   1427c:	subs	r6, r6, #1
   14280:	bne	1426c <ReadUInt8Data+0x938>
   14284:	b	14dc4 <ReadUInt8Data+0x1490>
   14288:	sub	r0, r7, #256	; 0x100
   1428c:	add	r1, r6, #256	; 0x100
   14290:	mov	sl, #0
   14294:	str	r7, [sp, #4]
   14298:	str	r0, [sp, #8]
   1429c:	mov	r0, #0
   142a0:	ldr	r3, [r4]
   142a4:	add	r7, sp, #24
   142a8:	mov	r8, r0
   142ac:	mov	r9, r1
   142b0:	mov	r1, r2
   142b4:	mov	r2, #256	; 0x100
   142b8:	mov	r5, r6
   142bc:	mov	r0, r7
   142c0:	bl	18d0 <fread@plt>
   142c4:	mov	r6, r7
   142c8:	mov	r4, r0
   142cc:	mov	r7, #0
   142d0:	mov	r0, r6
   142d4:	bl	1c44 <Mat_uint32Swap>
   142d8:	strb	r0, [r5, r7]
   142dc:	add	r7, r7, #1
   142e0:	add	r6, r6, #4
   142e4:	cmp	r7, #256	; 0x100
   142e8:	bne	142d0 <ReadUInt8Data+0x99c>
   142ec:	ldr	r2, [sp, #8]
   142f0:	add	r0, r8, #256	; 0x100
   142f4:	add	sl, r4, sl
   142f8:	ldr	r4, [sp, #20]
   142fc:	add	r5, r5, #256	; 0x100
   14300:	add	r1, r9, #256	; 0x100
   14304:	mov	r6, r5
   14308:	cmp	r0, r2
   1430c:	ldr	r2, [sp, #16]
   14310:	blt	142a0 <ReadUInt8Data+0x96c>
   14314:	ldr	r7, [sp, #4]
   14318:	cmp	r0, r7
   1431c:	bge	14dc8 <ReadUInt8Data+0x1494>
   14320:	ldr	r3, [r4]
   14324:	sub	r6, r7, r0
   14328:	add	r4, sp, #24
   1432c:	mov	r5, r2
   14330:	mov	r1, r2
   14334:	mov	r0, r4
   14338:	mov	r2, r6
   1433c:	bl	18d0 <fread@plt>
   14340:	add	sl, r0, sl
   14344:	cmp	r6, #1
   14348:	blt	14dc4 <ReadUInt8Data+0x1490>
   1434c:	sub	r0, r7, r8
   14350:	sub	r6, r0, #256	; 0x100
   14354:	mov	r0, r4
   14358:	bl	1c44 <Mat_uint32Swap>
   1435c:	strb	r0, [r9], #1
   14360:	add	r4, r4, #4
   14364:	subs	r6, r6, #1
   14368:	bne	14354 <ReadUInt8Data+0xa20>
   1436c:	b	14dc4 <ReadUInt8Data+0x1490>
   14370:	sub	r0, r7, #256	; 0x100
   14374:	add	r1, r6, #256	; 0x100
   14378:	mov	sl, #0
   1437c:	str	r7, [sp, #4]
   14380:	str	r0, [sp, #8]
   14384:	mov	r0, #0
   14388:	ldr	r3, [r4]
   1438c:	add	r7, sp, #24
   14390:	mov	r8, r0
   14394:	mov	r9, r1
   14398:	mov	r1, r2
   1439c:	mov	r2, #256	; 0x100
   143a0:	mov	r5, r6
   143a4:	mov	r0, r7
   143a8:	bl	18d0 <fread@plt>
   143ac:	mov	r6, r7
   143b0:	mov	r4, r0
   143b4:	mov	r7, #0
   143b8:	mov	r0, r6
   143bc:	bl	1c84 <Mat_floatSwap>
   143c0:	vcvt.u32.f32	s0, s0
   143c4:	add	r6, r6, #4
   143c8:	vmov	r0, s0
   143cc:	strb	r0, [r5, r7]
   143d0:	add	r7, r7, #1
   143d4:	cmp	r7, #256	; 0x100
   143d8:	bne	143b8 <ReadUInt8Data+0xa84>
   143dc:	ldr	r2, [sp, #8]
   143e0:	add	r0, r8, #256	; 0x100
   143e4:	add	sl, r4, sl
   143e8:	ldr	r4, [sp, #20]
   143ec:	add	r5, r5, #256	; 0x100
   143f0:	add	r1, r9, #256	; 0x100
   143f4:	mov	r6, r5
   143f8:	cmp	r0, r2
   143fc:	ldr	r2, [sp, #16]
   14400:	blt	14388 <ReadUInt8Data+0xa54>
   14404:	ldr	r7, [sp, #4]
   14408:	cmp	r0, r7
   1440c:	bge	14dc8 <ReadUInt8Data+0x1494>
   14410:	ldr	r3, [r4]
   14414:	sub	r6, r7, r0
   14418:	add	r4, sp, #24
   1441c:	mov	r5, r2
   14420:	mov	r1, r2
   14424:	mov	r0, r4
   14428:	mov	r2, r6
   1442c:	bl	18d0 <fread@plt>
   14430:	add	sl, r0, sl
   14434:	cmp	r6, #1
   14438:	blt	14dc4 <ReadUInt8Data+0x1490>
   1443c:	sub	r0, r7, r8
   14440:	sub	r6, r0, #256	; 0x100
   14444:	mov	r0, r4
   14448:	bl	1c84 <Mat_floatSwap>
   1444c:	vcvt.u32.f32	s0, s0
   14450:	add	r4, r4, #4
   14454:	subs	r6, r6, #1
   14458:	vmov	r0, s0
   1445c:	strb	r0, [r9], #1
   14460:	bne	14444 <ReadUInt8Data+0xb10>
   14464:	b	14dc4 <ReadUInt8Data+0x1490>
   14468:	sub	r0, r7, #256	; 0x100
   1446c:	add	r1, r6, #256	; 0x100
   14470:	mov	sl, #0
   14474:	str	r7, [sp, #4]
   14478:	str	r0, [sp, #8]
   1447c:	mov	r0, #0
   14480:	ldr	r3, [r4]
   14484:	add	r7, sp, #24
   14488:	mov	r8, r0
   1448c:	mov	r9, r1
   14490:	mov	r1, r2
   14494:	mov	r2, #256	; 0x100
   14498:	mov	r5, r6
   1449c:	mov	r0, r7
   144a0:	bl	18d0 <fread@plt>
   144a4:	mov	r6, r7
   144a8:	mov	r4, r0
   144ac:	mov	r7, #0
   144b0:	mov	r0, r6
   144b4:	bl	1cc8 <Mat_doubleSwap>
   144b8:	vcvt.u32.f64	s0, d0
   144bc:	add	r6, r6, #8
   144c0:	vmov	r0, s0
   144c4:	strb	r0, [r5, r7]
   144c8:	add	r7, r7, #1
   144cc:	cmp	r7, #256	; 0x100
   144d0:	bne	144b0 <ReadUInt8Data+0xb7c>
   144d4:	ldr	r2, [sp, #8]
   144d8:	add	r0, r8, #256	; 0x100
   144dc:	add	sl, r4, sl
   144e0:	ldr	r4, [sp, #20]
   144e4:	add	r5, r5, #256	; 0x100
   144e8:	add	r1, r9, #256	; 0x100
   144ec:	mov	r6, r5
   144f0:	cmp	r0, r2
   144f4:	ldr	r2, [sp, #16]
   144f8:	blt	14480 <ReadUInt8Data+0xb4c>
   144fc:	ldr	r7, [sp, #4]
   14500:	cmp	r0, r7
   14504:	bge	14dc8 <ReadUInt8Data+0x1494>
   14508:	ldr	r3, [r4]
   1450c:	sub	r6, r7, r0
   14510:	add	r4, sp, #24
   14514:	mov	r5, r2
   14518:	mov	r1, r2
   1451c:	mov	r0, r4
   14520:	mov	r2, r6
   14524:	bl	18d0 <fread@plt>
   14528:	add	sl, r0, sl
   1452c:	cmp	r6, #1
   14530:	blt	14dc4 <ReadUInt8Data+0x1490>
   14534:	sub	r0, r7, r8
   14538:	sub	r6, r0, #256	; 0x100
   1453c:	mov	r0, r4
   14540:	bl	1cc8 <Mat_doubleSwap>
   14544:	vcvt.u32.f64	s0, d0
   14548:	add	r4, r4, #8
   1454c:	subs	r6, r6, #1
   14550:	vmov	r0, s0
   14554:	strb	r0, [r9], #1
   14558:	bne	1453c <ReadUInt8Data+0xc08>
   1455c:	b	14dc4 <ReadUInt8Data+0x1490>
   14560:	sub	r0, r7, #256	; 0x100
   14564:	str	r7, [sp, #4]
   14568:	add	r1, r6, #256	; 0x100
   1456c:	mov	r7, r6
   14570:	mov	sl, #0
   14574:	str	r5, [sp]
   14578:	str	r0, [sp, #8]
   1457c:	mov	r0, #0
   14580:	ldr	r3, [r4]
   14584:	add	r6, sp, #24
   14588:	mov	r5, r0
   1458c:	mov	r9, r1
   14590:	mov	r1, r2
   14594:	mov	r2, #256	; 0x100
   14598:	mov	r0, r6
   1459c:	bl	18d0 <fread@plt>
   145a0:	mov	r4, r0
   145a4:	mov	r8, #0
   145a8:	mov	r0, r6
   145ac:	bl	1bbc <Mat_int64Swap>
   145b0:	strb	r0, [r7, r8]
   145b4:	add	r8, r8, #1
   145b8:	add	r6, r6, #8
   145bc:	cmp	r8, #256	; 0x100
   145c0:	bne	145a8 <ReadUInt8Data+0xc74>
   145c4:	ldr	r2, [sp, #8]
   145c8:	add	r0, r5, #256	; 0x100
   145cc:	add	sl, r4, sl
   145d0:	ldr	r4, [sp, #20]
   145d4:	add	r7, r7, #256	; 0x100
   145d8:	add	r1, r9, #256	; 0x100
   145dc:	cmp	r0, r2
   145e0:	ldr	r2, [sp, #16]
   145e4:	blt	14580 <ReadUInt8Data+0xc4c>
   145e8:	ldr	r7, [sp, #4]
   145ec:	cmp	r0, r7
   145f0:	bge	14c04 <ReadUInt8Data+0x12d0>
   145f4:	ldr	r3, [r4]
   145f8:	sub	r6, r7, r0
   145fc:	add	r4, sp, #24
   14600:	mov	r1, r2
   14604:	mov	r0, r4
   14608:	mov	r2, r6
   1460c:	bl	18d0 <fread@plt>
   14610:	add	sl, r0, sl
   14614:	cmp	r6, #1
   14618:	blt	14c28 <ReadUInt8Data+0x12f4>
   1461c:	sub	r0, r7, r5
   14620:	sub	r6, r0, #256	; 0x100
   14624:	mov	r0, r4
   14628:	bl	1bbc <Mat_int64Swap>
   1462c:	strb	r0, [r9], #1
   14630:	add	r4, r4, #8
   14634:	subs	r6, r6, #1
   14638:	bne	14624 <ReadUInt8Data+0xcf0>
   1463c:	b	14c28 <ReadUInt8Data+0x12f4>
   14640:	add	r1, r6, #256	; 0x100
   14644:	sub	r4, r7, #256	; 0x100
   14648:	mov	r0, #0
   1464c:	add	r9, sp, #24
   14650:	mov	sl, #0
   14654:	mov	r8, r0
   14658:	ldr	r0, [sp, #20]
   1465c:	mov	r5, r1
   14660:	ldr	r1, [sp, #16]
   14664:	mov	r2, #256	; 0x100
   14668:	ldr	r3, [r0]
   1466c:	mov	r0, r9
   14670:	bl	18d0 <fread@plt>
   14674:	mov	r1, r9
   14678:	mov	r2, #0
   1467c:	vld1.16	{d16-d17}, [r1]!
   14680:	add	r3, r6, r2
   14684:	add	r2, r2, #8
   14688:	cmp	r2, #256	; 0x100
   1468c:	vmovn.i16	d16, q8
   14690:	vst1.8	{d16}, [r3]
   14694:	bne	1467c <ReadUInt8Data+0xd48>
   14698:	add	sl, r0, sl
   1469c:	add	r0, r8, #256	; 0x100
   146a0:	add	r6, r6, #256	; 0x100
   146a4:	add	r1, r5, #256	; 0x100
   146a8:	cmp	r0, r4
   146ac:	blt	14654 <ReadUInt8Data+0xd20>
   146b0:	cmp	r0, r7
   146b4:	bge	14cdc <ReadUInt8Data+0x13a8>
   146b8:	mov	r9, r7
   146bc:	sub	r7, r7, r0
   146c0:	ldr	r0, [sp, #20]
   146c4:	ldr	r1, [sp, #16]
   146c8:	add	r4, sp, #24
   146cc:	mov	r2, r7
   146d0:	ldr	r3, [r0]
   146d4:	mov	r0, r4
   146d8:	bl	18d0 <fread@plt>
   146dc:	add	sl, r0, sl
   146e0:	cmp	r7, #1
   146e4:	blt	14cdc <ReadUInt8Data+0x13a8>
   146e8:	sub	r0, r9, r8
   146ec:	sub	r0, r0, #256	; 0x100
   146f0:	ldrb	r1, [r4], #2
   146f4:	subs	r0, r0, #1
   146f8:	strb	r1, [r5], #1
   146fc:	bne	146f0 <ReadUInt8Data+0xdbc>
   14700:	b	14cdc <ReadUInt8Data+0x13a8>
   14704:	add	r1, r6, #256	; 0x100
   14708:	sub	r4, r7, #256	; 0x100
   1470c:	mov	r0, #0
   14710:	add	r9, sp, #24
   14714:	mov	sl, #0
   14718:	mov	r8, r0
   1471c:	ldr	r0, [sp, #20]
   14720:	mov	r5, r1
   14724:	ldr	r1, [sp, #16]
   14728:	mov	r2, #256	; 0x100
   1472c:	ldr	r3, [r0]
   14730:	mov	r0, r9
   14734:	bl	18d0 <fread@plt>
   14738:	mov	r1, r9
   1473c:	mov	r2, #0
   14740:	vld1.16	{d16-d17}, [r1]!
   14744:	add	r3, r6, r2
   14748:	add	r2, r2, #8
   1474c:	cmp	r2, #256	; 0x100
   14750:	vmovn.i16	d16, q8
   14754:	vst1.8	{d16}, [r3]
   14758:	bne	14740 <ReadUInt8Data+0xe0c>
   1475c:	add	sl, r0, sl
   14760:	add	r0, r8, #256	; 0x100
   14764:	add	r6, r6, #256	; 0x100
   14768:	add	r1, r5, #256	; 0x100
   1476c:	cmp	r0, r4
   14770:	blt	14718 <ReadUInt8Data+0xde4>
   14774:	cmp	r0, r7
   14778:	bge	14cdc <ReadUInt8Data+0x13a8>
   1477c:	mov	r9, r7
   14780:	sub	r7, r7, r0
   14784:	ldr	r0, [sp, #20]
   14788:	ldr	r1, [sp, #16]
   1478c:	add	r4, sp, #24
   14790:	mov	r2, r7
   14794:	ldr	r3, [r0]
   14798:	mov	r0, r4
   1479c:	bl	18d0 <fread@plt>
   147a0:	add	sl, r0, sl
   147a4:	cmp	r7, #1
   147a8:	blt	14cdc <ReadUInt8Data+0x13a8>
   147ac:	sub	r0, r9, r8
   147b0:	sub	r0, r0, #256	; 0x100
   147b4:	ldrb	r1, [r4], #2
   147b8:	subs	r0, r0, #1
   147bc:	strb	r1, [r5], #1
   147c0:	bne	147b4 <ReadUInt8Data+0xe80>
   147c4:	b	14cdc <ReadUInt8Data+0x13a8>
   147c8:	add	r1, r6, #256	; 0x100
   147cc:	sub	r4, r7, #256	; 0x100
   147d0:	mov	r0, #0
   147d4:	add	r9, sp, #24
   147d8:	mov	sl, #0
   147dc:	mov	r8, r0
   147e0:	ldr	r0, [sp, #20]
   147e4:	mov	r5, r1
   147e8:	ldr	r1, [sp, #16]
   147ec:	mov	r2, #256	; 0x100
   147f0:	ldr	r3, [r0]
   147f4:	mov	r0, r9
   147f8:	bl	18d0 <fread@plt>
   147fc:	mov	r1, r9
   14800:	mov	r2, #0
   14804:	vld1.32	{d16-d17}, [r1]!
   14808:	add	r3, r6, r2
   1480c:	add	r2, r2, #4
   14810:	cmp	r2, #256	; 0x100
   14814:	vmovn.i32	d16, q8
   14818:	vuzp.8	d16, d17
   1481c:	vst1.32	{d16[0]}, [r3]
   14820:	bne	14804 <ReadUInt8Data+0xed0>
   14824:	add	sl, r0, sl
   14828:	add	r0, r8, #256	; 0x100
   1482c:	add	r6, r6, #256	; 0x100
   14830:	add	r1, r5, #256	; 0x100
   14834:	cmp	r0, r4
   14838:	blt	147dc <ReadUInt8Data+0xea8>
   1483c:	cmp	r0, r7
   14840:	bge	14cdc <ReadUInt8Data+0x13a8>
   14844:	mov	r9, r7
   14848:	sub	r7, r7, r0
   1484c:	ldr	r0, [sp, #20]
   14850:	ldr	r1, [sp, #16]
   14854:	add	r4, sp, #24
   14858:	mov	r2, r7
   1485c:	ldr	r3, [r0]
   14860:	mov	r0, r4
   14864:	bl	18d0 <fread@plt>
   14868:	add	sl, r0, sl
   1486c:	cmp	r7, #1
   14870:	blt	14cdc <ReadUInt8Data+0x13a8>
   14874:	sub	r0, r9, r8
   14878:	sub	r0, r0, #256	; 0x100
   1487c:	ldr	r1, [r4], #4
   14880:	subs	r0, r0, #1
   14884:	strb	r1, [r5], #1
   14888:	bne	1487c <ReadUInt8Data+0xf48>
   1488c:	b	14cdc <ReadUInt8Data+0x13a8>
   14890:	add	r1, r6, #256	; 0x100
   14894:	sub	r4, r7, #256	; 0x100
   14898:	mov	r0, #0
   1489c:	add	r9, sp, #24
   148a0:	mov	sl, #0
   148a4:	mov	r8, r0
   148a8:	ldr	r0, [sp, #20]
   148ac:	mov	r5, r1
   148b0:	ldr	r1, [sp, #16]
   148b4:	mov	r2, #256	; 0x100
   148b8:	ldr	r3, [r0]
   148bc:	mov	r0, r9
   148c0:	bl	18d0 <fread@plt>
   148c4:	mov	r1, r9
   148c8:	mov	r2, #0
   148cc:	vld1.32	{d16-d17}, [r1]!
   148d0:	add	r3, r6, r2
   148d4:	add	r2, r2, #4
   148d8:	cmp	r2, #256	; 0x100
   148dc:	vmovn.i32	d16, q8
   148e0:	vuzp.8	d16, d17
   148e4:	vst1.32	{d16[0]}, [r3]
   148e8:	bne	148cc <ReadUInt8Data+0xf98>
   148ec:	add	sl, r0, sl
   148f0:	add	r0, r8, #256	; 0x100
   148f4:	add	r6, r6, #256	; 0x100
   148f8:	add	r1, r5, #256	; 0x100
   148fc:	cmp	r0, r4
   14900:	blt	148a4 <ReadUInt8Data+0xf70>
   14904:	cmp	r0, r7
   14908:	bge	14cdc <ReadUInt8Data+0x13a8>
   1490c:	mov	r9, r7
   14910:	sub	r7, r7, r0
   14914:	ldr	r0, [sp, #20]
   14918:	ldr	r1, [sp, #16]
   1491c:	add	r4, sp, #24
   14920:	mov	r2, r7
   14924:	ldr	r3, [r0]
   14928:	mov	r0, r4
   1492c:	bl	18d0 <fread@plt>
   14930:	add	sl, r0, sl
   14934:	cmp	r7, #1
   14938:	blt	14cdc <ReadUInt8Data+0x13a8>
   1493c:	sub	r0, r9, r8
   14940:	sub	r0, r0, #256	; 0x100
   14944:	ldr	r1, [r4], #4
   14948:	subs	r0, r0, #1
   1494c:	strb	r1, [r5], #1
   14950:	bne	14944 <ReadUInt8Data+0x1010>
   14954:	b	14cdc <ReadUInt8Data+0x13a8>
   14958:	add	r1, r6, #256	; 0x100
   1495c:	sub	r4, r7, #256	; 0x100
   14960:	mov	r0, #0
   14964:	add	r5, sp, #24
   14968:	mov	sl, #0
   1496c:	mov	r8, r0
   14970:	ldr	r0, [sp, #20]
   14974:	mov	r9, r1
   14978:	ldr	r1, [sp, #16]
   1497c:	mov	r2, #256	; 0x100
   14980:	ldr	r3, [r0]
   14984:	mov	r0, r5
   14988:	bl	18d0 <fread@plt>
   1498c:	mov	r1, r5
   14990:	mov	r2, #0
   14994:	vld1.32	{d16-d17}, [r1]!
   14998:	add	r3, r6, r2
   1499c:	add	r2, r2, #4
   149a0:	cmp	r2, #256	; 0x100
   149a4:	vcvt.s32.f32	q8, q8
   149a8:	vmovn.i32	d16, q8
   149ac:	vuzp.8	d16, d17
   149b0:	vst1.32	{d16[0]}, [r3]
   149b4:	bne	14994 <ReadUInt8Data+0x1060>
   149b8:	add	sl, r0, sl
   149bc:	add	r0, r8, #256	; 0x100
   149c0:	add	r6, r6, #256	; 0x100
   149c4:	add	r1, r9, #256	; 0x100
   149c8:	cmp	r0, r4
   149cc:	blt	1496c <ReadUInt8Data+0x1038>
   149d0:	cmp	r0, r7
   149d4:	bge	14cdc <ReadUInt8Data+0x13a8>
   149d8:	mov	r5, r7
   149dc:	sub	r7, r7, r0
   149e0:	ldr	r0, [sp, #20]
   149e4:	ldr	r1, [sp, #16]
   149e8:	add	r4, sp, #24
   149ec:	mov	r2, r7
   149f0:	ldr	r3, [r0]
   149f4:	mov	r0, r4
   149f8:	bl	18d0 <fread@plt>
   149fc:	add	sl, r0, sl
   14a00:	cmp	r7, #1
   14a04:	blt	14cdc <ReadUInt8Data+0x13a8>
   14a08:	sub	r0, r5, r8
   14a0c:	sub	r0, r0, #256	; 0x100
   14a10:	vldr	s0, [r4]
   14a14:	add	r4, r4, #4
   14a18:	subs	r0, r0, #1
   14a1c:	vcvt.u32.f32	s0, s0
   14a20:	vmov	r1, s0
   14a24:	strb	r1, [r9], #1
   14a28:	bne	14a10 <ReadUInt8Data+0x10dc>
   14a2c:	b	14cdc <ReadUInt8Data+0x13a8>
   14a30:	add	r1, r6, #256	; 0x100
   14a34:	sub	r4, r7, #256	; 0x100
   14a38:	mov	r0, #0
   14a3c:	add	r9, sp, #24
   14a40:	mov	sl, #0
   14a44:	mov	r8, r0
   14a48:	ldr	r0, [sp, #20]
   14a4c:	mov	r5, r1
   14a50:	ldr	r1, [sp, #16]
   14a54:	mov	r2, #256	; 0x100
   14a58:	ldr	r3, [r0]
   14a5c:	mov	r0, r9
   14a60:	bl	18d0 <fread@plt>
   14a64:	mov	r1, r9
   14a68:	mov	r2, #0
   14a6c:	vldr	d16, [r1]
   14a70:	add	r1, r1, #8
   14a74:	vcvt.u32.f64	s0, d16
   14a78:	vmov	r3, s0
   14a7c:	strb	r3, [r6, r2]
   14a80:	add	r2, r2, #1
   14a84:	cmp	r2, #256	; 0x100
   14a88:	bne	14a6c <ReadUInt8Data+0x1138>
   14a8c:	add	sl, r0, sl
   14a90:	add	r0, r8, #256	; 0x100
   14a94:	add	r6, r6, #256	; 0x100
   14a98:	add	r1, r5, #256	; 0x100
   14a9c:	cmp	r0, r4
   14aa0:	blt	14a44 <ReadUInt8Data+0x1110>
   14aa4:	cmp	r0, r7
   14aa8:	bge	14cdc <ReadUInt8Data+0x13a8>
   14aac:	mov	r9, r7
   14ab0:	sub	r7, r7, r0
   14ab4:	ldr	r0, [sp, #20]
   14ab8:	ldr	r1, [sp, #16]
   14abc:	add	r4, sp, #24
   14ac0:	mov	r2, r7
   14ac4:	ldr	r3, [r0]
   14ac8:	mov	r0, r4
   14acc:	bl	18d0 <fread@plt>
   14ad0:	add	sl, r0, sl
   14ad4:	cmp	r7, #1
   14ad8:	blt	14cdc <ReadUInt8Data+0x13a8>
   14adc:	sub	r0, r9, r8
   14ae0:	sub	r0, r0, #256	; 0x100
   14ae4:	vldr	d16, [r4]
   14ae8:	add	r4, r4, #8
   14aec:	subs	r0, r0, #1
   14af0:	vcvt.u32.f64	s0, d16
   14af4:	vmov	r1, s0
   14af8:	strb	r1, [r5], #1
   14afc:	bne	14ae4 <ReadUInt8Data+0x11b0>
   14b00:	b	14cdc <ReadUInt8Data+0x13a8>
   14b04:	sub	r0, r7, #256	; 0x100
   14b08:	add	r1, r6, #256	; 0x100
   14b0c:	add	r4, sp, #24
   14b10:	mov	sl, r6
   14b14:	mov	r9, #0
   14b18:	str	r5, [sp]
   14b1c:	str	r7, [sp, #4]
   14b20:	str	r0, [sp, #8]
   14b24:	mov	r0, #0
   14b28:	mov	r8, r0
   14b2c:	ldr	r0, [sp, #20]
   14b30:	mov	r6, r1
   14b34:	mov	r1, r2
   14b38:	mov	r2, #256	; 0x100
   14b3c:	ldr	r3, [r0]
   14b40:	mov	r0, r4
   14b44:	bl	18d0 <fread@plt>
   14b48:	mov	r1, r4
   14b4c:	mov	r2, #0
   14b50:	vld1.64	{d16-d17}, [r1]!
   14b54:	mov	r7, sl
   14b58:	vmovn.i64	d16, q8
   14b5c:	vmov.32	r3, d16[0]
   14b60:	strb	r3, [r7, r2]!
   14b64:	vmov.32	r3, d16[1]
   14b68:	add	r2, r2, #2
   14b6c:	cmp	r2, #256	; 0x100
   14b70:	strb	r3, [r7, #1]
   14b74:	bne	14b50 <ReadUInt8Data+0x121c>
   14b78:	ldr	r2, [sp, #8]
   14b7c:	add	r9, r0, r9
   14b80:	add	r0, r8, #256	; 0x100
   14b84:	add	sl, sl, #256	; 0x100
   14b88:	add	r1, r6, #256	; 0x100
   14b8c:	cmp	r0, r2
   14b90:	ldr	r2, [sp, #16]
   14b94:	blt	14b28 <ReadUInt8Data+0x11f4>
   14b98:	ldr	r7, [sp, #4]
   14b9c:	cmp	r0, r7
   14ba0:	bge	14c10 <ReadUInt8Data+0x12dc>
   14ba4:	mov	r5, r7
   14ba8:	sub	r7, r7, r0
   14bac:	ldr	r0, [sp, #20]
   14bb0:	add	r4, sp, #24
   14bb4:	mov	r1, r2
   14bb8:	mov	r2, r7
   14bbc:	ldr	r3, [r0]
   14bc0:	mov	r0, r4
   14bc4:	bl	18d0 <fread@plt>
   14bc8:	mov	sl, r9
   14bcc:	add	sl, r0, r9
   14bd0:	cmp	r7, #1
   14bd4:	blt	14c24 <ReadUInt8Data+0x12f0>
   14bd8:	sub	r0, r5, r8
   14bdc:	mov	r7, r5
   14be0:	ldr	r5, [sp]
   14be4:	sub	r0, r0, #256	; 0x100
   14be8:	ldrb	r1, [r4], #8
   14bec:	subs	r0, r0, #1
   14bf0:	strb	r1, [r6], #1
   14bf4:	bne	14be8 <ReadUInt8Data+0x12b4>
   14bf8:	ldr	r6, [sp, #12]
   14bfc:	ldr	r4, [sp, #20]
   14c00:	b	14c34 <ReadUInt8Data+0x1300>
   14c04:	ldr	r6, [sp, #12]
   14c08:	ldr	r5, [sp]
   14c0c:	b	14c38 <ReadUInt8Data+0x1304>
   14c10:	ldr	r6, [sp, #12]
   14c14:	ldr	r4, [sp, #20]
   14c18:	ldr	r5, [sp]
   14c1c:	mov	sl, r9
   14c20:	b	14c38 <ReadUInt8Data+0x1304>
   14c24:	mov	r7, r5
   14c28:	ldr	r6, [sp, #12]
   14c2c:	ldr	r4, [sp, #20]
   14c30:	ldr	r5, [sp]
   14c34:	ldr	r2, [sp, #16]
   14c38:	cmp	r5, #13
   14c3c:	bne	14dc8 <ReadUInt8Data+0x1494>
   14c40:	ldr	r0, [r4, #20]
   14c44:	cmp	r0, #0
   14c48:	beq	14c9c <ReadUInt8Data+0x1368>
   14c4c:	cmp	r7, #256	; 0x100
   14c50:	bgt	14ce4 <ReadUInt8Data+0x13b0>
   14c54:	ldr	r3, [r4]
   14c58:	add	r4, sp, #24
   14c5c:	mov	r1, r2
   14c60:	mov	r5, r2
   14c64:	mov	r2, r7
   14c68:	mov	r0, r4
   14c6c:	bl	18d0 <fread@plt>
   14c70:	add	sl, r0, sl
   14c74:	cmp	r7, #1
   14c78:	blt	14dc4 <ReadUInt8Data+0x1490>
   14c7c:	ldr	r5, [sp, #12]
   14c80:	mov	r0, r4
   14c84:	bl	1c0c <Mat_uint64Swap>
   14c88:	strb	r0, [r5], #1
   14c8c:	add	r4, r4, #8
   14c90:	subs	r7, r7, #1
   14c94:	bne	14c80 <ReadUInt8Data+0x134c>
   14c98:	b	14cdc <ReadUInt8Data+0x13a8>
   14c9c:	cmp	r7, #256	; 0x100
   14ca0:	bgt	14dd0 <ReadUInt8Data+0x149c>
   14ca4:	ldr	r3, [r4]
   14ca8:	add	r4, sp, #24
   14cac:	mov	r1, r2
   14cb0:	mov	r2, r7
   14cb4:	mov	r0, r4
   14cb8:	bl	18d0 <fread@plt>
   14cbc:	add	sl, r0, sl
   14cc0:	cmp	r7, #1
   14cc4:	blt	14cdc <ReadUInt8Data+0x13a8>
   14cc8:	ldr	r1, [sp, #12]
   14ccc:	ldrb	r0, [r4], #8
   14cd0:	subs	r7, r7, #1
   14cd4:	strb	r0, [r1], #1
   14cd8:	bne	14ccc <ReadUInt8Data+0x1398>
   14cdc:	ldr	r2, [sp, #16]
   14ce0:	b	14dc8 <ReadUInt8Data+0x1494>
   14ce4:	sub	r0, r7, #256	; 0x100
   14ce8:	add	r1, r6, #256	; 0x100
   14cec:	str	r7, [sp, #4]
   14cf0:	str	r0, [sp, #12]
   14cf4:	mov	r0, #0
   14cf8:	ldr	r3, [r4]
   14cfc:	add	r7, sp, #24
   14d00:	mov	r8, r0
   14d04:	mov	r9, r1
   14d08:	mov	r1, r2
   14d0c:	mov	r2, #256	; 0x100
   14d10:	mov	r5, r6
   14d14:	mov	r0, r7
   14d18:	bl	18d0 <fread@plt>
   14d1c:	mov	r6, r7
   14d20:	mov	r4, r0
   14d24:	mov	r7, #0
   14d28:	mov	r0, r6
   14d2c:	bl	1c0c <Mat_uint64Swap>
   14d30:	strb	r0, [r5, r7]
   14d34:	add	r7, r7, #1
   14d38:	add	r6, r6, #8
   14d3c:	cmp	r7, #256	; 0x100
   14d40:	bne	14d28 <ReadUInt8Data+0x13f4>
   14d44:	ldr	r2, [sp, #12]
   14d48:	add	r0, r8, #256	; 0x100
   14d4c:	add	sl, r4, sl
   14d50:	ldr	r4, [sp, #20]
   14d54:	add	r5, r5, #256	; 0x100
   14d58:	add	r1, r9, #256	; 0x100
   14d5c:	mov	r6, r5
   14d60:	cmp	r0, r2
   14d64:	ldr	r2, [sp, #16]
   14d68:	blt	14cf8 <ReadUInt8Data+0x13c4>
   14d6c:	ldr	r7, [sp, #4]
   14d70:	cmp	r0, r7
   14d74:	bge	14dc8 <ReadUInt8Data+0x1494>
   14d78:	ldr	r3, [r4]
   14d7c:	sub	r6, r7, r0
   14d80:	add	r4, sp, #24
   14d84:	mov	r5, r2
   14d88:	mov	r1, r2
   14d8c:	mov	r0, r4
   14d90:	mov	r2, r6
   14d94:	bl	18d0 <fread@plt>
   14d98:	add	sl, r0, sl
   14d9c:	cmp	r6, #1
   14da0:	blt	14dc4 <ReadUInt8Data+0x1490>
   14da4:	sub	r0, r7, r8
   14da8:	sub	r6, r0, #256	; 0x100
   14dac:	mov	r0, r4
   14db0:	bl	1c0c <Mat_uint64Swap>
   14db4:	strb	r0, [r9], #1
   14db8:	add	r4, r4, #8
   14dbc:	subs	r6, r6, #1
   14dc0:	bne	14dac <ReadUInt8Data+0x1478>
   14dc4:	mov	r2, r5
   14dc8:	mul	r0, sl, r2
   14dcc:	b	13958 <ReadUInt8Data+0x24>
   14dd0:	sub	r0, r7, #256	; 0x100
   14dd4:	add	r1, r6, #256	; 0x100
   14dd8:	add	r4, sp, #24
   14ddc:	str	r7, [sp, #4]
   14de0:	str	r0, [sp, #12]
   14de4:	mov	r0, #0
   14de8:	mov	r9, r0
   14dec:	ldr	r0, [sp, #20]
   14df0:	mov	r8, r1
   14df4:	mov	r7, r2
   14df8:	mov	r1, r2
   14dfc:	mov	r2, #256	; 0x100
   14e00:	ldr	r3, [r0]
   14e04:	mov	r0, r4
   14e08:	bl	18d0 <fread@plt>
   14e0c:	mov	r1, r4
   14e10:	mov	r2, #0
   14e14:	vld1.64	{d16-d17}, [r1]!
   14e18:	mov	r5, r6
   14e1c:	vmovn.i64	d16, q8
   14e20:	vmov.32	r3, d16[0]
   14e24:	strb	r3, [r5, r2]!
   14e28:	vmov.32	r3, d16[1]
   14e2c:	add	r2, r2, #2
   14e30:	cmp	r2, #256	; 0x100
   14e34:	strb	r3, [r5, #1]
   14e38:	bne	14e14 <ReadUInt8Data+0x14e0>
   14e3c:	ldr	r2, [sp, #12]
   14e40:	add	sl, r0, sl
   14e44:	add	r0, r9, #256	; 0x100
   14e48:	add	r6, r6, #256	; 0x100
   14e4c:	add	r1, r8, #256	; 0x100
   14e50:	cmp	r0, r2
   14e54:	mov	r2, r7
   14e58:	blt	14de8 <ReadUInt8Data+0x14b4>
   14e5c:	ldr	r5, [sp, #4]
   14e60:	mov	r6, r2
   14e64:	cmp	r0, r5
   14e68:	bge	14eb0 <ReadUInt8Data+0x157c>
   14e6c:	sub	r7, r5, r0
   14e70:	ldr	r0, [sp, #20]
   14e74:	add	r4, sp, #24
   14e78:	mov	r1, r6
   14e7c:	mov	r2, r7
   14e80:	ldr	r3, [r0]
   14e84:	mov	r0, r4
   14e88:	bl	18d0 <fread@plt>
   14e8c:	add	sl, r0, sl
   14e90:	cmp	r7, #1
   14e94:	blt	14eb0 <ReadUInt8Data+0x157c>
   14e98:	sub	r0, r5, r9
   14e9c:	sub	r0, r0, #256	; 0x100
   14ea0:	ldrb	r1, [r4], #8
   14ea4:	subs	r0, r0, #1
   14ea8:	strb	r1, [r8], #1
   14eac:	bne	14ea0 <ReadUInt8Data+0x156c>
   14eb0:	mov	r2, r6
   14eb4:	b	14dc8 <ReadUInt8Data+0x1494>

00014eb8 <ReadCompressedUInt8Data>:
   14eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ebc:	add	fp, sp, #28
   14ec0:	sub	sp, sp, #12
   14ec4:	mov	r7, r0
   14ec8:	mov	r0, #0
   14ecc:	cmp	r1, #0
   14ed0:	beq	153d8 <ReadCompressedUInt8Data+0x520>
   14ed4:	cmp	r7, #0
   14ed8:	movne	r5, r2
   14edc:	cmpne	r2, #0
   14ee0:	beq	153d8 <ReadCompressedUInt8Data+0x520>
   14ee4:	ldr	sl, [fp, #8]
   14ee8:	mov	r0, r3
   14eec:	mov	r4, r3
   14ef0:	mov	r6, r1
   14ef4:	bl	193c <Mat_SizeOf@plt>
   14ef8:	mov	r9, r0
   14efc:	sub	r0, r4, #1
   14f00:	cmp	r0, #12
   14f04:	bhi	153d4 <ReadCompressedUInt8Data+0x51c>
   14f08:	add	r1, pc, #4
   14f0c:	ldr	r0, [r1, r0, lsl #2]
   14f10:	add	pc, r1, r0
   14f14:	.word	0x00000034
   14f18:	.word	0x0000006c
   14f1c:	.word	0x000000a4
   14f20:	.word	0x000000ec
   14f24:	.word	0x00000134
   14f28:	.word	0x0000017c
   14f2c:	.word	0x000001c4
   14f30:	.word	0x000004c0
   14f34:	.word	0x00000214
   14f38:	.word	0x000004c0
   14f3c:	.word	0x000004c0
   14f40:	.word	0x00000264
   14f44:	.word	0x000002ac
   14f48:	cmp	sl, #1
   14f4c:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   14f50:	mov	r8, sp
   14f54:	mov	r4, sl
   14f58:	mov	r0, r7
   14f5c:	mov	r1, r6
   14f60:	mov	r2, r8
   14f64:	mov	r3, r9
   14f68:	bl	31dc <InflateData>
   14f6c:	ldrb	r0, [sp]
   14f70:	subs	r4, r4, #1
   14f74:	strb	r0, [r5], #1
   14f78:	bne	14f58 <ReadCompressedUInt8Data+0xa0>
   14f7c:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   14f80:	cmp	sl, #1
   14f84:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   14f88:	mov	r8, sp
   14f8c:	mov	r4, sl
   14f90:	mov	r0, r7
   14f94:	mov	r1, r6
   14f98:	mov	r2, r8
   14f9c:	mov	r3, r9
   14fa0:	bl	31dc <InflateData>
   14fa4:	ldrb	r0, [sp]
   14fa8:	subs	r4, r4, #1
   14fac:	strb	r0, [r5], #1
   14fb0:	bne	14f90 <ReadCompressedUInt8Data+0xd8>
   14fb4:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   14fb8:	ldr	r0, [r7, #20]
   14fbc:	cmp	r0, #0
   14fc0:	beq	15208 <ReadCompressedUInt8Data+0x350>
   14fc4:	cmp	sl, #1
   14fc8:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   14fcc:	mov	r8, sp
   14fd0:	mov	r4, sl
   14fd4:	mov	r0, r7
   14fd8:	mov	r1, r6
   14fdc:	mov	r2, r8
   14fe0:	mov	r3, r9
   14fe4:	bl	31dc <InflateData>
   14fe8:	mov	r0, r8
   14fec:	bl	1c58 <Mat_int16Swap>
   14ff0:	strb	r0, [r5], #1
   14ff4:	subs	r4, r4, #1
   14ff8:	bne	14fd4 <ReadCompressedUInt8Data+0x11c>
   14ffc:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15000:	ldr	r0, [r7, #20]
   15004:	cmp	r0, #0
   15008:	beq	15240 <ReadCompressedUInt8Data+0x388>
   1500c:	cmp	sl, #1
   15010:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15014:	mov	r8, sp
   15018:	mov	r4, sl
   1501c:	mov	r0, r7
   15020:	mov	r1, r6
   15024:	mov	r2, r8
   15028:	mov	r3, r9
   1502c:	bl	31dc <InflateData>
   15030:	mov	r0, r8
   15034:	bl	1c6c <Mat_uint16Swap>
   15038:	strb	r0, [r5], #1
   1503c:	subs	r4, r4, #1
   15040:	bne	1501c <ReadCompressedUInt8Data+0x164>
   15044:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15048:	ldr	r0, [r7, #20]
   1504c:	cmp	r0, #0
   15050:	beq	15278 <ReadCompressedUInt8Data+0x3c0>
   15054:	cmp	sl, #1
   15058:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   1505c:	mov	r8, sp
   15060:	mov	r4, sl
   15064:	mov	r0, r7
   15068:	mov	r1, r6
   1506c:	mov	r2, r8
   15070:	mov	r3, r9
   15074:	bl	31dc <InflateData>
   15078:	mov	r0, r8
   1507c:	bl	1c30 <Mat_int32Swap>
   15080:	strb	r0, [r5], #1
   15084:	subs	r4, r4, #1
   15088:	bne	15064 <ReadCompressedUInt8Data+0x1ac>
   1508c:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15090:	ldr	r0, [r7, #20]
   15094:	cmp	r0, #0
   15098:	beq	152b0 <ReadCompressedUInt8Data+0x3f8>
   1509c:	cmp	sl, #1
   150a0:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   150a4:	mov	r8, sp
   150a8:	mov	r4, sl
   150ac:	mov	r0, r7
   150b0:	mov	r1, r6
   150b4:	mov	r2, r8
   150b8:	mov	r3, r9
   150bc:	bl	31dc <InflateData>
   150c0:	mov	r0, r8
   150c4:	bl	1c44 <Mat_uint32Swap>
   150c8:	strb	r0, [r5], #1
   150cc:	subs	r4, r4, #1
   150d0:	bne	150ac <ReadCompressedUInt8Data+0x1f4>
   150d4:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   150d8:	ldr	r0, [r7, #20]
   150dc:	cmp	r0, #0
   150e0:	beq	152e8 <ReadCompressedUInt8Data+0x430>
   150e4:	cmp	sl, #1
   150e8:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   150ec:	mov	r8, sp
   150f0:	mov	r4, sl
   150f4:	mov	r0, r7
   150f8:	mov	r1, r6
   150fc:	mov	r2, r8
   15100:	mov	r3, r9
   15104:	bl	31dc <InflateData>
   15108:	mov	r0, r8
   1510c:	bl	1c84 <Mat_floatSwap>
   15110:	vcvt.u32.f32	s0, s0
   15114:	subs	r4, r4, #1
   15118:	vmov	r0, s0
   1511c:	strb	r0, [r5], #1
   15120:	bne	150f4 <ReadCompressedUInt8Data+0x23c>
   15124:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15128:	ldr	r0, [r7, #20]
   1512c:	cmp	r0, #0
   15130:	beq	15328 <ReadCompressedUInt8Data+0x470>
   15134:	cmp	sl, #1
   15138:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   1513c:	mov	r8, sp
   15140:	mov	r4, sl
   15144:	mov	r0, r7
   15148:	mov	r1, r6
   1514c:	mov	r2, r8
   15150:	mov	r3, r9
   15154:	bl	31dc <InflateData>
   15158:	mov	r0, r8
   1515c:	bl	1cc8 <Mat_doubleSwap>
   15160:	vcvt.u32.f64	s0, d0
   15164:	subs	r4, r4, #1
   15168:	vmov	r0, s0
   1516c:	strb	r0, [r5], #1
   15170:	bne	15144 <ReadCompressedUInt8Data+0x28c>
   15174:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15178:	ldr	r0, [r7, #20]
   1517c:	cmp	r0, #0
   15180:	beq	15368 <ReadCompressedUInt8Data+0x4b0>
   15184:	cmp	sl, #1
   15188:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   1518c:	mov	r8, sp
   15190:	mov	r4, sl
   15194:	mov	r0, r7
   15198:	mov	r1, r6
   1519c:	mov	r2, r8
   151a0:	mov	r3, r9
   151a4:	bl	31dc <InflateData>
   151a8:	mov	r0, r8
   151ac:	bl	1bbc <Mat_int64Swap>
   151b0:	strb	r0, [r5], #1
   151b4:	subs	r4, r4, #1
   151b8:	bne	15194 <ReadCompressedUInt8Data+0x2dc>
   151bc:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   151c0:	ldr	r0, [r7, #20]
   151c4:	cmp	r0, #0
   151c8:	beq	153a0 <ReadCompressedUInt8Data+0x4e8>
   151cc:	cmp	sl, #1
   151d0:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   151d4:	mov	r8, sp
   151d8:	mov	r4, sl
   151dc:	mov	r0, r7
   151e0:	mov	r1, r6
   151e4:	mov	r2, r8
   151e8:	mov	r3, r9
   151ec:	bl	31dc <InflateData>
   151f0:	mov	r0, r8
   151f4:	bl	1c0c <Mat_uint64Swap>
   151f8:	strb	r0, [r5], #1
   151fc:	subs	r4, r4, #1
   15200:	bne	151dc <ReadCompressedUInt8Data+0x324>
   15204:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15208:	cmp	sl, #1
   1520c:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15210:	mov	r8, sp
   15214:	mov	r4, sl
   15218:	mov	r0, r7
   1521c:	mov	r1, r6
   15220:	mov	r2, r8
   15224:	mov	r3, r9
   15228:	bl	31dc <InflateData>
   1522c:	ldrb	r0, [sp]
   15230:	subs	r4, r4, #1
   15234:	strb	r0, [r5], #1
   15238:	bne	15218 <ReadCompressedUInt8Data+0x360>
   1523c:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15240:	cmp	sl, #1
   15244:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15248:	mov	r8, sp
   1524c:	mov	r4, sl
   15250:	mov	r0, r7
   15254:	mov	r1, r6
   15258:	mov	r2, r8
   1525c:	mov	r3, r9
   15260:	bl	31dc <InflateData>
   15264:	ldrb	r0, [sp]
   15268:	subs	r4, r4, #1
   1526c:	strb	r0, [r5], #1
   15270:	bne	15250 <ReadCompressedUInt8Data+0x398>
   15274:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15278:	cmp	sl, #1
   1527c:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15280:	mov	r8, sp
   15284:	mov	r4, sl
   15288:	mov	r0, r7
   1528c:	mov	r1, r6
   15290:	mov	r2, r8
   15294:	mov	r3, r9
   15298:	bl	31dc <InflateData>
   1529c:	ldr	r0, [sp]
   152a0:	subs	r4, r4, #1
   152a4:	strb	r0, [r5], #1
   152a8:	bne	15288 <ReadCompressedUInt8Data+0x3d0>
   152ac:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   152b0:	cmp	sl, #1
   152b4:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   152b8:	mov	r8, sp
   152bc:	mov	r4, sl
   152c0:	mov	r0, r7
   152c4:	mov	r1, r6
   152c8:	mov	r2, r8
   152cc:	mov	r3, r9
   152d0:	bl	31dc <InflateData>
   152d4:	ldr	r0, [sp]
   152d8:	subs	r4, r4, #1
   152dc:	strb	r0, [r5], #1
   152e0:	bne	152c0 <ReadCompressedUInt8Data+0x408>
   152e4:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   152e8:	cmp	sl, #1
   152ec:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   152f0:	mov	r8, sp
   152f4:	mov	r4, sl
   152f8:	mov	r0, r7
   152fc:	mov	r1, r6
   15300:	mov	r2, r8
   15304:	mov	r3, r9
   15308:	bl	31dc <InflateData>
   1530c:	vldr	s0, [sp]
   15310:	subs	r4, r4, #1
   15314:	vcvt.u32.f32	s0, s0
   15318:	vmov	r0, s0
   1531c:	strb	r0, [r5], #1
   15320:	bne	152f8 <ReadCompressedUInt8Data+0x440>
   15324:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15328:	cmp	sl, #1
   1532c:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15330:	mov	r8, sp
   15334:	mov	r4, sl
   15338:	mov	r0, r7
   1533c:	mov	r1, r6
   15340:	mov	r2, r8
   15344:	mov	r3, r9
   15348:	bl	31dc <InflateData>
   1534c:	vldr	d16, [sp]
   15350:	subs	r4, r4, #1
   15354:	vcvt.u32.f64	s0, d16
   15358:	vmov	r0, s0
   1535c:	strb	r0, [r5], #1
   15360:	bne	15338 <ReadCompressedUInt8Data+0x480>
   15364:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   15368:	cmp	sl, #1
   1536c:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   15370:	mov	r8, sp
   15374:	mov	r4, sl
   15378:	mov	r0, r7
   1537c:	mov	r1, r6
   15380:	mov	r2, r8
   15384:	mov	r3, r9
   15388:	bl	31dc <InflateData>
   1538c:	ldrb	r0, [sp]
   15390:	subs	r4, r4, #1
   15394:	strb	r0, [r5], #1
   15398:	bne	15378 <ReadCompressedUInt8Data+0x4c0>
   1539c:	b	153d4 <ReadCompressedUInt8Data+0x51c>
   153a0:	cmp	sl, #1
   153a4:	blt	153d4 <ReadCompressedUInt8Data+0x51c>
   153a8:	mov	r8, sp
   153ac:	mov	r4, sl
   153b0:	mov	r0, r7
   153b4:	mov	r1, r6
   153b8:	mov	r2, r8
   153bc:	mov	r3, r9
   153c0:	bl	31dc <InflateData>
   153c4:	ldrb	r0, [sp]
   153c8:	subs	r4, r4, #1
   153cc:	strb	r0, [r5], #1
   153d0:	bne	153b0 <ReadCompressedUInt8Data+0x4f8>
   153d4:	mul	r0, r9, sl
   153d8:	sub	sp, fp, #28
   153dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000153e0 <ReadCompressedCharData>:
   153e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   153e4:	add	fp, sp, #24
   153e8:	cmp	r0, #0
   153ec:	mov	r9, #0
   153f0:	movne	r4, r2
   153f4:	cmpne	r2, #0
   153f8:	bne	15404 <ReadCompressedCharData+0x24>
   153fc:	mov	r0, r9
   15400:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15404:	mov	r6, r0
   15408:	ldr	r0, [r0]
   1540c:	cmp	r0, #0
   15410:	beq	153fc <ReadCompressedCharData+0x1c>
   15414:	ldr	r5, [fp, #8]
   15418:	mov	r0, r3
   1541c:	mov	r7, r3
   15420:	mov	r8, r1
   15424:	bl	193c <Mat_SizeOf@plt>
   15428:	mov	r9, r0
   1542c:	cmp	r7, #15
   15430:	bgt	15448 <ReadCompressedCharData+0x68>
   15434:	cmp	r7, #2
   15438:	beq	15458 <ReadCompressedCharData+0x78>
   1543c:	cmp	r7, #4
   15440:	beq	15474 <ReadCompressedCharData+0x94>
   15444:	b	154b8 <ReadCompressedCharData+0xd8>
   15448:	cmp	r7, #17
   1544c:	beq	15474 <ReadCompressedCharData+0x94>
   15450:	cmp	r7, #16
   15454:	bne	154b8 <ReadCompressedCharData+0xd8>
   15458:	mul	r9, r9, r5
   1545c:	mov	r0, r6
   15460:	mov	r1, r8
   15464:	mov	r2, r4
   15468:	mov	r3, r9
   1546c:	bl	31dc <InflateData>
   15470:	b	153fc <ReadCompressedCharData+0x1c>
   15474:	mul	r9, r9, r5
   15478:	mov	r0, r6
   1547c:	mov	r1, r8
   15480:	mov	r2, r4
   15484:	mov	r3, r9
   15488:	bl	31dc <InflateData>
   1548c:	ldr	r0, [r6, #20]
   15490:	cmp	r0, #0
   15494:	beq	153fc <ReadCompressedCharData+0x1c>
   15498:	cmp	r5, #1
   1549c:	blt	153fc <ReadCompressedCharData+0x1c>
   154a0:	mov	r0, r4
   154a4:	bl	1c6c <Mat_uint16Swap>
   154a8:	add	r4, r4, #2
   154ac:	subs	r5, r5, #1
   154b0:	bne	154a0 <ReadCompressedCharData+0xc0>
   154b4:	b	153fc <ReadCompressedCharData+0x1c>
   154b8:	ldr	r0, [pc, #16]	; 154d0 <ReadCompressedCharData+0xf0>
   154bc:	mov	r1, r7
   154c0:	add	r0, pc, r0
   154c4:	bl	1828 <Mat_Warning@plt>
   154c8:	mul	r9, r9, r5
   154cc:	b	153fc <ReadCompressedCharData+0x1c>
   154d0:	.word	0x000365e0

000154d4 <ReadCharData>:
   154d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154d8:	add	fp, sp, #24
   154dc:	sub	sp, sp, #8
   154e0:	cmp	r0, #0
   154e4:	mov	r4, #0
   154e8:	movne	r6, r1
   154ec:	cmpne	r1, #0
   154f0:	bne	15500 <ReadCharData+0x2c>
   154f4:	mov	r0, r4
   154f8:	sub	sp, fp, #24
   154fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15500:	mov	r7, r0
   15504:	ldr	r0, [r0]
   15508:	cmp	r0, #0
   1550c:	beq	154f4 <ReadCharData+0x20>
   15510:	mov	r0, r2
   15514:	mov	r5, r3
   15518:	mov	r9, r2
   1551c:	bl	193c <Mat_SizeOf@plt>
   15520:	mov	r8, r0
   15524:	cmp	r9, #15
   15528:	bgt	15540 <ReadCharData+0x6c>
   1552c:	cmp	r9, #2
   15530:	beq	15550 <ReadCharData+0x7c>
   15534:	cmp	r9, #4
   15538:	beq	1556c <ReadCharData+0x98>
   1553c:	b	155b8 <ReadCharData+0xe4>
   15540:	cmp	r9, #17
   15544:	beq	1556c <ReadCharData+0x98>
   15548:	cmp	r9, #16
   1554c:	bne	155b8 <ReadCharData+0xe4>
   15550:	ldr	r3, [r7]
   15554:	mov	r0, r6
   15558:	mov	r1, r8
   1555c:	mov	r2, r5
   15560:	sub	sp, fp, #24
   15564:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15568:	b	18d0 <fread@plt>
   1556c:	ldr	r0, [r7, #20]
   15570:	cmp	r0, #0
   15574:	beq	155cc <ReadCharData+0xf8>
   15578:	cmp	r5, #1
   1557c:	blt	15608 <ReadCharData+0x134>
   15580:	mov	r4, #0
   15584:	add	r9, sp, #6
   15588:	ldr	r3, [r7]
   1558c:	mov	r0, r9
   15590:	mov	r1, r8
   15594:	mov	r2, #1
   15598:	bl	18d0 <fread@plt>
   1559c:	add	r4, r0, r4
   155a0:	mov	r0, r9
   155a4:	bl	1c6c <Mat_uint16Swap>
   155a8:	strb	r0, [r6], #1
   155ac:	subs	r5, r5, #1
   155b0:	bne	15588 <ReadCharData+0xb4>
   155b4:	b	154f4 <ReadCharData+0x20>
   155b8:	ldr	r0, [pc, #80]	; 15610 <ReadCharData+0x13c>
   155bc:	mov	r1, r9
   155c0:	add	r0, pc, r0
   155c4:	bl	1828 <Mat_Warning@plt>
   155c8:	b	154f4 <ReadCharData+0x20>
   155cc:	cmp	r5, #1
   155d0:	blt	15608 <ReadCharData+0x134>
   155d4:	mov	r4, #0
   155d8:	add	r9, sp, #6
   155dc:	ldr	r3, [r7]
   155e0:	mov	r0, r9
   155e4:	mov	r1, r8
   155e8:	mov	r2, #1
   155ec:	bl	18d0 <fread@plt>
   155f0:	add	r4, r0, r4
   155f4:	ldrb	r0, [sp, #6]
   155f8:	subs	r5, r5, #1
   155fc:	strb	r0, [r6], #1
   15600:	bne	155dc <ReadCharData+0x108>
   15604:	b	154f4 <ReadCharData+0x20>
   15608:	mov	r4, #0
   1560c:	b	154f4 <ReadCharData+0x20>
   15610:	.word	0x0003652b

00015614 <ReadDataSlabN>:
   15614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15618:	add	fp, sp, #28
   1561c:	sub	sp, sp, #180	; 0xb4
   15620:	vmov.i32	q8, #0	; 0x00000000
   15624:	sub	r4, fp, #72	; 0x48
   15628:	mov	r6, r0
   1562c:	mov	r0, #36	; 0x24
   15630:	mov	r9, r2
   15634:	mov	r2, #0
   15638:	add	r5, sp, #96	; 0x60
   1563c:	add	r8, sp, #56	; 0x38
   15640:	mov	r7, r4
   15644:	cmp	r6, #0
   15648:	str	r2, [fp, #-40]	; 0xffffffd8
   1564c:	str	r2, [sp, #128]	; 0x80
   15650:	str	r2, [sp, #88]	; 0x58
   15654:	cmpne	r1, #0
   15658:	vst1.64	{d16-d17}, [r7], r0
   1565c:	str	r2, [r7]
   15660:	add	r7, r4, #16
   15664:	vst1.64	{d16-d17}, [r7]
   15668:	add	r7, r5, #16
   1566c:	vst1.64	{d16-d17}, [r7]
   15670:	mov	r7, r5
   15674:	vst1.64	{d16-d17}, [r7], r0
   15678:	str	r2, [r7]
   1567c:	add	r7, r8, #16
   15680:	vst1.64	{d16-d17}, [r7]
   15684:	mov	r7, r8
   15688:	vst1.64	{d16-d17}, [r7], r0
   1568c:	mvn	r0, #0
   15690:	str	r2, [r7]
   15694:	bne	156a0 <ReadDataSlabN+0x8c>
   15698:	sub	sp, fp, #28
   1569c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156a0:	ldr	r2, [fp, #8]
   156a4:	cmp	r2, #10
   156a8:	bgt	15698 <ReadDataSlabN+0x84>
   156ac:	ldr	r2, [fp, #24]
   156b0:	cmp	r2, #0
   156b4:	ldrne	r2, [fp, #20]
   156b8:	cmpne	r2, #0
   156bc:	beq	15698 <ReadDataSlabN+0x84>
   156c0:	ldr	r2, [fp, #16]
   156c4:	cmp	r2, #0
   156c8:	strne	r1, [sp, #36]	; 0x24
   156cc:	ldrne	r1, [r6]
   156d0:	strne	r3, [sp, #44]	; 0x2c
   156d4:	strne	r6, [sp, #48]	; 0x30
   156d8:	cmpne	r1, #0
   156dc:	beq	15698 <ReadDataSlabN+0x84>
   156e0:	ldr	r0, [sp, #44]	; 0x2c
   156e4:	bl	193c <Mat_SizeOf@plt>
   156e8:	sub	r2, r9, #6
   156ec:	cmp	r2, #9
   156f0:	bhi	18ee8 <ReadDataSlabN+0x38d4>
   156f4:	add	r1, pc, #12
   156f8:	ldr	r3, [fp, #12]
   156fc:	str	r0, [sp, #52]	; 0x34
   15700:	ldr	r2, [r1, r2, lsl #2]
   15704:	add	pc, r1, r2
   15708:	.word	0x00000028
   1570c:	.word	0x000000f4
   15710:	.word	0x000001c4
   15714:	.word	0x0000029c
   15718:	.word	0x00000374
   1571c:	.word	0x00000444
   15720:	.word	0x00000514
   15724:	.word	0x000005e4
   15728:	.word	0x000006b4
   1572c:	.word	0x00000784
   15730:	ldr	r0, [fp, #20]
   15734:	ldr	r6, [fp, #24]
   15738:	ldr	lr, [sp, #48]	; 0x30
   1573c:	mov	r9, #0
   15740:	ldr	r0, [r0]
   15744:	sub	r0, r0, #1
   15748:	str	r0, [fp, #-72]	; 0xffffffb8
   1574c:	ldr	ip, [r3]
   15750:	str	ip, [sp, #56]	; 0x38
   15754:	ldr	r0, [r6]
   15758:	str	r0, [sp, #24]
   1575c:	ldr	r0, [fp, #8]
   15760:	cmp	r0, #2
   15764:	blt	15f5c <ReadDataSlabN+0x948>
   15768:	ldr	sl, [fp, #16]
   1576c:	mov	r1, r3
   15770:	mov	r9, #0
   15774:	mov	r0, #1
   15778:	mov	r3, ip
   1577c:	ldr	r2, [fp, #20]
   15780:	ldr	r2, [r2, r0, lsl #2]
   15784:	str	r3, [r8, r0, lsl #2]
   15788:	sub	r5, r2, #1
   1578c:	ldr	r2, [fp, #12]
   15790:	str	r5, [r4, r0, lsl #2]
   15794:	mov	r4, #0
   15798:	ldr	r2, [r2, r0, lsl #2]
   1579c:	mov	r7, r2
   157a0:	mul	r3, r7, r3
   157a4:	ldr	r7, [r1, -r4, lsl #2]
   157a8:	add	r4, r4, #1
   157ac:	cmp	r0, r4
   157b0:	mul	r5, r5, r7
   157b4:	bne	157a0 <ReadDataSlabN+0x18c>
   157b8:	sub	r4, fp, #72	; 0x48
   157bc:	str	r3, [r8, r0, lsl #2]
   157c0:	add	r1, r1, #4
   157c4:	str	r5, [r4, r0, lsl #2]
   157c8:	ldr	r5, [sp, #24]
   157cc:	ldr	r7, [sl, r0, lsl #2]
   157d0:	mla	r9, r7, ip, r9
   157d4:	ldr	r7, [r6, r0, lsl #2]
   157d8:	add	r0, r0, #1
   157dc:	mov	ip, r3
   157e0:	mov	r3, r2
   157e4:	mul	r5, r7, r5
   157e8:	ldr	r7, [fp, #8]
   157ec:	str	r5, [sp, #24]
   157f0:	cmp	r0, r7
   157f4:	bne	1577c <ReadDataSlabN+0x168>
   157f8:	b	15f60 <ReadDataSlabN+0x94c>
   157fc:	ldr	r0, [fp, #20]
   15800:	ldr	r6, [fp, #24]
   15804:	ldr	lr, [sp, #48]	; 0x30
   15808:	mov	r9, #0
   1580c:	ldr	r0, [r0]
   15810:	mov	sl, r6
   15814:	sub	r0, r0, #1
   15818:	str	r0, [fp, #-72]	; 0xffffffb8
   1581c:	ldr	ip, [r3]
   15820:	str	ip, [sp, #56]	; 0x38
   15824:	ldr	r0, [r6]
   15828:	str	r0, [sp, #20]
   1582c:	ldr	r0, [fp, #8]
   15830:	cmp	r0, #2
   15834:	blt	1619c <ReadDataSlabN+0xb88>
   15838:	ldr	r6, [fp, #16]
   1583c:	mov	r1, r3
   15840:	mov	r9, #0
   15844:	mov	r0, #1
   15848:	mov	r3, ip
   1584c:	ldr	r2, [fp, #20]
   15850:	ldr	r2, [r2, r0, lsl #2]
   15854:	str	r3, [r8, r0, lsl #2]
   15858:	sub	r5, r2, #1
   1585c:	ldr	r2, [fp, #12]
   15860:	str	r5, [r4, r0, lsl #2]
   15864:	mov	r4, #0
   15868:	ldr	r2, [r2, r0, lsl #2]
   1586c:	mov	r7, r2
   15870:	mul	r3, r7, r3
   15874:	ldr	r7, [r1, -r4, lsl #2]
   15878:	add	r4, r4, #1
   1587c:	cmp	r0, r4
   15880:	mul	r5, r5, r7
   15884:	bne	15870 <ReadDataSlabN+0x25c>
   15888:	sub	r4, fp, #72	; 0x48
   1588c:	str	r3, [r8, r0, lsl #2]
   15890:	add	r1, r1, #4
   15894:	str	r5, [r4, r0, lsl #2]
   15898:	ldr	r5, [sp, #20]
   1589c:	ldr	r7, [r6, r0, lsl #2]
   158a0:	mla	r9, r7, ip, r9
   158a4:	ldr	r7, [sl, r0, lsl #2]
   158a8:	add	r0, r0, #1
   158ac:	mov	ip, r3
   158b0:	mov	r3, r2
   158b4:	mul	r5, r7, r5
   158b8:	ldr	r7, [fp, #8]
   158bc:	str	r5, [sp, #20]
   158c0:	cmp	r0, r7
   158c4:	bne	1584c <ReadDataSlabN+0x238>
   158c8:	b	161a0 <ReadDataSlabN+0xb8c>
   158cc:	ldr	r0, [fp, #20]
   158d0:	ldr	r6, [fp, #24]
   158d4:	ldr	r9, [sp, #48]	; 0x30
   158d8:	mov	r5, #0
   158dc:	ldr	r0, [r0]
   158e0:	mov	sl, r6
   158e4:	sub	r0, r0, #1
   158e8:	str	r0, [fp, #-72]	; 0xffffffb8
   158ec:	ldr	ip, [r3]
   158f0:	str	ip, [sp, #56]	; 0x38
   158f4:	ldr	r0, [r6]
   158f8:	str	r0, [sp, #20]
   158fc:	ldr	r0, [fp, #8]
   15900:	cmp	r0, #2
   15904:	blt	163dc <ReadDataSlabN+0xdc8>
   15908:	ldr	r6, [fp, #16]
   1590c:	mov	r1, r3
   15910:	mov	r5, #0
   15914:	mov	r0, #1
   15918:	mov	r3, ip
   1591c:	ldr	r2, [fp, #20]
   15920:	mov	r7, r4
   15924:	ldr	r2, [r2, r0, lsl #2]
   15928:	str	r3, [r8, r0, lsl #2]
   1592c:	sub	r4, r2, #1
   15930:	ldr	r2, [fp, #12]
   15934:	str	r4, [r7, r0, lsl #2]
   15938:	ldr	lr, [r2, r0, lsl #2]
   1593c:	mov	r2, #0
   15940:	mov	r7, lr
   15944:	mul	r3, r7, r3
   15948:	ldr	r7, [r1, -r2, lsl #2]
   1594c:	add	r2, r2, #1
   15950:	cmp	r0, r2
   15954:	mul	r4, r4, r7
   15958:	bne	15944 <ReadDataSlabN+0x330>
   1595c:	sub	r2, fp, #72	; 0x48
   15960:	str	r3, [r8, r0, lsl #2]
   15964:	ldr	r7, [sp, #20]
   15968:	add	r1, r1, #4
   1596c:	str	r4, [r2, r0, lsl #2]
   15970:	mov	r4, r2
   15974:	ldr	r2, [r6, r0, lsl #2]
   15978:	mla	r5, r2, ip, r5
   1597c:	ldr	r2, [sl, r0, lsl #2]
   15980:	add	r0, r0, #1
   15984:	mov	ip, r3
   15988:	mov	r3, lr
   1598c:	mul	r7, r2, r7
   15990:	ldr	r2, [fp, #8]
   15994:	str	r7, [sp, #20]
   15998:	cmp	r0, r2
   1599c:	bne	1591c <ReadDataSlabN+0x308>
   159a0:	b	163e0 <ReadDataSlabN+0xdcc>
   159a4:	ldr	r0, [fp, #20]
   159a8:	ldr	r6, [fp, #24]
   159ac:	ldr	r9, [sp, #48]	; 0x30
   159b0:	mov	r5, #0
   159b4:	ldr	r0, [r0]
   159b8:	mov	sl, r6
   159bc:	sub	r0, r0, #1
   159c0:	str	r0, [fp, #-72]	; 0xffffffb8
   159c4:	ldr	ip, [r3]
   159c8:	str	ip, [sp, #56]	; 0x38
   159cc:	ldr	r0, [r6]
   159d0:	str	r0, [sp, #20]
   159d4:	ldr	r0, [fp, #8]
   159d8:	cmp	r0, #2
   159dc:	blt	1662c <ReadDataSlabN+0x1018>
   159e0:	ldr	r6, [fp, #16]
   159e4:	mov	r1, r3
   159e8:	mov	r5, #0
   159ec:	mov	r0, #1
   159f0:	mov	r3, ip
   159f4:	ldr	r2, [fp, #20]
   159f8:	mov	r7, r4
   159fc:	ldr	r2, [r2, r0, lsl #2]
   15a00:	str	r3, [r8, r0, lsl #2]
   15a04:	sub	r4, r2, #1
   15a08:	ldr	r2, [fp, #12]
   15a0c:	str	r4, [r7, r0, lsl #2]
   15a10:	ldr	lr, [r2, r0, lsl #2]
   15a14:	mov	r2, #0
   15a18:	mov	r7, lr
   15a1c:	mul	r3, r7, r3
   15a20:	ldr	r7, [r1, -r2, lsl #2]
   15a24:	add	r2, r2, #1
   15a28:	cmp	r0, r2
   15a2c:	mul	r4, r4, r7
   15a30:	bne	15a1c <ReadDataSlabN+0x408>
   15a34:	sub	r2, fp, #72	; 0x48
   15a38:	str	r3, [r8, r0, lsl #2]
   15a3c:	ldr	r7, [sp, #20]
   15a40:	add	r1, r1, #4
   15a44:	str	r4, [r2, r0, lsl #2]
   15a48:	mov	r4, r2
   15a4c:	ldr	r2, [r6, r0, lsl #2]
   15a50:	mla	r5, r2, ip, r5
   15a54:	ldr	r2, [sl, r0, lsl #2]
   15a58:	add	r0, r0, #1
   15a5c:	mov	ip, r3
   15a60:	mov	r3, lr
   15a64:	mul	r7, r2, r7
   15a68:	ldr	r2, [fp, #8]
   15a6c:	str	r7, [sp, #20]
   15a70:	cmp	r0, r2
   15a74:	bne	159f4 <ReadDataSlabN+0x3e0>
   15a78:	b	16630 <ReadDataSlabN+0x101c>
   15a7c:	ldr	r0, [fp, #20]
   15a80:	ldr	r6, [fp, #24]
   15a84:	ldr	lr, [sp, #48]	; 0x30
   15a88:	mov	r9, #0
   15a8c:	ldr	r0, [r0]
   15a90:	mov	sl, r6
   15a94:	sub	r0, r0, #1
   15a98:	str	r0, [fp, #-72]	; 0xffffffb8
   15a9c:	ldr	ip, [r3]
   15aa0:	str	ip, [sp, #56]	; 0x38
   15aa4:	ldr	r0, [r6]
   15aa8:	str	r0, [sp, #20]
   15aac:	ldr	r0, [fp, #8]
   15ab0:	cmp	r0, #2
   15ab4:	blt	16878 <ReadDataSlabN+0x1264>
   15ab8:	ldr	r6, [fp, #16]
   15abc:	mov	r1, r3
   15ac0:	mov	r9, #0
   15ac4:	mov	r0, #1
   15ac8:	mov	r3, ip
   15acc:	ldr	r2, [fp, #20]
   15ad0:	ldr	r2, [r2, r0, lsl #2]
   15ad4:	str	r3, [r8, r0, lsl #2]
   15ad8:	sub	r5, r2, #1
   15adc:	ldr	r2, [fp, #12]
   15ae0:	str	r5, [r4, r0, lsl #2]
   15ae4:	mov	r4, #0
   15ae8:	ldr	r2, [r2, r0, lsl #2]
   15aec:	mov	r7, r2
   15af0:	mul	r3, r7, r3
   15af4:	ldr	r7, [r1, -r4, lsl #2]
   15af8:	add	r4, r4, #1
   15afc:	cmp	r0, r4
   15b00:	mul	r5, r5, r7
   15b04:	bne	15af0 <ReadDataSlabN+0x4dc>
   15b08:	sub	r4, fp, #72	; 0x48
   15b0c:	str	r3, [r8, r0, lsl #2]
   15b10:	add	r1, r1, #4
   15b14:	str	r5, [r4, r0, lsl #2]
   15b18:	ldr	r5, [sp, #20]
   15b1c:	ldr	r7, [r6, r0, lsl #2]
   15b20:	mla	r9, r7, ip, r9
   15b24:	ldr	r7, [sl, r0, lsl #2]
   15b28:	add	r0, r0, #1
   15b2c:	mov	ip, r3
   15b30:	mov	r3, r2
   15b34:	mul	r5, r7, r5
   15b38:	ldr	r7, [fp, #8]
   15b3c:	str	r5, [sp, #20]
   15b40:	cmp	r0, r7
   15b44:	bne	15acc <ReadDataSlabN+0x4b8>
   15b48:	b	1687c <ReadDataSlabN+0x1268>
   15b4c:	ldr	r0, [fp, #20]
   15b50:	ldr	r6, [fp, #24]
   15b54:	ldr	lr, [sp, #48]	; 0x30
   15b58:	mov	r9, #0
   15b5c:	ldr	r0, [r0]
   15b60:	mov	sl, r6
   15b64:	sub	r0, r0, #1
   15b68:	str	r0, [fp, #-72]	; 0xffffffb8
   15b6c:	ldr	ip, [r3]
   15b70:	str	ip, [sp, #56]	; 0x38
   15b74:	ldr	r0, [r6]
   15b78:	str	r0, [sp, #20]
   15b7c:	ldr	r0, [fp, #8]
   15b80:	cmp	r0, #2
   15b84:	blt	16ab8 <ReadDataSlabN+0x14a4>
   15b88:	ldr	r6, [fp, #16]
   15b8c:	mov	r1, r3
   15b90:	mov	r9, #0
   15b94:	mov	r0, #1
   15b98:	mov	r3, ip
   15b9c:	ldr	r2, [fp, #20]
   15ba0:	ldr	r2, [r2, r0, lsl #2]
   15ba4:	str	r3, [r8, r0, lsl #2]
   15ba8:	sub	r5, r2, #1
   15bac:	ldr	r2, [fp, #12]
   15bb0:	str	r5, [r4, r0, lsl #2]
   15bb4:	mov	r4, #0
   15bb8:	ldr	r2, [r2, r0, lsl #2]
   15bbc:	mov	r7, r2
   15bc0:	mul	r3, r7, r3
   15bc4:	ldr	r7, [r1, -r4, lsl #2]
   15bc8:	add	r4, r4, #1
   15bcc:	cmp	r0, r4
   15bd0:	mul	r5, r5, r7
   15bd4:	bne	15bc0 <ReadDataSlabN+0x5ac>
   15bd8:	sub	r4, fp, #72	; 0x48
   15bdc:	str	r3, [r8, r0, lsl #2]
   15be0:	add	r1, r1, #4
   15be4:	str	r5, [r4, r0, lsl #2]
   15be8:	ldr	r5, [sp, #20]
   15bec:	ldr	r7, [r6, r0, lsl #2]
   15bf0:	mla	r9, r7, ip, r9
   15bf4:	ldr	r7, [sl, r0, lsl #2]
   15bf8:	add	r0, r0, #1
   15bfc:	mov	ip, r3
   15c00:	mov	r3, r2
   15c04:	mul	r5, r7, r5
   15c08:	ldr	r7, [fp, #8]
   15c0c:	str	r5, [sp, #20]
   15c10:	cmp	r0, r7
   15c14:	bne	15b9c <ReadDataSlabN+0x588>
   15c18:	b	16abc <ReadDataSlabN+0x14a8>
   15c1c:	ldr	r0, [fp, #20]
   15c20:	ldr	r6, [fp, #24]
   15c24:	ldr	lr, [sp, #48]	; 0x30
   15c28:	mov	r9, #0
   15c2c:	ldr	r0, [r0]
   15c30:	mov	sl, r6
   15c34:	sub	r0, r0, #1
   15c38:	str	r0, [fp, #-72]	; 0xffffffb8
   15c3c:	ldr	ip, [r3]
   15c40:	str	ip, [sp, #56]	; 0x38
   15c44:	ldr	r0, [r6]
   15c48:	str	r0, [sp, #20]
   15c4c:	ldr	r0, [fp, #8]
   15c50:	cmp	r0, #2
   15c54:	blt	16cf8 <ReadDataSlabN+0x16e4>
   15c58:	ldr	r6, [fp, #16]
   15c5c:	mov	r1, r3
   15c60:	mov	r9, #0
   15c64:	mov	r0, #1
   15c68:	mov	r3, ip
   15c6c:	ldr	r2, [fp, #20]
   15c70:	ldr	r2, [r2, r0, lsl #2]
   15c74:	str	r3, [r8, r0, lsl #2]
   15c78:	sub	r5, r2, #1
   15c7c:	ldr	r2, [fp, #12]
   15c80:	str	r5, [r4, r0, lsl #2]
   15c84:	mov	r4, #0
   15c88:	ldr	r2, [r2, r0, lsl #2]
   15c8c:	mov	r7, r2
   15c90:	mul	r3, r7, r3
   15c94:	ldr	r7, [r1, -r4, lsl #2]
   15c98:	add	r4, r4, #1
   15c9c:	cmp	r0, r4
   15ca0:	mul	r5, r5, r7
   15ca4:	bne	15c90 <ReadDataSlabN+0x67c>
   15ca8:	sub	r4, fp, #72	; 0x48
   15cac:	str	r3, [r8, r0, lsl #2]
   15cb0:	add	r1, r1, #4
   15cb4:	str	r5, [r4, r0, lsl #2]
   15cb8:	ldr	r5, [sp, #20]
   15cbc:	ldr	r7, [r6, r0, lsl #2]
   15cc0:	mla	r9, r7, ip, r9
   15cc4:	ldr	r7, [sl, r0, lsl #2]
   15cc8:	add	r0, r0, #1
   15ccc:	mov	ip, r3
   15cd0:	mov	r3, r2
   15cd4:	mul	r5, r7, r5
   15cd8:	ldr	r7, [fp, #8]
   15cdc:	str	r5, [sp, #20]
   15ce0:	cmp	r0, r7
   15ce4:	bne	15c6c <ReadDataSlabN+0x658>
   15ce8:	b	16cfc <ReadDataSlabN+0x16e8>
   15cec:	ldr	r0, [fp, #20]
   15cf0:	ldr	r6, [fp, #24]
   15cf4:	ldr	lr, [sp, #48]	; 0x30
   15cf8:	mov	r9, #0
   15cfc:	ldr	r0, [r0]
   15d00:	mov	sl, r6
   15d04:	sub	r0, r0, #1
   15d08:	str	r0, [fp, #-72]	; 0xffffffb8
   15d0c:	ldr	ip, [r3]
   15d10:	str	ip, [sp, #56]	; 0x38
   15d14:	ldr	r0, [r6]
   15d18:	str	r0, [sp, #20]
   15d1c:	ldr	r0, [fp, #8]
   15d20:	cmp	r0, #2
   15d24:	blt	16f38 <ReadDataSlabN+0x1924>
   15d28:	ldr	r6, [fp, #16]
   15d2c:	mov	r1, r3
   15d30:	mov	r9, #0
   15d34:	mov	r0, #1
   15d38:	mov	r3, ip
   15d3c:	ldr	r2, [fp, #20]
   15d40:	ldr	r2, [r2, r0, lsl #2]
   15d44:	str	r3, [r8, r0, lsl #2]
   15d48:	sub	r5, r2, #1
   15d4c:	ldr	r2, [fp, #12]
   15d50:	str	r5, [r4, r0, lsl #2]
   15d54:	mov	r4, #0
   15d58:	ldr	r2, [r2, r0, lsl #2]
   15d5c:	mov	r7, r2
   15d60:	mul	r3, r7, r3
   15d64:	ldr	r7, [r1, -r4, lsl #2]
   15d68:	add	r4, r4, #1
   15d6c:	cmp	r0, r4
   15d70:	mul	r5, r5, r7
   15d74:	bne	15d60 <ReadDataSlabN+0x74c>
   15d78:	sub	r4, fp, #72	; 0x48
   15d7c:	str	r3, [r8, r0, lsl #2]
   15d80:	add	r1, r1, #4
   15d84:	str	r5, [r4, r0, lsl #2]
   15d88:	ldr	r5, [sp, #20]
   15d8c:	ldr	r7, [r6, r0, lsl #2]
   15d90:	mla	r9, r7, ip, r9
   15d94:	ldr	r7, [sl, r0, lsl #2]
   15d98:	add	r0, r0, #1
   15d9c:	mov	ip, r3
   15da0:	mov	r3, r2
   15da4:	mul	r5, r7, r5
   15da8:	ldr	r7, [fp, #8]
   15dac:	str	r5, [sp, #20]
   15db0:	cmp	r0, r7
   15db4:	bne	15d3c <ReadDataSlabN+0x728>
   15db8:	b	16f3c <ReadDataSlabN+0x1928>
   15dbc:	ldr	r0, [fp, #20]
   15dc0:	ldr	r6, [fp, #24]
   15dc4:	ldr	lr, [sp, #48]	; 0x30
   15dc8:	mov	r9, #0
   15dcc:	ldr	r0, [r0]
   15dd0:	mov	sl, r6
   15dd4:	sub	r0, r0, #1
   15dd8:	str	r0, [fp, #-72]	; 0xffffffb8
   15ddc:	ldr	ip, [r3]
   15de0:	str	ip, [sp, #56]	; 0x38
   15de4:	ldr	r0, [r6]
   15de8:	str	r0, [sp, #20]
   15dec:	ldr	r0, [fp, #8]
   15df0:	cmp	r0, #2
   15df4:	blt	17178 <ReadDataSlabN+0x1b64>
   15df8:	ldr	r6, [fp, #16]
   15dfc:	mov	r1, r3
   15e00:	mov	r9, #0
   15e04:	mov	r0, #1
   15e08:	mov	r3, ip
   15e0c:	ldr	r2, [fp, #20]
   15e10:	ldr	r2, [r2, r0, lsl #2]
   15e14:	str	r3, [r8, r0, lsl #2]
   15e18:	sub	r5, r2, #1
   15e1c:	ldr	r2, [fp, #12]
   15e20:	str	r5, [r4, r0, lsl #2]
   15e24:	mov	r4, #0
   15e28:	ldr	r2, [r2, r0, lsl #2]
   15e2c:	mov	r7, r2
   15e30:	mul	r3, r7, r3
   15e34:	ldr	r7, [r1, -r4, lsl #2]
   15e38:	add	r4, r4, #1
   15e3c:	cmp	r0, r4
   15e40:	mul	r5, r5, r7
   15e44:	bne	15e30 <ReadDataSlabN+0x81c>
   15e48:	sub	r4, fp, #72	; 0x48
   15e4c:	str	r3, [r8, r0, lsl #2]
   15e50:	add	r1, r1, #4
   15e54:	str	r5, [r4, r0, lsl #2]
   15e58:	ldr	r5, [sp, #20]
   15e5c:	ldr	r7, [r6, r0, lsl #2]
   15e60:	mla	r9, r7, ip, r9
   15e64:	ldr	r7, [sl, r0, lsl #2]
   15e68:	add	r0, r0, #1
   15e6c:	mov	ip, r3
   15e70:	mov	r3, r2
   15e74:	mul	r5, r7, r5
   15e78:	ldr	r7, [fp, #8]
   15e7c:	str	r5, [sp, #20]
   15e80:	cmp	r0, r7
   15e84:	bne	15e0c <ReadDataSlabN+0x7f8>
   15e88:	b	1717c <ReadDataSlabN+0x1b68>
   15e8c:	ldr	r0, [fp, #20]
   15e90:	ldr	r6, [fp, #24]
   15e94:	ldr	lr, [sp, #48]	; 0x30
   15e98:	mov	r9, #0
   15e9c:	ldr	r0, [r0]
   15ea0:	mov	sl, r6
   15ea4:	sub	r0, r0, #1
   15ea8:	str	r0, [fp, #-72]	; 0xffffffb8
   15eac:	ldr	ip, [r3]
   15eb0:	str	ip, [sp, #56]	; 0x38
   15eb4:	ldr	r0, [r6]
   15eb8:	str	r0, [sp, #20]
   15ebc:	ldr	r0, [fp, #8]
   15ec0:	cmp	r0, #2
   15ec4:	blt	173b8 <ReadDataSlabN+0x1da4>
   15ec8:	ldr	r6, [fp, #16]
   15ecc:	mov	r1, r3
   15ed0:	mov	r9, #0
   15ed4:	mov	r0, #1
   15ed8:	mov	r3, ip
   15edc:	ldr	r2, [fp, #20]
   15ee0:	ldr	r2, [r2, r0, lsl #2]
   15ee4:	str	r3, [r8, r0, lsl #2]
   15ee8:	sub	r5, r2, #1
   15eec:	ldr	r2, [fp, #12]
   15ef0:	str	r5, [r4, r0, lsl #2]
   15ef4:	mov	r4, #0
   15ef8:	ldr	r2, [r2, r0, lsl #2]
   15efc:	mov	r7, r2
   15f00:	mul	r3, r7, r3
   15f04:	ldr	r7, [r1, -r4, lsl #2]
   15f08:	add	r4, r4, #1
   15f0c:	cmp	r0, r4
   15f10:	mul	r5, r5, r7
   15f14:	bne	15f00 <ReadDataSlabN+0x8ec>
   15f18:	sub	r4, fp, #72	; 0x48
   15f1c:	str	r3, [r8, r0, lsl #2]
   15f20:	add	r1, r1, #4
   15f24:	str	r5, [r4, r0, lsl #2]
   15f28:	ldr	r5, [sp, #20]
   15f2c:	ldr	r7, [r6, r0, lsl #2]
   15f30:	mla	r9, r7, ip, r9
   15f34:	ldr	r7, [sl, r0, lsl #2]
   15f38:	add	r0, r0, #1
   15f3c:	mov	ip, r3
   15f40:	mov	r3, r2
   15f44:	mul	r5, r7, r5
   15f48:	ldr	r7, [fp, #8]
   15f4c:	str	r5, [sp, #20]
   15f50:	cmp	r0, r7
   15f54:	bne	15edc <ReadDataSlabN+0x8c8>
   15f58:	b	173bc <ReadDataSlabN+0x1da8>
   15f5c:	ldr	sl, [fp, #16]
   15f60:	ldr	r0, [sp, #52]	; 0x34
   15f64:	mov	r2, #1
   15f68:	mul	r1, r9, r0
   15f6c:	ldr	r0, [lr]
   15f70:	bl	1a68 <fseek@plt>
   15f74:	ldr	r0, [fp, #20]
   15f78:	ldr	r0, [r0]
   15f7c:	cmp	r0, #1
   15f80:	bne	175f8 <ReadDataSlabN+0x1fe4>
   15f84:	ldr	r0, [sp, #24]
   15f88:	cmp	r0, #1
   15f8c:	blt	18ee8 <ReadDataSlabN+0x38d4>
   15f90:	add	r0, sp, #96	; 0x60
   15f94:	mov	r1, r4
   15f98:	add	r3, sl, #4
   15f9c:	orr	r4, r0, #4
   15fa0:	add	r0, r6, #4
   15fa4:	str	r3, [sp, #28]
   15fa8:	str	r0, [sp, #40]	; 0x28
   15fac:	orr	r0, r8, #4
   15fb0:	str	r0, [sp, #32]
   15fb4:	ldr	r0, [fp, #8]
   15fb8:	sub	r0, r0, #1
   15fbc:	str	r0, [sp, #16]
   15fc0:	orr	r0, r1, #4
   15fc4:	str	r0, [sp, #12]
   15fc8:	mov	r0, #0
   15fcc:	str	r0, [sp, #20]
   15fd0:	ldr	r5, [fp, #16]
   15fd4:	ldr	r0, [r5]
   15fd8:	cmp	r0, #0
   15fdc:	beq	1600c <ReadDataSlabN+0x9f8>
   15fe0:	ldr	sl, [sp, #52]	; 0x34
   15fe4:	ldr	r8, [sp, #48]	; 0x30
   15fe8:	mov	r2, #1
   15fec:	mul	r1, r0, sl
   15ff0:	ldr	r0, [r8]
   15ff4:	bl	1a68 <fseek@plt>
   15ff8:	ldr	r0, [r5]
   15ffc:	ldr	r2, [sp, #44]	; 0x2c
   16000:	ldr	r7, [fp, #24]
   16004:	add	r9, r0, r9
   16008:	b	1601c <ReadDataSlabN+0xa08>
   1600c:	ldr	r2, [sp, #44]	; 0x2c
   16010:	ldr	r8, [sp, #48]	; 0x30
   16014:	ldr	r7, [fp, #24]
   16018:	ldr	sl, [sp, #52]	; 0x34
   1601c:	ldr	r0, [sp, #36]	; 0x24
   16020:	ldr	r1, [sp, #20]
   16024:	ldr	r3, [r7]
   16028:	add	r1, r0, r1, lsl #3
   1602c:	mov	r0, r8
   16030:	bl	377c <ReadDoubleData>
   16034:	ldr	r0, [fp, #12]
   16038:	ldr	r5, [r5]
   1603c:	ldr	r1, [r7]
   16040:	mov	r2, #1
   16044:	ldr	r6, [r0]
   16048:	sub	r0, r6, r5
   1604c:	sub	r0, r0, r1
   16050:	mul	r1, r0, sl
   16054:	ldr	r0, [r8]
   16058:	bl	1a68 <fseek@plt>
   1605c:	add	r0, r6, r9
   16060:	sub	r9, r0, r5
   16064:	ldr	r0, [fp, #8]
   16068:	cmp	r0, #2
   1606c:	blt	16174 <ReadDataSlabN+0xb60>
   16070:	ldr	sl, [sp, #16]
   16074:	ldr	r3, [sp, #28]
   16078:	mov	r8, #0
   1607c:	ldr	r0, [r4, r8]
   16080:	ldr	r1, [sp, #40]	; 0x28
   16084:	add	r0, r0, #1
   16088:	str	r0, [r4, r8]
   1608c:	ldr	r1, [r1, r8]
   16090:	sdiv	r2, r0, r1
   16094:	mls	r0, r2, r1, r0
   16098:	cmp	r0, #0
   1609c:	bne	16150 <ReadDataSlabN+0xb3c>
   160a0:	mov	r0, #0
   160a4:	str	r0, [r4, r8]
   160a8:	ldr	r0, [sp, #32]
   160ac:	ldr	r7, [r0, r8]
   160b0:	sdiv	r0, r9, r7
   160b4:	mls	r5, r0, r7, r9
   160b8:	cmp	r5, #0
   160bc:	beq	16104 <ReadDataSlabN+0xaf0>
   160c0:	add	r0, sp, #56	; 0x38
   160c4:	sub	r1, r7, r5
   160c8:	mov	r2, #1
   160cc:	ldr	r6, [r0, r8]
   160d0:	ldr	r0, [r3, r8]
   160d4:	mla	r0, r0, r6, r1
   160d8:	ldr	r1, [sp, #52]	; 0x34
   160dc:	mul	r1, r0, r1
   160e0:	ldr	r0, [sp, #48]	; 0x30
   160e4:	ldr	r0, [r0]
   160e8:	bl	1a68 <fseek@plt>
   160ec:	ldr	r3, [sp, #28]
   160f0:	add	r1, r7, r9
   160f4:	sub	r1, r1, r5
   160f8:	ldr	r0, [r3, r8]
   160fc:	mla	r9, r0, r6, r1
   16100:	b	16140 <ReadDataSlabN+0xb2c>
   16104:	ldr	r0, [r3, r8]
   16108:	cmp	r0, #0
   1610c:	beq	16140 <ReadDataSlabN+0xb2c>
   16110:	add	r1, sp, #56	; 0x38
   16114:	mov	r2, #1
   16118:	ldr	r5, [r1, r8]
   1611c:	ldr	r1, [sp, #52]	; 0x34
   16120:	mul	r0, r0, r1
   16124:	mul	r1, r0, r5
   16128:	ldr	r0, [sp, #48]	; 0x30
   1612c:	ldr	r0, [r0]
   16130:	bl	1a68 <fseek@plt>
   16134:	ldr	r3, [sp, #28]
   16138:	ldr	r0, [r3, r8]
   1613c:	mla	r9, r0, r5, r9
   16140:	subs	sl, sl, #1
   16144:	add	r8, r8, #4
   16148:	bne	1607c <ReadDataSlabN+0xa68>
   1614c:	b	16174 <ReadDataSlabN+0xb60>
   16150:	ldr	r0, [sp, #12]
   16154:	mov	r2, #1
   16158:	ldr	r5, [r0, r8]
   1615c:	ldr	r0, [sp, #52]	; 0x34
   16160:	mul	r1, r5, r0
   16164:	ldr	r0, [sp, #48]	; 0x30
   16168:	ldr	r0, [r0]
   1616c:	bl	1a68 <fseek@plt>
   16170:	add	r9, r5, r9
   16174:	ldr	r0, [fp, #24]
   16178:	ldr	r2, [sp, #20]
   1617c:	ldr	r1, [sp, #24]
   16180:	ldr	r0, [r0]
   16184:	add	r2, r0, r2
   16188:	mov	r0, #0
   1618c:	cmp	r2, r1
   16190:	str	r2, [sp, #20]
   16194:	blt	15fd0 <ReadDataSlabN+0x9bc>
   16198:	b	15698 <ReadDataSlabN+0x84>
   1619c:	ldr	r6, [fp, #16]
   161a0:	ldr	r0, [sp, #52]	; 0x34
   161a4:	mov	r2, #1
   161a8:	mul	r1, r9, r0
   161ac:	ldr	r0, [lr]
   161b0:	bl	1a68 <fseek@plt>
   161b4:	ldr	r0, [fp, #20]
   161b8:	ldr	r0, [r0]
   161bc:	cmp	r0, #1
   161c0:	bne	17870 <ReadDataSlabN+0x225c>
   161c4:	ldr	r0, [sp, #20]
   161c8:	cmp	r0, #1
   161cc:	blt	18ee8 <ReadDataSlabN+0x38d4>
   161d0:	add	r0, sp, #96	; 0x60
   161d4:	mov	r1, r4
   161d8:	add	r3, r6, #4
   161dc:	orr	r4, r0, #4
   161e0:	add	r0, sl, #4
   161e4:	str	r3, [sp, #28]
   161e8:	str	r0, [sp, #40]	; 0x28
   161ec:	orr	r0, r8, #4
   161f0:	str	r0, [sp, #32]
   161f4:	ldr	r0, [fp, #8]
   161f8:	sub	r0, r0, #1
   161fc:	str	r0, [sp, #16]
   16200:	orr	r0, r1, #4
   16204:	str	r0, [sp, #12]
   16208:	mov	r0, #0
   1620c:	str	r0, [sp, #24]
   16210:	ldr	r5, [fp, #16]
   16214:	ldr	r0, [r5]
   16218:	cmp	r0, #0
   1621c:	beq	1624c <ReadDataSlabN+0xc38>
   16220:	ldr	sl, [sp, #52]	; 0x34
   16224:	ldr	r8, [sp, #48]	; 0x30
   16228:	mov	r2, #1
   1622c:	mul	r1, r0, sl
   16230:	ldr	r0, [r8]
   16234:	bl	1a68 <fseek@plt>
   16238:	ldr	r0, [r5]
   1623c:	ldr	r2, [sp, #44]	; 0x2c
   16240:	ldr	r7, [fp, #24]
   16244:	add	r9, r0, r9
   16248:	b	1625c <ReadDataSlabN+0xc48>
   1624c:	ldr	r2, [sp, #44]	; 0x2c
   16250:	ldr	r8, [sp, #48]	; 0x30
   16254:	ldr	r7, [fp, #24]
   16258:	ldr	sl, [sp, #52]	; 0x34
   1625c:	ldr	r0, [sp, #36]	; 0x24
   16260:	ldr	r1, [sp, #24]
   16264:	ldr	r3, [r7]
   16268:	add	r1, r0, r1, lsl #2
   1626c:	mov	r0, r8
   16270:	bl	5fa0 <ReadSingleData>
   16274:	ldr	r0, [fp, #12]
   16278:	ldr	r5, [r5]
   1627c:	ldr	r1, [r7]
   16280:	mov	r2, #1
   16284:	ldr	r6, [r0]
   16288:	sub	r0, r6, r5
   1628c:	sub	r0, r0, r1
   16290:	mul	r1, r0, sl
   16294:	ldr	r0, [r8]
   16298:	bl	1a68 <fseek@plt>
   1629c:	add	r0, r6, r9
   162a0:	sub	r9, r0, r5
   162a4:	ldr	r0, [fp, #8]
   162a8:	cmp	r0, #2
   162ac:	blt	163b4 <ReadDataSlabN+0xda0>
   162b0:	ldr	sl, [sp, #16]
   162b4:	ldr	r3, [sp, #28]
   162b8:	mov	r8, #0
   162bc:	ldr	r0, [r4, r8]
   162c0:	ldr	r1, [sp, #40]	; 0x28
   162c4:	add	r0, r0, #1
   162c8:	str	r0, [r4, r8]
   162cc:	ldr	r1, [r1, r8]
   162d0:	sdiv	r2, r0, r1
   162d4:	mls	r0, r2, r1, r0
   162d8:	cmp	r0, #0
   162dc:	bne	16390 <ReadDataSlabN+0xd7c>
   162e0:	mov	r0, #0
   162e4:	str	r0, [r4, r8]
   162e8:	ldr	r0, [sp, #32]
   162ec:	ldr	r7, [r0, r8]
   162f0:	sdiv	r0, r9, r7
   162f4:	mls	r5, r0, r7, r9
   162f8:	cmp	r5, #0
   162fc:	beq	16344 <ReadDataSlabN+0xd30>
   16300:	add	r0, sp, #56	; 0x38
   16304:	sub	r1, r7, r5
   16308:	mov	r2, #1
   1630c:	ldr	r6, [r0, r8]
   16310:	ldr	r0, [r3, r8]
   16314:	mla	r0, r0, r6, r1
   16318:	ldr	r1, [sp, #52]	; 0x34
   1631c:	mul	r1, r0, r1
   16320:	ldr	r0, [sp, #48]	; 0x30
   16324:	ldr	r0, [r0]
   16328:	bl	1a68 <fseek@plt>
   1632c:	ldr	r3, [sp, #28]
   16330:	add	r1, r7, r9
   16334:	sub	r1, r1, r5
   16338:	ldr	r0, [r3, r8]
   1633c:	mla	r9, r0, r6, r1
   16340:	b	16380 <ReadDataSlabN+0xd6c>
   16344:	ldr	r0, [r3, r8]
   16348:	cmp	r0, #0
   1634c:	beq	16380 <ReadDataSlabN+0xd6c>
   16350:	add	r1, sp, #56	; 0x38
   16354:	mov	r2, #1
   16358:	ldr	r5, [r1, r8]
   1635c:	ldr	r1, [sp, #52]	; 0x34
   16360:	mul	r0, r0, r1
   16364:	mul	r1, r0, r5
   16368:	ldr	r0, [sp, #48]	; 0x30
   1636c:	ldr	r0, [r0]
   16370:	bl	1a68 <fseek@plt>
   16374:	ldr	r3, [sp, #28]
   16378:	ldr	r0, [r3, r8]
   1637c:	mla	r9, r0, r5, r9
   16380:	subs	sl, sl, #1
   16384:	add	r8, r8, #4
   16388:	bne	162bc <ReadDataSlabN+0xca8>
   1638c:	b	163b4 <ReadDataSlabN+0xda0>
   16390:	ldr	r0, [sp, #12]
   16394:	mov	r2, #1
   16398:	ldr	r5, [r0, r8]
   1639c:	ldr	r0, [sp, #52]	; 0x34
   163a0:	mul	r1, r5, r0
   163a4:	ldr	r0, [sp, #48]	; 0x30
   163a8:	ldr	r0, [r0]
   163ac:	bl	1a68 <fseek@plt>
   163b0:	add	r9, r5, r9
   163b4:	ldr	r0, [fp, #24]
   163b8:	ldr	r2, [sp, #24]
   163bc:	ldr	r1, [sp, #20]
   163c0:	ldr	r0, [r0]
   163c4:	add	r2, r0, r2
   163c8:	mov	r0, #0
   163cc:	cmp	r2, r1
   163d0:	str	r2, [sp, #24]
   163d4:	blt	16210 <ReadDataSlabN+0xbfc>
   163d8:	b	15698 <ReadDataSlabN+0x84>
   163dc:	ldr	r6, [fp, #16]
   163e0:	ldr	r0, [sp, #52]	; 0x34
   163e4:	mov	r2, #1
   163e8:	mul	r1, r5, r0
   163ec:	ldr	r0, [r9]
   163f0:	bl	1a68 <fseek@plt>
   163f4:	ldr	r0, [fp, #20]
   163f8:	ldr	r0, [r0]
   163fc:	cmp	r0, #1
   16400:	bne	17af0 <ReadDataSlabN+0x24dc>
   16404:	ldr	r0, [sp, #20]
   16408:	cmp	r0, #1
   1640c:	blt	18ee8 <ReadDataSlabN+0x38d4>
   16410:	add	r0, sp, #96	; 0x60
   16414:	add	r3, r6, #4
   16418:	mov	r7, #0
   1641c:	orr	r1, r0, #4
   16420:	add	r0, sl, #4
   16424:	str	r3, [sp, #28]
   16428:	str	r0, [sp, #40]	; 0x28
   1642c:	orr	r0, r8, #4
   16430:	str	r1, [sp, #24]
   16434:	str	r0, [sp, #32]
   16438:	ldr	r0, [fp, #8]
   1643c:	sub	r0, r0, #1
   16440:	str	r0, [sp, #12]
   16444:	orr	r0, r4, #4
   16448:	mov	r4, r1
   1644c:	str	r0, [sp, #8]
   16450:	ldr	r6, [fp, #16]
   16454:	ldr	r0, [r6]
   16458:	cmp	r0, #0
   1645c:	beq	1648c <ReadDataSlabN+0xe78>
   16460:	ldr	r4, [sp, #52]	; 0x34
   16464:	ldr	sl, [sp, #48]	; 0x30
   16468:	mov	r2, #1
   1646c:	mul	r1, r0, r4
   16470:	ldr	r0, [sl]
   16474:	bl	1a68 <fseek@plt>
   16478:	ldr	r0, [r6]
   1647c:	ldr	r2, [sp, #44]	; 0x2c
   16480:	add	r5, r0, r5
   16484:	ldr	r0, [sp, #36]	; 0x24
   16488:	b	1649c <ReadDataSlabN+0xe88>
   1648c:	ldr	r2, [sp, #44]	; 0x2c
   16490:	ldr	r0, [sp, #36]	; 0x24
   16494:	ldr	sl, [sp, #48]	; 0x30
   16498:	ldr	r4, [sp, #52]	; 0x34
   1649c:	add	r1, r0, r7
   164a0:	ldr	r0, [fp, #24]
   164a4:	str	r7, [sp, #16]
   164a8:	ldr	r3, [r0]
   164ac:	mov	r8, r0
   164b0:	mov	r0, sl
   164b4:	bl	11e88 <ReadInt8Data>
   164b8:	ldr	r0, [fp, #12]
   164bc:	ldr	r6, [r6]
   164c0:	ldr	r1, [r8]
   164c4:	mov	r2, #1
   164c8:	ldr	r7, [r0]
   164cc:	sub	r0, r7, r6
   164d0:	sub	r0, r0, r1
   164d4:	mul	r1, r0, r4
   164d8:	ldr	r0, [sl]
   164dc:	bl	1a68 <fseek@plt>
   164e0:	add	r0, r7, r5
   164e4:	sub	r5, r0, r6
   164e8:	ldr	r0, [fp, #8]
   164ec:	cmp	r0, #2
   164f0:	blt	16608 <ReadDataSlabN+0xff4>
   164f4:	ldr	r8, [sp, #12]
   164f8:	ldr	r4, [sp, #24]
   164fc:	ldr	r3, [sp, #28]
   16500:	mov	r9, #0
   16504:	ldr	r0, [r4, r9]
   16508:	ldr	r1, [sp, #40]	; 0x28
   1650c:	add	r0, r0, #1
   16510:	str	r0, [r4, r9]
   16514:	ldr	r1, [r1, r9]
   16518:	sdiv	r2, r0, r1
   1651c:	mls	r0, r2, r1, r0
   16520:	cmp	r0, #0
   16524:	bne	165e8 <ReadDataSlabN+0xfd4>
   16528:	mov	r0, #0
   1652c:	str	r0, [r4, r9]
   16530:	ldr	r0, [sp, #32]
   16534:	ldr	sl, [r0, r9]
   16538:	sdiv	r0, r5, sl
   1653c:	mls	r7, r0, sl, r5
   16540:	cmp	r7, #0
   16544:	beq	16594 <ReadDataSlabN+0xf80>
   16548:	add	r0, sp, #56	; 0x38
   1654c:	sub	r1, sl, r7
   16550:	ldr	r4, [sp, #48]	; 0x30
   16554:	mov	r2, #1
   16558:	ldr	r6, [r0, r9]
   1655c:	ldr	r0, [r3, r9]
   16560:	mla	r0, r0, r6, r1
   16564:	ldr	r1, [sp, #52]	; 0x34
   16568:	mul	r1, r0, r1
   1656c:	ldr	r0, [r4]
   16570:	bl	1a68 <fseek@plt>
   16574:	ldr	r3, [sp, #28]
   16578:	add	r1, sl, r5
   1657c:	mov	sl, r4
   16580:	ldr	r4, [sp, #24]
   16584:	sub	r1, r1, r7
   16588:	ldr	r0, [r3, r9]
   1658c:	mla	r5, r0, r6, r1
   16590:	b	165d8 <ReadDataSlabN+0xfc4>
   16594:	ldr	r0, [r3, r9]
   16598:	cmp	r0, #0
   1659c:	beq	165d4 <ReadDataSlabN+0xfc0>
   165a0:	add	r1, sp, #56	; 0x38
   165a4:	ldr	sl, [sp, #48]	; 0x30
   165a8:	mov	r2, #1
   165ac:	ldr	r6, [r1, r9]
   165b0:	ldr	r1, [sp, #52]	; 0x34
   165b4:	mul	r0, r0, r1
   165b8:	mul	r1, r0, r6
   165bc:	ldr	r0, [sl]
   165c0:	bl	1a68 <fseek@plt>
   165c4:	ldr	r3, [sp, #28]
   165c8:	ldr	r0, [r3, r9]
   165cc:	mla	r5, r0, r6, r5
   165d0:	b	165d8 <ReadDataSlabN+0xfc4>
   165d4:	ldr	sl, [sp, #48]	; 0x30
   165d8:	subs	r8, r8, #1
   165dc:	add	r9, r9, #4
   165e0:	bne	16504 <ReadDataSlabN+0xef0>
   165e4:	b	16608 <ReadDataSlabN+0xff4>
   165e8:	ldr	r0, [sp, #8]
   165ec:	mov	r2, #1
   165f0:	ldr	r6, [r0, r9]
   165f4:	ldr	r0, [sp, #52]	; 0x34
   165f8:	mul	r1, r6, r0
   165fc:	ldr	r0, [sl]
   16600:	bl	1a68 <fseek@plt>
   16604:	add	r5, r6, r5
   16608:	ldr	r0, [fp, #24]
   1660c:	ldr	r7, [sp, #16]
   16610:	ldr	r1, [sp, #20]
   16614:	ldr	r0, [r0]
   16618:	add	r7, r0, r7
   1661c:	mov	r0, #0
   16620:	cmp	r7, r1
   16624:	blt	16450 <ReadDataSlabN+0xe3c>
   16628:	b	15698 <ReadDataSlabN+0x84>
   1662c:	ldr	r6, [fp, #16]
   16630:	ldr	r0, [sp, #52]	; 0x34
   16634:	mov	r2, #1
   16638:	mul	r1, r5, r0
   1663c:	ldr	r0, [r9]
   16640:	bl	1a68 <fseek@plt>
   16644:	ldr	r0, [fp, #20]
   16648:	ldr	r0, [r0]
   1664c:	cmp	r0, #1
   16650:	bne	17d68 <ReadDataSlabN+0x2754>
   16654:	ldr	r0, [sp, #20]
   16658:	cmp	r0, #1
   1665c:	blt	18ee8 <ReadDataSlabN+0x38d4>
   16660:	add	r0, sp, #96	; 0x60
   16664:	add	r3, r6, #4
   16668:	orr	r7, r0, #4
   1666c:	add	r0, sl, #4
   16670:	str	r3, [sp, #28]
   16674:	str	r0, [sp, #40]	; 0x28
   16678:	orr	r0, r8, #4
   1667c:	str	r7, [sp, #24]
   16680:	str	r0, [sp, #32]
   16684:	ldr	r0, [fp, #8]
   16688:	sub	r0, r0, #1
   1668c:	str	r0, [sp, #12]
   16690:	orr	r0, r4, #4
   16694:	mov	r4, #0
   16698:	str	r0, [sp, #8]
   1669c:	ldr	r6, [fp, #16]
   166a0:	ldr	r0, [r6]
   166a4:	cmp	r0, #0
   166a8:	beq	166d8 <ReadDataSlabN+0x10c4>
   166ac:	ldr	r7, [sp, #52]	; 0x34
   166b0:	ldr	sl, [sp, #48]	; 0x30
   166b4:	mov	r2, #1
   166b8:	mul	r1, r0, r7
   166bc:	ldr	r0, [sl]
   166c0:	bl	1a68 <fseek@plt>
   166c4:	ldr	r0, [r6]
   166c8:	ldr	r2, [sp, #44]	; 0x2c
   166cc:	add	r5, r0, r5
   166d0:	ldr	r0, [sp, #36]	; 0x24
   166d4:	b	166e8 <ReadDataSlabN+0x10d4>
   166d8:	ldr	r2, [sp, #44]	; 0x2c
   166dc:	ldr	r0, [sp, #36]	; 0x24
   166e0:	ldr	sl, [sp, #48]	; 0x30
   166e4:	ldr	r7, [sp, #52]	; 0x34
   166e8:	add	r1, r0, r4
   166ec:	ldr	r0, [fp, #24]
   166f0:	str	r4, [sp, #16]
   166f4:	ldr	r3, [r0]
   166f8:	mov	r4, r0
   166fc:	mov	r0, sl
   16700:	bl	13934 <ReadUInt8Data>
   16704:	ldr	r0, [fp, #12]
   16708:	ldr	r8, [r6]
   1670c:	ldr	r1, [r4]
   16710:	mov	r2, #1
   16714:	ldr	r6, [r0]
   16718:	sub	r0, r6, r8
   1671c:	sub	r0, r0, r1
   16720:	mul	r1, r0, r7
   16724:	ldr	r0, [sl]
   16728:	bl	1a68 <fseek@plt>
   1672c:	add	r0, r6, r5
   16730:	sub	r5, r0, r8
   16734:	ldr	r0, [fp, #8]
   16738:	cmp	r0, #2
   1673c:	blt	16854 <ReadDataSlabN+0x1240>
   16740:	ldr	r8, [sp, #12]
   16744:	ldr	r7, [sp, #24]
   16748:	ldr	r3, [sp, #28]
   1674c:	mov	r9, #0
   16750:	ldr	r0, [r7, r9]
   16754:	ldr	r1, [sp, #40]	; 0x28
   16758:	add	r0, r0, #1
   1675c:	str	r0, [r7, r9]
   16760:	ldr	r1, [r1, r9]
   16764:	sdiv	r2, r0, r1
   16768:	mls	r0, r2, r1, r0
   1676c:	cmp	r0, #0
   16770:	bne	16834 <ReadDataSlabN+0x1220>
   16774:	mov	r0, #0
   16778:	str	r0, [r7, r9]
   1677c:	ldr	r0, [sp, #32]
   16780:	ldr	sl, [r0, r9]
   16784:	sdiv	r0, r5, sl
   16788:	mls	r6, r0, sl, r5
   1678c:	cmp	r6, #0
   16790:	beq	167e0 <ReadDataSlabN+0x11cc>
   16794:	add	r0, sp, #56	; 0x38
   16798:	sub	r1, sl, r6
   1679c:	ldr	r4, [sp, #48]	; 0x30
   167a0:	mov	r2, #1
   167a4:	ldr	r7, [r0, r9]
   167a8:	ldr	r0, [r3, r9]
   167ac:	mla	r0, r0, r7, r1
   167b0:	ldr	r1, [sp, #52]	; 0x34
   167b4:	mul	r1, r0, r1
   167b8:	ldr	r0, [r4]
   167bc:	bl	1a68 <fseek@plt>
   167c0:	ldr	r3, [sp, #28]
   167c4:	add	r1, sl, r5
   167c8:	mov	sl, r4
   167cc:	sub	r1, r1, r6
   167d0:	ldr	r0, [r3, r9]
   167d4:	mla	r5, r0, r7, r1
   167d8:	ldr	r7, [sp, #24]
   167dc:	b	16824 <ReadDataSlabN+0x1210>
   167e0:	ldr	r0, [r3, r9]
   167e4:	cmp	r0, #0
   167e8:	beq	16820 <ReadDataSlabN+0x120c>
   167ec:	add	r1, sp, #56	; 0x38
   167f0:	ldr	sl, [sp, #48]	; 0x30
   167f4:	mov	r2, #1
   167f8:	ldr	r6, [r1, r9]
   167fc:	ldr	r1, [sp, #52]	; 0x34
   16800:	mul	r0, r0, r1
   16804:	mul	r1, r0, r6
   16808:	ldr	r0, [sl]
   1680c:	bl	1a68 <fseek@plt>
   16810:	ldr	r3, [sp, #28]
   16814:	ldr	r0, [r3, r9]
   16818:	mla	r5, r0, r6, r5
   1681c:	b	16824 <ReadDataSlabN+0x1210>
   16820:	ldr	sl, [sp, #48]	; 0x30
   16824:	subs	r8, r8, #1
   16828:	add	r9, r9, #4
   1682c:	bne	16750 <ReadDataSlabN+0x113c>
   16830:	b	16854 <ReadDataSlabN+0x1240>
   16834:	ldr	r0, [sp, #8]
   16838:	mov	r2, #1
   1683c:	ldr	r6, [r0, r9]
   16840:	ldr	r0, [sp, #52]	; 0x34
   16844:	mul	r1, r6, r0
   16848:	ldr	r0, [sl]
   1684c:	bl	1a68 <fseek@plt>
   16850:	add	r5, r6, r5
   16854:	ldr	r0, [fp, #24]
   16858:	ldr	r4, [sp, #16]
   1685c:	ldr	r1, [sp, #20]
   16860:	ldr	r0, [r0]
   16864:	add	r4, r0, r4
   16868:	mov	r0, #0
   1686c:	cmp	r4, r1
   16870:	blt	1669c <ReadDataSlabN+0x1088>
   16874:	b	15698 <ReadDataSlabN+0x84>
   16878:	ldr	r6, [fp, #16]
   1687c:	ldr	r0, [sp, #52]	; 0x34
   16880:	mov	r2, #1
   16884:	mul	r1, r9, r0
   16888:	ldr	r0, [lr]
   1688c:	bl	1a68 <fseek@plt>
   16890:	ldr	r0, [fp, #20]
   16894:	ldr	r0, [r0]
   16898:	cmp	r0, #1
   1689c:	bne	17fe0 <ReadDataSlabN+0x29cc>
   168a0:	ldr	r0, [sp, #20]
   168a4:	cmp	r0, #1
   168a8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   168ac:	add	r0, sp, #96	; 0x60
   168b0:	mov	r1, r4
   168b4:	add	r3, r6, #4
   168b8:	orr	r4, r0, #4
   168bc:	add	r0, sl, #4
   168c0:	str	r3, [sp, #28]
   168c4:	str	r0, [sp, #40]	; 0x28
   168c8:	orr	r0, r8, #4
   168cc:	str	r0, [sp, #32]
   168d0:	ldr	r0, [fp, #8]
   168d4:	sub	r0, r0, #1
   168d8:	str	r0, [sp, #16]
   168dc:	orr	r0, r1, #4
   168e0:	str	r0, [sp, #12]
   168e4:	mov	r0, #0
   168e8:	str	r0, [sp, #24]
   168ec:	ldr	r5, [fp, #16]
   168f0:	ldr	r0, [r5]
   168f4:	cmp	r0, #0
   168f8:	beq	16928 <ReadDataSlabN+0x1314>
   168fc:	ldr	sl, [sp, #52]	; 0x34
   16900:	ldr	r8, [sp, #48]	; 0x30
   16904:	mov	r2, #1
   16908:	mul	r1, r0, sl
   1690c:	ldr	r0, [r8]
   16910:	bl	1a68 <fseek@plt>
   16914:	ldr	r0, [r5]
   16918:	ldr	r2, [sp, #44]	; 0x2c
   1691c:	ldr	r7, [fp, #24]
   16920:	add	r9, r0, r9
   16924:	b	16938 <ReadDataSlabN+0x1324>
   16928:	ldr	r2, [sp, #44]	; 0x2c
   1692c:	ldr	r8, [sp, #48]	; 0x30
   16930:	ldr	r7, [fp, #24]
   16934:	ldr	sl, [sp, #52]	; 0x34
   16938:	ldr	r0, [sp, #36]	; 0x24
   1693c:	ldr	r1, [sp, #24]
   16940:	ldr	r3, [r7]
   16944:	add	r1, r0, r1, lsl #1
   16948:	mov	r0, r8
   1694c:	bl	e9a0 <ReadInt16Data>
   16950:	ldr	r0, [fp, #12]
   16954:	ldr	r5, [r5]
   16958:	ldr	r1, [r7]
   1695c:	mov	r2, #1
   16960:	ldr	r6, [r0]
   16964:	sub	r0, r6, r5
   16968:	sub	r0, r0, r1
   1696c:	mul	r1, r0, sl
   16970:	ldr	r0, [r8]
   16974:	bl	1a68 <fseek@plt>
   16978:	add	r0, r6, r9
   1697c:	sub	r9, r0, r5
   16980:	ldr	r0, [fp, #8]
   16984:	cmp	r0, #2
   16988:	blt	16a90 <ReadDataSlabN+0x147c>
   1698c:	ldr	sl, [sp, #16]
   16990:	ldr	r3, [sp, #28]
   16994:	mov	r8, #0
   16998:	ldr	r0, [r4, r8]
   1699c:	ldr	r1, [sp, #40]	; 0x28
   169a0:	add	r0, r0, #1
   169a4:	str	r0, [r4, r8]
   169a8:	ldr	r1, [r1, r8]
   169ac:	sdiv	r2, r0, r1
   169b0:	mls	r0, r2, r1, r0
   169b4:	cmp	r0, #0
   169b8:	bne	16a6c <ReadDataSlabN+0x1458>
   169bc:	mov	r0, #0
   169c0:	str	r0, [r4, r8]
   169c4:	ldr	r0, [sp, #32]
   169c8:	ldr	r7, [r0, r8]
   169cc:	sdiv	r0, r9, r7
   169d0:	mls	r5, r0, r7, r9
   169d4:	cmp	r5, #0
   169d8:	beq	16a20 <ReadDataSlabN+0x140c>
   169dc:	add	r0, sp, #56	; 0x38
   169e0:	sub	r1, r7, r5
   169e4:	mov	r2, #1
   169e8:	ldr	r6, [r0, r8]
   169ec:	ldr	r0, [r3, r8]
   169f0:	mla	r0, r0, r6, r1
   169f4:	ldr	r1, [sp, #52]	; 0x34
   169f8:	mul	r1, r0, r1
   169fc:	ldr	r0, [sp, #48]	; 0x30
   16a00:	ldr	r0, [r0]
   16a04:	bl	1a68 <fseek@plt>
   16a08:	ldr	r3, [sp, #28]
   16a0c:	add	r1, r7, r9
   16a10:	sub	r1, r1, r5
   16a14:	ldr	r0, [r3, r8]
   16a18:	mla	r9, r0, r6, r1
   16a1c:	b	16a5c <ReadDataSlabN+0x1448>
   16a20:	ldr	r0, [r3, r8]
   16a24:	cmp	r0, #0
   16a28:	beq	16a5c <ReadDataSlabN+0x1448>
   16a2c:	add	r1, sp, #56	; 0x38
   16a30:	mov	r2, #1
   16a34:	ldr	r5, [r1, r8]
   16a38:	ldr	r1, [sp, #52]	; 0x34
   16a3c:	mul	r0, r0, r1
   16a40:	mul	r1, r0, r5
   16a44:	ldr	r0, [sp, #48]	; 0x30
   16a48:	ldr	r0, [r0]
   16a4c:	bl	1a68 <fseek@plt>
   16a50:	ldr	r3, [sp, #28]
   16a54:	ldr	r0, [r3, r8]
   16a58:	mla	r9, r0, r5, r9
   16a5c:	subs	sl, sl, #1
   16a60:	add	r8, r8, #4
   16a64:	bne	16998 <ReadDataSlabN+0x1384>
   16a68:	b	16a90 <ReadDataSlabN+0x147c>
   16a6c:	ldr	r0, [sp, #12]
   16a70:	mov	r2, #1
   16a74:	ldr	r5, [r0, r8]
   16a78:	ldr	r0, [sp, #52]	; 0x34
   16a7c:	mul	r1, r5, r0
   16a80:	ldr	r0, [sp, #48]	; 0x30
   16a84:	ldr	r0, [r0]
   16a88:	bl	1a68 <fseek@plt>
   16a8c:	add	r9, r5, r9
   16a90:	ldr	r0, [fp, #24]
   16a94:	ldr	r2, [sp, #24]
   16a98:	ldr	r1, [sp, #20]
   16a9c:	ldr	r0, [r0]
   16aa0:	add	r2, r0, r2
   16aa4:	mov	r0, #0
   16aa8:	cmp	r2, r1
   16aac:	str	r2, [sp, #24]
   16ab0:	blt	168ec <ReadDataSlabN+0x12d8>
   16ab4:	b	15698 <ReadDataSlabN+0x84>
   16ab8:	ldr	r6, [fp, #16]
   16abc:	ldr	r0, [sp, #52]	; 0x34
   16ac0:	mov	r2, #1
   16ac4:	mul	r1, r9, r0
   16ac8:	ldr	r0, [lr]
   16acc:	bl	1a68 <fseek@plt>
   16ad0:	ldr	r0, [fp, #20]
   16ad4:	ldr	r0, [r0]
   16ad8:	cmp	r0, #1
   16adc:	bne	18260 <ReadDataSlabN+0x2c4c>
   16ae0:	ldr	r0, [sp, #20]
   16ae4:	cmp	r0, #1
   16ae8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   16aec:	add	r0, sp, #96	; 0x60
   16af0:	mov	r1, r4
   16af4:	add	r3, r6, #4
   16af8:	orr	r4, r0, #4
   16afc:	add	r0, sl, #4
   16b00:	str	r3, [sp, #28]
   16b04:	str	r0, [sp, #40]	; 0x28
   16b08:	orr	r0, r8, #4
   16b0c:	str	r0, [sp, #32]
   16b10:	ldr	r0, [fp, #8]
   16b14:	sub	r0, r0, #1
   16b18:	str	r0, [sp, #16]
   16b1c:	orr	r0, r1, #4
   16b20:	str	r0, [sp, #12]
   16b24:	mov	r0, #0
   16b28:	str	r0, [sp, #24]
   16b2c:	ldr	r5, [fp, #16]
   16b30:	ldr	r0, [r5]
   16b34:	cmp	r0, #0
   16b38:	beq	16b68 <ReadDataSlabN+0x1554>
   16b3c:	ldr	sl, [sp, #52]	; 0x34
   16b40:	ldr	r8, [sp, #48]	; 0x30
   16b44:	mov	r2, #1
   16b48:	mul	r1, r0, sl
   16b4c:	ldr	r0, [r8]
   16b50:	bl	1a68 <fseek@plt>
   16b54:	ldr	r0, [r5]
   16b58:	ldr	r2, [sp, #44]	; 0x2c
   16b5c:	ldr	r7, [fp, #24]
   16b60:	add	r9, r0, r9
   16b64:	b	16b78 <ReadDataSlabN+0x1564>
   16b68:	ldr	r2, [sp, #44]	; 0x2c
   16b6c:	ldr	r8, [sp, #48]	; 0x30
   16b70:	ldr	r7, [fp, #24]
   16b74:	ldr	sl, [sp, #52]	; 0x34
   16b78:	ldr	r0, [sp, #36]	; 0x24
   16b7c:	ldr	r1, [sp, #24]
   16b80:	ldr	r3, [r7]
   16b84:	add	r1, r0, r1, lsl #1
   16b88:	mov	r0, r8
   16b8c:	bl	10414 <ReadUInt16Data>
   16b90:	ldr	r0, [fp, #12]
   16b94:	ldr	r5, [r5]
   16b98:	ldr	r1, [r7]
   16b9c:	mov	r2, #1
   16ba0:	ldr	r6, [r0]
   16ba4:	sub	r0, r6, r5
   16ba8:	sub	r0, r0, r1
   16bac:	mul	r1, r0, sl
   16bb0:	ldr	r0, [r8]
   16bb4:	bl	1a68 <fseek@plt>
   16bb8:	add	r0, r6, r9
   16bbc:	sub	r9, r0, r5
   16bc0:	ldr	r0, [fp, #8]
   16bc4:	cmp	r0, #2
   16bc8:	blt	16cd0 <ReadDataSlabN+0x16bc>
   16bcc:	ldr	sl, [sp, #16]
   16bd0:	ldr	r3, [sp, #28]
   16bd4:	mov	r8, #0
   16bd8:	ldr	r0, [r4, r8]
   16bdc:	ldr	r1, [sp, #40]	; 0x28
   16be0:	add	r0, r0, #1
   16be4:	str	r0, [r4, r8]
   16be8:	ldr	r1, [r1, r8]
   16bec:	sdiv	r2, r0, r1
   16bf0:	mls	r0, r2, r1, r0
   16bf4:	cmp	r0, #0
   16bf8:	bne	16cac <ReadDataSlabN+0x1698>
   16bfc:	mov	r0, #0
   16c00:	str	r0, [r4, r8]
   16c04:	ldr	r0, [sp, #32]
   16c08:	ldr	r7, [r0, r8]
   16c0c:	sdiv	r0, r9, r7
   16c10:	mls	r5, r0, r7, r9
   16c14:	cmp	r5, #0
   16c18:	beq	16c60 <ReadDataSlabN+0x164c>
   16c1c:	add	r0, sp, #56	; 0x38
   16c20:	sub	r1, r7, r5
   16c24:	mov	r2, #1
   16c28:	ldr	r6, [r0, r8]
   16c2c:	ldr	r0, [r3, r8]
   16c30:	mla	r0, r0, r6, r1
   16c34:	ldr	r1, [sp, #52]	; 0x34
   16c38:	mul	r1, r0, r1
   16c3c:	ldr	r0, [sp, #48]	; 0x30
   16c40:	ldr	r0, [r0]
   16c44:	bl	1a68 <fseek@plt>
   16c48:	ldr	r3, [sp, #28]
   16c4c:	add	r1, r7, r9
   16c50:	sub	r1, r1, r5
   16c54:	ldr	r0, [r3, r8]
   16c58:	mla	r9, r0, r6, r1
   16c5c:	b	16c9c <ReadDataSlabN+0x1688>
   16c60:	ldr	r0, [r3, r8]
   16c64:	cmp	r0, #0
   16c68:	beq	16c9c <ReadDataSlabN+0x1688>
   16c6c:	add	r1, sp, #56	; 0x38
   16c70:	mov	r2, #1
   16c74:	ldr	r5, [r1, r8]
   16c78:	ldr	r1, [sp, #52]	; 0x34
   16c7c:	mul	r0, r0, r1
   16c80:	mul	r1, r0, r5
   16c84:	ldr	r0, [sp, #48]	; 0x30
   16c88:	ldr	r0, [r0]
   16c8c:	bl	1a68 <fseek@plt>
   16c90:	ldr	r3, [sp, #28]
   16c94:	ldr	r0, [r3, r8]
   16c98:	mla	r9, r0, r5, r9
   16c9c:	subs	sl, sl, #1
   16ca0:	add	r8, r8, #4
   16ca4:	bne	16bd8 <ReadDataSlabN+0x15c4>
   16ca8:	b	16cd0 <ReadDataSlabN+0x16bc>
   16cac:	ldr	r0, [sp, #12]
   16cb0:	mov	r2, #1
   16cb4:	ldr	r5, [r0, r8]
   16cb8:	ldr	r0, [sp, #52]	; 0x34
   16cbc:	mul	r1, r5, r0
   16cc0:	ldr	r0, [sp, #48]	; 0x30
   16cc4:	ldr	r0, [r0]
   16cc8:	bl	1a68 <fseek@plt>
   16ccc:	add	r9, r5, r9
   16cd0:	ldr	r0, [fp, #24]
   16cd4:	ldr	r2, [sp, #24]
   16cd8:	ldr	r1, [sp, #20]
   16cdc:	ldr	r0, [r0]
   16ce0:	add	r2, r0, r2
   16ce4:	mov	r0, #0
   16ce8:	cmp	r2, r1
   16cec:	str	r2, [sp, #24]
   16cf0:	blt	16b2c <ReadDataSlabN+0x1518>
   16cf4:	b	15698 <ReadDataSlabN+0x84>
   16cf8:	ldr	r6, [fp, #16]
   16cfc:	ldr	r0, [sp, #52]	; 0x34
   16d00:	mov	r2, #1
   16d04:	mul	r1, r9, r0
   16d08:	ldr	r0, [lr]
   16d0c:	bl	1a68 <fseek@plt>
   16d10:	ldr	r0, [fp, #20]
   16d14:	ldr	r0, [r0]
   16d18:	cmp	r0, #1
   16d1c:	bne	184e0 <ReadDataSlabN+0x2ecc>
   16d20:	ldr	r0, [sp, #20]
   16d24:	cmp	r0, #1
   16d28:	blt	18ee8 <ReadDataSlabN+0x38d4>
   16d2c:	add	r0, sp, #96	; 0x60
   16d30:	mov	r1, r4
   16d34:	add	r3, r6, #4
   16d38:	orr	r4, r0, #4
   16d3c:	add	r0, sl, #4
   16d40:	str	r3, [sp, #28]
   16d44:	str	r0, [sp, #40]	; 0x28
   16d48:	orr	r0, r8, #4
   16d4c:	str	r0, [sp, #32]
   16d50:	ldr	r0, [fp, #8]
   16d54:	sub	r0, r0, #1
   16d58:	str	r0, [sp, #16]
   16d5c:	orr	r0, r1, #4
   16d60:	str	r0, [sp, #12]
   16d64:	mov	r0, #0
   16d68:	str	r0, [sp, #24]
   16d6c:	ldr	r5, [fp, #16]
   16d70:	ldr	r0, [r5]
   16d74:	cmp	r0, #0
   16d78:	beq	16da8 <ReadDataSlabN+0x1794>
   16d7c:	ldr	sl, [sp, #52]	; 0x34
   16d80:	ldr	r8, [sp, #48]	; 0x30
   16d84:	mov	r2, #1
   16d88:	mul	r1, r0, sl
   16d8c:	ldr	r0, [r8]
   16d90:	bl	1a68 <fseek@plt>
   16d94:	ldr	r0, [r5]
   16d98:	ldr	r2, [sp, #44]	; 0x2c
   16d9c:	ldr	r7, [fp, #24]
   16da0:	add	r9, r0, r9
   16da4:	b	16db8 <ReadDataSlabN+0x17a4>
   16da8:	ldr	r2, [sp, #44]	; 0x2c
   16dac:	ldr	r8, [sp, #48]	; 0x30
   16db0:	ldr	r7, [fp, #24]
   16db4:	ldr	sl, [sp, #52]	; 0x34
   16db8:	ldr	r0, [sp, #36]	; 0x24
   16dbc:	ldr	r1, [sp, #24]
   16dc0:	ldr	r3, [r7]
   16dc4:	add	r1, r0, r1, lsl #2
   16dc8:	mov	r0, r8
   16dcc:	bl	b4d8 <ReadInt32Data>
   16dd0:	ldr	r0, [fp, #12]
   16dd4:	ldr	r5, [r5]
   16dd8:	ldr	r1, [r7]
   16ddc:	mov	r2, #1
   16de0:	ldr	r6, [r0]
   16de4:	sub	r0, r6, r5
   16de8:	sub	r0, r0, r1
   16dec:	mul	r1, r0, sl
   16df0:	ldr	r0, [r8]
   16df4:	bl	1a68 <fseek@plt>
   16df8:	add	r0, r6, r9
   16dfc:	sub	r9, r0, r5
   16e00:	ldr	r0, [fp, #8]
   16e04:	cmp	r0, #2
   16e08:	blt	16f10 <ReadDataSlabN+0x18fc>
   16e0c:	ldr	sl, [sp, #16]
   16e10:	ldr	r3, [sp, #28]
   16e14:	mov	r8, #0
   16e18:	ldr	r0, [r4, r8]
   16e1c:	ldr	r1, [sp, #40]	; 0x28
   16e20:	add	r0, r0, #1
   16e24:	str	r0, [r4, r8]
   16e28:	ldr	r1, [r1, r8]
   16e2c:	sdiv	r2, r0, r1
   16e30:	mls	r0, r2, r1, r0
   16e34:	cmp	r0, #0
   16e38:	bne	16eec <ReadDataSlabN+0x18d8>
   16e3c:	mov	r0, #0
   16e40:	str	r0, [r4, r8]
   16e44:	ldr	r0, [sp, #32]
   16e48:	ldr	r7, [r0, r8]
   16e4c:	sdiv	r0, r9, r7
   16e50:	mls	r5, r0, r7, r9
   16e54:	cmp	r5, #0
   16e58:	beq	16ea0 <ReadDataSlabN+0x188c>
   16e5c:	add	r0, sp, #56	; 0x38
   16e60:	sub	r1, r7, r5
   16e64:	mov	r2, #1
   16e68:	ldr	r6, [r0, r8]
   16e6c:	ldr	r0, [r3, r8]
   16e70:	mla	r0, r0, r6, r1
   16e74:	ldr	r1, [sp, #52]	; 0x34
   16e78:	mul	r1, r0, r1
   16e7c:	ldr	r0, [sp, #48]	; 0x30
   16e80:	ldr	r0, [r0]
   16e84:	bl	1a68 <fseek@plt>
   16e88:	ldr	r3, [sp, #28]
   16e8c:	add	r1, r7, r9
   16e90:	sub	r1, r1, r5
   16e94:	ldr	r0, [r3, r8]
   16e98:	mla	r9, r0, r6, r1
   16e9c:	b	16edc <ReadDataSlabN+0x18c8>
   16ea0:	ldr	r0, [r3, r8]
   16ea4:	cmp	r0, #0
   16ea8:	beq	16edc <ReadDataSlabN+0x18c8>
   16eac:	add	r1, sp, #56	; 0x38
   16eb0:	mov	r2, #1
   16eb4:	ldr	r5, [r1, r8]
   16eb8:	ldr	r1, [sp, #52]	; 0x34
   16ebc:	mul	r0, r0, r1
   16ec0:	mul	r1, r0, r5
   16ec4:	ldr	r0, [sp, #48]	; 0x30
   16ec8:	ldr	r0, [r0]
   16ecc:	bl	1a68 <fseek@plt>
   16ed0:	ldr	r3, [sp, #28]
   16ed4:	ldr	r0, [r3, r8]
   16ed8:	mla	r9, r0, r5, r9
   16edc:	subs	sl, sl, #1
   16ee0:	add	r8, r8, #4
   16ee4:	bne	16e18 <ReadDataSlabN+0x1804>
   16ee8:	b	16f10 <ReadDataSlabN+0x18fc>
   16eec:	ldr	r0, [sp, #12]
   16ef0:	mov	r2, #1
   16ef4:	ldr	r5, [r0, r8]
   16ef8:	ldr	r0, [sp, #52]	; 0x34
   16efc:	mul	r1, r5, r0
   16f00:	ldr	r0, [sp, #48]	; 0x30
   16f04:	ldr	r0, [r0]
   16f08:	bl	1a68 <fseek@plt>
   16f0c:	add	r9, r5, r9
   16f10:	ldr	r0, [fp, #24]
   16f14:	ldr	r2, [sp, #24]
   16f18:	ldr	r1, [sp, #20]
   16f1c:	ldr	r0, [r0]
   16f20:	add	r2, r0, r2
   16f24:	mov	r0, #0
   16f28:	cmp	r2, r1
   16f2c:	str	r2, [sp, #24]
   16f30:	blt	16d6c <ReadDataSlabN+0x1758>
   16f34:	b	15698 <ReadDataSlabN+0x84>
   16f38:	ldr	r6, [fp, #16]
   16f3c:	ldr	r0, [sp, #52]	; 0x34
   16f40:	mov	r2, #1
   16f44:	mul	r1, r9, r0
   16f48:	ldr	r0, [lr]
   16f4c:	bl	1a68 <fseek@plt>
   16f50:	ldr	r0, [fp, #20]
   16f54:	ldr	r0, [r0]
   16f58:	cmp	r0, #1
   16f5c:	bne	18760 <ReadDataSlabN+0x314c>
   16f60:	ldr	r0, [sp, #20]
   16f64:	cmp	r0, #1
   16f68:	blt	18ee8 <ReadDataSlabN+0x38d4>
   16f6c:	add	r0, sp, #96	; 0x60
   16f70:	mov	r1, r4
   16f74:	add	r3, r6, #4
   16f78:	orr	r4, r0, #4
   16f7c:	add	r0, sl, #4
   16f80:	str	r3, [sp, #28]
   16f84:	str	r0, [sp, #40]	; 0x28
   16f88:	orr	r0, r8, #4
   16f8c:	str	r0, [sp, #32]
   16f90:	ldr	r0, [fp, #8]
   16f94:	sub	r0, r0, #1
   16f98:	str	r0, [sp, #16]
   16f9c:	orr	r0, r1, #4
   16fa0:	str	r0, [sp, #12]
   16fa4:	mov	r0, #0
   16fa8:	str	r0, [sp, #24]
   16fac:	ldr	r5, [fp, #16]
   16fb0:	ldr	r0, [r5]
   16fb4:	cmp	r0, #0
   16fb8:	beq	16fe8 <ReadDataSlabN+0x19d4>
   16fbc:	ldr	sl, [sp, #52]	; 0x34
   16fc0:	ldr	r8, [sp, #48]	; 0x30
   16fc4:	mov	r2, #1
   16fc8:	mul	r1, r0, sl
   16fcc:	ldr	r0, [r8]
   16fd0:	bl	1a68 <fseek@plt>
   16fd4:	ldr	r0, [r5]
   16fd8:	ldr	r2, [sp, #44]	; 0x2c
   16fdc:	ldr	r7, [fp, #24]
   16fe0:	add	r9, r0, r9
   16fe4:	b	16ff8 <ReadDataSlabN+0x19e4>
   16fe8:	ldr	r2, [sp, #44]	; 0x2c
   16fec:	ldr	r8, [sp, #48]	; 0x30
   16ff0:	ldr	r7, [fp, #24]
   16ff4:	ldr	sl, [sp, #52]	; 0x34
   16ff8:	ldr	r0, [sp, #36]	; 0x24
   16ffc:	ldr	r1, [sp, #24]
   17000:	ldr	r3, [r7]
   17004:	add	r1, r0, r1, lsl #2
   17008:	mov	r0, r8
   1700c:	bl	cf3c <ReadUInt32Data>
   17010:	ldr	r0, [fp, #12]
   17014:	ldr	r5, [r5]
   17018:	ldr	r1, [r7]
   1701c:	mov	r2, #1
   17020:	ldr	r6, [r0]
   17024:	sub	r0, r6, r5
   17028:	sub	r0, r0, r1
   1702c:	mul	r1, r0, sl
   17030:	ldr	r0, [r8]
   17034:	bl	1a68 <fseek@plt>
   17038:	add	r0, r6, r9
   1703c:	sub	r9, r0, r5
   17040:	ldr	r0, [fp, #8]
   17044:	cmp	r0, #2
   17048:	blt	17150 <ReadDataSlabN+0x1b3c>
   1704c:	ldr	sl, [sp, #16]
   17050:	ldr	r3, [sp, #28]
   17054:	mov	r8, #0
   17058:	ldr	r0, [r4, r8]
   1705c:	ldr	r1, [sp, #40]	; 0x28
   17060:	add	r0, r0, #1
   17064:	str	r0, [r4, r8]
   17068:	ldr	r1, [r1, r8]
   1706c:	sdiv	r2, r0, r1
   17070:	mls	r0, r2, r1, r0
   17074:	cmp	r0, #0
   17078:	bne	1712c <ReadDataSlabN+0x1b18>
   1707c:	mov	r0, #0
   17080:	str	r0, [r4, r8]
   17084:	ldr	r0, [sp, #32]
   17088:	ldr	r7, [r0, r8]
   1708c:	sdiv	r0, r9, r7
   17090:	mls	r5, r0, r7, r9
   17094:	cmp	r5, #0
   17098:	beq	170e0 <ReadDataSlabN+0x1acc>
   1709c:	add	r0, sp, #56	; 0x38
   170a0:	sub	r1, r7, r5
   170a4:	mov	r2, #1
   170a8:	ldr	r6, [r0, r8]
   170ac:	ldr	r0, [r3, r8]
   170b0:	mla	r0, r0, r6, r1
   170b4:	ldr	r1, [sp, #52]	; 0x34
   170b8:	mul	r1, r0, r1
   170bc:	ldr	r0, [sp, #48]	; 0x30
   170c0:	ldr	r0, [r0]
   170c4:	bl	1a68 <fseek@plt>
   170c8:	ldr	r3, [sp, #28]
   170cc:	add	r1, r7, r9
   170d0:	sub	r1, r1, r5
   170d4:	ldr	r0, [r3, r8]
   170d8:	mla	r9, r0, r6, r1
   170dc:	b	1711c <ReadDataSlabN+0x1b08>
   170e0:	ldr	r0, [r3, r8]
   170e4:	cmp	r0, #0
   170e8:	beq	1711c <ReadDataSlabN+0x1b08>
   170ec:	add	r1, sp, #56	; 0x38
   170f0:	mov	r2, #1
   170f4:	ldr	r5, [r1, r8]
   170f8:	ldr	r1, [sp, #52]	; 0x34
   170fc:	mul	r0, r0, r1
   17100:	mul	r1, r0, r5
   17104:	ldr	r0, [sp, #48]	; 0x30
   17108:	ldr	r0, [r0]
   1710c:	bl	1a68 <fseek@plt>
   17110:	ldr	r3, [sp, #28]
   17114:	ldr	r0, [r3, r8]
   17118:	mla	r9, r0, r5, r9
   1711c:	subs	sl, sl, #1
   17120:	add	r8, r8, #4
   17124:	bne	17058 <ReadDataSlabN+0x1a44>
   17128:	b	17150 <ReadDataSlabN+0x1b3c>
   1712c:	ldr	r0, [sp, #12]
   17130:	mov	r2, #1
   17134:	ldr	r5, [r0, r8]
   17138:	ldr	r0, [sp, #52]	; 0x34
   1713c:	mul	r1, r5, r0
   17140:	ldr	r0, [sp, #48]	; 0x30
   17144:	ldr	r0, [r0]
   17148:	bl	1a68 <fseek@plt>
   1714c:	add	r9, r5, r9
   17150:	ldr	r0, [fp, #24]
   17154:	ldr	r2, [sp, #24]
   17158:	ldr	r1, [sp, #20]
   1715c:	ldr	r0, [r0]
   17160:	add	r2, r0, r2
   17164:	mov	r0, #0
   17168:	cmp	r2, r1
   1716c:	str	r2, [sp, #24]
   17170:	blt	16fac <ReadDataSlabN+0x1998>
   17174:	b	15698 <ReadDataSlabN+0x84>
   17178:	ldr	r6, [fp, #16]
   1717c:	ldr	r0, [sp, #52]	; 0x34
   17180:	mov	r2, #1
   17184:	mul	r1, r9, r0
   17188:	ldr	r0, [lr]
   1718c:	bl	1a68 <fseek@plt>
   17190:	ldr	r0, [fp, #20]
   17194:	ldr	r0, [r0]
   17198:	cmp	r0, #1
   1719c:	bne	189e0 <ReadDataSlabN+0x33cc>
   171a0:	ldr	r0, [sp, #20]
   171a4:	cmp	r0, #1
   171a8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   171ac:	add	r0, sp, #96	; 0x60
   171b0:	mov	r1, r4
   171b4:	orr	r4, r0, #4
   171b8:	add	r0, sl, #4
   171bc:	str	r0, [sp, #40]	; 0x28
   171c0:	orr	r0, r8, #4
   171c4:	str	r0, [sp, #32]
   171c8:	add	r0, r6, #4
   171cc:	str	r0, [sp, #28]
   171d0:	ldr	r0, [fp, #8]
   171d4:	sub	r0, r0, #1
   171d8:	str	r0, [sp, #16]
   171dc:	orr	r0, r1, #4
   171e0:	str	r0, [sp, #12]
   171e4:	mov	r0, #0
   171e8:	str	r0, [sp, #24]
   171ec:	ldr	r5, [fp, #16]
   171f0:	ldr	r0, [r5]
   171f4:	cmp	r0, #0
   171f8:	beq	17228 <ReadDataSlabN+0x1c14>
   171fc:	ldr	sl, [sp, #52]	; 0x34
   17200:	ldr	r8, [sp, #48]	; 0x30
   17204:	mov	r2, #1
   17208:	mul	r1, r0, sl
   1720c:	ldr	r0, [r8]
   17210:	bl	1a68 <fseek@plt>
   17214:	ldr	r0, [r5]
   17218:	ldr	r2, [sp, #44]	; 0x2c
   1721c:	ldr	r7, [fp, #24]
   17220:	add	r9, r0, r9
   17224:	b	17238 <ReadDataSlabN+0x1c24>
   17228:	ldr	r2, [sp, #44]	; 0x2c
   1722c:	ldr	r8, [sp, #48]	; 0x30
   17230:	ldr	r7, [fp, #24]
   17234:	ldr	sl, [sp, #52]	; 0x34
   17238:	ldr	r0, [sp, #36]	; 0x24
   1723c:	ldr	r1, [sp, #24]
   17240:	ldr	r3, [r7]
   17244:	add	r1, r0, r1, lsl #3
   17248:	mov	r0, r8
   1724c:	bl	7ba0 <ReadInt64Data>
   17250:	ldr	r0, [fp, #12]
   17254:	ldr	r5, [r5]
   17258:	ldr	r1, [r7]
   1725c:	mov	r2, #1
   17260:	ldr	r6, [r0]
   17264:	sub	r0, r6, r5
   17268:	sub	r0, r0, r1
   1726c:	mul	r1, r0, sl
   17270:	ldr	r0, [r8]
   17274:	bl	1a68 <fseek@plt>
   17278:	add	r0, r6, r9
   1727c:	sub	r9, r0, r5
   17280:	ldr	r0, [fp, #8]
   17284:	cmp	r0, #2
   17288:	blt	17390 <ReadDataSlabN+0x1d7c>
   1728c:	ldr	sl, [sp, #16]
   17290:	ldr	r3, [sp, #28]
   17294:	mov	r8, #0
   17298:	ldr	r0, [r4, r8]
   1729c:	ldr	r1, [sp, #40]	; 0x28
   172a0:	add	r0, r0, #1
   172a4:	str	r0, [r4, r8]
   172a8:	ldr	r1, [r1, r8]
   172ac:	sdiv	r2, r0, r1
   172b0:	mls	r0, r2, r1, r0
   172b4:	cmp	r0, #0
   172b8:	bne	1736c <ReadDataSlabN+0x1d58>
   172bc:	mov	r0, #0
   172c0:	str	r0, [r4, r8]
   172c4:	ldr	r0, [sp, #32]
   172c8:	ldr	r7, [r0, r8]
   172cc:	sdiv	r0, r9, r7
   172d0:	mls	r5, r0, r7, r9
   172d4:	cmp	r5, #0
   172d8:	beq	17320 <ReadDataSlabN+0x1d0c>
   172dc:	add	r0, sp, #56	; 0x38
   172e0:	sub	r1, r7, r5
   172e4:	mov	r2, #1
   172e8:	ldr	r6, [r0, r8]
   172ec:	ldr	r0, [r3, r8]
   172f0:	mla	r0, r0, r6, r1
   172f4:	ldr	r1, [sp, #52]	; 0x34
   172f8:	mul	r1, r0, r1
   172fc:	ldr	r0, [sp, #48]	; 0x30
   17300:	ldr	r0, [r0]
   17304:	bl	1a68 <fseek@plt>
   17308:	ldr	r3, [sp, #28]
   1730c:	add	r1, r7, r9
   17310:	sub	r1, r1, r5
   17314:	ldr	r0, [r3, r8]
   17318:	mla	r9, r0, r6, r1
   1731c:	b	1735c <ReadDataSlabN+0x1d48>
   17320:	ldr	r0, [r3, r8]
   17324:	cmp	r0, #0
   17328:	beq	1735c <ReadDataSlabN+0x1d48>
   1732c:	add	r1, sp, #56	; 0x38
   17330:	mov	r2, #1
   17334:	ldr	r5, [r1, r8]
   17338:	ldr	r1, [sp, #52]	; 0x34
   1733c:	mul	r0, r0, r1
   17340:	mul	r1, r0, r5
   17344:	ldr	r0, [sp, #48]	; 0x30
   17348:	ldr	r0, [r0]
   1734c:	bl	1a68 <fseek@plt>
   17350:	ldr	r3, [sp, #28]
   17354:	ldr	r0, [r3, r8]
   17358:	mla	r9, r0, r5, r9
   1735c:	subs	sl, sl, #1
   17360:	add	r8, r8, #4
   17364:	bne	17298 <ReadDataSlabN+0x1c84>
   17368:	b	17390 <ReadDataSlabN+0x1d7c>
   1736c:	ldr	r0, [sp, #12]
   17370:	mov	r2, #1
   17374:	ldr	r5, [r0, r8]
   17378:	ldr	r0, [sp, #52]	; 0x34
   1737c:	mul	r1, r5, r0
   17380:	ldr	r0, [sp, #48]	; 0x30
   17384:	ldr	r0, [r0]
   17388:	bl	1a68 <fseek@plt>
   1738c:	add	r9, r5, r9
   17390:	ldr	r0, [fp, #24]
   17394:	ldr	r2, [sp, #24]
   17398:	ldr	r1, [sp, #20]
   1739c:	ldr	r0, [r0]
   173a0:	add	r2, r0, r2
   173a4:	mov	r0, #0
   173a8:	cmp	r2, r1
   173ac:	str	r2, [sp, #24]
   173b0:	blt	171ec <ReadDataSlabN+0x1bd8>
   173b4:	b	15698 <ReadDataSlabN+0x84>
   173b8:	ldr	r6, [fp, #16]
   173bc:	ldr	r0, [sp, #52]	; 0x34
   173c0:	mov	r2, #1
   173c4:	mul	r1, r9, r0
   173c8:	ldr	r0, [lr]
   173cc:	bl	1a68 <fseek@plt>
   173d0:	ldr	r0, [fp, #20]
   173d4:	ldr	r0, [r0]
   173d8:	cmp	r0, #1
   173dc:	bne	18c68 <ReadDataSlabN+0x3654>
   173e0:	ldr	r0, [sp, #20]
   173e4:	cmp	r0, #1
   173e8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   173ec:	add	r0, sp, #96	; 0x60
   173f0:	mov	r1, r4
   173f4:	add	r3, r6, #4
   173f8:	orr	r4, r0, #4
   173fc:	add	r0, sl, #4
   17400:	str	r3, [sp, #28]
   17404:	str	r0, [sp, #40]	; 0x28
   17408:	orr	r0, r8, #4
   1740c:	str	r0, [sp, #32]
   17410:	ldr	r0, [fp, #8]
   17414:	sub	r0, r0, #1
   17418:	str	r0, [sp, #16]
   1741c:	orr	r0, r1, #4
   17420:	str	r0, [sp, #12]
   17424:	mov	r0, #0
   17428:	str	r0, [sp, #24]
   1742c:	ldr	r5, [fp, #16]
   17430:	ldr	r0, [r5]
   17434:	cmp	r0, #0
   17438:	beq	17468 <ReadDataSlabN+0x1e54>
   1743c:	ldr	sl, [sp, #52]	; 0x34
   17440:	ldr	r8, [sp, #48]	; 0x30
   17444:	mov	r2, #1
   17448:	mul	r1, r0, sl
   1744c:	ldr	r0, [r8]
   17450:	bl	1a68 <fseek@plt>
   17454:	ldr	r0, [r5]
   17458:	ldr	r2, [sp, #44]	; 0x2c
   1745c:	ldr	r7, [fp, #24]
   17460:	add	r9, r0, r9
   17464:	b	17478 <ReadDataSlabN+0x1e64>
   17468:	ldr	r2, [sp, #44]	; 0x2c
   1746c:	ldr	r8, [sp, #48]	; 0x30
   17470:	ldr	r7, [fp, #24]
   17474:	ldr	sl, [sp, #52]	; 0x34
   17478:	ldr	r0, [sp, #36]	; 0x24
   1747c:	ldr	r1, [sp, #24]
   17480:	ldr	r3, [r7]
   17484:	add	r1, r0, r1, lsl #3
   17488:	mov	r0, r8
   1748c:	bl	983c <ReadUInt64Data>
   17490:	ldr	r0, [fp, #12]
   17494:	ldr	r5, [r5]
   17498:	ldr	r1, [r7]
   1749c:	mov	r2, #1
   174a0:	ldr	r6, [r0]
   174a4:	sub	r0, r6, r5
   174a8:	sub	r0, r0, r1
   174ac:	mul	r1, r0, sl
   174b0:	ldr	r0, [r8]
   174b4:	bl	1a68 <fseek@plt>
   174b8:	add	r0, r6, r9
   174bc:	sub	r9, r0, r5
   174c0:	ldr	r0, [fp, #8]
   174c4:	cmp	r0, #2
   174c8:	blt	175d0 <ReadDataSlabN+0x1fbc>
   174cc:	ldr	sl, [sp, #16]
   174d0:	ldr	r3, [sp, #28]
   174d4:	mov	r8, #0
   174d8:	ldr	r0, [r4, r8]
   174dc:	ldr	r1, [sp, #40]	; 0x28
   174e0:	add	r0, r0, #1
   174e4:	str	r0, [r4, r8]
   174e8:	ldr	r1, [r1, r8]
   174ec:	sdiv	r2, r0, r1
   174f0:	mls	r0, r2, r1, r0
   174f4:	cmp	r0, #0
   174f8:	bne	175ac <ReadDataSlabN+0x1f98>
   174fc:	mov	r0, #0
   17500:	str	r0, [r4, r8]
   17504:	ldr	r0, [sp, #32]
   17508:	ldr	r7, [r0, r8]
   1750c:	sdiv	r0, r9, r7
   17510:	mls	r5, r0, r7, r9
   17514:	cmp	r5, #0
   17518:	beq	17560 <ReadDataSlabN+0x1f4c>
   1751c:	add	r0, sp, #56	; 0x38
   17520:	sub	r1, r7, r5
   17524:	mov	r2, #1
   17528:	ldr	r6, [r0, r8]
   1752c:	ldr	r0, [r3, r8]
   17530:	mla	r0, r0, r6, r1
   17534:	ldr	r1, [sp, #52]	; 0x34
   17538:	mul	r1, r0, r1
   1753c:	ldr	r0, [sp, #48]	; 0x30
   17540:	ldr	r0, [r0]
   17544:	bl	1a68 <fseek@plt>
   17548:	ldr	r3, [sp, #28]
   1754c:	add	r1, r7, r9
   17550:	sub	r1, r1, r5
   17554:	ldr	r0, [r3, r8]
   17558:	mla	r9, r0, r6, r1
   1755c:	b	1759c <ReadDataSlabN+0x1f88>
   17560:	ldr	r0, [r3, r8]
   17564:	cmp	r0, #0
   17568:	beq	1759c <ReadDataSlabN+0x1f88>
   1756c:	add	r1, sp, #56	; 0x38
   17570:	mov	r2, #1
   17574:	ldr	r5, [r1, r8]
   17578:	ldr	r1, [sp, #52]	; 0x34
   1757c:	mul	r0, r0, r1
   17580:	mul	r1, r0, r5
   17584:	ldr	r0, [sp, #48]	; 0x30
   17588:	ldr	r0, [r0]
   1758c:	bl	1a68 <fseek@plt>
   17590:	ldr	r3, [sp, #28]
   17594:	ldr	r0, [r3, r8]
   17598:	mla	r9, r0, r5, r9
   1759c:	subs	sl, sl, #1
   175a0:	add	r8, r8, #4
   175a4:	bne	174d8 <ReadDataSlabN+0x1ec4>
   175a8:	b	175d0 <ReadDataSlabN+0x1fbc>
   175ac:	ldr	r0, [sp, #12]
   175b0:	mov	r2, #1
   175b4:	ldr	r5, [r0, r8]
   175b8:	ldr	r0, [sp, #52]	; 0x34
   175bc:	mul	r1, r5, r0
   175c0:	ldr	r0, [sp, #48]	; 0x30
   175c4:	ldr	r0, [r0]
   175c8:	bl	1a68 <fseek@plt>
   175cc:	add	r9, r5, r9
   175d0:	ldr	r0, [fp, #24]
   175d4:	ldr	r2, [sp, #24]
   175d8:	ldr	r1, [sp, #20]
   175dc:	ldr	r0, [r0]
   175e0:	add	r2, r0, r2
   175e4:	mov	r0, #0
   175e8:	cmp	r2, r1
   175ec:	str	r2, [sp, #24]
   175f0:	blt	1742c <ReadDataSlabN+0x1e18>
   175f4:	b	15698 <ReadDataSlabN+0x84>
   175f8:	ldr	r0, [sp, #24]
   175fc:	cmp	r0, #1
   17600:	blt	18ee8 <ReadDataSlabN+0x38d4>
   17604:	mov	r0, sl
   17608:	add	r1, sp, #96	; 0x60
   1760c:	mov	r5, #0
   17610:	add	r3, r0, #4
   17614:	ldr	r0, [fp, #8]
   17618:	orr	sl, r1, #4
   1761c:	add	r1, r6, #4
   17620:	str	r1, [sp, #40]	; 0x28
   17624:	orr	r1, r8, #4
   17628:	str	sl, [sp, #16]
   1762c:	str	r3, [sp, #28]
   17630:	str	r1, [sp, #32]
   17634:	sub	r0, r0, #1
   17638:	str	r0, [sp, #12]
   1763c:	orr	r0, r4, #4
   17640:	str	r0, [sp, #8]
   17644:	ldr	r4, [fp, #16]
   17648:	ldr	r0, [r4]
   1764c:	cmp	r0, #0
   17650:	beq	17678 <ReadDataSlabN+0x2064>
   17654:	ldr	r1, [sp, #52]	; 0x34
   17658:	mov	r2, #1
   1765c:	mul	r1, r0, r1
   17660:	ldr	r0, [sp, #48]	; 0x30
   17664:	ldr	r0, [r0]
   17668:	bl	1a68 <fseek@plt>
   1766c:	ldr	r0, [r4]
   17670:	add	r9, r0, r9
   17674:	b	1767c <ReadDataSlabN+0x2068>
   17678:	mov	r0, #0
   1767c:	ldr	r1, [fp, #24]
   17680:	ldr	r2, [fp, #20]
   17684:	str	r5, [sp, #20]
   17688:	ldr	r1, [r1]
   1768c:	cmp	r1, #0
   17690:	ble	1770c <ReadDataSlabN+0x20f8>
   17694:	ldr	r0, [sp, #36]	; 0x24
   17698:	ldr	r4, [sp, #44]	; 0x2c
   1769c:	ldr	r6, [sp, #48]	; 0x30
   176a0:	ldr	sl, [sp, #52]	; 0x34
   176a4:	mov	r7, #0
   176a8:	mov	r8, r2
   176ac:	add	r5, r0, r5, lsl #3
   176b0:	mov	r0, r6
   176b4:	mov	r1, r5
   176b8:	mov	r2, r4
   176bc:	mov	r3, #1
   176c0:	bl	377c <ReadDoubleData>
   176c4:	ldr	r0, [r8]
   176c8:	mov	r2, #1
   176cc:	sub	r0, r0, #1
   176d0:	mul	r1, r0, sl
   176d4:	ldr	r0, [r6]
   176d8:	bl	1a68 <fseek@plt>
   176dc:	ldr	r0, [fp, #24]
   176e0:	ldr	r2, [r8]
   176e4:	add	r7, r7, #1
   176e8:	add	r5, r5, #8
   176ec:	ldr	r1, [r0]
   176f0:	add	r9, r2, r9
   176f4:	cmp	r7, r1
   176f8:	blt	176b0 <ReadDataSlabN+0x209c>
   176fc:	ldr	r0, [fp, #16]
   17700:	ldr	sl, [sp, #16]
   17704:	ldr	r0, [r0]
   17708:	b	17710 <ReadDataSlabN+0x20fc>
   1770c:	ldr	r2, [r2]
   17710:	ldr	r3, [fp, #12]
   17714:	ldr	r3, [r3]
   17718:	mls	r1, r2, r1, r3
   1771c:	mov	r2, #1
   17720:	sub	r4, r1, r0
   17724:	ldr	r0, [sp, #52]	; 0x34
   17728:	mul	r1, r4, r0
   1772c:	ldr	r0, [sp, #48]	; 0x30
   17730:	ldr	r0, [r0]
   17734:	bl	1a68 <fseek@plt>
   17738:	ldr	r0, [fp, #8]
   1773c:	add	r9, r4, r9
   17740:	cmp	r0, #2
   17744:	blt	1784c <ReadDataSlabN+0x2238>
   17748:	ldr	r7, [sp, #12]
   1774c:	ldr	r3, [sp, #28]
   17750:	mov	r5, #0
   17754:	ldr	r0, [sl, r5]
   17758:	ldr	r1, [sp, #40]	; 0x28
   1775c:	add	r0, r0, #1
   17760:	str	r0, [sl, r5]
   17764:	ldr	r1, [r1, r5]
   17768:	sdiv	r2, r0, r1
   1776c:	mls	r0, r2, r1, r0
   17770:	cmp	r0, #0
   17774:	bne	17828 <ReadDataSlabN+0x2214>
   17778:	mov	r0, #0
   1777c:	str	r0, [sl, r5]
   17780:	ldr	r0, [sp, #32]
   17784:	ldr	r4, [r0, r5]
   17788:	sdiv	r0, r9, r4
   1778c:	mls	r8, r0, r4, r9
   17790:	cmp	r8, #0
   17794:	beq	177dc <ReadDataSlabN+0x21c8>
   17798:	add	r0, sp, #56	; 0x38
   1779c:	sub	r1, r4, r8
   177a0:	mov	r2, #1
   177a4:	ldr	r6, [r0, r5]
   177a8:	ldr	r0, [r3, r5]
   177ac:	mla	r0, r0, r6, r1
   177b0:	ldr	r1, [sp, #52]	; 0x34
   177b4:	mul	r1, r0, r1
   177b8:	ldr	r0, [sp, #48]	; 0x30
   177bc:	ldr	r0, [r0]
   177c0:	bl	1a68 <fseek@plt>
   177c4:	ldr	r3, [sp, #28]
   177c8:	add	r1, r4, r9
   177cc:	sub	r1, r1, r8
   177d0:	ldr	r0, [r3, r5]
   177d4:	mla	r9, r0, r6, r1
   177d8:	b	17818 <ReadDataSlabN+0x2204>
   177dc:	ldr	r0, [r3, r5]
   177e0:	cmp	r0, #0
   177e4:	beq	17818 <ReadDataSlabN+0x2204>
   177e8:	add	r1, sp, #56	; 0x38
   177ec:	mov	r2, #1
   177f0:	ldr	r4, [r1, r5]
   177f4:	ldr	r1, [sp, #52]	; 0x34
   177f8:	mul	r0, r0, r1
   177fc:	mul	r1, r0, r4
   17800:	ldr	r0, [sp, #48]	; 0x30
   17804:	ldr	r0, [r0]
   17808:	bl	1a68 <fseek@plt>
   1780c:	ldr	r3, [sp, #28]
   17810:	ldr	r0, [r3, r5]
   17814:	mla	r9, r0, r4, r9
   17818:	subs	r7, r7, #1
   1781c:	add	r5, r5, #4
   17820:	bne	17754 <ReadDataSlabN+0x2140>
   17824:	b	1784c <ReadDataSlabN+0x2238>
   17828:	ldr	r0, [sp, #8]
   1782c:	mov	r2, #1
   17830:	ldr	r4, [r0, r5]
   17834:	ldr	r0, [sp, #52]	; 0x34
   17838:	mul	r1, r4, r0
   1783c:	ldr	r0, [sp, #48]	; 0x30
   17840:	ldr	r0, [r0]
   17844:	bl	1a68 <fseek@plt>
   17848:	add	r9, r4, r9
   1784c:	ldr	r0, [fp, #24]
   17850:	ldr	r5, [sp, #20]
   17854:	ldr	r1, [sp, #24]
   17858:	ldr	r0, [r0]
   1785c:	add	r5, r0, r5
   17860:	mov	r0, #0
   17864:	cmp	r5, r1
   17868:	blt	17644 <ReadDataSlabN+0x2030>
   1786c:	b	15698 <ReadDataSlabN+0x84>
   17870:	ldr	r0, [sp, #20]
   17874:	cmp	r0, #1
   17878:	blt	18ee8 <ReadDataSlabN+0x38d4>
   1787c:	add	r0, sp, #96	; 0x60
   17880:	add	r3, r6, #4
   17884:	add	r1, sl, #4
   17888:	mov	r5, #0
   1788c:	orr	r0, r0, #4
   17890:	str	r1, [sp, #40]	; 0x28
   17894:	orr	r1, r8, #4
   17898:	str	r3, [sp, #28]
   1789c:	mov	r6, r0
   178a0:	ldr	r0, [fp, #8]
   178a4:	str	r1, [sp, #32]
   178a8:	str	r6, [sp, #24]
   178ac:	sub	r0, r0, #1
   178b0:	str	r0, [sp, #12]
   178b4:	orr	r0, r4, #4
   178b8:	str	r0, [sp, #8]
   178bc:	ldr	r4, [fp, #16]
   178c0:	ldr	r0, [r4]
   178c4:	cmp	r0, #0
   178c8:	beq	178f0 <ReadDataSlabN+0x22dc>
   178cc:	ldr	r1, [sp, #52]	; 0x34
   178d0:	ldr	sl, [sp, #48]	; 0x30
   178d4:	mov	r2, #1
   178d8:	mul	r1, r0, r1
   178dc:	ldr	r0, [sl]
   178e0:	bl	1a68 <fseek@plt>
   178e4:	ldr	r0, [r4]
   178e8:	add	r9, r0, r9
   178ec:	b	178f8 <ReadDataSlabN+0x22e4>
   178f0:	ldr	sl, [sp, #48]	; 0x30
   178f4:	mov	r0, #0
   178f8:	ldr	r1, [fp, #24]
   178fc:	ldr	r4, [sp, #44]	; 0x2c
   17900:	str	r5, [sp, #16]
   17904:	ldr	r1, [r1]
   17908:	cmp	r1, #0
   1790c:	ble	17984 <ReadDataSlabN+0x2370>
   17910:	ldr	r0, [sp, #36]	; 0x24
   17914:	ldr	r8, [sp, #52]	; 0x34
   17918:	ldr	r6, [fp, #20]
   1791c:	mov	r7, #0
   17920:	add	r5, r0, r5, lsl #2
   17924:	mov	r0, sl
   17928:	mov	r1, r5
   1792c:	mov	r2, r4
   17930:	mov	r3, #1
   17934:	bl	5fa0 <ReadSingleData>
   17938:	ldr	r0, [r6]
   1793c:	mov	r2, #1
   17940:	sub	r0, r0, #1
   17944:	mul	r1, r0, r8
   17948:	ldr	r0, [sl]
   1794c:	bl	1a68 <fseek@plt>
   17950:	ldr	r0, [fp, #24]
   17954:	ldr	r2, [r6]
   17958:	add	r7, r7, #1
   1795c:	add	r5, r5, #4
   17960:	ldr	r1, [r0]
   17964:	add	r9, r2, r9
   17968:	cmp	r7, r1
   1796c:	blt	17924 <ReadDataSlabN+0x2310>
   17970:	ldr	r0, [fp, #16]
   17974:	ldr	r6, [sp, #24]
   17978:	add	r8, sp, #56	; 0x38
   1797c:	ldr	r0, [r0]
   17980:	b	1798c <ReadDataSlabN+0x2378>
   17984:	ldr	r2, [fp, #20]
   17988:	ldr	r2, [r2]
   1798c:	ldr	r3, [fp, #12]
   17990:	ldr	r3, [r3]
   17994:	mls	r1, r2, r1, r3
   17998:	mov	r2, #1
   1799c:	sub	r4, r1, r0
   179a0:	ldr	r0, [sp, #52]	; 0x34
   179a4:	mul	r1, r4, r0
   179a8:	ldr	r0, [sl]
   179ac:	bl	1a68 <fseek@plt>
   179b0:	ldr	r0, [fp, #8]
   179b4:	add	r9, r4, r9
   179b8:	cmp	r0, #2
   179bc:	blt	17acc <ReadDataSlabN+0x24b8>
   179c0:	ldr	r7, [sp, #12]
   179c4:	ldr	r3, [sp, #28]
   179c8:	mov	r5, #0
   179cc:	ldr	r0, [r6, r5]
   179d0:	ldr	r1, [sp, #40]	; 0x28
   179d4:	add	r0, r0, #1
   179d8:	str	r0, [r6, r5]
   179dc:	ldr	r1, [r1, r5]
   179e0:	sdiv	r2, r0, r1
   179e4:	mls	r0, r2, r1, r0
   179e8:	cmp	r0, #0
   179ec:	bne	17aac <ReadDataSlabN+0x2498>
   179f0:	mov	r0, #0
   179f4:	str	r0, [r6, r5]
   179f8:	ldr	r0, [sp, #32]
   179fc:	ldr	sl, [r0, r5]
   17a00:	sdiv	r0, r9, sl
   17a04:	mls	r4, r0, sl, r9
   17a08:	cmp	r4, #0
   17a0c:	beq	17a5c <ReadDataSlabN+0x2448>
   17a10:	ldr	r6, [r8, r5]
   17a14:	ldr	r0, [r3, r5]
   17a18:	sub	r1, sl, r4
   17a1c:	ldr	r8, [sp, #48]	; 0x30
   17a20:	mov	r2, #1
   17a24:	mla	r0, r0, r6, r1
   17a28:	ldr	r1, [sp, #52]	; 0x34
   17a2c:	mul	r1, r0, r1
   17a30:	ldr	r0, [r8]
   17a34:	bl	1a68 <fseek@plt>
   17a38:	ldr	r3, [sp, #28]
   17a3c:	add	r1, sl, r9
   17a40:	mov	sl, r8
   17a44:	add	r8, sp, #56	; 0x38
   17a48:	sub	r1, r1, r4
   17a4c:	ldr	r0, [r3, r5]
   17a50:	mla	r9, r0, r6, r1
   17a54:	ldr	r6, [sp, #24]
   17a58:	b	17a9c <ReadDataSlabN+0x2488>
   17a5c:	ldr	r0, [r3, r5]
   17a60:	cmp	r0, #0
   17a64:	beq	17a98 <ReadDataSlabN+0x2484>
   17a68:	ldr	r1, [sp, #52]	; 0x34
   17a6c:	ldr	r4, [r8, r5]
   17a70:	ldr	sl, [sp, #48]	; 0x30
   17a74:	mov	r2, #1
   17a78:	mul	r0, r0, r1
   17a7c:	mul	r1, r0, r4
   17a80:	ldr	r0, [sl]
   17a84:	bl	1a68 <fseek@plt>
   17a88:	ldr	r3, [sp, #28]
   17a8c:	ldr	r0, [r3, r5]
   17a90:	mla	r9, r0, r4, r9
   17a94:	b	17a9c <ReadDataSlabN+0x2488>
   17a98:	ldr	sl, [sp, #48]	; 0x30
   17a9c:	subs	r7, r7, #1
   17aa0:	add	r5, r5, #4
   17aa4:	bne	179cc <ReadDataSlabN+0x23b8>
   17aa8:	b	17acc <ReadDataSlabN+0x24b8>
   17aac:	ldr	r0, [sp, #8]
   17ab0:	mov	r2, #1
   17ab4:	ldr	r4, [r0, r5]
   17ab8:	ldr	r0, [sp, #52]	; 0x34
   17abc:	mul	r1, r4, r0
   17ac0:	ldr	r0, [sl]
   17ac4:	bl	1a68 <fseek@plt>
   17ac8:	add	r9, r4, r9
   17acc:	ldr	r0, [fp, #24]
   17ad0:	ldr	r5, [sp, #16]
   17ad4:	ldr	r1, [sp, #20]
   17ad8:	ldr	r0, [r0]
   17adc:	add	r5, r0, r5
   17ae0:	mov	r0, #0
   17ae4:	cmp	r5, r1
   17ae8:	blt	178bc <ReadDataSlabN+0x22a8>
   17aec:	b	15698 <ReadDataSlabN+0x84>
   17af0:	ldr	r0, [sp, #20]
   17af4:	cmp	r0, #1
   17af8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   17afc:	add	r0, sp, #96	; 0x60
   17b00:	add	r3, r6, #4
   17b04:	mov	r7, #0
   17b08:	orr	r9, r0, #4
   17b0c:	add	r0, sl, #4
   17b10:	str	r3, [sp, #24]
   17b14:	str	r0, [sp, #32]
   17b18:	orr	r0, r8, #4
   17b1c:	str	r9, [sp, #12]
   17b20:	str	r0, [sp, #28]
   17b24:	ldr	r0, [fp, #8]
   17b28:	sub	r0, r0, #1
   17b2c:	str	r0, [sp, #8]
   17b30:	orr	r0, r4, #4
   17b34:	str	r0, [sp, #4]
   17b38:	ldr	r4, [fp, #16]
   17b3c:	ldr	r0, [r4]
   17b40:	cmp	r0, #0
   17b44:	beq	17b6c <ReadDataSlabN+0x2558>
   17b48:	ldr	r1, [sp, #52]	; 0x34
   17b4c:	ldr	r6, [sp, #48]	; 0x30
   17b50:	mov	r2, #1
   17b54:	mul	r1, r0, r1
   17b58:	ldr	r0, [r6]
   17b5c:	bl	1a68 <fseek@plt>
   17b60:	ldr	r0, [r4]
   17b64:	add	r5, r0, r5
   17b68:	b	17b74 <ReadDataSlabN+0x2560>
   17b6c:	ldr	r6, [sp, #48]	; 0x30
   17b70:	mov	r0, #0
   17b74:	ldr	r8, [fp, #24]
   17b78:	ldr	r2, [sp, #44]	; 0x2c
   17b7c:	str	r7, [sp, #16]
   17b80:	ldr	r1, [r8]
   17b84:	cmp	r1, #0
   17b88:	ble	17c00 <ReadDataSlabN+0x25ec>
   17b8c:	ldr	r0, [sp, #36]	; 0x24
   17b90:	ldr	r9, [sp, #52]	; 0x34
   17b94:	ldr	sl, [fp, #20]
   17b98:	mov	r4, #0
   17b9c:	add	r0, r0, r7
   17ba0:	str	r0, [sp, #40]	; 0x28
   17ba4:	ldr	r0, [sp, #40]	; 0x28
   17ba8:	mov	r3, #1
   17bac:	mov	r7, r2
   17bb0:	add	r1, r0, r4
   17bb4:	mov	r0, r6
   17bb8:	bl	11e88 <ReadInt8Data>
   17bbc:	ldr	r0, [sl]
   17bc0:	mov	r2, #1
   17bc4:	sub	r0, r0, #1
   17bc8:	mul	r1, r0, r9
   17bcc:	ldr	r0, [r6]
   17bd0:	bl	1a68 <fseek@plt>
   17bd4:	mov	r2, r7
   17bd8:	ldr	r7, [sl]
   17bdc:	ldr	r1, [r8]
   17be0:	add	r4, r4, #1
   17be4:	add	r5, r7, r5
   17be8:	cmp	r4, r1
   17bec:	blt	17ba4 <ReadDataSlabN+0x2590>
   17bf0:	ldr	r0, [fp, #16]
   17bf4:	ldr	r9, [sp, #12]
   17bf8:	ldr	r0, [r0]
   17bfc:	b	17c08 <ReadDataSlabN+0x25f4>
   17c00:	ldr	r2, [fp, #20]
   17c04:	ldr	r7, [r2]
   17c08:	ldr	r3, [fp, #12]
   17c0c:	mov	r2, #1
   17c10:	ldr	r3, [r3]
   17c14:	mls	r1, r7, r1, r3
   17c18:	sub	r4, r1, r0
   17c1c:	ldr	r0, [sp, #52]	; 0x34
   17c20:	mul	r1, r4, r0
   17c24:	ldr	r0, [r6]
   17c28:	bl	1a68 <fseek@plt>
   17c2c:	ldr	r0, [fp, #8]
   17c30:	add	r5, r4, r5
   17c34:	add	r8, sp, #56	; 0x38
   17c38:	cmp	r0, #2
   17c3c:	blt	17d44 <ReadDataSlabN+0x2730>
   17c40:	ldr	sl, [sp, #8]
   17c44:	ldr	r3, [sp, #24]
   17c48:	mov	r7, #0
   17c4c:	ldr	r0, [r9, r7]
   17c50:	ldr	r1, [sp, #32]
   17c54:	add	r0, r0, #1
   17c58:	str	r0, [r9, r7]
   17c5c:	ldr	r1, [r1, r7]
   17c60:	sdiv	r2, r0, r1
   17c64:	mls	r0, r2, r1, r0
   17c68:	cmp	r0, #0
   17c6c:	bne	17d20 <ReadDataSlabN+0x270c>
   17c70:	mov	r0, #0
   17c74:	str	r0, [r9, r7]
   17c78:	ldr	r0, [sp, #28]
   17c7c:	ldr	r4, [r0, r7]
   17c80:	sdiv	r0, r5, r4
   17c84:	mls	r6, r0, r4, r5
   17c88:	cmp	r6, #0
   17c8c:	beq	17cd8 <ReadDataSlabN+0x26c4>
   17c90:	add	r0, sp, #56	; 0x38
   17c94:	sub	r1, r4, r6
   17c98:	mov	r2, #1
   17c9c:	ldr	r8, [r0, r7]
   17ca0:	ldr	r0, [r3, r7]
   17ca4:	mla	r0, r0, r8, r1
   17ca8:	ldr	r1, [sp, #52]	; 0x34
   17cac:	mul	r1, r0, r1
   17cb0:	ldr	r0, [sp, #48]	; 0x30
   17cb4:	ldr	r0, [r0]
   17cb8:	bl	1a68 <fseek@plt>
   17cbc:	ldr	r3, [sp, #24]
   17cc0:	add	r1, r4, r5
   17cc4:	sub	r1, r1, r6
   17cc8:	ldr	r0, [r3, r7]
   17ccc:	mla	r5, r0, r8, r1
   17cd0:	add	r8, sp, #56	; 0x38
   17cd4:	b	17d10 <ReadDataSlabN+0x26fc>
   17cd8:	ldr	r0, [r3, r7]
   17cdc:	cmp	r0, #0
   17ce0:	beq	17d10 <ReadDataSlabN+0x26fc>
   17ce4:	ldr	r1, [sp, #52]	; 0x34
   17ce8:	ldr	r4, [r8, r7]
   17cec:	mov	r2, #1
   17cf0:	mul	r0, r0, r1
   17cf4:	mul	r1, r0, r4
   17cf8:	ldr	r0, [sp, #48]	; 0x30
   17cfc:	ldr	r0, [r0]
   17d00:	bl	1a68 <fseek@plt>
   17d04:	ldr	r3, [sp, #24]
   17d08:	ldr	r0, [r3, r7]
   17d0c:	mla	r5, r0, r4, r5
   17d10:	subs	sl, sl, #1
   17d14:	add	r7, r7, #4
   17d18:	bne	17c4c <ReadDataSlabN+0x2638>
   17d1c:	b	17d44 <ReadDataSlabN+0x2730>
   17d20:	ldr	r0, [sp, #4]
   17d24:	mov	r2, #1
   17d28:	ldr	r4, [r0, r7]
   17d2c:	ldr	r0, [sp, #52]	; 0x34
   17d30:	mul	r1, r4, r0
   17d34:	ldr	r0, [sp, #48]	; 0x30
   17d38:	ldr	r0, [r0]
   17d3c:	bl	1a68 <fseek@plt>
   17d40:	add	r5, r4, r5
   17d44:	ldr	r0, [fp, #24]
   17d48:	ldr	r7, [sp, #16]
   17d4c:	ldr	r1, [sp, #20]
   17d50:	ldr	r0, [r0]
   17d54:	add	r7, r0, r7
   17d58:	mov	r0, #0
   17d5c:	cmp	r7, r1
   17d60:	blt	17b38 <ReadDataSlabN+0x2524>
   17d64:	b	15698 <ReadDataSlabN+0x84>
   17d68:	ldr	r0, [sp, #20]
   17d6c:	cmp	r0, #1
   17d70:	blt	18ee8 <ReadDataSlabN+0x38d4>
   17d74:	add	r0, sp, #96	; 0x60
   17d78:	add	r3, r6, #4
   17d7c:	mov	r7, #0
   17d80:	orr	r9, r0, #4
   17d84:	add	r0, sl, #4
   17d88:	str	r3, [sp, #24]
   17d8c:	str	r0, [sp, #32]
   17d90:	orr	r0, r8, #4
   17d94:	str	r9, [sp, #12]
   17d98:	str	r0, [sp, #28]
   17d9c:	ldr	r0, [fp, #8]
   17da0:	sub	r0, r0, #1
   17da4:	str	r0, [sp, #8]
   17da8:	orr	r0, r4, #4
   17dac:	str	r0, [sp, #4]
   17db0:	ldr	r4, [fp, #16]
   17db4:	ldr	r0, [r4]
   17db8:	cmp	r0, #0
   17dbc:	beq	17de4 <ReadDataSlabN+0x27d0>
   17dc0:	ldr	r1, [sp, #52]	; 0x34
   17dc4:	ldr	r6, [sp, #48]	; 0x30
   17dc8:	mov	r2, #1
   17dcc:	mul	r1, r0, r1
   17dd0:	ldr	r0, [r6]
   17dd4:	bl	1a68 <fseek@plt>
   17dd8:	ldr	r0, [r4]
   17ddc:	add	r5, r0, r5
   17de0:	b	17dec <ReadDataSlabN+0x27d8>
   17de4:	ldr	r6, [sp, #48]	; 0x30
   17de8:	mov	r0, #0
   17dec:	ldr	r8, [fp, #24]
   17df0:	ldr	r2, [sp, #44]	; 0x2c
   17df4:	str	r7, [sp, #16]
   17df8:	ldr	r1, [r8]
   17dfc:	cmp	r1, #0
   17e00:	ble	17e78 <ReadDataSlabN+0x2864>
   17e04:	ldr	r0, [sp, #36]	; 0x24
   17e08:	ldr	r9, [sp, #52]	; 0x34
   17e0c:	ldr	sl, [fp, #20]
   17e10:	mov	r4, #0
   17e14:	add	r0, r0, r7
   17e18:	str	r0, [sp, #40]	; 0x28
   17e1c:	ldr	r0, [sp, #40]	; 0x28
   17e20:	mov	r3, #1
   17e24:	mov	r7, r2
   17e28:	add	r1, r0, r4
   17e2c:	mov	r0, r6
   17e30:	bl	13934 <ReadUInt8Data>
   17e34:	ldr	r0, [sl]
   17e38:	mov	r2, #1
   17e3c:	sub	r0, r0, #1
   17e40:	mul	r1, r0, r9
   17e44:	ldr	r0, [r6]
   17e48:	bl	1a68 <fseek@plt>
   17e4c:	mov	r2, r7
   17e50:	ldr	r7, [sl]
   17e54:	ldr	r1, [r8]
   17e58:	add	r4, r4, #1
   17e5c:	add	r5, r7, r5
   17e60:	cmp	r4, r1
   17e64:	blt	17e1c <ReadDataSlabN+0x2808>
   17e68:	ldr	r0, [fp, #16]
   17e6c:	ldr	r9, [sp, #12]
   17e70:	ldr	r0, [r0]
   17e74:	b	17e80 <ReadDataSlabN+0x286c>
   17e78:	ldr	r2, [fp, #20]
   17e7c:	ldr	r7, [r2]
   17e80:	ldr	r3, [fp, #12]
   17e84:	mov	r2, #1
   17e88:	ldr	r3, [r3]
   17e8c:	mls	r1, r7, r1, r3
   17e90:	sub	r4, r1, r0
   17e94:	ldr	r0, [sp, #52]	; 0x34
   17e98:	mul	r1, r4, r0
   17e9c:	ldr	r0, [r6]
   17ea0:	bl	1a68 <fseek@plt>
   17ea4:	ldr	r0, [fp, #8]
   17ea8:	add	r5, r4, r5
   17eac:	add	r8, sp, #56	; 0x38
   17eb0:	cmp	r0, #2
   17eb4:	blt	17fbc <ReadDataSlabN+0x29a8>
   17eb8:	ldr	sl, [sp, #8]
   17ebc:	ldr	r3, [sp, #24]
   17ec0:	mov	r7, #0
   17ec4:	ldr	r0, [r9, r7]
   17ec8:	ldr	r1, [sp, #32]
   17ecc:	add	r0, r0, #1
   17ed0:	str	r0, [r9, r7]
   17ed4:	ldr	r1, [r1, r7]
   17ed8:	sdiv	r2, r0, r1
   17edc:	mls	r0, r2, r1, r0
   17ee0:	cmp	r0, #0
   17ee4:	bne	17f98 <ReadDataSlabN+0x2984>
   17ee8:	mov	r0, #0
   17eec:	str	r0, [r9, r7]
   17ef0:	ldr	r0, [sp, #28]
   17ef4:	ldr	r4, [r0, r7]
   17ef8:	sdiv	r0, r5, r4
   17efc:	mls	r6, r0, r4, r5
   17f00:	cmp	r6, #0
   17f04:	beq	17f50 <ReadDataSlabN+0x293c>
   17f08:	add	r0, sp, #56	; 0x38
   17f0c:	sub	r1, r4, r6
   17f10:	mov	r2, #1
   17f14:	ldr	r8, [r0, r7]
   17f18:	ldr	r0, [r3, r7]
   17f1c:	mla	r0, r0, r8, r1
   17f20:	ldr	r1, [sp, #52]	; 0x34
   17f24:	mul	r1, r0, r1
   17f28:	ldr	r0, [sp, #48]	; 0x30
   17f2c:	ldr	r0, [r0]
   17f30:	bl	1a68 <fseek@plt>
   17f34:	ldr	r3, [sp, #24]
   17f38:	add	r1, r4, r5
   17f3c:	sub	r1, r1, r6
   17f40:	ldr	r0, [r3, r7]
   17f44:	mla	r5, r0, r8, r1
   17f48:	add	r8, sp, #56	; 0x38
   17f4c:	b	17f88 <ReadDataSlabN+0x2974>
   17f50:	ldr	r0, [r3, r7]
   17f54:	cmp	r0, #0
   17f58:	beq	17f88 <ReadDataSlabN+0x2974>
   17f5c:	ldr	r1, [sp, #52]	; 0x34
   17f60:	ldr	r4, [r8, r7]
   17f64:	mov	r2, #1
   17f68:	mul	r0, r0, r1
   17f6c:	mul	r1, r0, r4
   17f70:	ldr	r0, [sp, #48]	; 0x30
   17f74:	ldr	r0, [r0]
   17f78:	bl	1a68 <fseek@plt>
   17f7c:	ldr	r3, [sp, #24]
   17f80:	ldr	r0, [r3, r7]
   17f84:	mla	r5, r0, r4, r5
   17f88:	subs	sl, sl, #1
   17f8c:	add	r7, r7, #4
   17f90:	bne	17ec4 <ReadDataSlabN+0x28b0>
   17f94:	b	17fbc <ReadDataSlabN+0x29a8>
   17f98:	ldr	r0, [sp, #4]
   17f9c:	mov	r2, #1
   17fa0:	ldr	r4, [r0, r7]
   17fa4:	ldr	r0, [sp, #52]	; 0x34
   17fa8:	mul	r1, r4, r0
   17fac:	ldr	r0, [sp, #48]	; 0x30
   17fb0:	ldr	r0, [r0]
   17fb4:	bl	1a68 <fseek@plt>
   17fb8:	add	r5, r4, r5
   17fbc:	ldr	r0, [fp, #24]
   17fc0:	ldr	r7, [sp, #16]
   17fc4:	ldr	r1, [sp, #20]
   17fc8:	ldr	r0, [r0]
   17fcc:	add	r7, r0, r7
   17fd0:	mov	r0, #0
   17fd4:	cmp	r7, r1
   17fd8:	blt	17db0 <ReadDataSlabN+0x279c>
   17fdc:	b	15698 <ReadDataSlabN+0x84>
   17fe0:	ldr	r0, [sp, #20]
   17fe4:	cmp	r0, #1
   17fe8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   17fec:	add	r0, sp, #96	; 0x60
   17ff0:	add	r3, r6, #4
   17ff4:	add	r1, sl, #4
   17ff8:	mov	r5, #0
   17ffc:	orr	r0, r0, #4
   18000:	str	r1, [sp, #40]	; 0x28
   18004:	orr	r1, r8, #4
   18008:	str	r3, [sp, #28]
   1800c:	mov	r6, r0
   18010:	ldr	r0, [fp, #8]
   18014:	str	r1, [sp, #32]
   18018:	str	r6, [sp, #24]
   1801c:	sub	r0, r0, #1
   18020:	str	r0, [sp, #12]
   18024:	orr	r0, r4, #4
   18028:	str	r0, [sp, #8]
   1802c:	ldr	r4, [fp, #16]
   18030:	ldr	r0, [r4]
   18034:	cmp	r0, #0
   18038:	beq	18060 <ReadDataSlabN+0x2a4c>
   1803c:	ldr	r1, [sp, #52]	; 0x34
   18040:	ldr	sl, [sp, #48]	; 0x30
   18044:	mov	r2, #1
   18048:	mul	r1, r0, r1
   1804c:	ldr	r0, [sl]
   18050:	bl	1a68 <fseek@plt>
   18054:	ldr	r0, [r4]
   18058:	add	r9, r0, r9
   1805c:	b	18068 <ReadDataSlabN+0x2a54>
   18060:	ldr	sl, [sp, #48]	; 0x30
   18064:	mov	r0, #0
   18068:	ldr	r1, [fp, #24]
   1806c:	ldr	r4, [sp, #44]	; 0x2c
   18070:	str	r5, [sp, #16]
   18074:	ldr	r1, [r1]
   18078:	cmp	r1, #0
   1807c:	ble	180f4 <ReadDataSlabN+0x2ae0>
   18080:	ldr	r0, [sp, #36]	; 0x24
   18084:	ldr	r6, [sp, #52]	; 0x34
   18088:	ldr	r8, [fp, #20]
   1808c:	mov	r7, #0
   18090:	add	r5, r0, r5, lsl #1
   18094:	mov	r0, sl
   18098:	mov	r1, r5
   1809c:	mov	r2, r4
   180a0:	mov	r3, #1
   180a4:	bl	e9a0 <ReadInt16Data>
   180a8:	ldr	r0, [r8]
   180ac:	mov	r2, #1
   180b0:	sub	r0, r0, #1
   180b4:	mul	r1, r0, r6
   180b8:	ldr	r0, [sl]
   180bc:	bl	1a68 <fseek@plt>
   180c0:	ldr	r0, [fp, #24]
   180c4:	ldr	r2, [r8]
   180c8:	add	r7, r7, #1
   180cc:	add	r5, r5, #2
   180d0:	ldr	r1, [r0]
   180d4:	add	r9, r2, r9
   180d8:	cmp	r7, r1
   180dc:	blt	18094 <ReadDataSlabN+0x2a80>
   180e0:	ldr	r0, [fp, #16]
   180e4:	ldr	r6, [sp, #24]
   180e8:	add	r8, sp, #56	; 0x38
   180ec:	ldr	r0, [r0]
   180f0:	b	180fc <ReadDataSlabN+0x2ae8>
   180f4:	ldr	r2, [fp, #20]
   180f8:	ldr	r2, [r2]
   180fc:	ldr	r3, [fp, #12]
   18100:	ldr	r3, [r3]
   18104:	mls	r1, r2, r1, r3
   18108:	mov	r2, #1
   1810c:	sub	r4, r1, r0
   18110:	ldr	r0, [sp, #52]	; 0x34
   18114:	mul	r1, r4, r0
   18118:	ldr	r0, [sl]
   1811c:	bl	1a68 <fseek@plt>
   18120:	ldr	r0, [fp, #8]
   18124:	add	r9, r4, r9
   18128:	cmp	r0, #2
   1812c:	blt	1823c <ReadDataSlabN+0x2c28>
   18130:	ldr	r7, [sp, #12]
   18134:	ldr	r3, [sp, #28]
   18138:	mov	r5, #0
   1813c:	ldr	r0, [r6, r5]
   18140:	ldr	r1, [sp, #40]	; 0x28
   18144:	add	r0, r0, #1
   18148:	str	r0, [r6, r5]
   1814c:	ldr	r1, [r1, r5]
   18150:	sdiv	r2, r0, r1
   18154:	mls	r0, r2, r1, r0
   18158:	cmp	r0, #0
   1815c:	bne	1821c <ReadDataSlabN+0x2c08>
   18160:	mov	r0, #0
   18164:	str	r0, [r6, r5]
   18168:	ldr	r0, [sp, #32]
   1816c:	ldr	sl, [r0, r5]
   18170:	sdiv	r0, r9, sl
   18174:	mls	r4, r0, sl, r9
   18178:	cmp	r4, #0
   1817c:	beq	181cc <ReadDataSlabN+0x2bb8>
   18180:	ldr	r6, [r8, r5]
   18184:	ldr	r0, [r3, r5]
   18188:	sub	r1, sl, r4
   1818c:	ldr	r8, [sp, #48]	; 0x30
   18190:	mov	r2, #1
   18194:	mla	r0, r0, r6, r1
   18198:	ldr	r1, [sp, #52]	; 0x34
   1819c:	mul	r1, r0, r1
   181a0:	ldr	r0, [r8]
   181a4:	bl	1a68 <fseek@plt>
   181a8:	ldr	r3, [sp, #28]
   181ac:	add	r1, sl, r9
   181b0:	mov	sl, r8
   181b4:	add	r8, sp, #56	; 0x38
   181b8:	sub	r1, r1, r4
   181bc:	ldr	r0, [r3, r5]
   181c0:	mla	r9, r0, r6, r1
   181c4:	ldr	r6, [sp, #24]
   181c8:	b	1820c <ReadDataSlabN+0x2bf8>
   181cc:	ldr	r0, [r3, r5]
   181d0:	cmp	r0, #0
   181d4:	beq	18208 <ReadDataSlabN+0x2bf4>
   181d8:	ldr	r1, [sp, #52]	; 0x34
   181dc:	ldr	r4, [r8, r5]
   181e0:	ldr	sl, [sp, #48]	; 0x30
   181e4:	mov	r2, #1
   181e8:	mul	r0, r0, r1
   181ec:	mul	r1, r0, r4
   181f0:	ldr	r0, [sl]
   181f4:	bl	1a68 <fseek@plt>
   181f8:	ldr	r3, [sp, #28]
   181fc:	ldr	r0, [r3, r5]
   18200:	mla	r9, r0, r4, r9
   18204:	b	1820c <ReadDataSlabN+0x2bf8>
   18208:	ldr	sl, [sp, #48]	; 0x30
   1820c:	subs	r7, r7, #1
   18210:	add	r5, r5, #4
   18214:	bne	1813c <ReadDataSlabN+0x2b28>
   18218:	b	1823c <ReadDataSlabN+0x2c28>
   1821c:	ldr	r0, [sp, #8]
   18220:	mov	r2, #1
   18224:	ldr	r4, [r0, r5]
   18228:	ldr	r0, [sp, #52]	; 0x34
   1822c:	mul	r1, r4, r0
   18230:	ldr	r0, [sl]
   18234:	bl	1a68 <fseek@plt>
   18238:	add	r9, r4, r9
   1823c:	ldr	r0, [fp, #24]
   18240:	ldr	r5, [sp, #16]
   18244:	ldr	r1, [sp, #20]
   18248:	ldr	r0, [r0]
   1824c:	add	r5, r0, r5
   18250:	mov	r0, #0
   18254:	cmp	r5, r1
   18258:	blt	1802c <ReadDataSlabN+0x2a18>
   1825c:	b	15698 <ReadDataSlabN+0x84>
   18260:	ldr	r0, [sp, #20]
   18264:	cmp	r0, #1
   18268:	blt	18ee8 <ReadDataSlabN+0x38d4>
   1826c:	add	r0, sp, #96	; 0x60
   18270:	add	r3, r6, #4
   18274:	add	r1, sl, #4
   18278:	mov	r5, #0
   1827c:	orr	r0, r0, #4
   18280:	str	r1, [sp, #40]	; 0x28
   18284:	orr	r1, r8, #4
   18288:	str	r3, [sp, #28]
   1828c:	mov	r6, r0
   18290:	ldr	r0, [fp, #8]
   18294:	str	r1, [sp, #32]
   18298:	str	r6, [sp, #24]
   1829c:	sub	r0, r0, #1
   182a0:	str	r0, [sp, #12]
   182a4:	orr	r0, r4, #4
   182a8:	str	r0, [sp, #8]
   182ac:	ldr	r4, [fp, #16]
   182b0:	ldr	r0, [r4]
   182b4:	cmp	r0, #0
   182b8:	beq	182e0 <ReadDataSlabN+0x2ccc>
   182bc:	ldr	r1, [sp, #52]	; 0x34
   182c0:	ldr	sl, [sp, #48]	; 0x30
   182c4:	mov	r2, #1
   182c8:	mul	r1, r0, r1
   182cc:	ldr	r0, [sl]
   182d0:	bl	1a68 <fseek@plt>
   182d4:	ldr	r0, [r4]
   182d8:	add	r9, r0, r9
   182dc:	b	182e8 <ReadDataSlabN+0x2cd4>
   182e0:	ldr	sl, [sp, #48]	; 0x30
   182e4:	mov	r0, #0
   182e8:	ldr	r1, [fp, #24]
   182ec:	ldr	r4, [sp, #44]	; 0x2c
   182f0:	str	r5, [sp, #16]
   182f4:	ldr	r1, [r1]
   182f8:	cmp	r1, #0
   182fc:	ble	18374 <ReadDataSlabN+0x2d60>
   18300:	ldr	r0, [sp, #36]	; 0x24
   18304:	ldr	r6, [sp, #52]	; 0x34
   18308:	ldr	r8, [fp, #20]
   1830c:	mov	r7, #0
   18310:	add	r5, r0, r5, lsl #1
   18314:	mov	r0, sl
   18318:	mov	r1, r5
   1831c:	mov	r2, r4
   18320:	mov	r3, #1
   18324:	bl	10414 <ReadUInt16Data>
   18328:	ldr	r0, [r8]
   1832c:	mov	r2, #1
   18330:	sub	r0, r0, #1
   18334:	mul	r1, r0, r6
   18338:	ldr	r0, [sl]
   1833c:	bl	1a68 <fseek@plt>
   18340:	ldr	r0, [fp, #24]
   18344:	ldr	r2, [r8]
   18348:	add	r7, r7, #1
   1834c:	add	r5, r5, #2
   18350:	ldr	r1, [r0]
   18354:	add	r9, r2, r9
   18358:	cmp	r7, r1
   1835c:	blt	18314 <ReadDataSlabN+0x2d00>
   18360:	ldr	r0, [fp, #16]
   18364:	ldr	r6, [sp, #24]
   18368:	add	r8, sp, #56	; 0x38
   1836c:	ldr	r0, [r0]
   18370:	b	1837c <ReadDataSlabN+0x2d68>
   18374:	ldr	r2, [fp, #20]
   18378:	ldr	r2, [r2]
   1837c:	ldr	r3, [fp, #12]
   18380:	ldr	r3, [r3]
   18384:	mls	r1, r2, r1, r3
   18388:	mov	r2, #1
   1838c:	sub	r4, r1, r0
   18390:	ldr	r0, [sp, #52]	; 0x34
   18394:	mul	r1, r4, r0
   18398:	ldr	r0, [sl]
   1839c:	bl	1a68 <fseek@plt>
   183a0:	ldr	r0, [fp, #8]
   183a4:	add	r9, r4, r9
   183a8:	cmp	r0, #2
   183ac:	blt	184bc <ReadDataSlabN+0x2ea8>
   183b0:	ldr	r7, [sp, #12]
   183b4:	ldr	r3, [sp, #28]
   183b8:	mov	r5, #0
   183bc:	ldr	r0, [r6, r5]
   183c0:	ldr	r1, [sp, #40]	; 0x28
   183c4:	add	r0, r0, #1
   183c8:	str	r0, [r6, r5]
   183cc:	ldr	r1, [r1, r5]
   183d0:	sdiv	r2, r0, r1
   183d4:	mls	r0, r2, r1, r0
   183d8:	cmp	r0, #0
   183dc:	bne	1849c <ReadDataSlabN+0x2e88>
   183e0:	mov	r0, #0
   183e4:	str	r0, [r6, r5]
   183e8:	ldr	r0, [sp, #32]
   183ec:	ldr	sl, [r0, r5]
   183f0:	sdiv	r0, r9, sl
   183f4:	mls	r4, r0, sl, r9
   183f8:	cmp	r4, #0
   183fc:	beq	1844c <ReadDataSlabN+0x2e38>
   18400:	ldr	r6, [r8, r5]
   18404:	ldr	r0, [r3, r5]
   18408:	sub	r1, sl, r4
   1840c:	ldr	r8, [sp, #48]	; 0x30
   18410:	mov	r2, #1
   18414:	mla	r0, r0, r6, r1
   18418:	ldr	r1, [sp, #52]	; 0x34
   1841c:	mul	r1, r0, r1
   18420:	ldr	r0, [r8]
   18424:	bl	1a68 <fseek@plt>
   18428:	ldr	r3, [sp, #28]
   1842c:	add	r1, sl, r9
   18430:	mov	sl, r8
   18434:	add	r8, sp, #56	; 0x38
   18438:	sub	r1, r1, r4
   1843c:	ldr	r0, [r3, r5]
   18440:	mla	r9, r0, r6, r1
   18444:	ldr	r6, [sp, #24]
   18448:	b	1848c <ReadDataSlabN+0x2e78>
   1844c:	ldr	r0, [r3, r5]
   18450:	cmp	r0, #0
   18454:	beq	18488 <ReadDataSlabN+0x2e74>
   18458:	ldr	r1, [sp, #52]	; 0x34
   1845c:	ldr	r4, [r8, r5]
   18460:	ldr	sl, [sp, #48]	; 0x30
   18464:	mov	r2, #1
   18468:	mul	r0, r0, r1
   1846c:	mul	r1, r0, r4
   18470:	ldr	r0, [sl]
   18474:	bl	1a68 <fseek@plt>
   18478:	ldr	r3, [sp, #28]
   1847c:	ldr	r0, [r3, r5]
   18480:	mla	r9, r0, r4, r9
   18484:	b	1848c <ReadDataSlabN+0x2e78>
   18488:	ldr	sl, [sp, #48]	; 0x30
   1848c:	subs	r7, r7, #1
   18490:	add	r5, r5, #4
   18494:	bne	183bc <ReadDataSlabN+0x2da8>
   18498:	b	184bc <ReadDataSlabN+0x2ea8>
   1849c:	ldr	r0, [sp, #8]
   184a0:	mov	r2, #1
   184a4:	ldr	r4, [r0, r5]
   184a8:	ldr	r0, [sp, #52]	; 0x34
   184ac:	mul	r1, r4, r0
   184b0:	ldr	r0, [sl]
   184b4:	bl	1a68 <fseek@plt>
   184b8:	add	r9, r4, r9
   184bc:	ldr	r0, [fp, #24]
   184c0:	ldr	r5, [sp, #16]
   184c4:	ldr	r1, [sp, #20]
   184c8:	ldr	r0, [r0]
   184cc:	add	r5, r0, r5
   184d0:	mov	r0, #0
   184d4:	cmp	r5, r1
   184d8:	blt	182ac <ReadDataSlabN+0x2c98>
   184dc:	b	15698 <ReadDataSlabN+0x84>
   184e0:	ldr	r0, [sp, #20]
   184e4:	cmp	r0, #1
   184e8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   184ec:	add	r0, sp, #96	; 0x60
   184f0:	add	r3, r6, #4
   184f4:	add	r1, sl, #4
   184f8:	mov	r5, #0
   184fc:	orr	r0, r0, #4
   18500:	str	r1, [sp, #40]	; 0x28
   18504:	orr	r1, r8, #4
   18508:	str	r3, [sp, #28]
   1850c:	mov	r6, r0
   18510:	ldr	r0, [fp, #8]
   18514:	str	r1, [sp, #32]
   18518:	str	r6, [sp, #24]
   1851c:	sub	r0, r0, #1
   18520:	str	r0, [sp, #12]
   18524:	orr	r0, r4, #4
   18528:	str	r0, [sp, #8]
   1852c:	ldr	r4, [fp, #16]
   18530:	ldr	r0, [r4]
   18534:	cmp	r0, #0
   18538:	beq	18560 <ReadDataSlabN+0x2f4c>
   1853c:	ldr	r1, [sp, #52]	; 0x34
   18540:	ldr	sl, [sp, #48]	; 0x30
   18544:	mov	r2, #1
   18548:	mul	r1, r0, r1
   1854c:	ldr	r0, [sl]
   18550:	bl	1a68 <fseek@plt>
   18554:	ldr	r0, [r4]
   18558:	add	r9, r0, r9
   1855c:	b	18568 <ReadDataSlabN+0x2f54>
   18560:	ldr	sl, [sp, #48]	; 0x30
   18564:	mov	r0, #0
   18568:	ldr	r1, [fp, #24]
   1856c:	ldr	r4, [sp, #44]	; 0x2c
   18570:	str	r5, [sp, #16]
   18574:	ldr	r1, [r1]
   18578:	cmp	r1, #0
   1857c:	ble	185f4 <ReadDataSlabN+0x2fe0>
   18580:	ldr	r0, [sp, #36]	; 0x24
   18584:	ldr	r6, [sp, #52]	; 0x34
   18588:	ldr	r8, [fp, #20]
   1858c:	mov	r7, #0
   18590:	add	r5, r0, r5, lsl #2
   18594:	mov	r0, sl
   18598:	mov	r1, r5
   1859c:	mov	r2, r4
   185a0:	mov	r3, #1
   185a4:	bl	b4d8 <ReadInt32Data>
   185a8:	ldr	r0, [r8]
   185ac:	mov	r2, #1
   185b0:	sub	r0, r0, #1
   185b4:	mul	r1, r0, r6
   185b8:	ldr	r0, [sl]
   185bc:	bl	1a68 <fseek@plt>
   185c0:	ldr	r0, [fp, #24]
   185c4:	ldr	r2, [r8]
   185c8:	add	r7, r7, #1
   185cc:	add	r5, r5, #4
   185d0:	ldr	r1, [r0]
   185d4:	add	r9, r2, r9
   185d8:	cmp	r7, r1
   185dc:	blt	18594 <ReadDataSlabN+0x2f80>
   185e0:	ldr	r0, [fp, #16]
   185e4:	ldr	r6, [sp, #24]
   185e8:	add	r8, sp, #56	; 0x38
   185ec:	ldr	r0, [r0]
   185f0:	b	185fc <ReadDataSlabN+0x2fe8>
   185f4:	ldr	r2, [fp, #20]
   185f8:	ldr	r2, [r2]
   185fc:	ldr	r3, [fp, #12]
   18600:	ldr	r3, [r3]
   18604:	mls	r1, r2, r1, r3
   18608:	mov	r2, #1
   1860c:	sub	r4, r1, r0
   18610:	ldr	r0, [sp, #52]	; 0x34
   18614:	mul	r1, r4, r0
   18618:	ldr	r0, [sl]
   1861c:	bl	1a68 <fseek@plt>
   18620:	ldr	r0, [fp, #8]
   18624:	add	r9, r4, r9
   18628:	cmp	r0, #2
   1862c:	blt	1873c <ReadDataSlabN+0x3128>
   18630:	ldr	r7, [sp, #12]
   18634:	ldr	r3, [sp, #28]
   18638:	mov	r5, #0
   1863c:	ldr	r0, [r6, r5]
   18640:	ldr	r1, [sp, #40]	; 0x28
   18644:	add	r0, r0, #1
   18648:	str	r0, [r6, r5]
   1864c:	ldr	r1, [r1, r5]
   18650:	sdiv	r2, r0, r1
   18654:	mls	r0, r2, r1, r0
   18658:	cmp	r0, #0
   1865c:	bne	1871c <ReadDataSlabN+0x3108>
   18660:	mov	r0, #0
   18664:	str	r0, [r6, r5]
   18668:	ldr	r0, [sp, #32]
   1866c:	ldr	sl, [r0, r5]
   18670:	sdiv	r0, r9, sl
   18674:	mls	r4, r0, sl, r9
   18678:	cmp	r4, #0
   1867c:	beq	186cc <ReadDataSlabN+0x30b8>
   18680:	ldr	r6, [r8, r5]
   18684:	ldr	r0, [r3, r5]
   18688:	sub	r1, sl, r4
   1868c:	ldr	r8, [sp, #48]	; 0x30
   18690:	mov	r2, #1
   18694:	mla	r0, r0, r6, r1
   18698:	ldr	r1, [sp, #52]	; 0x34
   1869c:	mul	r1, r0, r1
   186a0:	ldr	r0, [r8]
   186a4:	bl	1a68 <fseek@plt>
   186a8:	ldr	r3, [sp, #28]
   186ac:	add	r1, sl, r9
   186b0:	mov	sl, r8
   186b4:	add	r8, sp, #56	; 0x38
   186b8:	sub	r1, r1, r4
   186bc:	ldr	r0, [r3, r5]
   186c0:	mla	r9, r0, r6, r1
   186c4:	ldr	r6, [sp, #24]
   186c8:	b	1870c <ReadDataSlabN+0x30f8>
   186cc:	ldr	r0, [r3, r5]
   186d0:	cmp	r0, #0
   186d4:	beq	18708 <ReadDataSlabN+0x30f4>
   186d8:	ldr	r1, [sp, #52]	; 0x34
   186dc:	ldr	r4, [r8, r5]
   186e0:	ldr	sl, [sp, #48]	; 0x30
   186e4:	mov	r2, #1
   186e8:	mul	r0, r0, r1
   186ec:	mul	r1, r0, r4
   186f0:	ldr	r0, [sl]
   186f4:	bl	1a68 <fseek@plt>
   186f8:	ldr	r3, [sp, #28]
   186fc:	ldr	r0, [r3, r5]
   18700:	mla	r9, r0, r4, r9
   18704:	b	1870c <ReadDataSlabN+0x30f8>
   18708:	ldr	sl, [sp, #48]	; 0x30
   1870c:	subs	r7, r7, #1
   18710:	add	r5, r5, #4
   18714:	bne	1863c <ReadDataSlabN+0x3028>
   18718:	b	1873c <ReadDataSlabN+0x3128>
   1871c:	ldr	r0, [sp, #8]
   18720:	mov	r2, #1
   18724:	ldr	r4, [r0, r5]
   18728:	ldr	r0, [sp, #52]	; 0x34
   1872c:	mul	r1, r4, r0
   18730:	ldr	r0, [sl]
   18734:	bl	1a68 <fseek@plt>
   18738:	add	r9, r4, r9
   1873c:	ldr	r0, [fp, #24]
   18740:	ldr	r5, [sp, #16]
   18744:	ldr	r1, [sp, #20]
   18748:	ldr	r0, [r0]
   1874c:	add	r5, r0, r5
   18750:	mov	r0, #0
   18754:	cmp	r5, r1
   18758:	blt	1852c <ReadDataSlabN+0x2f18>
   1875c:	b	15698 <ReadDataSlabN+0x84>
   18760:	ldr	r0, [sp, #20]
   18764:	cmp	r0, #1
   18768:	blt	18ee8 <ReadDataSlabN+0x38d4>
   1876c:	add	r0, sp, #96	; 0x60
   18770:	add	r3, r6, #4
   18774:	add	r1, sl, #4
   18778:	mov	r5, #0
   1877c:	orr	r0, r0, #4
   18780:	str	r1, [sp, #40]	; 0x28
   18784:	orr	r1, r8, #4
   18788:	str	r3, [sp, #28]
   1878c:	mov	r6, r0
   18790:	ldr	r0, [fp, #8]
   18794:	str	r1, [sp, #32]
   18798:	str	r6, [sp, #24]
   1879c:	sub	r0, r0, #1
   187a0:	str	r0, [sp, #12]
   187a4:	orr	r0, r4, #4
   187a8:	str	r0, [sp, #8]
   187ac:	ldr	r4, [fp, #16]
   187b0:	ldr	r0, [r4]
   187b4:	cmp	r0, #0
   187b8:	beq	187e0 <ReadDataSlabN+0x31cc>
   187bc:	ldr	r1, [sp, #52]	; 0x34
   187c0:	ldr	sl, [sp, #48]	; 0x30
   187c4:	mov	r2, #1
   187c8:	mul	r1, r0, r1
   187cc:	ldr	r0, [sl]
   187d0:	bl	1a68 <fseek@plt>
   187d4:	ldr	r0, [r4]
   187d8:	add	r9, r0, r9
   187dc:	b	187e8 <ReadDataSlabN+0x31d4>
   187e0:	ldr	sl, [sp, #48]	; 0x30
   187e4:	mov	r0, #0
   187e8:	ldr	r1, [fp, #24]
   187ec:	ldr	r4, [sp, #44]	; 0x2c
   187f0:	str	r5, [sp, #16]
   187f4:	ldr	r1, [r1]
   187f8:	cmp	r1, #0
   187fc:	ble	18874 <ReadDataSlabN+0x3260>
   18800:	ldr	r0, [sp, #36]	; 0x24
   18804:	ldr	r6, [sp, #52]	; 0x34
   18808:	ldr	r8, [fp, #20]
   1880c:	mov	r7, #0
   18810:	add	r5, r0, r5, lsl #2
   18814:	mov	r0, sl
   18818:	mov	r1, r5
   1881c:	mov	r2, r4
   18820:	mov	r3, #1
   18824:	bl	cf3c <ReadUInt32Data>
   18828:	ldr	r0, [r8]
   1882c:	mov	r2, #1
   18830:	sub	r0, r0, #1
   18834:	mul	r1, r0, r6
   18838:	ldr	r0, [sl]
   1883c:	bl	1a68 <fseek@plt>
   18840:	ldr	r0, [fp, #24]
   18844:	ldr	r2, [r8]
   18848:	add	r7, r7, #1
   1884c:	add	r5, r5, #4
   18850:	ldr	r1, [r0]
   18854:	add	r9, r2, r9
   18858:	cmp	r7, r1
   1885c:	blt	18814 <ReadDataSlabN+0x3200>
   18860:	ldr	r0, [fp, #16]
   18864:	ldr	r6, [sp, #24]
   18868:	add	r8, sp, #56	; 0x38
   1886c:	ldr	r0, [r0]
   18870:	b	1887c <ReadDataSlabN+0x3268>
   18874:	ldr	r2, [fp, #20]
   18878:	ldr	r2, [r2]
   1887c:	ldr	r3, [fp, #12]
   18880:	ldr	r3, [r3]
   18884:	mls	r1, r2, r1, r3
   18888:	mov	r2, #1
   1888c:	sub	r4, r1, r0
   18890:	ldr	r0, [sp, #52]	; 0x34
   18894:	mul	r1, r4, r0
   18898:	ldr	r0, [sl]
   1889c:	bl	1a68 <fseek@plt>
   188a0:	ldr	r0, [fp, #8]
   188a4:	add	r9, r4, r9
   188a8:	cmp	r0, #2
   188ac:	blt	189bc <ReadDataSlabN+0x33a8>
   188b0:	ldr	r7, [sp, #12]
   188b4:	ldr	r3, [sp, #28]
   188b8:	mov	r5, #0
   188bc:	ldr	r0, [r6, r5]
   188c0:	ldr	r1, [sp, #40]	; 0x28
   188c4:	add	r0, r0, #1
   188c8:	str	r0, [r6, r5]
   188cc:	ldr	r1, [r1, r5]
   188d0:	sdiv	r2, r0, r1
   188d4:	mls	r0, r2, r1, r0
   188d8:	cmp	r0, #0
   188dc:	bne	1899c <ReadDataSlabN+0x3388>
   188e0:	mov	r0, #0
   188e4:	str	r0, [r6, r5]
   188e8:	ldr	r0, [sp, #32]
   188ec:	ldr	sl, [r0, r5]
   188f0:	sdiv	r0, r9, sl
   188f4:	mls	r4, r0, sl, r9
   188f8:	cmp	r4, #0
   188fc:	beq	1894c <ReadDataSlabN+0x3338>
   18900:	ldr	r6, [r8, r5]
   18904:	ldr	r0, [r3, r5]
   18908:	sub	r1, sl, r4
   1890c:	ldr	r8, [sp, #48]	; 0x30
   18910:	mov	r2, #1
   18914:	mla	r0, r0, r6, r1
   18918:	ldr	r1, [sp, #52]	; 0x34
   1891c:	mul	r1, r0, r1
   18920:	ldr	r0, [r8]
   18924:	bl	1a68 <fseek@plt>
   18928:	ldr	r3, [sp, #28]
   1892c:	add	r1, sl, r9
   18930:	mov	sl, r8
   18934:	add	r8, sp, #56	; 0x38
   18938:	sub	r1, r1, r4
   1893c:	ldr	r0, [r3, r5]
   18940:	mla	r9, r0, r6, r1
   18944:	ldr	r6, [sp, #24]
   18948:	b	1898c <ReadDataSlabN+0x3378>
   1894c:	ldr	r0, [r3, r5]
   18950:	cmp	r0, #0
   18954:	beq	18988 <ReadDataSlabN+0x3374>
   18958:	ldr	r1, [sp, #52]	; 0x34
   1895c:	ldr	r4, [r8, r5]
   18960:	ldr	sl, [sp, #48]	; 0x30
   18964:	mov	r2, #1
   18968:	mul	r0, r0, r1
   1896c:	mul	r1, r0, r4
   18970:	ldr	r0, [sl]
   18974:	bl	1a68 <fseek@plt>
   18978:	ldr	r3, [sp, #28]
   1897c:	ldr	r0, [r3, r5]
   18980:	mla	r9, r0, r4, r9
   18984:	b	1898c <ReadDataSlabN+0x3378>
   18988:	ldr	sl, [sp, #48]	; 0x30
   1898c:	subs	r7, r7, #1
   18990:	add	r5, r5, #4
   18994:	bne	188bc <ReadDataSlabN+0x32a8>
   18998:	b	189bc <ReadDataSlabN+0x33a8>
   1899c:	ldr	r0, [sp, #8]
   189a0:	mov	r2, #1
   189a4:	ldr	r4, [r0, r5]
   189a8:	ldr	r0, [sp, #52]	; 0x34
   189ac:	mul	r1, r4, r0
   189b0:	ldr	r0, [sl]
   189b4:	bl	1a68 <fseek@plt>
   189b8:	add	r9, r4, r9
   189bc:	ldr	r0, [fp, #24]
   189c0:	ldr	r5, [sp, #16]
   189c4:	ldr	r1, [sp, #20]
   189c8:	ldr	r0, [r0]
   189cc:	add	r5, r0, r5
   189d0:	mov	r0, #0
   189d4:	cmp	r5, r1
   189d8:	blt	187ac <ReadDataSlabN+0x3198>
   189dc:	b	15698 <ReadDataSlabN+0x84>
   189e0:	ldr	r0, [sp, #20]
   189e4:	cmp	r0, #1
   189e8:	blt	18ee8 <ReadDataSlabN+0x38d4>
   189ec:	add	r0, sp, #96	; 0x60
   189f0:	add	r1, sl, #4
   189f4:	mov	r5, #0
   189f8:	str	r1, [sp, #40]	; 0x28
   189fc:	orr	r1, r8, #4
   18a00:	orr	r0, r0, #4
   18a04:	str	r1, [sp, #32]
   18a08:	add	r1, r6, #4
   18a0c:	mov	r6, r0
   18a10:	ldr	r0, [fp, #8]
   18a14:	str	r1, [sp, #28]
   18a18:	str	r6, [sp, #24]
   18a1c:	sub	r0, r0, #1
   18a20:	str	r0, [sp, #12]
   18a24:	orr	r0, r4, #4
   18a28:	str	r0, [sp, #8]
   18a2c:	ldr	r2, [fp, #16]
   18a30:	ldr	r0, [r2]
   18a34:	cmp	r0, #0
   18a38:	beq	18a68 <ReadDataSlabN+0x3454>
   18a3c:	ldr	r1, [sp, #52]	; 0x34
   18a40:	ldr	sl, [sp, #48]	; 0x30
   18a44:	mov	r4, r2
   18a48:	mov	r2, #1
   18a4c:	mul	r1, r0, r1
   18a50:	ldr	r0, [sl]
   18a54:	bl	1a68 <fseek@plt>
   18a58:	ldr	r0, [r4]
   18a5c:	ldr	r4, [sp, #44]	; 0x2c
   18a60:	add	r9, r0, r9
   18a64:	b	18a74 <ReadDataSlabN+0x3460>
   18a68:	ldr	r4, [sp, #44]	; 0x2c
   18a6c:	ldr	sl, [sp, #48]	; 0x30
   18a70:	mov	r0, #0
   18a74:	ldr	r1, [fp, #24]
   18a78:	str	r5, [sp, #16]
   18a7c:	ldr	r1, [r1]
   18a80:	cmp	r1, #0
   18a84:	ble	18afc <ReadDataSlabN+0x34e8>
   18a88:	ldr	r0, [sp, #36]	; 0x24
   18a8c:	ldr	r6, [sp, #52]	; 0x34
   18a90:	ldr	r8, [fp, #20]
   18a94:	mov	r7, #0
   18a98:	add	r5, r0, r5, lsl #3
   18a9c:	mov	r0, sl
   18aa0:	mov	r1, r5
   18aa4:	mov	r2, r4
   18aa8:	mov	r3, #1
   18aac:	bl	7ba0 <ReadInt64Data>
   18ab0:	ldr	r0, [r8]
   18ab4:	mov	r2, #1
   18ab8:	sub	r0, r0, #1
   18abc:	mul	r1, r0, r6
   18ac0:	ldr	r0, [sl]
   18ac4:	bl	1a68 <fseek@plt>
   18ac8:	ldr	r0, [fp, #24]
   18acc:	ldr	r2, [r8]
   18ad0:	add	r7, r7, #1
   18ad4:	add	r5, r5, #8
   18ad8:	ldr	r1, [r0]
   18adc:	add	r9, r2, r9
   18ae0:	cmp	r7, r1
   18ae4:	blt	18a9c <ReadDataSlabN+0x3488>
   18ae8:	ldr	r0, [fp, #16]
   18aec:	ldr	r6, [sp, #24]
   18af0:	add	r8, sp, #56	; 0x38
   18af4:	ldr	r0, [r0]
   18af8:	b	18b04 <ReadDataSlabN+0x34f0>
   18afc:	ldr	r2, [fp, #20]
   18b00:	ldr	r2, [r2]
   18b04:	ldr	r3, [fp, #12]
   18b08:	ldr	r3, [r3]
   18b0c:	mls	r1, r2, r1, r3
   18b10:	mov	r2, #1
   18b14:	sub	r4, r1, r0
   18b18:	ldr	r0, [sp, #52]	; 0x34
   18b1c:	mul	r1, r4, r0
   18b20:	ldr	r0, [sl]
   18b24:	bl	1a68 <fseek@plt>
   18b28:	ldr	r0, [fp, #8]
   18b2c:	add	r9, r4, r9
   18b30:	cmp	r0, #2
   18b34:	blt	18c44 <ReadDataSlabN+0x3630>
   18b38:	ldr	r7, [sp, #12]
   18b3c:	ldr	r3, [sp, #28]
   18b40:	mov	r5, #0
   18b44:	ldr	r0, [r6, r5]
   18b48:	ldr	r1, [sp, #40]	; 0x28
   18b4c:	add	r0, r0, #1
   18b50:	str	r0, [r6, r5]
   18b54:	ldr	r1, [r1, r5]
   18b58:	sdiv	r2, r0, r1
   18b5c:	mls	r0, r2, r1, r0
   18b60:	cmp	r0, #0
   18b64:	bne	18c24 <ReadDataSlabN+0x3610>
   18b68:	mov	r0, #0
   18b6c:	str	r0, [r6, r5]
   18b70:	ldr	r0, [sp, #32]
   18b74:	ldr	sl, [r0, r5]
   18b78:	sdiv	r0, r9, sl
   18b7c:	mls	r4, r0, sl, r9
   18b80:	cmp	r4, #0
   18b84:	beq	18bd4 <ReadDataSlabN+0x35c0>
   18b88:	ldr	r6, [r8, r5]
   18b8c:	ldr	r0, [r3, r5]
   18b90:	sub	r1, sl, r4
   18b94:	ldr	r8, [sp, #48]	; 0x30
   18b98:	mov	r2, #1
   18b9c:	mla	r0, r0, r6, r1
   18ba0:	ldr	r1, [sp, #52]	; 0x34
   18ba4:	mul	r1, r0, r1
   18ba8:	ldr	r0, [r8]
   18bac:	bl	1a68 <fseek@plt>
   18bb0:	ldr	r3, [sp, #28]
   18bb4:	add	r1, sl, r9
   18bb8:	mov	sl, r8
   18bbc:	add	r8, sp, #56	; 0x38
   18bc0:	sub	r1, r1, r4
   18bc4:	ldr	r0, [r3, r5]
   18bc8:	mla	r9, r0, r6, r1
   18bcc:	ldr	r6, [sp, #24]
   18bd0:	b	18c14 <ReadDataSlabN+0x3600>
   18bd4:	ldr	r0, [r3, r5]
   18bd8:	cmp	r0, #0
   18bdc:	beq	18c10 <ReadDataSlabN+0x35fc>
   18be0:	ldr	r1, [sp, #52]	; 0x34
   18be4:	ldr	r4, [r8, r5]
   18be8:	ldr	sl, [sp, #48]	; 0x30
   18bec:	mov	r2, #1
   18bf0:	mul	r0, r0, r1
   18bf4:	mul	r1, r0, r4
   18bf8:	ldr	r0, [sl]
   18bfc:	bl	1a68 <fseek@plt>
   18c00:	ldr	r3, [sp, #28]
   18c04:	ldr	r0, [r3, r5]
   18c08:	mla	r9, r0, r4, r9
   18c0c:	b	18c14 <ReadDataSlabN+0x3600>
   18c10:	ldr	sl, [sp, #48]	; 0x30
   18c14:	subs	r7, r7, #1
   18c18:	add	r5, r5, #4
   18c1c:	bne	18b44 <ReadDataSlabN+0x3530>
   18c20:	b	18c44 <ReadDataSlabN+0x3630>
   18c24:	ldr	r0, [sp, #8]
   18c28:	mov	r2, #1
   18c2c:	ldr	r4, [r0, r5]
   18c30:	ldr	r0, [sp, #52]	; 0x34
   18c34:	mul	r1, r4, r0
   18c38:	ldr	r0, [sl]
   18c3c:	bl	1a68 <fseek@plt>
   18c40:	add	r9, r4, r9
   18c44:	ldr	r0, [fp, #24]
   18c48:	ldr	r5, [sp, #16]
   18c4c:	ldr	r1, [sp, #20]
   18c50:	ldr	r0, [r0]
   18c54:	add	r5, r0, r5
   18c58:	mov	r0, #0
   18c5c:	cmp	r5, r1
   18c60:	blt	18a2c <ReadDataSlabN+0x3418>
   18c64:	b	15698 <ReadDataSlabN+0x84>
   18c68:	ldr	r0, [sp, #20]
   18c6c:	cmp	r0, #1
   18c70:	blt	18ee8 <ReadDataSlabN+0x38d4>
   18c74:	add	r0, sp, #96	; 0x60
   18c78:	add	r3, r6, #4
   18c7c:	add	r1, sl, #4
   18c80:	mov	r5, #0
   18c84:	orr	r0, r0, #4
   18c88:	str	r1, [sp, #40]	; 0x28
   18c8c:	orr	r1, r8, #4
   18c90:	str	r3, [sp, #28]
   18c94:	mov	r6, r0
   18c98:	ldr	r0, [fp, #8]
   18c9c:	str	r1, [sp, #32]
   18ca0:	str	r6, [sp, #24]
   18ca4:	sub	r0, r0, #1
   18ca8:	str	r0, [sp, #12]
   18cac:	orr	r0, r4, #4
   18cb0:	str	r0, [sp, #8]
   18cb4:	ldr	r4, [fp, #16]
   18cb8:	ldr	r0, [r4]
   18cbc:	cmp	r0, #0
   18cc0:	beq	18ce8 <ReadDataSlabN+0x36d4>
   18cc4:	ldr	r1, [sp, #52]	; 0x34
   18cc8:	ldr	sl, [sp, #48]	; 0x30
   18ccc:	mov	r2, #1
   18cd0:	mul	r1, r0, r1
   18cd4:	ldr	r0, [sl]
   18cd8:	bl	1a68 <fseek@plt>
   18cdc:	ldr	r0, [r4]
   18ce0:	add	r9, r0, r9
   18ce4:	b	18cf0 <ReadDataSlabN+0x36dc>
   18ce8:	ldr	sl, [sp, #48]	; 0x30
   18cec:	mov	r0, #0
   18cf0:	ldr	r1, [fp, #24]
   18cf4:	ldr	r4, [sp, #44]	; 0x2c
   18cf8:	str	r5, [sp, #16]
   18cfc:	ldr	r1, [r1]
   18d00:	cmp	r1, #0
   18d04:	ble	18d7c <ReadDataSlabN+0x3768>
   18d08:	ldr	r0, [sp, #36]	; 0x24
   18d0c:	ldr	r6, [sp, #52]	; 0x34
   18d10:	ldr	r8, [fp, #20]
   18d14:	mov	r7, #0
   18d18:	add	r5, r0, r5, lsl #3
   18d1c:	mov	r0, sl
   18d20:	mov	r1, r5
   18d24:	mov	r2, r4
   18d28:	mov	r3, #1
   18d2c:	bl	983c <ReadUInt64Data>
   18d30:	ldr	r0, [r8]
   18d34:	mov	r2, #1
   18d38:	sub	r0, r0, #1
   18d3c:	mul	r1, r0, r6
   18d40:	ldr	r0, [sl]
   18d44:	bl	1a68 <fseek@plt>
   18d48:	ldr	r0, [fp, #24]
   18d4c:	ldr	r2, [r8]
   18d50:	add	r7, r7, #1
   18d54:	add	r5, r5, #8
   18d58:	ldr	r1, [r0]
   18d5c:	add	r9, r2, r9
   18d60:	cmp	r7, r1
   18d64:	blt	18d1c <ReadDataSlabN+0x3708>
   18d68:	ldr	r0, [fp, #16]
   18d6c:	ldr	r6, [sp, #24]
   18d70:	add	r8, sp, #56	; 0x38
   18d74:	ldr	r0, [r0]
   18d78:	b	18d84 <ReadDataSlabN+0x3770>
   18d7c:	ldr	r2, [fp, #20]
   18d80:	ldr	r2, [r2]
   18d84:	ldr	r3, [fp, #12]
   18d88:	ldr	r3, [r3]
   18d8c:	mls	r1, r2, r1, r3
   18d90:	mov	r2, #1
   18d94:	sub	r4, r1, r0
   18d98:	ldr	r0, [sp, #52]	; 0x34
   18d9c:	mul	r1, r4, r0
   18da0:	ldr	r0, [sl]
   18da4:	bl	1a68 <fseek@plt>
   18da8:	ldr	r0, [fp, #8]
   18dac:	add	r9, r4, r9
   18db0:	cmp	r0, #2
   18db4:	blt	18ec4 <ReadDataSlabN+0x38b0>
   18db8:	ldr	r7, [sp, #12]
   18dbc:	ldr	r3, [sp, #28]
   18dc0:	mov	r5, #0
   18dc4:	ldr	r0, [r6, r5]
   18dc8:	ldr	r1, [sp, #40]	; 0x28
   18dcc:	add	r0, r0, #1
   18dd0:	str	r0, [r6, r5]
   18dd4:	ldr	r1, [r1, r5]
   18dd8:	sdiv	r2, r0, r1
   18ddc:	mls	r0, r2, r1, r0
   18de0:	cmp	r0, #0
   18de4:	bne	18ea4 <ReadDataSlabN+0x3890>
   18de8:	mov	r0, #0
   18dec:	str	r0, [r6, r5]
   18df0:	ldr	r0, [sp, #32]
   18df4:	ldr	sl, [r0, r5]
   18df8:	sdiv	r0, r9, sl
   18dfc:	mls	r4, r0, sl, r9
   18e00:	cmp	r4, #0
   18e04:	beq	18e54 <ReadDataSlabN+0x3840>
   18e08:	ldr	r6, [r8, r5]
   18e0c:	ldr	r0, [r3, r5]
   18e10:	sub	r1, sl, r4
   18e14:	ldr	r8, [sp, #48]	; 0x30
   18e18:	mov	r2, #1
   18e1c:	mla	r0, r0, r6, r1
   18e20:	ldr	r1, [sp, #52]	; 0x34
   18e24:	mul	r1, r0, r1
   18e28:	ldr	r0, [r8]
   18e2c:	bl	1a68 <fseek@plt>
   18e30:	ldr	r3, [sp, #28]
   18e34:	add	r1, sl, r9
   18e38:	mov	sl, r8
   18e3c:	add	r8, sp, #56	; 0x38
   18e40:	sub	r1, r1, r4
   18e44:	ldr	r0, [r3, r5]
   18e48:	mla	r9, r0, r6, r1
   18e4c:	ldr	r6, [sp, #24]
   18e50:	b	18e94 <ReadDataSlabN+0x3880>
   18e54:	ldr	r0, [r3, r5]
   18e58:	cmp	r0, #0
   18e5c:	beq	18e90 <ReadDataSlabN+0x387c>
   18e60:	ldr	r1, [sp, #52]	; 0x34
   18e64:	ldr	r4, [r8, r5]
   18e68:	ldr	sl, [sp, #48]	; 0x30
   18e6c:	mov	r2, #1
   18e70:	mul	r0, r0, r1
   18e74:	mul	r1, r0, r4
   18e78:	ldr	r0, [sl]
   18e7c:	bl	1a68 <fseek@plt>
   18e80:	ldr	r3, [sp, #28]
   18e84:	ldr	r0, [r3, r5]
   18e88:	mla	r9, r0, r4, r9
   18e8c:	b	18e94 <ReadDataSlabN+0x3880>
   18e90:	ldr	sl, [sp, #48]	; 0x30
   18e94:	subs	r7, r7, #1
   18e98:	add	r5, r5, #4
   18e9c:	bne	18dc4 <ReadDataSlabN+0x37b0>
   18ea0:	b	18ec4 <ReadDataSlabN+0x38b0>
   18ea4:	ldr	r0, [sp, #8]
   18ea8:	mov	r2, #1
   18eac:	ldr	r4, [r0, r5]
   18eb0:	ldr	r0, [sp, #52]	; 0x34
   18eb4:	mul	r1, r4, r0
   18eb8:	ldr	r0, [sl]
   18ebc:	bl	1a68 <fseek@plt>
   18ec0:	add	r9, r4, r9
   18ec4:	ldr	r0, [fp, #24]
   18ec8:	ldr	r5, [sp, #16]
   18ecc:	ldr	r1, [sp, #20]
   18ed0:	ldr	r0, [r0]
   18ed4:	add	r5, r0, r5
   18ed8:	mov	r0, #0
   18edc:	cmp	r5, r1
   18ee0:	blt	18cb4 <ReadDataSlabN+0x36a0>
   18ee4:	b	15698 <ReadDataSlabN+0x84>
   18ee8:	mov	r0, #0
   18eec:	b	15698 <ReadDataSlabN+0x84>

00018ef0 <ReadCompressedDataSlabN>:
   18ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ef4:	add	fp, sp, #28
   18ef8:	sub	sp, sp, #236	; 0xec
   18efc:	vmov.i32	q8, #0	; 0x00000000
   18f00:	sub	r5, fp, #72	; 0x48
   18f04:	mov	r7, r0
   18f08:	mov	r6, r2
   18f0c:	mov	r0, #36	; 0x24
   18f10:	mov	r8, r3
   18f14:	mov	r3, #0
   18f18:	mov	r2, r5
   18f1c:	cmp	r7, #0
   18f20:	str	r3, [fp, #-40]	; 0xffffffd8
   18f24:	str	r3, [fp, #-80]	; 0xffffffb0
   18f28:	str	r3, [sp, #144]	; 0x90
   18f2c:	str	r3, [sp, #104]	; 0x68
   18f30:	cmpne	r6, #0
   18f34:	vst1.64	{d16-d17}, [r2], r0
   18f38:	str	r3, [r2]
   18f3c:	add	r2, r5, #16
   18f40:	sub	r5, fp, #112	; 0x70
   18f44:	vst1.64	{d16-d17}, [r2]
   18f48:	add	r2, r5, #16
   18f4c:	vst1.64	{d16-d17}, [r2]
   18f50:	mov	r2, r5
   18f54:	add	r5, sp, #112	; 0x70
   18f58:	vst1.64	{d16-d17}, [r2], r0
   18f5c:	str	r3, [r2]
   18f60:	add	r2, r5, #16
   18f64:	vst1.64	{d16-d17}, [r2]
   18f68:	mov	r2, r5
   18f6c:	vst1.64	{d16-d17}, [r2], r0
   18f70:	add	r0, sp, #56	; 0x38
   18f74:	str	r3, [r2]
   18f78:	add	r2, r0, #32
   18f7c:	vst1.64	{d16-d17}, [r2]
   18f80:	add	r2, r0, #16
   18f84:	vst1.64	{d16-d17}, [r2]
   18f88:	mov	r2, #52	; 0x34
   18f8c:	vst1.64	{d16-d17}, [r0], r2
   18f90:	str	r3, [r0]
   18f94:	mov	r0, #1
   18f98:	bne	18fa4 <ReadCompressedDataSlabN+0xb4>
   18f9c:	sub	sp, fp, #28
   18fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fa4:	ldr	r2, [fp, #12]
   18fa8:	cmp	r2, #10
   18fac:	bgt	18f9c <ReadCompressedDataSlabN+0xac>
   18fb0:	ldr	r2, [fp, #28]
   18fb4:	cmp	r2, #0
   18fb8:	ldrne	r2, [fp, #24]
   18fbc:	cmpne	r2, #0
   18fc0:	beq	18f9c <ReadCompressedDataSlabN+0xac>
   18fc4:	ldr	sl, [fp, #20]
   18fc8:	cmp	sl, #0
   18fcc:	ldrne	r2, [r7]
   18fd0:	cmpne	r2, #0
   18fd4:	beq	18f9c <ReadCompressedDataSlabN+0xac>
   18fd8:	add	r0, sp, #56	; 0x38
   18fdc:	str	r6, [sp, #48]	; 0x30
   18fe0:	str	r7, [sp, #52]	; 0x34
   18fe4:	bl	1960 <inflateCopy@plt>
   18fe8:	sub	r0, r8, #6
   18fec:	sub	r6, fp, #72	; 0x48
   18ff0:	cmp	r0, #9
   18ff4:	bhi	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   18ff8:	add	r1, pc, #8
   18ffc:	ldr	r5, [fp, #16]
   19000:	ldr	r0, [r1, r0, lsl #2]
   19004:	add	pc, r1, r0
   19008:	.word	0x00000028
   1900c:	.word	0x000000f4
   19010:	.word	0x00000418
   19014:	.word	0x00000754
   19018:	.word	0x00000a90
   1901c:	.word	0x00000db4
   19020:	.word	0x000010d8
   19024:	.word	0x000013fc
   19028:	.word	0x00001720
   1902c:	.word	0x00001a40
   19030:	ldr	r8, [fp, #24]
   19034:	ldr	r7, [fp, #28]
   19038:	ldr	r0, [r8]
   1903c:	sub	r0, r0, #1
   19040:	str	r0, [fp, #-72]	; 0xffffffb8
   19044:	ldr	ip, [r5]
   19048:	str	ip, [sp, #112]	; 0x70
   1904c:	ldr	r0, [r7]
   19050:	str	r0, [sp, #36]	; 0x24
   19054:	ldr	r0, [fp, #12]
   19058:	cmp	r0, #2
   1905c:	blt	1ad6c <ReadCompressedDataSlabN+0x1e7c>
   19060:	mov	r9, r7
   19064:	mov	r7, r6
   19068:	mov	r8, #0
   1906c:	mov	r0, #1
   19070:	mov	r1, r5
   19074:	mov	r3, ip
   19078:	add	r6, sp, #112	; 0x70
   1907c:	ldr	r2, [fp, #24]
   19080:	ldr	r2, [r2, r0, lsl #2]
   19084:	str	r3, [r6, r0, lsl #2]
   19088:	sub	r4, r2, #1
   1908c:	mov	r2, #0
   19090:	str	r4, [r7, r0, lsl #2]
   19094:	ldr	lr, [r5, r0, lsl #2]
   19098:	mov	r6, lr
   1909c:	mul	r3, r6, r3
   190a0:	ldr	r6, [r1, -r2, lsl #2]
   190a4:	add	r2, r2, #1
   190a8:	cmp	r0, r2
   190ac:	mul	r4, r4, r6
   190b0:	bne	1909c <ReadCompressedDataSlabN+0x1ac>
   190b4:	add	r6, sp, #112	; 0x70
   190b8:	sub	r7, fp, #72	; 0x48
   190bc:	add	r1, r1, #4
   190c0:	str	r4, [r7, r0, lsl #2]
   190c4:	str	r3, [r6, r0, lsl #2]
   190c8:	ldr	r4, [sp, #36]	; 0x24
   190cc:	ldr	r2, [sl, r0, lsl #2]
   190d0:	mla	r8, r2, ip, r8
   190d4:	ldr	r2, [r9, r0, lsl #2]
   190d8:	add	r0, r0, #1
   190dc:	mov	ip, r3
   190e0:	mov	r3, lr
   190e4:	mul	r4, r2, r4
   190e8:	ldr	r2, [fp, #12]
   190ec:	str	r4, [sp, #36]	; 0x24
   190f0:	cmp	r0, r2
   190f4:	bne	1907c <ReadCompressedDataSlabN+0x18c>
   190f8:	b	1ad70 <ReadCompressedDataSlabN+0x1e80>
   190fc:	ldr	r9, [fp, #24]
   19100:	mov	r8, #0
   19104:	ldr	r0, [r9]
   19108:	ldr	r9, [fp, #28]
   1910c:	sub	r0, r0, #1
   19110:	str	r0, [fp, #-72]	; 0xffffffb8
   19114:	ldr	ip, [r5]
   19118:	str	ip, [sp, #112]	; 0x70
   1911c:	ldr	r0, [r9]
   19120:	str	r0, [sp, #32]
   19124:	ldr	r0, [fp, #12]
   19128:	cmp	r0, #2
   1912c:	blt	191b8 <ReadCompressedDataSlabN+0x2c8>
   19130:	mov	r0, #1
   19134:	mov	r1, r5
   19138:	mov	r3, ip
   1913c:	add	r7, sp, #112	; 0x70
   19140:	ldr	r2, [fp, #24]
   19144:	ldr	r2, [r2, r0, lsl #2]
   19148:	str	r3, [r7, r0, lsl #2]
   1914c:	sub	r4, r2, #1
   19150:	mov	r2, #0
   19154:	str	r4, [r6, r0, lsl #2]
   19158:	ldr	lr, [r5, r0, lsl #2]
   1915c:	mov	r6, lr
   19160:	mul	r3, r6, r3
   19164:	ldr	r6, [r1, -r2, lsl #2]
   19168:	add	r2, r2, #1
   1916c:	cmp	r0, r2
   19170:	mul	r4, r4, r6
   19174:	bne	19160 <ReadCompressedDataSlabN+0x270>
   19178:	sub	r6, fp, #72	; 0x48
   1917c:	str	r3, [r7, r0, lsl #2]
   19180:	add	r1, r1, #4
   19184:	str	r4, [r6, r0, lsl #2]
   19188:	ldr	r4, [sp, #32]
   1918c:	ldr	r2, [sl, r0, lsl #2]
   19190:	mla	r8, r2, ip, r8
   19194:	ldr	r2, [r9, r0, lsl #2]
   19198:	add	r0, r0, #1
   1919c:	mov	ip, r3
   191a0:	mov	r3, lr
   191a4:	mul	r4, r2, r4
   191a8:	ldr	r2, [fp, #12]
   191ac:	str	r4, [sp, #32]
   191b0:	cmp	r0, r2
   191b4:	bne	19140 <ReadCompressedDataSlabN+0x250>
   191b8:	ldr	r0, [sp, #52]	; 0x34
   191bc:	ldr	r2, [fp, #8]
   191c0:	add	r1, sp, #56	; 0x38
   191c4:	mov	r3, r8
   191c8:	bl	2690 <InflateSkipData>
   191cc:	ldr	r0, [fp, #24]
   191d0:	ldr	r0, [r0]
   191d4:	cmp	r0, #1
   191d8:	bne	1afe0 <ReadCompressedDataSlabN+0x20f0>
   191dc:	ldr	r0, [sp, #32]
   191e0:	cmp	r0, #1
   191e4:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   191e8:	sub	r0, fp, #112	; 0x70
   191ec:	mov	r1, r6
   191f0:	add	r3, sl, #4
   191f4:	orr	r6, r0, #4
   191f8:	ldr	r0, [fp, #28]
   191fc:	str	r3, [sp, #44]	; 0x2c
   19200:	add	r4, r0, #4
   19204:	add	r0, sp, #112	; 0x70
   19208:	orr	r0, r0, #4
   1920c:	str	r4, [sp, #36]	; 0x24
   19210:	str	r0, [sp, #28]
   19214:	ldr	r0, [fp, #12]
   19218:	sub	r0, r0, #1
   1921c:	str	r0, [sp, #24]
   19220:	orr	r0, r1, #4
   19224:	add	r1, sp, #56	; 0x38
   19228:	str	r0, [sp, #20]
   1922c:	mov	r0, #0
   19230:	str	r0, [sp, #40]	; 0x28
   19234:	ldr	r3, [sl]
   19238:	cmp	r3, #0
   1923c:	beq	19264 <ReadCompressedDataSlabN+0x374>
   19240:	ldr	r5, [fp, #8]
   19244:	ldr	r0, [sp, #52]	; 0x34
   19248:	mov	r9, r1
   1924c:	mov	r2, r5
   19250:	bl	2690 <InflateSkipData>
   19254:	ldr	r0, [sl]
   19258:	ldr	r4, [fp, #28]
   1925c:	add	r8, r0, r8
   19260:	b	19270 <ReadCompressedDataSlabN+0x380>
   19264:	ldr	r4, [fp, #28]
   19268:	ldr	r5, [fp, #8]
   1926c:	mov	r9, r1
   19270:	ldr	r0, [r4]
   19274:	ldr	r1, [sp, #40]	; 0x28
   19278:	ldr	sl, [sp, #52]	; 0x34
   1927c:	mov	r3, r5
   19280:	str	r0, [sp]
   19284:	ldr	r0, [sp, #48]	; 0x30
   19288:	add	r2, r0, r1, lsl #2
   1928c:	mov	r0, sl
   19290:	mov	r1, r9
   19294:	bl	7638 <ReadCompressedSingleData>
   19298:	ldr	r7, [fp, #20]
   1929c:	ldr	r1, [fp, #16]
   192a0:	mov	r2, r5
   192a4:	mov	r5, r1
   192a8:	ldr	r0, [r7]
   192ac:	ldr	r1, [r1]
   192b0:	sub	r0, r1, r0
   192b4:	ldr	r1, [r4]
   192b8:	sub	r3, r0, r1
   192bc:	mov	r0, sl
   192c0:	mov	r1, r9
   192c4:	bl	2690 <InflateSkipData>
   192c8:	ldr	r0, [r5]
   192cc:	ldr	r1, [r7]
   192d0:	add	r0, r0, r8
   192d4:	sub	r8, r0, r1
   192d8:	ldr	r0, [fp, #12]
   192dc:	cmp	r0, #2
   192e0:	blt	193f4 <ReadCompressedDataSlabN+0x504>
   192e4:	ldr	r9, [sp, #24]
   192e8:	ldr	r4, [sp, #36]	; 0x24
   192ec:	ldr	r7, [sp, #28]
   192f0:	ldr	r3, [sp, #44]	; 0x2c
   192f4:	mov	sl, #0
   192f8:	add	r5, sp, #112	; 0x70
   192fc:	ldr	r0, [r6, sl]
   19300:	add	r0, r0, #1
   19304:	str	r0, [r6, sl]
   19308:	ldr	r1, [r4, sl]
   1930c:	sdiv	r2, r0, r1
   19310:	mls	r0, r2, r1, r0
   19314:	cmp	r0, #0
   19318:	bne	193cc <ReadCompressedDataSlabN+0x4dc>
   1931c:	mov	r0, #0
   19320:	str	r0, [r6, sl]
   19324:	ldr	r0, [r7, sl]
   19328:	sdiv	r1, r8, r0
   1932c:	mls	r1, r1, r0, r8
   19330:	cmp	r1, #0
   19334:	beq	19388 <ReadCompressedDataSlabN+0x498>
   19338:	ldr	r3, [sp, #44]	; 0x2c
   1933c:	ldr	r2, [r5, sl]
   19340:	sub	r0, r0, r1
   19344:	add	r1, sp, #56	; 0x38
   19348:	ldr	r3, [r3, sl]
   1934c:	mla	r3, r3, r2, r0
   19350:	ldr	r0, [sp, #52]	; 0x34
   19354:	ldr	r2, [fp, #8]
   19358:	bl	2690 <InflateSkipData>
   1935c:	ldr	r0, [r7, sl]
   19360:	ldr	r3, [sp, #44]	; 0x2c
   19364:	sdiv	r1, r8, r0
   19368:	ldr	r2, [r3, sl]
   1936c:	mul	r1, r1, r0
   19370:	add	r0, r0, r8
   19374:	sub	r1, r1, r8
   19378:	add	r0, r0, r1
   1937c:	ldr	r1, [r5, sl]
   19380:	mla	r8, r2, r1, r0
   19384:	b	193bc <ReadCompressedDataSlabN+0x4cc>
   19388:	ldr	r0, [r3, sl]
   1938c:	cmp	r0, #0
   19390:	beq	193bc <ReadCompressedDataSlabN+0x4cc>
   19394:	ldr	r1, [r5, sl]
   19398:	ldr	r2, [fp, #8]
   1939c:	mul	r3, r1, r0
   193a0:	ldr	r0, [sp, #52]	; 0x34
   193a4:	add	r1, sp, #56	; 0x38
   193a8:	bl	2690 <InflateSkipData>
   193ac:	ldr	r3, [sp, #44]	; 0x2c
   193b0:	ldr	r0, [r5, sl]
   193b4:	ldr	r1, [r3, sl]
   193b8:	mla	r8, r1, r0, r8
   193bc:	subs	r9, r9, #1
   193c0:	add	sl, sl, #4
   193c4:	bne	192fc <ReadCompressedDataSlabN+0x40c>
   193c8:	b	193f4 <ReadCompressedDataSlabN+0x504>
   193cc:	ldr	r0, [sp, #20]
   193d0:	ldr	r5, [r0, sl]
   193d4:	cmp	r5, #0
   193d8:	beq	193f4 <ReadCompressedDataSlabN+0x504>
   193dc:	ldr	r0, [sp, #52]	; 0x34
   193e0:	ldr	r2, [fp, #8]
   193e4:	add	r1, sp, #56	; 0x38
   193e8:	mov	r3, r5
   193ec:	bl	2690 <InflateSkipData>
   193f0:	add	r8, r5, r8
   193f4:	ldr	r0, [fp, #28]
   193f8:	ldr	r1, [sp, #40]	; 0x28
   193fc:	ldr	sl, [fp, #20]
   19400:	ldr	r0, [r0]
   19404:	add	r1, r0, r1
   19408:	ldr	r0, [sp, #32]
   1940c:	str	r1, [sp, #40]	; 0x28
   19410:	cmp	r1, r0
   19414:	add	r1, sp, #56	; 0x38
   19418:	blt	19234 <ReadCompressedDataSlabN+0x344>
   1941c:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19420:	ldr	r9, [fp, #24]
   19424:	ldr	r8, [fp, #28]
   19428:	mov	r7, #0
   1942c:	ldr	r0, [r9]
   19430:	sub	r0, r0, #1
   19434:	str	r0, [fp, #-72]	; 0xffffffb8
   19438:	ldr	ip, [r5]
   1943c:	str	ip, [sp, #112]	; 0x70
   19440:	ldr	r0, [r8]
   19444:	str	r0, [sp, #24]
   19448:	ldr	r0, [fp, #12]
   1944c:	cmp	r0, #2
   19450:	blt	194e8 <ReadCompressedDataSlabN+0x5f8>
   19454:	mov	r9, r6
   19458:	mov	r7, #0
   1945c:	mov	r0, #1
   19460:	mov	r1, r5
   19464:	mov	r3, ip
   19468:	add	r6, sp, #112	; 0x70
   1946c:	ldr	r2, [fp, #24]
   19470:	ldr	r2, [r2, r0, lsl #2]
   19474:	str	r3, [r6, r0, lsl #2]
   19478:	sub	r4, r2, #1
   1947c:	mov	r2, #0
   19480:	str	r4, [r9, r0, lsl #2]
   19484:	ldr	lr, [r5, r0, lsl #2]
   19488:	mov	r6, lr
   1948c:	mul	r3, r6, r3
   19490:	ldr	r6, [r1, -r2, lsl #2]
   19494:	add	r2, r2, #1
   19498:	cmp	r0, r2
   1949c:	mul	r4, r4, r6
   194a0:	bne	1948c <ReadCompressedDataSlabN+0x59c>
   194a4:	add	r6, sp, #112	; 0x70
   194a8:	sub	r9, fp, #72	; 0x48
   194ac:	add	r1, r1, #4
   194b0:	str	r4, [r9, r0, lsl #2]
   194b4:	str	r3, [r6, r0, lsl #2]
   194b8:	ldr	r4, [sp, #24]
   194bc:	ldr	r2, [sl, r0, lsl #2]
   194c0:	mla	r7, r2, ip, r7
   194c4:	ldr	r2, [r8, r0, lsl #2]
   194c8:	add	r0, r0, #1
   194cc:	mov	ip, r3
   194d0:	mov	r3, lr
   194d4:	mul	r4, r2, r4
   194d8:	ldr	r2, [fp, #12]
   194dc:	str	r4, [sp, #24]
   194e0:	cmp	r0, r2
   194e4:	bne	1946c <ReadCompressedDataSlabN+0x57c>
   194e8:	ldr	r0, [sp, #52]	; 0x34
   194ec:	ldr	r2, [fp, #8]
   194f0:	add	r1, sp, #56	; 0x38
   194f4:	mov	r3, r7
   194f8:	bl	2690 <InflateSkipData>
   194fc:	ldr	r0, [fp, #24]
   19500:	str	r7, [sp, #28]
   19504:	ldr	r0, [r0]
   19508:	cmp	r0, #1
   1950c:	bne	1b2d0 <ReadCompressedDataSlabN+0x23e0>
   19510:	ldr	r0, [sp, #24]
   19514:	cmp	r0, #1
   19518:	sub	r0, fp, #72	; 0x48
   1951c:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19520:	mov	r1, r0
   19524:	sub	r0, fp, #112	; 0x70
   19528:	add	r8, sl, #4
   1952c:	add	r9, sp, #56	; 0x38
   19530:	orr	r6, r0, #4
   19534:	ldr	r0, [fp, #28]
   19538:	add	r0, r0, #4
   1953c:	str	r0, [sp, #36]	; 0x24
   19540:	add	r0, sp, #112	; 0x70
   19544:	orr	r3, r0, #4
   19548:	ldr	r0, [fp, #12]
   1954c:	str	r3, [sp, #44]	; 0x2c
   19550:	sub	r0, r0, #1
   19554:	str	r0, [sp, #32]
   19558:	orr	r0, r1, #4
   1955c:	str	r0, [sp, #20]
   19560:	mov	r0, #0
   19564:	str	r0, [sp, #40]	; 0x28
   19568:	ldr	r3, [sl]
   1956c:	cmp	r3, #0
   19570:	beq	195a4 <ReadCompressedDataSlabN+0x6b4>
   19574:	ldr	r7, [sp, #52]	; 0x34
   19578:	ldr	r5, [fp, #8]
   1957c:	mov	r1, r9
   19580:	mov	r0, r7
   19584:	mov	r2, r5
   19588:	bl	2690 <InflateSkipData>
   1958c:	ldr	r0, [sl]
   19590:	ldr	r1, [sp, #28]
   19594:	ldr	r4, [fp, #28]
   19598:	add	r1, r0, r1
   1959c:	str	r1, [sp, #28]
   195a0:	b	195b0 <ReadCompressedDataSlabN+0x6c0>
   195a4:	ldr	r7, [sp, #52]	; 0x34
   195a8:	ldr	r4, [fp, #28]
   195ac:	ldr	r5, [fp, #8]
   195b0:	ldr	r0, [r4]
   195b4:	ldr	r1, [sp, #40]	; 0x28
   195b8:	mov	r3, r5
   195bc:	str	r0, [sp]
   195c0:	ldr	r0, [sp, #48]	; 0x30
   195c4:	add	r2, r0, r1
   195c8:	mov	r0, r7
   195cc:	mov	r1, r9
   195d0:	bl	1340c <ReadCompressedInt8Data>
   195d4:	ldr	sl, [fp, #20]
   195d8:	ldr	r1, [fp, #16]
   195dc:	mov	r0, r7
   195e0:	mov	r7, r1
   195e4:	ldr	r2, [sl]
   195e8:	ldr	r1, [r1]
   195ec:	sub	r2, r1, r2
   195f0:	ldr	r1, [r4]
   195f4:	sub	r3, r2, r1
   195f8:	mov	r1, r9
   195fc:	mov	r2, r5
   19600:	bl	2690 <InflateSkipData>
   19604:	ldr	r0, [r7]
   19608:	ldr	r1, [sp, #28]
   1960c:	add	r0, r0, r1
   19610:	ldr	r1, [sl]
   19614:	sub	r4, r0, r1
   19618:	ldr	r0, [fp, #12]
   1961c:	cmp	r0, #2
   19620:	blt	1972c <ReadCompressedDataSlabN+0x83c>
   19624:	ldr	r9, [sp, #32]
   19628:	ldr	r7, [sp, #36]	; 0x24
   1962c:	ldr	r3, [sp, #44]	; 0x2c
   19630:	mov	sl, #0
   19634:	add	r5, sp, #112	; 0x70
   19638:	ldr	r0, [r6, sl]
   1963c:	add	r0, r0, #1
   19640:	str	r0, [r6, sl]
   19644:	ldr	r1, [r7, sl]
   19648:	sdiv	r2, r0, r1
   1964c:	mls	r0, r2, r1, r0
   19650:	cmp	r0, #0
   19654:	bne	19704 <ReadCompressedDataSlabN+0x814>
   19658:	mov	r0, #0
   1965c:	str	r0, [r6, sl]
   19660:	ldr	r0, [r3, sl]
   19664:	sdiv	r1, r4, r0
   19668:	mls	r1, r1, r0, r4
   1966c:	cmp	r1, #0
   19670:	beq	196c0 <ReadCompressedDataSlabN+0x7d0>
   19674:	ldr	r2, [r5, sl]
   19678:	ldr	r3, [r8, sl]
   1967c:	sub	r0, r0, r1
   19680:	add	r1, sp, #56	; 0x38
   19684:	mla	r3, r3, r2, r0
   19688:	ldr	r0, [sp, #52]	; 0x34
   1968c:	ldr	r2, [fp, #8]
   19690:	bl	2690 <InflateSkipData>
   19694:	ldr	r3, [sp, #44]	; 0x2c
   19698:	ldr	r2, [r8, sl]
   1969c:	ldr	r0, [r3, sl]
   196a0:	sdiv	r1, r4, r0
   196a4:	mul	r1, r1, r0
   196a8:	add	r0, r0, r4
   196ac:	sub	r1, r1, r4
   196b0:	add	r0, r0, r1
   196b4:	ldr	r1, [r5, sl]
   196b8:	mla	r4, r2, r1, r0
   196bc:	b	196f4 <ReadCompressedDataSlabN+0x804>
   196c0:	ldr	r0, [r8, sl]
   196c4:	cmp	r0, #0
   196c8:	beq	196f4 <ReadCompressedDataSlabN+0x804>
   196cc:	ldr	r1, [r5, sl]
   196d0:	ldr	r2, [fp, #8]
   196d4:	mul	r3, r1, r0
   196d8:	ldr	r0, [sp, #52]	; 0x34
   196dc:	add	r1, sp, #56	; 0x38
   196e0:	bl	2690 <InflateSkipData>
   196e4:	ldr	r0, [r5, sl]
   196e8:	ldr	r1, [r8, sl]
   196ec:	ldr	r3, [sp, #44]	; 0x2c
   196f0:	mla	r4, r1, r0, r4
   196f4:	subs	r9, r9, #1
   196f8:	add	sl, sl, #4
   196fc:	bne	19638 <ReadCompressedDataSlabN+0x748>
   19700:	b	1972c <ReadCompressedDataSlabN+0x83c>
   19704:	ldr	r0, [sp, #20]
   19708:	ldr	r5, [r0, sl]
   1970c:	cmp	r5, #0
   19710:	beq	1972c <ReadCompressedDataSlabN+0x83c>
   19714:	ldr	r0, [sp, #52]	; 0x34
   19718:	ldr	r2, [fp, #8]
   1971c:	add	r1, sp, #56	; 0x38
   19720:	mov	r3, r5
   19724:	bl	2690 <InflateSkipData>
   19728:	add	r4, r5, r4
   1972c:	ldr	r0, [fp, #28]
   19730:	ldr	r1, [sp, #40]	; 0x28
   19734:	ldr	sl, [fp, #20]
   19738:	add	r9, sp, #56	; 0x38
   1973c:	str	r4, [sp, #28]
   19740:	ldr	r0, [r0]
   19744:	add	r1, r0, r1
   19748:	ldr	r0, [sp, #24]
   1974c:	str	r1, [sp, #40]	; 0x28
   19750:	cmp	r1, r0
   19754:	blt	19568 <ReadCompressedDataSlabN+0x678>
   19758:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1975c:	ldr	r9, [fp, #24]
   19760:	ldr	r8, [fp, #28]
   19764:	mov	r7, #0
   19768:	ldr	r0, [r9]
   1976c:	sub	r0, r0, #1
   19770:	str	r0, [fp, #-72]	; 0xffffffb8
   19774:	ldr	ip, [r5]
   19778:	str	ip, [sp, #112]	; 0x70
   1977c:	ldr	r0, [r8]
   19780:	str	r0, [sp, #24]
   19784:	ldr	r0, [fp, #12]
   19788:	cmp	r0, #2
   1978c:	blt	19824 <ReadCompressedDataSlabN+0x934>
   19790:	mov	r9, r6
   19794:	mov	r7, #0
   19798:	mov	r0, #1
   1979c:	mov	r1, r5
   197a0:	mov	r3, ip
   197a4:	add	r6, sp, #112	; 0x70
   197a8:	ldr	r2, [fp, #24]
   197ac:	ldr	r2, [r2, r0, lsl #2]
   197b0:	str	r3, [r6, r0, lsl #2]
   197b4:	sub	r4, r2, #1
   197b8:	mov	r2, #0
   197bc:	str	r4, [r9, r0, lsl #2]
   197c0:	ldr	lr, [r5, r0, lsl #2]
   197c4:	mov	r6, lr
   197c8:	mul	r3, r6, r3
   197cc:	ldr	r6, [r1, -r2, lsl #2]
   197d0:	add	r2, r2, #1
   197d4:	cmp	r0, r2
   197d8:	mul	r4, r4, r6
   197dc:	bne	197c8 <ReadCompressedDataSlabN+0x8d8>
   197e0:	add	r6, sp, #112	; 0x70
   197e4:	sub	r9, fp, #72	; 0x48
   197e8:	add	r1, r1, #4
   197ec:	str	r4, [r9, r0, lsl #2]
   197f0:	str	r3, [r6, r0, lsl #2]
   197f4:	ldr	r4, [sp, #24]
   197f8:	ldr	r2, [sl, r0, lsl #2]
   197fc:	mla	r7, r2, ip, r7
   19800:	ldr	r2, [r8, r0, lsl #2]
   19804:	add	r0, r0, #1
   19808:	mov	ip, r3
   1980c:	mov	r3, lr
   19810:	mul	r4, r2, r4
   19814:	ldr	r2, [fp, #12]
   19818:	str	r4, [sp, #24]
   1981c:	cmp	r0, r2
   19820:	bne	197a8 <ReadCompressedDataSlabN+0x8b8>
   19824:	ldr	r0, [sp, #52]	; 0x34
   19828:	ldr	r2, [fp, #8]
   1982c:	add	r1, sp, #56	; 0x38
   19830:	mov	r3, r7
   19834:	bl	2690 <InflateSkipData>
   19838:	ldr	r0, [fp, #24]
   1983c:	str	r7, [sp, #28]
   19840:	ldr	r0, [r0]
   19844:	cmp	r0, #1
   19848:	bne	1b5d4 <ReadCompressedDataSlabN+0x26e4>
   1984c:	ldr	r0, [sp, #24]
   19850:	cmp	r0, #1
   19854:	sub	r0, fp, #72	; 0x48
   19858:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1985c:	mov	r1, r0
   19860:	sub	r0, fp, #112	; 0x70
   19864:	add	r8, sl, #4
   19868:	add	r9, sp, #56	; 0x38
   1986c:	orr	r6, r0, #4
   19870:	ldr	r0, [fp, #28]
   19874:	add	r0, r0, #4
   19878:	str	r0, [sp, #36]	; 0x24
   1987c:	add	r0, sp, #112	; 0x70
   19880:	orr	r3, r0, #4
   19884:	ldr	r0, [fp, #12]
   19888:	str	r3, [sp, #44]	; 0x2c
   1988c:	sub	r0, r0, #1
   19890:	str	r0, [sp, #32]
   19894:	orr	r0, r1, #4
   19898:	str	r0, [sp, #20]
   1989c:	mov	r0, #0
   198a0:	str	r0, [sp, #40]	; 0x28
   198a4:	ldr	r3, [sl]
   198a8:	cmp	r3, #0
   198ac:	beq	198e0 <ReadCompressedDataSlabN+0x9f0>
   198b0:	ldr	r7, [sp, #52]	; 0x34
   198b4:	ldr	r5, [fp, #8]
   198b8:	mov	r1, r9
   198bc:	mov	r0, r7
   198c0:	mov	r2, r5
   198c4:	bl	2690 <InflateSkipData>
   198c8:	ldr	r0, [sl]
   198cc:	ldr	r1, [sp, #28]
   198d0:	ldr	r4, [fp, #28]
   198d4:	add	r1, r0, r1
   198d8:	str	r1, [sp, #28]
   198dc:	b	198ec <ReadCompressedDataSlabN+0x9fc>
   198e0:	ldr	r7, [sp, #52]	; 0x34
   198e4:	ldr	r4, [fp, #28]
   198e8:	ldr	r5, [fp, #8]
   198ec:	ldr	r0, [r4]
   198f0:	ldr	r1, [sp, #40]	; 0x28
   198f4:	mov	r3, r5
   198f8:	str	r0, [sp]
   198fc:	ldr	r0, [sp, #48]	; 0x30
   19900:	add	r2, r0, r1
   19904:	mov	r0, r7
   19908:	mov	r1, r9
   1990c:	bl	14eb8 <ReadCompressedUInt8Data>
   19910:	ldr	sl, [fp, #20]
   19914:	ldr	r1, [fp, #16]
   19918:	mov	r0, r7
   1991c:	mov	r7, r1
   19920:	ldr	r2, [sl]
   19924:	ldr	r1, [r1]
   19928:	sub	r2, r1, r2
   1992c:	ldr	r1, [r4]
   19930:	sub	r3, r2, r1
   19934:	mov	r1, r9
   19938:	mov	r2, r5
   1993c:	bl	2690 <InflateSkipData>
   19940:	ldr	r0, [r7]
   19944:	ldr	r1, [sp, #28]
   19948:	add	r0, r0, r1
   1994c:	ldr	r1, [sl]
   19950:	sub	r4, r0, r1
   19954:	ldr	r0, [fp, #12]
   19958:	cmp	r0, #2
   1995c:	blt	19a68 <ReadCompressedDataSlabN+0xb78>
   19960:	ldr	r9, [sp, #32]
   19964:	ldr	r7, [sp, #36]	; 0x24
   19968:	ldr	r3, [sp, #44]	; 0x2c
   1996c:	mov	sl, #0
   19970:	add	r5, sp, #112	; 0x70
   19974:	ldr	r0, [r6, sl]
   19978:	add	r0, r0, #1
   1997c:	str	r0, [r6, sl]
   19980:	ldr	r1, [r7, sl]
   19984:	sdiv	r2, r0, r1
   19988:	mls	r0, r2, r1, r0
   1998c:	cmp	r0, #0
   19990:	bne	19a40 <ReadCompressedDataSlabN+0xb50>
   19994:	mov	r0, #0
   19998:	str	r0, [r6, sl]
   1999c:	ldr	r0, [r3, sl]
   199a0:	sdiv	r1, r4, r0
   199a4:	mls	r1, r1, r0, r4
   199a8:	cmp	r1, #0
   199ac:	beq	199fc <ReadCompressedDataSlabN+0xb0c>
   199b0:	ldr	r2, [r5, sl]
   199b4:	ldr	r3, [r8, sl]
   199b8:	sub	r0, r0, r1
   199bc:	add	r1, sp, #56	; 0x38
   199c0:	mla	r3, r3, r2, r0
   199c4:	ldr	r0, [sp, #52]	; 0x34
   199c8:	ldr	r2, [fp, #8]
   199cc:	bl	2690 <InflateSkipData>
   199d0:	ldr	r3, [sp, #44]	; 0x2c
   199d4:	ldr	r2, [r8, sl]
   199d8:	ldr	r0, [r3, sl]
   199dc:	sdiv	r1, r4, r0
   199e0:	mul	r1, r1, r0
   199e4:	add	r0, r0, r4
   199e8:	sub	r1, r1, r4
   199ec:	add	r0, r0, r1
   199f0:	ldr	r1, [r5, sl]
   199f4:	mla	r4, r2, r1, r0
   199f8:	b	19a30 <ReadCompressedDataSlabN+0xb40>
   199fc:	ldr	r0, [r8, sl]
   19a00:	cmp	r0, #0
   19a04:	beq	19a30 <ReadCompressedDataSlabN+0xb40>
   19a08:	ldr	r1, [r5, sl]
   19a0c:	ldr	r2, [fp, #8]
   19a10:	mul	r3, r1, r0
   19a14:	ldr	r0, [sp, #52]	; 0x34
   19a18:	add	r1, sp, #56	; 0x38
   19a1c:	bl	2690 <InflateSkipData>
   19a20:	ldr	r0, [r5, sl]
   19a24:	ldr	r1, [r8, sl]
   19a28:	ldr	r3, [sp, #44]	; 0x2c
   19a2c:	mla	r4, r1, r0, r4
   19a30:	subs	r9, r9, #1
   19a34:	add	sl, sl, #4
   19a38:	bne	19974 <ReadCompressedDataSlabN+0xa84>
   19a3c:	b	19a68 <ReadCompressedDataSlabN+0xb78>
   19a40:	ldr	r0, [sp, #20]
   19a44:	ldr	r5, [r0, sl]
   19a48:	cmp	r5, #0
   19a4c:	beq	19a68 <ReadCompressedDataSlabN+0xb78>
   19a50:	ldr	r0, [sp, #52]	; 0x34
   19a54:	ldr	r2, [fp, #8]
   19a58:	add	r1, sp, #56	; 0x38
   19a5c:	mov	r3, r5
   19a60:	bl	2690 <InflateSkipData>
   19a64:	add	r4, r5, r4
   19a68:	ldr	r0, [fp, #28]
   19a6c:	ldr	r1, [sp, #40]	; 0x28
   19a70:	ldr	sl, [fp, #20]
   19a74:	add	r9, sp, #56	; 0x38
   19a78:	str	r4, [sp, #28]
   19a7c:	ldr	r0, [r0]
   19a80:	add	r1, r0, r1
   19a84:	ldr	r0, [sp, #24]
   19a88:	str	r1, [sp, #40]	; 0x28
   19a8c:	cmp	r1, r0
   19a90:	blt	198a4 <ReadCompressedDataSlabN+0x9b4>
   19a94:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19a98:	ldr	r9, [fp, #24]
   19a9c:	mov	r8, #0
   19aa0:	ldr	r0, [r9]
   19aa4:	ldr	r9, [fp, #28]
   19aa8:	sub	r0, r0, #1
   19aac:	str	r0, [fp, #-72]	; 0xffffffb8
   19ab0:	ldr	ip, [r5]
   19ab4:	str	ip, [sp, #112]	; 0x70
   19ab8:	ldr	r0, [r9]
   19abc:	str	r0, [sp, #32]
   19ac0:	ldr	r0, [fp, #12]
   19ac4:	cmp	r0, #2
   19ac8:	blt	19b54 <ReadCompressedDataSlabN+0xc64>
   19acc:	mov	r0, #1
   19ad0:	mov	r1, r5
   19ad4:	mov	r3, ip
   19ad8:	add	r7, sp, #112	; 0x70
   19adc:	ldr	r2, [fp, #24]
   19ae0:	ldr	r2, [r2, r0, lsl #2]
   19ae4:	str	r3, [r7, r0, lsl #2]
   19ae8:	sub	r4, r2, #1
   19aec:	mov	r2, #0
   19af0:	str	r4, [r6, r0, lsl #2]
   19af4:	ldr	lr, [r5, r0, lsl #2]
   19af8:	mov	r6, lr
   19afc:	mul	r3, r6, r3
   19b00:	ldr	r6, [r1, -r2, lsl #2]
   19b04:	add	r2, r2, #1
   19b08:	cmp	r0, r2
   19b0c:	mul	r4, r4, r6
   19b10:	bne	19afc <ReadCompressedDataSlabN+0xc0c>
   19b14:	sub	r6, fp, #72	; 0x48
   19b18:	str	r3, [r7, r0, lsl #2]
   19b1c:	add	r1, r1, #4
   19b20:	str	r4, [r6, r0, lsl #2]
   19b24:	ldr	r4, [sp, #32]
   19b28:	ldr	r2, [sl, r0, lsl #2]
   19b2c:	mla	r8, r2, ip, r8
   19b30:	ldr	r2, [r9, r0, lsl #2]
   19b34:	add	r0, r0, #1
   19b38:	mov	ip, r3
   19b3c:	mov	r3, lr
   19b40:	mul	r4, r2, r4
   19b44:	ldr	r2, [fp, #12]
   19b48:	str	r4, [sp, #32]
   19b4c:	cmp	r0, r2
   19b50:	bne	19adc <ReadCompressedDataSlabN+0xbec>
   19b54:	ldr	r0, [sp, #52]	; 0x34
   19b58:	ldr	r2, [fp, #8]
   19b5c:	add	r1, sp, #56	; 0x38
   19b60:	mov	r3, r8
   19b64:	bl	2690 <InflateSkipData>
   19b68:	ldr	r0, [fp, #24]
   19b6c:	ldr	r0, [r0]
   19b70:	cmp	r0, #1
   19b74:	bne	1b8d8 <ReadCompressedDataSlabN+0x29e8>
   19b78:	ldr	r0, [sp, #32]
   19b7c:	cmp	r0, #1
   19b80:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19b84:	sub	r0, fp, #112	; 0x70
   19b88:	mov	r1, r6
   19b8c:	add	r3, sl, #4
   19b90:	orr	r6, r0, #4
   19b94:	ldr	r0, [fp, #28]
   19b98:	str	r3, [sp, #44]	; 0x2c
   19b9c:	add	r4, r0, #4
   19ba0:	add	r0, sp, #112	; 0x70
   19ba4:	orr	r0, r0, #4
   19ba8:	str	r4, [sp, #36]	; 0x24
   19bac:	str	r0, [sp, #28]
   19bb0:	ldr	r0, [fp, #12]
   19bb4:	sub	r0, r0, #1
   19bb8:	str	r0, [sp, #24]
   19bbc:	orr	r0, r1, #4
   19bc0:	add	r1, sp, #56	; 0x38
   19bc4:	str	r0, [sp, #20]
   19bc8:	mov	r0, #0
   19bcc:	str	r0, [sp, #40]	; 0x28
   19bd0:	ldr	r3, [sl]
   19bd4:	cmp	r3, #0
   19bd8:	beq	19c00 <ReadCompressedDataSlabN+0xd10>
   19bdc:	ldr	r5, [fp, #8]
   19be0:	ldr	r0, [sp, #52]	; 0x34
   19be4:	mov	r9, r1
   19be8:	mov	r2, r5
   19bec:	bl	2690 <InflateSkipData>
   19bf0:	ldr	r0, [sl]
   19bf4:	ldr	r4, [fp, #28]
   19bf8:	add	r8, r0, r8
   19bfc:	b	19c0c <ReadCompressedDataSlabN+0xd1c>
   19c00:	ldr	r4, [fp, #28]
   19c04:	ldr	r5, [fp, #8]
   19c08:	mov	r9, r1
   19c0c:	ldr	r0, [r4]
   19c10:	ldr	r1, [sp, #40]	; 0x28
   19c14:	ldr	sl, [sp, #52]	; 0x34
   19c18:	mov	r3, r5
   19c1c:	str	r0, [sp]
   19c20:	ldr	r0, [sp, #48]	; 0x30
   19c24:	add	r2, r0, r1, lsl #1
   19c28:	mov	r0, sl
   19c2c:	mov	r1, r9
   19c30:	bl	feec <ReadCompressedInt16Data>
   19c34:	ldr	r7, [fp, #20]
   19c38:	ldr	r1, [fp, #16]
   19c3c:	mov	r2, r5
   19c40:	mov	r5, r1
   19c44:	ldr	r0, [r7]
   19c48:	ldr	r1, [r1]
   19c4c:	sub	r0, r1, r0
   19c50:	ldr	r1, [r4]
   19c54:	sub	r3, r0, r1
   19c58:	mov	r0, sl
   19c5c:	mov	r1, r9
   19c60:	bl	2690 <InflateSkipData>
   19c64:	ldr	r0, [r5]
   19c68:	ldr	r1, [r7]
   19c6c:	add	r0, r0, r8
   19c70:	sub	r8, r0, r1
   19c74:	ldr	r0, [fp, #12]
   19c78:	cmp	r0, #2
   19c7c:	blt	19d90 <ReadCompressedDataSlabN+0xea0>
   19c80:	ldr	r9, [sp, #24]
   19c84:	ldr	r4, [sp, #36]	; 0x24
   19c88:	ldr	r7, [sp, #28]
   19c8c:	ldr	r3, [sp, #44]	; 0x2c
   19c90:	mov	sl, #0
   19c94:	add	r5, sp, #112	; 0x70
   19c98:	ldr	r0, [r6, sl]
   19c9c:	add	r0, r0, #1
   19ca0:	str	r0, [r6, sl]
   19ca4:	ldr	r1, [r4, sl]
   19ca8:	sdiv	r2, r0, r1
   19cac:	mls	r0, r2, r1, r0
   19cb0:	cmp	r0, #0
   19cb4:	bne	19d68 <ReadCompressedDataSlabN+0xe78>
   19cb8:	mov	r0, #0
   19cbc:	str	r0, [r6, sl]
   19cc0:	ldr	r0, [r7, sl]
   19cc4:	sdiv	r1, r8, r0
   19cc8:	mls	r1, r1, r0, r8
   19ccc:	cmp	r1, #0
   19cd0:	beq	19d24 <ReadCompressedDataSlabN+0xe34>
   19cd4:	ldr	r3, [sp, #44]	; 0x2c
   19cd8:	ldr	r2, [r5, sl]
   19cdc:	sub	r0, r0, r1
   19ce0:	add	r1, sp, #56	; 0x38
   19ce4:	ldr	r3, [r3, sl]
   19ce8:	mla	r3, r3, r2, r0
   19cec:	ldr	r0, [sp, #52]	; 0x34
   19cf0:	ldr	r2, [fp, #8]
   19cf4:	bl	2690 <InflateSkipData>
   19cf8:	ldr	r0, [r7, sl]
   19cfc:	ldr	r3, [sp, #44]	; 0x2c
   19d00:	sdiv	r1, r8, r0
   19d04:	ldr	r2, [r3, sl]
   19d08:	mul	r1, r1, r0
   19d0c:	add	r0, r0, r8
   19d10:	sub	r1, r1, r8
   19d14:	add	r0, r0, r1
   19d18:	ldr	r1, [r5, sl]
   19d1c:	mla	r8, r2, r1, r0
   19d20:	b	19d58 <ReadCompressedDataSlabN+0xe68>
   19d24:	ldr	r0, [r3, sl]
   19d28:	cmp	r0, #0
   19d2c:	beq	19d58 <ReadCompressedDataSlabN+0xe68>
   19d30:	ldr	r1, [r5, sl]
   19d34:	ldr	r2, [fp, #8]
   19d38:	mul	r3, r1, r0
   19d3c:	ldr	r0, [sp, #52]	; 0x34
   19d40:	add	r1, sp, #56	; 0x38
   19d44:	bl	2690 <InflateSkipData>
   19d48:	ldr	r3, [sp, #44]	; 0x2c
   19d4c:	ldr	r0, [r5, sl]
   19d50:	ldr	r1, [r3, sl]
   19d54:	mla	r8, r1, r0, r8
   19d58:	subs	r9, r9, #1
   19d5c:	add	sl, sl, #4
   19d60:	bne	19c98 <ReadCompressedDataSlabN+0xda8>
   19d64:	b	19d90 <ReadCompressedDataSlabN+0xea0>
   19d68:	ldr	r0, [sp, #20]
   19d6c:	ldr	r5, [r0, sl]
   19d70:	cmp	r5, #0
   19d74:	beq	19d90 <ReadCompressedDataSlabN+0xea0>
   19d78:	ldr	r0, [sp, #52]	; 0x34
   19d7c:	ldr	r2, [fp, #8]
   19d80:	add	r1, sp, #56	; 0x38
   19d84:	mov	r3, r5
   19d88:	bl	2690 <InflateSkipData>
   19d8c:	add	r8, r5, r8
   19d90:	ldr	r0, [fp, #28]
   19d94:	ldr	r1, [sp, #40]	; 0x28
   19d98:	ldr	sl, [fp, #20]
   19d9c:	ldr	r0, [r0]
   19da0:	add	r1, r0, r1
   19da4:	ldr	r0, [sp, #32]
   19da8:	str	r1, [sp, #40]	; 0x28
   19dac:	cmp	r1, r0
   19db0:	add	r1, sp, #56	; 0x38
   19db4:	blt	19bd0 <ReadCompressedDataSlabN+0xce0>
   19db8:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19dbc:	ldr	r9, [fp, #24]
   19dc0:	mov	r8, #0
   19dc4:	ldr	r0, [r9]
   19dc8:	ldr	r9, [fp, #28]
   19dcc:	sub	r0, r0, #1
   19dd0:	str	r0, [fp, #-72]	; 0xffffffb8
   19dd4:	ldr	ip, [r5]
   19dd8:	str	ip, [sp, #112]	; 0x70
   19ddc:	ldr	r0, [r9]
   19de0:	str	r0, [sp, #32]
   19de4:	ldr	r0, [fp, #12]
   19de8:	cmp	r0, #2
   19dec:	blt	19e78 <ReadCompressedDataSlabN+0xf88>
   19df0:	mov	r0, #1
   19df4:	mov	r1, r5
   19df8:	mov	r3, ip
   19dfc:	add	r7, sp, #112	; 0x70
   19e00:	ldr	r2, [fp, #24]
   19e04:	ldr	r2, [r2, r0, lsl #2]
   19e08:	str	r3, [r7, r0, lsl #2]
   19e0c:	sub	r4, r2, #1
   19e10:	mov	r2, #0
   19e14:	str	r4, [r6, r0, lsl #2]
   19e18:	ldr	lr, [r5, r0, lsl #2]
   19e1c:	mov	r6, lr
   19e20:	mul	r3, r6, r3
   19e24:	ldr	r6, [r1, -r2, lsl #2]
   19e28:	add	r2, r2, #1
   19e2c:	cmp	r0, r2
   19e30:	mul	r4, r4, r6
   19e34:	bne	19e20 <ReadCompressedDataSlabN+0xf30>
   19e38:	sub	r6, fp, #72	; 0x48
   19e3c:	str	r3, [r7, r0, lsl #2]
   19e40:	add	r1, r1, #4
   19e44:	str	r4, [r6, r0, lsl #2]
   19e48:	ldr	r4, [sp, #32]
   19e4c:	ldr	r2, [sl, r0, lsl #2]
   19e50:	mla	r8, r2, ip, r8
   19e54:	ldr	r2, [r9, r0, lsl #2]
   19e58:	add	r0, r0, #1
   19e5c:	mov	ip, r3
   19e60:	mov	r3, lr
   19e64:	mul	r4, r2, r4
   19e68:	ldr	r2, [fp, #12]
   19e6c:	str	r4, [sp, #32]
   19e70:	cmp	r0, r2
   19e74:	bne	19e00 <ReadCompressedDataSlabN+0xf10>
   19e78:	ldr	r0, [sp, #52]	; 0x34
   19e7c:	ldr	r2, [fp, #8]
   19e80:	add	r1, sp, #56	; 0x38
   19e84:	mov	r3, r8
   19e88:	bl	2690 <InflateSkipData>
   19e8c:	ldr	r0, [fp, #24]
   19e90:	ldr	r0, [r0]
   19e94:	cmp	r0, #1
   19e98:	bne	1bbc8 <ReadCompressedDataSlabN+0x2cd8>
   19e9c:	ldr	r0, [sp, #32]
   19ea0:	cmp	r0, #1
   19ea4:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   19ea8:	sub	r0, fp, #112	; 0x70
   19eac:	mov	r1, r6
   19eb0:	add	r3, sl, #4
   19eb4:	orr	r6, r0, #4
   19eb8:	ldr	r0, [fp, #28]
   19ebc:	str	r3, [sp, #44]	; 0x2c
   19ec0:	add	r4, r0, #4
   19ec4:	add	r0, sp, #112	; 0x70
   19ec8:	orr	r0, r0, #4
   19ecc:	str	r4, [sp, #36]	; 0x24
   19ed0:	str	r0, [sp, #28]
   19ed4:	ldr	r0, [fp, #12]
   19ed8:	sub	r0, r0, #1
   19edc:	str	r0, [sp, #24]
   19ee0:	orr	r0, r1, #4
   19ee4:	add	r1, sp, #56	; 0x38
   19ee8:	str	r0, [sp, #20]
   19eec:	mov	r0, #0
   19ef0:	str	r0, [sp, #40]	; 0x28
   19ef4:	ldr	r3, [sl]
   19ef8:	cmp	r3, #0
   19efc:	beq	19f24 <ReadCompressedDataSlabN+0x1034>
   19f00:	ldr	r5, [fp, #8]
   19f04:	ldr	r0, [sp, #52]	; 0x34
   19f08:	mov	r9, r1
   19f0c:	mov	r2, r5
   19f10:	bl	2690 <InflateSkipData>
   19f14:	ldr	r0, [sl]
   19f18:	ldr	r4, [fp, #28]
   19f1c:	add	r8, r0, r8
   19f20:	b	19f30 <ReadCompressedDataSlabN+0x1040>
   19f24:	ldr	r4, [fp, #28]
   19f28:	ldr	r5, [fp, #8]
   19f2c:	mov	r9, r1
   19f30:	ldr	r0, [r4]
   19f34:	ldr	r1, [sp, #40]	; 0x28
   19f38:	ldr	sl, [sp, #52]	; 0x34
   19f3c:	mov	r3, r5
   19f40:	str	r0, [sp]
   19f44:	ldr	r0, [sp, #48]	; 0x30
   19f48:	add	r2, r0, r1, lsl #1
   19f4c:	mov	r0, sl
   19f50:	mov	r1, r9
   19f54:	bl	11960 <ReadCompressedUInt16Data>
   19f58:	ldr	r7, [fp, #20]
   19f5c:	ldr	r1, [fp, #16]
   19f60:	mov	r2, r5
   19f64:	mov	r5, r1
   19f68:	ldr	r0, [r7]
   19f6c:	ldr	r1, [r1]
   19f70:	sub	r0, r1, r0
   19f74:	ldr	r1, [r4]
   19f78:	sub	r3, r0, r1
   19f7c:	mov	r0, sl
   19f80:	mov	r1, r9
   19f84:	bl	2690 <InflateSkipData>
   19f88:	ldr	r0, [r5]
   19f8c:	ldr	r1, [r7]
   19f90:	add	r0, r0, r8
   19f94:	sub	r8, r0, r1
   19f98:	ldr	r0, [fp, #12]
   19f9c:	cmp	r0, #2
   19fa0:	blt	1a0b4 <ReadCompressedDataSlabN+0x11c4>
   19fa4:	ldr	r9, [sp, #24]
   19fa8:	ldr	r4, [sp, #36]	; 0x24
   19fac:	ldr	r7, [sp, #28]
   19fb0:	ldr	r3, [sp, #44]	; 0x2c
   19fb4:	mov	sl, #0
   19fb8:	add	r5, sp, #112	; 0x70
   19fbc:	ldr	r0, [r6, sl]
   19fc0:	add	r0, r0, #1
   19fc4:	str	r0, [r6, sl]
   19fc8:	ldr	r1, [r4, sl]
   19fcc:	sdiv	r2, r0, r1
   19fd0:	mls	r0, r2, r1, r0
   19fd4:	cmp	r0, #0
   19fd8:	bne	1a08c <ReadCompressedDataSlabN+0x119c>
   19fdc:	mov	r0, #0
   19fe0:	str	r0, [r6, sl]
   19fe4:	ldr	r0, [r7, sl]
   19fe8:	sdiv	r1, r8, r0
   19fec:	mls	r1, r1, r0, r8
   19ff0:	cmp	r1, #0
   19ff4:	beq	1a048 <ReadCompressedDataSlabN+0x1158>
   19ff8:	ldr	r3, [sp, #44]	; 0x2c
   19ffc:	ldr	r2, [r5, sl]
   1a000:	sub	r0, r0, r1
   1a004:	add	r1, sp, #56	; 0x38
   1a008:	ldr	r3, [r3, sl]
   1a00c:	mla	r3, r3, r2, r0
   1a010:	ldr	r0, [sp, #52]	; 0x34
   1a014:	ldr	r2, [fp, #8]
   1a018:	bl	2690 <InflateSkipData>
   1a01c:	ldr	r0, [r7, sl]
   1a020:	ldr	r3, [sp, #44]	; 0x2c
   1a024:	sdiv	r1, r8, r0
   1a028:	ldr	r2, [r3, sl]
   1a02c:	mul	r1, r1, r0
   1a030:	add	r0, r0, r8
   1a034:	sub	r1, r1, r8
   1a038:	add	r0, r0, r1
   1a03c:	ldr	r1, [r5, sl]
   1a040:	mla	r8, r2, r1, r0
   1a044:	b	1a07c <ReadCompressedDataSlabN+0x118c>
   1a048:	ldr	r0, [r3, sl]
   1a04c:	cmp	r0, #0
   1a050:	beq	1a07c <ReadCompressedDataSlabN+0x118c>
   1a054:	ldr	r1, [r5, sl]
   1a058:	ldr	r2, [fp, #8]
   1a05c:	mul	r3, r1, r0
   1a060:	ldr	r0, [sp, #52]	; 0x34
   1a064:	add	r1, sp, #56	; 0x38
   1a068:	bl	2690 <InflateSkipData>
   1a06c:	ldr	r3, [sp, #44]	; 0x2c
   1a070:	ldr	r0, [r5, sl]
   1a074:	ldr	r1, [r3, sl]
   1a078:	mla	r8, r1, r0, r8
   1a07c:	subs	r9, r9, #1
   1a080:	add	sl, sl, #4
   1a084:	bne	19fbc <ReadCompressedDataSlabN+0x10cc>
   1a088:	b	1a0b4 <ReadCompressedDataSlabN+0x11c4>
   1a08c:	ldr	r0, [sp, #20]
   1a090:	ldr	r5, [r0, sl]
   1a094:	cmp	r5, #0
   1a098:	beq	1a0b4 <ReadCompressedDataSlabN+0x11c4>
   1a09c:	ldr	r0, [sp, #52]	; 0x34
   1a0a0:	ldr	r2, [fp, #8]
   1a0a4:	add	r1, sp, #56	; 0x38
   1a0a8:	mov	r3, r5
   1a0ac:	bl	2690 <InflateSkipData>
   1a0b0:	add	r8, r5, r8
   1a0b4:	ldr	r0, [fp, #28]
   1a0b8:	ldr	r1, [sp, #40]	; 0x28
   1a0bc:	ldr	sl, [fp, #20]
   1a0c0:	ldr	r0, [r0]
   1a0c4:	add	r1, r0, r1
   1a0c8:	ldr	r0, [sp, #32]
   1a0cc:	str	r1, [sp, #40]	; 0x28
   1a0d0:	cmp	r1, r0
   1a0d4:	add	r1, sp, #56	; 0x38
   1a0d8:	blt	19ef4 <ReadCompressedDataSlabN+0x1004>
   1a0dc:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a0e0:	ldr	r9, [fp, #24]
   1a0e4:	mov	r8, #0
   1a0e8:	ldr	r0, [r9]
   1a0ec:	ldr	r9, [fp, #28]
   1a0f0:	sub	r0, r0, #1
   1a0f4:	str	r0, [fp, #-72]	; 0xffffffb8
   1a0f8:	ldr	ip, [r5]
   1a0fc:	str	ip, [sp, #112]	; 0x70
   1a100:	ldr	r0, [r9]
   1a104:	str	r0, [sp, #32]
   1a108:	ldr	r0, [fp, #12]
   1a10c:	cmp	r0, #2
   1a110:	blt	1a19c <ReadCompressedDataSlabN+0x12ac>
   1a114:	mov	r0, #1
   1a118:	mov	r1, r5
   1a11c:	mov	r3, ip
   1a120:	add	r7, sp, #112	; 0x70
   1a124:	ldr	r2, [fp, #24]
   1a128:	ldr	r2, [r2, r0, lsl #2]
   1a12c:	str	r3, [r7, r0, lsl #2]
   1a130:	sub	r4, r2, #1
   1a134:	mov	r2, #0
   1a138:	str	r4, [r6, r0, lsl #2]
   1a13c:	ldr	lr, [r5, r0, lsl #2]
   1a140:	mov	r6, lr
   1a144:	mul	r3, r6, r3
   1a148:	ldr	r6, [r1, -r2, lsl #2]
   1a14c:	add	r2, r2, #1
   1a150:	cmp	r0, r2
   1a154:	mul	r4, r4, r6
   1a158:	bne	1a144 <ReadCompressedDataSlabN+0x1254>
   1a15c:	sub	r6, fp, #72	; 0x48
   1a160:	str	r3, [r7, r0, lsl #2]
   1a164:	add	r1, r1, #4
   1a168:	str	r4, [r6, r0, lsl #2]
   1a16c:	ldr	r4, [sp, #32]
   1a170:	ldr	r2, [sl, r0, lsl #2]
   1a174:	mla	r8, r2, ip, r8
   1a178:	ldr	r2, [r9, r0, lsl #2]
   1a17c:	add	r0, r0, #1
   1a180:	mov	ip, r3
   1a184:	mov	r3, lr
   1a188:	mul	r4, r2, r4
   1a18c:	ldr	r2, [fp, #12]
   1a190:	str	r4, [sp, #32]
   1a194:	cmp	r0, r2
   1a198:	bne	1a124 <ReadCompressedDataSlabN+0x1234>
   1a19c:	ldr	r0, [sp, #52]	; 0x34
   1a1a0:	ldr	r2, [fp, #8]
   1a1a4:	add	r1, sp, #56	; 0x38
   1a1a8:	mov	r3, r8
   1a1ac:	bl	2690 <InflateSkipData>
   1a1b0:	ldr	r0, [fp, #24]
   1a1b4:	ldr	r0, [r0]
   1a1b8:	cmp	r0, #1
   1a1bc:	bne	1beb8 <ReadCompressedDataSlabN+0x2fc8>
   1a1c0:	ldr	r0, [sp, #32]
   1a1c4:	cmp	r0, #1
   1a1c8:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a1cc:	sub	r0, fp, #112	; 0x70
   1a1d0:	mov	r1, r6
   1a1d4:	add	r3, sl, #4
   1a1d8:	orr	r6, r0, #4
   1a1dc:	ldr	r0, [fp, #28]
   1a1e0:	str	r3, [sp, #44]	; 0x2c
   1a1e4:	add	r4, r0, #4
   1a1e8:	add	r0, sp, #112	; 0x70
   1a1ec:	orr	r0, r0, #4
   1a1f0:	str	r4, [sp, #36]	; 0x24
   1a1f4:	str	r0, [sp, #28]
   1a1f8:	ldr	r0, [fp, #12]
   1a1fc:	sub	r0, r0, #1
   1a200:	str	r0, [sp, #24]
   1a204:	orr	r0, r1, #4
   1a208:	add	r1, sp, #56	; 0x38
   1a20c:	str	r0, [sp, #20]
   1a210:	mov	r0, #0
   1a214:	str	r0, [sp, #40]	; 0x28
   1a218:	ldr	r3, [sl]
   1a21c:	cmp	r3, #0
   1a220:	beq	1a248 <ReadCompressedDataSlabN+0x1358>
   1a224:	ldr	r5, [fp, #8]
   1a228:	ldr	r0, [sp, #52]	; 0x34
   1a22c:	mov	r9, r1
   1a230:	mov	r2, r5
   1a234:	bl	2690 <InflateSkipData>
   1a238:	ldr	r0, [sl]
   1a23c:	ldr	r4, [fp, #28]
   1a240:	add	r8, r0, r8
   1a244:	b	1a254 <ReadCompressedDataSlabN+0x1364>
   1a248:	ldr	r4, [fp, #28]
   1a24c:	ldr	r5, [fp, #8]
   1a250:	mov	r9, r1
   1a254:	ldr	r0, [r4]
   1a258:	ldr	r1, [sp, #40]	; 0x28
   1a25c:	ldr	sl, [sp, #52]	; 0x34
   1a260:	mov	r3, r5
   1a264:	str	r0, [sp]
   1a268:	ldr	r0, [sp, #48]	; 0x30
   1a26c:	add	r2, r0, r1, lsl #2
   1a270:	mov	r0, sl
   1a274:	mov	r1, r9
   1a278:	bl	ca14 <ReadCompressedInt32Data>
   1a27c:	ldr	r7, [fp, #20]
   1a280:	ldr	r1, [fp, #16]
   1a284:	mov	r2, r5
   1a288:	mov	r5, r1
   1a28c:	ldr	r0, [r7]
   1a290:	ldr	r1, [r1]
   1a294:	sub	r0, r1, r0
   1a298:	ldr	r1, [r4]
   1a29c:	sub	r3, r0, r1
   1a2a0:	mov	r0, sl
   1a2a4:	mov	r1, r9
   1a2a8:	bl	2690 <InflateSkipData>
   1a2ac:	ldr	r0, [r5]
   1a2b0:	ldr	r1, [r7]
   1a2b4:	add	r0, r0, r8
   1a2b8:	sub	r8, r0, r1
   1a2bc:	ldr	r0, [fp, #12]
   1a2c0:	cmp	r0, #2
   1a2c4:	blt	1a3d8 <ReadCompressedDataSlabN+0x14e8>
   1a2c8:	ldr	r9, [sp, #24]
   1a2cc:	ldr	r4, [sp, #36]	; 0x24
   1a2d0:	ldr	r7, [sp, #28]
   1a2d4:	ldr	r3, [sp, #44]	; 0x2c
   1a2d8:	mov	sl, #0
   1a2dc:	add	r5, sp, #112	; 0x70
   1a2e0:	ldr	r0, [r6, sl]
   1a2e4:	add	r0, r0, #1
   1a2e8:	str	r0, [r6, sl]
   1a2ec:	ldr	r1, [r4, sl]
   1a2f0:	sdiv	r2, r0, r1
   1a2f4:	mls	r0, r2, r1, r0
   1a2f8:	cmp	r0, #0
   1a2fc:	bne	1a3b0 <ReadCompressedDataSlabN+0x14c0>
   1a300:	mov	r0, #0
   1a304:	str	r0, [r6, sl]
   1a308:	ldr	r0, [r7, sl]
   1a30c:	sdiv	r1, r8, r0
   1a310:	mls	r1, r1, r0, r8
   1a314:	cmp	r1, #0
   1a318:	beq	1a36c <ReadCompressedDataSlabN+0x147c>
   1a31c:	ldr	r3, [sp, #44]	; 0x2c
   1a320:	ldr	r2, [r5, sl]
   1a324:	sub	r0, r0, r1
   1a328:	add	r1, sp, #56	; 0x38
   1a32c:	ldr	r3, [r3, sl]
   1a330:	mla	r3, r3, r2, r0
   1a334:	ldr	r0, [sp, #52]	; 0x34
   1a338:	ldr	r2, [fp, #8]
   1a33c:	bl	2690 <InflateSkipData>
   1a340:	ldr	r0, [r7, sl]
   1a344:	ldr	r3, [sp, #44]	; 0x2c
   1a348:	sdiv	r1, r8, r0
   1a34c:	ldr	r2, [r3, sl]
   1a350:	mul	r1, r1, r0
   1a354:	add	r0, r0, r8
   1a358:	sub	r1, r1, r8
   1a35c:	add	r0, r0, r1
   1a360:	ldr	r1, [r5, sl]
   1a364:	mla	r8, r2, r1, r0
   1a368:	b	1a3a0 <ReadCompressedDataSlabN+0x14b0>
   1a36c:	ldr	r0, [r3, sl]
   1a370:	cmp	r0, #0
   1a374:	beq	1a3a0 <ReadCompressedDataSlabN+0x14b0>
   1a378:	ldr	r1, [r5, sl]
   1a37c:	ldr	r2, [fp, #8]
   1a380:	mul	r3, r1, r0
   1a384:	ldr	r0, [sp, #52]	; 0x34
   1a388:	add	r1, sp, #56	; 0x38
   1a38c:	bl	2690 <InflateSkipData>
   1a390:	ldr	r3, [sp, #44]	; 0x2c
   1a394:	ldr	r0, [r5, sl]
   1a398:	ldr	r1, [r3, sl]
   1a39c:	mla	r8, r1, r0, r8
   1a3a0:	subs	r9, r9, #1
   1a3a4:	add	sl, sl, #4
   1a3a8:	bne	1a2e0 <ReadCompressedDataSlabN+0x13f0>
   1a3ac:	b	1a3d8 <ReadCompressedDataSlabN+0x14e8>
   1a3b0:	ldr	r0, [sp, #20]
   1a3b4:	ldr	r5, [r0, sl]
   1a3b8:	cmp	r5, #0
   1a3bc:	beq	1a3d8 <ReadCompressedDataSlabN+0x14e8>
   1a3c0:	ldr	r0, [sp, #52]	; 0x34
   1a3c4:	ldr	r2, [fp, #8]
   1a3c8:	add	r1, sp, #56	; 0x38
   1a3cc:	mov	r3, r5
   1a3d0:	bl	2690 <InflateSkipData>
   1a3d4:	add	r8, r5, r8
   1a3d8:	ldr	r0, [fp, #28]
   1a3dc:	ldr	r1, [sp, #40]	; 0x28
   1a3e0:	ldr	sl, [fp, #20]
   1a3e4:	ldr	r0, [r0]
   1a3e8:	add	r1, r0, r1
   1a3ec:	ldr	r0, [sp, #32]
   1a3f0:	str	r1, [sp, #40]	; 0x28
   1a3f4:	cmp	r1, r0
   1a3f8:	add	r1, sp, #56	; 0x38
   1a3fc:	blt	1a218 <ReadCompressedDataSlabN+0x1328>
   1a400:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a404:	ldr	r9, [fp, #24]
   1a408:	mov	r8, #0
   1a40c:	ldr	r0, [r9]
   1a410:	ldr	r9, [fp, #28]
   1a414:	sub	r0, r0, #1
   1a418:	str	r0, [fp, #-72]	; 0xffffffb8
   1a41c:	ldr	ip, [r5]
   1a420:	str	ip, [sp, #112]	; 0x70
   1a424:	ldr	r0, [r9]
   1a428:	str	r0, [sp, #32]
   1a42c:	ldr	r0, [fp, #12]
   1a430:	cmp	r0, #2
   1a434:	blt	1a4c0 <ReadCompressedDataSlabN+0x15d0>
   1a438:	mov	r0, #1
   1a43c:	mov	r1, r5
   1a440:	mov	r3, ip
   1a444:	add	r7, sp, #112	; 0x70
   1a448:	ldr	r2, [fp, #24]
   1a44c:	ldr	r2, [r2, r0, lsl #2]
   1a450:	str	r3, [r7, r0, lsl #2]
   1a454:	sub	r4, r2, #1
   1a458:	mov	r2, #0
   1a45c:	str	r4, [r6, r0, lsl #2]
   1a460:	ldr	lr, [r5, r0, lsl #2]
   1a464:	mov	r6, lr
   1a468:	mul	r3, r6, r3
   1a46c:	ldr	r6, [r1, -r2, lsl #2]
   1a470:	add	r2, r2, #1
   1a474:	cmp	r0, r2
   1a478:	mul	r4, r4, r6
   1a47c:	bne	1a468 <ReadCompressedDataSlabN+0x1578>
   1a480:	sub	r6, fp, #72	; 0x48
   1a484:	str	r3, [r7, r0, lsl #2]
   1a488:	add	r1, r1, #4
   1a48c:	str	r4, [r6, r0, lsl #2]
   1a490:	ldr	r4, [sp, #32]
   1a494:	ldr	r2, [sl, r0, lsl #2]
   1a498:	mla	r8, r2, ip, r8
   1a49c:	ldr	r2, [r9, r0, lsl #2]
   1a4a0:	add	r0, r0, #1
   1a4a4:	mov	ip, r3
   1a4a8:	mov	r3, lr
   1a4ac:	mul	r4, r2, r4
   1a4b0:	ldr	r2, [fp, #12]
   1a4b4:	str	r4, [sp, #32]
   1a4b8:	cmp	r0, r2
   1a4bc:	bne	1a448 <ReadCompressedDataSlabN+0x1558>
   1a4c0:	ldr	r0, [sp, #52]	; 0x34
   1a4c4:	ldr	r2, [fp, #8]
   1a4c8:	add	r1, sp, #56	; 0x38
   1a4cc:	mov	r3, r8
   1a4d0:	bl	2690 <InflateSkipData>
   1a4d4:	ldr	r0, [fp, #24]
   1a4d8:	ldr	r0, [r0]
   1a4dc:	cmp	r0, #1
   1a4e0:	bne	1c1a8 <ReadCompressedDataSlabN+0x32b8>
   1a4e4:	ldr	r0, [sp, #32]
   1a4e8:	cmp	r0, #1
   1a4ec:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a4f0:	sub	r0, fp, #112	; 0x70
   1a4f4:	mov	r1, r6
   1a4f8:	add	r3, sl, #4
   1a4fc:	orr	r6, r0, #4
   1a500:	ldr	r0, [fp, #28]
   1a504:	str	r3, [sp, #44]	; 0x2c
   1a508:	add	r4, r0, #4
   1a50c:	add	r0, sp, #112	; 0x70
   1a510:	orr	r0, r0, #4
   1a514:	str	r4, [sp, #36]	; 0x24
   1a518:	str	r0, [sp, #28]
   1a51c:	ldr	r0, [fp, #12]
   1a520:	sub	r0, r0, #1
   1a524:	str	r0, [sp, #24]
   1a528:	orr	r0, r1, #4
   1a52c:	add	r1, sp, #56	; 0x38
   1a530:	str	r0, [sp, #20]
   1a534:	mov	r0, #0
   1a538:	str	r0, [sp, #40]	; 0x28
   1a53c:	ldr	r3, [sl]
   1a540:	cmp	r3, #0
   1a544:	beq	1a56c <ReadCompressedDataSlabN+0x167c>
   1a548:	ldr	r5, [fp, #8]
   1a54c:	ldr	r0, [sp, #52]	; 0x34
   1a550:	mov	r9, r1
   1a554:	mov	r2, r5
   1a558:	bl	2690 <InflateSkipData>
   1a55c:	ldr	r0, [sl]
   1a560:	ldr	r4, [fp, #28]
   1a564:	add	r8, r0, r8
   1a568:	b	1a578 <ReadCompressedDataSlabN+0x1688>
   1a56c:	ldr	r4, [fp, #28]
   1a570:	ldr	r5, [fp, #8]
   1a574:	mov	r9, r1
   1a578:	ldr	r0, [r4]
   1a57c:	ldr	r1, [sp, #40]	; 0x28
   1a580:	ldr	sl, [sp, #52]	; 0x34
   1a584:	mov	r3, r5
   1a588:	str	r0, [sp]
   1a58c:	ldr	r0, [sp, #48]	; 0x30
   1a590:	add	r2, r0, r1, lsl #2
   1a594:	mov	r0, sl
   1a598:	mov	r1, r9
   1a59c:	bl	e478 <ReadCompressedUInt32Data>
   1a5a0:	ldr	r7, [fp, #20]
   1a5a4:	ldr	r1, [fp, #16]
   1a5a8:	mov	r2, r5
   1a5ac:	mov	r5, r1
   1a5b0:	ldr	r0, [r7]
   1a5b4:	ldr	r1, [r1]
   1a5b8:	sub	r0, r1, r0
   1a5bc:	ldr	r1, [r4]
   1a5c0:	sub	r3, r0, r1
   1a5c4:	mov	r0, sl
   1a5c8:	mov	r1, r9
   1a5cc:	bl	2690 <InflateSkipData>
   1a5d0:	ldr	r0, [r5]
   1a5d4:	ldr	r1, [r7]
   1a5d8:	add	r0, r0, r8
   1a5dc:	sub	r8, r0, r1
   1a5e0:	ldr	r0, [fp, #12]
   1a5e4:	cmp	r0, #2
   1a5e8:	blt	1a6fc <ReadCompressedDataSlabN+0x180c>
   1a5ec:	ldr	r9, [sp, #24]
   1a5f0:	ldr	r4, [sp, #36]	; 0x24
   1a5f4:	ldr	r7, [sp, #28]
   1a5f8:	ldr	r3, [sp, #44]	; 0x2c
   1a5fc:	mov	sl, #0
   1a600:	add	r5, sp, #112	; 0x70
   1a604:	ldr	r0, [r6, sl]
   1a608:	add	r0, r0, #1
   1a60c:	str	r0, [r6, sl]
   1a610:	ldr	r1, [r4, sl]
   1a614:	sdiv	r2, r0, r1
   1a618:	mls	r0, r2, r1, r0
   1a61c:	cmp	r0, #0
   1a620:	bne	1a6d4 <ReadCompressedDataSlabN+0x17e4>
   1a624:	mov	r0, #0
   1a628:	str	r0, [r6, sl]
   1a62c:	ldr	r0, [r7, sl]
   1a630:	sdiv	r1, r8, r0
   1a634:	mls	r1, r1, r0, r8
   1a638:	cmp	r1, #0
   1a63c:	beq	1a690 <ReadCompressedDataSlabN+0x17a0>
   1a640:	ldr	r3, [sp, #44]	; 0x2c
   1a644:	ldr	r2, [r5, sl]
   1a648:	sub	r0, r0, r1
   1a64c:	add	r1, sp, #56	; 0x38
   1a650:	ldr	r3, [r3, sl]
   1a654:	mla	r3, r3, r2, r0
   1a658:	ldr	r0, [sp, #52]	; 0x34
   1a65c:	ldr	r2, [fp, #8]
   1a660:	bl	2690 <InflateSkipData>
   1a664:	ldr	r0, [r7, sl]
   1a668:	ldr	r3, [sp, #44]	; 0x2c
   1a66c:	sdiv	r1, r8, r0
   1a670:	ldr	r2, [r3, sl]
   1a674:	mul	r1, r1, r0
   1a678:	add	r0, r0, r8
   1a67c:	sub	r1, r1, r8
   1a680:	add	r0, r0, r1
   1a684:	ldr	r1, [r5, sl]
   1a688:	mla	r8, r2, r1, r0
   1a68c:	b	1a6c4 <ReadCompressedDataSlabN+0x17d4>
   1a690:	ldr	r0, [r3, sl]
   1a694:	cmp	r0, #0
   1a698:	beq	1a6c4 <ReadCompressedDataSlabN+0x17d4>
   1a69c:	ldr	r1, [r5, sl]
   1a6a0:	ldr	r2, [fp, #8]
   1a6a4:	mul	r3, r1, r0
   1a6a8:	ldr	r0, [sp, #52]	; 0x34
   1a6ac:	add	r1, sp, #56	; 0x38
   1a6b0:	bl	2690 <InflateSkipData>
   1a6b4:	ldr	r3, [sp, #44]	; 0x2c
   1a6b8:	ldr	r0, [r5, sl]
   1a6bc:	ldr	r1, [r3, sl]
   1a6c0:	mla	r8, r1, r0, r8
   1a6c4:	subs	r9, r9, #1
   1a6c8:	add	sl, sl, #4
   1a6cc:	bne	1a604 <ReadCompressedDataSlabN+0x1714>
   1a6d0:	b	1a6fc <ReadCompressedDataSlabN+0x180c>
   1a6d4:	ldr	r0, [sp, #20]
   1a6d8:	ldr	r5, [r0, sl]
   1a6dc:	cmp	r5, #0
   1a6e0:	beq	1a6fc <ReadCompressedDataSlabN+0x180c>
   1a6e4:	ldr	r0, [sp, #52]	; 0x34
   1a6e8:	ldr	r2, [fp, #8]
   1a6ec:	add	r1, sp, #56	; 0x38
   1a6f0:	mov	r3, r5
   1a6f4:	bl	2690 <InflateSkipData>
   1a6f8:	add	r8, r5, r8
   1a6fc:	ldr	r0, [fp, #28]
   1a700:	ldr	r1, [sp, #40]	; 0x28
   1a704:	ldr	sl, [fp, #20]
   1a708:	ldr	r0, [r0]
   1a70c:	add	r1, r0, r1
   1a710:	ldr	r0, [sp, #32]
   1a714:	str	r1, [sp, #40]	; 0x28
   1a718:	cmp	r1, r0
   1a71c:	add	r1, sp, #56	; 0x38
   1a720:	blt	1a53c <ReadCompressedDataSlabN+0x164c>
   1a724:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a728:	ldr	r9, [fp, #24]
   1a72c:	mov	r8, #0
   1a730:	ldr	r0, [r9]
   1a734:	ldr	r9, [fp, #28]
   1a738:	sub	r0, r0, #1
   1a73c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a740:	ldr	ip, [r5]
   1a744:	str	ip, [sp, #112]	; 0x70
   1a748:	ldr	r0, [r9]
   1a74c:	str	r0, [sp, #32]
   1a750:	ldr	r0, [fp, #12]
   1a754:	cmp	r0, #2
   1a758:	blt	1a7e4 <ReadCompressedDataSlabN+0x18f4>
   1a75c:	mov	r0, #1
   1a760:	mov	r1, r5
   1a764:	mov	r3, ip
   1a768:	add	r7, sp, #112	; 0x70
   1a76c:	ldr	r2, [fp, #24]
   1a770:	ldr	r2, [r2, r0, lsl #2]
   1a774:	str	r3, [r7, r0, lsl #2]
   1a778:	sub	r4, r2, #1
   1a77c:	mov	r2, #0
   1a780:	str	r4, [r6, r0, lsl #2]
   1a784:	ldr	lr, [r5, r0, lsl #2]
   1a788:	mov	r6, lr
   1a78c:	mul	r3, r6, r3
   1a790:	ldr	r6, [r1, -r2, lsl #2]
   1a794:	add	r2, r2, #1
   1a798:	cmp	r0, r2
   1a79c:	mul	r4, r4, r6
   1a7a0:	bne	1a78c <ReadCompressedDataSlabN+0x189c>
   1a7a4:	sub	r6, fp, #72	; 0x48
   1a7a8:	str	r3, [r7, r0, lsl #2]
   1a7ac:	add	r1, r1, #4
   1a7b0:	str	r4, [r6, r0, lsl #2]
   1a7b4:	ldr	r4, [sp, #32]
   1a7b8:	ldr	r2, [sl, r0, lsl #2]
   1a7bc:	mla	r8, r2, ip, r8
   1a7c0:	ldr	r2, [r9, r0, lsl #2]
   1a7c4:	add	r0, r0, #1
   1a7c8:	mov	ip, r3
   1a7cc:	mov	r3, lr
   1a7d0:	mul	r4, r2, r4
   1a7d4:	ldr	r2, [fp, #12]
   1a7d8:	str	r4, [sp, #32]
   1a7dc:	cmp	r0, r2
   1a7e0:	bne	1a76c <ReadCompressedDataSlabN+0x187c>
   1a7e4:	ldr	r0, [sp, #52]	; 0x34
   1a7e8:	ldr	r2, [fp, #8]
   1a7ec:	add	r1, sp, #56	; 0x38
   1a7f0:	mov	r3, r8
   1a7f4:	bl	2690 <InflateSkipData>
   1a7f8:	ldr	r0, [fp, #24]
   1a7fc:	ldr	r0, [r0]
   1a800:	cmp	r0, #1
   1a804:	bne	1c498 <ReadCompressedDataSlabN+0x35a8>
   1a808:	ldr	r0, [sp, #32]
   1a80c:	cmp	r0, #1
   1a810:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1a814:	sub	r0, fp, #112	; 0x70
   1a818:	mov	r1, r6
   1a81c:	orr	r6, r0, #4
   1a820:	ldr	r0, [fp, #28]
   1a824:	add	r0, r0, #4
   1a828:	str	r0, [sp, #36]	; 0x24
   1a82c:	add	r0, sp, #112	; 0x70
   1a830:	orr	r0, r0, #4
   1a834:	str	r0, [sp, #28]
   1a838:	add	r0, sl, #4
   1a83c:	str	r0, [sp, #44]	; 0x2c
   1a840:	ldr	r0, [fp, #12]
   1a844:	sub	r0, r0, #1
   1a848:	str	r0, [sp, #24]
   1a84c:	orr	r0, r1, #4
   1a850:	add	r1, sp, #56	; 0x38
   1a854:	str	r0, [sp, #20]
   1a858:	mov	r0, #0
   1a85c:	str	r0, [sp, #40]	; 0x28
   1a860:	ldr	r3, [sl]
   1a864:	cmp	r3, #0
   1a868:	beq	1a890 <ReadCompressedDataSlabN+0x19a0>
   1a86c:	ldr	r5, [fp, #8]
   1a870:	ldr	r0, [sp, #52]	; 0x34
   1a874:	mov	r9, r1
   1a878:	mov	r2, r5
   1a87c:	bl	2690 <InflateSkipData>
   1a880:	ldr	r0, [sl]
   1a884:	ldr	r4, [fp, #28]
   1a888:	add	r8, r0, r8
   1a88c:	b	1a89c <ReadCompressedDataSlabN+0x19ac>
   1a890:	ldr	r4, [fp, #28]
   1a894:	ldr	r5, [fp, #8]
   1a898:	mov	r9, r1
   1a89c:	ldr	r0, [r4]
   1a8a0:	ldr	r1, [sp, #40]	; 0x28
   1a8a4:	ldr	sl, [sp, #52]	; 0x34
   1a8a8:	mov	r3, r5
   1a8ac:	str	r0, [sp]
   1a8b0:	ldr	r0, [sp, #48]	; 0x30
   1a8b4:	add	r2, r0, r1, lsl #3
   1a8b8:	mov	r0, sl
   1a8bc:	mov	r1, r9
   1a8c0:	bl	92a4 <ReadCompressedInt64Data>
   1a8c4:	ldr	r7, [fp, #20]
   1a8c8:	ldr	r1, [fp, #16]
   1a8cc:	mov	r2, r5
   1a8d0:	mov	r5, r1
   1a8d4:	ldr	r0, [r7]
   1a8d8:	ldr	r1, [r1]
   1a8dc:	sub	r0, r1, r0
   1a8e0:	ldr	r1, [r4]
   1a8e4:	sub	r3, r0, r1
   1a8e8:	mov	r0, sl
   1a8ec:	mov	r1, r9
   1a8f0:	bl	2690 <InflateSkipData>
   1a8f4:	ldr	r0, [r5]
   1a8f8:	ldr	r1, [r7]
   1a8fc:	add	r0, r0, r8
   1a900:	sub	r8, r0, r1
   1a904:	ldr	r0, [fp, #12]
   1a908:	cmp	r0, #2
   1a90c:	blt	1aa1c <ReadCompressedDataSlabN+0x1b2c>
   1a910:	ldr	r9, [sp, #24]
   1a914:	ldr	r4, [sp, #36]	; 0x24
   1a918:	ldr	r7, [sp, #28]
   1a91c:	ldr	r3, [sp, #44]	; 0x2c
   1a920:	mov	sl, #0
   1a924:	add	r5, sp, #112	; 0x70
   1a928:	ldr	r0, [r6, sl]
   1a92c:	add	r0, r0, #1
   1a930:	str	r0, [r6, sl]
   1a934:	ldr	r1, [r4, sl]
   1a938:	sdiv	r2, r0, r1
   1a93c:	mls	r0, r2, r1, r0
   1a940:	cmp	r0, #0
   1a944:	bne	1a9f4 <ReadCompressedDataSlabN+0x1b04>
   1a948:	mov	r0, #0
   1a94c:	str	r0, [r6, sl]
   1a950:	ldr	r0, [r7, sl]
   1a954:	sdiv	r1, r8, r0
   1a958:	mls	r1, r1, r0, r8
   1a95c:	cmp	r1, #0
   1a960:	beq	1a9b0 <ReadCompressedDataSlabN+0x1ac0>
   1a964:	ldr	r2, [r5, sl]
   1a968:	ldr	r3, [r3, sl]
   1a96c:	sub	r0, r0, r1
   1a970:	add	r1, sp, #56	; 0x38
   1a974:	mla	r3, r3, r2, r0
   1a978:	ldr	r0, [sp, #52]	; 0x34
   1a97c:	ldr	r2, [fp, #8]
   1a980:	bl	2690 <InflateSkipData>
   1a984:	ldr	r0, [r7, sl]
   1a988:	ldr	r3, [sp, #44]	; 0x2c
   1a98c:	sdiv	r1, r8, r0
   1a990:	ldr	r2, [r3, sl]
   1a994:	mul	r1, r1, r0
   1a998:	add	r0, r0, r8
   1a99c:	sub	r1, r1, r8
   1a9a0:	add	r0, r0, r1
   1a9a4:	ldr	r1, [r5, sl]
   1a9a8:	mla	r8, r2, r1, r0
   1a9ac:	b	1a9e4 <ReadCompressedDataSlabN+0x1af4>
   1a9b0:	ldr	r0, [r3, sl]
   1a9b4:	cmp	r0, #0
   1a9b8:	beq	1a9e4 <ReadCompressedDataSlabN+0x1af4>
   1a9bc:	ldr	r1, [r5, sl]
   1a9c0:	ldr	r2, [fp, #8]
   1a9c4:	mul	r3, r1, r0
   1a9c8:	ldr	r0, [sp, #52]	; 0x34
   1a9cc:	add	r1, sp, #56	; 0x38
   1a9d0:	bl	2690 <InflateSkipData>
   1a9d4:	ldr	r3, [sp, #44]	; 0x2c
   1a9d8:	ldr	r0, [r5, sl]
   1a9dc:	ldr	r1, [r3, sl]
   1a9e0:	mla	r8, r1, r0, r8
   1a9e4:	subs	r9, r9, #1
   1a9e8:	add	sl, sl, #4
   1a9ec:	bne	1a928 <ReadCompressedDataSlabN+0x1a38>
   1a9f0:	b	1aa1c <ReadCompressedDataSlabN+0x1b2c>
   1a9f4:	ldr	r0, [sp, #20]
   1a9f8:	ldr	r4, [r0, sl]
   1a9fc:	cmp	r4, #0
   1aa00:	beq	1aa1c <ReadCompressedDataSlabN+0x1b2c>
   1aa04:	ldr	r0, [sp, #52]	; 0x34
   1aa08:	ldr	r2, [fp, #8]
   1aa0c:	add	r1, sp, #56	; 0x38
   1aa10:	mov	r3, r4
   1aa14:	bl	2690 <InflateSkipData>
   1aa18:	add	r8, r4, r8
   1aa1c:	ldr	r0, [fp, #28]
   1aa20:	ldr	r1, [sp, #40]	; 0x28
   1aa24:	ldr	sl, [fp, #20]
   1aa28:	ldr	r0, [r0]
   1aa2c:	add	r1, r0, r1
   1aa30:	ldr	r0, [sp, #32]
   1aa34:	str	r1, [sp, #40]	; 0x28
   1aa38:	cmp	r1, r0
   1aa3c:	add	r1, sp, #56	; 0x38
   1aa40:	blt	1a860 <ReadCompressedDataSlabN+0x1970>
   1aa44:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1aa48:	ldr	r9, [fp, #24]
   1aa4c:	mov	r8, #0
   1aa50:	ldr	r0, [r9]
   1aa54:	ldr	r9, [fp, #28]
   1aa58:	sub	r0, r0, #1
   1aa5c:	str	r0, [fp, #-72]	; 0xffffffb8
   1aa60:	ldr	ip, [r5]
   1aa64:	str	ip, [sp, #112]	; 0x70
   1aa68:	ldr	r0, [r9]
   1aa6c:	str	r0, [sp, #32]
   1aa70:	ldr	r0, [fp, #12]
   1aa74:	cmp	r0, #2
   1aa78:	blt	1ab04 <ReadCompressedDataSlabN+0x1c14>
   1aa7c:	mov	r0, #1
   1aa80:	mov	r1, r5
   1aa84:	mov	r3, ip
   1aa88:	add	r7, sp, #112	; 0x70
   1aa8c:	ldr	r2, [fp, #24]
   1aa90:	ldr	r2, [r2, r0, lsl #2]
   1aa94:	str	r3, [r7, r0, lsl #2]
   1aa98:	sub	r4, r2, #1
   1aa9c:	mov	r2, #0
   1aaa0:	str	r4, [r6, r0, lsl #2]
   1aaa4:	ldr	lr, [r5, r0, lsl #2]
   1aaa8:	mov	r6, lr
   1aaac:	mul	r3, r6, r3
   1aab0:	ldr	r6, [r1, -r2, lsl #2]
   1aab4:	add	r2, r2, #1
   1aab8:	cmp	r0, r2
   1aabc:	mul	r4, r4, r6
   1aac0:	bne	1aaac <ReadCompressedDataSlabN+0x1bbc>
   1aac4:	sub	r6, fp, #72	; 0x48
   1aac8:	str	r3, [r7, r0, lsl #2]
   1aacc:	add	r1, r1, #4
   1aad0:	str	r4, [r6, r0, lsl #2]
   1aad4:	ldr	r4, [sp, #32]
   1aad8:	ldr	r2, [sl, r0, lsl #2]
   1aadc:	mla	r8, r2, ip, r8
   1aae0:	ldr	r2, [r9, r0, lsl #2]
   1aae4:	add	r0, r0, #1
   1aae8:	mov	ip, r3
   1aaec:	mov	r3, lr
   1aaf0:	mul	r4, r2, r4
   1aaf4:	ldr	r2, [fp, #12]
   1aaf8:	str	r4, [sp, #32]
   1aafc:	cmp	r0, r2
   1ab00:	bne	1aa8c <ReadCompressedDataSlabN+0x1b9c>
   1ab04:	ldr	r0, [sp, #52]	; 0x34
   1ab08:	ldr	r2, [fp, #8]
   1ab0c:	add	r1, sp, #56	; 0x38
   1ab10:	mov	r3, r8
   1ab14:	bl	2690 <InflateSkipData>
   1ab18:	ldr	r0, [fp, #24]
   1ab1c:	ldr	r0, [r0]
   1ab20:	cmp	r0, #1
   1ab24:	bne	1c79c <ReadCompressedDataSlabN+0x38ac>
   1ab28:	ldr	r0, [sp, #32]
   1ab2c:	cmp	r0, #1
   1ab30:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1ab34:	sub	r0, fp, #112	; 0x70
   1ab38:	mov	r1, r6
   1ab3c:	add	r3, sl, #4
   1ab40:	orr	r6, r0, #4
   1ab44:	ldr	r0, [fp, #28]
   1ab48:	str	r3, [sp, #44]	; 0x2c
   1ab4c:	add	r4, r0, #4
   1ab50:	add	r0, sp, #112	; 0x70
   1ab54:	orr	r0, r0, #4
   1ab58:	str	r4, [sp, #36]	; 0x24
   1ab5c:	str	r0, [sp, #28]
   1ab60:	ldr	r0, [fp, #12]
   1ab64:	sub	r0, r0, #1
   1ab68:	str	r0, [sp, #24]
   1ab6c:	orr	r0, r1, #4
   1ab70:	add	r1, sp, #56	; 0x38
   1ab74:	str	r0, [sp, #20]
   1ab78:	mov	r0, #0
   1ab7c:	str	r0, [sp, #40]	; 0x28
   1ab80:	ldr	r3, [sl]
   1ab84:	cmp	r3, #0
   1ab88:	beq	1abb0 <ReadCompressedDataSlabN+0x1cc0>
   1ab8c:	ldr	r5, [fp, #8]
   1ab90:	ldr	r0, [sp, #52]	; 0x34
   1ab94:	mov	r9, r1
   1ab98:	mov	r2, r5
   1ab9c:	bl	2690 <InflateSkipData>
   1aba0:	ldr	r0, [sl]
   1aba4:	ldr	r4, [fp, #28]
   1aba8:	add	r8, r0, r8
   1abac:	b	1abbc <ReadCompressedDataSlabN+0x1ccc>
   1abb0:	ldr	r4, [fp, #28]
   1abb4:	ldr	r5, [fp, #8]
   1abb8:	mov	r9, r1
   1abbc:	ldr	r0, [r4]
   1abc0:	ldr	r1, [sp, #40]	; 0x28
   1abc4:	ldr	sl, [sp, #52]	; 0x34
   1abc8:	mov	r3, r5
   1abcc:	str	r0, [sp]
   1abd0:	ldr	r0, [sp, #48]	; 0x30
   1abd4:	add	r2, r0, r1, lsl #3
   1abd8:	mov	r0, sl
   1abdc:	mov	r1, r9
   1abe0:	bl	af40 <ReadCompressedUInt64Data>
   1abe4:	ldr	r7, [fp, #20]
   1abe8:	ldr	r1, [fp, #16]
   1abec:	mov	r2, r5
   1abf0:	mov	r5, r1
   1abf4:	ldr	r0, [r7]
   1abf8:	ldr	r1, [r1]
   1abfc:	sub	r0, r1, r0
   1ac00:	ldr	r1, [r4]
   1ac04:	sub	r3, r0, r1
   1ac08:	mov	r0, sl
   1ac0c:	mov	r1, r9
   1ac10:	bl	2690 <InflateSkipData>
   1ac14:	ldr	r0, [r5]
   1ac18:	ldr	r1, [r7]
   1ac1c:	add	r0, r0, r8
   1ac20:	sub	r8, r0, r1
   1ac24:	ldr	r0, [fp, #12]
   1ac28:	cmp	r0, #2
   1ac2c:	blt	1ad40 <ReadCompressedDataSlabN+0x1e50>
   1ac30:	ldr	r9, [sp, #24]
   1ac34:	ldr	r4, [sp, #36]	; 0x24
   1ac38:	ldr	r7, [sp, #28]
   1ac3c:	ldr	r3, [sp, #44]	; 0x2c
   1ac40:	mov	sl, #0
   1ac44:	add	r5, sp, #112	; 0x70
   1ac48:	ldr	r0, [r6, sl]
   1ac4c:	add	r0, r0, #1
   1ac50:	str	r0, [r6, sl]
   1ac54:	ldr	r1, [r4, sl]
   1ac58:	sdiv	r2, r0, r1
   1ac5c:	mls	r0, r2, r1, r0
   1ac60:	cmp	r0, #0
   1ac64:	bne	1ad18 <ReadCompressedDataSlabN+0x1e28>
   1ac68:	mov	r0, #0
   1ac6c:	str	r0, [r6, sl]
   1ac70:	ldr	r0, [r7, sl]
   1ac74:	sdiv	r1, r8, r0
   1ac78:	mls	r1, r1, r0, r8
   1ac7c:	cmp	r1, #0
   1ac80:	beq	1acd4 <ReadCompressedDataSlabN+0x1de4>
   1ac84:	ldr	r3, [sp, #44]	; 0x2c
   1ac88:	ldr	r2, [r5, sl]
   1ac8c:	sub	r0, r0, r1
   1ac90:	add	r1, sp, #56	; 0x38
   1ac94:	ldr	r3, [r3, sl]
   1ac98:	mla	r3, r3, r2, r0
   1ac9c:	ldr	r0, [sp, #52]	; 0x34
   1aca0:	ldr	r2, [fp, #8]
   1aca4:	bl	2690 <InflateSkipData>
   1aca8:	ldr	r0, [r7, sl]
   1acac:	ldr	r3, [sp, #44]	; 0x2c
   1acb0:	sdiv	r1, r8, r0
   1acb4:	ldr	r2, [r3, sl]
   1acb8:	mul	r1, r1, r0
   1acbc:	add	r0, r0, r8
   1acc0:	sub	r1, r1, r8
   1acc4:	add	r0, r0, r1
   1acc8:	ldr	r1, [r5, sl]
   1accc:	mla	r8, r2, r1, r0
   1acd0:	b	1ad08 <ReadCompressedDataSlabN+0x1e18>
   1acd4:	ldr	r0, [r3, sl]
   1acd8:	cmp	r0, #0
   1acdc:	beq	1ad08 <ReadCompressedDataSlabN+0x1e18>
   1ace0:	ldr	r1, [r5, sl]
   1ace4:	ldr	r2, [fp, #8]
   1ace8:	mul	r3, r1, r0
   1acec:	ldr	r0, [sp, #52]	; 0x34
   1acf0:	add	r1, sp, #56	; 0x38
   1acf4:	bl	2690 <InflateSkipData>
   1acf8:	ldr	r3, [sp, #44]	; 0x2c
   1acfc:	ldr	r0, [r5, sl]
   1ad00:	ldr	r1, [r3, sl]
   1ad04:	mla	r8, r1, r0, r8
   1ad08:	subs	r9, r9, #1
   1ad0c:	add	sl, sl, #4
   1ad10:	bne	1ac48 <ReadCompressedDataSlabN+0x1d58>
   1ad14:	b	1ad40 <ReadCompressedDataSlabN+0x1e50>
   1ad18:	ldr	r0, [sp, #20]
   1ad1c:	ldr	r5, [r0, sl]
   1ad20:	cmp	r5, #0
   1ad24:	beq	1ad40 <ReadCompressedDataSlabN+0x1e50>
   1ad28:	ldr	r0, [sp, #52]	; 0x34
   1ad2c:	ldr	r2, [fp, #8]
   1ad30:	add	r1, sp, #56	; 0x38
   1ad34:	mov	r3, r5
   1ad38:	bl	2690 <InflateSkipData>
   1ad3c:	add	r8, r5, r8
   1ad40:	ldr	r0, [fp, #28]
   1ad44:	ldr	r1, [sp, #40]	; 0x28
   1ad48:	ldr	sl, [fp, #20]
   1ad4c:	ldr	r0, [r0]
   1ad50:	add	r1, r0, r1
   1ad54:	ldr	r0, [sp, #32]
   1ad58:	str	r1, [sp, #40]	; 0x28
   1ad5c:	cmp	r1, r0
   1ad60:	add	r1, sp, #56	; 0x38
   1ad64:	blt	1ab80 <ReadCompressedDataSlabN+0x1c90>
   1ad68:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1ad6c:	mov	r8, #0
   1ad70:	ldr	r0, [sp, #52]	; 0x34
   1ad74:	ldr	r2, [fp, #8]
   1ad78:	add	r1, sp, #56	; 0x38
   1ad7c:	mov	r3, r8
   1ad80:	mov	r7, r8
   1ad84:	bl	2690 <InflateSkipData>
   1ad88:	ldr	r0, [fp, #24]
   1ad8c:	ldr	r0, [r0]
   1ad90:	cmp	r0, #1
   1ad94:	bne	1ca8c <ReadCompressedDataSlabN+0x3b9c>
   1ad98:	ldr	r0, [sp, #36]	; 0x24
   1ad9c:	cmp	r0, #1
   1ada0:	sub	r0, fp, #72	; 0x48
   1ada4:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1ada8:	mov	r1, r0
   1adac:	sub	r0, fp, #112	; 0x70
   1adb0:	add	r8, sl, #4
   1adb4:	orr	r6, r0, #4
   1adb8:	ldr	r0, [fp, #28]
   1adbc:	add	r5, r0, #4
   1adc0:	add	r0, sp, #112	; 0x70
   1adc4:	orr	r3, r0, #4
   1adc8:	ldr	r0, [fp, #12]
   1adcc:	str	r5, [sp, #28]
   1add0:	str	r3, [sp, #44]	; 0x2c
   1add4:	sub	r0, r0, #1
   1add8:	str	r0, [sp, #24]
   1addc:	orr	r0, r1, #4
   1ade0:	add	r1, sp, #56	; 0x38
   1ade4:	str	r0, [sp, #20]
   1ade8:	mov	r0, #0
   1adec:	str	r0, [sp, #32]
   1adf0:	ldr	r3, [sl]
   1adf4:	str	r7, [sp, #40]	; 0x28
   1adf8:	cmp	r3, #0
   1adfc:	beq	1ae2c <ReadCompressedDataSlabN+0x1f3c>
   1ae00:	ldr	r9, [fp, #8]
   1ae04:	ldr	r0, [sp, #52]	; 0x34
   1ae08:	mov	r7, r1
   1ae0c:	mov	r2, r9
   1ae10:	bl	2690 <InflateSkipData>
   1ae14:	ldr	r0, [sl]
   1ae18:	ldr	r1, [sp, #40]	; 0x28
   1ae1c:	ldr	r5, [fp, #28]
   1ae20:	add	r1, r0, r1
   1ae24:	str	r1, [sp, #40]	; 0x28
   1ae28:	b	1ae38 <ReadCompressedDataSlabN+0x1f48>
   1ae2c:	ldr	r5, [fp, #28]
   1ae30:	ldr	r9, [fp, #8]
   1ae34:	mov	r7, r1
   1ae38:	ldr	r0, [r5]
   1ae3c:	ldr	r1, [sp, #32]
   1ae40:	ldr	sl, [sp, #52]	; 0x34
   1ae44:	mov	r3, r9
   1ae48:	str	r0, [sp]
   1ae4c:	ldr	r0, [sp, #48]	; 0x30
   1ae50:	add	r2, r0, r1, lsl #3
   1ae54:	mov	r0, sl
   1ae58:	mov	r1, r7
   1ae5c:	bl	4cb4 <ReadCompressedDoubleData>
   1ae60:	ldr	r4, [fp, #20]
   1ae64:	mov	r2, r9
   1ae68:	ldr	r9, [fp, #16]
   1ae6c:	ldr	r0, [r4]
   1ae70:	ldr	r1, [r9]
   1ae74:	sub	r0, r1, r0
   1ae78:	ldr	r1, [r5]
   1ae7c:	sub	r3, r0, r1
   1ae80:	mov	r0, sl
   1ae84:	mov	r1, r7
   1ae88:	bl	2690 <InflateSkipData>
   1ae8c:	ldr	r0, [r9]
   1ae90:	ldr	r1, [sp, #40]	; 0x28
   1ae94:	add	r0, r0, r1
   1ae98:	ldr	r1, [r4]
   1ae9c:	sub	r7, r0, r1
   1aea0:	ldr	r0, [fp, #12]
   1aea4:	cmp	r0, #2
   1aea8:	blt	1afb4 <ReadCompressedDataSlabN+0x20c4>
   1aeac:	ldr	r9, [sp, #24]
   1aeb0:	ldr	r5, [sp, #28]
   1aeb4:	ldr	r3, [sp, #44]	; 0x2c
   1aeb8:	mov	sl, #0
   1aebc:	add	r4, sp, #112	; 0x70
   1aec0:	ldr	r0, [r6, sl]
   1aec4:	add	r0, r0, #1
   1aec8:	str	r0, [r6, sl]
   1aecc:	ldr	r1, [r5, sl]
   1aed0:	sdiv	r2, r0, r1
   1aed4:	mls	r0, r2, r1, r0
   1aed8:	cmp	r0, #0
   1aedc:	bne	1af8c <ReadCompressedDataSlabN+0x209c>
   1aee0:	mov	r0, #0
   1aee4:	str	r0, [r6, sl]
   1aee8:	ldr	r0, [r3, sl]
   1aeec:	sdiv	r1, r7, r0
   1aef0:	mls	r1, r1, r0, r7
   1aef4:	cmp	r1, #0
   1aef8:	beq	1af48 <ReadCompressedDataSlabN+0x2058>
   1aefc:	ldr	r2, [r4, sl]
   1af00:	ldr	r3, [r8, sl]
   1af04:	sub	r0, r0, r1
   1af08:	add	r1, sp, #56	; 0x38
   1af0c:	mla	r3, r3, r2, r0
   1af10:	ldr	r0, [sp, #52]	; 0x34
   1af14:	ldr	r2, [fp, #8]
   1af18:	bl	2690 <InflateSkipData>
   1af1c:	ldr	r3, [sp, #44]	; 0x2c
   1af20:	ldr	r2, [r8, sl]
   1af24:	ldr	r0, [r3, sl]
   1af28:	sdiv	r1, r7, r0
   1af2c:	mul	r1, r1, r0
   1af30:	add	r0, r0, r7
   1af34:	sub	r1, r1, r7
   1af38:	add	r0, r0, r1
   1af3c:	ldr	r1, [r4, sl]
   1af40:	mla	r7, r2, r1, r0
   1af44:	b	1af7c <ReadCompressedDataSlabN+0x208c>
   1af48:	ldr	r0, [r8, sl]
   1af4c:	cmp	r0, #0
   1af50:	beq	1af7c <ReadCompressedDataSlabN+0x208c>
   1af54:	ldr	r1, [r4, sl]
   1af58:	ldr	r2, [fp, #8]
   1af5c:	mul	r3, r1, r0
   1af60:	ldr	r0, [sp, #52]	; 0x34
   1af64:	add	r1, sp, #56	; 0x38
   1af68:	bl	2690 <InflateSkipData>
   1af6c:	ldr	r0, [r4, sl]
   1af70:	ldr	r1, [r8, sl]
   1af74:	ldr	r3, [sp, #44]	; 0x2c
   1af78:	mla	r7, r1, r0, r7
   1af7c:	subs	r9, r9, #1
   1af80:	add	sl, sl, #4
   1af84:	bne	1aec0 <ReadCompressedDataSlabN+0x1fd0>
   1af88:	b	1afb4 <ReadCompressedDataSlabN+0x20c4>
   1af8c:	ldr	r0, [sp, #20]
   1af90:	ldr	r4, [r0, sl]
   1af94:	cmp	r4, #0
   1af98:	beq	1afb4 <ReadCompressedDataSlabN+0x20c4>
   1af9c:	ldr	r0, [sp, #52]	; 0x34
   1afa0:	ldr	r2, [fp, #8]
   1afa4:	add	r1, sp, #56	; 0x38
   1afa8:	mov	r3, r4
   1afac:	bl	2690 <InflateSkipData>
   1afb0:	add	r7, r4, r7
   1afb4:	ldr	r0, [fp, #28]
   1afb8:	ldr	r1, [sp, #32]
   1afbc:	ldr	sl, [fp, #20]
   1afc0:	ldr	r0, [r0]
   1afc4:	add	r1, r0, r1
   1afc8:	ldr	r0, [sp, #36]	; 0x24
   1afcc:	str	r1, [sp, #32]
   1afd0:	cmp	r1, r0
   1afd4:	add	r1, sp, #56	; 0x38
   1afd8:	blt	1adf0 <ReadCompressedDataSlabN+0x1f00>
   1afdc:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1afe0:	ldr	r0, [sp, #32]
   1afe4:	cmp	r0, #1
   1afe8:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1afec:	sub	r0, fp, #112	; 0x70
   1aff0:	add	r5, sl, #4
   1aff4:	mov	r9, sl
   1aff8:	mov	sl, #1
   1affc:	add	r4, sp, #56	; 0x38
   1b000:	orr	r7, r0, #4
   1b004:	ldr	r0, [fp, #28]
   1b008:	str	r5, [sp, #36]	; 0x24
   1b00c:	str	r7, [sp, #20]
   1b010:	add	r0, r0, #4
   1b014:	str	r0, [sp, #44]	; 0x2c
   1b018:	add	r0, sp, #112	; 0x70
   1b01c:	orr	r3, r0, #4
   1b020:	ldr	r0, [fp, #12]
   1b024:	str	r3, [sp, #40]	; 0x28
   1b028:	sub	r0, r0, #1
   1b02c:	str	r0, [sp, #16]
   1b030:	orr	r0, r6, #4
   1b034:	str	r0, [sp, #8]
   1b038:	ldr	r0, [sp, #48]	; 0x30
   1b03c:	add	r0, r0, #4
   1b040:	str	r0, [sp, #12]
   1b044:	mov	r0, #0
   1b048:	str	r0, [sp, #28]
   1b04c:	ldr	r3, [r9]
   1b050:	cmp	r3, #0
   1b054:	beq	1b080 <ReadCompressedDataSlabN+0x2190>
   1b058:	ldr	r5, [sp, #52]	; 0x34
   1b05c:	ldr	r6, [fp, #8]
   1b060:	mov	r1, r4
   1b064:	mov	r0, r5
   1b068:	mov	r2, r6
   1b06c:	bl	2690 <InflateSkipData>
   1b070:	ldr	r0, [r9]
   1b074:	ldr	r9, [fp, #28]
   1b078:	add	r8, r0, r8
   1b07c:	b	1b08c <ReadCompressedDataSlabN+0x219c>
   1b080:	ldr	r5, [sp, #52]	; 0x34
   1b084:	ldr	r9, [fp, #28]
   1b088:	ldr	r6, [fp, #8]
   1b08c:	ldr	r0, [sp, #48]	; 0x30
   1b090:	ldr	r7, [sp, #28]
   1b094:	str	r8, [sp, #24]
   1b098:	ldr	r8, [r9]
   1b09c:	mov	r1, r4
   1b0a0:	mov	r3, r6
   1b0a4:	str	sl, [sp]
   1b0a8:	add	r2, r0, r7, lsl #2
   1b0ac:	mov	r0, r5
   1b0b0:	bl	7638 <ReadCompressedSingleData>
   1b0b4:	cmp	r8, #2
   1b0b8:	blt	1b13c <ReadCompressedDataSlabN+0x224c>
   1b0bc:	ldr	r0, [sp, #12]
   1b0c0:	ldr	r8, [sp, #24]
   1b0c4:	mov	r4, #0
   1b0c8:	add	r6, r0, r7, lsl #2
   1b0cc:	ldr	r0, [fp, #24]
   1b0d0:	mov	r5, r9
   1b0d4:	ldr	sl, [fp, #8]
   1b0d8:	ldr	r7, [sp, #52]	; 0x34
   1b0dc:	add	r1, sp, #56	; 0x38
   1b0e0:	mov	r9, r0
   1b0e4:	ldr	r0, [r0]
   1b0e8:	mov	r2, sl
   1b0ec:	sub	r3, r0, #1
   1b0f0:	mov	r0, r7
   1b0f4:	bl	2690 <InflateSkipData>
   1b0f8:	ldr	r5, [r5]
   1b0fc:	ldr	r9, [r9]
   1b100:	mov	r0, #1
   1b104:	add	r1, sp, #56	; 0x38
   1b108:	mov	r2, r6
   1b10c:	mov	r3, sl
   1b110:	str	r0, [sp]
   1b114:	mov	r0, r7
   1b118:	bl	7638 <ReadCompressedSingleData>
   1b11c:	add	r8, r9, r8
   1b120:	ldr	r9, [fp, #28]
   1b124:	add	r4, r4, #1
   1b128:	sub	r0, r5, #1
   1b12c:	add	r6, r6, #4
   1b130:	cmp	r4, r0
   1b134:	blt	1b0cc <ReadCompressedDataSlabN+0x21dc>
   1b138:	b	1b140 <ReadCompressedDataSlabN+0x2250>
   1b13c:	ldr	r8, [sp, #24]
   1b140:	ldr	r0, [fp, #16]
   1b144:	ldr	r1, [fp, #24]
   1b148:	ldr	r2, [r9]
   1b14c:	ldr	r0, [r0]
   1b150:	ldr	r1, [r1]
   1b154:	sub	r2, r2, #1
   1b158:	mls	r0, r2, r1, r0
   1b15c:	ldr	r1, [fp, #20]
   1b160:	ldr	r2, [fp, #8]
   1b164:	ldr	r1, [r1]
   1b168:	sub	r4, r0, r1
   1b16c:	ldr	r0, [sp, #52]	; 0x34
   1b170:	add	r1, sp, #56	; 0x38
   1b174:	sub	r3, r4, #1
   1b178:	bl	2690 <InflateSkipData>
   1b17c:	ldr	r0, [fp, #12]
   1b180:	add	r8, r4, r8
   1b184:	cmp	r0, #2
   1b188:	blt	1b2a4 <ReadCompressedDataSlabN+0x23b4>
   1b18c:	ldr	r4, [sp, #16]
   1b190:	ldr	r7, [sp, #20]
   1b194:	ldr	r3, [sp, #40]	; 0x28
   1b198:	ldr	r5, [sp, #36]	; 0x24
   1b19c:	mov	r6, #0
   1b1a0:	add	sl, sp, #112	; 0x70
   1b1a4:	ldr	r0, [r7, r6]
   1b1a8:	ldr	r1, [sp, #44]	; 0x2c
   1b1ac:	add	r0, r0, #1
   1b1b0:	str	r0, [r7, r6]
   1b1b4:	ldr	r1, [r1, r6]
   1b1b8:	sdiv	r2, r0, r1
   1b1bc:	mls	r0, r2, r1, r0
   1b1c0:	cmp	r0, #0
   1b1c4:	bne	1b27c <ReadCompressedDataSlabN+0x238c>
   1b1c8:	mov	r0, #0
   1b1cc:	str	r0, [r7, r6]
   1b1d0:	ldr	r0, [r3, r6]
   1b1d4:	sdiv	r1, r8, r0
   1b1d8:	mls	r1, r1, r0, r8
   1b1dc:	cmp	r1, #0
   1b1e0:	beq	1b234 <ReadCompressedDataSlabN+0x2344>
   1b1e4:	ldr	r2, [sl, r6]
   1b1e8:	ldr	r3, [r5, r6]
   1b1ec:	sub	r0, r0, r1
   1b1f0:	add	r1, sp, #56	; 0x38
   1b1f4:	mla	r3, r3, r2, r0
   1b1f8:	ldr	r0, [sp, #52]	; 0x34
   1b1fc:	ldr	r2, [fp, #8]
   1b200:	bl	2690 <InflateSkipData>
   1b204:	ldr	r3, [sp, #40]	; 0x28
   1b208:	ldr	r5, [sp, #36]	; 0x24
   1b20c:	ldr	r0, [r3, r6]
   1b210:	ldr	r2, [r5, r6]
   1b214:	sdiv	r1, r8, r0
   1b218:	mul	r1, r1, r0
   1b21c:	add	r0, r0, r8
   1b220:	sub	r1, r1, r8
   1b224:	add	r0, r0, r1
   1b228:	ldr	r1, [sl, r6]
   1b22c:	mla	r8, r2, r1, r0
   1b230:	b	1b26c <ReadCompressedDataSlabN+0x237c>
   1b234:	ldr	r0, [r5, r6]
   1b238:	cmp	r0, #0
   1b23c:	beq	1b26c <ReadCompressedDataSlabN+0x237c>
   1b240:	ldr	r1, [sl, r6]
   1b244:	ldr	r2, [fp, #8]
   1b248:	mul	r3, r1, r0
   1b24c:	ldr	r0, [sp, #52]	; 0x34
   1b250:	add	r1, sp, #56	; 0x38
   1b254:	bl	2690 <InflateSkipData>
   1b258:	ldr	r5, [sp, #36]	; 0x24
   1b25c:	ldr	r0, [sl, r6]
   1b260:	ldr	r3, [sp, #40]	; 0x28
   1b264:	ldr	r1, [r5, r6]
   1b268:	mla	r8, r1, r0, r8
   1b26c:	subs	r4, r4, #1
   1b270:	add	r6, r6, #4
   1b274:	bne	1b1a4 <ReadCompressedDataSlabN+0x22b4>
   1b278:	b	1b2a4 <ReadCompressedDataSlabN+0x23b4>
   1b27c:	ldr	r0, [sp, #8]
   1b280:	ldr	r6, [r0, r6]
   1b284:	cmp	r6, #0
   1b288:	beq	1b2a4 <ReadCompressedDataSlabN+0x23b4>
   1b28c:	ldr	r0, [sp, #52]	; 0x34
   1b290:	ldr	r2, [fp, #8]
   1b294:	add	r1, sp, #56	; 0x38
   1b298:	mov	r3, r6
   1b29c:	bl	2690 <InflateSkipData>
   1b2a0:	add	r8, r6, r8
   1b2a4:	ldr	r0, [r9]
   1b2a8:	ldr	r1, [sp, #28]
   1b2ac:	ldr	r9, [fp, #20]
   1b2b0:	mov	sl, #1
   1b2b4:	add	r4, sp, #56	; 0x38
   1b2b8:	add	r1, r0, r1
   1b2bc:	ldr	r0, [sp, #32]
   1b2c0:	str	r1, [sp, #28]
   1b2c4:	cmp	r1, r0
   1b2c8:	blt	1b04c <ReadCompressedDataSlabN+0x215c>
   1b2cc:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b2d0:	ldr	r0, [sp, #24]
   1b2d4:	sub	r1, fp, #72	; 0x48
   1b2d8:	cmp	r0, #1
   1b2dc:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b2e0:	sub	r0, fp, #112	; 0x70
   1b2e4:	add	r6, sl, #4
   1b2e8:	mov	r9, sl
   1b2ec:	mov	sl, #1
   1b2f0:	add	r7, sp, #56	; 0x38
   1b2f4:	mov	r4, #0
   1b2f8:	orr	r5, r0, #4
   1b2fc:	ldr	r0, [fp, #28]
   1b300:	str	r6, [sp, #32]
   1b304:	str	r5, [sp, #16]
   1b308:	add	r0, r0, #4
   1b30c:	str	r0, [sp, #40]	; 0x28
   1b310:	add	r0, sp, #112	; 0x70
   1b314:	orr	r3, r0, #4
   1b318:	ldr	r0, [fp, #12]
   1b31c:	str	r3, [sp, #36]	; 0x24
   1b320:	sub	r0, r0, #1
   1b324:	str	r0, [sp, #12]
   1b328:	orr	r0, r1, #4
   1b32c:	str	r0, [sp, #4]
   1b330:	ldr	r0, [sp, #48]	; 0x30
   1b334:	add	r0, r0, #1
   1b338:	str	r0, [sp, #8]
   1b33c:	ldr	r3, [r9]
   1b340:	cmp	r3, #0
   1b344:	beq	1b378 <ReadCompressedDataSlabN+0x2488>
   1b348:	ldr	r8, [sp, #52]	; 0x34
   1b34c:	ldr	r6, [fp, #8]
   1b350:	mov	r1, r7
   1b354:	mov	r0, r8
   1b358:	mov	r2, r6
   1b35c:	bl	2690 <InflateSkipData>
   1b360:	ldr	r0, [r9]
   1b364:	ldr	r1, [sp, #28]
   1b368:	add	r1, r0, r1
   1b36c:	ldr	r0, [fp, #28]
   1b370:	str	r1, [sp, #28]
   1b374:	b	1b384 <ReadCompressedDataSlabN+0x2494>
   1b378:	ldr	r8, [sp, #52]	; 0x34
   1b37c:	ldr	r0, [fp, #28]
   1b380:	ldr	r6, [fp, #8]
   1b384:	ldr	r5, [r0]
   1b388:	ldr	r0, [sp, #48]	; 0x30
   1b38c:	mov	r1, r7
   1b390:	mov	r3, r6
   1b394:	str	sl, [sp]
   1b398:	add	r2, r0, r4
   1b39c:	mov	r0, r8
   1b3a0:	bl	1340c <ReadCompressedInt8Data>
   1b3a4:	cmp	r5, #2
   1b3a8:	str	r4, [sp, #20]
   1b3ac:	blt	1b434 <ReadCompressedDataSlabN+0x2544>
   1b3b0:	ldr	r0, [sp, #8]
   1b3b4:	ldr	r7, [sp, #28]
   1b3b8:	mov	r6, #0
   1b3bc:	add	r0, r0, r4
   1b3c0:	str	r0, [sp, #44]	; 0x2c
   1b3c4:	ldr	r0, [fp, #24]
   1b3c8:	ldr	r9, [fp, #8]
   1b3cc:	ldr	r8, [sp, #52]	; 0x34
   1b3d0:	add	sl, sp, #56	; 0x38
   1b3d4:	mov	r1, sl
   1b3d8:	mov	r4, r0
   1b3dc:	ldr	r0, [r0]
   1b3e0:	mov	r2, r9
   1b3e4:	sub	r3, r0, #1
   1b3e8:	mov	r0, r8
   1b3ec:	bl	2690 <InflateSkipData>
   1b3f0:	ldr	r0, [fp, #28]
   1b3f4:	ldr	r4, [r4]
   1b3f8:	mov	r1, sl
   1b3fc:	mov	r3, r9
   1b400:	ldr	r5, [r0]
   1b404:	mov	r0, #1
   1b408:	str	r0, [sp]
   1b40c:	ldr	r0, [sp, #44]	; 0x2c
   1b410:	add	r2, r0, r6
   1b414:	mov	r0, r8
   1b418:	bl	1340c <ReadCompressedInt8Data>
   1b41c:	add	r6, r6, #1
   1b420:	sub	r0, r5, #1
   1b424:	add	r7, r4, r7
   1b428:	cmp	r6, r0
   1b42c:	blt	1b3c4 <ReadCompressedDataSlabN+0x24d4>
   1b430:	b	1b438 <ReadCompressedDataSlabN+0x2548>
   1b434:	ldr	r7, [sp, #28]
   1b438:	ldr	r2, [fp, #28]
   1b43c:	ldr	r0, [fp, #16]
   1b440:	ldr	r1, [fp, #24]
   1b444:	ldr	sl, [sp, #52]	; 0x34
   1b448:	ldr	r2, [r2]
   1b44c:	ldr	r0, [r0]
   1b450:	ldr	r1, [r1]
   1b454:	sub	r2, r2, #1
   1b458:	mls	r0, r2, r1, r0
   1b45c:	ldr	r1, [fp, #20]
   1b460:	ldr	r2, [fp, #8]
   1b464:	ldr	r1, [r1]
   1b468:	sub	r4, r0, r1
   1b46c:	mov	r0, sl
   1b470:	add	r1, sp, #56	; 0x38
   1b474:	sub	r3, r4, #1
   1b478:	bl	2690 <InflateSkipData>
   1b47c:	ldr	r0, [fp, #12]
   1b480:	add	r7, r4, r7
   1b484:	cmp	r0, #2
   1b488:	blt	1b5a4 <ReadCompressedDataSlabN+0x26b4>
   1b48c:	ldr	r4, [sp, #12]
   1b490:	ldr	r5, [sp, #16]
   1b494:	ldr	r3, [sp, #36]	; 0x24
   1b498:	ldr	r6, [sp, #32]
   1b49c:	mov	r9, #0
   1b4a0:	add	r8, sp, #112	; 0x70
   1b4a4:	ldr	r0, [r5, r9]
   1b4a8:	ldr	r1, [sp, #40]	; 0x28
   1b4ac:	add	r0, r0, #1
   1b4b0:	str	r0, [r5, r9]
   1b4b4:	ldr	r1, [r1, r9]
   1b4b8:	sdiv	r2, r0, r1
   1b4bc:	mls	r0, r2, r1, r0
   1b4c0:	cmp	r0, #0
   1b4c4:	bne	1b57c <ReadCompressedDataSlabN+0x268c>
   1b4c8:	mov	r0, #0
   1b4cc:	str	r0, [r5, r9]
   1b4d0:	ldr	r0, [r3, r9]
   1b4d4:	sdiv	r1, r7, r0
   1b4d8:	mls	r1, r1, r0, r7
   1b4dc:	cmp	r1, #0
   1b4e0:	beq	1b534 <ReadCompressedDataSlabN+0x2644>
   1b4e4:	ldr	r2, [r8, r9]
   1b4e8:	ldr	r3, [r6, r9]
   1b4ec:	sub	r0, r0, r1
   1b4f0:	add	r1, sp, #56	; 0x38
   1b4f4:	mla	r3, r3, r2, r0
   1b4f8:	ldr	r2, [fp, #8]
   1b4fc:	mov	r0, sl
   1b500:	bl	2690 <InflateSkipData>
   1b504:	ldr	r3, [sp, #36]	; 0x24
   1b508:	ldr	r6, [sp, #32]
   1b50c:	ldr	r0, [r3, r9]
   1b510:	ldr	r2, [r6, r9]
   1b514:	sdiv	r1, r7, r0
   1b518:	mul	r1, r1, r0
   1b51c:	add	r0, r0, r7
   1b520:	sub	r1, r1, r7
   1b524:	add	r0, r0, r1
   1b528:	ldr	r1, [r8, r9]
   1b52c:	mla	r7, r2, r1, r0
   1b530:	b	1b56c <ReadCompressedDataSlabN+0x267c>
   1b534:	ldr	r0, [r6, r9]
   1b538:	cmp	r0, #0
   1b53c:	beq	1b56c <ReadCompressedDataSlabN+0x267c>
   1b540:	ldr	r1, [r8, r9]
   1b544:	ldr	r2, [fp, #8]
   1b548:	mul	r3, r1, r0
   1b54c:	mov	r0, sl
   1b550:	add	r1, sp, #56	; 0x38
   1b554:	bl	2690 <InflateSkipData>
   1b558:	ldr	r6, [sp, #32]
   1b55c:	ldr	r0, [r8, r9]
   1b560:	ldr	r3, [sp, #36]	; 0x24
   1b564:	ldr	r1, [r6, r9]
   1b568:	mla	r7, r1, r0, r7
   1b56c:	subs	r4, r4, #1
   1b570:	add	r9, r9, #4
   1b574:	bne	1b4a4 <ReadCompressedDataSlabN+0x25b4>
   1b578:	b	1b5a4 <ReadCompressedDataSlabN+0x26b4>
   1b57c:	ldr	r0, [sp, #4]
   1b580:	ldr	r4, [r0, r9]
   1b584:	cmp	r4, #0
   1b588:	beq	1b5a4 <ReadCompressedDataSlabN+0x26b4>
   1b58c:	ldr	r2, [fp, #8]
   1b590:	mov	r0, sl
   1b594:	add	r1, sp, #56	; 0x38
   1b598:	mov	r3, r4
   1b59c:	bl	2690 <InflateSkipData>
   1b5a0:	add	r7, r4, r7
   1b5a4:	ldr	r0, [fp, #28]
   1b5a8:	ldr	r4, [sp, #20]
   1b5ac:	ldr	r9, [fp, #20]
   1b5b0:	str	r7, [sp, #28]
   1b5b4:	mov	sl, #1
   1b5b8:	add	r7, sp, #56	; 0x38
   1b5bc:	ldr	r0, [r0]
   1b5c0:	add	r4, r0, r4
   1b5c4:	ldr	r0, [sp, #24]
   1b5c8:	cmp	r4, r0
   1b5cc:	blt	1b33c <ReadCompressedDataSlabN+0x244c>
   1b5d0:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b5d4:	ldr	r0, [sp, #24]
   1b5d8:	sub	r1, fp, #72	; 0x48
   1b5dc:	cmp	r0, #1
   1b5e0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b5e4:	sub	r0, fp, #112	; 0x70
   1b5e8:	add	r6, sl, #4
   1b5ec:	mov	r9, sl
   1b5f0:	mov	sl, #1
   1b5f4:	add	r7, sp, #56	; 0x38
   1b5f8:	mov	r4, #0
   1b5fc:	orr	r5, r0, #4
   1b600:	ldr	r0, [fp, #28]
   1b604:	str	r6, [sp, #32]
   1b608:	str	r5, [sp, #16]
   1b60c:	add	r0, r0, #4
   1b610:	str	r0, [sp, #40]	; 0x28
   1b614:	add	r0, sp, #112	; 0x70
   1b618:	orr	r3, r0, #4
   1b61c:	ldr	r0, [fp, #12]
   1b620:	str	r3, [sp, #36]	; 0x24
   1b624:	sub	r0, r0, #1
   1b628:	str	r0, [sp, #12]
   1b62c:	orr	r0, r1, #4
   1b630:	str	r0, [sp, #4]
   1b634:	ldr	r0, [sp, #48]	; 0x30
   1b638:	add	r0, r0, #1
   1b63c:	str	r0, [sp, #8]
   1b640:	ldr	r3, [r9]
   1b644:	cmp	r3, #0
   1b648:	beq	1b67c <ReadCompressedDataSlabN+0x278c>
   1b64c:	ldr	r8, [sp, #52]	; 0x34
   1b650:	ldr	r6, [fp, #8]
   1b654:	mov	r1, r7
   1b658:	mov	r0, r8
   1b65c:	mov	r2, r6
   1b660:	bl	2690 <InflateSkipData>
   1b664:	ldr	r0, [r9]
   1b668:	ldr	r1, [sp, #28]
   1b66c:	add	r1, r0, r1
   1b670:	ldr	r0, [fp, #28]
   1b674:	str	r1, [sp, #28]
   1b678:	b	1b688 <ReadCompressedDataSlabN+0x2798>
   1b67c:	ldr	r8, [sp, #52]	; 0x34
   1b680:	ldr	r0, [fp, #28]
   1b684:	ldr	r6, [fp, #8]
   1b688:	ldr	r5, [r0]
   1b68c:	ldr	r0, [sp, #48]	; 0x30
   1b690:	mov	r1, r7
   1b694:	mov	r3, r6
   1b698:	str	sl, [sp]
   1b69c:	add	r2, r0, r4
   1b6a0:	mov	r0, r8
   1b6a4:	bl	14eb8 <ReadCompressedUInt8Data>
   1b6a8:	cmp	r5, #2
   1b6ac:	str	r4, [sp, #20]
   1b6b0:	blt	1b738 <ReadCompressedDataSlabN+0x2848>
   1b6b4:	ldr	r0, [sp, #8]
   1b6b8:	ldr	r7, [sp, #28]
   1b6bc:	mov	r6, #0
   1b6c0:	add	r0, r0, r4
   1b6c4:	str	r0, [sp, #44]	; 0x2c
   1b6c8:	ldr	r0, [fp, #24]
   1b6cc:	ldr	r9, [fp, #8]
   1b6d0:	ldr	r8, [sp, #52]	; 0x34
   1b6d4:	add	sl, sp, #56	; 0x38
   1b6d8:	mov	r1, sl
   1b6dc:	mov	r4, r0
   1b6e0:	ldr	r0, [r0]
   1b6e4:	mov	r2, r9
   1b6e8:	sub	r3, r0, #1
   1b6ec:	mov	r0, r8
   1b6f0:	bl	2690 <InflateSkipData>
   1b6f4:	ldr	r0, [fp, #28]
   1b6f8:	ldr	r4, [r4]
   1b6fc:	mov	r1, sl
   1b700:	mov	r3, r9
   1b704:	ldr	r5, [r0]
   1b708:	mov	r0, #1
   1b70c:	str	r0, [sp]
   1b710:	ldr	r0, [sp, #44]	; 0x2c
   1b714:	add	r2, r0, r6
   1b718:	mov	r0, r8
   1b71c:	bl	14eb8 <ReadCompressedUInt8Data>
   1b720:	add	r6, r6, #1
   1b724:	sub	r0, r5, #1
   1b728:	add	r7, r4, r7
   1b72c:	cmp	r6, r0
   1b730:	blt	1b6c8 <ReadCompressedDataSlabN+0x27d8>
   1b734:	b	1b73c <ReadCompressedDataSlabN+0x284c>
   1b738:	ldr	r7, [sp, #28]
   1b73c:	ldr	r2, [fp, #28]
   1b740:	ldr	r0, [fp, #16]
   1b744:	ldr	r1, [fp, #24]
   1b748:	ldr	sl, [sp, #52]	; 0x34
   1b74c:	ldr	r2, [r2]
   1b750:	ldr	r0, [r0]
   1b754:	ldr	r1, [r1]
   1b758:	sub	r2, r2, #1
   1b75c:	mls	r0, r2, r1, r0
   1b760:	ldr	r1, [fp, #20]
   1b764:	ldr	r2, [fp, #8]
   1b768:	ldr	r1, [r1]
   1b76c:	sub	r4, r0, r1
   1b770:	mov	r0, sl
   1b774:	add	r1, sp, #56	; 0x38
   1b778:	sub	r3, r4, #1
   1b77c:	bl	2690 <InflateSkipData>
   1b780:	ldr	r0, [fp, #12]
   1b784:	add	r7, r4, r7
   1b788:	cmp	r0, #2
   1b78c:	blt	1b8a8 <ReadCompressedDataSlabN+0x29b8>
   1b790:	ldr	r4, [sp, #12]
   1b794:	ldr	r5, [sp, #16]
   1b798:	ldr	r3, [sp, #36]	; 0x24
   1b79c:	ldr	r6, [sp, #32]
   1b7a0:	mov	r9, #0
   1b7a4:	add	r8, sp, #112	; 0x70
   1b7a8:	ldr	r0, [r5, r9]
   1b7ac:	ldr	r1, [sp, #40]	; 0x28
   1b7b0:	add	r0, r0, #1
   1b7b4:	str	r0, [r5, r9]
   1b7b8:	ldr	r1, [r1, r9]
   1b7bc:	sdiv	r2, r0, r1
   1b7c0:	mls	r0, r2, r1, r0
   1b7c4:	cmp	r0, #0
   1b7c8:	bne	1b880 <ReadCompressedDataSlabN+0x2990>
   1b7cc:	mov	r0, #0
   1b7d0:	str	r0, [r5, r9]
   1b7d4:	ldr	r0, [r3, r9]
   1b7d8:	sdiv	r1, r7, r0
   1b7dc:	mls	r1, r1, r0, r7
   1b7e0:	cmp	r1, #0
   1b7e4:	beq	1b838 <ReadCompressedDataSlabN+0x2948>
   1b7e8:	ldr	r2, [r8, r9]
   1b7ec:	ldr	r3, [r6, r9]
   1b7f0:	sub	r0, r0, r1
   1b7f4:	add	r1, sp, #56	; 0x38
   1b7f8:	mla	r3, r3, r2, r0
   1b7fc:	ldr	r2, [fp, #8]
   1b800:	mov	r0, sl
   1b804:	bl	2690 <InflateSkipData>
   1b808:	ldr	r3, [sp, #36]	; 0x24
   1b80c:	ldr	r6, [sp, #32]
   1b810:	ldr	r0, [r3, r9]
   1b814:	ldr	r2, [r6, r9]
   1b818:	sdiv	r1, r7, r0
   1b81c:	mul	r1, r1, r0
   1b820:	add	r0, r0, r7
   1b824:	sub	r1, r1, r7
   1b828:	add	r0, r0, r1
   1b82c:	ldr	r1, [r8, r9]
   1b830:	mla	r7, r2, r1, r0
   1b834:	b	1b870 <ReadCompressedDataSlabN+0x2980>
   1b838:	ldr	r0, [r6, r9]
   1b83c:	cmp	r0, #0
   1b840:	beq	1b870 <ReadCompressedDataSlabN+0x2980>
   1b844:	ldr	r1, [r8, r9]
   1b848:	ldr	r2, [fp, #8]
   1b84c:	mul	r3, r1, r0
   1b850:	mov	r0, sl
   1b854:	add	r1, sp, #56	; 0x38
   1b858:	bl	2690 <InflateSkipData>
   1b85c:	ldr	r6, [sp, #32]
   1b860:	ldr	r0, [r8, r9]
   1b864:	ldr	r3, [sp, #36]	; 0x24
   1b868:	ldr	r1, [r6, r9]
   1b86c:	mla	r7, r1, r0, r7
   1b870:	subs	r4, r4, #1
   1b874:	add	r9, r9, #4
   1b878:	bne	1b7a8 <ReadCompressedDataSlabN+0x28b8>
   1b87c:	b	1b8a8 <ReadCompressedDataSlabN+0x29b8>
   1b880:	ldr	r0, [sp, #4]
   1b884:	ldr	r4, [r0, r9]
   1b888:	cmp	r4, #0
   1b88c:	beq	1b8a8 <ReadCompressedDataSlabN+0x29b8>
   1b890:	ldr	r2, [fp, #8]
   1b894:	mov	r0, sl
   1b898:	add	r1, sp, #56	; 0x38
   1b89c:	mov	r3, r4
   1b8a0:	bl	2690 <InflateSkipData>
   1b8a4:	add	r7, r4, r7
   1b8a8:	ldr	r0, [fp, #28]
   1b8ac:	ldr	r4, [sp, #20]
   1b8b0:	ldr	r9, [fp, #20]
   1b8b4:	str	r7, [sp, #28]
   1b8b8:	mov	sl, #1
   1b8bc:	add	r7, sp, #56	; 0x38
   1b8c0:	ldr	r0, [r0]
   1b8c4:	add	r4, r0, r4
   1b8c8:	ldr	r0, [sp, #24]
   1b8cc:	cmp	r4, r0
   1b8d0:	blt	1b640 <ReadCompressedDataSlabN+0x2750>
   1b8d4:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b8d8:	ldr	r0, [sp, #32]
   1b8dc:	cmp	r0, #1
   1b8e0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1b8e4:	sub	r0, fp, #112	; 0x70
   1b8e8:	add	r5, sl, #4
   1b8ec:	mov	r9, sl
   1b8f0:	mov	sl, #1
   1b8f4:	add	r4, sp, #56	; 0x38
   1b8f8:	orr	r7, r0, #4
   1b8fc:	ldr	r0, [fp, #28]
   1b900:	str	r5, [sp, #36]	; 0x24
   1b904:	str	r7, [sp, #20]
   1b908:	add	r0, r0, #4
   1b90c:	str	r0, [sp, #44]	; 0x2c
   1b910:	add	r0, sp, #112	; 0x70
   1b914:	orr	r3, r0, #4
   1b918:	ldr	r0, [fp, #12]
   1b91c:	str	r3, [sp, #40]	; 0x28
   1b920:	sub	r0, r0, #1
   1b924:	str	r0, [sp, #16]
   1b928:	orr	r0, r6, #4
   1b92c:	str	r0, [sp, #8]
   1b930:	ldr	r0, [sp, #48]	; 0x30
   1b934:	add	r0, r0, #2
   1b938:	str	r0, [sp, #12]
   1b93c:	mov	r0, #0
   1b940:	str	r0, [sp, #28]
   1b944:	ldr	r3, [r9]
   1b948:	cmp	r3, #0
   1b94c:	beq	1b978 <ReadCompressedDataSlabN+0x2a88>
   1b950:	ldr	r5, [sp, #52]	; 0x34
   1b954:	ldr	r6, [fp, #8]
   1b958:	mov	r1, r4
   1b95c:	mov	r0, r5
   1b960:	mov	r2, r6
   1b964:	bl	2690 <InflateSkipData>
   1b968:	ldr	r0, [r9]
   1b96c:	ldr	r9, [fp, #28]
   1b970:	add	r8, r0, r8
   1b974:	b	1b984 <ReadCompressedDataSlabN+0x2a94>
   1b978:	ldr	r5, [sp, #52]	; 0x34
   1b97c:	ldr	r9, [fp, #28]
   1b980:	ldr	r6, [fp, #8]
   1b984:	ldr	r0, [sp, #48]	; 0x30
   1b988:	ldr	r7, [sp, #28]
   1b98c:	str	r8, [sp, #24]
   1b990:	ldr	r8, [r9]
   1b994:	mov	r1, r4
   1b998:	mov	r3, r6
   1b99c:	str	sl, [sp]
   1b9a0:	add	r2, r0, r7, lsl #1
   1b9a4:	mov	r0, r5
   1b9a8:	bl	feec <ReadCompressedInt16Data>
   1b9ac:	cmp	r8, #2
   1b9b0:	blt	1ba34 <ReadCompressedDataSlabN+0x2b44>
   1b9b4:	ldr	r0, [sp, #12]
   1b9b8:	ldr	r8, [sp, #24]
   1b9bc:	mov	r4, #0
   1b9c0:	add	r6, r0, r7, lsl #1
   1b9c4:	ldr	r0, [fp, #24]
   1b9c8:	mov	r5, r9
   1b9cc:	ldr	sl, [fp, #8]
   1b9d0:	ldr	r7, [sp, #52]	; 0x34
   1b9d4:	add	r1, sp, #56	; 0x38
   1b9d8:	mov	r9, r0
   1b9dc:	ldr	r0, [r0]
   1b9e0:	mov	r2, sl
   1b9e4:	sub	r3, r0, #1
   1b9e8:	mov	r0, r7
   1b9ec:	bl	2690 <InflateSkipData>
   1b9f0:	ldr	r5, [r5]
   1b9f4:	ldr	r9, [r9]
   1b9f8:	mov	r0, #1
   1b9fc:	add	r1, sp, #56	; 0x38
   1ba00:	mov	r2, r6
   1ba04:	mov	r3, sl
   1ba08:	str	r0, [sp]
   1ba0c:	mov	r0, r7
   1ba10:	bl	feec <ReadCompressedInt16Data>
   1ba14:	add	r8, r9, r8
   1ba18:	ldr	r9, [fp, #28]
   1ba1c:	add	r4, r4, #1
   1ba20:	sub	r0, r5, #1
   1ba24:	add	r6, r6, #2
   1ba28:	cmp	r4, r0
   1ba2c:	blt	1b9c4 <ReadCompressedDataSlabN+0x2ad4>
   1ba30:	b	1ba38 <ReadCompressedDataSlabN+0x2b48>
   1ba34:	ldr	r8, [sp, #24]
   1ba38:	ldr	r0, [fp, #16]
   1ba3c:	ldr	r1, [fp, #24]
   1ba40:	ldr	r2, [r9]
   1ba44:	ldr	r0, [r0]
   1ba48:	ldr	r1, [r1]
   1ba4c:	sub	r2, r2, #1
   1ba50:	mls	r0, r2, r1, r0
   1ba54:	ldr	r1, [fp, #20]
   1ba58:	ldr	r2, [fp, #8]
   1ba5c:	ldr	r1, [r1]
   1ba60:	sub	r4, r0, r1
   1ba64:	ldr	r0, [sp, #52]	; 0x34
   1ba68:	add	r1, sp, #56	; 0x38
   1ba6c:	sub	r3, r4, #1
   1ba70:	bl	2690 <InflateSkipData>
   1ba74:	ldr	r0, [fp, #12]
   1ba78:	add	r8, r4, r8
   1ba7c:	cmp	r0, #2
   1ba80:	blt	1bb9c <ReadCompressedDataSlabN+0x2cac>
   1ba84:	ldr	r4, [sp, #16]
   1ba88:	ldr	r7, [sp, #20]
   1ba8c:	ldr	r3, [sp, #40]	; 0x28
   1ba90:	ldr	r5, [sp, #36]	; 0x24
   1ba94:	mov	r6, #0
   1ba98:	add	sl, sp, #112	; 0x70
   1ba9c:	ldr	r0, [r7, r6]
   1baa0:	ldr	r1, [sp, #44]	; 0x2c
   1baa4:	add	r0, r0, #1
   1baa8:	str	r0, [r7, r6]
   1baac:	ldr	r1, [r1, r6]
   1bab0:	sdiv	r2, r0, r1
   1bab4:	mls	r0, r2, r1, r0
   1bab8:	cmp	r0, #0
   1babc:	bne	1bb74 <ReadCompressedDataSlabN+0x2c84>
   1bac0:	mov	r0, #0
   1bac4:	str	r0, [r7, r6]
   1bac8:	ldr	r0, [r3, r6]
   1bacc:	sdiv	r1, r8, r0
   1bad0:	mls	r1, r1, r0, r8
   1bad4:	cmp	r1, #0
   1bad8:	beq	1bb2c <ReadCompressedDataSlabN+0x2c3c>
   1badc:	ldr	r2, [sl, r6]
   1bae0:	ldr	r3, [r5, r6]
   1bae4:	sub	r0, r0, r1
   1bae8:	add	r1, sp, #56	; 0x38
   1baec:	mla	r3, r3, r2, r0
   1baf0:	ldr	r0, [sp, #52]	; 0x34
   1baf4:	ldr	r2, [fp, #8]
   1baf8:	bl	2690 <InflateSkipData>
   1bafc:	ldr	r3, [sp, #40]	; 0x28
   1bb00:	ldr	r5, [sp, #36]	; 0x24
   1bb04:	ldr	r0, [r3, r6]
   1bb08:	ldr	r2, [r5, r6]
   1bb0c:	sdiv	r1, r8, r0
   1bb10:	mul	r1, r1, r0
   1bb14:	add	r0, r0, r8
   1bb18:	sub	r1, r1, r8
   1bb1c:	add	r0, r0, r1
   1bb20:	ldr	r1, [sl, r6]
   1bb24:	mla	r8, r2, r1, r0
   1bb28:	b	1bb64 <ReadCompressedDataSlabN+0x2c74>
   1bb2c:	ldr	r0, [r5, r6]
   1bb30:	cmp	r0, #0
   1bb34:	beq	1bb64 <ReadCompressedDataSlabN+0x2c74>
   1bb38:	ldr	r1, [sl, r6]
   1bb3c:	ldr	r2, [fp, #8]
   1bb40:	mul	r3, r1, r0
   1bb44:	ldr	r0, [sp, #52]	; 0x34
   1bb48:	add	r1, sp, #56	; 0x38
   1bb4c:	bl	2690 <InflateSkipData>
   1bb50:	ldr	r5, [sp, #36]	; 0x24
   1bb54:	ldr	r0, [sl, r6]
   1bb58:	ldr	r3, [sp, #40]	; 0x28
   1bb5c:	ldr	r1, [r5, r6]
   1bb60:	mla	r8, r1, r0, r8
   1bb64:	subs	r4, r4, #1
   1bb68:	add	r6, r6, #4
   1bb6c:	bne	1ba9c <ReadCompressedDataSlabN+0x2bac>
   1bb70:	b	1bb9c <ReadCompressedDataSlabN+0x2cac>
   1bb74:	ldr	r0, [sp, #8]
   1bb78:	ldr	r6, [r0, r6]
   1bb7c:	cmp	r6, #0
   1bb80:	beq	1bb9c <ReadCompressedDataSlabN+0x2cac>
   1bb84:	ldr	r0, [sp, #52]	; 0x34
   1bb88:	ldr	r2, [fp, #8]
   1bb8c:	add	r1, sp, #56	; 0x38
   1bb90:	mov	r3, r6
   1bb94:	bl	2690 <InflateSkipData>
   1bb98:	add	r8, r6, r8
   1bb9c:	ldr	r0, [r9]
   1bba0:	ldr	r1, [sp, #28]
   1bba4:	ldr	r9, [fp, #20]
   1bba8:	mov	sl, #1
   1bbac:	add	r4, sp, #56	; 0x38
   1bbb0:	add	r1, r0, r1
   1bbb4:	ldr	r0, [sp, #32]
   1bbb8:	str	r1, [sp, #28]
   1bbbc:	cmp	r1, r0
   1bbc0:	blt	1b944 <ReadCompressedDataSlabN+0x2a54>
   1bbc4:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1bbc8:	ldr	r0, [sp, #32]
   1bbcc:	cmp	r0, #1
   1bbd0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1bbd4:	sub	r0, fp, #112	; 0x70
   1bbd8:	add	r5, sl, #4
   1bbdc:	mov	r9, sl
   1bbe0:	mov	sl, #1
   1bbe4:	add	r4, sp, #56	; 0x38
   1bbe8:	orr	r7, r0, #4
   1bbec:	ldr	r0, [fp, #28]
   1bbf0:	str	r5, [sp, #36]	; 0x24
   1bbf4:	str	r7, [sp, #20]
   1bbf8:	add	r0, r0, #4
   1bbfc:	str	r0, [sp, #44]	; 0x2c
   1bc00:	add	r0, sp, #112	; 0x70
   1bc04:	orr	r3, r0, #4
   1bc08:	ldr	r0, [fp, #12]
   1bc0c:	str	r3, [sp, #40]	; 0x28
   1bc10:	sub	r0, r0, #1
   1bc14:	str	r0, [sp, #16]
   1bc18:	orr	r0, r6, #4
   1bc1c:	str	r0, [sp, #8]
   1bc20:	ldr	r0, [sp, #48]	; 0x30
   1bc24:	add	r0, r0, #2
   1bc28:	str	r0, [sp, #12]
   1bc2c:	mov	r0, #0
   1bc30:	str	r0, [sp, #28]
   1bc34:	ldr	r3, [r9]
   1bc38:	cmp	r3, #0
   1bc3c:	beq	1bc68 <ReadCompressedDataSlabN+0x2d78>
   1bc40:	ldr	r5, [sp, #52]	; 0x34
   1bc44:	ldr	r6, [fp, #8]
   1bc48:	mov	r1, r4
   1bc4c:	mov	r0, r5
   1bc50:	mov	r2, r6
   1bc54:	bl	2690 <InflateSkipData>
   1bc58:	ldr	r0, [r9]
   1bc5c:	ldr	r9, [fp, #28]
   1bc60:	add	r8, r0, r8
   1bc64:	b	1bc74 <ReadCompressedDataSlabN+0x2d84>
   1bc68:	ldr	r5, [sp, #52]	; 0x34
   1bc6c:	ldr	r9, [fp, #28]
   1bc70:	ldr	r6, [fp, #8]
   1bc74:	ldr	r0, [sp, #48]	; 0x30
   1bc78:	ldr	r7, [sp, #28]
   1bc7c:	str	r8, [sp, #24]
   1bc80:	ldr	r8, [r9]
   1bc84:	mov	r1, r4
   1bc88:	mov	r3, r6
   1bc8c:	str	sl, [sp]
   1bc90:	add	r2, r0, r7, lsl #1
   1bc94:	mov	r0, r5
   1bc98:	bl	11960 <ReadCompressedUInt16Data>
   1bc9c:	cmp	r8, #2
   1bca0:	blt	1bd24 <ReadCompressedDataSlabN+0x2e34>
   1bca4:	ldr	r0, [sp, #12]
   1bca8:	ldr	r8, [sp, #24]
   1bcac:	mov	r4, #0
   1bcb0:	add	r6, r0, r7, lsl #1
   1bcb4:	ldr	r0, [fp, #24]
   1bcb8:	mov	r5, r9
   1bcbc:	ldr	sl, [fp, #8]
   1bcc0:	ldr	r7, [sp, #52]	; 0x34
   1bcc4:	add	r1, sp, #56	; 0x38
   1bcc8:	mov	r9, r0
   1bccc:	ldr	r0, [r0]
   1bcd0:	mov	r2, sl
   1bcd4:	sub	r3, r0, #1
   1bcd8:	mov	r0, r7
   1bcdc:	bl	2690 <InflateSkipData>
   1bce0:	ldr	r5, [r5]
   1bce4:	ldr	r9, [r9]
   1bce8:	mov	r0, #1
   1bcec:	add	r1, sp, #56	; 0x38
   1bcf0:	mov	r2, r6
   1bcf4:	mov	r3, sl
   1bcf8:	str	r0, [sp]
   1bcfc:	mov	r0, r7
   1bd00:	bl	11960 <ReadCompressedUInt16Data>
   1bd04:	add	r8, r9, r8
   1bd08:	ldr	r9, [fp, #28]
   1bd0c:	add	r4, r4, #1
   1bd10:	sub	r0, r5, #1
   1bd14:	add	r6, r6, #2
   1bd18:	cmp	r4, r0
   1bd1c:	blt	1bcb4 <ReadCompressedDataSlabN+0x2dc4>
   1bd20:	b	1bd28 <ReadCompressedDataSlabN+0x2e38>
   1bd24:	ldr	r8, [sp, #24]
   1bd28:	ldr	r0, [fp, #16]
   1bd2c:	ldr	r1, [fp, #24]
   1bd30:	ldr	r2, [r9]
   1bd34:	ldr	r0, [r0]
   1bd38:	ldr	r1, [r1]
   1bd3c:	sub	r2, r2, #1
   1bd40:	mls	r0, r2, r1, r0
   1bd44:	ldr	r1, [fp, #20]
   1bd48:	ldr	r2, [fp, #8]
   1bd4c:	ldr	r1, [r1]
   1bd50:	sub	r4, r0, r1
   1bd54:	ldr	r0, [sp, #52]	; 0x34
   1bd58:	add	r1, sp, #56	; 0x38
   1bd5c:	sub	r3, r4, #1
   1bd60:	bl	2690 <InflateSkipData>
   1bd64:	ldr	r0, [fp, #12]
   1bd68:	add	r8, r4, r8
   1bd6c:	cmp	r0, #2
   1bd70:	blt	1be8c <ReadCompressedDataSlabN+0x2f9c>
   1bd74:	ldr	r4, [sp, #16]
   1bd78:	ldr	r7, [sp, #20]
   1bd7c:	ldr	r3, [sp, #40]	; 0x28
   1bd80:	ldr	r5, [sp, #36]	; 0x24
   1bd84:	mov	r6, #0
   1bd88:	add	sl, sp, #112	; 0x70
   1bd8c:	ldr	r0, [r7, r6]
   1bd90:	ldr	r1, [sp, #44]	; 0x2c
   1bd94:	add	r0, r0, #1
   1bd98:	str	r0, [r7, r6]
   1bd9c:	ldr	r1, [r1, r6]
   1bda0:	sdiv	r2, r0, r1
   1bda4:	mls	r0, r2, r1, r0
   1bda8:	cmp	r0, #0
   1bdac:	bne	1be64 <ReadCompressedDataSlabN+0x2f74>
   1bdb0:	mov	r0, #0
   1bdb4:	str	r0, [r7, r6]
   1bdb8:	ldr	r0, [r3, r6]
   1bdbc:	sdiv	r1, r8, r0
   1bdc0:	mls	r1, r1, r0, r8
   1bdc4:	cmp	r1, #0
   1bdc8:	beq	1be1c <ReadCompressedDataSlabN+0x2f2c>
   1bdcc:	ldr	r2, [sl, r6]
   1bdd0:	ldr	r3, [r5, r6]
   1bdd4:	sub	r0, r0, r1
   1bdd8:	add	r1, sp, #56	; 0x38
   1bddc:	mla	r3, r3, r2, r0
   1bde0:	ldr	r0, [sp, #52]	; 0x34
   1bde4:	ldr	r2, [fp, #8]
   1bde8:	bl	2690 <InflateSkipData>
   1bdec:	ldr	r3, [sp, #40]	; 0x28
   1bdf0:	ldr	r5, [sp, #36]	; 0x24
   1bdf4:	ldr	r0, [r3, r6]
   1bdf8:	ldr	r2, [r5, r6]
   1bdfc:	sdiv	r1, r8, r0
   1be00:	mul	r1, r1, r0
   1be04:	add	r0, r0, r8
   1be08:	sub	r1, r1, r8
   1be0c:	add	r0, r0, r1
   1be10:	ldr	r1, [sl, r6]
   1be14:	mla	r8, r2, r1, r0
   1be18:	b	1be54 <ReadCompressedDataSlabN+0x2f64>
   1be1c:	ldr	r0, [r5, r6]
   1be20:	cmp	r0, #0
   1be24:	beq	1be54 <ReadCompressedDataSlabN+0x2f64>
   1be28:	ldr	r1, [sl, r6]
   1be2c:	ldr	r2, [fp, #8]
   1be30:	mul	r3, r1, r0
   1be34:	ldr	r0, [sp, #52]	; 0x34
   1be38:	add	r1, sp, #56	; 0x38
   1be3c:	bl	2690 <InflateSkipData>
   1be40:	ldr	r5, [sp, #36]	; 0x24
   1be44:	ldr	r0, [sl, r6]
   1be48:	ldr	r3, [sp, #40]	; 0x28
   1be4c:	ldr	r1, [r5, r6]
   1be50:	mla	r8, r1, r0, r8
   1be54:	subs	r4, r4, #1
   1be58:	add	r6, r6, #4
   1be5c:	bne	1bd8c <ReadCompressedDataSlabN+0x2e9c>
   1be60:	b	1be8c <ReadCompressedDataSlabN+0x2f9c>
   1be64:	ldr	r0, [sp, #8]
   1be68:	ldr	r6, [r0, r6]
   1be6c:	cmp	r6, #0
   1be70:	beq	1be8c <ReadCompressedDataSlabN+0x2f9c>
   1be74:	ldr	r0, [sp, #52]	; 0x34
   1be78:	ldr	r2, [fp, #8]
   1be7c:	add	r1, sp, #56	; 0x38
   1be80:	mov	r3, r6
   1be84:	bl	2690 <InflateSkipData>
   1be88:	add	r8, r6, r8
   1be8c:	ldr	r0, [r9]
   1be90:	ldr	r1, [sp, #28]
   1be94:	ldr	r9, [fp, #20]
   1be98:	mov	sl, #1
   1be9c:	add	r4, sp, #56	; 0x38
   1bea0:	add	r1, r0, r1
   1bea4:	ldr	r0, [sp, #32]
   1bea8:	str	r1, [sp, #28]
   1beac:	cmp	r1, r0
   1beb0:	blt	1bc34 <ReadCompressedDataSlabN+0x2d44>
   1beb4:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1beb8:	ldr	r0, [sp, #32]
   1bebc:	cmp	r0, #1
   1bec0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1bec4:	sub	r0, fp, #112	; 0x70
   1bec8:	add	r5, sl, #4
   1becc:	mov	r9, sl
   1bed0:	mov	sl, #1
   1bed4:	add	r4, sp, #56	; 0x38
   1bed8:	orr	r7, r0, #4
   1bedc:	ldr	r0, [fp, #28]
   1bee0:	str	r5, [sp, #36]	; 0x24
   1bee4:	str	r7, [sp, #20]
   1bee8:	add	r0, r0, #4
   1beec:	str	r0, [sp, #44]	; 0x2c
   1bef0:	add	r0, sp, #112	; 0x70
   1bef4:	orr	r3, r0, #4
   1bef8:	ldr	r0, [fp, #12]
   1befc:	str	r3, [sp, #40]	; 0x28
   1bf00:	sub	r0, r0, #1
   1bf04:	str	r0, [sp, #16]
   1bf08:	orr	r0, r6, #4
   1bf0c:	str	r0, [sp, #8]
   1bf10:	ldr	r0, [sp, #48]	; 0x30
   1bf14:	add	r0, r0, #4
   1bf18:	str	r0, [sp, #12]
   1bf1c:	mov	r0, #0
   1bf20:	str	r0, [sp, #28]
   1bf24:	ldr	r3, [r9]
   1bf28:	cmp	r3, #0
   1bf2c:	beq	1bf58 <ReadCompressedDataSlabN+0x3068>
   1bf30:	ldr	r5, [sp, #52]	; 0x34
   1bf34:	ldr	r6, [fp, #8]
   1bf38:	mov	r1, r4
   1bf3c:	mov	r0, r5
   1bf40:	mov	r2, r6
   1bf44:	bl	2690 <InflateSkipData>
   1bf48:	ldr	r0, [r9]
   1bf4c:	ldr	r9, [fp, #28]
   1bf50:	add	r8, r0, r8
   1bf54:	b	1bf64 <ReadCompressedDataSlabN+0x3074>
   1bf58:	ldr	r5, [sp, #52]	; 0x34
   1bf5c:	ldr	r9, [fp, #28]
   1bf60:	ldr	r6, [fp, #8]
   1bf64:	ldr	r0, [sp, #48]	; 0x30
   1bf68:	ldr	r7, [sp, #28]
   1bf6c:	str	r8, [sp, #24]
   1bf70:	ldr	r8, [r9]
   1bf74:	mov	r1, r4
   1bf78:	mov	r3, r6
   1bf7c:	str	sl, [sp]
   1bf80:	add	r2, r0, r7, lsl #2
   1bf84:	mov	r0, r5
   1bf88:	bl	ca14 <ReadCompressedInt32Data>
   1bf8c:	cmp	r8, #2
   1bf90:	blt	1c014 <ReadCompressedDataSlabN+0x3124>
   1bf94:	ldr	r0, [sp, #12]
   1bf98:	ldr	r8, [sp, #24]
   1bf9c:	mov	r4, #0
   1bfa0:	add	r6, r0, r7, lsl #2
   1bfa4:	ldr	r0, [fp, #24]
   1bfa8:	mov	r5, r9
   1bfac:	ldr	sl, [fp, #8]
   1bfb0:	ldr	r7, [sp, #52]	; 0x34
   1bfb4:	add	r1, sp, #56	; 0x38
   1bfb8:	mov	r9, r0
   1bfbc:	ldr	r0, [r0]
   1bfc0:	mov	r2, sl
   1bfc4:	sub	r3, r0, #1
   1bfc8:	mov	r0, r7
   1bfcc:	bl	2690 <InflateSkipData>
   1bfd0:	ldr	r5, [r5]
   1bfd4:	ldr	r9, [r9]
   1bfd8:	mov	r0, #1
   1bfdc:	add	r1, sp, #56	; 0x38
   1bfe0:	mov	r2, r6
   1bfe4:	mov	r3, sl
   1bfe8:	str	r0, [sp]
   1bfec:	mov	r0, r7
   1bff0:	bl	ca14 <ReadCompressedInt32Data>
   1bff4:	add	r8, r9, r8
   1bff8:	ldr	r9, [fp, #28]
   1bffc:	add	r4, r4, #1
   1c000:	sub	r0, r5, #1
   1c004:	add	r6, r6, #4
   1c008:	cmp	r4, r0
   1c00c:	blt	1bfa4 <ReadCompressedDataSlabN+0x30b4>
   1c010:	b	1c018 <ReadCompressedDataSlabN+0x3128>
   1c014:	ldr	r8, [sp, #24]
   1c018:	ldr	r0, [fp, #16]
   1c01c:	ldr	r1, [fp, #24]
   1c020:	ldr	r2, [r9]
   1c024:	ldr	r0, [r0]
   1c028:	ldr	r1, [r1]
   1c02c:	sub	r2, r2, #1
   1c030:	mls	r0, r2, r1, r0
   1c034:	ldr	r1, [fp, #20]
   1c038:	ldr	r2, [fp, #8]
   1c03c:	ldr	r1, [r1]
   1c040:	sub	r4, r0, r1
   1c044:	ldr	r0, [sp, #52]	; 0x34
   1c048:	add	r1, sp, #56	; 0x38
   1c04c:	sub	r3, r4, #1
   1c050:	bl	2690 <InflateSkipData>
   1c054:	ldr	r0, [fp, #12]
   1c058:	add	r8, r4, r8
   1c05c:	cmp	r0, #2
   1c060:	blt	1c17c <ReadCompressedDataSlabN+0x328c>
   1c064:	ldr	r4, [sp, #16]
   1c068:	ldr	r7, [sp, #20]
   1c06c:	ldr	r3, [sp, #40]	; 0x28
   1c070:	ldr	r5, [sp, #36]	; 0x24
   1c074:	mov	r6, #0
   1c078:	add	sl, sp, #112	; 0x70
   1c07c:	ldr	r0, [r7, r6]
   1c080:	ldr	r1, [sp, #44]	; 0x2c
   1c084:	add	r0, r0, #1
   1c088:	str	r0, [r7, r6]
   1c08c:	ldr	r1, [r1, r6]
   1c090:	sdiv	r2, r0, r1
   1c094:	mls	r0, r2, r1, r0
   1c098:	cmp	r0, #0
   1c09c:	bne	1c154 <ReadCompressedDataSlabN+0x3264>
   1c0a0:	mov	r0, #0
   1c0a4:	str	r0, [r7, r6]
   1c0a8:	ldr	r0, [r3, r6]
   1c0ac:	sdiv	r1, r8, r0
   1c0b0:	mls	r1, r1, r0, r8
   1c0b4:	cmp	r1, #0
   1c0b8:	beq	1c10c <ReadCompressedDataSlabN+0x321c>
   1c0bc:	ldr	r2, [sl, r6]
   1c0c0:	ldr	r3, [r5, r6]
   1c0c4:	sub	r0, r0, r1
   1c0c8:	add	r1, sp, #56	; 0x38
   1c0cc:	mla	r3, r3, r2, r0
   1c0d0:	ldr	r0, [sp, #52]	; 0x34
   1c0d4:	ldr	r2, [fp, #8]
   1c0d8:	bl	2690 <InflateSkipData>
   1c0dc:	ldr	r3, [sp, #40]	; 0x28
   1c0e0:	ldr	r5, [sp, #36]	; 0x24
   1c0e4:	ldr	r0, [r3, r6]
   1c0e8:	ldr	r2, [r5, r6]
   1c0ec:	sdiv	r1, r8, r0
   1c0f0:	mul	r1, r1, r0
   1c0f4:	add	r0, r0, r8
   1c0f8:	sub	r1, r1, r8
   1c0fc:	add	r0, r0, r1
   1c100:	ldr	r1, [sl, r6]
   1c104:	mla	r8, r2, r1, r0
   1c108:	b	1c144 <ReadCompressedDataSlabN+0x3254>
   1c10c:	ldr	r0, [r5, r6]
   1c110:	cmp	r0, #0
   1c114:	beq	1c144 <ReadCompressedDataSlabN+0x3254>
   1c118:	ldr	r1, [sl, r6]
   1c11c:	ldr	r2, [fp, #8]
   1c120:	mul	r3, r1, r0
   1c124:	ldr	r0, [sp, #52]	; 0x34
   1c128:	add	r1, sp, #56	; 0x38
   1c12c:	bl	2690 <InflateSkipData>
   1c130:	ldr	r5, [sp, #36]	; 0x24
   1c134:	ldr	r0, [sl, r6]
   1c138:	ldr	r3, [sp, #40]	; 0x28
   1c13c:	ldr	r1, [r5, r6]
   1c140:	mla	r8, r1, r0, r8
   1c144:	subs	r4, r4, #1
   1c148:	add	r6, r6, #4
   1c14c:	bne	1c07c <ReadCompressedDataSlabN+0x318c>
   1c150:	b	1c17c <ReadCompressedDataSlabN+0x328c>
   1c154:	ldr	r0, [sp, #8]
   1c158:	ldr	r6, [r0, r6]
   1c15c:	cmp	r6, #0
   1c160:	beq	1c17c <ReadCompressedDataSlabN+0x328c>
   1c164:	ldr	r0, [sp, #52]	; 0x34
   1c168:	ldr	r2, [fp, #8]
   1c16c:	add	r1, sp, #56	; 0x38
   1c170:	mov	r3, r6
   1c174:	bl	2690 <InflateSkipData>
   1c178:	add	r8, r6, r8
   1c17c:	ldr	r0, [r9]
   1c180:	ldr	r1, [sp, #28]
   1c184:	ldr	r9, [fp, #20]
   1c188:	mov	sl, #1
   1c18c:	add	r4, sp, #56	; 0x38
   1c190:	add	r1, r0, r1
   1c194:	ldr	r0, [sp, #32]
   1c198:	str	r1, [sp, #28]
   1c19c:	cmp	r1, r0
   1c1a0:	blt	1bf24 <ReadCompressedDataSlabN+0x3034>
   1c1a4:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c1a8:	ldr	r0, [sp, #32]
   1c1ac:	cmp	r0, #1
   1c1b0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c1b4:	sub	r0, fp, #112	; 0x70
   1c1b8:	add	r5, sl, #4
   1c1bc:	mov	r9, sl
   1c1c0:	mov	sl, #1
   1c1c4:	add	r4, sp, #56	; 0x38
   1c1c8:	orr	r7, r0, #4
   1c1cc:	ldr	r0, [fp, #28]
   1c1d0:	str	r5, [sp, #36]	; 0x24
   1c1d4:	str	r7, [sp, #20]
   1c1d8:	add	r0, r0, #4
   1c1dc:	str	r0, [sp, #44]	; 0x2c
   1c1e0:	add	r0, sp, #112	; 0x70
   1c1e4:	orr	r3, r0, #4
   1c1e8:	ldr	r0, [fp, #12]
   1c1ec:	str	r3, [sp, #40]	; 0x28
   1c1f0:	sub	r0, r0, #1
   1c1f4:	str	r0, [sp, #16]
   1c1f8:	orr	r0, r6, #4
   1c1fc:	str	r0, [sp, #8]
   1c200:	ldr	r0, [sp, #48]	; 0x30
   1c204:	add	r0, r0, #4
   1c208:	str	r0, [sp, #12]
   1c20c:	mov	r0, #0
   1c210:	str	r0, [sp, #28]
   1c214:	ldr	r3, [r9]
   1c218:	cmp	r3, #0
   1c21c:	beq	1c248 <ReadCompressedDataSlabN+0x3358>
   1c220:	ldr	r5, [sp, #52]	; 0x34
   1c224:	ldr	r6, [fp, #8]
   1c228:	mov	r1, r4
   1c22c:	mov	r0, r5
   1c230:	mov	r2, r6
   1c234:	bl	2690 <InflateSkipData>
   1c238:	ldr	r0, [r9]
   1c23c:	ldr	r9, [fp, #28]
   1c240:	add	r8, r0, r8
   1c244:	b	1c254 <ReadCompressedDataSlabN+0x3364>
   1c248:	ldr	r5, [sp, #52]	; 0x34
   1c24c:	ldr	r9, [fp, #28]
   1c250:	ldr	r6, [fp, #8]
   1c254:	ldr	r0, [sp, #48]	; 0x30
   1c258:	ldr	r7, [sp, #28]
   1c25c:	str	r8, [sp, #24]
   1c260:	ldr	r8, [r9]
   1c264:	mov	r1, r4
   1c268:	mov	r3, r6
   1c26c:	str	sl, [sp]
   1c270:	add	r2, r0, r7, lsl #2
   1c274:	mov	r0, r5
   1c278:	bl	e478 <ReadCompressedUInt32Data>
   1c27c:	cmp	r8, #2
   1c280:	blt	1c304 <ReadCompressedDataSlabN+0x3414>
   1c284:	ldr	r0, [sp, #12]
   1c288:	ldr	r8, [sp, #24]
   1c28c:	mov	r4, #0
   1c290:	add	r6, r0, r7, lsl #2
   1c294:	ldr	r0, [fp, #24]
   1c298:	mov	r5, r9
   1c29c:	ldr	sl, [fp, #8]
   1c2a0:	ldr	r7, [sp, #52]	; 0x34
   1c2a4:	add	r1, sp, #56	; 0x38
   1c2a8:	mov	r9, r0
   1c2ac:	ldr	r0, [r0]
   1c2b0:	mov	r2, sl
   1c2b4:	sub	r3, r0, #1
   1c2b8:	mov	r0, r7
   1c2bc:	bl	2690 <InflateSkipData>
   1c2c0:	ldr	r5, [r5]
   1c2c4:	ldr	r9, [r9]
   1c2c8:	mov	r0, #1
   1c2cc:	add	r1, sp, #56	; 0x38
   1c2d0:	mov	r2, r6
   1c2d4:	mov	r3, sl
   1c2d8:	str	r0, [sp]
   1c2dc:	mov	r0, r7
   1c2e0:	bl	e478 <ReadCompressedUInt32Data>
   1c2e4:	add	r8, r9, r8
   1c2e8:	ldr	r9, [fp, #28]
   1c2ec:	add	r4, r4, #1
   1c2f0:	sub	r0, r5, #1
   1c2f4:	add	r6, r6, #4
   1c2f8:	cmp	r4, r0
   1c2fc:	blt	1c294 <ReadCompressedDataSlabN+0x33a4>
   1c300:	b	1c308 <ReadCompressedDataSlabN+0x3418>
   1c304:	ldr	r8, [sp, #24]
   1c308:	ldr	r0, [fp, #16]
   1c30c:	ldr	r1, [fp, #24]
   1c310:	ldr	r2, [r9]
   1c314:	ldr	r0, [r0]
   1c318:	ldr	r1, [r1]
   1c31c:	sub	r2, r2, #1
   1c320:	mls	r0, r2, r1, r0
   1c324:	ldr	r1, [fp, #20]
   1c328:	ldr	r2, [fp, #8]
   1c32c:	ldr	r1, [r1]
   1c330:	sub	r4, r0, r1
   1c334:	ldr	r0, [sp, #52]	; 0x34
   1c338:	add	r1, sp, #56	; 0x38
   1c33c:	sub	r3, r4, #1
   1c340:	bl	2690 <InflateSkipData>
   1c344:	ldr	r0, [fp, #12]
   1c348:	add	r8, r4, r8
   1c34c:	cmp	r0, #2
   1c350:	blt	1c46c <ReadCompressedDataSlabN+0x357c>
   1c354:	ldr	r4, [sp, #16]
   1c358:	ldr	r7, [sp, #20]
   1c35c:	ldr	r3, [sp, #40]	; 0x28
   1c360:	ldr	r5, [sp, #36]	; 0x24
   1c364:	mov	r6, #0
   1c368:	add	sl, sp, #112	; 0x70
   1c36c:	ldr	r0, [r7, r6]
   1c370:	ldr	r1, [sp, #44]	; 0x2c
   1c374:	add	r0, r0, #1
   1c378:	str	r0, [r7, r6]
   1c37c:	ldr	r1, [r1, r6]
   1c380:	sdiv	r2, r0, r1
   1c384:	mls	r0, r2, r1, r0
   1c388:	cmp	r0, #0
   1c38c:	bne	1c444 <ReadCompressedDataSlabN+0x3554>
   1c390:	mov	r0, #0
   1c394:	str	r0, [r7, r6]
   1c398:	ldr	r0, [r3, r6]
   1c39c:	sdiv	r1, r8, r0
   1c3a0:	mls	r1, r1, r0, r8
   1c3a4:	cmp	r1, #0
   1c3a8:	beq	1c3fc <ReadCompressedDataSlabN+0x350c>
   1c3ac:	ldr	r2, [sl, r6]
   1c3b0:	ldr	r3, [r5, r6]
   1c3b4:	sub	r0, r0, r1
   1c3b8:	add	r1, sp, #56	; 0x38
   1c3bc:	mla	r3, r3, r2, r0
   1c3c0:	ldr	r0, [sp, #52]	; 0x34
   1c3c4:	ldr	r2, [fp, #8]
   1c3c8:	bl	2690 <InflateSkipData>
   1c3cc:	ldr	r3, [sp, #40]	; 0x28
   1c3d0:	ldr	r5, [sp, #36]	; 0x24
   1c3d4:	ldr	r0, [r3, r6]
   1c3d8:	ldr	r2, [r5, r6]
   1c3dc:	sdiv	r1, r8, r0
   1c3e0:	mul	r1, r1, r0
   1c3e4:	add	r0, r0, r8
   1c3e8:	sub	r1, r1, r8
   1c3ec:	add	r0, r0, r1
   1c3f0:	ldr	r1, [sl, r6]
   1c3f4:	mla	r8, r2, r1, r0
   1c3f8:	b	1c434 <ReadCompressedDataSlabN+0x3544>
   1c3fc:	ldr	r0, [r5, r6]
   1c400:	cmp	r0, #0
   1c404:	beq	1c434 <ReadCompressedDataSlabN+0x3544>
   1c408:	ldr	r1, [sl, r6]
   1c40c:	ldr	r2, [fp, #8]
   1c410:	mul	r3, r1, r0
   1c414:	ldr	r0, [sp, #52]	; 0x34
   1c418:	add	r1, sp, #56	; 0x38
   1c41c:	bl	2690 <InflateSkipData>
   1c420:	ldr	r5, [sp, #36]	; 0x24
   1c424:	ldr	r0, [sl, r6]
   1c428:	ldr	r3, [sp, #40]	; 0x28
   1c42c:	ldr	r1, [r5, r6]
   1c430:	mla	r8, r1, r0, r8
   1c434:	subs	r4, r4, #1
   1c438:	add	r6, r6, #4
   1c43c:	bne	1c36c <ReadCompressedDataSlabN+0x347c>
   1c440:	b	1c46c <ReadCompressedDataSlabN+0x357c>
   1c444:	ldr	r0, [sp, #8]
   1c448:	ldr	r6, [r0, r6]
   1c44c:	cmp	r6, #0
   1c450:	beq	1c46c <ReadCompressedDataSlabN+0x357c>
   1c454:	ldr	r0, [sp, #52]	; 0x34
   1c458:	ldr	r2, [fp, #8]
   1c45c:	add	r1, sp, #56	; 0x38
   1c460:	mov	r3, r6
   1c464:	bl	2690 <InflateSkipData>
   1c468:	add	r8, r6, r8
   1c46c:	ldr	r0, [r9]
   1c470:	ldr	r1, [sp, #28]
   1c474:	ldr	r9, [fp, #20]
   1c478:	mov	sl, #1
   1c47c:	add	r4, sp, #56	; 0x38
   1c480:	add	r1, r0, r1
   1c484:	ldr	r0, [sp, #32]
   1c488:	str	r1, [sp, #28]
   1c48c:	cmp	r1, r0
   1c490:	blt	1c214 <ReadCompressedDataSlabN+0x3324>
   1c494:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c498:	ldr	r0, [sp, #32]
   1c49c:	cmp	r0, #1
   1c4a0:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c4a4:	sub	r0, fp, #112	; 0x70
   1c4a8:	mov	r9, sl
   1c4ac:	orr	r0, r0, #4
   1c4b0:	str	r0, [sp, #24]
   1c4b4:	ldr	r0, [fp, #28]
   1c4b8:	add	r0, r0, #4
   1c4bc:	str	r0, [sp, #44]	; 0x2c
   1c4c0:	add	r0, sp, #112	; 0x70
   1c4c4:	orr	r0, r0, #4
   1c4c8:	str	r0, [sp, #40]	; 0x28
   1c4cc:	add	r0, sl, #4
   1c4d0:	str	r0, [sp, #36]	; 0x24
   1c4d4:	ldr	r0, [fp, #12]
   1c4d8:	sub	r0, r0, #1
   1c4dc:	str	r0, [sp, #20]
   1c4e0:	orr	r0, r6, #4
   1c4e4:	mov	r6, #1
   1c4e8:	str	r0, [sp, #12]
   1c4ec:	ldr	r0, [sp, #48]	; 0x30
   1c4f0:	add	r0, r0, #8
   1c4f4:	str	r0, [sp, #16]
   1c4f8:	mov	r0, #0
   1c4fc:	str	r0, [sp, #28]
   1c500:	ldr	r3, [r9]
   1c504:	cmp	r3, #0
   1c508:	beq	1c540 <ReadCompressedDataSlabN+0x3650>
   1c50c:	ldr	sl, [sp, #52]	; 0x34
   1c510:	ldr	r5, [fp, #8]
   1c514:	add	r4, sp, #56	; 0x38
   1c518:	mov	r1, r4
   1c51c:	mov	r0, sl
   1c520:	mov	r2, r5
   1c524:	bl	2690 <InflateSkipData>
   1c528:	ldr	r0, [r9]
   1c52c:	mov	r7, r8
   1c530:	ldr	r9, [fp, #28]
   1c534:	add	r7, r0, r8
   1c538:	ldr	r0, [sp, #48]	; 0x30
   1c53c:	b	1c558 <ReadCompressedDataSlabN+0x3668>
   1c540:	ldr	sl, [sp, #52]	; 0x34
   1c544:	ldr	r9, [fp, #28]
   1c548:	ldr	r5, [fp, #8]
   1c54c:	ldr	r0, [sp, #48]	; 0x30
   1c550:	mov	r7, r8
   1c554:	add	r4, sp, #56	; 0x38
   1c558:	ldr	r8, [r9]
   1c55c:	str	r6, [sp]
   1c560:	ldr	r6, [sp, #28]
   1c564:	mov	r1, r4
   1c568:	mov	r3, r5
   1c56c:	add	r2, r0, r6, lsl #3
   1c570:	mov	r0, sl
   1c574:	bl	92a4 <ReadCompressedInt64Data>
   1c578:	cmp	r8, #2
   1c57c:	blt	1c600 <ReadCompressedDataSlabN+0x3710>
   1c580:	ldr	r0, [sp, #16]
   1c584:	mov	r4, #0
   1c588:	mov	r8, r7
   1c58c:	add	r6, r0, r6, lsl #3
   1c590:	ldr	r0, [fp, #24]
   1c594:	ldr	sl, [fp, #8]
   1c598:	ldr	r7, [sp, #52]	; 0x34
   1c59c:	add	r5, sp, #56	; 0x38
   1c5a0:	mov	r1, r5
   1c5a4:	ldr	r0, [r0]
   1c5a8:	mov	r2, sl
   1c5ac:	sub	r3, r0, #1
   1c5b0:	mov	r0, r7
   1c5b4:	bl	2690 <InflateSkipData>
   1c5b8:	ldr	r0, [fp, #24]
   1c5bc:	ldr	r3, [fp, #8]
   1c5c0:	ldr	sl, [r9]
   1c5c4:	mov	r1, r5
   1c5c8:	mov	r2, r6
   1c5cc:	ldr	r9, [r0]
   1c5d0:	mov	r0, #1
   1c5d4:	str	r0, [sp]
   1c5d8:	mov	r0, r7
   1c5dc:	bl	92a4 <ReadCompressedInt64Data>
   1c5e0:	add	r8, r9, r8
   1c5e4:	ldr	r9, [fp, #28]
   1c5e8:	add	r4, r4, #1
   1c5ec:	sub	r0, sl, #1
   1c5f0:	add	r6, r6, #8
   1c5f4:	cmp	r4, r0
   1c5f8:	blt	1c590 <ReadCompressedDataSlabN+0x36a0>
   1c5fc:	b	1c604 <ReadCompressedDataSlabN+0x3714>
   1c600:	mov	r8, r7
   1c604:	ldr	r0, [fp, #16]
   1c608:	ldr	r1, [fp, #24]
   1c60c:	ldr	r2, [r9]
   1c610:	ldr	r5, [fp, #8]
   1c614:	ldr	r0, [r0]
   1c618:	ldr	r1, [r1]
   1c61c:	sub	r2, r2, #1
   1c620:	mls	r0, r2, r1, r0
   1c624:	ldr	r1, [fp, #20]
   1c628:	mov	r2, r5
   1c62c:	ldr	r1, [r1]
   1c630:	sub	r4, r0, r1
   1c634:	ldr	r0, [sp, #52]	; 0x34
   1c638:	add	r1, sp, #56	; 0x38
   1c63c:	sub	r3, r4, #1
   1c640:	bl	2690 <InflateSkipData>
   1c644:	ldr	r0, [fp, #12]
   1c648:	add	r8, r4, r8
   1c64c:	cmp	r0, #2
   1c650:	blt	1c774 <ReadCompressedDataSlabN+0x3884>
   1c654:	mov	r2, r5
   1c658:	ldr	r4, [sp, #20]
   1c65c:	ldr	r5, [sp, #24]
   1c660:	ldr	r3, [sp, #40]	; 0x28
   1c664:	ldr	ip, [sp, #36]	; 0x24
   1c668:	mov	r6, #0
   1c66c:	ldr	r0, [r5, r6]
   1c670:	ldr	r1, [sp, #44]	; 0x2c
   1c674:	add	r0, r0, #1
   1c678:	str	r0, [r5, r6]
   1c67c:	ldr	r1, [r1, r6]
   1c680:	sdiv	r7, r0, r1
   1c684:	mls	r0, r7, r1, r0
   1c688:	cmp	r0, #0
   1c68c:	bne	1c750 <ReadCompressedDataSlabN+0x3860>
   1c690:	mov	r0, #0
   1c694:	str	r0, [r5, r6]
   1c698:	ldr	r0, [r3, r6]
   1c69c:	sdiv	r1, r8, r0
   1c6a0:	mls	r1, r1, r0, r8
   1c6a4:	cmp	r1, #0
   1c6a8:	beq	1c700 <ReadCompressedDataSlabN+0x3810>
   1c6ac:	add	sl, sp, #112	; 0x70
   1c6b0:	ldr	r3, [ip, r6]
   1c6b4:	sub	r0, r0, r1
   1c6b8:	add	r1, sp, #56	; 0x38
   1c6bc:	ldr	r7, [sl, r6]
   1c6c0:	mla	r3, r3, r7, r0
   1c6c4:	ldr	r0, [sp, #52]	; 0x34
   1c6c8:	bl	2690 <InflateSkipData>
   1c6cc:	ldr	r3, [sp, #40]	; 0x28
   1c6d0:	ldr	ip, [sp, #36]	; 0x24
   1c6d4:	ldr	r2, [fp, #8]
   1c6d8:	ldr	r0, [r3, r6]
   1c6dc:	ldr	r7, [ip, r6]
   1c6e0:	sdiv	r1, r8, r0
   1c6e4:	mul	r1, r1, r0
   1c6e8:	add	r0, r0, r8
   1c6ec:	sub	r1, r1, r8
   1c6f0:	add	r0, r0, r1
   1c6f4:	ldr	r1, [sl, r6]
   1c6f8:	mla	r8, r7, r1, r0
   1c6fc:	b	1c740 <ReadCompressedDataSlabN+0x3850>
   1c700:	ldr	r0, [ip, r6]
   1c704:	cmp	r0, #0
   1c708:	beq	1c740 <ReadCompressedDataSlabN+0x3850>
   1c70c:	add	r1, sp, #112	; 0x70
   1c710:	mov	r7, r1
   1c714:	ldr	r1, [r1, r6]
   1c718:	mul	r3, r1, r0
   1c71c:	ldr	r0, [sp, #52]	; 0x34
   1c720:	add	r1, sp, #56	; 0x38
   1c724:	bl	2690 <InflateSkipData>
   1c728:	ldr	ip, [sp, #36]	; 0x24
   1c72c:	ldr	r0, [r7, r6]
   1c730:	ldr	r2, [fp, #8]
   1c734:	ldr	r3, [sp, #40]	; 0x28
   1c738:	ldr	r1, [ip, r6]
   1c73c:	mla	r8, r1, r0, r8
   1c740:	subs	r4, r4, #1
   1c744:	add	r6, r6, #4
   1c748:	bne	1c66c <ReadCompressedDataSlabN+0x377c>
   1c74c:	b	1c774 <ReadCompressedDataSlabN+0x3884>
   1c750:	ldr	r0, [sp, #12]
   1c754:	ldr	r6, [r0, r6]
   1c758:	cmp	r6, #0
   1c75c:	beq	1c774 <ReadCompressedDataSlabN+0x3884>
   1c760:	ldr	r0, [sp, #52]	; 0x34
   1c764:	add	r1, sp, #56	; 0x38
   1c768:	mov	r3, r6
   1c76c:	bl	2690 <InflateSkipData>
   1c770:	add	r8, r6, r8
   1c774:	ldr	r0, [r9]
   1c778:	ldr	r1, [sp, #28]
   1c77c:	ldr	r9, [fp, #20]
   1c780:	mov	r6, #1
   1c784:	add	r1, r0, r1
   1c788:	ldr	r0, [sp, #32]
   1c78c:	str	r1, [sp, #28]
   1c790:	cmp	r1, r0
   1c794:	blt	1c500 <ReadCompressedDataSlabN+0x3610>
   1c798:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c79c:	ldr	r0, [sp, #32]
   1c7a0:	cmp	r0, #1
   1c7a4:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1c7a8:	sub	r0, fp, #112	; 0x70
   1c7ac:	add	r5, sl, #4
   1c7b0:	mov	r9, sl
   1c7b4:	mov	sl, #1
   1c7b8:	add	r4, sp, #56	; 0x38
   1c7bc:	orr	r7, r0, #4
   1c7c0:	ldr	r0, [fp, #28]
   1c7c4:	str	r5, [sp, #36]	; 0x24
   1c7c8:	str	r7, [sp, #20]
   1c7cc:	add	r0, r0, #4
   1c7d0:	str	r0, [sp, #44]	; 0x2c
   1c7d4:	add	r0, sp, #112	; 0x70
   1c7d8:	orr	r3, r0, #4
   1c7dc:	ldr	r0, [fp, #12]
   1c7e0:	str	r3, [sp, #40]	; 0x28
   1c7e4:	sub	r0, r0, #1
   1c7e8:	str	r0, [sp, #16]
   1c7ec:	orr	r0, r6, #4
   1c7f0:	str	r0, [sp, #8]
   1c7f4:	ldr	r0, [sp, #48]	; 0x30
   1c7f8:	add	r0, r0, #8
   1c7fc:	str	r0, [sp, #12]
   1c800:	mov	r0, #0
   1c804:	str	r0, [sp, #28]
   1c808:	ldr	r3, [r9]
   1c80c:	cmp	r3, #0
   1c810:	beq	1c83c <ReadCompressedDataSlabN+0x394c>
   1c814:	ldr	r5, [sp, #52]	; 0x34
   1c818:	ldr	r6, [fp, #8]
   1c81c:	mov	r1, r4
   1c820:	mov	r0, r5
   1c824:	mov	r2, r6
   1c828:	bl	2690 <InflateSkipData>
   1c82c:	ldr	r0, [r9]
   1c830:	ldr	r9, [fp, #28]
   1c834:	add	r8, r0, r8
   1c838:	b	1c848 <ReadCompressedDataSlabN+0x3958>
   1c83c:	ldr	r5, [sp, #52]	; 0x34
   1c840:	ldr	r9, [fp, #28]
   1c844:	ldr	r6, [fp, #8]
   1c848:	ldr	r0, [sp, #48]	; 0x30
   1c84c:	ldr	r7, [sp, #28]
   1c850:	str	r8, [sp, #24]
   1c854:	ldr	r8, [r9]
   1c858:	mov	r1, r4
   1c85c:	mov	r3, r6
   1c860:	str	sl, [sp]
   1c864:	add	r2, r0, r7, lsl #3
   1c868:	mov	r0, r5
   1c86c:	bl	af40 <ReadCompressedUInt64Data>
   1c870:	cmp	r8, #2
   1c874:	blt	1c8f8 <ReadCompressedDataSlabN+0x3a08>
   1c878:	ldr	r0, [sp, #12]
   1c87c:	ldr	r8, [sp, #24]
   1c880:	mov	r4, #0
   1c884:	add	r6, r0, r7, lsl #3
   1c888:	ldr	r0, [fp, #24]
   1c88c:	mov	r5, r9
   1c890:	ldr	sl, [fp, #8]
   1c894:	ldr	r7, [sp, #52]	; 0x34
   1c898:	add	r1, sp, #56	; 0x38
   1c89c:	mov	r9, r0
   1c8a0:	ldr	r0, [r0]
   1c8a4:	mov	r2, sl
   1c8a8:	sub	r3, r0, #1
   1c8ac:	mov	r0, r7
   1c8b0:	bl	2690 <InflateSkipData>
   1c8b4:	ldr	r5, [r5]
   1c8b8:	ldr	r9, [r9]
   1c8bc:	mov	r0, #1
   1c8c0:	add	r1, sp, #56	; 0x38
   1c8c4:	mov	r2, r6
   1c8c8:	mov	r3, sl
   1c8cc:	str	r0, [sp]
   1c8d0:	mov	r0, r7
   1c8d4:	bl	af40 <ReadCompressedUInt64Data>
   1c8d8:	add	r8, r9, r8
   1c8dc:	ldr	r9, [fp, #28]
   1c8e0:	add	r4, r4, #1
   1c8e4:	sub	r0, r5, #1
   1c8e8:	add	r6, r6, #8
   1c8ec:	cmp	r4, r0
   1c8f0:	blt	1c888 <ReadCompressedDataSlabN+0x3998>
   1c8f4:	b	1c8fc <ReadCompressedDataSlabN+0x3a0c>
   1c8f8:	ldr	r8, [sp, #24]
   1c8fc:	ldr	r0, [fp, #16]
   1c900:	ldr	r1, [fp, #24]
   1c904:	ldr	r2, [r9]
   1c908:	ldr	r0, [r0]
   1c90c:	ldr	r1, [r1]
   1c910:	sub	r2, r2, #1
   1c914:	mls	r0, r2, r1, r0
   1c918:	ldr	r1, [fp, #20]
   1c91c:	ldr	r2, [fp, #8]
   1c920:	ldr	r1, [r1]
   1c924:	sub	r4, r0, r1
   1c928:	ldr	r0, [sp, #52]	; 0x34
   1c92c:	add	r1, sp, #56	; 0x38
   1c930:	sub	r3, r4, #1
   1c934:	bl	2690 <InflateSkipData>
   1c938:	ldr	r0, [fp, #12]
   1c93c:	add	r8, r4, r8
   1c940:	cmp	r0, #2
   1c944:	blt	1ca60 <ReadCompressedDataSlabN+0x3b70>
   1c948:	ldr	r4, [sp, #16]
   1c94c:	ldr	r7, [sp, #20]
   1c950:	ldr	r3, [sp, #40]	; 0x28
   1c954:	ldr	r5, [sp, #36]	; 0x24
   1c958:	mov	r6, #0
   1c95c:	add	sl, sp, #112	; 0x70
   1c960:	ldr	r0, [r7, r6]
   1c964:	ldr	r1, [sp, #44]	; 0x2c
   1c968:	add	r0, r0, #1
   1c96c:	str	r0, [r7, r6]
   1c970:	ldr	r1, [r1, r6]
   1c974:	sdiv	r2, r0, r1
   1c978:	mls	r0, r2, r1, r0
   1c97c:	cmp	r0, #0
   1c980:	bne	1ca38 <ReadCompressedDataSlabN+0x3b48>
   1c984:	mov	r0, #0
   1c988:	str	r0, [r7, r6]
   1c98c:	ldr	r0, [r3, r6]
   1c990:	sdiv	r1, r8, r0
   1c994:	mls	r1, r1, r0, r8
   1c998:	cmp	r1, #0
   1c99c:	beq	1c9f0 <ReadCompressedDataSlabN+0x3b00>
   1c9a0:	ldr	r2, [sl, r6]
   1c9a4:	ldr	r3, [r5, r6]
   1c9a8:	sub	r0, r0, r1
   1c9ac:	add	r1, sp, #56	; 0x38
   1c9b0:	mla	r3, r3, r2, r0
   1c9b4:	ldr	r0, [sp, #52]	; 0x34
   1c9b8:	ldr	r2, [fp, #8]
   1c9bc:	bl	2690 <InflateSkipData>
   1c9c0:	ldr	r3, [sp, #40]	; 0x28
   1c9c4:	ldr	r5, [sp, #36]	; 0x24
   1c9c8:	ldr	r0, [r3, r6]
   1c9cc:	ldr	r2, [r5, r6]
   1c9d0:	sdiv	r1, r8, r0
   1c9d4:	mul	r1, r1, r0
   1c9d8:	add	r0, r0, r8
   1c9dc:	sub	r1, r1, r8
   1c9e0:	add	r0, r0, r1
   1c9e4:	ldr	r1, [sl, r6]
   1c9e8:	mla	r8, r2, r1, r0
   1c9ec:	b	1ca28 <ReadCompressedDataSlabN+0x3b38>
   1c9f0:	ldr	r0, [r5, r6]
   1c9f4:	cmp	r0, #0
   1c9f8:	beq	1ca28 <ReadCompressedDataSlabN+0x3b38>
   1c9fc:	ldr	r1, [sl, r6]
   1ca00:	ldr	r2, [fp, #8]
   1ca04:	mul	r3, r1, r0
   1ca08:	ldr	r0, [sp, #52]	; 0x34
   1ca0c:	add	r1, sp, #56	; 0x38
   1ca10:	bl	2690 <InflateSkipData>
   1ca14:	ldr	r5, [sp, #36]	; 0x24
   1ca18:	ldr	r0, [sl, r6]
   1ca1c:	ldr	r3, [sp, #40]	; 0x28
   1ca20:	ldr	r1, [r5, r6]
   1ca24:	mla	r8, r1, r0, r8
   1ca28:	subs	r4, r4, #1
   1ca2c:	add	r6, r6, #4
   1ca30:	bne	1c960 <ReadCompressedDataSlabN+0x3a70>
   1ca34:	b	1ca60 <ReadCompressedDataSlabN+0x3b70>
   1ca38:	ldr	r0, [sp, #8]
   1ca3c:	ldr	r6, [r0, r6]
   1ca40:	cmp	r6, #0
   1ca44:	beq	1ca60 <ReadCompressedDataSlabN+0x3b70>
   1ca48:	ldr	r0, [sp, #52]	; 0x34
   1ca4c:	ldr	r2, [fp, #8]
   1ca50:	add	r1, sp, #56	; 0x38
   1ca54:	mov	r3, r6
   1ca58:	bl	2690 <InflateSkipData>
   1ca5c:	add	r8, r6, r8
   1ca60:	ldr	r0, [r9]
   1ca64:	ldr	r1, [sp, #28]
   1ca68:	ldr	r9, [fp, #20]
   1ca6c:	mov	sl, #1
   1ca70:	add	r4, sp, #56	; 0x38
   1ca74:	add	r1, r0, r1
   1ca78:	ldr	r0, [sp, #32]
   1ca7c:	str	r1, [sp, #28]
   1ca80:	cmp	r1, r0
   1ca84:	blt	1c808 <ReadCompressedDataSlabN+0x3918>
   1ca88:	b	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1ca8c:	ldr	r0, [sp, #36]	; 0x24
   1ca90:	sub	r1, fp, #72	; 0x48
   1ca94:	cmp	r0, #1
   1ca98:	blt	1cd6c <ReadCompressedDataSlabN+0x3e7c>
   1ca9c:	sub	r0, fp, #112	; 0x70
   1caa0:	mov	r8, #1
   1caa4:	add	sl, sp, #56	; 0x38
   1caa8:	orr	r5, r0, #4
   1caac:	ldr	r0, [fp, #28]
   1cab0:	str	r5, [sp, #28]
   1cab4:	add	r9, r0, #4
   1cab8:	add	r0, sp, #112	; 0x70
   1cabc:	orr	r3, r0, #4
   1cac0:	ldr	r0, [fp, #20]
   1cac4:	str	r9, [sp, #24]
   1cac8:	str	r3, [sp, #44]	; 0x2c
   1cacc:	add	r4, r0, #4
   1cad0:	ldr	r0, [fp, #12]
   1cad4:	str	r4, [sp, #40]	; 0x28
   1cad8:	sub	r0, r0, #1
   1cadc:	str	r0, [sp, #20]
   1cae0:	orr	r0, r1, #4
   1cae4:	str	r0, [sp, #12]
   1cae8:	ldr	r0, [sp, #48]	; 0x30
   1caec:	add	r0, r0, #8
   1caf0:	str	r0, [sp, #16]
   1caf4:	mov	r0, #0
   1caf8:	str	r0, [sp, #32]
   1cafc:	ldr	r4, [fp, #20]
   1cb00:	ldr	r3, [r4]
   1cb04:	cmp	r3, #0
   1cb08:	beq	1cb30 <ReadCompressedDataSlabN+0x3c40>
   1cb0c:	ldr	r5, [sp, #52]	; 0x34
   1cb10:	ldr	r6, [fp, #8]
   1cb14:	mov	r1, sl
   1cb18:	mov	r0, r5
   1cb1c:	mov	r2, r6
   1cb20:	bl	2690 <InflateSkipData>
   1cb24:	ldr	r0, [r4]
   1cb28:	add	r7, r0, r7
   1cb2c:	b	1cb38 <ReadCompressedDataSlabN+0x3c48>
   1cb30:	ldr	r5, [sp, #52]	; 0x34
   1cb34:	ldr	r6, [fp, #8]
   1cb38:	ldr	r0, [fp, #28]
   1cb3c:	ldr	r4, [sp, #32]
   1cb40:	mov	r1, sl
   1cb44:	mov	r3, r6
   1cb48:	ldr	r9, [r0]
   1cb4c:	ldr	r0, [sp, #48]	; 0x30
   1cb50:	str	r8, [sp]
   1cb54:	add	r2, r0, r4, lsl #3
   1cb58:	mov	r0, r5
   1cb5c:	bl	4cb4 <ReadCompressedDoubleData>
   1cb60:	cmp	r9, #2
   1cb64:	blt	1cbdc <ReadCompressedDataSlabN+0x3cec>
   1cb68:	ldr	r0, [sp, #16]
   1cb6c:	add	r6, r0, r4, lsl #3
   1cb70:	mov	r4, #0
   1cb74:	ldr	r0, [fp, #24]
   1cb78:	ldr	r9, [fp, #8]
   1cb7c:	ldr	sl, [sp, #52]	; 0x34
   1cb80:	add	r1, sp, #56	; 0x38
   1cb84:	mov	r8, r0
   1cb88:	ldr	r0, [r0]
   1cb8c:	mov	r2, r9
   1cb90:	sub	r3, r0, #1
   1cb94:	mov	r0, sl
   1cb98:	bl	2690 <InflateSkipData>
   1cb9c:	ldr	r0, [fp, #28]
   1cba0:	ldr	r8, [r8]
   1cba4:	add	r1, sp, #56	; 0x38
   1cba8:	mov	r2, r6
   1cbac:	mov	r3, r9
   1cbb0:	ldr	r5, [r0]
   1cbb4:	mov	r0, #1
   1cbb8:	str	r0, [sp]
   1cbbc:	mov	r0, sl
   1cbc0:	bl	4cb4 <ReadCompressedDoubleData>
   1cbc4:	add	r4, r4, #1
   1cbc8:	sub	r0, r5, #1
   1cbcc:	add	r7, r8, r7
   1cbd0:	add	r6, r6, #8
   1cbd4:	cmp	r4, r0
   1cbd8:	blt	1cb74 <ReadCompressedDataSlabN+0x3c84>
   1cbdc:	ldr	r2, [fp, #28]
   1cbe0:	ldr	r0, [fp, #16]
   1cbe4:	ldr	r1, [fp, #24]
   1cbe8:	ldr	r9, [fp, #20]
   1cbec:	ldr	r2, [r2]
   1cbf0:	ldr	r0, [r0]
   1cbf4:	ldr	r1, [r1]
   1cbf8:	sub	r2, r2, #1
   1cbfc:	mls	r0, r2, r1, r0
   1cc00:	ldr	r1, [r9]
   1cc04:	ldr	r2, [fp, #8]
   1cc08:	sub	r4, r0, r1
   1cc0c:	ldr	r0, [sp, #52]	; 0x34
   1cc10:	add	r1, sp, #56	; 0x38
   1cc14:	sub	r3, r4, #1
   1cc18:	bl	2690 <InflateSkipData>
   1cc1c:	ldr	r0, [fp, #12]
   1cc20:	add	r7, r4, r7
   1cc24:	cmp	r0, #2
   1cc28:	blt	1cd44 <ReadCompressedDataSlabN+0x3e54>
   1cc2c:	ldr	r8, [sp, #20]
   1cc30:	ldr	r5, [sp, #28]
   1cc34:	ldr	r9, [sp, #24]
   1cc38:	ldr	r3, [sp, #44]	; 0x2c
   1cc3c:	ldr	r4, [sp, #40]	; 0x28
   1cc40:	mov	r6, #0
   1cc44:	add	sl, sp, #112	; 0x70
   1cc48:	ldr	r0, [r5, r6]
   1cc4c:	add	r0, r0, #1
   1cc50:	str	r0, [r5, r6]
   1cc54:	ldr	r1, [r9, r6]
   1cc58:	sdiv	r2, r0, r1
   1cc5c:	mls	r0, r2, r1, r0
   1cc60:	cmp	r0, #0
   1cc64:	bne	1cd1c <ReadCompressedDataSlabN+0x3e2c>
   1cc68:	mov	r0, #0
   1cc6c:	str	r0, [r5, r6]
   1cc70:	ldr	r0, [r3, r6]
   1cc74:	sdiv	r1, r7, r0
   1cc78:	mls	r1, r1, r0, r7
   1cc7c:	cmp	r1, #0
   1cc80:	beq	1ccd4 <ReadCompressedDataSlabN+0x3de4>
   1cc84:	ldr	r2, [sl, r6]
   1cc88:	ldr	r3, [r4, r6]
   1cc8c:	sub	r0, r0, r1
   1cc90:	add	r1, sp, #56	; 0x38
   1cc94:	mla	r3, r3, r2, r0
   1cc98:	ldr	r0, [sp, #52]	; 0x34
   1cc9c:	ldr	r2, [fp, #8]
   1cca0:	bl	2690 <InflateSkipData>
   1cca4:	ldr	r3, [sp, #44]	; 0x2c
   1cca8:	ldr	r4, [sp, #40]	; 0x28
   1ccac:	ldr	r0, [r3, r6]
   1ccb0:	ldr	r2, [r4, r6]
   1ccb4:	sdiv	r1, r7, r0
   1ccb8:	mul	r1, r1, r0
   1ccbc:	add	r0, r0, r7
   1ccc0:	sub	r1, r1, r7
   1ccc4:	add	r0, r0, r1
   1ccc8:	ldr	r1, [sl, r6]
   1cccc:	mla	r7, r2, r1, r0
   1ccd0:	b	1cd0c <ReadCompressedDataSlabN+0x3e1c>
   1ccd4:	ldr	r0, [r4, r6]
   1ccd8:	cmp	r0, #0
   1ccdc:	beq	1cd0c <ReadCompressedDataSlabN+0x3e1c>
   1cce0:	ldr	r1, [sl, r6]
   1cce4:	ldr	r2, [fp, #8]
   1cce8:	mul	r3, r1, r0
   1ccec:	ldr	r0, [sp, #52]	; 0x34
   1ccf0:	add	r1, sp, #56	; 0x38
   1ccf4:	bl	2690 <InflateSkipData>
   1ccf8:	ldr	r4, [sp, #40]	; 0x28
   1ccfc:	ldr	r0, [sl, r6]
   1cd00:	ldr	r3, [sp, #44]	; 0x2c
   1cd04:	ldr	r1, [r4, r6]
   1cd08:	mla	r7, r1, r0, r7
   1cd0c:	subs	r8, r8, #1
   1cd10:	add	r6, r6, #4
   1cd14:	bne	1cc48 <ReadCompressedDataSlabN+0x3d58>
   1cd18:	b	1cd44 <ReadCompressedDataSlabN+0x3e54>
   1cd1c:	ldr	r0, [sp, #12]
   1cd20:	ldr	r6, [r0, r6]
   1cd24:	cmp	r6, #0
   1cd28:	beq	1cd44 <ReadCompressedDataSlabN+0x3e54>
   1cd2c:	ldr	r0, [sp, #52]	; 0x34
   1cd30:	ldr	r2, [fp, #8]
   1cd34:	add	r1, sp, #56	; 0x38
   1cd38:	mov	r3, r6
   1cd3c:	bl	2690 <InflateSkipData>
   1cd40:	add	r7, r6, r7
   1cd44:	ldr	r0, [fp, #28]
   1cd48:	ldr	r1, [sp, #32]
   1cd4c:	mov	r8, #1
   1cd50:	add	sl, sp, #56	; 0x38
   1cd54:	ldr	r0, [r0]
   1cd58:	add	r1, r0, r1
   1cd5c:	ldr	r0, [sp, #36]	; 0x24
   1cd60:	str	r1, [sp, #32]
   1cd64:	cmp	r1, r0
   1cd68:	blt	1cafc <ReadCompressedDataSlabN+0x3c0c>
   1cd6c:	add	r0, sp, #56	; 0x38
   1cd70:	bl	1954 <inflateEnd@plt>
   1cd74:	mov	r0, #0
   1cd78:	b	18f9c <ReadCompressedDataSlabN+0xac>

0001cd7c <ReadDataSlab1>:
   1cd7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd80:	add	fp, sp, #28
   1cd84:	sub	sp, sp, #4
   1cd88:	mov	sl, r0
   1cd8c:	mov	r0, r3
   1cd90:	mov	r8, r3
   1cd94:	mov	r4, r2
   1cd98:	mov	r5, r1
   1cd9c:	bl	193c <Mat_SizeOf@plt>
   1cda0:	mov	r6, r0
   1cda4:	ldr	r0, [fp, #8]
   1cda8:	mov	r2, #1
   1cdac:	mul	r1, r6, r0
   1cdb0:	ldr	r0, [sl]
   1cdb4:	bl	1a68 <fseek@plt>
   1cdb8:	sub	r0, r4, #6
   1cdbc:	mov	r4, #0
   1cdc0:	cmp	r0, #9
   1cdc4:	bhi	1d128 <ReadDataSlab1+0x3ac>
   1cdc8:	ldr	r1, [fp, #12]
   1cdcc:	sub	r1, r1, #1
   1cdd0:	mul	r9, r6, r1
   1cdd4:	ldr	r6, [fp, #16]
   1cdd8:	add	r1, pc, #4
   1cddc:	ldr	r0, [r1, r0, lsl #2]
   1cde0:	add	pc, r1, r0
   1cde4:	.word	0x00000028
   1cde8:	.word	0x00000078
   1cdec:	.word	0x000000c8
   1cdf0:	.word	0x00000118
   1cdf4:	.word	0x00000168
   1cdf8:	.word	0x000001b8
   1cdfc:	.word	0x00000208
   1ce00:	.word	0x00000258
   1ce04:	.word	0x000002a8
   1ce08:	.word	0x000002f8
   1ce0c:	cmp	r9, #0
   1ce10:	beq	1d134 <ReadDataSlab1+0x3b8>
   1ce14:	cmp	r6, #1
   1ce18:	blt	1d128 <ReadDataSlab1+0x3ac>
   1ce1c:	mov	r4, #0
   1ce20:	mov	r0, sl
   1ce24:	mov	r1, r5
   1ce28:	mov	r2, r8
   1ce2c:	mov	r3, #1
   1ce30:	bl	377c <ReadDoubleData>
   1ce34:	mov	r7, r0
   1ce38:	ldr	r0, [sl]
   1ce3c:	mov	r1, r9
   1ce40:	mov	r2, #1
   1ce44:	bl	1a68 <fseek@plt>
   1ce48:	add	r4, r7, r4
   1ce4c:	add	r5, r5, #8
   1ce50:	subs	r6, r6, #1
   1ce54:	bne	1ce20 <ReadDataSlab1+0xa4>
   1ce58:	b	1d128 <ReadDataSlab1+0x3ac>
   1ce5c:	cmp	r9, #0
   1ce60:	beq	1d150 <ReadDataSlab1+0x3d4>
   1ce64:	cmp	r6, #1
   1ce68:	blt	1d128 <ReadDataSlab1+0x3ac>
   1ce6c:	mov	r4, #0
   1ce70:	mov	r0, sl
   1ce74:	mov	r1, r5
   1ce78:	mov	r2, r8
   1ce7c:	mov	r3, #1
   1ce80:	bl	5fa0 <ReadSingleData>
   1ce84:	mov	r7, r0
   1ce88:	ldr	r0, [sl]
   1ce8c:	mov	r1, r9
   1ce90:	mov	r2, #1
   1ce94:	bl	1a68 <fseek@plt>
   1ce98:	add	r4, r7, r4
   1ce9c:	add	r5, r5, #4
   1cea0:	subs	r6, r6, #1
   1cea4:	bne	1ce70 <ReadDataSlab1+0xf4>
   1cea8:	b	1d128 <ReadDataSlab1+0x3ac>
   1ceac:	cmp	r9, #0
   1ceb0:	beq	1d16c <ReadDataSlab1+0x3f0>
   1ceb4:	cmp	r6, #1
   1ceb8:	blt	1d128 <ReadDataSlab1+0x3ac>
   1cebc:	mov	r4, #0
   1cec0:	mov	r0, sl
   1cec4:	mov	r1, r5
   1cec8:	mov	r2, r8
   1cecc:	mov	r3, #1
   1ced0:	bl	11e88 <ReadInt8Data>
   1ced4:	mov	r7, r0
   1ced8:	ldr	r0, [sl]
   1cedc:	mov	r1, r9
   1cee0:	mov	r2, #1
   1cee4:	bl	1a68 <fseek@plt>
   1cee8:	add	r4, r7, r4
   1ceec:	add	r5, r5, #1
   1cef0:	subs	r6, r6, #1
   1cef4:	bne	1cec0 <ReadDataSlab1+0x144>
   1cef8:	b	1d128 <ReadDataSlab1+0x3ac>
   1cefc:	cmp	r9, #0
   1cf00:	beq	1d188 <ReadDataSlab1+0x40c>
   1cf04:	cmp	r6, #1
   1cf08:	blt	1d128 <ReadDataSlab1+0x3ac>
   1cf0c:	mov	r4, #0
   1cf10:	mov	r0, sl
   1cf14:	mov	r1, r5
   1cf18:	mov	r2, r8
   1cf1c:	mov	r3, #1
   1cf20:	bl	13934 <ReadUInt8Data>
   1cf24:	mov	r7, r0
   1cf28:	ldr	r0, [sl]
   1cf2c:	mov	r1, r9
   1cf30:	mov	r2, #1
   1cf34:	bl	1a68 <fseek@plt>
   1cf38:	add	r4, r7, r4
   1cf3c:	add	r5, r5, #1
   1cf40:	subs	r6, r6, #1
   1cf44:	bne	1cf10 <ReadDataSlab1+0x194>
   1cf48:	b	1d128 <ReadDataSlab1+0x3ac>
   1cf4c:	cmp	r9, #0
   1cf50:	beq	1d1a4 <ReadDataSlab1+0x428>
   1cf54:	cmp	r6, #1
   1cf58:	blt	1d128 <ReadDataSlab1+0x3ac>
   1cf5c:	mov	r4, #0
   1cf60:	mov	r0, sl
   1cf64:	mov	r1, r5
   1cf68:	mov	r2, r8
   1cf6c:	mov	r3, #1
   1cf70:	bl	e9a0 <ReadInt16Data>
   1cf74:	mov	r7, r0
   1cf78:	ldr	r0, [sl]
   1cf7c:	mov	r1, r9
   1cf80:	mov	r2, #1
   1cf84:	bl	1a68 <fseek@plt>
   1cf88:	add	r4, r7, r4
   1cf8c:	add	r5, r5, #2
   1cf90:	subs	r6, r6, #1
   1cf94:	bne	1cf60 <ReadDataSlab1+0x1e4>
   1cf98:	b	1d128 <ReadDataSlab1+0x3ac>
   1cf9c:	cmp	r9, #0
   1cfa0:	beq	1d1c0 <ReadDataSlab1+0x444>
   1cfa4:	cmp	r6, #1
   1cfa8:	blt	1d128 <ReadDataSlab1+0x3ac>
   1cfac:	mov	r4, #0
   1cfb0:	mov	r0, sl
   1cfb4:	mov	r1, r5
   1cfb8:	mov	r2, r8
   1cfbc:	mov	r3, #1
   1cfc0:	bl	10414 <ReadUInt16Data>
   1cfc4:	mov	r7, r0
   1cfc8:	ldr	r0, [sl]
   1cfcc:	mov	r1, r9
   1cfd0:	mov	r2, #1
   1cfd4:	bl	1a68 <fseek@plt>
   1cfd8:	add	r4, r7, r4
   1cfdc:	add	r5, r5, #2
   1cfe0:	subs	r6, r6, #1
   1cfe4:	bne	1cfb0 <ReadDataSlab1+0x234>
   1cfe8:	b	1d128 <ReadDataSlab1+0x3ac>
   1cfec:	cmp	r9, #0
   1cff0:	beq	1d1dc <ReadDataSlab1+0x460>
   1cff4:	cmp	r6, #1
   1cff8:	blt	1d128 <ReadDataSlab1+0x3ac>
   1cffc:	mov	r4, #0
   1d000:	mov	r0, sl
   1d004:	mov	r1, r5
   1d008:	mov	r2, r8
   1d00c:	mov	r3, #1
   1d010:	bl	b4d8 <ReadInt32Data>
   1d014:	mov	r7, r0
   1d018:	ldr	r0, [sl]
   1d01c:	mov	r1, r9
   1d020:	mov	r2, #1
   1d024:	bl	1a68 <fseek@plt>
   1d028:	add	r4, r7, r4
   1d02c:	add	r5, r5, #4
   1d030:	subs	r6, r6, #1
   1d034:	bne	1d000 <ReadDataSlab1+0x284>
   1d038:	b	1d128 <ReadDataSlab1+0x3ac>
   1d03c:	cmp	r9, #0
   1d040:	beq	1d1f8 <ReadDataSlab1+0x47c>
   1d044:	cmp	r6, #1
   1d048:	blt	1d128 <ReadDataSlab1+0x3ac>
   1d04c:	mov	r4, #0
   1d050:	mov	r0, sl
   1d054:	mov	r1, r5
   1d058:	mov	r2, r8
   1d05c:	mov	r3, #1
   1d060:	bl	cf3c <ReadUInt32Data>
   1d064:	mov	r7, r0
   1d068:	ldr	r0, [sl]
   1d06c:	mov	r1, r9
   1d070:	mov	r2, #1
   1d074:	bl	1a68 <fseek@plt>
   1d078:	add	r4, r7, r4
   1d07c:	add	r5, r5, #4
   1d080:	subs	r6, r6, #1
   1d084:	bne	1d050 <ReadDataSlab1+0x2d4>
   1d088:	b	1d128 <ReadDataSlab1+0x3ac>
   1d08c:	cmp	r9, #0
   1d090:	beq	1d214 <ReadDataSlab1+0x498>
   1d094:	cmp	r6, #1
   1d098:	blt	1d128 <ReadDataSlab1+0x3ac>
   1d09c:	mov	r4, #0
   1d0a0:	mov	r0, sl
   1d0a4:	mov	r1, r5
   1d0a8:	mov	r2, r8
   1d0ac:	mov	r3, #1
   1d0b0:	bl	7ba0 <ReadInt64Data>
   1d0b4:	mov	r7, r0
   1d0b8:	ldr	r0, [sl]
   1d0bc:	mov	r1, r9
   1d0c0:	mov	r2, #1
   1d0c4:	bl	1a68 <fseek@plt>
   1d0c8:	add	r4, r7, r4
   1d0cc:	add	r5, r5, #8
   1d0d0:	subs	r6, r6, #1
   1d0d4:	bne	1d0a0 <ReadDataSlab1+0x324>
   1d0d8:	b	1d128 <ReadDataSlab1+0x3ac>
   1d0dc:	cmp	r9, #0
   1d0e0:	beq	1d230 <ReadDataSlab1+0x4b4>
   1d0e4:	cmp	r6, #1
   1d0e8:	blt	1d128 <ReadDataSlab1+0x3ac>
   1d0ec:	mov	r4, #0
   1d0f0:	mov	r0, sl
   1d0f4:	mov	r1, r5
   1d0f8:	mov	r2, r8
   1d0fc:	mov	r3, #1
   1d100:	bl	983c <ReadUInt64Data>
   1d104:	mov	r7, r0
   1d108:	ldr	r0, [sl]
   1d10c:	mov	r1, r9
   1d110:	mov	r2, #1
   1d114:	bl	1a68 <fseek@plt>
   1d118:	add	r4, r7, r4
   1d11c:	add	r5, r5, #8
   1d120:	subs	r6, r6, #1
   1d124:	bne	1d0f0 <ReadDataSlab1+0x374>
   1d128:	mov	r0, r4
   1d12c:	sub	sp, fp, #28
   1d130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d134:	mov	r0, sl
   1d138:	mov	r1, r5
   1d13c:	mov	r2, r8
   1d140:	mov	r3, r6
   1d144:	sub	sp, fp, #28
   1d148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d14c:	b	377c <ReadDoubleData>
   1d150:	mov	r0, sl
   1d154:	mov	r1, r5
   1d158:	mov	r2, r8
   1d15c:	mov	r3, r6
   1d160:	sub	sp, fp, #28
   1d164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d168:	b	5fa0 <ReadSingleData>
   1d16c:	mov	r0, sl
   1d170:	mov	r1, r5
   1d174:	mov	r2, r8
   1d178:	mov	r3, r6
   1d17c:	sub	sp, fp, #28
   1d180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d184:	b	11e88 <ReadInt8Data>
   1d188:	mov	r0, sl
   1d18c:	mov	r1, r5
   1d190:	mov	r2, r8
   1d194:	mov	r3, r6
   1d198:	sub	sp, fp, #28
   1d19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1a0:	b	13934 <ReadUInt8Data>
   1d1a4:	mov	r0, sl
   1d1a8:	mov	r1, r5
   1d1ac:	mov	r2, r8
   1d1b0:	mov	r3, r6
   1d1b4:	sub	sp, fp, #28
   1d1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1bc:	b	e9a0 <ReadInt16Data>
   1d1c0:	mov	r0, sl
   1d1c4:	mov	r1, r5
   1d1c8:	mov	r2, r8
   1d1cc:	mov	r3, r6
   1d1d0:	sub	sp, fp, #28
   1d1d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1d8:	b	10414 <ReadUInt16Data>
   1d1dc:	mov	r0, sl
   1d1e0:	mov	r1, r5
   1d1e4:	mov	r2, r8
   1d1e8:	mov	r3, r6
   1d1ec:	sub	sp, fp, #28
   1d1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1f4:	b	b4d8 <ReadInt32Data>
   1d1f8:	mov	r0, sl
   1d1fc:	mov	r1, r5
   1d200:	mov	r2, r8
   1d204:	mov	r3, r6
   1d208:	sub	sp, fp, #28
   1d20c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d210:	b	cf3c <ReadUInt32Data>
   1d214:	mov	r0, sl
   1d218:	mov	r1, r5
   1d21c:	mov	r2, r8
   1d220:	mov	r3, r6
   1d224:	sub	sp, fp, #28
   1d228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d22c:	b	7ba0 <ReadInt64Data>
   1d230:	mov	r0, sl
   1d234:	mov	r1, r5
   1d238:	mov	r2, r8
   1d23c:	mov	r3, r6
   1d240:	sub	sp, fp, #28
   1d244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d248:	b	983c <ReadUInt64Data>

0001d24c <ReadDataSlab2>:
   1d24c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d250:	add	fp, sp, #28
   1d254:	sub	sp, sp, #20
   1d258:	cmp	r0, #0
   1d25c:	mov	r9, #0
   1d260:	movne	r5, r1
   1d264:	cmpne	r1, #0
   1d268:	beq	1d298 <ReadDataSlab2+0x4c>
   1d26c:	ldr	r4, [fp, #20]
   1d270:	cmp	r4, #0
   1d274:	ldrne	r8, [fp, #16]
   1d278:	cmpne	r8, #0
   1d27c:	beq	1d298 <ReadDataSlab2+0x4c>
   1d280:	mov	r6, r0
   1d284:	ldr	r0, [fp, #12]
   1d288:	cmp	r0, #0
   1d28c:	ldrne	r0, [r6]
   1d290:	cmpne	r0, #0
   1d294:	bne	1d2a4 <ReadDataSlab2+0x58>
   1d298:	mov	r0, r9
   1d29c:	sub	sp, fp, #28
   1d2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2a4:	mov	r0, r3
   1d2a8:	mov	sl, r3
   1d2ac:	mov	r7, r2
   1d2b0:	bl	193c <Mat_SizeOf@plt>
   1d2b4:	str	r0, [sp, #16]
   1d2b8:	sub	r0, r7, #6
   1d2bc:	cmp	r0, #9
   1d2c0:	bhi	1d298 <ReadDataSlab2+0x4c>
   1d2c4:	add	r1, pc, #8
   1d2c8:	ldr	r7, [fp, #8]
   1d2cc:	ldr	r0, [r1, r0, lsl #2]
   1d2d0:	add	pc, r1, r0
   1d2d4:	.word	0x00000028
   1d2d8:	.word	0x0000006c
   1d2dc:	.word	0x000000b0
   1d2e0:	.word	0x000000f4
   1d2e4:	.word	0x00000138
   1d2e8:	.word	0x0000017c
   1d2ec:	.word	0x000001c0
   1d2f0:	.word	0x00000204
   1d2f4:	.word	0x0000028c
   1d2f8:	.word	0x00000248
   1d2fc:	ldr	r2, [r8]
   1d300:	cmp	r2, #1
   1d304:	bne	1d5a4 <ReadDataSlab2+0x358>
   1d308:	ldr	r1, [r7]
   1d30c:	ldr	r0, [r4]
   1d310:	cmp	r0, r1
   1d314:	bne	1d5f8 <ReadDataSlab2+0x3ac>
   1d318:	ldr	r1, [r8, #4]
   1d31c:	cmp	r1, #1
   1d320:	bne	1d5f4 <ReadDataSlab2+0x3a8>
   1d324:	ldr	r1, [r4, #4]
   1d328:	mov	r2, sl
   1d32c:	mul	r3, r1, r0
   1d330:	mov	r0, r6
   1d334:	mov	r1, r5
   1d338:	bl	377c <ReadDoubleData>
   1d33c:	b	1d298 <ReadDataSlab2+0x4c>
   1d340:	ldr	r2, [r8]
   1d344:	cmp	r2, #1
   1d348:	bne	1d5ac <ReadDataSlab2+0x360>
   1d34c:	ldr	r1, [r7]
   1d350:	ldr	r0, [r4]
   1d354:	cmp	r0, r1
   1d358:	bne	1d734 <ReadDataSlab2+0x4e8>
   1d35c:	ldr	r1, [r8, #4]
   1d360:	cmp	r1, #1
   1d364:	bne	1d730 <ReadDataSlab2+0x4e4>
   1d368:	ldr	r1, [r4, #4]
   1d36c:	mov	r2, sl
   1d370:	mul	r3, r1, r0
   1d374:	mov	r0, r6
   1d378:	mov	r1, r5
   1d37c:	bl	5fa0 <ReadSingleData>
   1d380:	b	1d298 <ReadDataSlab2+0x4c>
   1d384:	ldr	r2, [r8]
   1d388:	cmp	r2, #1
   1d38c:	bne	1d5b4 <ReadDataSlab2+0x368>
   1d390:	ldr	r1, [r7]
   1d394:	ldr	r0, [r4]
   1d398:	cmp	r0, r1
   1d39c:	bne	1d86c <ReadDataSlab2+0x620>
   1d3a0:	ldr	r1, [r8, #4]
   1d3a4:	cmp	r1, #1
   1d3a8:	bne	1d868 <ReadDataSlab2+0x61c>
   1d3ac:	ldr	r1, [r4, #4]
   1d3b0:	mov	r2, sl
   1d3b4:	mul	r3, r1, r0
   1d3b8:	mov	r0, r6
   1d3bc:	mov	r1, r5
   1d3c0:	bl	11e88 <ReadInt8Data>
   1d3c4:	b	1d298 <ReadDataSlab2+0x4c>
   1d3c8:	ldr	r2, [r8]
   1d3cc:	cmp	r2, #1
   1d3d0:	bne	1d5bc <ReadDataSlab2+0x370>
   1d3d4:	ldr	r1, [r7]
   1d3d8:	ldr	r0, [r4]
   1d3dc:	cmp	r0, r1
   1d3e0:	bne	1d9a4 <ReadDataSlab2+0x758>
   1d3e4:	ldr	r1, [r8, #4]
   1d3e8:	cmp	r1, #1
   1d3ec:	bne	1d9a0 <ReadDataSlab2+0x754>
   1d3f0:	ldr	r1, [r4, #4]
   1d3f4:	mov	r2, sl
   1d3f8:	mul	r3, r1, r0
   1d3fc:	mov	r0, r6
   1d400:	mov	r1, r5
   1d404:	bl	13934 <ReadUInt8Data>
   1d408:	b	1d298 <ReadDataSlab2+0x4c>
   1d40c:	ldr	r2, [r8]
   1d410:	cmp	r2, #1
   1d414:	bne	1d5c4 <ReadDataSlab2+0x378>
   1d418:	ldr	r1, [r7]
   1d41c:	ldr	r0, [r4]
   1d420:	cmp	r0, r1
   1d424:	bne	1dadc <ReadDataSlab2+0x890>
   1d428:	ldr	r1, [r8, #4]
   1d42c:	cmp	r1, #1
   1d430:	bne	1dad8 <ReadDataSlab2+0x88c>
   1d434:	ldr	r1, [r4, #4]
   1d438:	mov	r2, sl
   1d43c:	mul	r3, r1, r0
   1d440:	mov	r0, r6
   1d444:	mov	r1, r5
   1d448:	bl	e9a0 <ReadInt16Data>
   1d44c:	b	1d298 <ReadDataSlab2+0x4c>
   1d450:	ldr	r2, [r8]
   1d454:	cmp	r2, #1
   1d458:	bne	1d5cc <ReadDataSlab2+0x380>
   1d45c:	ldr	r1, [r7]
   1d460:	ldr	r0, [r4]
   1d464:	cmp	r0, r1
   1d468:	bne	1dc14 <ReadDataSlab2+0x9c8>
   1d46c:	ldr	r1, [r8, #4]
   1d470:	cmp	r1, #1
   1d474:	bne	1dc10 <ReadDataSlab2+0x9c4>
   1d478:	ldr	r1, [r4, #4]
   1d47c:	mov	r2, sl
   1d480:	mul	r3, r1, r0
   1d484:	mov	r0, r6
   1d488:	mov	r1, r5
   1d48c:	bl	10414 <ReadUInt16Data>
   1d490:	b	1d298 <ReadDataSlab2+0x4c>
   1d494:	ldr	r2, [r8]
   1d498:	cmp	r2, #1
   1d49c:	bne	1d5d4 <ReadDataSlab2+0x388>
   1d4a0:	ldr	r1, [r7]
   1d4a4:	ldr	r0, [r4]
   1d4a8:	cmp	r0, r1
   1d4ac:	bne	1dd4c <ReadDataSlab2+0xb00>
   1d4b0:	ldr	r1, [r8, #4]
   1d4b4:	cmp	r1, #1
   1d4b8:	bne	1dd48 <ReadDataSlab2+0xafc>
   1d4bc:	ldr	r1, [r4, #4]
   1d4c0:	mov	r2, sl
   1d4c4:	mul	r3, r1, r0
   1d4c8:	mov	r0, r6
   1d4cc:	mov	r1, r5
   1d4d0:	bl	b4d8 <ReadInt32Data>
   1d4d4:	b	1d298 <ReadDataSlab2+0x4c>
   1d4d8:	ldr	r2, [r8]
   1d4dc:	cmp	r2, #1
   1d4e0:	bne	1d5dc <ReadDataSlab2+0x390>
   1d4e4:	ldr	r1, [r7]
   1d4e8:	ldr	r0, [r4]
   1d4ec:	cmp	r0, r1
   1d4f0:	bne	1de84 <ReadDataSlab2+0xc38>
   1d4f4:	ldr	r1, [r8, #4]
   1d4f8:	cmp	r1, #1
   1d4fc:	bne	1de80 <ReadDataSlab2+0xc34>
   1d500:	ldr	r1, [r4, #4]
   1d504:	mov	r2, sl
   1d508:	mul	r3, r1, r0
   1d50c:	mov	r0, r6
   1d510:	mov	r1, r5
   1d514:	bl	cf3c <ReadUInt32Data>
   1d518:	b	1d298 <ReadDataSlab2+0x4c>
   1d51c:	ldr	r2, [r8]
   1d520:	cmp	r2, #1
   1d524:	bne	1d5e4 <ReadDataSlab2+0x398>
   1d528:	ldr	r1, [r7]
   1d52c:	ldr	r0, [r4]
   1d530:	cmp	r0, r1
   1d534:	bne	1dfbc <ReadDataSlab2+0xd70>
   1d538:	ldr	r1, [r8, #4]
   1d53c:	cmp	r1, #1
   1d540:	bne	1dfb8 <ReadDataSlab2+0xd6c>
   1d544:	ldr	r1, [r4, #4]
   1d548:	mov	r2, sl
   1d54c:	mul	r3, r1, r0
   1d550:	mov	r0, r6
   1d554:	mov	r1, r5
   1d558:	bl	983c <ReadUInt64Data>
   1d55c:	b	1d298 <ReadDataSlab2+0x4c>
   1d560:	ldr	r2, [r8]
   1d564:	cmp	r2, #1
   1d568:	bne	1d5ec <ReadDataSlab2+0x3a0>
   1d56c:	ldr	r1, [r7]
   1d570:	ldr	r0, [r4]
   1d574:	cmp	r0, r1
   1d578:	bne	1e0f4 <ReadDataSlab2+0xea8>
   1d57c:	ldr	r1, [r8, #4]
   1d580:	cmp	r1, #1
   1d584:	bne	1e0f0 <ReadDataSlab2+0xea4>
   1d588:	ldr	r1, [r4, #4]
   1d58c:	mov	r2, sl
   1d590:	mul	r3, r1, r0
   1d594:	mov	r0, r6
   1d598:	mov	r1, r5
   1d59c:	bl	7ba0 <ReadInt64Data>
   1d5a0:	b	1d298 <ReadDataSlab2+0x4c>
   1d5a4:	ldr	r1, [r7]
   1d5a8:	b	1d5f8 <ReadDataSlab2+0x3ac>
   1d5ac:	ldr	r1, [r7]
   1d5b0:	b	1d734 <ReadDataSlab2+0x4e8>
   1d5b4:	ldr	r1, [r7]
   1d5b8:	b	1d86c <ReadDataSlab2+0x620>
   1d5bc:	ldr	r1, [r7]
   1d5c0:	b	1d9a4 <ReadDataSlab2+0x758>
   1d5c4:	ldr	r1, [r7]
   1d5c8:	b	1dadc <ReadDataSlab2+0x890>
   1d5cc:	ldr	r1, [r7]
   1d5d0:	b	1dc14 <ReadDataSlab2+0x9c8>
   1d5d4:	ldr	r1, [r7]
   1d5d8:	b	1dd4c <ReadDataSlab2+0xb00>
   1d5dc:	ldr	r1, [r7]
   1d5e0:	b	1de84 <ReadDataSlab2+0xc38>
   1d5e4:	ldr	r1, [r7]
   1d5e8:	b	1dfbc <ReadDataSlab2+0xd70>
   1d5ec:	ldr	r1, [r7]
   1d5f0:	b	1e0f4 <ReadDataSlab2+0xea8>
   1d5f4:	mov	r1, r0
   1d5f8:	ldr	r0, [r6]
   1d5fc:	ldr	r8, [r8, #4]
   1d600:	str	r1, [sp, #8]
   1d604:	str	r2, [sp, #12]
   1d608:	bl	1858 <ftell@plt>
   1d60c:	cmn	r0, #1
   1d610:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d614:	ldr	r0, [fp, #12]
   1d618:	ldr	r1, [sp, #16]
   1d61c:	mov	r2, #1
   1d620:	ldr	r0, [r0, #4]
   1d624:	mul	r0, r0, r1
   1d628:	ldr	r1, [r7]
   1d62c:	mul	r1, r0, r1
   1d630:	ldr	r0, [r6]
   1d634:	bl	1a68 <fseek@plt>
   1d638:	ldr	r0, [r4, #4]
   1d63c:	cmp	r0, #1
   1d640:	blt	1d298 <ReadDataSlab2+0x4c>
   1d644:	ldr	r0, [sp, #12]
   1d648:	ldr	r1, [sp, #16]
   1d64c:	mov	r4, #0
   1d650:	sub	r0, r0, #1
   1d654:	mul	r7, r0, r1
   1d658:	mul	r0, r8, r1
   1d65c:	ldr	r1, [sp, #8]
   1d660:	mul	r0, r0, r1
   1d664:	str	r0, [sp, #8]
   1d668:	ldr	r0, [r6]
   1d66c:	bl	1858 <ftell@plt>
   1d670:	cmn	r0, #1
   1d674:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d678:	mov	r9, r0
   1d67c:	ldr	r0, [fp, #12]
   1d680:	ldr	r1, [sp, #16]
   1d684:	mov	r2, #1
   1d688:	str	r4, [sp, #12]
   1d68c:	ldr	r0, [r0]
   1d690:	mul	r1, r0, r1
   1d694:	ldr	r0, [r6]
   1d698:	bl	1a68 <fseek@plt>
   1d69c:	ldr	r4, [fp, #20]
   1d6a0:	ldr	r0, [r4]
   1d6a4:	cmp	r0, #1
   1d6a8:	blt	1d6e8 <ReadDataSlab2+0x49c>
   1d6ac:	mov	r8, #0
   1d6b0:	mov	r0, r6
   1d6b4:	mov	r1, r5
   1d6b8:	mov	r2, sl
   1d6bc:	mov	r3, #1
   1d6c0:	bl	377c <ReadDoubleData>
   1d6c4:	ldr	r0, [r6]
   1d6c8:	mov	r1, r7
   1d6cc:	mov	r2, #1
   1d6d0:	bl	1a68 <fseek@plt>
   1d6d4:	ldr	r0, [r4]
   1d6d8:	add	r8, r8, #1
   1d6dc:	add	r5, r5, #8
   1d6e0:	cmp	r8, r0
   1d6e4:	blt	1d6b0 <ReadDataSlab2+0x464>
   1d6e8:	ldr	r0, [r6]
   1d6ec:	bl	1858 <ftell@plt>
   1d6f0:	cmn	r0, #1
   1d6f4:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d6f8:	ldr	r1, [sp, #8]
   1d6fc:	mov	r2, #1
   1d700:	add	r1, r9, r1
   1d704:	sub	r1, r1, r0
   1d708:	ldr	r0, [r6]
   1d70c:	bl	1a68 <fseek@plt>
   1d710:	mov	r0, r4
   1d714:	ldr	r4, [sp, #12]
   1d718:	mov	r9, #0
   1d71c:	ldr	r0, [r0, #4]
   1d720:	add	r4, r4, #1
   1d724:	cmp	r4, r0
   1d728:	blt	1d668 <ReadDataSlab2+0x41c>
   1d72c:	b	1d298 <ReadDataSlab2+0x4c>
   1d730:	mov	r1, r0
   1d734:	ldr	r0, [r6]
   1d738:	ldr	r8, [r8, #4]
   1d73c:	str	r1, [sp, #8]
   1d740:	str	r2, [sp, #12]
   1d744:	bl	1858 <ftell@plt>
   1d748:	cmn	r0, #1
   1d74c:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d750:	ldr	r0, [fp, #12]
   1d754:	ldr	r1, [sp, #16]
   1d758:	mov	r2, #1
   1d75c:	ldr	r0, [r0, #4]
   1d760:	mul	r0, r0, r1
   1d764:	ldr	r1, [r7]
   1d768:	mul	r1, r0, r1
   1d76c:	ldr	r0, [r6]
   1d770:	bl	1a68 <fseek@plt>
   1d774:	ldr	r0, [r4, #4]
   1d778:	cmp	r0, #1
   1d77c:	blt	1d298 <ReadDataSlab2+0x4c>
   1d780:	ldr	r0, [sp, #12]
   1d784:	ldr	r1, [sp, #16]
   1d788:	mov	r4, #0
   1d78c:	sub	r0, r0, #1
   1d790:	mul	r7, r0, r1
   1d794:	mul	r0, r8, r1
   1d798:	ldr	r1, [sp, #8]
   1d79c:	mul	r0, r0, r1
   1d7a0:	str	r0, [sp, #4]
   1d7a4:	ldr	r0, [r6]
   1d7a8:	bl	1858 <ftell@plt>
   1d7ac:	cmn	r0, #1
   1d7b0:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d7b4:	str	r0, [sp, #8]
   1d7b8:	ldr	r0, [fp, #12]
   1d7bc:	ldr	r1, [sp, #16]
   1d7c0:	mov	r2, #1
   1d7c4:	str	r4, [sp, #12]
   1d7c8:	ldr	r0, [r0]
   1d7cc:	mul	r1, r0, r1
   1d7d0:	ldr	r0, [r6]
   1d7d4:	bl	1a68 <fseek@plt>
   1d7d8:	ldr	r9, [fp, #20]
   1d7dc:	ldr	r0, [r9]
   1d7e0:	cmp	r0, #1
   1d7e4:	blt	1d824 <ReadDataSlab2+0x5d8>
   1d7e8:	mov	r8, #0
   1d7ec:	mov	r0, r6
   1d7f0:	mov	r1, r5
   1d7f4:	mov	r2, sl
   1d7f8:	mov	r3, #1
   1d7fc:	bl	5fa0 <ReadSingleData>
   1d800:	ldr	r0, [r6]
   1d804:	mov	r1, r7
   1d808:	mov	r2, #1
   1d80c:	bl	1a68 <fseek@plt>
   1d810:	ldr	r0, [r9]
   1d814:	add	r8, r8, #1
   1d818:	add	r5, r5, #4
   1d81c:	cmp	r8, r0
   1d820:	blt	1d7ec <ReadDataSlab2+0x5a0>
   1d824:	ldr	r0, [r6]
   1d828:	bl	1858 <ftell@plt>
   1d82c:	cmn	r0, #1
   1d830:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d834:	ldmib	sp, {r1, r2}
   1d838:	add	r1, r2, r1
   1d83c:	mov	r2, #1
   1d840:	sub	r1, r1, r0
   1d844:	ldr	r0, [r6]
   1d848:	bl	1a68 <fseek@plt>
   1d84c:	ldr	r4, [sp, #12]
   1d850:	ldr	r0, [r9, #4]
   1d854:	mov	r9, #0
   1d858:	add	r4, r4, #1
   1d85c:	cmp	r4, r0
   1d860:	blt	1d7a4 <ReadDataSlab2+0x558>
   1d864:	b	1d298 <ReadDataSlab2+0x4c>
   1d868:	mov	r1, r0
   1d86c:	ldr	r0, [r6]
   1d870:	ldr	r8, [r8, #4]
   1d874:	str	r1, [sp, #8]
   1d878:	str	r2, [sp, #12]
   1d87c:	bl	1858 <ftell@plt>
   1d880:	cmn	r0, #1
   1d884:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d888:	ldr	r0, [fp, #12]
   1d88c:	ldr	r1, [sp, #16]
   1d890:	mov	r2, #1
   1d894:	ldr	r0, [r0, #4]
   1d898:	mul	r0, r0, r1
   1d89c:	ldr	r1, [r7]
   1d8a0:	mul	r1, r0, r1
   1d8a4:	ldr	r0, [r6]
   1d8a8:	bl	1a68 <fseek@plt>
   1d8ac:	ldr	r0, [r4, #4]
   1d8b0:	cmp	r0, #1
   1d8b4:	blt	1d298 <ReadDataSlab2+0x4c>
   1d8b8:	ldr	r0, [sp, #12]
   1d8bc:	ldr	r1, [sp, #16]
   1d8c0:	sub	r0, r0, #1
   1d8c4:	mul	r7, r0, r1
   1d8c8:	mul	r0, r8, r1
   1d8cc:	ldr	r1, [sp, #8]
   1d8d0:	mov	r8, #0
   1d8d4:	mul	r0, r0, r1
   1d8d8:	str	r0, [sp, #8]
   1d8dc:	ldr	r0, [r6]
   1d8e0:	bl	1858 <ftell@plt>
   1d8e4:	cmn	r0, #1
   1d8e8:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d8ec:	mov	r9, r0
   1d8f0:	ldr	r0, [fp, #12]
   1d8f4:	ldr	r1, [sp, #16]
   1d8f8:	mov	r2, #1
   1d8fc:	ldr	r0, [r0]
   1d900:	mul	r1, r0, r1
   1d904:	ldr	r0, [r6]
   1d908:	bl	1a68 <fseek@plt>
   1d90c:	ldr	r4, [fp, #20]
   1d910:	ldr	r0, [r4]
   1d914:	cmp	r0, #1
   1d918:	blt	1d960 <ReadDataSlab2+0x714>
   1d91c:	str	r8, [sp, #12]
   1d920:	mov	r8, #0
   1d924:	add	r1, r5, r8
   1d928:	mov	r0, r6
   1d92c:	mov	r2, sl
   1d930:	mov	r3, #1
   1d934:	bl	11e88 <ReadInt8Data>
   1d938:	ldr	r0, [r6]
   1d93c:	mov	r1, r7
   1d940:	mov	r2, #1
   1d944:	bl	1a68 <fseek@plt>
   1d948:	ldr	r0, [r4]
   1d94c:	add	r8, r8, #1
   1d950:	cmp	r8, r0
   1d954:	blt	1d924 <ReadDataSlab2+0x6d8>
   1d958:	add	r5, r5, r8
   1d95c:	ldr	r8, [sp, #12]
   1d960:	ldr	r0, [r6]
   1d964:	bl	1858 <ftell@plt>
   1d968:	cmn	r0, #1
   1d96c:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d970:	ldr	r1, [sp, #8]
   1d974:	mov	r2, #1
   1d978:	add	r1, r9, r1
   1d97c:	sub	r1, r1, r0
   1d980:	ldr	r0, [r6]
   1d984:	bl	1a68 <fseek@plt>
   1d988:	ldr	r0, [r4, #4]
   1d98c:	add	r8, r8, #1
   1d990:	mov	r9, #0
   1d994:	cmp	r8, r0
   1d998:	blt	1d8dc <ReadDataSlab2+0x690>
   1d99c:	b	1d298 <ReadDataSlab2+0x4c>
   1d9a0:	mov	r1, r0
   1d9a4:	ldr	r0, [r6]
   1d9a8:	ldr	r8, [r8, #4]
   1d9ac:	str	r1, [sp, #8]
   1d9b0:	str	r2, [sp, #12]
   1d9b4:	bl	1858 <ftell@plt>
   1d9b8:	cmn	r0, #1
   1d9bc:	beq	1e228 <ReadDataSlab2+0xfdc>
   1d9c0:	ldr	r0, [fp, #12]
   1d9c4:	ldr	r1, [sp, #16]
   1d9c8:	mov	r2, #1
   1d9cc:	ldr	r0, [r0, #4]
   1d9d0:	mul	r0, r0, r1
   1d9d4:	ldr	r1, [r7]
   1d9d8:	mul	r1, r0, r1
   1d9dc:	ldr	r0, [r6]
   1d9e0:	bl	1a68 <fseek@plt>
   1d9e4:	ldr	r0, [r4, #4]
   1d9e8:	cmp	r0, #1
   1d9ec:	blt	1d298 <ReadDataSlab2+0x4c>
   1d9f0:	ldr	r0, [sp, #12]
   1d9f4:	ldr	r1, [sp, #16]
   1d9f8:	sub	r0, r0, #1
   1d9fc:	mul	r7, r0, r1
   1da00:	mul	r0, r8, r1
   1da04:	ldr	r1, [sp, #8]
   1da08:	mov	r8, #0
   1da0c:	mul	r0, r0, r1
   1da10:	str	r0, [sp, #8]
   1da14:	ldr	r0, [r6]
   1da18:	bl	1858 <ftell@plt>
   1da1c:	cmn	r0, #1
   1da20:	beq	1e228 <ReadDataSlab2+0xfdc>
   1da24:	mov	r9, r0
   1da28:	ldr	r0, [fp, #12]
   1da2c:	ldr	r1, [sp, #16]
   1da30:	mov	r2, #1
   1da34:	ldr	r0, [r0]
   1da38:	mul	r1, r0, r1
   1da3c:	ldr	r0, [r6]
   1da40:	bl	1a68 <fseek@plt>
   1da44:	ldr	r4, [fp, #20]
   1da48:	ldr	r0, [r4]
   1da4c:	cmp	r0, #1
   1da50:	blt	1da98 <ReadDataSlab2+0x84c>
   1da54:	str	r8, [sp, #12]
   1da58:	mov	r8, #0
   1da5c:	add	r1, r5, r8
   1da60:	mov	r0, r6
   1da64:	mov	r2, sl
   1da68:	mov	r3, #1
   1da6c:	bl	13934 <ReadUInt8Data>
   1da70:	ldr	r0, [r6]
   1da74:	mov	r1, r7
   1da78:	mov	r2, #1
   1da7c:	bl	1a68 <fseek@plt>
   1da80:	ldr	r0, [r4]
   1da84:	add	r8, r8, #1
   1da88:	cmp	r8, r0
   1da8c:	blt	1da5c <ReadDataSlab2+0x810>
   1da90:	add	r5, r5, r8
   1da94:	ldr	r8, [sp, #12]
   1da98:	ldr	r0, [r6]
   1da9c:	bl	1858 <ftell@plt>
   1daa0:	cmn	r0, #1
   1daa4:	beq	1e228 <ReadDataSlab2+0xfdc>
   1daa8:	ldr	r1, [sp, #8]
   1daac:	mov	r2, #1
   1dab0:	add	r1, r9, r1
   1dab4:	sub	r1, r1, r0
   1dab8:	ldr	r0, [r6]
   1dabc:	bl	1a68 <fseek@plt>
   1dac0:	ldr	r0, [r4, #4]
   1dac4:	add	r8, r8, #1
   1dac8:	mov	r9, #0
   1dacc:	cmp	r8, r0
   1dad0:	blt	1da14 <ReadDataSlab2+0x7c8>
   1dad4:	b	1d298 <ReadDataSlab2+0x4c>
   1dad8:	mov	r1, r0
   1dadc:	ldr	r0, [r6]
   1dae0:	ldr	r8, [r8, #4]
   1dae4:	str	r1, [sp, #8]
   1dae8:	str	r2, [sp, #12]
   1daec:	bl	1858 <ftell@plt>
   1daf0:	cmn	r0, #1
   1daf4:	beq	1e228 <ReadDataSlab2+0xfdc>
   1daf8:	ldr	r0, [fp, #12]
   1dafc:	ldr	r1, [sp, #16]
   1db00:	mov	r2, #1
   1db04:	ldr	r0, [r0, #4]
   1db08:	mul	r0, r0, r1
   1db0c:	ldr	r1, [r7]
   1db10:	mul	r1, r0, r1
   1db14:	ldr	r0, [r6]
   1db18:	bl	1a68 <fseek@plt>
   1db1c:	ldr	r0, [r4, #4]
   1db20:	cmp	r0, #1
   1db24:	blt	1d298 <ReadDataSlab2+0x4c>
   1db28:	ldr	r0, [sp, #12]
   1db2c:	ldr	r1, [sp, #16]
   1db30:	mov	r4, #0
   1db34:	sub	r0, r0, #1
   1db38:	mul	r7, r0, r1
   1db3c:	mul	r0, r8, r1
   1db40:	ldr	r1, [sp, #8]
   1db44:	mul	r0, r0, r1
   1db48:	str	r0, [sp, #4]
   1db4c:	ldr	r0, [r6]
   1db50:	bl	1858 <ftell@plt>
   1db54:	cmn	r0, #1
   1db58:	beq	1e228 <ReadDataSlab2+0xfdc>
   1db5c:	str	r0, [sp, #8]
   1db60:	ldr	r0, [fp, #12]
   1db64:	ldr	r1, [sp, #16]
   1db68:	mov	r2, #1
   1db6c:	str	r4, [sp, #12]
   1db70:	ldr	r0, [r0]
   1db74:	mul	r1, r0, r1
   1db78:	ldr	r0, [r6]
   1db7c:	bl	1a68 <fseek@plt>
   1db80:	ldr	r9, [fp, #20]
   1db84:	ldr	r0, [r9]
   1db88:	cmp	r0, #1
   1db8c:	blt	1dbcc <ReadDataSlab2+0x980>
   1db90:	mov	r8, #0
   1db94:	mov	r0, r6
   1db98:	mov	r1, r5
   1db9c:	mov	r2, sl
   1dba0:	mov	r3, #1
   1dba4:	bl	e9a0 <ReadInt16Data>
   1dba8:	ldr	r0, [r6]
   1dbac:	mov	r1, r7
   1dbb0:	mov	r2, #1
   1dbb4:	bl	1a68 <fseek@plt>
   1dbb8:	ldr	r0, [r9]
   1dbbc:	add	r8, r8, #1
   1dbc0:	add	r5, r5, #2
   1dbc4:	cmp	r8, r0
   1dbc8:	blt	1db94 <ReadDataSlab2+0x948>
   1dbcc:	ldr	r0, [r6]
   1dbd0:	bl	1858 <ftell@plt>
   1dbd4:	cmn	r0, #1
   1dbd8:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dbdc:	ldmib	sp, {r1, r2}
   1dbe0:	add	r1, r2, r1
   1dbe4:	mov	r2, #1
   1dbe8:	sub	r1, r1, r0
   1dbec:	ldr	r0, [r6]
   1dbf0:	bl	1a68 <fseek@plt>
   1dbf4:	ldr	r4, [sp, #12]
   1dbf8:	ldr	r0, [r9, #4]
   1dbfc:	mov	r9, #0
   1dc00:	add	r4, r4, #1
   1dc04:	cmp	r4, r0
   1dc08:	blt	1db4c <ReadDataSlab2+0x900>
   1dc0c:	b	1d298 <ReadDataSlab2+0x4c>
   1dc10:	mov	r1, r0
   1dc14:	ldr	r0, [r6]
   1dc18:	ldr	r8, [r8, #4]
   1dc1c:	str	r1, [sp, #8]
   1dc20:	str	r2, [sp, #12]
   1dc24:	bl	1858 <ftell@plt>
   1dc28:	cmn	r0, #1
   1dc2c:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dc30:	ldr	r0, [fp, #12]
   1dc34:	ldr	r1, [sp, #16]
   1dc38:	mov	r2, #1
   1dc3c:	ldr	r0, [r0, #4]
   1dc40:	mul	r0, r0, r1
   1dc44:	ldr	r1, [r7]
   1dc48:	mul	r1, r0, r1
   1dc4c:	ldr	r0, [r6]
   1dc50:	bl	1a68 <fseek@plt>
   1dc54:	ldr	r0, [r4, #4]
   1dc58:	cmp	r0, #1
   1dc5c:	blt	1d298 <ReadDataSlab2+0x4c>
   1dc60:	ldr	r0, [sp, #12]
   1dc64:	ldr	r1, [sp, #16]
   1dc68:	mov	r4, #0
   1dc6c:	sub	r0, r0, #1
   1dc70:	mul	r7, r0, r1
   1dc74:	mul	r0, r8, r1
   1dc78:	ldr	r1, [sp, #8]
   1dc7c:	mul	r0, r0, r1
   1dc80:	str	r0, [sp, #4]
   1dc84:	ldr	r0, [r6]
   1dc88:	bl	1858 <ftell@plt>
   1dc8c:	cmn	r0, #1
   1dc90:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dc94:	str	r0, [sp, #8]
   1dc98:	ldr	r0, [fp, #12]
   1dc9c:	ldr	r1, [sp, #16]
   1dca0:	mov	r2, #1
   1dca4:	str	r4, [sp, #12]
   1dca8:	ldr	r0, [r0]
   1dcac:	mul	r1, r0, r1
   1dcb0:	ldr	r0, [r6]
   1dcb4:	bl	1a68 <fseek@plt>
   1dcb8:	ldr	r9, [fp, #20]
   1dcbc:	ldr	r0, [r9]
   1dcc0:	cmp	r0, #1
   1dcc4:	blt	1dd04 <ReadDataSlab2+0xab8>
   1dcc8:	mov	r8, #0
   1dccc:	mov	r0, r6
   1dcd0:	mov	r1, r5
   1dcd4:	mov	r2, sl
   1dcd8:	mov	r3, #1
   1dcdc:	bl	10414 <ReadUInt16Data>
   1dce0:	ldr	r0, [r6]
   1dce4:	mov	r1, r7
   1dce8:	mov	r2, #1
   1dcec:	bl	1a68 <fseek@plt>
   1dcf0:	ldr	r0, [r9]
   1dcf4:	add	r8, r8, #1
   1dcf8:	add	r5, r5, #2
   1dcfc:	cmp	r8, r0
   1dd00:	blt	1dccc <ReadDataSlab2+0xa80>
   1dd04:	ldr	r0, [r6]
   1dd08:	bl	1858 <ftell@plt>
   1dd0c:	cmn	r0, #1
   1dd10:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dd14:	ldmib	sp, {r1, r2}
   1dd18:	add	r1, r2, r1
   1dd1c:	mov	r2, #1
   1dd20:	sub	r1, r1, r0
   1dd24:	ldr	r0, [r6]
   1dd28:	bl	1a68 <fseek@plt>
   1dd2c:	ldr	r4, [sp, #12]
   1dd30:	ldr	r0, [r9, #4]
   1dd34:	mov	r9, #0
   1dd38:	add	r4, r4, #1
   1dd3c:	cmp	r4, r0
   1dd40:	blt	1dc84 <ReadDataSlab2+0xa38>
   1dd44:	b	1d298 <ReadDataSlab2+0x4c>
   1dd48:	mov	r1, r0
   1dd4c:	ldr	r0, [r6]
   1dd50:	ldr	r8, [r8, #4]
   1dd54:	str	r1, [sp, #8]
   1dd58:	str	r2, [sp, #12]
   1dd5c:	bl	1858 <ftell@plt>
   1dd60:	cmn	r0, #1
   1dd64:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dd68:	ldr	r0, [fp, #12]
   1dd6c:	ldr	r1, [sp, #16]
   1dd70:	mov	r2, #1
   1dd74:	ldr	r0, [r0, #4]
   1dd78:	mul	r0, r0, r1
   1dd7c:	ldr	r1, [r7]
   1dd80:	mul	r1, r0, r1
   1dd84:	ldr	r0, [r6]
   1dd88:	bl	1a68 <fseek@plt>
   1dd8c:	ldr	r0, [r4, #4]
   1dd90:	cmp	r0, #1
   1dd94:	blt	1d298 <ReadDataSlab2+0x4c>
   1dd98:	ldr	r0, [sp, #12]
   1dd9c:	ldr	r1, [sp, #16]
   1dda0:	sub	r0, r0, #1
   1dda4:	mul	r7, r0, r1
   1dda8:	mul	r0, r8, r1
   1ddac:	ldr	r1, [sp, #8]
   1ddb0:	mov	r8, #0
   1ddb4:	mul	r0, r0, r1
   1ddb8:	str	r0, [sp, #8]
   1ddbc:	ldr	r0, [r6]
   1ddc0:	bl	1858 <ftell@plt>
   1ddc4:	cmn	r0, #1
   1ddc8:	beq	1e228 <ReadDataSlab2+0xfdc>
   1ddcc:	mov	r9, r0
   1ddd0:	ldr	r0, [fp, #12]
   1ddd4:	ldr	r1, [sp, #16]
   1ddd8:	mov	r2, #1
   1dddc:	ldr	r0, [r0]
   1dde0:	mul	r1, r0, r1
   1dde4:	ldr	r0, [r6]
   1dde8:	bl	1a68 <fseek@plt>
   1ddec:	ldr	r4, [fp, #20]
   1ddf0:	str	r8, [sp, #12]
   1ddf4:	ldr	r0, [r4]
   1ddf8:	cmp	r0, #1
   1ddfc:	blt	1de3c <ReadDataSlab2+0xbf0>
   1de00:	mov	r8, #0
   1de04:	mov	r0, r6
   1de08:	mov	r1, r5
   1de0c:	mov	r2, sl
   1de10:	mov	r3, #1
   1de14:	bl	b4d8 <ReadInt32Data>
   1de18:	ldr	r0, [r6]
   1de1c:	mov	r1, r7
   1de20:	mov	r2, #1
   1de24:	bl	1a68 <fseek@plt>
   1de28:	ldr	r0, [r4]
   1de2c:	add	r8, r8, #1
   1de30:	add	r5, r5, #4
   1de34:	cmp	r8, r0
   1de38:	blt	1de04 <ReadDataSlab2+0xbb8>
   1de3c:	ldr	r0, [r6]
   1de40:	bl	1858 <ftell@plt>
   1de44:	cmn	r0, #1
   1de48:	beq	1e228 <ReadDataSlab2+0xfdc>
   1de4c:	ldr	r1, [sp, #8]
   1de50:	mov	r2, #1
   1de54:	add	r1, r9, r1
   1de58:	sub	r1, r1, r0
   1de5c:	ldr	r0, [r6]
   1de60:	bl	1a68 <fseek@plt>
   1de64:	ldr	r8, [sp, #12]
   1de68:	ldr	r0, [r4, #4]
   1de6c:	mov	r9, #0
   1de70:	add	r8, r8, #1
   1de74:	cmp	r8, r0
   1de78:	blt	1ddbc <ReadDataSlab2+0xb70>
   1de7c:	b	1d298 <ReadDataSlab2+0x4c>
   1de80:	mov	r1, r0
   1de84:	ldr	r0, [r6]
   1de88:	ldr	r8, [r8, #4]
   1de8c:	str	r1, [sp, #8]
   1de90:	str	r2, [sp, #12]
   1de94:	bl	1858 <ftell@plt>
   1de98:	cmn	r0, #1
   1de9c:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dea0:	ldr	r0, [fp, #12]
   1dea4:	ldr	r1, [sp, #16]
   1dea8:	mov	r2, #1
   1deac:	ldr	r0, [r0, #4]
   1deb0:	mul	r0, r0, r1
   1deb4:	ldr	r1, [r7]
   1deb8:	mul	r1, r0, r1
   1debc:	ldr	r0, [r6]
   1dec0:	bl	1a68 <fseek@plt>
   1dec4:	ldr	r0, [r4, #4]
   1dec8:	cmp	r0, #1
   1decc:	blt	1d298 <ReadDataSlab2+0x4c>
   1ded0:	ldr	r0, [sp, #12]
   1ded4:	ldr	r1, [sp, #16]
   1ded8:	mov	r4, #0
   1dedc:	sub	r0, r0, #1
   1dee0:	mul	r7, r0, r1
   1dee4:	mul	r0, r8, r1
   1dee8:	ldr	r1, [sp, #8]
   1deec:	mul	r0, r0, r1
   1def0:	str	r0, [sp, #4]
   1def4:	ldr	r0, [r6]
   1def8:	bl	1858 <ftell@plt>
   1defc:	cmn	r0, #1
   1df00:	beq	1e228 <ReadDataSlab2+0xfdc>
   1df04:	str	r0, [sp, #8]
   1df08:	ldr	r0, [fp, #12]
   1df0c:	ldr	r1, [sp, #16]
   1df10:	mov	r2, #1
   1df14:	str	r4, [sp, #12]
   1df18:	ldr	r0, [r0]
   1df1c:	mul	r1, r0, r1
   1df20:	ldr	r0, [r6]
   1df24:	bl	1a68 <fseek@plt>
   1df28:	ldr	r9, [fp, #20]
   1df2c:	ldr	r0, [r9]
   1df30:	cmp	r0, #1
   1df34:	blt	1df74 <ReadDataSlab2+0xd28>
   1df38:	mov	r8, #0
   1df3c:	mov	r0, r6
   1df40:	mov	r1, r5
   1df44:	mov	r2, sl
   1df48:	mov	r3, #1
   1df4c:	bl	cf3c <ReadUInt32Data>
   1df50:	ldr	r0, [r6]
   1df54:	mov	r1, r7
   1df58:	mov	r2, #1
   1df5c:	bl	1a68 <fseek@plt>
   1df60:	ldr	r0, [r9]
   1df64:	add	r8, r8, #1
   1df68:	add	r5, r5, #4
   1df6c:	cmp	r8, r0
   1df70:	blt	1df3c <ReadDataSlab2+0xcf0>
   1df74:	ldr	r0, [r6]
   1df78:	bl	1858 <ftell@plt>
   1df7c:	cmn	r0, #1
   1df80:	beq	1e228 <ReadDataSlab2+0xfdc>
   1df84:	ldmib	sp, {r1, r2}
   1df88:	add	r1, r2, r1
   1df8c:	mov	r2, #1
   1df90:	sub	r1, r1, r0
   1df94:	ldr	r0, [r6]
   1df98:	bl	1a68 <fseek@plt>
   1df9c:	ldr	r4, [sp, #12]
   1dfa0:	ldr	r0, [r9, #4]
   1dfa4:	mov	r9, #0
   1dfa8:	add	r4, r4, #1
   1dfac:	cmp	r4, r0
   1dfb0:	blt	1def4 <ReadDataSlab2+0xca8>
   1dfb4:	b	1d298 <ReadDataSlab2+0x4c>
   1dfb8:	mov	r1, r0
   1dfbc:	ldr	r0, [r6]
   1dfc0:	ldr	r8, [r8, #4]
   1dfc4:	str	r1, [sp, #8]
   1dfc8:	str	r2, [sp, #12]
   1dfcc:	bl	1858 <ftell@plt>
   1dfd0:	cmn	r0, #1
   1dfd4:	beq	1e228 <ReadDataSlab2+0xfdc>
   1dfd8:	ldr	r0, [fp, #12]
   1dfdc:	ldr	r1, [sp, #16]
   1dfe0:	mov	r2, #1
   1dfe4:	ldr	r0, [r0, #4]
   1dfe8:	mul	r0, r0, r1
   1dfec:	ldr	r1, [r7]
   1dff0:	mul	r1, r0, r1
   1dff4:	ldr	r0, [r6]
   1dff8:	bl	1a68 <fseek@plt>
   1dffc:	ldr	r0, [r4, #4]
   1e000:	cmp	r0, #1
   1e004:	blt	1d298 <ReadDataSlab2+0x4c>
   1e008:	ldr	r0, [sp, #12]
   1e00c:	ldr	r1, [sp, #16]
   1e010:	mov	r4, #0
   1e014:	sub	r0, r0, #1
   1e018:	mul	r7, r0, r1
   1e01c:	mul	r0, r8, r1
   1e020:	ldr	r1, [sp, #8]
   1e024:	mul	r0, r0, r1
   1e028:	str	r0, [sp, #4]
   1e02c:	ldr	r0, [r6]
   1e030:	bl	1858 <ftell@plt>
   1e034:	cmn	r0, #1
   1e038:	beq	1e228 <ReadDataSlab2+0xfdc>
   1e03c:	str	r0, [sp, #8]
   1e040:	ldr	r0, [fp, #12]
   1e044:	ldr	r1, [sp, #16]
   1e048:	mov	r2, #1
   1e04c:	str	r4, [sp, #12]
   1e050:	ldr	r0, [r0]
   1e054:	mul	r1, r0, r1
   1e058:	ldr	r0, [r6]
   1e05c:	bl	1a68 <fseek@plt>
   1e060:	ldr	r9, [fp, #20]
   1e064:	ldr	r0, [r9]
   1e068:	cmp	r0, #1
   1e06c:	blt	1e0ac <ReadDataSlab2+0xe60>
   1e070:	mov	r8, #0
   1e074:	mov	r0, r6
   1e078:	mov	r1, r5
   1e07c:	mov	r2, sl
   1e080:	mov	r3, #1
   1e084:	bl	983c <ReadUInt64Data>
   1e088:	ldr	r0, [r6]
   1e08c:	mov	r1, r7
   1e090:	mov	r2, #1
   1e094:	bl	1a68 <fseek@plt>
   1e098:	ldr	r0, [r9]
   1e09c:	add	r8, r8, #1
   1e0a0:	add	r5, r5, #8
   1e0a4:	cmp	r8, r0
   1e0a8:	blt	1e074 <ReadDataSlab2+0xe28>
   1e0ac:	ldr	r0, [r6]
   1e0b0:	bl	1858 <ftell@plt>
   1e0b4:	cmn	r0, #1
   1e0b8:	beq	1e228 <ReadDataSlab2+0xfdc>
   1e0bc:	ldmib	sp, {r1, r2}
   1e0c0:	add	r1, r2, r1
   1e0c4:	mov	r2, #1
   1e0c8:	sub	r1, r1, r0
   1e0cc:	ldr	r0, [r6]
   1e0d0:	bl	1a68 <fseek@plt>
   1e0d4:	ldr	r4, [sp, #12]
   1e0d8:	ldr	r0, [r9, #4]
   1e0dc:	mov	r9, #0
   1e0e0:	add	r4, r4, #1
   1e0e4:	cmp	r4, r0
   1e0e8:	blt	1e02c <ReadDataSlab2+0xde0>
   1e0ec:	b	1d298 <ReadDataSlab2+0x4c>
   1e0f0:	mov	r1, r0
   1e0f4:	ldr	r0, [r6]
   1e0f8:	ldr	r8, [r8, #4]
   1e0fc:	str	r1, [sp, #8]
   1e100:	str	r2, [sp, #12]
   1e104:	bl	1858 <ftell@plt>
   1e108:	cmn	r0, #1
   1e10c:	beq	1e228 <ReadDataSlab2+0xfdc>
   1e110:	ldr	r0, [fp, #12]
   1e114:	ldr	r1, [sp, #16]
   1e118:	mov	r2, #1
   1e11c:	ldr	r0, [r0, #4]
   1e120:	mul	r0, r0, r1
   1e124:	ldr	r1, [r7]
   1e128:	mul	r1, r0, r1
   1e12c:	ldr	r0, [r6]
   1e130:	bl	1a68 <fseek@plt>
   1e134:	ldr	r0, [r4, #4]
   1e138:	cmp	r0, #1
   1e13c:	blt	1d298 <ReadDataSlab2+0x4c>
   1e140:	ldr	r0, [sp, #12]
   1e144:	ldr	r1, [sp, #16]
   1e148:	sub	r0, r0, #1
   1e14c:	mul	r7, r0, r1
   1e150:	mul	r0, r8, r1
   1e154:	ldr	r1, [sp, #8]
   1e158:	mov	r8, #0
   1e15c:	mul	r0, r0, r1
   1e160:	str	r0, [sp, #8]
   1e164:	ldr	r0, [r6]
   1e168:	bl	1858 <ftell@plt>
   1e16c:	cmn	r0, #1
   1e170:	beq	1e228 <ReadDataSlab2+0xfdc>
   1e174:	mov	r9, r0
   1e178:	ldr	r0, [fp, #12]
   1e17c:	ldr	r1, [sp, #16]
   1e180:	mov	r2, #1
   1e184:	ldr	r0, [r0]
   1e188:	mul	r1, r0, r1
   1e18c:	ldr	r0, [r6]
   1e190:	bl	1a68 <fseek@plt>
   1e194:	ldr	r4, [fp, #20]
   1e198:	str	r8, [sp, #12]
   1e19c:	ldr	r0, [r4]
   1e1a0:	cmp	r0, #1
   1e1a4:	blt	1e1e4 <ReadDataSlab2+0xf98>
   1e1a8:	mov	r8, #0
   1e1ac:	mov	r0, r6
   1e1b0:	mov	r1, r5
   1e1b4:	mov	r2, sl
   1e1b8:	mov	r3, #1
   1e1bc:	bl	7ba0 <ReadInt64Data>
   1e1c0:	ldr	r0, [r6]
   1e1c4:	mov	r1, r7
   1e1c8:	mov	r2, #1
   1e1cc:	bl	1a68 <fseek@plt>
   1e1d0:	ldr	r0, [r4]
   1e1d4:	add	r8, r8, #1
   1e1d8:	add	r5, r5, #8
   1e1dc:	cmp	r8, r0
   1e1e0:	blt	1e1ac <ReadDataSlab2+0xf60>
   1e1e4:	ldr	r0, [r6]
   1e1e8:	bl	1858 <ftell@plt>
   1e1ec:	cmn	r0, #1
   1e1f0:	beq	1e228 <ReadDataSlab2+0xfdc>
   1e1f4:	ldr	r1, [sp, #8]
   1e1f8:	mov	r2, #1
   1e1fc:	add	r1, r9, r1
   1e200:	sub	r1, r1, r0
   1e204:	ldr	r0, [r6]
   1e208:	bl	1a68 <fseek@plt>
   1e20c:	ldr	r8, [sp, #12]
   1e210:	ldr	r0, [r4, #4]
   1e214:	mov	r9, #0
   1e218:	add	r8, r8, #1
   1e21c:	cmp	r8, r0
   1e220:	blt	1e164 <ReadDataSlab2+0xf18>
   1e224:	b	1d298 <ReadDataSlab2+0x4c>
   1e228:	ldr	r0, [pc, #12]	; 1e23c <ReadDataSlab2+0xff0>
   1e22c:	add	r0, pc, r0
   1e230:	bl	19cc <Mat_Critical@plt>
   1e234:	mvn	r9, #0
   1e238:	b	1d298 <ReadDataSlab2+0x4c>
   1e23c:	.word	0x0002d900

0001e240 <ReadCompressedDataSlab1>:
   1e240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e244:	add	fp, sp, #28
   1e248:	sub	sp, sp, #68	; 0x44
   1e24c:	vmov.i32	q8, #0	; 0x00000000
   1e250:	mov	r4, r2
   1e254:	add	r2, sp, #8
   1e258:	mov	r6, r0
   1e25c:	mov	r5, r3
   1e260:	mov	r0, #52	; 0x34
   1e264:	mov	r7, #0
   1e268:	mov	r3, r2
   1e26c:	cmp	r6, #0
   1e270:	str	r7, [sp, #56]	; 0x38
   1e274:	cmpne	r4, #0
   1e278:	vst1.64	{d16-d17}, [r3], r0
   1e27c:	add	r0, r2, #32
   1e280:	vst1.64	{d16-d17}, [r0]
   1e284:	add	r0, r2, #16
   1e288:	str	r7, [r3]
   1e28c:	vst1.64	{d16-d17}, [r0]
   1e290:	bne	1e2a0 <ReadCompressedDataSlab1+0x60>
   1e294:	mov	r0, r7
   1e298:	sub	sp, fp, #28
   1e29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2a0:	ldr	r0, [r6]
   1e2a4:	cmp	r0, #0
   1e2a8:	beq	1e294 <ReadCompressedDataSlab1+0x54>
   1e2ac:	ldr	r9, [fp, #12]
   1e2b0:	ldr	r8, [fp, #8]
   1e2b4:	add	r7, sp, #8
   1e2b8:	mov	r0, r7
   1e2bc:	bl	1960 <inflateCopy@plt>
   1e2c0:	mov	r0, r6
   1e2c4:	mov	r1, r7
   1e2c8:	mov	r2, r8
   1e2cc:	mov	r3, r9
   1e2d0:	bl	2690 <InflateSkipData>
   1e2d4:	sub	r0, r5, #6
   1e2d8:	mov	r7, #0
   1e2dc:	cmp	r0, #9
   1e2e0:	bhi	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e2e4:	ldr	r1, [fp, #16]
   1e2e8:	mov	r9, r8
   1e2ec:	ldr	r8, [fp, #20]
   1e2f0:	sub	r1, r1, #1
   1e2f4:	str	r1, [sp, #4]
   1e2f8:	add	r1, pc, #4
   1e2fc:	ldr	r0, [r1, r0, lsl #2]
   1e300:	add	pc, r1, r0
   1e304:	.word	0x00000028
   1e308:	.word	0x0000008c
   1e30c:	.word	0x000000f0
   1e310:	.word	0x00000154
   1e314:	.word	0x000001b8
   1e318:	.word	0x0000021c
   1e31c:	.word	0x00000280
   1e320:	.word	0x000002e4
   1e324:	.word	0x00000348
   1e328:	.word	0x000003ac
   1e32c:	ldr	r0, [sp, #4]
   1e330:	cmp	r0, #0
   1e334:	beq	1e714 <ReadCompressedDataSlab1+0x4d4>
   1e338:	cmp	r8, #1
   1e33c:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e340:	mov	r7, #0
   1e344:	add	sl, sp, #8
   1e348:	mov	r0, #1
   1e34c:	mov	r1, sl
   1e350:	mov	r2, r4
   1e354:	mov	r3, r9
   1e358:	str	r0, [sp]
   1e35c:	mov	r0, r6
   1e360:	bl	4cb4 <ReadCompressedDoubleData>
   1e364:	ldr	r3, [sp, #4]
   1e368:	mov	r5, r0
   1e36c:	mov	r0, r6
   1e370:	mov	r1, sl
   1e374:	mov	r2, r9
   1e378:	bl	2690 <InflateSkipData>
   1e37c:	add	r7, r5, r7
   1e380:	add	r4, r4, #8
   1e384:	subs	r8, r8, #1
   1e388:	bne	1e348 <ReadCompressedDataSlab1+0x108>
   1e38c:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e390:	ldr	r0, [sp, #4]
   1e394:	cmp	r0, #0
   1e398:	beq	1e730 <ReadCompressedDataSlab1+0x4f0>
   1e39c:	cmp	r8, #1
   1e3a0:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e3a4:	mov	r7, #0
   1e3a8:	add	sl, sp, #8
   1e3ac:	mov	r0, #1
   1e3b0:	mov	r1, sl
   1e3b4:	mov	r2, r4
   1e3b8:	mov	r3, r9
   1e3bc:	str	r0, [sp]
   1e3c0:	mov	r0, r6
   1e3c4:	bl	7638 <ReadCompressedSingleData>
   1e3c8:	ldr	r3, [sp, #4]
   1e3cc:	mov	r5, r0
   1e3d0:	mov	r0, r6
   1e3d4:	mov	r1, sl
   1e3d8:	mov	r2, r9
   1e3dc:	bl	2690 <InflateSkipData>
   1e3e0:	add	r7, r5, r7
   1e3e4:	add	r4, r4, #4
   1e3e8:	subs	r8, r8, #1
   1e3ec:	bne	1e3ac <ReadCompressedDataSlab1+0x16c>
   1e3f0:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e3f4:	ldr	r0, [sp, #4]
   1e3f8:	cmp	r0, #0
   1e3fc:	beq	1e74c <ReadCompressedDataSlab1+0x50c>
   1e400:	cmp	r8, #1
   1e404:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e408:	mov	r7, #0
   1e40c:	mov	r0, #1
   1e410:	add	sl, sp, #8
   1e414:	mov	r2, r4
   1e418:	mov	r3, r9
   1e41c:	str	r0, [sp]
   1e420:	mov	r0, r6
   1e424:	mov	r1, sl
   1e428:	bl	1340c <ReadCompressedInt8Data>
   1e42c:	ldr	r3, [sp, #4]
   1e430:	mov	r5, r0
   1e434:	mov	r0, r6
   1e438:	mov	r1, sl
   1e43c:	mov	r2, r9
   1e440:	bl	2690 <InflateSkipData>
   1e444:	add	r7, r5, r7
   1e448:	add	r4, r4, #1
   1e44c:	subs	r8, r8, #1
   1e450:	bne	1e40c <ReadCompressedDataSlab1+0x1cc>
   1e454:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e458:	ldr	r0, [sp, #4]
   1e45c:	cmp	r0, #0
   1e460:	beq	1e768 <ReadCompressedDataSlab1+0x528>
   1e464:	cmp	r8, #1
   1e468:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e46c:	mov	r7, #0
   1e470:	mov	r0, #1
   1e474:	add	sl, sp, #8
   1e478:	mov	r2, r4
   1e47c:	mov	r3, r9
   1e480:	str	r0, [sp]
   1e484:	mov	r0, r6
   1e488:	mov	r1, sl
   1e48c:	bl	14eb8 <ReadCompressedUInt8Data>
   1e490:	ldr	r3, [sp, #4]
   1e494:	mov	r5, r0
   1e498:	mov	r0, r6
   1e49c:	mov	r1, sl
   1e4a0:	mov	r2, r9
   1e4a4:	bl	2690 <InflateSkipData>
   1e4a8:	add	r7, r5, r7
   1e4ac:	add	r4, r4, #1
   1e4b0:	subs	r8, r8, #1
   1e4b4:	bne	1e470 <ReadCompressedDataSlab1+0x230>
   1e4b8:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e4bc:	ldr	r0, [sp, #4]
   1e4c0:	cmp	r0, #0
   1e4c4:	beq	1e784 <ReadCompressedDataSlab1+0x544>
   1e4c8:	cmp	r8, #1
   1e4cc:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e4d0:	mov	r7, #0
   1e4d4:	add	sl, sp, #8
   1e4d8:	mov	r0, #1
   1e4dc:	mov	r1, sl
   1e4e0:	mov	r2, r4
   1e4e4:	mov	r3, r9
   1e4e8:	str	r0, [sp]
   1e4ec:	mov	r0, r6
   1e4f0:	bl	feec <ReadCompressedInt16Data>
   1e4f4:	ldr	r3, [sp, #4]
   1e4f8:	mov	r5, r0
   1e4fc:	mov	r0, r6
   1e500:	mov	r1, sl
   1e504:	mov	r2, r9
   1e508:	bl	2690 <InflateSkipData>
   1e50c:	add	r7, r5, r7
   1e510:	add	r4, r4, #2
   1e514:	subs	r8, r8, #1
   1e518:	bne	1e4d8 <ReadCompressedDataSlab1+0x298>
   1e51c:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e520:	ldr	r0, [sp, #4]
   1e524:	cmp	r0, #0
   1e528:	beq	1e7a0 <ReadCompressedDataSlab1+0x560>
   1e52c:	cmp	r8, #1
   1e530:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e534:	mov	r7, #0
   1e538:	add	sl, sp, #8
   1e53c:	mov	r0, #1
   1e540:	mov	r1, sl
   1e544:	mov	r2, r4
   1e548:	mov	r3, r9
   1e54c:	str	r0, [sp]
   1e550:	mov	r0, r6
   1e554:	bl	11960 <ReadCompressedUInt16Data>
   1e558:	ldr	r3, [sp, #4]
   1e55c:	mov	r5, r0
   1e560:	mov	r0, r6
   1e564:	mov	r1, sl
   1e568:	mov	r2, r9
   1e56c:	bl	2690 <InflateSkipData>
   1e570:	add	r7, r5, r7
   1e574:	add	r4, r4, #2
   1e578:	subs	r8, r8, #1
   1e57c:	bne	1e53c <ReadCompressedDataSlab1+0x2fc>
   1e580:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e584:	ldr	r0, [sp, #4]
   1e588:	cmp	r0, #0
   1e58c:	beq	1e7bc <ReadCompressedDataSlab1+0x57c>
   1e590:	cmp	r8, #1
   1e594:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e598:	mov	r7, #0
   1e59c:	add	sl, sp, #8
   1e5a0:	mov	r0, #1
   1e5a4:	mov	r1, sl
   1e5a8:	mov	r2, r4
   1e5ac:	mov	r3, r9
   1e5b0:	str	r0, [sp]
   1e5b4:	mov	r0, r6
   1e5b8:	bl	ca14 <ReadCompressedInt32Data>
   1e5bc:	ldr	r3, [sp, #4]
   1e5c0:	mov	r5, r0
   1e5c4:	mov	r0, r6
   1e5c8:	mov	r1, sl
   1e5cc:	mov	r2, r9
   1e5d0:	bl	2690 <InflateSkipData>
   1e5d4:	add	r7, r5, r7
   1e5d8:	add	r4, r4, #4
   1e5dc:	subs	r8, r8, #1
   1e5e0:	bne	1e5a0 <ReadCompressedDataSlab1+0x360>
   1e5e4:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e5e8:	ldr	r0, [sp, #4]
   1e5ec:	cmp	r0, #0
   1e5f0:	beq	1e7d8 <ReadCompressedDataSlab1+0x598>
   1e5f4:	cmp	r8, #1
   1e5f8:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e5fc:	mov	r7, #0
   1e600:	add	sl, sp, #8
   1e604:	mov	r0, #1
   1e608:	mov	r1, sl
   1e60c:	mov	r2, r4
   1e610:	mov	r3, r9
   1e614:	str	r0, [sp]
   1e618:	mov	r0, r6
   1e61c:	bl	e478 <ReadCompressedUInt32Data>
   1e620:	ldr	r3, [sp, #4]
   1e624:	mov	r5, r0
   1e628:	mov	r0, r6
   1e62c:	mov	r1, sl
   1e630:	mov	r2, r9
   1e634:	bl	2690 <InflateSkipData>
   1e638:	add	r7, r5, r7
   1e63c:	add	r4, r4, #4
   1e640:	subs	r8, r8, #1
   1e644:	bne	1e604 <ReadCompressedDataSlab1+0x3c4>
   1e648:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e64c:	ldr	r0, [sp, #4]
   1e650:	cmp	r0, #0
   1e654:	beq	1e810 <ReadCompressedDataSlab1+0x5d0>
   1e658:	cmp	r8, #1
   1e65c:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e660:	mov	r7, #0
   1e664:	add	sl, sp, #8
   1e668:	mov	r0, #1
   1e66c:	mov	r1, sl
   1e670:	mov	r2, r4
   1e674:	mov	r3, r9
   1e678:	str	r0, [sp]
   1e67c:	mov	r0, r6
   1e680:	bl	92a4 <ReadCompressedInt64Data>
   1e684:	ldr	r3, [sp, #4]
   1e688:	mov	r5, r0
   1e68c:	mov	r0, r6
   1e690:	mov	r1, sl
   1e694:	mov	r2, r9
   1e698:	bl	2690 <InflateSkipData>
   1e69c:	add	r7, r5, r7
   1e6a0:	add	r4, r4, #8
   1e6a4:	subs	r8, r8, #1
   1e6a8:	bne	1e668 <ReadCompressedDataSlab1+0x428>
   1e6ac:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e6b0:	ldr	r0, [sp, #4]
   1e6b4:	cmp	r0, #0
   1e6b8:	beq	1e7f4 <ReadCompressedDataSlab1+0x5b4>
   1e6bc:	cmp	r8, #1
   1e6c0:	blt	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e6c4:	mov	r7, #0
   1e6c8:	add	sl, sp, #8
   1e6cc:	mov	r0, #1
   1e6d0:	mov	r1, sl
   1e6d4:	mov	r2, r4
   1e6d8:	mov	r3, r9
   1e6dc:	str	r0, [sp]
   1e6e0:	mov	r0, r6
   1e6e4:	bl	af40 <ReadCompressedUInt64Data>
   1e6e8:	ldr	r3, [sp, #4]
   1e6ec:	mov	r5, r0
   1e6f0:	mov	r0, r6
   1e6f4:	mov	r1, sl
   1e6f8:	mov	r2, r9
   1e6fc:	bl	2690 <InflateSkipData>
   1e700:	add	r7, r5, r7
   1e704:	add	r4, r4, #8
   1e708:	subs	r8, r8, #1
   1e70c:	bne	1e6cc <ReadCompressedDataSlab1+0x48c>
   1e710:	b	1e82c <ReadCompressedDataSlab1+0x5ec>
   1e714:	add	r1, sp, #8
   1e718:	mov	r0, r6
   1e71c:	mov	r2, r4
   1e720:	mov	r3, r9
   1e724:	str	r8, [sp]
   1e728:	bl	4cb4 <ReadCompressedDoubleData>
   1e72c:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e730:	add	r1, sp, #8
   1e734:	mov	r0, r6
   1e738:	mov	r2, r4
   1e73c:	mov	r3, r9
   1e740:	str	r8, [sp]
   1e744:	bl	7638 <ReadCompressedSingleData>
   1e748:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e74c:	add	r1, sp, #8
   1e750:	mov	r0, r6
   1e754:	mov	r2, r4
   1e758:	mov	r3, r9
   1e75c:	str	r8, [sp]
   1e760:	bl	1340c <ReadCompressedInt8Data>
   1e764:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e768:	add	r1, sp, #8
   1e76c:	mov	r0, r6
   1e770:	mov	r2, r4
   1e774:	mov	r3, r9
   1e778:	str	r8, [sp]
   1e77c:	bl	14eb8 <ReadCompressedUInt8Data>
   1e780:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e784:	add	r1, sp, #8
   1e788:	mov	r0, r6
   1e78c:	mov	r2, r4
   1e790:	mov	r3, r9
   1e794:	str	r8, [sp]
   1e798:	bl	feec <ReadCompressedInt16Data>
   1e79c:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e7a0:	add	r1, sp, #8
   1e7a4:	mov	r0, r6
   1e7a8:	mov	r2, r4
   1e7ac:	mov	r3, r9
   1e7b0:	str	r8, [sp]
   1e7b4:	bl	11960 <ReadCompressedUInt16Data>
   1e7b8:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e7bc:	add	r1, sp, #8
   1e7c0:	mov	r0, r6
   1e7c4:	mov	r2, r4
   1e7c8:	mov	r3, r9
   1e7cc:	str	r8, [sp]
   1e7d0:	bl	ca14 <ReadCompressedInt32Data>
   1e7d4:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e7d8:	add	r1, sp, #8
   1e7dc:	mov	r0, r6
   1e7e0:	mov	r2, r4
   1e7e4:	mov	r3, r9
   1e7e8:	str	r8, [sp]
   1e7ec:	bl	e478 <ReadCompressedUInt32Data>
   1e7f0:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e7f4:	add	r1, sp, #8
   1e7f8:	mov	r0, r6
   1e7fc:	mov	r2, r4
   1e800:	mov	r3, r9
   1e804:	str	r8, [sp]
   1e808:	bl	af40 <ReadCompressedUInt64Data>
   1e80c:	b	1e828 <ReadCompressedDataSlab1+0x5e8>
   1e810:	add	r1, sp, #8
   1e814:	mov	r0, r6
   1e818:	mov	r2, r4
   1e81c:	mov	r3, r9
   1e820:	str	r8, [sp]
   1e824:	bl	92a4 <ReadCompressedInt64Data>
   1e828:	mov	r7, r0
   1e82c:	add	r0, sp, #8
   1e830:	bl	1954 <inflateEnd@plt>
   1e834:	b	1e294 <ReadCompressedDataSlab1+0x54>

0001e838 <ReadCompressedDataSlab2>:
   1e838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e83c:	add	fp, sp, #28
   1e840:	sub	sp, sp, #84	; 0x54
   1e844:	vmov.i32	q8, #0	; 0x00000000
   1e848:	mov	r4, r2
   1e84c:	add	r2, sp, #24
   1e850:	mov	r5, r0
   1e854:	mov	r6, r3
   1e858:	mov	r0, #52	; 0x34
   1e85c:	mov	r3, r2
   1e860:	cmp	r5, #0
   1e864:	cmpne	r4, #0
   1e868:	vst1.64	{d16-d17}, [r3], r0
   1e86c:	mov	r0, #0
   1e870:	str	r0, [r3]
   1e874:	add	r3, r2, #32
   1e878:	add	r2, r2, #16
   1e87c:	str	r0, [sp, #72]	; 0x48
   1e880:	vst1.64	{d16-d17}, [r3]
   1e884:	vst1.64	{d16-d17}, [r2]
   1e888:	beq	202d4 <ReadCompressedDataSlab2+0x1a9c>
   1e88c:	ldr	r7, [fp, #24]
   1e890:	cmp	r7, #0
   1e894:	ldrne	r0, [fp, #20]
   1e898:	cmpne	r0, #0
   1e89c:	beq	202d4 <ReadCompressedDataSlab2+0x1a9c>
   1e8a0:	ldr	r0, [fp, #16]
   1e8a4:	cmp	r0, #0
   1e8a8:	ldrne	r0, [r5]
   1e8ac:	cmpne	r0, #0
   1e8b0:	beq	202d4 <ReadCompressedDataSlab2+0x1a9c>
   1e8b4:	add	r0, sp, #24
   1e8b8:	bl	1960 <inflateCopy@plt>
   1e8bc:	sub	r0, r6, #6
   1e8c0:	cmp	r0, #9
   1e8c4:	bhi	202cc <ReadCompressedDataSlab2+0x1a94>
   1e8c8:	str	r5, [sp, #20]
   1e8cc:	add	r1, pc, #16
   1e8d0:	ldr	r2, [fp, #12]
   1e8d4:	ldr	r8, [fp, #8]
   1e8d8:	mov	sl, r7
   1e8dc:	ldr	r0, [r1, r0, lsl #2]
   1e8e0:	add	pc, r1, r0
   1e8e4:	.word	0x00000028
   1e8e8:	.word	0x000000b8
   1e8ec:	.word	0x00000148
   1e8f0:	.word	0x000001d8
   1e8f4:	.word	0x00000268
   1e8f8:	.word	0x000002f8
   1e8fc:	.word	0x00000388
   1e900:	.word	0x00000418
   1e904:	.word	0x00000538
   1e908:	.word	0x000004a8
   1e90c:	ldr	r0, [fp, #16]
   1e910:	ldr	r7, [r2]
   1e914:	ldr	r9, [fp, #20]
   1e918:	ldr	r5, [sp, #20]
   1e91c:	add	r1, sp, #24
   1e920:	mov	r2, r8
   1e924:	ldr	r0, [r0, #4]
   1e928:	ldr	r6, [r9, #4]
   1e92c:	mul	r3, r0, r7
   1e930:	ldr	r0, [r9]
   1e934:	str	r0, [sp, #12]
   1e938:	mov	r0, r5
   1e93c:	bl	2690 <InflateSkipData>
   1e940:	sub	r0, r6, #1
   1e944:	mul	r3, r0, r7
   1e948:	ldr	r0, [r9]
   1e94c:	cmp	r0, #1
   1e950:	bne	1eeac <ReadCompressedDataSlab2+0x674>
   1e954:	ldr	r2, [fp, #12]
   1e958:	ldr	r0, [sl]
   1e95c:	ldr	r1, [r2]
   1e960:	cmp	r0, r1
   1e964:	bne	1fb78 <ReadCompressedDataSlab2+0x1340>
   1e968:	ldr	r1, [fp, #20]
   1e96c:	ldr	r1, [r1, #4]
   1e970:	cmp	r1, #1
   1e974:	bne	1fb78 <ReadCompressedDataSlab2+0x1340>
   1e978:	ldr	r1, [sl, #4]
   1e97c:	mov	r2, r4
   1e980:	mov	r3, r8
   1e984:	mul	r0, r1, r0
   1e988:	add	r1, sp, #24
   1e98c:	str	r0, [sp]
   1e990:	mov	r0, r5
   1e994:	bl	4cb4 <ReadCompressedDoubleData>
   1e998:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1e99c:	ldr	r0, [fp, #16]
   1e9a0:	ldr	r7, [r2]
   1e9a4:	ldr	r9, [fp, #20]
   1e9a8:	ldr	r5, [sp, #20]
   1e9ac:	add	r1, sp, #24
   1e9b0:	mov	r2, r8
   1e9b4:	ldr	r0, [r0, #4]
   1e9b8:	ldr	r6, [r9, #4]
   1e9bc:	mul	r3, r0, r7
   1e9c0:	ldr	r0, [r9]
   1e9c4:	str	r0, [sp, #12]
   1e9c8:	mov	r0, r5
   1e9cc:	bl	2690 <InflateSkipData>
   1e9d0:	sub	r0, r6, #1
   1e9d4:	mul	r3, r0, r7
   1e9d8:	ldr	r0, [r9]
   1e9dc:	cmp	r0, #1
   1e9e0:	bne	1eff4 <ReadCompressedDataSlab2+0x7bc>
   1e9e4:	ldr	r2, [fp, #12]
   1e9e8:	ldr	r0, [sl]
   1e9ec:	ldr	r1, [r2]
   1e9f0:	cmp	r0, r1
   1e9f4:	bne	1fc34 <ReadCompressedDataSlab2+0x13fc>
   1e9f8:	ldr	r1, [fp, #20]
   1e9fc:	ldr	r1, [r1, #4]
   1ea00:	cmp	r1, #1
   1ea04:	bne	1fc34 <ReadCompressedDataSlab2+0x13fc>
   1ea08:	ldr	r1, [sl, #4]
   1ea0c:	mov	r2, r4
   1ea10:	mov	r3, r8
   1ea14:	mul	r0, r1, r0
   1ea18:	add	r1, sp, #24
   1ea1c:	str	r0, [sp]
   1ea20:	mov	r0, r5
   1ea24:	bl	7638 <ReadCompressedSingleData>
   1ea28:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ea2c:	ldr	r0, [fp, #16]
   1ea30:	ldr	r7, [r2]
   1ea34:	ldr	r9, [fp, #20]
   1ea38:	ldr	r5, [sp, #20]
   1ea3c:	add	r1, sp, #24
   1ea40:	mov	r2, r8
   1ea44:	ldr	r0, [r0, #4]
   1ea48:	ldr	r6, [r9, #4]
   1ea4c:	mul	r3, r0, r7
   1ea50:	ldr	r0, [r9]
   1ea54:	str	r0, [sp, #12]
   1ea58:	mov	r0, r5
   1ea5c:	bl	2690 <InflateSkipData>
   1ea60:	sub	r0, r6, #1
   1ea64:	mul	r3, r0, r7
   1ea68:	ldr	r0, [r9]
   1ea6c:	cmp	r0, #1
   1ea70:	bne	1f13c <ReadCompressedDataSlab2+0x904>
   1ea74:	ldr	r2, [fp, #12]
   1ea78:	ldr	r0, [sl]
   1ea7c:	ldr	r1, [r2]
   1ea80:	cmp	r0, r1
   1ea84:	bne	1fcf0 <ReadCompressedDataSlab2+0x14b8>
   1ea88:	ldr	r1, [fp, #20]
   1ea8c:	ldr	r1, [r1, #4]
   1ea90:	cmp	r1, #1
   1ea94:	bne	1fcf0 <ReadCompressedDataSlab2+0x14b8>
   1ea98:	ldr	r1, [sl, #4]
   1ea9c:	mov	r2, r4
   1eaa0:	mov	r3, r8
   1eaa4:	mul	r0, r1, r0
   1eaa8:	add	r1, sp, #24
   1eaac:	str	r0, [sp]
   1eab0:	mov	r0, r5
   1eab4:	bl	1340c <ReadCompressedInt8Data>
   1eab8:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1eabc:	ldr	r0, [fp, #16]
   1eac0:	ldr	r7, [r2]
   1eac4:	ldr	r9, [fp, #20]
   1eac8:	ldr	r5, [sp, #20]
   1eacc:	add	r1, sp, #24
   1ead0:	mov	r2, r8
   1ead4:	ldr	r0, [r0, #4]
   1ead8:	ldr	r6, [r9, #4]
   1eadc:	mul	r3, r0, r7
   1eae0:	ldr	r0, [r9]
   1eae4:	str	r0, [sp, #12]
   1eae8:	mov	r0, r5
   1eaec:	bl	2690 <InflateSkipData>
   1eaf0:	sub	r0, r6, #1
   1eaf4:	mul	r3, r0, r7
   1eaf8:	ldr	r0, [r9]
   1eafc:	cmp	r0, #1
   1eb00:	bne	1f288 <ReadCompressedDataSlab2+0xa50>
   1eb04:	ldr	r2, [fp, #12]
   1eb08:	ldr	r0, [sl]
   1eb0c:	ldr	r1, [r2]
   1eb10:	cmp	r0, r1
   1eb14:	bne	1fdac <ReadCompressedDataSlab2+0x1574>
   1eb18:	ldr	r1, [fp, #20]
   1eb1c:	ldr	r1, [r1, #4]
   1eb20:	cmp	r1, #1
   1eb24:	bne	1fdac <ReadCompressedDataSlab2+0x1574>
   1eb28:	ldr	r1, [sl, #4]
   1eb2c:	mov	r2, r4
   1eb30:	mov	r3, r8
   1eb34:	mul	r0, r1, r0
   1eb38:	add	r1, sp, #24
   1eb3c:	str	r0, [sp]
   1eb40:	mov	r0, r5
   1eb44:	bl	14eb8 <ReadCompressedUInt8Data>
   1eb48:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1eb4c:	ldr	r0, [fp, #16]
   1eb50:	ldr	r7, [r2]
   1eb54:	ldr	r9, [fp, #20]
   1eb58:	ldr	r5, [sp, #20]
   1eb5c:	add	r1, sp, #24
   1eb60:	mov	r2, r8
   1eb64:	ldr	r0, [r0, #4]
   1eb68:	ldr	r6, [r9, #4]
   1eb6c:	mul	r3, r0, r7
   1eb70:	ldr	r0, [r9]
   1eb74:	str	r0, [sp, #12]
   1eb78:	mov	r0, r5
   1eb7c:	bl	2690 <InflateSkipData>
   1eb80:	sub	r0, r6, #1
   1eb84:	mul	r3, r0, r7
   1eb88:	ldr	r0, [r9]
   1eb8c:	cmp	r0, #1
   1eb90:	bne	1f3d4 <ReadCompressedDataSlab2+0xb9c>
   1eb94:	ldr	r2, [fp, #12]
   1eb98:	ldr	r0, [sl]
   1eb9c:	ldr	r1, [r2]
   1eba0:	cmp	r0, r1
   1eba4:	bne	1fe68 <ReadCompressedDataSlab2+0x1630>
   1eba8:	ldr	r1, [fp, #20]
   1ebac:	ldr	r1, [r1, #4]
   1ebb0:	cmp	r1, #1
   1ebb4:	bne	1fe68 <ReadCompressedDataSlab2+0x1630>
   1ebb8:	ldr	r1, [sl, #4]
   1ebbc:	mov	r2, r4
   1ebc0:	mov	r3, r8
   1ebc4:	mul	r0, r1, r0
   1ebc8:	add	r1, sp, #24
   1ebcc:	str	r0, [sp]
   1ebd0:	mov	r0, r5
   1ebd4:	bl	feec <ReadCompressedInt16Data>
   1ebd8:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ebdc:	ldr	r0, [fp, #16]
   1ebe0:	ldr	r7, [r2]
   1ebe4:	ldr	r9, [fp, #20]
   1ebe8:	ldr	r5, [sp, #20]
   1ebec:	add	r1, sp, #24
   1ebf0:	mov	r2, r8
   1ebf4:	ldr	r0, [r0, #4]
   1ebf8:	ldr	r6, [r9, #4]
   1ebfc:	mul	r3, r0, r7
   1ec00:	ldr	r0, [r9]
   1ec04:	str	r0, [sp, #16]
   1ec08:	mov	r0, r5
   1ec0c:	bl	2690 <InflateSkipData>
   1ec10:	sub	r0, r6, #1
   1ec14:	mul	r3, r0, r7
   1ec18:	ldr	r0, [r9]
   1ec1c:	cmp	r0, #1
   1ec20:	bne	1f51c <ReadCompressedDataSlab2+0xce4>
   1ec24:	ldr	r2, [fp, #12]
   1ec28:	ldr	r0, [sl]
   1ec2c:	ldr	r1, [r2]
   1ec30:	cmp	r0, r1
   1ec34:	bne	1ff24 <ReadCompressedDataSlab2+0x16ec>
   1ec38:	ldr	r1, [fp, #20]
   1ec3c:	ldr	r1, [r1, #4]
   1ec40:	cmp	r1, #1
   1ec44:	bne	1ff24 <ReadCompressedDataSlab2+0x16ec>
   1ec48:	ldr	r1, [sl, #4]
   1ec4c:	mov	r2, r4
   1ec50:	mov	r3, r8
   1ec54:	mul	r0, r1, r0
   1ec58:	add	r1, sp, #24
   1ec5c:	str	r0, [sp]
   1ec60:	mov	r0, r5
   1ec64:	bl	11960 <ReadCompressedUInt16Data>
   1ec68:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ec6c:	ldr	r0, [fp, #16]
   1ec70:	ldr	r7, [r2]
   1ec74:	ldr	r9, [fp, #20]
   1ec78:	ldr	r5, [sp, #20]
   1ec7c:	add	r1, sp, #24
   1ec80:	mov	r2, r8
   1ec84:	ldr	r0, [r0, #4]
   1ec88:	ldr	r6, [r9, #4]
   1ec8c:	mul	r3, r0, r7
   1ec90:	ldr	r0, [r9]
   1ec94:	str	r0, [sp, #12]
   1ec98:	mov	r0, r5
   1ec9c:	bl	2690 <InflateSkipData>
   1eca0:	sub	r0, r6, #1
   1eca4:	mul	r3, r0, r7
   1eca8:	ldr	r0, [r9]
   1ecac:	cmp	r0, #1
   1ecb0:	bne	1f670 <ReadCompressedDataSlab2+0xe38>
   1ecb4:	ldr	r2, [fp, #12]
   1ecb8:	ldr	r0, [sl]
   1ecbc:	ldr	r1, [r2]
   1ecc0:	cmp	r0, r1
   1ecc4:	bne	1ffe0 <ReadCompressedDataSlab2+0x17a8>
   1ecc8:	ldr	r1, [fp, #20]
   1eccc:	ldr	r1, [r1, #4]
   1ecd0:	cmp	r1, #1
   1ecd4:	bne	1ffe0 <ReadCompressedDataSlab2+0x17a8>
   1ecd8:	ldr	r1, [sl, #4]
   1ecdc:	mov	r2, r4
   1ece0:	mov	r3, r8
   1ece4:	mul	r0, r1, r0
   1ece8:	add	r1, sp, #24
   1ecec:	str	r0, [sp]
   1ecf0:	mov	r0, r5
   1ecf4:	bl	ca14 <ReadCompressedInt32Data>
   1ecf8:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ecfc:	ldr	r0, [fp, #16]
   1ed00:	ldr	r7, [r2]
   1ed04:	ldr	r9, [fp, #20]
   1ed08:	ldr	r5, [sp, #20]
   1ed0c:	add	r1, sp, #24
   1ed10:	mov	r2, r8
   1ed14:	ldr	r0, [r0, #4]
   1ed18:	ldr	r6, [r9, #4]
   1ed1c:	mul	r3, r0, r7
   1ed20:	ldr	r0, [r9]
   1ed24:	str	r0, [sp, #12]
   1ed28:	mov	r0, r5
   1ed2c:	bl	2690 <InflateSkipData>
   1ed30:	sub	r0, r6, #1
   1ed34:	mul	r3, r0, r7
   1ed38:	ldr	r0, [r9]
   1ed3c:	cmp	r0, #1
   1ed40:	bne	1f7b8 <ReadCompressedDataSlab2+0xf80>
   1ed44:	ldr	r2, [fp, #12]
   1ed48:	ldr	r0, [sl]
   1ed4c:	ldr	r1, [r2]
   1ed50:	cmp	r0, r1
   1ed54:	bne	2009c <ReadCompressedDataSlab2+0x1864>
   1ed58:	ldr	r1, [fp, #20]
   1ed5c:	ldr	r1, [r1, #4]
   1ed60:	cmp	r1, #1
   1ed64:	bne	2009c <ReadCompressedDataSlab2+0x1864>
   1ed68:	ldr	r1, [sl, #4]
   1ed6c:	mov	r2, r4
   1ed70:	mov	r3, r8
   1ed74:	mul	r0, r1, r0
   1ed78:	add	r1, sp, #24
   1ed7c:	str	r0, [sp]
   1ed80:	mov	r0, r5
   1ed84:	bl	e478 <ReadCompressedUInt32Data>
   1ed88:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ed8c:	ldr	r0, [fp, #16]
   1ed90:	ldr	r7, [r2]
   1ed94:	ldr	r9, [fp, #20]
   1ed98:	ldr	r5, [sp, #20]
   1ed9c:	add	r1, sp, #24
   1eda0:	mov	r2, r8
   1eda4:	ldr	r0, [r0, #4]
   1eda8:	ldr	r6, [r9, #4]
   1edac:	mul	r3, r0, r7
   1edb0:	ldr	r0, [r9]
   1edb4:	str	r0, [sp, #12]
   1edb8:	mov	r0, r5
   1edbc:	bl	2690 <InflateSkipData>
   1edc0:	sub	r0, r6, #1
   1edc4:	mul	r3, r0, r7
   1edc8:	ldr	r0, [r9]
   1edcc:	cmp	r0, #1
   1edd0:	bne	1f900 <ReadCompressedDataSlab2+0x10c8>
   1edd4:	ldr	r2, [fp, #12]
   1edd8:	ldr	r0, [sl]
   1eddc:	ldr	r1, [r2]
   1ede0:	cmp	r0, r1
   1ede4:	bne	20158 <ReadCompressedDataSlab2+0x1920>
   1ede8:	ldr	r1, [fp, #20]
   1edec:	ldr	r1, [r1, #4]
   1edf0:	cmp	r1, #1
   1edf4:	bne	20158 <ReadCompressedDataSlab2+0x1920>
   1edf8:	ldr	r1, [sl, #4]
   1edfc:	mov	r2, r4
   1ee00:	mov	r3, r8
   1ee04:	mul	r0, r1, r0
   1ee08:	add	r1, sp, #24
   1ee0c:	str	r0, [sp]
   1ee10:	mov	r0, r5
   1ee14:	bl	af40 <ReadCompressedUInt64Data>
   1ee18:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ee1c:	ldr	r0, [fp, #16]
   1ee20:	ldr	r7, [r2]
   1ee24:	ldr	r9, [fp, #20]
   1ee28:	ldr	r5, [sp, #20]
   1ee2c:	add	r1, sp, #24
   1ee30:	mov	r2, r8
   1ee34:	ldr	r0, [r0, #4]
   1ee38:	ldr	r6, [r9, #4]
   1ee3c:	mul	r3, r0, r7
   1ee40:	ldr	r0, [r9]
   1ee44:	str	r0, [sp, #12]
   1ee48:	mov	r0, r5
   1ee4c:	bl	2690 <InflateSkipData>
   1ee50:	sub	r0, r6, #1
   1ee54:	mul	r3, r0, r7
   1ee58:	ldr	r0, [r9]
   1ee5c:	cmp	r0, #1
   1ee60:	bne	1fa48 <ReadCompressedDataSlab2+0x1210>
   1ee64:	ldr	r2, [fp, #12]
   1ee68:	ldr	r0, [sl]
   1ee6c:	ldr	r1, [r2]
   1ee70:	cmp	r0, r1
   1ee74:	bne	20214 <ReadCompressedDataSlab2+0x19dc>
   1ee78:	ldr	r1, [fp, #20]
   1ee7c:	ldr	r1, [r1, #4]
   1ee80:	cmp	r1, #1
   1ee84:	bne	20214 <ReadCompressedDataSlab2+0x19dc>
   1ee88:	ldr	r1, [sl, #4]
   1ee8c:	mov	r2, r4
   1ee90:	mov	r3, r8
   1ee94:	mul	r0, r1, r0
   1ee98:	add	r1, sp, #24
   1ee9c:	str	r0, [sp]
   1eea0:	mov	r0, r5
   1eea4:	bl	92a4 <ReadCompressedInt64Data>
   1eea8:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1eeac:	ldr	r0, [sl, #4]
   1eeb0:	ldr	r9, [fp, #16]
   1eeb4:	cmp	r0, #1
   1eeb8:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1eebc:	ldr	r0, [sp, #12]
   1eec0:	mov	r7, sl
   1eec4:	mov	r1, #0
   1eec8:	add	r6, sp, #24
   1eecc:	mov	sl, r3
   1eed0:	str	r3, [sp, #16]
   1eed4:	sub	r0, r0, #1
   1eed8:	str	r0, [sp, #12]
   1eedc:	ldr	r3, [r9]
   1eee0:	str	r1, [sp, #20]
   1eee4:	mov	r0, r5
   1eee8:	mov	r1, r6
   1eeec:	mov	r2, r8
   1eef0:	bl	2690 <InflateSkipData>
   1eef4:	mov	sl, r7
   1eef8:	ldr	sl, [r7]
   1eefc:	mov	r0, #1
   1ef00:	mov	r1, r6
   1ef04:	mov	r2, r4
   1ef08:	mov	r3, r8
   1ef0c:	mov	r9, r6
   1ef10:	str	r0, [sp]
   1ef14:	mov	r0, r5
   1ef18:	bl	4cb4 <ReadCompressedDoubleData>
   1ef1c:	add	r4, r4, #8
   1ef20:	cmp	sl, #2
   1ef24:	blt	1ef88 <ReadCompressedDataSlab2+0x750>
   1ef28:	ldr	r8, [fp, #8]
   1ef2c:	ldr	r7, [sp, #12]
   1ef30:	mov	sl, #0
   1ef34:	mov	r6, r9
   1ef38:	mov	r0, r5
   1ef3c:	mov	r1, r6
   1ef40:	mov	r2, r8
   1ef44:	mov	r3, r7
   1ef48:	bl	2690 <InflateSkipData>
   1ef4c:	ldr	r0, [fp, #24]
   1ef50:	mov	r1, r6
   1ef54:	mov	r2, r4
   1ef58:	mov	r3, r8
   1ef5c:	ldr	r9, [r0]
   1ef60:	mov	r0, #1
   1ef64:	str	r0, [sp]
   1ef68:	mov	r0, r5
   1ef6c:	bl	4cb4 <ReadCompressedDoubleData>
   1ef70:	add	sl, sl, #1
   1ef74:	sub	r0, r9, #1
   1ef78:	add	r4, r4, #8
   1ef7c:	cmp	sl, r0
   1ef80:	blt	1ef38 <ReadCompressedDataSlab2+0x700>
   1ef84:	b	1ef90 <ReadCompressedDataSlab2+0x758>
   1ef88:	ldr	r8, [fp, #8]
   1ef8c:	mov	r6, r9
   1ef90:	ldr	r7, [fp, #24]
   1ef94:	ldr	r1, [fp, #20]
   1ef98:	ldr	r0, [fp, #12]
   1ef9c:	ldr	sl, [sp, #16]
   1efa0:	ldr	r9, [fp, #16]
   1efa4:	ldr	r2, [r7]
   1efa8:	ldr	r1, [r1]
   1efac:	ldr	r0, [r0]
   1efb0:	sub	r2, r2, #1
   1efb4:	add	r0, r0, sl
   1efb8:	mul	r1, r2, r1
   1efbc:	mov	r2, r8
   1efc0:	mvn	r1, r1
   1efc4:	add	r0, r0, r1
   1efc8:	ldr	r1, [r9]
   1efcc:	sub	r3, r0, r1
   1efd0:	mov	r0, r5
   1efd4:	mov	r1, r6
   1efd8:	bl	2690 <InflateSkipData>
   1efdc:	ldr	r1, [sp, #20]
   1efe0:	ldr	r0, [r7, #4]
   1efe4:	add	r1, r1, #1
   1efe8:	cmp	r1, r0
   1efec:	blt	1eedc <ReadCompressedDataSlab2+0x6a4>
   1eff0:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1eff4:	ldr	r0, [sl, #4]
   1eff8:	ldr	r9, [fp, #16]
   1effc:	cmp	r0, #1
   1f000:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f004:	ldr	r0, [sp, #12]
   1f008:	mov	r7, sl
   1f00c:	mov	r1, #0
   1f010:	add	r6, sp, #24
   1f014:	mov	sl, r3
   1f018:	str	r3, [sp, #16]
   1f01c:	sub	r0, r0, #1
   1f020:	str	r0, [sp, #12]
   1f024:	ldr	r3, [r9]
   1f028:	str	r1, [sp, #20]
   1f02c:	mov	r0, r5
   1f030:	mov	r1, r6
   1f034:	mov	r2, r8
   1f038:	bl	2690 <InflateSkipData>
   1f03c:	mov	sl, r7
   1f040:	ldr	sl, [r7]
   1f044:	mov	r0, #1
   1f048:	mov	r1, r6
   1f04c:	mov	r2, r4
   1f050:	mov	r3, r8
   1f054:	mov	r9, r6
   1f058:	str	r0, [sp]
   1f05c:	mov	r0, r5
   1f060:	bl	7638 <ReadCompressedSingleData>
   1f064:	add	r4, r4, #4
   1f068:	cmp	sl, #2
   1f06c:	blt	1f0d0 <ReadCompressedDataSlab2+0x898>
   1f070:	ldr	r8, [fp, #8]
   1f074:	ldr	r7, [sp, #12]
   1f078:	mov	sl, #0
   1f07c:	mov	r6, r9
   1f080:	mov	r0, r5
   1f084:	mov	r1, r6
   1f088:	mov	r2, r8
   1f08c:	mov	r3, r7
   1f090:	bl	2690 <InflateSkipData>
   1f094:	ldr	r0, [fp, #24]
   1f098:	mov	r1, r6
   1f09c:	mov	r2, r4
   1f0a0:	mov	r3, r8
   1f0a4:	ldr	r9, [r0]
   1f0a8:	mov	r0, #1
   1f0ac:	str	r0, [sp]
   1f0b0:	mov	r0, r5
   1f0b4:	bl	7638 <ReadCompressedSingleData>
   1f0b8:	add	sl, sl, #1
   1f0bc:	sub	r0, r9, #1
   1f0c0:	add	r4, r4, #4
   1f0c4:	cmp	sl, r0
   1f0c8:	blt	1f080 <ReadCompressedDataSlab2+0x848>
   1f0cc:	b	1f0d8 <ReadCompressedDataSlab2+0x8a0>
   1f0d0:	ldr	r8, [fp, #8]
   1f0d4:	mov	r6, r9
   1f0d8:	ldr	r7, [fp, #24]
   1f0dc:	ldr	r1, [fp, #20]
   1f0e0:	ldr	r0, [fp, #12]
   1f0e4:	ldr	sl, [sp, #16]
   1f0e8:	ldr	r9, [fp, #16]
   1f0ec:	ldr	r2, [r7]
   1f0f0:	ldr	r1, [r1]
   1f0f4:	ldr	r0, [r0]
   1f0f8:	sub	r2, r2, #1
   1f0fc:	add	r0, r0, sl
   1f100:	mul	r1, r2, r1
   1f104:	mov	r2, r8
   1f108:	mvn	r1, r1
   1f10c:	add	r0, r0, r1
   1f110:	ldr	r1, [r9]
   1f114:	sub	r3, r0, r1
   1f118:	mov	r0, r5
   1f11c:	mov	r1, r6
   1f120:	bl	2690 <InflateSkipData>
   1f124:	ldr	r1, [sp, #20]
   1f128:	ldr	r0, [r7, #4]
   1f12c:	add	r1, r1, #1
   1f130:	cmp	r1, r0
   1f134:	blt	1f024 <ReadCompressedDataSlab2+0x7ec>
   1f138:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f13c:	ldr	r0, [sl, #4]
   1f140:	mov	r7, r8
   1f144:	ldr	r8, [fp, #16]
   1f148:	cmp	r0, #1
   1f14c:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f150:	ldr	r0, [sp, #12]
   1f154:	mov	r1, r8
   1f158:	mov	r6, #0
   1f15c:	add	r9, sp, #24
   1f160:	mov	r8, r3
   1f164:	str	r3, [sp, #16]
   1f168:	sub	r0, r0, #1
   1f16c:	str	r0, [sp, #12]
   1f170:	ldr	r3, [r1]
   1f174:	mov	r8, r1
   1f178:	mov	r0, r5
   1f17c:	mov	r1, r9
   1f180:	mov	r2, r7
   1f184:	bl	2690 <InflateSkipData>
   1f188:	ldr	sl, [sl]
   1f18c:	mov	r0, #1
   1f190:	mov	r1, r9
   1f194:	mov	r2, r4
   1f198:	mov	r3, r7
   1f19c:	str	r0, [sp]
   1f1a0:	mov	r0, r5
   1f1a4:	bl	1340c <ReadCompressedInt8Data>
   1f1a8:	add	r4, r4, #1
   1f1ac:	cmp	sl, #2
   1f1b0:	blt	1f21c <ReadCompressedDataSlab2+0x9e4>
   1f1b4:	str	r6, [sp, #20]
   1f1b8:	ldr	r8, [fp, #8]
   1f1bc:	ldr	r6, [sp, #12]
   1f1c0:	mov	r1, r9
   1f1c4:	mov	sl, #0
   1f1c8:	mov	r7, #1
   1f1cc:	mov	r0, r5
   1f1d0:	mov	r2, r8
   1f1d4:	mov	r3, r6
   1f1d8:	bl	2690 <InflateSkipData>
   1f1dc:	ldr	r0, [fp, #24]
   1f1e0:	add	r2, r4, sl
   1f1e4:	add	r1, sp, #24
   1f1e8:	mov	r3, r8
   1f1ec:	ldr	r9, [r0]
   1f1f0:	mov	r0, r5
   1f1f4:	str	r7, [sp]
   1f1f8:	bl	1340c <ReadCompressedInt8Data>
   1f1fc:	add	sl, sl, #1
   1f200:	sub	r0, r9, #1
   1f204:	add	r1, sp, #24
   1f208:	cmp	sl, r0
   1f20c:	blt	1f1cc <ReadCompressedDataSlab2+0x994>
   1f210:	ldr	r8, [fp, #16]
   1f214:	ldr	r6, [sp, #20]
   1f218:	add	r4, r4, sl
   1f21c:	mov	r3, r8
   1f220:	ldr	sl, [fp, #24]
   1f224:	ldr	r1, [fp, #20]
   1f228:	ldr	r0, [fp, #12]
   1f22c:	ldr	r8, [sp, #16]
   1f230:	ldr	r7, [fp, #8]
   1f234:	add	r9, sp, #24
   1f238:	ldr	r2, [sl]
   1f23c:	ldr	r1, [r1]
   1f240:	ldr	r0, [r0]
   1f244:	sub	r2, r2, #1
   1f248:	add	r0, r0, r8
   1f24c:	mul	r1, r2, r1
   1f250:	mov	r2, r7
   1f254:	mvn	r1, r1
   1f258:	add	r0, r0, r1
   1f25c:	ldr	r1, [r3]
   1f260:	sub	r3, r0, r1
   1f264:	mov	r0, r5
   1f268:	mov	r1, r9
   1f26c:	bl	2690 <InflateSkipData>
   1f270:	ldr	r0, [sl, #4]
   1f274:	ldr	r1, [fp, #16]
   1f278:	add	r6, r6, #1
   1f27c:	cmp	r6, r0
   1f280:	blt	1f170 <ReadCompressedDataSlab2+0x938>
   1f284:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f288:	ldr	r0, [sl, #4]
   1f28c:	mov	r7, r8
   1f290:	ldr	r8, [fp, #16]
   1f294:	cmp	r0, #1
   1f298:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f29c:	ldr	r0, [sp, #12]
   1f2a0:	mov	r1, r8
   1f2a4:	mov	r6, #0
   1f2a8:	add	r9, sp, #24
   1f2ac:	mov	r8, r3
   1f2b0:	str	r3, [sp, #16]
   1f2b4:	sub	r0, r0, #1
   1f2b8:	str	r0, [sp, #12]
   1f2bc:	ldr	r3, [r1]
   1f2c0:	mov	r8, r1
   1f2c4:	mov	r0, r5
   1f2c8:	mov	r1, r9
   1f2cc:	mov	r2, r7
   1f2d0:	bl	2690 <InflateSkipData>
   1f2d4:	ldr	sl, [sl]
   1f2d8:	mov	r0, #1
   1f2dc:	mov	r1, r9
   1f2e0:	mov	r2, r4
   1f2e4:	mov	r3, r7
   1f2e8:	str	r0, [sp]
   1f2ec:	mov	r0, r5
   1f2f0:	bl	14eb8 <ReadCompressedUInt8Data>
   1f2f4:	add	r4, r4, #1
   1f2f8:	cmp	sl, #2
   1f2fc:	blt	1f368 <ReadCompressedDataSlab2+0xb30>
   1f300:	str	r6, [sp, #20]
   1f304:	ldr	r8, [fp, #8]
   1f308:	ldr	r6, [sp, #12]
   1f30c:	mov	r1, r9
   1f310:	mov	sl, #0
   1f314:	mov	r7, #1
   1f318:	mov	r0, r5
   1f31c:	mov	r2, r8
   1f320:	mov	r3, r6
   1f324:	bl	2690 <InflateSkipData>
   1f328:	ldr	r0, [fp, #24]
   1f32c:	add	r2, r4, sl
   1f330:	add	r1, sp, #24
   1f334:	mov	r3, r8
   1f338:	ldr	r9, [r0]
   1f33c:	mov	r0, r5
   1f340:	str	r7, [sp]
   1f344:	bl	14eb8 <ReadCompressedUInt8Data>
   1f348:	add	sl, sl, #1
   1f34c:	sub	r0, r9, #1
   1f350:	add	r1, sp, #24
   1f354:	cmp	sl, r0
   1f358:	blt	1f318 <ReadCompressedDataSlab2+0xae0>
   1f35c:	ldr	r8, [fp, #16]
   1f360:	ldr	r6, [sp, #20]
   1f364:	add	r4, r4, sl
   1f368:	mov	r3, r8
   1f36c:	ldr	sl, [fp, #24]
   1f370:	ldr	r1, [fp, #20]
   1f374:	ldr	r0, [fp, #12]
   1f378:	ldr	r8, [sp, #16]
   1f37c:	ldr	r7, [fp, #8]
   1f380:	add	r9, sp, #24
   1f384:	ldr	r2, [sl]
   1f388:	ldr	r1, [r1]
   1f38c:	ldr	r0, [r0]
   1f390:	sub	r2, r2, #1
   1f394:	add	r0, r0, r8
   1f398:	mul	r1, r2, r1
   1f39c:	mov	r2, r7
   1f3a0:	mvn	r1, r1
   1f3a4:	add	r0, r0, r1
   1f3a8:	ldr	r1, [r3]
   1f3ac:	sub	r3, r0, r1
   1f3b0:	mov	r0, r5
   1f3b4:	mov	r1, r9
   1f3b8:	bl	2690 <InflateSkipData>
   1f3bc:	ldr	r0, [sl, #4]
   1f3c0:	ldr	r1, [fp, #16]
   1f3c4:	add	r6, r6, #1
   1f3c8:	cmp	r6, r0
   1f3cc:	blt	1f2bc <ReadCompressedDataSlab2+0xa84>
   1f3d0:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f3d4:	ldr	r0, [sl, #4]
   1f3d8:	ldr	r9, [fp, #16]
   1f3dc:	cmp	r0, #1
   1f3e0:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f3e4:	ldr	r0, [sp, #12]
   1f3e8:	mov	r7, sl
   1f3ec:	mov	r1, #0
   1f3f0:	add	r6, sp, #24
   1f3f4:	mov	sl, r3
   1f3f8:	str	r3, [sp, #16]
   1f3fc:	sub	r0, r0, #1
   1f400:	str	r0, [sp, #12]
   1f404:	ldr	r3, [r9]
   1f408:	str	r1, [sp, #20]
   1f40c:	mov	r0, r5
   1f410:	mov	r1, r6
   1f414:	mov	r2, r8
   1f418:	bl	2690 <InflateSkipData>
   1f41c:	mov	sl, r7
   1f420:	ldr	sl, [r7]
   1f424:	mov	r0, #1
   1f428:	mov	r1, r6
   1f42c:	mov	r2, r4
   1f430:	mov	r3, r8
   1f434:	mov	r9, r6
   1f438:	str	r0, [sp]
   1f43c:	mov	r0, r5
   1f440:	bl	feec <ReadCompressedInt16Data>
   1f444:	add	r4, r4, #2
   1f448:	cmp	sl, #2
   1f44c:	blt	1f4b0 <ReadCompressedDataSlab2+0xc78>
   1f450:	ldr	r8, [fp, #8]
   1f454:	ldr	r7, [sp, #12]
   1f458:	mov	sl, #0
   1f45c:	mov	r6, r9
   1f460:	mov	r0, r5
   1f464:	mov	r1, r6
   1f468:	mov	r2, r8
   1f46c:	mov	r3, r7
   1f470:	bl	2690 <InflateSkipData>
   1f474:	ldr	r0, [fp, #24]
   1f478:	mov	r1, r6
   1f47c:	mov	r2, r4
   1f480:	mov	r3, r8
   1f484:	ldr	r9, [r0]
   1f488:	mov	r0, #1
   1f48c:	str	r0, [sp]
   1f490:	mov	r0, r5
   1f494:	bl	feec <ReadCompressedInt16Data>
   1f498:	add	sl, sl, #1
   1f49c:	sub	r0, r9, #1
   1f4a0:	add	r4, r4, #2
   1f4a4:	cmp	sl, r0
   1f4a8:	blt	1f460 <ReadCompressedDataSlab2+0xc28>
   1f4ac:	b	1f4b8 <ReadCompressedDataSlab2+0xc80>
   1f4b0:	ldr	r8, [fp, #8]
   1f4b4:	mov	r6, r9
   1f4b8:	ldr	r7, [fp, #24]
   1f4bc:	ldr	r1, [fp, #20]
   1f4c0:	ldr	r0, [fp, #12]
   1f4c4:	ldr	sl, [sp, #16]
   1f4c8:	ldr	r9, [fp, #16]
   1f4cc:	ldr	r2, [r7]
   1f4d0:	ldr	r1, [r1]
   1f4d4:	ldr	r0, [r0]
   1f4d8:	sub	r2, r2, #1
   1f4dc:	add	r0, r0, sl
   1f4e0:	mul	r1, r2, r1
   1f4e4:	mov	r2, r8
   1f4e8:	mvn	r1, r1
   1f4ec:	add	r0, r0, r1
   1f4f0:	ldr	r1, [r9]
   1f4f4:	sub	r3, r0, r1
   1f4f8:	mov	r0, r5
   1f4fc:	mov	r1, r6
   1f500:	bl	2690 <InflateSkipData>
   1f504:	ldr	r1, [sp, #20]
   1f508:	ldr	r0, [r7, #4]
   1f50c:	add	r1, r1, #1
   1f510:	cmp	r1, r0
   1f514:	blt	1f404 <ReadCompressedDataSlab2+0xbcc>
   1f518:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f51c:	ldr	r0, [sl, #4]
   1f520:	ldr	r9, [fp, #16]
   1f524:	cmp	r0, #1
   1f528:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f52c:	ldr	r0, [sp, #16]
   1f530:	mov	r7, sl
   1f534:	mov	r6, r5
   1f538:	mov	r1, #0
   1f53c:	add	r5, sp, #24
   1f540:	mov	sl, r3
   1f544:	str	r3, [sp, #12]
   1f548:	sub	r0, r0, #1
   1f54c:	str	r0, [sp, #8]
   1f550:	ldr	r3, [r9]
   1f554:	str	r1, [sp, #16]
   1f558:	mov	r0, r6
   1f55c:	mov	r1, r5
   1f560:	mov	r2, r8
   1f564:	bl	2690 <InflateSkipData>
   1f568:	mov	sl, r7
   1f56c:	ldr	sl, [r7]
   1f570:	mov	r0, #1
   1f574:	mov	r1, r5
   1f578:	mov	r2, r4
   1f57c:	mov	r3, r8
   1f580:	mov	r9, r5
   1f584:	str	r0, [sp]
   1f588:	mov	r0, r6
   1f58c:	bl	11960 <ReadCompressedUInt16Data>
   1f590:	add	r4, r4, #2
   1f594:	cmp	sl, #2
   1f598:	blt	1f600 <ReadCompressedDataSlab2+0xdc8>
   1f59c:	ldr	r8, [fp, #8]
   1f5a0:	ldr	r7, [sp, #8]
   1f5a4:	ldr	r6, [sp, #20]
   1f5a8:	mov	sl, #0
   1f5ac:	mov	r5, r9
   1f5b0:	mov	r0, r6
   1f5b4:	mov	r1, r5
   1f5b8:	mov	r2, r8
   1f5bc:	mov	r3, r7
   1f5c0:	bl	2690 <InflateSkipData>
   1f5c4:	ldr	r0, [fp, #24]
   1f5c8:	mov	r1, r5
   1f5cc:	mov	r2, r4
   1f5d0:	mov	r3, r8
   1f5d4:	ldr	r9, [r0]
   1f5d8:	mov	r0, #1
   1f5dc:	str	r0, [sp]
   1f5e0:	mov	r0, r6
   1f5e4:	bl	11960 <ReadCompressedUInt16Data>
   1f5e8:	add	sl, sl, #1
   1f5ec:	sub	r0, r9, #1
   1f5f0:	add	r4, r4, #2
   1f5f4:	cmp	sl, r0
   1f5f8:	blt	1f5b0 <ReadCompressedDataSlab2+0xd78>
   1f5fc:	b	1f60c <ReadCompressedDataSlab2+0xdd4>
   1f600:	ldr	r8, [fp, #8]
   1f604:	ldr	r6, [sp, #20]
   1f608:	mov	r5, r9
   1f60c:	ldr	r7, [fp, #24]
   1f610:	ldr	r1, [fp, #20]
   1f614:	ldr	r0, [fp, #12]
   1f618:	ldr	sl, [sp, #12]
   1f61c:	ldr	r9, [fp, #16]
   1f620:	ldr	r2, [r7]
   1f624:	ldr	r1, [r1]
   1f628:	ldr	r0, [r0]
   1f62c:	sub	r2, r2, #1
   1f630:	add	r0, r0, sl
   1f634:	mul	r1, r2, r1
   1f638:	mov	r2, r8
   1f63c:	mvn	r1, r1
   1f640:	add	r0, r0, r1
   1f644:	ldr	r1, [r9]
   1f648:	sub	r3, r0, r1
   1f64c:	mov	r0, r6
   1f650:	mov	r1, r5
   1f654:	bl	2690 <InflateSkipData>
   1f658:	ldr	r1, [sp, #16]
   1f65c:	ldr	r0, [r7, #4]
   1f660:	add	r1, r1, #1
   1f664:	cmp	r1, r0
   1f668:	blt	1f550 <ReadCompressedDataSlab2+0xd18>
   1f66c:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f670:	ldr	r0, [sl, #4]
   1f674:	ldr	r9, [fp, #16]
   1f678:	cmp	r0, #1
   1f67c:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f680:	ldr	r0, [sp, #12]
   1f684:	mov	r7, sl
   1f688:	mov	r1, #0
   1f68c:	add	r6, sp, #24
   1f690:	mov	sl, r3
   1f694:	str	r3, [sp, #16]
   1f698:	sub	r0, r0, #1
   1f69c:	str	r0, [sp, #12]
   1f6a0:	ldr	r3, [r9]
   1f6a4:	str	r1, [sp, #20]
   1f6a8:	mov	r0, r5
   1f6ac:	mov	r1, r6
   1f6b0:	mov	r2, r8
   1f6b4:	bl	2690 <InflateSkipData>
   1f6b8:	mov	sl, r7
   1f6bc:	ldr	sl, [r7]
   1f6c0:	mov	r0, #1
   1f6c4:	mov	r1, r6
   1f6c8:	mov	r2, r4
   1f6cc:	mov	r3, r8
   1f6d0:	mov	r9, r6
   1f6d4:	str	r0, [sp]
   1f6d8:	mov	r0, r5
   1f6dc:	bl	ca14 <ReadCompressedInt32Data>
   1f6e0:	add	r4, r4, #4
   1f6e4:	cmp	sl, #2
   1f6e8:	blt	1f74c <ReadCompressedDataSlab2+0xf14>
   1f6ec:	ldr	r8, [fp, #8]
   1f6f0:	ldr	r7, [sp, #12]
   1f6f4:	mov	sl, #0
   1f6f8:	mov	r6, r9
   1f6fc:	mov	r0, r5
   1f700:	mov	r1, r6
   1f704:	mov	r2, r8
   1f708:	mov	r3, r7
   1f70c:	bl	2690 <InflateSkipData>
   1f710:	ldr	r0, [fp, #24]
   1f714:	mov	r1, r6
   1f718:	mov	r2, r4
   1f71c:	mov	r3, r8
   1f720:	ldr	r9, [r0]
   1f724:	mov	r0, #1
   1f728:	str	r0, [sp]
   1f72c:	mov	r0, r5
   1f730:	bl	ca14 <ReadCompressedInt32Data>
   1f734:	add	sl, sl, #1
   1f738:	sub	r0, r9, #1
   1f73c:	add	r4, r4, #4
   1f740:	cmp	sl, r0
   1f744:	blt	1f6fc <ReadCompressedDataSlab2+0xec4>
   1f748:	b	1f754 <ReadCompressedDataSlab2+0xf1c>
   1f74c:	ldr	r8, [fp, #8]
   1f750:	mov	r6, r9
   1f754:	ldr	r7, [fp, #24]
   1f758:	ldr	r1, [fp, #20]
   1f75c:	ldr	r0, [fp, #12]
   1f760:	ldr	sl, [sp, #16]
   1f764:	ldr	r9, [fp, #16]
   1f768:	ldr	r2, [r7]
   1f76c:	ldr	r1, [r1]
   1f770:	ldr	r0, [r0]
   1f774:	sub	r2, r2, #1
   1f778:	add	r0, r0, sl
   1f77c:	mul	r1, r2, r1
   1f780:	mov	r2, r8
   1f784:	mvn	r1, r1
   1f788:	add	r0, r0, r1
   1f78c:	ldr	r1, [r9]
   1f790:	sub	r3, r0, r1
   1f794:	mov	r0, r5
   1f798:	mov	r1, r6
   1f79c:	bl	2690 <InflateSkipData>
   1f7a0:	ldr	r1, [sp, #20]
   1f7a4:	ldr	r0, [r7, #4]
   1f7a8:	add	r1, r1, #1
   1f7ac:	cmp	r1, r0
   1f7b0:	blt	1f6a0 <ReadCompressedDataSlab2+0xe68>
   1f7b4:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f7b8:	ldr	r0, [sl, #4]
   1f7bc:	ldr	r9, [fp, #16]
   1f7c0:	cmp	r0, #1
   1f7c4:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f7c8:	ldr	r0, [sp, #12]
   1f7cc:	mov	r7, sl
   1f7d0:	mov	r1, #0
   1f7d4:	add	r6, sp, #24
   1f7d8:	mov	sl, r3
   1f7dc:	str	r3, [sp, #16]
   1f7e0:	sub	r0, r0, #1
   1f7e4:	str	r0, [sp, #12]
   1f7e8:	ldr	r3, [r9]
   1f7ec:	str	r1, [sp, #20]
   1f7f0:	mov	r0, r5
   1f7f4:	mov	r1, r6
   1f7f8:	mov	r2, r8
   1f7fc:	bl	2690 <InflateSkipData>
   1f800:	mov	sl, r7
   1f804:	ldr	sl, [r7]
   1f808:	mov	r0, #1
   1f80c:	mov	r1, r6
   1f810:	mov	r2, r4
   1f814:	mov	r3, r8
   1f818:	mov	r9, r6
   1f81c:	str	r0, [sp]
   1f820:	mov	r0, r5
   1f824:	bl	e478 <ReadCompressedUInt32Data>
   1f828:	add	r4, r4, #4
   1f82c:	cmp	sl, #2
   1f830:	blt	1f894 <ReadCompressedDataSlab2+0x105c>
   1f834:	ldr	r8, [fp, #8]
   1f838:	ldr	r7, [sp, #12]
   1f83c:	mov	sl, #0
   1f840:	mov	r6, r9
   1f844:	mov	r0, r5
   1f848:	mov	r1, r6
   1f84c:	mov	r2, r8
   1f850:	mov	r3, r7
   1f854:	bl	2690 <InflateSkipData>
   1f858:	ldr	r0, [fp, #24]
   1f85c:	mov	r1, r6
   1f860:	mov	r2, r4
   1f864:	mov	r3, r8
   1f868:	ldr	r9, [r0]
   1f86c:	mov	r0, #1
   1f870:	str	r0, [sp]
   1f874:	mov	r0, r5
   1f878:	bl	e478 <ReadCompressedUInt32Data>
   1f87c:	add	sl, sl, #1
   1f880:	sub	r0, r9, #1
   1f884:	add	r4, r4, #4
   1f888:	cmp	sl, r0
   1f88c:	blt	1f844 <ReadCompressedDataSlab2+0x100c>
   1f890:	b	1f89c <ReadCompressedDataSlab2+0x1064>
   1f894:	ldr	r8, [fp, #8]
   1f898:	mov	r6, r9
   1f89c:	ldr	r7, [fp, #24]
   1f8a0:	ldr	r1, [fp, #20]
   1f8a4:	ldr	r0, [fp, #12]
   1f8a8:	ldr	sl, [sp, #16]
   1f8ac:	ldr	r9, [fp, #16]
   1f8b0:	ldr	r2, [r7]
   1f8b4:	ldr	r1, [r1]
   1f8b8:	ldr	r0, [r0]
   1f8bc:	sub	r2, r2, #1
   1f8c0:	add	r0, r0, sl
   1f8c4:	mul	r1, r2, r1
   1f8c8:	mov	r2, r8
   1f8cc:	mvn	r1, r1
   1f8d0:	add	r0, r0, r1
   1f8d4:	ldr	r1, [r9]
   1f8d8:	sub	r3, r0, r1
   1f8dc:	mov	r0, r5
   1f8e0:	mov	r1, r6
   1f8e4:	bl	2690 <InflateSkipData>
   1f8e8:	ldr	r1, [sp, #20]
   1f8ec:	ldr	r0, [r7, #4]
   1f8f0:	add	r1, r1, #1
   1f8f4:	cmp	r1, r0
   1f8f8:	blt	1f7e8 <ReadCompressedDataSlab2+0xfb0>
   1f8fc:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1f900:	ldr	r0, [sl, #4]
   1f904:	ldr	r9, [fp, #16]
   1f908:	cmp	r0, #1
   1f90c:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1f910:	ldr	r0, [sp, #12]
   1f914:	mov	r7, sl
   1f918:	mov	r1, #0
   1f91c:	add	r6, sp, #24
   1f920:	mov	sl, r3
   1f924:	str	r3, [sp, #16]
   1f928:	sub	r0, r0, #1
   1f92c:	str	r0, [sp, #12]
   1f930:	ldr	r3, [r9]
   1f934:	str	r1, [sp, #20]
   1f938:	mov	r0, r5
   1f93c:	mov	r1, r6
   1f940:	mov	r2, r8
   1f944:	bl	2690 <InflateSkipData>
   1f948:	mov	sl, r7
   1f94c:	ldr	sl, [r7]
   1f950:	mov	r0, #1
   1f954:	mov	r1, r6
   1f958:	mov	r2, r4
   1f95c:	mov	r3, r8
   1f960:	mov	r9, r6
   1f964:	str	r0, [sp]
   1f968:	mov	r0, r5
   1f96c:	bl	af40 <ReadCompressedUInt64Data>
   1f970:	add	r4, r4, #8
   1f974:	cmp	sl, #2
   1f978:	blt	1f9dc <ReadCompressedDataSlab2+0x11a4>
   1f97c:	ldr	r8, [fp, #8]
   1f980:	ldr	r7, [sp, #12]
   1f984:	mov	sl, #0
   1f988:	mov	r6, r9
   1f98c:	mov	r0, r5
   1f990:	mov	r1, r6
   1f994:	mov	r2, r8
   1f998:	mov	r3, r7
   1f99c:	bl	2690 <InflateSkipData>
   1f9a0:	ldr	r0, [fp, #24]
   1f9a4:	mov	r1, r6
   1f9a8:	mov	r2, r4
   1f9ac:	mov	r3, r8
   1f9b0:	ldr	r9, [r0]
   1f9b4:	mov	r0, #1
   1f9b8:	str	r0, [sp]
   1f9bc:	mov	r0, r5
   1f9c0:	bl	af40 <ReadCompressedUInt64Data>
   1f9c4:	add	sl, sl, #1
   1f9c8:	sub	r0, r9, #1
   1f9cc:	add	r4, r4, #8
   1f9d0:	cmp	sl, r0
   1f9d4:	blt	1f98c <ReadCompressedDataSlab2+0x1154>
   1f9d8:	b	1f9e4 <ReadCompressedDataSlab2+0x11ac>
   1f9dc:	ldr	r8, [fp, #8]
   1f9e0:	mov	r6, r9
   1f9e4:	ldr	r7, [fp, #24]
   1f9e8:	ldr	r1, [fp, #20]
   1f9ec:	ldr	r0, [fp, #12]
   1f9f0:	ldr	sl, [sp, #16]
   1f9f4:	ldr	r9, [fp, #16]
   1f9f8:	ldr	r2, [r7]
   1f9fc:	ldr	r1, [r1]
   1fa00:	ldr	r0, [r0]
   1fa04:	sub	r2, r2, #1
   1fa08:	add	r0, r0, sl
   1fa0c:	mul	r1, r2, r1
   1fa10:	mov	r2, r8
   1fa14:	mvn	r1, r1
   1fa18:	add	r0, r0, r1
   1fa1c:	ldr	r1, [r9]
   1fa20:	sub	r3, r0, r1
   1fa24:	mov	r0, r5
   1fa28:	mov	r1, r6
   1fa2c:	bl	2690 <InflateSkipData>
   1fa30:	ldr	r1, [sp, #20]
   1fa34:	ldr	r0, [r7, #4]
   1fa38:	add	r1, r1, #1
   1fa3c:	cmp	r1, r0
   1fa40:	blt	1f930 <ReadCompressedDataSlab2+0x10f8>
   1fa44:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fa48:	ldr	r0, [sl, #4]
   1fa4c:	ldr	r1, [sp, #12]
   1fa50:	ldr	r9, [fp, #16]
   1fa54:	cmp	r0, #1
   1fa58:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fa5c:	sub	r0, r1, #1
   1fa60:	mov	r7, #0
   1fa64:	add	r6, sp, #24
   1fa68:	str	r3, [sp, #16]
   1fa6c:	str	r0, [sp, #12]
   1fa70:	ldr	r3, [r9]
   1fa74:	mov	r0, r5
   1fa78:	mov	r1, r6
   1fa7c:	mov	r2, r8
   1fa80:	bl	2690 <InflateSkipData>
   1fa84:	ldr	sl, [sl]
   1fa88:	mov	r0, #1
   1fa8c:	mov	r1, r6
   1fa90:	mov	r2, r4
   1fa94:	mov	r3, r8
   1fa98:	str	r0, [sp]
   1fa9c:	mov	r0, r5
   1faa0:	bl	92a4 <ReadCompressedInt64Data>
   1faa4:	add	r4, r4, #8
   1faa8:	cmp	sl, #2
   1faac:	str	r7, [sp, #20]
   1fab0:	blt	1fb10 <ReadCompressedDataSlab2+0x12d8>
   1fab4:	ldr	r8, [fp, #8]
   1fab8:	ldr	r7, [sp, #12]
   1fabc:	mov	sl, #0
   1fac0:	mov	r0, r5
   1fac4:	mov	r1, r6
   1fac8:	mov	r2, r8
   1facc:	mov	r3, r7
   1fad0:	bl	2690 <InflateSkipData>
   1fad4:	ldr	r0, [fp, #24]
   1fad8:	mov	r1, r6
   1fadc:	mov	r2, r4
   1fae0:	mov	r3, r8
   1fae4:	ldr	r9, [r0]
   1fae8:	mov	r0, #1
   1faec:	str	r0, [sp]
   1faf0:	mov	r0, r5
   1faf4:	bl	92a4 <ReadCompressedInt64Data>
   1faf8:	add	sl, sl, #1
   1fafc:	sub	r0, r9, #1
   1fb00:	add	r4, r4, #8
   1fb04:	cmp	sl, r0
   1fb08:	blt	1fac0 <ReadCompressedDataSlab2+0x1288>
   1fb0c:	b	1fb14 <ReadCompressedDataSlab2+0x12dc>
   1fb10:	ldr	r8, [fp, #8]
   1fb14:	ldr	sl, [fp, #24]
   1fb18:	ldr	r1, [fp, #20]
   1fb1c:	ldr	r0, [fp, #12]
   1fb20:	ldr	r7, [sp, #16]
   1fb24:	ldr	r9, [fp, #16]
   1fb28:	ldr	r2, [sl]
   1fb2c:	ldr	r1, [r1]
   1fb30:	ldr	r0, [r0]
   1fb34:	sub	r2, r2, #1
   1fb38:	add	r0, r0, r7
   1fb3c:	mul	r1, r2, r1
   1fb40:	mov	r2, r8
   1fb44:	mvn	r1, r1
   1fb48:	add	r0, r0, r1
   1fb4c:	ldr	r1, [r9]
   1fb50:	sub	r3, r0, r1
   1fb54:	mov	r0, r5
   1fb58:	mov	r1, r6
   1fb5c:	bl	2690 <InflateSkipData>
   1fb60:	ldr	r7, [sp, #20]
   1fb64:	ldr	r0, [sl, #4]
   1fb68:	add	r7, r7, #1
   1fb6c:	cmp	r7, r0
   1fb70:	blt	1fa70 <ReadCompressedDataSlab2+0x1238>
   1fb74:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fb78:	ldr	r0, [sl, #4]
   1fb7c:	str	r3, [sp, #16]
   1fb80:	cmp	r0, #1
   1fb84:	ldr	r0, [fp, #16]
   1fb88:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fb8c:	mov	r9, r8
   1fb90:	mov	r6, r2
   1fb94:	mov	r7, #0
   1fb98:	ldr	r3, [r0]
   1fb9c:	add	r1, sp, #24
   1fba0:	mov	r0, r5
   1fba4:	mov	r2, r9
   1fba8:	mov	r8, r1
   1fbac:	bl	2690 <InflateSkipData>
   1fbb0:	ldr	r0, [sl]
   1fbb4:	mov	r1, r8
   1fbb8:	mov	r2, r4
   1fbbc:	mov	r3, r9
   1fbc0:	str	r0, [sp]
   1fbc4:	mov	r0, r5
   1fbc8:	bl	4cb4 <ReadCompressedDoubleData>
   1fbcc:	ldr	r0, [r6]
   1fbd0:	ldr	r1, [sp, #16]
   1fbd4:	mov	r8, r6
   1fbd8:	ldr	r6, [sl]
   1fbdc:	add	r0, r0, r1
   1fbe0:	ldr	r1, [fp, #20]
   1fbe4:	sub	r2, r6, #1
   1fbe8:	ldr	r1, [r1]
   1fbec:	mul	r1, r1, r2
   1fbf0:	mov	r2, r9
   1fbf4:	mvn	r1, r1
   1fbf8:	add	r0, r0, r1
   1fbfc:	ldr	r1, [fp, #16]
   1fc00:	ldr	r1, [r1]
   1fc04:	sub	r3, r0, r1
   1fc08:	mov	r0, r5
   1fc0c:	add	r1, sp, #24
   1fc10:	bl	2690 <InflateSkipData>
   1fc14:	ldr	r0, [sl, #4]
   1fc18:	add	r7, r7, #1
   1fc1c:	add	r4, r4, r6, lsl #3
   1fc20:	mov	r6, r8
   1fc24:	cmp	r7, r0
   1fc28:	ldr	r0, [fp, #16]
   1fc2c:	blt	1fb98 <ReadCompressedDataSlab2+0x1360>
   1fc30:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fc34:	ldr	r0, [sl, #4]
   1fc38:	str	r3, [sp, #16]
   1fc3c:	cmp	r0, #1
   1fc40:	ldr	r0, [fp, #16]
   1fc44:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fc48:	mov	r9, r8
   1fc4c:	mov	r6, r2
   1fc50:	mov	r7, #0
   1fc54:	ldr	r3, [r0]
   1fc58:	add	r1, sp, #24
   1fc5c:	mov	r0, r5
   1fc60:	mov	r2, r9
   1fc64:	mov	r8, r1
   1fc68:	bl	2690 <InflateSkipData>
   1fc6c:	ldr	r0, [sl]
   1fc70:	mov	r1, r8
   1fc74:	mov	r2, r4
   1fc78:	mov	r3, r9
   1fc7c:	str	r0, [sp]
   1fc80:	mov	r0, r5
   1fc84:	bl	7638 <ReadCompressedSingleData>
   1fc88:	ldr	r0, [r6]
   1fc8c:	ldr	r1, [sp, #16]
   1fc90:	mov	r8, r6
   1fc94:	ldr	r6, [sl]
   1fc98:	add	r0, r0, r1
   1fc9c:	ldr	r1, [fp, #20]
   1fca0:	sub	r2, r6, #1
   1fca4:	ldr	r1, [r1]
   1fca8:	mul	r1, r1, r2
   1fcac:	mov	r2, r9
   1fcb0:	mvn	r1, r1
   1fcb4:	add	r0, r0, r1
   1fcb8:	ldr	r1, [fp, #16]
   1fcbc:	ldr	r1, [r1]
   1fcc0:	sub	r3, r0, r1
   1fcc4:	mov	r0, r5
   1fcc8:	add	r1, sp, #24
   1fccc:	bl	2690 <InflateSkipData>
   1fcd0:	ldr	r0, [sl, #4]
   1fcd4:	add	r7, r7, #1
   1fcd8:	add	r4, r4, r6, lsl #2
   1fcdc:	mov	r6, r8
   1fce0:	cmp	r7, r0
   1fce4:	ldr	r0, [fp, #16]
   1fce8:	blt	1fc54 <ReadCompressedDataSlab2+0x141c>
   1fcec:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fcf0:	ldr	r0, [sl, #4]
   1fcf4:	str	r3, [sp, #16]
   1fcf8:	cmp	r0, #1
   1fcfc:	ldr	r0, [fp, #16]
   1fd00:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fd04:	mov	r9, r8
   1fd08:	mov	r6, r2
   1fd0c:	mov	r7, #0
   1fd10:	ldr	r3, [r0]
   1fd14:	add	r1, sp, #24
   1fd18:	mov	r0, r5
   1fd1c:	mov	r2, r9
   1fd20:	mov	r8, r1
   1fd24:	bl	2690 <InflateSkipData>
   1fd28:	ldr	r0, [sl]
   1fd2c:	mov	r1, r8
   1fd30:	mov	r2, r4
   1fd34:	mov	r3, r9
   1fd38:	str	r0, [sp]
   1fd3c:	mov	r0, r5
   1fd40:	bl	1340c <ReadCompressedInt8Data>
   1fd44:	ldr	r0, [r6]
   1fd48:	ldr	r1, [sp, #16]
   1fd4c:	mov	r8, r6
   1fd50:	ldr	r6, [sl]
   1fd54:	add	r0, r0, r1
   1fd58:	ldr	r1, [fp, #20]
   1fd5c:	sub	r2, r6, #1
   1fd60:	ldr	r1, [r1]
   1fd64:	mul	r1, r1, r2
   1fd68:	mov	r2, r9
   1fd6c:	mvn	r1, r1
   1fd70:	add	r0, r0, r1
   1fd74:	ldr	r1, [fp, #16]
   1fd78:	ldr	r1, [r1]
   1fd7c:	sub	r3, r0, r1
   1fd80:	mov	r0, r5
   1fd84:	add	r1, sp, #24
   1fd88:	bl	2690 <InflateSkipData>
   1fd8c:	ldr	r0, [sl, #4]
   1fd90:	add	r7, r7, #1
   1fd94:	add	r4, r4, r6
   1fd98:	mov	r6, r8
   1fd9c:	cmp	r7, r0
   1fda0:	ldr	r0, [fp, #16]
   1fda4:	blt	1fd10 <ReadCompressedDataSlab2+0x14d8>
   1fda8:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fdac:	ldr	r0, [sl, #4]
   1fdb0:	str	r3, [sp, #16]
   1fdb4:	cmp	r0, #1
   1fdb8:	ldr	r0, [fp, #16]
   1fdbc:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fdc0:	mov	r9, r8
   1fdc4:	mov	r6, r2
   1fdc8:	mov	r7, #0
   1fdcc:	ldr	r3, [r0]
   1fdd0:	add	r1, sp, #24
   1fdd4:	mov	r0, r5
   1fdd8:	mov	r2, r9
   1fddc:	mov	r8, r1
   1fde0:	bl	2690 <InflateSkipData>
   1fde4:	ldr	r0, [sl]
   1fde8:	mov	r1, r8
   1fdec:	mov	r2, r4
   1fdf0:	mov	r3, r9
   1fdf4:	str	r0, [sp]
   1fdf8:	mov	r0, r5
   1fdfc:	bl	14eb8 <ReadCompressedUInt8Data>
   1fe00:	ldr	r0, [r6]
   1fe04:	ldr	r1, [sp, #16]
   1fe08:	mov	r8, r6
   1fe0c:	ldr	r6, [sl]
   1fe10:	add	r0, r0, r1
   1fe14:	ldr	r1, [fp, #20]
   1fe18:	sub	r2, r6, #1
   1fe1c:	ldr	r1, [r1]
   1fe20:	mul	r1, r1, r2
   1fe24:	mov	r2, r9
   1fe28:	mvn	r1, r1
   1fe2c:	add	r0, r0, r1
   1fe30:	ldr	r1, [fp, #16]
   1fe34:	ldr	r1, [r1]
   1fe38:	sub	r3, r0, r1
   1fe3c:	mov	r0, r5
   1fe40:	add	r1, sp, #24
   1fe44:	bl	2690 <InflateSkipData>
   1fe48:	ldr	r0, [sl, #4]
   1fe4c:	add	r7, r7, #1
   1fe50:	add	r4, r4, r6
   1fe54:	mov	r6, r8
   1fe58:	cmp	r7, r0
   1fe5c:	ldr	r0, [fp, #16]
   1fe60:	blt	1fdcc <ReadCompressedDataSlab2+0x1594>
   1fe64:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1fe68:	ldr	r0, [sl, #4]
   1fe6c:	str	r3, [sp, #16]
   1fe70:	cmp	r0, #1
   1fe74:	ldr	r0, [fp, #16]
   1fe78:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fe7c:	mov	r9, r8
   1fe80:	mov	r6, r2
   1fe84:	mov	r7, #0
   1fe88:	ldr	r3, [r0]
   1fe8c:	add	r1, sp, #24
   1fe90:	mov	r0, r5
   1fe94:	mov	r2, r9
   1fe98:	mov	r8, r1
   1fe9c:	bl	2690 <InflateSkipData>
   1fea0:	ldr	r0, [sl]
   1fea4:	mov	r1, r8
   1fea8:	mov	r2, r4
   1feac:	mov	r3, r9
   1feb0:	str	r0, [sp]
   1feb4:	mov	r0, r5
   1feb8:	bl	feec <ReadCompressedInt16Data>
   1febc:	ldr	r0, [r6]
   1fec0:	ldr	r1, [sp, #16]
   1fec4:	mov	r8, r6
   1fec8:	ldr	r6, [sl]
   1fecc:	add	r0, r0, r1
   1fed0:	ldr	r1, [fp, #20]
   1fed4:	sub	r2, r6, #1
   1fed8:	ldr	r1, [r1]
   1fedc:	mul	r1, r1, r2
   1fee0:	mov	r2, r9
   1fee4:	mvn	r1, r1
   1fee8:	add	r0, r0, r1
   1feec:	ldr	r1, [fp, #16]
   1fef0:	ldr	r1, [r1]
   1fef4:	sub	r3, r0, r1
   1fef8:	mov	r0, r5
   1fefc:	add	r1, sp, #24
   1ff00:	bl	2690 <InflateSkipData>
   1ff04:	ldr	r0, [sl, #4]
   1ff08:	add	r7, r7, #1
   1ff0c:	add	r4, r4, r6, lsl #1
   1ff10:	mov	r6, r8
   1ff14:	cmp	r7, r0
   1ff18:	ldr	r0, [fp, #16]
   1ff1c:	blt	1fe88 <ReadCompressedDataSlab2+0x1650>
   1ff20:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ff24:	ldr	r0, [sl, #4]
   1ff28:	str	r3, [sp, #12]
   1ff2c:	cmp	r0, #1
   1ff30:	ldr	r0, [fp, #16]
   1ff34:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1ff38:	mov	r9, r8
   1ff3c:	mov	r6, r2
   1ff40:	mov	r7, #0
   1ff44:	ldr	r3, [r0]
   1ff48:	add	r1, sp, #24
   1ff4c:	mov	r0, r5
   1ff50:	mov	r2, r9
   1ff54:	mov	r8, r1
   1ff58:	bl	2690 <InflateSkipData>
   1ff5c:	ldr	r0, [sl]
   1ff60:	mov	r1, r8
   1ff64:	mov	r2, r4
   1ff68:	mov	r3, r9
   1ff6c:	str	r0, [sp]
   1ff70:	mov	r0, r5
   1ff74:	bl	11960 <ReadCompressedUInt16Data>
   1ff78:	ldr	r0, [r6]
   1ff7c:	ldr	r1, [sp, #12]
   1ff80:	mov	r8, r6
   1ff84:	ldr	r6, [sl]
   1ff88:	add	r0, r0, r1
   1ff8c:	ldr	r1, [fp, #20]
   1ff90:	sub	r2, r6, #1
   1ff94:	ldr	r1, [r1]
   1ff98:	mul	r1, r1, r2
   1ff9c:	mov	r2, r9
   1ffa0:	mvn	r1, r1
   1ffa4:	add	r0, r0, r1
   1ffa8:	ldr	r1, [fp, #16]
   1ffac:	ldr	r1, [r1]
   1ffb0:	sub	r3, r0, r1
   1ffb4:	mov	r0, r5
   1ffb8:	add	r1, sp, #24
   1ffbc:	bl	2690 <InflateSkipData>
   1ffc0:	ldr	r0, [sl, #4]
   1ffc4:	add	r7, r7, #1
   1ffc8:	add	r4, r4, r6, lsl #1
   1ffcc:	mov	r6, r8
   1ffd0:	cmp	r7, r0
   1ffd4:	ldr	r0, [fp, #16]
   1ffd8:	blt	1ff44 <ReadCompressedDataSlab2+0x170c>
   1ffdc:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   1ffe0:	ldr	r0, [sl, #4]
   1ffe4:	str	r3, [sp, #16]
   1ffe8:	cmp	r0, #1
   1ffec:	ldr	r0, [fp, #16]
   1fff0:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   1fff4:	mov	r9, r8
   1fff8:	mov	r6, r2
   1fffc:	mov	r7, #0
   20000:	ldr	r3, [r0]
   20004:	add	r1, sp, #24
   20008:	mov	r0, r5
   2000c:	mov	r2, r9
   20010:	mov	r8, r1
   20014:	bl	2690 <InflateSkipData>
   20018:	ldr	r0, [sl]
   2001c:	mov	r1, r8
   20020:	mov	r2, r4
   20024:	mov	r3, r9
   20028:	str	r0, [sp]
   2002c:	mov	r0, r5
   20030:	bl	ca14 <ReadCompressedInt32Data>
   20034:	ldr	r0, [r6]
   20038:	ldr	r1, [sp, #16]
   2003c:	mov	r8, r6
   20040:	ldr	r6, [sl]
   20044:	add	r0, r0, r1
   20048:	ldr	r1, [fp, #20]
   2004c:	sub	r2, r6, #1
   20050:	ldr	r1, [r1]
   20054:	mul	r1, r1, r2
   20058:	mov	r2, r9
   2005c:	mvn	r1, r1
   20060:	add	r0, r0, r1
   20064:	ldr	r1, [fp, #16]
   20068:	ldr	r1, [r1]
   2006c:	sub	r3, r0, r1
   20070:	mov	r0, r5
   20074:	add	r1, sp, #24
   20078:	bl	2690 <InflateSkipData>
   2007c:	ldr	r0, [sl, #4]
   20080:	add	r7, r7, #1
   20084:	add	r4, r4, r6, lsl #2
   20088:	mov	r6, r8
   2008c:	cmp	r7, r0
   20090:	ldr	r0, [fp, #16]
   20094:	blt	20000 <ReadCompressedDataSlab2+0x17c8>
   20098:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   2009c:	ldr	r0, [sl, #4]
   200a0:	str	r3, [sp, #16]
   200a4:	cmp	r0, #1
   200a8:	ldr	r0, [fp, #16]
   200ac:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   200b0:	mov	r9, r8
   200b4:	mov	r6, r2
   200b8:	mov	r7, #0
   200bc:	ldr	r3, [r0]
   200c0:	add	r1, sp, #24
   200c4:	mov	r0, r5
   200c8:	mov	r2, r9
   200cc:	mov	r8, r1
   200d0:	bl	2690 <InflateSkipData>
   200d4:	ldr	r0, [sl]
   200d8:	mov	r1, r8
   200dc:	mov	r2, r4
   200e0:	mov	r3, r9
   200e4:	str	r0, [sp]
   200e8:	mov	r0, r5
   200ec:	bl	e478 <ReadCompressedUInt32Data>
   200f0:	ldr	r0, [r6]
   200f4:	ldr	r1, [sp, #16]
   200f8:	mov	r8, r6
   200fc:	ldr	r6, [sl]
   20100:	add	r0, r0, r1
   20104:	ldr	r1, [fp, #20]
   20108:	sub	r2, r6, #1
   2010c:	ldr	r1, [r1]
   20110:	mul	r1, r1, r2
   20114:	mov	r2, r9
   20118:	mvn	r1, r1
   2011c:	add	r0, r0, r1
   20120:	ldr	r1, [fp, #16]
   20124:	ldr	r1, [r1]
   20128:	sub	r3, r0, r1
   2012c:	mov	r0, r5
   20130:	add	r1, sp, #24
   20134:	bl	2690 <InflateSkipData>
   20138:	ldr	r0, [sl, #4]
   2013c:	add	r7, r7, #1
   20140:	add	r4, r4, r6, lsl #2
   20144:	mov	r6, r8
   20148:	cmp	r7, r0
   2014c:	ldr	r0, [fp, #16]
   20150:	blt	200bc <ReadCompressedDataSlab2+0x1884>
   20154:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   20158:	ldr	r0, [sl, #4]
   2015c:	str	r3, [sp, #16]
   20160:	cmp	r0, #1
   20164:	ldr	r0, [fp, #16]
   20168:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   2016c:	mov	r9, r8
   20170:	mov	r6, r2
   20174:	mov	r7, #0
   20178:	ldr	r3, [r0]
   2017c:	add	r1, sp, #24
   20180:	mov	r0, r5
   20184:	mov	r2, r9
   20188:	mov	r8, r1
   2018c:	bl	2690 <InflateSkipData>
   20190:	ldr	r0, [sl]
   20194:	mov	r1, r8
   20198:	mov	r2, r4
   2019c:	mov	r3, r9
   201a0:	str	r0, [sp]
   201a4:	mov	r0, r5
   201a8:	bl	af40 <ReadCompressedUInt64Data>
   201ac:	ldr	r0, [r6]
   201b0:	ldr	r1, [sp, #16]
   201b4:	mov	r8, r6
   201b8:	ldr	r6, [sl]
   201bc:	add	r0, r0, r1
   201c0:	ldr	r1, [fp, #20]
   201c4:	sub	r2, r6, #1
   201c8:	ldr	r1, [r1]
   201cc:	mul	r1, r1, r2
   201d0:	mov	r2, r9
   201d4:	mvn	r1, r1
   201d8:	add	r0, r0, r1
   201dc:	ldr	r1, [fp, #16]
   201e0:	ldr	r1, [r1]
   201e4:	sub	r3, r0, r1
   201e8:	mov	r0, r5
   201ec:	add	r1, sp, #24
   201f0:	bl	2690 <InflateSkipData>
   201f4:	ldr	r0, [sl, #4]
   201f8:	add	r7, r7, #1
   201fc:	add	r4, r4, r6, lsl #3
   20200:	mov	r6, r8
   20204:	cmp	r7, r0
   20208:	ldr	r0, [fp, #16]
   2020c:	blt	20178 <ReadCompressedDataSlab2+0x1940>
   20210:	b	202cc <ReadCompressedDataSlab2+0x1a94>
   20214:	ldr	r0, [sl, #4]
   20218:	str	r3, [sp, #16]
   2021c:	cmp	r0, #1
   20220:	ldr	r0, [fp, #16]
   20224:	blt	202cc <ReadCompressedDataSlab2+0x1a94>
   20228:	mov	r9, r8
   2022c:	mov	r6, r2
   20230:	mov	r7, #0
   20234:	ldr	r3, [r0]
   20238:	add	r1, sp, #24
   2023c:	mov	r0, r5
   20240:	mov	r2, r9
   20244:	mov	r8, r1
   20248:	bl	2690 <InflateSkipData>
   2024c:	ldr	r0, [sl]
   20250:	mov	r1, r8
   20254:	mov	r2, r4
   20258:	mov	r3, r9
   2025c:	str	r0, [sp]
   20260:	mov	r0, r5
   20264:	bl	92a4 <ReadCompressedInt64Data>
   20268:	ldr	r0, [r6]
   2026c:	ldr	r1, [sp, #16]
   20270:	mov	r8, r6
   20274:	ldr	r6, [sl]
   20278:	add	r0, r0, r1
   2027c:	ldr	r1, [fp, #20]
   20280:	sub	r2, r6, #1
   20284:	ldr	r1, [r1]
   20288:	mul	r1, r1, r2
   2028c:	mov	r2, r9
   20290:	mvn	r1, r1
   20294:	add	r0, r0, r1
   20298:	ldr	r1, [fp, #16]
   2029c:	ldr	r1, [r1]
   202a0:	sub	r3, r0, r1
   202a4:	mov	r0, r5
   202a8:	add	r1, sp, #24
   202ac:	bl	2690 <InflateSkipData>
   202b0:	ldr	r0, [sl, #4]
   202b4:	add	r7, r7, #1
   202b8:	add	r4, r4, r6, lsl #3
   202bc:	mov	r6, r8
   202c0:	cmp	r7, r0
   202c4:	ldr	r0, [fp, #16]
   202c8:	blt	20234 <ReadCompressedDataSlab2+0x19fc>
   202cc:	add	r0, sp, #24
   202d0:	bl	1954 <inflateEnd@plt>
   202d4:	mov	r0, #0
   202d8:	sub	sp, fp, #28
   202dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000202e0 <Mat_Create5>:
   202e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   202e4:	add	fp, sp, #24
   202e8:	sub	sp, sp, #24
   202ec:	mov	r4, #0
   202f0:	mov	r8, r1
   202f4:	mov	r6, r0
   202f8:	strh	r4, [sp, #22]
   202fc:	ldr	r1, [pc, #408]	; 2049c <Mat_Create5+0x1bc>
   20300:	add	r1, pc, r1
   20304:	bl	17f8 <fopen@plt>
   20308:	cmp	r0, #0
   2030c:	beq	20490 <Mat_Create5+0x1b0>
   20310:	mov	r5, r0
   20314:	mov	r0, #44	; 0x2c
   20318:	bl	18e8 <malloc@plt>
   2031c:	cmp	r0, #0
   20320:	beq	203c4 <Mat_Create5+0xe4>
   20324:	mov	r4, r0
   20328:	mov	r0, #128	; 0x80
   2032c:	mov	r7, #0
   20330:	str	r0, [r4, #28]
   20334:	mov	r0, #0
   20338:	str	r7, [r4, #32]
   2033c:	str	r7, [r4, #36]	; 0x24
   20340:	str	r7, [r4, #40]	; 0x28
   20344:	str	r7, [r4, #16]
   20348:	bl	184c <time@plt>
   2034c:	str	r0, [sp, #16]
   20350:	str	r5, [r4]
   20354:	mov	r1, r6
   20358:	ldr	r0, [pc, #320]	; 204a0 <Mat_Create5+0x1c0>
   2035c:	add	r0, pc, r0
   20360:	bl	1ddc <strdup_printf>
   20364:	str	r0, [r4, #12]
   20368:	mov	r0, #128	; 0x80
   2036c:	mov	r9, #1
   20370:	str	r7, [r4, #20]
   20374:	str	r9, [r4, #24]
   20378:	bl	18e8 <malloc@plt>
   2037c:	mov	r7, r0
   20380:	str	r0, [r4, #4]
   20384:	mov	r0, #8
   20388:	bl	18e8 <malloc@plt>
   2038c:	mov	r6, r0
   20390:	str	r0, [r4, #8]
   20394:	mov	r0, r7
   20398:	mov	r1, #32
   2039c:	mov	r2, #128	; 0x80
   203a0:	bl	19a8 <memset@plt>
   203a4:	cmp	r8, #0
   203a8:	beq	203d4 <Mat_Create5+0xf4>
   203ac:	ldr	r2, [pc, #248]	; 204ac <Mat_Create5+0x1cc>
   203b0:	mov	r0, r7
   203b4:	mov	r1, #116	; 0x74
   203b8:	mov	r3, r8
   203bc:	add	r2, pc, r2
   203c0:	b	2040c <Mat_Create5+0x12c>
   203c4:	mov	r0, r5
   203c8:	bl	19e4 <fclose@plt>
   203cc:	mov	r4, #0
   203d0:	b	20490 <Mat_Create5+0x1b0>
   203d4:	add	r0, sp, #16
   203d8:	bl	1870 <ctime@plt>
   203dc:	mov	r1, #15
   203e0:	mov	r2, #5
   203e4:	str	r0, [sp, #12]
   203e8:	str	r9, [sp]
   203ec:	mov	r0, r7
   203f0:	str	r1, [sp, #8]
   203f4:	str	r2, [sp, #4]
   203f8:	mov	r1, #116	; 0x74
   203fc:	ldr	r2, [pc, #160]	; 204a4 <Mat_Create5+0x1c4>
   20400:	ldr	r3, [pc, #160]	; 204a8 <Mat_Create5+0x1c8>
   20404:	add	r2, pc, r2
   20408:	add	r3, pc, r3
   2040c:	bl	1990 <snprintf@plt>
   20410:	cmp	r0, #116	; 0x74
   20414:	mov	r1, #1
   20418:	mov	r2, #116	; 0x74
   2041c:	mov	r3, r5
   20420:	movcs	r0, #0
   20424:	strbcs	r0, [r7, #115]	; 0x73
   20428:	movw	r0, #8224	; 0x2020
   2042c:	movt	r0, #8224	; 0x2020
   20430:	str	r0, [r6, #4]
   20434:	str	r0, [r6]
   20438:	mov	r0, #256	; 0x100
   2043c:	str	r0, [r4, #16]
   20440:	strh	r0, [sp, #20]
   20444:	movw	r0, #19785	; 0x4d49
   20448:	strh	r0, [sp, #22]
   2044c:	mov	r0, r7
   20450:	bl	18c4 <fwrite@plt>
   20454:	mov	r0, r6
   20458:	mov	r1, #1
   2045c:	mov	r2, #8
   20460:	mov	r3, r5
   20464:	bl	18c4 <fwrite@plt>
   20468:	add	r0, sp, #20
   2046c:	mov	r1, #2
   20470:	mov	r2, #1
   20474:	mov	r3, r5
   20478:	bl	18c4 <fwrite@plt>
   2047c:	add	r0, sp, #22
   20480:	mov	r1, #2
   20484:	mov	r2, #1
   20488:	mov	r3, r5
   2048c:	bl	18c4 <fwrite@plt>
   20490:	mov	r0, r4
   20494:	sub	sp, fp, #24
   20498:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2049c:	.word	0x0002b84d
   204a0:	.word	0x0002c10f
   204a4:	.word	0x0002b74d
   204a8:	.word	0x0002b791
   204ac:	.word	0x0002c0af

000204b0 <Mat_VarRead5>:
   204b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   204b4:	add	fp, sp, #28
   204b8:	sub	sp, sp, #44	; 0x2c
   204bc:	mov	r4, r0
   204c0:	mov	r0, #1
   204c4:	cmp	r1, #0
   204c8:	str	r0, [fp, #-32]	; 0xffffffe0
   204cc:	beq	20a2c <Mat_VarRead5+0x57c>
   204d0:	ldr	r0, [r1, #4]
   204d4:	mov	r5, r1
   204d8:	cmp	r0, #0
   204dc:	beq	20a2c <Mat_VarRead5+0x57c>
   204e0:	mov	r9, r5
   204e4:	ldr	r0, [r9, #52]!	; 0x34
   204e8:	ldr	r1, [r0, #16]
   204ec:	cmp	r1, #0
   204f0:	beq	20504 <Mat_VarRead5+0x54>
   204f4:	str	r1, [r5, #40]	; 0x28
   204f8:	mov	r1, #0
   204fc:	str	r1, [r0, #16]
   20500:	b	20a2c <Mat_VarRead5+0x57c>
   20504:	ldr	r0, [r4]
   20508:	bl	1858 <ftell@plt>
   2050c:	cmn	r0, #1
   20510:	beq	20538 <Mat_VarRead5+0x88>
   20514:	mov	sl, r0
   20518:	sub	r1, fp, #32
   2051c:	mov	r0, r5
   20520:	bl	47128 <SafeMulDims>
   20524:	cmp	r0, #0
   20528:	beq	20548 <Mat_VarRead5+0x98>
   2052c:	ldr	r0, [pc, #4064]	; 21514 <Mat_VarRead5+0x1064>
   20530:	add	r0, pc, r0
   20534:	b	20540 <Mat_VarRead5+0x90>
   20538:	ldr	r0, [pc, #4056]	; 21518 <Mat_VarRead5+0x1068>
   2053c:	add	r0, pc, r0
   20540:	bl	19cc <Mat_Critical@plt>
   20544:	b	20a2c <Mat_VarRead5+0x57c>
   20548:	ldr	r1, [r5, #16]
   2054c:	cmp	r1, #16
   20550:	bhi	2069c <Mat_VarRead5+0x1ec>
   20554:	ldr	r7, [r4, #20]
   20558:	add	r0, pc, #4
   2055c:	ldr	r2, [r0, r1, lsl #2]
   20560:	add	pc, r0, r2
   20564:	.word	0x00000044
   20568:	.word	0x00000074
   2056c:	.word	0x000000bc
   20570:	.word	0x00000138
   20574:	.word	0x00000144
   20578:	.word	0x000001e4
   2057c:	.word	0x000002b4
   20580:	.word	0x000002d4
   20584:	.word	0x000002f4
   20588:	.word	0x00000314
   2058c:	.word	0x00000334
   20590:	.word	0x00000354
   20594:	.word	0x00000374
   20598:	.word	0x00000394
   2059c:	.word	0x000003b4
   205a0:	.word	0x000003e4
   205a4:	.word	0x000004d0
   205a8:	add	r0, pc, #904	; 0x388
   205ac:	mov	r6, r5
   205b0:	vld1.64	{d16-d17}, [r0]
   205b4:	mov	r0, #32
   205b8:	vst1.32	{d16-d17}, [r6], r0
   205bc:	mov	r0, #8
   205c0:	bl	18e8 <malloc@plt>
   205c4:	mov	r1, #0
   205c8:	str	r0, [r6]
   205cc:	str	r1, [r0]
   205d0:	str	r1, [r0, #4]
   205d4:	b	2096c <Mat_VarRead5+0x4bc>
   205d8:	ldr	r7, [r5, #40]	; 0x28
   205dc:	cmp	r7, #0
   205e0:	beq	20b44 <Mat_VarRead5+0x694>
   205e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   205e8:	cmp	r0, #0
   205ec:	beq	20618 <Mat_VarRead5+0x168>
   205f0:	mov	r6, #0
   205f4:	ldr	r1, [r7, r6, lsl #2]
   205f8:	cmp	r1, #0
   205fc:	beq	2060c <Mat_VarRead5+0x15c>
   20600:	mov	r0, r4
   20604:	bl	204b0 <Mat_VarRead5>
   20608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2060c:	add	r6, r6, #1
   20610:	cmp	r6, r0
   20614:	bcc	205f4 <Mat_VarRead5+0x144>
   20618:	mov	r0, #21
   2061c:	b	20a84 <Mat_VarRead5+0x5d4>
   20620:	mov	r0, #22
   20624:	str	r0, [r5, #8]
   20628:	ldr	r0, [r5]
   2062c:	cmp	r0, #0
   20630:	beq	2096c <Mat_VarRead5+0x4bc>
   20634:	ldr	r0, [r5, #12]
   20638:	cmp	r0, #0
   2063c:	beq	2096c <Mat_VarRead5+0x4bc>
   20640:	ldr	r0, [r5, #40]	; 0x28
   20644:	cmp	r0, #0
   20648:	beq	2096c <Mat_VarRead5+0x4bc>
   2064c:	ldr	r0, [r5, #52]	; 0x34
   20650:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20654:	ldr	r2, [r0, #4]
   20658:	add	r0, sp, #32
   2065c:	bl	47184 <SafeMul>
   20660:	ldr	r0, [sp, #32]
   20664:	cmp	r0, #0
   20668:	beq	2096c <Mat_VarRead5+0x4bc>
   2066c:	ldr	r7, [r5, #40]	; 0x28
   20670:	mov	r6, #0
   20674:	ldr	r1, [r7, r6, lsl #2]
   20678:	cmp	r1, #0
   2067c:	beq	2068c <Mat_VarRead5+0x1dc>
   20680:	mov	r0, r4
   20684:	bl	204b0 <Mat_VarRead5>
   20688:	ldr	r0, [sp, #32]
   2068c:	add	r6, r6, #1
   20690:	cmp	r6, r0
   20694:	bcc	20674 <Mat_VarRead5+0x1c4>
   20698:	b	2096c <Mat_VarRead5+0x4bc>
   2069c:	ldr	r0, [pc, #4060]	; 21680 <Mat_VarRead5+0x11d0>
   206a0:	add	r0, pc, r0
   206a4:	b	20b50 <Mat_VarRead5+0x6a0>
   206a8:	ldr	r1, [r5, #52]	; 0x34
   206ac:	ldr	r0, [r4]
   206b0:	mov	r2, #0
   206b4:	mov	r6, #0
   206b8:	ldr	r1, [r1]
   206bc:	bl	1a68 <fseek@plt>
   206c0:	ldr	r0, [r5, #48]	; 0x30
   206c4:	cmp	r0, #1
   206c8:	bne	20a8c <Mat_VarRead5+0x5dc>
   206cc:	ldr	r0, [r9]
   206d0:	add	r8, sp, #32
   206d4:	mov	r2, r8
   206d8:	ldr	r1, [r0, #12]
   206dc:	mov	r0, r4
   206e0:	str	r6, [r1, #4]
   206e4:	bl	30ac <InflateDataType>
   206e8:	mov	r6, r7
   206ec:	cmp	r7, #0
   206f0:	beq	206fc <Mat_VarRead5+0x24c>
   206f4:	add	r0, sp, #32
   206f8:	bl	1c44 <Mat_uint32Swap>
   206fc:	ldr	r0, [sp, #32]
   20700:	uxtb	r7, r0
   20704:	cmp	r7, #25
   20708:	movcs	r7, #0
   2070c:	cmp	r0, #65536	; 0x10000
   20710:	bcs	20c84 <Mat_VarRead5+0x7d4>
   20714:	ldr	r0, [r9]
   20718:	add	r8, r8, #4
   2071c:	mov	r2, r8
   20720:	ldr	r1, [r0, #12]
   20724:	mov	r0, r4
   20728:	bl	30ac <InflateDataType>
   2072c:	cmp	r6, #0
   20730:	beq	2073c <Mat_VarRead5+0x28c>
   20734:	mov	r0, r8
   20738:	bl	1c44 <Mat_uint32Swap>
   2073c:	ldr	r6, [sp, #36]	; 0x24
   20740:	mov	r0, #0
   20744:	b	20c8c <Mat_VarRead5+0x7dc>
   20748:	mov	r0, #0
   2074c:	str	r7, [sp, #20]
   20750:	str	r0, [sp, #28]
   20754:	mov	r0, #28
   20758:	str	r0, [r5, #12]
   2075c:	mov	r0, #28
   20760:	bl	18e8 <malloc@plt>
   20764:	cmp	r0, #0
   20768:	str	r0, [r5, #40]	; 0x28
   2076c:	beq	20b58 <Mat_VarRead5+0x6a8>
   20770:	mov	r7, r0
   20774:	ldr	r0, [r5]
   20778:	mov	r2, #0
   2077c:	mov	r6, #0
   20780:	str	r0, [r7]
   20784:	ldr	r1, [r5, #52]	; 0x34
   20788:	ldr	r0, [r4]
   2078c:	ldr	r1, [r1]
   20790:	bl	1a68 <fseek@plt>
   20794:	ldr	r0, [r5, #48]	; 0x30
   20798:	str	r7, [sp, #24]
   2079c:	cmp	r0, #1
   207a0:	bne	20b64 <Mat_VarRead5+0x6b4>
   207a4:	ldr	r0, [r9]
   207a8:	add	r2, sp, #32
   207ac:	ldr	r1, [r0, #12]
   207b0:	mov	r0, r4
   207b4:	str	r6, [r1, #4]
   207b8:	bl	30ac <InflateDataType>
   207bc:	ldr	r0, [r4, #20]
   207c0:	cmp	r0, #0
   207c4:	beq	207d0 <Mat_VarRead5+0x320>
   207c8:	add	r0, sp, #32
   207cc:	bl	1c44 <Mat_uint32Swap>
   207d0:	ldr	r0, [sp, #32]
   207d4:	mov	r1, #0
   207d8:	uxtb	r6, r0
   207dc:	cmp	r6, #25
   207e0:	movcs	r6, r1
   207e4:	cmp	r0, #65536	; 0x10000
   207e8:	bcs	20bdc <Mat_VarRead5+0x72c>
   207ec:	mov	r0, #0
   207f0:	add	r2, sp, #28
   207f4:	mov	r3, #5
   207f8:	str	r0, [sp, #16]
   207fc:	ldr	r0, [r9]
   20800:	ldr	r1, [r0, #12]
   20804:	mov	r0, #1
   20808:	str	r0, [sp]
   2080c:	mov	r0, r4
   20810:	bl	ca14 <ReadCompressedInt32Data>
   20814:	b	20bec <Mat_VarRead5+0x73c>
   20818:	ldr	r1, [r5, #52]	; 0x34
   2081c:	ldr	r0, [r4]
   20820:	mov	r2, #0
   20824:	ldr	r1, [r1]
   20828:	bl	1a68 <fseek@plt>
   2082c:	mov	r0, #8
   20830:	mov	r1, #9
   20834:	b	20964 <Mat_VarRead5+0x4b4>
   20838:	ldr	r1, [r5, #52]	; 0x34
   2083c:	ldr	r0, [r4]
   20840:	mov	r2, #0
   20844:	ldr	r1, [r1]
   20848:	bl	1a68 <fseek@plt>
   2084c:	mov	r0, #4
   20850:	mov	r1, #7
   20854:	b	20964 <Mat_VarRead5+0x4b4>
   20858:	ldr	r1, [r5, #52]	; 0x34
   2085c:	ldr	r0, [r4]
   20860:	mov	r2, #0
   20864:	ldr	r1, [r1]
   20868:	bl	1a68 <fseek@plt>
   2086c:	mov	r0, #1
   20870:	str	r0, [r5, #8]
   20874:	b	20968 <Mat_VarRead5+0x4b8>
   20878:	ldr	r1, [r5, #52]	; 0x34
   2087c:	ldr	r0, [r4]
   20880:	mov	r2, #0
   20884:	ldr	r1, [r1]
   20888:	bl	1a68 <fseek@plt>
   2088c:	mov	r0, #1
   20890:	mov	r1, #2
   20894:	b	20964 <Mat_VarRead5+0x4b4>
   20898:	ldr	r1, [r5, #52]	; 0x34
   2089c:	ldr	r0, [r4]
   208a0:	mov	r2, #0
   208a4:	ldr	r1, [r1]
   208a8:	bl	1a68 <fseek@plt>
   208ac:	mov	r0, #2
   208b0:	mov	r1, #3
   208b4:	b	20964 <Mat_VarRead5+0x4b4>
   208b8:	ldr	r1, [r5, #52]	; 0x34
   208bc:	ldr	r0, [r4]
   208c0:	mov	r2, #0
   208c4:	ldr	r1, [r1]
   208c8:	bl	1a68 <fseek@plt>
   208cc:	mov	r0, #2
   208d0:	mov	r1, #4
   208d4:	b	20964 <Mat_VarRead5+0x4b4>
   208d8:	ldr	r1, [r5, #52]	; 0x34
   208dc:	ldr	r0, [r4]
   208e0:	mov	r2, #0
   208e4:	ldr	r1, [r1]
   208e8:	bl	1a68 <fseek@plt>
   208ec:	mov	r0, #4
   208f0:	mov	r1, #5
   208f4:	b	20964 <Mat_VarRead5+0x4b4>
   208f8:	ldr	r1, [r5, #52]	; 0x34
   208fc:	ldr	r0, [r4]
   20900:	mov	r2, #0
   20904:	ldr	r1, [r1]
   20908:	bl	1a68 <fseek@plt>
   2090c:	mov	r0, #4
   20910:	mov	r1, #6
   20914:	b	20964 <Mat_VarRead5+0x4b4>
   20918:	ldr	r1, [r5, #52]	; 0x34
   2091c:	ldr	r0, [r4]
   20920:	mov	r2, #0
   20924:	ldr	r1, [r1]
   20928:	bl	1a68 <fseek@plt>
   2092c:	mov	r0, #8
   20930:	mov	r1, #12
   20934:	b	20964 <Mat_VarRead5+0x4b4>
   20938:	.word	0x00000000
   2093c:	.word	0x00000002
   20940:	.word	0x00000009
   20944:	.word	0x00000008
   20948:	ldr	r1, [r5, #52]	; 0x34
   2094c:	ldr	r0, [r4]
   20950:	mov	r2, #0
   20954:	ldr	r1, [r1]
   20958:	bl	1a68 <fseek@plt>
   2095c:	mov	r0, #8
   20960:	mov	r1, #13
   20964:	str	r1, [r5, #8]
   20968:	str	r0, [r5, #12]
   2096c:	ldr	r0, [r5, #16]
   20970:	sub	r0, r0, #6
   20974:	cmp	r0, #9
   20978:	bhi	20a1c <Mat_VarRead5+0x56c>
   2097c:	ldr	r2, [r5, #12]
   20980:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20984:	ldr	r6, [r5, #20]
   20988:	mov	r0, r5
   2098c:	bl	47184 <SafeMul>
   20990:	ldr	r0, [r5]
   20994:	cmp	r6, #0
   20998:	beq	209dc <Mat_VarRead5+0x52c>
   2099c:	bl	4709c <ComplexMalloc>
   209a0:	cmp	r0, #0
   209a4:	beq	20a04 <Mat_VarRead5+0x554>
   209a8:	ldr	r2, [r0]
   209ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209b0:	mov	r7, r0
   209b4:	mov	r0, r4
   209b8:	mov	r1, r5
   209bc:	bl	21d8c <Mat_VarReadNumeric5>
   209c0:	ldr	r2, [r7, #4]
   209c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209c8:	mov	r0, r4
   209cc:	mov	r1, r5
   209d0:	bl	21d8c <Mat_VarReadNumeric5>
   209d4:	str	r7, [r5, #40]	; 0x28
   209d8:	b	20a1c <Mat_VarRead5+0x56c>
   209dc:	bl	18e8 <malloc@plt>
   209e0:	cmp	r0, #0
   209e4:	str	r0, [r5, #40]	; 0x28
   209e8:	beq	20a10 <Mat_VarRead5+0x560>
   209ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209f0:	mov	r2, r0
   209f4:	mov	r0, r4
   209f8:	mov	r1, r5
   209fc:	bl	21d8c <Mat_VarReadNumeric5>
   20a00:	b	20a1c <Mat_VarRead5+0x56c>
   20a04:	ldr	r0, [pc, #4076]	; 219f8 <Mat_VarRead5+0x1548>
   20a08:	add	r0, pc, r0
   20a0c:	b	20a18 <Mat_VarRead5+0x568>
   20a10:	ldr	r0, [pc, #4068]	; 219fc <Mat_VarRead5+0x154c>
   20a14:	add	r0, pc, r0
   20a18:	bl	19cc <Mat_Critical@plt>
   20a1c:	ldr	r0, [r4]
   20a20:	mov	r1, sl
   20a24:	mov	r2, #0
   20a28:	bl	1a68 <fseek@plt>
   20a2c:	sub	sp, fp, #28
   20a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a34:	ldr	r0, [r5]
   20a38:	cmp	r0, #0
   20a3c:	beq	2096c <Mat_VarRead5+0x4bc>
   20a40:	ldr	r1, [r5, #12]
   20a44:	cmp	r1, #0
   20a48:	beq	2096c <Mat_VarRead5+0x4bc>
   20a4c:	ldr	r8, [r5, #40]	; 0x28
   20a50:	cmp	r8, #0
   20a54:	beq	20a80 <Mat_VarRead5+0x5d0>
   20a58:	cmp	r1, r0
   20a5c:	bhi	20a80 <Mat_VarRead5+0x5d0>
   20a60:	udiv	r7, r0, r1
   20a64:	mov	r6, #0
   20a68:	ldr	r1, [r8, r6, lsl #2]
   20a6c:	mov	r0, r4
   20a70:	bl	204b0 <Mat_VarRead5>
   20a74:	add	r6, r6, #1
   20a78:	cmp	r6, r7
   20a7c:	bcc	20a68 <Mat_VarRead5+0x5b8>
   20a80:	mov	r0, #24
   20a84:	str	r0, [r5, #8]
   20a88:	b	2096c <Mat_VarRead5+0x4bc>
   20a8c:	ldr	r3, [r4]
   20a90:	mov	r0, #1
   20a94:	add	r8, sp, #32
   20a98:	mov	r1, #4
   20a9c:	mov	r2, #1
   20aa0:	str	r0, [sp, #24]
   20aa4:	mov	r0, r8
   20aa8:	bl	18d0 <fread@plt>
   20aac:	mov	r6, r7
   20ab0:	cmp	r7, #0
   20ab4:	beq	20ac0 <Mat_VarRead5+0x610>
   20ab8:	add	r0, sp, #32
   20abc:	bl	1c44 <Mat_uint32Swap>
   20ac0:	ldr	r0, [sp, #32]
   20ac4:	mov	r1, #0
   20ac8:	uxtb	r7, r0
   20acc:	cmp	r7, #25
   20ad0:	movcs	r7, r1
   20ad4:	cmp	r1, r0, lsr #16
   20ad8:	bne	20b0c <Mat_VarRead5+0x65c>
   20adc:	ldr	r3, [r4]
   20ae0:	add	r8, r8, #4
   20ae4:	mov	r1, #4
   20ae8:	mov	r2, #1
   20aec:	mov	r0, r8
   20af0:	bl	18d0 <fread@plt>
   20af4:	cmp	r6, #0
   20af8:	beq	20b04 <Mat_VarRead5+0x654>
   20afc:	mov	r0, r8
   20b00:	bl	1c44 <Mat_uint32Swap>
   20b04:	mov	r0, #0
   20b08:	str	r0, [sp, #24]
   20b0c:	mov	r0, #2
   20b10:	str	r0, [r5, #8]
   20b14:	mov	r0, #2
   20b18:	bl	193c <Mat_SizeOf@plt>
   20b1c:	str	r0, [r5, #12]
   20b20:	mov	r2, r0
   20b24:	mov	r0, r5
   20b28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b2c:	bl	47184 <SafeMul>
   20b30:	cmp	r0, #0
   20b34:	beq	20ca4 <Mat_VarRead5+0x7f4>
   20b38:	ldr	r0, [pc, #4080]	; 21b30 <Mat_VarRead5+0x1680>
   20b3c:	add	r0, pc, r0
   20b40:	b	21234 <Mat_VarRead5+0xd84>
   20b44:	ldr	r1, [r5, #36]	; 0x24
   20b48:	ldr	r0, [pc, #4092]	; 21b4c <Mat_VarRead5+0x169c>
   20b4c:	add	r0, pc, r0
   20b50:	bl	19cc <Mat_Critical@plt>
   20b54:	b	2096c <Mat_VarRead5+0x4bc>
   20b58:	ldr	r0, [pc, #4080]	; 21b50 <Mat_VarRead5+0x16a0>
   20b5c:	add	r0, pc, r0
   20b60:	b	21234 <Mat_VarRead5+0xd84>
   20b64:	ldr	r3, [r4]
   20b68:	add	r0, sp, #32
   20b6c:	mov	r1, #4
   20b70:	mov	r2, #1
   20b74:	bl	18d0 <fread@plt>
   20b78:	ldr	r0, [r4, #20]
   20b7c:	cmp	r0, #0
   20b80:	beq	20b8c <Mat_VarRead5+0x6dc>
   20b84:	add	r0, sp, #32
   20b88:	bl	1c44 <Mat_uint32Swap>
   20b8c:	ldr	r0, [sp, #32]
   20b90:	mov	r1, #0
   20b94:	uxtb	r6, r0
   20b98:	cmp	r6, #25
   20b9c:	movcs	r6, r1
   20ba0:	cmp	r0, #65536	; 0x10000
   20ba4:	bcs	20bdc <Mat_VarRead5+0x72c>
   20ba8:	ldr	r3, [r4]
   20bac:	mov	r0, #0
   20bb0:	mov	r1, #4
   20bb4:	mov	r2, #1
   20bb8:	str	r0, [sp, #16]
   20bbc:	add	r0, sp, #28
   20bc0:	bl	18d0 <fread@plt>
   20bc4:	ldr	r0, [r4, #20]
   20bc8:	cmp	r0, #0
   20bcc:	beq	20bec <Mat_VarRead5+0x73c>
   20bd0:	add	r0, sp, #28
   20bd4:	bl	1c30 <Mat_int32Swap>
   20bd8:	b	20bec <Mat_VarRead5+0x73c>
   20bdc:	lsr	r0, r0, #16
   20be0:	str	r0, [sp, #28]
   20be4:	mov	r0, #1
   20be8:	str	r0, [sp, #16]
   20bec:	ldr	r0, [sp, #28]
   20bf0:	ldr	r8, [sp, #24]
   20bf4:	asr	r1, r0, #31
   20bf8:	add	r0, r0, r1, lsr #30
   20bfc:	asr	r7, r0, #2
   20c00:	bic	r0, r0, #3
   20c04:	str	r7, [r8, #8]
   20c08:	bl	18e8 <malloc@plt>
   20c0c:	cmp	r0, #0
   20c10:	str	r0, [r8, #4]
   20c14:	beq	20d48 <Mat_VarRead5+0x898>
   20c18:	mov	r2, r0
   20c1c:	ldr	r0, [r5, #48]	; 0x30
   20c20:	cmp	r0, #1
   20c24:	beq	20d54 <Mat_VarRead5+0x8a4>
   20c28:	mov	r1, #0
   20c2c:	cmp	r0, #0
   20c30:	str	r1, [sp, #12]
   20c34:	bne	20e1c <Mat_VarRead5+0x96c>
   20c38:	mov	r1, r2
   20c3c:	mov	r0, r4
   20c40:	mov	r2, r6
   20c44:	mov	r3, r7
   20c48:	bl	b4d8 <ReadInt32Data>
   20c4c:	ldr	r1, [sp, #16]
   20c50:	cmp	r1, #0
   20c54:	addne	r0, r0, #4
   20c58:	asr	r1, r0, #31
   20c5c:	str	r0, [sp, #12]
   20c60:	add	r1, r0, r1, lsr #29
   20c64:	bic	r1, r1, #7
   20c68:	subs	r1, r0, r1
   20c6c:	beq	20da4 <Mat_VarRead5+0x8f4>
   20c70:	ldr	r0, [r4]
   20c74:	rsb	r1, r1, #8
   20c78:	mov	r2, #1
   20c7c:	bl	1a68 <fseek@plt>
   20c80:	b	20da4 <Mat_VarRead5+0x8f4>
   20c84:	lsr	r6, r0, #16
   20c88:	mov	r0, #1
   20c8c:	str	r0, [sp, #24]
   20c90:	mov	r0, r7
   20c94:	str	r7, [r5, #8]
   20c98:	bl	193c <Mat_SizeOf@plt>
   20c9c:	str	r0, [r5, #12]
   20ca0:	str	r6, [r5]
   20ca4:	ldr	r0, [r5, #20]
   20ca8:	cmp	r0, #0
   20cac:	bne	2096c <Mat_VarRead5+0x4bc>
   20cb0:	ldr	r6, [r5]
   20cb4:	mov	r1, #1
   20cb8:	add	r0, r6, #1
   20cbc:	bl	17b0 <calloc@plt>
   20cc0:	cmp	r0, #0
   20cc4:	str	r0, [r5, #40]	; 0x28
   20cc8:	beq	20f48 <Mat_VarRead5+0xa98>
   20ccc:	cmp	r6, #0
   20cd0:	beq	2096c <Mat_VarRead5+0x4bc>
   20cd4:	ldr	r2, [r5, #12]
   20cd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20cdc:	add	r0, sp, #28
   20ce0:	bl	47184 <SafeMul>
   20ce4:	cmp	r0, #0
   20ce8:	bne	2096c <Mat_VarRead5+0x4bc>
   20cec:	ldr	r0, [r5]
   20cf0:	ldr	r1, [sp, #28]
   20cf4:	cmp	r1, r0
   20cf8:	bhi	2096c <Mat_VarRead5+0x4bc>
   20cfc:	ldr	r0, [r5, #48]	; 0x30
   20d00:	cmp	r0, #1
   20d04:	beq	21324 <Mat_VarRead5+0xe74>
   20d08:	cmp	r0, #0
   20d0c:	bne	2096c <Mat_VarRead5+0x4bc>
   20d10:	ldr	r1, [r5, #40]	; 0x28
   20d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20d18:	mov	r0, r4
   20d1c:	mov	r2, r7
   20d20:	bl	154d4 <ReadCharData>
   20d24:	ldr	r1, [sp, #24]
   20d28:	cmp	r1, #0
   20d2c:	addne	r0, r0, #4
   20d30:	asr	r1, r0, #31
   20d34:	add	r1, r0, r1, lsr #29
   20d38:	bic	r1, r1, #7
   20d3c:	subs	r1, r0, r1
   20d40:	bne	21c08 <Mat_VarRead5+0x1758>
   20d44:	b	2096c <Mat_VarRead5+0x4bc>
   20d48:	ldr	r0, [pc, #4044]	; 21d1c <Mat_VarRead5+0x186c>
   20d4c:	add	r0, pc, r0
   20d50:	b	21234 <Mat_VarRead5+0xd84>
   20d54:	ldr	r0, [r9]
   20d58:	mov	r3, r6
   20d5c:	ldr	r1, [r0, #12]
   20d60:	mov	r0, r4
   20d64:	str	r7, [sp]
   20d68:	bl	ca14 <ReadCompressedInt32Data>
   20d6c:	ldr	r1, [sp, #16]
   20d70:	cmp	r1, #0
   20d74:	addne	r0, r0, #4
   20d78:	asr	r1, r0, #31
   20d7c:	str	r0, [sp, #12]
   20d80:	add	r1, r0, r1, lsr #29
   20d84:	bic	r1, r1, #7
   20d88:	subs	r0, r0, r1
   20d8c:	beq	20da4 <Mat_VarRead5+0x8f4>
   20d90:	ldr	r1, [r9]
   20d94:	rsb	r2, r0, #8
   20d98:	mov	r0, r4
   20d9c:	ldr	r1, [r1, #12]
   20da0:	bl	2340 <InflateSkip>
   20da4:	ldr	r0, [r5, #48]	; 0x30
   20da8:	cmp	r0, #1
   20dac:	bne	20e1c <Mat_VarRead5+0x96c>
   20db0:	ldr	r0, [r9]
   20db4:	mov	r6, #0
   20db8:	add	r2, sp, #32
   20dbc:	ldr	r1, [r0, #12]
   20dc0:	mov	r0, r4
   20dc4:	str	r6, [r1, #4]
   20dc8:	bl	30ac <InflateDataType>
   20dcc:	ldr	r0, [r4, #20]
   20dd0:	cmp	r0, #0
   20dd4:	beq	20de0 <Mat_VarRead5+0x930>
   20dd8:	add	r0, sp, #32
   20ddc:	bl	1c44 <Mat_uint32Swap>
   20de0:	ldr	r0, [sp, #32]
   20de4:	uxtb	r1, r0
   20de8:	cmp	r1, #25
   20dec:	movcc	r6, r1
   20df0:	cmp	r0, #65536	; 0x10000
   20df4:	bcs	20e94 <Mat_VarRead5+0x9e4>
   20df8:	ldr	r0, [r9]
   20dfc:	add	r2, sp, #28
   20e00:	mov	r3, #5
   20e04:	ldr	r1, [r0, #12]
   20e08:	mov	r0, #1
   20e0c:	str	r0, [sp]
   20e10:	mov	r0, r4
   20e14:	bl	ca14 <ReadCompressedInt32Data>
   20e18:	b	20ea4 <Mat_VarRead5+0x9f4>
   20e1c:	ldr	r3, [r4]
   20e20:	add	r0, sp, #32
   20e24:	mov	r1, #4
   20e28:	mov	r2, #1
   20e2c:	bl	18d0 <fread@plt>
   20e30:	ldr	r0, [r4, #20]
   20e34:	cmp	r0, #0
   20e38:	beq	20e44 <Mat_VarRead5+0x994>
   20e3c:	add	r0, sp, #32
   20e40:	bl	1c44 <Mat_uint32Swap>
   20e44:	ldr	r0, [sp, #32]
   20e48:	mov	r1, #0
   20e4c:	uxtb	r6, r0
   20e50:	cmp	r6, #25
   20e54:	movcs	r6, r1
   20e58:	cmp	r0, #65536	; 0x10000
   20e5c:	bcs	20e94 <Mat_VarRead5+0x9e4>
   20e60:	ldr	r3, [r4]
   20e64:	add	r0, sp, #28
   20e68:	mov	r1, #4
   20e6c:	mov	r2, #1
   20e70:	bl	18d0 <fread@plt>
   20e74:	ldr	r0, [r4, #20]
   20e78:	cmp	r0, #0
   20e7c:	beq	20ea4 <Mat_VarRead5+0x9f4>
   20e80:	mov	r0, #0
   20e84:	str	r0, [sp, #16]
   20e88:	add	r0, sp, #28
   20e8c:	bl	1c30 <Mat_int32Swap>
   20e90:	b	20eac <Mat_VarRead5+0x9fc>
   20e94:	lsr	r0, r0, #16
   20e98:	str	r0, [sp, #28]
   20e9c:	mov	r0, #1
   20ea0:	b	20ea8 <Mat_VarRead5+0x9f8>
   20ea4:	mov	r0, #0
   20ea8:	str	r0, [sp, #16]
   20eac:	ldr	r0, [sp, #28]
   20eb0:	ldr	r8, [sp, #24]
   20eb4:	asr	r1, r0, #31
   20eb8:	add	r0, r0, r1, lsr #30
   20ebc:	asr	r7, r0, #2
   20ec0:	bic	r0, r0, #3
   20ec4:	str	r7, [r8, #16]
   20ec8:	bl	18e8 <malloc@plt>
   20ecc:	cmp	r0, #0
   20ed0:	str	r0, [r8, #12]
   20ed4:	beq	20f3c <Mat_VarRead5+0xa8c>
   20ed8:	mov	r2, r0
   20edc:	ldr	r0, [r5, #48]	; 0x30
   20ee0:	cmp	r0, #1
   20ee4:	beq	20f54 <Mat_VarRead5+0xaa4>
   20ee8:	cmp	r0, #0
   20eec:	bne	21020 <Mat_VarRead5+0xb70>
   20ef0:	mov	r1, r2
   20ef4:	mov	r0, r4
   20ef8:	mov	r2, r6
   20efc:	mov	r3, r7
   20f00:	bl	b4d8 <ReadInt32Data>
   20f04:	ldr	r1, [sp, #16]
   20f08:	cmp	r1, #0
   20f0c:	addne	r0, r0, #4
   20f10:	asr	r1, r0, #31
   20f14:	str	r0, [sp, #12]
   20f18:	add	r1, r0, r1, lsr #29
   20f1c:	bic	r1, r1, #7
   20f20:	subs	r1, r0, r1
   20f24:	beq	20fa4 <Mat_VarRead5+0xaf4>
   20f28:	ldr	r0, [r4]
   20f2c:	rsb	r1, r1, #8
   20f30:	mov	r2, #1
   20f34:	bl	1a68 <fseek@plt>
   20f38:	b	20fa4 <Mat_VarRead5+0xaf4>
   20f3c:	ldr	r0, [pc, #3652]	; 21d88 <Mat_VarRead5+0x18d8>
   20f40:	add	r0, pc, r0
   20f44:	b	21234 <Mat_VarRead5+0xd84>
   20f48:	ldr	r0, [pc, #3628]	; 21d7c <Mat_VarRead5+0x18cc>
   20f4c:	add	r0, pc, r0
   20f50:	b	21234 <Mat_VarRead5+0xd84>
   20f54:	ldr	r0, [r9]
   20f58:	mov	r3, r6
   20f5c:	ldr	r1, [r0, #12]
   20f60:	mov	r0, r4
   20f64:	str	r7, [sp]
   20f68:	bl	ca14 <ReadCompressedInt32Data>
   20f6c:	ldr	r1, [sp, #16]
   20f70:	cmp	r1, #0
   20f74:	addne	r0, r0, #4
   20f78:	asr	r1, r0, #31
   20f7c:	str	r0, [sp, #12]
   20f80:	add	r1, r0, r1, lsr #29
   20f84:	bic	r1, r1, #7
   20f88:	subs	r0, r0, r1
   20f8c:	beq	20fa4 <Mat_VarRead5+0xaf4>
   20f90:	ldr	r1, [r9]
   20f94:	rsb	r2, r0, #8
   20f98:	mov	r0, r4
   20f9c:	ldr	r1, [r1, #12]
   20fa0:	bl	2340 <InflateSkip>
   20fa4:	ldr	r0, [r5, #48]	; 0x30
   20fa8:	cmp	r0, #1
   20fac:	bne	21020 <Mat_VarRead5+0xb70>
   20fb0:	ldr	r0, [r9]
   20fb4:	mov	r6, #0
   20fb8:	add	r2, sp, #32
   20fbc:	ldr	r1, [r0, #12]
   20fc0:	mov	r0, r4
   20fc4:	str	r6, [r1, #4]
   20fc8:	bl	30ac <InflateDataType>
   20fcc:	ldr	r0, [r4, #20]
   20fd0:	cmp	r0, #0
   20fd4:	beq	20fe0 <Mat_VarRead5+0xb30>
   20fd8:	add	r0, sp, #32
   20fdc:	bl	1c44 <Mat_uint32Swap>
   20fe0:	ldr	r0, [sp, #32]
   20fe4:	uxtb	r1, r0
   20fe8:	cmp	r1, #25
   20fec:	movcc	r6, r1
   20ff0:	cmp	r0, #65536	; 0x10000
   20ff4:	bcs	21090 <Mat_VarRead5+0xbe0>
   20ff8:	ldr	r0, [r9]
   20ffc:	add	r2, sp, #28
   21000:	mov	r3, #5
   21004:	ldr	r1, [r0, #12]
   21008:	mov	r0, #1
   2100c:	str	r0, [sp]
   21010:	mov	r0, r4
   21014:	bl	ca14 <ReadCompressedInt32Data>
   21018:	mov	r8, #0
   2101c:	b	2109c <Mat_VarRead5+0xbec>
   21020:	ldr	r3, [r4]
   21024:	add	r0, sp, #32
   21028:	mov	r1, #4
   2102c:	mov	r2, #1
   21030:	bl	18d0 <fread@plt>
   21034:	ldr	r0, [r4, #20]
   21038:	cmp	r0, #0
   2103c:	beq	21048 <Mat_VarRead5+0xb98>
   21040:	add	r0, sp, #32
   21044:	bl	1c44 <Mat_uint32Swap>
   21048:	ldr	r0, [sp, #32]
   2104c:	mov	r8, #0
   21050:	uxtb	r6, r0
   21054:	cmp	r6, #25
   21058:	movcs	r6, r8
   2105c:	cmp	r0, #65536	; 0x10000
   21060:	bcs	21090 <Mat_VarRead5+0xbe0>
   21064:	ldr	r3, [r4]
   21068:	add	r0, sp, #28
   2106c:	mov	r1, #4
   21070:	mov	r2, #1
   21074:	bl	18d0 <fread@plt>
   21078:	ldr	r0, [r4, #20]
   2107c:	cmp	r0, #0
   21080:	beq	2109c <Mat_VarRead5+0xbec>
   21084:	add	r0, sp, #28
   21088:	bl	1c30 <Mat_int32Swap>
   2108c:	b	2109c <Mat_VarRead5+0xbec>
   21090:	lsr	r0, r0, #16
   21094:	mov	r8, #1
   21098:	str	r0, [sp, #28]
   2109c:	ldr	r0, [r5, #28]
   210a0:	mov	r7, r6
   210a4:	cmp	r0, #0
   210a8:	movwne	r7, #2
   210ac:	cmp	r6, #9
   210b0:	movne	r7, r6
   210b4:	mov	r0, r7
   210b8:	str	r7, [r5, #8]
   210bc:	bl	193c <Mat_SizeOf@plt>
   210c0:	cmp	r0, #0
   210c4:	beq	2096c <Mat_VarRead5+0x4bc>
   210c8:	ldr	r1, [sp, #28]
   210cc:	str	r7, [sp, #8]
   210d0:	ldr	r6, [sp, #24]
   210d4:	str	r8, [sp, #16]
   210d8:	udiv	r7, r1, r0
   210dc:	str	r7, [r6, #20]!
   210e0:	ldr	r0, [r5, #8]
   210e4:	ldr	r8, [r5, #20]
   210e8:	bl	193c <Mat_SizeOf@plt>
   210ec:	mul	r0, r0, r7
   210f0:	cmp	r8, #0
   210f4:	beq	2118c <Mat_VarRead5+0xcdc>
   210f8:	bl	4709c <ComplexMalloc>
   210fc:	cmp	r0, #0
   21100:	beq	21220 <Mat_VarRead5+0xd70>
   21104:	mov	r8, r0
   21108:	ldr	r0, [r5, #48]	; 0x30
   2110c:	str	r6, [sp, #4]
   21110:	cmp	r0, #1
   21114:	beq	2123c <Mat_VarRead5+0xd8c>
   21118:	cmp	r0, #0
   2111c:	bne	21af4 <Mat_VarRead5+0x1644>
   21120:	ldr	r0, [r5, #8]
   21124:	sub	r0, r0, #1
   21128:	cmp	r0, #12
   2112c:	bhi	21464 <Mat_VarRead5+0xfb4>
   21130:	add	r1, pc, #4
   21134:	ldr	r0, [r1, r0, lsl #2]
   21138:	add	pc, r1, r0
   2113c:	.word	0x00000034
   21140:	.word	0x0000022c
   21144:	.word	0x00000248
   21148:	.word	0x00000264
   2114c:	.word	0x00000280
   21150:	.word	0x0000029c
   21154:	.word	0x000002b8
   21158:	.word	0x00000328
   2115c:	.word	0x000002d4
   21160:	.word	0x00000328
   21164:	.word	0x00000328
   21168:	.word	0x000002f0
   2116c:	.word	0x0000030c
   21170:	ldr	r0, [sp, #4]
   21174:	ldr	r1, [r8]
   21178:	ldr	r2, [sp, #8]
   2117c:	ldr	r3, [r0]
   21180:	mov	r0, r4
   21184:	bl	11e88 <ReadInt8Data>
   21188:	b	21460 <Mat_VarRead5+0xfb0>
   2118c:	bl	18e8 <malloc@plt>
   21190:	mov	r2, r0
   21194:	ldr	r0, [sp, #24]
   21198:	cmp	r2, #0
   2119c:	str	r2, [r0, #24]
   211a0:	beq	2122c <Mat_VarRead5+0xd7c>
   211a4:	ldr	r0, [r5, #48]	; 0x30
   211a8:	cmp	r0, #1
   211ac:	beq	212b4 <Mat_VarRead5+0xe04>
   211b0:	cmp	r0, #0
   211b4:	bne	2096c <Mat_VarRead5+0x4bc>
   211b8:	ldr	r0, [r5, #8]
   211bc:	sub	r0, r0, #1
   211c0:	cmp	r0, #12
   211c4:	bhi	21be4 <Mat_VarRead5+0x1734>
   211c8:	add	r1, pc, #4
   211cc:	ldr	r0, [r1, r0, lsl #2]
   211d0:	add	pc, r1, r0
   211d4:	.word	0x00000034
   211d8:	.word	0x0000092c
   211dc:	.word	0x00000944
   211e0:	.word	0x00000960
   211e4:	.word	0x00000980
   211e8:	.word	0x00000998
   211ec:	.word	0x000009b0
   211f0:	.word	0x00000a10
   211f4:	.word	0x000009c8
   211f8:	.word	0x00000a10
   211fc:	.word	0x00000a10
   21200:	.word	0x000009e0
   21204:	.word	0x000009f8
   21208:	mov	r1, r2
   2120c:	ldr	r3, [r6]
   21210:	ldr	r2, [sp, #8]
   21214:	mov	r0, r4
   21218:	bl	11e88 <ReadInt8Data>
   2121c:	b	21be0 <Mat_VarRead5+0x1730>
   21220:	ldr	r0, [pc, #2904]	; 21d80 <Mat_VarRead5+0x18d0>
   21224:	add	r0, pc, r0
   21228:	b	21234 <Mat_VarRead5+0xd84>
   2122c:	ldr	r0, [pc, #2896]	; 21d84 <Mat_VarRead5+0x18d4>
   21230:	add	r0, pc, r0
   21234:	bl	19cc <Mat_Critical@plt>
   21238:	b	2096c <Mat_VarRead5+0x4bc>
   2123c:	ldr	r0, [r5, #8]
   21240:	sub	r0, r0, #1
   21244:	cmp	r0, #12
   21248:	bhi	216fc <Mat_VarRead5+0x124c>
   2124c:	add	r1, pc, #4
   21250:	ldr	r0, [r1, r0, lsl #2]
   21254:	add	pc, r1, r0
   21258:	.word	0x00000034
   2125c:	.word	0x00000338
   21260:	.word	0x00000360
   21264:	.word	0x00000388
   21268:	.word	0x000003b0
   2126c:	.word	0x000003d8
   21270:	.word	0x00000400
   21274:	.word	0x000004a4
   21278:	.word	0x0000042c
   2127c:	.word	0x000004a4
   21280:	.word	0x000004a4
   21284:	.word	0x00000454
   21288:	.word	0x0000047c
   2128c:	ldr	r0, [r9]
   21290:	ldr	r2, [r8]
   21294:	ldr	r3, [sp, #8]
   21298:	ldr	r1, [r0, #12]
   2129c:	ldr	r0, [sp, #4]
   212a0:	ldr	r0, [r0]
   212a4:	str	r0, [sp]
   212a8:	mov	r0, r4
   212ac:	bl	1340c <ReadCompressedInt8Data>
   212b0:	b	216f8 <Mat_VarRead5+0x1248>
   212b4:	ldr	r0, [r5, #8]
   212b8:	sub	r0, r0, #1
   212bc:	cmp	r0, #12
   212c0:	bhi	21d40 <Mat_VarRead5+0x1890>
   212c4:	add	r1, pc, #4
   212c8:	ldr	r0, [r1, r0, lsl #2]
   212cc:	add	pc, r1, r0
   212d0:	.word	0x00000034
   212d4:	.word	0x0000094c
   212d8:	.word	0x0000096c
   212dc:	.word	0x0000098c
   212e0:	.word	0x000009ac
   212e4:	.word	0x000009cc
   212e8:	.word	0x000009ec
   212ec:	.word	0x00000a70
   212f0:	.word	0x00000a0c
   212f4:	.word	0x00000a70
   212f8:	.word	0x00000a70
   212fc:	.word	0x00000a2c
   21300:	.word	0x00000a50
   21304:	ldr	r0, [r9]
   21308:	ldr	r3, [sp, #8]
   2130c:	ldr	r1, [r0, #12]
   21310:	ldr	r0, [r6]
   21314:	str	r0, [sp]
   21318:	mov	r0, r4
   2131c:	bl	1340c <ReadCompressedInt8Data>
   21320:	b	21d3c <Mat_VarRead5+0x188c>
   21324:	ldr	r0, [r5, #52]	; 0x34
   21328:	ldr	r2, [r5, #40]	; 0x28
   2132c:	mov	r3, r7
   21330:	ldr	r1, [r0, #12]
   21334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21338:	str	r0, [sp]
   2133c:	mov	r0, r4
   21340:	bl	153e0 <ReadCompressedCharData>
   21344:	ldr	r1, [sp, #24]
   21348:	cmp	r1, #0
   2134c:	addne	r0, r0, #4
   21350:	asr	r1, r0, #31
   21354:	add	r1, r0, r1, lsr #29
   21358:	bic	r1, r1, #7
   2135c:	subs	r0, r0, r1
   21360:	bne	21d64 <Mat_VarRead5+0x18b4>
   21364:	b	2096c <Mat_VarRead5+0x4bc>
   21368:	ldr	r0, [sp, #4]
   2136c:	ldr	r1, [r8]
   21370:	ldr	r2, [sp, #8]
   21374:	ldr	r3, [r0]
   21378:	mov	r0, r4
   2137c:	bl	13934 <ReadUInt8Data>
   21380:	b	21460 <Mat_VarRead5+0xfb0>
   21384:	ldr	r0, [sp, #4]
   21388:	ldr	r1, [r8]
   2138c:	ldr	r2, [sp, #8]
   21390:	ldr	r3, [r0]
   21394:	mov	r0, r4
   21398:	bl	e9a0 <ReadInt16Data>
   2139c:	b	21460 <Mat_VarRead5+0xfb0>
   213a0:	ldr	r0, [sp, #4]
   213a4:	ldr	r1, [r8]
   213a8:	ldr	r2, [sp, #8]
   213ac:	ldr	r3, [r0]
   213b0:	mov	r0, r4
   213b4:	bl	10414 <ReadUInt16Data>
   213b8:	b	21460 <Mat_VarRead5+0xfb0>
   213bc:	ldr	r0, [sp, #4]
   213c0:	ldr	r1, [r8]
   213c4:	ldr	r2, [sp, #8]
   213c8:	ldr	r3, [r0]
   213cc:	mov	r0, r4
   213d0:	bl	b4d8 <ReadInt32Data>
   213d4:	b	21460 <Mat_VarRead5+0xfb0>
   213d8:	ldr	r0, [sp, #4]
   213dc:	ldr	r1, [r8]
   213e0:	ldr	r2, [sp, #8]
   213e4:	ldr	r3, [r0]
   213e8:	mov	r0, r4
   213ec:	bl	cf3c <ReadUInt32Data>
   213f0:	b	21460 <Mat_VarRead5+0xfb0>
   213f4:	ldr	r0, [sp, #4]
   213f8:	ldr	r1, [r8]
   213fc:	ldr	r2, [sp, #8]
   21400:	ldr	r3, [r0]
   21404:	mov	r0, r4
   21408:	bl	5fa0 <ReadSingleData>
   2140c:	b	21460 <Mat_VarRead5+0xfb0>
   21410:	ldr	r0, [sp, #4]
   21414:	ldr	r1, [r8]
   21418:	ldr	r2, [sp, #8]
   2141c:	ldr	r3, [r0]
   21420:	mov	r0, r4
   21424:	bl	377c <ReadDoubleData>
   21428:	b	21460 <Mat_VarRead5+0xfb0>
   2142c:	ldr	r0, [sp, #4]
   21430:	ldr	r1, [r8]
   21434:	ldr	r2, [sp, #8]
   21438:	ldr	r3, [r0]
   2143c:	mov	r0, r4
   21440:	bl	7ba0 <ReadInt64Data>
   21444:	b	21460 <Mat_VarRead5+0xfb0>
   21448:	ldr	r0, [sp, #4]
   2144c:	ldr	r1, [r8]
   21450:	ldr	r2, [sp, #8]
   21454:	ldr	r3, [r0]
   21458:	mov	r0, r4
   2145c:	bl	983c <ReadUInt64Data>
   21460:	str	r0, [sp, #12]
   21464:	ldr	r0, [sp, #16]
   21468:	ldr	r1, [sp, #12]
   2146c:	cmp	r0, #0
   21470:	addne	r1, r1, #4
   21474:	asr	r0, r1, #31
   21478:	add	r0, r1, r0, lsr #29
   2147c:	bic	r0, r0, #7
   21480:	subs	r1, r1, r0
   21484:	beq	21498 <Mat_VarRead5+0xfe8>
   21488:	ldr	r0, [r4]
   2148c:	rsb	r1, r1, #8
   21490:	mov	r2, #1
   21494:	bl	1a68 <fseek@plt>
   21498:	ldr	r3, [r4]
   2149c:	add	r6, sp, #32
   214a0:	mov	r1, #4
   214a4:	mov	r2, #1
   214a8:	mov	r0, r6
   214ac:	bl	18d0 <fread@plt>
   214b0:	ldr	r0, [sp, #20]
   214b4:	cmp	r0, #0
   214b8:	beq	214c4 <Mat_VarRead5+0x1014>
   214bc:	add	r0, sp, #32
   214c0:	bl	1c44 <Mat_uint32Swap>
   214c4:	ldr	r0, [sp, #32]
   214c8:	uxtb	r9, r0
   214cc:	cmp	r9, #25
   214d0:	movcs	r9, #0
   214d4:	cmp	r0, #65536	; 0x10000
   214d8:	bcs	2151c <Mat_VarRead5+0x106c>
   214dc:	ldr	r3, [r4]
   214e0:	add	r6, r6, #4
   214e4:	mov	r1, #4
   214e8:	mov	r2, #1
   214ec:	mov	r0, r6
   214f0:	bl	18d0 <fread@plt>
   214f4:	ldr	r0, [sp, #20]
   214f8:	cmp	r0, #0
   214fc:	beq	21508 <Mat_VarRead5+0x1058>
   21500:	mov	r0, r6
   21504:	bl	1c44 <Mat_uint32Swap>
   21508:	ldr	r0, [sp, #36]	; 0x24
   2150c:	mov	r6, #0
   21510:	b	21524 <Mat_VarRead5+0x1074>
   21514:	.word	0x0002b688
   21518:	.word	0x0002b5f0
   2151c:	lsr	r0, r0, #16
   21520:	mov	r6, #1
   21524:	ldr	r1, [r5, #8]
   21528:	sub	r1, r1, #1
   2152c:	cmp	r1, #12
   21530:	bhi	21928 <Mat_VarRead5+0x1478>
   21534:	add	r2, pc, #4
   21538:	ldr	r1, [r2, r1, lsl #2]
   2153c:	add	pc, r2, r1
   21540:	.word	0x00000034
   21544:	.word	0x000002f0
   21548:	.word	0x0000030c
   2154c:	.word	0x00000328
   21550:	.word	0x00000344
   21554:	.word	0x00000360
   21558:	.word	0x0000037c
   2155c:	.word	0x000003e8
   21560:	.word	0x00000398
   21564:	.word	0x000003e8
   21568:	.word	0x000003e8
   2156c:	.word	0x000003b4
   21570:	.word	0x000003d0
   21574:	ldr	r0, [sp, #4]
   21578:	ldr	r1, [r8, #4]
   2157c:	mov	r2, r9
   21580:	ldr	r3, [r0]
   21584:	mov	r0, r4
   21588:	bl	11e88 <ReadInt8Data>
   2158c:	b	21928 <Mat_VarRead5+0x1478>
   21590:	ldr	r0, [r9]
   21594:	ldr	r2, [r8]
   21598:	ldr	r3, [sp, #8]
   2159c:	ldr	r1, [r0, #12]
   215a0:	ldr	r0, [sp, #4]
   215a4:	ldr	r0, [r0]
   215a8:	str	r0, [sp]
   215ac:	mov	r0, r4
   215b0:	bl	14eb8 <ReadCompressedUInt8Data>
   215b4:	b	216f8 <Mat_VarRead5+0x1248>
   215b8:	ldr	r0, [r9]
   215bc:	ldr	r2, [r8]
   215c0:	ldr	r3, [sp, #8]
   215c4:	ldr	r1, [r0, #12]
   215c8:	ldr	r0, [sp, #4]
   215cc:	ldr	r0, [r0]
   215d0:	str	r0, [sp]
   215d4:	mov	r0, r4
   215d8:	bl	feec <ReadCompressedInt16Data>
   215dc:	b	216f8 <Mat_VarRead5+0x1248>
   215e0:	ldr	r0, [r9]
   215e4:	ldr	r2, [r8]
   215e8:	ldr	r3, [sp, #8]
   215ec:	ldr	r1, [r0, #12]
   215f0:	ldr	r0, [sp, #4]
   215f4:	ldr	r0, [r0]
   215f8:	str	r0, [sp]
   215fc:	mov	r0, r4
   21600:	bl	11960 <ReadCompressedUInt16Data>
   21604:	b	216f8 <Mat_VarRead5+0x1248>
   21608:	ldr	r0, [r9]
   2160c:	ldr	r2, [r8]
   21610:	ldr	r3, [sp, #8]
   21614:	ldr	r1, [r0, #12]
   21618:	ldr	r0, [sp, #4]
   2161c:	ldr	r0, [r0]
   21620:	str	r0, [sp]
   21624:	mov	r0, r4
   21628:	bl	ca14 <ReadCompressedInt32Data>
   2162c:	b	216f8 <Mat_VarRead5+0x1248>
   21630:	ldr	r0, [r9]
   21634:	ldr	r2, [r8]
   21638:	ldr	r3, [sp, #8]
   2163c:	ldr	r1, [r0, #12]
   21640:	ldr	r0, [sp, #4]
   21644:	ldr	r0, [r0]
   21648:	str	r0, [sp]
   2164c:	mov	r0, r4
   21650:	bl	e478 <ReadCompressedUInt32Data>
   21654:	b	216f8 <Mat_VarRead5+0x1248>
   21658:	ldr	r0, [r9]
   2165c:	ldr	r2, [r8]
   21660:	ldr	r3, [sp, #8]
   21664:	ldr	r1, [r0, #12]
   21668:	ldr	r0, [sp, #4]
   2166c:	ldr	r0, [r0]
   21670:	str	r0, [sp]
   21674:	mov	r0, r4
   21678:	bl	7638 <ReadCompressedSingleData>
   2167c:	b	216f8 <Mat_VarRead5+0x1248>
   21680:	.word	0x0002b66b
   21684:	ldr	r0, [r9]
   21688:	ldr	r2, [r8]
   2168c:	ldr	r3, [sp, #8]
   21690:	ldr	r1, [r0, #12]
   21694:	ldr	r0, [sp, #4]
   21698:	ldr	r0, [r0]
   2169c:	str	r0, [sp]
   216a0:	mov	r0, r4
   216a4:	bl	4cb4 <ReadCompressedDoubleData>
   216a8:	b	216f8 <Mat_VarRead5+0x1248>
   216ac:	ldr	r0, [r9]
   216b0:	ldr	r2, [r8]
   216b4:	ldr	r3, [sp, #8]
   216b8:	ldr	r1, [r0, #12]
   216bc:	ldr	r0, [sp, #4]
   216c0:	ldr	r0, [r0]
   216c4:	str	r0, [sp]
   216c8:	mov	r0, r4
   216cc:	bl	92a4 <ReadCompressedInt64Data>
   216d0:	b	216f8 <Mat_VarRead5+0x1248>
   216d4:	ldr	r0, [r9]
   216d8:	ldr	r2, [r8]
   216dc:	ldr	r3, [sp, #8]
   216e0:	ldr	r1, [r0, #12]
   216e4:	ldr	r0, [sp, #4]
   216e8:	ldr	r0, [r0]
   216ec:	str	r0, [sp]
   216f0:	mov	r0, r4
   216f4:	bl	af40 <ReadCompressedUInt64Data>
   216f8:	str	r0, [sp, #12]
   216fc:	ldr	r0, [sp, #16]
   21700:	ldr	r1, [sp, #12]
   21704:	cmp	r0, #0
   21708:	addne	r1, r1, #4
   2170c:	asr	r0, r1, #31
   21710:	add	r0, r1, r0, lsr #29
   21714:	bic	r0, r0, #7
   21718:	subs	r0, r1, r0
   2171c:	beq	21734 <Mat_VarRead5+0x1284>
   21720:	ldr	r1, [r9]
   21724:	rsb	r2, r0, #8
   21728:	mov	r0, r4
   2172c:	ldr	r1, [r1, #12]
   21730:	bl	2340 <InflateSkip>
   21734:	ldr	r0, [r9]
   21738:	add	r7, sp, #32
   2173c:	mov	r2, r7
   21740:	ldr	r1, [r0, #12]
   21744:	mov	r0, r4
   21748:	bl	30ac <InflateDataType>
   2174c:	ldr	r0, [sp, #20]
   21750:	cmp	r0, #0
   21754:	beq	21760 <Mat_VarRead5+0x12b0>
   21758:	add	r0, sp, #32
   2175c:	bl	1c44 <Mat_uint32Swap>
   21760:	ldr	r0, [sp, #32]
   21764:	uxtb	r6, r0
   21768:	cmp	r6, #25
   2176c:	movcs	r6, #0
   21770:	cmp	r0, #65536	; 0x10000
   21774:	bcs	217b0 <Mat_VarRead5+0x1300>
   21778:	ldr	r0, [r9]
   2177c:	add	r7, r7, #4
   21780:	mov	r2, r7
   21784:	ldr	r1, [r0, #12]
   21788:	mov	r0, r4
   2178c:	bl	30ac <InflateDataType>
   21790:	ldr	r0, [sp, #20]
   21794:	cmp	r0, #0
   21798:	beq	217a4 <Mat_VarRead5+0x12f4>
   2179c:	mov	r0, r7
   217a0:	bl	1c44 <Mat_uint32Swap>
   217a4:	ldr	r0, [sp, #36]	; 0x24
   217a8:	mov	r7, #0
   217ac:	b	217b8 <Mat_VarRead5+0x1308>
   217b0:	lsr	r0, r0, #16
   217b4:	mov	r7, #1
   217b8:	ldr	r1, [r5, #8]
   217bc:	sub	r1, r1, #1
   217c0:	cmp	r1, #12
   217c4:	bhi	21ac4 <Mat_VarRead5+0x1614>
   217c8:	add	r2, pc, #4
   217cc:	ldr	r1, [r2, r1, lsl #2]
   217d0:	add	pc, r2, r1
   217d4:	.word	0x00000034
   217d8:	.word	0x00000184
   217dc:	.word	0x000001ac
   217e0:	.word	0x000001d4
   217e4:	.word	0x000001fc
   217e8:	.word	0x0000022c
   217ec:	.word	0x00000254
   217f0:	.word	0x000002f0
   217f4:	.word	0x0000027c
   217f8:	.word	0x000002f0
   217fc:	.word	0x000002f0
   21800:	.word	0x000002a4
   21804:	.word	0x000002cc
   21808:	ldr	r0, [r9]
   2180c:	ldr	r2, [r8, #4]
   21810:	mov	r3, r6
   21814:	ldr	r1, [r0, #12]
   21818:	ldr	r0, [sp, #4]
   2181c:	ldr	r0, [r0]
   21820:	str	r0, [sp]
   21824:	mov	r0, r4
   21828:	bl	1340c <ReadCompressedInt8Data>
   2182c:	b	21ac4 <Mat_VarRead5+0x1614>
   21830:	ldr	r0, [sp, #4]
   21834:	ldr	r1, [r8, #4]
   21838:	mov	r2, r9
   2183c:	ldr	r3, [r0]
   21840:	mov	r0, r4
   21844:	bl	13934 <ReadUInt8Data>
   21848:	b	21928 <Mat_VarRead5+0x1478>
   2184c:	ldr	r0, [sp, #4]
   21850:	ldr	r1, [r8, #4]
   21854:	mov	r2, r9
   21858:	ldr	r3, [r0]
   2185c:	mov	r0, r4
   21860:	bl	e9a0 <ReadInt16Data>
   21864:	b	21928 <Mat_VarRead5+0x1478>
   21868:	ldr	r0, [sp, #4]
   2186c:	ldr	r1, [r8, #4]
   21870:	mov	r2, r9
   21874:	ldr	r3, [r0]
   21878:	mov	r0, r4
   2187c:	bl	10414 <ReadUInt16Data>
   21880:	b	21928 <Mat_VarRead5+0x1478>
   21884:	ldr	r0, [sp, #4]
   21888:	ldr	r1, [r8, #4]
   2188c:	mov	r2, r9
   21890:	ldr	r3, [r0]
   21894:	mov	r0, r4
   21898:	bl	b4d8 <ReadInt32Data>
   2189c:	b	21928 <Mat_VarRead5+0x1478>
   218a0:	ldr	r0, [sp, #4]
   218a4:	ldr	r1, [r8, #4]
   218a8:	mov	r2, r9
   218ac:	ldr	r3, [r0]
   218b0:	mov	r0, r4
   218b4:	bl	cf3c <ReadUInt32Data>
   218b8:	b	21928 <Mat_VarRead5+0x1478>
   218bc:	ldr	r0, [sp, #4]
   218c0:	ldr	r1, [r8, #4]
   218c4:	mov	r2, r9
   218c8:	ldr	r3, [r0]
   218cc:	mov	r0, r4
   218d0:	bl	5fa0 <ReadSingleData>
   218d4:	b	21928 <Mat_VarRead5+0x1478>
   218d8:	ldr	r0, [sp, #4]
   218dc:	ldr	r1, [r8, #4]
   218e0:	mov	r2, r9
   218e4:	ldr	r3, [r0]
   218e8:	mov	r0, r4
   218ec:	bl	377c <ReadDoubleData>
   218f0:	b	21928 <Mat_VarRead5+0x1478>
   218f4:	ldr	r0, [sp, #4]
   218f8:	ldr	r1, [r8, #4]
   218fc:	mov	r2, r9
   21900:	ldr	r3, [r0]
   21904:	mov	r0, r4
   21908:	bl	7ba0 <ReadInt64Data>
   2190c:	b	21928 <Mat_VarRead5+0x1478>
   21910:	ldr	r0, [sp, #4]
   21914:	ldr	r1, [r8, #4]
   21918:	mov	r2, r9
   2191c:	ldr	r3, [r0]
   21920:	mov	r0, r4
   21924:	bl	983c <ReadUInt64Data>
   21928:	cmp	r6, #0
   2192c:	addne	r0, r0, #4
   21930:	asr	r1, r0, #31
   21934:	add	r1, r0, r1, lsr #29
   21938:	bic	r1, r1, #7
   2193c:	subs	r1, r0, r1
   21940:	beq	21af4 <Mat_VarRead5+0x1644>
   21944:	ldr	r0, [r4]
   21948:	rsb	r1, r1, #8
   2194c:	mov	r2, #1
   21950:	bl	1a68 <fseek@plt>
   21954:	b	21af4 <Mat_VarRead5+0x1644>
   21958:	ldr	r0, [r9]
   2195c:	ldr	r2, [r8, #4]
   21960:	mov	r3, r6
   21964:	ldr	r1, [r0, #12]
   21968:	ldr	r0, [sp, #4]
   2196c:	ldr	r0, [r0]
   21970:	str	r0, [sp]
   21974:	mov	r0, r4
   21978:	bl	14eb8 <ReadCompressedUInt8Data>
   2197c:	b	21ac4 <Mat_VarRead5+0x1614>
   21980:	ldr	r0, [r9]
   21984:	ldr	r2, [r8, #4]
   21988:	mov	r3, r6
   2198c:	ldr	r1, [r0, #12]
   21990:	ldr	r0, [sp, #4]
   21994:	ldr	r0, [r0]
   21998:	str	r0, [sp]
   2199c:	mov	r0, r4
   219a0:	bl	feec <ReadCompressedInt16Data>
   219a4:	b	21ac4 <Mat_VarRead5+0x1614>
   219a8:	ldr	r0, [r9]
   219ac:	ldr	r2, [r8, #4]
   219b0:	mov	r3, r6
   219b4:	ldr	r1, [r0, #12]
   219b8:	ldr	r0, [sp, #4]
   219bc:	ldr	r0, [r0]
   219c0:	str	r0, [sp]
   219c4:	mov	r0, r4
   219c8:	bl	11960 <ReadCompressedUInt16Data>
   219cc:	b	21ac4 <Mat_VarRead5+0x1614>
   219d0:	ldr	r0, [r9]
   219d4:	ldr	r2, [r8, #4]
   219d8:	mov	r3, r6
   219dc:	ldr	r1, [r0, #12]
   219e0:	ldr	r0, [sp, #4]
   219e4:	ldr	r0, [r0]
   219e8:	str	r0, [sp]
   219ec:	mov	r0, r4
   219f0:	bl	ca14 <ReadCompressedInt32Data>
   219f4:	b	21ac4 <Mat_VarRead5+0x1614>
   219f8:	.word	0x0002b32d
   219fc:	.word	0x0002b1c4
   21a00:	ldr	r0, [r9]
   21a04:	ldr	r2, [r8, #4]
   21a08:	mov	r3, r6
   21a0c:	ldr	r1, [r0, #12]
   21a10:	ldr	r0, [sp, #4]
   21a14:	ldr	r0, [r0]
   21a18:	str	r0, [sp]
   21a1c:	mov	r0, r4
   21a20:	bl	e478 <ReadCompressedUInt32Data>
   21a24:	b	21ac4 <Mat_VarRead5+0x1614>
   21a28:	ldr	r0, [r9]
   21a2c:	ldr	r2, [r8, #4]
   21a30:	mov	r3, r6
   21a34:	ldr	r1, [r0, #12]
   21a38:	ldr	r0, [sp, #4]
   21a3c:	ldr	r0, [r0]
   21a40:	str	r0, [sp]
   21a44:	mov	r0, r4
   21a48:	bl	7638 <ReadCompressedSingleData>
   21a4c:	b	21ac4 <Mat_VarRead5+0x1614>
   21a50:	ldr	r0, [r9]
   21a54:	ldr	r2, [r8, #4]
   21a58:	mov	r3, r6
   21a5c:	ldr	r1, [r0, #12]
   21a60:	ldr	r0, [sp, #4]
   21a64:	ldr	r0, [r0]
   21a68:	str	r0, [sp]
   21a6c:	mov	r0, r4
   21a70:	bl	4cb4 <ReadCompressedDoubleData>
   21a74:	b	21ac4 <Mat_VarRead5+0x1614>
   21a78:	ldr	r0, [r9]
   21a7c:	ldr	r2, [r8, #4]
   21a80:	mov	r3, r6
   21a84:	ldr	r1, [r0, #12]
   21a88:	ldr	r0, [sp, #4]
   21a8c:	ldr	r0, [r0]
   21a90:	str	r0, [sp]
   21a94:	mov	r0, r4
   21a98:	bl	92a4 <ReadCompressedInt64Data>
   21a9c:	b	21ac4 <Mat_VarRead5+0x1614>
   21aa0:	ldr	r0, [r9]
   21aa4:	ldr	r2, [r8, #4]
   21aa8:	mov	r3, r6
   21aac:	ldr	r1, [r0, #12]
   21ab0:	ldr	r0, [sp, #4]
   21ab4:	ldr	r0, [r0]
   21ab8:	str	r0, [sp]
   21abc:	mov	r0, r4
   21ac0:	bl	af40 <ReadCompressedUInt64Data>
   21ac4:	cmp	r7, #0
   21ac8:	addne	r0, r0, #4
   21acc:	asr	r1, r0, #31
   21ad0:	add	r1, r0, r1, lsr #29
   21ad4:	bic	r1, r1, #7
   21ad8:	subs	r0, r0, r1
   21adc:	beq	21af4 <Mat_VarRead5+0x1644>
   21ae0:	ldr	r1, [r9]
   21ae4:	rsb	r2, r0, #8
   21ae8:	mov	r0, r4
   21aec:	ldr	r1, [r1, #12]
   21af0:	bl	2340 <InflateSkip>
   21af4:	ldr	r0, [sp, #24]
   21af8:	str	r8, [r0, #24]
   21afc:	b	2096c <Mat_VarRead5+0x4bc>
   21b00:	mov	r1, r2
   21b04:	ldr	r3, [r6]
   21b08:	ldr	r2, [sp, #8]
   21b0c:	mov	r0, r4
   21b10:	bl	13934 <ReadUInt8Data>
   21b14:	b	21be0 <Mat_VarRead5+0x1730>
   21b18:	mov	r1, r2
   21b1c:	ldr	r3, [r6]
   21b20:	ldr	r2, [sp, #8]
   21b24:	mov	r0, r4
   21b28:	bl	e9a0 <ReadInt16Data>
   21b2c:	b	21be0 <Mat_VarRead5+0x1730>
   21b30:	.word	0x0002b07c
   21b34:	mov	r1, r2
   21b38:	ldr	r3, [r6]
   21b3c:	ldr	r2, [sp, #8]
   21b40:	mov	r0, r4
   21b44:	bl	10414 <ReadUInt16Data>
   21b48:	b	21be0 <Mat_VarRead5+0x1730>
   21b4c:	.word	0x0002b0b2
   21b50:	.word	0x0002b0c1
   21b54:	mov	r1, r2
   21b58:	ldr	r3, [r6]
   21b5c:	ldr	r2, [sp, #8]
   21b60:	mov	r0, r4
   21b64:	bl	b4d8 <ReadInt32Data>
   21b68:	b	21be0 <Mat_VarRead5+0x1730>
   21b6c:	mov	r1, r2
   21b70:	ldr	r3, [r6]
   21b74:	ldr	r2, [sp, #8]
   21b78:	mov	r0, r4
   21b7c:	bl	cf3c <ReadUInt32Data>
   21b80:	b	21be0 <Mat_VarRead5+0x1730>
   21b84:	mov	r1, r2
   21b88:	ldr	r3, [r6]
   21b8c:	ldr	r2, [sp, #8]
   21b90:	mov	r0, r4
   21b94:	bl	5fa0 <ReadSingleData>
   21b98:	b	21be0 <Mat_VarRead5+0x1730>
   21b9c:	mov	r1, r2
   21ba0:	ldr	r3, [r6]
   21ba4:	ldr	r2, [sp, #8]
   21ba8:	mov	r0, r4
   21bac:	bl	377c <ReadDoubleData>
   21bb0:	b	21be0 <Mat_VarRead5+0x1730>
   21bb4:	mov	r1, r2
   21bb8:	ldr	r3, [r6]
   21bbc:	ldr	r2, [sp, #8]
   21bc0:	mov	r0, r4
   21bc4:	bl	7ba0 <ReadInt64Data>
   21bc8:	b	21be0 <Mat_VarRead5+0x1730>
   21bcc:	mov	r1, r2
   21bd0:	ldr	r3, [r6]
   21bd4:	ldr	r2, [sp, #8]
   21bd8:	mov	r0, r4
   21bdc:	bl	983c <ReadUInt64Data>
   21be0:	str	r0, [sp, #12]
   21be4:	ldr	r0, [sp, #16]
   21be8:	ldr	r1, [sp, #12]
   21bec:	cmp	r0, #0
   21bf0:	addne	r1, r1, #4
   21bf4:	asr	r0, r1, #31
   21bf8:	add	r0, r1, r0, lsr #29
   21bfc:	bic	r0, r0, #7
   21c00:	subs	r1, r1, r0
   21c04:	beq	2096c <Mat_VarRead5+0x4bc>
   21c08:	ldr	r0, [r4]
   21c0c:	rsb	r1, r1, #8
   21c10:	mov	r2, #1
   21c14:	bl	1a68 <fseek@plt>
   21c18:	b	2096c <Mat_VarRead5+0x4bc>
   21c1c:	ldr	r0, [r9]
   21c20:	ldr	r3, [sp, #8]
   21c24:	ldr	r1, [r0, #12]
   21c28:	ldr	r0, [r6]
   21c2c:	str	r0, [sp]
   21c30:	mov	r0, r4
   21c34:	bl	14eb8 <ReadCompressedUInt8Data>
   21c38:	b	21d3c <Mat_VarRead5+0x188c>
   21c3c:	ldr	r0, [r9]
   21c40:	ldr	r3, [sp, #8]
   21c44:	ldr	r1, [r0, #12]
   21c48:	ldr	r0, [r6]
   21c4c:	str	r0, [sp]
   21c50:	mov	r0, r4
   21c54:	bl	feec <ReadCompressedInt16Data>
   21c58:	b	21d3c <Mat_VarRead5+0x188c>
   21c5c:	ldr	r0, [r9]
   21c60:	ldr	r3, [sp, #8]
   21c64:	ldr	r1, [r0, #12]
   21c68:	ldr	r0, [r6]
   21c6c:	str	r0, [sp]
   21c70:	mov	r0, r4
   21c74:	bl	11960 <ReadCompressedUInt16Data>
   21c78:	b	21d3c <Mat_VarRead5+0x188c>
   21c7c:	ldr	r0, [r9]
   21c80:	ldr	r3, [sp, #8]
   21c84:	ldr	r1, [r0, #12]
   21c88:	ldr	r0, [r6]
   21c8c:	str	r0, [sp]
   21c90:	mov	r0, r4
   21c94:	bl	ca14 <ReadCompressedInt32Data>
   21c98:	b	21d3c <Mat_VarRead5+0x188c>
   21c9c:	ldr	r0, [r9]
   21ca0:	ldr	r3, [sp, #8]
   21ca4:	ldr	r1, [r0, #12]
   21ca8:	ldr	r0, [r6]
   21cac:	str	r0, [sp]
   21cb0:	mov	r0, r4
   21cb4:	bl	e478 <ReadCompressedUInt32Data>
   21cb8:	b	21d3c <Mat_VarRead5+0x188c>
   21cbc:	ldr	r0, [r9]
   21cc0:	ldr	r3, [sp, #8]
   21cc4:	ldr	r1, [r0, #12]
   21cc8:	ldr	r0, [r6]
   21ccc:	str	r0, [sp]
   21cd0:	mov	r0, r4
   21cd4:	bl	7638 <ReadCompressedSingleData>
   21cd8:	b	21d3c <Mat_VarRead5+0x188c>
   21cdc:	ldr	r0, [r9]
   21ce0:	ldr	r3, [sp, #8]
   21ce4:	ldr	r1, [r0, #12]
   21ce8:	ldr	r0, [r6]
   21cec:	str	r0, [sp]
   21cf0:	mov	r0, r4
   21cf4:	bl	4cb4 <ReadCompressedDoubleData>
   21cf8:	b	21d3c <Mat_VarRead5+0x188c>
   21cfc:	ldr	r0, [r9]
   21d00:	ldr	r3, [sp, #8]
   21d04:	ldr	r1, [r0, #12]
   21d08:	ldr	r0, [r6]
   21d0c:	str	r0, [sp]
   21d10:	mov	r0, r4
   21d14:	bl	92a4 <ReadCompressedInt64Data>
   21d18:	b	21d3c <Mat_VarRead5+0x188c>
   21d1c:	.word	0x0002af01
   21d20:	ldr	r0, [r9]
   21d24:	ldr	r3, [sp, #8]
   21d28:	ldr	r1, [r0, #12]
   21d2c:	ldr	r0, [r6]
   21d30:	str	r0, [sp]
   21d34:	mov	r0, r4
   21d38:	bl	af40 <ReadCompressedUInt64Data>
   21d3c:	str	r0, [sp, #12]
   21d40:	ldr	r0, [sp, #16]
   21d44:	ldr	r1, [sp, #12]
   21d48:	cmp	r0, #0
   21d4c:	addne	r1, r1, #4
   21d50:	asr	r0, r1, #31
   21d54:	add	r0, r1, r0, lsr #29
   21d58:	bic	r0, r0, #7
   21d5c:	subs	r0, r1, r0
   21d60:	beq	2096c <Mat_VarRead5+0x4bc>
   21d64:	ldr	r1, [r9]
   21d68:	rsb	r2, r0, #8
   21d6c:	mov	r0, r4
   21d70:	ldr	r1, [r1, #12]
   21d74:	bl	2340 <InflateSkip>
   21d78:	b	2096c <Mat_VarRead5+0x4bc>
   21d7c:	.word	0x0002ac8c
   21d80:	.word	0x0002aa85
   21d84:	.word	0x0002aaae
   21d88:	.word	0x0002ad3b

00021d8c <Mat_VarReadNumeric5>:
   21d8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21d90:	add	fp, sp, #24
   21d94:	sub	sp, sp, #16
   21d98:	mov	r4, r0
   21d9c:	ldr	r0, [r1, #48]	; 0x30
   21da0:	mov	r9, r3
   21da4:	mov	r8, r2
   21da8:	mov	r5, r1
   21dac:	cmp	r0, #1
   21db0:	bne	21e1c <Mat_VarReadNumeric5+0x90>
   21db4:	ldr	r0, [r5, #52]	; 0x34
   21db8:	add	r7, sp, #8
   21dbc:	mov	r6, #0
   21dc0:	mov	r2, r7
   21dc4:	ldr	r1, [r0, #12]
   21dc8:	mov	r0, r4
   21dcc:	str	r6, [r1, #4]
   21dd0:	bl	30ac <InflateDataType>
   21dd4:	ldr	r0, [r4, #20]
   21dd8:	cmp	r0, #0
   21ddc:	beq	21de8 <Mat_VarReadNumeric5+0x5c>
   21de0:	add	r0, sp, #8
   21de4:	bl	1c44 <Mat_uint32Swap>
   21de8:	ldr	r0, [sp, #8]
   21dec:	uxtb	r1, r0
   21df0:	cmp	r1, #25
   21df4:	movcc	r6, r1
   21df8:	cmp	r0, #65536	; 0x10000
   21dfc:	bcs	21ea8 <Mat_VarReadNumeric5+0x11c>
   21e00:	ldr	r0, [r5, #52]	; 0x34
   21e04:	add	r7, r7, #4
   21e08:	mov	r2, r7
   21e0c:	ldr	r1, [r0, #12]
   21e10:	mov	r0, r4
   21e14:	bl	30ac <InflateDataType>
   21e18:	b	21e78 <Mat_VarReadNumeric5+0xec>
   21e1c:	ldr	r3, [r4]
   21e20:	add	r7, sp, #8
   21e24:	mov	r1, #4
   21e28:	mov	r2, #1
   21e2c:	mov	r0, r7
   21e30:	bl	18d0 <fread@plt>
   21e34:	ldr	r0, [r4, #20]
   21e38:	cmp	r0, #0
   21e3c:	beq	21e48 <Mat_VarReadNumeric5+0xbc>
   21e40:	add	r0, sp, #8
   21e44:	bl	1c44 <Mat_uint32Swap>
   21e48:	ldr	r0, [sp, #8]
   21e4c:	uxtb	r6, r0
   21e50:	cmp	r6, #25
   21e54:	movcs	r6, #0
   21e58:	cmp	r0, #65536	; 0x10000
   21e5c:	bcs	21ea8 <Mat_VarReadNumeric5+0x11c>
   21e60:	ldr	r3, [r4]
   21e64:	add	r7, r7, #4
   21e68:	mov	r1, #4
   21e6c:	mov	r2, #1
   21e70:	mov	r0, r7
   21e74:	bl	18d0 <fread@plt>
   21e78:	ldr	r0, [r4, #20]
   21e7c:	cmp	r0, #0
   21e80:	beq	21e8c <Mat_VarReadNumeric5+0x100>
   21e84:	mov	r0, r7
   21e88:	bl	1c44 <Mat_uint32Swap>
   21e8c:	ldr	r0, [sp, #12]
   21e90:	mov	r7, #0
   21e94:	cmp	r0, #0
   21e98:	bne	21eb0 <Mat_VarReadNumeric5+0x124>
   21e9c:	mov	r0, #0
   21ea0:	str	r0, [r5]
   21ea4:	b	221d4 <Mat_VarReadNumeric5+0x448>
   21ea8:	lsr	r0, r0, #16
   21eac:	mov	r7, #1
   21eb0:	ldr	r1, [r5, #48]	; 0x30
   21eb4:	cmp	r1, #1
   21eb8:	beq	21f20 <Mat_VarReadNumeric5+0x194>
   21ebc:	cmp	r1, #0
   21ec0:	bne	221d4 <Mat_VarReadNumeric5+0x448>
   21ec4:	ldr	r1, [r5, #16]
   21ec8:	sub	r1, r1, #6
   21ecc:	cmp	r1, #9
   21ed0:	bhi	22058 <Mat_VarReadNumeric5+0x2cc>
   21ed4:	add	r0, pc, #4
   21ed8:	ldr	r1, [r0, r1, lsl #2]
   21edc:	add	pc, r0, r1
   21ee0:	.word	0x00000028
   21ee4:	.word	0x000000a4
   21ee8:	.word	0x000000bc
   21eec:	.word	0x000000d4
   21ef0:	.word	0x000000ec
   21ef4:	.word	0x00000104
   21ef8:	.word	0x0000011c
   21efc:	.word	0x00000134
   21f00:	.word	0x0000014c
   21f04:	.word	0x00000164
   21f08:	mov	r0, r4
   21f0c:	mov	r1, r8
   21f10:	mov	r2, r6
   21f14:	mov	r3, r9
   21f18:	bl	377c <ReadDoubleData>
   21f1c:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21f20:	ldr	r1, [r5, #16]
   21f24:	sub	r1, r1, #6
   21f28:	cmp	r1, #9
   21f2c:	bhi	221a4 <Mat_VarReadNumeric5+0x418>
   21f30:	add	r0, pc, #4
   21f34:	ldr	r1, [r0, r1, lsl #2]
   21f38:	add	pc, r0, r1
   21f3c:	.word	0x00000028
   21f40:	.word	0x0000014c
   21f44:	.word	0x0000016c
   21f48:	.word	0x0000018c
   21f4c:	.word	0x000001ac
   21f50:	.word	0x000001cc
   21f54:	.word	0x000001ec
   21f58:	.word	0x0000020c
   21f5c:	.word	0x0000022c
   21f60:	.word	0x0000024c
   21f64:	ldr	r0, [r5, #52]	; 0x34
   21f68:	mov	r2, r8
   21f6c:	mov	r3, r6
   21f70:	ldr	r1, [r0, #12]
   21f74:	mov	r0, r4
   21f78:	str	r9, [sp]
   21f7c:	bl	4cb4 <ReadCompressedDoubleData>
   21f80:	b	221a4 <Mat_VarReadNumeric5+0x418>
   21f84:	mov	r0, r4
   21f88:	mov	r1, r8
   21f8c:	mov	r2, r6
   21f90:	mov	r3, r9
   21f94:	bl	5fa0 <ReadSingleData>
   21f98:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21f9c:	mov	r0, r4
   21fa0:	mov	r1, r8
   21fa4:	mov	r2, r6
   21fa8:	mov	r3, r9
   21fac:	bl	11e88 <ReadInt8Data>
   21fb0:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21fb4:	mov	r0, r4
   21fb8:	mov	r1, r8
   21fbc:	mov	r2, r6
   21fc0:	mov	r3, r9
   21fc4:	bl	13934 <ReadUInt8Data>
   21fc8:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21fcc:	mov	r0, r4
   21fd0:	mov	r1, r8
   21fd4:	mov	r2, r6
   21fd8:	mov	r3, r9
   21fdc:	bl	e9a0 <ReadInt16Data>
   21fe0:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21fe4:	mov	r0, r4
   21fe8:	mov	r1, r8
   21fec:	mov	r2, r6
   21ff0:	mov	r3, r9
   21ff4:	bl	10414 <ReadUInt16Data>
   21ff8:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   21ffc:	mov	r0, r4
   22000:	mov	r1, r8
   22004:	mov	r2, r6
   22008:	mov	r3, r9
   2200c:	bl	b4d8 <ReadInt32Data>
   22010:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   22014:	mov	r0, r4
   22018:	mov	r1, r8
   2201c:	mov	r2, r6
   22020:	mov	r3, r9
   22024:	bl	cf3c <ReadUInt32Data>
   22028:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   2202c:	mov	r0, r4
   22030:	mov	r1, r8
   22034:	mov	r2, r6
   22038:	mov	r3, r9
   2203c:	bl	7ba0 <ReadInt64Data>
   22040:	b	22058 <Mat_VarReadNumeric5+0x2cc>
   22044:	mov	r0, r4
   22048:	mov	r1, r8
   2204c:	mov	r2, r6
   22050:	mov	r3, r9
   22054:	bl	983c <ReadUInt64Data>
   22058:	cmp	r7, #0
   2205c:	addne	r0, r0, #4
   22060:	asr	r1, r0, #31
   22064:	add	r1, r0, r1, lsr #29
   22068:	bic	r1, r1, #7
   2206c:	subs	r1, r0, r1
   22070:	beq	221d4 <Mat_VarReadNumeric5+0x448>
   22074:	ldr	r0, [r4]
   22078:	rsb	r1, r1, #8
   2207c:	mov	r2, #1
   22080:	bl	1a68 <fseek@plt>
   22084:	b	221d4 <Mat_VarReadNumeric5+0x448>
   22088:	ldr	r0, [r5, #52]	; 0x34
   2208c:	mov	r2, r8
   22090:	mov	r3, r6
   22094:	ldr	r1, [r0, #12]
   22098:	mov	r0, r4
   2209c:	str	r9, [sp]
   220a0:	bl	7638 <ReadCompressedSingleData>
   220a4:	b	221a4 <Mat_VarReadNumeric5+0x418>
   220a8:	ldr	r0, [r5, #52]	; 0x34
   220ac:	mov	r2, r8
   220b0:	mov	r3, r6
   220b4:	ldr	r1, [r0, #12]
   220b8:	mov	r0, r4
   220bc:	str	r9, [sp]
   220c0:	bl	1340c <ReadCompressedInt8Data>
   220c4:	b	221a4 <Mat_VarReadNumeric5+0x418>
   220c8:	ldr	r0, [r5, #52]	; 0x34
   220cc:	mov	r2, r8
   220d0:	mov	r3, r6
   220d4:	ldr	r1, [r0, #12]
   220d8:	mov	r0, r4
   220dc:	str	r9, [sp]
   220e0:	bl	14eb8 <ReadCompressedUInt8Data>
   220e4:	b	221a4 <Mat_VarReadNumeric5+0x418>
   220e8:	ldr	r0, [r5, #52]	; 0x34
   220ec:	mov	r2, r8
   220f0:	mov	r3, r6
   220f4:	ldr	r1, [r0, #12]
   220f8:	mov	r0, r4
   220fc:	str	r9, [sp]
   22100:	bl	feec <ReadCompressedInt16Data>
   22104:	b	221a4 <Mat_VarReadNumeric5+0x418>
   22108:	ldr	r0, [r5, #52]	; 0x34
   2210c:	mov	r2, r8
   22110:	mov	r3, r6
   22114:	ldr	r1, [r0, #12]
   22118:	mov	r0, r4
   2211c:	str	r9, [sp]
   22120:	bl	11960 <ReadCompressedUInt16Data>
   22124:	b	221a4 <Mat_VarReadNumeric5+0x418>
   22128:	ldr	r0, [r5, #52]	; 0x34
   2212c:	mov	r2, r8
   22130:	mov	r3, r6
   22134:	ldr	r1, [r0, #12]
   22138:	mov	r0, r4
   2213c:	str	r9, [sp]
   22140:	bl	ca14 <ReadCompressedInt32Data>
   22144:	b	221a4 <Mat_VarReadNumeric5+0x418>
   22148:	ldr	r0, [r5, #52]	; 0x34
   2214c:	mov	r2, r8
   22150:	mov	r3, r6
   22154:	ldr	r1, [r0, #12]
   22158:	mov	r0, r4
   2215c:	str	r9, [sp]
   22160:	bl	e478 <ReadCompressedUInt32Data>
   22164:	b	221a4 <Mat_VarReadNumeric5+0x418>
   22168:	ldr	r0, [r5, #52]	; 0x34
   2216c:	mov	r2, r8
   22170:	mov	r3, r6
   22174:	ldr	r1, [r0, #12]
   22178:	mov	r0, r4
   2217c:	str	r9, [sp]
   22180:	bl	92a4 <ReadCompressedInt64Data>
   22184:	b	221a4 <Mat_VarReadNumeric5+0x418>
   22188:	ldr	r0, [r5, #52]	; 0x34
   2218c:	mov	r2, r8
   22190:	mov	r3, r6
   22194:	ldr	r1, [r0, #12]
   22198:	mov	r0, r4
   2219c:	str	r9, [sp]
   221a0:	bl	af40 <ReadCompressedUInt64Data>
   221a4:	cmp	r7, #0
   221a8:	addne	r0, r0, #4
   221ac:	asr	r1, r0, #31
   221b0:	add	r1, r0, r1, lsr #29
   221b4:	bic	r1, r1, #7
   221b8:	subs	r0, r0, r1
   221bc:	beq	221d4 <Mat_VarReadNumeric5+0x448>
   221c0:	ldr	r1, [r5, #52]	; 0x34
   221c4:	rsb	r2, r0, #8
   221c8:	mov	r0, r4
   221cc:	ldr	r1, [r1, #12]
   221d0:	bl	2340 <InflateSkip>
   221d4:	sub	sp, fp, #24
   221d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000221dc <Mat_VarReadData5>:
   221dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221e0:	add	fp, sp, #28
   221e4:	sub	sp, sp, #92	; 0x5c
   221e8:	mov	r4, r1
   221ec:	ldr	r1, [r1, #52]	; 0x34
   221f0:	mov	r8, r0
   221f4:	ldr	r0, [r0]
   221f8:	str	r2, [sp, #24]
   221fc:	mov	r2, #0
   22200:	mov	r9, r3
   22204:	mov	r6, #0
   22208:	ldr	r1, [r1]
   2220c:	bl	1a68 <fseek@plt>
   22210:	ldr	r0, [r4, #48]	; 0x30
   22214:	ldr	sl, [fp, #12]
   22218:	ldr	r7, [fp, #8]
   2221c:	cmp	r0, #1
   22220:	beq	2229c <Mat_VarReadData5+0xc0>
   22224:	cmp	r0, #0
   22228:	bne	22410 <Mat_VarReadData5+0x234>
   2222c:	ldr	r3, [r8]
   22230:	sub	r5, fp, #36	; 0x24
   22234:	mov	r1, #4
   22238:	mov	r2, #2
   2223c:	mov	r0, r5
   22240:	bl	18d0 <fread@plt>
   22244:	ldr	r0, [r8, #20]
   22248:	cmp	r0, #0
   2224c:	beq	22260 <Mat_VarReadData5+0x84>
   22250:	mov	r0, r5
   22254:	bl	1c30 <Mat_int32Swap>
   22258:	add	r0, r5, #4
   2225c:	bl	1c30 <Mat_int32Swap>
   22260:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22264:	uxtb	r1, r0
   22268:	cmp	r1, #25
   2226c:	movcs	r1, #0
   22270:	cmp	r0, #65536	; 0x10000
   22274:	str	r1, [r4, #8]
   22278:	bcc	22408 <Mat_VarReadData5+0x22c>
   2227c:	ldr	r0, [r8]
   22280:	mvn	r1, #3
   22284:	mov	r2, #1
   22288:	bl	1a68 <fseek@plt>
   2228c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22290:	mov	r1, #4
   22294:	add	r6, r1, r0, asr #16
   22298:	b	22410 <Mat_VarReadData5+0x234>
   2229c:	ldr	r0, [r4, #52]	; 0x34
   222a0:	ldr	r6, [r0, #16]
   222a4:	cmp	r6, #0
   222a8:	beq	2232c <Mat_VarReadData5+0x150>
   222ac:	ldr	r0, [r4, #20]
   222b0:	cmp	r0, #0
   222b4:	beq	2235c <Mat_VarReadData5+0x180>
   222b8:	ldr	r0, [sp, #24]
   222bc:	ldr	r5, [r4, #32]
   222c0:	ldr	r3, [r4, #8]
   222c4:	ldr	r2, [r4, #16]
   222c8:	ldm	r4, {ip, lr}
   222cc:	ldr	r1, [r0]
   222d0:	ldr	r0, [r6]
   222d4:	stm	sp, {r5, r9}
   222d8:	add	r5, sp, #8
   222dc:	stm	r5, {r7, sl, lr}
   222e0:	str	ip, [sp, #20]
   222e4:	bl	229c4 <GetDataSlab>
   222e8:	mov	r5, r0
   222ec:	cmp	r0, #0
   222f0:	bne	229ac <Mat_VarReadData5+0x7d0>
   222f4:	ldr	r0, [sp, #24]
   222f8:	mov	ip, r7
   222fc:	ldr	r7, [r4, #32]
   22300:	ldr	r5, [r4, #4]
   22304:	ldr	r3, [r4, #8]
   22308:	ldr	r2, [r4, #16]
   2230c:	ldr	r1, [r0, #4]
   22310:	ldr	r0, [r6, #4]
   22314:	ldr	r6, [r4]
   22318:	stm	sp, {r7, r9, ip}
   2231c:	str	sl, [sp, #12]
   22320:	str	r5, [sp, #16]
   22324:	str	r6, [sp, #20]
   22328:	b	22388 <Mat_VarReadData5+0x1ac>
   2232c:	ldr	r1, [r0, #12]
   22330:	add	r0, sp, #28
   22334:	bl	1960 <inflateCopy@plt>
   22338:	cmp	r0, #0
   2233c:	beq	22394 <Mat_VarReadData5+0x1b8>
   22340:	bl	18a0 <zError@plt>
   22344:	mov	r1, r0
   22348:	ldr	r0, [pc, #1640]	; 229b8 <Mat_VarReadData5+0x7dc>
   2234c:	add	r0, pc, r0
   22350:	bl	19cc <Mat_Critical@plt>
   22354:	mvn	r5, #0
   22358:	b	229ac <Mat_VarReadData5+0x7d0>
   2235c:	ldr	r0, [r4, #32]
   22360:	ldm	r4, {r1, r5}
   22364:	ldr	r3, [r4, #8]
   22368:	ldr	r2, [r4, #16]
   2236c:	stm	sp, {r0, r9}
   22370:	str	r1, [sp, #20]
   22374:	ldr	r1, [sp, #24]
   22378:	mov	r0, r6
   2237c:	str	r7, [sp, #8]
   22380:	str	sl, [sp, #12]
   22384:	str	r5, [sp, #16]
   22388:	bl	229c4 <GetDataSlab>
   2238c:	mov	r5, r0
   22390:	b	229ac <Mat_VarReadData5+0x7d0>
   22394:	sub	r5, fp, #36	; 0x24
   22398:	mov	r6, #0
   2239c:	add	r1, sp, #28
   223a0:	mov	r0, r8
   223a4:	mov	r2, r5
   223a8:	str	r6, [sp, #32]
   223ac:	bl	30ac <InflateDataType>
   223b0:	ldr	r0, [r8, #20]
   223b4:	cmp	r0, #0
   223b8:	beq	223c4 <Mat_VarReadData5+0x1e8>
   223bc:	sub	r0, fp, #36	; 0x24
   223c0:	bl	1c30 <Mat_int32Swap>
   223c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   223c8:	uxtb	r1, r0
   223cc:	cmp	r1, #25
   223d0:	movcs	r1, r6
   223d4:	cmp	r6, r0, lsr #16
   223d8:	str	r1, [r4, #8]
   223dc:	bne	22290 <Mat_VarReadData5+0xb4>
   223e0:	add	r5, r5, #4
   223e4:	add	r1, sp, #28
   223e8:	mov	r0, r8
   223ec:	mov	r2, r5
   223f0:	bl	30ac <InflateDataType>
   223f4:	ldr	r0, [r8, #20]
   223f8:	cmp	r0, #0
   223fc:	beq	22408 <Mat_VarReadData5+0x22c>
   22400:	mov	r0, r5
   22404:	bl	1c30 <Mat_int32Swap>
   22408:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2240c:	add	r6, r0, #8
   22410:	asr	r0, r6, #31
   22414:	add	r0, r6, r0, lsr #29
   22418:	bic	r0, r0, #7
   2241c:	subs	r1, r6, r0
   22420:	addne	r6, r0, #8
   22424:	ldr	r0, [r4, #4]
   22428:	cmp	r0, #2
   2242c:	bne	22570 <Mat_VarReadData5+0x394>
   22430:	ldr	r2, [sl]
   22434:	ldr	r0, [r9]
   22438:	ldr	r1, [r7]
   2243c:	mov	r5, #1
   22440:	sub	r2, r2, #1
   22444:	mla	r0, r2, r1, r0
   22448:	add	r1, r0, #1
   2244c:	ldr	r0, [r4, #32]
   22450:	ldr	r2, [r0]
   22454:	cmp	r1, r2
   22458:	bhi	229ac <Mat_VarReadData5+0x7d0>
   2245c:	ldr	r3, [sl, #4]
   22460:	ldr	r1, [r9, #4]
   22464:	ldr	r2, [r7, #4]
   22468:	sub	r3, r3, #1
   2246c:	mla	r1, r3, r2, r1
   22470:	ldr	r2, [r0, #4]
   22474:	add	r1, r1, #1
   22478:	cmp	r1, r2
   2247c:	bhi	229ac <Mat_VarReadData5+0x7d0>
   22480:	ldr	r1, [r4, #48]	; 0x30
   22484:	cmp	r1, #1
   22488:	beq	227fc <Mat_VarReadData5+0x620>
   2248c:	cmp	r1, #0
   22490:	bne	22990 <Mat_VarReadData5+0x7b4>
   22494:	ldr	r1, [r4, #20]
   22498:	cmp	r1, #0
   2249c:	beq	22930 <Mat_VarReadData5+0x754>
   224a0:	ldr	r1, [sp, #24]
   224a4:	ldr	r3, [r4, #8]
   224a8:	ldr	r2, [r4, #16]
   224ac:	ldr	r1, [r1]
   224b0:	stm	sp, {r0, r9}
   224b4:	mov	r0, r8
   224b8:	str	r7, [sp, #8]
   224bc:	str	sl, [sp, #12]
   224c0:	bl	1d24c <ReadDataSlab2>
   224c4:	ldr	r0, [r4, #52]	; 0x34
   224c8:	mov	r2, #0
   224cc:	mov	r5, #0
   224d0:	ldr	r0, [r0]
   224d4:	add	r1, r0, r6
   224d8:	ldr	r0, [r8]
   224dc:	bl	1a68 <fseek@plt>
   224e0:	ldr	r3, [r8]
   224e4:	sub	r6, fp, #36	; 0x24
   224e8:	mov	r1, #4
   224ec:	mov	r2, #2
   224f0:	mov	r0, r6
   224f4:	bl	18d0 <fread@plt>
   224f8:	ldr	r0, [r8, #20]
   224fc:	cmp	r0, #0
   22500:	beq	22514 <Mat_VarReadData5+0x338>
   22504:	mov	r0, r6
   22508:	bl	1c30 <Mat_int32Swap>
   2250c:	add	r0, r6, #4
   22510:	bl	1c30 <Mat_int32Swap>
   22514:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22518:	uxtb	r1, r0
   2251c:	cmp	r1, #25
   22520:	movcc	r5, r1
   22524:	cmp	r0, #65536	; 0x10000
   22528:	str	r5, [r4, #8]
   2252c:	bcc	22544 <Mat_VarReadData5+0x368>
   22530:	ldr	r0, [r8]
   22534:	mvn	r1, #3
   22538:	mov	r2, #1
   2253c:	bl	1a68 <fseek@plt>
   22540:	ldr	r5, [r4, #8]
   22544:	ldr	r0, [sp, #24]
   22548:	ldr	r2, [r4, #16]
   2254c:	mov	r3, r5
   22550:	ldr	r1, [r0, #4]
   22554:	ldr	r0, [r4, #32]
   22558:	stm	sp, {r0, r9}
   2255c:	ldr	r0, [fp, #8]
   22560:	str	sl, [sp, #12]
   22564:	str	r0, [sp, #8]
   22568:	mov	r0, r8
   2256c:	b	2294c <Mat_VarReadData5+0x770>
   22570:	ldr	r1, [r4, #48]	; 0x30
   22574:	cmp	r1, #1
   22578:	beq	22668 <Mat_VarReadData5+0x48c>
   2257c:	cmp	r1, #0
   22580:	bne	22990 <Mat_VarReadData5+0x7b4>
   22584:	ldr	r1, [r4, #20]
   22588:	cmp	r1, #0
   2258c:	beq	227a4 <Mat_VarReadData5+0x5c8>
   22590:	ldr	r1, [sp, #24]
   22594:	ldr	r3, [r4, #8]
   22598:	ldr	r2, [r4, #16]
   2259c:	ldr	r5, [r4, #32]
   225a0:	ldr	r1, [r1]
   225a4:	stm	sp, {r0, r5, r9}
   225a8:	mov	r0, r8
   225ac:	str	r7, [sp, #12]
   225b0:	str	sl, [sp, #16]
   225b4:	bl	15614 <ReadDataSlabN>
   225b8:	ldr	r0, [r4, #52]	; 0x34
   225bc:	mov	r2, #0
   225c0:	mov	r5, #0
   225c4:	ldr	r0, [r0]
   225c8:	add	r1, r0, r6
   225cc:	ldr	r0, [r8]
   225d0:	bl	1a68 <fseek@plt>
   225d4:	ldr	r3, [r8]
   225d8:	sub	r6, fp, #36	; 0x24
   225dc:	mov	r1, #4
   225e0:	mov	r2, #2
   225e4:	mov	r0, r6
   225e8:	bl	18d0 <fread@plt>
   225ec:	ldr	r0, [r8, #20]
   225f0:	cmp	r0, #0
   225f4:	beq	22608 <Mat_VarReadData5+0x42c>
   225f8:	mov	r0, r6
   225fc:	bl	1c30 <Mat_int32Swap>
   22600:	add	r0, r6, #4
   22604:	bl	1c30 <Mat_int32Swap>
   22608:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2260c:	uxtb	r1, r0
   22610:	cmp	r1, #25
   22614:	movcc	r5, r1
   22618:	cmp	r0, #65536	; 0x10000
   2261c:	str	r5, [r4, #8]
   22620:	bcc	22638 <Mat_VarReadData5+0x45c>
   22624:	ldr	r0, [r8]
   22628:	mvn	r1, #3
   2262c:	mov	r2, #1
   22630:	bl	1a68 <fseek@plt>
   22634:	ldr	r5, [r4, #8]
   22638:	ldr	r0, [sp, #24]
   2263c:	ldr	r2, [r4, #16]
   22640:	ldr	r3, [r4, #32]
   22644:	ldr	r1, [r0, #4]
   22648:	ldr	r0, [r4, #4]
   2264c:	stm	sp, {r0, r3, r9}
   22650:	ldr	r0, [fp, #8]
   22654:	mov	r3, r5
   22658:	str	sl, [sp, #16]
   2265c:	str	r0, [sp, #12]
   22660:	mov	r0, r8
   22664:	b	227c4 <Mat_VarReadData5+0x5e8>
   22668:	ldr	r1, [r4, #20]
   2266c:	cmp	r1, #0
   22670:	beq	227cc <Mat_VarReadData5+0x5f0>
   22674:	ldr	r1, [sp, #24]
   22678:	ldr	r3, [r4, #16]
   2267c:	ldr	r5, [r4, #32]
   22680:	ldr	r2, [r1]
   22684:	ldr	r1, [r4, #8]
   22688:	str	r1, [sp]
   2268c:	stmib	sp, {r0, r5, r9}
   22690:	add	r5, sp, #28
   22694:	mov	r0, r8
   22698:	str	r7, [sp, #16]
   2269c:	str	sl, [sp, #20]
   226a0:	mov	r1, r5
   226a4:	bl	18ef0 <ReadCompressedDataSlabN>
   226a8:	ldr	r1, [r4, #52]	; 0x34
   226ac:	ldr	r0, [r8]
   226b0:	mov	r2, #0
   226b4:	mov	r7, #0
   226b8:	ldr	r1, [r1]
   226bc:	bl	1a68 <fseek@plt>
   226c0:	mov	r0, r5
   226c4:	bl	1954 <inflateEnd@plt>
   226c8:	ldr	r0, [r4, #52]	; 0x34
   226cc:	ldr	r1, [r0, #12]
   226d0:	mov	r0, r5
   226d4:	bl	1960 <inflateCopy@plt>
   226d8:	mov	r5, r0
   226dc:	cmp	r0, #0
   226e0:	beq	226fc <Mat_VarReadData5+0x520>
   226e4:	mov	r0, r5
   226e8:	bl	18a0 <zError@plt>
   226ec:	mov	r1, r0
   226f0:	ldr	r0, [pc, #712]	; 229c0 <Mat_VarReadData5+0x7e4>
   226f4:	add	r0, pc, r0
   226f8:	bl	19cc <Mat_Critical@plt>
   226fc:	add	sl, sp, #28
   22700:	mov	r0, r8
   22704:	mov	r2, r6
   22708:	mov	r1, sl
   2270c:	bl	2340 <InflateSkip>
   22710:	sub	r2, fp, #36	; 0x24
   22714:	mov	r0, r8
   22718:	mov	r1, sl
   2271c:	str	r7, [sp, #32]
   22720:	bl	30ac <InflateDataType>
   22724:	ldr	r0, [r8, #20]
   22728:	cmp	r0, #0
   2272c:	beq	22738 <Mat_VarReadData5+0x55c>
   22730:	sub	r0, fp, #36	; 0x24
   22734:	bl	1c30 <Mat_int32Swap>
   22738:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2273c:	ldr	sl, [fp, #12]
   22740:	mov	r2, #0
   22744:	uxtb	r0, r1
   22748:	cmp	r0, #25
   2274c:	movcs	r0, r2
   22750:	cmp	r2, r1, lsr #16
   22754:	str	r0, [r4, #8]
   22758:	bne	22770 <Mat_VarReadData5+0x594>
   2275c:	add	r1, sp, #28
   22760:	mov	r0, r8
   22764:	mov	r2, #4
   22768:	bl	2340 <InflateSkip>
   2276c:	ldr	r0, [r4, #8]
   22770:	ldr	r1, [sp, #24]
   22774:	ldr	r3, [r4, #16]
   22778:	ldr	r6, [r4, #32]
   2277c:	ldr	r2, [r1, #4]
   22780:	ldr	r1, [r4, #4]
   22784:	stm	sp, {r0, r1, r6, r9}
   22788:	ldr	r0, [fp, #8]
   2278c:	add	r1, sp, #28
   22790:	str	sl, [sp, #20]
   22794:	str	r0, [sp, #16]
   22798:	mov	r0, r8
   2279c:	bl	18ef0 <ReadCompressedDataSlabN>
   227a0:	b	22980 <Mat_VarReadData5+0x7a4>
   227a4:	ldr	r3, [r4, #8]
   227a8:	ldr	r2, [r4, #16]
   227ac:	ldr	r1, [r4, #32]
   227b0:	stm	sp, {r0, r1, r9}
   227b4:	ldr	r1, [sp, #24]
   227b8:	mov	r0, r8
   227bc:	str	r7, [sp, #12]
   227c0:	str	sl, [sp, #16]
   227c4:	bl	15614 <ReadDataSlabN>
   227c8:	b	22990 <Mat_VarReadData5+0x7b4>
   227cc:	ldr	r1, [r4, #8]
   227d0:	ldr	r3, [r4, #16]
   227d4:	ldr	r2, [r4, #32]
   227d8:	str	r1, [sp]
   227dc:	stmib	sp, {r0, r2, r9}
   227e0:	ldr	r2, [sp, #24]
   227e4:	add	r1, sp, #28
   227e8:	mov	r0, r8
   227ec:	str	r7, [sp, #16]
   227f0:	str	sl, [sp, #20]
   227f4:	bl	18ef0 <ReadCompressedDataSlabN>
   227f8:	b	2297c <Mat_VarReadData5+0x7a0>
   227fc:	ldr	r1, [r4, #20]
   22800:	cmp	r1, #0
   22804:	beq	22954 <Mat_VarReadData5+0x778>
   22808:	ldr	r1, [sp, #24]
   2280c:	ldr	r3, [r4, #16]
   22810:	add	r5, sp, #28
   22814:	ldr	r2, [r1]
   22818:	ldr	r1, [r4, #8]
   2281c:	str	r1, [sp]
   22820:	stmib	sp, {r0, r9}
   22824:	mov	r0, r8
   22828:	mov	r1, r5
   2282c:	str	r7, [sp, #12]
   22830:	str	sl, [sp, #16]
   22834:	bl	1e838 <ReadCompressedDataSlab2>
   22838:	ldr	r1, [r4, #52]	; 0x34
   2283c:	ldr	r0, [r8]
   22840:	mov	r2, #0
   22844:	mov	r7, #0
   22848:	ldr	r1, [r1]
   2284c:	bl	1a68 <fseek@plt>
   22850:	mov	r0, r5
   22854:	bl	1954 <inflateEnd@plt>
   22858:	ldr	r0, [r4, #52]	; 0x34
   2285c:	ldr	r1, [r0, #12]
   22860:	mov	r0, r5
   22864:	bl	1960 <inflateCopy@plt>
   22868:	mov	r5, r0
   2286c:	cmp	r0, #0
   22870:	beq	2288c <Mat_VarReadData5+0x6b0>
   22874:	mov	r0, r5
   22878:	bl	18a0 <zError@plt>
   2287c:	mov	r1, r0
   22880:	ldr	r0, [pc, #308]	; 229bc <Mat_VarReadData5+0x7e0>
   22884:	add	r0, pc, r0
   22888:	bl	19cc <Mat_Critical@plt>
   2288c:	add	sl, sp, #28
   22890:	mov	r0, r8
   22894:	mov	r2, r6
   22898:	mov	r1, sl
   2289c:	bl	2340 <InflateSkip>
   228a0:	sub	r2, fp, #36	; 0x24
   228a4:	mov	r0, r8
   228a8:	mov	r1, sl
   228ac:	str	r7, [sp, #32]
   228b0:	bl	30ac <InflateDataType>
   228b4:	ldr	r0, [r8, #20]
   228b8:	cmp	r0, #0
   228bc:	beq	228c8 <Mat_VarReadData5+0x6ec>
   228c0:	sub	r0, fp, #36	; 0x24
   228c4:	bl	1c30 <Mat_int32Swap>
   228c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   228cc:	ldr	r6, [fp, #12]
   228d0:	mov	r2, #0
   228d4:	uxtb	r0, r1
   228d8:	cmp	r0, #25
   228dc:	movcs	r0, r2
   228e0:	cmp	r2, r1, lsr #16
   228e4:	str	r0, [r4, #8]
   228e8:	bne	22900 <Mat_VarReadData5+0x724>
   228ec:	add	r1, sp, #28
   228f0:	mov	r0, r8
   228f4:	mov	r2, #4
   228f8:	bl	2340 <InflateSkip>
   228fc:	ldr	r0, [r4, #8]
   22900:	ldr	r1, [sp, #24]
   22904:	ldr	r3, [r4, #16]
   22908:	ldr	r2, [r1, #4]
   2290c:	ldr	r1, [r4, #32]
   22910:	stm	sp, {r0, r1, r9}
   22914:	ldr	r0, [fp, #8]
   22918:	add	r1, sp, #28
   2291c:	str	r6, [sp, #16]
   22920:	str	r0, [sp, #12]
   22924:	mov	r0, r8
   22928:	bl	1e838 <ReadCompressedDataSlab2>
   2292c:	b	22980 <Mat_VarReadData5+0x7a4>
   22930:	ldr	r3, [r4, #8]
   22934:	ldr	r2, [r4, #16]
   22938:	ldr	r1, [sp, #24]
   2293c:	stm	sp, {r0, r9}
   22940:	mov	r0, r8
   22944:	str	r7, [sp, #8]
   22948:	str	sl, [sp, #12]
   2294c:	bl	1d24c <ReadDataSlab2>
   22950:	b	22990 <Mat_VarReadData5+0x7b4>
   22954:	ldr	r1, [r4, #8]
   22958:	ldr	r3, [r4, #16]
   2295c:	ldr	r2, [sp, #24]
   22960:	str	r1, [sp]
   22964:	stmib	sp, {r0, r9}
   22968:	add	r1, sp, #28
   2296c:	mov	r0, r8
   22970:	str	r7, [sp, #12]
   22974:	str	sl, [sp, #16]
   22978:	bl	1e838 <ReadCompressedDataSlab2>
   2297c:	mov	r5, #0
   22980:	add	r0, sp, #28
   22984:	bl	1954 <inflateEnd@plt>
   22988:	cmp	r5, #0
   2298c:	bne	229ac <Mat_VarReadData5+0x7d0>
   22990:	ldr	r0, [r4, #16]
   22994:	bl	47104 <ClassType2DataType>
   22998:	str	r0, [r4, #8]
   2299c:	ldr	r0, [r4, #16]
   229a0:	bl	1a38 <Mat_SizeOfClass@plt>
   229a4:	mov	r5, #0
   229a8:	str	r0, [r4, #12]
   229ac:	mov	r0, r5
   229b0:	sub	sp, fp, #28
   229b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229b8:	.word	0x00029a17
   229bc:	.word	0x000294df
   229c0:	.word	0x0002966f

000229c4 <GetDataSlab>:
   229c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229c8:	add	fp, sp, #28
   229cc:	sub	sp, sp, #188	; 0xbc
   229d0:	cmp	r2, #6
   229d4:	mov	lr, r1
   229d8:	mov	r9, r0
   229dc:	cmpeq	r3, #9
   229e0:	beq	22a54 <GetDataSlab+0x90>
   229e4:	cmp	r2, #7
   229e8:	cmpeq	r3, #7
   229ec:	beq	22a54 <GetDataSlab+0x90>
   229f0:	cmp	r2, #10
   229f4:	cmpeq	r3, #3
   229f8:	beq	22a54 <GetDataSlab+0x90>
   229fc:	cmp	r2, #12
   22a00:	cmpeq	r3, #5
   22a04:	beq	22a54 <GetDataSlab+0x90>
   22a08:	cmp	r2, #14
   22a0c:	cmpeq	r3, #12
   22a10:	beq	22a54 <GetDataSlab+0x90>
   22a14:	cmp	r2, #8
   22a18:	cmpeq	r3, #1
   22a1c:	beq	22a54 <GetDataSlab+0x90>
   22a20:	cmp	r2, #11
   22a24:	cmpeq	r3, #4
   22a28:	beq	22a54 <GetDataSlab+0x90>
   22a2c:	cmp	r2, #13
   22a30:	cmpeq	r3, #6
   22a34:	beq	22a54 <GetDataSlab+0x90>
   22a38:	cmp	r2, #15
   22a3c:	cmpeq	r3, #13
   22a40:	beq	22a54 <GetDataSlab+0x90>
   22a44:	cmp	r2, #9
   22a48:	mov	r7, #0
   22a4c:	cmpeq	r3, #2
   22a50:	bne	22a58 <GetDataSlab+0x94>
   22a54:	mov	r7, #1
   22a58:	add	ip, fp, #8
   22a5c:	ldr	r0, [fp, #24]
   22a60:	str	r3, [sp, #52]	; 0x34
   22a64:	ldr	r3, [fp, #20]
   22a68:	ldm	ip, {r4, r6, ip}
   22a6c:	str	r6, [sp, #60]	; 0x3c
   22a70:	cmp	r0, #2
   22a74:	bne	22bf8 <GetDataSlab+0x234>
   22a78:	ldr	r8, [r3]
   22a7c:	ldr	r1, [r6]
   22a80:	ldr	sl, [ip]
   22a84:	ldr	r5, [r4]
   22a88:	sub	r0, r8, #1
   22a8c:	str	r1, [sp, #36]	; 0x24
   22a90:	str	r5, [sp, #40]	; 0x28
   22a94:	mla	r0, r0, sl, r1
   22a98:	add	r1, r0, #1
   22a9c:	mov	r0, #1
   22aa0:	cmp	r1, r5
   22aa4:	bhi	24900 <GetDataSlab+0x1f3c>
   22aa8:	ldr	r1, [r3, #4]!
   22aac:	str	r9, [sp, #48]	; 0x30
   22ab0:	ldr	r9, [r6, #4]
   22ab4:	ldr	r5, [ip, #4]!
   22ab8:	sub	r6, r1, #1
   22abc:	str	r5, [sp, #44]	; 0x2c
   22ac0:	str	r9, [sp, #32]
   22ac4:	mla	r6, r6, r5, r9
   22ac8:	ldr	r5, [r4, #4]
   22acc:	add	r6, r6, #1
   22ad0:	cmp	r6, r5
   22ad4:	bhi	24900 <GetDataSlab+0x1f3c>
   22ad8:	ldr	r6, [sp, #40]	; 0x28
   22adc:	cmp	sl, #1
   22ae0:	cmpeq	r8, r6
   22ae4:	beq	248d8 <GetDataSlab+0x1f14>
   22ae8:	sub	r2, r2, #6
   22aec:	str	r1, [sp, #56]	; 0x38
   22af0:	cmp	r2, #9
   22af4:	bhi	24900 <GetDataSlab+0x1f3c>
   22af8:	add	r0, pc, #4
   22afc:	ldr	r2, [r0, r2, lsl #2]
   22b00:	add	pc, r0, r2
   22b04:	.word	0x00000028
   22b08:	.word	0x00001e04
   22b0c:	.word	0x00001ed0
   22b10:	.word	0x00001fbc
   22b14:	.word	0x000020a8
   22b18:	.word	0x0000216c
   22b1c:	.word	0x00002230
   22b20:	.word	0x00002324
   22b24:	.word	0x00002418
   22b28:	.word	0x000024e0
   22b2c:	ldr	r3, [sp, #52]	; 0x34
   22b30:	ldr	r9, [sp, #48]	; 0x30
   22b34:	mov	r0, #1
   22b38:	sub	r1, r3, #1
   22b3c:	cmp	r1, #11
   22b40:	bhi	3deb4 <GetDataSlab+0x1b4f0>
   22b44:	add	r2, pc, #8
   22b48:	ldr	r7, [sp, #44]	; 0x2c
   22b4c:	ldr	r1, [r2, r1, lsl #2]
   22b50:	add	pc, r2, r1
   22b54:	.word	0x00000030
   22b58:	.word	0x0001af8c
   22b5c:	.word	0x0001affc
   22b60:	.word	0x0001b074
   22b64:	.word	0x0001b0ec
   22b68:	.word	0x0001b164
   22b6c:	.word	0x0001b1dc
   22b70:	.word	0x0001b360
   22b74:	.word	0x0001b250
   22b78:	.word	0x0001b360
   22b7c:	.word	0x0001b360
   22b80:	.word	0x0001b2c0
   22b84:	ldr	r0, [sp, #56]	; 0x38
   22b88:	cmp	r0, #1
   22b8c:	blt	248fc <GetDataSlab+0x1f38>
   22b90:	ldr	r0, [sp, #36]	; 0x24
   22b94:	ldr	r1, [sp, #32]
   22b98:	mul	r2, r7, r6
   22b9c:	mov	r3, #0
   22ba0:	mla	r0, r1, r6, r0
   22ba4:	add	r1, r9, r0
   22ba8:	cmp	r8, #1
   22bac:	blt	22bdc <GetDataSlab+0x218>
   22bb0:	mov	r0, #0
   22bb4:	mov	r7, r8
   22bb8:	add	r6, r1, r0
   22bbc:	add	r0, r0, sl
   22bc0:	subs	r7, r7, #1
   22bc4:	ldrsb	r6, [r6]
   22bc8:	vmov	s0, r6
   22bcc:	vcvt.f64.s32	d16, s0
   22bd0:	vstr	d16, [lr]
   22bd4:	add	lr, lr, #8
   22bd8:	bne	22bb8 <GetDataSlab+0x1f4>
   22bdc:	ldr	r7, [sp, #56]	; 0x38
   22be0:	add	r3, r3, #1
   22be4:	add	r1, r1, r2
   22be8:	mov	r0, #0
   22bec:	cmp	r3, r7
   22bf0:	bne	22ba8 <GetDataSlab+0x1e4>
   22bf4:	b	24900 <GetDataSlab+0x1f3c>
   22bf8:	vmov.i32	q8, #0	; 0x00000000
   22bfc:	sub	r7, fp, #72	; 0x48
   22c00:	mov	r0, #36	; 0x24
   22c04:	mov	r3, #0
   22c08:	mov	r1, r7
   22c0c:	str	r3, [fp, #-40]	; 0xffffffd8
   22c10:	str	r3, [sp, #136]	; 0x88
   22c14:	str	r3, [sp, #96]	; 0x60
   22c18:	vst1.64	{d16-d17}, [r1], r0
   22c1c:	str	r3, [r1]
   22c20:	add	r1, r7, #16
   22c24:	add	r7, sp, #104	; 0x68
   22c28:	vst1.64	{d16-d17}, [r1]
   22c2c:	add	r1, r7, #16
   22c30:	vst1.64	{d16-d17}, [r1]
   22c34:	mov	r1, r7
   22c38:	add	r7, sp, #64	; 0x40
   22c3c:	vst1.64	{d16-d17}, [r1], r0
   22c40:	str	r3, [r1]
   22c44:	add	r1, r7, #16
   22c48:	vst1.64	{d16-d17}, [r1]
   22c4c:	mov	r1, r7
   22c50:	vst1.64	{d16-d17}, [r1], r0
   22c54:	sub	r0, r2, #6
   22c58:	cmp	r0, #9
   22c5c:	str	r3, [r1]
   22c60:	bhi	22f6c <GetDataSlab+0x5a8>
   22c64:	add	r1, pc, #12
   22c68:	str	lr, [sp, #56]	; 0x38
   22c6c:	str	r9, [sp, #48]	; 0x30
   22c70:	ldr	r0, [r1, r0, lsl #2]
   22c74:	add	pc, r1, r0
   22c78:	.word	0x00000028
   22c7c:	.word	0x000002fc
   22c80:	.word	0x000005c8
   22c84:	.word	0x000008a4
   22c88:	.word	0x00000b80
   22c8c:	.word	0x00000e3c
   22c90:	.word	0x000010f8
   22c94:	.word	0x000013d8
   22c98:	.word	0x000016b8
   22c9c:	.word	0x0000198c
   22ca0:	ldr	r0, [sp, #52]	; 0x34
   22ca4:	ldr	ip, [fp, #12]
   22ca8:	sub	r1, r0, #1
   22cac:	mov	r0, #1
   22cb0:	cmp	r1, #11
   22cb4:	bhi	335d8 <GetDataSlab+0x10c14>
   22cb8:	add	r2, pc, #4
   22cbc:	ldr	r1, [r2, r1, lsl #2]
   22cc0:	add	pc, r2, r1
   22cc4:	.word	0x00000030
   22cc8:	.word	0x000023e8
   22ccc:	.word	0x00002660
   22cd0:	.word	0x000028d0
   22cd4:	.word	0x00002b40
   22cd8:	.word	0x00002db0
   22cdc:	.word	0x00003020
   22ce0:	.word	0x00010914
   22ce4:	.word	0x00003298
   22ce8:	.word	0x00010914
   22cec:	.word	0x00010914
   22cf0:	.word	0x0000350c
   22cf4:	ldr	r0, [fp, #16]
   22cf8:	mov	r3, #0
   22cfc:	ldr	lr, [r0]
   22d00:	sub	r0, lr, #1
   22d04:	str	r0, [fp, #-72]	; 0xffffffb8
   22d08:	ldr	r0, [r4]
   22d0c:	str	r0, [sp, #40]	; 0x28
   22d10:	str	r0, [sp, #64]	; 0x40
   22d14:	ldr	r0, [fp, #20]
   22d18:	ldr	r1, [r0]
   22d1c:	ldr	r0, [fp, #24]
   22d20:	cmp	r0, #2
   22d24:	str	r1, [sp, #44]	; 0x2c
   22d28:	str	r1, [sp, #52]	; 0x34
   22d2c:	blt	22ddc <GetDataSlab+0x418>
   22d30:	ldr	r2, [sp, #40]	; 0x28
   22d34:	ldr	r6, [sp, #44]	; 0x2c
   22d38:	mov	r9, r4
   22d3c:	mov	r0, #1
   22d40:	mov	r3, #0
   22d44:	mov	r1, r4
   22d48:	mov	r7, r2
   22d4c:	str	r6, [sp, #52]	; 0x34
   22d50:	ldr	r6, [fp, #16]
   22d54:	add	r5, sp, #64	; 0x40
   22d58:	mov	r4, #0
   22d5c:	ldr	r6, [r6, r0, lsl #2]
   22d60:	str	r2, [r5, r0, lsl #2]
   22d64:	sub	r5, r6, #1
   22d68:	sub	r6, fp, #72	; 0x48
   22d6c:	str	r5, [r6, r0, lsl #2]
   22d70:	ldr	ip, [r9, r0, lsl #2]
   22d74:	mov	r6, ip
   22d78:	mul	r2, r6, r2
   22d7c:	ldr	r6, [r1, -r4, lsl #2]
   22d80:	add	r4, r4, #1
   22d84:	cmp	r0, r4
   22d88:	mul	r5, r5, r6
   22d8c:	bne	22d78 <GetDataSlab+0x3b4>
   22d90:	add	r4, sp, #64	; 0x40
   22d94:	add	r1, r1, #4
   22d98:	str	r2, [r4, r0, lsl #2]
   22d9c:	sub	r4, fp, #72	; 0x48
   22da0:	str	r5, [r4, r0, lsl #2]
   22da4:	ldr	r4, [fp, #12]
   22da8:	ldr	r5, [sp, #52]	; 0x34
   22dac:	ldr	r4, [r4, r0, lsl #2]
   22db0:	mla	r3, r4, r7, r3
   22db4:	ldr	r4, [fp, #20]
   22db8:	mov	r7, r2
   22dbc:	mov	r2, ip
   22dc0:	ldr	r4, [r4, r0, lsl #2]
   22dc4:	add	r0, r0, #1
   22dc8:	mul	r5, r4, r5
   22dcc:	ldr	r4, [fp, #24]
   22dd0:	str	r5, [sp, #52]	; 0x34
   22dd4:	cmp	r0, r4
   22dd8:	bne	22d50 <GetDataSlab+0x38c>
   22ddc:	ldr	r0, [sp, #48]	; 0x30
   22de0:	cmp	lr, #1
   22de4:	add	r7, r0, r3
   22de8:	bne	3179c <GetDataSlab+0xedd8>
   22dec:	ldr	r0, [sp, #52]	; 0x34
   22df0:	ldr	r5, [fp, #12]
   22df4:	ldr	r4, [sp, #44]	; 0x2c
   22df8:	cmp	r0, #1
   22dfc:	blt	248fc <GetDataSlab+0x1f38>
   22e00:	add	r0, sp, #104	; 0x68
   22e04:	ldr	r2, [sp, #56]	; 0x38
   22e08:	mov	sl, r5
   22e0c:	add	sl, r5, #4
   22e10:	orr	r1, r0, #4
   22e14:	ldr	r0, [fp, #20]
   22e18:	add	r8, r0, #4
   22e1c:	add	r0, sp, #64	; 0x40
   22e20:	orr	lr, r0, #4
   22e24:	ldr	r0, [fp, #24]
   22e28:	sub	r0, r0, #1
   22e2c:	str	r0, [sp, #32]
   22e30:	sub	r0, fp, #72	; 0x48
   22e34:	orr	r0, r0, #4
   22e38:	str	r0, [sp, #28]
   22e3c:	lsl	r0, r4, #3
   22e40:	str	r0, [sp, #36]	; 0x24
   22e44:	mov	r0, #0
   22e48:	str	r0, [sp, #56]	; 0x38
   22e4c:	cmp	r4, #1
   22e50:	blt	22e80 <GetDataSlab+0x4bc>
   22e54:	ldr	r0, [fp, #12]
   22e58:	ldr	r6, [sp, #44]	; 0x2c
   22e5c:	mov	r4, r2
   22e60:	ldr	r0, [r0]
   22e64:	add	r0, r7, r0
   22e68:	ldrsb	r5, [r0], #1
   22e6c:	subs	r6, r6, #1
   22e70:	vmov	s0, r5
   22e74:	vcvt.f64.s32	d16, s0
   22e78:	vstmia	r4!, {d16}
   22e7c:	bne	22e68 <GetDataSlab+0x4a4>
   22e80:	ldr	r0, [sp, #40]	; 0x28
   22e84:	str	r2, [sp, #48]	; 0x30
   22e88:	add	r7, r7, r0
   22e8c:	add	r3, r3, r0
   22e90:	ldr	r0, [fp, #24]
   22e94:	cmp	r0, #2
   22e98:	blt	22f3c <GetDataSlab+0x578>
   22e9c:	ldr	ip, [sp, #32]
   22ea0:	mov	r0, #0
   22ea4:	ldr	r4, [r1, r0]
   22ea8:	add	r4, r4, #1
   22eac:	str	r4, [r1, r0]
   22eb0:	ldr	r5, [r8, r0]
   22eb4:	sdiv	r6, r4, r5
   22eb8:	mls	r4, r6, r5, r4
   22ebc:	cmp	r4, #0
   22ec0:	bne	22f2c <GetDataSlab+0x568>
   22ec4:	mov	r4, #0
   22ec8:	str	r4, [r1, r0]
   22ecc:	ldr	r4, [lr, r0]
   22ed0:	sdiv	r5, r3, r4
   22ed4:	mls	r6, r5, r4, r3
   22ed8:	cmp	r6, #0
   22edc:	beq	22f00 <GetDataSlab+0x53c>
   22ee0:	add	r5, sp, #64	; 0x40
   22ee4:	ldr	r9, [sl, r0]
   22ee8:	sub	r4, r4, r6
   22eec:	ldr	r5, [r5, r0]
   22ef0:	mla	r4, r9, r5, r4
   22ef4:	add	r3, r4, r3
   22ef8:	add	r7, r7, r4
   22efc:	b	22f1c <GetDataSlab+0x558>
   22f00:	ldr	r4, [sl, r0]
   22f04:	cmp	r4, #0
   22f08:	beq	22f1c <GetDataSlab+0x558>
   22f0c:	add	r5, sp, #64	; 0x40
   22f10:	ldr	r5, [r5, r0]
   22f14:	mla	r3, r5, r4, r3
   22f18:	mla	r7, r5, r4, r7
   22f1c:	subs	ip, ip, #1
   22f20:	add	r0, r0, #4
   22f24:	bne	22ea4 <GetDataSlab+0x4e0>
   22f28:	b	22f3c <GetDataSlab+0x578>
   22f2c:	ldr	r6, [sp, #28]
   22f30:	ldr	r0, [r6, r0]
   22f34:	add	r7, r7, r0
   22f38:	add	r3, r0, r3
   22f3c:	ldr	r4, [sp, #44]	; 0x2c
   22f40:	ldr	r5, [sp, #56]	; 0x38
   22f44:	ldr	r0, [sp, #36]	; 0x24
   22f48:	ldr	r2, [sp, #48]	; 0x30
   22f4c:	ldr	r6, [sp, #52]	; 0x34
   22f50:	add	r5, r5, r4
   22f54:	add	r2, r2, r0
   22f58:	mov	r0, #0
   22f5c:	cmp	r5, r6
   22f60:	str	r5, [sp, #56]	; 0x38
   22f64:	blt	22e4c <GetDataSlab+0x488>
   22f68:	b	24900 <GetDataSlab+0x1f3c>
   22f6c:	mov	r0, #1
   22f70:	b	24900 <GetDataSlab+0x1f3c>
   22f74:	ldr	r0, [sp, #52]	; 0x34
   22f78:	ldr	ip, [fp, #12]
   22f7c:	sub	r1, r0, #1
   22f80:	mov	r0, #1
   22f84:	cmp	r1, #11
   22f88:	bhi	345b0 <GetDataSlab+0x11bec>
   22f8c:	add	r2, pc, #4
   22f90:	ldr	r1, [r2, r1, lsl #2]
   22f94:	add	pc, r2, r1
   22f98:	.word	0x00000030
   22f9c:	.word	0x000034c0
   22fa0:	.word	0x00003738
   22fa4:	.word	0x000039a8
   22fa8:	.word	0x00003c18
   22fac:	.word	0x00003e88
   22fb0:	.word	0x000040f8
   22fb4:	.word	0x00011618
   22fb8:	.word	0x00004360
   22fbc:	.word	0x00011618
   22fc0:	.word	0x00011618
   22fc4:	.word	0x000045d8
   22fc8:	ldr	r0, [fp, #16]
   22fcc:	mov	r3, #0
   22fd0:	ldr	lr, [r0]
   22fd4:	sub	r0, lr, #1
   22fd8:	str	r0, [fp, #-72]	; 0xffffffb8
   22fdc:	ldr	r0, [r4]
   22fe0:	str	r0, [sp, #40]	; 0x28
   22fe4:	str	r0, [sp, #64]	; 0x40
   22fe8:	ldr	r0, [fp, #20]
   22fec:	ldr	r1, [r0]
   22ff0:	ldr	r0, [fp, #24]
   22ff4:	cmp	r0, #2
   22ff8:	str	r1, [sp, #44]	; 0x2c
   22ffc:	str	r1, [sp, #52]	; 0x34
   23000:	blt	230b0 <GetDataSlab+0x6ec>
   23004:	ldr	r2, [sp, #40]	; 0x28
   23008:	ldr	r6, [sp, #44]	; 0x2c
   2300c:	mov	r9, r4
   23010:	mov	r0, #1
   23014:	mov	r3, #0
   23018:	mov	r1, r4
   2301c:	mov	r7, r2
   23020:	str	r6, [sp, #52]	; 0x34
   23024:	ldr	r6, [fp, #16]
   23028:	add	r5, sp, #64	; 0x40
   2302c:	mov	r4, #0
   23030:	ldr	r6, [r6, r0, lsl #2]
   23034:	str	r2, [r5, r0, lsl #2]
   23038:	sub	r5, r6, #1
   2303c:	sub	r6, fp, #72	; 0x48
   23040:	str	r5, [r6, r0, lsl #2]
   23044:	ldr	ip, [r9, r0, lsl #2]
   23048:	mov	r6, ip
   2304c:	mul	r2, r6, r2
   23050:	ldr	r6, [r1, -r4, lsl #2]
   23054:	add	r4, r4, #1
   23058:	cmp	r0, r4
   2305c:	mul	r5, r5, r6
   23060:	bne	2304c <GetDataSlab+0x688>
   23064:	add	r4, sp, #64	; 0x40
   23068:	add	r1, r1, #4
   2306c:	str	r2, [r4, r0, lsl #2]
   23070:	sub	r4, fp, #72	; 0x48
   23074:	str	r5, [r4, r0, lsl #2]
   23078:	ldr	r4, [fp, #12]
   2307c:	ldr	r5, [sp, #52]	; 0x34
   23080:	ldr	r4, [r4, r0, lsl #2]
   23084:	mla	r3, r4, r7, r3
   23088:	ldr	r4, [fp, #20]
   2308c:	mov	r7, r2
   23090:	mov	r2, ip
   23094:	ldr	r4, [r4, r0, lsl #2]
   23098:	add	r0, r0, #1
   2309c:	mul	r5, r4, r5
   230a0:	ldr	r4, [fp, #24]
   230a4:	str	r5, [sp, #52]	; 0x34
   230a8:	cmp	r0, r4
   230ac:	bne	23024 <GetDataSlab+0x660>
   230b0:	ldr	r0, [sp, #48]	; 0x30
   230b4:	cmp	lr, #1
   230b8:	add	r7, r0, r3
   230bc:	bne	31944 <GetDataSlab+0xef80>
   230c0:	ldr	r0, [sp, #52]	; 0x34
   230c4:	ldr	r5, [fp, #12]
   230c8:	ldr	r4, [sp, #44]	; 0x2c
   230cc:	cmp	r0, #1
   230d0:	blt	248fc <GetDataSlab+0x1f38>
   230d4:	add	r0, sp, #104	; 0x68
   230d8:	ldr	r2, [sp, #56]	; 0x38
   230dc:	mov	sl, r5
   230e0:	add	sl, r5, #4
   230e4:	orr	r1, r0, #4
   230e8:	ldr	r0, [fp, #20]
   230ec:	add	r8, r0, #4
   230f0:	add	r0, sp, #64	; 0x40
   230f4:	orr	lr, r0, #4
   230f8:	ldr	r0, [fp, #24]
   230fc:	sub	r0, r0, #1
   23100:	str	r0, [sp, #32]
   23104:	sub	r0, fp, #72	; 0x48
   23108:	orr	r0, r0, #4
   2310c:	str	r0, [sp, #28]
   23110:	lsl	r0, r4, #2
   23114:	str	r0, [sp, #36]	; 0x24
   23118:	mov	r0, #0
   2311c:	str	r0, [sp, #56]	; 0x38
   23120:	cmp	r4, #1
   23124:	blt	23154 <GetDataSlab+0x790>
   23128:	ldr	r0, [fp, #12]
   2312c:	ldr	r6, [sp, #44]	; 0x2c
   23130:	mov	r4, r2
   23134:	ldr	r0, [r0]
   23138:	add	r0, r7, r0
   2313c:	ldrsb	r5, [r0], #1
   23140:	subs	r6, r6, #1
   23144:	vmov	s0, r5
   23148:	vcvt.f32.s32	s0, s0
   2314c:	vstmia	r4!, {s0}
   23150:	bne	2313c <GetDataSlab+0x778>
   23154:	ldr	r0, [sp, #40]	; 0x28
   23158:	str	r2, [sp, #48]	; 0x30
   2315c:	add	r7, r7, r0
   23160:	add	r3, r3, r0
   23164:	ldr	r0, [fp, #24]
   23168:	cmp	r0, #2
   2316c:	blt	23210 <GetDataSlab+0x84c>
   23170:	ldr	ip, [sp, #32]
   23174:	mov	r0, #0
   23178:	ldr	r4, [r1, r0]
   2317c:	add	r4, r4, #1
   23180:	str	r4, [r1, r0]
   23184:	ldr	r5, [r8, r0]
   23188:	sdiv	r6, r4, r5
   2318c:	mls	r4, r6, r5, r4
   23190:	cmp	r4, #0
   23194:	bne	23200 <GetDataSlab+0x83c>
   23198:	mov	r4, #0
   2319c:	str	r4, [r1, r0]
   231a0:	ldr	r4, [lr, r0]
   231a4:	sdiv	r5, r3, r4
   231a8:	mls	r6, r5, r4, r3
   231ac:	cmp	r6, #0
   231b0:	beq	231d4 <GetDataSlab+0x810>
   231b4:	add	r5, sp, #64	; 0x40
   231b8:	ldr	r9, [sl, r0]
   231bc:	sub	r4, r4, r6
   231c0:	ldr	r5, [r5, r0]
   231c4:	mla	r4, r9, r5, r4
   231c8:	add	r3, r4, r3
   231cc:	add	r7, r7, r4
   231d0:	b	231f0 <GetDataSlab+0x82c>
   231d4:	ldr	r4, [sl, r0]
   231d8:	cmp	r4, #0
   231dc:	beq	231f0 <GetDataSlab+0x82c>
   231e0:	add	r5, sp, #64	; 0x40
   231e4:	ldr	r5, [r5, r0]
   231e8:	mla	r3, r5, r4, r3
   231ec:	mla	r7, r5, r4, r7
   231f0:	subs	ip, ip, #1
   231f4:	add	r0, r0, #4
   231f8:	bne	23178 <GetDataSlab+0x7b4>
   231fc:	b	23210 <GetDataSlab+0x84c>
   23200:	ldr	r6, [sp, #28]
   23204:	ldr	r0, [r6, r0]
   23208:	add	r7, r7, r0
   2320c:	add	r3, r0, r3
   23210:	ldr	r4, [sp, #44]	; 0x2c
   23214:	ldr	r5, [sp, #56]	; 0x38
   23218:	ldr	r0, [sp, #36]	; 0x24
   2321c:	ldr	r2, [sp, #48]	; 0x30
   23220:	ldr	r6, [sp, #52]	; 0x34
   23224:	add	r5, r5, r4
   23228:	add	r2, r2, r0
   2322c:	mov	r0, #0
   23230:	cmp	r5, r6
   23234:	str	r5, [sp, #56]	; 0x38
   23238:	blt	23120 <GetDataSlab+0x75c>
   2323c:	b	24900 <GetDataSlab+0x1f3c>
   23240:	ldr	r0, [sp, #52]	; 0x34
   23244:	sub	r1, r0, #1
   23248:	mov	r0, #1
   2324c:	cmp	r1, #11
   23250:	bhi	35648 <GetDataSlab+0x12c84>
   23254:	add	r2, pc, #8
   23258:	ldr	r3, [fp, #16]
   2325c:	ldr	r1, [r2, r1, lsl #2]
   23260:	add	pc, r2, r1
   23264:	.word	0x00000030
   23268:	.word	0x00004590
   2326c:	.word	0x00004818
   23270:	.word	0x00004a9c
   23274:	.word	0x00004d20
   23278:	.word	0x00004fac
   2327c:	.word	0x00005238
   23280:	.word	0x000123e4
   23284:	.word	0x000054d0
   23288:	.word	0x000123e4
   2328c:	.word	0x000123e4
   23290:	.word	0x00005768
   23294:	ldr	r3, [r3]
   23298:	mov	r5, #0
   2329c:	add	r7, sp, #64	; 0x40
   232a0:	sub	r0, r3, #1
   232a4:	str	r0, [fp, #-72]	; 0xffffffb8
   232a8:	ldr	r0, [r4]
   232ac:	str	r0, [sp, #40]	; 0x28
   232b0:	str	r0, [sp, #64]	; 0x40
   232b4:	ldr	r0, [fp, #20]
   232b8:	ldr	lr, [r0]
   232bc:	ldr	r0, [fp, #24]
   232c0:	cmp	r0, #2
   232c4:	mov	r0, lr
   232c8:	str	lr, [sp, #44]	; 0x2c
   232cc:	blt	23380 <GetDataSlab+0x9bc>
   232d0:	ldr	r6, [sp, #40]	; 0x28
   232d4:	mov	r9, r4
   232d8:	mov	r0, #1
   232dc:	mov	r5, #0
   232e0:	mov	r1, r4
   232e4:	mov	r2, lr
   232e8:	str	lr, [sp, #44]	; 0x2c
   232ec:	mov	r8, r6
   232f0:	mov	r2, r5
   232f4:	ldr	r5, [fp, #16]
   232f8:	mov	r4, #0
   232fc:	ldr	r5, [r5, r0, lsl #2]
   23300:	str	r6, [r7, r0, lsl #2]
   23304:	sub	r7, fp, #72	; 0x48
   23308:	sub	r5, r5, #1
   2330c:	str	r5, [r7, r0, lsl #2]
   23310:	ldr	ip, [r9, r0, lsl #2]
   23314:	mov	r7, ip
   23318:	mul	r6, r7, r6
   2331c:	ldr	r7, [r1, -r4, lsl #2]
   23320:	add	r4, r4, #1
   23324:	cmp	r0, r4
   23328:	mul	r5, r5, r7
   2332c:	bne	23318 <GetDataSlab+0x954>
   23330:	sub	r4, fp, #72	; 0x48
   23334:	add	r7, sp, #64	; 0x40
   23338:	add	r1, r1, #4
   2333c:	str	r5, [r4, r0, lsl #2]
   23340:	ldr	r4, [fp, #12]
   23344:	str	r6, [r7, r0, lsl #2]
   23348:	mov	r5, r2
   2334c:	ldr	r4, [r4, r0, lsl #2]
   23350:	mla	r5, r4, r8, r2
   23354:	ldr	r4, [fp, #20]
   23358:	ldr	r2, [sp, #44]	; 0x2c
   2335c:	mov	r8, r6
   23360:	mov	r6, ip
   23364:	ldr	r4, [r4, r0, lsl #2]
   23368:	add	r0, r0, #1
   2336c:	mul	r2, r4, r2
   23370:	ldr	r4, [fp, #24]
   23374:	str	r2, [sp, #44]	; 0x2c
   23378:	cmp	r0, r4
   2337c:	bne	232f0 <GetDataSlab+0x92c>
   23380:	ldr	r0, [sp, #48]	; 0x30
   23384:	cmp	r3, #1
   23388:	add	r6, r0, r5
   2338c:	bne	31aec <GetDataSlab+0xf128>
   23390:	ldr	r0, [sp, #44]	; 0x2c
   23394:	ldr	r9, [fp, #12]
   23398:	cmp	r0, #1
   2339c:	add	r0, sp, #64	; 0x40
   233a0:	blt	248fc <GetDataSlab+0x1f38>
   233a4:	orr	r0, r0, #4
   233a8:	ldr	r3, [fp, #20]
   233ac:	add	r1, sp, #104	; 0x68
   233b0:	mov	r8, #0
   233b4:	str	r0, [sp, #48]	; 0x30
   233b8:	ldr	r0, [fp, #24]
   233bc:	orr	r1, r1, #4
   233c0:	add	r2, r3, #4
   233c4:	sub	r0, r0, #1
   233c8:	str	r2, [sp, #52]	; 0x34
   233cc:	str	r0, [sp, #32]
   233d0:	sub	r0, fp, #72	; 0x48
   233d4:	orr	r0, r0, #4
   233d8:	str	r0, [sp, #28]
   233dc:	ldr	r0, [r9], #4
   233e0:	str	r0, [sp, #36]	; 0x24
   233e4:	ldr	r2, [sp, #36]	; 0x24
   233e8:	ldr	r3, [fp, #12]
   233ec:	cmp	lr, #1
   233f0:	add	r0, r2, r5
   233f4:	add	r5, r6, r2
   233f8:	ldr	r6, [fp, #20]
   233fc:	blt	23434 <GetDataSlab+0xa70>
   23400:	ldr	r2, [sp, #56]	; 0x38
   23404:	mov	r4, #0
   23408:	add	r7, r2, r8
   2340c:	ldrb	r2, [r5, r4]
   23410:	strb	r2, [r7, r4]
   23414:	add	r4, r4, #1
   23418:	ldr	lr, [r6]
   2341c:	cmp	r4, lr
   23420:	blt	2340c <GetDataSlab+0xa48>
   23424:	ldr	r2, [r3]
   23428:	ldr	r3, [fp, #8]
   2342c:	ldr	r3, [r3]
   23430:	str	r3, [sp, #40]	; 0x28
   23434:	ldr	r3, [sp, #40]	; 0x28
   23438:	str	r2, [sp, #36]	; 0x24
   2343c:	sub	r7, r3, r2
   23440:	add	r6, r5, r7
   23444:	add	r5, r0, r7
   23448:	ldr	r0, [fp, #24]
   2344c:	cmp	r0, #2
   23450:	blt	23504 <GetDataSlab+0xb40>
   23454:	ldr	sl, [sp, #32]
   23458:	mov	r0, #0
   2345c:	ldr	r4, [r1, r0]
   23460:	ldr	r2, [sp, #52]	; 0x34
   23464:	add	r4, r4, #1
   23468:	str	r4, [r1, r0]
   2346c:	ldr	r7, [r2, r0]
   23470:	sdiv	ip, r4, r7
   23474:	mls	r7, ip, r7, r4
   23478:	cmp	r7, #0
   2347c:	bne	234f4 <GetDataSlab+0xb30>
   23480:	mov	r2, #0
   23484:	str	r2, [r1, r0]
   23488:	ldr	r2, [sp, #48]	; 0x30
   2348c:	ldr	r4, [r2, r0]
   23490:	sdiv	r7, r5, r4
   23494:	mls	r7, r7, r4, r5
   23498:	cmp	r7, #0
   2349c:	beq	234c8 <GetDataSlab+0xb04>
   234a0:	add	r3, sp, #64	; 0x40
   234a4:	mov	r2, r6
   234a8:	ldr	r6, [r9, r0]
   234ac:	sub	r7, r4, r7
   234b0:	ldr	r3, [r3, r0]
   234b4:	mla	r3, r6, r3, r7
   234b8:	mov	r6, r2
   234bc:	add	r5, r3, r5
   234c0:	add	r6, r2, r3
   234c4:	b	234e4 <GetDataSlab+0xb20>
   234c8:	ldr	r4, [r9, r0]
   234cc:	cmp	r4, #0
   234d0:	beq	234e4 <GetDataSlab+0xb20>
   234d4:	add	r3, sp, #64	; 0x40
   234d8:	ldr	r3, [r3, r0]
   234dc:	mla	r5, r3, r4, r5
   234e0:	mla	r6, r3, r4, r6
   234e4:	subs	sl, sl, #1
   234e8:	add	r0, r0, #4
   234ec:	bne	2345c <GetDataSlab+0xa98>
   234f0:	b	23504 <GetDataSlab+0xb40>
   234f4:	ldr	r2, [sp, #28]
   234f8:	ldr	r0, [r2, r0]
   234fc:	add	r6, r6, r0
   23500:	add	r5, r0, r5
   23504:	ldr	r0, [sp, #44]	; 0x2c
   23508:	add	r8, lr, r8
   2350c:	cmp	r8, r0
   23510:	mov	r0, #0
   23514:	blt	233e4 <GetDataSlab+0xa20>
   23518:	b	24900 <GetDataSlab+0x1f3c>
   2351c:	ldr	r0, [sp, #52]	; 0x34
   23520:	sub	r1, r0, #1
   23524:	mov	r0, #1
   23528:	cmp	r1, #11
   2352c:	bhi	366ec <GetDataSlab+0x13d28>
   23530:	add	r2, pc, #8
   23534:	ldr	r3, [fp, #16]
   23538:	ldr	r1, [r2, r1, lsl #2]
   2353c:	add	pc, r2, r1
   23540:	.word	0x00000030
   23544:	.word	0x00005700
   23548:	.word	0x00005988
   2354c:	.word	0x00005c0c
   23550:	.word	0x00005e90
   23554:	.word	0x0000611c
   23558:	.word	0x000063a8
   2355c:	.word	0x000131ac
   23560:	.word	0x00006640
   23564:	.word	0x000131ac
   23568:	.word	0x000131ac
   2356c:	.word	0x000068d8
   23570:	ldr	r3, [r3]
   23574:	mov	r5, #0
   23578:	add	r7, sp, #64	; 0x40
   2357c:	sub	r0, r3, #1
   23580:	str	r0, [fp, #-72]	; 0xffffffb8
   23584:	ldr	r0, [r4]
   23588:	str	r0, [sp, #40]	; 0x28
   2358c:	str	r0, [sp, #64]	; 0x40
   23590:	ldr	r0, [fp, #20]
   23594:	ldr	lr, [r0]
   23598:	ldr	r0, [fp, #24]
   2359c:	cmp	r0, #2
   235a0:	mov	r0, lr
   235a4:	str	lr, [sp, #44]	; 0x2c
   235a8:	blt	2365c <GetDataSlab+0xc98>
   235ac:	ldr	r6, [sp, #40]	; 0x28
   235b0:	mov	r9, r4
   235b4:	mov	r0, #1
   235b8:	mov	r5, #0
   235bc:	mov	r1, r4
   235c0:	mov	r2, lr
   235c4:	str	lr, [sp, #44]	; 0x2c
   235c8:	mov	r8, r6
   235cc:	mov	r2, r5
   235d0:	ldr	r5, [fp, #16]
   235d4:	mov	r4, #0
   235d8:	ldr	r5, [r5, r0, lsl #2]
   235dc:	str	r6, [r7, r0, lsl #2]
   235e0:	sub	r7, fp, #72	; 0x48
   235e4:	sub	r5, r5, #1
   235e8:	str	r5, [r7, r0, lsl #2]
   235ec:	ldr	ip, [r9, r0, lsl #2]
   235f0:	mov	r7, ip
   235f4:	mul	r6, r7, r6
   235f8:	ldr	r7, [r1, -r4, lsl #2]
   235fc:	add	r4, r4, #1
   23600:	cmp	r0, r4
   23604:	mul	r5, r5, r7
   23608:	bne	235f4 <GetDataSlab+0xc30>
   2360c:	sub	r4, fp, #72	; 0x48
   23610:	add	r7, sp, #64	; 0x40
   23614:	add	r1, r1, #4
   23618:	str	r5, [r4, r0, lsl #2]
   2361c:	ldr	r4, [fp, #12]
   23620:	str	r6, [r7, r0, lsl #2]
   23624:	mov	r5, r2
   23628:	ldr	r4, [r4, r0, lsl #2]
   2362c:	mla	r5, r4, r8, r2
   23630:	ldr	r4, [fp, #20]
   23634:	ldr	r2, [sp, #44]	; 0x2c
   23638:	mov	r8, r6
   2363c:	mov	r6, ip
   23640:	ldr	r4, [r4, r0, lsl #2]
   23644:	add	r0, r0, #1
   23648:	mul	r2, r4, r2
   2364c:	ldr	r4, [fp, #24]
   23650:	str	r2, [sp, #44]	; 0x2c
   23654:	cmp	r0, r4
   23658:	bne	235cc <GetDataSlab+0xc08>
   2365c:	ldr	r0, [sp, #48]	; 0x30
   23660:	cmp	r3, #1
   23664:	add	r6, r0, r5
   23668:	bne	31cac <GetDataSlab+0xf2e8>
   2366c:	ldr	r0, [sp, #44]	; 0x2c
   23670:	ldr	r9, [fp, #12]
   23674:	cmp	r0, #1
   23678:	add	r0, sp, #64	; 0x40
   2367c:	blt	248fc <GetDataSlab+0x1f38>
   23680:	orr	r0, r0, #4
   23684:	ldr	r3, [fp, #20]
   23688:	add	r1, sp, #104	; 0x68
   2368c:	mov	r8, #0
   23690:	str	r0, [sp, #48]	; 0x30
   23694:	ldr	r0, [fp, #24]
   23698:	orr	r1, r1, #4
   2369c:	add	r2, r3, #4
   236a0:	sub	r0, r0, #1
   236a4:	str	r2, [sp, #52]	; 0x34
   236a8:	str	r0, [sp, #32]
   236ac:	sub	r0, fp, #72	; 0x48
   236b0:	orr	r0, r0, #4
   236b4:	str	r0, [sp, #28]
   236b8:	ldr	r0, [r9], #4
   236bc:	str	r0, [sp, #36]	; 0x24
   236c0:	ldr	r2, [sp, #36]	; 0x24
   236c4:	ldr	r3, [fp, #12]
   236c8:	cmp	lr, #1
   236cc:	add	r0, r2, r5
   236d0:	add	r5, r6, r2
   236d4:	ldr	r6, [fp, #20]
   236d8:	blt	23710 <GetDataSlab+0xd4c>
   236dc:	ldr	r2, [sp, #56]	; 0x38
   236e0:	mov	r4, #0
   236e4:	add	r7, r2, r8
   236e8:	ldrb	r2, [r5, r4]
   236ec:	strb	r2, [r7, r4]
   236f0:	add	r4, r4, #1
   236f4:	ldr	lr, [r6]
   236f8:	cmp	r4, lr
   236fc:	blt	236e8 <GetDataSlab+0xd24>
   23700:	ldr	r2, [r3]
   23704:	ldr	r3, [fp, #8]
   23708:	ldr	r3, [r3]
   2370c:	str	r3, [sp, #40]	; 0x28
   23710:	ldr	r3, [sp, #40]	; 0x28
   23714:	str	r2, [sp, #36]	; 0x24
   23718:	sub	r7, r3, r2
   2371c:	add	r6, r5, r7
   23720:	add	r5, r0, r7
   23724:	ldr	r0, [fp, #24]
   23728:	cmp	r0, #2
   2372c:	blt	237e0 <GetDataSlab+0xe1c>
   23730:	ldr	sl, [sp, #32]
   23734:	mov	r0, #0
   23738:	ldr	r4, [r1, r0]
   2373c:	ldr	r2, [sp, #52]	; 0x34
   23740:	add	r4, r4, #1
   23744:	str	r4, [r1, r0]
   23748:	ldr	r7, [r2, r0]
   2374c:	sdiv	ip, r4, r7
   23750:	mls	r7, ip, r7, r4
   23754:	cmp	r7, #0
   23758:	bne	237d0 <GetDataSlab+0xe0c>
   2375c:	mov	r2, #0
   23760:	str	r2, [r1, r0]
   23764:	ldr	r2, [sp, #48]	; 0x30
   23768:	ldr	r4, [r2, r0]
   2376c:	sdiv	r7, r5, r4
   23770:	mls	r7, r7, r4, r5
   23774:	cmp	r7, #0
   23778:	beq	237a4 <GetDataSlab+0xde0>
   2377c:	add	r3, sp, #64	; 0x40
   23780:	mov	r2, r6
   23784:	ldr	r6, [r9, r0]
   23788:	sub	r7, r4, r7
   2378c:	ldr	r3, [r3, r0]
   23790:	mla	r3, r6, r3, r7
   23794:	mov	r6, r2
   23798:	add	r5, r3, r5
   2379c:	add	r6, r2, r3
   237a0:	b	237c0 <GetDataSlab+0xdfc>
   237a4:	ldr	r4, [r9, r0]
   237a8:	cmp	r4, #0
   237ac:	beq	237c0 <GetDataSlab+0xdfc>
   237b0:	add	r3, sp, #64	; 0x40
   237b4:	ldr	r3, [r3, r0]
   237b8:	mla	r5, r3, r4, r5
   237bc:	mla	r6, r3, r4, r6
   237c0:	subs	sl, sl, #1
   237c4:	add	r0, r0, #4
   237c8:	bne	23738 <GetDataSlab+0xd74>
   237cc:	b	237e0 <GetDataSlab+0xe1c>
   237d0:	ldr	r2, [sp, #28]
   237d4:	ldr	r0, [r2, r0]
   237d8:	add	r6, r6, r0
   237dc:	add	r5, r0, r5
   237e0:	ldr	r0, [sp, #44]	; 0x2c
   237e4:	add	r8, lr, r8
   237e8:	cmp	r8, r0
   237ec:	mov	r0, #0
   237f0:	blt	236c0 <GetDataSlab+0xcfc>
   237f4:	b	24900 <GetDataSlab+0x1f3c>
   237f8:	ldr	r0, [sp, #52]	; 0x34
   237fc:	ldr	ip, [fp, #12]
   23800:	sub	r1, r0, #1
   23804:	mov	r0, #1
   23808:	cmp	r1, #11
   2380c:	bhi	37690 <GetDataSlab+0x14ccc>
   23810:	add	r2, pc, #4
   23814:	ldr	r1, [r2, r1, lsl #2]
   23818:	add	pc, r2, r1
   2381c:	.word	0x00000030
   23820:	.word	0x00006870
   23824:	.word	0x00006ad8
   23828:	.word	0x00006d40
   2382c:	.word	0x00006fa8
   23830:	.word	0x00007210
   23834:	.word	0x00007478
   23838:	.word	0x00013e74
   2383c:	.word	0x000076ec
   23840:	.word	0x00013e74
   23844:	.word	0x00013e74
   23848:	.word	0x00007960
   2384c:	ldr	r0, [fp, #16]
   23850:	mov	r3, #0
   23854:	ldr	lr, [r0]
   23858:	sub	r0, lr, #1
   2385c:	str	r0, [fp, #-72]	; 0xffffffb8
   23860:	ldr	r0, [r4]
   23864:	str	r0, [sp, #40]	; 0x28
   23868:	str	r0, [sp, #64]	; 0x40
   2386c:	ldr	r0, [fp, #20]
   23870:	ldr	r1, [r0]
   23874:	ldr	r0, [fp, #24]
   23878:	cmp	r0, #2
   2387c:	str	r1, [sp, #44]	; 0x2c
   23880:	str	r1, [sp, #52]	; 0x34
   23884:	blt	23934 <GetDataSlab+0xf70>
   23888:	ldr	r2, [sp, #40]	; 0x28
   2388c:	ldr	r6, [sp, #44]	; 0x2c
   23890:	mov	r9, r4
   23894:	mov	r0, #1
   23898:	mov	r3, #0
   2389c:	mov	r1, r4
   238a0:	mov	r7, r2
   238a4:	str	r6, [sp, #52]	; 0x34
   238a8:	ldr	r6, [fp, #16]
   238ac:	add	r5, sp, #64	; 0x40
   238b0:	mov	r4, #0
   238b4:	ldr	r6, [r6, r0, lsl #2]
   238b8:	str	r2, [r5, r0, lsl #2]
   238bc:	sub	r5, r6, #1
   238c0:	sub	r6, fp, #72	; 0x48
   238c4:	str	r5, [r6, r0, lsl #2]
   238c8:	ldr	ip, [r9, r0, lsl #2]
   238cc:	mov	r6, ip
   238d0:	mul	r2, r6, r2
   238d4:	ldr	r6, [r1, -r4, lsl #2]
   238d8:	add	r4, r4, #1
   238dc:	cmp	r0, r4
   238e0:	mul	r5, r5, r6
   238e4:	bne	238d0 <GetDataSlab+0xf0c>
   238e8:	add	r4, sp, #64	; 0x40
   238ec:	add	r1, r1, #4
   238f0:	str	r2, [r4, r0, lsl #2]
   238f4:	sub	r4, fp, #72	; 0x48
   238f8:	str	r5, [r4, r0, lsl #2]
   238fc:	ldr	r4, [fp, #12]
   23900:	ldr	r5, [sp, #52]	; 0x34
   23904:	ldr	r4, [r4, r0, lsl #2]
   23908:	mla	r3, r4, r7, r3
   2390c:	ldr	r4, [fp, #20]
   23910:	mov	r7, r2
   23914:	mov	r2, ip
   23918:	ldr	r4, [r4, r0, lsl #2]
   2391c:	add	r0, r0, #1
   23920:	mul	r5, r4, r5
   23924:	ldr	r4, [fp, #24]
   23928:	str	r5, [sp, #52]	; 0x34
   2392c:	cmp	r0, r4
   23930:	bne	238a8 <GetDataSlab+0xee4>
   23934:	ldr	r0, [sp, #48]	; 0x30
   23938:	cmp	lr, #1
   2393c:	add	r7, r0, r3
   23940:	bne	31e6c <GetDataSlab+0xf4a8>
   23944:	ldr	r0, [sp, #52]	; 0x34
   23948:	ldr	r6, [fp, #12]
   2394c:	cmp	r0, #1
   23950:	blt	248fc <GetDataSlab+0x1f38>
   23954:	add	r0, sp, #104	; 0x68
   23958:	add	r9, r6, #4
   2395c:	ldr	r6, [sp, #44]	; 0x2c
   23960:	ldr	r2, [sp, #56]	; 0x38
   23964:	orr	r1, r0, #4
   23968:	ldr	r0, [fp, #20]
   2396c:	add	sl, r0, #4
   23970:	add	r0, sp, #64	; 0x40
   23974:	orr	lr, r0, #4
   23978:	ldr	r0, [fp, #24]
   2397c:	sub	r0, r0, #1
   23980:	str	r0, [sp, #32]
   23984:	sub	r0, fp, #72	; 0x48
   23988:	orr	r0, r0, #4
   2398c:	str	r0, [sp, #28]
   23990:	lsl	r0, r6, #1
   23994:	str	r0, [sp, #36]	; 0x24
   23998:	mov	r0, #0
   2399c:	str	r0, [sp, #56]	; 0x38
   239a0:	cmp	r6, #1
   239a4:	blt	239c8 <GetDataSlab+0x1004>
   239a8:	ldr	r0, [fp, #12]
   239ac:	mov	r4, r2
   239b0:	ldr	r0, [r0]
   239b4:	add	r0, r7, r0
   239b8:	ldrsb	r5, [r0], #1
   239bc:	subs	r6, r6, #1
   239c0:	strh	r5, [r4], #2
   239c4:	bne	239b8 <GetDataSlab+0xff4>
   239c8:	ldr	r0, [sp, #40]	; 0x28
   239cc:	str	r2, [sp, #48]	; 0x30
   239d0:	add	r2, sp, #64	; 0x40
   239d4:	add	r7, r7, r0
   239d8:	add	r3, r3, r0
   239dc:	ldr	r0, [fp, #24]
   239e0:	cmp	r0, #2
   239e4:	blt	23a84 <GetDataSlab+0x10c0>
   239e8:	ldr	ip, [sp, #32]
   239ec:	mov	r0, #0
   239f0:	ldr	r4, [r1, r0]
   239f4:	add	r4, r4, #1
   239f8:	str	r4, [r1, r0]
   239fc:	ldr	r5, [sl, r0]
   23a00:	sdiv	r6, r4, r5
   23a04:	mls	r4, r6, r5, r4
   23a08:	cmp	r4, #0
   23a0c:	bne	23a74 <GetDataSlab+0x10b0>
   23a10:	mov	r4, #0
   23a14:	str	r4, [r1, r0]
   23a18:	ldr	r4, [lr, r0]
   23a1c:	sdiv	r5, r3, r4
   23a20:	mls	r6, r5, r4, r3
   23a24:	cmp	r6, #0
   23a28:	beq	23a4c <GetDataSlab+0x1088>
   23a2c:	ldr	r5, [r2, r0]
   23a30:	ldr	r8, [r9, r0]
   23a34:	sub	r4, r4, r6
   23a38:	add	r2, sp, #64	; 0x40
   23a3c:	mla	r4, r8, r5, r4
   23a40:	add	r3, r4, r3
   23a44:	add	r7, r7, r4
   23a48:	b	23a64 <GetDataSlab+0x10a0>
   23a4c:	ldr	r4, [r9, r0]
   23a50:	cmp	r4, #0
   23a54:	beq	23a64 <GetDataSlab+0x10a0>
   23a58:	ldr	r5, [r2, r0]
   23a5c:	mla	r3, r5, r4, r3
   23a60:	mla	r7, r5, r4, r7
   23a64:	subs	ip, ip, #1
   23a68:	add	r0, r0, #4
   23a6c:	bne	239f0 <GetDataSlab+0x102c>
   23a70:	b	23a84 <GetDataSlab+0x10c0>
   23a74:	ldr	r2, [sp, #28]
   23a78:	ldr	r0, [r2, r0]
   23a7c:	add	r7, r7, r0
   23a80:	add	r3, r0, r3
   23a84:	ldr	r0, [sp, #36]	; 0x24
   23a88:	ldr	r2, [sp, #48]	; 0x30
   23a8c:	ldr	r6, [sp, #44]	; 0x2c
   23a90:	ldr	r5, [sp, #56]	; 0x38
   23a94:	add	r2, r2, r0
   23a98:	ldr	r0, [sp, #52]	; 0x34
   23a9c:	add	r5, r5, r6
   23aa0:	str	r5, [sp, #56]	; 0x38
   23aa4:	cmp	r5, r0
   23aa8:	mov	r0, #0
   23aac:	blt	239a0 <GetDataSlab+0xfdc>
   23ab0:	b	24900 <GetDataSlab+0x1f3c>
   23ab4:	ldr	r0, [sp, #52]	; 0x34
   23ab8:	ldr	ip, [fp, #12]
   23abc:	sub	r1, r0, #1
   23ac0:	mov	r0, #1
   23ac4:	cmp	r1, #11
   23ac8:	bhi	3860c <GetDataSlab+0x15c48>
   23acc:	add	r2, pc, #4
   23ad0:	ldr	r1, [r2, r1, lsl #2]
   23ad4:	add	pc, r2, r1
   23ad8:	.word	0x00000030
   23adc:	.word	0x00007908
   23ae0:	.word	0x00007b70
   23ae4:	.word	0x00007dd8
   23ae8:	.word	0x00008040
   23aec:	.word	0x000082a8
   23af0:	.word	0x00008510
   23af4:	.word	0x00014b34
   23af8:	.word	0x00008784
   23afc:	.word	0x00014b34
   23b00:	.word	0x00014b34
   23b04:	.word	0x000089f8
   23b08:	ldr	r0, [fp, #16]
   23b0c:	mov	r3, #0
   23b10:	ldr	lr, [r0]
   23b14:	sub	r0, lr, #1
   23b18:	str	r0, [fp, #-72]	; 0xffffffb8
   23b1c:	ldr	r0, [r4]
   23b20:	str	r0, [sp, #40]	; 0x28
   23b24:	str	r0, [sp, #64]	; 0x40
   23b28:	ldr	r0, [fp, #20]
   23b2c:	ldr	r1, [r0]
   23b30:	ldr	r0, [fp, #24]
   23b34:	cmp	r0, #2
   23b38:	str	r1, [sp, #44]	; 0x2c
   23b3c:	str	r1, [sp, #52]	; 0x34
   23b40:	blt	23bf0 <GetDataSlab+0x122c>
   23b44:	ldr	r2, [sp, #40]	; 0x28
   23b48:	ldr	r6, [sp, #44]	; 0x2c
   23b4c:	mov	r9, r4
   23b50:	mov	r0, #1
   23b54:	mov	r3, #0
   23b58:	mov	r1, r4
   23b5c:	mov	r7, r2
   23b60:	str	r6, [sp, #52]	; 0x34
   23b64:	ldr	r6, [fp, #16]
   23b68:	add	r5, sp, #64	; 0x40
   23b6c:	mov	r4, #0
   23b70:	ldr	r6, [r6, r0, lsl #2]
   23b74:	str	r2, [r5, r0, lsl #2]
   23b78:	sub	r5, r6, #1
   23b7c:	sub	r6, fp, #72	; 0x48
   23b80:	str	r5, [r6, r0, lsl #2]
   23b84:	ldr	ip, [r9, r0, lsl #2]
   23b88:	mov	r6, ip
   23b8c:	mul	r2, r6, r2
   23b90:	ldr	r6, [r1, -r4, lsl #2]
   23b94:	add	r4, r4, #1
   23b98:	cmp	r0, r4
   23b9c:	mul	r5, r5, r6
   23ba0:	bne	23b8c <GetDataSlab+0x11c8>
   23ba4:	add	r4, sp, #64	; 0x40
   23ba8:	add	r1, r1, #4
   23bac:	str	r2, [r4, r0, lsl #2]
   23bb0:	sub	r4, fp, #72	; 0x48
   23bb4:	str	r5, [r4, r0, lsl #2]
   23bb8:	ldr	r4, [fp, #12]
   23bbc:	ldr	r5, [sp, #52]	; 0x34
   23bc0:	ldr	r4, [r4, r0, lsl #2]
   23bc4:	mla	r3, r4, r7, r3
   23bc8:	ldr	r4, [fp, #20]
   23bcc:	mov	r7, r2
   23bd0:	mov	r2, ip
   23bd4:	ldr	r4, [r4, r0, lsl #2]
   23bd8:	add	r0, r0, #1
   23bdc:	mul	r5, r4, r5
   23be0:	ldr	r4, [fp, #24]
   23be4:	str	r5, [sp, #52]	; 0x34
   23be8:	cmp	r0, r4
   23bec:	bne	23b64 <GetDataSlab+0x11a0>
   23bf0:	ldr	r0, [sp, #48]	; 0x30
   23bf4:	cmp	lr, #1
   23bf8:	add	r7, r0, r3
   23bfc:	bne	32010 <GetDataSlab+0xf64c>
   23c00:	ldr	r0, [sp, #52]	; 0x34
   23c04:	ldr	r6, [fp, #12]
   23c08:	cmp	r0, #1
   23c0c:	blt	248fc <GetDataSlab+0x1f38>
   23c10:	add	r0, sp, #104	; 0x68
   23c14:	add	r9, r6, #4
   23c18:	ldr	r6, [sp, #44]	; 0x2c
   23c1c:	ldr	r2, [sp, #56]	; 0x38
   23c20:	orr	r1, r0, #4
   23c24:	ldr	r0, [fp, #20]
   23c28:	add	sl, r0, #4
   23c2c:	add	r0, sp, #64	; 0x40
   23c30:	orr	lr, r0, #4
   23c34:	ldr	r0, [fp, #24]
   23c38:	sub	r0, r0, #1
   23c3c:	str	r0, [sp, #32]
   23c40:	sub	r0, fp, #72	; 0x48
   23c44:	orr	r0, r0, #4
   23c48:	str	r0, [sp, #28]
   23c4c:	lsl	r0, r6, #1
   23c50:	str	r0, [sp, #36]	; 0x24
   23c54:	mov	r0, #0
   23c58:	str	r0, [sp, #56]	; 0x38
   23c5c:	cmp	r6, #1
   23c60:	blt	23c84 <GetDataSlab+0x12c0>
   23c64:	ldr	r0, [fp, #12]
   23c68:	mov	r4, r2
   23c6c:	ldr	r0, [r0]
   23c70:	add	r0, r7, r0
   23c74:	ldrsb	r5, [r0], #1
   23c78:	subs	r6, r6, #1
   23c7c:	strh	r5, [r4], #2
   23c80:	bne	23c74 <GetDataSlab+0x12b0>
   23c84:	ldr	r0, [sp, #40]	; 0x28
   23c88:	str	r2, [sp, #48]	; 0x30
   23c8c:	add	r2, sp, #64	; 0x40
   23c90:	add	r7, r7, r0
   23c94:	add	r3, r3, r0
   23c98:	ldr	r0, [fp, #24]
   23c9c:	cmp	r0, #2
   23ca0:	blt	23d40 <GetDataSlab+0x137c>
   23ca4:	ldr	ip, [sp, #32]
   23ca8:	mov	r0, #0
   23cac:	ldr	r4, [r1, r0]
   23cb0:	add	r4, r4, #1
   23cb4:	str	r4, [r1, r0]
   23cb8:	ldr	r5, [sl, r0]
   23cbc:	sdiv	r6, r4, r5
   23cc0:	mls	r4, r6, r5, r4
   23cc4:	cmp	r4, #0
   23cc8:	bne	23d30 <GetDataSlab+0x136c>
   23ccc:	mov	r4, #0
   23cd0:	str	r4, [r1, r0]
   23cd4:	ldr	r4, [lr, r0]
   23cd8:	sdiv	r5, r3, r4
   23cdc:	mls	r6, r5, r4, r3
   23ce0:	cmp	r6, #0
   23ce4:	beq	23d08 <GetDataSlab+0x1344>
   23ce8:	ldr	r5, [r2, r0]
   23cec:	ldr	r8, [r9, r0]
   23cf0:	sub	r4, r4, r6
   23cf4:	add	r2, sp, #64	; 0x40
   23cf8:	mla	r4, r8, r5, r4
   23cfc:	add	r3, r4, r3
   23d00:	add	r7, r7, r4
   23d04:	b	23d20 <GetDataSlab+0x135c>
   23d08:	ldr	r4, [r9, r0]
   23d0c:	cmp	r4, #0
   23d10:	beq	23d20 <GetDataSlab+0x135c>
   23d14:	ldr	r5, [r2, r0]
   23d18:	mla	r3, r5, r4, r3
   23d1c:	mla	r7, r5, r4, r7
   23d20:	subs	ip, ip, #1
   23d24:	add	r0, r0, #4
   23d28:	bne	23cac <GetDataSlab+0x12e8>
   23d2c:	b	23d40 <GetDataSlab+0x137c>
   23d30:	ldr	r2, [sp, #28]
   23d34:	ldr	r0, [r2, r0]
   23d38:	add	r7, r7, r0
   23d3c:	add	r3, r0, r3
   23d40:	ldr	r0, [sp, #36]	; 0x24
   23d44:	ldr	r2, [sp, #48]	; 0x30
   23d48:	ldr	r6, [sp, #44]	; 0x2c
   23d4c:	ldr	r5, [sp, #56]	; 0x38
   23d50:	add	r2, r2, r0
   23d54:	ldr	r0, [sp, #52]	; 0x34
   23d58:	add	r5, r5, r6
   23d5c:	str	r5, [sp, #56]	; 0x38
   23d60:	cmp	r5, r0
   23d64:	mov	r0, #0
   23d68:	blt	23c5c <GetDataSlab+0x1298>
   23d6c:	b	24900 <GetDataSlab+0x1f3c>
   23d70:	ldr	r0, [sp, #52]	; 0x34
   23d74:	sub	r1, r0, #1
   23d78:	mov	r0, #1
   23d7c:	cmp	r1, #11
   23d80:	bhi	39698 <GetDataSlab+0x16cd4>
   23d84:	add	r2, pc, #8
   23d88:	ldr	r3, [fp, #16]
   23d8c:	ldr	r1, [r2, r1, lsl #2]
   23d90:	add	pc, r2, r1
   23d94:	.word	0x00000030
   23d98:	.word	0x000089a0
   23d9c:	.word	0x00008c28
   23da0:	.word	0x00008eac
   23da4:	.word	0x00009130
   23da8:	.word	0x000093bc
   23dac:	.word	0x00009648
   23db0:	.word	0x00015904
   23db4:	.word	0x000098e0
   23db8:	.word	0x00015904
   23dbc:	.word	0x00015904
   23dc0:	.word	0x00009b78
   23dc4:	ldr	r3, [r3]
   23dc8:	mov	r5, #0
   23dcc:	add	r7, sp, #64	; 0x40
   23dd0:	sub	r0, r3, #1
   23dd4:	str	r0, [fp, #-72]	; 0xffffffb8
   23dd8:	ldr	r0, [r4]
   23ddc:	str	r0, [sp, #40]	; 0x28
   23de0:	str	r0, [sp, #64]	; 0x40
   23de4:	ldr	r0, [fp, #20]
   23de8:	ldr	lr, [r0]
   23dec:	ldr	r0, [fp, #24]
   23df0:	cmp	r0, #2
   23df4:	mov	r0, lr
   23df8:	str	lr, [sp, #44]	; 0x2c
   23dfc:	blt	23eb0 <GetDataSlab+0x14ec>
   23e00:	ldr	r6, [sp, #40]	; 0x28
   23e04:	mov	r9, r4
   23e08:	mov	r0, #1
   23e0c:	mov	r5, #0
   23e10:	mov	r1, r4
   23e14:	mov	r2, lr
   23e18:	str	lr, [sp, #44]	; 0x2c
   23e1c:	mov	r8, r6
   23e20:	mov	r2, r5
   23e24:	ldr	r5, [fp, #16]
   23e28:	mov	r4, #0
   23e2c:	ldr	r5, [r5, r0, lsl #2]
   23e30:	str	r6, [r7, r0, lsl #2]
   23e34:	sub	r7, fp, #72	; 0x48
   23e38:	sub	r5, r5, #1
   23e3c:	str	r5, [r7, r0, lsl #2]
   23e40:	ldr	ip, [r9, r0, lsl #2]
   23e44:	mov	r7, ip
   23e48:	mul	r6, r7, r6
   23e4c:	ldr	r7, [r1, -r4, lsl #2]
   23e50:	add	r4, r4, #1
   23e54:	cmp	r0, r4
   23e58:	mul	r5, r5, r7
   23e5c:	bne	23e48 <GetDataSlab+0x1484>
   23e60:	sub	r4, fp, #72	; 0x48
   23e64:	add	r7, sp, #64	; 0x40
   23e68:	add	r1, r1, #4
   23e6c:	str	r5, [r4, r0, lsl #2]
   23e70:	ldr	r4, [fp, #12]
   23e74:	str	r6, [r7, r0, lsl #2]
   23e78:	mov	r5, r2
   23e7c:	ldr	r4, [r4, r0, lsl #2]
   23e80:	mla	r5, r4, r8, r2
   23e84:	ldr	r4, [fp, #20]
   23e88:	ldr	r2, [sp, #44]	; 0x2c
   23e8c:	mov	r8, r6
   23e90:	mov	r6, ip
   23e94:	ldr	r4, [r4, r0, lsl #2]
   23e98:	add	r0, r0, #1
   23e9c:	mul	r2, r4, r2
   23ea0:	ldr	r4, [fp, #24]
   23ea4:	str	r2, [sp, #44]	; 0x2c
   23ea8:	cmp	r0, r4
   23eac:	bne	23e20 <GetDataSlab+0x145c>
   23eb0:	ldr	r0, [sp, #48]	; 0x30
   23eb4:	cmp	r3, #1
   23eb8:	add	r6, r0, r5
   23ebc:	bne	321b4 <GetDataSlab+0xf7f0>
   23ec0:	ldr	r0, [sp, #44]	; 0x2c
   23ec4:	ldr	r9, [fp, #12]
   23ec8:	cmp	r0, #1
   23ecc:	add	r0, sp, #64	; 0x40
   23ed0:	blt	248fc <GetDataSlab+0x1f38>
   23ed4:	orr	r0, r0, #4
   23ed8:	ldr	r3, [fp, #20]
   23edc:	add	r1, sp, #104	; 0x68
   23ee0:	mov	r8, #0
   23ee4:	str	r0, [sp, #48]	; 0x30
   23ee8:	ldr	r0, [fp, #24]
   23eec:	orr	r1, r1, #4
   23ef0:	add	r2, r3, #4
   23ef4:	sub	r0, r0, #1
   23ef8:	str	r2, [sp, #52]	; 0x34
   23efc:	str	r0, [sp, #32]
   23f00:	sub	r0, fp, #72	; 0x48
   23f04:	orr	r0, r0, #4
   23f08:	str	r0, [sp, #28]
   23f0c:	ldr	r0, [r9], #4
   23f10:	str	r0, [sp, #36]	; 0x24
   23f14:	ldr	r2, [sp, #36]	; 0x24
   23f18:	ldr	r3, [fp, #12]
   23f1c:	ldr	r7, [sp, #40]	; 0x28
   23f20:	cmp	lr, #1
   23f24:	add	r0, r2, r5
   23f28:	add	r5, r6, r2
   23f2c:	ldr	r6, [fp, #20]
   23f30:	blt	23f68 <GetDataSlab+0x15a4>
   23f34:	ldr	r2, [sp, #56]	; 0x38
   23f38:	mov	r4, #0
   23f3c:	add	r7, r2, r8, lsl #2
   23f40:	add	r2, r5, r4
   23f44:	ldrsb	r2, [r2]
   23f48:	str	r2, [r7, r4, lsl #2]
   23f4c:	add	r4, r4, #1
   23f50:	ldr	lr, [r6]
   23f54:	cmp	r4, lr
   23f58:	blt	23f40 <GetDataSlab+0x157c>
   23f5c:	ldr	r2, [r3]
   23f60:	ldr	r3, [fp, #8]
   23f64:	ldr	r7, [r3]
   23f68:	str	r7, [sp, #40]	; 0x28
   23f6c:	sub	r7, r7, r2
   23f70:	str	r2, [sp, #36]	; 0x24
   23f74:	add	r6, r5, r7
   23f78:	add	r5, r0, r7
   23f7c:	ldr	r0, [fp, #24]
   23f80:	cmp	r0, #2
   23f84:	blt	24038 <GetDataSlab+0x1674>
   23f88:	ldr	sl, [sp, #32]
   23f8c:	mov	r0, #0
   23f90:	ldr	r4, [r1, r0]
   23f94:	ldr	r2, [sp, #52]	; 0x34
   23f98:	add	r4, r4, #1
   23f9c:	str	r4, [r1, r0]
   23fa0:	ldr	r7, [r2, r0]
   23fa4:	sdiv	ip, r4, r7
   23fa8:	mls	r7, ip, r7, r4
   23fac:	cmp	r7, #0
   23fb0:	bne	24028 <GetDataSlab+0x1664>
   23fb4:	mov	r2, #0
   23fb8:	str	r2, [r1, r0]
   23fbc:	ldr	r2, [sp, #48]	; 0x30
   23fc0:	ldr	r4, [r2, r0]
   23fc4:	sdiv	r7, r5, r4
   23fc8:	mls	r7, r7, r4, r5
   23fcc:	cmp	r7, #0
   23fd0:	beq	23ffc <GetDataSlab+0x1638>
   23fd4:	add	r3, sp, #64	; 0x40
   23fd8:	mov	r2, r6
   23fdc:	ldr	r6, [r9, r0]
   23fe0:	sub	r7, r4, r7
   23fe4:	ldr	r3, [r3, r0]
   23fe8:	mla	r3, r6, r3, r7
   23fec:	mov	r6, r2
   23ff0:	add	r5, r3, r5
   23ff4:	add	r6, r2, r3
   23ff8:	b	24018 <GetDataSlab+0x1654>
   23ffc:	ldr	r4, [r9, r0]
   24000:	cmp	r4, #0
   24004:	beq	24018 <GetDataSlab+0x1654>
   24008:	add	r3, sp, #64	; 0x40
   2400c:	ldr	r3, [r3, r0]
   24010:	mla	r5, r3, r4, r5
   24014:	mla	r6, r3, r4, r6
   24018:	subs	sl, sl, #1
   2401c:	add	r0, r0, #4
   24020:	bne	23f90 <GetDataSlab+0x15cc>
   24024:	b	24038 <GetDataSlab+0x1674>
   24028:	ldr	r2, [sp, #28]
   2402c:	ldr	r0, [r2, r0]
   24030:	add	r6, r6, r0
   24034:	add	r5, r0, r5
   24038:	ldr	r2, [sp, #44]	; 0x2c
   2403c:	add	r8, lr, r8
   24040:	mov	r0, #0
   24044:	cmp	r8, r2
   24048:	blt	23f14 <GetDataSlab+0x1550>
   2404c:	b	24900 <GetDataSlab+0x1f3c>
   24050:	ldr	r0, [sp, #52]	; 0x34
   24054:	sub	r1, r0, #1
   24058:	mov	r0, #1
   2405c:	cmp	r1, #11
   24060:	bhi	3a748 <GetDataSlab+0x17d84>
   24064:	add	r2, pc, #8
   24068:	ldr	r3, [fp, #16]
   2406c:	ldr	r1, [r2, r1, lsl #2]
   24070:	add	pc, r2, r1
   24074:	.word	0x00000030
   24078:	.word	0x00009b0c
   2407c:	.word	0x00009d94
   24080:	.word	0x0000a018
   24084:	.word	0x0000a29c
   24088:	.word	0x0000a528
   2408c:	.word	0x0000a7b4
   24090:	.word	0x000166d4
   24094:	.word	0x0000aa4c
   24098:	.word	0x000166d4
   2409c:	.word	0x000166d4
   240a0:	.word	0x0000ace4
   240a4:	ldr	r3, [r3]
   240a8:	mov	r5, #0
   240ac:	add	r7, sp, #64	; 0x40
   240b0:	sub	r0, r3, #1
   240b4:	str	r0, [fp, #-72]	; 0xffffffb8
   240b8:	ldr	r0, [r4]
   240bc:	str	r0, [sp, #40]	; 0x28
   240c0:	str	r0, [sp, #64]	; 0x40
   240c4:	ldr	r0, [fp, #20]
   240c8:	ldr	lr, [r0]
   240cc:	ldr	r0, [fp, #24]
   240d0:	cmp	r0, #2
   240d4:	mov	r0, lr
   240d8:	str	lr, [sp, #44]	; 0x2c
   240dc:	blt	24190 <GetDataSlab+0x17cc>
   240e0:	ldr	r6, [sp, #40]	; 0x28
   240e4:	mov	r9, r4
   240e8:	mov	r0, #1
   240ec:	mov	r5, #0
   240f0:	mov	r1, r4
   240f4:	mov	r2, lr
   240f8:	str	lr, [sp, #44]	; 0x2c
   240fc:	mov	r8, r6
   24100:	mov	r2, r5
   24104:	ldr	r5, [fp, #16]
   24108:	mov	r4, #0
   2410c:	ldr	r5, [r5, r0, lsl #2]
   24110:	str	r6, [r7, r0, lsl #2]
   24114:	sub	r7, fp, #72	; 0x48
   24118:	sub	r5, r5, #1
   2411c:	str	r5, [r7, r0, lsl #2]
   24120:	ldr	ip, [r9, r0, lsl #2]
   24124:	mov	r7, ip
   24128:	mul	r6, r7, r6
   2412c:	ldr	r7, [r1, -r4, lsl #2]
   24130:	add	r4, r4, #1
   24134:	cmp	r0, r4
   24138:	mul	r5, r5, r7
   2413c:	bne	24128 <GetDataSlab+0x1764>
   24140:	sub	r4, fp, #72	; 0x48
   24144:	add	r7, sp, #64	; 0x40
   24148:	add	r1, r1, #4
   2414c:	str	r5, [r4, r0, lsl #2]
   24150:	ldr	r4, [fp, #12]
   24154:	str	r6, [r7, r0, lsl #2]
   24158:	mov	r5, r2
   2415c:	ldr	r4, [r4, r0, lsl #2]
   24160:	mla	r5, r4, r8, r2
   24164:	ldr	r4, [fp, #20]
   24168:	ldr	r2, [sp, #44]	; 0x2c
   2416c:	mov	r8, r6
   24170:	mov	r6, ip
   24174:	ldr	r4, [r4, r0, lsl #2]
   24178:	add	r0, r0, #1
   2417c:	mul	r2, r4, r2
   24180:	ldr	r4, [fp, #24]
   24184:	str	r2, [sp, #44]	; 0x2c
   24188:	cmp	r0, r4
   2418c:	bne	24100 <GetDataSlab+0x173c>
   24190:	ldr	r0, [sp, #48]	; 0x30
   24194:	cmp	r3, #1
   24198:	add	r6, r0, r5
   2419c:	bne	32374 <GetDataSlab+0xf9b0>
   241a0:	ldr	r0, [sp, #44]	; 0x2c
   241a4:	ldr	r9, [fp, #12]
   241a8:	cmp	r0, #1
   241ac:	add	r0, sp, #64	; 0x40
   241b0:	blt	248fc <GetDataSlab+0x1f38>
   241b4:	orr	r0, r0, #4
   241b8:	ldr	r3, [fp, #20]
   241bc:	add	r1, sp, #104	; 0x68
   241c0:	mov	r8, #0
   241c4:	str	r0, [sp, #48]	; 0x30
   241c8:	ldr	r0, [fp, #24]
   241cc:	orr	r1, r1, #4
   241d0:	add	r2, r3, #4
   241d4:	sub	r0, r0, #1
   241d8:	str	r2, [sp, #52]	; 0x34
   241dc:	str	r0, [sp, #32]
   241e0:	sub	r0, fp, #72	; 0x48
   241e4:	orr	r0, r0, #4
   241e8:	str	r0, [sp, #28]
   241ec:	ldr	r0, [r9], #4
   241f0:	str	r0, [sp, #36]	; 0x24
   241f4:	ldr	r2, [sp, #36]	; 0x24
   241f8:	ldr	r3, [fp, #12]
   241fc:	cmp	lr, #1
   24200:	add	r0, r2, r5
   24204:	add	r5, r6, r2
   24208:	ldr	r6, [fp, #20]
   2420c:	blt	24248 <GetDataSlab+0x1884>
   24210:	ldr	r2, [sp, #56]	; 0x38
   24214:	mov	r4, #0
   24218:	add	r7, r2, r8, lsl #2
   2421c:	add	r2, r5, r4
   24220:	ldrsb	r2, [r2]
   24224:	str	r2, [r7, r4, lsl #2]
   24228:	add	r4, r4, #1
   2422c:	ldr	lr, [r6]
   24230:	cmp	r4, lr
   24234:	blt	2421c <GetDataSlab+0x1858>
   24238:	ldr	r2, [r3]
   2423c:	ldr	r3, [fp, #8]
   24240:	ldr	r3, [r3]
   24244:	str	r3, [sp, #40]	; 0x28
   24248:	ldr	r3, [sp, #40]	; 0x28
   2424c:	str	r2, [sp, #36]	; 0x24
   24250:	sub	r7, r3, r2
   24254:	add	r6, r5, r7
   24258:	add	r5, r0, r7
   2425c:	ldr	r0, [fp, #24]
   24260:	cmp	r0, #2
   24264:	blt	24318 <GetDataSlab+0x1954>
   24268:	ldr	sl, [sp, #32]
   2426c:	mov	r0, #0
   24270:	ldr	r4, [r1, r0]
   24274:	ldr	r2, [sp, #52]	; 0x34
   24278:	add	r4, r4, #1
   2427c:	str	r4, [r1, r0]
   24280:	ldr	r7, [r2, r0]
   24284:	sdiv	ip, r4, r7
   24288:	mls	r7, ip, r7, r4
   2428c:	cmp	r7, #0
   24290:	bne	24308 <GetDataSlab+0x1944>
   24294:	mov	r2, #0
   24298:	str	r2, [r1, r0]
   2429c:	ldr	r2, [sp, #48]	; 0x30
   242a0:	ldr	r4, [r2, r0]
   242a4:	sdiv	r7, r5, r4
   242a8:	mls	r7, r7, r4, r5
   242ac:	cmp	r7, #0
   242b0:	beq	242dc <GetDataSlab+0x1918>
   242b4:	add	r3, sp, #64	; 0x40
   242b8:	mov	r2, r6
   242bc:	ldr	r6, [r9, r0]
   242c0:	sub	r7, r4, r7
   242c4:	ldr	r3, [r3, r0]
   242c8:	mla	r3, r6, r3, r7
   242cc:	mov	r6, r2
   242d0:	add	r5, r3, r5
   242d4:	add	r6, r2, r3
   242d8:	b	242f8 <GetDataSlab+0x1934>
   242dc:	ldr	r4, [r9, r0]
   242e0:	cmp	r4, #0
   242e4:	beq	242f8 <GetDataSlab+0x1934>
   242e8:	add	r3, sp, #64	; 0x40
   242ec:	ldr	r3, [r3, r0]
   242f0:	mla	r5, r3, r4, r5
   242f4:	mla	r6, r3, r4, r6
   242f8:	subs	sl, sl, #1
   242fc:	add	r0, r0, #4
   24300:	bne	24270 <GetDataSlab+0x18ac>
   24304:	b	24318 <GetDataSlab+0x1954>
   24308:	ldr	r2, [sp, #28]
   2430c:	ldr	r0, [r2, r0]
   24310:	add	r6, r6, r0
   24314:	add	r5, r0, r5
   24318:	ldr	r0, [sp, #44]	; 0x2c
   2431c:	add	r8, lr, r8
   24320:	cmp	r8, r0
   24324:	mov	r0, #0
   24328:	blt	241f4 <GetDataSlab+0x1830>
   2432c:	b	24900 <GetDataSlab+0x1f3c>
   24330:	ldr	r0, [sp, #52]	; 0x34
   24334:	ldr	ip, [fp, #12]
   24338:	sub	r1, r0, #1
   2433c:	mov	r0, #1
   24340:	cmp	r1, #11
   24344:	bhi	3b774 <GetDataSlab+0x18db0>
   24348:	add	r2, pc, #4
   2434c:	ldr	r1, [r2, r1, lsl #2]
   24350:	add	pc, r2, r1
   24354:	.word	0x00000030
   24358:	.word	0x0000ac78
   2435c:	.word	0x0000aefc
   24360:	.word	0x0000b16c
   24364:	.word	0x0000b3e0
   24368:	.word	0x0000b64c
   2436c:	.word	0x0000b8c4
   24370:	.word	0x00017420
   24374:	.word	0x0000bb5c
   24378:	.word	0x00017420
   2437c:	.word	0x00017420
   24380:	.word	0x0000bdec
   24384:	ldr	r0, [fp, #16]
   24388:	mov	r3, #0
   2438c:	ldr	lr, [r0]
   24390:	sub	r0, lr, #1
   24394:	str	r0, [fp, #-72]	; 0xffffffb8
   24398:	ldr	r0, [r4]
   2439c:	str	r0, [sp, #40]	; 0x28
   243a0:	str	r0, [sp, #64]	; 0x40
   243a4:	ldr	r0, [fp, #20]
   243a8:	ldr	r1, [r0]
   243ac:	ldr	r0, [fp, #24]
   243b0:	cmp	r0, #2
   243b4:	str	r1, [sp, #44]	; 0x2c
   243b8:	str	r1, [sp, #52]	; 0x34
   243bc:	blt	2446c <GetDataSlab+0x1aa8>
   243c0:	ldr	r2, [sp, #40]	; 0x28
   243c4:	ldr	r6, [sp, #44]	; 0x2c
   243c8:	mov	r9, r4
   243cc:	mov	r0, #1
   243d0:	mov	r3, #0
   243d4:	mov	r1, r4
   243d8:	mov	r7, r2
   243dc:	str	r6, [sp, #52]	; 0x34
   243e0:	ldr	r6, [fp, #16]
   243e4:	add	r5, sp, #64	; 0x40
   243e8:	mov	r4, #0
   243ec:	ldr	r6, [r6, r0, lsl #2]
   243f0:	str	r2, [r5, r0, lsl #2]
   243f4:	sub	r5, r6, #1
   243f8:	sub	r6, fp, #72	; 0x48
   243fc:	str	r5, [r6, r0, lsl #2]
   24400:	ldr	ip, [r9, r0, lsl #2]
   24404:	mov	r6, ip
   24408:	mul	r2, r6, r2
   2440c:	ldr	r6, [r1, -r4, lsl #2]
   24410:	add	r4, r4, #1
   24414:	cmp	r0, r4
   24418:	mul	r5, r5, r6
   2441c:	bne	24408 <GetDataSlab+0x1a44>
   24420:	add	r4, sp, #64	; 0x40
   24424:	add	r1, r1, #4
   24428:	str	r2, [r4, r0, lsl #2]
   2442c:	sub	r4, fp, #72	; 0x48
   24430:	str	r5, [r4, r0, lsl #2]
   24434:	ldr	r4, [fp, #12]
   24438:	ldr	r5, [sp, #52]	; 0x34
   2443c:	ldr	r4, [r4, r0, lsl #2]
   24440:	mla	r3, r4, r7, r3
   24444:	ldr	r4, [fp, #20]
   24448:	mov	r7, r2
   2444c:	mov	r2, ip
   24450:	ldr	r4, [r4, r0, lsl #2]
   24454:	add	r0, r0, #1
   24458:	mul	r5, r4, r5
   2445c:	ldr	r4, [fp, #24]
   24460:	str	r5, [sp, #52]	; 0x34
   24464:	cmp	r0, r4
   24468:	bne	243e0 <GetDataSlab+0x1a1c>
   2446c:	ldr	r0, [sp, #48]	; 0x30
   24470:	cmp	lr, #1
   24474:	add	r7, r0, r3
   24478:	bne	32534 <GetDataSlab+0xfb70>
   2447c:	ldr	r0, [sp, #52]	; 0x34
   24480:	ldr	r6, [fp, #12]
   24484:	ldr	r5, [sp, #44]	; 0x2c
   24488:	cmp	r0, #1
   2448c:	blt	248fc <GetDataSlab+0x1f38>
   24490:	add	r0, sp, #104	; 0x68
   24494:	ldr	r2, [sp, #56]	; 0x38
   24498:	mov	sl, r6
   2449c:	add	sl, r6, #4
   244a0:	orr	r9, r0, #4
   244a4:	ldr	r0, [fp, #20]
   244a8:	add	lr, r0, #4
   244ac:	add	r0, sp, #64	; 0x40
   244b0:	orr	r0, r0, #4
   244b4:	str	r0, [sp, #28]
   244b8:	ldr	r0, [fp, #24]
   244bc:	sub	r0, r0, #1
   244c0:	str	r0, [sp, #32]
   244c4:	sub	r0, fp, #72	; 0x48
   244c8:	orr	r0, r0, #4
   244cc:	str	r0, [sp, #24]
   244d0:	lsl	r0, r5, #3
   244d4:	str	r0, [sp, #36]	; 0x24
   244d8:	mov	r0, #0
   244dc:	str	r0, [sp, #56]	; 0x38
   244e0:	cmp	r5, #1
   244e4:	blt	24518 <GetDataSlab+0x1b54>
   244e8:	ldr	r0, [fp, #12]
   244ec:	ldr	r6, [sp, #44]	; 0x2c
   244f0:	mov	r4, r2
   244f4:	ldr	r0, [r0]
   244f8:	add	r0, r7, r0
   244fc:	ldrsb	r8, [r0], #1
   24500:	subs	r6, r6, #1
   24504:	asr	r1, r8, #31
   24508:	str	r8, [r4]
   2450c:	str	r1, [r4, #4]
   24510:	add	r4, r4, #8
   24514:	bne	244fc <GetDataSlab+0x1b38>
   24518:	ldr	r0, [sp, #40]	; 0x28
   2451c:	str	r2, [sp, #48]	; 0x30
   24520:	add	r7, r7, r0
   24524:	add	r3, r3, r0
   24528:	ldr	r0, [fp, #24]
   2452c:	cmp	r0, #2
   24530:	blt	245d4 <GetDataSlab+0x1c10>
   24534:	ldr	ip, [sp, #32]
   24538:	ldr	r2, [sp, #28]
   2453c:	mov	r0, #0
   24540:	add	r8, sp, #64	; 0x40
   24544:	ldr	r1, [r9, r0]
   24548:	add	r1, r1, #1
   2454c:	str	r1, [r9, r0]
   24550:	ldr	r4, [lr, r0]
   24554:	sdiv	r6, r1, r4
   24558:	mls	r1, r6, r4, r1
   2455c:	cmp	r1, #0
   24560:	bne	245c4 <GetDataSlab+0x1c00>
   24564:	ldr	r4, [r2, r0]
   24568:	mov	r1, #0
   2456c:	str	r1, [r9, r0]
   24570:	sdiv	r1, r3, r4
   24574:	mls	r6, r1, r4, r3
   24578:	cmp	r6, #0
   2457c:	beq	2459c <GetDataSlab+0x1bd8>
   24580:	ldr	r1, [r8, r0]
   24584:	ldr	r5, [sl, r0]
   24588:	sub	r4, r4, r6
   2458c:	mla	r1, r5, r1, r4
   24590:	add	r3, r1, r3
   24594:	add	r7, r7, r1
   24598:	b	245b4 <GetDataSlab+0x1bf0>
   2459c:	ldr	r4, [sl, r0]
   245a0:	cmp	r4, #0
   245a4:	beq	245b4 <GetDataSlab+0x1bf0>
   245a8:	ldr	r1, [r8, r0]
   245ac:	mla	r3, r1, r4, r3
   245b0:	mla	r7, r1, r4, r7
   245b4:	subs	ip, ip, #1
   245b8:	add	r0, r0, #4
   245bc:	bne	24544 <GetDataSlab+0x1b80>
   245c0:	b	245d4 <GetDataSlab+0x1c10>
   245c4:	ldr	r1, [sp, #24]
   245c8:	ldr	r0, [r1, r0]
   245cc:	add	r7, r7, r0
   245d0:	add	r3, r0, r3
   245d4:	ldr	r5, [sp, #44]	; 0x2c
   245d8:	ldr	r6, [sp, #56]	; 0x38
   245dc:	ldr	r0, [sp, #36]	; 0x24
   245e0:	ldr	r2, [sp, #48]	; 0x30
   245e4:	ldr	r1, [sp, #52]	; 0x34
   245e8:	add	r6, r6, r5
   245ec:	add	r2, r2, r0
   245f0:	mov	r0, #0
   245f4:	cmp	r6, r1
   245f8:	str	r6, [sp, #56]	; 0x38
   245fc:	blt	244e0 <GetDataSlab+0x1b1c>
   24600:	b	24900 <GetDataSlab+0x1f3c>
   24604:	ldr	r0, [sp, #52]	; 0x34
   24608:	ldr	ip, [fp, #12]
   2460c:	sub	r1, r0, #1
   24610:	mov	r0, #1
   24614:	cmp	r1, #11
   24618:	bhi	3c78c <GetDataSlab+0x19dc8>
   2461c:	add	r2, pc, #4
   24620:	ldr	r1, [r2, r1, lsl #2]
   24624:	add	pc, r2, r1
   24628:	.word	0x00000030
   2462c:	.word	0x0000bd84
   24630:	.word	0x0000c008
   24634:	.word	0x0000c278
   24638:	.word	0x0000c4ec
   2463c:	.word	0x0000c758
   24640:	.word	0x0000c9d0
   24644:	.word	0x00018164
   24648:	.word	0x0000cc68
   2464c:	.word	0x00018164
   24650:	.word	0x00018164
   24654:	.word	0x0000cf08
   24658:	ldr	r0, [fp, #16]
   2465c:	mov	r3, #0
   24660:	ldr	lr, [r0]
   24664:	sub	r0, lr, #1
   24668:	str	r0, [fp, #-72]	; 0xffffffb8
   2466c:	ldr	r0, [r4]
   24670:	str	r0, [sp, #40]	; 0x28
   24674:	str	r0, [sp, #64]	; 0x40
   24678:	ldr	r0, [fp, #20]
   2467c:	ldr	r1, [r0]
   24680:	ldr	r0, [fp, #24]
   24684:	cmp	r0, #2
   24688:	str	r1, [sp, #44]	; 0x2c
   2468c:	str	r1, [sp, #52]	; 0x34
   24690:	blt	24740 <GetDataSlab+0x1d7c>
   24694:	ldr	r2, [sp, #40]	; 0x28
   24698:	ldr	r6, [sp, #44]	; 0x2c
   2469c:	mov	r9, r4
   246a0:	mov	r0, #1
   246a4:	mov	r3, #0
   246a8:	mov	r1, r4
   246ac:	mov	r7, r2
   246b0:	str	r6, [sp, #52]	; 0x34
   246b4:	ldr	r6, [fp, #16]
   246b8:	add	r5, sp, #64	; 0x40
   246bc:	mov	r4, #0
   246c0:	ldr	r6, [r6, r0, lsl #2]
   246c4:	str	r2, [r5, r0, lsl #2]
   246c8:	sub	r5, r6, #1
   246cc:	sub	r6, fp, #72	; 0x48
   246d0:	str	r5, [r6, r0, lsl #2]
   246d4:	ldr	ip, [r9, r0, lsl #2]
   246d8:	mov	r6, ip
   246dc:	mul	r2, r6, r2
   246e0:	ldr	r6, [r1, -r4, lsl #2]
   246e4:	add	r4, r4, #1
   246e8:	cmp	r0, r4
   246ec:	mul	r5, r5, r6
   246f0:	bne	246dc <GetDataSlab+0x1d18>
   246f4:	add	r4, sp, #64	; 0x40
   246f8:	add	r1, r1, #4
   246fc:	str	r2, [r4, r0, lsl #2]
   24700:	sub	r4, fp, #72	; 0x48
   24704:	str	r5, [r4, r0, lsl #2]
   24708:	ldr	r4, [fp, #12]
   2470c:	ldr	r5, [sp, #52]	; 0x34
   24710:	ldr	r4, [r4, r0, lsl #2]
   24714:	mla	r3, r4, r7, r3
   24718:	ldr	r4, [fp, #20]
   2471c:	mov	r7, r2
   24720:	mov	r2, ip
   24724:	ldr	r4, [r4, r0, lsl #2]
   24728:	add	r0, r0, #1
   2472c:	mul	r5, r4, r5
   24730:	ldr	r4, [fp, #24]
   24734:	str	r5, [sp, #52]	; 0x34
   24738:	cmp	r0, r4
   2473c:	bne	246b4 <GetDataSlab+0x1cf0>
   24740:	ldr	r0, [sp, #48]	; 0x30
   24744:	cmp	lr, #1
   24748:	add	r7, r0, r3
   2474c:	bne	326e0 <GetDataSlab+0xfd1c>
   24750:	ldr	r0, [sp, #52]	; 0x34
   24754:	ldr	r6, [fp, #12]
   24758:	ldr	r5, [sp, #44]	; 0x2c
   2475c:	cmp	r0, #1
   24760:	blt	248fc <GetDataSlab+0x1f38>
   24764:	add	r0, sp, #104	; 0x68
   24768:	ldr	r2, [sp, #56]	; 0x38
   2476c:	mov	sl, r6
   24770:	add	sl, r6, #4
   24774:	orr	r9, r0, #4
   24778:	ldr	r0, [fp, #20]
   2477c:	add	lr, r0, #4
   24780:	add	r0, sp, #64	; 0x40
   24784:	orr	r0, r0, #4
   24788:	str	r0, [sp, #28]
   2478c:	ldr	r0, [fp, #24]
   24790:	sub	r0, r0, #1
   24794:	str	r0, [sp, #32]
   24798:	sub	r0, fp, #72	; 0x48
   2479c:	orr	r0, r0, #4
   247a0:	str	r0, [sp, #24]
   247a4:	lsl	r0, r5, #3
   247a8:	str	r0, [sp, #36]	; 0x24
   247ac:	mov	r0, #0
   247b0:	str	r0, [sp, #56]	; 0x38
   247b4:	cmp	r5, #1
   247b8:	blt	247ec <GetDataSlab+0x1e28>
   247bc:	ldr	r0, [fp, #12]
   247c0:	ldr	r6, [sp, #44]	; 0x2c
   247c4:	mov	r4, r2
   247c8:	ldr	r0, [r0]
   247cc:	add	r0, r7, r0
   247d0:	ldrsb	r8, [r0], #1
   247d4:	subs	r6, r6, #1
   247d8:	asr	r1, r8, #31
   247dc:	str	r8, [r4]
   247e0:	str	r1, [r4, #4]
   247e4:	add	r4, r4, #8
   247e8:	bne	247d0 <GetDataSlab+0x1e0c>
   247ec:	ldr	r0, [sp, #40]	; 0x28
   247f0:	str	r2, [sp, #48]	; 0x30
   247f4:	add	r7, r7, r0
   247f8:	add	r3, r3, r0
   247fc:	ldr	r0, [fp, #24]
   24800:	cmp	r0, #2
   24804:	blt	248a8 <GetDataSlab+0x1ee4>
   24808:	ldr	ip, [sp, #32]
   2480c:	ldr	r2, [sp, #28]
   24810:	mov	r0, #0
   24814:	add	r8, sp, #64	; 0x40
   24818:	ldr	r1, [r9, r0]
   2481c:	add	r1, r1, #1
   24820:	str	r1, [r9, r0]
   24824:	ldr	r4, [lr, r0]
   24828:	sdiv	r6, r1, r4
   2482c:	mls	r1, r6, r4, r1
   24830:	cmp	r1, #0
   24834:	bne	24898 <GetDataSlab+0x1ed4>
   24838:	ldr	r4, [r2, r0]
   2483c:	mov	r1, #0
   24840:	str	r1, [r9, r0]
   24844:	sdiv	r1, r3, r4
   24848:	mls	r6, r1, r4, r3
   2484c:	cmp	r6, #0
   24850:	beq	24870 <GetDataSlab+0x1eac>
   24854:	ldr	r1, [r8, r0]
   24858:	ldr	r5, [sl, r0]
   2485c:	sub	r4, r4, r6
   24860:	mla	r1, r5, r1, r4
   24864:	add	r3, r1, r3
   24868:	add	r7, r7, r1
   2486c:	b	24888 <GetDataSlab+0x1ec4>
   24870:	ldr	r4, [sl, r0]
   24874:	cmp	r4, #0
   24878:	beq	24888 <GetDataSlab+0x1ec4>
   2487c:	ldr	r1, [r8, r0]
   24880:	mla	r3, r1, r4, r3
   24884:	mla	r7, r1, r4, r7
   24888:	subs	ip, ip, #1
   2488c:	add	r0, r0, #4
   24890:	bne	24818 <GetDataSlab+0x1e54>
   24894:	b	248a8 <GetDataSlab+0x1ee4>
   24898:	ldr	r1, [sp, #24]
   2489c:	ldr	r0, [r1, r0]
   248a0:	add	r7, r7, r0
   248a4:	add	r3, r0, r3
   248a8:	ldr	r5, [sp, #44]	; 0x2c
   248ac:	ldr	r6, [sp, #56]	; 0x38
   248b0:	ldr	r0, [sp, #36]	; 0x24
   248b4:	ldr	r2, [sp, #48]	; 0x30
   248b8:	ldr	r1, [sp, #52]	; 0x34
   248bc:	add	r6, r6, r5
   248c0:	add	r2, r2, r0
   248c4:	mov	r0, #0
   248c8:	cmp	r6, r1
   248cc:	str	r6, [sp, #56]	; 0x38
   248d0:	blt	247b4 <GetDataSlab+0x1df0>
   248d4:	b	24900 <GetDataSlab+0x1f3c>
   248d8:	cmp	r7, #0
   248dc:	beq	22ae8 <GetDataSlab+0x124>
   248e0:	ldr	r5, [sp, #44]	; 0x2c
   248e4:	cmp	r5, #1
   248e8:	bne	22ae8 <GetDataSlab+0x124>
   248ec:	ldr	r2, [fp, #28]
   248f0:	ldr	r1, [sp, #48]	; 0x30
   248f4:	mov	r0, lr
   248f8:	bl	1834 <memcpy@plt>
   248fc:	mov	r0, #0
   24900:	sub	sp, fp, #28
   24904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24908:	ldr	r3, [sp, #52]	; 0x34
   2490c:	ldr	r9, [sp, #48]	; 0x30
   24910:	mov	r0, #1
   24914:	sub	r1, r3, #1
   24918:	cmp	r1, #11
   2491c:	bhi	3e314 <GetDataSlab+0x1b950>
   24920:	add	r2, pc, #8
   24924:	ldr	r7, [sp, #44]	; 0x2c
   24928:	ldr	r1, [r2, r1, lsl #2]
   2492c:	add	pc, r2, r1
   24930:	.word	0x00000030
   24934:	.word	0x00019620
   24938:	.word	0x00019690
   2493c:	.word	0x00019708
   24940:	.word	0x00019780
   24944:	.word	0x000197f4
   24948:	.word	0x00019868
   2494c:	.word	0x000199e4
   24950:	.word	0x000198d4
   24954:	.word	0x000199e4
   24958:	.word	0x000199e4
   2495c:	.word	0x00019948
   24960:	ldr	r0, [sp, #56]	; 0x38
   24964:	cmp	r0, #1
   24968:	blt	248fc <GetDataSlab+0x1f38>
   2496c:	ldr	r0, [sp, #36]	; 0x24
   24970:	ldr	r1, [sp, #32]
   24974:	mul	r2, r7, r6
   24978:	mov	r3, #0
   2497c:	mla	r0, r1, r6, r0
   24980:	add	r1, r9, r0
   24984:	cmp	r8, #1
   24988:	blt	249b8 <GetDataSlab+0x1ff4>
   2498c:	mov	r0, #0
   24990:	mov	r7, r8
   24994:	add	r6, r1, r0
   24998:	add	r0, r0, sl
   2499c:	subs	r7, r7, #1
   249a0:	ldrsb	r6, [r6]
   249a4:	vmov	s0, r6
   249a8:	vcvt.f32.s32	s0, s0
   249ac:	vstr	s0, [lr]
   249b0:	add	lr, lr, #4
   249b4:	bne	24994 <GetDataSlab+0x1fd0>
   249b8:	ldr	r7, [sp, #56]	; 0x38
   249bc:	add	r3, r3, #1
   249c0:	add	r1, r1, r2
   249c4:	mov	r0, #0
   249c8:	cmp	r3, r7
   249cc:	bne	24984 <GetDataSlab+0x1fc0>
   249d0:	b	24900 <GetDataSlab+0x1f3c>
   249d4:	ldr	r0, [sp, #52]	; 0x34
   249d8:	ldr	r9, [sp, #48]	; 0x30
   249dc:	sub	r2, r0, #1
   249e0:	mov	r0, #1
   249e4:	cmp	r2, #11
   249e8:	bhi	407ec <GetDataSlab+0x1de28>
   249ec:	add	r7, pc, #8
   249f0:	ldr	r1, [sp, #56]	; 0x38
   249f4:	ldr	r2, [r7, r2, lsl #2]
   249f8:	add	pc, r7, r2
   249fc:	.word	0x00000030
   24a00:	.word	0x000199b0
   24a04:	.word	0x00019a44
   24a08:	.word	0x00019adc
   24a0c:	.word	0x00019b74
   24a10:	.word	0x00019c0c
   24a14:	.word	0x00019ca4
   24a18:	.word	0x0001bdf4
   24a1c:	.word	0x00019d48
   24a20:	.word	0x0001bdf4
   24a24:	.word	0x0001bdf4
   24a28:	.word	0x00019dec
   24a2c:	cmp	r1, #1
   24a30:	blt	248fc <GetDataSlab+0x1f38>
   24a34:	ldr	r0, [sp, #36]	; 0x24
   24a38:	ldr	r1, [sp, #32]
   24a3c:	mov	r7, #0
   24a40:	mov	r4, lr
   24a44:	mla	r0, r1, r6, r0
   24a48:	add	r2, r9, r0
   24a4c:	cmp	r8, #1
   24a50:	blt	24a98 <GetDataSlab+0x20d4>
   24a54:	ldr	r5, [fp, #20]
   24a58:	ldr	r1, [fp, #16]
   24a5c:	ldr	lr, [fp, #8]
   24a60:	mov	r0, #0
   24a64:	ldr	r6, [r1]
   24a68:	mul	r6, r6, r0
   24a6c:	ldrb	r6, [r2, r6]
   24a70:	strb	r6, [r4, r0]
   24a74:	add	r0, r0, #1
   24a78:	ldr	r8, [r5]
   24a7c:	cmp	r0, r8
   24a80:	blt	24a64 <GetDataSlab+0x20a0>
   24a84:	add	r4, r4, r0
   24a88:	ldr	r1, [r3]
   24a8c:	ldr	r6, [lr]
   24a90:	ldr	r0, [ip]
   24a94:	b	24aa0 <GetDataSlab+0x20dc>
   24a98:	ldr	r1, [sp, #56]	; 0x38
   24a9c:	ldr	r0, [sp, #44]	; 0x2c
   24aa0:	mla	r2, r6, r0, r2
   24aa4:	add	r7, r7, #1
   24aa8:	str	r0, [sp, #44]	; 0x2c
   24aac:	mov	r0, #0
   24ab0:	str	r1, [sp, #56]	; 0x38
   24ab4:	cmp	r7, r1
   24ab8:	blt	24a4c <GetDataSlab+0x2088>
   24abc:	b	24900 <GetDataSlab+0x1f3c>
   24ac0:	ldr	r0, [sp, #52]	; 0x34
   24ac4:	ldr	r9, [sp, #48]	; 0x30
   24ac8:	sub	r2, r0, #1
   24acc:	mov	r0, #1
   24ad0:	cmp	r2, #11
   24ad4:	bhi	408a4 <GetDataSlab+0x1dee0>
   24ad8:	add	r7, pc, #8
   24adc:	ldr	r1, [sp, #56]	; 0x38
   24ae0:	ldr	r2, [r7, r2, lsl #2]
   24ae4:	add	pc, r7, r2
   24ae8:	.word	0x00000030
   24aec:	.word	0x00019d9c
   24af0:	.word	0x00019e30
   24af4:	.word	0x00019ec8
   24af8:	.word	0x00019f60
   24afc:	.word	0x00019ff8
   24b00:	.word	0x0001a090
   24b04:	.word	0x0001bdc0
   24b08:	.word	0x0001a134
   24b0c:	.word	0x0001bdc0
   24b10:	.word	0x0001bdc0
   24b14:	.word	0x0001a1d8
   24b18:	cmp	r1, #1
   24b1c:	blt	248fc <GetDataSlab+0x1f38>
   24b20:	ldr	r0, [sp, #36]	; 0x24
   24b24:	ldr	r1, [sp, #32]
   24b28:	mov	r7, #0
   24b2c:	mov	r4, lr
   24b30:	mla	r0, r1, r6, r0
   24b34:	add	r2, r9, r0
   24b38:	cmp	r8, #1
   24b3c:	blt	24b84 <GetDataSlab+0x21c0>
   24b40:	ldr	r5, [fp, #20]
   24b44:	ldr	r1, [fp, #16]
   24b48:	ldr	lr, [fp, #8]
   24b4c:	mov	r0, #0
   24b50:	ldr	r6, [r1]
   24b54:	mul	r6, r6, r0
   24b58:	ldrb	r6, [r2, r6]
   24b5c:	strb	r6, [r4, r0]
   24b60:	add	r0, r0, #1
   24b64:	ldr	r8, [r5]
   24b68:	cmp	r0, r8
   24b6c:	blt	24b50 <GetDataSlab+0x218c>
   24b70:	add	r4, r4, r0
   24b74:	ldr	r1, [r3]
   24b78:	ldr	r6, [lr]
   24b7c:	ldr	r0, [ip]
   24b80:	b	24b8c <GetDataSlab+0x21c8>
   24b84:	ldr	r1, [sp, #56]	; 0x38
   24b88:	ldr	r0, [sp, #44]	; 0x2c
   24b8c:	mla	r2, r6, r0, r2
   24b90:	add	r7, r7, #1
   24b94:	str	r0, [sp, #44]	; 0x2c
   24b98:	mov	r0, #0
   24b9c:	str	r1, [sp, #56]	; 0x38
   24ba0:	cmp	r7, r1
   24ba4:	blt	24b38 <GetDataSlab+0x2174>
   24ba8:	b	24900 <GetDataSlab+0x1f3c>
   24bac:	ldr	ip, [sp, #52]	; 0x34
   24bb0:	mov	r0, #1
   24bb4:	sub	r1, ip, #1
   24bb8:	cmp	r1, #11
   24bbc:	bhi	3f0dc <GetDataSlab+0x1c718>
   24bc0:	add	r2, pc, #12
   24bc4:	ldr	r3, [sp, #44]	; 0x2c
   24bc8:	ldr	r4, [sp, #48]	; 0x30
   24bcc:	ldr	r1, [r2, r1, lsl #2]
   24bd0:	add	pc, r2, r1
   24bd4:	.word	0x00000030
   24bd8:	.word	0x0001a188
   24bdc:	.word	0x0001a1f0
   24be0:	.word	0x0001a260
   24be4:	.word	0x0001a2d0
   24be8:	.word	0x0001a340
   24bec:	.word	0x0001a3b0
   24bf0:	.word	0x0001a508
   24bf4:	.word	0x0001a424
   24bf8:	.word	0x0001a508
   24bfc:	.word	0x0001a508
   24c00:	.word	0x0001a498
   24c04:	ldr	r0, [sp, #56]	; 0x38
   24c08:	cmp	r0, #1
   24c0c:	blt	248fc <GetDataSlab+0x1f38>
   24c10:	ldr	r0, [sp, #36]	; 0x24
   24c14:	ldr	r1, [sp, #32]
   24c18:	mul	r2, r3, r6
   24c1c:	mov	r3, #0
   24c20:	mla	r0, r1, r6, r0
   24c24:	add	r1, r4, r0
   24c28:	cmp	r8, #1
   24c2c:	blt	24c54 <GetDataSlab+0x2290>
   24c30:	mov	r7, #0
   24c34:	mov	r0, r8
   24c38:	add	r6, r7, sl
   24c3c:	add	r7, r1, r7
   24c40:	subs	r0, r0, #1
   24c44:	ldrsb	r7, [r7]
   24c48:	strh	r7, [lr], #2
   24c4c:	mov	r7, r6
   24c50:	bne	24c38 <GetDataSlab+0x2274>
   24c54:	ldr	r7, [sp, #56]	; 0x38
   24c58:	add	r3, r3, #1
   24c5c:	add	r1, r1, r2
   24c60:	mov	r0, #0
   24c64:	cmp	r3, r7
   24c68:	bne	24c28 <GetDataSlab+0x2264>
   24c6c:	b	24900 <GetDataSlab+0x1f3c>
   24c70:	ldr	ip, [sp, #52]	; 0x34
   24c74:	ldr	r9, [sp, #48]	; 0x30
   24c78:	mov	r0, #1
   24c7c:	sub	r1, ip, #1
   24c80:	cmp	r1, #11
   24c84:	bhi	3f4e0 <GetDataSlab+0x1cb1c>
   24c88:	add	r2, pc, #8
   24c8c:	ldr	r3, [sp, #44]	; 0x2c
   24c90:	ldr	r1, [r2, r1, lsl #2]
   24c94:	add	pc, r2, r1
   24c98:	.word	0x00000030
   24c9c:	.word	0x0001a4c4
   24ca0:	.word	0x0001a52c
   24ca4:	.word	0x0001a59c
   24ca8:	.word	0x0001a60c
   24cac:	.word	0x0001a67c
   24cb0:	.word	0x0001a6ec
   24cb4:	.word	0x0001a848
   24cb8:	.word	0x0001a760
   24cbc:	.word	0x0001a848
   24cc0:	.word	0x0001a848
   24cc4:	.word	0x0001a7d4
   24cc8:	ldr	r0, [sp, #56]	; 0x38
   24ccc:	cmp	r0, #1
   24cd0:	blt	248fc <GetDataSlab+0x1f38>
   24cd4:	ldr	r0, [sp, #36]	; 0x24
   24cd8:	ldr	r1, [sp, #32]
   24cdc:	mul	r2, r3, r6
   24ce0:	mov	r3, #0
   24ce4:	mla	r0, r1, r6, r0
   24ce8:	add	r1, r9, r0
   24cec:	cmp	r8, #1
   24cf0:	blt	24d18 <GetDataSlab+0x2354>
   24cf4:	mov	r7, #0
   24cf8:	mov	r0, r8
   24cfc:	add	r6, r7, sl
   24d00:	add	r7, r1, r7
   24d04:	subs	r0, r0, #1
   24d08:	ldrsb	r7, [r7]
   24d0c:	strh	r7, [lr], #2
   24d10:	mov	r7, r6
   24d14:	bne	24cfc <GetDataSlab+0x2338>
   24d18:	ldr	r7, [sp, #56]	; 0x38
   24d1c:	add	r3, r3, #1
   24d20:	add	r1, r1, r2
   24d24:	mov	r0, #0
   24d28:	cmp	r3, r7
   24d2c:	bne	24cec <GetDataSlab+0x2328>
   24d30:	b	24900 <GetDataSlab+0x1f3c>
   24d34:	ldr	r0, [sp, #52]	; 0x34
   24d38:	ldr	r9, [sp, #48]	; 0x30
   24d3c:	sub	r2, r0, #1
   24d40:	mov	r0, #1
   24d44:	cmp	r2, #11
   24d48:	bhi	40a18 <GetDataSlab+0x1e054>
   24d4c:	add	r7, pc, #12
   24d50:	ldr	r1, [sp, #56]	; 0x38
   24d54:	ldr	r5, [sp, #44]	; 0x2c
   24d58:	ldr	r2, [r7, r2, lsl #2]
   24d5c:	add	pc, r7, r2
   24d60:	.word	0x00000030
   24d64:	.word	0x0001a7fc
   24d68:	.word	0x0001a894
   24d6c:	.word	0x0001a934
   24d70:	.word	0x0001a9d4
   24d74:	.word	0x0001aa70
   24d78:	.word	0x0001ab0c
   24d7c:	.word	0x0001bcc0
   24d80:	.word	0x0001abb4
   24d84:	.word	0x0001bcc0
   24d88:	.word	0x0001bcc0
   24d8c:	.word	0x0001ac5c
   24d90:	cmp	r1, #1
   24d94:	blt	248fc <GetDataSlab+0x1f38>
   24d98:	ldr	r0, [sp, #36]	; 0x24
   24d9c:	ldr	r1, [sp, #32]
   24da0:	mov	r7, #0
   24da4:	mla	r0, r1, r6, r0
   24da8:	add	r2, r9, r0
   24dac:	cmp	r8, #1
   24db0:	blt	24e00 <GetDataSlab+0x243c>
   24db4:	ldr	r4, [fp, #20]
   24db8:	ldr	r1, [fp, #16]
   24dbc:	ldr	r9, [fp, #8]
   24dc0:	mov	r0, #0
   24dc4:	mov	r6, #0
   24dc8:	ldr	r5, [r1]
   24dcc:	add	r0, r0, #4
   24dd0:	mla	r5, r5, r6, r2
   24dd4:	ldrsb	r5, [r5]
   24dd8:	str	r5, [lr, r6, lsl #2]
   24ddc:	add	r6, r6, #1
   24de0:	ldr	r8, [r4]
   24de4:	cmp	r6, r8
   24de8:	blt	24dc8 <GetDataSlab+0x2404>
   24dec:	add	lr, lr, r0
   24df0:	ldr	r1, [r3]
   24df4:	ldr	r6, [r9]
   24df8:	ldr	r0, [ip]
   24dfc:	b	24e08 <GetDataSlab+0x2444>
   24e00:	ldr	r1, [sp, #56]	; 0x38
   24e04:	ldr	r0, [sp, #44]	; 0x2c
   24e08:	mla	r2, r6, r0, r2
   24e0c:	add	r7, r7, #1
   24e10:	str	r0, [sp, #44]	; 0x2c
   24e14:	mov	r0, #0
   24e18:	str	r1, [sp, #56]	; 0x38
   24e1c:	cmp	r7, r1
   24e20:	blt	24dac <GetDataSlab+0x23e8>
   24e24:	b	24900 <GetDataSlab+0x1f3c>
   24e28:	ldr	r0, [sp, #52]	; 0x34
   24e2c:	ldr	r9, [sp, #48]	; 0x30
   24e30:	sub	r2, r0, #1
   24e34:	mov	r0, #1
   24e38:	cmp	r2, #11
   24e3c:	bhi	4095c <GetDataSlab+0x1df98>
   24e40:	add	r7, pc, #12
   24e44:	ldr	r1, [sp, #56]	; 0x38
   24e48:	ldr	r5, [sp, #44]	; 0x2c
   24e4c:	ldr	r2, [r7, r2, lsl #2]
   24e50:	add	pc, r7, r2
   24e54:	.word	0x00000030
   24e58:	.word	0x0001abf8
   24e5c:	.word	0x0001ac90
   24e60:	.word	0x0001ad30
   24e64:	.word	0x0001add0
   24e68:	.word	0x0001ae6c
   24e6c:	.word	0x0001af08
   24e70:	.word	0x0001bb10
   24e74:	.word	0x0001afb0
   24e78:	.word	0x0001bb10
   24e7c:	.word	0x0001bb10
   24e80:	.word	0x0001b058
   24e84:	cmp	r1, #1
   24e88:	blt	248fc <GetDataSlab+0x1f38>
   24e8c:	ldr	r0, [sp, #36]	; 0x24
   24e90:	ldr	r1, [sp, #32]
   24e94:	mov	r7, #0
   24e98:	mla	r0, r1, r6, r0
   24e9c:	add	r2, r9, r0
   24ea0:	cmp	r8, #1
   24ea4:	blt	24ef4 <GetDataSlab+0x2530>
   24ea8:	ldr	r4, [fp, #20]
   24eac:	ldr	r1, [fp, #16]
   24eb0:	ldr	r9, [fp, #8]
   24eb4:	mov	r0, #0
   24eb8:	mov	r6, #0
   24ebc:	ldr	r5, [r1]
   24ec0:	add	r0, r0, #4
   24ec4:	mla	r5, r5, r6, r2
   24ec8:	ldrsb	r5, [r5]
   24ecc:	str	r5, [lr, r6, lsl #2]
   24ed0:	add	r6, r6, #1
   24ed4:	ldr	r8, [r4]
   24ed8:	cmp	r6, r8
   24edc:	blt	24ebc <GetDataSlab+0x24f8>
   24ee0:	add	lr, lr, r0
   24ee4:	ldr	r1, [r3]
   24ee8:	ldr	r6, [r9]
   24eec:	ldr	r0, [ip]
   24ef0:	b	24efc <GetDataSlab+0x2538>
   24ef4:	ldr	r1, [sp, #56]	; 0x38
   24ef8:	ldr	r0, [sp, #44]	; 0x2c
   24efc:	mla	r2, r6, r0, r2
   24f00:	add	r7, r7, #1
   24f04:	str	r0, [sp, #44]	; 0x2c
   24f08:	mov	r0, #0
   24f0c:	str	r1, [sp, #56]	; 0x38
   24f10:	cmp	r7, r1
   24f14:	blt	24ea0 <GetDataSlab+0x24dc>
   24f18:	b	24900 <GetDataSlab+0x1f3c>
   24f1c:	ldr	r3, [sp, #52]	; 0x34
   24f20:	ldr	r9, [sp, #48]	; 0x30
   24f24:	mov	r0, #1
   24f28:	sub	r1, r3, #1
   24f2c:	cmp	r1, #11
   24f30:	bhi	4030c <GetDataSlab+0x1d948>
   24f34:	add	r2, pc, #8
   24f38:	ldr	r5, [sp, #44]	; 0x2c
   24f3c:	ldr	r1, [r2, r1, lsl #2]
   24f40:	add	pc, r2, r1
   24f44:	.word	0x00000030
   24f48:	.word	0x0001aff8
   24f4c:	.word	0x0001b068
   24f50:	.word	0x0001b0dc
   24f54:	.word	0x0001b150
   24f58:	.word	0x0001b1c4
   24f5c:	.word	0x0001b238
   24f60:	.word	0x0001b3c8
   24f64:	.word	0x0001b2b8
   24f68:	.word	0x0001b3c8
   24f6c:	.word	0x0001b3c8
   24f70:	.word	0x0001b340
   24f74:	ldr	r0, [sp, #56]	; 0x38
   24f78:	cmp	r0, #1
   24f7c:	blt	248fc <GetDataSlab+0x1f38>
   24f80:	ldr	r0, [sp, #36]	; 0x24
   24f84:	ldr	r1, [sp, #32]
   24f88:	mul	r2, r5, r6
   24f8c:	mov	r3, #0
   24f90:	mla	r0, r1, r6, r0
   24f94:	add	r1, r9, r0
   24f98:	cmp	r8, #1
   24f9c:	blt	24fc8 <GetDataSlab+0x2604>
   24fa0:	mov	r0, #0
   24fa4:	mov	r7, r8
   24fa8:	add	r6, r1, r0
   24fac:	add	r0, r0, sl
   24fb0:	subs	r7, r7, #1
   24fb4:	ldrsb	r4, [r6]
   24fb8:	asr	r5, r4, #31
   24fbc:	strd	r4, [lr]
   24fc0:	add	lr, lr, #8
   24fc4:	bne	24fa8 <GetDataSlab+0x25e4>
   24fc8:	ldr	r7, [sp, #56]	; 0x38
   24fcc:	add	r3, r3, #1
   24fd0:	add	r1, r1, r2
   24fd4:	mov	r0, #0
   24fd8:	cmp	r3, r7
   24fdc:	bne	24f98 <GetDataSlab+0x25d4>
   24fe0:	b	24900 <GetDataSlab+0x1f3c>
   24fe4:	ldr	r3, [sp, #52]	; 0x34
   24fe8:	ldr	r9, [sp, #48]	; 0x30
   24fec:	mov	r0, #1
   24ff0:	sub	r1, r3, #1
   24ff4:	cmp	r1, #11
   24ff8:	bhi	40764 <GetDataSlab+0x1dda0>
   24ffc:	add	r2, pc, #8
   25000:	ldr	r5, [sp, #44]	; 0x2c
   25004:	ldr	r1, [r2, r1, lsl #2]
   25008:	add	pc, r2, r1
   2500c:	.word	0x00000030
   25010:	.word	0x0001b388
   25014:	.word	0x0001b3f8
   25018:	.word	0x0001b46c
   2501c:	.word	0x0001b4e0
   25020:	.word	0x0001b554
   25024:	.word	0x0001b5c8
   25028:	.word	0x0001b758
   2502c:	.word	0x0001b648
   25030:	.word	0x0001b758
   25034:	.word	0x0001b758
   25038:	.word	0x0001b6d0
   2503c:	ldr	r0, [sp, #56]	; 0x38
   25040:	cmp	r0, #1
   25044:	blt	248fc <GetDataSlab+0x1f38>
   25048:	ldr	r0, [sp, #36]	; 0x24
   2504c:	ldr	r1, [sp, #32]
   25050:	mul	r2, r5, r6
   25054:	mov	r3, #0
   25058:	mla	r0, r1, r6, r0
   2505c:	add	r1, r9, r0
   25060:	cmp	r8, #1
   25064:	blt	25090 <GetDataSlab+0x26cc>
   25068:	mov	r0, #0
   2506c:	mov	r7, r8
   25070:	add	r6, r1, r0
   25074:	add	r0, r0, sl
   25078:	subs	r7, r7, #1
   2507c:	ldrsb	r4, [r6]
   25080:	asr	r5, r4, #31
   25084:	strd	r4, [lr]
   25088:	add	lr, lr, #8
   2508c:	bne	25070 <GetDataSlab+0x26ac>
   25090:	ldr	r7, [sp, #56]	; 0x38
   25094:	add	r3, r3, #1
   25098:	add	r1, r1, r2
   2509c:	mov	r0, #0
   250a0:	cmp	r3, r7
   250a4:	bne	25060 <GetDataSlab+0x269c>
   250a8:	b	24900 <GetDataSlab+0x1f3c>
   250ac:	ldr	r0, [fp, #16]
   250b0:	mov	r3, #0
   250b4:	ldr	lr, [r0]
   250b8:	sub	r0, lr, #1
   250bc:	str	r0, [fp, #-72]	; 0xffffffb8
   250c0:	ldr	r0, [r4]
   250c4:	str	r0, [sp, #40]	; 0x28
   250c8:	str	r0, [sp, #64]	; 0x40
   250cc:	ldr	r0, [fp, #20]
   250d0:	ldr	r1, [r0]
   250d4:	ldr	r0, [fp, #24]
   250d8:	cmp	r0, #2
   250dc:	str	r1, [sp, #44]	; 0x2c
   250e0:	str	r1, [sp, #52]	; 0x34
   250e4:	blt	25194 <GetDataSlab+0x27d0>
   250e8:	ldr	r2, [sp, #40]	; 0x28
   250ec:	ldr	r6, [sp, #44]	; 0x2c
   250f0:	mov	r9, r4
   250f4:	mov	r0, #1
   250f8:	mov	r3, #0
   250fc:	mov	r1, r4
   25100:	mov	r7, r2
   25104:	str	r6, [sp, #52]	; 0x34
   25108:	ldr	r6, [fp, #16]
   2510c:	add	r5, sp, #64	; 0x40
   25110:	mov	r4, #0
   25114:	ldr	r6, [r6, r0, lsl #2]
   25118:	str	r2, [r5, r0, lsl #2]
   2511c:	sub	r5, r6, #1
   25120:	sub	r6, fp, #72	; 0x48
   25124:	str	r5, [r6, r0, lsl #2]
   25128:	ldr	ip, [r9, r0, lsl #2]
   2512c:	mov	r6, ip
   25130:	mul	r2, r6, r2
   25134:	ldr	r6, [r1, -r4, lsl #2]
   25138:	add	r4, r4, #1
   2513c:	cmp	r0, r4
   25140:	mul	r5, r5, r6
   25144:	bne	25130 <GetDataSlab+0x276c>
   25148:	add	r4, sp, #64	; 0x40
   2514c:	add	r1, r1, #4
   25150:	str	r2, [r4, r0, lsl #2]
   25154:	sub	r4, fp, #72	; 0x48
   25158:	str	r5, [r4, r0, lsl #2]
   2515c:	ldr	r4, [fp, #12]
   25160:	ldr	r5, [sp, #52]	; 0x34
   25164:	ldr	r4, [r4, r0, lsl #2]
   25168:	mla	r3, r4, r7, r3
   2516c:	ldr	r4, [fp, #20]
   25170:	mov	r7, r2
   25174:	mov	r2, ip
   25178:	ldr	r4, [r4, r0, lsl #2]
   2517c:	add	r0, r0, #1
   25180:	mul	r5, r4, r5
   25184:	ldr	r4, [fp, #24]
   25188:	str	r5, [sp, #52]	; 0x34
   2518c:	cmp	r0, r4
   25190:	bne	25108 <GetDataSlab+0x2744>
   25194:	ldr	r0, [sp, #48]	; 0x30
   25198:	cmp	lr, #1
   2519c:	add	r7, r0, r3
   251a0:	bne	3288c <GetDataSlab+0xfec8>
   251a4:	ldr	r0, [sp, #52]	; 0x34
   251a8:	ldr	r5, [fp, #12]
   251ac:	ldr	r4, [sp, #44]	; 0x2c
   251b0:	cmp	r0, #1
   251b4:	blt	248fc <GetDataSlab+0x1f38>
   251b8:	add	r0, sp, #104	; 0x68
   251bc:	ldr	r2, [sp, #56]	; 0x38
   251c0:	mov	sl, r5
   251c4:	add	sl, r5, #4
   251c8:	orr	r1, r0, #4
   251cc:	ldr	r0, [fp, #20]
   251d0:	add	r8, r0, #4
   251d4:	add	r0, sp, #64	; 0x40
   251d8:	orr	lr, r0, #4
   251dc:	ldr	r0, [fp, #24]
   251e0:	sub	r0, r0, #1
   251e4:	str	r0, [sp, #32]
   251e8:	sub	r0, fp, #72	; 0x48
   251ec:	orr	r0, r0, #4
   251f0:	str	r0, [sp, #28]
   251f4:	lsl	r0, r4, #3
   251f8:	str	r0, [sp, #36]	; 0x24
   251fc:	mov	r0, #0
   25200:	str	r0, [sp, #56]	; 0x38
   25204:	cmp	r4, #1
   25208:	blt	25238 <GetDataSlab+0x2874>
   2520c:	ldr	r0, [fp, #12]
   25210:	ldr	r6, [sp, #44]	; 0x2c
   25214:	mov	r4, r2
   25218:	ldr	r0, [r0]
   2521c:	add	r0, r7, r0
   25220:	ldrb	r5, [r0], #1
   25224:	subs	r6, r6, #1
   25228:	vmov	s0, r5
   2522c:	vcvt.f64.u32	d16, s0
   25230:	vstmia	r4!, {d16}
   25234:	bne	25220 <GetDataSlab+0x285c>
   25238:	ldr	r0, [sp, #40]	; 0x28
   2523c:	str	r2, [sp, #48]	; 0x30
   25240:	add	r7, r7, r0
   25244:	add	r3, r3, r0
   25248:	ldr	r0, [fp, #24]
   2524c:	cmp	r0, #2
   25250:	blt	252f4 <GetDataSlab+0x2930>
   25254:	ldr	ip, [sp, #32]
   25258:	mov	r0, #0
   2525c:	ldr	r4, [r1, r0]
   25260:	add	r4, r4, #1
   25264:	str	r4, [r1, r0]
   25268:	ldr	r5, [r8, r0]
   2526c:	sdiv	r6, r4, r5
   25270:	mls	r4, r6, r5, r4
   25274:	cmp	r4, #0
   25278:	bne	252e4 <GetDataSlab+0x2920>
   2527c:	mov	r4, #0
   25280:	str	r4, [r1, r0]
   25284:	ldr	r4, [lr, r0]
   25288:	sdiv	r5, r3, r4
   2528c:	mls	r6, r5, r4, r3
   25290:	cmp	r6, #0
   25294:	beq	252b8 <GetDataSlab+0x28f4>
   25298:	add	r5, sp, #64	; 0x40
   2529c:	ldr	r9, [sl, r0]
   252a0:	sub	r4, r4, r6
   252a4:	ldr	r5, [r5, r0]
   252a8:	mla	r4, r9, r5, r4
   252ac:	add	r3, r4, r3
   252b0:	add	r7, r7, r4
   252b4:	b	252d4 <GetDataSlab+0x2910>
   252b8:	ldr	r4, [sl, r0]
   252bc:	cmp	r4, #0
   252c0:	beq	252d4 <GetDataSlab+0x2910>
   252c4:	add	r5, sp, #64	; 0x40
   252c8:	ldr	r5, [r5, r0]
   252cc:	mla	r3, r5, r4, r3
   252d0:	mla	r7, r5, r4, r7
   252d4:	subs	ip, ip, #1
   252d8:	add	r0, r0, #4
   252dc:	bne	2525c <GetDataSlab+0x2898>
   252e0:	b	252f4 <GetDataSlab+0x2930>
   252e4:	ldr	r6, [sp, #28]
   252e8:	ldr	r0, [r6, r0]
   252ec:	add	r7, r7, r0
   252f0:	add	r3, r0, r3
   252f4:	ldr	r4, [sp, #44]	; 0x2c
   252f8:	ldr	r5, [sp, #56]	; 0x38
   252fc:	ldr	r0, [sp, #36]	; 0x24
   25300:	ldr	r2, [sp, #48]	; 0x30
   25304:	ldr	r6, [sp, #52]	; 0x34
   25308:	add	r5, r5, r4
   2530c:	add	r2, r2, r0
   25310:	mov	r0, #0
   25314:	cmp	r5, r6
   25318:	str	r5, [sp, #56]	; 0x38
   2531c:	blt	25204 <GetDataSlab+0x2840>
   25320:	b	24900 <GetDataSlab+0x1f3c>
   25324:	ldr	r0, [fp, #16]
   25328:	mov	r2, #0
   2532c:	ldr	lr, [r0]
   25330:	sub	r0, lr, #1
   25334:	str	r0, [fp, #-72]	; 0xffffffb8
   25338:	ldr	r0, [r4]
   2533c:	str	r0, [sp, #40]	; 0x28
   25340:	str	r0, [sp, #64]	; 0x40
   25344:	ldr	r0, [fp, #20]
   25348:	ldr	r1, [r0]
   2534c:	ldr	r0, [fp, #24]
   25350:	cmp	r0, #2
   25354:	str	r1, [sp, #44]	; 0x2c
   25358:	str	r1, [sp, #52]	; 0x34
   2535c:	blt	2540c <GetDataSlab+0x2a48>
   25360:	ldr	r6, [sp, #40]	; 0x28
   25364:	ldr	r0, [sp, #44]	; 0x2c
   25368:	mov	r9, r4
   2536c:	mov	r1, #1
   25370:	mov	r2, #0
   25374:	mov	r7, r4
   25378:	mov	r5, r6
   2537c:	str	r0, [sp, #52]	; 0x34
   25380:	ldr	r0, [fp, #16]
   25384:	add	r3, sp, #64	; 0x40
   25388:	mov	r4, #0
   2538c:	ldr	r0, [r0, r1, lsl #2]
   25390:	str	r6, [r3, r1, lsl #2]
   25394:	sub	r3, r0, #1
   25398:	sub	r0, fp, #72	; 0x48
   2539c:	str	r3, [r0, r1, lsl #2]
   253a0:	ldr	r9, [r9, r1, lsl #2]
   253a4:	mov	r0, r9
   253a8:	mul	r6, r0, r6
   253ac:	ldr	r0, [r7, -r4, lsl #2]
   253b0:	add	r4, r4, #1
   253b4:	cmp	r1, r4
   253b8:	mul	r3, r3, r0
   253bc:	bne	253a8 <GetDataSlab+0x29e4>
   253c0:	add	r0, sp, #64	; 0x40
   253c4:	add	r7, r7, #4
   253c8:	str	r6, [r0, r1, lsl #2]
   253cc:	sub	r0, fp, #72	; 0x48
   253d0:	str	r3, [r0, r1, lsl #2]
   253d4:	ldr	r3, [sp, #52]	; 0x34
   253d8:	ldr	r0, [ip, r1, lsl #2]
   253dc:	mla	r2, r0, r5, r2
   253e0:	ldr	r0, [fp, #20]
   253e4:	mov	r5, r6
   253e8:	mov	r6, r9
   253ec:	ldr	r9, [fp, #8]
   253f0:	ldr	r0, [r0, r1, lsl #2]
   253f4:	add	r1, r1, #1
   253f8:	mul	r3, r0, r3
   253fc:	ldr	r0, [fp, #24]
   25400:	str	r3, [sp, #52]	; 0x34
   25404:	cmp	r1, r0
   25408:	bne	25380 <GetDataSlab+0x29bc>
   2540c:	ldr	r0, [sp, #48]	; 0x30
   25410:	cmp	lr, #1
   25414:	add	r7, r0, r2, lsl #1
   25418:	bne	32a34 <GetDataSlab+0x10070>
   2541c:	ldr	r0, [sp, #52]	; 0x34
   25420:	ldr	r3, [sp, #44]	; 0x2c
   25424:	cmp	r0, #1
   25428:	blt	248fc <GetDataSlab+0x1f38>
   2542c:	add	r0, sp, #104	; 0x68
   25430:	ldr	r6, [sp, #56]	; 0x38
   25434:	orr	r1, r0, #4
   25438:	ldr	r0, [fp, #20]
   2543c:	add	r9, r0, #4
   25440:	add	r0, sp, #64	; 0x40
   25444:	orr	lr, r0, #4
   25448:	ldr	r0, [fp, #24]
   2544c:	sub	r0, r0, #1
   25450:	str	r0, [sp, #32]
   25454:	sub	r0, fp, #72	; 0x48
   25458:	orr	r0, r0, #4
   2545c:	str	r0, [sp, #28]
   25460:	lsl	r0, r3, #3
   25464:	str	r0, [sp, #48]	; 0x30
   25468:	ldr	r0, [ip], #4
   2546c:	str	r0, [sp, #36]	; 0x24
   25470:	mov	r0, #0
   25474:	str	r0, [sp, #60]	; 0x3c
   25478:	cmp	r3, #1
   2547c:	blt	254a8 <GetDataSlab+0x2ae4>
   25480:	ldr	r0, [sp, #36]	; 0x24
   25484:	ldr	r4, [sp, #44]	; 0x2c
   25488:	mov	r3, r6
   2548c:	add	r0, r7, r0, lsl #1
   25490:	ldrsh	r5, [r0], #2
   25494:	subs	r4, r4, #1
   25498:	vmov	s0, r5
   2549c:	vcvt.f64.s32	d16, s0
   254a0:	vstmia	r3!, {d16}
   254a4:	bne	25490 <GetDataSlab+0x2acc>
   254a8:	ldr	r0, [sp, #40]	; 0x28
   254ac:	str	r6, [sp, #56]	; 0x38
   254b0:	add	r6, sp, #64	; 0x40
   254b4:	add	r7, r7, r0, lsl #1
   254b8:	add	r2, r2, r0
   254bc:	ldr	r0, [fp, #24]
   254c0:	cmp	r0, #2
   254c4:	blt	25564 <GetDataSlab+0x2ba0>
   254c8:	ldr	sl, [sp, #32]
   254cc:	mov	r0, #0
   254d0:	ldr	r3, [r1, r0]
   254d4:	add	r3, r3, #1
   254d8:	str	r3, [r1, r0]
   254dc:	ldr	r4, [r9, r0]
   254e0:	sdiv	r5, r3, r4
   254e4:	mls	r3, r5, r4, r3
   254e8:	cmp	r3, #0
   254ec:	bne	25554 <GetDataSlab+0x2b90>
   254f0:	mov	r3, #0
   254f4:	str	r3, [r1, r0]
   254f8:	ldr	r3, [lr, r0]
   254fc:	sdiv	r4, r2, r3
   25500:	mls	r4, r4, r3, r2
   25504:	cmp	r4, #0
   25508:	beq	25528 <GetDataSlab+0x2b64>
   2550c:	ldr	r5, [r6, r0]
   25510:	ldr	r8, [ip, r0]
   25514:	sub	r3, r3, r4
   25518:	add	r6, sp, #64	; 0x40
   2551c:	mla	r3, r8, r5, r3
   25520:	add	r2, r3, r2
   25524:	b	25540 <GetDataSlab+0x2b7c>
   25528:	ldr	r3, [ip, r0]
   2552c:	cmp	r3, #0
   25530:	beq	25544 <GetDataSlab+0x2b80>
   25534:	ldr	r4, [r6, r0]
   25538:	mla	r2, r4, r3, r2
   2553c:	mul	r3, r4, r3
   25540:	add	r7, r7, r3, lsl #1
   25544:	subs	sl, sl, #1
   25548:	add	r0, r0, #4
   2554c:	bne	254d0 <GetDataSlab+0x2b0c>
   25550:	b	25564 <GetDataSlab+0x2ba0>
   25554:	ldr	r3, [sp, #28]
   25558:	ldr	r0, [r3, r0]
   2555c:	add	r7, r7, r0, lsl #1
   25560:	add	r2, r0, r2
   25564:	ldr	r3, [sp, #44]	; 0x2c
   25568:	ldr	r5, [sp, #60]	; 0x3c
   2556c:	ldr	r0, [sp, #48]	; 0x30
   25570:	ldr	r6, [sp, #56]	; 0x38
   25574:	ldr	r4, [sp, #52]	; 0x34
   25578:	add	r5, r5, r3
   2557c:	add	r6, r6, r0
   25580:	mov	r0, #0
   25584:	cmp	r5, r4
   25588:	str	r5, [sp, #60]	; 0x3c
   2558c:	blt	25478 <GetDataSlab+0x2ab4>
   25590:	b	24900 <GetDataSlab+0x1f3c>
   25594:	ldr	r0, [fp, #16]
   25598:	mov	r2, #0
   2559c:	ldr	lr, [r0]
   255a0:	sub	r0, lr, #1
   255a4:	str	r0, [fp, #-72]	; 0xffffffb8
   255a8:	ldr	r0, [r4]
   255ac:	str	r0, [sp, #40]	; 0x28
   255b0:	str	r0, [sp, #64]	; 0x40
   255b4:	ldr	r0, [fp, #20]
   255b8:	ldr	r1, [r0]
   255bc:	ldr	r0, [fp, #24]
   255c0:	cmp	r0, #2
   255c4:	str	r1, [sp, #44]	; 0x2c
   255c8:	str	r1, [sp, #52]	; 0x34
   255cc:	blt	2567c <GetDataSlab+0x2cb8>
   255d0:	ldr	r6, [sp, #40]	; 0x28
   255d4:	ldr	r0, [sp, #44]	; 0x2c
   255d8:	mov	r9, r4
   255dc:	mov	r1, #1
   255e0:	mov	r2, #0
   255e4:	mov	r7, r4
   255e8:	mov	r5, r6
   255ec:	str	r0, [sp, #52]	; 0x34
   255f0:	ldr	r0, [fp, #16]
   255f4:	add	r3, sp, #64	; 0x40
   255f8:	mov	r4, #0
   255fc:	ldr	r0, [r0, r1, lsl #2]
   25600:	str	r6, [r3, r1, lsl #2]
   25604:	sub	r3, r0, #1
   25608:	sub	r0, fp, #72	; 0x48
   2560c:	str	r3, [r0, r1, lsl #2]
   25610:	ldr	r9, [r9, r1, lsl #2]
   25614:	mov	r0, r9
   25618:	mul	r6, r0, r6
   2561c:	ldr	r0, [r7, -r4, lsl #2]
   25620:	add	r4, r4, #1
   25624:	cmp	r1, r4
   25628:	mul	r3, r3, r0
   2562c:	bne	25618 <GetDataSlab+0x2c54>
   25630:	add	r0, sp, #64	; 0x40
   25634:	add	r7, r7, #4
   25638:	str	r6, [r0, r1, lsl #2]
   2563c:	sub	r0, fp, #72	; 0x48
   25640:	str	r3, [r0, r1, lsl #2]
   25644:	ldr	r3, [sp, #52]	; 0x34
   25648:	ldr	r0, [ip, r1, lsl #2]
   2564c:	mla	r2, r0, r5, r2
   25650:	ldr	r0, [fp, #20]
   25654:	mov	r5, r6
   25658:	mov	r6, r9
   2565c:	ldr	r9, [fp, #8]
   25660:	ldr	r0, [r0, r1, lsl #2]
   25664:	add	r1, r1, #1
   25668:	mul	r3, r0, r3
   2566c:	ldr	r0, [fp, #24]
   25670:	str	r3, [sp, #52]	; 0x34
   25674:	cmp	r1, r0
   25678:	bne	255f0 <GetDataSlab+0x2c2c>
   2567c:	ldr	r0, [sp, #48]	; 0x30
   25680:	cmp	lr, #1
   25684:	add	r7, r0, r2, lsl #1
   25688:	bne	32bd4 <GetDataSlab+0x10210>
   2568c:	ldr	r0, [sp, #52]	; 0x34
   25690:	ldr	r3, [sp, #44]	; 0x2c
   25694:	cmp	r0, #1
   25698:	blt	248fc <GetDataSlab+0x1f38>
   2569c:	add	r0, sp, #104	; 0x68
   256a0:	ldr	r6, [sp, #56]	; 0x38
   256a4:	orr	r1, r0, #4
   256a8:	ldr	r0, [fp, #20]
   256ac:	add	r9, r0, #4
   256b0:	add	r0, sp, #64	; 0x40
   256b4:	orr	lr, r0, #4
   256b8:	ldr	r0, [fp, #24]
   256bc:	sub	r0, r0, #1
   256c0:	str	r0, [sp, #32]
   256c4:	sub	r0, fp, #72	; 0x48
   256c8:	orr	r0, r0, #4
   256cc:	str	r0, [sp, #28]
   256d0:	lsl	r0, r3, #3
   256d4:	str	r0, [sp, #48]	; 0x30
   256d8:	ldr	r0, [ip], #4
   256dc:	str	r0, [sp, #36]	; 0x24
   256e0:	mov	r0, #0
   256e4:	str	r0, [sp, #60]	; 0x3c
   256e8:	cmp	r3, #1
   256ec:	blt	25718 <GetDataSlab+0x2d54>
   256f0:	ldr	r0, [sp, #36]	; 0x24
   256f4:	ldr	r4, [sp, #44]	; 0x2c
   256f8:	mov	r3, r6
   256fc:	add	r0, r7, r0, lsl #1
   25700:	ldrh	r5, [r0], #2
   25704:	subs	r4, r4, #1
   25708:	vmov	s0, r5
   2570c:	vcvt.f64.u32	d16, s0
   25710:	vstmia	r3!, {d16}
   25714:	bne	25700 <GetDataSlab+0x2d3c>
   25718:	ldr	r0, [sp, #40]	; 0x28
   2571c:	str	r6, [sp, #56]	; 0x38
   25720:	add	r6, sp, #64	; 0x40
   25724:	add	r7, r7, r0, lsl #1
   25728:	add	r2, r2, r0
   2572c:	ldr	r0, [fp, #24]
   25730:	cmp	r0, #2
   25734:	blt	257d4 <GetDataSlab+0x2e10>
   25738:	ldr	sl, [sp, #32]
   2573c:	mov	r0, #0
   25740:	ldr	r3, [r1, r0]
   25744:	add	r3, r3, #1
   25748:	str	r3, [r1, r0]
   2574c:	ldr	r4, [r9, r0]
   25750:	sdiv	r5, r3, r4
   25754:	mls	r3, r5, r4, r3
   25758:	cmp	r3, #0
   2575c:	bne	257c4 <GetDataSlab+0x2e00>
   25760:	mov	r3, #0
   25764:	str	r3, [r1, r0]
   25768:	ldr	r3, [lr, r0]
   2576c:	sdiv	r4, r2, r3
   25770:	mls	r4, r4, r3, r2
   25774:	cmp	r4, #0
   25778:	beq	25798 <GetDataSlab+0x2dd4>
   2577c:	ldr	r5, [r6, r0]
   25780:	ldr	r8, [ip, r0]
   25784:	sub	r3, r3, r4
   25788:	add	r6, sp, #64	; 0x40
   2578c:	mla	r3, r8, r5, r3
   25790:	add	r2, r3, r2
   25794:	b	257b0 <GetDataSlab+0x2dec>
   25798:	ldr	r3, [ip, r0]
   2579c:	cmp	r3, #0
   257a0:	beq	257b4 <GetDataSlab+0x2df0>
   257a4:	ldr	r4, [r6, r0]
   257a8:	mla	r2, r4, r3, r2
   257ac:	mul	r3, r4, r3
   257b0:	add	r7, r7, r3, lsl #1
   257b4:	subs	sl, sl, #1
   257b8:	add	r0, r0, #4
   257bc:	bne	25740 <GetDataSlab+0x2d7c>
   257c0:	b	257d4 <GetDataSlab+0x2e10>
   257c4:	ldr	r3, [sp, #28]
   257c8:	ldr	r0, [r3, r0]
   257cc:	add	r7, r7, r0, lsl #1
   257d0:	add	r2, r0, r2
   257d4:	ldr	r3, [sp, #44]	; 0x2c
   257d8:	ldr	r5, [sp, #60]	; 0x3c
   257dc:	ldr	r0, [sp, #48]	; 0x30
   257e0:	ldr	r6, [sp, #56]	; 0x38
   257e4:	ldr	r4, [sp, #52]	; 0x34
   257e8:	add	r5, r5, r3
   257ec:	add	r6, r6, r0
   257f0:	mov	r0, #0
   257f4:	cmp	r5, r4
   257f8:	str	r5, [sp, #60]	; 0x3c
   257fc:	blt	256e8 <GetDataSlab+0x2d24>
   25800:	b	24900 <GetDataSlab+0x1f3c>
   25804:	ldr	r0, [fp, #16]
   25808:	mov	r3, #0
   2580c:	ldr	r9, [r0]
   25810:	sub	r0, r9, #1
   25814:	str	r0, [fp, #-72]	; 0xffffffb8
   25818:	ldr	r0, [r4]
   2581c:	str	r0, [sp, #40]	; 0x28
   25820:	str	r0, [sp, #64]	; 0x40
   25824:	ldr	r0, [fp, #20]
   25828:	ldr	r1, [r0]
   2582c:	ldr	r0, [fp, #24]
   25830:	cmp	r0, #2
   25834:	str	r1, [sp, #44]	; 0x2c
   25838:	str	r1, [sp, #52]	; 0x34
   2583c:	blt	258e8 <GetDataSlab+0x2f24>
   25840:	ldr	r7, [sp, #40]	; 0x28
   25844:	ldr	r0, [sp, #44]	; 0x2c
   25848:	ldr	r2, [fp, #8]
   2584c:	mov	r1, #1
   25850:	mov	r3, #0
   25854:	mov	r6, r7
   25858:	str	r0, [sp, #52]	; 0x34
   2585c:	ldr	r0, [fp, #16]
   25860:	add	r5, sp, #64	; 0x40
   25864:	mov	r4, #0
   25868:	ldr	r0, [r0, r1, lsl #2]
   2586c:	str	r7, [r5, r1, lsl #2]
   25870:	sub	r5, fp, #72	; 0x48
   25874:	sub	r0, r0, #1
   25878:	str	r0, [r5, r1, lsl #2]
   2587c:	ldr	r5, [fp, #8]
   25880:	ldr	lr, [r5, r1, lsl #2]
   25884:	mov	r5, lr
   25888:	mul	r7, r5, r7
   2588c:	ldr	r5, [r2, -r4, lsl #2]
   25890:	add	r4, r4, #1
   25894:	cmp	r1, r4
   25898:	mul	r0, r0, r5
   2589c:	bne	25888 <GetDataSlab+0x2ec4>
   258a0:	add	r4, sp, #64	; 0x40
   258a4:	add	r2, r2, #4
   258a8:	str	r7, [r4, r1, lsl #2]
   258ac:	sub	r4, fp, #72	; 0x48
   258b0:	str	r0, [r4, r1, lsl #2]
   258b4:	ldr	r4, [sp, #52]	; 0x34
   258b8:	ldr	r0, [ip, r1, lsl #2]
   258bc:	mla	r3, r0, r6, r3
   258c0:	ldr	r0, [fp, #20]
   258c4:	mov	r6, r7
   258c8:	mov	r7, lr
   258cc:	ldr	r0, [r0, r1, lsl #2]
   258d0:	add	r1, r1, #1
   258d4:	mul	r4, r0, r4
   258d8:	ldr	r0, [fp, #24]
   258dc:	str	r4, [sp, #52]	; 0x34
   258e0:	cmp	r1, r0
   258e4:	bne	2585c <GetDataSlab+0x2e98>
   258e8:	ldr	r0, [sp, #48]	; 0x30
   258ec:	ldr	r4, [sp, #56]	; 0x38
   258f0:	cmp	r9, #1
   258f4:	add	r7, r0, r3, lsl #2
   258f8:	bne	32d74 <GetDataSlab+0x103b0>
   258fc:	ldr	r0, [sp, #52]	; 0x34
   25900:	cmp	r0, #1
   25904:	blt	248fc <GetDataSlab+0x1f38>
   25908:	add	r0, sp, #104	; 0x68
   2590c:	ldr	r6, [sp, #44]	; 0x2c
   25910:	add	r9, ip, #4
   25914:	mov	r2, r4
   25918:	orr	r1, r0, #4
   2591c:	ldr	r0, [fp, #20]
   25920:	add	sl, r0, #4
   25924:	add	r0, sp, #64	; 0x40
   25928:	orr	r8, r0, #4
   2592c:	ldr	r0, [fp, #24]
   25930:	sub	r0, r0, #1
   25934:	str	r0, [sp, #32]
   25938:	sub	r0, fp, #72	; 0x48
   2593c:	orr	r0, r0, #4
   25940:	str	r0, [sp, #28]
   25944:	lsl	r0, r6, #3
   25948:	str	r0, [sp, #36]	; 0x24
   2594c:	mov	r0, #0
   25950:	str	r0, [sp, #56]	; 0x38
   25954:	cmp	r6, #1
   25958:	blt	25988 <GetDataSlab+0x2fc4>
   2595c:	ldr	r0, [fp, #12]
   25960:	ldr	r6, [sp, #44]	; 0x2c
   25964:	mov	r4, r2
   25968:	ldr	r0, [r0]
   2596c:	add	r0, r7, r0, lsl #2
   25970:	ldr	r5, [r0], #4
   25974:	subs	r6, r6, #1
   25978:	vmov	s0, r5
   2597c:	vcvt.f64.s32	d16, s0
   25980:	vstmia	r4!, {d16}
   25984:	bne	25970 <GetDataSlab+0x2fac>
   25988:	ldr	r0, [sp, #40]	; 0x28
   2598c:	str	r2, [sp, #48]	; 0x30
   25990:	add	r7, r7, r0, lsl #2
   25994:	add	r3, r3, r0
   25998:	ldr	r0, [fp, #24]
   2599c:	cmp	r0, #2
   259a0:	blt	25a44 <GetDataSlab+0x3080>
   259a4:	ldr	ip, [sp, #32]
   259a8:	mov	r0, #0
   259ac:	ldr	r4, [r1, r0]
   259b0:	add	r4, r4, #1
   259b4:	str	r4, [r1, r0]
   259b8:	ldr	r5, [sl, r0]
   259bc:	sdiv	r6, r4, r5
   259c0:	mls	r4, r6, r5, r4
   259c4:	cmp	r4, #0
   259c8:	bne	25a34 <GetDataSlab+0x3070>
   259cc:	ldr	r4, [r8, r0]
   259d0:	mov	r6, #0
   259d4:	str	r6, [r1, r0]
   259d8:	sdiv	r5, r3, r4
   259dc:	mls	r6, r5, r4, r3
   259e0:	cmp	r6, #0
   259e4:	beq	25a04 <GetDataSlab+0x3040>
   259e8:	add	r5, sp, #64	; 0x40
   259ec:	ldr	lr, [r9, r0]
   259f0:	sub	r4, r4, r6
   259f4:	ldr	r5, [r5, r0]
   259f8:	mla	r6, lr, r5, r4
   259fc:	add	r3, r6, r3
   25a00:	b	25a20 <GetDataSlab+0x305c>
   25a04:	ldr	r4, [r9, r0]
   25a08:	cmp	r4, #0
   25a0c:	beq	25a24 <GetDataSlab+0x3060>
   25a10:	add	r6, sp, #64	; 0x40
   25a14:	ldr	r6, [r6, r0]
   25a18:	mla	r3, r6, r4, r3
   25a1c:	mul	r6, r6, r4
   25a20:	add	r7, r7, r6, lsl #2
   25a24:	subs	ip, ip, #1
   25a28:	add	r0, r0, #4
   25a2c:	bne	259ac <GetDataSlab+0x2fe8>
   25a30:	b	25a44 <GetDataSlab+0x3080>
   25a34:	ldr	r6, [sp, #28]
   25a38:	ldr	r0, [r6, r0]
   25a3c:	add	r7, r7, r0, lsl #2
   25a40:	add	r3, r0, r3
   25a44:	ldr	r6, [sp, #44]	; 0x2c
   25a48:	ldr	r4, [sp, #56]	; 0x38
   25a4c:	ldr	r0, [sp, #36]	; 0x24
   25a50:	ldr	r2, [sp, #48]	; 0x30
   25a54:	ldr	r5, [sp, #52]	; 0x34
   25a58:	add	r4, r4, r6
   25a5c:	add	r2, r2, r0
   25a60:	mov	r0, #0
   25a64:	cmp	r4, r5
   25a68:	str	r4, [sp, #56]	; 0x38
   25a6c:	blt	25954 <GetDataSlab+0x2f90>
   25a70:	b	24900 <GetDataSlab+0x1f3c>
   25a74:	ldr	r0, [fp, #16]
   25a78:	mov	r3, #0
   25a7c:	ldr	r9, [r0]
   25a80:	sub	r0, r9, #1
   25a84:	str	r0, [fp, #-72]	; 0xffffffb8
   25a88:	ldr	r0, [r4]
   25a8c:	str	r0, [sp, #40]	; 0x28
   25a90:	str	r0, [sp, #64]	; 0x40
   25a94:	ldr	r0, [fp, #20]
   25a98:	ldr	r1, [r0]
   25a9c:	ldr	r0, [fp, #24]
   25aa0:	cmp	r0, #2
   25aa4:	str	r1, [sp, #44]	; 0x2c
   25aa8:	str	r1, [sp, #52]	; 0x34
   25aac:	blt	25b58 <GetDataSlab+0x3194>
   25ab0:	ldr	r7, [sp, #40]	; 0x28
   25ab4:	ldr	r0, [sp, #44]	; 0x2c
   25ab8:	ldr	r2, [fp, #8]
   25abc:	mov	r1, #1
   25ac0:	mov	r3, #0
   25ac4:	mov	r6, r7
   25ac8:	str	r0, [sp, #52]	; 0x34
   25acc:	ldr	r0, [fp, #16]
   25ad0:	add	r5, sp, #64	; 0x40
   25ad4:	mov	r4, #0
   25ad8:	ldr	r0, [r0, r1, lsl #2]
   25adc:	str	r7, [r5, r1, lsl #2]
   25ae0:	sub	r5, fp, #72	; 0x48
   25ae4:	sub	r0, r0, #1
   25ae8:	str	r0, [r5, r1, lsl #2]
   25aec:	ldr	r5, [fp, #8]
   25af0:	ldr	lr, [r5, r1, lsl #2]
   25af4:	mov	r5, lr
   25af8:	mul	r7, r5, r7
   25afc:	ldr	r5, [r2, -r4, lsl #2]
   25b00:	add	r4, r4, #1
   25b04:	cmp	r1, r4
   25b08:	mul	r0, r0, r5
   25b0c:	bne	25af8 <GetDataSlab+0x3134>
   25b10:	add	r4, sp, #64	; 0x40
   25b14:	add	r2, r2, #4
   25b18:	str	r7, [r4, r1, lsl #2]
   25b1c:	sub	r4, fp, #72	; 0x48
   25b20:	str	r0, [r4, r1, lsl #2]
   25b24:	ldr	r4, [sp, #52]	; 0x34
   25b28:	ldr	r0, [ip, r1, lsl #2]
   25b2c:	mla	r3, r0, r6, r3
   25b30:	ldr	r0, [fp, #20]
   25b34:	mov	r6, r7
   25b38:	mov	r7, lr
   25b3c:	ldr	r0, [r0, r1, lsl #2]
   25b40:	add	r1, r1, #1
   25b44:	mul	r4, r0, r4
   25b48:	ldr	r0, [fp, #24]
   25b4c:	str	r4, [sp, #52]	; 0x34
   25b50:	cmp	r1, r0
   25b54:	bne	25acc <GetDataSlab+0x3108>
   25b58:	ldr	r0, [sp, #48]	; 0x30
   25b5c:	ldr	r4, [sp, #56]	; 0x38
   25b60:	cmp	r9, #1
   25b64:	add	r7, r0, r3, lsl #2
   25b68:	bne	32f20 <GetDataSlab+0x1055c>
   25b6c:	ldr	r0, [sp, #52]	; 0x34
   25b70:	cmp	r0, #1
   25b74:	blt	248fc <GetDataSlab+0x1f38>
   25b78:	add	r0, sp, #104	; 0x68
   25b7c:	ldr	r6, [sp, #44]	; 0x2c
   25b80:	add	r9, ip, #4
   25b84:	mov	r2, r4
   25b88:	orr	r1, r0, #4
   25b8c:	ldr	r0, [fp, #20]
   25b90:	add	sl, r0, #4
   25b94:	add	r0, sp, #64	; 0x40
   25b98:	orr	r8, r0, #4
   25b9c:	ldr	r0, [fp, #24]
   25ba0:	sub	r0, r0, #1
   25ba4:	str	r0, [sp, #32]
   25ba8:	sub	r0, fp, #72	; 0x48
   25bac:	orr	r0, r0, #4
   25bb0:	str	r0, [sp, #28]
   25bb4:	lsl	r0, r6, #3
   25bb8:	str	r0, [sp, #36]	; 0x24
   25bbc:	mov	r0, #0
   25bc0:	str	r0, [sp, #56]	; 0x38
   25bc4:	cmp	r6, #1
   25bc8:	blt	25bf8 <GetDataSlab+0x3234>
   25bcc:	ldr	r0, [fp, #12]
   25bd0:	ldr	r6, [sp, #44]	; 0x2c
   25bd4:	mov	r4, r2
   25bd8:	ldr	r0, [r0]
   25bdc:	add	r0, r7, r0, lsl #2
   25be0:	ldr	r5, [r0], #4
   25be4:	subs	r6, r6, #1
   25be8:	vmov	s0, r5
   25bec:	vcvt.f64.u32	d16, s0
   25bf0:	vstmia	r4!, {d16}
   25bf4:	bne	25be0 <GetDataSlab+0x321c>
   25bf8:	ldr	r0, [sp, #40]	; 0x28
   25bfc:	str	r2, [sp, #48]	; 0x30
   25c00:	add	r7, r7, r0, lsl #2
   25c04:	add	r3, r3, r0
   25c08:	ldr	r0, [fp, #24]
   25c0c:	cmp	r0, #2
   25c10:	blt	25cb4 <GetDataSlab+0x32f0>
   25c14:	ldr	ip, [sp, #32]
   25c18:	mov	r0, #0
   25c1c:	ldr	r4, [r1, r0]
   25c20:	add	r4, r4, #1
   25c24:	str	r4, [r1, r0]
   25c28:	ldr	r5, [sl, r0]
   25c2c:	sdiv	r6, r4, r5
   25c30:	mls	r4, r6, r5, r4
   25c34:	cmp	r4, #0
   25c38:	bne	25ca4 <GetDataSlab+0x32e0>
   25c3c:	ldr	r4, [r8, r0]
   25c40:	mov	r6, #0
   25c44:	str	r6, [r1, r0]
   25c48:	sdiv	r5, r3, r4
   25c4c:	mls	r6, r5, r4, r3
   25c50:	cmp	r6, #0
   25c54:	beq	25c74 <GetDataSlab+0x32b0>
   25c58:	add	r5, sp, #64	; 0x40
   25c5c:	ldr	lr, [r9, r0]
   25c60:	sub	r4, r4, r6
   25c64:	ldr	r5, [r5, r0]
   25c68:	mla	r6, lr, r5, r4
   25c6c:	add	r3, r6, r3
   25c70:	b	25c90 <GetDataSlab+0x32cc>
   25c74:	ldr	r4, [r9, r0]
   25c78:	cmp	r4, #0
   25c7c:	beq	25c94 <GetDataSlab+0x32d0>
   25c80:	add	r6, sp, #64	; 0x40
   25c84:	ldr	r6, [r6, r0]
   25c88:	mla	r3, r6, r4, r3
   25c8c:	mul	r6, r6, r4
   25c90:	add	r7, r7, r6, lsl #2
   25c94:	subs	ip, ip, #1
   25c98:	add	r0, r0, #4
   25c9c:	bne	25c1c <GetDataSlab+0x3258>
   25ca0:	b	25cb4 <GetDataSlab+0x32f0>
   25ca4:	ldr	r6, [sp, #28]
   25ca8:	ldr	r0, [r6, r0]
   25cac:	add	r7, r7, r0, lsl #2
   25cb0:	add	r3, r0, r3
   25cb4:	ldr	r6, [sp, #44]	; 0x2c
   25cb8:	ldr	r4, [sp, #56]	; 0x38
   25cbc:	ldr	r0, [sp, #36]	; 0x24
   25cc0:	ldr	r2, [sp, #48]	; 0x30
   25cc4:	ldr	r5, [sp, #52]	; 0x34
   25cc8:	add	r4, r4, r6
   25ccc:	add	r2, r2, r0
   25cd0:	mov	r0, #0
   25cd4:	cmp	r4, r5
   25cd8:	str	r4, [sp, #56]	; 0x38
   25cdc:	blt	25bc4 <GetDataSlab+0x3200>
   25ce0:	b	24900 <GetDataSlab+0x1f3c>
   25ce4:	ldr	r0, [fp, #16]
   25ce8:	mov	r2, #0
   25cec:	ldr	lr, [r0]
   25cf0:	sub	r0, lr, #1
   25cf4:	str	r0, [fp, #-72]	; 0xffffffb8
   25cf8:	ldr	r0, [r4]
   25cfc:	str	r0, [sp, #40]	; 0x28
   25d00:	str	r0, [sp, #64]	; 0x40
   25d04:	ldr	r0, [fp, #20]
   25d08:	ldr	r1, [r0]
   25d0c:	ldr	r0, [fp, #24]
   25d10:	cmp	r0, #2
   25d14:	str	r1, [sp, #44]	; 0x2c
   25d18:	str	r1, [sp, #52]	; 0x34
   25d1c:	blt	25dcc <GetDataSlab+0x3408>
   25d20:	ldr	r6, [sp, #40]	; 0x28
   25d24:	ldr	r0, [sp, #44]	; 0x2c
   25d28:	mov	r9, r4
   25d2c:	mov	r1, #1
   25d30:	mov	r2, #0
   25d34:	mov	r7, r4
   25d38:	mov	r5, r6
   25d3c:	str	r0, [sp, #52]	; 0x34
   25d40:	ldr	r0, [fp, #16]
   25d44:	add	r3, sp, #64	; 0x40
   25d48:	mov	r4, #0
   25d4c:	ldr	r0, [r0, r1, lsl #2]
   25d50:	str	r6, [r3, r1, lsl #2]
   25d54:	sub	r3, r0, #1
   25d58:	sub	r0, fp, #72	; 0x48
   25d5c:	str	r3, [r0, r1, lsl #2]
   25d60:	ldr	r9, [r9, r1, lsl #2]
   25d64:	mov	r0, r9
   25d68:	mul	r6, r0, r6
   25d6c:	ldr	r0, [r7, -r4, lsl #2]
   25d70:	add	r4, r4, #1
   25d74:	cmp	r1, r4
   25d78:	mul	r3, r3, r0
   25d7c:	bne	25d68 <GetDataSlab+0x33a4>
   25d80:	add	r0, sp, #64	; 0x40
   25d84:	add	r7, r7, #4
   25d88:	str	r6, [r0, r1, lsl #2]
   25d8c:	sub	r0, fp, #72	; 0x48
   25d90:	str	r3, [r0, r1, lsl #2]
   25d94:	ldr	r3, [sp, #52]	; 0x34
   25d98:	ldr	r0, [ip, r1, lsl #2]
   25d9c:	mla	r2, r0, r5, r2
   25da0:	ldr	r0, [fp, #20]
   25da4:	mov	r5, r6
   25da8:	mov	r6, r9
   25dac:	ldr	r9, [fp, #8]
   25db0:	ldr	r0, [r0, r1, lsl #2]
   25db4:	add	r1, r1, #1
   25db8:	mul	r3, r0, r3
   25dbc:	ldr	r0, [fp, #24]
   25dc0:	str	r3, [sp, #52]	; 0x34
   25dc4:	cmp	r1, r0
   25dc8:	bne	25d40 <GetDataSlab+0x337c>
   25dcc:	ldr	r0, [sp, #48]	; 0x30
   25dd0:	cmp	lr, #1
   25dd4:	add	r7, r0, r2, lsl #2
   25dd8:	bne	330cc <GetDataSlab+0x10708>
   25ddc:	ldr	r0, [sp, #52]	; 0x34
   25de0:	ldr	r3, [sp, #44]	; 0x2c
   25de4:	cmp	r0, #1
   25de8:	blt	248fc <GetDataSlab+0x1f38>
   25dec:	add	r0, sp, #104	; 0x68
   25df0:	mov	r9, ip
   25df4:	ldr	r5, [sp, #56]	; 0x38
   25df8:	orr	r1, r0, #4
   25dfc:	ldr	r0, [fp, #20]
   25e00:	add	ip, r0, #4
   25e04:	add	r0, sp, #64	; 0x40
   25e08:	orr	r8, r0, #4
   25e0c:	ldr	r0, [fp, #24]
   25e10:	sub	r0, r0, #1
   25e14:	str	r0, [sp, #32]
   25e18:	sub	r0, fp, #72	; 0x48
   25e1c:	orr	r0, r0, #4
   25e20:	str	r0, [sp, #28]
   25e24:	lsl	r0, r3, #3
   25e28:	str	r0, [sp, #48]	; 0x30
   25e2c:	ldr	r0, [r9], #4
   25e30:	str	r0, [sp, #36]	; 0x24
   25e34:	mov	r0, #0
   25e38:	str	r0, [sp, #60]	; 0x3c
   25e3c:	cmp	r3, #1
   25e40:	blt	25e70 <GetDataSlab+0x34ac>
   25e44:	ldr	r0, [sp, #36]	; 0x24
   25e48:	ldr	r4, [sp, #44]	; 0x2c
   25e4c:	mov	r3, r5
   25e50:	add	r0, r7, r0, lsl #2
   25e54:	vldr	s0, [r0]
   25e58:	add	r0, r0, #4
   25e5c:	subs	r4, r4, #1
   25e60:	vcvt.f64.f32	d16, s0
   25e64:	vstr	d16, [r3]
   25e68:	add	r3, r3, #8
   25e6c:	bne	25e54 <GetDataSlab+0x3490>
   25e70:	ldr	r0, [sp, #40]	; 0x28
   25e74:	str	r5, [sp, #56]	; 0x38
   25e78:	add	r7, r7, r0, lsl #2
   25e7c:	add	r2, r2, r0
   25e80:	ldr	r0, [fp, #24]
   25e84:	cmp	r0, #2
   25e88:	blt	25f2c <GetDataSlab+0x3568>
   25e8c:	ldr	sl, [sp, #32]
   25e90:	mov	r0, #0
   25e94:	ldr	r3, [r1, r0]
   25e98:	add	r3, r3, #1
   25e9c:	str	r3, [r1, r0]
   25ea0:	ldr	r4, [ip, r0]
   25ea4:	sdiv	lr, r3, r4
   25ea8:	mls	r3, lr, r4, r3
   25eac:	cmp	r3, #0
   25eb0:	bne	25f1c <GetDataSlab+0x3558>
   25eb4:	mov	r3, #0
   25eb8:	str	r3, [r1, r0]
   25ebc:	ldr	r3, [r8, r0]
   25ec0:	sdiv	r4, r2, r3
   25ec4:	mls	r4, r4, r3, r2
   25ec8:	cmp	r4, #0
   25ecc:	beq	25eec <GetDataSlab+0x3528>
   25ed0:	add	r6, sp, #64	; 0x40
   25ed4:	sub	r3, r3, r4
   25ed8:	ldr	r5, [r6, r0]
   25edc:	ldr	r6, [r9, r0]
   25ee0:	mla	r3, r6, r5, r3
   25ee4:	add	r2, r3, r2
   25ee8:	b	25f08 <GetDataSlab+0x3544>
   25eec:	ldr	r3, [r9, r0]
   25ef0:	cmp	r3, #0
   25ef4:	beq	25f0c <GetDataSlab+0x3548>
   25ef8:	add	r6, sp, #64	; 0x40
   25efc:	ldr	r6, [r6, r0]
   25f00:	mla	r2, r6, r3, r2
   25f04:	mul	r3, r6, r3
   25f08:	add	r7, r7, r3, lsl #2
   25f0c:	subs	sl, sl, #1
   25f10:	add	r0, r0, #4
   25f14:	bne	25e94 <GetDataSlab+0x34d0>
   25f18:	b	25f2c <GetDataSlab+0x3568>
   25f1c:	ldr	r3, [sp, #28]
   25f20:	ldr	r0, [r3, r0]
   25f24:	add	r7, r7, r0, lsl #2
   25f28:	add	r2, r0, r2
   25f2c:	ldr	r3, [sp, #44]	; 0x2c
   25f30:	ldr	r4, [sp, #60]	; 0x3c
   25f34:	ldr	r0, [sp, #48]	; 0x30
   25f38:	ldr	r5, [sp, #56]	; 0x38
   25f3c:	ldr	r6, [sp, #52]	; 0x34
   25f40:	add	r4, r4, r3
   25f44:	add	r5, r5, r0
   25f48:	mov	r0, #0
   25f4c:	cmp	r4, r6
   25f50:	str	r4, [sp, #60]	; 0x3c
   25f54:	blt	25e3c <GetDataSlab+0x3478>
   25f58:	b	24900 <GetDataSlab+0x1f3c>
   25f5c:	ldr	r0, [fp, #16]
   25f60:	mov	r2, #0
   25f64:	ldr	lr, [r0]
   25f68:	sub	r0, lr, #1
   25f6c:	str	r0, [fp, #-72]	; 0xffffffb8
   25f70:	ldr	r0, [r4]
   25f74:	str	r0, [sp, #40]	; 0x28
   25f78:	str	r0, [sp, #64]	; 0x40
   25f7c:	ldr	r0, [fp, #20]
   25f80:	ldr	r1, [r0]
   25f84:	ldr	r0, [fp, #24]
   25f88:	cmp	r0, #2
   25f8c:	str	r1, [sp, #44]	; 0x2c
   25f90:	str	r1, [sp, #52]	; 0x34
   25f94:	blt	26044 <GetDataSlab+0x3680>
   25f98:	ldr	r6, [sp, #40]	; 0x28
   25f9c:	ldr	r0, [sp, #44]	; 0x2c
   25fa0:	mov	r9, r4
   25fa4:	mov	r1, #1
   25fa8:	mov	r2, #0
   25fac:	mov	r7, r4
   25fb0:	mov	r5, r6
   25fb4:	str	r0, [sp, #52]	; 0x34
   25fb8:	ldr	r0, [fp, #16]
   25fbc:	add	r3, sp, #64	; 0x40
   25fc0:	mov	r4, #0
   25fc4:	ldr	r0, [r0, r1, lsl #2]
   25fc8:	str	r6, [r3, r1, lsl #2]
   25fcc:	sub	r3, r0, #1
   25fd0:	sub	r0, fp, #72	; 0x48
   25fd4:	str	r3, [r0, r1, lsl #2]
   25fd8:	ldr	r9, [r9, r1, lsl #2]
   25fdc:	mov	r0, r9
   25fe0:	mul	r6, r0, r6
   25fe4:	ldr	r0, [r7, -r4, lsl #2]
   25fe8:	add	r4, r4, #1
   25fec:	cmp	r1, r4
   25ff0:	mul	r3, r3, r0
   25ff4:	bne	25fe0 <GetDataSlab+0x361c>
   25ff8:	add	r0, sp, #64	; 0x40
   25ffc:	add	r7, r7, #4
   26000:	str	r6, [r0, r1, lsl #2]
   26004:	sub	r0, fp, #72	; 0x48
   26008:	str	r3, [r0, r1, lsl #2]
   2600c:	ldr	r3, [sp, #52]	; 0x34
   26010:	ldr	r0, [ip, r1, lsl #2]
   26014:	mla	r2, r0, r5, r2
   26018:	ldr	r0, [fp, #20]
   2601c:	mov	r5, r6
   26020:	mov	r6, r9
   26024:	ldr	r9, [fp, #8]
   26028:	ldr	r0, [r0, r1, lsl #2]
   2602c:	add	r1, r1, #1
   26030:	mul	r3, r0, r3
   26034:	ldr	r0, [fp, #24]
   26038:	str	r3, [sp, #52]	; 0x34
   2603c:	cmp	r1, r0
   26040:	bne	25fb8 <GetDataSlab+0x35f4>
   26044:	ldr	r0, [sp, #48]	; 0x30
   26048:	cmp	lr, #1
   2604c:	add	r7, r0, r2, lsl #3
   26050:	bne	33270 <GetDataSlab+0x108ac>
   26054:	ldr	r0, [sp, #52]	; 0x34
   26058:	ldr	r3, [sp, #44]	; 0x2c
   2605c:	cmp	r0, #1
   26060:	blt	248fc <GetDataSlab+0x1f38>
   26064:	add	r0, sp, #104	; 0x68
   26068:	mov	r9, ip
   2606c:	ldr	r5, [sp, #56]	; 0x38
   26070:	orr	r1, r0, #4
   26074:	ldr	r0, [fp, #20]
   26078:	add	ip, r0, #4
   2607c:	add	r0, sp, #64	; 0x40
   26080:	orr	r8, r0, #4
   26084:	ldr	r0, [fp, #24]
   26088:	sub	r0, r0, #1
   2608c:	str	r0, [sp, #32]
   26090:	sub	r0, fp, #72	; 0x48
   26094:	orr	r0, r0, #4
   26098:	str	r0, [sp, #28]
   2609c:	lsl	r0, r3, #3
   260a0:	str	r0, [sp, #48]	; 0x30
   260a4:	ldr	r0, [r9], #4
   260a8:	str	r0, [sp, #36]	; 0x24
   260ac:	mov	r0, #0
   260b0:	str	r0, [sp, #60]	; 0x3c
   260b4:	cmp	r3, #1
   260b8:	blt	260e4 <GetDataSlab+0x3720>
   260bc:	ldr	r0, [sp, #36]	; 0x24
   260c0:	ldr	r4, [sp, #44]	; 0x2c
   260c4:	mov	r3, r5
   260c8:	add	r0, r7, r0, lsl #3
   260cc:	vldr	d16, [r0]
   260d0:	add	r0, r0, #8
   260d4:	subs	r4, r4, #1
   260d8:	vstr	d16, [r3]
   260dc:	add	r3, r3, #8
   260e0:	bne	260cc <GetDataSlab+0x3708>
   260e4:	ldr	r0, [sp, #40]	; 0x28
   260e8:	str	r5, [sp, #56]	; 0x38
   260ec:	add	r7, r7, r0, lsl #3
   260f0:	add	r2, r2, r0
   260f4:	ldr	r0, [fp, #24]
   260f8:	cmp	r0, #2
   260fc:	blt	261a0 <GetDataSlab+0x37dc>
   26100:	ldr	sl, [sp, #32]
   26104:	mov	r0, #0
   26108:	ldr	r3, [r1, r0]
   2610c:	add	r3, r3, #1
   26110:	str	r3, [r1, r0]
   26114:	ldr	r4, [ip, r0]
   26118:	sdiv	lr, r3, r4
   2611c:	mls	r3, lr, r4, r3
   26120:	cmp	r3, #0
   26124:	bne	26190 <GetDataSlab+0x37cc>
   26128:	mov	r3, #0
   2612c:	str	r3, [r1, r0]
   26130:	ldr	r3, [r8, r0]
   26134:	sdiv	r4, r2, r3
   26138:	mls	r4, r4, r3, r2
   2613c:	cmp	r4, #0
   26140:	beq	26160 <GetDataSlab+0x379c>
   26144:	add	r6, sp, #64	; 0x40
   26148:	sub	r3, r3, r4
   2614c:	ldr	r5, [r6, r0]
   26150:	ldr	r6, [r9, r0]
   26154:	mla	r3, r6, r5, r3
   26158:	add	r2, r3, r2
   2615c:	b	2617c <GetDataSlab+0x37b8>
   26160:	ldr	r3, [r9, r0]
   26164:	cmp	r3, #0
   26168:	beq	26180 <GetDataSlab+0x37bc>
   2616c:	add	r6, sp, #64	; 0x40
   26170:	ldr	r6, [r6, r0]
   26174:	mla	r2, r6, r3, r2
   26178:	mul	r3, r6, r3
   2617c:	add	r7, r7, r3, lsl #3
   26180:	subs	sl, sl, #1
   26184:	add	r0, r0, #4
   26188:	bne	26108 <GetDataSlab+0x3744>
   2618c:	b	261a0 <GetDataSlab+0x37dc>
   26190:	ldr	r3, [sp, #28]
   26194:	ldr	r0, [r3, r0]
   26198:	add	r7, r7, r0, lsl #3
   2619c:	add	r2, r0, r2
   261a0:	ldr	r3, [sp, #44]	; 0x2c
   261a4:	ldr	r4, [sp, #60]	; 0x3c
   261a8:	ldr	r0, [sp, #48]	; 0x30
   261ac:	ldr	r5, [sp, #56]	; 0x38
   261b0:	ldr	r6, [sp, #52]	; 0x34
   261b4:	add	r4, r4, r3
   261b8:	add	r5, r5, r0
   261bc:	mov	r0, #0
   261c0:	cmp	r4, r6
   261c4:	str	r4, [sp, #60]	; 0x3c
   261c8:	blt	260b4 <GetDataSlab+0x36f0>
   261cc:	b	24900 <GetDataSlab+0x1f3c>
   261d0:	ldr	r0, [fp, #16]
   261d4:	mov	r5, #0
   261d8:	ldr	ip, [r0]
   261dc:	sub	r0, ip, #1
   261e0:	str	r0, [fp, #-72]	; 0xffffffb8
   261e4:	ldr	r0, [r4]
   261e8:	str	r0, [sp, #24]
   261ec:	str	r0, [sp, #64]	; 0x40
   261f0:	ldr	r0, [fp, #20]
   261f4:	ldr	r1, [r0]
   261f8:	ldr	r0, [fp, #24]
   261fc:	cmp	r0, #2
   26200:	str	r1, [sp, #32]
   26204:	str	r1, [sp, #36]	; 0x24
   26208:	blt	262b8 <GetDataSlab+0x38f4>
   2620c:	ldr	r3, [sp, #24]
   26210:	ldr	r0, [sp, #32]
   26214:	mov	r9, r4
   26218:	mov	r1, #1
   2621c:	mov	r5, #0
   26220:	mov	r2, r4
   26224:	mov	r7, r3
   26228:	str	r0, [sp, #36]	; 0x24
   2622c:	ldr	r0, [fp, #16]
   26230:	add	r6, sp, #64	; 0x40
   26234:	mov	r4, #0
   26238:	ldr	r0, [r0, r1, lsl #2]
   2623c:	str	r3, [r6, r1, lsl #2]
   26240:	sub	r6, fp, #72	; 0x48
   26244:	sub	r0, r0, #1
   26248:	str	r0, [r6, r1, lsl #2]
   2624c:	ldr	lr, [r9, r1, lsl #2]
   26250:	mov	r6, lr
   26254:	mul	r3, r6, r3
   26258:	ldr	r6, [r2, -r4, lsl #2]
   2625c:	add	r4, r4, #1
   26260:	cmp	r1, r4
   26264:	mul	r0, r0, r6
   26268:	bne	26254 <GetDataSlab+0x3890>
   2626c:	add	r4, sp, #64	; 0x40
   26270:	add	r2, r2, #4
   26274:	str	r3, [r4, r1, lsl #2]
   26278:	sub	r4, fp, #72	; 0x48
   2627c:	str	r0, [r4, r1, lsl #2]
   26280:	ldr	r0, [fp, #12]
   26284:	ldr	r4, [sp, #36]	; 0x24
   26288:	ldr	r0, [r0, r1, lsl #2]
   2628c:	mla	r5, r0, r7, r5
   26290:	ldr	r0, [fp, #20]
   26294:	mov	r7, r3
   26298:	mov	r3, lr
   2629c:	ldr	r0, [r0, r1, lsl #2]
   262a0:	add	r1, r1, #1
   262a4:	mul	r4, r0, r4
   262a8:	ldr	r0, [fp, #24]
   262ac:	str	r4, [sp, #36]	; 0x24
   262b0:	cmp	r1, r0
   262b4:	bne	2622c <GetDataSlab+0x3868>
   262b8:	ldr	r0, [sp, #48]	; 0x30
   262bc:	ldr	r1, [sp, #56]	; 0x38
   262c0:	cmp	ip, #1
   262c4:	add	r9, r0, r5, lsl #3
   262c8:	bne	33410 <GetDataSlab+0x10a4c>
   262cc:	ldr	r0, [sp, #36]	; 0x24
   262d0:	ldr	lr, [sp, #32]
   262d4:	cmp	r0, #1
   262d8:	blt	335d4 <GetDataSlab+0x10c10>
   262dc:	add	r0, sp, #104	; 0x68
   262e0:	ldr	sl, [fp, #12]
   262e4:	str	r1, [sp, #40]	; 0x28
   262e8:	mov	r1, #0
   262ec:	orr	r6, r0, #4
   262f0:	ldr	r0, [fp, #20]
   262f4:	add	r0, r0, #4
   262f8:	str	r0, [sp, #12]
   262fc:	add	r0, sp, #64	; 0x40
   26300:	orr	r0, r0, #4
   26304:	str	r0, [sp, #44]	; 0x2c
   26308:	ldr	r0, [fp, #24]
   2630c:	sub	r0, r0, #1
   26310:	str	r0, [sp, #8]
   26314:	sub	r0, fp, #72	; 0x48
   26318:	orr	r0, r0, #4
   2631c:	str	r0, [sp, #4]
   26320:	lsl	r0, lr, #3
   26324:	str	r0, [sp, #20]
   26328:	ldr	r0, [sl], #4
   2632c:	str	r0, [sp, #16]
   26330:	cmp	lr, #1
   26334:	str	r1, [sp, #28]
   26338:	blt	26368 <GetDataSlab+0x39a4>
   2633c:	ldr	r0, [sp, #16]
   26340:	ldr	r8, [sp, #40]	; 0x28
   26344:	ldr	r7, [sp, #32]
   26348:	add	r4, r9, r0, lsl #3
   2634c:	ldrd	r0, [r4]
   26350:	bl	4b404 <__aeabi_l2d>
   26354:	strd	r0, [r8]
   26358:	add	r4, r4, #8
   2635c:	add	r8, r8, #8
   26360:	subs	r7, r7, #1
   26364:	bne	2634c <GetDataSlab+0x3988>
   26368:	ldr	r0, [sp, #24]
   2636c:	add	r9, r9, r0, lsl #3
   26370:	add	r5, r5, r0
   26374:	ldr	r0, [fp, #24]
   26378:	cmp	r0, #2
   2637c:	blt	26418 <GetDataSlab+0x3a54>
   26380:	ldr	r1, [sp, #8]
   26384:	ldr	lr, [sp, #32]
   26388:	ldr	r8, [sp, #12]
   2638c:	mov	r0, #0
   26390:	add	ip, sp, #64	; 0x40
   26394:	ldr	r2, [r6, r0]
   26398:	add	r2, r2, #1
   2639c:	str	r2, [r6, r0]
   263a0:	ldr	r3, [r8, r0]
   263a4:	sdiv	r7, r2, r3
   263a8:	mls	r2, r7, r3, r2
   263ac:	cmp	r2, #0
   263b0:	bne	26420 <GetDataSlab+0x3a5c>
   263b4:	mov	r2, #0
   263b8:	str	r2, [r6, r0]
   263bc:	ldr	r2, [sp, #44]	; 0x2c
   263c0:	ldr	r2, [r2, r0]
   263c4:	sdiv	r3, r5, r2
   263c8:	mls	r3, r3, r2, r5
   263cc:	cmp	r3, #0
   263d0:	beq	263ec <GetDataSlab+0x3a28>
   263d4:	ldr	r7, [ip, r0]
   263d8:	ldr	r4, [sl, r0]
   263dc:	sub	r2, r2, r3
   263e0:	mla	r2, r4, r7, r2
   263e4:	add	r5, r2, r5
   263e8:	b	26404 <GetDataSlab+0x3a40>
   263ec:	ldr	r2, [sl, r0]
   263f0:	cmp	r2, #0
   263f4:	beq	26408 <GetDataSlab+0x3a44>
   263f8:	ldr	r3, [ip, r0]
   263fc:	mla	r5, r3, r2, r5
   26400:	mul	r2, r3, r2
   26404:	add	r9, r9, r2, lsl #3
   26408:	subs	r1, r1, #1
   2640c:	add	r0, r0, #4
   26410:	bne	26394 <GetDataSlab+0x39d0>
   26414:	b	26430 <GetDataSlab+0x3a6c>
   26418:	ldr	lr, [sp, #32]
   2641c:	b	26430 <GetDataSlab+0x3a6c>
   26420:	ldr	r1, [sp, #4]
   26424:	ldr	r0, [r1, r0]
   26428:	add	r9, r9, r0, lsl #3
   2642c:	add	r5, r0, r5
   26430:	ldr	r0, [sp, #20]
   26434:	ldr	r1, [sp, #40]	; 0x28
   26438:	add	r1, r1, r0
   2643c:	ldr	r0, [sp, #36]	; 0x24
   26440:	str	r1, [sp, #40]	; 0x28
   26444:	ldr	r1, [sp, #28]
   26448:	add	r1, r1, lr
   2644c:	cmp	r1, r0
   26450:	blt	26330 <GetDataSlab+0x396c>
   26454:	b	335d4 <GetDataSlab+0x10c10>
   26458:	ldr	r0, [fp, #16]
   2645c:	mov	r3, #0
   26460:	ldr	lr, [r0]
   26464:	sub	r0, lr, #1
   26468:	str	r0, [fp, #-72]	; 0xffffffb8
   2646c:	ldr	r0, [r4]
   26470:	str	r0, [sp, #40]	; 0x28
   26474:	str	r0, [sp, #64]	; 0x40
   26478:	ldr	r0, [fp, #20]
   2647c:	ldr	r1, [r0]
   26480:	ldr	r0, [fp, #24]
   26484:	cmp	r0, #2
   26488:	str	r1, [sp, #44]	; 0x2c
   2648c:	str	r1, [sp, #52]	; 0x34
   26490:	blt	26540 <GetDataSlab+0x3b7c>
   26494:	ldr	r2, [sp, #40]	; 0x28
   26498:	ldr	r6, [sp, #44]	; 0x2c
   2649c:	mov	r9, r4
   264a0:	mov	r0, #1
   264a4:	mov	r3, #0
   264a8:	mov	r1, r4
   264ac:	mov	r7, r2
   264b0:	str	r6, [sp, #52]	; 0x34
   264b4:	ldr	r6, [fp, #16]
   264b8:	add	r5, sp, #64	; 0x40
   264bc:	mov	r4, #0
   264c0:	ldr	r6, [r6, r0, lsl #2]
   264c4:	str	r2, [r5, r0, lsl #2]
   264c8:	sub	r5, r6, #1
   264cc:	sub	r6, fp, #72	; 0x48
   264d0:	str	r5, [r6, r0, lsl #2]
   264d4:	ldr	ip, [r9, r0, lsl #2]
   264d8:	mov	r6, ip
   264dc:	mul	r2, r6, r2
   264e0:	ldr	r6, [r1, -r4, lsl #2]
   264e4:	add	r4, r4, #1
   264e8:	cmp	r0, r4
   264ec:	mul	r5, r5, r6
   264f0:	bne	264dc <GetDataSlab+0x3b18>
   264f4:	add	r4, sp, #64	; 0x40
   264f8:	add	r1, r1, #4
   264fc:	str	r2, [r4, r0, lsl #2]
   26500:	sub	r4, fp, #72	; 0x48
   26504:	str	r5, [r4, r0, lsl #2]
   26508:	ldr	r4, [fp, #12]
   2650c:	ldr	r5, [sp, #52]	; 0x34
   26510:	ldr	r4, [r4, r0, lsl #2]
   26514:	mla	r3, r4, r7, r3
   26518:	ldr	r4, [fp, #20]
   2651c:	mov	r7, r2
   26520:	mov	r2, ip
   26524:	ldr	r4, [r4, r0, lsl #2]
   26528:	add	r0, r0, #1
   2652c:	mul	r5, r4, r5
   26530:	ldr	r4, [fp, #24]
   26534:	str	r5, [sp, #52]	; 0x34
   26538:	cmp	r0, r4
   2653c:	bne	264b4 <GetDataSlab+0x3af0>
   26540:	ldr	r0, [sp, #48]	; 0x30
   26544:	cmp	lr, #1
   26548:	add	r7, r0, r3
   2654c:	bne	33868 <GetDataSlab+0x10ea4>
   26550:	ldr	r0, [sp, #52]	; 0x34
   26554:	ldr	r5, [fp, #12]
   26558:	ldr	r4, [sp, #44]	; 0x2c
   2655c:	cmp	r0, #1
   26560:	blt	248fc <GetDataSlab+0x1f38>
   26564:	add	r0, sp, #104	; 0x68
   26568:	ldr	r2, [sp, #56]	; 0x38
   2656c:	mov	sl, r5
   26570:	add	sl, r5, #4
   26574:	orr	r1, r0, #4
   26578:	ldr	r0, [fp, #20]
   2657c:	add	r8, r0, #4
   26580:	add	r0, sp, #64	; 0x40
   26584:	orr	lr, r0, #4
   26588:	ldr	r0, [fp, #24]
   2658c:	sub	r0, r0, #1
   26590:	str	r0, [sp, #32]
   26594:	sub	r0, fp, #72	; 0x48
   26598:	orr	r0, r0, #4
   2659c:	str	r0, [sp, #28]
   265a0:	lsl	r0, r4, #2
   265a4:	str	r0, [sp, #36]	; 0x24
   265a8:	mov	r0, #0
   265ac:	str	r0, [sp, #56]	; 0x38
   265b0:	cmp	r4, #1
   265b4:	blt	265e4 <GetDataSlab+0x3c20>
   265b8:	ldr	r0, [fp, #12]
   265bc:	ldr	r6, [sp, #44]	; 0x2c
   265c0:	mov	r4, r2
   265c4:	ldr	r0, [r0]
   265c8:	add	r0, r7, r0
   265cc:	ldrb	r5, [r0], #1
   265d0:	subs	r6, r6, #1
   265d4:	vmov	s0, r5
   265d8:	vcvt.f32.u32	s0, s0
   265dc:	vstmia	r4!, {s0}
   265e0:	bne	265cc <GetDataSlab+0x3c08>
   265e4:	ldr	r0, [sp, #40]	; 0x28
   265e8:	str	r2, [sp, #48]	; 0x30
   265ec:	add	r7, r7, r0
   265f0:	add	r3, r3, r0
   265f4:	ldr	r0, [fp, #24]
   265f8:	cmp	r0, #2
   265fc:	blt	266a0 <GetDataSlab+0x3cdc>
   26600:	ldr	ip, [sp, #32]
   26604:	mov	r0, #0
   26608:	ldr	r4, [r1, r0]
   2660c:	add	r4, r4, #1
   26610:	str	r4, [r1, r0]
   26614:	ldr	r5, [r8, r0]
   26618:	sdiv	r6, r4, r5
   2661c:	mls	r4, r6, r5, r4
   26620:	cmp	r4, #0
   26624:	bne	26690 <GetDataSlab+0x3ccc>
   26628:	mov	r4, #0
   2662c:	str	r4, [r1, r0]
   26630:	ldr	r4, [lr, r0]
   26634:	sdiv	r5, r3, r4
   26638:	mls	r6, r5, r4, r3
   2663c:	cmp	r6, #0
   26640:	beq	26664 <GetDataSlab+0x3ca0>
   26644:	add	r5, sp, #64	; 0x40
   26648:	ldr	r9, [sl, r0]
   2664c:	sub	r4, r4, r6
   26650:	ldr	r5, [r5, r0]
   26654:	mla	r4, r9, r5, r4
   26658:	add	r3, r4, r3
   2665c:	add	r7, r7, r4
   26660:	b	26680 <GetDataSlab+0x3cbc>
   26664:	ldr	r4, [sl, r0]
   26668:	cmp	r4, #0
   2666c:	beq	26680 <GetDataSlab+0x3cbc>
   26670:	add	r5, sp, #64	; 0x40
   26674:	ldr	r5, [r5, r0]
   26678:	mla	r3, r5, r4, r3
   2667c:	mla	r7, r5, r4, r7
   26680:	subs	ip, ip, #1
   26684:	add	r0, r0, #4
   26688:	bne	26608 <GetDataSlab+0x3c44>
   2668c:	b	266a0 <GetDataSlab+0x3cdc>
   26690:	ldr	r6, [sp, #28]
   26694:	ldr	r0, [r6, r0]
   26698:	add	r7, r7, r0
   2669c:	add	r3, r0, r3
   266a0:	ldr	r4, [sp, #44]	; 0x2c
   266a4:	ldr	r5, [sp, #56]	; 0x38
   266a8:	ldr	r0, [sp, #36]	; 0x24
   266ac:	ldr	r2, [sp, #48]	; 0x30
   266b0:	ldr	r6, [sp, #52]	; 0x34
   266b4:	add	r5, r5, r4
   266b8:	add	r2, r2, r0
   266bc:	mov	r0, #0
   266c0:	cmp	r5, r6
   266c4:	str	r5, [sp, #56]	; 0x38
   266c8:	blt	265b0 <GetDataSlab+0x3bec>
   266cc:	b	24900 <GetDataSlab+0x1f3c>
   266d0:	ldr	r0, [fp, #16]
   266d4:	mov	r2, #0
   266d8:	ldr	lr, [r0]
   266dc:	sub	r0, lr, #1
   266e0:	str	r0, [fp, #-72]	; 0xffffffb8
   266e4:	ldr	r0, [r4]
   266e8:	str	r0, [sp, #40]	; 0x28
   266ec:	str	r0, [sp, #64]	; 0x40
   266f0:	ldr	r0, [fp, #20]
   266f4:	ldr	r1, [r0]
   266f8:	ldr	r0, [fp, #24]
   266fc:	cmp	r0, #2
   26700:	str	r1, [sp, #44]	; 0x2c
   26704:	str	r1, [sp, #52]	; 0x34
   26708:	blt	267b8 <GetDataSlab+0x3df4>
   2670c:	ldr	r6, [sp, #40]	; 0x28
   26710:	ldr	r0, [sp, #44]	; 0x2c
   26714:	mov	r9, r4
   26718:	mov	r1, #1
   2671c:	mov	r2, #0
   26720:	mov	r7, r4
   26724:	mov	r5, r6
   26728:	str	r0, [sp, #52]	; 0x34
   2672c:	ldr	r0, [fp, #16]
   26730:	add	r3, sp, #64	; 0x40
   26734:	mov	r4, #0
   26738:	ldr	r0, [r0, r1, lsl #2]
   2673c:	str	r6, [r3, r1, lsl #2]
   26740:	sub	r3, r0, #1
   26744:	sub	r0, fp, #72	; 0x48
   26748:	str	r3, [r0, r1, lsl #2]
   2674c:	ldr	r9, [r9, r1, lsl #2]
   26750:	mov	r0, r9
   26754:	mul	r6, r0, r6
   26758:	ldr	r0, [r7, -r4, lsl #2]
   2675c:	add	r4, r4, #1
   26760:	cmp	r1, r4
   26764:	mul	r3, r3, r0
   26768:	bne	26754 <GetDataSlab+0x3d90>
   2676c:	add	r0, sp, #64	; 0x40
   26770:	add	r7, r7, #4
   26774:	str	r6, [r0, r1, lsl #2]
   26778:	sub	r0, fp, #72	; 0x48
   2677c:	str	r3, [r0, r1, lsl #2]
   26780:	ldr	r3, [sp, #52]	; 0x34
   26784:	ldr	r0, [ip, r1, lsl #2]
   26788:	mla	r2, r0, r5, r2
   2678c:	ldr	r0, [fp, #20]
   26790:	mov	r5, r6
   26794:	mov	r6, r9
   26798:	ldr	r9, [fp, #8]
   2679c:	ldr	r0, [r0, r1, lsl #2]
   267a0:	add	r1, r1, #1
   267a4:	mul	r3, r0, r3
   267a8:	ldr	r0, [fp, #24]
   267ac:	str	r3, [sp, #52]	; 0x34
   267b0:	cmp	r1, r0
   267b4:	bne	2672c <GetDataSlab+0x3d68>
   267b8:	ldr	r0, [sp, #48]	; 0x30
   267bc:	cmp	lr, #1
   267c0:	add	r7, r0, r2, lsl #1
   267c4:	bne	33a10 <GetDataSlab+0x1104c>
   267c8:	ldr	r0, [sp, #52]	; 0x34
   267cc:	ldr	r3, [sp, #44]	; 0x2c
   267d0:	cmp	r0, #1
   267d4:	blt	248fc <GetDataSlab+0x1f38>
   267d8:	add	r0, sp, #104	; 0x68
   267dc:	ldr	r6, [sp, #56]	; 0x38
   267e0:	orr	r1, r0, #4
   267e4:	ldr	r0, [fp, #20]
   267e8:	add	r9, r0, #4
   267ec:	add	r0, sp, #64	; 0x40
   267f0:	orr	lr, r0, #4
   267f4:	ldr	r0, [fp, #24]
   267f8:	sub	r0, r0, #1
   267fc:	str	r0, [sp, #32]
   26800:	sub	r0, fp, #72	; 0x48
   26804:	orr	r0, r0, #4
   26808:	str	r0, [sp, #28]
   2680c:	lsl	r0, r3, #2
   26810:	str	r0, [sp, #48]	; 0x30
   26814:	ldr	r0, [ip], #4
   26818:	str	r0, [sp, #36]	; 0x24
   2681c:	mov	r0, #0
   26820:	str	r0, [sp, #60]	; 0x3c
   26824:	cmp	r3, #1
   26828:	blt	26854 <GetDataSlab+0x3e90>
   2682c:	ldr	r0, [sp, #36]	; 0x24
   26830:	ldr	r4, [sp, #44]	; 0x2c
   26834:	mov	r3, r6
   26838:	add	r0, r7, r0, lsl #1
   2683c:	ldrsh	r5, [r0], #2
   26840:	subs	r4, r4, #1
   26844:	vmov	s0, r5
   26848:	vcvt.f32.s32	s0, s0
   2684c:	vstmia	r3!, {s0}
   26850:	bne	2683c <GetDataSlab+0x3e78>
   26854:	ldr	r0, [sp, #40]	; 0x28
   26858:	str	r6, [sp, #56]	; 0x38
   2685c:	add	r6, sp, #64	; 0x40
   26860:	add	r7, r7, r0, lsl #1
   26864:	add	r2, r2, r0
   26868:	ldr	r0, [fp, #24]
   2686c:	cmp	r0, #2
   26870:	blt	26910 <GetDataSlab+0x3f4c>
   26874:	ldr	sl, [sp, #32]
   26878:	mov	r0, #0
   2687c:	ldr	r3, [r1, r0]
   26880:	add	r3, r3, #1
   26884:	str	r3, [r1, r0]
   26888:	ldr	r4, [r9, r0]
   2688c:	sdiv	r5, r3, r4
   26890:	mls	r3, r5, r4, r3
   26894:	cmp	r3, #0
   26898:	bne	26900 <GetDataSlab+0x3f3c>
   2689c:	mov	r3, #0
   268a0:	str	r3, [r1, r0]
   268a4:	ldr	r3, [lr, r0]
   268a8:	sdiv	r4, r2, r3
   268ac:	mls	r4, r4, r3, r2
   268b0:	cmp	r4, #0
   268b4:	beq	268d4 <GetDataSlab+0x3f10>
   268b8:	ldr	r5, [r6, r0]
   268bc:	ldr	r8, [ip, r0]
   268c0:	sub	r3, r3, r4
   268c4:	add	r6, sp, #64	; 0x40
   268c8:	mla	r3, r8, r5, r3
   268cc:	add	r2, r3, r2
   268d0:	b	268ec <GetDataSlab+0x3f28>
   268d4:	ldr	r3, [ip, r0]
   268d8:	cmp	r3, #0
   268dc:	beq	268f0 <GetDataSlab+0x3f2c>
   268e0:	ldr	r4, [r6, r0]
   268e4:	mla	r2, r4, r3, r2
   268e8:	mul	r3, r4, r3
   268ec:	add	r7, r7, r3, lsl #1
   268f0:	subs	sl, sl, #1
   268f4:	add	r0, r0, #4
   268f8:	bne	2687c <GetDataSlab+0x3eb8>
   268fc:	b	26910 <GetDataSlab+0x3f4c>
   26900:	ldr	r3, [sp, #28]
   26904:	ldr	r0, [r3, r0]
   26908:	add	r7, r7, r0, lsl #1
   2690c:	add	r2, r0, r2
   26910:	ldr	r3, [sp, #44]	; 0x2c
   26914:	ldr	r5, [sp, #60]	; 0x3c
   26918:	ldr	r0, [sp, #48]	; 0x30
   2691c:	ldr	r6, [sp, #56]	; 0x38
   26920:	ldr	r4, [sp, #52]	; 0x34
   26924:	add	r5, r5, r3
   26928:	add	r6, r6, r0
   2692c:	mov	r0, #0
   26930:	cmp	r5, r4
   26934:	str	r5, [sp, #60]	; 0x3c
   26938:	blt	26824 <GetDataSlab+0x3e60>
   2693c:	b	24900 <GetDataSlab+0x1f3c>
   26940:	ldr	r0, [fp, #16]
   26944:	mov	r2, #0
   26948:	ldr	lr, [r0]
   2694c:	sub	r0, lr, #1
   26950:	str	r0, [fp, #-72]	; 0xffffffb8
   26954:	ldr	r0, [r4]
   26958:	str	r0, [sp, #40]	; 0x28
   2695c:	str	r0, [sp, #64]	; 0x40
   26960:	ldr	r0, [fp, #20]
   26964:	ldr	r1, [r0]
   26968:	ldr	r0, [fp, #24]
   2696c:	cmp	r0, #2
   26970:	str	r1, [sp, #44]	; 0x2c
   26974:	str	r1, [sp, #52]	; 0x34
   26978:	blt	26a28 <GetDataSlab+0x4064>
   2697c:	ldr	r6, [sp, #40]	; 0x28
   26980:	ldr	r0, [sp, #44]	; 0x2c
   26984:	mov	r9, r4
   26988:	mov	r1, #1
   2698c:	mov	r2, #0
   26990:	mov	r7, r4
   26994:	mov	r5, r6
   26998:	str	r0, [sp, #52]	; 0x34
   2699c:	ldr	r0, [fp, #16]
   269a0:	add	r3, sp, #64	; 0x40
   269a4:	mov	r4, #0
   269a8:	ldr	r0, [r0, r1, lsl #2]
   269ac:	str	r6, [r3, r1, lsl #2]
   269b0:	sub	r3, r0, #1
   269b4:	sub	r0, fp, #72	; 0x48
   269b8:	str	r3, [r0, r1, lsl #2]
   269bc:	ldr	r9, [r9, r1, lsl #2]
   269c0:	mov	r0, r9
   269c4:	mul	r6, r0, r6
   269c8:	ldr	r0, [r7, -r4, lsl #2]
   269cc:	add	r4, r4, #1
   269d0:	cmp	r1, r4
   269d4:	mul	r3, r3, r0
   269d8:	bne	269c4 <GetDataSlab+0x4000>
   269dc:	add	r0, sp, #64	; 0x40
   269e0:	add	r7, r7, #4
   269e4:	str	r6, [r0, r1, lsl #2]
   269e8:	sub	r0, fp, #72	; 0x48
   269ec:	str	r3, [r0, r1, lsl #2]
   269f0:	ldr	r3, [sp, #52]	; 0x34
   269f4:	ldr	r0, [ip, r1, lsl #2]
   269f8:	mla	r2, r0, r5, r2
   269fc:	ldr	r0, [fp, #20]
   26a00:	mov	r5, r6
   26a04:	mov	r6, r9
   26a08:	ldr	r9, [fp, #8]
   26a0c:	ldr	r0, [r0, r1, lsl #2]
   26a10:	add	r1, r1, #1
   26a14:	mul	r3, r0, r3
   26a18:	ldr	r0, [fp, #24]
   26a1c:	str	r3, [sp, #52]	; 0x34
   26a20:	cmp	r1, r0
   26a24:	bne	2699c <GetDataSlab+0x3fd8>
   26a28:	ldr	r0, [sp, #48]	; 0x30
   26a2c:	cmp	lr, #1
   26a30:	add	r7, r0, r2, lsl #1
   26a34:	bne	33bb0 <GetDataSlab+0x111ec>
   26a38:	ldr	r0, [sp, #52]	; 0x34
   26a3c:	ldr	r3, [sp, #44]	; 0x2c
   26a40:	cmp	r0, #1
   26a44:	blt	248fc <GetDataSlab+0x1f38>
   26a48:	add	r0, sp, #104	; 0x68
   26a4c:	ldr	r6, [sp, #56]	; 0x38
   26a50:	orr	r1, r0, #4
   26a54:	ldr	r0, [fp, #20]
   26a58:	add	r9, r0, #4
   26a5c:	add	r0, sp, #64	; 0x40
   26a60:	orr	lr, r0, #4
   26a64:	ldr	r0, [fp, #24]
   26a68:	sub	r0, r0, #1
   26a6c:	str	r0, [sp, #32]
   26a70:	sub	r0, fp, #72	; 0x48
   26a74:	orr	r0, r0, #4
   26a78:	str	r0, [sp, #28]
   26a7c:	lsl	r0, r3, #2
   26a80:	str	r0, [sp, #48]	; 0x30
   26a84:	ldr	r0, [ip], #4
   26a88:	str	r0, [sp, #36]	; 0x24
   26a8c:	mov	r0, #0
   26a90:	str	r0, [sp, #60]	; 0x3c
   26a94:	cmp	r3, #1
   26a98:	blt	26ac4 <GetDataSlab+0x4100>
   26a9c:	ldr	r0, [sp, #36]	; 0x24
   26aa0:	ldr	r4, [sp, #44]	; 0x2c
   26aa4:	mov	r3, r6
   26aa8:	add	r0, r7, r0, lsl #1
   26aac:	ldrh	r5, [r0], #2
   26ab0:	subs	r4, r4, #1
   26ab4:	vmov	s0, r5
   26ab8:	vcvt.f32.u32	s0, s0
   26abc:	vstmia	r3!, {s0}
   26ac0:	bne	26aac <GetDataSlab+0x40e8>
   26ac4:	ldr	r0, [sp, #40]	; 0x28
   26ac8:	str	r6, [sp, #56]	; 0x38
   26acc:	add	r6, sp, #64	; 0x40
   26ad0:	add	r7, r7, r0, lsl #1
   26ad4:	add	r2, r2, r0
   26ad8:	ldr	r0, [fp, #24]
   26adc:	cmp	r0, #2
   26ae0:	blt	26b80 <GetDataSlab+0x41bc>
   26ae4:	ldr	sl, [sp, #32]
   26ae8:	mov	r0, #0
   26aec:	ldr	r3, [r1, r0]
   26af0:	add	r3, r3, #1
   26af4:	str	r3, [r1, r0]
   26af8:	ldr	r4, [r9, r0]
   26afc:	sdiv	r5, r3, r4
   26b00:	mls	r3, r5, r4, r3
   26b04:	cmp	r3, #0
   26b08:	bne	26b70 <GetDataSlab+0x41ac>
   26b0c:	mov	r3, #0
   26b10:	str	r3, [r1, r0]
   26b14:	ldr	r3, [lr, r0]
   26b18:	sdiv	r4, r2, r3
   26b1c:	mls	r4, r4, r3, r2
   26b20:	cmp	r4, #0
   26b24:	beq	26b44 <GetDataSlab+0x4180>
   26b28:	ldr	r5, [r6, r0]
   26b2c:	ldr	r8, [ip, r0]
   26b30:	sub	r3, r3, r4
   26b34:	add	r6, sp, #64	; 0x40
   26b38:	mla	r3, r8, r5, r3
   26b3c:	add	r2, r3, r2
   26b40:	b	26b5c <GetDataSlab+0x4198>
   26b44:	ldr	r3, [ip, r0]
   26b48:	cmp	r3, #0
   26b4c:	beq	26b60 <GetDataSlab+0x419c>
   26b50:	ldr	r4, [r6, r0]
   26b54:	mla	r2, r4, r3, r2
   26b58:	mul	r3, r4, r3
   26b5c:	add	r7, r7, r3, lsl #1
   26b60:	subs	sl, sl, #1
   26b64:	add	r0, r0, #4
   26b68:	bne	26aec <GetDataSlab+0x4128>
   26b6c:	b	26b80 <GetDataSlab+0x41bc>
   26b70:	ldr	r3, [sp, #28]
   26b74:	ldr	r0, [r3, r0]
   26b78:	add	r7, r7, r0, lsl #1
   26b7c:	add	r2, r0, r2
   26b80:	ldr	r3, [sp, #44]	; 0x2c
   26b84:	ldr	r5, [sp, #60]	; 0x3c
   26b88:	ldr	r0, [sp, #48]	; 0x30
   26b8c:	ldr	r6, [sp, #56]	; 0x38
   26b90:	ldr	r4, [sp, #52]	; 0x34
   26b94:	add	r5, r5, r3
   26b98:	add	r6, r6, r0
   26b9c:	mov	r0, #0
   26ba0:	cmp	r5, r4
   26ba4:	str	r5, [sp, #60]	; 0x3c
   26ba8:	blt	26a94 <GetDataSlab+0x40d0>
   26bac:	b	24900 <GetDataSlab+0x1f3c>
   26bb0:	ldr	r0, [fp, #16]
   26bb4:	mov	r3, #0
   26bb8:	ldr	r9, [r0]
   26bbc:	sub	r0, r9, #1
   26bc0:	str	r0, [fp, #-72]	; 0xffffffb8
   26bc4:	ldr	r0, [r4]
   26bc8:	str	r0, [sp, #40]	; 0x28
   26bcc:	str	r0, [sp, #64]	; 0x40
   26bd0:	ldr	r0, [fp, #20]
   26bd4:	ldr	r1, [r0]
   26bd8:	ldr	r0, [fp, #24]
   26bdc:	cmp	r0, #2
   26be0:	str	r1, [sp, #44]	; 0x2c
   26be4:	str	r1, [sp, #52]	; 0x34
   26be8:	blt	26c94 <GetDataSlab+0x42d0>
   26bec:	ldr	r7, [sp, #40]	; 0x28
   26bf0:	ldr	r0, [sp, #44]	; 0x2c
   26bf4:	ldr	r2, [fp, #8]
   26bf8:	mov	r1, #1
   26bfc:	mov	r3, #0
   26c00:	mov	r6, r7
   26c04:	str	r0, [sp, #52]	; 0x34
   26c08:	ldr	r0, [fp, #16]
   26c0c:	add	r5, sp, #64	; 0x40
   26c10:	mov	r4, #0
   26c14:	ldr	r0, [r0, r1, lsl #2]
   26c18:	str	r7, [r5, r1, lsl #2]
   26c1c:	sub	r5, fp, #72	; 0x48
   26c20:	sub	r0, r0, #1
   26c24:	str	r0, [r5, r1, lsl #2]
   26c28:	ldr	r5, [fp, #8]
   26c2c:	ldr	lr, [r5, r1, lsl #2]
   26c30:	mov	r5, lr
   26c34:	mul	r7, r5, r7
   26c38:	ldr	r5, [r2, -r4, lsl #2]
   26c3c:	add	r4, r4, #1
   26c40:	cmp	r1, r4
   26c44:	mul	r0, r0, r5
   26c48:	bne	26c34 <GetDataSlab+0x4270>
   26c4c:	add	r4, sp, #64	; 0x40
   26c50:	add	r2, r2, #4
   26c54:	str	r7, [r4, r1, lsl #2]
   26c58:	sub	r4, fp, #72	; 0x48
   26c5c:	str	r0, [r4, r1, lsl #2]
   26c60:	ldr	r4, [sp, #52]	; 0x34
   26c64:	ldr	r0, [ip, r1, lsl #2]
   26c68:	mla	r3, r0, r6, r3
   26c6c:	ldr	r0, [fp, #20]
   26c70:	mov	r6, r7
   26c74:	mov	r7, lr
   26c78:	ldr	r0, [r0, r1, lsl #2]
   26c7c:	add	r1, r1, #1
   26c80:	mul	r4, r0, r4
   26c84:	ldr	r0, [fp, #24]
   26c88:	str	r4, [sp, #52]	; 0x34
   26c8c:	cmp	r1, r0
   26c90:	bne	26c08 <GetDataSlab+0x4244>
   26c94:	ldr	r0, [sp, #48]	; 0x30
   26c98:	ldr	r4, [sp, #56]	; 0x38
   26c9c:	cmp	r9, #1
   26ca0:	add	r7, r0, r3, lsl #2
   26ca4:	bne	33d50 <GetDataSlab+0x1138c>
   26ca8:	ldr	r0, [sp, #52]	; 0x34
   26cac:	cmp	r0, #1
   26cb0:	blt	248fc <GetDataSlab+0x1f38>
   26cb4:	add	r0, sp, #104	; 0x68
   26cb8:	ldr	r6, [sp, #44]	; 0x2c
   26cbc:	add	r9, ip, #4
   26cc0:	mov	r2, r4
   26cc4:	orr	r1, r0, #4
   26cc8:	ldr	r0, [fp, #20]
   26ccc:	add	sl, r0, #4
   26cd0:	add	r0, sp, #64	; 0x40
   26cd4:	orr	r8, r0, #4
   26cd8:	ldr	r0, [fp, #24]
   26cdc:	sub	r0, r0, #1
   26ce0:	str	r0, [sp, #32]
   26ce4:	sub	r0, fp, #72	; 0x48
   26ce8:	orr	r0, r0, #4
   26cec:	str	r0, [sp, #28]
   26cf0:	lsl	r0, r6, #2
   26cf4:	str	r0, [sp, #36]	; 0x24
   26cf8:	mov	r0, #0
   26cfc:	str	r0, [sp, #56]	; 0x38
   26d00:	cmp	r6, #1
   26d04:	blt	26d34 <GetDataSlab+0x4370>
   26d08:	ldr	r0, [fp, #12]
   26d0c:	ldr	r6, [sp, #44]	; 0x2c
   26d10:	mov	r4, r2
   26d14:	ldr	r0, [r0]
   26d18:	add	r0, r7, r0, lsl #2
   26d1c:	ldr	r5, [r0], #4
   26d20:	subs	r6, r6, #1
   26d24:	vmov	s0, r5
   26d28:	vcvt.f32.s32	s0, s0
   26d2c:	vstmia	r4!, {s0}
   26d30:	bne	26d1c <GetDataSlab+0x4358>
   26d34:	ldr	r0, [sp, #40]	; 0x28
   26d38:	str	r2, [sp, #48]	; 0x30
   26d3c:	add	r7, r7, r0, lsl #2
   26d40:	add	r3, r3, r0
   26d44:	ldr	r0, [fp, #24]
   26d48:	cmp	r0, #2
   26d4c:	blt	26df0 <GetDataSlab+0x442c>
   26d50:	ldr	ip, [sp, #32]
   26d54:	mov	r0, #0
   26d58:	ldr	r4, [r1, r0]
   26d5c:	add	r4, r4, #1
   26d60:	str	r4, [r1, r0]
   26d64:	ldr	r5, [sl, r0]
   26d68:	sdiv	r6, r4, r5
   26d6c:	mls	r4, r6, r5, r4
   26d70:	cmp	r4, #0
   26d74:	bne	26de0 <GetDataSlab+0x441c>
   26d78:	ldr	r4, [r8, r0]
   26d7c:	mov	r6, #0
   26d80:	str	r6, [r1, r0]
   26d84:	sdiv	r5, r3, r4
   26d88:	mls	r6, r5, r4, r3
   26d8c:	cmp	r6, #0
   26d90:	beq	26db0 <GetDataSlab+0x43ec>
   26d94:	add	r5, sp, #64	; 0x40
   26d98:	ldr	lr, [r9, r0]
   26d9c:	sub	r4, r4, r6
   26da0:	ldr	r5, [r5, r0]
   26da4:	mla	r6, lr, r5, r4
   26da8:	add	r3, r6, r3
   26dac:	b	26dcc <GetDataSlab+0x4408>
   26db0:	ldr	r4, [r9, r0]
   26db4:	cmp	r4, #0
   26db8:	beq	26dd0 <GetDataSlab+0x440c>
   26dbc:	add	r6, sp, #64	; 0x40
   26dc0:	ldr	r6, [r6, r0]
   26dc4:	mla	r3, r6, r4, r3
   26dc8:	mul	r6, r6, r4
   26dcc:	add	r7, r7, r6, lsl #2
   26dd0:	subs	ip, ip, #1
   26dd4:	add	r0, r0, #4
   26dd8:	bne	26d58 <GetDataSlab+0x4394>
   26ddc:	b	26df0 <GetDataSlab+0x442c>
   26de0:	ldr	r6, [sp, #28]
   26de4:	ldr	r0, [r6, r0]
   26de8:	add	r7, r7, r0, lsl #2
   26dec:	add	r3, r0, r3
   26df0:	ldr	r6, [sp, #44]	; 0x2c
   26df4:	ldr	r4, [sp, #56]	; 0x38
   26df8:	ldr	r0, [sp, #36]	; 0x24
   26dfc:	ldr	r2, [sp, #48]	; 0x30
   26e00:	ldr	r5, [sp, #52]	; 0x34
   26e04:	add	r4, r4, r6
   26e08:	add	r2, r2, r0
   26e0c:	mov	r0, #0
   26e10:	cmp	r4, r5
   26e14:	str	r4, [sp, #56]	; 0x38
   26e18:	blt	26d00 <GetDataSlab+0x433c>
   26e1c:	b	24900 <GetDataSlab+0x1f3c>
   26e20:	ldr	r0, [fp, #16]
   26e24:	mov	r3, #0
   26e28:	ldr	r9, [r0]
   26e2c:	sub	r0, r9, #1
   26e30:	str	r0, [fp, #-72]	; 0xffffffb8
   26e34:	ldr	r0, [r4]
   26e38:	str	r0, [sp, #40]	; 0x28
   26e3c:	str	r0, [sp, #64]	; 0x40
   26e40:	ldr	r0, [fp, #20]
   26e44:	ldr	r1, [r0]
   26e48:	ldr	r0, [fp, #24]
   26e4c:	cmp	r0, #2
   26e50:	str	r1, [sp, #44]	; 0x2c
   26e54:	str	r1, [sp, #52]	; 0x34
   26e58:	blt	26f04 <GetDataSlab+0x4540>
   26e5c:	ldr	r7, [sp, #40]	; 0x28
   26e60:	ldr	r0, [sp, #44]	; 0x2c
   26e64:	ldr	r2, [fp, #8]
   26e68:	mov	r1, #1
   26e6c:	mov	r3, #0
   26e70:	mov	r6, r7
   26e74:	str	r0, [sp, #52]	; 0x34
   26e78:	ldr	r0, [fp, #16]
   26e7c:	add	r5, sp, #64	; 0x40
   26e80:	mov	r4, #0
   26e84:	ldr	r0, [r0, r1, lsl #2]
   26e88:	str	r7, [r5, r1, lsl #2]
   26e8c:	sub	r5, fp, #72	; 0x48
   26e90:	sub	r0, r0, #1
   26e94:	str	r0, [r5, r1, lsl #2]
   26e98:	ldr	r5, [fp, #8]
   26e9c:	ldr	lr, [r5, r1, lsl #2]
   26ea0:	mov	r5, lr
   26ea4:	mul	r7, r5, r7
   26ea8:	ldr	r5, [r2, -r4, lsl #2]
   26eac:	add	r4, r4, #1
   26eb0:	cmp	r1, r4
   26eb4:	mul	r0, r0, r5
   26eb8:	bne	26ea4 <GetDataSlab+0x44e0>
   26ebc:	add	r4, sp, #64	; 0x40
   26ec0:	add	r2, r2, #4
   26ec4:	str	r7, [r4, r1, lsl #2]
   26ec8:	sub	r4, fp, #72	; 0x48
   26ecc:	str	r0, [r4, r1, lsl #2]
   26ed0:	ldr	r4, [sp, #52]	; 0x34
   26ed4:	ldr	r0, [ip, r1, lsl #2]
   26ed8:	mla	r3, r0, r6, r3
   26edc:	ldr	r0, [fp, #20]
   26ee0:	mov	r6, r7
   26ee4:	mov	r7, lr
   26ee8:	ldr	r0, [r0, r1, lsl #2]
   26eec:	add	r1, r1, #1
   26ef0:	mul	r4, r0, r4
   26ef4:	ldr	r0, [fp, #24]
   26ef8:	str	r4, [sp, #52]	; 0x34
   26efc:	cmp	r1, r0
   26f00:	bne	26e78 <GetDataSlab+0x44b4>
   26f04:	ldr	r0, [sp, #48]	; 0x30
   26f08:	ldr	r4, [sp, #56]	; 0x38
   26f0c:	cmp	r9, #1
   26f10:	add	r7, r0, r3, lsl #2
   26f14:	bne	33efc <GetDataSlab+0x11538>
   26f18:	ldr	r0, [sp, #52]	; 0x34
   26f1c:	cmp	r0, #1
   26f20:	blt	248fc <GetDataSlab+0x1f38>
   26f24:	add	r0, sp, #104	; 0x68
   26f28:	ldr	r6, [sp, #44]	; 0x2c
   26f2c:	add	r9, ip, #4
   26f30:	mov	r2, r4
   26f34:	orr	r1, r0, #4
   26f38:	ldr	r0, [fp, #20]
   26f3c:	add	sl, r0, #4
   26f40:	add	r0, sp, #64	; 0x40
   26f44:	orr	r8, r0, #4
   26f48:	ldr	r0, [fp, #24]
   26f4c:	sub	r0, r0, #1
   26f50:	str	r0, [sp, #32]
   26f54:	sub	r0, fp, #72	; 0x48
   26f58:	orr	r0, r0, #4
   26f5c:	str	r0, [sp, #28]
   26f60:	lsl	r0, r6, #2
   26f64:	str	r0, [sp, #36]	; 0x24
   26f68:	mov	r0, #0
   26f6c:	str	r0, [sp, #56]	; 0x38
   26f70:	cmp	r6, #1
   26f74:	blt	26fa4 <GetDataSlab+0x45e0>
   26f78:	ldr	r0, [fp, #12]
   26f7c:	ldr	r6, [sp, #44]	; 0x2c
   26f80:	mov	r4, r2
   26f84:	ldr	r0, [r0]
   26f88:	add	r0, r7, r0, lsl #2
   26f8c:	ldr	r5, [r0], #4
   26f90:	subs	r6, r6, #1
   26f94:	vmov	s0, r5
   26f98:	vcvt.f32.u32	s0, s0
   26f9c:	vstmia	r4!, {s0}
   26fa0:	bne	26f8c <GetDataSlab+0x45c8>
   26fa4:	ldr	r0, [sp, #40]	; 0x28
   26fa8:	str	r2, [sp, #48]	; 0x30
   26fac:	add	r7, r7, r0, lsl #2
   26fb0:	add	r3, r3, r0
   26fb4:	ldr	r0, [fp, #24]
   26fb8:	cmp	r0, #2
   26fbc:	blt	27060 <GetDataSlab+0x469c>
   26fc0:	ldr	ip, [sp, #32]
   26fc4:	mov	r0, #0
   26fc8:	ldr	r4, [r1, r0]
   26fcc:	add	r4, r4, #1
   26fd0:	str	r4, [r1, r0]
   26fd4:	ldr	r5, [sl, r0]
   26fd8:	sdiv	r6, r4, r5
   26fdc:	mls	r4, r6, r5, r4
   26fe0:	cmp	r4, #0
   26fe4:	bne	27050 <GetDataSlab+0x468c>
   26fe8:	ldr	r4, [r8, r0]
   26fec:	mov	r6, #0
   26ff0:	str	r6, [r1, r0]
   26ff4:	sdiv	r5, r3, r4
   26ff8:	mls	r6, r5, r4, r3
   26ffc:	cmp	r6, #0
   27000:	beq	27020 <GetDataSlab+0x465c>
   27004:	add	r5, sp, #64	; 0x40
   27008:	ldr	lr, [r9, r0]
   2700c:	sub	r4, r4, r6
   27010:	ldr	r5, [r5, r0]
   27014:	mla	r6, lr, r5, r4
   27018:	add	r3, r6, r3
   2701c:	b	2703c <GetDataSlab+0x4678>
   27020:	ldr	r4, [r9, r0]
   27024:	cmp	r4, #0
   27028:	beq	27040 <GetDataSlab+0x467c>
   2702c:	add	r6, sp, #64	; 0x40
   27030:	ldr	r6, [r6, r0]
   27034:	mla	r3, r6, r4, r3
   27038:	mul	r6, r6, r4
   2703c:	add	r7, r7, r6, lsl #2
   27040:	subs	ip, ip, #1
   27044:	add	r0, r0, #4
   27048:	bne	26fc8 <GetDataSlab+0x4604>
   2704c:	b	27060 <GetDataSlab+0x469c>
   27050:	ldr	r6, [sp, #28]
   27054:	ldr	r0, [r6, r0]
   27058:	add	r7, r7, r0, lsl #2
   2705c:	add	r3, r0, r3
   27060:	ldr	r6, [sp, #44]	; 0x2c
   27064:	ldr	r4, [sp, #56]	; 0x38
   27068:	ldr	r0, [sp, #36]	; 0x24
   2706c:	ldr	r2, [sp, #48]	; 0x30
   27070:	ldr	r5, [sp, #52]	; 0x34
   27074:	add	r4, r4, r6
   27078:	add	r2, r2, r0
   2707c:	mov	r0, #0
   27080:	cmp	r4, r5
   27084:	str	r4, [sp, #56]	; 0x38
   27088:	blt	26f70 <GetDataSlab+0x45ac>
   2708c:	b	24900 <GetDataSlab+0x1f3c>
   27090:	ldr	r0, [fp, #16]
   27094:	mov	r2, #0
   27098:	ldr	lr, [r0]
   2709c:	sub	r0, lr, #1
   270a0:	str	r0, [fp, #-72]	; 0xffffffb8
   270a4:	ldr	r0, [r4]
   270a8:	str	r0, [sp, #40]	; 0x28
   270ac:	str	r0, [sp, #64]	; 0x40
   270b0:	ldr	r0, [fp, #20]
   270b4:	ldr	r1, [r0]
   270b8:	ldr	r0, [fp, #24]
   270bc:	cmp	r0, #2
   270c0:	str	r1, [sp, #44]	; 0x2c
   270c4:	str	r1, [sp, #52]	; 0x34
   270c8:	blt	27178 <GetDataSlab+0x47b4>
   270cc:	ldr	r6, [sp, #40]	; 0x28
   270d0:	ldr	r0, [sp, #44]	; 0x2c
   270d4:	mov	r9, r4
   270d8:	mov	r1, #1
   270dc:	mov	r2, #0
   270e0:	mov	r7, r4
   270e4:	mov	r5, r6
   270e8:	str	r0, [sp, #52]	; 0x34
   270ec:	ldr	r0, [fp, #16]
   270f0:	add	r3, sp, #64	; 0x40
   270f4:	mov	r4, #0
   270f8:	ldr	r0, [r0, r1, lsl #2]
   270fc:	str	r6, [r3, r1, lsl #2]
   27100:	sub	r3, r0, #1
   27104:	sub	r0, fp, #72	; 0x48
   27108:	str	r3, [r0, r1, lsl #2]
   2710c:	ldr	r9, [r9, r1, lsl #2]
   27110:	mov	r0, r9
   27114:	mul	r6, r0, r6
   27118:	ldr	r0, [r7, -r4, lsl #2]
   2711c:	add	r4, r4, #1
   27120:	cmp	r1, r4
   27124:	mul	r3, r3, r0
   27128:	bne	27114 <GetDataSlab+0x4750>
   2712c:	add	r0, sp, #64	; 0x40
   27130:	add	r7, r7, #4
   27134:	str	r6, [r0, r1, lsl #2]
   27138:	sub	r0, fp, #72	; 0x48
   2713c:	str	r3, [r0, r1, lsl #2]
   27140:	ldr	r3, [sp, #52]	; 0x34
   27144:	ldr	r0, [ip, r1, lsl #2]
   27148:	mla	r2, r0, r5, r2
   2714c:	ldr	r0, [fp, #20]
   27150:	mov	r5, r6
   27154:	mov	r6, r9
   27158:	ldr	r9, [fp, #8]
   2715c:	ldr	r0, [r0, r1, lsl #2]
   27160:	add	r1, r1, #1
   27164:	mul	r3, r0, r3
   27168:	ldr	r0, [fp, #24]
   2716c:	str	r3, [sp, #52]	; 0x34
   27170:	cmp	r1, r0
   27174:	bne	270ec <GetDataSlab+0x4728>
   27178:	ldr	r0, [sp, #48]	; 0x30
   2717c:	cmp	lr, #1
   27180:	add	r7, r0, r2, lsl #2
   27184:	bne	340a8 <GetDataSlab+0x116e4>
   27188:	ldr	r0, [sp, #52]	; 0x34
   2718c:	ldr	r3, [sp, #44]	; 0x2c
   27190:	cmp	r0, #1
   27194:	blt	248fc <GetDataSlab+0x1f38>
   27198:	add	r0, sp, #104	; 0x68
   2719c:	ldr	r6, [sp, #56]	; 0x38
   271a0:	orr	r1, r0, #4
   271a4:	ldr	r0, [fp, #20]
   271a8:	add	r9, r0, #4
   271ac:	add	r0, sp, #64	; 0x40
   271b0:	orr	lr, r0, #4
   271b4:	ldr	r0, [fp, #24]
   271b8:	sub	r0, r0, #1
   271bc:	str	r0, [sp, #32]
   271c0:	sub	r0, fp, #72	; 0x48
   271c4:	orr	r0, r0, #4
   271c8:	str	r0, [sp, #28]
   271cc:	lsl	r0, r3, #2
   271d0:	str	r0, [sp, #48]	; 0x30
   271d4:	ldr	r0, [ip], #4
   271d8:	str	r0, [sp, #36]	; 0x24
   271dc:	mov	r0, #0
   271e0:	str	r0, [sp, #60]	; 0x3c
   271e4:	cmp	r3, #1
   271e8:	blt	2720c <GetDataSlab+0x4848>
   271ec:	ldr	r0, [sp, #36]	; 0x24
   271f0:	ldr	r4, [sp, #44]	; 0x2c
   271f4:	mov	r3, r6
   271f8:	add	r0, r7, r0, lsl #2
   271fc:	ldr	r5, [r0], #4
   27200:	subs	r4, r4, #1
   27204:	str	r5, [r3], #4
   27208:	bne	271fc <GetDataSlab+0x4838>
   2720c:	ldr	r0, [sp, #40]	; 0x28
   27210:	str	r6, [sp, #56]	; 0x38
   27214:	add	r6, sp, #64	; 0x40
   27218:	add	r7, r7, r0, lsl #2
   2721c:	add	r2, r2, r0
   27220:	ldr	r0, [fp, #24]
   27224:	cmp	r0, #2
   27228:	blt	272c8 <GetDataSlab+0x4904>
   2722c:	ldr	sl, [sp, #32]
   27230:	mov	r0, #0
   27234:	ldr	r3, [r1, r0]
   27238:	add	r3, r3, #1
   2723c:	str	r3, [r1, r0]
   27240:	ldr	r4, [r9, r0]
   27244:	sdiv	r5, r3, r4
   27248:	mls	r3, r5, r4, r3
   2724c:	cmp	r3, #0
   27250:	bne	272b8 <GetDataSlab+0x48f4>
   27254:	mov	r3, #0
   27258:	str	r3, [r1, r0]
   2725c:	ldr	r3, [lr, r0]
   27260:	sdiv	r4, r2, r3
   27264:	mls	r4, r4, r3, r2
   27268:	cmp	r4, #0
   2726c:	beq	2728c <GetDataSlab+0x48c8>
   27270:	ldr	r5, [r6, r0]
   27274:	ldr	r8, [ip, r0]
   27278:	sub	r3, r3, r4
   2727c:	add	r6, sp, #64	; 0x40
   27280:	mla	r3, r8, r5, r3
   27284:	add	r2, r3, r2
   27288:	b	272a4 <GetDataSlab+0x48e0>
   2728c:	ldr	r3, [ip, r0]
   27290:	cmp	r3, #0
   27294:	beq	272a8 <GetDataSlab+0x48e4>
   27298:	ldr	r4, [r6, r0]
   2729c:	mla	r2, r4, r3, r2
   272a0:	mul	r3, r4, r3
   272a4:	add	r7, r7, r3, lsl #2
   272a8:	subs	sl, sl, #1
   272ac:	add	r0, r0, #4
   272b0:	bne	27234 <GetDataSlab+0x4870>
   272b4:	b	272c8 <GetDataSlab+0x4904>
   272b8:	ldr	r3, [sp, #28]
   272bc:	ldr	r0, [r3, r0]
   272c0:	add	r7, r7, r0, lsl #2
   272c4:	add	r2, r0, r2
   272c8:	ldr	r3, [sp, #44]	; 0x2c
   272cc:	ldr	r5, [sp, #60]	; 0x3c
   272d0:	ldr	r0, [sp, #48]	; 0x30
   272d4:	ldr	r6, [sp, #56]	; 0x38
   272d8:	ldr	r4, [sp, #52]	; 0x34
   272dc:	add	r5, r5, r3
   272e0:	add	r6, r6, r0
   272e4:	mov	r0, #0
   272e8:	cmp	r5, r4
   272ec:	str	r5, [sp, #60]	; 0x3c
   272f0:	blt	271e4 <GetDataSlab+0x4820>
   272f4:	b	24900 <GetDataSlab+0x1f3c>
   272f8:	ldr	r0, [fp, #16]
   272fc:	mov	r2, #0
   27300:	ldr	lr, [r0]
   27304:	sub	r0, lr, #1
   27308:	str	r0, [fp, #-72]	; 0xffffffb8
   2730c:	ldr	r0, [r4]
   27310:	str	r0, [sp, #40]	; 0x28
   27314:	str	r0, [sp, #64]	; 0x40
   27318:	ldr	r0, [fp, #20]
   2731c:	ldr	r1, [r0]
   27320:	ldr	r0, [fp, #24]
   27324:	cmp	r0, #2
   27328:	str	r1, [sp, #44]	; 0x2c
   2732c:	str	r1, [sp, #52]	; 0x34
   27330:	blt	273e0 <GetDataSlab+0x4a1c>
   27334:	ldr	r6, [sp, #40]	; 0x28
   27338:	ldr	r0, [sp, #44]	; 0x2c
   2733c:	mov	r9, r4
   27340:	mov	r1, #1
   27344:	mov	r2, #0
   27348:	mov	r7, r4
   2734c:	mov	r5, r6
   27350:	str	r0, [sp, #52]	; 0x34
   27354:	ldr	r0, [fp, #16]
   27358:	add	r3, sp, #64	; 0x40
   2735c:	mov	r4, #0
   27360:	ldr	r0, [r0, r1, lsl #2]
   27364:	str	r6, [r3, r1, lsl #2]
   27368:	sub	r3, r0, #1
   2736c:	sub	r0, fp, #72	; 0x48
   27370:	str	r3, [r0, r1, lsl #2]
   27374:	ldr	r9, [r9, r1, lsl #2]
   27378:	mov	r0, r9
   2737c:	mul	r6, r0, r6
   27380:	ldr	r0, [r7, -r4, lsl #2]
   27384:	add	r4, r4, #1
   27388:	cmp	r1, r4
   2738c:	mul	r3, r3, r0
   27390:	bne	2737c <GetDataSlab+0x49b8>
   27394:	add	r0, sp, #64	; 0x40
   27398:	add	r7, r7, #4
   2739c:	str	r6, [r0, r1, lsl #2]
   273a0:	sub	r0, fp, #72	; 0x48
   273a4:	str	r3, [r0, r1, lsl #2]
   273a8:	ldr	r3, [sp, #52]	; 0x34
   273ac:	ldr	r0, [ip, r1, lsl #2]
   273b0:	mla	r2, r0, r5, r2
   273b4:	ldr	r0, [fp, #20]
   273b8:	mov	r5, r6
   273bc:	mov	r6, r9
   273c0:	ldr	r9, [fp, #8]
   273c4:	ldr	r0, [r0, r1, lsl #2]
   273c8:	add	r1, r1, #1
   273cc:	mul	r3, r0, r3
   273d0:	ldr	r0, [fp, #24]
   273d4:	str	r3, [sp, #52]	; 0x34
   273d8:	cmp	r1, r0
   273dc:	bne	27354 <GetDataSlab+0x4990>
   273e0:	ldr	r0, [sp, #48]	; 0x30
   273e4:	cmp	lr, #1
   273e8:	add	r7, r0, r2, lsl #3
   273ec:	bne	34240 <GetDataSlab+0x1187c>
   273f0:	ldr	r0, [sp, #52]	; 0x34
   273f4:	ldr	r3, [sp, #44]	; 0x2c
   273f8:	cmp	r0, #1
   273fc:	blt	248fc <GetDataSlab+0x1f38>
   27400:	add	r0, sp, #104	; 0x68
   27404:	mov	r9, ip
   27408:	ldr	r5, [sp, #56]	; 0x38
   2740c:	orr	r1, r0, #4
   27410:	ldr	r0, [fp, #20]
   27414:	add	ip, r0, #4
   27418:	add	r0, sp, #64	; 0x40
   2741c:	orr	r8, r0, #4
   27420:	ldr	r0, [fp, #24]
   27424:	sub	r0, r0, #1
   27428:	str	r0, [sp, #32]
   2742c:	sub	r0, fp, #72	; 0x48
   27430:	orr	r0, r0, #4
   27434:	str	r0, [sp, #28]
   27438:	lsl	r0, r3, #2
   2743c:	str	r0, [sp, #48]	; 0x30
   27440:	ldr	r0, [r9], #4
   27444:	str	r0, [sp, #36]	; 0x24
   27448:	mov	r0, #0
   2744c:	str	r0, [sp, #60]	; 0x3c
   27450:	cmp	r3, #1
   27454:	blt	27484 <GetDataSlab+0x4ac0>
   27458:	ldr	r0, [sp, #36]	; 0x24
   2745c:	ldr	r4, [sp, #44]	; 0x2c
   27460:	mov	r3, r5
   27464:	add	r0, r7, r0, lsl #3
   27468:	vldr	d16, [r0]
   2746c:	add	r0, r0, #8
   27470:	subs	r4, r4, #1
   27474:	vcvt.f32.f64	s0, d16
   27478:	vstr	s0, [r3]
   2747c:	add	r3, r3, #4
   27480:	bne	27468 <GetDataSlab+0x4aa4>
   27484:	ldr	r0, [sp, #40]	; 0x28
   27488:	str	r5, [sp, #56]	; 0x38
   2748c:	add	r7, r7, r0, lsl #3
   27490:	add	r2, r2, r0
   27494:	ldr	r0, [fp, #24]
   27498:	cmp	r0, #2
   2749c:	blt	27540 <GetDataSlab+0x4b7c>
   274a0:	ldr	sl, [sp, #32]
   274a4:	mov	r0, #0
   274a8:	ldr	r3, [r1, r0]
   274ac:	add	r3, r3, #1
   274b0:	str	r3, [r1, r0]
   274b4:	ldr	r4, [ip, r0]
   274b8:	sdiv	lr, r3, r4
   274bc:	mls	r3, lr, r4, r3
   274c0:	cmp	r3, #0
   274c4:	bne	27530 <GetDataSlab+0x4b6c>
   274c8:	mov	r3, #0
   274cc:	str	r3, [r1, r0]
   274d0:	ldr	r3, [r8, r0]
   274d4:	sdiv	r4, r2, r3
   274d8:	mls	r4, r4, r3, r2
   274dc:	cmp	r4, #0
   274e0:	beq	27500 <GetDataSlab+0x4b3c>
   274e4:	add	r6, sp, #64	; 0x40
   274e8:	sub	r3, r3, r4
   274ec:	ldr	r5, [r6, r0]
   274f0:	ldr	r6, [r9, r0]
   274f4:	mla	r3, r6, r5, r3
   274f8:	add	r2, r3, r2
   274fc:	b	2751c <GetDataSlab+0x4b58>
   27500:	ldr	r3, [r9, r0]
   27504:	cmp	r3, #0
   27508:	beq	27520 <GetDataSlab+0x4b5c>
   2750c:	add	r6, sp, #64	; 0x40
   27510:	ldr	r6, [r6, r0]
   27514:	mla	r2, r6, r3, r2
   27518:	mul	r3, r6, r3
   2751c:	add	r7, r7, r3, lsl #3
   27520:	subs	sl, sl, #1
   27524:	add	r0, r0, #4
   27528:	bne	274a8 <GetDataSlab+0x4ae4>
   2752c:	b	27540 <GetDataSlab+0x4b7c>
   27530:	ldr	r3, [sp, #28]
   27534:	ldr	r0, [r3, r0]
   27538:	add	r7, r7, r0, lsl #3
   2753c:	add	r2, r0, r2
   27540:	ldr	r3, [sp, #44]	; 0x2c
   27544:	ldr	r4, [sp, #60]	; 0x3c
   27548:	ldr	r0, [sp, #48]	; 0x30
   2754c:	ldr	r5, [sp, #56]	; 0x38
   27550:	ldr	r6, [sp, #52]	; 0x34
   27554:	add	r4, r4, r3
   27558:	add	r5, r5, r0
   2755c:	mov	r0, #0
   27560:	cmp	r4, r6
   27564:	str	r4, [sp, #60]	; 0x3c
   27568:	blt	27450 <GetDataSlab+0x4a8c>
   2756c:	b	24900 <GetDataSlab+0x1f3c>
   27570:	ldr	r0, [fp, #16]
   27574:	mov	r5, #0
   27578:	ldr	ip, [r0]
   2757c:	sub	r0, ip, #1
   27580:	str	r0, [fp, #-72]	; 0xffffffb8
   27584:	ldr	r0, [r4]
   27588:	str	r0, [sp, #24]
   2758c:	str	r0, [sp, #64]	; 0x40
   27590:	ldr	r0, [fp, #20]
   27594:	ldr	r1, [r0]
   27598:	ldr	r0, [fp, #24]
   2759c:	cmp	r0, #2
   275a0:	str	r1, [sp, #32]
   275a4:	str	r1, [sp, #36]	; 0x24
   275a8:	blt	27658 <GetDataSlab+0x4c94>
   275ac:	ldr	r3, [sp, #24]
   275b0:	ldr	r0, [sp, #32]
   275b4:	mov	r9, r4
   275b8:	mov	r1, #1
   275bc:	mov	r5, #0
   275c0:	mov	r2, r4
   275c4:	mov	r7, r3
   275c8:	str	r0, [sp, #36]	; 0x24
   275cc:	ldr	r0, [fp, #16]
   275d0:	add	r6, sp, #64	; 0x40
   275d4:	mov	r4, #0
   275d8:	ldr	r0, [r0, r1, lsl #2]
   275dc:	str	r3, [r6, r1, lsl #2]
   275e0:	sub	r6, fp, #72	; 0x48
   275e4:	sub	r0, r0, #1
   275e8:	str	r0, [r6, r1, lsl #2]
   275ec:	ldr	lr, [r9, r1, lsl #2]
   275f0:	mov	r6, lr
   275f4:	mul	r3, r6, r3
   275f8:	ldr	r6, [r2, -r4, lsl #2]
   275fc:	add	r4, r4, #1
   27600:	cmp	r1, r4
   27604:	mul	r0, r0, r6
   27608:	bne	275f4 <GetDataSlab+0x4c30>
   2760c:	add	r4, sp, #64	; 0x40
   27610:	add	r2, r2, #4
   27614:	str	r3, [r4, r1, lsl #2]
   27618:	sub	r4, fp, #72	; 0x48
   2761c:	str	r0, [r4, r1, lsl #2]
   27620:	ldr	r0, [fp, #12]
   27624:	ldr	r4, [sp, #36]	; 0x24
   27628:	ldr	r0, [r0, r1, lsl #2]
   2762c:	mla	r5, r0, r7, r5
   27630:	ldr	r0, [fp, #20]
   27634:	mov	r7, r3
   27638:	mov	r3, lr
   2763c:	ldr	r0, [r0, r1, lsl #2]
   27640:	add	r1, r1, #1
   27644:	mul	r4, r0, r4
   27648:	ldr	r0, [fp, #24]
   2764c:	str	r4, [sp, #36]	; 0x24
   27650:	cmp	r1, r0
   27654:	bne	275cc <GetDataSlab+0x4c08>
   27658:	ldr	r0, [sp, #48]	; 0x30
   2765c:	ldr	r1, [sp, #56]	; 0x38
   27660:	cmp	ip, #1
   27664:	add	r9, r0, r5, lsl #3
   27668:	bne	343e4 <GetDataSlab+0x11a20>
   2766c:	ldr	r0, [sp, #36]	; 0x24
   27670:	ldr	lr, [sp, #32]
   27674:	cmp	r0, #1
   27678:	blt	345ac <GetDataSlab+0x11be8>
   2767c:	add	r0, sp, #104	; 0x68
   27680:	ldr	sl, [fp, #12]
   27684:	str	r1, [sp, #40]	; 0x28
   27688:	mov	r1, #0
   2768c:	orr	r6, r0, #4
   27690:	ldr	r0, [fp, #20]
   27694:	add	r0, r0, #4
   27698:	str	r0, [sp, #12]
   2769c:	add	r0, sp, #64	; 0x40
   276a0:	orr	r0, r0, #4
   276a4:	str	r0, [sp, #44]	; 0x2c
   276a8:	ldr	r0, [fp, #24]
   276ac:	sub	r0, r0, #1
   276b0:	str	r0, [sp, #8]
   276b4:	sub	r0, fp, #72	; 0x48
   276b8:	orr	r0, r0, #4
   276bc:	str	r0, [sp, #4]
   276c0:	lsl	r0, lr, #2
   276c4:	str	r0, [sp, #20]
   276c8:	ldr	r0, [sl], #4
   276cc:	str	r0, [sp, #16]
   276d0:	cmp	lr, #1
   276d4:	str	r1, [sp, #28]
   276d8:	blt	27704 <GetDataSlab+0x4d40>
   276dc:	ldr	r0, [sp, #16]
   276e0:	ldr	r8, [sp, #40]	; 0x28
   276e4:	ldr	r7, [sp, #32]
   276e8:	add	r4, r9, r0, lsl #3
   276ec:	ldrd	r0, [r4]
   276f0:	bl	4b638 <__aeabi_l2f>
   276f4:	str	r0, [r8], #4
   276f8:	add	r4, r4, #8
   276fc:	subs	r7, r7, #1
   27700:	bne	276ec <GetDataSlab+0x4d28>
   27704:	ldr	r0, [sp, #24]
   27708:	add	r9, r9, r0, lsl #3
   2770c:	add	r5, r5, r0
   27710:	ldr	r0, [fp, #24]
   27714:	cmp	r0, #2
   27718:	blt	277b4 <GetDataSlab+0x4df0>
   2771c:	ldr	r1, [sp, #8]
   27720:	ldr	lr, [sp, #32]
   27724:	ldr	r8, [sp, #12]
   27728:	mov	r0, #0
   2772c:	add	ip, sp, #64	; 0x40
   27730:	ldr	r2, [r6, r0]
   27734:	add	r2, r2, #1
   27738:	str	r2, [r6, r0]
   2773c:	ldr	r3, [r8, r0]
   27740:	sdiv	r7, r2, r3
   27744:	mls	r2, r7, r3, r2
   27748:	cmp	r2, #0
   2774c:	bne	277bc <GetDataSlab+0x4df8>
   27750:	mov	r2, #0
   27754:	str	r2, [r6, r0]
   27758:	ldr	r2, [sp, #44]	; 0x2c
   2775c:	ldr	r2, [r2, r0]
   27760:	sdiv	r3, r5, r2
   27764:	mls	r3, r3, r2, r5
   27768:	cmp	r3, #0
   2776c:	beq	27788 <GetDataSlab+0x4dc4>
   27770:	ldr	r7, [ip, r0]
   27774:	ldr	r4, [sl, r0]
   27778:	sub	r2, r2, r3
   2777c:	mla	r2, r4, r7, r2
   27780:	add	r5, r2, r5
   27784:	b	277a0 <GetDataSlab+0x4ddc>
   27788:	ldr	r2, [sl, r0]
   2778c:	cmp	r2, #0
   27790:	beq	277a4 <GetDataSlab+0x4de0>
   27794:	ldr	r3, [ip, r0]
   27798:	mla	r5, r3, r2, r5
   2779c:	mul	r2, r3, r2
   277a0:	add	r9, r9, r2, lsl #3
   277a4:	subs	r1, r1, #1
   277a8:	add	r0, r0, #4
   277ac:	bne	27730 <GetDataSlab+0x4d6c>
   277b0:	b	277cc <GetDataSlab+0x4e08>
   277b4:	ldr	lr, [sp, #32]
   277b8:	b	277cc <GetDataSlab+0x4e08>
   277bc:	ldr	r1, [sp, #4]
   277c0:	ldr	r0, [r1, r0]
   277c4:	add	r9, r9, r0, lsl #3
   277c8:	add	r5, r0, r5
   277cc:	ldr	r0, [sp, #20]
   277d0:	ldr	r1, [sp, #40]	; 0x28
   277d4:	add	r1, r1, r0
   277d8:	ldr	r0, [sp, #36]	; 0x24
   277dc:	str	r1, [sp, #40]	; 0x28
   277e0:	ldr	r1, [sp, #28]
   277e4:	add	r1, r1, lr
   277e8:	cmp	r1, r0
   277ec:	blt	276d0 <GetDataSlab+0x4d0c>
   277f0:	b	345ac <GetDataSlab+0x11be8>
   277f4:	ldr	r3, [r3]
   277f8:	mov	r5, #0
   277fc:	add	r7, sp, #64	; 0x40
   27800:	sub	r0, r3, #1
   27804:	str	r0, [fp, #-72]	; 0xffffffb8
   27808:	ldr	r0, [r4]
   2780c:	str	r0, [sp, #40]	; 0x28
   27810:	str	r0, [sp, #64]	; 0x40
   27814:	ldr	r0, [fp, #20]
   27818:	ldr	lr, [r0]
   2781c:	ldr	r0, [fp, #24]
   27820:	cmp	r0, #2
   27824:	mov	r0, lr
   27828:	str	lr, [sp, #44]	; 0x2c
   2782c:	blt	278e0 <GetDataSlab+0x4f1c>
   27830:	ldr	r6, [sp, #40]	; 0x28
   27834:	mov	r9, r4
   27838:	mov	r0, #1
   2783c:	mov	r5, #0
   27840:	mov	r1, r4
   27844:	mov	r2, lr
   27848:	str	lr, [sp, #44]	; 0x2c
   2784c:	mov	r8, r6
   27850:	mov	r2, r5
   27854:	ldr	r5, [fp, #16]
   27858:	mov	r4, #0
   2785c:	ldr	r5, [r5, r0, lsl #2]
   27860:	str	r6, [r7, r0, lsl #2]
   27864:	sub	r7, fp, #72	; 0x48
   27868:	sub	r5, r5, #1
   2786c:	str	r5, [r7, r0, lsl #2]
   27870:	ldr	ip, [r9, r0, lsl #2]
   27874:	mov	r7, ip
   27878:	mul	r6, r7, r6
   2787c:	ldr	r7, [r1, -r4, lsl #2]
   27880:	add	r4, r4, #1
   27884:	cmp	r0, r4
   27888:	mul	r5, r5, r7
   2788c:	bne	27878 <GetDataSlab+0x4eb4>
   27890:	sub	r4, fp, #72	; 0x48
   27894:	add	r7, sp, #64	; 0x40
   27898:	add	r1, r1, #4
   2789c:	str	r5, [r4, r0, lsl #2]
   278a0:	ldr	r4, [fp, #12]
   278a4:	str	r6, [r7, r0, lsl #2]
   278a8:	mov	r5, r2
   278ac:	ldr	r4, [r4, r0, lsl #2]
   278b0:	mla	r5, r4, r8, r2
   278b4:	ldr	r4, [fp, #20]
   278b8:	ldr	r2, [sp, #44]	; 0x2c
   278bc:	mov	r8, r6
   278c0:	mov	r6, ip
   278c4:	ldr	r4, [r4, r0, lsl #2]
   278c8:	add	r0, r0, #1
   278cc:	mul	r2, r4, r2
   278d0:	ldr	r4, [fp, #24]
   278d4:	str	r2, [sp, #44]	; 0x2c
   278d8:	cmp	r0, r4
   278dc:	bne	27850 <GetDataSlab+0x4e8c>
   278e0:	ldr	r0, [sp, #48]	; 0x30
   278e4:	cmp	r3, #1
   278e8:	add	r6, r0, r5
   278ec:	bne	3483c <GetDataSlab+0x11e78>
   278f0:	ldr	r0, [sp, #44]	; 0x2c
   278f4:	ldr	r9, [fp, #12]
   278f8:	cmp	r0, #1
   278fc:	add	r0, sp, #64	; 0x40
   27900:	blt	248fc <GetDataSlab+0x1f38>
   27904:	orr	r0, r0, #4
   27908:	ldr	r3, [fp, #20]
   2790c:	add	r1, sp, #104	; 0x68
   27910:	mov	r8, #0
   27914:	str	r0, [sp, #48]	; 0x30
   27918:	ldr	r0, [fp, #24]
   2791c:	orr	r1, r1, #4
   27920:	add	r2, r3, #4
   27924:	sub	r0, r0, #1
   27928:	str	r2, [sp, #52]	; 0x34
   2792c:	str	r0, [sp, #32]
   27930:	sub	r0, fp, #72	; 0x48
   27934:	orr	r0, r0, #4
   27938:	str	r0, [sp, #28]
   2793c:	ldr	r0, [r9], #4
   27940:	str	r0, [sp, #36]	; 0x24
   27944:	ldr	r2, [sp, #36]	; 0x24
   27948:	ldr	r3, [fp, #12]
   2794c:	cmp	lr, #1
   27950:	add	r0, r2, r5
   27954:	add	r5, r6, r2
   27958:	ldr	r6, [fp, #20]
   2795c:	blt	27994 <GetDataSlab+0x4fd0>
   27960:	ldr	r2, [sp, #56]	; 0x38
   27964:	mov	r4, #0
   27968:	add	r7, r2, r8
   2796c:	ldrb	r2, [r5, r4]
   27970:	strb	r2, [r7, r4]
   27974:	add	r4, r4, #1
   27978:	ldr	lr, [r6]
   2797c:	cmp	r4, lr
   27980:	blt	2796c <GetDataSlab+0x4fa8>
   27984:	ldr	r2, [r3]
   27988:	ldr	r3, [fp, #8]
   2798c:	ldr	r3, [r3]
   27990:	str	r3, [sp, #40]	; 0x28
   27994:	ldr	r3, [sp, #40]	; 0x28
   27998:	str	r2, [sp, #36]	; 0x24
   2799c:	sub	r7, r3, r2
   279a0:	add	r6, r5, r7
   279a4:	add	r5, r0, r7
   279a8:	ldr	r0, [fp, #24]
   279ac:	cmp	r0, #2
   279b0:	blt	27a64 <GetDataSlab+0x50a0>
   279b4:	ldr	sl, [sp, #32]
   279b8:	mov	r0, #0
   279bc:	ldr	r4, [r1, r0]
   279c0:	ldr	r2, [sp, #52]	; 0x34
   279c4:	add	r4, r4, #1
   279c8:	str	r4, [r1, r0]
   279cc:	ldr	r7, [r2, r0]
   279d0:	sdiv	ip, r4, r7
   279d4:	mls	r7, ip, r7, r4
   279d8:	cmp	r7, #0
   279dc:	bne	27a54 <GetDataSlab+0x5090>
   279e0:	mov	r2, #0
   279e4:	str	r2, [r1, r0]
   279e8:	ldr	r2, [sp, #48]	; 0x30
   279ec:	ldr	r4, [r2, r0]
   279f0:	sdiv	r7, r5, r4
   279f4:	mls	r7, r7, r4, r5
   279f8:	cmp	r7, #0
   279fc:	beq	27a28 <GetDataSlab+0x5064>
   27a00:	add	r3, sp, #64	; 0x40
   27a04:	mov	r2, r6
   27a08:	ldr	r6, [r9, r0]
   27a0c:	sub	r7, r4, r7
   27a10:	ldr	r3, [r3, r0]
   27a14:	mla	r3, r6, r3, r7
   27a18:	mov	r6, r2
   27a1c:	add	r5, r3, r5
   27a20:	add	r6, r2, r3
   27a24:	b	27a44 <GetDataSlab+0x5080>
   27a28:	ldr	r4, [r9, r0]
   27a2c:	cmp	r4, #0
   27a30:	beq	27a44 <GetDataSlab+0x5080>
   27a34:	add	r3, sp, #64	; 0x40
   27a38:	ldr	r3, [r3, r0]
   27a3c:	mla	r5, r3, r4, r5
   27a40:	mla	r6, r3, r4, r6
   27a44:	subs	sl, sl, #1
   27a48:	add	r0, r0, #4
   27a4c:	bne	279bc <GetDataSlab+0x4ff8>
   27a50:	b	27a64 <GetDataSlab+0x50a0>
   27a54:	ldr	r2, [sp, #28]
   27a58:	ldr	r0, [r2, r0]
   27a5c:	add	r6, r6, r0
   27a60:	add	r5, r0, r5
   27a64:	ldr	r0, [sp, #44]	; 0x2c
   27a68:	add	r8, lr, r8
   27a6c:	cmp	r8, r0
   27a70:	mov	r0, #0
   27a74:	blt	27944 <GetDataSlab+0x4f80>
   27a78:	b	24900 <GetDataSlab+0x1f3c>
   27a7c:	ldr	r3, [r3]
   27a80:	sub	r9, fp, #72	; 0x48
   27a84:	mov	lr, #0
   27a88:	add	r7, sp, #64	; 0x40
   27a8c:	sub	r0, r3, #1
   27a90:	str	r0, [fp, #-72]	; 0xffffffb8
   27a94:	ldr	r0, [r4]
   27a98:	str	r0, [sp, #36]	; 0x24
   27a9c:	str	r0, [sp, #64]	; 0x40
   27aa0:	ldr	r0, [fp, #20]
   27aa4:	ldr	sl, [r0]
   27aa8:	ldr	r0, [fp, #24]
   27aac:	cmp	r0, #2
   27ab0:	mov	r0, sl
   27ab4:	str	sl, [sp, #40]	; 0x28
   27ab8:	blt	27b60 <GetDataSlab+0x519c>
   27abc:	ldr	r6, [sp, #36]	; 0x24
   27ac0:	ldr	r1, [fp, #8]
   27ac4:	mov	r0, #1
   27ac8:	mov	lr, #0
   27acc:	mov	r2, sl
   27ad0:	str	sl, [sp, #40]	; 0x28
   27ad4:	mov	r8, r6
   27ad8:	ldr	r5, [fp, #16]
   27adc:	ldr	r2, [fp, #8]
   27ae0:	mov	r4, #0
   27ae4:	ldr	r5, [r5, r0, lsl #2]
   27ae8:	str	r6, [r7, r0, lsl #2]
   27aec:	sub	r5, r5, #1
   27af0:	str	r5, [r9, r0, lsl #2]
   27af4:	ldr	ip, [r2, r0, lsl #2]
   27af8:	mov	r7, ip
   27afc:	mul	r6, r7, r6
   27b00:	ldr	r7, [r1, -r4, lsl #2]
   27b04:	add	r4, r4, #1
   27b08:	cmp	r0, r4
   27b0c:	mul	r5, r5, r7
   27b10:	bne	27afc <GetDataSlab+0x5138>
   27b14:	ldr	r4, [fp, #12]
   27b18:	add	r7, sp, #64	; 0x40
   27b1c:	sub	r9, fp, #72	; 0x48
   27b20:	ldr	r2, [sp, #40]	; 0x28
   27b24:	add	r1, r1, #4
   27b28:	str	r6, [r7, r0, lsl #2]
   27b2c:	str	r5, [r9, r0, lsl #2]
   27b30:	ldr	r4, [r4, r0, lsl #2]
   27b34:	mla	lr, r4, r8, lr
   27b38:	ldr	r4, [fp, #20]
   27b3c:	mov	r8, r6
   27b40:	mov	r6, ip
   27b44:	ldr	r4, [r4, r0, lsl #2]
   27b48:	add	r0, r0, #1
   27b4c:	mul	r2, r4, r2
   27b50:	ldr	r4, [fp, #24]
   27b54:	str	r2, [sp, #40]	; 0x28
   27b58:	cmp	r0, r4
   27b5c:	bne	27ad8 <GetDataSlab+0x5114>
   27b60:	ldr	r0, [sp, #48]	; 0x30
   27b64:	cmp	r3, #1
   27b68:	add	r5, r0, lr, lsl #1
   27b6c:	bne	349fc <GetDataSlab+0x12038>
   27b70:	ldr	r0, [sp, #40]	; 0x28
   27b74:	cmp	r0, #1
   27b78:	add	r0, sp, #64	; 0x40
   27b7c:	blt	248fc <GetDataSlab+0x1f38>
   27b80:	orr	r0, r0, #4
   27b84:	ldr	r9, [fp, #12]
   27b88:	ldr	r3, [fp, #20]
   27b8c:	add	r1, sp, #104	; 0x68
   27b90:	mov	r6, #0
   27b94:	str	r0, [sp, #48]	; 0x30
   27b98:	ldr	r0, [fp, #24]
   27b9c:	orr	r1, r1, #4
   27ba0:	add	r2, r3, #4
   27ba4:	sub	r0, r0, #1
   27ba8:	str	r2, [sp, #52]	; 0x34
   27bac:	str	r0, [sp, #32]
   27bb0:	sub	r0, fp, #72	; 0x48
   27bb4:	orr	r0, r0, #4
   27bb8:	str	r0, [sp, #28]
   27bbc:	ldr	r0, [r9], #4
   27bc0:	str	r0, [sp, #44]	; 0x2c
   27bc4:	ldr	r7, [sp, #44]	; 0x2c
   27bc8:	cmp	sl, #1
   27bcc:	add	r0, r5, r7, lsl #1
   27bd0:	add	lr, r7, lr
   27bd4:	blt	27c18 <GetDataSlab+0x5254>
   27bd8:	ldr	r2, [sp, #56]	; 0x38
   27bdc:	ldr	r3, [fp, #20]
   27be0:	mov	r4, #0
   27be4:	mov	r5, r0
   27be8:	add	r7, r2, r6
   27bec:	ldrb	r2, [r5], #2
   27bf0:	strb	r2, [r7, r4]
   27bf4:	add	r4, r4, #1
   27bf8:	ldr	sl, [r3]
   27bfc:	cmp	r4, sl
   27c00:	blt	27bec <GetDataSlab+0x5228>
   27c04:	ldr	r3, [fp, #12]
   27c08:	ldr	r7, [r3]
   27c0c:	ldr	r3, [fp, #8]
   27c10:	ldr	r2, [r3]
   27c14:	str	r2, [sp, #36]	; 0x24
   27c18:	ldr	r3, [sp, #36]	; 0x24
   27c1c:	mov	r2, r6
   27c20:	str	r7, [sp, #44]	; 0x2c
   27c24:	sub	r4, r3, r7
   27c28:	add	r5, r0, r4, lsl #1
   27c2c:	ldr	r0, [fp, #24]
   27c30:	add	lr, lr, r4
   27c34:	cmp	r0, #2
   27c38:	blt	27ce4 <GetDataSlab+0x5320>
   27c3c:	ldr	r8, [sp, #32]
   27c40:	mov	r0, #0
   27c44:	ldr	r4, [r1, r0]
   27c48:	ldr	r3, [sp, #52]	; 0x34
   27c4c:	add	r4, r4, #1
   27c50:	str	r4, [r1, r0]
   27c54:	ldr	r7, [r3, r0]
   27c58:	sdiv	ip, r4, r7
   27c5c:	mls	r7, ip, r7, r4
   27c60:	cmp	r7, #0
   27c64:	bne	27cd4 <GetDataSlab+0x5310>
   27c68:	mov	r3, #0
   27c6c:	str	r3, [r1, r0]
   27c70:	ldr	r3, [sp, #48]	; 0x30
   27c74:	ldr	r4, [r3, r0]
   27c78:	sdiv	r7, lr, r4
   27c7c:	mls	r7, r7, r4, lr
   27c80:	cmp	r7, #0
   27c84:	beq	27ca4 <GetDataSlab+0x52e0>
   27c88:	add	r3, sp, #64	; 0x40
   27c8c:	ldr	r6, [r9, r0]
   27c90:	sub	r7, r4, r7
   27c94:	ldr	r3, [r3, r0]
   27c98:	mla	r3, r6, r3, r7
   27c9c:	add	lr, r3, lr
   27ca0:	b	27cc0 <GetDataSlab+0x52fc>
   27ca4:	ldr	r4, [r9, r0]
   27ca8:	cmp	r4, #0
   27cac:	beq	27cc4 <GetDataSlab+0x5300>
   27cb0:	add	r3, sp, #64	; 0x40
   27cb4:	ldr	r3, [r3, r0]
   27cb8:	mla	lr, r3, r4, lr
   27cbc:	mul	r3, r3, r4
   27cc0:	add	r5, r5, r3, lsl #1
   27cc4:	subs	r8, r8, #1
   27cc8:	add	r0, r0, #4
   27ccc:	bne	27c44 <GetDataSlab+0x5280>
   27cd0:	b	27ce4 <GetDataSlab+0x5320>
   27cd4:	ldr	r3, [sp, #28]
   27cd8:	ldr	r0, [r3, r0]
   27cdc:	add	r5, r5, r0, lsl #1
   27ce0:	add	lr, r0, lr
   27ce4:	ldr	r0, [sp, #40]	; 0x28
   27ce8:	mov	r6, r2
   27cec:	add	r6, sl, r2
   27cf0:	cmp	r6, r0
   27cf4:	mov	r0, #0
   27cf8:	blt	27bc4 <GetDataSlab+0x5200>
   27cfc:	b	24900 <GetDataSlab+0x1f3c>
   27d00:	ldr	r3, [r3]
   27d04:	sub	r9, fp, #72	; 0x48
   27d08:	mov	lr, #0
   27d0c:	add	r7, sp, #64	; 0x40
   27d10:	sub	r0, r3, #1
   27d14:	str	r0, [fp, #-72]	; 0xffffffb8
   27d18:	ldr	r0, [r4]
   27d1c:	str	r0, [sp, #36]	; 0x24
   27d20:	str	r0, [sp, #64]	; 0x40
   27d24:	ldr	r0, [fp, #20]
   27d28:	ldr	sl, [r0]
   27d2c:	ldr	r0, [fp, #24]
   27d30:	cmp	r0, #2
   27d34:	mov	r0, sl
   27d38:	str	sl, [sp, #40]	; 0x28
   27d3c:	blt	27de4 <GetDataSlab+0x5420>
   27d40:	ldr	r6, [sp, #36]	; 0x24
   27d44:	ldr	r1, [fp, #8]
   27d48:	mov	r0, #1
   27d4c:	mov	lr, #0
   27d50:	mov	r2, sl
   27d54:	str	sl, [sp, #40]	; 0x28
   27d58:	mov	r8, r6
   27d5c:	ldr	r5, [fp, #16]
   27d60:	ldr	r2, [fp, #8]
   27d64:	mov	r4, #0
   27d68:	ldr	r5, [r5, r0, lsl #2]
   27d6c:	str	r6, [r7, r0, lsl #2]
   27d70:	sub	r5, r5, #1
   27d74:	str	r5, [r9, r0, lsl #2]
   27d78:	ldr	ip, [r2, r0, lsl #2]
   27d7c:	mov	r7, ip
   27d80:	mul	r6, r7, r6
   27d84:	ldr	r7, [r1, -r4, lsl #2]
   27d88:	add	r4, r4, #1
   27d8c:	cmp	r0, r4
   27d90:	mul	r5, r5, r7
   27d94:	bne	27d80 <GetDataSlab+0x53bc>
   27d98:	ldr	r4, [fp, #12]
   27d9c:	add	r7, sp, #64	; 0x40
   27da0:	sub	r9, fp, #72	; 0x48
   27da4:	ldr	r2, [sp, #40]	; 0x28
   27da8:	add	r1, r1, #4
   27dac:	str	r6, [r7, r0, lsl #2]
   27db0:	str	r5, [r9, r0, lsl #2]
   27db4:	ldr	r4, [r4, r0, lsl #2]
   27db8:	mla	lr, r4, r8, lr
   27dbc:	ldr	r4, [fp, #20]
   27dc0:	mov	r8, r6
   27dc4:	mov	r6, ip
   27dc8:	ldr	r4, [r4, r0, lsl #2]
   27dcc:	add	r0, r0, #1
   27dd0:	mul	r2, r4, r2
   27dd4:	ldr	r4, [fp, #24]
   27dd8:	str	r2, [sp, #40]	; 0x28
   27ddc:	cmp	r0, r4
   27de0:	bne	27d5c <GetDataSlab+0x5398>
   27de4:	ldr	r0, [sp, #48]	; 0x30
   27de8:	cmp	r3, #1
   27dec:	add	r5, r0, lr, lsl #1
   27df0:	bne	34bb8 <GetDataSlab+0x121f4>
   27df4:	ldr	r0, [sp, #40]	; 0x28
   27df8:	cmp	r0, #1
   27dfc:	add	r0, sp, #64	; 0x40
   27e00:	blt	248fc <GetDataSlab+0x1f38>
   27e04:	orr	r0, r0, #4
   27e08:	ldr	r9, [fp, #12]
   27e0c:	ldr	r3, [fp, #20]
   27e10:	add	r1, sp, #104	; 0x68
   27e14:	mov	r6, #0
   27e18:	str	r0, [sp, #48]	; 0x30
   27e1c:	ldr	r0, [fp, #24]
   27e20:	orr	r1, r1, #4
   27e24:	add	r2, r3, #4
   27e28:	sub	r0, r0, #1
   27e2c:	str	r2, [sp, #52]	; 0x34
   27e30:	str	r0, [sp, #32]
   27e34:	sub	r0, fp, #72	; 0x48
   27e38:	orr	r0, r0, #4
   27e3c:	str	r0, [sp, #28]
   27e40:	ldr	r0, [r9], #4
   27e44:	str	r0, [sp, #44]	; 0x2c
   27e48:	ldr	r7, [sp, #44]	; 0x2c
   27e4c:	cmp	sl, #1
   27e50:	add	r0, r5, r7, lsl #1
   27e54:	add	lr, r7, lr
   27e58:	blt	27e9c <GetDataSlab+0x54d8>
   27e5c:	ldr	r2, [sp, #56]	; 0x38
   27e60:	ldr	r3, [fp, #20]
   27e64:	mov	r4, #0
   27e68:	mov	r5, r0
   27e6c:	add	r7, r2, r6
   27e70:	ldrb	r2, [r5], #2
   27e74:	strb	r2, [r7, r4]
   27e78:	add	r4, r4, #1
   27e7c:	ldr	sl, [r3]
   27e80:	cmp	r4, sl
   27e84:	blt	27e70 <GetDataSlab+0x54ac>
   27e88:	ldr	r3, [fp, #12]
   27e8c:	ldr	r7, [r3]
   27e90:	ldr	r3, [fp, #8]
   27e94:	ldr	r2, [r3]
   27e98:	str	r2, [sp, #36]	; 0x24
   27e9c:	ldr	r3, [sp, #36]	; 0x24
   27ea0:	mov	r2, r6
   27ea4:	str	r7, [sp, #44]	; 0x2c
   27ea8:	sub	r4, r3, r7
   27eac:	add	r5, r0, r4, lsl #1
   27eb0:	ldr	r0, [fp, #24]
   27eb4:	add	lr, lr, r4
   27eb8:	cmp	r0, #2
   27ebc:	blt	27f68 <GetDataSlab+0x55a4>
   27ec0:	ldr	r8, [sp, #32]
   27ec4:	mov	r0, #0
   27ec8:	ldr	r4, [r1, r0]
   27ecc:	ldr	r3, [sp, #52]	; 0x34
   27ed0:	add	r4, r4, #1
   27ed4:	str	r4, [r1, r0]
   27ed8:	ldr	r7, [r3, r0]
   27edc:	sdiv	ip, r4, r7
   27ee0:	mls	r7, ip, r7, r4
   27ee4:	cmp	r7, #0
   27ee8:	bne	27f58 <GetDataSlab+0x5594>
   27eec:	mov	r3, #0
   27ef0:	str	r3, [r1, r0]
   27ef4:	ldr	r3, [sp, #48]	; 0x30
   27ef8:	ldr	r4, [r3, r0]
   27efc:	sdiv	r7, lr, r4
   27f00:	mls	r7, r7, r4, lr
   27f04:	cmp	r7, #0
   27f08:	beq	27f28 <GetDataSlab+0x5564>
   27f0c:	add	r3, sp, #64	; 0x40
   27f10:	ldr	r6, [r9, r0]
   27f14:	sub	r7, r4, r7
   27f18:	ldr	r3, [r3, r0]
   27f1c:	mla	r3, r6, r3, r7
   27f20:	add	lr, r3, lr
   27f24:	b	27f44 <GetDataSlab+0x5580>
   27f28:	ldr	r4, [r9, r0]
   27f2c:	cmp	r4, #0
   27f30:	beq	27f48 <GetDataSlab+0x5584>
   27f34:	add	r3, sp, #64	; 0x40
   27f38:	ldr	r3, [r3, r0]
   27f3c:	mla	lr, r3, r4, lr
   27f40:	mul	r3, r3, r4
   27f44:	add	r5, r5, r3, lsl #1
   27f48:	subs	r8, r8, #1
   27f4c:	add	r0, r0, #4
   27f50:	bne	27ec8 <GetDataSlab+0x5504>
   27f54:	b	27f68 <GetDataSlab+0x55a4>
   27f58:	ldr	r3, [sp, #28]
   27f5c:	ldr	r0, [r3, r0]
   27f60:	add	r5, r5, r0, lsl #1
   27f64:	add	lr, r0, lr
   27f68:	ldr	r0, [sp, #40]	; 0x28
   27f6c:	mov	r6, r2
   27f70:	add	r6, sl, r2
   27f74:	cmp	r6, r0
   27f78:	mov	r0, #0
   27f7c:	blt	27e48 <GetDataSlab+0x5484>
   27f80:	b	24900 <GetDataSlab+0x1f3c>
   27f84:	ldr	r3, [r3]
   27f88:	mov	r5, #0
   27f8c:	add	r7, sp, #64	; 0x40
   27f90:	sub	r0, r3, #1
   27f94:	str	r0, [fp, #-72]	; 0xffffffb8
   27f98:	ldr	r0, [r4]
   27f9c:	str	r0, [sp, #40]	; 0x28
   27fa0:	str	r0, [sp, #64]	; 0x40
   27fa4:	ldr	r0, [fp, #20]
   27fa8:	ldr	lr, [r0]
   27fac:	ldr	r0, [fp, #24]
   27fb0:	cmp	r0, #2
   27fb4:	mov	r0, lr
   27fb8:	str	lr, [sp, #44]	; 0x2c
   27fbc:	blt	28070 <GetDataSlab+0x56ac>
   27fc0:	ldr	r6, [sp, #40]	; 0x28
   27fc4:	mov	r9, r4
   27fc8:	mov	r0, #1
   27fcc:	mov	r5, #0
   27fd0:	mov	r1, r4
   27fd4:	mov	r2, lr
   27fd8:	str	lr, [sp, #44]	; 0x2c
   27fdc:	mov	r8, r6
   27fe0:	mov	r2, r5
   27fe4:	ldr	r5, [fp, #16]
   27fe8:	mov	r4, #0
   27fec:	ldr	r5, [r5, r0, lsl #2]
   27ff0:	str	r6, [r7, r0, lsl #2]
   27ff4:	sub	r7, fp, #72	; 0x48
   27ff8:	sub	r5, r5, #1
   27ffc:	str	r5, [r7, r0, lsl #2]
   28000:	ldr	ip, [r9, r0, lsl #2]
   28004:	mov	r7, ip
   28008:	mul	r6, r7, r6
   2800c:	ldr	r7, [r1, -r4, lsl #2]
   28010:	add	r4, r4, #1
   28014:	cmp	r0, r4
   28018:	mul	r5, r5, r7
   2801c:	bne	28008 <GetDataSlab+0x5644>
   28020:	sub	r4, fp, #72	; 0x48
   28024:	add	r7, sp, #64	; 0x40
   28028:	add	r1, r1, #4
   2802c:	str	r5, [r4, r0, lsl #2]
   28030:	ldr	r4, [fp, #12]
   28034:	str	r6, [r7, r0, lsl #2]
   28038:	mov	r5, r2
   2803c:	ldr	r4, [r4, r0, lsl #2]
   28040:	mla	r5, r4, r8, r2
   28044:	ldr	r4, [fp, #20]
   28048:	ldr	r2, [sp, #44]	; 0x2c
   2804c:	mov	r8, r6
   28050:	mov	r6, ip
   28054:	ldr	r4, [r4, r0, lsl #2]
   28058:	add	r0, r0, #1
   2805c:	mul	r2, r4, r2
   28060:	ldr	r4, [fp, #24]
   28064:	str	r2, [sp, #44]	; 0x2c
   28068:	cmp	r0, r4
   2806c:	bne	27fe0 <GetDataSlab+0x561c>
   28070:	ldr	r0, [sp, #48]	; 0x30
   28074:	cmp	r3, #1
   28078:	add	r6, r0, r5, lsl #2
   2807c:	bne	34d74 <GetDataSlab+0x123b0>
   28080:	ldr	r0, [sp, #44]	; 0x2c
   28084:	ldr	r9, [fp, #12]
   28088:	cmp	r0, #1
   2808c:	add	r0, sp, #64	; 0x40
   28090:	blt	248fc <GetDataSlab+0x1f38>
   28094:	orr	r0, r0, #4
   28098:	ldr	r3, [fp, #20]
   2809c:	add	r1, sp, #104	; 0x68
   280a0:	mov	r8, #0
   280a4:	str	r0, [sp, #48]	; 0x30
   280a8:	ldr	r0, [fp, #24]
   280ac:	orr	r1, r1, #4
   280b0:	add	r2, r3, #4
   280b4:	sub	r0, r0, #1
   280b8:	str	r2, [sp, #52]	; 0x34
   280bc:	str	r0, [sp, #32]
   280c0:	sub	r0, fp, #72	; 0x48
   280c4:	orr	r0, r0, #4
   280c8:	str	r0, [sp, #28]
   280cc:	ldr	r0, [r9], #4
   280d0:	str	r0, [sp, #36]	; 0x24
   280d4:	ldr	r2, [sp, #36]	; 0x24
   280d8:	ldr	r3, [fp, #12]
   280dc:	cmp	lr, #1
   280e0:	add	r0, r2, r5
   280e4:	add	r5, r6, r2, lsl #2
   280e8:	ldr	r6, [fp, #20]
   280ec:	blt	28124 <GetDataSlab+0x5760>
   280f0:	ldr	r2, [sp, #56]	; 0x38
   280f4:	mov	r4, #0
   280f8:	add	r7, r2, r8
   280fc:	ldr	r2, [r5, r4, lsl #2]
   28100:	strb	r2, [r7, r4]
   28104:	add	r4, r4, #1
   28108:	ldr	lr, [r6]
   2810c:	cmp	r4, lr
   28110:	blt	280fc <GetDataSlab+0x5738>
   28114:	ldr	r2, [r3]
   28118:	ldr	r3, [fp, #8]
   2811c:	ldr	r3, [r3]
   28120:	str	r3, [sp, #40]	; 0x28
   28124:	ldr	r3, [sp, #40]	; 0x28
   28128:	str	r2, [sp, #36]	; 0x24
   2812c:	sub	r7, r3, r2
   28130:	add	r6, r5, r7, lsl #2
   28134:	add	r5, r0, r7
   28138:	ldr	r0, [fp, #24]
   2813c:	cmp	r0, #2
   28140:	blt	281f8 <GetDataSlab+0x5834>
   28144:	ldr	sl, [sp, #32]
   28148:	mov	r0, #0
   2814c:	ldr	r4, [r1, r0]
   28150:	ldr	r2, [sp, #52]	; 0x34
   28154:	add	r4, r4, #1
   28158:	str	r4, [r1, r0]
   2815c:	ldr	r7, [r2, r0]
   28160:	sdiv	ip, r4, r7
   28164:	mls	r7, ip, r7, r4
   28168:	cmp	r7, #0
   2816c:	bne	281e8 <GetDataSlab+0x5824>
   28170:	mov	r2, #0
   28174:	str	r2, [r1, r0]
   28178:	ldr	r2, [sp, #48]	; 0x30
   2817c:	ldr	r4, [r2, r0]
   28180:	sdiv	r7, r5, r4
   28184:	mls	r7, r7, r4, r5
   28188:	cmp	r7, #0
   2818c:	beq	281b8 <GetDataSlab+0x57f4>
   28190:	add	r3, sp, #64	; 0x40
   28194:	mov	r2, r6
   28198:	ldr	r6, [r9, r0]
   2819c:	sub	r7, r4, r7
   281a0:	ldr	r3, [r3, r0]
   281a4:	mla	r3, r6, r3, r7
   281a8:	mov	r6, r2
   281ac:	add	r5, r3, r5
   281b0:	add	r6, r2, r3, lsl #2
   281b4:	b	281d8 <GetDataSlab+0x5814>
   281b8:	ldr	r4, [r9, r0]
   281bc:	cmp	r4, #0
   281c0:	beq	281d8 <GetDataSlab+0x5814>
   281c4:	add	r3, sp, #64	; 0x40
   281c8:	ldr	r3, [r3, r0]
   281cc:	mla	r5, r3, r4, r5
   281d0:	mul	r3, r3, r4
   281d4:	add	r6, r6, r3, lsl #2
   281d8:	subs	sl, sl, #1
   281dc:	add	r0, r0, #4
   281e0:	bne	2814c <GetDataSlab+0x5788>
   281e4:	b	281f8 <GetDataSlab+0x5834>
   281e8:	ldr	r2, [sp, #28]
   281ec:	ldr	r0, [r2, r0]
   281f0:	add	r6, r6, r0, lsl #2
   281f4:	add	r5, r0, r5
   281f8:	ldr	r0, [sp, #44]	; 0x2c
   281fc:	add	r8, lr, r8
   28200:	cmp	r8, r0
   28204:	mov	r0, #0
   28208:	blt	280d4 <GetDataSlab+0x5710>
   2820c:	b	24900 <GetDataSlab+0x1f3c>
   28210:	ldr	r3, [r3]
   28214:	mov	r5, #0
   28218:	add	r7, sp, #64	; 0x40
   2821c:	sub	r0, r3, #1
   28220:	str	r0, [fp, #-72]	; 0xffffffb8
   28224:	ldr	r0, [r4]
   28228:	str	r0, [sp, #40]	; 0x28
   2822c:	str	r0, [sp, #64]	; 0x40
   28230:	ldr	r0, [fp, #20]
   28234:	ldr	lr, [r0]
   28238:	ldr	r0, [fp, #24]
   2823c:	cmp	r0, #2
   28240:	mov	r0, lr
   28244:	str	lr, [sp, #44]	; 0x2c
   28248:	blt	282fc <GetDataSlab+0x5938>
   2824c:	ldr	r6, [sp, #40]	; 0x28
   28250:	mov	r9, r4
   28254:	mov	r0, #1
   28258:	mov	r5, #0
   2825c:	mov	r1, r4
   28260:	mov	r2, lr
   28264:	str	lr, [sp, #44]	; 0x2c
   28268:	mov	r8, r6
   2826c:	mov	r2, r5
   28270:	ldr	r5, [fp, #16]
   28274:	mov	r4, #0
   28278:	ldr	r5, [r5, r0, lsl #2]
   2827c:	str	r6, [r7, r0, lsl #2]
   28280:	sub	r7, fp, #72	; 0x48
   28284:	sub	r5, r5, #1
   28288:	str	r5, [r7, r0, lsl #2]
   2828c:	ldr	ip, [r9, r0, lsl #2]
   28290:	mov	r7, ip
   28294:	mul	r6, r7, r6
   28298:	ldr	r7, [r1, -r4, lsl #2]
   2829c:	add	r4, r4, #1
   282a0:	cmp	r0, r4
   282a4:	mul	r5, r5, r7
   282a8:	bne	28294 <GetDataSlab+0x58d0>
   282ac:	sub	r4, fp, #72	; 0x48
   282b0:	add	r7, sp, #64	; 0x40
   282b4:	add	r1, r1, #4
   282b8:	str	r5, [r4, r0, lsl #2]
   282bc:	ldr	r4, [fp, #12]
   282c0:	str	r6, [r7, r0, lsl #2]
   282c4:	mov	r5, r2
   282c8:	ldr	r4, [r4, r0, lsl #2]
   282cc:	mla	r5, r4, r8, r2
   282d0:	ldr	r4, [fp, #20]
   282d4:	ldr	r2, [sp, #44]	; 0x2c
   282d8:	mov	r8, r6
   282dc:	mov	r6, ip
   282e0:	ldr	r4, [r4, r0, lsl #2]
   282e4:	add	r0, r0, #1
   282e8:	mul	r2, r4, r2
   282ec:	ldr	r4, [fp, #24]
   282f0:	str	r2, [sp, #44]	; 0x2c
   282f4:	cmp	r0, r4
   282f8:	bne	2826c <GetDataSlab+0x58a8>
   282fc:	ldr	r0, [sp, #48]	; 0x30
   28300:	cmp	r3, #1
   28304:	add	r6, r0, r5, lsl #2
   28308:	bne	34f38 <GetDataSlab+0x12574>
   2830c:	ldr	r0, [sp, #44]	; 0x2c
   28310:	ldr	r9, [fp, #12]
   28314:	cmp	r0, #1
   28318:	add	r0, sp, #64	; 0x40
   2831c:	blt	248fc <GetDataSlab+0x1f38>
   28320:	orr	r0, r0, #4
   28324:	ldr	r3, [fp, #20]
   28328:	add	r1, sp, #104	; 0x68
   2832c:	mov	r8, #0
   28330:	str	r0, [sp, #48]	; 0x30
   28334:	ldr	r0, [fp, #24]
   28338:	orr	r1, r1, #4
   2833c:	add	r2, r3, #4
   28340:	sub	r0, r0, #1
   28344:	str	r2, [sp, #52]	; 0x34
   28348:	str	r0, [sp, #32]
   2834c:	sub	r0, fp, #72	; 0x48
   28350:	orr	r0, r0, #4
   28354:	str	r0, [sp, #28]
   28358:	ldr	r0, [r9], #4
   2835c:	str	r0, [sp, #36]	; 0x24
   28360:	ldr	r2, [sp, #36]	; 0x24
   28364:	ldr	r3, [fp, #12]
   28368:	cmp	lr, #1
   2836c:	add	r0, r2, r5
   28370:	add	r5, r6, r2, lsl #2
   28374:	ldr	r6, [fp, #20]
   28378:	blt	283b0 <GetDataSlab+0x59ec>
   2837c:	ldr	r2, [sp, #56]	; 0x38
   28380:	mov	r4, #0
   28384:	add	r7, r2, r8
   28388:	ldr	r2, [r5, r4, lsl #2]
   2838c:	strb	r2, [r7, r4]
   28390:	add	r4, r4, #1
   28394:	ldr	lr, [r6]
   28398:	cmp	r4, lr
   2839c:	blt	28388 <GetDataSlab+0x59c4>
   283a0:	ldr	r2, [r3]
   283a4:	ldr	r3, [fp, #8]
   283a8:	ldr	r3, [r3]
   283ac:	str	r3, [sp, #40]	; 0x28
   283b0:	ldr	r3, [sp, #40]	; 0x28
   283b4:	str	r2, [sp, #36]	; 0x24
   283b8:	sub	r7, r3, r2
   283bc:	add	r6, r5, r7, lsl #2
   283c0:	add	r5, r0, r7
   283c4:	ldr	r0, [fp, #24]
   283c8:	cmp	r0, #2
   283cc:	blt	28484 <GetDataSlab+0x5ac0>
   283d0:	ldr	sl, [sp, #32]
   283d4:	mov	r0, #0
   283d8:	ldr	r4, [r1, r0]
   283dc:	ldr	r2, [sp, #52]	; 0x34
   283e0:	add	r4, r4, #1
   283e4:	str	r4, [r1, r0]
   283e8:	ldr	r7, [r2, r0]
   283ec:	sdiv	ip, r4, r7
   283f0:	mls	r7, ip, r7, r4
   283f4:	cmp	r7, #0
   283f8:	bne	28474 <GetDataSlab+0x5ab0>
   283fc:	mov	r2, #0
   28400:	str	r2, [r1, r0]
   28404:	ldr	r2, [sp, #48]	; 0x30
   28408:	ldr	r4, [r2, r0]
   2840c:	sdiv	r7, r5, r4
   28410:	mls	r7, r7, r4, r5
   28414:	cmp	r7, #0
   28418:	beq	28444 <GetDataSlab+0x5a80>
   2841c:	add	r3, sp, #64	; 0x40
   28420:	mov	r2, r6
   28424:	ldr	r6, [r9, r0]
   28428:	sub	r7, r4, r7
   2842c:	ldr	r3, [r3, r0]
   28430:	mla	r3, r6, r3, r7
   28434:	mov	r6, r2
   28438:	add	r5, r3, r5
   2843c:	add	r6, r2, r3, lsl #2
   28440:	b	28464 <GetDataSlab+0x5aa0>
   28444:	ldr	r4, [r9, r0]
   28448:	cmp	r4, #0
   2844c:	beq	28464 <GetDataSlab+0x5aa0>
   28450:	add	r3, sp, #64	; 0x40
   28454:	ldr	r3, [r3, r0]
   28458:	mla	r5, r3, r4, r5
   2845c:	mul	r3, r3, r4
   28460:	add	r6, r6, r3, lsl #2
   28464:	subs	sl, sl, #1
   28468:	add	r0, r0, #4
   2846c:	bne	283d8 <GetDataSlab+0x5a14>
   28470:	b	28484 <GetDataSlab+0x5ac0>
   28474:	ldr	r2, [sp, #28]
   28478:	ldr	r0, [r2, r0]
   2847c:	add	r6, r6, r0, lsl #2
   28480:	add	r5, r0, r5
   28484:	ldr	r0, [sp, #44]	; 0x2c
   28488:	add	r8, lr, r8
   2848c:	cmp	r8, r0
   28490:	mov	r0, #0
   28494:	blt	28360 <GetDataSlab+0x599c>
   28498:	b	24900 <GetDataSlab+0x1f3c>
   2849c:	ldr	r3, [r3]
   284a0:	sub	r9, fp, #72	; 0x48
   284a4:	mov	lr, #0
   284a8:	add	r7, sp, #64	; 0x40
   284ac:	sub	r0, r3, #1
   284b0:	str	r0, [fp, #-72]	; 0xffffffb8
   284b4:	ldr	r0, [r4]
   284b8:	str	r0, [sp, #36]	; 0x24
   284bc:	str	r0, [sp, #64]	; 0x40
   284c0:	ldr	r0, [fp, #20]
   284c4:	ldr	sl, [r0]
   284c8:	ldr	r0, [fp, #24]
   284cc:	cmp	r0, #2
   284d0:	mov	r0, sl
   284d4:	str	sl, [sp, #40]	; 0x28
   284d8:	blt	28580 <GetDataSlab+0x5bbc>
   284dc:	ldr	r6, [sp, #36]	; 0x24
   284e0:	ldr	r1, [fp, #8]
   284e4:	mov	r0, #1
   284e8:	mov	lr, #0
   284ec:	mov	r2, sl
   284f0:	str	sl, [sp, #40]	; 0x28
   284f4:	mov	r8, r6
   284f8:	ldr	r5, [fp, #16]
   284fc:	ldr	r2, [fp, #8]
   28500:	mov	r4, #0
   28504:	ldr	r5, [r5, r0, lsl #2]
   28508:	str	r6, [r7, r0, lsl #2]
   2850c:	sub	r5, r5, #1
   28510:	str	r5, [r9, r0, lsl #2]
   28514:	ldr	ip, [r2, r0, lsl #2]
   28518:	mov	r7, ip
   2851c:	mul	r6, r7, r6
   28520:	ldr	r7, [r1, -r4, lsl #2]
   28524:	add	r4, r4, #1
   28528:	cmp	r0, r4
   2852c:	mul	r5, r5, r7
   28530:	bne	2851c <GetDataSlab+0x5b58>
   28534:	ldr	r4, [fp, #12]
   28538:	add	r7, sp, #64	; 0x40
   2853c:	sub	r9, fp, #72	; 0x48
   28540:	ldr	r2, [sp, #40]	; 0x28
   28544:	add	r1, r1, #4
   28548:	str	r6, [r7, r0, lsl #2]
   2854c:	str	r5, [r9, r0, lsl #2]
   28550:	ldr	r4, [r4, r0, lsl #2]
   28554:	mla	lr, r4, r8, lr
   28558:	ldr	r4, [fp, #20]
   2855c:	mov	r8, r6
   28560:	mov	r6, ip
   28564:	ldr	r4, [r4, r0, lsl #2]
   28568:	add	r0, r0, #1
   2856c:	mul	r2, r4, r2
   28570:	ldr	r4, [fp, #24]
   28574:	str	r2, [sp, #40]	; 0x28
   28578:	cmp	r0, r4
   2857c:	bne	284f8 <GetDataSlab+0x5b34>
   28580:	ldr	r0, [sp, #48]	; 0x30
   28584:	cmp	r3, #1
   28588:	add	r5, r0, lr, lsl #2
   2858c:	bne	350fc <GetDataSlab+0x12738>
   28590:	ldr	r0, [sp, #40]	; 0x28
   28594:	cmp	r0, #1
   28598:	add	r0, sp, #64	; 0x40
   2859c:	blt	248fc <GetDataSlab+0x1f38>
   285a0:	orr	r0, r0, #4
   285a4:	ldr	r8, [fp, #12]
   285a8:	ldr	r3, [fp, #20]
   285ac:	add	r1, sp, #104	; 0x68
   285b0:	str	r0, [sp, #48]	; 0x30
   285b4:	ldr	r0, [fp, #24]
   285b8:	orr	r1, r1, #4
   285bc:	str	r1, [sp, #28]
   285c0:	mov	r1, #0
   285c4:	add	r2, r3, #4
   285c8:	sub	r0, r0, #1
   285cc:	str	r2, [sp, #52]	; 0x34
   285d0:	str	r0, [sp, #32]
   285d4:	sub	r0, fp, #72	; 0x48
   285d8:	orr	r0, r0, #4
   285dc:	str	r0, [sp, #24]
   285e0:	ldr	r0, [r8], #4
   285e4:	str	r0, [sp, #44]	; 0x2c
   285e8:	ldr	r3, [sp, #44]	; 0x2c
   285ec:	ldr	r6, [fp, #8]
   285f0:	cmp	sl, #1
   285f4:	add	r0, r5, r3, lsl #2
   285f8:	add	lr, r3, lr
   285fc:	blt	28648 <GetDataSlab+0x5c84>
   28600:	ldr	r2, [sp, #56]	; 0x38
   28604:	ldr	r3, [fp, #20]
   28608:	mov	r4, #0
   2860c:	mov	r5, r0
   28610:	add	r7, r2, r1
   28614:	vldr	s0, [r5]
   28618:	add	r5, r5, #4
   2861c:	vcvt.s32.f32	s0, s0
   28620:	vmov	r2, s0
   28624:	strb	r2, [r7, r4]
   28628:	add	r4, r4, #1
   2862c:	ldr	sl, [r3]
   28630:	cmp	r4, sl
   28634:	blt	28614 <GetDataSlab+0x5c50>
   28638:	ldr	r3, [fp, #12]
   2863c:	ldr	r2, [r6]
   28640:	ldr	r3, [r3]
   28644:	str	r2, [sp, #36]	; 0x24
   28648:	mov	r2, r1
   2864c:	ldr	r1, [sp, #36]	; 0x24
   28650:	str	r3, [sp, #44]	; 0x2c
   28654:	sub	r4, r1, r3
   28658:	add	r5, r0, r4, lsl #2
   2865c:	ldr	r0, [fp, #24]
   28660:	add	lr, lr, r4
   28664:	cmp	r0, #2
   28668:	blt	28718 <GetDataSlab+0x5d54>
   2866c:	ldr	r9, [sp, #32]
   28670:	ldr	r1, [sp, #28]
   28674:	mov	r0, #0
   28678:	ldr	r4, [r1, r0]
   2867c:	ldr	r3, [sp, #52]	; 0x34
   28680:	add	r4, r4, #1
   28684:	str	r4, [r1, r0]
   28688:	ldr	r7, [r3, r0]
   2868c:	sdiv	ip, r4, r7
   28690:	mls	r7, ip, r7, r4
   28694:	cmp	r7, #0
   28698:	bne	28708 <GetDataSlab+0x5d44>
   2869c:	mov	r3, #0
   286a0:	str	r3, [r1, r0]
   286a4:	ldr	r3, [sp, #48]	; 0x30
   286a8:	ldr	r4, [r3, r0]
   286ac:	sdiv	r7, lr, r4
   286b0:	mls	r7, r7, r4, lr
   286b4:	cmp	r7, #0
   286b8:	beq	286d8 <GetDataSlab+0x5d14>
   286bc:	add	r3, sp, #64	; 0x40
   286c0:	ldr	r6, [r8, r0]
   286c4:	sub	r7, r4, r7
   286c8:	ldr	r3, [r3, r0]
   286cc:	mla	r3, r6, r3, r7
   286d0:	add	lr, r3, lr
   286d4:	b	286f4 <GetDataSlab+0x5d30>
   286d8:	ldr	r4, [r8, r0]
   286dc:	cmp	r4, #0
   286e0:	beq	286f8 <GetDataSlab+0x5d34>
   286e4:	add	r3, sp, #64	; 0x40
   286e8:	ldr	r3, [r3, r0]
   286ec:	mla	lr, r3, r4, lr
   286f0:	mul	r3, r3, r4
   286f4:	add	r5, r5, r3, lsl #2
   286f8:	subs	r9, r9, #1
   286fc:	add	r0, r0, #4
   28700:	bne	28678 <GetDataSlab+0x5cb4>
   28704:	b	28718 <GetDataSlab+0x5d54>
   28708:	ldr	r3, [sp, #24]
   2870c:	ldr	r0, [r3, r0]
   28710:	add	r5, r5, r0, lsl #2
   28714:	add	lr, r0, lr
   28718:	ldr	r0, [sp, #40]	; 0x28
   2871c:	mov	r1, r2
   28720:	add	r1, sl, r2
   28724:	cmp	r1, r0
   28728:	mov	r0, #0
   2872c:	blt	285e8 <GetDataSlab+0x5c24>
   28730:	b	24900 <GetDataSlab+0x1f3c>
   28734:	ldr	r3, [r3]
   28738:	sub	r9, fp, #72	; 0x48
   2873c:	mov	lr, #0
   28740:	add	r7, sp, #64	; 0x40
   28744:	sub	r0, r3, #1
   28748:	str	r0, [fp, #-72]	; 0xffffffb8
   2874c:	ldr	r0, [r4]
   28750:	str	r0, [sp, #36]	; 0x24
   28754:	str	r0, [sp, #64]	; 0x40
   28758:	ldr	r0, [fp, #20]
   2875c:	ldr	sl, [r0]
   28760:	ldr	r0, [fp, #24]
   28764:	cmp	r0, #2
   28768:	mov	r0, sl
   2876c:	str	sl, [sp, #40]	; 0x28
   28770:	blt	28818 <GetDataSlab+0x5e54>
   28774:	ldr	r6, [sp, #36]	; 0x24
   28778:	ldr	r1, [fp, #8]
   2877c:	mov	r0, #1
   28780:	mov	lr, #0
   28784:	mov	r2, sl
   28788:	str	sl, [sp, #40]	; 0x28
   2878c:	mov	r8, r6
   28790:	ldr	r5, [fp, #16]
   28794:	ldr	r2, [fp, #8]
   28798:	mov	r4, #0
   2879c:	ldr	r5, [r5, r0, lsl #2]
   287a0:	str	r6, [r7, r0, lsl #2]
   287a4:	sub	r5, r5, #1
   287a8:	str	r5, [r9, r0, lsl #2]
   287ac:	ldr	ip, [r2, r0, lsl #2]
   287b0:	mov	r7, ip
   287b4:	mul	r6, r7, r6
   287b8:	ldr	r7, [r1, -r4, lsl #2]
   287bc:	add	r4, r4, #1
   287c0:	cmp	r0, r4
   287c4:	mul	r5, r5, r7
   287c8:	bne	287b4 <GetDataSlab+0x5df0>
   287cc:	ldr	r4, [fp, #12]
   287d0:	add	r7, sp, #64	; 0x40
   287d4:	sub	r9, fp, #72	; 0x48
   287d8:	ldr	r2, [sp, #40]	; 0x28
   287dc:	add	r1, r1, #4
   287e0:	str	r6, [r7, r0, lsl #2]
   287e4:	str	r5, [r9, r0, lsl #2]
   287e8:	ldr	r4, [r4, r0, lsl #2]
   287ec:	mla	lr, r4, r8, lr
   287f0:	ldr	r4, [fp, #20]
   287f4:	mov	r8, r6
   287f8:	mov	r6, ip
   287fc:	ldr	r4, [r4, r0, lsl #2]
   28800:	add	r0, r0, #1
   28804:	mul	r2, r4, r2
   28808:	ldr	r4, [fp, #24]
   2880c:	str	r2, [sp, #40]	; 0x28
   28810:	cmp	r0, r4
   28814:	bne	28790 <GetDataSlab+0x5dcc>
   28818:	ldr	r0, [sp, #48]	; 0x30
   2881c:	cmp	r3, #1
   28820:	add	r5, r0, lr, lsl #3
   28824:	bne	352c8 <GetDataSlab+0x12904>
   28828:	ldr	r0, [sp, #40]	; 0x28
   2882c:	cmp	r0, #1
   28830:	add	r0, sp, #64	; 0x40
   28834:	blt	248fc <GetDataSlab+0x1f38>
   28838:	orr	r0, r0, #4
   2883c:	ldr	r8, [fp, #12]
   28840:	ldr	r3, [fp, #20]
   28844:	add	r1, sp, #104	; 0x68
   28848:	str	r0, [sp, #48]	; 0x30
   2884c:	ldr	r0, [fp, #24]
   28850:	orr	r1, r1, #4
   28854:	str	r1, [sp, #28]
   28858:	mov	r1, #0
   2885c:	add	r2, r3, #4
   28860:	sub	r0, r0, #1
   28864:	str	r2, [sp, #52]	; 0x34
   28868:	str	r0, [sp, #32]
   2886c:	sub	r0, fp, #72	; 0x48
   28870:	orr	r0, r0, #4
   28874:	str	r0, [sp, #24]
   28878:	ldr	r0, [r8], #4
   2887c:	str	r0, [sp, #44]	; 0x2c
   28880:	ldr	r3, [sp, #44]	; 0x2c
   28884:	ldr	r6, [fp, #8]
   28888:	cmp	sl, #1
   2888c:	add	r0, r5, r3, lsl #3
   28890:	add	lr, r3, lr
   28894:	blt	288e0 <GetDataSlab+0x5f1c>
   28898:	ldr	r2, [sp, #56]	; 0x38
   2889c:	ldr	r3, [fp, #20]
   288a0:	mov	r4, #0
   288a4:	mov	r5, r0
   288a8:	add	r7, r2, r1
   288ac:	vldr	d16, [r5]
   288b0:	add	r5, r5, #8
   288b4:	vcvt.s32.f64	s0, d16
   288b8:	vmov	r2, s0
   288bc:	strb	r2, [r7, r4]
   288c0:	add	r4, r4, #1
   288c4:	ldr	sl, [r3]
   288c8:	cmp	r4, sl
   288cc:	blt	288ac <GetDataSlab+0x5ee8>
   288d0:	ldr	r3, [fp, #12]
   288d4:	ldr	r2, [r6]
   288d8:	ldr	r3, [r3]
   288dc:	str	r2, [sp, #36]	; 0x24
   288e0:	mov	r2, r1
   288e4:	ldr	r1, [sp, #36]	; 0x24
   288e8:	str	r3, [sp, #44]	; 0x2c
   288ec:	sub	r4, r1, r3
   288f0:	add	r5, r0, r4, lsl #3
   288f4:	ldr	r0, [fp, #24]
   288f8:	add	lr, lr, r4
   288fc:	cmp	r0, #2
   28900:	blt	289b0 <GetDataSlab+0x5fec>
   28904:	ldr	r9, [sp, #32]
   28908:	ldr	r1, [sp, #28]
   2890c:	mov	r0, #0
   28910:	ldr	r4, [r1, r0]
   28914:	ldr	r3, [sp, #52]	; 0x34
   28918:	add	r4, r4, #1
   2891c:	str	r4, [r1, r0]
   28920:	ldr	r7, [r3, r0]
   28924:	sdiv	ip, r4, r7
   28928:	mls	r7, ip, r7, r4
   2892c:	cmp	r7, #0
   28930:	bne	289a0 <GetDataSlab+0x5fdc>
   28934:	mov	r3, #0
   28938:	str	r3, [r1, r0]
   2893c:	ldr	r3, [sp, #48]	; 0x30
   28940:	ldr	r4, [r3, r0]
   28944:	sdiv	r7, lr, r4
   28948:	mls	r7, r7, r4, lr
   2894c:	cmp	r7, #0
   28950:	beq	28970 <GetDataSlab+0x5fac>
   28954:	add	r3, sp, #64	; 0x40
   28958:	ldr	r6, [r8, r0]
   2895c:	sub	r7, r4, r7
   28960:	ldr	r3, [r3, r0]
   28964:	mla	r3, r6, r3, r7
   28968:	add	lr, r3, lr
   2896c:	b	2898c <GetDataSlab+0x5fc8>
   28970:	ldr	r4, [r8, r0]
   28974:	cmp	r4, #0
   28978:	beq	28990 <GetDataSlab+0x5fcc>
   2897c:	add	r3, sp, #64	; 0x40
   28980:	ldr	r3, [r3, r0]
   28984:	mla	lr, r3, r4, lr
   28988:	mul	r3, r3, r4
   2898c:	add	r5, r5, r3, lsl #3
   28990:	subs	r9, r9, #1
   28994:	add	r0, r0, #4
   28998:	bne	28910 <GetDataSlab+0x5f4c>
   2899c:	b	289b0 <GetDataSlab+0x5fec>
   289a0:	ldr	r3, [sp, #24]
   289a4:	ldr	r0, [r3, r0]
   289a8:	add	r5, r5, r0, lsl #3
   289ac:	add	lr, r0, lr
   289b0:	ldr	r0, [sp, #40]	; 0x28
   289b4:	mov	r1, r2
   289b8:	add	r1, sl, r2
   289bc:	cmp	r1, r0
   289c0:	mov	r0, #0
   289c4:	blt	28880 <GetDataSlab+0x5ebc>
   289c8:	b	24900 <GetDataSlab+0x1f3c>
   289cc:	ldr	r5, [r3]
   289d0:	mov	r9, r4
   289d4:	mov	lr, #0
   289d8:	sub	r0, r5, #1
   289dc:	str	r0, [fp, #-72]	; 0xffffffb8
   289e0:	ldr	r0, [r4]
   289e4:	add	r4, sp, #64	; 0x40
   289e8:	str	r0, [sp, #32]
   289ec:	str	r0, [sp, #64]	; 0x40
   289f0:	ldr	r0, [fp, #20]
   289f4:	ldr	r1, [r0]
   289f8:	ldr	r0, [fp, #24]
   289fc:	cmp	r0, #2
   28a00:	mov	r0, r1
   28a04:	str	r1, [sp, #36]	; 0x24
   28a08:	blt	28ab0 <GetDataSlab+0x60ec>
   28a0c:	ldr	r7, [sp, #32]
   28a10:	mov	r0, #1
   28a14:	mov	lr, #0
   28a18:	mov	r2, r9
   28a1c:	mov	r3, r1
   28a20:	str	r1, [sp, #36]	; 0x24
   28a24:	mov	r8, r7
   28a28:	ldr	r3, [fp, #16]
   28a2c:	ldr	r3, [r3, r0, lsl #2]
   28a30:	str	r7, [r4, r0, lsl #2]
   28a34:	mov	r4, #0
   28a38:	sub	r6, r3, #1
   28a3c:	sub	r3, fp, #72	; 0x48
   28a40:	str	r6, [r3, r0, lsl #2]
   28a44:	ldr	ip, [r9, r0, lsl #2]
   28a48:	mov	r3, ip
   28a4c:	mul	r7, r3, r7
   28a50:	ldr	r3, [r2, -r4, lsl #2]
   28a54:	add	r4, r4, #1
   28a58:	cmp	r0, r4
   28a5c:	mul	r6, r6, r3
   28a60:	bne	28a4c <GetDataSlab+0x6088>
   28a64:	sub	r3, fp, #72	; 0x48
   28a68:	add	r4, sp, #64	; 0x40
   28a6c:	add	r2, r2, #4
   28a70:	str	r6, [r3, r0, lsl #2]
   28a74:	ldr	r3, [fp, #12]
   28a78:	str	r7, [r4, r0, lsl #2]
   28a7c:	ldr	r6, [sp, #36]	; 0x24
   28a80:	ldr	r3, [r3, r0, lsl #2]
   28a84:	mla	lr, r3, r8, lr
   28a88:	ldr	r3, [fp, #20]
   28a8c:	mov	r8, r7
   28a90:	mov	r7, ip
   28a94:	ldr	r3, [r3, r0, lsl #2]
   28a98:	add	r0, r0, #1
   28a9c:	mul	r6, r3, r6
   28aa0:	ldr	r3, [fp, #24]
   28aa4:	str	r6, [sp, #36]	; 0x24
   28aa8:	cmp	r0, r3
   28aac:	bne	28a28 <GetDataSlab+0x6064>
   28ab0:	ldr	r0, [sp, #48]	; 0x30
   28ab4:	cmp	r5, #1
   28ab8:	add	r7, r0, lr, lsl #3
   28abc:	bne	35494 <GetDataSlab+0x12ad0>
   28ac0:	ldr	r0, [sp, #36]	; 0x24
   28ac4:	ldr	r5, [fp, #12]
   28ac8:	add	r2, sp, #64	; 0x40
   28acc:	cmp	r0, #1
   28ad0:	blt	35644 <GetDataSlab+0x12c80>
   28ad4:	ldr	r3, [fp, #20]
   28ad8:	orr	r2, r2, #4
   28adc:	add	r0, sp, #104	; 0x68
   28ae0:	mov	sl, #0
   28ae4:	str	r2, [sp, #40]	; 0x28
   28ae8:	ldr	r2, [fp, #24]
   28aec:	orr	r0, r0, #4
   28af0:	add	r3, r3, #4
   28af4:	str	r3, [sp, #44]	; 0x2c
   28af8:	ldr	r3, [r5], #4
   28afc:	sub	r2, r2, #1
   28b00:	str	r2, [sp, #24]
   28b04:	sub	r2, fp, #72	; 0x48
   28b08:	orr	r2, r2, #4
   28b0c:	str	r2, [sp, #20]
   28b10:	ldr	r2, [sp, #32]
   28b14:	add	r8, r7, r3, lsl #3
   28b18:	add	lr, r3, lr
   28b1c:	cmp	r1, #1
   28b20:	blt	28b5c <GetDataSlab+0x6198>
   28b24:	ldr	r1, [sp, #56]	; 0x38
   28b28:	ldr	r2, [fp, #20]
   28b2c:	mov	r3, #0
   28b30:	mov	r7, r8
   28b34:	add	r4, r1, sl
   28b38:	ldrb	r1, [r7], #8
   28b3c:	strb	r1, [r4, r3]
   28b40:	add	r3, r3, #1
   28b44:	ldr	r1, [r2]
   28b48:	cmp	r3, r1
   28b4c:	blt	28b38 <GetDataSlab+0x6174>
   28b50:	ldr	r2, [fp, #12]
   28b54:	ldr	r3, [r2]
   28b58:	ldr	r2, [r9]
   28b5c:	str	r3, [sp, #28]
   28b60:	sub	r3, r2, r3
   28b64:	str	r2, [sp, #32]
   28b68:	ldr	r2, [fp, #24]
   28b6c:	add	r7, r8, r3, lsl #3
   28b70:	add	lr, lr, r3
   28b74:	cmp	r2, #2
   28b78:	blt	28c24 <GetDataSlab+0x6260>
   28b7c:	ldr	r9, [sp, #24]
   28b80:	mov	r8, #0
   28b84:	ldr	r3, [r0, r8]
   28b88:	ldr	r2, [sp, #44]	; 0x2c
   28b8c:	add	r3, r3, #1
   28b90:	str	r3, [r0, r8]
   28b94:	ldr	r4, [r2, r8]
   28b98:	sdiv	ip, r3, r4
   28b9c:	mls	r3, ip, r4, r3
   28ba0:	cmp	r3, #0
   28ba4:	bne	28c14 <GetDataSlab+0x6250>
   28ba8:	mov	r2, #0
   28bac:	str	r2, [r0, r8]
   28bb0:	ldr	r2, [sp, #40]	; 0x28
   28bb4:	ldr	r3, [r2, r8]
   28bb8:	sdiv	r4, lr, r3
   28bbc:	mls	r4, r4, r3, lr
   28bc0:	cmp	r4, #0
   28bc4:	beq	28be4 <GetDataSlab+0x6220>
   28bc8:	add	r2, sp, #64	; 0x40
   28bcc:	ldr	r6, [r5, r8]
   28bd0:	sub	r3, r3, r4
   28bd4:	ldr	r2, [r2, r8]
   28bd8:	mla	r2, r6, r2, r3
   28bdc:	add	lr, r2, lr
   28be0:	b	28c00 <GetDataSlab+0x623c>
   28be4:	ldr	r3, [r5, r8]
   28be8:	cmp	r3, #0
   28bec:	beq	28c04 <GetDataSlab+0x6240>
   28bf0:	add	r2, sp, #64	; 0x40
   28bf4:	ldr	r2, [r2, r8]
   28bf8:	mla	lr, r2, r3, lr
   28bfc:	mul	r2, r2, r3
   28c00:	add	r7, r7, r2, lsl #3
   28c04:	subs	r9, r9, #1
   28c08:	add	r8, r8, #4
   28c0c:	bne	28b84 <GetDataSlab+0x61c0>
   28c10:	b	28c24 <GetDataSlab+0x6260>
   28c14:	ldr	r2, [sp, #20]
   28c18:	ldr	r2, [r2, r8]
   28c1c:	add	r7, r7, r2, lsl #3
   28c20:	add	lr, r2, lr
   28c24:	ldr	r2, [sp, #36]	; 0x24
   28c28:	ldr	r9, [fp, #8]
   28c2c:	ldr	r3, [sp, #28]
   28c30:	add	sl, r1, sl
   28c34:	cmp	sl, r2
   28c38:	blt	28b10 <GetDataSlab+0x614c>
   28c3c:	b	35644 <GetDataSlab+0x12c80>
   28c40:	ldr	r3, [r3]
   28c44:	mov	r5, #0
   28c48:	add	r7, sp, #64	; 0x40
   28c4c:	sub	r0, r3, #1
   28c50:	str	r0, [fp, #-72]	; 0xffffffb8
   28c54:	ldr	r0, [r4]
   28c58:	str	r0, [sp, #40]	; 0x28
   28c5c:	str	r0, [sp, #64]	; 0x40
   28c60:	ldr	r0, [fp, #20]
   28c64:	ldr	lr, [r0]
   28c68:	ldr	r0, [fp, #24]
   28c6c:	cmp	r0, #2
   28c70:	mov	r0, lr
   28c74:	str	lr, [sp, #44]	; 0x2c
   28c78:	blt	28d2c <GetDataSlab+0x6368>
   28c7c:	ldr	r6, [sp, #40]	; 0x28
   28c80:	mov	r9, r4
   28c84:	mov	r0, #1
   28c88:	mov	r5, #0
   28c8c:	mov	r1, r4
   28c90:	mov	r2, lr
   28c94:	str	lr, [sp, #44]	; 0x2c
   28c98:	mov	r8, r6
   28c9c:	mov	r2, r5
   28ca0:	ldr	r5, [fp, #16]
   28ca4:	mov	r4, #0
   28ca8:	ldr	r5, [r5, r0, lsl #2]
   28cac:	str	r6, [r7, r0, lsl #2]
   28cb0:	sub	r7, fp, #72	; 0x48
   28cb4:	sub	r5, r5, #1
   28cb8:	str	r5, [r7, r0, lsl #2]
   28cbc:	ldr	ip, [r9, r0, lsl #2]
   28cc0:	mov	r7, ip
   28cc4:	mul	r6, r7, r6
   28cc8:	ldr	r7, [r1, -r4, lsl #2]
   28ccc:	add	r4, r4, #1
   28cd0:	cmp	r0, r4
   28cd4:	mul	r5, r5, r7
   28cd8:	bne	28cc4 <GetDataSlab+0x6300>
   28cdc:	sub	r4, fp, #72	; 0x48
   28ce0:	add	r7, sp, #64	; 0x40
   28ce4:	add	r1, r1, #4
   28ce8:	str	r5, [r4, r0, lsl #2]
   28cec:	ldr	r4, [fp, #12]
   28cf0:	str	r6, [r7, r0, lsl #2]
   28cf4:	mov	r5, r2
   28cf8:	ldr	r4, [r4, r0, lsl #2]
   28cfc:	mla	r5, r4, r8, r2
   28d00:	ldr	r4, [fp, #20]
   28d04:	ldr	r2, [sp, #44]	; 0x2c
   28d08:	mov	r8, r6
   28d0c:	mov	r6, ip
   28d10:	ldr	r4, [r4, r0, lsl #2]
   28d14:	add	r0, r0, #1
   28d18:	mul	r2, r4, r2
   28d1c:	ldr	r4, [fp, #24]
   28d20:	str	r2, [sp, #44]	; 0x2c
   28d24:	cmp	r0, r4
   28d28:	bne	28c9c <GetDataSlab+0x62d8>
   28d2c:	ldr	r0, [sp, #48]	; 0x30
   28d30:	cmp	r3, #1
   28d34:	add	r6, r0, r5
   28d38:	bne	358e0 <GetDataSlab+0x12f1c>
   28d3c:	ldr	r0, [sp, #44]	; 0x2c
   28d40:	ldr	r9, [fp, #12]
   28d44:	cmp	r0, #1
   28d48:	add	r0, sp, #64	; 0x40
   28d4c:	blt	248fc <GetDataSlab+0x1f38>
   28d50:	orr	r0, r0, #4
   28d54:	ldr	r3, [fp, #20]
   28d58:	add	r1, sp, #104	; 0x68
   28d5c:	mov	r8, #0
   28d60:	str	r0, [sp, #48]	; 0x30
   28d64:	ldr	r0, [fp, #24]
   28d68:	orr	r1, r1, #4
   28d6c:	add	r2, r3, #4
   28d70:	sub	r0, r0, #1
   28d74:	str	r2, [sp, #52]	; 0x34
   28d78:	str	r0, [sp, #32]
   28d7c:	sub	r0, fp, #72	; 0x48
   28d80:	orr	r0, r0, #4
   28d84:	str	r0, [sp, #28]
   28d88:	ldr	r0, [r9], #4
   28d8c:	str	r0, [sp, #36]	; 0x24
   28d90:	ldr	r2, [sp, #36]	; 0x24
   28d94:	ldr	r3, [fp, #12]
   28d98:	cmp	lr, #1
   28d9c:	add	r0, r2, r5
   28da0:	add	r5, r6, r2
   28da4:	ldr	r6, [fp, #20]
   28da8:	blt	28de0 <GetDataSlab+0x641c>
   28dac:	ldr	r2, [sp, #56]	; 0x38
   28db0:	mov	r4, #0
   28db4:	add	r7, r2, r8
   28db8:	ldrb	r2, [r5, r4]
   28dbc:	strb	r2, [r7, r4]
   28dc0:	add	r4, r4, #1
   28dc4:	ldr	lr, [r6]
   28dc8:	cmp	r4, lr
   28dcc:	blt	28db8 <GetDataSlab+0x63f4>
   28dd0:	ldr	r2, [r3]
   28dd4:	ldr	r3, [fp, #8]
   28dd8:	ldr	r3, [r3]
   28ddc:	str	r3, [sp, #40]	; 0x28
   28de0:	ldr	r3, [sp, #40]	; 0x28
   28de4:	str	r2, [sp, #36]	; 0x24
   28de8:	sub	r7, r3, r2
   28dec:	add	r6, r5, r7
   28df0:	add	r5, r0, r7
   28df4:	ldr	r0, [fp, #24]
   28df8:	cmp	r0, #2
   28dfc:	blt	28eb0 <GetDataSlab+0x64ec>
   28e00:	ldr	sl, [sp, #32]
   28e04:	mov	r0, #0
   28e08:	ldr	r4, [r1, r0]
   28e0c:	ldr	r2, [sp, #52]	; 0x34
   28e10:	add	r4, r4, #1
   28e14:	str	r4, [r1, r0]
   28e18:	ldr	r7, [r2, r0]
   28e1c:	sdiv	ip, r4, r7
   28e20:	mls	r7, ip, r7, r4
   28e24:	cmp	r7, #0
   28e28:	bne	28ea0 <GetDataSlab+0x64dc>
   28e2c:	mov	r2, #0
   28e30:	str	r2, [r1, r0]
   28e34:	ldr	r2, [sp, #48]	; 0x30
   28e38:	ldr	r4, [r2, r0]
   28e3c:	sdiv	r7, r5, r4
   28e40:	mls	r7, r7, r4, r5
   28e44:	cmp	r7, #0
   28e48:	beq	28e74 <GetDataSlab+0x64b0>
   28e4c:	add	r3, sp, #64	; 0x40
   28e50:	mov	r2, r6
   28e54:	ldr	r6, [r9, r0]
   28e58:	sub	r7, r4, r7
   28e5c:	ldr	r3, [r3, r0]
   28e60:	mla	r3, r6, r3, r7
   28e64:	mov	r6, r2
   28e68:	add	r5, r3, r5
   28e6c:	add	r6, r2, r3
   28e70:	b	28e90 <GetDataSlab+0x64cc>
   28e74:	ldr	r4, [r9, r0]
   28e78:	cmp	r4, #0
   28e7c:	beq	28e90 <GetDataSlab+0x64cc>
   28e80:	add	r3, sp, #64	; 0x40
   28e84:	ldr	r3, [r3, r0]
   28e88:	mla	r5, r3, r4, r5
   28e8c:	mla	r6, r3, r4, r6
   28e90:	subs	sl, sl, #1
   28e94:	add	r0, r0, #4
   28e98:	bne	28e08 <GetDataSlab+0x6444>
   28e9c:	b	28eb0 <GetDataSlab+0x64ec>
   28ea0:	ldr	r2, [sp, #28]
   28ea4:	ldr	r0, [r2, r0]
   28ea8:	add	r6, r6, r0
   28eac:	add	r5, r0, r5
   28eb0:	ldr	r0, [sp, #44]	; 0x2c
   28eb4:	add	r8, lr, r8
   28eb8:	cmp	r8, r0
   28ebc:	mov	r0, #0
   28ec0:	blt	28d90 <GetDataSlab+0x63cc>
   28ec4:	b	24900 <GetDataSlab+0x1f3c>
   28ec8:	ldr	r3, [r3]
   28ecc:	sub	r9, fp, #72	; 0x48
   28ed0:	mov	lr, #0
   28ed4:	add	r7, sp, #64	; 0x40
   28ed8:	sub	r0, r3, #1
   28edc:	str	r0, [fp, #-72]	; 0xffffffb8
   28ee0:	ldr	r0, [r4]
   28ee4:	str	r0, [sp, #36]	; 0x24
   28ee8:	str	r0, [sp, #64]	; 0x40
   28eec:	ldr	r0, [fp, #20]
   28ef0:	ldr	sl, [r0]
   28ef4:	ldr	r0, [fp, #24]
   28ef8:	cmp	r0, #2
   28efc:	mov	r0, sl
   28f00:	str	sl, [sp, #40]	; 0x28
   28f04:	blt	28fac <GetDataSlab+0x65e8>
   28f08:	ldr	r6, [sp, #36]	; 0x24
   28f0c:	ldr	r1, [fp, #8]
   28f10:	mov	r0, #1
   28f14:	mov	lr, #0
   28f18:	mov	r2, sl
   28f1c:	str	sl, [sp, #40]	; 0x28
   28f20:	mov	r8, r6
   28f24:	ldr	r5, [fp, #16]
   28f28:	ldr	r2, [fp, #8]
   28f2c:	mov	r4, #0
   28f30:	ldr	r5, [r5, r0, lsl #2]
   28f34:	str	r6, [r7, r0, lsl #2]
   28f38:	sub	r5, r5, #1
   28f3c:	str	r5, [r9, r0, lsl #2]
   28f40:	ldr	ip, [r2, r0, lsl #2]
   28f44:	mov	r7, ip
   28f48:	mul	r6, r7, r6
   28f4c:	ldr	r7, [r1, -r4, lsl #2]
   28f50:	add	r4, r4, #1
   28f54:	cmp	r0, r4
   28f58:	mul	r5, r5, r7
   28f5c:	bne	28f48 <GetDataSlab+0x6584>
   28f60:	ldr	r4, [fp, #12]
   28f64:	add	r7, sp, #64	; 0x40
   28f68:	sub	r9, fp, #72	; 0x48
   28f6c:	ldr	r2, [sp, #40]	; 0x28
   28f70:	add	r1, r1, #4
   28f74:	str	r6, [r7, r0, lsl #2]
   28f78:	str	r5, [r9, r0, lsl #2]
   28f7c:	ldr	r4, [r4, r0, lsl #2]
   28f80:	mla	lr, r4, r8, lr
   28f84:	ldr	r4, [fp, #20]
   28f88:	mov	r8, r6
   28f8c:	mov	r6, ip
   28f90:	ldr	r4, [r4, r0, lsl #2]
   28f94:	add	r0, r0, #1
   28f98:	mul	r2, r4, r2
   28f9c:	ldr	r4, [fp, #24]
   28fa0:	str	r2, [sp, #40]	; 0x28
   28fa4:	cmp	r0, r4
   28fa8:	bne	28f24 <GetDataSlab+0x6560>
   28fac:	ldr	r0, [sp, #48]	; 0x30
   28fb0:	cmp	r3, #1
   28fb4:	add	r5, r0, lr, lsl #1
   28fb8:	bne	35aa0 <GetDataSlab+0x130dc>
   28fbc:	ldr	r0, [sp, #40]	; 0x28
   28fc0:	cmp	r0, #1
   28fc4:	add	r0, sp, #64	; 0x40
   28fc8:	blt	248fc <GetDataSlab+0x1f38>
   28fcc:	orr	r0, r0, #4
   28fd0:	ldr	r9, [fp, #12]
   28fd4:	ldr	r3, [fp, #20]
   28fd8:	add	r1, sp, #104	; 0x68
   28fdc:	mov	r6, #0
   28fe0:	str	r0, [sp, #48]	; 0x30
   28fe4:	ldr	r0, [fp, #24]
   28fe8:	orr	r1, r1, #4
   28fec:	add	r2, r3, #4
   28ff0:	sub	r0, r0, #1
   28ff4:	str	r2, [sp, #52]	; 0x34
   28ff8:	str	r0, [sp, #32]
   28ffc:	sub	r0, fp, #72	; 0x48
   29000:	orr	r0, r0, #4
   29004:	str	r0, [sp, #28]
   29008:	ldr	r0, [r9], #4
   2900c:	str	r0, [sp, #44]	; 0x2c
   29010:	ldr	r7, [sp, #44]	; 0x2c
   29014:	cmp	sl, #1
   29018:	add	r0, r5, r7, lsl #1
   2901c:	add	lr, r7, lr
   29020:	blt	29064 <GetDataSlab+0x66a0>
   29024:	ldr	r2, [sp, #56]	; 0x38
   29028:	ldr	r3, [fp, #20]
   2902c:	mov	r4, #0
   29030:	mov	r5, r0
   29034:	add	r7, r2, r6
   29038:	ldrb	r2, [r5], #2
   2903c:	strb	r2, [r7, r4]
   29040:	add	r4, r4, #1
   29044:	ldr	sl, [r3]
   29048:	cmp	r4, sl
   2904c:	blt	29038 <GetDataSlab+0x6674>
   29050:	ldr	r3, [fp, #12]
   29054:	ldr	r7, [r3]
   29058:	ldr	r3, [fp, #8]
   2905c:	ldr	r2, [r3]
   29060:	str	r2, [sp, #36]	; 0x24
   29064:	ldr	r3, [sp, #36]	; 0x24
   29068:	mov	r2, r6
   2906c:	str	r7, [sp, #44]	; 0x2c
   29070:	sub	r4, r3, r7
   29074:	add	r5, r0, r4, lsl #1
   29078:	ldr	r0, [fp, #24]
   2907c:	add	lr, lr, r4
   29080:	cmp	r0, #2
   29084:	blt	29130 <GetDataSlab+0x676c>
   29088:	ldr	r8, [sp, #32]
   2908c:	mov	r0, #0
   29090:	ldr	r4, [r1, r0]
   29094:	ldr	r3, [sp, #52]	; 0x34
   29098:	add	r4, r4, #1
   2909c:	str	r4, [r1, r0]
   290a0:	ldr	r7, [r3, r0]
   290a4:	sdiv	ip, r4, r7
   290a8:	mls	r7, ip, r7, r4
   290ac:	cmp	r7, #0
   290b0:	bne	29120 <GetDataSlab+0x675c>
   290b4:	mov	r3, #0
   290b8:	str	r3, [r1, r0]
   290bc:	ldr	r3, [sp, #48]	; 0x30
   290c0:	ldr	r4, [r3, r0]
   290c4:	sdiv	r7, lr, r4
   290c8:	mls	r7, r7, r4, lr
   290cc:	cmp	r7, #0
   290d0:	beq	290f0 <GetDataSlab+0x672c>
   290d4:	add	r3, sp, #64	; 0x40
   290d8:	ldr	r6, [r9, r0]
   290dc:	sub	r7, r4, r7
   290e0:	ldr	r3, [r3, r0]
   290e4:	mla	r3, r6, r3, r7
   290e8:	add	lr, r3, lr
   290ec:	b	2910c <GetDataSlab+0x6748>
   290f0:	ldr	r4, [r9, r0]
   290f4:	cmp	r4, #0
   290f8:	beq	29110 <GetDataSlab+0x674c>
   290fc:	add	r3, sp, #64	; 0x40
   29100:	ldr	r3, [r3, r0]
   29104:	mla	lr, r3, r4, lr
   29108:	mul	r3, r3, r4
   2910c:	add	r5, r5, r3, lsl #1
   29110:	subs	r8, r8, #1
   29114:	add	r0, r0, #4
   29118:	bne	29090 <GetDataSlab+0x66cc>
   2911c:	b	29130 <GetDataSlab+0x676c>
   29120:	ldr	r3, [sp, #28]
   29124:	ldr	r0, [r3, r0]
   29128:	add	r5, r5, r0, lsl #1
   2912c:	add	lr, r0, lr
   29130:	ldr	r0, [sp, #40]	; 0x28
   29134:	mov	r6, r2
   29138:	add	r6, sl, r2
   2913c:	cmp	r6, r0
   29140:	mov	r0, #0
   29144:	blt	29010 <GetDataSlab+0x664c>
   29148:	b	24900 <GetDataSlab+0x1f3c>
   2914c:	ldr	r3, [r3]
   29150:	sub	r9, fp, #72	; 0x48
   29154:	mov	lr, #0
   29158:	add	r7, sp, #64	; 0x40
   2915c:	sub	r0, r3, #1
   29160:	str	r0, [fp, #-72]	; 0xffffffb8
   29164:	ldr	r0, [r4]
   29168:	str	r0, [sp, #36]	; 0x24
   2916c:	str	r0, [sp, #64]	; 0x40
   29170:	ldr	r0, [fp, #20]
   29174:	ldr	sl, [r0]
   29178:	ldr	r0, [fp, #24]
   2917c:	cmp	r0, #2
   29180:	mov	r0, sl
   29184:	str	sl, [sp, #40]	; 0x28
   29188:	blt	29230 <GetDataSlab+0x686c>
   2918c:	ldr	r6, [sp, #36]	; 0x24
   29190:	ldr	r1, [fp, #8]
   29194:	mov	r0, #1
   29198:	mov	lr, #0
   2919c:	mov	r2, sl
   291a0:	str	sl, [sp, #40]	; 0x28
   291a4:	mov	r8, r6
   291a8:	ldr	r5, [fp, #16]
   291ac:	ldr	r2, [fp, #8]
   291b0:	mov	r4, #0
   291b4:	ldr	r5, [r5, r0, lsl #2]
   291b8:	str	r6, [r7, r0, lsl #2]
   291bc:	sub	r5, r5, #1
   291c0:	str	r5, [r9, r0, lsl #2]
   291c4:	ldr	ip, [r2, r0, lsl #2]
   291c8:	mov	r7, ip
   291cc:	mul	r6, r7, r6
   291d0:	ldr	r7, [r1, -r4, lsl #2]
   291d4:	add	r4, r4, #1
   291d8:	cmp	r0, r4
   291dc:	mul	r5, r5, r7
   291e0:	bne	291cc <GetDataSlab+0x6808>
   291e4:	ldr	r4, [fp, #12]
   291e8:	add	r7, sp, #64	; 0x40
   291ec:	sub	r9, fp, #72	; 0x48
   291f0:	ldr	r2, [sp, #40]	; 0x28
   291f4:	add	r1, r1, #4
   291f8:	str	r6, [r7, r0, lsl #2]
   291fc:	str	r5, [r9, r0, lsl #2]
   29200:	ldr	r4, [r4, r0, lsl #2]
   29204:	mla	lr, r4, r8, lr
   29208:	ldr	r4, [fp, #20]
   2920c:	mov	r8, r6
   29210:	mov	r6, ip
   29214:	ldr	r4, [r4, r0, lsl #2]
   29218:	add	r0, r0, #1
   2921c:	mul	r2, r4, r2
   29220:	ldr	r4, [fp, #24]
   29224:	str	r2, [sp, #40]	; 0x28
   29228:	cmp	r0, r4
   2922c:	bne	291a8 <GetDataSlab+0x67e4>
   29230:	ldr	r0, [sp, #48]	; 0x30
   29234:	cmp	r3, #1
   29238:	add	r5, r0, lr, lsl #1
   2923c:	bne	35c5c <GetDataSlab+0x13298>
   29240:	ldr	r0, [sp, #40]	; 0x28
   29244:	cmp	r0, #1
   29248:	add	r0, sp, #64	; 0x40
   2924c:	blt	248fc <GetDataSlab+0x1f38>
   29250:	orr	r0, r0, #4
   29254:	ldr	r9, [fp, #12]
   29258:	ldr	r3, [fp, #20]
   2925c:	add	r1, sp, #104	; 0x68
   29260:	mov	r6, #0
   29264:	str	r0, [sp, #48]	; 0x30
   29268:	ldr	r0, [fp, #24]
   2926c:	orr	r1, r1, #4
   29270:	add	r2, r3, #4
   29274:	sub	r0, r0, #1
   29278:	str	r2, [sp, #52]	; 0x34
   2927c:	str	r0, [sp, #32]
   29280:	sub	r0, fp, #72	; 0x48
   29284:	orr	r0, r0, #4
   29288:	str	r0, [sp, #28]
   2928c:	ldr	r0, [r9], #4
   29290:	str	r0, [sp, #44]	; 0x2c
   29294:	ldr	r7, [sp, #44]	; 0x2c
   29298:	cmp	sl, #1
   2929c:	add	r0, r5, r7, lsl #1
   292a0:	add	lr, r7, lr
   292a4:	blt	292e8 <GetDataSlab+0x6924>
   292a8:	ldr	r2, [sp, #56]	; 0x38
   292ac:	ldr	r3, [fp, #20]
   292b0:	mov	r4, #0
   292b4:	mov	r5, r0
   292b8:	add	r7, r2, r6
   292bc:	ldrb	r2, [r5], #2
   292c0:	strb	r2, [r7, r4]
   292c4:	add	r4, r4, #1
   292c8:	ldr	sl, [r3]
   292cc:	cmp	r4, sl
   292d0:	blt	292bc <GetDataSlab+0x68f8>
   292d4:	ldr	r3, [fp, #12]
   292d8:	ldr	r7, [r3]
   292dc:	ldr	r3, [fp, #8]
   292e0:	ldr	r2, [r3]
   292e4:	str	r2, [sp, #36]	; 0x24
   292e8:	ldr	r3, [sp, #36]	; 0x24
   292ec:	mov	r2, r6
   292f0:	str	r7, [sp, #44]	; 0x2c
   292f4:	sub	r4, r3, r7
   292f8:	add	r5, r0, r4, lsl #1
   292fc:	ldr	r0, [fp, #24]
   29300:	add	lr, lr, r4
   29304:	cmp	r0, #2
   29308:	blt	293b4 <GetDataSlab+0x69f0>
   2930c:	ldr	r8, [sp, #32]
   29310:	mov	r0, #0
   29314:	ldr	r4, [r1, r0]
   29318:	ldr	r3, [sp, #52]	; 0x34
   2931c:	add	r4, r4, #1
   29320:	str	r4, [r1, r0]
   29324:	ldr	r7, [r3, r0]
   29328:	sdiv	ip, r4, r7
   2932c:	mls	r7, ip, r7, r4
   29330:	cmp	r7, #0
   29334:	bne	293a4 <GetDataSlab+0x69e0>
   29338:	mov	r3, #0
   2933c:	str	r3, [r1, r0]
   29340:	ldr	r3, [sp, #48]	; 0x30
   29344:	ldr	r4, [r3, r0]
   29348:	sdiv	r7, lr, r4
   2934c:	mls	r7, r7, r4, lr
   29350:	cmp	r7, #0
   29354:	beq	29374 <GetDataSlab+0x69b0>
   29358:	add	r3, sp, #64	; 0x40
   2935c:	ldr	r6, [r9, r0]
   29360:	sub	r7, r4, r7
   29364:	ldr	r3, [r3, r0]
   29368:	mla	r3, r6, r3, r7
   2936c:	add	lr, r3, lr
   29370:	b	29390 <GetDataSlab+0x69cc>
   29374:	ldr	r4, [r9, r0]
   29378:	cmp	r4, #0
   2937c:	beq	29394 <GetDataSlab+0x69d0>
   29380:	add	r3, sp, #64	; 0x40
   29384:	ldr	r3, [r3, r0]
   29388:	mla	lr, r3, r4, lr
   2938c:	mul	r3, r3, r4
   29390:	add	r5, r5, r3, lsl #1
   29394:	subs	r8, r8, #1
   29398:	add	r0, r0, #4
   2939c:	bne	29314 <GetDataSlab+0x6950>
   293a0:	b	293b4 <GetDataSlab+0x69f0>
   293a4:	ldr	r3, [sp, #28]
   293a8:	ldr	r0, [r3, r0]
   293ac:	add	r5, r5, r0, lsl #1
   293b0:	add	lr, r0, lr
   293b4:	ldr	r0, [sp, #40]	; 0x28
   293b8:	mov	r6, r2
   293bc:	add	r6, sl, r2
   293c0:	cmp	r6, r0
   293c4:	mov	r0, #0
   293c8:	blt	29294 <GetDataSlab+0x68d0>
   293cc:	b	24900 <GetDataSlab+0x1f3c>
   293d0:	ldr	r3, [r3]
   293d4:	mov	r5, #0
   293d8:	add	r7, sp, #64	; 0x40
   293dc:	sub	r0, r3, #1
   293e0:	str	r0, [fp, #-72]	; 0xffffffb8
   293e4:	ldr	r0, [r4]
   293e8:	str	r0, [sp, #40]	; 0x28
   293ec:	str	r0, [sp, #64]	; 0x40
   293f0:	ldr	r0, [fp, #20]
   293f4:	ldr	lr, [r0]
   293f8:	ldr	r0, [fp, #24]
   293fc:	cmp	r0, #2
   29400:	mov	r0, lr
   29404:	str	lr, [sp, #44]	; 0x2c
   29408:	blt	294bc <GetDataSlab+0x6af8>
   2940c:	ldr	r6, [sp, #40]	; 0x28
   29410:	mov	r9, r4
   29414:	mov	r0, #1
   29418:	mov	r5, #0
   2941c:	mov	r1, r4
   29420:	mov	r2, lr
   29424:	str	lr, [sp, #44]	; 0x2c
   29428:	mov	r8, r6
   2942c:	mov	r2, r5
   29430:	ldr	r5, [fp, #16]
   29434:	mov	r4, #0
   29438:	ldr	r5, [r5, r0, lsl #2]
   2943c:	str	r6, [r7, r0, lsl #2]
   29440:	sub	r7, fp, #72	; 0x48
   29444:	sub	r5, r5, #1
   29448:	str	r5, [r7, r0, lsl #2]
   2944c:	ldr	ip, [r9, r0, lsl #2]
   29450:	mov	r7, ip
   29454:	mul	r6, r7, r6
   29458:	ldr	r7, [r1, -r4, lsl #2]
   2945c:	add	r4, r4, #1
   29460:	cmp	r0, r4
   29464:	mul	r5, r5, r7
   29468:	bne	29454 <GetDataSlab+0x6a90>
   2946c:	sub	r4, fp, #72	; 0x48
   29470:	add	r7, sp, #64	; 0x40
   29474:	add	r1, r1, #4
   29478:	str	r5, [r4, r0, lsl #2]
   2947c:	ldr	r4, [fp, #12]
   29480:	str	r6, [r7, r0, lsl #2]
   29484:	mov	r5, r2
   29488:	ldr	r4, [r4, r0, lsl #2]
   2948c:	mla	r5, r4, r8, r2
   29490:	ldr	r4, [fp, #20]
   29494:	ldr	r2, [sp, #44]	; 0x2c
   29498:	mov	r8, r6
   2949c:	mov	r6, ip
   294a0:	ldr	r4, [r4, r0, lsl #2]
   294a4:	add	r0, r0, #1
   294a8:	mul	r2, r4, r2
   294ac:	ldr	r4, [fp, #24]
   294b0:	str	r2, [sp, #44]	; 0x2c
   294b4:	cmp	r0, r4
   294b8:	bne	2942c <GetDataSlab+0x6a68>
   294bc:	ldr	r0, [sp, #48]	; 0x30
   294c0:	cmp	r3, #1
   294c4:	add	r6, r0, r5, lsl #2
   294c8:	bne	35e18 <GetDataSlab+0x13454>
   294cc:	ldr	r0, [sp, #44]	; 0x2c
   294d0:	ldr	r9, [fp, #12]
   294d4:	cmp	r0, #1
   294d8:	add	r0, sp, #64	; 0x40
   294dc:	blt	248fc <GetDataSlab+0x1f38>
   294e0:	orr	r0, r0, #4
   294e4:	ldr	r3, [fp, #20]
   294e8:	add	r1, sp, #104	; 0x68
   294ec:	mov	r8, #0
   294f0:	str	r0, [sp, #48]	; 0x30
   294f4:	ldr	r0, [fp, #24]
   294f8:	orr	r1, r1, #4
   294fc:	add	r2, r3, #4
   29500:	sub	r0, r0, #1
   29504:	str	r2, [sp, #52]	; 0x34
   29508:	str	r0, [sp, #32]
   2950c:	sub	r0, fp, #72	; 0x48
   29510:	orr	r0, r0, #4
   29514:	str	r0, [sp, #28]
   29518:	ldr	r0, [r9], #4
   2951c:	str	r0, [sp, #36]	; 0x24
   29520:	ldr	r2, [sp, #36]	; 0x24
   29524:	ldr	r3, [fp, #12]
   29528:	cmp	lr, #1
   2952c:	add	r0, r2, r5
   29530:	add	r5, r6, r2, lsl #2
   29534:	ldr	r6, [fp, #20]
   29538:	blt	29570 <GetDataSlab+0x6bac>
   2953c:	ldr	r2, [sp, #56]	; 0x38
   29540:	mov	r4, #0
   29544:	add	r7, r2, r8
   29548:	ldr	r2, [r5, r4, lsl #2]
   2954c:	strb	r2, [r7, r4]
   29550:	add	r4, r4, #1
   29554:	ldr	lr, [r6]
   29558:	cmp	r4, lr
   2955c:	blt	29548 <GetDataSlab+0x6b84>
   29560:	ldr	r2, [r3]
   29564:	ldr	r3, [fp, #8]
   29568:	ldr	r3, [r3]
   2956c:	str	r3, [sp, #40]	; 0x28
   29570:	ldr	r3, [sp, #40]	; 0x28
   29574:	str	r2, [sp, #36]	; 0x24
   29578:	sub	r7, r3, r2
   2957c:	add	r6, r5, r7, lsl #2
   29580:	add	r5, r0, r7
   29584:	ldr	r0, [fp, #24]
   29588:	cmp	r0, #2
   2958c:	blt	29644 <GetDataSlab+0x6c80>
   29590:	ldr	sl, [sp, #32]
   29594:	mov	r0, #0
   29598:	ldr	r4, [r1, r0]
   2959c:	ldr	r2, [sp, #52]	; 0x34
   295a0:	add	r4, r4, #1
   295a4:	str	r4, [r1, r0]
   295a8:	ldr	r7, [r2, r0]
   295ac:	sdiv	ip, r4, r7
   295b0:	mls	r7, ip, r7, r4
   295b4:	cmp	r7, #0
   295b8:	bne	29634 <GetDataSlab+0x6c70>
   295bc:	mov	r2, #0
   295c0:	str	r2, [r1, r0]
   295c4:	ldr	r2, [sp, #48]	; 0x30
   295c8:	ldr	r4, [r2, r0]
   295cc:	sdiv	r7, r5, r4
   295d0:	mls	r7, r7, r4, r5
   295d4:	cmp	r7, #0
   295d8:	beq	29604 <GetDataSlab+0x6c40>
   295dc:	add	r3, sp, #64	; 0x40
   295e0:	mov	r2, r6
   295e4:	ldr	r6, [r9, r0]
   295e8:	sub	r7, r4, r7
   295ec:	ldr	r3, [r3, r0]
   295f0:	mla	r3, r6, r3, r7
   295f4:	mov	r6, r2
   295f8:	add	r5, r3, r5
   295fc:	add	r6, r2, r3, lsl #2
   29600:	b	29624 <GetDataSlab+0x6c60>
   29604:	ldr	r4, [r9, r0]
   29608:	cmp	r4, #0
   2960c:	beq	29624 <GetDataSlab+0x6c60>
   29610:	add	r3, sp, #64	; 0x40
   29614:	ldr	r3, [r3, r0]
   29618:	mla	r5, r3, r4, r5
   2961c:	mul	r3, r3, r4
   29620:	add	r6, r6, r3, lsl #2
   29624:	subs	sl, sl, #1
   29628:	add	r0, r0, #4
   2962c:	bne	29598 <GetDataSlab+0x6bd4>
   29630:	b	29644 <GetDataSlab+0x6c80>
   29634:	ldr	r2, [sp, #28]
   29638:	ldr	r0, [r2, r0]
   2963c:	add	r6, r6, r0, lsl #2
   29640:	add	r5, r0, r5
   29644:	ldr	r0, [sp, #44]	; 0x2c
   29648:	add	r8, lr, r8
   2964c:	cmp	r8, r0
   29650:	mov	r0, #0
   29654:	blt	29520 <GetDataSlab+0x6b5c>
   29658:	b	24900 <GetDataSlab+0x1f3c>
   2965c:	ldr	r3, [r3]
   29660:	mov	r5, #0
   29664:	add	r7, sp, #64	; 0x40
   29668:	sub	r0, r3, #1
   2966c:	str	r0, [fp, #-72]	; 0xffffffb8
   29670:	ldr	r0, [r4]
   29674:	str	r0, [sp, #40]	; 0x28
   29678:	str	r0, [sp, #64]	; 0x40
   2967c:	ldr	r0, [fp, #20]
   29680:	ldr	lr, [r0]
   29684:	ldr	r0, [fp, #24]
   29688:	cmp	r0, #2
   2968c:	mov	r0, lr
   29690:	str	lr, [sp, #44]	; 0x2c
   29694:	blt	29748 <GetDataSlab+0x6d84>
   29698:	ldr	r6, [sp, #40]	; 0x28
   2969c:	mov	r9, r4
   296a0:	mov	r0, #1
   296a4:	mov	r5, #0
   296a8:	mov	r1, r4
   296ac:	mov	r2, lr
   296b0:	str	lr, [sp, #44]	; 0x2c
   296b4:	mov	r8, r6
   296b8:	mov	r2, r5
   296bc:	ldr	r5, [fp, #16]
   296c0:	mov	r4, #0
   296c4:	ldr	r5, [r5, r0, lsl #2]
   296c8:	str	r6, [r7, r0, lsl #2]
   296cc:	sub	r7, fp, #72	; 0x48
   296d0:	sub	r5, r5, #1
   296d4:	str	r5, [r7, r0, lsl #2]
   296d8:	ldr	ip, [r9, r0, lsl #2]
   296dc:	mov	r7, ip
   296e0:	mul	r6, r7, r6
   296e4:	ldr	r7, [r1, -r4, lsl #2]
   296e8:	add	r4, r4, #1
   296ec:	cmp	r0, r4
   296f0:	mul	r5, r5, r7
   296f4:	bne	296e0 <GetDataSlab+0x6d1c>
   296f8:	sub	r4, fp, #72	; 0x48
   296fc:	add	r7, sp, #64	; 0x40
   29700:	add	r1, r1, #4
   29704:	str	r5, [r4, r0, lsl #2]
   29708:	ldr	r4, [fp, #12]
   2970c:	str	r6, [r7, r0, lsl #2]
   29710:	mov	r5, r2
   29714:	ldr	r4, [r4, r0, lsl #2]
   29718:	mla	r5, r4, r8, r2
   2971c:	ldr	r4, [fp, #20]
   29720:	ldr	r2, [sp, #44]	; 0x2c
   29724:	mov	r8, r6
   29728:	mov	r6, ip
   2972c:	ldr	r4, [r4, r0, lsl #2]
   29730:	add	r0, r0, #1
   29734:	mul	r2, r4, r2
   29738:	ldr	r4, [fp, #24]
   2973c:	str	r2, [sp, #44]	; 0x2c
   29740:	cmp	r0, r4
   29744:	bne	296b8 <GetDataSlab+0x6cf4>
   29748:	ldr	r0, [sp, #48]	; 0x30
   2974c:	cmp	r3, #1
   29750:	add	r6, r0, r5, lsl #2
   29754:	bne	35fdc <GetDataSlab+0x13618>
   29758:	ldr	r0, [sp, #44]	; 0x2c
   2975c:	ldr	r9, [fp, #12]
   29760:	cmp	r0, #1
   29764:	add	r0, sp, #64	; 0x40
   29768:	blt	248fc <GetDataSlab+0x1f38>
   2976c:	orr	r0, r0, #4
   29770:	ldr	r3, [fp, #20]
   29774:	add	r1, sp, #104	; 0x68
   29778:	mov	r8, #0
   2977c:	str	r0, [sp, #48]	; 0x30
   29780:	ldr	r0, [fp, #24]
   29784:	orr	r1, r1, #4
   29788:	add	r2, r3, #4
   2978c:	sub	r0, r0, #1
   29790:	str	r2, [sp, #52]	; 0x34
   29794:	str	r0, [sp, #32]
   29798:	sub	r0, fp, #72	; 0x48
   2979c:	orr	r0, r0, #4
   297a0:	str	r0, [sp, #28]
   297a4:	ldr	r0, [r9], #4
   297a8:	str	r0, [sp, #36]	; 0x24
   297ac:	ldr	r2, [sp, #36]	; 0x24
   297b0:	ldr	r3, [fp, #12]
   297b4:	cmp	lr, #1
   297b8:	add	r0, r2, r5
   297bc:	add	r5, r6, r2, lsl #2
   297c0:	ldr	r6, [fp, #20]
   297c4:	blt	297fc <GetDataSlab+0x6e38>
   297c8:	ldr	r2, [sp, #56]	; 0x38
   297cc:	mov	r4, #0
   297d0:	add	r7, r2, r8
   297d4:	ldr	r2, [r5, r4, lsl #2]
   297d8:	strb	r2, [r7, r4]
   297dc:	add	r4, r4, #1
   297e0:	ldr	lr, [r6]
   297e4:	cmp	r4, lr
   297e8:	blt	297d4 <GetDataSlab+0x6e10>
   297ec:	ldr	r2, [r3]
   297f0:	ldr	r3, [fp, #8]
   297f4:	ldr	r3, [r3]
   297f8:	str	r3, [sp, #40]	; 0x28
   297fc:	ldr	r3, [sp, #40]	; 0x28
   29800:	str	r2, [sp, #36]	; 0x24
   29804:	sub	r7, r3, r2
   29808:	add	r6, r5, r7, lsl #2
   2980c:	add	r5, r0, r7
   29810:	ldr	r0, [fp, #24]
   29814:	cmp	r0, #2
   29818:	blt	298d0 <GetDataSlab+0x6f0c>
   2981c:	ldr	sl, [sp, #32]
   29820:	mov	r0, #0
   29824:	ldr	r4, [r1, r0]
   29828:	ldr	r2, [sp, #52]	; 0x34
   2982c:	add	r4, r4, #1
   29830:	str	r4, [r1, r0]
   29834:	ldr	r7, [r2, r0]
   29838:	sdiv	ip, r4, r7
   2983c:	mls	r7, ip, r7, r4
   29840:	cmp	r7, #0
   29844:	bne	298c0 <GetDataSlab+0x6efc>
   29848:	mov	r2, #0
   2984c:	str	r2, [r1, r0]
   29850:	ldr	r2, [sp, #48]	; 0x30
   29854:	ldr	r4, [r2, r0]
   29858:	sdiv	r7, r5, r4
   2985c:	mls	r7, r7, r4, r5
   29860:	cmp	r7, #0
   29864:	beq	29890 <GetDataSlab+0x6ecc>
   29868:	add	r3, sp, #64	; 0x40
   2986c:	mov	r2, r6
   29870:	ldr	r6, [r9, r0]
   29874:	sub	r7, r4, r7
   29878:	ldr	r3, [r3, r0]
   2987c:	mla	r3, r6, r3, r7
   29880:	mov	r6, r2
   29884:	add	r5, r3, r5
   29888:	add	r6, r2, r3, lsl #2
   2988c:	b	298b0 <GetDataSlab+0x6eec>
   29890:	ldr	r4, [r9, r0]
   29894:	cmp	r4, #0
   29898:	beq	298b0 <GetDataSlab+0x6eec>
   2989c:	add	r3, sp, #64	; 0x40
   298a0:	ldr	r3, [r3, r0]
   298a4:	mla	r5, r3, r4, r5
   298a8:	mul	r3, r3, r4
   298ac:	add	r6, r6, r3, lsl #2
   298b0:	subs	sl, sl, #1
   298b4:	add	r0, r0, #4
   298b8:	bne	29824 <GetDataSlab+0x6e60>
   298bc:	b	298d0 <GetDataSlab+0x6f0c>
   298c0:	ldr	r2, [sp, #28]
   298c4:	ldr	r0, [r2, r0]
   298c8:	add	r6, r6, r0, lsl #2
   298cc:	add	r5, r0, r5
   298d0:	ldr	r0, [sp, #44]	; 0x2c
   298d4:	add	r8, lr, r8
   298d8:	cmp	r8, r0
   298dc:	mov	r0, #0
   298e0:	blt	297ac <GetDataSlab+0x6de8>
   298e4:	b	24900 <GetDataSlab+0x1f3c>
   298e8:	ldr	r3, [r3]
   298ec:	sub	r9, fp, #72	; 0x48
   298f0:	mov	lr, #0
   298f4:	add	r7, sp, #64	; 0x40
   298f8:	sub	r0, r3, #1
   298fc:	str	r0, [fp, #-72]	; 0xffffffb8
   29900:	ldr	r0, [r4]
   29904:	str	r0, [sp, #36]	; 0x24
   29908:	str	r0, [sp, #64]	; 0x40
   2990c:	ldr	r0, [fp, #20]
   29910:	ldr	sl, [r0]
   29914:	ldr	r0, [fp, #24]
   29918:	cmp	r0, #2
   2991c:	mov	r0, sl
   29920:	str	sl, [sp, #40]	; 0x28
   29924:	blt	299cc <GetDataSlab+0x7008>
   29928:	ldr	r6, [sp, #36]	; 0x24
   2992c:	ldr	r1, [fp, #8]
   29930:	mov	r0, #1
   29934:	mov	lr, #0
   29938:	mov	r2, sl
   2993c:	str	sl, [sp, #40]	; 0x28
   29940:	mov	r8, r6
   29944:	ldr	r5, [fp, #16]
   29948:	ldr	r2, [fp, #8]
   2994c:	mov	r4, #0
   29950:	ldr	r5, [r5, r0, lsl #2]
   29954:	str	r6, [r7, r0, lsl #2]
   29958:	sub	r5, r5, #1
   2995c:	str	r5, [r9, r0, lsl #2]
   29960:	ldr	ip, [r2, r0, lsl #2]
   29964:	mov	r7, ip
   29968:	mul	r6, r7, r6
   2996c:	ldr	r7, [r1, -r4, lsl #2]
   29970:	add	r4, r4, #1
   29974:	cmp	r0, r4
   29978:	mul	r5, r5, r7
   2997c:	bne	29968 <GetDataSlab+0x6fa4>
   29980:	ldr	r4, [fp, #12]
   29984:	add	r7, sp, #64	; 0x40
   29988:	sub	r9, fp, #72	; 0x48
   2998c:	ldr	r2, [sp, #40]	; 0x28
   29990:	add	r1, r1, #4
   29994:	str	r6, [r7, r0, lsl #2]
   29998:	str	r5, [r9, r0, lsl #2]
   2999c:	ldr	r4, [r4, r0, lsl #2]
   299a0:	mla	lr, r4, r8, lr
   299a4:	ldr	r4, [fp, #20]
   299a8:	mov	r8, r6
   299ac:	mov	r6, ip
   299b0:	ldr	r4, [r4, r0, lsl #2]
   299b4:	add	r0, r0, #1
   299b8:	mul	r2, r4, r2
   299bc:	ldr	r4, [fp, #24]
   299c0:	str	r2, [sp, #40]	; 0x28
   299c4:	cmp	r0, r4
   299c8:	bne	29944 <GetDataSlab+0x6f80>
   299cc:	ldr	r0, [sp, #48]	; 0x30
   299d0:	cmp	r3, #1
   299d4:	add	r5, r0, lr, lsl #2
   299d8:	bne	361a0 <GetDataSlab+0x137dc>
   299dc:	ldr	r0, [sp, #40]	; 0x28
   299e0:	cmp	r0, #1
   299e4:	add	r0, sp, #64	; 0x40
   299e8:	blt	248fc <GetDataSlab+0x1f38>
   299ec:	orr	r0, r0, #4
   299f0:	ldr	r8, [fp, #12]
   299f4:	ldr	r3, [fp, #20]
   299f8:	add	r1, sp, #104	; 0x68
   299fc:	str	r0, [sp, #48]	; 0x30
   29a00:	ldr	r0, [fp, #24]
   29a04:	orr	r1, r1, #4
   29a08:	str	r1, [sp, #28]
   29a0c:	mov	r1, #0
   29a10:	add	r2, r3, #4
   29a14:	sub	r0, r0, #1
   29a18:	str	r2, [sp, #52]	; 0x34
   29a1c:	str	r0, [sp, #32]
   29a20:	sub	r0, fp, #72	; 0x48
   29a24:	orr	r0, r0, #4
   29a28:	str	r0, [sp, #24]
   29a2c:	ldr	r0, [r8], #4
   29a30:	str	r0, [sp, #44]	; 0x2c
   29a34:	ldr	r3, [sp, #44]	; 0x2c
   29a38:	ldr	r6, [fp, #8]
   29a3c:	cmp	sl, #1
   29a40:	add	r0, r5, r3, lsl #2
   29a44:	add	lr, r3, lr
   29a48:	blt	29a94 <GetDataSlab+0x70d0>
   29a4c:	ldr	r2, [sp, #56]	; 0x38
   29a50:	ldr	r3, [fp, #20]
   29a54:	mov	r4, #0
   29a58:	mov	r5, r0
   29a5c:	add	r7, r2, r1
   29a60:	vldr	s0, [r5]
   29a64:	add	r5, r5, #4
   29a68:	vcvt.u32.f32	s0, s0
   29a6c:	vmov	r2, s0
   29a70:	strb	r2, [r7, r4]
   29a74:	add	r4, r4, #1
   29a78:	ldr	sl, [r3]
   29a7c:	cmp	r4, sl
   29a80:	blt	29a60 <GetDataSlab+0x709c>
   29a84:	ldr	r3, [fp, #12]
   29a88:	ldr	r2, [r6]
   29a8c:	ldr	r3, [r3]
   29a90:	str	r2, [sp, #36]	; 0x24
   29a94:	mov	r2, r1
   29a98:	ldr	r1, [sp, #36]	; 0x24
   29a9c:	str	r3, [sp, #44]	; 0x2c
   29aa0:	sub	r4, r1, r3
   29aa4:	add	r5, r0, r4, lsl #2
   29aa8:	ldr	r0, [fp, #24]
   29aac:	add	lr, lr, r4
   29ab0:	cmp	r0, #2
   29ab4:	blt	29b64 <GetDataSlab+0x71a0>
   29ab8:	ldr	r9, [sp, #32]
   29abc:	ldr	r1, [sp, #28]
   29ac0:	mov	r0, #0
   29ac4:	ldr	r4, [r1, r0]
   29ac8:	ldr	r3, [sp, #52]	; 0x34
   29acc:	add	r4, r4, #1
   29ad0:	str	r4, [r1, r0]
   29ad4:	ldr	r7, [r3, r0]
   29ad8:	sdiv	ip, r4, r7
   29adc:	mls	r7, ip, r7, r4
   29ae0:	cmp	r7, #0
   29ae4:	bne	29b54 <GetDataSlab+0x7190>
   29ae8:	mov	r3, #0
   29aec:	str	r3, [r1, r0]
   29af0:	ldr	r3, [sp, #48]	; 0x30
   29af4:	ldr	r4, [r3, r0]
   29af8:	sdiv	r7, lr, r4
   29afc:	mls	r7, r7, r4, lr
   29b00:	cmp	r7, #0
   29b04:	beq	29b24 <GetDataSlab+0x7160>
   29b08:	add	r3, sp, #64	; 0x40
   29b0c:	ldr	r6, [r8, r0]
   29b10:	sub	r7, r4, r7
   29b14:	ldr	r3, [r3, r0]
   29b18:	mla	r3, r6, r3, r7
   29b1c:	add	lr, r3, lr
   29b20:	b	29b40 <GetDataSlab+0x717c>
   29b24:	ldr	r4, [r8, r0]
   29b28:	cmp	r4, #0
   29b2c:	beq	29b44 <GetDataSlab+0x7180>
   29b30:	add	r3, sp, #64	; 0x40
   29b34:	ldr	r3, [r3, r0]
   29b38:	mla	lr, r3, r4, lr
   29b3c:	mul	r3, r3, r4
   29b40:	add	r5, r5, r3, lsl #2
   29b44:	subs	r9, r9, #1
   29b48:	add	r0, r0, #4
   29b4c:	bne	29ac4 <GetDataSlab+0x7100>
   29b50:	b	29b64 <GetDataSlab+0x71a0>
   29b54:	ldr	r3, [sp, #24]
   29b58:	ldr	r0, [r3, r0]
   29b5c:	add	r5, r5, r0, lsl #2
   29b60:	add	lr, r0, lr
   29b64:	ldr	r0, [sp, #40]	; 0x28
   29b68:	mov	r1, r2
   29b6c:	add	r1, sl, r2
   29b70:	cmp	r1, r0
   29b74:	mov	r0, #0
   29b78:	blt	29a34 <GetDataSlab+0x7070>
   29b7c:	b	24900 <GetDataSlab+0x1f3c>
   29b80:	ldr	r3, [r3]
   29b84:	sub	r9, fp, #72	; 0x48
   29b88:	mov	lr, #0
   29b8c:	add	r7, sp, #64	; 0x40
   29b90:	sub	r0, r3, #1
   29b94:	str	r0, [fp, #-72]	; 0xffffffb8
   29b98:	ldr	r0, [r4]
   29b9c:	str	r0, [sp, #36]	; 0x24
   29ba0:	str	r0, [sp, #64]	; 0x40
   29ba4:	ldr	r0, [fp, #20]
   29ba8:	ldr	sl, [r0]
   29bac:	ldr	r0, [fp, #24]
   29bb0:	cmp	r0, #2
   29bb4:	mov	r0, sl
   29bb8:	str	sl, [sp, #40]	; 0x28
   29bbc:	blt	29c64 <GetDataSlab+0x72a0>
   29bc0:	ldr	r6, [sp, #36]	; 0x24
   29bc4:	ldr	r1, [fp, #8]
   29bc8:	mov	r0, #1
   29bcc:	mov	lr, #0
   29bd0:	mov	r2, sl
   29bd4:	str	sl, [sp, #40]	; 0x28
   29bd8:	mov	r8, r6
   29bdc:	ldr	r5, [fp, #16]
   29be0:	ldr	r2, [fp, #8]
   29be4:	mov	r4, #0
   29be8:	ldr	r5, [r5, r0, lsl #2]
   29bec:	str	r6, [r7, r0, lsl #2]
   29bf0:	sub	r5, r5, #1
   29bf4:	str	r5, [r9, r0, lsl #2]
   29bf8:	ldr	ip, [r2, r0, lsl #2]
   29bfc:	mov	r7, ip
   29c00:	mul	r6, r7, r6
   29c04:	ldr	r7, [r1, -r4, lsl #2]
   29c08:	add	r4, r4, #1
   29c0c:	cmp	r0, r4
   29c10:	mul	r5, r5, r7
   29c14:	bne	29c00 <GetDataSlab+0x723c>
   29c18:	ldr	r4, [fp, #12]
   29c1c:	add	r7, sp, #64	; 0x40
   29c20:	sub	r9, fp, #72	; 0x48
   29c24:	ldr	r2, [sp, #40]	; 0x28
   29c28:	add	r1, r1, #4
   29c2c:	str	r6, [r7, r0, lsl #2]
   29c30:	str	r5, [r9, r0, lsl #2]
   29c34:	ldr	r4, [r4, r0, lsl #2]
   29c38:	mla	lr, r4, r8, lr
   29c3c:	ldr	r4, [fp, #20]
   29c40:	mov	r8, r6
   29c44:	mov	r6, ip
   29c48:	ldr	r4, [r4, r0, lsl #2]
   29c4c:	add	r0, r0, #1
   29c50:	mul	r2, r4, r2
   29c54:	ldr	r4, [fp, #24]
   29c58:	str	r2, [sp, #40]	; 0x28
   29c5c:	cmp	r0, r4
   29c60:	bne	29bdc <GetDataSlab+0x7218>
   29c64:	ldr	r0, [sp, #48]	; 0x30
   29c68:	cmp	r3, #1
   29c6c:	add	r5, r0, lr, lsl #3
   29c70:	bne	3636c <GetDataSlab+0x139a8>
   29c74:	ldr	r0, [sp, #40]	; 0x28
   29c78:	cmp	r0, #1
   29c7c:	add	r0, sp, #64	; 0x40
   29c80:	blt	248fc <GetDataSlab+0x1f38>
   29c84:	orr	r0, r0, #4
   29c88:	ldr	r8, [fp, #12]
   29c8c:	ldr	r3, [fp, #20]
   29c90:	add	r1, sp, #104	; 0x68
   29c94:	str	r0, [sp, #48]	; 0x30
   29c98:	ldr	r0, [fp, #24]
   29c9c:	orr	r1, r1, #4
   29ca0:	str	r1, [sp, #28]
   29ca4:	mov	r1, #0
   29ca8:	add	r2, r3, #4
   29cac:	sub	r0, r0, #1
   29cb0:	str	r2, [sp, #52]	; 0x34
   29cb4:	str	r0, [sp, #32]
   29cb8:	sub	r0, fp, #72	; 0x48
   29cbc:	orr	r0, r0, #4
   29cc0:	str	r0, [sp, #24]
   29cc4:	ldr	r0, [r8], #4
   29cc8:	str	r0, [sp, #44]	; 0x2c
   29ccc:	ldr	r3, [sp, #44]	; 0x2c
   29cd0:	ldr	r6, [fp, #8]
   29cd4:	cmp	sl, #1
   29cd8:	add	r0, r5, r3, lsl #3
   29cdc:	add	lr, r3, lr
   29ce0:	blt	29d2c <GetDataSlab+0x7368>
   29ce4:	ldr	r2, [sp, #56]	; 0x38
   29ce8:	ldr	r3, [fp, #20]
   29cec:	mov	r4, #0
   29cf0:	mov	r5, r0
   29cf4:	add	r7, r2, r1
   29cf8:	vldr	d16, [r5]
   29cfc:	add	r5, r5, #8
   29d00:	vcvt.u32.f64	s0, d16
   29d04:	vmov	r2, s0
   29d08:	strb	r2, [r7, r4]
   29d0c:	add	r4, r4, #1
   29d10:	ldr	sl, [r3]
   29d14:	cmp	r4, sl
   29d18:	blt	29cf8 <GetDataSlab+0x7334>
   29d1c:	ldr	r3, [fp, #12]
   29d20:	ldr	r2, [r6]
   29d24:	ldr	r3, [r3]
   29d28:	str	r2, [sp, #36]	; 0x24
   29d2c:	mov	r2, r1
   29d30:	ldr	r1, [sp, #36]	; 0x24
   29d34:	str	r3, [sp, #44]	; 0x2c
   29d38:	sub	r4, r1, r3
   29d3c:	add	r5, r0, r4, lsl #3
   29d40:	ldr	r0, [fp, #24]
   29d44:	add	lr, lr, r4
   29d48:	cmp	r0, #2
   29d4c:	blt	29dfc <GetDataSlab+0x7438>
   29d50:	ldr	r9, [sp, #32]
   29d54:	ldr	r1, [sp, #28]
   29d58:	mov	r0, #0
   29d5c:	ldr	r4, [r1, r0]
   29d60:	ldr	r3, [sp, #52]	; 0x34
   29d64:	add	r4, r4, #1
   29d68:	str	r4, [r1, r0]
   29d6c:	ldr	r7, [r3, r0]
   29d70:	sdiv	ip, r4, r7
   29d74:	mls	r7, ip, r7, r4
   29d78:	cmp	r7, #0
   29d7c:	bne	29dec <GetDataSlab+0x7428>
   29d80:	mov	r3, #0
   29d84:	str	r3, [r1, r0]
   29d88:	ldr	r3, [sp, #48]	; 0x30
   29d8c:	ldr	r4, [r3, r0]
   29d90:	sdiv	r7, lr, r4
   29d94:	mls	r7, r7, r4, lr
   29d98:	cmp	r7, #0
   29d9c:	beq	29dbc <GetDataSlab+0x73f8>
   29da0:	add	r3, sp, #64	; 0x40
   29da4:	ldr	r6, [r8, r0]
   29da8:	sub	r7, r4, r7
   29dac:	ldr	r3, [r3, r0]
   29db0:	mla	r3, r6, r3, r7
   29db4:	add	lr, r3, lr
   29db8:	b	29dd8 <GetDataSlab+0x7414>
   29dbc:	ldr	r4, [r8, r0]
   29dc0:	cmp	r4, #0
   29dc4:	beq	29ddc <GetDataSlab+0x7418>
   29dc8:	add	r3, sp, #64	; 0x40
   29dcc:	ldr	r3, [r3, r0]
   29dd0:	mla	lr, r3, r4, lr
   29dd4:	mul	r3, r3, r4
   29dd8:	add	r5, r5, r3, lsl #3
   29ddc:	subs	r9, r9, #1
   29de0:	add	r0, r0, #4
   29de4:	bne	29d5c <GetDataSlab+0x7398>
   29de8:	b	29dfc <GetDataSlab+0x7438>
   29dec:	ldr	r3, [sp, #24]
   29df0:	ldr	r0, [r3, r0]
   29df4:	add	r5, r5, r0, lsl #3
   29df8:	add	lr, r0, lr
   29dfc:	ldr	r0, [sp, #40]	; 0x28
   29e00:	mov	r1, r2
   29e04:	add	r1, sl, r2
   29e08:	cmp	r1, r0
   29e0c:	mov	r0, #0
   29e10:	blt	29ccc <GetDataSlab+0x7308>
   29e14:	b	24900 <GetDataSlab+0x1f3c>
   29e18:	ldr	r5, [r3]
   29e1c:	mov	r9, r4
   29e20:	mov	lr, #0
   29e24:	sub	r0, r5, #1
   29e28:	str	r0, [fp, #-72]	; 0xffffffb8
   29e2c:	ldr	r0, [r4]
   29e30:	add	r4, sp, #64	; 0x40
   29e34:	str	r0, [sp, #32]
   29e38:	str	r0, [sp, #64]	; 0x40
   29e3c:	ldr	r0, [fp, #20]
   29e40:	ldr	r1, [r0]
   29e44:	ldr	r0, [fp, #24]
   29e48:	cmp	r0, #2
   29e4c:	mov	r0, r1
   29e50:	str	r1, [sp, #36]	; 0x24
   29e54:	blt	29efc <GetDataSlab+0x7538>
   29e58:	ldr	r7, [sp, #32]
   29e5c:	mov	r0, #1
   29e60:	mov	lr, #0
   29e64:	mov	r2, r9
   29e68:	mov	r3, r1
   29e6c:	str	r1, [sp, #36]	; 0x24
   29e70:	mov	r8, r7
   29e74:	ldr	r3, [fp, #16]
   29e78:	ldr	r3, [r3, r0, lsl #2]
   29e7c:	str	r7, [r4, r0, lsl #2]
   29e80:	mov	r4, #0
   29e84:	sub	r6, r3, #1
   29e88:	sub	r3, fp, #72	; 0x48
   29e8c:	str	r6, [r3, r0, lsl #2]
   29e90:	ldr	ip, [r9, r0, lsl #2]
   29e94:	mov	r3, ip
   29e98:	mul	r7, r3, r7
   29e9c:	ldr	r3, [r2, -r4, lsl #2]
   29ea0:	add	r4, r4, #1
   29ea4:	cmp	r0, r4
   29ea8:	mul	r6, r6, r3
   29eac:	bne	29e98 <GetDataSlab+0x74d4>
   29eb0:	sub	r3, fp, #72	; 0x48
   29eb4:	add	r4, sp, #64	; 0x40
   29eb8:	add	r2, r2, #4
   29ebc:	str	r6, [r3, r0, lsl #2]
   29ec0:	ldr	r3, [fp, #12]
   29ec4:	str	r7, [r4, r0, lsl #2]
   29ec8:	ldr	r6, [sp, #36]	; 0x24
   29ecc:	ldr	r3, [r3, r0, lsl #2]
   29ed0:	mla	lr, r3, r8, lr
   29ed4:	ldr	r3, [fp, #20]
   29ed8:	mov	r8, r7
   29edc:	mov	r7, ip
   29ee0:	ldr	r3, [r3, r0, lsl #2]
   29ee4:	add	r0, r0, #1
   29ee8:	mul	r6, r3, r6
   29eec:	ldr	r3, [fp, #24]
   29ef0:	str	r6, [sp, #36]	; 0x24
   29ef4:	cmp	r0, r3
   29ef8:	bne	29e74 <GetDataSlab+0x74b0>
   29efc:	ldr	r0, [sp, #48]	; 0x30
   29f00:	cmp	r5, #1
   29f04:	add	r7, r0, lr, lsl #3
   29f08:	bne	36538 <GetDataSlab+0x13b74>
   29f0c:	ldr	r0, [sp, #36]	; 0x24
   29f10:	ldr	r5, [fp, #12]
   29f14:	add	r2, sp, #64	; 0x40
   29f18:	cmp	r0, #1
   29f1c:	blt	366e8 <GetDataSlab+0x13d24>
   29f20:	ldr	r3, [fp, #20]
   29f24:	orr	r2, r2, #4
   29f28:	add	r0, sp, #104	; 0x68
   29f2c:	mov	sl, #0
   29f30:	str	r2, [sp, #40]	; 0x28
   29f34:	ldr	r2, [fp, #24]
   29f38:	orr	r0, r0, #4
   29f3c:	add	r3, r3, #4
   29f40:	str	r3, [sp, #44]	; 0x2c
   29f44:	ldr	r3, [r5], #4
   29f48:	sub	r2, r2, #1
   29f4c:	str	r2, [sp, #24]
   29f50:	sub	r2, fp, #72	; 0x48
   29f54:	orr	r2, r2, #4
   29f58:	str	r2, [sp, #20]
   29f5c:	ldr	r2, [sp, #32]
   29f60:	add	r8, r7, r3, lsl #3
   29f64:	add	lr, r3, lr
   29f68:	cmp	r1, #1
   29f6c:	blt	29fa8 <GetDataSlab+0x75e4>
   29f70:	ldr	r1, [sp, #56]	; 0x38
   29f74:	ldr	r2, [fp, #20]
   29f78:	mov	r3, #0
   29f7c:	mov	r7, r8
   29f80:	add	r4, r1, sl
   29f84:	ldrb	r1, [r7], #8
   29f88:	strb	r1, [r4, r3]
   29f8c:	add	r3, r3, #1
   29f90:	ldr	r1, [r2]
   29f94:	cmp	r3, r1
   29f98:	blt	29f84 <GetDataSlab+0x75c0>
   29f9c:	ldr	r2, [fp, #12]
   29fa0:	ldr	r3, [r2]
   29fa4:	ldr	r2, [r9]
   29fa8:	str	r3, [sp, #28]
   29fac:	sub	r3, r2, r3
   29fb0:	str	r2, [sp, #32]
   29fb4:	ldr	r2, [fp, #24]
   29fb8:	add	r7, r8, r3, lsl #3
   29fbc:	add	lr, lr, r3
   29fc0:	cmp	r2, #2
   29fc4:	blt	2a070 <GetDataSlab+0x76ac>
   29fc8:	ldr	r9, [sp, #24]
   29fcc:	mov	r8, #0
   29fd0:	ldr	r3, [r0, r8]
   29fd4:	ldr	r2, [sp, #44]	; 0x2c
   29fd8:	add	r3, r3, #1
   29fdc:	str	r3, [r0, r8]
   29fe0:	ldr	r4, [r2, r8]
   29fe4:	sdiv	ip, r3, r4
   29fe8:	mls	r3, ip, r4, r3
   29fec:	cmp	r3, #0
   29ff0:	bne	2a060 <GetDataSlab+0x769c>
   29ff4:	mov	r2, #0
   29ff8:	str	r2, [r0, r8]
   29ffc:	ldr	r2, [sp, #40]	; 0x28
   2a000:	ldr	r3, [r2, r8]
   2a004:	sdiv	r4, lr, r3
   2a008:	mls	r4, r4, r3, lr
   2a00c:	cmp	r4, #0
   2a010:	beq	2a030 <GetDataSlab+0x766c>
   2a014:	add	r2, sp, #64	; 0x40
   2a018:	ldr	r6, [r5, r8]
   2a01c:	sub	r3, r3, r4
   2a020:	ldr	r2, [r2, r8]
   2a024:	mla	r2, r6, r2, r3
   2a028:	add	lr, r2, lr
   2a02c:	b	2a04c <GetDataSlab+0x7688>
   2a030:	ldr	r3, [r5, r8]
   2a034:	cmp	r3, #0
   2a038:	beq	2a050 <GetDataSlab+0x768c>
   2a03c:	add	r2, sp, #64	; 0x40
   2a040:	ldr	r2, [r2, r8]
   2a044:	mla	lr, r2, r3, lr
   2a048:	mul	r2, r2, r3
   2a04c:	add	r7, r7, r2, lsl #3
   2a050:	subs	r9, r9, #1
   2a054:	add	r8, r8, #4
   2a058:	bne	29fd0 <GetDataSlab+0x760c>
   2a05c:	b	2a070 <GetDataSlab+0x76ac>
   2a060:	ldr	r2, [sp, #20]
   2a064:	ldr	r2, [r2, r8]
   2a068:	add	r7, r7, r2, lsl #3
   2a06c:	add	lr, r2, lr
   2a070:	ldr	r2, [sp, #36]	; 0x24
   2a074:	ldr	r9, [fp, #8]
   2a078:	ldr	r3, [sp, #28]
   2a07c:	add	sl, r1, sl
   2a080:	cmp	sl, r2
   2a084:	blt	29f5c <GetDataSlab+0x7598>
   2a088:	b	366e8 <GetDataSlab+0x13d24>
   2a08c:	ldr	r0, [fp, #16]
   2a090:	mov	r3, #0
   2a094:	ldr	lr, [r0]
   2a098:	sub	r0, lr, #1
   2a09c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a0a0:	ldr	r0, [r4]
   2a0a4:	str	r0, [sp, #40]	; 0x28
   2a0a8:	str	r0, [sp, #64]	; 0x40
   2a0ac:	ldr	r0, [fp, #20]
   2a0b0:	ldr	r1, [r0]
   2a0b4:	ldr	r0, [fp, #24]
   2a0b8:	cmp	r0, #2
   2a0bc:	str	r1, [sp, #44]	; 0x2c
   2a0c0:	str	r1, [sp, #52]	; 0x34
   2a0c4:	blt	2a174 <GetDataSlab+0x77b0>
   2a0c8:	ldr	r2, [sp, #40]	; 0x28
   2a0cc:	ldr	r6, [sp, #44]	; 0x2c
   2a0d0:	mov	r9, r4
   2a0d4:	mov	r0, #1
   2a0d8:	mov	r3, #0
   2a0dc:	mov	r1, r4
   2a0e0:	mov	r7, r2
   2a0e4:	str	r6, [sp, #52]	; 0x34
   2a0e8:	ldr	r6, [fp, #16]
   2a0ec:	add	r5, sp, #64	; 0x40
   2a0f0:	mov	r4, #0
   2a0f4:	ldr	r6, [r6, r0, lsl #2]
   2a0f8:	str	r2, [r5, r0, lsl #2]
   2a0fc:	sub	r5, r6, #1
   2a100:	sub	r6, fp, #72	; 0x48
   2a104:	str	r5, [r6, r0, lsl #2]
   2a108:	ldr	ip, [r9, r0, lsl #2]
   2a10c:	mov	r6, ip
   2a110:	mul	r2, r6, r2
   2a114:	ldr	r6, [r1, -r4, lsl #2]
   2a118:	add	r4, r4, #1
   2a11c:	cmp	r0, r4
   2a120:	mul	r5, r5, r6
   2a124:	bne	2a110 <GetDataSlab+0x774c>
   2a128:	add	r4, sp, #64	; 0x40
   2a12c:	add	r1, r1, #4
   2a130:	str	r2, [r4, r0, lsl #2]
   2a134:	sub	r4, fp, #72	; 0x48
   2a138:	str	r5, [r4, r0, lsl #2]
   2a13c:	ldr	r4, [fp, #12]
   2a140:	ldr	r5, [sp, #52]	; 0x34
   2a144:	ldr	r4, [r4, r0, lsl #2]
   2a148:	mla	r3, r4, r7, r3
   2a14c:	ldr	r4, [fp, #20]
   2a150:	mov	r7, r2
   2a154:	mov	r2, ip
   2a158:	ldr	r4, [r4, r0, lsl #2]
   2a15c:	add	r0, r0, #1
   2a160:	mul	r5, r4, r5
   2a164:	ldr	r4, [fp, #24]
   2a168:	str	r5, [sp, #52]	; 0x34
   2a16c:	cmp	r0, r4
   2a170:	bne	2a0e8 <GetDataSlab+0x7724>
   2a174:	ldr	r0, [sp, #48]	; 0x30
   2a178:	cmp	lr, #1
   2a17c:	add	r7, r0, r3
   2a180:	bne	36984 <GetDataSlab+0x13fc0>
   2a184:	ldr	r0, [sp, #52]	; 0x34
   2a188:	ldr	r6, [fp, #12]
   2a18c:	cmp	r0, #1
   2a190:	blt	248fc <GetDataSlab+0x1f38>
   2a194:	add	r0, sp, #104	; 0x68
   2a198:	add	r9, r6, #4
   2a19c:	ldr	r6, [sp, #44]	; 0x2c
   2a1a0:	ldr	r2, [sp, #56]	; 0x38
   2a1a4:	orr	r1, r0, #4
   2a1a8:	ldr	r0, [fp, #20]
   2a1ac:	add	sl, r0, #4
   2a1b0:	add	r0, sp, #64	; 0x40
   2a1b4:	orr	lr, r0, #4
   2a1b8:	ldr	r0, [fp, #24]
   2a1bc:	sub	r0, r0, #1
   2a1c0:	str	r0, [sp, #32]
   2a1c4:	sub	r0, fp, #72	; 0x48
   2a1c8:	orr	r0, r0, #4
   2a1cc:	str	r0, [sp, #28]
   2a1d0:	lsl	r0, r6, #1
   2a1d4:	str	r0, [sp, #36]	; 0x24
   2a1d8:	mov	r0, #0
   2a1dc:	str	r0, [sp, #56]	; 0x38
   2a1e0:	cmp	r6, #1
   2a1e4:	blt	2a208 <GetDataSlab+0x7844>
   2a1e8:	ldr	r0, [fp, #12]
   2a1ec:	mov	r4, r2
   2a1f0:	ldr	r0, [r0]
   2a1f4:	add	r0, r7, r0
   2a1f8:	ldrb	r5, [r0], #1
   2a1fc:	subs	r6, r6, #1
   2a200:	strh	r5, [r4], #2
   2a204:	bne	2a1f8 <GetDataSlab+0x7834>
   2a208:	ldr	r0, [sp, #40]	; 0x28
   2a20c:	str	r2, [sp, #48]	; 0x30
   2a210:	add	r2, sp, #64	; 0x40
   2a214:	add	r7, r7, r0
   2a218:	add	r3, r3, r0
   2a21c:	ldr	r0, [fp, #24]
   2a220:	cmp	r0, #2
   2a224:	blt	2a2c4 <GetDataSlab+0x7900>
   2a228:	ldr	ip, [sp, #32]
   2a22c:	mov	r0, #0
   2a230:	ldr	r4, [r1, r0]
   2a234:	add	r4, r4, #1
   2a238:	str	r4, [r1, r0]
   2a23c:	ldr	r5, [sl, r0]
   2a240:	sdiv	r6, r4, r5
   2a244:	mls	r4, r6, r5, r4
   2a248:	cmp	r4, #0
   2a24c:	bne	2a2b4 <GetDataSlab+0x78f0>
   2a250:	mov	r4, #0
   2a254:	str	r4, [r1, r0]
   2a258:	ldr	r4, [lr, r0]
   2a25c:	sdiv	r5, r3, r4
   2a260:	mls	r6, r5, r4, r3
   2a264:	cmp	r6, #0
   2a268:	beq	2a28c <GetDataSlab+0x78c8>
   2a26c:	ldr	r5, [r2, r0]
   2a270:	ldr	r8, [r9, r0]
   2a274:	sub	r4, r4, r6
   2a278:	add	r2, sp, #64	; 0x40
   2a27c:	mla	r4, r8, r5, r4
   2a280:	add	r3, r4, r3
   2a284:	add	r7, r7, r4
   2a288:	b	2a2a4 <GetDataSlab+0x78e0>
   2a28c:	ldr	r4, [r9, r0]
   2a290:	cmp	r4, #0
   2a294:	beq	2a2a4 <GetDataSlab+0x78e0>
   2a298:	ldr	r5, [r2, r0]
   2a29c:	mla	r3, r5, r4, r3
   2a2a0:	mla	r7, r5, r4, r7
   2a2a4:	subs	ip, ip, #1
   2a2a8:	add	r0, r0, #4
   2a2ac:	bne	2a230 <GetDataSlab+0x786c>
   2a2b0:	b	2a2c4 <GetDataSlab+0x7900>
   2a2b4:	ldr	r2, [sp, #28]
   2a2b8:	ldr	r0, [r2, r0]
   2a2bc:	add	r7, r7, r0
   2a2c0:	add	r3, r0, r3
   2a2c4:	ldr	r0, [sp, #36]	; 0x24
   2a2c8:	ldr	r2, [sp, #48]	; 0x30
   2a2cc:	ldr	r6, [sp, #44]	; 0x2c
   2a2d0:	ldr	r5, [sp, #56]	; 0x38
   2a2d4:	add	r2, r2, r0
   2a2d8:	ldr	r0, [sp, #52]	; 0x34
   2a2dc:	add	r5, r5, r6
   2a2e0:	str	r5, [sp, #56]	; 0x38
   2a2e4:	cmp	r5, r0
   2a2e8:	mov	r0, #0
   2a2ec:	blt	2a1e0 <GetDataSlab+0x781c>
   2a2f0:	b	24900 <GetDataSlab+0x1f3c>
   2a2f4:	ldr	r0, [fp, #16]
   2a2f8:	mov	r2, #0
   2a2fc:	ldr	lr, [r0]
   2a300:	sub	r0, lr, #1
   2a304:	str	r0, [fp, #-72]	; 0xffffffb8
   2a308:	ldr	r0, [r4]
   2a30c:	str	r0, [sp, #40]	; 0x28
   2a310:	str	r0, [sp, #64]	; 0x40
   2a314:	ldr	r0, [fp, #20]
   2a318:	ldr	r1, [r0]
   2a31c:	ldr	r0, [fp, #24]
   2a320:	cmp	r0, #2
   2a324:	str	r1, [sp, #44]	; 0x2c
   2a328:	str	r1, [sp, #52]	; 0x34
   2a32c:	blt	2a3dc <GetDataSlab+0x7a18>
   2a330:	ldr	r6, [sp, #40]	; 0x28
   2a334:	ldr	r0, [sp, #44]	; 0x2c
   2a338:	mov	r9, r4
   2a33c:	mov	r1, #1
   2a340:	mov	r2, #0
   2a344:	mov	r7, r4
   2a348:	mov	r5, r6
   2a34c:	str	r0, [sp, #52]	; 0x34
   2a350:	ldr	r0, [fp, #16]
   2a354:	add	r3, sp, #64	; 0x40
   2a358:	mov	r4, #0
   2a35c:	ldr	r0, [r0, r1, lsl #2]
   2a360:	str	r6, [r3, r1, lsl #2]
   2a364:	sub	r3, r0, #1
   2a368:	sub	r0, fp, #72	; 0x48
   2a36c:	str	r3, [r0, r1, lsl #2]
   2a370:	ldr	r9, [r9, r1, lsl #2]
   2a374:	mov	r0, r9
   2a378:	mul	r6, r0, r6
   2a37c:	ldr	r0, [r7, -r4, lsl #2]
   2a380:	add	r4, r4, #1
   2a384:	cmp	r1, r4
   2a388:	mul	r3, r3, r0
   2a38c:	bne	2a378 <GetDataSlab+0x79b4>
   2a390:	add	r0, sp, #64	; 0x40
   2a394:	add	r7, r7, #4
   2a398:	str	r6, [r0, r1, lsl #2]
   2a39c:	sub	r0, fp, #72	; 0x48
   2a3a0:	str	r3, [r0, r1, lsl #2]
   2a3a4:	ldr	r3, [sp, #52]	; 0x34
   2a3a8:	ldr	r0, [ip, r1, lsl #2]
   2a3ac:	mla	r2, r0, r5, r2
   2a3b0:	ldr	r0, [fp, #20]
   2a3b4:	mov	r5, r6
   2a3b8:	mov	r6, r9
   2a3bc:	ldr	r9, [fp, #8]
   2a3c0:	ldr	r0, [r0, r1, lsl #2]
   2a3c4:	add	r1, r1, #1
   2a3c8:	mul	r3, r0, r3
   2a3cc:	ldr	r0, [fp, #24]
   2a3d0:	str	r3, [sp, #52]	; 0x34
   2a3d4:	cmp	r1, r0
   2a3d8:	bne	2a350 <GetDataSlab+0x798c>
   2a3dc:	ldr	r0, [sp, #48]	; 0x30
   2a3e0:	cmp	lr, #1
   2a3e4:	add	r7, r0, r2, lsl #1
   2a3e8:	bne	36b28 <GetDataSlab+0x14164>
   2a3ec:	ldr	r0, [sp, #52]	; 0x34
   2a3f0:	ldr	r3, [sp, #44]	; 0x2c
   2a3f4:	cmp	r0, #1
   2a3f8:	blt	248fc <GetDataSlab+0x1f38>
   2a3fc:	add	r0, sp, #104	; 0x68
   2a400:	ldr	r6, [sp, #56]	; 0x38
   2a404:	orr	r1, r0, #4
   2a408:	ldr	r0, [fp, #20]
   2a40c:	add	r9, r0, #4
   2a410:	add	r0, sp, #64	; 0x40
   2a414:	orr	lr, r0, #4
   2a418:	ldr	r0, [fp, #24]
   2a41c:	sub	r0, r0, #1
   2a420:	str	r0, [sp, #32]
   2a424:	sub	r0, fp, #72	; 0x48
   2a428:	orr	r0, r0, #4
   2a42c:	str	r0, [sp, #28]
   2a430:	lsl	r0, r3, #1
   2a434:	str	r0, [sp, #48]	; 0x30
   2a438:	ldr	r0, [ip], #4
   2a43c:	str	r0, [sp, #36]	; 0x24
   2a440:	mov	r0, #0
   2a444:	str	r0, [sp, #60]	; 0x3c
   2a448:	cmp	r3, #1
   2a44c:	blt	2a470 <GetDataSlab+0x7aac>
   2a450:	ldr	r0, [sp, #36]	; 0x24
   2a454:	ldr	r4, [sp, #44]	; 0x2c
   2a458:	mov	r3, r6
   2a45c:	add	r0, r7, r0, lsl #1
   2a460:	ldrh	r5, [r0], #2
   2a464:	subs	r4, r4, #1
   2a468:	strh	r5, [r3], #2
   2a46c:	bne	2a460 <GetDataSlab+0x7a9c>
   2a470:	ldr	r0, [sp, #40]	; 0x28
   2a474:	str	r6, [sp, #56]	; 0x38
   2a478:	add	r6, sp, #64	; 0x40
   2a47c:	add	r7, r7, r0, lsl #1
   2a480:	add	r2, r2, r0
   2a484:	ldr	r0, [fp, #24]
   2a488:	cmp	r0, #2
   2a48c:	blt	2a52c <GetDataSlab+0x7b68>
   2a490:	ldr	sl, [sp, #32]
   2a494:	mov	r0, #0
   2a498:	ldr	r3, [r1, r0]
   2a49c:	add	r3, r3, #1
   2a4a0:	str	r3, [r1, r0]
   2a4a4:	ldr	r4, [r9, r0]
   2a4a8:	sdiv	r5, r3, r4
   2a4ac:	mls	r3, r5, r4, r3
   2a4b0:	cmp	r3, #0
   2a4b4:	bne	2a51c <GetDataSlab+0x7b58>
   2a4b8:	mov	r3, #0
   2a4bc:	str	r3, [r1, r0]
   2a4c0:	ldr	r3, [lr, r0]
   2a4c4:	sdiv	r4, r2, r3
   2a4c8:	mls	r4, r4, r3, r2
   2a4cc:	cmp	r4, #0
   2a4d0:	beq	2a4f0 <GetDataSlab+0x7b2c>
   2a4d4:	ldr	r5, [r6, r0]
   2a4d8:	ldr	r8, [ip, r0]
   2a4dc:	sub	r3, r3, r4
   2a4e0:	add	r6, sp, #64	; 0x40
   2a4e4:	mla	r3, r8, r5, r3
   2a4e8:	add	r2, r3, r2
   2a4ec:	b	2a508 <GetDataSlab+0x7b44>
   2a4f0:	ldr	r3, [ip, r0]
   2a4f4:	cmp	r3, #0
   2a4f8:	beq	2a50c <GetDataSlab+0x7b48>
   2a4fc:	ldr	r4, [r6, r0]
   2a500:	mla	r2, r4, r3, r2
   2a504:	mul	r3, r4, r3
   2a508:	add	r7, r7, r3, lsl #1
   2a50c:	subs	sl, sl, #1
   2a510:	add	r0, r0, #4
   2a514:	bne	2a498 <GetDataSlab+0x7ad4>
   2a518:	b	2a52c <GetDataSlab+0x7b68>
   2a51c:	ldr	r3, [sp, #28]
   2a520:	ldr	r0, [r3, r0]
   2a524:	add	r7, r7, r0, lsl #1
   2a528:	add	r2, r0, r2
   2a52c:	ldr	r0, [sp, #48]	; 0x30
   2a530:	ldr	r6, [sp, #56]	; 0x38
   2a534:	ldr	r3, [sp, #44]	; 0x2c
   2a538:	ldr	r4, [sp, #60]	; 0x3c
   2a53c:	add	r6, r6, r0
   2a540:	ldr	r0, [sp, #52]	; 0x34
   2a544:	add	r4, r4, r3
   2a548:	str	r4, [sp, #60]	; 0x3c
   2a54c:	cmp	r4, r0
   2a550:	mov	r0, #0
   2a554:	blt	2a448 <GetDataSlab+0x7a84>
   2a558:	b	24900 <GetDataSlab+0x1f3c>
   2a55c:	ldr	r0, [fp, #16]
   2a560:	mov	r2, #0
   2a564:	ldr	lr, [r0]
   2a568:	sub	r0, lr, #1
   2a56c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a570:	ldr	r0, [r4]
   2a574:	str	r0, [sp, #40]	; 0x28
   2a578:	str	r0, [sp, #64]	; 0x40
   2a57c:	ldr	r0, [fp, #20]
   2a580:	ldr	r1, [r0]
   2a584:	ldr	r0, [fp, #24]
   2a588:	cmp	r0, #2
   2a58c:	str	r1, [sp, #44]	; 0x2c
   2a590:	str	r1, [sp, #52]	; 0x34
   2a594:	blt	2a644 <GetDataSlab+0x7c80>
   2a598:	ldr	r6, [sp, #40]	; 0x28
   2a59c:	ldr	r0, [sp, #44]	; 0x2c
   2a5a0:	mov	r9, r4
   2a5a4:	mov	r1, #1
   2a5a8:	mov	r2, #0
   2a5ac:	mov	r7, r4
   2a5b0:	mov	r5, r6
   2a5b4:	str	r0, [sp, #52]	; 0x34
   2a5b8:	ldr	r0, [fp, #16]
   2a5bc:	add	r3, sp, #64	; 0x40
   2a5c0:	mov	r4, #0
   2a5c4:	ldr	r0, [r0, r1, lsl #2]
   2a5c8:	str	r6, [r3, r1, lsl #2]
   2a5cc:	sub	r3, r0, #1
   2a5d0:	sub	r0, fp, #72	; 0x48
   2a5d4:	str	r3, [r0, r1, lsl #2]
   2a5d8:	ldr	r9, [r9, r1, lsl #2]
   2a5dc:	mov	r0, r9
   2a5e0:	mul	r6, r0, r6
   2a5e4:	ldr	r0, [r7, -r4, lsl #2]
   2a5e8:	add	r4, r4, #1
   2a5ec:	cmp	r1, r4
   2a5f0:	mul	r3, r3, r0
   2a5f4:	bne	2a5e0 <GetDataSlab+0x7c1c>
   2a5f8:	add	r0, sp, #64	; 0x40
   2a5fc:	add	r7, r7, #4
   2a600:	str	r6, [r0, r1, lsl #2]
   2a604:	sub	r0, fp, #72	; 0x48
   2a608:	str	r3, [r0, r1, lsl #2]
   2a60c:	ldr	r3, [sp, #52]	; 0x34
   2a610:	ldr	r0, [ip, r1, lsl #2]
   2a614:	mla	r2, r0, r5, r2
   2a618:	ldr	r0, [fp, #20]
   2a61c:	mov	r5, r6
   2a620:	mov	r6, r9
   2a624:	ldr	r9, [fp, #8]
   2a628:	ldr	r0, [r0, r1, lsl #2]
   2a62c:	add	r1, r1, #1
   2a630:	mul	r3, r0, r3
   2a634:	ldr	r0, [fp, #24]
   2a638:	str	r3, [sp, #52]	; 0x34
   2a63c:	cmp	r1, r0
   2a640:	bne	2a5b8 <GetDataSlab+0x7bf4>
   2a644:	ldr	r0, [sp, #48]	; 0x30
   2a648:	cmp	lr, #1
   2a64c:	add	r7, r0, r2, lsl #1
   2a650:	bne	36cc0 <GetDataSlab+0x142fc>
   2a654:	ldr	r0, [sp, #52]	; 0x34
   2a658:	ldr	r3, [sp, #44]	; 0x2c
   2a65c:	cmp	r0, #1
   2a660:	blt	248fc <GetDataSlab+0x1f38>
   2a664:	add	r0, sp, #104	; 0x68
   2a668:	ldr	r6, [sp, #56]	; 0x38
   2a66c:	orr	r1, r0, #4
   2a670:	ldr	r0, [fp, #20]
   2a674:	add	r9, r0, #4
   2a678:	add	r0, sp, #64	; 0x40
   2a67c:	orr	lr, r0, #4
   2a680:	ldr	r0, [fp, #24]
   2a684:	sub	r0, r0, #1
   2a688:	str	r0, [sp, #32]
   2a68c:	sub	r0, fp, #72	; 0x48
   2a690:	orr	r0, r0, #4
   2a694:	str	r0, [sp, #28]
   2a698:	lsl	r0, r3, #1
   2a69c:	str	r0, [sp, #48]	; 0x30
   2a6a0:	ldr	r0, [ip], #4
   2a6a4:	str	r0, [sp, #36]	; 0x24
   2a6a8:	mov	r0, #0
   2a6ac:	str	r0, [sp, #60]	; 0x3c
   2a6b0:	cmp	r3, #1
   2a6b4:	blt	2a6d8 <GetDataSlab+0x7d14>
   2a6b8:	ldr	r0, [sp, #36]	; 0x24
   2a6bc:	ldr	r4, [sp, #44]	; 0x2c
   2a6c0:	mov	r3, r6
   2a6c4:	add	r0, r7, r0, lsl #1
   2a6c8:	ldrh	r5, [r0], #2
   2a6cc:	subs	r4, r4, #1
   2a6d0:	strh	r5, [r3], #2
   2a6d4:	bne	2a6c8 <GetDataSlab+0x7d04>
   2a6d8:	ldr	r0, [sp, #40]	; 0x28
   2a6dc:	str	r6, [sp, #56]	; 0x38
   2a6e0:	add	r6, sp, #64	; 0x40
   2a6e4:	add	r7, r7, r0, lsl #1
   2a6e8:	add	r2, r2, r0
   2a6ec:	ldr	r0, [fp, #24]
   2a6f0:	cmp	r0, #2
   2a6f4:	blt	2a794 <GetDataSlab+0x7dd0>
   2a6f8:	ldr	sl, [sp, #32]
   2a6fc:	mov	r0, #0
   2a700:	ldr	r3, [r1, r0]
   2a704:	add	r3, r3, #1
   2a708:	str	r3, [r1, r0]
   2a70c:	ldr	r4, [r9, r0]
   2a710:	sdiv	r5, r3, r4
   2a714:	mls	r3, r5, r4, r3
   2a718:	cmp	r3, #0
   2a71c:	bne	2a784 <GetDataSlab+0x7dc0>
   2a720:	mov	r3, #0
   2a724:	str	r3, [r1, r0]
   2a728:	ldr	r3, [lr, r0]
   2a72c:	sdiv	r4, r2, r3
   2a730:	mls	r4, r4, r3, r2
   2a734:	cmp	r4, #0
   2a738:	beq	2a758 <GetDataSlab+0x7d94>
   2a73c:	ldr	r5, [r6, r0]
   2a740:	ldr	r8, [ip, r0]
   2a744:	sub	r3, r3, r4
   2a748:	add	r6, sp, #64	; 0x40
   2a74c:	mla	r3, r8, r5, r3
   2a750:	add	r2, r3, r2
   2a754:	b	2a770 <GetDataSlab+0x7dac>
   2a758:	ldr	r3, [ip, r0]
   2a75c:	cmp	r3, #0
   2a760:	beq	2a774 <GetDataSlab+0x7db0>
   2a764:	ldr	r4, [r6, r0]
   2a768:	mla	r2, r4, r3, r2
   2a76c:	mul	r3, r4, r3
   2a770:	add	r7, r7, r3, lsl #1
   2a774:	subs	sl, sl, #1
   2a778:	add	r0, r0, #4
   2a77c:	bne	2a700 <GetDataSlab+0x7d3c>
   2a780:	b	2a794 <GetDataSlab+0x7dd0>
   2a784:	ldr	r3, [sp, #28]
   2a788:	ldr	r0, [r3, r0]
   2a78c:	add	r7, r7, r0, lsl #1
   2a790:	add	r2, r0, r2
   2a794:	ldr	r0, [sp, #48]	; 0x30
   2a798:	ldr	r6, [sp, #56]	; 0x38
   2a79c:	ldr	r3, [sp, #44]	; 0x2c
   2a7a0:	ldr	r4, [sp, #60]	; 0x3c
   2a7a4:	add	r6, r6, r0
   2a7a8:	ldr	r0, [sp, #52]	; 0x34
   2a7ac:	add	r4, r4, r3
   2a7b0:	str	r4, [sp, #60]	; 0x3c
   2a7b4:	cmp	r4, r0
   2a7b8:	mov	r0, #0
   2a7bc:	blt	2a6b0 <GetDataSlab+0x7cec>
   2a7c0:	b	24900 <GetDataSlab+0x1f3c>
   2a7c4:	ldr	r0, [fp, #16]
   2a7c8:	mov	r3, #0
   2a7cc:	ldr	r9, [r0]
   2a7d0:	sub	r0, r9, #1
   2a7d4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a7d8:	ldr	r0, [r4]
   2a7dc:	str	r0, [sp, #40]	; 0x28
   2a7e0:	str	r0, [sp, #64]	; 0x40
   2a7e4:	ldr	r0, [fp, #20]
   2a7e8:	ldr	r1, [r0]
   2a7ec:	ldr	r0, [fp, #24]
   2a7f0:	cmp	r0, #2
   2a7f4:	str	r1, [sp, #44]	; 0x2c
   2a7f8:	str	r1, [sp, #52]	; 0x34
   2a7fc:	blt	2a8a8 <GetDataSlab+0x7ee4>
   2a800:	ldr	r7, [sp, #40]	; 0x28
   2a804:	ldr	r0, [sp, #44]	; 0x2c
   2a808:	ldr	r2, [fp, #8]
   2a80c:	mov	r1, #1
   2a810:	mov	r3, #0
   2a814:	mov	r6, r7
   2a818:	str	r0, [sp, #52]	; 0x34
   2a81c:	ldr	r0, [fp, #16]
   2a820:	add	r5, sp, #64	; 0x40
   2a824:	mov	r4, #0
   2a828:	ldr	r0, [r0, r1, lsl #2]
   2a82c:	str	r7, [r5, r1, lsl #2]
   2a830:	sub	r5, fp, #72	; 0x48
   2a834:	sub	r0, r0, #1
   2a838:	str	r0, [r5, r1, lsl #2]
   2a83c:	ldr	r5, [fp, #8]
   2a840:	ldr	lr, [r5, r1, lsl #2]
   2a844:	mov	r5, lr
   2a848:	mul	r7, r5, r7
   2a84c:	ldr	r5, [r2, -r4, lsl #2]
   2a850:	add	r4, r4, #1
   2a854:	cmp	r1, r4
   2a858:	mul	r0, r0, r5
   2a85c:	bne	2a848 <GetDataSlab+0x7e84>
   2a860:	add	r4, sp, #64	; 0x40
   2a864:	add	r2, r2, #4
   2a868:	str	r7, [r4, r1, lsl #2]
   2a86c:	sub	r4, fp, #72	; 0x48
   2a870:	str	r0, [r4, r1, lsl #2]
   2a874:	ldr	r4, [sp, #52]	; 0x34
   2a878:	ldr	r0, [ip, r1, lsl #2]
   2a87c:	mla	r3, r0, r6, r3
   2a880:	ldr	r0, [fp, #20]
   2a884:	mov	r6, r7
   2a888:	mov	r7, lr
   2a88c:	ldr	r0, [r0, r1, lsl #2]
   2a890:	add	r1, r1, #1
   2a894:	mul	r4, r0, r4
   2a898:	ldr	r0, [fp, #24]
   2a89c:	str	r4, [sp, #52]	; 0x34
   2a8a0:	cmp	r1, r0
   2a8a4:	bne	2a81c <GetDataSlab+0x7e58>
   2a8a8:	ldr	r0, [sp, #48]	; 0x30
   2a8ac:	cmp	r9, #1
   2a8b0:	add	r7, r0, r3, lsl #2
   2a8b4:	bne	36e58 <GetDataSlab+0x14494>
   2a8b8:	ldr	r0, [sp, #52]	; 0x34
   2a8bc:	ldr	r6, [sp, #56]	; 0x38
   2a8c0:	ldr	r5, [sp, #44]	; 0x2c
   2a8c4:	cmp	r0, #1
   2a8c8:	blt	248fc <GetDataSlab+0x1f38>
   2a8cc:	add	r0, sp, #104	; 0x68
   2a8d0:	add	r9, ip, #4
   2a8d4:	mov	r2, r6
   2a8d8:	orr	r1, r0, #4
   2a8dc:	ldr	r0, [fp, #20]
   2a8e0:	add	sl, r0, #4
   2a8e4:	add	r0, sp, #64	; 0x40
   2a8e8:	orr	r8, r0, #4
   2a8ec:	ldr	r0, [fp, #24]
   2a8f0:	sub	r0, r0, #1
   2a8f4:	str	r0, [sp, #32]
   2a8f8:	sub	r0, fp, #72	; 0x48
   2a8fc:	orr	r0, r0, #4
   2a900:	str	r0, [sp, #28]
   2a904:	lsl	r0, r5, #1
   2a908:	str	r0, [sp, #36]	; 0x24
   2a90c:	mov	r0, #0
   2a910:	str	r0, [sp, #56]	; 0x38
   2a914:	cmp	r5, #1
   2a918:	blt	2a940 <GetDataSlab+0x7f7c>
   2a91c:	ldr	r0, [fp, #12]
   2a920:	ldr	r6, [sp, #44]	; 0x2c
   2a924:	mov	r4, r2
   2a928:	ldr	r0, [r0]
   2a92c:	add	r0, r7, r0, lsl #2
   2a930:	ldr	r5, [r0], #4
   2a934:	subs	r6, r6, #1
   2a938:	strh	r5, [r4], #2
   2a93c:	bne	2a930 <GetDataSlab+0x7f6c>
   2a940:	ldr	r0, [sp, #40]	; 0x28
   2a944:	str	r2, [sp, #48]	; 0x30
   2a948:	add	r7, r7, r0, lsl #2
   2a94c:	add	r3, r3, r0
   2a950:	ldr	r0, [fp, #24]
   2a954:	cmp	r0, #2
   2a958:	blt	2a9fc <GetDataSlab+0x8038>
   2a95c:	ldr	ip, [sp, #32]
   2a960:	mov	r0, #0
   2a964:	ldr	r4, [r1, r0]
   2a968:	add	r4, r4, #1
   2a96c:	str	r4, [r1, r0]
   2a970:	ldr	r5, [sl, r0]
   2a974:	sdiv	r6, r4, r5
   2a978:	mls	r4, r6, r5, r4
   2a97c:	cmp	r4, #0
   2a980:	bne	2a9ec <GetDataSlab+0x8028>
   2a984:	ldr	r4, [r8, r0]
   2a988:	mov	r6, #0
   2a98c:	str	r6, [r1, r0]
   2a990:	sdiv	r5, r3, r4
   2a994:	mls	r6, r5, r4, r3
   2a998:	cmp	r6, #0
   2a99c:	beq	2a9bc <GetDataSlab+0x7ff8>
   2a9a0:	add	r5, sp, #64	; 0x40
   2a9a4:	ldr	lr, [r9, r0]
   2a9a8:	sub	r4, r4, r6
   2a9ac:	ldr	r5, [r5, r0]
   2a9b0:	mla	r6, lr, r5, r4
   2a9b4:	add	r3, r6, r3
   2a9b8:	b	2a9d8 <GetDataSlab+0x8014>
   2a9bc:	ldr	r4, [r9, r0]
   2a9c0:	cmp	r4, #0
   2a9c4:	beq	2a9dc <GetDataSlab+0x8018>
   2a9c8:	add	r6, sp, #64	; 0x40
   2a9cc:	ldr	r6, [r6, r0]
   2a9d0:	mla	r3, r6, r4, r3
   2a9d4:	mul	r6, r6, r4
   2a9d8:	add	r7, r7, r6, lsl #2
   2a9dc:	subs	ip, ip, #1
   2a9e0:	add	r0, r0, #4
   2a9e4:	bne	2a964 <GetDataSlab+0x7fa0>
   2a9e8:	b	2a9fc <GetDataSlab+0x8038>
   2a9ec:	ldr	r6, [sp, #28]
   2a9f0:	ldr	r0, [r6, r0]
   2a9f4:	add	r7, r7, r0, lsl #2
   2a9f8:	add	r3, r0, r3
   2a9fc:	ldr	r0, [sp, #36]	; 0x24
   2aa00:	ldr	r2, [sp, #48]	; 0x30
   2aa04:	ldr	r5, [sp, #44]	; 0x2c
   2aa08:	ldr	r6, [sp, #56]	; 0x38
   2aa0c:	add	r2, r2, r0
   2aa10:	ldr	r0, [sp, #52]	; 0x34
   2aa14:	add	r6, r6, r5
   2aa18:	str	r6, [sp, #56]	; 0x38
   2aa1c:	cmp	r6, r0
   2aa20:	mov	r0, #0
   2aa24:	blt	2a914 <GetDataSlab+0x7f50>
   2aa28:	b	24900 <GetDataSlab+0x1f3c>
   2aa2c:	ldr	r0, [fp, #16]
   2aa30:	mov	r3, #0
   2aa34:	ldr	r9, [r0]
   2aa38:	sub	r0, r9, #1
   2aa3c:	str	r0, [fp, #-72]	; 0xffffffb8
   2aa40:	ldr	r0, [r4]
   2aa44:	str	r0, [sp, #40]	; 0x28
   2aa48:	str	r0, [sp, #64]	; 0x40
   2aa4c:	ldr	r0, [fp, #20]
   2aa50:	ldr	r1, [r0]
   2aa54:	ldr	r0, [fp, #24]
   2aa58:	cmp	r0, #2
   2aa5c:	str	r1, [sp, #44]	; 0x2c
   2aa60:	str	r1, [sp, #52]	; 0x34
   2aa64:	blt	2ab10 <GetDataSlab+0x814c>
   2aa68:	ldr	r7, [sp, #40]	; 0x28
   2aa6c:	ldr	r0, [sp, #44]	; 0x2c
   2aa70:	ldr	r2, [fp, #8]
   2aa74:	mov	r1, #1
   2aa78:	mov	r3, #0
   2aa7c:	mov	r6, r7
   2aa80:	str	r0, [sp, #52]	; 0x34
   2aa84:	ldr	r0, [fp, #16]
   2aa88:	add	r5, sp, #64	; 0x40
   2aa8c:	mov	r4, #0
   2aa90:	ldr	r0, [r0, r1, lsl #2]
   2aa94:	str	r7, [r5, r1, lsl #2]
   2aa98:	sub	r5, fp, #72	; 0x48
   2aa9c:	sub	r0, r0, #1
   2aaa0:	str	r0, [r5, r1, lsl #2]
   2aaa4:	ldr	r5, [fp, #8]
   2aaa8:	ldr	lr, [r5, r1, lsl #2]
   2aaac:	mov	r5, lr
   2aab0:	mul	r7, r5, r7
   2aab4:	ldr	r5, [r2, -r4, lsl #2]
   2aab8:	add	r4, r4, #1
   2aabc:	cmp	r1, r4
   2aac0:	mul	r0, r0, r5
   2aac4:	bne	2aab0 <GetDataSlab+0x80ec>
   2aac8:	add	r4, sp, #64	; 0x40
   2aacc:	add	r2, r2, #4
   2aad0:	str	r7, [r4, r1, lsl #2]
   2aad4:	sub	r4, fp, #72	; 0x48
   2aad8:	str	r0, [r4, r1, lsl #2]
   2aadc:	ldr	r4, [sp, #52]	; 0x34
   2aae0:	ldr	r0, [ip, r1, lsl #2]
   2aae4:	mla	r3, r0, r6, r3
   2aae8:	ldr	r0, [fp, #20]
   2aaec:	mov	r6, r7
   2aaf0:	mov	r7, lr
   2aaf4:	ldr	r0, [r0, r1, lsl #2]
   2aaf8:	add	r1, r1, #1
   2aafc:	mul	r4, r0, r4
   2ab00:	ldr	r0, [fp, #24]
   2ab04:	str	r4, [sp, #52]	; 0x34
   2ab08:	cmp	r1, r0
   2ab0c:	bne	2aa84 <GetDataSlab+0x80c0>
   2ab10:	ldr	r0, [sp, #48]	; 0x30
   2ab14:	cmp	r9, #1
   2ab18:	add	r7, r0, r3, lsl #2
   2ab1c:	bne	37000 <GetDataSlab+0x1463c>
   2ab20:	ldr	r0, [sp, #52]	; 0x34
   2ab24:	ldr	r6, [sp, #56]	; 0x38
   2ab28:	ldr	r5, [sp, #44]	; 0x2c
   2ab2c:	cmp	r0, #1
   2ab30:	blt	248fc <GetDataSlab+0x1f38>
   2ab34:	add	r0, sp, #104	; 0x68
   2ab38:	add	r9, ip, #4
   2ab3c:	mov	r2, r6
   2ab40:	orr	r1, r0, #4
   2ab44:	ldr	r0, [fp, #20]
   2ab48:	add	sl, r0, #4
   2ab4c:	add	r0, sp, #64	; 0x40
   2ab50:	orr	r8, r0, #4
   2ab54:	ldr	r0, [fp, #24]
   2ab58:	sub	r0, r0, #1
   2ab5c:	str	r0, [sp, #32]
   2ab60:	sub	r0, fp, #72	; 0x48
   2ab64:	orr	r0, r0, #4
   2ab68:	str	r0, [sp, #28]
   2ab6c:	lsl	r0, r5, #1
   2ab70:	str	r0, [sp, #36]	; 0x24
   2ab74:	mov	r0, #0
   2ab78:	str	r0, [sp, #56]	; 0x38
   2ab7c:	cmp	r5, #1
   2ab80:	blt	2aba8 <GetDataSlab+0x81e4>
   2ab84:	ldr	r0, [fp, #12]
   2ab88:	ldr	r6, [sp, #44]	; 0x2c
   2ab8c:	mov	r4, r2
   2ab90:	ldr	r0, [r0]
   2ab94:	add	r0, r7, r0, lsl #2
   2ab98:	ldr	r5, [r0], #4
   2ab9c:	subs	r6, r6, #1
   2aba0:	strh	r5, [r4], #2
   2aba4:	bne	2ab98 <GetDataSlab+0x81d4>
   2aba8:	ldr	r0, [sp, #40]	; 0x28
   2abac:	str	r2, [sp, #48]	; 0x30
   2abb0:	add	r7, r7, r0, lsl #2
   2abb4:	add	r3, r3, r0
   2abb8:	ldr	r0, [fp, #24]
   2abbc:	cmp	r0, #2
   2abc0:	blt	2ac64 <GetDataSlab+0x82a0>
   2abc4:	ldr	ip, [sp, #32]
   2abc8:	mov	r0, #0
   2abcc:	ldr	r4, [r1, r0]
   2abd0:	add	r4, r4, #1
   2abd4:	str	r4, [r1, r0]
   2abd8:	ldr	r5, [sl, r0]
   2abdc:	sdiv	r6, r4, r5
   2abe0:	mls	r4, r6, r5, r4
   2abe4:	cmp	r4, #0
   2abe8:	bne	2ac54 <GetDataSlab+0x8290>
   2abec:	ldr	r4, [r8, r0]
   2abf0:	mov	r6, #0
   2abf4:	str	r6, [r1, r0]
   2abf8:	sdiv	r5, r3, r4
   2abfc:	mls	r6, r5, r4, r3
   2ac00:	cmp	r6, #0
   2ac04:	beq	2ac24 <GetDataSlab+0x8260>
   2ac08:	add	r5, sp, #64	; 0x40
   2ac0c:	ldr	lr, [r9, r0]
   2ac10:	sub	r4, r4, r6
   2ac14:	ldr	r5, [r5, r0]
   2ac18:	mla	r6, lr, r5, r4
   2ac1c:	add	r3, r6, r3
   2ac20:	b	2ac40 <GetDataSlab+0x827c>
   2ac24:	ldr	r4, [r9, r0]
   2ac28:	cmp	r4, #0
   2ac2c:	beq	2ac44 <GetDataSlab+0x8280>
   2ac30:	add	r6, sp, #64	; 0x40
   2ac34:	ldr	r6, [r6, r0]
   2ac38:	mla	r3, r6, r4, r3
   2ac3c:	mul	r6, r6, r4
   2ac40:	add	r7, r7, r6, lsl #2
   2ac44:	subs	ip, ip, #1
   2ac48:	add	r0, r0, #4
   2ac4c:	bne	2abcc <GetDataSlab+0x8208>
   2ac50:	b	2ac64 <GetDataSlab+0x82a0>
   2ac54:	ldr	r6, [sp, #28]
   2ac58:	ldr	r0, [r6, r0]
   2ac5c:	add	r7, r7, r0, lsl #2
   2ac60:	add	r3, r0, r3
   2ac64:	ldr	r0, [sp, #36]	; 0x24
   2ac68:	ldr	r2, [sp, #48]	; 0x30
   2ac6c:	ldr	r5, [sp, #44]	; 0x2c
   2ac70:	ldr	r6, [sp, #56]	; 0x38
   2ac74:	add	r2, r2, r0
   2ac78:	ldr	r0, [sp, #52]	; 0x34
   2ac7c:	add	r6, r6, r5
   2ac80:	str	r6, [sp, #56]	; 0x38
   2ac84:	cmp	r6, r0
   2ac88:	mov	r0, #0
   2ac8c:	blt	2ab7c <GetDataSlab+0x81b8>
   2ac90:	b	24900 <GetDataSlab+0x1f3c>
   2ac94:	ldr	r0, [fp, #16]
   2ac98:	mov	r2, #0
   2ac9c:	ldr	lr, [r0]
   2aca0:	sub	r0, lr, #1
   2aca4:	str	r0, [fp, #-72]	; 0xffffffb8
   2aca8:	ldr	r0, [r4]
   2acac:	str	r0, [sp, #40]	; 0x28
   2acb0:	str	r0, [sp, #64]	; 0x40
   2acb4:	ldr	r0, [fp, #20]
   2acb8:	ldr	r1, [r0]
   2acbc:	ldr	r0, [fp, #24]
   2acc0:	cmp	r0, #2
   2acc4:	str	r1, [sp, #44]	; 0x2c
   2acc8:	str	r1, [sp, #52]	; 0x34
   2accc:	blt	2ad7c <GetDataSlab+0x83b8>
   2acd0:	ldr	r6, [sp, #40]	; 0x28
   2acd4:	ldr	r0, [sp, #44]	; 0x2c
   2acd8:	mov	r9, r4
   2acdc:	mov	r1, #1
   2ace0:	mov	r2, #0
   2ace4:	mov	r7, r4
   2ace8:	mov	r5, r6
   2acec:	str	r0, [sp, #52]	; 0x34
   2acf0:	ldr	r0, [fp, #16]
   2acf4:	add	r3, sp, #64	; 0x40
   2acf8:	mov	r4, #0
   2acfc:	ldr	r0, [r0, r1, lsl #2]
   2ad00:	str	r6, [r3, r1, lsl #2]
   2ad04:	sub	r3, r0, #1
   2ad08:	sub	r0, fp, #72	; 0x48
   2ad0c:	str	r3, [r0, r1, lsl #2]
   2ad10:	ldr	r9, [r9, r1, lsl #2]
   2ad14:	mov	r0, r9
   2ad18:	mul	r6, r0, r6
   2ad1c:	ldr	r0, [r7, -r4, lsl #2]
   2ad20:	add	r4, r4, #1
   2ad24:	cmp	r1, r4
   2ad28:	mul	r3, r3, r0
   2ad2c:	bne	2ad18 <GetDataSlab+0x8354>
   2ad30:	add	r0, sp, #64	; 0x40
   2ad34:	add	r7, r7, #4
   2ad38:	str	r6, [r0, r1, lsl #2]
   2ad3c:	sub	r0, fp, #72	; 0x48
   2ad40:	str	r3, [r0, r1, lsl #2]
   2ad44:	ldr	r3, [sp, #52]	; 0x34
   2ad48:	ldr	r0, [ip, r1, lsl #2]
   2ad4c:	mla	r2, r0, r5, r2
   2ad50:	ldr	r0, [fp, #20]
   2ad54:	mov	r5, r6
   2ad58:	mov	r6, r9
   2ad5c:	ldr	r9, [fp, #8]
   2ad60:	ldr	r0, [r0, r1, lsl #2]
   2ad64:	add	r1, r1, #1
   2ad68:	mul	r3, r0, r3
   2ad6c:	ldr	r0, [fp, #24]
   2ad70:	str	r3, [sp, #52]	; 0x34
   2ad74:	cmp	r1, r0
   2ad78:	bne	2acf0 <GetDataSlab+0x832c>
   2ad7c:	ldr	r0, [sp, #48]	; 0x30
   2ad80:	cmp	lr, #1
   2ad84:	add	r7, r0, r2, lsl #2
   2ad88:	bne	371a8 <GetDataSlab+0x147e4>
   2ad8c:	ldr	r0, [sp, #52]	; 0x34
   2ad90:	ldr	r3, [sp, #44]	; 0x2c
   2ad94:	cmp	r0, #1
   2ad98:	blt	248fc <GetDataSlab+0x1f38>
   2ad9c:	add	r0, sp, #104	; 0x68
   2ada0:	ldr	r6, [sp, #56]	; 0x38
   2ada4:	orr	r1, r0, #4
   2ada8:	ldr	r0, [fp, #20]
   2adac:	add	r9, r0, #4
   2adb0:	add	r0, sp, #64	; 0x40
   2adb4:	orr	lr, r0, #4
   2adb8:	ldr	r0, [fp, #24]
   2adbc:	sub	r0, r0, #1
   2adc0:	str	r0, [sp, #32]
   2adc4:	sub	r0, fp, #72	; 0x48
   2adc8:	orr	r0, r0, #4
   2adcc:	str	r0, [sp, #28]
   2add0:	lsl	r0, r3, #1
   2add4:	str	r0, [sp, #48]	; 0x30
   2add8:	ldr	r0, [ip], #4
   2addc:	str	r0, [sp, #36]	; 0x24
   2ade0:	mov	r0, #0
   2ade4:	str	r0, [sp, #60]	; 0x3c
   2ade8:	cmp	r3, #1
   2adec:	blt	2ae1c <GetDataSlab+0x8458>
   2adf0:	ldr	r0, [sp, #36]	; 0x24
   2adf4:	ldr	r4, [sp, #44]	; 0x2c
   2adf8:	mov	r3, r6
   2adfc:	add	r0, r7, r0, lsl #2
   2ae00:	vldr	s0, [r0]
   2ae04:	add	r0, r0, #4
   2ae08:	subs	r4, r4, #1
   2ae0c:	vcvt.s32.f32	s0, s0
   2ae10:	vmov	r5, s0
   2ae14:	strh	r5, [r3], #2
   2ae18:	bne	2ae00 <GetDataSlab+0x843c>
   2ae1c:	ldr	r0, [sp, #40]	; 0x28
   2ae20:	str	r6, [sp, #56]	; 0x38
   2ae24:	add	r6, sp, #64	; 0x40
   2ae28:	add	r7, r7, r0, lsl #2
   2ae2c:	add	r2, r2, r0
   2ae30:	ldr	r0, [fp, #24]
   2ae34:	cmp	r0, #2
   2ae38:	blt	2aed8 <GetDataSlab+0x8514>
   2ae3c:	ldr	sl, [sp, #32]
   2ae40:	mov	r0, #0
   2ae44:	ldr	r3, [r1, r0]
   2ae48:	add	r3, r3, #1
   2ae4c:	str	r3, [r1, r0]
   2ae50:	ldr	r4, [r9, r0]
   2ae54:	sdiv	r5, r3, r4
   2ae58:	mls	r3, r5, r4, r3
   2ae5c:	cmp	r3, #0
   2ae60:	bne	2aec8 <GetDataSlab+0x8504>
   2ae64:	mov	r3, #0
   2ae68:	str	r3, [r1, r0]
   2ae6c:	ldr	r3, [lr, r0]
   2ae70:	sdiv	r4, r2, r3
   2ae74:	mls	r4, r4, r3, r2
   2ae78:	cmp	r4, #0
   2ae7c:	beq	2ae9c <GetDataSlab+0x84d8>
   2ae80:	ldr	r5, [r6, r0]
   2ae84:	ldr	r8, [ip, r0]
   2ae88:	sub	r3, r3, r4
   2ae8c:	add	r6, sp, #64	; 0x40
   2ae90:	mla	r3, r8, r5, r3
   2ae94:	add	r2, r3, r2
   2ae98:	b	2aeb4 <GetDataSlab+0x84f0>
   2ae9c:	ldr	r3, [ip, r0]
   2aea0:	cmp	r3, #0
   2aea4:	beq	2aeb8 <GetDataSlab+0x84f4>
   2aea8:	ldr	r4, [r6, r0]
   2aeac:	mla	r2, r4, r3, r2
   2aeb0:	mul	r3, r4, r3
   2aeb4:	add	r7, r7, r3, lsl #2
   2aeb8:	subs	sl, sl, #1
   2aebc:	add	r0, r0, #4
   2aec0:	bne	2ae44 <GetDataSlab+0x8480>
   2aec4:	b	2aed8 <GetDataSlab+0x8514>
   2aec8:	ldr	r3, [sp, #28]
   2aecc:	ldr	r0, [r3, r0]
   2aed0:	add	r7, r7, r0, lsl #2
   2aed4:	add	r2, r0, r2
   2aed8:	ldr	r0, [sp, #48]	; 0x30
   2aedc:	ldr	r6, [sp, #56]	; 0x38
   2aee0:	ldr	r3, [sp, #44]	; 0x2c
   2aee4:	ldr	r4, [sp, #60]	; 0x3c
   2aee8:	add	r6, r6, r0
   2aeec:	ldr	r0, [sp, #52]	; 0x34
   2aef0:	add	r4, r4, r3
   2aef4:	str	r4, [sp, #60]	; 0x3c
   2aef8:	cmp	r4, r0
   2aefc:	mov	r0, #0
   2af00:	blt	2ade8 <GetDataSlab+0x8424>
   2af04:	b	24900 <GetDataSlab+0x1f3c>
   2af08:	ldr	r0, [fp, #16]
   2af0c:	mov	r2, #0
   2af10:	ldr	lr, [r0]
   2af14:	sub	r0, lr, #1
   2af18:	str	r0, [fp, #-72]	; 0xffffffb8
   2af1c:	ldr	r0, [r4]
   2af20:	str	r0, [sp, #40]	; 0x28
   2af24:	str	r0, [sp, #64]	; 0x40
   2af28:	ldr	r0, [fp, #20]
   2af2c:	ldr	r1, [r0]
   2af30:	ldr	r0, [fp, #24]
   2af34:	cmp	r0, #2
   2af38:	str	r1, [sp, #44]	; 0x2c
   2af3c:	str	r1, [sp, #52]	; 0x34
   2af40:	blt	2aff0 <GetDataSlab+0x862c>
   2af44:	ldr	r6, [sp, #40]	; 0x28
   2af48:	ldr	r0, [sp, #44]	; 0x2c
   2af4c:	mov	r9, r4
   2af50:	mov	r1, #1
   2af54:	mov	r2, #0
   2af58:	mov	r7, r4
   2af5c:	mov	r5, r6
   2af60:	str	r0, [sp, #52]	; 0x34
   2af64:	ldr	r0, [fp, #16]
   2af68:	add	r3, sp, #64	; 0x40
   2af6c:	mov	r4, #0
   2af70:	ldr	r0, [r0, r1, lsl #2]
   2af74:	str	r6, [r3, r1, lsl #2]
   2af78:	sub	r3, r0, #1
   2af7c:	sub	r0, fp, #72	; 0x48
   2af80:	str	r3, [r0, r1, lsl #2]
   2af84:	ldr	r9, [r9, r1, lsl #2]
   2af88:	mov	r0, r9
   2af8c:	mul	r6, r0, r6
   2af90:	ldr	r0, [r7, -r4, lsl #2]
   2af94:	add	r4, r4, #1
   2af98:	cmp	r1, r4
   2af9c:	mul	r3, r3, r0
   2afa0:	bne	2af8c <GetDataSlab+0x85c8>
   2afa4:	add	r0, sp, #64	; 0x40
   2afa8:	add	r7, r7, #4
   2afac:	str	r6, [r0, r1, lsl #2]
   2afb0:	sub	r0, fp, #72	; 0x48
   2afb4:	str	r3, [r0, r1, lsl #2]
   2afb8:	ldr	r3, [sp, #52]	; 0x34
   2afbc:	ldr	r0, [ip, r1, lsl #2]
   2afc0:	mla	r2, r0, r5, r2
   2afc4:	ldr	r0, [fp, #20]
   2afc8:	mov	r5, r6
   2afcc:	mov	r6, r9
   2afd0:	ldr	r9, [fp, #8]
   2afd4:	ldr	r0, [r0, r1, lsl #2]
   2afd8:	add	r1, r1, #1
   2afdc:	mul	r3, r0, r3
   2afe0:	ldr	r0, [fp, #24]
   2afe4:	str	r3, [sp, #52]	; 0x34
   2afe8:	cmp	r1, r0
   2afec:	bne	2af64 <GetDataSlab+0x85a0>
   2aff0:	ldr	r0, [sp, #48]	; 0x30
   2aff4:	cmp	lr, #1
   2aff8:	add	r7, r0, r2, lsl #3
   2affc:	bne	3734c <GetDataSlab+0x14988>
   2b000:	ldr	r0, [sp, #52]	; 0x34
   2b004:	ldr	r3, [sp, #44]	; 0x2c
   2b008:	cmp	r0, #1
   2b00c:	blt	248fc <GetDataSlab+0x1f38>
   2b010:	add	r0, sp, #104	; 0x68
   2b014:	ldr	r6, [sp, #56]	; 0x38
   2b018:	orr	r1, r0, #4
   2b01c:	ldr	r0, [fp, #20]
   2b020:	add	r9, r0, #4
   2b024:	add	r0, sp, #64	; 0x40
   2b028:	orr	lr, r0, #4
   2b02c:	ldr	r0, [fp, #24]
   2b030:	sub	r0, r0, #1
   2b034:	str	r0, [sp, #32]
   2b038:	sub	r0, fp, #72	; 0x48
   2b03c:	orr	r0, r0, #4
   2b040:	str	r0, [sp, #28]
   2b044:	lsl	r0, r3, #1
   2b048:	str	r0, [sp, #48]	; 0x30
   2b04c:	ldr	r0, [ip], #4
   2b050:	str	r0, [sp, #36]	; 0x24
   2b054:	mov	r0, #0
   2b058:	str	r0, [sp, #60]	; 0x3c
   2b05c:	cmp	r3, #1
   2b060:	blt	2b090 <GetDataSlab+0x86cc>
   2b064:	ldr	r0, [sp, #36]	; 0x24
   2b068:	ldr	r4, [sp, #44]	; 0x2c
   2b06c:	mov	r3, r6
   2b070:	add	r0, r7, r0, lsl #3
   2b074:	vldr	d16, [r0]
   2b078:	add	r0, r0, #8
   2b07c:	subs	r4, r4, #1
   2b080:	vcvt.s32.f64	s0, d16
   2b084:	vmov	r5, s0
   2b088:	strh	r5, [r3], #2
   2b08c:	bne	2b074 <GetDataSlab+0x86b0>
   2b090:	ldr	r0, [sp, #40]	; 0x28
   2b094:	str	r6, [sp, #56]	; 0x38
   2b098:	add	r6, sp, #64	; 0x40
   2b09c:	add	r7, r7, r0, lsl #3
   2b0a0:	add	r2, r2, r0
   2b0a4:	ldr	r0, [fp, #24]
   2b0a8:	cmp	r0, #2
   2b0ac:	blt	2b14c <GetDataSlab+0x8788>
   2b0b0:	ldr	sl, [sp, #32]
   2b0b4:	mov	r0, #0
   2b0b8:	ldr	r3, [r1, r0]
   2b0bc:	add	r3, r3, #1
   2b0c0:	str	r3, [r1, r0]
   2b0c4:	ldr	r4, [r9, r0]
   2b0c8:	sdiv	r5, r3, r4
   2b0cc:	mls	r3, r5, r4, r3
   2b0d0:	cmp	r3, #0
   2b0d4:	bne	2b13c <GetDataSlab+0x8778>
   2b0d8:	mov	r3, #0
   2b0dc:	str	r3, [r1, r0]
   2b0e0:	ldr	r3, [lr, r0]
   2b0e4:	sdiv	r4, r2, r3
   2b0e8:	mls	r4, r4, r3, r2
   2b0ec:	cmp	r4, #0
   2b0f0:	beq	2b110 <GetDataSlab+0x874c>
   2b0f4:	ldr	r5, [r6, r0]
   2b0f8:	ldr	r8, [ip, r0]
   2b0fc:	sub	r3, r3, r4
   2b100:	add	r6, sp, #64	; 0x40
   2b104:	mla	r3, r8, r5, r3
   2b108:	add	r2, r3, r2
   2b10c:	b	2b128 <GetDataSlab+0x8764>
   2b110:	ldr	r3, [ip, r0]
   2b114:	cmp	r3, #0
   2b118:	beq	2b12c <GetDataSlab+0x8768>
   2b11c:	ldr	r4, [r6, r0]
   2b120:	mla	r2, r4, r3, r2
   2b124:	mul	r3, r4, r3
   2b128:	add	r7, r7, r3, lsl #3
   2b12c:	subs	sl, sl, #1
   2b130:	add	r0, r0, #4
   2b134:	bne	2b0b8 <GetDataSlab+0x86f4>
   2b138:	b	2b14c <GetDataSlab+0x8788>
   2b13c:	ldr	r3, [sp, #28]
   2b140:	ldr	r0, [r3, r0]
   2b144:	add	r7, r7, r0, lsl #3
   2b148:	add	r2, r0, r2
   2b14c:	ldr	r0, [sp, #48]	; 0x30
   2b150:	ldr	r6, [sp, #56]	; 0x38
   2b154:	ldr	r3, [sp, #44]	; 0x2c
   2b158:	ldr	r4, [sp, #60]	; 0x3c
   2b15c:	add	r6, r6, r0
   2b160:	ldr	r0, [sp, #52]	; 0x34
   2b164:	add	r4, r4, r3
   2b168:	str	r4, [sp, #60]	; 0x3c
   2b16c:	cmp	r4, r0
   2b170:	mov	r0, #0
   2b174:	blt	2b05c <GetDataSlab+0x8698>
   2b178:	b	24900 <GetDataSlab+0x1f3c>
   2b17c:	ldr	r0, [fp, #16]
   2b180:	add	ip, sp, #64	; 0x40
   2b184:	mov	r1, #0
   2b188:	ldr	r8, [r0]
   2b18c:	sub	r0, r8, #1
   2b190:	str	r0, [fp, #-72]	; 0xffffffb8
   2b194:	ldr	r0, [r4]
   2b198:	str	r0, [sp, #28]
   2b19c:	str	r0, [sp, #64]	; 0x40
   2b1a0:	ldr	r0, [fp, #20]
   2b1a4:	ldr	r2, [r0]
   2b1a8:	ldr	r0, [fp, #24]
   2b1ac:	cmp	r0, #2
   2b1b0:	str	r2, [sp, #40]	; 0x28
   2b1b4:	str	r2, [sp, #44]	; 0x2c
   2b1b8:	blt	2b264 <GetDataSlab+0x88a0>
   2b1bc:	ldr	r3, [sp, #28]
   2b1c0:	ldr	r6, [sp, #40]	; 0x28
   2b1c4:	mov	r9, r4
   2b1c8:	mov	r0, #1
   2b1cc:	mov	r1, #0
   2b1d0:	mov	r2, r4
   2b1d4:	mov	r7, r3
   2b1d8:	str	r6, [sp, #44]	; 0x2c
   2b1dc:	ldr	r6, [fp, #16]
   2b1e0:	mov	r4, #0
   2b1e4:	ldr	r6, [r6, r0, lsl #2]
   2b1e8:	str	r3, [ip, r0, lsl #2]
   2b1ec:	sub	r5, r6, #1
   2b1f0:	sub	r6, fp, #72	; 0x48
   2b1f4:	str	r5, [r6, r0, lsl #2]
   2b1f8:	ldr	lr, [r9, r0, lsl #2]
   2b1fc:	mov	r6, lr
   2b200:	mul	r3, r6, r3
   2b204:	ldr	r6, [r2, -r4, lsl #2]
   2b208:	add	r4, r4, #1
   2b20c:	cmp	r0, r4
   2b210:	mul	r5, r5, r6
   2b214:	bne	2b200 <GetDataSlab+0x883c>
   2b218:	sub	r4, fp, #72	; 0x48
   2b21c:	add	ip, sp, #64	; 0x40
   2b220:	add	r2, r2, #4
   2b224:	str	r5, [r4, r0, lsl #2]
   2b228:	ldr	r4, [fp, #12]
   2b22c:	str	r3, [ip, r0, lsl #2]
   2b230:	ldr	r5, [sp, #44]	; 0x2c
   2b234:	ldr	r4, [r4, r0, lsl #2]
   2b238:	mla	r1, r4, r7, r1
   2b23c:	ldr	r4, [fp, #20]
   2b240:	ldr	r7, [fp, #24]
   2b244:	ldr	r4, [r4, r0, lsl #2]
   2b248:	add	r0, r0, #1
   2b24c:	cmp	r0, r7
   2b250:	mov	r7, r3
   2b254:	mov	r3, lr
   2b258:	mul	r5, r4, r5
   2b25c:	str	r5, [sp, #44]	; 0x2c
   2b260:	bne	2b1dc <GetDataSlab+0x8818>
   2b264:	ldr	r0, [sp, #48]	; 0x30
   2b268:	cmp	r8, #1
   2b26c:	add	r3, r0, r1, lsl #3
   2b270:	bne	374f0 <GetDataSlab+0x14b2c>
   2b274:	ldr	r0, [sp, #44]	; 0x2c
   2b278:	ldr	r6, [sp, #40]	; 0x28
   2b27c:	cmp	r0, #1
   2b280:	blt	3768c <GetDataSlab+0x14cc8>
   2b284:	ldr	r2, [fp, #20]
   2b288:	ldr	r9, [fp, #12]
   2b28c:	ldr	r7, [sp, #56]	; 0x38
   2b290:	add	r0, sp, #104	; 0x68
   2b294:	mov	r5, #0
   2b298:	orr	r0, r0, #4
   2b29c:	add	ip, r2, #4
   2b2a0:	add	r2, sp, #64	; 0x40
   2b2a4:	orr	r8, r2, #4
   2b2a8:	ldr	r2, [fp, #24]
   2b2ac:	sub	r2, r2, #1
   2b2b0:	str	r2, [sp, #16]
   2b2b4:	sub	r2, fp, #72	; 0x48
   2b2b8:	orr	r2, r2, #4
   2b2bc:	str	r2, [sp, #12]
   2b2c0:	lsl	r2, r6, #1
   2b2c4:	str	r2, [sp, #24]
   2b2c8:	ldr	r2, [r9], #4
   2b2cc:	str	r2, [sp, #20]
   2b2d0:	cmp	r6, #1
   2b2d4:	str	r5, [sp, #32]
   2b2d8:	blt	2b2fc <GetDataSlab+0x8938>
   2b2dc:	ldr	r2, [sp, #20]
   2b2e0:	ldr	r5, [sp, #40]	; 0x28
   2b2e4:	mov	r4, r7
   2b2e8:	add	r2, r3, r2, lsl #3
   2b2ec:	ldrh	r6, [r2], #8
   2b2f0:	subs	r5, r5, #1
   2b2f4:	strh	r6, [r4], #2
   2b2f8:	bne	2b2ec <GetDataSlab+0x8928>
   2b2fc:	ldr	r2, [sp, #28]
   2b300:	str	r7, [sp, #36]	; 0x24
   2b304:	add	r3, r3, r2, lsl #3
   2b308:	add	r1, r1, r2
   2b30c:	ldr	r2, [fp, #24]
   2b310:	cmp	r2, #2
   2b314:	blt	2b3b8 <GetDataSlab+0x89f4>
   2b318:	ldr	r2, [sp, #16]
   2b31c:	mov	sl, #0
   2b320:	ldr	r4, [r0, sl]
   2b324:	add	r4, r4, #1
   2b328:	str	r4, [r0, sl]
   2b32c:	ldr	r5, [ip, sl]
   2b330:	sdiv	r6, r4, r5
   2b334:	mls	r4, r6, r5, r4
   2b338:	cmp	r4, #0
   2b33c:	bne	2b3a8 <GetDataSlab+0x89e4>
   2b340:	ldr	r4, [r8, sl]
   2b344:	mov	r6, #0
   2b348:	str	r6, [r0, sl]
   2b34c:	sdiv	r5, r1, r4
   2b350:	mls	r5, r5, r4, r1
   2b354:	cmp	r5, #0
   2b358:	beq	2b378 <GetDataSlab+0x89b4>
   2b35c:	add	r6, sp, #64	; 0x40
   2b360:	ldr	lr, [r9, sl]
   2b364:	sub	r4, r4, r5
   2b368:	ldr	r6, [r6, sl]
   2b36c:	mla	r6, lr, r6, r4
   2b370:	add	r1, r6, r1
   2b374:	b	2b394 <GetDataSlab+0x89d0>
   2b378:	ldr	r4, [r9, sl]
   2b37c:	cmp	r4, #0
   2b380:	beq	2b398 <GetDataSlab+0x89d4>
   2b384:	add	r6, sp, #64	; 0x40
   2b388:	ldr	r6, [r6, sl]
   2b38c:	mla	r1, r6, r4, r1
   2b390:	mul	r6, r6, r4
   2b394:	add	r3, r3, r6, lsl #3
   2b398:	subs	r2, r2, #1
   2b39c:	add	sl, sl, #4
   2b3a0:	bne	2b320 <GetDataSlab+0x895c>
   2b3a4:	b	2b3b8 <GetDataSlab+0x89f4>
   2b3a8:	ldr	r2, [sp, #12]
   2b3ac:	ldr	r2, [r2, sl]
   2b3b0:	add	r3, r3, r2, lsl #3
   2b3b4:	add	r1, r2, r1
   2b3b8:	ldr	r2, [sp, #24]
   2b3bc:	ldr	r7, [sp, #36]	; 0x24
   2b3c0:	ldr	r6, [sp, #40]	; 0x28
   2b3c4:	ldr	r5, [sp, #32]
   2b3c8:	add	r7, r7, r2
   2b3cc:	ldr	r2, [sp, #44]	; 0x2c
   2b3d0:	add	r5, r5, r6
   2b3d4:	cmp	r5, r2
   2b3d8:	blt	2b2d0 <GetDataSlab+0x890c>
   2b3dc:	b	3768c <GetDataSlab+0x14cc8>
   2b3e0:	ldr	r0, [fp, #16]
   2b3e4:	mov	r3, #0
   2b3e8:	ldr	lr, [r0]
   2b3ec:	sub	r0, lr, #1
   2b3f0:	str	r0, [fp, #-72]	; 0xffffffb8
   2b3f4:	ldr	r0, [r4]
   2b3f8:	str	r0, [sp, #40]	; 0x28
   2b3fc:	str	r0, [sp, #64]	; 0x40
   2b400:	ldr	r0, [fp, #20]
   2b404:	ldr	r1, [r0]
   2b408:	ldr	r0, [fp, #24]
   2b40c:	cmp	r0, #2
   2b410:	str	r1, [sp, #44]	; 0x2c
   2b414:	str	r1, [sp, #52]	; 0x34
   2b418:	blt	2b4c8 <GetDataSlab+0x8b04>
   2b41c:	ldr	r2, [sp, #40]	; 0x28
   2b420:	ldr	r6, [sp, #44]	; 0x2c
   2b424:	mov	r9, r4
   2b428:	mov	r0, #1
   2b42c:	mov	r3, #0
   2b430:	mov	r1, r4
   2b434:	mov	r7, r2
   2b438:	str	r6, [sp, #52]	; 0x34
   2b43c:	ldr	r6, [fp, #16]
   2b440:	add	r5, sp, #64	; 0x40
   2b444:	mov	r4, #0
   2b448:	ldr	r6, [r6, r0, lsl #2]
   2b44c:	str	r2, [r5, r0, lsl #2]
   2b450:	sub	r5, r6, #1
   2b454:	sub	r6, fp, #72	; 0x48
   2b458:	str	r5, [r6, r0, lsl #2]
   2b45c:	ldr	ip, [r9, r0, lsl #2]
   2b460:	mov	r6, ip
   2b464:	mul	r2, r6, r2
   2b468:	ldr	r6, [r1, -r4, lsl #2]
   2b46c:	add	r4, r4, #1
   2b470:	cmp	r0, r4
   2b474:	mul	r5, r5, r6
   2b478:	bne	2b464 <GetDataSlab+0x8aa0>
   2b47c:	add	r4, sp, #64	; 0x40
   2b480:	add	r1, r1, #4
   2b484:	str	r2, [r4, r0, lsl #2]
   2b488:	sub	r4, fp, #72	; 0x48
   2b48c:	str	r5, [r4, r0, lsl #2]
   2b490:	ldr	r4, [fp, #12]
   2b494:	ldr	r5, [sp, #52]	; 0x34
   2b498:	ldr	r4, [r4, r0, lsl #2]
   2b49c:	mla	r3, r4, r7, r3
   2b4a0:	ldr	r4, [fp, #20]
   2b4a4:	mov	r7, r2
   2b4a8:	mov	r2, ip
   2b4ac:	ldr	r4, [r4, r0, lsl #2]
   2b4b0:	add	r0, r0, #1
   2b4b4:	mul	r5, r4, r5
   2b4b8:	ldr	r4, [fp, #24]
   2b4bc:	str	r5, [sp, #52]	; 0x34
   2b4c0:	cmp	r0, r4
   2b4c4:	bne	2b43c <GetDataSlab+0x8a78>
   2b4c8:	ldr	r0, [sp, #48]	; 0x30
   2b4cc:	cmp	lr, #1
   2b4d0:	add	r7, r0, r3
   2b4d4:	bne	37900 <GetDataSlab+0x14f3c>
   2b4d8:	ldr	r0, [sp, #52]	; 0x34
   2b4dc:	ldr	r6, [fp, #12]
   2b4e0:	cmp	r0, #1
   2b4e4:	blt	248fc <GetDataSlab+0x1f38>
   2b4e8:	add	r0, sp, #104	; 0x68
   2b4ec:	add	r9, r6, #4
   2b4f0:	ldr	r6, [sp, #44]	; 0x2c
   2b4f4:	ldr	r2, [sp, #56]	; 0x38
   2b4f8:	orr	r1, r0, #4
   2b4fc:	ldr	r0, [fp, #20]
   2b500:	add	sl, r0, #4
   2b504:	add	r0, sp, #64	; 0x40
   2b508:	orr	lr, r0, #4
   2b50c:	ldr	r0, [fp, #24]
   2b510:	sub	r0, r0, #1
   2b514:	str	r0, [sp, #32]
   2b518:	sub	r0, fp, #72	; 0x48
   2b51c:	orr	r0, r0, #4
   2b520:	str	r0, [sp, #28]
   2b524:	lsl	r0, r6, #1
   2b528:	str	r0, [sp, #36]	; 0x24
   2b52c:	mov	r0, #0
   2b530:	str	r0, [sp, #56]	; 0x38
   2b534:	cmp	r6, #1
   2b538:	blt	2b55c <GetDataSlab+0x8b98>
   2b53c:	ldr	r0, [fp, #12]
   2b540:	mov	r4, r2
   2b544:	ldr	r0, [r0]
   2b548:	add	r0, r7, r0
   2b54c:	ldrb	r5, [r0], #1
   2b550:	subs	r6, r6, #1
   2b554:	strh	r5, [r4], #2
   2b558:	bne	2b54c <GetDataSlab+0x8b88>
   2b55c:	ldr	r0, [sp, #40]	; 0x28
   2b560:	str	r2, [sp, #48]	; 0x30
   2b564:	add	r2, sp, #64	; 0x40
   2b568:	add	r7, r7, r0
   2b56c:	add	r3, r3, r0
   2b570:	ldr	r0, [fp, #24]
   2b574:	cmp	r0, #2
   2b578:	blt	2b618 <GetDataSlab+0x8c54>
   2b57c:	ldr	ip, [sp, #32]
   2b580:	mov	r0, #0
   2b584:	ldr	r4, [r1, r0]
   2b588:	add	r4, r4, #1
   2b58c:	str	r4, [r1, r0]
   2b590:	ldr	r5, [sl, r0]
   2b594:	sdiv	r6, r4, r5
   2b598:	mls	r4, r6, r5, r4
   2b59c:	cmp	r4, #0
   2b5a0:	bne	2b608 <GetDataSlab+0x8c44>
   2b5a4:	mov	r4, #0
   2b5a8:	str	r4, [r1, r0]
   2b5ac:	ldr	r4, [lr, r0]
   2b5b0:	sdiv	r5, r3, r4
   2b5b4:	mls	r6, r5, r4, r3
   2b5b8:	cmp	r6, #0
   2b5bc:	beq	2b5e0 <GetDataSlab+0x8c1c>
   2b5c0:	ldr	r5, [r2, r0]
   2b5c4:	ldr	r8, [r9, r0]
   2b5c8:	sub	r4, r4, r6
   2b5cc:	add	r2, sp, #64	; 0x40
   2b5d0:	mla	r4, r8, r5, r4
   2b5d4:	add	r3, r4, r3
   2b5d8:	add	r7, r7, r4
   2b5dc:	b	2b5f8 <GetDataSlab+0x8c34>
   2b5e0:	ldr	r4, [r9, r0]
   2b5e4:	cmp	r4, #0
   2b5e8:	beq	2b5f8 <GetDataSlab+0x8c34>
   2b5ec:	ldr	r5, [r2, r0]
   2b5f0:	mla	r3, r5, r4, r3
   2b5f4:	mla	r7, r5, r4, r7
   2b5f8:	subs	ip, ip, #1
   2b5fc:	add	r0, r0, #4
   2b600:	bne	2b584 <GetDataSlab+0x8bc0>
   2b604:	b	2b618 <GetDataSlab+0x8c54>
   2b608:	ldr	r2, [sp, #28]
   2b60c:	ldr	r0, [r2, r0]
   2b610:	add	r7, r7, r0
   2b614:	add	r3, r0, r3
   2b618:	ldr	r0, [sp, #36]	; 0x24
   2b61c:	ldr	r2, [sp, #48]	; 0x30
   2b620:	ldr	r6, [sp, #44]	; 0x2c
   2b624:	ldr	r5, [sp, #56]	; 0x38
   2b628:	add	r2, r2, r0
   2b62c:	ldr	r0, [sp, #52]	; 0x34
   2b630:	add	r5, r5, r6
   2b634:	str	r5, [sp, #56]	; 0x38
   2b638:	cmp	r5, r0
   2b63c:	mov	r0, #0
   2b640:	blt	2b534 <GetDataSlab+0x8b70>
   2b644:	b	24900 <GetDataSlab+0x1f3c>
   2b648:	ldr	r0, [fp, #16]
   2b64c:	mov	r2, #0
   2b650:	ldr	lr, [r0]
   2b654:	sub	r0, lr, #1
   2b658:	str	r0, [fp, #-72]	; 0xffffffb8
   2b65c:	ldr	r0, [r4]
   2b660:	str	r0, [sp, #40]	; 0x28
   2b664:	str	r0, [sp, #64]	; 0x40
   2b668:	ldr	r0, [fp, #20]
   2b66c:	ldr	r1, [r0]
   2b670:	ldr	r0, [fp, #24]
   2b674:	cmp	r0, #2
   2b678:	str	r1, [sp, #44]	; 0x2c
   2b67c:	str	r1, [sp, #52]	; 0x34
   2b680:	blt	2b730 <GetDataSlab+0x8d6c>
   2b684:	ldr	r6, [sp, #40]	; 0x28
   2b688:	ldr	r0, [sp, #44]	; 0x2c
   2b68c:	mov	r9, r4
   2b690:	mov	r1, #1
   2b694:	mov	r2, #0
   2b698:	mov	r7, r4
   2b69c:	mov	r5, r6
   2b6a0:	str	r0, [sp, #52]	; 0x34
   2b6a4:	ldr	r0, [fp, #16]
   2b6a8:	add	r3, sp, #64	; 0x40
   2b6ac:	mov	r4, #0
   2b6b0:	ldr	r0, [r0, r1, lsl #2]
   2b6b4:	str	r6, [r3, r1, lsl #2]
   2b6b8:	sub	r3, r0, #1
   2b6bc:	sub	r0, fp, #72	; 0x48
   2b6c0:	str	r3, [r0, r1, lsl #2]
   2b6c4:	ldr	r9, [r9, r1, lsl #2]
   2b6c8:	mov	r0, r9
   2b6cc:	mul	r6, r0, r6
   2b6d0:	ldr	r0, [r7, -r4, lsl #2]
   2b6d4:	add	r4, r4, #1
   2b6d8:	cmp	r1, r4
   2b6dc:	mul	r3, r3, r0
   2b6e0:	bne	2b6cc <GetDataSlab+0x8d08>
   2b6e4:	add	r0, sp, #64	; 0x40
   2b6e8:	add	r7, r7, #4
   2b6ec:	str	r6, [r0, r1, lsl #2]
   2b6f0:	sub	r0, fp, #72	; 0x48
   2b6f4:	str	r3, [r0, r1, lsl #2]
   2b6f8:	ldr	r3, [sp, #52]	; 0x34
   2b6fc:	ldr	r0, [ip, r1, lsl #2]
   2b700:	mla	r2, r0, r5, r2
   2b704:	ldr	r0, [fp, #20]
   2b708:	mov	r5, r6
   2b70c:	mov	r6, r9
   2b710:	ldr	r9, [fp, #8]
   2b714:	ldr	r0, [r0, r1, lsl #2]
   2b718:	add	r1, r1, #1
   2b71c:	mul	r3, r0, r3
   2b720:	ldr	r0, [fp, #24]
   2b724:	str	r3, [sp, #52]	; 0x34
   2b728:	cmp	r1, r0
   2b72c:	bne	2b6a4 <GetDataSlab+0x8ce0>
   2b730:	ldr	r0, [sp, #48]	; 0x30
   2b734:	cmp	lr, #1
   2b738:	add	r7, r0, r2, lsl #1
   2b73c:	bne	37aa4 <GetDataSlab+0x150e0>
   2b740:	ldr	r0, [sp, #52]	; 0x34
   2b744:	ldr	r3, [sp, #44]	; 0x2c
   2b748:	cmp	r0, #1
   2b74c:	blt	248fc <GetDataSlab+0x1f38>
   2b750:	add	r0, sp, #104	; 0x68
   2b754:	ldr	r6, [sp, #56]	; 0x38
   2b758:	orr	r1, r0, #4
   2b75c:	ldr	r0, [fp, #20]
   2b760:	add	r9, r0, #4
   2b764:	add	r0, sp, #64	; 0x40
   2b768:	orr	lr, r0, #4
   2b76c:	ldr	r0, [fp, #24]
   2b770:	sub	r0, r0, #1
   2b774:	str	r0, [sp, #32]
   2b778:	sub	r0, fp, #72	; 0x48
   2b77c:	orr	r0, r0, #4
   2b780:	str	r0, [sp, #28]
   2b784:	lsl	r0, r3, #1
   2b788:	str	r0, [sp, #48]	; 0x30
   2b78c:	ldr	r0, [ip], #4
   2b790:	str	r0, [sp, #36]	; 0x24
   2b794:	mov	r0, #0
   2b798:	str	r0, [sp, #60]	; 0x3c
   2b79c:	cmp	r3, #1
   2b7a0:	blt	2b7c4 <GetDataSlab+0x8e00>
   2b7a4:	ldr	r0, [sp, #36]	; 0x24
   2b7a8:	ldr	r4, [sp, #44]	; 0x2c
   2b7ac:	mov	r3, r6
   2b7b0:	add	r0, r7, r0, lsl #1
   2b7b4:	ldrh	r5, [r0], #2
   2b7b8:	subs	r4, r4, #1
   2b7bc:	strh	r5, [r3], #2
   2b7c0:	bne	2b7b4 <GetDataSlab+0x8df0>
   2b7c4:	ldr	r0, [sp, #40]	; 0x28
   2b7c8:	str	r6, [sp, #56]	; 0x38
   2b7cc:	add	r6, sp, #64	; 0x40
   2b7d0:	add	r7, r7, r0, lsl #1
   2b7d4:	add	r2, r2, r0
   2b7d8:	ldr	r0, [fp, #24]
   2b7dc:	cmp	r0, #2
   2b7e0:	blt	2b880 <GetDataSlab+0x8ebc>
   2b7e4:	ldr	sl, [sp, #32]
   2b7e8:	mov	r0, #0
   2b7ec:	ldr	r3, [r1, r0]
   2b7f0:	add	r3, r3, #1
   2b7f4:	str	r3, [r1, r0]
   2b7f8:	ldr	r4, [r9, r0]
   2b7fc:	sdiv	r5, r3, r4
   2b800:	mls	r3, r5, r4, r3
   2b804:	cmp	r3, #0
   2b808:	bne	2b870 <GetDataSlab+0x8eac>
   2b80c:	mov	r3, #0
   2b810:	str	r3, [r1, r0]
   2b814:	ldr	r3, [lr, r0]
   2b818:	sdiv	r4, r2, r3
   2b81c:	mls	r4, r4, r3, r2
   2b820:	cmp	r4, #0
   2b824:	beq	2b844 <GetDataSlab+0x8e80>
   2b828:	ldr	r5, [r6, r0]
   2b82c:	ldr	r8, [ip, r0]
   2b830:	sub	r3, r3, r4
   2b834:	add	r6, sp, #64	; 0x40
   2b838:	mla	r3, r8, r5, r3
   2b83c:	add	r2, r3, r2
   2b840:	b	2b85c <GetDataSlab+0x8e98>
   2b844:	ldr	r3, [ip, r0]
   2b848:	cmp	r3, #0
   2b84c:	beq	2b860 <GetDataSlab+0x8e9c>
   2b850:	ldr	r4, [r6, r0]
   2b854:	mla	r2, r4, r3, r2
   2b858:	mul	r3, r4, r3
   2b85c:	add	r7, r7, r3, lsl #1
   2b860:	subs	sl, sl, #1
   2b864:	add	r0, r0, #4
   2b868:	bne	2b7ec <GetDataSlab+0x8e28>
   2b86c:	b	2b880 <GetDataSlab+0x8ebc>
   2b870:	ldr	r3, [sp, #28]
   2b874:	ldr	r0, [r3, r0]
   2b878:	add	r7, r7, r0, lsl #1
   2b87c:	add	r2, r0, r2
   2b880:	ldr	r0, [sp, #48]	; 0x30
   2b884:	ldr	r6, [sp, #56]	; 0x38
   2b888:	ldr	r3, [sp, #44]	; 0x2c
   2b88c:	ldr	r4, [sp, #60]	; 0x3c
   2b890:	add	r6, r6, r0
   2b894:	ldr	r0, [sp, #52]	; 0x34
   2b898:	add	r4, r4, r3
   2b89c:	str	r4, [sp, #60]	; 0x3c
   2b8a0:	cmp	r4, r0
   2b8a4:	mov	r0, #0
   2b8a8:	blt	2b79c <GetDataSlab+0x8dd8>
   2b8ac:	b	24900 <GetDataSlab+0x1f3c>
   2b8b0:	ldr	r0, [fp, #16]
   2b8b4:	mov	r2, #0
   2b8b8:	ldr	lr, [r0]
   2b8bc:	sub	r0, lr, #1
   2b8c0:	str	r0, [fp, #-72]	; 0xffffffb8
   2b8c4:	ldr	r0, [r4]
   2b8c8:	str	r0, [sp, #40]	; 0x28
   2b8cc:	str	r0, [sp, #64]	; 0x40
   2b8d0:	ldr	r0, [fp, #20]
   2b8d4:	ldr	r1, [r0]
   2b8d8:	ldr	r0, [fp, #24]
   2b8dc:	cmp	r0, #2
   2b8e0:	str	r1, [sp, #44]	; 0x2c
   2b8e4:	str	r1, [sp, #52]	; 0x34
   2b8e8:	blt	2b998 <GetDataSlab+0x8fd4>
   2b8ec:	ldr	r6, [sp, #40]	; 0x28
   2b8f0:	ldr	r0, [sp, #44]	; 0x2c
   2b8f4:	mov	r9, r4
   2b8f8:	mov	r1, #1
   2b8fc:	mov	r2, #0
   2b900:	mov	r7, r4
   2b904:	mov	r5, r6
   2b908:	str	r0, [sp, #52]	; 0x34
   2b90c:	ldr	r0, [fp, #16]
   2b910:	add	r3, sp, #64	; 0x40
   2b914:	mov	r4, #0
   2b918:	ldr	r0, [r0, r1, lsl #2]
   2b91c:	str	r6, [r3, r1, lsl #2]
   2b920:	sub	r3, r0, #1
   2b924:	sub	r0, fp, #72	; 0x48
   2b928:	str	r3, [r0, r1, lsl #2]
   2b92c:	ldr	r9, [r9, r1, lsl #2]
   2b930:	mov	r0, r9
   2b934:	mul	r6, r0, r6
   2b938:	ldr	r0, [r7, -r4, lsl #2]
   2b93c:	add	r4, r4, #1
   2b940:	cmp	r1, r4
   2b944:	mul	r3, r3, r0
   2b948:	bne	2b934 <GetDataSlab+0x8f70>
   2b94c:	add	r0, sp, #64	; 0x40
   2b950:	add	r7, r7, #4
   2b954:	str	r6, [r0, r1, lsl #2]
   2b958:	sub	r0, fp, #72	; 0x48
   2b95c:	str	r3, [r0, r1, lsl #2]
   2b960:	ldr	r3, [sp, #52]	; 0x34
   2b964:	ldr	r0, [ip, r1, lsl #2]
   2b968:	mla	r2, r0, r5, r2
   2b96c:	ldr	r0, [fp, #20]
   2b970:	mov	r5, r6
   2b974:	mov	r6, r9
   2b978:	ldr	r9, [fp, #8]
   2b97c:	ldr	r0, [r0, r1, lsl #2]
   2b980:	add	r1, r1, #1
   2b984:	mul	r3, r0, r3
   2b988:	ldr	r0, [fp, #24]
   2b98c:	str	r3, [sp, #52]	; 0x34
   2b990:	cmp	r1, r0
   2b994:	bne	2b90c <GetDataSlab+0x8f48>
   2b998:	ldr	r0, [sp, #48]	; 0x30
   2b99c:	cmp	lr, #1
   2b9a0:	add	r7, r0, r2, lsl #1
   2b9a4:	bne	37c3c <GetDataSlab+0x15278>
   2b9a8:	ldr	r0, [sp, #52]	; 0x34
   2b9ac:	ldr	r3, [sp, #44]	; 0x2c
   2b9b0:	cmp	r0, #1
   2b9b4:	blt	248fc <GetDataSlab+0x1f38>
   2b9b8:	add	r0, sp, #104	; 0x68
   2b9bc:	ldr	r6, [sp, #56]	; 0x38
   2b9c0:	orr	r1, r0, #4
   2b9c4:	ldr	r0, [fp, #20]
   2b9c8:	add	r9, r0, #4
   2b9cc:	add	r0, sp, #64	; 0x40
   2b9d0:	orr	lr, r0, #4
   2b9d4:	ldr	r0, [fp, #24]
   2b9d8:	sub	r0, r0, #1
   2b9dc:	str	r0, [sp, #32]
   2b9e0:	sub	r0, fp, #72	; 0x48
   2b9e4:	orr	r0, r0, #4
   2b9e8:	str	r0, [sp, #28]
   2b9ec:	lsl	r0, r3, #1
   2b9f0:	str	r0, [sp, #48]	; 0x30
   2b9f4:	ldr	r0, [ip], #4
   2b9f8:	str	r0, [sp, #36]	; 0x24
   2b9fc:	mov	r0, #0
   2ba00:	str	r0, [sp, #60]	; 0x3c
   2ba04:	cmp	r3, #1
   2ba08:	blt	2ba2c <GetDataSlab+0x9068>
   2ba0c:	ldr	r0, [sp, #36]	; 0x24
   2ba10:	ldr	r4, [sp, #44]	; 0x2c
   2ba14:	mov	r3, r6
   2ba18:	add	r0, r7, r0, lsl #1
   2ba1c:	ldrh	r5, [r0], #2
   2ba20:	subs	r4, r4, #1
   2ba24:	strh	r5, [r3], #2
   2ba28:	bne	2ba1c <GetDataSlab+0x9058>
   2ba2c:	ldr	r0, [sp, #40]	; 0x28
   2ba30:	str	r6, [sp, #56]	; 0x38
   2ba34:	add	r6, sp, #64	; 0x40
   2ba38:	add	r7, r7, r0, lsl #1
   2ba3c:	add	r2, r2, r0
   2ba40:	ldr	r0, [fp, #24]
   2ba44:	cmp	r0, #2
   2ba48:	blt	2bae8 <GetDataSlab+0x9124>
   2ba4c:	ldr	sl, [sp, #32]
   2ba50:	mov	r0, #0
   2ba54:	ldr	r3, [r1, r0]
   2ba58:	add	r3, r3, #1
   2ba5c:	str	r3, [r1, r0]
   2ba60:	ldr	r4, [r9, r0]
   2ba64:	sdiv	r5, r3, r4
   2ba68:	mls	r3, r5, r4, r3
   2ba6c:	cmp	r3, #0
   2ba70:	bne	2bad8 <GetDataSlab+0x9114>
   2ba74:	mov	r3, #0
   2ba78:	str	r3, [r1, r0]
   2ba7c:	ldr	r3, [lr, r0]
   2ba80:	sdiv	r4, r2, r3
   2ba84:	mls	r4, r4, r3, r2
   2ba88:	cmp	r4, #0
   2ba8c:	beq	2baac <GetDataSlab+0x90e8>
   2ba90:	ldr	r5, [r6, r0]
   2ba94:	ldr	r8, [ip, r0]
   2ba98:	sub	r3, r3, r4
   2ba9c:	add	r6, sp, #64	; 0x40
   2baa0:	mla	r3, r8, r5, r3
   2baa4:	add	r2, r3, r2
   2baa8:	b	2bac4 <GetDataSlab+0x9100>
   2baac:	ldr	r3, [ip, r0]
   2bab0:	cmp	r3, #0
   2bab4:	beq	2bac8 <GetDataSlab+0x9104>
   2bab8:	ldr	r4, [r6, r0]
   2babc:	mla	r2, r4, r3, r2
   2bac0:	mul	r3, r4, r3
   2bac4:	add	r7, r7, r3, lsl #1
   2bac8:	subs	sl, sl, #1
   2bacc:	add	r0, r0, #4
   2bad0:	bne	2ba54 <GetDataSlab+0x9090>
   2bad4:	b	2bae8 <GetDataSlab+0x9124>
   2bad8:	ldr	r3, [sp, #28]
   2badc:	ldr	r0, [r3, r0]
   2bae0:	add	r7, r7, r0, lsl #1
   2bae4:	add	r2, r0, r2
   2bae8:	ldr	r0, [sp, #48]	; 0x30
   2baec:	ldr	r6, [sp, #56]	; 0x38
   2baf0:	ldr	r3, [sp, #44]	; 0x2c
   2baf4:	ldr	r4, [sp, #60]	; 0x3c
   2baf8:	add	r6, r6, r0
   2bafc:	ldr	r0, [sp, #52]	; 0x34
   2bb00:	add	r4, r4, r3
   2bb04:	str	r4, [sp, #60]	; 0x3c
   2bb08:	cmp	r4, r0
   2bb0c:	mov	r0, #0
   2bb10:	blt	2ba04 <GetDataSlab+0x9040>
   2bb14:	b	24900 <GetDataSlab+0x1f3c>
   2bb18:	ldr	r0, [fp, #16]
   2bb1c:	mov	r3, #0
   2bb20:	ldr	r9, [r0]
   2bb24:	sub	r0, r9, #1
   2bb28:	str	r0, [fp, #-72]	; 0xffffffb8
   2bb2c:	ldr	r0, [r4]
   2bb30:	str	r0, [sp, #40]	; 0x28
   2bb34:	str	r0, [sp, #64]	; 0x40
   2bb38:	ldr	r0, [fp, #20]
   2bb3c:	ldr	r1, [r0]
   2bb40:	ldr	r0, [fp, #24]
   2bb44:	cmp	r0, #2
   2bb48:	str	r1, [sp, #44]	; 0x2c
   2bb4c:	str	r1, [sp, #52]	; 0x34
   2bb50:	blt	2bbfc <GetDataSlab+0x9238>
   2bb54:	ldr	r7, [sp, #40]	; 0x28
   2bb58:	ldr	r0, [sp, #44]	; 0x2c
   2bb5c:	ldr	r2, [fp, #8]
   2bb60:	mov	r1, #1
   2bb64:	mov	r3, #0
   2bb68:	mov	r6, r7
   2bb6c:	str	r0, [sp, #52]	; 0x34
   2bb70:	ldr	r0, [fp, #16]
   2bb74:	add	r5, sp, #64	; 0x40
   2bb78:	mov	r4, #0
   2bb7c:	ldr	r0, [r0, r1, lsl #2]
   2bb80:	str	r7, [r5, r1, lsl #2]
   2bb84:	sub	r5, fp, #72	; 0x48
   2bb88:	sub	r0, r0, #1
   2bb8c:	str	r0, [r5, r1, lsl #2]
   2bb90:	ldr	r5, [fp, #8]
   2bb94:	ldr	lr, [r5, r1, lsl #2]
   2bb98:	mov	r5, lr
   2bb9c:	mul	r7, r5, r7
   2bba0:	ldr	r5, [r2, -r4, lsl #2]
   2bba4:	add	r4, r4, #1
   2bba8:	cmp	r1, r4
   2bbac:	mul	r0, r0, r5
   2bbb0:	bne	2bb9c <GetDataSlab+0x91d8>
   2bbb4:	add	r4, sp, #64	; 0x40
   2bbb8:	add	r2, r2, #4
   2bbbc:	str	r7, [r4, r1, lsl #2]
   2bbc0:	sub	r4, fp, #72	; 0x48
   2bbc4:	str	r0, [r4, r1, lsl #2]
   2bbc8:	ldr	r4, [sp, #52]	; 0x34
   2bbcc:	ldr	r0, [ip, r1, lsl #2]
   2bbd0:	mla	r3, r0, r6, r3
   2bbd4:	ldr	r0, [fp, #20]
   2bbd8:	mov	r6, r7
   2bbdc:	mov	r7, lr
   2bbe0:	ldr	r0, [r0, r1, lsl #2]
   2bbe4:	add	r1, r1, #1
   2bbe8:	mul	r4, r0, r4
   2bbec:	ldr	r0, [fp, #24]
   2bbf0:	str	r4, [sp, #52]	; 0x34
   2bbf4:	cmp	r1, r0
   2bbf8:	bne	2bb70 <GetDataSlab+0x91ac>
   2bbfc:	ldr	r0, [sp, #48]	; 0x30
   2bc00:	cmp	r9, #1
   2bc04:	add	r7, r0, r3, lsl #2
   2bc08:	bne	37dd4 <GetDataSlab+0x15410>
   2bc0c:	ldr	r0, [sp, #52]	; 0x34
   2bc10:	ldr	r6, [sp, #56]	; 0x38
   2bc14:	ldr	r5, [sp, #44]	; 0x2c
   2bc18:	cmp	r0, #1
   2bc1c:	blt	248fc <GetDataSlab+0x1f38>
   2bc20:	add	r0, sp, #104	; 0x68
   2bc24:	add	r9, ip, #4
   2bc28:	mov	r2, r6
   2bc2c:	orr	r1, r0, #4
   2bc30:	ldr	r0, [fp, #20]
   2bc34:	add	sl, r0, #4
   2bc38:	add	r0, sp, #64	; 0x40
   2bc3c:	orr	r8, r0, #4
   2bc40:	ldr	r0, [fp, #24]
   2bc44:	sub	r0, r0, #1
   2bc48:	str	r0, [sp, #32]
   2bc4c:	sub	r0, fp, #72	; 0x48
   2bc50:	orr	r0, r0, #4
   2bc54:	str	r0, [sp, #28]
   2bc58:	lsl	r0, r5, #1
   2bc5c:	str	r0, [sp, #36]	; 0x24
   2bc60:	mov	r0, #0
   2bc64:	str	r0, [sp, #56]	; 0x38
   2bc68:	cmp	r5, #1
   2bc6c:	blt	2bc94 <GetDataSlab+0x92d0>
   2bc70:	ldr	r0, [fp, #12]
   2bc74:	ldr	r6, [sp, #44]	; 0x2c
   2bc78:	mov	r4, r2
   2bc7c:	ldr	r0, [r0]
   2bc80:	add	r0, r7, r0, lsl #2
   2bc84:	ldr	r5, [r0], #4
   2bc88:	subs	r6, r6, #1
   2bc8c:	strh	r5, [r4], #2
   2bc90:	bne	2bc84 <GetDataSlab+0x92c0>
   2bc94:	ldr	r0, [sp, #40]	; 0x28
   2bc98:	str	r2, [sp, #48]	; 0x30
   2bc9c:	add	r7, r7, r0, lsl #2
   2bca0:	add	r3, r3, r0
   2bca4:	ldr	r0, [fp, #24]
   2bca8:	cmp	r0, #2
   2bcac:	blt	2bd50 <GetDataSlab+0x938c>
   2bcb0:	ldr	ip, [sp, #32]
   2bcb4:	mov	r0, #0
   2bcb8:	ldr	r4, [r1, r0]
   2bcbc:	add	r4, r4, #1
   2bcc0:	str	r4, [r1, r0]
   2bcc4:	ldr	r5, [sl, r0]
   2bcc8:	sdiv	r6, r4, r5
   2bccc:	mls	r4, r6, r5, r4
   2bcd0:	cmp	r4, #0
   2bcd4:	bne	2bd40 <GetDataSlab+0x937c>
   2bcd8:	ldr	r4, [r8, r0]
   2bcdc:	mov	r6, #0
   2bce0:	str	r6, [r1, r0]
   2bce4:	sdiv	r5, r3, r4
   2bce8:	mls	r6, r5, r4, r3
   2bcec:	cmp	r6, #0
   2bcf0:	beq	2bd10 <GetDataSlab+0x934c>
   2bcf4:	add	r5, sp, #64	; 0x40
   2bcf8:	ldr	lr, [r9, r0]
   2bcfc:	sub	r4, r4, r6
   2bd00:	ldr	r5, [r5, r0]
   2bd04:	mla	r6, lr, r5, r4
   2bd08:	add	r3, r6, r3
   2bd0c:	b	2bd2c <GetDataSlab+0x9368>
   2bd10:	ldr	r4, [r9, r0]
   2bd14:	cmp	r4, #0
   2bd18:	beq	2bd30 <GetDataSlab+0x936c>
   2bd1c:	add	r6, sp, #64	; 0x40
   2bd20:	ldr	r6, [r6, r0]
   2bd24:	mla	r3, r6, r4, r3
   2bd28:	mul	r6, r6, r4
   2bd2c:	add	r7, r7, r6, lsl #2
   2bd30:	subs	ip, ip, #1
   2bd34:	add	r0, r0, #4
   2bd38:	bne	2bcb8 <GetDataSlab+0x92f4>
   2bd3c:	b	2bd50 <GetDataSlab+0x938c>
   2bd40:	ldr	r6, [sp, #28]
   2bd44:	ldr	r0, [r6, r0]
   2bd48:	add	r7, r7, r0, lsl #2
   2bd4c:	add	r3, r0, r3
   2bd50:	ldr	r0, [sp, #36]	; 0x24
   2bd54:	ldr	r2, [sp, #48]	; 0x30
   2bd58:	ldr	r5, [sp, #44]	; 0x2c
   2bd5c:	ldr	r6, [sp, #56]	; 0x38
   2bd60:	add	r2, r2, r0
   2bd64:	ldr	r0, [sp, #52]	; 0x34
   2bd68:	add	r6, r6, r5
   2bd6c:	str	r6, [sp, #56]	; 0x38
   2bd70:	cmp	r6, r0
   2bd74:	mov	r0, #0
   2bd78:	blt	2bc68 <GetDataSlab+0x92a4>
   2bd7c:	b	24900 <GetDataSlab+0x1f3c>
   2bd80:	ldr	r0, [fp, #16]
   2bd84:	mov	r3, #0
   2bd88:	ldr	r9, [r0]
   2bd8c:	sub	r0, r9, #1
   2bd90:	str	r0, [fp, #-72]	; 0xffffffb8
   2bd94:	ldr	r0, [r4]
   2bd98:	str	r0, [sp, #40]	; 0x28
   2bd9c:	str	r0, [sp, #64]	; 0x40
   2bda0:	ldr	r0, [fp, #20]
   2bda4:	ldr	r1, [r0]
   2bda8:	ldr	r0, [fp, #24]
   2bdac:	cmp	r0, #2
   2bdb0:	str	r1, [sp, #44]	; 0x2c
   2bdb4:	str	r1, [sp, #52]	; 0x34
   2bdb8:	blt	2be64 <GetDataSlab+0x94a0>
   2bdbc:	ldr	r7, [sp, #40]	; 0x28
   2bdc0:	ldr	r0, [sp, #44]	; 0x2c
   2bdc4:	ldr	r2, [fp, #8]
   2bdc8:	mov	r1, #1
   2bdcc:	mov	r3, #0
   2bdd0:	mov	r6, r7
   2bdd4:	str	r0, [sp, #52]	; 0x34
   2bdd8:	ldr	r0, [fp, #16]
   2bddc:	add	r5, sp, #64	; 0x40
   2bde0:	mov	r4, #0
   2bde4:	ldr	r0, [r0, r1, lsl #2]
   2bde8:	str	r7, [r5, r1, lsl #2]
   2bdec:	sub	r5, fp, #72	; 0x48
   2bdf0:	sub	r0, r0, #1
   2bdf4:	str	r0, [r5, r1, lsl #2]
   2bdf8:	ldr	r5, [fp, #8]
   2bdfc:	ldr	lr, [r5, r1, lsl #2]
   2be00:	mov	r5, lr
   2be04:	mul	r7, r5, r7
   2be08:	ldr	r5, [r2, -r4, lsl #2]
   2be0c:	add	r4, r4, #1
   2be10:	cmp	r1, r4
   2be14:	mul	r0, r0, r5
   2be18:	bne	2be04 <GetDataSlab+0x9440>
   2be1c:	add	r4, sp, #64	; 0x40
   2be20:	add	r2, r2, #4
   2be24:	str	r7, [r4, r1, lsl #2]
   2be28:	sub	r4, fp, #72	; 0x48
   2be2c:	str	r0, [r4, r1, lsl #2]
   2be30:	ldr	r4, [sp, #52]	; 0x34
   2be34:	ldr	r0, [ip, r1, lsl #2]
   2be38:	mla	r3, r0, r6, r3
   2be3c:	ldr	r0, [fp, #20]
   2be40:	mov	r6, r7
   2be44:	mov	r7, lr
   2be48:	ldr	r0, [r0, r1, lsl #2]
   2be4c:	add	r1, r1, #1
   2be50:	mul	r4, r0, r4
   2be54:	ldr	r0, [fp, #24]
   2be58:	str	r4, [sp, #52]	; 0x34
   2be5c:	cmp	r1, r0
   2be60:	bne	2bdd8 <GetDataSlab+0x9414>
   2be64:	ldr	r0, [sp, #48]	; 0x30
   2be68:	cmp	r9, #1
   2be6c:	add	r7, r0, r3, lsl #2
   2be70:	bne	37f7c <GetDataSlab+0x155b8>
   2be74:	ldr	r0, [sp, #52]	; 0x34
   2be78:	ldr	r6, [sp, #56]	; 0x38
   2be7c:	ldr	r5, [sp, #44]	; 0x2c
   2be80:	cmp	r0, #1
   2be84:	blt	248fc <GetDataSlab+0x1f38>
   2be88:	add	r0, sp, #104	; 0x68
   2be8c:	add	r9, ip, #4
   2be90:	mov	r2, r6
   2be94:	orr	r1, r0, #4
   2be98:	ldr	r0, [fp, #20]
   2be9c:	add	sl, r0, #4
   2bea0:	add	r0, sp, #64	; 0x40
   2bea4:	orr	r8, r0, #4
   2bea8:	ldr	r0, [fp, #24]
   2beac:	sub	r0, r0, #1
   2beb0:	str	r0, [sp, #32]
   2beb4:	sub	r0, fp, #72	; 0x48
   2beb8:	orr	r0, r0, #4
   2bebc:	str	r0, [sp, #28]
   2bec0:	lsl	r0, r5, #1
   2bec4:	str	r0, [sp, #36]	; 0x24
   2bec8:	mov	r0, #0
   2becc:	str	r0, [sp, #56]	; 0x38
   2bed0:	cmp	r5, #1
   2bed4:	blt	2befc <GetDataSlab+0x9538>
   2bed8:	ldr	r0, [fp, #12]
   2bedc:	ldr	r6, [sp, #44]	; 0x2c
   2bee0:	mov	r4, r2
   2bee4:	ldr	r0, [r0]
   2bee8:	add	r0, r7, r0, lsl #2
   2beec:	ldr	r5, [r0], #4
   2bef0:	subs	r6, r6, #1
   2bef4:	strh	r5, [r4], #2
   2bef8:	bne	2beec <GetDataSlab+0x9528>
   2befc:	ldr	r0, [sp, #40]	; 0x28
   2bf00:	str	r2, [sp, #48]	; 0x30
   2bf04:	add	r7, r7, r0, lsl #2
   2bf08:	add	r3, r3, r0
   2bf0c:	ldr	r0, [fp, #24]
   2bf10:	cmp	r0, #2
   2bf14:	blt	2bfb8 <GetDataSlab+0x95f4>
   2bf18:	ldr	ip, [sp, #32]
   2bf1c:	mov	r0, #0
   2bf20:	ldr	r4, [r1, r0]
   2bf24:	add	r4, r4, #1
   2bf28:	str	r4, [r1, r0]
   2bf2c:	ldr	r5, [sl, r0]
   2bf30:	sdiv	r6, r4, r5
   2bf34:	mls	r4, r6, r5, r4
   2bf38:	cmp	r4, #0
   2bf3c:	bne	2bfa8 <GetDataSlab+0x95e4>
   2bf40:	ldr	r4, [r8, r0]
   2bf44:	mov	r6, #0
   2bf48:	str	r6, [r1, r0]
   2bf4c:	sdiv	r5, r3, r4
   2bf50:	mls	r6, r5, r4, r3
   2bf54:	cmp	r6, #0
   2bf58:	beq	2bf78 <GetDataSlab+0x95b4>
   2bf5c:	add	r5, sp, #64	; 0x40
   2bf60:	ldr	lr, [r9, r0]
   2bf64:	sub	r4, r4, r6
   2bf68:	ldr	r5, [r5, r0]
   2bf6c:	mla	r6, lr, r5, r4
   2bf70:	add	r3, r6, r3
   2bf74:	b	2bf94 <GetDataSlab+0x95d0>
   2bf78:	ldr	r4, [r9, r0]
   2bf7c:	cmp	r4, #0
   2bf80:	beq	2bf98 <GetDataSlab+0x95d4>
   2bf84:	add	r6, sp, #64	; 0x40
   2bf88:	ldr	r6, [r6, r0]
   2bf8c:	mla	r3, r6, r4, r3
   2bf90:	mul	r6, r6, r4
   2bf94:	add	r7, r7, r6, lsl #2
   2bf98:	subs	ip, ip, #1
   2bf9c:	add	r0, r0, #4
   2bfa0:	bne	2bf20 <GetDataSlab+0x955c>
   2bfa4:	b	2bfb8 <GetDataSlab+0x95f4>
   2bfa8:	ldr	r6, [sp, #28]
   2bfac:	ldr	r0, [r6, r0]
   2bfb0:	add	r7, r7, r0, lsl #2
   2bfb4:	add	r3, r0, r3
   2bfb8:	ldr	r0, [sp, #36]	; 0x24
   2bfbc:	ldr	r2, [sp, #48]	; 0x30
   2bfc0:	ldr	r5, [sp, #44]	; 0x2c
   2bfc4:	ldr	r6, [sp, #56]	; 0x38
   2bfc8:	add	r2, r2, r0
   2bfcc:	ldr	r0, [sp, #52]	; 0x34
   2bfd0:	add	r6, r6, r5
   2bfd4:	str	r6, [sp, #56]	; 0x38
   2bfd8:	cmp	r6, r0
   2bfdc:	mov	r0, #0
   2bfe0:	blt	2bed0 <GetDataSlab+0x950c>
   2bfe4:	b	24900 <GetDataSlab+0x1f3c>
   2bfe8:	ldr	r0, [fp, #16]
   2bfec:	mov	r2, #0
   2bff0:	ldr	lr, [r0]
   2bff4:	sub	r0, lr, #1
   2bff8:	str	r0, [fp, #-72]	; 0xffffffb8
   2bffc:	ldr	r0, [r4]
   2c000:	str	r0, [sp, #40]	; 0x28
   2c004:	str	r0, [sp, #64]	; 0x40
   2c008:	ldr	r0, [fp, #20]
   2c00c:	ldr	r1, [r0]
   2c010:	ldr	r0, [fp, #24]
   2c014:	cmp	r0, #2
   2c018:	str	r1, [sp, #44]	; 0x2c
   2c01c:	str	r1, [sp, #52]	; 0x34
   2c020:	blt	2c0d0 <GetDataSlab+0x970c>
   2c024:	ldr	r6, [sp, #40]	; 0x28
   2c028:	ldr	r0, [sp, #44]	; 0x2c
   2c02c:	mov	r9, r4
   2c030:	mov	r1, #1
   2c034:	mov	r2, #0
   2c038:	mov	r7, r4
   2c03c:	mov	r5, r6
   2c040:	str	r0, [sp, #52]	; 0x34
   2c044:	ldr	r0, [fp, #16]
   2c048:	add	r3, sp, #64	; 0x40
   2c04c:	mov	r4, #0
   2c050:	ldr	r0, [r0, r1, lsl #2]
   2c054:	str	r6, [r3, r1, lsl #2]
   2c058:	sub	r3, r0, #1
   2c05c:	sub	r0, fp, #72	; 0x48
   2c060:	str	r3, [r0, r1, lsl #2]
   2c064:	ldr	r9, [r9, r1, lsl #2]
   2c068:	mov	r0, r9
   2c06c:	mul	r6, r0, r6
   2c070:	ldr	r0, [r7, -r4, lsl #2]
   2c074:	add	r4, r4, #1
   2c078:	cmp	r1, r4
   2c07c:	mul	r3, r3, r0
   2c080:	bne	2c06c <GetDataSlab+0x96a8>
   2c084:	add	r0, sp, #64	; 0x40
   2c088:	add	r7, r7, #4
   2c08c:	str	r6, [r0, r1, lsl #2]
   2c090:	sub	r0, fp, #72	; 0x48
   2c094:	str	r3, [r0, r1, lsl #2]
   2c098:	ldr	r3, [sp, #52]	; 0x34
   2c09c:	ldr	r0, [ip, r1, lsl #2]
   2c0a0:	mla	r2, r0, r5, r2
   2c0a4:	ldr	r0, [fp, #20]
   2c0a8:	mov	r5, r6
   2c0ac:	mov	r6, r9
   2c0b0:	ldr	r9, [fp, #8]
   2c0b4:	ldr	r0, [r0, r1, lsl #2]
   2c0b8:	add	r1, r1, #1
   2c0bc:	mul	r3, r0, r3
   2c0c0:	ldr	r0, [fp, #24]
   2c0c4:	str	r3, [sp, #52]	; 0x34
   2c0c8:	cmp	r1, r0
   2c0cc:	bne	2c044 <GetDataSlab+0x9680>
   2c0d0:	ldr	r0, [sp, #48]	; 0x30
   2c0d4:	cmp	lr, #1
   2c0d8:	add	r7, r0, r2, lsl #2
   2c0dc:	bne	38124 <GetDataSlab+0x15760>
   2c0e0:	ldr	r0, [sp, #52]	; 0x34
   2c0e4:	ldr	r3, [sp, #44]	; 0x2c
   2c0e8:	cmp	r0, #1
   2c0ec:	blt	248fc <GetDataSlab+0x1f38>
   2c0f0:	add	r0, sp, #104	; 0x68
   2c0f4:	ldr	r6, [sp, #56]	; 0x38
   2c0f8:	orr	r1, r0, #4
   2c0fc:	ldr	r0, [fp, #20]
   2c100:	add	r9, r0, #4
   2c104:	add	r0, sp, #64	; 0x40
   2c108:	orr	lr, r0, #4
   2c10c:	ldr	r0, [fp, #24]
   2c110:	sub	r0, r0, #1
   2c114:	str	r0, [sp, #32]
   2c118:	sub	r0, fp, #72	; 0x48
   2c11c:	orr	r0, r0, #4
   2c120:	str	r0, [sp, #28]
   2c124:	lsl	r0, r3, #1
   2c128:	str	r0, [sp, #48]	; 0x30
   2c12c:	ldr	r0, [ip], #4
   2c130:	str	r0, [sp, #36]	; 0x24
   2c134:	mov	r0, #0
   2c138:	str	r0, [sp, #60]	; 0x3c
   2c13c:	cmp	r3, #1
   2c140:	blt	2c170 <GetDataSlab+0x97ac>
   2c144:	ldr	r0, [sp, #36]	; 0x24
   2c148:	ldr	r4, [sp, #44]	; 0x2c
   2c14c:	mov	r3, r6
   2c150:	add	r0, r7, r0, lsl #2
   2c154:	vldr	s0, [r0]
   2c158:	add	r0, r0, #4
   2c15c:	subs	r4, r4, #1
   2c160:	vcvt.u32.f32	s0, s0
   2c164:	vmov	r5, s0
   2c168:	strh	r5, [r3], #2
   2c16c:	bne	2c154 <GetDataSlab+0x9790>
   2c170:	ldr	r0, [sp, #40]	; 0x28
   2c174:	str	r6, [sp, #56]	; 0x38
   2c178:	add	r6, sp, #64	; 0x40
   2c17c:	add	r7, r7, r0, lsl #2
   2c180:	add	r2, r2, r0
   2c184:	ldr	r0, [fp, #24]
   2c188:	cmp	r0, #2
   2c18c:	blt	2c22c <GetDataSlab+0x9868>
   2c190:	ldr	sl, [sp, #32]
   2c194:	mov	r0, #0
   2c198:	ldr	r3, [r1, r0]
   2c19c:	add	r3, r3, #1
   2c1a0:	str	r3, [r1, r0]
   2c1a4:	ldr	r4, [r9, r0]
   2c1a8:	sdiv	r5, r3, r4
   2c1ac:	mls	r3, r5, r4, r3
   2c1b0:	cmp	r3, #0
   2c1b4:	bne	2c21c <GetDataSlab+0x9858>
   2c1b8:	mov	r3, #0
   2c1bc:	str	r3, [r1, r0]
   2c1c0:	ldr	r3, [lr, r0]
   2c1c4:	sdiv	r4, r2, r3
   2c1c8:	mls	r4, r4, r3, r2
   2c1cc:	cmp	r4, #0
   2c1d0:	beq	2c1f0 <GetDataSlab+0x982c>
   2c1d4:	ldr	r5, [r6, r0]
   2c1d8:	ldr	r8, [ip, r0]
   2c1dc:	sub	r3, r3, r4
   2c1e0:	add	r6, sp, #64	; 0x40
   2c1e4:	mla	r3, r8, r5, r3
   2c1e8:	add	r2, r3, r2
   2c1ec:	b	2c208 <GetDataSlab+0x9844>
   2c1f0:	ldr	r3, [ip, r0]
   2c1f4:	cmp	r3, #0
   2c1f8:	beq	2c20c <GetDataSlab+0x9848>
   2c1fc:	ldr	r4, [r6, r0]
   2c200:	mla	r2, r4, r3, r2
   2c204:	mul	r3, r4, r3
   2c208:	add	r7, r7, r3, lsl #2
   2c20c:	subs	sl, sl, #1
   2c210:	add	r0, r0, #4
   2c214:	bne	2c198 <GetDataSlab+0x97d4>
   2c218:	b	2c22c <GetDataSlab+0x9868>
   2c21c:	ldr	r3, [sp, #28]
   2c220:	ldr	r0, [r3, r0]
   2c224:	add	r7, r7, r0, lsl #2
   2c228:	add	r2, r0, r2
   2c22c:	ldr	r0, [sp, #48]	; 0x30
   2c230:	ldr	r6, [sp, #56]	; 0x38
   2c234:	ldr	r3, [sp, #44]	; 0x2c
   2c238:	ldr	r4, [sp, #60]	; 0x3c
   2c23c:	add	r6, r6, r0
   2c240:	ldr	r0, [sp, #52]	; 0x34
   2c244:	add	r4, r4, r3
   2c248:	str	r4, [sp, #60]	; 0x3c
   2c24c:	cmp	r4, r0
   2c250:	mov	r0, #0
   2c254:	blt	2c13c <GetDataSlab+0x9778>
   2c258:	b	24900 <GetDataSlab+0x1f3c>
   2c25c:	ldr	r0, [fp, #16]
   2c260:	mov	r2, #0
   2c264:	ldr	lr, [r0]
   2c268:	sub	r0, lr, #1
   2c26c:	str	r0, [fp, #-72]	; 0xffffffb8
   2c270:	ldr	r0, [r4]
   2c274:	str	r0, [sp, #40]	; 0x28
   2c278:	str	r0, [sp, #64]	; 0x40
   2c27c:	ldr	r0, [fp, #20]
   2c280:	ldr	r1, [r0]
   2c284:	ldr	r0, [fp, #24]
   2c288:	cmp	r0, #2
   2c28c:	str	r1, [sp, #44]	; 0x2c
   2c290:	str	r1, [sp, #52]	; 0x34
   2c294:	blt	2c344 <GetDataSlab+0x9980>
   2c298:	ldr	r6, [sp, #40]	; 0x28
   2c29c:	ldr	r0, [sp, #44]	; 0x2c
   2c2a0:	mov	r9, r4
   2c2a4:	mov	r1, #1
   2c2a8:	mov	r2, #0
   2c2ac:	mov	r7, r4
   2c2b0:	mov	r5, r6
   2c2b4:	str	r0, [sp, #52]	; 0x34
   2c2b8:	ldr	r0, [fp, #16]
   2c2bc:	add	r3, sp, #64	; 0x40
   2c2c0:	mov	r4, #0
   2c2c4:	ldr	r0, [r0, r1, lsl #2]
   2c2c8:	str	r6, [r3, r1, lsl #2]
   2c2cc:	sub	r3, r0, #1
   2c2d0:	sub	r0, fp, #72	; 0x48
   2c2d4:	str	r3, [r0, r1, lsl #2]
   2c2d8:	ldr	r9, [r9, r1, lsl #2]
   2c2dc:	mov	r0, r9
   2c2e0:	mul	r6, r0, r6
   2c2e4:	ldr	r0, [r7, -r4, lsl #2]
   2c2e8:	add	r4, r4, #1
   2c2ec:	cmp	r1, r4
   2c2f0:	mul	r3, r3, r0
   2c2f4:	bne	2c2e0 <GetDataSlab+0x991c>
   2c2f8:	add	r0, sp, #64	; 0x40
   2c2fc:	add	r7, r7, #4
   2c300:	str	r6, [r0, r1, lsl #2]
   2c304:	sub	r0, fp, #72	; 0x48
   2c308:	str	r3, [r0, r1, lsl #2]
   2c30c:	ldr	r3, [sp, #52]	; 0x34
   2c310:	ldr	r0, [ip, r1, lsl #2]
   2c314:	mla	r2, r0, r5, r2
   2c318:	ldr	r0, [fp, #20]
   2c31c:	mov	r5, r6
   2c320:	mov	r6, r9
   2c324:	ldr	r9, [fp, #8]
   2c328:	ldr	r0, [r0, r1, lsl #2]
   2c32c:	add	r1, r1, #1
   2c330:	mul	r3, r0, r3
   2c334:	ldr	r0, [fp, #24]
   2c338:	str	r3, [sp, #52]	; 0x34
   2c33c:	cmp	r1, r0
   2c340:	bne	2c2b8 <GetDataSlab+0x98f4>
   2c344:	ldr	r0, [sp, #48]	; 0x30
   2c348:	cmp	lr, #1
   2c34c:	add	r7, r0, r2, lsl #3
   2c350:	bne	382c8 <GetDataSlab+0x15904>
   2c354:	ldr	r0, [sp, #52]	; 0x34
   2c358:	ldr	r3, [sp, #44]	; 0x2c
   2c35c:	cmp	r0, #1
   2c360:	blt	248fc <GetDataSlab+0x1f38>
   2c364:	add	r0, sp, #104	; 0x68
   2c368:	ldr	r6, [sp, #56]	; 0x38
   2c36c:	orr	r1, r0, #4
   2c370:	ldr	r0, [fp, #20]
   2c374:	add	r9, r0, #4
   2c378:	add	r0, sp, #64	; 0x40
   2c37c:	orr	lr, r0, #4
   2c380:	ldr	r0, [fp, #24]
   2c384:	sub	r0, r0, #1
   2c388:	str	r0, [sp, #32]
   2c38c:	sub	r0, fp, #72	; 0x48
   2c390:	orr	r0, r0, #4
   2c394:	str	r0, [sp, #28]
   2c398:	lsl	r0, r3, #1
   2c39c:	str	r0, [sp, #48]	; 0x30
   2c3a0:	ldr	r0, [ip], #4
   2c3a4:	str	r0, [sp, #36]	; 0x24
   2c3a8:	mov	r0, #0
   2c3ac:	str	r0, [sp, #60]	; 0x3c
   2c3b0:	cmp	r3, #1
   2c3b4:	blt	2c3e4 <GetDataSlab+0x9a20>
   2c3b8:	ldr	r0, [sp, #36]	; 0x24
   2c3bc:	ldr	r4, [sp, #44]	; 0x2c
   2c3c0:	mov	r3, r6
   2c3c4:	add	r0, r7, r0, lsl #3
   2c3c8:	vldr	d16, [r0]
   2c3cc:	add	r0, r0, #8
   2c3d0:	subs	r4, r4, #1
   2c3d4:	vcvt.u32.f64	s0, d16
   2c3d8:	vmov	r5, s0
   2c3dc:	strh	r5, [r3], #2
   2c3e0:	bne	2c3c8 <GetDataSlab+0x9a04>
   2c3e4:	ldr	r0, [sp, #40]	; 0x28
   2c3e8:	str	r6, [sp, #56]	; 0x38
   2c3ec:	add	r6, sp, #64	; 0x40
   2c3f0:	add	r7, r7, r0, lsl #3
   2c3f4:	add	r2, r2, r0
   2c3f8:	ldr	r0, [fp, #24]
   2c3fc:	cmp	r0, #2
   2c400:	blt	2c4a0 <GetDataSlab+0x9adc>
   2c404:	ldr	sl, [sp, #32]
   2c408:	mov	r0, #0
   2c40c:	ldr	r3, [r1, r0]
   2c410:	add	r3, r3, #1
   2c414:	str	r3, [r1, r0]
   2c418:	ldr	r4, [r9, r0]
   2c41c:	sdiv	r5, r3, r4
   2c420:	mls	r3, r5, r4, r3
   2c424:	cmp	r3, #0
   2c428:	bne	2c490 <GetDataSlab+0x9acc>
   2c42c:	mov	r3, #0
   2c430:	str	r3, [r1, r0]
   2c434:	ldr	r3, [lr, r0]
   2c438:	sdiv	r4, r2, r3
   2c43c:	mls	r4, r4, r3, r2
   2c440:	cmp	r4, #0
   2c444:	beq	2c464 <GetDataSlab+0x9aa0>
   2c448:	ldr	r5, [r6, r0]
   2c44c:	ldr	r8, [ip, r0]
   2c450:	sub	r3, r3, r4
   2c454:	add	r6, sp, #64	; 0x40
   2c458:	mla	r3, r8, r5, r3
   2c45c:	add	r2, r3, r2
   2c460:	b	2c47c <GetDataSlab+0x9ab8>
   2c464:	ldr	r3, [ip, r0]
   2c468:	cmp	r3, #0
   2c46c:	beq	2c480 <GetDataSlab+0x9abc>
   2c470:	ldr	r4, [r6, r0]
   2c474:	mla	r2, r4, r3, r2
   2c478:	mul	r3, r4, r3
   2c47c:	add	r7, r7, r3, lsl #3
   2c480:	subs	sl, sl, #1
   2c484:	add	r0, r0, #4
   2c488:	bne	2c40c <GetDataSlab+0x9a48>
   2c48c:	b	2c4a0 <GetDataSlab+0x9adc>
   2c490:	ldr	r3, [sp, #28]
   2c494:	ldr	r0, [r3, r0]
   2c498:	add	r7, r7, r0, lsl #3
   2c49c:	add	r2, r0, r2
   2c4a0:	ldr	r0, [sp, #48]	; 0x30
   2c4a4:	ldr	r6, [sp, #56]	; 0x38
   2c4a8:	ldr	r3, [sp, #44]	; 0x2c
   2c4ac:	ldr	r4, [sp, #60]	; 0x3c
   2c4b0:	add	r6, r6, r0
   2c4b4:	ldr	r0, [sp, #52]	; 0x34
   2c4b8:	add	r4, r4, r3
   2c4bc:	str	r4, [sp, #60]	; 0x3c
   2c4c0:	cmp	r4, r0
   2c4c4:	mov	r0, #0
   2c4c8:	blt	2c3b0 <GetDataSlab+0x99ec>
   2c4cc:	b	24900 <GetDataSlab+0x1f3c>
   2c4d0:	ldr	r0, [fp, #16]
   2c4d4:	add	ip, sp, #64	; 0x40
   2c4d8:	mov	r1, #0
   2c4dc:	ldr	r8, [r0]
   2c4e0:	sub	r0, r8, #1
   2c4e4:	str	r0, [fp, #-72]	; 0xffffffb8
   2c4e8:	ldr	r0, [r4]
   2c4ec:	str	r0, [sp, #28]
   2c4f0:	str	r0, [sp, #64]	; 0x40
   2c4f4:	ldr	r0, [fp, #20]
   2c4f8:	ldr	r2, [r0]
   2c4fc:	ldr	r0, [fp, #24]
   2c500:	cmp	r0, #2
   2c504:	str	r2, [sp, #40]	; 0x28
   2c508:	str	r2, [sp, #44]	; 0x2c
   2c50c:	blt	2c5b8 <GetDataSlab+0x9bf4>
   2c510:	ldr	r3, [sp, #28]
   2c514:	ldr	r6, [sp, #40]	; 0x28
   2c518:	mov	r9, r4
   2c51c:	mov	r0, #1
   2c520:	mov	r1, #0
   2c524:	mov	r2, r4
   2c528:	mov	r7, r3
   2c52c:	str	r6, [sp, #44]	; 0x2c
   2c530:	ldr	r6, [fp, #16]
   2c534:	mov	r4, #0
   2c538:	ldr	r6, [r6, r0, lsl #2]
   2c53c:	str	r3, [ip, r0, lsl #2]
   2c540:	sub	r5, r6, #1
   2c544:	sub	r6, fp, #72	; 0x48
   2c548:	str	r5, [r6, r0, lsl #2]
   2c54c:	ldr	lr, [r9, r0, lsl #2]
   2c550:	mov	r6, lr
   2c554:	mul	r3, r6, r3
   2c558:	ldr	r6, [r2, -r4, lsl #2]
   2c55c:	add	r4, r4, #1
   2c560:	cmp	r0, r4
   2c564:	mul	r5, r5, r6
   2c568:	bne	2c554 <GetDataSlab+0x9b90>
   2c56c:	sub	r4, fp, #72	; 0x48
   2c570:	add	ip, sp, #64	; 0x40
   2c574:	add	r2, r2, #4
   2c578:	str	r5, [r4, r0, lsl #2]
   2c57c:	ldr	r4, [fp, #12]
   2c580:	str	r3, [ip, r0, lsl #2]
   2c584:	ldr	r5, [sp, #44]	; 0x2c
   2c588:	ldr	r4, [r4, r0, lsl #2]
   2c58c:	mla	r1, r4, r7, r1
   2c590:	ldr	r4, [fp, #20]
   2c594:	ldr	r7, [fp, #24]
   2c598:	ldr	r4, [r4, r0, lsl #2]
   2c59c:	add	r0, r0, #1
   2c5a0:	cmp	r0, r7
   2c5a4:	mov	r7, r3
   2c5a8:	mov	r3, lr
   2c5ac:	mul	r5, r4, r5
   2c5b0:	str	r5, [sp, #44]	; 0x2c
   2c5b4:	bne	2c530 <GetDataSlab+0x9b6c>
   2c5b8:	ldr	r0, [sp, #48]	; 0x30
   2c5bc:	cmp	r8, #1
   2c5c0:	add	r3, r0, r1, lsl #3
   2c5c4:	bne	3846c <GetDataSlab+0x15aa8>
   2c5c8:	ldr	r0, [sp, #44]	; 0x2c
   2c5cc:	ldr	r6, [sp, #40]	; 0x28
   2c5d0:	cmp	r0, #1
   2c5d4:	blt	38608 <GetDataSlab+0x15c44>
   2c5d8:	ldr	r2, [fp, #20]
   2c5dc:	ldr	r9, [fp, #12]
   2c5e0:	ldr	r7, [sp, #56]	; 0x38
   2c5e4:	add	r0, sp, #104	; 0x68
   2c5e8:	mov	r5, #0
   2c5ec:	orr	r0, r0, #4
   2c5f0:	add	ip, r2, #4
   2c5f4:	add	r2, sp, #64	; 0x40
   2c5f8:	orr	r8, r2, #4
   2c5fc:	ldr	r2, [fp, #24]
   2c600:	sub	r2, r2, #1
   2c604:	str	r2, [sp, #16]
   2c608:	sub	r2, fp, #72	; 0x48
   2c60c:	orr	r2, r2, #4
   2c610:	str	r2, [sp, #12]
   2c614:	lsl	r2, r6, #1
   2c618:	str	r2, [sp, #24]
   2c61c:	ldr	r2, [r9], #4
   2c620:	str	r2, [sp, #20]
   2c624:	cmp	r6, #1
   2c628:	str	r5, [sp, #32]
   2c62c:	blt	2c650 <GetDataSlab+0x9c8c>
   2c630:	ldr	r2, [sp, #20]
   2c634:	ldr	r5, [sp, #40]	; 0x28
   2c638:	mov	r4, r7
   2c63c:	add	r2, r3, r2, lsl #3
   2c640:	ldrh	r6, [r2], #8
   2c644:	subs	r5, r5, #1
   2c648:	strh	r6, [r4], #2
   2c64c:	bne	2c640 <GetDataSlab+0x9c7c>
   2c650:	ldr	r2, [sp, #28]
   2c654:	str	r7, [sp, #36]	; 0x24
   2c658:	add	r3, r3, r2, lsl #3
   2c65c:	add	r1, r1, r2
   2c660:	ldr	r2, [fp, #24]
   2c664:	cmp	r2, #2
   2c668:	blt	2c70c <GetDataSlab+0x9d48>
   2c66c:	ldr	r2, [sp, #16]
   2c670:	mov	sl, #0
   2c674:	ldr	r4, [r0, sl]
   2c678:	add	r4, r4, #1
   2c67c:	str	r4, [r0, sl]
   2c680:	ldr	r5, [ip, sl]
   2c684:	sdiv	r6, r4, r5
   2c688:	mls	r4, r6, r5, r4
   2c68c:	cmp	r4, #0
   2c690:	bne	2c6fc <GetDataSlab+0x9d38>
   2c694:	ldr	r4, [r8, sl]
   2c698:	mov	r6, #0
   2c69c:	str	r6, [r0, sl]
   2c6a0:	sdiv	r5, r1, r4
   2c6a4:	mls	r5, r5, r4, r1
   2c6a8:	cmp	r5, #0
   2c6ac:	beq	2c6cc <GetDataSlab+0x9d08>
   2c6b0:	add	r6, sp, #64	; 0x40
   2c6b4:	ldr	lr, [r9, sl]
   2c6b8:	sub	r4, r4, r5
   2c6bc:	ldr	r6, [r6, sl]
   2c6c0:	mla	r6, lr, r6, r4
   2c6c4:	add	r1, r6, r1
   2c6c8:	b	2c6e8 <GetDataSlab+0x9d24>
   2c6cc:	ldr	r4, [r9, sl]
   2c6d0:	cmp	r4, #0
   2c6d4:	beq	2c6ec <GetDataSlab+0x9d28>
   2c6d8:	add	r6, sp, #64	; 0x40
   2c6dc:	ldr	r6, [r6, sl]
   2c6e0:	mla	r1, r6, r4, r1
   2c6e4:	mul	r6, r6, r4
   2c6e8:	add	r3, r3, r6, lsl #3
   2c6ec:	subs	r2, r2, #1
   2c6f0:	add	sl, sl, #4
   2c6f4:	bne	2c674 <GetDataSlab+0x9cb0>
   2c6f8:	b	2c70c <GetDataSlab+0x9d48>
   2c6fc:	ldr	r2, [sp, #12]
   2c700:	ldr	r2, [r2, sl]
   2c704:	add	r3, r3, r2, lsl #3
   2c708:	add	r1, r2, r1
   2c70c:	ldr	r2, [sp, #24]
   2c710:	ldr	r7, [sp, #36]	; 0x24
   2c714:	ldr	r6, [sp, #40]	; 0x28
   2c718:	ldr	r5, [sp, #32]
   2c71c:	add	r7, r7, r2
   2c720:	ldr	r2, [sp, #44]	; 0x2c
   2c724:	add	r5, r5, r6
   2c728:	cmp	r5, r2
   2c72c:	blt	2c624 <GetDataSlab+0x9c60>
   2c730:	b	38608 <GetDataSlab+0x15c44>
   2c734:	ldr	r3, [r3]
   2c738:	mov	r5, #0
   2c73c:	add	r7, sp, #64	; 0x40
   2c740:	sub	r0, r3, #1
   2c744:	str	r0, [fp, #-72]	; 0xffffffb8
   2c748:	ldr	r0, [r4]
   2c74c:	str	r0, [sp, #40]	; 0x28
   2c750:	str	r0, [sp, #64]	; 0x40
   2c754:	ldr	r0, [fp, #20]
   2c758:	ldr	lr, [r0]
   2c75c:	ldr	r0, [fp, #24]
   2c760:	cmp	r0, #2
   2c764:	mov	r0, lr
   2c768:	str	lr, [sp, #44]	; 0x2c
   2c76c:	blt	2c820 <GetDataSlab+0x9e5c>
   2c770:	ldr	r6, [sp, #40]	; 0x28
   2c774:	mov	r9, r4
   2c778:	mov	r0, #1
   2c77c:	mov	r5, #0
   2c780:	mov	r1, r4
   2c784:	mov	r2, lr
   2c788:	str	lr, [sp, #44]	; 0x2c
   2c78c:	mov	r8, r6
   2c790:	mov	r2, r5
   2c794:	ldr	r5, [fp, #16]
   2c798:	mov	r4, #0
   2c79c:	ldr	r5, [r5, r0, lsl #2]
   2c7a0:	str	r6, [r7, r0, lsl #2]
   2c7a4:	sub	r7, fp, #72	; 0x48
   2c7a8:	sub	r5, r5, #1
   2c7ac:	str	r5, [r7, r0, lsl #2]
   2c7b0:	ldr	ip, [r9, r0, lsl #2]
   2c7b4:	mov	r7, ip
   2c7b8:	mul	r6, r7, r6
   2c7bc:	ldr	r7, [r1, -r4, lsl #2]
   2c7c0:	add	r4, r4, #1
   2c7c4:	cmp	r0, r4
   2c7c8:	mul	r5, r5, r7
   2c7cc:	bne	2c7b8 <GetDataSlab+0x9df4>
   2c7d0:	sub	r4, fp, #72	; 0x48
   2c7d4:	add	r7, sp, #64	; 0x40
   2c7d8:	add	r1, r1, #4
   2c7dc:	str	r5, [r4, r0, lsl #2]
   2c7e0:	ldr	r4, [fp, #12]
   2c7e4:	str	r6, [r7, r0, lsl #2]
   2c7e8:	mov	r5, r2
   2c7ec:	ldr	r4, [r4, r0, lsl #2]
   2c7f0:	mla	r5, r4, r8, r2
   2c7f4:	ldr	r4, [fp, #20]
   2c7f8:	ldr	r2, [sp, #44]	; 0x2c
   2c7fc:	mov	r8, r6
   2c800:	mov	r6, ip
   2c804:	ldr	r4, [r4, r0, lsl #2]
   2c808:	add	r0, r0, #1
   2c80c:	mul	r2, r4, r2
   2c810:	ldr	r4, [fp, #24]
   2c814:	str	r2, [sp, #44]	; 0x2c
   2c818:	cmp	r0, r4
   2c81c:	bne	2c790 <GetDataSlab+0x9dcc>
   2c820:	ldr	r0, [sp, #48]	; 0x30
   2c824:	cmp	r3, #1
   2c828:	add	r6, r0, r5
   2c82c:	bne	3887c <GetDataSlab+0x15eb8>
   2c830:	ldr	r0, [sp, #44]	; 0x2c
   2c834:	ldr	r9, [fp, #12]
   2c838:	cmp	r0, #1
   2c83c:	add	r0, sp, #64	; 0x40
   2c840:	blt	248fc <GetDataSlab+0x1f38>
   2c844:	orr	r0, r0, #4
   2c848:	ldr	r3, [fp, #20]
   2c84c:	add	r1, sp, #104	; 0x68
   2c850:	mov	r8, #0
   2c854:	str	r0, [sp, #48]	; 0x30
   2c858:	ldr	r0, [fp, #24]
   2c85c:	orr	r1, r1, #4
   2c860:	add	r2, r3, #4
   2c864:	sub	r0, r0, #1
   2c868:	str	r2, [sp, #52]	; 0x34
   2c86c:	str	r0, [sp, #32]
   2c870:	sub	r0, fp, #72	; 0x48
   2c874:	orr	r0, r0, #4
   2c878:	str	r0, [sp, #28]
   2c87c:	ldr	r0, [r9], #4
   2c880:	str	r0, [sp, #36]	; 0x24
   2c884:	ldr	r2, [sp, #36]	; 0x24
   2c888:	ldr	r3, [fp, #12]
   2c88c:	ldr	r7, [sp, #40]	; 0x28
   2c890:	cmp	lr, #1
   2c894:	add	r0, r2, r5
   2c898:	add	r5, r6, r2
   2c89c:	ldr	r6, [fp, #20]
   2c8a0:	blt	2c8d4 <GetDataSlab+0x9f10>
   2c8a4:	ldr	r2, [sp, #56]	; 0x38
   2c8a8:	mov	r4, #0
   2c8ac:	add	r7, r2, r8, lsl #2
   2c8b0:	ldrb	r2, [r5, r4]
   2c8b4:	str	r2, [r7, r4, lsl #2]
   2c8b8:	add	r4, r4, #1
   2c8bc:	ldr	lr, [r6]
   2c8c0:	cmp	r4, lr
   2c8c4:	blt	2c8b0 <GetDataSlab+0x9eec>
   2c8c8:	ldr	r2, [r3]
   2c8cc:	ldr	r3, [fp, #8]
   2c8d0:	ldr	r7, [r3]
   2c8d4:	str	r7, [sp, #40]	; 0x28
   2c8d8:	sub	r7, r7, r2
   2c8dc:	str	r2, [sp, #36]	; 0x24
   2c8e0:	add	r6, r5, r7
   2c8e4:	add	r5, r0, r7
   2c8e8:	ldr	r0, [fp, #24]
   2c8ec:	cmp	r0, #2
   2c8f0:	blt	2c9a4 <GetDataSlab+0x9fe0>
   2c8f4:	ldr	sl, [sp, #32]
   2c8f8:	mov	r0, #0
   2c8fc:	ldr	r4, [r1, r0]
   2c900:	ldr	r2, [sp, #52]	; 0x34
   2c904:	add	r4, r4, #1
   2c908:	str	r4, [r1, r0]
   2c90c:	ldr	r7, [r2, r0]
   2c910:	sdiv	ip, r4, r7
   2c914:	mls	r7, ip, r7, r4
   2c918:	cmp	r7, #0
   2c91c:	bne	2c994 <GetDataSlab+0x9fd0>
   2c920:	mov	r2, #0
   2c924:	str	r2, [r1, r0]
   2c928:	ldr	r2, [sp, #48]	; 0x30
   2c92c:	ldr	r4, [r2, r0]
   2c930:	sdiv	r7, r5, r4
   2c934:	mls	r7, r7, r4, r5
   2c938:	cmp	r7, #0
   2c93c:	beq	2c968 <GetDataSlab+0x9fa4>
   2c940:	add	r3, sp, #64	; 0x40
   2c944:	mov	r2, r6
   2c948:	ldr	r6, [r9, r0]
   2c94c:	sub	r7, r4, r7
   2c950:	ldr	r3, [r3, r0]
   2c954:	mla	r3, r6, r3, r7
   2c958:	mov	r6, r2
   2c95c:	add	r5, r3, r5
   2c960:	add	r6, r2, r3
   2c964:	b	2c984 <GetDataSlab+0x9fc0>
   2c968:	ldr	r4, [r9, r0]
   2c96c:	cmp	r4, #0
   2c970:	beq	2c984 <GetDataSlab+0x9fc0>
   2c974:	add	r3, sp, #64	; 0x40
   2c978:	ldr	r3, [r3, r0]
   2c97c:	mla	r5, r3, r4, r5
   2c980:	mla	r6, r3, r4, r6
   2c984:	subs	sl, sl, #1
   2c988:	add	r0, r0, #4
   2c98c:	bne	2c8fc <GetDataSlab+0x9f38>
   2c990:	b	2c9a4 <GetDataSlab+0x9fe0>
   2c994:	ldr	r2, [sp, #28]
   2c998:	ldr	r0, [r2, r0]
   2c99c:	add	r6, r6, r0
   2c9a0:	add	r5, r0, r5
   2c9a4:	ldr	r2, [sp, #44]	; 0x2c
   2c9a8:	add	r8, lr, r8
   2c9ac:	mov	r0, #0
   2c9b0:	cmp	r8, r2
   2c9b4:	blt	2c884 <GetDataSlab+0x9ec0>
   2c9b8:	b	24900 <GetDataSlab+0x1f3c>
   2c9bc:	ldr	r3, [r3]
   2c9c0:	sub	r9, fp, #72	; 0x48
   2c9c4:	mov	lr, #0
   2c9c8:	add	r7, sp, #64	; 0x40
   2c9cc:	sub	r0, r3, #1
   2c9d0:	str	r0, [fp, #-72]	; 0xffffffb8
   2c9d4:	ldr	r0, [r4]
   2c9d8:	str	r0, [sp, #36]	; 0x24
   2c9dc:	str	r0, [sp, #64]	; 0x40
   2c9e0:	ldr	r0, [fp, #20]
   2c9e4:	ldr	sl, [r0]
   2c9e8:	ldr	r0, [fp, #24]
   2c9ec:	cmp	r0, #2
   2c9f0:	mov	r0, sl
   2c9f4:	str	sl, [sp, #40]	; 0x28
   2c9f8:	blt	2caa0 <GetDataSlab+0xa0dc>
   2c9fc:	ldr	r6, [sp, #36]	; 0x24
   2ca00:	ldr	r1, [fp, #8]
   2ca04:	mov	r0, #1
   2ca08:	mov	lr, #0
   2ca0c:	mov	r2, sl
   2ca10:	str	sl, [sp, #40]	; 0x28
   2ca14:	mov	r8, r6
   2ca18:	ldr	r5, [fp, #16]
   2ca1c:	ldr	r2, [fp, #8]
   2ca20:	mov	r4, #0
   2ca24:	ldr	r5, [r5, r0, lsl #2]
   2ca28:	str	r6, [r7, r0, lsl #2]
   2ca2c:	sub	r5, r5, #1
   2ca30:	str	r5, [r9, r0, lsl #2]
   2ca34:	ldr	ip, [r2, r0, lsl #2]
   2ca38:	mov	r7, ip
   2ca3c:	mul	r6, r7, r6
   2ca40:	ldr	r7, [r1, -r4, lsl #2]
   2ca44:	add	r4, r4, #1
   2ca48:	cmp	r0, r4
   2ca4c:	mul	r5, r5, r7
   2ca50:	bne	2ca3c <GetDataSlab+0xa078>
   2ca54:	ldr	r4, [fp, #12]
   2ca58:	add	r7, sp, #64	; 0x40
   2ca5c:	sub	r9, fp, #72	; 0x48
   2ca60:	ldr	r2, [sp, #40]	; 0x28
   2ca64:	add	r1, r1, #4
   2ca68:	str	r6, [r7, r0, lsl #2]
   2ca6c:	str	r5, [r9, r0, lsl #2]
   2ca70:	ldr	r4, [r4, r0, lsl #2]
   2ca74:	mla	lr, r4, r8, lr
   2ca78:	ldr	r4, [fp, #20]
   2ca7c:	mov	r8, r6
   2ca80:	mov	r6, ip
   2ca84:	ldr	r4, [r4, r0, lsl #2]
   2ca88:	add	r0, r0, #1
   2ca8c:	mul	r2, r4, r2
   2ca90:	ldr	r4, [fp, #24]
   2ca94:	str	r2, [sp, #40]	; 0x28
   2ca98:	cmp	r0, r4
   2ca9c:	bne	2ca18 <GetDataSlab+0xa054>
   2caa0:	ldr	r0, [sp, #48]	; 0x30
   2caa4:	cmp	r3, #1
   2caa8:	add	r5, r0, lr, lsl #1
   2caac:	bne	38a3c <GetDataSlab+0x16078>
   2cab0:	ldr	r0, [sp, #40]	; 0x28
   2cab4:	cmp	r0, #1
   2cab8:	add	r0, sp, #64	; 0x40
   2cabc:	blt	248fc <GetDataSlab+0x1f38>
   2cac0:	orr	r0, r0, #4
   2cac4:	ldr	r9, [fp, #12]
   2cac8:	ldr	r3, [fp, #20]
   2cacc:	add	r1, sp, #104	; 0x68
   2cad0:	mov	r6, #0
   2cad4:	str	r0, [sp, #48]	; 0x30
   2cad8:	ldr	r0, [fp, #24]
   2cadc:	orr	r1, r1, #4
   2cae0:	add	r2, r3, #4
   2cae4:	sub	r0, r0, #1
   2cae8:	str	r2, [sp, #52]	; 0x34
   2caec:	str	r0, [sp, #28]
   2caf0:	sub	r0, fp, #72	; 0x48
   2caf4:	orr	r0, r0, #4
   2caf8:	str	r0, [sp, #24]
   2cafc:	ldr	r0, [r9], #4
   2cb00:	str	r0, [sp, #44]	; 0x2c
   2cb04:	ldr	r7, [sp, #44]	; 0x2c
   2cb08:	ldr	r2, [sp, #36]	; 0x24
   2cb0c:	cmp	sl, #1
   2cb10:	add	r0, r5, r7, lsl #1
   2cb14:	add	lr, r7, lr
   2cb18:	blt	2cb58 <GetDataSlab+0xa194>
   2cb1c:	ldr	r2, [sp, #56]	; 0x38
   2cb20:	ldr	r3, [fp, #20]
   2cb24:	mov	r4, #0
   2cb28:	mov	r5, r0
   2cb2c:	add	r7, r2, r6, lsl #2
   2cb30:	ldrsh	r2, [r5], #2
   2cb34:	str	r2, [r7, r4, lsl #2]
   2cb38:	add	r4, r4, #1
   2cb3c:	ldr	sl, [r3]
   2cb40:	cmp	r4, sl
   2cb44:	blt	2cb30 <GetDataSlab+0xa16c>
   2cb48:	ldr	r3, [fp, #12]
   2cb4c:	ldr	r7, [r3]
   2cb50:	ldr	r3, [fp, #8]
   2cb54:	ldr	r2, [r3]
   2cb58:	sub	r4, r2, r7
   2cb5c:	str	r6, [sp, #32]
   2cb60:	str	r7, [sp, #44]	; 0x2c
   2cb64:	add	r5, r0, r4, lsl #1
   2cb68:	ldr	r0, [fp, #24]
   2cb6c:	add	lr, lr, r4
   2cb70:	cmp	r0, #2
   2cb74:	blt	2cc20 <GetDataSlab+0xa25c>
   2cb78:	ldr	r8, [sp, #28]
   2cb7c:	mov	r0, #0
   2cb80:	ldr	r4, [r1, r0]
   2cb84:	ldr	r3, [sp, #52]	; 0x34
   2cb88:	add	r4, r4, #1
   2cb8c:	str	r4, [r1, r0]
   2cb90:	ldr	r7, [r3, r0]
   2cb94:	sdiv	ip, r4, r7
   2cb98:	mls	r7, ip, r7, r4
   2cb9c:	cmp	r7, #0
   2cba0:	bne	2cc10 <GetDataSlab+0xa24c>
   2cba4:	mov	r3, #0
   2cba8:	str	r3, [r1, r0]
   2cbac:	ldr	r3, [sp, #48]	; 0x30
   2cbb0:	ldr	r4, [r3, r0]
   2cbb4:	sdiv	r7, lr, r4
   2cbb8:	mls	r7, r7, r4, lr
   2cbbc:	cmp	r7, #0
   2cbc0:	beq	2cbe0 <GetDataSlab+0xa21c>
   2cbc4:	add	r3, sp, #64	; 0x40
   2cbc8:	ldr	r6, [r9, r0]
   2cbcc:	sub	r7, r4, r7
   2cbd0:	ldr	r3, [r3, r0]
   2cbd4:	mla	r3, r6, r3, r7
   2cbd8:	add	lr, r3, lr
   2cbdc:	b	2cbfc <GetDataSlab+0xa238>
   2cbe0:	ldr	r4, [r9, r0]
   2cbe4:	cmp	r4, #0
   2cbe8:	beq	2cc00 <GetDataSlab+0xa23c>
   2cbec:	add	r3, sp, #64	; 0x40
   2cbf0:	ldr	r3, [r3, r0]
   2cbf4:	mla	lr, r3, r4, lr
   2cbf8:	mul	r3, r3, r4
   2cbfc:	add	r5, r5, r3, lsl #1
   2cc00:	subs	r8, r8, #1
   2cc04:	add	r0, r0, #4
   2cc08:	bne	2cb80 <GetDataSlab+0xa1bc>
   2cc0c:	b	2cc20 <GetDataSlab+0xa25c>
   2cc10:	ldr	r3, [sp, #24]
   2cc14:	ldr	r0, [r3, r0]
   2cc18:	add	r5, r5, r0, lsl #1
   2cc1c:	add	lr, r0, lr
   2cc20:	ldr	r6, [sp, #32]
   2cc24:	str	r2, [sp, #36]	; 0x24
   2cc28:	ldr	r2, [sp, #40]	; 0x28
   2cc2c:	mov	r0, #0
   2cc30:	add	r6, sl, r6
   2cc34:	cmp	r6, r2
   2cc38:	blt	2cb04 <GetDataSlab+0xa140>
   2cc3c:	b	24900 <GetDataSlab+0x1f3c>
   2cc40:	ldr	r3, [r3]
   2cc44:	sub	r9, fp, #72	; 0x48
   2cc48:	mov	lr, #0
   2cc4c:	add	r7, sp, #64	; 0x40
   2cc50:	sub	r0, r3, #1
   2cc54:	str	r0, [fp, #-72]	; 0xffffffb8
   2cc58:	ldr	r0, [r4]
   2cc5c:	str	r0, [sp, #36]	; 0x24
   2cc60:	str	r0, [sp, #64]	; 0x40
   2cc64:	ldr	r0, [fp, #20]
   2cc68:	ldr	sl, [r0]
   2cc6c:	ldr	r0, [fp, #24]
   2cc70:	cmp	r0, #2
   2cc74:	mov	r0, sl
   2cc78:	str	sl, [sp, #40]	; 0x28
   2cc7c:	blt	2cd24 <GetDataSlab+0xa360>
   2cc80:	ldr	r6, [sp, #36]	; 0x24
   2cc84:	ldr	r1, [fp, #8]
   2cc88:	mov	r0, #1
   2cc8c:	mov	lr, #0
   2cc90:	mov	r2, sl
   2cc94:	str	sl, [sp, #40]	; 0x28
   2cc98:	mov	r8, r6
   2cc9c:	ldr	r5, [fp, #16]
   2cca0:	ldr	r2, [fp, #8]
   2cca4:	mov	r4, #0
   2cca8:	ldr	r5, [r5, r0, lsl #2]
   2ccac:	str	r6, [r7, r0, lsl #2]
   2ccb0:	sub	r5, r5, #1
   2ccb4:	str	r5, [r9, r0, lsl #2]
   2ccb8:	ldr	ip, [r2, r0, lsl #2]
   2ccbc:	mov	r7, ip
   2ccc0:	mul	r6, r7, r6
   2ccc4:	ldr	r7, [r1, -r4, lsl #2]
   2ccc8:	add	r4, r4, #1
   2cccc:	cmp	r0, r4
   2ccd0:	mul	r5, r5, r7
   2ccd4:	bne	2ccc0 <GetDataSlab+0xa2fc>
   2ccd8:	ldr	r4, [fp, #12]
   2ccdc:	add	r7, sp, #64	; 0x40
   2cce0:	sub	r9, fp, #72	; 0x48
   2cce4:	ldr	r2, [sp, #40]	; 0x28
   2cce8:	add	r1, r1, #4
   2ccec:	str	r6, [r7, r0, lsl #2]
   2ccf0:	str	r5, [r9, r0, lsl #2]
   2ccf4:	ldr	r4, [r4, r0, lsl #2]
   2ccf8:	mla	lr, r4, r8, lr
   2ccfc:	ldr	r4, [fp, #20]
   2cd00:	mov	r8, r6
   2cd04:	mov	r6, ip
   2cd08:	ldr	r4, [r4, r0, lsl #2]
   2cd0c:	add	r0, r0, #1
   2cd10:	mul	r2, r4, r2
   2cd14:	ldr	r4, [fp, #24]
   2cd18:	str	r2, [sp, #40]	; 0x28
   2cd1c:	cmp	r0, r4
   2cd20:	bne	2cc9c <GetDataSlab+0xa2d8>
   2cd24:	ldr	r0, [sp, #48]	; 0x30
   2cd28:	cmp	r3, #1
   2cd2c:	add	r5, r0, lr, lsl #1
   2cd30:	bne	38bfc <GetDataSlab+0x16238>
   2cd34:	ldr	r0, [sp, #40]	; 0x28
   2cd38:	cmp	r0, #1
   2cd3c:	add	r0, sp, #64	; 0x40
   2cd40:	blt	248fc <GetDataSlab+0x1f38>
   2cd44:	orr	r0, r0, #4
   2cd48:	ldr	r9, [fp, #12]
   2cd4c:	ldr	r3, [fp, #20]
   2cd50:	add	r1, sp, #104	; 0x68
   2cd54:	mov	r6, #0
   2cd58:	str	r0, [sp, #48]	; 0x30
   2cd5c:	ldr	r0, [fp, #24]
   2cd60:	orr	r1, r1, #4
   2cd64:	add	r2, r3, #4
   2cd68:	sub	r0, r0, #1
   2cd6c:	str	r2, [sp, #52]	; 0x34
   2cd70:	str	r0, [sp, #28]
   2cd74:	sub	r0, fp, #72	; 0x48
   2cd78:	orr	r0, r0, #4
   2cd7c:	str	r0, [sp, #24]
   2cd80:	ldr	r0, [r9], #4
   2cd84:	str	r0, [sp, #44]	; 0x2c
   2cd88:	ldr	r7, [sp, #44]	; 0x2c
   2cd8c:	ldr	r2, [sp, #36]	; 0x24
   2cd90:	cmp	sl, #1
   2cd94:	add	r0, r5, r7, lsl #1
   2cd98:	add	lr, r7, lr
   2cd9c:	blt	2cddc <GetDataSlab+0xa418>
   2cda0:	ldr	r2, [sp, #56]	; 0x38
   2cda4:	ldr	r3, [fp, #20]
   2cda8:	mov	r4, #0
   2cdac:	mov	r5, r0
   2cdb0:	add	r7, r2, r6, lsl #2
   2cdb4:	ldrh	r2, [r5], #2
   2cdb8:	str	r2, [r7, r4, lsl #2]
   2cdbc:	add	r4, r4, #1
   2cdc0:	ldr	sl, [r3]
   2cdc4:	cmp	r4, sl
   2cdc8:	blt	2cdb4 <GetDataSlab+0xa3f0>
   2cdcc:	ldr	r3, [fp, #12]
   2cdd0:	ldr	r7, [r3]
   2cdd4:	ldr	r3, [fp, #8]
   2cdd8:	ldr	r2, [r3]
   2cddc:	sub	r4, r2, r7
   2cde0:	str	r6, [sp, #32]
   2cde4:	str	r7, [sp, #44]	; 0x2c
   2cde8:	add	r5, r0, r4, lsl #1
   2cdec:	ldr	r0, [fp, #24]
   2cdf0:	add	lr, lr, r4
   2cdf4:	cmp	r0, #2
   2cdf8:	blt	2cea4 <GetDataSlab+0xa4e0>
   2cdfc:	ldr	r8, [sp, #28]
   2ce00:	mov	r0, #0
   2ce04:	ldr	r4, [r1, r0]
   2ce08:	ldr	r3, [sp, #52]	; 0x34
   2ce0c:	add	r4, r4, #1
   2ce10:	str	r4, [r1, r0]
   2ce14:	ldr	r7, [r3, r0]
   2ce18:	sdiv	ip, r4, r7
   2ce1c:	mls	r7, ip, r7, r4
   2ce20:	cmp	r7, #0
   2ce24:	bne	2ce94 <GetDataSlab+0xa4d0>
   2ce28:	mov	r3, #0
   2ce2c:	str	r3, [r1, r0]
   2ce30:	ldr	r3, [sp, #48]	; 0x30
   2ce34:	ldr	r4, [r3, r0]
   2ce38:	sdiv	r7, lr, r4
   2ce3c:	mls	r7, r7, r4, lr
   2ce40:	cmp	r7, #0
   2ce44:	beq	2ce64 <GetDataSlab+0xa4a0>
   2ce48:	add	r3, sp, #64	; 0x40
   2ce4c:	ldr	r6, [r9, r0]
   2ce50:	sub	r7, r4, r7
   2ce54:	ldr	r3, [r3, r0]
   2ce58:	mla	r3, r6, r3, r7
   2ce5c:	add	lr, r3, lr
   2ce60:	b	2ce80 <GetDataSlab+0xa4bc>
   2ce64:	ldr	r4, [r9, r0]
   2ce68:	cmp	r4, #0
   2ce6c:	beq	2ce84 <GetDataSlab+0xa4c0>
   2ce70:	add	r3, sp, #64	; 0x40
   2ce74:	ldr	r3, [r3, r0]
   2ce78:	mla	lr, r3, r4, lr
   2ce7c:	mul	r3, r3, r4
   2ce80:	add	r5, r5, r3, lsl #1
   2ce84:	subs	r8, r8, #1
   2ce88:	add	r0, r0, #4
   2ce8c:	bne	2ce04 <GetDataSlab+0xa440>
   2ce90:	b	2cea4 <GetDataSlab+0xa4e0>
   2ce94:	ldr	r3, [sp, #24]
   2ce98:	ldr	r0, [r3, r0]
   2ce9c:	add	r5, r5, r0, lsl #1
   2cea0:	add	lr, r0, lr
   2cea4:	ldr	r6, [sp, #32]
   2cea8:	str	r2, [sp, #36]	; 0x24
   2ceac:	ldr	r2, [sp, #40]	; 0x28
   2ceb0:	mov	r0, #0
   2ceb4:	add	r6, sl, r6
   2ceb8:	cmp	r6, r2
   2cebc:	blt	2cd88 <GetDataSlab+0xa3c4>
   2cec0:	b	24900 <GetDataSlab+0x1f3c>
   2cec4:	ldr	r3, [r3]
   2cec8:	mov	r5, #0
   2cecc:	add	r7, sp, #64	; 0x40
   2ced0:	sub	r0, r3, #1
   2ced4:	str	r0, [fp, #-72]	; 0xffffffb8
   2ced8:	ldr	r0, [r4]
   2cedc:	str	r0, [sp, #40]	; 0x28
   2cee0:	str	r0, [sp, #64]	; 0x40
   2cee4:	ldr	r0, [fp, #20]
   2cee8:	ldr	lr, [r0]
   2ceec:	ldr	r0, [fp, #24]
   2cef0:	cmp	r0, #2
   2cef4:	mov	r0, lr
   2cef8:	str	lr, [sp, #44]	; 0x2c
   2cefc:	blt	2cfb0 <GetDataSlab+0xa5ec>
   2cf00:	ldr	r6, [sp, #40]	; 0x28
   2cf04:	mov	r9, r4
   2cf08:	mov	r0, #1
   2cf0c:	mov	r5, #0
   2cf10:	mov	r1, r4
   2cf14:	mov	r2, lr
   2cf18:	str	lr, [sp, #44]	; 0x2c
   2cf1c:	mov	r8, r6
   2cf20:	mov	r2, r5
   2cf24:	ldr	r5, [fp, #16]
   2cf28:	mov	r4, #0
   2cf2c:	ldr	r5, [r5, r0, lsl #2]
   2cf30:	str	r6, [r7, r0, lsl #2]
   2cf34:	sub	r7, fp, #72	; 0x48
   2cf38:	sub	r5, r5, #1
   2cf3c:	str	r5, [r7, r0, lsl #2]
   2cf40:	ldr	ip, [r9, r0, lsl #2]
   2cf44:	mov	r7, ip
   2cf48:	mul	r6, r7, r6
   2cf4c:	ldr	r7, [r1, -r4, lsl #2]
   2cf50:	add	r4, r4, #1
   2cf54:	cmp	r0, r4
   2cf58:	mul	r5, r5, r7
   2cf5c:	bne	2cf48 <GetDataSlab+0xa584>
   2cf60:	sub	r4, fp, #72	; 0x48
   2cf64:	add	r7, sp, #64	; 0x40
   2cf68:	add	r1, r1, #4
   2cf6c:	str	r5, [r4, r0, lsl #2]
   2cf70:	ldr	r4, [fp, #12]
   2cf74:	str	r6, [r7, r0, lsl #2]
   2cf78:	mov	r5, r2
   2cf7c:	ldr	r4, [r4, r0, lsl #2]
   2cf80:	mla	r5, r4, r8, r2
   2cf84:	ldr	r4, [fp, #20]
   2cf88:	ldr	r2, [sp, #44]	; 0x2c
   2cf8c:	mov	r8, r6
   2cf90:	mov	r6, ip
   2cf94:	ldr	r4, [r4, r0, lsl #2]
   2cf98:	add	r0, r0, #1
   2cf9c:	mul	r2, r4, r2
   2cfa0:	ldr	r4, [fp, #24]
   2cfa4:	str	r2, [sp, #44]	; 0x2c
   2cfa8:	cmp	r0, r4
   2cfac:	bne	2cf20 <GetDataSlab+0xa55c>
   2cfb0:	ldr	r0, [sp, #48]	; 0x30
   2cfb4:	cmp	r3, #1
   2cfb8:	add	r6, r0, r5, lsl #2
   2cfbc:	bne	38dbc <GetDataSlab+0x163f8>
   2cfc0:	ldr	r0, [sp, #44]	; 0x2c
   2cfc4:	ldr	r9, [fp, #12]
   2cfc8:	cmp	r0, #1
   2cfcc:	add	r0, sp, #64	; 0x40
   2cfd0:	blt	248fc <GetDataSlab+0x1f38>
   2cfd4:	orr	r0, r0, #4
   2cfd8:	ldr	r3, [fp, #20]
   2cfdc:	add	r1, sp, #104	; 0x68
   2cfe0:	mov	r8, #0
   2cfe4:	str	r0, [sp, #48]	; 0x30
   2cfe8:	ldr	r0, [fp, #24]
   2cfec:	orr	r1, r1, #4
   2cff0:	add	r2, r3, #4
   2cff4:	sub	r0, r0, #1
   2cff8:	str	r2, [sp, #52]	; 0x34
   2cffc:	str	r0, [sp, #32]
   2d000:	sub	r0, fp, #72	; 0x48
   2d004:	orr	r0, r0, #4
   2d008:	str	r0, [sp, #28]
   2d00c:	ldr	r0, [r9], #4
   2d010:	str	r0, [sp, #36]	; 0x24
   2d014:	ldr	r2, [sp, #36]	; 0x24
   2d018:	ldr	r3, [fp, #12]
   2d01c:	ldr	r7, [sp, #40]	; 0x28
   2d020:	cmp	lr, #1
   2d024:	add	r0, r2, r5
   2d028:	add	r5, r6, r2, lsl #2
   2d02c:	ldr	r6, [fp, #20]
   2d030:	blt	2d064 <GetDataSlab+0xa6a0>
   2d034:	ldr	r2, [sp, #56]	; 0x38
   2d038:	mov	r4, #0
   2d03c:	add	r7, r2, r8, lsl #2
   2d040:	ldr	r2, [r5, r4, lsl #2]
   2d044:	str	r2, [r7, r4, lsl #2]
   2d048:	add	r4, r4, #1
   2d04c:	ldr	lr, [r6]
   2d050:	cmp	r4, lr
   2d054:	blt	2d040 <GetDataSlab+0xa67c>
   2d058:	ldr	r2, [r3]
   2d05c:	ldr	r3, [fp, #8]
   2d060:	ldr	r7, [r3]
   2d064:	str	r7, [sp, #40]	; 0x28
   2d068:	sub	r7, r7, r2
   2d06c:	str	r2, [sp, #36]	; 0x24
   2d070:	add	r6, r5, r7, lsl #2
   2d074:	add	r5, r0, r7
   2d078:	ldr	r0, [fp, #24]
   2d07c:	cmp	r0, #2
   2d080:	blt	2d138 <GetDataSlab+0xa774>
   2d084:	ldr	sl, [sp, #32]
   2d088:	mov	r0, #0
   2d08c:	ldr	r4, [r1, r0]
   2d090:	ldr	r2, [sp, #52]	; 0x34
   2d094:	add	r4, r4, #1
   2d098:	str	r4, [r1, r0]
   2d09c:	ldr	r7, [r2, r0]
   2d0a0:	sdiv	ip, r4, r7
   2d0a4:	mls	r7, ip, r7, r4
   2d0a8:	cmp	r7, #0
   2d0ac:	bne	2d128 <GetDataSlab+0xa764>
   2d0b0:	mov	r2, #0
   2d0b4:	str	r2, [r1, r0]
   2d0b8:	ldr	r2, [sp, #48]	; 0x30
   2d0bc:	ldr	r4, [r2, r0]
   2d0c0:	sdiv	r7, r5, r4
   2d0c4:	mls	r7, r7, r4, r5
   2d0c8:	cmp	r7, #0
   2d0cc:	beq	2d0f8 <GetDataSlab+0xa734>
   2d0d0:	add	r3, sp, #64	; 0x40
   2d0d4:	mov	r2, r6
   2d0d8:	ldr	r6, [r9, r0]
   2d0dc:	sub	r7, r4, r7
   2d0e0:	ldr	r3, [r3, r0]
   2d0e4:	mla	r3, r6, r3, r7
   2d0e8:	mov	r6, r2
   2d0ec:	add	r5, r3, r5
   2d0f0:	add	r6, r2, r3, lsl #2
   2d0f4:	b	2d118 <GetDataSlab+0xa754>
   2d0f8:	ldr	r4, [r9, r0]
   2d0fc:	cmp	r4, #0
   2d100:	beq	2d118 <GetDataSlab+0xa754>
   2d104:	add	r3, sp, #64	; 0x40
   2d108:	ldr	r3, [r3, r0]
   2d10c:	mla	r5, r3, r4, r5
   2d110:	mul	r3, r3, r4
   2d114:	add	r6, r6, r3, lsl #2
   2d118:	subs	sl, sl, #1
   2d11c:	add	r0, r0, #4
   2d120:	bne	2d08c <GetDataSlab+0xa6c8>
   2d124:	b	2d138 <GetDataSlab+0xa774>
   2d128:	ldr	r2, [sp, #28]
   2d12c:	ldr	r0, [r2, r0]
   2d130:	add	r6, r6, r0, lsl #2
   2d134:	add	r5, r0, r5
   2d138:	ldr	r2, [sp, #44]	; 0x2c
   2d13c:	add	r8, lr, r8
   2d140:	mov	r0, #0
   2d144:	cmp	r8, r2
   2d148:	blt	2d014 <GetDataSlab+0xa650>
   2d14c:	b	24900 <GetDataSlab+0x1f3c>
   2d150:	ldr	r3, [r3]
   2d154:	mov	r5, #0
   2d158:	add	r7, sp, #64	; 0x40
   2d15c:	sub	r0, r3, #1
   2d160:	str	r0, [fp, #-72]	; 0xffffffb8
   2d164:	ldr	r0, [r4]
   2d168:	str	r0, [sp, #40]	; 0x28
   2d16c:	str	r0, [sp, #64]	; 0x40
   2d170:	ldr	r0, [fp, #20]
   2d174:	ldr	lr, [r0]
   2d178:	ldr	r0, [fp, #24]
   2d17c:	cmp	r0, #2
   2d180:	mov	r0, lr
   2d184:	str	lr, [sp, #44]	; 0x2c
   2d188:	blt	2d23c <GetDataSlab+0xa878>
   2d18c:	ldr	r6, [sp, #40]	; 0x28
   2d190:	mov	r9, r4
   2d194:	mov	r0, #1
   2d198:	mov	r5, #0
   2d19c:	mov	r1, r4
   2d1a0:	mov	r2, lr
   2d1a4:	str	lr, [sp, #44]	; 0x2c
   2d1a8:	mov	r8, r6
   2d1ac:	mov	r2, r5
   2d1b0:	ldr	r5, [fp, #16]
   2d1b4:	mov	r4, #0
   2d1b8:	ldr	r5, [r5, r0, lsl #2]
   2d1bc:	str	r6, [r7, r0, lsl #2]
   2d1c0:	sub	r7, fp, #72	; 0x48
   2d1c4:	sub	r5, r5, #1
   2d1c8:	str	r5, [r7, r0, lsl #2]
   2d1cc:	ldr	ip, [r9, r0, lsl #2]
   2d1d0:	mov	r7, ip
   2d1d4:	mul	r6, r7, r6
   2d1d8:	ldr	r7, [r1, -r4, lsl #2]
   2d1dc:	add	r4, r4, #1
   2d1e0:	cmp	r0, r4
   2d1e4:	mul	r5, r5, r7
   2d1e8:	bne	2d1d4 <GetDataSlab+0xa810>
   2d1ec:	sub	r4, fp, #72	; 0x48
   2d1f0:	add	r7, sp, #64	; 0x40
   2d1f4:	add	r1, r1, #4
   2d1f8:	str	r5, [r4, r0, lsl #2]
   2d1fc:	ldr	r4, [fp, #12]
   2d200:	str	r6, [r7, r0, lsl #2]
   2d204:	mov	r5, r2
   2d208:	ldr	r4, [r4, r0, lsl #2]
   2d20c:	mla	r5, r4, r8, r2
   2d210:	ldr	r4, [fp, #20]
   2d214:	ldr	r2, [sp, #44]	; 0x2c
   2d218:	mov	r8, r6
   2d21c:	mov	r6, ip
   2d220:	ldr	r4, [r4, r0, lsl #2]
   2d224:	add	r0, r0, #1
   2d228:	mul	r2, r4, r2
   2d22c:	ldr	r4, [fp, #24]
   2d230:	str	r2, [sp, #44]	; 0x2c
   2d234:	cmp	r0, r4
   2d238:	bne	2d1ac <GetDataSlab+0xa7e8>
   2d23c:	ldr	r0, [sp, #48]	; 0x30
   2d240:	cmp	r3, #1
   2d244:	add	r6, r0, r5, lsl #2
   2d248:	bne	38f80 <GetDataSlab+0x165bc>
   2d24c:	ldr	r0, [sp, #44]	; 0x2c
   2d250:	ldr	r9, [fp, #12]
   2d254:	cmp	r0, #1
   2d258:	add	r0, sp, #64	; 0x40
   2d25c:	blt	248fc <GetDataSlab+0x1f38>
   2d260:	orr	r0, r0, #4
   2d264:	ldr	r3, [fp, #20]
   2d268:	add	r1, sp, #104	; 0x68
   2d26c:	mov	r8, #0
   2d270:	str	r0, [sp, #48]	; 0x30
   2d274:	ldr	r0, [fp, #24]
   2d278:	orr	r1, r1, #4
   2d27c:	add	r2, r3, #4
   2d280:	sub	r0, r0, #1
   2d284:	str	r2, [sp, #52]	; 0x34
   2d288:	str	r0, [sp, #32]
   2d28c:	sub	r0, fp, #72	; 0x48
   2d290:	orr	r0, r0, #4
   2d294:	str	r0, [sp, #28]
   2d298:	ldr	r0, [r9], #4
   2d29c:	str	r0, [sp, #36]	; 0x24
   2d2a0:	ldr	r2, [sp, #36]	; 0x24
   2d2a4:	ldr	r3, [fp, #12]
   2d2a8:	ldr	r7, [sp, #40]	; 0x28
   2d2ac:	cmp	lr, #1
   2d2b0:	add	r0, r2, r5
   2d2b4:	add	r5, r6, r2, lsl #2
   2d2b8:	ldr	r6, [fp, #20]
   2d2bc:	blt	2d2f0 <GetDataSlab+0xa92c>
   2d2c0:	ldr	r2, [sp, #56]	; 0x38
   2d2c4:	mov	r4, #0
   2d2c8:	add	r7, r2, r8, lsl #2
   2d2cc:	ldr	r2, [r5, r4, lsl #2]
   2d2d0:	str	r2, [r7, r4, lsl #2]
   2d2d4:	add	r4, r4, #1
   2d2d8:	ldr	lr, [r6]
   2d2dc:	cmp	r4, lr
   2d2e0:	blt	2d2cc <GetDataSlab+0xa908>
   2d2e4:	ldr	r2, [r3]
   2d2e8:	ldr	r3, [fp, #8]
   2d2ec:	ldr	r7, [r3]
   2d2f0:	str	r7, [sp, #40]	; 0x28
   2d2f4:	sub	r7, r7, r2
   2d2f8:	str	r2, [sp, #36]	; 0x24
   2d2fc:	add	r6, r5, r7, lsl #2
   2d300:	add	r5, r0, r7
   2d304:	ldr	r0, [fp, #24]
   2d308:	cmp	r0, #2
   2d30c:	blt	2d3c4 <GetDataSlab+0xaa00>
   2d310:	ldr	sl, [sp, #32]
   2d314:	mov	r0, #0
   2d318:	ldr	r4, [r1, r0]
   2d31c:	ldr	r2, [sp, #52]	; 0x34
   2d320:	add	r4, r4, #1
   2d324:	str	r4, [r1, r0]
   2d328:	ldr	r7, [r2, r0]
   2d32c:	sdiv	ip, r4, r7
   2d330:	mls	r7, ip, r7, r4
   2d334:	cmp	r7, #0
   2d338:	bne	2d3b4 <GetDataSlab+0xa9f0>
   2d33c:	mov	r2, #0
   2d340:	str	r2, [r1, r0]
   2d344:	ldr	r2, [sp, #48]	; 0x30
   2d348:	ldr	r4, [r2, r0]
   2d34c:	sdiv	r7, r5, r4
   2d350:	mls	r7, r7, r4, r5
   2d354:	cmp	r7, #0
   2d358:	beq	2d384 <GetDataSlab+0xa9c0>
   2d35c:	add	r3, sp, #64	; 0x40
   2d360:	mov	r2, r6
   2d364:	ldr	r6, [r9, r0]
   2d368:	sub	r7, r4, r7
   2d36c:	ldr	r3, [r3, r0]
   2d370:	mla	r3, r6, r3, r7
   2d374:	mov	r6, r2
   2d378:	add	r5, r3, r5
   2d37c:	add	r6, r2, r3, lsl #2
   2d380:	b	2d3a4 <GetDataSlab+0xa9e0>
   2d384:	ldr	r4, [r9, r0]
   2d388:	cmp	r4, #0
   2d38c:	beq	2d3a4 <GetDataSlab+0xa9e0>
   2d390:	add	r3, sp, #64	; 0x40
   2d394:	ldr	r3, [r3, r0]
   2d398:	mla	r5, r3, r4, r5
   2d39c:	mul	r3, r3, r4
   2d3a0:	add	r6, r6, r3, lsl #2
   2d3a4:	subs	sl, sl, #1
   2d3a8:	add	r0, r0, #4
   2d3ac:	bne	2d318 <GetDataSlab+0xa954>
   2d3b0:	b	2d3c4 <GetDataSlab+0xaa00>
   2d3b4:	ldr	r2, [sp, #28]
   2d3b8:	ldr	r0, [r2, r0]
   2d3bc:	add	r6, r6, r0, lsl #2
   2d3c0:	add	r5, r0, r5
   2d3c4:	ldr	r2, [sp, #44]	; 0x2c
   2d3c8:	add	r8, lr, r8
   2d3cc:	mov	r0, #0
   2d3d0:	cmp	r8, r2
   2d3d4:	blt	2d2a0 <GetDataSlab+0xa8dc>
   2d3d8:	b	24900 <GetDataSlab+0x1f3c>
   2d3dc:	ldr	r3, [r3]
   2d3e0:	sub	r9, fp, #72	; 0x48
   2d3e4:	mov	lr, #0
   2d3e8:	add	r7, sp, #64	; 0x40
   2d3ec:	sub	r0, r3, #1
   2d3f0:	str	r0, [fp, #-72]	; 0xffffffb8
   2d3f4:	ldr	r0, [r4]
   2d3f8:	str	r0, [sp, #36]	; 0x24
   2d3fc:	str	r0, [sp, #64]	; 0x40
   2d400:	ldr	r0, [fp, #20]
   2d404:	ldr	sl, [r0]
   2d408:	ldr	r0, [fp, #24]
   2d40c:	cmp	r0, #2
   2d410:	mov	r0, sl
   2d414:	str	sl, [sp, #40]	; 0x28
   2d418:	blt	2d4c0 <GetDataSlab+0xaafc>
   2d41c:	ldr	r6, [sp, #36]	; 0x24
   2d420:	ldr	r1, [fp, #8]
   2d424:	mov	r0, #1
   2d428:	mov	lr, #0
   2d42c:	mov	r2, sl
   2d430:	str	sl, [sp, #40]	; 0x28
   2d434:	mov	r8, r6
   2d438:	ldr	r5, [fp, #16]
   2d43c:	ldr	r2, [fp, #8]
   2d440:	mov	r4, #0
   2d444:	ldr	r5, [r5, r0, lsl #2]
   2d448:	str	r6, [r7, r0, lsl #2]
   2d44c:	sub	r5, r5, #1
   2d450:	str	r5, [r9, r0, lsl #2]
   2d454:	ldr	ip, [r2, r0, lsl #2]
   2d458:	mov	r7, ip
   2d45c:	mul	r6, r7, r6
   2d460:	ldr	r7, [r1, -r4, lsl #2]
   2d464:	add	r4, r4, #1
   2d468:	cmp	r0, r4
   2d46c:	mul	r5, r5, r7
   2d470:	bne	2d45c <GetDataSlab+0xaa98>
   2d474:	ldr	r4, [fp, #12]
   2d478:	add	r7, sp, #64	; 0x40
   2d47c:	sub	r9, fp, #72	; 0x48
   2d480:	ldr	r2, [sp, #40]	; 0x28
   2d484:	add	r1, r1, #4
   2d488:	str	r6, [r7, r0, lsl #2]
   2d48c:	str	r5, [r9, r0, lsl #2]
   2d490:	ldr	r4, [r4, r0, lsl #2]
   2d494:	mla	lr, r4, r8, lr
   2d498:	ldr	r4, [fp, #20]
   2d49c:	mov	r8, r6
   2d4a0:	mov	r6, ip
   2d4a4:	ldr	r4, [r4, r0, lsl #2]
   2d4a8:	add	r0, r0, #1
   2d4ac:	mul	r2, r4, r2
   2d4b0:	ldr	r4, [fp, #24]
   2d4b4:	str	r2, [sp, #40]	; 0x28
   2d4b8:	cmp	r0, r4
   2d4bc:	bne	2d438 <GetDataSlab+0xaa74>
   2d4c0:	ldr	r0, [sp, #48]	; 0x30
   2d4c4:	cmp	r3, #1
   2d4c8:	add	r5, r0, lr, lsl #2
   2d4cc:	bne	39144 <GetDataSlab+0x16780>
   2d4d0:	ldr	r0, [sp, #40]	; 0x28
   2d4d4:	cmp	r0, #1
   2d4d8:	add	r0, sp, #64	; 0x40
   2d4dc:	blt	248fc <GetDataSlab+0x1f38>
   2d4e0:	orr	r0, r0, #4
   2d4e4:	ldr	r8, [fp, #12]
   2d4e8:	ldr	r3, [fp, #20]
   2d4ec:	add	r1, sp, #104	; 0x68
   2d4f0:	str	r0, [sp, #48]	; 0x30
   2d4f4:	ldr	r0, [fp, #24]
   2d4f8:	orr	r1, r1, #4
   2d4fc:	str	r1, [sp, #24]
   2d500:	mov	r1, #0
   2d504:	add	r2, r3, #4
   2d508:	sub	r0, r0, #1
   2d50c:	str	r2, [sp, #52]	; 0x34
   2d510:	str	r0, [sp, #28]
   2d514:	sub	r0, fp, #72	; 0x48
   2d518:	orr	r0, r0, #4
   2d51c:	str	r0, [sp, #20]
   2d520:	ldr	r0, [r8], #4
   2d524:	str	r0, [sp, #44]	; 0x2c
   2d528:	ldr	r3, [sp, #44]	; 0x2c
   2d52c:	ldr	r6, [fp, #8]
   2d530:	ldr	r2, [sp, #36]	; 0x24
   2d534:	cmp	sl, #1
   2d538:	add	r0, r5, r3, lsl #2
   2d53c:	add	lr, r3, lr
   2d540:	blt	2d588 <GetDataSlab+0xabc4>
   2d544:	ldr	r2, [sp, #56]	; 0x38
   2d548:	ldr	r3, [fp, #20]
   2d54c:	mov	r4, #0
   2d550:	mov	r5, r0
   2d554:	add	r7, r2, r1, lsl #2
   2d558:	vldr	s0, [r5]
   2d55c:	add	r5, r5, #4
   2d560:	vcvt.s32.f32	s0, s0
   2d564:	vmov	r2, s0
   2d568:	str	r2, [r7, r4, lsl #2]
   2d56c:	add	r4, r4, #1
   2d570:	ldr	sl, [r3]
   2d574:	cmp	r4, sl
   2d578:	blt	2d558 <GetDataSlab+0xab94>
   2d57c:	ldr	r3, [fp, #12]
   2d580:	ldr	r2, [r6]
   2d584:	ldr	r3, [r3]
   2d588:	sub	r4, r2, r3
   2d58c:	str	r1, [sp, #32]
   2d590:	str	r3, [sp, #44]	; 0x2c
   2d594:	add	r5, r0, r4, lsl #2
   2d598:	ldr	r0, [fp, #24]
   2d59c:	add	lr, lr, r4
   2d5a0:	cmp	r0, #2
   2d5a4:	blt	2d654 <GetDataSlab+0xac90>
   2d5a8:	ldr	r9, [sp, #28]
   2d5ac:	ldr	r1, [sp, #24]
   2d5b0:	mov	r0, #0
   2d5b4:	ldr	r4, [r1, r0]
   2d5b8:	ldr	r3, [sp, #52]	; 0x34
   2d5bc:	add	r4, r4, #1
   2d5c0:	str	r4, [r1, r0]
   2d5c4:	ldr	r7, [r3, r0]
   2d5c8:	sdiv	ip, r4, r7
   2d5cc:	mls	r7, ip, r7, r4
   2d5d0:	cmp	r7, #0
   2d5d4:	bne	2d644 <GetDataSlab+0xac80>
   2d5d8:	mov	r3, #0
   2d5dc:	str	r3, [r1, r0]
   2d5e0:	ldr	r3, [sp, #48]	; 0x30
   2d5e4:	ldr	r4, [r3, r0]
   2d5e8:	sdiv	r7, lr, r4
   2d5ec:	mls	r7, r7, r4, lr
   2d5f0:	cmp	r7, #0
   2d5f4:	beq	2d614 <GetDataSlab+0xac50>
   2d5f8:	add	r3, sp, #64	; 0x40
   2d5fc:	ldr	r6, [r8, r0]
   2d600:	sub	r7, r4, r7
   2d604:	ldr	r3, [r3, r0]
   2d608:	mla	r3, r6, r3, r7
   2d60c:	add	lr, r3, lr
   2d610:	b	2d630 <GetDataSlab+0xac6c>
   2d614:	ldr	r4, [r8, r0]
   2d618:	cmp	r4, #0
   2d61c:	beq	2d634 <GetDataSlab+0xac70>
   2d620:	add	r3, sp, #64	; 0x40
   2d624:	ldr	r3, [r3, r0]
   2d628:	mla	lr, r3, r4, lr
   2d62c:	mul	r3, r3, r4
   2d630:	add	r5, r5, r3, lsl #2
   2d634:	subs	r9, r9, #1
   2d638:	add	r0, r0, #4
   2d63c:	bne	2d5b4 <GetDataSlab+0xabf0>
   2d640:	b	2d654 <GetDataSlab+0xac90>
   2d644:	ldr	r3, [sp, #20]
   2d648:	ldr	r0, [r3, r0]
   2d64c:	add	r5, r5, r0, lsl #2
   2d650:	add	lr, r0, lr
   2d654:	ldr	r1, [sp, #32]
   2d658:	str	r2, [sp, #36]	; 0x24
   2d65c:	ldr	r2, [sp, #40]	; 0x28
   2d660:	mov	r0, #0
   2d664:	add	r1, sl, r1
   2d668:	cmp	r1, r2
   2d66c:	blt	2d528 <GetDataSlab+0xab64>
   2d670:	b	24900 <GetDataSlab+0x1f3c>
   2d674:	ldr	r3, [r3]
   2d678:	sub	r9, fp, #72	; 0x48
   2d67c:	mov	lr, #0
   2d680:	add	r7, sp, #64	; 0x40
   2d684:	sub	r0, r3, #1
   2d688:	str	r0, [fp, #-72]	; 0xffffffb8
   2d68c:	ldr	r0, [r4]
   2d690:	str	r0, [sp, #36]	; 0x24
   2d694:	str	r0, [sp, #64]	; 0x40
   2d698:	ldr	r0, [fp, #20]
   2d69c:	ldr	sl, [r0]
   2d6a0:	ldr	r0, [fp, #24]
   2d6a4:	cmp	r0, #2
   2d6a8:	mov	r0, sl
   2d6ac:	str	sl, [sp, #40]	; 0x28
   2d6b0:	blt	2d758 <GetDataSlab+0xad94>
   2d6b4:	ldr	r6, [sp, #36]	; 0x24
   2d6b8:	ldr	r1, [fp, #8]
   2d6bc:	mov	r0, #1
   2d6c0:	mov	lr, #0
   2d6c4:	mov	r2, sl
   2d6c8:	str	sl, [sp, #40]	; 0x28
   2d6cc:	mov	r8, r6
   2d6d0:	ldr	r5, [fp, #16]
   2d6d4:	ldr	r2, [fp, #8]
   2d6d8:	mov	r4, #0
   2d6dc:	ldr	r5, [r5, r0, lsl #2]
   2d6e0:	str	r6, [r7, r0, lsl #2]
   2d6e4:	sub	r5, r5, #1
   2d6e8:	str	r5, [r9, r0, lsl #2]
   2d6ec:	ldr	ip, [r2, r0, lsl #2]
   2d6f0:	mov	r7, ip
   2d6f4:	mul	r6, r7, r6
   2d6f8:	ldr	r7, [r1, -r4, lsl #2]
   2d6fc:	add	r4, r4, #1
   2d700:	cmp	r0, r4
   2d704:	mul	r5, r5, r7
   2d708:	bne	2d6f4 <GetDataSlab+0xad30>
   2d70c:	ldr	r4, [fp, #12]
   2d710:	add	r7, sp, #64	; 0x40
   2d714:	sub	r9, fp, #72	; 0x48
   2d718:	ldr	r2, [sp, #40]	; 0x28
   2d71c:	add	r1, r1, #4
   2d720:	str	r6, [r7, r0, lsl #2]
   2d724:	str	r5, [r9, r0, lsl #2]
   2d728:	ldr	r4, [r4, r0, lsl #2]
   2d72c:	mla	lr, r4, r8, lr
   2d730:	ldr	r4, [fp, #20]
   2d734:	mov	r8, r6
   2d738:	mov	r6, ip
   2d73c:	ldr	r4, [r4, r0, lsl #2]
   2d740:	add	r0, r0, #1
   2d744:	mul	r2, r4, r2
   2d748:	ldr	r4, [fp, #24]
   2d74c:	str	r2, [sp, #40]	; 0x28
   2d750:	cmp	r0, r4
   2d754:	bne	2d6d0 <GetDataSlab+0xad0c>
   2d758:	ldr	r0, [sp, #48]	; 0x30
   2d75c:	cmp	r3, #1
   2d760:	add	r5, r0, lr, lsl #3
   2d764:	bne	39314 <GetDataSlab+0x16950>
   2d768:	ldr	r0, [sp, #40]	; 0x28
   2d76c:	cmp	r0, #1
   2d770:	add	r0, sp, #64	; 0x40
   2d774:	blt	248fc <GetDataSlab+0x1f38>
   2d778:	orr	r0, r0, #4
   2d77c:	ldr	r8, [fp, #12]
   2d780:	ldr	r3, [fp, #20]
   2d784:	add	r1, sp, #104	; 0x68
   2d788:	str	r0, [sp, #48]	; 0x30
   2d78c:	ldr	r0, [fp, #24]
   2d790:	orr	r1, r1, #4
   2d794:	str	r1, [sp, #24]
   2d798:	mov	r1, #0
   2d79c:	add	r2, r3, #4
   2d7a0:	sub	r0, r0, #1
   2d7a4:	str	r2, [sp, #52]	; 0x34
   2d7a8:	str	r0, [sp, #28]
   2d7ac:	sub	r0, fp, #72	; 0x48
   2d7b0:	orr	r0, r0, #4
   2d7b4:	str	r0, [sp, #20]
   2d7b8:	ldr	r0, [r8], #4
   2d7bc:	str	r0, [sp, #44]	; 0x2c
   2d7c0:	ldr	r3, [sp, #44]	; 0x2c
   2d7c4:	ldr	r6, [fp, #8]
   2d7c8:	ldr	r2, [sp, #36]	; 0x24
   2d7cc:	cmp	sl, #1
   2d7d0:	add	r0, r5, r3, lsl #3
   2d7d4:	add	lr, r3, lr
   2d7d8:	blt	2d820 <GetDataSlab+0xae5c>
   2d7dc:	ldr	r2, [sp, #56]	; 0x38
   2d7e0:	ldr	r3, [fp, #20]
   2d7e4:	mov	r4, #0
   2d7e8:	mov	r5, r0
   2d7ec:	add	r7, r2, r1, lsl #2
   2d7f0:	vldr	d16, [r5]
   2d7f4:	add	r5, r5, #8
   2d7f8:	vcvt.s32.f64	s0, d16
   2d7fc:	vmov	r2, s0
   2d800:	str	r2, [r7, r4, lsl #2]
   2d804:	add	r4, r4, #1
   2d808:	ldr	sl, [r3]
   2d80c:	cmp	r4, sl
   2d810:	blt	2d7f0 <GetDataSlab+0xae2c>
   2d814:	ldr	r3, [fp, #12]
   2d818:	ldr	r2, [r6]
   2d81c:	ldr	r3, [r3]
   2d820:	sub	r4, r2, r3
   2d824:	str	r1, [sp, #32]
   2d828:	str	r3, [sp, #44]	; 0x2c
   2d82c:	add	r5, r0, r4, lsl #3
   2d830:	ldr	r0, [fp, #24]
   2d834:	add	lr, lr, r4
   2d838:	cmp	r0, #2
   2d83c:	blt	2d8ec <GetDataSlab+0xaf28>
   2d840:	ldr	r9, [sp, #28]
   2d844:	ldr	r1, [sp, #24]
   2d848:	mov	r0, #0
   2d84c:	ldr	r4, [r1, r0]
   2d850:	ldr	r3, [sp, #52]	; 0x34
   2d854:	add	r4, r4, #1
   2d858:	str	r4, [r1, r0]
   2d85c:	ldr	r7, [r3, r0]
   2d860:	sdiv	ip, r4, r7
   2d864:	mls	r7, ip, r7, r4
   2d868:	cmp	r7, #0
   2d86c:	bne	2d8dc <GetDataSlab+0xaf18>
   2d870:	mov	r3, #0
   2d874:	str	r3, [r1, r0]
   2d878:	ldr	r3, [sp, #48]	; 0x30
   2d87c:	ldr	r4, [r3, r0]
   2d880:	sdiv	r7, lr, r4
   2d884:	mls	r7, r7, r4, lr
   2d888:	cmp	r7, #0
   2d88c:	beq	2d8ac <GetDataSlab+0xaee8>
   2d890:	add	r3, sp, #64	; 0x40
   2d894:	ldr	r6, [r8, r0]
   2d898:	sub	r7, r4, r7
   2d89c:	ldr	r3, [r3, r0]
   2d8a0:	mla	r3, r6, r3, r7
   2d8a4:	add	lr, r3, lr
   2d8a8:	b	2d8c8 <GetDataSlab+0xaf04>
   2d8ac:	ldr	r4, [r8, r0]
   2d8b0:	cmp	r4, #0
   2d8b4:	beq	2d8cc <GetDataSlab+0xaf08>
   2d8b8:	add	r3, sp, #64	; 0x40
   2d8bc:	ldr	r3, [r3, r0]
   2d8c0:	mla	lr, r3, r4, lr
   2d8c4:	mul	r3, r3, r4
   2d8c8:	add	r5, r5, r3, lsl #3
   2d8cc:	subs	r9, r9, #1
   2d8d0:	add	r0, r0, #4
   2d8d4:	bne	2d84c <GetDataSlab+0xae88>
   2d8d8:	b	2d8ec <GetDataSlab+0xaf28>
   2d8dc:	ldr	r3, [sp, #20]
   2d8e0:	ldr	r0, [r3, r0]
   2d8e4:	add	r5, r5, r0, lsl #3
   2d8e8:	add	lr, r0, lr
   2d8ec:	ldr	r1, [sp, #32]
   2d8f0:	str	r2, [sp, #36]	; 0x24
   2d8f4:	ldr	r2, [sp, #40]	; 0x28
   2d8f8:	mov	r0, #0
   2d8fc:	add	r1, sl, r1
   2d900:	cmp	r1, r2
   2d904:	blt	2d7c0 <GetDataSlab+0xadfc>
   2d908:	b	24900 <GetDataSlab+0x1f3c>
   2d90c:	ldr	r5, [r3]
   2d910:	mov	r9, r4
   2d914:	mov	lr, #0
   2d918:	sub	r0, r5, #1
   2d91c:	str	r0, [fp, #-72]	; 0xffffffb8
   2d920:	ldr	r0, [r4]
   2d924:	add	r4, sp, #64	; 0x40
   2d928:	str	r0, [sp, #32]
   2d92c:	str	r0, [sp, #64]	; 0x40
   2d930:	ldr	r0, [fp, #20]
   2d934:	ldr	r1, [r0]
   2d938:	ldr	r0, [fp, #24]
   2d93c:	cmp	r0, #2
   2d940:	mov	r0, r1
   2d944:	str	r1, [sp, #36]	; 0x24
   2d948:	blt	2d9f0 <GetDataSlab+0xb02c>
   2d94c:	ldr	r7, [sp, #32]
   2d950:	mov	r0, #1
   2d954:	mov	lr, #0
   2d958:	mov	r2, r9
   2d95c:	mov	r3, r1
   2d960:	str	r1, [sp, #36]	; 0x24
   2d964:	mov	r8, r7
   2d968:	ldr	r3, [fp, #16]
   2d96c:	ldr	r3, [r3, r0, lsl #2]
   2d970:	str	r7, [r4, r0, lsl #2]
   2d974:	mov	r4, #0
   2d978:	sub	r6, r3, #1
   2d97c:	sub	r3, fp, #72	; 0x48
   2d980:	str	r6, [r3, r0, lsl #2]
   2d984:	ldr	ip, [r9, r0, lsl #2]
   2d988:	mov	r3, ip
   2d98c:	mul	r7, r3, r7
   2d990:	ldr	r3, [r2, -r4, lsl #2]
   2d994:	add	r4, r4, #1
   2d998:	cmp	r0, r4
   2d99c:	mul	r6, r6, r3
   2d9a0:	bne	2d98c <GetDataSlab+0xafc8>
   2d9a4:	sub	r3, fp, #72	; 0x48
   2d9a8:	add	r4, sp, #64	; 0x40
   2d9ac:	add	r2, r2, #4
   2d9b0:	str	r6, [r3, r0, lsl #2]
   2d9b4:	ldr	r3, [fp, #12]
   2d9b8:	str	r7, [r4, r0, lsl #2]
   2d9bc:	ldr	r6, [sp, #36]	; 0x24
   2d9c0:	ldr	r3, [r3, r0, lsl #2]
   2d9c4:	mla	lr, r3, r8, lr
   2d9c8:	ldr	r3, [fp, #20]
   2d9cc:	mov	r8, r7
   2d9d0:	mov	r7, ip
   2d9d4:	ldr	r3, [r3, r0, lsl #2]
   2d9d8:	add	r0, r0, #1
   2d9dc:	mul	r6, r3, r6
   2d9e0:	ldr	r3, [fp, #24]
   2d9e4:	str	r6, [sp, #36]	; 0x24
   2d9e8:	cmp	r0, r3
   2d9ec:	bne	2d968 <GetDataSlab+0xafa4>
   2d9f0:	ldr	r0, [sp, #48]	; 0x30
   2d9f4:	cmp	r5, #1
   2d9f8:	add	r7, r0, lr, lsl #3
   2d9fc:	bne	394e4 <GetDataSlab+0x16b20>
   2da00:	ldr	r0, [sp, #36]	; 0x24
   2da04:	ldr	r5, [fp, #12]
   2da08:	add	r2, sp, #64	; 0x40
   2da0c:	cmp	r0, #1
   2da10:	blt	39694 <GetDataSlab+0x16cd0>
   2da14:	ldr	r3, [fp, #20]
   2da18:	orr	r2, r2, #4
   2da1c:	add	r0, sp, #104	; 0x68
   2da20:	mov	sl, #0
   2da24:	str	r2, [sp, #40]	; 0x28
   2da28:	ldr	r2, [fp, #24]
   2da2c:	orr	r0, r0, #4
   2da30:	add	r3, r3, #4
   2da34:	str	r3, [sp, #44]	; 0x2c
   2da38:	ldr	r3, [r5], #4
   2da3c:	sub	r2, r2, #1
   2da40:	str	r2, [sp, #24]
   2da44:	sub	r2, fp, #72	; 0x48
   2da48:	orr	r2, r2, #4
   2da4c:	str	r2, [sp, #20]
   2da50:	ldr	r2, [sp, #32]
   2da54:	add	r8, r7, r3, lsl #3
   2da58:	add	lr, r3, lr
   2da5c:	cmp	r1, #1
   2da60:	blt	2da9c <GetDataSlab+0xb0d8>
   2da64:	ldr	r1, [sp, #56]	; 0x38
   2da68:	ldr	r2, [fp, #20]
   2da6c:	mov	r3, #0
   2da70:	mov	r7, r8
   2da74:	add	r4, r1, sl, lsl #2
   2da78:	ldr	r1, [r7], #8
   2da7c:	str	r1, [r4, r3, lsl #2]
   2da80:	add	r3, r3, #1
   2da84:	ldr	r1, [r2]
   2da88:	cmp	r3, r1
   2da8c:	blt	2da78 <GetDataSlab+0xb0b4>
   2da90:	ldr	r2, [fp, #12]
   2da94:	ldr	r3, [r2]
   2da98:	ldr	r2, [r9]
   2da9c:	str	r3, [sp, #28]
   2daa0:	sub	r3, r2, r3
   2daa4:	str	r2, [sp, #32]
   2daa8:	ldr	r2, [fp, #24]
   2daac:	add	r7, r8, r3, lsl #3
   2dab0:	add	lr, lr, r3
   2dab4:	cmp	r2, #2
   2dab8:	blt	2db64 <GetDataSlab+0xb1a0>
   2dabc:	ldr	r9, [sp, #24]
   2dac0:	mov	r8, #0
   2dac4:	ldr	r3, [r0, r8]
   2dac8:	ldr	r2, [sp, #44]	; 0x2c
   2dacc:	add	r3, r3, #1
   2dad0:	str	r3, [r0, r8]
   2dad4:	ldr	r4, [r2, r8]
   2dad8:	sdiv	ip, r3, r4
   2dadc:	mls	r3, ip, r4, r3
   2dae0:	cmp	r3, #0
   2dae4:	bne	2db54 <GetDataSlab+0xb190>
   2dae8:	mov	r2, #0
   2daec:	str	r2, [r0, r8]
   2daf0:	ldr	r2, [sp, #40]	; 0x28
   2daf4:	ldr	r3, [r2, r8]
   2daf8:	sdiv	r4, lr, r3
   2dafc:	mls	r4, r4, r3, lr
   2db00:	cmp	r4, #0
   2db04:	beq	2db24 <GetDataSlab+0xb160>
   2db08:	add	r2, sp, #64	; 0x40
   2db0c:	ldr	r6, [r5, r8]
   2db10:	sub	r3, r3, r4
   2db14:	ldr	r2, [r2, r8]
   2db18:	mla	r2, r6, r2, r3
   2db1c:	add	lr, r2, lr
   2db20:	b	2db40 <GetDataSlab+0xb17c>
   2db24:	ldr	r3, [r5, r8]
   2db28:	cmp	r3, #0
   2db2c:	beq	2db44 <GetDataSlab+0xb180>
   2db30:	add	r2, sp, #64	; 0x40
   2db34:	ldr	r2, [r2, r8]
   2db38:	mla	lr, r2, r3, lr
   2db3c:	mul	r2, r2, r3
   2db40:	add	r7, r7, r2, lsl #3
   2db44:	subs	r9, r9, #1
   2db48:	add	r8, r8, #4
   2db4c:	bne	2dac4 <GetDataSlab+0xb100>
   2db50:	b	2db64 <GetDataSlab+0xb1a0>
   2db54:	ldr	r2, [sp, #20]
   2db58:	ldr	r2, [r2, r8]
   2db5c:	add	r7, r7, r2, lsl #3
   2db60:	add	lr, r2, lr
   2db64:	ldr	r2, [sp, #36]	; 0x24
   2db68:	ldr	r9, [fp, #8]
   2db6c:	ldr	r3, [sp, #28]
   2db70:	add	sl, r1, sl
   2db74:	cmp	sl, r2
   2db78:	blt	2da50 <GetDataSlab+0xb08c>
   2db7c:	b	39694 <GetDataSlab+0x16cd0>
   2db80:	ldr	r3, [r3]
   2db84:	mov	r5, #0
   2db88:	add	r7, sp, #64	; 0x40
   2db8c:	sub	r0, r3, #1
   2db90:	str	r0, [fp, #-72]	; 0xffffffb8
   2db94:	ldr	r0, [r4]
   2db98:	str	r0, [sp, #40]	; 0x28
   2db9c:	str	r0, [sp, #64]	; 0x40
   2dba0:	ldr	r0, [fp, #20]
   2dba4:	ldr	lr, [r0]
   2dba8:	ldr	r0, [fp, #24]
   2dbac:	cmp	r0, #2
   2dbb0:	mov	r0, lr
   2dbb4:	str	lr, [sp, #44]	; 0x2c
   2dbb8:	blt	2dc6c <GetDataSlab+0xb2a8>
   2dbbc:	ldr	r6, [sp, #40]	; 0x28
   2dbc0:	mov	r9, r4
   2dbc4:	mov	r0, #1
   2dbc8:	mov	r5, #0
   2dbcc:	mov	r1, r4
   2dbd0:	mov	r2, lr
   2dbd4:	str	lr, [sp, #44]	; 0x2c
   2dbd8:	mov	r8, r6
   2dbdc:	mov	r2, r5
   2dbe0:	ldr	r5, [fp, #16]
   2dbe4:	mov	r4, #0
   2dbe8:	ldr	r5, [r5, r0, lsl #2]
   2dbec:	str	r6, [r7, r0, lsl #2]
   2dbf0:	sub	r7, fp, #72	; 0x48
   2dbf4:	sub	r5, r5, #1
   2dbf8:	str	r5, [r7, r0, lsl #2]
   2dbfc:	ldr	ip, [r9, r0, lsl #2]
   2dc00:	mov	r7, ip
   2dc04:	mul	r6, r7, r6
   2dc08:	ldr	r7, [r1, -r4, lsl #2]
   2dc0c:	add	r4, r4, #1
   2dc10:	cmp	r0, r4
   2dc14:	mul	r5, r5, r7
   2dc18:	bne	2dc04 <GetDataSlab+0xb240>
   2dc1c:	sub	r4, fp, #72	; 0x48
   2dc20:	add	r7, sp, #64	; 0x40
   2dc24:	add	r1, r1, #4
   2dc28:	str	r5, [r4, r0, lsl #2]
   2dc2c:	ldr	r4, [fp, #12]
   2dc30:	str	r6, [r7, r0, lsl #2]
   2dc34:	mov	r5, r2
   2dc38:	ldr	r4, [r4, r0, lsl #2]
   2dc3c:	mla	r5, r4, r8, r2
   2dc40:	ldr	r4, [fp, #20]
   2dc44:	ldr	r2, [sp, #44]	; 0x2c
   2dc48:	mov	r8, r6
   2dc4c:	mov	r6, ip
   2dc50:	ldr	r4, [r4, r0, lsl #2]
   2dc54:	add	r0, r0, #1
   2dc58:	mul	r2, r4, r2
   2dc5c:	ldr	r4, [fp, #24]
   2dc60:	str	r2, [sp, #44]	; 0x2c
   2dc64:	cmp	r0, r4
   2dc68:	bne	2dbdc <GetDataSlab+0xb218>
   2dc6c:	ldr	r0, [sp, #48]	; 0x30
   2dc70:	cmp	r3, #1
   2dc74:	add	r6, r0, r5
   2dc78:	bne	39930 <GetDataSlab+0x16f6c>
   2dc7c:	ldr	r0, [sp, #44]	; 0x2c
   2dc80:	ldr	r9, [fp, #12]
   2dc84:	cmp	r0, #1
   2dc88:	add	r0, sp, #64	; 0x40
   2dc8c:	blt	248fc <GetDataSlab+0x1f38>
   2dc90:	orr	r0, r0, #4
   2dc94:	ldr	r3, [fp, #20]
   2dc98:	add	r1, sp, #104	; 0x68
   2dc9c:	mov	r8, #0
   2dca0:	str	r0, [sp, #48]	; 0x30
   2dca4:	ldr	r0, [fp, #24]
   2dca8:	orr	r1, r1, #4
   2dcac:	add	r2, r3, #4
   2dcb0:	sub	r0, r0, #1
   2dcb4:	str	r2, [sp, #52]	; 0x34
   2dcb8:	str	r0, [sp, #32]
   2dcbc:	sub	r0, fp, #72	; 0x48
   2dcc0:	orr	r0, r0, #4
   2dcc4:	str	r0, [sp, #28]
   2dcc8:	ldr	r0, [r9], #4
   2dccc:	str	r0, [sp, #36]	; 0x24
   2dcd0:	ldr	r2, [sp, #36]	; 0x24
   2dcd4:	ldr	r3, [fp, #12]
   2dcd8:	cmp	lr, #1
   2dcdc:	add	r0, r2, r5
   2dce0:	add	r5, r6, r2
   2dce4:	ldr	r6, [fp, #20]
   2dce8:	blt	2dd20 <GetDataSlab+0xb35c>
   2dcec:	ldr	r2, [sp, #56]	; 0x38
   2dcf0:	mov	r4, #0
   2dcf4:	add	r7, r2, r8, lsl #2
   2dcf8:	ldrb	r2, [r5, r4]
   2dcfc:	str	r2, [r7, r4, lsl #2]
   2dd00:	add	r4, r4, #1
   2dd04:	ldr	lr, [r6]
   2dd08:	cmp	r4, lr
   2dd0c:	blt	2dcf8 <GetDataSlab+0xb334>
   2dd10:	ldr	r2, [r3]
   2dd14:	ldr	r3, [fp, #8]
   2dd18:	ldr	r3, [r3]
   2dd1c:	str	r3, [sp, #40]	; 0x28
   2dd20:	ldr	r3, [sp, #40]	; 0x28
   2dd24:	str	r2, [sp, #36]	; 0x24
   2dd28:	sub	r7, r3, r2
   2dd2c:	add	r6, r5, r7
   2dd30:	add	r5, r0, r7
   2dd34:	ldr	r0, [fp, #24]
   2dd38:	cmp	r0, #2
   2dd3c:	blt	2ddf0 <GetDataSlab+0xb42c>
   2dd40:	ldr	sl, [sp, #32]
   2dd44:	mov	r0, #0
   2dd48:	ldr	r4, [r1, r0]
   2dd4c:	ldr	r2, [sp, #52]	; 0x34
   2dd50:	add	r4, r4, #1
   2dd54:	str	r4, [r1, r0]
   2dd58:	ldr	r7, [r2, r0]
   2dd5c:	sdiv	ip, r4, r7
   2dd60:	mls	r7, ip, r7, r4
   2dd64:	cmp	r7, #0
   2dd68:	bne	2dde0 <GetDataSlab+0xb41c>
   2dd6c:	mov	r2, #0
   2dd70:	str	r2, [r1, r0]
   2dd74:	ldr	r2, [sp, #48]	; 0x30
   2dd78:	ldr	r4, [r2, r0]
   2dd7c:	sdiv	r7, r5, r4
   2dd80:	mls	r7, r7, r4, r5
   2dd84:	cmp	r7, #0
   2dd88:	beq	2ddb4 <GetDataSlab+0xb3f0>
   2dd8c:	add	r3, sp, #64	; 0x40
   2dd90:	mov	r2, r6
   2dd94:	ldr	r6, [r9, r0]
   2dd98:	sub	r7, r4, r7
   2dd9c:	ldr	r3, [r3, r0]
   2dda0:	mla	r3, r6, r3, r7
   2dda4:	mov	r6, r2
   2dda8:	add	r5, r3, r5
   2ddac:	add	r6, r2, r3
   2ddb0:	b	2ddd0 <GetDataSlab+0xb40c>
   2ddb4:	ldr	r4, [r9, r0]
   2ddb8:	cmp	r4, #0
   2ddbc:	beq	2ddd0 <GetDataSlab+0xb40c>
   2ddc0:	add	r3, sp, #64	; 0x40
   2ddc4:	ldr	r3, [r3, r0]
   2ddc8:	mla	r5, r3, r4, r5
   2ddcc:	mla	r6, r3, r4, r6
   2ddd0:	subs	sl, sl, #1
   2ddd4:	add	r0, r0, #4
   2ddd8:	bne	2dd48 <GetDataSlab+0xb384>
   2dddc:	b	2ddf0 <GetDataSlab+0xb42c>
   2dde0:	ldr	r2, [sp, #28]
   2dde4:	ldr	r0, [r2, r0]
   2dde8:	add	r6, r6, r0
   2ddec:	add	r5, r0, r5
   2ddf0:	ldr	r0, [sp, #44]	; 0x2c
   2ddf4:	add	r8, lr, r8
   2ddf8:	cmp	r8, r0
   2ddfc:	mov	r0, #0
   2de00:	blt	2dcd0 <GetDataSlab+0xb30c>
   2de04:	b	24900 <GetDataSlab+0x1f3c>
   2de08:	ldr	r3, [r3]
   2de0c:	sub	r9, fp, #72	; 0x48
   2de10:	mov	lr, #0
   2de14:	add	r7, sp, #64	; 0x40
   2de18:	sub	r0, r3, #1
   2de1c:	str	r0, [fp, #-72]	; 0xffffffb8
   2de20:	ldr	r0, [r4]
   2de24:	str	r0, [sp, #36]	; 0x24
   2de28:	str	r0, [sp, #64]	; 0x40
   2de2c:	ldr	r0, [fp, #20]
   2de30:	ldr	sl, [r0]
   2de34:	ldr	r0, [fp, #24]
   2de38:	cmp	r0, #2
   2de3c:	mov	r0, sl
   2de40:	str	sl, [sp, #40]	; 0x28
   2de44:	blt	2deec <GetDataSlab+0xb528>
   2de48:	ldr	r6, [sp, #36]	; 0x24
   2de4c:	ldr	r1, [fp, #8]
   2de50:	mov	r0, #1
   2de54:	mov	lr, #0
   2de58:	mov	r2, sl
   2de5c:	str	sl, [sp, #40]	; 0x28
   2de60:	mov	r8, r6
   2de64:	ldr	r5, [fp, #16]
   2de68:	ldr	r2, [fp, #8]
   2de6c:	mov	r4, #0
   2de70:	ldr	r5, [r5, r0, lsl #2]
   2de74:	str	r6, [r7, r0, lsl #2]
   2de78:	sub	r5, r5, #1
   2de7c:	str	r5, [r9, r0, lsl #2]
   2de80:	ldr	ip, [r2, r0, lsl #2]
   2de84:	mov	r7, ip
   2de88:	mul	r6, r7, r6
   2de8c:	ldr	r7, [r1, -r4, lsl #2]
   2de90:	add	r4, r4, #1
   2de94:	cmp	r0, r4
   2de98:	mul	r5, r5, r7
   2de9c:	bne	2de88 <GetDataSlab+0xb4c4>
   2dea0:	ldr	r4, [fp, #12]
   2dea4:	add	r7, sp, #64	; 0x40
   2dea8:	sub	r9, fp, #72	; 0x48
   2deac:	ldr	r2, [sp, #40]	; 0x28
   2deb0:	add	r1, r1, #4
   2deb4:	str	r6, [r7, r0, lsl #2]
   2deb8:	str	r5, [r9, r0, lsl #2]
   2debc:	ldr	r4, [r4, r0, lsl #2]
   2dec0:	mla	lr, r4, r8, lr
   2dec4:	ldr	r4, [fp, #20]
   2dec8:	mov	r8, r6
   2decc:	mov	r6, ip
   2ded0:	ldr	r4, [r4, r0, lsl #2]
   2ded4:	add	r0, r0, #1
   2ded8:	mul	r2, r4, r2
   2dedc:	ldr	r4, [fp, #24]
   2dee0:	str	r2, [sp, #40]	; 0x28
   2dee4:	cmp	r0, r4
   2dee8:	bne	2de64 <GetDataSlab+0xb4a0>
   2deec:	ldr	r0, [sp, #48]	; 0x30
   2def0:	cmp	r3, #1
   2def4:	add	r5, r0, lr, lsl #1
   2def8:	bne	39af0 <GetDataSlab+0x1712c>
   2defc:	ldr	r0, [sp, #40]	; 0x28
   2df00:	cmp	r0, #1
   2df04:	add	r0, sp, #64	; 0x40
   2df08:	blt	248fc <GetDataSlab+0x1f38>
   2df0c:	orr	r0, r0, #4
   2df10:	ldr	r9, [fp, #12]
   2df14:	ldr	r3, [fp, #20]
   2df18:	add	r1, sp, #104	; 0x68
   2df1c:	mov	r6, #0
   2df20:	str	r0, [sp, #48]	; 0x30
   2df24:	ldr	r0, [fp, #24]
   2df28:	orr	r1, r1, #4
   2df2c:	add	r2, r3, #4
   2df30:	sub	r0, r0, #1
   2df34:	str	r2, [sp, #52]	; 0x34
   2df38:	str	r0, [sp, #28]
   2df3c:	sub	r0, fp, #72	; 0x48
   2df40:	orr	r0, r0, #4
   2df44:	str	r0, [sp, #24]
   2df48:	ldr	r0, [r9], #4
   2df4c:	str	r0, [sp, #44]	; 0x2c
   2df50:	ldr	r7, [sp, #44]	; 0x2c
   2df54:	ldr	r2, [sp, #36]	; 0x24
   2df58:	cmp	sl, #1
   2df5c:	add	r0, r5, r7, lsl #1
   2df60:	add	lr, r7, lr
   2df64:	blt	2dfa4 <GetDataSlab+0xb5e0>
   2df68:	ldr	r2, [sp, #56]	; 0x38
   2df6c:	ldr	r3, [fp, #20]
   2df70:	mov	r4, #0
   2df74:	mov	r5, r0
   2df78:	add	r7, r2, r6, lsl #2
   2df7c:	ldrsh	r2, [r5], #2
   2df80:	str	r2, [r7, r4, lsl #2]
   2df84:	add	r4, r4, #1
   2df88:	ldr	sl, [r3]
   2df8c:	cmp	r4, sl
   2df90:	blt	2df7c <GetDataSlab+0xb5b8>
   2df94:	ldr	r3, [fp, #12]
   2df98:	ldr	r7, [r3]
   2df9c:	ldr	r3, [fp, #8]
   2dfa0:	ldr	r2, [r3]
   2dfa4:	sub	r4, r2, r7
   2dfa8:	str	r6, [sp, #32]
   2dfac:	str	r7, [sp, #44]	; 0x2c
   2dfb0:	add	r5, r0, r4, lsl #1
   2dfb4:	ldr	r0, [fp, #24]
   2dfb8:	add	lr, lr, r4
   2dfbc:	cmp	r0, #2
   2dfc0:	blt	2e06c <GetDataSlab+0xb6a8>
   2dfc4:	ldr	r8, [sp, #28]
   2dfc8:	mov	r0, #0
   2dfcc:	ldr	r4, [r1, r0]
   2dfd0:	ldr	r3, [sp, #52]	; 0x34
   2dfd4:	add	r4, r4, #1
   2dfd8:	str	r4, [r1, r0]
   2dfdc:	ldr	r7, [r3, r0]
   2dfe0:	sdiv	ip, r4, r7
   2dfe4:	mls	r7, ip, r7, r4
   2dfe8:	cmp	r7, #0
   2dfec:	bne	2e05c <GetDataSlab+0xb698>
   2dff0:	mov	r3, #0
   2dff4:	str	r3, [r1, r0]
   2dff8:	ldr	r3, [sp, #48]	; 0x30
   2dffc:	ldr	r4, [r3, r0]
   2e000:	sdiv	r7, lr, r4
   2e004:	mls	r7, r7, r4, lr
   2e008:	cmp	r7, #0
   2e00c:	beq	2e02c <GetDataSlab+0xb668>
   2e010:	add	r3, sp, #64	; 0x40
   2e014:	ldr	r6, [r9, r0]
   2e018:	sub	r7, r4, r7
   2e01c:	ldr	r3, [r3, r0]
   2e020:	mla	r3, r6, r3, r7
   2e024:	add	lr, r3, lr
   2e028:	b	2e048 <GetDataSlab+0xb684>
   2e02c:	ldr	r4, [r9, r0]
   2e030:	cmp	r4, #0
   2e034:	beq	2e04c <GetDataSlab+0xb688>
   2e038:	add	r3, sp, #64	; 0x40
   2e03c:	ldr	r3, [r3, r0]
   2e040:	mla	lr, r3, r4, lr
   2e044:	mul	r3, r3, r4
   2e048:	add	r5, r5, r3, lsl #1
   2e04c:	subs	r8, r8, #1
   2e050:	add	r0, r0, #4
   2e054:	bne	2dfcc <GetDataSlab+0xb608>
   2e058:	b	2e06c <GetDataSlab+0xb6a8>
   2e05c:	ldr	r3, [sp, #24]
   2e060:	ldr	r0, [r3, r0]
   2e064:	add	r5, r5, r0, lsl #1
   2e068:	add	lr, r0, lr
   2e06c:	ldr	r6, [sp, #32]
   2e070:	str	r2, [sp, #36]	; 0x24
   2e074:	ldr	r2, [sp, #40]	; 0x28
   2e078:	mov	r0, #0
   2e07c:	add	r6, sl, r6
   2e080:	cmp	r6, r2
   2e084:	blt	2df50 <GetDataSlab+0xb58c>
   2e088:	b	24900 <GetDataSlab+0x1f3c>
   2e08c:	ldr	r3, [r3]
   2e090:	sub	r9, fp, #72	; 0x48
   2e094:	mov	lr, #0
   2e098:	add	r7, sp, #64	; 0x40
   2e09c:	sub	r0, r3, #1
   2e0a0:	str	r0, [fp, #-72]	; 0xffffffb8
   2e0a4:	ldr	r0, [r4]
   2e0a8:	str	r0, [sp, #36]	; 0x24
   2e0ac:	str	r0, [sp, #64]	; 0x40
   2e0b0:	ldr	r0, [fp, #20]
   2e0b4:	ldr	sl, [r0]
   2e0b8:	ldr	r0, [fp, #24]
   2e0bc:	cmp	r0, #2
   2e0c0:	mov	r0, sl
   2e0c4:	str	sl, [sp, #40]	; 0x28
   2e0c8:	blt	2e170 <GetDataSlab+0xb7ac>
   2e0cc:	ldr	r6, [sp, #36]	; 0x24
   2e0d0:	ldr	r1, [fp, #8]
   2e0d4:	mov	r0, #1
   2e0d8:	mov	lr, #0
   2e0dc:	mov	r2, sl
   2e0e0:	str	sl, [sp, #40]	; 0x28
   2e0e4:	mov	r8, r6
   2e0e8:	ldr	r5, [fp, #16]
   2e0ec:	ldr	r2, [fp, #8]
   2e0f0:	mov	r4, #0
   2e0f4:	ldr	r5, [r5, r0, lsl #2]
   2e0f8:	str	r6, [r7, r0, lsl #2]
   2e0fc:	sub	r5, r5, #1
   2e100:	str	r5, [r9, r0, lsl #2]
   2e104:	ldr	ip, [r2, r0, lsl #2]
   2e108:	mov	r7, ip
   2e10c:	mul	r6, r7, r6
   2e110:	ldr	r7, [r1, -r4, lsl #2]
   2e114:	add	r4, r4, #1
   2e118:	cmp	r0, r4
   2e11c:	mul	r5, r5, r7
   2e120:	bne	2e10c <GetDataSlab+0xb748>
   2e124:	ldr	r4, [fp, #12]
   2e128:	add	r7, sp, #64	; 0x40
   2e12c:	sub	r9, fp, #72	; 0x48
   2e130:	ldr	r2, [sp, #40]	; 0x28
   2e134:	add	r1, r1, #4
   2e138:	str	r6, [r7, r0, lsl #2]
   2e13c:	str	r5, [r9, r0, lsl #2]
   2e140:	ldr	r4, [r4, r0, lsl #2]
   2e144:	mla	lr, r4, r8, lr
   2e148:	ldr	r4, [fp, #20]
   2e14c:	mov	r8, r6
   2e150:	mov	r6, ip
   2e154:	ldr	r4, [r4, r0, lsl #2]
   2e158:	add	r0, r0, #1
   2e15c:	mul	r2, r4, r2
   2e160:	ldr	r4, [fp, #24]
   2e164:	str	r2, [sp, #40]	; 0x28
   2e168:	cmp	r0, r4
   2e16c:	bne	2e0e8 <GetDataSlab+0xb724>
   2e170:	ldr	r0, [sp, #48]	; 0x30
   2e174:	cmp	r3, #1
   2e178:	add	r5, r0, lr, lsl #1
   2e17c:	bne	39cb0 <GetDataSlab+0x172ec>
   2e180:	ldr	r0, [sp, #40]	; 0x28
   2e184:	cmp	r0, #1
   2e188:	add	r0, sp, #64	; 0x40
   2e18c:	blt	248fc <GetDataSlab+0x1f38>
   2e190:	orr	r0, r0, #4
   2e194:	ldr	r9, [fp, #12]
   2e198:	ldr	r3, [fp, #20]
   2e19c:	add	r1, sp, #104	; 0x68
   2e1a0:	mov	r6, #0
   2e1a4:	str	r0, [sp, #48]	; 0x30
   2e1a8:	ldr	r0, [fp, #24]
   2e1ac:	orr	r1, r1, #4
   2e1b0:	add	r2, r3, #4
   2e1b4:	sub	r0, r0, #1
   2e1b8:	str	r2, [sp, #52]	; 0x34
   2e1bc:	str	r0, [sp, #32]
   2e1c0:	sub	r0, fp, #72	; 0x48
   2e1c4:	orr	r0, r0, #4
   2e1c8:	str	r0, [sp, #28]
   2e1cc:	ldr	r0, [r9], #4
   2e1d0:	str	r0, [sp, #44]	; 0x2c
   2e1d4:	ldr	r7, [sp, #44]	; 0x2c
   2e1d8:	cmp	sl, #1
   2e1dc:	add	r0, r5, r7, lsl #1
   2e1e0:	add	lr, r7, lr
   2e1e4:	blt	2e228 <GetDataSlab+0xb864>
   2e1e8:	ldr	r2, [sp, #56]	; 0x38
   2e1ec:	ldr	r3, [fp, #20]
   2e1f0:	mov	r4, #0
   2e1f4:	mov	r5, r0
   2e1f8:	add	r7, r2, r6, lsl #2
   2e1fc:	ldrh	r2, [r5], #2
   2e200:	str	r2, [r7, r4, lsl #2]
   2e204:	add	r4, r4, #1
   2e208:	ldr	sl, [r3]
   2e20c:	cmp	r4, sl
   2e210:	blt	2e1fc <GetDataSlab+0xb838>
   2e214:	ldr	r3, [fp, #12]
   2e218:	ldr	r7, [r3]
   2e21c:	ldr	r3, [fp, #8]
   2e220:	ldr	r2, [r3]
   2e224:	str	r2, [sp, #36]	; 0x24
   2e228:	ldr	r3, [sp, #36]	; 0x24
   2e22c:	mov	r2, r6
   2e230:	str	r7, [sp, #44]	; 0x2c
   2e234:	sub	r4, r3, r7
   2e238:	add	r5, r0, r4, lsl #1
   2e23c:	ldr	r0, [fp, #24]
   2e240:	add	lr, lr, r4
   2e244:	cmp	r0, #2
   2e248:	blt	2e2f4 <GetDataSlab+0xb930>
   2e24c:	ldr	r8, [sp, #32]
   2e250:	mov	r0, #0
   2e254:	ldr	r4, [r1, r0]
   2e258:	ldr	r3, [sp, #52]	; 0x34
   2e25c:	add	r4, r4, #1
   2e260:	str	r4, [r1, r0]
   2e264:	ldr	r7, [r3, r0]
   2e268:	sdiv	ip, r4, r7
   2e26c:	mls	r7, ip, r7, r4
   2e270:	cmp	r7, #0
   2e274:	bne	2e2e4 <GetDataSlab+0xb920>
   2e278:	mov	r3, #0
   2e27c:	str	r3, [r1, r0]
   2e280:	ldr	r3, [sp, #48]	; 0x30
   2e284:	ldr	r4, [r3, r0]
   2e288:	sdiv	r7, lr, r4
   2e28c:	mls	r7, r7, r4, lr
   2e290:	cmp	r7, #0
   2e294:	beq	2e2b4 <GetDataSlab+0xb8f0>
   2e298:	add	r3, sp, #64	; 0x40
   2e29c:	ldr	r6, [r9, r0]
   2e2a0:	sub	r7, r4, r7
   2e2a4:	ldr	r3, [r3, r0]
   2e2a8:	mla	r3, r6, r3, r7
   2e2ac:	add	lr, r3, lr
   2e2b0:	b	2e2d0 <GetDataSlab+0xb90c>
   2e2b4:	ldr	r4, [r9, r0]
   2e2b8:	cmp	r4, #0
   2e2bc:	beq	2e2d4 <GetDataSlab+0xb910>
   2e2c0:	add	r3, sp, #64	; 0x40
   2e2c4:	ldr	r3, [r3, r0]
   2e2c8:	mla	lr, r3, r4, lr
   2e2cc:	mul	r3, r3, r4
   2e2d0:	add	r5, r5, r3, lsl #1
   2e2d4:	subs	r8, r8, #1
   2e2d8:	add	r0, r0, #4
   2e2dc:	bne	2e254 <GetDataSlab+0xb890>
   2e2e0:	b	2e2f4 <GetDataSlab+0xb930>
   2e2e4:	ldr	r3, [sp, #28]
   2e2e8:	ldr	r0, [r3, r0]
   2e2ec:	add	r5, r5, r0, lsl #1
   2e2f0:	add	lr, r0, lr
   2e2f4:	ldr	r0, [sp, #40]	; 0x28
   2e2f8:	mov	r6, r2
   2e2fc:	add	r6, sl, r2
   2e300:	cmp	r6, r0
   2e304:	mov	r0, #0
   2e308:	blt	2e1d4 <GetDataSlab+0xb810>
   2e30c:	b	24900 <GetDataSlab+0x1f3c>
   2e310:	ldr	r3, [r3]
   2e314:	mov	r5, #0
   2e318:	add	r7, sp, #64	; 0x40
   2e31c:	sub	r0, r3, #1
   2e320:	str	r0, [fp, #-72]	; 0xffffffb8
   2e324:	ldr	r0, [r4]
   2e328:	str	r0, [sp, #40]	; 0x28
   2e32c:	str	r0, [sp, #64]	; 0x40
   2e330:	ldr	r0, [fp, #20]
   2e334:	ldr	lr, [r0]
   2e338:	ldr	r0, [fp, #24]
   2e33c:	cmp	r0, #2
   2e340:	mov	r0, lr
   2e344:	str	lr, [sp, #44]	; 0x2c
   2e348:	blt	2e3fc <GetDataSlab+0xba38>
   2e34c:	ldr	r6, [sp, #40]	; 0x28
   2e350:	mov	r9, r4
   2e354:	mov	r0, #1
   2e358:	mov	r5, #0
   2e35c:	mov	r1, r4
   2e360:	mov	r2, lr
   2e364:	str	lr, [sp, #44]	; 0x2c
   2e368:	mov	r8, r6
   2e36c:	mov	r2, r5
   2e370:	ldr	r5, [fp, #16]
   2e374:	mov	r4, #0
   2e378:	ldr	r5, [r5, r0, lsl #2]
   2e37c:	str	r6, [r7, r0, lsl #2]
   2e380:	sub	r7, fp, #72	; 0x48
   2e384:	sub	r5, r5, #1
   2e388:	str	r5, [r7, r0, lsl #2]
   2e38c:	ldr	ip, [r9, r0, lsl #2]
   2e390:	mov	r7, ip
   2e394:	mul	r6, r7, r6
   2e398:	ldr	r7, [r1, -r4, lsl #2]
   2e39c:	add	r4, r4, #1
   2e3a0:	cmp	r0, r4
   2e3a4:	mul	r5, r5, r7
   2e3a8:	bne	2e394 <GetDataSlab+0xb9d0>
   2e3ac:	sub	r4, fp, #72	; 0x48
   2e3b0:	add	r7, sp, #64	; 0x40
   2e3b4:	add	r1, r1, #4
   2e3b8:	str	r5, [r4, r0, lsl #2]
   2e3bc:	ldr	r4, [fp, #12]
   2e3c0:	str	r6, [r7, r0, lsl #2]
   2e3c4:	mov	r5, r2
   2e3c8:	ldr	r4, [r4, r0, lsl #2]
   2e3cc:	mla	r5, r4, r8, r2
   2e3d0:	ldr	r4, [fp, #20]
   2e3d4:	ldr	r2, [sp, #44]	; 0x2c
   2e3d8:	mov	r8, r6
   2e3dc:	mov	r6, ip
   2e3e0:	ldr	r4, [r4, r0, lsl #2]
   2e3e4:	add	r0, r0, #1
   2e3e8:	mul	r2, r4, r2
   2e3ec:	ldr	r4, [fp, #24]
   2e3f0:	str	r2, [sp, #44]	; 0x2c
   2e3f4:	cmp	r0, r4
   2e3f8:	bne	2e36c <GetDataSlab+0xb9a8>
   2e3fc:	ldr	r0, [sp, #48]	; 0x30
   2e400:	cmp	r3, #1
   2e404:	add	r6, r0, r5, lsl #2
   2e408:	bne	39e6c <GetDataSlab+0x174a8>
   2e40c:	ldr	r0, [sp, #44]	; 0x2c
   2e410:	ldr	r9, [fp, #12]
   2e414:	cmp	r0, #1
   2e418:	add	r0, sp, #64	; 0x40
   2e41c:	blt	248fc <GetDataSlab+0x1f38>
   2e420:	orr	r0, r0, #4
   2e424:	ldr	r3, [fp, #20]
   2e428:	add	r1, sp, #104	; 0x68
   2e42c:	mov	r8, #0
   2e430:	str	r0, [sp, #48]	; 0x30
   2e434:	ldr	r0, [fp, #24]
   2e438:	orr	r1, r1, #4
   2e43c:	add	r2, r3, #4
   2e440:	sub	r0, r0, #1
   2e444:	str	r2, [sp, #52]	; 0x34
   2e448:	str	r0, [sp, #32]
   2e44c:	sub	r0, fp, #72	; 0x48
   2e450:	orr	r0, r0, #4
   2e454:	str	r0, [sp, #28]
   2e458:	ldr	r0, [r9], #4
   2e45c:	str	r0, [sp, #36]	; 0x24
   2e460:	ldr	r2, [sp, #36]	; 0x24
   2e464:	ldr	r3, [fp, #12]
   2e468:	ldr	r7, [sp, #40]	; 0x28
   2e46c:	cmp	lr, #1
   2e470:	add	r0, r2, r5
   2e474:	add	r5, r6, r2, lsl #2
   2e478:	ldr	r6, [fp, #20]
   2e47c:	blt	2e4b0 <GetDataSlab+0xbaec>
   2e480:	ldr	r2, [sp, #56]	; 0x38
   2e484:	mov	r4, #0
   2e488:	add	r7, r2, r8, lsl #2
   2e48c:	ldr	r2, [r5, r4, lsl #2]
   2e490:	str	r2, [r7, r4, lsl #2]
   2e494:	add	r4, r4, #1
   2e498:	ldr	lr, [r6]
   2e49c:	cmp	r4, lr
   2e4a0:	blt	2e48c <GetDataSlab+0xbac8>
   2e4a4:	ldr	r2, [r3]
   2e4a8:	ldr	r3, [fp, #8]
   2e4ac:	ldr	r7, [r3]
   2e4b0:	str	r7, [sp, #40]	; 0x28
   2e4b4:	sub	r7, r7, r2
   2e4b8:	str	r2, [sp, #36]	; 0x24
   2e4bc:	add	r6, r5, r7, lsl #2
   2e4c0:	add	r5, r0, r7
   2e4c4:	ldr	r0, [fp, #24]
   2e4c8:	cmp	r0, #2
   2e4cc:	blt	2e584 <GetDataSlab+0xbbc0>
   2e4d0:	ldr	sl, [sp, #32]
   2e4d4:	mov	r0, #0
   2e4d8:	ldr	r4, [r1, r0]
   2e4dc:	ldr	r2, [sp, #52]	; 0x34
   2e4e0:	add	r4, r4, #1
   2e4e4:	str	r4, [r1, r0]
   2e4e8:	ldr	r7, [r2, r0]
   2e4ec:	sdiv	ip, r4, r7
   2e4f0:	mls	r7, ip, r7, r4
   2e4f4:	cmp	r7, #0
   2e4f8:	bne	2e574 <GetDataSlab+0xbbb0>
   2e4fc:	mov	r2, #0
   2e500:	str	r2, [r1, r0]
   2e504:	ldr	r2, [sp, #48]	; 0x30
   2e508:	ldr	r4, [r2, r0]
   2e50c:	sdiv	r7, r5, r4
   2e510:	mls	r7, r7, r4, r5
   2e514:	cmp	r7, #0
   2e518:	beq	2e544 <GetDataSlab+0xbb80>
   2e51c:	add	r3, sp, #64	; 0x40
   2e520:	mov	r2, r6
   2e524:	ldr	r6, [r9, r0]
   2e528:	sub	r7, r4, r7
   2e52c:	ldr	r3, [r3, r0]
   2e530:	mla	r3, r6, r3, r7
   2e534:	mov	r6, r2
   2e538:	add	r5, r3, r5
   2e53c:	add	r6, r2, r3, lsl #2
   2e540:	b	2e564 <GetDataSlab+0xbba0>
   2e544:	ldr	r4, [r9, r0]
   2e548:	cmp	r4, #0
   2e54c:	beq	2e564 <GetDataSlab+0xbba0>
   2e550:	add	r3, sp, #64	; 0x40
   2e554:	ldr	r3, [r3, r0]
   2e558:	mla	r5, r3, r4, r5
   2e55c:	mul	r3, r3, r4
   2e560:	add	r6, r6, r3, lsl #2
   2e564:	subs	sl, sl, #1
   2e568:	add	r0, r0, #4
   2e56c:	bne	2e4d8 <GetDataSlab+0xbb14>
   2e570:	b	2e584 <GetDataSlab+0xbbc0>
   2e574:	ldr	r2, [sp, #28]
   2e578:	ldr	r0, [r2, r0]
   2e57c:	add	r6, r6, r0, lsl #2
   2e580:	add	r5, r0, r5
   2e584:	ldr	r2, [sp, #44]	; 0x2c
   2e588:	add	r8, lr, r8
   2e58c:	mov	r0, #0
   2e590:	cmp	r8, r2
   2e594:	blt	2e460 <GetDataSlab+0xba9c>
   2e598:	b	24900 <GetDataSlab+0x1f3c>
   2e59c:	ldr	r3, [r3]
   2e5a0:	mov	r5, #0
   2e5a4:	add	r7, sp, #64	; 0x40
   2e5a8:	sub	r0, r3, #1
   2e5ac:	str	r0, [fp, #-72]	; 0xffffffb8
   2e5b0:	ldr	r0, [r4]
   2e5b4:	str	r0, [sp, #40]	; 0x28
   2e5b8:	str	r0, [sp, #64]	; 0x40
   2e5bc:	ldr	r0, [fp, #20]
   2e5c0:	ldr	lr, [r0]
   2e5c4:	ldr	r0, [fp, #24]
   2e5c8:	cmp	r0, #2
   2e5cc:	mov	r0, lr
   2e5d0:	str	lr, [sp, #44]	; 0x2c
   2e5d4:	blt	2e688 <GetDataSlab+0xbcc4>
   2e5d8:	ldr	r6, [sp, #40]	; 0x28
   2e5dc:	mov	r9, r4
   2e5e0:	mov	r0, #1
   2e5e4:	mov	r5, #0
   2e5e8:	mov	r1, r4
   2e5ec:	mov	r2, lr
   2e5f0:	str	lr, [sp, #44]	; 0x2c
   2e5f4:	mov	r8, r6
   2e5f8:	mov	r2, r5
   2e5fc:	ldr	r5, [fp, #16]
   2e600:	mov	r4, #0
   2e604:	ldr	r5, [r5, r0, lsl #2]
   2e608:	str	r6, [r7, r0, lsl #2]
   2e60c:	sub	r7, fp, #72	; 0x48
   2e610:	sub	r5, r5, #1
   2e614:	str	r5, [r7, r0, lsl #2]
   2e618:	ldr	ip, [r9, r0, lsl #2]
   2e61c:	mov	r7, ip
   2e620:	mul	r6, r7, r6
   2e624:	ldr	r7, [r1, -r4, lsl #2]
   2e628:	add	r4, r4, #1
   2e62c:	cmp	r0, r4
   2e630:	mul	r5, r5, r7
   2e634:	bne	2e620 <GetDataSlab+0xbc5c>
   2e638:	sub	r4, fp, #72	; 0x48
   2e63c:	add	r7, sp, #64	; 0x40
   2e640:	add	r1, r1, #4
   2e644:	str	r5, [r4, r0, lsl #2]
   2e648:	ldr	r4, [fp, #12]
   2e64c:	str	r6, [r7, r0, lsl #2]
   2e650:	mov	r5, r2
   2e654:	ldr	r4, [r4, r0, lsl #2]
   2e658:	mla	r5, r4, r8, r2
   2e65c:	ldr	r4, [fp, #20]
   2e660:	ldr	r2, [sp, #44]	; 0x2c
   2e664:	mov	r8, r6
   2e668:	mov	r6, ip
   2e66c:	ldr	r4, [r4, r0, lsl #2]
   2e670:	add	r0, r0, #1
   2e674:	mul	r2, r4, r2
   2e678:	ldr	r4, [fp, #24]
   2e67c:	str	r2, [sp, #44]	; 0x2c
   2e680:	cmp	r0, r4
   2e684:	bne	2e5f8 <GetDataSlab+0xbc34>
   2e688:	ldr	r0, [sp, #48]	; 0x30
   2e68c:	cmp	r3, #1
   2e690:	add	r6, r0, r5, lsl #2
   2e694:	bne	3a030 <GetDataSlab+0x1766c>
   2e698:	ldr	r0, [sp, #44]	; 0x2c
   2e69c:	ldr	r9, [fp, #12]
   2e6a0:	cmp	r0, #1
   2e6a4:	add	r0, sp, #64	; 0x40
   2e6a8:	blt	248fc <GetDataSlab+0x1f38>
   2e6ac:	orr	r0, r0, #4
   2e6b0:	ldr	r3, [fp, #20]
   2e6b4:	add	r1, sp, #104	; 0x68
   2e6b8:	mov	r8, #0
   2e6bc:	str	r0, [sp, #48]	; 0x30
   2e6c0:	ldr	r0, [fp, #24]
   2e6c4:	orr	r1, r1, #4
   2e6c8:	add	r2, r3, #4
   2e6cc:	sub	r0, r0, #1
   2e6d0:	str	r2, [sp, #52]	; 0x34
   2e6d4:	str	r0, [sp, #32]
   2e6d8:	sub	r0, fp, #72	; 0x48
   2e6dc:	orr	r0, r0, #4
   2e6e0:	str	r0, [sp, #28]
   2e6e4:	ldr	r0, [r9], #4
   2e6e8:	str	r0, [sp, #36]	; 0x24
   2e6ec:	ldr	r2, [sp, #36]	; 0x24
   2e6f0:	ldr	r3, [fp, #12]
   2e6f4:	ldr	r7, [sp, #40]	; 0x28
   2e6f8:	cmp	lr, #1
   2e6fc:	add	r0, r2, r5
   2e700:	add	r5, r6, r2, lsl #2
   2e704:	ldr	r6, [fp, #20]
   2e708:	blt	2e73c <GetDataSlab+0xbd78>
   2e70c:	ldr	r2, [sp, #56]	; 0x38
   2e710:	mov	r4, #0
   2e714:	add	r7, r2, r8, lsl #2
   2e718:	ldr	r2, [r5, r4, lsl #2]
   2e71c:	str	r2, [r7, r4, lsl #2]
   2e720:	add	r4, r4, #1
   2e724:	ldr	lr, [r6]
   2e728:	cmp	r4, lr
   2e72c:	blt	2e718 <GetDataSlab+0xbd54>
   2e730:	ldr	r2, [r3]
   2e734:	ldr	r3, [fp, #8]
   2e738:	ldr	r7, [r3]
   2e73c:	str	r7, [sp, #40]	; 0x28
   2e740:	sub	r7, r7, r2
   2e744:	str	r2, [sp, #36]	; 0x24
   2e748:	add	r6, r5, r7, lsl #2
   2e74c:	add	r5, r0, r7
   2e750:	ldr	r0, [fp, #24]
   2e754:	cmp	r0, #2
   2e758:	blt	2e810 <GetDataSlab+0xbe4c>
   2e75c:	ldr	sl, [sp, #32]
   2e760:	mov	r0, #0
   2e764:	ldr	r4, [r1, r0]
   2e768:	ldr	r2, [sp, #52]	; 0x34
   2e76c:	add	r4, r4, #1
   2e770:	str	r4, [r1, r0]
   2e774:	ldr	r7, [r2, r0]
   2e778:	sdiv	ip, r4, r7
   2e77c:	mls	r7, ip, r7, r4
   2e780:	cmp	r7, #0
   2e784:	bne	2e800 <GetDataSlab+0xbe3c>
   2e788:	mov	r2, #0
   2e78c:	str	r2, [r1, r0]
   2e790:	ldr	r2, [sp, #48]	; 0x30
   2e794:	ldr	r4, [r2, r0]
   2e798:	sdiv	r7, r5, r4
   2e79c:	mls	r7, r7, r4, r5
   2e7a0:	cmp	r7, #0
   2e7a4:	beq	2e7d0 <GetDataSlab+0xbe0c>
   2e7a8:	add	r3, sp, #64	; 0x40
   2e7ac:	mov	r2, r6
   2e7b0:	ldr	r6, [r9, r0]
   2e7b4:	sub	r7, r4, r7
   2e7b8:	ldr	r3, [r3, r0]
   2e7bc:	mla	r3, r6, r3, r7
   2e7c0:	mov	r6, r2
   2e7c4:	add	r5, r3, r5
   2e7c8:	add	r6, r2, r3, lsl #2
   2e7cc:	b	2e7f0 <GetDataSlab+0xbe2c>
   2e7d0:	ldr	r4, [r9, r0]
   2e7d4:	cmp	r4, #0
   2e7d8:	beq	2e7f0 <GetDataSlab+0xbe2c>
   2e7dc:	add	r3, sp, #64	; 0x40
   2e7e0:	ldr	r3, [r3, r0]
   2e7e4:	mla	r5, r3, r4, r5
   2e7e8:	mul	r3, r3, r4
   2e7ec:	add	r6, r6, r3, lsl #2
   2e7f0:	subs	sl, sl, #1
   2e7f4:	add	r0, r0, #4
   2e7f8:	bne	2e764 <GetDataSlab+0xbda0>
   2e7fc:	b	2e810 <GetDataSlab+0xbe4c>
   2e800:	ldr	r2, [sp, #28]
   2e804:	ldr	r0, [r2, r0]
   2e808:	add	r6, r6, r0, lsl #2
   2e80c:	add	r5, r0, r5
   2e810:	ldr	r2, [sp, #44]	; 0x2c
   2e814:	add	r8, lr, r8
   2e818:	mov	r0, #0
   2e81c:	cmp	r8, r2
   2e820:	blt	2e6ec <GetDataSlab+0xbd28>
   2e824:	b	24900 <GetDataSlab+0x1f3c>
   2e828:	ldr	r3, [r3]
   2e82c:	sub	r9, fp, #72	; 0x48
   2e830:	mov	lr, #0
   2e834:	add	r7, sp, #64	; 0x40
   2e838:	sub	r0, r3, #1
   2e83c:	str	r0, [fp, #-72]	; 0xffffffb8
   2e840:	ldr	r0, [r4]
   2e844:	str	r0, [sp, #36]	; 0x24
   2e848:	str	r0, [sp, #64]	; 0x40
   2e84c:	ldr	r0, [fp, #20]
   2e850:	ldr	sl, [r0]
   2e854:	ldr	r0, [fp, #24]
   2e858:	cmp	r0, #2
   2e85c:	mov	r0, sl
   2e860:	str	sl, [sp, #40]	; 0x28
   2e864:	blt	2e90c <GetDataSlab+0xbf48>
   2e868:	ldr	r6, [sp, #36]	; 0x24
   2e86c:	ldr	r1, [fp, #8]
   2e870:	mov	r0, #1
   2e874:	mov	lr, #0
   2e878:	mov	r2, sl
   2e87c:	str	sl, [sp, #40]	; 0x28
   2e880:	mov	r8, r6
   2e884:	ldr	r5, [fp, #16]
   2e888:	ldr	r2, [fp, #8]
   2e88c:	mov	r4, #0
   2e890:	ldr	r5, [r5, r0, lsl #2]
   2e894:	str	r6, [r7, r0, lsl #2]
   2e898:	sub	r5, r5, #1
   2e89c:	str	r5, [r9, r0, lsl #2]
   2e8a0:	ldr	ip, [r2, r0, lsl #2]
   2e8a4:	mov	r7, ip
   2e8a8:	mul	r6, r7, r6
   2e8ac:	ldr	r7, [r1, -r4, lsl #2]
   2e8b0:	add	r4, r4, #1
   2e8b4:	cmp	r0, r4
   2e8b8:	mul	r5, r5, r7
   2e8bc:	bne	2e8a8 <GetDataSlab+0xbee4>
   2e8c0:	ldr	r4, [fp, #12]
   2e8c4:	add	r7, sp, #64	; 0x40
   2e8c8:	sub	r9, fp, #72	; 0x48
   2e8cc:	ldr	r2, [sp, #40]	; 0x28
   2e8d0:	add	r1, r1, #4
   2e8d4:	str	r6, [r7, r0, lsl #2]
   2e8d8:	str	r5, [r9, r0, lsl #2]
   2e8dc:	ldr	r4, [r4, r0, lsl #2]
   2e8e0:	mla	lr, r4, r8, lr
   2e8e4:	ldr	r4, [fp, #20]
   2e8e8:	mov	r8, r6
   2e8ec:	mov	r6, ip
   2e8f0:	ldr	r4, [r4, r0, lsl #2]
   2e8f4:	add	r0, r0, #1
   2e8f8:	mul	r2, r4, r2
   2e8fc:	ldr	r4, [fp, #24]
   2e900:	str	r2, [sp, #40]	; 0x28
   2e904:	cmp	r0, r4
   2e908:	bne	2e884 <GetDataSlab+0xbec0>
   2e90c:	ldr	r0, [sp, #48]	; 0x30
   2e910:	cmp	r3, #1
   2e914:	add	r5, r0, lr, lsl #2
   2e918:	bne	3a1f4 <GetDataSlab+0x17830>
   2e91c:	ldr	r0, [sp, #40]	; 0x28
   2e920:	cmp	r0, #1
   2e924:	add	r0, sp, #64	; 0x40
   2e928:	blt	248fc <GetDataSlab+0x1f38>
   2e92c:	orr	r0, r0, #4
   2e930:	ldr	r8, [fp, #12]
   2e934:	ldr	r3, [fp, #20]
   2e938:	add	r1, sp, #104	; 0x68
   2e93c:	str	r0, [sp, #48]	; 0x30
   2e940:	ldr	r0, [fp, #24]
   2e944:	orr	r1, r1, #4
   2e948:	str	r1, [sp, #24]
   2e94c:	mov	r1, #0
   2e950:	add	r2, r3, #4
   2e954:	sub	r0, r0, #1
   2e958:	str	r2, [sp, #52]	; 0x34
   2e95c:	str	r0, [sp, #28]
   2e960:	sub	r0, fp, #72	; 0x48
   2e964:	orr	r0, r0, #4
   2e968:	str	r0, [sp, #20]
   2e96c:	ldr	r0, [r8], #4
   2e970:	str	r0, [sp, #44]	; 0x2c
   2e974:	ldr	r3, [sp, #44]	; 0x2c
   2e978:	ldr	r6, [fp, #8]
   2e97c:	ldr	r2, [sp, #36]	; 0x24
   2e980:	cmp	sl, #1
   2e984:	add	r0, r5, r3, lsl #2
   2e988:	add	lr, r3, lr
   2e98c:	blt	2e9d4 <GetDataSlab+0xc010>
   2e990:	ldr	r2, [sp, #56]	; 0x38
   2e994:	ldr	r3, [fp, #20]
   2e998:	mov	r4, #0
   2e99c:	mov	r5, r0
   2e9a0:	add	r7, r2, r1, lsl #2
   2e9a4:	vldr	s0, [r5]
   2e9a8:	add	r5, r5, #4
   2e9ac:	vcvt.u32.f32	s0, s0
   2e9b0:	vmov	r2, s0
   2e9b4:	str	r2, [r7, r4, lsl #2]
   2e9b8:	add	r4, r4, #1
   2e9bc:	ldr	sl, [r3]
   2e9c0:	cmp	r4, sl
   2e9c4:	blt	2e9a4 <GetDataSlab+0xbfe0>
   2e9c8:	ldr	r3, [fp, #12]
   2e9cc:	ldr	r2, [r6]
   2e9d0:	ldr	r3, [r3]
   2e9d4:	sub	r4, r2, r3
   2e9d8:	str	r1, [sp, #32]
   2e9dc:	str	r3, [sp, #44]	; 0x2c
   2e9e0:	add	r5, r0, r4, lsl #2
   2e9e4:	ldr	r0, [fp, #24]
   2e9e8:	add	lr, lr, r4
   2e9ec:	cmp	r0, #2
   2e9f0:	blt	2eaa0 <GetDataSlab+0xc0dc>
   2e9f4:	ldr	r9, [sp, #28]
   2e9f8:	ldr	r1, [sp, #24]
   2e9fc:	mov	r0, #0
   2ea00:	ldr	r4, [r1, r0]
   2ea04:	ldr	r3, [sp, #52]	; 0x34
   2ea08:	add	r4, r4, #1
   2ea0c:	str	r4, [r1, r0]
   2ea10:	ldr	r7, [r3, r0]
   2ea14:	sdiv	ip, r4, r7
   2ea18:	mls	r7, ip, r7, r4
   2ea1c:	cmp	r7, #0
   2ea20:	bne	2ea90 <GetDataSlab+0xc0cc>
   2ea24:	mov	r3, #0
   2ea28:	str	r3, [r1, r0]
   2ea2c:	ldr	r3, [sp, #48]	; 0x30
   2ea30:	ldr	r4, [r3, r0]
   2ea34:	sdiv	r7, lr, r4
   2ea38:	mls	r7, r7, r4, lr
   2ea3c:	cmp	r7, #0
   2ea40:	beq	2ea60 <GetDataSlab+0xc09c>
   2ea44:	add	r3, sp, #64	; 0x40
   2ea48:	ldr	r6, [r8, r0]
   2ea4c:	sub	r7, r4, r7
   2ea50:	ldr	r3, [r3, r0]
   2ea54:	mla	r3, r6, r3, r7
   2ea58:	add	lr, r3, lr
   2ea5c:	b	2ea7c <GetDataSlab+0xc0b8>
   2ea60:	ldr	r4, [r8, r0]
   2ea64:	cmp	r4, #0
   2ea68:	beq	2ea80 <GetDataSlab+0xc0bc>
   2ea6c:	add	r3, sp, #64	; 0x40
   2ea70:	ldr	r3, [r3, r0]
   2ea74:	mla	lr, r3, r4, lr
   2ea78:	mul	r3, r3, r4
   2ea7c:	add	r5, r5, r3, lsl #2
   2ea80:	subs	r9, r9, #1
   2ea84:	add	r0, r0, #4
   2ea88:	bne	2ea00 <GetDataSlab+0xc03c>
   2ea8c:	b	2eaa0 <GetDataSlab+0xc0dc>
   2ea90:	ldr	r3, [sp, #20]
   2ea94:	ldr	r0, [r3, r0]
   2ea98:	add	r5, r5, r0, lsl #2
   2ea9c:	add	lr, r0, lr
   2eaa0:	ldr	r1, [sp, #32]
   2eaa4:	str	r2, [sp, #36]	; 0x24
   2eaa8:	ldr	r2, [sp, #40]	; 0x28
   2eaac:	mov	r0, #0
   2eab0:	add	r1, sl, r1
   2eab4:	cmp	r1, r2
   2eab8:	blt	2e974 <GetDataSlab+0xbfb0>
   2eabc:	b	24900 <GetDataSlab+0x1f3c>
   2eac0:	ldr	r3, [r3]
   2eac4:	sub	r9, fp, #72	; 0x48
   2eac8:	mov	lr, #0
   2eacc:	add	r7, sp, #64	; 0x40
   2ead0:	sub	r0, r3, #1
   2ead4:	str	r0, [fp, #-72]	; 0xffffffb8
   2ead8:	ldr	r0, [r4]
   2eadc:	str	r0, [sp, #36]	; 0x24
   2eae0:	str	r0, [sp, #64]	; 0x40
   2eae4:	ldr	r0, [fp, #20]
   2eae8:	ldr	sl, [r0]
   2eaec:	ldr	r0, [fp, #24]
   2eaf0:	cmp	r0, #2
   2eaf4:	mov	r0, sl
   2eaf8:	str	sl, [sp, #40]	; 0x28
   2eafc:	blt	2eba4 <GetDataSlab+0xc1e0>
   2eb00:	ldr	r6, [sp, #36]	; 0x24
   2eb04:	ldr	r1, [fp, #8]
   2eb08:	mov	r0, #1
   2eb0c:	mov	lr, #0
   2eb10:	mov	r2, sl
   2eb14:	str	sl, [sp, #40]	; 0x28
   2eb18:	mov	r8, r6
   2eb1c:	ldr	r5, [fp, #16]
   2eb20:	ldr	r2, [fp, #8]
   2eb24:	mov	r4, #0
   2eb28:	ldr	r5, [r5, r0, lsl #2]
   2eb2c:	str	r6, [r7, r0, lsl #2]
   2eb30:	sub	r5, r5, #1
   2eb34:	str	r5, [r9, r0, lsl #2]
   2eb38:	ldr	ip, [r2, r0, lsl #2]
   2eb3c:	mov	r7, ip
   2eb40:	mul	r6, r7, r6
   2eb44:	ldr	r7, [r1, -r4, lsl #2]
   2eb48:	add	r4, r4, #1
   2eb4c:	cmp	r0, r4
   2eb50:	mul	r5, r5, r7
   2eb54:	bne	2eb40 <GetDataSlab+0xc17c>
   2eb58:	ldr	r4, [fp, #12]
   2eb5c:	add	r7, sp, #64	; 0x40
   2eb60:	sub	r9, fp, #72	; 0x48
   2eb64:	ldr	r2, [sp, #40]	; 0x28
   2eb68:	add	r1, r1, #4
   2eb6c:	str	r6, [r7, r0, lsl #2]
   2eb70:	str	r5, [r9, r0, lsl #2]
   2eb74:	ldr	r4, [r4, r0, lsl #2]
   2eb78:	mla	lr, r4, r8, lr
   2eb7c:	ldr	r4, [fp, #20]
   2eb80:	mov	r8, r6
   2eb84:	mov	r6, ip
   2eb88:	ldr	r4, [r4, r0, lsl #2]
   2eb8c:	add	r0, r0, #1
   2eb90:	mul	r2, r4, r2
   2eb94:	ldr	r4, [fp, #24]
   2eb98:	str	r2, [sp, #40]	; 0x28
   2eb9c:	cmp	r0, r4
   2eba0:	bne	2eb1c <GetDataSlab+0xc158>
   2eba4:	ldr	r0, [sp, #48]	; 0x30
   2eba8:	cmp	r3, #1
   2ebac:	add	r5, r0, lr, lsl #3
   2ebb0:	bne	3a3c4 <GetDataSlab+0x17a00>
   2ebb4:	ldr	r0, [sp, #40]	; 0x28
   2ebb8:	cmp	r0, #1
   2ebbc:	add	r0, sp, #64	; 0x40
   2ebc0:	blt	248fc <GetDataSlab+0x1f38>
   2ebc4:	orr	r0, r0, #4
   2ebc8:	ldr	r8, [fp, #12]
   2ebcc:	ldr	r3, [fp, #20]
   2ebd0:	add	r1, sp, #104	; 0x68
   2ebd4:	str	r0, [sp, #48]	; 0x30
   2ebd8:	ldr	r0, [fp, #24]
   2ebdc:	orr	r1, r1, #4
   2ebe0:	str	r1, [sp, #24]
   2ebe4:	mov	r1, #0
   2ebe8:	add	r2, r3, #4
   2ebec:	sub	r0, r0, #1
   2ebf0:	str	r2, [sp, #52]	; 0x34
   2ebf4:	str	r0, [sp, #28]
   2ebf8:	sub	r0, fp, #72	; 0x48
   2ebfc:	orr	r0, r0, #4
   2ec00:	str	r0, [sp, #20]
   2ec04:	ldr	r0, [r8], #4
   2ec08:	str	r0, [sp, #44]	; 0x2c
   2ec0c:	ldr	r3, [sp, #44]	; 0x2c
   2ec10:	ldr	r6, [fp, #8]
   2ec14:	ldr	r2, [sp, #36]	; 0x24
   2ec18:	cmp	sl, #1
   2ec1c:	add	r0, r5, r3, lsl #3
   2ec20:	add	lr, r3, lr
   2ec24:	blt	2ec6c <GetDataSlab+0xc2a8>
   2ec28:	ldr	r2, [sp, #56]	; 0x38
   2ec2c:	ldr	r3, [fp, #20]
   2ec30:	mov	r4, #0
   2ec34:	mov	r5, r0
   2ec38:	add	r7, r2, r1, lsl #2
   2ec3c:	vldr	d16, [r5]
   2ec40:	add	r5, r5, #8
   2ec44:	vcvt.u32.f64	s0, d16
   2ec48:	vmov	r2, s0
   2ec4c:	str	r2, [r7, r4, lsl #2]
   2ec50:	add	r4, r4, #1
   2ec54:	ldr	sl, [r3]
   2ec58:	cmp	r4, sl
   2ec5c:	blt	2ec3c <GetDataSlab+0xc278>
   2ec60:	ldr	r3, [fp, #12]
   2ec64:	ldr	r2, [r6]
   2ec68:	ldr	r3, [r3]
   2ec6c:	sub	r4, r2, r3
   2ec70:	str	r1, [sp, #32]
   2ec74:	str	r3, [sp, #44]	; 0x2c
   2ec78:	add	r5, r0, r4, lsl #3
   2ec7c:	ldr	r0, [fp, #24]
   2ec80:	add	lr, lr, r4
   2ec84:	cmp	r0, #2
   2ec88:	blt	2ed38 <GetDataSlab+0xc374>
   2ec8c:	ldr	r9, [sp, #28]
   2ec90:	ldr	r1, [sp, #24]
   2ec94:	mov	r0, #0
   2ec98:	ldr	r4, [r1, r0]
   2ec9c:	ldr	r3, [sp, #52]	; 0x34
   2eca0:	add	r4, r4, #1
   2eca4:	str	r4, [r1, r0]
   2eca8:	ldr	r7, [r3, r0]
   2ecac:	sdiv	ip, r4, r7
   2ecb0:	mls	r7, ip, r7, r4
   2ecb4:	cmp	r7, #0
   2ecb8:	bne	2ed28 <GetDataSlab+0xc364>
   2ecbc:	mov	r3, #0
   2ecc0:	str	r3, [r1, r0]
   2ecc4:	ldr	r3, [sp, #48]	; 0x30
   2ecc8:	ldr	r4, [r3, r0]
   2eccc:	sdiv	r7, lr, r4
   2ecd0:	mls	r7, r7, r4, lr
   2ecd4:	cmp	r7, #0
   2ecd8:	beq	2ecf8 <GetDataSlab+0xc334>
   2ecdc:	add	r3, sp, #64	; 0x40
   2ece0:	ldr	r6, [r8, r0]
   2ece4:	sub	r7, r4, r7
   2ece8:	ldr	r3, [r3, r0]
   2ecec:	mla	r3, r6, r3, r7
   2ecf0:	add	lr, r3, lr
   2ecf4:	b	2ed14 <GetDataSlab+0xc350>
   2ecf8:	ldr	r4, [r8, r0]
   2ecfc:	cmp	r4, #0
   2ed00:	beq	2ed18 <GetDataSlab+0xc354>
   2ed04:	add	r3, sp, #64	; 0x40
   2ed08:	ldr	r3, [r3, r0]
   2ed0c:	mla	lr, r3, r4, lr
   2ed10:	mul	r3, r3, r4
   2ed14:	add	r5, r5, r3, lsl #3
   2ed18:	subs	r9, r9, #1
   2ed1c:	add	r0, r0, #4
   2ed20:	bne	2ec98 <GetDataSlab+0xc2d4>
   2ed24:	b	2ed38 <GetDataSlab+0xc374>
   2ed28:	ldr	r3, [sp, #20]
   2ed2c:	ldr	r0, [r3, r0]
   2ed30:	add	r5, r5, r0, lsl #3
   2ed34:	add	lr, r0, lr
   2ed38:	ldr	r1, [sp, #32]
   2ed3c:	str	r2, [sp, #36]	; 0x24
   2ed40:	ldr	r2, [sp, #40]	; 0x28
   2ed44:	mov	r0, #0
   2ed48:	add	r1, sl, r1
   2ed4c:	cmp	r1, r2
   2ed50:	blt	2ec0c <GetDataSlab+0xc248>
   2ed54:	b	24900 <GetDataSlab+0x1f3c>
   2ed58:	ldr	r5, [r3]
   2ed5c:	mov	r9, r4
   2ed60:	mov	lr, #0
   2ed64:	sub	r0, r5, #1
   2ed68:	str	r0, [fp, #-72]	; 0xffffffb8
   2ed6c:	ldr	r0, [r4]
   2ed70:	add	r4, sp, #64	; 0x40
   2ed74:	str	r0, [sp, #32]
   2ed78:	str	r0, [sp, #64]	; 0x40
   2ed7c:	ldr	r0, [fp, #20]
   2ed80:	ldr	r1, [r0]
   2ed84:	ldr	r0, [fp, #24]
   2ed88:	cmp	r0, #2
   2ed8c:	mov	r0, r1
   2ed90:	str	r1, [sp, #36]	; 0x24
   2ed94:	blt	2ee3c <GetDataSlab+0xc478>
   2ed98:	ldr	r7, [sp, #32]
   2ed9c:	mov	r0, #1
   2eda0:	mov	lr, #0
   2eda4:	mov	r2, r9
   2eda8:	mov	r3, r1
   2edac:	str	r1, [sp, #36]	; 0x24
   2edb0:	mov	r8, r7
   2edb4:	ldr	r3, [fp, #16]
   2edb8:	ldr	r3, [r3, r0, lsl #2]
   2edbc:	str	r7, [r4, r0, lsl #2]
   2edc0:	mov	r4, #0
   2edc4:	sub	r6, r3, #1
   2edc8:	sub	r3, fp, #72	; 0x48
   2edcc:	str	r6, [r3, r0, lsl #2]
   2edd0:	ldr	ip, [r9, r0, lsl #2]
   2edd4:	mov	r3, ip
   2edd8:	mul	r7, r3, r7
   2eddc:	ldr	r3, [r2, -r4, lsl #2]
   2ede0:	add	r4, r4, #1
   2ede4:	cmp	r0, r4
   2ede8:	mul	r6, r6, r3
   2edec:	bne	2edd8 <GetDataSlab+0xc414>
   2edf0:	sub	r3, fp, #72	; 0x48
   2edf4:	add	r4, sp, #64	; 0x40
   2edf8:	add	r2, r2, #4
   2edfc:	str	r6, [r3, r0, lsl #2]
   2ee00:	ldr	r3, [fp, #12]
   2ee04:	str	r7, [r4, r0, lsl #2]
   2ee08:	ldr	r6, [sp, #36]	; 0x24
   2ee0c:	ldr	r3, [r3, r0, lsl #2]
   2ee10:	mla	lr, r3, r8, lr
   2ee14:	ldr	r3, [fp, #20]
   2ee18:	mov	r8, r7
   2ee1c:	mov	r7, ip
   2ee20:	ldr	r3, [r3, r0, lsl #2]
   2ee24:	add	r0, r0, #1
   2ee28:	mul	r6, r3, r6
   2ee2c:	ldr	r3, [fp, #24]
   2ee30:	str	r6, [sp, #36]	; 0x24
   2ee34:	cmp	r0, r3
   2ee38:	bne	2edb4 <GetDataSlab+0xc3f0>
   2ee3c:	ldr	r0, [sp, #48]	; 0x30
   2ee40:	cmp	r5, #1
   2ee44:	add	r7, r0, lr, lsl #3
   2ee48:	bne	3a594 <GetDataSlab+0x17bd0>
   2ee4c:	ldr	r0, [sp, #36]	; 0x24
   2ee50:	ldr	r5, [fp, #12]
   2ee54:	add	r2, sp, #64	; 0x40
   2ee58:	cmp	r0, #1
   2ee5c:	blt	3a744 <GetDataSlab+0x17d80>
   2ee60:	ldr	r3, [fp, #20]
   2ee64:	orr	r2, r2, #4
   2ee68:	add	r0, sp, #104	; 0x68
   2ee6c:	mov	sl, #0
   2ee70:	str	r2, [sp, #40]	; 0x28
   2ee74:	ldr	r2, [fp, #24]
   2ee78:	orr	r0, r0, #4
   2ee7c:	add	r3, r3, #4
   2ee80:	str	r3, [sp, #44]	; 0x2c
   2ee84:	ldr	r3, [r5], #4
   2ee88:	sub	r2, r2, #1
   2ee8c:	str	r2, [sp, #24]
   2ee90:	sub	r2, fp, #72	; 0x48
   2ee94:	orr	r2, r2, #4
   2ee98:	str	r2, [sp, #20]
   2ee9c:	ldr	r2, [sp, #32]
   2eea0:	add	r8, r7, r3, lsl #3
   2eea4:	add	lr, r3, lr
   2eea8:	cmp	r1, #1
   2eeac:	blt	2eee8 <GetDataSlab+0xc524>
   2eeb0:	ldr	r1, [sp, #56]	; 0x38
   2eeb4:	ldr	r2, [fp, #20]
   2eeb8:	mov	r3, #0
   2eebc:	mov	r7, r8
   2eec0:	add	r4, r1, sl, lsl #2
   2eec4:	ldr	r1, [r7], #8
   2eec8:	str	r1, [r4, r3, lsl #2]
   2eecc:	add	r3, r3, #1
   2eed0:	ldr	r1, [r2]
   2eed4:	cmp	r3, r1
   2eed8:	blt	2eec4 <GetDataSlab+0xc500>
   2eedc:	ldr	r2, [fp, #12]
   2eee0:	ldr	r3, [r2]
   2eee4:	ldr	r2, [r9]
   2eee8:	str	r3, [sp, #28]
   2eeec:	sub	r3, r2, r3
   2eef0:	str	r2, [sp, #32]
   2eef4:	ldr	r2, [fp, #24]
   2eef8:	add	r7, r8, r3, lsl #3
   2eefc:	add	lr, lr, r3
   2ef00:	cmp	r2, #2
   2ef04:	blt	2efb0 <GetDataSlab+0xc5ec>
   2ef08:	ldr	r9, [sp, #24]
   2ef0c:	mov	r8, #0
   2ef10:	ldr	r3, [r0, r8]
   2ef14:	ldr	r2, [sp, #44]	; 0x2c
   2ef18:	add	r3, r3, #1
   2ef1c:	str	r3, [r0, r8]
   2ef20:	ldr	r4, [r2, r8]
   2ef24:	sdiv	ip, r3, r4
   2ef28:	mls	r3, ip, r4, r3
   2ef2c:	cmp	r3, #0
   2ef30:	bne	2efa0 <GetDataSlab+0xc5dc>
   2ef34:	mov	r2, #0
   2ef38:	str	r2, [r0, r8]
   2ef3c:	ldr	r2, [sp, #40]	; 0x28
   2ef40:	ldr	r3, [r2, r8]
   2ef44:	sdiv	r4, lr, r3
   2ef48:	mls	r4, r4, r3, lr
   2ef4c:	cmp	r4, #0
   2ef50:	beq	2ef70 <GetDataSlab+0xc5ac>
   2ef54:	add	r2, sp, #64	; 0x40
   2ef58:	ldr	r6, [r5, r8]
   2ef5c:	sub	r3, r3, r4
   2ef60:	ldr	r2, [r2, r8]
   2ef64:	mla	r2, r6, r2, r3
   2ef68:	add	lr, r2, lr
   2ef6c:	b	2ef8c <GetDataSlab+0xc5c8>
   2ef70:	ldr	r3, [r5, r8]
   2ef74:	cmp	r3, #0
   2ef78:	beq	2ef90 <GetDataSlab+0xc5cc>
   2ef7c:	add	r2, sp, #64	; 0x40
   2ef80:	ldr	r2, [r2, r8]
   2ef84:	mla	lr, r2, r3, lr
   2ef88:	mul	r2, r2, r3
   2ef8c:	add	r7, r7, r2, lsl #3
   2ef90:	subs	r9, r9, #1
   2ef94:	add	r8, r8, #4
   2ef98:	bne	2ef10 <GetDataSlab+0xc54c>
   2ef9c:	b	2efb0 <GetDataSlab+0xc5ec>
   2efa0:	ldr	r2, [sp, #20]
   2efa4:	ldr	r2, [r2, r8]
   2efa8:	add	r7, r7, r2, lsl #3
   2efac:	add	lr, r2, lr
   2efb0:	ldr	r2, [sp, #36]	; 0x24
   2efb4:	ldr	r9, [fp, #8]
   2efb8:	ldr	r3, [sp, #28]
   2efbc:	add	sl, r1, sl
   2efc0:	cmp	sl, r2
   2efc4:	blt	2ee9c <GetDataSlab+0xc4d8>
   2efc8:	b	3a744 <GetDataSlab+0x17d80>
   2efcc:	ldr	r0, [fp, #16]
   2efd0:	sub	sl, fp, #72	; 0x48
   2efd4:	mov	r3, #0
   2efd8:	ldr	r0, [r0]
   2efdc:	str	r0, [sp, #28]
   2efe0:	sub	r0, r0, #1
   2efe4:	str	r0, [fp, #-72]	; 0xffffffb8
   2efe8:	ldr	r0, [r4]
   2efec:	str	r0, [sp, #36]	; 0x24
   2eff0:	str	r0, [sp, #64]	; 0x40
   2eff4:	ldr	r0, [fp, #20]
   2eff8:	ldr	r1, [r0]
   2effc:	ldr	r0, [fp, #24]
   2f000:	cmp	r0, #2
   2f004:	str	r1, [sp, #40]	; 0x28
   2f008:	str	r1, [sp, #44]	; 0x2c
   2f00c:	blt	2f0b8 <GetDataSlab+0xc6f4>
   2f010:	ldr	r2, [sp, #36]	; 0x24
   2f014:	ldr	r6, [sp, #40]	; 0x28
   2f018:	mov	r9, r4
   2f01c:	mov	r0, #1
   2f020:	mov	r3, #0
   2f024:	mov	r1, r4
   2f028:	mov	r7, r2
   2f02c:	str	r6, [sp, #44]	; 0x2c
   2f030:	ldr	r6, [fp, #16]
   2f034:	add	r5, sp, #64	; 0x40
   2f038:	mov	r4, #0
   2f03c:	ldr	r6, [r6, r0, lsl #2]
   2f040:	str	r2, [r5, r0, lsl #2]
   2f044:	sub	r5, r6, #1
   2f048:	str	r5, [sl, r0, lsl #2]
   2f04c:	ldr	ip, [r9, r0, lsl #2]
   2f050:	mov	r6, ip
   2f054:	mul	r2, r6, r2
   2f058:	ldr	r6, [r1, -r4, lsl #2]
   2f05c:	add	r4, r4, #1
   2f060:	cmp	r0, r4
   2f064:	mul	r5, r5, r6
   2f068:	bne	2f054 <GetDataSlab+0xc690>
   2f06c:	ldr	r6, [fp, #12]
   2f070:	add	r4, sp, #64	; 0x40
   2f074:	sub	sl, fp, #72	; 0x48
   2f078:	add	r1, r1, #4
   2f07c:	str	r2, [r4, r0, lsl #2]
   2f080:	str	r5, [sl, r0, lsl #2]
   2f084:	ldr	r4, [fp, #20]
   2f088:	ldr	r6, [r6, r0, lsl #2]
   2f08c:	mla	r3, r6, r7, r3
   2f090:	ldr	r7, [r4, r0, lsl #2]
   2f094:	ldr	r4, [sp, #44]	; 0x2c
   2f098:	add	r0, r0, #1
   2f09c:	mul	r4, r7, r4
   2f0a0:	ldr	r7, [fp, #24]
   2f0a4:	str	r4, [sp, #44]	; 0x2c
   2f0a8:	cmp	r0, r7
   2f0ac:	mov	r7, r2
   2f0b0:	mov	r2, ip
   2f0b4:	bne	2f030 <GetDataSlab+0xc66c>
   2f0b8:	ldr	r0, [sp, #48]	; 0x30
   2f0bc:	ldr	r1, [sp, #28]
   2f0c0:	add	r7, r0, r3
   2f0c4:	cmp	r1, #1
   2f0c8:	bne	3a9e0 <GetDataSlab+0x1801c>
   2f0cc:	ldr	r0, [sp, #44]	; 0x2c
   2f0d0:	ldr	r6, [sp, #40]	; 0x28
   2f0d4:	cmp	r0, #1
   2f0d8:	blt	248fc <GetDataSlab+0x1f38>
   2f0dc:	add	r0, sp, #104	; 0x68
   2f0e0:	ldr	r2, [fp, #20]
   2f0e4:	mov	r9, #0
   2f0e8:	orr	r1, r0, #4
   2f0ec:	add	r0, sp, #64	; 0x40
   2f0f0:	orr	r0, r0, #4
   2f0f4:	str	r0, [sp, #28]
   2f0f8:	ldr	r0, [fp, #12]
   2f0fc:	add	r8, r2, #4
   2f100:	mov	r2, lr
   2f104:	mov	r5, r2
   2f108:	add	lr, r0, #4
   2f10c:	ldr	r0, [fp, #24]
   2f110:	sub	r0, r0, #1
   2f114:	str	r0, [sp, #32]
   2f118:	sub	r0, fp, #72	; 0x48
   2f11c:	orr	r0, r0, #4
   2f120:	str	r0, [sp, #24]
   2f124:	lsl	r0, r6, #3
   2f128:	str	r0, [sp, #48]	; 0x30
   2f12c:	mov	r0, #0
   2f130:	str	r0, [sp, #56]	; 0x38
   2f134:	ldr	r0, [fp, #12]
   2f138:	cmp	r6, #1
   2f13c:	blt	2f164 <GetDataSlab+0xc7a0>
   2f140:	ldr	r0, [r0]
   2f144:	ldr	r6, [sp, #40]	; 0x28
   2f148:	mov	r2, r5
   2f14c:	add	r0, r7, r0
   2f150:	ldrb	r4, [r0], #1
   2f154:	subs	r6, r6, #1
   2f158:	stm	r2, {r4, r9}
   2f15c:	add	r2, r2, #8
   2f160:	bne	2f150 <GetDataSlab+0xc78c>
   2f164:	ldr	r0, [sp, #36]	; 0x24
   2f168:	str	r5, [sp, #52]	; 0x34
   2f16c:	add	r7, r7, r0
   2f170:	add	r3, r3, r0
   2f174:	ldr	r0, [fp, #24]
   2f178:	cmp	r0, #2
   2f17c:	blt	2f220 <GetDataSlab+0xc85c>
   2f180:	ldr	ip, [sp, #32]
   2f184:	ldr	r5, [sp, #28]
   2f188:	mov	r0, #0
   2f18c:	ldr	r2, [r1, r0]
   2f190:	add	r2, r2, #1
   2f194:	str	r2, [r1, r0]
   2f198:	ldr	r4, [r8, r0]
   2f19c:	sdiv	r6, r2, r4
   2f1a0:	mls	r2, r6, r4, r2
   2f1a4:	cmp	r2, #0
   2f1a8:	bne	2f210 <GetDataSlab+0xc84c>
   2f1ac:	ldr	r4, [r5, r0]
   2f1b0:	str	r9, [r1, r0]
   2f1b4:	sdiv	r2, r3, r4
   2f1b8:	mls	r6, r2, r4, r3
   2f1bc:	cmp	r6, #0
   2f1c0:	beq	2f1e4 <GetDataSlab+0xc820>
   2f1c4:	add	r2, sp, #64	; 0x40
   2f1c8:	ldr	sl, [lr, r0]
   2f1cc:	sub	r4, r4, r6
   2f1d0:	ldr	r2, [r2, r0]
   2f1d4:	mla	r2, sl, r2, r4
   2f1d8:	add	r3, r2, r3
   2f1dc:	add	r7, r7, r2
   2f1e0:	b	2f200 <GetDataSlab+0xc83c>
   2f1e4:	ldr	r4, [lr, r0]
   2f1e8:	cmp	r4, #0
   2f1ec:	beq	2f200 <GetDataSlab+0xc83c>
   2f1f0:	add	r2, sp, #64	; 0x40
   2f1f4:	ldr	r2, [r2, r0]
   2f1f8:	mla	r3, r2, r4, r3
   2f1fc:	mla	r7, r2, r4, r7
   2f200:	subs	ip, ip, #1
   2f204:	add	r0, r0, #4
   2f208:	bne	2f18c <GetDataSlab+0xc7c8>
   2f20c:	b	2f220 <GetDataSlab+0xc85c>
   2f210:	ldr	r2, [sp, #24]
   2f214:	ldr	r0, [r2, r0]
   2f218:	add	r7, r7, r0
   2f21c:	add	r3, r0, r3
   2f220:	ldr	r6, [sp, #40]	; 0x28
   2f224:	ldr	r4, [sp, #56]	; 0x38
   2f228:	ldr	r0, [sp, #48]	; 0x30
   2f22c:	ldr	r5, [sp, #52]	; 0x34
   2f230:	ldr	r2, [sp, #44]	; 0x2c
   2f234:	add	r4, r4, r6
   2f238:	add	r5, r5, r0
   2f23c:	mov	r0, #0
   2f240:	cmp	r4, r2
   2f244:	str	r4, [sp, #56]	; 0x38
   2f248:	blt	2f134 <GetDataSlab+0xc770>
   2f24c:	b	24900 <GetDataSlab+0x1f3c>
   2f250:	ldr	r0, [fp, #16]
   2f254:	add	r2, sp, #64	; 0x40
   2f258:	mov	r8, #0
   2f25c:	ldr	lr, [r0]
   2f260:	sub	r0, lr, #1
   2f264:	str	r0, [fp, #-72]	; 0xffffffb8
   2f268:	ldr	r0, [r4]
   2f26c:	str	r0, [sp, #40]	; 0x28
   2f270:	str	r0, [sp, #64]	; 0x40
   2f274:	ldr	r0, [fp, #20]
   2f278:	ldr	r1, [r0]
   2f27c:	ldr	r0, [fp, #24]
   2f280:	cmp	r0, #2
   2f284:	str	r1, [sp, #44]	; 0x2c
   2f288:	str	r1, [sp, #52]	; 0x34
   2f28c:	blt	2f338 <GetDataSlab+0xc974>
   2f290:	ldr	r6, [sp, #40]	; 0x28
   2f294:	ldr	r0, [sp, #44]	; 0x2c
   2f298:	mov	r9, r4
   2f29c:	mov	r1, #1
   2f2a0:	mov	r8, #0
   2f2a4:	mov	r7, r4
   2f2a8:	mov	r5, r6
   2f2ac:	str	r0, [sp, #52]	; 0x34
   2f2b0:	ldr	r0, [fp, #16]
   2f2b4:	mov	r4, #0
   2f2b8:	ldr	r0, [r0, r1, lsl #2]
   2f2bc:	str	r6, [r2, r1, lsl #2]
   2f2c0:	sub	r3, r0, #1
   2f2c4:	sub	r0, fp, #72	; 0x48
   2f2c8:	str	r3, [r0, r1, lsl #2]
   2f2cc:	ldr	r9, [r9, r1, lsl #2]
   2f2d0:	mov	r0, r9
   2f2d4:	mul	r6, r0, r6
   2f2d8:	ldr	r0, [r7, -r4, lsl #2]
   2f2dc:	add	r4, r4, #1
   2f2e0:	cmp	r1, r4
   2f2e4:	mul	r3, r3, r0
   2f2e8:	bne	2f2d4 <GetDataSlab+0xc910>
   2f2ec:	add	r2, sp, #64	; 0x40
   2f2f0:	sub	r0, fp, #72	; 0x48
   2f2f4:	add	r7, r7, #4
   2f2f8:	str	r3, [r0, r1, lsl #2]
   2f2fc:	str	r6, [r2, r1, lsl #2]
   2f300:	ldr	r3, [sp, #52]	; 0x34
   2f304:	ldr	r0, [ip, r1, lsl #2]
   2f308:	mla	r8, r0, r5, r8
   2f30c:	ldr	r0, [fp, #20]
   2f310:	mov	r5, r6
   2f314:	mov	r6, r9
   2f318:	ldr	r9, [fp, #8]
   2f31c:	ldr	r0, [r0, r1, lsl #2]
   2f320:	add	r1, r1, #1
   2f324:	mul	r3, r0, r3
   2f328:	ldr	r0, [fp, #24]
   2f32c:	str	r3, [sp, #52]	; 0x34
   2f330:	cmp	r1, r0
   2f334:	bne	2f2b0 <GetDataSlab+0xc8ec>
   2f338:	ldr	r0, [sp, #48]	; 0x30
   2f33c:	cmp	lr, #1
   2f340:	add	r7, r0, r8, lsl #1
   2f344:	bne	3ab9c <GetDataSlab+0x181d8>
   2f348:	ldr	r0, [sp, #52]	; 0x34
   2f34c:	ldr	r2, [sp, #44]	; 0x2c
   2f350:	cmp	r0, #1
   2f354:	blt	248fc <GetDataSlab+0x1f38>
   2f358:	add	r0, sp, #104	; 0x68
   2f35c:	ldr	r6, [sp, #56]	; 0x38
   2f360:	orr	r1, r0, #4
   2f364:	ldr	r0, [fp, #20]
   2f368:	add	r9, r0, #4
   2f36c:	add	r0, sp, #64	; 0x40
   2f370:	orr	lr, r0, #4
   2f374:	ldr	r0, [fp, #24]
   2f378:	sub	r0, r0, #1
   2f37c:	str	r0, [sp, #32]
   2f380:	sub	r0, fp, #72	; 0x48
   2f384:	orr	r0, r0, #4
   2f388:	str	r0, [sp, #28]
   2f38c:	lsl	r0, r2, #3
   2f390:	str	r0, [sp, #48]	; 0x30
   2f394:	ldr	r0, [ip], #4
   2f398:	str	r0, [sp, #36]	; 0x24
   2f39c:	mov	r0, #0
   2f3a0:	str	r0, [sp, #60]	; 0x3c
   2f3a4:	cmp	r2, #1
   2f3a8:	blt	2f3d4 <GetDataSlab+0xca10>
   2f3ac:	ldr	r0, [sp, #36]	; 0x24
   2f3b0:	ldr	r4, [sp, #44]	; 0x2c
   2f3b4:	mov	r5, r6
   2f3b8:	add	r0, r7, r0, lsl #1
   2f3bc:	ldrsh	r2, [r0], #2
   2f3c0:	subs	r4, r4, #1
   2f3c4:	asr	r3, r2, #31
   2f3c8:	strd	r2, [r5]
   2f3cc:	add	r5, r5, #8
   2f3d0:	bne	2f3bc <GetDataSlab+0xc9f8>
   2f3d4:	ldr	r0, [sp, #40]	; 0x28
   2f3d8:	str	r6, [sp, #56]	; 0x38
   2f3dc:	add	r7, r7, r0, lsl #1
   2f3e0:	add	r8, r8, r0
   2f3e4:	ldr	r0, [fp, #24]
   2f3e8:	cmp	r0, #2
   2f3ec:	blt	2f490 <GetDataSlab+0xcacc>
   2f3f0:	ldr	sl, [sp, #32]
   2f3f4:	mov	r0, #0
   2f3f8:	ldr	r2, [r1, r0]
   2f3fc:	add	r2, r2, #1
   2f400:	str	r2, [r1, r0]
   2f404:	ldr	r3, [r9, r0]
   2f408:	sdiv	r4, r2, r3
   2f40c:	mls	r2, r4, r3, r2
   2f410:	cmp	r2, #0
   2f414:	bne	2f480 <GetDataSlab+0xcabc>
   2f418:	ldr	r3, [lr, r0]
   2f41c:	mov	r2, #0
   2f420:	str	r2, [r1, r0]
   2f424:	sdiv	r2, r8, r3
   2f428:	mls	r4, r2, r3, r8
   2f42c:	cmp	r4, #0
   2f430:	beq	2f450 <GetDataSlab+0xca8c>
   2f434:	add	r2, sp, #64	; 0x40
   2f438:	ldr	r5, [ip, r0]
   2f43c:	sub	r3, r3, r4
   2f440:	ldr	r2, [r2, r0]
   2f444:	mla	r2, r5, r2, r3
   2f448:	add	r8, r2, r8
   2f44c:	b	2f46c <GetDataSlab+0xcaa8>
   2f450:	ldr	r3, [ip, r0]
   2f454:	cmp	r3, #0
   2f458:	beq	2f470 <GetDataSlab+0xcaac>
   2f45c:	add	r2, sp, #64	; 0x40
   2f460:	ldr	r2, [r2, r0]
   2f464:	mla	r8, r2, r3, r8
   2f468:	mul	r2, r2, r3
   2f46c:	add	r7, r7, r2, lsl #1
   2f470:	subs	sl, sl, #1
   2f474:	add	r0, r0, #4
   2f478:	bne	2f3f8 <GetDataSlab+0xca34>
   2f47c:	b	2f490 <GetDataSlab+0xcacc>
   2f480:	ldr	r2, [sp, #28]
   2f484:	ldr	r0, [r2, r0]
   2f488:	add	r7, r7, r0, lsl #1
   2f48c:	add	r8, r0, r8
   2f490:	ldr	r2, [sp, #44]	; 0x2c
   2f494:	ldr	r4, [sp, #60]	; 0x3c
   2f498:	ldr	r0, [sp, #48]	; 0x30
   2f49c:	ldr	r6, [sp, #56]	; 0x38
   2f4a0:	ldr	r3, [sp, #52]	; 0x34
   2f4a4:	add	r4, r4, r2
   2f4a8:	add	r6, r6, r0
   2f4ac:	mov	r0, #0
   2f4b0:	cmp	r4, r3
   2f4b4:	str	r4, [sp, #60]	; 0x3c
   2f4b8:	blt	2f3a4 <GetDataSlab+0xc9e0>
   2f4bc:	b	24900 <GetDataSlab+0x1f3c>
   2f4c0:	ldr	r0, [fp, #16]
   2f4c4:	sub	r7, fp, #72	; 0x48
   2f4c8:	mov	r2, #0
   2f4cc:	ldr	sl, [r0]
   2f4d0:	sub	r0, sl, #1
   2f4d4:	str	r0, [fp, #-72]	; 0xffffffb8
   2f4d8:	ldr	r0, [r4]
   2f4dc:	str	r0, [sp, #40]	; 0x28
   2f4e0:	str	r0, [sp, #64]	; 0x40
   2f4e4:	ldr	r0, [fp, #20]
   2f4e8:	ldr	r1, [r0]
   2f4ec:	ldr	r0, [fp, #24]
   2f4f0:	cmp	r0, #2
   2f4f4:	mov	r6, r1
   2f4f8:	str	r1, [sp, #56]	; 0x38
   2f4fc:	blt	2f5a0 <GetDataSlab+0xcbdc>
   2f500:	ldr	r5, [sp, #40]	; 0x28
   2f504:	ldr	r6, [sp, #56]	; 0x38
   2f508:	mov	r9, r4
   2f50c:	mov	r1, #1
   2f510:	mov	r2, #0
   2f514:	mov	r3, r4
   2f518:	mov	ip, r5
   2f51c:	ldr	r0, [fp, #16]
   2f520:	add	r4, sp, #64	; 0x40
   2f524:	ldr	r0, [r0, r1, lsl #2]
   2f528:	str	r5, [r4, r1, lsl #2]
   2f52c:	mov	r4, #0
   2f530:	sub	r0, r0, #1
   2f534:	str	r0, [r7, r1, lsl #2]
   2f538:	ldr	r9, [r9, r1, lsl #2]
   2f53c:	mov	r7, r9
   2f540:	mul	r5, r7, r5
   2f544:	ldr	r7, [r3, -r4, lsl #2]
   2f548:	add	r4, r4, #1
   2f54c:	cmp	r1, r4
   2f550:	mul	r0, r0, r7
   2f554:	bne	2f540 <GetDataSlab+0xcb7c>
   2f558:	sub	r7, fp, #72	; 0x48
   2f55c:	add	r4, sp, #64	; 0x40
   2f560:	add	r3, r3, #4
   2f564:	str	r0, [r7, r1, lsl #2]
   2f568:	ldr	r0, [fp, #12]
   2f56c:	str	r5, [r4, r1, lsl #2]
   2f570:	ldr	r0, [r0, r1, lsl #2]
   2f574:	mla	r2, r0, ip, r2
   2f578:	ldr	r0, [fp, #20]
   2f57c:	mov	ip, r5
   2f580:	mov	r5, r9
   2f584:	ldr	r9, [fp, #8]
   2f588:	ldr	r0, [r0, r1, lsl #2]
   2f58c:	add	r1, r1, #1
   2f590:	mul	r6, r0, r6
   2f594:	ldr	r0, [fp, #24]
   2f598:	cmp	r1, r0
   2f59c:	bne	2f51c <GetDataSlab+0xcb58>
   2f5a0:	ldr	r0, [sp, #48]	; 0x30
   2f5a4:	cmp	sl, #1
   2f5a8:	add	r7, r0, r2, lsl #1
   2f5ac:	bne	3ad3c <GetDataSlab+0x18378>
   2f5b0:	ldr	r4, [sp, #56]	; 0x38
   2f5b4:	cmp	r6, #1
   2f5b8:	blt	248fc <GetDataSlab+0x1f38>
   2f5bc:	add	r0, sp, #104	; 0x68
   2f5c0:	mov	r3, lr
   2f5c4:	str	r6, [sp, #48]	; 0x30
   2f5c8:	mov	r9, #0
   2f5cc:	orr	r1, r0, #4
   2f5d0:	ldr	r0, [fp, #20]
   2f5d4:	mov	r6, r3
   2f5d8:	add	ip, r0, #4
   2f5dc:	add	r0, sp, #64	; 0x40
   2f5e0:	orr	lr, r0, #4
   2f5e4:	ldr	r0, [fp, #24]
   2f5e8:	sub	r0, r0, #1
   2f5ec:	str	r0, [sp, #28]
   2f5f0:	sub	r0, fp, #72	; 0x48
   2f5f4:	orr	r0, r0, #4
   2f5f8:	str	r0, [sp, #24]
   2f5fc:	lsl	r0, r4, #3
   2f600:	str	r0, [sp, #36]	; 0x24
   2f604:	ldr	r0, [sp, #60]	; 0x3c
   2f608:	ldr	r5, [r0], #4
   2f60c:	str	r0, [sp, #60]	; 0x3c
   2f610:	mov	r0, #0
   2f614:	str	r0, [sp, #52]	; 0x34
   2f618:	str	r5, [sp, #32]
   2f61c:	cmp	r4, #1
   2f620:	blt	2f648 <GetDataSlab+0xcc84>
   2f624:	ldr	r0, [sp, #32]
   2f628:	ldr	r5, [sp, #56]	; 0x38
   2f62c:	mov	r4, r6
   2f630:	add	r0, r7, r0, lsl #1
   2f634:	ldrh	r8, [r0], #2
   2f638:	subs	r5, r5, #1
   2f63c:	strd	r8, [r4]
   2f640:	add	r4, r4, #8
   2f644:	bne	2f634 <GetDataSlab+0xcc70>
   2f648:	ldr	r0, [sp, #40]	; 0x28
   2f64c:	str	r6, [sp, #44]	; 0x2c
   2f650:	add	r7, r7, r0, lsl #1
   2f654:	add	r2, r2, r0
   2f658:	ldr	r0, [fp, #24]
   2f65c:	cmp	r0, #2
   2f660:	blt	2f704 <GetDataSlab+0xcd40>
   2f664:	ldr	sl, [sp, #28]
   2f668:	mov	r0, #0
   2f66c:	add	r8, sp, #64	; 0x40
   2f670:	ldr	r4, [r1, r0]
   2f674:	add	r4, r4, #1
   2f678:	str	r4, [r1, r0]
   2f67c:	ldr	r5, [ip, r0]
   2f680:	sdiv	r6, r4, r5
   2f684:	mls	r4, r6, r5, r4
   2f688:	cmp	r4, #0
   2f68c:	bne	2f6f4 <GetDataSlab+0xcd30>
   2f690:	ldr	r4, [lr, r0]
   2f694:	str	r9, [r1, r0]
   2f698:	sdiv	r5, r2, r4
   2f69c:	mls	r5, r5, r4, r2
   2f6a0:	cmp	r5, #0
   2f6a4:	beq	2f6c4 <GetDataSlab+0xcd00>
   2f6a8:	ldr	r3, [sp, #60]	; 0x3c
   2f6ac:	ldr	r6, [r8, r0]
   2f6b0:	sub	r4, r4, r5
   2f6b4:	ldr	r3, [r3, r0]
   2f6b8:	mla	r3, r3, r6, r4
   2f6bc:	add	r2, r3, r2
   2f6c0:	b	2f6e0 <GetDataSlab+0xcd1c>
   2f6c4:	ldr	r3, [sp, #60]	; 0x3c
   2f6c8:	ldr	r4, [r3, r0]
   2f6cc:	cmp	r4, #0
   2f6d0:	beq	2f6e4 <GetDataSlab+0xcd20>
   2f6d4:	ldr	r3, [r8, r0]
   2f6d8:	mla	r2, r3, r4, r2
   2f6dc:	mul	r3, r3, r4
   2f6e0:	add	r7, r7, r3, lsl #1
   2f6e4:	subs	sl, sl, #1
   2f6e8:	add	r0, r0, #4
   2f6ec:	bne	2f670 <GetDataSlab+0xccac>
   2f6f0:	b	2f704 <GetDataSlab+0xcd40>
   2f6f4:	ldr	r3, [sp, #24]
   2f6f8:	ldr	r0, [r3, r0]
   2f6fc:	add	r7, r7, r0, lsl #1
   2f700:	add	r2, r0, r2
   2f704:	ldr	r4, [sp, #56]	; 0x38
   2f708:	ldr	r5, [sp, #52]	; 0x34
   2f70c:	ldr	r0, [sp, #36]	; 0x24
   2f710:	ldr	r6, [sp, #44]	; 0x2c
   2f714:	ldr	r3, [sp, #48]	; 0x30
   2f718:	add	r5, r5, r4
   2f71c:	add	r6, r6, r0
   2f720:	mov	r0, #0
   2f724:	cmp	r5, r3
   2f728:	str	r5, [sp, #52]	; 0x34
   2f72c:	blt	2f61c <GetDataSlab+0xcc58>
   2f730:	b	24900 <GetDataSlab+0x1f3c>
   2f734:	ldr	r0, [fp, #16]
   2f738:	add	r5, sp, #64	; 0x40
   2f73c:	mov	r8, #0
   2f740:	ldr	r9, [r0]
   2f744:	sub	r0, r9, #1
   2f748:	str	r0, [fp, #-72]	; 0xffffffb8
   2f74c:	ldr	r0, [r4]
   2f750:	str	r0, [sp, #40]	; 0x28
   2f754:	str	r0, [sp, #64]	; 0x40
   2f758:	ldr	r0, [fp, #20]
   2f75c:	ldr	r1, [r0]
   2f760:	ldr	r0, [fp, #24]
   2f764:	cmp	r0, #2
   2f768:	str	r1, [sp, #44]	; 0x2c
   2f76c:	str	r1, [sp, #52]	; 0x34
   2f770:	blt	2f818 <GetDataSlab+0xce54>
   2f774:	ldr	r7, [sp, #40]	; 0x28
   2f778:	ldr	r0, [sp, #44]	; 0x2c
   2f77c:	mov	r3, r4
   2f780:	mov	r1, #1
   2f784:	mov	r8, #0
   2f788:	mov	r2, r4
   2f78c:	mov	r6, r7
   2f790:	str	r0, [sp, #52]	; 0x34
   2f794:	ldr	r0, [fp, #16]
   2f798:	mov	r4, #0
   2f79c:	ldr	r0, [r0, r1, lsl #2]
   2f7a0:	str	r7, [r5, r1, lsl #2]
   2f7a4:	sub	r5, fp, #72	; 0x48
   2f7a8:	sub	r0, r0, #1
   2f7ac:	str	r0, [r5, r1, lsl #2]
   2f7b0:	ldr	lr, [r3, r1, lsl #2]
   2f7b4:	mov	r5, lr
   2f7b8:	mul	r7, r5, r7
   2f7bc:	ldr	r5, [r2, -r4, lsl #2]
   2f7c0:	add	r4, r4, #1
   2f7c4:	cmp	r1, r4
   2f7c8:	mul	r0, r0, r5
   2f7cc:	bne	2f7b8 <GetDataSlab+0xcdf4>
   2f7d0:	add	r5, sp, #64	; 0x40
   2f7d4:	sub	r4, fp, #72	; 0x48
   2f7d8:	add	r2, r2, #4
   2f7dc:	str	r0, [r4, r1, lsl #2]
   2f7e0:	str	r7, [r5, r1, lsl #2]
   2f7e4:	ldr	r4, [sp, #52]	; 0x34
   2f7e8:	ldr	r0, [ip, r1, lsl #2]
   2f7ec:	mla	r8, r0, r6, r8
   2f7f0:	ldr	r0, [fp, #20]
   2f7f4:	mov	r6, r7
   2f7f8:	mov	r7, lr
   2f7fc:	ldr	r0, [r0, r1, lsl #2]
   2f800:	add	r1, r1, #1
   2f804:	mul	r4, r0, r4
   2f808:	ldr	r0, [fp, #24]
   2f80c:	str	r4, [sp, #52]	; 0x34
   2f810:	cmp	r1, r0
   2f814:	bne	2f794 <GetDataSlab+0xcdd0>
   2f818:	ldr	r0, [sp, #48]	; 0x30
   2f81c:	cmp	r9, #1
   2f820:	add	r7, r0, r8, lsl #2
   2f824:	bne	3aee8 <GetDataSlab+0x18524>
   2f828:	ldr	r0, [sp, #52]	; 0x34
   2f82c:	ldr	r2, [sp, #44]	; 0x2c
   2f830:	cmp	r0, #1
   2f834:	blt	248fc <GetDataSlab+0x1f38>
   2f838:	add	r0, sp, #104	; 0x68
   2f83c:	ldr	r5, [sp, #56]	; 0x38
   2f840:	add	r9, ip, #4
   2f844:	orr	r1, r0, #4
   2f848:	ldr	r0, [fp, #20]
   2f84c:	add	sl, r0, #4
   2f850:	add	r0, sp, #64	; 0x40
   2f854:	orr	lr, r0, #4
   2f858:	ldr	r0, [fp, #24]
   2f85c:	sub	r0, r0, #1
   2f860:	str	r0, [sp, #32]
   2f864:	sub	r0, fp, #72	; 0x48
   2f868:	orr	r0, r0, #4
   2f86c:	str	r0, [sp, #28]
   2f870:	lsl	r0, r2, #3
   2f874:	str	r0, [sp, #36]	; 0x24
   2f878:	mov	r0, #0
   2f87c:	str	r0, [sp, #56]	; 0x38
   2f880:	cmp	r2, #1
   2f884:	blt	2f8b4 <GetDataSlab+0xcef0>
   2f888:	ldr	r0, [fp, #12]
   2f88c:	ldr	r6, [sp, #44]	; 0x2c
   2f890:	mov	r4, r5
   2f894:	ldr	r0, [r0]
   2f898:	add	r0, r7, r0, lsl #2
   2f89c:	ldr	r2, [r0], #4
   2f8a0:	subs	r6, r6, #1
   2f8a4:	asr	r3, r2, #31
   2f8a8:	strd	r2, [r4]
   2f8ac:	add	r4, r4, #8
   2f8b0:	bne	2f89c <GetDataSlab+0xced8>
   2f8b4:	ldr	r0, [sp, #40]	; 0x28
   2f8b8:	str	r5, [sp, #48]	; 0x30
   2f8bc:	add	r7, r7, r0, lsl #2
   2f8c0:	add	r8, r8, r0
   2f8c4:	ldr	r0, [fp, #24]
   2f8c8:	cmp	r0, #2
   2f8cc:	blt	2f970 <GetDataSlab+0xcfac>
   2f8d0:	ldr	ip, [sp, #32]
   2f8d4:	mov	r0, #0
   2f8d8:	ldr	r2, [r1, r0]
   2f8dc:	add	r2, r2, #1
   2f8e0:	str	r2, [r1, r0]
   2f8e4:	ldr	r3, [sl, r0]
   2f8e8:	sdiv	r4, r2, r3
   2f8ec:	mls	r2, r4, r3, r2
   2f8f0:	cmp	r2, #0
   2f8f4:	bne	2f960 <GetDataSlab+0xcf9c>
   2f8f8:	ldr	r4, [lr, r0]
   2f8fc:	mov	r2, #0
   2f900:	str	r2, [r1, r0]
   2f904:	sdiv	r2, r8, r4
   2f908:	mls	r6, r2, r4, r8
   2f90c:	cmp	r6, #0
   2f910:	beq	2f930 <GetDataSlab+0xcf6c>
   2f914:	add	r2, sp, #64	; 0x40
   2f918:	ldr	r3, [r9, r0]
   2f91c:	sub	r4, r4, r6
   2f920:	ldr	r2, [r2, r0]
   2f924:	mla	r2, r3, r2, r4
   2f928:	add	r8, r2, r8
   2f92c:	b	2f94c <GetDataSlab+0xcf88>
   2f930:	ldr	r4, [r9, r0]
   2f934:	cmp	r4, #0
   2f938:	beq	2f950 <GetDataSlab+0xcf8c>
   2f93c:	add	r2, sp, #64	; 0x40
   2f940:	ldr	r2, [r2, r0]
   2f944:	mla	r8, r2, r4, r8
   2f948:	mul	r2, r2, r4
   2f94c:	add	r7, r7, r2, lsl #2
   2f950:	subs	ip, ip, #1
   2f954:	add	r0, r0, #4
   2f958:	bne	2f8d8 <GetDataSlab+0xcf14>
   2f95c:	b	2f970 <GetDataSlab+0xcfac>
   2f960:	ldr	r2, [sp, #28]
   2f964:	ldr	r0, [r2, r0]
   2f968:	add	r7, r7, r0, lsl #2
   2f96c:	add	r8, r0, r8
   2f970:	ldr	r2, [sp, #44]	; 0x2c
   2f974:	ldr	r6, [sp, #56]	; 0x38
   2f978:	ldr	r0, [sp, #36]	; 0x24
   2f97c:	ldr	r5, [sp, #48]	; 0x30
   2f980:	ldr	r3, [sp, #52]	; 0x34
   2f984:	add	r6, r6, r2
   2f988:	add	r5, r5, r0
   2f98c:	mov	r0, #0
   2f990:	cmp	r6, r3
   2f994:	str	r6, [sp, #56]	; 0x38
   2f998:	blt	2f880 <GetDataSlab+0xcebc>
   2f99c:	b	24900 <GetDataSlab+0x1f3c>
   2f9a0:	ldr	r0, [fp, #16]
   2f9a4:	mov	r3, #0
   2f9a8:	ldr	lr, [r0]
   2f9ac:	sub	r0, lr, #1
   2f9b0:	str	r0, [fp, #-72]	; 0xffffffb8
   2f9b4:	ldr	r0, [r4]
   2f9b8:	str	r0, [sp, #36]	; 0x24
   2f9bc:	str	r0, [sp, #64]	; 0x40
   2f9c0:	ldr	r0, [fp, #20]
   2f9c4:	ldr	r1, [r0]
   2f9c8:	ldr	r0, [fp, #24]
   2f9cc:	cmp	r0, #2
   2f9d0:	str	r1, [sp, #40]	; 0x28
   2f9d4:	str	r1, [sp, #44]	; 0x2c
   2f9d8:	blt	2fa88 <GetDataSlab+0xd0c4>
   2f9dc:	ldr	r7, [sp, #36]	; 0x24
   2f9e0:	ldr	r0, [sp, #40]	; 0x28
   2f9e4:	mov	r9, r4
   2f9e8:	mov	r1, #1
   2f9ec:	mov	r3, #0
   2f9f0:	mov	r2, r4
   2f9f4:	mov	r6, r7
   2f9f8:	str	r0, [sp, #44]	; 0x2c
   2f9fc:	ldr	r0, [fp, #16]
   2fa00:	add	r5, sp, #64	; 0x40
   2fa04:	mov	r4, #0
   2fa08:	ldr	r0, [r0, r1, lsl #2]
   2fa0c:	str	r7, [r5, r1, lsl #2]
   2fa10:	sub	r5, fp, #72	; 0x48
   2fa14:	sub	r0, r0, #1
   2fa18:	str	r0, [r5, r1, lsl #2]
   2fa1c:	ldr	ip, [r9, r1, lsl #2]
   2fa20:	mov	r5, ip
   2fa24:	mul	r7, r5, r7
   2fa28:	ldr	r5, [r2, -r4, lsl #2]
   2fa2c:	add	r4, r4, #1
   2fa30:	cmp	r1, r4
   2fa34:	mul	r0, r0, r5
   2fa38:	bne	2fa24 <GetDataSlab+0xd060>
   2fa3c:	add	r4, sp, #64	; 0x40
   2fa40:	add	r2, r2, #4
   2fa44:	str	r7, [r4, r1, lsl #2]
   2fa48:	sub	r4, fp, #72	; 0x48
   2fa4c:	str	r0, [r4, r1, lsl #2]
   2fa50:	ldr	r0, [fp, #12]
   2fa54:	ldr	r4, [sp, #44]	; 0x2c
   2fa58:	ldr	r0, [r0, r1, lsl #2]
   2fa5c:	mla	r3, r0, r6, r3
   2fa60:	ldr	r0, [fp, #20]
   2fa64:	mov	r6, r7
   2fa68:	mov	r7, ip
   2fa6c:	ldr	r0, [r0, r1, lsl #2]
   2fa70:	add	r1, r1, #1
   2fa74:	mul	r4, r0, r4
   2fa78:	ldr	r0, [fp, #24]
   2fa7c:	str	r4, [sp, #44]	; 0x2c
   2fa80:	cmp	r1, r0
   2fa84:	bne	2f9fc <GetDataSlab+0xd038>
   2fa88:	ldr	r0, [sp, #48]	; 0x30
   2fa8c:	cmp	lr, #1
   2fa90:	add	r7, r0, r3, lsl #2
   2fa94:	bne	3b08c <GetDataSlab+0x186c8>
   2fa98:	ldr	r0, [sp, #44]	; 0x2c
   2fa9c:	ldr	r2, [sp, #40]	; 0x28
   2faa0:	cmp	r0, #1
   2faa4:	blt	248fc <GetDataSlab+0x1f38>
   2faa8:	add	r0, sp, #104	; 0x68
   2faac:	ldr	r5, [sp, #56]	; 0x38
   2fab0:	mov	r9, #0
   2fab4:	orr	r1, r0, #4
   2fab8:	ldr	r0, [fp, #20]
   2fabc:	add	lr, r0, #4
   2fac0:	add	r0, sp, #64	; 0x40
   2fac4:	orr	r0, r0, #4
   2fac8:	str	r0, [sp, #28]
   2facc:	ldr	r0, [fp, #12]
   2fad0:	add	r8, r0, #4
   2fad4:	ldr	r0, [fp, #24]
   2fad8:	sub	r0, r0, #1
   2fadc:	str	r0, [sp, #32]
   2fae0:	sub	r0, fp, #72	; 0x48
   2fae4:	orr	r0, r0, #4
   2fae8:	str	r0, [sp, #24]
   2faec:	lsl	r0, r2, #3
   2faf0:	str	r0, [sp, #48]	; 0x30
   2faf4:	mov	r0, #0
   2faf8:	str	r0, [sp, #56]	; 0x38
   2fafc:	ldr	r0, [fp, #12]
   2fb00:	cmp	r2, #1
   2fb04:	blt	2fb2c <GetDataSlab+0xd168>
   2fb08:	ldr	r0, [r0]
   2fb0c:	ldr	r6, [sp, #40]	; 0x28
   2fb10:	mov	r2, r5
   2fb14:	add	r0, r7, r0, lsl #2
   2fb18:	ldr	r4, [r0], #4
   2fb1c:	subs	r6, r6, #1
   2fb20:	stm	r2, {r4, r9}
   2fb24:	add	r2, r2, #8
   2fb28:	bne	2fb18 <GetDataSlab+0xd154>
   2fb2c:	ldr	r0, [sp, #36]	; 0x24
   2fb30:	str	r5, [sp, #52]	; 0x34
   2fb34:	add	r7, r7, r0, lsl #2
   2fb38:	add	r3, r3, r0
   2fb3c:	ldr	r0, [fp, #24]
   2fb40:	cmp	r0, #2
   2fb44:	blt	2fbe8 <GetDataSlab+0xd224>
   2fb48:	ldr	ip, [sp, #32]
   2fb4c:	ldr	r5, [sp, #28]
   2fb50:	mov	r0, #0
   2fb54:	ldr	r2, [r1, r0]
   2fb58:	add	r2, r2, #1
   2fb5c:	str	r2, [r1, r0]
   2fb60:	ldr	r4, [lr, r0]
   2fb64:	sdiv	r6, r2, r4
   2fb68:	mls	r2, r6, r4, r2
   2fb6c:	cmp	r2, #0
   2fb70:	bne	2fbd8 <GetDataSlab+0xd214>
   2fb74:	ldr	r4, [r5, r0]
   2fb78:	str	r9, [r1, r0]
   2fb7c:	sdiv	r2, r3, r4
   2fb80:	mls	r6, r2, r4, r3
   2fb84:	cmp	r6, #0
   2fb88:	beq	2fba8 <GetDataSlab+0xd1e4>
   2fb8c:	add	r2, sp, #64	; 0x40
   2fb90:	ldr	sl, [r8, r0]
   2fb94:	sub	r4, r4, r6
   2fb98:	ldr	r2, [r2, r0]
   2fb9c:	mla	r2, sl, r2, r4
   2fba0:	add	r3, r2, r3
   2fba4:	b	2fbc4 <GetDataSlab+0xd200>
   2fba8:	ldr	r4, [r8, r0]
   2fbac:	cmp	r4, #0
   2fbb0:	beq	2fbc8 <GetDataSlab+0xd204>
   2fbb4:	add	r2, sp, #64	; 0x40
   2fbb8:	ldr	r2, [r2, r0]
   2fbbc:	mla	r3, r2, r4, r3
   2fbc0:	mul	r2, r2, r4
   2fbc4:	add	r7, r7, r2, lsl #2
   2fbc8:	subs	ip, ip, #1
   2fbcc:	add	r0, r0, #4
   2fbd0:	bne	2fb54 <GetDataSlab+0xd190>
   2fbd4:	b	2fbe8 <GetDataSlab+0xd224>
   2fbd8:	ldr	r2, [sp, #24]
   2fbdc:	ldr	r0, [r2, r0]
   2fbe0:	add	r7, r7, r0, lsl #2
   2fbe4:	add	r3, r0, r3
   2fbe8:	ldr	r2, [sp, #40]	; 0x28
   2fbec:	ldr	r4, [sp, #56]	; 0x38
   2fbf0:	ldr	r0, [sp, #48]	; 0x30
   2fbf4:	ldr	r5, [sp, #52]	; 0x34
   2fbf8:	ldr	r6, [sp, #44]	; 0x2c
   2fbfc:	add	r4, r4, r2
   2fc00:	add	r5, r5, r0
   2fc04:	mov	r0, #0
   2fc08:	cmp	r4, r6
   2fc0c:	str	r4, [sp, #56]	; 0x38
   2fc10:	blt	2fafc <GetDataSlab+0xd138>
   2fc14:	b	24900 <GetDataSlab+0x1f3c>
   2fc18:	ldr	r0, [fp, #16]
   2fc1c:	mov	r7, #0
   2fc20:	ldr	ip, [r0]
   2fc24:	sub	r0, ip, #1
   2fc28:	str	r0, [fp, #-72]	; 0xffffffb8
   2fc2c:	ldr	r0, [r4]
   2fc30:	str	r0, [sp, #36]	; 0x24
   2fc34:	str	r0, [sp, #64]	; 0x40
   2fc38:	ldr	r0, [fp, #20]
   2fc3c:	ldr	r1, [r0]
   2fc40:	ldr	r0, [fp, #24]
   2fc44:	cmp	r0, #2
   2fc48:	str	r1, [sp, #40]	; 0x28
   2fc4c:	str	r1, [sp, #44]	; 0x2c
   2fc50:	blt	2fd00 <GetDataSlab+0xd33c>
   2fc54:	ldr	r3, [sp, #36]	; 0x24
   2fc58:	ldr	r0, [sp, #40]	; 0x28
   2fc5c:	mov	r9, r4
   2fc60:	mov	r1, #1
   2fc64:	mov	r7, #0
   2fc68:	mov	r2, r4
   2fc6c:	mov	r6, r3
   2fc70:	str	r0, [sp, #44]	; 0x2c
   2fc74:	ldr	r0, [fp, #16]
   2fc78:	add	r5, sp, #64	; 0x40
   2fc7c:	mov	r4, #0
   2fc80:	ldr	r0, [r0, r1, lsl #2]
   2fc84:	str	r3, [r5, r1, lsl #2]
   2fc88:	sub	r5, fp, #72	; 0x48
   2fc8c:	sub	r0, r0, #1
   2fc90:	str	r0, [r5, r1, lsl #2]
   2fc94:	ldr	lr, [r9, r1, lsl #2]
   2fc98:	mov	r5, lr
   2fc9c:	mul	r3, r5, r3
   2fca0:	ldr	r5, [r2, -r4, lsl #2]
   2fca4:	add	r4, r4, #1
   2fca8:	cmp	r1, r4
   2fcac:	mul	r0, r0, r5
   2fcb0:	bne	2fc9c <GetDataSlab+0xd2d8>
   2fcb4:	add	r4, sp, #64	; 0x40
   2fcb8:	add	r2, r2, #4
   2fcbc:	str	r3, [r4, r1, lsl #2]
   2fcc0:	sub	r4, fp, #72	; 0x48
   2fcc4:	str	r0, [r4, r1, lsl #2]
   2fcc8:	ldr	r0, [fp, #12]
   2fccc:	ldr	r4, [sp, #44]	; 0x2c
   2fcd0:	ldr	r0, [r0, r1, lsl #2]
   2fcd4:	mla	r7, r0, r6, r7
   2fcd8:	ldr	r0, [fp, #20]
   2fcdc:	mov	r6, r3
   2fce0:	mov	r3, lr
   2fce4:	ldr	r0, [r0, r1, lsl #2]
   2fce8:	add	r1, r1, #1
   2fcec:	mul	r4, r0, r4
   2fcf0:	ldr	r0, [fp, #24]
   2fcf4:	str	r4, [sp, #44]	; 0x2c
   2fcf8:	cmp	r1, r0
   2fcfc:	bne	2fc74 <GetDataSlab+0xd2b0>
   2fd00:	ldr	r0, [sp, #48]	; 0x30
   2fd04:	cmp	ip, #1
   2fd08:	add	r8, r0, r7, lsl #2
   2fd0c:	bne	3b23c <GetDataSlab+0x18878>
   2fd10:	ldr	r0, [sp, #44]	; 0x2c
   2fd14:	ldr	r1, [sp, #56]	; 0x38
   2fd18:	ldr	lr, [sp, #40]	; 0x28
   2fd1c:	cmp	r0, #1
   2fd20:	blt	248fc <GetDataSlab+0x1f38>
   2fd24:	add	r0, sp, #104	; 0x68
   2fd28:	str	r1, [sp, #56]	; 0x38
   2fd2c:	orr	r6, r0, #4
   2fd30:	ldr	r0, [fp, #20]
   2fd34:	add	r0, r0, #4
   2fd38:	str	r0, [sp, #28]
   2fd3c:	add	r0, sp, #64	; 0x40
   2fd40:	orr	r0, r0, #4
   2fd44:	str	r0, [sp, #24]
   2fd48:	ldr	r0, [fp, #24]
   2fd4c:	sub	r0, r0, #1
   2fd50:	str	r0, [sp, #20]
   2fd54:	sub	r0, fp, #72	; 0x48
   2fd58:	orr	r0, r0, #4
   2fd5c:	str	r0, [sp, #16]
   2fd60:	lsl	r0, lr, #3
   2fd64:	str	r0, [sp, #48]	; 0x30
   2fd68:	ldr	r0, [sp, #60]	; 0x3c
   2fd6c:	ldr	r2, [r0], #4
   2fd70:	str	r0, [sp, #60]	; 0x3c
   2fd74:	mov	r0, #0
   2fd78:	str	r0, [sp, #52]	; 0x34
   2fd7c:	str	r2, [sp, #32]
   2fd80:	cmp	lr, #1
   2fd84:	blt	2fdb0 <GetDataSlab+0xd3ec>
   2fd88:	ldr	r0, [sp, #32]
   2fd8c:	ldr	sl, [sp, #56]	; 0x38
   2fd90:	ldr	r9, [sp, #40]	; 0x28
   2fd94:	add	r4, r8, r0, lsl #2
   2fd98:	ldr	r0, [r4], #4
   2fd9c:	bl	4b6b4 <__aeabi_f2lz>
   2fda0:	strd	r0, [sl]
   2fda4:	add	sl, sl, #8
   2fda8:	subs	r9, r9, #1
   2fdac:	bne	2fd98 <GetDataSlab+0xd3d4>
   2fdb0:	ldr	r0, [sp, #36]	; 0x24
   2fdb4:	add	r8, r8, r0, lsl #2
   2fdb8:	add	r7, r7, r0
   2fdbc:	ldr	r0, [fp, #24]
   2fdc0:	cmp	r0, #2
   2fdc4:	blt	2fe68 <GetDataSlab+0xd4a4>
   2fdc8:	ldr	r1, [sp, #20]
   2fdcc:	ldr	ip, [sp, #60]	; 0x3c
   2fdd0:	ldr	lr, [sp, #40]	; 0x28
   2fdd4:	ldr	r9, [sp, #28]
   2fdd8:	ldr	sl, [sp, #24]
   2fddc:	mov	r0, #0
   2fde0:	ldr	r2, [r6, r0]
   2fde4:	add	r2, r2, #1
   2fde8:	str	r2, [r6, r0]
   2fdec:	ldr	r3, [r9, r0]
   2fdf0:	sdiv	r4, r2, r3
   2fdf4:	mls	r2, r4, r3, r2
   2fdf8:	cmp	r2, #0
   2fdfc:	bne	2fe70 <GetDataSlab+0xd4ac>
   2fe00:	mov	r2, #0
   2fe04:	str	r2, [r6, r0]
   2fe08:	ldr	r2, [sl, r0]
   2fe0c:	sdiv	r3, r7, r2
   2fe10:	mls	r3, r3, r2, r7
   2fe14:	cmp	r3, #0
   2fe18:	beq	2fe38 <GetDataSlab+0xd474>
   2fe1c:	add	r5, sp, #64	; 0x40
   2fe20:	sub	r2, r2, r3
   2fe24:	ldr	r4, [r5, r0]
   2fe28:	ldr	r5, [ip, r0]
   2fe2c:	mla	r2, r5, r4, r2
   2fe30:	add	r7, r2, r7
   2fe34:	b	2fe54 <GetDataSlab+0xd490>
   2fe38:	ldr	r2, [ip, r0]
   2fe3c:	cmp	r2, #0
   2fe40:	beq	2fe58 <GetDataSlab+0xd494>
   2fe44:	add	r3, sp, #64	; 0x40
   2fe48:	ldr	r3, [r3, r0]
   2fe4c:	mla	r7, r3, r2, r7
   2fe50:	mul	r2, r3, r2
   2fe54:	add	r8, r8, r2, lsl #2
   2fe58:	subs	r1, r1, #1
   2fe5c:	add	r0, r0, #4
   2fe60:	bne	2fde0 <GetDataSlab+0xd41c>
   2fe64:	b	2fe80 <GetDataSlab+0xd4bc>
   2fe68:	ldr	lr, [sp, #40]	; 0x28
   2fe6c:	b	2fe80 <GetDataSlab+0xd4bc>
   2fe70:	ldr	r1, [sp, #16]
   2fe74:	ldr	r0, [r1, r0]
   2fe78:	add	r8, r8, r0, lsl #2
   2fe7c:	add	r7, r0, r7
   2fe80:	ldr	r0, [sp, #48]	; 0x30
   2fe84:	ldr	r1, [sp, #56]	; 0x38
   2fe88:	ldr	r2, [sp, #52]	; 0x34
   2fe8c:	add	r1, r1, r0
   2fe90:	add	r2, r2, lr
   2fe94:	mov	r0, #0
   2fe98:	str	r1, [sp, #56]	; 0x38
   2fe9c:	ldr	r1, [sp, #44]	; 0x2c
   2fea0:	str	r2, [sp, #52]	; 0x34
   2fea4:	cmp	r2, r1
   2fea8:	blt	2fd80 <GetDataSlab+0xd3bc>
   2feac:	b	24900 <GetDataSlab+0x1f3c>
   2feb0:	ldr	r0, [fp, #16]
   2feb4:	mov	r9, #0
   2feb8:	ldr	ip, [r0]
   2febc:	sub	r0, ip, #1
   2fec0:	str	r0, [fp, #-72]	; 0xffffffb8
   2fec4:	ldr	r0, [r4]
   2fec8:	str	r0, [sp, #40]	; 0x28
   2fecc:	str	r0, [sp, #64]	; 0x40
   2fed0:	ldr	r0, [fp, #20]
   2fed4:	ldr	r1, [r0]
   2fed8:	ldr	r0, [fp, #24]
   2fedc:	cmp	r0, #2
   2fee0:	str	r1, [sp, #52]	; 0x34
   2fee4:	str	r1, [sp, #56]	; 0x38
   2fee8:	blt	2ff98 <GetDataSlab+0xd5d4>
   2feec:	ldr	r3, [sp, #40]	; 0x28
   2fef0:	ldr	r0, [sp, #52]	; 0x34
   2fef4:	ldr	r2, [fp, #8]
   2fef8:	mov	r1, #1
   2fefc:	mov	r9, #0
   2ff00:	mov	r7, r3
   2ff04:	str	r0, [sp, #56]	; 0x38
   2ff08:	ldr	r0, [fp, #16]
   2ff0c:	add	r4, sp, #64	; 0x40
   2ff10:	ldr	r0, [r0, r1, lsl #2]
   2ff14:	str	r3, [r4, r1, lsl #2]
   2ff18:	mov	r4, #0
   2ff1c:	sub	r5, r0, #1
   2ff20:	sub	r0, fp, #72	; 0x48
   2ff24:	str	r5, [r0, r1, lsl #2]
   2ff28:	ldr	r0, [fp, #8]
   2ff2c:	ldr	r0, [r0, r1, lsl #2]
   2ff30:	mov	r6, r0
   2ff34:	mul	r3, r6, r3
   2ff38:	ldr	r6, [r2, -r4, lsl #2]
   2ff3c:	add	r4, r4, #1
   2ff40:	cmp	r1, r4
   2ff44:	mul	r5, r5, r6
   2ff48:	bne	2ff34 <GetDataSlab+0xd570>
   2ff4c:	add	r4, sp, #64	; 0x40
   2ff50:	add	r2, r2, #4
   2ff54:	str	r3, [r4, r1, lsl #2]
   2ff58:	sub	r4, fp, #72	; 0x48
   2ff5c:	str	r5, [r4, r1, lsl #2]
   2ff60:	ldr	r4, [fp, #12]
   2ff64:	ldr	r6, [r4, r1, lsl #2]
   2ff68:	ldr	r4, [fp, #20]
   2ff6c:	mla	r9, r6, r7, r9
   2ff70:	ldr	r7, [r4, r1, lsl #2]
   2ff74:	ldr	r4, [sp, #56]	; 0x38
   2ff78:	add	r1, r1, #1
   2ff7c:	mul	r4, r7, r4
   2ff80:	ldr	r7, [fp, #24]
   2ff84:	str	r4, [sp, #56]	; 0x38
   2ff88:	cmp	r1, r7
   2ff8c:	mov	r7, r3
   2ff90:	mov	r3, r0
   2ff94:	bne	2ff08 <GetDataSlab+0xd544>
   2ff98:	ldr	r0, [sp, #48]	; 0x30
   2ff9c:	cmp	ip, #1
   2ffa0:	add	r5, r0, r9, lsl #3
   2ffa4:	bne	3b408 <GetDataSlab+0x18a44>
   2ffa8:	ldr	r0, [sp, #56]	; 0x38
   2ffac:	ldr	r1, [sp, #52]	; 0x34
   2ffb0:	cmp	r0, #1
   2ffb4:	blt	248fc <GetDataSlab+0x1f38>
   2ffb8:	add	r0, sp, #104	; 0x68
   2ffbc:	str	lr, [sp, #48]	; 0x30
   2ffc0:	orr	r6, r0, #4
   2ffc4:	ldr	r0, [fp, #20]
   2ffc8:	add	r0, r0, #4
   2ffcc:	str	r0, [sp, #28]
   2ffd0:	add	r0, sp, #64	; 0x40
   2ffd4:	orr	r0, r0, #4
   2ffd8:	str	r0, [sp, #24]
   2ffdc:	ldr	r0, [fp, #24]
   2ffe0:	sub	r0, r0, #1
   2ffe4:	str	r0, [sp, #20]
   2ffe8:	sub	r0, fp, #72	; 0x48
   2ffec:	orr	r0, r0, #4
   2fff0:	str	r0, [sp, #16]
   2fff4:	lsl	r0, r1, #3
   2fff8:	str	r0, [sp, #36]	; 0x24
   2fffc:	ldr	r0, [sp, #60]	; 0x3c
   30000:	ldr	r2, [r0], #4
   30004:	str	r0, [sp, #60]	; 0x3c
   30008:	mov	r0, #0
   3000c:	str	r0, [sp, #44]	; 0x2c
   30010:	str	r2, [sp, #32]
   30014:	cmp	r1, #1
   30018:	blt	3004c <GetDataSlab+0xd688>
   3001c:	ldr	r0, [sp, #32]
   30020:	ldr	sl, [sp, #48]	; 0x30
   30024:	ldr	r8, [sp, #52]	; 0x34
   30028:	add	r4, r5, r0, lsl #3
   3002c:	vldr	d16, [r4]
   30030:	vmov	r0, r1, d16
   30034:	bl	4b6e0 <__aeabi_d2lz>
   30038:	strd	r0, [sl]
   3003c:	add	r4, r4, #8
   30040:	add	sl, sl, #8
   30044:	subs	r8, r8, #1
   30048:	bne	3002c <GetDataSlab+0xd668>
   3004c:	ldr	r0, [sp, #40]	; 0x28
   30050:	add	r5, r5, r0, lsl #3
   30054:	add	r9, r9, r0
   30058:	ldr	r0, [fp, #24]
   3005c:	cmp	r0, #2
   30060:	blt	3010c <GetDataSlab+0xd748>
   30064:	ldr	r1, [sp, #20]
   30068:	ldr	ip, [sp, #60]	; 0x3c
   3006c:	ldr	r8, [sp, #28]
   30070:	ldr	sl, [sp, #24]
   30074:	mov	r0, #0
   30078:	add	lr, sp, #64	; 0x40
   3007c:	ldr	r2, [r6, r0]
   30080:	add	r2, r2, #1
   30084:	str	r2, [r6, r0]
   30088:	ldr	r3, [r8, r0]
   3008c:	sdiv	r4, r2, r3
   30090:	mls	r2, r4, r3, r2
   30094:	cmp	r2, #0
   30098:	bne	300fc <GetDataSlab+0xd738>
   3009c:	mov	r2, #0
   300a0:	str	r2, [r6, r0]
   300a4:	ldr	r2, [sl, r0]
   300a8:	sdiv	r3, r9, r2
   300ac:	mls	r3, r3, r2, r9
   300b0:	cmp	r3, #0
   300b4:	beq	300d0 <GetDataSlab+0xd70c>
   300b8:	ldr	r4, [lr, r0]
   300bc:	ldr	r7, [ip, r0]
   300c0:	sub	r2, r2, r3
   300c4:	mla	r2, r7, r4, r2
   300c8:	add	r9, r2, r9
   300cc:	b	300e8 <GetDataSlab+0xd724>
   300d0:	ldr	r2, [ip, r0]
   300d4:	cmp	r2, #0
   300d8:	beq	300ec <GetDataSlab+0xd728>
   300dc:	ldr	r3, [lr, r0]
   300e0:	mla	r9, r3, r2, r9
   300e4:	mul	r2, r3, r2
   300e8:	add	r5, r5, r2, lsl #3
   300ec:	subs	r1, r1, #1
   300f0:	add	r0, r0, #4
   300f4:	bne	3007c <GetDataSlab+0xd6b8>
   300f8:	b	3010c <GetDataSlab+0xd748>
   300fc:	ldr	r1, [sp, #16]
   30100:	ldr	r0, [r1, r0]
   30104:	add	r5, r5, r0, lsl #3
   30108:	add	r9, r0, r9
   3010c:	ldr	r0, [sp, #36]	; 0x24
   30110:	ldr	r1, [sp, #48]	; 0x30
   30114:	ldr	r3, [sp, #44]	; 0x2c
   30118:	ldr	r2, [sp, #56]	; 0x38
   3011c:	add	r1, r1, r0
   30120:	mov	r0, #0
   30124:	str	r1, [sp, #48]	; 0x30
   30128:	ldr	r1, [sp, #52]	; 0x34
   3012c:	add	r3, r3, r1
   30130:	cmp	r3, r2
   30134:	str	r3, [sp, #44]	; 0x2c
   30138:	blt	30014 <GetDataSlab+0xd650>
   3013c:	b	24900 <GetDataSlab+0x1f3c>
   30140:	ldr	r0, [fp, #16]
   30144:	add	r1, sp, #64	; 0x40
   30148:	mov	lr, #0
   3014c:	ldr	r8, [r0]
   30150:	sub	r0, r8, #1
   30154:	str	r0, [fp, #-72]	; 0xffffffb8
   30158:	ldr	r0, [r4]
   3015c:	str	r0, [sp, #28]
   30160:	str	r0, [sp, #64]	; 0x40
   30164:	ldr	r0, [fp, #20]
   30168:	ldr	r2, [r0]
   3016c:	ldr	r0, [fp, #24]
   30170:	cmp	r0, #2
   30174:	str	r2, [sp, #40]	; 0x28
   30178:	str	r2, [sp, #44]	; 0x2c
   3017c:	blt	30228 <GetDataSlab+0xd864>
   30180:	ldr	r3, [sp, #28]
   30184:	ldr	r6, [sp, #40]	; 0x28
   30188:	mov	r9, r4
   3018c:	mov	r0, #1
   30190:	mov	lr, #0
   30194:	mov	r2, r4
   30198:	mov	r7, r3
   3019c:	str	r6, [sp, #44]	; 0x2c
   301a0:	ldr	r6, [fp, #16]
   301a4:	mov	r4, #0
   301a8:	ldr	r6, [r6, r0, lsl #2]
   301ac:	str	r3, [r1, r0, lsl #2]
   301b0:	sub	r1, fp, #72	; 0x48
   301b4:	sub	r5, r6, #1
   301b8:	str	r5, [r1, r0, lsl #2]
   301bc:	ldr	ip, [r9, r0, lsl #2]
   301c0:	mov	r6, ip
   301c4:	mul	r3, r6, r3
   301c8:	ldr	r6, [r2, -r4, lsl #2]
   301cc:	add	r4, r4, #1
   301d0:	cmp	r0, r4
   301d4:	mul	r5, r5, r6
   301d8:	bne	301c4 <GetDataSlab+0xd800>
   301dc:	sub	r4, fp, #72	; 0x48
   301e0:	add	r1, sp, #64	; 0x40
   301e4:	add	r2, r2, #4
   301e8:	str	r5, [r4, r0, lsl #2]
   301ec:	ldr	r4, [fp, #12]
   301f0:	str	r3, [r1, r0, lsl #2]
   301f4:	ldr	r5, [sp, #44]	; 0x2c
   301f8:	ldr	r4, [r4, r0, lsl #2]
   301fc:	mla	lr, r4, r7, lr
   30200:	ldr	r4, [fp, #20]
   30204:	ldr	r7, [fp, #24]
   30208:	ldr	r4, [r4, r0, lsl #2]
   3020c:	add	r0, r0, #1
   30210:	cmp	r0, r7
   30214:	mov	r7, r3
   30218:	mov	r3, ip
   3021c:	mul	r5, r4, r5
   30220:	str	r5, [sp, #44]	; 0x2c
   30224:	bne	301a0 <GetDataSlab+0xd7dc>
   30228:	ldr	r0, [sp, #48]	; 0x30
   3022c:	cmp	r8, #1
   30230:	add	r3, r0, lr, lsl #3
   30234:	bne	3b5d4 <GetDataSlab+0x18c10>
   30238:	ldr	r0, [sp, #44]	; 0x2c
   3023c:	ldr	r1, [sp, #40]	; 0x28
   30240:	cmp	r0, #1
   30244:	blt	3b770 <GetDataSlab+0x18dac>
   30248:	add	r0, sp, #104	; 0x68
   3024c:	ldr	r7, [fp, #12]
   30250:	ldr	r6, [sp, #56]	; 0x38
   30254:	mov	r2, #0
   30258:	orr	ip, r0, #4
   3025c:	ldr	r0, [fp, #20]
   30260:	add	r9, r0, #4
   30264:	add	r0, sp, #64	; 0x40
   30268:	orr	r8, r0, #4
   3026c:	ldr	r0, [fp, #24]
   30270:	sub	r0, r0, #1
   30274:	str	r0, [sp, #16]
   30278:	sub	r0, fp, #72	; 0x48
   3027c:	orr	r0, r0, #4
   30280:	str	r0, [sp, #12]
   30284:	lsl	r0, r1, #3
   30288:	str	r0, [sp, #24]
   3028c:	ldr	r0, [r7], #4
   30290:	str	r0, [sp, #20]
   30294:	cmp	r1, #1
   30298:	str	r2, [sp, #32]
   3029c:	blt	302c8 <GetDataSlab+0xd904>
   302a0:	ldr	r0, [sp, #20]
   302a4:	ldr	r5, [sp, #40]	; 0x28
   302a8:	mov	r4, r6
   302ac:	add	r2, r3, r0, lsl #3
   302b0:	ldrd	r0, [r2]
   302b4:	add	r2, r2, #8
   302b8:	subs	r5, r5, #1
   302bc:	strd	r0, [r4]
   302c0:	add	r4, r4, #8
   302c4:	bne	302b0 <GetDataSlab+0xd8ec>
   302c8:	ldr	r0, [sp, #28]
   302cc:	str	r6, [sp, #36]	; 0x24
   302d0:	add	r3, r3, r0, lsl #3
   302d4:	add	lr, lr, r0
   302d8:	ldr	r0, [fp, #24]
   302dc:	cmp	r0, #2
   302e0:	blt	30384 <GetDataSlab+0xd9c0>
   302e4:	ldr	r2, [sp, #16]
   302e8:	mov	sl, #0
   302ec:	ldr	r0, [ip, sl]
   302f0:	add	r0, r0, #1
   302f4:	str	r0, [ip, sl]
   302f8:	ldr	r1, [r9, sl]
   302fc:	sdiv	r4, r0, r1
   30300:	mls	r0, r4, r1, r0
   30304:	cmp	r0, #0
   30308:	bne	30374 <GetDataSlab+0xd9b0>
   3030c:	ldr	r4, [r8, sl]
   30310:	mov	r0, #0
   30314:	str	r0, [ip, sl]
   30318:	sdiv	r0, lr, r4
   3031c:	mls	r5, r0, r4, lr
   30320:	cmp	r5, #0
   30324:	beq	30344 <GetDataSlab+0xd980>
   30328:	add	r0, sp, #64	; 0x40
   3032c:	ldr	r1, [r7, sl]
   30330:	sub	r4, r4, r5
   30334:	ldr	r0, [r0, sl]
   30338:	mla	r0, r1, r0, r4
   3033c:	add	lr, r0, lr
   30340:	b	30360 <GetDataSlab+0xd99c>
   30344:	ldr	r4, [r7, sl]
   30348:	cmp	r4, #0
   3034c:	beq	30364 <GetDataSlab+0xd9a0>
   30350:	add	r0, sp, #64	; 0x40
   30354:	ldr	r0, [r0, sl]
   30358:	mla	lr, r0, r4, lr
   3035c:	mul	r0, r0, r4
   30360:	add	r3, r3, r0, lsl #3
   30364:	subs	r2, r2, #1
   30368:	add	sl, sl, #4
   3036c:	bne	302ec <GetDataSlab+0xd928>
   30370:	b	30384 <GetDataSlab+0xd9c0>
   30374:	ldr	r0, [sp, #12]
   30378:	ldr	r0, [r0, sl]
   3037c:	add	r3, r3, r0, lsl #3
   30380:	add	lr, r0, lr
   30384:	ldr	r0, [sp, #24]
   30388:	ldr	r6, [sp, #36]	; 0x24
   3038c:	ldr	r1, [sp, #40]	; 0x28
   30390:	ldr	r2, [sp, #32]
   30394:	add	r6, r6, r0
   30398:	ldr	r0, [sp, #44]	; 0x2c
   3039c:	add	r2, r2, r1
   303a0:	cmp	r2, r0
   303a4:	blt	30294 <GetDataSlab+0xd8d0>
   303a8:	b	3b770 <GetDataSlab+0x18dac>
   303ac:	ldr	r0, [fp, #16]
   303b0:	sub	sl, fp, #72	; 0x48
   303b4:	mov	r3, #0
   303b8:	ldr	r0, [r0]
   303bc:	str	r0, [sp, #28]
   303c0:	sub	r0, r0, #1
   303c4:	str	r0, [fp, #-72]	; 0xffffffb8
   303c8:	ldr	r0, [r4]
   303cc:	str	r0, [sp, #36]	; 0x24
   303d0:	str	r0, [sp, #64]	; 0x40
   303d4:	ldr	r0, [fp, #20]
   303d8:	ldr	r1, [r0]
   303dc:	ldr	r0, [fp, #24]
   303e0:	cmp	r0, #2
   303e4:	str	r1, [sp, #40]	; 0x28
   303e8:	str	r1, [sp, #44]	; 0x2c
   303ec:	blt	30498 <GetDataSlab+0xdad4>
   303f0:	ldr	r2, [sp, #36]	; 0x24
   303f4:	ldr	r6, [sp, #40]	; 0x28
   303f8:	mov	r9, r4
   303fc:	mov	r0, #1
   30400:	mov	r3, #0
   30404:	mov	r1, r4
   30408:	mov	r7, r2
   3040c:	str	r6, [sp, #44]	; 0x2c
   30410:	ldr	r6, [fp, #16]
   30414:	add	r5, sp, #64	; 0x40
   30418:	mov	r4, #0
   3041c:	ldr	r6, [r6, r0, lsl #2]
   30420:	str	r2, [r5, r0, lsl #2]
   30424:	sub	r5, r6, #1
   30428:	str	r5, [sl, r0, lsl #2]
   3042c:	ldr	ip, [r9, r0, lsl #2]
   30430:	mov	r6, ip
   30434:	mul	r2, r6, r2
   30438:	ldr	r6, [r1, -r4, lsl #2]
   3043c:	add	r4, r4, #1
   30440:	cmp	r0, r4
   30444:	mul	r5, r5, r6
   30448:	bne	30434 <GetDataSlab+0xda70>
   3044c:	ldr	r6, [fp, #12]
   30450:	add	r4, sp, #64	; 0x40
   30454:	sub	sl, fp, #72	; 0x48
   30458:	add	r1, r1, #4
   3045c:	str	r2, [r4, r0, lsl #2]
   30460:	str	r5, [sl, r0, lsl #2]
   30464:	ldr	r4, [fp, #20]
   30468:	ldr	r6, [r6, r0, lsl #2]
   3046c:	mla	r3, r6, r7, r3
   30470:	ldr	r7, [r4, r0, lsl #2]
   30474:	ldr	r4, [sp, #44]	; 0x2c
   30478:	add	r0, r0, #1
   3047c:	mul	r4, r7, r4
   30480:	ldr	r7, [fp, #24]
   30484:	str	r4, [sp, #44]	; 0x2c
   30488:	cmp	r0, r7
   3048c:	mov	r7, r2
   30490:	mov	r2, ip
   30494:	bne	30410 <GetDataSlab+0xda4c>
   30498:	ldr	r0, [sp, #48]	; 0x30
   3049c:	ldr	r1, [sp, #28]
   304a0:	add	r7, r0, r3
   304a4:	cmp	r1, #1
   304a8:	bne	3b9f0 <GetDataSlab+0x1902c>
   304ac:	ldr	r0, [sp, #44]	; 0x2c
   304b0:	ldr	r6, [sp, #40]	; 0x28
   304b4:	cmp	r0, #1
   304b8:	blt	248fc <GetDataSlab+0x1f38>
   304bc:	add	r0, sp, #104	; 0x68
   304c0:	ldr	r2, [fp, #20]
   304c4:	mov	r9, #0
   304c8:	orr	r1, r0, #4
   304cc:	add	r0, sp, #64	; 0x40
   304d0:	orr	r0, r0, #4
   304d4:	str	r0, [sp, #28]
   304d8:	ldr	r0, [fp, #12]
   304dc:	add	r8, r2, #4
   304e0:	mov	r2, lr
   304e4:	mov	r5, r2
   304e8:	add	lr, r0, #4
   304ec:	ldr	r0, [fp, #24]
   304f0:	sub	r0, r0, #1
   304f4:	str	r0, [sp, #32]
   304f8:	sub	r0, fp, #72	; 0x48
   304fc:	orr	r0, r0, #4
   30500:	str	r0, [sp, #24]
   30504:	lsl	r0, r6, #3
   30508:	str	r0, [sp, #48]	; 0x30
   3050c:	mov	r0, #0
   30510:	str	r0, [sp, #56]	; 0x38
   30514:	ldr	r0, [fp, #12]
   30518:	cmp	r6, #1
   3051c:	blt	30544 <GetDataSlab+0xdb80>
   30520:	ldr	r0, [r0]
   30524:	ldr	r6, [sp, #40]	; 0x28
   30528:	mov	r2, r5
   3052c:	add	r0, r7, r0
   30530:	ldrb	r4, [r0], #1
   30534:	subs	r6, r6, #1
   30538:	stm	r2, {r4, r9}
   3053c:	add	r2, r2, #8
   30540:	bne	30530 <GetDataSlab+0xdb6c>
   30544:	ldr	r0, [sp, #36]	; 0x24
   30548:	str	r5, [sp, #52]	; 0x34
   3054c:	add	r7, r7, r0
   30550:	add	r3, r3, r0
   30554:	ldr	r0, [fp, #24]
   30558:	cmp	r0, #2
   3055c:	blt	30600 <GetDataSlab+0xdc3c>
   30560:	ldr	ip, [sp, #32]
   30564:	ldr	r5, [sp, #28]
   30568:	mov	r0, #0
   3056c:	ldr	r2, [r1, r0]
   30570:	add	r2, r2, #1
   30574:	str	r2, [r1, r0]
   30578:	ldr	r4, [r8, r0]
   3057c:	sdiv	r6, r2, r4
   30580:	mls	r2, r6, r4, r2
   30584:	cmp	r2, #0
   30588:	bne	305f0 <GetDataSlab+0xdc2c>
   3058c:	ldr	r4, [r5, r0]
   30590:	str	r9, [r1, r0]
   30594:	sdiv	r2, r3, r4
   30598:	mls	r6, r2, r4, r3
   3059c:	cmp	r6, #0
   305a0:	beq	305c4 <GetDataSlab+0xdc00>
   305a4:	add	r2, sp, #64	; 0x40
   305a8:	ldr	sl, [lr, r0]
   305ac:	sub	r4, r4, r6
   305b0:	ldr	r2, [r2, r0]
   305b4:	mla	r2, sl, r2, r4
   305b8:	add	r3, r2, r3
   305bc:	add	r7, r7, r2
   305c0:	b	305e0 <GetDataSlab+0xdc1c>
   305c4:	ldr	r4, [lr, r0]
   305c8:	cmp	r4, #0
   305cc:	beq	305e0 <GetDataSlab+0xdc1c>
   305d0:	add	r2, sp, #64	; 0x40
   305d4:	ldr	r2, [r2, r0]
   305d8:	mla	r3, r2, r4, r3
   305dc:	mla	r7, r2, r4, r7
   305e0:	subs	ip, ip, #1
   305e4:	add	r0, r0, #4
   305e8:	bne	3056c <GetDataSlab+0xdba8>
   305ec:	b	30600 <GetDataSlab+0xdc3c>
   305f0:	ldr	r2, [sp, #24]
   305f4:	ldr	r0, [r2, r0]
   305f8:	add	r7, r7, r0
   305fc:	add	r3, r0, r3
   30600:	ldr	r6, [sp, #40]	; 0x28
   30604:	ldr	r4, [sp, #56]	; 0x38
   30608:	ldr	r0, [sp, #48]	; 0x30
   3060c:	ldr	r5, [sp, #52]	; 0x34
   30610:	ldr	r2, [sp, #44]	; 0x2c
   30614:	add	r4, r4, r6
   30618:	add	r5, r5, r0
   3061c:	mov	r0, #0
   30620:	cmp	r4, r2
   30624:	str	r4, [sp, #56]	; 0x38
   30628:	blt	30514 <GetDataSlab+0xdb50>
   3062c:	b	24900 <GetDataSlab+0x1f3c>
   30630:	ldr	r0, [fp, #16]
   30634:	add	r2, sp, #64	; 0x40
   30638:	mov	r8, #0
   3063c:	ldr	lr, [r0]
   30640:	sub	r0, lr, #1
   30644:	str	r0, [fp, #-72]	; 0xffffffb8
   30648:	ldr	r0, [r4]
   3064c:	str	r0, [sp, #40]	; 0x28
   30650:	str	r0, [sp, #64]	; 0x40
   30654:	ldr	r0, [fp, #20]
   30658:	ldr	r1, [r0]
   3065c:	ldr	r0, [fp, #24]
   30660:	cmp	r0, #2
   30664:	str	r1, [sp, #44]	; 0x2c
   30668:	str	r1, [sp, #52]	; 0x34
   3066c:	blt	30718 <GetDataSlab+0xdd54>
   30670:	ldr	r6, [sp, #40]	; 0x28
   30674:	ldr	r0, [sp, #44]	; 0x2c
   30678:	mov	r9, r4
   3067c:	mov	r1, #1
   30680:	mov	r8, #0
   30684:	mov	r7, r4
   30688:	mov	r5, r6
   3068c:	str	r0, [sp, #52]	; 0x34
   30690:	ldr	r0, [fp, #16]
   30694:	mov	r4, #0
   30698:	ldr	r0, [r0, r1, lsl #2]
   3069c:	str	r6, [r2, r1, lsl #2]
   306a0:	sub	r3, r0, #1
   306a4:	sub	r0, fp, #72	; 0x48
   306a8:	str	r3, [r0, r1, lsl #2]
   306ac:	ldr	r9, [r9, r1, lsl #2]
   306b0:	mov	r0, r9
   306b4:	mul	r6, r0, r6
   306b8:	ldr	r0, [r7, -r4, lsl #2]
   306bc:	add	r4, r4, #1
   306c0:	cmp	r1, r4
   306c4:	mul	r3, r3, r0
   306c8:	bne	306b4 <GetDataSlab+0xdcf0>
   306cc:	add	r2, sp, #64	; 0x40
   306d0:	sub	r0, fp, #72	; 0x48
   306d4:	add	r7, r7, #4
   306d8:	str	r3, [r0, r1, lsl #2]
   306dc:	str	r6, [r2, r1, lsl #2]
   306e0:	ldr	r3, [sp, #52]	; 0x34
   306e4:	ldr	r0, [ip, r1, lsl #2]
   306e8:	mla	r8, r0, r5, r8
   306ec:	ldr	r0, [fp, #20]
   306f0:	mov	r5, r6
   306f4:	mov	r6, r9
   306f8:	ldr	r9, [fp, #8]
   306fc:	ldr	r0, [r0, r1, lsl #2]
   30700:	add	r1, r1, #1
   30704:	mul	r3, r0, r3
   30708:	ldr	r0, [fp, #24]
   3070c:	str	r3, [sp, #52]	; 0x34
   30710:	cmp	r1, r0
   30714:	bne	30690 <GetDataSlab+0xdccc>
   30718:	ldr	r0, [sp, #48]	; 0x30
   3071c:	cmp	lr, #1
   30720:	add	r7, r0, r8, lsl #1
   30724:	bne	3bbac <GetDataSlab+0x191e8>
   30728:	ldr	r0, [sp, #52]	; 0x34
   3072c:	ldr	r2, [sp, #44]	; 0x2c
   30730:	cmp	r0, #1
   30734:	blt	248fc <GetDataSlab+0x1f38>
   30738:	add	r0, sp, #104	; 0x68
   3073c:	ldr	r6, [sp, #56]	; 0x38
   30740:	orr	r1, r0, #4
   30744:	ldr	r0, [fp, #20]
   30748:	add	r9, r0, #4
   3074c:	add	r0, sp, #64	; 0x40
   30750:	orr	lr, r0, #4
   30754:	ldr	r0, [fp, #24]
   30758:	sub	r0, r0, #1
   3075c:	str	r0, [sp, #32]
   30760:	sub	r0, fp, #72	; 0x48
   30764:	orr	r0, r0, #4
   30768:	str	r0, [sp, #28]
   3076c:	lsl	r0, r2, #3
   30770:	str	r0, [sp, #48]	; 0x30
   30774:	ldr	r0, [ip], #4
   30778:	str	r0, [sp, #36]	; 0x24
   3077c:	mov	r0, #0
   30780:	str	r0, [sp, #60]	; 0x3c
   30784:	cmp	r2, #1
   30788:	blt	307b4 <GetDataSlab+0xddf0>
   3078c:	ldr	r0, [sp, #36]	; 0x24
   30790:	ldr	r4, [sp, #44]	; 0x2c
   30794:	mov	r5, r6
   30798:	add	r0, r7, r0, lsl #1
   3079c:	ldrsh	r2, [r0], #2
   307a0:	subs	r4, r4, #1
   307a4:	asr	r3, r2, #31
   307a8:	strd	r2, [r5]
   307ac:	add	r5, r5, #8
   307b0:	bne	3079c <GetDataSlab+0xddd8>
   307b4:	ldr	r0, [sp, #40]	; 0x28
   307b8:	str	r6, [sp, #56]	; 0x38
   307bc:	add	r7, r7, r0, lsl #1
   307c0:	add	r8, r8, r0
   307c4:	ldr	r0, [fp, #24]
   307c8:	cmp	r0, #2
   307cc:	blt	30870 <GetDataSlab+0xdeac>
   307d0:	ldr	sl, [sp, #32]
   307d4:	mov	r0, #0
   307d8:	ldr	r2, [r1, r0]
   307dc:	add	r2, r2, #1
   307e0:	str	r2, [r1, r0]
   307e4:	ldr	r3, [r9, r0]
   307e8:	sdiv	r4, r2, r3
   307ec:	mls	r2, r4, r3, r2
   307f0:	cmp	r2, #0
   307f4:	bne	30860 <GetDataSlab+0xde9c>
   307f8:	ldr	r3, [lr, r0]
   307fc:	mov	r2, #0
   30800:	str	r2, [r1, r0]
   30804:	sdiv	r2, r8, r3
   30808:	mls	r4, r2, r3, r8
   3080c:	cmp	r4, #0
   30810:	beq	30830 <GetDataSlab+0xde6c>
   30814:	add	r2, sp, #64	; 0x40
   30818:	ldr	r5, [ip, r0]
   3081c:	sub	r3, r3, r4
   30820:	ldr	r2, [r2, r0]
   30824:	mla	r2, r5, r2, r3
   30828:	add	r8, r2, r8
   3082c:	b	3084c <GetDataSlab+0xde88>
   30830:	ldr	r3, [ip, r0]
   30834:	cmp	r3, #0
   30838:	beq	30850 <GetDataSlab+0xde8c>
   3083c:	add	r2, sp, #64	; 0x40
   30840:	ldr	r2, [r2, r0]
   30844:	mla	r8, r2, r3, r8
   30848:	mul	r2, r2, r3
   3084c:	add	r7, r7, r2, lsl #1
   30850:	subs	sl, sl, #1
   30854:	add	r0, r0, #4
   30858:	bne	307d8 <GetDataSlab+0xde14>
   3085c:	b	30870 <GetDataSlab+0xdeac>
   30860:	ldr	r2, [sp, #28]
   30864:	ldr	r0, [r2, r0]
   30868:	add	r7, r7, r0, lsl #1
   3086c:	add	r8, r0, r8
   30870:	ldr	r2, [sp, #44]	; 0x2c
   30874:	ldr	r4, [sp, #60]	; 0x3c
   30878:	ldr	r0, [sp, #48]	; 0x30
   3087c:	ldr	r6, [sp, #56]	; 0x38
   30880:	ldr	r3, [sp, #52]	; 0x34
   30884:	add	r4, r4, r2
   30888:	add	r6, r6, r0
   3088c:	mov	r0, #0
   30890:	cmp	r4, r3
   30894:	str	r4, [sp, #60]	; 0x3c
   30898:	blt	30784 <GetDataSlab+0xddc0>
   3089c:	b	24900 <GetDataSlab+0x1f3c>
   308a0:	ldr	r0, [fp, #16]
   308a4:	sub	r7, fp, #72	; 0x48
   308a8:	mov	r2, #0
   308ac:	ldr	sl, [r0]
   308b0:	sub	r0, sl, #1
   308b4:	str	r0, [fp, #-72]	; 0xffffffb8
   308b8:	ldr	r0, [r4]
   308bc:	str	r0, [sp, #40]	; 0x28
   308c0:	str	r0, [sp, #64]	; 0x40
   308c4:	ldr	r0, [fp, #20]
   308c8:	ldr	r1, [r0]
   308cc:	ldr	r0, [fp, #24]
   308d0:	cmp	r0, #2
   308d4:	mov	r6, r1
   308d8:	str	r1, [sp, #56]	; 0x38
   308dc:	blt	30980 <GetDataSlab+0xdfbc>
   308e0:	ldr	r5, [sp, #40]	; 0x28
   308e4:	ldr	r6, [sp, #56]	; 0x38
   308e8:	mov	r9, r4
   308ec:	mov	r1, #1
   308f0:	mov	r2, #0
   308f4:	mov	r3, r4
   308f8:	mov	ip, r5
   308fc:	ldr	r0, [fp, #16]
   30900:	add	r4, sp, #64	; 0x40
   30904:	ldr	r0, [r0, r1, lsl #2]
   30908:	str	r5, [r4, r1, lsl #2]
   3090c:	mov	r4, #0
   30910:	sub	r0, r0, #1
   30914:	str	r0, [r7, r1, lsl #2]
   30918:	ldr	r9, [r9, r1, lsl #2]
   3091c:	mov	r7, r9
   30920:	mul	r5, r7, r5
   30924:	ldr	r7, [r3, -r4, lsl #2]
   30928:	add	r4, r4, #1
   3092c:	cmp	r1, r4
   30930:	mul	r0, r0, r7
   30934:	bne	30920 <GetDataSlab+0xdf5c>
   30938:	sub	r7, fp, #72	; 0x48
   3093c:	add	r4, sp, #64	; 0x40
   30940:	add	r3, r3, #4
   30944:	str	r0, [r7, r1, lsl #2]
   30948:	ldr	r0, [fp, #12]
   3094c:	str	r5, [r4, r1, lsl #2]
   30950:	ldr	r0, [r0, r1, lsl #2]
   30954:	mla	r2, r0, ip, r2
   30958:	ldr	r0, [fp, #20]
   3095c:	mov	ip, r5
   30960:	mov	r5, r9
   30964:	ldr	r9, [fp, #8]
   30968:	ldr	r0, [r0, r1, lsl #2]
   3096c:	add	r1, r1, #1
   30970:	mul	r6, r0, r6
   30974:	ldr	r0, [fp, #24]
   30978:	cmp	r1, r0
   3097c:	bne	308fc <GetDataSlab+0xdf38>
   30980:	ldr	r0, [sp, #48]	; 0x30
   30984:	cmp	sl, #1
   30988:	add	r7, r0, r2, lsl #1
   3098c:	bne	3bd4c <GetDataSlab+0x19388>
   30990:	ldr	r4, [sp, #56]	; 0x38
   30994:	cmp	r6, #1
   30998:	blt	248fc <GetDataSlab+0x1f38>
   3099c:	add	r0, sp, #104	; 0x68
   309a0:	mov	r3, lr
   309a4:	str	r6, [sp, #48]	; 0x30
   309a8:	mov	r9, #0
   309ac:	orr	r1, r0, #4
   309b0:	ldr	r0, [fp, #20]
   309b4:	mov	r6, r3
   309b8:	add	ip, r0, #4
   309bc:	add	r0, sp, #64	; 0x40
   309c0:	orr	lr, r0, #4
   309c4:	ldr	r0, [fp, #24]
   309c8:	sub	r0, r0, #1
   309cc:	str	r0, [sp, #28]
   309d0:	sub	r0, fp, #72	; 0x48
   309d4:	orr	r0, r0, #4
   309d8:	str	r0, [sp, #24]
   309dc:	lsl	r0, r4, #3
   309e0:	str	r0, [sp, #36]	; 0x24
   309e4:	ldr	r0, [sp, #60]	; 0x3c
   309e8:	ldr	r5, [r0], #4
   309ec:	str	r0, [sp, #60]	; 0x3c
   309f0:	mov	r0, #0
   309f4:	str	r0, [sp, #52]	; 0x34
   309f8:	str	r5, [sp, #32]
   309fc:	cmp	r4, #1
   30a00:	blt	30a28 <GetDataSlab+0xe064>
   30a04:	ldr	r0, [sp, #32]
   30a08:	ldr	r5, [sp, #56]	; 0x38
   30a0c:	mov	r4, r6
   30a10:	add	r0, r7, r0, lsl #1
   30a14:	ldrh	r8, [r0], #2
   30a18:	subs	r5, r5, #1
   30a1c:	strd	r8, [r4]
   30a20:	add	r4, r4, #8
   30a24:	bne	30a14 <GetDataSlab+0xe050>
   30a28:	ldr	r0, [sp, #40]	; 0x28
   30a2c:	str	r6, [sp, #44]	; 0x2c
   30a30:	add	r7, r7, r0, lsl #1
   30a34:	add	r2, r2, r0
   30a38:	ldr	r0, [fp, #24]
   30a3c:	cmp	r0, #2
   30a40:	blt	30ae4 <GetDataSlab+0xe120>
   30a44:	ldr	sl, [sp, #28]
   30a48:	mov	r0, #0
   30a4c:	add	r8, sp, #64	; 0x40
   30a50:	ldr	r4, [r1, r0]
   30a54:	add	r4, r4, #1
   30a58:	str	r4, [r1, r0]
   30a5c:	ldr	r5, [ip, r0]
   30a60:	sdiv	r6, r4, r5
   30a64:	mls	r4, r6, r5, r4
   30a68:	cmp	r4, #0
   30a6c:	bne	30ad4 <GetDataSlab+0xe110>
   30a70:	ldr	r4, [lr, r0]
   30a74:	str	r9, [r1, r0]
   30a78:	sdiv	r5, r2, r4
   30a7c:	mls	r5, r5, r4, r2
   30a80:	cmp	r5, #0
   30a84:	beq	30aa4 <GetDataSlab+0xe0e0>
   30a88:	ldr	r3, [sp, #60]	; 0x3c
   30a8c:	ldr	r6, [r8, r0]
   30a90:	sub	r4, r4, r5
   30a94:	ldr	r3, [r3, r0]
   30a98:	mla	r3, r3, r6, r4
   30a9c:	add	r2, r3, r2
   30aa0:	b	30ac0 <GetDataSlab+0xe0fc>
   30aa4:	ldr	r3, [sp, #60]	; 0x3c
   30aa8:	ldr	r4, [r3, r0]
   30aac:	cmp	r4, #0
   30ab0:	beq	30ac4 <GetDataSlab+0xe100>
   30ab4:	ldr	r3, [r8, r0]
   30ab8:	mla	r2, r3, r4, r2
   30abc:	mul	r3, r3, r4
   30ac0:	add	r7, r7, r3, lsl #1
   30ac4:	subs	sl, sl, #1
   30ac8:	add	r0, r0, #4
   30acc:	bne	30a50 <GetDataSlab+0xe08c>
   30ad0:	b	30ae4 <GetDataSlab+0xe120>
   30ad4:	ldr	r3, [sp, #24]
   30ad8:	ldr	r0, [r3, r0]
   30adc:	add	r7, r7, r0, lsl #1
   30ae0:	add	r2, r0, r2
   30ae4:	ldr	r4, [sp, #56]	; 0x38
   30ae8:	ldr	r5, [sp, #52]	; 0x34
   30aec:	ldr	r0, [sp, #36]	; 0x24
   30af0:	ldr	r6, [sp, #44]	; 0x2c
   30af4:	ldr	r3, [sp, #48]	; 0x30
   30af8:	add	r5, r5, r4
   30afc:	add	r6, r6, r0
   30b00:	mov	r0, #0
   30b04:	cmp	r5, r3
   30b08:	str	r5, [sp, #52]	; 0x34
   30b0c:	blt	309fc <GetDataSlab+0xe038>
   30b10:	b	24900 <GetDataSlab+0x1f3c>
   30b14:	ldr	r0, [fp, #16]
   30b18:	add	r5, sp, #64	; 0x40
   30b1c:	mov	r8, #0
   30b20:	ldr	r9, [r0]
   30b24:	sub	r0, r9, #1
   30b28:	str	r0, [fp, #-72]	; 0xffffffb8
   30b2c:	ldr	r0, [r4]
   30b30:	str	r0, [sp, #40]	; 0x28
   30b34:	str	r0, [sp, #64]	; 0x40
   30b38:	ldr	r0, [fp, #20]
   30b3c:	ldr	r1, [r0]
   30b40:	ldr	r0, [fp, #24]
   30b44:	cmp	r0, #2
   30b48:	str	r1, [sp, #44]	; 0x2c
   30b4c:	str	r1, [sp, #52]	; 0x34
   30b50:	blt	30bf8 <GetDataSlab+0xe234>
   30b54:	ldr	r7, [sp, #40]	; 0x28
   30b58:	ldr	r0, [sp, #44]	; 0x2c
   30b5c:	mov	r3, r4
   30b60:	mov	r1, #1
   30b64:	mov	r8, #0
   30b68:	mov	r2, r4
   30b6c:	mov	r6, r7
   30b70:	str	r0, [sp, #52]	; 0x34
   30b74:	ldr	r0, [fp, #16]
   30b78:	mov	r4, #0
   30b7c:	ldr	r0, [r0, r1, lsl #2]
   30b80:	str	r7, [r5, r1, lsl #2]
   30b84:	sub	r5, fp, #72	; 0x48
   30b88:	sub	r0, r0, #1
   30b8c:	str	r0, [r5, r1, lsl #2]
   30b90:	ldr	lr, [r3, r1, lsl #2]
   30b94:	mov	r5, lr
   30b98:	mul	r7, r5, r7
   30b9c:	ldr	r5, [r2, -r4, lsl #2]
   30ba0:	add	r4, r4, #1
   30ba4:	cmp	r1, r4
   30ba8:	mul	r0, r0, r5
   30bac:	bne	30b98 <GetDataSlab+0xe1d4>
   30bb0:	add	r5, sp, #64	; 0x40
   30bb4:	sub	r4, fp, #72	; 0x48
   30bb8:	add	r2, r2, #4
   30bbc:	str	r0, [r4, r1, lsl #2]
   30bc0:	str	r7, [r5, r1, lsl #2]
   30bc4:	ldr	r4, [sp, #52]	; 0x34
   30bc8:	ldr	r0, [ip, r1, lsl #2]
   30bcc:	mla	r8, r0, r6, r8
   30bd0:	ldr	r0, [fp, #20]
   30bd4:	mov	r6, r7
   30bd8:	mov	r7, lr
   30bdc:	ldr	r0, [r0, r1, lsl #2]
   30be0:	add	r1, r1, #1
   30be4:	mul	r4, r0, r4
   30be8:	ldr	r0, [fp, #24]
   30bec:	str	r4, [sp, #52]	; 0x34
   30bf0:	cmp	r1, r0
   30bf4:	bne	30b74 <GetDataSlab+0xe1b0>
   30bf8:	ldr	r0, [sp, #48]	; 0x30
   30bfc:	cmp	r9, #1
   30c00:	add	r7, r0, r8, lsl #2
   30c04:	bne	3bef8 <GetDataSlab+0x19534>
   30c08:	ldr	r0, [sp, #52]	; 0x34
   30c0c:	ldr	r2, [sp, #44]	; 0x2c
   30c10:	cmp	r0, #1
   30c14:	blt	248fc <GetDataSlab+0x1f38>
   30c18:	add	r0, sp, #104	; 0x68
   30c1c:	ldr	r5, [sp, #56]	; 0x38
   30c20:	add	r9, ip, #4
   30c24:	orr	r1, r0, #4
   30c28:	ldr	r0, [fp, #20]
   30c2c:	add	sl, r0, #4
   30c30:	add	r0, sp, #64	; 0x40
   30c34:	orr	lr, r0, #4
   30c38:	ldr	r0, [fp, #24]
   30c3c:	sub	r0, r0, #1
   30c40:	str	r0, [sp, #32]
   30c44:	sub	r0, fp, #72	; 0x48
   30c48:	orr	r0, r0, #4
   30c4c:	str	r0, [sp, #28]
   30c50:	lsl	r0, r2, #3
   30c54:	str	r0, [sp, #36]	; 0x24
   30c58:	mov	r0, #0
   30c5c:	str	r0, [sp, #56]	; 0x38
   30c60:	cmp	r2, #1
   30c64:	blt	30c94 <GetDataSlab+0xe2d0>
   30c68:	ldr	r0, [fp, #12]
   30c6c:	ldr	r6, [sp, #44]	; 0x2c
   30c70:	mov	r4, r5
   30c74:	ldr	r0, [r0]
   30c78:	add	r0, r7, r0, lsl #2
   30c7c:	ldr	r2, [r0], #4
   30c80:	subs	r6, r6, #1
   30c84:	asr	r3, r2, #31
   30c88:	strd	r2, [r4]
   30c8c:	add	r4, r4, #8
   30c90:	bne	30c7c <GetDataSlab+0xe2b8>
   30c94:	ldr	r0, [sp, #40]	; 0x28
   30c98:	str	r5, [sp, #48]	; 0x30
   30c9c:	add	r7, r7, r0, lsl #2
   30ca0:	add	r8, r8, r0
   30ca4:	ldr	r0, [fp, #24]
   30ca8:	cmp	r0, #2
   30cac:	blt	30d50 <GetDataSlab+0xe38c>
   30cb0:	ldr	ip, [sp, #32]
   30cb4:	mov	r0, #0
   30cb8:	ldr	r2, [r1, r0]
   30cbc:	add	r2, r2, #1
   30cc0:	str	r2, [r1, r0]
   30cc4:	ldr	r3, [sl, r0]
   30cc8:	sdiv	r4, r2, r3
   30ccc:	mls	r2, r4, r3, r2
   30cd0:	cmp	r2, #0
   30cd4:	bne	30d40 <GetDataSlab+0xe37c>
   30cd8:	ldr	r4, [lr, r0]
   30cdc:	mov	r2, #0
   30ce0:	str	r2, [r1, r0]
   30ce4:	sdiv	r2, r8, r4
   30ce8:	mls	r6, r2, r4, r8
   30cec:	cmp	r6, #0
   30cf0:	beq	30d10 <GetDataSlab+0xe34c>
   30cf4:	add	r2, sp, #64	; 0x40
   30cf8:	ldr	r3, [r9, r0]
   30cfc:	sub	r4, r4, r6
   30d00:	ldr	r2, [r2, r0]
   30d04:	mla	r2, r3, r2, r4
   30d08:	add	r8, r2, r8
   30d0c:	b	30d2c <GetDataSlab+0xe368>
   30d10:	ldr	r4, [r9, r0]
   30d14:	cmp	r4, #0
   30d18:	beq	30d30 <GetDataSlab+0xe36c>
   30d1c:	add	r2, sp, #64	; 0x40
   30d20:	ldr	r2, [r2, r0]
   30d24:	mla	r8, r2, r4, r8
   30d28:	mul	r2, r2, r4
   30d2c:	add	r7, r7, r2, lsl #2
   30d30:	subs	ip, ip, #1
   30d34:	add	r0, r0, #4
   30d38:	bne	30cb8 <GetDataSlab+0xe2f4>
   30d3c:	b	30d50 <GetDataSlab+0xe38c>
   30d40:	ldr	r2, [sp, #28]
   30d44:	ldr	r0, [r2, r0]
   30d48:	add	r7, r7, r0, lsl #2
   30d4c:	add	r8, r0, r8
   30d50:	ldr	r2, [sp, #44]	; 0x2c
   30d54:	ldr	r6, [sp, #56]	; 0x38
   30d58:	ldr	r0, [sp, #36]	; 0x24
   30d5c:	ldr	r5, [sp, #48]	; 0x30
   30d60:	ldr	r3, [sp, #52]	; 0x34
   30d64:	add	r6, r6, r2
   30d68:	add	r5, r5, r0
   30d6c:	mov	r0, #0
   30d70:	cmp	r6, r3
   30d74:	str	r6, [sp, #56]	; 0x38
   30d78:	blt	30c60 <GetDataSlab+0xe29c>
   30d7c:	b	24900 <GetDataSlab+0x1f3c>
   30d80:	ldr	r0, [fp, #16]
   30d84:	mov	r3, #0
   30d88:	ldr	lr, [r0]
   30d8c:	sub	r0, lr, #1
   30d90:	str	r0, [fp, #-72]	; 0xffffffb8
   30d94:	ldr	r0, [r4]
   30d98:	str	r0, [sp, #36]	; 0x24
   30d9c:	str	r0, [sp, #64]	; 0x40
   30da0:	ldr	r0, [fp, #20]
   30da4:	ldr	r1, [r0]
   30da8:	ldr	r0, [fp, #24]
   30dac:	cmp	r0, #2
   30db0:	str	r1, [sp, #40]	; 0x28
   30db4:	str	r1, [sp, #44]	; 0x2c
   30db8:	blt	30e68 <GetDataSlab+0xe4a4>
   30dbc:	ldr	r7, [sp, #36]	; 0x24
   30dc0:	ldr	r0, [sp, #40]	; 0x28
   30dc4:	mov	r9, r4
   30dc8:	mov	r1, #1
   30dcc:	mov	r3, #0
   30dd0:	mov	r2, r4
   30dd4:	mov	r6, r7
   30dd8:	str	r0, [sp, #44]	; 0x2c
   30ddc:	ldr	r0, [fp, #16]
   30de0:	add	r5, sp, #64	; 0x40
   30de4:	mov	r4, #0
   30de8:	ldr	r0, [r0, r1, lsl #2]
   30dec:	str	r7, [r5, r1, lsl #2]
   30df0:	sub	r5, fp, #72	; 0x48
   30df4:	sub	r0, r0, #1
   30df8:	str	r0, [r5, r1, lsl #2]
   30dfc:	ldr	ip, [r9, r1, lsl #2]
   30e00:	mov	r5, ip
   30e04:	mul	r7, r5, r7
   30e08:	ldr	r5, [r2, -r4, lsl #2]
   30e0c:	add	r4, r4, #1
   30e10:	cmp	r1, r4
   30e14:	mul	r0, r0, r5
   30e18:	bne	30e04 <GetDataSlab+0xe440>
   30e1c:	add	r4, sp, #64	; 0x40
   30e20:	add	r2, r2, #4
   30e24:	str	r7, [r4, r1, lsl #2]
   30e28:	sub	r4, fp, #72	; 0x48
   30e2c:	str	r0, [r4, r1, lsl #2]
   30e30:	ldr	r0, [fp, #12]
   30e34:	ldr	r4, [sp, #44]	; 0x2c
   30e38:	ldr	r0, [r0, r1, lsl #2]
   30e3c:	mla	r3, r0, r6, r3
   30e40:	ldr	r0, [fp, #20]
   30e44:	mov	r6, r7
   30e48:	mov	r7, ip
   30e4c:	ldr	r0, [r0, r1, lsl #2]
   30e50:	add	r1, r1, #1
   30e54:	mul	r4, r0, r4
   30e58:	ldr	r0, [fp, #24]
   30e5c:	str	r4, [sp, #44]	; 0x2c
   30e60:	cmp	r1, r0
   30e64:	bne	30ddc <GetDataSlab+0xe418>
   30e68:	ldr	r0, [sp, #48]	; 0x30
   30e6c:	cmp	lr, #1
   30e70:	add	r7, r0, r3, lsl #2
   30e74:	bne	3c09c <GetDataSlab+0x196d8>
   30e78:	ldr	r0, [sp, #44]	; 0x2c
   30e7c:	ldr	r2, [sp, #40]	; 0x28
   30e80:	cmp	r0, #1
   30e84:	blt	248fc <GetDataSlab+0x1f38>
   30e88:	add	r0, sp, #104	; 0x68
   30e8c:	ldr	r5, [sp, #56]	; 0x38
   30e90:	mov	r9, #0
   30e94:	orr	r1, r0, #4
   30e98:	ldr	r0, [fp, #20]
   30e9c:	add	lr, r0, #4
   30ea0:	add	r0, sp, #64	; 0x40
   30ea4:	orr	r0, r0, #4
   30ea8:	str	r0, [sp, #28]
   30eac:	ldr	r0, [fp, #12]
   30eb0:	add	r8, r0, #4
   30eb4:	ldr	r0, [fp, #24]
   30eb8:	sub	r0, r0, #1
   30ebc:	str	r0, [sp, #32]
   30ec0:	sub	r0, fp, #72	; 0x48
   30ec4:	orr	r0, r0, #4
   30ec8:	str	r0, [sp, #24]
   30ecc:	lsl	r0, r2, #3
   30ed0:	str	r0, [sp, #48]	; 0x30
   30ed4:	mov	r0, #0
   30ed8:	str	r0, [sp, #56]	; 0x38
   30edc:	ldr	r0, [fp, #12]
   30ee0:	cmp	r2, #1
   30ee4:	blt	30f0c <GetDataSlab+0xe548>
   30ee8:	ldr	r0, [r0]
   30eec:	ldr	r6, [sp, #40]	; 0x28
   30ef0:	mov	r2, r5
   30ef4:	add	r0, r7, r0, lsl #2
   30ef8:	ldr	r4, [r0], #4
   30efc:	subs	r6, r6, #1
   30f00:	stm	r2, {r4, r9}
   30f04:	add	r2, r2, #8
   30f08:	bne	30ef8 <GetDataSlab+0xe534>
   30f0c:	ldr	r0, [sp, #36]	; 0x24
   30f10:	str	r5, [sp, #52]	; 0x34
   30f14:	add	r7, r7, r0, lsl #2
   30f18:	add	r3, r3, r0
   30f1c:	ldr	r0, [fp, #24]
   30f20:	cmp	r0, #2
   30f24:	blt	30fc8 <GetDataSlab+0xe604>
   30f28:	ldr	ip, [sp, #32]
   30f2c:	ldr	r5, [sp, #28]
   30f30:	mov	r0, #0
   30f34:	ldr	r2, [r1, r0]
   30f38:	add	r2, r2, #1
   30f3c:	str	r2, [r1, r0]
   30f40:	ldr	r4, [lr, r0]
   30f44:	sdiv	r6, r2, r4
   30f48:	mls	r2, r6, r4, r2
   30f4c:	cmp	r2, #0
   30f50:	bne	30fb8 <GetDataSlab+0xe5f4>
   30f54:	ldr	r4, [r5, r0]
   30f58:	str	r9, [r1, r0]
   30f5c:	sdiv	r2, r3, r4
   30f60:	mls	r6, r2, r4, r3
   30f64:	cmp	r6, #0
   30f68:	beq	30f88 <GetDataSlab+0xe5c4>
   30f6c:	add	r2, sp, #64	; 0x40
   30f70:	ldr	sl, [r8, r0]
   30f74:	sub	r4, r4, r6
   30f78:	ldr	r2, [r2, r0]
   30f7c:	mla	r2, sl, r2, r4
   30f80:	add	r3, r2, r3
   30f84:	b	30fa4 <GetDataSlab+0xe5e0>
   30f88:	ldr	r4, [r8, r0]
   30f8c:	cmp	r4, #0
   30f90:	beq	30fa8 <GetDataSlab+0xe5e4>
   30f94:	add	r2, sp, #64	; 0x40
   30f98:	ldr	r2, [r2, r0]
   30f9c:	mla	r3, r2, r4, r3
   30fa0:	mul	r2, r2, r4
   30fa4:	add	r7, r7, r2, lsl #2
   30fa8:	subs	ip, ip, #1
   30fac:	add	r0, r0, #4
   30fb0:	bne	30f34 <GetDataSlab+0xe570>
   30fb4:	b	30fc8 <GetDataSlab+0xe604>
   30fb8:	ldr	r2, [sp, #24]
   30fbc:	ldr	r0, [r2, r0]
   30fc0:	add	r7, r7, r0, lsl #2
   30fc4:	add	r3, r0, r3
   30fc8:	ldr	r2, [sp, #40]	; 0x28
   30fcc:	ldr	r4, [sp, #56]	; 0x38
   30fd0:	ldr	r0, [sp, #48]	; 0x30
   30fd4:	ldr	r5, [sp, #52]	; 0x34
   30fd8:	ldr	r6, [sp, #44]	; 0x2c
   30fdc:	add	r4, r4, r2
   30fe0:	add	r5, r5, r0
   30fe4:	mov	r0, #0
   30fe8:	cmp	r4, r6
   30fec:	str	r4, [sp, #56]	; 0x38
   30ff0:	blt	30edc <GetDataSlab+0xe518>
   30ff4:	b	24900 <GetDataSlab+0x1f3c>
   30ff8:	ldr	r0, [fp, #16]
   30ffc:	mov	r7, #0
   31000:	ldr	ip, [r0]
   31004:	sub	r0, ip, #1
   31008:	str	r0, [fp, #-72]	; 0xffffffb8
   3100c:	ldr	r0, [r4]
   31010:	str	r0, [sp, #36]	; 0x24
   31014:	str	r0, [sp, #64]	; 0x40
   31018:	ldr	r0, [fp, #20]
   3101c:	ldr	r1, [r0]
   31020:	ldr	r0, [fp, #24]
   31024:	cmp	r0, #2
   31028:	str	r1, [sp, #40]	; 0x28
   3102c:	str	r1, [sp, #44]	; 0x2c
   31030:	blt	310e0 <GetDataSlab+0xe71c>
   31034:	ldr	r3, [sp, #36]	; 0x24
   31038:	ldr	r0, [sp, #40]	; 0x28
   3103c:	mov	r9, r4
   31040:	mov	r1, #1
   31044:	mov	r7, #0
   31048:	mov	r2, r4
   3104c:	mov	r6, r3
   31050:	str	r0, [sp, #44]	; 0x2c
   31054:	ldr	r0, [fp, #16]
   31058:	add	r5, sp, #64	; 0x40
   3105c:	mov	r4, #0
   31060:	ldr	r0, [r0, r1, lsl #2]
   31064:	str	r3, [r5, r1, lsl #2]
   31068:	sub	r5, fp, #72	; 0x48
   3106c:	sub	r0, r0, #1
   31070:	str	r0, [r5, r1, lsl #2]
   31074:	ldr	lr, [r9, r1, lsl #2]
   31078:	mov	r5, lr
   3107c:	mul	r3, r5, r3
   31080:	ldr	r5, [r2, -r4, lsl #2]
   31084:	add	r4, r4, #1
   31088:	cmp	r1, r4
   3108c:	mul	r0, r0, r5
   31090:	bne	3107c <GetDataSlab+0xe6b8>
   31094:	add	r4, sp, #64	; 0x40
   31098:	add	r2, r2, #4
   3109c:	str	r3, [r4, r1, lsl #2]
   310a0:	sub	r4, fp, #72	; 0x48
   310a4:	str	r0, [r4, r1, lsl #2]
   310a8:	ldr	r0, [fp, #12]
   310ac:	ldr	r4, [sp, #44]	; 0x2c
   310b0:	ldr	r0, [r0, r1, lsl #2]
   310b4:	mla	r7, r0, r6, r7
   310b8:	ldr	r0, [fp, #20]
   310bc:	mov	r6, r3
   310c0:	mov	r3, lr
   310c4:	ldr	r0, [r0, r1, lsl #2]
   310c8:	add	r1, r1, #1
   310cc:	mul	r4, r0, r4
   310d0:	ldr	r0, [fp, #24]
   310d4:	str	r4, [sp, #44]	; 0x2c
   310d8:	cmp	r1, r0
   310dc:	bne	31054 <GetDataSlab+0xe690>
   310e0:	ldr	r0, [sp, #48]	; 0x30
   310e4:	cmp	ip, #1
   310e8:	add	r8, r0, r7, lsl #2
   310ec:	bne	3c24c <GetDataSlab+0x19888>
   310f0:	ldr	r0, [sp, #44]	; 0x2c
   310f4:	ldr	r1, [sp, #56]	; 0x38
   310f8:	ldr	lr, [sp, #40]	; 0x28
   310fc:	cmp	r0, #1
   31100:	blt	248fc <GetDataSlab+0x1f38>
   31104:	add	r0, sp, #104	; 0x68
   31108:	str	r1, [sp, #56]	; 0x38
   3110c:	orr	r6, r0, #4
   31110:	ldr	r0, [fp, #20]
   31114:	add	r0, r0, #4
   31118:	str	r0, [sp, #28]
   3111c:	add	r0, sp, #64	; 0x40
   31120:	orr	r0, r0, #4
   31124:	str	r0, [sp, #24]
   31128:	ldr	r0, [fp, #24]
   3112c:	sub	r0, r0, #1
   31130:	str	r0, [sp, #20]
   31134:	sub	r0, fp, #72	; 0x48
   31138:	orr	r0, r0, #4
   3113c:	str	r0, [sp, #16]
   31140:	lsl	r0, lr, #3
   31144:	str	r0, [sp, #48]	; 0x30
   31148:	ldr	r0, [sp, #60]	; 0x3c
   3114c:	ldr	r2, [r0], #4
   31150:	str	r0, [sp, #60]	; 0x3c
   31154:	mov	r0, #0
   31158:	str	r0, [sp, #52]	; 0x34
   3115c:	str	r2, [sp, #32]
   31160:	cmp	lr, #1
   31164:	blt	31190 <GetDataSlab+0xe7cc>
   31168:	ldr	r0, [sp, #32]
   3116c:	ldr	sl, [sp, #56]	; 0x38
   31170:	ldr	r9, [sp, #40]	; 0x28
   31174:	add	r4, r8, r0, lsl #2
   31178:	ldr	r0, [r4], #4
   3117c:	bl	4b710 <__aeabi_f2ulz>
   31180:	strd	r0, [sl]
   31184:	add	sl, sl, #8
   31188:	subs	r9, r9, #1
   3118c:	bne	31178 <GetDataSlab+0xe7b4>
   31190:	ldr	r0, [sp, #36]	; 0x24
   31194:	add	r8, r8, r0, lsl #2
   31198:	add	r7, r7, r0
   3119c:	ldr	r0, [fp, #24]
   311a0:	cmp	r0, #2
   311a4:	blt	31248 <GetDataSlab+0xe884>
   311a8:	ldr	r1, [sp, #20]
   311ac:	ldr	ip, [sp, #60]	; 0x3c
   311b0:	ldr	lr, [sp, #40]	; 0x28
   311b4:	ldr	r9, [sp, #28]
   311b8:	ldr	sl, [sp, #24]
   311bc:	mov	r0, #0
   311c0:	ldr	r2, [r6, r0]
   311c4:	add	r2, r2, #1
   311c8:	str	r2, [r6, r0]
   311cc:	ldr	r3, [r9, r0]
   311d0:	sdiv	r4, r2, r3
   311d4:	mls	r2, r4, r3, r2
   311d8:	cmp	r2, #0
   311dc:	bne	31250 <GetDataSlab+0xe88c>
   311e0:	mov	r2, #0
   311e4:	str	r2, [r6, r0]
   311e8:	ldr	r2, [sl, r0]
   311ec:	sdiv	r3, r7, r2
   311f0:	mls	r3, r3, r2, r7
   311f4:	cmp	r3, #0
   311f8:	beq	31218 <GetDataSlab+0xe854>
   311fc:	add	r5, sp, #64	; 0x40
   31200:	sub	r2, r2, r3
   31204:	ldr	r4, [r5, r0]
   31208:	ldr	r5, [ip, r0]
   3120c:	mla	r2, r5, r4, r2
   31210:	add	r7, r2, r7
   31214:	b	31234 <GetDataSlab+0xe870>
   31218:	ldr	r2, [ip, r0]
   3121c:	cmp	r2, #0
   31220:	beq	31238 <GetDataSlab+0xe874>
   31224:	add	r3, sp, #64	; 0x40
   31228:	ldr	r3, [r3, r0]
   3122c:	mla	r7, r3, r2, r7
   31230:	mul	r2, r3, r2
   31234:	add	r8, r8, r2, lsl #2
   31238:	subs	r1, r1, #1
   3123c:	add	r0, r0, #4
   31240:	bne	311c0 <GetDataSlab+0xe7fc>
   31244:	b	31260 <GetDataSlab+0xe89c>
   31248:	ldr	lr, [sp, #40]	; 0x28
   3124c:	b	31260 <GetDataSlab+0xe89c>
   31250:	ldr	r1, [sp, #16]
   31254:	ldr	r0, [r1, r0]
   31258:	add	r8, r8, r0, lsl #2
   3125c:	add	r7, r0, r7
   31260:	ldr	r0, [sp, #48]	; 0x30
   31264:	ldr	r1, [sp, #56]	; 0x38
   31268:	ldr	r2, [sp, #52]	; 0x34
   3126c:	add	r1, r1, r0
   31270:	add	r2, r2, lr
   31274:	mov	r0, #0
   31278:	str	r1, [sp, #56]	; 0x38
   3127c:	ldr	r1, [sp, #44]	; 0x2c
   31280:	str	r2, [sp, #52]	; 0x34
   31284:	cmp	r2, r1
   31288:	blt	31160 <GetDataSlab+0xe79c>
   3128c:	b	24900 <GetDataSlab+0x1f3c>
   31290:	ldr	r0, [fp, #16]
   31294:	mov	r7, #0
   31298:	ldr	ip, [r0]
   3129c:	sub	r0, ip, #1
   312a0:	str	r0, [fp, #-72]	; 0xffffffb8
   312a4:	ldr	r0, [r4]
   312a8:	str	r0, [sp, #36]	; 0x24
   312ac:	str	r0, [sp, #64]	; 0x40
   312b0:	ldr	r0, [fp, #20]
   312b4:	ldr	r1, [r0]
   312b8:	ldr	r0, [fp, #24]
   312bc:	cmp	r0, #2
   312c0:	str	r1, [sp, #40]	; 0x28
   312c4:	str	r1, [sp, #44]	; 0x2c
   312c8:	blt	31378 <GetDataSlab+0xe9b4>
   312cc:	ldr	r3, [sp, #36]	; 0x24
   312d0:	ldr	r0, [sp, #40]	; 0x28
   312d4:	mov	r9, r4
   312d8:	mov	r1, #1
   312dc:	mov	r7, #0
   312e0:	mov	r2, r4
   312e4:	mov	r6, r3
   312e8:	str	r0, [sp, #44]	; 0x2c
   312ec:	ldr	r0, [fp, #16]
   312f0:	add	r5, sp, #64	; 0x40
   312f4:	mov	r4, #0
   312f8:	ldr	r0, [r0, r1, lsl #2]
   312fc:	str	r3, [r5, r1, lsl #2]
   31300:	sub	r5, fp, #72	; 0x48
   31304:	sub	r0, r0, #1
   31308:	str	r0, [r5, r1, lsl #2]
   3130c:	ldr	lr, [r9, r1, lsl #2]
   31310:	mov	r5, lr
   31314:	mul	r3, r5, r3
   31318:	ldr	r5, [r2, -r4, lsl #2]
   3131c:	add	r4, r4, #1
   31320:	cmp	r1, r4
   31324:	mul	r0, r0, r5
   31328:	bne	31314 <GetDataSlab+0xe950>
   3132c:	add	r4, sp, #64	; 0x40
   31330:	add	r2, r2, #4
   31334:	str	r3, [r4, r1, lsl #2]
   31338:	sub	r4, fp, #72	; 0x48
   3133c:	str	r0, [r4, r1, lsl #2]
   31340:	ldr	r0, [fp, #12]
   31344:	ldr	r4, [sp, #44]	; 0x2c
   31348:	ldr	r0, [r0, r1, lsl #2]
   3134c:	mla	r7, r0, r6, r7
   31350:	ldr	r0, [fp, #20]
   31354:	mov	r6, r3
   31358:	mov	r3, lr
   3135c:	ldr	r0, [r0, r1, lsl #2]
   31360:	add	r1, r1, #1
   31364:	mul	r4, r0, r4
   31368:	ldr	r0, [fp, #24]
   3136c:	str	r4, [sp, #44]	; 0x2c
   31370:	cmp	r1, r0
   31374:	bne	312ec <GetDataSlab+0xe928>
   31378:	ldr	r0, [sp, #48]	; 0x30
   3137c:	cmp	ip, #1
   31380:	add	r8, r0, r7, lsl #3
   31384:	bne	3c418 <GetDataSlab+0x19a54>
   31388:	ldr	r0, [sp, #44]	; 0x2c
   3138c:	ldr	r1, [sp, #56]	; 0x38
   31390:	ldr	lr, [sp, #40]	; 0x28
   31394:	cmp	r0, #1
   31398:	blt	248fc <GetDataSlab+0x1f38>
   3139c:	add	r0, sp, #104	; 0x68
   313a0:	str	r1, [sp, #56]	; 0x38
   313a4:	orr	r6, r0, #4
   313a8:	ldr	r0, [fp, #20]
   313ac:	add	r0, r0, #4
   313b0:	str	r0, [sp, #28]
   313b4:	add	r0, sp, #64	; 0x40
   313b8:	orr	r0, r0, #4
   313bc:	str	r0, [sp, #24]
   313c0:	ldr	r0, [fp, #24]
   313c4:	sub	r0, r0, #1
   313c8:	str	r0, [sp, #20]
   313cc:	sub	r0, fp, #72	; 0x48
   313d0:	orr	r0, r0, #4
   313d4:	str	r0, [sp, #16]
   313d8:	lsl	r0, lr, #3
   313dc:	str	r0, [sp, #48]	; 0x30
   313e0:	ldr	r0, [sp, #60]	; 0x3c
   313e4:	ldr	r2, [r0], #4
   313e8:	str	r0, [sp, #60]	; 0x3c
   313ec:	mov	r0, #0
   313f0:	str	r0, [sp, #52]	; 0x34
   313f4:	str	r2, [sp, #32]
   313f8:	cmp	lr, #1
   313fc:	blt	31430 <GetDataSlab+0xea6c>
   31400:	ldr	r0, [sp, #32]
   31404:	ldr	sl, [sp, #56]	; 0x38
   31408:	ldr	r9, [sp, #40]	; 0x28
   3140c:	add	r4, r8, r0, lsl #3
   31410:	vldr	d16, [r4]
   31414:	vmov	r0, r1, d16
   31418:	bl	4b750 <__aeabi_d2ulz>
   3141c:	strd	r0, [sl]
   31420:	add	r4, r4, #8
   31424:	add	sl, sl, #8
   31428:	subs	r9, r9, #1
   3142c:	bne	31410 <GetDataSlab+0xea4c>
   31430:	ldr	r0, [sp, #36]	; 0x24
   31434:	add	r8, r8, r0, lsl #3
   31438:	add	r7, r7, r0
   3143c:	ldr	r0, [fp, #24]
   31440:	cmp	r0, #2
   31444:	blt	314e8 <GetDataSlab+0xeb24>
   31448:	ldr	r1, [sp, #20]
   3144c:	ldr	ip, [sp, #60]	; 0x3c
   31450:	ldr	lr, [sp, #40]	; 0x28
   31454:	ldr	r9, [sp, #28]
   31458:	ldr	sl, [sp, #24]
   3145c:	mov	r0, #0
   31460:	ldr	r2, [r6, r0]
   31464:	add	r2, r2, #1
   31468:	str	r2, [r6, r0]
   3146c:	ldr	r3, [r9, r0]
   31470:	sdiv	r4, r2, r3
   31474:	mls	r2, r4, r3, r2
   31478:	cmp	r2, #0
   3147c:	bne	314f0 <GetDataSlab+0xeb2c>
   31480:	mov	r2, #0
   31484:	str	r2, [r6, r0]
   31488:	ldr	r2, [sl, r0]
   3148c:	sdiv	r3, r7, r2
   31490:	mls	r3, r3, r2, r7
   31494:	cmp	r3, #0
   31498:	beq	314b8 <GetDataSlab+0xeaf4>
   3149c:	add	r5, sp, #64	; 0x40
   314a0:	sub	r2, r2, r3
   314a4:	ldr	r4, [r5, r0]
   314a8:	ldr	r5, [ip, r0]
   314ac:	mla	r2, r5, r4, r2
   314b0:	add	r7, r2, r7
   314b4:	b	314d4 <GetDataSlab+0xeb10>
   314b8:	ldr	r2, [ip, r0]
   314bc:	cmp	r2, #0
   314c0:	beq	314d8 <GetDataSlab+0xeb14>
   314c4:	add	r3, sp, #64	; 0x40
   314c8:	ldr	r3, [r3, r0]
   314cc:	mla	r7, r3, r2, r7
   314d0:	mul	r2, r3, r2
   314d4:	add	r8, r8, r2, lsl #3
   314d8:	subs	r1, r1, #1
   314dc:	add	r0, r0, #4
   314e0:	bne	31460 <GetDataSlab+0xea9c>
   314e4:	b	31500 <GetDataSlab+0xeb3c>
   314e8:	ldr	lr, [sp, #40]	; 0x28
   314ec:	b	31500 <GetDataSlab+0xeb3c>
   314f0:	ldr	r1, [sp, #16]
   314f4:	ldr	r0, [r1, r0]
   314f8:	add	r8, r8, r0, lsl #3
   314fc:	add	r7, r0, r7
   31500:	ldr	r0, [sp, #48]	; 0x30
   31504:	ldr	r1, [sp, #56]	; 0x38
   31508:	ldr	r2, [sp, #52]	; 0x34
   3150c:	add	r1, r1, r0
   31510:	add	r2, r2, lr
   31514:	mov	r0, #0
   31518:	str	r1, [sp, #56]	; 0x38
   3151c:	ldr	r1, [sp, #44]	; 0x2c
   31520:	str	r2, [sp, #52]	; 0x34
   31524:	cmp	r2, r1
   31528:	blt	313f8 <GetDataSlab+0xea34>
   3152c:	b	24900 <GetDataSlab+0x1f3c>
   31530:	ldr	r0, [fp, #16]
   31534:	add	r1, sp, #64	; 0x40
   31538:	mov	lr, #0
   3153c:	ldr	r8, [r0]
   31540:	sub	r0, r8, #1
   31544:	str	r0, [fp, #-72]	; 0xffffffb8
   31548:	ldr	r0, [r4]
   3154c:	str	r0, [sp, #28]
   31550:	str	r0, [sp, #64]	; 0x40
   31554:	ldr	r0, [fp, #20]
   31558:	ldr	r2, [r0]
   3155c:	ldr	r0, [fp, #24]
   31560:	cmp	r0, #2
   31564:	str	r2, [sp, #40]	; 0x28
   31568:	str	r2, [sp, #44]	; 0x2c
   3156c:	blt	31618 <GetDataSlab+0xec54>
   31570:	ldr	r3, [sp, #28]
   31574:	ldr	r6, [sp, #40]	; 0x28
   31578:	mov	r9, r4
   3157c:	mov	r0, #1
   31580:	mov	lr, #0
   31584:	mov	r2, r4
   31588:	mov	r7, r3
   3158c:	str	r6, [sp, #44]	; 0x2c
   31590:	ldr	r6, [fp, #16]
   31594:	mov	r4, #0
   31598:	ldr	r6, [r6, r0, lsl #2]
   3159c:	str	r3, [r1, r0, lsl #2]
   315a0:	sub	r1, fp, #72	; 0x48
   315a4:	sub	r5, r6, #1
   315a8:	str	r5, [r1, r0, lsl #2]
   315ac:	ldr	ip, [r9, r0, lsl #2]
   315b0:	mov	r6, ip
   315b4:	mul	r3, r6, r3
   315b8:	ldr	r6, [r2, -r4, lsl #2]
   315bc:	add	r4, r4, #1
   315c0:	cmp	r0, r4
   315c4:	mul	r5, r5, r6
   315c8:	bne	315b4 <GetDataSlab+0xebf0>
   315cc:	sub	r4, fp, #72	; 0x48
   315d0:	add	r1, sp, #64	; 0x40
   315d4:	add	r2, r2, #4
   315d8:	str	r5, [r4, r0, lsl #2]
   315dc:	ldr	r4, [fp, #12]
   315e0:	str	r3, [r1, r0, lsl #2]
   315e4:	ldr	r5, [sp, #44]	; 0x2c
   315e8:	ldr	r4, [r4, r0, lsl #2]
   315ec:	mla	lr, r4, r7, lr
   315f0:	ldr	r4, [fp, #20]
   315f4:	ldr	r7, [fp, #24]
   315f8:	ldr	r4, [r4, r0, lsl #2]
   315fc:	add	r0, r0, #1
   31600:	cmp	r0, r7
   31604:	mov	r7, r3
   31608:	mov	r3, ip
   3160c:	mul	r5, r4, r5
   31610:	str	r5, [sp, #44]	; 0x2c
   31614:	bne	31590 <GetDataSlab+0xebcc>
   31618:	ldr	r0, [sp, #48]	; 0x30
   3161c:	cmp	r8, #1
   31620:	add	r3, r0, lr, lsl #3
   31624:	bne	3c5ec <GetDataSlab+0x19c28>
   31628:	ldr	r0, [sp, #44]	; 0x2c
   3162c:	ldr	r1, [sp, #40]	; 0x28
   31630:	cmp	r0, #1
   31634:	blt	3c788 <GetDataSlab+0x19dc4>
   31638:	add	r0, sp, #104	; 0x68
   3163c:	ldr	r7, [fp, #12]
   31640:	ldr	r6, [sp, #56]	; 0x38
   31644:	mov	r2, #0
   31648:	orr	ip, r0, #4
   3164c:	ldr	r0, [fp, #20]
   31650:	add	r9, r0, #4
   31654:	add	r0, sp, #64	; 0x40
   31658:	orr	r8, r0, #4
   3165c:	ldr	r0, [fp, #24]
   31660:	sub	r0, r0, #1
   31664:	str	r0, [sp, #16]
   31668:	sub	r0, fp, #72	; 0x48
   3166c:	orr	r0, r0, #4
   31670:	str	r0, [sp, #12]
   31674:	lsl	r0, r1, #3
   31678:	str	r0, [sp, #24]
   3167c:	ldr	r0, [r7], #4
   31680:	str	r0, [sp, #20]
   31684:	cmp	r1, #1
   31688:	str	r2, [sp, #32]
   3168c:	blt	316b8 <GetDataSlab+0xecf4>
   31690:	ldr	r0, [sp, #20]
   31694:	ldr	r5, [sp, #40]	; 0x28
   31698:	mov	r4, r6
   3169c:	add	r2, r3, r0, lsl #3
   316a0:	ldrd	r0, [r2]
   316a4:	add	r2, r2, #8
   316a8:	subs	r5, r5, #1
   316ac:	strd	r0, [r4]
   316b0:	add	r4, r4, #8
   316b4:	bne	316a0 <GetDataSlab+0xecdc>
   316b8:	ldr	r0, [sp, #28]
   316bc:	str	r6, [sp, #36]	; 0x24
   316c0:	add	r3, r3, r0, lsl #3
   316c4:	add	lr, lr, r0
   316c8:	ldr	r0, [fp, #24]
   316cc:	cmp	r0, #2
   316d0:	blt	31774 <GetDataSlab+0xedb0>
   316d4:	ldr	r2, [sp, #16]
   316d8:	mov	sl, #0
   316dc:	ldr	r0, [ip, sl]
   316e0:	add	r0, r0, #1
   316e4:	str	r0, [ip, sl]
   316e8:	ldr	r1, [r9, sl]
   316ec:	sdiv	r4, r0, r1
   316f0:	mls	r0, r4, r1, r0
   316f4:	cmp	r0, #0
   316f8:	bne	31764 <GetDataSlab+0xeda0>
   316fc:	ldr	r4, [r8, sl]
   31700:	mov	r0, #0
   31704:	str	r0, [ip, sl]
   31708:	sdiv	r0, lr, r4
   3170c:	mls	r5, r0, r4, lr
   31710:	cmp	r5, #0
   31714:	beq	31734 <GetDataSlab+0xed70>
   31718:	add	r0, sp, #64	; 0x40
   3171c:	ldr	r1, [r7, sl]
   31720:	sub	r4, r4, r5
   31724:	ldr	r0, [r0, sl]
   31728:	mla	r0, r1, r0, r4
   3172c:	add	lr, r0, lr
   31730:	b	31750 <GetDataSlab+0xed8c>
   31734:	ldr	r4, [r7, sl]
   31738:	cmp	r4, #0
   3173c:	beq	31754 <GetDataSlab+0xed90>
   31740:	add	r0, sp, #64	; 0x40
   31744:	ldr	r0, [r0, sl]
   31748:	mla	lr, r0, r4, lr
   3174c:	mul	r0, r0, r4
   31750:	add	r3, r3, r0, lsl #3
   31754:	subs	r2, r2, #1
   31758:	add	sl, sl, #4
   3175c:	bne	316dc <GetDataSlab+0xed18>
   31760:	b	31774 <GetDataSlab+0xedb0>
   31764:	ldr	r0, [sp, #12]
   31768:	ldr	r0, [r0, sl]
   3176c:	add	r3, r3, r0, lsl #3
   31770:	add	lr, r0, lr
   31774:	ldr	r0, [sp, #24]
   31778:	ldr	r6, [sp, #36]	; 0x24
   3177c:	ldr	r1, [sp, #40]	; 0x28
   31780:	ldr	r2, [sp, #32]
   31784:	add	r6, r6, r0
   31788:	ldr	r0, [sp, #44]	; 0x2c
   3178c:	add	r2, r2, r1
   31790:	cmp	r2, r0
   31794:	blt	31684 <GetDataSlab+0xecc0>
   31798:	b	3c788 <GetDataSlab+0x19dc4>
   3179c:	ldr	r0, [sp, #52]	; 0x34
   317a0:	ldr	r2, [fp, #12]
   317a4:	ldr	r4, [sp, #44]	; 0x2c
   317a8:	cmp	r0, #1
   317ac:	blt	248fc <GetDataSlab+0x1f38>
   317b0:	ldr	r0, [sp, #40]	; 0x28
   317b4:	add	ip, r2, #4
   317b8:	mls	r0, r4, lr, r0
   317bc:	str	r0, [sp, #40]	; 0x28
   317c0:	mul	r0, r4, lr
   317c4:	str	r0, [sp, #32]
   317c8:	add	r0, sp, #104	; 0x68
   317cc:	orr	r6, r0, #4
   317d0:	ldr	r0, [fp, #20]
   317d4:	add	r1, r0, #4
   317d8:	add	r0, sp, #64	; 0x40
   317dc:	orr	r8, r0, #4
   317e0:	ldr	r0, [fp, #24]
   317e4:	sub	r0, r0, #1
   317e8:	str	r0, [sp, #28]
   317ec:	sub	r0, fp, #72	; 0x48
   317f0:	orr	r0, r0, #4
   317f4:	str	r0, [sp, #24]
   317f8:	lsl	r0, r4, #3
   317fc:	str	r0, [sp, #36]	; 0x24
   31800:	mov	r0, #0
   31804:	str	r0, [sp, #48]	; 0x30
   31808:	ldr	r0, [fp, #12]
   3180c:	cmp	r4, #1
   31810:	ldr	r0, [r0]
   31814:	add	r7, r7, r0
   31818:	blt	31850 <GetDataSlab+0xee8c>
   3181c:	mov	r2, r4
   31820:	ldr	r4, [sp, #32]
   31824:	add	r9, r4, r3
   31828:	ldr	r4, [sp, #56]	; 0x38
   3182c:	mov	r3, r2
   31830:	ldrsb	r5, [r7], lr
   31834:	subs	r3, r3, #1
   31838:	vmov	s0, r5
   3183c:	vcvt.f64.s32	d16, s0
   31840:	vstmia	r4!, {d16}
   31844:	bne	31830 <GetDataSlab+0xee6c>
   31848:	add	r3, r9, r0
   3184c:	b	31854 <GetDataSlab+0xee90>
   31850:	add	r3, r0, r3
   31854:	ldr	r2, [sp, #40]	; 0x28
   31858:	sub	r0, r2, r0
   3185c:	add	r7, r7, r0
   31860:	add	r3, r3, r0
   31864:	ldr	r0, [fp, #24]
   31868:	cmp	r0, #2
   3186c:	blt	31910 <GetDataSlab+0xef4c>
   31870:	ldr	r9, [sp, #28]
   31874:	mov	r0, #0
   31878:	ldr	r4, [r6, r0]
   3187c:	add	r4, r4, #1
   31880:	str	r4, [r6, r0]
   31884:	ldr	r5, [r1, r0]
   31888:	sdiv	r2, r4, r5
   3188c:	mls	r2, r2, r5, r4
   31890:	cmp	r2, #0
   31894:	bne	31900 <GetDataSlab+0xef3c>
   31898:	ldr	r4, [r8, r0]
   3189c:	mov	r2, #0
   318a0:	str	r2, [r6, r0]
   318a4:	sdiv	r2, r3, r4
   318a8:	mls	sl, r2, r4, r3
   318ac:	cmp	sl, #0
   318b0:	beq	318d4 <GetDataSlab+0xef10>
   318b4:	add	r2, sp, #64	; 0x40
   318b8:	ldr	r5, [ip, r0]
   318bc:	sub	r4, r4, sl
   318c0:	ldr	r2, [r2, r0]
   318c4:	mla	r2, r5, r2, r4
   318c8:	add	r3, r2, r3
   318cc:	add	r7, r7, r2
   318d0:	b	318f0 <GetDataSlab+0xef2c>
   318d4:	ldr	r4, [ip, r0]
   318d8:	cmp	r4, #0
   318dc:	beq	318f0 <GetDataSlab+0xef2c>
   318e0:	add	r2, sp, #64	; 0x40
   318e4:	ldr	r2, [r2, r0]
   318e8:	mla	r3, r2, r4, r3
   318ec:	mla	r7, r2, r4, r7
   318f0:	subs	r9, r9, #1
   318f4:	add	r0, r0, #4
   318f8:	bne	31878 <GetDataSlab+0xeeb4>
   318fc:	b	31910 <GetDataSlab+0xef4c>
   31900:	ldr	r2, [sp, #24]
   31904:	ldr	r0, [r2, r0]
   31908:	add	r7, r7, r0
   3190c:	add	r3, r0, r3
   31910:	ldr	r0, [sp, #36]	; 0x24
   31914:	ldr	r2, [sp, #56]	; 0x38
   31918:	ldr	r4, [sp, #44]	; 0x2c
   3191c:	ldr	r5, [sp, #48]	; 0x30
   31920:	add	r2, r2, r0
   31924:	add	r5, r5, r4
   31928:	mov	r0, #0
   3192c:	str	r2, [sp, #56]	; 0x38
   31930:	ldr	r2, [sp, #52]	; 0x34
   31934:	str	r5, [sp, #48]	; 0x30
   31938:	cmp	r5, r2
   3193c:	blt	31808 <GetDataSlab+0xee44>
   31940:	b	24900 <GetDataSlab+0x1f3c>
   31944:	ldr	r0, [sp, #52]	; 0x34
   31948:	ldr	r2, [fp, #12]
   3194c:	ldr	r4, [sp, #44]	; 0x2c
   31950:	cmp	r0, #1
   31954:	blt	248fc <GetDataSlab+0x1f38>
   31958:	ldr	r0, [sp, #40]	; 0x28
   3195c:	add	ip, r2, #4
   31960:	mls	r0, r4, lr, r0
   31964:	str	r0, [sp, #40]	; 0x28
   31968:	mul	r0, r4, lr
   3196c:	str	r0, [sp, #32]
   31970:	add	r0, sp, #104	; 0x68
   31974:	orr	r6, r0, #4
   31978:	ldr	r0, [fp, #20]
   3197c:	add	r1, r0, #4
   31980:	add	r0, sp, #64	; 0x40
   31984:	orr	r8, r0, #4
   31988:	ldr	r0, [fp, #24]
   3198c:	sub	r0, r0, #1
   31990:	str	r0, [sp, #28]
   31994:	sub	r0, fp, #72	; 0x48
   31998:	orr	r0, r0, #4
   3199c:	str	r0, [sp, #24]
   319a0:	lsl	r0, r4, #2
   319a4:	str	r0, [sp, #36]	; 0x24
   319a8:	mov	r0, #0
   319ac:	str	r0, [sp, #48]	; 0x30
   319b0:	ldr	r0, [fp, #12]
   319b4:	cmp	r4, #1
   319b8:	ldr	r0, [r0]
   319bc:	add	r7, r7, r0
   319c0:	blt	319f8 <GetDataSlab+0xf034>
   319c4:	mov	r2, r4
   319c8:	ldr	r4, [sp, #32]
   319cc:	add	r9, r4, r3
   319d0:	ldr	r4, [sp, #56]	; 0x38
   319d4:	mov	r3, r2
   319d8:	ldrsb	r5, [r7], lr
   319dc:	subs	r3, r3, #1
   319e0:	vmov	s0, r5
   319e4:	vcvt.f32.s32	s0, s0
   319e8:	vstmia	r4!, {s0}
   319ec:	bne	319d8 <GetDataSlab+0xf014>
   319f0:	add	r3, r9, r0
   319f4:	b	319fc <GetDataSlab+0xf038>
   319f8:	add	r3, r0, r3
   319fc:	ldr	r2, [sp, #40]	; 0x28
   31a00:	sub	r0, r2, r0
   31a04:	add	r7, r7, r0
   31a08:	add	r3, r3, r0
   31a0c:	ldr	r0, [fp, #24]
   31a10:	cmp	r0, #2
   31a14:	blt	31ab8 <GetDataSlab+0xf0f4>
   31a18:	ldr	r9, [sp, #28]
   31a1c:	mov	r0, #0
   31a20:	ldr	r4, [r6, r0]
   31a24:	add	r4, r4, #1
   31a28:	str	r4, [r6, r0]
   31a2c:	ldr	r5, [r1, r0]
   31a30:	sdiv	r2, r4, r5
   31a34:	mls	r2, r2, r5, r4
   31a38:	cmp	r2, #0
   31a3c:	bne	31aa8 <GetDataSlab+0xf0e4>
   31a40:	ldr	r4, [r8, r0]
   31a44:	mov	r2, #0
   31a48:	str	r2, [r6, r0]
   31a4c:	sdiv	r2, r3, r4
   31a50:	mls	sl, r2, r4, r3
   31a54:	cmp	sl, #0
   31a58:	beq	31a7c <GetDataSlab+0xf0b8>
   31a5c:	add	r2, sp, #64	; 0x40
   31a60:	ldr	r5, [ip, r0]
   31a64:	sub	r4, r4, sl
   31a68:	ldr	r2, [r2, r0]
   31a6c:	mla	r2, r5, r2, r4
   31a70:	add	r3, r2, r3
   31a74:	add	r7, r7, r2
   31a78:	b	31a98 <GetDataSlab+0xf0d4>
   31a7c:	ldr	r4, [ip, r0]
   31a80:	cmp	r4, #0
   31a84:	beq	31a98 <GetDataSlab+0xf0d4>
   31a88:	add	r2, sp, #64	; 0x40
   31a8c:	ldr	r2, [r2, r0]
   31a90:	mla	r3, r2, r4, r3
   31a94:	mla	r7, r2, r4, r7
   31a98:	subs	r9, r9, #1
   31a9c:	add	r0, r0, #4
   31aa0:	bne	31a20 <GetDataSlab+0xf05c>
   31aa4:	b	31ab8 <GetDataSlab+0xf0f4>
   31aa8:	ldr	r2, [sp, #24]
   31aac:	ldr	r0, [r2, r0]
   31ab0:	add	r7, r7, r0
   31ab4:	add	r3, r0, r3
   31ab8:	ldr	r0, [sp, #36]	; 0x24
   31abc:	ldr	r2, [sp, #56]	; 0x38
   31ac0:	ldr	r4, [sp, #44]	; 0x2c
   31ac4:	ldr	r5, [sp, #48]	; 0x30
   31ac8:	add	r2, r2, r0
   31acc:	add	r5, r5, r4
   31ad0:	mov	r0, #0
   31ad4:	str	r2, [sp, #56]	; 0x38
   31ad8:	ldr	r2, [sp, #52]	; 0x34
   31adc:	str	r5, [sp, #48]	; 0x30
   31ae0:	cmp	r5, r2
   31ae4:	blt	319b0 <GetDataSlab+0xefec>
   31ae8:	b	24900 <GetDataSlab+0x1f3c>
   31aec:	ldr	r0, [sp, #44]	; 0x2c
   31af0:	ldr	ip, [fp, #12]
   31af4:	cmp	r0, #1
   31af8:	add	r0, sp, #64	; 0x40
   31afc:	blt	248fc <GetDataSlab+0x1f38>
   31b00:	orr	r0, r0, #4
   31b04:	ldr	r4, [fp, #20]
   31b08:	add	r7, sp, #104	; 0x68
   31b0c:	str	r0, [sp, #48]	; 0x30
   31b10:	ldr	r0, [fp, #24]
   31b14:	orr	sl, r7, #4
   31b18:	add	r2, r4, #4
   31b1c:	sub	r0, r0, #1
   31b20:	str	r2, [sp, #52]	; 0x34
   31b24:	str	r0, [sp, #28]
   31b28:	sub	r0, fp, #72	; 0x48
   31b2c:	orr	r0, r0, #4
   31b30:	str	r0, [sp, #24]
   31b34:	ldr	r0, [ip], #4
   31b38:	str	r0, [sp, #32]
   31b3c:	mov	r0, #0
   31b40:	str	r0, [sp, #36]	; 0x24
   31b44:	ldr	r1, [sp, #32]
   31b48:	cmp	lr, #1
   31b4c:	add	r0, r1, r5
   31b50:	add	r5, r6, r1
   31b54:	blt	31bac <GetDataSlab+0xf1e8>
   31b58:	ldr	r1, [sp, #56]	; 0x38
   31b5c:	ldr	r2, [sp, #36]	; 0x24
   31b60:	ldr	lr, [fp, #8]
   31b64:	ldr	r6, [fp, #16]
   31b68:	mov	r7, #0
   31b6c:	add	r4, r1, r2
   31b70:	ldr	r1, [fp, #20]
   31b74:	mov	r8, lr
   31b78:	ldrb	r2, [r5]
   31b7c:	strb	r2, [r4, r7]
   31b80:	add	r7, r7, #1
   31b84:	ldr	r3, [r6]
   31b88:	ldr	lr, [r1]
   31b8c:	add	r0, r3, r0
   31b90:	add	r5, r5, r3
   31b94:	cmp	r7, lr
   31b98:	blt	31b78 <GetDataSlab+0xf1b4>
   31b9c:	ldr	r1, [fp, #12]
   31ba0:	ldr	r2, [r8]
   31ba4:	ldr	r1, [r1]
   31ba8:	b	31bb0 <GetDataSlab+0xf1ec>
   31bac:	ldr	r2, [sp, #40]	; 0x28
   31bb0:	mls	r7, r3, lr, r2
   31bb4:	str	r2, [sp, #40]	; 0x28
   31bb8:	str	r1, [sp, #32]
   31bbc:	sub	r7, r7, r1
   31bc0:	add	r6, r5, r7
   31bc4:	add	r5, r7, r0
   31bc8:	ldr	r0, [fp, #24]
   31bcc:	cmp	r0, #2
   31bd0:	blt	31c8c <GetDataSlab+0xf2c8>
   31bd4:	ldr	r8, [sp, #28]
   31bd8:	mov	r0, #0
   31bdc:	ldr	r4, [sl, r0]
   31be0:	ldr	r1, [sp, #52]	; 0x34
   31be4:	add	r4, r4, #1
   31be8:	str	r4, [sl, r0]
   31bec:	ldr	r7, [r1, r0]
   31bf0:	sdiv	r9, r4, r7
   31bf4:	mls	r4, r9, r7, r4
   31bf8:	cmp	r4, #0
   31bfc:	bne	31c7c <GetDataSlab+0xf2b8>
   31c00:	mov	r1, #0
   31c04:	str	r1, [sl, r0]
   31c08:	ldr	r1, [sp, #48]	; 0x30
   31c0c:	ldr	r4, [r1, r0]
   31c10:	sdiv	r7, r5, r4
   31c14:	mls	r7, r7, r4, r5
   31c18:	cmp	r7, #0
   31c1c:	beq	31c50 <GetDataSlab+0xf28c>
   31c20:	add	r1, sp, #64	; 0x40
   31c24:	mov	r2, r6
   31c28:	mov	r6, r5
   31c2c:	ldr	r5, [ip, r0]
   31c30:	sub	r4, r4, r7
   31c34:	ldr	r1, [r1, r0]
   31c38:	mla	r1, r5, r1, r4
   31c3c:	mov	r5, r6
   31c40:	mov	r6, r2
   31c44:	add	r5, r1, r5
   31c48:	add	r6, r2, r1
   31c4c:	b	31c6c <GetDataSlab+0xf2a8>
   31c50:	ldr	r4, [ip, r0]
   31c54:	cmp	r4, #0
   31c58:	beq	31c6c <GetDataSlab+0xf2a8>
   31c5c:	add	r1, sp, #64	; 0x40
   31c60:	ldr	r1, [r1, r0]
   31c64:	mla	r5, r1, r4, r5
   31c68:	mla	r6, r1, r4, r6
   31c6c:	subs	r8, r8, #1
   31c70:	add	r0, r0, #4
   31c74:	bne	31bdc <GetDataSlab+0xf218>
   31c78:	b	31c8c <GetDataSlab+0xf2c8>
   31c7c:	ldr	r1, [sp, #24]
   31c80:	ldr	r0, [r1, r0]
   31c84:	add	r6, r6, r0
   31c88:	add	r5, r0, r5
   31c8c:	ldr	r1, [sp, #36]	; 0x24
   31c90:	ldr	r0, [sp, #44]	; 0x2c
   31c94:	add	r1, lr, r1
   31c98:	cmp	r1, r0
   31c9c:	mov	r0, #0
   31ca0:	str	r1, [sp, #36]	; 0x24
   31ca4:	blt	31b44 <GetDataSlab+0xf180>
   31ca8:	b	24900 <GetDataSlab+0x1f3c>
   31cac:	ldr	r0, [sp, #44]	; 0x2c
   31cb0:	ldr	ip, [fp, #12]
   31cb4:	cmp	r0, #1
   31cb8:	add	r0, sp, #64	; 0x40
   31cbc:	blt	248fc <GetDataSlab+0x1f38>
   31cc0:	orr	r0, r0, #4
   31cc4:	ldr	r4, [fp, #20]
   31cc8:	add	r7, sp, #104	; 0x68
   31ccc:	str	r0, [sp, #48]	; 0x30
   31cd0:	ldr	r0, [fp, #24]
   31cd4:	orr	sl, r7, #4
   31cd8:	add	r2, r4, #4
   31cdc:	sub	r0, r0, #1
   31ce0:	str	r2, [sp, #52]	; 0x34
   31ce4:	str	r0, [sp, #28]
   31ce8:	sub	r0, fp, #72	; 0x48
   31cec:	orr	r0, r0, #4
   31cf0:	str	r0, [sp, #24]
   31cf4:	ldr	r0, [ip], #4
   31cf8:	str	r0, [sp, #32]
   31cfc:	mov	r0, #0
   31d00:	str	r0, [sp, #36]	; 0x24
   31d04:	ldr	r1, [sp, #32]
   31d08:	cmp	lr, #1
   31d0c:	add	r0, r1, r5
   31d10:	add	r5, r6, r1
   31d14:	blt	31d6c <GetDataSlab+0xf3a8>
   31d18:	ldr	r1, [sp, #56]	; 0x38
   31d1c:	ldr	r2, [sp, #36]	; 0x24
   31d20:	ldr	lr, [fp, #8]
   31d24:	ldr	r6, [fp, #16]
   31d28:	mov	r7, #0
   31d2c:	add	r4, r1, r2
   31d30:	ldr	r1, [fp, #20]
   31d34:	mov	r8, lr
   31d38:	ldrb	r2, [r5]
   31d3c:	strb	r2, [r4, r7]
   31d40:	add	r7, r7, #1
   31d44:	ldr	r3, [r6]
   31d48:	ldr	lr, [r1]
   31d4c:	add	r0, r3, r0
   31d50:	add	r5, r5, r3
   31d54:	cmp	r7, lr
   31d58:	blt	31d38 <GetDataSlab+0xf374>
   31d5c:	ldr	r1, [fp, #12]
   31d60:	ldr	r2, [r8]
   31d64:	ldr	r1, [r1]
   31d68:	b	31d70 <GetDataSlab+0xf3ac>
   31d6c:	ldr	r2, [sp, #40]	; 0x28
   31d70:	mls	r7, r3, lr, r2
   31d74:	str	r2, [sp, #40]	; 0x28
   31d78:	str	r1, [sp, #32]
   31d7c:	sub	r7, r7, r1
   31d80:	add	r6, r5, r7
   31d84:	add	r5, r7, r0
   31d88:	ldr	r0, [fp, #24]
   31d8c:	cmp	r0, #2
   31d90:	blt	31e4c <GetDataSlab+0xf488>
   31d94:	ldr	r8, [sp, #28]
   31d98:	mov	r0, #0
   31d9c:	ldr	r4, [sl, r0]
   31da0:	ldr	r1, [sp, #52]	; 0x34
   31da4:	add	r4, r4, #1
   31da8:	str	r4, [sl, r0]
   31dac:	ldr	r7, [r1, r0]
   31db0:	sdiv	r9, r4, r7
   31db4:	mls	r4, r9, r7, r4
   31db8:	cmp	r4, #0
   31dbc:	bne	31e3c <GetDataSlab+0xf478>
   31dc0:	mov	r1, #0
   31dc4:	str	r1, [sl, r0]
   31dc8:	ldr	r1, [sp, #48]	; 0x30
   31dcc:	ldr	r4, [r1, r0]
   31dd0:	sdiv	r7, r5, r4
   31dd4:	mls	r7, r7, r4, r5
   31dd8:	cmp	r7, #0
   31ddc:	beq	31e10 <GetDataSlab+0xf44c>
   31de0:	add	r1, sp, #64	; 0x40
   31de4:	mov	r2, r6
   31de8:	mov	r6, r5
   31dec:	ldr	r5, [ip, r0]
   31df0:	sub	r4, r4, r7
   31df4:	ldr	r1, [r1, r0]
   31df8:	mla	r1, r5, r1, r4
   31dfc:	mov	r5, r6
   31e00:	mov	r6, r2
   31e04:	add	r5, r1, r5
   31e08:	add	r6, r2, r1
   31e0c:	b	31e2c <GetDataSlab+0xf468>
   31e10:	ldr	r4, [ip, r0]
   31e14:	cmp	r4, #0
   31e18:	beq	31e2c <GetDataSlab+0xf468>
   31e1c:	add	r1, sp, #64	; 0x40
   31e20:	ldr	r1, [r1, r0]
   31e24:	mla	r5, r1, r4, r5
   31e28:	mla	r6, r1, r4, r6
   31e2c:	subs	r8, r8, #1
   31e30:	add	r0, r0, #4
   31e34:	bne	31d9c <GetDataSlab+0xf3d8>
   31e38:	b	31e4c <GetDataSlab+0xf488>
   31e3c:	ldr	r1, [sp, #24]
   31e40:	ldr	r0, [r1, r0]
   31e44:	add	r6, r6, r0
   31e48:	add	r5, r0, r5
   31e4c:	ldr	r1, [sp, #36]	; 0x24
   31e50:	ldr	r0, [sp, #44]	; 0x2c
   31e54:	add	r1, lr, r1
   31e58:	cmp	r1, r0
   31e5c:	mov	r0, #0
   31e60:	str	r1, [sp, #36]	; 0x24
   31e64:	blt	31d04 <GetDataSlab+0xf340>
   31e68:	b	24900 <GetDataSlab+0x1f3c>
   31e6c:	ldr	r0, [sp, #52]	; 0x34
   31e70:	ldr	r2, [fp, #12]
   31e74:	cmp	r0, #1
   31e78:	blt	248fc <GetDataSlab+0x1f38>
   31e7c:	ldr	r4, [sp, #44]	; 0x2c
   31e80:	ldr	r0, [sp, #40]	; 0x28
   31e84:	mls	r0, r4, lr, r0
   31e88:	str	r0, [sp, #40]	; 0x28
   31e8c:	mul	r0, r4, lr
   31e90:	str	r0, [sp, #32]
   31e94:	add	r0, sp, #104	; 0x68
   31e98:	orr	r6, r0, #4
   31e9c:	ldr	r0, [fp, #20]
   31ea0:	add	r1, r0, #4
   31ea4:	mov	r0, r2
   31ea8:	add	r2, sp, #64	; 0x40
   31eac:	add	ip, r0, #4
   31eb0:	ldr	r0, [fp, #24]
   31eb4:	orr	sl, r2, #4
   31eb8:	mov	r2, r4
   31ebc:	sub	r0, r0, #1
   31ec0:	str	r0, [sp, #28]
   31ec4:	sub	r0, fp, #72	; 0x48
   31ec8:	orr	r0, r0, #4
   31ecc:	str	r0, [sp, #24]
   31ed0:	lsl	r0, r4, #1
   31ed4:	str	r0, [sp, #36]	; 0x24
   31ed8:	mov	r0, #0
   31edc:	str	r0, [sp, #48]	; 0x30
   31ee0:	ldr	r0, [fp, #12]
   31ee4:	cmp	r2, #1
   31ee8:	ldr	r0, [r0]
   31eec:	add	r7, r7, r0
   31ef0:	blt	31f1c <GetDataSlab+0xf558>
   31ef4:	ldr	r4, [sp, #32]
   31ef8:	add	r8, r4, r3
   31efc:	ldr	r4, [sp, #56]	; 0x38
   31f00:	mov	r3, r2
   31f04:	ldrsb	r5, [r7], lr
   31f08:	subs	r3, r3, #1
   31f0c:	strh	r5, [r4], #2
   31f10:	bne	31f04 <GetDataSlab+0xf540>
   31f14:	add	r3, r8, r0
   31f18:	b	31f20 <GetDataSlab+0xf55c>
   31f1c:	add	r3, r0, r3
   31f20:	ldr	r2, [sp, #40]	; 0x28
   31f24:	sub	r0, r2, r0
   31f28:	add	r7, r7, r0
   31f2c:	add	r3, r3, r0
   31f30:	ldr	r0, [fp, #24]
   31f34:	cmp	r0, #2
   31f38:	blt	31fdc <GetDataSlab+0xf618>
   31f3c:	ldr	r8, [sp, #28]
   31f40:	mov	r0, #0
   31f44:	ldr	r4, [r6, r0]
   31f48:	add	r4, r4, #1
   31f4c:	str	r4, [r6, r0]
   31f50:	ldr	r5, [r1, r0]
   31f54:	sdiv	r2, r4, r5
   31f58:	mls	r2, r2, r5, r4
   31f5c:	cmp	r2, #0
   31f60:	bne	31fcc <GetDataSlab+0xf608>
   31f64:	ldr	r4, [sl, r0]
   31f68:	mov	r2, #0
   31f6c:	str	r2, [r6, r0]
   31f70:	sdiv	r2, r3, r4
   31f74:	mls	r9, r2, r4, r3
   31f78:	cmp	r9, #0
   31f7c:	beq	31fa0 <GetDataSlab+0xf5dc>
   31f80:	add	r2, sp, #64	; 0x40
   31f84:	ldr	r5, [ip, r0]
   31f88:	sub	r4, r4, r9
   31f8c:	ldr	r2, [r2, r0]
   31f90:	mla	r2, r5, r2, r4
   31f94:	add	r3, r2, r3
   31f98:	add	r7, r7, r2
   31f9c:	b	31fbc <GetDataSlab+0xf5f8>
   31fa0:	ldr	r4, [ip, r0]
   31fa4:	cmp	r4, #0
   31fa8:	beq	31fbc <GetDataSlab+0xf5f8>
   31fac:	add	r2, sp, #64	; 0x40
   31fb0:	ldr	r2, [r2, r0]
   31fb4:	mla	r3, r2, r4, r3
   31fb8:	mla	r7, r2, r4, r7
   31fbc:	subs	r8, r8, #1
   31fc0:	add	r0, r0, #4
   31fc4:	bne	31f44 <GetDataSlab+0xf580>
   31fc8:	b	31fdc <GetDataSlab+0xf618>
   31fcc:	ldr	r2, [sp, #24]
   31fd0:	ldr	r0, [r2, r0]
   31fd4:	add	r7, r7, r0
   31fd8:	add	r3, r0, r3
   31fdc:	ldr	r0, [sp, #36]	; 0x24
   31fe0:	ldr	r2, [sp, #56]	; 0x38
   31fe4:	ldr	r4, [sp, #48]	; 0x30
   31fe8:	add	r2, r2, r0
   31fec:	ldr	r0, [sp, #52]	; 0x34
   31ff0:	str	r2, [sp, #56]	; 0x38
   31ff4:	ldr	r2, [sp, #44]	; 0x2c
   31ff8:	add	r4, r4, r2
   31ffc:	cmp	r4, r0
   32000:	mov	r0, #0
   32004:	str	r4, [sp, #48]	; 0x30
   32008:	blt	31ee0 <GetDataSlab+0xf51c>
   3200c:	b	24900 <GetDataSlab+0x1f3c>
   32010:	ldr	r0, [sp, #52]	; 0x34
   32014:	ldr	r2, [fp, #12]
   32018:	cmp	r0, #1
   3201c:	blt	248fc <GetDataSlab+0x1f38>
   32020:	ldr	r4, [sp, #44]	; 0x2c
   32024:	ldr	r0, [sp, #40]	; 0x28
   32028:	mls	r0, r4, lr, r0
   3202c:	str	r0, [sp, #40]	; 0x28
   32030:	mul	r0, r4, lr
   32034:	str	r0, [sp, #32]
   32038:	add	r0, sp, #104	; 0x68
   3203c:	orr	r6, r0, #4
   32040:	ldr	r0, [fp, #20]
   32044:	add	r1, r0, #4
   32048:	mov	r0, r2
   3204c:	add	r2, sp, #64	; 0x40
   32050:	add	ip, r0, #4
   32054:	ldr	r0, [fp, #24]
   32058:	orr	sl, r2, #4
   3205c:	mov	r2, r4
   32060:	sub	r0, r0, #1
   32064:	str	r0, [sp, #28]
   32068:	sub	r0, fp, #72	; 0x48
   3206c:	orr	r0, r0, #4
   32070:	str	r0, [sp, #24]
   32074:	lsl	r0, r4, #1
   32078:	str	r0, [sp, #36]	; 0x24
   3207c:	mov	r0, #0
   32080:	str	r0, [sp, #48]	; 0x30
   32084:	ldr	r0, [fp, #12]
   32088:	cmp	r2, #1
   3208c:	ldr	r0, [r0]
   32090:	add	r7, r7, r0
   32094:	blt	320c0 <GetDataSlab+0xf6fc>
   32098:	ldr	r4, [sp, #32]
   3209c:	add	r8, r4, r3
   320a0:	ldr	r4, [sp, #56]	; 0x38
   320a4:	mov	r3, r2
   320a8:	ldrsb	r5, [r7], lr
   320ac:	subs	r3, r3, #1
   320b0:	strh	r5, [r4], #2
   320b4:	bne	320a8 <GetDataSlab+0xf6e4>
   320b8:	add	r3, r8, r0
   320bc:	b	320c4 <GetDataSlab+0xf700>
   320c0:	add	r3, r0, r3
   320c4:	ldr	r2, [sp, #40]	; 0x28
   320c8:	sub	r0, r2, r0
   320cc:	add	r7, r7, r0
   320d0:	add	r3, r3, r0
   320d4:	ldr	r0, [fp, #24]
   320d8:	cmp	r0, #2
   320dc:	blt	32180 <GetDataSlab+0xf7bc>
   320e0:	ldr	r8, [sp, #28]
   320e4:	mov	r0, #0
   320e8:	ldr	r4, [r6, r0]
   320ec:	add	r4, r4, #1
   320f0:	str	r4, [r6, r0]
   320f4:	ldr	r5, [r1, r0]
   320f8:	sdiv	r2, r4, r5
   320fc:	mls	r2, r2, r5, r4
   32100:	cmp	r2, #0
   32104:	bne	32170 <GetDataSlab+0xf7ac>
   32108:	ldr	r4, [sl, r0]
   3210c:	mov	r2, #0
   32110:	str	r2, [r6, r0]
   32114:	sdiv	r2, r3, r4
   32118:	mls	r9, r2, r4, r3
   3211c:	cmp	r9, #0
   32120:	beq	32144 <GetDataSlab+0xf780>
   32124:	add	r2, sp, #64	; 0x40
   32128:	ldr	r5, [ip, r0]
   3212c:	sub	r4, r4, r9
   32130:	ldr	r2, [r2, r0]
   32134:	mla	r2, r5, r2, r4
   32138:	add	r3, r2, r3
   3213c:	add	r7, r7, r2
   32140:	b	32160 <GetDataSlab+0xf79c>
   32144:	ldr	r4, [ip, r0]
   32148:	cmp	r4, #0
   3214c:	beq	32160 <GetDataSlab+0xf79c>
   32150:	add	r2, sp, #64	; 0x40
   32154:	ldr	r2, [r2, r0]
   32158:	mla	r3, r2, r4, r3
   3215c:	mla	r7, r2, r4, r7
   32160:	subs	r8, r8, #1
   32164:	add	r0, r0, #4
   32168:	bne	320e8 <GetDataSlab+0xf724>
   3216c:	b	32180 <GetDataSlab+0xf7bc>
   32170:	ldr	r2, [sp, #24]
   32174:	ldr	r0, [r2, r0]
   32178:	add	r7, r7, r0
   3217c:	add	r3, r0, r3
   32180:	ldr	r0, [sp, #36]	; 0x24
   32184:	ldr	r2, [sp, #56]	; 0x38
   32188:	ldr	r4, [sp, #48]	; 0x30
   3218c:	add	r2, r2, r0
   32190:	ldr	r0, [sp, #52]	; 0x34
   32194:	str	r2, [sp, #56]	; 0x38
   32198:	ldr	r2, [sp, #44]	; 0x2c
   3219c:	add	r4, r4, r2
   321a0:	cmp	r4, r0
   321a4:	mov	r0, #0
   321a8:	str	r4, [sp, #48]	; 0x30
   321ac:	blt	32084 <GetDataSlab+0xf6c0>
   321b0:	b	24900 <GetDataSlab+0x1f3c>
   321b4:	ldr	r0, [sp, #44]	; 0x2c
   321b8:	ldr	ip, [fp, #12]
   321bc:	cmp	r0, #1
   321c0:	add	r0, sp, #64	; 0x40
   321c4:	blt	248fc <GetDataSlab+0x1f38>
   321c8:	orr	r0, r0, #4
   321cc:	ldr	r4, [fp, #20]
   321d0:	add	r7, sp, #104	; 0x68
   321d4:	str	r0, [sp, #48]	; 0x30
   321d8:	ldr	r0, [fp, #24]
   321dc:	orr	sl, r7, #4
   321e0:	add	r2, r4, #4
   321e4:	sub	r0, r0, #1
   321e8:	str	r2, [sp, #52]	; 0x34
   321ec:	str	r0, [sp, #28]
   321f0:	sub	r0, fp, #72	; 0x48
   321f4:	orr	r0, r0, #4
   321f8:	str	r0, [sp, #24]
   321fc:	ldr	r0, [ip], #4
   32200:	str	r0, [sp, #32]
   32204:	mov	r0, #0
   32208:	str	r0, [sp, #36]	; 0x24
   3220c:	ldr	r1, [sp, #32]
   32210:	cmp	lr, #1
   32214:	add	r0, r1, r5
   32218:	add	r5, r6, r1
   3221c:	blt	32274 <GetDataSlab+0xf8b0>
   32220:	ldr	r1, [sp, #56]	; 0x38
   32224:	ldr	r2, [sp, #36]	; 0x24
   32228:	ldr	lr, [fp, #8]
   3222c:	ldr	r6, [fp, #16]
   32230:	mov	r7, #0
   32234:	add	r4, r1, r2, lsl #2
   32238:	ldr	r1, [fp, #20]
   3223c:	mov	r8, lr
   32240:	ldrsb	r2, [r5]
   32244:	str	r2, [r4, r7, lsl #2]
   32248:	add	r7, r7, #1
   3224c:	ldr	r3, [r6]
   32250:	ldr	lr, [r1]
   32254:	add	r0, r3, r0
   32258:	add	r5, r5, r3
   3225c:	cmp	r7, lr
   32260:	blt	32240 <GetDataSlab+0xf87c>
   32264:	ldr	r1, [fp, #12]
   32268:	ldr	r2, [r8]
   3226c:	ldr	r1, [r1]
   32270:	b	32278 <GetDataSlab+0xf8b4>
   32274:	ldr	r2, [sp, #40]	; 0x28
   32278:	mls	r7, r3, lr, r2
   3227c:	str	r2, [sp, #40]	; 0x28
   32280:	str	r1, [sp, #32]
   32284:	sub	r7, r7, r1
   32288:	add	r6, r5, r7
   3228c:	add	r5, r7, r0
   32290:	ldr	r0, [fp, #24]
   32294:	cmp	r0, #2
   32298:	blt	32354 <GetDataSlab+0xf990>
   3229c:	ldr	r8, [sp, #28]
   322a0:	mov	r0, #0
   322a4:	ldr	r4, [sl, r0]
   322a8:	ldr	r1, [sp, #52]	; 0x34
   322ac:	add	r4, r4, #1
   322b0:	str	r4, [sl, r0]
   322b4:	ldr	r7, [r1, r0]
   322b8:	sdiv	r9, r4, r7
   322bc:	mls	r4, r9, r7, r4
   322c0:	cmp	r4, #0
   322c4:	bne	32344 <GetDataSlab+0xf980>
   322c8:	mov	r1, #0
   322cc:	str	r1, [sl, r0]
   322d0:	ldr	r1, [sp, #48]	; 0x30
   322d4:	ldr	r4, [r1, r0]
   322d8:	sdiv	r7, r5, r4
   322dc:	mls	r7, r7, r4, r5
   322e0:	cmp	r7, #0
   322e4:	beq	32318 <GetDataSlab+0xf954>
   322e8:	add	r1, sp, #64	; 0x40
   322ec:	mov	r2, r6
   322f0:	mov	r6, r5
   322f4:	ldr	r5, [ip, r0]
   322f8:	sub	r4, r4, r7
   322fc:	ldr	r1, [r1, r0]
   32300:	mla	r1, r5, r1, r4
   32304:	mov	r5, r6
   32308:	mov	r6, r2
   3230c:	add	r5, r1, r5
   32310:	add	r6, r2, r1
   32314:	b	32334 <GetDataSlab+0xf970>
   32318:	ldr	r4, [ip, r0]
   3231c:	cmp	r4, #0
   32320:	beq	32334 <GetDataSlab+0xf970>
   32324:	add	r1, sp, #64	; 0x40
   32328:	ldr	r1, [r1, r0]
   3232c:	mla	r5, r1, r4, r5
   32330:	mla	r6, r1, r4, r6
   32334:	subs	r8, r8, #1
   32338:	add	r0, r0, #4
   3233c:	bne	322a4 <GetDataSlab+0xf8e0>
   32340:	b	32354 <GetDataSlab+0xf990>
   32344:	ldr	r1, [sp, #24]
   32348:	ldr	r0, [r1, r0]
   3234c:	add	r6, r6, r0
   32350:	add	r5, r0, r5
   32354:	ldr	r2, [sp, #36]	; 0x24
   32358:	ldr	r1, [sp, #44]	; 0x2c
   3235c:	mov	r0, #0
   32360:	add	r2, lr, r2
   32364:	cmp	r2, r1
   32368:	str	r2, [sp, #36]	; 0x24
   3236c:	blt	3220c <GetDataSlab+0xf848>
   32370:	b	24900 <GetDataSlab+0x1f3c>
   32374:	ldr	r0, [sp, #44]	; 0x2c
   32378:	ldr	ip, [fp, #12]
   3237c:	cmp	r0, #1
   32380:	add	r0, sp, #64	; 0x40
   32384:	blt	248fc <GetDataSlab+0x1f38>
   32388:	orr	r0, r0, #4
   3238c:	ldr	r4, [fp, #20]
   32390:	add	r7, sp, #104	; 0x68
   32394:	str	r0, [sp, #48]	; 0x30
   32398:	ldr	r0, [fp, #24]
   3239c:	orr	sl, r7, #4
   323a0:	add	r2, r4, #4
   323a4:	sub	r0, r0, #1
   323a8:	str	r2, [sp, #52]	; 0x34
   323ac:	str	r0, [sp, #28]
   323b0:	sub	r0, fp, #72	; 0x48
   323b4:	orr	r0, r0, #4
   323b8:	str	r0, [sp, #24]
   323bc:	ldr	r0, [ip], #4
   323c0:	str	r0, [sp, #32]
   323c4:	mov	r0, #0
   323c8:	str	r0, [sp, #36]	; 0x24
   323cc:	ldr	r1, [sp, #32]
   323d0:	cmp	lr, #1
   323d4:	add	r0, r1, r5
   323d8:	add	r5, r6, r1
   323dc:	blt	32434 <GetDataSlab+0xfa70>
   323e0:	ldr	r1, [sp, #56]	; 0x38
   323e4:	ldr	r2, [sp, #36]	; 0x24
   323e8:	ldr	lr, [fp, #8]
   323ec:	ldr	r6, [fp, #16]
   323f0:	mov	r7, #0
   323f4:	add	r4, r1, r2, lsl #2
   323f8:	ldr	r1, [fp, #20]
   323fc:	mov	r8, lr
   32400:	ldrsb	r2, [r5]
   32404:	str	r2, [r4, r7, lsl #2]
   32408:	add	r7, r7, #1
   3240c:	ldr	r3, [r6]
   32410:	ldr	lr, [r1]
   32414:	add	r0, r3, r0
   32418:	add	r5, r5, r3
   3241c:	cmp	r7, lr
   32420:	blt	32400 <GetDataSlab+0xfa3c>
   32424:	ldr	r1, [fp, #12]
   32428:	ldr	r2, [r8]
   3242c:	ldr	r1, [r1]
   32430:	b	32438 <GetDataSlab+0xfa74>
   32434:	ldr	r2, [sp, #40]	; 0x28
   32438:	mls	r7, r3, lr, r2
   3243c:	str	r2, [sp, #40]	; 0x28
   32440:	str	r1, [sp, #32]
   32444:	sub	r7, r7, r1
   32448:	add	r6, r5, r7
   3244c:	add	r5, r7, r0
   32450:	ldr	r0, [fp, #24]
   32454:	cmp	r0, #2
   32458:	blt	32514 <GetDataSlab+0xfb50>
   3245c:	ldr	r8, [sp, #28]
   32460:	mov	r0, #0
   32464:	ldr	r4, [sl, r0]
   32468:	ldr	r1, [sp, #52]	; 0x34
   3246c:	add	r4, r4, #1
   32470:	str	r4, [sl, r0]
   32474:	ldr	r7, [r1, r0]
   32478:	sdiv	r9, r4, r7
   3247c:	mls	r4, r9, r7, r4
   32480:	cmp	r4, #0
   32484:	bne	32504 <GetDataSlab+0xfb40>
   32488:	mov	r1, #0
   3248c:	str	r1, [sl, r0]
   32490:	ldr	r1, [sp, #48]	; 0x30
   32494:	ldr	r4, [r1, r0]
   32498:	sdiv	r7, r5, r4
   3249c:	mls	r7, r7, r4, r5
   324a0:	cmp	r7, #0
   324a4:	beq	324d8 <GetDataSlab+0xfb14>
   324a8:	add	r1, sp, #64	; 0x40
   324ac:	mov	r2, r6
   324b0:	mov	r6, r5
   324b4:	ldr	r5, [ip, r0]
   324b8:	sub	r4, r4, r7
   324bc:	ldr	r1, [r1, r0]
   324c0:	mla	r1, r5, r1, r4
   324c4:	mov	r5, r6
   324c8:	mov	r6, r2
   324cc:	add	r5, r1, r5
   324d0:	add	r6, r2, r1
   324d4:	b	324f4 <GetDataSlab+0xfb30>
   324d8:	ldr	r4, [ip, r0]
   324dc:	cmp	r4, #0
   324e0:	beq	324f4 <GetDataSlab+0xfb30>
   324e4:	add	r1, sp, #64	; 0x40
   324e8:	ldr	r1, [r1, r0]
   324ec:	mla	r5, r1, r4, r5
   324f0:	mla	r6, r1, r4, r6
   324f4:	subs	r8, r8, #1
   324f8:	add	r0, r0, #4
   324fc:	bne	32464 <GetDataSlab+0xfaa0>
   32500:	b	32514 <GetDataSlab+0xfb50>
   32504:	ldr	r1, [sp, #24]
   32508:	ldr	r0, [r1, r0]
   3250c:	add	r6, r6, r0
   32510:	add	r5, r0, r5
   32514:	ldr	r1, [sp, #36]	; 0x24
   32518:	ldr	r0, [sp, #44]	; 0x2c
   3251c:	add	r1, lr, r1
   32520:	cmp	r1, r0
   32524:	mov	r0, #0
   32528:	str	r1, [sp, #36]	; 0x24
   3252c:	blt	323cc <GetDataSlab+0xfa08>
   32530:	b	24900 <GetDataSlab+0x1f3c>
   32534:	ldr	r0, [sp, #52]	; 0x34
   32538:	ldr	r2, [fp, #12]
   3253c:	ldr	r4, [sp, #44]	; 0x2c
   32540:	cmp	r0, #1
   32544:	blt	248fc <GetDataSlab+0x1f38>
   32548:	ldr	r0, [sp, #40]	; 0x28
   3254c:	mls	r0, r4, lr, r0
   32550:	str	r0, [sp, #40]	; 0x28
   32554:	mul	r0, r4, lr
   32558:	str	r0, [sp, #32]
   3255c:	add	r0, sp, #104	; 0x68
   32560:	orr	r6, r0, #4
   32564:	ldr	r0, [fp, #20]
   32568:	add	r1, r0, #4
   3256c:	mov	r0, r2
   32570:	add	r2, sp, #64	; 0x40
   32574:	add	ip, r0, #4
   32578:	ldr	r0, [fp, #24]
   3257c:	orr	sl, r2, #4
   32580:	sub	r0, r0, #1
   32584:	str	r0, [sp, #28]
   32588:	sub	r0, fp, #72	; 0x48
   3258c:	orr	r0, r0, #4
   32590:	str	r0, [sp, #24]
   32594:	lsl	r0, r4, #3
   32598:	str	r0, [sp, #36]	; 0x24
   3259c:	mov	r0, #0
   325a0:	str	r0, [sp, #48]	; 0x30
   325a4:	ldr	r0, [fp, #12]
   325a8:	cmp	r4, #1
   325ac:	ldr	r0, [r0]
   325b0:	add	r7, r7, r0
   325b4:	blt	325ec <GetDataSlab+0xfc28>
   325b8:	mov	r2, r4
   325bc:	ldr	r4, [sp, #32]
   325c0:	add	r5, r4, r3
   325c4:	ldr	r4, [sp, #56]	; 0x38
   325c8:	mov	r3, r2
   325cc:	ldrsb	r8, [r7], lr
   325d0:	subs	r3, r3, #1
   325d4:	asr	r9, r8, #31
   325d8:	strd	r8, [r4]
   325dc:	add	r4, r4, #8
   325e0:	bne	325cc <GetDataSlab+0xfc08>
   325e4:	add	r3, r5, r0
   325e8:	b	325f0 <GetDataSlab+0xfc2c>
   325ec:	add	r3, r0, r3
   325f0:	ldr	r2, [sp, #40]	; 0x28
   325f4:	sub	r0, r2, r0
   325f8:	add	r7, r7, r0
   325fc:	add	r3, r3, r0
   32600:	ldr	r0, [fp, #24]
   32604:	cmp	r0, #2
   32608:	blt	326ac <GetDataSlab+0xfce8>
   3260c:	ldr	r9, [sp, #28]
   32610:	mov	r0, #0
   32614:	ldr	r4, [r6, r0]
   32618:	add	r4, r4, #1
   3261c:	str	r4, [r6, r0]
   32620:	ldr	r5, [r1, r0]
   32624:	sdiv	r2, r4, r5
   32628:	mls	r2, r2, r5, r4
   3262c:	cmp	r2, #0
   32630:	bne	3269c <GetDataSlab+0xfcd8>
   32634:	ldr	r4, [sl, r0]
   32638:	mov	r2, #0
   3263c:	str	r2, [r6, r0]
   32640:	sdiv	r2, r3, r4
   32644:	mls	r8, r2, r4, r3
   32648:	cmp	r8, #0
   3264c:	beq	32670 <GetDataSlab+0xfcac>
   32650:	add	r2, sp, #64	; 0x40
   32654:	ldr	r5, [ip, r0]
   32658:	sub	r4, r4, r8
   3265c:	ldr	r2, [r2, r0]
   32660:	mla	r2, r5, r2, r4
   32664:	add	r3, r2, r3
   32668:	add	r7, r7, r2
   3266c:	b	3268c <GetDataSlab+0xfcc8>
   32670:	ldr	r4, [ip, r0]
   32674:	cmp	r4, #0
   32678:	beq	3268c <GetDataSlab+0xfcc8>
   3267c:	add	r2, sp, #64	; 0x40
   32680:	ldr	r2, [r2, r0]
   32684:	mla	r3, r2, r4, r3
   32688:	mla	r7, r2, r4, r7
   3268c:	subs	r9, r9, #1
   32690:	add	r0, r0, #4
   32694:	bne	32614 <GetDataSlab+0xfc50>
   32698:	b	326ac <GetDataSlab+0xfce8>
   3269c:	ldr	r2, [sp, #24]
   326a0:	ldr	r0, [r2, r0]
   326a4:	add	r7, r7, r0
   326a8:	add	r3, r0, r3
   326ac:	ldr	r0, [sp, #36]	; 0x24
   326b0:	ldr	r2, [sp, #56]	; 0x38
   326b4:	ldr	r4, [sp, #44]	; 0x2c
   326b8:	ldr	r5, [sp, #48]	; 0x30
   326bc:	add	r2, r2, r0
   326c0:	add	r5, r5, r4
   326c4:	mov	r0, #0
   326c8:	str	r2, [sp, #56]	; 0x38
   326cc:	ldr	r2, [sp, #52]	; 0x34
   326d0:	str	r5, [sp, #48]	; 0x30
   326d4:	cmp	r5, r2
   326d8:	blt	325a4 <GetDataSlab+0xfbe0>
   326dc:	b	24900 <GetDataSlab+0x1f3c>
   326e0:	ldr	r0, [sp, #52]	; 0x34
   326e4:	ldr	r2, [fp, #12]
   326e8:	ldr	r4, [sp, #44]	; 0x2c
   326ec:	cmp	r0, #1
   326f0:	blt	248fc <GetDataSlab+0x1f38>
   326f4:	ldr	r0, [sp, #40]	; 0x28
   326f8:	mls	r0, r4, lr, r0
   326fc:	str	r0, [sp, #40]	; 0x28
   32700:	mul	r0, r4, lr
   32704:	str	r0, [sp, #32]
   32708:	add	r0, sp, #104	; 0x68
   3270c:	orr	r6, r0, #4
   32710:	ldr	r0, [fp, #20]
   32714:	add	r1, r0, #4
   32718:	mov	r0, r2
   3271c:	add	r2, sp, #64	; 0x40
   32720:	add	ip, r0, #4
   32724:	ldr	r0, [fp, #24]
   32728:	orr	sl, r2, #4
   3272c:	sub	r0, r0, #1
   32730:	str	r0, [sp, #28]
   32734:	sub	r0, fp, #72	; 0x48
   32738:	orr	r0, r0, #4
   3273c:	str	r0, [sp, #24]
   32740:	lsl	r0, r4, #3
   32744:	str	r0, [sp, #36]	; 0x24
   32748:	mov	r0, #0
   3274c:	str	r0, [sp, #48]	; 0x30
   32750:	ldr	r0, [fp, #12]
   32754:	cmp	r4, #1
   32758:	ldr	r0, [r0]
   3275c:	add	r7, r7, r0
   32760:	blt	32798 <GetDataSlab+0xfdd4>
   32764:	mov	r2, r4
   32768:	ldr	r4, [sp, #32]
   3276c:	add	r5, r4, r3
   32770:	ldr	r4, [sp, #56]	; 0x38
   32774:	mov	r3, r2
   32778:	ldrsb	r8, [r7], lr
   3277c:	subs	r3, r3, #1
   32780:	asr	r9, r8, #31
   32784:	strd	r8, [r4]
   32788:	add	r4, r4, #8
   3278c:	bne	32778 <GetDataSlab+0xfdb4>
   32790:	add	r3, r5, r0
   32794:	b	3279c <GetDataSlab+0xfdd8>
   32798:	add	r3, r0, r3
   3279c:	ldr	r2, [sp, #40]	; 0x28
   327a0:	sub	r0, r2, r0
   327a4:	add	r7, r7, r0
   327a8:	add	r3, r3, r0
   327ac:	ldr	r0, [fp, #24]
   327b0:	cmp	r0, #2
   327b4:	blt	32858 <GetDataSlab+0xfe94>
   327b8:	ldr	r9, [sp, #28]
   327bc:	mov	r0, #0
   327c0:	ldr	r4, [r6, r0]
   327c4:	add	r4, r4, #1
   327c8:	str	r4, [r6, r0]
   327cc:	ldr	r5, [r1, r0]
   327d0:	sdiv	r2, r4, r5
   327d4:	mls	r2, r2, r5, r4
   327d8:	cmp	r2, #0
   327dc:	bne	32848 <GetDataSlab+0xfe84>
   327e0:	ldr	r4, [sl, r0]
   327e4:	mov	r2, #0
   327e8:	str	r2, [r6, r0]
   327ec:	sdiv	r2, r3, r4
   327f0:	mls	r8, r2, r4, r3
   327f4:	cmp	r8, #0
   327f8:	beq	3281c <GetDataSlab+0xfe58>
   327fc:	add	r2, sp, #64	; 0x40
   32800:	ldr	r5, [ip, r0]
   32804:	sub	r4, r4, r8
   32808:	ldr	r2, [r2, r0]
   3280c:	mla	r2, r5, r2, r4
   32810:	add	r3, r2, r3
   32814:	add	r7, r7, r2
   32818:	b	32838 <GetDataSlab+0xfe74>
   3281c:	ldr	r4, [ip, r0]
   32820:	cmp	r4, #0
   32824:	beq	32838 <GetDataSlab+0xfe74>
   32828:	add	r2, sp, #64	; 0x40
   3282c:	ldr	r2, [r2, r0]
   32830:	mla	r3, r2, r4, r3
   32834:	mla	r7, r2, r4, r7
   32838:	subs	r9, r9, #1
   3283c:	add	r0, r0, #4
   32840:	bne	327c0 <GetDataSlab+0xfdfc>
   32844:	b	32858 <GetDataSlab+0xfe94>
   32848:	ldr	r2, [sp, #24]
   3284c:	ldr	r0, [r2, r0]
   32850:	add	r7, r7, r0
   32854:	add	r3, r0, r3
   32858:	ldr	r0, [sp, #36]	; 0x24
   3285c:	ldr	r2, [sp, #56]	; 0x38
   32860:	ldr	r4, [sp, #44]	; 0x2c
   32864:	ldr	r5, [sp, #48]	; 0x30
   32868:	add	r2, r2, r0
   3286c:	add	r5, r5, r4
   32870:	mov	r0, #0
   32874:	str	r2, [sp, #56]	; 0x38
   32878:	ldr	r2, [sp, #52]	; 0x34
   3287c:	str	r5, [sp, #48]	; 0x30
   32880:	cmp	r5, r2
   32884:	blt	32750 <GetDataSlab+0xfd8c>
   32888:	b	24900 <GetDataSlab+0x1f3c>
   3288c:	ldr	r0, [sp, #52]	; 0x34
   32890:	ldr	r2, [fp, #12]
   32894:	ldr	r4, [sp, #44]	; 0x2c
   32898:	cmp	r0, #1
   3289c:	blt	248fc <GetDataSlab+0x1f38>
   328a0:	ldr	r0, [sp, #40]	; 0x28
   328a4:	add	ip, r2, #4
   328a8:	mls	r0, r4, lr, r0
   328ac:	str	r0, [sp, #40]	; 0x28
   328b0:	mul	r0, r4, lr
   328b4:	str	r0, [sp, #32]
   328b8:	add	r0, sp, #104	; 0x68
   328bc:	orr	r6, r0, #4
   328c0:	ldr	r0, [fp, #20]
   328c4:	add	r1, r0, #4
   328c8:	add	r0, sp, #64	; 0x40
   328cc:	orr	r8, r0, #4
   328d0:	ldr	r0, [fp, #24]
   328d4:	sub	r0, r0, #1
   328d8:	str	r0, [sp, #28]
   328dc:	sub	r0, fp, #72	; 0x48
   328e0:	orr	r0, r0, #4
   328e4:	str	r0, [sp, #24]
   328e8:	lsl	r0, r4, #3
   328ec:	str	r0, [sp, #36]	; 0x24
   328f0:	mov	r0, #0
   328f4:	str	r0, [sp, #48]	; 0x30
   328f8:	ldr	r0, [fp, #12]
   328fc:	cmp	r4, #1
   32900:	ldr	r0, [r0]
   32904:	add	r7, r7, r0
   32908:	blt	32940 <GetDataSlab+0xff7c>
   3290c:	mov	r2, r4
   32910:	ldr	r4, [sp, #32]
   32914:	add	r9, r4, r3
   32918:	ldr	r4, [sp, #56]	; 0x38
   3291c:	mov	r3, r2
   32920:	ldrb	r5, [r7], lr
   32924:	subs	r3, r3, #1
   32928:	vmov	s0, r5
   3292c:	vcvt.f64.u32	d16, s0
   32930:	vstmia	r4!, {d16}
   32934:	bne	32920 <GetDataSlab+0xff5c>
   32938:	add	r3, r9, r0
   3293c:	b	32944 <GetDataSlab+0xff80>
   32940:	add	r3, r0, r3
   32944:	ldr	r2, [sp, #40]	; 0x28
   32948:	sub	r0, r2, r0
   3294c:	add	r7, r7, r0
   32950:	add	r3, r3, r0
   32954:	ldr	r0, [fp, #24]
   32958:	cmp	r0, #2
   3295c:	blt	32a00 <GetDataSlab+0x1003c>
   32960:	ldr	r9, [sp, #28]
   32964:	mov	r0, #0
   32968:	ldr	r4, [r6, r0]
   3296c:	add	r4, r4, #1
   32970:	str	r4, [r6, r0]
   32974:	ldr	r5, [r1, r0]
   32978:	sdiv	r2, r4, r5
   3297c:	mls	r2, r2, r5, r4
   32980:	cmp	r2, #0
   32984:	bne	329f0 <GetDataSlab+0x1002c>
   32988:	ldr	r4, [r8, r0]
   3298c:	mov	r2, #0
   32990:	str	r2, [r6, r0]
   32994:	sdiv	r2, r3, r4
   32998:	mls	sl, r2, r4, r3
   3299c:	cmp	sl, #0
   329a0:	beq	329c4 <GetDataSlab+0x10000>
   329a4:	add	r2, sp, #64	; 0x40
   329a8:	ldr	r5, [ip, r0]
   329ac:	sub	r4, r4, sl
   329b0:	ldr	r2, [r2, r0]
   329b4:	mla	r2, r5, r2, r4
   329b8:	add	r3, r2, r3
   329bc:	add	r7, r7, r2
   329c0:	b	329e0 <GetDataSlab+0x1001c>
   329c4:	ldr	r4, [ip, r0]
   329c8:	cmp	r4, #0
   329cc:	beq	329e0 <GetDataSlab+0x1001c>
   329d0:	add	r2, sp, #64	; 0x40
   329d4:	ldr	r2, [r2, r0]
   329d8:	mla	r3, r2, r4, r3
   329dc:	mla	r7, r2, r4, r7
   329e0:	subs	r9, r9, #1
   329e4:	add	r0, r0, #4
   329e8:	bne	32968 <GetDataSlab+0xffa4>
   329ec:	b	32a00 <GetDataSlab+0x1003c>
   329f0:	ldr	r2, [sp, #24]
   329f4:	ldr	r0, [r2, r0]
   329f8:	add	r7, r7, r0
   329fc:	add	r3, r0, r3
   32a00:	ldr	r0, [sp, #36]	; 0x24
   32a04:	ldr	r2, [sp, #56]	; 0x38
   32a08:	ldr	r4, [sp, #44]	; 0x2c
   32a0c:	ldr	r5, [sp, #48]	; 0x30
   32a10:	add	r2, r2, r0
   32a14:	add	r5, r5, r4
   32a18:	mov	r0, #0
   32a1c:	str	r2, [sp, #56]	; 0x38
   32a20:	ldr	r2, [sp, #52]	; 0x34
   32a24:	str	r5, [sp, #48]	; 0x30
   32a28:	cmp	r5, r2
   32a2c:	blt	328f8 <GetDataSlab+0xff34>
   32a30:	b	24900 <GetDataSlab+0x1f3c>
   32a34:	ldr	r0, [sp, #52]	; 0x34
   32a38:	ldr	r1, [sp, #44]	; 0x2c
   32a3c:	cmp	r0, #1
   32a40:	blt	248fc <GetDataSlab+0x1f38>
   32a44:	ldr	r0, [sp, #40]	; 0x28
   32a48:	ldr	r3, [ip], #4
   32a4c:	lsl	sl, lr, #1
   32a50:	mls	r0, r1, lr, r0
   32a54:	str	r3, [sp, #48]	; 0x30
   32a58:	sub	r0, r0, r3
   32a5c:	str	r0, [sp, #40]	; 0x28
   32a60:	add	r0, sp, #104	; 0x68
   32a64:	orr	r6, r0, #4
   32a68:	ldr	r0, [fp, #20]
   32a6c:	add	r5, r0, #4
   32a70:	add	r0, sp, #64	; 0x40
   32a74:	orr	r8, r0, #4
   32a78:	ldr	r0, [fp, #24]
   32a7c:	sub	r0, r0, #1
   32a80:	str	r0, [sp, #28]
   32a84:	sub	r0, fp, #72	; 0x48
   32a88:	orr	r0, r0, #4
   32a8c:	str	r0, [sp, #24]
   32a90:	mla	r0, r1, lr, r3
   32a94:	str	r0, [sp, #32]
   32a98:	lsl	r0, r1, #3
   32a9c:	str	r0, [sp, #36]	; 0x24
   32aa0:	ldr	r0, [sp, #56]	; 0x38
   32aa4:	str	r0, [sp, #60]	; 0x3c
   32aa8:	mov	r0, #0
   32aac:	str	r0, [sp, #56]	; 0x38
   32ab0:	ldr	r3, [sp, #48]	; 0x30
   32ab4:	cmp	r1, #1
   32ab8:	add	r0, r7, r3, lsl #1
   32abc:	blt	32ae4 <GetDataSlab+0x10120>
   32ac0:	ldr	r3, [sp, #60]	; 0x3c
   32ac4:	mov	r7, r1
   32ac8:	ldrsh	r4, [r0], sl
   32acc:	subs	r7, r7, #1
   32ad0:	vmov	s0, r4
   32ad4:	vcvt.f64.s32	d16, s0
   32ad8:	vstmia	r3!, {d16}
   32adc:	bne	32ac8 <GetDataSlab+0x10104>
   32ae0:	ldr	r3, [sp, #32]
   32ae4:	ldr	r1, [sp, #40]	; 0x28
   32ae8:	add	r7, r0, r1, lsl #1
   32aec:	add	r0, r3, r2
   32af0:	add	r2, r0, r1
   32af4:	ldr	r0, [fp, #24]
   32af8:	cmp	r0, #2
   32afc:	blt	32ba0 <GetDataSlab+0x101dc>
   32b00:	ldr	lr, [sp, #28]
   32b04:	mov	r0, #0
   32b08:	ldr	r3, [r6, r0]
   32b0c:	add	r3, r3, #1
   32b10:	str	r3, [r6, r0]
   32b14:	ldr	r4, [r5, r0]
   32b18:	sdiv	r1, r3, r4
   32b1c:	mls	r1, r1, r4, r3
   32b20:	cmp	r1, #0
   32b24:	bne	32b90 <GetDataSlab+0x101cc>
   32b28:	ldr	r3, [r8, r0]
   32b2c:	mov	r1, #0
   32b30:	str	r1, [r6, r0]
   32b34:	sdiv	r1, r2, r3
   32b38:	mls	r9, r1, r3, r2
   32b3c:	cmp	r9, #0
   32b40:	beq	32b60 <GetDataSlab+0x1019c>
   32b44:	add	r1, sp, #64	; 0x40
   32b48:	ldr	r4, [ip, r0]
   32b4c:	sub	r3, r3, r9
   32b50:	ldr	r1, [r1, r0]
   32b54:	mla	r1, r4, r1, r3
   32b58:	add	r2, r1, r2
   32b5c:	b	32b7c <GetDataSlab+0x101b8>
   32b60:	ldr	r3, [ip, r0]
   32b64:	cmp	r3, #0
   32b68:	beq	32b80 <GetDataSlab+0x101bc>
   32b6c:	add	r1, sp, #64	; 0x40
   32b70:	ldr	r1, [r1, r0]
   32b74:	mla	r2, r1, r3, r2
   32b78:	mul	r1, r1, r3
   32b7c:	add	r7, r7, r1, lsl #1
   32b80:	subs	lr, lr, #1
   32b84:	add	r0, r0, #4
   32b88:	bne	32b08 <GetDataSlab+0x10144>
   32b8c:	b	32ba0 <GetDataSlab+0x101dc>
   32b90:	ldr	r1, [sp, #24]
   32b94:	ldr	r0, [r1, r0]
   32b98:	add	r7, r7, r0, lsl #1
   32b9c:	add	r2, r0, r2
   32ba0:	ldr	r0, [sp, #36]	; 0x24
   32ba4:	ldr	r1, [sp, #60]	; 0x3c
   32ba8:	ldr	r4, [sp, #56]	; 0x38
   32bac:	ldr	r3, [sp, #52]	; 0x34
   32bb0:	add	r1, r1, r0
   32bb4:	mov	r0, #0
   32bb8:	str	r1, [sp, #60]	; 0x3c
   32bbc:	ldr	r1, [sp, #44]	; 0x2c
   32bc0:	add	r4, r4, r1
   32bc4:	cmp	r4, r3
   32bc8:	str	r4, [sp, #56]	; 0x38
   32bcc:	blt	32ab0 <GetDataSlab+0x100ec>
   32bd0:	b	24900 <GetDataSlab+0x1f3c>
   32bd4:	ldr	r0, [sp, #52]	; 0x34
   32bd8:	ldr	r1, [sp, #44]	; 0x2c
   32bdc:	cmp	r0, #1
   32be0:	blt	248fc <GetDataSlab+0x1f38>
   32be4:	ldr	r0, [sp, #40]	; 0x28
   32be8:	ldr	r3, [ip], #4
   32bec:	lsl	sl, lr, #1
   32bf0:	mls	r0, r1, lr, r0
   32bf4:	str	r3, [sp, #48]	; 0x30
   32bf8:	sub	r0, r0, r3
   32bfc:	str	r0, [sp, #40]	; 0x28
   32c00:	add	r0, sp, #104	; 0x68
   32c04:	orr	r6, r0, #4
   32c08:	ldr	r0, [fp, #20]
   32c0c:	add	r5, r0, #4
   32c10:	add	r0, sp, #64	; 0x40
   32c14:	orr	r8, r0, #4
   32c18:	ldr	r0, [fp, #24]
   32c1c:	sub	r0, r0, #1
   32c20:	str	r0, [sp, #28]
   32c24:	sub	r0, fp, #72	; 0x48
   32c28:	orr	r0, r0, #4
   32c2c:	str	r0, [sp, #24]
   32c30:	mla	r0, r1, lr, r3
   32c34:	str	r0, [sp, #32]
   32c38:	lsl	r0, r1, #3
   32c3c:	str	r0, [sp, #36]	; 0x24
   32c40:	ldr	r0, [sp, #56]	; 0x38
   32c44:	str	r0, [sp, #60]	; 0x3c
   32c48:	mov	r0, #0
   32c4c:	str	r0, [sp, #56]	; 0x38
   32c50:	ldr	r3, [sp, #48]	; 0x30
   32c54:	cmp	r1, #1
   32c58:	add	r0, r7, r3, lsl #1
   32c5c:	blt	32c84 <GetDataSlab+0x102c0>
   32c60:	ldr	r3, [sp, #60]	; 0x3c
   32c64:	mov	r7, r1
   32c68:	ldrh	r4, [r0], sl
   32c6c:	subs	r7, r7, #1
   32c70:	vmov	s0, r4
   32c74:	vcvt.f64.u32	d16, s0
   32c78:	vstmia	r3!, {d16}
   32c7c:	bne	32c68 <GetDataSlab+0x102a4>
   32c80:	ldr	r3, [sp, #32]
   32c84:	ldr	r1, [sp, #40]	; 0x28
   32c88:	add	r7, r0, r1, lsl #1
   32c8c:	add	r0, r3, r2
   32c90:	add	r2, r0, r1
   32c94:	ldr	r0, [fp, #24]
   32c98:	cmp	r0, #2
   32c9c:	blt	32d40 <GetDataSlab+0x1037c>
   32ca0:	ldr	lr, [sp, #28]
   32ca4:	mov	r0, #0
   32ca8:	ldr	r3, [r6, r0]
   32cac:	add	r3, r3, #1
   32cb0:	str	r3, [r6, r0]
   32cb4:	ldr	r4, [r5, r0]
   32cb8:	sdiv	r1, r3, r4
   32cbc:	mls	r1, r1, r4, r3
   32cc0:	cmp	r1, #0
   32cc4:	bne	32d30 <GetDataSlab+0x1036c>
   32cc8:	ldr	r3, [r8, r0]
   32ccc:	mov	r1, #0
   32cd0:	str	r1, [r6, r0]
   32cd4:	sdiv	r1, r2, r3
   32cd8:	mls	r9, r1, r3, r2
   32cdc:	cmp	r9, #0
   32ce0:	beq	32d00 <GetDataSlab+0x1033c>
   32ce4:	add	r1, sp, #64	; 0x40
   32ce8:	ldr	r4, [ip, r0]
   32cec:	sub	r3, r3, r9
   32cf0:	ldr	r1, [r1, r0]
   32cf4:	mla	r1, r4, r1, r3
   32cf8:	add	r2, r1, r2
   32cfc:	b	32d1c <GetDataSlab+0x10358>
   32d00:	ldr	r3, [ip, r0]
   32d04:	cmp	r3, #0
   32d08:	beq	32d20 <GetDataSlab+0x1035c>
   32d0c:	add	r1, sp, #64	; 0x40
   32d10:	ldr	r1, [r1, r0]
   32d14:	mla	r2, r1, r3, r2
   32d18:	mul	r1, r1, r3
   32d1c:	add	r7, r7, r1, lsl #1
   32d20:	subs	lr, lr, #1
   32d24:	add	r0, r0, #4
   32d28:	bne	32ca8 <GetDataSlab+0x102e4>
   32d2c:	b	32d40 <GetDataSlab+0x1037c>
   32d30:	ldr	r1, [sp, #24]
   32d34:	ldr	r0, [r1, r0]
   32d38:	add	r7, r7, r0, lsl #1
   32d3c:	add	r2, r0, r2
   32d40:	ldr	r0, [sp, #36]	; 0x24
   32d44:	ldr	r1, [sp, #60]	; 0x3c
   32d48:	ldr	r4, [sp, #56]	; 0x38
   32d4c:	ldr	r3, [sp, #52]	; 0x34
   32d50:	add	r1, r1, r0
   32d54:	mov	r0, #0
   32d58:	str	r1, [sp, #60]	; 0x3c
   32d5c:	ldr	r1, [sp, #44]	; 0x2c
   32d60:	add	r4, r4, r1
   32d64:	cmp	r4, r3
   32d68:	str	r4, [sp, #56]	; 0x38
   32d6c:	blt	32c50 <GetDataSlab+0x1028c>
   32d70:	b	24900 <GetDataSlab+0x1f3c>
   32d74:	ldr	r0, [sp, #52]	; 0x34
   32d78:	cmp	r0, #1
   32d7c:	blt	248fc <GetDataSlab+0x1f38>
   32d80:	ldr	r1, [sp, #44]	; 0x2c
   32d84:	ldr	r0, [sp, #40]	; 0x28
   32d88:	add	r2, sp, #64	; 0x40
   32d8c:	lsl	sl, r9, #2
   32d90:	str	r4, [sp, #56]	; 0x38
   32d94:	mls	r0, r1, r9, r0
   32d98:	str	r0, [sp, #40]	; 0x28
   32d9c:	add	r0, sp, #104	; 0x68
   32da0:	orr	r5, r0, #4
   32da4:	ldr	r0, [fp, #20]
   32da8:	add	r6, r0, #4
   32dac:	mov	r0, ip
   32db0:	orr	ip, r2, #4
   32db4:	add	r8, r0, #4
   32db8:	ldr	r0, [fp, #24]
   32dbc:	sub	r0, r0, #1
   32dc0:	str	r0, [sp, #28]
   32dc4:	sub	r0, fp, #72	; 0x48
   32dc8:	orr	r0, r0, #4
   32dcc:	str	r0, [sp, #24]
   32dd0:	mul	r0, r1, r9
   32dd4:	str	r0, [sp, #32]
   32dd8:	lsl	r0, r1, #3
   32ddc:	str	r0, [sp, #36]	; 0x24
   32de0:	mov	r0, #0
   32de4:	str	r0, [sp, #48]	; 0x30
   32de8:	ldr	r0, [fp, #12]
   32dec:	cmp	r1, #1
   32df0:	ldr	r0, [r0]
   32df4:	add	r7, r7, r0, lsl #2
   32df8:	blt	32e2c <GetDataSlab+0x10468>
   32dfc:	ldr	r2, [sp, #32]
   32e00:	ldr	r4, [sp, #56]	; 0x38
   32e04:	add	lr, r2, r3
   32e08:	mov	r3, r1
   32e0c:	ldr	r1, [r7], sl
   32e10:	subs	r3, r3, #1
   32e14:	vmov	s0, r1
   32e18:	vcvt.f64.s32	d16, s0
   32e1c:	vstmia	r4!, {d16}
   32e20:	bne	32e0c <GetDataSlab+0x10448>
   32e24:	add	r3, lr, r0
   32e28:	b	32e30 <GetDataSlab+0x1046c>
   32e2c:	add	r3, r0, r3
   32e30:	ldr	r1, [sp, #40]	; 0x28
   32e34:	sub	r0, r1, r0
   32e38:	add	r7, r7, r0, lsl #2
   32e3c:	add	r3, r3, r0
   32e40:	ldr	r0, [fp, #24]
   32e44:	cmp	r0, #2
   32e48:	blt	32eec <GetDataSlab+0x10528>
   32e4c:	ldr	lr, [sp, #28]
   32e50:	mov	r0, #0
   32e54:	ldr	r1, [r5, r0]
   32e58:	add	r1, r1, #1
   32e5c:	str	r1, [r5, r0]
   32e60:	ldr	r4, [r6, r0]
   32e64:	sdiv	r2, r1, r4
   32e68:	mls	r1, r2, r4, r1
   32e6c:	cmp	r1, #0
   32e70:	bne	32edc <GetDataSlab+0x10518>
   32e74:	ldr	r4, [ip, r0]
   32e78:	mov	r1, #0
   32e7c:	str	r1, [r5, r0]
   32e80:	sdiv	r1, r3, r4
   32e84:	mls	r9, r1, r4, r3
   32e88:	cmp	r9, #0
   32e8c:	beq	32eac <GetDataSlab+0x104e8>
   32e90:	add	r1, sp, #64	; 0x40
   32e94:	ldr	r2, [r8, r0]
   32e98:	sub	r4, r4, r9
   32e9c:	ldr	r1, [r1, r0]
   32ea0:	mla	r1, r2, r1, r4
   32ea4:	add	r3, r1, r3
   32ea8:	b	32ec8 <GetDataSlab+0x10504>
   32eac:	ldr	r4, [r8, r0]
   32eb0:	cmp	r4, #0
   32eb4:	beq	32ecc <GetDataSlab+0x10508>
   32eb8:	add	r1, sp, #64	; 0x40
   32ebc:	ldr	r1, [r1, r0]
   32ec0:	mla	r3, r1, r4, r3
   32ec4:	mul	r1, r1, r4
   32ec8:	add	r7, r7, r1, lsl #2
   32ecc:	subs	lr, lr, #1
   32ed0:	add	r0, r0, #4
   32ed4:	bne	32e54 <GetDataSlab+0x10490>
   32ed8:	b	32eec <GetDataSlab+0x10528>
   32edc:	ldr	r1, [sp, #24]
   32ee0:	ldr	r0, [r1, r0]
   32ee4:	add	r7, r7, r0, lsl #2
   32ee8:	add	r3, r0, r3
   32eec:	ldr	r0, [sp, #36]	; 0x24
   32ef0:	ldr	r1, [sp, #56]	; 0x38
   32ef4:	ldr	r4, [sp, #48]	; 0x30
   32ef8:	ldr	r2, [sp, #52]	; 0x34
   32efc:	add	r1, r1, r0
   32f00:	mov	r0, #0
   32f04:	str	r1, [sp, #56]	; 0x38
   32f08:	ldr	r1, [sp, #44]	; 0x2c
   32f0c:	add	r4, r4, r1
   32f10:	cmp	r4, r2
   32f14:	str	r4, [sp, #48]	; 0x30
   32f18:	blt	32de8 <GetDataSlab+0x10424>
   32f1c:	b	24900 <GetDataSlab+0x1f3c>
   32f20:	ldr	r0, [sp, #52]	; 0x34
   32f24:	cmp	r0, #1
   32f28:	blt	248fc <GetDataSlab+0x1f38>
   32f2c:	ldr	r1, [sp, #44]	; 0x2c
   32f30:	ldr	r0, [sp, #40]	; 0x28
   32f34:	add	r2, sp, #64	; 0x40
   32f38:	lsl	sl, r9, #2
   32f3c:	str	r4, [sp, #56]	; 0x38
   32f40:	mls	r0, r1, r9, r0
   32f44:	str	r0, [sp, #40]	; 0x28
   32f48:	add	r0, sp, #104	; 0x68
   32f4c:	orr	r5, r0, #4
   32f50:	ldr	r0, [fp, #20]
   32f54:	add	r6, r0, #4
   32f58:	mov	r0, ip
   32f5c:	orr	ip, r2, #4
   32f60:	add	r8, r0, #4
   32f64:	ldr	r0, [fp, #24]
   32f68:	sub	r0, r0, #1
   32f6c:	str	r0, [sp, #28]
   32f70:	sub	r0, fp, #72	; 0x48
   32f74:	orr	r0, r0, #4
   32f78:	str	r0, [sp, #24]
   32f7c:	mul	r0, r1, r9
   32f80:	str	r0, [sp, #32]
   32f84:	lsl	r0, r1, #3
   32f88:	str	r0, [sp, #36]	; 0x24
   32f8c:	mov	r0, #0
   32f90:	str	r0, [sp, #48]	; 0x30
   32f94:	ldr	r0, [fp, #12]
   32f98:	cmp	r1, #1
   32f9c:	ldr	r0, [r0]
   32fa0:	add	r7, r7, r0, lsl #2
   32fa4:	blt	32fd8 <GetDataSlab+0x10614>
   32fa8:	ldr	r2, [sp, #32]
   32fac:	ldr	r4, [sp, #56]	; 0x38
   32fb0:	add	lr, r2, r3
   32fb4:	mov	r3, r1
   32fb8:	ldr	r1, [r7], sl
   32fbc:	subs	r3, r3, #1
   32fc0:	vmov	s0, r1
   32fc4:	vcvt.f64.u32	d16, s0
   32fc8:	vstmia	r4!, {d16}
   32fcc:	bne	32fb8 <GetDataSlab+0x105f4>
   32fd0:	add	r3, lr, r0
   32fd4:	b	32fdc <GetDataSlab+0x10618>
   32fd8:	add	r3, r0, r3
   32fdc:	ldr	r1, [sp, #40]	; 0x28
   32fe0:	sub	r0, r1, r0
   32fe4:	add	r7, r7, r0, lsl #2
   32fe8:	add	r3, r3, r0
   32fec:	ldr	r0, [fp, #24]
   32ff0:	cmp	r0, #2
   32ff4:	blt	33098 <GetDataSlab+0x106d4>
   32ff8:	ldr	lr, [sp, #28]
   32ffc:	mov	r0, #0
   33000:	ldr	r1, [r5, r0]
   33004:	add	r1, r1, #1
   33008:	str	r1, [r5, r0]
   3300c:	ldr	r4, [r6, r0]
   33010:	sdiv	r2, r1, r4
   33014:	mls	r1, r2, r4, r1
   33018:	cmp	r1, #0
   3301c:	bne	33088 <GetDataSlab+0x106c4>
   33020:	ldr	r4, [ip, r0]
   33024:	mov	r1, #0
   33028:	str	r1, [r5, r0]
   3302c:	sdiv	r1, r3, r4
   33030:	mls	r9, r1, r4, r3
   33034:	cmp	r9, #0
   33038:	beq	33058 <GetDataSlab+0x10694>
   3303c:	add	r1, sp, #64	; 0x40
   33040:	ldr	r2, [r8, r0]
   33044:	sub	r4, r4, r9
   33048:	ldr	r1, [r1, r0]
   3304c:	mla	r1, r2, r1, r4
   33050:	add	r3, r1, r3
   33054:	b	33074 <GetDataSlab+0x106b0>
   33058:	ldr	r4, [r8, r0]
   3305c:	cmp	r4, #0
   33060:	beq	33078 <GetDataSlab+0x106b4>
   33064:	add	r1, sp, #64	; 0x40
   33068:	ldr	r1, [r1, r0]
   3306c:	mla	r3, r1, r4, r3
   33070:	mul	r1, r1, r4
   33074:	add	r7, r7, r1, lsl #2
   33078:	subs	lr, lr, #1
   3307c:	add	r0, r0, #4
   33080:	bne	33000 <GetDataSlab+0x1063c>
   33084:	b	33098 <GetDataSlab+0x106d4>
   33088:	ldr	r1, [sp, #24]
   3308c:	ldr	r0, [r1, r0]
   33090:	add	r7, r7, r0, lsl #2
   33094:	add	r3, r0, r3
   33098:	ldr	r0, [sp, #36]	; 0x24
   3309c:	ldr	r1, [sp, #56]	; 0x38
   330a0:	ldr	r4, [sp, #48]	; 0x30
   330a4:	ldr	r2, [sp, #52]	; 0x34
   330a8:	add	r1, r1, r0
   330ac:	mov	r0, #0
   330b0:	str	r1, [sp, #56]	; 0x38
   330b4:	ldr	r1, [sp, #44]	; 0x2c
   330b8:	add	r4, r4, r1
   330bc:	cmp	r4, r2
   330c0:	str	r4, [sp, #48]	; 0x30
   330c4:	blt	32f94 <GetDataSlab+0x105d0>
   330c8:	b	24900 <GetDataSlab+0x1f3c>
   330cc:	ldr	r0, [sp, #52]	; 0x34
   330d0:	ldr	r1, [sp, #44]	; 0x2c
   330d4:	cmp	r0, #1
   330d8:	blt	248fc <GetDataSlab+0x1f38>
   330dc:	ldr	r0, [sp, #40]	; 0x28
   330e0:	ldr	r3, [ip], #4
   330e4:	lsl	sl, lr, #2
   330e8:	mls	r0, r1, lr, r0
   330ec:	str	r3, [sp, #48]	; 0x30
   330f0:	sub	r0, r0, r3
   330f4:	str	r0, [sp, #40]	; 0x28
   330f8:	add	r0, sp, #104	; 0x68
   330fc:	orr	r6, r0, #4
   33100:	ldr	r0, [fp, #20]
   33104:	add	r5, r0, #4
   33108:	add	r0, sp, #64	; 0x40
   3310c:	orr	r8, r0, #4
   33110:	ldr	r0, [fp, #24]
   33114:	sub	r0, r0, #1
   33118:	str	r0, [sp, #28]
   3311c:	sub	r0, fp, #72	; 0x48
   33120:	orr	r0, r0, #4
   33124:	str	r0, [sp, #24]
   33128:	mla	r0, r1, lr, r3
   3312c:	str	r0, [sp, #32]
   33130:	lsl	r0, r1, #3
   33134:	str	r0, [sp, #36]	; 0x24
   33138:	ldr	r0, [sp, #56]	; 0x38
   3313c:	str	r0, [sp, #60]	; 0x3c
   33140:	mov	r0, #0
   33144:	str	r0, [sp, #56]	; 0x38
   33148:	ldr	r3, [sp, #48]	; 0x30
   3314c:	cmp	r1, #1
   33150:	add	r0, r7, r3, lsl #2
   33154:	blt	33180 <GetDataSlab+0x107bc>
   33158:	ldr	r3, [sp, #60]	; 0x3c
   3315c:	mov	r7, r1
   33160:	vldr	s0, [r0]
   33164:	add	r0, r0, sl
   33168:	subs	r7, r7, #1
   3316c:	vcvt.f64.f32	d16, s0
   33170:	vstr	d16, [r3]
   33174:	add	r3, r3, #8
   33178:	bne	33160 <GetDataSlab+0x1079c>
   3317c:	ldr	r3, [sp, #32]
   33180:	ldr	r1, [sp, #40]	; 0x28
   33184:	add	r7, r0, r1, lsl #2
   33188:	add	r0, r3, r2
   3318c:	add	r2, r0, r1
   33190:	ldr	r0, [fp, #24]
   33194:	cmp	r0, #2
   33198:	blt	3323c <GetDataSlab+0x10878>
   3319c:	ldr	lr, [sp, #28]
   331a0:	mov	r0, #0
   331a4:	ldr	r3, [r6, r0]
   331a8:	add	r3, r3, #1
   331ac:	str	r3, [r6, r0]
   331b0:	ldr	r4, [r5, r0]
   331b4:	sdiv	r1, r3, r4
   331b8:	mls	r1, r1, r4, r3
   331bc:	cmp	r1, #0
   331c0:	bne	3322c <GetDataSlab+0x10868>
   331c4:	ldr	r3, [r8, r0]
   331c8:	mov	r1, #0
   331cc:	str	r1, [r6, r0]
   331d0:	sdiv	r1, r2, r3
   331d4:	mls	r9, r1, r3, r2
   331d8:	cmp	r9, #0
   331dc:	beq	331fc <GetDataSlab+0x10838>
   331e0:	add	r1, sp, #64	; 0x40
   331e4:	ldr	r4, [ip, r0]
   331e8:	sub	r3, r3, r9
   331ec:	ldr	r1, [r1, r0]
   331f0:	mla	r1, r4, r1, r3
   331f4:	add	r2, r1, r2
   331f8:	b	33218 <GetDataSlab+0x10854>
   331fc:	ldr	r3, [ip, r0]
   33200:	cmp	r3, #0
   33204:	beq	3321c <GetDataSlab+0x10858>
   33208:	add	r1, sp, #64	; 0x40
   3320c:	ldr	r1, [r1, r0]
   33210:	mla	r2, r1, r3, r2
   33214:	mul	r1, r1, r3
   33218:	add	r7, r7, r1, lsl #2
   3321c:	subs	lr, lr, #1
   33220:	add	r0, r0, #4
   33224:	bne	331a4 <GetDataSlab+0x107e0>
   33228:	b	3323c <GetDataSlab+0x10878>
   3322c:	ldr	r1, [sp, #24]
   33230:	ldr	r0, [r1, r0]
   33234:	add	r7, r7, r0, lsl #2
   33238:	add	r2, r0, r2
   3323c:	ldr	r0, [sp, #36]	; 0x24
   33240:	ldr	r1, [sp, #60]	; 0x3c
   33244:	ldr	r4, [sp, #56]	; 0x38
   33248:	ldr	r3, [sp, #52]	; 0x34
   3324c:	add	r1, r1, r0
   33250:	mov	r0, #0
   33254:	str	r1, [sp, #60]	; 0x3c
   33258:	ldr	r1, [sp, #44]	; 0x2c
   3325c:	add	r4, r4, r1
   33260:	cmp	r4, r3
   33264:	str	r4, [sp, #56]	; 0x38
   33268:	blt	33148 <GetDataSlab+0x10784>
   3326c:	b	24900 <GetDataSlab+0x1f3c>
   33270:	ldr	r0, [sp, #52]	; 0x34
   33274:	ldr	r1, [sp, #44]	; 0x2c
   33278:	cmp	r0, #1
   3327c:	blt	248fc <GetDataSlab+0x1f38>
   33280:	ldr	r0, [sp, #40]	; 0x28
   33284:	ldr	r3, [ip], #4
   33288:	lsl	sl, lr, #3
   3328c:	mls	r0, r1, lr, r0
   33290:	str	r3, [sp, #48]	; 0x30
   33294:	sub	r0, r0, r3
   33298:	str	r0, [sp, #40]	; 0x28
   3329c:	add	r0, sp, #104	; 0x68
   332a0:	orr	r6, r0, #4
   332a4:	ldr	r0, [fp, #20]
   332a8:	add	r5, r0, #4
   332ac:	add	r0, sp, #64	; 0x40
   332b0:	orr	r8, r0, #4
   332b4:	ldr	r0, [fp, #24]
   332b8:	sub	r0, r0, #1
   332bc:	str	r0, [sp, #28]
   332c0:	sub	r0, fp, #72	; 0x48
   332c4:	orr	r0, r0, #4
   332c8:	str	r0, [sp, #24]
   332cc:	mla	r0, r1, lr, r3
   332d0:	str	r0, [sp, #32]
   332d4:	lsl	r0, r1, #3
   332d8:	str	r0, [sp, #36]	; 0x24
   332dc:	ldr	r0, [sp, #56]	; 0x38
   332e0:	str	r0, [sp, #60]	; 0x3c
   332e4:	mov	r0, #0
   332e8:	str	r0, [sp, #56]	; 0x38
   332ec:	ldr	r3, [sp, #48]	; 0x30
   332f0:	cmp	r1, #1
   332f4:	add	r0, r7, r3, lsl #3
   332f8:	blt	33320 <GetDataSlab+0x1095c>
   332fc:	ldr	r3, [sp, #60]	; 0x3c
   33300:	mov	r7, r1
   33304:	vldr	d16, [r0]
   33308:	add	r0, r0, sl
   3330c:	subs	r7, r7, #1
   33310:	vstr	d16, [r3]
   33314:	add	r3, r3, #8
   33318:	bne	33304 <GetDataSlab+0x10940>
   3331c:	ldr	r3, [sp, #32]
   33320:	ldr	r1, [sp, #40]	; 0x28
   33324:	add	r7, r0, r1, lsl #3
   33328:	add	r0, r3, r2
   3332c:	add	r2, r0, r1
   33330:	ldr	r0, [fp, #24]
   33334:	cmp	r0, #2
   33338:	blt	333dc <GetDataSlab+0x10a18>
   3333c:	ldr	lr, [sp, #28]
   33340:	mov	r0, #0
   33344:	ldr	r3, [r6, r0]
   33348:	add	r3, r3, #1
   3334c:	str	r3, [r6, r0]
   33350:	ldr	r4, [r5, r0]
   33354:	sdiv	r1, r3, r4
   33358:	mls	r1, r1, r4, r3
   3335c:	cmp	r1, #0
   33360:	bne	333cc <GetDataSlab+0x10a08>
   33364:	ldr	r3, [r8, r0]
   33368:	mov	r1, #0
   3336c:	str	r1, [r6, r0]
   33370:	sdiv	r1, r2, r3
   33374:	mls	r9, r1, r3, r2
   33378:	cmp	r9, #0
   3337c:	beq	3339c <GetDataSlab+0x109d8>
   33380:	add	r1, sp, #64	; 0x40
   33384:	ldr	r4, [ip, r0]
   33388:	sub	r3, r3, r9
   3338c:	ldr	r1, [r1, r0]
   33390:	mla	r1, r4, r1, r3
   33394:	add	r2, r1, r2
   33398:	b	333b8 <GetDataSlab+0x109f4>
   3339c:	ldr	r3, [ip, r0]
   333a0:	cmp	r3, #0
   333a4:	beq	333bc <GetDataSlab+0x109f8>
   333a8:	add	r1, sp, #64	; 0x40
   333ac:	ldr	r1, [r1, r0]
   333b0:	mla	r2, r1, r3, r2
   333b4:	mul	r1, r1, r3
   333b8:	add	r7, r7, r1, lsl #3
   333bc:	subs	lr, lr, #1
   333c0:	add	r0, r0, #4
   333c4:	bne	33344 <GetDataSlab+0x10980>
   333c8:	b	333dc <GetDataSlab+0x10a18>
   333cc:	ldr	r1, [sp, #24]
   333d0:	ldr	r0, [r1, r0]
   333d4:	add	r7, r7, r0, lsl #3
   333d8:	add	r2, r0, r2
   333dc:	ldr	r0, [sp, #36]	; 0x24
   333e0:	ldr	r1, [sp, #60]	; 0x3c
   333e4:	ldr	r4, [sp, #56]	; 0x38
   333e8:	ldr	r3, [sp, #52]	; 0x34
   333ec:	add	r1, r1, r0
   333f0:	mov	r0, #0
   333f4:	str	r1, [sp, #60]	; 0x3c
   333f8:	ldr	r1, [sp, #44]	; 0x2c
   333fc:	add	r4, r4, r1
   33400:	cmp	r4, r3
   33404:	str	r4, [sp, #56]	; 0x38
   33408:	blt	332ec <GetDataSlab+0x10928>
   3340c:	b	24900 <GetDataSlab+0x1f3c>
   33410:	ldr	r0, [sp, #36]	; 0x24
   33414:	ldr	lr, [sp, #32]
   33418:	cmp	r0, #1
   3341c:	blt	335d4 <GetDataSlab+0x10c10>
   33420:	ldr	r2, [fp, #12]
   33424:	ldr	r0, [sp, #24]
   33428:	add	r3, sp, #104	; 0x68
   3342c:	lsl	r8, ip, #3
   33430:	orr	sl, r3, #4
   33434:	mov	r4, r2
   33438:	mls	r0, lr, ip, r0
   3343c:	mov	r2, #0
   33440:	ldr	r6, [r4], #4
   33444:	sub	r0, r0, r6
   33448:	str	r6, [sp, #12]
   3344c:	str	r0, [sp, #20]
   33450:	ldr	r0, [fp, #20]
   33454:	add	r0, r0, #4
   33458:	str	r0, [sp, #44]	; 0x2c
   3345c:	add	r0, sp, #64	; 0x40
   33460:	orr	r0, r0, #4
   33464:	str	r0, [sp, #40]	; 0x28
   33468:	ldr	r0, [fp, #24]
   3346c:	sub	r0, r0, #1
   33470:	str	r0, [sp, #4]
   33474:	sub	r0, fp, #72	; 0x48
   33478:	orr	r0, r0, #4
   3347c:	str	r0, [sp]
   33480:	mla	r0, lr, ip, r6
   33484:	mov	ip, r6
   33488:	str	r0, [sp, #8]
   3348c:	lsl	r0, lr, #3
   33490:	str	r0, [sp, #16]
   33494:	add	r7, r9, ip, lsl #3
   33498:	cmp	lr, #1
   3349c:	str	r2, [sp, #24]
   334a0:	str	r1, [sp, #28]
   334a4:	blt	334e0 <GetDataSlab+0x10b1c>
   334a8:	mov	r9, r4
   334ac:	mov	r4, r1
   334b0:	mov	r6, lr
   334b4:	ldrd	r0, [r7]
   334b8:	bl	4b404 <__aeabi_l2d>
   334bc:	strd	r0, [r4]
   334c0:	add	r7, r7, r8
   334c4:	add	r4, r4, #8
   334c8:	subs	r6, r6, #1
   334cc:	bne	334b4 <GetDataSlab+0x10af0>
   334d0:	ldr	r0, [sp, #8]
   334d4:	ldr	ip, [sp, #12]
   334d8:	mov	r4, r9
   334dc:	b	334e4 <GetDataSlab+0x10b20>
   334e0:	mov	r0, ip
   334e4:	ldr	r1, [sp, #20]
   334e8:	add	r0, r0, r5
   334ec:	add	r5, r0, r1
   334f0:	ldr	r0, [fp, #24]
   334f4:	add	r9, r7, r1, lsl #3
   334f8:	cmp	r0, #2
   334fc:	blt	3359c <GetDataSlab+0x10bd8>
   33500:	ldr	r1, [sp, #4]
   33504:	ldr	lr, [sp, #32]
   33508:	mov	r0, #0
   3350c:	ldr	r2, [sl, r0]
   33510:	ldr	r3, [sp, #44]	; 0x2c
   33514:	add	r2, r2, #1
   33518:	str	r2, [sl, r0]
   3351c:	ldr	r3, [r3, r0]
   33520:	sdiv	r7, r2, r3
   33524:	mls	r2, r7, r3, r2
   33528:	cmp	r2, #0
   3352c:	bne	335a4 <GetDataSlab+0x10be0>
   33530:	mov	r2, #0
   33534:	str	r2, [sl, r0]
   33538:	ldr	r2, [sp, #40]	; 0x28
   3353c:	ldr	r2, [r2, r0]
   33540:	sdiv	r3, r5, r2
   33544:	mls	r3, r3, r2, r5
   33548:	cmp	r3, #0
   3354c:	beq	3356c <GetDataSlab+0x10ba8>
   33550:	add	r7, sp, #64	; 0x40
   33554:	ldr	r6, [r4, r0]
   33558:	sub	r2, r2, r3
   3355c:	ldr	r7, [r7, r0]
   33560:	mla	r2, r6, r7, r2
   33564:	add	r5, r2, r5
   33568:	b	33588 <GetDataSlab+0x10bc4>
   3356c:	ldr	r2, [r4, r0]
   33570:	cmp	r2, #0
   33574:	beq	3358c <GetDataSlab+0x10bc8>
   33578:	add	r3, sp, #64	; 0x40
   3357c:	ldr	r3, [r3, r0]
   33580:	mla	r5, r3, r2, r5
   33584:	mul	r2, r3, r2
   33588:	add	r9, r9, r2, lsl #3
   3358c:	subs	r1, r1, #1
   33590:	add	r0, r0, #4
   33594:	bne	3350c <GetDataSlab+0x10b48>
   33598:	b	335b4 <GetDataSlab+0x10bf0>
   3359c:	ldr	lr, [sp, #32]
   335a0:	b	335b4 <GetDataSlab+0x10bf0>
   335a4:	ldr	r1, [sp]
   335a8:	ldr	r0, [r1, r0]
   335ac:	add	r9, r9, r0, lsl #3
   335b0:	add	r5, r0, r5
   335b4:	ldr	r0, [sp, #16]
   335b8:	ldr	r1, [sp, #28]
   335bc:	ldr	r2, [sp, #24]
   335c0:	add	r1, r1, r0
   335c4:	ldr	r0, [sp, #36]	; 0x24
   335c8:	add	r2, r2, lr
   335cc:	cmp	r2, r0
   335d0:	blt	33494 <GetDataSlab+0x10ad0>
   335d4:	mov	r0, #0
   335d8:	ldr	r1, [sp, #52]	; 0x34
   335dc:	cmp	r1, #13
   335e0:	bne	24900 <GetDataSlab+0x1f3c>
   335e4:	ldr	r0, [fp, #16]
   335e8:	ldr	sl, [fp, #20]
   335ec:	ldr	r9, [fp, #12]
   335f0:	mov	r7, #0
   335f4:	add	r8, sp, #64	; 0x40
   335f8:	sub	r4, fp, #72	; 0x48
   335fc:	ldr	ip, [r0]
   33600:	sub	r0, ip, #1
   33604:	str	r0, [fp, #-72]	; 0xffffffb8
   33608:	ldr	r0, [fp, #8]
   3360c:	ldr	r0, [r0]
   33610:	str	r0, [sp, #64]	; 0x40
   33614:	str	r0, [sp, #40]	; 0x28
   33618:	ldr	r0, [fp, #24]
   3361c:	ldr	r1, [sl]
   33620:	cmp	r0, #2
   33624:	str	r1, [sp, #44]	; 0x2c
   33628:	str	r1, [sp, #52]	; 0x34
   3362c:	blt	336c8 <GetDataSlab+0x10d04>
   33630:	ldr	r3, [sp, #40]	; 0x28
   33634:	ldr	r0, [sp, #44]	; 0x2c
   33638:	ldr	r2, [fp, #8]
   3363c:	mov	r1, #1
   33640:	mov	r7, #0
   33644:	mov	r6, r3
   33648:	str	r0, [sp, #52]	; 0x34
   3364c:	ldr	r0, [fp, #16]
   33650:	ldr	r5, [fp, #8]
   33654:	ldr	r0, [r0, r1, lsl #2]
   33658:	str	r3, [r8, r1, lsl #2]
   3365c:	sub	r0, r0, #1
   33660:	str	r0, [r4, r1, lsl #2]
   33664:	mov	r4, #0
   33668:	ldr	lr, [r5, r1, lsl #2]
   3366c:	mov	r5, lr
   33670:	mul	r3, r5, r3
   33674:	ldr	r5, [r2, -r4, lsl #2]
   33678:	add	r4, r4, #1
   3367c:	cmp	r1, r4
   33680:	mul	r0, r0, r5
   33684:	bne	33670 <GetDataSlab+0x10cac>
   33688:	sub	r4, fp, #72	; 0x48
   3368c:	str	r3, [r8, r1, lsl #2]
   33690:	ldr	r5, [sp, #52]	; 0x34
   33694:	add	r2, r2, #4
   33698:	str	r0, [r4, r1, lsl #2]
   3369c:	ldr	r0, [r9, r1, lsl #2]
   336a0:	mla	r7, r0, r6, r7
   336a4:	ldr	r0, [sl, r1, lsl #2]
   336a8:	add	r1, r1, #1
   336ac:	mov	r6, r3
   336b0:	mov	r3, lr
   336b4:	mul	r5, r0, r5
   336b8:	ldr	r0, [fp, #24]
   336bc:	str	r5, [sp, #52]	; 0x34
   336c0:	cmp	r1, r0
   336c4:	bne	3364c <GetDataSlab+0x10c88>
   336c8:	ldr	r0, [sp, #48]	; 0x30
   336cc:	cmp	ip, #1
   336d0:	add	r8, r0, r7, lsl #3
   336d4:	bne	3ca08 <GetDataSlab+0x1a044>
   336d8:	ldr	r0, [sp, #52]	; 0x34
   336dc:	ldr	r1, [sp, #56]	; 0x38
   336e0:	ldr	r2, [sp, #44]	; 0x2c
   336e4:	cmp	r0, #1
   336e8:	blt	248fc <GetDataSlab+0x1f38>
   336ec:	add	r0, sp, #104	; 0x68
   336f0:	str	r1, [sp, #56]	; 0x38
   336f4:	orr	r6, r0, #4
   336f8:	add	r0, sl, #4
   336fc:	str	r0, [sp, #28]
   33700:	add	r0, sp, #64	; 0x40
   33704:	orr	r0, r0, #4
   33708:	str	r0, [sp, #24]
   3370c:	ldr	r0, [fp, #24]
   33710:	sub	r0, r0, #1
   33714:	str	r0, [sp, #20]
   33718:	sub	r0, fp, #72	; 0x48
   3371c:	orr	r0, r0, #4
   33720:	str	r0, [sp, #16]
   33724:	lsl	r0, r2, #3
   33728:	str	r0, [sp, #36]	; 0x24
   3372c:	ldr	r0, [r9], #4
   33730:	str	r9, [sp, #60]	; 0x3c
   33734:	str	r0, [sp, #32]
   33738:	mov	r0, #0
   3373c:	str	r0, [sp, #48]	; 0x30
   33740:	cmp	r2, #1
   33744:	blt	33774 <GetDataSlab+0x10db0>
   33748:	ldr	r0, [sp, #32]
   3374c:	ldr	sl, [sp, #56]	; 0x38
   33750:	ldr	r9, [sp, #44]	; 0x2c
   33754:	add	r4, r8, r0, lsl #3
   33758:	ldrd	r0, [r4]
   3375c:	bl	4b3f0 <__aeabi_ul2d>
   33760:	strd	r0, [sl]
   33764:	add	r4, r4, #8
   33768:	add	sl, sl, #8
   3376c:	subs	r9, r9, #1
   33770:	bne	33758 <GetDataSlab+0x10d94>
   33774:	ldr	r0, [sp, #40]	; 0x28
   33778:	add	r8, r8, r0, lsl #3
   3377c:	add	r7, r7, r0
   33780:	ldr	r0, [fp, #24]
   33784:	cmp	r0, #2
   33788:	blt	33834 <GetDataSlab+0x10e70>
   3378c:	add	lr, sp, #20
   33790:	ldr	ip, [sp, #60]	; 0x3c
   33794:	mov	r0, #0
   33798:	mov	sl, #0
   3379c:	ldm	lr, {r1, r9, lr}
   337a0:	ldr	r2, [r6, r0]
   337a4:	add	r2, r2, #1
   337a8:	str	r2, [r6, r0]
   337ac:	ldr	r3, [lr, r0]
   337b0:	sdiv	r4, r2, r3
   337b4:	mls	r2, r4, r3, r2
   337b8:	cmp	r2, #0
   337bc:	bne	33824 <GetDataSlab+0x10e60>
   337c0:	ldr	r2, [r9, r0]
   337c4:	str	sl, [r6, r0]
   337c8:	sdiv	r3, r7, r2
   337cc:	mls	r3, r3, r2, r7
   337d0:	cmp	r3, #0
   337d4:	beq	337f4 <GetDataSlab+0x10e30>
   337d8:	add	r5, sp, #64	; 0x40
   337dc:	sub	r2, r2, r3
   337e0:	ldr	r4, [r5, r0]
   337e4:	ldr	r5, [ip, r0]
   337e8:	mla	r2, r5, r4, r2
   337ec:	add	r7, r2, r7
   337f0:	b	33810 <GetDataSlab+0x10e4c>
   337f4:	ldr	r2, [ip, r0]
   337f8:	cmp	r2, #0
   337fc:	beq	33814 <GetDataSlab+0x10e50>
   33800:	add	r3, sp, #64	; 0x40
   33804:	ldr	r3, [r3, r0]
   33808:	mla	r7, r3, r2, r7
   3380c:	mul	r2, r3, r2
   33810:	add	r8, r8, r2, lsl #3
   33814:	subs	r1, r1, #1
   33818:	add	r0, r0, #4
   3381c:	bne	337a0 <GetDataSlab+0x10ddc>
   33820:	b	33834 <GetDataSlab+0x10e70>
   33824:	ldr	r1, [sp, #16]
   33828:	ldr	r0, [r1, r0]
   3382c:	add	r8, r8, r0, lsl #3
   33830:	add	r7, r0, r7
   33834:	ldr	r0, [sp, #36]	; 0x24
   33838:	ldr	r1, [sp, #56]	; 0x38
   3383c:	ldr	r2, [sp, #44]	; 0x2c
   33840:	ldr	r3, [sp, #48]	; 0x30
   33844:	add	r1, r1, r0
   33848:	add	r3, r3, r2
   3384c:	mov	r0, #0
   33850:	str	r1, [sp, #56]	; 0x38
   33854:	ldr	r1, [sp, #52]	; 0x34
   33858:	str	r3, [sp, #48]	; 0x30
   3385c:	cmp	r3, r1
   33860:	blt	33740 <GetDataSlab+0x10d7c>
   33864:	b	24900 <GetDataSlab+0x1f3c>
   33868:	ldr	r0, [sp, #52]	; 0x34
   3386c:	ldr	r2, [fp, #12]
   33870:	ldr	r4, [sp, #44]	; 0x2c
   33874:	cmp	r0, #1
   33878:	blt	248fc <GetDataSlab+0x1f38>
   3387c:	ldr	r0, [sp, #40]	; 0x28
   33880:	add	ip, r2, #4
   33884:	mls	r0, r4, lr, r0
   33888:	str	r0, [sp, #40]	; 0x28
   3388c:	mul	r0, r4, lr
   33890:	str	r0, [sp, #32]
   33894:	add	r0, sp, #104	; 0x68
   33898:	orr	r6, r0, #4
   3389c:	ldr	r0, [fp, #20]
   338a0:	add	r1, r0, #4
   338a4:	add	r0, sp, #64	; 0x40
   338a8:	orr	r8, r0, #4
   338ac:	ldr	r0, [fp, #24]
   338b0:	sub	r0, r0, #1
   338b4:	str	r0, [sp, #28]
   338b8:	sub	r0, fp, #72	; 0x48
   338bc:	orr	r0, r0, #4
   338c0:	str	r0, [sp, #24]
   338c4:	lsl	r0, r4, #2
   338c8:	str	r0, [sp, #36]	; 0x24
   338cc:	mov	r0, #0
   338d0:	str	r0, [sp, #48]	; 0x30
   338d4:	ldr	r0, [fp, #12]
   338d8:	cmp	r4, #1
   338dc:	ldr	r0, [r0]
   338e0:	add	r7, r7, r0
   338e4:	blt	3391c <GetDataSlab+0x10f58>
   338e8:	mov	r2, r4
   338ec:	ldr	r4, [sp, #32]
   338f0:	add	r9, r4, r3
   338f4:	ldr	r4, [sp, #56]	; 0x38
   338f8:	mov	r3, r2
   338fc:	ldrb	r5, [r7], lr
   33900:	subs	r3, r3, #1
   33904:	vmov	s0, r5
   33908:	vcvt.f32.u32	s0, s0
   3390c:	vstmia	r4!, {s0}
   33910:	bne	338fc <GetDataSlab+0x10f38>
   33914:	add	r3, r9, r0
   33918:	b	33920 <GetDataSlab+0x10f5c>
   3391c:	add	r3, r0, r3
   33920:	ldr	r2, [sp, #40]	; 0x28
   33924:	sub	r0, r2, r0
   33928:	add	r7, r7, r0
   3392c:	add	r3, r3, r0
   33930:	ldr	r0, [fp, #24]
   33934:	cmp	r0, #2
   33938:	blt	339dc <GetDataSlab+0x11018>
   3393c:	ldr	r9, [sp, #28]
   33940:	mov	r0, #0
   33944:	ldr	r4, [r6, r0]
   33948:	add	r4, r4, #1
   3394c:	str	r4, [r6, r0]
   33950:	ldr	r5, [r1, r0]
   33954:	sdiv	r2, r4, r5
   33958:	mls	r2, r2, r5, r4
   3395c:	cmp	r2, #0
   33960:	bne	339cc <GetDataSlab+0x11008>
   33964:	ldr	r4, [r8, r0]
   33968:	mov	r2, #0
   3396c:	str	r2, [r6, r0]
   33970:	sdiv	r2, r3, r4
   33974:	mls	sl, r2, r4, r3
   33978:	cmp	sl, #0
   3397c:	beq	339a0 <GetDataSlab+0x10fdc>
   33980:	add	r2, sp, #64	; 0x40
   33984:	ldr	r5, [ip, r0]
   33988:	sub	r4, r4, sl
   3398c:	ldr	r2, [r2, r0]
   33990:	mla	r2, r5, r2, r4
   33994:	add	r3, r2, r3
   33998:	add	r7, r7, r2
   3399c:	b	339bc <GetDataSlab+0x10ff8>
   339a0:	ldr	r4, [ip, r0]
   339a4:	cmp	r4, #0
   339a8:	beq	339bc <GetDataSlab+0x10ff8>
   339ac:	add	r2, sp, #64	; 0x40
   339b0:	ldr	r2, [r2, r0]
   339b4:	mla	r3, r2, r4, r3
   339b8:	mla	r7, r2, r4, r7
   339bc:	subs	r9, r9, #1
   339c0:	add	r0, r0, #4
   339c4:	bne	33944 <GetDataSlab+0x10f80>
   339c8:	b	339dc <GetDataSlab+0x11018>
   339cc:	ldr	r2, [sp, #24]
   339d0:	ldr	r0, [r2, r0]
   339d4:	add	r7, r7, r0
   339d8:	add	r3, r0, r3
   339dc:	ldr	r0, [sp, #36]	; 0x24
   339e0:	ldr	r2, [sp, #56]	; 0x38
   339e4:	ldr	r4, [sp, #44]	; 0x2c
   339e8:	ldr	r5, [sp, #48]	; 0x30
   339ec:	add	r2, r2, r0
   339f0:	add	r5, r5, r4
   339f4:	mov	r0, #0
   339f8:	str	r2, [sp, #56]	; 0x38
   339fc:	ldr	r2, [sp, #52]	; 0x34
   33a00:	str	r5, [sp, #48]	; 0x30
   33a04:	cmp	r5, r2
   33a08:	blt	338d4 <GetDataSlab+0x10f10>
   33a0c:	b	24900 <GetDataSlab+0x1f3c>
   33a10:	ldr	r0, [sp, #52]	; 0x34
   33a14:	ldr	r1, [sp, #44]	; 0x2c
   33a18:	cmp	r0, #1
   33a1c:	blt	248fc <GetDataSlab+0x1f38>
   33a20:	ldr	r0, [sp, #40]	; 0x28
   33a24:	ldr	r3, [ip], #4
   33a28:	lsl	sl, lr, #1
   33a2c:	mls	r0, r1, lr, r0
   33a30:	str	r3, [sp, #48]	; 0x30
   33a34:	sub	r0, r0, r3
   33a38:	str	r0, [sp, #40]	; 0x28
   33a3c:	add	r0, sp, #104	; 0x68
   33a40:	orr	r6, r0, #4
   33a44:	ldr	r0, [fp, #20]
   33a48:	add	r5, r0, #4
   33a4c:	add	r0, sp, #64	; 0x40
   33a50:	orr	r8, r0, #4
   33a54:	ldr	r0, [fp, #24]
   33a58:	sub	r0, r0, #1
   33a5c:	str	r0, [sp, #28]
   33a60:	sub	r0, fp, #72	; 0x48
   33a64:	orr	r0, r0, #4
   33a68:	str	r0, [sp, #24]
   33a6c:	mla	r0, r1, lr, r3
   33a70:	str	r0, [sp, #32]
   33a74:	lsl	r0, r1, #2
   33a78:	str	r0, [sp, #36]	; 0x24
   33a7c:	ldr	r0, [sp, #56]	; 0x38
   33a80:	str	r0, [sp, #60]	; 0x3c
   33a84:	mov	r0, #0
   33a88:	str	r0, [sp, #56]	; 0x38
   33a8c:	ldr	r3, [sp, #48]	; 0x30
   33a90:	cmp	r1, #1
   33a94:	add	r0, r7, r3, lsl #1
   33a98:	blt	33ac0 <GetDataSlab+0x110fc>
   33a9c:	ldr	r3, [sp, #60]	; 0x3c
   33aa0:	mov	r7, r1
   33aa4:	ldrsh	r4, [r0], sl
   33aa8:	subs	r7, r7, #1
   33aac:	vmov	s0, r4
   33ab0:	vcvt.f32.s32	s0, s0
   33ab4:	vstmia	r3!, {s0}
   33ab8:	bne	33aa4 <GetDataSlab+0x110e0>
   33abc:	ldr	r3, [sp, #32]
   33ac0:	ldr	r1, [sp, #40]	; 0x28
   33ac4:	add	r7, r0, r1, lsl #1
   33ac8:	add	r0, r3, r2
   33acc:	add	r2, r0, r1
   33ad0:	ldr	r0, [fp, #24]
   33ad4:	cmp	r0, #2
   33ad8:	blt	33b7c <GetDataSlab+0x111b8>
   33adc:	ldr	lr, [sp, #28]
   33ae0:	mov	r0, #0
   33ae4:	ldr	r3, [r6, r0]
   33ae8:	add	r3, r3, #1
   33aec:	str	r3, [r6, r0]
   33af0:	ldr	r4, [r5, r0]
   33af4:	sdiv	r1, r3, r4
   33af8:	mls	r1, r1, r4, r3
   33afc:	cmp	r1, #0
   33b00:	bne	33b6c <GetDataSlab+0x111a8>
   33b04:	ldr	r3, [r8, r0]
   33b08:	mov	r1, #0
   33b0c:	str	r1, [r6, r0]
   33b10:	sdiv	r1, r2, r3
   33b14:	mls	r9, r1, r3, r2
   33b18:	cmp	r9, #0
   33b1c:	beq	33b3c <GetDataSlab+0x11178>
   33b20:	add	r1, sp, #64	; 0x40
   33b24:	ldr	r4, [ip, r0]
   33b28:	sub	r3, r3, r9
   33b2c:	ldr	r1, [r1, r0]
   33b30:	mla	r1, r4, r1, r3
   33b34:	add	r2, r1, r2
   33b38:	b	33b58 <GetDataSlab+0x11194>
   33b3c:	ldr	r3, [ip, r0]
   33b40:	cmp	r3, #0
   33b44:	beq	33b5c <GetDataSlab+0x11198>
   33b48:	add	r1, sp, #64	; 0x40
   33b4c:	ldr	r1, [r1, r0]
   33b50:	mla	r2, r1, r3, r2
   33b54:	mul	r1, r1, r3
   33b58:	add	r7, r7, r1, lsl #1
   33b5c:	subs	lr, lr, #1
   33b60:	add	r0, r0, #4
   33b64:	bne	33ae4 <GetDataSlab+0x11120>
   33b68:	b	33b7c <GetDataSlab+0x111b8>
   33b6c:	ldr	r1, [sp, #24]
   33b70:	ldr	r0, [r1, r0]
   33b74:	add	r7, r7, r0, lsl #1
   33b78:	add	r2, r0, r2
   33b7c:	ldr	r0, [sp, #36]	; 0x24
   33b80:	ldr	r1, [sp, #60]	; 0x3c
   33b84:	ldr	r4, [sp, #56]	; 0x38
   33b88:	ldr	r3, [sp, #52]	; 0x34
   33b8c:	add	r1, r1, r0
   33b90:	mov	r0, #0
   33b94:	str	r1, [sp, #60]	; 0x3c
   33b98:	ldr	r1, [sp, #44]	; 0x2c
   33b9c:	add	r4, r4, r1
   33ba0:	cmp	r4, r3
   33ba4:	str	r4, [sp, #56]	; 0x38
   33ba8:	blt	33a8c <GetDataSlab+0x110c8>
   33bac:	b	24900 <GetDataSlab+0x1f3c>
   33bb0:	ldr	r0, [sp, #52]	; 0x34
   33bb4:	ldr	r1, [sp, #44]	; 0x2c
   33bb8:	cmp	r0, #1
   33bbc:	blt	248fc <GetDataSlab+0x1f38>
   33bc0:	ldr	r0, [sp, #40]	; 0x28
   33bc4:	ldr	r3, [ip], #4
   33bc8:	lsl	sl, lr, #1
   33bcc:	mls	r0, r1, lr, r0
   33bd0:	str	r3, [sp, #48]	; 0x30
   33bd4:	sub	r0, r0, r3
   33bd8:	str	r0, [sp, #40]	; 0x28
   33bdc:	add	r0, sp, #104	; 0x68
   33be0:	orr	r6, r0, #4
   33be4:	ldr	r0, [fp, #20]
   33be8:	add	r5, r0, #4
   33bec:	add	r0, sp, #64	; 0x40
   33bf0:	orr	r8, r0, #4
   33bf4:	ldr	r0, [fp, #24]
   33bf8:	sub	r0, r0, #1
   33bfc:	str	r0, [sp, #28]
   33c00:	sub	r0, fp, #72	; 0x48
   33c04:	orr	r0, r0, #4
   33c08:	str	r0, [sp, #24]
   33c0c:	mla	r0, r1, lr, r3
   33c10:	str	r0, [sp, #32]
   33c14:	lsl	r0, r1, #2
   33c18:	str	r0, [sp, #36]	; 0x24
   33c1c:	ldr	r0, [sp, #56]	; 0x38
   33c20:	str	r0, [sp, #60]	; 0x3c
   33c24:	mov	r0, #0
   33c28:	str	r0, [sp, #56]	; 0x38
   33c2c:	ldr	r3, [sp, #48]	; 0x30
   33c30:	cmp	r1, #1
   33c34:	add	r0, r7, r3, lsl #1
   33c38:	blt	33c60 <GetDataSlab+0x1129c>
   33c3c:	ldr	r3, [sp, #60]	; 0x3c
   33c40:	mov	r7, r1
   33c44:	ldrh	r4, [r0], sl
   33c48:	subs	r7, r7, #1
   33c4c:	vmov	s0, r4
   33c50:	vcvt.f32.u32	s0, s0
   33c54:	vstmia	r3!, {s0}
   33c58:	bne	33c44 <GetDataSlab+0x11280>
   33c5c:	ldr	r3, [sp, #32]
   33c60:	ldr	r1, [sp, #40]	; 0x28
   33c64:	add	r7, r0, r1, lsl #1
   33c68:	add	r0, r3, r2
   33c6c:	add	r2, r0, r1
   33c70:	ldr	r0, [fp, #24]
   33c74:	cmp	r0, #2
   33c78:	blt	33d1c <GetDataSlab+0x11358>
   33c7c:	ldr	lr, [sp, #28]
   33c80:	mov	r0, #0
   33c84:	ldr	r3, [r6, r0]
   33c88:	add	r3, r3, #1
   33c8c:	str	r3, [r6, r0]
   33c90:	ldr	r4, [r5, r0]
   33c94:	sdiv	r1, r3, r4
   33c98:	mls	r1, r1, r4, r3
   33c9c:	cmp	r1, #0
   33ca0:	bne	33d0c <GetDataSlab+0x11348>
   33ca4:	ldr	r3, [r8, r0]
   33ca8:	mov	r1, #0
   33cac:	str	r1, [r6, r0]
   33cb0:	sdiv	r1, r2, r3
   33cb4:	mls	r9, r1, r3, r2
   33cb8:	cmp	r9, #0
   33cbc:	beq	33cdc <GetDataSlab+0x11318>
   33cc0:	add	r1, sp, #64	; 0x40
   33cc4:	ldr	r4, [ip, r0]
   33cc8:	sub	r3, r3, r9
   33ccc:	ldr	r1, [r1, r0]
   33cd0:	mla	r1, r4, r1, r3
   33cd4:	add	r2, r1, r2
   33cd8:	b	33cf8 <GetDataSlab+0x11334>
   33cdc:	ldr	r3, [ip, r0]
   33ce0:	cmp	r3, #0
   33ce4:	beq	33cfc <GetDataSlab+0x11338>
   33ce8:	add	r1, sp, #64	; 0x40
   33cec:	ldr	r1, [r1, r0]
   33cf0:	mla	r2, r1, r3, r2
   33cf4:	mul	r1, r1, r3
   33cf8:	add	r7, r7, r1, lsl #1
   33cfc:	subs	lr, lr, #1
   33d00:	add	r0, r0, #4
   33d04:	bne	33c84 <GetDataSlab+0x112c0>
   33d08:	b	33d1c <GetDataSlab+0x11358>
   33d0c:	ldr	r1, [sp, #24]
   33d10:	ldr	r0, [r1, r0]
   33d14:	add	r7, r7, r0, lsl #1
   33d18:	add	r2, r0, r2
   33d1c:	ldr	r0, [sp, #36]	; 0x24
   33d20:	ldr	r1, [sp, #60]	; 0x3c
   33d24:	ldr	r4, [sp, #56]	; 0x38
   33d28:	ldr	r3, [sp, #52]	; 0x34
   33d2c:	add	r1, r1, r0
   33d30:	mov	r0, #0
   33d34:	str	r1, [sp, #60]	; 0x3c
   33d38:	ldr	r1, [sp, #44]	; 0x2c
   33d3c:	add	r4, r4, r1
   33d40:	cmp	r4, r3
   33d44:	str	r4, [sp, #56]	; 0x38
   33d48:	blt	33c2c <GetDataSlab+0x11268>
   33d4c:	b	24900 <GetDataSlab+0x1f3c>
   33d50:	ldr	r0, [sp, #52]	; 0x34
   33d54:	cmp	r0, #1
   33d58:	blt	248fc <GetDataSlab+0x1f38>
   33d5c:	ldr	r1, [sp, #44]	; 0x2c
   33d60:	ldr	r0, [sp, #40]	; 0x28
   33d64:	add	r2, sp, #64	; 0x40
   33d68:	lsl	sl, r9, #2
   33d6c:	str	r4, [sp, #56]	; 0x38
   33d70:	mls	r0, r1, r9, r0
   33d74:	str	r0, [sp, #40]	; 0x28
   33d78:	add	r0, sp, #104	; 0x68
   33d7c:	orr	r5, r0, #4
   33d80:	ldr	r0, [fp, #20]
   33d84:	add	r6, r0, #4
   33d88:	mov	r0, ip
   33d8c:	orr	ip, r2, #4
   33d90:	add	r8, r0, #4
   33d94:	ldr	r0, [fp, #24]
   33d98:	sub	r0, r0, #1
   33d9c:	str	r0, [sp, #28]
   33da0:	sub	r0, fp, #72	; 0x48
   33da4:	orr	r0, r0, #4
   33da8:	str	r0, [sp, #24]
   33dac:	mul	r0, r1, r9
   33db0:	str	r0, [sp, #32]
   33db4:	lsl	r0, r1, #2
   33db8:	str	r0, [sp, #36]	; 0x24
   33dbc:	mov	r0, #0
   33dc0:	str	r0, [sp, #48]	; 0x30
   33dc4:	ldr	r0, [fp, #12]
   33dc8:	cmp	r1, #1
   33dcc:	ldr	r0, [r0]
   33dd0:	add	r7, r7, r0, lsl #2
   33dd4:	blt	33e08 <GetDataSlab+0x11444>
   33dd8:	ldr	r2, [sp, #32]
   33ddc:	ldr	r4, [sp, #56]	; 0x38
   33de0:	add	lr, r2, r3
   33de4:	mov	r3, r1
   33de8:	ldr	r1, [r7], sl
   33dec:	subs	r3, r3, #1
   33df0:	vmov	s0, r1
   33df4:	vcvt.f32.s32	s0, s0
   33df8:	vstmia	r4!, {s0}
   33dfc:	bne	33de8 <GetDataSlab+0x11424>
   33e00:	add	r3, lr, r0
   33e04:	b	33e0c <GetDataSlab+0x11448>
   33e08:	add	r3, r0, r3
   33e0c:	ldr	r1, [sp, #40]	; 0x28
   33e10:	sub	r0, r1, r0
   33e14:	add	r7, r7, r0, lsl #2
   33e18:	add	r3, r3, r0
   33e1c:	ldr	r0, [fp, #24]
   33e20:	cmp	r0, #2
   33e24:	blt	33ec8 <GetDataSlab+0x11504>
   33e28:	ldr	lr, [sp, #28]
   33e2c:	mov	r0, #0
   33e30:	ldr	r1, [r5, r0]
   33e34:	add	r1, r1, #1
   33e38:	str	r1, [r5, r0]
   33e3c:	ldr	r4, [r6, r0]
   33e40:	sdiv	r2, r1, r4
   33e44:	mls	r1, r2, r4, r1
   33e48:	cmp	r1, #0
   33e4c:	bne	33eb8 <GetDataSlab+0x114f4>
   33e50:	ldr	r4, [ip, r0]
   33e54:	mov	r1, #0
   33e58:	str	r1, [r5, r0]
   33e5c:	sdiv	r1, r3, r4
   33e60:	mls	r9, r1, r4, r3
   33e64:	cmp	r9, #0
   33e68:	beq	33e88 <GetDataSlab+0x114c4>
   33e6c:	add	r1, sp, #64	; 0x40
   33e70:	ldr	r2, [r8, r0]
   33e74:	sub	r4, r4, r9
   33e78:	ldr	r1, [r1, r0]
   33e7c:	mla	r1, r2, r1, r4
   33e80:	add	r3, r1, r3
   33e84:	b	33ea4 <GetDataSlab+0x114e0>
   33e88:	ldr	r4, [r8, r0]
   33e8c:	cmp	r4, #0
   33e90:	beq	33ea8 <GetDataSlab+0x114e4>
   33e94:	add	r1, sp, #64	; 0x40
   33e98:	ldr	r1, [r1, r0]
   33e9c:	mla	r3, r1, r4, r3
   33ea0:	mul	r1, r1, r4
   33ea4:	add	r7, r7, r1, lsl #2
   33ea8:	subs	lr, lr, #1
   33eac:	add	r0, r0, #4
   33eb0:	bne	33e30 <GetDataSlab+0x1146c>
   33eb4:	b	33ec8 <GetDataSlab+0x11504>
   33eb8:	ldr	r1, [sp, #24]
   33ebc:	ldr	r0, [r1, r0]
   33ec0:	add	r7, r7, r0, lsl #2
   33ec4:	add	r3, r0, r3
   33ec8:	ldr	r0, [sp, #36]	; 0x24
   33ecc:	ldr	r1, [sp, #56]	; 0x38
   33ed0:	ldr	r4, [sp, #48]	; 0x30
   33ed4:	ldr	r2, [sp, #52]	; 0x34
   33ed8:	add	r1, r1, r0
   33edc:	mov	r0, #0
   33ee0:	str	r1, [sp, #56]	; 0x38
   33ee4:	ldr	r1, [sp, #44]	; 0x2c
   33ee8:	add	r4, r4, r1
   33eec:	cmp	r4, r2
   33ef0:	str	r4, [sp, #48]	; 0x30
   33ef4:	blt	33dc4 <GetDataSlab+0x11400>
   33ef8:	b	24900 <GetDataSlab+0x1f3c>
   33efc:	ldr	r0, [sp, #52]	; 0x34
   33f00:	cmp	r0, #1
   33f04:	blt	248fc <GetDataSlab+0x1f38>
   33f08:	ldr	r1, [sp, #44]	; 0x2c
   33f0c:	ldr	r0, [sp, #40]	; 0x28
   33f10:	add	r2, sp, #64	; 0x40
   33f14:	lsl	sl, r9, #2
   33f18:	str	r4, [sp, #56]	; 0x38
   33f1c:	mls	r0, r1, r9, r0
   33f20:	str	r0, [sp, #40]	; 0x28
   33f24:	add	r0, sp, #104	; 0x68
   33f28:	orr	r5, r0, #4
   33f2c:	ldr	r0, [fp, #20]
   33f30:	add	r6, r0, #4
   33f34:	mov	r0, ip
   33f38:	orr	ip, r2, #4
   33f3c:	add	r8, r0, #4
   33f40:	ldr	r0, [fp, #24]
   33f44:	sub	r0, r0, #1
   33f48:	str	r0, [sp, #28]
   33f4c:	sub	r0, fp, #72	; 0x48
   33f50:	orr	r0, r0, #4
   33f54:	str	r0, [sp, #24]
   33f58:	mul	r0, r1, r9
   33f5c:	str	r0, [sp, #32]
   33f60:	lsl	r0, r1, #2
   33f64:	str	r0, [sp, #36]	; 0x24
   33f68:	mov	r0, #0
   33f6c:	str	r0, [sp, #48]	; 0x30
   33f70:	ldr	r0, [fp, #12]
   33f74:	cmp	r1, #1
   33f78:	ldr	r0, [r0]
   33f7c:	add	r7, r7, r0, lsl #2
   33f80:	blt	33fb4 <GetDataSlab+0x115f0>
   33f84:	ldr	r2, [sp, #32]
   33f88:	ldr	r4, [sp, #56]	; 0x38
   33f8c:	add	lr, r2, r3
   33f90:	mov	r3, r1
   33f94:	ldr	r1, [r7], sl
   33f98:	subs	r3, r3, #1
   33f9c:	vmov	s0, r1
   33fa0:	vcvt.f32.u32	s0, s0
   33fa4:	vstmia	r4!, {s0}
   33fa8:	bne	33f94 <GetDataSlab+0x115d0>
   33fac:	add	r3, lr, r0
   33fb0:	b	33fb8 <GetDataSlab+0x115f4>
   33fb4:	add	r3, r0, r3
   33fb8:	ldr	r1, [sp, #40]	; 0x28
   33fbc:	sub	r0, r1, r0
   33fc0:	add	r7, r7, r0, lsl #2
   33fc4:	add	r3, r3, r0
   33fc8:	ldr	r0, [fp, #24]
   33fcc:	cmp	r0, #2
   33fd0:	blt	34074 <GetDataSlab+0x116b0>
   33fd4:	ldr	lr, [sp, #28]
   33fd8:	mov	r0, #0
   33fdc:	ldr	r1, [r5, r0]
   33fe0:	add	r1, r1, #1
   33fe4:	str	r1, [r5, r0]
   33fe8:	ldr	r4, [r6, r0]
   33fec:	sdiv	r2, r1, r4
   33ff0:	mls	r1, r2, r4, r1
   33ff4:	cmp	r1, #0
   33ff8:	bne	34064 <GetDataSlab+0x116a0>
   33ffc:	ldr	r4, [ip, r0]
   34000:	mov	r1, #0
   34004:	str	r1, [r5, r0]
   34008:	sdiv	r1, r3, r4
   3400c:	mls	r9, r1, r4, r3
   34010:	cmp	r9, #0
   34014:	beq	34034 <GetDataSlab+0x11670>
   34018:	add	r1, sp, #64	; 0x40
   3401c:	ldr	r2, [r8, r0]
   34020:	sub	r4, r4, r9
   34024:	ldr	r1, [r1, r0]
   34028:	mla	r1, r2, r1, r4
   3402c:	add	r3, r1, r3
   34030:	b	34050 <GetDataSlab+0x1168c>
   34034:	ldr	r4, [r8, r0]
   34038:	cmp	r4, #0
   3403c:	beq	34054 <GetDataSlab+0x11690>
   34040:	add	r1, sp, #64	; 0x40
   34044:	ldr	r1, [r1, r0]
   34048:	mla	r3, r1, r4, r3
   3404c:	mul	r1, r1, r4
   34050:	add	r7, r7, r1, lsl #2
   34054:	subs	lr, lr, #1
   34058:	add	r0, r0, #4
   3405c:	bne	33fdc <GetDataSlab+0x11618>
   34060:	b	34074 <GetDataSlab+0x116b0>
   34064:	ldr	r1, [sp, #24]
   34068:	ldr	r0, [r1, r0]
   3406c:	add	r7, r7, r0, lsl #2
   34070:	add	r3, r0, r3
   34074:	ldr	r0, [sp, #36]	; 0x24
   34078:	ldr	r1, [sp, #56]	; 0x38
   3407c:	ldr	r4, [sp, #48]	; 0x30
   34080:	ldr	r2, [sp, #52]	; 0x34
   34084:	add	r1, r1, r0
   34088:	mov	r0, #0
   3408c:	str	r1, [sp, #56]	; 0x38
   34090:	ldr	r1, [sp, #44]	; 0x2c
   34094:	add	r4, r4, r1
   34098:	cmp	r4, r2
   3409c:	str	r4, [sp, #48]	; 0x30
   340a0:	blt	33f70 <GetDataSlab+0x115ac>
   340a4:	b	24900 <GetDataSlab+0x1f3c>
   340a8:	ldr	r0, [sp, #52]	; 0x34
   340ac:	ldr	r1, [sp, #44]	; 0x2c
   340b0:	cmp	r0, #1
   340b4:	blt	248fc <GetDataSlab+0x1f38>
   340b8:	ldr	r0, [sp, #40]	; 0x28
   340bc:	ldr	r3, [ip], #4
   340c0:	lsl	sl, lr, #2
   340c4:	mls	r0, r1, lr, r0
   340c8:	str	r3, [sp, #48]	; 0x30
   340cc:	sub	r0, r0, r3
   340d0:	str	r0, [sp, #40]	; 0x28
   340d4:	add	r0, sp, #104	; 0x68
   340d8:	orr	r6, r0, #4
   340dc:	ldr	r0, [fp, #20]
   340e0:	add	r5, r0, #4
   340e4:	add	r0, sp, #64	; 0x40
   340e8:	orr	r8, r0, #4
   340ec:	ldr	r0, [fp, #24]
   340f0:	sub	r0, r0, #1
   340f4:	str	r0, [sp, #28]
   340f8:	sub	r0, fp, #72	; 0x48
   340fc:	orr	r0, r0, #4
   34100:	str	r0, [sp, #24]
   34104:	mla	r0, r1, lr, r3
   34108:	str	r0, [sp, #32]
   3410c:	lsl	r0, r1, #2
   34110:	str	r0, [sp, #36]	; 0x24
   34114:	ldr	r0, [sp, #56]	; 0x38
   34118:	str	r0, [sp, #60]	; 0x3c
   3411c:	mov	r0, #0
   34120:	str	r0, [sp, #56]	; 0x38
   34124:	ldr	r3, [sp, #48]	; 0x30
   34128:	cmp	r1, #1
   3412c:	add	r0, r7, r3, lsl #2
   34130:	blt	34150 <GetDataSlab+0x1178c>
   34134:	ldr	r3, [sp, #60]	; 0x3c
   34138:	mov	r7, r1
   3413c:	ldr	r4, [r0], sl
   34140:	subs	r7, r7, #1
   34144:	str	r4, [r3], #4
   34148:	bne	3413c <GetDataSlab+0x11778>
   3414c:	ldr	r3, [sp, #32]
   34150:	ldr	r1, [sp, #40]	; 0x28
   34154:	add	r7, r0, r1, lsl #2
   34158:	add	r0, r3, r2
   3415c:	add	r2, r0, r1
   34160:	ldr	r0, [fp, #24]
   34164:	cmp	r0, #2
   34168:	blt	3420c <GetDataSlab+0x11848>
   3416c:	ldr	lr, [sp, #28]
   34170:	mov	r0, #0
   34174:	ldr	r3, [r6, r0]
   34178:	add	r3, r3, #1
   3417c:	str	r3, [r6, r0]
   34180:	ldr	r4, [r5, r0]
   34184:	sdiv	r1, r3, r4
   34188:	mls	r1, r1, r4, r3
   3418c:	cmp	r1, #0
   34190:	bne	341fc <GetDataSlab+0x11838>
   34194:	ldr	r3, [r8, r0]
   34198:	mov	r1, #0
   3419c:	str	r1, [r6, r0]
   341a0:	sdiv	r1, r2, r3
   341a4:	mls	r9, r1, r3, r2
   341a8:	cmp	r9, #0
   341ac:	beq	341cc <GetDataSlab+0x11808>
   341b0:	add	r1, sp, #64	; 0x40
   341b4:	ldr	r4, [ip, r0]
   341b8:	sub	r3, r3, r9
   341bc:	ldr	r1, [r1, r0]
   341c0:	mla	r1, r4, r1, r3
   341c4:	add	r2, r1, r2
   341c8:	b	341e8 <GetDataSlab+0x11824>
   341cc:	ldr	r3, [ip, r0]
   341d0:	cmp	r3, #0
   341d4:	beq	341ec <GetDataSlab+0x11828>
   341d8:	add	r1, sp, #64	; 0x40
   341dc:	ldr	r1, [r1, r0]
   341e0:	mla	r2, r1, r3, r2
   341e4:	mul	r1, r1, r3
   341e8:	add	r7, r7, r1, lsl #2
   341ec:	subs	lr, lr, #1
   341f0:	add	r0, r0, #4
   341f4:	bne	34174 <GetDataSlab+0x117b0>
   341f8:	b	3420c <GetDataSlab+0x11848>
   341fc:	ldr	r1, [sp, #24]
   34200:	ldr	r0, [r1, r0]
   34204:	add	r7, r7, r0, lsl #2
   34208:	add	r2, r0, r2
   3420c:	ldr	r0, [sp, #36]	; 0x24
   34210:	ldr	r1, [sp, #60]	; 0x3c
   34214:	ldr	r4, [sp, #56]	; 0x38
   34218:	ldr	r3, [sp, #52]	; 0x34
   3421c:	add	r1, r1, r0
   34220:	mov	r0, #0
   34224:	str	r1, [sp, #60]	; 0x3c
   34228:	ldr	r1, [sp, #44]	; 0x2c
   3422c:	add	r4, r4, r1
   34230:	cmp	r4, r3
   34234:	str	r4, [sp, #56]	; 0x38
   34238:	blt	34124 <GetDataSlab+0x11760>
   3423c:	b	24900 <GetDataSlab+0x1f3c>
   34240:	ldr	r0, [sp, #52]	; 0x34
   34244:	ldr	r1, [sp, #44]	; 0x2c
   34248:	cmp	r0, #1
   3424c:	blt	248fc <GetDataSlab+0x1f38>
   34250:	ldr	r0, [sp, #40]	; 0x28
   34254:	ldr	r3, [ip], #4
   34258:	lsl	sl, lr, #3
   3425c:	mls	r0, r1, lr, r0
   34260:	str	r3, [sp, #48]	; 0x30
   34264:	sub	r0, r0, r3
   34268:	str	r0, [sp, #40]	; 0x28
   3426c:	add	r0, sp, #104	; 0x68
   34270:	orr	r6, r0, #4
   34274:	ldr	r0, [fp, #20]
   34278:	add	r5, r0, #4
   3427c:	add	r0, sp, #64	; 0x40
   34280:	orr	r8, r0, #4
   34284:	ldr	r0, [fp, #24]
   34288:	sub	r0, r0, #1
   3428c:	str	r0, [sp, #28]
   34290:	sub	r0, fp, #72	; 0x48
   34294:	orr	r0, r0, #4
   34298:	str	r0, [sp, #24]
   3429c:	mla	r0, r1, lr, r3
   342a0:	str	r0, [sp, #32]
   342a4:	lsl	r0, r1, #2
   342a8:	str	r0, [sp, #36]	; 0x24
   342ac:	ldr	r0, [sp, #56]	; 0x38
   342b0:	str	r0, [sp, #60]	; 0x3c
   342b4:	mov	r0, #0
   342b8:	str	r0, [sp, #56]	; 0x38
   342bc:	ldr	r3, [sp, #48]	; 0x30
   342c0:	cmp	r1, #1
   342c4:	add	r0, r7, r3, lsl #3
   342c8:	blt	342f4 <GetDataSlab+0x11930>
   342cc:	ldr	r3, [sp, #60]	; 0x3c
   342d0:	mov	r7, r1
   342d4:	vldr	d16, [r0]
   342d8:	add	r0, r0, sl
   342dc:	subs	r7, r7, #1
   342e0:	vcvt.f32.f64	s0, d16
   342e4:	vstr	s0, [r3]
   342e8:	add	r3, r3, #4
   342ec:	bne	342d4 <GetDataSlab+0x11910>
   342f0:	ldr	r3, [sp, #32]
   342f4:	ldr	r1, [sp, #40]	; 0x28
   342f8:	add	r7, r0, r1, lsl #3
   342fc:	add	r0, r3, r2
   34300:	add	r2, r0, r1
   34304:	ldr	r0, [fp, #24]
   34308:	cmp	r0, #2
   3430c:	blt	343b0 <GetDataSlab+0x119ec>
   34310:	ldr	lr, [sp, #28]
   34314:	mov	r0, #0
   34318:	ldr	r3, [r6, r0]
   3431c:	add	r3, r3, #1
   34320:	str	r3, [r6, r0]
   34324:	ldr	r4, [r5, r0]
   34328:	sdiv	r1, r3, r4
   3432c:	mls	r1, r1, r4, r3
   34330:	cmp	r1, #0
   34334:	bne	343a0 <GetDataSlab+0x119dc>
   34338:	ldr	r3, [r8, r0]
   3433c:	mov	r1, #0
   34340:	str	r1, [r6, r0]
   34344:	sdiv	r1, r2, r3
   34348:	mls	r9, r1, r3, r2
   3434c:	cmp	r9, #0
   34350:	beq	34370 <GetDataSlab+0x119ac>
   34354:	add	r1, sp, #64	; 0x40
   34358:	ldr	r4, [ip, r0]
   3435c:	sub	r3, r3, r9
   34360:	ldr	r1, [r1, r0]
   34364:	mla	r1, r4, r1, r3
   34368:	add	r2, r1, r2
   3436c:	b	3438c <GetDataSlab+0x119c8>
   34370:	ldr	r3, [ip, r0]
   34374:	cmp	r3, #0
   34378:	beq	34390 <GetDataSlab+0x119cc>
   3437c:	add	r1, sp, #64	; 0x40
   34380:	ldr	r1, [r1, r0]
   34384:	mla	r2, r1, r3, r2
   34388:	mul	r1, r1, r3
   3438c:	add	r7, r7, r1, lsl #3
   34390:	subs	lr, lr, #1
   34394:	add	r0, r0, #4
   34398:	bne	34318 <GetDataSlab+0x11954>
   3439c:	b	343b0 <GetDataSlab+0x119ec>
   343a0:	ldr	r1, [sp, #24]
   343a4:	ldr	r0, [r1, r0]
   343a8:	add	r7, r7, r0, lsl #3
   343ac:	add	r2, r0, r2
   343b0:	ldr	r0, [sp, #36]	; 0x24
   343b4:	ldr	r1, [sp, #60]	; 0x3c
   343b8:	ldr	r4, [sp, #56]	; 0x38
   343bc:	ldr	r3, [sp, #52]	; 0x34
   343c0:	add	r1, r1, r0
   343c4:	mov	r0, #0
   343c8:	str	r1, [sp, #60]	; 0x3c
   343cc:	ldr	r1, [sp, #44]	; 0x2c
   343d0:	add	r4, r4, r1
   343d4:	cmp	r4, r3
   343d8:	str	r4, [sp, #56]	; 0x38
   343dc:	blt	342bc <GetDataSlab+0x118f8>
   343e0:	b	24900 <GetDataSlab+0x1f3c>
   343e4:	ldr	r0, [sp, #36]	; 0x24
   343e8:	ldr	r4, [sp, #32]
   343ec:	cmp	r0, #1
   343f0:	blt	345ac <GetDataSlab+0x11be8>
   343f4:	ldr	r2, [fp, #12]
   343f8:	ldr	r0, [sp, #24]
   343fc:	add	r3, sp, #104	; 0x68
   34400:	mov	r7, r1
   34404:	lsl	r8, ip, #3
   34408:	mov	r1, #0
   3440c:	orr	sl, r3, #4
   34410:	mov	lr, r2
   34414:	mls	r0, r4, ip, r0
   34418:	ldr	r6, [lr], #4
   3441c:	sub	r0, r0, r6
   34420:	str	r6, [sp, #12]
   34424:	str	r0, [sp, #20]
   34428:	ldr	r0, [fp, #20]
   3442c:	add	r0, r0, #4
   34430:	str	r0, [sp, #44]	; 0x2c
   34434:	add	r0, sp, #64	; 0x40
   34438:	orr	r0, r0, #4
   3443c:	str	r0, [sp, #40]	; 0x28
   34440:	ldr	r0, [fp, #24]
   34444:	sub	r0, r0, #1
   34448:	str	r0, [sp, #4]
   3444c:	sub	r0, fp, #72	; 0x48
   34450:	orr	r0, r0, #4
   34454:	str	r0, [sp]
   34458:	mla	r0, r4, ip, r6
   3445c:	mov	ip, r6
   34460:	str	r0, [sp, #8]
   34464:	lsl	r0, r4, #2
   34468:	str	r0, [sp, #16]
   3446c:	add	r0, r9, ip, lsl #3
   34470:	cmp	r4, #1
   34474:	str	r1, [sp, #24]
   34478:	str	r7, [sp, #28]
   3447c:	blt	344b4 <GetDataSlab+0x11af0>
   34480:	mov	r9, lr
   34484:	mov	r6, r4
   34488:	add	r4, r0, r8
   3448c:	ldrd	r0, [r0]
   34490:	bl	4b638 <__aeabi_l2f>
   34494:	str	r0, [r7], #4
   34498:	subs	r6, r6, #1
   3449c:	mov	r0, r4
   344a0:	bne	34488 <GetDataSlab+0x11ac4>
   344a4:	ldr	r1, [sp, #8]
   344a8:	ldr	ip, [sp, #12]
   344ac:	mov	lr, r9
   344b0:	b	344bc <GetDataSlab+0x11af8>
   344b4:	mov	r1, ip
   344b8:	mov	r4, r0
   344bc:	ldr	r2, [sp, #20]
   344c0:	add	r0, r1, r5
   344c4:	add	r5, r0, r2
   344c8:	ldr	r0, [fp, #24]
   344cc:	add	r9, r4, r2, lsl #3
   344d0:	cmp	r0, #2
   344d4:	blt	34574 <GetDataSlab+0x11bb0>
   344d8:	ldr	r1, [sp, #4]
   344dc:	ldr	r4, [sp, #32]
   344e0:	mov	r0, #0
   344e4:	ldr	r2, [sl, r0]
   344e8:	ldr	r3, [sp, #44]	; 0x2c
   344ec:	add	r2, r2, #1
   344f0:	str	r2, [sl, r0]
   344f4:	ldr	r3, [r3, r0]
   344f8:	sdiv	r7, r2, r3
   344fc:	mls	r2, r7, r3, r2
   34500:	cmp	r2, #0
   34504:	bne	3457c <GetDataSlab+0x11bb8>
   34508:	mov	r2, #0
   3450c:	str	r2, [sl, r0]
   34510:	ldr	r2, [sp, #40]	; 0x28
   34514:	ldr	r2, [r2, r0]
   34518:	sdiv	r3, r5, r2
   3451c:	mls	r3, r3, r2, r5
   34520:	cmp	r3, #0
   34524:	beq	34544 <GetDataSlab+0x11b80>
   34528:	add	r7, sp, #64	; 0x40
   3452c:	ldr	r6, [lr, r0]
   34530:	sub	r2, r2, r3
   34534:	ldr	r7, [r7, r0]
   34538:	mla	r2, r6, r7, r2
   3453c:	add	r5, r2, r5
   34540:	b	34560 <GetDataSlab+0x11b9c>
   34544:	ldr	r2, [lr, r0]
   34548:	cmp	r2, #0
   3454c:	beq	34564 <GetDataSlab+0x11ba0>
   34550:	add	r3, sp, #64	; 0x40
   34554:	ldr	r3, [r3, r0]
   34558:	mla	r5, r3, r2, r5
   3455c:	mul	r2, r3, r2
   34560:	add	r9, r9, r2, lsl #3
   34564:	subs	r1, r1, #1
   34568:	add	r0, r0, #4
   3456c:	bne	344e4 <GetDataSlab+0x11b20>
   34570:	b	3458c <GetDataSlab+0x11bc8>
   34574:	ldr	r4, [sp, #32]
   34578:	b	3458c <GetDataSlab+0x11bc8>
   3457c:	ldr	r1, [sp]
   34580:	ldr	r0, [r1, r0]
   34584:	add	r9, r9, r0, lsl #3
   34588:	add	r5, r0, r5
   3458c:	ldr	r0, [sp, #16]
   34590:	ldr	r7, [sp, #28]
   34594:	ldr	r1, [sp, #24]
   34598:	add	r7, r7, r0
   3459c:	ldr	r0, [sp, #36]	; 0x24
   345a0:	add	r1, r1, r4
   345a4:	cmp	r1, r0
   345a8:	blt	3446c <GetDataSlab+0x11aa8>
   345ac:	mov	r0, #0
   345b0:	ldr	r1, [sp, #52]	; 0x34
   345b4:	cmp	r1, #13
   345b8:	bne	24900 <GetDataSlab+0x1f3c>
   345bc:	ldr	r0, [fp, #16]
   345c0:	ldr	sl, [fp, #20]
   345c4:	ldr	r9, [fp, #12]
   345c8:	mov	r7, #0
   345cc:	add	r8, sp, #64	; 0x40
   345d0:	sub	r4, fp, #72	; 0x48
   345d4:	ldr	ip, [r0]
   345d8:	sub	r0, ip, #1
   345dc:	str	r0, [fp, #-72]	; 0xffffffb8
   345e0:	ldr	r0, [fp, #8]
   345e4:	ldr	r0, [r0]
   345e8:	str	r0, [sp, #64]	; 0x40
   345ec:	str	r0, [sp, #40]	; 0x28
   345f0:	ldr	r0, [fp, #24]
   345f4:	ldr	r1, [sl]
   345f8:	cmp	r0, #2
   345fc:	str	r1, [sp, #44]	; 0x2c
   34600:	str	r1, [sp, #52]	; 0x34
   34604:	blt	346a0 <GetDataSlab+0x11cdc>
   34608:	ldr	r3, [sp, #40]	; 0x28
   3460c:	ldr	r0, [sp, #44]	; 0x2c
   34610:	ldr	r2, [fp, #8]
   34614:	mov	r1, #1
   34618:	mov	r7, #0
   3461c:	mov	r6, r3
   34620:	str	r0, [sp, #52]	; 0x34
   34624:	ldr	r0, [fp, #16]
   34628:	ldr	r5, [fp, #8]
   3462c:	ldr	r0, [r0, r1, lsl #2]
   34630:	str	r3, [r8, r1, lsl #2]
   34634:	sub	r0, r0, #1
   34638:	str	r0, [r4, r1, lsl #2]
   3463c:	mov	r4, #0
   34640:	ldr	lr, [r5, r1, lsl #2]
   34644:	mov	r5, lr
   34648:	mul	r3, r5, r3
   3464c:	ldr	r5, [r2, -r4, lsl #2]
   34650:	add	r4, r4, #1
   34654:	cmp	r1, r4
   34658:	mul	r0, r0, r5
   3465c:	bne	34648 <GetDataSlab+0x11c84>
   34660:	sub	r4, fp, #72	; 0x48
   34664:	str	r3, [r8, r1, lsl #2]
   34668:	ldr	r5, [sp, #52]	; 0x34
   3466c:	add	r2, r2, #4
   34670:	str	r0, [r4, r1, lsl #2]
   34674:	ldr	r0, [r9, r1, lsl #2]
   34678:	mla	r7, r0, r6, r7
   3467c:	ldr	r0, [sl, r1, lsl #2]
   34680:	add	r1, r1, #1
   34684:	mov	r6, r3
   34688:	mov	r3, lr
   3468c:	mul	r5, r0, r5
   34690:	ldr	r0, [fp, #24]
   34694:	str	r5, [sp, #52]	; 0x34
   34698:	cmp	r1, r0
   3469c:	bne	34624 <GetDataSlab+0x11c60>
   346a0:	ldr	r0, [sp, #48]	; 0x30
   346a4:	cmp	ip, #1
   346a8:	add	r8, r0, r7, lsl #3
   346ac:	bne	3cbd0 <GetDataSlab+0x1a20c>
   346b0:	ldr	r0, [sp, #52]	; 0x34
   346b4:	ldr	r1, [sp, #56]	; 0x38
   346b8:	ldr	r2, [sp, #44]	; 0x2c
   346bc:	cmp	r0, #1
   346c0:	blt	248fc <GetDataSlab+0x1f38>
   346c4:	add	r0, sp, #104	; 0x68
   346c8:	str	r1, [sp, #56]	; 0x38
   346cc:	orr	r6, r0, #4
   346d0:	add	r0, sl, #4
   346d4:	str	r0, [sp, #28]
   346d8:	add	r0, sp, #64	; 0x40
   346dc:	orr	r0, r0, #4
   346e0:	str	r0, [sp, #24]
   346e4:	ldr	r0, [fp, #24]
   346e8:	sub	r0, r0, #1
   346ec:	str	r0, [sp, #20]
   346f0:	sub	r0, fp, #72	; 0x48
   346f4:	orr	r0, r0, #4
   346f8:	str	r0, [sp, #16]
   346fc:	lsl	r0, r2, #2
   34700:	str	r0, [sp, #36]	; 0x24
   34704:	ldr	r0, [r9], #4
   34708:	str	r9, [sp, #60]	; 0x3c
   3470c:	str	r0, [sp, #32]
   34710:	mov	r0, #0
   34714:	str	r0, [sp, #48]	; 0x30
   34718:	cmp	r2, #1
   3471c:	blt	34748 <GetDataSlab+0x11d84>
   34720:	ldr	r0, [sp, #32]
   34724:	ldr	sl, [sp, #56]	; 0x38
   34728:	ldr	r9, [sp, #44]	; 0x2c
   3472c:	add	r4, r8, r0, lsl #3
   34730:	ldrd	r0, [r4]
   34734:	bl	4b628 <__aeabi_ul2f>
   34738:	str	r0, [sl], #4
   3473c:	add	r4, r4, #8
   34740:	subs	r9, r9, #1
   34744:	bne	34730 <GetDataSlab+0x11d6c>
   34748:	ldr	r0, [sp, #40]	; 0x28
   3474c:	add	r8, r8, r0, lsl #3
   34750:	add	r7, r7, r0
   34754:	ldr	r0, [fp, #24]
   34758:	cmp	r0, #2
   3475c:	blt	34808 <GetDataSlab+0x11e44>
   34760:	add	lr, sp, #20
   34764:	ldr	ip, [sp, #60]	; 0x3c
   34768:	mov	r0, #0
   3476c:	mov	sl, #0
   34770:	ldm	lr, {r1, r9, lr}
   34774:	ldr	r2, [r6, r0]
   34778:	add	r2, r2, #1
   3477c:	str	r2, [r6, r0]
   34780:	ldr	r3, [lr, r0]
   34784:	sdiv	r4, r2, r3
   34788:	mls	r2, r4, r3, r2
   3478c:	cmp	r2, #0
   34790:	bne	347f8 <GetDataSlab+0x11e34>
   34794:	ldr	r2, [r9, r0]
   34798:	str	sl, [r6, r0]
   3479c:	sdiv	r3, r7, r2
   347a0:	mls	r3, r3, r2, r7
   347a4:	cmp	r3, #0
   347a8:	beq	347c8 <GetDataSlab+0x11e04>
   347ac:	add	r5, sp, #64	; 0x40
   347b0:	sub	r2, r2, r3
   347b4:	ldr	r4, [r5, r0]
   347b8:	ldr	r5, [ip, r0]
   347bc:	mla	r2, r5, r4, r2
   347c0:	add	r7, r2, r7
   347c4:	b	347e4 <GetDataSlab+0x11e20>
   347c8:	ldr	r2, [ip, r0]
   347cc:	cmp	r2, #0
   347d0:	beq	347e8 <GetDataSlab+0x11e24>
   347d4:	add	r3, sp, #64	; 0x40
   347d8:	ldr	r3, [r3, r0]
   347dc:	mla	r7, r3, r2, r7
   347e0:	mul	r2, r3, r2
   347e4:	add	r8, r8, r2, lsl #3
   347e8:	subs	r1, r1, #1
   347ec:	add	r0, r0, #4
   347f0:	bne	34774 <GetDataSlab+0x11db0>
   347f4:	b	34808 <GetDataSlab+0x11e44>
   347f8:	ldr	r1, [sp, #16]
   347fc:	ldr	r0, [r1, r0]
   34800:	add	r8, r8, r0, lsl #3
   34804:	add	r7, r0, r7
   34808:	ldr	r0, [sp, #36]	; 0x24
   3480c:	ldr	r1, [sp, #56]	; 0x38
   34810:	ldr	r2, [sp, #44]	; 0x2c
   34814:	ldr	r3, [sp, #48]	; 0x30
   34818:	add	r1, r1, r0
   3481c:	add	r3, r3, r2
   34820:	mov	r0, #0
   34824:	str	r1, [sp, #56]	; 0x38
   34828:	ldr	r1, [sp, #52]	; 0x34
   3482c:	str	r3, [sp, #48]	; 0x30
   34830:	cmp	r3, r1
   34834:	blt	34718 <GetDataSlab+0x11d54>
   34838:	b	24900 <GetDataSlab+0x1f3c>
   3483c:	ldr	r0, [sp, #44]	; 0x2c
   34840:	ldr	ip, [fp, #12]
   34844:	cmp	r0, #1
   34848:	add	r0, sp, #64	; 0x40
   3484c:	blt	248fc <GetDataSlab+0x1f38>
   34850:	orr	r0, r0, #4
   34854:	ldr	r4, [fp, #20]
   34858:	add	r7, sp, #104	; 0x68
   3485c:	str	r0, [sp, #48]	; 0x30
   34860:	ldr	r0, [fp, #24]
   34864:	orr	sl, r7, #4
   34868:	add	r2, r4, #4
   3486c:	sub	r0, r0, #1
   34870:	str	r2, [sp, #52]	; 0x34
   34874:	str	r0, [sp, #28]
   34878:	sub	r0, fp, #72	; 0x48
   3487c:	orr	r0, r0, #4
   34880:	str	r0, [sp, #24]
   34884:	ldr	r0, [ip], #4
   34888:	str	r0, [sp, #32]
   3488c:	mov	r0, #0
   34890:	str	r0, [sp, #36]	; 0x24
   34894:	ldr	r1, [sp, #32]
   34898:	cmp	lr, #1
   3489c:	add	r0, r1, r5
   348a0:	add	r5, r6, r1
   348a4:	blt	348fc <GetDataSlab+0x11f38>
   348a8:	ldr	r1, [sp, #56]	; 0x38
   348ac:	ldr	r2, [sp, #36]	; 0x24
   348b0:	ldr	lr, [fp, #8]
   348b4:	ldr	r6, [fp, #16]
   348b8:	mov	r7, #0
   348bc:	add	r4, r1, r2
   348c0:	ldr	r1, [fp, #20]
   348c4:	mov	r8, lr
   348c8:	ldrb	r2, [r5]
   348cc:	strb	r2, [r4, r7]
   348d0:	add	r7, r7, #1
   348d4:	ldr	r3, [r6]
   348d8:	ldr	lr, [r1]
   348dc:	add	r0, r3, r0
   348e0:	add	r5, r5, r3
   348e4:	cmp	r7, lr
   348e8:	blt	348c8 <GetDataSlab+0x11f04>
   348ec:	ldr	r1, [fp, #12]
   348f0:	ldr	r2, [r8]
   348f4:	ldr	r1, [r1]
   348f8:	b	34900 <GetDataSlab+0x11f3c>
   348fc:	ldr	r2, [sp, #40]	; 0x28
   34900:	mls	r7, r3, lr, r2
   34904:	str	r2, [sp, #40]	; 0x28
   34908:	str	r1, [sp, #32]
   3490c:	sub	r7, r7, r1
   34910:	add	r6, r5, r7
   34914:	add	r5, r7, r0
   34918:	ldr	r0, [fp, #24]
   3491c:	cmp	r0, #2
   34920:	blt	349dc <GetDataSlab+0x12018>
   34924:	ldr	r8, [sp, #28]
   34928:	mov	r0, #0
   3492c:	ldr	r4, [sl, r0]
   34930:	ldr	r1, [sp, #52]	; 0x34
   34934:	add	r4, r4, #1
   34938:	str	r4, [sl, r0]
   3493c:	ldr	r7, [r1, r0]
   34940:	sdiv	r9, r4, r7
   34944:	mls	r4, r9, r7, r4
   34948:	cmp	r4, #0
   3494c:	bne	349cc <GetDataSlab+0x12008>
   34950:	mov	r1, #0
   34954:	str	r1, [sl, r0]
   34958:	ldr	r1, [sp, #48]	; 0x30
   3495c:	ldr	r4, [r1, r0]
   34960:	sdiv	r7, r5, r4
   34964:	mls	r7, r7, r4, r5
   34968:	cmp	r7, #0
   3496c:	beq	349a0 <GetDataSlab+0x11fdc>
   34970:	add	r1, sp, #64	; 0x40
   34974:	mov	r2, r6
   34978:	mov	r6, r5
   3497c:	ldr	r5, [ip, r0]
   34980:	sub	r4, r4, r7
   34984:	ldr	r1, [r1, r0]
   34988:	mla	r1, r5, r1, r4
   3498c:	mov	r5, r6
   34990:	mov	r6, r2
   34994:	add	r5, r1, r5
   34998:	add	r6, r2, r1
   3499c:	b	349bc <GetDataSlab+0x11ff8>
   349a0:	ldr	r4, [ip, r0]
   349a4:	cmp	r4, #0
   349a8:	beq	349bc <GetDataSlab+0x11ff8>
   349ac:	add	r1, sp, #64	; 0x40
   349b0:	ldr	r1, [r1, r0]
   349b4:	mla	r5, r1, r4, r5
   349b8:	mla	r6, r1, r4, r6
   349bc:	subs	r8, r8, #1
   349c0:	add	r0, r0, #4
   349c4:	bne	3492c <GetDataSlab+0x11f68>
   349c8:	b	349dc <GetDataSlab+0x12018>
   349cc:	ldr	r1, [sp, #24]
   349d0:	ldr	r0, [r1, r0]
   349d4:	add	r6, r6, r0
   349d8:	add	r5, r0, r5
   349dc:	ldr	r1, [sp, #36]	; 0x24
   349e0:	ldr	r0, [sp, #44]	; 0x2c
   349e4:	add	r1, lr, r1
   349e8:	cmp	r1, r0
   349ec:	mov	r0, #0
   349f0:	str	r1, [sp, #36]	; 0x24
   349f4:	blt	34894 <GetDataSlab+0x11ed0>
   349f8:	b	24900 <GetDataSlab+0x1f3c>
   349fc:	ldr	r0, [sp, #40]	; 0x28
   34a00:	cmp	r0, #1
   34a04:	add	r0, sp, #64	; 0x40
   34a08:	blt	248fc <GetDataSlab+0x1f38>
   34a0c:	orr	r0, r0, #4
   34a10:	ldr	ip, [fp, #12]
   34a14:	add	r1, sp, #104	; 0x68
   34a18:	str	r0, [sp, #48]	; 0x30
   34a1c:	ldr	r0, [fp, #24]
   34a20:	orr	r6, r1, #4
   34a24:	ldr	r1, [fp, #20]
   34a28:	str	r6, [sp, #44]	; 0x2c
   34a2c:	ldr	r2, [ip], #4
   34a30:	sub	r0, r0, #1
   34a34:	add	r1, r1, #4
   34a38:	str	r0, [sp, #28]
   34a3c:	sub	r0, fp, #72	; 0x48
   34a40:	str	r1, [sp, #52]	; 0x34
   34a44:	orr	r0, r0, #4
   34a48:	str	r0, [sp, #24]
   34a4c:	mov	r0, #0
   34a50:	str	r0, [sp, #32]
   34a54:	add	r5, r5, r2, lsl #1
   34a58:	add	r0, r2, lr
   34a5c:	cmp	sl, #1
   34a60:	blt	34ab8 <GetDataSlab+0x120f4>
   34a64:	ldr	r1, [sp, #56]	; 0x38
   34a68:	ldr	r2, [sp, #32]
   34a6c:	ldr	lr, [fp, #8]
   34a70:	ldr	r6, [fp, #16]
   34a74:	mov	r7, #0
   34a78:	add	r4, r1, r2
   34a7c:	ldr	r1, [fp, #20]
   34a80:	ldrb	r2, [r5]
   34a84:	strb	r2, [r4, r7]
   34a88:	add	r7, r7, #1
   34a8c:	ldr	r3, [r6]
   34a90:	ldr	sl, [r1]
   34a94:	add	r5, r5, r3, lsl #1
   34a98:	add	r0, r3, r0
   34a9c:	cmp	r7, sl
   34aa0:	blt	34a80 <GetDataSlab+0x120bc>
   34aa4:	ldr	r1, [fp, #12]
   34aa8:	ldr	r2, [lr]
   34aac:	ldr	r6, [sp, #44]	; 0x2c
   34ab0:	ldr	r1, [r1]
   34ab4:	b	34ac0 <GetDataSlab+0x120fc>
   34ab8:	mov	r1, r2
   34abc:	ldr	r2, [sp, #36]	; 0x24
   34ac0:	mls	r7, r3, sl, r2
   34ac4:	str	r2, [sp, #36]	; 0x24
   34ac8:	mov	r2, r1
   34acc:	sub	r7, r7, r1
   34ad0:	add	lr, r7, r0
   34ad4:	ldr	r0, [fp, #24]
   34ad8:	add	r5, r5, r7, lsl #1
   34adc:	cmp	r0, #2
   34ae0:	blt	34b98 <GetDataSlab+0x121d4>
   34ae4:	ldr	r8, [sp, #28]
   34ae8:	mov	r0, #0
   34aec:	ldr	r4, [r6, r0]
   34af0:	ldr	r1, [sp, #52]	; 0x34
   34af4:	add	r4, r4, #1
   34af8:	str	r4, [r6, r0]
   34afc:	ldr	r7, [r1, r0]
   34b00:	sdiv	r9, r4, r7
   34b04:	mls	r4, r9, r7, r4
   34b08:	cmp	r4, #0
   34b0c:	bne	34b88 <GetDataSlab+0x121c4>
   34b10:	mov	r1, #0
   34b14:	str	r1, [r6, r0]
   34b18:	ldr	r1, [sp, #48]	; 0x30
   34b1c:	ldr	r4, [r1, r0]
   34b20:	sdiv	r7, lr, r4
   34b24:	mls	r7, r7, r4, lr
   34b28:	cmp	r7, #0
   34b2c:	beq	34b58 <GetDataSlab+0x12194>
   34b30:	add	r1, sp, #64	; 0x40
   34b34:	mov	r6, r5
   34b38:	ldr	r5, [ip, r0]
   34b3c:	sub	r4, r4, r7
   34b40:	ldr	r1, [r1, r0]
   34b44:	mla	r1, r5, r1, r4
   34b48:	mov	r5, r6
   34b4c:	ldr	r6, [sp, #44]	; 0x2c
   34b50:	add	lr, r1, lr
   34b54:	b	34b74 <GetDataSlab+0x121b0>
   34b58:	ldr	r4, [ip, r0]
   34b5c:	cmp	r4, #0
   34b60:	beq	34b78 <GetDataSlab+0x121b4>
   34b64:	add	r1, sp, #64	; 0x40
   34b68:	ldr	r1, [r1, r0]
   34b6c:	mla	lr, r1, r4, lr
   34b70:	mul	r1, r1, r4
   34b74:	add	r5, r5, r1, lsl #1
   34b78:	subs	r8, r8, #1
   34b7c:	add	r0, r0, #4
   34b80:	bne	34aec <GetDataSlab+0x12128>
   34b84:	b	34b98 <GetDataSlab+0x121d4>
   34b88:	ldr	r1, [sp, #24]
   34b8c:	ldr	r0, [r1, r0]
   34b90:	add	r5, r5, r0, lsl #1
   34b94:	add	lr, r0, lr
   34b98:	ldr	r1, [sp, #32]
   34b9c:	ldr	r0, [sp, #40]	; 0x28
   34ba0:	add	r1, sl, r1
   34ba4:	cmp	r1, r0
   34ba8:	mov	r0, #0
   34bac:	str	r1, [sp, #32]
   34bb0:	blt	34a54 <GetDataSlab+0x12090>
   34bb4:	b	24900 <GetDataSlab+0x1f3c>
   34bb8:	ldr	r0, [sp, #40]	; 0x28
   34bbc:	cmp	r0, #1
   34bc0:	add	r0, sp, #64	; 0x40
   34bc4:	blt	248fc <GetDataSlab+0x1f38>
   34bc8:	orr	r0, r0, #4
   34bcc:	ldr	ip, [fp, #12]
   34bd0:	add	r1, sp, #104	; 0x68
   34bd4:	str	r0, [sp, #48]	; 0x30
   34bd8:	ldr	r0, [fp, #24]
   34bdc:	orr	r6, r1, #4
   34be0:	ldr	r1, [fp, #20]
   34be4:	str	r6, [sp, #44]	; 0x2c
   34be8:	ldr	r2, [ip], #4
   34bec:	sub	r0, r0, #1
   34bf0:	add	r1, r1, #4
   34bf4:	str	r0, [sp, #28]
   34bf8:	sub	r0, fp, #72	; 0x48
   34bfc:	str	r1, [sp, #52]	; 0x34
   34c00:	orr	r0, r0, #4
   34c04:	str	r0, [sp, #24]
   34c08:	mov	r0, #0
   34c0c:	str	r0, [sp, #32]
   34c10:	add	r5, r5, r2, lsl #1
   34c14:	add	r0, r2, lr
   34c18:	cmp	sl, #1
   34c1c:	blt	34c74 <GetDataSlab+0x122b0>
   34c20:	ldr	r1, [sp, #56]	; 0x38
   34c24:	ldr	r2, [sp, #32]
   34c28:	ldr	lr, [fp, #8]
   34c2c:	ldr	r6, [fp, #16]
   34c30:	mov	r7, #0
   34c34:	add	r4, r1, r2
   34c38:	ldr	r1, [fp, #20]
   34c3c:	ldrb	r2, [r5]
   34c40:	strb	r2, [r4, r7]
   34c44:	add	r7, r7, #1
   34c48:	ldr	r3, [r6]
   34c4c:	ldr	sl, [r1]
   34c50:	add	r5, r5, r3, lsl #1
   34c54:	add	r0, r3, r0
   34c58:	cmp	r7, sl
   34c5c:	blt	34c3c <GetDataSlab+0x12278>
   34c60:	ldr	r1, [fp, #12]
   34c64:	ldr	r2, [lr]
   34c68:	ldr	r6, [sp, #44]	; 0x2c
   34c6c:	ldr	r1, [r1]
   34c70:	b	34c7c <GetDataSlab+0x122b8>
   34c74:	mov	r1, r2
   34c78:	ldr	r2, [sp, #36]	; 0x24
   34c7c:	mls	r7, r3, sl, r2
   34c80:	str	r2, [sp, #36]	; 0x24
   34c84:	mov	r2, r1
   34c88:	sub	r7, r7, r1
   34c8c:	add	lr, r7, r0
   34c90:	ldr	r0, [fp, #24]
   34c94:	add	r5, r5, r7, lsl #1
   34c98:	cmp	r0, #2
   34c9c:	blt	34d54 <GetDataSlab+0x12390>
   34ca0:	ldr	r8, [sp, #28]
   34ca4:	mov	r0, #0
   34ca8:	ldr	r4, [r6, r0]
   34cac:	ldr	r1, [sp, #52]	; 0x34
   34cb0:	add	r4, r4, #1
   34cb4:	str	r4, [r6, r0]
   34cb8:	ldr	r7, [r1, r0]
   34cbc:	sdiv	r9, r4, r7
   34cc0:	mls	r4, r9, r7, r4
   34cc4:	cmp	r4, #0
   34cc8:	bne	34d44 <GetDataSlab+0x12380>
   34ccc:	mov	r1, #0
   34cd0:	str	r1, [r6, r0]
   34cd4:	ldr	r1, [sp, #48]	; 0x30
   34cd8:	ldr	r4, [r1, r0]
   34cdc:	sdiv	r7, lr, r4
   34ce0:	mls	r7, r7, r4, lr
   34ce4:	cmp	r7, #0
   34ce8:	beq	34d14 <GetDataSlab+0x12350>
   34cec:	add	r1, sp, #64	; 0x40
   34cf0:	mov	r6, r5
   34cf4:	ldr	r5, [ip, r0]
   34cf8:	sub	r4, r4, r7
   34cfc:	ldr	r1, [r1, r0]
   34d00:	mla	r1, r5, r1, r4
   34d04:	mov	r5, r6
   34d08:	ldr	r6, [sp, #44]	; 0x2c
   34d0c:	add	lr, r1, lr
   34d10:	b	34d30 <GetDataSlab+0x1236c>
   34d14:	ldr	r4, [ip, r0]
   34d18:	cmp	r4, #0
   34d1c:	beq	34d34 <GetDataSlab+0x12370>
   34d20:	add	r1, sp, #64	; 0x40
   34d24:	ldr	r1, [r1, r0]
   34d28:	mla	lr, r1, r4, lr
   34d2c:	mul	r1, r1, r4
   34d30:	add	r5, r5, r1, lsl #1
   34d34:	subs	r8, r8, #1
   34d38:	add	r0, r0, #4
   34d3c:	bne	34ca8 <GetDataSlab+0x122e4>
   34d40:	b	34d54 <GetDataSlab+0x12390>
   34d44:	ldr	r1, [sp, #24]
   34d48:	ldr	r0, [r1, r0]
   34d4c:	add	r5, r5, r0, lsl #1
   34d50:	add	lr, r0, lr
   34d54:	ldr	r1, [sp, #32]
   34d58:	ldr	r0, [sp, #40]	; 0x28
   34d5c:	add	r1, sl, r1
   34d60:	cmp	r1, r0
   34d64:	mov	r0, #0
   34d68:	str	r1, [sp, #32]
   34d6c:	blt	34c10 <GetDataSlab+0x1224c>
   34d70:	b	24900 <GetDataSlab+0x1f3c>
   34d74:	ldr	r0, [sp, #44]	; 0x2c
   34d78:	ldr	ip, [fp, #12]
   34d7c:	cmp	r0, #1
   34d80:	add	r0, sp, #64	; 0x40
   34d84:	blt	248fc <GetDataSlab+0x1f38>
   34d88:	orr	r0, r0, #4
   34d8c:	ldr	r4, [fp, #20]
   34d90:	add	r7, sp, #104	; 0x68
   34d94:	str	r0, [sp, #48]	; 0x30
   34d98:	ldr	r0, [fp, #24]
   34d9c:	orr	sl, r7, #4
   34da0:	add	r2, r4, #4
   34da4:	sub	r0, r0, #1
   34da8:	str	r2, [sp, #52]	; 0x34
   34dac:	str	r0, [sp, #28]
   34db0:	sub	r0, fp, #72	; 0x48
   34db4:	orr	r0, r0, #4
   34db8:	str	r0, [sp, #24]
   34dbc:	ldr	r0, [ip], #4
   34dc0:	str	r0, [sp, #32]
   34dc4:	mov	r0, #0
   34dc8:	str	r0, [sp, #36]	; 0x24
   34dcc:	ldr	r1, [sp, #32]
   34dd0:	cmp	lr, #1
   34dd4:	add	r0, r1, r5
   34dd8:	add	r5, r6, r1, lsl #2
   34ddc:	blt	34e34 <GetDataSlab+0x12470>
   34de0:	ldr	r1, [sp, #56]	; 0x38
   34de4:	ldr	r2, [sp, #36]	; 0x24
   34de8:	ldr	lr, [fp, #8]
   34dec:	ldr	r6, [fp, #16]
   34df0:	mov	r7, #0
   34df4:	add	r4, r1, r2
   34df8:	ldr	r1, [fp, #20]
   34dfc:	mov	r8, lr
   34e00:	ldr	r2, [r5]
   34e04:	strb	r2, [r4, r7]
   34e08:	add	r7, r7, #1
   34e0c:	ldr	r3, [r6]
   34e10:	ldr	lr, [r1]
   34e14:	add	r5, r5, r3, lsl #2
   34e18:	add	r0, r3, r0
   34e1c:	cmp	r7, lr
   34e20:	blt	34e00 <GetDataSlab+0x1243c>
   34e24:	ldr	r1, [fp, #12]
   34e28:	ldr	r2, [r8]
   34e2c:	ldr	r1, [r1]
   34e30:	b	34e38 <GetDataSlab+0x12474>
   34e34:	ldr	r2, [sp, #40]	; 0x28
   34e38:	mls	r7, r3, lr, r2
   34e3c:	str	r2, [sp, #40]	; 0x28
   34e40:	str	r1, [sp, #32]
   34e44:	sub	r7, r7, r1
   34e48:	add	r6, r5, r7, lsl #2
   34e4c:	add	r5, r7, r0
   34e50:	ldr	r0, [fp, #24]
   34e54:	cmp	r0, #2
   34e58:	blt	34f18 <GetDataSlab+0x12554>
   34e5c:	ldr	r8, [sp, #28]
   34e60:	mov	r0, #0
   34e64:	ldr	r4, [sl, r0]
   34e68:	ldr	r1, [sp, #52]	; 0x34
   34e6c:	add	r4, r4, #1
   34e70:	str	r4, [sl, r0]
   34e74:	ldr	r7, [r1, r0]
   34e78:	sdiv	r9, r4, r7
   34e7c:	mls	r4, r9, r7, r4
   34e80:	cmp	r4, #0
   34e84:	bne	34f08 <GetDataSlab+0x12544>
   34e88:	mov	r1, #0
   34e8c:	str	r1, [sl, r0]
   34e90:	ldr	r1, [sp, #48]	; 0x30
   34e94:	ldr	r4, [r1, r0]
   34e98:	sdiv	r7, r5, r4
   34e9c:	mls	r7, r7, r4, r5
   34ea0:	cmp	r7, #0
   34ea4:	beq	34ed8 <GetDataSlab+0x12514>
   34ea8:	add	r1, sp, #64	; 0x40
   34eac:	mov	r2, r6
   34eb0:	mov	r6, r5
   34eb4:	ldr	r5, [ip, r0]
   34eb8:	sub	r4, r4, r7
   34ebc:	ldr	r1, [r1, r0]
   34ec0:	mla	r1, r5, r1, r4
   34ec4:	mov	r5, r6
   34ec8:	mov	r6, r2
   34ecc:	add	r5, r1, r5
   34ed0:	add	r6, r2, r1, lsl #2
   34ed4:	b	34ef8 <GetDataSlab+0x12534>
   34ed8:	ldr	r4, [ip, r0]
   34edc:	cmp	r4, #0
   34ee0:	beq	34ef8 <GetDataSlab+0x12534>
   34ee4:	add	r1, sp, #64	; 0x40
   34ee8:	ldr	r1, [r1, r0]
   34eec:	mla	r5, r1, r4, r5
   34ef0:	mul	r1, r1, r4
   34ef4:	add	r6, r6, r1, lsl #2
   34ef8:	subs	r8, r8, #1
   34efc:	add	r0, r0, #4
   34f00:	bne	34e64 <GetDataSlab+0x124a0>
   34f04:	b	34f18 <GetDataSlab+0x12554>
   34f08:	ldr	r1, [sp, #24]
   34f0c:	ldr	r0, [r1, r0]
   34f10:	add	r6, r6, r0, lsl #2
   34f14:	add	r5, r0, r5
   34f18:	ldr	r1, [sp, #36]	; 0x24
   34f1c:	ldr	r0, [sp, #44]	; 0x2c
   34f20:	add	r1, lr, r1
   34f24:	cmp	r1, r0
   34f28:	mov	r0, #0
   34f2c:	str	r1, [sp, #36]	; 0x24
   34f30:	blt	34dcc <GetDataSlab+0x12408>
   34f34:	b	24900 <GetDataSlab+0x1f3c>
   34f38:	ldr	r0, [sp, #44]	; 0x2c
   34f3c:	ldr	ip, [fp, #12]
   34f40:	cmp	r0, #1
   34f44:	add	r0, sp, #64	; 0x40
   34f48:	blt	248fc <GetDataSlab+0x1f38>
   34f4c:	orr	r0, r0, #4
   34f50:	ldr	r4, [fp, #20]
   34f54:	add	r7, sp, #104	; 0x68
   34f58:	str	r0, [sp, #48]	; 0x30
   34f5c:	ldr	r0, [fp, #24]
   34f60:	orr	sl, r7, #4
   34f64:	add	r2, r4, #4
   34f68:	sub	r0, r0, #1
   34f6c:	str	r2, [sp, #52]	; 0x34
   34f70:	str	r0, [sp, #28]
   34f74:	sub	r0, fp, #72	; 0x48
   34f78:	orr	r0, r0, #4
   34f7c:	str	r0, [sp, #24]
   34f80:	ldr	r0, [ip], #4
   34f84:	str	r0, [sp, #32]
   34f88:	mov	r0, #0
   34f8c:	str	r0, [sp, #36]	; 0x24
   34f90:	ldr	r1, [sp, #32]
   34f94:	cmp	lr, #1
   34f98:	add	r0, r1, r5
   34f9c:	add	r5, r6, r1, lsl #2
   34fa0:	blt	34ff8 <GetDataSlab+0x12634>
   34fa4:	ldr	r1, [sp, #56]	; 0x38
   34fa8:	ldr	r2, [sp, #36]	; 0x24
   34fac:	ldr	lr, [fp, #8]
   34fb0:	ldr	r6, [fp, #16]
   34fb4:	mov	r7, #0
   34fb8:	add	r4, r1, r2
   34fbc:	ldr	r1, [fp, #20]
   34fc0:	mov	r8, lr
   34fc4:	ldr	r2, [r5]
   34fc8:	strb	r2, [r4, r7]
   34fcc:	add	r7, r7, #1
   34fd0:	ldr	r3, [r6]
   34fd4:	ldr	lr, [r1]
   34fd8:	add	r5, r5, r3, lsl #2
   34fdc:	add	r0, r3, r0
   34fe0:	cmp	r7, lr
   34fe4:	blt	34fc4 <GetDataSlab+0x12600>
   34fe8:	ldr	r1, [fp, #12]
   34fec:	ldr	r2, [r8]
   34ff0:	ldr	r1, [r1]
   34ff4:	b	34ffc <GetDataSlab+0x12638>
   34ff8:	ldr	r2, [sp, #40]	; 0x28
   34ffc:	mls	r7, r3, lr, r2
   35000:	str	r2, [sp, #40]	; 0x28
   35004:	str	r1, [sp, #32]
   35008:	sub	r7, r7, r1
   3500c:	add	r6, r5, r7, lsl #2
   35010:	add	r5, r7, r0
   35014:	ldr	r0, [fp, #24]
   35018:	cmp	r0, #2
   3501c:	blt	350dc <GetDataSlab+0x12718>
   35020:	ldr	r8, [sp, #28]
   35024:	mov	r0, #0
   35028:	ldr	r4, [sl, r0]
   3502c:	ldr	r1, [sp, #52]	; 0x34
   35030:	add	r4, r4, #1
   35034:	str	r4, [sl, r0]
   35038:	ldr	r7, [r1, r0]
   3503c:	sdiv	r9, r4, r7
   35040:	mls	r4, r9, r7, r4
   35044:	cmp	r4, #0
   35048:	bne	350cc <GetDataSlab+0x12708>
   3504c:	mov	r1, #0
   35050:	str	r1, [sl, r0]
   35054:	ldr	r1, [sp, #48]	; 0x30
   35058:	ldr	r4, [r1, r0]
   3505c:	sdiv	r7, r5, r4
   35060:	mls	r7, r7, r4, r5
   35064:	cmp	r7, #0
   35068:	beq	3509c <GetDataSlab+0x126d8>
   3506c:	add	r1, sp, #64	; 0x40
   35070:	mov	r2, r6
   35074:	mov	r6, r5
   35078:	ldr	r5, [ip, r0]
   3507c:	sub	r4, r4, r7
   35080:	ldr	r1, [r1, r0]
   35084:	mla	r1, r5, r1, r4
   35088:	mov	r5, r6
   3508c:	mov	r6, r2
   35090:	add	r5, r1, r5
   35094:	add	r6, r2, r1, lsl #2
   35098:	b	350bc <GetDataSlab+0x126f8>
   3509c:	ldr	r4, [ip, r0]
   350a0:	cmp	r4, #0
   350a4:	beq	350bc <GetDataSlab+0x126f8>
   350a8:	add	r1, sp, #64	; 0x40
   350ac:	ldr	r1, [r1, r0]
   350b0:	mla	r5, r1, r4, r5
   350b4:	mul	r1, r1, r4
   350b8:	add	r6, r6, r1, lsl #2
   350bc:	subs	r8, r8, #1
   350c0:	add	r0, r0, #4
   350c4:	bne	35028 <GetDataSlab+0x12664>
   350c8:	b	350dc <GetDataSlab+0x12718>
   350cc:	ldr	r1, [sp, #24]
   350d0:	ldr	r0, [r1, r0]
   350d4:	add	r6, r6, r0, lsl #2
   350d8:	add	r5, r0, r5
   350dc:	ldr	r1, [sp, #36]	; 0x24
   350e0:	ldr	r0, [sp, #44]	; 0x2c
   350e4:	add	r1, lr, r1
   350e8:	cmp	r1, r0
   350ec:	mov	r0, #0
   350f0:	str	r1, [sp, #36]	; 0x24
   350f4:	blt	34f90 <GetDataSlab+0x125cc>
   350f8:	b	24900 <GetDataSlab+0x1f3c>
   350fc:	ldr	r0, [sp, #40]	; 0x28
   35100:	cmp	r0, #1
   35104:	add	r0, sp, #64	; 0x40
   35108:	blt	248fc <GetDataSlab+0x1f38>
   3510c:	add	r7, sp, #104	; 0x68
   35110:	orr	r0, r0, #4
   35114:	ldr	ip, [fp, #12]
   35118:	orr	r6, r7, #4
   3511c:	ldr	r7, [fp, #20]
   35120:	str	r0, [sp, #48]	; 0x30
   35124:	ldr	r0, [fp, #24]
   35128:	str	r6, [sp, #44]	; 0x2c
   3512c:	add	r1, r7, #4
   35130:	sub	r0, r0, #1
   35134:	str	r1, [sp, #52]	; 0x34
   35138:	ldr	r1, [ip], #4
   3513c:	str	r0, [sp, #28]
   35140:	sub	r0, fp, #72	; 0x48
   35144:	orr	r0, r0, #4
   35148:	str	r0, [sp, #24]
   3514c:	mov	r0, #0
   35150:	str	r0, [sp, #32]
   35154:	add	r5, r5, r1, lsl #2
   35158:	add	r0, r1, lr
   3515c:	cmp	sl, #1
   35160:	blt	351c0 <GetDataSlab+0x127fc>
   35164:	ldr	r2, [sp, #56]	; 0x38
   35168:	ldr	r1, [sp, #32]
   3516c:	ldr	r6, [fp, #20]
   35170:	ldr	lr, [fp, #8]
   35174:	mov	r7, #0
   35178:	add	r4, r2, r1
   3517c:	ldr	r1, [fp, #16]
   35180:	vldr	s0, [r5]
   35184:	vcvt.s32.f32	s0, s0
   35188:	vmov	r2, s0
   3518c:	strb	r2, [r4, r7]
   35190:	add	r7, r7, #1
   35194:	ldr	r3, [r1]
   35198:	ldr	sl, [r6]
   3519c:	add	r5, r5, r3, lsl #2
   351a0:	add	r0, r3, r0
   351a4:	cmp	r7, sl
   351a8:	blt	35180 <GetDataSlab+0x127bc>
   351ac:	ldr	r7, [fp, #12]
   351b0:	ldr	r1, [lr]
   351b4:	ldr	r6, [sp, #44]	; 0x2c
   351b8:	ldr	r2, [r7]
   351bc:	b	351c8 <GetDataSlab+0x12804>
   351c0:	mov	r2, r1
   351c4:	ldr	r1, [sp, #36]	; 0x24
   351c8:	mls	r7, r3, sl, r1
   351cc:	str	r1, [sp, #36]	; 0x24
   351d0:	mov	r1, r2
   351d4:	sub	r7, r7, r2
   351d8:	add	lr, r7, r0
   351dc:	ldr	r0, [fp, #24]
   351e0:	add	r5, r5, r7, lsl #2
   351e4:	cmp	r0, #2
   351e8:	blt	352a8 <GetDataSlab+0x128e4>
   351ec:	ldr	r8, [sp, #28]
   351f0:	mov	r0, #0
   351f4:	ldr	r4, [r6, r0]
   351f8:	ldr	r2, [sp, #52]	; 0x34
   351fc:	add	r4, r4, #1
   35200:	str	r4, [r6, r0]
   35204:	ldr	r7, [r2, r0]
   35208:	sdiv	r9, r4, r7
   3520c:	mls	r4, r9, r7, r4
   35210:	cmp	r4, #0
   35214:	bne	35298 <GetDataSlab+0x128d4>
   35218:	mov	r2, #0
   3521c:	str	r2, [r6, r0]
   35220:	ldr	r2, [sp, #48]	; 0x30
   35224:	ldr	r4, [r2, r0]
   35228:	sdiv	r7, lr, r4
   3522c:	mls	r7, r7, r4, lr
   35230:	cmp	r7, #0
   35234:	beq	35260 <GetDataSlab+0x1289c>
   35238:	mov	r2, r5
   3523c:	add	r5, sp, #64	; 0x40
   35240:	sub	r4, r4, r7
   35244:	ldr	r6, [r5, r0]
   35248:	ldr	r5, [ip, r0]
   3524c:	mla	r4, r5, r6, r4
   35250:	ldr	r6, [sp, #44]	; 0x2c
   35254:	mov	r5, r2
   35258:	add	lr, r4, lr
   3525c:	b	35284 <GetDataSlab+0x128c0>
   35260:	ldr	r4, [ip, r0]
   35264:	cmp	r4, #0
   35268:	beq	35288 <GetDataSlab+0x128c4>
   3526c:	mov	r2, r5
   35270:	add	r5, sp, #64	; 0x40
   35274:	ldr	r5, [r5, r0]
   35278:	mla	lr, r5, r4, lr
   3527c:	mul	r4, r5, r4
   35280:	mov	r5, r2
   35284:	add	r5, r2, r4, lsl #2
   35288:	subs	r8, r8, #1
   3528c:	add	r0, r0, #4
   35290:	bne	351f4 <GetDataSlab+0x12830>
   35294:	b	352a8 <GetDataSlab+0x128e4>
   35298:	ldr	r2, [sp, #24]
   3529c:	ldr	r0, [r2, r0]
   352a0:	add	r5, r5, r0, lsl #2
   352a4:	add	lr, r0, lr
   352a8:	ldr	r2, [sp, #32]
   352ac:	ldr	r0, [sp, #40]	; 0x28
   352b0:	add	r2, sl, r2
   352b4:	cmp	r2, r0
   352b8:	mov	r0, #0
   352bc:	str	r2, [sp, #32]
   352c0:	blt	35154 <GetDataSlab+0x12790>
   352c4:	b	24900 <GetDataSlab+0x1f3c>
   352c8:	ldr	r0, [sp, #40]	; 0x28
   352cc:	cmp	r0, #1
   352d0:	add	r0, sp, #64	; 0x40
   352d4:	blt	248fc <GetDataSlab+0x1f38>
   352d8:	add	r7, sp, #104	; 0x68
   352dc:	orr	r0, r0, #4
   352e0:	ldr	ip, [fp, #12]
   352e4:	orr	r6, r7, #4
   352e8:	ldr	r7, [fp, #20]
   352ec:	str	r0, [sp, #48]	; 0x30
   352f0:	ldr	r0, [fp, #24]
   352f4:	str	r6, [sp, #44]	; 0x2c
   352f8:	add	r1, r7, #4
   352fc:	sub	r0, r0, #1
   35300:	str	r1, [sp, #52]	; 0x34
   35304:	ldr	r1, [ip], #4
   35308:	str	r0, [sp, #28]
   3530c:	sub	r0, fp, #72	; 0x48
   35310:	orr	r0, r0, #4
   35314:	str	r0, [sp, #24]
   35318:	mov	r0, #0
   3531c:	str	r0, [sp, #32]
   35320:	add	r5, r5, r1, lsl #3
   35324:	add	r0, r1, lr
   35328:	cmp	sl, #1
   3532c:	blt	3538c <GetDataSlab+0x129c8>
   35330:	ldr	r2, [sp, #56]	; 0x38
   35334:	ldr	r1, [sp, #32]
   35338:	ldr	r6, [fp, #20]
   3533c:	ldr	lr, [fp, #8]
   35340:	mov	r7, #0
   35344:	add	r4, r2, r1
   35348:	ldr	r1, [fp, #16]
   3534c:	vldr	d16, [r5]
   35350:	vcvt.s32.f64	s0, d16
   35354:	vmov	r2, s0
   35358:	strb	r2, [r4, r7]
   3535c:	add	r7, r7, #1
   35360:	ldr	r3, [r1]
   35364:	ldr	sl, [r6]
   35368:	add	r5, r5, r3, lsl #3
   3536c:	add	r0, r3, r0
   35370:	cmp	r7, sl
   35374:	blt	3534c <GetDataSlab+0x12988>
   35378:	ldr	r7, [fp, #12]
   3537c:	ldr	r1, [lr]
   35380:	ldr	r6, [sp, #44]	; 0x2c
   35384:	ldr	r2, [r7]
   35388:	b	35394 <GetDataSlab+0x129d0>
   3538c:	mov	r2, r1
   35390:	ldr	r1, [sp, #36]	; 0x24
   35394:	mls	r7, r3, sl, r1
   35398:	str	r1, [sp, #36]	; 0x24
   3539c:	mov	r1, r2
   353a0:	sub	r7, r7, r2
   353a4:	add	lr, r7, r0
   353a8:	ldr	r0, [fp, #24]
   353ac:	add	r5, r5, r7, lsl #3
   353b0:	cmp	r0, #2
   353b4:	blt	35474 <GetDataSlab+0x12ab0>
   353b8:	ldr	r8, [sp, #28]
   353bc:	mov	r0, #0
   353c0:	ldr	r4, [r6, r0]
   353c4:	ldr	r2, [sp, #52]	; 0x34
   353c8:	add	r4, r4, #1
   353cc:	str	r4, [r6, r0]
   353d0:	ldr	r7, [r2, r0]
   353d4:	sdiv	r9, r4, r7
   353d8:	mls	r4, r9, r7, r4
   353dc:	cmp	r4, #0
   353e0:	bne	35464 <GetDataSlab+0x12aa0>
   353e4:	mov	r2, #0
   353e8:	str	r2, [r6, r0]
   353ec:	ldr	r2, [sp, #48]	; 0x30
   353f0:	ldr	r4, [r2, r0]
   353f4:	sdiv	r7, lr, r4
   353f8:	mls	r7, r7, r4, lr
   353fc:	cmp	r7, #0
   35400:	beq	3542c <GetDataSlab+0x12a68>
   35404:	mov	r2, r5
   35408:	add	r5, sp, #64	; 0x40
   3540c:	sub	r4, r4, r7
   35410:	ldr	r6, [r5, r0]
   35414:	ldr	r5, [ip, r0]
   35418:	mla	r4, r5, r6, r4
   3541c:	ldr	r6, [sp, #44]	; 0x2c
   35420:	mov	r5, r2
   35424:	add	lr, r4, lr
   35428:	b	35450 <GetDataSlab+0x12a8c>
   3542c:	ldr	r4, [ip, r0]
   35430:	cmp	r4, #0
   35434:	beq	35454 <GetDataSlab+0x12a90>
   35438:	mov	r2, r5
   3543c:	add	r5, sp, #64	; 0x40
   35440:	ldr	r5, [r5, r0]
   35444:	mla	lr, r5, r4, lr
   35448:	mul	r4, r5, r4
   3544c:	mov	r5, r2
   35450:	add	r5, r2, r4, lsl #3
   35454:	subs	r8, r8, #1
   35458:	add	r0, r0, #4
   3545c:	bne	353c0 <GetDataSlab+0x129fc>
   35460:	b	35474 <GetDataSlab+0x12ab0>
   35464:	ldr	r2, [sp, #24]
   35468:	ldr	r0, [r2, r0]
   3546c:	add	r5, r5, r0, lsl #3
   35470:	add	lr, r0, lr
   35474:	ldr	r2, [sp, #32]
   35478:	ldr	r0, [sp, #40]	; 0x28
   3547c:	add	r2, sl, r2
   35480:	cmp	r2, r0
   35484:	mov	r0, #0
   35488:	str	r2, [sp, #32]
   3548c:	blt	35320 <GetDataSlab+0x1295c>
   35490:	b	24900 <GetDataSlab+0x1f3c>
   35494:	ldr	r0, [sp, #36]	; 0x24
   35498:	ldr	r6, [fp, #16]
   3549c:	ldr	ip, [fp, #12]
   354a0:	cmp	r0, #1
   354a4:	add	r0, sp, #64	; 0x40
   354a8:	blt	35644 <GetDataSlab+0x12c80>
   354ac:	orr	r0, r0, #4
   354b0:	add	r2, sp, #104	; 0x68
   354b4:	str	r0, [sp, #44]	; 0x2c
   354b8:	ldr	r0, [fp, #24]
   354bc:	orr	r9, r2, #4
   354c0:	ldr	r2, [fp, #20]
   354c4:	sub	r0, r0, #1
   354c8:	add	r3, r2, #4
   354cc:	mov	sl, r2
   354d0:	str	r0, [sp, #16]
   354d4:	sub	r0, fp, #72	; 0x48
   354d8:	str	r3, [sp, #20]
   354dc:	orr	r0, r0, #4
   354e0:	str	r0, [sp, #12]
   354e4:	mov	r0, ip
   354e8:	ldr	r4, [r0], #4
   354ec:	str	r0, [sp, #40]	; 0x28
   354f0:	mov	r0, #0
   354f4:	add	r7, r7, r4, lsl #3
   354f8:	add	r3, r4, lr
   354fc:	cmp	r1, #1
   35500:	blt	35544 <GetDataSlab+0x12b80>
   35504:	ldr	r1, [sp, #56]	; 0x38
   35508:	mov	r2, #0
   3550c:	add	r4, r1, r0
   35510:	ldrb	r1, [r7]
   35514:	strb	r1, [r4, r2]
   35518:	add	r2, r2, #1
   3551c:	ldr	r5, [r6]
   35520:	ldr	r1, [sl]
   35524:	add	r7, r7, r5, lsl #3
   35528:	add	r3, r5, r3
   3552c:	cmp	r2, r1
   35530:	blt	35510 <GetDataSlab+0x12b4c>
   35534:	ldr	r2, [fp, #8]
   35538:	ldr	r4, [ip]
   3553c:	ldr	r2, [r2]
   35540:	b	35548 <GetDataSlab+0x12b84>
   35544:	ldr	r2, [sp, #32]
   35548:	str	r2, [sp, #32]
   3554c:	mls	r2, r5, r1, r2
   35550:	ldr	r6, [sp, #20]
   35554:	str	r0, [sp, #28]
   35558:	str	r4, [sp, #24]
   3555c:	sub	r2, r2, r4
   35560:	add	r7, r7, r2, lsl #3
   35564:	add	lr, r2, r3
   35568:	ldr	r2, [fp, #24]
   3556c:	cmp	r2, #2
   35570:	blt	35624 <GetDataSlab+0x12c60>
   35574:	ldr	r8, [sp, #16]
   35578:	mov	ip, #0
   3557c:	ldr	r2, [r9, ip]
   35580:	add	r2, r2, #1
   35584:	str	r2, [r9, ip]
   35588:	ldr	r3, [r6, ip]
   3558c:	sdiv	r4, r2, r3
   35590:	mls	r2, r4, r3, r2
   35594:	cmp	r2, #0
   35598:	bne	35614 <GetDataSlab+0x12c50>
   3559c:	mov	r2, #0
   355a0:	str	r2, [r9, ip]
   355a4:	ldr	r2, [sp, #44]	; 0x2c
   355a8:	ldr	r2, [r2, ip]
   355ac:	sdiv	r3, lr, r2
   355b0:	mls	r3, r3, r2, lr
   355b4:	cmp	r3, #0
   355b8:	beq	355e0 <GetDataSlab+0x12c1c>
   355bc:	ldr	r0, [sp, #40]	; 0x28
   355c0:	add	r4, sp, #64	; 0x40
   355c4:	sub	r2, r2, r3
   355c8:	ldr	r4, [r4, ip]
   355cc:	ldr	sl, [r0, ip]
   355d0:	mla	r2, sl, r4, r2
   355d4:	ldr	sl, [fp, #20]
   355d8:	add	lr, r2, lr
   355dc:	b	35600 <GetDataSlab+0x12c3c>
   355e0:	ldr	r2, [sp, #40]	; 0x28
   355e4:	ldr	r2, [r2, ip]
   355e8:	cmp	r2, #0
   355ec:	beq	35604 <GetDataSlab+0x12c40>
   355f0:	add	r3, sp, #64	; 0x40
   355f4:	ldr	r3, [r3, ip]
   355f8:	mla	lr, r3, r2, lr
   355fc:	mul	r2, r3, r2
   35600:	add	r7, r7, r2, lsl #3
   35604:	subs	r8, r8, #1
   35608:	add	ip, ip, #4
   3560c:	bne	3557c <GetDataSlab+0x12bb8>
   35610:	b	35624 <GetDataSlab+0x12c60>
   35614:	ldr	r2, [sp, #12]
   35618:	ldr	r2, [r2, ip]
   3561c:	add	r7, r7, r2, lsl #3
   35620:	add	lr, r2, lr
   35624:	ldr	r0, [sp, #28]
   35628:	ldr	r2, [sp, #36]	; 0x24
   3562c:	ldr	r6, [fp, #16]
   35630:	ldr	ip, [fp, #12]
   35634:	ldr	r4, [sp, #24]
   35638:	add	r0, r1, r0
   3563c:	cmp	r0, r2
   35640:	blt	354f4 <GetDataSlab+0x12b30>
   35644:	mov	r0, #0
   35648:	ldr	r1, [sp, #52]	; 0x34
   3564c:	cmp	r1, #13
   35650:	bne	24900 <GetDataSlab+0x1f3c>
   35654:	ldr	r0, [fp, #16]
   35658:	ldr	sl, [fp, #20]
   3565c:	mov	lr, #0
   35660:	add	r7, sp, #64	; 0x40
   35664:	sub	r9, fp, #72	; 0x48
   35668:	ldr	r3, [r0]
   3566c:	sub	r0, r3, #1
   35670:	str	r0, [fp, #-72]	; 0xffffffb8
   35674:	ldr	r0, [fp, #8]
   35678:	ldr	r0, [r0]
   3567c:	str	r0, [sp, #64]	; 0x40
   35680:	str	r0, [sp, #36]	; 0x24
   35684:	ldr	r0, [fp, #24]
   35688:	ldr	sl, [sl]
   3568c:	cmp	r0, #2
   35690:	mov	r0, sl
   35694:	str	sl, [sp, #40]	; 0x28
   35698:	blt	35740 <GetDataSlab+0x12d7c>
   3569c:	ldr	r6, [sp, #36]	; 0x24
   356a0:	ldr	r1, [fp, #8]
   356a4:	mov	r0, #1
   356a8:	mov	lr, #0
   356ac:	mov	r2, sl
   356b0:	str	sl, [sp, #40]	; 0x28
   356b4:	mov	r8, r6
   356b8:	ldr	r5, [fp, #16]
   356bc:	mov	r4, #0
   356c0:	ldr	r5, [r5, r0, lsl #2]
   356c4:	str	r6, [r7, r0, lsl #2]
   356c8:	ldr	r7, [fp, #8]
   356cc:	sub	r5, r5, #1
   356d0:	str	r5, [r9, r0, lsl #2]
   356d4:	ldr	ip, [r7, r0, lsl #2]
   356d8:	mov	r7, ip
   356dc:	mul	r6, r7, r6
   356e0:	ldr	r7, [r1, -r4, lsl #2]
   356e4:	add	r4, r4, #1
   356e8:	cmp	r0, r4
   356ec:	mul	r5, r5, r7
   356f0:	bne	356dc <GetDataSlab+0x12d18>
   356f4:	ldr	r2, [fp, #12]
   356f8:	add	r7, sp, #64	; 0x40
   356fc:	sub	r9, fp, #72	; 0x48
   35700:	add	r1, r1, #4
   35704:	str	r6, [r7, r0, lsl #2]
   35708:	str	r5, [r9, r0, lsl #2]
   3570c:	ldr	r4, [r2, r0, lsl #2]
   35710:	ldr	r2, [fp, #20]
   35714:	mla	lr, r4, r8, lr
   35718:	ldr	r4, [r2, r0, lsl #2]
   3571c:	ldr	r2, [sp, #40]	; 0x28
   35720:	add	r0, r0, #1
   35724:	mov	r8, r6
   35728:	mov	r6, ip
   3572c:	mul	r2, r4, r2
   35730:	ldr	r4, [fp, #24]
   35734:	str	r2, [sp, #40]	; 0x28
   35738:	cmp	r0, r4
   3573c:	bne	356b8 <GetDataSlab+0x12cf4>
   35740:	ldr	r0, [sp, #48]	; 0x30
   35744:	cmp	r3, #1
   35748:	add	r5, r0, lr, lsl #3
   3574c:	bne	3cd9c <GetDataSlab+0x1a3d8>
   35750:	ldr	r0, [sp, #40]	; 0x28
   35754:	cmp	r0, #1
   35758:	add	r0, sp, #64	; 0x40
   3575c:	blt	248fc <GetDataSlab+0x1f38>
   35760:	orr	r0, r0, #4
   35764:	ldr	r9, [fp, #12]
   35768:	ldr	r3, [fp, #20]
   3576c:	add	r1, sp, #104	; 0x68
   35770:	mov	r6, #0
   35774:	str	r0, [sp, #48]	; 0x30
   35778:	ldr	r0, [fp, #24]
   3577c:	orr	r1, r1, #4
   35780:	add	r2, r3, #4
   35784:	sub	r0, r0, #1
   35788:	str	r2, [sp, #52]	; 0x34
   3578c:	str	r0, [sp, #32]
   35790:	sub	r0, fp, #72	; 0x48
   35794:	orr	r0, r0, #4
   35798:	str	r0, [sp, #28]
   3579c:	ldr	r0, [r9], #4
   357a0:	str	r0, [sp, #44]	; 0x2c
   357a4:	ldr	r7, [sp, #44]	; 0x2c
   357a8:	cmp	sl, #1
   357ac:	add	r0, r5, r7, lsl #3
   357b0:	add	lr, r7, lr
   357b4:	blt	357f8 <GetDataSlab+0x12e34>
   357b8:	ldr	r2, [sp, #56]	; 0x38
   357bc:	ldr	r3, [fp, #20]
   357c0:	mov	r4, #0
   357c4:	mov	r5, r0
   357c8:	add	r7, r2, r6
   357cc:	ldrb	r2, [r5], #8
   357d0:	strb	r2, [r7, r4]
   357d4:	add	r4, r4, #1
   357d8:	ldr	sl, [r3]
   357dc:	cmp	r4, sl
   357e0:	blt	357cc <GetDataSlab+0x12e08>
   357e4:	ldr	r3, [fp, #12]
   357e8:	ldr	r7, [r3]
   357ec:	ldr	r3, [fp, #8]
   357f0:	ldr	r2, [r3]
   357f4:	str	r2, [sp, #36]	; 0x24
   357f8:	ldr	r3, [sp, #36]	; 0x24
   357fc:	mov	r2, r6
   35800:	str	r7, [sp, #44]	; 0x2c
   35804:	sub	r4, r3, r7
   35808:	add	r5, r0, r4, lsl #3
   3580c:	ldr	r0, [fp, #24]
   35810:	add	lr, lr, r4
   35814:	cmp	r0, #2
   35818:	blt	358c4 <GetDataSlab+0x12f00>
   3581c:	ldr	r8, [sp, #32]
   35820:	mov	r0, #0
   35824:	ldr	r4, [r1, r0]
   35828:	ldr	r3, [sp, #52]	; 0x34
   3582c:	add	r4, r4, #1
   35830:	str	r4, [r1, r0]
   35834:	ldr	r7, [r3, r0]
   35838:	sdiv	ip, r4, r7
   3583c:	mls	r7, ip, r7, r4
   35840:	cmp	r7, #0
   35844:	bne	358b4 <GetDataSlab+0x12ef0>
   35848:	mov	r3, #0
   3584c:	str	r3, [r1, r0]
   35850:	ldr	r3, [sp, #48]	; 0x30
   35854:	ldr	r4, [r3, r0]
   35858:	sdiv	r7, lr, r4
   3585c:	mls	r7, r7, r4, lr
   35860:	cmp	r7, #0
   35864:	beq	35884 <GetDataSlab+0x12ec0>
   35868:	add	r3, sp, #64	; 0x40
   3586c:	ldr	r6, [r9, r0]
   35870:	sub	r7, r4, r7
   35874:	ldr	r3, [r3, r0]
   35878:	mla	r3, r6, r3, r7
   3587c:	add	lr, r3, lr
   35880:	b	358a0 <GetDataSlab+0x12edc>
   35884:	ldr	r4, [r9, r0]
   35888:	cmp	r4, #0
   3588c:	beq	358a4 <GetDataSlab+0x12ee0>
   35890:	add	r3, sp, #64	; 0x40
   35894:	ldr	r3, [r3, r0]
   35898:	mla	lr, r3, r4, lr
   3589c:	mul	r3, r3, r4
   358a0:	add	r5, r5, r3, lsl #3
   358a4:	subs	r8, r8, #1
   358a8:	add	r0, r0, #4
   358ac:	bne	35824 <GetDataSlab+0x12e60>
   358b0:	b	358c4 <GetDataSlab+0x12f00>
   358b4:	ldr	r3, [sp, #28]
   358b8:	ldr	r0, [r3, r0]
   358bc:	add	r5, r5, r0, lsl #3
   358c0:	add	lr, r0, lr
   358c4:	ldr	r0, [sp, #40]	; 0x28
   358c8:	mov	r6, r2
   358cc:	add	r6, sl, r2
   358d0:	cmp	r6, r0
   358d4:	mov	r0, #0
   358d8:	blt	357a4 <GetDataSlab+0x12de0>
   358dc:	b	24900 <GetDataSlab+0x1f3c>
   358e0:	ldr	r0, [sp, #44]	; 0x2c
   358e4:	ldr	ip, [fp, #12]
   358e8:	cmp	r0, #1
   358ec:	add	r0, sp, #64	; 0x40
   358f0:	blt	248fc <GetDataSlab+0x1f38>
   358f4:	orr	r0, r0, #4
   358f8:	ldr	r4, [fp, #20]
   358fc:	add	r7, sp, #104	; 0x68
   35900:	str	r0, [sp, #48]	; 0x30
   35904:	ldr	r0, [fp, #24]
   35908:	orr	sl, r7, #4
   3590c:	add	r2, r4, #4
   35910:	sub	r0, r0, #1
   35914:	str	r2, [sp, #52]	; 0x34
   35918:	str	r0, [sp, #28]
   3591c:	sub	r0, fp, #72	; 0x48
   35920:	orr	r0, r0, #4
   35924:	str	r0, [sp, #24]
   35928:	ldr	r0, [ip], #4
   3592c:	str	r0, [sp, #32]
   35930:	mov	r0, #0
   35934:	str	r0, [sp, #36]	; 0x24
   35938:	ldr	r1, [sp, #32]
   3593c:	cmp	lr, #1
   35940:	add	r0, r1, r5
   35944:	add	r5, r6, r1
   35948:	blt	359a0 <GetDataSlab+0x12fdc>
   3594c:	ldr	r1, [sp, #56]	; 0x38
   35950:	ldr	r2, [sp, #36]	; 0x24
   35954:	ldr	lr, [fp, #8]
   35958:	ldr	r6, [fp, #16]
   3595c:	mov	r7, #0
   35960:	add	r4, r1, r2
   35964:	ldr	r1, [fp, #20]
   35968:	mov	r8, lr
   3596c:	ldrb	r2, [r5]
   35970:	strb	r2, [r4, r7]
   35974:	add	r7, r7, #1
   35978:	ldr	r3, [r6]
   3597c:	ldr	lr, [r1]
   35980:	add	r0, r3, r0
   35984:	add	r5, r5, r3
   35988:	cmp	r7, lr
   3598c:	blt	3596c <GetDataSlab+0x12fa8>
   35990:	ldr	r1, [fp, #12]
   35994:	ldr	r2, [r8]
   35998:	ldr	r1, [r1]
   3599c:	b	359a4 <GetDataSlab+0x12fe0>
   359a0:	ldr	r2, [sp, #40]	; 0x28
   359a4:	mls	r7, r3, lr, r2
   359a8:	str	r2, [sp, #40]	; 0x28
   359ac:	str	r1, [sp, #32]
   359b0:	sub	r7, r7, r1
   359b4:	add	r6, r5, r7
   359b8:	add	r5, r7, r0
   359bc:	ldr	r0, [fp, #24]
   359c0:	cmp	r0, #2
   359c4:	blt	35a80 <GetDataSlab+0x130bc>
   359c8:	ldr	r8, [sp, #28]
   359cc:	mov	r0, #0
   359d0:	ldr	r4, [sl, r0]
   359d4:	ldr	r1, [sp, #52]	; 0x34
   359d8:	add	r4, r4, #1
   359dc:	str	r4, [sl, r0]
   359e0:	ldr	r7, [r1, r0]
   359e4:	sdiv	r9, r4, r7
   359e8:	mls	r4, r9, r7, r4
   359ec:	cmp	r4, #0
   359f0:	bne	35a70 <GetDataSlab+0x130ac>
   359f4:	mov	r1, #0
   359f8:	str	r1, [sl, r0]
   359fc:	ldr	r1, [sp, #48]	; 0x30
   35a00:	ldr	r4, [r1, r0]
   35a04:	sdiv	r7, r5, r4
   35a08:	mls	r7, r7, r4, r5
   35a0c:	cmp	r7, #0
   35a10:	beq	35a44 <GetDataSlab+0x13080>
   35a14:	add	r1, sp, #64	; 0x40
   35a18:	mov	r2, r6
   35a1c:	mov	r6, r5
   35a20:	ldr	r5, [ip, r0]
   35a24:	sub	r4, r4, r7
   35a28:	ldr	r1, [r1, r0]
   35a2c:	mla	r1, r5, r1, r4
   35a30:	mov	r5, r6
   35a34:	mov	r6, r2
   35a38:	add	r5, r1, r5
   35a3c:	add	r6, r2, r1
   35a40:	b	35a60 <GetDataSlab+0x1309c>
   35a44:	ldr	r4, [ip, r0]
   35a48:	cmp	r4, #0
   35a4c:	beq	35a60 <GetDataSlab+0x1309c>
   35a50:	add	r1, sp, #64	; 0x40
   35a54:	ldr	r1, [r1, r0]
   35a58:	mla	r5, r1, r4, r5
   35a5c:	mla	r6, r1, r4, r6
   35a60:	subs	r8, r8, #1
   35a64:	add	r0, r0, #4
   35a68:	bne	359d0 <GetDataSlab+0x1300c>
   35a6c:	b	35a80 <GetDataSlab+0x130bc>
   35a70:	ldr	r1, [sp, #24]
   35a74:	ldr	r0, [r1, r0]
   35a78:	add	r6, r6, r0
   35a7c:	add	r5, r0, r5
   35a80:	ldr	r1, [sp, #36]	; 0x24
   35a84:	ldr	r0, [sp, #44]	; 0x2c
   35a88:	add	r1, lr, r1
   35a8c:	cmp	r1, r0
   35a90:	mov	r0, #0
   35a94:	str	r1, [sp, #36]	; 0x24
   35a98:	blt	35938 <GetDataSlab+0x12f74>
   35a9c:	b	24900 <GetDataSlab+0x1f3c>
   35aa0:	ldr	r0, [sp, #40]	; 0x28
   35aa4:	cmp	r0, #1
   35aa8:	add	r0, sp, #64	; 0x40
   35aac:	blt	248fc <GetDataSlab+0x1f38>
   35ab0:	orr	r0, r0, #4
   35ab4:	ldr	ip, [fp, #12]
   35ab8:	add	r1, sp, #104	; 0x68
   35abc:	str	r0, [sp, #48]	; 0x30
   35ac0:	ldr	r0, [fp, #24]
   35ac4:	orr	r6, r1, #4
   35ac8:	ldr	r1, [fp, #20]
   35acc:	str	r6, [sp, #44]	; 0x2c
   35ad0:	ldr	r2, [ip], #4
   35ad4:	sub	r0, r0, #1
   35ad8:	add	r1, r1, #4
   35adc:	str	r0, [sp, #28]
   35ae0:	sub	r0, fp, #72	; 0x48
   35ae4:	str	r1, [sp, #52]	; 0x34
   35ae8:	orr	r0, r0, #4
   35aec:	str	r0, [sp, #24]
   35af0:	mov	r0, #0
   35af4:	str	r0, [sp, #32]
   35af8:	add	r5, r5, r2, lsl #1
   35afc:	add	r0, r2, lr
   35b00:	cmp	sl, #1
   35b04:	blt	35b5c <GetDataSlab+0x13198>
   35b08:	ldr	r1, [sp, #56]	; 0x38
   35b0c:	ldr	r2, [sp, #32]
   35b10:	ldr	lr, [fp, #8]
   35b14:	ldr	r6, [fp, #16]
   35b18:	mov	r7, #0
   35b1c:	add	r4, r1, r2
   35b20:	ldr	r1, [fp, #20]
   35b24:	ldrb	r2, [r5]
   35b28:	strb	r2, [r4, r7]
   35b2c:	add	r7, r7, #1
   35b30:	ldr	r3, [r6]
   35b34:	ldr	sl, [r1]
   35b38:	add	r5, r5, r3, lsl #1
   35b3c:	add	r0, r3, r0
   35b40:	cmp	r7, sl
   35b44:	blt	35b24 <GetDataSlab+0x13160>
   35b48:	ldr	r1, [fp, #12]
   35b4c:	ldr	r2, [lr]
   35b50:	ldr	r6, [sp, #44]	; 0x2c
   35b54:	ldr	r1, [r1]
   35b58:	b	35b64 <GetDataSlab+0x131a0>
   35b5c:	mov	r1, r2
   35b60:	ldr	r2, [sp, #36]	; 0x24
   35b64:	mls	r7, r3, sl, r2
   35b68:	str	r2, [sp, #36]	; 0x24
   35b6c:	mov	r2, r1
   35b70:	sub	r7, r7, r1
   35b74:	add	lr, r7, r0
   35b78:	ldr	r0, [fp, #24]
   35b7c:	add	r5, r5, r7, lsl #1
   35b80:	cmp	r0, #2
   35b84:	blt	35c3c <GetDataSlab+0x13278>
   35b88:	ldr	r8, [sp, #28]
   35b8c:	mov	r0, #0
   35b90:	ldr	r4, [r6, r0]
   35b94:	ldr	r1, [sp, #52]	; 0x34
   35b98:	add	r4, r4, #1
   35b9c:	str	r4, [r6, r0]
   35ba0:	ldr	r7, [r1, r0]
   35ba4:	sdiv	r9, r4, r7
   35ba8:	mls	r4, r9, r7, r4
   35bac:	cmp	r4, #0
   35bb0:	bne	35c2c <GetDataSlab+0x13268>
   35bb4:	mov	r1, #0
   35bb8:	str	r1, [r6, r0]
   35bbc:	ldr	r1, [sp, #48]	; 0x30
   35bc0:	ldr	r4, [r1, r0]
   35bc4:	sdiv	r7, lr, r4
   35bc8:	mls	r7, r7, r4, lr
   35bcc:	cmp	r7, #0
   35bd0:	beq	35bfc <GetDataSlab+0x13238>
   35bd4:	add	r1, sp, #64	; 0x40
   35bd8:	mov	r6, r5
   35bdc:	ldr	r5, [ip, r0]
   35be0:	sub	r4, r4, r7
   35be4:	ldr	r1, [r1, r0]
   35be8:	mla	r1, r5, r1, r4
   35bec:	mov	r5, r6
   35bf0:	ldr	r6, [sp, #44]	; 0x2c
   35bf4:	add	lr, r1, lr
   35bf8:	b	35c18 <GetDataSlab+0x13254>
   35bfc:	ldr	r4, [ip, r0]
   35c00:	cmp	r4, #0
   35c04:	beq	35c1c <GetDataSlab+0x13258>
   35c08:	add	r1, sp, #64	; 0x40
   35c0c:	ldr	r1, [r1, r0]
   35c10:	mla	lr, r1, r4, lr
   35c14:	mul	r1, r1, r4
   35c18:	add	r5, r5, r1, lsl #1
   35c1c:	subs	r8, r8, #1
   35c20:	add	r0, r0, #4
   35c24:	bne	35b90 <GetDataSlab+0x131cc>
   35c28:	b	35c3c <GetDataSlab+0x13278>
   35c2c:	ldr	r1, [sp, #24]
   35c30:	ldr	r0, [r1, r0]
   35c34:	add	r5, r5, r0, lsl #1
   35c38:	add	lr, r0, lr
   35c3c:	ldr	r1, [sp, #32]
   35c40:	ldr	r0, [sp, #40]	; 0x28
   35c44:	add	r1, sl, r1
   35c48:	cmp	r1, r0
   35c4c:	mov	r0, #0
   35c50:	str	r1, [sp, #32]
   35c54:	blt	35af8 <GetDataSlab+0x13134>
   35c58:	b	24900 <GetDataSlab+0x1f3c>
   35c5c:	ldr	r0, [sp, #40]	; 0x28
   35c60:	cmp	r0, #1
   35c64:	add	r0, sp, #64	; 0x40
   35c68:	blt	248fc <GetDataSlab+0x1f38>
   35c6c:	orr	r0, r0, #4
   35c70:	ldr	ip, [fp, #12]
   35c74:	add	r1, sp, #104	; 0x68
   35c78:	str	r0, [sp, #48]	; 0x30
   35c7c:	ldr	r0, [fp, #24]
   35c80:	orr	r6, r1, #4
   35c84:	ldr	r1, [fp, #20]
   35c88:	str	r6, [sp, #44]	; 0x2c
   35c8c:	ldr	r2, [ip], #4
   35c90:	sub	r0, r0, #1
   35c94:	add	r1, r1, #4
   35c98:	str	r0, [sp, #28]
   35c9c:	sub	r0, fp, #72	; 0x48
   35ca0:	str	r1, [sp, #52]	; 0x34
   35ca4:	orr	r0, r0, #4
   35ca8:	str	r0, [sp, #24]
   35cac:	mov	r0, #0
   35cb0:	str	r0, [sp, #32]
   35cb4:	add	r5, r5, r2, lsl #1
   35cb8:	add	r0, r2, lr
   35cbc:	cmp	sl, #1
   35cc0:	blt	35d18 <GetDataSlab+0x13354>
   35cc4:	ldr	r1, [sp, #56]	; 0x38
   35cc8:	ldr	r2, [sp, #32]
   35ccc:	ldr	lr, [fp, #8]
   35cd0:	ldr	r6, [fp, #16]
   35cd4:	mov	r7, #0
   35cd8:	add	r4, r1, r2
   35cdc:	ldr	r1, [fp, #20]
   35ce0:	ldrb	r2, [r5]
   35ce4:	strb	r2, [r4, r7]
   35ce8:	add	r7, r7, #1
   35cec:	ldr	r3, [r6]
   35cf0:	ldr	sl, [r1]
   35cf4:	add	r5, r5, r3, lsl #1
   35cf8:	add	r0, r3, r0
   35cfc:	cmp	r7, sl
   35d00:	blt	35ce0 <GetDataSlab+0x1331c>
   35d04:	ldr	r1, [fp, #12]
   35d08:	ldr	r2, [lr]
   35d0c:	ldr	r6, [sp, #44]	; 0x2c
   35d10:	ldr	r1, [r1]
   35d14:	b	35d20 <GetDataSlab+0x1335c>
   35d18:	mov	r1, r2
   35d1c:	ldr	r2, [sp, #36]	; 0x24
   35d20:	mls	r7, r3, sl, r2
   35d24:	str	r2, [sp, #36]	; 0x24
   35d28:	mov	r2, r1
   35d2c:	sub	r7, r7, r1
   35d30:	add	lr, r7, r0
   35d34:	ldr	r0, [fp, #24]
   35d38:	add	r5, r5, r7, lsl #1
   35d3c:	cmp	r0, #2
   35d40:	blt	35df8 <GetDataSlab+0x13434>
   35d44:	ldr	r8, [sp, #28]
   35d48:	mov	r0, #0
   35d4c:	ldr	r4, [r6, r0]
   35d50:	ldr	r1, [sp, #52]	; 0x34
   35d54:	add	r4, r4, #1
   35d58:	str	r4, [r6, r0]
   35d5c:	ldr	r7, [r1, r0]
   35d60:	sdiv	r9, r4, r7
   35d64:	mls	r4, r9, r7, r4
   35d68:	cmp	r4, #0
   35d6c:	bne	35de8 <GetDataSlab+0x13424>
   35d70:	mov	r1, #0
   35d74:	str	r1, [r6, r0]
   35d78:	ldr	r1, [sp, #48]	; 0x30
   35d7c:	ldr	r4, [r1, r0]
   35d80:	sdiv	r7, lr, r4
   35d84:	mls	r7, r7, r4, lr
   35d88:	cmp	r7, #0
   35d8c:	beq	35db8 <GetDataSlab+0x133f4>
   35d90:	add	r1, sp, #64	; 0x40
   35d94:	mov	r6, r5
   35d98:	ldr	r5, [ip, r0]
   35d9c:	sub	r4, r4, r7
   35da0:	ldr	r1, [r1, r0]
   35da4:	mla	r1, r5, r1, r4
   35da8:	mov	r5, r6
   35dac:	ldr	r6, [sp, #44]	; 0x2c
   35db0:	add	lr, r1, lr
   35db4:	b	35dd4 <GetDataSlab+0x13410>
   35db8:	ldr	r4, [ip, r0]
   35dbc:	cmp	r4, #0
   35dc0:	beq	35dd8 <GetDataSlab+0x13414>
   35dc4:	add	r1, sp, #64	; 0x40
   35dc8:	ldr	r1, [r1, r0]
   35dcc:	mla	lr, r1, r4, lr
   35dd0:	mul	r1, r1, r4
   35dd4:	add	r5, r5, r1, lsl #1
   35dd8:	subs	r8, r8, #1
   35ddc:	add	r0, r0, #4
   35de0:	bne	35d4c <GetDataSlab+0x13388>
   35de4:	b	35df8 <GetDataSlab+0x13434>
   35de8:	ldr	r1, [sp, #24]
   35dec:	ldr	r0, [r1, r0]
   35df0:	add	r5, r5, r0, lsl #1
   35df4:	add	lr, r0, lr
   35df8:	ldr	r1, [sp, #32]
   35dfc:	ldr	r0, [sp, #40]	; 0x28
   35e00:	add	r1, sl, r1
   35e04:	cmp	r1, r0
   35e08:	mov	r0, #0
   35e0c:	str	r1, [sp, #32]
   35e10:	blt	35cb4 <GetDataSlab+0x132f0>
   35e14:	b	24900 <GetDataSlab+0x1f3c>
   35e18:	ldr	r0, [sp, #44]	; 0x2c
   35e1c:	ldr	ip, [fp, #12]
   35e20:	cmp	r0, #1
   35e24:	add	r0, sp, #64	; 0x40
   35e28:	blt	248fc <GetDataSlab+0x1f38>
   35e2c:	orr	r0, r0, #4
   35e30:	ldr	r4, [fp, #20]
   35e34:	add	r7, sp, #104	; 0x68
   35e38:	str	r0, [sp, #48]	; 0x30
   35e3c:	ldr	r0, [fp, #24]
   35e40:	orr	sl, r7, #4
   35e44:	add	r2, r4, #4
   35e48:	sub	r0, r0, #1
   35e4c:	str	r2, [sp, #52]	; 0x34
   35e50:	str	r0, [sp, #28]
   35e54:	sub	r0, fp, #72	; 0x48
   35e58:	orr	r0, r0, #4
   35e5c:	str	r0, [sp, #24]
   35e60:	ldr	r0, [ip], #4
   35e64:	str	r0, [sp, #32]
   35e68:	mov	r0, #0
   35e6c:	str	r0, [sp, #36]	; 0x24
   35e70:	ldr	r1, [sp, #32]
   35e74:	cmp	lr, #1
   35e78:	add	r0, r1, r5
   35e7c:	add	r5, r6, r1, lsl #2
   35e80:	blt	35ed8 <GetDataSlab+0x13514>
   35e84:	ldr	r1, [sp, #56]	; 0x38
   35e88:	ldr	r2, [sp, #36]	; 0x24
   35e8c:	ldr	lr, [fp, #8]
   35e90:	ldr	r6, [fp, #16]
   35e94:	mov	r7, #0
   35e98:	add	r4, r1, r2
   35e9c:	ldr	r1, [fp, #20]
   35ea0:	mov	r8, lr
   35ea4:	ldr	r2, [r5]
   35ea8:	strb	r2, [r4, r7]
   35eac:	add	r7, r7, #1
   35eb0:	ldr	r3, [r6]
   35eb4:	ldr	lr, [r1]
   35eb8:	add	r5, r5, r3, lsl #2
   35ebc:	add	r0, r3, r0
   35ec0:	cmp	r7, lr
   35ec4:	blt	35ea4 <GetDataSlab+0x134e0>
   35ec8:	ldr	r1, [fp, #12]
   35ecc:	ldr	r2, [r8]
   35ed0:	ldr	r1, [r1]
   35ed4:	b	35edc <GetDataSlab+0x13518>
   35ed8:	ldr	r2, [sp, #40]	; 0x28
   35edc:	mls	r7, r3, lr, r2
   35ee0:	str	r2, [sp, #40]	; 0x28
   35ee4:	str	r1, [sp, #32]
   35ee8:	sub	r7, r7, r1
   35eec:	add	r6, r5, r7, lsl #2
   35ef0:	add	r5, r7, r0
   35ef4:	ldr	r0, [fp, #24]
   35ef8:	cmp	r0, #2
   35efc:	blt	35fbc <GetDataSlab+0x135f8>
   35f00:	ldr	r8, [sp, #28]
   35f04:	mov	r0, #0
   35f08:	ldr	r4, [sl, r0]
   35f0c:	ldr	r1, [sp, #52]	; 0x34
   35f10:	add	r4, r4, #1
   35f14:	str	r4, [sl, r0]
   35f18:	ldr	r7, [r1, r0]
   35f1c:	sdiv	r9, r4, r7
   35f20:	mls	r4, r9, r7, r4
   35f24:	cmp	r4, #0
   35f28:	bne	35fac <GetDataSlab+0x135e8>
   35f2c:	mov	r1, #0
   35f30:	str	r1, [sl, r0]
   35f34:	ldr	r1, [sp, #48]	; 0x30
   35f38:	ldr	r4, [r1, r0]
   35f3c:	sdiv	r7, r5, r4
   35f40:	mls	r7, r7, r4, r5
   35f44:	cmp	r7, #0
   35f48:	beq	35f7c <GetDataSlab+0x135b8>
   35f4c:	add	r1, sp, #64	; 0x40
   35f50:	mov	r2, r6
   35f54:	mov	r6, r5
   35f58:	ldr	r5, [ip, r0]
   35f5c:	sub	r4, r4, r7
   35f60:	ldr	r1, [r1, r0]
   35f64:	mla	r1, r5, r1, r4
   35f68:	mov	r5, r6
   35f6c:	mov	r6, r2
   35f70:	add	r5, r1, r5
   35f74:	add	r6, r2, r1, lsl #2
   35f78:	b	35f9c <GetDataSlab+0x135d8>
   35f7c:	ldr	r4, [ip, r0]
   35f80:	cmp	r4, #0
   35f84:	beq	35f9c <GetDataSlab+0x135d8>
   35f88:	add	r1, sp, #64	; 0x40
   35f8c:	ldr	r1, [r1, r0]
   35f90:	mla	r5, r1, r4, r5
   35f94:	mul	r1, r1, r4
   35f98:	add	r6, r6, r1, lsl #2
   35f9c:	subs	r8, r8, #1
   35fa0:	add	r0, r0, #4
   35fa4:	bne	35f08 <GetDataSlab+0x13544>
   35fa8:	b	35fbc <GetDataSlab+0x135f8>
   35fac:	ldr	r1, [sp, #24]
   35fb0:	ldr	r0, [r1, r0]
   35fb4:	add	r6, r6, r0, lsl #2
   35fb8:	add	r5, r0, r5
   35fbc:	ldr	r1, [sp, #36]	; 0x24
   35fc0:	ldr	r0, [sp, #44]	; 0x2c
   35fc4:	add	r1, lr, r1
   35fc8:	cmp	r1, r0
   35fcc:	mov	r0, #0
   35fd0:	str	r1, [sp, #36]	; 0x24
   35fd4:	blt	35e70 <GetDataSlab+0x134ac>
   35fd8:	b	24900 <GetDataSlab+0x1f3c>
   35fdc:	ldr	r0, [sp, #44]	; 0x2c
   35fe0:	ldr	ip, [fp, #12]
   35fe4:	cmp	r0, #1
   35fe8:	add	r0, sp, #64	; 0x40
   35fec:	blt	248fc <GetDataSlab+0x1f38>
   35ff0:	orr	r0, r0, #4
   35ff4:	ldr	r4, [fp, #20]
   35ff8:	add	r7, sp, #104	; 0x68
   35ffc:	str	r0, [sp, #48]	; 0x30
   36000:	ldr	r0, [fp, #24]
   36004:	orr	sl, r7, #4
   36008:	add	r2, r4, #4
   3600c:	sub	r0, r0, #1
   36010:	str	r2, [sp, #52]	; 0x34
   36014:	str	r0, [sp, #28]
   36018:	sub	r0, fp, #72	; 0x48
   3601c:	orr	r0, r0, #4
   36020:	str	r0, [sp, #24]
   36024:	ldr	r0, [ip], #4
   36028:	str	r0, [sp, #32]
   3602c:	mov	r0, #0
   36030:	str	r0, [sp, #36]	; 0x24
   36034:	ldr	r1, [sp, #32]
   36038:	cmp	lr, #1
   3603c:	add	r0, r1, r5
   36040:	add	r5, r6, r1, lsl #2
   36044:	blt	3609c <GetDataSlab+0x136d8>
   36048:	ldr	r1, [sp, #56]	; 0x38
   3604c:	ldr	r2, [sp, #36]	; 0x24
   36050:	ldr	lr, [fp, #8]
   36054:	ldr	r6, [fp, #16]
   36058:	mov	r7, #0
   3605c:	add	r4, r1, r2
   36060:	ldr	r1, [fp, #20]
   36064:	mov	r8, lr
   36068:	ldr	r2, [r5]
   3606c:	strb	r2, [r4, r7]
   36070:	add	r7, r7, #1
   36074:	ldr	r3, [r6]
   36078:	ldr	lr, [r1]
   3607c:	add	r5, r5, r3, lsl #2
   36080:	add	r0, r3, r0
   36084:	cmp	r7, lr
   36088:	blt	36068 <GetDataSlab+0x136a4>
   3608c:	ldr	r1, [fp, #12]
   36090:	ldr	r2, [r8]
   36094:	ldr	r1, [r1]
   36098:	b	360a0 <GetDataSlab+0x136dc>
   3609c:	ldr	r2, [sp, #40]	; 0x28
   360a0:	mls	r7, r3, lr, r2
   360a4:	str	r2, [sp, #40]	; 0x28
   360a8:	str	r1, [sp, #32]
   360ac:	sub	r7, r7, r1
   360b0:	add	r6, r5, r7, lsl #2
   360b4:	add	r5, r7, r0
   360b8:	ldr	r0, [fp, #24]
   360bc:	cmp	r0, #2
   360c0:	blt	36180 <GetDataSlab+0x137bc>
   360c4:	ldr	r8, [sp, #28]
   360c8:	mov	r0, #0
   360cc:	ldr	r4, [sl, r0]
   360d0:	ldr	r1, [sp, #52]	; 0x34
   360d4:	add	r4, r4, #1
   360d8:	str	r4, [sl, r0]
   360dc:	ldr	r7, [r1, r0]
   360e0:	sdiv	r9, r4, r7
   360e4:	mls	r4, r9, r7, r4
   360e8:	cmp	r4, #0
   360ec:	bne	36170 <GetDataSlab+0x137ac>
   360f0:	mov	r1, #0
   360f4:	str	r1, [sl, r0]
   360f8:	ldr	r1, [sp, #48]	; 0x30
   360fc:	ldr	r4, [r1, r0]
   36100:	sdiv	r7, r5, r4
   36104:	mls	r7, r7, r4, r5
   36108:	cmp	r7, #0
   3610c:	beq	36140 <GetDataSlab+0x1377c>
   36110:	add	r1, sp, #64	; 0x40
   36114:	mov	r2, r6
   36118:	mov	r6, r5
   3611c:	ldr	r5, [ip, r0]
   36120:	sub	r4, r4, r7
   36124:	ldr	r1, [r1, r0]
   36128:	mla	r1, r5, r1, r4
   3612c:	mov	r5, r6
   36130:	mov	r6, r2
   36134:	add	r5, r1, r5
   36138:	add	r6, r2, r1, lsl #2
   3613c:	b	36160 <GetDataSlab+0x1379c>
   36140:	ldr	r4, [ip, r0]
   36144:	cmp	r4, #0
   36148:	beq	36160 <GetDataSlab+0x1379c>
   3614c:	add	r1, sp, #64	; 0x40
   36150:	ldr	r1, [r1, r0]
   36154:	mla	r5, r1, r4, r5
   36158:	mul	r1, r1, r4
   3615c:	add	r6, r6, r1, lsl #2
   36160:	subs	r8, r8, #1
   36164:	add	r0, r0, #4
   36168:	bne	360cc <GetDataSlab+0x13708>
   3616c:	b	36180 <GetDataSlab+0x137bc>
   36170:	ldr	r1, [sp, #24]
   36174:	ldr	r0, [r1, r0]
   36178:	add	r6, r6, r0, lsl #2
   3617c:	add	r5, r0, r5
   36180:	ldr	r1, [sp, #36]	; 0x24
   36184:	ldr	r0, [sp, #44]	; 0x2c
   36188:	add	r1, lr, r1
   3618c:	cmp	r1, r0
   36190:	mov	r0, #0
   36194:	str	r1, [sp, #36]	; 0x24
   36198:	blt	36034 <GetDataSlab+0x13670>
   3619c:	b	24900 <GetDataSlab+0x1f3c>
   361a0:	ldr	r0, [sp, #40]	; 0x28
   361a4:	cmp	r0, #1
   361a8:	add	r0, sp, #64	; 0x40
   361ac:	blt	248fc <GetDataSlab+0x1f38>
   361b0:	add	r7, sp, #104	; 0x68
   361b4:	orr	r0, r0, #4
   361b8:	ldr	ip, [fp, #12]
   361bc:	orr	r6, r7, #4
   361c0:	ldr	r7, [fp, #20]
   361c4:	str	r0, [sp, #48]	; 0x30
   361c8:	ldr	r0, [fp, #24]
   361cc:	str	r6, [sp, #44]	; 0x2c
   361d0:	add	r1, r7, #4
   361d4:	sub	r0, r0, #1
   361d8:	str	r1, [sp, #52]	; 0x34
   361dc:	ldr	r1, [ip], #4
   361e0:	str	r0, [sp, #28]
   361e4:	sub	r0, fp, #72	; 0x48
   361e8:	orr	r0, r0, #4
   361ec:	str	r0, [sp, #24]
   361f0:	mov	r0, #0
   361f4:	str	r0, [sp, #32]
   361f8:	add	r5, r5, r1, lsl #2
   361fc:	add	r0, r1, lr
   36200:	cmp	sl, #1
   36204:	blt	36264 <GetDataSlab+0x138a0>
   36208:	ldr	r2, [sp, #56]	; 0x38
   3620c:	ldr	r1, [sp, #32]
   36210:	ldr	r6, [fp, #20]
   36214:	ldr	lr, [fp, #8]
   36218:	mov	r7, #0
   3621c:	add	r4, r2, r1
   36220:	ldr	r1, [fp, #16]
   36224:	vldr	s0, [r5]
   36228:	vcvt.u32.f32	s0, s0
   3622c:	vmov	r2, s0
   36230:	strb	r2, [r4, r7]
   36234:	add	r7, r7, #1
   36238:	ldr	r3, [r1]
   3623c:	ldr	sl, [r6]
   36240:	add	r5, r5, r3, lsl #2
   36244:	add	r0, r3, r0
   36248:	cmp	r7, sl
   3624c:	blt	36224 <GetDataSlab+0x13860>
   36250:	ldr	r7, [fp, #12]
   36254:	ldr	r1, [lr]
   36258:	ldr	r6, [sp, #44]	; 0x2c
   3625c:	ldr	r2, [r7]
   36260:	b	3626c <GetDataSlab+0x138a8>
   36264:	mov	r2, r1
   36268:	ldr	r1, [sp, #36]	; 0x24
   3626c:	mls	r7, r3, sl, r1
   36270:	str	r1, [sp, #36]	; 0x24
   36274:	mov	r1, r2
   36278:	sub	r7, r7, r2
   3627c:	add	lr, r7, r0
   36280:	ldr	r0, [fp, #24]
   36284:	add	r5, r5, r7, lsl #2
   36288:	cmp	r0, #2
   3628c:	blt	3634c <GetDataSlab+0x13988>
   36290:	ldr	r8, [sp, #28]
   36294:	mov	r0, #0
   36298:	ldr	r4, [r6, r0]
   3629c:	ldr	r2, [sp, #52]	; 0x34
   362a0:	add	r4, r4, #1
   362a4:	str	r4, [r6, r0]
   362a8:	ldr	r7, [r2, r0]
   362ac:	sdiv	r9, r4, r7
   362b0:	mls	r4, r9, r7, r4
   362b4:	cmp	r4, #0
   362b8:	bne	3633c <GetDataSlab+0x13978>
   362bc:	mov	r2, #0
   362c0:	str	r2, [r6, r0]
   362c4:	ldr	r2, [sp, #48]	; 0x30
   362c8:	ldr	r4, [r2, r0]
   362cc:	sdiv	r7, lr, r4
   362d0:	mls	r7, r7, r4, lr
   362d4:	cmp	r7, #0
   362d8:	beq	36304 <GetDataSlab+0x13940>
   362dc:	mov	r2, r5
   362e0:	add	r5, sp, #64	; 0x40
   362e4:	sub	r4, r4, r7
   362e8:	ldr	r6, [r5, r0]
   362ec:	ldr	r5, [ip, r0]
   362f0:	mla	r4, r5, r6, r4
   362f4:	ldr	r6, [sp, #44]	; 0x2c
   362f8:	mov	r5, r2
   362fc:	add	lr, r4, lr
   36300:	b	36328 <GetDataSlab+0x13964>
   36304:	ldr	r4, [ip, r0]
   36308:	cmp	r4, #0
   3630c:	beq	3632c <GetDataSlab+0x13968>
   36310:	mov	r2, r5
   36314:	add	r5, sp, #64	; 0x40
   36318:	ldr	r5, [r5, r0]
   3631c:	mla	lr, r5, r4, lr
   36320:	mul	r4, r5, r4
   36324:	mov	r5, r2
   36328:	add	r5, r2, r4, lsl #2
   3632c:	subs	r8, r8, #1
   36330:	add	r0, r0, #4
   36334:	bne	36298 <GetDataSlab+0x138d4>
   36338:	b	3634c <GetDataSlab+0x13988>
   3633c:	ldr	r2, [sp, #24]
   36340:	ldr	r0, [r2, r0]
   36344:	add	r5, r5, r0, lsl #2
   36348:	add	lr, r0, lr
   3634c:	ldr	r2, [sp, #32]
   36350:	ldr	r0, [sp, #40]	; 0x28
   36354:	add	r2, sl, r2
   36358:	cmp	r2, r0
   3635c:	mov	r0, #0
   36360:	str	r2, [sp, #32]
   36364:	blt	361f8 <GetDataSlab+0x13834>
   36368:	b	24900 <GetDataSlab+0x1f3c>
   3636c:	ldr	r0, [sp, #40]	; 0x28
   36370:	cmp	r0, #1
   36374:	add	r0, sp, #64	; 0x40
   36378:	blt	248fc <GetDataSlab+0x1f38>
   3637c:	add	r7, sp, #104	; 0x68
   36380:	orr	r0, r0, #4
   36384:	ldr	ip, [fp, #12]
   36388:	orr	r6, r7, #4
   3638c:	ldr	r7, [fp, #20]
   36390:	str	r0, [sp, #48]	; 0x30
   36394:	ldr	r0, [fp, #24]
   36398:	str	r6, [sp, #44]	; 0x2c
   3639c:	add	r1, r7, #4
   363a0:	sub	r0, r0, #1
   363a4:	str	r1, [sp, #52]	; 0x34
   363a8:	ldr	r1, [ip], #4
   363ac:	str	r0, [sp, #28]
   363b0:	sub	r0, fp, #72	; 0x48
   363b4:	orr	r0, r0, #4
   363b8:	str	r0, [sp, #24]
   363bc:	mov	r0, #0
   363c0:	str	r0, [sp, #32]
   363c4:	add	r5, r5, r1, lsl #3
   363c8:	add	r0, r1, lr
   363cc:	cmp	sl, #1
   363d0:	blt	36430 <GetDataSlab+0x13a6c>
   363d4:	ldr	r2, [sp, #56]	; 0x38
   363d8:	ldr	r1, [sp, #32]
   363dc:	ldr	r6, [fp, #20]
   363e0:	ldr	lr, [fp, #8]
   363e4:	mov	r7, #0
   363e8:	add	r4, r2, r1
   363ec:	ldr	r1, [fp, #16]
   363f0:	vldr	d16, [r5]
   363f4:	vcvt.u32.f64	s0, d16
   363f8:	vmov	r2, s0
   363fc:	strb	r2, [r4, r7]
   36400:	add	r7, r7, #1
   36404:	ldr	r3, [r1]
   36408:	ldr	sl, [r6]
   3640c:	add	r5, r5, r3, lsl #3
   36410:	add	r0, r3, r0
   36414:	cmp	r7, sl
   36418:	blt	363f0 <GetDataSlab+0x13a2c>
   3641c:	ldr	r7, [fp, #12]
   36420:	ldr	r1, [lr]
   36424:	ldr	r6, [sp, #44]	; 0x2c
   36428:	ldr	r2, [r7]
   3642c:	b	36438 <GetDataSlab+0x13a74>
   36430:	mov	r2, r1
   36434:	ldr	r1, [sp, #36]	; 0x24
   36438:	mls	r7, r3, sl, r1
   3643c:	str	r1, [sp, #36]	; 0x24
   36440:	mov	r1, r2
   36444:	sub	r7, r7, r2
   36448:	add	lr, r7, r0
   3644c:	ldr	r0, [fp, #24]
   36450:	add	r5, r5, r7, lsl #3
   36454:	cmp	r0, #2
   36458:	blt	36518 <GetDataSlab+0x13b54>
   3645c:	ldr	r8, [sp, #28]
   36460:	mov	r0, #0
   36464:	ldr	r4, [r6, r0]
   36468:	ldr	r2, [sp, #52]	; 0x34
   3646c:	add	r4, r4, #1
   36470:	str	r4, [r6, r0]
   36474:	ldr	r7, [r2, r0]
   36478:	sdiv	r9, r4, r7
   3647c:	mls	r4, r9, r7, r4
   36480:	cmp	r4, #0
   36484:	bne	36508 <GetDataSlab+0x13b44>
   36488:	mov	r2, #0
   3648c:	str	r2, [r6, r0]
   36490:	ldr	r2, [sp, #48]	; 0x30
   36494:	ldr	r4, [r2, r0]
   36498:	sdiv	r7, lr, r4
   3649c:	mls	r7, r7, r4, lr
   364a0:	cmp	r7, #0
   364a4:	beq	364d0 <GetDataSlab+0x13b0c>
   364a8:	mov	r2, r5
   364ac:	add	r5, sp, #64	; 0x40
   364b0:	sub	r4, r4, r7
   364b4:	ldr	r6, [r5, r0]
   364b8:	ldr	r5, [ip, r0]
   364bc:	mla	r4, r5, r6, r4
   364c0:	ldr	r6, [sp, #44]	; 0x2c
   364c4:	mov	r5, r2
   364c8:	add	lr, r4, lr
   364cc:	b	364f4 <GetDataSlab+0x13b30>
   364d0:	ldr	r4, [ip, r0]
   364d4:	cmp	r4, #0
   364d8:	beq	364f8 <GetDataSlab+0x13b34>
   364dc:	mov	r2, r5
   364e0:	add	r5, sp, #64	; 0x40
   364e4:	ldr	r5, [r5, r0]
   364e8:	mla	lr, r5, r4, lr
   364ec:	mul	r4, r5, r4
   364f0:	mov	r5, r2
   364f4:	add	r5, r2, r4, lsl #3
   364f8:	subs	r8, r8, #1
   364fc:	add	r0, r0, #4
   36500:	bne	36464 <GetDataSlab+0x13aa0>
   36504:	b	36518 <GetDataSlab+0x13b54>
   36508:	ldr	r2, [sp, #24]
   3650c:	ldr	r0, [r2, r0]
   36510:	add	r5, r5, r0, lsl #3
   36514:	add	lr, r0, lr
   36518:	ldr	r2, [sp, #32]
   3651c:	ldr	r0, [sp, #40]	; 0x28
   36520:	add	r2, sl, r2
   36524:	cmp	r2, r0
   36528:	mov	r0, #0
   3652c:	str	r2, [sp, #32]
   36530:	blt	363c4 <GetDataSlab+0x13a00>
   36534:	b	24900 <GetDataSlab+0x1f3c>
   36538:	ldr	r0, [sp, #36]	; 0x24
   3653c:	ldr	r6, [fp, #16]
   36540:	ldr	ip, [fp, #12]
   36544:	cmp	r0, #1
   36548:	add	r0, sp, #64	; 0x40
   3654c:	blt	366e8 <GetDataSlab+0x13d24>
   36550:	orr	r0, r0, #4
   36554:	add	r2, sp, #104	; 0x68
   36558:	str	r0, [sp, #44]	; 0x2c
   3655c:	ldr	r0, [fp, #24]
   36560:	orr	r9, r2, #4
   36564:	ldr	r2, [fp, #20]
   36568:	sub	r0, r0, #1
   3656c:	add	r3, r2, #4
   36570:	mov	sl, r2
   36574:	str	r0, [sp, #16]
   36578:	sub	r0, fp, #72	; 0x48
   3657c:	str	r3, [sp, #20]
   36580:	orr	r0, r0, #4
   36584:	str	r0, [sp, #12]
   36588:	mov	r0, ip
   3658c:	ldr	r4, [r0], #4
   36590:	str	r0, [sp, #40]	; 0x28
   36594:	mov	r0, #0
   36598:	add	r7, r7, r4, lsl #3
   3659c:	add	r3, r4, lr
   365a0:	cmp	r1, #1
   365a4:	blt	365e8 <GetDataSlab+0x13c24>
   365a8:	ldr	r1, [sp, #56]	; 0x38
   365ac:	mov	r2, #0
   365b0:	add	r4, r1, r0
   365b4:	ldrb	r1, [r7]
   365b8:	strb	r1, [r4, r2]
   365bc:	add	r2, r2, #1
   365c0:	ldr	r5, [r6]
   365c4:	ldr	r1, [sl]
   365c8:	add	r7, r7, r5, lsl #3
   365cc:	add	r3, r5, r3
   365d0:	cmp	r2, r1
   365d4:	blt	365b4 <GetDataSlab+0x13bf0>
   365d8:	ldr	r2, [fp, #8]
   365dc:	ldr	r4, [ip]
   365e0:	ldr	r2, [r2]
   365e4:	b	365ec <GetDataSlab+0x13c28>
   365e8:	ldr	r2, [sp, #32]
   365ec:	str	r2, [sp, #32]
   365f0:	mls	r2, r5, r1, r2
   365f4:	ldr	r6, [sp, #20]
   365f8:	str	r0, [sp, #28]
   365fc:	str	r4, [sp, #24]
   36600:	sub	r2, r2, r4
   36604:	add	r7, r7, r2, lsl #3
   36608:	add	lr, r2, r3
   3660c:	ldr	r2, [fp, #24]
   36610:	cmp	r2, #2
   36614:	blt	366c8 <GetDataSlab+0x13d04>
   36618:	ldr	r8, [sp, #16]
   3661c:	mov	ip, #0
   36620:	ldr	r2, [r9, ip]
   36624:	add	r2, r2, #1
   36628:	str	r2, [r9, ip]
   3662c:	ldr	r3, [r6, ip]
   36630:	sdiv	r4, r2, r3
   36634:	mls	r2, r4, r3, r2
   36638:	cmp	r2, #0
   3663c:	bne	366b8 <GetDataSlab+0x13cf4>
   36640:	mov	r2, #0
   36644:	str	r2, [r9, ip]
   36648:	ldr	r2, [sp, #44]	; 0x2c
   3664c:	ldr	r2, [r2, ip]
   36650:	sdiv	r3, lr, r2
   36654:	mls	r3, r3, r2, lr
   36658:	cmp	r3, #0
   3665c:	beq	36684 <GetDataSlab+0x13cc0>
   36660:	ldr	r0, [sp, #40]	; 0x28
   36664:	add	r4, sp, #64	; 0x40
   36668:	sub	r2, r2, r3
   3666c:	ldr	r4, [r4, ip]
   36670:	ldr	sl, [r0, ip]
   36674:	mla	r2, sl, r4, r2
   36678:	ldr	sl, [fp, #20]
   3667c:	add	lr, r2, lr
   36680:	b	366a4 <GetDataSlab+0x13ce0>
   36684:	ldr	r2, [sp, #40]	; 0x28
   36688:	ldr	r2, [r2, ip]
   3668c:	cmp	r2, #0
   36690:	beq	366a8 <GetDataSlab+0x13ce4>
   36694:	add	r3, sp, #64	; 0x40
   36698:	ldr	r3, [r3, ip]
   3669c:	mla	lr, r3, r2, lr
   366a0:	mul	r2, r3, r2
   366a4:	add	r7, r7, r2, lsl #3
   366a8:	subs	r8, r8, #1
   366ac:	add	ip, ip, #4
   366b0:	bne	36620 <GetDataSlab+0x13c5c>
   366b4:	b	366c8 <GetDataSlab+0x13d04>
   366b8:	ldr	r2, [sp, #12]
   366bc:	ldr	r2, [r2, ip]
   366c0:	add	r7, r7, r2, lsl #3
   366c4:	add	lr, r2, lr
   366c8:	ldr	r0, [sp, #28]
   366cc:	ldr	r2, [sp, #36]	; 0x24
   366d0:	ldr	r6, [fp, #16]
   366d4:	ldr	ip, [fp, #12]
   366d8:	ldr	r4, [sp, #24]
   366dc:	add	r0, r1, r0
   366e0:	cmp	r0, r2
   366e4:	blt	36598 <GetDataSlab+0x13bd4>
   366e8:	mov	r0, #0
   366ec:	ldr	r1, [sp, #52]	; 0x34
   366f0:	cmp	r1, #13
   366f4:	bne	24900 <GetDataSlab+0x1f3c>
   366f8:	ldr	r0, [fp, #16]
   366fc:	ldr	sl, [fp, #20]
   36700:	mov	lr, #0
   36704:	add	r7, sp, #64	; 0x40
   36708:	sub	r9, fp, #72	; 0x48
   3670c:	ldr	r3, [r0]
   36710:	sub	r0, r3, #1
   36714:	str	r0, [fp, #-72]	; 0xffffffb8
   36718:	ldr	r0, [fp, #8]
   3671c:	ldr	r0, [r0]
   36720:	str	r0, [sp, #64]	; 0x40
   36724:	str	r0, [sp, #36]	; 0x24
   36728:	ldr	r0, [fp, #24]
   3672c:	ldr	sl, [sl]
   36730:	cmp	r0, #2
   36734:	mov	r0, sl
   36738:	str	sl, [sp, #40]	; 0x28
   3673c:	blt	367e4 <GetDataSlab+0x13e20>
   36740:	ldr	r6, [sp, #36]	; 0x24
   36744:	ldr	r1, [fp, #8]
   36748:	mov	r0, #1
   3674c:	mov	lr, #0
   36750:	mov	r2, sl
   36754:	str	sl, [sp, #40]	; 0x28
   36758:	mov	r8, r6
   3675c:	ldr	r5, [fp, #16]
   36760:	mov	r4, #0
   36764:	ldr	r5, [r5, r0, lsl #2]
   36768:	str	r6, [r7, r0, lsl #2]
   3676c:	ldr	r7, [fp, #8]
   36770:	sub	r5, r5, #1
   36774:	str	r5, [r9, r0, lsl #2]
   36778:	ldr	ip, [r7, r0, lsl #2]
   3677c:	mov	r7, ip
   36780:	mul	r6, r7, r6
   36784:	ldr	r7, [r1, -r4, lsl #2]
   36788:	add	r4, r4, #1
   3678c:	cmp	r0, r4
   36790:	mul	r5, r5, r7
   36794:	bne	36780 <GetDataSlab+0x13dbc>
   36798:	ldr	r2, [fp, #12]
   3679c:	add	r7, sp, #64	; 0x40
   367a0:	sub	r9, fp, #72	; 0x48
   367a4:	add	r1, r1, #4
   367a8:	str	r6, [r7, r0, lsl #2]
   367ac:	str	r5, [r9, r0, lsl #2]
   367b0:	ldr	r4, [r2, r0, lsl #2]
   367b4:	ldr	r2, [fp, #20]
   367b8:	mla	lr, r4, r8, lr
   367bc:	ldr	r4, [r2, r0, lsl #2]
   367c0:	ldr	r2, [sp, #40]	; 0x28
   367c4:	add	r0, r0, #1
   367c8:	mov	r8, r6
   367cc:	mov	r6, ip
   367d0:	mul	r2, r4, r2
   367d4:	ldr	r4, [fp, #24]
   367d8:	str	r2, [sp, #40]	; 0x28
   367dc:	cmp	r0, r4
   367e0:	bne	3675c <GetDataSlab+0x13d98>
   367e4:	ldr	r0, [sp, #48]	; 0x30
   367e8:	cmp	r3, #1
   367ec:	add	r5, r0, lr, lsl #3
   367f0:	bne	3cf58 <GetDataSlab+0x1a594>
   367f4:	ldr	r0, [sp, #40]	; 0x28
   367f8:	cmp	r0, #1
   367fc:	add	r0, sp, #64	; 0x40
   36800:	blt	248fc <GetDataSlab+0x1f38>
   36804:	orr	r0, r0, #4
   36808:	ldr	r9, [fp, #12]
   3680c:	ldr	r3, [fp, #20]
   36810:	add	r1, sp, #104	; 0x68
   36814:	mov	r6, #0
   36818:	str	r0, [sp, #48]	; 0x30
   3681c:	ldr	r0, [fp, #24]
   36820:	orr	r1, r1, #4
   36824:	add	r2, r3, #4
   36828:	sub	r0, r0, #1
   3682c:	str	r2, [sp, #52]	; 0x34
   36830:	str	r0, [sp, #32]
   36834:	sub	r0, fp, #72	; 0x48
   36838:	orr	r0, r0, #4
   3683c:	str	r0, [sp, #28]
   36840:	ldr	r0, [r9], #4
   36844:	str	r0, [sp, #44]	; 0x2c
   36848:	ldr	r7, [sp, #44]	; 0x2c
   3684c:	cmp	sl, #1
   36850:	add	r0, r5, r7, lsl #3
   36854:	add	lr, r7, lr
   36858:	blt	3689c <GetDataSlab+0x13ed8>
   3685c:	ldr	r2, [sp, #56]	; 0x38
   36860:	ldr	r3, [fp, #20]
   36864:	mov	r4, #0
   36868:	mov	r5, r0
   3686c:	add	r7, r2, r6
   36870:	ldrb	r2, [r5], #8
   36874:	strb	r2, [r7, r4]
   36878:	add	r4, r4, #1
   3687c:	ldr	sl, [r3]
   36880:	cmp	r4, sl
   36884:	blt	36870 <GetDataSlab+0x13eac>
   36888:	ldr	r3, [fp, #12]
   3688c:	ldr	r7, [r3]
   36890:	ldr	r3, [fp, #8]
   36894:	ldr	r2, [r3]
   36898:	str	r2, [sp, #36]	; 0x24
   3689c:	ldr	r3, [sp, #36]	; 0x24
   368a0:	mov	r2, r6
   368a4:	str	r7, [sp, #44]	; 0x2c
   368a8:	sub	r4, r3, r7
   368ac:	add	r5, r0, r4, lsl #3
   368b0:	ldr	r0, [fp, #24]
   368b4:	add	lr, lr, r4
   368b8:	cmp	r0, #2
   368bc:	blt	36968 <GetDataSlab+0x13fa4>
   368c0:	ldr	r8, [sp, #32]
   368c4:	mov	r0, #0
   368c8:	ldr	r4, [r1, r0]
   368cc:	ldr	r3, [sp, #52]	; 0x34
   368d0:	add	r4, r4, #1
   368d4:	str	r4, [r1, r0]
   368d8:	ldr	r7, [r3, r0]
   368dc:	sdiv	ip, r4, r7
   368e0:	mls	r7, ip, r7, r4
   368e4:	cmp	r7, #0
   368e8:	bne	36958 <GetDataSlab+0x13f94>
   368ec:	mov	r3, #0
   368f0:	str	r3, [r1, r0]
   368f4:	ldr	r3, [sp, #48]	; 0x30
   368f8:	ldr	r4, [r3, r0]
   368fc:	sdiv	r7, lr, r4
   36900:	mls	r7, r7, r4, lr
   36904:	cmp	r7, #0
   36908:	beq	36928 <GetDataSlab+0x13f64>
   3690c:	add	r3, sp, #64	; 0x40
   36910:	ldr	r6, [r9, r0]
   36914:	sub	r7, r4, r7
   36918:	ldr	r3, [r3, r0]
   3691c:	mla	r3, r6, r3, r7
   36920:	add	lr, r3, lr
   36924:	b	36944 <GetDataSlab+0x13f80>
   36928:	ldr	r4, [r9, r0]
   3692c:	cmp	r4, #0
   36930:	beq	36948 <GetDataSlab+0x13f84>
   36934:	add	r3, sp, #64	; 0x40
   36938:	ldr	r3, [r3, r0]
   3693c:	mla	lr, r3, r4, lr
   36940:	mul	r3, r3, r4
   36944:	add	r5, r5, r3, lsl #3
   36948:	subs	r8, r8, #1
   3694c:	add	r0, r0, #4
   36950:	bne	368c8 <GetDataSlab+0x13f04>
   36954:	b	36968 <GetDataSlab+0x13fa4>
   36958:	ldr	r3, [sp, #28]
   3695c:	ldr	r0, [r3, r0]
   36960:	add	r5, r5, r0, lsl #3
   36964:	add	lr, r0, lr
   36968:	ldr	r0, [sp, #40]	; 0x28
   3696c:	mov	r6, r2
   36970:	add	r6, sl, r2
   36974:	cmp	r6, r0
   36978:	mov	r0, #0
   3697c:	blt	36848 <GetDataSlab+0x13e84>
   36980:	b	24900 <GetDataSlab+0x1f3c>
   36984:	ldr	r0, [sp, #52]	; 0x34
   36988:	ldr	r2, [fp, #12]
   3698c:	cmp	r0, #1
   36990:	blt	248fc <GetDataSlab+0x1f38>
   36994:	ldr	r4, [sp, #44]	; 0x2c
   36998:	ldr	r0, [sp, #40]	; 0x28
   3699c:	mls	r0, r4, lr, r0
   369a0:	str	r0, [sp, #40]	; 0x28
   369a4:	mul	r0, r4, lr
   369a8:	str	r0, [sp, #32]
   369ac:	add	r0, sp, #104	; 0x68
   369b0:	orr	r6, r0, #4
   369b4:	ldr	r0, [fp, #20]
   369b8:	add	r1, r0, #4
   369bc:	mov	r0, r2
   369c0:	add	r2, sp, #64	; 0x40
   369c4:	add	ip, r0, #4
   369c8:	ldr	r0, [fp, #24]
   369cc:	orr	sl, r2, #4
   369d0:	mov	r2, r4
   369d4:	sub	r0, r0, #1
   369d8:	str	r0, [sp, #28]
   369dc:	sub	r0, fp, #72	; 0x48
   369e0:	orr	r0, r0, #4
   369e4:	str	r0, [sp, #24]
   369e8:	lsl	r0, r4, #1
   369ec:	str	r0, [sp, #36]	; 0x24
   369f0:	mov	r0, #0
   369f4:	str	r0, [sp, #48]	; 0x30
   369f8:	ldr	r0, [fp, #12]
   369fc:	cmp	r2, #1
   36a00:	ldr	r0, [r0]
   36a04:	add	r7, r7, r0
   36a08:	blt	36a34 <GetDataSlab+0x14070>
   36a0c:	ldr	r4, [sp, #32]
   36a10:	add	r8, r4, r3
   36a14:	ldr	r4, [sp, #56]	; 0x38
   36a18:	mov	r3, r2
   36a1c:	ldrb	r5, [r7], lr
   36a20:	subs	r3, r3, #1
   36a24:	strh	r5, [r4], #2
   36a28:	bne	36a1c <GetDataSlab+0x14058>
   36a2c:	add	r3, r8, r0
   36a30:	b	36a38 <GetDataSlab+0x14074>
   36a34:	add	r3, r0, r3
   36a38:	ldr	r2, [sp, #40]	; 0x28
   36a3c:	sub	r0, r2, r0
   36a40:	add	r7, r7, r0
   36a44:	add	r3, r3, r0
   36a48:	ldr	r0, [fp, #24]
   36a4c:	cmp	r0, #2
   36a50:	blt	36af4 <GetDataSlab+0x14130>
   36a54:	ldr	r8, [sp, #28]
   36a58:	mov	r0, #0
   36a5c:	ldr	r4, [r6, r0]
   36a60:	add	r4, r4, #1
   36a64:	str	r4, [r6, r0]
   36a68:	ldr	r5, [r1, r0]
   36a6c:	sdiv	r2, r4, r5
   36a70:	mls	r2, r2, r5, r4
   36a74:	cmp	r2, #0
   36a78:	bne	36ae4 <GetDataSlab+0x14120>
   36a7c:	ldr	r4, [sl, r0]
   36a80:	mov	r2, #0
   36a84:	str	r2, [r6, r0]
   36a88:	sdiv	r2, r3, r4
   36a8c:	mls	r9, r2, r4, r3
   36a90:	cmp	r9, #0
   36a94:	beq	36ab8 <GetDataSlab+0x140f4>
   36a98:	add	r2, sp, #64	; 0x40
   36a9c:	ldr	r5, [ip, r0]
   36aa0:	sub	r4, r4, r9
   36aa4:	ldr	r2, [r2, r0]
   36aa8:	mla	r2, r5, r2, r4
   36aac:	add	r3, r2, r3
   36ab0:	add	r7, r7, r2
   36ab4:	b	36ad4 <GetDataSlab+0x14110>
   36ab8:	ldr	r4, [ip, r0]
   36abc:	cmp	r4, #0
   36ac0:	beq	36ad4 <GetDataSlab+0x14110>
   36ac4:	add	r2, sp, #64	; 0x40
   36ac8:	ldr	r2, [r2, r0]
   36acc:	mla	r3, r2, r4, r3
   36ad0:	mla	r7, r2, r4, r7
   36ad4:	subs	r8, r8, #1
   36ad8:	add	r0, r0, #4
   36adc:	bne	36a5c <GetDataSlab+0x14098>
   36ae0:	b	36af4 <GetDataSlab+0x14130>
   36ae4:	ldr	r2, [sp, #24]
   36ae8:	ldr	r0, [r2, r0]
   36aec:	add	r7, r7, r0
   36af0:	add	r3, r0, r3
   36af4:	ldr	r0, [sp, #36]	; 0x24
   36af8:	ldr	r2, [sp, #56]	; 0x38
   36afc:	ldr	r4, [sp, #48]	; 0x30
   36b00:	add	r2, r2, r0
   36b04:	ldr	r0, [sp, #52]	; 0x34
   36b08:	str	r2, [sp, #56]	; 0x38
   36b0c:	ldr	r2, [sp, #44]	; 0x2c
   36b10:	add	r4, r4, r2
   36b14:	cmp	r4, r0
   36b18:	mov	r0, #0
   36b1c:	str	r4, [sp, #48]	; 0x30
   36b20:	blt	369f8 <GetDataSlab+0x14034>
   36b24:	b	24900 <GetDataSlab+0x1f3c>
   36b28:	ldr	r0, [sp, #52]	; 0x34
   36b2c:	ldr	r1, [sp, #44]	; 0x2c
   36b30:	cmp	r0, #1
   36b34:	blt	248fc <GetDataSlab+0x1f38>
   36b38:	ldr	r0, [sp, #40]	; 0x28
   36b3c:	ldr	r3, [ip], #4
   36b40:	lsl	sl, lr, #1
   36b44:	mls	r0, r1, lr, r0
   36b48:	str	r3, [sp, #48]	; 0x30
   36b4c:	sub	r0, r0, r3
   36b50:	str	r0, [sp, #40]	; 0x28
   36b54:	add	r0, sp, #104	; 0x68
   36b58:	orr	r6, r0, #4
   36b5c:	ldr	r0, [fp, #20]
   36b60:	add	r5, r0, #4
   36b64:	add	r0, sp, #64	; 0x40
   36b68:	orr	r8, r0, #4
   36b6c:	ldr	r0, [fp, #24]
   36b70:	sub	r0, r0, #1
   36b74:	str	r0, [sp, #28]
   36b78:	sub	r0, fp, #72	; 0x48
   36b7c:	orr	r0, r0, #4
   36b80:	str	r0, [sp, #24]
   36b84:	mla	r0, r1, lr, r3
   36b88:	str	r0, [sp, #32]
   36b8c:	lsl	r0, r1, #1
   36b90:	str	r0, [sp, #36]	; 0x24
   36b94:	ldr	r0, [sp, #56]	; 0x38
   36b98:	str	r0, [sp, #60]	; 0x3c
   36b9c:	mov	r0, #0
   36ba0:	str	r0, [sp, #56]	; 0x38
   36ba4:	ldr	r3, [sp, #48]	; 0x30
   36ba8:	cmp	r1, #1
   36bac:	add	r0, r7, r3, lsl #1
   36bb0:	blt	36bd0 <GetDataSlab+0x1420c>
   36bb4:	ldr	r3, [sp, #60]	; 0x3c
   36bb8:	mov	r7, r1
   36bbc:	ldrh	r4, [r0], sl
   36bc0:	subs	r7, r7, #1
   36bc4:	strh	r4, [r3], #2
   36bc8:	bne	36bbc <GetDataSlab+0x141f8>
   36bcc:	ldr	r3, [sp, #32]
   36bd0:	ldr	r1, [sp, #40]	; 0x28
   36bd4:	add	r7, r0, r1, lsl #1
   36bd8:	add	r0, r3, r2
   36bdc:	add	r2, r0, r1
   36be0:	ldr	r0, [fp, #24]
   36be4:	cmp	r0, #2
   36be8:	blt	36c8c <GetDataSlab+0x142c8>
   36bec:	ldr	lr, [sp, #28]
   36bf0:	mov	r0, #0
   36bf4:	ldr	r3, [r6, r0]
   36bf8:	add	r3, r3, #1
   36bfc:	str	r3, [r6, r0]
   36c00:	ldr	r4, [r5, r0]
   36c04:	sdiv	r1, r3, r4
   36c08:	mls	r1, r1, r4, r3
   36c0c:	cmp	r1, #0
   36c10:	bne	36c7c <GetDataSlab+0x142b8>
   36c14:	ldr	r3, [r8, r0]
   36c18:	mov	r1, #0
   36c1c:	str	r1, [r6, r0]
   36c20:	sdiv	r1, r2, r3
   36c24:	mls	r9, r1, r3, r2
   36c28:	cmp	r9, #0
   36c2c:	beq	36c4c <GetDataSlab+0x14288>
   36c30:	add	r1, sp, #64	; 0x40
   36c34:	ldr	r4, [ip, r0]
   36c38:	sub	r3, r3, r9
   36c3c:	ldr	r1, [r1, r0]
   36c40:	mla	r1, r4, r1, r3
   36c44:	add	r2, r1, r2
   36c48:	b	36c68 <GetDataSlab+0x142a4>
   36c4c:	ldr	r3, [ip, r0]
   36c50:	cmp	r3, #0
   36c54:	beq	36c6c <GetDataSlab+0x142a8>
   36c58:	add	r1, sp, #64	; 0x40
   36c5c:	ldr	r1, [r1, r0]
   36c60:	mla	r2, r1, r3, r2
   36c64:	mul	r1, r1, r3
   36c68:	add	r7, r7, r1, lsl #1
   36c6c:	subs	lr, lr, #1
   36c70:	add	r0, r0, #4
   36c74:	bne	36bf4 <GetDataSlab+0x14230>
   36c78:	b	36c8c <GetDataSlab+0x142c8>
   36c7c:	ldr	r1, [sp, #24]
   36c80:	ldr	r0, [r1, r0]
   36c84:	add	r7, r7, r0, lsl #1
   36c88:	add	r2, r0, r2
   36c8c:	ldr	r0, [sp, #36]	; 0x24
   36c90:	ldr	r1, [sp, #60]	; 0x3c
   36c94:	ldr	r3, [sp, #56]	; 0x38
   36c98:	add	r1, r1, r0
   36c9c:	ldr	r0, [sp, #52]	; 0x34
   36ca0:	str	r1, [sp, #60]	; 0x3c
   36ca4:	ldr	r1, [sp, #44]	; 0x2c
   36ca8:	add	r3, r3, r1
   36cac:	cmp	r3, r0
   36cb0:	mov	r0, #0
   36cb4:	str	r3, [sp, #56]	; 0x38
   36cb8:	blt	36ba4 <GetDataSlab+0x141e0>
   36cbc:	b	24900 <GetDataSlab+0x1f3c>
   36cc0:	ldr	r0, [sp, #52]	; 0x34
   36cc4:	ldr	r1, [sp, #44]	; 0x2c
   36cc8:	cmp	r0, #1
   36ccc:	blt	248fc <GetDataSlab+0x1f38>
   36cd0:	ldr	r0, [sp, #40]	; 0x28
   36cd4:	ldr	r3, [ip], #4
   36cd8:	lsl	sl, lr, #1
   36cdc:	mls	r0, r1, lr, r0
   36ce0:	str	r3, [sp, #48]	; 0x30
   36ce4:	sub	r0, r0, r3
   36ce8:	str	r0, [sp, #40]	; 0x28
   36cec:	add	r0, sp, #104	; 0x68
   36cf0:	orr	r6, r0, #4
   36cf4:	ldr	r0, [fp, #20]
   36cf8:	add	r5, r0, #4
   36cfc:	add	r0, sp, #64	; 0x40
   36d00:	orr	r8, r0, #4
   36d04:	ldr	r0, [fp, #24]
   36d08:	sub	r0, r0, #1
   36d0c:	str	r0, [sp, #28]
   36d10:	sub	r0, fp, #72	; 0x48
   36d14:	orr	r0, r0, #4
   36d18:	str	r0, [sp, #24]
   36d1c:	mla	r0, r1, lr, r3
   36d20:	str	r0, [sp, #32]
   36d24:	lsl	r0, r1, #1
   36d28:	str	r0, [sp, #36]	; 0x24
   36d2c:	ldr	r0, [sp, #56]	; 0x38
   36d30:	str	r0, [sp, #60]	; 0x3c
   36d34:	mov	r0, #0
   36d38:	str	r0, [sp, #56]	; 0x38
   36d3c:	ldr	r3, [sp, #48]	; 0x30
   36d40:	cmp	r1, #1
   36d44:	add	r0, r7, r3, lsl #1
   36d48:	blt	36d68 <GetDataSlab+0x143a4>
   36d4c:	ldr	r3, [sp, #60]	; 0x3c
   36d50:	mov	r7, r1
   36d54:	ldrh	r4, [r0], sl
   36d58:	subs	r7, r7, #1
   36d5c:	strh	r4, [r3], #2
   36d60:	bne	36d54 <GetDataSlab+0x14390>
   36d64:	ldr	r3, [sp, #32]
   36d68:	ldr	r1, [sp, #40]	; 0x28
   36d6c:	add	r7, r0, r1, lsl #1
   36d70:	add	r0, r3, r2
   36d74:	add	r2, r0, r1
   36d78:	ldr	r0, [fp, #24]
   36d7c:	cmp	r0, #2
   36d80:	blt	36e24 <GetDataSlab+0x14460>
   36d84:	ldr	lr, [sp, #28]
   36d88:	mov	r0, #0
   36d8c:	ldr	r3, [r6, r0]
   36d90:	add	r3, r3, #1
   36d94:	str	r3, [r6, r0]
   36d98:	ldr	r4, [r5, r0]
   36d9c:	sdiv	r1, r3, r4
   36da0:	mls	r1, r1, r4, r3
   36da4:	cmp	r1, #0
   36da8:	bne	36e14 <GetDataSlab+0x14450>
   36dac:	ldr	r3, [r8, r0]
   36db0:	mov	r1, #0
   36db4:	str	r1, [r6, r0]
   36db8:	sdiv	r1, r2, r3
   36dbc:	mls	r9, r1, r3, r2
   36dc0:	cmp	r9, #0
   36dc4:	beq	36de4 <GetDataSlab+0x14420>
   36dc8:	add	r1, sp, #64	; 0x40
   36dcc:	ldr	r4, [ip, r0]
   36dd0:	sub	r3, r3, r9
   36dd4:	ldr	r1, [r1, r0]
   36dd8:	mla	r1, r4, r1, r3
   36ddc:	add	r2, r1, r2
   36de0:	b	36e00 <GetDataSlab+0x1443c>
   36de4:	ldr	r3, [ip, r0]
   36de8:	cmp	r3, #0
   36dec:	beq	36e04 <GetDataSlab+0x14440>
   36df0:	add	r1, sp, #64	; 0x40
   36df4:	ldr	r1, [r1, r0]
   36df8:	mla	r2, r1, r3, r2
   36dfc:	mul	r1, r1, r3
   36e00:	add	r7, r7, r1, lsl #1
   36e04:	subs	lr, lr, #1
   36e08:	add	r0, r0, #4
   36e0c:	bne	36d8c <GetDataSlab+0x143c8>
   36e10:	b	36e24 <GetDataSlab+0x14460>
   36e14:	ldr	r1, [sp, #24]
   36e18:	ldr	r0, [r1, r0]
   36e1c:	add	r7, r7, r0, lsl #1
   36e20:	add	r2, r0, r2
   36e24:	ldr	r0, [sp, #36]	; 0x24
   36e28:	ldr	r1, [sp, #60]	; 0x3c
   36e2c:	ldr	r3, [sp, #56]	; 0x38
   36e30:	add	r1, r1, r0
   36e34:	ldr	r0, [sp, #52]	; 0x34
   36e38:	str	r1, [sp, #60]	; 0x3c
   36e3c:	ldr	r1, [sp, #44]	; 0x2c
   36e40:	add	r3, r3, r1
   36e44:	cmp	r3, r0
   36e48:	mov	r0, #0
   36e4c:	str	r3, [sp, #56]	; 0x38
   36e50:	blt	36d3c <GetDataSlab+0x14378>
   36e54:	b	24900 <GetDataSlab+0x1f3c>
   36e58:	ldr	r0, [sp, #52]	; 0x34
   36e5c:	ldr	r1, [sp, #56]	; 0x38
   36e60:	ldr	r2, [sp, #44]	; 0x2c
   36e64:	cmp	r0, #1
   36e68:	blt	248fc <GetDataSlab+0x1f38>
   36e6c:	ldr	r0, [sp, #40]	; 0x28
   36e70:	add	r4, sp, #64	; 0x40
   36e74:	lsl	sl, r9, #2
   36e78:	str	r1, [sp, #56]	; 0x38
   36e7c:	mls	r0, r2, r9, r0
   36e80:	str	r0, [sp, #40]	; 0x28
   36e84:	add	r0, sp, #104	; 0x68
   36e88:	orr	r5, r0, #4
   36e8c:	ldr	r0, [fp, #20]
   36e90:	add	r6, r0, #4
   36e94:	mov	r0, ip
   36e98:	orr	ip, r4, #4
   36e9c:	add	r8, r0, #4
   36ea0:	ldr	r0, [fp, #24]
   36ea4:	sub	r0, r0, #1
   36ea8:	str	r0, [sp, #28]
   36eac:	sub	r0, fp, #72	; 0x48
   36eb0:	orr	r0, r0, #4
   36eb4:	str	r0, [sp, #24]
   36eb8:	mul	r0, r2, r9
   36ebc:	str	r0, [sp, #32]
   36ec0:	lsl	r0, r2, #1
   36ec4:	str	r0, [sp, #36]	; 0x24
   36ec8:	mov	r0, #0
   36ecc:	str	r0, [sp, #48]	; 0x30
   36ed0:	ldr	r0, [fp, #12]
   36ed4:	cmp	r2, #1
   36ed8:	ldr	r0, [r0]
   36edc:	add	r7, r7, r0, lsl #2
   36ee0:	blt	36f0c <GetDataSlab+0x14548>
   36ee4:	ldr	r1, [sp, #32]
   36ee8:	ldr	r4, [sp, #56]	; 0x38
   36eec:	add	lr, r1, r3
   36ef0:	mov	r3, r2
   36ef4:	ldr	r1, [r7], sl
   36ef8:	subs	r3, r3, #1
   36efc:	strh	r1, [r4], #2
   36f00:	bne	36ef4 <GetDataSlab+0x14530>
   36f04:	add	r3, lr, r0
   36f08:	b	36f10 <GetDataSlab+0x1454c>
   36f0c:	add	r3, r0, r3
   36f10:	ldr	r1, [sp, #40]	; 0x28
   36f14:	sub	r0, r1, r0
   36f18:	add	r7, r7, r0, lsl #2
   36f1c:	add	r3, r3, r0
   36f20:	ldr	r0, [fp, #24]
   36f24:	cmp	r0, #2
   36f28:	blt	36fcc <GetDataSlab+0x14608>
   36f2c:	ldr	lr, [sp, #28]
   36f30:	mov	r0, #0
   36f34:	ldr	r1, [r5, r0]
   36f38:	add	r1, r1, #1
   36f3c:	str	r1, [r5, r0]
   36f40:	ldr	r4, [r6, r0]
   36f44:	sdiv	r2, r1, r4
   36f48:	mls	r1, r2, r4, r1
   36f4c:	cmp	r1, #0
   36f50:	bne	36fbc <GetDataSlab+0x145f8>
   36f54:	ldr	r4, [ip, r0]
   36f58:	mov	r1, #0
   36f5c:	str	r1, [r5, r0]
   36f60:	sdiv	r1, r3, r4
   36f64:	mls	r9, r1, r4, r3
   36f68:	cmp	r9, #0
   36f6c:	beq	36f8c <GetDataSlab+0x145c8>
   36f70:	add	r1, sp, #64	; 0x40
   36f74:	ldr	r2, [r8, r0]
   36f78:	sub	r4, r4, r9
   36f7c:	ldr	r1, [r1, r0]
   36f80:	mla	r1, r2, r1, r4
   36f84:	add	r3, r1, r3
   36f88:	b	36fa8 <GetDataSlab+0x145e4>
   36f8c:	ldr	r4, [r8, r0]
   36f90:	cmp	r4, #0
   36f94:	beq	36fac <GetDataSlab+0x145e8>
   36f98:	add	r1, sp, #64	; 0x40
   36f9c:	ldr	r1, [r1, r0]
   36fa0:	mla	r3, r1, r4, r3
   36fa4:	mul	r1, r1, r4
   36fa8:	add	r7, r7, r1, lsl #2
   36fac:	subs	lr, lr, #1
   36fb0:	add	r0, r0, #4
   36fb4:	bne	36f34 <GetDataSlab+0x14570>
   36fb8:	b	36fcc <GetDataSlab+0x14608>
   36fbc:	ldr	r1, [sp, #24]
   36fc0:	ldr	r0, [r1, r0]
   36fc4:	add	r7, r7, r0, lsl #2
   36fc8:	add	r3, r0, r3
   36fcc:	ldr	r0, [sp, #36]	; 0x24
   36fd0:	ldr	r1, [sp, #56]	; 0x38
   36fd4:	ldr	r2, [sp, #44]	; 0x2c
   36fd8:	add	r1, r1, r0
   36fdc:	ldr	r0, [sp, #52]	; 0x34
   36fe0:	str	r1, [sp, #56]	; 0x38
   36fe4:	ldr	r1, [sp, #48]	; 0x30
   36fe8:	add	r1, r1, r2
   36fec:	cmp	r1, r0
   36ff0:	mov	r0, #0
   36ff4:	str	r1, [sp, #48]	; 0x30
   36ff8:	blt	36ed0 <GetDataSlab+0x1450c>
   36ffc:	b	24900 <GetDataSlab+0x1f3c>
   37000:	ldr	r0, [sp, #52]	; 0x34
   37004:	ldr	r1, [sp, #56]	; 0x38
   37008:	ldr	r2, [sp, #44]	; 0x2c
   3700c:	cmp	r0, #1
   37010:	blt	248fc <GetDataSlab+0x1f38>
   37014:	ldr	r0, [sp, #40]	; 0x28
   37018:	add	r4, sp, #64	; 0x40
   3701c:	lsl	sl, r9, #2
   37020:	str	r1, [sp, #56]	; 0x38
   37024:	mls	r0, r2, r9, r0
   37028:	str	r0, [sp, #40]	; 0x28
   3702c:	add	r0, sp, #104	; 0x68
   37030:	orr	r5, r0, #4
   37034:	ldr	r0, [fp, #20]
   37038:	add	r6, r0, #4
   3703c:	mov	r0, ip
   37040:	orr	ip, r4, #4
   37044:	add	r8, r0, #4
   37048:	ldr	r0, [fp, #24]
   3704c:	sub	r0, r0, #1
   37050:	str	r0, [sp, #28]
   37054:	sub	r0, fp, #72	; 0x48
   37058:	orr	r0, r0, #4
   3705c:	str	r0, [sp, #24]
   37060:	mul	r0, r2, r9
   37064:	str	r0, [sp, #32]
   37068:	lsl	r0, r2, #1
   3706c:	str	r0, [sp, #36]	; 0x24
   37070:	mov	r0, #0
   37074:	str	r0, [sp, #48]	; 0x30
   37078:	ldr	r0, [fp, #12]
   3707c:	cmp	r2, #1
   37080:	ldr	r0, [r0]
   37084:	add	r7, r7, r0, lsl #2
   37088:	blt	370b4 <GetDataSlab+0x146f0>
   3708c:	ldr	r1, [sp, #32]
   37090:	ldr	r4, [sp, #56]	; 0x38
   37094:	add	lr, r1, r3
   37098:	mov	r3, r2
   3709c:	ldr	r1, [r7], sl
   370a0:	subs	r3, r3, #1
   370a4:	strh	r1, [r4], #2
   370a8:	bne	3709c <GetDataSlab+0x146d8>
   370ac:	add	r3, lr, r0
   370b0:	b	370b8 <GetDataSlab+0x146f4>
   370b4:	add	r3, r0, r3
   370b8:	ldr	r1, [sp, #40]	; 0x28
   370bc:	sub	r0, r1, r0
   370c0:	add	r7, r7, r0, lsl #2
   370c4:	add	r3, r3, r0
   370c8:	ldr	r0, [fp, #24]
   370cc:	cmp	r0, #2
   370d0:	blt	37174 <GetDataSlab+0x147b0>
   370d4:	ldr	lr, [sp, #28]
   370d8:	mov	r0, #0
   370dc:	ldr	r1, [r5, r0]
   370e0:	add	r1, r1, #1
   370e4:	str	r1, [r5, r0]
   370e8:	ldr	r4, [r6, r0]
   370ec:	sdiv	r2, r1, r4
   370f0:	mls	r1, r2, r4, r1
   370f4:	cmp	r1, #0
   370f8:	bne	37164 <GetDataSlab+0x147a0>
   370fc:	ldr	r4, [ip, r0]
   37100:	mov	r1, #0
   37104:	str	r1, [r5, r0]
   37108:	sdiv	r1, r3, r4
   3710c:	mls	r9, r1, r4, r3
   37110:	cmp	r9, #0
   37114:	beq	37134 <GetDataSlab+0x14770>
   37118:	add	r1, sp, #64	; 0x40
   3711c:	ldr	r2, [r8, r0]
   37120:	sub	r4, r4, r9
   37124:	ldr	r1, [r1, r0]
   37128:	mla	r1, r2, r1, r4
   3712c:	add	r3, r1, r3
   37130:	b	37150 <GetDataSlab+0x1478c>
   37134:	ldr	r4, [r8, r0]
   37138:	cmp	r4, #0
   3713c:	beq	37154 <GetDataSlab+0x14790>
   37140:	add	r1, sp, #64	; 0x40
   37144:	ldr	r1, [r1, r0]
   37148:	mla	r3, r1, r4, r3
   3714c:	mul	r1, r1, r4
   37150:	add	r7, r7, r1, lsl #2
   37154:	subs	lr, lr, #1
   37158:	add	r0, r0, #4
   3715c:	bne	370dc <GetDataSlab+0x14718>
   37160:	b	37174 <GetDataSlab+0x147b0>
   37164:	ldr	r1, [sp, #24]
   37168:	ldr	r0, [r1, r0]
   3716c:	add	r7, r7, r0, lsl #2
   37170:	add	r3, r0, r3
   37174:	ldr	r0, [sp, #36]	; 0x24
   37178:	ldr	r1, [sp, #56]	; 0x38
   3717c:	ldr	r2, [sp, #44]	; 0x2c
   37180:	add	r1, r1, r0
   37184:	ldr	r0, [sp, #52]	; 0x34
   37188:	str	r1, [sp, #56]	; 0x38
   3718c:	ldr	r1, [sp, #48]	; 0x30
   37190:	add	r1, r1, r2
   37194:	cmp	r1, r0
   37198:	mov	r0, #0
   3719c:	str	r1, [sp, #48]	; 0x30
   371a0:	blt	37078 <GetDataSlab+0x146b4>
   371a4:	b	24900 <GetDataSlab+0x1f3c>
   371a8:	ldr	r0, [sp, #52]	; 0x34
   371ac:	ldr	r1, [sp, #44]	; 0x2c
   371b0:	cmp	r0, #1
   371b4:	blt	248fc <GetDataSlab+0x1f38>
   371b8:	ldr	r0, [sp, #40]	; 0x28
   371bc:	ldr	r3, [ip], #4
   371c0:	lsl	sl, lr, #2
   371c4:	mls	r0, r1, lr, r0
   371c8:	str	r3, [sp, #48]	; 0x30
   371cc:	sub	r0, r0, r3
   371d0:	str	r0, [sp, #40]	; 0x28
   371d4:	add	r0, sp, #104	; 0x68
   371d8:	orr	r6, r0, #4
   371dc:	ldr	r0, [fp, #20]
   371e0:	add	r5, r0, #4
   371e4:	add	r0, sp, #64	; 0x40
   371e8:	orr	r8, r0, #4
   371ec:	ldr	r0, [fp, #24]
   371f0:	sub	r0, r0, #1
   371f4:	str	r0, [sp, #28]
   371f8:	sub	r0, fp, #72	; 0x48
   371fc:	orr	r0, r0, #4
   37200:	str	r0, [sp, #24]
   37204:	mla	r0, r1, lr, r3
   37208:	str	r0, [sp, #32]
   3720c:	lsl	r0, r1, #1
   37210:	str	r0, [sp, #36]	; 0x24
   37214:	ldr	r0, [sp, #56]	; 0x38
   37218:	str	r0, [sp, #60]	; 0x3c
   3721c:	mov	r0, #0
   37220:	str	r0, [sp, #56]	; 0x38
   37224:	ldr	r3, [sp, #48]	; 0x30
   37228:	cmp	r1, #1
   3722c:	add	r0, r7, r3, lsl #2
   37230:	blt	3725c <GetDataSlab+0x14898>
   37234:	ldr	r3, [sp, #60]	; 0x3c
   37238:	mov	r7, r1
   3723c:	vldr	s0, [r0]
   37240:	add	r0, r0, sl
   37244:	subs	r7, r7, #1
   37248:	vcvt.s32.f32	s0, s0
   3724c:	vmov	r4, s0
   37250:	strh	r4, [r3], #2
   37254:	bne	3723c <GetDataSlab+0x14878>
   37258:	ldr	r3, [sp, #32]
   3725c:	ldr	r1, [sp, #40]	; 0x28
   37260:	add	r7, r0, r1, lsl #2
   37264:	add	r0, r3, r2
   37268:	add	r2, r0, r1
   3726c:	ldr	r0, [fp, #24]
   37270:	cmp	r0, #2
   37274:	blt	37318 <GetDataSlab+0x14954>
   37278:	ldr	lr, [sp, #28]
   3727c:	mov	r0, #0
   37280:	ldr	r3, [r6, r0]
   37284:	add	r3, r3, #1
   37288:	str	r3, [r6, r0]
   3728c:	ldr	r4, [r5, r0]
   37290:	sdiv	r1, r3, r4
   37294:	mls	r1, r1, r4, r3
   37298:	cmp	r1, #0
   3729c:	bne	37308 <GetDataSlab+0x14944>
   372a0:	ldr	r3, [r8, r0]
   372a4:	mov	r1, #0
   372a8:	str	r1, [r6, r0]
   372ac:	sdiv	r1, r2, r3
   372b0:	mls	r9, r1, r3, r2
   372b4:	cmp	r9, #0
   372b8:	beq	372d8 <GetDataSlab+0x14914>
   372bc:	add	r1, sp, #64	; 0x40
   372c0:	ldr	r4, [ip, r0]
   372c4:	sub	r3, r3, r9
   372c8:	ldr	r1, [r1, r0]
   372cc:	mla	r1, r4, r1, r3
   372d0:	add	r2, r1, r2
   372d4:	b	372f4 <GetDataSlab+0x14930>
   372d8:	ldr	r3, [ip, r0]
   372dc:	cmp	r3, #0
   372e0:	beq	372f8 <GetDataSlab+0x14934>
   372e4:	add	r1, sp, #64	; 0x40
   372e8:	ldr	r1, [r1, r0]
   372ec:	mla	r2, r1, r3, r2
   372f0:	mul	r1, r1, r3
   372f4:	add	r7, r7, r1, lsl #2
   372f8:	subs	lr, lr, #1
   372fc:	add	r0, r0, #4
   37300:	bne	37280 <GetDataSlab+0x148bc>
   37304:	b	37318 <GetDataSlab+0x14954>
   37308:	ldr	r1, [sp, #24]
   3730c:	ldr	r0, [r1, r0]
   37310:	add	r7, r7, r0, lsl #2
   37314:	add	r2, r0, r2
   37318:	ldr	r0, [sp, #36]	; 0x24
   3731c:	ldr	r1, [sp, #60]	; 0x3c
   37320:	ldr	r3, [sp, #56]	; 0x38
   37324:	add	r1, r1, r0
   37328:	ldr	r0, [sp, #52]	; 0x34
   3732c:	str	r1, [sp, #60]	; 0x3c
   37330:	ldr	r1, [sp, #44]	; 0x2c
   37334:	add	r3, r3, r1
   37338:	cmp	r3, r0
   3733c:	mov	r0, #0
   37340:	str	r3, [sp, #56]	; 0x38
   37344:	blt	37224 <GetDataSlab+0x14860>
   37348:	b	24900 <GetDataSlab+0x1f3c>
   3734c:	ldr	r0, [sp, #52]	; 0x34
   37350:	ldr	r1, [sp, #44]	; 0x2c
   37354:	cmp	r0, #1
   37358:	blt	248fc <GetDataSlab+0x1f38>
   3735c:	ldr	r0, [sp, #40]	; 0x28
   37360:	ldr	r3, [ip], #4
   37364:	lsl	sl, lr, #3
   37368:	mls	r0, r1, lr, r0
   3736c:	str	r3, [sp, #48]	; 0x30
   37370:	sub	r0, r0, r3
   37374:	str	r0, [sp, #40]	; 0x28
   37378:	add	r0, sp, #104	; 0x68
   3737c:	orr	r6, r0, #4
   37380:	ldr	r0, [fp, #20]
   37384:	add	r5, r0, #4
   37388:	add	r0, sp, #64	; 0x40
   3738c:	orr	r8, r0, #4
   37390:	ldr	r0, [fp, #24]
   37394:	sub	r0, r0, #1
   37398:	str	r0, [sp, #28]
   3739c:	sub	r0, fp, #72	; 0x48
   373a0:	orr	r0, r0, #4
   373a4:	str	r0, [sp, #24]
   373a8:	mla	r0, r1, lr, r3
   373ac:	str	r0, [sp, #32]
   373b0:	lsl	r0, r1, #1
   373b4:	str	r0, [sp, #36]	; 0x24
   373b8:	ldr	r0, [sp, #56]	; 0x38
   373bc:	str	r0, [sp, #60]	; 0x3c
   373c0:	mov	r0, #0
   373c4:	str	r0, [sp, #56]	; 0x38
   373c8:	ldr	r3, [sp, #48]	; 0x30
   373cc:	cmp	r1, #1
   373d0:	add	r0, r7, r3, lsl #3
   373d4:	blt	37400 <GetDataSlab+0x14a3c>
   373d8:	ldr	r3, [sp, #60]	; 0x3c
   373dc:	mov	r7, r1
   373e0:	vldr	d16, [r0]
   373e4:	add	r0, r0, sl
   373e8:	subs	r7, r7, #1
   373ec:	vcvt.s32.f64	s0, d16
   373f0:	vmov	r4, s0
   373f4:	strh	r4, [r3], #2
   373f8:	bne	373e0 <GetDataSlab+0x14a1c>
   373fc:	ldr	r3, [sp, #32]
   37400:	ldr	r1, [sp, #40]	; 0x28
   37404:	add	r7, r0, r1, lsl #3
   37408:	add	r0, r3, r2
   3740c:	add	r2, r0, r1
   37410:	ldr	r0, [fp, #24]
   37414:	cmp	r0, #2
   37418:	blt	374bc <GetDataSlab+0x14af8>
   3741c:	ldr	lr, [sp, #28]
   37420:	mov	r0, #0
   37424:	ldr	r3, [r6, r0]
   37428:	add	r3, r3, #1
   3742c:	str	r3, [r6, r0]
   37430:	ldr	r4, [r5, r0]
   37434:	sdiv	r1, r3, r4
   37438:	mls	r1, r1, r4, r3
   3743c:	cmp	r1, #0
   37440:	bne	374ac <GetDataSlab+0x14ae8>
   37444:	ldr	r3, [r8, r0]
   37448:	mov	r1, #0
   3744c:	str	r1, [r6, r0]
   37450:	sdiv	r1, r2, r3
   37454:	mls	r9, r1, r3, r2
   37458:	cmp	r9, #0
   3745c:	beq	3747c <GetDataSlab+0x14ab8>
   37460:	add	r1, sp, #64	; 0x40
   37464:	ldr	r4, [ip, r0]
   37468:	sub	r3, r3, r9
   3746c:	ldr	r1, [r1, r0]
   37470:	mla	r1, r4, r1, r3
   37474:	add	r2, r1, r2
   37478:	b	37498 <GetDataSlab+0x14ad4>
   3747c:	ldr	r3, [ip, r0]
   37480:	cmp	r3, #0
   37484:	beq	3749c <GetDataSlab+0x14ad8>
   37488:	add	r1, sp, #64	; 0x40
   3748c:	ldr	r1, [r1, r0]
   37490:	mla	r2, r1, r3, r2
   37494:	mul	r1, r1, r3
   37498:	add	r7, r7, r1, lsl #3
   3749c:	subs	lr, lr, #1
   374a0:	add	r0, r0, #4
   374a4:	bne	37424 <GetDataSlab+0x14a60>
   374a8:	b	374bc <GetDataSlab+0x14af8>
   374ac:	ldr	r1, [sp, #24]
   374b0:	ldr	r0, [r1, r0]
   374b4:	add	r7, r7, r0, lsl #3
   374b8:	add	r2, r0, r2
   374bc:	ldr	r0, [sp, #36]	; 0x24
   374c0:	ldr	r1, [sp, #60]	; 0x3c
   374c4:	ldr	r3, [sp, #56]	; 0x38
   374c8:	add	r1, r1, r0
   374cc:	ldr	r0, [sp, #52]	; 0x34
   374d0:	str	r1, [sp, #60]	; 0x3c
   374d4:	ldr	r1, [sp, #44]	; 0x2c
   374d8:	add	r3, r3, r1
   374dc:	cmp	r3, r0
   374e0:	mov	r0, #0
   374e4:	str	r3, [sp, #56]	; 0x38
   374e8:	blt	373c8 <GetDataSlab+0x14a04>
   374ec:	b	24900 <GetDataSlab+0x1f3c>
   374f0:	ldr	r0, [sp, #44]	; 0x2c
   374f4:	ldr	r4, [sp, #40]	; 0x28
   374f8:	cmp	r0, #1
   374fc:	blt	3768c <GetDataSlab+0x14cc8>
   37500:	ldr	ip, [fp, #12]
   37504:	ldr	r0, [sp, #28]
   37508:	ldr	r5, [sp, #56]	; 0x38
   3750c:	lsl	sl, r8, #3
   37510:	ldr	r2, [ip], #4
   37514:	mls	r0, r4, r8, r0
   37518:	str	ip, [sp, #8]
   3751c:	sub	r0, r0, r2
   37520:	str	r0, [sp, #24]
   37524:	add	r0, sp, #104	; 0x68
   37528:	orr	r6, r0, #4
   3752c:	ldr	r0, [fp, #20]
   37530:	add	ip, r0, #4
   37534:	add	r0, sp, #64	; 0x40
   37538:	orr	lr, r0, #4
   3753c:	ldr	r0, [fp, #24]
   37540:	sub	r0, r0, #1
   37544:	str	r0, [sp, #12]
   37548:	mov	r0, r2
   3754c:	sub	r2, fp, #72	; 0x48
   37550:	orr	r2, r2, #4
   37554:	str	r0, [sp, #28]
   37558:	str	r2, [sp, #4]
   3755c:	mla	r2, r4, r8, r0
   37560:	str	r2, [sp, #16]
   37564:	lsl	r2, r4, #1
   37568:	str	r2, [sp, #20]
   3756c:	mov	r2, #0
   37570:	str	r2, [sp, #32]
   37574:	add	r2, r3, r0, lsl #3
   37578:	cmp	r4, #1
   3757c:	blt	3759c <GetDataSlab+0x14bd8>
   37580:	mov	r3, r5
   37584:	ldrh	r7, [r2], sl
   37588:	subs	r4, r4, #1
   3758c:	strh	r7, [r3], #2
   37590:	bne	37584 <GetDataSlab+0x14bc0>
   37594:	ldr	r4, [sp, #16]
   37598:	b	375a0 <GetDataSlab+0x14bdc>
   3759c:	mov	r4, r0
   375a0:	ldr	r0, [sp, #24]
   375a4:	add	r1, r4, r1
   375a8:	str	r5, [sp, #36]	; 0x24
   375ac:	add	r3, r2, r0, lsl #3
   375b0:	add	r1, r1, r0
   375b4:	ldr	r0, [fp, #24]
   375b8:	cmp	r0, #2
   375bc:	blt	37664 <GetDataSlab+0x14ca0>
   375c0:	ldr	r2, [sp, #12]
   375c4:	ldr	r5, [sp, #8]
   375c8:	mov	r8, #0
   375cc:	ldr	r4, [r6, r8]
   375d0:	add	r4, r4, #1
   375d4:	str	r4, [r6, r8]
   375d8:	ldr	r7, [ip, r8]
   375dc:	sdiv	r0, r4, r7
   375e0:	mls	r0, r0, r7, r4
   375e4:	cmp	r0, #0
   375e8:	bne	37654 <GetDataSlab+0x14c90>
   375ec:	ldr	r4, [lr, r8]
   375f0:	mov	r0, #0
   375f4:	str	r0, [r6, r8]
   375f8:	sdiv	r0, r1, r4
   375fc:	mls	r9, r0, r4, r1
   37600:	cmp	r9, #0
   37604:	beq	37624 <GetDataSlab+0x14c60>
   37608:	add	r0, sp, #64	; 0x40
   3760c:	ldr	r7, [r5, r8]
   37610:	sub	r4, r4, r9
   37614:	ldr	r0, [r0, r8]
   37618:	mla	r0, r7, r0, r4
   3761c:	add	r1, r0, r1
   37620:	b	37640 <GetDataSlab+0x14c7c>
   37624:	ldr	r4, [r5, r8]
   37628:	cmp	r4, #0
   3762c:	beq	37644 <GetDataSlab+0x14c80>
   37630:	add	r0, sp, #64	; 0x40
   37634:	ldr	r0, [r0, r8]
   37638:	mla	r1, r0, r4, r1
   3763c:	mul	r0, r0, r4
   37640:	add	r3, r3, r0, lsl #3
   37644:	subs	r2, r2, #1
   37648:	add	r8, r8, #4
   3764c:	bne	375cc <GetDataSlab+0x14c08>
   37650:	b	37664 <GetDataSlab+0x14ca0>
   37654:	ldr	r0, [sp, #4]
   37658:	ldr	r0, [r0, r8]
   3765c:	add	r3, r3, r0, lsl #3
   37660:	add	r1, r0, r1
   37664:	ldr	r0, [sp, #20]
   37668:	ldr	r5, [sp, #36]	; 0x24
   3766c:	ldr	r4, [sp, #40]	; 0x28
   37670:	ldr	r2, [sp, #32]
   37674:	add	r5, r5, r0
   37678:	ldr	r0, [sp, #44]	; 0x2c
   3767c:	add	r2, r2, r4
   37680:	cmp	r2, r0
   37684:	ldr	r0, [sp, #28]
   37688:	blt	37570 <GetDataSlab+0x14bac>
   3768c:	mov	r0, #0
   37690:	ldr	r1, [sp, #52]	; 0x34
   37694:	cmp	r1, #13
   37698:	bne	24900 <GetDataSlab+0x1f3c>
   3769c:	ldr	r0, [fp, #16]
   376a0:	ldr	r4, [fp, #8]
   376a4:	ldr	sl, [fp, #20]
   376a8:	ldr	ip, [fp, #12]
   376ac:	mov	r2, #0
   376b0:	add	r8, sp, #64	; 0x40
   376b4:	sub	lr, fp, #72	; 0x48
   376b8:	ldr	r0, [r0]
   376bc:	str	r0, [sp, #20]
   376c0:	sub	r0, r0, #1
   376c4:	str	r0, [fp, #-72]	; 0xffffffb8
   376c8:	ldr	r0, [r4]
   376cc:	str	r0, [sp, #64]	; 0x40
   376d0:	str	r0, [sp, #40]	; 0x28
   376d4:	ldr	r0, [fp, #24]
   376d8:	ldr	r1, [sl]
   376dc:	cmp	r0, #2
   376e0:	str	r1, [sp, #44]	; 0x2c
   376e4:	str	r1, [sp, #52]	; 0x34
   376e8:	blt	37784 <GetDataSlab+0x14dc0>
   376ec:	ldr	r6, [sp, #40]	; 0x28
   376f0:	ldr	r0, [sp, #44]	; 0x2c
   376f4:	mov	r1, #1
   376f8:	mov	r2, #0
   376fc:	mov	r7, r4
   37700:	mov	r5, r6
   37704:	str	r0, [sp, #52]	; 0x34
   37708:	ldr	r0, [fp, #16]
   3770c:	ldr	r0, [r0, r1, lsl #2]
   37710:	str	r6, [r8, r1, lsl #2]
   37714:	sub	r3, r0, #1
   37718:	str	r3, [lr, r1, lsl #2]
   3771c:	ldr	r9, [r4, r1, lsl #2]
   37720:	mov	r4, #0
   37724:	mov	r0, r9
   37728:	mul	r6, r0, r6
   3772c:	ldr	r0, [r7, -r4, lsl #2]
   37730:	add	r4, r4, #1
   37734:	cmp	r1, r4
   37738:	mul	r3, r3, r0
   3773c:	bne	37728 <GetDataSlab+0x14d64>
   37740:	sub	lr, fp, #72	; 0x48
   37744:	str	r6, [r8, r1, lsl #2]
   37748:	ldr	r4, [fp, #8]
   3774c:	add	r7, r7, #4
   37750:	str	r3, [lr, r1, lsl #2]
   37754:	ldr	r3, [sp, #52]	; 0x34
   37758:	ldr	r0, [ip, r1, lsl #2]
   3775c:	mla	r2, r0, r5, r2
   37760:	ldr	r0, [sl, r1, lsl #2]
   37764:	add	r1, r1, #1
   37768:	mov	r5, r6
   3776c:	mov	r6, r9
   37770:	mul	r3, r0, r3
   37774:	ldr	r0, [fp, #24]
   37778:	str	r3, [sp, #52]	; 0x34
   3777c:	cmp	r1, r0
   37780:	bne	37708 <GetDataSlab+0x14d44>
   37784:	ldr	r0, [sp, #48]	; 0x30
   37788:	ldr	r4, [sp, #20]
   3778c:	add	r7, r0, r2, lsl #3
   37790:	cmp	r4, #1
   37794:	bne	3d114 <GetDataSlab+0x1a750>
   37798:	ldr	r0, [sp, #52]	; 0x34
   3779c:	ldr	r3, [sp, #44]	; 0x2c
   377a0:	cmp	r0, #1
   377a4:	blt	248fc <GetDataSlab+0x1f38>
   377a8:	add	r0, sp, #104	; 0x68
   377ac:	ldr	r6, [sp, #56]	; 0x38
   377b0:	add	r9, sl, #4
   377b4:	orr	lr, r8, #4
   377b8:	orr	r1, r0, #4
   377bc:	ldr	r0, [fp, #24]
   377c0:	sub	r0, r0, #1
   377c4:	str	r0, [sp, #32]
   377c8:	sub	r0, fp, #72	; 0x48
   377cc:	orr	r0, r0, #4
   377d0:	str	r0, [sp, #28]
   377d4:	lsl	r0, r3, #1
   377d8:	str	r0, [sp, #48]	; 0x30
   377dc:	ldr	r0, [ip], #4
   377e0:	str	r0, [sp, #36]	; 0x24
   377e4:	mov	r0, #0
   377e8:	str	r0, [sp, #60]	; 0x3c
   377ec:	cmp	r3, #1
   377f0:	blt	37814 <GetDataSlab+0x14e50>
   377f4:	ldr	r0, [sp, #36]	; 0x24
   377f8:	ldr	r4, [sp, #44]	; 0x2c
   377fc:	mov	r3, r6
   37800:	add	r0, r7, r0, lsl #3
   37804:	ldrh	r5, [r0], #8
   37808:	subs	r4, r4, #1
   3780c:	strh	r5, [r3], #2
   37810:	bne	37804 <GetDataSlab+0x14e40>
   37814:	ldr	r0, [sp, #40]	; 0x28
   37818:	str	r6, [sp, #56]	; 0x38
   3781c:	add	r6, sp, #64	; 0x40
   37820:	add	r7, r7, r0, lsl #3
   37824:	add	r2, r2, r0
   37828:	ldr	r0, [fp, #24]
   3782c:	cmp	r0, #2
   37830:	blt	378d0 <GetDataSlab+0x14f0c>
   37834:	ldr	sl, [sp, #32]
   37838:	mov	r0, #0
   3783c:	ldr	r3, [r1, r0]
   37840:	add	r3, r3, #1
   37844:	str	r3, [r1, r0]
   37848:	ldr	r4, [r9, r0]
   3784c:	sdiv	r5, r3, r4
   37850:	mls	r3, r5, r4, r3
   37854:	cmp	r3, #0
   37858:	bne	378c0 <GetDataSlab+0x14efc>
   3785c:	mov	r3, #0
   37860:	str	r3, [r1, r0]
   37864:	ldr	r3, [lr, r0]
   37868:	sdiv	r4, r2, r3
   3786c:	mls	r4, r4, r3, r2
   37870:	cmp	r4, #0
   37874:	beq	37894 <GetDataSlab+0x14ed0>
   37878:	ldr	r5, [r6, r0]
   3787c:	ldr	r8, [ip, r0]
   37880:	sub	r3, r3, r4
   37884:	add	r6, sp, #64	; 0x40
   37888:	mla	r3, r8, r5, r3
   3788c:	add	r2, r3, r2
   37890:	b	378ac <GetDataSlab+0x14ee8>
   37894:	ldr	r3, [ip, r0]
   37898:	cmp	r3, #0
   3789c:	beq	378b0 <GetDataSlab+0x14eec>
   378a0:	ldr	r4, [r6, r0]
   378a4:	mla	r2, r4, r3, r2
   378a8:	mul	r3, r4, r3
   378ac:	add	r7, r7, r3, lsl #3
   378b0:	subs	sl, sl, #1
   378b4:	add	r0, r0, #4
   378b8:	bne	3783c <GetDataSlab+0x14e78>
   378bc:	b	378d0 <GetDataSlab+0x14f0c>
   378c0:	ldr	r3, [sp, #28]
   378c4:	ldr	r0, [r3, r0]
   378c8:	add	r7, r7, r0, lsl #3
   378cc:	add	r2, r0, r2
   378d0:	ldr	r0, [sp, #48]	; 0x30
   378d4:	ldr	r6, [sp, #56]	; 0x38
   378d8:	ldr	r3, [sp, #44]	; 0x2c
   378dc:	ldr	r4, [sp, #60]	; 0x3c
   378e0:	add	r6, r6, r0
   378e4:	ldr	r0, [sp, #52]	; 0x34
   378e8:	add	r4, r4, r3
   378ec:	str	r4, [sp, #60]	; 0x3c
   378f0:	cmp	r4, r0
   378f4:	mov	r0, #0
   378f8:	blt	377ec <GetDataSlab+0x14e28>
   378fc:	b	24900 <GetDataSlab+0x1f3c>
   37900:	ldr	r0, [sp, #52]	; 0x34
   37904:	ldr	r2, [fp, #12]
   37908:	cmp	r0, #1
   3790c:	blt	248fc <GetDataSlab+0x1f38>
   37910:	ldr	r4, [sp, #44]	; 0x2c
   37914:	ldr	r0, [sp, #40]	; 0x28
   37918:	mls	r0, r4, lr, r0
   3791c:	str	r0, [sp, #40]	; 0x28
   37920:	mul	r0, r4, lr
   37924:	str	r0, [sp, #32]
   37928:	add	r0, sp, #104	; 0x68
   3792c:	orr	r6, r0, #4
   37930:	ldr	r0, [fp, #20]
   37934:	add	r1, r0, #4
   37938:	mov	r0, r2
   3793c:	add	r2, sp, #64	; 0x40
   37940:	add	ip, r0, #4
   37944:	ldr	r0, [fp, #24]
   37948:	orr	sl, r2, #4
   3794c:	mov	r2, r4
   37950:	sub	r0, r0, #1
   37954:	str	r0, [sp, #28]
   37958:	sub	r0, fp, #72	; 0x48
   3795c:	orr	r0, r0, #4
   37960:	str	r0, [sp, #24]
   37964:	lsl	r0, r4, #1
   37968:	str	r0, [sp, #36]	; 0x24
   3796c:	mov	r0, #0
   37970:	str	r0, [sp, #48]	; 0x30
   37974:	ldr	r0, [fp, #12]
   37978:	cmp	r2, #1
   3797c:	ldr	r0, [r0]
   37980:	add	r7, r7, r0
   37984:	blt	379b0 <GetDataSlab+0x14fec>
   37988:	ldr	r4, [sp, #32]
   3798c:	add	r8, r4, r3
   37990:	ldr	r4, [sp, #56]	; 0x38
   37994:	mov	r3, r2
   37998:	ldrb	r5, [r7], lr
   3799c:	subs	r3, r3, #1
   379a0:	strh	r5, [r4], #2
   379a4:	bne	37998 <GetDataSlab+0x14fd4>
   379a8:	add	r3, r8, r0
   379ac:	b	379b4 <GetDataSlab+0x14ff0>
   379b0:	add	r3, r0, r3
   379b4:	ldr	r2, [sp, #40]	; 0x28
   379b8:	sub	r0, r2, r0
   379bc:	add	r7, r7, r0
   379c0:	add	r3, r3, r0
   379c4:	ldr	r0, [fp, #24]
   379c8:	cmp	r0, #2
   379cc:	blt	37a70 <GetDataSlab+0x150ac>
   379d0:	ldr	r8, [sp, #28]
   379d4:	mov	r0, #0
   379d8:	ldr	r4, [r6, r0]
   379dc:	add	r4, r4, #1
   379e0:	str	r4, [r6, r0]
   379e4:	ldr	r5, [r1, r0]
   379e8:	sdiv	r2, r4, r5
   379ec:	mls	r2, r2, r5, r4
   379f0:	cmp	r2, #0
   379f4:	bne	37a60 <GetDataSlab+0x1509c>
   379f8:	ldr	r4, [sl, r0]
   379fc:	mov	r2, #0
   37a00:	str	r2, [r6, r0]
   37a04:	sdiv	r2, r3, r4
   37a08:	mls	r9, r2, r4, r3
   37a0c:	cmp	r9, #0
   37a10:	beq	37a34 <GetDataSlab+0x15070>
   37a14:	add	r2, sp, #64	; 0x40
   37a18:	ldr	r5, [ip, r0]
   37a1c:	sub	r4, r4, r9
   37a20:	ldr	r2, [r2, r0]
   37a24:	mla	r2, r5, r2, r4
   37a28:	add	r3, r2, r3
   37a2c:	add	r7, r7, r2
   37a30:	b	37a50 <GetDataSlab+0x1508c>
   37a34:	ldr	r4, [ip, r0]
   37a38:	cmp	r4, #0
   37a3c:	beq	37a50 <GetDataSlab+0x1508c>
   37a40:	add	r2, sp, #64	; 0x40
   37a44:	ldr	r2, [r2, r0]
   37a48:	mla	r3, r2, r4, r3
   37a4c:	mla	r7, r2, r4, r7
   37a50:	subs	r8, r8, #1
   37a54:	add	r0, r0, #4
   37a58:	bne	379d8 <GetDataSlab+0x15014>
   37a5c:	b	37a70 <GetDataSlab+0x150ac>
   37a60:	ldr	r2, [sp, #24]
   37a64:	ldr	r0, [r2, r0]
   37a68:	add	r7, r7, r0
   37a6c:	add	r3, r0, r3
   37a70:	ldr	r0, [sp, #36]	; 0x24
   37a74:	ldr	r2, [sp, #56]	; 0x38
   37a78:	ldr	r4, [sp, #48]	; 0x30
   37a7c:	add	r2, r2, r0
   37a80:	ldr	r0, [sp, #52]	; 0x34
   37a84:	str	r2, [sp, #56]	; 0x38
   37a88:	ldr	r2, [sp, #44]	; 0x2c
   37a8c:	add	r4, r4, r2
   37a90:	cmp	r4, r0
   37a94:	mov	r0, #0
   37a98:	str	r4, [sp, #48]	; 0x30
   37a9c:	blt	37974 <GetDataSlab+0x14fb0>
   37aa0:	b	24900 <GetDataSlab+0x1f3c>
   37aa4:	ldr	r0, [sp, #52]	; 0x34
   37aa8:	ldr	r1, [sp, #44]	; 0x2c
   37aac:	cmp	r0, #1
   37ab0:	blt	248fc <GetDataSlab+0x1f38>
   37ab4:	ldr	r0, [sp, #40]	; 0x28
   37ab8:	ldr	r3, [ip], #4
   37abc:	lsl	sl, lr, #1
   37ac0:	mls	r0, r1, lr, r0
   37ac4:	str	r3, [sp, #48]	; 0x30
   37ac8:	sub	r0, r0, r3
   37acc:	str	r0, [sp, #40]	; 0x28
   37ad0:	add	r0, sp, #104	; 0x68
   37ad4:	orr	r6, r0, #4
   37ad8:	ldr	r0, [fp, #20]
   37adc:	add	r5, r0, #4
   37ae0:	add	r0, sp, #64	; 0x40
   37ae4:	orr	r8, r0, #4
   37ae8:	ldr	r0, [fp, #24]
   37aec:	sub	r0, r0, #1
   37af0:	str	r0, [sp, #28]
   37af4:	sub	r0, fp, #72	; 0x48
   37af8:	orr	r0, r0, #4
   37afc:	str	r0, [sp, #24]
   37b00:	mla	r0, r1, lr, r3
   37b04:	str	r0, [sp, #32]
   37b08:	lsl	r0, r1, #1
   37b0c:	str	r0, [sp, #36]	; 0x24
   37b10:	ldr	r0, [sp, #56]	; 0x38
   37b14:	str	r0, [sp, #60]	; 0x3c
   37b18:	mov	r0, #0
   37b1c:	str	r0, [sp, #56]	; 0x38
   37b20:	ldr	r3, [sp, #48]	; 0x30
   37b24:	cmp	r1, #1
   37b28:	add	r0, r7, r3, lsl #1
   37b2c:	blt	37b4c <GetDataSlab+0x15188>
   37b30:	ldr	r3, [sp, #60]	; 0x3c
   37b34:	mov	r7, r1
   37b38:	ldrh	r4, [r0], sl
   37b3c:	subs	r7, r7, #1
   37b40:	strh	r4, [r3], #2
   37b44:	bne	37b38 <GetDataSlab+0x15174>
   37b48:	ldr	r3, [sp, #32]
   37b4c:	ldr	r1, [sp, #40]	; 0x28
   37b50:	add	r7, r0, r1, lsl #1
   37b54:	add	r0, r3, r2
   37b58:	add	r2, r0, r1
   37b5c:	ldr	r0, [fp, #24]
   37b60:	cmp	r0, #2
   37b64:	blt	37c08 <GetDataSlab+0x15244>
   37b68:	ldr	lr, [sp, #28]
   37b6c:	mov	r0, #0
   37b70:	ldr	r3, [r6, r0]
   37b74:	add	r3, r3, #1
   37b78:	str	r3, [r6, r0]
   37b7c:	ldr	r4, [r5, r0]
   37b80:	sdiv	r1, r3, r4
   37b84:	mls	r1, r1, r4, r3
   37b88:	cmp	r1, #0
   37b8c:	bne	37bf8 <GetDataSlab+0x15234>
   37b90:	ldr	r3, [r8, r0]
   37b94:	mov	r1, #0
   37b98:	str	r1, [r6, r0]
   37b9c:	sdiv	r1, r2, r3
   37ba0:	mls	r9, r1, r3, r2
   37ba4:	cmp	r9, #0
   37ba8:	beq	37bc8 <GetDataSlab+0x15204>
   37bac:	add	r1, sp, #64	; 0x40
   37bb0:	ldr	r4, [ip, r0]
   37bb4:	sub	r3, r3, r9
   37bb8:	ldr	r1, [r1, r0]
   37bbc:	mla	r1, r4, r1, r3
   37bc0:	add	r2, r1, r2
   37bc4:	b	37be4 <GetDataSlab+0x15220>
   37bc8:	ldr	r3, [ip, r0]
   37bcc:	cmp	r3, #0
   37bd0:	beq	37be8 <GetDataSlab+0x15224>
   37bd4:	add	r1, sp, #64	; 0x40
   37bd8:	ldr	r1, [r1, r0]
   37bdc:	mla	r2, r1, r3, r2
   37be0:	mul	r1, r1, r3
   37be4:	add	r7, r7, r1, lsl #1
   37be8:	subs	lr, lr, #1
   37bec:	add	r0, r0, #4
   37bf0:	bne	37b70 <GetDataSlab+0x151ac>
   37bf4:	b	37c08 <GetDataSlab+0x15244>
   37bf8:	ldr	r1, [sp, #24]
   37bfc:	ldr	r0, [r1, r0]
   37c00:	add	r7, r7, r0, lsl #1
   37c04:	add	r2, r0, r2
   37c08:	ldr	r0, [sp, #36]	; 0x24
   37c0c:	ldr	r1, [sp, #60]	; 0x3c
   37c10:	ldr	r3, [sp, #56]	; 0x38
   37c14:	add	r1, r1, r0
   37c18:	ldr	r0, [sp, #52]	; 0x34
   37c1c:	str	r1, [sp, #60]	; 0x3c
   37c20:	ldr	r1, [sp, #44]	; 0x2c
   37c24:	add	r3, r3, r1
   37c28:	cmp	r3, r0
   37c2c:	mov	r0, #0
   37c30:	str	r3, [sp, #56]	; 0x38
   37c34:	blt	37b20 <GetDataSlab+0x1515c>
   37c38:	b	24900 <GetDataSlab+0x1f3c>
   37c3c:	ldr	r0, [sp, #52]	; 0x34
   37c40:	ldr	r1, [sp, #44]	; 0x2c
   37c44:	cmp	r0, #1
   37c48:	blt	248fc <GetDataSlab+0x1f38>
   37c4c:	ldr	r0, [sp, #40]	; 0x28
   37c50:	ldr	r3, [ip], #4
   37c54:	lsl	sl, lr, #1
   37c58:	mls	r0, r1, lr, r0
   37c5c:	str	r3, [sp, #48]	; 0x30
   37c60:	sub	r0, r0, r3
   37c64:	str	r0, [sp, #40]	; 0x28
   37c68:	add	r0, sp, #104	; 0x68
   37c6c:	orr	r6, r0, #4
   37c70:	ldr	r0, [fp, #20]
   37c74:	add	r5, r0, #4
   37c78:	add	r0, sp, #64	; 0x40
   37c7c:	orr	r8, r0, #4
   37c80:	ldr	r0, [fp, #24]
   37c84:	sub	r0, r0, #1
   37c88:	str	r0, [sp, #28]
   37c8c:	sub	r0, fp, #72	; 0x48
   37c90:	orr	r0, r0, #4
   37c94:	str	r0, [sp, #24]
   37c98:	mla	r0, r1, lr, r3
   37c9c:	str	r0, [sp, #32]
   37ca0:	lsl	r0, r1, #1
   37ca4:	str	r0, [sp, #36]	; 0x24
   37ca8:	ldr	r0, [sp, #56]	; 0x38
   37cac:	str	r0, [sp, #60]	; 0x3c
   37cb0:	mov	r0, #0
   37cb4:	str	r0, [sp, #56]	; 0x38
   37cb8:	ldr	r3, [sp, #48]	; 0x30
   37cbc:	cmp	r1, #1
   37cc0:	add	r0, r7, r3, lsl #1
   37cc4:	blt	37ce4 <GetDataSlab+0x15320>
   37cc8:	ldr	r3, [sp, #60]	; 0x3c
   37ccc:	mov	r7, r1
   37cd0:	ldrh	r4, [r0], sl
   37cd4:	subs	r7, r7, #1
   37cd8:	strh	r4, [r3], #2
   37cdc:	bne	37cd0 <GetDataSlab+0x1530c>
   37ce0:	ldr	r3, [sp, #32]
   37ce4:	ldr	r1, [sp, #40]	; 0x28
   37ce8:	add	r7, r0, r1, lsl #1
   37cec:	add	r0, r3, r2
   37cf0:	add	r2, r0, r1
   37cf4:	ldr	r0, [fp, #24]
   37cf8:	cmp	r0, #2
   37cfc:	blt	37da0 <GetDataSlab+0x153dc>
   37d00:	ldr	lr, [sp, #28]
   37d04:	mov	r0, #0
   37d08:	ldr	r3, [r6, r0]
   37d0c:	add	r3, r3, #1
   37d10:	str	r3, [r6, r0]
   37d14:	ldr	r4, [r5, r0]
   37d18:	sdiv	r1, r3, r4
   37d1c:	mls	r1, r1, r4, r3
   37d20:	cmp	r1, #0
   37d24:	bne	37d90 <GetDataSlab+0x153cc>
   37d28:	ldr	r3, [r8, r0]
   37d2c:	mov	r1, #0
   37d30:	str	r1, [r6, r0]
   37d34:	sdiv	r1, r2, r3
   37d38:	mls	r9, r1, r3, r2
   37d3c:	cmp	r9, #0
   37d40:	beq	37d60 <GetDataSlab+0x1539c>
   37d44:	add	r1, sp, #64	; 0x40
   37d48:	ldr	r4, [ip, r0]
   37d4c:	sub	r3, r3, r9
   37d50:	ldr	r1, [r1, r0]
   37d54:	mla	r1, r4, r1, r3
   37d58:	add	r2, r1, r2
   37d5c:	b	37d7c <GetDataSlab+0x153b8>
   37d60:	ldr	r3, [ip, r0]
   37d64:	cmp	r3, #0
   37d68:	beq	37d80 <GetDataSlab+0x153bc>
   37d6c:	add	r1, sp, #64	; 0x40
   37d70:	ldr	r1, [r1, r0]
   37d74:	mla	r2, r1, r3, r2
   37d78:	mul	r1, r1, r3
   37d7c:	add	r7, r7, r1, lsl #1
   37d80:	subs	lr, lr, #1
   37d84:	add	r0, r0, #4
   37d88:	bne	37d08 <GetDataSlab+0x15344>
   37d8c:	b	37da0 <GetDataSlab+0x153dc>
   37d90:	ldr	r1, [sp, #24]
   37d94:	ldr	r0, [r1, r0]
   37d98:	add	r7, r7, r0, lsl #1
   37d9c:	add	r2, r0, r2
   37da0:	ldr	r0, [sp, #36]	; 0x24
   37da4:	ldr	r1, [sp, #60]	; 0x3c
   37da8:	ldr	r3, [sp, #56]	; 0x38
   37dac:	add	r1, r1, r0
   37db0:	ldr	r0, [sp, #52]	; 0x34
   37db4:	str	r1, [sp, #60]	; 0x3c
   37db8:	ldr	r1, [sp, #44]	; 0x2c
   37dbc:	add	r3, r3, r1
   37dc0:	cmp	r3, r0
   37dc4:	mov	r0, #0
   37dc8:	str	r3, [sp, #56]	; 0x38
   37dcc:	blt	37cb8 <GetDataSlab+0x152f4>
   37dd0:	b	24900 <GetDataSlab+0x1f3c>
   37dd4:	ldr	r0, [sp, #52]	; 0x34
   37dd8:	ldr	r1, [sp, #56]	; 0x38
   37ddc:	ldr	r2, [sp, #44]	; 0x2c
   37de0:	cmp	r0, #1
   37de4:	blt	248fc <GetDataSlab+0x1f38>
   37de8:	ldr	r0, [sp, #40]	; 0x28
   37dec:	add	r4, sp, #64	; 0x40
   37df0:	lsl	sl, r9, #2
   37df4:	str	r1, [sp, #56]	; 0x38
   37df8:	mls	r0, r2, r9, r0
   37dfc:	str	r0, [sp, #40]	; 0x28
   37e00:	add	r0, sp, #104	; 0x68
   37e04:	orr	r5, r0, #4
   37e08:	ldr	r0, [fp, #20]
   37e0c:	add	r6, r0, #4
   37e10:	mov	r0, ip
   37e14:	orr	ip, r4, #4
   37e18:	add	r8, r0, #4
   37e1c:	ldr	r0, [fp, #24]
   37e20:	sub	r0, r0, #1
   37e24:	str	r0, [sp, #28]
   37e28:	sub	r0, fp, #72	; 0x48
   37e2c:	orr	r0, r0, #4
   37e30:	str	r0, [sp, #24]
   37e34:	mul	r0, r2, r9
   37e38:	str	r0, [sp, #32]
   37e3c:	lsl	r0, r2, #1
   37e40:	str	r0, [sp, #36]	; 0x24
   37e44:	mov	r0, #0
   37e48:	str	r0, [sp, #48]	; 0x30
   37e4c:	ldr	r0, [fp, #12]
   37e50:	cmp	r2, #1
   37e54:	ldr	r0, [r0]
   37e58:	add	r7, r7, r0, lsl #2
   37e5c:	blt	37e88 <GetDataSlab+0x154c4>
   37e60:	ldr	r1, [sp, #32]
   37e64:	ldr	r4, [sp, #56]	; 0x38
   37e68:	add	lr, r1, r3
   37e6c:	mov	r3, r2
   37e70:	ldr	r1, [r7], sl
   37e74:	subs	r3, r3, #1
   37e78:	strh	r1, [r4], #2
   37e7c:	bne	37e70 <GetDataSlab+0x154ac>
   37e80:	add	r3, lr, r0
   37e84:	b	37e8c <GetDataSlab+0x154c8>
   37e88:	add	r3, r0, r3
   37e8c:	ldr	r1, [sp, #40]	; 0x28
   37e90:	sub	r0, r1, r0
   37e94:	add	r7, r7, r0, lsl #2
   37e98:	add	r3, r3, r0
   37e9c:	ldr	r0, [fp, #24]
   37ea0:	cmp	r0, #2
   37ea4:	blt	37f48 <GetDataSlab+0x15584>
   37ea8:	ldr	lr, [sp, #28]
   37eac:	mov	r0, #0
   37eb0:	ldr	r1, [r5, r0]
   37eb4:	add	r1, r1, #1
   37eb8:	str	r1, [r5, r0]
   37ebc:	ldr	r4, [r6, r0]
   37ec0:	sdiv	r2, r1, r4
   37ec4:	mls	r1, r2, r4, r1
   37ec8:	cmp	r1, #0
   37ecc:	bne	37f38 <GetDataSlab+0x15574>
   37ed0:	ldr	r4, [ip, r0]
   37ed4:	mov	r1, #0
   37ed8:	str	r1, [r5, r0]
   37edc:	sdiv	r1, r3, r4
   37ee0:	mls	r9, r1, r4, r3
   37ee4:	cmp	r9, #0
   37ee8:	beq	37f08 <GetDataSlab+0x15544>
   37eec:	add	r1, sp, #64	; 0x40
   37ef0:	ldr	r2, [r8, r0]
   37ef4:	sub	r4, r4, r9
   37ef8:	ldr	r1, [r1, r0]
   37efc:	mla	r1, r2, r1, r4
   37f00:	add	r3, r1, r3
   37f04:	b	37f24 <GetDataSlab+0x15560>
   37f08:	ldr	r4, [r8, r0]
   37f0c:	cmp	r4, #0
   37f10:	beq	37f28 <GetDataSlab+0x15564>
   37f14:	add	r1, sp, #64	; 0x40
   37f18:	ldr	r1, [r1, r0]
   37f1c:	mla	r3, r1, r4, r3
   37f20:	mul	r1, r1, r4
   37f24:	add	r7, r7, r1, lsl #2
   37f28:	subs	lr, lr, #1
   37f2c:	add	r0, r0, #4
   37f30:	bne	37eb0 <GetDataSlab+0x154ec>
   37f34:	b	37f48 <GetDataSlab+0x15584>
   37f38:	ldr	r1, [sp, #24]
   37f3c:	ldr	r0, [r1, r0]
   37f40:	add	r7, r7, r0, lsl #2
   37f44:	add	r3, r0, r3
   37f48:	ldr	r0, [sp, #36]	; 0x24
   37f4c:	ldr	r1, [sp, #56]	; 0x38
   37f50:	ldr	r2, [sp, #44]	; 0x2c
   37f54:	add	r1, r1, r0
   37f58:	ldr	r0, [sp, #52]	; 0x34
   37f5c:	str	r1, [sp, #56]	; 0x38
   37f60:	ldr	r1, [sp, #48]	; 0x30
   37f64:	add	r1, r1, r2
   37f68:	cmp	r1, r0
   37f6c:	mov	r0, #0
   37f70:	str	r1, [sp, #48]	; 0x30
   37f74:	blt	37e4c <GetDataSlab+0x15488>
   37f78:	b	24900 <GetDataSlab+0x1f3c>
   37f7c:	ldr	r0, [sp, #52]	; 0x34
   37f80:	ldr	r1, [sp, #56]	; 0x38
   37f84:	ldr	r2, [sp, #44]	; 0x2c
   37f88:	cmp	r0, #1
   37f8c:	blt	248fc <GetDataSlab+0x1f38>
   37f90:	ldr	r0, [sp, #40]	; 0x28
   37f94:	add	r4, sp, #64	; 0x40
   37f98:	lsl	sl, r9, #2
   37f9c:	str	r1, [sp, #56]	; 0x38
   37fa0:	mls	r0, r2, r9, r0
   37fa4:	str	r0, [sp, #40]	; 0x28
   37fa8:	add	r0, sp, #104	; 0x68
   37fac:	orr	r5, r0, #4
   37fb0:	ldr	r0, [fp, #20]
   37fb4:	add	r6, r0, #4
   37fb8:	mov	r0, ip
   37fbc:	orr	ip, r4, #4
   37fc0:	add	r8, r0, #4
   37fc4:	ldr	r0, [fp, #24]
   37fc8:	sub	r0, r0, #1
   37fcc:	str	r0, [sp, #28]
   37fd0:	sub	r0, fp, #72	; 0x48
   37fd4:	orr	r0, r0, #4
   37fd8:	str	r0, [sp, #24]
   37fdc:	mul	r0, r2, r9
   37fe0:	str	r0, [sp, #32]
   37fe4:	lsl	r0, r2, #1
   37fe8:	str	r0, [sp, #36]	; 0x24
   37fec:	mov	r0, #0
   37ff0:	str	r0, [sp, #48]	; 0x30
   37ff4:	ldr	r0, [fp, #12]
   37ff8:	cmp	r2, #1
   37ffc:	ldr	r0, [r0]
   38000:	add	r7, r7, r0, lsl #2
   38004:	blt	38030 <GetDataSlab+0x1566c>
   38008:	ldr	r1, [sp, #32]
   3800c:	ldr	r4, [sp, #56]	; 0x38
   38010:	add	lr, r1, r3
   38014:	mov	r3, r2
   38018:	ldr	r1, [r7], sl
   3801c:	subs	r3, r3, #1
   38020:	strh	r1, [r4], #2
   38024:	bne	38018 <GetDataSlab+0x15654>
   38028:	add	r3, lr, r0
   3802c:	b	38034 <GetDataSlab+0x15670>
   38030:	add	r3, r0, r3
   38034:	ldr	r1, [sp, #40]	; 0x28
   38038:	sub	r0, r1, r0
   3803c:	add	r7, r7, r0, lsl #2
   38040:	add	r3, r3, r0
   38044:	ldr	r0, [fp, #24]
   38048:	cmp	r0, #2
   3804c:	blt	380f0 <GetDataSlab+0x1572c>
   38050:	ldr	lr, [sp, #28]
   38054:	mov	r0, #0
   38058:	ldr	r1, [r5, r0]
   3805c:	add	r1, r1, #1
   38060:	str	r1, [r5, r0]
   38064:	ldr	r4, [r6, r0]
   38068:	sdiv	r2, r1, r4
   3806c:	mls	r1, r2, r4, r1
   38070:	cmp	r1, #0
   38074:	bne	380e0 <GetDataSlab+0x1571c>
   38078:	ldr	r4, [ip, r0]
   3807c:	mov	r1, #0
   38080:	str	r1, [r5, r0]
   38084:	sdiv	r1, r3, r4
   38088:	mls	r9, r1, r4, r3
   3808c:	cmp	r9, #0
   38090:	beq	380b0 <GetDataSlab+0x156ec>
   38094:	add	r1, sp, #64	; 0x40
   38098:	ldr	r2, [r8, r0]
   3809c:	sub	r4, r4, r9
   380a0:	ldr	r1, [r1, r0]
   380a4:	mla	r1, r2, r1, r4
   380a8:	add	r3, r1, r3
   380ac:	b	380cc <GetDataSlab+0x15708>
   380b0:	ldr	r4, [r8, r0]
   380b4:	cmp	r4, #0
   380b8:	beq	380d0 <GetDataSlab+0x1570c>
   380bc:	add	r1, sp, #64	; 0x40
   380c0:	ldr	r1, [r1, r0]
   380c4:	mla	r3, r1, r4, r3
   380c8:	mul	r1, r1, r4
   380cc:	add	r7, r7, r1, lsl #2
   380d0:	subs	lr, lr, #1
   380d4:	add	r0, r0, #4
   380d8:	bne	38058 <GetDataSlab+0x15694>
   380dc:	b	380f0 <GetDataSlab+0x1572c>
   380e0:	ldr	r1, [sp, #24]
   380e4:	ldr	r0, [r1, r0]
   380e8:	add	r7, r7, r0, lsl #2
   380ec:	add	r3, r0, r3
   380f0:	ldr	r0, [sp, #36]	; 0x24
   380f4:	ldr	r1, [sp, #56]	; 0x38
   380f8:	ldr	r2, [sp, #44]	; 0x2c
   380fc:	add	r1, r1, r0
   38100:	ldr	r0, [sp, #52]	; 0x34
   38104:	str	r1, [sp, #56]	; 0x38
   38108:	ldr	r1, [sp, #48]	; 0x30
   3810c:	add	r1, r1, r2
   38110:	cmp	r1, r0
   38114:	mov	r0, #0
   38118:	str	r1, [sp, #48]	; 0x30
   3811c:	blt	37ff4 <GetDataSlab+0x15630>
   38120:	b	24900 <GetDataSlab+0x1f3c>
   38124:	ldr	r0, [sp, #52]	; 0x34
   38128:	ldr	r1, [sp, #44]	; 0x2c
   3812c:	cmp	r0, #1
   38130:	blt	248fc <GetDataSlab+0x1f38>
   38134:	ldr	r0, [sp, #40]	; 0x28
   38138:	ldr	r3, [ip], #4
   3813c:	lsl	sl, lr, #2
   38140:	mls	r0, r1, lr, r0
   38144:	str	r3, [sp, #48]	; 0x30
   38148:	sub	r0, r0, r3
   3814c:	str	r0, [sp, #40]	; 0x28
   38150:	add	r0, sp, #104	; 0x68
   38154:	orr	r6, r0, #4
   38158:	ldr	r0, [fp, #20]
   3815c:	add	r5, r0, #4
   38160:	add	r0, sp, #64	; 0x40
   38164:	orr	r8, r0, #4
   38168:	ldr	r0, [fp, #24]
   3816c:	sub	r0, r0, #1
   38170:	str	r0, [sp, #28]
   38174:	sub	r0, fp, #72	; 0x48
   38178:	orr	r0, r0, #4
   3817c:	str	r0, [sp, #24]
   38180:	mla	r0, r1, lr, r3
   38184:	str	r0, [sp, #32]
   38188:	lsl	r0, r1, #1
   3818c:	str	r0, [sp, #36]	; 0x24
   38190:	ldr	r0, [sp, #56]	; 0x38
   38194:	str	r0, [sp, #60]	; 0x3c
   38198:	mov	r0, #0
   3819c:	str	r0, [sp, #56]	; 0x38
   381a0:	ldr	r3, [sp, #48]	; 0x30
   381a4:	cmp	r1, #1
   381a8:	add	r0, r7, r3, lsl #2
   381ac:	blt	381d8 <GetDataSlab+0x15814>
   381b0:	ldr	r3, [sp, #60]	; 0x3c
   381b4:	mov	r7, r1
   381b8:	vldr	s0, [r0]
   381bc:	add	r0, r0, sl
   381c0:	subs	r7, r7, #1
   381c4:	vcvt.u32.f32	s0, s0
   381c8:	vmov	r4, s0
   381cc:	strh	r4, [r3], #2
   381d0:	bne	381b8 <GetDataSlab+0x157f4>
   381d4:	ldr	r3, [sp, #32]
   381d8:	ldr	r1, [sp, #40]	; 0x28
   381dc:	add	r7, r0, r1, lsl #2
   381e0:	add	r0, r3, r2
   381e4:	add	r2, r0, r1
   381e8:	ldr	r0, [fp, #24]
   381ec:	cmp	r0, #2
   381f0:	blt	38294 <GetDataSlab+0x158d0>
   381f4:	ldr	lr, [sp, #28]
   381f8:	mov	r0, #0
   381fc:	ldr	r3, [r6, r0]
   38200:	add	r3, r3, #1
   38204:	str	r3, [r6, r0]
   38208:	ldr	r4, [r5, r0]
   3820c:	sdiv	r1, r3, r4
   38210:	mls	r1, r1, r4, r3
   38214:	cmp	r1, #0
   38218:	bne	38284 <GetDataSlab+0x158c0>
   3821c:	ldr	r3, [r8, r0]
   38220:	mov	r1, #0
   38224:	str	r1, [r6, r0]
   38228:	sdiv	r1, r2, r3
   3822c:	mls	r9, r1, r3, r2
   38230:	cmp	r9, #0
   38234:	beq	38254 <GetDataSlab+0x15890>
   38238:	add	r1, sp, #64	; 0x40
   3823c:	ldr	r4, [ip, r0]
   38240:	sub	r3, r3, r9
   38244:	ldr	r1, [r1, r0]
   38248:	mla	r1, r4, r1, r3
   3824c:	add	r2, r1, r2
   38250:	b	38270 <GetDataSlab+0x158ac>
   38254:	ldr	r3, [ip, r0]
   38258:	cmp	r3, #0
   3825c:	beq	38274 <GetDataSlab+0x158b0>
   38260:	add	r1, sp, #64	; 0x40
   38264:	ldr	r1, [r1, r0]
   38268:	mla	r2, r1, r3, r2
   3826c:	mul	r1, r1, r3
   38270:	add	r7, r7, r1, lsl #2
   38274:	subs	lr, lr, #1
   38278:	add	r0, r0, #4
   3827c:	bne	381fc <GetDataSlab+0x15838>
   38280:	b	38294 <GetDataSlab+0x158d0>
   38284:	ldr	r1, [sp, #24]
   38288:	ldr	r0, [r1, r0]
   3828c:	add	r7, r7, r0, lsl #2
   38290:	add	r2, r0, r2
   38294:	ldr	r0, [sp, #36]	; 0x24
   38298:	ldr	r1, [sp, #60]	; 0x3c
   3829c:	ldr	r3, [sp, #56]	; 0x38
   382a0:	add	r1, r1, r0
   382a4:	ldr	r0, [sp, #52]	; 0x34
   382a8:	str	r1, [sp, #60]	; 0x3c
   382ac:	ldr	r1, [sp, #44]	; 0x2c
   382b0:	add	r3, r3, r1
   382b4:	cmp	r3, r0
   382b8:	mov	r0, #0
   382bc:	str	r3, [sp, #56]	; 0x38
   382c0:	blt	381a0 <GetDataSlab+0x157dc>
   382c4:	b	24900 <GetDataSlab+0x1f3c>
   382c8:	ldr	r0, [sp, #52]	; 0x34
   382cc:	ldr	r1, [sp, #44]	; 0x2c
   382d0:	cmp	r0, #1
   382d4:	blt	248fc <GetDataSlab+0x1f38>
   382d8:	ldr	r0, [sp, #40]	; 0x28
   382dc:	ldr	r3, [ip], #4
   382e0:	lsl	sl, lr, #3
   382e4:	mls	r0, r1, lr, r0
   382e8:	str	r3, [sp, #48]	; 0x30
   382ec:	sub	r0, r0, r3
   382f0:	str	r0, [sp, #40]	; 0x28
   382f4:	add	r0, sp, #104	; 0x68
   382f8:	orr	r6, r0, #4
   382fc:	ldr	r0, [fp, #20]
   38300:	add	r5, r0, #4
   38304:	add	r0, sp, #64	; 0x40
   38308:	orr	r8, r0, #4
   3830c:	ldr	r0, [fp, #24]
   38310:	sub	r0, r0, #1
   38314:	str	r0, [sp, #28]
   38318:	sub	r0, fp, #72	; 0x48
   3831c:	orr	r0, r0, #4
   38320:	str	r0, [sp, #24]
   38324:	mla	r0, r1, lr, r3
   38328:	str	r0, [sp, #32]
   3832c:	lsl	r0, r1, #1
   38330:	str	r0, [sp, #36]	; 0x24
   38334:	ldr	r0, [sp, #56]	; 0x38
   38338:	str	r0, [sp, #60]	; 0x3c
   3833c:	mov	r0, #0
   38340:	str	r0, [sp, #56]	; 0x38
   38344:	ldr	r3, [sp, #48]	; 0x30
   38348:	cmp	r1, #1
   3834c:	add	r0, r7, r3, lsl #3
   38350:	blt	3837c <GetDataSlab+0x159b8>
   38354:	ldr	r3, [sp, #60]	; 0x3c
   38358:	mov	r7, r1
   3835c:	vldr	d16, [r0]
   38360:	add	r0, r0, sl
   38364:	subs	r7, r7, #1
   38368:	vcvt.u32.f64	s0, d16
   3836c:	vmov	r4, s0
   38370:	strh	r4, [r3], #2
   38374:	bne	3835c <GetDataSlab+0x15998>
   38378:	ldr	r3, [sp, #32]
   3837c:	ldr	r1, [sp, #40]	; 0x28
   38380:	add	r7, r0, r1, lsl #3
   38384:	add	r0, r3, r2
   38388:	add	r2, r0, r1
   3838c:	ldr	r0, [fp, #24]
   38390:	cmp	r0, #2
   38394:	blt	38438 <GetDataSlab+0x15a74>
   38398:	ldr	lr, [sp, #28]
   3839c:	mov	r0, #0
   383a0:	ldr	r3, [r6, r0]
   383a4:	add	r3, r3, #1
   383a8:	str	r3, [r6, r0]
   383ac:	ldr	r4, [r5, r0]
   383b0:	sdiv	r1, r3, r4
   383b4:	mls	r1, r1, r4, r3
   383b8:	cmp	r1, #0
   383bc:	bne	38428 <GetDataSlab+0x15a64>
   383c0:	ldr	r3, [r8, r0]
   383c4:	mov	r1, #0
   383c8:	str	r1, [r6, r0]
   383cc:	sdiv	r1, r2, r3
   383d0:	mls	r9, r1, r3, r2
   383d4:	cmp	r9, #0
   383d8:	beq	383f8 <GetDataSlab+0x15a34>
   383dc:	add	r1, sp, #64	; 0x40
   383e0:	ldr	r4, [ip, r0]
   383e4:	sub	r3, r3, r9
   383e8:	ldr	r1, [r1, r0]
   383ec:	mla	r1, r4, r1, r3
   383f0:	add	r2, r1, r2
   383f4:	b	38414 <GetDataSlab+0x15a50>
   383f8:	ldr	r3, [ip, r0]
   383fc:	cmp	r3, #0
   38400:	beq	38418 <GetDataSlab+0x15a54>
   38404:	add	r1, sp, #64	; 0x40
   38408:	ldr	r1, [r1, r0]
   3840c:	mla	r2, r1, r3, r2
   38410:	mul	r1, r1, r3
   38414:	add	r7, r7, r1, lsl #3
   38418:	subs	lr, lr, #1
   3841c:	add	r0, r0, #4
   38420:	bne	383a0 <GetDataSlab+0x159dc>
   38424:	b	38438 <GetDataSlab+0x15a74>
   38428:	ldr	r1, [sp, #24]
   3842c:	ldr	r0, [r1, r0]
   38430:	add	r7, r7, r0, lsl #3
   38434:	add	r2, r0, r2
   38438:	ldr	r0, [sp, #36]	; 0x24
   3843c:	ldr	r1, [sp, #60]	; 0x3c
   38440:	ldr	r3, [sp, #56]	; 0x38
   38444:	add	r1, r1, r0
   38448:	ldr	r0, [sp, #52]	; 0x34
   3844c:	str	r1, [sp, #60]	; 0x3c
   38450:	ldr	r1, [sp, #44]	; 0x2c
   38454:	add	r3, r3, r1
   38458:	cmp	r3, r0
   3845c:	mov	r0, #0
   38460:	str	r3, [sp, #56]	; 0x38
   38464:	blt	38344 <GetDataSlab+0x15980>
   38468:	b	24900 <GetDataSlab+0x1f3c>
   3846c:	ldr	r0, [sp, #44]	; 0x2c
   38470:	ldr	r4, [sp, #40]	; 0x28
   38474:	cmp	r0, #1
   38478:	blt	38608 <GetDataSlab+0x15c44>
   3847c:	ldr	ip, [fp, #12]
   38480:	ldr	r0, [sp, #28]
   38484:	ldr	r5, [sp, #56]	; 0x38
   38488:	lsl	sl, r8, #3
   3848c:	ldr	r2, [ip], #4
   38490:	mls	r0, r4, r8, r0
   38494:	str	ip, [sp, #8]
   38498:	sub	r0, r0, r2
   3849c:	str	r0, [sp, #24]
   384a0:	add	r0, sp, #104	; 0x68
   384a4:	orr	r6, r0, #4
   384a8:	ldr	r0, [fp, #20]
   384ac:	add	ip, r0, #4
   384b0:	add	r0, sp, #64	; 0x40
   384b4:	orr	lr, r0, #4
   384b8:	ldr	r0, [fp, #24]
   384bc:	sub	r0, r0, #1
   384c0:	str	r0, [sp, #12]
   384c4:	mov	r0, r2
   384c8:	sub	r2, fp, #72	; 0x48
   384cc:	orr	r2, r2, #4
   384d0:	str	r0, [sp, #28]
   384d4:	str	r2, [sp, #4]
   384d8:	mla	r2, r4, r8, r0
   384dc:	str	r2, [sp, #16]
   384e0:	lsl	r2, r4, #1
   384e4:	str	r2, [sp, #20]
   384e8:	mov	r2, #0
   384ec:	str	r2, [sp, #32]
   384f0:	add	r2, r3, r0, lsl #3
   384f4:	cmp	r4, #1
   384f8:	blt	38518 <GetDataSlab+0x15b54>
   384fc:	mov	r3, r5
   38500:	ldrh	r7, [r2], sl
   38504:	subs	r4, r4, #1
   38508:	strh	r7, [r3], #2
   3850c:	bne	38500 <GetDataSlab+0x15b3c>
   38510:	ldr	r4, [sp, #16]
   38514:	b	3851c <GetDataSlab+0x15b58>
   38518:	mov	r4, r0
   3851c:	ldr	r0, [sp, #24]
   38520:	add	r1, r4, r1
   38524:	str	r5, [sp, #36]	; 0x24
   38528:	add	r3, r2, r0, lsl #3
   3852c:	add	r1, r1, r0
   38530:	ldr	r0, [fp, #24]
   38534:	cmp	r0, #2
   38538:	blt	385e0 <GetDataSlab+0x15c1c>
   3853c:	ldr	r2, [sp, #12]
   38540:	ldr	r5, [sp, #8]
   38544:	mov	r8, #0
   38548:	ldr	r4, [r6, r8]
   3854c:	add	r4, r4, #1
   38550:	str	r4, [r6, r8]
   38554:	ldr	r7, [ip, r8]
   38558:	sdiv	r0, r4, r7
   3855c:	mls	r0, r0, r7, r4
   38560:	cmp	r0, #0
   38564:	bne	385d0 <GetDataSlab+0x15c0c>
   38568:	ldr	r4, [lr, r8]
   3856c:	mov	r0, #0
   38570:	str	r0, [r6, r8]
   38574:	sdiv	r0, r1, r4
   38578:	mls	r9, r0, r4, r1
   3857c:	cmp	r9, #0
   38580:	beq	385a0 <GetDataSlab+0x15bdc>
   38584:	add	r0, sp, #64	; 0x40
   38588:	ldr	r7, [r5, r8]
   3858c:	sub	r4, r4, r9
   38590:	ldr	r0, [r0, r8]
   38594:	mla	r0, r7, r0, r4
   38598:	add	r1, r0, r1
   3859c:	b	385bc <GetDataSlab+0x15bf8>
   385a0:	ldr	r4, [r5, r8]
   385a4:	cmp	r4, #0
   385a8:	beq	385c0 <GetDataSlab+0x15bfc>
   385ac:	add	r0, sp, #64	; 0x40
   385b0:	ldr	r0, [r0, r8]
   385b4:	mla	r1, r0, r4, r1
   385b8:	mul	r0, r0, r4
   385bc:	add	r3, r3, r0, lsl #3
   385c0:	subs	r2, r2, #1
   385c4:	add	r8, r8, #4
   385c8:	bne	38548 <GetDataSlab+0x15b84>
   385cc:	b	385e0 <GetDataSlab+0x15c1c>
   385d0:	ldr	r0, [sp, #4]
   385d4:	ldr	r0, [r0, r8]
   385d8:	add	r3, r3, r0, lsl #3
   385dc:	add	r1, r0, r1
   385e0:	ldr	r0, [sp, #20]
   385e4:	ldr	r5, [sp, #36]	; 0x24
   385e8:	ldr	r4, [sp, #40]	; 0x28
   385ec:	ldr	r2, [sp, #32]
   385f0:	add	r5, r5, r0
   385f4:	ldr	r0, [sp, #44]	; 0x2c
   385f8:	add	r2, r2, r4
   385fc:	cmp	r2, r0
   38600:	ldr	r0, [sp, #28]
   38604:	blt	384ec <GetDataSlab+0x15b28>
   38608:	mov	r0, #0
   3860c:	ldr	r1, [sp, #52]	; 0x34
   38610:	cmp	r1, #13
   38614:	bne	24900 <GetDataSlab+0x1f3c>
   38618:	ldr	r0, [fp, #16]
   3861c:	ldr	r4, [fp, #8]
   38620:	ldr	sl, [fp, #20]
   38624:	ldr	ip, [fp, #12]
   38628:	mov	r2, #0
   3862c:	add	r8, sp, #64	; 0x40
   38630:	sub	lr, fp, #72	; 0x48
   38634:	ldr	r0, [r0]
   38638:	str	r0, [sp, #20]
   3863c:	sub	r0, r0, #1
   38640:	str	r0, [fp, #-72]	; 0xffffffb8
   38644:	ldr	r0, [r4]
   38648:	str	r0, [sp, #64]	; 0x40
   3864c:	str	r0, [sp, #40]	; 0x28
   38650:	ldr	r0, [fp, #24]
   38654:	ldr	r1, [sl]
   38658:	cmp	r0, #2
   3865c:	str	r1, [sp, #44]	; 0x2c
   38660:	str	r1, [sp, #52]	; 0x34
   38664:	blt	38700 <GetDataSlab+0x15d3c>
   38668:	ldr	r6, [sp, #40]	; 0x28
   3866c:	ldr	r0, [sp, #44]	; 0x2c
   38670:	mov	r1, #1
   38674:	mov	r2, #0
   38678:	mov	r7, r4
   3867c:	mov	r5, r6
   38680:	str	r0, [sp, #52]	; 0x34
   38684:	ldr	r0, [fp, #16]
   38688:	ldr	r0, [r0, r1, lsl #2]
   3868c:	str	r6, [r8, r1, lsl #2]
   38690:	sub	r3, r0, #1
   38694:	str	r3, [lr, r1, lsl #2]
   38698:	ldr	r9, [r4, r1, lsl #2]
   3869c:	mov	r4, #0
   386a0:	mov	r0, r9
   386a4:	mul	r6, r0, r6
   386a8:	ldr	r0, [r7, -r4, lsl #2]
   386ac:	add	r4, r4, #1
   386b0:	cmp	r1, r4
   386b4:	mul	r3, r3, r0
   386b8:	bne	386a4 <GetDataSlab+0x15ce0>
   386bc:	sub	lr, fp, #72	; 0x48
   386c0:	str	r6, [r8, r1, lsl #2]
   386c4:	ldr	r4, [fp, #8]
   386c8:	add	r7, r7, #4
   386cc:	str	r3, [lr, r1, lsl #2]
   386d0:	ldr	r3, [sp, #52]	; 0x34
   386d4:	ldr	r0, [ip, r1, lsl #2]
   386d8:	mla	r2, r0, r5, r2
   386dc:	ldr	r0, [sl, r1, lsl #2]
   386e0:	add	r1, r1, #1
   386e4:	mov	r5, r6
   386e8:	mov	r6, r9
   386ec:	mul	r3, r0, r3
   386f0:	ldr	r0, [fp, #24]
   386f4:	str	r3, [sp, #52]	; 0x34
   386f8:	cmp	r1, r0
   386fc:	bne	38684 <GetDataSlab+0x15cc0>
   38700:	ldr	r0, [sp, #48]	; 0x30
   38704:	ldr	r4, [sp, #20]
   38708:	add	r7, r0, r2, lsl #3
   3870c:	cmp	r4, #1
   38710:	bne	3d2a4 <GetDataSlab+0x1a8e0>
   38714:	ldr	r0, [sp, #52]	; 0x34
   38718:	ldr	r3, [sp, #44]	; 0x2c
   3871c:	cmp	r0, #1
   38720:	blt	248fc <GetDataSlab+0x1f38>
   38724:	add	r0, sp, #104	; 0x68
   38728:	ldr	r6, [sp, #56]	; 0x38
   3872c:	add	r9, sl, #4
   38730:	orr	lr, r8, #4
   38734:	orr	r1, r0, #4
   38738:	ldr	r0, [fp, #24]
   3873c:	sub	r0, r0, #1
   38740:	str	r0, [sp, #32]
   38744:	sub	r0, fp, #72	; 0x48
   38748:	orr	r0, r0, #4
   3874c:	str	r0, [sp, #28]
   38750:	lsl	r0, r3, #1
   38754:	str	r0, [sp, #48]	; 0x30
   38758:	ldr	r0, [ip], #4
   3875c:	str	r0, [sp, #36]	; 0x24
   38760:	mov	r0, #0
   38764:	str	r0, [sp, #60]	; 0x3c
   38768:	cmp	r3, #1
   3876c:	blt	38790 <GetDataSlab+0x15dcc>
   38770:	ldr	r0, [sp, #36]	; 0x24
   38774:	ldr	r4, [sp, #44]	; 0x2c
   38778:	mov	r3, r6
   3877c:	add	r0, r7, r0, lsl #3
   38780:	ldrh	r5, [r0], #8
   38784:	subs	r4, r4, #1
   38788:	strh	r5, [r3], #2
   3878c:	bne	38780 <GetDataSlab+0x15dbc>
   38790:	ldr	r0, [sp, #40]	; 0x28
   38794:	str	r6, [sp, #56]	; 0x38
   38798:	add	r6, sp, #64	; 0x40
   3879c:	add	r7, r7, r0, lsl #3
   387a0:	add	r2, r2, r0
   387a4:	ldr	r0, [fp, #24]
   387a8:	cmp	r0, #2
   387ac:	blt	3884c <GetDataSlab+0x15e88>
   387b0:	ldr	sl, [sp, #32]
   387b4:	mov	r0, #0
   387b8:	ldr	r3, [r1, r0]
   387bc:	add	r3, r3, #1
   387c0:	str	r3, [r1, r0]
   387c4:	ldr	r4, [r9, r0]
   387c8:	sdiv	r5, r3, r4
   387cc:	mls	r3, r5, r4, r3
   387d0:	cmp	r3, #0
   387d4:	bne	3883c <GetDataSlab+0x15e78>
   387d8:	mov	r3, #0
   387dc:	str	r3, [r1, r0]
   387e0:	ldr	r3, [lr, r0]
   387e4:	sdiv	r4, r2, r3
   387e8:	mls	r4, r4, r3, r2
   387ec:	cmp	r4, #0
   387f0:	beq	38810 <GetDataSlab+0x15e4c>
   387f4:	ldr	r5, [r6, r0]
   387f8:	ldr	r8, [ip, r0]
   387fc:	sub	r3, r3, r4
   38800:	add	r6, sp, #64	; 0x40
   38804:	mla	r3, r8, r5, r3
   38808:	add	r2, r3, r2
   3880c:	b	38828 <GetDataSlab+0x15e64>
   38810:	ldr	r3, [ip, r0]
   38814:	cmp	r3, #0
   38818:	beq	3882c <GetDataSlab+0x15e68>
   3881c:	ldr	r4, [r6, r0]
   38820:	mla	r2, r4, r3, r2
   38824:	mul	r3, r4, r3
   38828:	add	r7, r7, r3, lsl #3
   3882c:	subs	sl, sl, #1
   38830:	add	r0, r0, #4
   38834:	bne	387b8 <GetDataSlab+0x15df4>
   38838:	b	3884c <GetDataSlab+0x15e88>
   3883c:	ldr	r3, [sp, #28]
   38840:	ldr	r0, [r3, r0]
   38844:	add	r7, r7, r0, lsl #3
   38848:	add	r2, r0, r2
   3884c:	ldr	r0, [sp, #48]	; 0x30
   38850:	ldr	r6, [sp, #56]	; 0x38
   38854:	ldr	r3, [sp, #44]	; 0x2c
   38858:	ldr	r4, [sp, #60]	; 0x3c
   3885c:	add	r6, r6, r0
   38860:	ldr	r0, [sp, #52]	; 0x34
   38864:	add	r4, r4, r3
   38868:	str	r4, [sp, #60]	; 0x3c
   3886c:	cmp	r4, r0
   38870:	mov	r0, #0
   38874:	blt	38768 <GetDataSlab+0x15da4>
   38878:	b	24900 <GetDataSlab+0x1f3c>
   3887c:	ldr	r0, [sp, #44]	; 0x2c
   38880:	ldr	ip, [fp, #12]
   38884:	cmp	r0, #1
   38888:	add	r0, sp, #64	; 0x40
   3888c:	blt	248fc <GetDataSlab+0x1f38>
   38890:	orr	r0, r0, #4
   38894:	ldr	r4, [fp, #20]
   38898:	add	r7, sp, #104	; 0x68
   3889c:	str	r0, [sp, #48]	; 0x30
   388a0:	ldr	r0, [fp, #24]
   388a4:	orr	sl, r7, #4
   388a8:	add	r2, r4, #4
   388ac:	sub	r0, r0, #1
   388b0:	str	r2, [sp, #52]	; 0x34
   388b4:	str	r0, [sp, #28]
   388b8:	sub	r0, fp, #72	; 0x48
   388bc:	orr	r0, r0, #4
   388c0:	str	r0, [sp, #24]
   388c4:	ldr	r0, [ip], #4
   388c8:	str	r0, [sp, #32]
   388cc:	mov	r0, #0
   388d0:	str	r0, [sp, #36]	; 0x24
   388d4:	ldr	r1, [sp, #32]
   388d8:	cmp	lr, #1
   388dc:	add	r0, r1, r5
   388e0:	add	r5, r6, r1
   388e4:	blt	3893c <GetDataSlab+0x15f78>
   388e8:	ldr	r1, [sp, #56]	; 0x38
   388ec:	ldr	r2, [sp, #36]	; 0x24
   388f0:	ldr	lr, [fp, #8]
   388f4:	ldr	r6, [fp, #16]
   388f8:	mov	r7, #0
   388fc:	add	r4, r1, r2, lsl #2
   38900:	ldr	r1, [fp, #20]
   38904:	mov	r8, lr
   38908:	ldrb	r2, [r5]
   3890c:	str	r2, [r4, r7, lsl #2]
   38910:	add	r7, r7, #1
   38914:	ldr	r3, [r6]
   38918:	ldr	lr, [r1]
   3891c:	add	r0, r3, r0
   38920:	add	r5, r5, r3
   38924:	cmp	r7, lr
   38928:	blt	38908 <GetDataSlab+0x15f44>
   3892c:	ldr	r1, [fp, #12]
   38930:	ldr	r2, [r8]
   38934:	ldr	r1, [r1]
   38938:	b	38940 <GetDataSlab+0x15f7c>
   3893c:	ldr	r2, [sp, #40]	; 0x28
   38940:	mls	r7, r3, lr, r2
   38944:	str	r2, [sp, #40]	; 0x28
   38948:	str	r1, [sp, #32]
   3894c:	sub	r7, r7, r1
   38950:	add	r6, r5, r7
   38954:	add	r5, r7, r0
   38958:	ldr	r0, [fp, #24]
   3895c:	cmp	r0, #2
   38960:	blt	38a1c <GetDataSlab+0x16058>
   38964:	ldr	r8, [sp, #28]
   38968:	mov	r0, #0
   3896c:	ldr	r4, [sl, r0]
   38970:	ldr	r1, [sp, #52]	; 0x34
   38974:	add	r4, r4, #1
   38978:	str	r4, [sl, r0]
   3897c:	ldr	r7, [r1, r0]
   38980:	sdiv	r9, r4, r7
   38984:	mls	r4, r9, r7, r4
   38988:	cmp	r4, #0
   3898c:	bne	38a0c <GetDataSlab+0x16048>
   38990:	mov	r1, #0
   38994:	str	r1, [sl, r0]
   38998:	ldr	r1, [sp, #48]	; 0x30
   3899c:	ldr	r4, [r1, r0]
   389a0:	sdiv	r7, r5, r4
   389a4:	mls	r7, r7, r4, r5
   389a8:	cmp	r7, #0
   389ac:	beq	389e0 <GetDataSlab+0x1601c>
   389b0:	add	r1, sp, #64	; 0x40
   389b4:	mov	r2, r6
   389b8:	mov	r6, r5
   389bc:	ldr	r5, [ip, r0]
   389c0:	sub	r4, r4, r7
   389c4:	ldr	r1, [r1, r0]
   389c8:	mla	r1, r5, r1, r4
   389cc:	mov	r5, r6
   389d0:	mov	r6, r2
   389d4:	add	r5, r1, r5
   389d8:	add	r6, r2, r1
   389dc:	b	389fc <GetDataSlab+0x16038>
   389e0:	ldr	r4, [ip, r0]
   389e4:	cmp	r4, #0
   389e8:	beq	389fc <GetDataSlab+0x16038>
   389ec:	add	r1, sp, #64	; 0x40
   389f0:	ldr	r1, [r1, r0]
   389f4:	mla	r5, r1, r4, r5
   389f8:	mla	r6, r1, r4, r6
   389fc:	subs	r8, r8, #1
   38a00:	add	r0, r0, #4
   38a04:	bne	3896c <GetDataSlab+0x15fa8>
   38a08:	b	38a1c <GetDataSlab+0x16058>
   38a0c:	ldr	r1, [sp, #24]
   38a10:	ldr	r0, [r1, r0]
   38a14:	add	r6, r6, r0
   38a18:	add	r5, r0, r5
   38a1c:	ldr	r2, [sp, #36]	; 0x24
   38a20:	ldr	r1, [sp, #44]	; 0x2c
   38a24:	mov	r0, #0
   38a28:	add	r2, lr, r2
   38a2c:	cmp	r2, r1
   38a30:	str	r2, [sp, #36]	; 0x24
   38a34:	blt	388d4 <GetDataSlab+0x15f10>
   38a38:	b	24900 <GetDataSlab+0x1f3c>
   38a3c:	ldr	r0, [sp, #40]	; 0x28
   38a40:	cmp	r0, #1
   38a44:	add	r0, sp, #64	; 0x40
   38a48:	blt	248fc <GetDataSlab+0x1f38>
   38a4c:	orr	r0, r0, #4
   38a50:	ldr	ip, [fp, #12]
   38a54:	add	r1, sp, #104	; 0x68
   38a58:	str	r0, [sp, #48]	; 0x30
   38a5c:	ldr	r0, [fp, #24]
   38a60:	orr	r6, r1, #4
   38a64:	ldr	r1, [fp, #20]
   38a68:	str	r6, [sp, #44]	; 0x2c
   38a6c:	sub	r0, r0, #1
   38a70:	add	r1, r1, #4
   38a74:	str	r0, [sp, #24]
   38a78:	sub	r0, fp, #72	; 0x48
   38a7c:	str	r1, [sp, #52]	; 0x34
   38a80:	orr	r0, r0, #4
   38a84:	str	r0, [sp, #20]
   38a88:	ldr	r0, [ip], #4
   38a8c:	str	r0, [sp, #28]
   38a90:	mov	r0, #0
   38a94:	str	r0, [sp, #32]
   38a98:	ldr	r1, [sp, #28]
   38a9c:	cmp	sl, #1
   38aa0:	add	r5, r5, r1, lsl #1
   38aa4:	add	r0, r1, lr
   38aa8:	blt	38b00 <GetDataSlab+0x1613c>
   38aac:	ldr	r1, [sp, #56]	; 0x38
   38ab0:	ldr	r2, [sp, #32]
   38ab4:	ldr	lr, [fp, #8]
   38ab8:	ldr	r6, [fp, #16]
   38abc:	mov	r7, #0
   38ac0:	add	r4, r1, r2, lsl #2
   38ac4:	ldr	r1, [fp, #20]
   38ac8:	ldrsh	r2, [r5]
   38acc:	str	r2, [r4, r7, lsl #2]
   38ad0:	add	r7, r7, #1
   38ad4:	ldr	r3, [r6]
   38ad8:	ldr	sl, [r1]
   38adc:	add	r5, r5, r3, lsl #1
   38ae0:	add	r0, r3, r0
   38ae4:	cmp	r7, sl
   38ae8:	blt	38ac8 <GetDataSlab+0x16104>
   38aec:	ldr	r1, [fp, #12]
   38af0:	ldr	r2, [lr]
   38af4:	ldr	r6, [sp, #44]	; 0x2c
   38af8:	ldr	r1, [r1]
   38afc:	b	38b04 <GetDataSlab+0x16140>
   38b00:	ldr	r2, [sp, #36]	; 0x24
   38b04:	mls	r7, r3, sl, r2
   38b08:	str	r1, [sp, #28]
   38b0c:	sub	r7, r7, r1
   38b10:	add	lr, r7, r0
   38b14:	ldr	r0, [fp, #24]
   38b18:	add	r5, r5, r7, lsl #1
   38b1c:	cmp	r0, #2
   38b20:	blt	38bd8 <GetDataSlab+0x16214>
   38b24:	ldr	r8, [sp, #24]
   38b28:	mov	r0, #0
   38b2c:	ldr	r4, [r6, r0]
   38b30:	ldr	r1, [sp, #52]	; 0x34
   38b34:	add	r4, r4, #1
   38b38:	str	r4, [r6, r0]
   38b3c:	ldr	r7, [r1, r0]
   38b40:	sdiv	r9, r4, r7
   38b44:	mls	r4, r9, r7, r4
   38b48:	cmp	r4, #0
   38b4c:	bne	38bc8 <GetDataSlab+0x16204>
   38b50:	mov	r1, #0
   38b54:	str	r1, [r6, r0]
   38b58:	ldr	r1, [sp, #48]	; 0x30
   38b5c:	ldr	r4, [r1, r0]
   38b60:	sdiv	r7, lr, r4
   38b64:	mls	r7, r7, r4, lr
   38b68:	cmp	r7, #0
   38b6c:	beq	38b98 <GetDataSlab+0x161d4>
   38b70:	add	r1, sp, #64	; 0x40
   38b74:	mov	r6, r5
   38b78:	ldr	r5, [ip, r0]
   38b7c:	sub	r4, r4, r7
   38b80:	ldr	r1, [r1, r0]
   38b84:	mla	r1, r5, r1, r4
   38b88:	mov	r5, r6
   38b8c:	ldr	r6, [sp, #44]	; 0x2c
   38b90:	add	lr, r1, lr
   38b94:	b	38bb4 <GetDataSlab+0x161f0>
   38b98:	ldr	r4, [ip, r0]
   38b9c:	cmp	r4, #0
   38ba0:	beq	38bb8 <GetDataSlab+0x161f4>
   38ba4:	add	r1, sp, #64	; 0x40
   38ba8:	ldr	r1, [r1, r0]
   38bac:	mla	lr, r1, r4, lr
   38bb0:	mul	r1, r1, r4
   38bb4:	add	r5, r5, r1, lsl #1
   38bb8:	subs	r8, r8, #1
   38bbc:	add	r0, r0, #4
   38bc0:	bne	38b2c <GetDataSlab+0x16168>
   38bc4:	b	38bd8 <GetDataSlab+0x16214>
   38bc8:	ldr	r1, [sp, #20]
   38bcc:	ldr	r0, [r1, r0]
   38bd0:	add	r5, r5, r0, lsl #1
   38bd4:	add	lr, r0, lr
   38bd8:	str	r2, [sp, #36]	; 0x24
   38bdc:	ldr	r2, [sp, #32]
   38be0:	ldr	r1, [sp, #40]	; 0x28
   38be4:	mov	r0, #0
   38be8:	add	r2, sl, r2
   38bec:	cmp	r2, r1
   38bf0:	str	r2, [sp, #32]
   38bf4:	blt	38a98 <GetDataSlab+0x160d4>
   38bf8:	b	24900 <GetDataSlab+0x1f3c>
   38bfc:	ldr	r0, [sp, #40]	; 0x28
   38c00:	cmp	r0, #1
   38c04:	add	r0, sp, #64	; 0x40
   38c08:	blt	248fc <GetDataSlab+0x1f38>
   38c0c:	orr	r0, r0, #4
   38c10:	ldr	ip, [fp, #12]
   38c14:	add	r1, sp, #104	; 0x68
   38c18:	str	r0, [sp, #48]	; 0x30
   38c1c:	ldr	r0, [fp, #24]
   38c20:	orr	r6, r1, #4
   38c24:	ldr	r1, [fp, #20]
   38c28:	str	r6, [sp, #44]	; 0x2c
   38c2c:	sub	r0, r0, #1
   38c30:	add	r1, r1, #4
   38c34:	str	r0, [sp, #24]
   38c38:	sub	r0, fp, #72	; 0x48
   38c3c:	str	r1, [sp, #52]	; 0x34
   38c40:	orr	r0, r0, #4
   38c44:	str	r0, [sp, #20]
   38c48:	ldr	r0, [ip], #4
   38c4c:	str	r0, [sp, #28]
   38c50:	mov	r0, #0
   38c54:	str	r0, [sp, #32]
   38c58:	ldr	r1, [sp, #28]
   38c5c:	cmp	sl, #1
   38c60:	add	r5, r5, r1, lsl #1
   38c64:	add	r0, r1, lr
   38c68:	blt	38cc0 <GetDataSlab+0x162fc>
   38c6c:	ldr	r1, [sp, #56]	; 0x38
   38c70:	ldr	r2, [sp, #32]
   38c74:	ldr	lr, [fp, #8]
   38c78:	ldr	r6, [fp, #16]
   38c7c:	mov	r7, #0
   38c80:	add	r4, r1, r2, lsl #2
   38c84:	ldr	r1, [fp, #20]
   38c88:	ldrh	r2, [r5]
   38c8c:	str	r2, [r4, r7, lsl #2]
   38c90:	add	r7, r7, #1
   38c94:	ldr	r3, [r6]
   38c98:	ldr	sl, [r1]
   38c9c:	add	r5, r5, r3, lsl #1
   38ca0:	add	r0, r3, r0
   38ca4:	cmp	r7, sl
   38ca8:	blt	38c88 <GetDataSlab+0x162c4>
   38cac:	ldr	r1, [fp, #12]
   38cb0:	ldr	r2, [lr]
   38cb4:	ldr	r6, [sp, #44]	; 0x2c
   38cb8:	ldr	r1, [r1]
   38cbc:	b	38cc4 <GetDataSlab+0x16300>
   38cc0:	ldr	r2, [sp, #36]	; 0x24
   38cc4:	mls	r7, r3, sl, r2
   38cc8:	str	r1, [sp, #28]
   38ccc:	sub	r7, r7, r1
   38cd0:	add	lr, r7, r0
   38cd4:	ldr	r0, [fp, #24]
   38cd8:	add	r5, r5, r7, lsl #1
   38cdc:	cmp	r0, #2
   38ce0:	blt	38d98 <GetDataSlab+0x163d4>
   38ce4:	ldr	r8, [sp, #24]
   38ce8:	mov	r0, #0
   38cec:	ldr	r4, [r6, r0]
   38cf0:	ldr	r1, [sp, #52]	; 0x34
   38cf4:	add	r4, r4, #1
   38cf8:	str	r4, [r6, r0]
   38cfc:	ldr	r7, [r1, r0]
   38d00:	sdiv	r9, r4, r7
   38d04:	mls	r4, r9, r7, r4
   38d08:	cmp	r4, #0
   38d0c:	bne	38d88 <GetDataSlab+0x163c4>
   38d10:	mov	r1, #0
   38d14:	str	r1, [r6, r0]
   38d18:	ldr	r1, [sp, #48]	; 0x30
   38d1c:	ldr	r4, [r1, r0]
   38d20:	sdiv	r7, lr, r4
   38d24:	mls	r7, r7, r4, lr
   38d28:	cmp	r7, #0
   38d2c:	beq	38d58 <GetDataSlab+0x16394>
   38d30:	add	r1, sp, #64	; 0x40
   38d34:	mov	r6, r5
   38d38:	ldr	r5, [ip, r0]
   38d3c:	sub	r4, r4, r7
   38d40:	ldr	r1, [r1, r0]
   38d44:	mla	r1, r5, r1, r4
   38d48:	mov	r5, r6
   38d4c:	ldr	r6, [sp, #44]	; 0x2c
   38d50:	add	lr, r1, lr
   38d54:	b	38d74 <GetDataSlab+0x163b0>
   38d58:	ldr	r4, [ip, r0]
   38d5c:	cmp	r4, #0
   38d60:	beq	38d78 <GetDataSlab+0x163b4>
   38d64:	add	r1, sp, #64	; 0x40
   38d68:	ldr	r1, [r1, r0]
   38d6c:	mla	lr, r1, r4, lr
   38d70:	mul	r1, r1, r4
   38d74:	add	r5, r5, r1, lsl #1
   38d78:	subs	r8, r8, #1
   38d7c:	add	r0, r0, #4
   38d80:	bne	38cec <GetDataSlab+0x16328>
   38d84:	b	38d98 <GetDataSlab+0x163d4>
   38d88:	ldr	r1, [sp, #20]
   38d8c:	ldr	r0, [r1, r0]
   38d90:	add	r5, r5, r0, lsl #1
   38d94:	add	lr, r0, lr
   38d98:	str	r2, [sp, #36]	; 0x24
   38d9c:	ldr	r2, [sp, #32]
   38da0:	ldr	r1, [sp, #40]	; 0x28
   38da4:	mov	r0, #0
   38da8:	add	r2, sl, r2
   38dac:	cmp	r2, r1
   38db0:	str	r2, [sp, #32]
   38db4:	blt	38c58 <GetDataSlab+0x16294>
   38db8:	b	24900 <GetDataSlab+0x1f3c>
   38dbc:	ldr	r0, [sp, #44]	; 0x2c
   38dc0:	ldr	ip, [fp, #12]
   38dc4:	cmp	r0, #1
   38dc8:	add	r0, sp, #64	; 0x40
   38dcc:	blt	248fc <GetDataSlab+0x1f38>
   38dd0:	orr	r0, r0, #4
   38dd4:	ldr	r4, [fp, #20]
   38dd8:	add	r7, sp, #104	; 0x68
   38ddc:	str	r0, [sp, #48]	; 0x30
   38de0:	ldr	r0, [fp, #24]
   38de4:	orr	sl, r7, #4
   38de8:	add	r2, r4, #4
   38dec:	sub	r0, r0, #1
   38df0:	str	r2, [sp, #52]	; 0x34
   38df4:	str	r0, [sp, #28]
   38df8:	sub	r0, fp, #72	; 0x48
   38dfc:	orr	r0, r0, #4
   38e00:	str	r0, [sp, #24]
   38e04:	ldr	r0, [ip], #4
   38e08:	str	r0, [sp, #32]
   38e0c:	mov	r0, #0
   38e10:	str	r0, [sp, #36]	; 0x24
   38e14:	ldr	r1, [sp, #32]
   38e18:	cmp	lr, #1
   38e1c:	add	r0, r1, r5
   38e20:	add	r5, r6, r1, lsl #2
   38e24:	blt	38e7c <GetDataSlab+0x164b8>
   38e28:	ldr	r1, [sp, #56]	; 0x38
   38e2c:	ldr	r2, [sp, #36]	; 0x24
   38e30:	ldr	lr, [fp, #8]
   38e34:	ldr	r6, [fp, #16]
   38e38:	mov	r7, #0
   38e3c:	add	r4, r1, r2, lsl #2
   38e40:	ldr	r1, [fp, #20]
   38e44:	mov	r8, lr
   38e48:	ldr	r2, [r5]
   38e4c:	str	r2, [r4, r7, lsl #2]
   38e50:	add	r7, r7, #1
   38e54:	ldr	r3, [r6]
   38e58:	ldr	lr, [r1]
   38e5c:	add	r5, r5, r3, lsl #2
   38e60:	add	r0, r3, r0
   38e64:	cmp	r7, lr
   38e68:	blt	38e48 <GetDataSlab+0x16484>
   38e6c:	ldr	r1, [fp, #12]
   38e70:	ldr	r2, [r8]
   38e74:	ldr	r1, [r1]
   38e78:	b	38e80 <GetDataSlab+0x164bc>
   38e7c:	ldr	r2, [sp, #40]	; 0x28
   38e80:	mls	r7, r3, lr, r2
   38e84:	str	r2, [sp, #40]	; 0x28
   38e88:	str	r1, [sp, #32]
   38e8c:	sub	r7, r7, r1
   38e90:	add	r6, r5, r7, lsl #2
   38e94:	add	r5, r7, r0
   38e98:	ldr	r0, [fp, #24]
   38e9c:	cmp	r0, #2
   38ea0:	blt	38f60 <GetDataSlab+0x1659c>
   38ea4:	ldr	r8, [sp, #28]
   38ea8:	mov	r0, #0
   38eac:	ldr	r4, [sl, r0]
   38eb0:	ldr	r1, [sp, #52]	; 0x34
   38eb4:	add	r4, r4, #1
   38eb8:	str	r4, [sl, r0]
   38ebc:	ldr	r7, [r1, r0]
   38ec0:	sdiv	r9, r4, r7
   38ec4:	mls	r4, r9, r7, r4
   38ec8:	cmp	r4, #0
   38ecc:	bne	38f50 <GetDataSlab+0x1658c>
   38ed0:	mov	r1, #0
   38ed4:	str	r1, [sl, r0]
   38ed8:	ldr	r1, [sp, #48]	; 0x30
   38edc:	ldr	r4, [r1, r0]
   38ee0:	sdiv	r7, r5, r4
   38ee4:	mls	r7, r7, r4, r5
   38ee8:	cmp	r7, #0
   38eec:	beq	38f20 <GetDataSlab+0x1655c>
   38ef0:	add	r1, sp, #64	; 0x40
   38ef4:	mov	r2, r6
   38ef8:	mov	r6, r5
   38efc:	ldr	r5, [ip, r0]
   38f00:	sub	r4, r4, r7
   38f04:	ldr	r1, [r1, r0]
   38f08:	mla	r1, r5, r1, r4
   38f0c:	mov	r5, r6
   38f10:	mov	r6, r2
   38f14:	add	r5, r1, r5
   38f18:	add	r6, r2, r1, lsl #2
   38f1c:	b	38f40 <GetDataSlab+0x1657c>
   38f20:	ldr	r4, [ip, r0]
   38f24:	cmp	r4, #0
   38f28:	beq	38f40 <GetDataSlab+0x1657c>
   38f2c:	add	r1, sp, #64	; 0x40
   38f30:	ldr	r1, [r1, r0]
   38f34:	mla	r5, r1, r4, r5
   38f38:	mul	r1, r1, r4
   38f3c:	add	r6, r6, r1, lsl #2
   38f40:	subs	r8, r8, #1
   38f44:	add	r0, r0, #4
   38f48:	bne	38eac <GetDataSlab+0x164e8>
   38f4c:	b	38f60 <GetDataSlab+0x1659c>
   38f50:	ldr	r1, [sp, #24]
   38f54:	ldr	r0, [r1, r0]
   38f58:	add	r6, r6, r0, lsl #2
   38f5c:	add	r5, r0, r5
   38f60:	ldr	r2, [sp, #36]	; 0x24
   38f64:	ldr	r1, [sp, #44]	; 0x2c
   38f68:	mov	r0, #0
   38f6c:	add	r2, lr, r2
   38f70:	cmp	r2, r1
   38f74:	str	r2, [sp, #36]	; 0x24
   38f78:	blt	38e14 <GetDataSlab+0x16450>
   38f7c:	b	24900 <GetDataSlab+0x1f3c>
   38f80:	ldr	r0, [sp, #44]	; 0x2c
   38f84:	ldr	ip, [fp, #12]
   38f88:	cmp	r0, #1
   38f8c:	add	r0, sp, #64	; 0x40
   38f90:	blt	248fc <GetDataSlab+0x1f38>
   38f94:	orr	r0, r0, #4
   38f98:	ldr	r4, [fp, #20]
   38f9c:	add	r7, sp, #104	; 0x68
   38fa0:	str	r0, [sp, #48]	; 0x30
   38fa4:	ldr	r0, [fp, #24]
   38fa8:	orr	sl, r7, #4
   38fac:	add	r2, r4, #4
   38fb0:	sub	r0, r0, #1
   38fb4:	str	r2, [sp, #52]	; 0x34
   38fb8:	str	r0, [sp, #28]
   38fbc:	sub	r0, fp, #72	; 0x48
   38fc0:	orr	r0, r0, #4
   38fc4:	str	r0, [sp, #24]
   38fc8:	ldr	r0, [ip], #4
   38fcc:	str	r0, [sp, #32]
   38fd0:	mov	r0, #0
   38fd4:	str	r0, [sp, #36]	; 0x24
   38fd8:	ldr	r1, [sp, #32]
   38fdc:	cmp	lr, #1
   38fe0:	add	r0, r1, r5
   38fe4:	add	r5, r6, r1, lsl #2
   38fe8:	blt	39040 <GetDataSlab+0x1667c>
   38fec:	ldr	r1, [sp, #56]	; 0x38
   38ff0:	ldr	r2, [sp, #36]	; 0x24
   38ff4:	ldr	lr, [fp, #8]
   38ff8:	ldr	r6, [fp, #16]
   38ffc:	mov	r7, #0
   39000:	add	r4, r1, r2, lsl #2
   39004:	ldr	r1, [fp, #20]
   39008:	mov	r8, lr
   3900c:	ldr	r2, [r5]
   39010:	str	r2, [r4, r7, lsl #2]
   39014:	add	r7, r7, #1
   39018:	ldr	r3, [r6]
   3901c:	ldr	lr, [r1]
   39020:	add	r5, r5, r3, lsl #2
   39024:	add	r0, r3, r0
   39028:	cmp	r7, lr
   3902c:	blt	3900c <GetDataSlab+0x16648>
   39030:	ldr	r1, [fp, #12]
   39034:	ldr	r2, [r8]
   39038:	ldr	r1, [r1]
   3903c:	b	39044 <GetDataSlab+0x16680>
   39040:	ldr	r2, [sp, #40]	; 0x28
   39044:	mls	r7, r3, lr, r2
   39048:	str	r2, [sp, #40]	; 0x28
   3904c:	str	r1, [sp, #32]
   39050:	sub	r7, r7, r1
   39054:	add	r6, r5, r7, lsl #2
   39058:	add	r5, r7, r0
   3905c:	ldr	r0, [fp, #24]
   39060:	cmp	r0, #2
   39064:	blt	39124 <GetDataSlab+0x16760>
   39068:	ldr	r8, [sp, #28]
   3906c:	mov	r0, #0
   39070:	ldr	r4, [sl, r0]
   39074:	ldr	r1, [sp, #52]	; 0x34
   39078:	add	r4, r4, #1
   3907c:	str	r4, [sl, r0]
   39080:	ldr	r7, [r1, r0]
   39084:	sdiv	r9, r4, r7
   39088:	mls	r4, r9, r7, r4
   3908c:	cmp	r4, #0
   39090:	bne	39114 <GetDataSlab+0x16750>
   39094:	mov	r1, #0
   39098:	str	r1, [sl, r0]
   3909c:	ldr	r1, [sp, #48]	; 0x30
   390a0:	ldr	r4, [r1, r0]
   390a4:	sdiv	r7, r5, r4
   390a8:	mls	r7, r7, r4, r5
   390ac:	cmp	r7, #0
   390b0:	beq	390e4 <GetDataSlab+0x16720>
   390b4:	add	r1, sp, #64	; 0x40
   390b8:	mov	r2, r6
   390bc:	mov	r6, r5
   390c0:	ldr	r5, [ip, r0]
   390c4:	sub	r4, r4, r7
   390c8:	ldr	r1, [r1, r0]
   390cc:	mla	r1, r5, r1, r4
   390d0:	mov	r5, r6
   390d4:	mov	r6, r2
   390d8:	add	r5, r1, r5
   390dc:	add	r6, r2, r1, lsl #2
   390e0:	b	39104 <GetDataSlab+0x16740>
   390e4:	ldr	r4, [ip, r0]
   390e8:	cmp	r4, #0
   390ec:	beq	39104 <GetDataSlab+0x16740>
   390f0:	add	r1, sp, #64	; 0x40
   390f4:	ldr	r1, [r1, r0]
   390f8:	mla	r5, r1, r4, r5
   390fc:	mul	r1, r1, r4
   39100:	add	r6, r6, r1, lsl #2
   39104:	subs	r8, r8, #1
   39108:	add	r0, r0, #4
   3910c:	bne	39070 <GetDataSlab+0x166ac>
   39110:	b	39124 <GetDataSlab+0x16760>
   39114:	ldr	r1, [sp, #24]
   39118:	ldr	r0, [r1, r0]
   3911c:	add	r6, r6, r0, lsl #2
   39120:	add	r5, r0, r5
   39124:	ldr	r2, [sp, #36]	; 0x24
   39128:	ldr	r1, [sp, #44]	; 0x2c
   3912c:	mov	r0, #0
   39130:	add	r2, lr, r2
   39134:	cmp	r2, r1
   39138:	str	r2, [sp, #36]	; 0x24
   3913c:	blt	38fd8 <GetDataSlab+0x16614>
   39140:	b	24900 <GetDataSlab+0x1f3c>
   39144:	ldr	r0, [sp, #40]	; 0x28
   39148:	cmp	r0, #1
   3914c:	add	r0, sp, #64	; 0x40
   39150:	blt	248fc <GetDataSlab+0x1f38>
   39154:	orr	r0, r0, #4
   39158:	ldr	ip, [fp, #12]
   3915c:	add	r7, sp, #104	; 0x68
   39160:	str	r0, [sp, #48]	; 0x30
   39164:	ldr	r0, [fp, #24]
   39168:	orr	r6, r7, #4
   3916c:	ldr	r7, [fp, #20]
   39170:	str	r6, [sp, #44]	; 0x2c
   39174:	sub	r0, r0, #1
   39178:	add	r1, r7, #4
   3917c:	str	r0, [sp, #24]
   39180:	sub	r0, fp, #72	; 0x48
   39184:	str	r1, [sp, #52]	; 0x34
   39188:	orr	r0, r0, #4
   3918c:	str	r0, [sp, #20]
   39190:	ldr	r0, [ip], #4
   39194:	str	r0, [sp, #28]
   39198:	mov	r0, #0
   3919c:	str	r0, [sp, #32]
   391a0:	ldr	r2, [sp, #28]
   391a4:	cmp	sl, #1
   391a8:	add	r5, r5, r2, lsl #2
   391ac:	add	r0, r2, lr
   391b0:	blt	39210 <GetDataSlab+0x1684c>
   391b4:	ldr	r2, [sp, #56]	; 0x38
   391b8:	ldr	r1, [sp, #32]
   391bc:	ldr	r6, [fp, #20]
   391c0:	ldr	lr, [fp, #8]
   391c4:	mov	r7, #0
   391c8:	add	r4, r2, r1, lsl #2
   391cc:	ldr	r1, [fp, #16]
   391d0:	vldr	s0, [r5]
   391d4:	vcvt.s32.f32	s0, s0
   391d8:	vmov	r2, s0
   391dc:	str	r2, [r4, r7, lsl #2]
   391e0:	add	r7, r7, #1
   391e4:	ldr	r3, [r1]
   391e8:	ldr	sl, [r6]
   391ec:	add	r5, r5, r3, lsl #2
   391f0:	add	r0, r3, r0
   391f4:	cmp	r7, sl
   391f8:	blt	391d0 <GetDataSlab+0x1680c>
   391fc:	ldr	r7, [fp, #12]
   39200:	ldr	r1, [lr]
   39204:	ldr	r6, [sp, #44]	; 0x2c
   39208:	ldr	r2, [r7]
   3920c:	b	39214 <GetDataSlab+0x16850>
   39210:	ldr	r1, [sp, #36]	; 0x24
   39214:	mls	r7, r3, sl, r1
   39218:	str	r2, [sp, #28]
   3921c:	sub	r7, r7, r2
   39220:	add	lr, r7, r0
   39224:	ldr	r0, [fp, #24]
   39228:	add	r5, r5, r7, lsl #2
   3922c:	cmp	r0, #2
   39230:	blt	392f0 <GetDataSlab+0x1692c>
   39234:	ldr	r8, [sp, #24]
   39238:	mov	r0, #0
   3923c:	ldr	r4, [r6, r0]
   39240:	ldr	r2, [sp, #52]	; 0x34
   39244:	add	r4, r4, #1
   39248:	str	r4, [r6, r0]
   3924c:	ldr	r7, [r2, r0]
   39250:	sdiv	r9, r4, r7
   39254:	mls	r4, r9, r7, r4
   39258:	cmp	r4, #0
   3925c:	bne	392e0 <GetDataSlab+0x1691c>
   39260:	mov	r2, #0
   39264:	str	r2, [r6, r0]
   39268:	ldr	r2, [sp, #48]	; 0x30
   3926c:	ldr	r4, [r2, r0]
   39270:	sdiv	r7, lr, r4
   39274:	mls	r7, r7, r4, lr
   39278:	cmp	r7, #0
   3927c:	beq	392a8 <GetDataSlab+0x168e4>
   39280:	mov	r2, r5
   39284:	add	r5, sp, #64	; 0x40
   39288:	sub	r4, r4, r7
   3928c:	ldr	r6, [r5, r0]
   39290:	ldr	r5, [ip, r0]
   39294:	mla	r4, r5, r6, r4
   39298:	ldr	r6, [sp, #44]	; 0x2c
   3929c:	mov	r5, r2
   392a0:	add	lr, r4, lr
   392a4:	b	392cc <GetDataSlab+0x16908>
   392a8:	ldr	r4, [ip, r0]
   392ac:	cmp	r4, #0
   392b0:	beq	392d0 <GetDataSlab+0x1690c>
   392b4:	mov	r2, r5
   392b8:	add	r5, sp, #64	; 0x40
   392bc:	ldr	r5, [r5, r0]
   392c0:	mla	lr, r5, r4, lr
   392c4:	mul	r4, r5, r4
   392c8:	mov	r5, r2
   392cc:	add	r5, r2, r4, lsl #2
   392d0:	subs	r8, r8, #1
   392d4:	add	r0, r0, #4
   392d8:	bne	3923c <GetDataSlab+0x16878>
   392dc:	b	392f0 <GetDataSlab+0x1692c>
   392e0:	ldr	r2, [sp, #20]
   392e4:	ldr	r0, [r2, r0]
   392e8:	add	r5, r5, r0, lsl #2
   392ec:	add	lr, r0, lr
   392f0:	ldr	r2, [sp, #32]
   392f4:	str	r1, [sp, #36]	; 0x24
   392f8:	ldr	r1, [sp, #40]	; 0x28
   392fc:	mov	r0, #0
   39300:	add	r2, sl, r2
   39304:	cmp	r2, r1
   39308:	str	r2, [sp, #32]
   3930c:	blt	391a0 <GetDataSlab+0x167dc>
   39310:	b	24900 <GetDataSlab+0x1f3c>
   39314:	ldr	r0, [sp, #40]	; 0x28
   39318:	cmp	r0, #1
   3931c:	add	r0, sp, #64	; 0x40
   39320:	blt	248fc <GetDataSlab+0x1f38>
   39324:	orr	r0, r0, #4
   39328:	ldr	ip, [fp, #12]
   3932c:	add	r7, sp, #104	; 0x68
   39330:	str	r0, [sp, #48]	; 0x30
   39334:	ldr	r0, [fp, #24]
   39338:	orr	r6, r7, #4
   3933c:	ldr	r7, [fp, #20]
   39340:	str	r6, [sp, #44]	; 0x2c
   39344:	sub	r0, r0, #1
   39348:	add	r1, r7, #4
   3934c:	str	r0, [sp, #24]
   39350:	sub	r0, fp, #72	; 0x48
   39354:	str	r1, [sp, #52]	; 0x34
   39358:	orr	r0, r0, #4
   3935c:	str	r0, [sp, #20]
   39360:	ldr	r0, [ip], #4
   39364:	str	r0, [sp, #28]
   39368:	mov	r0, #0
   3936c:	str	r0, [sp, #32]
   39370:	ldr	r2, [sp, #28]
   39374:	cmp	sl, #1
   39378:	add	r5, r5, r2, lsl #3
   3937c:	add	r0, r2, lr
   39380:	blt	393e0 <GetDataSlab+0x16a1c>
   39384:	ldr	r2, [sp, #56]	; 0x38
   39388:	ldr	r1, [sp, #32]
   3938c:	ldr	r6, [fp, #20]
   39390:	ldr	lr, [fp, #8]
   39394:	mov	r7, #0
   39398:	add	r4, r2, r1, lsl #2
   3939c:	ldr	r1, [fp, #16]
   393a0:	vldr	d16, [r5]
   393a4:	vcvt.s32.f64	s0, d16
   393a8:	vmov	r2, s0
   393ac:	str	r2, [r4, r7, lsl #2]
   393b0:	add	r7, r7, #1
   393b4:	ldr	r3, [r1]
   393b8:	ldr	sl, [r6]
   393bc:	add	r5, r5, r3, lsl #3
   393c0:	add	r0, r3, r0
   393c4:	cmp	r7, sl
   393c8:	blt	393a0 <GetDataSlab+0x169dc>
   393cc:	ldr	r7, [fp, #12]
   393d0:	ldr	r1, [lr]
   393d4:	ldr	r6, [sp, #44]	; 0x2c
   393d8:	ldr	r2, [r7]
   393dc:	b	393e4 <GetDataSlab+0x16a20>
   393e0:	ldr	r1, [sp, #36]	; 0x24
   393e4:	mls	r7, r3, sl, r1
   393e8:	str	r2, [sp, #28]
   393ec:	sub	r7, r7, r2
   393f0:	add	lr, r7, r0
   393f4:	ldr	r0, [fp, #24]
   393f8:	add	r5, r5, r7, lsl #3
   393fc:	cmp	r0, #2
   39400:	blt	394c0 <GetDataSlab+0x16afc>
   39404:	ldr	r8, [sp, #24]
   39408:	mov	r0, #0
   3940c:	ldr	r4, [r6, r0]
   39410:	ldr	r2, [sp, #52]	; 0x34
   39414:	add	r4, r4, #1
   39418:	str	r4, [r6, r0]
   3941c:	ldr	r7, [r2, r0]
   39420:	sdiv	r9, r4, r7
   39424:	mls	r4, r9, r7, r4
   39428:	cmp	r4, #0
   3942c:	bne	394b0 <GetDataSlab+0x16aec>
   39430:	mov	r2, #0
   39434:	str	r2, [r6, r0]
   39438:	ldr	r2, [sp, #48]	; 0x30
   3943c:	ldr	r4, [r2, r0]
   39440:	sdiv	r7, lr, r4
   39444:	mls	r7, r7, r4, lr
   39448:	cmp	r7, #0
   3944c:	beq	39478 <GetDataSlab+0x16ab4>
   39450:	mov	r2, r5
   39454:	add	r5, sp, #64	; 0x40
   39458:	sub	r4, r4, r7
   3945c:	ldr	r6, [r5, r0]
   39460:	ldr	r5, [ip, r0]
   39464:	mla	r4, r5, r6, r4
   39468:	ldr	r6, [sp, #44]	; 0x2c
   3946c:	mov	r5, r2
   39470:	add	lr, r4, lr
   39474:	b	3949c <GetDataSlab+0x16ad8>
   39478:	ldr	r4, [ip, r0]
   3947c:	cmp	r4, #0
   39480:	beq	394a0 <GetDataSlab+0x16adc>
   39484:	mov	r2, r5
   39488:	add	r5, sp, #64	; 0x40
   3948c:	ldr	r5, [r5, r0]
   39490:	mla	lr, r5, r4, lr
   39494:	mul	r4, r5, r4
   39498:	mov	r5, r2
   3949c:	add	r5, r2, r4, lsl #3
   394a0:	subs	r8, r8, #1
   394a4:	add	r0, r0, #4
   394a8:	bne	3940c <GetDataSlab+0x16a48>
   394ac:	b	394c0 <GetDataSlab+0x16afc>
   394b0:	ldr	r2, [sp, #20]
   394b4:	ldr	r0, [r2, r0]
   394b8:	add	r5, r5, r0, lsl #3
   394bc:	add	lr, r0, lr
   394c0:	ldr	r2, [sp, #32]
   394c4:	str	r1, [sp, #36]	; 0x24
   394c8:	ldr	r1, [sp, #40]	; 0x28
   394cc:	mov	r0, #0
   394d0:	add	r2, sl, r2
   394d4:	cmp	r2, r1
   394d8:	str	r2, [sp, #32]
   394dc:	blt	39370 <GetDataSlab+0x169ac>
   394e0:	b	24900 <GetDataSlab+0x1f3c>
   394e4:	ldr	r0, [sp, #36]	; 0x24
   394e8:	ldr	r6, [fp, #16]
   394ec:	ldr	ip, [fp, #12]
   394f0:	cmp	r0, #1
   394f4:	add	r0, sp, #64	; 0x40
   394f8:	blt	39694 <GetDataSlab+0x16cd0>
   394fc:	orr	r0, r0, #4
   39500:	add	r2, sp, #104	; 0x68
   39504:	str	r0, [sp, #44]	; 0x2c
   39508:	ldr	r0, [fp, #24]
   3950c:	orr	r9, r2, #4
   39510:	ldr	r2, [fp, #20]
   39514:	sub	r0, r0, #1
   39518:	add	r3, r2, #4
   3951c:	mov	sl, r2
   39520:	str	r0, [sp, #16]
   39524:	sub	r0, fp, #72	; 0x48
   39528:	str	r3, [sp, #20]
   3952c:	orr	r0, r0, #4
   39530:	str	r0, [sp, #12]
   39534:	mov	r0, ip
   39538:	ldr	r4, [r0], #4
   3953c:	str	r0, [sp, #40]	; 0x28
   39540:	mov	r0, #0
   39544:	add	r7, r7, r4, lsl #3
   39548:	add	r3, r4, lr
   3954c:	cmp	r1, #1
   39550:	blt	39594 <GetDataSlab+0x16bd0>
   39554:	ldr	r1, [sp, #56]	; 0x38
   39558:	mov	r2, #0
   3955c:	add	r4, r1, r0, lsl #2
   39560:	ldr	r1, [r7]
   39564:	str	r1, [r4, r2, lsl #2]
   39568:	add	r2, r2, #1
   3956c:	ldr	r5, [r6]
   39570:	ldr	r1, [sl]
   39574:	add	r7, r7, r5, lsl #3
   39578:	add	r3, r5, r3
   3957c:	cmp	r2, r1
   39580:	blt	39560 <GetDataSlab+0x16b9c>
   39584:	ldr	r2, [fp, #8]
   39588:	ldr	r4, [ip]
   3958c:	ldr	r2, [r2]
   39590:	b	39598 <GetDataSlab+0x16bd4>
   39594:	ldr	r2, [sp, #32]
   39598:	str	r2, [sp, #32]
   3959c:	mls	r2, r5, r1, r2
   395a0:	ldr	r6, [sp, #20]
   395a4:	str	r0, [sp, #28]
   395a8:	str	r4, [sp, #24]
   395ac:	sub	r2, r2, r4
   395b0:	add	r7, r7, r2, lsl #3
   395b4:	add	lr, r2, r3
   395b8:	ldr	r2, [fp, #24]
   395bc:	cmp	r2, #2
   395c0:	blt	39674 <GetDataSlab+0x16cb0>
   395c4:	ldr	r8, [sp, #16]
   395c8:	mov	ip, #0
   395cc:	ldr	r2, [r9, ip]
   395d0:	add	r2, r2, #1
   395d4:	str	r2, [r9, ip]
   395d8:	ldr	r3, [r6, ip]
   395dc:	sdiv	r4, r2, r3
   395e0:	mls	r2, r4, r3, r2
   395e4:	cmp	r2, #0
   395e8:	bne	39664 <GetDataSlab+0x16ca0>
   395ec:	mov	r2, #0
   395f0:	str	r2, [r9, ip]
   395f4:	ldr	r2, [sp, #44]	; 0x2c
   395f8:	ldr	r2, [r2, ip]
   395fc:	sdiv	r3, lr, r2
   39600:	mls	r3, r3, r2, lr
   39604:	cmp	r3, #0
   39608:	beq	39630 <GetDataSlab+0x16c6c>
   3960c:	ldr	r0, [sp, #40]	; 0x28
   39610:	add	r4, sp, #64	; 0x40
   39614:	sub	r2, r2, r3
   39618:	ldr	r4, [r4, ip]
   3961c:	ldr	sl, [r0, ip]
   39620:	mla	r2, sl, r4, r2
   39624:	ldr	sl, [fp, #20]
   39628:	add	lr, r2, lr
   3962c:	b	39650 <GetDataSlab+0x16c8c>
   39630:	ldr	r2, [sp, #40]	; 0x28
   39634:	ldr	r2, [r2, ip]
   39638:	cmp	r2, #0
   3963c:	beq	39654 <GetDataSlab+0x16c90>
   39640:	add	r3, sp, #64	; 0x40
   39644:	ldr	r3, [r3, ip]
   39648:	mla	lr, r3, r2, lr
   3964c:	mul	r2, r3, r2
   39650:	add	r7, r7, r2, lsl #3
   39654:	subs	r8, r8, #1
   39658:	add	ip, ip, #4
   3965c:	bne	395cc <GetDataSlab+0x16c08>
   39660:	b	39674 <GetDataSlab+0x16cb0>
   39664:	ldr	r2, [sp, #12]
   39668:	ldr	r2, [r2, ip]
   3966c:	add	r7, r7, r2, lsl #3
   39670:	add	lr, r2, lr
   39674:	ldr	r0, [sp, #28]
   39678:	ldr	r2, [sp, #36]	; 0x24
   3967c:	ldr	r6, [fp, #16]
   39680:	ldr	ip, [fp, #12]
   39684:	ldr	r4, [sp, #24]
   39688:	add	r0, r1, r0
   3968c:	cmp	r0, r2
   39690:	blt	39544 <GetDataSlab+0x16b80>
   39694:	mov	r0, #0
   39698:	ldr	r1, [sp, #52]	; 0x34
   3969c:	cmp	r1, #13
   396a0:	bne	24900 <GetDataSlab+0x1f3c>
   396a4:	ldr	r0, [fp, #16]
   396a8:	ldr	sl, [fp, #20]
   396ac:	mov	lr, #0
   396b0:	add	r7, sp, #64	; 0x40
   396b4:	sub	r9, fp, #72	; 0x48
   396b8:	ldr	r3, [r0]
   396bc:	sub	r0, r3, #1
   396c0:	str	r0, [fp, #-72]	; 0xffffffb8
   396c4:	ldr	r0, [fp, #8]
   396c8:	ldr	r0, [r0]
   396cc:	str	r0, [sp, #64]	; 0x40
   396d0:	str	r0, [sp, #36]	; 0x24
   396d4:	ldr	r0, [fp, #24]
   396d8:	ldr	sl, [sl]
   396dc:	cmp	r0, #2
   396e0:	mov	r0, sl
   396e4:	str	sl, [sp, #40]	; 0x28
   396e8:	blt	39790 <GetDataSlab+0x16dcc>
   396ec:	ldr	r6, [sp, #36]	; 0x24
   396f0:	ldr	r1, [fp, #8]
   396f4:	mov	r0, #1
   396f8:	mov	lr, #0
   396fc:	mov	r2, sl
   39700:	str	sl, [sp, #40]	; 0x28
   39704:	mov	r8, r6
   39708:	ldr	r5, [fp, #16]
   3970c:	mov	r4, #0
   39710:	ldr	r5, [r5, r0, lsl #2]
   39714:	str	r6, [r7, r0, lsl #2]
   39718:	ldr	r7, [fp, #8]
   3971c:	sub	r5, r5, #1
   39720:	str	r5, [r9, r0, lsl #2]
   39724:	ldr	ip, [r7, r0, lsl #2]
   39728:	mov	r7, ip
   3972c:	mul	r6, r7, r6
   39730:	ldr	r7, [r1, -r4, lsl #2]
   39734:	add	r4, r4, #1
   39738:	cmp	r0, r4
   3973c:	mul	r5, r5, r7
   39740:	bne	3972c <GetDataSlab+0x16d68>
   39744:	ldr	r2, [fp, #12]
   39748:	add	r7, sp, #64	; 0x40
   3974c:	sub	r9, fp, #72	; 0x48
   39750:	add	r1, r1, #4
   39754:	str	r6, [r7, r0, lsl #2]
   39758:	str	r5, [r9, r0, lsl #2]
   3975c:	ldr	r4, [r2, r0, lsl #2]
   39760:	ldr	r2, [fp, #20]
   39764:	mla	lr, r4, r8, lr
   39768:	ldr	r4, [r2, r0, lsl #2]
   3976c:	ldr	r2, [sp, #40]	; 0x28
   39770:	add	r0, r0, #1
   39774:	mov	r8, r6
   39778:	mov	r6, ip
   3977c:	mul	r2, r4, r2
   39780:	ldr	r4, [fp, #24]
   39784:	str	r2, [sp, #40]	; 0x28
   39788:	cmp	r0, r4
   3978c:	bne	39708 <GetDataSlab+0x16d44>
   39790:	ldr	r0, [sp, #48]	; 0x30
   39794:	cmp	r3, #1
   39798:	add	r5, r0, lr, lsl #3
   3979c:	bne	3d434 <GetDataSlab+0x1aa70>
   397a0:	ldr	r0, [sp, #40]	; 0x28
   397a4:	cmp	r0, #1
   397a8:	add	r0, sp, #64	; 0x40
   397ac:	blt	248fc <GetDataSlab+0x1f38>
   397b0:	orr	r0, r0, #4
   397b4:	ldr	r9, [fp, #12]
   397b8:	ldr	r3, [fp, #20]
   397bc:	add	r1, sp, #104	; 0x68
   397c0:	mov	r6, #0
   397c4:	str	r0, [sp, #48]	; 0x30
   397c8:	ldr	r0, [fp, #24]
   397cc:	orr	r1, r1, #4
   397d0:	add	r2, r3, #4
   397d4:	sub	r0, r0, #1
   397d8:	str	r2, [sp, #52]	; 0x34
   397dc:	str	r0, [sp, #28]
   397e0:	sub	r0, fp, #72	; 0x48
   397e4:	orr	r0, r0, #4
   397e8:	str	r0, [sp, #24]
   397ec:	ldr	r0, [r9], #4
   397f0:	str	r0, [sp, #44]	; 0x2c
   397f4:	ldr	r7, [sp, #44]	; 0x2c
   397f8:	ldr	r2, [sp, #36]	; 0x24
   397fc:	cmp	sl, #1
   39800:	add	r0, r5, r7, lsl #3
   39804:	add	lr, r7, lr
   39808:	blt	39848 <GetDataSlab+0x16e84>
   3980c:	ldr	r2, [sp, #56]	; 0x38
   39810:	ldr	r3, [fp, #20]
   39814:	mov	r4, #0
   39818:	mov	r5, r0
   3981c:	add	r7, r2, r6, lsl #2
   39820:	ldr	r2, [r5], #8
   39824:	str	r2, [r7, r4, lsl #2]
   39828:	add	r4, r4, #1
   3982c:	ldr	sl, [r3]
   39830:	cmp	r4, sl
   39834:	blt	39820 <GetDataSlab+0x16e5c>
   39838:	ldr	r3, [fp, #12]
   3983c:	ldr	r7, [r3]
   39840:	ldr	r3, [fp, #8]
   39844:	ldr	r2, [r3]
   39848:	sub	r4, r2, r7
   3984c:	str	r6, [sp, #32]
   39850:	str	r7, [sp, #44]	; 0x2c
   39854:	add	r5, r0, r4, lsl #3
   39858:	ldr	r0, [fp, #24]
   3985c:	add	lr, lr, r4
   39860:	cmp	r0, #2
   39864:	blt	39910 <GetDataSlab+0x16f4c>
   39868:	ldr	r8, [sp, #28]
   3986c:	mov	r0, #0
   39870:	ldr	r4, [r1, r0]
   39874:	ldr	r3, [sp, #52]	; 0x34
   39878:	add	r4, r4, #1
   3987c:	str	r4, [r1, r0]
   39880:	ldr	r7, [r3, r0]
   39884:	sdiv	ip, r4, r7
   39888:	mls	r7, ip, r7, r4
   3988c:	cmp	r7, #0
   39890:	bne	39900 <GetDataSlab+0x16f3c>
   39894:	mov	r3, #0
   39898:	str	r3, [r1, r0]
   3989c:	ldr	r3, [sp, #48]	; 0x30
   398a0:	ldr	r4, [r3, r0]
   398a4:	sdiv	r7, lr, r4
   398a8:	mls	r7, r7, r4, lr
   398ac:	cmp	r7, #0
   398b0:	beq	398d0 <GetDataSlab+0x16f0c>
   398b4:	add	r3, sp, #64	; 0x40
   398b8:	ldr	r6, [r9, r0]
   398bc:	sub	r7, r4, r7
   398c0:	ldr	r3, [r3, r0]
   398c4:	mla	r3, r6, r3, r7
   398c8:	add	lr, r3, lr
   398cc:	b	398ec <GetDataSlab+0x16f28>
   398d0:	ldr	r4, [r9, r0]
   398d4:	cmp	r4, #0
   398d8:	beq	398f0 <GetDataSlab+0x16f2c>
   398dc:	add	r3, sp, #64	; 0x40
   398e0:	ldr	r3, [r3, r0]
   398e4:	mla	lr, r3, r4, lr
   398e8:	mul	r3, r3, r4
   398ec:	add	r5, r5, r3, lsl #3
   398f0:	subs	r8, r8, #1
   398f4:	add	r0, r0, #4
   398f8:	bne	39870 <GetDataSlab+0x16eac>
   398fc:	b	39910 <GetDataSlab+0x16f4c>
   39900:	ldr	r3, [sp, #24]
   39904:	ldr	r0, [r3, r0]
   39908:	add	r5, r5, r0, lsl #3
   3990c:	add	lr, r0, lr
   39910:	ldr	r6, [sp, #32]
   39914:	str	r2, [sp, #36]	; 0x24
   39918:	ldr	r2, [sp, #40]	; 0x28
   3991c:	mov	r0, #0
   39920:	add	r6, sl, r6
   39924:	cmp	r6, r2
   39928:	blt	397f4 <GetDataSlab+0x16e30>
   3992c:	b	24900 <GetDataSlab+0x1f3c>
   39930:	ldr	r0, [sp, #44]	; 0x2c
   39934:	ldr	ip, [fp, #12]
   39938:	cmp	r0, #1
   3993c:	add	r0, sp, #64	; 0x40
   39940:	blt	248fc <GetDataSlab+0x1f38>
   39944:	orr	r0, r0, #4
   39948:	ldr	r4, [fp, #20]
   3994c:	add	r7, sp, #104	; 0x68
   39950:	str	r0, [sp, #48]	; 0x30
   39954:	ldr	r0, [fp, #24]
   39958:	orr	sl, r7, #4
   3995c:	add	r2, r4, #4
   39960:	sub	r0, r0, #1
   39964:	str	r2, [sp, #52]	; 0x34
   39968:	str	r0, [sp, #28]
   3996c:	sub	r0, fp, #72	; 0x48
   39970:	orr	r0, r0, #4
   39974:	str	r0, [sp, #24]
   39978:	ldr	r0, [ip], #4
   3997c:	str	r0, [sp, #32]
   39980:	mov	r0, #0
   39984:	str	r0, [sp, #36]	; 0x24
   39988:	ldr	r1, [sp, #32]
   3998c:	cmp	lr, #1
   39990:	add	r0, r1, r5
   39994:	add	r5, r6, r1
   39998:	blt	399f0 <GetDataSlab+0x1702c>
   3999c:	ldr	r1, [sp, #56]	; 0x38
   399a0:	ldr	r2, [sp, #36]	; 0x24
   399a4:	ldr	lr, [fp, #8]
   399a8:	ldr	r6, [fp, #16]
   399ac:	mov	r7, #0
   399b0:	add	r4, r1, r2, lsl #2
   399b4:	ldr	r1, [fp, #20]
   399b8:	mov	r8, lr
   399bc:	ldrb	r2, [r5]
   399c0:	str	r2, [r4, r7, lsl #2]
   399c4:	add	r7, r7, #1
   399c8:	ldr	r3, [r6]
   399cc:	ldr	lr, [r1]
   399d0:	add	r0, r3, r0
   399d4:	add	r5, r5, r3
   399d8:	cmp	r7, lr
   399dc:	blt	399bc <GetDataSlab+0x16ff8>
   399e0:	ldr	r1, [fp, #12]
   399e4:	ldr	r2, [r8]
   399e8:	ldr	r1, [r1]
   399ec:	b	399f4 <GetDataSlab+0x17030>
   399f0:	ldr	r2, [sp, #40]	; 0x28
   399f4:	mls	r7, r3, lr, r2
   399f8:	str	r2, [sp, #40]	; 0x28
   399fc:	str	r1, [sp, #32]
   39a00:	sub	r7, r7, r1
   39a04:	add	r6, r5, r7
   39a08:	add	r5, r7, r0
   39a0c:	ldr	r0, [fp, #24]
   39a10:	cmp	r0, #2
   39a14:	blt	39ad0 <GetDataSlab+0x1710c>
   39a18:	ldr	r8, [sp, #28]
   39a1c:	mov	r0, #0
   39a20:	ldr	r4, [sl, r0]
   39a24:	ldr	r1, [sp, #52]	; 0x34
   39a28:	add	r4, r4, #1
   39a2c:	str	r4, [sl, r0]
   39a30:	ldr	r7, [r1, r0]
   39a34:	sdiv	r9, r4, r7
   39a38:	mls	r4, r9, r7, r4
   39a3c:	cmp	r4, #0
   39a40:	bne	39ac0 <GetDataSlab+0x170fc>
   39a44:	mov	r1, #0
   39a48:	str	r1, [sl, r0]
   39a4c:	ldr	r1, [sp, #48]	; 0x30
   39a50:	ldr	r4, [r1, r0]
   39a54:	sdiv	r7, r5, r4
   39a58:	mls	r7, r7, r4, r5
   39a5c:	cmp	r7, #0
   39a60:	beq	39a94 <GetDataSlab+0x170d0>
   39a64:	add	r1, sp, #64	; 0x40
   39a68:	mov	r2, r6
   39a6c:	mov	r6, r5
   39a70:	ldr	r5, [ip, r0]
   39a74:	sub	r4, r4, r7
   39a78:	ldr	r1, [r1, r0]
   39a7c:	mla	r1, r5, r1, r4
   39a80:	mov	r5, r6
   39a84:	mov	r6, r2
   39a88:	add	r5, r1, r5
   39a8c:	add	r6, r2, r1
   39a90:	b	39ab0 <GetDataSlab+0x170ec>
   39a94:	ldr	r4, [ip, r0]
   39a98:	cmp	r4, #0
   39a9c:	beq	39ab0 <GetDataSlab+0x170ec>
   39aa0:	add	r1, sp, #64	; 0x40
   39aa4:	ldr	r1, [r1, r0]
   39aa8:	mla	r5, r1, r4, r5
   39aac:	mla	r6, r1, r4, r6
   39ab0:	subs	r8, r8, #1
   39ab4:	add	r0, r0, #4
   39ab8:	bne	39a20 <GetDataSlab+0x1705c>
   39abc:	b	39ad0 <GetDataSlab+0x1710c>
   39ac0:	ldr	r1, [sp, #24]
   39ac4:	ldr	r0, [r1, r0]
   39ac8:	add	r6, r6, r0
   39acc:	add	r5, r0, r5
   39ad0:	ldr	r1, [sp, #36]	; 0x24
   39ad4:	ldr	r0, [sp, #44]	; 0x2c
   39ad8:	add	r1, lr, r1
   39adc:	cmp	r1, r0
   39ae0:	mov	r0, #0
   39ae4:	str	r1, [sp, #36]	; 0x24
   39ae8:	blt	39988 <GetDataSlab+0x16fc4>
   39aec:	b	24900 <GetDataSlab+0x1f3c>
   39af0:	ldr	r0, [sp, #40]	; 0x28
   39af4:	cmp	r0, #1
   39af8:	add	r0, sp, #64	; 0x40
   39afc:	blt	248fc <GetDataSlab+0x1f38>
   39b00:	orr	r0, r0, #4
   39b04:	ldr	ip, [fp, #12]
   39b08:	add	r1, sp, #104	; 0x68
   39b0c:	str	r0, [sp, #48]	; 0x30
   39b10:	ldr	r0, [fp, #24]
   39b14:	orr	r6, r1, #4
   39b18:	ldr	r1, [fp, #20]
   39b1c:	str	r6, [sp, #44]	; 0x2c
   39b20:	sub	r0, r0, #1
   39b24:	add	r1, r1, #4
   39b28:	str	r0, [sp, #24]
   39b2c:	sub	r0, fp, #72	; 0x48
   39b30:	str	r1, [sp, #52]	; 0x34
   39b34:	orr	r0, r0, #4
   39b38:	str	r0, [sp, #20]
   39b3c:	ldr	r0, [ip], #4
   39b40:	str	r0, [sp, #28]
   39b44:	mov	r0, #0
   39b48:	str	r0, [sp, #32]
   39b4c:	ldr	r1, [sp, #28]
   39b50:	cmp	sl, #1
   39b54:	add	r5, r5, r1, lsl #1
   39b58:	add	r0, r1, lr
   39b5c:	blt	39bb4 <GetDataSlab+0x171f0>
   39b60:	ldr	r1, [sp, #56]	; 0x38
   39b64:	ldr	r2, [sp, #32]
   39b68:	ldr	lr, [fp, #8]
   39b6c:	ldr	r6, [fp, #16]
   39b70:	mov	r7, #0
   39b74:	add	r4, r1, r2, lsl #2
   39b78:	ldr	r1, [fp, #20]
   39b7c:	ldrsh	r2, [r5]
   39b80:	str	r2, [r4, r7, lsl #2]
   39b84:	add	r7, r7, #1
   39b88:	ldr	r3, [r6]
   39b8c:	ldr	sl, [r1]
   39b90:	add	r5, r5, r3, lsl #1
   39b94:	add	r0, r3, r0
   39b98:	cmp	r7, sl
   39b9c:	blt	39b7c <GetDataSlab+0x171b8>
   39ba0:	ldr	r1, [fp, #12]
   39ba4:	ldr	r2, [lr]
   39ba8:	ldr	r6, [sp, #44]	; 0x2c
   39bac:	ldr	r1, [r1]
   39bb0:	b	39bb8 <GetDataSlab+0x171f4>
   39bb4:	ldr	r2, [sp, #36]	; 0x24
   39bb8:	mls	r7, r3, sl, r2
   39bbc:	str	r1, [sp, #28]
   39bc0:	sub	r7, r7, r1
   39bc4:	add	lr, r7, r0
   39bc8:	ldr	r0, [fp, #24]
   39bcc:	add	r5, r5, r7, lsl #1
   39bd0:	cmp	r0, #2
   39bd4:	blt	39c8c <GetDataSlab+0x172c8>
   39bd8:	ldr	r8, [sp, #24]
   39bdc:	mov	r0, #0
   39be0:	ldr	r4, [r6, r0]
   39be4:	ldr	r1, [sp, #52]	; 0x34
   39be8:	add	r4, r4, #1
   39bec:	str	r4, [r6, r0]
   39bf0:	ldr	r7, [r1, r0]
   39bf4:	sdiv	r9, r4, r7
   39bf8:	mls	r4, r9, r7, r4
   39bfc:	cmp	r4, #0
   39c00:	bne	39c7c <GetDataSlab+0x172b8>
   39c04:	mov	r1, #0
   39c08:	str	r1, [r6, r0]
   39c0c:	ldr	r1, [sp, #48]	; 0x30
   39c10:	ldr	r4, [r1, r0]
   39c14:	sdiv	r7, lr, r4
   39c18:	mls	r7, r7, r4, lr
   39c1c:	cmp	r7, #0
   39c20:	beq	39c4c <GetDataSlab+0x17288>
   39c24:	add	r1, sp, #64	; 0x40
   39c28:	mov	r6, r5
   39c2c:	ldr	r5, [ip, r0]
   39c30:	sub	r4, r4, r7
   39c34:	ldr	r1, [r1, r0]
   39c38:	mla	r1, r5, r1, r4
   39c3c:	mov	r5, r6
   39c40:	ldr	r6, [sp, #44]	; 0x2c
   39c44:	add	lr, r1, lr
   39c48:	b	39c68 <GetDataSlab+0x172a4>
   39c4c:	ldr	r4, [ip, r0]
   39c50:	cmp	r4, #0
   39c54:	beq	39c6c <GetDataSlab+0x172a8>
   39c58:	add	r1, sp, #64	; 0x40
   39c5c:	ldr	r1, [r1, r0]
   39c60:	mla	lr, r1, r4, lr
   39c64:	mul	r1, r1, r4
   39c68:	add	r5, r5, r1, lsl #1
   39c6c:	subs	r8, r8, #1
   39c70:	add	r0, r0, #4
   39c74:	bne	39be0 <GetDataSlab+0x1721c>
   39c78:	b	39c8c <GetDataSlab+0x172c8>
   39c7c:	ldr	r1, [sp, #20]
   39c80:	ldr	r0, [r1, r0]
   39c84:	add	r5, r5, r0, lsl #1
   39c88:	add	lr, r0, lr
   39c8c:	str	r2, [sp, #36]	; 0x24
   39c90:	ldr	r2, [sp, #32]
   39c94:	ldr	r1, [sp, #40]	; 0x28
   39c98:	mov	r0, #0
   39c9c:	add	r2, sl, r2
   39ca0:	cmp	r2, r1
   39ca4:	str	r2, [sp, #32]
   39ca8:	blt	39b4c <GetDataSlab+0x17188>
   39cac:	b	24900 <GetDataSlab+0x1f3c>
   39cb0:	ldr	r0, [sp, #40]	; 0x28
   39cb4:	cmp	r0, #1
   39cb8:	add	r0, sp, #64	; 0x40
   39cbc:	blt	248fc <GetDataSlab+0x1f38>
   39cc0:	orr	r0, r0, #4
   39cc4:	ldr	ip, [fp, #12]
   39cc8:	add	r1, sp, #104	; 0x68
   39ccc:	str	r0, [sp, #48]	; 0x30
   39cd0:	ldr	r0, [fp, #24]
   39cd4:	orr	r6, r1, #4
   39cd8:	ldr	r1, [fp, #20]
   39cdc:	str	r6, [sp, #44]	; 0x2c
   39ce0:	ldr	r2, [ip], #4
   39ce4:	sub	r0, r0, #1
   39ce8:	add	r1, r1, #4
   39cec:	str	r0, [sp, #28]
   39cf0:	sub	r0, fp, #72	; 0x48
   39cf4:	str	r1, [sp, #52]	; 0x34
   39cf8:	orr	r0, r0, #4
   39cfc:	str	r0, [sp, #24]
   39d00:	mov	r0, #0
   39d04:	str	r0, [sp, #32]
   39d08:	add	r5, r5, r2, lsl #1
   39d0c:	add	r0, r2, lr
   39d10:	cmp	sl, #1
   39d14:	blt	39d6c <GetDataSlab+0x173a8>
   39d18:	ldr	r1, [sp, #56]	; 0x38
   39d1c:	ldr	r2, [sp, #32]
   39d20:	ldr	lr, [fp, #8]
   39d24:	ldr	r6, [fp, #16]
   39d28:	mov	r7, #0
   39d2c:	add	r4, r1, r2, lsl #2
   39d30:	ldr	r1, [fp, #20]
   39d34:	ldrh	r2, [r5]
   39d38:	str	r2, [r4, r7, lsl #2]
   39d3c:	add	r7, r7, #1
   39d40:	ldr	r3, [r6]
   39d44:	ldr	sl, [r1]
   39d48:	add	r5, r5, r3, lsl #1
   39d4c:	add	r0, r3, r0
   39d50:	cmp	r7, sl
   39d54:	blt	39d34 <GetDataSlab+0x17370>
   39d58:	ldr	r1, [fp, #12]
   39d5c:	ldr	r2, [lr]
   39d60:	ldr	r6, [sp, #44]	; 0x2c
   39d64:	ldr	r1, [r1]
   39d68:	b	39d74 <GetDataSlab+0x173b0>
   39d6c:	mov	r1, r2
   39d70:	ldr	r2, [sp, #36]	; 0x24
   39d74:	mls	r7, r3, sl, r2
   39d78:	str	r2, [sp, #36]	; 0x24
   39d7c:	mov	r2, r1
   39d80:	sub	r7, r7, r1
   39d84:	add	lr, r7, r0
   39d88:	ldr	r0, [fp, #24]
   39d8c:	add	r5, r5, r7, lsl #1
   39d90:	cmp	r0, #2
   39d94:	blt	39e4c <GetDataSlab+0x17488>
   39d98:	ldr	r8, [sp, #28]
   39d9c:	mov	r0, #0
   39da0:	ldr	r4, [r6, r0]
   39da4:	ldr	r1, [sp, #52]	; 0x34
   39da8:	add	r4, r4, #1
   39dac:	str	r4, [r6, r0]
   39db0:	ldr	r7, [r1, r0]
   39db4:	sdiv	r9, r4, r7
   39db8:	mls	r4, r9, r7, r4
   39dbc:	cmp	r4, #0
   39dc0:	bne	39e3c <GetDataSlab+0x17478>
   39dc4:	mov	r1, #0
   39dc8:	str	r1, [r6, r0]
   39dcc:	ldr	r1, [sp, #48]	; 0x30
   39dd0:	ldr	r4, [r1, r0]
   39dd4:	sdiv	r7, lr, r4
   39dd8:	mls	r7, r7, r4, lr
   39ddc:	cmp	r7, #0
   39de0:	beq	39e0c <GetDataSlab+0x17448>
   39de4:	add	r1, sp, #64	; 0x40
   39de8:	mov	r6, r5
   39dec:	ldr	r5, [ip, r0]
   39df0:	sub	r4, r4, r7
   39df4:	ldr	r1, [r1, r0]
   39df8:	mla	r1, r5, r1, r4
   39dfc:	mov	r5, r6
   39e00:	ldr	r6, [sp, #44]	; 0x2c
   39e04:	add	lr, r1, lr
   39e08:	b	39e28 <GetDataSlab+0x17464>
   39e0c:	ldr	r4, [ip, r0]
   39e10:	cmp	r4, #0
   39e14:	beq	39e2c <GetDataSlab+0x17468>
   39e18:	add	r1, sp, #64	; 0x40
   39e1c:	ldr	r1, [r1, r0]
   39e20:	mla	lr, r1, r4, lr
   39e24:	mul	r1, r1, r4
   39e28:	add	r5, r5, r1, lsl #1
   39e2c:	subs	r8, r8, #1
   39e30:	add	r0, r0, #4
   39e34:	bne	39da0 <GetDataSlab+0x173dc>
   39e38:	b	39e4c <GetDataSlab+0x17488>
   39e3c:	ldr	r1, [sp, #24]
   39e40:	ldr	r0, [r1, r0]
   39e44:	add	r5, r5, r0, lsl #1
   39e48:	add	lr, r0, lr
   39e4c:	ldr	r1, [sp, #32]
   39e50:	ldr	r0, [sp, #40]	; 0x28
   39e54:	add	r1, sl, r1
   39e58:	cmp	r1, r0
   39e5c:	mov	r0, #0
   39e60:	str	r1, [sp, #32]
   39e64:	blt	39d08 <GetDataSlab+0x17344>
   39e68:	b	24900 <GetDataSlab+0x1f3c>
   39e6c:	ldr	r0, [sp, #44]	; 0x2c
   39e70:	ldr	ip, [fp, #12]
   39e74:	cmp	r0, #1
   39e78:	add	r0, sp, #64	; 0x40
   39e7c:	blt	248fc <GetDataSlab+0x1f38>
   39e80:	orr	r0, r0, #4
   39e84:	ldr	r4, [fp, #20]
   39e88:	add	r7, sp, #104	; 0x68
   39e8c:	str	r0, [sp, #48]	; 0x30
   39e90:	ldr	r0, [fp, #24]
   39e94:	orr	sl, r7, #4
   39e98:	add	r2, r4, #4
   39e9c:	sub	r0, r0, #1
   39ea0:	str	r2, [sp, #52]	; 0x34
   39ea4:	str	r0, [sp, #28]
   39ea8:	sub	r0, fp, #72	; 0x48
   39eac:	orr	r0, r0, #4
   39eb0:	str	r0, [sp, #24]
   39eb4:	ldr	r0, [ip], #4
   39eb8:	str	r0, [sp, #32]
   39ebc:	mov	r0, #0
   39ec0:	str	r0, [sp, #36]	; 0x24
   39ec4:	ldr	r1, [sp, #32]
   39ec8:	cmp	lr, #1
   39ecc:	add	r0, r1, r5
   39ed0:	add	r5, r6, r1, lsl #2
   39ed4:	blt	39f2c <GetDataSlab+0x17568>
   39ed8:	ldr	r1, [sp, #56]	; 0x38
   39edc:	ldr	r2, [sp, #36]	; 0x24
   39ee0:	ldr	lr, [fp, #8]
   39ee4:	ldr	r6, [fp, #16]
   39ee8:	mov	r7, #0
   39eec:	add	r4, r1, r2, lsl #2
   39ef0:	ldr	r1, [fp, #20]
   39ef4:	mov	r8, lr
   39ef8:	ldr	r2, [r5]
   39efc:	str	r2, [r4, r7, lsl #2]
   39f00:	add	r7, r7, #1
   39f04:	ldr	r3, [r6]
   39f08:	ldr	lr, [r1]
   39f0c:	add	r5, r5, r3, lsl #2
   39f10:	add	r0, r3, r0
   39f14:	cmp	r7, lr
   39f18:	blt	39ef8 <GetDataSlab+0x17534>
   39f1c:	ldr	r1, [fp, #12]
   39f20:	ldr	r2, [r8]
   39f24:	ldr	r1, [r1]
   39f28:	b	39f30 <GetDataSlab+0x1756c>
   39f2c:	ldr	r2, [sp, #40]	; 0x28
   39f30:	mls	r7, r3, lr, r2
   39f34:	str	r2, [sp, #40]	; 0x28
   39f38:	str	r1, [sp, #32]
   39f3c:	sub	r7, r7, r1
   39f40:	add	r6, r5, r7, lsl #2
   39f44:	add	r5, r7, r0
   39f48:	ldr	r0, [fp, #24]
   39f4c:	cmp	r0, #2
   39f50:	blt	3a010 <GetDataSlab+0x1764c>
   39f54:	ldr	r8, [sp, #28]
   39f58:	mov	r0, #0
   39f5c:	ldr	r4, [sl, r0]
   39f60:	ldr	r1, [sp, #52]	; 0x34
   39f64:	add	r4, r4, #1
   39f68:	str	r4, [sl, r0]
   39f6c:	ldr	r7, [r1, r0]
   39f70:	sdiv	r9, r4, r7
   39f74:	mls	r4, r9, r7, r4
   39f78:	cmp	r4, #0
   39f7c:	bne	3a000 <GetDataSlab+0x1763c>
   39f80:	mov	r1, #0
   39f84:	str	r1, [sl, r0]
   39f88:	ldr	r1, [sp, #48]	; 0x30
   39f8c:	ldr	r4, [r1, r0]
   39f90:	sdiv	r7, r5, r4
   39f94:	mls	r7, r7, r4, r5
   39f98:	cmp	r7, #0
   39f9c:	beq	39fd0 <GetDataSlab+0x1760c>
   39fa0:	add	r1, sp, #64	; 0x40
   39fa4:	mov	r2, r6
   39fa8:	mov	r6, r5
   39fac:	ldr	r5, [ip, r0]
   39fb0:	sub	r4, r4, r7
   39fb4:	ldr	r1, [r1, r0]
   39fb8:	mla	r1, r5, r1, r4
   39fbc:	mov	r5, r6
   39fc0:	mov	r6, r2
   39fc4:	add	r5, r1, r5
   39fc8:	add	r6, r2, r1, lsl #2
   39fcc:	b	39ff0 <GetDataSlab+0x1762c>
   39fd0:	ldr	r4, [ip, r0]
   39fd4:	cmp	r4, #0
   39fd8:	beq	39ff0 <GetDataSlab+0x1762c>
   39fdc:	add	r1, sp, #64	; 0x40
   39fe0:	ldr	r1, [r1, r0]
   39fe4:	mla	r5, r1, r4, r5
   39fe8:	mul	r1, r1, r4
   39fec:	add	r6, r6, r1, lsl #2
   39ff0:	subs	r8, r8, #1
   39ff4:	add	r0, r0, #4
   39ff8:	bne	39f5c <GetDataSlab+0x17598>
   39ffc:	b	3a010 <GetDataSlab+0x1764c>
   3a000:	ldr	r1, [sp, #24]
   3a004:	ldr	r0, [r1, r0]
   3a008:	add	r6, r6, r0, lsl #2
   3a00c:	add	r5, r0, r5
   3a010:	ldr	r2, [sp, #36]	; 0x24
   3a014:	ldr	r1, [sp, #44]	; 0x2c
   3a018:	mov	r0, #0
   3a01c:	add	r2, lr, r2
   3a020:	cmp	r2, r1
   3a024:	str	r2, [sp, #36]	; 0x24
   3a028:	blt	39ec4 <GetDataSlab+0x17500>
   3a02c:	b	24900 <GetDataSlab+0x1f3c>
   3a030:	ldr	r0, [sp, #44]	; 0x2c
   3a034:	ldr	ip, [fp, #12]
   3a038:	cmp	r0, #1
   3a03c:	add	r0, sp, #64	; 0x40
   3a040:	blt	248fc <GetDataSlab+0x1f38>
   3a044:	orr	r0, r0, #4
   3a048:	ldr	r4, [fp, #20]
   3a04c:	add	r7, sp, #104	; 0x68
   3a050:	str	r0, [sp, #48]	; 0x30
   3a054:	ldr	r0, [fp, #24]
   3a058:	orr	sl, r7, #4
   3a05c:	add	r2, r4, #4
   3a060:	sub	r0, r0, #1
   3a064:	str	r2, [sp, #52]	; 0x34
   3a068:	str	r0, [sp, #28]
   3a06c:	sub	r0, fp, #72	; 0x48
   3a070:	orr	r0, r0, #4
   3a074:	str	r0, [sp, #24]
   3a078:	ldr	r0, [ip], #4
   3a07c:	str	r0, [sp, #32]
   3a080:	mov	r0, #0
   3a084:	str	r0, [sp, #36]	; 0x24
   3a088:	ldr	r1, [sp, #32]
   3a08c:	cmp	lr, #1
   3a090:	add	r0, r1, r5
   3a094:	add	r5, r6, r1, lsl #2
   3a098:	blt	3a0f0 <GetDataSlab+0x1772c>
   3a09c:	ldr	r1, [sp, #56]	; 0x38
   3a0a0:	ldr	r2, [sp, #36]	; 0x24
   3a0a4:	ldr	lr, [fp, #8]
   3a0a8:	ldr	r6, [fp, #16]
   3a0ac:	mov	r7, #0
   3a0b0:	add	r4, r1, r2, lsl #2
   3a0b4:	ldr	r1, [fp, #20]
   3a0b8:	mov	r8, lr
   3a0bc:	ldr	r2, [r5]
   3a0c0:	str	r2, [r4, r7, lsl #2]
   3a0c4:	add	r7, r7, #1
   3a0c8:	ldr	r3, [r6]
   3a0cc:	ldr	lr, [r1]
   3a0d0:	add	r5, r5, r3, lsl #2
   3a0d4:	add	r0, r3, r0
   3a0d8:	cmp	r7, lr
   3a0dc:	blt	3a0bc <GetDataSlab+0x176f8>
   3a0e0:	ldr	r1, [fp, #12]
   3a0e4:	ldr	r2, [r8]
   3a0e8:	ldr	r1, [r1]
   3a0ec:	b	3a0f4 <GetDataSlab+0x17730>
   3a0f0:	ldr	r2, [sp, #40]	; 0x28
   3a0f4:	mls	r7, r3, lr, r2
   3a0f8:	str	r2, [sp, #40]	; 0x28
   3a0fc:	str	r1, [sp, #32]
   3a100:	sub	r7, r7, r1
   3a104:	add	r6, r5, r7, lsl #2
   3a108:	add	r5, r7, r0
   3a10c:	ldr	r0, [fp, #24]
   3a110:	cmp	r0, #2
   3a114:	blt	3a1d4 <GetDataSlab+0x17810>
   3a118:	ldr	r8, [sp, #28]
   3a11c:	mov	r0, #0
   3a120:	ldr	r4, [sl, r0]
   3a124:	ldr	r1, [sp, #52]	; 0x34
   3a128:	add	r4, r4, #1
   3a12c:	str	r4, [sl, r0]
   3a130:	ldr	r7, [r1, r0]
   3a134:	sdiv	r9, r4, r7
   3a138:	mls	r4, r9, r7, r4
   3a13c:	cmp	r4, #0
   3a140:	bne	3a1c4 <GetDataSlab+0x17800>
   3a144:	mov	r1, #0
   3a148:	str	r1, [sl, r0]
   3a14c:	ldr	r1, [sp, #48]	; 0x30
   3a150:	ldr	r4, [r1, r0]
   3a154:	sdiv	r7, r5, r4
   3a158:	mls	r7, r7, r4, r5
   3a15c:	cmp	r7, #0
   3a160:	beq	3a194 <GetDataSlab+0x177d0>
   3a164:	add	r1, sp, #64	; 0x40
   3a168:	mov	r2, r6
   3a16c:	mov	r6, r5
   3a170:	ldr	r5, [ip, r0]
   3a174:	sub	r4, r4, r7
   3a178:	ldr	r1, [r1, r0]
   3a17c:	mla	r1, r5, r1, r4
   3a180:	mov	r5, r6
   3a184:	mov	r6, r2
   3a188:	add	r5, r1, r5
   3a18c:	add	r6, r2, r1, lsl #2
   3a190:	b	3a1b4 <GetDataSlab+0x177f0>
   3a194:	ldr	r4, [ip, r0]
   3a198:	cmp	r4, #0
   3a19c:	beq	3a1b4 <GetDataSlab+0x177f0>
   3a1a0:	add	r1, sp, #64	; 0x40
   3a1a4:	ldr	r1, [r1, r0]
   3a1a8:	mla	r5, r1, r4, r5
   3a1ac:	mul	r1, r1, r4
   3a1b0:	add	r6, r6, r1, lsl #2
   3a1b4:	subs	r8, r8, #1
   3a1b8:	add	r0, r0, #4
   3a1bc:	bne	3a120 <GetDataSlab+0x1775c>
   3a1c0:	b	3a1d4 <GetDataSlab+0x17810>
   3a1c4:	ldr	r1, [sp, #24]
   3a1c8:	ldr	r0, [r1, r0]
   3a1cc:	add	r6, r6, r0, lsl #2
   3a1d0:	add	r5, r0, r5
   3a1d4:	ldr	r2, [sp, #36]	; 0x24
   3a1d8:	ldr	r1, [sp, #44]	; 0x2c
   3a1dc:	mov	r0, #0
   3a1e0:	add	r2, lr, r2
   3a1e4:	cmp	r2, r1
   3a1e8:	str	r2, [sp, #36]	; 0x24
   3a1ec:	blt	3a088 <GetDataSlab+0x176c4>
   3a1f0:	b	24900 <GetDataSlab+0x1f3c>
   3a1f4:	ldr	r0, [sp, #40]	; 0x28
   3a1f8:	cmp	r0, #1
   3a1fc:	add	r0, sp, #64	; 0x40
   3a200:	blt	248fc <GetDataSlab+0x1f38>
   3a204:	orr	r0, r0, #4
   3a208:	ldr	ip, [fp, #12]
   3a20c:	add	r7, sp, #104	; 0x68
   3a210:	str	r0, [sp, #48]	; 0x30
   3a214:	ldr	r0, [fp, #24]
   3a218:	orr	r6, r7, #4
   3a21c:	ldr	r7, [fp, #20]
   3a220:	str	r6, [sp, #44]	; 0x2c
   3a224:	sub	r0, r0, #1
   3a228:	add	r1, r7, #4
   3a22c:	str	r0, [sp, #24]
   3a230:	sub	r0, fp, #72	; 0x48
   3a234:	str	r1, [sp, #52]	; 0x34
   3a238:	orr	r0, r0, #4
   3a23c:	str	r0, [sp, #20]
   3a240:	ldr	r0, [ip], #4
   3a244:	str	r0, [sp, #28]
   3a248:	mov	r0, #0
   3a24c:	str	r0, [sp, #32]
   3a250:	ldr	r2, [sp, #28]
   3a254:	cmp	sl, #1
   3a258:	add	r5, r5, r2, lsl #2
   3a25c:	add	r0, r2, lr
   3a260:	blt	3a2c0 <GetDataSlab+0x178fc>
   3a264:	ldr	r2, [sp, #56]	; 0x38
   3a268:	ldr	r1, [sp, #32]
   3a26c:	ldr	r6, [fp, #20]
   3a270:	ldr	lr, [fp, #8]
   3a274:	mov	r7, #0
   3a278:	add	r4, r2, r1, lsl #2
   3a27c:	ldr	r1, [fp, #16]
   3a280:	vldr	s0, [r5]
   3a284:	vcvt.u32.f32	s0, s0
   3a288:	vmov	r2, s0
   3a28c:	str	r2, [r4, r7, lsl #2]
   3a290:	add	r7, r7, #1
   3a294:	ldr	r3, [r1]
   3a298:	ldr	sl, [r6]
   3a29c:	add	r5, r5, r3, lsl #2
   3a2a0:	add	r0, r3, r0
   3a2a4:	cmp	r7, sl
   3a2a8:	blt	3a280 <GetDataSlab+0x178bc>
   3a2ac:	ldr	r7, [fp, #12]
   3a2b0:	ldr	r1, [lr]
   3a2b4:	ldr	r6, [sp, #44]	; 0x2c
   3a2b8:	ldr	r2, [r7]
   3a2bc:	b	3a2c4 <GetDataSlab+0x17900>
   3a2c0:	ldr	r1, [sp, #36]	; 0x24
   3a2c4:	mls	r7, r3, sl, r1
   3a2c8:	str	r2, [sp, #28]
   3a2cc:	sub	r7, r7, r2
   3a2d0:	add	lr, r7, r0
   3a2d4:	ldr	r0, [fp, #24]
   3a2d8:	add	r5, r5, r7, lsl #2
   3a2dc:	cmp	r0, #2
   3a2e0:	blt	3a3a0 <GetDataSlab+0x179dc>
   3a2e4:	ldr	r8, [sp, #24]
   3a2e8:	mov	r0, #0
   3a2ec:	ldr	r4, [r6, r0]
   3a2f0:	ldr	r2, [sp, #52]	; 0x34
   3a2f4:	add	r4, r4, #1
   3a2f8:	str	r4, [r6, r0]
   3a2fc:	ldr	r7, [r2, r0]
   3a300:	sdiv	r9, r4, r7
   3a304:	mls	r4, r9, r7, r4
   3a308:	cmp	r4, #0
   3a30c:	bne	3a390 <GetDataSlab+0x179cc>
   3a310:	mov	r2, #0
   3a314:	str	r2, [r6, r0]
   3a318:	ldr	r2, [sp, #48]	; 0x30
   3a31c:	ldr	r4, [r2, r0]
   3a320:	sdiv	r7, lr, r4
   3a324:	mls	r7, r7, r4, lr
   3a328:	cmp	r7, #0
   3a32c:	beq	3a358 <GetDataSlab+0x17994>
   3a330:	mov	r2, r5
   3a334:	add	r5, sp, #64	; 0x40
   3a338:	sub	r4, r4, r7
   3a33c:	ldr	r6, [r5, r0]
   3a340:	ldr	r5, [ip, r0]
   3a344:	mla	r4, r5, r6, r4
   3a348:	ldr	r6, [sp, #44]	; 0x2c
   3a34c:	mov	r5, r2
   3a350:	add	lr, r4, lr
   3a354:	b	3a37c <GetDataSlab+0x179b8>
   3a358:	ldr	r4, [ip, r0]
   3a35c:	cmp	r4, #0
   3a360:	beq	3a380 <GetDataSlab+0x179bc>
   3a364:	mov	r2, r5
   3a368:	add	r5, sp, #64	; 0x40
   3a36c:	ldr	r5, [r5, r0]
   3a370:	mla	lr, r5, r4, lr
   3a374:	mul	r4, r5, r4
   3a378:	mov	r5, r2
   3a37c:	add	r5, r2, r4, lsl #2
   3a380:	subs	r8, r8, #1
   3a384:	add	r0, r0, #4
   3a388:	bne	3a2ec <GetDataSlab+0x17928>
   3a38c:	b	3a3a0 <GetDataSlab+0x179dc>
   3a390:	ldr	r2, [sp, #20]
   3a394:	ldr	r0, [r2, r0]
   3a398:	add	r5, r5, r0, lsl #2
   3a39c:	add	lr, r0, lr
   3a3a0:	ldr	r2, [sp, #32]
   3a3a4:	str	r1, [sp, #36]	; 0x24
   3a3a8:	ldr	r1, [sp, #40]	; 0x28
   3a3ac:	mov	r0, #0
   3a3b0:	add	r2, sl, r2
   3a3b4:	cmp	r2, r1
   3a3b8:	str	r2, [sp, #32]
   3a3bc:	blt	3a250 <GetDataSlab+0x1788c>
   3a3c0:	b	24900 <GetDataSlab+0x1f3c>
   3a3c4:	ldr	r0, [sp, #40]	; 0x28
   3a3c8:	cmp	r0, #1
   3a3cc:	add	r0, sp, #64	; 0x40
   3a3d0:	blt	248fc <GetDataSlab+0x1f38>
   3a3d4:	orr	r0, r0, #4
   3a3d8:	ldr	ip, [fp, #12]
   3a3dc:	add	r7, sp, #104	; 0x68
   3a3e0:	str	r0, [sp, #48]	; 0x30
   3a3e4:	ldr	r0, [fp, #24]
   3a3e8:	orr	r6, r7, #4
   3a3ec:	ldr	r7, [fp, #20]
   3a3f0:	str	r6, [sp, #44]	; 0x2c
   3a3f4:	sub	r0, r0, #1
   3a3f8:	add	r1, r7, #4
   3a3fc:	str	r0, [sp, #24]
   3a400:	sub	r0, fp, #72	; 0x48
   3a404:	str	r1, [sp, #52]	; 0x34
   3a408:	orr	r0, r0, #4
   3a40c:	str	r0, [sp, #20]
   3a410:	ldr	r0, [ip], #4
   3a414:	str	r0, [sp, #28]
   3a418:	mov	r0, #0
   3a41c:	str	r0, [sp, #32]
   3a420:	ldr	r2, [sp, #28]
   3a424:	cmp	sl, #1
   3a428:	add	r5, r5, r2, lsl #3
   3a42c:	add	r0, r2, lr
   3a430:	blt	3a490 <GetDataSlab+0x17acc>
   3a434:	ldr	r2, [sp, #56]	; 0x38
   3a438:	ldr	r1, [sp, #32]
   3a43c:	ldr	r6, [fp, #20]
   3a440:	ldr	lr, [fp, #8]
   3a444:	mov	r7, #0
   3a448:	add	r4, r2, r1, lsl #2
   3a44c:	ldr	r1, [fp, #16]
   3a450:	vldr	d16, [r5]
   3a454:	vcvt.u32.f64	s0, d16
   3a458:	vmov	r2, s0
   3a45c:	str	r2, [r4, r7, lsl #2]
   3a460:	add	r7, r7, #1
   3a464:	ldr	r3, [r1]
   3a468:	ldr	sl, [r6]
   3a46c:	add	r5, r5, r3, lsl #3
   3a470:	add	r0, r3, r0
   3a474:	cmp	r7, sl
   3a478:	blt	3a450 <GetDataSlab+0x17a8c>
   3a47c:	ldr	r7, [fp, #12]
   3a480:	ldr	r1, [lr]
   3a484:	ldr	r6, [sp, #44]	; 0x2c
   3a488:	ldr	r2, [r7]
   3a48c:	b	3a494 <GetDataSlab+0x17ad0>
   3a490:	ldr	r1, [sp, #36]	; 0x24
   3a494:	mls	r7, r3, sl, r1
   3a498:	str	r2, [sp, #28]
   3a49c:	sub	r7, r7, r2
   3a4a0:	add	lr, r7, r0
   3a4a4:	ldr	r0, [fp, #24]
   3a4a8:	add	r5, r5, r7, lsl #3
   3a4ac:	cmp	r0, #2
   3a4b0:	blt	3a570 <GetDataSlab+0x17bac>
   3a4b4:	ldr	r8, [sp, #24]
   3a4b8:	mov	r0, #0
   3a4bc:	ldr	r4, [r6, r0]
   3a4c0:	ldr	r2, [sp, #52]	; 0x34
   3a4c4:	add	r4, r4, #1
   3a4c8:	str	r4, [r6, r0]
   3a4cc:	ldr	r7, [r2, r0]
   3a4d0:	sdiv	r9, r4, r7
   3a4d4:	mls	r4, r9, r7, r4
   3a4d8:	cmp	r4, #0
   3a4dc:	bne	3a560 <GetDataSlab+0x17b9c>
   3a4e0:	mov	r2, #0
   3a4e4:	str	r2, [r6, r0]
   3a4e8:	ldr	r2, [sp, #48]	; 0x30
   3a4ec:	ldr	r4, [r2, r0]
   3a4f0:	sdiv	r7, lr, r4
   3a4f4:	mls	r7, r7, r4, lr
   3a4f8:	cmp	r7, #0
   3a4fc:	beq	3a528 <GetDataSlab+0x17b64>
   3a500:	mov	r2, r5
   3a504:	add	r5, sp, #64	; 0x40
   3a508:	sub	r4, r4, r7
   3a50c:	ldr	r6, [r5, r0]
   3a510:	ldr	r5, [ip, r0]
   3a514:	mla	r4, r5, r6, r4
   3a518:	ldr	r6, [sp, #44]	; 0x2c
   3a51c:	mov	r5, r2
   3a520:	add	lr, r4, lr
   3a524:	b	3a54c <GetDataSlab+0x17b88>
   3a528:	ldr	r4, [ip, r0]
   3a52c:	cmp	r4, #0
   3a530:	beq	3a550 <GetDataSlab+0x17b8c>
   3a534:	mov	r2, r5
   3a538:	add	r5, sp, #64	; 0x40
   3a53c:	ldr	r5, [r5, r0]
   3a540:	mla	lr, r5, r4, lr
   3a544:	mul	r4, r5, r4
   3a548:	mov	r5, r2
   3a54c:	add	r5, r2, r4, lsl #3
   3a550:	subs	r8, r8, #1
   3a554:	add	r0, r0, #4
   3a558:	bne	3a4bc <GetDataSlab+0x17af8>
   3a55c:	b	3a570 <GetDataSlab+0x17bac>
   3a560:	ldr	r2, [sp, #20]
   3a564:	ldr	r0, [r2, r0]
   3a568:	add	r5, r5, r0, lsl #3
   3a56c:	add	lr, r0, lr
   3a570:	ldr	r2, [sp, #32]
   3a574:	str	r1, [sp, #36]	; 0x24
   3a578:	ldr	r1, [sp, #40]	; 0x28
   3a57c:	mov	r0, #0
   3a580:	add	r2, sl, r2
   3a584:	cmp	r2, r1
   3a588:	str	r2, [sp, #32]
   3a58c:	blt	3a420 <GetDataSlab+0x17a5c>
   3a590:	b	24900 <GetDataSlab+0x1f3c>
   3a594:	ldr	r0, [sp, #36]	; 0x24
   3a598:	ldr	r6, [fp, #16]
   3a59c:	ldr	ip, [fp, #12]
   3a5a0:	cmp	r0, #1
   3a5a4:	add	r0, sp, #64	; 0x40
   3a5a8:	blt	3a744 <GetDataSlab+0x17d80>
   3a5ac:	orr	r0, r0, #4
   3a5b0:	add	r2, sp, #104	; 0x68
   3a5b4:	str	r0, [sp, #44]	; 0x2c
   3a5b8:	ldr	r0, [fp, #24]
   3a5bc:	orr	r9, r2, #4
   3a5c0:	ldr	r2, [fp, #20]
   3a5c4:	sub	r0, r0, #1
   3a5c8:	add	r3, r2, #4
   3a5cc:	mov	sl, r2
   3a5d0:	str	r0, [sp, #16]
   3a5d4:	sub	r0, fp, #72	; 0x48
   3a5d8:	str	r3, [sp, #20]
   3a5dc:	orr	r0, r0, #4
   3a5e0:	str	r0, [sp, #12]
   3a5e4:	mov	r0, ip
   3a5e8:	ldr	r4, [r0], #4
   3a5ec:	str	r0, [sp, #40]	; 0x28
   3a5f0:	mov	r0, #0
   3a5f4:	add	r7, r7, r4, lsl #3
   3a5f8:	add	r3, r4, lr
   3a5fc:	cmp	r1, #1
   3a600:	blt	3a644 <GetDataSlab+0x17c80>
   3a604:	ldr	r1, [sp, #56]	; 0x38
   3a608:	mov	r2, #0
   3a60c:	add	r4, r1, r0, lsl #2
   3a610:	ldr	r1, [r7]
   3a614:	str	r1, [r4, r2, lsl #2]
   3a618:	add	r2, r2, #1
   3a61c:	ldr	r5, [r6]
   3a620:	ldr	r1, [sl]
   3a624:	add	r7, r7, r5, lsl #3
   3a628:	add	r3, r5, r3
   3a62c:	cmp	r2, r1
   3a630:	blt	3a610 <GetDataSlab+0x17c4c>
   3a634:	ldr	r2, [fp, #8]
   3a638:	ldr	r4, [ip]
   3a63c:	ldr	r2, [r2]
   3a640:	b	3a648 <GetDataSlab+0x17c84>
   3a644:	ldr	r2, [sp, #32]
   3a648:	str	r2, [sp, #32]
   3a64c:	mls	r2, r5, r1, r2
   3a650:	ldr	r6, [sp, #20]
   3a654:	str	r0, [sp, #28]
   3a658:	str	r4, [sp, #24]
   3a65c:	sub	r2, r2, r4
   3a660:	add	r7, r7, r2, lsl #3
   3a664:	add	lr, r2, r3
   3a668:	ldr	r2, [fp, #24]
   3a66c:	cmp	r2, #2
   3a670:	blt	3a724 <GetDataSlab+0x17d60>
   3a674:	ldr	r8, [sp, #16]
   3a678:	mov	ip, #0
   3a67c:	ldr	r2, [r9, ip]
   3a680:	add	r2, r2, #1
   3a684:	str	r2, [r9, ip]
   3a688:	ldr	r3, [r6, ip]
   3a68c:	sdiv	r4, r2, r3
   3a690:	mls	r2, r4, r3, r2
   3a694:	cmp	r2, #0
   3a698:	bne	3a714 <GetDataSlab+0x17d50>
   3a69c:	mov	r2, #0
   3a6a0:	str	r2, [r9, ip]
   3a6a4:	ldr	r2, [sp, #44]	; 0x2c
   3a6a8:	ldr	r2, [r2, ip]
   3a6ac:	sdiv	r3, lr, r2
   3a6b0:	mls	r3, r3, r2, lr
   3a6b4:	cmp	r3, #0
   3a6b8:	beq	3a6e0 <GetDataSlab+0x17d1c>
   3a6bc:	ldr	r0, [sp, #40]	; 0x28
   3a6c0:	add	r4, sp, #64	; 0x40
   3a6c4:	sub	r2, r2, r3
   3a6c8:	ldr	r4, [r4, ip]
   3a6cc:	ldr	sl, [r0, ip]
   3a6d0:	mla	r2, sl, r4, r2
   3a6d4:	ldr	sl, [fp, #20]
   3a6d8:	add	lr, r2, lr
   3a6dc:	b	3a700 <GetDataSlab+0x17d3c>
   3a6e0:	ldr	r2, [sp, #40]	; 0x28
   3a6e4:	ldr	r2, [r2, ip]
   3a6e8:	cmp	r2, #0
   3a6ec:	beq	3a704 <GetDataSlab+0x17d40>
   3a6f0:	add	r3, sp, #64	; 0x40
   3a6f4:	ldr	r3, [r3, ip]
   3a6f8:	mla	lr, r3, r2, lr
   3a6fc:	mul	r2, r3, r2
   3a700:	add	r7, r7, r2, lsl #3
   3a704:	subs	r8, r8, #1
   3a708:	add	ip, ip, #4
   3a70c:	bne	3a67c <GetDataSlab+0x17cb8>
   3a710:	b	3a724 <GetDataSlab+0x17d60>
   3a714:	ldr	r2, [sp, #12]
   3a718:	ldr	r2, [r2, ip]
   3a71c:	add	r7, r7, r2, lsl #3
   3a720:	add	lr, r2, lr
   3a724:	ldr	r0, [sp, #28]
   3a728:	ldr	r2, [sp, #36]	; 0x24
   3a72c:	ldr	r6, [fp, #16]
   3a730:	ldr	ip, [fp, #12]
   3a734:	ldr	r4, [sp, #24]
   3a738:	add	r0, r1, r0
   3a73c:	cmp	r0, r2
   3a740:	blt	3a5f4 <GetDataSlab+0x17c30>
   3a744:	mov	r0, #0
   3a748:	ldr	r1, [sp, #52]	; 0x34
   3a74c:	cmp	r1, #13
   3a750:	bne	24900 <GetDataSlab+0x1f3c>
   3a754:	ldr	r0, [fp, #16]
   3a758:	ldr	sl, [fp, #20]
   3a75c:	mov	lr, #0
   3a760:	add	r7, sp, #64	; 0x40
   3a764:	sub	r9, fp, #72	; 0x48
   3a768:	ldr	r3, [r0]
   3a76c:	sub	r0, r3, #1
   3a770:	str	r0, [fp, #-72]	; 0xffffffb8
   3a774:	ldr	r0, [fp, #8]
   3a778:	ldr	r0, [r0]
   3a77c:	str	r0, [sp, #64]	; 0x40
   3a780:	str	r0, [sp, #36]	; 0x24
   3a784:	ldr	r0, [fp, #24]
   3a788:	ldr	sl, [sl]
   3a78c:	cmp	r0, #2
   3a790:	mov	r0, sl
   3a794:	str	sl, [sp, #40]	; 0x28
   3a798:	blt	3a840 <GetDataSlab+0x17e7c>
   3a79c:	ldr	r6, [sp, #36]	; 0x24
   3a7a0:	ldr	r1, [fp, #8]
   3a7a4:	mov	r0, #1
   3a7a8:	mov	lr, #0
   3a7ac:	mov	r2, sl
   3a7b0:	str	sl, [sp, #40]	; 0x28
   3a7b4:	mov	r8, r6
   3a7b8:	ldr	r5, [fp, #16]
   3a7bc:	mov	r4, #0
   3a7c0:	ldr	r5, [r5, r0, lsl #2]
   3a7c4:	str	r6, [r7, r0, lsl #2]
   3a7c8:	ldr	r7, [fp, #8]
   3a7cc:	sub	r5, r5, #1
   3a7d0:	str	r5, [r9, r0, lsl #2]
   3a7d4:	ldr	ip, [r7, r0, lsl #2]
   3a7d8:	mov	r7, ip
   3a7dc:	mul	r6, r7, r6
   3a7e0:	ldr	r7, [r1, -r4, lsl #2]
   3a7e4:	add	r4, r4, #1
   3a7e8:	cmp	r0, r4
   3a7ec:	mul	r5, r5, r7
   3a7f0:	bne	3a7dc <GetDataSlab+0x17e18>
   3a7f4:	ldr	r2, [fp, #12]
   3a7f8:	add	r7, sp, #64	; 0x40
   3a7fc:	sub	r9, fp, #72	; 0x48
   3a800:	add	r1, r1, #4
   3a804:	str	r6, [r7, r0, lsl #2]
   3a808:	str	r5, [r9, r0, lsl #2]
   3a80c:	ldr	r4, [r2, r0, lsl #2]
   3a810:	ldr	r2, [fp, #20]
   3a814:	mla	lr, r4, r8, lr
   3a818:	ldr	r4, [r2, r0, lsl #2]
   3a81c:	ldr	r2, [sp, #40]	; 0x28
   3a820:	add	r0, r0, #1
   3a824:	mov	r8, r6
   3a828:	mov	r6, ip
   3a82c:	mul	r2, r4, r2
   3a830:	ldr	r4, [fp, #24]
   3a834:	str	r2, [sp, #40]	; 0x28
   3a838:	cmp	r0, r4
   3a83c:	bne	3a7b8 <GetDataSlab+0x17df4>
   3a840:	ldr	r0, [sp, #48]	; 0x30
   3a844:	cmp	r3, #1
   3a848:	add	r5, r0, lr, lsl #3
   3a84c:	bne	3d5f4 <GetDataSlab+0x1ac30>
   3a850:	ldr	r0, [sp, #40]	; 0x28
   3a854:	cmp	r0, #1
   3a858:	add	r0, sp, #64	; 0x40
   3a85c:	blt	248fc <GetDataSlab+0x1f38>
   3a860:	orr	r0, r0, #4
   3a864:	ldr	r9, [fp, #12]
   3a868:	ldr	r3, [fp, #20]
   3a86c:	add	r1, sp, #104	; 0x68
   3a870:	mov	r6, #0
   3a874:	str	r0, [sp, #48]	; 0x30
   3a878:	ldr	r0, [fp, #24]
   3a87c:	orr	r1, r1, #4
   3a880:	add	r2, r3, #4
   3a884:	sub	r0, r0, #1
   3a888:	str	r2, [sp, #52]	; 0x34
   3a88c:	str	r0, [sp, #32]
   3a890:	sub	r0, fp, #72	; 0x48
   3a894:	orr	r0, r0, #4
   3a898:	str	r0, [sp, #28]
   3a89c:	ldr	r0, [r9], #4
   3a8a0:	str	r0, [sp, #44]	; 0x2c
   3a8a4:	ldr	r7, [sp, #44]	; 0x2c
   3a8a8:	cmp	sl, #1
   3a8ac:	add	r0, r5, r7, lsl #3
   3a8b0:	add	lr, r7, lr
   3a8b4:	blt	3a8f8 <GetDataSlab+0x17f34>
   3a8b8:	ldr	r2, [sp, #56]	; 0x38
   3a8bc:	ldr	r3, [fp, #20]
   3a8c0:	mov	r4, #0
   3a8c4:	mov	r5, r0
   3a8c8:	add	r7, r2, r6, lsl #2
   3a8cc:	ldr	r2, [r5], #8
   3a8d0:	str	r2, [r7, r4, lsl #2]
   3a8d4:	add	r4, r4, #1
   3a8d8:	ldr	sl, [r3]
   3a8dc:	cmp	r4, sl
   3a8e0:	blt	3a8cc <GetDataSlab+0x17f08>
   3a8e4:	ldr	r3, [fp, #12]
   3a8e8:	ldr	r7, [r3]
   3a8ec:	ldr	r3, [fp, #8]
   3a8f0:	ldr	r2, [r3]
   3a8f4:	str	r2, [sp, #36]	; 0x24
   3a8f8:	ldr	r3, [sp, #36]	; 0x24
   3a8fc:	mov	r2, r6
   3a900:	str	r7, [sp, #44]	; 0x2c
   3a904:	sub	r4, r3, r7
   3a908:	add	r5, r0, r4, lsl #3
   3a90c:	ldr	r0, [fp, #24]
   3a910:	add	lr, lr, r4
   3a914:	cmp	r0, #2
   3a918:	blt	3a9c4 <GetDataSlab+0x18000>
   3a91c:	ldr	r8, [sp, #32]
   3a920:	mov	r0, #0
   3a924:	ldr	r4, [r1, r0]
   3a928:	ldr	r3, [sp, #52]	; 0x34
   3a92c:	add	r4, r4, #1
   3a930:	str	r4, [r1, r0]
   3a934:	ldr	r7, [r3, r0]
   3a938:	sdiv	ip, r4, r7
   3a93c:	mls	r7, ip, r7, r4
   3a940:	cmp	r7, #0
   3a944:	bne	3a9b4 <GetDataSlab+0x17ff0>
   3a948:	mov	r3, #0
   3a94c:	str	r3, [r1, r0]
   3a950:	ldr	r3, [sp, #48]	; 0x30
   3a954:	ldr	r4, [r3, r0]
   3a958:	sdiv	r7, lr, r4
   3a95c:	mls	r7, r7, r4, lr
   3a960:	cmp	r7, #0
   3a964:	beq	3a984 <GetDataSlab+0x17fc0>
   3a968:	add	r3, sp, #64	; 0x40
   3a96c:	ldr	r6, [r9, r0]
   3a970:	sub	r7, r4, r7
   3a974:	ldr	r3, [r3, r0]
   3a978:	mla	r3, r6, r3, r7
   3a97c:	add	lr, r3, lr
   3a980:	b	3a9a0 <GetDataSlab+0x17fdc>
   3a984:	ldr	r4, [r9, r0]
   3a988:	cmp	r4, #0
   3a98c:	beq	3a9a4 <GetDataSlab+0x17fe0>
   3a990:	add	r3, sp, #64	; 0x40
   3a994:	ldr	r3, [r3, r0]
   3a998:	mla	lr, r3, r4, lr
   3a99c:	mul	r3, r3, r4
   3a9a0:	add	r5, r5, r3, lsl #3
   3a9a4:	subs	r8, r8, #1
   3a9a8:	add	r0, r0, #4
   3a9ac:	bne	3a924 <GetDataSlab+0x17f60>
   3a9b0:	b	3a9c4 <GetDataSlab+0x18000>
   3a9b4:	ldr	r3, [sp, #28]
   3a9b8:	ldr	r0, [r3, r0]
   3a9bc:	add	r5, r5, r0, lsl #3
   3a9c0:	add	lr, r0, lr
   3a9c4:	ldr	r0, [sp, #40]	; 0x28
   3a9c8:	mov	r6, r2
   3a9cc:	add	r6, sl, r2
   3a9d0:	cmp	r6, r0
   3a9d4:	mov	r0, #0
   3a9d8:	blt	3a8a4 <GetDataSlab+0x17ee0>
   3a9dc:	b	24900 <GetDataSlab+0x1f3c>
   3a9e0:	ldr	r0, [sp, #44]	; 0x2c
   3a9e4:	ldr	r2, [sp, #40]	; 0x28
   3a9e8:	cmp	r0, #1
   3a9ec:	blt	248fc <GetDataSlab+0x1f38>
   3a9f0:	ldr	r0, [sp, #36]	; 0x24
   3a9f4:	mov	r9, #0
   3a9f8:	mov	sl, #0
   3a9fc:	mls	r0, r2, r1, r0
   3aa00:	str	r0, [sp, #32]
   3aa04:	mul	r0, r2, r1
   3aa08:	mov	r1, lr
   3aa0c:	str	r1, [sp, #48]	; 0x30
   3aa10:	str	r0, [sp, #24]
   3aa14:	add	r0, sp, #104	; 0x68
   3aa18:	orr	r6, r0, #4
   3aa1c:	ldr	r0, [fp, #20]
   3aa20:	add	lr, r0, #4
   3aa24:	add	r0, sp, #64	; 0x40
   3aa28:	orr	r0, r0, #4
   3aa2c:	str	r0, [sp, #56]	; 0x38
   3aa30:	ldr	r0, [fp, #12]
   3aa34:	add	r0, r0, #4
   3aa38:	str	r0, [sp, #52]	; 0x34
   3aa3c:	ldr	r0, [fp, #24]
   3aa40:	sub	r0, r0, #1
   3aa44:	str	r0, [sp, #20]
   3aa48:	sub	r0, fp, #72	; 0x48
   3aa4c:	orr	r0, r0, #4
   3aa50:	str	r0, [sp, #16]
   3aa54:	lsl	r0, r2, #3
   3aa58:	str	r0, [sp, #36]	; 0x24
   3aa5c:	ldr	r0, [fp, #12]
   3aa60:	cmp	r2, #1
   3aa64:	ldr	r0, [r0]
   3aa68:	add	r7, r7, r0
   3aa6c:	blt	3aaa0 <GetDataSlab+0x180dc>
   3aa70:	ldr	r1, [sp, #24]
   3aa74:	ldr	r5, [sp, #48]	; 0x30
   3aa78:	add	r8, r1, r3
   3aa7c:	ldr	r1, [sp, #28]
   3aa80:	mov	r3, r2
   3aa84:	ldrb	r4, [r7], r1
   3aa88:	subs	r3, r3, #1
   3aa8c:	stm	r5, {r4, r9}
   3aa90:	add	r5, r5, #8
   3aa94:	bne	3aa84 <GetDataSlab+0x180c0>
   3aa98:	add	r3, r8, r0
   3aa9c:	b	3aaa4 <GetDataSlab+0x180e0>
   3aaa0:	add	r3, r0, r3
   3aaa4:	ldr	r1, [sp, #32]
   3aaa8:	sub	r0, r1, r0
   3aaac:	add	r7, r7, r0
   3aab0:	add	r3, r3, r0
   3aab4:	ldr	r0, [fp, #24]
   3aab8:	cmp	r0, #2
   3aabc:	blt	3ab68 <GetDataSlab+0x181a4>
   3aac0:	ldr	r8, [sp, #20]
   3aac4:	mov	r0, #0
   3aac8:	ldr	r4, [r6, r0]
   3aacc:	add	r4, r4, #1
   3aad0:	str	r4, [r6, r0]
   3aad4:	ldr	r5, [lr, r0]
   3aad8:	sdiv	ip, r4, r5
   3aadc:	mls	r5, ip, r5, r4
   3aae0:	cmp	r5, #0
   3aae4:	bne	3ab58 <GetDataSlab+0x18194>
   3aae8:	ldr	r1, [sp, #56]	; 0x38
   3aaec:	str	r9, [r6, r0]
   3aaf0:	ldr	r5, [r1, r0]
   3aaf4:	sdiv	r4, r3, r5
   3aaf8:	mls	r4, r4, r5, r3
   3aafc:	cmp	r4, #0
   3ab00:	beq	3ab28 <GetDataSlab+0x18164>
   3ab04:	add	r1, sp, #64	; 0x40
   3ab08:	sub	r5, r5, r4
   3ab0c:	ldr	r2, [r1, r0]
   3ab10:	ldr	r1, [sp, #52]	; 0x34
   3ab14:	ldr	r1, [r1, r0]
   3ab18:	mla	r1, r1, r2, r5
   3ab1c:	add	r3, r1, r3
   3ab20:	add	r7, r7, r1
   3ab24:	b	3ab48 <GetDataSlab+0x18184>
   3ab28:	ldr	r1, [sp, #52]	; 0x34
   3ab2c:	ldr	r4, [r1, r0]
   3ab30:	cmp	r4, #0
   3ab34:	beq	3ab48 <GetDataSlab+0x18184>
   3ab38:	add	r1, sp, #64	; 0x40
   3ab3c:	ldr	r1, [r1, r0]
   3ab40:	mla	r3, r1, r4, r3
   3ab44:	mla	r7, r1, r4, r7
   3ab48:	subs	r8, r8, #1
   3ab4c:	add	r0, r0, #4
   3ab50:	bne	3aac8 <GetDataSlab+0x18104>
   3ab54:	b	3ab68 <GetDataSlab+0x181a4>
   3ab58:	ldr	r1, [sp, #16]
   3ab5c:	ldr	r0, [r1, r0]
   3ab60:	add	r7, r7, r0
   3ab64:	add	r3, r0, r3
   3ab68:	ldr	r0, [sp, #36]	; 0x24
   3ab6c:	ldr	r1, [sp, #48]	; 0x30
   3ab70:	ldr	r2, [sp, #40]	; 0x28
   3ab74:	mov	r5, sl
   3ab78:	add	r1, r1, r0
   3ab7c:	add	r5, sl, r2
   3ab80:	mov	r0, #0
   3ab84:	str	r1, [sp, #48]	; 0x30
   3ab88:	ldr	r1, [sp, #44]	; 0x2c
   3ab8c:	mov	sl, r5
   3ab90:	cmp	r5, r1
   3ab94:	blt	3aa5c <GetDataSlab+0x18098>
   3ab98:	b	24900 <GetDataSlab+0x1f3c>
   3ab9c:	ldr	r0, [sp, #52]	; 0x34
   3aba0:	ldr	r2, [sp, #44]	; 0x2c
   3aba4:	cmp	r0, #1
   3aba8:	blt	248fc <GetDataSlab+0x1f38>
   3abac:	ldr	r0, [sp, #40]	; 0x28
   3abb0:	ldr	r3, [ip], #4
   3abb4:	lsl	sl, lr, #1
   3abb8:	mls	r0, r2, lr, r0
   3abbc:	str	r3, [sp, #48]	; 0x30
   3abc0:	sub	r0, r0, r3
   3abc4:	str	r0, [sp, #40]	; 0x28
   3abc8:	add	r0, sp, #104	; 0x68
   3abcc:	orr	r6, r0, #4
   3abd0:	ldr	r0, [fp, #20]
   3abd4:	add	r5, r0, #4
   3abd8:	add	r0, sp, #64	; 0x40
   3abdc:	orr	r1, r0, #4
   3abe0:	ldr	r0, [fp, #24]
   3abe4:	sub	r0, r0, #1
   3abe8:	str	r0, [sp, #28]
   3abec:	sub	r0, fp, #72	; 0x48
   3abf0:	orr	r0, r0, #4
   3abf4:	str	r0, [sp, #24]
   3abf8:	mla	r0, r2, lr, r3
   3abfc:	str	r0, [sp, #32]
   3ac00:	lsl	r0, r2, #3
   3ac04:	str	r0, [sp, #36]	; 0x24
   3ac08:	ldr	r0, [sp, #56]	; 0x38
   3ac0c:	str	r0, [sp, #60]	; 0x3c
   3ac10:	mov	r0, #0
   3ac14:	str	r0, [sp, #56]	; 0x38
   3ac18:	ldr	r3, [sp, #48]	; 0x30
   3ac1c:	cmp	r2, #1
   3ac20:	add	r0, r7, r3, lsl #1
   3ac24:	blt	3ac4c <GetDataSlab+0x18288>
   3ac28:	ldr	r3, [sp, #60]	; 0x3c
   3ac2c:	mov	r7, r2
   3ac30:	ldrsh	r2, [r0], sl
   3ac34:	subs	r7, r7, #1
   3ac38:	asr	r9, r2, #31
   3ac3c:	stm	r3, {r2, r9}
   3ac40:	add	r3, r3, #8
   3ac44:	bne	3ac30 <GetDataSlab+0x1826c>
   3ac48:	ldr	r3, [sp, #32]
   3ac4c:	ldr	r2, [sp, #40]	; 0x28
   3ac50:	add	r7, r0, r2, lsl #1
   3ac54:	add	r0, r3, r8
   3ac58:	add	r8, r0, r2
   3ac5c:	ldr	r0, [fp, #24]
   3ac60:	cmp	r0, #2
   3ac64:	blt	3ad08 <GetDataSlab+0x18344>
   3ac68:	ldr	lr, [sp, #28]
   3ac6c:	mov	r0, #0
   3ac70:	ldr	r2, [r6, r0]
   3ac74:	add	r2, r2, #1
   3ac78:	str	r2, [r6, r0]
   3ac7c:	ldr	r3, [r5, r0]
   3ac80:	sdiv	r4, r2, r3
   3ac84:	mls	r2, r4, r3, r2
   3ac88:	cmp	r2, #0
   3ac8c:	bne	3acf8 <GetDataSlab+0x18334>
   3ac90:	ldr	r3, [r1, r0]
   3ac94:	mov	r2, #0
   3ac98:	str	r2, [r6, r0]
   3ac9c:	sdiv	r2, r8, r3
   3aca0:	mls	r9, r2, r3, r8
   3aca4:	cmp	r9, #0
   3aca8:	beq	3acc8 <GetDataSlab+0x18304>
   3acac:	add	r2, sp, #64	; 0x40
   3acb0:	ldr	r4, [ip, r0]
   3acb4:	sub	r3, r3, r9
   3acb8:	ldr	r2, [r2, r0]
   3acbc:	mla	r2, r4, r2, r3
   3acc0:	add	r8, r2, r8
   3acc4:	b	3ace4 <GetDataSlab+0x18320>
   3acc8:	ldr	r3, [ip, r0]
   3accc:	cmp	r3, #0
   3acd0:	beq	3ace8 <GetDataSlab+0x18324>
   3acd4:	add	r2, sp, #64	; 0x40
   3acd8:	ldr	r2, [r2, r0]
   3acdc:	mla	r8, r2, r3, r8
   3ace0:	mul	r2, r2, r3
   3ace4:	add	r7, r7, r2, lsl #1
   3ace8:	subs	lr, lr, #1
   3acec:	add	r0, r0, #4
   3acf0:	bne	3ac70 <GetDataSlab+0x182ac>
   3acf4:	b	3ad08 <GetDataSlab+0x18344>
   3acf8:	ldr	r2, [sp, #24]
   3acfc:	ldr	r0, [r2, r0]
   3ad00:	add	r7, r7, r0, lsl #1
   3ad04:	add	r8, r0, r8
   3ad08:	ldr	r0, [sp, #36]	; 0x24
   3ad0c:	ldr	r2, [sp, #60]	; 0x3c
   3ad10:	ldr	r4, [sp, #56]	; 0x38
   3ad14:	ldr	r3, [sp, #52]	; 0x34
   3ad18:	add	r2, r2, r0
   3ad1c:	mov	r0, #0
   3ad20:	str	r2, [sp, #60]	; 0x3c
   3ad24:	ldr	r2, [sp, #44]	; 0x2c
   3ad28:	add	r4, r4, r2
   3ad2c:	cmp	r4, r3
   3ad30:	str	r4, [sp, #56]	; 0x38
   3ad34:	blt	3ac18 <GetDataSlab+0x18254>
   3ad38:	b	24900 <GetDataSlab+0x1f3c>
   3ad3c:	ldr	r4, [sp, #56]	; 0x38
   3ad40:	cmp	r6, #1
   3ad44:	blt	248fc <GetDataSlab+0x1f38>
   3ad48:	ldr	r1, [sp, #60]	; 0x3c
   3ad4c:	ldr	r0, [sp, #40]	; 0x28
   3ad50:	str	r6, [sp, #48]	; 0x30
   3ad54:	mov	r9, #0
   3ad58:	ldr	r3, [r1], #4
   3ad5c:	mls	r0, r4, sl, r0
   3ad60:	str	r1, [sp, #60]	; 0x3c
   3ad64:	mov	r1, lr
   3ad68:	str	r1, [sp, #52]	; 0x34
   3ad6c:	sub	r0, r0, r3
   3ad70:	str	r3, [sp, #40]	; 0x28
   3ad74:	str	r0, [sp, #36]	; 0x24
   3ad78:	add	r0, sp, #104	; 0x68
   3ad7c:	orr	r6, r0, #4
   3ad80:	ldr	r0, [fp, #20]
   3ad84:	add	lr, r0, #4
   3ad88:	add	r0, sp, #64	; 0x40
   3ad8c:	orr	ip, r0, #4
   3ad90:	ldr	r0, [fp, #24]
   3ad94:	sub	r0, r0, #1
   3ad98:	str	r0, [sp, #24]
   3ad9c:	sub	r0, fp, #72	; 0x48
   3ada0:	orr	r0, r0, #4
   3ada4:	str	r0, [sp, #20]
   3ada8:	mla	r0, r4, sl, r3
   3adac:	lsl	sl, sl, #1
   3adb0:	str	r0, [sp, #28]
   3adb4:	lsl	r0, r4, #3
   3adb8:	str	r0, [sp, #32]
   3adbc:	mov	r0, #0
   3adc0:	str	r0, [sp, #44]	; 0x2c
   3adc4:	ldr	r3, [sp, #40]	; 0x28
   3adc8:	cmp	r4, #1
   3adcc:	add	r0, r7, r3, lsl #1
   3add0:	blt	3adf4 <GetDataSlab+0x18430>
   3add4:	ldr	r3, [sp, #52]	; 0x34
   3add8:	mov	r7, r4
   3addc:	ldrh	r4, [r0], sl
   3ade0:	subs	r7, r7, #1
   3ade4:	stm	r3, {r4, r9}
   3ade8:	add	r3, r3, #8
   3adec:	bne	3addc <GetDataSlab+0x18418>
   3adf0:	ldr	r3, [sp, #28]
   3adf4:	ldr	r1, [sp, #36]	; 0x24
   3adf8:	add	r7, r0, r1, lsl #1
   3adfc:	add	r0, r3, r2
   3ae00:	add	r2, r0, r1
   3ae04:	ldr	r0, [fp, #24]
   3ae08:	cmp	r0, #2
   3ae0c:	blt	3aeb4 <GetDataSlab+0x184f0>
   3ae10:	ldr	r3, [sp, #24]
   3ae14:	mov	r0, #0
   3ae18:	ldr	r4, [r6, r0]
   3ae1c:	add	r4, r4, #1
   3ae20:	str	r4, [r6, r0]
   3ae24:	ldr	r5, [lr, r0]
   3ae28:	sdiv	r1, r4, r5
   3ae2c:	mls	r1, r1, r5, r4
   3ae30:	cmp	r1, #0
   3ae34:	bne	3aea4 <GetDataSlab+0x184e0>
   3ae38:	ldr	r4, [ip, r0]
   3ae3c:	str	r9, [r6, r0]
   3ae40:	sdiv	r1, r2, r4
   3ae44:	mls	r8, r1, r4, r2
   3ae48:	cmp	r8, #0
   3ae4c:	beq	3ae70 <GetDataSlab+0x184ac>
   3ae50:	ldr	r5, [sp, #60]	; 0x3c
   3ae54:	add	r1, sp, #64	; 0x40
   3ae58:	sub	r4, r4, r8
   3ae5c:	ldr	r1, [r1, r0]
   3ae60:	ldr	r5, [r5, r0]
   3ae64:	mla	r1, r5, r1, r4
   3ae68:	add	r2, r1, r2
   3ae6c:	b	3ae90 <GetDataSlab+0x184cc>
   3ae70:	ldr	r1, [sp, #60]	; 0x3c
   3ae74:	ldr	r4, [r1, r0]
   3ae78:	cmp	r4, #0
   3ae7c:	beq	3ae94 <GetDataSlab+0x184d0>
   3ae80:	add	r1, sp, #64	; 0x40
   3ae84:	ldr	r1, [r1, r0]
   3ae88:	mla	r2, r1, r4, r2
   3ae8c:	mul	r1, r1, r4
   3ae90:	add	r7, r7, r1, lsl #1
   3ae94:	subs	r3, r3, #1
   3ae98:	add	r0, r0, #4
   3ae9c:	bne	3ae18 <GetDataSlab+0x18454>
   3aea0:	b	3aeb4 <GetDataSlab+0x184f0>
   3aea4:	ldr	r1, [sp, #20]
   3aea8:	ldr	r0, [r1, r0]
   3aeac:	add	r7, r7, r0, lsl #1
   3aeb0:	add	r2, r0, r2
   3aeb4:	ldr	r0, [sp, #32]
   3aeb8:	ldr	r1, [sp, #52]	; 0x34
   3aebc:	ldr	r4, [sp, #56]	; 0x38
   3aec0:	ldr	r3, [sp, #44]	; 0x2c
   3aec4:	add	r1, r1, r0
   3aec8:	add	r3, r3, r4
   3aecc:	mov	r0, #0
   3aed0:	str	r1, [sp, #52]	; 0x34
   3aed4:	ldr	r1, [sp, #48]	; 0x30
   3aed8:	str	r3, [sp, #44]	; 0x2c
   3aedc:	cmp	r3, r1
   3aee0:	blt	3adc4 <GetDataSlab+0x18400>
   3aee4:	b	24900 <GetDataSlab+0x1f3c>
   3aee8:	ldr	r0, [sp, #52]	; 0x34
   3aeec:	ldr	r3, [sp, #44]	; 0x2c
   3aef0:	cmp	r0, #1
   3aef4:	blt	248fc <GetDataSlab+0x1f38>
   3aef8:	ldr	r0, [sp, #40]	; 0x28
   3aefc:	mov	r1, ip
   3af00:	lsl	sl, r9, #2
   3af04:	add	r2, r1, #4
   3af08:	mls	r0, r3, r9, r0
   3af0c:	str	r0, [sp, #40]	; 0x28
   3af10:	add	r0, sp, #104	; 0x68
   3af14:	orr	r5, r0, #4
   3af18:	ldr	r0, [fp, #20]
   3af1c:	add	r6, r0, #4
   3af20:	add	r0, sp, #64	; 0x40
   3af24:	orr	ip, r0, #4
   3af28:	ldr	r0, [fp, #24]
   3af2c:	sub	r0, r0, #1
   3af30:	str	r0, [sp, #28]
   3af34:	sub	r0, fp, #72	; 0x48
   3af38:	orr	r0, r0, #4
   3af3c:	str	r0, [sp, #24]
   3af40:	mul	r0, r3, r9
   3af44:	str	r0, [sp, #32]
   3af48:	lsl	r0, r3, #3
   3af4c:	str	r0, [sp, #36]	; 0x24
   3af50:	mov	r0, #0
   3af54:	str	r0, [sp, #48]	; 0x30
   3af58:	ldr	r0, [fp, #12]
   3af5c:	cmp	r3, #1
   3af60:	ldr	r0, [r0]
   3af64:	add	r7, r7, r0, lsl #2
   3af68:	blt	3af98 <GetDataSlab+0x185d4>
   3af6c:	ldr	r1, [sp, #32]
   3af70:	ldr	r4, [sp, #56]	; 0x38
   3af74:	add	lr, r1, r8
   3af78:	ldr	r8, [r7], sl
   3af7c:	subs	r3, r3, #1
   3af80:	asr	r9, r8, #31
   3af84:	strd	r8, [r4]
   3af88:	add	r4, r4, #8
   3af8c:	bne	3af78 <GetDataSlab+0x185b4>
   3af90:	add	r3, lr, r0
   3af94:	b	3af9c <GetDataSlab+0x185d8>
   3af98:	add	r3, r0, r8
   3af9c:	ldr	r1, [sp, #40]	; 0x28
   3afa0:	sub	r0, r1, r0
   3afa4:	add	r7, r7, r0, lsl #2
   3afa8:	add	r8, r3, r0
   3afac:	ldr	r0, [fp, #24]
   3afb0:	cmp	r0, #2
   3afb4:	blt	3b058 <GetDataSlab+0x18694>
   3afb8:	ldr	lr, [sp, #28]
   3afbc:	mov	r0, #0
   3afc0:	ldr	r3, [r5, r0]
   3afc4:	add	r3, r3, #1
   3afc8:	str	r3, [r5, r0]
   3afcc:	ldr	r4, [r6, r0]
   3afd0:	sdiv	r1, r3, r4
   3afd4:	mls	r1, r1, r4, r3
   3afd8:	cmp	r1, #0
   3afdc:	bne	3b048 <GetDataSlab+0x18684>
   3afe0:	ldr	r4, [ip, r0]
   3afe4:	mov	r1, #0
   3afe8:	str	r1, [r5, r0]
   3afec:	sdiv	r1, r8, r4
   3aff0:	mls	r9, r1, r4, r8
   3aff4:	cmp	r9, #0
   3aff8:	beq	3b018 <GetDataSlab+0x18654>
   3affc:	add	r1, sp, #64	; 0x40
   3b000:	ldr	r3, [r2, r0]
   3b004:	sub	r4, r4, r9
   3b008:	ldr	r1, [r1, r0]
   3b00c:	mla	r1, r3, r1, r4
   3b010:	add	r8, r1, r8
   3b014:	b	3b034 <GetDataSlab+0x18670>
   3b018:	ldr	r4, [r2, r0]
   3b01c:	cmp	r4, #0
   3b020:	beq	3b038 <GetDataSlab+0x18674>
   3b024:	add	r1, sp, #64	; 0x40
   3b028:	ldr	r1, [r1, r0]
   3b02c:	mla	r8, r1, r4, r8
   3b030:	mul	r1, r1, r4
   3b034:	add	r7, r7, r1, lsl #2
   3b038:	subs	lr, lr, #1
   3b03c:	add	r0, r0, #4
   3b040:	bne	3afc0 <GetDataSlab+0x185fc>
   3b044:	b	3b058 <GetDataSlab+0x18694>
   3b048:	ldr	r1, [sp, #24]
   3b04c:	ldr	r0, [r1, r0]
   3b050:	add	r7, r7, r0, lsl #2
   3b054:	add	r8, r0, r8
   3b058:	ldr	r0, [sp, #36]	; 0x24
   3b05c:	ldr	r1, [sp, #56]	; 0x38
   3b060:	ldr	r3, [sp, #44]	; 0x2c
   3b064:	ldr	r4, [sp, #48]	; 0x30
   3b068:	add	r1, r1, r0
   3b06c:	add	r4, r4, r3
   3b070:	mov	r0, #0
   3b074:	str	r1, [sp, #56]	; 0x38
   3b078:	ldr	r1, [sp, #52]	; 0x34
   3b07c:	str	r4, [sp, #48]	; 0x30
   3b080:	cmp	r4, r1
   3b084:	blt	3af58 <GetDataSlab+0x18594>
   3b088:	b	24900 <GetDataSlab+0x1f3c>
   3b08c:	ldr	r0, [sp, #44]	; 0x2c
   3b090:	ldr	r4, [sp, #40]	; 0x28
   3b094:	cmp	r0, #1
   3b098:	blt	248fc <GetDataSlab+0x1f38>
   3b09c:	ldr	r0, [sp, #36]	; 0x24
   3b0a0:	lsl	sl, lr, #2
   3b0a4:	mov	r1, #0
   3b0a8:	mls	r0, r4, lr, r0
   3b0ac:	str	r0, [sp, #36]	; 0x24
   3b0b0:	add	r0, sp, #104	; 0x68
   3b0b4:	orr	r5, r0, #4
   3b0b8:	ldr	r0, [fp, #20]
   3b0bc:	add	ip, r0, #4
   3b0c0:	add	r0, sp, #64	; 0x40
   3b0c4:	orr	r0, r0, #4
   3b0c8:	str	r0, [sp, #52]	; 0x34
   3b0cc:	ldr	r0, [fp, #12]
   3b0d0:	add	r8, r0, #4
   3b0d4:	ldr	r0, [fp, #24]
   3b0d8:	sub	r0, r0, #1
   3b0dc:	str	r0, [sp, #24]
   3b0e0:	sub	r0, fp, #72	; 0x48
   3b0e4:	orr	r0, r0, #4
   3b0e8:	str	r0, [sp, #20]
   3b0ec:	mul	r0, r4, lr
   3b0f0:	str	r0, [sp, #28]
   3b0f4:	lsl	r0, r4, #3
   3b0f8:	str	r0, [sp, #32]
   3b0fc:	mov	r0, #0
   3b100:	str	r0, [sp, #48]	; 0x30
   3b104:	ldr	r0, [fp, #12]
   3b108:	cmp	r4, #1
   3b10c:	ldr	r2, [r0]
   3b110:	add	r7, r7, r2, lsl #2
   3b114:	blt	3b148 <GetDataSlab+0x18784>
   3b118:	ldr	r6, [sp, #28]
   3b11c:	mov	r0, r4
   3b120:	ldr	r4, [sp, #56]	; 0x38
   3b124:	add	lr, r6, r3
   3b128:	mov	r3, r0
   3b12c:	ldr	r0, [r7], sl
   3b130:	subs	r3, r3, #1
   3b134:	strd	r0, [r4]
   3b138:	add	r4, r4, #8
   3b13c:	bne	3b12c <GetDataSlab+0x18768>
   3b140:	add	r3, lr, r2
   3b144:	b	3b14c <GetDataSlab+0x18788>
   3b148:	add	r3, r2, r3
   3b14c:	ldr	r0, [sp, #36]	; 0x24
   3b150:	sub	r0, r0, r2
   3b154:	add	r7, r7, r0, lsl #2
   3b158:	add	r3, r3, r0
   3b15c:	ldr	r0, [fp, #24]
   3b160:	cmp	r0, #2
   3b164:	blt	3b208 <GetDataSlab+0x18844>
   3b168:	ldr	lr, [sp, #24]
   3b16c:	mov	r0, #0
   3b170:	ldr	r2, [r5, r0]
   3b174:	add	r2, r2, #1
   3b178:	str	r2, [r5, r0]
   3b17c:	ldr	r4, [ip, r0]
   3b180:	sdiv	r6, r2, r4
   3b184:	mls	r2, r6, r4, r2
   3b188:	cmp	r2, #0
   3b18c:	bne	3b1f8 <GetDataSlab+0x18834>
   3b190:	ldr	r2, [sp, #52]	; 0x34
   3b194:	str	r1, [r5, r0]
   3b198:	ldr	r4, [r2, r0]
   3b19c:	sdiv	r2, r3, r4
   3b1a0:	mls	r9, r2, r4, r3
   3b1a4:	cmp	r9, #0
   3b1a8:	beq	3b1c8 <GetDataSlab+0x18804>
   3b1ac:	add	r2, sp, #64	; 0x40
   3b1b0:	ldr	r6, [r8, r0]
   3b1b4:	sub	r4, r4, r9
   3b1b8:	ldr	r2, [r2, r0]
   3b1bc:	mla	r2, r6, r2, r4
   3b1c0:	add	r3, r2, r3
   3b1c4:	b	3b1e4 <GetDataSlab+0x18820>
   3b1c8:	ldr	r4, [r8, r0]
   3b1cc:	cmp	r4, #0
   3b1d0:	beq	3b1e8 <GetDataSlab+0x18824>
   3b1d4:	add	r2, sp, #64	; 0x40
   3b1d8:	ldr	r2, [r2, r0]
   3b1dc:	mla	r3, r2, r4, r3
   3b1e0:	mul	r2, r2, r4
   3b1e4:	add	r7, r7, r2, lsl #2
   3b1e8:	subs	lr, lr, #1
   3b1ec:	add	r0, r0, #4
   3b1f0:	bne	3b170 <GetDataSlab+0x187ac>
   3b1f4:	b	3b208 <GetDataSlab+0x18844>
   3b1f8:	ldr	r2, [sp, #20]
   3b1fc:	ldr	r0, [r2, r0]
   3b200:	add	r7, r7, r0, lsl #2
   3b204:	add	r3, r0, r3
   3b208:	ldr	r0, [sp, #32]
   3b20c:	ldr	r2, [sp, #56]	; 0x38
   3b210:	ldr	r4, [sp, #40]	; 0x28
   3b214:	ldr	r6, [sp, #48]	; 0x30
   3b218:	add	r2, r2, r0
   3b21c:	add	r6, r6, r4
   3b220:	mov	r0, #0
   3b224:	str	r2, [sp, #56]	; 0x38
   3b228:	ldr	r2, [sp, #44]	; 0x2c
   3b22c:	str	r6, [sp, #48]	; 0x30
   3b230:	cmp	r6, r2
   3b234:	blt	3b104 <GetDataSlab+0x18740>
   3b238:	b	24900 <GetDataSlab+0x1f3c>
   3b23c:	ldr	r0, [sp, #44]	; 0x2c
   3b240:	ldr	r1, [sp, #56]	; 0x38
   3b244:	ldr	lr, [sp, #40]	; 0x28
   3b248:	cmp	r0, #1
   3b24c:	blt	248fc <GetDataSlab+0x1f38>
   3b250:	ldr	r2, [sp, #60]	; 0x3c
   3b254:	ldr	r0, [sp, #36]	; 0x24
   3b258:	add	r3, sp, #104	; 0x68
   3b25c:	lsl	r9, ip, #2
   3b260:	str	r1, [sp, #56]	; 0x38
   3b264:	orr	sl, r3, #4
   3b268:	ldr	r4, [r2], #4
   3b26c:	mls	r0, lr, ip, r0
   3b270:	str	r2, [sp, #60]	; 0x3c
   3b274:	sub	r0, r0, r4
   3b278:	str	r4, [sp, #28]
   3b27c:	str	r0, [sp, #36]	; 0x24
   3b280:	ldr	r0, [fp, #20]
   3b284:	add	r6, r0, #4
   3b288:	add	r0, sp, #64	; 0x40
   3b28c:	orr	r0, r0, #4
   3b290:	str	r0, [sp, #52]	; 0x34
   3b294:	ldr	r0, [fp, #24]
   3b298:	sub	r0, r0, #1
   3b29c:	str	r0, [sp, #20]
   3b2a0:	sub	r0, fp, #72	; 0x48
   3b2a4:	orr	r0, r0, #4
   3b2a8:	str	r0, [sp, #16]
   3b2ac:	mla	r0, lr, ip, r4
   3b2b0:	mov	ip, r4
   3b2b4:	str	r0, [sp, #24]
   3b2b8:	lsl	r0, lr, #3
   3b2bc:	str	r0, [sp, #32]
   3b2c0:	mov	r0, #0
   3b2c4:	str	r0, [sp, #48]	; 0x30
   3b2c8:	add	r5, r8, ip, lsl #2
   3b2cc:	cmp	lr, #1
   3b2d0:	blt	3b300 <GetDataSlab+0x1893c>
   3b2d4:	ldr	r4, [sp, #56]	; 0x38
   3b2d8:	mov	r8, lr
   3b2dc:	ldr	r0, [r5], r9
   3b2e0:	bl	4b6b4 <__aeabi_f2lz>
   3b2e4:	strd	r0, [r4]
   3b2e8:	add	r4, r4, #8
   3b2ec:	subs	r8, r8, #1
   3b2f0:	bne	3b2dc <GetDataSlab+0x18918>
   3b2f4:	ldr	r0, [sp, #24]
   3b2f8:	ldr	ip, [sp, #28]
   3b2fc:	b	3b304 <GetDataSlab+0x18940>
   3b300:	mov	r0, ip
   3b304:	ldr	r1, [sp, #36]	; 0x24
   3b308:	add	r0, r0, r7
   3b30c:	add	r7, r0, r1
   3b310:	ldr	r0, [fp, #24]
   3b314:	add	r8, r5, r1, lsl #2
   3b318:	cmp	r0, #2
   3b31c:	blt	3b3c0 <GetDataSlab+0x189fc>
   3b320:	ldr	r1, [sp, #20]
   3b324:	ldr	lr, [sp, #40]	; 0x28
   3b328:	mov	r0, #0
   3b32c:	ldr	r2, [sl, r0]
   3b330:	add	r2, r2, #1
   3b334:	str	r2, [sl, r0]
   3b338:	ldr	r3, [r6, r0]
   3b33c:	sdiv	r5, r2, r3
   3b340:	mls	r2, r5, r3, r2
   3b344:	cmp	r2, #0
   3b348:	bne	3b3c8 <GetDataSlab+0x18a04>
   3b34c:	mov	r2, #0
   3b350:	str	r2, [sl, r0]
   3b354:	ldr	r2, [sp, #52]	; 0x34
   3b358:	ldr	r2, [r2, r0]
   3b35c:	sdiv	r3, r7, r2
   3b360:	mls	r3, r3, r2, r7
   3b364:	cmp	r3, #0
   3b368:	beq	3b38c <GetDataSlab+0x189c8>
   3b36c:	ldr	r4, [sp, #60]	; 0x3c
   3b370:	add	r5, sp, #64	; 0x40
   3b374:	sub	r2, r2, r3
   3b378:	ldr	r5, [r5, r0]
   3b37c:	ldr	r4, [r4, r0]
   3b380:	mla	r2, r4, r5, r2
   3b384:	add	r7, r2, r7
   3b388:	b	3b3ac <GetDataSlab+0x189e8>
   3b38c:	ldr	r2, [sp, #60]	; 0x3c
   3b390:	ldr	r2, [r2, r0]
   3b394:	cmp	r2, #0
   3b398:	beq	3b3b0 <GetDataSlab+0x189ec>
   3b39c:	add	r3, sp, #64	; 0x40
   3b3a0:	ldr	r3, [r3, r0]
   3b3a4:	mla	r7, r3, r2, r7
   3b3a8:	mul	r2, r3, r2
   3b3ac:	add	r8, r8, r2, lsl #2
   3b3b0:	subs	r1, r1, #1
   3b3b4:	add	r0, r0, #4
   3b3b8:	bne	3b32c <GetDataSlab+0x18968>
   3b3bc:	b	3b3d8 <GetDataSlab+0x18a14>
   3b3c0:	ldr	lr, [sp, #40]	; 0x28
   3b3c4:	b	3b3d8 <GetDataSlab+0x18a14>
   3b3c8:	ldr	r1, [sp, #16]
   3b3cc:	ldr	r0, [r1, r0]
   3b3d0:	add	r8, r8, r0, lsl #2
   3b3d4:	add	r7, r0, r7
   3b3d8:	ldr	r0, [sp, #32]
   3b3dc:	ldr	r1, [sp, #56]	; 0x38
   3b3e0:	ldr	r2, [sp, #48]	; 0x30
   3b3e4:	add	r1, r1, r0
   3b3e8:	add	r2, r2, lr
   3b3ec:	mov	r0, #0
   3b3f0:	str	r1, [sp, #56]	; 0x38
   3b3f4:	ldr	r1, [sp, #44]	; 0x2c
   3b3f8:	str	r2, [sp, #48]	; 0x30
   3b3fc:	cmp	r2, r1
   3b400:	blt	3b2c8 <GetDataSlab+0x18904>
   3b404:	b	24900 <GetDataSlab+0x1f3c>
   3b408:	ldr	r0, [sp, #56]	; 0x38
   3b40c:	ldr	r7, [sp, #52]	; 0x34
   3b410:	cmp	r0, #1
   3b414:	blt	248fc <GetDataSlab+0x1f38>
   3b418:	ldr	r1, [sp, #60]	; 0x3c
   3b41c:	ldr	r0, [sp, #40]	; 0x28
   3b420:	add	r2, sp, #104	; 0x68
   3b424:	lsl	r8, ip, #3
   3b428:	str	lr, [sp, #48]	; 0x30
   3b42c:	orr	sl, r2, #4
   3b430:	ldr	r3, [r1], #4
   3b434:	mls	r0, r7, ip, r0
   3b438:	str	r1, [sp, #60]	; 0x3c
   3b43c:	sub	r0, r0, r3
   3b440:	str	r3, [sp, #24]
   3b444:	str	r0, [sp, #40]	; 0x28
   3b448:	ldr	r0, [fp, #20]
   3b44c:	add	r0, r0, #4
   3b450:	str	r0, [sp, #32]
   3b454:	add	r0, sp, #64	; 0x40
   3b458:	orr	r0, r0, #4
   3b45c:	ldr	r6, [sp, #32]
   3b460:	str	r0, [sp, #36]	; 0x24
   3b464:	ldr	r0, [fp, #24]
   3b468:	sub	r0, r0, #1
   3b46c:	str	r0, [sp, #16]
   3b470:	sub	r0, fp, #72	; 0x48
   3b474:	orr	r0, r0, #4
   3b478:	str	r0, [sp, #12]
   3b47c:	mla	r0, r7, ip, r3
   3b480:	mov	ip, r3
   3b484:	str	r0, [sp, #20]
   3b488:	lsl	r0, r7, #3
   3b48c:	str	r0, [sp, #28]
   3b490:	mov	r0, #0
   3b494:	str	r0, [sp, #44]	; 0x2c
   3b498:	add	r5, r5, ip, lsl #3
   3b49c:	cmp	r7, #1
   3b4a0:	blt	3b4d4 <GetDataSlab+0x18b10>
   3b4a4:	ldr	r4, [sp, #48]	; 0x30
   3b4a8:	vldr	d16, [r5]
   3b4ac:	vmov	r0, r1, d16
   3b4b0:	bl	4b6e0 <__aeabi_d2lz>
   3b4b4:	strd	r0, [r4]
   3b4b8:	add	r5, r5, r8
   3b4bc:	add	r4, r4, #8
   3b4c0:	subs	r7, r7, #1
   3b4c4:	bne	3b4a8 <GetDataSlab+0x18ae4>
   3b4c8:	ldr	r0, [sp, #20]
   3b4cc:	ldr	ip, [sp, #24]
   3b4d0:	b	3b4d8 <GetDataSlab+0x18b14>
   3b4d4:	mov	r0, ip
   3b4d8:	ldr	r1, [sp, #40]	; 0x28
   3b4dc:	add	r0, r0, r9
   3b4e0:	ldr	lr, [sp, #36]	; 0x24
   3b4e4:	add	r9, r0, r1
   3b4e8:	ldr	r0, [fp, #24]
   3b4ec:	add	r5, r5, r1, lsl #3
   3b4f0:	cmp	r0, #2
   3b4f4:	blt	3b5a0 <GetDataSlab+0x18bdc>
   3b4f8:	ldr	r1, [sp, #16]
   3b4fc:	mov	r0, #0
   3b500:	ldr	r2, [sl, r0]
   3b504:	add	r2, r2, #1
   3b508:	str	r2, [sl, r0]
   3b50c:	ldr	r3, [r6, r0]
   3b510:	sdiv	r7, r2, r3
   3b514:	mls	r2, r7, r3, r2
   3b518:	cmp	r2, #0
   3b51c:	bne	3b590 <GetDataSlab+0x18bcc>
   3b520:	mov	r2, #0
   3b524:	str	r2, [sl, r0]
   3b528:	ldr	r2, [lr, r0]
   3b52c:	sdiv	r3, r9, r2
   3b530:	mls	r3, r3, r2, r9
   3b534:	cmp	r3, #0
   3b538:	beq	3b55c <GetDataSlab+0x18b98>
   3b53c:	ldr	r4, [sp, #60]	; 0x3c
   3b540:	add	r7, sp, #64	; 0x40
   3b544:	sub	r2, r2, r3
   3b548:	ldr	r7, [r7, r0]
   3b54c:	ldr	r4, [r4, r0]
   3b550:	mla	r2, r4, r7, r2
   3b554:	add	r9, r2, r9
   3b558:	b	3b57c <GetDataSlab+0x18bb8>
   3b55c:	ldr	r2, [sp, #60]	; 0x3c
   3b560:	ldr	r2, [r2, r0]
   3b564:	cmp	r2, #0
   3b568:	beq	3b580 <GetDataSlab+0x18bbc>
   3b56c:	add	r3, sp, #64	; 0x40
   3b570:	ldr	r3, [r3, r0]
   3b574:	mla	r9, r3, r2, r9
   3b578:	mul	r2, r3, r2
   3b57c:	add	r5, r5, r2, lsl #3
   3b580:	subs	r1, r1, #1
   3b584:	add	r0, r0, #4
   3b588:	bne	3b500 <GetDataSlab+0x18b3c>
   3b58c:	b	3b5a0 <GetDataSlab+0x18bdc>
   3b590:	ldr	r1, [sp, #12]
   3b594:	ldr	r0, [r1, r0]
   3b598:	add	r5, r5, r0, lsl #3
   3b59c:	add	r9, r0, r9
   3b5a0:	ldr	r0, [sp, #28]
   3b5a4:	ldr	r1, [sp, #48]	; 0x30
   3b5a8:	ldr	r7, [sp, #52]	; 0x34
   3b5ac:	ldr	r2, [sp, #44]	; 0x2c
   3b5b0:	add	r1, r1, r0
   3b5b4:	add	r2, r2, r7
   3b5b8:	mov	r0, #0
   3b5bc:	str	r1, [sp, #48]	; 0x30
   3b5c0:	ldr	r1, [sp, #56]	; 0x38
   3b5c4:	str	r2, [sp, #44]	; 0x2c
   3b5c8:	cmp	r2, r1
   3b5cc:	blt	3b498 <GetDataSlab+0x18ad4>
   3b5d0:	b	24900 <GetDataSlab+0x1f3c>
   3b5d4:	ldr	r0, [sp, #44]	; 0x2c
   3b5d8:	ldr	r4, [sp, #40]	; 0x28
   3b5dc:	cmp	r0, #1
   3b5e0:	blt	3b770 <GetDataSlab+0x18dac>
   3b5e4:	ldr	ip, [fp, #12]
   3b5e8:	ldr	r0, [sp, #28]
   3b5ec:	ldr	r1, [fp, #24]
   3b5f0:	ldr	r7, [sp, #56]	; 0x38
   3b5f4:	lsl	sl, r8, #3
   3b5f8:	ldr	r2, [ip], #4
   3b5fc:	mls	r0, r4, r8, r0
   3b600:	sub	r1, r1, #1
   3b604:	str	r1, [sp, #12]
   3b608:	sub	r0, r0, r2
   3b60c:	mov	r1, r2
   3b610:	sub	r2, fp, #72	; 0x48
   3b614:	str	r0, [sp, #24]
   3b618:	add	r0, sp, #104	; 0x68
   3b61c:	orr	r2, r2, #4
   3b620:	str	r1, [sp, #28]
   3b624:	orr	r6, r0, #4
   3b628:	ldr	r0, [fp, #20]
   3b62c:	str	r2, [sp, #8]
   3b630:	mla	r2, r4, r8, r1
   3b634:	str	r2, [sp, #16]
   3b638:	lsl	r2, r4, #3
   3b63c:	add	r5, r0, #4
   3b640:	add	r0, sp, #64	; 0x40
   3b644:	str	r2, [sp, #20]
   3b648:	mov	r2, #0
   3b64c:	orr	r0, r0, #4
   3b650:	str	r2, [sp, #32]
   3b654:	add	r2, r3, r1, lsl #3
   3b658:	cmp	r4, #1
   3b65c:	str	r7, [sp, #36]	; 0x24
   3b660:	blt	3b688 <GetDataSlab+0x18cc4>
   3b664:	mov	r3, r7
   3b668:	ldrd	r8, [r2]
   3b66c:	add	r2, r2, sl
   3b670:	subs	r4, r4, #1
   3b674:	strd	r8, [r3]
   3b678:	add	r3, r3, #8
   3b67c:	bne	3b668 <GetDataSlab+0x18ca4>
   3b680:	ldr	r4, [sp, #16]
   3b684:	b	3b68c <GetDataSlab+0x18cc8>
   3b688:	mov	r4, r1
   3b68c:	ldr	r1, [sp, #24]
   3b690:	add	r3, r2, r1, lsl #3
   3b694:	add	r2, r4, lr
   3b698:	add	lr, r2, r1
   3b69c:	ldr	r1, [fp, #24]
   3b6a0:	cmp	r1, #2
   3b6a4:	blt	3b748 <GetDataSlab+0x18d84>
   3b6a8:	ldr	r2, [sp, #12]
   3b6ac:	mov	r8, #0
   3b6b0:	ldr	r4, [r6, r8]
   3b6b4:	add	r4, r4, #1
   3b6b8:	str	r4, [r6, r8]
   3b6bc:	ldr	r1, [r5, r8]
   3b6c0:	sdiv	r7, r4, r1
   3b6c4:	mls	r1, r7, r1, r4
   3b6c8:	cmp	r1, #0
   3b6cc:	bne	3b738 <GetDataSlab+0x18d74>
   3b6d0:	ldr	r4, [r0, r8]
   3b6d4:	mov	r1, #0
   3b6d8:	str	r1, [r6, r8]
   3b6dc:	sdiv	r1, lr, r4
   3b6e0:	mls	r9, r1, r4, lr
   3b6e4:	cmp	r9, #0
   3b6e8:	beq	3b708 <GetDataSlab+0x18d44>
   3b6ec:	add	r1, sp, #64	; 0x40
   3b6f0:	ldr	r7, [ip, r8]
   3b6f4:	sub	r4, r4, r9
   3b6f8:	ldr	r1, [r1, r8]
   3b6fc:	mla	r1, r7, r1, r4
   3b700:	add	lr, r1, lr
   3b704:	b	3b724 <GetDataSlab+0x18d60>
   3b708:	ldr	r4, [ip, r8]
   3b70c:	cmp	r4, #0
   3b710:	beq	3b728 <GetDataSlab+0x18d64>
   3b714:	add	r1, sp, #64	; 0x40
   3b718:	ldr	r1, [r1, r8]
   3b71c:	mla	lr, r1, r4, lr
   3b720:	mul	r1, r1, r4
   3b724:	add	r3, r3, r1, lsl #3
   3b728:	subs	r2, r2, #1
   3b72c:	add	r8, r8, #4
   3b730:	bne	3b6b0 <GetDataSlab+0x18cec>
   3b734:	b	3b748 <GetDataSlab+0x18d84>
   3b738:	ldr	r1, [sp, #8]
   3b73c:	ldr	r1, [r1, r8]
   3b740:	add	r3, r3, r1, lsl #3
   3b744:	add	lr, r1, lr
   3b748:	ldr	r1, [sp, #20]
   3b74c:	ldr	r7, [sp, #36]	; 0x24
   3b750:	ldr	r4, [sp, #40]	; 0x28
   3b754:	ldr	r2, [sp, #32]
   3b758:	add	r7, r7, r1
   3b75c:	ldr	r1, [sp, #44]	; 0x2c
   3b760:	add	r2, r2, r4
   3b764:	cmp	r2, r1
   3b768:	ldr	r1, [sp, #28]
   3b76c:	blt	3b650 <GetDataSlab+0x18c8c>
   3b770:	mov	r0, #0
   3b774:	ldr	r1, [sp, #52]	; 0x34
   3b778:	cmp	r1, #13
   3b77c:	bne	24900 <GetDataSlab+0x1f3c>
   3b780:	ldr	r0, [fp, #16]
   3b784:	ldr	r4, [fp, #8]
   3b788:	ldr	sl, [fp, #20]
   3b78c:	ldr	ip, [fp, #12]
   3b790:	mov	r2, #0
   3b794:	add	r8, sp, #64	; 0x40
   3b798:	sub	lr, fp, #72	; 0x48
   3b79c:	ldr	r0, [r0]
   3b7a0:	str	r0, [sp, #16]
   3b7a4:	sub	r0, r0, #1
   3b7a8:	str	r0, [fp, #-72]	; 0xffffffb8
   3b7ac:	ldr	r0, [r4]
   3b7b0:	str	r0, [sp, #64]	; 0x40
   3b7b4:	str	r0, [sp, #40]	; 0x28
   3b7b8:	ldr	r0, [fp, #24]
   3b7bc:	ldr	r1, [sl]
   3b7c0:	cmp	r0, #2
   3b7c4:	str	r1, [sp, #44]	; 0x2c
   3b7c8:	str	r1, [sp, #52]	; 0x34
   3b7cc:	blt	3b868 <GetDataSlab+0x18ea4>
   3b7d0:	ldr	r6, [sp, #40]	; 0x28
   3b7d4:	ldr	r0, [sp, #44]	; 0x2c
   3b7d8:	mov	r1, #1
   3b7dc:	mov	r2, #0
   3b7e0:	mov	r7, r4
   3b7e4:	mov	r5, r6
   3b7e8:	str	r0, [sp, #52]	; 0x34
   3b7ec:	ldr	r0, [fp, #16]
   3b7f0:	ldr	r0, [r0, r1, lsl #2]
   3b7f4:	str	r6, [r8, r1, lsl #2]
   3b7f8:	sub	r3, r0, #1
   3b7fc:	str	r3, [lr, r1, lsl #2]
   3b800:	ldr	r9, [r4, r1, lsl #2]
   3b804:	mov	r4, #0
   3b808:	mov	r0, r9
   3b80c:	mul	r6, r0, r6
   3b810:	ldr	r0, [r7, -r4, lsl #2]
   3b814:	add	r4, r4, #1
   3b818:	cmp	r1, r4
   3b81c:	mul	r3, r3, r0
   3b820:	bne	3b80c <GetDataSlab+0x18e48>
   3b824:	sub	lr, fp, #72	; 0x48
   3b828:	str	r6, [r8, r1, lsl #2]
   3b82c:	ldr	r4, [fp, #8]
   3b830:	add	r7, r7, #4
   3b834:	str	r3, [lr, r1, lsl #2]
   3b838:	ldr	r3, [sp, #52]	; 0x34
   3b83c:	ldr	r0, [ip, r1, lsl #2]
   3b840:	mla	r2, r0, r5, r2
   3b844:	ldr	r0, [sl, r1, lsl #2]
   3b848:	add	r1, r1, #1
   3b84c:	mov	r5, r6
   3b850:	mov	r6, r9
   3b854:	mul	r3, r0, r3
   3b858:	ldr	r0, [fp, #24]
   3b85c:	str	r3, [sp, #52]	; 0x34
   3b860:	cmp	r1, r0
   3b864:	bne	3b7ec <GetDataSlab+0x18e28>
   3b868:	ldr	r0, [sp, #48]	; 0x30
   3b86c:	ldr	r4, [sp, #16]
   3b870:	add	r7, r0, r2, lsl #3
   3b874:	cmp	r4, #1
   3b878:	bne	3d7b0 <GetDataSlab+0x1adec>
   3b87c:	ldr	r0, [sp, #52]	; 0x34
   3b880:	cmp	r0, #1
   3b884:	blt	248fc <GetDataSlab+0x1f38>
   3b888:	mov	r0, r8
   3b88c:	add	r1, sp, #104	; 0x68
   3b890:	ldr	r6, [sp, #56]	; 0x38
   3b894:	add	r9, sl, #4
   3b898:	orr	lr, r0, #4
   3b89c:	ldr	r0, [fp, #24]
   3b8a0:	orr	r8, r1, #4
   3b8a4:	ldr	r1, [sp, #44]	; 0x2c
   3b8a8:	sub	r0, r0, #1
   3b8ac:	str	r0, [sp, #32]
   3b8b0:	sub	r0, fp, #72	; 0x48
   3b8b4:	orr	r0, r0, #4
   3b8b8:	str	r0, [sp, #28]
   3b8bc:	lsl	r0, r1, #3
   3b8c0:	str	r0, [sp, #48]	; 0x30
   3b8c4:	ldr	r0, [ip], #4
   3b8c8:	str	r0, [sp, #36]	; 0x24
   3b8cc:	mov	r0, #0
   3b8d0:	str	r0, [sp, #60]	; 0x3c
   3b8d4:	cmp	r1, #1
   3b8d8:	blt	3b904 <GetDataSlab+0x18f40>
   3b8dc:	ldr	r0, [sp, #36]	; 0x24
   3b8e0:	ldr	r4, [sp, #44]	; 0x2c
   3b8e4:	mov	r3, r6
   3b8e8:	add	r5, r7, r0, lsl #3
   3b8ec:	ldrd	r0, [r5]
   3b8f0:	add	r5, r5, #8
   3b8f4:	subs	r4, r4, #1
   3b8f8:	strd	r0, [r3]
   3b8fc:	add	r3, r3, #8
   3b900:	bne	3b8ec <GetDataSlab+0x18f28>
   3b904:	ldr	r0, [sp, #40]	; 0x28
   3b908:	str	r6, [sp, #56]	; 0x38
   3b90c:	add	r7, r7, r0, lsl #3
   3b910:	add	r2, r2, r0
   3b914:	ldr	r0, [fp, #24]
   3b918:	cmp	r0, #2
   3b91c:	blt	3b9c0 <GetDataSlab+0x18ffc>
   3b920:	ldr	sl, [sp, #32]
   3b924:	mov	r0, #0
   3b928:	ldr	r1, [r8, r0]
   3b92c:	add	r1, r1, #1
   3b930:	str	r1, [r8, r0]
   3b934:	ldr	r3, [r9, r0]
   3b938:	sdiv	r4, r1, r3
   3b93c:	mls	r1, r4, r3, r1
   3b940:	cmp	r1, #0
   3b944:	bne	3b9b0 <GetDataSlab+0x18fec>
   3b948:	ldr	r3, [lr, r0]
   3b94c:	mov	r1, #0
   3b950:	str	r1, [r8, r0]
   3b954:	sdiv	r1, r2, r3
   3b958:	mls	r4, r1, r3, r2
   3b95c:	cmp	r4, #0
   3b960:	beq	3b980 <GetDataSlab+0x18fbc>
   3b964:	add	r1, sp, #64	; 0x40
   3b968:	ldr	r5, [ip, r0]
   3b96c:	sub	r3, r3, r4
   3b970:	ldr	r1, [r1, r0]
   3b974:	mla	r1, r5, r1, r3
   3b978:	add	r2, r1, r2
   3b97c:	b	3b99c <GetDataSlab+0x18fd8>
   3b980:	ldr	r3, [ip, r0]
   3b984:	cmp	r3, #0
   3b988:	beq	3b9a0 <GetDataSlab+0x18fdc>
   3b98c:	add	r1, sp, #64	; 0x40
   3b990:	ldr	r1, [r1, r0]
   3b994:	mla	r2, r1, r3, r2
   3b998:	mul	r1, r1, r3
   3b99c:	add	r7, r7, r1, lsl #3
   3b9a0:	subs	sl, sl, #1
   3b9a4:	add	r0, r0, #4
   3b9a8:	bne	3b928 <GetDataSlab+0x18f64>
   3b9ac:	b	3b9c0 <GetDataSlab+0x18ffc>
   3b9b0:	ldr	r1, [sp, #28]
   3b9b4:	ldr	r0, [r1, r0]
   3b9b8:	add	r7, r7, r0, lsl #3
   3b9bc:	add	r2, r0, r2
   3b9c0:	ldr	r1, [sp, #44]	; 0x2c
   3b9c4:	ldr	r4, [sp, #60]	; 0x3c
   3b9c8:	ldr	r0, [sp, #48]	; 0x30
   3b9cc:	ldr	r6, [sp, #56]	; 0x38
   3b9d0:	ldr	r3, [sp, #52]	; 0x34
   3b9d4:	add	r4, r4, r1
   3b9d8:	add	r6, r6, r0
   3b9dc:	mov	r0, #0
   3b9e0:	cmp	r4, r3
   3b9e4:	str	r4, [sp, #60]	; 0x3c
   3b9e8:	blt	3b8d4 <GetDataSlab+0x18f10>
   3b9ec:	b	24900 <GetDataSlab+0x1f3c>
   3b9f0:	ldr	r0, [sp, #44]	; 0x2c
   3b9f4:	ldr	r2, [sp, #40]	; 0x28
   3b9f8:	cmp	r0, #1
   3b9fc:	blt	248fc <GetDataSlab+0x1f38>
   3ba00:	ldr	r0, [sp, #36]	; 0x24
   3ba04:	mov	r9, #0
   3ba08:	mov	sl, #0
   3ba0c:	mls	r0, r2, r1, r0
   3ba10:	str	r0, [sp, #32]
   3ba14:	mul	r0, r2, r1
   3ba18:	mov	r1, lr
   3ba1c:	str	r1, [sp, #48]	; 0x30
   3ba20:	str	r0, [sp, #24]
   3ba24:	add	r0, sp, #104	; 0x68
   3ba28:	orr	r6, r0, #4
   3ba2c:	ldr	r0, [fp, #20]
   3ba30:	add	lr, r0, #4
   3ba34:	add	r0, sp, #64	; 0x40
   3ba38:	orr	r0, r0, #4
   3ba3c:	str	r0, [sp, #56]	; 0x38
   3ba40:	ldr	r0, [fp, #12]
   3ba44:	add	r0, r0, #4
   3ba48:	str	r0, [sp, #52]	; 0x34
   3ba4c:	ldr	r0, [fp, #24]
   3ba50:	sub	r0, r0, #1
   3ba54:	str	r0, [sp, #20]
   3ba58:	sub	r0, fp, #72	; 0x48
   3ba5c:	orr	r0, r0, #4
   3ba60:	str	r0, [sp, #16]
   3ba64:	lsl	r0, r2, #3
   3ba68:	str	r0, [sp, #36]	; 0x24
   3ba6c:	ldr	r0, [fp, #12]
   3ba70:	cmp	r2, #1
   3ba74:	ldr	r0, [r0]
   3ba78:	add	r7, r7, r0
   3ba7c:	blt	3bab0 <GetDataSlab+0x190ec>
   3ba80:	ldr	r1, [sp, #24]
   3ba84:	ldr	r5, [sp, #48]	; 0x30
   3ba88:	add	r8, r1, r3
   3ba8c:	ldr	r1, [sp, #28]
   3ba90:	mov	r3, r2
   3ba94:	ldrb	r4, [r7], r1
   3ba98:	subs	r3, r3, #1
   3ba9c:	stm	r5, {r4, r9}
   3baa0:	add	r5, r5, #8
   3baa4:	bne	3ba94 <GetDataSlab+0x190d0>
   3baa8:	add	r3, r8, r0
   3baac:	b	3bab4 <GetDataSlab+0x190f0>
   3bab0:	add	r3, r0, r3
   3bab4:	ldr	r1, [sp, #32]
   3bab8:	sub	r0, r1, r0
   3babc:	add	r7, r7, r0
   3bac0:	add	r3, r3, r0
   3bac4:	ldr	r0, [fp, #24]
   3bac8:	cmp	r0, #2
   3bacc:	blt	3bb78 <GetDataSlab+0x191b4>
   3bad0:	ldr	r8, [sp, #20]
   3bad4:	mov	r0, #0
   3bad8:	ldr	r4, [r6, r0]
   3badc:	add	r4, r4, #1
   3bae0:	str	r4, [r6, r0]
   3bae4:	ldr	r5, [lr, r0]
   3bae8:	sdiv	ip, r4, r5
   3baec:	mls	r5, ip, r5, r4
   3baf0:	cmp	r5, #0
   3baf4:	bne	3bb68 <GetDataSlab+0x191a4>
   3baf8:	ldr	r1, [sp, #56]	; 0x38
   3bafc:	str	r9, [r6, r0]
   3bb00:	ldr	r5, [r1, r0]
   3bb04:	sdiv	r4, r3, r5
   3bb08:	mls	r4, r4, r5, r3
   3bb0c:	cmp	r4, #0
   3bb10:	beq	3bb38 <GetDataSlab+0x19174>
   3bb14:	add	r1, sp, #64	; 0x40
   3bb18:	sub	r5, r5, r4
   3bb1c:	ldr	r2, [r1, r0]
   3bb20:	ldr	r1, [sp, #52]	; 0x34
   3bb24:	ldr	r1, [r1, r0]
   3bb28:	mla	r1, r1, r2, r5
   3bb2c:	add	r3, r1, r3
   3bb30:	add	r7, r7, r1
   3bb34:	b	3bb58 <GetDataSlab+0x19194>
   3bb38:	ldr	r1, [sp, #52]	; 0x34
   3bb3c:	ldr	r4, [r1, r0]
   3bb40:	cmp	r4, #0
   3bb44:	beq	3bb58 <GetDataSlab+0x19194>
   3bb48:	add	r1, sp, #64	; 0x40
   3bb4c:	ldr	r1, [r1, r0]
   3bb50:	mla	r3, r1, r4, r3
   3bb54:	mla	r7, r1, r4, r7
   3bb58:	subs	r8, r8, #1
   3bb5c:	add	r0, r0, #4
   3bb60:	bne	3bad8 <GetDataSlab+0x19114>
   3bb64:	b	3bb78 <GetDataSlab+0x191b4>
   3bb68:	ldr	r1, [sp, #16]
   3bb6c:	ldr	r0, [r1, r0]
   3bb70:	add	r7, r7, r0
   3bb74:	add	r3, r0, r3
   3bb78:	ldr	r0, [sp, #36]	; 0x24
   3bb7c:	ldr	r1, [sp, #48]	; 0x30
   3bb80:	ldr	r2, [sp, #40]	; 0x28
   3bb84:	mov	r5, sl
   3bb88:	add	r1, r1, r0
   3bb8c:	add	r5, sl, r2
   3bb90:	mov	r0, #0
   3bb94:	str	r1, [sp, #48]	; 0x30
   3bb98:	ldr	r1, [sp, #44]	; 0x2c
   3bb9c:	mov	sl, r5
   3bba0:	cmp	r5, r1
   3bba4:	blt	3ba6c <GetDataSlab+0x190a8>
   3bba8:	b	24900 <GetDataSlab+0x1f3c>
   3bbac:	ldr	r0, [sp, #52]	; 0x34
   3bbb0:	ldr	r2, [sp, #44]	; 0x2c
   3bbb4:	cmp	r0, #1
   3bbb8:	blt	248fc <GetDataSlab+0x1f38>
   3bbbc:	ldr	r0, [sp, #40]	; 0x28
   3bbc0:	ldr	r3, [ip], #4
   3bbc4:	lsl	sl, lr, #1
   3bbc8:	mls	r0, r2, lr, r0
   3bbcc:	str	r3, [sp, #48]	; 0x30
   3bbd0:	sub	r0, r0, r3
   3bbd4:	str	r0, [sp, #40]	; 0x28
   3bbd8:	add	r0, sp, #104	; 0x68
   3bbdc:	orr	r6, r0, #4
   3bbe0:	ldr	r0, [fp, #20]
   3bbe4:	add	r5, r0, #4
   3bbe8:	add	r0, sp, #64	; 0x40
   3bbec:	orr	r1, r0, #4
   3bbf0:	ldr	r0, [fp, #24]
   3bbf4:	sub	r0, r0, #1
   3bbf8:	str	r0, [sp, #28]
   3bbfc:	sub	r0, fp, #72	; 0x48
   3bc00:	orr	r0, r0, #4
   3bc04:	str	r0, [sp, #24]
   3bc08:	mla	r0, r2, lr, r3
   3bc0c:	str	r0, [sp, #32]
   3bc10:	lsl	r0, r2, #3
   3bc14:	str	r0, [sp, #36]	; 0x24
   3bc18:	ldr	r0, [sp, #56]	; 0x38
   3bc1c:	str	r0, [sp, #60]	; 0x3c
   3bc20:	mov	r0, #0
   3bc24:	str	r0, [sp, #56]	; 0x38
   3bc28:	ldr	r3, [sp, #48]	; 0x30
   3bc2c:	cmp	r2, #1
   3bc30:	add	r0, r7, r3, lsl #1
   3bc34:	blt	3bc5c <GetDataSlab+0x19298>
   3bc38:	ldr	r3, [sp, #60]	; 0x3c
   3bc3c:	mov	r7, r2
   3bc40:	ldrsh	r2, [r0], sl
   3bc44:	subs	r7, r7, #1
   3bc48:	asr	r9, r2, #31
   3bc4c:	stm	r3, {r2, r9}
   3bc50:	add	r3, r3, #8
   3bc54:	bne	3bc40 <GetDataSlab+0x1927c>
   3bc58:	ldr	r3, [sp, #32]
   3bc5c:	ldr	r2, [sp, #40]	; 0x28
   3bc60:	add	r7, r0, r2, lsl #1
   3bc64:	add	r0, r3, r8
   3bc68:	add	r8, r0, r2
   3bc6c:	ldr	r0, [fp, #24]
   3bc70:	cmp	r0, #2
   3bc74:	blt	3bd18 <GetDataSlab+0x19354>
   3bc78:	ldr	lr, [sp, #28]
   3bc7c:	mov	r0, #0
   3bc80:	ldr	r2, [r6, r0]
   3bc84:	add	r2, r2, #1
   3bc88:	str	r2, [r6, r0]
   3bc8c:	ldr	r3, [r5, r0]
   3bc90:	sdiv	r4, r2, r3
   3bc94:	mls	r2, r4, r3, r2
   3bc98:	cmp	r2, #0
   3bc9c:	bne	3bd08 <GetDataSlab+0x19344>
   3bca0:	ldr	r3, [r1, r0]
   3bca4:	mov	r2, #0
   3bca8:	str	r2, [r6, r0]
   3bcac:	sdiv	r2, r8, r3
   3bcb0:	mls	r9, r2, r3, r8
   3bcb4:	cmp	r9, #0
   3bcb8:	beq	3bcd8 <GetDataSlab+0x19314>
   3bcbc:	add	r2, sp, #64	; 0x40
   3bcc0:	ldr	r4, [ip, r0]
   3bcc4:	sub	r3, r3, r9
   3bcc8:	ldr	r2, [r2, r0]
   3bccc:	mla	r2, r4, r2, r3
   3bcd0:	add	r8, r2, r8
   3bcd4:	b	3bcf4 <GetDataSlab+0x19330>
   3bcd8:	ldr	r3, [ip, r0]
   3bcdc:	cmp	r3, #0
   3bce0:	beq	3bcf8 <GetDataSlab+0x19334>
   3bce4:	add	r2, sp, #64	; 0x40
   3bce8:	ldr	r2, [r2, r0]
   3bcec:	mla	r8, r2, r3, r8
   3bcf0:	mul	r2, r2, r3
   3bcf4:	add	r7, r7, r2, lsl #1
   3bcf8:	subs	lr, lr, #1
   3bcfc:	add	r0, r0, #4
   3bd00:	bne	3bc80 <GetDataSlab+0x192bc>
   3bd04:	b	3bd18 <GetDataSlab+0x19354>
   3bd08:	ldr	r2, [sp, #24]
   3bd0c:	ldr	r0, [r2, r0]
   3bd10:	add	r7, r7, r0, lsl #1
   3bd14:	add	r8, r0, r8
   3bd18:	ldr	r0, [sp, #36]	; 0x24
   3bd1c:	ldr	r2, [sp, #60]	; 0x3c
   3bd20:	ldr	r4, [sp, #56]	; 0x38
   3bd24:	ldr	r3, [sp, #52]	; 0x34
   3bd28:	add	r2, r2, r0
   3bd2c:	mov	r0, #0
   3bd30:	str	r2, [sp, #60]	; 0x3c
   3bd34:	ldr	r2, [sp, #44]	; 0x2c
   3bd38:	add	r4, r4, r2
   3bd3c:	cmp	r4, r3
   3bd40:	str	r4, [sp, #56]	; 0x38
   3bd44:	blt	3bc28 <GetDataSlab+0x19264>
   3bd48:	b	24900 <GetDataSlab+0x1f3c>
   3bd4c:	ldr	r4, [sp, #56]	; 0x38
   3bd50:	cmp	r6, #1
   3bd54:	blt	248fc <GetDataSlab+0x1f38>
   3bd58:	ldr	r1, [sp, #60]	; 0x3c
   3bd5c:	ldr	r0, [sp, #40]	; 0x28
   3bd60:	str	r6, [sp, #48]	; 0x30
   3bd64:	mov	r9, #0
   3bd68:	ldr	r3, [r1], #4
   3bd6c:	mls	r0, r4, sl, r0
   3bd70:	str	r1, [sp, #60]	; 0x3c
   3bd74:	mov	r1, lr
   3bd78:	str	r1, [sp, #52]	; 0x34
   3bd7c:	sub	r0, r0, r3
   3bd80:	str	r3, [sp, #40]	; 0x28
   3bd84:	str	r0, [sp, #36]	; 0x24
   3bd88:	add	r0, sp, #104	; 0x68
   3bd8c:	orr	r6, r0, #4
   3bd90:	ldr	r0, [fp, #20]
   3bd94:	add	lr, r0, #4
   3bd98:	add	r0, sp, #64	; 0x40
   3bd9c:	orr	ip, r0, #4
   3bda0:	ldr	r0, [fp, #24]
   3bda4:	sub	r0, r0, #1
   3bda8:	str	r0, [sp, #24]
   3bdac:	sub	r0, fp, #72	; 0x48
   3bdb0:	orr	r0, r0, #4
   3bdb4:	str	r0, [sp, #20]
   3bdb8:	mla	r0, r4, sl, r3
   3bdbc:	lsl	sl, sl, #1
   3bdc0:	str	r0, [sp, #28]
   3bdc4:	lsl	r0, r4, #3
   3bdc8:	str	r0, [sp, #32]
   3bdcc:	mov	r0, #0
   3bdd0:	str	r0, [sp, #44]	; 0x2c
   3bdd4:	ldr	r3, [sp, #40]	; 0x28
   3bdd8:	cmp	r4, #1
   3bddc:	add	r0, r7, r3, lsl #1
   3bde0:	blt	3be04 <GetDataSlab+0x19440>
   3bde4:	ldr	r3, [sp, #52]	; 0x34
   3bde8:	mov	r7, r4
   3bdec:	ldrh	r4, [r0], sl
   3bdf0:	subs	r7, r7, #1
   3bdf4:	stm	r3, {r4, r9}
   3bdf8:	add	r3, r3, #8
   3bdfc:	bne	3bdec <GetDataSlab+0x19428>
   3be00:	ldr	r3, [sp, #28]
   3be04:	ldr	r1, [sp, #36]	; 0x24
   3be08:	add	r7, r0, r1, lsl #1
   3be0c:	add	r0, r3, r2
   3be10:	add	r2, r0, r1
   3be14:	ldr	r0, [fp, #24]
   3be18:	cmp	r0, #2
   3be1c:	blt	3bec4 <GetDataSlab+0x19500>
   3be20:	ldr	r3, [sp, #24]
   3be24:	mov	r0, #0
   3be28:	ldr	r4, [r6, r0]
   3be2c:	add	r4, r4, #1
   3be30:	str	r4, [r6, r0]
   3be34:	ldr	r5, [lr, r0]
   3be38:	sdiv	r1, r4, r5
   3be3c:	mls	r1, r1, r5, r4
   3be40:	cmp	r1, #0
   3be44:	bne	3beb4 <GetDataSlab+0x194f0>
   3be48:	ldr	r4, [ip, r0]
   3be4c:	str	r9, [r6, r0]
   3be50:	sdiv	r1, r2, r4
   3be54:	mls	r8, r1, r4, r2
   3be58:	cmp	r8, #0
   3be5c:	beq	3be80 <GetDataSlab+0x194bc>
   3be60:	ldr	r5, [sp, #60]	; 0x3c
   3be64:	add	r1, sp, #64	; 0x40
   3be68:	sub	r4, r4, r8
   3be6c:	ldr	r1, [r1, r0]
   3be70:	ldr	r5, [r5, r0]
   3be74:	mla	r1, r5, r1, r4
   3be78:	add	r2, r1, r2
   3be7c:	b	3bea0 <GetDataSlab+0x194dc>
   3be80:	ldr	r1, [sp, #60]	; 0x3c
   3be84:	ldr	r4, [r1, r0]
   3be88:	cmp	r4, #0
   3be8c:	beq	3bea4 <GetDataSlab+0x194e0>
   3be90:	add	r1, sp, #64	; 0x40
   3be94:	ldr	r1, [r1, r0]
   3be98:	mla	r2, r1, r4, r2
   3be9c:	mul	r1, r1, r4
   3bea0:	add	r7, r7, r1, lsl #1
   3bea4:	subs	r3, r3, #1
   3bea8:	add	r0, r0, #4
   3beac:	bne	3be28 <GetDataSlab+0x19464>
   3beb0:	b	3bec4 <GetDataSlab+0x19500>
   3beb4:	ldr	r1, [sp, #20]
   3beb8:	ldr	r0, [r1, r0]
   3bebc:	add	r7, r7, r0, lsl #1
   3bec0:	add	r2, r0, r2
   3bec4:	ldr	r0, [sp, #32]
   3bec8:	ldr	r1, [sp, #52]	; 0x34
   3becc:	ldr	r4, [sp, #56]	; 0x38
   3bed0:	ldr	r3, [sp, #44]	; 0x2c
   3bed4:	add	r1, r1, r0
   3bed8:	add	r3, r3, r4
   3bedc:	mov	r0, #0
   3bee0:	str	r1, [sp, #52]	; 0x34
   3bee4:	ldr	r1, [sp, #48]	; 0x30
   3bee8:	str	r3, [sp, #44]	; 0x2c
   3beec:	cmp	r3, r1
   3bef0:	blt	3bdd4 <GetDataSlab+0x19410>
   3bef4:	b	24900 <GetDataSlab+0x1f3c>
   3bef8:	ldr	r0, [sp, #52]	; 0x34
   3befc:	ldr	r3, [sp, #44]	; 0x2c
   3bf00:	cmp	r0, #1
   3bf04:	blt	248fc <GetDataSlab+0x1f38>
   3bf08:	ldr	r0, [sp, #40]	; 0x28
   3bf0c:	mov	r1, ip
   3bf10:	lsl	sl, r9, #2
   3bf14:	add	r2, r1, #4
   3bf18:	mls	r0, r3, r9, r0
   3bf1c:	str	r0, [sp, #40]	; 0x28
   3bf20:	add	r0, sp, #104	; 0x68
   3bf24:	orr	r5, r0, #4
   3bf28:	ldr	r0, [fp, #20]
   3bf2c:	add	r6, r0, #4
   3bf30:	add	r0, sp, #64	; 0x40
   3bf34:	orr	ip, r0, #4
   3bf38:	ldr	r0, [fp, #24]
   3bf3c:	sub	r0, r0, #1
   3bf40:	str	r0, [sp, #28]
   3bf44:	sub	r0, fp, #72	; 0x48
   3bf48:	orr	r0, r0, #4
   3bf4c:	str	r0, [sp, #24]
   3bf50:	mul	r0, r3, r9
   3bf54:	str	r0, [sp, #32]
   3bf58:	lsl	r0, r3, #3
   3bf5c:	str	r0, [sp, #36]	; 0x24
   3bf60:	mov	r0, #0
   3bf64:	str	r0, [sp, #48]	; 0x30
   3bf68:	ldr	r0, [fp, #12]
   3bf6c:	cmp	r3, #1
   3bf70:	ldr	r0, [r0]
   3bf74:	add	r7, r7, r0, lsl #2
   3bf78:	blt	3bfa8 <GetDataSlab+0x195e4>
   3bf7c:	ldr	r1, [sp, #32]
   3bf80:	ldr	r4, [sp, #56]	; 0x38
   3bf84:	add	lr, r1, r8
   3bf88:	ldr	r8, [r7], sl
   3bf8c:	subs	r3, r3, #1
   3bf90:	asr	r9, r8, #31
   3bf94:	strd	r8, [r4]
   3bf98:	add	r4, r4, #8
   3bf9c:	bne	3bf88 <GetDataSlab+0x195c4>
   3bfa0:	add	r3, lr, r0
   3bfa4:	b	3bfac <GetDataSlab+0x195e8>
   3bfa8:	add	r3, r0, r8
   3bfac:	ldr	r1, [sp, #40]	; 0x28
   3bfb0:	sub	r0, r1, r0
   3bfb4:	add	r7, r7, r0, lsl #2
   3bfb8:	add	r8, r3, r0
   3bfbc:	ldr	r0, [fp, #24]
   3bfc0:	cmp	r0, #2
   3bfc4:	blt	3c068 <GetDataSlab+0x196a4>
   3bfc8:	ldr	lr, [sp, #28]
   3bfcc:	mov	r0, #0
   3bfd0:	ldr	r3, [r5, r0]
   3bfd4:	add	r3, r3, #1
   3bfd8:	str	r3, [r5, r0]
   3bfdc:	ldr	r4, [r6, r0]
   3bfe0:	sdiv	r1, r3, r4
   3bfe4:	mls	r1, r1, r4, r3
   3bfe8:	cmp	r1, #0
   3bfec:	bne	3c058 <GetDataSlab+0x19694>
   3bff0:	ldr	r4, [ip, r0]
   3bff4:	mov	r1, #0
   3bff8:	str	r1, [r5, r0]
   3bffc:	sdiv	r1, r8, r4
   3c000:	mls	r9, r1, r4, r8
   3c004:	cmp	r9, #0
   3c008:	beq	3c028 <GetDataSlab+0x19664>
   3c00c:	add	r1, sp, #64	; 0x40
   3c010:	ldr	r3, [r2, r0]
   3c014:	sub	r4, r4, r9
   3c018:	ldr	r1, [r1, r0]
   3c01c:	mla	r1, r3, r1, r4
   3c020:	add	r8, r1, r8
   3c024:	b	3c044 <GetDataSlab+0x19680>
   3c028:	ldr	r4, [r2, r0]
   3c02c:	cmp	r4, #0
   3c030:	beq	3c048 <GetDataSlab+0x19684>
   3c034:	add	r1, sp, #64	; 0x40
   3c038:	ldr	r1, [r1, r0]
   3c03c:	mla	r8, r1, r4, r8
   3c040:	mul	r1, r1, r4
   3c044:	add	r7, r7, r1, lsl #2
   3c048:	subs	lr, lr, #1
   3c04c:	add	r0, r0, #4
   3c050:	bne	3bfd0 <GetDataSlab+0x1960c>
   3c054:	b	3c068 <GetDataSlab+0x196a4>
   3c058:	ldr	r1, [sp, #24]
   3c05c:	ldr	r0, [r1, r0]
   3c060:	add	r7, r7, r0, lsl #2
   3c064:	add	r8, r0, r8
   3c068:	ldr	r0, [sp, #36]	; 0x24
   3c06c:	ldr	r1, [sp, #56]	; 0x38
   3c070:	ldr	r3, [sp, #44]	; 0x2c
   3c074:	ldr	r4, [sp, #48]	; 0x30
   3c078:	add	r1, r1, r0
   3c07c:	add	r4, r4, r3
   3c080:	mov	r0, #0
   3c084:	str	r1, [sp, #56]	; 0x38
   3c088:	ldr	r1, [sp, #52]	; 0x34
   3c08c:	str	r4, [sp, #48]	; 0x30
   3c090:	cmp	r4, r1
   3c094:	blt	3bf68 <GetDataSlab+0x195a4>
   3c098:	b	24900 <GetDataSlab+0x1f3c>
   3c09c:	ldr	r0, [sp, #44]	; 0x2c
   3c0a0:	ldr	r4, [sp, #40]	; 0x28
   3c0a4:	cmp	r0, #1
   3c0a8:	blt	248fc <GetDataSlab+0x1f38>
   3c0ac:	ldr	r0, [sp, #36]	; 0x24
   3c0b0:	lsl	sl, lr, #2
   3c0b4:	mov	r1, #0
   3c0b8:	mls	r0, r4, lr, r0
   3c0bc:	str	r0, [sp, #36]	; 0x24
   3c0c0:	add	r0, sp, #104	; 0x68
   3c0c4:	orr	r5, r0, #4
   3c0c8:	ldr	r0, [fp, #20]
   3c0cc:	add	ip, r0, #4
   3c0d0:	add	r0, sp, #64	; 0x40
   3c0d4:	orr	r0, r0, #4
   3c0d8:	str	r0, [sp, #52]	; 0x34
   3c0dc:	ldr	r0, [fp, #12]
   3c0e0:	add	r8, r0, #4
   3c0e4:	ldr	r0, [fp, #24]
   3c0e8:	sub	r0, r0, #1
   3c0ec:	str	r0, [sp, #24]
   3c0f0:	sub	r0, fp, #72	; 0x48
   3c0f4:	orr	r0, r0, #4
   3c0f8:	str	r0, [sp, #20]
   3c0fc:	mul	r0, r4, lr
   3c100:	str	r0, [sp, #28]
   3c104:	lsl	r0, r4, #3
   3c108:	str	r0, [sp, #32]
   3c10c:	mov	r0, #0
   3c110:	str	r0, [sp, #48]	; 0x30
   3c114:	ldr	r0, [fp, #12]
   3c118:	cmp	r4, #1
   3c11c:	ldr	r2, [r0]
   3c120:	add	r7, r7, r2, lsl #2
   3c124:	blt	3c158 <GetDataSlab+0x19794>
   3c128:	ldr	r6, [sp, #28]
   3c12c:	mov	r0, r4
   3c130:	ldr	r4, [sp, #56]	; 0x38
   3c134:	add	lr, r6, r3
   3c138:	mov	r3, r0
   3c13c:	ldr	r0, [r7], sl
   3c140:	subs	r3, r3, #1
   3c144:	strd	r0, [r4]
   3c148:	add	r4, r4, #8
   3c14c:	bne	3c13c <GetDataSlab+0x19778>
   3c150:	add	r3, lr, r2
   3c154:	b	3c15c <GetDataSlab+0x19798>
   3c158:	add	r3, r2, r3
   3c15c:	ldr	r0, [sp, #36]	; 0x24
   3c160:	sub	r0, r0, r2
   3c164:	add	r7, r7, r0, lsl #2
   3c168:	add	r3, r3, r0
   3c16c:	ldr	r0, [fp, #24]
   3c170:	cmp	r0, #2
   3c174:	blt	3c218 <GetDataSlab+0x19854>
   3c178:	ldr	lr, [sp, #24]
   3c17c:	mov	r0, #0
   3c180:	ldr	r2, [r5, r0]
   3c184:	add	r2, r2, #1
   3c188:	str	r2, [r5, r0]
   3c18c:	ldr	r4, [ip, r0]
   3c190:	sdiv	r6, r2, r4
   3c194:	mls	r2, r6, r4, r2
   3c198:	cmp	r2, #0
   3c19c:	bne	3c208 <GetDataSlab+0x19844>
   3c1a0:	ldr	r2, [sp, #52]	; 0x34
   3c1a4:	str	r1, [r5, r0]
   3c1a8:	ldr	r4, [r2, r0]
   3c1ac:	sdiv	r2, r3, r4
   3c1b0:	mls	r9, r2, r4, r3
   3c1b4:	cmp	r9, #0
   3c1b8:	beq	3c1d8 <GetDataSlab+0x19814>
   3c1bc:	add	r2, sp, #64	; 0x40
   3c1c0:	ldr	r6, [r8, r0]
   3c1c4:	sub	r4, r4, r9
   3c1c8:	ldr	r2, [r2, r0]
   3c1cc:	mla	r2, r6, r2, r4
   3c1d0:	add	r3, r2, r3
   3c1d4:	b	3c1f4 <GetDataSlab+0x19830>
   3c1d8:	ldr	r4, [r8, r0]
   3c1dc:	cmp	r4, #0
   3c1e0:	beq	3c1f8 <GetDataSlab+0x19834>
   3c1e4:	add	r2, sp, #64	; 0x40
   3c1e8:	ldr	r2, [r2, r0]
   3c1ec:	mla	r3, r2, r4, r3
   3c1f0:	mul	r2, r2, r4
   3c1f4:	add	r7, r7, r2, lsl #2
   3c1f8:	subs	lr, lr, #1
   3c1fc:	add	r0, r0, #4
   3c200:	bne	3c180 <GetDataSlab+0x197bc>
   3c204:	b	3c218 <GetDataSlab+0x19854>
   3c208:	ldr	r2, [sp, #20]
   3c20c:	ldr	r0, [r2, r0]
   3c210:	add	r7, r7, r0, lsl #2
   3c214:	add	r3, r0, r3
   3c218:	ldr	r0, [sp, #32]
   3c21c:	ldr	r2, [sp, #56]	; 0x38
   3c220:	ldr	r4, [sp, #40]	; 0x28
   3c224:	ldr	r6, [sp, #48]	; 0x30
   3c228:	add	r2, r2, r0
   3c22c:	add	r6, r6, r4
   3c230:	mov	r0, #0
   3c234:	str	r2, [sp, #56]	; 0x38
   3c238:	ldr	r2, [sp, #44]	; 0x2c
   3c23c:	str	r6, [sp, #48]	; 0x30
   3c240:	cmp	r6, r2
   3c244:	blt	3c114 <GetDataSlab+0x19750>
   3c248:	b	24900 <GetDataSlab+0x1f3c>
   3c24c:	ldr	r0, [sp, #44]	; 0x2c
   3c250:	ldr	r1, [sp, #56]	; 0x38
   3c254:	ldr	lr, [sp, #40]	; 0x28
   3c258:	cmp	r0, #1
   3c25c:	blt	248fc <GetDataSlab+0x1f38>
   3c260:	ldr	r2, [sp, #60]	; 0x3c
   3c264:	ldr	r0, [sp, #36]	; 0x24
   3c268:	add	r3, sp, #104	; 0x68
   3c26c:	lsl	r9, ip, #2
   3c270:	str	r1, [sp, #56]	; 0x38
   3c274:	orr	sl, r3, #4
   3c278:	ldr	r4, [r2], #4
   3c27c:	mls	r0, lr, ip, r0
   3c280:	str	r2, [sp, #60]	; 0x3c
   3c284:	sub	r0, r0, r4
   3c288:	str	r4, [sp, #28]
   3c28c:	str	r0, [sp, #36]	; 0x24
   3c290:	ldr	r0, [fp, #20]
   3c294:	add	r6, r0, #4
   3c298:	add	r0, sp, #64	; 0x40
   3c29c:	orr	r0, r0, #4
   3c2a0:	str	r0, [sp, #52]	; 0x34
   3c2a4:	ldr	r0, [fp, #24]
   3c2a8:	sub	r0, r0, #1
   3c2ac:	str	r0, [sp, #20]
   3c2b0:	sub	r0, fp, #72	; 0x48
   3c2b4:	orr	r0, r0, #4
   3c2b8:	str	r0, [sp, #16]
   3c2bc:	mla	r0, lr, ip, r4
   3c2c0:	mov	ip, r4
   3c2c4:	str	r0, [sp, #24]
   3c2c8:	lsl	r0, lr, #3
   3c2cc:	str	r0, [sp, #32]
   3c2d0:	mov	r0, #0
   3c2d4:	str	r0, [sp, #48]	; 0x30
   3c2d8:	add	r5, r8, ip, lsl #2
   3c2dc:	cmp	lr, #1
   3c2e0:	blt	3c310 <GetDataSlab+0x1994c>
   3c2e4:	ldr	r4, [sp, #56]	; 0x38
   3c2e8:	mov	r8, lr
   3c2ec:	ldr	r0, [r5], r9
   3c2f0:	bl	4b710 <__aeabi_f2ulz>
   3c2f4:	strd	r0, [r4]
   3c2f8:	add	r4, r4, #8
   3c2fc:	subs	r8, r8, #1
   3c300:	bne	3c2ec <GetDataSlab+0x19928>
   3c304:	ldr	r0, [sp, #24]
   3c308:	ldr	ip, [sp, #28]
   3c30c:	b	3c314 <GetDataSlab+0x19950>
   3c310:	mov	r0, ip
   3c314:	ldr	r1, [sp, #36]	; 0x24
   3c318:	add	r0, r0, r7
   3c31c:	add	r7, r0, r1
   3c320:	ldr	r0, [fp, #24]
   3c324:	add	r8, r5, r1, lsl #2
   3c328:	cmp	r0, #2
   3c32c:	blt	3c3d0 <GetDataSlab+0x19a0c>
   3c330:	ldr	r1, [sp, #20]
   3c334:	ldr	lr, [sp, #40]	; 0x28
   3c338:	mov	r0, #0
   3c33c:	ldr	r2, [sl, r0]
   3c340:	add	r2, r2, #1
   3c344:	str	r2, [sl, r0]
   3c348:	ldr	r3, [r6, r0]
   3c34c:	sdiv	r5, r2, r3
   3c350:	mls	r2, r5, r3, r2
   3c354:	cmp	r2, #0
   3c358:	bne	3c3d8 <GetDataSlab+0x19a14>
   3c35c:	mov	r2, #0
   3c360:	str	r2, [sl, r0]
   3c364:	ldr	r2, [sp, #52]	; 0x34
   3c368:	ldr	r2, [r2, r0]
   3c36c:	sdiv	r3, r7, r2
   3c370:	mls	r3, r3, r2, r7
   3c374:	cmp	r3, #0
   3c378:	beq	3c39c <GetDataSlab+0x199d8>
   3c37c:	ldr	r4, [sp, #60]	; 0x3c
   3c380:	add	r5, sp, #64	; 0x40
   3c384:	sub	r2, r2, r3
   3c388:	ldr	r5, [r5, r0]
   3c38c:	ldr	r4, [r4, r0]
   3c390:	mla	r2, r4, r5, r2
   3c394:	add	r7, r2, r7
   3c398:	b	3c3bc <GetDataSlab+0x199f8>
   3c39c:	ldr	r2, [sp, #60]	; 0x3c
   3c3a0:	ldr	r2, [r2, r0]
   3c3a4:	cmp	r2, #0
   3c3a8:	beq	3c3c0 <GetDataSlab+0x199fc>
   3c3ac:	add	r3, sp, #64	; 0x40
   3c3b0:	ldr	r3, [r3, r0]
   3c3b4:	mla	r7, r3, r2, r7
   3c3b8:	mul	r2, r3, r2
   3c3bc:	add	r8, r8, r2, lsl #2
   3c3c0:	subs	r1, r1, #1
   3c3c4:	add	r0, r0, #4
   3c3c8:	bne	3c33c <GetDataSlab+0x19978>
   3c3cc:	b	3c3e8 <GetDataSlab+0x19a24>
   3c3d0:	ldr	lr, [sp, #40]	; 0x28
   3c3d4:	b	3c3e8 <GetDataSlab+0x19a24>
   3c3d8:	ldr	r1, [sp, #16]
   3c3dc:	ldr	r0, [r1, r0]
   3c3e0:	add	r8, r8, r0, lsl #2
   3c3e4:	add	r7, r0, r7
   3c3e8:	ldr	r0, [sp, #32]
   3c3ec:	ldr	r1, [sp, #56]	; 0x38
   3c3f0:	ldr	r2, [sp, #48]	; 0x30
   3c3f4:	add	r1, r1, r0
   3c3f8:	add	r2, r2, lr
   3c3fc:	mov	r0, #0
   3c400:	str	r1, [sp, #56]	; 0x38
   3c404:	ldr	r1, [sp, #44]	; 0x2c
   3c408:	str	r2, [sp, #48]	; 0x30
   3c40c:	cmp	r2, r1
   3c410:	blt	3c2d8 <GetDataSlab+0x19914>
   3c414:	b	24900 <GetDataSlab+0x1f3c>
   3c418:	ldr	r0, [sp, #44]	; 0x2c
   3c41c:	ldr	r1, [sp, #56]	; 0x38
   3c420:	ldr	lr, [sp, #40]	; 0x28
   3c424:	cmp	r0, #1
   3c428:	blt	248fc <GetDataSlab+0x1f38>
   3c42c:	ldr	r2, [sp, #60]	; 0x3c
   3c430:	ldr	r0, [sp, #36]	; 0x24
   3c434:	add	r3, sp, #104	; 0x68
   3c438:	lsl	r9, ip, #3
   3c43c:	str	r1, [sp, #56]	; 0x38
   3c440:	orr	sl, r3, #4
   3c444:	ldr	r4, [r2], #4
   3c448:	mls	r0, lr, ip, r0
   3c44c:	str	r2, [sp, #60]	; 0x3c
   3c450:	sub	r0, r0, r4
   3c454:	str	r4, [sp, #28]
   3c458:	str	r0, [sp, #36]	; 0x24
   3c45c:	ldr	r0, [fp, #20]
   3c460:	add	r6, r0, #4
   3c464:	add	r0, sp, #64	; 0x40
   3c468:	orr	r0, r0, #4
   3c46c:	str	r0, [sp, #52]	; 0x34
   3c470:	ldr	r0, [fp, #24]
   3c474:	sub	r0, r0, #1
   3c478:	str	r0, [sp, #20]
   3c47c:	sub	r0, fp, #72	; 0x48
   3c480:	orr	r0, r0, #4
   3c484:	str	r0, [sp, #16]
   3c488:	mla	r0, lr, ip, r4
   3c48c:	mov	ip, r4
   3c490:	str	r0, [sp, #24]
   3c494:	lsl	r0, lr, #3
   3c498:	str	r0, [sp, #32]
   3c49c:	mov	r0, #0
   3c4a0:	str	r0, [sp, #48]	; 0x30
   3c4a4:	add	r5, r8, ip, lsl #3
   3c4a8:	cmp	lr, #1
   3c4ac:	blt	3c4e4 <GetDataSlab+0x19b20>
   3c4b0:	ldr	r4, [sp, #56]	; 0x38
   3c4b4:	mov	r8, lr
   3c4b8:	vldr	d16, [r5]
   3c4bc:	vmov	r0, r1, d16
   3c4c0:	bl	4b750 <__aeabi_d2ulz>
   3c4c4:	strd	r0, [r4]
   3c4c8:	add	r5, r5, r9
   3c4cc:	add	r4, r4, #8
   3c4d0:	subs	r8, r8, #1
   3c4d4:	bne	3c4b8 <GetDataSlab+0x19af4>
   3c4d8:	ldr	r0, [sp, #24]
   3c4dc:	ldr	ip, [sp, #28]
   3c4e0:	b	3c4e8 <GetDataSlab+0x19b24>
   3c4e4:	mov	r0, ip
   3c4e8:	ldr	r1, [sp, #36]	; 0x24
   3c4ec:	add	r0, r0, r7
   3c4f0:	add	r7, r0, r1
   3c4f4:	ldr	r0, [fp, #24]
   3c4f8:	add	r8, r5, r1, lsl #3
   3c4fc:	cmp	r0, #2
   3c500:	blt	3c5a4 <GetDataSlab+0x19be0>
   3c504:	ldr	r1, [sp, #20]
   3c508:	ldr	lr, [sp, #40]	; 0x28
   3c50c:	mov	r0, #0
   3c510:	ldr	r2, [sl, r0]
   3c514:	add	r2, r2, #1
   3c518:	str	r2, [sl, r0]
   3c51c:	ldr	r3, [r6, r0]
   3c520:	sdiv	r5, r2, r3
   3c524:	mls	r2, r5, r3, r2
   3c528:	cmp	r2, #0
   3c52c:	bne	3c5ac <GetDataSlab+0x19be8>
   3c530:	mov	r2, #0
   3c534:	str	r2, [sl, r0]
   3c538:	ldr	r2, [sp, #52]	; 0x34
   3c53c:	ldr	r2, [r2, r0]
   3c540:	sdiv	r3, r7, r2
   3c544:	mls	r3, r3, r2, r7
   3c548:	cmp	r3, #0
   3c54c:	beq	3c570 <GetDataSlab+0x19bac>
   3c550:	ldr	r4, [sp, #60]	; 0x3c
   3c554:	add	r5, sp, #64	; 0x40
   3c558:	sub	r2, r2, r3
   3c55c:	ldr	r5, [r5, r0]
   3c560:	ldr	r4, [r4, r0]
   3c564:	mla	r2, r4, r5, r2
   3c568:	add	r7, r2, r7
   3c56c:	b	3c590 <GetDataSlab+0x19bcc>
   3c570:	ldr	r2, [sp, #60]	; 0x3c
   3c574:	ldr	r2, [r2, r0]
   3c578:	cmp	r2, #0
   3c57c:	beq	3c594 <GetDataSlab+0x19bd0>
   3c580:	add	r3, sp, #64	; 0x40
   3c584:	ldr	r3, [r3, r0]
   3c588:	mla	r7, r3, r2, r7
   3c58c:	mul	r2, r3, r2
   3c590:	add	r8, r8, r2, lsl #3
   3c594:	subs	r1, r1, #1
   3c598:	add	r0, r0, #4
   3c59c:	bne	3c510 <GetDataSlab+0x19b4c>
   3c5a0:	b	3c5bc <GetDataSlab+0x19bf8>
   3c5a4:	ldr	lr, [sp, #40]	; 0x28
   3c5a8:	b	3c5bc <GetDataSlab+0x19bf8>
   3c5ac:	ldr	r1, [sp, #16]
   3c5b0:	ldr	r0, [r1, r0]
   3c5b4:	add	r8, r8, r0, lsl #3
   3c5b8:	add	r7, r0, r7
   3c5bc:	ldr	r0, [sp, #32]
   3c5c0:	ldr	r1, [sp, #56]	; 0x38
   3c5c4:	ldr	r2, [sp, #48]	; 0x30
   3c5c8:	add	r1, r1, r0
   3c5cc:	add	r2, r2, lr
   3c5d0:	mov	r0, #0
   3c5d4:	str	r1, [sp, #56]	; 0x38
   3c5d8:	ldr	r1, [sp, #44]	; 0x2c
   3c5dc:	str	r2, [sp, #48]	; 0x30
   3c5e0:	cmp	r2, r1
   3c5e4:	blt	3c4a4 <GetDataSlab+0x19ae0>
   3c5e8:	b	24900 <GetDataSlab+0x1f3c>
   3c5ec:	ldr	r0, [sp, #44]	; 0x2c
   3c5f0:	ldr	r4, [sp, #40]	; 0x28
   3c5f4:	cmp	r0, #1
   3c5f8:	blt	3c788 <GetDataSlab+0x19dc4>
   3c5fc:	ldr	ip, [fp, #12]
   3c600:	ldr	r0, [sp, #28]
   3c604:	ldr	r1, [fp, #24]
   3c608:	ldr	r7, [sp, #56]	; 0x38
   3c60c:	lsl	sl, r8, #3
   3c610:	ldr	r2, [ip], #4
   3c614:	mls	r0, r4, r8, r0
   3c618:	sub	r1, r1, #1
   3c61c:	str	r1, [sp, #12]
   3c620:	sub	r0, r0, r2
   3c624:	mov	r1, r2
   3c628:	sub	r2, fp, #72	; 0x48
   3c62c:	str	r0, [sp, #24]
   3c630:	add	r0, sp, #104	; 0x68
   3c634:	orr	r2, r2, #4
   3c638:	str	r1, [sp, #28]
   3c63c:	orr	r6, r0, #4
   3c640:	ldr	r0, [fp, #20]
   3c644:	str	r2, [sp, #8]
   3c648:	mla	r2, r4, r8, r1
   3c64c:	str	r2, [sp, #16]
   3c650:	lsl	r2, r4, #3
   3c654:	add	r5, r0, #4
   3c658:	add	r0, sp, #64	; 0x40
   3c65c:	str	r2, [sp, #20]
   3c660:	mov	r2, #0
   3c664:	orr	r0, r0, #4
   3c668:	str	r2, [sp, #32]
   3c66c:	add	r2, r3, r1, lsl #3
   3c670:	cmp	r4, #1
   3c674:	str	r7, [sp, #36]	; 0x24
   3c678:	blt	3c6a0 <GetDataSlab+0x19cdc>
   3c67c:	mov	r3, r7
   3c680:	ldrd	r8, [r2]
   3c684:	add	r2, r2, sl
   3c688:	subs	r4, r4, #1
   3c68c:	strd	r8, [r3]
   3c690:	add	r3, r3, #8
   3c694:	bne	3c680 <GetDataSlab+0x19cbc>
   3c698:	ldr	r4, [sp, #16]
   3c69c:	b	3c6a4 <GetDataSlab+0x19ce0>
   3c6a0:	mov	r4, r1
   3c6a4:	ldr	r1, [sp, #24]
   3c6a8:	add	r3, r2, r1, lsl #3
   3c6ac:	add	r2, r4, lr
   3c6b0:	add	lr, r2, r1
   3c6b4:	ldr	r1, [fp, #24]
   3c6b8:	cmp	r1, #2
   3c6bc:	blt	3c760 <GetDataSlab+0x19d9c>
   3c6c0:	ldr	r2, [sp, #12]
   3c6c4:	mov	r8, #0
   3c6c8:	ldr	r4, [r6, r8]
   3c6cc:	add	r4, r4, #1
   3c6d0:	str	r4, [r6, r8]
   3c6d4:	ldr	r1, [r5, r8]
   3c6d8:	sdiv	r7, r4, r1
   3c6dc:	mls	r1, r7, r1, r4
   3c6e0:	cmp	r1, #0
   3c6e4:	bne	3c750 <GetDataSlab+0x19d8c>
   3c6e8:	ldr	r4, [r0, r8]
   3c6ec:	mov	r1, #0
   3c6f0:	str	r1, [r6, r8]
   3c6f4:	sdiv	r1, lr, r4
   3c6f8:	mls	r9, r1, r4, lr
   3c6fc:	cmp	r9, #0
   3c700:	beq	3c720 <GetDataSlab+0x19d5c>
   3c704:	add	r1, sp, #64	; 0x40
   3c708:	ldr	r7, [ip, r8]
   3c70c:	sub	r4, r4, r9
   3c710:	ldr	r1, [r1, r8]
   3c714:	mla	r1, r7, r1, r4
   3c718:	add	lr, r1, lr
   3c71c:	b	3c73c <GetDataSlab+0x19d78>
   3c720:	ldr	r4, [ip, r8]
   3c724:	cmp	r4, #0
   3c728:	beq	3c740 <GetDataSlab+0x19d7c>
   3c72c:	add	r1, sp, #64	; 0x40
   3c730:	ldr	r1, [r1, r8]
   3c734:	mla	lr, r1, r4, lr
   3c738:	mul	r1, r1, r4
   3c73c:	add	r3, r3, r1, lsl #3
   3c740:	subs	r2, r2, #1
   3c744:	add	r8, r8, #4
   3c748:	bne	3c6c8 <GetDataSlab+0x19d04>
   3c74c:	b	3c760 <GetDataSlab+0x19d9c>
   3c750:	ldr	r1, [sp, #8]
   3c754:	ldr	r1, [r1, r8]
   3c758:	add	r3, r3, r1, lsl #3
   3c75c:	add	lr, r1, lr
   3c760:	ldr	r1, [sp, #20]
   3c764:	ldr	r7, [sp, #36]	; 0x24
   3c768:	ldr	r4, [sp, #40]	; 0x28
   3c76c:	ldr	r2, [sp, #32]
   3c770:	add	r7, r7, r1
   3c774:	ldr	r1, [sp, #44]	; 0x2c
   3c778:	add	r2, r2, r4
   3c77c:	cmp	r2, r1
   3c780:	ldr	r1, [sp, #28]
   3c784:	blt	3c668 <GetDataSlab+0x19ca4>
   3c788:	mov	r0, #0
   3c78c:	ldr	r1, [sp, #52]	; 0x34
   3c790:	cmp	r1, #13
   3c794:	bne	24900 <GetDataSlab+0x1f3c>
   3c798:	ldr	r0, [fp, #16]
   3c79c:	ldr	r4, [fp, #8]
   3c7a0:	ldr	sl, [fp, #20]
   3c7a4:	ldr	ip, [fp, #12]
   3c7a8:	mov	r2, #0
   3c7ac:	add	r8, sp, #64	; 0x40
   3c7b0:	sub	lr, fp, #72	; 0x48
   3c7b4:	ldr	r0, [r0]
   3c7b8:	str	r0, [sp, #16]
   3c7bc:	sub	r0, r0, #1
   3c7c0:	str	r0, [fp, #-72]	; 0xffffffb8
   3c7c4:	ldr	r0, [r4]
   3c7c8:	str	r0, [sp, #64]	; 0x40
   3c7cc:	str	r0, [sp, #40]	; 0x28
   3c7d0:	ldr	r0, [fp, #24]
   3c7d4:	ldr	r1, [sl]
   3c7d8:	cmp	r0, #2
   3c7dc:	str	r1, [sp, #44]	; 0x2c
   3c7e0:	str	r1, [sp, #52]	; 0x34
   3c7e4:	blt	3c880 <GetDataSlab+0x19ebc>
   3c7e8:	ldr	r6, [sp, #40]	; 0x28
   3c7ec:	ldr	r0, [sp, #44]	; 0x2c
   3c7f0:	mov	r1, #1
   3c7f4:	mov	r2, #0
   3c7f8:	mov	r7, r4
   3c7fc:	mov	r5, r6
   3c800:	str	r0, [sp, #52]	; 0x34
   3c804:	ldr	r0, [fp, #16]
   3c808:	ldr	r0, [r0, r1, lsl #2]
   3c80c:	str	r6, [r8, r1, lsl #2]
   3c810:	sub	r3, r0, #1
   3c814:	str	r3, [lr, r1, lsl #2]
   3c818:	ldr	r9, [r4, r1, lsl #2]
   3c81c:	mov	r4, #0
   3c820:	mov	r0, r9
   3c824:	mul	r6, r0, r6
   3c828:	ldr	r0, [r7, -r4, lsl #2]
   3c82c:	add	r4, r4, #1
   3c830:	cmp	r1, r4
   3c834:	mul	r3, r3, r0
   3c838:	bne	3c824 <GetDataSlab+0x19e60>
   3c83c:	sub	lr, fp, #72	; 0x48
   3c840:	str	r6, [r8, r1, lsl #2]
   3c844:	ldr	r4, [fp, #8]
   3c848:	add	r7, r7, #4
   3c84c:	str	r3, [lr, r1, lsl #2]
   3c850:	ldr	r3, [sp, #52]	; 0x34
   3c854:	ldr	r0, [ip, r1, lsl #2]
   3c858:	mla	r2, r0, r5, r2
   3c85c:	ldr	r0, [sl, r1, lsl #2]
   3c860:	add	r1, r1, #1
   3c864:	mov	r5, r6
   3c868:	mov	r6, r9
   3c86c:	mul	r3, r0, r3
   3c870:	ldr	r0, [fp, #24]
   3c874:	str	r3, [sp, #52]	; 0x34
   3c878:	cmp	r1, r0
   3c87c:	bne	3c804 <GetDataSlab+0x19e40>
   3c880:	ldr	r0, [sp, #48]	; 0x30
   3c884:	ldr	r4, [sp, #16]
   3c888:	add	r7, r0, r2, lsl #3
   3c88c:	cmp	r4, #1
   3c890:	bne	3d948 <GetDataSlab+0x1af84>
   3c894:	ldr	r0, [sp, #52]	; 0x34
   3c898:	cmp	r0, #1
   3c89c:	blt	248fc <GetDataSlab+0x1f38>
   3c8a0:	mov	r0, r8
   3c8a4:	add	r1, sp, #104	; 0x68
   3c8a8:	ldr	r6, [sp, #56]	; 0x38
   3c8ac:	add	r9, sl, #4
   3c8b0:	orr	lr, r0, #4
   3c8b4:	ldr	r0, [fp, #24]
   3c8b8:	orr	r8, r1, #4
   3c8bc:	ldr	r1, [sp, #44]	; 0x2c
   3c8c0:	sub	r0, r0, #1
   3c8c4:	str	r0, [sp, #32]
   3c8c8:	sub	r0, fp, #72	; 0x48
   3c8cc:	orr	r0, r0, #4
   3c8d0:	str	r0, [sp, #28]
   3c8d4:	lsl	r0, r1, #3
   3c8d8:	str	r0, [sp, #48]	; 0x30
   3c8dc:	ldr	r0, [ip], #4
   3c8e0:	str	r0, [sp, #36]	; 0x24
   3c8e4:	mov	r0, #0
   3c8e8:	str	r0, [sp, #60]	; 0x3c
   3c8ec:	cmp	r1, #1
   3c8f0:	blt	3c91c <GetDataSlab+0x19f58>
   3c8f4:	ldr	r0, [sp, #36]	; 0x24
   3c8f8:	ldr	r4, [sp, #44]	; 0x2c
   3c8fc:	mov	r3, r6
   3c900:	add	r5, r7, r0, lsl #3
   3c904:	ldrd	r0, [r5]
   3c908:	add	r5, r5, #8
   3c90c:	subs	r4, r4, #1
   3c910:	strd	r0, [r3]
   3c914:	add	r3, r3, #8
   3c918:	bne	3c904 <GetDataSlab+0x19f40>
   3c91c:	ldr	r0, [sp, #40]	; 0x28
   3c920:	str	r6, [sp, #56]	; 0x38
   3c924:	add	r7, r7, r0, lsl #3
   3c928:	add	r2, r2, r0
   3c92c:	ldr	r0, [fp, #24]
   3c930:	cmp	r0, #2
   3c934:	blt	3c9d8 <GetDataSlab+0x1a014>
   3c938:	ldr	sl, [sp, #32]
   3c93c:	mov	r0, #0
   3c940:	ldr	r1, [r8, r0]
   3c944:	add	r1, r1, #1
   3c948:	str	r1, [r8, r0]
   3c94c:	ldr	r3, [r9, r0]
   3c950:	sdiv	r4, r1, r3
   3c954:	mls	r1, r4, r3, r1
   3c958:	cmp	r1, #0
   3c95c:	bne	3c9c8 <GetDataSlab+0x1a004>
   3c960:	ldr	r3, [lr, r0]
   3c964:	mov	r1, #0
   3c968:	str	r1, [r8, r0]
   3c96c:	sdiv	r1, r2, r3
   3c970:	mls	r4, r1, r3, r2
   3c974:	cmp	r4, #0
   3c978:	beq	3c998 <GetDataSlab+0x19fd4>
   3c97c:	add	r1, sp, #64	; 0x40
   3c980:	ldr	r5, [ip, r0]
   3c984:	sub	r3, r3, r4
   3c988:	ldr	r1, [r1, r0]
   3c98c:	mla	r1, r5, r1, r3
   3c990:	add	r2, r1, r2
   3c994:	b	3c9b4 <GetDataSlab+0x19ff0>
   3c998:	ldr	r3, [ip, r0]
   3c99c:	cmp	r3, #0
   3c9a0:	beq	3c9b8 <GetDataSlab+0x19ff4>
   3c9a4:	add	r1, sp, #64	; 0x40
   3c9a8:	ldr	r1, [r1, r0]
   3c9ac:	mla	r2, r1, r3, r2
   3c9b0:	mul	r1, r1, r3
   3c9b4:	add	r7, r7, r1, lsl #3
   3c9b8:	subs	sl, sl, #1
   3c9bc:	add	r0, r0, #4
   3c9c0:	bne	3c940 <GetDataSlab+0x19f7c>
   3c9c4:	b	3c9d8 <GetDataSlab+0x1a014>
   3c9c8:	ldr	r1, [sp, #28]
   3c9cc:	ldr	r0, [r1, r0]
   3c9d0:	add	r7, r7, r0, lsl #3
   3c9d4:	add	r2, r0, r2
   3c9d8:	ldr	r1, [sp, #44]	; 0x2c
   3c9dc:	ldr	r4, [sp, #60]	; 0x3c
   3c9e0:	ldr	r0, [sp, #48]	; 0x30
   3c9e4:	ldr	r6, [sp, #56]	; 0x38
   3c9e8:	ldr	r3, [sp, #52]	; 0x34
   3c9ec:	add	r4, r4, r1
   3c9f0:	add	r6, r6, r0
   3c9f4:	mov	r0, #0
   3c9f8:	cmp	r4, r3
   3c9fc:	str	r4, [sp, #60]	; 0x3c
   3ca00:	blt	3c8ec <GetDataSlab+0x19f28>
   3ca04:	b	24900 <GetDataSlab+0x1f3c>
   3ca08:	ldr	r0, [sp, #52]	; 0x34
   3ca0c:	ldr	r1, [sp, #56]	; 0x38
   3ca10:	ldr	r3, [sp, #44]	; 0x2c
   3ca14:	cmp	r0, #1
   3ca18:	blt	248fc <GetDataSlab+0x1f38>
   3ca1c:	ldr	r0, [sp, #40]	; 0x28
   3ca20:	ldr	lr, [r9], #4
   3ca24:	add	r2, sp, #104	; 0x68
   3ca28:	str	r1, [sp, #56]	; 0x38
   3ca2c:	str	r9, [sp, #60]	; 0x3c
   3ca30:	lsl	r9, ip, #3
   3ca34:	mls	r0, r3, ip, r0
   3ca38:	str	lr, [sp, #24]
   3ca3c:	sub	r0, r0, lr
   3ca40:	str	r0, [sp, #40]	; 0x28
   3ca44:	mov	r0, sl
   3ca48:	orr	sl, r2, #4
   3ca4c:	add	r0, r0, #4
   3ca50:	str	r0, [sp, #32]
   3ca54:	add	r0, sp, #64	; 0x40
   3ca58:	orr	r0, r0, #4
   3ca5c:	ldr	r6, [sp, #32]
   3ca60:	str	r0, [sp, #36]	; 0x24
   3ca64:	ldr	r0, [fp, #24]
   3ca68:	sub	r0, r0, #1
   3ca6c:	str	r0, [sp, #16]
   3ca70:	sub	r0, fp, #72	; 0x48
   3ca74:	orr	r0, r0, #4
   3ca78:	str	r0, [sp, #12]
   3ca7c:	mla	r0, r3, ip, lr
   3ca80:	str	r0, [sp, #20]
   3ca84:	lsl	r0, r3, #3
   3ca88:	str	r0, [sp, #28]
   3ca8c:	mov	r0, #0
   3ca90:	str	r0, [sp, #48]	; 0x30
   3ca94:	add	r5, r8, lr, lsl #3
   3ca98:	cmp	r3, #1
   3ca9c:	blt	3cad0 <GetDataSlab+0x1a10c>
   3caa0:	ldr	r4, [sp, #56]	; 0x38
   3caa4:	mov	r8, r3
   3caa8:	ldrd	r0, [r5]
   3caac:	bl	4b3f0 <__aeabi_ul2d>
   3cab0:	strd	r0, [r4]
   3cab4:	add	r5, r5, r9
   3cab8:	add	r4, r4, #8
   3cabc:	subs	r8, r8, #1
   3cac0:	bne	3caa8 <GetDataSlab+0x1a0e4>
   3cac4:	ldr	r0, [sp, #20]
   3cac8:	ldr	lr, [sp, #24]
   3cacc:	b	3cad4 <GetDataSlab+0x1a110>
   3cad0:	mov	r0, lr
   3cad4:	ldr	r1, [sp, #40]	; 0x28
   3cad8:	add	r0, r0, r7
   3cadc:	ldr	ip, [sp, #36]	; 0x24
   3cae0:	add	r7, r0, r1
   3cae4:	ldr	r0, [fp, #24]
   3cae8:	add	r8, r5, r1, lsl #3
   3caec:	cmp	r0, #2
   3caf0:	blt	3cb9c <GetDataSlab+0x1a1d8>
   3caf4:	ldr	r1, [sp, #16]
   3caf8:	mov	r0, #0
   3cafc:	ldr	r2, [sl, r0]
   3cb00:	add	r2, r2, #1
   3cb04:	str	r2, [sl, r0]
   3cb08:	ldr	r3, [r6, r0]
   3cb0c:	sdiv	r5, r2, r3
   3cb10:	mls	r2, r5, r3, r2
   3cb14:	cmp	r2, #0
   3cb18:	bne	3cb8c <GetDataSlab+0x1a1c8>
   3cb1c:	mov	r2, #0
   3cb20:	str	r2, [sl, r0]
   3cb24:	ldr	r2, [ip, r0]
   3cb28:	sdiv	r3, r7, r2
   3cb2c:	mls	r3, r3, r2, r7
   3cb30:	cmp	r3, #0
   3cb34:	beq	3cb58 <GetDataSlab+0x1a194>
   3cb38:	ldr	r4, [sp, #60]	; 0x3c
   3cb3c:	add	r5, sp, #64	; 0x40
   3cb40:	sub	r2, r2, r3
   3cb44:	ldr	r5, [r5, r0]
   3cb48:	ldr	r4, [r4, r0]
   3cb4c:	mla	r2, r4, r5, r2
   3cb50:	add	r7, r2, r7
   3cb54:	b	3cb78 <GetDataSlab+0x1a1b4>
   3cb58:	ldr	r2, [sp, #60]	; 0x3c
   3cb5c:	ldr	r2, [r2, r0]
   3cb60:	cmp	r2, #0
   3cb64:	beq	3cb7c <GetDataSlab+0x1a1b8>
   3cb68:	add	r3, sp, #64	; 0x40
   3cb6c:	ldr	r3, [r3, r0]
   3cb70:	mla	r7, r3, r2, r7
   3cb74:	mul	r2, r3, r2
   3cb78:	add	r8, r8, r2, lsl #3
   3cb7c:	subs	r1, r1, #1
   3cb80:	add	r0, r0, #4
   3cb84:	bne	3cafc <GetDataSlab+0x1a138>
   3cb88:	b	3cb9c <GetDataSlab+0x1a1d8>
   3cb8c:	ldr	r1, [sp, #12]
   3cb90:	ldr	r0, [r1, r0]
   3cb94:	add	r8, r8, r0, lsl #3
   3cb98:	add	r7, r0, r7
   3cb9c:	ldr	r0, [sp, #28]
   3cba0:	ldr	r1, [sp, #56]	; 0x38
   3cba4:	ldr	r3, [sp, #44]	; 0x2c
   3cba8:	ldr	r2, [sp, #48]	; 0x30
   3cbac:	add	r1, r1, r0
   3cbb0:	add	r2, r2, r3
   3cbb4:	mov	r0, #0
   3cbb8:	str	r1, [sp, #56]	; 0x38
   3cbbc:	ldr	r1, [sp, #52]	; 0x34
   3cbc0:	str	r2, [sp, #48]	; 0x30
   3cbc4:	cmp	r2, r1
   3cbc8:	blt	3ca94 <GetDataSlab+0x1a0d0>
   3cbcc:	b	24900 <GetDataSlab+0x1f3c>
   3cbd0:	ldr	r0, [sp, #52]	; 0x34
   3cbd4:	ldr	r1, [sp, #56]	; 0x38
   3cbd8:	ldr	r3, [sp, #44]	; 0x2c
   3cbdc:	cmp	r0, #1
   3cbe0:	blt	248fc <GetDataSlab+0x1f38>
   3cbe4:	ldr	r0, [sp, #40]	; 0x28
   3cbe8:	ldr	lr, [r9], #4
   3cbec:	add	r2, sp, #104	; 0x68
   3cbf0:	str	r1, [sp, #56]	; 0x38
   3cbf4:	str	r9, [sp, #60]	; 0x3c
   3cbf8:	lsl	r9, ip, #3
   3cbfc:	mls	r0, r3, ip, r0
   3cc00:	str	lr, [sp, #24]
   3cc04:	sub	r0, r0, lr
   3cc08:	str	r0, [sp, #40]	; 0x28
   3cc0c:	mov	r0, sl
   3cc10:	orr	sl, r2, #4
   3cc14:	add	r0, r0, #4
   3cc18:	str	r0, [sp, #32]
   3cc1c:	add	r0, sp, #64	; 0x40
   3cc20:	orr	r0, r0, #4
   3cc24:	ldr	r6, [sp, #32]
   3cc28:	str	r0, [sp, #36]	; 0x24
   3cc2c:	ldr	r0, [fp, #24]
   3cc30:	sub	r0, r0, #1
   3cc34:	str	r0, [sp, #16]
   3cc38:	sub	r0, fp, #72	; 0x48
   3cc3c:	orr	r0, r0, #4
   3cc40:	str	r0, [sp, #12]
   3cc44:	mla	r0, r3, ip, lr
   3cc48:	str	r0, [sp, #20]
   3cc4c:	lsl	r0, r3, #2
   3cc50:	str	r0, [sp, #28]
   3cc54:	mov	r0, #0
   3cc58:	str	r0, [sp, #48]	; 0x30
   3cc5c:	add	r0, r8, lr, lsl #3
   3cc60:	cmp	r3, #1
   3cc64:	blt	3cc98 <GetDataSlab+0x1a2d4>
   3cc68:	ldr	r4, [sp, #56]	; 0x38
   3cc6c:	mov	r8, r3
   3cc70:	add	r5, r0, r9
   3cc74:	ldrd	r0, [r0]
   3cc78:	bl	4b628 <__aeabi_ul2f>
   3cc7c:	str	r0, [r4], #4
   3cc80:	subs	r8, r8, #1
   3cc84:	mov	r0, r5
   3cc88:	bne	3cc70 <GetDataSlab+0x1a2ac>
   3cc8c:	ldr	r1, [sp, #20]
   3cc90:	ldr	lr, [sp, #24]
   3cc94:	b	3cca0 <GetDataSlab+0x1a2dc>
   3cc98:	mov	r1, lr
   3cc9c:	mov	r5, r0
   3cca0:	ldr	r2, [sp, #40]	; 0x28
   3cca4:	add	r0, r1, r7
   3cca8:	ldr	ip, [sp, #36]	; 0x24
   3ccac:	add	r7, r0, r2
   3ccb0:	ldr	r0, [fp, #24]
   3ccb4:	add	r8, r5, r2, lsl #3
   3ccb8:	cmp	r0, #2
   3ccbc:	blt	3cd68 <GetDataSlab+0x1a3a4>
   3ccc0:	ldr	r1, [sp, #16]
   3ccc4:	mov	r0, #0
   3ccc8:	ldr	r2, [sl, r0]
   3cccc:	add	r2, r2, #1
   3ccd0:	str	r2, [sl, r0]
   3ccd4:	ldr	r3, [r6, r0]
   3ccd8:	sdiv	r5, r2, r3
   3ccdc:	mls	r2, r5, r3, r2
   3cce0:	cmp	r2, #0
   3cce4:	bne	3cd58 <GetDataSlab+0x1a394>
   3cce8:	mov	r2, #0
   3ccec:	str	r2, [sl, r0]
   3ccf0:	ldr	r2, [ip, r0]
   3ccf4:	sdiv	r3, r7, r2
   3ccf8:	mls	r3, r3, r2, r7
   3ccfc:	cmp	r3, #0
   3cd00:	beq	3cd24 <GetDataSlab+0x1a360>
   3cd04:	ldr	r4, [sp, #60]	; 0x3c
   3cd08:	add	r5, sp, #64	; 0x40
   3cd0c:	sub	r2, r2, r3
   3cd10:	ldr	r5, [r5, r0]
   3cd14:	ldr	r4, [r4, r0]
   3cd18:	mla	r2, r4, r5, r2
   3cd1c:	add	r7, r2, r7
   3cd20:	b	3cd44 <GetDataSlab+0x1a380>
   3cd24:	ldr	r2, [sp, #60]	; 0x3c
   3cd28:	ldr	r2, [r2, r0]
   3cd2c:	cmp	r2, #0
   3cd30:	beq	3cd48 <GetDataSlab+0x1a384>
   3cd34:	add	r3, sp, #64	; 0x40
   3cd38:	ldr	r3, [r3, r0]
   3cd3c:	mla	r7, r3, r2, r7
   3cd40:	mul	r2, r3, r2
   3cd44:	add	r8, r8, r2, lsl #3
   3cd48:	subs	r1, r1, #1
   3cd4c:	add	r0, r0, #4
   3cd50:	bne	3ccc8 <GetDataSlab+0x1a304>
   3cd54:	b	3cd68 <GetDataSlab+0x1a3a4>
   3cd58:	ldr	r1, [sp, #12]
   3cd5c:	ldr	r0, [r1, r0]
   3cd60:	add	r8, r8, r0, lsl #3
   3cd64:	add	r7, r0, r7
   3cd68:	ldr	r0, [sp, #28]
   3cd6c:	ldr	r1, [sp, #56]	; 0x38
   3cd70:	ldr	r3, [sp, #44]	; 0x2c
   3cd74:	ldr	r2, [sp, #48]	; 0x30
   3cd78:	add	r1, r1, r0
   3cd7c:	add	r2, r2, r3
   3cd80:	mov	r0, #0
   3cd84:	str	r1, [sp, #56]	; 0x38
   3cd88:	ldr	r1, [sp, #52]	; 0x34
   3cd8c:	str	r2, [sp, #48]	; 0x30
   3cd90:	cmp	r2, r1
   3cd94:	blt	3cc5c <GetDataSlab+0x1a298>
   3cd98:	b	24900 <GetDataSlab+0x1f3c>
   3cd9c:	ldr	r0, [sp, #40]	; 0x28
   3cda0:	cmp	r0, #1
   3cda4:	add	r0, sp, #64	; 0x40
   3cda8:	blt	248fc <GetDataSlab+0x1f38>
   3cdac:	orr	r0, r0, #4
   3cdb0:	ldr	ip, [fp, #12]
   3cdb4:	add	r1, sp, #104	; 0x68
   3cdb8:	str	r0, [sp, #48]	; 0x30
   3cdbc:	ldr	r0, [fp, #24]
   3cdc0:	orr	r6, r1, #4
   3cdc4:	ldr	r1, [fp, #20]
   3cdc8:	str	r6, [sp, #44]	; 0x2c
   3cdcc:	ldr	r2, [ip], #4
   3cdd0:	sub	r0, r0, #1
   3cdd4:	add	r1, r1, #4
   3cdd8:	str	r0, [sp, #28]
   3cddc:	sub	r0, fp, #72	; 0x48
   3cde0:	str	r1, [sp, #52]	; 0x34
   3cde4:	orr	r0, r0, #4
   3cde8:	str	r0, [sp, #24]
   3cdec:	mov	r0, #0
   3cdf0:	str	r0, [sp, #32]
   3cdf4:	add	r5, r5, r2, lsl #3
   3cdf8:	add	r0, r2, lr
   3cdfc:	cmp	sl, #1
   3ce00:	blt	3ce58 <GetDataSlab+0x1a494>
   3ce04:	ldr	r1, [sp, #56]	; 0x38
   3ce08:	ldr	r2, [sp, #32]
   3ce0c:	ldr	lr, [fp, #8]
   3ce10:	ldr	r6, [fp, #16]
   3ce14:	mov	r7, #0
   3ce18:	add	r4, r1, r2
   3ce1c:	ldr	r1, [fp, #20]
   3ce20:	ldrb	r2, [r5]
   3ce24:	strb	r2, [r4, r7]
   3ce28:	add	r7, r7, #1
   3ce2c:	ldr	r3, [r6]
   3ce30:	ldr	sl, [r1]
   3ce34:	add	r5, r5, r3, lsl #3
   3ce38:	add	r0, r3, r0
   3ce3c:	cmp	r7, sl
   3ce40:	blt	3ce20 <GetDataSlab+0x1a45c>
   3ce44:	ldr	r1, [fp, #12]
   3ce48:	ldr	r2, [lr]
   3ce4c:	ldr	r6, [sp, #44]	; 0x2c
   3ce50:	ldr	r1, [r1]
   3ce54:	b	3ce60 <GetDataSlab+0x1a49c>
   3ce58:	mov	r1, r2
   3ce5c:	ldr	r2, [sp, #36]	; 0x24
   3ce60:	mls	r7, r3, sl, r2
   3ce64:	str	r2, [sp, #36]	; 0x24
   3ce68:	mov	r2, r1
   3ce6c:	sub	r7, r7, r1
   3ce70:	add	lr, r7, r0
   3ce74:	ldr	r0, [fp, #24]
   3ce78:	add	r5, r5, r7, lsl #3
   3ce7c:	cmp	r0, #2
   3ce80:	blt	3cf38 <GetDataSlab+0x1a574>
   3ce84:	ldr	r8, [sp, #28]
   3ce88:	mov	r0, #0
   3ce8c:	ldr	r4, [r6, r0]
   3ce90:	ldr	r1, [sp, #52]	; 0x34
   3ce94:	add	r4, r4, #1
   3ce98:	str	r4, [r6, r0]
   3ce9c:	ldr	r7, [r1, r0]
   3cea0:	sdiv	r9, r4, r7
   3cea4:	mls	r4, r9, r7, r4
   3cea8:	cmp	r4, #0
   3ceac:	bne	3cf28 <GetDataSlab+0x1a564>
   3ceb0:	mov	r1, #0
   3ceb4:	str	r1, [r6, r0]
   3ceb8:	ldr	r1, [sp, #48]	; 0x30
   3cebc:	ldr	r4, [r1, r0]
   3cec0:	sdiv	r7, lr, r4
   3cec4:	mls	r7, r7, r4, lr
   3cec8:	cmp	r7, #0
   3cecc:	beq	3cef8 <GetDataSlab+0x1a534>
   3ced0:	add	r1, sp, #64	; 0x40
   3ced4:	mov	r6, r5
   3ced8:	ldr	r5, [ip, r0]
   3cedc:	sub	r4, r4, r7
   3cee0:	ldr	r1, [r1, r0]
   3cee4:	mla	r1, r5, r1, r4
   3cee8:	mov	r5, r6
   3ceec:	ldr	r6, [sp, #44]	; 0x2c
   3cef0:	add	lr, r1, lr
   3cef4:	b	3cf14 <GetDataSlab+0x1a550>
   3cef8:	ldr	r4, [ip, r0]
   3cefc:	cmp	r4, #0
   3cf00:	beq	3cf18 <GetDataSlab+0x1a554>
   3cf04:	add	r1, sp, #64	; 0x40
   3cf08:	ldr	r1, [r1, r0]
   3cf0c:	mla	lr, r1, r4, lr
   3cf10:	mul	r1, r1, r4
   3cf14:	add	r5, r5, r1, lsl #3
   3cf18:	subs	r8, r8, #1
   3cf1c:	add	r0, r0, #4
   3cf20:	bne	3ce8c <GetDataSlab+0x1a4c8>
   3cf24:	b	3cf38 <GetDataSlab+0x1a574>
   3cf28:	ldr	r1, [sp, #24]
   3cf2c:	ldr	r0, [r1, r0]
   3cf30:	add	r5, r5, r0, lsl #3
   3cf34:	add	lr, r0, lr
   3cf38:	ldr	r1, [sp, #32]
   3cf3c:	ldr	r0, [sp, #40]	; 0x28
   3cf40:	add	r1, sl, r1
   3cf44:	cmp	r1, r0
   3cf48:	mov	r0, #0
   3cf4c:	str	r1, [sp, #32]
   3cf50:	blt	3cdf4 <GetDataSlab+0x1a430>
   3cf54:	b	24900 <GetDataSlab+0x1f3c>
   3cf58:	ldr	r0, [sp, #40]	; 0x28
   3cf5c:	cmp	r0, #1
   3cf60:	add	r0, sp, #64	; 0x40
   3cf64:	blt	248fc <GetDataSlab+0x1f38>
   3cf68:	orr	r0, r0, #4
   3cf6c:	ldr	ip, [fp, #12]
   3cf70:	add	r1, sp, #104	; 0x68
   3cf74:	str	r0, [sp, #48]	; 0x30
   3cf78:	ldr	r0, [fp, #24]
   3cf7c:	orr	r6, r1, #4
   3cf80:	ldr	r1, [fp, #20]
   3cf84:	str	r6, [sp, #44]	; 0x2c
   3cf88:	ldr	r2, [ip], #4
   3cf8c:	sub	r0, r0, #1
   3cf90:	add	r1, r1, #4
   3cf94:	str	r0, [sp, #28]
   3cf98:	sub	r0, fp, #72	; 0x48
   3cf9c:	str	r1, [sp, #52]	; 0x34
   3cfa0:	orr	r0, r0, #4
   3cfa4:	str	r0, [sp, #24]
   3cfa8:	mov	r0, #0
   3cfac:	str	r0, [sp, #32]
   3cfb0:	add	r5, r5, r2, lsl #3
   3cfb4:	add	r0, r2, lr
   3cfb8:	cmp	sl, #1
   3cfbc:	blt	3d014 <GetDataSlab+0x1a650>
   3cfc0:	ldr	r1, [sp, #56]	; 0x38
   3cfc4:	ldr	r2, [sp, #32]
   3cfc8:	ldr	lr, [fp, #8]
   3cfcc:	ldr	r6, [fp, #16]
   3cfd0:	mov	r7, #0
   3cfd4:	add	r4, r1, r2
   3cfd8:	ldr	r1, [fp, #20]
   3cfdc:	ldrb	r2, [r5]
   3cfe0:	strb	r2, [r4, r7]
   3cfe4:	add	r7, r7, #1
   3cfe8:	ldr	r3, [r6]
   3cfec:	ldr	sl, [r1]
   3cff0:	add	r5, r5, r3, lsl #3
   3cff4:	add	r0, r3, r0
   3cff8:	cmp	r7, sl
   3cffc:	blt	3cfdc <GetDataSlab+0x1a618>
   3d000:	ldr	r1, [fp, #12]
   3d004:	ldr	r2, [lr]
   3d008:	ldr	r6, [sp, #44]	; 0x2c
   3d00c:	ldr	r1, [r1]
   3d010:	b	3d01c <GetDataSlab+0x1a658>
   3d014:	mov	r1, r2
   3d018:	ldr	r2, [sp, #36]	; 0x24
   3d01c:	mls	r7, r3, sl, r2
   3d020:	str	r2, [sp, #36]	; 0x24
   3d024:	mov	r2, r1
   3d028:	sub	r7, r7, r1
   3d02c:	add	lr, r7, r0
   3d030:	ldr	r0, [fp, #24]
   3d034:	add	r5, r5, r7, lsl #3
   3d038:	cmp	r0, #2
   3d03c:	blt	3d0f4 <GetDataSlab+0x1a730>
   3d040:	ldr	r8, [sp, #28]
   3d044:	mov	r0, #0
   3d048:	ldr	r4, [r6, r0]
   3d04c:	ldr	r1, [sp, #52]	; 0x34
   3d050:	add	r4, r4, #1
   3d054:	str	r4, [r6, r0]
   3d058:	ldr	r7, [r1, r0]
   3d05c:	sdiv	r9, r4, r7
   3d060:	mls	r4, r9, r7, r4
   3d064:	cmp	r4, #0
   3d068:	bne	3d0e4 <GetDataSlab+0x1a720>
   3d06c:	mov	r1, #0
   3d070:	str	r1, [r6, r0]
   3d074:	ldr	r1, [sp, #48]	; 0x30
   3d078:	ldr	r4, [r1, r0]
   3d07c:	sdiv	r7, lr, r4
   3d080:	mls	r7, r7, r4, lr
   3d084:	cmp	r7, #0
   3d088:	beq	3d0b4 <GetDataSlab+0x1a6f0>
   3d08c:	add	r1, sp, #64	; 0x40
   3d090:	mov	r6, r5
   3d094:	ldr	r5, [ip, r0]
   3d098:	sub	r4, r4, r7
   3d09c:	ldr	r1, [r1, r0]
   3d0a0:	mla	r1, r5, r1, r4
   3d0a4:	mov	r5, r6
   3d0a8:	ldr	r6, [sp, #44]	; 0x2c
   3d0ac:	add	lr, r1, lr
   3d0b0:	b	3d0d0 <GetDataSlab+0x1a70c>
   3d0b4:	ldr	r4, [ip, r0]
   3d0b8:	cmp	r4, #0
   3d0bc:	beq	3d0d4 <GetDataSlab+0x1a710>
   3d0c0:	add	r1, sp, #64	; 0x40
   3d0c4:	ldr	r1, [r1, r0]
   3d0c8:	mla	lr, r1, r4, lr
   3d0cc:	mul	r1, r1, r4
   3d0d0:	add	r5, r5, r1, lsl #3
   3d0d4:	subs	r8, r8, #1
   3d0d8:	add	r0, r0, #4
   3d0dc:	bne	3d048 <GetDataSlab+0x1a684>
   3d0e0:	b	3d0f4 <GetDataSlab+0x1a730>
   3d0e4:	ldr	r1, [sp, #24]
   3d0e8:	ldr	r0, [r1, r0]
   3d0ec:	add	r5, r5, r0, lsl #3
   3d0f0:	add	lr, r0, lr
   3d0f4:	ldr	r1, [sp, #32]
   3d0f8:	ldr	r0, [sp, #40]	; 0x28
   3d0fc:	add	r1, sl, r1
   3d100:	cmp	r1, r0
   3d104:	mov	r0, #0
   3d108:	str	r1, [sp, #32]
   3d10c:	blt	3cfb0 <GetDataSlab+0x1a5ec>
   3d110:	b	24900 <GetDataSlab+0x1f3c>
   3d114:	ldr	r0, [sp, #52]	; 0x34
   3d118:	ldr	r1, [sp, #44]	; 0x2c
   3d11c:	cmp	r0, #1
   3d120:	blt	248fc <GetDataSlab+0x1f38>
   3d124:	ldr	r0, [sp, #40]	; 0x28
   3d128:	ldr	r3, [ip], #4
   3d12c:	add	r5, sl, #4
   3d130:	orr	r8, r8, #4
   3d134:	lsl	sl, r4, #3
   3d138:	mls	r0, r1, r4, r0
   3d13c:	str	r3, [sp, #48]	; 0x30
   3d140:	sub	r0, r0, r3
   3d144:	str	r0, [sp, #40]	; 0x28
   3d148:	add	r0, sp, #104	; 0x68
   3d14c:	orr	r6, r0, #4
   3d150:	ldr	r0, [fp, #24]
   3d154:	sub	r0, r0, #1
   3d158:	str	r0, [sp, #28]
   3d15c:	sub	r0, fp, #72	; 0x48
   3d160:	orr	r0, r0, #4
   3d164:	str	r0, [sp, #24]
   3d168:	mla	r0, r1, r4, r3
   3d16c:	str	r0, [sp, #32]
   3d170:	lsl	r0, r1, #1
   3d174:	str	r0, [sp, #36]	; 0x24
   3d178:	ldr	r0, [sp, #56]	; 0x38
   3d17c:	str	r0, [sp, #60]	; 0x3c
   3d180:	mov	r0, #0
   3d184:	str	r0, [sp, #56]	; 0x38
   3d188:	ldr	r3, [sp, #48]	; 0x30
   3d18c:	cmp	r1, #1
   3d190:	add	r0, r7, r3, lsl #3
   3d194:	blt	3d1b4 <GetDataSlab+0x1a7f0>
   3d198:	ldr	r3, [sp, #60]	; 0x3c
   3d19c:	mov	r7, r1
   3d1a0:	ldrh	r4, [r0], sl
   3d1a4:	subs	r7, r7, #1
   3d1a8:	strh	r4, [r3], #2
   3d1ac:	bne	3d1a0 <GetDataSlab+0x1a7dc>
   3d1b0:	ldr	r3, [sp, #32]
   3d1b4:	ldr	r1, [sp, #40]	; 0x28
   3d1b8:	add	r7, r0, r1, lsl #3
   3d1bc:	add	r0, r3, r2
   3d1c0:	add	r2, r0, r1
   3d1c4:	ldr	r0, [fp, #24]
   3d1c8:	cmp	r0, #2
   3d1cc:	blt	3d270 <GetDataSlab+0x1a8ac>
   3d1d0:	ldr	lr, [sp, #28]
   3d1d4:	mov	r0, #0
   3d1d8:	ldr	r3, [r6, r0]
   3d1dc:	add	r3, r3, #1
   3d1e0:	str	r3, [r6, r0]
   3d1e4:	ldr	r4, [r5, r0]
   3d1e8:	sdiv	r1, r3, r4
   3d1ec:	mls	r1, r1, r4, r3
   3d1f0:	cmp	r1, #0
   3d1f4:	bne	3d260 <GetDataSlab+0x1a89c>
   3d1f8:	ldr	r3, [r8, r0]
   3d1fc:	mov	r1, #0
   3d200:	str	r1, [r6, r0]
   3d204:	sdiv	r1, r2, r3
   3d208:	mls	r9, r1, r3, r2
   3d20c:	cmp	r9, #0
   3d210:	beq	3d230 <GetDataSlab+0x1a86c>
   3d214:	add	r1, sp, #64	; 0x40
   3d218:	ldr	r4, [ip, r0]
   3d21c:	sub	r3, r3, r9
   3d220:	ldr	r1, [r1, r0]
   3d224:	mla	r1, r4, r1, r3
   3d228:	add	r2, r1, r2
   3d22c:	b	3d24c <GetDataSlab+0x1a888>
   3d230:	ldr	r3, [ip, r0]
   3d234:	cmp	r3, #0
   3d238:	beq	3d250 <GetDataSlab+0x1a88c>
   3d23c:	add	r1, sp, #64	; 0x40
   3d240:	ldr	r1, [r1, r0]
   3d244:	mla	r2, r1, r3, r2
   3d248:	mul	r1, r1, r3
   3d24c:	add	r7, r7, r1, lsl #3
   3d250:	subs	lr, lr, #1
   3d254:	add	r0, r0, #4
   3d258:	bne	3d1d8 <GetDataSlab+0x1a814>
   3d25c:	b	3d270 <GetDataSlab+0x1a8ac>
   3d260:	ldr	r1, [sp, #24]
   3d264:	ldr	r0, [r1, r0]
   3d268:	add	r7, r7, r0, lsl #3
   3d26c:	add	r2, r0, r2
   3d270:	ldr	r0, [sp, #36]	; 0x24
   3d274:	ldr	r1, [sp, #60]	; 0x3c
   3d278:	ldr	r3, [sp, #56]	; 0x38
   3d27c:	add	r1, r1, r0
   3d280:	ldr	r0, [sp, #52]	; 0x34
   3d284:	str	r1, [sp, #60]	; 0x3c
   3d288:	ldr	r1, [sp, #44]	; 0x2c
   3d28c:	add	r3, r3, r1
   3d290:	cmp	r3, r0
   3d294:	mov	r0, #0
   3d298:	str	r3, [sp, #56]	; 0x38
   3d29c:	blt	3d188 <GetDataSlab+0x1a7c4>
   3d2a0:	b	24900 <GetDataSlab+0x1f3c>
   3d2a4:	ldr	r0, [sp, #52]	; 0x34
   3d2a8:	ldr	r1, [sp, #44]	; 0x2c
   3d2ac:	cmp	r0, #1
   3d2b0:	blt	248fc <GetDataSlab+0x1f38>
   3d2b4:	ldr	r0, [sp, #40]	; 0x28
   3d2b8:	ldr	r3, [ip], #4
   3d2bc:	add	r5, sl, #4
   3d2c0:	orr	r8, r8, #4
   3d2c4:	lsl	sl, r4, #3
   3d2c8:	mls	r0, r1, r4, r0
   3d2cc:	str	r3, [sp, #48]	; 0x30
   3d2d0:	sub	r0, r0, r3
   3d2d4:	str	r0, [sp, #40]	; 0x28
   3d2d8:	add	r0, sp, #104	; 0x68
   3d2dc:	orr	r6, r0, #4
   3d2e0:	ldr	r0, [fp, #24]
   3d2e4:	sub	r0, r0, #1
   3d2e8:	str	r0, [sp, #28]
   3d2ec:	sub	r0, fp, #72	; 0x48
   3d2f0:	orr	r0, r0, #4
   3d2f4:	str	r0, [sp, #24]
   3d2f8:	mla	r0, r1, r4, r3
   3d2fc:	str	r0, [sp, #32]
   3d300:	lsl	r0, r1, #1
   3d304:	str	r0, [sp, #36]	; 0x24
   3d308:	ldr	r0, [sp, #56]	; 0x38
   3d30c:	str	r0, [sp, #60]	; 0x3c
   3d310:	mov	r0, #0
   3d314:	str	r0, [sp, #56]	; 0x38
   3d318:	ldr	r3, [sp, #48]	; 0x30
   3d31c:	cmp	r1, #1
   3d320:	add	r0, r7, r3, lsl #3
   3d324:	blt	3d344 <GetDataSlab+0x1a980>
   3d328:	ldr	r3, [sp, #60]	; 0x3c
   3d32c:	mov	r7, r1
   3d330:	ldrh	r4, [r0], sl
   3d334:	subs	r7, r7, #1
   3d338:	strh	r4, [r3], #2
   3d33c:	bne	3d330 <GetDataSlab+0x1a96c>
   3d340:	ldr	r3, [sp, #32]
   3d344:	ldr	r1, [sp, #40]	; 0x28
   3d348:	add	r7, r0, r1, lsl #3
   3d34c:	add	r0, r3, r2
   3d350:	add	r2, r0, r1
   3d354:	ldr	r0, [fp, #24]
   3d358:	cmp	r0, #2
   3d35c:	blt	3d400 <GetDataSlab+0x1aa3c>
   3d360:	ldr	lr, [sp, #28]
   3d364:	mov	r0, #0
   3d368:	ldr	r3, [r6, r0]
   3d36c:	add	r3, r3, #1
   3d370:	str	r3, [r6, r0]
   3d374:	ldr	r4, [r5, r0]
   3d378:	sdiv	r1, r3, r4
   3d37c:	mls	r1, r1, r4, r3
   3d380:	cmp	r1, #0
   3d384:	bne	3d3f0 <GetDataSlab+0x1aa2c>
   3d388:	ldr	r3, [r8, r0]
   3d38c:	mov	r1, #0
   3d390:	str	r1, [r6, r0]
   3d394:	sdiv	r1, r2, r3
   3d398:	mls	r9, r1, r3, r2
   3d39c:	cmp	r9, #0
   3d3a0:	beq	3d3c0 <GetDataSlab+0x1a9fc>
   3d3a4:	add	r1, sp, #64	; 0x40
   3d3a8:	ldr	r4, [ip, r0]
   3d3ac:	sub	r3, r3, r9
   3d3b0:	ldr	r1, [r1, r0]
   3d3b4:	mla	r1, r4, r1, r3
   3d3b8:	add	r2, r1, r2
   3d3bc:	b	3d3dc <GetDataSlab+0x1aa18>
   3d3c0:	ldr	r3, [ip, r0]
   3d3c4:	cmp	r3, #0
   3d3c8:	beq	3d3e0 <GetDataSlab+0x1aa1c>
   3d3cc:	add	r1, sp, #64	; 0x40
   3d3d0:	ldr	r1, [r1, r0]
   3d3d4:	mla	r2, r1, r3, r2
   3d3d8:	mul	r1, r1, r3
   3d3dc:	add	r7, r7, r1, lsl #3
   3d3e0:	subs	lr, lr, #1
   3d3e4:	add	r0, r0, #4
   3d3e8:	bne	3d368 <GetDataSlab+0x1a9a4>
   3d3ec:	b	3d400 <GetDataSlab+0x1aa3c>
   3d3f0:	ldr	r1, [sp, #24]
   3d3f4:	ldr	r0, [r1, r0]
   3d3f8:	add	r7, r7, r0, lsl #3
   3d3fc:	add	r2, r0, r2
   3d400:	ldr	r0, [sp, #36]	; 0x24
   3d404:	ldr	r1, [sp, #60]	; 0x3c
   3d408:	ldr	r3, [sp, #56]	; 0x38
   3d40c:	add	r1, r1, r0
   3d410:	ldr	r0, [sp, #52]	; 0x34
   3d414:	str	r1, [sp, #60]	; 0x3c
   3d418:	ldr	r1, [sp, #44]	; 0x2c
   3d41c:	add	r3, r3, r1
   3d420:	cmp	r3, r0
   3d424:	mov	r0, #0
   3d428:	str	r3, [sp, #56]	; 0x38
   3d42c:	blt	3d318 <GetDataSlab+0x1a954>
   3d430:	b	24900 <GetDataSlab+0x1f3c>
   3d434:	ldr	r0, [sp, #40]	; 0x28
   3d438:	cmp	r0, #1
   3d43c:	add	r0, sp, #64	; 0x40
   3d440:	blt	248fc <GetDataSlab+0x1f38>
   3d444:	orr	r0, r0, #4
   3d448:	ldr	ip, [fp, #12]
   3d44c:	add	r1, sp, #104	; 0x68
   3d450:	str	r0, [sp, #48]	; 0x30
   3d454:	ldr	r0, [fp, #24]
   3d458:	orr	r6, r1, #4
   3d45c:	ldr	r1, [fp, #20]
   3d460:	str	r6, [sp, #44]	; 0x2c
   3d464:	sub	r0, r0, #1
   3d468:	add	r1, r1, #4
   3d46c:	str	r0, [sp, #24]
   3d470:	sub	r0, fp, #72	; 0x48
   3d474:	str	r1, [sp, #52]	; 0x34
   3d478:	orr	r0, r0, #4
   3d47c:	str	r0, [sp, #20]
   3d480:	ldr	r0, [ip], #4
   3d484:	str	r0, [sp, #28]
   3d488:	mov	r0, #0
   3d48c:	str	r0, [sp, #32]
   3d490:	ldr	r1, [sp, #28]
   3d494:	cmp	sl, #1
   3d498:	add	r5, r5, r1, lsl #3
   3d49c:	add	r0, r1, lr
   3d4a0:	blt	3d4f8 <GetDataSlab+0x1ab34>
   3d4a4:	ldr	r1, [sp, #56]	; 0x38
   3d4a8:	ldr	r2, [sp, #32]
   3d4ac:	ldr	lr, [fp, #8]
   3d4b0:	ldr	r6, [fp, #16]
   3d4b4:	mov	r7, #0
   3d4b8:	add	r4, r1, r2, lsl #2
   3d4bc:	ldr	r1, [fp, #20]
   3d4c0:	ldr	r2, [r5]
   3d4c4:	str	r2, [r4, r7, lsl #2]
   3d4c8:	add	r7, r7, #1
   3d4cc:	ldr	r3, [r6]
   3d4d0:	ldr	sl, [r1]
   3d4d4:	add	r5, r5, r3, lsl #3
   3d4d8:	add	r0, r3, r0
   3d4dc:	cmp	r7, sl
   3d4e0:	blt	3d4c0 <GetDataSlab+0x1aafc>
   3d4e4:	ldr	r1, [fp, #12]
   3d4e8:	ldr	r2, [lr]
   3d4ec:	ldr	r6, [sp, #44]	; 0x2c
   3d4f0:	ldr	r1, [r1]
   3d4f4:	b	3d4fc <GetDataSlab+0x1ab38>
   3d4f8:	ldr	r2, [sp, #36]	; 0x24
   3d4fc:	mls	r7, r3, sl, r2
   3d500:	str	r1, [sp, #28]
   3d504:	sub	r7, r7, r1
   3d508:	add	lr, r7, r0
   3d50c:	ldr	r0, [fp, #24]
   3d510:	add	r5, r5, r7, lsl #3
   3d514:	cmp	r0, #2
   3d518:	blt	3d5d0 <GetDataSlab+0x1ac0c>
   3d51c:	ldr	r8, [sp, #24]
   3d520:	mov	r0, #0
   3d524:	ldr	r4, [r6, r0]
   3d528:	ldr	r1, [sp, #52]	; 0x34
   3d52c:	add	r4, r4, #1
   3d530:	str	r4, [r6, r0]
   3d534:	ldr	r7, [r1, r0]
   3d538:	sdiv	r9, r4, r7
   3d53c:	mls	r4, r9, r7, r4
   3d540:	cmp	r4, #0
   3d544:	bne	3d5c0 <GetDataSlab+0x1abfc>
   3d548:	mov	r1, #0
   3d54c:	str	r1, [r6, r0]
   3d550:	ldr	r1, [sp, #48]	; 0x30
   3d554:	ldr	r4, [r1, r0]
   3d558:	sdiv	r7, lr, r4
   3d55c:	mls	r7, r7, r4, lr
   3d560:	cmp	r7, #0
   3d564:	beq	3d590 <GetDataSlab+0x1abcc>
   3d568:	add	r1, sp, #64	; 0x40
   3d56c:	mov	r6, r5
   3d570:	ldr	r5, [ip, r0]
   3d574:	sub	r4, r4, r7
   3d578:	ldr	r1, [r1, r0]
   3d57c:	mla	r1, r5, r1, r4
   3d580:	mov	r5, r6
   3d584:	ldr	r6, [sp, #44]	; 0x2c
   3d588:	add	lr, r1, lr
   3d58c:	b	3d5ac <GetDataSlab+0x1abe8>
   3d590:	ldr	r4, [ip, r0]
   3d594:	cmp	r4, #0
   3d598:	beq	3d5b0 <GetDataSlab+0x1abec>
   3d59c:	add	r1, sp, #64	; 0x40
   3d5a0:	ldr	r1, [r1, r0]
   3d5a4:	mla	lr, r1, r4, lr
   3d5a8:	mul	r1, r1, r4
   3d5ac:	add	r5, r5, r1, lsl #3
   3d5b0:	subs	r8, r8, #1
   3d5b4:	add	r0, r0, #4
   3d5b8:	bne	3d524 <GetDataSlab+0x1ab60>
   3d5bc:	b	3d5d0 <GetDataSlab+0x1ac0c>
   3d5c0:	ldr	r1, [sp, #20]
   3d5c4:	ldr	r0, [r1, r0]
   3d5c8:	add	r5, r5, r0, lsl #3
   3d5cc:	add	lr, r0, lr
   3d5d0:	str	r2, [sp, #36]	; 0x24
   3d5d4:	ldr	r2, [sp, #32]
   3d5d8:	ldr	r1, [sp, #40]	; 0x28
   3d5dc:	mov	r0, #0
   3d5e0:	add	r2, sl, r2
   3d5e4:	cmp	r2, r1
   3d5e8:	str	r2, [sp, #32]
   3d5ec:	blt	3d490 <GetDataSlab+0x1aacc>
   3d5f0:	b	24900 <GetDataSlab+0x1f3c>
   3d5f4:	ldr	r0, [sp, #40]	; 0x28
   3d5f8:	cmp	r0, #1
   3d5fc:	add	r0, sp, #64	; 0x40
   3d600:	blt	248fc <GetDataSlab+0x1f38>
   3d604:	orr	r0, r0, #4
   3d608:	ldr	ip, [fp, #12]
   3d60c:	add	r1, sp, #104	; 0x68
   3d610:	str	r0, [sp, #48]	; 0x30
   3d614:	ldr	r0, [fp, #24]
   3d618:	orr	r6, r1, #4
   3d61c:	ldr	r1, [fp, #20]
   3d620:	str	r6, [sp, #44]	; 0x2c
   3d624:	ldr	r2, [ip], #4
   3d628:	sub	r0, r0, #1
   3d62c:	add	r1, r1, #4
   3d630:	str	r0, [sp, #28]
   3d634:	sub	r0, fp, #72	; 0x48
   3d638:	str	r1, [sp, #52]	; 0x34
   3d63c:	orr	r0, r0, #4
   3d640:	str	r0, [sp, #24]
   3d644:	mov	r0, #0
   3d648:	str	r0, [sp, #32]
   3d64c:	add	r5, r5, r2, lsl #3
   3d650:	add	r0, r2, lr
   3d654:	cmp	sl, #1
   3d658:	blt	3d6b0 <GetDataSlab+0x1acec>
   3d65c:	ldr	r1, [sp, #56]	; 0x38
   3d660:	ldr	r2, [sp, #32]
   3d664:	ldr	lr, [fp, #8]
   3d668:	ldr	r6, [fp, #16]
   3d66c:	mov	r7, #0
   3d670:	add	r4, r1, r2, lsl #2
   3d674:	ldr	r1, [fp, #20]
   3d678:	ldr	r2, [r5]
   3d67c:	str	r2, [r4, r7, lsl #2]
   3d680:	add	r7, r7, #1
   3d684:	ldr	r3, [r6]
   3d688:	ldr	sl, [r1]
   3d68c:	add	r5, r5, r3, lsl #3
   3d690:	add	r0, r3, r0
   3d694:	cmp	r7, sl
   3d698:	blt	3d678 <GetDataSlab+0x1acb4>
   3d69c:	ldr	r1, [fp, #12]
   3d6a0:	ldr	r2, [lr]
   3d6a4:	ldr	r6, [sp, #44]	; 0x2c
   3d6a8:	ldr	r1, [r1]
   3d6ac:	b	3d6b8 <GetDataSlab+0x1acf4>
   3d6b0:	mov	r1, r2
   3d6b4:	ldr	r2, [sp, #36]	; 0x24
   3d6b8:	mls	r7, r3, sl, r2
   3d6bc:	str	r2, [sp, #36]	; 0x24
   3d6c0:	mov	r2, r1
   3d6c4:	sub	r7, r7, r1
   3d6c8:	add	lr, r7, r0
   3d6cc:	ldr	r0, [fp, #24]
   3d6d0:	add	r5, r5, r7, lsl #3
   3d6d4:	cmp	r0, #2
   3d6d8:	blt	3d790 <GetDataSlab+0x1adcc>
   3d6dc:	ldr	r8, [sp, #28]
   3d6e0:	mov	r0, #0
   3d6e4:	ldr	r4, [r6, r0]
   3d6e8:	ldr	r1, [sp, #52]	; 0x34
   3d6ec:	add	r4, r4, #1
   3d6f0:	str	r4, [r6, r0]
   3d6f4:	ldr	r7, [r1, r0]
   3d6f8:	sdiv	r9, r4, r7
   3d6fc:	mls	r4, r9, r7, r4
   3d700:	cmp	r4, #0
   3d704:	bne	3d780 <GetDataSlab+0x1adbc>
   3d708:	mov	r1, #0
   3d70c:	str	r1, [r6, r0]
   3d710:	ldr	r1, [sp, #48]	; 0x30
   3d714:	ldr	r4, [r1, r0]
   3d718:	sdiv	r7, lr, r4
   3d71c:	mls	r7, r7, r4, lr
   3d720:	cmp	r7, #0
   3d724:	beq	3d750 <GetDataSlab+0x1ad8c>
   3d728:	add	r1, sp, #64	; 0x40
   3d72c:	mov	r6, r5
   3d730:	ldr	r5, [ip, r0]
   3d734:	sub	r4, r4, r7
   3d738:	ldr	r1, [r1, r0]
   3d73c:	mla	r1, r5, r1, r4
   3d740:	mov	r5, r6
   3d744:	ldr	r6, [sp, #44]	; 0x2c
   3d748:	add	lr, r1, lr
   3d74c:	b	3d76c <GetDataSlab+0x1ada8>
   3d750:	ldr	r4, [ip, r0]
   3d754:	cmp	r4, #0
   3d758:	beq	3d770 <GetDataSlab+0x1adac>
   3d75c:	add	r1, sp, #64	; 0x40
   3d760:	ldr	r1, [r1, r0]
   3d764:	mla	lr, r1, r4, lr
   3d768:	mul	r1, r1, r4
   3d76c:	add	r5, r5, r1, lsl #3
   3d770:	subs	r8, r8, #1
   3d774:	add	r0, r0, #4
   3d778:	bne	3d6e4 <GetDataSlab+0x1ad20>
   3d77c:	b	3d790 <GetDataSlab+0x1adcc>
   3d780:	ldr	r1, [sp, #24]
   3d784:	ldr	r0, [r1, r0]
   3d788:	add	r5, r5, r0, lsl #3
   3d78c:	add	lr, r0, lr
   3d790:	ldr	r1, [sp, #32]
   3d794:	ldr	r0, [sp, #40]	; 0x28
   3d798:	add	r1, sl, r1
   3d79c:	cmp	r1, r0
   3d7a0:	mov	r0, #0
   3d7a4:	str	r1, [sp, #32]
   3d7a8:	blt	3d64c <GetDataSlab+0x1ac88>
   3d7ac:	b	24900 <GetDataSlab+0x1f3c>
   3d7b0:	ldr	r0, [sp, #52]	; 0x34
   3d7b4:	cmp	r0, #1
   3d7b8:	blt	248fc <GetDataSlab+0x1f38>
   3d7bc:	ldr	r1, [sp, #44]	; 0x2c
   3d7c0:	ldr	r0, [sp, #40]	; 0x28
   3d7c4:	ldr	r3, [ip], #4
   3d7c8:	add	r5, sl, #4
   3d7cc:	lsl	sl, r4, #3
   3d7d0:	str	ip, [sp, #60]	; 0x3c
   3d7d4:	orr	ip, r8, #4
   3d7d8:	mls	r0, r1, r4, r0
   3d7dc:	str	r3, [sp, #40]	; 0x28
   3d7e0:	sub	r0, r0, r3
   3d7e4:	str	r0, [sp, #36]	; 0x24
   3d7e8:	add	r0, sp, #104	; 0x68
   3d7ec:	orr	r6, r0, #4
   3d7f0:	ldr	r0, [fp, #24]
   3d7f4:	sub	r0, r0, #1
   3d7f8:	str	r0, [sp, #24]
   3d7fc:	sub	r0, fp, #72	; 0x48
   3d800:	orr	r0, r0, #4
   3d804:	str	r0, [sp, #20]
   3d808:	mla	r0, r1, r4, r3
   3d80c:	str	r0, [sp, #28]
   3d810:	lsl	r0, r1, #3
   3d814:	str	r0, [sp, #32]
   3d818:	mov	r0, #0
   3d81c:	str	r0, [sp, #48]	; 0x30
   3d820:	ldr	r3, [sp, #40]	; 0x28
   3d824:	cmp	r1, #1
   3d828:	add	r0, r7, r3, lsl #3
   3d82c:	blt	3d854 <GetDataSlab+0x1ae90>
   3d830:	ldr	r3, [sp, #56]	; 0x38
   3d834:	mov	r7, r1
   3d838:	ldrd	r8, [r0]
   3d83c:	add	r0, r0, sl
   3d840:	subs	r7, r7, #1
   3d844:	strd	r8, [r3]
   3d848:	add	r3, r3, #8
   3d84c:	bne	3d838 <GetDataSlab+0x1ae74>
   3d850:	ldr	r3, [sp, #28]
   3d854:	ldr	r1, [sp, #36]	; 0x24
   3d858:	add	r8, sp, #64	; 0x40
   3d85c:	add	r7, r0, r1, lsl #3
   3d860:	add	r0, r3, r2
   3d864:	add	r2, r0, r1
   3d868:	ldr	r0, [fp, #24]
   3d86c:	cmp	r0, #2
   3d870:	blt	3d914 <GetDataSlab+0x1af50>
   3d874:	ldr	lr, [sp, #24]
   3d878:	mov	r0, #0
   3d87c:	ldr	r3, [r6, r0]
   3d880:	add	r3, r3, #1
   3d884:	str	r3, [r6, r0]
   3d888:	ldr	r4, [r5, r0]
   3d88c:	sdiv	r1, r3, r4
   3d890:	mls	r1, r1, r4, r3
   3d894:	cmp	r1, #0
   3d898:	bne	3d904 <GetDataSlab+0x1af40>
   3d89c:	ldr	r3, [ip, r0]
   3d8a0:	mov	r1, #0
   3d8a4:	str	r1, [r6, r0]
   3d8a8:	sdiv	r1, r2, r3
   3d8ac:	mls	r9, r1, r3, r2
   3d8b0:	cmp	r9, #0
   3d8b4:	beq	3d8d4 <GetDataSlab+0x1af10>
   3d8b8:	ldr	r4, [sp, #60]	; 0x3c
   3d8bc:	ldr	r1, [r8, r0]
   3d8c0:	sub	r3, r3, r9
   3d8c4:	ldr	r4, [r4, r0]
   3d8c8:	mla	r1, r4, r1, r3
   3d8cc:	add	r2, r1, r2
   3d8d0:	b	3d8f0 <GetDataSlab+0x1af2c>
   3d8d4:	ldr	r1, [sp, #60]	; 0x3c
   3d8d8:	ldr	r3, [r1, r0]
   3d8dc:	cmp	r3, #0
   3d8e0:	beq	3d8f4 <GetDataSlab+0x1af30>
   3d8e4:	ldr	r1, [r8, r0]
   3d8e8:	mla	r2, r1, r3, r2
   3d8ec:	mul	r1, r1, r3
   3d8f0:	add	r7, r7, r1, lsl #3
   3d8f4:	subs	lr, lr, #1
   3d8f8:	add	r0, r0, #4
   3d8fc:	bne	3d87c <GetDataSlab+0x1aeb8>
   3d900:	b	3d914 <GetDataSlab+0x1af50>
   3d904:	ldr	r1, [sp, #20]
   3d908:	ldr	r0, [r1, r0]
   3d90c:	add	r7, r7, r0, lsl #3
   3d910:	add	r2, r0, r2
   3d914:	ldr	r0, [sp, #32]
   3d918:	ldr	r1, [sp, #56]	; 0x38
   3d91c:	ldr	r4, [sp, #48]	; 0x30
   3d920:	ldr	r3, [sp, #52]	; 0x34
   3d924:	add	r1, r1, r0
   3d928:	mov	r0, #0
   3d92c:	str	r1, [sp, #56]	; 0x38
   3d930:	ldr	r1, [sp, #44]	; 0x2c
   3d934:	add	r4, r4, r1
   3d938:	cmp	r4, r3
   3d93c:	str	r4, [sp, #48]	; 0x30
   3d940:	blt	3d820 <GetDataSlab+0x1ae5c>
   3d944:	b	24900 <GetDataSlab+0x1f3c>
   3d948:	ldr	r0, [sp, #52]	; 0x34
   3d94c:	cmp	r0, #1
   3d950:	blt	248fc <GetDataSlab+0x1f38>
   3d954:	ldr	r1, [sp, #44]	; 0x2c
   3d958:	ldr	r0, [sp, #40]	; 0x28
   3d95c:	ldr	r3, [ip], #4
   3d960:	add	r5, sl, #4
   3d964:	lsl	sl, r4, #3
   3d968:	str	ip, [sp, #60]	; 0x3c
   3d96c:	orr	ip, r8, #4
   3d970:	mls	r0, r1, r4, r0
   3d974:	str	r3, [sp, #40]	; 0x28
   3d978:	sub	r0, r0, r3
   3d97c:	str	r0, [sp, #36]	; 0x24
   3d980:	add	r0, sp, #104	; 0x68
   3d984:	orr	r6, r0, #4
   3d988:	ldr	r0, [fp, #24]
   3d98c:	sub	r0, r0, #1
   3d990:	str	r0, [sp, #24]
   3d994:	sub	r0, fp, #72	; 0x48
   3d998:	orr	r0, r0, #4
   3d99c:	str	r0, [sp, #20]
   3d9a0:	mla	r0, r1, r4, r3
   3d9a4:	str	r0, [sp, #28]
   3d9a8:	lsl	r0, r1, #3
   3d9ac:	str	r0, [sp, #32]
   3d9b0:	mov	r0, #0
   3d9b4:	str	r0, [sp, #48]	; 0x30
   3d9b8:	ldr	r3, [sp, #40]	; 0x28
   3d9bc:	cmp	r1, #1
   3d9c0:	add	r0, r7, r3, lsl #3
   3d9c4:	blt	3d9ec <GetDataSlab+0x1b028>
   3d9c8:	ldr	r3, [sp, #56]	; 0x38
   3d9cc:	mov	r7, r1
   3d9d0:	ldrd	r8, [r0]
   3d9d4:	add	r0, r0, sl
   3d9d8:	subs	r7, r7, #1
   3d9dc:	strd	r8, [r3]
   3d9e0:	add	r3, r3, #8
   3d9e4:	bne	3d9d0 <GetDataSlab+0x1b00c>
   3d9e8:	ldr	r3, [sp, #28]
   3d9ec:	ldr	r1, [sp, #36]	; 0x24
   3d9f0:	add	r8, sp, #64	; 0x40
   3d9f4:	add	r7, r0, r1, lsl #3
   3d9f8:	add	r0, r3, r2
   3d9fc:	add	r2, r0, r1
   3da00:	ldr	r0, [fp, #24]
   3da04:	cmp	r0, #2
   3da08:	blt	3daac <GetDataSlab+0x1b0e8>
   3da0c:	ldr	lr, [sp, #24]
   3da10:	mov	r0, #0
   3da14:	ldr	r3, [r6, r0]
   3da18:	add	r3, r3, #1
   3da1c:	str	r3, [r6, r0]
   3da20:	ldr	r4, [r5, r0]
   3da24:	sdiv	r1, r3, r4
   3da28:	mls	r1, r1, r4, r3
   3da2c:	cmp	r1, #0
   3da30:	bne	3da9c <GetDataSlab+0x1b0d8>
   3da34:	ldr	r3, [ip, r0]
   3da38:	mov	r1, #0
   3da3c:	str	r1, [r6, r0]
   3da40:	sdiv	r1, r2, r3
   3da44:	mls	r9, r1, r3, r2
   3da48:	cmp	r9, #0
   3da4c:	beq	3da6c <GetDataSlab+0x1b0a8>
   3da50:	ldr	r4, [sp, #60]	; 0x3c
   3da54:	ldr	r1, [r8, r0]
   3da58:	sub	r3, r3, r9
   3da5c:	ldr	r4, [r4, r0]
   3da60:	mla	r1, r4, r1, r3
   3da64:	add	r2, r1, r2
   3da68:	b	3da88 <GetDataSlab+0x1b0c4>
   3da6c:	ldr	r1, [sp, #60]	; 0x3c
   3da70:	ldr	r3, [r1, r0]
   3da74:	cmp	r3, #0
   3da78:	beq	3da8c <GetDataSlab+0x1b0c8>
   3da7c:	ldr	r1, [r8, r0]
   3da80:	mla	r2, r1, r3, r2
   3da84:	mul	r1, r1, r3
   3da88:	add	r7, r7, r1, lsl #3
   3da8c:	subs	lr, lr, #1
   3da90:	add	r0, r0, #4
   3da94:	bne	3da14 <GetDataSlab+0x1b050>
   3da98:	b	3daac <GetDataSlab+0x1b0e8>
   3da9c:	ldr	r1, [sp, #20]
   3daa0:	ldr	r0, [r1, r0]
   3daa4:	add	r7, r7, r0, lsl #3
   3daa8:	add	r2, r0, r2
   3daac:	ldr	r0, [sp, #32]
   3dab0:	ldr	r1, [sp, #56]	; 0x38
   3dab4:	ldr	r4, [sp, #48]	; 0x30
   3dab8:	ldr	r3, [sp, #52]	; 0x34
   3dabc:	add	r1, r1, r0
   3dac0:	mov	r0, #0
   3dac4:	str	r1, [sp, #56]	; 0x38
   3dac8:	ldr	r1, [sp, #44]	; 0x2c
   3dacc:	add	r4, r4, r1
   3dad0:	cmp	r4, r3
   3dad4:	str	r4, [sp, #48]	; 0x30
   3dad8:	blt	3d9b8 <GetDataSlab+0x1aff4>
   3dadc:	b	24900 <GetDataSlab+0x1f3c>
   3dae0:	ldr	r0, [sp, #56]	; 0x38
   3dae4:	cmp	r0, #1
   3dae8:	blt	248fc <GetDataSlab+0x1f38>
   3daec:	ldr	r0, [sp, #36]	; 0x24
   3daf0:	ldr	r1, [sp, #32]
   3daf4:	mul	r2, r7, r6
   3daf8:	mov	r3, #0
   3dafc:	mla	r0, r1, r6, r0
   3db00:	add	r1, r9, r0
   3db04:	cmp	r8, #1
   3db08:	blt	3db34 <GetDataSlab+0x1b170>
   3db0c:	mov	r0, #0
   3db10:	mov	r7, r8
   3db14:	ldrb	r6, [r1, r0]
   3db18:	add	r0, r0, sl
   3db1c:	subs	r7, r7, #1
   3db20:	vmov	s0, r6
   3db24:	vcvt.f64.u32	d16, s0
   3db28:	vstr	d16, [lr]
   3db2c:	add	lr, lr, #8
   3db30:	bne	3db14 <GetDataSlab+0x1b150>
   3db34:	ldr	r7, [sp, #56]	; 0x38
   3db38:	add	r3, r3, #1
   3db3c:	add	r1, r1, r2
   3db40:	mov	r0, #0
   3db44:	cmp	r3, r7
   3db48:	bne	3db04 <GetDataSlab+0x1b140>
   3db4c:	b	24900 <GetDataSlab+0x1f3c>
   3db50:	ldr	r0, [sp, #56]	; 0x38
   3db54:	cmp	r0, #1
   3db58:	blt	248fc <GetDataSlab+0x1f38>
   3db5c:	ldr	r0, [sp, #36]	; 0x24
   3db60:	ldr	r1, [sp, #32]
   3db64:	lsl	r3, sl, #1
   3db68:	mla	r0, r1, r6, r0
   3db6c:	add	r1, r9, r0, lsl #1
   3db70:	mul	r0, r7, r6
   3db74:	mov	r7, #0
   3db78:	lsl	r2, r0, #1
   3db7c:	cmp	r8, #1
   3db80:	blt	3dbac <GetDataSlab+0x1b1e8>
   3db84:	mov	r0, #0
   3db88:	mov	r6, r8
   3db8c:	ldrsh	r5, [r1, -r0]
   3db90:	sub	r0, r0, r3
   3db94:	subs	r6, r6, #1
   3db98:	vmov	s0, r5
   3db9c:	vcvt.f64.s32	d16, s0
   3dba0:	vstr	d16, [lr]
   3dba4:	add	lr, lr, #8
   3dba8:	bne	3db8c <GetDataSlab+0x1b1c8>
   3dbac:	ldr	r6, [sp, #56]	; 0x38
   3dbb0:	add	r7, r7, #1
   3dbb4:	add	r1, r1, r2
   3dbb8:	mov	r0, #0
   3dbbc:	cmp	r7, r6
   3dbc0:	bne	3db7c <GetDataSlab+0x1b1b8>
   3dbc4:	b	24900 <GetDataSlab+0x1f3c>
   3dbc8:	ldr	r0, [sp, #56]	; 0x38
   3dbcc:	cmp	r0, #1
   3dbd0:	blt	248fc <GetDataSlab+0x1f38>
   3dbd4:	ldr	r0, [sp, #36]	; 0x24
   3dbd8:	ldr	r1, [sp, #32]
   3dbdc:	lsl	r3, sl, #1
   3dbe0:	mla	r0, r1, r6, r0
   3dbe4:	add	r1, r9, r0, lsl #1
   3dbe8:	mul	r0, r7, r6
   3dbec:	mov	r7, #0
   3dbf0:	lsl	r2, r0, #1
   3dbf4:	cmp	r8, #1
   3dbf8:	blt	3dc24 <GetDataSlab+0x1b260>
   3dbfc:	mov	r0, #0
   3dc00:	mov	r6, r8
   3dc04:	ldrh	r5, [r1, -r0]
   3dc08:	sub	r0, r0, r3
   3dc0c:	subs	r6, r6, #1
   3dc10:	vmov	s0, r5
   3dc14:	vcvt.f64.u32	d16, s0
   3dc18:	vstr	d16, [lr]
   3dc1c:	add	lr, lr, #8
   3dc20:	bne	3dc04 <GetDataSlab+0x1b240>
   3dc24:	ldr	r6, [sp, #56]	; 0x38
   3dc28:	add	r7, r7, #1
   3dc2c:	add	r1, r1, r2
   3dc30:	mov	r0, #0
   3dc34:	cmp	r7, r6
   3dc38:	bne	3dbf4 <GetDataSlab+0x1b230>
   3dc3c:	b	24900 <GetDataSlab+0x1f3c>
   3dc40:	ldr	r0, [sp, #56]	; 0x38
   3dc44:	cmp	r0, #1
   3dc48:	blt	248fc <GetDataSlab+0x1f38>
   3dc4c:	ldr	r0, [sp, #36]	; 0x24
   3dc50:	ldr	r1, [sp, #32]
   3dc54:	lsl	r3, sl, #2
   3dc58:	mla	r0, r1, r6, r0
   3dc5c:	add	r1, r9, r0, lsl #2
   3dc60:	mul	r0, r7, r6
   3dc64:	mov	r7, #0
   3dc68:	lsl	r2, r0, #2
   3dc6c:	cmp	r8, #1
   3dc70:	blt	3dc9c <GetDataSlab+0x1b2d8>
   3dc74:	mov	r0, #0
   3dc78:	mov	r6, r8
   3dc7c:	sub	r5, r1, r0
   3dc80:	sub	r0, r0, r3
   3dc84:	subs	r6, r6, #1
   3dc88:	vldr	s0, [r5]
   3dc8c:	vcvt.f64.s32	d16, s0
   3dc90:	vstr	d16, [lr]
   3dc94:	add	lr, lr, #8
   3dc98:	bne	3dc7c <GetDataSlab+0x1b2b8>
   3dc9c:	ldr	r6, [sp, #56]	; 0x38
   3dca0:	add	r7, r7, #1
   3dca4:	add	r1, r1, r2
   3dca8:	mov	r0, #0
   3dcac:	cmp	r7, r6
   3dcb0:	bne	3dc6c <GetDataSlab+0x1b2a8>
   3dcb4:	b	24900 <GetDataSlab+0x1f3c>
   3dcb8:	ldr	r0, [sp, #56]	; 0x38
   3dcbc:	cmp	r0, #1
   3dcc0:	blt	248fc <GetDataSlab+0x1f38>
   3dcc4:	ldr	r0, [sp, #36]	; 0x24
   3dcc8:	ldr	r1, [sp, #32]
   3dccc:	lsl	r3, sl, #2
   3dcd0:	mla	r0, r1, r6, r0
   3dcd4:	add	r1, r9, r0, lsl #2
   3dcd8:	mul	r0, r7, r6
   3dcdc:	mov	r7, #0
   3dce0:	lsl	r2, r0, #2
   3dce4:	cmp	r8, #1
   3dce8:	blt	3dd14 <GetDataSlab+0x1b350>
   3dcec:	mov	r0, #0
   3dcf0:	mov	r6, r8
   3dcf4:	sub	r5, r1, r0
   3dcf8:	sub	r0, r0, r3
   3dcfc:	subs	r6, r6, #1
   3dd00:	vldr	s0, [r5]
   3dd04:	vcvt.f64.u32	d16, s0
   3dd08:	vstr	d16, [lr]
   3dd0c:	add	lr, lr, #8
   3dd10:	bne	3dcf4 <GetDataSlab+0x1b330>
   3dd14:	ldr	r6, [sp, #56]	; 0x38
   3dd18:	add	r7, r7, #1
   3dd1c:	add	r1, r1, r2
   3dd20:	mov	r0, #0
   3dd24:	cmp	r7, r6
   3dd28:	bne	3dce4 <GetDataSlab+0x1b320>
   3dd2c:	b	24900 <GetDataSlab+0x1f3c>
   3dd30:	ldr	r0, [sp, #56]	; 0x38
   3dd34:	cmp	r0, #1
   3dd38:	blt	248fc <GetDataSlab+0x1f38>
   3dd3c:	ldr	r0, [sp, #36]	; 0x24
   3dd40:	ldr	r1, [sp, #32]
   3dd44:	lsl	r3, sl, #2
   3dd48:	mla	r0, r1, r6, r0
   3dd4c:	add	r1, r9, r0, lsl #2
   3dd50:	mul	r0, r7, r6
   3dd54:	mov	r7, #0
   3dd58:	lsl	r2, r0, #2
   3dd5c:	cmp	r8, #1
   3dd60:	blt	3dd88 <GetDataSlab+0x1b3c4>
   3dd64:	mov	r0, r1
   3dd68:	mov	r6, r8
   3dd6c:	vldr	s0, [r0]
   3dd70:	add	r0, r0, r3
   3dd74:	subs	r6, r6, #1
   3dd78:	vcvt.f64.f32	d16, s0
   3dd7c:	vstr	d16, [lr]
   3dd80:	add	lr, lr, #8
   3dd84:	bne	3dd6c <GetDataSlab+0x1b3a8>
   3dd88:	ldr	r6, [sp, #56]	; 0x38
   3dd8c:	add	r7, r7, #1
   3dd90:	add	r1, r1, r2
   3dd94:	mov	r0, #0
   3dd98:	cmp	r7, r6
   3dd9c:	bne	3dd5c <GetDataSlab+0x1b398>
   3dda0:	b	24900 <GetDataSlab+0x1f3c>
   3dda4:	ldr	r0, [sp, #56]	; 0x38
   3dda8:	cmp	r0, #1
   3ddac:	blt	248fc <GetDataSlab+0x1f38>
   3ddb0:	ldr	r0, [sp, #36]	; 0x24
   3ddb4:	ldr	r1, [sp, #32]
   3ddb8:	lsl	r3, sl, #3
   3ddbc:	mla	r0, r1, r6, r0
   3ddc0:	add	r1, r9, r0, lsl #3
   3ddc4:	mul	r0, r7, r6
   3ddc8:	mov	r7, #0
   3ddcc:	lsl	r2, r0, #3
   3ddd0:	cmp	r8, #1
   3ddd4:	blt	3ddf8 <GetDataSlab+0x1b434>
   3ddd8:	mov	r0, r1
   3dddc:	mov	r6, r8
   3dde0:	vldr	d16, [r0]
   3dde4:	add	r0, r0, r3
   3dde8:	subs	r6, r6, #1
   3ddec:	vstr	d16, [lr]
   3ddf0:	add	lr, lr, #8
   3ddf4:	bne	3dde0 <GetDataSlab+0x1b41c>
   3ddf8:	ldr	r6, [sp, #56]	; 0x38
   3ddfc:	add	r7, r7, #1
   3de00:	add	r1, r1, r2
   3de04:	mov	r0, #0
   3de08:	cmp	r7, r6
   3de0c:	bne	3ddd0 <GetDataSlab+0x1b40c>
   3de10:	b	24900 <GetDataSlab+0x1f3c>
   3de14:	ldr	r0, [sp, #56]	; 0x38
   3de18:	cmp	r0, #1
   3de1c:	blt	248fc <GetDataSlab+0x1f38>
   3de20:	ldr	r0, [sp, #36]	; 0x24
   3de24:	ldr	r1, [sp, #32]
   3de28:	mla	r0, r1, r6, r0
   3de2c:	mov	r1, r6
   3de30:	add	r6, r9, r0, lsl #3
   3de34:	mul	r0, r7, r1
   3de38:	lsl	r7, sl, #3
   3de3c:	mov	r1, #0
   3de40:	lsl	r0, r0, #3
   3de44:	str	r0, [sp, #28]
   3de48:	cmp	r8, #1
   3de4c:	str	r1, [sp, #60]	; 0x3c
   3de50:	blt	3de88 <GetDataSlab+0x1b4c4>
   3de54:	mov	r9, #0
   3de58:	mov	r4, r8
   3de5c:	mov	r1, r6
   3de60:	mov	r5, lr
   3de64:	ldr	r0, [r1, -r9]!
   3de68:	ldr	r1, [r1, #4]
   3de6c:	bl	4b404 <__aeabi_l2d>
   3de70:	mov	lr, r5
   3de74:	sub	r9, r9, r7
   3de78:	subs	r4, r4, #1
   3de7c:	strd	r0, [lr]
   3de80:	add	lr, r5, #8
   3de84:	bne	3de5c <GetDataSlab+0x1b498>
   3de88:	ldr	r0, [sp, #28]
   3de8c:	ldr	r1, [sp, #60]	; 0x3c
   3de90:	add	r6, r6, r0
   3de94:	ldr	r0, [sp, #56]	; 0x38
   3de98:	add	r1, r1, #1
   3de9c:	cmp	r1, r0
   3dea0:	bne	3de48 <GetDataSlab+0x1b484>
   3dea4:	ldr	r9, [sp, #48]	; 0x30
   3dea8:	ldr	r3, [sp, #52]	; 0x34
   3deac:	ldr	r6, [sp, #40]	; 0x28
   3deb0:	mov	r0, #0
   3deb4:	cmp	r3, #13
   3deb8:	bne	24900 <GetDataSlab+0x1f3c>
   3debc:	ldr	r0, [sp, #56]	; 0x38
   3dec0:	cmp	r0, #1
   3dec4:	blt	248fc <GetDataSlab+0x1f38>
   3dec8:	ldr	r0, [sp, #36]	; 0x24
   3decc:	ldr	r1, [sp, #32]
   3ded0:	lsl	sl, sl, #3
   3ded4:	mla	r0, r1, r6, r0
   3ded8:	mov	r1, r6
   3dedc:	add	r6, r9, r0, lsl #3
   3dee0:	ldr	r0, [sp, #44]	; 0x2c
   3dee4:	mov	r9, #0
   3dee8:	mul	r0, r0, r1
   3deec:	lsl	r0, r0, #3
   3def0:	str	r0, [sp, #60]	; 0x3c
   3def4:	cmp	r8, #1
   3def8:	blt	3df30 <GetDataSlab+0x1b56c>
   3defc:	mov	r7, #0
   3df00:	mov	r4, r8
   3df04:	mov	r1, r6
   3df08:	mov	r5, lr
   3df0c:	ldr	r0, [r1, -r7]!
   3df10:	ldr	r1, [r1, #4]
   3df14:	bl	4b3f0 <__aeabi_ul2d>
   3df18:	mov	lr, r5
   3df1c:	sub	r7, r7, sl
   3df20:	subs	r4, r4, #1
   3df24:	strd	r0, [lr]
   3df28:	add	lr, r5, #8
   3df2c:	bne	3df04 <GetDataSlab+0x1b540>
   3df30:	ldr	r0, [sp, #60]	; 0x3c
   3df34:	ldr	r1, [sp, #56]	; 0x38
   3df38:	add	r9, r9, #1
   3df3c:	add	r6, r6, r0
   3df40:	mov	r0, #0
   3df44:	cmp	r9, r1
   3df48:	bne	3def4 <GetDataSlab+0x1b530>
   3df4c:	b	24900 <GetDataSlab+0x1f3c>
   3df50:	ldr	r0, [sp, #56]	; 0x38
   3df54:	cmp	r0, #1
   3df58:	blt	248fc <GetDataSlab+0x1f38>
   3df5c:	ldr	r0, [sp, #36]	; 0x24
   3df60:	ldr	r1, [sp, #32]
   3df64:	mul	r2, r7, r6
   3df68:	mov	r3, #0
   3df6c:	mla	r0, r1, r6, r0
   3df70:	add	r1, r9, r0
   3df74:	cmp	r8, #1
   3df78:	blt	3dfa4 <GetDataSlab+0x1b5e0>
   3df7c:	mov	r0, #0
   3df80:	mov	r7, r8
   3df84:	ldrb	r6, [r1, r0]
   3df88:	add	r0, r0, sl
   3df8c:	subs	r7, r7, #1
   3df90:	vmov	s0, r6
   3df94:	vcvt.f32.u32	s0, s0
   3df98:	vstr	s0, [lr]
   3df9c:	add	lr, lr, #4
   3dfa0:	bne	3df84 <GetDataSlab+0x1b5c0>
   3dfa4:	ldr	r7, [sp, #56]	; 0x38
   3dfa8:	add	r3, r3, #1
   3dfac:	add	r1, r1, r2
   3dfb0:	mov	r0, #0
   3dfb4:	cmp	r3, r7
   3dfb8:	bne	3df74 <GetDataSlab+0x1b5b0>
   3dfbc:	b	24900 <GetDataSlab+0x1f3c>
   3dfc0:	ldr	r0, [sp, #56]	; 0x38
   3dfc4:	cmp	r0, #1
   3dfc8:	blt	248fc <GetDataSlab+0x1f38>
   3dfcc:	ldr	r0, [sp, #36]	; 0x24
   3dfd0:	ldr	r1, [sp, #32]
   3dfd4:	lsl	r3, sl, #1
   3dfd8:	mla	r0, r1, r6, r0
   3dfdc:	add	r1, r9, r0, lsl #1
   3dfe0:	mul	r0, r7, r6
   3dfe4:	mov	r7, #0
   3dfe8:	lsl	r2, r0, #1
   3dfec:	cmp	r8, #1
   3dff0:	blt	3e01c <GetDataSlab+0x1b658>
   3dff4:	mov	r0, #0
   3dff8:	mov	r6, r8
   3dffc:	ldrsh	r5, [r1, -r0]
   3e000:	sub	r0, r0, r3
   3e004:	subs	r6, r6, #1
   3e008:	vmov	s0, r5
   3e00c:	vcvt.f32.s32	s0, s0
   3e010:	vstr	s0, [lr]
   3e014:	add	lr, lr, #4
   3e018:	bne	3dffc <GetDataSlab+0x1b638>
   3e01c:	ldr	r6, [sp, #56]	; 0x38
   3e020:	add	r7, r7, #1
   3e024:	add	r1, r1, r2
   3e028:	mov	r0, #0
   3e02c:	cmp	r7, r6
   3e030:	bne	3dfec <GetDataSlab+0x1b628>
   3e034:	b	24900 <GetDataSlab+0x1f3c>
   3e038:	ldr	r0, [sp, #56]	; 0x38
   3e03c:	cmp	r0, #1
   3e040:	blt	248fc <GetDataSlab+0x1f38>
   3e044:	ldr	r0, [sp, #36]	; 0x24
   3e048:	ldr	r1, [sp, #32]
   3e04c:	lsl	r3, sl, #1
   3e050:	mla	r0, r1, r6, r0
   3e054:	add	r1, r9, r0, lsl #1
   3e058:	mul	r0, r7, r6
   3e05c:	mov	r7, #0
   3e060:	lsl	r2, r0, #1
   3e064:	cmp	r8, #1
   3e068:	blt	3e094 <GetDataSlab+0x1b6d0>
   3e06c:	mov	r0, #0
   3e070:	mov	r6, r8
   3e074:	ldrh	r5, [r1, -r0]
   3e078:	sub	r0, r0, r3
   3e07c:	subs	r6, r6, #1
   3e080:	vmov	s0, r5
   3e084:	vcvt.f32.u32	s0, s0
   3e088:	vstr	s0, [lr]
   3e08c:	add	lr, lr, #4
   3e090:	bne	3e074 <GetDataSlab+0x1b6b0>
   3e094:	ldr	r6, [sp, #56]	; 0x38
   3e098:	add	r7, r7, #1
   3e09c:	add	r1, r1, r2
   3e0a0:	mov	r0, #0
   3e0a4:	cmp	r7, r6
   3e0a8:	bne	3e064 <GetDataSlab+0x1b6a0>
   3e0ac:	b	24900 <GetDataSlab+0x1f3c>
   3e0b0:	ldr	r0, [sp, #56]	; 0x38
   3e0b4:	cmp	r0, #1
   3e0b8:	blt	248fc <GetDataSlab+0x1f38>
   3e0bc:	ldr	r0, [sp, #36]	; 0x24
   3e0c0:	ldr	r1, [sp, #32]
   3e0c4:	mov	r3, #0
   3e0c8:	mla	r0, r1, r6, r0
   3e0cc:	add	r1, r9, r0, lsl #2
   3e0d0:	mul	r0, r7, r6
   3e0d4:	lsl	r2, r0, #2
   3e0d8:	cmp	r8, #1
   3e0dc:	blt	3e108 <GetDataSlab+0x1b744>
   3e0e0:	mov	r0, #0
   3e0e4:	mov	r7, r8
   3e0e8:	add	r6, r1, r0, lsl #2
   3e0ec:	add	r0, r0, sl
   3e0f0:	subs	r7, r7, #1
   3e0f4:	vldr	s0, [r6]
   3e0f8:	vcvt.f32.s32	s0, s0
   3e0fc:	vstr	s0, [lr]
   3e100:	add	lr, lr, #4
   3e104:	bne	3e0e8 <GetDataSlab+0x1b724>
   3e108:	ldr	r7, [sp, #56]	; 0x38
   3e10c:	add	r3, r3, #1
   3e110:	add	r1, r1, r2
   3e114:	mov	r0, #0
   3e118:	cmp	r3, r7
   3e11c:	bne	3e0d8 <GetDataSlab+0x1b714>
   3e120:	b	24900 <GetDataSlab+0x1f3c>
   3e124:	ldr	r0, [sp, #56]	; 0x38
   3e128:	cmp	r0, #1
   3e12c:	blt	248fc <GetDataSlab+0x1f38>
   3e130:	ldr	r0, [sp, #36]	; 0x24
   3e134:	ldr	r1, [sp, #32]
   3e138:	mov	r3, #0
   3e13c:	mla	r0, r1, r6, r0
   3e140:	add	r1, r9, r0, lsl #2
   3e144:	mul	r0, r7, r6
   3e148:	lsl	r2, r0, #2
   3e14c:	cmp	r8, #1
   3e150:	blt	3e17c <GetDataSlab+0x1b7b8>
   3e154:	mov	r0, #0
   3e158:	mov	r7, r8
   3e15c:	add	r6, r1, r0, lsl #2
   3e160:	add	r0, r0, sl
   3e164:	subs	r7, r7, #1
   3e168:	vldr	s0, [r6]
   3e16c:	vcvt.f32.u32	s0, s0
   3e170:	vstr	s0, [lr]
   3e174:	add	lr, lr, #4
   3e178:	bne	3e15c <GetDataSlab+0x1b798>
   3e17c:	ldr	r7, [sp, #56]	; 0x38
   3e180:	add	r3, r3, #1
   3e184:	add	r1, r1, r2
   3e188:	mov	r0, #0
   3e18c:	cmp	r3, r7
   3e190:	bne	3e14c <GetDataSlab+0x1b788>
   3e194:	b	24900 <GetDataSlab+0x1f3c>
   3e198:	ldr	r0, [sp, #56]	; 0x38
   3e19c:	cmp	r0, #1
   3e1a0:	blt	248fc <GetDataSlab+0x1f38>
   3e1a4:	ldr	r0, [sp, #36]	; 0x24
   3e1a8:	ldr	r1, [sp, #32]
   3e1ac:	mov	r3, #0
   3e1b0:	mla	r0, r1, r6, r0
   3e1b4:	add	r1, r9, r0, lsl #2
   3e1b8:	mul	r0, r7, r6
   3e1bc:	lsl	r2, r0, #2
   3e1c0:	cmp	r8, #1
   3e1c4:	blt	3e1e8 <GetDataSlab+0x1b824>
   3e1c8:	mov	r7, #0
   3e1cc:	mov	r0, r8
   3e1d0:	add	r6, r7, sl
   3e1d4:	ldr	r7, [r1, r7, lsl #2]
   3e1d8:	subs	r0, r0, #1
   3e1dc:	str	r7, [lr], #4
   3e1e0:	mov	r7, r6
   3e1e4:	bne	3e1d0 <GetDataSlab+0x1b80c>
   3e1e8:	ldr	r7, [sp, #56]	; 0x38
   3e1ec:	add	r3, r3, #1
   3e1f0:	add	r1, r1, r2
   3e1f4:	mov	r0, #0
   3e1f8:	cmp	r3, r7
   3e1fc:	bne	3e1c0 <GetDataSlab+0x1b7fc>
   3e200:	b	24900 <GetDataSlab+0x1f3c>
   3e204:	ldr	r0, [sp, #56]	; 0x38
   3e208:	cmp	r0, #1
   3e20c:	blt	248fc <GetDataSlab+0x1f38>
   3e210:	ldr	r0, [sp, #36]	; 0x24
   3e214:	ldr	r1, [sp, #32]
   3e218:	lsl	r3, sl, #3
   3e21c:	mla	r0, r1, r6, r0
   3e220:	add	r1, r9, r0, lsl #3
   3e224:	mul	r0, r7, r6
   3e228:	mov	r7, #0
   3e22c:	lsl	r2, r0, #3
   3e230:	cmp	r8, #1
   3e234:	blt	3e25c <GetDataSlab+0x1b898>
   3e238:	mov	r0, r1
   3e23c:	mov	r6, r8
   3e240:	vldr	d16, [r0]
   3e244:	add	r0, r0, r3
   3e248:	subs	r6, r6, #1
   3e24c:	vcvt.f32.f64	s0, d16
   3e250:	vstr	s0, [lr]
   3e254:	add	lr, lr, #4
   3e258:	bne	3e240 <GetDataSlab+0x1b87c>
   3e25c:	ldr	r6, [sp, #56]	; 0x38
   3e260:	add	r7, r7, #1
   3e264:	add	r1, r1, r2
   3e268:	mov	r0, #0
   3e26c:	cmp	r7, r6
   3e270:	bne	3e230 <GetDataSlab+0x1b86c>
   3e274:	b	24900 <GetDataSlab+0x1f3c>
   3e278:	ldr	r0, [sp, #56]	; 0x38
   3e27c:	cmp	r0, #1
   3e280:	blt	248fc <GetDataSlab+0x1f38>
   3e284:	ldr	r0, [sp, #36]	; 0x24
   3e288:	ldr	r1, [sp, #32]
   3e28c:	mla	r0, r1, r6, r0
   3e290:	mov	r1, r6
   3e294:	add	r6, r9, r0, lsl #3
   3e298:	mul	r0, r7, r1
   3e29c:	lsl	r7, sl, #3
   3e2a0:	mov	r1, #0
   3e2a4:	lsl	r0, r0, #3
   3e2a8:	str	r0, [sp, #28]
   3e2ac:	cmp	r8, #1
   3e2b0:	str	r1, [sp, #60]	; 0x3c
   3e2b4:	blt	3e2e8 <GetDataSlab+0x1b924>
   3e2b8:	mov	r4, #0
   3e2bc:	mov	r5, r8
   3e2c0:	mov	r1, r6
   3e2c4:	mov	r9, lr
   3e2c8:	ldr	r0, [r1, -r4]!
   3e2cc:	ldr	r1, [r1, #4]
   3e2d0:	bl	4b638 <__aeabi_l2f>
   3e2d4:	mov	lr, r9
   3e2d8:	sub	r4, r4, r7
   3e2dc:	subs	r5, r5, #1
   3e2e0:	str	r0, [lr], #4
   3e2e4:	bne	3e2c0 <GetDataSlab+0x1b8fc>
   3e2e8:	ldr	r0, [sp, #28]
   3e2ec:	ldr	r1, [sp, #60]	; 0x3c
   3e2f0:	add	r6, r6, r0
   3e2f4:	ldr	r0, [sp, #56]	; 0x38
   3e2f8:	add	r1, r1, #1
   3e2fc:	cmp	r1, r0
   3e300:	bne	3e2ac <GetDataSlab+0x1b8e8>
   3e304:	ldr	r9, [sp, #48]	; 0x30
   3e308:	ldr	r3, [sp, #52]	; 0x34
   3e30c:	ldr	r6, [sp, #40]	; 0x28
   3e310:	mov	r0, #0
   3e314:	cmp	r3, #13
   3e318:	bne	24900 <GetDataSlab+0x1f3c>
   3e31c:	ldr	r0, [sp, #56]	; 0x38
   3e320:	cmp	r0, #1
   3e324:	blt	248fc <GetDataSlab+0x1f38>
   3e328:	ldr	r0, [sp, #36]	; 0x24
   3e32c:	ldr	r1, [sp, #32]
   3e330:	lsl	sl, sl, #3
   3e334:	mla	r0, r1, r6, r0
   3e338:	mov	r1, r6
   3e33c:	add	r6, r9, r0, lsl #3
   3e340:	ldr	r0, [sp, #44]	; 0x2c
   3e344:	mov	r9, #0
   3e348:	mul	r0, r0, r1
   3e34c:	lsl	r0, r0, #3
   3e350:	str	r0, [sp, #60]	; 0x3c
   3e354:	cmp	r8, #1
   3e358:	blt	3e38c <GetDataSlab+0x1b9c8>
   3e35c:	mov	r4, #0
   3e360:	mov	r5, r8
   3e364:	mov	r1, r6
   3e368:	mov	r7, lr
   3e36c:	ldr	r0, [r1, -r4]!
   3e370:	ldr	r1, [r1, #4]
   3e374:	bl	4b628 <__aeabi_ul2f>
   3e378:	mov	lr, r7
   3e37c:	sub	r4, r4, sl
   3e380:	subs	r5, r5, #1
   3e384:	str	r0, [lr], #4
   3e388:	bne	3e364 <GetDataSlab+0x1b9a0>
   3e38c:	ldr	r0, [sp, #60]	; 0x3c
   3e390:	ldr	r1, [sp, #56]	; 0x38
   3e394:	add	r9, r9, #1
   3e398:	add	r6, r6, r0
   3e39c:	mov	r0, #0
   3e3a0:	cmp	r9, r1
   3e3a4:	bne	3e354 <GetDataSlab+0x1b990>
   3e3a8:	b	24900 <GetDataSlab+0x1f3c>
   3e3ac:	cmp	r1, #1
   3e3b0:	blt	248fc <GetDataSlab+0x1f38>
   3e3b4:	ldr	r0, [sp, #36]	; 0x24
   3e3b8:	ldr	r1, [sp, #32]
   3e3bc:	mov	r7, #0
   3e3c0:	mov	r4, lr
   3e3c4:	mla	r0, r1, r6, r0
   3e3c8:	add	r2, r9, r0
   3e3cc:	cmp	r8, #1
   3e3d0:	blt	3e418 <GetDataSlab+0x1ba54>
   3e3d4:	ldr	r5, [fp, #20]
   3e3d8:	ldr	r1, [fp, #16]
   3e3dc:	ldr	lr, [fp, #8]
   3e3e0:	mov	r0, #0
   3e3e4:	ldr	r6, [r1]
   3e3e8:	mul	r6, r6, r0
   3e3ec:	ldrb	r6, [r2, r6]
   3e3f0:	strb	r6, [r4, r0]
   3e3f4:	add	r0, r0, #1
   3e3f8:	ldr	r8, [r5]
   3e3fc:	cmp	r0, r8
   3e400:	blt	3e3e4 <GetDataSlab+0x1ba20>
   3e404:	add	r4, r4, r0
   3e408:	ldr	r1, [r3]
   3e40c:	ldr	r6, [lr]
   3e410:	ldr	r0, [ip]
   3e414:	b	3e420 <GetDataSlab+0x1ba5c>
   3e418:	ldr	r1, [sp, #56]	; 0x38
   3e41c:	ldr	r0, [sp, #44]	; 0x2c
   3e420:	mla	r2, r6, r0, r2
   3e424:	add	r7, r7, #1
   3e428:	str	r0, [sp, #44]	; 0x2c
   3e42c:	mov	r0, #0
   3e430:	str	r1, [sp, #56]	; 0x38
   3e434:	cmp	r7, r1
   3e438:	blt	3e3cc <GetDataSlab+0x1ba08>
   3e43c:	b	24900 <GetDataSlab+0x1f3c>
   3e440:	cmp	r1, #1
   3e444:	blt	248fc <GetDataSlab+0x1f38>
   3e448:	ldr	r0, [sp, #36]	; 0x24
   3e44c:	ldr	r1, [sp, #32]
   3e450:	mov	r7, #0
   3e454:	mov	r4, lr
   3e458:	mla	r0, r1, r6, r0
   3e45c:	add	r2, r9, r0, lsl #1
   3e460:	cmp	r8, #1
   3e464:	blt	3e4ac <GetDataSlab+0x1bae8>
   3e468:	ldr	r5, [fp, #20]
   3e46c:	ldr	r1, [fp, #16]
   3e470:	ldr	lr, [fp, #8]
   3e474:	mov	r0, #0
   3e478:	ldr	r6, [r1]
   3e47c:	mul	r6, r6, r0
   3e480:	ldrb	r6, [r2, r6, lsl #1]
   3e484:	strb	r6, [r4, r0]
   3e488:	add	r0, r0, #1
   3e48c:	ldr	r8, [r5]
   3e490:	cmp	r0, r8
   3e494:	blt	3e478 <GetDataSlab+0x1bab4>
   3e498:	add	r4, r4, r0
   3e49c:	ldr	r1, [r3]
   3e4a0:	ldr	r6, [lr]
   3e4a4:	ldr	r0, [ip]
   3e4a8:	b	3e4b4 <GetDataSlab+0x1baf0>
   3e4ac:	ldr	r1, [sp, #56]	; 0x38
   3e4b0:	ldr	r0, [sp, #44]	; 0x2c
   3e4b4:	str	r0, [sp, #44]	; 0x2c
   3e4b8:	mul	r0, r6, r0
   3e4bc:	add	r7, r7, #1
   3e4c0:	str	r1, [sp, #56]	; 0x38
   3e4c4:	cmp	r7, r1
   3e4c8:	add	r2, r2, r0, lsl #1
   3e4cc:	mov	r0, #0
   3e4d0:	blt	3e460 <GetDataSlab+0x1ba9c>
   3e4d4:	b	24900 <GetDataSlab+0x1f3c>
   3e4d8:	cmp	r1, #1
   3e4dc:	blt	248fc <GetDataSlab+0x1f38>
   3e4e0:	ldr	r0, [sp, #36]	; 0x24
   3e4e4:	ldr	r1, [sp, #32]
   3e4e8:	mov	r7, #0
   3e4ec:	mov	r4, lr
   3e4f0:	mla	r0, r1, r6, r0
   3e4f4:	add	r2, r9, r0, lsl #1
   3e4f8:	cmp	r8, #1
   3e4fc:	blt	3e544 <GetDataSlab+0x1bb80>
   3e500:	ldr	r5, [fp, #20]
   3e504:	ldr	r1, [fp, #16]
   3e508:	ldr	lr, [fp, #8]
   3e50c:	mov	r0, #0
   3e510:	ldr	r6, [r1]
   3e514:	mul	r6, r6, r0
   3e518:	ldrb	r6, [r2, r6, lsl #1]
   3e51c:	strb	r6, [r4, r0]
   3e520:	add	r0, r0, #1
   3e524:	ldr	r8, [r5]
   3e528:	cmp	r0, r8
   3e52c:	blt	3e510 <GetDataSlab+0x1bb4c>
   3e530:	add	r4, r4, r0
   3e534:	ldr	r1, [r3]
   3e538:	ldr	r6, [lr]
   3e53c:	ldr	r0, [ip]
   3e540:	b	3e54c <GetDataSlab+0x1bb88>
   3e544:	ldr	r1, [sp, #56]	; 0x38
   3e548:	ldr	r0, [sp, #44]	; 0x2c
   3e54c:	str	r0, [sp, #44]	; 0x2c
   3e550:	mul	r0, r6, r0
   3e554:	add	r7, r7, #1
   3e558:	str	r1, [sp, #56]	; 0x38
   3e55c:	cmp	r7, r1
   3e560:	add	r2, r2, r0, lsl #1
   3e564:	mov	r0, #0
   3e568:	blt	3e4f8 <GetDataSlab+0x1bb34>
   3e56c:	b	24900 <GetDataSlab+0x1f3c>
   3e570:	cmp	r1, #1
   3e574:	blt	248fc <GetDataSlab+0x1f38>
   3e578:	ldr	r0, [sp, #36]	; 0x24
   3e57c:	ldr	r1, [sp, #32]
   3e580:	mov	r7, #0
   3e584:	mov	r4, lr
   3e588:	mla	r0, r1, r6, r0
   3e58c:	add	r2, r9, r0, lsl #2
   3e590:	cmp	r8, #1
   3e594:	blt	3e5dc <GetDataSlab+0x1bc18>
   3e598:	ldr	r5, [fp, #20]
   3e59c:	ldr	r1, [fp, #16]
   3e5a0:	ldr	lr, [fp, #8]
   3e5a4:	mov	r0, #0
   3e5a8:	ldr	r6, [r1]
   3e5ac:	mul	r6, r6, r0
   3e5b0:	ldr	r6, [r2, r6, lsl #2]
   3e5b4:	strb	r6, [r4, r0]
   3e5b8:	add	r0, r0, #1
   3e5bc:	ldr	r8, [r5]
   3e5c0:	cmp	r0, r8
   3e5c4:	blt	3e5a8 <GetDataSlab+0x1bbe4>
   3e5c8:	add	r4, r4, r0
   3e5cc:	ldr	r1, [r3]
   3e5d0:	ldr	r6, [lr]
   3e5d4:	ldr	r0, [ip]
   3e5d8:	b	3e5e4 <GetDataSlab+0x1bc20>
   3e5dc:	ldr	r1, [sp, #56]	; 0x38
   3e5e0:	ldr	r0, [sp, #44]	; 0x2c
   3e5e4:	str	r0, [sp, #44]	; 0x2c
   3e5e8:	mul	r0, r6, r0
   3e5ec:	add	r7, r7, #1
   3e5f0:	str	r1, [sp, #56]	; 0x38
   3e5f4:	cmp	r7, r1
   3e5f8:	add	r2, r2, r0, lsl #2
   3e5fc:	mov	r0, #0
   3e600:	blt	3e590 <GetDataSlab+0x1bbcc>
   3e604:	b	24900 <GetDataSlab+0x1f3c>
   3e608:	cmp	r1, #1
   3e60c:	blt	248fc <GetDataSlab+0x1f38>
   3e610:	ldr	r0, [sp, #36]	; 0x24
   3e614:	ldr	r1, [sp, #32]
   3e618:	mov	r7, #0
   3e61c:	mov	r4, lr
   3e620:	mla	r0, r1, r6, r0
   3e624:	add	r2, r9, r0, lsl #2
   3e628:	cmp	r8, #1
   3e62c:	blt	3e674 <GetDataSlab+0x1bcb0>
   3e630:	ldr	r5, [fp, #20]
   3e634:	ldr	r1, [fp, #16]
   3e638:	ldr	lr, [fp, #8]
   3e63c:	mov	r0, #0
   3e640:	ldr	r6, [r1]
   3e644:	mul	r6, r6, r0
   3e648:	ldr	r6, [r2, r6, lsl #2]
   3e64c:	strb	r6, [r4, r0]
   3e650:	add	r0, r0, #1
   3e654:	ldr	r8, [r5]
   3e658:	cmp	r0, r8
   3e65c:	blt	3e640 <GetDataSlab+0x1bc7c>
   3e660:	add	r4, r4, r0
   3e664:	ldr	r1, [r3]
   3e668:	ldr	r6, [lr]
   3e66c:	ldr	r0, [ip]
   3e670:	b	3e67c <GetDataSlab+0x1bcb8>
   3e674:	ldr	r1, [sp, #56]	; 0x38
   3e678:	ldr	r0, [sp, #44]	; 0x2c
   3e67c:	str	r0, [sp, #44]	; 0x2c
   3e680:	mul	r0, r6, r0
   3e684:	add	r7, r7, #1
   3e688:	str	r1, [sp, #56]	; 0x38
   3e68c:	cmp	r7, r1
   3e690:	add	r2, r2, r0, lsl #2
   3e694:	mov	r0, #0
   3e698:	blt	3e628 <GetDataSlab+0x1bc64>
   3e69c:	b	24900 <GetDataSlab+0x1f3c>
   3e6a0:	cmp	r1, #1
   3e6a4:	blt	248fc <GetDataSlab+0x1f38>
   3e6a8:	ldr	r0, [sp, #36]	; 0x24
   3e6ac:	ldr	r1, [sp, #32]
   3e6b0:	mov	r7, #0
   3e6b4:	mov	r4, lr
   3e6b8:	mla	r0, r1, r6, r0
   3e6bc:	add	r2, r9, r0, lsl #2
   3e6c0:	cmp	r8, #1
   3e6c4:	blt	3e718 <GetDataSlab+0x1bd54>
   3e6c8:	ldr	r5, [fp, #20]
   3e6cc:	ldr	r1, [fp, #16]
   3e6d0:	ldr	lr, [fp, #8]
   3e6d4:	mov	r0, #0
   3e6d8:	ldr	r6, [r1]
   3e6dc:	mul	r6, r6, r0
   3e6e0:	add	r6, r2, r6, lsl #2
   3e6e4:	vldr	s0, [r6]
   3e6e8:	vcvt.s32.f32	s0, s0
   3e6ec:	vmov	r6, s0
   3e6f0:	strb	r6, [r4, r0]
   3e6f4:	add	r0, r0, #1
   3e6f8:	ldr	r8, [r5]
   3e6fc:	cmp	r0, r8
   3e700:	blt	3e6d8 <GetDataSlab+0x1bd14>
   3e704:	add	r4, r4, r0
   3e708:	ldr	r1, [r3]
   3e70c:	ldr	r6, [lr]
   3e710:	ldr	r0, [ip]
   3e714:	b	3e720 <GetDataSlab+0x1bd5c>
   3e718:	ldr	r1, [sp, #56]	; 0x38
   3e71c:	ldr	r0, [sp, #44]	; 0x2c
   3e720:	str	r0, [sp, #44]	; 0x2c
   3e724:	mul	r0, r6, r0
   3e728:	add	r7, r7, #1
   3e72c:	str	r1, [sp, #56]	; 0x38
   3e730:	cmp	r7, r1
   3e734:	add	r2, r2, r0, lsl #2
   3e738:	mov	r0, #0
   3e73c:	blt	3e6c0 <GetDataSlab+0x1bcfc>
   3e740:	b	24900 <GetDataSlab+0x1f3c>
   3e744:	cmp	r1, #1
   3e748:	blt	248fc <GetDataSlab+0x1f38>
   3e74c:	ldr	r0, [sp, #36]	; 0x24
   3e750:	ldr	r1, [sp, #32]
   3e754:	mov	r7, #0
   3e758:	mov	r4, lr
   3e75c:	mla	r0, r1, r6, r0
   3e760:	add	r2, r9, r0, lsl #3
   3e764:	cmp	r8, #1
   3e768:	blt	3e7bc <GetDataSlab+0x1bdf8>
   3e76c:	ldr	r5, [fp, #20]
   3e770:	ldr	r1, [fp, #16]
   3e774:	ldr	lr, [fp, #8]
   3e778:	mov	r0, #0
   3e77c:	ldr	r6, [r1]
   3e780:	mul	r6, r6, r0
   3e784:	add	r6, r2, r6, lsl #3
   3e788:	vldr	d16, [r6]
   3e78c:	vcvt.s32.f64	s0, d16
   3e790:	vmov	r6, s0
   3e794:	strb	r6, [r4, r0]
   3e798:	add	r0, r0, #1
   3e79c:	ldr	r8, [r5]
   3e7a0:	cmp	r0, r8
   3e7a4:	blt	3e77c <GetDataSlab+0x1bdb8>
   3e7a8:	add	r4, r4, r0
   3e7ac:	ldr	r1, [r3]
   3e7b0:	ldr	r6, [lr]
   3e7b4:	ldr	r0, [ip]
   3e7b8:	b	3e7c4 <GetDataSlab+0x1be00>
   3e7bc:	ldr	r1, [sp, #56]	; 0x38
   3e7c0:	ldr	r0, [sp, #44]	; 0x2c
   3e7c4:	str	r0, [sp, #44]	; 0x2c
   3e7c8:	mul	r0, r6, r0
   3e7cc:	add	r7, r7, #1
   3e7d0:	str	r1, [sp, #56]	; 0x38
   3e7d4:	cmp	r7, r1
   3e7d8:	add	r2, r2, r0, lsl #3
   3e7dc:	mov	r0, #0
   3e7e0:	blt	3e764 <GetDataSlab+0x1bda0>
   3e7e4:	b	24900 <GetDataSlab+0x1f3c>
   3e7e8:	cmp	r1, #1
   3e7ec:	blt	248fc <GetDataSlab+0x1f38>
   3e7f0:	ldr	r0, [sp, #36]	; 0x24
   3e7f4:	ldr	r2, [sp, #32]
   3e7f8:	mov	r4, lr
   3e7fc:	ldr	r5, [fp, #20]
   3e800:	ldr	lr, [fp, #8]
   3e804:	mov	sl, r9
   3e808:	mla	r0, r2, r6, r0
   3e80c:	mov	r2, #0
   3e810:	add	r0, r9, r0, lsl #3
   3e814:	cmp	r8, #1
   3e818:	blt	3e858 <GetDataSlab+0x1be94>
   3e81c:	ldr	r1, [fp, #16]
   3e820:	mov	r7, #0
   3e824:	ldr	r6, [r1]
   3e828:	mul	r6, r6, r7
   3e82c:	ldrb	r6, [r0, r6, lsl #3]
   3e830:	strb	r6, [r4, r7]
   3e834:	add	r7, r7, #1
   3e838:	ldr	r8, [r5]
   3e83c:	cmp	r7, r8
   3e840:	blt	3e824 <GetDataSlab+0x1be60>
   3e844:	add	r4, r4, r7
   3e848:	ldr	r1, [r3]
   3e84c:	ldr	r6, [lr]
   3e850:	ldr	r7, [ip]
   3e854:	b	3e85c <GetDataSlab+0x1be98>
   3e858:	ldr	r7, [sp, #44]	; 0x2c
   3e85c:	str	r7, [sp, #44]	; 0x2c
   3e860:	mul	r7, r6, r7
   3e864:	add	r2, r2, #1
   3e868:	cmp	r2, r1
   3e86c:	add	r0, r0, r7, lsl #3
   3e870:	blt	3e814 <GetDataSlab+0x1be50>
   3e874:	mov	r0, #0
   3e878:	mov	lr, r4
   3e87c:	mov	r9, sl
   3e880:	b	407f0 <GetDataSlab+0x1de2c>
   3e884:	cmp	r1, #1
   3e888:	blt	248fc <GetDataSlab+0x1f38>
   3e88c:	ldr	r0, [sp, #36]	; 0x24
   3e890:	ldr	r1, [sp, #32]
   3e894:	mov	r7, #0
   3e898:	mov	r4, lr
   3e89c:	mla	r0, r1, r6, r0
   3e8a0:	add	r2, r9, r0
   3e8a4:	cmp	r8, #1
   3e8a8:	blt	3e8f0 <GetDataSlab+0x1bf2c>
   3e8ac:	ldr	r5, [fp, #20]
   3e8b0:	ldr	r1, [fp, #16]
   3e8b4:	ldr	lr, [fp, #8]
   3e8b8:	mov	r0, #0
   3e8bc:	ldr	r6, [r1]
   3e8c0:	mul	r6, r6, r0
   3e8c4:	ldrb	r6, [r2, r6]
   3e8c8:	strb	r6, [r4, r0]
   3e8cc:	add	r0, r0, #1
   3e8d0:	ldr	r8, [r5]
   3e8d4:	cmp	r0, r8
   3e8d8:	blt	3e8bc <GetDataSlab+0x1bef8>
   3e8dc:	add	r4, r4, r0
   3e8e0:	ldr	r1, [r3]
   3e8e4:	ldr	r6, [lr]
   3e8e8:	ldr	r0, [ip]
   3e8ec:	b	3e8f8 <GetDataSlab+0x1bf34>
   3e8f0:	ldr	r1, [sp, #56]	; 0x38
   3e8f4:	ldr	r0, [sp, #44]	; 0x2c
   3e8f8:	mla	r2, r6, r0, r2
   3e8fc:	add	r7, r7, #1
   3e900:	str	r0, [sp, #44]	; 0x2c
   3e904:	mov	r0, #0
   3e908:	str	r1, [sp, #56]	; 0x38
   3e90c:	cmp	r7, r1
   3e910:	blt	3e8a4 <GetDataSlab+0x1bee0>
   3e914:	b	24900 <GetDataSlab+0x1f3c>
   3e918:	cmp	r1, #1
   3e91c:	blt	248fc <GetDataSlab+0x1f38>
   3e920:	ldr	r0, [sp, #36]	; 0x24
   3e924:	ldr	r1, [sp, #32]
   3e928:	mov	r7, #0
   3e92c:	mov	r4, lr
   3e930:	mla	r0, r1, r6, r0
   3e934:	add	r2, r9, r0, lsl #1
   3e938:	cmp	r8, #1
   3e93c:	blt	3e984 <GetDataSlab+0x1bfc0>
   3e940:	ldr	r5, [fp, #20]
   3e944:	ldr	r1, [fp, #16]
   3e948:	ldr	lr, [fp, #8]
   3e94c:	mov	r0, #0
   3e950:	ldr	r6, [r1]
   3e954:	mul	r6, r6, r0
   3e958:	ldrb	r6, [r2, r6, lsl #1]
   3e95c:	strb	r6, [r4, r0]
   3e960:	add	r0, r0, #1
   3e964:	ldr	r8, [r5]
   3e968:	cmp	r0, r8
   3e96c:	blt	3e950 <GetDataSlab+0x1bf8c>
   3e970:	add	r4, r4, r0
   3e974:	ldr	r1, [r3]
   3e978:	ldr	r6, [lr]
   3e97c:	ldr	r0, [ip]
   3e980:	b	3e98c <GetDataSlab+0x1bfc8>
   3e984:	ldr	r1, [sp, #56]	; 0x38
   3e988:	ldr	r0, [sp, #44]	; 0x2c
   3e98c:	str	r0, [sp, #44]	; 0x2c
   3e990:	mul	r0, r6, r0
   3e994:	add	r7, r7, #1
   3e998:	str	r1, [sp, #56]	; 0x38
   3e99c:	cmp	r7, r1
   3e9a0:	add	r2, r2, r0, lsl #1
   3e9a4:	mov	r0, #0
   3e9a8:	blt	3e938 <GetDataSlab+0x1bf74>
   3e9ac:	b	24900 <GetDataSlab+0x1f3c>
   3e9b0:	cmp	r1, #1
   3e9b4:	blt	248fc <GetDataSlab+0x1f38>
   3e9b8:	ldr	r0, [sp, #36]	; 0x24
   3e9bc:	ldr	r1, [sp, #32]
   3e9c0:	mov	r7, #0
   3e9c4:	mov	r4, lr
   3e9c8:	mla	r0, r1, r6, r0
   3e9cc:	add	r2, r9, r0, lsl #1
   3e9d0:	cmp	r8, #1
   3e9d4:	blt	3ea1c <GetDataSlab+0x1c058>
   3e9d8:	ldr	r5, [fp, #20]
   3e9dc:	ldr	r1, [fp, #16]
   3e9e0:	ldr	lr, [fp, #8]
   3e9e4:	mov	r0, #0
   3e9e8:	ldr	r6, [r1]
   3e9ec:	mul	r6, r6, r0
   3e9f0:	ldrb	r6, [r2, r6, lsl #1]
   3e9f4:	strb	r6, [r4, r0]
   3e9f8:	add	r0, r0, #1
   3e9fc:	ldr	r8, [r5]
   3ea00:	cmp	r0, r8
   3ea04:	blt	3e9e8 <GetDataSlab+0x1c024>
   3ea08:	add	r4, r4, r0
   3ea0c:	ldr	r1, [r3]
   3ea10:	ldr	r6, [lr]
   3ea14:	ldr	r0, [ip]
   3ea18:	b	3ea24 <GetDataSlab+0x1c060>
   3ea1c:	ldr	r1, [sp, #56]	; 0x38
   3ea20:	ldr	r0, [sp, #44]	; 0x2c
   3ea24:	str	r0, [sp, #44]	; 0x2c
   3ea28:	mul	r0, r6, r0
   3ea2c:	add	r7, r7, #1
   3ea30:	str	r1, [sp, #56]	; 0x38
   3ea34:	cmp	r7, r1
   3ea38:	add	r2, r2, r0, lsl #1
   3ea3c:	mov	r0, #0
   3ea40:	blt	3e9d0 <GetDataSlab+0x1c00c>
   3ea44:	b	24900 <GetDataSlab+0x1f3c>
   3ea48:	cmp	r1, #1
   3ea4c:	blt	248fc <GetDataSlab+0x1f38>
   3ea50:	ldr	r0, [sp, #36]	; 0x24
   3ea54:	ldr	r1, [sp, #32]
   3ea58:	mov	r7, #0
   3ea5c:	mov	r4, lr
   3ea60:	mla	r0, r1, r6, r0
   3ea64:	add	r2, r9, r0, lsl #2
   3ea68:	cmp	r8, #1
   3ea6c:	blt	3eab4 <GetDataSlab+0x1c0f0>
   3ea70:	ldr	r5, [fp, #20]
   3ea74:	ldr	r1, [fp, #16]
   3ea78:	ldr	lr, [fp, #8]
   3ea7c:	mov	r0, #0
   3ea80:	ldr	r6, [r1]
   3ea84:	mul	r6, r6, r0
   3ea88:	ldr	r6, [r2, r6, lsl #2]
   3ea8c:	strb	r6, [r4, r0]
   3ea90:	add	r0, r0, #1
   3ea94:	ldr	r8, [r5]
   3ea98:	cmp	r0, r8
   3ea9c:	blt	3ea80 <GetDataSlab+0x1c0bc>
   3eaa0:	add	r4, r4, r0
   3eaa4:	ldr	r1, [r3]
   3eaa8:	ldr	r6, [lr]
   3eaac:	ldr	r0, [ip]
   3eab0:	b	3eabc <GetDataSlab+0x1c0f8>
   3eab4:	ldr	r1, [sp, #56]	; 0x38
   3eab8:	ldr	r0, [sp, #44]	; 0x2c
   3eabc:	str	r0, [sp, #44]	; 0x2c
   3eac0:	mul	r0, r6, r0
   3eac4:	add	r7, r7, #1
   3eac8:	str	r1, [sp, #56]	; 0x38
   3eacc:	cmp	r7, r1
   3ead0:	add	r2, r2, r0, lsl #2
   3ead4:	mov	r0, #0
   3ead8:	blt	3ea68 <GetDataSlab+0x1c0a4>
   3eadc:	b	24900 <GetDataSlab+0x1f3c>
   3eae0:	cmp	r1, #1
   3eae4:	blt	248fc <GetDataSlab+0x1f38>
   3eae8:	ldr	r0, [sp, #36]	; 0x24
   3eaec:	ldr	r1, [sp, #32]
   3eaf0:	mov	r7, #0
   3eaf4:	mov	r4, lr
   3eaf8:	mla	r0, r1, r6, r0
   3eafc:	add	r2, r9, r0, lsl #2
   3eb00:	cmp	r8, #1
   3eb04:	blt	3eb4c <GetDataSlab+0x1c188>
   3eb08:	ldr	r5, [fp, #20]
   3eb0c:	ldr	r1, [fp, #16]
   3eb10:	ldr	lr, [fp, #8]
   3eb14:	mov	r0, #0
   3eb18:	ldr	r6, [r1]
   3eb1c:	mul	r6, r6, r0
   3eb20:	ldr	r6, [r2, r6, lsl #2]
   3eb24:	strb	r6, [r4, r0]
   3eb28:	add	r0, r0, #1
   3eb2c:	ldr	r8, [r5]
   3eb30:	cmp	r0, r8
   3eb34:	blt	3eb18 <GetDataSlab+0x1c154>
   3eb38:	add	r4, r4, r0
   3eb3c:	ldr	r1, [r3]
   3eb40:	ldr	r6, [lr]
   3eb44:	ldr	r0, [ip]
   3eb48:	b	3eb54 <GetDataSlab+0x1c190>
   3eb4c:	ldr	r1, [sp, #56]	; 0x38
   3eb50:	ldr	r0, [sp, #44]	; 0x2c
   3eb54:	str	r0, [sp, #44]	; 0x2c
   3eb58:	mul	r0, r6, r0
   3eb5c:	add	r7, r7, #1
   3eb60:	str	r1, [sp, #56]	; 0x38
   3eb64:	cmp	r7, r1
   3eb68:	add	r2, r2, r0, lsl #2
   3eb6c:	mov	r0, #0
   3eb70:	blt	3eb00 <GetDataSlab+0x1c13c>
   3eb74:	b	24900 <GetDataSlab+0x1f3c>
   3eb78:	cmp	r1, #1
   3eb7c:	blt	248fc <GetDataSlab+0x1f38>
   3eb80:	ldr	r0, [sp, #36]	; 0x24
   3eb84:	ldr	r1, [sp, #32]
   3eb88:	mov	r7, #0
   3eb8c:	mov	r4, lr
   3eb90:	mla	r0, r1, r6, r0
   3eb94:	add	r2, r9, r0, lsl #2
   3eb98:	cmp	r8, #1
   3eb9c:	blt	3ebf0 <GetDataSlab+0x1c22c>
   3eba0:	ldr	r5, [fp, #20]
   3eba4:	ldr	r1, [fp, #16]
   3eba8:	ldr	lr, [fp, #8]
   3ebac:	mov	r0, #0
   3ebb0:	ldr	r6, [r1]
   3ebb4:	mul	r6, r6, r0
   3ebb8:	add	r6, r2, r6, lsl #2
   3ebbc:	vldr	s0, [r6]
   3ebc0:	vcvt.u32.f32	s0, s0
   3ebc4:	vmov	r6, s0
   3ebc8:	strb	r6, [r4, r0]
   3ebcc:	add	r0, r0, #1
   3ebd0:	ldr	r8, [r5]
   3ebd4:	cmp	r0, r8
   3ebd8:	blt	3ebb0 <GetDataSlab+0x1c1ec>
   3ebdc:	add	r4, r4, r0
   3ebe0:	ldr	r1, [r3]
   3ebe4:	ldr	r6, [lr]
   3ebe8:	ldr	r0, [ip]
   3ebec:	b	3ebf8 <GetDataSlab+0x1c234>
   3ebf0:	ldr	r1, [sp, #56]	; 0x38
   3ebf4:	ldr	r0, [sp, #44]	; 0x2c
   3ebf8:	str	r0, [sp, #44]	; 0x2c
   3ebfc:	mul	r0, r6, r0
   3ec00:	add	r7, r7, #1
   3ec04:	str	r1, [sp, #56]	; 0x38
   3ec08:	cmp	r7, r1
   3ec0c:	add	r2, r2, r0, lsl #2
   3ec10:	mov	r0, #0
   3ec14:	blt	3eb98 <GetDataSlab+0x1c1d4>
   3ec18:	b	24900 <GetDataSlab+0x1f3c>
   3ec1c:	cmp	r1, #1
   3ec20:	blt	248fc <GetDataSlab+0x1f38>
   3ec24:	ldr	r0, [sp, #36]	; 0x24
   3ec28:	ldr	r1, [sp, #32]
   3ec2c:	mov	r7, #0
   3ec30:	mov	r4, lr
   3ec34:	mla	r0, r1, r6, r0
   3ec38:	add	r2, r9, r0, lsl #3
   3ec3c:	cmp	r8, #1
   3ec40:	blt	3ec94 <GetDataSlab+0x1c2d0>
   3ec44:	ldr	r5, [fp, #20]
   3ec48:	ldr	r1, [fp, #16]
   3ec4c:	ldr	lr, [fp, #8]
   3ec50:	mov	r0, #0
   3ec54:	ldr	r6, [r1]
   3ec58:	mul	r6, r6, r0
   3ec5c:	add	r6, r2, r6, lsl #3
   3ec60:	vldr	d16, [r6]
   3ec64:	vcvt.u32.f64	s0, d16
   3ec68:	vmov	r6, s0
   3ec6c:	strb	r6, [r4, r0]
   3ec70:	add	r0, r0, #1
   3ec74:	ldr	r8, [r5]
   3ec78:	cmp	r0, r8
   3ec7c:	blt	3ec54 <GetDataSlab+0x1c290>
   3ec80:	add	r4, r4, r0
   3ec84:	ldr	r1, [r3]
   3ec88:	ldr	r6, [lr]
   3ec8c:	ldr	r0, [ip]
   3ec90:	b	3ec9c <GetDataSlab+0x1c2d8>
   3ec94:	ldr	r1, [sp, #56]	; 0x38
   3ec98:	ldr	r0, [sp, #44]	; 0x2c
   3ec9c:	str	r0, [sp, #44]	; 0x2c
   3eca0:	mul	r0, r6, r0
   3eca4:	add	r7, r7, #1
   3eca8:	str	r1, [sp, #56]	; 0x38
   3ecac:	cmp	r7, r1
   3ecb0:	add	r2, r2, r0, lsl #3
   3ecb4:	mov	r0, #0
   3ecb8:	blt	3ec3c <GetDataSlab+0x1c278>
   3ecbc:	b	24900 <GetDataSlab+0x1f3c>
   3ecc0:	cmp	r1, #1
   3ecc4:	blt	248fc <GetDataSlab+0x1f38>
   3ecc8:	ldr	r0, [sp, #36]	; 0x24
   3eccc:	ldr	r2, [sp, #32]
   3ecd0:	mov	r4, lr
   3ecd4:	ldr	r5, [fp, #20]
   3ecd8:	ldr	lr, [fp, #8]
   3ecdc:	mov	sl, r9
   3ece0:	mla	r0, r2, r6, r0
   3ece4:	mov	r2, #0
   3ece8:	add	r0, r9, r0, lsl #3
   3ecec:	cmp	r8, #1
   3ecf0:	blt	3ed30 <GetDataSlab+0x1c36c>
   3ecf4:	ldr	r1, [fp, #16]
   3ecf8:	mov	r7, #0
   3ecfc:	ldr	r6, [r1]
   3ed00:	mul	r6, r6, r7
   3ed04:	ldrb	r6, [r0, r6, lsl #3]
   3ed08:	strb	r6, [r4, r7]
   3ed0c:	add	r7, r7, #1
   3ed10:	ldr	r8, [r5]
   3ed14:	cmp	r7, r8
   3ed18:	blt	3ecfc <GetDataSlab+0x1c338>
   3ed1c:	add	r4, r4, r7
   3ed20:	ldr	r1, [r3]
   3ed24:	ldr	r6, [lr]
   3ed28:	ldr	r7, [ip]
   3ed2c:	b	3ed34 <GetDataSlab+0x1c370>
   3ed30:	ldr	r7, [sp, #44]	; 0x2c
   3ed34:	str	r7, [sp, #44]	; 0x2c
   3ed38:	mul	r7, r6, r7
   3ed3c:	add	r2, r2, #1
   3ed40:	cmp	r2, r1
   3ed44:	add	r0, r0, r7, lsl #3
   3ed48:	blt	3ecec <GetDataSlab+0x1c328>
   3ed4c:	mov	r0, #0
   3ed50:	mov	lr, r4
   3ed54:	mov	r9, sl
   3ed58:	b	408a8 <GetDataSlab+0x1dee4>
   3ed5c:	ldr	r0, [sp, #56]	; 0x38
   3ed60:	cmp	r0, #1
   3ed64:	blt	248fc <GetDataSlab+0x1f38>
   3ed68:	ldr	r0, [sp, #36]	; 0x24
   3ed6c:	ldr	r1, [sp, #32]
   3ed70:	mul	r2, r3, r6
   3ed74:	mov	r3, #0
   3ed78:	mla	r0, r1, r6, r0
   3ed7c:	add	r1, r4, r0
   3ed80:	cmp	r8, #1
   3ed84:	blt	3eda8 <GetDataSlab+0x1c3e4>
   3ed88:	mov	r7, #0
   3ed8c:	mov	r0, r8
   3ed90:	add	r6, r7, sl
   3ed94:	ldrb	r7, [r1, r7]
   3ed98:	subs	r0, r0, #1
   3ed9c:	strh	r7, [lr], #2
   3eda0:	mov	r7, r6
   3eda4:	bne	3ed90 <GetDataSlab+0x1c3cc>
   3eda8:	ldr	r7, [sp, #56]	; 0x38
   3edac:	add	r3, r3, #1
   3edb0:	add	r1, r1, r2
   3edb4:	mov	r0, #0
   3edb8:	cmp	r3, r7
   3edbc:	bne	3ed80 <GetDataSlab+0x1c3bc>
   3edc0:	b	24900 <GetDataSlab+0x1f3c>
   3edc4:	ldr	r0, [sp, #56]	; 0x38
   3edc8:	cmp	r0, #1
   3edcc:	blt	248fc <GetDataSlab+0x1f38>
   3edd0:	ldr	r0, [sp, #36]	; 0x24
   3edd4:	ldr	r1, [sp, #32]
   3edd8:	mov	r7, #0
   3eddc:	mla	r0, r1, r6, r0
   3ede0:	add	r1, r4, r0, lsl #1
   3ede4:	mul	r0, r3, r6
   3ede8:	lsl	r3, sl, #1
   3edec:	lsl	r2, r0, #1
   3edf0:	cmp	r8, #1
   3edf4:	blt	3ee18 <GetDataSlab+0x1c454>
   3edf8:	mov	r6, #0
   3edfc:	mov	r0, r8
   3ee00:	sub	r5, r6, r3
   3ee04:	ldrh	r6, [r1, -r6]
   3ee08:	subs	r0, r0, #1
   3ee0c:	strh	r6, [lr], #2
   3ee10:	mov	r6, r5
   3ee14:	bne	3ee00 <GetDataSlab+0x1c43c>
   3ee18:	ldr	r6, [sp, #56]	; 0x38
   3ee1c:	add	r7, r7, #1
   3ee20:	add	r1, r1, r2
   3ee24:	mov	r0, #0
   3ee28:	cmp	r7, r6
   3ee2c:	bne	3edf0 <GetDataSlab+0x1c42c>
   3ee30:	b	24900 <GetDataSlab+0x1f3c>
   3ee34:	ldr	r0, [sp, #56]	; 0x38
   3ee38:	cmp	r0, #1
   3ee3c:	blt	248fc <GetDataSlab+0x1f38>
   3ee40:	ldr	r0, [sp, #36]	; 0x24
   3ee44:	ldr	r1, [sp, #32]
   3ee48:	mov	r7, #0
   3ee4c:	mla	r0, r1, r6, r0
   3ee50:	add	r1, r4, r0, lsl #1
   3ee54:	mul	r0, r3, r6
   3ee58:	lsl	r3, sl, #1
   3ee5c:	lsl	r2, r0, #1
   3ee60:	cmp	r8, #1
   3ee64:	blt	3ee88 <GetDataSlab+0x1c4c4>
   3ee68:	mov	r6, #0
   3ee6c:	mov	r0, r8
   3ee70:	sub	r5, r6, r3
   3ee74:	ldrh	r6, [r1, -r6]
   3ee78:	subs	r0, r0, #1
   3ee7c:	strh	r6, [lr], #2
   3ee80:	mov	r6, r5
   3ee84:	bne	3ee70 <GetDataSlab+0x1c4ac>
   3ee88:	ldr	r6, [sp, #56]	; 0x38
   3ee8c:	add	r7, r7, #1
   3ee90:	add	r1, r1, r2
   3ee94:	mov	r0, #0
   3ee98:	cmp	r7, r6
   3ee9c:	bne	3ee60 <GetDataSlab+0x1c49c>
   3eea0:	b	24900 <GetDataSlab+0x1f3c>
   3eea4:	ldr	r0, [sp, #56]	; 0x38
   3eea8:	cmp	r0, #1
   3eeac:	blt	248fc <GetDataSlab+0x1f38>
   3eeb0:	ldr	r0, [sp, #36]	; 0x24
   3eeb4:	ldr	r1, [sp, #32]
   3eeb8:	mov	r7, #0
   3eebc:	mla	r0, r1, r6, r0
   3eec0:	add	r1, r4, r0, lsl #2
   3eec4:	mul	r0, r3, r6
   3eec8:	lsl	r3, sl, #2
   3eecc:	lsl	r2, r0, #2
   3eed0:	cmp	r8, #1
   3eed4:	blt	3eef8 <GetDataSlab+0x1c534>
   3eed8:	mov	r6, #0
   3eedc:	mov	r0, r8
   3eee0:	sub	r5, r6, r3
   3eee4:	ldr	r6, [r1, -r6]
   3eee8:	subs	r0, r0, #1
   3eeec:	strh	r6, [lr], #2
   3eef0:	mov	r6, r5
   3eef4:	bne	3eee0 <GetDataSlab+0x1c51c>
   3eef8:	ldr	r6, [sp, #56]	; 0x38
   3eefc:	add	r7, r7, #1
   3ef00:	add	r1, r1, r2
   3ef04:	mov	r0, #0
   3ef08:	cmp	r7, r6
   3ef0c:	bne	3eed0 <GetDataSlab+0x1c50c>
   3ef10:	b	24900 <GetDataSlab+0x1f3c>
   3ef14:	ldr	r0, [sp, #56]	; 0x38
   3ef18:	cmp	r0, #1
   3ef1c:	blt	248fc <GetDataSlab+0x1f38>
   3ef20:	ldr	r0, [sp, #36]	; 0x24
   3ef24:	ldr	r1, [sp, #32]
   3ef28:	mov	r7, #0
   3ef2c:	mla	r0, r1, r6, r0
   3ef30:	add	r1, r4, r0, lsl #2
   3ef34:	mul	r0, r3, r6
   3ef38:	lsl	r3, sl, #2
   3ef3c:	lsl	r2, r0, #2
   3ef40:	cmp	r8, #1
   3ef44:	blt	3ef68 <GetDataSlab+0x1c5a4>
   3ef48:	mov	r6, #0
   3ef4c:	mov	r0, r8
   3ef50:	sub	r5, r6, r3
   3ef54:	ldr	r6, [r1, -r6]
   3ef58:	subs	r0, r0, #1
   3ef5c:	strh	r6, [lr], #2
   3ef60:	mov	r6, r5
   3ef64:	bne	3ef50 <GetDataSlab+0x1c58c>
   3ef68:	ldr	r6, [sp, #56]	; 0x38
   3ef6c:	add	r7, r7, #1
   3ef70:	add	r1, r1, r2
   3ef74:	mov	r0, #0
   3ef78:	cmp	r7, r6
   3ef7c:	bne	3ef40 <GetDataSlab+0x1c57c>
   3ef80:	b	24900 <GetDataSlab+0x1f3c>
   3ef84:	ldr	r0, [sp, #56]	; 0x38
   3ef88:	cmp	r0, #1
   3ef8c:	blt	248fc <GetDataSlab+0x1f38>
   3ef90:	ldr	r0, [sp, #36]	; 0x24
   3ef94:	ldr	r1, [sp, #32]
   3ef98:	mov	r7, #0
   3ef9c:	mla	r0, r1, r6, r0
   3efa0:	add	r1, r4, r0, lsl #2
   3efa4:	mul	r0, r3, r6
   3efa8:	lsl	r3, sl, #2
   3efac:	lsl	r2, r0, #2
   3efb0:	cmp	r8, #1
   3efb4:	blt	3efdc <GetDataSlab+0x1c618>
   3efb8:	mov	r0, r1
   3efbc:	mov	r6, r8
   3efc0:	vldr	s0, [r0]
   3efc4:	add	r0, r0, r3
   3efc8:	subs	r6, r6, #1
   3efcc:	vcvt.s32.f32	s0, s0
   3efd0:	vmov	r5, s0
   3efd4:	strh	r5, [lr], #2
   3efd8:	bne	3efc0 <GetDataSlab+0x1c5fc>
   3efdc:	ldr	r6, [sp, #56]	; 0x38
   3efe0:	add	r7, r7, #1
   3efe4:	add	r1, r1, r2
   3efe8:	mov	r0, #0
   3efec:	cmp	r7, r6
   3eff0:	bne	3efb0 <GetDataSlab+0x1c5ec>
   3eff4:	b	24900 <GetDataSlab+0x1f3c>
   3eff8:	ldr	r0, [sp, #56]	; 0x38
   3effc:	cmp	r0, #1
   3f000:	blt	248fc <GetDataSlab+0x1f38>
   3f004:	ldr	r0, [sp, #36]	; 0x24
   3f008:	ldr	r1, [sp, #32]
   3f00c:	mov	r7, #0
   3f010:	mla	r0, r1, r6, r0
   3f014:	add	r1, r4, r0, lsl #3
   3f018:	mul	r0, r3, r6
   3f01c:	lsl	r3, sl, #3
   3f020:	lsl	r2, r0, #3
   3f024:	cmp	r8, #1
   3f028:	blt	3f050 <GetDataSlab+0x1c68c>
   3f02c:	mov	r0, r1
   3f030:	mov	r6, r8
   3f034:	vldr	d16, [r0]
   3f038:	add	r0, r0, r3
   3f03c:	subs	r6, r6, #1
   3f040:	vcvt.s32.f64	s0, d16
   3f044:	vmov	r5, s0
   3f048:	strh	r5, [lr], #2
   3f04c:	bne	3f034 <GetDataSlab+0x1c670>
   3f050:	ldr	r6, [sp, #56]	; 0x38
   3f054:	add	r7, r7, #1
   3f058:	add	r1, r1, r2
   3f05c:	mov	r0, #0
   3f060:	cmp	r7, r6
   3f064:	bne	3f024 <GetDataSlab+0x1c660>
   3f068:	b	24900 <GetDataSlab+0x1f3c>
   3f06c:	ldr	r0, [sp, #56]	; 0x38
   3f070:	cmp	r0, #1
   3f074:	blt	248fc <GetDataSlab+0x1f38>
   3f078:	ldr	r0, [sp, #36]	; 0x24
   3f07c:	ldr	r1, [sp, #32]
   3f080:	lsl	r2, sl, #3
   3f084:	mla	r0, r1, r6, r0
   3f088:	mul	r1, r3, r6
   3f08c:	mov	r3, #0
   3f090:	add	r0, r4, r0, lsl #3
   3f094:	lsl	r1, r1, #3
   3f098:	cmp	r8, #1
   3f09c:	blt	3f0c0 <GetDataSlab+0x1c6fc>
   3f0a0:	mov	r6, #0
   3f0a4:	mov	r7, r8
   3f0a8:	sub	r5, r6, r2
   3f0ac:	ldrh	r6, [r0, -r6]
   3f0b0:	subs	r7, r7, #1
   3f0b4:	strh	r6, [lr], #2
   3f0b8:	mov	r6, r5
   3f0bc:	bne	3f0a8 <GetDataSlab+0x1c6e4>
   3f0c0:	ldr	r7, [sp, #56]	; 0x38
   3f0c4:	add	r3, r3, #1
   3f0c8:	add	r0, r0, r1
   3f0cc:	cmp	r3, r7
   3f0d0:	bne	3f098 <GetDataSlab+0x1c6d4>
   3f0d4:	ldr	r6, [sp, #40]	; 0x28
   3f0d8:	mov	r0, #0
   3f0dc:	cmp	ip, #13
   3f0e0:	bne	24900 <GetDataSlab+0x1f3c>
   3f0e4:	ldr	r0, [sp, #56]	; 0x38
   3f0e8:	cmp	r0, #1
   3f0ec:	blt	248fc <GetDataSlab+0x1f38>
   3f0f0:	ldr	r0, [sp, #36]	; 0x24
   3f0f4:	ldr	r1, [sp, #32]
   3f0f8:	lsl	r3, sl, #3
   3f0fc:	mov	r7, #0
   3f100:	mla	r0, r1, r6, r0
   3f104:	ldr	r1, [sp, #48]	; 0x30
   3f108:	add	r1, r1, r0, lsl #3
   3f10c:	ldr	r0, [sp, #44]	; 0x2c
   3f110:	mul	r0, r0, r6
   3f114:	lsl	r2, r0, #3
   3f118:	cmp	r8, #1
   3f11c:	blt	3f140 <GetDataSlab+0x1c77c>
   3f120:	mov	r6, #0
   3f124:	mov	r0, r8
   3f128:	sub	r5, r6, r3
   3f12c:	ldrh	r6, [r1, -r6]
   3f130:	subs	r0, r0, #1
   3f134:	strh	r6, [lr], #2
   3f138:	mov	r6, r5
   3f13c:	bne	3f128 <GetDataSlab+0x1c764>
   3f140:	ldr	r6, [sp, #56]	; 0x38
   3f144:	add	r7, r7, #1
   3f148:	add	r1, r1, r2
   3f14c:	mov	r0, #0
   3f150:	cmp	r7, r6
   3f154:	bne	3f118 <GetDataSlab+0x1c754>
   3f158:	b	24900 <GetDataSlab+0x1f3c>
   3f15c:	ldr	r0, [sp, #56]	; 0x38
   3f160:	cmp	r0, #1
   3f164:	blt	248fc <GetDataSlab+0x1f38>
   3f168:	ldr	r0, [sp, #36]	; 0x24
   3f16c:	ldr	r1, [sp, #32]
   3f170:	mul	r2, r3, r6
   3f174:	mov	r3, #0
   3f178:	mla	r0, r1, r6, r0
   3f17c:	add	r1, r9, r0
   3f180:	cmp	r8, #1
   3f184:	blt	3f1a8 <GetDataSlab+0x1c7e4>
   3f188:	mov	r7, #0
   3f18c:	mov	r0, r8
   3f190:	add	r6, r7, sl
   3f194:	ldrb	r7, [r1, r7]
   3f198:	subs	r0, r0, #1
   3f19c:	strh	r7, [lr], #2
   3f1a0:	mov	r7, r6
   3f1a4:	bne	3f190 <GetDataSlab+0x1c7cc>
   3f1a8:	ldr	r7, [sp, #56]	; 0x38
   3f1ac:	add	r3, r3, #1
   3f1b0:	add	r1, r1, r2
   3f1b4:	mov	r0, #0
   3f1b8:	cmp	r3, r7
   3f1bc:	bne	3f180 <GetDataSlab+0x1c7bc>
   3f1c0:	b	24900 <GetDataSlab+0x1f3c>
   3f1c4:	ldr	r0, [sp, #56]	; 0x38
   3f1c8:	cmp	r0, #1
   3f1cc:	blt	248fc <GetDataSlab+0x1f38>
   3f1d0:	ldr	r0, [sp, #36]	; 0x24
   3f1d4:	ldr	r1, [sp, #32]
   3f1d8:	mov	r7, #0
   3f1dc:	mla	r0, r1, r6, r0
   3f1e0:	add	r1, r9, r0, lsl #1
   3f1e4:	mul	r0, r3, r6
   3f1e8:	lsl	r3, sl, #1
   3f1ec:	lsl	r2, r0, #1
   3f1f0:	cmp	r8, #1
   3f1f4:	blt	3f218 <GetDataSlab+0x1c854>
   3f1f8:	mov	r6, #0
   3f1fc:	mov	r0, r8
   3f200:	sub	r5, r6, r3
   3f204:	ldrh	r6, [r1, -r6]
   3f208:	subs	r0, r0, #1
   3f20c:	strh	r6, [lr], #2
   3f210:	mov	r6, r5
   3f214:	bne	3f200 <GetDataSlab+0x1c83c>
   3f218:	ldr	r6, [sp, #56]	; 0x38
   3f21c:	add	r7, r7, #1
   3f220:	add	r1, r1, r2
   3f224:	mov	r0, #0
   3f228:	cmp	r7, r6
   3f22c:	bne	3f1f0 <GetDataSlab+0x1c82c>
   3f230:	b	24900 <GetDataSlab+0x1f3c>
   3f234:	ldr	r0, [sp, #56]	; 0x38
   3f238:	cmp	r0, #1
   3f23c:	blt	248fc <GetDataSlab+0x1f38>
   3f240:	ldr	r0, [sp, #36]	; 0x24
   3f244:	ldr	r1, [sp, #32]
   3f248:	mov	r7, #0
   3f24c:	mla	r0, r1, r6, r0
   3f250:	add	r1, r9, r0, lsl #1
   3f254:	mul	r0, r3, r6
   3f258:	lsl	r3, sl, #1
   3f25c:	lsl	r2, r0, #1
   3f260:	cmp	r8, #1
   3f264:	blt	3f288 <GetDataSlab+0x1c8c4>
   3f268:	mov	r6, #0
   3f26c:	mov	r0, r8
   3f270:	sub	r5, r6, r3
   3f274:	ldrh	r6, [r1, -r6]
   3f278:	subs	r0, r0, #1
   3f27c:	strh	r6, [lr], #2
   3f280:	mov	r6, r5
   3f284:	bne	3f270 <GetDataSlab+0x1c8ac>
   3f288:	ldr	r6, [sp, #56]	; 0x38
   3f28c:	add	r7, r7, #1
   3f290:	add	r1, r1, r2
   3f294:	mov	r0, #0
   3f298:	cmp	r7, r6
   3f29c:	bne	3f260 <GetDataSlab+0x1c89c>
   3f2a0:	b	24900 <GetDataSlab+0x1f3c>
   3f2a4:	ldr	r0, [sp, #56]	; 0x38
   3f2a8:	cmp	r0, #1
   3f2ac:	blt	248fc <GetDataSlab+0x1f38>
   3f2b0:	ldr	r0, [sp, #36]	; 0x24
   3f2b4:	ldr	r1, [sp, #32]
   3f2b8:	mov	r7, #0
   3f2bc:	mla	r0, r1, r6, r0
   3f2c0:	add	r1, r9, r0, lsl #2
   3f2c4:	mul	r0, r3, r6
   3f2c8:	lsl	r3, sl, #2
   3f2cc:	lsl	r2, r0, #2
   3f2d0:	cmp	r8, #1
   3f2d4:	blt	3f2f8 <GetDataSlab+0x1c934>
   3f2d8:	mov	r6, #0
   3f2dc:	mov	r0, r8
   3f2e0:	sub	r5, r6, r3
   3f2e4:	ldr	r6, [r1, -r6]
   3f2e8:	subs	r0, r0, #1
   3f2ec:	strh	r6, [lr], #2
   3f2f0:	mov	r6, r5
   3f2f4:	bne	3f2e0 <GetDataSlab+0x1c91c>
   3f2f8:	ldr	r6, [sp, #56]	; 0x38
   3f2fc:	add	r7, r7, #1
   3f300:	add	r1, r1, r2
   3f304:	mov	r0, #0
   3f308:	cmp	r7, r6
   3f30c:	bne	3f2d0 <GetDataSlab+0x1c90c>
   3f310:	b	24900 <GetDataSlab+0x1f3c>
   3f314:	ldr	r0, [sp, #56]	; 0x38
   3f318:	cmp	r0, #1
   3f31c:	blt	248fc <GetDataSlab+0x1f38>
   3f320:	ldr	r0, [sp, #36]	; 0x24
   3f324:	ldr	r1, [sp, #32]
   3f328:	mov	r7, #0
   3f32c:	mla	r0, r1, r6, r0
   3f330:	add	r1, r9, r0, lsl #2
   3f334:	mul	r0, r3, r6
   3f338:	lsl	r3, sl, #2
   3f33c:	lsl	r2, r0, #2
   3f340:	cmp	r8, #1
   3f344:	blt	3f368 <GetDataSlab+0x1c9a4>
   3f348:	mov	r6, #0
   3f34c:	mov	r0, r8
   3f350:	sub	r5, r6, r3
   3f354:	ldr	r6, [r1, -r6]
   3f358:	subs	r0, r0, #1
   3f35c:	strh	r6, [lr], #2
   3f360:	mov	r6, r5
   3f364:	bne	3f350 <GetDataSlab+0x1c98c>
   3f368:	ldr	r6, [sp, #56]	; 0x38
   3f36c:	add	r7, r7, #1
   3f370:	add	r1, r1, r2
   3f374:	mov	r0, #0
   3f378:	cmp	r7, r6
   3f37c:	bne	3f340 <GetDataSlab+0x1c97c>
   3f380:	b	24900 <GetDataSlab+0x1f3c>
   3f384:	ldr	r0, [sp, #56]	; 0x38
   3f388:	cmp	r0, #1
   3f38c:	blt	248fc <GetDataSlab+0x1f38>
   3f390:	ldr	r0, [sp, #36]	; 0x24
   3f394:	ldr	r1, [sp, #32]
   3f398:	mov	r7, #0
   3f39c:	mla	r0, r1, r6, r0
   3f3a0:	add	r1, r9, r0, lsl #2
   3f3a4:	mul	r0, r3, r6
   3f3a8:	lsl	r3, sl, #2
   3f3ac:	lsl	r2, r0, #2
   3f3b0:	cmp	r8, #1
   3f3b4:	blt	3f3dc <GetDataSlab+0x1ca18>
   3f3b8:	mov	r0, r1
   3f3bc:	mov	r6, r8
   3f3c0:	vldr	s0, [r0]
   3f3c4:	add	r0, r0, r3
   3f3c8:	subs	r6, r6, #1
   3f3cc:	vcvt.u32.f32	s0, s0
   3f3d0:	vmov	r5, s0
   3f3d4:	strh	r5, [lr], #2
   3f3d8:	bne	3f3c0 <GetDataSlab+0x1c9fc>
   3f3dc:	ldr	r6, [sp, #56]	; 0x38
   3f3e0:	add	r7, r7, #1
   3f3e4:	add	r1, r1, r2
   3f3e8:	mov	r0, #0
   3f3ec:	cmp	r7, r6
   3f3f0:	bne	3f3b0 <GetDataSlab+0x1c9ec>
   3f3f4:	b	24900 <GetDataSlab+0x1f3c>
   3f3f8:	ldr	r0, [sp, #56]	; 0x38
   3f3fc:	cmp	r0, #1
   3f400:	blt	248fc <GetDataSlab+0x1f38>
   3f404:	ldr	r0, [sp, #36]	; 0x24
   3f408:	ldr	r1, [sp, #32]
   3f40c:	mov	r7, #0
   3f410:	mla	r0, r1, r6, r0
   3f414:	add	r1, r9, r0, lsl #3
   3f418:	mul	r0, r3, r6
   3f41c:	lsl	r3, sl, #3
   3f420:	lsl	r2, r0, #3
   3f424:	cmp	r8, #1
   3f428:	blt	3f450 <GetDataSlab+0x1ca8c>
   3f42c:	mov	r0, r1
   3f430:	mov	r6, r8
   3f434:	vldr	d16, [r0]
   3f438:	add	r0, r0, r3
   3f43c:	subs	r6, r6, #1
   3f440:	vcvt.u32.f64	s0, d16
   3f444:	vmov	r5, s0
   3f448:	strh	r5, [lr], #2
   3f44c:	bne	3f434 <GetDataSlab+0x1ca70>
   3f450:	ldr	r6, [sp, #56]	; 0x38
   3f454:	add	r7, r7, #1
   3f458:	add	r1, r1, r2
   3f45c:	mov	r0, #0
   3f460:	cmp	r7, r6
   3f464:	bne	3f424 <GetDataSlab+0x1ca60>
   3f468:	b	24900 <GetDataSlab+0x1f3c>
   3f46c:	ldr	r0, [sp, #56]	; 0x38
   3f470:	cmp	r0, #1
   3f474:	blt	248fc <GetDataSlab+0x1f38>
   3f478:	ldr	r0, [sp, #36]	; 0x24
   3f47c:	ldr	r1, [sp, #32]
   3f480:	lsl	r2, sl, #3
   3f484:	mla	r0, r1, r6, r0
   3f488:	mul	r1, r3, r6
   3f48c:	mov	r3, #0
   3f490:	add	r0, r9, r0, lsl #3
   3f494:	lsl	r1, r1, #3
   3f498:	cmp	r8, #1
   3f49c:	blt	3f4c0 <GetDataSlab+0x1cafc>
   3f4a0:	mov	r6, #0
   3f4a4:	mov	r7, r8
   3f4a8:	sub	r5, r6, r2
   3f4ac:	ldrh	r6, [r0, -r6]
   3f4b0:	subs	r7, r7, #1
   3f4b4:	strh	r6, [lr], #2
   3f4b8:	mov	r6, r5
   3f4bc:	bne	3f4a8 <GetDataSlab+0x1cae4>
   3f4c0:	ldr	r7, [sp, #56]	; 0x38
   3f4c4:	add	r3, r3, #1
   3f4c8:	add	r0, r0, r1
   3f4cc:	cmp	r3, r7
   3f4d0:	bne	3f498 <GetDataSlab+0x1cad4>
   3f4d4:	ldr	r9, [sp, #48]	; 0x30
   3f4d8:	ldr	r6, [sp, #40]	; 0x28
   3f4dc:	mov	r0, #0
   3f4e0:	cmp	ip, #13
   3f4e4:	bne	24900 <GetDataSlab+0x1f3c>
   3f4e8:	ldr	r0, [sp, #56]	; 0x38
   3f4ec:	cmp	r0, #1
   3f4f0:	blt	248fc <GetDataSlab+0x1f38>
   3f4f4:	ldr	r0, [sp, #36]	; 0x24
   3f4f8:	ldr	r1, [sp, #32]
   3f4fc:	lsl	r3, sl, #3
   3f500:	mov	r7, #0
   3f504:	mla	r0, r1, r6, r0
   3f508:	add	r1, r9, r0, lsl #3
   3f50c:	ldr	r0, [sp, #44]	; 0x2c
   3f510:	mul	r0, r0, r6
   3f514:	lsl	r2, r0, #3
   3f518:	cmp	r8, #1
   3f51c:	blt	3f540 <GetDataSlab+0x1cb7c>
   3f520:	mov	r6, #0
   3f524:	mov	r0, r8
   3f528:	sub	r5, r6, r3
   3f52c:	ldrh	r6, [r1, -r6]
   3f530:	subs	r0, r0, #1
   3f534:	strh	r6, [lr], #2
   3f538:	mov	r6, r5
   3f53c:	bne	3f528 <GetDataSlab+0x1cb64>
   3f540:	ldr	r6, [sp, #56]	; 0x38
   3f544:	add	r7, r7, #1
   3f548:	add	r1, r1, r2
   3f54c:	mov	r0, #0
   3f550:	cmp	r7, r6
   3f554:	bne	3f518 <GetDataSlab+0x1cb54>
   3f558:	b	24900 <GetDataSlab+0x1f3c>
   3f55c:	cmp	r1, #1
   3f560:	blt	248fc <GetDataSlab+0x1f38>
   3f564:	ldr	r0, [sp, #36]	; 0x24
   3f568:	ldr	r1, [sp, #32]
   3f56c:	mov	r7, #0
   3f570:	mla	r0, r1, r6, r0
   3f574:	add	r2, r9, r0
   3f578:	cmp	r8, #1
   3f57c:	blt	3f5cc <GetDataSlab+0x1cc08>
   3f580:	ldr	r4, [fp, #20]
   3f584:	ldr	r1, [fp, #16]
   3f588:	ldr	r9, [fp, #8]
   3f58c:	mov	r0, #0
   3f590:	mov	r6, #0
   3f594:	ldr	r5, [r1]
   3f598:	add	r0, r0, #4
   3f59c:	mul	r5, r5, r6
   3f5a0:	ldrb	r5, [r2, r5]
   3f5a4:	str	r5, [lr, r6, lsl #2]
   3f5a8:	add	r6, r6, #1
   3f5ac:	ldr	r8, [r4]
   3f5b0:	cmp	r6, r8
   3f5b4:	blt	3f594 <GetDataSlab+0x1cbd0>
   3f5b8:	add	lr, lr, r0
   3f5bc:	ldr	r1, [r3]
   3f5c0:	ldr	r6, [r9]
   3f5c4:	ldr	r0, [ip]
   3f5c8:	b	3f5d4 <GetDataSlab+0x1cc10>
   3f5cc:	ldr	r1, [sp, #56]	; 0x38
   3f5d0:	ldr	r0, [sp, #44]	; 0x2c
   3f5d4:	mla	r2, r6, r0, r2
   3f5d8:	add	r7, r7, #1
   3f5dc:	str	r0, [sp, #44]	; 0x2c
   3f5e0:	mov	r0, #0
   3f5e4:	str	r1, [sp, #56]	; 0x38
   3f5e8:	cmp	r7, r1
   3f5ec:	blt	3f578 <GetDataSlab+0x1cbb4>
   3f5f0:	b	24900 <GetDataSlab+0x1f3c>
   3f5f4:	cmp	r1, #1
   3f5f8:	blt	248fc <GetDataSlab+0x1f38>
   3f5fc:	ldr	r0, [sp, #36]	; 0x24
   3f600:	ldr	r1, [sp, #32]
   3f604:	mov	r7, #0
   3f608:	mla	r0, r1, r6, r0
   3f60c:	add	r2, r9, r0, lsl #1
   3f610:	cmp	r8, #1
   3f614:	blt	3f668 <GetDataSlab+0x1cca4>
   3f618:	ldr	r4, [fp, #20]
   3f61c:	ldr	r1, [fp, #16]
   3f620:	ldr	r9, [fp, #8]
   3f624:	mov	r0, #0
   3f628:	mov	r6, #0
   3f62c:	ldr	r5, [r1]
   3f630:	add	r0, r0, #4
   3f634:	mul	r5, r5, r6
   3f638:	add	r5, r2, r5, lsl #1
   3f63c:	ldrsh	r5, [r5]
   3f640:	str	r5, [lr, r6, lsl #2]
   3f644:	add	r6, r6, #1
   3f648:	ldr	r8, [r4]
   3f64c:	cmp	r6, r8
   3f650:	blt	3f62c <GetDataSlab+0x1cc68>
   3f654:	add	lr, lr, r0
   3f658:	ldr	r1, [r3]
   3f65c:	ldr	r6, [r9]
   3f660:	ldr	r0, [ip]
   3f664:	b	3f670 <GetDataSlab+0x1ccac>
   3f668:	ldr	r1, [sp, #56]	; 0x38
   3f66c:	ldr	r0, [sp, #44]	; 0x2c
   3f670:	str	r0, [sp, #44]	; 0x2c
   3f674:	mul	r0, r6, r0
   3f678:	add	r7, r7, #1
   3f67c:	str	r1, [sp, #56]	; 0x38
   3f680:	cmp	r7, r1
   3f684:	add	r2, r2, r0, lsl #1
   3f688:	mov	r0, #0
   3f68c:	blt	3f610 <GetDataSlab+0x1cc4c>
   3f690:	b	24900 <GetDataSlab+0x1f3c>
   3f694:	cmp	r1, #1
   3f698:	blt	248fc <GetDataSlab+0x1f38>
   3f69c:	ldr	r0, [sp, #36]	; 0x24
   3f6a0:	ldr	r1, [sp, #32]
   3f6a4:	mov	r7, #0
   3f6a8:	mla	r0, r1, r6, r0
   3f6ac:	add	r2, r9, r0, lsl #1
   3f6b0:	cmp	r8, #1
   3f6b4:	blt	3f708 <GetDataSlab+0x1cd44>
   3f6b8:	ldr	r4, [fp, #20]
   3f6bc:	ldr	r1, [fp, #16]
   3f6c0:	ldr	r9, [fp, #8]
   3f6c4:	mov	r0, #0
   3f6c8:	mov	r6, #0
   3f6cc:	ldr	r5, [r1]
   3f6d0:	add	r0, r0, #4
   3f6d4:	mul	r5, r5, r6
   3f6d8:	add	r5, r2, r5, lsl #1
   3f6dc:	ldrh	r5, [r5]
   3f6e0:	str	r5, [lr, r6, lsl #2]
   3f6e4:	add	r6, r6, #1
   3f6e8:	ldr	r8, [r4]
   3f6ec:	cmp	r6, r8
   3f6f0:	blt	3f6cc <GetDataSlab+0x1cd08>
   3f6f4:	add	lr, lr, r0
   3f6f8:	ldr	r1, [r3]
   3f6fc:	ldr	r6, [r9]
   3f700:	ldr	r0, [ip]
   3f704:	b	3f710 <GetDataSlab+0x1cd4c>
   3f708:	ldr	r1, [sp, #56]	; 0x38
   3f70c:	ldr	r0, [sp, #44]	; 0x2c
   3f710:	str	r0, [sp, #44]	; 0x2c
   3f714:	mul	r0, r6, r0
   3f718:	add	r7, r7, #1
   3f71c:	str	r1, [sp, #56]	; 0x38
   3f720:	cmp	r7, r1
   3f724:	add	r2, r2, r0, lsl #1
   3f728:	mov	r0, #0
   3f72c:	blt	3f6b0 <GetDataSlab+0x1ccec>
   3f730:	b	24900 <GetDataSlab+0x1f3c>
   3f734:	cmp	r1, #1
   3f738:	blt	248fc <GetDataSlab+0x1f38>
   3f73c:	ldr	r0, [sp, #36]	; 0x24
   3f740:	ldr	r1, [sp, #32]
   3f744:	mov	r7, #0
   3f748:	mla	r0, r1, r6, r0
   3f74c:	add	r2, r9, r0, lsl #2
   3f750:	cmp	r8, #1
   3f754:	blt	3f7a4 <GetDataSlab+0x1cde0>
   3f758:	ldr	r4, [fp, #20]
   3f75c:	ldr	r1, [fp, #16]
   3f760:	ldr	r9, [fp, #8]
   3f764:	mov	r0, #0
   3f768:	mov	r6, #0
   3f76c:	ldr	r5, [r1]
   3f770:	add	r0, r0, #4
   3f774:	mul	r5, r5, r6
   3f778:	ldr	r5, [r2, r5, lsl #2]
   3f77c:	str	r5, [lr, r6, lsl #2]
   3f780:	add	r6, r6, #1
   3f784:	ldr	r8, [r4]
   3f788:	cmp	r6, r8
   3f78c:	blt	3f76c <GetDataSlab+0x1cda8>
   3f790:	add	lr, lr, r0
   3f794:	ldr	r1, [r3]
   3f798:	ldr	r6, [r9]
   3f79c:	ldr	r0, [ip]
   3f7a0:	b	3f7ac <GetDataSlab+0x1cde8>
   3f7a4:	ldr	r1, [sp, #56]	; 0x38
   3f7a8:	ldr	r0, [sp, #44]	; 0x2c
   3f7ac:	str	r0, [sp, #44]	; 0x2c
   3f7b0:	mul	r0, r6, r0
   3f7b4:	add	r7, r7, #1
   3f7b8:	str	r1, [sp, #56]	; 0x38
   3f7bc:	cmp	r7, r1
   3f7c0:	add	r2, r2, r0, lsl #2
   3f7c4:	mov	r0, #0
   3f7c8:	blt	3f750 <GetDataSlab+0x1cd8c>
   3f7cc:	b	24900 <GetDataSlab+0x1f3c>
   3f7d0:	cmp	r1, #1
   3f7d4:	blt	248fc <GetDataSlab+0x1f38>
   3f7d8:	ldr	r0, [sp, #36]	; 0x24
   3f7dc:	ldr	r1, [sp, #32]
   3f7e0:	mov	r7, #0
   3f7e4:	mla	r0, r1, r6, r0
   3f7e8:	add	r2, r9, r0, lsl #2
   3f7ec:	cmp	r8, #1
   3f7f0:	blt	3f840 <GetDataSlab+0x1ce7c>
   3f7f4:	ldr	r4, [fp, #20]
   3f7f8:	ldr	r1, [fp, #16]
   3f7fc:	ldr	r9, [fp, #8]
   3f800:	mov	r0, #0
   3f804:	mov	r6, #0
   3f808:	ldr	r5, [r1]
   3f80c:	add	r0, r0, #4
   3f810:	mul	r5, r5, r6
   3f814:	ldr	r5, [r2, r5, lsl #2]
   3f818:	str	r5, [lr, r6, lsl #2]
   3f81c:	add	r6, r6, #1
   3f820:	ldr	r8, [r4]
   3f824:	cmp	r6, r8
   3f828:	blt	3f808 <GetDataSlab+0x1ce44>
   3f82c:	add	lr, lr, r0
   3f830:	ldr	r1, [r3]
   3f834:	ldr	r6, [r9]
   3f838:	ldr	r0, [ip]
   3f83c:	b	3f848 <GetDataSlab+0x1ce84>
   3f840:	ldr	r1, [sp, #56]	; 0x38
   3f844:	ldr	r0, [sp, #44]	; 0x2c
   3f848:	str	r0, [sp, #44]	; 0x2c
   3f84c:	mul	r0, r6, r0
   3f850:	add	r7, r7, #1
   3f854:	str	r1, [sp, #56]	; 0x38
   3f858:	cmp	r7, r1
   3f85c:	add	r2, r2, r0, lsl #2
   3f860:	mov	r0, #0
   3f864:	blt	3f7ec <GetDataSlab+0x1ce28>
   3f868:	b	24900 <GetDataSlab+0x1f3c>
   3f86c:	cmp	r1, #1
   3f870:	blt	248fc <GetDataSlab+0x1f38>
   3f874:	ldr	r0, [sp, #36]	; 0x24
   3f878:	ldr	r1, [sp, #32]
   3f87c:	mov	r7, #0
   3f880:	mla	r0, r1, r6, r0
   3f884:	add	r2, r9, r0, lsl #2
   3f888:	cmp	r8, #1
   3f88c:	blt	3f8e8 <GetDataSlab+0x1cf24>
   3f890:	ldr	r4, [fp, #20]
   3f894:	ldr	r1, [fp, #16]
   3f898:	ldr	r9, [fp, #8]
   3f89c:	mov	r0, #0
   3f8a0:	mov	r6, #0
   3f8a4:	ldr	r5, [r1]
   3f8a8:	add	r0, r0, #4
   3f8ac:	mul	r5, r5, r6
   3f8b0:	add	r5, r2, r5, lsl #2
   3f8b4:	vldr	s0, [r5]
   3f8b8:	vcvt.s32.f32	s0, s0
   3f8bc:	vmov	r5, s0
   3f8c0:	str	r5, [lr, r6, lsl #2]
   3f8c4:	add	r6, r6, #1
   3f8c8:	ldr	r8, [r4]
   3f8cc:	cmp	r6, r8
   3f8d0:	blt	3f8a4 <GetDataSlab+0x1cee0>
   3f8d4:	add	lr, lr, r0
   3f8d8:	ldr	r1, [r3]
   3f8dc:	ldr	r6, [r9]
   3f8e0:	ldr	r0, [ip]
   3f8e4:	b	3f8f0 <GetDataSlab+0x1cf2c>
   3f8e8:	ldr	r1, [sp, #56]	; 0x38
   3f8ec:	ldr	r0, [sp, #44]	; 0x2c
   3f8f0:	str	r0, [sp, #44]	; 0x2c
   3f8f4:	mul	r0, r6, r0
   3f8f8:	add	r7, r7, #1
   3f8fc:	str	r1, [sp, #56]	; 0x38
   3f900:	cmp	r7, r1
   3f904:	add	r2, r2, r0, lsl #2
   3f908:	mov	r0, #0
   3f90c:	blt	3f888 <GetDataSlab+0x1cec4>
   3f910:	b	24900 <GetDataSlab+0x1f3c>
   3f914:	cmp	r1, #1
   3f918:	blt	248fc <GetDataSlab+0x1f38>
   3f91c:	ldr	r0, [sp, #36]	; 0x24
   3f920:	ldr	r1, [sp, #32]
   3f924:	mov	r7, #0
   3f928:	mla	r0, r1, r6, r0
   3f92c:	add	r2, r9, r0, lsl #3
   3f930:	cmp	r8, #1
   3f934:	blt	3f990 <GetDataSlab+0x1cfcc>
   3f938:	ldr	r4, [fp, #20]
   3f93c:	ldr	r1, [fp, #16]
   3f940:	ldr	r9, [fp, #8]
   3f944:	mov	r0, #0
   3f948:	mov	r6, #0
   3f94c:	ldr	r5, [r1]
   3f950:	add	r0, r0, #4
   3f954:	mul	r5, r5, r6
   3f958:	add	r5, r2, r5, lsl #3
   3f95c:	vldr	d16, [r5]
   3f960:	vcvt.s32.f64	s0, d16
   3f964:	vmov	r5, s0
   3f968:	str	r5, [lr, r6, lsl #2]
   3f96c:	add	r6, r6, #1
   3f970:	ldr	r8, [r4]
   3f974:	cmp	r6, r8
   3f978:	blt	3f94c <GetDataSlab+0x1cf88>
   3f97c:	add	lr, lr, r0
   3f980:	ldr	r1, [r3]
   3f984:	ldr	r6, [r9]
   3f988:	ldr	r0, [ip]
   3f98c:	b	3f998 <GetDataSlab+0x1cfd4>
   3f990:	ldr	r1, [sp, #56]	; 0x38
   3f994:	ldr	r0, [sp, #44]	; 0x2c
   3f998:	str	r0, [sp, #44]	; 0x2c
   3f99c:	mul	r0, r6, r0
   3f9a0:	add	r7, r7, #1
   3f9a4:	str	r1, [sp, #56]	; 0x38
   3f9a8:	cmp	r7, r1
   3f9ac:	add	r2, r2, r0, lsl #3
   3f9b0:	mov	r0, #0
   3f9b4:	blt	3f930 <GetDataSlab+0x1cf6c>
   3f9b8:	b	24900 <GetDataSlab+0x1f3c>
   3f9bc:	cmp	r1, #1
   3f9c0:	blt	248fc <GetDataSlab+0x1f38>
   3f9c4:	ldr	r0, [sp, #36]	; 0x24
   3f9c8:	ldr	r2, [sp, #32]
   3f9cc:	mov	sl, r9
   3f9d0:	ldr	r4, [fp, #20]
   3f9d4:	mla	r0, r2, r6, r0
   3f9d8:	mov	r2, #0
   3f9dc:	add	r0, r9, r0, lsl #3
   3f9e0:	ldr	r9, [fp, #8]
   3f9e4:	cmp	r8, #1
   3f9e8:	blt	3fa2c <GetDataSlab+0x1d068>
   3f9ec:	ldr	r1, [fp, #16]
   3f9f0:	mov	r7, #0
   3f9f4:	mov	r6, #0
   3f9f8:	ldr	r5, [r1]
   3f9fc:	add	r7, r7, #4
   3fa00:	mul	r5, r5, r6
   3fa04:	ldr	r5, [r0, r5, lsl #3]
   3fa08:	str	r5, [lr, r6, lsl #2]
   3fa0c:	add	r6, r6, #1
   3fa10:	ldr	r8, [r4]
   3fa14:	cmp	r6, r8
   3fa18:	blt	3f9f8 <GetDataSlab+0x1d034>
   3fa1c:	ldr	r1, [r3]
   3fa20:	ldr	r6, [r9]
   3fa24:	ldr	r5, [ip]
   3fa28:	add	lr, lr, r7
   3fa2c:	mul	r7, r6, r5
   3fa30:	add	r2, r2, #1
   3fa34:	cmp	r2, r1
   3fa38:	add	r0, r0, r7, lsl #3
   3fa3c:	blt	3f9e4 <GetDataSlab+0x1d020>
   3fa40:	mov	r0, #0
   3fa44:	mov	r9, sl
   3fa48:	b	40a20 <GetDataSlab+0x1e05c>
   3fa4c:	cmp	r1, #1
   3fa50:	blt	248fc <GetDataSlab+0x1f38>
   3fa54:	ldr	r0, [sp, #36]	; 0x24
   3fa58:	ldr	r1, [sp, #32]
   3fa5c:	mov	r7, #0
   3fa60:	mla	r0, r1, r6, r0
   3fa64:	add	r2, r9, r0
   3fa68:	cmp	r8, #1
   3fa6c:	blt	3fabc <GetDataSlab+0x1d0f8>
   3fa70:	ldr	r4, [fp, #20]
   3fa74:	ldr	r1, [fp, #16]
   3fa78:	ldr	r9, [fp, #8]
   3fa7c:	mov	r0, #0
   3fa80:	mov	r6, #0
   3fa84:	ldr	r5, [r1]
   3fa88:	add	r0, r0, #4
   3fa8c:	mul	r5, r5, r6
   3fa90:	ldrb	r5, [r2, r5]
   3fa94:	str	r5, [lr, r6, lsl #2]
   3fa98:	add	r6, r6, #1
   3fa9c:	ldr	r8, [r4]
   3faa0:	cmp	r6, r8
   3faa4:	blt	3fa84 <GetDataSlab+0x1d0c0>
   3faa8:	add	lr, lr, r0
   3faac:	ldr	r1, [r3]
   3fab0:	ldr	r6, [r9]
   3fab4:	ldr	r0, [ip]
   3fab8:	b	3fac4 <GetDataSlab+0x1d100>
   3fabc:	ldr	r1, [sp, #56]	; 0x38
   3fac0:	ldr	r0, [sp, #44]	; 0x2c
   3fac4:	mla	r2, r6, r0, r2
   3fac8:	add	r7, r7, #1
   3facc:	str	r0, [sp, #44]	; 0x2c
   3fad0:	mov	r0, #0
   3fad4:	str	r1, [sp, #56]	; 0x38
   3fad8:	cmp	r7, r1
   3fadc:	blt	3fa68 <GetDataSlab+0x1d0a4>
   3fae0:	b	24900 <GetDataSlab+0x1f3c>
   3fae4:	cmp	r1, #1
   3fae8:	blt	248fc <GetDataSlab+0x1f38>
   3faec:	ldr	r0, [sp, #36]	; 0x24
   3faf0:	ldr	r1, [sp, #32]
   3faf4:	mov	r7, #0
   3faf8:	mla	r0, r1, r6, r0
   3fafc:	add	r2, r9, r0, lsl #1
   3fb00:	cmp	r8, #1
   3fb04:	blt	3fb58 <GetDataSlab+0x1d194>
   3fb08:	ldr	r4, [fp, #20]
   3fb0c:	ldr	r1, [fp, #16]
   3fb10:	ldr	r9, [fp, #8]
   3fb14:	mov	r0, #0
   3fb18:	mov	r6, #0
   3fb1c:	ldr	r5, [r1]
   3fb20:	add	r0, r0, #4
   3fb24:	mul	r5, r5, r6
   3fb28:	add	r5, r2, r5, lsl #1
   3fb2c:	ldrsh	r5, [r5]
   3fb30:	str	r5, [lr, r6, lsl #2]
   3fb34:	add	r6, r6, #1
   3fb38:	ldr	r8, [r4]
   3fb3c:	cmp	r6, r8
   3fb40:	blt	3fb1c <GetDataSlab+0x1d158>
   3fb44:	add	lr, lr, r0
   3fb48:	ldr	r1, [r3]
   3fb4c:	ldr	r6, [r9]
   3fb50:	ldr	r0, [ip]
   3fb54:	b	3fb60 <GetDataSlab+0x1d19c>
   3fb58:	ldr	r1, [sp, #56]	; 0x38
   3fb5c:	ldr	r0, [sp, #44]	; 0x2c
   3fb60:	str	r0, [sp, #44]	; 0x2c
   3fb64:	mul	r0, r6, r0
   3fb68:	add	r7, r7, #1
   3fb6c:	str	r1, [sp, #56]	; 0x38
   3fb70:	cmp	r7, r1
   3fb74:	add	r2, r2, r0, lsl #1
   3fb78:	mov	r0, #0
   3fb7c:	blt	3fb00 <GetDataSlab+0x1d13c>
   3fb80:	b	24900 <GetDataSlab+0x1f3c>
   3fb84:	cmp	r1, #1
   3fb88:	blt	248fc <GetDataSlab+0x1f38>
   3fb8c:	ldr	r0, [sp, #36]	; 0x24
   3fb90:	ldr	r1, [sp, #32]
   3fb94:	mov	r7, #0
   3fb98:	mla	r0, r1, r6, r0
   3fb9c:	add	r2, r9, r0, lsl #1
   3fba0:	cmp	r8, #1
   3fba4:	blt	3fbf8 <GetDataSlab+0x1d234>
   3fba8:	ldr	r4, [fp, #20]
   3fbac:	ldr	r1, [fp, #16]
   3fbb0:	ldr	r9, [fp, #8]
   3fbb4:	mov	r0, #0
   3fbb8:	mov	r6, #0
   3fbbc:	ldr	r5, [r1]
   3fbc0:	add	r0, r0, #4
   3fbc4:	mul	r5, r5, r6
   3fbc8:	add	r5, r2, r5, lsl #1
   3fbcc:	ldrh	r5, [r5]
   3fbd0:	str	r5, [lr, r6, lsl #2]
   3fbd4:	add	r6, r6, #1
   3fbd8:	ldr	r8, [r4]
   3fbdc:	cmp	r6, r8
   3fbe0:	blt	3fbbc <GetDataSlab+0x1d1f8>
   3fbe4:	add	lr, lr, r0
   3fbe8:	ldr	r1, [r3]
   3fbec:	ldr	r6, [r9]
   3fbf0:	ldr	r0, [ip]
   3fbf4:	b	3fc00 <GetDataSlab+0x1d23c>
   3fbf8:	ldr	r1, [sp, #56]	; 0x38
   3fbfc:	ldr	r0, [sp, #44]	; 0x2c
   3fc00:	str	r0, [sp, #44]	; 0x2c
   3fc04:	mul	r0, r6, r0
   3fc08:	add	r7, r7, #1
   3fc0c:	str	r1, [sp, #56]	; 0x38
   3fc10:	cmp	r7, r1
   3fc14:	add	r2, r2, r0, lsl #1
   3fc18:	mov	r0, #0
   3fc1c:	blt	3fba0 <GetDataSlab+0x1d1dc>
   3fc20:	b	24900 <GetDataSlab+0x1f3c>
   3fc24:	cmp	r1, #1
   3fc28:	blt	248fc <GetDataSlab+0x1f38>
   3fc2c:	ldr	r0, [sp, #36]	; 0x24
   3fc30:	ldr	r1, [sp, #32]
   3fc34:	mov	r7, #0
   3fc38:	mla	r0, r1, r6, r0
   3fc3c:	add	r2, r9, r0, lsl #2
   3fc40:	cmp	r8, #1
   3fc44:	blt	3fc94 <GetDataSlab+0x1d2d0>
   3fc48:	ldr	r4, [fp, #20]
   3fc4c:	ldr	r1, [fp, #16]
   3fc50:	ldr	r9, [fp, #8]
   3fc54:	mov	r0, #0
   3fc58:	mov	r6, #0
   3fc5c:	ldr	r5, [r1]
   3fc60:	add	r0, r0, #4
   3fc64:	mul	r5, r5, r6
   3fc68:	ldr	r5, [r2, r5, lsl #2]
   3fc6c:	str	r5, [lr, r6, lsl #2]
   3fc70:	add	r6, r6, #1
   3fc74:	ldr	r8, [r4]
   3fc78:	cmp	r6, r8
   3fc7c:	blt	3fc5c <GetDataSlab+0x1d298>
   3fc80:	add	lr, lr, r0
   3fc84:	ldr	r1, [r3]
   3fc88:	ldr	r6, [r9]
   3fc8c:	ldr	r0, [ip]
   3fc90:	b	3fc9c <GetDataSlab+0x1d2d8>
   3fc94:	ldr	r1, [sp, #56]	; 0x38
   3fc98:	ldr	r0, [sp, #44]	; 0x2c
   3fc9c:	str	r0, [sp, #44]	; 0x2c
   3fca0:	mul	r0, r6, r0
   3fca4:	add	r7, r7, #1
   3fca8:	str	r1, [sp, #56]	; 0x38
   3fcac:	cmp	r7, r1
   3fcb0:	add	r2, r2, r0, lsl #2
   3fcb4:	mov	r0, #0
   3fcb8:	blt	3fc40 <GetDataSlab+0x1d27c>
   3fcbc:	b	24900 <GetDataSlab+0x1f3c>
   3fcc0:	cmp	r1, #1
   3fcc4:	blt	248fc <GetDataSlab+0x1f38>
   3fcc8:	ldr	r0, [sp, #36]	; 0x24
   3fccc:	ldr	r1, [sp, #32]
   3fcd0:	mov	r7, #0
   3fcd4:	mla	r0, r1, r6, r0
   3fcd8:	add	r2, r9, r0, lsl #2
   3fcdc:	cmp	r8, #1
   3fce0:	blt	3fd30 <GetDataSlab+0x1d36c>
   3fce4:	ldr	r4, [fp, #20]
   3fce8:	ldr	r1, [fp, #16]
   3fcec:	ldr	r9, [fp, #8]
   3fcf0:	mov	r0, #0
   3fcf4:	mov	r6, #0
   3fcf8:	ldr	r5, [r1]
   3fcfc:	add	r0, r0, #4
   3fd00:	mul	r5, r5, r6
   3fd04:	ldr	r5, [r2, r5, lsl #2]
   3fd08:	str	r5, [lr, r6, lsl #2]
   3fd0c:	add	r6, r6, #1
   3fd10:	ldr	r8, [r4]
   3fd14:	cmp	r6, r8
   3fd18:	blt	3fcf8 <GetDataSlab+0x1d334>
   3fd1c:	add	lr, lr, r0
   3fd20:	ldr	r1, [r3]
   3fd24:	ldr	r6, [r9]
   3fd28:	ldr	r0, [ip]
   3fd2c:	b	3fd38 <GetDataSlab+0x1d374>
   3fd30:	ldr	r1, [sp, #56]	; 0x38
   3fd34:	ldr	r0, [sp, #44]	; 0x2c
   3fd38:	str	r0, [sp, #44]	; 0x2c
   3fd3c:	mul	r0, r6, r0
   3fd40:	add	r7, r7, #1
   3fd44:	str	r1, [sp, #56]	; 0x38
   3fd48:	cmp	r7, r1
   3fd4c:	add	r2, r2, r0, lsl #2
   3fd50:	mov	r0, #0
   3fd54:	blt	3fcdc <GetDataSlab+0x1d318>
   3fd58:	b	24900 <GetDataSlab+0x1f3c>
   3fd5c:	cmp	r1, #1
   3fd60:	blt	248fc <GetDataSlab+0x1f38>
   3fd64:	ldr	r0, [sp, #36]	; 0x24
   3fd68:	ldr	r1, [sp, #32]
   3fd6c:	mov	r7, #0
   3fd70:	mla	r0, r1, r6, r0
   3fd74:	add	r2, r9, r0, lsl #2
   3fd78:	cmp	r8, #1
   3fd7c:	blt	3fdd8 <GetDataSlab+0x1d414>
   3fd80:	ldr	r4, [fp, #20]
   3fd84:	ldr	r1, [fp, #16]
   3fd88:	ldr	r9, [fp, #8]
   3fd8c:	mov	r0, #0
   3fd90:	mov	r6, #0
   3fd94:	ldr	r5, [r1]
   3fd98:	add	r0, r0, #4
   3fd9c:	mul	r5, r5, r6
   3fda0:	add	r5, r2, r5, lsl #2
   3fda4:	vldr	s0, [r5]
   3fda8:	vcvt.u32.f32	s0, s0
   3fdac:	vmov	r5, s0
   3fdb0:	str	r5, [lr, r6, lsl #2]
   3fdb4:	add	r6, r6, #1
   3fdb8:	ldr	r8, [r4]
   3fdbc:	cmp	r6, r8
   3fdc0:	blt	3fd94 <GetDataSlab+0x1d3d0>
   3fdc4:	add	lr, lr, r0
   3fdc8:	ldr	r1, [r3]
   3fdcc:	ldr	r6, [r9]
   3fdd0:	ldr	r0, [ip]
   3fdd4:	b	3fde0 <GetDataSlab+0x1d41c>
   3fdd8:	ldr	r1, [sp, #56]	; 0x38
   3fddc:	ldr	r0, [sp, #44]	; 0x2c
   3fde0:	str	r0, [sp, #44]	; 0x2c
   3fde4:	mul	r0, r6, r0
   3fde8:	add	r7, r7, #1
   3fdec:	str	r1, [sp, #56]	; 0x38
   3fdf0:	cmp	r7, r1
   3fdf4:	add	r2, r2, r0, lsl #2
   3fdf8:	mov	r0, #0
   3fdfc:	blt	3fd78 <GetDataSlab+0x1d3b4>
   3fe00:	b	24900 <GetDataSlab+0x1f3c>
   3fe04:	cmp	r1, #1
   3fe08:	blt	248fc <GetDataSlab+0x1f38>
   3fe0c:	ldr	r0, [sp, #36]	; 0x24
   3fe10:	ldr	r1, [sp, #32]
   3fe14:	mov	r7, #0
   3fe18:	mla	r0, r1, r6, r0
   3fe1c:	add	r2, r9, r0, lsl #3
   3fe20:	cmp	r8, #1
   3fe24:	blt	3fe80 <GetDataSlab+0x1d4bc>
   3fe28:	ldr	r4, [fp, #20]
   3fe2c:	ldr	r1, [fp, #16]
   3fe30:	ldr	r9, [fp, #8]
   3fe34:	mov	r0, #0
   3fe38:	mov	r6, #0
   3fe3c:	ldr	r5, [r1]
   3fe40:	add	r0, r0, #4
   3fe44:	mul	r5, r5, r6
   3fe48:	add	r5, r2, r5, lsl #3
   3fe4c:	vldr	d16, [r5]
   3fe50:	vcvt.u32.f64	s0, d16
   3fe54:	vmov	r5, s0
   3fe58:	str	r5, [lr, r6, lsl #2]
   3fe5c:	add	r6, r6, #1
   3fe60:	ldr	r8, [r4]
   3fe64:	cmp	r6, r8
   3fe68:	blt	3fe3c <GetDataSlab+0x1d478>
   3fe6c:	add	lr, lr, r0
   3fe70:	ldr	r1, [r3]
   3fe74:	ldr	r6, [r9]
   3fe78:	ldr	r0, [ip]
   3fe7c:	b	3fe88 <GetDataSlab+0x1d4c4>
   3fe80:	ldr	r1, [sp, #56]	; 0x38
   3fe84:	ldr	r0, [sp, #44]	; 0x2c
   3fe88:	str	r0, [sp, #44]	; 0x2c
   3fe8c:	mul	r0, r6, r0
   3fe90:	add	r7, r7, #1
   3fe94:	str	r1, [sp, #56]	; 0x38
   3fe98:	cmp	r7, r1
   3fe9c:	add	r2, r2, r0, lsl #3
   3fea0:	mov	r0, #0
   3fea4:	blt	3fe20 <GetDataSlab+0x1d45c>
   3fea8:	b	24900 <GetDataSlab+0x1f3c>
   3feac:	cmp	r1, #1
   3feb0:	blt	248fc <GetDataSlab+0x1f38>
   3feb4:	ldr	r0, [sp, #36]	; 0x24
   3feb8:	ldr	r2, [sp, #32]
   3febc:	mov	sl, r9
   3fec0:	ldr	r4, [fp, #20]
   3fec4:	mla	r0, r2, r6, r0
   3fec8:	mov	r2, #0
   3fecc:	add	r0, r9, r0, lsl #3
   3fed0:	ldr	r9, [fp, #8]
   3fed4:	cmp	r8, #1
   3fed8:	blt	3ff1c <GetDataSlab+0x1d558>
   3fedc:	ldr	r1, [fp, #16]
   3fee0:	mov	r7, #0
   3fee4:	mov	r6, #0
   3fee8:	ldr	r5, [r1]
   3feec:	add	r7, r7, #4
   3fef0:	mul	r5, r5, r6
   3fef4:	ldr	r5, [r0, r5, lsl #3]
   3fef8:	str	r5, [lr, r6, lsl #2]
   3fefc:	add	r6, r6, #1
   3ff00:	ldr	r8, [r4]
   3ff04:	cmp	r6, r8
   3ff08:	blt	3fee8 <GetDataSlab+0x1d524>
   3ff0c:	ldr	r1, [r3]
   3ff10:	ldr	r6, [r9]
   3ff14:	ldr	r5, [ip]
   3ff18:	add	lr, lr, r7
   3ff1c:	mul	r7, r6, r5
   3ff20:	add	r2, r2, #1
   3ff24:	cmp	r2, r1
   3ff28:	add	r0, r0, r7, lsl #3
   3ff2c:	blt	3fed4 <GetDataSlab+0x1d510>
   3ff30:	mov	r0, #0
   3ff34:	mov	r9, sl
   3ff38:	b	40964 <GetDataSlab+0x1dfa0>
   3ff3c:	ldr	r0, [sp, #56]	; 0x38
   3ff40:	cmp	r0, #1
   3ff44:	blt	248fc <GetDataSlab+0x1f38>
   3ff48:	ldr	r0, [sp, #36]	; 0x24
   3ff4c:	ldr	r1, [sp, #32]
   3ff50:	mul	r2, r5, r6
   3ff54:	mov	r3, #0
   3ff58:	mov	r7, #0
   3ff5c:	mla	r0, r1, r6, r0
   3ff60:	add	r1, r9, r0
   3ff64:	cmp	r8, #1
   3ff68:	blt	3ff90 <GetDataSlab+0x1d5cc>
   3ff6c:	mov	r0, #0
   3ff70:	mov	r6, r8
   3ff74:	ldrb	r4, [r1, r0]
   3ff78:	add	r0, r0, sl
   3ff7c:	subs	r6, r6, #1
   3ff80:	str	r4, [lr]
   3ff84:	str	r3, [lr, #4]
   3ff88:	add	lr, lr, #8
   3ff8c:	bne	3ff74 <GetDataSlab+0x1d5b0>
   3ff90:	ldr	r6, [sp, #56]	; 0x38
   3ff94:	add	r7, r7, #1
   3ff98:	add	r1, r1, r2
   3ff9c:	mov	r0, #0
   3ffa0:	cmp	r7, r6
   3ffa4:	bne	3ff64 <GetDataSlab+0x1d5a0>
   3ffa8:	b	24900 <GetDataSlab+0x1f3c>
   3ffac:	ldr	r0, [sp, #56]	; 0x38
   3ffb0:	cmp	r0, #1
   3ffb4:	blt	248fc <GetDataSlab+0x1f38>
   3ffb8:	ldr	r0, [sp, #36]	; 0x24
   3ffbc:	ldr	r1, [sp, #32]
   3ffc0:	lsl	r3, sl, #1
   3ffc4:	mov	r7, #0
   3ffc8:	mla	r0, r1, r6, r0
   3ffcc:	add	r1, r9, r0, lsl #1
   3ffd0:	mul	r0, r5, r6
   3ffd4:	lsl	r2, r0, #1
   3ffd8:	cmp	r8, #1
   3ffdc:	blt	40004 <GetDataSlab+0x1d640>
   3ffe0:	mov	r0, #0
   3ffe4:	mov	r6, r8
   3ffe8:	ldrsh	r4, [r1, -r0]
   3ffec:	sub	r0, r0, r3
   3fff0:	subs	r6, r6, #1
   3fff4:	asr	r5, r4, #31
   3fff8:	strd	r4, [lr]
   3fffc:	add	lr, lr, #8
   40000:	bne	3ffe8 <GetDataSlab+0x1d624>
   40004:	ldr	r6, [sp, #56]	; 0x38
   40008:	add	r7, r7, #1
   4000c:	add	r1, r1, r2
   40010:	mov	r0, #0
   40014:	cmp	r7, r6
   40018:	bne	3ffd8 <GetDataSlab+0x1d614>
   4001c:	b	24900 <GetDataSlab+0x1f3c>
   40020:	ldr	r0, [sp, #56]	; 0x38
   40024:	cmp	r0, #1
   40028:	blt	248fc <GetDataSlab+0x1f38>
   4002c:	ldr	r0, [sp, #36]	; 0x24
   40030:	ldr	r1, [sp, #32]
   40034:	lsl	r3, sl, #1
   40038:	mov	r7, #0
   4003c:	mla	r0, r1, r6, r0
   40040:	add	r1, r9, r0, lsl #1
   40044:	mul	r0, r5, r6
   40048:	mov	r6, #0
   4004c:	lsl	r2, r0, #1
   40050:	cmp	r8, #1
   40054:	blt	40078 <GetDataSlab+0x1d6b4>
   40058:	mov	r0, #0
   4005c:	mov	r5, r8
   40060:	ldrh	r4, [r1, -r0]
   40064:	sub	r0, r0, r3
   40068:	subs	r5, r5, #1
   4006c:	stm	lr, {r4, r7}
   40070:	add	lr, lr, #8
   40074:	bne	40060 <GetDataSlab+0x1d69c>
   40078:	ldr	r5, [sp, #56]	; 0x38
   4007c:	add	r6, r6, #1
   40080:	add	r1, r1, r2
   40084:	mov	r0, #0
   40088:	cmp	r6, r5
   4008c:	bne	40050 <GetDataSlab+0x1d68c>
   40090:	b	24900 <GetDataSlab+0x1f3c>
   40094:	ldr	r0, [sp, #56]	; 0x38
   40098:	cmp	r0, #1
   4009c:	blt	248fc <GetDataSlab+0x1f38>
   400a0:	ldr	r0, [sp, #36]	; 0x24
   400a4:	ldr	r1, [sp, #32]
   400a8:	lsl	r3, sl, #2
   400ac:	mov	r7, #0
   400b0:	mla	r0, r1, r6, r0
   400b4:	add	r1, r9, r0, lsl #2
   400b8:	mul	r0, r5, r6
   400bc:	lsl	r2, r0, #2
   400c0:	cmp	r8, #1
   400c4:	blt	400ec <GetDataSlab+0x1d728>
   400c8:	mov	r0, #0
   400cc:	mov	r6, r8
   400d0:	ldr	r4, [r1, -r0]
   400d4:	sub	r0, r0, r3
   400d8:	subs	r6, r6, #1
   400dc:	asr	r5, r4, #31
   400e0:	strd	r4, [lr]
   400e4:	add	lr, lr, #8
   400e8:	bne	400d0 <GetDataSlab+0x1d70c>
   400ec:	ldr	r6, [sp, #56]	; 0x38
   400f0:	add	r7, r7, #1
   400f4:	add	r1, r1, r2
   400f8:	mov	r0, #0
   400fc:	cmp	r7, r6
   40100:	bne	400c0 <GetDataSlab+0x1d6fc>
   40104:	b	24900 <GetDataSlab+0x1f3c>
   40108:	ldr	r0, [sp, #56]	; 0x38
   4010c:	cmp	r0, #1
   40110:	blt	248fc <GetDataSlab+0x1f38>
   40114:	ldr	r0, [sp, #36]	; 0x24
   40118:	ldr	r1, [sp, #32]
   4011c:	lsl	r3, sl, #2
   40120:	mov	r7, #0
   40124:	mla	r0, r1, r6, r0
   40128:	add	r1, r9, r0, lsl #2
   4012c:	mul	r0, r5, r6
   40130:	mov	r6, #0
   40134:	lsl	r2, r0, #2
   40138:	cmp	r8, #1
   4013c:	blt	40160 <GetDataSlab+0x1d79c>
   40140:	mov	r0, #0
   40144:	mov	r5, r8
   40148:	ldr	r4, [r1, -r0]
   4014c:	sub	r0, r0, r3
   40150:	subs	r5, r5, #1
   40154:	stm	lr, {r4, r7}
   40158:	add	lr, lr, #8
   4015c:	bne	40148 <GetDataSlab+0x1d784>
   40160:	ldr	r5, [sp, #56]	; 0x38
   40164:	add	r6, r6, #1
   40168:	add	r1, r1, r2
   4016c:	mov	r0, #0
   40170:	cmp	r6, r5
   40174:	bne	40138 <GetDataSlab+0x1d774>
   40178:	b	24900 <GetDataSlab+0x1f3c>
   4017c:	ldr	r0, [sp, #56]	; 0x38
   40180:	cmp	r0, #1
   40184:	blt	248fc <GetDataSlab+0x1f38>
   40188:	ldr	r0, [sp, #36]	; 0x24
   4018c:	ldr	r1, [sp, #32]
   40190:	lsl	r7, sl, #2
   40194:	mov	sl, #0
   40198:	mla	r0, r1, r6, r0
   4019c:	add	r9, r9, r0, lsl #2
   401a0:	mul	r0, r5, r6
   401a4:	lsl	r0, r0, #2
   401a8:	str	r0, [sp, #60]	; 0x3c
   401ac:	cmp	r8, #1
   401b0:	blt	401dc <GetDataSlab+0x1d818>
   401b4:	mov	r5, r9
   401b8:	mov	r4, r8
   401bc:	ldr	r0, [r5], r7
   401c0:	mov	r6, lr
   401c4:	bl	4b6b4 <__aeabi_f2lz>
   401c8:	mov	lr, r6
   401cc:	subs	r4, r4, #1
   401d0:	strd	r0, [lr]
   401d4:	add	lr, r6, #8
   401d8:	bne	401bc <GetDataSlab+0x1d7f8>
   401dc:	ldr	r0, [sp, #60]	; 0x3c
   401e0:	ldr	r1, [sp, #56]	; 0x38
   401e4:	add	sl, sl, #1
   401e8:	add	r9, r9, r0
   401ec:	mov	r0, #0
   401f0:	cmp	sl, r1
   401f4:	bne	401ac <GetDataSlab+0x1d7e8>
   401f8:	b	24900 <GetDataSlab+0x1f3c>
   401fc:	ldr	r0, [sp, #56]	; 0x38
   40200:	cmp	r0, #1
   40204:	blt	248fc <GetDataSlab+0x1f38>
   40208:	ldr	r0, [sp, #36]	; 0x24
   4020c:	ldr	r1, [sp, #32]
   40210:	lsl	r7, sl, #3
   40214:	mov	sl, #0
   40218:	mla	r0, r1, r6, r0
   4021c:	add	r9, r9, r0, lsl #3
   40220:	mul	r0, r5, r6
   40224:	lsl	r0, r0, #3
   40228:	str	r0, [sp, #60]	; 0x3c
   4022c:	cmp	r8, #1
   40230:	blt	40264 <GetDataSlab+0x1d8a0>
   40234:	mov	r4, r9
   40238:	mov	r5, r8
   4023c:	vldr	d16, [r4]
   40240:	mov	r6, lr
   40244:	vmov	r0, r1, d16
   40248:	bl	4b6e0 <__aeabi_d2lz>
   4024c:	mov	lr, r6
   40250:	add	r4, r4, r7
   40254:	subs	r5, r5, #1
   40258:	strd	r0, [lr]
   4025c:	add	lr, r6, #8
   40260:	bne	4023c <GetDataSlab+0x1d878>
   40264:	ldr	r0, [sp, #60]	; 0x3c
   40268:	ldr	r1, [sp, #56]	; 0x38
   4026c:	add	sl, sl, #1
   40270:	add	r9, r9, r0
   40274:	mov	r0, #0
   40278:	cmp	sl, r1
   4027c:	bne	4022c <GetDataSlab+0x1d868>
   40280:	b	24900 <GetDataSlab+0x1f3c>
   40284:	ldr	r0, [sp, #56]	; 0x38
   40288:	cmp	r0, #1
   4028c:	blt	248fc <GetDataSlab+0x1f38>
   40290:	ldr	r0, [sp, #36]	; 0x24
   40294:	ldr	r1, [sp, #32]
   40298:	mov	ip, r9
   4029c:	lsl	r2, sl, #3
   402a0:	mov	r3, #0
   402a4:	mla	r0, r1, r6, r0
   402a8:	mov	r1, r5
   402ac:	mul	r1, r1, r6
   402b0:	add	r5, r9, r0, lsl #3
   402b4:	lsl	r1, r1, #3
   402b8:	cmp	r8, #1
   402bc:	blt	402e8 <GetDataSlab+0x1d924>
   402c0:	mov	r7, #0
   402c4:	mov	r6, r8
   402c8:	mov	r0, r5
   402cc:	subs	r6, r6, #1
   402d0:	ldr	r4, [r0, -r7]!
   402d4:	sub	r7, r7, r2
   402d8:	ldr	r9, [r0, #4]
   402dc:	stm	lr, {r4, r9}
   402e0:	add	lr, lr, #8
   402e4:	bne	402c8 <GetDataSlab+0x1d904>
   402e8:	ldr	r0, [sp, #56]	; 0x38
   402ec:	add	r3, r3, #1
   402f0:	add	r5, r5, r1
   402f4:	cmp	r3, r0
   402f8:	bne	402b8 <GetDataSlab+0x1d8f4>
   402fc:	ldr	r3, [sp, #52]	; 0x34
   40300:	ldr	r6, [sp, #40]	; 0x28
   40304:	mov	r0, #0
   40308:	mov	r9, ip
   4030c:	cmp	r3, #13
   40310:	bne	24900 <GetDataSlab+0x1f3c>
   40314:	ldr	r0, [sp, #56]	; 0x38
   40318:	cmp	r0, #1
   4031c:	blt	248fc <GetDataSlab+0x1f38>
   40320:	ldr	r0, [sp, #36]	; 0x24
   40324:	ldr	r1, [sp, #32]
   40328:	lsl	r3, sl, #3
   4032c:	mov	r7, #0
   40330:	mla	r0, r1, r6, r0
   40334:	add	r5, r9, r0, lsl #3
   40338:	ldr	r0, [sp, #44]	; 0x2c
   4033c:	mul	r0, r0, r6
   40340:	lsl	r2, r0, #3
   40344:	cmp	r8, #1
   40348:	blt	40378 <GetDataSlab+0x1d9b4>
   4034c:	mov	r0, #0
   40350:	mov	r6, r8
   40354:	mov	r1, r5
   40358:	subs	r6, r6, #1
   4035c:	ldr	r4, [r1, -r0]!
   40360:	sub	r0, r0, r3
   40364:	ldr	r1, [r1, #4]
   40368:	str	r4, [lr]
   4036c:	str	r1, [lr, #4]
   40370:	add	lr, lr, #8
   40374:	bne	40354 <GetDataSlab+0x1d990>
   40378:	ldr	r1, [sp, #56]	; 0x38
   4037c:	add	r7, r7, #1
   40380:	add	r5, r5, r2
   40384:	mov	r0, #0
   40388:	cmp	r7, r1
   4038c:	bne	40344 <GetDataSlab+0x1d980>
   40390:	b	24900 <GetDataSlab+0x1f3c>
   40394:	ldr	r0, [sp, #56]	; 0x38
   40398:	cmp	r0, #1
   4039c:	blt	248fc <GetDataSlab+0x1f38>
   403a0:	ldr	r0, [sp, #36]	; 0x24
   403a4:	ldr	r1, [sp, #32]
   403a8:	mul	r2, r5, r6
   403ac:	mov	r3, #0
   403b0:	mov	r7, #0
   403b4:	mla	r0, r1, r6, r0
   403b8:	add	r1, r9, r0
   403bc:	cmp	r8, #1
   403c0:	blt	403e8 <GetDataSlab+0x1da24>
   403c4:	mov	r0, #0
   403c8:	mov	r6, r8
   403cc:	ldrb	r4, [r1, r0]
   403d0:	add	r0, r0, sl
   403d4:	subs	r6, r6, #1
   403d8:	str	r4, [lr]
   403dc:	str	r3, [lr, #4]
   403e0:	add	lr, lr, #8
   403e4:	bne	403cc <GetDataSlab+0x1da08>
   403e8:	ldr	r6, [sp, #56]	; 0x38
   403ec:	add	r7, r7, #1
   403f0:	add	r1, r1, r2
   403f4:	mov	r0, #0
   403f8:	cmp	r7, r6
   403fc:	bne	403bc <GetDataSlab+0x1d9f8>
   40400:	b	24900 <GetDataSlab+0x1f3c>
   40404:	ldr	r0, [sp, #56]	; 0x38
   40408:	cmp	r0, #1
   4040c:	blt	248fc <GetDataSlab+0x1f38>
   40410:	ldr	r0, [sp, #36]	; 0x24
   40414:	ldr	r1, [sp, #32]
   40418:	lsl	r3, sl, #1
   4041c:	mov	r7, #0
   40420:	mla	r0, r1, r6, r0
   40424:	add	r1, r9, r0, lsl #1
   40428:	mul	r0, r5, r6
   4042c:	lsl	r2, r0, #1
   40430:	cmp	r8, #1
   40434:	blt	4045c <GetDataSlab+0x1da98>
   40438:	mov	r0, #0
   4043c:	mov	r6, r8
   40440:	ldrsh	r4, [r1, -r0]
   40444:	sub	r0, r0, r3
   40448:	subs	r6, r6, #1
   4044c:	asr	r5, r4, #31
   40450:	strd	r4, [lr]
   40454:	add	lr, lr, #8
   40458:	bne	40440 <GetDataSlab+0x1da7c>
   4045c:	ldr	r6, [sp, #56]	; 0x38
   40460:	add	r7, r7, #1
   40464:	add	r1, r1, r2
   40468:	mov	r0, #0
   4046c:	cmp	r7, r6
   40470:	bne	40430 <GetDataSlab+0x1da6c>
   40474:	b	24900 <GetDataSlab+0x1f3c>
   40478:	ldr	r0, [sp, #56]	; 0x38
   4047c:	cmp	r0, #1
   40480:	blt	248fc <GetDataSlab+0x1f38>
   40484:	ldr	r0, [sp, #36]	; 0x24
   40488:	ldr	r1, [sp, #32]
   4048c:	lsl	r3, sl, #1
   40490:	mov	r7, #0
   40494:	mla	r0, r1, r6, r0
   40498:	add	r1, r9, r0, lsl #1
   4049c:	mul	r0, r5, r6
   404a0:	mov	r6, #0
   404a4:	lsl	r2, r0, #1
   404a8:	cmp	r8, #1
   404ac:	blt	404d0 <GetDataSlab+0x1db0c>
   404b0:	mov	r0, #0
   404b4:	mov	r5, r8
   404b8:	ldrh	r4, [r1, -r0]
   404bc:	sub	r0, r0, r3
   404c0:	subs	r5, r5, #1
   404c4:	stm	lr, {r4, r7}
   404c8:	add	lr, lr, #8
   404cc:	bne	404b8 <GetDataSlab+0x1daf4>
   404d0:	ldr	r5, [sp, #56]	; 0x38
   404d4:	add	r6, r6, #1
   404d8:	add	r1, r1, r2
   404dc:	mov	r0, #0
   404e0:	cmp	r6, r5
   404e4:	bne	404a8 <GetDataSlab+0x1dae4>
   404e8:	b	24900 <GetDataSlab+0x1f3c>
   404ec:	ldr	r0, [sp, #56]	; 0x38
   404f0:	cmp	r0, #1
   404f4:	blt	248fc <GetDataSlab+0x1f38>
   404f8:	ldr	r0, [sp, #36]	; 0x24
   404fc:	ldr	r1, [sp, #32]
   40500:	lsl	r3, sl, #2
   40504:	mov	r7, #0
   40508:	mla	r0, r1, r6, r0
   4050c:	add	r1, r9, r0, lsl #2
   40510:	mul	r0, r5, r6
   40514:	lsl	r2, r0, #2
   40518:	cmp	r8, #1
   4051c:	blt	40544 <GetDataSlab+0x1db80>
   40520:	mov	r0, #0
   40524:	mov	r6, r8
   40528:	ldr	r4, [r1, -r0]
   4052c:	sub	r0, r0, r3
   40530:	subs	r6, r6, #1
   40534:	asr	r5, r4, #31
   40538:	strd	r4, [lr]
   4053c:	add	lr, lr, #8
   40540:	bne	40528 <GetDataSlab+0x1db64>
   40544:	ldr	r6, [sp, #56]	; 0x38
   40548:	add	r7, r7, #1
   4054c:	add	r1, r1, r2
   40550:	mov	r0, #0
   40554:	cmp	r7, r6
   40558:	bne	40518 <GetDataSlab+0x1db54>
   4055c:	b	24900 <GetDataSlab+0x1f3c>
   40560:	ldr	r0, [sp, #56]	; 0x38
   40564:	cmp	r0, #1
   40568:	blt	248fc <GetDataSlab+0x1f38>
   4056c:	ldr	r0, [sp, #36]	; 0x24
   40570:	ldr	r1, [sp, #32]
   40574:	lsl	r3, sl, #2
   40578:	mov	r7, #0
   4057c:	mla	r0, r1, r6, r0
   40580:	add	r1, r9, r0, lsl #2
   40584:	mul	r0, r5, r6
   40588:	mov	r6, #0
   4058c:	lsl	r2, r0, #2
   40590:	cmp	r8, #1
   40594:	blt	405b8 <GetDataSlab+0x1dbf4>
   40598:	mov	r0, #0
   4059c:	mov	r5, r8
   405a0:	ldr	r4, [r1, -r0]
   405a4:	sub	r0, r0, r3
   405a8:	subs	r5, r5, #1
   405ac:	stm	lr, {r4, r7}
   405b0:	add	lr, lr, #8
   405b4:	bne	405a0 <GetDataSlab+0x1dbdc>
   405b8:	ldr	r5, [sp, #56]	; 0x38
   405bc:	add	r6, r6, #1
   405c0:	add	r1, r1, r2
   405c4:	mov	r0, #0
   405c8:	cmp	r6, r5
   405cc:	bne	40590 <GetDataSlab+0x1dbcc>
   405d0:	b	24900 <GetDataSlab+0x1f3c>
   405d4:	ldr	r0, [sp, #56]	; 0x38
   405d8:	cmp	r0, #1
   405dc:	blt	248fc <GetDataSlab+0x1f38>
   405e0:	ldr	r0, [sp, #36]	; 0x24
   405e4:	ldr	r1, [sp, #32]
   405e8:	lsl	r7, sl, #2
   405ec:	mov	sl, #0
   405f0:	mla	r0, r1, r6, r0
   405f4:	add	r9, r9, r0, lsl #2
   405f8:	mul	r0, r5, r6
   405fc:	lsl	r0, r0, #2
   40600:	str	r0, [sp, #60]	; 0x3c
   40604:	cmp	r8, #1
   40608:	blt	40634 <GetDataSlab+0x1dc70>
   4060c:	mov	r5, r9
   40610:	mov	r4, r8
   40614:	ldr	r0, [r5], r7
   40618:	mov	r6, lr
   4061c:	bl	4b710 <__aeabi_f2ulz>
   40620:	mov	lr, r6
   40624:	subs	r4, r4, #1
   40628:	strd	r0, [lr]
   4062c:	add	lr, r6, #8
   40630:	bne	40614 <GetDataSlab+0x1dc50>
   40634:	ldr	r0, [sp, #60]	; 0x3c
   40638:	ldr	r1, [sp, #56]	; 0x38
   4063c:	add	sl, sl, #1
   40640:	add	r9, r9, r0
   40644:	mov	r0, #0
   40648:	cmp	sl, r1
   4064c:	bne	40604 <GetDataSlab+0x1dc40>
   40650:	b	24900 <GetDataSlab+0x1f3c>
   40654:	ldr	r0, [sp, #56]	; 0x38
   40658:	cmp	r0, #1
   4065c:	blt	248fc <GetDataSlab+0x1f38>
   40660:	ldr	r0, [sp, #36]	; 0x24
   40664:	ldr	r1, [sp, #32]
   40668:	lsl	r7, sl, #3
   4066c:	mov	sl, #0
   40670:	mla	r0, r1, r6, r0
   40674:	add	r9, r9, r0, lsl #3
   40678:	mul	r0, r5, r6
   4067c:	lsl	r0, r0, #3
   40680:	str	r0, [sp, #60]	; 0x3c
   40684:	cmp	r8, #1
   40688:	blt	406bc <GetDataSlab+0x1dcf8>
   4068c:	mov	r4, r9
   40690:	mov	r5, r8
   40694:	vldr	d16, [r4]
   40698:	mov	r6, lr
   4069c:	vmov	r0, r1, d16
   406a0:	bl	4b750 <__aeabi_d2ulz>
   406a4:	mov	lr, r6
   406a8:	add	r4, r4, r7
   406ac:	subs	r5, r5, #1
   406b0:	strd	r0, [lr]
   406b4:	add	lr, r6, #8
   406b8:	bne	40694 <GetDataSlab+0x1dcd0>
   406bc:	ldr	r0, [sp, #60]	; 0x3c
   406c0:	ldr	r1, [sp, #56]	; 0x38
   406c4:	add	sl, sl, #1
   406c8:	add	r9, r9, r0
   406cc:	mov	r0, #0
   406d0:	cmp	sl, r1
   406d4:	bne	40684 <GetDataSlab+0x1dcc0>
   406d8:	b	24900 <GetDataSlab+0x1f3c>
   406dc:	ldr	r0, [sp, #56]	; 0x38
   406e0:	cmp	r0, #1
   406e4:	blt	248fc <GetDataSlab+0x1f38>
   406e8:	ldr	r0, [sp, #36]	; 0x24
   406ec:	ldr	r1, [sp, #32]
   406f0:	mov	ip, r9
   406f4:	lsl	r2, sl, #3
   406f8:	mov	r3, #0
   406fc:	mla	r0, r1, r6, r0
   40700:	mov	r1, r5
   40704:	mul	r1, r1, r6
   40708:	add	r5, r9, r0, lsl #3
   4070c:	lsl	r1, r1, #3
   40710:	cmp	r8, #1
   40714:	blt	40740 <GetDataSlab+0x1dd7c>
   40718:	mov	r7, #0
   4071c:	mov	r6, r8
   40720:	mov	r0, r5
   40724:	subs	r6, r6, #1
   40728:	ldr	r4, [r0, -r7]!
   4072c:	sub	r7, r7, r2
   40730:	ldr	r9, [r0, #4]
   40734:	stm	lr, {r4, r9}
   40738:	add	lr, lr, #8
   4073c:	bne	40720 <GetDataSlab+0x1dd5c>
   40740:	ldr	r0, [sp, #56]	; 0x38
   40744:	add	r3, r3, #1
   40748:	add	r5, r5, r1
   4074c:	cmp	r3, r0
   40750:	bne	40710 <GetDataSlab+0x1dd4c>
   40754:	ldr	r3, [sp, #52]	; 0x34
   40758:	ldr	r6, [sp, #40]	; 0x28
   4075c:	mov	r0, #0
   40760:	mov	r9, ip
   40764:	cmp	r3, #13
   40768:	bne	24900 <GetDataSlab+0x1f3c>
   4076c:	ldr	r0, [sp, #56]	; 0x38
   40770:	cmp	r0, #1
   40774:	blt	248fc <GetDataSlab+0x1f38>
   40778:	ldr	r0, [sp, #36]	; 0x24
   4077c:	ldr	r1, [sp, #32]
   40780:	lsl	r3, sl, #3
   40784:	mov	r7, #0
   40788:	mla	r0, r1, r6, r0
   4078c:	add	r5, r9, r0, lsl #3
   40790:	ldr	r0, [sp, #44]	; 0x2c
   40794:	mul	r0, r0, r6
   40798:	lsl	r2, r0, #3
   4079c:	cmp	r8, #1
   407a0:	blt	407d0 <GetDataSlab+0x1de0c>
   407a4:	mov	r0, #0
   407a8:	mov	r6, r8
   407ac:	mov	r1, r5
   407b0:	subs	r6, r6, #1
   407b4:	ldr	r4, [r1, -r0]!
   407b8:	sub	r0, r0, r3
   407bc:	ldr	r1, [r1, #4]
   407c0:	str	r4, [lr]
   407c4:	str	r1, [lr, #4]
   407c8:	add	lr, lr, #8
   407cc:	bne	407ac <GetDataSlab+0x1dde8>
   407d0:	ldr	r1, [sp, #56]	; 0x38
   407d4:	add	r7, r7, #1
   407d8:	add	r5, r5, r2
   407dc:	mov	r0, #0
   407e0:	cmp	r7, r1
   407e4:	bne	4079c <GetDataSlab+0x1ddd8>
   407e8:	b	24900 <GetDataSlab+0x1f3c>
   407ec:	ldr	r1, [sp, #56]	; 0x38
   407f0:	mov	r5, r1
   407f4:	ldr	r1, [sp, #52]	; 0x34
   407f8:	cmp	r1, #13
   407fc:	bne	24900 <GetDataSlab+0x1f3c>
   40800:	cmp	r5, #1
   40804:	mov	r0, r5
   40808:	blt	248fc <GetDataSlab+0x1f38>
   4080c:	ldr	r0, [fp, #12]
   40810:	mov	r7, #0
   40814:	mov	r4, lr
   40818:	mov	r2, r0
   4081c:	ldr	r0, [r0]
   40820:	ldr	r2, [r2, #4]
   40824:	mla	r0, r6, r2, r0
   40828:	add	r2, r9, r0, lsl #3
   4082c:	cmp	r8, #1
   40830:	blt	40878 <GetDataSlab+0x1deb4>
   40834:	ldr	r5, [fp, #20]
   40838:	ldr	r1, [fp, #16]
   4083c:	ldr	lr, [fp, #8]
   40840:	mov	r0, #0
   40844:	ldr	r6, [r1]
   40848:	mul	r6, r6, r0
   4084c:	ldrb	r6, [r2, r6, lsl #3]
   40850:	strb	r6, [r4, r0]
   40854:	add	r0, r0, #1
   40858:	ldr	r8, [r5]
   4085c:	cmp	r0, r8
   40860:	blt	40844 <GetDataSlab+0x1de80>
   40864:	add	r4, r4, r0
   40868:	ldr	r1, [r3]
   4086c:	ldr	r6, [lr]
   40870:	ldr	r0, [ip]
   40874:	b	40880 <GetDataSlab+0x1debc>
   40878:	ldr	r0, [sp, #44]	; 0x2c
   4087c:	mov	r1, r5
   40880:	str	r0, [sp, #44]	; 0x2c
   40884:	mul	r0, r6, r0
   40888:	add	r7, r7, #1
   4088c:	mov	r5, r1
   40890:	cmp	r7, r1
   40894:	add	r2, r2, r0, lsl #3
   40898:	mov	r0, #0
   4089c:	blt	4082c <GetDataSlab+0x1de68>
   408a0:	b	24900 <GetDataSlab+0x1f3c>
   408a4:	ldr	r1, [sp, #56]	; 0x38
   408a8:	mov	r5, r1
   408ac:	ldr	r1, [sp, #52]	; 0x34
   408b0:	cmp	r1, #13
   408b4:	bne	24900 <GetDataSlab+0x1f3c>
   408b8:	cmp	r5, #1
   408bc:	mov	r0, r5
   408c0:	blt	248fc <GetDataSlab+0x1f38>
   408c4:	ldr	r0, [fp, #12]
   408c8:	mov	r7, #0
   408cc:	mov	r4, lr
   408d0:	mov	r2, r0
   408d4:	ldr	r0, [r0]
   408d8:	ldr	r2, [r2, #4]
   408dc:	mla	r0, r6, r2, r0
   408e0:	add	r2, r9, r0, lsl #3
   408e4:	cmp	r8, #1
   408e8:	blt	40930 <GetDataSlab+0x1df6c>
   408ec:	ldr	r5, [fp, #20]
   408f0:	ldr	r1, [fp, #16]
   408f4:	ldr	lr, [fp, #8]
   408f8:	mov	r0, #0
   408fc:	ldr	r6, [r1]
   40900:	mul	r6, r6, r0
   40904:	ldrb	r6, [r2, r6, lsl #3]
   40908:	strb	r6, [r4, r0]
   4090c:	add	r0, r0, #1
   40910:	ldr	r8, [r5]
   40914:	cmp	r0, r8
   40918:	blt	408fc <GetDataSlab+0x1df38>
   4091c:	add	r4, r4, r0
   40920:	ldr	r1, [r3]
   40924:	ldr	r6, [lr]
   40928:	ldr	r0, [ip]
   4092c:	b	40938 <GetDataSlab+0x1df74>
   40930:	ldr	r0, [sp, #44]	; 0x2c
   40934:	mov	r1, r5
   40938:	str	r0, [sp, #44]	; 0x2c
   4093c:	mul	r0, r6, r0
   40940:	add	r7, r7, #1
   40944:	mov	r5, r1
   40948:	cmp	r7, r1
   4094c:	add	r2, r2, r0, lsl #3
   40950:	mov	r0, #0
   40954:	blt	408e4 <GetDataSlab+0x1df20>
   40958:	b	24900 <GetDataSlab+0x1f3c>
   4095c:	ldr	r1, [sp, #56]	; 0x38
   40960:	ldr	r5, [sp, #44]	; 0x2c
   40964:	ldr	r2, [sp, #52]	; 0x34
   40968:	cmp	r2, #13
   4096c:	bne	24900 <GetDataSlab+0x1f3c>
   40970:	cmp	r1, #1
   40974:	mov	r0, r1
   40978:	blt	248fc <GetDataSlab+0x1f38>
   4097c:	ldr	r0, [fp, #12]
   40980:	mov	r7, #0
   40984:	mov	r2, r0
   40988:	ldr	r0, [r0]
   4098c:	ldr	r2, [r2, #4]
   40990:	mla	r0, r6, r2, r0
   40994:	add	r2, r9, r0, lsl #3
   40998:	cmp	r8, #1
   4099c:	blt	409ec <GetDataSlab+0x1e028>
   409a0:	ldr	r4, [fp, #20]
   409a4:	ldr	r1, [fp, #16]
   409a8:	ldr	r9, [fp, #8]
   409ac:	mov	r0, #0
   409b0:	mov	r6, #0
   409b4:	ldr	r5, [r1]
   409b8:	add	r0, r0, #4
   409bc:	mul	r5, r5, r6
   409c0:	ldr	r5, [r2, r5, lsl #3]
   409c4:	str	r5, [lr, r6, lsl #2]
   409c8:	add	r6, r6, #1
   409cc:	ldr	r8, [r4]
   409d0:	cmp	r6, r8
   409d4:	blt	409b4 <GetDataSlab+0x1dff0>
   409d8:	add	lr, lr, r0
   409dc:	ldr	r4, [r3]
   409e0:	ldr	r6, [r9]
   409e4:	ldr	r0, [ip]
   409e8:	b	409f4 <GetDataSlab+0x1e030>
   409ec:	mov	r4, r1
   409f0:	mov	r0, r5
   409f4:	mov	r5, r0
   409f8:	mul	r0, r6, r0
   409fc:	add	r7, r7, #1
   40a00:	mov	r1, r4
   40a04:	cmp	r7, r4
   40a08:	add	r2, r2, r0, lsl #3
   40a0c:	mov	r0, #0
   40a10:	blt	40998 <GetDataSlab+0x1dfd4>
   40a14:	b	24900 <GetDataSlab+0x1f3c>
   40a18:	ldr	r1, [sp, #56]	; 0x38
   40a1c:	ldr	r5, [sp, #44]	; 0x2c
   40a20:	ldr	r2, [sp, #52]	; 0x34
   40a24:	cmp	r2, #13
   40a28:	bne	24900 <GetDataSlab+0x1f3c>
   40a2c:	cmp	r1, #1
   40a30:	mov	r0, r1
   40a34:	blt	248fc <GetDataSlab+0x1f38>
   40a38:	ldr	r0, [fp, #12]
   40a3c:	mov	r7, #0
   40a40:	mov	r2, r0
   40a44:	ldr	r0, [r0]
   40a48:	ldr	r2, [r2, #4]
   40a4c:	mla	r0, r6, r2, r0
   40a50:	add	r2, r9, r0, lsl #3
   40a54:	cmp	r8, #1
   40a58:	blt	40aa8 <GetDataSlab+0x1e0e4>
   40a5c:	ldr	r4, [fp, #20]
   40a60:	ldr	r1, [fp, #16]
   40a64:	ldr	r9, [fp, #8]
   40a68:	mov	r0, #0
   40a6c:	mov	r6, #0
   40a70:	ldr	r5, [r1]
   40a74:	add	r0, r0, #4
   40a78:	mul	r5, r5, r6
   40a7c:	ldr	r5, [r2, r5, lsl #3]
   40a80:	str	r5, [lr, r6, lsl #2]
   40a84:	add	r6, r6, #1
   40a88:	ldr	r8, [r4]
   40a8c:	cmp	r6, r8
   40a90:	blt	40a70 <GetDataSlab+0x1e0ac>
   40a94:	add	lr, lr, r0
   40a98:	ldr	r4, [r3]
   40a9c:	ldr	r6, [r9]
   40aa0:	ldr	r0, [ip]
   40aa4:	b	40ab0 <GetDataSlab+0x1e0ec>
   40aa8:	mov	r4, r1
   40aac:	mov	r0, r5
   40ab0:	mov	r5, r0
   40ab4:	mul	r0, r6, r0
   40ab8:	add	r7, r7, #1
   40abc:	mov	r1, r4
   40ac0:	cmp	r7, r4
   40ac4:	add	r2, r2, r0, lsl #3
   40ac8:	mov	r0, #0
   40acc:	blt	40a54 <GetDataSlab+0x1e090>
   40ad0:	b	24900 <GetDataSlab+0x1f3c>

00040ad4 <Mat_VarReadDataLinear5>:
   40ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40ad8:	add	fp, sp, #28
   40adc:	sub	sp, sp, #84	; 0x54
   40ae0:	mov	r7, r0
   40ae4:	mov	r0, #1
   40ae8:	mvn	r5, #0
   40aec:	str	r0, [sp, #16]
   40af0:	ldr	r0, [r7, #16]
   40af4:	cmp	r0, #16
   40af8:	beq	40f94 <Mat_VarReadDataLinear5+0x4c0>
   40afc:	mov	r4, r1
   40b00:	ldr	r1, [r1, #52]	; 0x34
   40b04:	ldr	r0, [r7]
   40b08:	mov	r8, r2
   40b0c:	mov	r2, #0
   40b10:	mov	r9, r3
   40b14:	mov	r6, #0
   40b18:	ldr	r1, [r1]
   40b1c:	bl	1a68 <fseek@plt>
   40b20:	ldr	r0, [r4, #48]	; 0x30
   40b24:	cmp	r0, #1
   40b28:	beq	40b9c <Mat_VarReadDataLinear5+0xc8>
   40b2c:	cmp	r0, #0
   40b30:	bne	40ce4 <Mat_VarReadDataLinear5+0x210>
   40b34:	ldr	r3, [r7]
   40b38:	sub	r5, fp, #36	; 0x24
   40b3c:	mov	r1, #4
   40b40:	mov	r2, #2
   40b44:	mov	r0, r5
   40b48:	bl	18d0 <fread@plt>
   40b4c:	ldr	r0, [r7, #20]
   40b50:	cmp	r0, #0
   40b54:	beq	40b68 <Mat_VarReadDataLinear5+0x94>
   40b58:	mov	r0, r5
   40b5c:	bl	1c30 <Mat_int32Swap>
   40b60:	add	r0, r5, #4
   40b64:	bl	1c30 <Mat_int32Swap>
   40b68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40b6c:	uxtb	r1, r0
   40b70:	cmp	r0, #65536	; 0x10000
   40b74:	str	r1, [r4, #8]
   40b78:	bcc	40cdc <Mat_VarReadDataLinear5+0x208>
   40b7c:	ldr	r0, [r7]
   40b80:	mvn	r1, #3
   40b84:	mov	r2, #1
   40b88:	bl	1a68 <fseek@plt>
   40b8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40b90:	mov	r1, #4
   40b94:	add	r6, r1, r0, asr #16
   40b98:	b	40ce4 <Mat_VarReadDataLinear5+0x210>
   40b9c:	ldr	r0, [r4, #52]	; 0x34
   40ba0:	ldr	r6, [r0, #16]
   40ba4:	cmp	r6, #0
   40ba8:	beq	40c08 <Mat_VarReadDataLinear5+0x134>
   40bac:	ldr	r0, [r4, #20]
   40bb0:	cmp	r0, #0
   40bb4:	beq	40c3c <Mat_VarReadDataLinear5+0x168>
   40bb8:	ldr	r3, [r4, #8]
   40bbc:	ldr	r2, [r4, #16]
   40bc0:	ldr	r1, [r8]
   40bc4:	ldr	r0, [r6]
   40bc8:	ldr	sl, [fp, #8]
   40bcc:	ldr	r7, [fp, #12]
   40bd0:	str	r9, [sp]
   40bd4:	str	sl, [sp, #4]
   40bd8:	str	r7, [sp, #8]
   40bdc:	bl	40fac <GetDataLinear>
   40be0:	mov	r5, r0
   40be4:	cmp	r0, #0
   40be8:	bne	40f94 <Mat_VarReadDataLinear5+0x4c0>
   40bec:	ldr	r3, [r4, #8]
   40bf0:	ldr	r2, [r4, #16]
   40bf4:	ldr	r1, [r8, #4]
   40bf8:	ldr	r0, [r6, #4]
   40bfc:	stm	sp, {r9, sl}
   40c00:	str	r7, [sp, #8]
   40c04:	b	40c60 <Mat_VarReadDataLinear5+0x18c>
   40c08:	ldr	r1, [r0, #12]
   40c0c:	mov	r0, #0
   40c10:	str	r0, [r1, #4]
   40c14:	add	r0, sp, #20
   40c18:	bl	1960 <inflateCopy@plt>
   40c1c:	cmp	r0, #0
   40c20:	beq	40c6c <Mat_VarReadDataLinear5+0x198>
   40c24:	bl	18a0 <zError@plt>
   40c28:	mov	r1, r0
   40c2c:	ldr	r0, [pc, #876]	; 40fa0 <Mat_VarReadDataLinear5+0x4cc>
   40c30:	add	r0, pc, r0
   40c34:	bl	19cc <Mat_Critical@plt>
   40c38:	b	40f94 <Mat_VarReadDataLinear5+0x4c0>
   40c3c:	ldr	r0, [fp, #8]
   40c40:	ldr	r3, [r4, #8]
   40c44:	ldr	r2, [r4, #16]
   40c48:	str	r9, [sp]
   40c4c:	mov	r1, r8
   40c50:	str	r0, [sp, #4]
   40c54:	ldr	r0, [fp, #12]
   40c58:	str	r0, [sp, #8]
   40c5c:	mov	r0, r6
   40c60:	bl	40fac <GetDataLinear>
   40c64:	mov	r5, r0
   40c68:	b	40f94 <Mat_VarReadDataLinear5+0x4c0>
   40c6c:	sub	r5, fp, #36	; 0x24
   40c70:	add	r1, sp, #20
   40c74:	mov	r0, r7
   40c78:	mov	r2, r5
   40c7c:	bl	30ac <InflateDataType>
   40c80:	ldr	r0, [r7, #20]
   40c84:	cmp	r0, #0
   40c88:	beq	40c9c <Mat_VarReadDataLinear5+0x1c8>
   40c8c:	mov	r0, r5
   40c90:	bl	1c30 <Mat_int32Swap>
   40c94:	add	r0, r5, #4
   40c98:	bl	1c30 <Mat_int32Swap>
   40c9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40ca0:	uxtb	r1, r0
   40ca4:	str	r1, [r4, #8]
   40ca8:	mov	r1, #0
   40cac:	cmp	r1, r0, lsr #16
   40cb0:	bne	40b90 <Mat_VarReadDataLinear5+0xbc>
   40cb4:	add	r5, r5, #4
   40cb8:	add	r1, sp, #20
   40cbc:	mov	r0, r7
   40cc0:	mov	r2, r5
   40cc4:	bl	30ac <InflateDataType>
   40cc8:	ldr	r0, [r7, #20]
   40ccc:	cmp	r0, #0
   40cd0:	beq	40cdc <Mat_VarReadDataLinear5+0x208>
   40cd4:	mov	r0, r5
   40cd8:	bl	1c30 <Mat_int32Swap>
   40cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40ce0:	add	r6, r0, #8
   40ce4:	asr	r0, r6, #31
   40ce8:	add	r0, r6, r0, lsr #29
   40cec:	bic	r0, r0, #7
   40cf0:	subs	r1, r6, r0
   40cf4:	add	r1, sp, #16
   40cf8:	addne	r6, r0, #8
   40cfc:	mov	r0, r4
   40d00:	bl	47128 <SafeMulDims>
   40d04:	mov	sl, r0
   40d08:	cmp	r0, #0
   40d0c:	beq	40d1c <Mat_VarReadDataLinear5+0x248>
   40d10:	ldr	r0, [pc, #652]	; 40fa4 <Mat_VarReadDataLinear5+0x4d0>
   40d14:	add	r0, pc, r0
   40d18:	bl	19cc <Mat_Critical@plt>
   40d1c:	ldr	ip, [fp, #12]
   40d20:	ldr	lr, [fp, #8]
   40d24:	ldr	r1, [sp, #16]
   40d28:	mov	r5, #1
   40d2c:	sub	r0, ip, #1
   40d30:	mla	r0, r0, lr, r9
   40d34:	add	r0, r0, #1
   40d38:	cmp	r0, r1
   40d3c:	bhi	40f7c <Mat_VarReadDataLinear5+0x4a8>
   40d40:	ldr	r0, [r4, #48]	; 0x30
   40d44:	cmp	r0, #1
   40d48:	beq	40e14 <Mat_VarReadDataLinear5+0x340>
   40d4c:	cmp	r0, #0
   40d50:	bne	40f48 <Mat_VarReadDataLinear5+0x474>
   40d54:	ldr	r0, [r4, #20]
   40d58:	cmp	r0, #0
   40d5c:	beq	40f2c <Mat_VarReadDataLinear5+0x458>
   40d60:	ldr	r3, [r4, #8]
   40d64:	ldr	r2, [r4, #16]
   40d68:	ldr	r1, [r8]
   40d6c:	mov	r0, r7
   40d70:	stm	sp, {r9, lr}
   40d74:	str	ip, [sp, #8]
   40d78:	bl	1cd7c <ReadDataSlab1>
   40d7c:	ldr	r0, [r4, #52]	; 0x34
   40d80:	mov	r2, #0
   40d84:	ldr	r0, [r0]
   40d88:	add	r1, r0, r6
   40d8c:	ldr	r0, [r7]
   40d90:	bl	1a68 <fseek@plt>
   40d94:	ldr	r3, [r7]
   40d98:	sub	r5, fp, #36	; 0x24
   40d9c:	mov	r1, #4
   40da0:	mov	r2, #2
   40da4:	mov	r0, r5
   40da8:	bl	18d0 <fread@plt>
   40dac:	ldr	r0, [r7, #20]
   40db0:	cmp	r0, #0
   40db4:	beq	40dc8 <Mat_VarReadDataLinear5+0x2f4>
   40db8:	mov	r0, r5
   40dbc:	bl	1c30 <Mat_int32Swap>
   40dc0:	add	r0, r5, #4
   40dc4:	bl	1c30 <Mat_int32Swap>
   40dc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40dcc:	uxtb	r3, r0
   40dd0:	cmp	r0, #65536	; 0x10000
   40dd4:	str	r3, [r4, #8]
   40dd8:	bcc	40df0 <Mat_VarReadDataLinear5+0x31c>
   40ddc:	ldr	r0, [r7]
   40de0:	mvn	r1, #3
   40de4:	mov	r2, #1
   40de8:	bl	1a68 <fseek@plt>
   40dec:	ldr	r3, [r4, #8]
   40df0:	ldr	r0, [fp, #8]
   40df4:	ldr	r2, [r4, #16]
   40df8:	ldr	r1, [r8, #4]
   40dfc:	str	r9, [sp]
   40e00:	str	r0, [sp, #4]
   40e04:	ldr	r0, [fp, #12]
   40e08:	str	r0, [sp, #8]
   40e0c:	mov	r0, r7
   40e10:	b	40f44 <Mat_VarReadDataLinear5+0x470>
   40e14:	ldr	r0, [r4, #20]
   40e18:	cmp	r0, #0
   40e1c:	beq	40f50 <Mat_VarReadDataLinear5+0x47c>
   40e20:	ldr	r0, [r4, #8]
   40e24:	ldr	r2, [r8]
   40e28:	ldr	r3, [r4, #16]
   40e2c:	add	r5, sp, #20
   40e30:	mov	r1, r5
   40e34:	stm	sp, {r0, r9, lr}
   40e38:	mov	r0, r7
   40e3c:	str	ip, [sp, #12]
   40e40:	bl	1e240 <ReadCompressedDataSlab1>
   40e44:	ldr	r1, [r4, #52]	; 0x34
   40e48:	ldr	r0, [r7]
   40e4c:	mov	r2, #0
   40e50:	ldr	r1, [r1]
   40e54:	bl	1a68 <fseek@plt>
   40e58:	mov	r0, r5
   40e5c:	bl	1954 <inflateEnd@plt>
   40e60:	ldr	r0, [r4, #52]	; 0x34
   40e64:	ldr	r1, [r0, #12]
   40e68:	mov	r0, r5
   40e6c:	bl	1960 <inflateCopy@plt>
   40e70:	mov	r5, r0
   40e74:	cmp	r0, #0
   40e78:	beq	40e94 <Mat_VarReadDataLinear5+0x3c0>
   40e7c:	mov	r0, r5
   40e80:	bl	18a0 <zError@plt>
   40e84:	mov	r1, r0
   40e88:	ldr	r0, [pc, #280]	; 40fa8 <Mat_VarReadDataLinear5+0x4d4>
   40e8c:	add	r0, pc, r0
   40e90:	bl	19cc <Mat_Critical@plt>
   40e94:	add	sl, sp, #20
   40e98:	mov	r0, r7
   40e9c:	mov	r2, r6
   40ea0:	mov	r1, sl
   40ea4:	bl	2340 <InflateSkip>
   40ea8:	mov	r0, #0
   40eac:	sub	r2, fp, #36	; 0x24
   40eb0:	mov	r1, sl
   40eb4:	str	r0, [sp, #24]
   40eb8:	mov	r0, r7
   40ebc:	bl	30ac <InflateDataType>
   40ec0:	ldr	r0, [r7, #20]
   40ec4:	cmp	r0, #0
   40ec8:	beq	40ed4 <Mat_VarReadDataLinear5+0x400>
   40ecc:	sub	r0, fp, #36	; 0x24
   40ed0:	bl	1c30 <Mat_int32Swap>
   40ed4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   40ed8:	mov	r2, #0
   40edc:	uxtb	r0, r1
   40ee0:	cmp	r2, r1, lsr #16
   40ee4:	str	r0, [r4, #8]
   40ee8:	bne	40f00 <Mat_VarReadDataLinear5+0x42c>
   40eec:	add	r1, sp, #20
   40ef0:	mov	r0, r7
   40ef4:	mov	r2, #4
   40ef8:	bl	2340 <InflateSkip>
   40efc:	ldr	r0, [r4, #8]
   40f00:	ldr	r3, [r4, #16]
   40f04:	ldr	r2, [r8, #4]
   40f08:	stm	sp, {r0, r9}
   40f0c:	ldr	r0, [fp, #8]
   40f10:	add	r1, sp, #20
   40f14:	str	r0, [sp, #8]
   40f18:	ldr	r0, [fp, #12]
   40f1c:	str	r0, [sp, #12]
   40f20:	mov	r0, r7
   40f24:	bl	1e240 <ReadCompressedDataSlab1>
   40f28:	b	40f74 <Mat_VarReadDataLinear5+0x4a0>
   40f2c:	ldr	r3, [r4, #8]
   40f30:	ldr	r2, [r4, #16]
   40f34:	mov	r0, r7
   40f38:	mov	r1, r8
   40f3c:	stm	sp, {r9, lr}
   40f40:	str	ip, [sp, #8]
   40f44:	bl	1cd7c <ReadDataSlab1>
   40f48:	mov	r5, sl
   40f4c:	b	40f7c <Mat_VarReadDataLinear5+0x4a8>
   40f50:	ldr	r0, [r4, #8]
   40f54:	ldr	r3, [r4, #16]
   40f58:	add	r1, sp, #20
   40f5c:	mov	r2, r8
   40f60:	stm	sp, {r0, r9, lr}
   40f64:	mov	r0, r7
   40f68:	str	ip, [sp, #12]
   40f6c:	bl	1e240 <ReadCompressedDataSlab1>
   40f70:	mov	r5, sl
   40f74:	add	r0, sp, #20
   40f78:	bl	1954 <inflateEnd@plt>
   40f7c:	ldr	r0, [r4, #16]
   40f80:	bl	47104 <ClassType2DataType>
   40f84:	str	r0, [r4, #8]
   40f88:	ldr	r0, [r4, #16]
   40f8c:	bl	1a38 <Mat_SizeOfClass@plt>
   40f90:	str	r0, [r4, #12]
   40f94:	mov	r0, r5
   40f98:	sub	sp, fp, #28
   40f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40fa0:	.word	0x0000b133
   40fa4:	.word	0x0000aea4
   40fa8:	.word	0x0000aed7

00040fac <GetDataLinear>:
   40fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40fb0:	add	fp, sp, #28
   40fb4:	sub	sp, sp, #4
   40fb8:	mov	r5, r0
   40fbc:	mov	r0, r3
   40fc0:	mov	r7, r2
   40fc4:	mov	r4, r1
   40fc8:	bl	193c <Mat_SizeOf@plt>
   40fcc:	sub	r1, r7, #6
   40fd0:	cmp	r1, #9
   40fd4:	bhi	4105c <GetDataLinear+0xb0>
   40fd8:	add	r2, pc, #20
   40fdc:	mov	r8, r0
   40fe0:	ldr	r6, [fp, #16]
   40fe4:	ldr	r9, [fp, #12]
   40fe8:	ldr	r0, [fp, #8]
   40fec:	ldr	r1, [r2, r1, lsl #2]
   40ff0:	add	pc, r2, r1
   40ff4:	.word	0x00000028
   40ff8:	.word	0x00000070
   40ffc:	.word	0x000000b0
   41000:	.word	0x000000ec
   41004:	.word	0x00000128
   41008:	.word	0x00000168
   4100c:	.word	0x000001a8
   41010:	.word	0x000001e8
   41014:	.word	0x00000228
   41018:	.word	0x00000268
   4101c:	add	r7, r5, r0, lsl #3
   41020:	cmp	r9, #0
   41024:	beq	4129c <GetDataLinear+0x2f0>
   41028:	mov	sl, #0
   4102c:	cmp	r6, #1
   41030:	blt	412b0 <GetDataLinear+0x304>
   41034:	lsl	r5, r9, #3
   41038:	mov	r0, r4
   4103c:	mov	r1, r7
   41040:	mov	r2, r8
   41044:	bl	1834 <memcpy@plt>
   41048:	add	r7, r7, r5
   4104c:	subs	r6, r6, #1
   41050:	add	r4, r4, #8
   41054:	bne	41038 <GetDataLinear+0x8c>
   41058:	b	412b0 <GetDataLinear+0x304>
   4105c:	mov	sl, #1
   41060:	b	412b0 <GetDataLinear+0x304>
   41064:	add	r7, r5, r0, lsl #2
   41068:	cmp	r9, #0
   4106c:	beq	4129c <GetDataLinear+0x2f0>
   41070:	mov	sl, #0
   41074:	cmp	r6, #1
   41078:	blt	412b0 <GetDataLinear+0x304>
   4107c:	lsl	r5, r9, #2
   41080:	mov	r0, r4
   41084:	mov	r1, r7
   41088:	mov	r2, r8
   4108c:	bl	1834 <memcpy@plt>
   41090:	add	r7, r7, r5
   41094:	subs	r6, r6, #1
   41098:	add	r4, r4, #4
   4109c:	bne	41080 <GetDataLinear+0xd4>
   410a0:	b	412b0 <GetDataLinear+0x304>
   410a4:	add	r7, r5, r0
   410a8:	cmp	r9, #0
   410ac:	beq	4129c <GetDataLinear+0x2f0>
   410b0:	mov	sl, #0
   410b4:	cmp	r6, #1
   410b8:	blt	412b0 <GetDataLinear+0x304>
   410bc:	mov	r0, r4
   410c0:	mov	r1, r7
   410c4:	mov	r2, r8
   410c8:	bl	1834 <memcpy@plt>
   410cc:	add	r7, r7, r9
   410d0:	subs	r6, r6, #1
   410d4:	add	r4, r4, #1
   410d8:	bne	410bc <GetDataLinear+0x110>
   410dc:	b	412b0 <GetDataLinear+0x304>
   410e0:	add	r7, r5, r0
   410e4:	cmp	r9, #0
   410e8:	beq	4129c <GetDataLinear+0x2f0>
   410ec:	mov	sl, #0
   410f0:	cmp	r6, #1
   410f4:	blt	412b0 <GetDataLinear+0x304>
   410f8:	mov	r0, r4
   410fc:	mov	r1, r7
   41100:	mov	r2, r8
   41104:	bl	1834 <memcpy@plt>
   41108:	add	r7, r7, r9
   4110c:	subs	r6, r6, #1
   41110:	add	r4, r4, #1
   41114:	bne	410f8 <GetDataLinear+0x14c>
   41118:	b	412b0 <GetDataLinear+0x304>
   4111c:	add	r7, r5, r0, lsl #1
   41120:	cmp	r9, #0
   41124:	beq	4129c <GetDataLinear+0x2f0>
   41128:	mov	sl, #0
   4112c:	cmp	r6, #1
   41130:	blt	412b0 <GetDataLinear+0x304>
   41134:	lsl	r5, r9, #1
   41138:	mov	r0, r4
   4113c:	mov	r1, r7
   41140:	mov	r2, r8
   41144:	bl	1834 <memcpy@plt>
   41148:	add	r7, r7, r5
   4114c:	subs	r6, r6, #1
   41150:	add	r4, r4, #2
   41154:	bne	41138 <GetDataLinear+0x18c>
   41158:	b	412b0 <GetDataLinear+0x304>
   4115c:	add	r7, r5, r0, lsl #1
   41160:	cmp	r9, #0
   41164:	beq	4129c <GetDataLinear+0x2f0>
   41168:	mov	sl, #0
   4116c:	cmp	r6, #1
   41170:	blt	412b0 <GetDataLinear+0x304>
   41174:	lsl	r5, r9, #1
   41178:	mov	r0, r4
   4117c:	mov	r1, r7
   41180:	mov	r2, r8
   41184:	bl	1834 <memcpy@plt>
   41188:	add	r7, r7, r5
   4118c:	subs	r6, r6, #1
   41190:	add	r4, r4, #2
   41194:	bne	41178 <GetDataLinear+0x1cc>
   41198:	b	412b0 <GetDataLinear+0x304>
   4119c:	add	r7, r5, r0, lsl #2
   411a0:	cmp	r9, #0
   411a4:	beq	4129c <GetDataLinear+0x2f0>
   411a8:	mov	sl, #0
   411ac:	cmp	r6, #1
   411b0:	blt	412b0 <GetDataLinear+0x304>
   411b4:	lsl	r5, r9, #2
   411b8:	mov	r0, r4
   411bc:	mov	r1, r7
   411c0:	mov	r2, r8
   411c4:	bl	1834 <memcpy@plt>
   411c8:	add	r7, r7, r5
   411cc:	subs	r6, r6, #1
   411d0:	add	r4, r4, #4
   411d4:	bne	411b8 <GetDataLinear+0x20c>
   411d8:	b	412b0 <GetDataLinear+0x304>
   411dc:	add	r7, r5, r0, lsl #2
   411e0:	cmp	r9, #0
   411e4:	beq	4129c <GetDataLinear+0x2f0>
   411e8:	mov	sl, #0
   411ec:	cmp	r6, #1
   411f0:	blt	412b0 <GetDataLinear+0x304>
   411f4:	lsl	r5, r9, #2
   411f8:	mov	r0, r4
   411fc:	mov	r1, r7
   41200:	mov	r2, r8
   41204:	bl	1834 <memcpy@plt>
   41208:	add	r7, r7, r5
   4120c:	subs	r6, r6, #1
   41210:	add	r4, r4, #4
   41214:	bne	411f8 <GetDataLinear+0x24c>
   41218:	b	412b0 <GetDataLinear+0x304>
   4121c:	add	r7, r5, r0, lsl #3
   41220:	cmp	r9, #0
   41224:	beq	4129c <GetDataLinear+0x2f0>
   41228:	mov	sl, #0
   4122c:	cmp	r6, #1
   41230:	blt	412b0 <GetDataLinear+0x304>
   41234:	lsl	r5, r9, #3
   41238:	mov	r0, r4
   4123c:	mov	r1, r7
   41240:	mov	r2, r8
   41244:	bl	1834 <memcpy@plt>
   41248:	add	r7, r7, r5
   4124c:	subs	r6, r6, #1
   41250:	add	r4, r4, #8
   41254:	bne	41238 <GetDataLinear+0x28c>
   41258:	b	412b0 <GetDataLinear+0x304>
   4125c:	add	r7, r5, r0, lsl #3
   41260:	cmp	r9, #0
   41264:	beq	4129c <GetDataLinear+0x2f0>
   41268:	mov	sl, #0
   4126c:	cmp	r6, #1
   41270:	blt	412b0 <GetDataLinear+0x304>
   41274:	lsl	r5, r9, #3
   41278:	mov	r0, r4
   4127c:	mov	r1, r7
   41280:	mov	r2, r8
   41284:	bl	1834 <memcpy@plt>
   41288:	add	r7, r7, r5
   4128c:	subs	r6, r6, #1
   41290:	add	r4, r4, #8
   41294:	bne	41278 <GetDataLinear+0x2cc>
   41298:	b	412b0 <GetDataLinear+0x304>
   4129c:	mul	r2, r8, r6
   412a0:	mov	r0, r4
   412a4:	mov	r1, r7
   412a8:	bl	1834 <memcpy@plt>
   412ac:	mov	sl, #0
   412b0:	mov	r0, sl
   412b4:	sub	sp, fp, #28
   412b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000412bc <Mat_VarWrite5>:
   412bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   412c0:	add	fp, sp, #28
   412c4:	sub	sp, sp, #52	; 0x34
   412c8:	sub	sp, sp, #4096	; 0x1000
   412cc:	mov	r4, r0
   412d0:	mov	r0, #6
   412d4:	mov	r5, r1
   412d8:	mov	r1, #14
   412dc:	mvn	r6, #0
   412e0:	str	r0, [fp, #-40]	; 0xffffffd8
   412e4:	mov	r0, #5
   412e8:	cmp	r4, #0
   412ec:	str	r1, [fp, #-56]	; 0xffffffc8
   412f0:	str	r0, [fp, #-44]	; 0xffffffd4
   412f4:	mov	r0, #8
   412f8:	str	r0, [fp, #-48]	; 0xffffffd0
   412fc:	mov	r0, #0
   41300:	str	r0, [fp, #-52]	; 0xffffffcc
   41304:	str	r0, [fp, #-64]	; 0xffffffc0
   41308:	beq	416bc <Mat_VarWrite5+0x400>
   4130c:	ldr	r0, [r4]
   41310:	mov	r7, r2
   41314:	mov	r1, #0
   41318:	mov	r2, #2
   4131c:	bl	1a68 <fseek@plt>
   41320:	cmp	r5, #0
   41324:	beq	416bc <Mat_VarWrite5+0x400>
   41328:	ldr	r0, [r5, #36]	; 0x24
   4132c:	cmp	r0, #0
   41330:	beq	416bc <Mat_VarWrite5+0x400>
   41334:	cmp	r7, #1
   41338:	beq	4151c <Mat_VarWrite5+0x260>
   4133c:	mov	r8, #0
   41340:	cmp	r7, #0
   41344:	bne	4164c <Mat_VarWrite5+0x390>
   41348:	ldr	r3, [r4]
   4134c:	sub	r0, fp, #56	; 0x38
   41350:	mov	r1, #4
   41354:	mov	r2, #1
   41358:	bl	18c4 <fwrite@plt>
   4135c:	ldr	r3, [r4]
   41360:	sub	r0, fp, #52	; 0x34
   41364:	mov	r1, #4
   41368:	mov	r2, #1
   4136c:	bl	18c4 <fwrite@plt>
   41370:	ldr	r0, [r4]
   41374:	bl	1858 <ftell@plt>
   41378:	mov	r8, r0
   4137c:	ldr	r0, [r5, #16]
   41380:	ldr	r2, [r5, #20]
   41384:	uxtb	r1, r0
   41388:	cmp	r2, #0
   4138c:	str	r1, [fp, #-36]	; 0xffffffdc
   41390:	orrne	r1, r1, #2048	; 0x800
   41394:	strne	r1, [fp, #-36]	; 0xffffffdc
   41398:	ldr	r2, [r5, #24]
   4139c:	cmp	r2, #0
   413a0:	orrne	r1, r1, #1024	; 0x400
   413a4:	strne	r1, [fp, #-36]	; 0xffffffdc
   413a8:	ldr	r2, [r5, #28]
   413ac:	cmp	r2, #0
   413b0:	orrne	r1, r1, #512	; 0x200
   413b4:	strne	r1, [fp, #-36]	; 0xffffffdc
   413b8:	cmp	r0, #5
   413bc:	bne	413cc <Mat_VarWrite5+0x110>
   413c0:	ldr	r0, [r5, #40]	; 0x28
   413c4:	ldr	r0, [r0]
   413c8:	str	r0, [fp, #-64]	; 0xffffffc0
   413cc:	ldr	r3, [r4]
   413d0:	sub	r0, fp, #40	; 0x28
   413d4:	mov	r1, #4
   413d8:	mov	r2, #1
   413dc:	bl	18c4 <fwrite@plt>
   413e0:	ldr	r3, [r4]
   413e4:	sub	r0, fp, #48	; 0x30
   413e8:	mov	r1, #4
   413ec:	mov	r2, #1
   413f0:	bl	18c4 <fwrite@plt>
   413f4:	ldr	r3, [r4]
   413f8:	sub	r0, fp, #36	; 0x24
   413fc:	mov	r1, #4
   41400:	mov	r2, #1
   41404:	bl	18c4 <fwrite@plt>
   41408:	ldr	r3, [r4]
   4140c:	sub	r0, fp, #64	; 0x40
   41410:	mov	r1, #4
   41414:	mov	r2, #1
   41418:	bl	18c4 <fwrite@plt>
   4141c:	ldr	r0, [r5, #4]
   41420:	mov	r1, #4
   41424:	mov	r2, #1
   41428:	lsl	r0, r0, #2
   4142c:	str	r0, [fp, #-60]	; 0xffffffc4
   41430:	sub	r0, fp, #44	; 0x2c
   41434:	ldr	r3, [r4]
   41438:	bl	18c4 <fwrite@plt>
   4143c:	ldr	r3, [r4]
   41440:	sub	r0, fp, #60	; 0x3c
   41444:	mov	r1, #4
   41448:	mov	r2, #1
   4144c:	bl	18c4 <fwrite@plt>
   41450:	ldr	r0, [r5, #4]
   41454:	cmp	r0, #1
   41458:	blt	41494 <Mat_VarWrite5+0x1d8>
   4145c:	mov	r7, #0
   41460:	add	r6, sp, #2064	; 0x810
   41464:	ldr	r0, [r5, #32]
   41468:	mov	r1, #4
   4146c:	mov	r2, #1
   41470:	ldr	r0, [r0, r7, lsl #2]
   41474:	str	r0, [sp, #2064]	; 0x810
   41478:	mov	r0, r6
   4147c:	ldr	r3, [r4]
   41480:	bl	18c4 <fwrite@plt>
   41484:	ldr	r0, [r5, #4]
   41488:	add	r7, r7, #1
   4148c:	cmp	r7, r0
   41490:	blt	41464 <Mat_VarWrite5+0x1a8>
   41494:	tst	r0, #1
   41498:	beq	414b0 <Mat_VarWrite5+0x1f4>
   4149c:	ldr	r3, [r4]
   414a0:	sub	r0, fp, #52	; 0x34
   414a4:	mov	r1, #4
   414a8:	mov	r2, #1
   414ac:	bl	18c4 <fwrite@plt>
   414b0:	ldr	r0, [r5, #36]	; 0x24
   414b4:	bl	196c <strlen@plt>
   414b8:	mov	r6, r0
   414bc:	cmp	r0, #4
   414c0:	bhi	4158c <Mat_VarWrite5+0x2d0>
   414c4:	mov	r0, #1
   414c8:	mov	r1, #4
   414cc:	mov	r2, #1
   414d0:	orr	r0, r0, r6, lsl #16
   414d4:	str	r0, [sp, #2064]	; 0x810
   414d8:	add	r0, sp, #2064	; 0x810
   414dc:	ldr	r3, [r4]
   414e0:	bl	18c4 <fwrite@plt>
   414e4:	ldr	r0, [r5, #36]	; 0x24
   414e8:	ldr	r3, [r4]
   414ec:	mov	r1, #1
   414f0:	mov	r2, r6
   414f4:	bl	18c4 <fwrite@plt>
   414f8:	cmp	r6, #4
   414fc:	beq	41604 <Mat_VarWrite5+0x348>
   41500:	ldr	r1, [r4]
   41504:	mov	r0, #0
   41508:	bl	1a08 <fputc@plt>
   4150c:	add	r6, r6, #1
   41510:	cmp	r6, #4
   41514:	blt	41500 <Mat_VarWrite5+0x244>
   41518:	b	41604 <Mat_VarWrite5+0x348>
   4151c:	add	sl, sp, #16
   41520:	mov	r1, #0
   41524:	mov	r2, #2048	; 0x800
   41528:	mov	r0, sl
   4152c:	bl	19a8 <memset@plt>
   41530:	mov	r0, #1
   41534:	mov	r1, #56	; 0x38
   41538:	bl	17b0 <calloc@plt>
   4153c:	cmp	r0, #0
   41540:	beq	416bc <Mat_VarWrite5+0x400>
   41544:	ldr	r2, [pc, #1360]	; 41a9c <Mat_VarWrite5+0x7e0>
   41548:	mvn	r1, #0
   4154c:	mov	r3, #56	; 0x38
   41550:	mov	r7, r0
   41554:	add	r2, pc, r2
   41558:	bl	18f4 <deflateInit_@plt>
   4155c:	cmp	r0, #0
   41560:	beq	416c8 <Mat_VarWrite5+0x40c>
   41564:	mov	r8, r0
   41568:	mov	r0, r7
   4156c:	bl	181c <free@plt>
   41570:	mov	r0, r8
   41574:	bl	18a0 <zError@plt>
   41578:	mov	r1, r0
   4157c:	ldr	r0, [pc, #1308]	; 41aa0 <Mat_VarWrite5+0x7e4>
   41580:	add	r0, pc, r0
   41584:	bl	19cc <Mat_Critical@plt>
   41588:	b	416bc <Mat_VarWrite5+0x400>
   4158c:	mov	r0, #1
   41590:	str	r6, [sp, #16]
   41594:	mov	r1, #4
   41598:	mov	r2, #1
   4159c:	str	r0, [sp, #2064]	; 0x810
   415a0:	add	r0, sp, #2064	; 0x810
   415a4:	ldr	r3, [r4]
   415a8:	bl	18c4 <fwrite@plt>
   415ac:	ldr	r3, [r4]
   415b0:	add	r0, sp, #16
   415b4:	mov	r1, #4
   415b8:	mov	r2, #1
   415bc:	bl	18c4 <fwrite@plt>
   415c0:	ldr	r6, [sp, #16]
   415c4:	ldr	r0, [r5, #36]	; 0x24
   415c8:	ldr	r3, [r4]
   415cc:	mov	r1, #1
   415d0:	mov	r2, r6
   415d4:	bl	18c4 <fwrite@plt>
   415d8:	asr	r0, r6, #31
   415dc:	add	r0, r6, r0, lsr #29
   415e0:	bic	r0, r0, #7
   415e4:	subs	r0, r6, r0
   415e8:	beq	41604 <Mat_VarWrite5+0x348>
   415ec:	sub	r6, r0, #8
   415f0:	ldr	r1, [r4]
   415f4:	mov	r0, #0
   415f8:	bl	1a08 <fputc@plt>
   415fc:	adds	r6, r6, #1
   41600:	bcc	415f0 <Mat_VarWrite5+0x334>
   41604:	ldr	r0, [r5, #52]	; 0x34
   41608:	cmp	r0, #0
   4160c:	beq	41638 <Mat_VarWrite5+0x37c>
   41610:	ldr	r0, [r4]
   41614:	bl	1858 <ftell@plt>
   41618:	ldr	r1, [r5, #52]	; 0x34
   4161c:	cmn	r0, #1
   41620:	str	r0, [r1]
   41624:	bne	41640 <Mat_VarWrite5+0x384>
   41628:	ldr	r0, [pc, #1128]	; 41a98 <Mat_VarWrite5+0x7dc>
   4162c:	add	r0, pc, r0
   41630:	bl	19cc <Mat_Critical@plt>
   41634:	b	41640 <Mat_VarWrite5+0x384>
   41638:	mov	r0, #0
   4163c:	str	r0, [r5, #16]
   41640:	mov	r0, r4
   41644:	mov	r1, r5
   41648:	bl	41aac <WriteType>
   4164c:	ldr	r0, [r4]
   41650:	bl	1858 <ftell@plt>
   41654:	cmn	r8, #1
   41658:	movne	r5, r0
   4165c:	cmnne	r0, #1
   41660:	bne	41678 <Mat_VarWrite5+0x3bc>
   41664:	ldr	r0, [pc, #1084]	; 41aa8 <Mat_VarWrite5+0x7ec>
   41668:	add	r0, pc, r0
   4166c:	bl	19cc <Mat_Critical@plt>
   41670:	mov	r6, #0
   41674:	b	416bc <Mat_VarWrite5+0x400>
   41678:	sub	r0, r5, r8
   4167c:	mvn	r1, #3
   41680:	mov	r2, #1
   41684:	str	r0, [fp, #-60]	; 0xffffffc4
   41688:	sub	r1, r1, r0
   4168c:	ldr	r0, [r4]
   41690:	bl	1a68 <fseek@plt>
   41694:	ldr	r3, [r4]
   41698:	sub	r0, fp, #60	; 0x3c
   4169c:	mov	r1, #4
   416a0:	mov	r2, #1
   416a4:	bl	18c4 <fwrite@plt>
   416a8:	ldr	r0, [r4]
   416ac:	mov	r1, r5
   416b0:	mov	r2, #0
   416b4:	mov	r6, #0
   416b8:	bl	1a68 <fseek@plt>
   416bc:	mov	r0, r6
   416c0:	sub	sp, fp, #28
   416c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   416c8:	mov	r0, #15
   416cc:	mov	r1, #4
   416d0:	mov	r2, #1
   416d4:	str	r0, [fp, #-56]	; 0xffffffc8
   416d8:	sub	r0, fp, #56	; 0x38
   416dc:	ldr	r3, [r4]
   416e0:	bl	18c4 <fwrite@plt>
   416e4:	ldr	r3, [r4]
   416e8:	sub	r0, fp, #52	; 0x34
   416ec:	mov	r1, #4
   416f0:	mov	r2, #1
   416f4:	bl	18c4 <fwrite@plt>
   416f8:	ldr	r0, [r4]
   416fc:	bl	1858 <ftell@plt>
   41700:	str	r0, [sp, #8]
   41704:	ldr	r0, [r5, #16]
   41708:	ldr	r1, [r5, #20]
   4170c:	uxtb	r8, r0
   41710:	cmp	r1, #0
   41714:	str	r8, [fp, #-36]	; 0xffffffdc
   41718:	orrne	r8, r8, #2048	; 0x800
   4171c:	strne	r8, [fp, #-36]	; 0xffffffdc
   41720:	ldr	r1, [r5, #24]
   41724:	cmp	r1, #0
   41728:	orrne	r8, r8, #1024	; 0x400
   4172c:	strne	r8, [fp, #-36]	; 0xffffffdc
   41730:	ldr	r1, [r5, #28]
   41734:	cmp	r1, #0
   41738:	mov	r1, #0
   4173c:	orrne	r8, r8, #512	; 0x200
   41740:	strne	r8, [fp, #-36]	; 0xffffffdc
   41744:	cmp	r0, #5
   41748:	bne	41758 <Mat_VarWrite5+0x49c>
   4174c:	ldr	r0, [r5, #40]	; 0x28
   41750:	ldr	r1, [r0]
   41754:	str	r1, [fp, #-64]	; 0xffffffc0
   41758:	mov	r0, #14
   4175c:	mov	r6, #24
   41760:	str	r1, [sp, #12]
   41764:	str	r0, [sp, #16]
   41768:	ldr	r0, [r5, #36]	; 0x24
   4176c:	cmp	r0, #0
   41770:	beq	41790 <Mat_VarWrite5+0x4d4>
   41774:	bl	196c <strlen@plt>
   41778:	cmp	r0, #5
   4177c:	bcc	41790 <Mat_VarWrite5+0x4d4>
   41780:	ands	r1, r0, #7
   41784:	sub	r1, r0, r1
   41788:	addne	r0, r1, #8
   4178c:	add	r6, r0, #24
   41790:	mov	r0, r5
   41794:	bl	455bc <GetTypeBufSize>
   41798:	add	r0, r0, r6
   4179c:	str	sl, [r7]
   417a0:	add	r6, sp, #2064	; 0x810
   417a4:	str	r0, [sp, #20]
   417a8:	mov	r0, #8
   417ac:	str	r0, [r7, #4]
   417b0:	orr	r0, sl, #4
   417b4:	mov	sl, #2048	; 0x800
   417b8:	str	r0, [sp, #4]
   417bc:	mov	r0, r7
   417c0:	mov	r1, #0
   417c4:	str	r6, [r7, #12]
   417c8:	str	sl, [r7, #16]
   417cc:	bl	18ac <deflate@plt>
   417d0:	ldr	r0, [r7, #16]
   417d4:	ldr	r3, [r4]
   417d8:	mov	r1, #1
   417dc:	rsb	r2, r0, #2048	; 0x800
   417e0:	mov	r0, r6
   417e4:	bl	18c4 <fwrite@plt>
   417e8:	ldr	r0, [r7, #16]
   417ec:	cmp	r0, #0
   417f0:	beq	417bc <Mat_VarWrite5+0x500>
   417f4:	ldr	r0, [sp, #12]
   417f8:	mov	r1, #5
   417fc:	str	r0, [sp, #28]
   41800:	mov	r0, #8
   41804:	str	r8, [sp, #24]
   41808:	str	r0, [sp, #20]
   4180c:	mov	r0, #6
   41810:	str	r0, [sp, #16]
   41814:	ldr	ip, [r5, #4]
   41818:	str	r1, [sp, #32]
   4181c:	lsl	r1, ip, #2
   41820:	cmp	ip, #1
   41824:	str	r1, [sp, #36]	; 0x24
   41828:	str	r1, [fp, #-60]	; 0xffffffc4
   4182c:	blt	41858 <Mat_VarWrite5+0x59c>
   41830:	ldr	r2, [r5, #32]
   41834:	add	lr, sp, #16
   41838:	mov	r3, ip
   4183c:	add	r1, lr, #24
   41840:	ldr	r0, [r2], #4
   41844:	subs	r3, r3, #1
   41848:	str	r0, [r1], #4
   4184c:	bne	41840 <Mat_VarWrite5+0x584>
   41850:	mov	r1, ip
   41854:	b	41860 <Mat_VarWrite5+0x5a4>
   41858:	mov	r1, #0
   4185c:	add	lr, sp, #16
   41860:	tst	ip, #1
   41864:	beq	41878 <Mat_VarWrite5+0x5bc>
   41868:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4186c:	add	r0, lr, r1, lsl #2
   41870:	add	r1, r1, #1
   41874:	str	r2, [r0, #24]
   41878:	mov	r0, #24
   4187c:	add	r9, lr, #8
   41880:	mov	r8, #2048	; 0x800
   41884:	str	lr, [r7]
   41888:	add	r0, r0, r1, lsl #2
   4188c:	str	r0, [r7, #4]
   41890:	mov	r0, r7
   41894:	mov	r1, #0
   41898:	str	r6, [r7, #12]
   4189c:	str	r8, [r7, #16]
   418a0:	bl	18ac <deflate@plt>
   418a4:	ldr	r0, [r7, #16]
   418a8:	ldr	r3, [r4]
   418ac:	mov	r1, #1
   418b0:	rsb	r2, r0, #2048	; 0x800
   418b4:	mov	r0, r6
   418b8:	bl	18c4 <fwrite@plt>
   418bc:	ldr	r0, [r7, #16]
   418c0:	cmp	r0, #0
   418c4:	beq	41890 <Mat_VarWrite5+0x5d4>
   418c8:	ldr	sl, [r5, #36]	; 0x24
   418cc:	mov	r0, sl
   418d0:	bl	196c <strlen@plt>
   418d4:	mov	r8, r0
   418d8:	cmp	r0, #4
   418dc:	bhi	41954 <Mat_VarWrite5+0x698>
   418e0:	mov	r0, #0
   418e4:	sxth	r2, r8
   418e8:	mov	r1, sl
   418ec:	str	r0, [sp, #20]
   418f0:	mov	r0, #1
   418f4:	orr	r0, r0, r8, lsl #16
   418f8:	str	r0, [sp, #16]
   418fc:	ldr	r0, [sp, #4]
   41900:	bl	1834 <memcpy@plt>
   41904:	add	r1, sp, #16
   41908:	mov	r8, #2048	; 0x800
   4190c:	mov	r0, #8
   41910:	str	r1, [r7]
   41914:	str	r0, [r7, #4]
   41918:	mov	r0, r7
   4191c:	mov	r1, #0
   41920:	str	r6, [r7, #12]
   41924:	str	r8, [r7, #16]
   41928:	bl	18ac <deflate@plt>
   4192c:	ldr	r0, [r7, #16]
   41930:	ldr	r3, [r4]
   41934:	mov	r1, #1
   41938:	rsb	r2, r0, #2048	; 0x800
   4193c:	mov	r0, r6
   41940:	bl	18c4 <fwrite@plt>
   41944:	ldr	r0, [r7, #16]
   41948:	cmp	r0, #0
   4194c:	beq	41918 <Mat_VarWrite5+0x65c>
   41950:	b	419e0 <Mat_VarWrite5+0x724>
   41954:	mov	r0, r9
   41958:	mov	r1, #0
   4195c:	movw	r2, #2040	; 0x7f8
   41960:	bl	19a8 <memset@plt>
   41964:	mov	r0, #1
   41968:	str	r8, [sp, #20]
   4196c:	mov	r1, sl
   41970:	mov	r2, r8
   41974:	str	r0, [sp, #16]
   41978:	mov	r0, r9
   4197c:	bl	1834 <memcpy@plt>
   41980:	asr	r0, r8, #31
   41984:	add	r0, r8, r0, lsr #29
   41988:	bic	r0, r0, #7
   4198c:	subs	r1, r8, r0
   41990:	add	r1, sp, #16
   41994:	addne	r8, r0, #8
   41998:	str	r1, [r7]
   4199c:	add	r0, r8, #8
   419a0:	mov	r8, #2048	; 0x800
   419a4:	str	r0, [r7, #4]
   419a8:	mov	r0, r7
   419ac:	mov	r1, #0
   419b0:	str	r6, [r7, #12]
   419b4:	str	r8, [r7, #16]
   419b8:	bl	18ac <deflate@plt>
   419bc:	ldr	r0, [r7, #16]
   419c0:	ldr	r3, [r4]
   419c4:	mov	r1, #1
   419c8:	rsb	r2, r0, #2048	; 0x800
   419cc:	mov	r0, r6
   419d0:	bl	18c4 <fwrite@plt>
   419d4:	ldr	r0, [r7, #16]
   419d8:	cmp	r0, #0
   419dc:	beq	419a8 <Mat_VarWrite5+0x6ec>
   419e0:	ldr	r0, [r5, #52]	; 0x34
   419e4:	cmp	r0, #0
   419e8:	beq	41a14 <Mat_VarWrite5+0x758>
   419ec:	ldr	r0, [r4]
   419f0:	bl	1858 <ftell@plt>
   419f4:	ldr	r1, [r5, #52]	; 0x34
   419f8:	cmn	r0, #1
   419fc:	str	r0, [r1]
   41a00:	bne	41a1c <Mat_VarWrite5+0x760>
   41a04:	ldr	r0, [pc, #152]	; 41aa4 <Mat_VarWrite5+0x7e8>
   41a08:	add	r0, pc, r0
   41a0c:	bl	19cc <Mat_Critical@plt>
   41a10:	b	41a1c <Mat_VarWrite5+0x760>
   41a14:	mov	r0, #0
   41a18:	str	r0, [r5, #16]
   41a1c:	mov	r0, r4
   41a20:	mov	r1, r5
   41a24:	mov	r2, r7
   41a28:	bl	42a68 <WriteCompressedType>
   41a2c:	mov	r0, #0
   41a30:	mov	r8, #2048	; 0x800
   41a34:	str	r0, [r7]
   41a38:	str	r0, [r7, #4]
   41a3c:	mov	r0, r7
   41a40:	mov	r1, #4
   41a44:	str	r6, [r7, #12]
   41a48:	str	r8, [r7, #16]
   41a4c:	bl	18ac <deflate@plt>
   41a50:	mov	r5, r0
   41a54:	ldr	r0, [r7, #16]
   41a58:	ldr	r3, [r4]
   41a5c:	mov	r1, #1
   41a60:	rsb	r2, r0, #2048	; 0x800
   41a64:	mov	r0, r6
   41a68:	bl	18c4 <fwrite@plt>
   41a6c:	cmp	r5, #1
   41a70:	beq	41a80 <Mat_VarWrite5+0x7c4>
   41a74:	ldr	r0, [r7, #16]
   41a78:	cmp	r0, #0
   41a7c:	beq	41a3c <Mat_VarWrite5+0x780>
   41a80:	mov	r0, r7
   41a84:	bl	19d8 <deflateEnd@plt>
   41a88:	mov	r0, r7
   41a8c:	bl	181c <free@plt>
   41a90:	ldr	r8, [sp, #8]
   41a94:	b	4164c <Mat_VarWrite5+0x390>
   41a98:	.word	0x0000a500
   41a9c:	.word	0x0000a82d
   41aa0:	.word	0x0000a808
   41aa4:	.word	0x0000a124
   41aa8:	.word	0x0000a4c4

00041aac <WriteType>:
   41aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ab0:	add	fp, sp, #28
   41ab4:	sub	sp, sp, #116	; 0x74
   41ab8:	mov	r6, r1
   41abc:	mov	r4, r0
   41ac0:	mov	r0, #1
   41ac4:	add	r1, sp, #28
   41ac8:	strh	r0, [sp, #38]	; 0x26
   41acc:	str	r0, [sp, #28]
   41ad0:	mov	r0, r6
   41ad4:	bl	47128 <SafeMulDims>
   41ad8:	ldr	r0, [r6, #16]
   41adc:	sub	r1, r0, #6
   41ae0:	cmp	r1, #10
   41ae4:	bcs	41b98 <WriteType+0xec>
   41ae8:	ldr	r0, [r6, #20]
   41aec:	ldr	r1, [r6, #40]	; 0x28
   41af0:	cmp	r0, #0
   41af4:	beq	41fac <WriteType+0x500>
   41af8:	ldr	r5, [pc, #3928]	; 42a58 <WriteType+0xfac>
   41afc:	cmp	r1, #0
   41b00:	ldr	r3, [r6, #8]
   41b04:	ldr	r2, [sp, #28]
   41b08:	mov	r0, r4
   41b0c:	mov	r7, r6
   41b10:	add	r5, pc, r5
   41b14:	movne	r5, r1
   41b18:	ldr	r1, [r5]
   41b1c:	bl	45518 <WriteData>
   41b20:	asr	r1, r0, #31
   41b24:	str	r0, [sp, #32]
   41b28:	add	r1, r0, r1, lsr #29
   41b2c:	bic	r1, r1, #7
   41b30:	subs	r0, r0, r1
   41b34:	beq	41b50 <WriteType+0xa4>
   41b38:	sub	r6, r0, #8
   41b3c:	ldr	r1, [r4]
   41b40:	mov	r0, #0
   41b44:	bl	1a08 <fputc@plt>
   41b48:	adds	r6, r6, #1
   41b4c:	bcc	41b3c <WriteType+0x90>
   41b50:	ldr	r3, [r7, #8]
   41b54:	ldr	r1, [r5, #4]
   41b58:	ldr	r2, [sp, #28]
   41b5c:	mov	r0, r4
   41b60:	bl	45518 <WriteData>
   41b64:	asr	r1, r0, #31
   41b68:	str	r0, [sp, #32]
   41b6c:	add	r1, r0, r1, lsr #29
   41b70:	bic	r1, r1, #7
   41b74:	subs	r0, r0, r1
   41b78:	beq	42a50 <WriteType+0xfa4>
   41b7c:	sub	r5, r0, #8
   41b80:	ldr	r1, [r4]
   41b84:	mov	r0, #0
   41b88:	bl	1a08 <fputc@plt>
   41b8c:	adds	r5, r5, #1
   41b90:	bcc	41b80 <WriteType+0xd4>
   41b94:	b	42a50 <WriteType+0xfa4>
   41b98:	sub	r0, r0, #1
   41b9c:	cmp	r0, #4
   41ba0:	bhi	42a50 <WriteType+0xfa4>
   41ba4:	add	r1, pc, #4
   41ba8:	ldr	r0, [r1, r0, lsl #2]
   41bac:	add	pc, r1, r0
   41bb0:	.word	0x00000014
   41bb4:	.word	0x00000510
   41bb8:	.word	0x00000ea0
   41bbc:	.word	0x00000440
   41bc0:	.word	0x00000b40
   41bc4:	ldr	r0, [r6]
   41bc8:	cmp	r0, #0
   41bcc:	beq	42a50 <WriteType+0xfa4>
   41bd0:	ldr	r7, [r6, #40]	; 0x28
   41bd4:	cmp	r7, #0
   41bd8:	ldrne	r1, [r6, #12]
   41bdc:	cmpne	r1, #0
   41be0:	beq	42a50 <WriteType+0xfa4>
   41be4:	udiv	r2, r0, r1
   41be8:	cmp	r1, r0
   41bec:	str	r2, [sp, #28]
   41bf0:	bhi	42a50 <WriteType+0xfa4>
   41bf4:	mov	r6, #0
   41bf8:	mov	r5, #1
   41bfc:	sub	sl, fp, #60	; 0x3c
   41c00:	mov	r9, #0
   41c04:	ldr	r8, [r7, r9, lsl #2]
   41c08:	mov	r0, #6
   41c0c:	cmp	r4, #0
   41c10:	strh	r5, [fp, #-64]	; 0xffffffc0
   41c14:	str	r6, [fp, #-44]	; 0xffffffd4
   41c18:	str	r6, [fp, #-56]	; 0xffffffc8
   41c1c:	str	r0, [fp, #-32]	; 0xffffffe0
   41c20:	mov	r0, #5
   41c24:	str	r0, [fp, #-36]	; 0xffffffdc
   41c28:	mov	r0, #8
   41c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   41c30:	mov	r0, #14
   41c34:	cmpne	r8, #0
   41c38:	str	r0, [fp, #-48]	; 0xffffffd0
   41c3c:	bne	41c54 <WriteType+0x1a8>
   41c40:	ldr	r0, [sp, #28]
   41c44:	add	r9, r9, #1
   41c48:	cmp	r9, r0
   41c4c:	bcc	41c04 <WriteType+0x158>
   41c50:	b	42a50 <WriteType+0xfa4>
   41c54:	ldr	r3, [r4]
   41c58:	sub	r0, fp, #48	; 0x30
   41c5c:	mov	r1, #4
   41c60:	mov	r2, #1
   41c64:	bl	18c4 <fwrite@plt>
   41c68:	ldr	r3, [r4]
   41c6c:	sub	r0, fp, #44	; 0x2c
   41c70:	mov	r1, #4
   41c74:	mov	r2, #1
   41c78:	bl	18c4 <fwrite@plt>
   41c7c:	ldr	r0, [r8, #16]
   41c80:	cmp	r0, #0
   41c84:	beq	41c40 <WriteType+0x194>
   41c88:	ldr	r0, [r4]
   41c8c:	bl	1858 <ftell@plt>
   41c90:	str	r0, [sp, #12]
   41c94:	ldr	r0, [r8, #16]
   41c98:	ldr	r2, [r8, #20]
   41c9c:	add	r5, sp, #40	; 0x28
   41ca0:	uxtb	r1, r0
   41ca4:	cmp	r2, #0
   41ca8:	str	r1, [sp, #40]	; 0x28
   41cac:	orrne	r1, r1, #2048	; 0x800
   41cb0:	strne	r1, [sp, #40]	; 0x28
   41cb4:	ldr	r2, [r8, #24]
   41cb8:	cmp	r2, #0
   41cbc:	orrne	r1, r1, #1024	; 0x400
   41cc0:	strne	r1, [sp, #40]	; 0x28
   41cc4:	ldr	r2, [r8, #28]
   41cc8:	cmp	r2, #0
   41ccc:	orrne	r1, r1, #512	; 0x200
   41cd0:	strne	r1, [sp, #40]	; 0x28
   41cd4:	cmp	r0, #5
   41cd8:	bne	41ce8 <WriteType+0x23c>
   41cdc:	ldr	r0, [r8, #40]	; 0x28
   41ce0:	ldr	r0, [r0]
   41ce4:	str	r0, [fp, #-56]	; 0xffffffc8
   41ce8:	ldr	r0, [r4, #20]
   41cec:	cmp	r0, #0
   41cf0:	beq	41d00 <WriteType+0x254>
   41cf4:	mov	r0, r5
   41cf8:	bl	1c30 <Mat_int32Swap>
   41cfc:	str	r0, [sp, #40]	; 0x28
   41d00:	ldr	r3, [r4]
   41d04:	sub	r0, fp, #32
   41d08:	mov	r1, #4
   41d0c:	mov	r2, #1
   41d10:	bl	18c4 <fwrite@plt>
   41d14:	ldr	r3, [r4]
   41d18:	sub	r0, fp, #40	; 0x28
   41d1c:	mov	r1, #4
   41d20:	mov	r2, #1
   41d24:	bl	18c4 <fwrite@plt>
   41d28:	ldr	r3, [r4]
   41d2c:	mov	r0, r5
   41d30:	mov	r1, #4
   41d34:	mov	r2, #1
   41d38:	bl	18c4 <fwrite@plt>
   41d3c:	ldr	r3, [r4]
   41d40:	sub	r0, fp, #56	; 0x38
   41d44:	mov	r1, #4
   41d48:	mov	r2, #1
   41d4c:	bl	18c4 <fwrite@plt>
   41d50:	ldr	r0, [r8, #4]
   41d54:	mov	r1, #4
   41d58:	mov	r2, #1
   41d5c:	lsl	r0, r0, #2
   41d60:	str	r0, [fp, #-52]	; 0xffffffcc
   41d64:	sub	r0, fp, #36	; 0x24
   41d68:	ldr	r3, [r4]
   41d6c:	bl	18c4 <fwrite@plt>
   41d70:	ldr	r3, [r4]
   41d74:	sub	r0, fp, #52	; 0x34
   41d78:	mov	r1, #4
   41d7c:	mov	r2, #1
   41d80:	bl	18c4 <fwrite@plt>
   41d84:	ldr	r0, [r8, #4]
   41d88:	cmp	r0, #1
   41d8c:	blt	41dc4 <WriteType+0x318>
   41d90:	mov	r5, #0
   41d94:	ldr	r0, [r8, #32]
   41d98:	mov	r1, #4
   41d9c:	mov	r2, #1
   41da0:	ldr	r0, [r0, r5, lsl #2]
   41da4:	str	r0, [fp, #-60]	; 0xffffffc4
   41da8:	mov	r0, sl
   41dac:	ldr	r3, [r4]
   41db0:	bl	18c4 <fwrite@plt>
   41db4:	ldr	r0, [r8, #4]
   41db8:	add	r5, r5, #1
   41dbc:	cmp	r5, r0
   41dc0:	blt	41d94 <WriteType+0x2e8>
   41dc4:	tst	r0, #1
   41dc8:	beq	41de0 <WriteType+0x334>
   41dcc:	ldr	r3, [r4]
   41dd0:	sub	r0, fp, #44	; 0x2c
   41dd4:	mov	r1, #4
   41dd8:	mov	r2, #1
   41ddc:	bl	18c4 <fwrite@plt>
   41de0:	ldr	r0, [r8, #36]	; 0x24
   41de4:	cmp	r0, #0
   41de8:	beq	41e60 <WriteType+0x3b4>
   41dec:	bl	196c <strlen@plt>
   41df0:	cmp	r0, #4
   41df4:	bhi	41ea4 <WriteType+0x3f8>
   41df8:	strh	r0, [fp, #-60]	; 0xffffffc4
   41dfc:	sub	r0, fp, #64	; 0x40
   41e00:	mov	r1, #2
   41e04:	mov	r2, #1
   41e08:	ldr	r3, [r4]
   41e0c:	bl	18c4 <fwrite@plt>
   41e10:	ldr	r3, [r4]
   41e14:	mov	r0, sl
   41e18:	mov	r1, #2
   41e1c:	mov	r2, #1
   41e20:	bl	18c4 <fwrite@plt>
   41e24:	ldrsh	r5, [fp, #-60]	; 0xffffffc4
   41e28:	ldr	r0, [r8, #36]	; 0x24
   41e2c:	ldr	r3, [r4]
   41e30:	mov	r1, #1
   41e34:	mov	r2, r5
   41e38:	bl	18c4 <fwrite@plt>
   41e3c:	cmp	r5, #3
   41e40:	bgt	41f2c <WriteType+0x480>
   41e44:	sub	r5, r5, #4
   41e48:	ldr	r1, [r4]
   41e4c:	mov	r0, #0
   41e50:	bl	1a08 <fputc@plt>
   41e54:	adds	r5, r5, #1
   41e58:	bcc	41e48 <WriteType+0x39c>
   41e5c:	b	41f2c <WriteType+0x480>
   41e60:	ldr	r3, [r4]
   41e64:	sub	r0, fp, #64	; 0x40
   41e68:	mov	r1, #2
   41e6c:	mov	r2, #1
   41e70:	bl	18c4 <fwrite@plt>
   41e74:	ldr	r1, [r4]
   41e78:	mov	r0, #0
   41e7c:	bl	1a08 <fputc@plt>
   41e80:	ldr	r1, [r4]
   41e84:	mov	r0, #0
   41e88:	bl	1a08 <fputc@plt>
   41e8c:	ldr	r3, [r4]
   41e90:	sub	r0, fp, #44	; 0x2c
   41e94:	mov	r1, #4
   41e98:	mov	r2, #1
   41e9c:	bl	18c4 <fwrite@plt>
   41ea0:	b	41f2c <WriteType+0x480>
   41ea4:	str	r0, [fp, #-60]	; 0xffffffc4
   41ea8:	sub	r0, fp, #64	; 0x40
   41eac:	mov	r1, #2
   41eb0:	mov	r2, #1
   41eb4:	ldr	r3, [r4]
   41eb8:	bl	18c4 <fwrite@plt>
   41ebc:	ldr	r1, [r4]
   41ec0:	mov	r0, #0
   41ec4:	bl	1a08 <fputc@plt>
   41ec8:	ldr	r1, [r4]
   41ecc:	mov	r0, #0
   41ed0:	bl	1a08 <fputc@plt>
   41ed4:	ldr	r3, [r4]
   41ed8:	mov	r0, sl
   41edc:	mov	r1, #4
   41ee0:	mov	r2, #1
   41ee4:	bl	18c4 <fwrite@plt>
   41ee8:	ldr	r5, [fp, #-60]	; 0xffffffc4
   41eec:	ldr	r0, [r8, #36]	; 0x24
   41ef0:	ldr	r3, [r4]
   41ef4:	mov	r1, #1
   41ef8:	mov	r2, r5
   41efc:	bl	18c4 <fwrite@plt>
   41f00:	asr	r0, r5, #31
   41f04:	add	r0, r5, r0, lsr #29
   41f08:	bic	r0, r0, #7
   41f0c:	subs	r0, r5, r0
   41f10:	beq	41f2c <WriteType+0x480>
   41f14:	sub	r5, r0, #8
   41f18:	ldr	r1, [r4]
   41f1c:	mov	r0, #0
   41f20:	bl	1a08 <fputc@plt>
   41f24:	adds	r5, r5, #1
   41f28:	bcc	41f18 <WriteType+0x46c>
   41f2c:	mov	r0, r4
   41f30:	mov	r1, r8
   41f34:	bl	41aac <WriteType>
   41f38:	ldr	r0, [r4]
   41f3c:	bl	1858 <ftell@plt>
   41f40:	mov	r5, r0
   41f44:	ldr	r0, [sp, #12]
   41f48:	cmn	r0, #1
   41f4c:	cmnne	r5, #1
   41f50:	bne	41f64 <WriteType+0x4b8>
   41f54:	ldr	r0, [pc, #2816]	; 42a5c <WriteType+0xfb0>
   41f58:	add	r0, pc, r0
   41f5c:	bl	19cc <Mat_Critical@plt>
   41f60:	b	41fa4 <WriteType+0x4f8>
   41f64:	sub	r0, r5, r0
   41f68:	mvn	r1, #3
   41f6c:	mov	r2, #1
   41f70:	str	r0, [fp, #-52]	; 0xffffffcc
   41f74:	sub	r1, r1, r0
   41f78:	ldr	r0, [r4]
   41f7c:	bl	1a68 <fseek@plt>
   41f80:	ldr	r3, [r4]
   41f84:	sub	r0, fp, #52	; 0x34
   41f88:	mov	r1, #4
   41f8c:	mov	r2, #1
   41f90:	bl	18c4 <fwrite@plt>
   41f94:	ldr	r0, [r4]
   41f98:	mov	r1, r5
   41f9c:	mov	r2, #0
   41fa0:	bl	1a68 <fseek@plt>
   41fa4:	mov	r5, #1
   41fa8:	b	41c40 <WriteType+0x194>
   41fac:	ldr	r3, [r6, #8]
   41fb0:	ldr	r2, [sp, #28]
   41fb4:	mov	r0, r4
   41fb8:	bl	45518 <WriteData>
   41fbc:	asr	r1, r0, #31
   41fc0:	str	r0, [sp, #32]
   41fc4:	add	r1, r0, r1, lsr #29
   41fc8:	bic	r1, r1, #7
   41fcc:	subs	r0, r0, r1
   41fd0:	beq	42a50 <WriteType+0xfa4>
   41fd4:	sub	r5, r0, #8
   41fd8:	ldr	r1, [r4]
   41fdc:	mov	r0, #0
   41fe0:	bl	1a08 <fputc@plt>
   41fe4:	adds	r5, r5, #1
   41fe8:	bcc	41fd8 <WriteType+0x52c>
   41fec:	b	42a50 <WriteType+0xfa4>
   41ff0:	ldr	r0, [r6, #8]
   41ff4:	ldr	r5, [r6, #40]	; 0x28
   41ff8:	ldr	r6, [sp, #28]
   41ffc:	mov	r1, #0
   42000:	str	r1, [fp, #-32]	; 0xffffffe0
   42004:	cmp	r0, #3
   42008:	str	r0, [sp, #40]	; 0x28
   4200c:	bgt	4281c <WriteType+0xd70>
   42010:	sub	r1, r0, #1
   42014:	cmp	r1, #2
   42018:	bcs	42984 <WriteType+0xed8>
   4201c:	mov	r0, #4
   42020:	mov	r1, #4
   42024:	mov	r2, #1
   42028:	str	r0, [sp, #40]	; 0x28
   4202c:	lsl	r0, r6, #1
   42030:	str	r0, [fp, #-32]	; 0xffffffe0
   42034:	add	r0, sp, #40	; 0x28
   42038:	ldr	r3, [r4]
   4203c:	bl	18c4 <fwrite@plt>
   42040:	ldr	r3, [r4]
   42044:	sub	r0, fp, #32
   42048:	mov	r1, #4
   4204c:	mov	r2, #1
   42050:	bl	18c4 <fwrite@plt>
   42054:	cmp	r5, #0
   42058:	beq	42a48 <WriteType+0xf9c>
   4205c:	cmp	r6, #1
   42060:	blt	4208c <WriteType+0x5e0>
   42064:	sub	r7, fp, #36	; 0x24
   42068:	ldrb	r0, [r5], #1
   4206c:	mov	r1, #2
   42070:	mov	r2, #1
   42074:	strh	r0, [fp, #-36]	; 0xffffffdc
   42078:	mov	r0, r7
   4207c:	ldr	r3, [r4]
   42080:	bl	18c4 <fwrite@plt>
   42084:	subs	r6, r6, #1
   42088:	bne	42068 <WriteType+0x5bc>
   4208c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42090:	asr	r1, r0, #31
   42094:	add	r1, r0, r1, lsr #29
   42098:	bic	r1, r1, #7
   4209c:	subs	r0, r0, r1
   420a0:	beq	42a48 <WriteType+0xf9c>
   420a4:	sub	r5, r0, #8
   420a8:	ldr	r1, [r4]
   420ac:	mov	r0, #0
   420b0:	bl	1a08 <fputc@plt>
   420b4:	adds	r5, r5, #1
   420b8:	bcc	420a8 <WriteType+0x5fc>
   420bc:	b	42a48 <WriteType+0xf9c>
   420c0:	ldr	r0, [r6, #52]	; 0x34
   420c4:	ldr	r9, [r0, #4]
   420c8:	cmp	r9, #0
   420cc:	beq	428b4 <WriteType+0xe08>
   420d0:	ldr	r1, [r6, #40]	; 0x28
   420d4:	ldr	r8, [r0, #8]
   420d8:	mov	r5, #0
   420dc:	mov	r7, #0
   420e0:	str	r6, [sp, #4]
   420e4:	str	r1, [sp, #8]
   420e8:	ldr	r0, [r8, r7, lsl #2]
   420ec:	mov	r6, r5
   420f0:	bl	196c <strlen@plt>
   420f4:	cmp	r0, r5
   420f8:	add	r7, r7, #1
   420fc:	movhi	r5, r0
   42100:	cmp	r9, r7
   42104:	bne	420e8 <WriteType+0x63c>
   42108:	cmp	r0, r6
   4210c:	movhi	r6, r0
   42110:	add	r0, r6, #1
   42114:	mul	r0, r9, r0
   42118:	add	r1, r0, r9
   4211c:	tst	r0, #7
   42120:	add	r5, r5, #1
   42124:	mov	r0, r1
   42128:	bne	42118 <WriteType+0x66c>
   4212c:	movw	r0, #5
   42130:	str	r5, [sp, #24]
   42134:	mov	r1, #4
   42138:	mov	r2, #1
   4213c:	movt	r0, #4
   42140:	str	r0, [sp, #16]
   42144:	add	r0, sp, #16
   42148:	ldr	r3, [r4]
   4214c:	bl	18c4 <fwrite@plt>
   42150:	ldr	r3, [r4]
   42154:	add	r0, sp, #24
   42158:	mov	r1, #4
   4215c:	mov	r2, #1
   42160:	bl	18c4 <fwrite@plt>
   42164:	ldr	r3, [r4]
   42168:	add	r0, sp, #38	; 0x26
   4216c:	mov	r1, #2
   42170:	mov	r2, #1
   42174:	bl	18c4 <fwrite@plt>
   42178:	ldr	r1, [r4]
   4217c:	mov	r0, #0
   42180:	mov	r8, #0
   42184:	bl	1a08 <fputc@plt>
   42188:	ldr	r1, [r4]
   4218c:	mov	r0, #0
   42190:	bl	1a08 <fputc@plt>
   42194:	ldr	r5, [sp, #24]
   42198:	mov	r1, #4
   4219c:	mov	r2, #1
   421a0:	mul	r0, r5, r9
   421a4:	str	r0, [sp, #32]
   421a8:	add	r0, sp, #32
   421ac:	ldr	r3, [r4]
   421b0:	bl	18c4 <fwrite@plt>
   421b4:	mov	r0, r5
   421b8:	mov	r1, #1
   421bc:	str	r5, [sp, #12]
   421c0:	bl	17b0 <calloc@plt>
   421c4:	ldr	r6, [sp, #4]
   421c8:	mov	sl, r0
   421cc:	ldr	r0, [r6, #52]	; 0x34
   421d0:	ldr	r0, [r0, #8]
   421d4:	ldr	r5, [r0, r8, lsl #2]
   421d8:	mov	r0, r5
   421dc:	bl	196c <strlen@plt>
   421e0:	ldr	r3, [r4]
   421e4:	mov	r7, r0
   421e8:	mov	r0, r5
   421ec:	mov	r1, #1
   421f0:	mov	r2, r7
   421f4:	bl	18c4 <fwrite@plt>
   421f8:	ldr	r0, [sp, #12]
   421fc:	ldr	r3, [r4]
   42200:	mov	r1, #1
   42204:	sub	r2, r0, r7
   42208:	mov	r0, sl
   4220c:	bl	18c4 <fwrite@plt>
   42210:	add	r8, r8, #1
   42214:	cmp	r9, r8
   42218:	bne	421cc <WriteType+0x720>
   4221c:	mov	r0, sl
   42220:	bl	181c <free@plt>
   42224:	ldr	r1, [sp, #28]
   42228:	add	r0, sp, #20
   4222c:	mov	r2, r9
   42230:	bl	47184 <SafeMul>
   42234:	ldr	r0, [sp, #20]
   42238:	cmp	r0, #0
   4223c:	beq	42a50 <WriteType+0xfa4>
   42240:	add	r0, sp, #40	; 0x28
   42244:	mov	r1, #0
   42248:	mov	r2, #1
   4224c:	mov	r3, #5
   42250:	mov	r7, #8
   42254:	mov	r6, #14
   42258:	sub	sl, fp, #64	; 0x40
   4225c:	mov	r9, #0
   42260:	orr	r8, r0, #4
   42264:	ldr	r0, [sp, #8]
   42268:	ldr	r5, [r0, r9, lsl #2]
   4226c:	mov	r0, #6
   42270:	str	r2, [fp, #-68]	; 0xffffffbc
   42274:	str	r3, [sp, #68]	; 0x44
   42278:	str	r7, [sp, #64]	; 0x40
   4227c:	str	r1, [sp, #60]	; 0x3c
   42280:	str	r6, [sp, #56]	; 0x38
   42284:	str	r1, [sp, #52]	; 0x34
   42288:	str	r0, [sp, #72]	; 0x48
   4228c:	cmp	r5, #0
   42290:	beq	424b4 <WriteType+0xa08>
   42294:	ldr	r3, [r4]
   42298:	add	r0, sp, #56	; 0x38
   4229c:	mov	r1, #4
   422a0:	mov	r2, #1
   422a4:	bl	18c4 <fwrite@plt>
   422a8:	ldr	r3, [r4]
   422ac:	add	r0, sp, #60	; 0x3c
   422b0:	mov	r1, #4
   422b4:	mov	r2, #1
   422b8:	bl	18c4 <fwrite@plt>
   422bc:	ldr	r0, [r5, #16]
   422c0:	cmp	r0, #0
   422c4:	beq	426c8 <WriteType+0xc1c>
   422c8:	ldr	r0, [r4]
   422cc:	bl	1858 <ftell@plt>
   422d0:	ldr	r3, [r5, #16]
   422d4:	ldr	r2, [r5, #20]
   422d8:	sub	r6, fp, #32
   422dc:	add	r7, sp, #40	; 0x28
   422e0:	str	r0, [sp, #12]
   422e4:	uxtb	r1, r3
   422e8:	cmp	r2, #0
   422ec:	str	r1, [sp, #40]	; 0x28
   422f0:	orrne	r1, r1, #2048	; 0x800
   422f4:	strne	r1, [sp, #40]	; 0x28
   422f8:	ldr	r2, [r5, #24]
   422fc:	cmp	r2, #0
   42300:	orrne	r1, r1, #1024	; 0x400
   42304:	strne	r1, [sp, #40]	; 0x28
   42308:	ldr	r2, [r5, #28]
   4230c:	cmp	r2, #0
   42310:	orrne	r1, r1, #512	; 0x200
   42314:	strne	r1, [sp, #40]	; 0x28
   42318:	cmp	r3, #5
   4231c:	bne	4232c <WriteType+0x880>
   42320:	ldr	r0, [r5, #40]	; 0x28
   42324:	ldr	r0, [r0]
   42328:	str	r0, [sp, #52]	; 0x34
   4232c:	ldr	r0, [r4, #20]
   42330:	cmp	r0, #0
   42334:	beq	42344 <WriteType+0x898>
   42338:	mov	r0, r7
   4233c:	bl	1c30 <Mat_int32Swap>
   42340:	str	r0, [sp, #40]	; 0x28
   42344:	ldr	r3, [r4]
   42348:	add	r0, sp, #72	; 0x48
   4234c:	mov	r1, #4
   42350:	mov	r2, #1
   42354:	bl	18c4 <fwrite@plt>
   42358:	ldr	r3, [r4]
   4235c:	add	r0, sp, #64	; 0x40
   42360:	mov	r1, #4
   42364:	mov	r2, #1
   42368:	bl	18c4 <fwrite@plt>
   4236c:	ldr	r3, [r4]
   42370:	mov	r0, r7
   42374:	mov	r1, #4
   42378:	mov	r2, #1
   4237c:	bl	18c4 <fwrite@plt>
   42380:	ldr	r3, [r4]
   42384:	add	r0, sp, #52	; 0x34
   42388:	mov	r1, #4
   4238c:	mov	r2, #1
   42390:	bl	18c4 <fwrite@plt>
   42394:	ldr	r0, [r5, #4]
   42398:	mov	r1, #4
   4239c:	mov	r2, #1
   423a0:	lsl	r0, r0, #2
   423a4:	str	r0, [fp, #-32]	; 0xffffffe0
   423a8:	add	r0, sp, #68	; 0x44
   423ac:	ldr	r3, [r4]
   423b0:	bl	18c4 <fwrite@plt>
   423b4:	ldr	r3, [r4]
   423b8:	mov	r0, r6
   423bc:	mov	r1, #4
   423c0:	mov	r2, #1
   423c4:	bl	18c4 <fwrite@plt>
   423c8:	ldr	r0, [r5, #4]
   423cc:	sub	r6, fp, #36	; 0x24
   423d0:	cmp	r0, #1
   423d4:	blt	4240c <WriteType+0x960>
   423d8:	mov	r7, #0
   423dc:	ldr	r0, [r5, #32]
   423e0:	mov	r1, #4
   423e4:	mov	r2, #1
   423e8:	ldr	r0, [r0, r7, lsl #2]
   423ec:	str	r0, [fp, #-36]	; 0xffffffdc
   423f0:	mov	r0, r6
   423f4:	ldr	r3, [r4]
   423f8:	bl	18c4 <fwrite@plt>
   423fc:	ldr	r0, [r5, #4]
   42400:	add	r7, r7, #1
   42404:	cmp	r7, r0
   42408:	blt	423dc <WriteType+0x930>
   4240c:	tst	r0, #1
   42410:	beq	42428 <WriteType+0x97c>
   42414:	ldr	r3, [r4]
   42418:	add	r0, sp, #60	; 0x3c
   4241c:	mov	r1, #4
   42420:	mov	r2, #1
   42424:	bl	18c4 <fwrite@plt>
   42428:	ldr	r3, [r4]
   4242c:	sub	r0, fp, #68	; 0x44
   42430:	mov	r1, #4
   42434:	mov	r2, #1
   42438:	bl	18c4 <fwrite@plt>
   4243c:	ldr	r3, [r4]
   42440:	add	r0, sp, #60	; 0x3c
   42444:	mov	r1, #4
   42448:	mov	r2, #1
   4244c:	bl	18c4 <fwrite@plt>
   42450:	mov	r0, r4
   42454:	mov	r1, r5
   42458:	bl	41aac <WriteType>
   4245c:	ldr	r0, [r4]
   42460:	bl	1858 <ftell@plt>
   42464:	mov	r5, r0
   42468:	ldr	r0, [sp, #12]
   4246c:	cmn	r0, #1
   42470:	cmnne	r5, #1
   42474:	beq	42678 <WriteType+0xbcc>
   42478:	sub	r0, r5, r0
   4247c:	mvn	r1, #3
   42480:	mov	r2, #1
   42484:	str	r0, [fp, #-32]	; 0xffffffe0
   42488:	sub	r1, r1, r0
   4248c:	ldr	r0, [r4]
   42490:	bl	1a68 <fseek@plt>
   42494:	ldr	r3, [r4]
   42498:	sub	r0, fp, #32
   4249c:	mov	r1, #4
   424a0:	mov	r2, #1
   424a4:	bl	18c4 <fwrite@plt>
   424a8:	ldr	r0, [r4]
   424ac:	mov	r1, r5
   424b0:	b	426c0 <WriteType+0xc14>
   424b4:	str	r2, [fp, #-36]	; 0xffffffdc
   424b8:	str	r0, [fp, #-44]	; 0xffffffd4
   424bc:	str	r7, [fp, #-52]	; 0xffffffcc
   424c0:	str	r1, [sp, #44]	; 0x2c
   424c4:	str	r1, [sp, #40]	; 0x28
   424c8:	str	r1, [fp, #-56]	; 0xffffffc8
   424cc:	str	r6, [fp, #-40]	; 0xffffffd8
   424d0:	str	r3, [fp, #-48]	; 0xffffffd0
   424d4:	sub	r0, fp, #40	; 0x28
   424d8:	mov	r1, #4
   424dc:	mov	r2, #1
   424e0:	mov	r7, #6
   424e4:	ldr	r3, [r4]
   424e8:	bl	18c4 <fwrite@plt>
   424ec:	ldr	r3, [r4]
   424f0:	sub	r6, fp, #56	; 0x38
   424f4:	mov	r1, #4
   424f8:	mov	r2, #1
   424fc:	mov	r0, r6
   42500:	bl	18c4 <fwrite@plt>
   42504:	ldr	r0, [r4]
   42508:	bl	1858 <ftell@plt>
   4250c:	str	r7, [fp, #-32]	; 0xffffffe0
   42510:	mov	r5, r0
   42514:	sub	r7, fp, #32
   42518:	ldr	r0, [r4, #20]
   4251c:	cmp	r0, #0
   42520:	beq	42530 <WriteType+0xa84>
   42524:	mov	r0, r7
   42528:	bl	1c30 <Mat_int32Swap>
   4252c:	str	r0, [fp, #-32]	; 0xffffffe0
   42530:	ldr	r3, [r4]
   42534:	sub	r0, fp, #44	; 0x2c
   42538:	mov	r1, #4
   4253c:	mov	r2, #1
   42540:	bl	18c4 <fwrite@plt>
   42544:	ldr	r3, [r4]
   42548:	sub	r0, fp, #52	; 0x34
   4254c:	mov	r1, #4
   42550:	mov	r2, #1
   42554:	bl	18c4 <fwrite@plt>
   42558:	ldr	r3, [r4]
   4255c:	mov	r0, r7
   42560:	mov	r1, #4
   42564:	mov	r2, #1
   42568:	bl	18c4 <fwrite@plt>
   4256c:	ldr	r3, [r4]
   42570:	mov	r0, r6
   42574:	mov	r1, #4
   42578:	mov	r2, #1
   4257c:	bl	18c4 <fwrite@plt>
   42580:	mov	r0, #8
   42584:	mov	r1, #4
   42588:	mov	r2, #1
   4258c:	str	r0, [fp, #-60]	; 0xffffffc4
   42590:	sub	r0, fp, #48	; 0x30
   42594:	ldr	r3, [r4]
   42598:	bl	18c4 <fwrite@plt>
   4259c:	ldr	r3, [r4]
   425a0:	sub	r0, fp, #60	; 0x3c
   425a4:	mov	r1, #4
   425a8:	mov	r2, #1
   425ac:	bl	18c4 <fwrite@plt>
   425b0:	mov	r7, #0
   425b4:	mov	r0, sl
   425b8:	mov	r1, #4
   425bc:	mov	r2, #1
   425c0:	str	r7, [fp, #-64]	; 0xffffffc0
   425c4:	ldr	r3, [r4]
   425c8:	bl	18c4 <fwrite@plt>
   425cc:	ldr	r0, [r8, r7, lsl #2]
   425d0:	mov	r1, #4
   425d4:	mov	r2, #1
   425d8:	str	r0, [fp, #-64]	; 0xffffffc0
   425dc:	mov	r0, sl
   425e0:	ldr	r3, [r4]
   425e4:	bl	18c4 <fwrite@plt>
   425e8:	add	r7, r7, #1
   425ec:	cmp	r7, #1
   425f0:	bne	425cc <WriteType+0xb20>
   425f4:	ldr	r3, [r4]
   425f8:	sub	r0, fp, #36	; 0x24
   425fc:	mov	r1, #4
   42600:	mov	r2, #1
   42604:	bl	18c4 <fwrite@plt>
   42608:	ldr	r3, [r4]
   4260c:	mov	r0, r6
   42610:	mov	r1, #4
   42614:	mov	r2, #1
   42618:	bl	18c4 <fwrite@plt>
   4261c:	mov	r0, r4
   42620:	mov	r1, #0
   42624:	mov	r2, #0
   42628:	mov	r3, #9
   4262c:	bl	45518 <WriteData>
   42630:	asr	r1, r0, #31
   42634:	str	r0, [fp, #-60]	; 0xffffffc4
   42638:	add	r1, r0, r1, lsr #29
   4263c:	bic	r1, r1, #7
   42640:	subs	r0, r0, r1
   42644:	beq	42660 <WriteType+0xbb4>
   42648:	sub	r7, r0, #8
   4264c:	ldr	r1, [r4]
   42650:	mov	r0, #0
   42654:	bl	1a08 <fputc@plt>
   42658:	adds	r7, r7, #1
   4265c:	bcc	4264c <WriteType+0xba0>
   42660:	ldr	r0, [r4]
   42664:	bl	1858 <ftell@plt>
   42668:	cmn	r5, #1
   4266c:	movne	r7, r0
   42670:	cmnne	r0, #1
   42674:	bne	42688 <WriteType+0xbdc>
   42678:	ldr	r0, [pc, #992]	; 42a60 <WriteType+0xfb4>
   4267c:	add	r0, pc, r0
   42680:	bl	19cc <Mat_Critical@plt>
   42684:	b	426c8 <WriteType+0xc1c>
   42688:	sub	r0, r7, r5
   4268c:	mvn	r1, #3
   42690:	mov	r2, #1
   42694:	str	r0, [fp, #-60]	; 0xffffffc4
   42698:	sub	r1, r1, r0
   4269c:	ldr	r0, [r4]
   426a0:	bl	1a68 <fseek@plt>
   426a4:	ldr	r3, [r4]
   426a8:	sub	r0, fp, #60	; 0x3c
   426ac:	mov	r1, #4
   426b0:	mov	r2, #1
   426b4:	bl	18c4 <fwrite@plt>
   426b8:	ldr	r0, [r4]
   426bc:	mov	r1, r7
   426c0:	mov	r2, #0
   426c4:	bl	1a68 <fseek@plt>
   426c8:	ldr	r0, [sp, #20]
   426cc:	add	r9, r9, #1
   426d0:	mov	r1, #0
   426d4:	mov	r2, #1
   426d8:	mov	r3, #5
   426dc:	mov	r7, #8
   426e0:	mov	r6, #14
   426e4:	cmp	r9, r0
   426e8:	bcc	42264 <WriteType+0x7b8>
   426ec:	b	42a50 <WriteType+0xfa4>
   426f0:	ldr	r5, [r6, #40]	; 0x28
   426f4:	mov	r0, r4
   426f8:	mov	r3, #5
   426fc:	mov	r8, r6
   42700:	ldmib	r5, {r1, r2}
   42704:	bl	45518 <WriteData>
   42708:	asr	r1, r0, #31
   4270c:	str	r0, [sp, #32]
   42710:	add	r1, r0, r1, lsr #29
   42714:	bic	r1, r1, #7
   42718:	subs	r0, r0, r1
   4271c:	beq	42738 <WriteType+0xc8c>
   42720:	sub	r6, r0, #8
   42724:	ldr	r1, [r4]
   42728:	mov	r0, #0
   4272c:	bl	1a08 <fputc@plt>
   42730:	adds	r6, r6, #1
   42734:	bcc	42724 <WriteType+0xc78>
   42738:	ldr	r1, [r5, #12]
   4273c:	ldr	r2, [r5, #16]
   42740:	mov	r0, r4
   42744:	mov	r3, #5
   42748:	bl	45518 <WriteData>
   4274c:	asr	r1, r0, #31
   42750:	str	r0, [sp, #32]
   42754:	add	r1, r0, r1, lsr #29
   42758:	bic	r1, r1, #7
   4275c:	subs	r0, r0, r1
   42760:	beq	4277c <WriteType+0xcd0>
   42764:	sub	r6, r0, #8
   42768:	ldr	r1, [r4]
   4276c:	mov	r0, #0
   42770:	bl	1a08 <fputc@plt>
   42774:	adds	r6, r6, #1
   42778:	bcc	42768 <WriteType+0xcbc>
   4277c:	ldr	r0, [r8, #20]
   42780:	mov	r1, r8
   42784:	cmp	r0, #0
   42788:	beq	4293c <WriteType+0xe90>
   4278c:	ldr	r6, [r5, #24]
   42790:	ldr	r3, [r1, #8]
   42794:	ldr	r2, [r5, #20]
   42798:	mov	r0, r4
   4279c:	ldr	r1, [r6]
   427a0:	bl	45518 <WriteData>
   427a4:	asr	r1, r0, #31
   427a8:	str	r0, [sp, #32]
   427ac:	add	r1, r0, r1, lsr #29
   427b0:	bic	r1, r1, #7
   427b4:	subs	r0, r0, r1
   427b8:	beq	427d4 <WriteType+0xd28>
   427bc:	sub	r7, r0, #8
   427c0:	ldr	r1, [r4]
   427c4:	mov	r0, #0
   427c8:	bl	1a08 <fputc@plt>
   427cc:	adds	r7, r7, #1
   427d0:	bcc	427c0 <WriteType+0xd14>
   427d4:	ldr	r3, [r8, #8]
   427d8:	ldr	r2, [r5, #20]
   427dc:	ldr	r1, [r6, #4]
   427e0:	mov	r0, r4
   427e4:	bl	45518 <WriteData>
   427e8:	asr	r1, r0, #31
   427ec:	str	r0, [sp, #32]
   427f0:	add	r1, r0, r1, lsr #29
   427f4:	bic	r1, r1, #7
   427f8:	subs	r0, r0, r1
   427fc:	beq	42a50 <WriteType+0xfa4>
   42800:	sub	r5, r0, #8
   42804:	ldr	r1, [r4]
   42808:	mov	r0, #0
   4280c:	bl	1a08 <fputc@plt>
   42810:	adds	r5, r5, #1
   42814:	bcc	42804 <WriteType+0xd58>
   42818:	b	42a50 <WriteType+0xfa4>
   4281c:	cmp	r0, #16
   42820:	beq	429c8 <WriteType+0xf1c>
   42824:	cmp	r0, #4
   42828:	bne	42a48 <WriteType+0xf9c>
   4282c:	lsl	r0, r6, #1
   42830:	mov	r1, #4
   42834:	mov	r2, #1
   42838:	str	r0, [fp, #-32]	; 0xffffffe0
   4283c:	add	r0, sp, #40	; 0x28
   42840:	ldr	r3, [r4]
   42844:	bl	18c4 <fwrite@plt>
   42848:	ldr	r3, [r4]
   4284c:	sub	r0, fp, #32
   42850:	mov	r1, #4
   42854:	mov	r2, #1
   42858:	bl	18c4 <fwrite@plt>
   4285c:	cmp	r5, #0
   42860:	beq	42880 <WriteType+0xdd4>
   42864:	cmp	r6, #1
   42868:	blt	42880 <WriteType+0xdd4>
   4286c:	ldr	r3, [r4]
   42870:	mov	r0, r5
   42874:	mov	r1, #2
   42878:	mov	r2, r6
   4287c:	bl	18c4 <fwrite@plt>
   42880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42884:	asr	r1, r0, #31
   42888:	add	r1, r0, r1, lsr #29
   4288c:	bic	r1, r1, #7
   42890:	subs	r0, r0, r1
   42894:	beq	42a48 <WriteType+0xf9c>
   42898:	sub	r5, r0, #8
   4289c:	ldr	r1, [r4]
   428a0:	mov	r0, #0
   428a4:	bl	1a08 <fputc@plt>
   428a8:	adds	r5, r5, #1
   428ac:	bcc	4289c <WriteType+0xdf0>
   428b0:	b	42a48 <WriteType+0xf9c>
   428b4:	movw	r0, #5
   428b8:	mov	r1, #4
   428bc:	mov	r2, #1
   428c0:	mov	r5, #1
   428c4:	movt	r0, #4
   428c8:	str	r0, [sp, #16]
   428cc:	add	r0, sp, #16
   428d0:	ldr	r3, [r4]
   428d4:	bl	18c4 <fwrite@plt>
   428d8:	str	r5, [sp, #24]
   428dc:	add	r0, sp, #24
   428e0:	mov	r1, #4
   428e4:	mov	r2, #1
   428e8:	ldr	r3, [r4]
   428ec:	bl	18c4 <fwrite@plt>
   428f0:	ldr	r3, [r4]
   428f4:	add	r0, sp, #38	; 0x26
   428f8:	mov	r1, #2
   428fc:	mov	r2, #1
   42900:	bl	18c4 <fwrite@plt>
   42904:	ldr	r1, [r4]
   42908:	mov	r0, #0
   4290c:	mov	r5, #0
   42910:	bl	1a08 <fputc@plt>
   42914:	ldr	r1, [r4]
   42918:	mov	r0, #0
   4291c:	bl	1a08 <fputc@plt>
   42920:	str	r5, [sp, #32]
   42924:	add	r0, sp, #32
   42928:	mov	r1, #4
   4292c:	mov	r2, #1
   42930:	ldr	r3, [r4]
   42934:	bl	18c4 <fwrite@plt>
   42938:	b	42a50 <WriteType+0xfa4>
   4293c:	ldr	r3, [r1, #8]
   42940:	ldr	r2, [r5, #20]
   42944:	ldr	r1, [r5, #24]
   42948:	mov	r0, r4
   4294c:	bl	45518 <WriteData>
   42950:	asr	r1, r0, #31
   42954:	str	r0, [sp, #32]
   42958:	add	r1, r0, r1, lsr #29
   4295c:	bic	r1, r1, #7
   42960:	subs	r0, r0, r1
   42964:	beq	42a50 <WriteType+0xfa4>
   42968:	sub	r5, r0, #8
   4296c:	ldr	r1, [r4]
   42970:	mov	r0, #0
   42974:	bl	1a08 <fputc@plt>
   42978:	adds	r5, r5, #1
   4297c:	bcc	4296c <WriteType+0xec0>
   42980:	b	42a50 <WriteType+0xfa4>
   42984:	cmp	r0, #0
   42988:	bne	42a48 <WriteType+0xf9c>
   4298c:	mov	r0, #4
   42990:	mov	r1, #4
   42994:	mov	r2, #1
   42998:	str	r0, [sp, #40]	; 0x28
   4299c:	lsl	r0, r6, #1
   429a0:	str	r0, [fp, #-32]	; 0xffffffe0
   429a4:	add	r0, sp, #40	; 0x28
   429a8:	ldr	r3, [r4]
   429ac:	bl	18c4 <fwrite@plt>
   429b0:	ldr	r3, [r4]
   429b4:	sub	r0, fp, #32
   429b8:	mov	r1, #4
   429bc:	mov	r2, #1
   429c0:	bl	18c4 <fwrite@plt>
   429c4:	b	42a48 <WriteType+0xf9c>
   429c8:	str	r6, [fp, #-32]	; 0xffffffe0
   429cc:	add	r0, sp, #40	; 0x28
   429d0:	mov	r1, #4
   429d4:	mov	r2, #1
   429d8:	ldr	r3, [r4]
   429dc:	bl	18c4 <fwrite@plt>
   429e0:	ldr	r3, [r4]
   429e4:	sub	r0, fp, #32
   429e8:	mov	r1, #4
   429ec:	mov	r2, #1
   429f0:	bl	18c4 <fwrite@plt>
   429f4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   429f8:	cmp	r5, #0
   429fc:	beq	42a1c <WriteType+0xf70>
   42a00:	cmp	r6, #1
   42a04:	blt	42a1c <WriteType+0xf70>
   42a08:	ldr	r3, [r4]
   42a0c:	mov	r0, r5
   42a10:	mov	r1, #1
   42a14:	mov	r2, r6
   42a18:	bl	18c4 <fwrite@plt>
   42a1c:	asr	r0, r6, #31
   42a20:	add	r0, r6, r0, lsr #29
   42a24:	bic	r0, r0, #7
   42a28:	subs	r0, r6, r0
   42a2c:	beq	42a48 <WriteType+0xf9c>
   42a30:	sub	r5, r0, #8
   42a34:	ldr	r1, [r4]
   42a38:	mov	r0, #0
   42a3c:	bl	1a08 <fputc@plt>
   42a40:	adds	r5, r5, #1
   42a44:	bcc	42a34 <WriteType+0xf88>
   42a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42a4c:	str	r0, [sp, #32]
   42a50:	sub	sp, fp, #28
   42a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42a58:	.word	0x0000a464
   42a5c:	.word	0x00009bd4
   42a60:	.word	0x000094b0
   42a64:	.word	0xe320f000

00042a68 <WriteCompressedType>:
   42a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42a6c:	add	fp, sp, #28
   42a70:	sub	sp, sp, #44	; 0x2c
   42a74:	sub	sp, sp, #10240	; 0x2800
   42a78:	add	r5, sp, #40	; 0x28
   42a7c:	mov	r4, r2
   42a80:	mov	r7, r1
   42a84:	mov	sl, r0
   42a88:	mov	r1, #0
   42a8c:	mov	r2, #2048	; 0x800
   42a90:	mov	r6, #0
   42a94:	mov	r0, r5
   42a98:	bl	19a8 <memset@plt>
   42a9c:	mov	r0, #1
   42aa0:	str	r0, [sp, #36]	; 0x24
   42aa4:	ldr	r0, [r7, #16]
   42aa8:	cmp	r0, #0
   42aac:	beq	42c98 <WriteCompressedType+0x230>
   42ab0:	add	r1, sp, #36	; 0x24
   42ab4:	mov	r0, r7
   42ab8:	bl	47128 <SafeMulDims>
   42abc:	ldr	r0, [r7, #16]
   42ac0:	sub	r1, r0, #6
   42ac4:	cmp	r1, #10
   42ac8:	bcs	42b30 <WriteCompressedType+0xc8>
   42acc:	ldr	r0, [r7, #20]
   42ad0:	ldr	r2, [r7, #40]	; 0x28
   42ad4:	cmp	r0, #0
   42ad8:	beq	42c7c <WriteCompressedType+0x214>
   42adc:	ldr	r5, [pc, #2460]	; 43480 <WriteCompressedType+0xa18>
   42ae0:	cmp	r2, #0
   42ae4:	ldr	r0, [r7, #8]
   42ae8:	ldr	r3, [sp, #36]	; 0x24
   42aec:	mov	r1, r4
   42af0:	add	r5, pc, r5
   42af4:	movne	r5, r2
   42af8:	ldr	r2, [r5]
   42afc:	str	r0, [sp]
   42b00:	mov	r0, sl
   42b04:	bl	45870 <WriteCompressedData>
   42b08:	mov	r6, r0
   42b0c:	ldr	r0, [r7, #8]
   42b10:	ldr	r2, [r5, #4]
   42b14:	ldr	r3, [sp, #36]	; 0x24
   42b18:	mov	r1, r4
   42b1c:	str	r0, [sp]
   42b20:	mov	r0, sl
   42b24:	bl	45870 <WriteCompressedData>
   42b28:	add	r6, r0, r6
   42b2c:	b	42c98 <WriteCompressedType+0x230>
   42b30:	sub	r0, r0, #1
   42b34:	cmp	r0, #4
   42b38:	bhi	42c98 <WriteCompressedType+0x230>
   42b3c:	add	r1, pc, #4
   42b40:	ldr	r0, [r1, r0, lsl #2]
   42b44:	add	pc, r1, r0
   42b48:	.word	0x00000014
   42b4c:	.word	0x0000015c
   42b50:	.word	0x00000150
   42b54:	.word	0x000005dc
   42b58:	.word	0x0000077c
   42b5c:	ldr	r0, [r7]
   42b60:	cmp	r0, #0
   42b64:	beq	42c98 <WriteCompressedType+0x230>
   42b68:	ldr	r1, [r7, #40]	; 0x28
   42b6c:	cmp	r1, #0
   42b70:	str	r1, [sp, #28]
   42b74:	ldrne	r1, [r7, #12]
   42b78:	cmpne	r1, #0
   42b7c:	beq	42c98 <WriteCompressedType+0x230>
   42b80:	udiv	r9, r0, r1
   42b84:	cmp	r1, r0
   42b88:	str	r9, [sp, #36]	; 0x24
   42b8c:	bhi	42c98 <WriteCompressedType+0x230>
   42b90:	mov	r5, #0
   42b94:	mov	r8, #2048	; 0x800
   42b98:	sub	r7, fp, #2080	; 0x820
   42b9c:	ldr	r0, [sp, #28]
   42ba0:	sub	lr, fp, #4096	; 0x1000
   42ba4:	mov	r1, #0
   42ba8:	mov	r2, #2048	; 0x800
   42bac:	ldr	r6, [r0, r5, lsl #2]
   42bb0:	sub	r0, lr, #32
   42bb4:	bl	19a8 <memset@plt>
   42bb8:	cmp	r4, #0
   42bbc:	beq	42c68 <WriteCompressedType+0x200>
   42bc0:	cmp	sl, #0
   42bc4:	cmpne	r6, #0
   42bc8:	beq	42c68 <WriteCompressedType+0x200>
   42bcc:	add	lr, sp, #4096	; 0x1000
   42bd0:	mov	r1, #14
   42bd4:	add	r0, lr, #44	; 0x2c
   42bd8:	str	r1, [r0, #2044]	; 0x7fc
   42bdc:	ldr	r0, [r6, #16]
   42be0:	cmp	r0, #0
   42be4:	beq	42bf8 <WriteCompressedType+0x190>
   42be8:	mov	r0, r6
   42bec:	bl	455bc <GetTypeBufSize>
   42bf0:	add	r0, r0, #24
   42bf4:	b	42bfc <WriteCompressedType+0x194>
   42bf8:	mov	r0, #0
   42bfc:	add	lr, sp, #4096	; 0x1000
   42c00:	add	r1, lr, #44	; 0x2c
   42c04:	sub	lr, fp, #4096	; 0x1000
   42c08:	str	r0, [r1, #2048]	; 0x800
   42c0c:	sub	r0, lr, #32
   42c10:	str	r0, [r4]
   42c14:	mov	r0, #8
   42c18:	str	r0, [r4, #4]
   42c1c:	mov	r0, r4
   42c20:	mov	r1, #0
   42c24:	str	r7, [r4, #12]
   42c28:	str	r8, [r4, #16]
   42c2c:	bl	18ac <deflate@plt>
   42c30:	ldr	r0, [r4, #16]
   42c34:	ldr	r3, [sl]
   42c38:	mov	r1, #1
   42c3c:	rsb	r2, r0, #2048	; 0x800
   42c40:	mov	r0, r7
   42c44:	bl	18c4 <fwrite@plt>
   42c48:	ldr	r0, [r4, #16]
   42c4c:	cmp	r0, #0
   42c50:	beq	42c1c <WriteCompressedType+0x1b4>
   42c54:	mov	r0, sl
   42c58:	mov	r1, r6
   42c5c:	mov	r2, r4
   42c60:	bl	459ec <WriteCompressedTypeArrayFlags>
   42c64:	ldr	r9, [sp, #36]	; 0x24
   42c68:	add	r5, r5, #1
   42c6c:	mov	r6, #0
   42c70:	cmp	r5, r9
   42c74:	bcc	42b9c <WriteCompressedType+0x134>
   42c78:	b	42c98 <WriteCompressedType+0x230>
   42c7c:	ldr	r0, [r7, #8]
   42c80:	ldr	r3, [sp, #36]	; 0x24
   42c84:	mov	r1, r4
   42c88:	str	r0, [sp]
   42c8c:	mov	r0, sl
   42c90:	bl	45870 <WriteCompressedData>
   42c94:	mov	r6, r0
   42c98:	mov	r0, r6
   42c9c:	sub	sp, fp, #28
   42ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42ca4:	ldr	r0, [r7, #52]	; 0x34
   42ca8:	ldr	r9, [r0, #4]
   42cac:	cmp	r9, #0
   42cb0:	beq	43354 <WriteCompressedType+0x8ec>
   42cb4:	ldr	r1, [r7, #40]	; 0x28
   42cb8:	ldr	r8, [r0, #8]
   42cbc:	str	r7, [sp, #8]
   42cc0:	mov	r7, #0
   42cc4:	mov	r6, #0
   42cc8:	str	r1, [sp, #4]
   42ccc:	ldr	r0, [r8, r6, lsl #2]
   42cd0:	mov	r5, r7
   42cd4:	bl	196c <strlen@plt>
   42cd8:	cmp	r0, r7
   42cdc:	add	r6, r6, #1
   42ce0:	movhi	r7, r0
   42ce4:	cmp	r9, r6
   42ce8:	bne	42ccc <WriteCompressedType+0x264>
   42cec:	cmp	r0, r5
   42cf0:	mov	r1, r5
   42cf4:	mov	r3, #0
   42cf8:	movhi	r1, r0
   42cfc:	add	r1, r1, #1
   42d00:	mul	r2, r9, r1
   42d04:	add	r1, r3, r9
   42d08:	add	r3, r2, r3
   42d0c:	add	r7, r7, #1
   42d10:	tst	r3, #7
   42d14:	mov	r3, r1
   42d18:	bne	42d04 <WriteCompressedType+0x29c>
   42d1c:	cmp	r0, r5
   42d20:	mov	r2, #1
   42d24:	str	r9, [sp, #16]
   42d28:	str	r7, [sp, #28]
   42d2c:	movhi	r5, r0
   42d30:	str	r2, [sp, #48]	; 0x30
   42d34:	movw	r2, #5
   42d38:	str	r7, [sp, #44]	; 0x2c
   42d3c:	mla	r0, r9, r5, r1
   42d40:	movt	r2, #4
   42d44:	mov	r1, #1
   42d48:	str	r2, [sp, #40]	; 0x28
   42d4c:	str	r0, [sp, #52]	; 0x34
   42d50:	mov	r0, r7
   42d54:	bl	17b0 <calloc@plt>
   42d58:	add	lr, sp, #2048	; 0x800
   42d5c:	str	r0, [sp, #12]
   42d60:	add	r1, sp, #40	; 0x28
   42d64:	mov	r0, #16
   42d68:	mov	r6, #0
   42d6c:	mov	r5, #2048	; 0x800
   42d70:	add	r8, lr, #40	; 0x28
   42d74:	str	r1, [r4]
   42d78:	str	r0, [r4, #4]
   42d7c:	mov	r0, r4
   42d80:	mov	r1, #0
   42d84:	str	r8, [r4, #12]
   42d88:	str	r5, [r4, #16]
   42d8c:	bl	18ac <deflate@plt>
   42d90:	ldr	r0, [r4, #16]
   42d94:	ldr	r3, [sl]
   42d98:	mov	r1, #1
   42d9c:	rsb	r2, r0, #2048	; 0x800
   42da0:	mov	r0, r8
   42da4:	bl	18c4 <fwrite@plt>
   42da8:	add	r6, r0, r6
   42dac:	ldr	r0, [r4, #16]
   42db0:	cmp	r0, #0
   42db4:	beq	42d7c <WriteCompressedType+0x314>
   42db8:	ldr	r7, [sp, #12]
   42dbc:	mov	r5, #0
   42dc0:	mov	r9, #2048	; 0x800
   42dc4:	ldr	r0, [sp, #8]
   42dc8:	ldr	r0, [r0, #52]	; 0x34
   42dcc:	str	r0, [sp, #24]
   42dd0:	ldr	r0, [r0, #8]
   42dd4:	ldr	r0, [r0, r5, lsl #2]
   42dd8:	bl	196c <strlen@plt>
   42ddc:	ldr	r2, [sp, #28]
   42de0:	str	r0, [sp, #20]
   42de4:	mov	r0, r7
   42de8:	mov	r1, #0
   42dec:	bl	19a8 <memset@plt>
   42df0:	ldr	r0, [sp, #24]
   42df4:	ldr	r2, [sp, #20]
   42df8:	ldr	r0, [r0, #8]
   42dfc:	ldr	r1, [r0, r5, lsl #2]
   42e00:	mov	r0, r7
   42e04:	bl	1834 <memcpy@plt>
   42e08:	ldr	r0, [sp, #28]
   42e0c:	str	r7, [r4]
   42e10:	str	r0, [r4, #4]
   42e14:	mov	r0, r4
   42e18:	mov	r1, #0
   42e1c:	str	r8, [r4, #12]
   42e20:	str	r9, [r4, #16]
   42e24:	bl	18ac <deflate@plt>
   42e28:	ldr	r0, [r4, #16]
   42e2c:	ldr	r3, [sl]
   42e30:	mov	r1, #1
   42e34:	rsb	r2, r0, #2048	; 0x800
   42e38:	mov	r0, r8
   42e3c:	bl	18c4 <fwrite@plt>
   42e40:	add	r6, r0, r6
   42e44:	ldr	r0, [r4, #16]
   42e48:	cmp	r0, #0
   42e4c:	beq	42e14 <WriteCompressedType+0x3ac>
   42e50:	ldr	r0, [sp, #16]
   42e54:	add	r5, r5, #1
   42e58:	cmp	r5, r0
   42e5c:	bne	42dc4 <WriteCompressedType+0x35c>
   42e60:	ldr	r0, [sp, #12]
   42e64:	bl	181c <free@plt>
   42e68:	ldr	r1, [sp, #36]	; 0x24
   42e6c:	ldr	r2, [sp, #16]
   42e70:	add	r0, sp, #32
   42e74:	bl	47184 <SafeMul>
   42e78:	ldr	r0, [sp, #32]
   42e7c:	cmp	r0, #0
   42e80:	beq	42c98 <WriteCompressedType+0x230>
   42e84:	sub	lr, fp, #4096	; 0x1000
   42e88:	mov	r8, #2048	; 0x800
   42e8c:	sub	r7, fp, #2080	; 0x820
   42e90:	mov	r5, #0
   42e94:	sub	r0, lr, #32
   42e98:	add	r1, r0, #8
   42e9c:	add	r0, r0, #24
   42ea0:	str	r1, [sp, #24]
   42ea4:	str	r0, [sp, #20]
   42ea8:	ldr	r0, [sp, #4]
   42eac:	add	lr, sp, #4096	; 0x1000
   42eb0:	mov	r1, #0
   42eb4:	mov	r2, #2048	; 0x800
   42eb8:	ldr	r9, [r0, r5, lsl #2]
   42ebc:	add	r0, lr, #40	; 0x28
   42ec0:	bl	19a8 <memset@plt>
   42ec4:	cmp	r9, #0
   42ec8:	str	r5, [sp, #28]
   42ecc:	beq	42f78 <WriteCompressedType+0x510>
   42ed0:	add	lr, sp, #4096	; 0x1000
   42ed4:	mov	r1, #14
   42ed8:	mov	r5, r9
   42edc:	add	r0, lr, #44	; 0x2c
   42ee0:	str	r1, [r0, #-4]
   42ee4:	ldr	r0, [r9, #16]
   42ee8:	mov	r9, #0
   42eec:	cmp	r0, #0
   42ef0:	mov	r0, #0
   42ef4:	beq	42f04 <WriteCompressedType+0x49c>
   42ef8:	mov	r0, r5
   42efc:	bl	455bc <GetTypeBufSize>
   42f00:	add	r0, r0, #24
   42f04:	add	lr, sp, #4096	; 0x1000
   42f08:	add	r1, lr, #44	; 0x2c
   42f0c:	add	lr, sp, #4096	; 0x1000
   42f10:	str	r0, [r1]
   42f14:	add	r0, lr, #40	; 0x28
   42f18:	str	r0, [r4]
   42f1c:	mov	r0, #8
   42f20:	str	r0, [r4, #4]
   42f24:	mov	r0, r4
   42f28:	mov	r1, #0
   42f2c:	str	r7, [r4, #12]
   42f30:	str	r8, [r4, #16]
   42f34:	bl	18ac <deflate@plt>
   42f38:	ldr	r0, [r4, #16]
   42f3c:	ldr	r3, [sl]
   42f40:	mov	r1, #1
   42f44:	rsb	r2, r0, #2048	; 0x800
   42f48:	mov	r0, r7
   42f4c:	bl	18c4 <fwrite@plt>
   42f50:	add	r9, r0, r9
   42f54:	ldr	r0, [r4, #16]
   42f58:	cmp	r0, #0
   42f5c:	beq	42f24 <WriteCompressedType+0x4bc>
   42f60:	mov	r0, sl
   42f64:	mov	r1, r5
   42f68:	mov	r2, r4
   42f6c:	bl	459ec <WriteCompressedTypeArrayFlags>
   42f70:	add	r0, r0, r9
   42f74:	b	43108 <WriteCompressedType+0x6a0>
   42f78:	ldr	r0, [sp, #24]
   42f7c:	mov	r1, #0
   42f80:	movw	r2, #2040	; 0x7f8
   42f84:	mov	r5, #0
   42f88:	bl	19a8 <memset@plt>
   42f8c:	add	lr, sp, #4096	; 0x1000
   42f90:	mov	r1, #14
   42f94:	add	r0, lr, #44	; 0x2c
   42f98:	sub	lr, fp, #4096	; 0x1000
   42f9c:	str	r1, [r0, #2044]	; 0x7fc
   42fa0:	mov	r1, #48	; 0x30
   42fa4:	str	r1, [r0, #2048]	; 0x800
   42fa8:	sub	r0, lr, #32
   42fac:	str	r0, [r4]
   42fb0:	mov	r0, #8
   42fb4:	str	r0, [r4, #4]
   42fb8:	mov	r0, r4
   42fbc:	mov	r1, #0
   42fc0:	str	r7, [r4, #12]
   42fc4:	str	r8, [r4, #16]
   42fc8:	bl	18ac <deflate@plt>
   42fcc:	ldr	r0, [r4, #16]
   42fd0:	ldr	r3, [sl]
   42fd4:	mov	r1, #1
   42fd8:	rsb	r2, r0, #2048	; 0x800
   42fdc:	mov	r0, r7
   42fe0:	bl	18c4 <fwrite@plt>
   42fe4:	add	r5, r0, r5
   42fe8:	ldr	r0, [r4, #16]
   42fec:	cmp	r0, #0
   42ff0:	beq	42fb8 <WriteCompressedType+0x550>
   42ff4:	add	r0, pc, #996	; 0x3e4
   42ff8:	sub	lr, fp, #4096	; 0x1000
   42ffc:	mov	r2, #20
   43000:	mov	r9, #0
   43004:	vld1.64	{d16-d17}, [r0]
   43008:	sub	r1, lr, #32
   4300c:	add	lr, sp, #4096	; 0x1000
   43010:	mov	r0, r1
   43014:	vst1.32	{d16-d17}, [r0], r2
   43018:	mov	r2, #8
   4301c:	str	r2, [r0]
   43020:	add	r0, lr, #44	; 0x2c
   43024:	mov	r2, #5
   43028:	str	r2, [r0, #2060]	; 0x80c
   4302c:	ldr	r0, [sp, #20]
   43030:	mov	r2, #0
   43034:	str	r2, [r0]
   43038:	str	r2, [r0, #4]
   4303c:	mov	r0, #32
   43040:	str	r1, [r4]
   43044:	str	r0, [r4, #4]
   43048:	mov	r0, r4
   4304c:	mov	r1, #0
   43050:	str	r7, [r4, #12]
   43054:	str	r8, [r4, #16]
   43058:	bl	18ac <deflate@plt>
   4305c:	ldr	r0, [r4, #16]
   43060:	ldr	r3, [sl]
   43064:	mov	r1, #1
   43068:	rsb	r2, r0, #2048	; 0x800
   4306c:	mov	r0, r7
   43070:	bl	18c4 <fwrite@plt>
   43074:	add	r5, r0, r5
   43078:	ldr	r0, [r4, #16]
   4307c:	cmp	r0, #0
   43080:	beq	43048 <WriteCompressedType+0x5e0>
   43084:	add	lr, sp, #4096	; 0x1000
   43088:	mov	r1, #1
   4308c:	add	r0, lr, #44	; 0x2c
   43090:	sub	lr, fp, #4096	; 0x1000
   43094:	str	r1, [r0, #2044]	; 0x7fc
   43098:	str	r9, [r0, #2048]	; 0x800
   4309c:	sub	r0, lr, #32
   430a0:	str	r0, [r4]
   430a4:	mov	r0, #8
   430a8:	str	r0, [r4, #4]
   430ac:	mov	r0, r4
   430b0:	mov	r1, #0
   430b4:	str	r7, [r4, #12]
   430b8:	str	r8, [r4, #16]
   430bc:	bl	18ac <deflate@plt>
   430c0:	ldr	r0, [r4, #16]
   430c4:	ldr	r3, [sl]
   430c8:	mov	r1, #1
   430cc:	rsb	r2, r0, #2048	; 0x800
   430d0:	mov	r0, r7
   430d4:	bl	18c4 <fwrite@plt>
   430d8:	add	r5, r0, r5
   430dc:	ldr	r0, [r4, #16]
   430e0:	cmp	r0, #0
   430e4:	beq	430ac <WriteCompressedType+0x644>
   430e8:	mov	r0, #9
   430ec:	mov	r1, r4
   430f0:	mov	r2, #0
   430f4:	mov	r3, #0
   430f8:	str	r0, [sp]
   430fc:	mov	r0, sl
   43100:	bl	45870 <WriteCompressedData>
   43104:	add	r0, r0, r5
   43108:	ldr	r5, [sp, #28]
   4310c:	add	r6, r0, r6
   43110:	ldr	r0, [sp, #32]
   43114:	add	r5, r5, #1
   43118:	cmp	r5, r0
   4311c:	bcc	42ea8 <WriteCompressedType+0x440>
   43120:	b	42c98 <WriteCompressedType+0x230>
   43124:	ldr	r5, [r7, #8]
   43128:	ldr	r2, [r7, #40]	; 0x28
   4312c:	ldr	r9, [sp, #36]	; 0x24
   43130:	add	lr, sp, #4096	; 0x1000
   43134:	mov	r6, #0
   43138:	cmp	sl, #0
   4313c:	add	r0, lr, #44	; 0x2c
   43140:	str	r6, [r0, #-4]
   43144:	str	r6, [r0]
   43148:	beq	42c98 <WriteCompressedType+0x230>
   4314c:	ldr	r0, [sl]
   43150:	cmp	r0, #0
   43154:	beq	42c98 <WriteCompressedType+0x230>
   43158:	cmp	r5, #17
   4315c:	bhi	42c98 <WriteCompressedType+0x230>
   43160:	movw	r1, #20
   43164:	mov	r0, #1
   43168:	movt	r1, #3
   4316c:	tst	r1, r0, lsl r5
   43170:	beq	433f0 <WriteCompressedType+0x988>
   43174:	mov	r0, r5
   43178:	str	r2, [sp, #28]
   4317c:	bl	193c <Mat_SizeOf@plt>
   43180:	mul	r1, r0, r9
   43184:	cmp	r5, #2
   43188:	add	lr, sp, #4096	; 0x1000
   4318c:	mov	r6, #0
   43190:	mov	r8, #1024	; 0x400
   43194:	sub	r7, fp, #2080	; 0x820
   43198:	add	r0, lr, #44	; 0x2c
   4319c:	movweq	r5, #16
   431a0:	sub	lr, fp, #4096	; 0x1000
   431a4:	str	r5, [r0, #2044]	; 0x7fc
   431a8:	mov	r5, r1
   431ac:	str	r1, [r0, #2048]	; 0x800
   431b0:	sub	r0, lr, #32
   431b4:	mov	r1, #8
   431b8:	stm	r4, {r0, r1}
   431bc:	mov	r0, r4
   431c0:	mov	r1, #0
   431c4:	str	r7, [r4, #12]
   431c8:	str	r8, [r4, #16]
   431cc:	bl	18ac <deflate@plt>
   431d0:	ldr	r0, [r4, #16]
   431d4:	ldr	r3, [sl]
   431d8:	mov	r1, #1
   431dc:	rsb	r2, r0, #1024	; 0x400
   431e0:	mov	r0, r7
   431e4:	bl	18c4 <fwrite@plt>
   431e8:	add	r6, r0, r6
   431ec:	ldr	r0, [r4, #16]
   431f0:	cmp	r0, #0
   431f4:	beq	431bc <WriteCompressedType+0x754>
   431f8:	ldr	r0, [sp, #28]
   431fc:	cmp	r0, #0
   43200:	beq	42c98 <WriteCompressedType+0x230>
   43204:	cmp	r9, #1
   43208:	blt	42c98 <WriteCompressedType+0x230>
   4320c:	str	r0, [r4]
   43210:	mov	r8, r5
   43214:	str	r5, [r4, #4]
   43218:	mov	r5, #1024	; 0x400
   4321c:	mov	r0, r4
   43220:	mov	r1, #0
   43224:	str	r7, [r4, #12]
   43228:	str	r5, [r4, #16]
   4322c:	bl	18ac <deflate@plt>
   43230:	ldr	r0, [r4, #16]
   43234:	ldr	r3, [sl]
   43238:	mov	r1, #1
   4323c:	rsb	r2, r0, #1024	; 0x400
   43240:	mov	r0, r7
   43244:	bl	18c4 <fwrite@plt>
   43248:	add	r6, r0, r6
   4324c:	ldr	r0, [r4, #16]
   43250:	cmp	r0, #0
   43254:	beq	4321c <WriteCompressedType+0x7b4>
   43258:	asr	r0, r8, #31
   4325c:	add	r0, r8, r0, lsr #29
   43260:	bic	r0, r0, #7
   43264:	subs	r0, r8, r0
   43268:	beq	42c98 <WriteCompressedType+0x230>
   4326c:	add	lr, sp, #4096	; 0x1000
   43270:	mov	r5, #1024	; 0x400
   43274:	rsb	r0, r0, #8
   43278:	add	r1, lr, #40	; 0x28
   4327c:	str	r1, [r4]
   43280:	str	r0, [r4, #4]
   43284:	mov	r0, r4
   43288:	mov	r1, #0
   4328c:	str	r7, [r4, #12]
   43290:	str	r5, [r4, #16]
   43294:	bl	18ac <deflate@plt>
   43298:	ldr	r0, [r4, #16]
   4329c:	ldr	r3, [sl]
   432a0:	mov	r1, #1
   432a4:	rsb	r2, r0, #1024	; 0x400
   432a8:	mov	r0, r7
   432ac:	bl	18c4 <fwrite@plt>
   432b0:	add	r6, r0, r6
   432b4:	ldr	r0, [r4, #16]
   432b8:	cmp	r0, #0
   432bc:	beq	43284 <WriteCompressedType+0x81c>
   432c0:	b	42c98 <WriteCompressedType+0x230>
   432c4:	ldr	r5, [r7, #40]	; 0x28
   432c8:	mov	r8, #5
   432cc:	mov	r0, sl
   432d0:	mov	r1, r4
   432d4:	ldmib	r5, {r2, r3}
   432d8:	str	r8, [sp]
   432dc:	bl	45870 <WriteCompressedData>
   432e0:	ldr	r2, [r5, #12]
   432e4:	ldr	r3, [r5, #16]
   432e8:	mov	r6, r0
   432ec:	mov	r0, sl
   432f0:	mov	r1, r4
   432f4:	str	r8, [sp]
   432f8:	bl	45870 <WriteCompressedData>
   432fc:	add	r8, r0, r6
   43300:	ldr	r0, [r7, #20]
   43304:	cmp	r0, #0
   43308:	beq	433bc <WriteCompressedType+0x954>
   4330c:	ldr	r6, [r5, #24]
   43310:	ldr	r0, [r7, #8]
   43314:	ldr	r3, [r5, #20]
   43318:	mov	r1, r4
   4331c:	ldr	r2, [r6]
   43320:	str	r0, [sp]
   43324:	mov	r0, sl
   43328:	bl	45870 <WriteCompressedData>
   4332c:	ldr	r1, [r7, #8]
   43330:	ldr	r3, [r5, #20]
   43334:	ldr	r2, [r6, #4]
   43338:	add	r5, r0, r8
   4333c:	mov	r0, sl
   43340:	str	r1, [sp]
   43344:	mov	r1, r4
   43348:	bl	45870 <WriteCompressedData>
   4334c:	add	r6, r5, r0
   43350:	b	42c98 <WriteCompressedType+0x230>
   43354:	add	r0, pc, #276	; 0x114
   43358:	add	lr, sp, #2048	; 0x800
   4335c:	mov	r6, #0
   43360:	vld1.64	{d16-d17}, [r0]
   43364:	mov	r0, #16
   43368:	add	r7, lr, #40	; 0x28
   4336c:	vst1.64	{d16-d17}, [r5]
   43370:	str	r5, [r4]
   43374:	mov	r5, #2048	; 0x800
   43378:	str	r0, [r4, #4]
   4337c:	mov	r0, r4
   43380:	mov	r1, #0
   43384:	str	r7, [r4, #12]
   43388:	str	r5, [r4, #16]
   4338c:	bl	18ac <deflate@plt>
   43390:	ldr	r0, [r4, #16]
   43394:	ldr	r3, [sl]
   43398:	mov	r1, #1
   4339c:	rsb	r2, r0, #2048	; 0x800
   433a0:	mov	r0, r7
   433a4:	bl	18c4 <fwrite@plt>
   433a8:	add	r6, r0, r6
   433ac:	ldr	r0, [r4, #16]
   433b0:	cmp	r0, #0
   433b4:	beq	4337c <WriteCompressedType+0x914>
   433b8:	b	42c98 <WriteCompressedType+0x230>
   433bc:	ldr	r0, [r7, #8]
   433c0:	ldr	r3, [r5, #20]
   433c4:	ldr	r2, [r5, #24]
   433c8:	mov	r1, r4
   433cc:	str	r0, [sp]
   433d0:	mov	r0, sl
   433d4:	bl	45870 <WriteCompressedData>
   433d8:	add	r6, r0, r8
   433dc:	b	42c98 <WriteCompressedType+0x230>
   433e0:	.word	0x00000006
   433e4:	.word	0x00000008
   433e8:	.word	0x00000006
   433ec:	.word	0x00000000
   433f0:	cmp	r5, #0
   433f4:	bne	42c98 <WriteCompressedType+0x230>
   433f8:	add	lr, sp, #4096	; 0x1000
   433fc:	mov	r0, #4
   43400:	lsl	r1, r9, #1
   43404:	mov	r6, #0
   43408:	mov	r5, #1024	; 0x400
   4340c:	sub	r7, fp, #2080	; 0x820
   43410:	add	r2, lr, #44	; 0x2c
   43414:	sub	lr, fp, #4096	; 0x1000
   43418:	str	r0, [r2, #2044]	; 0x7fc
   4341c:	str	r1, [r2, #2048]	; 0x800
   43420:	sub	r1, lr, #32
   43424:	mov	r0, #8
   43428:	str	r1, [r4]
   4342c:	str	r0, [r4, #4]
   43430:	mov	r0, r4
   43434:	mov	r1, #0
   43438:	str	r7, [r4, #12]
   4343c:	str	r5, [r4, #16]
   43440:	bl	18ac <deflate@plt>
   43444:	ldr	r0, [r4, #16]
   43448:	ldr	r3, [sl]
   4344c:	mov	r1, #1
   43450:	rsb	r2, r0, #1024	; 0x400
   43454:	mov	r0, r7
   43458:	bl	18c4 <fwrite@plt>
   4345c:	add	r6, r0, r6
   43460:	ldr	r0, [r4, #16]
   43464:	cmp	r0, #0
   43468:	beq	43430 <WriteCompressedType+0x9c8>
   4346c:	b	42c98 <WriteCompressedType+0x230>
   43470:	.word	0x00040005
   43474:	.word	0x00000001
   43478:	.word	0x00000001
   4347c:	.word	0x00000000
   43480:	.word	0x00009484

00043484 <Mat_VarReadNextInfo5>:
   43484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43488:	add	fp, sp, #28
   4348c:	sub	sp, sp, #84	; 0x54
   43490:	mov	r4, #0
   43494:	cmp	r0, #0
   43498:	beq	43bb0 <Mat_VarReadNextInfo5+0x72c>
   4349c:	mov	r5, r0
   434a0:	ldr	r0, [r0]
   434a4:	bl	1858 <ftell@plt>
   434a8:	cmn	r0, #1
   434ac:	beq	435a0 <Mat_VarReadNextInfo5+0x11c>
   434b0:	ldr	r3, [r5]
   434b4:	mov	r9, r0
   434b8:	sub	r0, fp, #36	; 0x24
   434bc:	mov	r1, #4
   434c0:	mov	r2, #1
   434c4:	bl	18d0 <fread@plt>
   434c8:	cmp	r0, #0
   434cc:	beq	43bb0 <Mat_VarReadNextInfo5+0x72c>
   434d0:	ldr	r3, [r5]
   434d4:	sub	r0, fp, #40	; 0x28
   434d8:	mov	r1, #4
   434dc:	mov	r2, #1
   434e0:	bl	18d0 <fread@plt>
   434e4:	ldr	r0, [r5, #20]
   434e8:	cmp	r0, #0
   434ec:	beq	43500 <Mat_VarReadNextInfo5+0x7c>
   434f0:	sub	r0, fp, #36	; 0x24
   434f4:	bl	1c30 <Mat_int32Swap>
   434f8:	sub	r0, fp, #40	; 0x28
   434fc:	bl	1c30 <Mat_int32Swap>
   43500:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43504:	cmp	r1, #14
   43508:	beq	435b4 <Mat_VarReadNextInfo5+0x130>
   4350c:	cmp	r1, #15
   43510:	bne	436bc <Mat_VarReadNextInfo5+0x238>
   43514:	vmov.i32	q8, #0	; 0x00000000
   43518:	add	r1, sp, #8
   4351c:	mov	r0, #48	; 0x30
   43520:	mov	r2, r1
   43524:	vst1.64	{d16-d17}, [r2], r0
   43528:	add	r0, r1, #32
   4352c:	vst1.64	{d16-d17}, [r0]
   43530:	add	r0, r1, #16
   43534:	vst1.64	{d16-d17}, [r2]
   43538:	vst1.64	{d16-d17}, [r0]
   4353c:	bl	18b8 <Mat_VarCalloc@plt>
   43540:	mov	r4, r0
   43544:	mov	r0, #1
   43548:	mov	r1, #56	; 0x38
   4354c:	str	r0, [r4, #48]	; 0x30
   43550:	mov	r0, #1
   43554:	bl	17b0 <calloc@plt>
   43558:	ldr	r1, [r4, #52]	; 0x34
   4355c:	mov	r2, #56	; 0x38
   43560:	str	r0, [r1, #12]
   43564:	ldr	r1, [pc, #1620]	; 43bc0 <Mat_VarReadNextInfo5+0x73c>
   43568:	add	r1, pc, r1
   4356c:	bl	19f0 <inflateInit_@plt>
   43570:	cmp	r0, #0
   43574:	beq	4371c <Mat_VarReadNextInfo5+0x298>
   43578:	mov	r6, r0
   4357c:	mov	r0, r4
   43580:	bl	1930 <Mat_VarFree@plt>
   43584:	mov	r0, r6
   43588:	bl	18a0 <zError@plt>
   4358c:	mov	r1, r0
   43590:	ldr	r0, [pc, #1580]	; 43bc4 <Mat_VarReadNextInfo5+0x740>
   43594:	add	r0, pc, r0
   43598:	bl	19cc <Mat_Critical@plt>
   4359c:	b	435ac <Mat_VarReadNextInfo5+0x128>
   435a0:	ldr	r0, [pc, #1556]	; 43bbc <Mat_VarReadNextInfo5+0x738>
   435a4:	add	r0, pc, r0
   435a8:	bl	19cc <Mat_Critical@plt>
   435ac:	mov	r4, #0
   435b0:	b	43bb0 <Mat_VarReadNextInfo5+0x72c>
   435b4:	bl	18b8 <Mat_VarCalloc@plt>
   435b8:	ldr	r3, [r5]
   435bc:	add	r7, sp, #8
   435c0:	mov	r4, r0
   435c4:	mov	r1, #4
   435c8:	mov	r2, #6
   435cc:	mov	r0, r7
   435d0:	bl	18d0 <fread@plt>
   435d4:	ldr	r0, [r5, #20]
   435d8:	cmp	r0, #0
   435dc:	beq	43610 <Mat_VarReadNextInfo5+0x18c>
   435e0:	mov	r0, r7
   435e4:	bl	1c44 <Mat_uint32Swap>
   435e8:	add	r0, r7, #4
   435ec:	bl	1c44 <Mat_uint32Swap>
   435f0:	add	r0, r7, #8
   435f4:	bl	1c44 <Mat_uint32Swap>
   435f8:	add	r0, r7, #12
   435fc:	bl	1c44 <Mat_uint32Swap>
   43600:	add	r0, r7, #16
   43604:	bl	1c44 <Mat_uint32Swap>
   43608:	add	r0, r7, #20
   4360c:	bl	1c44 <Mat_uint32Swap>
   43610:	ldr	r0, [sp, #8]
   43614:	cmp	r0, #6
   43618:	bne	43654 <Mat_VarReadNextInfo5+0x1d0>
   4361c:	ldr	r0, [sp, #16]
   43620:	and	r1, r0, #512	; 0x200
   43624:	and	r2, r0, #1024	; 0x400
   43628:	and	r3, r0, #2048	; 0x800
   4362c:	uxtb	r0, r0
   43630:	cmp	r0, #18
   43634:	movcs	r0, #0
   43638:	str	r0, [r4, #16]
   4363c:	str	r3, [r4, #20]
   43640:	str	r2, [r4, #24]
   43644:	str	r1, [r4, #28]
   43648:	cmp	r0, #5
   4364c:	ldreq	r0, [sp, #20]
   43650:	streq	r0, [r4]
   43654:	ldr	r2, [sp, #24]
   43658:	ldr	r3, [sp, #28]
   4365c:	mov	r0, r5
   43660:	mov	r1, r4
   43664:	bl	453dc <ReadRankDims>
   43668:	ldr	r3, [r5]
   4366c:	add	r8, sp, #8
   43670:	mov	r1, #4
   43674:	mov	r2, #2
   43678:	mov	r0, r8
   4367c:	bl	18d0 <fread@plt>
   43680:	ldr	r0, [r5, #20]
   43684:	cmp	r0, #0
   43688:	beq	43694 <Mat_VarReadNextInfo5+0x210>
   4368c:	add	r0, sp, #8
   43690:	bl	1c44 <Mat_uint32Swap>
   43694:	ldr	r0, [sp, #8]
   43698:	cmp	r0, #1
   4369c:	bne	436cc <Mat_VarReadNextInfo5+0x248>
   436a0:	ldr	r0, [r5, #20]
   436a4:	cmp	r0, #0
   436a8:	beq	437e0 <Mat_VarReadNextInfo5+0x35c>
   436ac:	add	r0, r8, #4
   436b0:	bl	1c44 <Mat_uint32Swap>
   436b4:	mov	r6, r0
   436b8:	b	437e4 <Mat_VarReadNextInfo5+0x360>
   436bc:	ldr	r0, [pc, #1296]	; 43bd4 <Mat_VarReadNextInfo5+0x750>
   436c0:	add	r0, pc, r0
   436c4:	bl	19cc <Mat_Critical@plt>
   436c8:	b	43bb0 <Mat_VarReadNextInfo5+0x72c>
   436cc:	lsr	r7, r0, #16
   436d0:	cmp	r7, #4
   436d4:	bhi	43874 <Mat_VarReadNextInfo5+0x3f0>
   436d8:	uxth	r0, r0
   436dc:	cmp	r0, #1
   436e0:	bne	43874 <Mat_VarReadNextInfo5+0x3f0>
   436e4:	cmp	r7, #0
   436e8:	beq	43874 <Mat_VarReadNextInfo5+0x3f0>
   436ec:	add	r0, r7, #1
   436f0:	bl	18e8 <malloc@plt>
   436f4:	cmp	r0, #0
   436f8:	str	r0, [r4, #36]	; 0x24
   436fc:	beq	43874 <Mat_VarReadNextInfo5+0x3f0>
   43700:	add	r1, r8, #4
   43704:	mov	r2, r7
   43708:	bl	1834 <memcpy@plt>
   4370c:	ldr	r0, [r4, #36]	; 0x24
   43710:	mov	r1, #0
   43714:	strb	r1, [r0, r7]
   43718:	b	43874 <Mat_VarReadNextInfo5+0x3f0>
   4371c:	add	r7, sp, #8
   43720:	mov	r0, r5
   43724:	mov	r1, r4
   43728:	mov	r2, r7
   4372c:	bl	2700 <InflateVarTag>
   43730:	mov	r6, r0
   43734:	ldr	r0, [r5, #20]
   43738:	cmp	r0, #0
   4373c:	beq	43750 <Mat_VarReadNextInfo5+0x2cc>
   43740:	mov	r0, r7
   43744:	bl	1c44 <Mat_uint32Swap>
   43748:	orr	r0, r7, #4
   4374c:	bl	1c44 <Mat_uint32Swap>
   43750:	ldr	r0, [sp, #8]
   43754:	cmp	r0, #14
   43758:	bne	43834 <Mat_VarReadNextInfo5+0x3b0>
   4375c:	add	r6, sp, #8
   43760:	mov	r0, r5
   43764:	mov	r1, r4
   43768:	mov	r2, r6
   4376c:	bl	2854 <InflateArrayFlags>
   43770:	ldr	r0, [r5, #20]
   43774:	cmp	r0, #0
   43778:	beq	43794 <Mat_VarReadNextInfo5+0x310>
   4377c:	mov	r0, r6
   43780:	bl	1c44 <Mat_uint32Swap>
   43784:	add	r0, r6, #8
   43788:	bl	1c44 <Mat_uint32Swap>
   4378c:	add	r0, r6, #12
   43790:	bl	1c44 <Mat_uint32Swap>
   43794:	ldr	r0, [sp, #8]
   43798:	cmp	r0, #6
   4379c:	bne	43924 <Mat_VarReadNextInfo5+0x4a0>
   437a0:	ldr	r0, [sp, #16]
   437a4:	and	r1, r0, #512	; 0x200
   437a8:	and	r2, r0, #1024	; 0x400
   437ac:	and	r3, r0, #2048	; 0x800
   437b0:	uxtb	r0, r0
   437b4:	cmp	r0, #18
   437b8:	movcs	r0, #0
   437bc:	cmp	r0, #5
   437c0:	str	r0, [r4, #16]
   437c4:	str	r3, [r4, #20]
   437c8:	str	r2, [r4, #24]
   437cc:	str	r1, [r4, #28]
   437d0:	bne	43928 <Mat_VarReadNextInfo5+0x4a4>
   437d4:	ldr	r0, [sp, #20]
   437d8:	str	r0, [r4]
   437dc:	b	43930 <Mat_VarReadNextInfo5+0x4ac>
   437e0:	ldr	r6, [sp, #12]
   437e4:	ands	r0, r6, #7
   437e8:	mov	r7, r6
   437ec:	sub	r0, r6, r0
   437f0:	addne	r7, r0, #8
   437f4:	add	r0, r7, #1
   437f8:	bl	18e8 <malloc@plt>
   437fc:	cmp	r0, #0
   43800:	str	r0, [r4, #36]	; 0x24
   43804:	beq	43874 <Mat_VarReadNextInfo5+0x3f0>
   43808:	ldr	r3, [r5]
   4380c:	mov	r1, #1
   43810:	mov	r2, r7
   43814:	bl	18d0 <fread@plt>
   43818:	mov	r1, r0
   4381c:	ldr	r0, [r4, #36]	; 0x24
   43820:	cmp	r1, r7
   43824:	bne	4385c <Mat_VarReadNextInfo5+0x3d8>
   43828:	mov	r1, #0
   4382c:	strb	r1, [r0, r6]
   43830:	b	43874 <Mat_VarReadNextInfo5+0x3f0>
   43834:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43838:	mov	r2, #1
   4383c:	sub	r1, r0, r6
   43840:	ldr	r0, [r5]
   43844:	bl	1a68 <fseek@plt>
   43848:	mov	r0, r4
   4384c:	bl	1930 <Mat_VarFree@plt>
   43850:	ldr	r0, [pc, #880]	; 43bc8 <Mat_VarReadNextInfo5+0x744>
   43854:	add	r0, pc, r0
   43858:	b	435a8 <Mat_VarReadNextInfo5+0x124>
   4385c:	bl	181c <free@plt>
   43860:	mov	r0, #0
   43864:	str	r0, [r4, #36]	; 0x24
   43868:	ldr	r0, [pc, #864]	; 43bd0 <Mat_VarReadNextInfo5+0x74c>
   4386c:	add	r0, pc, r0
   43870:	bl	19cc <Mat_Critical@plt>
   43874:	ldr	r0, [r4, #16]
   43878:	cmp	r0, #1
   4387c:	beq	438a0 <Mat_VarReadNextInfo5+0x41c>
   43880:	cmp	r0, #16
   43884:	beq	438b0 <Mat_VarReadNextInfo5+0x42c>
   43888:	cmp	r0, #2
   4388c:	bne	43b74 <Mat_VarReadNextInfo5+0x6f0>
   43890:	mov	r0, r5
   43894:	mov	r1, r4
   43898:	bl	43bd8 <ReadNextStructField>
   4389c:	b	43b74 <Mat_VarReadNextInfo5+0x6f0>
   438a0:	mov	r0, r5
   438a4:	mov	r1, r4
   438a8:	bl	449a4 <ReadNextCell>
   438ac:	b	43b74 <Mat_VarReadNextInfo5+0x6f0>
   438b0:	mov	r0, #1
   438b4:	sub	r1, fp, #32
   438b8:	str	r0, [fp, #-32]	; 0xffffffe0
   438bc:	mov	r0, r4
   438c0:	bl	47128 <SafeMulDims>
   438c4:	mov	r0, #4
   438c8:	mov	r2, #4
   438cc:	str	r0, [r4, #12]
   438d0:	mov	r0, r4
   438d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   438d8:	bl	47184 <SafeMul>
   438dc:	ldr	r0, [r4]
   438e0:	bl	18e8 <malloc@plt>
   438e4:	cmp	r0, #0
   438e8:	str	r0, [r4, #40]	; 0x28
   438ec:	beq	43a08 <Mat_VarReadNextInfo5+0x584>
   438f0:	mov	r7, r0
   438f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   438f8:	cmp	r0, #0
   438fc:	beq	43b74 <Mat_VarReadNextInfo5+0x6f0>
   43900:	mov	r6, #0
   43904:	mov	r0, r5
   43908:	bl	1a8c <Mat_VarReadNextInfo@plt>
   4390c:	str	r0, [r7, r6, lsl #2]
   43910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43914:	add	r6, r6, #1
   43918:	cmp	r6, r0
   4391c:	bcc	43904 <Mat_VarReadNextInfo5+0x480>
   43920:	b	43b74 <Mat_VarReadNextInfo5+0x6f0>
   43924:	ldr	r0, [r4, #16]
   43928:	cmp	r0, #17
   4392c:	beq	43b98 <Mat_VarReadNextInfo5+0x714>
   43930:	mov	r0, #0
   43934:	add	r6, sp, #8
   43938:	mov	r1, r4
   4393c:	mov	r3, #64	; 0x40
   43940:	str	r0, [fp, #-32]	; 0xffffffe0
   43944:	sub	r0, fp, #32
   43948:	mov	r2, r6
   4394c:	str	r0, [sp]
   43950:	mov	r0, r5
   43954:	bl	29a8 <InflateRankDims>
   43958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4395c:	mov	sl, #1
   43960:	orr	r8, r7, #4
   43964:	cmp	r0, #0
   43968:	addeq	r0, r6, #8
   4396c:	moveq	sl, #0
   43970:	streq	r0, [fp, #-32]	; 0xffffffe0
   43974:	ldr	r0, [r5, #20]
   43978:	cmp	r0, #0
   4397c:	beq	43990 <Mat_VarReadNextInfo5+0x50c>
   43980:	add	r0, sp, #8
   43984:	bl	1c44 <Mat_uint32Swap>
   43988:	mov	r0, r8
   4398c:	bl	1c44 <Mat_uint32Swap>
   43990:	ldr	r0, [sp, #8]
   43994:	cmp	r0, #5
   43998:	bne	43a40 <Mat_VarReadNextInfo5+0x5bc>
   4399c:	ldr	r0, [sp, #12]
   439a0:	asr	r1, r0, #31
   439a4:	add	r0, r0, r1, lsr #30
   439a8:	asr	r1, r0, #2
   439ac:	bic	r0, r0, #3
   439b0:	str	r1, [r4, #4]
   439b4:	bl	18e8 <malloc@plt>
   439b8:	str	r0, [r4, #32]
   439bc:	ldr	r2, [r5, #20]
   439c0:	ldr	r1, [r4, #4]
   439c4:	cmp	r2, #0
   439c8:	beq	43a18 <Mat_VarReadNextInfo5+0x594>
   439cc:	cmp	r1, #1
   439d0:	blt	43a40 <Mat_VarReadNextInfo5+0x5bc>
   439d4:	mov	r6, #0
   439d8:	mov	r7, #0
   439dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   439e0:	add	r0, r0, r6
   439e4:	bl	1c44 <Mat_uint32Swap>
   439e8:	ldr	r1, [r4, #32]
   439ec:	add	r6, r6, #4
   439f0:	str	r0, [r1, r7, lsl #2]
   439f4:	add	r7, r7, #1
   439f8:	ldr	r0, [r4, #4]
   439fc:	cmp	r7, r0
   43a00:	blt	439dc <Mat_VarReadNextInfo5+0x558>
   43a04:	b	43a40 <Mat_VarReadNextInfo5+0x5bc>
   43a08:	mov	r0, #0
   43a0c:	str	r0, [r4]
   43a10:	str	r0, [r4, #12]
   43a14:	b	43b74 <Mat_VarReadNextInfo5+0x6f0>
   43a18:	cmp	r1, #1
   43a1c:	blt	43a40 <Mat_VarReadNextInfo5+0x5bc>
   43a20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43a24:	mov	r1, #0
   43a28:	ldr	r3, [r2, r1, lsl #2]
   43a2c:	str	r3, [r0, r1, lsl #2]
   43a30:	add	r1, r1, #1
   43a34:	ldr	r3, [r4, #4]
   43a38:	cmp	r1, r3
   43a3c:	blt	43a28 <Mat_VarReadNextInfo5+0x5a4>
   43a40:	cmp	sl, #0
   43a44:	beq	43a50 <Mat_VarReadNextInfo5+0x5cc>
   43a48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43a4c:	bl	181c <free@plt>
   43a50:	add	r2, sp, #8
   43a54:	mov	r0, r5
   43a58:	mov	r1, r4
   43a5c:	bl	2c90 <InflateVarNameTag>
   43a60:	ldr	r0, [r5, #20]
   43a64:	cmp	r0, #0
   43a68:	beq	43a74 <Mat_VarReadNextInfo5+0x5f0>
   43a6c:	add	r0, sp, #8
   43a70:	bl	1c44 <Mat_uint32Swap>
   43a74:	ldr	r0, [sp, #8]
   43a78:	cmp	r0, #1
   43a7c:	bne	43a9c <Mat_VarReadNextInfo5+0x618>
   43a80:	ldr	r0, [r5, #20]
   43a84:	cmp	r0, #0
   43a88:	beq	43ae0 <Mat_VarReadNextInfo5+0x65c>
   43a8c:	mov	r0, r8
   43a90:	bl	1c44 <Mat_uint32Swap>
   43a94:	mov	r7, r0
   43a98:	b	43ae4 <Mat_VarReadNextInfo5+0x660>
   43a9c:	lsr	r7, r0, #16
   43aa0:	cmp	r7, #4
   43aa4:	bhi	43b28 <Mat_VarReadNextInfo5+0x6a4>
   43aa8:	uxth	r0, r0
   43aac:	cmp	r0, #1
   43ab0:	bne	43b28 <Mat_VarReadNextInfo5+0x6a4>
   43ab4:	cmp	r7, #0
   43ab8:	beq	43b28 <Mat_VarReadNextInfo5+0x6a4>
   43abc:	add	r0, r7, #1
   43ac0:	bl	18e8 <malloc@plt>
   43ac4:	cmp	r0, #0
   43ac8:	str	r0, [r4, #36]	; 0x24
   43acc:	beq	43b28 <Mat_VarReadNextInfo5+0x6a4>
   43ad0:	mov	r1, r8
   43ad4:	mov	r2, r7
   43ad8:	bl	1834 <memcpy@plt>
   43adc:	b	43b1c <Mat_VarReadNextInfo5+0x698>
   43ae0:	ldr	r7, [sp, #12]
   43ae4:	ands	r0, r7, #7
   43ae8:	mov	r6, r7
   43aec:	sub	r0, r7, r0
   43af0:	addne	r6, r0, #8
   43af4:	add	r0, r6, #1
   43af8:	bl	18e8 <malloc@plt>
   43afc:	cmp	r0, #0
   43b00:	str	r0, [r4, #36]	; 0x24
   43b04:	beq	43b28 <Mat_VarReadNextInfo5+0x6a4>
   43b08:	mov	r2, r0
   43b0c:	mov	r0, r5
   43b10:	mov	r1, r4
   43b14:	mov	r3, r6
   43b18:	bl	2de4 <InflateVarName>
   43b1c:	ldr	r0, [r4, #36]	; 0x24
   43b20:	mov	r1, #0
   43b24:	strb	r1, [r0, r7]
   43b28:	ldr	r0, [r4, #16]
   43b2c:	cmp	r0, #1
   43b30:	beq	43b4c <Mat_VarReadNextInfo5+0x6c8>
   43b34:	cmp	r0, #2
   43b38:	bne	43b58 <Mat_VarReadNextInfo5+0x6d4>
   43b3c:	mov	r0, r5
   43b40:	mov	r1, r4
   43b44:	bl	43bd8 <ReadNextStructField>
   43b48:	b	43b58 <Mat_VarReadNextInfo5+0x6d4>
   43b4c:	mov	r0, r5
   43b50:	mov	r1, r4
   43b54:	bl	449a4 <ReadNextCell>
   43b58:	ldr	r1, [r4, #52]	; 0x34
   43b5c:	ldr	r0, [r5]
   43b60:	mov	r2, #1
   43b64:	ldr	r1, [r1, #12]
   43b68:	ldr	r1, [r1, #4]
   43b6c:	rsb	r1, r1, #0
   43b70:	bl	1a68 <fseek@plt>
   43b74:	ldr	r0, [r5]
   43b78:	bl	1858 <ftell@plt>
   43b7c:	ldr	r1, [r4, #52]	; 0x34
   43b80:	cmn	r0, #1
   43b84:	str	r0, [r1]
   43b88:	bne	43b98 <Mat_VarReadNextInfo5+0x714>
   43b8c:	ldr	r0, [pc, #56]	; 43bcc <Mat_VarReadNextInfo5+0x748>
   43b90:	add	r0, pc, r0
   43b94:	bl	19cc <Mat_Critical@plt>
   43b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43b9c:	mov	r2, #0
   43ba0:	add	r0, r9, r0
   43ba4:	add	r1, r0, #8
   43ba8:	ldr	r0, [r5]
   43bac:	bl	1a68 <fseek@plt>
   43bb0:	mov	r0, r4
   43bb4:	sub	sp, fp, #28
   43bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43bbc:	.word	0x00008588
   43bc0:	.word	0x00008819
   43bc4:	.word	0x0000880c
   43bc8:	.word	0x000085eb
   43bcc:	.word	0x00007f9c
   43bd0:	.word	0x0000854c
   43bd4:	.word	0x00008722

00043bd8 <ReadNextStructField>:
   43bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43bdc:	add	fp, sp, #28
   43be0:	sub	sp, sp, #124	; 0x7c
   43be4:	mov	r9, r1
   43be8:	mov	r5, r0
   43bec:	mov	r0, #1
   43bf0:	sub	r1, fp, #32
   43bf4:	str	r0, [fp, #-32]	; 0xffffffe0
   43bf8:	mov	r0, r9
   43bfc:	bl	47128 <SafeMulDims>
   43c00:	cmp	r0, #0
   43c04:	beq	43c1c <ReadNextStructField+0x44>
   43c08:	ldr	r0, [pc, #3424]	; 44970 <ReadNextStructField+0xd98>
   43c0c:	add	r0, pc, r0
   43c10:	bl	19cc <Mat_Critical@plt>
   43c14:	mov	r7, #0
   43c18:	b	43ffc <ReadNextStructField+0x424>
   43c1c:	ldr	r0, [r9, #48]	; 0x30
   43c20:	str	r5, [sp, #32]
   43c24:	cmp	r0, #1
   43c28:	bne	43d08 <ReadNextStructField+0x130>
   43c2c:	vmov.i32	q8, #0	; 0x00000000
   43c30:	add	r4, sp, #48	; 0x30
   43c34:	mov	r0, #48	; 0x30
   43c38:	mov	r1, r4
   43c3c:	mov	r2, r4
   43c40:	vst1.64	{d16-d17}, [r1], r0
   43c44:	add	r0, r4, #32
   43c48:	vst1.64	{d16-d17}, [r0]
   43c4c:	add	r0, r4, #16
   43c50:	vst1.64	{d16-d17}, [r1]
   43c54:	mov	r1, r9
   43c58:	vst1.64	{d16-d17}, [r0]
   43c5c:	mov	r0, r5
   43c60:	bl	3374 <InflateFieldNameLength>
   43c64:	mov	r7, r0
   43c68:	ldr	r0, [r5, #20]
   43c6c:	cmp	r0, #0
   43c70:	beq	43c84 <ReadNextStructField+0xac>
   43c74:	mov	r0, r4
   43c78:	bl	1c44 <Mat_uint32Swap>
   43c7c:	orr	r0, r4, #4
   43c80:	bl	1c44 <Mat_uint32Swap>
   43c84:	ldrh	r0, [sp, #48]	; 0x30
   43c88:	cmp	r0, #5
   43c8c:	bne	43dc4 <ReadNextStructField+0x1ec>
   43c90:	ldr	r8, [sp, #52]	; 0x34
   43c94:	mov	r0, r5
   43c98:	mov	r1, r9
   43c9c:	mov	r2, r4
   43ca0:	bl	34c8 <InflateFieldNamesTag>
   43ca4:	mov	r6, r0
   43ca8:	ldr	r0, [r5, #20]
   43cac:	orr	sl, r4, #4
   43cb0:	cmp	r0, #0
   43cb4:	beq	43cc8 <ReadNextStructField+0xf0>
   43cb8:	add	r0, sp, #48	; 0x30
   43cbc:	bl	1c44 <Mat_uint32Swap>
   43cc0:	mov	r0, sl
   43cc4:	bl	1c44 <Mat_uint32Swap>
   43cc8:	ldr	r1, [sp, #52]	; 0x34
   43ccc:	add	r7, r6, r7
   43cd0:	mov	r0, #4
   43cd4:	str	r0, [r9, #12]
   43cd8:	udiv	r6, r1, r8
   43cdc:	str	r1, [sp, #28]
   43ce0:	mul	r0, r6, r8
   43ce4:	ands	r4, r0, #7
   43ce8:	rsbne	r4, r4, #8
   43cec:	cmp	r8, r1
   43cf0:	bls	43ddc <ReadNextStructField+0x204>
   43cf4:	ldr	r0, [r9, #52]	; 0x34
   43cf8:	mov	r1, #0
   43cfc:	str	r1, [r0, #4]
   43d00:	str	r1, [r0, #8]
   43d04:	b	43eb8 <ReadNextStructField+0x2e0>
   43d08:	ldr	r3, [r5]
   43d0c:	add	r6, sp, #48	; 0x30
   43d10:	mov	r1, #4
   43d14:	mov	r2, #2
   43d18:	mov	r0, r6
   43d1c:	bl	18d0 <fread@plt>
   43d20:	mov	r7, r0
   43d24:	ldr	r0, [r5, #20]
   43d28:	cmp	r0, #0
   43d2c:	beq	43d40 <ReadNextStructField+0x168>
   43d30:	mov	r0, r6
   43d34:	bl	1c44 <Mat_uint32Swap>
   43d38:	add	r0, r6, #4
   43d3c:	bl	1c44 <Mat_uint32Swap>
   43d40:	ldrh	r0, [sp, #48]	; 0x30
   43d44:	cmp	r0, #5
   43d48:	bne	43dd0 <ReadNextStructField+0x1f8>
   43d4c:	ldr	r3, [r5]
   43d50:	ldr	r4, [sp, #52]	; 0x34
   43d54:	mov	r0, r6
   43d58:	mov	r1, #4
   43d5c:	mov	r2, #2
   43d60:	mov	r8, #4
   43d64:	bl	18d0 <fread@plt>
   43d68:	mov	sl, r0
   43d6c:	ldr	r0, [r5, #20]
   43d70:	add	r6, r6, #4
   43d74:	cmp	r0, #0
   43d78:	beq	43d8c <ReadNextStructField+0x1b4>
   43d7c:	add	r0, sp, #48	; 0x30
   43d80:	bl	1c44 <Mat_uint32Swap>
   43d84:	mov	r0, r6
   43d88:	bl	1c44 <Mat_uint32Swap>
   43d8c:	ldr	r0, [sp, #52]	; 0x34
   43d90:	add	r7, sl, r7
   43d94:	str	r8, [r9, #12]
   43d98:	str	r6, [sp, #24]
   43d9c:	ldr	r5, [r9, #52]	; 0x34
   43da0:	str	r7, [sp, #40]	; 0x28
   43da4:	udiv	sl, r0, r4
   43da8:	cmp	r4, r0
   43dac:	str	r0, [sp, #28]
   43db0:	bls	43efc <ReadNextStructField+0x324>
   43db4:	mov	r0, #0
   43db8:	str	r0, [r5, #4]
   43dbc:	str	r0, [r5, #8]
   43dc0:	b	43f8c <ReadNextStructField+0x3b4>
   43dc4:	ldr	r4, [pc, #2984]	; 44974 <ReadNextStructField+0xd9c>
   43dc8:	add	r4, pc, r4
   43dcc:	b	43ef0 <ReadNextStructField+0x318>
   43dd0:	ldr	r0, [pc, #3016]	; 449a0 <ReadNextStructField+0xdc8>
   43dd4:	add	r0, pc, r0
   43dd8:	b	43ef4 <ReadNextStructField+0x31c>
   43ddc:	add	r0, r4, r0
   43de0:	str	sl, [sp, #24]
   43de4:	bl	18e8 <malloc@plt>
   43de8:	cmp	r0, #0
   43dec:	beq	43eb4 <ReadNextStructField+0x2dc>
   43df0:	mov	sl, r0
   43df4:	mov	r0, r5
   43df8:	mov	r1, r9
   43dfc:	mov	r3, r6
   43e00:	str	r7, [sp, #40]	; 0x28
   43e04:	str	r8, [sp]
   43e08:	str	r4, [sp, #4]
   43e0c:	mov	r2, sl
   43e10:	bl	361c <InflateFieldNames>
   43e14:	ldr	r4, [r9, #52]	; 0x34
   43e18:	str	r0, [sp, #36]	; 0x24
   43e1c:	mov	r0, r6
   43e20:	mov	r1, #4
   43e24:	str	r6, [r4, #4]
   43e28:	bl	17b0 <calloc@plt>
   43e2c:	cmp	r0, #0
   43e30:	mov	r5, sl
   43e34:	str	r0, [r4, #8]
   43e38:	beq	43ea0 <ReadNextStructField+0x2c8>
   43e3c:	sub	r4, r8, #1
   43e40:	mov	r7, r5
   43e44:	mov	sl, #0
   43e48:	mov	r0, r8
   43e4c:	bl	18e8 <malloc@plt>
   43e50:	ldr	r1, [r9, #52]	; 0x34
   43e54:	ldr	r1, [r1, #8]
   43e58:	str	r0, [r1, sl, lsl #2]
   43e5c:	ldr	r0, [r9, #52]	; 0x34
   43e60:	ldr	r0, [r0, #8]
   43e64:	ldr	r0, [r0, sl, lsl #2]
   43e68:	cmp	r0, #0
   43e6c:	beq	43e90 <ReadNextStructField+0x2b8>
   43e70:	mov	r1, r7
   43e74:	mov	r2, r8
   43e78:	bl	1834 <memcpy@plt>
   43e7c:	ldr	r0, [r9, #52]	; 0x34
   43e80:	mov	r1, #0
   43e84:	ldr	r0, [r0, #8]
   43e88:	ldr	r0, [r0, sl, lsl #2]
   43e8c:	strb	r1, [r0, r4]
   43e90:	add	sl, sl, #1
   43e94:	add	r7, r7, r8
   43e98:	cmp	sl, r6
   43e9c:	bcc	43e48 <ReadNextStructField+0x270>
   43ea0:	ldr	r7, [sp, #40]	; 0x28
   43ea4:	ldr	r0, [sp, #36]	; 0x24
   43ea8:	add	r7, r0, r7
   43eac:	mov	r0, r5
   43eb0:	bl	181c <free@plt>
   43eb4:	ldr	sl, [sp, #24]
   43eb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43ebc:	sub	r0, fp, #36	; 0x24
   43ec0:	mov	r2, r6
   43ec4:	bl	47184 <SafeMul>
   43ec8:	ldr	r4, [pc, #2728]	; 44978 <ReadNextStructField+0xda0>
   43ecc:	cmp	r0, #0
   43ed0:	add	r4, pc, r4
   43ed4:	bne	43ef0 <ReadNextStructField+0x318>
   43ed8:	ldr	r2, [r9, #12]
   43edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43ee0:	mov	r0, r9
   43ee4:	bl	47184 <SafeMul>
   43ee8:	cmp	r0, #0
   43eec:	beq	44008 <ReadNextStructField+0x430>
   43ef0:	mov	r0, r4
   43ef4:	bl	19cc <Mat_Critical@plt>
   43ef8:	b	43ffc <ReadNextStructField+0x424>
   43efc:	mov	r0, sl
   43f00:	mov	r1, #4
   43f04:	str	sl, [r5, #4]
   43f08:	bl	17b0 <calloc@plt>
   43f0c:	cmp	r0, #0
   43f10:	str	r0, [r5, #8]
   43f14:	beq	43f8c <ReadNextStructField+0x3b4>
   43f18:	ldr	r5, [sp, #32]
   43f1c:	sub	r7, r4, #1
   43f20:	mov	r6, #0
   43f24:	mov	r8, #0
   43f28:	mov	r0, r4
   43f2c:	bl	18e8 <malloc@plt>
   43f30:	ldr	r1, [r9, #52]	; 0x34
   43f34:	ldr	r1, [r1, #8]
   43f38:	str	r0, [r1, r8, lsl #2]
   43f3c:	ldr	r0, [r9, #52]	; 0x34
   43f40:	ldr	r0, [r0, #8]
   43f44:	ldr	r0, [r0, r8, lsl #2]
   43f48:	cmp	r0, #0
   43f4c:	beq	43f7c <ReadNextStructField+0x3a4>
   43f50:	ldr	r3, [r5]
   43f54:	mov	r1, #1
   43f58:	mov	r2, r4
   43f5c:	bl	18d0 <fread@plt>
   43f60:	ldr	r1, [r9, #52]	; 0x34
   43f64:	ldr	r1, [r1, #8]
   43f68:	ldr	r1, [r1, r8, lsl #2]
   43f6c:	strb	r6, [r1, r7]
   43f70:	ldr	r1, [sp, #40]	; 0x28
   43f74:	add	r1, r0, r1
   43f78:	str	r1, [sp, #40]	; 0x28
   43f7c:	add	r8, r8, #1
   43f80:	cmp	r8, sl
   43f84:	bcc	43f28 <ReadNextStructField+0x350>
   43f88:	b	43f90 <ReadNextStructField+0x3b8>
   43f8c:	ldr	r5, [sp, #32]
   43f90:	mul	r0, sl, r4
   43f94:	ands	r1, r0, #7
   43f98:	beq	43fbc <ReadNextStructField+0x3e4>
   43f9c:	ldr	r0, [r5]
   43fa0:	rsb	r7, r1, #8
   43fa4:	mov	r2, #1
   43fa8:	mov	r1, r7
   43fac:	bl	1a68 <fseek@plt>
   43fb0:	ldr	r0, [sp, #40]	; 0x28
   43fb4:	add	r0, r0, r7
   43fb8:	str	r0, [sp, #40]	; 0x28
   43fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43fc0:	sub	r0, fp, #36	; 0x24
   43fc4:	mov	r2, sl
   43fc8:	bl	47184 <SafeMul>
   43fcc:	cmp	r0, #0
   43fd0:	bne	43fec <ReadNextStructField+0x414>
   43fd4:	ldr	r2, [r9, #12]
   43fd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43fdc:	mov	r0, r9
   43fe0:	bl	47184 <SafeMul>
   43fe4:	cmp	r0, #0
   43fe8:	beq	44094 <ReadNextStructField+0x4bc>
   43fec:	ldr	r0, [pc, #2464]	; 44994 <ReadNextStructField+0xdbc>
   43ff0:	add	r0, pc, r0
   43ff4:	bl	19cc <Mat_Critical@plt>
   43ff8:	ldr	r7, [sp, #40]	; 0x28
   43ffc:	mov	r0, r7
   44000:	sub	sp, fp, #28
   44004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44008:	ldr	r0, [r9]
   4400c:	cmp	r0, #0
   44010:	beq	43ffc <ReadNextStructField+0x424>
   44014:	ldr	r1, [r9, #12]
   44018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4401c:	bl	17b0 <calloc@plt>
   44020:	cmp	r0, #0
   44024:	str	r0, [r9, #40]	; 0x28
   44028:	str	r0, [sp, #36]	; 0x24
   4402c:	beq	443c0 <ReadNextStructField+0x7e8>
   44030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   44034:	str	sl, [sp, #24]
   44038:	str	r7, [sp, #40]	; 0x28
   4403c:	cmp	r0, #0
   44040:	beq	443cc <ReadNextStructField+0x7f4>
   44044:	mov	r7, #0
   44048:	str	r8, [sp, #20]
   4404c:	ldr	r1, [sp, #28]
   44050:	cmp	r8, r1
   44054:	bhi	44084 <ReadNextStructField+0x4ac>
   44058:	ldr	r8, [sp, #36]	; 0x24
   4405c:	mul	r4, r7, r6
   44060:	mov	r5, #0
   44064:	add	sl, r5, r4
   44068:	bl	18b8 <Mat_VarCalloc@plt>
   4406c:	add	r5, r5, #1
   44070:	str	r0, [r8, sl, lsl #2]
   44074:	cmp	r5, r6
   44078:	bcc	44064 <ReadNextStructField+0x48c>
   4407c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   44080:	ldr	r8, [sp, #20]
   44084:	add	r7, r7, #1
   44088:	cmp	r7, r0
   4408c:	bcc	4404c <ReadNextStructField+0x474>
   44090:	b	443d0 <ReadNextStructField+0x7f8>
   44094:	ldr	r0, [r9]
   44098:	cmp	r0, #0
   4409c:	beq	43ff8 <ReadNextStructField+0x420>
   440a0:	bl	18e8 <malloc@plt>
   440a4:	cmp	r0, #0
   440a8:	str	r0, [r9, #40]	; 0x28
   440ac:	beq	43ff8 <ReadNextStructField+0x420>
   440b0:	str	r0, [sp, #36]	; 0x24
   440b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   440b8:	cmp	r0, #0
   440bc:	beq	4417c <ReadNextStructField+0x5a4>
   440c0:	mov	r6, #0
   440c4:	str	r4, [sp, #20]
   440c8:	ldr	r1, [sp, #28]
   440cc:	cmp	r4, r1
   440d0:	bhi	44100 <ReadNextStructField+0x528>
   440d4:	ldr	r4, [sp, #36]	; 0x24
   440d8:	mul	r5, r6, sl
   440dc:	mov	r7, #0
   440e0:	add	r8, r7, r5
   440e4:	bl	18b8 <Mat_VarCalloc@plt>
   440e8:	add	r7, r7, #1
   440ec:	str	r0, [r4, r8, lsl #2]
   440f0:	cmp	r7, sl
   440f4:	bcc	440e0 <ReadNextStructField+0x508>
   440f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   440fc:	ldr	r4, [sp, #20]
   44100:	add	r6, r6, #1
   44104:	cmp	r6, r0
   44108:	bcc	440c8 <ReadNextStructField+0x4f0>
   4410c:	ldr	r1, [r9, #52]	; 0x34
   44110:	ldr	r1, [r1, #8]
   44114:	cmp	r1, #0
   44118:	cmpne	r0, #0
   4411c:	beq	4417c <ReadNextStructField+0x5a4>
   44120:	mov	r8, #0
   44124:	ldr	r0, [sp, #28]
   44128:	cmp	r4, r0
   4412c:	bhi	4416c <ReadNextStructField+0x594>
   44130:	mul	r6, r8, sl
   44134:	mov	r5, #0
   44138:	ldr	r0, [r9, #52]	; 0x34
   4413c:	ldr	r0, [r0, #8]
   44140:	ldr	r0, [r0, r5, lsl #2]
   44144:	cmp	r0, #0
   44148:	beq	44160 <ReadNextStructField+0x588>
   4414c:	add	r7, r5, r6
   44150:	bl	187c <strdup@plt>
   44154:	ldr	r1, [sp, #36]	; 0x24
   44158:	ldr	r1, [r1, r7, lsl #2]
   4415c:	str	r0, [r1, #36]	; 0x24
   44160:	add	r5, r5, #1
   44164:	cmp	r5, sl
   44168:	bcc	44138 <ReadNextStructField+0x560>
   4416c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   44170:	add	r8, r8, #1
   44174:	cmp	r8, r0
   44178:	bcc	44124 <ReadNextStructField+0x54c>
   4417c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   44180:	ldr	r7, [sp, #40]	; 0x28
   44184:	cmp	r0, #0
   44188:	beq	43ffc <ReadNextStructField+0x424>
   4418c:	add	r6, sp, #48	; 0x30
   44190:	ldr	r5, [sp, #32]
   44194:	ldr	r8, [sp, #36]	; 0x24
   44198:	mov	r4, #0
   4419c:	add	r0, r6, #20
   441a0:	str	r0, [sp, #12]
   441a4:	add	r0, r6, #16
   441a8:	str	r0, [sp, #28]
   441ac:	add	r0, r6, #12
   441b0:	str	r0, [sp, #20]
   441b4:	add	r0, r6, #8
   441b8:	str	r0, [sp, #16]
   441bc:	ldr	r3, [r5]
   441c0:	mov	r0, r6
   441c4:	mov	r1, #4
   441c8:	mov	r2, #2
   441cc:	bl	18d0 <fread@plt>
   441d0:	mov	r1, r5
   441d4:	mov	r5, r0
   441d8:	ldr	r0, [r1, #20]
   441dc:	cmp	r0, #0
   441e0:	beq	441f4 <ReadNextStructField+0x61c>
   441e4:	mov	r0, r6
   441e8:	bl	1c44 <Mat_uint32Swap>
   441ec:	ldr	r0, [sp, #24]
   441f0:	bl	1c44 <Mat_uint32Swap>
   441f4:	ldr	r0, [sp, #48]	; 0x30
   441f8:	add	r7, r5, r7
   441fc:	cmp	r0, #14
   44200:	bne	4493c <ReadNextStructField+0xd64>
   44204:	ldr	r9, [sp, #52]	; 0x34
   44208:	ldr	r5, [sp, #32]
   4420c:	cmp	r9, #0
   44210:	beq	442c4 <ReadNextStructField+0x6ec>
   44214:	ldr	r3, [r5]
   44218:	mov	r0, r6
   4421c:	mov	r1, #4
   44220:	mov	r2, #6
   44224:	bl	18d0 <fread@plt>
   44228:	mov	r1, r5
   4422c:	mov	r5, r0
   44230:	ldr	r0, [r1, #20]
   44234:	cmp	r0, #0
   44238:	beq	4426c <ReadNextStructField+0x694>
   4423c:	mov	r0, r6
   44240:	bl	1c44 <Mat_uint32Swap>
   44244:	ldr	r0, [sp, #24]
   44248:	bl	1c44 <Mat_uint32Swap>
   4424c:	ldr	r0, [sp, #16]
   44250:	bl	1c44 <Mat_uint32Swap>
   44254:	ldr	r0, [sp, #20]
   44258:	bl	1c44 <Mat_uint32Swap>
   4425c:	ldr	r0, [sp, #28]
   44260:	bl	1c44 <Mat_uint32Swap>
   44264:	ldr	r0, [sp, #12]
   44268:	bl	1c44 <Mat_uint32Swap>
   4426c:	ldr	r0, [sp, #48]	; 0x30
   44270:	add	r6, r5, r7
   44274:	cmp	r0, #6
   44278:	bne	442e0 <ReadNextStructField+0x708>
   4427c:	ldr	r0, [sp, #56]	; 0x38
   44280:	ldr	r1, [r8, r4, lsl #2]
   44284:	mov	r5, #0
   44288:	and	r2, r0, #512	; 0x200
   4428c:	and	r3, r0, #1024	; 0x400
   44290:	and	r7, r0, #2048	; 0x800
   44294:	uxtb	r0, r0
   44298:	cmp	r0, #18
   4429c:	movcs	r0, r5
   442a0:	ldr	r5, [sp, #32]
   442a4:	str	r0, [r1, #16]
   442a8:	str	r7, [r1, #20]
   442ac:	str	r3, [r1, #24]
   442b0:	str	r2, [r1, #28]
   442b4:	cmp	r0, #5
   442b8:	ldreq	r0, [sp, #60]	; 0x3c
   442bc:	streq	r0, [r1]
   442c0:	b	442e8 <ReadNextStructField+0x710>
   442c4:	ldr	r0, [r8, r4, lsl #2]
   442c8:	ldr	r0, [r0, #52]	; 0x34
   442cc:	bl	181c <free@plt>
   442d0:	ldr	r0, [r8, r4, lsl #2]
   442d4:	mov	r1, #0
   442d8:	str	r1, [r0, #52]	; 0x34
   442dc:	b	443ac <ReadNextStructField+0x7d4>
   442e0:	ldr	r1, [r8, r4, lsl #2]
   442e4:	ldr	r5, [sp, #32]
   442e8:	ldr	r2, [sp, #64]	; 0x40
   442ec:	ldr	r3, [sp, #68]	; 0x44
   442f0:	mov	r0, r5
   442f4:	bl	453dc <ReadRankDims>
   442f8:	ldr	r3, [r5]
   442fc:	mov	sl, r0
   44300:	add	r0, sp, #48	; 0x30
   44304:	mov	r1, #1
   44308:	mov	r2, #8
   4430c:	bl	18d0 <fread@plt>
   44310:	mov	r1, r5
   44314:	mov	r5, r0
   44318:	ldr	r0, [r1]
   4431c:	bl	1858 <ftell@plt>
   44320:	ldr	r1, [r8, r4, lsl #2]
   44324:	cmn	r0, #1
   44328:	ldr	r2, [r1, #52]	; 0x34
   4432c:	str	r0, [r2]
   44330:	add	r2, r6, sl
   44334:	add	r7, r2, r5
   44338:	beq	44360 <ReadNextStructField+0x788>
   4433c:	ldr	r0, [r1, #16]
   44340:	cmp	r0, #1
   44344:	beq	44374 <ReadNextStructField+0x79c>
   44348:	ldr	r5, [sp, #32]
   4434c:	cmp	r0, #2
   44350:	bne	44384 <ReadNextStructField+0x7ac>
   44354:	mov	r0, r5
   44358:	bl	43bd8 <ReadNextStructField>
   4435c:	b	44380 <ReadNextStructField+0x7a8>
   44360:	ldr	r0, [pc, #1588]	; 4499c <ReadNextStructField+0xdc4>
   44364:	add	r0, pc, r0
   44368:	bl	19cc <Mat_Critical@plt>
   4436c:	ldr	r5, [sp, #32]
   44370:	b	443a8 <ReadNextStructField+0x7d0>
   44374:	ldr	r5, [sp, #32]
   44378:	mov	r0, r5
   4437c:	bl	449a4 <ReadNextCell>
   44380:	add	r7, r0, r7
   44384:	ldr	r1, [r8, r4, lsl #2]
   44388:	sub	r0, r9, sl
   4438c:	mov	r2, #0
   44390:	ldr	r1, [r1, #52]	; 0x34
   44394:	ldr	r1, [r1]
   44398:	add	r0, r0, r1
   4439c:	sub	r1, r0, #32
   443a0:	ldr	r0, [r5]
   443a4:	bl	1a68 <fseek@plt>
   443a8:	add	r6, sp, #48	; 0x30
   443ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   443b0:	add	r4, r4, #1
   443b4:	cmp	r4, r0
   443b8:	bcc	441bc <ReadNextStructField+0x5e4>
   443bc:	b	43ffc <ReadNextStructField+0x424>
   443c0:	ldr	r4, [pc, #1460]	; 4497c <ReadNextStructField+0xda4>
   443c4:	add	r4, pc, r4
   443c8:	b	43ef0 <ReadNextStructField+0x318>
   443cc:	mov	r0, #0
   443d0:	ldr	r1, [r9, #52]	; 0x34
   443d4:	ldr	r1, [r1, #8]
   443d8:	cmp	r1, #0
   443dc:	cmpne	r0, #0
   443e0:	beq	44440 <ReadNextStructField+0x868>
   443e4:	mov	sl, #0
   443e8:	ldr	r0, [sp, #28]
   443ec:	cmp	r8, r0
   443f0:	bhi	44430 <ReadNextStructField+0x858>
   443f4:	mul	r4, sl, r6
   443f8:	mov	r5, #0
   443fc:	ldr	r0, [r9, #52]	; 0x34
   44400:	ldr	r0, [r0, #8]
   44404:	ldr	r0, [r0, r5, lsl #2]
   44408:	cmp	r0, #0
   4440c:	beq	44424 <ReadNextStructField+0x84c>
   44410:	add	r7, r5, r4
   44414:	bl	187c <strdup@plt>
   44418:	ldr	r1, [sp, #36]	; 0x24
   4441c:	ldr	r1, [r1, r7, lsl #2]
   44420:	str	r0, [r1, #36]	; 0x24
   44424:	add	r5, r5, #1
   44428:	cmp	r5, r6
   4442c:	bcc	443fc <ReadNextStructField+0x824>
   44430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   44434:	add	sl, sl, #1
   44438:	cmp	sl, r0
   4443c:	bcc	443e8 <ReadNextStructField+0x810>
   44440:	ldr	r0, [fp, #-36]	; 0xffffffdc
   44444:	cmp	r0, #0
   44448:	beq	43ff8 <ReadNextStructField+0x420>
   4444c:	ldr	r7, [sp, #40]	; 0x28
   44450:	ldr	sl, [sp, #24]
   44454:	add	r5, sp, #48	; 0x30
   44458:	mov	r8, #0
   4445c:	add	r0, r5, #12
   44460:	str	r0, [sp, #20]
   44464:	add	r0, r5, #8
   44468:	str	r0, [sp, #28]
   4446c:	ldr	r6, [sp, #32]
   44470:	mov	r1, r9
   44474:	mov	r2, r5
   44478:	mov	r0, r6
   4447c:	bl	2700 <InflateVarTag>
   44480:	mov	r4, r0
   44484:	ldr	r0, [r6, #20]
   44488:	cmp	r0, #0
   4448c:	beq	444a0 <ReadNextStructField+0x8c8>
   44490:	mov	r0, r5
   44494:	bl	1c44 <Mat_uint32Swap>
   44498:	mov	r0, sl
   4449c:	bl	1c44 <Mat_uint32Swap>
   444a0:	ldr	r0, [sp, #48]	; 0x30
   444a4:	add	r7, r4, r7
   444a8:	cmp	r0, #14
   444ac:	bne	4457c <ReadNextStructField+0x9a4>
   444b0:	ldr	r4, [sp, #36]	; 0x24
   444b4:	ldr	sl, [sp, #52]	; 0x34
   444b8:	ldr	r0, [r4, r8, lsl #2]
   444bc:	cmp	sl, #0
   444c0:	beq	445a4 <ReadNextStructField+0x9cc>
   444c4:	ldr	r6, [sp, #32]
   444c8:	mov	r1, #1
   444cc:	add	r5, sp, #48	; 0x30
   444d0:	str	r1, [r0, #48]	; 0x30
   444d4:	mov	r1, r9
   444d8:	mov	r2, r5
   444dc:	mov	r0, r6
   444e0:	bl	2854 <InflateArrayFlags>
   444e4:	mov	r4, r0
   444e8:	ldr	r0, [r6, #20]
   444ec:	cmp	r0, #0
   444f0:	beq	44514 <ReadNextStructField+0x93c>
   444f4:	mov	r0, r5
   444f8:	bl	1c44 <Mat_uint32Swap>
   444fc:	ldr	r0, [sp, #24]
   44500:	bl	1c44 <Mat_uint32Swap>
   44504:	ldr	r0, [sp, #28]
   44508:	bl	1c44 <Mat_uint32Swap>
   4450c:	ldr	r0, [sp, #20]
   44510:	bl	1c44 <Mat_uint32Swap>
   44514:	ldr	r1, [sp, #48]	; 0x30
   44518:	add	r7, r4, r7
   4451c:	sub	r4, sl, #16
   44520:	cmp	r1, #6
   44524:	bne	445bc <ReadNextStructField+0x9e4>
   44528:	ldr	r0, [sp, #36]	; 0x24
   4452c:	mov	r5, r7
   44530:	mov	r6, #0
   44534:	ldr	r1, [r0, r8, lsl #2]
   44538:	ldr	r0, [sp, #56]	; 0x38
   4453c:	and	r2, r0, #512	; 0x200
   44540:	and	r3, r0, #1024	; 0x400
   44544:	and	r7, r0, #2048	; 0x800
   44548:	uxtb	r0, r0
   4454c:	cmp	r0, #18
   44550:	movcs	r0, r6
   44554:	cmp	r0, #5
   44558:	str	r0, [r1, #16]
   4455c:	str	r7, [r1, #20]
   44560:	str	r3, [r1, #24]
   44564:	str	r2, [r1, #28]
   44568:	bne	445f0 <ReadNextStructField+0xa18>
   4456c:	ldr	r0, [sp, #60]	; 0x3c
   44570:	mov	r7, r5
   44574:	str	r0, [r1]
   44578:	b	445fc <ReadNextStructField+0xa24>
   4457c:	ldr	r4, [sp, #36]	; 0x24
   44580:	ldr	r0, [r4, r8, lsl #2]
   44584:	bl	1930 <Mat_VarFree@plt>
   44588:	mov	r0, #0
   4458c:	mov	r1, r8
   44590:	str	r0, [r4, r8, lsl #2]
   44594:	ldr	r0, [pc, #996]	; 44980 <ReadNextStructField+0xda8>
   44598:	add	r0, pc, r0
   4459c:	bl	19cc <Mat_Critical@plt>
   445a0:	b	44928 <ReadNextStructField+0xd50>
   445a4:	ldr	r0, [r0, #52]	; 0x34
   445a8:	bl	181c <free@plt>
   445ac:	ldr	r0, [r4, r8, lsl #2]
   445b0:	mov	r1, #0
   445b4:	str	r1, [r0, #52]	; 0x34
   445b8:	b	44920 <ReadNextStructField+0xd48>
   445bc:	ldr	r0, [pc, #960]	; 44984 <ReadNextStructField+0xdac>
   445c0:	add	r0, pc, r0
   445c4:	bl	19cc <Mat_Critical@plt>
   445c8:	ldr	r0, [r9, #52]	; 0x34
   445cc:	mov	r2, r4
   445d0:	ldr	r1, [r0, #12]
   445d4:	ldr	r0, [sp, #32]
   445d8:	bl	2340 <InflateSkip>
   445dc:	add	r7, r0, r7
   445e0:	ldr	r0, [sp, #36]	; 0x24
   445e4:	ldr	r0, [r0, r8, lsl #2]
   445e8:	ldr	r0, [r0, #16]
   445ec:	b	445f4 <ReadNextStructField+0xa1c>
   445f0:	mov	r7, r5
   445f4:	cmp	r0, #17
   445f8:	beq	44908 <ReadNextStructField+0xd30>
   445fc:	ldr	r4, [sp, #32]
   44600:	mov	r0, #0
   44604:	mov	r1, r9
   44608:	add	r2, sp, #48	; 0x30
   4460c:	mov	r3, #64	; 0x40
   44610:	str	r0, [sp, #44]	; 0x2c
   44614:	add	r0, sp, #44	; 0x2c
   44618:	str	r0, [sp]
   4461c:	mov	r0, r4
   44620:	bl	29a8 <InflateRankDims>
   44624:	mov	r5, r0
   44628:	ldr	r0, [sp, #44]	; 0x2c
   4462c:	mov	r1, #1
   44630:	cmp	r0, #0
   44634:	bne	44644 <ReadNextStructField+0xa6c>
   44638:	ldr	r0, [sp, #28]
   4463c:	mov	r1, #0
   44640:	str	r0, [sp, #44]	; 0x2c
   44644:	ldr	r0, [r4, #20]
   44648:	str	r1, [sp, #40]	; 0x28
   4464c:	cmp	r0, #0
   44650:	beq	44664 <ReadNextStructField+0xa8c>
   44654:	add	r0, sp, #48	; 0x30
   44658:	bl	1c44 <Mat_uint32Swap>
   4465c:	ldr	r0, [sp, #24]
   44660:	bl	1c44 <Mat_uint32Swap>
   44664:	ldr	r0, [sp, #48]	; 0x30
   44668:	sub	r6, sl, #24
   4466c:	cmp	r0, #5
   44670:	bne	4470c <ReadNextStructField+0xb34>
   44674:	str	r5, [sp, #12]
   44678:	str	r7, [sp, #16]
   4467c:	ldr	r5, [sp, #36]	; 0x24
   44680:	ldr	r7, [sp, #52]	; 0x34
   44684:	asr	r0, r7, #31
   44688:	ldr	r4, [r5, r8, lsl #2]
   4468c:	add	r0, r7, r0, lsr #30
   44690:	asr	r1, r0, #2
   44694:	bic	r0, r0, #3
   44698:	str	r1, [r4, #4]
   4469c:	bl	18e8 <malloc@plt>
   446a0:	str	r0, [r4, #32]
   446a4:	ldr	r2, [sp, #32]
   446a8:	sub	r6, r6, r7
   446ac:	add	sl, sp, #48	; 0x30
   446b0:	ldr	r1, [r5, r8, lsl #2]
   446b4:	ldr	r2, [r2, #20]
   446b8:	ldr	r0, [r1, #4]
   446bc:	cmp	r2, #0
   446c0:	beq	44714 <ReadNextStructField+0xb3c>
   446c4:	ldr	r5, [sp, #12]
   446c8:	cmp	r0, #1
   446cc:	blt	44744 <ReadNextStructField+0xb6c>
   446d0:	mov	r7, #0
   446d4:	mov	r4, #0
   446d8:	ldr	r0, [sp, #44]	; 0x2c
   446dc:	add	r0, r0, r7
   446e0:	bl	1c44 <Mat_uint32Swap>
   446e4:	ldr	r1, [sp, #36]	; 0x24
   446e8:	add	r7, r7, #4
   446ec:	ldr	r1, [r1, r8, lsl #2]
   446f0:	ldr	r2, [r1, #32]
   446f4:	str	r0, [r2, r4, lsl #2]
   446f8:	add	r4, r4, #1
   446fc:	ldr	r0, [r1, #4]
   44700:	cmp	r4, r0
   44704:	blt	446d8 <ReadNextStructField+0xb00>
   44708:	b	44744 <ReadNextStructField+0xb6c>
   4470c:	add	sl, sp, #48	; 0x30
   44710:	b	44750 <ReadNextStructField+0xb78>
   44714:	ldr	r5, [sp, #12]
   44718:	cmp	r0, #1
   4471c:	blt	44744 <ReadNextStructField+0xb6c>
   44720:	ldr	r2, [r1, #32]
   44724:	ldr	r7, [sp, #44]	; 0x2c
   44728:	mov	r3, #0
   4472c:	ldr	r0, [r7, r3, lsl #2]
   44730:	str	r0, [r2, r3, lsl #2]
   44734:	add	r3, r3, #1
   44738:	ldr	r0, [r1, #4]
   4473c:	cmp	r3, r0
   44740:	blt	4472c <ReadNextStructField+0xb54>
   44744:	ldr	r7, [sp, #16]
   44748:	tst	r0, #1
   4474c:	subne	r6, r6, #4
   44750:	ldr	r0, [sp, #40]	; 0x28
   44754:	add	r7, r5, r7
   44758:	cmp	r0, #0
   4475c:	beq	44768 <ReadNextStructField+0xb90>
   44760:	ldr	r0, [sp, #44]	; 0x2c
   44764:	bl	181c <free@plt>
   44768:	ldr	r0, [sp, #32]
   4476c:	mov	r1, r9
   44770:	mov	r2, sl
   44774:	bl	2c90 <InflateVarNameTag>
   44778:	mov	r4, r0
   4477c:	mov	r0, #1
   44780:	mov	r1, #56	; 0x38
   44784:	bl	17b0 <calloc@plt>
   44788:	ldr	r5, [sp, #36]	; 0x24
   4478c:	add	r7, r7, r4
   44790:	sub	r4, r6, #8
   44794:	ldr	r1, [r5, r8, lsl #2]
   44798:	ldr	r1, [r1, #52]	; 0x34
   4479c:	str	r0, [r1, #12]
   447a0:	ldr	r0, [r5, r8, lsl #2]
   447a4:	ldr	r0, [r0, #52]	; 0x34
   447a8:	ldr	r0, [r0, #12]
   447ac:	cmp	r0, #0
   447b0:	beq	447e0 <ReadNextStructField+0xc08>
   447b4:	ldr	r1, [r9, #52]	; 0x34
   447b8:	ldr	r1, [r1, #12]
   447bc:	bl	1960 <inflateCopy@plt>
   447c0:	cmp	r0, #0
   447c4:	beq	447f0 <ReadNextStructField+0xc18>
   447c8:	bl	18a0 <zError@plt>
   447cc:	mov	r1, r0
   447d0:	ldr	r0, [pc, #436]	; 4498c <ReadNextStructField+0xdb4>
   447d4:	add	r0, pc, r0
   447d8:	bl	19cc <Mat_Critical@plt>
   447dc:	b	44908 <ReadNextStructField+0xd30>
   447e0:	ldr	r0, [pc, #424]	; 44990 <ReadNextStructField+0xdb8>
   447e4:	add	r0, pc, r0
   447e8:	bl	19cc <Mat_Critical@plt>
   447ec:	b	44908 <ReadNextStructField+0xd30>
   447f0:	ldr	r0, [sp, #32]
   447f4:	ldr	r0, [r0]
   447f8:	bl	1858 <ftell@plt>
   447fc:	ldr	r1, [r5, r8, lsl #2]
   44800:	cmn	r0, #1
   44804:	ldr	r2, [r1, #52]	; 0x34
   44808:	str	r0, [r2]
   4480c:	beq	44848 <ReadNextStructField+0xc70>
   44810:	ldr	r3, [r9, #52]	; 0x34
   44814:	ldr	r3, [r3, #12]
   44818:	ldr	r3, [r3, #4]
   4481c:	sub	r0, r0, r3
   44820:	str	r0, [r2]
   44824:	ldr	r0, [r1, #16]
   44828:	cmp	r0, #1
   4482c:	beq	44858 <ReadNextStructField+0xc80>
   44830:	cmp	r0, #2
   44834:	bne	4486c <ReadNextStructField+0xc94>
   44838:	ldr	r6, [sp, #32]
   4483c:	mov	r0, r6
   44840:	bl	43bd8 <ReadNextStructField>
   44844:	b	44864 <ReadNextStructField+0xc8c>
   44848:	ldr	r0, [pc, #312]	; 44988 <ReadNextStructField+0xdb0>
   4484c:	add	r0, pc, r0
   44850:	bl	19cc <Mat_Critical@plt>
   44854:	b	448bc <ReadNextStructField+0xce4>
   44858:	ldr	r6, [sp, #32]
   4485c:	mov	r0, r6
   44860:	bl	449a4 <ReadNextCell>
   44864:	add	r7, r0, r7
   44868:	b	448a4 <ReadNextStructField+0xccc>
   4486c:	cmp	r4, #32768	; 0x8000
   44870:	bgt	448a0 <ReadNextStructField+0xcc8>
   44874:	ldr	r6, [sp, #32]
   44878:	mov	r0, r6
   4487c:	bl	204b0 <Mat_VarRead5>
   44880:	ldr	r0, [r5, r8, lsl #2]
   44884:	ldr	r1, [r0, #40]	; 0x28
   44888:	ldr	r0, [r0, #52]	; 0x34
   4488c:	str	r1, [r0, #16]
   44890:	mov	r1, #0
   44894:	ldr	r0, [r5, r8, lsl #2]
   44898:	str	r1, [r0, #40]	; 0x28
   4489c:	b	448a4 <ReadNextStructField+0xccc>
   448a0:	ldr	r6, [sp, #32]
   448a4:	ldr	r0, [r5, r8, lsl #2]
   448a8:	mov	r2, #0
   448ac:	ldr	r0, [r0, #52]	; 0x34
   448b0:	ldr	r1, [r0]
   448b4:	ldr	r0, [r6]
   448b8:	bl	1a68 <fseek@plt>
   448bc:	ldr	r1, [r5, r8, lsl #2]
   448c0:	ldr	r0, [r1, #52]	; 0x34
   448c4:	ldr	r2, [r0, #16]
   448c8:	cmp	r2, #0
   448cc:	bne	448e0 <ReadNextStructField+0xd08>
   448d0:	ldr	r1, [r1, #16]
   448d4:	sub	r1, r1, #1
   448d8:	cmp	r1, #1
   448dc:	bhi	44908 <ReadNextStructField+0xd30>
   448e0:	ldr	r0, [r0, #12]
   448e4:	bl	1954 <inflateEnd@plt>
   448e8:	ldr	r0, [r5, r8, lsl #2]
   448ec:	ldr	r0, [r0, #52]	; 0x34
   448f0:	ldr	r0, [r0, #12]
   448f4:	bl	181c <free@plt>
   448f8:	ldr	r0, [r5, r8, lsl #2]
   448fc:	mov	r1, #0
   44900:	ldr	r0, [r0, #52]	; 0x34
   44904:	str	r1, [r0, #12]
   44908:	ldr	r0, [r9, #52]	; 0x34
   4490c:	mov	r2, r4
   44910:	ldr	r1, [r0, #12]
   44914:	ldr	r0, [sp, #32]
   44918:	bl	2340 <InflateSkip>
   4491c:	add	r7, r0, r7
   44920:	ldr	sl, [sp, #24]
   44924:	add	r5, sp, #48	; 0x30
   44928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4492c:	add	r8, r8, #1
   44930:	cmp	r8, r0
   44934:	bcc	4446c <ReadNextStructField+0x894>
   44938:	b	43ffc <ReadNextStructField+0x424>
   4493c:	ldr	r0, [r8, r4, lsl #2]
   44940:	bl	1930 <Mat_VarFree@plt>
   44944:	mov	r0, #0
   44948:	str	r0, [r8, r4, lsl #2]
   4494c:	ldr	r0, [sp, #32]
   44950:	ldr	r0, [r0]
   44954:	bl	1858 <ftell@plt>
   44958:	mov	r2, r0
   4495c:	ldr	r0, [pc, #52]	; 44998 <ReadNextStructField+0xdc0>
   44960:	mov	r1, r4
   44964:	add	r0, pc, r0
   44968:	bl	19cc <Mat_Critical@plt>
   4496c:	b	43ffc <ReadNextStructField+0x424>
   44970:	.word	0x00007fac
   44974:	.word	0x0000804d
   44978:	.word	0x00007ce8
   4497c:	.word	0x00007814
   44980:	.word	0x0000789a
   44984:	.word	0x000078a2
   44988:	.word	0x000072e0
   4498c:	.word	0x0000758f
   44990:	.word	0x000076ab
   44994:	.word	0x00007bc8
   44998:	.word	0x00007544
   4499c:	.word	0x000077c8
   449a0:	.word	0x00008041

000449a4 <ReadNextCell>:
   449a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   449a8:	add	fp, sp, #28
   449ac:	sub	sp, sp, #116	; 0x74
   449b0:	mov	r6, r1
   449b4:	mov	r4, r0
   449b8:	mov	r0, #1
   449bc:	sub	r1, fp, #32
   449c0:	str	r0, [fp, #-32]	; 0xffffffe0
   449c4:	mov	r0, r6
   449c8:	bl	47128 <SafeMulDims>
   449cc:	cmp	r0, #0
   449d0:	bne	449f4 <ReadNextCell+0x50>
   449d4:	mov	r0, #4
   449d8:	mov	r2, #4
   449dc:	str	r0, [r6, #12]
   449e0:	mov	r0, r6
   449e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   449e8:	bl	47184 <SafeMul>
   449ec:	cmp	r0, #0
   449f0:	beq	44a10 <ReadNextCell+0x6c>
   449f4:	ldr	r0, [pc, #2484]	; 453b0 <ReadNextCell+0xa0c>
   449f8:	add	r0, pc, r0
   449fc:	bl	19cc <Mat_Critical@plt>
   44a00:	mov	r9, #0
   44a04:	mov	r0, r9
   44a08:	sub	sp, fp, #28
   44a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44a10:	ldr	r7, [fp, #-32]	; 0xffffffe0
   44a14:	ldr	r1, [r6, #12]
   44a18:	mov	r0, r7
   44a1c:	bl	17b0 <calloc@plt>
   44a20:	cmp	r0, #0
   44a24:	str	r0, [r6, #40]	; 0x28
   44a28:	str	r0, [sp, #36]	; 0x24
   44a2c:	beq	45070 <ReadNextCell+0x6cc>
   44a30:	ldr	r0, [r6, #48]	; 0x30
   44a34:	str	r4, [sp, #40]	; 0x28
   44a38:	cmp	r0, #1
   44a3c:	bne	45090 <ReadNextCell+0x6ec>
   44a40:	vmov.i32	q8, #0	; 0x00000000
   44a44:	add	r2, sp, #48	; 0x30
   44a48:	mov	r0, #48	; 0x30
   44a4c:	cmp	r7, #0
   44a50:	mov	r1, r2
   44a54:	vst1.64	{d16-d17}, [r1], r0
   44a58:	add	r0, r2, #32
   44a5c:	vst1.64	{d16-d17}, [r0]
   44a60:	add	r0, r2, #16
   44a64:	vst1.64	{d16-d17}, [r1]
   44a68:	vst1.64	{d16-d17}, [r0]
   44a6c:	beq	44a00 <ReadNextCell+0x5c>
   44a70:	ldr	r5, [sp, #36]	; 0x24
   44a74:	add	r0, r2, #12
   44a78:	mov	r9, #0
   44a7c:	mov	r8, #0
   44a80:	str	r6, [sp, #20]
   44a84:	str	r0, [sp, #12]
   44a88:	add	r0, r2, #8
   44a8c:	str	r0, [sp, #16]
   44a90:	orr	r0, r2, #4
   44a94:	str	r0, [sp, #32]
   44a98:	bl	18b8 <Mat_VarCalloc@plt>
   44a9c:	mov	sl, r5
   44aa0:	cmp	r0, #0
   44aa4:	str	r0, [sl, r8, lsl #2]!
   44aa8:	beq	44bd0 <ReadNextCell+0x22c>
   44aac:	mov	r0, #0
   44ab0:	mov	r7, r4
   44ab4:	mov	r1, r6
   44ab8:	str	r0, [sp, #52]	; 0x34
   44abc:	str	r0, [sp, #48]	; 0x30
   44ac0:	mov	r0, r4
   44ac4:	add	r4, sp, #48	; 0x30
   44ac8:	mov	r2, r4
   44acc:	bl	2700 <InflateVarTag>
   44ad0:	mov	r5, r0
   44ad4:	ldr	r0, [r7, #20]
   44ad8:	cmp	r0, #0
   44adc:	beq	44af0 <ReadNextCell+0x14c>
   44ae0:	mov	r0, r4
   44ae4:	bl	1c44 <Mat_uint32Swap>
   44ae8:	ldr	r0, [sp, #32]
   44aec:	bl	1c44 <Mat_uint32Swap>
   44af0:	ldr	r7, [sp, #52]	; 0x34
   44af4:	add	r9, r5, r9
   44af8:	cmp	r7, #0
   44afc:	beq	44be4 <ReadNextCell+0x240>
   44b00:	ldr	r1, [sp, #48]	; 0x30
   44b04:	ldr	r0, [sl]
   44b08:	ldr	r2, [sp, #40]	; 0x28
   44b0c:	cmp	r1, #14
   44b10:	bne	45364 <ReadNextCell+0x9c0>
   44b14:	mov	r1, #1
   44b18:	add	r4, sp, #48	; 0x30
   44b1c:	str	r1, [r0, #48]	; 0x30
   44b20:	mov	r1, r6
   44b24:	mov	r0, r2
   44b28:	mov	r6, r2
   44b2c:	mov	r2, r4
   44b30:	bl	2854 <InflateArrayFlags>
   44b34:	mov	r5, r0
   44b38:	ldr	r0, [r6, #20]
   44b3c:	cmp	r0, #0
   44b40:	beq	44b64 <ReadNextCell+0x1c0>
   44b44:	mov	r0, r4
   44b48:	bl	1c44 <Mat_uint32Swap>
   44b4c:	ldr	r0, [sp, #32]
   44b50:	bl	1c44 <Mat_uint32Swap>
   44b54:	ldr	r0, [sp, #16]
   44b58:	bl	1c44 <Mat_uint32Swap>
   44b5c:	ldr	r0, [sp, #12]
   44b60:	bl	1c44 <Mat_uint32Swap>
   44b64:	ldr	r1, [sp, #48]	; 0x30
   44b68:	add	r5, r5, r9
   44b6c:	sub	r9, r7, #16
   44b70:	cmp	r1, #6
   44b74:	bne	44c08 <ReadNextCell+0x264>
   44b78:	ldr	r0, [sp, #56]	; 0x38
   44b7c:	mov	ip, r5
   44b80:	mov	r6, #0
   44b84:	ldr	r1, [sl]
   44b88:	ldr	r4, [sp, #40]	; 0x28
   44b8c:	and	r2, r0, #512	; 0x200
   44b90:	and	r3, r0, #1024	; 0x400
   44b94:	and	r5, r0, #2048	; 0x800
   44b98:	uxtb	r0, r0
   44b9c:	cmp	r0, #18
   44ba0:	movcs	r0, r6
   44ba4:	ldr	r6, [sp, #20]
   44ba8:	cmp	r0, #5
   44bac:	str	r0, [r1, #16]
   44bb0:	str	r5, [r1, #20]
   44bb4:	str	r3, [r1, #24]
   44bb8:	str	r2, [r1, #28]
   44bbc:	bne	44c40 <ReadNextCell+0x29c>
   44bc0:	ldr	r0, [sp, #60]	; 0x3c
   44bc4:	mov	r5, ip
   44bc8:	str	r0, [r1]
   44bcc:	b	44c4c <ReadNextCell+0x2a8>
   44bd0:	ldr	r0, [pc, #2016]	; 453b8 <ReadNextCell+0xa14>
   44bd4:	mov	r1, r8
   44bd8:	add	r0, pc, r0
   44bdc:	bl	19cc <Mat_Critical@plt>
   44be0:	b	4505c <ReadNextCell+0x6b8>
   44be4:	ldr	r0, [sl]
   44be8:	ldr	r0, [r0, #52]	; 0x34
   44bec:	bl	181c <free@plt>
   44bf0:	ldr	r0, [sl]
   44bf4:	ldr	r5, [sp, #36]	; 0x24
   44bf8:	ldr	r4, [sp, #40]	; 0x28
   44bfc:	mov	r1, #0
   44c00:	str	r1, [r0, #52]	; 0x34
   44c04:	b	4505c <ReadNextCell+0x6b8>
   44c08:	ldr	r0, [pc, #1968]	; 453c0 <ReadNextCell+0xa1c>
   44c0c:	add	r0, pc, r0
   44c10:	bl	19cc <Mat_Critical@plt>
   44c14:	ldr	r6, [sp, #20]
   44c18:	ldr	r4, [sp, #40]	; 0x28
   44c1c:	mov	r2, r9
   44c20:	ldr	r0, [r6, #52]	; 0x34
   44c24:	ldr	r1, [r0, #12]
   44c28:	mov	r0, r4
   44c2c:	bl	2340 <InflateSkip>
   44c30:	add	r5, r0, r5
   44c34:	ldr	r0, [sl]
   44c38:	ldr	r0, [r0, #16]
   44c3c:	b	44c44 <ReadNextCell+0x2a0>
   44c40:	mov	r5, ip
   44c44:	cmp	r0, #17
   44c48:	beq	45040 <ReadNextCell+0x69c>
   44c4c:	mov	r0, #0
   44c50:	str	r5, [sp, #24]
   44c54:	mov	r5, r4
   44c58:	mov	r1, r6
   44c5c:	mov	r3, #64	; 0x40
   44c60:	str	r0, [sp, #44]	; 0x2c
   44c64:	add	r0, sp, #44	; 0x2c
   44c68:	str	r0, [sp]
   44c6c:	mov	r0, r4
   44c70:	add	r4, sp, #48	; 0x30
   44c74:	mov	r2, r4
   44c78:	bl	29a8 <InflateRankDims>
   44c7c:	mov	r9, r0
   44c80:	ldr	r0, [sp, #44]	; 0x2c
   44c84:	mov	r1, #1
   44c88:	cmp	r0, #0
   44c8c:	bne	44c9c <ReadNextCell+0x2f8>
   44c90:	ldr	r0, [sp, #16]
   44c94:	mov	r1, #0
   44c98:	str	r0, [sp, #44]	; 0x2c
   44c9c:	ldr	r0, [r5, #20]
   44ca0:	cmp	r0, #0
   44ca4:	beq	44cc0 <ReadNextCell+0x31c>
   44ca8:	mov	r0, r4
   44cac:	mov	r5, r1
   44cb0:	bl	1c44 <Mat_uint32Swap>
   44cb4:	ldr	r0, [sp, #32]
   44cb8:	bl	1c44 <Mat_uint32Swap>
   44cbc:	mov	r1, r5
   44cc0:	ldr	r0, [sp, #48]	; 0x30
   44cc4:	sub	r7, r7, #24
   44cc8:	cmp	r0, #5
   44ccc:	bne	44d58 <ReadNextCell+0x3b4>
   44cd0:	ldr	r4, [sp, #52]	; 0x34
   44cd4:	ldr	r5, [sl]
   44cd8:	stmib	sp, {r1, r9}
   44cdc:	asr	r0, r4, #31
   44ce0:	add	r0, r4, r0, lsr #30
   44ce4:	asr	r1, r0, #2
   44ce8:	bic	r0, r0, #3
   44cec:	str	r1, [r5, #4]
   44cf0:	bl	18e8 <malloc@plt>
   44cf4:	str	r0, [r5, #32]
   44cf8:	ldr	r3, [sp, #40]	; 0x28
   44cfc:	sub	r7, r7, r4
   44d00:	ldr	r1, [sl]
   44d04:	mov	r4, r7
   44d08:	ldr	r2, [r3, #20]
   44d0c:	ldr	r0, [r1, #4]
   44d10:	cmp	r2, #0
   44d14:	beq	44d64 <ReadNextCell+0x3c0>
   44d18:	cmp	r0, #1
   44d1c:	blt	44d90 <ReadNextCell+0x3ec>
   44d20:	mov	r5, #0
   44d24:	mov	r9, #0
   44d28:	ldr	r0, [sp, #44]	; 0x2c
   44d2c:	add	r0, r0, r5
   44d30:	bl	1c44 <Mat_uint32Swap>
   44d34:	ldr	r1, [sl]
   44d38:	add	r5, r5, #4
   44d3c:	ldr	r2, [r1, #32]
   44d40:	str	r0, [r2, r9, lsl #2]
   44d44:	add	r9, r9, #1
   44d48:	ldr	r0, [r1, #4]
   44d4c:	cmp	r9, r0
   44d50:	blt	44d28 <ReadNextCell+0x384>
   44d54:	b	44d90 <ReadNextCell+0x3ec>
   44d58:	ldr	r5, [sp, #24]
   44d5c:	str	r7, [sp, #28]
   44d60:	b	44da8 <ReadNextCell+0x404>
   44d64:	cmp	r0, #1
   44d68:	blt	44d90 <ReadNextCell+0x3ec>
   44d6c:	ldr	r2, [r1, #32]
   44d70:	ldr	r7, [sp, #44]	; 0x2c
   44d74:	mov	r3, #0
   44d78:	ldr	r0, [r7, r3, lsl #2]
   44d7c:	str	r0, [r2, r3, lsl #2]
   44d80:	add	r3, r3, #1
   44d84:	ldr	r0, [r1, #4]
   44d88:	cmp	r3, r0
   44d8c:	blt	44d78 <ReadNextCell+0x3d4>
   44d90:	ldr	r5, [sp, #24]
   44d94:	tst	r0, #1
   44d98:	ldmib	sp, {r1, r9}
   44d9c:	subne	r4, r4, #4
   44da0:	str	r4, [sp, #28]
   44da4:	add	r4, sp, #48	; 0x30
   44da8:	cmp	r1, #0
   44dac:	beq	44db8 <ReadNextCell+0x414>
   44db0:	ldr	r0, [sp, #44]	; 0x2c
   44db4:	bl	181c <free@plt>
   44db8:	ldr	r7, [sp, #40]	; 0x28
   44dbc:	mov	r1, r6
   44dc0:	mov	r2, r4
   44dc4:	add	r9, r9, r5
   44dc8:	mov	r0, r7
   44dcc:	bl	2c90 <InflateVarNameTag>
   44dd0:	mov	r5, r0
   44dd4:	ldr	r0, [r7, #20]
   44dd8:	cmp	r0, #0
   44ddc:	beq	44df0 <ReadNextCell+0x44c>
   44de0:	mov	r0, r4
   44de4:	bl	1c44 <Mat_uint32Swap>
   44de8:	ldr	r0, [sp, #32]
   44dec:	bl	1c44 <Mat_uint32Swap>
   44df0:	ldr	r7, [sp, #52]	; 0x34
   44df4:	ldr	r0, [sp, #28]
   44df8:	add	r5, r9, r5
   44dfc:	sub	r9, r0, #8
   44e00:	cmp	r7, #0
   44e04:	beq	44e70 <ReadNextCell+0x4cc>
   44e08:	ldr	r0, [sp, #48]	; 0x30
   44e0c:	cmp	r0, #1
   44e10:	bne	44e78 <ReadNextCell+0x4d4>
   44e14:	ands	r0, r7, #7
   44e18:	sub	r0, r7, r0
   44e1c:	addne	r7, r0, #8
   44e20:	add	r0, r7, #1
   44e24:	bl	18e8 <malloc@plt>
   44e28:	ldr	r1, [sl]
   44e2c:	ldr	r4, [sp, #40]	; 0x28
   44e30:	sub	r9, r9, r7
   44e34:	str	r0, [r1, #36]	; 0x24
   44e38:	ldr	r0, [sl]
   44e3c:	ldr	r2, [r0, #36]	; 0x24
   44e40:	cmp	r2, #0
   44e44:	beq	44ed8 <ReadNextCell+0x534>
   44e48:	mov	r0, r4
   44e4c:	mov	r1, r6
   44e50:	mov	r3, r7
   44e54:	bl	2de4 <InflateVarName>
   44e58:	ldr	r1, [sl]
   44e5c:	mov	r2, #0
   44e60:	add	r5, r0, r5
   44e64:	ldr	r1, [r1, #36]	; 0x24
   44e68:	strb	r2, [r1, r7]
   44e6c:	b	44ed8 <ReadNextCell+0x534>
   44e70:	ldr	r4, [sp, #40]	; 0x28
   44e74:	b	44ed8 <ReadNextCell+0x534>
   44e78:	ldr	r4, [sp, #40]	; 0x28
   44e7c:	lsr	r7, r0, #16
   44e80:	cmp	r7, #4
   44e84:	bhi	44ed8 <ReadNextCell+0x534>
   44e88:	uxth	r0, r0
   44e8c:	cmp	r0, #1
   44e90:	bne	44ed8 <ReadNextCell+0x534>
   44e94:	cmp	r7, #0
   44e98:	beq	44ed8 <ReadNextCell+0x534>
   44e9c:	add	r0, r7, #1
   44ea0:	bl	18e8 <malloc@plt>
   44ea4:	ldr	r1, [sl]
   44ea8:	str	r0, [r1, #36]	; 0x24
   44eac:	ldr	r0, [sl]
   44eb0:	ldr	r0, [r0, #36]	; 0x24
   44eb4:	cmp	r0, #0
   44eb8:	beq	44ed8 <ReadNextCell+0x534>
   44ebc:	ldr	r1, [sp, #32]
   44ec0:	mov	r2, r7
   44ec4:	bl	1834 <memcpy@plt>
   44ec8:	ldr	r0, [sl]
   44ecc:	mov	r1, #0
   44ed0:	ldr	r0, [r0, #36]	; 0x24
   44ed4:	strb	r1, [r0, r7]
   44ed8:	mov	r0, #1
   44edc:	mov	r1, #56	; 0x38
   44ee0:	bl	17b0 <calloc@plt>
   44ee4:	ldr	r1, [sl]
   44ee8:	ldr	r1, [r1, #52]	; 0x34
   44eec:	str	r0, [r1, #12]
   44ef0:	ldr	r0, [sl]
   44ef4:	ldr	r0, [r0, #52]	; 0x34
   44ef8:	ldr	r0, [r0, #12]
   44efc:	cmp	r0, #0
   44f00:	beq	44f30 <ReadNextCell+0x58c>
   44f04:	ldr	r1, [r6, #52]	; 0x34
   44f08:	ldr	r1, [r1, #12]
   44f0c:	bl	1960 <inflateCopy@plt>
   44f10:	cmp	r0, #0
   44f14:	beq	44f40 <ReadNextCell+0x59c>
   44f18:	bl	18a0 <zError@plt>
   44f1c:	mov	r1, r0
   44f20:	ldr	r0, [pc, #1184]	; 453c8 <ReadNextCell+0xa24>
   44f24:	add	r0, pc, r0
   44f28:	bl	19cc <Mat_Critical@plt>
   44f2c:	b	45040 <ReadNextCell+0x69c>
   44f30:	ldr	r0, [pc, #1172]	; 453cc <ReadNextCell+0xa28>
   44f34:	add	r0, pc, r0
   44f38:	bl	19cc <Mat_Critical@plt>
   44f3c:	b	45040 <ReadNextCell+0x69c>
   44f40:	ldr	r0, [r4]
   44f44:	bl	1858 <ftell@plt>
   44f48:	ldr	r1, [sl]
   44f4c:	cmn	r0, #1
   44f50:	ldr	r2, [r1, #52]	; 0x34
   44f54:	str	r0, [r2]
   44f58:	beq	44f90 <ReadNextCell+0x5ec>
   44f5c:	ldr	r3, [r6, #52]	; 0x34
   44f60:	ldr	r3, [r3, #12]
   44f64:	ldr	r3, [r3, #4]
   44f68:	sub	r0, r0, r3
   44f6c:	str	r0, [r2]
   44f70:	ldr	r0, [r1, #16]
   44f74:	cmp	r0, #1
   44f78:	beq	44fa0 <ReadNextCell+0x5fc>
   44f7c:	cmp	r0, #2
   44f80:	bne	44fb0 <ReadNextCell+0x60c>
   44f84:	mov	r0, r4
   44f88:	bl	43bd8 <ReadNextStructField>
   44f8c:	b	44fa8 <ReadNextCell+0x604>
   44f90:	ldr	r0, [pc, #1068]	; 453c4 <ReadNextCell+0xa20>
   44f94:	add	r0, pc, r0
   44f98:	bl	19cc <Mat_Critical@plt>
   44f9c:	b	44ff4 <ReadNextCell+0x650>
   44fa0:	mov	r0, r4
   44fa4:	bl	449a4 <ReadNextCell>
   44fa8:	add	r5, r0, r5
   44fac:	b	44fdc <ReadNextCell+0x638>
   44fb0:	cmp	r9, #32768	; 0x8000
   44fb4:	bgt	44fdc <ReadNextCell+0x638>
   44fb8:	mov	r0, r4
   44fbc:	bl	204b0 <Mat_VarRead5>
   44fc0:	ldr	r0, [sl]
   44fc4:	ldr	r1, [r0, #40]	; 0x28
   44fc8:	ldr	r0, [r0, #52]	; 0x34
   44fcc:	str	r1, [r0, #16]
   44fd0:	mov	r1, #0
   44fd4:	ldr	r0, [sl]
   44fd8:	str	r1, [r0, #40]	; 0x28
   44fdc:	ldr	r1, [sl]
   44fe0:	ldr	r0, [r4]
   44fe4:	mov	r2, #0
   44fe8:	ldr	r1, [r1, #52]	; 0x34
   44fec:	ldr	r1, [r1]
   44ff0:	bl	1a68 <fseek@plt>
   44ff4:	ldr	r1, [sl]
   44ff8:	ldr	r0, [r1, #52]	; 0x34
   44ffc:	ldr	r2, [r0, #16]
   45000:	cmp	r2, #0
   45004:	bne	45018 <ReadNextCell+0x674>
   45008:	ldr	r1, [r1, #16]
   4500c:	sub	r1, r1, #1
   45010:	cmp	r1, #1
   45014:	bhi	45040 <ReadNextCell+0x69c>
   45018:	ldr	r0, [r0, #12]
   4501c:	bl	1954 <inflateEnd@plt>
   45020:	ldr	r0, [sl]
   45024:	ldr	r0, [r0, #52]	; 0x34
   45028:	ldr	r0, [r0, #12]
   4502c:	bl	181c <free@plt>
   45030:	ldr	r0, [sl]
   45034:	mov	r1, #0
   45038:	ldr	r0, [r0, #52]	; 0x34
   4503c:	str	r1, [r0, #12]
   45040:	ldr	r0, [r6, #52]	; 0x34
   45044:	mov	r2, r9
   45048:	ldr	r1, [r0, #12]
   4504c:	mov	r0, r4
   45050:	bl	2340 <InflateSkip>
   45054:	add	r9, r0, r5
   45058:	ldr	r5, [sp, #36]	; 0x24
   4505c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   45060:	add	r8, r8, #1
   45064:	cmp	r8, r0
   45068:	bcc	44a98 <ReadNextCell+0xf4>
   4506c:	b	44a04 <ReadNextCell+0x60>
   45070:	ldr	r1, [r6, #36]	; 0x24
   45074:	mov	r9, #0
   45078:	cmp	r1, #0
   4507c:	beq	44a04 <ReadNextCell+0x60>
   45080:	ldr	r0, [pc, #812]	; 453b4 <ReadNextCell+0xa10>
   45084:	add	r0, pc, r0
   45088:	bl	19cc <Mat_Critical@plt>
   4508c:	b	44a04 <ReadNextCell+0x60>
   45090:	cmp	r7, #0
   45094:	beq	44a00 <ReadNextCell+0x5c>
   45098:	add	sl, sp, #48	; 0x30
   4509c:	ldr	r7, [sp, #36]	; 0x24
   450a0:	mov	r9, #0
   450a4:	mov	r6, #0
   450a8:	add	r0, sl, #20
   450ac:	str	r0, [sp, #28]
   450b0:	add	r0, sl, #16
   450b4:	str	r0, [sp, #24]
   450b8:	add	r0, sl, #12
   450bc:	str	r0, [sp, #20]
   450c0:	add	r0, sl, #8
   450c4:	str	r0, [sp, #16]
   450c8:	add	r0, sl, #4
   450cc:	str	r0, [sp, #32]
   450d0:	bl	18b8 <Mat_VarCalloc@plt>
   450d4:	cmp	r0, #0
   450d8:	str	r0, [r7, r6, lsl #2]
   450dc:	beq	451ec <ReadNextCell+0x848>
   450e0:	ldr	r3, [r4]
   450e4:	mov	r0, sl
   450e8:	mov	r1, #4
   450ec:	mov	r2, #2
   450f0:	bl	18d0 <fread@plt>
   450f4:	cmp	r0, #0
   450f8:	beq	45350 <ReadNextCell+0x9ac>
   450fc:	mov	r5, r0
   45100:	ldr	r0, [r4, #20]
   45104:	cmp	r0, #0
   45108:	beq	4511c <ReadNextCell+0x778>
   4510c:	mov	r0, sl
   45110:	bl	1c44 <Mat_uint32Swap>
   45114:	ldr	r0, [sp, #32]
   45118:	bl	1c44 <Mat_uint32Swap>
   4511c:	ldr	r8, [sp, #52]	; 0x34
   45120:	add	r9, r5, r9
   45124:	cmp	r8, #0
   45128:	beq	45200 <ReadNextCell+0x85c>
   4512c:	ldr	r0, [sp, #48]	; 0x30
   45130:	cmp	r0, #14
   45134:	bne	45380 <ReadNextCell+0x9dc>
   45138:	ldr	r3, [r4]
   4513c:	mov	r0, sl
   45140:	mov	r1, #4
   45144:	mov	r2, #6
   45148:	bl	18d0 <fread@plt>
   4514c:	mov	r2, r0
   45150:	ldr	r0, [r4, #20]
   45154:	mov	r5, sl
   45158:	cmp	r0, #0
   4515c:	beq	45198 <ReadNextCell+0x7f4>
   45160:	mov	r0, r5
   45164:	mov	sl, r2
   45168:	bl	1c44 <Mat_uint32Swap>
   4516c:	ldr	r0, [sp, #32]
   45170:	bl	1c44 <Mat_uint32Swap>
   45174:	ldr	r0, [sp, #16]
   45178:	bl	1c44 <Mat_uint32Swap>
   4517c:	ldr	r0, [sp, #20]
   45180:	bl	1c44 <Mat_uint32Swap>
   45184:	ldr	r0, [sp, #24]
   45188:	bl	1c44 <Mat_uint32Swap>
   4518c:	ldr	r0, [sp, #28]
   45190:	bl	1c44 <Mat_uint32Swap>
   45194:	mov	r2, sl
   45198:	ldr	r0, [sp, #48]	; 0x30
   4519c:	mov	sl, r5
   451a0:	cmp	r0, #6
   451a4:	bne	4521c <ReadNextCell+0x878>
   451a8:	ldr	r0, [sp, #56]	; 0x38
   451ac:	ldr	r1, [r7, r6, lsl #2]
   451b0:	mov	r5, #0
   451b4:	and	ip, r0, #512	; 0x200
   451b8:	and	r3, r0, #1024	; 0x400
   451bc:	and	r7, r0, #2048	; 0x800
   451c0:	uxtb	r0, r0
   451c4:	cmp	r0, #18
   451c8:	movcs	r0, r5
   451cc:	str	r0, [r1, #16]
   451d0:	str	r7, [r1, #20]
   451d4:	str	r3, [r1, #24]
   451d8:	str	ip, [r1, #28]
   451dc:	cmp	r0, #5
   451e0:	ldreq	r0, [sp, #60]	; 0x3c
   451e4:	streq	r0, [r1]
   451e8:	b	45220 <ReadNextCell+0x87c>
   451ec:	ldr	r0, [pc, #476]	; 453d0 <ReadNextCell+0xa2c>
   451f0:	mov	r1, r6
   451f4:	add	r0, pc, r0
   451f8:	bl	19cc <Mat_Critical@plt>
   451fc:	b	45350 <ReadNextCell+0x9ac>
   45200:	ldr	r0, [r7, r6, lsl #2]
   45204:	ldr	r0, [r0, #52]	; 0x34
   45208:	bl	181c <free@plt>
   4520c:	ldr	r0, [r7, r6, lsl #2]
   45210:	mov	r1, #0
   45214:	str	r1, [r0, #52]	; 0x34
   45218:	b	45350 <ReadNextCell+0x9ac>
   4521c:	ldr	r1, [r7, r6, lsl #2]
   45220:	add	r7, r2, r9
   45224:	ldr	r2, [sp, #64]	; 0x40
   45228:	ldr	r3, [sp, #68]	; 0x44
   4522c:	mov	r0, r4
   45230:	bl	453dc <ReadRankDims>
   45234:	ldr	r3, [r4]
   45238:	mov	r5, r0
   4523c:	mov	r0, sl
   45240:	mov	r1, #1
   45244:	mov	r2, #8
   45248:	bl	18d0 <fread@plt>
   4524c:	mov	r9, r0
   45250:	mov	r0, r4
   45254:	sub	r4, r8, r5
   45258:	ldr	r0, [r0, #20]
   4525c:	cmp	r0, #0
   45260:	beq	45274 <ReadNextCell+0x8d0>
   45264:	mov	r0, sl
   45268:	bl	1c44 <Mat_uint32Swap>
   4526c:	ldr	r0, [sp, #32]
   45270:	bl	1c44 <Mat_uint32Swap>
   45274:	add	r7, r7, r5
   45278:	ldr	r5, [sp, #52]	; 0x34
   4527c:	sub	r8, r4, #32
   45280:	cmp	r5, #0
   45284:	beq	452c8 <ReadNextCell+0x924>
   45288:	ldr	r0, [sp, #48]	; 0x30
   4528c:	cmp	r0, #1
   45290:	bne	452c8 <ReadNextCell+0x924>
   45294:	asr	r0, r5, #31
   45298:	ldr	r4, [sp, #40]	; 0x28
   4529c:	mov	r2, #1
   452a0:	add	r0, r5, r0, lsr #29
   452a4:	bic	r0, r0, #7
   452a8:	sub	r1, r5, r0
   452ac:	cmp	r1, #0
   452b0:	addgt	r5, r0, #8
   452b4:	ldr	r0, [r4]
   452b8:	mov	r1, r5
   452bc:	bl	1a68 <fseek@plt>
   452c0:	sub	r8, r8, r5
   452c4:	b	452cc <ReadNextCell+0x928>
   452c8:	ldr	r4, [sp, #40]	; 0x28
   452cc:	ldr	r0, [r4]
   452d0:	add	r9, r7, r9
   452d4:	bl	1858 <ftell@plt>
   452d8:	ldr	r7, [sp, #36]	; 0x24
   452dc:	cmn	r0, #1
   452e0:	ldr	r1, [r7, r6, lsl #2]
   452e4:	ldr	r2, [r1, #52]	; 0x34
   452e8:	str	r0, [r2]
   452ec:	beq	45344 <ReadNextCell+0x9a0>
   452f0:	ldr	r0, [r1, #16]
   452f4:	cmp	r0, #2
   452f8:	bne	45310 <ReadNextCell+0x96c>
   452fc:	mov	r0, r4
   45300:	bl	43bd8 <ReadNextStructField>
   45304:	ldr	r1, [r7, r6, lsl #2]
   45308:	add	r9, r0, r9
   4530c:	ldr	r0, [r1, #16]
   45310:	cmp	r0, #1
   45314:	bne	45328 <ReadNextCell+0x984>
   45318:	mov	r0, r4
   4531c:	bl	449a4 <ReadNextCell>
   45320:	ldr	r1, [r7, r6, lsl #2]
   45324:	add	r9, r0, r9
   45328:	ldr	r0, [r1, #52]	; 0x34
   4532c:	mov	r2, #0
   45330:	ldr	r0, [r0]
   45334:	add	r1, r0, r8
   45338:	ldr	r0, [r4]
   4533c:	bl	1a68 <fseek@plt>
   45340:	b	45350 <ReadNextCell+0x9ac>
   45344:	ldr	r0, [pc, #140]	; 453d8 <ReadNextCell+0xa34>
   45348:	add	r0, pc, r0
   4534c:	bl	19cc <Mat_Critical@plt>
   45350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   45354:	add	r6, r6, #1
   45358:	cmp	r6, r0
   4535c:	bcc	450d0 <ReadNextCell+0x72c>
   45360:	b	44a04 <ReadNextCell+0x60>
   45364:	bl	1930 <Mat_VarFree@plt>
   45368:	mov	r0, #0
   4536c:	mov	r1, r8
   45370:	str	r0, [sl]
   45374:	ldr	r0, [pc, #64]	; 453bc <ReadNextCell+0xa18>
   45378:	add	r0, pc, r0
   4537c:	b	45088 <ReadNextCell+0x6e4>
   45380:	ldr	r0, [r7, r6, lsl #2]
   45384:	bl	1930 <Mat_VarFree@plt>
   45388:	mov	r0, #0
   4538c:	str	r0, [r7, r6, lsl #2]
   45390:	ldr	r0, [r4]
   45394:	bl	1858 <ftell@plt>
   45398:	mov	r2, r0
   4539c:	ldr	r0, [pc, #48]	; 453d4 <ReadNextCell+0xa30>
   453a0:	mov	r1, r6
   453a4:	add	r0, pc, r0
   453a8:	bl	19cc <Mat_Critical@plt>
   453ac:	b	44a04 <ReadNextCell+0x60>
   453b0:	.word	0x000071c0
   453b4:	.word	0x00006e4d
   453b8:	.word	0x0000731f
   453bc:	.word	0x00006ba5
   453c0:	.word	0x00007256
   453c4:	.word	0x00006b98
   453c8:	.word	0x00006e3f
   453cc:	.word	0x00006f5b
   453d0:	.word	0x00006d03
   453d4:	.word	0x00006ba8
   453d8:	.word	0x000067e4

000453dc <ReadRankDims>:
   453dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   453e0:	add	fp, sp, #24
   453e4:	sub	sp, sp, #8
   453e8:	mov	r7, #0
   453ec:	cmp	r2, #5
   453f0:	bne	454f4 <ReadRankDims+0x118>
   453f4:	mov	r9, r0
   453f8:	lsr	r5, r3, #2
   453fc:	bic	r0, r3, #3
   45400:	mov	r4, r1
   45404:	str	r5, [r1, #4]
   45408:	bl	18e8 <malloc@plt>
   4540c:	cmp	r0, #0
   45410:	str	r0, [r4, #32]
   45414:	beq	454b0 <ReadRankDims+0xd4>
   45418:	cmp	r5, #0
   4541c:	beq	454c8 <ReadRankDims+0xec>
   45420:	mov	r6, #0
   45424:	add	r8, sp, #4
   45428:	mov	r5, #0
   4542c:	ldr	r3, [r9]
   45430:	mov	r0, r8
   45434:	mov	r1, #4
   45438:	mov	r2, #1
   4543c:	bl	18d0 <fread@plt>
   45440:	cmp	r0, #1
   45444:	bne	454d0 <ReadRankDims+0xf4>
   45448:	ldr	r0, [r9, #20]
   4544c:	cmp	r0, #0
   45450:	beq	45460 <ReadRankDims+0x84>
   45454:	mov	r0, r8
   45458:	bl	1c44 <Mat_uint32Swap>
   4545c:	b	45464 <ReadRankDims+0x88>
   45460:	ldr	r0, [sp, #4]
   45464:	ldr	r1, [r4, #32]
   45468:	add	r7, r6, #4
   4546c:	add	r5, r5, #1
   45470:	str	r0, [r1, r6]
   45474:	mov	r6, r7
   45478:	ldr	r0, [r4, #4]
   4547c:	cmp	r5, r0
   45480:	blt	4542c <ReadRankDims+0x50>
   45484:	tst	r0, #1
   45488:	beq	454f4 <ReadRankDims+0x118>
   4548c:	ldr	r3, [r9]
   45490:	add	r0, sp, #4
   45494:	mov	r1, #4
   45498:	mov	r2, #1
   4549c:	bl	18d0 <fread@plt>
   454a0:	cmp	r0, #1
   454a4:	bne	45500 <ReadRankDims+0x124>
   454a8:	add	r7, r7, #4
   454ac:	b	454f4 <ReadRankDims+0x118>
   454b0:	mov	r7, #0
   454b4:	str	r7, [r4, #4]
   454b8:	ldr	r0, [pc, #84]	; 45514 <ReadRankDims+0x138>
   454bc:	add	r0, pc, r0
   454c0:	bl	19cc <Mat_Critical@plt>
   454c4:	b	454f4 <ReadRankDims+0x118>
   454c8:	mov	r7, #0
   454cc:	b	454f4 <ReadRankDims+0x118>
   454d0:	ldr	r0, [r4, #32]
   454d4:	bl	181c <free@plt>
   454d8:	mov	r0, #0
   454dc:	str	r0, [r4, #4]
   454e0:	str	r0, [r4, #32]
   454e4:	ldr	r0, [pc, #36]	; 45510 <ReadRankDims+0x134>
   454e8:	add	r0, pc, r0
   454ec:	bl	19cc <Mat_Critical@plt>
   454f0:	mov	r7, r6
   454f4:	mov	r0, r7
   454f8:	sub	sp, fp, #24
   454fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45500:	ldr	r0, [pc, #4]	; 4550c <ReadRankDims+0x130>
   45504:	add	r0, pc, r0
   45508:	b	454c0 <ReadRankDims+0xe4>
   4550c:	.word	0x000068b4
   45510:	.word	0x000068d0
   45514:	.word	0x00006455

00045518 <WriteData>:
   45518:	push	{r4, r5, r6, r7, fp, lr}
   4551c:	add	fp, sp, #16
   45520:	sub	sp, sp, #8
   45524:	mov	r6, r0
   45528:	mov	r0, #0
   4552c:	str	r3, [sp, #4]
   45530:	cmp	r6, #0
   45534:	str	r0, [sp]
   45538:	beq	455b4 <WriteData+0x9c>
   4553c:	mov	r5, r1
   45540:	ldr	r1, [r6]
   45544:	cmp	r1, #0
   45548:	beq	455b4 <WriteData+0x9c>
   4554c:	mov	r0, r3
   45550:	mov	r4, r2
   45554:	bl	193c <Mat_SizeOf@plt>
   45558:	mov	r7, r0
   4555c:	mul	r0, r0, r4
   45560:	mov	r1, #4
   45564:	mov	r2, #1
   45568:	str	r0, [sp]
   4556c:	add	r0, sp, #4
   45570:	ldr	r3, [r6]
   45574:	bl	18c4 <fwrite@plt>
   45578:	ldr	r3, [r6]
   4557c:	mov	r0, sp
   45580:	mov	r1, #4
   45584:	mov	r2, #1
   45588:	bl	18c4 <fwrite@plt>
   4558c:	cmp	r5, #0
   45590:	beq	455b0 <WriteData+0x98>
   45594:	cmp	r4, #1
   45598:	blt	455b0 <WriteData+0x98>
   4559c:	ldr	r3, [r6]
   455a0:	mov	r0, r5
   455a4:	mov	r1, r7
   455a8:	mov	r2, r4
   455ac:	bl	18c4 <fwrite@plt>
   455b0:	ldr	r0, [sp]
   455b4:	sub	sp, fp, #16
   455b8:	pop	{r4, r5, r6, r7, fp, pc}

000455bc <GetTypeBufSize>:
   455bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   455c0:	add	fp, sp, #28
   455c4:	sub	sp, sp, #20
   455c8:	mov	r5, r0
   455cc:	mov	r0, #1
   455d0:	add	r1, sp, #12
   455d4:	str	r0, [sp, #12]
   455d8:	mov	r0, r5
   455dc:	bl	47128 <SafeMulDims>
   455e0:	ldr	r9, [r5, #4]
   455e4:	ldr	r0, [r5, #16]
   455e8:	mov	sl, #12
   455ec:	tst	r9, #1
   455f0:	sub	r0, r0, #1
   455f4:	movweq	sl, #8
   455f8:	cmp	r0, #4
   455fc:	add	r4, sl, r9, lsl #2
   45600:	bhi	45778 <GetTypeBufSize+0x1bc>
   45604:	add	r1, pc, #4
   45608:	ldr	r0, [r1, r0, lsl #2]
   4560c:	add	pc, r1, r0
   45610:	.word	0x00000014
   45614:	.word	0x00000080
   45618:	.word	0x00000168
   4561c:	.word	0x00000170
   45620:	.word	0x000001b8
   45624:	ldr	r0, [r5]
   45628:	cmp	r0, #0
   4562c:	beq	45864 <GetTypeBufSize+0x2a8>
   45630:	ldr	r2, [r5, #12]
   45634:	cmp	r2, #0
   45638:	beq	45864 <GetTypeBufSize+0x2a8>
   4563c:	udiv	r1, r0, r2
   45640:	ldr	r5, [r5, #40]	; 0x28
   45644:	cmp	r5, #0
   45648:	str	r1, [sp, #12]
   4564c:	beq	45864 <GetTypeBufSize+0x2a8>
   45650:	cmp	r2, r0
   45654:	bhi	45864 <GetTypeBufSize+0x2a8>
   45658:	mov	r6, #0
   4565c:	ldr	r0, [r5, r6, lsl #2]
   45660:	mov	r2, #0
   45664:	cmp	r0, #0
   45668:	beq	45678 <GetTypeBufSize+0xbc>
   4566c:	bl	455bc <GetTypeBufSize>
   45670:	ldr	r1, [sp, #12]
   45674:	add	r2, r0, #24
   45678:	add	r0, r4, r2
   4567c:	add	r6, r6, #1
   45680:	add	r4, r0, #8
   45684:	cmp	r6, r1
   45688:	bcc	4565c <GetTypeBufSize+0xa0>
   4568c:	b	45864 <GetTypeBufSize+0x2a8>
   45690:	ldr	r0, [r5, #40]	; 0x28
   45694:	mov	r4, #0
   45698:	mov	r7, #0
   4569c:	str	r0, [sp, #4]
   456a0:	ldr	r0, [r5, #52]	; 0x34
   456a4:	ldr	r8, [r0, #4]
   456a8:	cmp	r8, #0
   456ac:	beq	456e0 <GetTypeBufSize+0x124>
   456b0:	ldr	r6, [r0, #8]
   456b4:	mov	r7, #0
   456b8:	mov	r5, r8
   456bc:	ldr	r0, [r6]
   456c0:	cmp	r0, #0
   456c4:	beq	456d4 <GetTypeBufSize+0x118>
   456c8:	bl	196c <strlen@plt>
   456cc:	cmp	r0, r7
   456d0:	movhi	r7, r0
   456d4:	add	r6, r6, #4
   456d8:	subs	r5, r5, #1
   456dc:	bne	456bc <GetTypeBufSize+0x100>
   456e0:	add	r0, r7, #1
   456e4:	mul	r0, r8, r0
   456e8:	add	r1, r0, r4
   456ec:	add	r4, r4, r8
   456f0:	tst	r1, #7
   456f4:	bne	456e8 <GetTypeBufSize+0x12c>
   456f8:	mla	r0, r7, r8, sl
   456fc:	ldr	r6, [sp, #4]
   45700:	add	r0, r0, r9, lsl #2
   45704:	cmp	r6, #0
   45708:	add	r0, r0, r4
   4570c:	cmpne	r8, #0
   45710:	add	r4, r0, #16
   45714:	beq	45864 <GetTypeBufSize+0x2a8>
   45718:	ldr	r1, [sp, #12]
   4571c:	mov	r0, #1
   45720:	mov	r2, r8
   45724:	str	r0, [sp, #8]
   45728:	add	r0, sp, #8
   4572c:	bl	47184 <SafeMul>
   45730:	ldr	r1, [sp, #8]
   45734:	cmp	r1, #0
   45738:	beq	45864 <GetTypeBufSize+0x2a8>
   4573c:	mov	r5, #0
   45740:	ldr	r0, [r6, r5, lsl #2]
   45744:	cmp	r0, #0
   45748:	beq	4575c <GetTypeBufSize+0x1a0>
   4574c:	bl	455bc <GetTypeBufSize>
   45750:	ldr	r1, [sp, #8]
   45754:	add	r0, r0, #24
   45758:	b	45760 <GetTypeBufSize+0x1a4>
   4575c:	mov	r0, #48	; 0x30
   45760:	add	r0, r4, r0
   45764:	add	r5, r5, #1
   45768:	add	r4, r0, #8
   4576c:	cmp	r5, r1
   45770:	bcc	45740 <GetTypeBufSize+0x184>
   45774:	b	45864 <GetTypeBufSize+0x2a8>
   45778:	ldr	r0, [r5, #8]
   4577c:	b	45790 <GetTypeBufSize+0x1d4>
   45780:	ldr	r0, [r5, #8]
   45784:	sub	r1, r0, #1
   45788:	cmp	r1, #2
   4578c:	movwcc	r0, #4
   45790:	ldr	r6, [sp, #12]
   45794:	bl	193c <Mat_SizeOf@plt>
   45798:	mov	r2, r0
   4579c:	add	r0, sp, #16
   457a0:	mov	r1, r6
   457a4:	bl	47184 <SafeMul>
   457a8:	ldr	r0, [sp, #16]
   457ac:	ands	r1, r0, #7
   457b0:	subne	r0, r0, r1
   457b4:	addne	r0, r0, #8
   457b8:	strne	r0, [sp, #16]
   457bc:	add	r0, r0, #8
   457c0:	add	r4, r0, r4
   457c4:	b	45858 <GetTypeBufSize+0x29c>
   457c8:	ldr	r6, [r5, #40]	; 0x28
   457cc:	add	r0, sp, #16
   457d0:	mov	r2, #4
   457d4:	ldr	r1, [r6, #8]
   457d8:	bl	47184 <SafeMul>
   457dc:	ldr	r8, [sp, #16]
   457e0:	mov	r2, #4
   457e4:	ands	r0, r8, #7
   457e8:	subne	r0, r8, r0
   457ec:	addne	r8, r0, #8
   457f0:	add	r0, sp, #16
   457f4:	strne	r8, [sp, #16]
   457f8:	ldr	r1, [r6, #16]
   457fc:	bl	47184 <SafeMul>
   45800:	ldr	r7, [sp, #16]
   45804:	ands	r0, r7, #7
   45808:	subne	r0, r7, r0
   4580c:	addne	r7, r0, #8
   45810:	strne	r7, [sp, #16]
   45814:	ldr	r0, [r5, #8]
   45818:	ldr	r6, [r6, #20]
   4581c:	bl	193c <Mat_SizeOf@plt>
   45820:	mov	r2, r0
   45824:	add	r0, sp, #16
   45828:	mov	r1, r6
   4582c:	bl	47184 <SafeMul>
   45830:	ldr	r0, [sp, #16]
   45834:	ands	r1, r0, #7
   45838:	subne	r0, r0, r1
   4583c:	add	r1, r4, r8
   45840:	addne	r0, r0, #8
   45844:	add	r1, r1, r7
   45848:	strne	r0, [sp, #16]
   4584c:	add	r0, r0, #8
   45850:	add	r1, r1, r0
   45854:	add	r4, r1, #16
   45858:	ldr	r1, [r5, #20]
   4585c:	cmp	r1, #0
   45860:	addne	r4, r4, r0
   45864:	mov	r0, r4
   45868:	sub	sp, fp, #28
   4586c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045870 <WriteCompressedData>:
   45870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45874:	add	fp, sp, #28
   45878:	sub	sp, sp, #28
   4587c:	sub	sp, sp, #1024	; 0x400
   45880:	mov	r6, #0
   45884:	cmp	r0, #0
   45888:	str	r6, [sp, #12]
   4588c:	str	r6, [sp, #8]
   45890:	beq	459e0 <WriteCompressedData+0x170>
   45894:	mov	r5, r0
   45898:	ldr	r0, [r0]
   4589c:	cmp	r0, #0
   458a0:	beq	459e0 <WriteCompressedData+0x170>
   458a4:	ldr	r6, [fp, #8]
   458a8:	mov	r9, r3
   458ac:	mov	r8, r2
   458b0:	mov	r4, r1
   458b4:	mov	r0, r6
   458b8:	bl	193c <Mat_SizeOf@plt>
   458bc:	mul	r0, r0, r9
   458c0:	str	r6, [fp, #-40]	; 0xffffffd8
   458c4:	mov	r6, #0
   458c8:	mov	sl, #1024	; 0x400
   458cc:	add	r7, sp, #16
   458d0:	mov	r1, #8
   458d4:	str	r0, [sp, #4]
   458d8:	str	r0, [fp, #-36]	; 0xffffffdc
   458dc:	sub	r0, fp, #40	; 0x28
   458e0:	stm	r4, {r0, r1}
   458e4:	mov	r0, r4
   458e8:	mov	r1, #0
   458ec:	str	r7, [r4, #12]
   458f0:	str	sl, [r4, #16]
   458f4:	bl	18ac <deflate@plt>
   458f8:	ldr	r0, [r4, #16]
   458fc:	ldr	r3, [r5]
   45900:	mov	r1, #1
   45904:	rsb	r2, r0, #1024	; 0x400
   45908:	mov	r0, r7
   4590c:	bl	18c4 <fwrite@plt>
   45910:	add	r6, r0, r6
   45914:	ldr	r0, [r4, #16]
   45918:	cmp	r0, #0
   4591c:	beq	458e4 <WriteCompressedData+0x74>
   45920:	cmp	r8, #0
   45924:	beq	459e0 <WriteCompressedData+0x170>
   45928:	cmp	r9, #1
   4592c:	blt	459e0 <WriteCompressedData+0x170>
   45930:	ldr	r9, [sp, #4]
   45934:	str	r8, [r4]
   45938:	mov	r8, #1024	; 0x400
   4593c:	str	r9, [r4, #4]
   45940:	mov	r0, r4
   45944:	mov	r1, #0
   45948:	str	r7, [r4, #12]
   4594c:	str	r8, [r4, #16]
   45950:	bl	18ac <deflate@plt>
   45954:	ldr	r0, [r4, #16]
   45958:	ldr	r3, [r5]
   4595c:	mov	r1, #1
   45960:	rsb	r2, r0, #1024	; 0x400
   45964:	mov	r0, r7
   45968:	bl	18c4 <fwrite@plt>
   4596c:	add	r6, r0, r6
   45970:	ldr	r0, [r4, #16]
   45974:	cmp	r0, #0
   45978:	beq	45940 <WriteCompressedData+0xd0>
   4597c:	asr	r0, r9, #31
   45980:	add	r0, r9, r0, lsr #29
   45984:	bic	r0, r0, #7
   45988:	subs	r0, r9, r0
   4598c:	beq	459e0 <WriteCompressedData+0x170>
   45990:	add	r1, sp, #8
   45994:	mov	r8, #1024	; 0x400
   45998:	rsb	r0, r0, #8
   4599c:	str	r1, [r4]
   459a0:	str	r0, [r4, #4]
   459a4:	mov	r0, r4
   459a8:	mov	r1, #0
   459ac:	str	r7, [r4, #12]
   459b0:	str	r8, [r4, #16]
   459b4:	bl	18ac <deflate@plt>
   459b8:	ldr	r0, [r4, #16]
   459bc:	ldr	r3, [r5]
   459c0:	mov	r1, #1
   459c4:	rsb	r2, r0, #1024	; 0x400
   459c8:	mov	r0, r7
   459cc:	bl	18c4 <fwrite@plt>
   459d0:	add	r6, r0, r6
   459d4:	ldr	r0, [r4, #16]
   459d8:	cmp	r0, #0
   459dc:	beq	459a4 <WriteCompressedData+0x134>
   459e0:	mov	r0, r6
   459e4:	sub	sp, fp, #28
   459e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000459ec <WriteCompressedTypeArrayFlags>:
   459ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   459f0:	add	fp, sp, #28
   459f4:	sub	sp, sp, #4
   459f8:	sub	sp, sp, #4096	; 0x1000
   459fc:	mov	r8, sp
   45a00:	mov	r4, r2
   45a04:	mov	r9, r1
   45a08:	mov	r6, r0
   45a0c:	mov	r1, #0
   45a10:	mov	r2, #2048	; 0x800
   45a14:	mov	r7, #0
   45a18:	mov	r0, r8
   45a1c:	bl	19a8 <memset@plt>
   45a20:	ldr	r2, [r9, #16]
   45a24:	cmp	r2, #0
   45a28:	beq	45bbc <WriteCompressedTypeArrayFlags+0x1d0>
   45a2c:	add	r7, r9, #20
   45a30:	uxtb	r1, r2
   45a34:	ldm	r7, {r0, r3, r7}
   45a38:	cmp	r0, #0
   45a3c:	mov	r0, #0
   45a40:	orrne	r1, r1, #2048	; 0x800
   45a44:	cmp	r3, #0
   45a48:	orrne	r1, r1, #1024	; 0x400
   45a4c:	cmp	r7, #0
   45a50:	orrne	r1, r1, #512	; 0x200
   45a54:	cmp	r2, #5
   45a58:	mov	r2, #0
   45a5c:	bne	45a68 <WriteCompressedTypeArrayFlags+0x7c>
   45a60:	ldr	r2, [r9, #40]	; 0x28
   45a64:	ldr	r2, [r2]
   45a68:	str	r2, [sp, #12]
   45a6c:	str	r1, [sp, #8]
   45a70:	mov	r1, #8
   45a74:	mov	r2, #5
   45a78:	str	r1, [sp, #4]
   45a7c:	mov	r1, #6
   45a80:	str	r1, [sp]
   45a84:	ldr	r1, [r9, #4]
   45a88:	str	r2, [sp, #16]
   45a8c:	lsl	r2, r1, #2
   45a90:	cmp	r1, #1
   45a94:	str	r2, [sp, #20]
   45a98:	blt	45abc <WriteCompressedTypeArrayFlags+0xd0>
   45a9c:	ldr	r2, [r9, #32]
   45aa0:	add	r0, r8, #24
   45aa4:	mov	r3, r1
   45aa8:	ldr	r7, [r2], #4
   45aac:	subs	r3, r3, #1
   45ab0:	str	r7, [r0], #4
   45ab4:	bne	45aa8 <WriteCompressedTypeArrayFlags+0xbc>
   45ab8:	mov	r0, r1
   45abc:	tst	r1, #1
   45ac0:	mov	r5, #0
   45ac4:	mov	sl, #2048	; 0x800
   45ac8:	add	r7, sp, #2048	; 0x800
   45acc:	addne	r1, r8, r0, lsl #2
   45ad0:	movne	r2, #0
   45ad4:	addne	r0, r0, #1
   45ad8:	strne	r2, [r1, #24]
   45adc:	mov	r1, #24
   45ae0:	str	r8, [r4]
   45ae4:	add	r0, r1, r0, lsl #2
   45ae8:	str	r0, [r4, #4]
   45aec:	mov	r0, r4
   45af0:	mov	r1, #0
   45af4:	str	r7, [r4, #12]
   45af8:	str	sl, [r4, #16]
   45afc:	bl	18ac <deflate@plt>
   45b00:	ldr	r0, [r4, #16]
   45b04:	ldr	r3, [r6]
   45b08:	mov	r1, #1
   45b0c:	rsb	r2, r0, #2048	; 0x800
   45b10:	mov	r0, r7
   45b14:	bl	18c4 <fwrite@plt>
   45b18:	add	r5, r0, r5
   45b1c:	ldr	r0, [r4, #16]
   45b20:	cmp	r0, #0
   45b24:	beq	45aec <WriteCompressedTypeArrayFlags+0x100>
   45b28:	mov	r0, #0
   45b2c:	str	r0, [sp, #4]
   45b30:	mov	r0, #1
   45b34:	str	r0, [sp]
   45b38:	str	r8, [r4]
   45b3c:	mov	r0, #8
   45b40:	mov	r8, #2048	; 0x800
   45b44:	str	r0, [r4, #4]
   45b48:	mov	r0, r4
   45b4c:	mov	r1, #0
   45b50:	str	r7, [r4, #12]
   45b54:	str	r8, [r4, #16]
   45b58:	bl	18ac <deflate@plt>
   45b5c:	ldr	r0, [r4, #16]
   45b60:	ldr	r3, [r6]
   45b64:	mov	r1, #1
   45b68:	rsb	r2, r0, #2048	; 0x800
   45b6c:	mov	r0, r7
   45b70:	bl	18c4 <fwrite@plt>
   45b74:	add	r5, r0, r5
   45b78:	ldr	r0, [r4, #16]
   45b7c:	cmp	r0, #0
   45b80:	beq	45b48 <WriteCompressedTypeArrayFlags+0x15c>
   45b84:	ldr	r0, [r6]
   45b88:	bl	1858 <ftell@plt>
   45b8c:	ldr	r1, [r9, #52]	; 0x34
   45b90:	cmn	r0, #1
   45b94:	str	r0, [r1]
   45b98:	bne	45ba8 <WriteCompressedTypeArrayFlags+0x1bc>
   45b9c:	ldr	r0, [pc, #36]	; 45bc8 <WriteCompressedTypeArrayFlags+0x1dc>
   45ba0:	add	r0, pc, r0
   45ba4:	bl	19cc <Mat_Critical@plt>
   45ba8:	mov	r0, r6
   45bac:	mov	r1, r9
   45bb0:	mov	r2, r4
   45bb4:	bl	42a68 <WriteCompressedType>
   45bb8:	add	r7, r0, r5
   45bbc:	mov	r0, r7
   45bc0:	sub	sp, fp, #28
   45bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45bc8:	.word	0x00005f8c
   45bcc:	.word	0x00000000

00045bd0 <Mat_Create4>:
   45bd0:	push	{r4, r5, r6, r7, fp, lr}
   45bd4:	add	fp, sp, #16
   45bd8:	ldr	r1, [pc, #152]	; 45c78 <Mat_Create4+0xa8>
   45bdc:	mov	r5, r0
   45be0:	add	r1, pc, r1
   45be4:	bl	17f8 <fopen@plt>
   45be8:	mov	r4, #0
   45bec:	cmp	r0, #0
   45bf0:	beq	45c70 <Mat_Create4+0xa0>
   45bf4:	mov	r7, r0
   45bf8:	mov	r0, #44	; 0x2c
   45bfc:	bl	18e8 <malloc@plt>
   45c00:	cmp	r0, #0
   45c04:	beq	45c5c <Mat_Create4+0x8c>
   45c08:	mov	r4, #0
   45c0c:	str	r7, [r0]
   45c10:	mov	r6, r0
   45c14:	mov	r1, r5
   45c18:	str	r4, [r0, #4]
   45c1c:	str	r4, [r0, #8]
   45c20:	ldr	r0, [pc, #88]	; 45c80 <Mat_Create4+0xb0>
   45c24:	add	r0, pc, r0
   45c28:	bl	1ddc <strdup_printf>
   45c2c:	vmov.i32	q8, #0	; 0x00000000
   45c30:	add	r1, r6, #20
   45c34:	vst1.32	{d16-d17}, [r1]
   45c38:	str	r0, [r6, #12]
   45c3c:	mov	r1, #16
   45c40:	mov	r0, r6
   45c44:	str	r1, [r6, #16]
   45c48:	str	r4, [r6, #36]	; 0x24
   45c4c:	str	r4, [r6, #40]	; 0x28
   45c50:	bl	199c <Mat_Rewind@plt>
   45c54:	mov	r4, r6
   45c58:	b	45c70 <Mat_Create4+0xa0>
   45c5c:	mov	r0, r7
   45c60:	bl	19e4 <fclose@plt>
   45c64:	ldr	r0, [pc, #16]	; 45c7c <Mat_Create4+0xac>
   45c68:	add	r0, pc, r0
   45c6c:	bl	19cc <Mat_Critical@plt>
   45c70:	mov	r0, r4
   45c74:	pop	{r4, r5, r6, r7, fp, pc}
   45c78:	.word	0x00005f6d
   45c7c:	.word	0x00006314
   45c80:	.word	0x00006847

00045c84 <Mat_VarWrite4>:
   45c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45c88:	add	fp, sp, #28
   45c8c:	sub	sp, sp, #4
   45c90:	vpush	{d8}
   45c94:	sub	sp, sp, #40	; 0x28
   45c98:	cmp	r0, #0
   45c9c:	mvn	r5, #0
   45ca0:	movne	r6, r1
   45ca4:	cmpne	r1, #0
   45ca8:	bne	45cc0 <Mat_VarWrite4+0x3c>
   45cac:	mov	r0, r5
   45cb0:	sub	sp, fp, #40	; 0x28
   45cb4:	vpop	{d8}
   45cb8:	add	sp, sp, #4
   45cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45cc0:	mov	r9, r0
   45cc4:	ldr	r0, [r6, #36]	; 0x24
   45cc8:	cmp	r0, #0
   45ccc:	beq	45cac <Mat_VarWrite4+0x28>
   45cd0:	ldr	r1, [r6, #4]
   45cd4:	cmp	r1, #2
   45cd8:	bne	45cac <Mat_VarWrite4+0x28>
   45cdc:	ldr	r1, [r6, #8]
   45ce0:	mov	r5, #2
   45ce4:	sub	r1, r1, #2
   45ce8:	cmp	r1, #7
   45cec:	bhi	45cac <Mat_VarWrite4+0x28>
   45cf0:	uxtb	r2, r1
   45cf4:	mov	r3, #175	; 0xaf
   45cf8:	mov	r7, #1
   45cfc:	tst	r7, r3, lsr r2
   45d00:	beq	45cac <Mat_VarWrite4+0x28>
   45d04:	ldr	r2, [pc, #1240]	; 461e4 <Mat_VarWrite4+0x560>
   45d08:	add	r2, pc, r2
   45d0c:	ldr	r8, [r2, r1, lsl #2]
   45d10:	str	r8, [sp, #20]
   45d14:	bl	196c <strlen@plt>
   45d18:	add	r0, r0, #1
   45d1c:	mov	r1, #0
   45d20:	mov	r2, #2
   45d24:	mov	r5, #0
   45d28:	str	r0, [sp, #36]	; 0x24
   45d2c:	ldr	r0, [r9]
   45d30:	bl	1a68 <fseek@plt>
   45d34:	ldr	r0, [r6, #16]
   45d38:	cmp	r0, #12
   45d3c:	bhi	45cac <Mat_VarWrite4+0x28>
   45d40:	mov	r7, #1
   45d44:	mov	r1, #7872	; 0x1ec0
   45d48:	tst	r1, r7, lsl r0
   45d4c:	beq	45e10 <Mat_VarWrite4+0x18c>
   45d50:	ldr	r1, [r6, #4]
   45d54:	ldr	r0, [r6, #32]
   45d58:	cmp	r1, #1
   45d5c:	blt	45d7c <Mat_VarWrite4+0xf8>
   45d60:	mov	r2, #0
   45d64:	mov	r7, #1
   45d68:	ldr	r3, [r0, r2, lsl #2]
   45d6c:	add	r2, r2, #1
   45d70:	cmp	r2, r1
   45d74:	mul	r7, r3, r7
   45d78:	blt	45d68 <Mat_VarWrite4+0xe4>
   45d7c:	ldr	r1, [r0]
   45d80:	ldr	r0, [r0, #4]
   45d84:	mov	r2, #1
   45d88:	str	r1, [sp, #24]
   45d8c:	str	r0, [sp, #28]
   45d90:	mov	r1, #20
   45d94:	ldr	r0, [r6, #20]
   45d98:	cmp	r0, #0
   45d9c:	movwne	r0, #1
   45da0:	str	r0, [sp, #32]
   45da4:	add	r0, sp, #20
   45da8:	ldr	r3, [r9]
   45dac:	bl	18c4 <fwrite@plt>
   45db0:	ldr	r0, [r6, #36]	; 0x24
   45db4:	ldr	r3, [r9]
   45db8:	ldr	r2, [sp, #36]	; 0x24
   45dbc:	mov	r1, #1
   45dc0:	bl	18c4 <fwrite@plt>
   45dc4:	ldr	r0, [r6, #20]
   45dc8:	cmp	r0, #0
   45dcc:	beq	45df8 <Mat_VarWrite4+0x174>
   45dd0:	ldr	r4, [r6, #40]	; 0x28
   45dd4:	ldr	r3, [r9]
   45dd8:	ldr	r1, [r6, #12]
   45ddc:	mov	r2, r7
   45de0:	ldr	r0, [r4]
   45de4:	bl	18c4 <fwrite@plt>
   45de8:	ldr	r0, [r4, #4]
   45dec:	ldr	r1, [r6, #12]
   45df0:	ldr	r3, [r9]
   45df4:	b	45e04 <Mat_VarWrite4+0x180>
   45df8:	ldr	r3, [r9]
   45dfc:	ldr	r1, [r6, #12]
   45e00:	ldr	r0, [r6, #40]	; 0x28
   45e04:	mov	r2, r7
   45e08:	bl	18c4 <fwrite@plt>
   45e0c:	b	45cac <Mat_VarWrite4+0x28>
   45e10:	cmp	r0, #4
   45e14:	beq	45e54 <Mat_VarWrite4+0x1d0>
   45e18:	cmp	r0, #5
   45e1c:	bne	45cac <Mat_VarWrite4+0x28>
   45e20:	ldr	r0, [r6, #8]
   45e24:	bl	193c <Mat_SizeOf@plt>
   45e28:	ldr	r7, [r6, #40]	; 0x28
   45e2c:	add	r1, r8, #2
   45e30:	str	r1, [sp, #20]
   45e34:	ldr	r2, [r7, #16]
   45e38:	cmp	r2, #1
   45e3c:	blt	45e60 <Mat_VarWrite4+0x1dc>
   45e40:	ldr	r1, [r7, #12]
   45e44:	add	r1, r1, r2, lsl #2
   45e48:	ldr	r1, [r1, #-4]
   45e4c:	add	r1, r1, #1
   45e50:	b	45e64 <Mat_VarWrite4+0x1e0>
   45e54:	orr	r0, r8, #1
   45e58:	str	r0, [sp, #20]
   45e5c:	b	45d50 <Mat_VarWrite4+0xcc>
   45e60:	mov	r1, #1
   45e64:	str	r1, [sp, #24]
   45e68:	mov	sl, r0
   45e6c:	mov	r5, #0
   45e70:	mov	r1, #4
   45e74:	mov	r2, #1
   45e78:	ldr	r0, [r6, #20]
   45e7c:	str	r5, [sp, #32]
   45e80:	cmp	r0, #0
   45e84:	add	r0, sp, #20
   45e88:	movweq	r1, #3
   45e8c:	str	r1, [sp, #28]
   45e90:	mov	r1, #20
   45e94:	ldr	r3, [r9]
   45e98:	bl	18c4 <fwrite@plt>
   45e9c:	ldr	r0, [r6, #36]	; 0x24
   45ea0:	ldr	r3, [r9]
   45ea4:	ldr	r2, [sp, #36]	; 0x24
   45ea8:	mov	r1, #1
   45eac:	bl	18c4 <fwrite@plt>
   45eb0:	ldr	r1, [r7, #16]
   45eb4:	cmp	r1, #2
   45eb8:	blt	45f34 <Mat_VarWrite4+0x2b0>
   45ebc:	ldr	r0, [r7, #12]
   45ec0:	add	r8, sp, #8
   45ec4:	ldr	r4, [r0, r5, lsl #2]
   45ec8:	add	r5, r5, #1
   45ecc:	ldr	r2, [r0, r5, lsl #2]
   45ed0:	cmp	r4, r2
   45ed4:	bge	45f28 <Mat_VarWrite4+0x2a4>
   45ed8:	ldr	r1, [r7, #20]
   45edc:	cmp	r4, r1
   45ee0:	bge	45f24 <Mat_VarWrite4+0x2a0>
   45ee4:	ldr	r0, [r7, #4]
   45ee8:	mov	r1, #8
   45eec:	mov	r2, #1
   45ef0:	ldr	r0, [r0, r4, lsl #2]
   45ef4:	add	r0, r0, #1
   45ef8:	vmov	s0, r0
   45efc:	mov	r0, r8
   45f00:	vcvt.f64.s32	d16, s0
   45f04:	vstr	d16, [sp, #8]
   45f08:	ldr	r3, [r9]
   45f0c:	bl	18c4 <fwrite@plt>
   45f10:	ldr	r0, [r7, #12]
   45f14:	add	r4, r4, #1
   45f18:	ldr	r1, [r0, r5, lsl #2]
   45f1c:	cmp	r4, r1
   45f20:	blt	45ed8 <Mat_VarWrite4+0x254>
   45f24:	ldr	r1, [r7, #16]
   45f28:	sub	r2, r1, #1
   45f2c:	cmp	r5, r2
   45f30:	blt	45ec4 <Mat_VarWrite4+0x240>
   45f34:	ldr	r0, [r6, #32]
   45f38:	mov	r1, #8
   45f3c:	mov	r2, #1
   45f40:	vldr	s0, [r0]
   45f44:	add	r0, sp, #8
   45f48:	vcvt.f64.u32	d16, s0
   45f4c:	vstr	d16, [sp, #8]
   45f50:	ldr	r3, [r9]
   45f54:	bl	18c4 <fwrite@plt>
   45f58:	ldr	r1, [r7, #16]
   45f5c:	cmp	r1, #2
   45f60:	blt	45fd4 <Mat_VarWrite4+0x350>
   45f64:	ldr	r0, [r7, #12]
   45f68:	mov	r5, #0
   45f6c:	add	r8, sp, #8
   45f70:	ldr	r4, [r0, r5, lsl #2]
   45f74:	add	r5, r5, #1
   45f78:	ldr	r2, [r0, r5, lsl #2]
   45f7c:	cmp	r4, r2
   45f80:	bge	45fc8 <Mat_VarWrite4+0x344>
   45f84:	vmov	s0, r5
   45f88:	vcvt.f64.s32	d8, s0
   45f8c:	ldr	r1, [r7, #20]
   45f90:	cmp	r4, r1
   45f94:	bge	45fc4 <Mat_VarWrite4+0x340>
   45f98:	vstr	d8, [sp, #8]
   45f9c:	mov	r0, r8
   45fa0:	mov	r1, #8
   45fa4:	mov	r2, #1
   45fa8:	ldr	r3, [r9]
   45fac:	bl	18c4 <fwrite@plt>
   45fb0:	ldr	r0, [r7, #12]
   45fb4:	add	r4, r4, #1
   45fb8:	ldr	r1, [r0, r5, lsl #2]
   45fbc:	cmp	r4, r1
   45fc0:	blt	45f8c <Mat_VarWrite4+0x308>
   45fc4:	ldr	r1, [r7, #16]
   45fc8:	sub	r2, r1, #1
   45fcc:	cmp	r5, r2
   45fd0:	blt	45f70 <Mat_VarWrite4+0x2ec>
   45fd4:	ldr	r0, [r6, #32]
   45fd8:	mov	r1, #8
   45fdc:	mov	r2, #1
   45fe0:	vldr	s0, [r0, #4]
   45fe4:	add	r0, sp, #8
   45fe8:	vcvt.f64.u32	d16, s0
   45fec:	vstr	d16, [sp, #8]
   45ff0:	ldr	r3, [r9]
   45ff4:	bl	18c4 <fwrite@plt>
   45ff8:	mov	r0, #0
   45ffc:	str	r0, [sp, #12]
   46000:	str	r0, [sp, #8]
   46004:	ldr	r0, [r6, #20]
   46008:	cmp	r0, #0
   4600c:	beq	46140 <Mat_VarWrite4+0x4bc>
   46010:	ldr	r0, [r7, #24]
   46014:	ldr	r1, [r7, #16]
   46018:	mov	r4, sl
   4601c:	ldr	r2, [r0, #4]
   46020:	cmp	r1, #2
   46024:	str	r2, [sp, #4]
   46028:	blt	460a4 <Mat_VarWrite4+0x420>
   4602c:	ldr	sl, [r0]
   46030:	ldr	r0, [r7, #12]
   46034:	mov	r5, #0
   46038:	ldr	r8, [r0, r5, lsl #2]
   4603c:	add	r5, r5, #1
   46040:	ldr	r2, [r0, r5, lsl #2]
   46044:	cmp	r8, r2
   46048:	bge	46098 <Mat_VarWrite4+0x414>
   4604c:	ldr	r1, [r7, #20]
   46050:	cmp	r8, r1
   46054:	bge	46094 <Mat_VarWrite4+0x410>
   46058:	mla	r6, r4, r8, sl
   4605c:	ldr	r3, [r9]
   46060:	mov	r0, r6
   46064:	mov	r1, r4
   46068:	mov	r2, #1
   4606c:	bl	18c4 <fwrite@plt>
   46070:	ldr	r0, [r7, #12]
   46074:	add	r8, r8, #1
   46078:	ldr	r1, [r0, r5, lsl #2]
   4607c:	cmp	r8, r1
   46080:	bge	46094 <Mat_VarWrite4+0x410>
   46084:	ldr	r1, [r7, #20]
   46088:	add	r6, r6, r4
   4608c:	cmp	r8, r1
   46090:	blt	4605c <Mat_VarWrite4+0x3d8>
   46094:	ldr	r1, [r7, #16]
   46098:	sub	r2, r1, #1
   4609c:	cmp	r5, r2
   460a0:	blt	46038 <Mat_VarWrite4+0x3b4>
   460a4:	ldr	r3, [r9]
   460a8:	add	r0, sp, #8
   460ac:	mov	r1, r4
   460b0:	mov	r2, #1
   460b4:	bl	18c4 <fwrite@plt>
   460b8:	ldr	r1, [r7, #16]
   460bc:	ldr	sl, [sp, #4]
   460c0:	cmp	r1, #2
   460c4:	blt	461c8 <Mat_VarWrite4+0x544>
   460c8:	ldr	r0, [r7, #12]
   460cc:	mov	r8, #0
   460d0:	ldr	r5, [r0, r8, lsl #2]
   460d4:	add	r8, r8, #1
   460d8:	ldr	r2, [r0, r8, lsl #2]
   460dc:	cmp	r5, r2
   460e0:	bge	46130 <Mat_VarWrite4+0x4ac>
   460e4:	ldr	r1, [r7, #20]
   460e8:	cmp	r5, r1
   460ec:	bge	4612c <Mat_VarWrite4+0x4a8>
   460f0:	mla	r6, r4, r5, sl
   460f4:	ldr	r3, [r9]
   460f8:	mov	r0, r6
   460fc:	mov	r1, r4
   46100:	mov	r2, #1
   46104:	bl	18c4 <fwrite@plt>
   46108:	ldr	r0, [r7, #12]
   4610c:	add	r5, r5, #1
   46110:	ldr	r1, [r0, r8, lsl #2]
   46114:	cmp	r5, r1
   46118:	bge	4612c <Mat_VarWrite4+0x4a8>
   4611c:	ldr	r1, [r7, #20]
   46120:	add	r6, r6, r4
   46124:	cmp	r5, r1
   46128:	blt	460f4 <Mat_VarWrite4+0x470>
   4612c:	ldr	r1, [r7, #16]
   46130:	sub	r2, r1, #1
   46134:	cmp	r8, r2
   46138:	blt	460d0 <Mat_VarWrite4+0x44c>
   4613c:	b	461c8 <Mat_VarWrite4+0x544>
   46140:	ldr	r1, [r7, #16]
   46144:	mov	r4, sl
   46148:	cmp	r1, #2
   4614c:	blt	461c8 <Mat_VarWrite4+0x544>
   46150:	ldr	r8, [r7, #24]
   46154:	ldr	r0, [r7, #12]
   46158:	mov	sl, #0
   4615c:	ldr	r5, [r0, sl, lsl #2]
   46160:	add	sl, sl, #1
   46164:	ldr	r2, [r0, sl, lsl #2]
   46168:	cmp	r5, r2
   4616c:	bge	461bc <Mat_VarWrite4+0x538>
   46170:	ldr	r1, [r7, #20]
   46174:	cmp	r5, r1
   46178:	bge	461b8 <Mat_VarWrite4+0x534>
   4617c:	mla	r6, r4, r5, r8
   46180:	ldr	r3, [r9]
   46184:	mov	r0, r6
   46188:	mov	r1, r4
   4618c:	mov	r2, #1
   46190:	bl	18c4 <fwrite@plt>
   46194:	ldr	r0, [r7, #12]
   46198:	add	r5, r5, #1
   4619c:	ldr	r1, [r0, sl, lsl #2]
   461a0:	cmp	r5, r1
   461a4:	bge	461b8 <Mat_VarWrite4+0x534>
   461a8:	ldr	r1, [r7, #20]
   461ac:	add	r6, r6, r4
   461b0:	cmp	r5, r1
   461b4:	blt	46180 <Mat_VarWrite4+0x4fc>
   461b8:	ldr	r1, [r7, #16]
   461bc:	sub	r2, r1, #1
   461c0:	cmp	sl, r2
   461c4:	blt	4615c <Mat_VarWrite4+0x4d8>
   461c8:	ldr	r3, [r9]
   461cc:	add	r0, sp, #8
   461d0:	mov	r1, r4
   461d4:	mov	r2, #1
   461d8:	bl	18c4 <fwrite@plt>
   461dc:	mov	r5, #0
   461e0:	b	45cac <Mat_VarWrite4+0x28>
   461e4:	.word	0x00006388

000461e8 <Mat_VarRead4>:
   461e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   461ec:	add	fp, sp, #28
   461f0:	sub	sp, sp, #20
   461f4:	mov	r5, r1
   461f8:	mov	sl, r0
   461fc:	mov	r4, #1
   46200:	add	r1, sp, #16
   46204:	mov	r0, r5
   46208:	str	r4, [sp, #16]
   4620c:	bl	47128 <SafeMulDims>
   46210:	ldr	r1, [r5, #52]	; 0x34
   46214:	ldr	r0, [sl]
   46218:	mov	r2, #0
   4621c:	ldr	r1, [r1]
   46220:	bl	1a68 <fseek@plt>
   46224:	ldr	r0, [r5, #16]
   46228:	cmp	r0, #4
   4622c:	beq	46298 <Mat_VarRead4+0xb0>
   46230:	cmp	r0, #5
   46234:	beq	462d0 <Mat_VarRead4+0xe8>
   46238:	cmp	r0, #6
   4623c:	bne	46444 <Mat_VarRead4+0x25c>
   46240:	mov	r0, #8
   46244:	mov	r2, #8
   46248:	str	r0, [r5, #12]
   4624c:	mov	r0, r5
   46250:	ldr	r1, [sp, #16]
   46254:	bl	47184 <SafeMul>
   46258:	ldr	r1, [r5, #20]
   4625c:	ldr	r0, [r5]
   46260:	cmp	r1, #0
   46264:	beq	46450 <Mat_VarRead4+0x268>
   46268:	bl	4709c <ComplexMalloc>
   4626c:	cmp	r0, #0
   46270:	beq	46498 <Mat_VarRead4+0x2b0>
   46274:	str	r0, [r5, #40]	; 0x28
   46278:	mov	r6, r0
   4627c:	ldr	r1, [r0]
   46280:	ldr	r2, [r5, #8]
   46284:	ldr	r3, [sp, #16]
   46288:	mov	r0, sl
   4628c:	bl	377c <ReadDoubleData>
   46290:	ldr	r1, [r6, #4]
   46294:	b	46464 <Mat_VarRead4+0x27c>
   46298:	str	r4, [r5, #12]
   4629c:	ldr	r6, [sp, #16]
   462a0:	mov	r0, r6
   462a4:	str	r6, [r5]
   462a8:	bl	18e8 <malloc@plt>
   462ac:	cmp	r0, #0
   462b0:	str	r0, [r5, #40]	; 0x28
   462b4:	beq	46478 <Mat_VarRead4+0x290>
   462b8:	ldr	r2, [r5, #8]
   462bc:	mov	r1, r0
   462c0:	mov	r0, sl
   462c4:	mov	r3, r6
   462c8:	bl	13934 <ReadUInt8Data>
   462cc:	b	46484 <Mat_VarRead4+0x29c>
   462d0:	mov	r0, #28
   462d4:	str	r0, [r5, #12]
   462d8:	mov	r0, #28
   462dc:	bl	18e8 <malloc@plt>
   462e0:	cmp	r0, #0
   462e4:	str	r0, [r5, #40]	; 0x28
   462e8:	beq	4648c <Mat_VarRead4+0x2a4>
   462ec:	mov	r6, r0
   462f0:	ldr	r0, [r5, #32]
   462f4:	ldr	r1, [r0, #4]
   462f8:	sub	r1, r1, #4
   462fc:	clz	r1, r1
   46300:	lsr	r1, r1, #5
   46304:	str	r1, [r5, #20]
   46308:	ldr	r0, [r0]
   4630c:	sub	r7, r0, #1
   46310:	lsl	r0, r7, #2
   46314:	str	r7, [r6]
   46318:	str	r7, [r6, #8]
   4631c:	bl	18e8 <malloc@plt>
   46320:	cmp	r0, #0
   46324:	str	r0, [r6, #4]
   46328:	beq	464a4 <Mat_VarRead4+0x2bc>
   4632c:	mov	r1, r0
   46330:	mov	r0, sl
   46334:	mov	r2, #9
   46338:	mov	r3, r7
   4633c:	bl	b4d8 <ReadInt32Data>
   46340:	ldr	r0, [r6, #8]
   46344:	cmp	r0, #1
   46348:	blt	46370 <Mat_VarRead4+0x188>
   4634c:	ldr	r0, [r6, #4]
   46350:	mov	r1, #0
   46354:	ldr	r2, [r0, r1, lsl #2]
   46358:	sub	r2, r2, #1
   4635c:	str	r2, [r0, r1, lsl #2]
   46360:	add	r1, r1, #1
   46364:	ldr	r2, [r6, #8]
   46368:	cmp	r1, r2
   4636c:	blt	46354 <Mat_VarRead4+0x16c>
   46370:	add	r1, sp, #8
   46374:	mov	r0, sl
   46378:	mov	r2, #9
   4637c:	mov	r3, #1
   46380:	bl	377c <ReadDoubleData>
   46384:	vldr	d16, [sp, #8]
   46388:	ldr	r0, [r5, #32]
   4638c:	vcvt.u32.f64	s0, d16
   46390:	vstr	s0, [r0]
   46394:	ldr	r0, [sl]
   46398:	bl	1858 <ftell@plt>
   4639c:	cmn	r0, #1
   463a0:	beq	464c0 <Mat_VarRead4+0x2d8>
   463a4:	ldr	r7, [sl]
   463a8:	ldr	r4, [r6, #8]
   463ac:	mov	r8, r0
   463b0:	mov	r0, #9
   463b4:	bl	193c <Mat_SizeOf@plt>
   463b8:	mul	r1, r0, r4
   463bc:	mov	r0, r7
   463c0:	mov	r2, #1
   463c4:	bl	1a68 <fseek@plt>
   463c8:	add	r1, sp, #8
   463cc:	mov	r0, sl
   463d0:	mov	r2, #9
   463d4:	mov	r3, #1
   463d8:	bl	377c <ReadDoubleData>
   463dc:	vldr	d16, [sp, #8]
   463e0:	vldr	d17, [pc, #960]	; 467a8 <Mat_VarRead4+0x5c0>
   463e4:	vcmpe.f64	d16, d17
   463e8:	vmrs	APSR_nzcv, fpscr
   463ec:	bgt	464fc <Mat_VarRead4+0x314>
   463f0:	vcmpe.f64	d16, #0.0
   463f4:	vmrs	APSR_nzcv, fpscr
   463f8:	bmi	464fc <Mat_VarRead4+0x314>
   463fc:	ldr	r0, [r5, #32]
   46400:	vcvt.u32.f64	s0, d16
   46404:	mov	r1, r8
   46408:	mov	r2, #0
   4640c:	mov	r4, #0
   46410:	vstr	s0, [r0, #4]
   46414:	ldr	r0, [sl]
   46418:	bl	1a68 <fseek@plt>
   4641c:	ldr	r0, [r5, #32]
   46420:	ldr	r0, [r0, #4]
   46424:	cmn	r0, #-2147483647	; 0x80000001
   46428:	bcc	46528 <Mat_VarRead4+0x340>
   4642c:	ldr	r0, [r6, #4]
   46430:	bl	181c <free@plt>
   46434:	ldr	r0, [r5, #40]	; 0x28
   46438:	bl	181c <free@plt>
   4643c:	str	r4, [r5, #40]	; 0x28
   46440:	b	46514 <Mat_VarRead4+0x32c>
   46444:	ldr	r0, [pc, #1572]	; 46a70 <Mat_VarRead4+0x888>
   46448:	add	r0, pc, r0
   4644c:	b	4651c <Mat_VarRead4+0x334>
   46450:	bl	18e8 <malloc@plt>
   46454:	cmp	r0, #0
   46458:	str	r0, [r5, #40]	; 0x28
   4645c:	beq	464e4 <Mat_VarRead4+0x2fc>
   46460:	mov	r1, r0
   46464:	ldr	r2, [r5, #8]
   46468:	ldr	r3, [sp, #16]
   4646c:	mov	r0, sl
   46470:	bl	377c <ReadDoubleData>
   46474:	b	464f0 <Mat_VarRead4+0x308>
   46478:	ldr	r0, [pc, #1488]	; 46a50 <Mat_VarRead4+0x868>
   4647c:	add	r0, pc, r0
   46480:	bl	19cc <Mat_Critical@plt>
   46484:	mov	r0, #2
   46488:	b	464f4 <Mat_VarRead4+0x30c>
   4648c:	ldr	r0, [pc, #1496]	; 46a6c <Mat_VarRead4+0x884>
   46490:	add	r0, pc, r0
   46494:	b	4651c <Mat_VarRead4+0x334>
   46498:	ldr	r0, [pc, #1448]	; 46a48 <Mat_VarRead4+0x860>
   4649c:	add	r0, pc, r0
   464a0:	b	464ec <Mat_VarRead4+0x304>
   464a4:	mov	r0, r6
   464a8:	bl	181c <free@plt>
   464ac:	mov	r0, #0
   464b0:	str	r0, [r5, #40]	; 0x28
   464b4:	ldr	r0, [pc, #1464]	; 46a74 <Mat_VarRead4+0x88c>
   464b8:	add	r0, pc, r0
   464bc:	b	4651c <Mat_VarRead4+0x334>
   464c0:	ldr	r0, [r6, #4]
   464c4:	bl	181c <free@plt>
   464c8:	ldr	r0, [r5, #40]	; 0x28
   464cc:	bl	181c <free@plt>
   464d0:	mov	r0, #0
   464d4:	str	r0, [r5, #40]	; 0x28
   464d8:	ldr	r0, [pc, #1396]	; 46a54 <Mat_VarRead4+0x86c>
   464dc:	add	r0, pc, r0
   464e0:	b	4651c <Mat_VarRead4+0x334>
   464e4:	ldr	r0, [pc, #1376]	; 46a4c <Mat_VarRead4+0x864>
   464e8:	add	r0, pc, r0
   464ec:	bl	19cc <Mat_Critical@plt>
   464f0:	mov	r0, #9
   464f4:	str	r0, [r5, #8]
   464f8:	b	46520 <Mat_VarRead4+0x338>
   464fc:	ldr	r0, [r6, #4]
   46500:	bl	181c <free@plt>
   46504:	ldr	r0, [r5, #40]	; 0x28
   46508:	bl	181c <free@plt>
   4650c:	mov	r0, #0
   46510:	str	r0, [r5, #40]	; 0x28
   46514:	ldr	r0, [pc, #1340]	; 46a58 <Mat_VarRead4+0x870>
   46518:	add	r0, pc, r0
   4651c:	bl	19cc <Mat_Critical@plt>
   46520:	sub	sp, fp, #28
   46524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46528:	add	r0, r0, #1
   4652c:	str	r0, [r6, #16]
   46530:	lsl	r0, r0, #2
   46534:	bl	18e8 <malloc@plt>
   46538:	cmp	r0, #0
   4653c:	str	r0, [r6, #12]
   46540:	beq	466b8 <Mat_VarRead4+0x4d0>
   46544:	ldr	r9, [r6, #8]
   46548:	mov	r8, r0
   4654c:	lsl	r0, r9, #2
   46550:	bl	18e8 <malloc@plt>
   46554:	cmp	r0, #0
   46558:	beq	466b0 <Mat_VarRead4+0x4c8>
   4655c:	mov	r7, r0
   46560:	mov	r4, #0
   46564:	mov	r0, sl
   46568:	mov	r2, #9
   4656c:	mov	r3, r9
   46570:	mov	r1, r7
   46574:	str	r4, [r8]
   46578:	bl	b4d8 <ReadInt32Data>
   4657c:	ldr	r0, [r6, #16]
   46580:	cmp	r0, #3
   46584:	blt	465c8 <Mat_VarRead4+0x3e0>
   46588:	ldr	r0, [r6, #12]
   4658c:	mov	r1, #1
   46590:	ldr	r2, [r6, #8]
   46594:	cmp	r4, r2
   46598:	bge	465b0 <Mat_VarRead4+0x3c8>
   4659c:	ldr	r3, [r7, r4, lsl #2]
   465a0:	cmp	r3, r1
   465a4:	bgt	465b0 <Mat_VarRead4+0x3c8>
   465a8:	add	r4, r4, #1
   465ac:	b	46594 <Mat_VarRead4+0x3ac>
   465b0:	str	r4, [r0, r1, lsl #2]
   465b4:	add	r1, r1, #1
   465b8:	ldr	r2, [r6, #16]
   465bc:	sub	r2, r2, #1
   465c0:	cmp	r1, r2
   465c4:	blt	46590 <Mat_VarRead4+0x3a8>
   465c8:	mov	r0, r7
   465cc:	bl	181c <free@plt>
   465d0:	add	r2, r6, #8
   465d4:	mov	r3, #1
   465d8:	ldm	r2, {r0, r1, r2}
   465dc:	add	r1, r1, r2, lsl #2
   465e0:	mov	r2, #9
   465e4:	str	r0, [r1, #-4]
   465e8:	add	r1, sp, #8
   465ec:	mov	r0, sl
   465f0:	bl	377c <ReadDoubleData>
   465f4:	ldr	r4, [r6, #8]
   465f8:	str	r4, [r6, #20]
   465fc:	ldr	r9, [r5, #8]
   46600:	ldr	r7, [r5, #20]
   46604:	mov	r0, r9
   46608:	bl	193c <Mat_SizeOf@plt>
   4660c:	mul	r0, r0, r4
   46610:	cmp	r7, #0
   46614:	beq	466dc <Mat_VarRead4+0x4f4>
   46618:	bl	4709c <ComplexMalloc>
   4661c:	cmp	r0, #0
   46620:	beq	46750 <Mat_VarRead4+0x568>
   46624:	mov	r8, r0
   46628:	str	r0, [r6, #24]
   4662c:	sub	r0, r9, #2
   46630:	cmp	r0, #7
   46634:	bhi	46894 <Mat_VarRead4+0x6ac>
   46638:	add	r1, pc, #4
   4663c:	ldr	r0, [r1, r0, lsl #2]
   46640:	add	pc, r1, r0
   46644:	.word	0x00000020
   46648:	.word	0x0000016c
   4664c:	.word	0x000001b8
   46650:	.word	0x00000204
   46654:	.word	0x00000250
   46658:	.word	0x00000268
   4665c:	.word	0x00000250
   46660:	.word	0x000002b4
   46664:	ldr	r3, [r6, #20]
   46668:	ldr	r1, [r8]
   4666c:	mov	r0, sl
   46670:	mov	r2, #2
   46674:	bl	13934 <ReadUInt8Data>
   46678:	add	r5, sp, #4
   4667c:	mov	r0, sl
   46680:	mov	r2, #2
   46684:	mov	r3, #1
   46688:	mov	r1, r5
   4668c:	bl	13934 <ReadUInt8Data>
   46690:	ldr	r1, [r8, #4]
   46694:	ldr	r3, [r6, #20]
   46698:	mov	r0, sl
   4669c:	mov	r2, #2
   466a0:	bl	13934 <ReadUInt8Data>
   466a4:	mov	r0, sl
   466a8:	mov	r1, r5
   466ac:	b	46740 <Mat_VarRead4+0x558>
   466b0:	mov	r0, r8
   466b4:	bl	181c <free@plt>
   466b8:	ldr	r0, [r6, #4]
   466bc:	bl	181c <free@plt>
   466c0:	ldr	r0, [r5, #40]	; 0x28
   466c4:	bl	181c <free@plt>
   466c8:	mov	r0, #0
   466cc:	str	r0, [r5, #40]	; 0x28
   466d0:	ldr	r0, [pc, #900]	; 46a5c <Mat_VarRead4+0x874>
   466d4:	add	r0, pc, r0
   466d8:	b	4651c <Mat_VarRead4+0x334>
   466dc:	bl	18e8 <malloc@plt>
   466e0:	cmp	r0, #0
   466e4:	str	r0, [r6, #24]
   466e8:	beq	4677c <Mat_VarRead4+0x594>
   466ec:	mov	r1, r0
   466f0:	sub	r0, r9, #2
   466f4:	cmp	r0, #7
   466f8:	bhi	469bc <Mat_VarRead4+0x7d4>
   466fc:	add	r2, pc, #4
   46700:	ldr	r0, [r2, r0, lsl #2]
   46704:	add	pc, r2, r0
   46708:	.word	0x00000020
   4670c:	.word	0x0000023c
   46710:	.word	0x00000264
   46714:	.word	0x0000028c
   46718:	.word	0x000002b4
   4671c:	.word	0x000002f0
   46720:	.word	0x000002b4
   46724:	.word	0x00000318
   46728:	ldr	r3, [r6, #20]
   4672c:	mov	r0, sl
   46730:	mov	r2, #2
   46734:	bl	13934 <ReadUInt8Data>
   46738:	add	r1, sp, #4
   4673c:	mov	r0, sl
   46740:	mov	r2, #2
   46744:	mov	r3, #1
   46748:	bl	13934 <ReadUInt8Data>
   4674c:	b	46520 <Mat_VarRead4+0x338>
   46750:	ldr	r0, [r6, #12]
   46754:	bl	181c <free@plt>
   46758:	ldr	r0, [r6, #4]
   4675c:	bl	181c <free@plt>
   46760:	ldr	r0, [r5, #40]	; 0x28
   46764:	bl	181c <free@plt>
   46768:	mov	r0, #0
   4676c:	str	r0, [r5, #40]	; 0x28
   46770:	ldr	r0, [pc, #744]	; 46a60 <Mat_VarRead4+0x878>
   46774:	add	r0, pc, r0
   46778:	b	4651c <Mat_VarRead4+0x334>
   4677c:	ldr	r0, [r6, #12]
   46780:	bl	181c <free@plt>
   46784:	ldr	r0, [r6, #4]
   46788:	bl	181c <free@plt>
   4678c:	ldr	r0, [r5, #40]	; 0x28
   46790:	bl	181c <free@plt>
   46794:	mov	r0, #0
   46798:	str	r0, [r5, #40]	; 0x28
   4679c:	ldr	r0, [pc, #708]	; 46a68 <Mat_VarRead4+0x880>
   467a0:	add	r0, pc, r0
   467a4:	b	4651c <Mat_VarRead4+0x334>
   467a8:	.word	0xff800000
   467ac:	.word	0x41dfffff
   467b0:	ldr	r3, [r6, #20]
   467b4:	ldr	r1, [r8]
   467b8:	mov	r0, sl
   467bc:	mov	r2, #3
   467c0:	bl	e9a0 <ReadInt16Data>
   467c4:	add	r5, sp, #4
   467c8:	mov	r0, sl
   467cc:	mov	r2, #3
   467d0:	mov	r3, #1
   467d4:	mov	r1, r5
   467d8:	bl	e9a0 <ReadInt16Data>
   467dc:	ldr	r1, [r8, #4]
   467e0:	ldr	r3, [r6, #20]
   467e4:	mov	r0, sl
   467e8:	mov	r2, #3
   467ec:	bl	e9a0 <ReadInt16Data>
   467f0:	mov	r0, sl
   467f4:	mov	r1, r5
   467f8:	b	4695c <Mat_VarRead4+0x774>
   467fc:	ldr	r3, [r6, #20]
   46800:	ldr	r1, [r8]
   46804:	mov	r0, sl
   46808:	mov	r2, #4
   4680c:	bl	10414 <ReadUInt16Data>
   46810:	add	r5, sp, #4
   46814:	mov	r0, sl
   46818:	mov	r2, #4
   4681c:	mov	r3, #1
   46820:	mov	r1, r5
   46824:	bl	10414 <ReadUInt16Data>
   46828:	ldr	r1, [r8, #4]
   4682c:	ldr	r3, [r6, #20]
   46830:	mov	r0, sl
   46834:	mov	r2, #4
   46838:	bl	10414 <ReadUInt16Data>
   4683c:	mov	r0, sl
   46840:	mov	r1, r5
   46844:	b	46984 <Mat_VarRead4+0x79c>
   46848:	ldr	r3, [r6, #20]
   4684c:	ldr	r1, [r8]
   46850:	mov	r0, sl
   46854:	mov	r2, #5
   46858:	bl	b4d8 <ReadInt32Data>
   4685c:	add	r5, sp, #4
   46860:	mov	r0, sl
   46864:	mov	r2, #5
   46868:	mov	r3, #1
   4686c:	mov	r1, r5
   46870:	bl	b4d8 <ReadInt32Data>
   46874:	ldr	r1, [r8, #4]
   46878:	ldr	r3, [r6, #20]
   4687c:	mov	r0, sl
   46880:	mov	r2, #5
   46884:	bl	b4d8 <ReadInt32Data>
   46888:	mov	r0, sl
   4688c:	mov	r1, r5
   46890:	b	469ac <Mat_VarRead4+0x7c4>
   46894:	ldr	r0, [r8]
   46898:	bl	181c <free@plt>
   4689c:	ldr	r0, [r8, #4]
   468a0:	bl	181c <free@plt>
   468a4:	mov	r0, r8
   468a8:	b	469c0 <Mat_VarRead4+0x7d8>
   468ac:	ldr	r3, [r6, #20]
   468b0:	ldr	r1, [r8]
   468b4:	mov	r0, sl
   468b8:	mov	r2, #7
   468bc:	bl	5fa0 <ReadSingleData>
   468c0:	add	r5, sp, #4
   468c4:	mov	r0, sl
   468c8:	mov	r2, #7
   468cc:	mov	r3, #1
   468d0:	mov	r1, r5
   468d4:	bl	5fa0 <ReadSingleData>
   468d8:	ldr	r1, [r8, #4]
   468dc:	ldr	r3, [r6, #20]
   468e0:	mov	r0, sl
   468e4:	mov	r2, #7
   468e8:	bl	5fa0 <ReadSingleData>
   468ec:	mov	r0, sl
   468f0:	mov	r1, r5
   468f4:	b	46a10 <Mat_VarRead4+0x828>
   468f8:	ldr	r3, [r6, #20]
   468fc:	ldr	r1, [r8]
   46900:	mov	r0, sl
   46904:	mov	r2, #9
   46908:	bl	377c <ReadDoubleData>
   4690c:	add	r5, sp, #8
   46910:	mov	r0, sl
   46914:	mov	r2, #9
   46918:	mov	r3, #1
   4691c:	mov	r1, r5
   46920:	bl	377c <ReadDoubleData>
   46924:	ldr	r1, [r8, #4]
   46928:	ldr	r3, [r6, #20]
   4692c:	mov	r0, sl
   46930:	mov	r2, #9
   46934:	bl	377c <ReadDoubleData>
   46938:	mov	r0, sl
   4693c:	mov	r1, r5
   46940:	b	46a38 <Mat_VarRead4+0x850>
   46944:	ldr	r3, [r6, #20]
   46948:	mov	r0, sl
   4694c:	mov	r2, #3
   46950:	bl	e9a0 <ReadInt16Data>
   46954:	add	r1, sp, #4
   46958:	mov	r0, sl
   4695c:	mov	r2, #3
   46960:	mov	r3, #1
   46964:	bl	e9a0 <ReadInt16Data>
   46968:	b	46520 <Mat_VarRead4+0x338>
   4696c:	ldr	r3, [r6, #20]
   46970:	mov	r0, sl
   46974:	mov	r2, #4
   46978:	bl	10414 <ReadUInt16Data>
   4697c:	add	r1, sp, #4
   46980:	mov	r0, sl
   46984:	mov	r2, #4
   46988:	mov	r3, #1
   4698c:	bl	10414 <ReadUInt16Data>
   46990:	b	46520 <Mat_VarRead4+0x338>
   46994:	ldr	r3, [r6, #20]
   46998:	mov	r0, sl
   4699c:	mov	r2, #5
   469a0:	bl	b4d8 <ReadInt32Data>
   469a4:	add	r1, sp, #4
   469a8:	mov	r0, sl
   469ac:	mov	r2, #5
   469b0:	mov	r3, #1
   469b4:	bl	b4d8 <ReadInt32Data>
   469b8:	b	46520 <Mat_VarRead4+0x338>
   469bc:	mov	r0, r1
   469c0:	bl	181c <free@plt>
   469c4:	ldr	r0, [r6, #12]
   469c8:	bl	181c <free@plt>
   469cc:	ldr	r0, [r6, #4]
   469d0:	bl	181c <free@plt>
   469d4:	ldr	r0, [r5, #40]	; 0x28
   469d8:	bl	181c <free@plt>
   469dc:	mov	r0, #0
   469e0:	mov	r1, r9
   469e4:	str	r0, [r5, #40]	; 0x28
   469e8:	ldr	r0, [pc, #116]	; 46a64 <Mat_VarRead4+0x87c>
   469ec:	add	r0, pc, r0
   469f0:	bl	19cc <Mat_Critical@plt>
   469f4:	b	46520 <Mat_VarRead4+0x338>
   469f8:	ldr	r3, [r6, #20]
   469fc:	mov	r0, sl
   46a00:	mov	r2, #7
   46a04:	bl	5fa0 <ReadSingleData>
   46a08:	add	r1, sp, #4
   46a0c:	mov	r0, sl
   46a10:	mov	r2, #7
   46a14:	mov	r3, #1
   46a18:	bl	5fa0 <ReadSingleData>
   46a1c:	b	46520 <Mat_VarRead4+0x338>
   46a20:	ldr	r3, [r6, #20]
   46a24:	mov	r0, sl
   46a28:	mov	r2, #9
   46a2c:	bl	377c <ReadDoubleData>
   46a30:	add	r1, sp, #8
   46a34:	mov	r0, sl
   46a38:	mov	r2, #9
   46a3c:	mov	r3, #1
   46a40:	bl	377c <ReadDoubleData>
   46a44:	b	46520 <Mat_VarRead4+0x338>
   46a48:	.word	0x00005899
   46a4c:	.word	0x000056f0
   46a50:	.word	0x0000575c
   46a54:	.word	0x00005650
   46a58:	.word	0x00005ac0
   46a5c:	.word	0x0000592f
   46a60:	.word	0x00005535
   46a64:	.word	0x0000564b
   46a68:	.word	0x0000553e
   46a6c:	.word	0x00005748
   46a70:	.word	0x00005c31
   46a74:	.word	0x00005aee

00046a78 <Mat_VarReadData4>:
   46a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46a7c:	add	fp, sp, #28
   46a80:	sub	sp, sp, #28
   46a84:	mov	r7, r1
   46a88:	ldr	r1, [r1, #52]	; 0x34
   46a8c:	mov	r4, r0
   46a90:	ldr	r0, [r0]
   46a94:	mov	r8, r2
   46a98:	mov	r2, #0
   46a9c:	mov	r5, r3
   46aa0:	ldr	r1, [r1]
   46aa4:	bl	1a68 <fseek@plt>
   46aa8:	ldr	r3, [r7, #8]
   46aac:	mov	r6, #1
   46ab0:	cmp	r3, #9
   46ab4:	bhi	46c80 <Mat_VarReadData4+0x208>
   46ab8:	mov	r0, #1
   46abc:	mov	r1, #700	; 0x2bc
   46ac0:	tst	r1, r0, lsl r3
   46ac4:	beq	46c80 <Mat_VarReadData4+0x208>
   46ac8:	ldr	r0, [r7, #4]
   46acc:	ldr	r9, [fp, #12]
   46ad0:	ldr	sl, [fp, #8]
   46ad4:	cmp	r0, #2
   46ad8:	bne	46bac <Mat_VarReadData4+0x134>
   46adc:	ldr	r2, [r9]
   46ae0:	ldr	r0, [r5]
   46ae4:	ldr	r1, [sl]
   46ae8:	mov	r6, #1
   46aec:	sub	r2, r2, #1
   46af0:	mla	r0, r2, r1, r0
   46af4:	add	r1, r0, #1
   46af8:	ldr	r0, [r7, #32]
   46afc:	ldr	r2, [r0]
   46b00:	cmp	r1, r2
   46b04:	bhi	46b30 <Mat_VarReadData4+0xb8>
   46b08:	ldr	r6, [r9, #4]
   46b0c:	ldr	r1, [r5, #4]
   46b10:	ldr	r2, [sl, #4]
   46b14:	sub	r6, r6, #1
   46b18:	mla	r1, r6, r2, r1
   46b1c:	ldr	r2, [r0, #4]
   46b20:	mov	r6, #0
   46b24:	add	r1, r1, #1
   46b28:	cmp	r1, r2
   46b2c:	movwhi	r6, #1
   46b30:	ldr	r1, [r7, #20]
   46b34:	cmp	r1, #0
   46b38:	beq	46c44 <Mat_VarReadData4+0x1cc>
   46b3c:	mov	r0, r3
   46b40:	bl	193c <Mat_SizeOf@plt>
   46b44:	str	r0, [sp, #24]
   46b48:	add	r1, sp, #24
   46b4c:	mov	r0, r7
   46b50:	bl	47128 <SafeMulDims>
   46b54:	ldr	r0, [r7, #32]
   46b58:	ldr	r1, [r8]
   46b5c:	ldr	r3, [r7, #8]
   46b60:	ldr	r2, [r7, #16]
   46b64:	stm	sp, {r0, r5, sl}
   46b68:	mov	r0, r4
   46b6c:	str	r9, [sp, #12]
   46b70:	bl	1d24c <ReadDataSlab2>
   46b74:	ldr	r0, [r7, #52]	; 0x34
   46b78:	ldr	r1, [sp, #24]
   46b7c:	mov	r2, #0
   46b80:	ldr	r0, [r0]
   46b84:	add	r1, r1, r0
   46b88:	ldr	r0, [r4]
   46b8c:	bl	1a68 <fseek@plt>
   46b90:	ldr	r0, [r7, #32]
   46b94:	ldr	r1, [r8, #4]
   46b98:	ldr	r3, [r7, #8]
   46b9c:	ldr	r2, [r7, #16]
   46ba0:	stm	sp, {r0, r5, sl}
   46ba4:	mov	r0, r4
   46ba8:	b	46c54 <Mat_VarReadData4+0x1dc>
   46bac:	ldr	r1, [r7, #20]
   46bb0:	cmp	r1, #0
   46bb4:	beq	46c60 <Mat_VarReadData4+0x1e8>
   46bb8:	mov	r0, r3
   46bbc:	bl	193c <Mat_SizeOf@plt>
   46bc0:	str	r0, [sp, #20]
   46bc4:	add	r1, sp, #20
   46bc8:	mov	r0, r7
   46bcc:	bl	47128 <SafeMulDims>
   46bd0:	ldr	r1, [r8]
   46bd4:	ldmib	r7, {r0, r3}
   46bd8:	ldr	r2, [r7, #16]
   46bdc:	ldr	r6, [r7, #32]
   46be0:	stm	sp, {r0, r6}
   46be4:	mov	r0, r4
   46be8:	str	r5, [sp, #8]
   46bec:	str	sl, [sp, #12]
   46bf0:	str	r9, [sp, #16]
   46bf4:	bl	15614 <ReadDataSlabN>
   46bf8:	ldr	r0, [r7, #52]	; 0x34
   46bfc:	ldr	r1, [sp, #20]
   46c00:	mov	r2, #0
   46c04:	mov	r6, #0
   46c08:	ldr	r0, [r0]
   46c0c:	add	r1, r1, r0
   46c10:	ldr	r0, [r4]
   46c14:	bl	1a68 <fseek@plt>
   46c18:	ldr	r1, [r8, #4]
   46c1c:	ldmib	r7, {r0, r3}
   46c20:	ldr	r2, [r7, #16]
   46c24:	ldr	r7, [r7, #32]
   46c28:	stm	sp, {r0, r7}
   46c2c:	mov	r0, r4
   46c30:	str	r5, [sp, #8]
   46c34:	str	sl, [sp, #12]
   46c38:	str	r9, [sp, #16]
   46c3c:	bl	15614 <ReadDataSlabN>
   46c40:	b	46c80 <Mat_VarReadData4+0x208>
   46c44:	ldr	r2, [r7, #16]
   46c48:	stm	sp, {r0, r5, sl}
   46c4c:	mov	r0, r4
   46c50:	mov	r1, r8
   46c54:	str	r9, [sp, #12]
   46c58:	bl	1d24c <ReadDataSlab2>
   46c5c:	b	46c80 <Mat_VarReadData4+0x208>
   46c60:	ldr	r2, [r7, #16]
   46c64:	ldr	r1, [r7, #32]
   46c68:	stm	sp, {r0, r1, r5, sl}
   46c6c:	mov	r0, r4
   46c70:	mov	r1, r8
   46c74:	str	r9, [sp, #16]
   46c78:	bl	15614 <ReadDataSlabN>
   46c7c:	mov	r6, #0
   46c80:	mov	r0, r6
   46c84:	sub	sp, fp, #28
   46c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046c8c <Mat_VarReadDataLinear4>:
   46c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46c90:	add	fp, sp, #28
   46c94:	sub	sp, sp, #28
   46c98:	mov	r7, r1
   46c9c:	mov	r9, r0
   46ca0:	mov	r4, #1
   46ca4:	add	r1, sp, #24
   46ca8:	mov	r5, r3
   46cac:	str	r2, [sp, #16]
   46cb0:	mov	r0, r7
   46cb4:	str	r4, [sp, #24]
   46cb8:	bl	47128 <SafeMulDims>
   46cbc:	ldr	r1, [r7, #52]	; 0x34
   46cc0:	str	r0, [sp, #20]
   46cc4:	ldr	r0, [r9]
   46cc8:	mov	r2, #0
   46ccc:	ldr	r1, [r1]
   46cd0:	bl	1a68 <fseek@plt>
   46cd4:	ldr	r0, [r7, #8]
   46cd8:	bl	193c <Mat_SizeOf@plt>
   46cdc:	mov	ip, r5
   46ce0:	ldr	r5, [fp, #12]
   46ce4:	ldr	r6, [fp, #8]
   46ce8:	str	r0, [r7, #12]
   46cec:	mov	sl, r0
   46cf0:	ldr	r8, [sp, #24]
   46cf4:	sub	r0, r5, #1
   46cf8:	mla	r0, r0, r6, ip
   46cfc:	add	r0, r0, #1
   46d00:	cmp	r0, r8
   46d04:	bhi	46d8c <Mat_VarReadDataLinear4+0x100>
   46d08:	ldr	r0, [r7, #20]
   46d0c:	cmp	r0, #0
   46d10:	beq	46d64 <Mat_VarReadDataLinear4+0xd8>
   46d14:	ldr	r4, [sp, #16]
   46d18:	ldr	r3, [r7, #8]
   46d1c:	ldr	r2, [r7, #16]
   46d20:	mov	r0, r9
   46d24:	ldr	r1, [r4]
   46d28:	str	r5, [sp, #8]
   46d2c:	str	ip, [sp]
   46d30:	str	r6, [sp, #4]
   46d34:	mov	r5, ip
   46d38:	bl	1cd7c <ReadDataSlab1>
   46d3c:	ldr	r0, [r7, #52]	; 0x34
   46d40:	mov	r2, #0
   46d44:	ldr	r0, [r0]
   46d48:	mla	r1, r8, sl, r0
   46d4c:	ldr	r0, [r9]
   46d50:	bl	1a68 <fseek@plt>
   46d54:	mov	ip, r5
   46d58:	ldr	r5, [fp, #12]
   46d5c:	ldr	r4, [r4, #4]
   46d60:	b	46d68 <Mat_VarReadDataLinear4+0xdc>
   46d64:	ldr	r4, [sp, #16]
   46d68:	ldr	r3, [r7, #8]
   46d6c:	ldr	r2, [r7, #16]
   46d70:	mov	r0, r9
   46d74:	mov	r1, r4
   46d78:	str	ip, [sp]
   46d7c:	str	r6, [sp, #4]
   46d80:	str	r5, [sp, #8]
   46d84:	bl	1cd7c <ReadDataSlab1>
   46d88:	ldr	r4, [sp, #20]
   46d8c:	mov	r0, r4
   46d90:	sub	sp, fp, #28
   46d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046d98 <Mat_VarReadNextInfo4>:
   46d98:	push	{r4, r5, r6, sl, fp, lr}
   46d9c:	add	fp, sp, #16
   46da0:	sub	sp, sp, #8
   46da4:	cmp	r0, #0
   46da8:	beq	47058 <Mat_VarReadNextInfo4+0x2c0>
   46dac:	mov	r5, r0
   46db0:	ldr	r0, [r0]
   46db4:	cmp	r0, #0
   46db8:	beq	47058 <Mat_VarReadNextInfo4+0x2c0>
   46dbc:	bl	18b8 <Mat_VarCalloc@plt>
   46dc0:	cmp	r0, #0
   46dc4:	beq	47058 <Mat_VarReadNextInfo4+0x2c0>
   46dc8:	ldr	r3, [r5]
   46dcc:	mov	r4, r0
   46dd0:	add	r0, sp, #4
   46dd4:	mov	r1, #4
   46dd8:	mov	r2, #1
   46ddc:	bl	18d0 <fread@plt>
   46de0:	cmp	r0, #0
   46de4:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46de8:	ldr	r0, [sp, #4]
   46dec:	movw	r1, #4053	; 0xfd5
   46df0:	cmp	r0, r1
   46df4:	bcc	46e10 <Mat_VarReadNextInfo4+0x78>
   46df8:	add	r0, sp, #4
   46dfc:	bl	1c30 <Mat_int32Swap>
   46e00:	movw	r1, #4052	; 0xfd4
   46e04:	cmp	r0, r1
   46e08:	bgt	47050 <Mat_VarReadNextInfo4+0x2b8>
   46e0c:	ldr	r0, [sp, #4]
   46e10:	vmov	s0, r0
   46e14:	vldr	d16, [pc, #612]	; 47080 <Mat_VarReadNextInfo4+0x2e8>
   46e18:	movw	r2, #64536	; 0xfc18
   46e1c:	movt	r2, #65535	; 0xffff
   46e20:	vcvt.f64.s32	d17, s0
   46e24:	vdiv.f64	d16, d17, d16
   46e28:	vcvtm.s32.f64	s0, d16
   46e2c:	vldr	d16, [pc, #596]	; 47088 <Mat_VarReadNextInfo4+0x2f0>
   46e30:	vmov	r1, s0
   46e34:	mla	r0, r1, r2, r0
   46e38:	mvn	r2, #99	; 0x63
   46e3c:	cmp	r1, #2
   46e40:	vmov	s0, r0
   46e44:	vcvt.f64.s32	d17, s0
   46e48:	vdiv.f64	d16, d17, d16
   46e4c:	vcvtm.s32.f64	s0, d16
   46e50:	vmov.f64	d16, #36	; 0x41200000  10.0
   46e54:	vmov	r3, s0
   46e58:	mla	r0, r3, r2, r0
   46e5c:	vmov	s0, r0
   46e60:	vcvt.f64.s32	d17, s0
   46e64:	vdiv.f64	d16, d17, d16
   46e68:	vcvtm.s32.f64	s0, d16
   46e6c:	vmov	r2, s0
   46e70:	add	r6, r2, r2, lsl #2
   46e74:	rsb	r6, r6, #0
   46e78:	add	r0, r0, r6, lsl #1
   46e7c:	str	r0, [sp, #4]
   46e80:	bcs	47050 <Mat_VarReadNextInfo4+0x2b8>
   46e84:	cmp	r3, #0
   46e88:	str	r1, [r5, #20]
   46e8c:	bne	47050 <Mat_VarReadNextInfo4+0x2b8>
   46e90:	cmp	r2, #6
   46e94:	bcs	47050 <Mat_VarReadNextInfo4+0x2b8>
   46e98:	ldr	r1, [pc, #496]	; 47090 <Mat_VarReadNextInfo4+0x2f8>
   46e9c:	cmp	r0, #3
   46ea0:	add	r1, pc, r1
   46ea4:	ldr	r1, [r1, r2, lsl #2]
   46ea8:	str	r1, [r4, #8]
   46eac:	bcs	47050 <Mat_VarReadNextInfo4+0x2b8>
   46eb0:	mov	r1, #2
   46eb4:	str	r1, [r4, #4]
   46eb8:	ldr	r1, [pc, #468]	; 47094 <Mat_VarReadNextInfo4+0x2fc>
   46ebc:	add	r1, pc, r1
   46ec0:	ldr	r0, [r1, r0, lsl #2]
   46ec4:	str	r0, [r4, #16]
   46ec8:	mov	r0, #8
   46ecc:	bl	18e8 <malloc@plt>
   46ed0:	cmp	r0, #0
   46ed4:	str	r0, [r4, #32]
   46ed8:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46edc:	ldr	r3, [r5]
   46ee0:	add	r0, sp, #4
   46ee4:	mov	r1, #4
   46ee8:	mov	r2, #1
   46eec:	bl	18d0 <fread@plt>
   46ef0:	mov	r6, r0
   46ef4:	ldr	r0, [r5, #20]
   46ef8:	cmp	r0, #0
   46efc:	beq	46f08 <Mat_VarReadNextInfo4+0x170>
   46f00:	add	r0, sp, #4
   46f04:	bl	1c30 <Mat_int32Swap>
   46f08:	ldr	r0, [r4, #32]
   46f0c:	ldr	r1, [sp, #4]
   46f10:	cmp	r6, #0
   46f14:	str	r1, [r0]
   46f18:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46f1c:	ldr	r3, [r5]
   46f20:	add	r0, sp, #4
   46f24:	mov	r1, #4
   46f28:	mov	r2, #1
   46f2c:	bl	18d0 <fread@plt>
   46f30:	mov	r6, r0
   46f34:	ldr	r0, [r5, #20]
   46f38:	cmp	r0, #0
   46f3c:	beq	46f48 <Mat_VarReadNextInfo4+0x1b0>
   46f40:	add	r0, sp, #4
   46f44:	bl	1c30 <Mat_int32Swap>
   46f48:	ldr	r0, [r4, #32]
   46f4c:	ldr	r1, [sp, #4]
   46f50:	cmp	r6, #0
   46f54:	str	r1, [r0, #4]
   46f58:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46f5c:	ldr	r3, [r5]
   46f60:	add	r6, r4, #20
   46f64:	mov	r1, #4
   46f68:	mov	r2, #1
   46f6c:	mov	r0, r6
   46f70:	bl	18d0 <fread@plt>
   46f74:	cmp	r0, #0
   46f78:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46f7c:	ldr	r0, [r6]
   46f80:	cmp	r0, #0
   46f84:	beq	46f94 <Mat_VarReadNextInfo4+0x1fc>
   46f88:	ldr	r0, [r4, #16]
   46f8c:	cmp	r0, #4
   46f90:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46f94:	ldr	r3, [r5]
   46f98:	add	r0, sp, #4
   46f9c:	mov	r1, #4
   46fa0:	mov	r2, #1
   46fa4:	bl	18d0 <fread@plt>
   46fa8:	cmp	r0, #0
   46fac:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46fb0:	ldr	r0, [r5, #20]
   46fb4:	cmp	r0, #0
   46fb8:	beq	46fc4 <Mat_VarReadNextInfo4+0x22c>
   46fbc:	add	r0, sp, #4
   46fc0:	bl	1c30 <Mat_int32Swap>
   46fc4:	ldr	r6, [sp, #4]
   46fc8:	cmp	r6, #0
   46fcc:	ble	47050 <Mat_VarReadNextInfo4+0x2b8>
   46fd0:	mov	r0, r6
   46fd4:	bl	18e8 <malloc@plt>
   46fd8:	cmp	r0, #0
   46fdc:	str	r0, [r4, #36]	; 0x24
   46fe0:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46fe4:	ldr	r3, [r5]
   46fe8:	mov	r1, #1
   46fec:	mov	r2, r6
   46ff0:	bl	18d0 <fread@plt>
   46ff4:	cmp	r0, #0
   46ff8:	beq	47050 <Mat_VarReadNextInfo4+0x2b8>
   46ffc:	ldr	r0, [r5]
   47000:	bl	1858 <ftell@plt>
   47004:	ldr	r1, [r4, #52]	; 0x34
   47008:	cmn	r0, #1
   4700c:	str	r0, [r1]
   47010:	beq	47068 <Mat_VarReadNextInfo4+0x2d0>
   47014:	ldr	r0, [r4, #8]
   47018:	bl	193c <Mat_SizeOf@plt>
   4701c:	str	r0, [sp]
   47020:	ldr	r1, [r4, #20]
   47024:	cmp	r1, #0
   47028:	mov	r1, sp
   4702c:	lslne	r0, r0, #1
   47030:	strne	r0, [sp]
   47034:	mov	r0, r4
   47038:	bl	47128 <SafeMulDims>
   4703c:	ldr	r1, [sp]
   47040:	ldr	r0, [r5]
   47044:	mov	r2, #1
   47048:	bl	1a68 <fseek@plt>
   4704c:	b	4705c <Mat_VarReadNextInfo4+0x2c4>
   47050:	mov	r0, r4
   47054:	bl	1930 <Mat_VarFree@plt>
   47058:	mov	r4, #0
   4705c:	mov	r0, r4
   47060:	sub	sp, fp, #16
   47064:	pop	{r4, r5, r6, sl, fp, pc}
   47068:	mov	r0, r4
   4706c:	bl	1930 <Mat_VarFree@plt>
   47070:	ldr	r0, [pc, #32]	; 47098 <Mat_VarReadNextInfo4+0x300>
   47074:	add	r0, pc, r0
   47078:	bl	19cc <Mat_Critical@plt>
   4707c:	b	47058 <Mat_VarReadNextInfo4+0x2c0>
   47080:	.word	0x00000000
   47084:	.word	0x408f4000
   47088:	.word	0x00000000
   4708c:	.word	0x40590000
   47090:	.word	0x00005210
   47094:	.word	0x0000520c
   47098:	.word	0x00004ab8

0004709c <ComplexMalloc>:
   4709c:	push	{r4, r5, r6, sl, fp, lr}
   470a0:	add	fp, sp, #16
   470a4:	mov	r5, r0
   470a8:	mov	r0, #8
   470ac:	bl	18e8 <malloc@plt>
   470b0:	cmp	r0, #0
   470b4:	beq	470f8 <ComplexMalloc+0x5c>
   470b8:	mov	r4, r0
   470bc:	mov	r0, r5
   470c0:	bl	18e8 <malloc@plt>
   470c4:	cmp	r0, #0
   470c8:	str	r0, [r4]
   470cc:	beq	470f0 <ComplexMalloc+0x54>
   470d0:	mov	r6, r0
   470d4:	mov	r0, r5
   470d8:	bl	18e8 <malloc@plt>
   470dc:	cmp	r0, #0
   470e0:	str	r0, [r4, #4]
   470e4:	bne	470fc <ComplexMalloc+0x60>
   470e8:	mov	r0, r6
   470ec:	bl	181c <free@plt>
   470f0:	mov	r0, r4
   470f4:	bl	181c <free@plt>
   470f8:	mov	r4, #0
   470fc:	mov	r0, r4
   47100:	pop	{r4, r5, r6, sl, fp, pc}

00047104 <ClassType2DataType>:
   47104:	sub	r0, r0, #1
   47108:	cmp	r0, #14
   4710c:	movhi	r0, #0
   47110:	bxhi	lr
   47114:	ldr	r1, [pc, #8]	; 47124 <ClassType2DataType+0x20>
   47118:	add	r1, pc, r1
   4711c:	ldr	r0, [r1, r0, lsl #2]
   47120:	bx	lr
   47124:	.word	0x000056d8

00047128 <SafeMulDims>:
   47128:	push	{fp, lr}
   4712c:	mov	fp, sp
   47130:	ldr	r2, [r0, #4]
   47134:	cmp	r2, #1
   47138:	blt	4716c <SafeMulDims+0x44>
   4713c:	ldr	lr, [r1]
   47140:	ldr	ip, [r0, #32]
   47144:	mov	r3, #0
   47148:	ldr	r2, [ip, r3, lsl #2]
   4714c:	umull	lr, r2, lr, r2
   47150:	cmp	r2, #0
   47154:	str	lr, [r1]
   47158:	bne	47174 <SafeMulDims+0x4c>
   4715c:	ldr	r2, [r0, #4]
   47160:	add	r3, r3, #1
   47164:	cmp	r3, r2
   47168:	blt	47148 <SafeMulDims+0x20>
   4716c:	mov	r0, #0
   47170:	pop	{fp, pc}
   47174:	mov	r0, #0
   47178:	str	r0, [r1]
   4717c:	mov	r0, #1
   47180:	pop	{fp, pc}

00047184 <SafeMul>:
   47184:	umull	r2, r1, r1, r2
   47188:	cmp	r1, #0
   4718c:	movwne	r1, #1
   47190:	cmp	r1, #0
   47194:	movwne	r2, #0
   47198:	str	r2, [r0]
   4719c:	mov	r0, r1
   471a0:	bx	lr

000471a4 <Mat_GetLibraryVersion>:
   471a4:	cmp	r0, #0
   471a8:	movne	r3, #1
   471ac:	strne	r3, [r0]
   471b0:	cmp	r1, #0
   471b4:	movne	r0, #5
   471b8:	strne	r0, [r1]
   471bc:	cmp	r2, #0
   471c0:	movne	r0, #15
   471c4:	strne	r0, [r2]
   471c8:	bx	lr

000471cc <Mat_CreateVer>:
   471cc:	cmp	r2, #256	; 0x100
   471d0:	beq	471e4 <Mat_CreateVer+0x18>
   471d4:	cmp	r2, #16
   471d8:	movne	r0, #0
   471dc:	bxne	lr
   471e0:	b	45bd0 <Mat_Create4>
   471e4:	b	202e0 <Mat_Create5>

000471e8 <Mat_Open>:
   471e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   471ec:	add	fp, sp, #24
   471f0:	sub	sp, sp, #8
   471f4:	mov	r9, r1
   471f8:	mov	r8, r0
   471fc:	tst	r1, #1
   47200:	bne	47224 <Mat_Open+0x3c>
   47204:	ldr	r1, [pc, #780]	; 47518 <Mat_Open+0x330>
   47208:	mov	r0, r8
   4720c:	add	r1, pc, r1
   47210:	bl	17f8 <fopen@plt>
   47214:	mov	r7, r0
   47218:	cmp	r0, #0
   4721c:	bne	47240 <Mat_Open+0x58>
   47220:	b	473ac <Mat_Open+0x1c4>
   47224:	ldr	r1, [pc, #756]	; 47520 <Mat_Open+0x338>
   47228:	mov	r0, r8
   4722c:	add	r1, pc, r1
   47230:	bl	17f8 <fopen@plt>
   47234:	mov	r7, r0
   47238:	cmp	r0, #0
   4723c:	beq	47354 <Mat_Open+0x16c>
   47240:	mov	r0, #44	; 0x2c
   47244:	bl	18e8 <malloc@plt>
   47248:	cmp	r0, #0
   4724c:	beq	47340 <Mat_Open+0x158>
   47250:	mov	r5, r0
   47254:	str	r7, [r0]
   47258:	mov	r0, #128	; 0x80
   4725c:	mov	r1, #1
   47260:	bl	17b0 <calloc@plt>
   47264:	cmp	r0, #0
   47268:	str	r0, [r5, #4]
   4726c:	beq	4736c <Mat_Open+0x184>
   47270:	mov	r4, r0
   47274:	mov	r0, #8
   47278:	mov	r1, #1
   4727c:	bl	17b0 <calloc@plt>
   47280:	cmp	r0, #0
   47284:	str	r0, [r5, #8]
   47288:	beq	47388 <Mat_Open+0x1a0>
   4728c:	mov	r6, #0
   47290:	mov	r0, r4
   47294:	mov	r1, #1
   47298:	mov	r2, #116	; 0x74
   4729c:	mov	r3, r7
   472a0:	str	r6, [r5, #36]	; 0x24
   472a4:	str	r6, [r5, #40]	; 0x28
   472a8:	str	r6, [r5, #12]
   472ac:	str	r6, [r5, #16]
   472b0:	str	r6, [r5, #20]
   472b4:	bl	18d0 <fread@plt>
   472b8:	mov	r4, r0
   472bc:	ldr	r0, [r5, #4]
   472c0:	mov	r1, #1
   472c4:	mov	r2, #8
   472c8:	mov	r3, r7
   472cc:	strb	r6, [r0, #116]	; 0x74
   472d0:	ldr	r0, [r5, #8]
   472d4:	bl	18d0 <fread@plt>
   472d8:	add	r4, r0, r4
   472dc:	add	r0, sp, #4
   472e0:	mov	r1, #2
   472e4:	mov	r2, #1
   472e8:	mov	r3, r7
   472ec:	bl	18d0 <fread@plt>
   472f0:	add	r4, r4, r0, lsl #1
   472f4:	add	r0, sp, #6
   472f8:	mov	r1, #1
   472fc:	mov	r2, #2
   47300:	mov	r3, r7
   47304:	bl	18d0 <fread@plt>
   47308:	add	r4, r4, r0
   4730c:	cmp	r4, #128	; 0x80
   47310:	bne	4740c <Mat_Open+0x224>
   47314:	mvn	r0, #0
   47318:	movw	r1, #18765	; 0x494d
   4731c:	str	r0, [r5, #20]
   47320:	ldrh	r0, [sp, #6]
   47324:	cmp	r0, r1
   47328:	beq	473bc <Mat_Open+0x1d4>
   4732c:	movw	r1, #19785	; 0x4d49
   47330:	cmp	r0, r1
   47334:	moveq	r0, #0
   47338:	streq	r0, [r5, #20]
   4733c:	b	473cc <Mat_Open+0x1e4>
   47340:	mov	r0, r7
   47344:	bl	19e4 <fclose@plt>
   47348:	ldr	r0, [pc, #460]	; 4751c <Mat_Open+0x334>
   4734c:	add	r0, pc, r0
   47350:	b	473a8 <Mat_Open+0x1c0>
   47354:	bic	r2, r9, #1
   47358:	mov	r0, r8
   4735c:	mov	r1, #0
   47360:	bl	19fc <Mat_CreateVer@plt>
   47364:	mov	r5, r0
   47368:	b	473b0 <Mat_Open+0x1c8>
   4736c:	mov	r0, r5
   47370:	bl	181c <free@plt>
   47374:	mov	r0, r7
   47378:	bl	19e4 <fclose@plt>
   4737c:	ldr	r0, [pc, #416]	; 47524 <Mat_Open+0x33c>
   47380:	add	r0, pc, r0
   47384:	b	473a8 <Mat_Open+0x1c0>
   47388:	mov	r0, r4
   4738c:	bl	181c <free@plt>
   47390:	mov	r0, r5
   47394:	bl	181c <free@plt>
   47398:	mov	r0, r7
   4739c:	bl	19e4 <fclose@plt>
   473a0:	ldr	r0, [pc, #384]	; 47528 <Mat_Open+0x340>
   473a4:	add	r0, pc, r0
   473a8:	bl	19cc <Mat_Critical@plt>
   473ac:	mov	r5, #0
   473b0:	mov	r0, r5
   473b4:	sub	sp, fp, #24
   473b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   473bc:	mov	r0, #1
   473c0:	str	r0, [r5, #20]
   473c4:	add	r0, sp, #4
   473c8:	bl	1c58 <Mat_int16Swap>
   473cc:	ldrh	r0, [sp, #4]
   473d0:	cmp	r0, #512	; 0x200
   473d4:	sxth	r1, r0
   473d8:	cmpne	r0, #256	; 0x100
   473dc:	str	r1, [r5, #16]
   473e0:	bne	4741c <Mat_Open+0x234>
   473e4:	ldr	r0, [r5, #20]
   473e8:	cmn	r0, #1
   473ec:	beq	4741c <Mat_Open+0x234>
   473f0:	ldr	r0, [r5]
   473f4:	bl	1858 <ftell@plt>
   473f8:	cmn	r0, #1
   473fc:	str	r0, [r5, #28]
   47400:	beq	474ec <Mat_Open+0x304>
   47404:	mov	r0, #0
   47408:	str	r0, [r5, #32]
   4740c:	ldr	r0, [r5, #16]
   47410:	cmp	r0, #0
   47414:	bne	4749c <Mat_Open+0x2b4>
   47418:	b	47424 <Mat_Open+0x23c>
   4741c:	mov	r0, #0
   47420:	str	r0, [r5, #16]
   47424:	ldr	r0, [r5, #4]
   47428:	bl	181c <free@plt>
   4742c:	ldr	r0, [r5, #8]
   47430:	bl	181c <free@plt>
   47434:	mov	r1, #16
   47438:	mov	r0, #0
   4743c:	str	r1, [r5, #16]
   47440:	str	r0, [r5, #20]
   47444:	str	r9, [r5, #24]
   47448:	str	r0, [r5, #28]
   4744c:	str	r0, [r5, #32]
   47450:	str	r7, [r5]
   47454:	str	r0, [r5, #4]
   47458:	str	r0, [r5, #8]
   4745c:	mov	r0, r5
   47460:	bl	199c <Mat_Rewind@plt>
   47464:	mov	r0, r5
   47468:	bl	46d98 <Mat_VarReadNextInfo4>
   4746c:	cmp	r4, #0
   47470:	beq	47490 <Mat_Open+0x2a8>
   47474:	cmp	r0, #0
   47478:	bne	47490 <Mat_Open+0x2a8>
   4747c:	mov	r0, r5
   47480:	bl	19c0 <Mat_Close@plt>
   47484:	ldr	r0, [pc, #172]	; 47538 <Mat_Open+0x350>
   47488:	add	r0, pc, r0
   4748c:	b	474e0 <Mat_Open+0x2f8>
   47490:	bl	1930 <Mat_VarFree@plt>
   47494:	mov	r0, r5
   47498:	bl	199c <Mat_Rewind@plt>
   4749c:	ldr	r0, [pc, #140]	; 47530 <Mat_Open+0x348>
   474a0:	mov	r1, r8
   474a4:	add	r0, pc, r0
   474a8:	bl	1ddc <strdup_printf>
   474ac:	str	r9, [r5, #24]
   474b0:	str	r0, [r5, #12]
   474b4:	ldr	r0, [r5, #16]
   474b8:	cmp	r0, #512	; 0x200
   474bc:	bne	473b0 <Mat_Open+0x1c8>
   474c0:	ldr	r0, [r5]
   474c4:	bl	19e4 <fclose@plt>
   474c8:	mov	r0, #0
   474cc:	str	r0, [r5]
   474d0:	mov	r0, r5
   474d4:	bl	19c0 <Mat_Close@plt>
   474d8:	ldr	r0, [pc, #84]	; 47534 <Mat_Open+0x34c>
   474dc:	add	r0, pc, r0
   474e0:	mov	r1, r8
   474e4:	bl	19cc <Mat_Critical@plt>
   474e8:	b	473ac <Mat_Open+0x1c4>
   474ec:	ldr	r0, [r5, #4]
   474f0:	bl	181c <free@plt>
   474f4:	ldr	r0, [r5, #8]
   474f8:	bl	181c <free@plt>
   474fc:	mov	r0, r5
   47500:	bl	181c <free@plt>
   47504:	mov	r0, r7
   47508:	bl	19e4 <fclose@plt>
   4750c:	ldr	r0, [pc, #24]	; 4752c <Mat_Open+0x344>
   47510:	add	r0, pc, r0
   47514:	b	473a8 <Mat_Open+0x1c0>
   47518:	.word	0x00004ec8
   4751c:	.word	0x00004c30
   47520:	.word	0x00004eab
   47524:	.word	0x00004d5b
   47528:	.word	0x00004d68
   4752c:	.word	0x0000461c
   47530:	.word	0x00004fc7
   47534:	.word	0x00004c92
   47538:	.word	0x00004cbc

0004753c <Mat_Rewind>:
   4753c:	push	{r4, sl, fp, lr}
   47540:	add	fp, sp, #8
   47544:	ldr	r1, [r0, #16]
   47548:	cmp	r1, #16
   4754c:	beq	47574 <Mat_Rewind+0x38>
   47550:	cmp	r1, #512	; 0x200
   47554:	beq	4758c <Mat_Rewind+0x50>
   47558:	mvn	r4, #0
   4755c:	cmp	r1, #256	; 0x100
   47560:	bne	47594 <Mat_Rewind+0x58>
   47564:	ldr	r0, [r0]
   47568:	mov	r4, #0
   4756c:	mov	r1, #128	; 0x80
   47570:	b	47580 <Mat_Rewind+0x44>
   47574:	ldr	r0, [r0]
   47578:	mov	r4, #0
   4757c:	mov	r1, #0
   47580:	mov	r2, #0
   47584:	bl	1a68 <fseek@plt>
   47588:	b	47594 <Mat_Rewind+0x58>
   4758c:	mov	r4, #0
   47590:	str	r4, [r0, #32]
   47594:	mov	r0, r4
   47598:	pop	{r4, sl, fp, pc}

0004759c <Mat_Close>:
   4759c:	cmp	r0, #0
   475a0:	beq	47644 <Mat_Close+0xa8>
   475a4:	push	{r4, r5, fp, lr}
   475a8:	add	fp, sp, #8
   475ac:	mov	r4, r0
   475b0:	ldr	r0, [r0]
   475b4:	cmp	r0, #0
   475b8:	beq	475c0 <Mat_Close+0x24>
   475bc:	bl	19e4 <fclose@plt>
   475c0:	ldr	r0, [r4, #4]
   475c4:	cmp	r0, #0
   475c8:	beq	475d0 <Mat_Close+0x34>
   475cc:	bl	181c <free@plt>
   475d0:	ldr	r0, [r4, #8]
   475d4:	cmp	r0, #0
   475d8:	beq	475e0 <Mat_Close+0x44>
   475dc:	bl	181c <free@plt>
   475e0:	ldr	r0, [r4, #12]
   475e4:	cmp	r0, #0
   475e8:	beq	475f0 <Mat_Close+0x54>
   475ec:	bl	181c <free@plt>
   475f0:	ldr	r0, [r4, #40]	; 0x28
   475f4:	cmp	r0, #0
   475f8:	beq	47638 <Mat_Close+0x9c>
   475fc:	ldr	r2, [r4, #36]	; 0x24
   47600:	cmp	r2, #0
   47604:	beq	47634 <Mat_Close+0x98>
   47608:	mov	r5, #0
   4760c:	ldr	r1, [r0, r5, lsl #2]
   47610:	cmp	r1, #0
   47614:	beq	47628 <Mat_Close+0x8c>
   47618:	mov	r0, r1
   4761c:	bl	181c <free@plt>
   47620:	ldr	r2, [r4, #36]	; 0x24
   47624:	ldr	r0, [r4, #40]	; 0x28
   47628:	add	r5, r5, #1
   4762c:	cmp	r5, r2
   47630:	bcc	4760c <Mat_Close+0x70>
   47634:	bl	181c <free@plt>
   47638:	mov	r0, r4
   4763c:	bl	181c <free@plt>
   47640:	pop	{r4, r5, fp, lr}
   47644:	mov	r0, #0
   47648:	bx	lr

0004764c <Mat_VarFree>:
   4764c:	cmp	r0, #0
   47650:	bxeq	lr
   47654:	push	{r4, r5, r6, sl, fp, lr}
   47658:	add	fp, sp, #16
   4765c:	mov	r4, r0
   47660:	ldr	r0, [r0, #32]
   47664:	cmp	r0, #0
   47668:	beq	476a0 <Mat_VarFree+0x54>
   4766c:	ldr	r1, [r4, #4]
   47670:	mov	r6, #1
   47674:	cmp	r1, #1
   47678:	blt	476ac <Mat_VarFree+0x60>
   4767c:	mov	r2, r0
   47680:	ldr	r3, [r2]
   47684:	umull	r6, r3, r6, r3
   47688:	cmp	r3, #0
   4768c:	bne	476a8 <Mat_VarFree+0x5c>
   47690:	add	r2, r2, #4
   47694:	subs	r1, r1, #1
   47698:	bne	47680 <Mat_VarFree+0x34>
   4769c:	b	476ac <Mat_VarFree+0x60>
   476a0:	mov	r6, #0
   476a4:	b	476b0 <Mat_VarFree+0x64>
   476a8:	mov	r6, #0
   476ac:	bl	181c <free@plt>
   476b0:	ldr	r5, [r4, #40]	; 0x28
   476b4:	cmp	r5, #0
   476b8:	beq	47748 <Mat_VarFree+0xfc>
   476bc:	ldr	r0, [r4, #16]
   476c0:	sub	r0, r0, #1
   476c4:	cmp	r0, #15
   476c8:	bhi	47748 <Mat_VarFree+0xfc>
   476cc:	add	r1, pc, #4
   476d0:	ldr	r0, [r1, r0, lsl #2]
   476d4:	add	pc, r1, r0
   476d8:	.word	0x00000120
   476dc:	.word	0x00000148
   476e0:	.word	0x00000070
   476e4:	.word	0x00000040
   476e8:	.word	0x00000188
   476ec:	.word	0x00000040
   476f0:	.word	0x00000040
   476f4:	.word	0x00000040
   476f8:	.word	0x00000040
   476fc:	.word	0x00000040
   47700:	.word	0x00000040
   47704:	.word	0x00000040
   47708:	.word	0x00000040
   4770c:	.word	0x00000040
   47710:	.word	0x00000040
   47714:	.word	0x000001e0
   47718:	ldr	r0, [r4, #44]	; 0x2c
   4771c:	cmp	r0, #0
   47720:	bne	47748 <Mat_VarFree+0xfc>
   47724:	ldr	r0, [r4, #20]
   47728:	cmp	r0, #0
   4772c:	beq	47740 <Mat_VarFree+0xf4>
   47730:	ldr	r0, [r5]
   47734:	bl	181c <free@plt>
   47738:	ldr	r0, [r5, #4]
   4773c:	bl	181c <free@plt>
   47740:	mov	r0, r5
   47744:	bl	181c <free@plt>
   47748:	ldr	r0, [r4, #52]	; 0x34
   4774c:	cmp	r0, #0
   47750:	beq	47944 <Mat_VarFree+0x2f8>
   47754:	ldr	r1, [r4, #48]	; 0x30
   47758:	cmp	r1, #1
   4775c:	bne	478e0 <Mat_VarFree+0x294>
   47760:	ldr	r0, [r0, #12]
   47764:	bl	1954 <inflateEnd@plt>
   47768:	ldr	r0, [r4, #52]	; 0x34
   4776c:	ldr	r0, [r0, #12]
   47770:	bl	181c <free@plt>
   47774:	ldr	r0, [r4, #52]	; 0x34
   47778:	ldr	r5, [r0, #16]
   4777c:	cmp	r5, #0
   47780:	beq	478e0 <Mat_VarFree+0x294>
   47784:	ldr	r0, [r4, #16]
   47788:	cmp	r0, #5
   4778c:	bne	477dc <Mat_VarFree+0x190>
   47790:	ldr	r0, [r5, #4]
   47794:	cmp	r0, #0
   47798:	beq	477a0 <Mat_VarFree+0x154>
   4779c:	bl	181c <free@plt>
   477a0:	ldr	r0, [r5, #12]
   477a4:	cmp	r0, #0
   477a8:	beq	477b0 <Mat_VarFree+0x164>
   477ac:	bl	181c <free@plt>
   477b0:	ldr	r0, [r4, #20]
   477b4:	ldr	r6, [r5, #24]
   477b8:	cmp	r0, #0
   477bc:	beq	478c8 <Mat_VarFree+0x27c>
   477c0:	cmp	r6, #0
   477c4:	beq	478d8 <Mat_VarFree+0x28c>
   477c8:	ldr	r0, [r6]
   477cc:	bl	181c <free@plt>
   477d0:	ldr	r0, [r6, #4]
   477d4:	bl	181c <free@plt>
   477d8:	b	478d0 <Mat_VarFree+0x284>
   477dc:	ldr	r0, [r4, #20]
   477e0:	cmp	r0, #0
   477e4:	beq	478d8 <Mat_VarFree+0x28c>
   477e8:	ldr	r0, [r5]
   477ec:	bl	181c <free@plt>
   477f0:	ldr	r0, [r5, #4]
   477f4:	b	478d4 <Mat_VarFree+0x288>
   477f8:	ldr	r0, [r4, #44]	; 0x2c
   477fc:	cmp	r0, #0
   47800:	bne	47748 <Mat_VarFree+0xfc>
   47804:	cmp	r6, #0
   47808:	beq	47740 <Mat_VarFree+0xf4>
   4780c:	ldr	r0, [r5], #4
   47810:	bl	1930 <Mat_VarFree@plt>
   47814:	subs	r6, r6, #1
   47818:	bne	4780c <Mat_VarFree+0x1c0>
   4781c:	b	47858 <Mat_VarFree+0x20c>
   47820:	ldr	r0, [r4, #44]	; 0x2c
   47824:	cmp	r0, #0
   47828:	bne	47748 <Mat_VarFree+0xfc>
   4782c:	ldr	r0, [r4, #52]	; 0x34
   47830:	ldr	r0, [r0, #4]
   47834:	umull	r6, r0, r6, r0
   47838:	cmp	r0, #0
   4783c:	bne	47740 <Mat_VarFree+0xf4>
   47840:	cmp	r6, #0
   47844:	beq	47740 <Mat_VarFree+0xf4>
   47848:	ldr	r0, [r5], #4
   4784c:	bl	1930 <Mat_VarFree@plt>
   47850:	subs	r6, r6, #1
   47854:	bne	47848 <Mat_VarFree+0x1fc>
   47858:	ldr	r5, [r4, #40]	; 0x28
   4785c:	b	47740 <Mat_VarFree+0xf4>
   47860:	ldr	r0, [r4, #44]	; 0x2c
   47864:	cmp	r0, #0
   47868:	bne	47748 <Mat_VarFree+0xfc>
   4786c:	ldr	r0, [r5, #4]
   47870:	cmp	r0, #0
   47874:	beq	4787c <Mat_VarFree+0x230>
   47878:	bl	181c <free@plt>
   4787c:	ldr	r0, [r5, #12]
   47880:	cmp	r0, #0
   47884:	beq	4788c <Mat_VarFree+0x240>
   47888:	bl	181c <free@plt>
   4788c:	ldr	r0, [r4, #20]
   47890:	ldr	r6, [r5, #24]
   47894:	cmp	r0, #0
   47898:	beq	47960 <Mat_VarFree+0x314>
   4789c:	cmp	r6, #0
   478a0:	beq	47740 <Mat_VarFree+0xf4>
   478a4:	ldr	r0, [r6]
   478a8:	bl	181c <free@plt>
   478ac:	ldr	r0, [r6, #4]
   478b0:	bl	181c <free@plt>
   478b4:	b	47968 <Mat_VarFree+0x31c>
   478b8:	ldr	r0, [r4, #44]	; 0x2c
   478bc:	cmp	r0, #0
   478c0:	bne	47748 <Mat_VarFree+0xfc>
   478c4:	b	47740 <Mat_VarFree+0xf4>
   478c8:	cmp	r6, #0
   478cc:	beq	478d8 <Mat_VarFree+0x28c>
   478d0:	mov	r0, r6
   478d4:	bl	181c <free@plt>
   478d8:	mov	r0, r5
   478dc:	bl	181c <free@plt>
   478e0:	ldr	r0, [r4, #52]	; 0x34
   478e4:	ldr	r1, [r0, #8]
   478e8:	cmp	r1, #0
   478ec:	beq	47938 <Mat_VarFree+0x2ec>
   478f0:	ldr	r2, [r0, #4]
   478f4:	cmp	r2, #0
   478f8:	beq	47938 <Mat_VarFree+0x2ec>
   478fc:	mov	r5, #0
   47900:	ldr	r1, [r1, r5, lsl #2]
   47904:	cmp	r1, #0
   47908:	beq	47918 <Mat_VarFree+0x2cc>
   4790c:	mov	r0, r1
   47910:	bl	181c <free@plt>
   47914:	ldr	r0, [r4, #52]	; 0x34
   47918:	ldr	r2, [r0, #4]
   4791c:	ldr	r1, [r0, #8]
   47920:	add	r5, r5, #1
   47924:	cmp	r5, r2
   47928:	bcc	47900 <Mat_VarFree+0x2b4>
   4792c:	mov	r0, r1
   47930:	bl	181c <free@plt>
   47934:	ldr	r0, [r4, #52]	; 0x34
   47938:	bl	181c <free@plt>
   4793c:	mov	r0, #0
   47940:	str	r0, [r4, #52]	; 0x34
   47944:	ldr	r0, [r4, #36]	; 0x24
   47948:	cmp	r0, #0
   4794c:	beq	47954 <Mat_VarFree+0x308>
   47950:	bl	181c <free@plt>
   47954:	mov	r0, r4
   47958:	pop	{r4, r5, r6, sl, fp, lr}
   4795c:	b	181c <free@plt>
   47960:	cmp	r6, #0
   47964:	beq	47740 <Mat_VarFree+0xf4>
   47968:	mov	r0, r6
   4796c:	b	4773c <Mat_VarFree+0xf0>

00047970 <Mat_GetFilename>:
   47970:	cmp	r0, #0
   47974:	ldrne	r0, [r0, #12]
   47978:	moveq	r0, #0
   4797c:	bx	lr

00047980 <Mat_GetHeader>:
   47980:	cmp	r0, #0
   47984:	ldrne	r0, [r0, #4]
   47988:	moveq	r0, #0
   4798c:	bx	lr

00047990 <Mat_GetVersion>:
   47990:	cmp	r0, #0
   47994:	ldrne	r0, [r0, #16]
   47998:	moveq	r0, #0
   4799c:	bx	lr

000479a0 <Mat_GetDir>:
   479a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   479a4:	add	fp, sp, #28
   479a8:	sub	sp, sp, #4
   479ac:	cmp	r1, #0
   479b0:	beq	47a14 <Mat_GetDir+0x74>
   479b4:	mov	r4, r1
   479b8:	mov	r5, r0
   479bc:	cmp	r0, #0
   479c0:	beq	47aa8 <Mat_GetDir+0x108>
   479c4:	ldr	r0, [r5, #40]	; 0x28
   479c8:	ldr	r1, [r5, #16]
   479cc:	cmp	r0, #0
   479d0:	beq	47a1c <Mat_GetDir+0x7c>
   479d4:	cmp	r1, #512	; 0x200
   479d8:	bne	47bf8 <Mat_GetDir+0x258>
   479dc:	mov	r1, #0
   479e0:	str	r1, [r4]
   479e4:	ldr	r2, [r5, #36]	; 0x24
   479e8:	cmp	r2, #0
   479ec:	beq	47c00 <Mat_GetDir+0x260>
   479f0:	ldr	r2, [r0, r1, lsl #2]
   479f4:	cmp	r2, #0
   479f8:	beq	47c00 <Mat_GetDir+0x260>
   479fc:	add	r1, r1, #1
   47a00:	str	r1, [r4]
   47a04:	ldr	r2, [r5, #36]	; 0x24
   47a08:	cmp	r1, r2
   47a0c:	bcc	479f0 <Mat_GetDir+0x50>
   47a10:	b	47c00 <Mat_GetDir+0x260>
   47a14:	mov	r5, #0
   47a18:	b	47c04 <Mat_GetDir+0x264>
   47a1c:	cmp	r1, #512	; 0x200
   47a20:	bne	47ab4 <Mat_GetDir+0x114>
   47a24:	ldr	r0, [r5, #36]	; 0x24
   47a28:	cmp	r0, #0
   47a2c:	beq	47aa8 <Mat_GetDir+0x108>
   47a30:	ldr	r8, [r5, #32]
   47a34:	mov	r1, #4
   47a38:	bl	17b0 <calloc@plt>
   47a3c:	cmp	r0, #0
   47a40:	str	r0, [r5, #40]	; 0x28
   47a44:	beq	47ba8 <Mat_GetDir+0x208>
   47a48:	mov	r6, #0
   47a4c:	str	r6, [r5, #32]
   47a50:	ldr	r9, [pc, #444]	; 47c14 <Mat_GetDir+0x274>
   47a54:	add	r9, pc, r9
   47a58:	mov	r0, r5
   47a5c:	bl	1a8c <Mat_VarReadNextInfo@plt>
   47a60:	cmp	r0, #0
   47a64:	beq	47bc0 <Mat_GetDir+0x220>
   47a68:	ldr	r1, [r0, #36]	; 0x24
   47a6c:	mov	r7, r0
   47a70:	cmp	r1, #0
   47a74:	beq	47a8c <Mat_GetDir+0xec>
   47a78:	mov	r0, r9
   47a7c:	bl	1ddc <strdup_printf>
   47a80:	ldr	r1, [r5, #40]	; 0x28
   47a84:	str	r0, [r1, r6, lsl #2]
   47a88:	add	r6, r6, #1
   47a8c:	mov	r0, r7
   47a90:	bl	1930 <Mat_VarFree@plt>
   47a94:	ldr	r0, [r5, #32]
   47a98:	ldr	r1, [r5, #36]	; 0x24
   47a9c:	cmp	r0, r1
   47aa0:	bcc	47a58 <Mat_GetDir+0xb8>
   47aa4:	b	47bcc <Mat_GetDir+0x22c>
   47aa8:	mov	r5, #0
   47aac:	str	r5, [r4]
   47ab0:	b	47c04 <Mat_GetDir+0x264>
   47ab4:	ldr	r0, [r5]
   47ab8:	bl	1858 <ftell@plt>
   47abc:	cmn	r0, #1
   47ac0:	beq	47b94 <Mat_GetDir+0x1f4>
   47ac4:	mov	r9, r0
   47ac8:	ldr	r0, [r5]
   47acc:	ldr	r1, [r5, #28]
   47ad0:	mov	r2, #0
   47ad4:	mov	r6, #0
   47ad8:	bl	1a68 <fseek@plt>
   47adc:	str	r6, [r5, #36]	; 0x24
   47ae0:	mov	sl, #4
   47ae4:	ldr	r8, [pc, #304]	; 47c1c <Mat_GetDir+0x27c>
   47ae8:	ldr	r7, [pc, #304]	; 47c20 <Mat_GetDir+0x280>
   47aec:	add	r8, pc, r8
   47af0:	add	r7, pc, r7
   47af4:	mov	r0, r5
   47af8:	bl	1a8c <Mat_VarReadNextInfo@plt>
   47afc:	cmp	r0, #0
   47b00:	beq	47b30 <Mat_GetDir+0x190>
   47b04:	mov	r6, r0
   47b08:	ldr	r0, [r0, #36]	; 0x24
   47b0c:	cmp	r0, #0
   47b10:	beq	47b78 <Mat_GetDir+0x1d8>
   47b14:	ldr	r0, [r5, #40]	; 0x28
   47b18:	cmp	r0, #0
   47b1c:	beq	47b44 <Mat_GetDir+0x1a4>
   47b20:	ldr	r1, [r5, #36]	; 0x24
   47b24:	add	r1, sl, r1, lsl #2
   47b28:	bl	1888 <realloc@plt>
   47b2c:	b	47b4c <Mat_GetDir+0x1ac>
   47b30:	ldr	r0, [r5]
   47b34:	bl	1924 <feof@plt>
   47b38:	cmp	r0, #0
   47b3c:	bne	47b80 <Mat_GetDir+0x1e0>
   47b40:	b	47bd8 <Mat_GetDir+0x238>
   47b44:	mov	r0, #4
   47b48:	bl	18e8 <malloc@plt>
   47b4c:	cmp	r0, #0
   47b50:	beq	47be0 <Mat_GetDir+0x240>
   47b54:	str	r0, [r5, #40]	; 0x28
   47b58:	mov	r0, r7
   47b5c:	ldr	r1, [r6, #36]	; 0x24
   47b60:	bl	1ddc <strdup_printf>
   47b64:	ldr	r1, [r5, #36]	; 0x24
   47b68:	ldr	r2, [r5, #40]	; 0x28
   47b6c:	add	r3, r1, #1
   47b70:	str	r3, [r5, #36]	; 0x24
   47b74:	str	r0, [r2, r1, lsl #2]
   47b78:	mov	r0, r6
   47b7c:	bl	1930 <Mat_VarFree@plt>
   47b80:	ldr	r0, [r5]
   47b84:	bl	1924 <feof@plt>
   47b88:	cmp	r0, #0
   47b8c:	beq	47af4 <Mat_GetDir+0x154>
   47b90:	b	47be8 <Mat_GetDir+0x248>
   47b94:	mov	r5, #0
   47b98:	str	r5, [r4]
   47b9c:	ldr	r0, [pc, #132]	; 47c28 <Mat_GetDir+0x288>
   47ba0:	add	r0, pc, r0
   47ba4:	b	47bb8 <Mat_GetDir+0x218>
   47ba8:	mov	r5, #0
   47bac:	str	r5, [r4]
   47bb0:	ldr	r0, [pc, #88]	; 47c10 <Mat_GetDir+0x270>
   47bb4:	add	r0, pc, r0
   47bb8:	bl	19cc <Mat_Critical@plt>
   47bbc:	b	47c04 <Mat_GetDir+0x264>
   47bc0:	ldr	r0, [pc, #80]	; 47c18 <Mat_GetDir+0x278>
   47bc4:	add	r0, pc, r0
   47bc8:	bl	19cc <Mat_Critical@plt>
   47bcc:	str	r8, [r5, #32]
   47bd0:	str	r6, [r4]
   47bd4:	b	47c00 <Mat_GetDir+0x260>
   47bd8:	ldr	r8, [pc, #68]	; 47c24 <Mat_GetDir+0x284>
   47bdc:	add	r8, pc, r8
   47be0:	mov	r0, r8
   47be4:	bl	19cc <Mat_Critical@plt>
   47be8:	ldr	r0, [r5]
   47bec:	mov	r1, r9
   47bf0:	mov	r2, #0
   47bf4:	bl	1a68 <fseek@plt>
   47bf8:	ldr	r0, [r5, #36]	; 0x24
   47bfc:	str	r0, [r4]
   47c00:	ldr	r5, [r5, #40]	; 0x28
   47c04:	mov	r0, r5
   47c08:	sub	sp, fp, #28
   47c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47c10:	.word	0x000045fb
   47c14:	.word	0x00004a17
   47c18:	.word	0x000041f4
   47c1c:	.word	0x000046c3
   47c20:	.word	0x0000497b
   47c24:	.word	0x000041dc
   47c28:	.word	0x00003f8c

00047c2c <Mat_VarReadNextInfo>:
   47c2c:	cmp	r0, #0
   47c30:	beq	47c4c <Mat_VarReadNextInfo+0x20>
   47c34:	ldr	r1, [r0, #16]
   47c38:	cmp	r1, #16
   47c3c:	beq	47c54 <Mat_VarReadNextInfo+0x28>
   47c40:	cmp	r1, #256	; 0x100
   47c44:	bne	47c4c <Mat_VarReadNextInfo+0x20>
   47c48:	b	43484 <Mat_VarReadNextInfo5>
   47c4c:	mov	r0, #0
   47c50:	bx	lr
   47c54:	b	46d98 <Mat_VarReadNextInfo4>

00047c58 <Mat_SizeOfClass>:
   47c58:	sub	r0, r0, #4
   47c5c:	cmp	r0, #11
   47c60:	movhi	r0, #0
   47c64:	bxhi	lr
   47c68:	ldr	r1, [pc, #8]	; 47c78 <Mat_SizeOfClass+0x20>
   47c6c:	add	r1, pc, r1
   47c70:	ldr	r0, [r1, r0, lsl #2]
   47c74:	bx	lr
   47c78:	.word	0x00004bc0

00047c7c <Mat_VarCalloc>:
   47c7c:	push	{r4, r5, r6, sl, fp, lr}
   47c80:	add	fp, sp, #16
   47c84:	vpush	{d8-d9}
   47c88:	mov	r0, #56	; 0x38
   47c8c:	bl	18e8 <malloc@plt>
   47c90:	cmp	r0, #0
   47c94:	beq	47ce8 <Mat_VarCalloc+0x6c>
   47c98:	vmov.i32	q4, #0	; 0x00000000
   47c9c:	mov	r4, #0
   47ca0:	mov	r5, r0
   47ca4:	str	r4, [r0, #48]	; 0x30
   47ca8:	add	r0, r0, #32
   47cac:	mov	r6, r5
   47cb0:	vst1.32	{d8-d9}, [r0]
   47cb4:	add	r0, r5, #16
   47cb8:	vst1.32	{d8-d9}, [r0]
   47cbc:	mov	r0, #52	; 0x34
   47cc0:	vst1.32	{d8-d9}, [r6], r0
   47cc4:	mov	r0, #20
   47cc8:	bl	18e8 <malloc@plt>
   47ccc:	cmp	r0, #0
   47cd0:	str	r0, [r6]
   47cd4:	beq	47cf0 <Mat_VarCalloc+0x74>
   47cd8:	vst1.32	{d8-d9}, [r0]!
   47cdc:	str	r4, [r0]
   47ce0:	mov	r4, r5
   47ce4:	b	47cf8 <Mat_VarCalloc+0x7c>
   47ce8:	mov	r4, #0
   47cec:	b	47cf8 <Mat_VarCalloc+0x7c>
   47cf0:	mov	r0, r5
   47cf4:	bl	181c <free@plt>
   47cf8:	mov	r0, r4
   47cfc:	vpop	{d8-d9}
   47d00:	pop	{r4, r5, r6, sl, fp, pc}

00047d04 <Mat_VarCreate>:
   47d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47d08:	add	fp, sp, #28
   47d0c:	sub	sp, sp, #4
   47d10:	ldr	r8, [fp, #8]
   47d14:	mov	r4, #0
   47d18:	cmp	r8, #0
   47d1c:	beq	4815c <Mat_VarCreate+0x458>
   47d20:	mov	r6, r3
   47d24:	mov	r5, r2
   47d28:	mov	r9, r1
   47d2c:	mov	r7, r0
   47d30:	bl	18b8 <Mat_VarCalloc@plt>
   47d34:	cmp	r0, #0
   47d38:	beq	4815c <Mat_VarCreate+0x458>
   47d3c:	ldr	r2, [fp, #16]
   47d40:	mov	r4, r0
   47d44:	mov	r0, #0
   47d48:	cmp	r7, #0
   47d4c:	str	r0, [r4, #48]	; 0x30
   47d50:	and	r0, r2, #512	; 0x200
   47d54:	and	r1, r2, #1024	; 0x400
   47d58:	and	r2, r2, #2048	; 0x800
   47d5c:	str	r2, [r4, #20]
   47d60:	str	r1, [r4, #24]
   47d64:	str	r0, [r4, #28]
   47d68:	beq	47d80 <Mat_VarCreate+0x7c>
   47d6c:	ldr	r0, [pc, #1012]	; 48168 <Mat_VarCreate+0x464>
   47d70:	mov	r1, r7
   47d74:	add	r0, pc, r0
   47d78:	bl	1ddc <strdup_printf>
   47d7c:	str	r0, [r4, #36]	; 0x24
   47d80:	lsl	r0, r6, #2
   47d84:	str	r6, [r4, #4]
   47d88:	bl	18e8 <malloc@plt>
   47d8c:	mov	sl, #1
   47d90:	cmp	r6, #1
   47d94:	mov	r7, #1
   47d98:	str	r0, [r4, #32]
   47d9c:	blt	47dc0 <Mat_VarCreate+0xbc>
   47da0:	mov	r7, #1
   47da4:	mov	r1, #0
   47da8:	ldr	r2, [r8, r1, lsl #2]
   47dac:	mul	r7, r2, r7
   47db0:	str	r2, [r0, r1, lsl #2]
   47db4:	add	r1, r1, #1
   47db8:	cmp	r1, r6
   47dbc:	blt	47da8 <Mat_VarCreate+0xa4>
   47dc0:	sub	r0, r5, #1
   47dc4:	str	r5, [r4, #8]
   47dc8:	str	r9, [r4, #16]
   47dcc:	cmp	r0, #21
   47dd0:	bhi	4804c <Mat_VarCreate+0x348>
   47dd4:	add	r1, pc, #8
   47dd8:	ldr	r8, [fp, #12]
   47ddc:	ldr	r0, [r1, r0, lsl #2]
   47de0:	add	pc, r1, r0
   47de4:	.word	0x0000006c
   47de8:	.word	0x0000006c
   47dec:	.word	0x00000060
   47df0:	.word	0x00000060
   47df4:	.word	0x00000058
   47df8:	.word	0x00000058
   47dfc:	.word	0x00000058
   47e00:	.word	0x00000268
   47e04:	.word	0x00000068
   47e08:	.word	0x00000268
   47e0c:	.word	0x00000268
   47e10:	.word	0x00000068
   47e14:	.word	0x00000068
   47e18:	.word	0x00000268
   47e1c:	.word	0x00000268
   47e20:	.word	0x0000006c
   47e24:	.word	0x00000060
   47e28:	.word	0x00000058
   47e2c:	.word	0x00000268
   47e30:	.word	0x00000268
   47e34:	.word	0x00000058
   47e38:	.word	0x00000284
   47e3c:	mov	sl, #4
   47e40:	b	47e50 <Mat_VarCreate+0x14c>
   47e44:	mov	sl, #2
   47e48:	b	47e50 <Mat_VarCreate+0x14c>
   47e4c:	mov	sl, #8
   47e50:	cmp	r9, #5
   47e54:	bne	47e64 <Mat_VarCreate+0x160>
   47e58:	mov	r5, #28
   47e5c:	str	r5, [r4, #12]
   47e60:	b	47e7c <Mat_VarCreate+0x178>
   47e64:	umull	r5, r0, r7, sl
   47e68:	str	sl, [r4, #12]
   47e6c:	cmp	r0, #0
   47e70:	movwne	r0, #1
   47e74:	cmp	r0, #0
   47e78:	movwne	r5, #0
   47e7c:	cmp	r8, #0
   47e80:	str	r5, [r4]
   47e84:	beq	47fa0 <Mat_VarCreate+0x29c>
   47e88:	ldr	r0, [fp, #16]
   47e8c:	tst	r0, #1
   47e90:	bne	47fc0 <Mat_VarCreate+0x2bc>
   47e94:	cmp	r9, #5
   47e98:	bne	47fd8 <Mat_VarCreate+0x2d4>
   47e9c:	mov	r0, #28
   47ea0:	bl	18e8 <malloc@plt>
   47ea4:	mov	r6, r0
   47ea8:	cmp	r0, #0
   47eac:	beq	48158 <Mat_VarCreate+0x454>
   47eb0:	ldr	r7, [fp, #12]
   47eb4:	ldr	r0, [r7]
   47eb8:	str	r0, [r6]
   47ebc:	ldr	r0, [r7, #8]
   47ec0:	str	r0, [r6, #8]
   47ec4:	lsl	r5, r0, #2
   47ec8:	ldr	r9, [r7, #16]
   47ecc:	ldr	r8, [r7, #20]
   47ed0:	mov	r0, r5
   47ed4:	str	r9, [r6, #16]
   47ed8:	str	r8, [r6, #20]
   47edc:	bl	18e8 <malloc@plt>
   47ee0:	cmp	r0, #0
   47ee4:	str	r0, [r6, #4]
   47ee8:	beq	47ef8 <Mat_VarCreate+0x1f4>
   47eec:	ldr	r1, [r7, #4]
   47ef0:	mov	r2, r5
   47ef4:	bl	1834 <memcpy@plt>
   47ef8:	lsl	r5, r9, #2
   47efc:	mov	r0, r5
   47f00:	bl	18e8 <malloc@plt>
   47f04:	cmp	r0, #0
   47f08:	str	r0, [r6, #12]
   47f0c:	beq	47f20 <Mat_VarCreate+0x21c>
   47f10:	ldr	r1, [fp, #12]
   47f14:	mov	r2, r5
   47f18:	ldr	r1, [r1, #12]
   47f1c:	bl	1834 <memcpy@plt>
   47f20:	ldr	r0, [r4, #20]
   47f24:	cmp	r0, #0
   47f28:	beq	48130 <Mat_VarCreate+0x42c>
   47f2c:	mov	r0, #8
   47f30:	bl	18e8 <malloc@plt>
   47f34:	cmp	r0, #0
   47f38:	str	r0, [r6, #24]
   47f3c:	beq	48158 <Mat_VarCreate+0x454>
   47f40:	mov	r5, r0
   47f44:	ldr	r0, [fp, #12]
   47f48:	mul	r9, r8, sl
   47f4c:	ldr	sl, [r0, #24]
   47f50:	mov	r0, r9
   47f54:	bl	18e8 <malloc@plt>
   47f58:	mov	r7, r0
   47f5c:	str	r0, [r5]
   47f60:	mov	r0, r9
   47f64:	bl	18e8 <malloc@plt>
   47f68:	mov	r8, r0
   47f6c:	cmp	r7, #0
   47f70:	str	r0, [r5, #4]
   47f74:	beq	47f88 <Mat_VarCreate+0x284>
   47f78:	ldr	r1, [sl]
   47f7c:	mov	r0, r7
   47f80:	mov	r2, r9
   47f84:	bl	1834 <memcpy@plt>
   47f88:	cmp	r8, #0
   47f8c:	beq	48158 <Mat_VarCreate+0x454>
   47f90:	ldr	r1, [sl, #4]
   47f94:	mov	r0, r8
   47f98:	mov	r2, r9
   47f9c:	b	48154 <Mat_VarCreate+0x450>
   47fa0:	cmp	r9, #1
   47fa4:	bne	47fcc <Mat_VarCreate+0x2c8>
   47fa8:	cmp	r7, #0
   47fac:	beq	47fcc <Mat_VarCreate+0x2c8>
   47fb0:	mov	r0, r7
   47fb4:	mov	r1, #4
   47fb8:	bl	17b0 <calloc@plt>
   47fbc:	b	47fd0 <Mat_VarCreate+0x2cc>
   47fc0:	mov	r0, #1
   47fc4:	str	r8, [r4, #40]	; 0x28
   47fc8:	b	48128 <Mat_VarCreate+0x424>
   47fcc:	mov	r0, #0
   47fd0:	str	r0, [r4, #40]	; 0x28
   47fd4:	b	4815c <Mat_VarCreate+0x458>
   47fd8:	ldr	r0, [r4, #20]
   47fdc:	cmp	r0, #0
   47fe0:	beq	480fc <Mat_VarCreate+0x3f8>
   47fe4:	mov	r0, #8
   47fe8:	bl	18e8 <malloc@plt>
   47fec:	cmp	r0, #0
   47ff0:	str	r0, [r4, #40]	; 0x28
   47ff4:	cmpne	r5, #0
   47ff8:	beq	48124 <Mat_VarCreate+0x420>
   47ffc:	mov	r6, r0
   48000:	mov	r0, r5
   48004:	bl	18e8 <malloc@plt>
   48008:	mov	r7, r0
   4800c:	str	r0, [r6]
   48010:	mov	r0, r5
   48014:	bl	18e8 <malloc@plt>
   48018:	mov	r9, r0
   4801c:	cmp	r7, #0
   48020:	str	r0, [r6, #4]
   48024:	beq	48038 <Mat_VarCreate+0x334>
   48028:	ldr	r1, [r8]
   4802c:	mov	r0, r7
   48030:	mov	r2, r5
   48034:	bl	1834 <memcpy@plt>
   48038:	cmp	r9, #0
   4803c:	beq	48124 <Mat_VarCreate+0x420>
   48040:	ldr	r1, [r8, #4]
   48044:	mov	r0, r9
   48048:	b	4811c <Mat_VarCreate+0x418>
   4804c:	mov	r0, r4
   48050:	bl	1930 <Mat_VarFree@plt>
   48054:	ldr	r0, [pc, #272]	; 4816c <Mat_VarCreate+0x468>
   48058:	add	r0, pc, r0
   4805c:	bl	19cc <Mat_Critical@plt>
   48060:	mov	r4, #0
   48064:	b	4815c <Mat_VarCreate+0x458>
   48068:	mov	sl, #4
   4806c:	cmp	r8, #0
   48070:	beq	47e50 <Mat_VarCreate+0x14c>
   48074:	mov	r0, #0
   48078:	ldr	r1, [r8, r0, lsl #2]
   4807c:	add	r0, r0, #1
   48080:	cmp	r1, #0
   48084:	bne	48078 <Mat_VarCreate+0x374>
   48088:	sub	r5, r0, #1
   4808c:	cmp	r7, #0
   48090:	beq	48098 <Mat_VarCreate+0x394>
   48094:	udiv	r5, r5, r7
   48098:	ldr	r6, [r4, #52]	; 0x34
   4809c:	cmp	r5, #0
   480a0:	str	r5, [r6, #4]
   480a4:	beq	47e50 <Mat_VarCreate+0x14c>
   480a8:	mov	r0, r5
   480ac:	mov	r1, #4
   480b0:	bl	17b0 <calloc@plt>
   480b4:	str	r0, [r6, #8]
   480b8:	mov	r6, #0
   480bc:	ldr	r0, [r8, r6, lsl #2]
   480c0:	ldr	r0, [r0, #36]	; 0x24
   480c4:	bl	187c <strdup@plt>
   480c8:	ldr	r1, [r4, #52]	; 0x34
   480cc:	ldr	r1, [r1, #8]
   480d0:	str	r0, [r1, r6, lsl #2]
   480d4:	add	r6, r6, #1
   480d8:	cmp	r5, r6
   480dc:	bne	480bc <Mat_VarCreate+0x3b8>
   480e0:	umull	r7, r0, r7, r5
   480e4:	ldr	r9, [r4, #16]
   480e8:	cmp	r0, #0
   480ec:	movwne	r0, #1
   480f0:	cmp	r0, #0
   480f4:	movwne	r7, #0
   480f8:	b	47e3c <Mat_VarCreate+0x138>
   480fc:	cmp	r5, #0
   48100:	beq	48124 <Mat_VarCreate+0x420>
   48104:	mov	r0, r5
   48108:	bl	18e8 <malloc@plt>
   4810c:	cmp	r0, #0
   48110:	str	r0, [r4, #40]	; 0x28
   48114:	beq	48124 <Mat_VarCreate+0x420>
   48118:	mov	r1, r8
   4811c:	mov	r2, r5
   48120:	bl	1834 <memcpy@plt>
   48124:	mov	r0, #0
   48128:	str	r0, [r4, #44]	; 0x2c
   4812c:	b	4815c <Mat_VarCreate+0x458>
   48130:	mul	r5, r8, sl
   48134:	mov	r0, r5
   48138:	bl	18e8 <malloc@plt>
   4813c:	cmp	r0, #0
   48140:	str	r0, [r6, #24]
   48144:	beq	48158 <Mat_VarCreate+0x454>
   48148:	ldr	r1, [fp, #12]
   4814c:	mov	r2, r5
   48150:	ldr	r1, [r1, #24]
   48154:	bl	1834 <memcpy@plt>
   48158:	str	r6, [r4, #40]	; 0x28
   4815c:	mov	r0, r4
   48160:	sub	sp, fp, #28
   48164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48168:	.word	0x000046f7
   4816c:	.word	0x00004182

00048170 <Mat_VarDelete>:
   48170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48174:	add	fp, sp, #28
   48178:	sub	sp, sp, #20
   4817c:	sub	sp, sp, #8192	; 0x2000
   48180:	mov	r9, r0
   48184:	movw	r0, #22616	; 0x5858
   48188:	mov	r4, #1
   4818c:	movt	r0, #88	; 0x58
   48190:	cmp	r9, #0
   48194:	movne	r7, r1
   48198:	cmpne	r1, #0
   4819c:	str	r0, [sp, #11]
   481a0:	movw	r0, #22616	; 0x5858
   481a4:	movt	r0, #22616	; 0x5858
   481a8:	str	r0, [sp, #8]
   481ac:	bne	481bc <Mat_VarDelete+0x4c>
   481b0:	mov	r0, r4
   481b4:	sub	sp, fp, #28
   481b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   481bc:	add	r0, sp, #8
   481c0:	bl	1900 <mktemp@plt>
   481c4:	cmp	r0, #0
   481c8:	beq	4826c <Mat_VarDelete+0xfc>
   481cc:	mov	r8, r0
   481d0:	ldr	r0, [r9, #16]
   481d4:	ldr	r1, [r9, #4]
   481d8:	cmp	r0, #512	; 0x200
   481dc:	mov	r2, r0
   481e0:	movwne	r2, #256	; 0x100
   481e4:	cmp	r0, #16
   481e8:	moveq	r2, r0
   481ec:	mov	r0, r8
   481f0:	bl	19fc <Mat_CreateVer@plt>
   481f4:	cmp	r0, #0
   481f8:	beq	481b0 <Mat_VarDelete+0x40>
   481fc:	mov	r5, r0
   48200:	mov	r0, r9
   48204:	bl	199c <Mat_Rewind@plt>
   48208:	mov	r0, r9
   4820c:	bl	17bc <Mat_VarReadNext@plt>
   48210:	cmp	r0, #0
   48214:	beq	4827c <Mat_VarDelete+0x10c>
   48218:	mov	r4, r0
   4821c:	mov	r6, #1
   48220:	ldr	r0, [r4, #36]	; 0x24
   48224:	mov	r1, r7
   48228:	bl	17c8 <strcmp@plt>
   4822c:	cmp	r0, #0
   48230:	beq	48248 <Mat_VarDelete+0xd8>
   48234:	ldr	r2, [r4, #48]	; 0x30
   48238:	mov	r0, r5
   4823c:	mov	r1, r4
   48240:	bl	1840 <Mat_VarWrite@plt>
   48244:	b	4824c <Mat_VarDelete+0xdc>
   48248:	mov	r6, #0
   4824c:	mov	r0, r4
   48250:	bl	1930 <Mat_VarFree@plt>
   48254:	mov	r0, r9
   48258:	bl	17bc <Mat_VarReadNext@plt>
   4825c:	mov	r4, r0
   48260:	cmp	r0, #0
   48264:	bne	48220 <Mat_VarDelete+0xb0>
   48268:	b	48280 <Mat_VarDelete+0x110>
   4826c:	ldr	r0, [pc, #820]	; 485a8 <Mat_VarDelete+0x438>
   48270:	add	r0, pc, r0
   48274:	bl	19cc <Mat_Critical@plt>
   48278:	b	481b0 <Mat_VarDelete+0x40>
   4827c:	mov	r6, #1
   48280:	ldr	sl, [r5, #36]	; 0x24
   48284:	ldr	r7, [r5, #40]	; 0x28
   48288:	mov	r0, #0
   4828c:	str	r0, [r5, #40]	; 0x28
   48290:	mov	r0, r5
   48294:	bl	19c0 <Mat_Close@plt>
   48298:	cmp	r6, #0
   4829c:	beq	482cc <Mat_VarDelete+0x15c>
   482a0:	mov	r0, r8
   482a4:	bl	1a14 <remove@plt>
   482a8:	mov	r4, r0
   482ac:	cmn	r0, #1
   482b0:	bne	481b0 <Mat_VarDelete+0x40>
   482b4:	ldr	r0, [pc, #744]	; 485a4 <Mat_VarDelete+0x434>
   482b8:	mov	r1, r8
   482bc:	add	r0, pc, r0
   482c0:	bl	19cc <Mat_Critical@plt>
   482c4:	mvn	r4, #0
   482c8:	b	481b0 <Mat_VarDelete+0x40>
   482cc:	ldr	r1, [r9, #12]
   482d0:	ldr	r0, [pc, #684]	; 48584 <Mat_VarDelete+0x414>
   482d4:	add	r0, pc, r0
   482d8:	bl	1ddc <strdup_printf>
   482dc:	mov	r6, r0
   482e0:	ldr	r0, [r9]
   482e4:	cmp	r0, #0
   482e8:	beq	482f8 <Mat_VarDelete+0x188>
   482ec:	bl	19e4 <fclose@plt>
   482f0:	mov	r0, #0
   482f4:	str	r0, [r9]
   482f8:	add	r0, sp, #16
   482fc:	mov	r1, #0
   48300:	mov	r2, #8192	; 0x2000
   48304:	bl	19a8 <memset@plt>
   48308:	ldr	r1, [pc, #632]	; 48588 <Mat_VarDelete+0x418>
   4830c:	mov	r0, r8
   48310:	add	r1, pc, r1
   48314:	bl	17f8 <fopen@plt>
   48318:	cmp	r0, #0
   4831c:	beq	483ac <Mat_VarDelete+0x23c>
   48320:	ldr	r1, [pc, #616]	; 48590 <Mat_VarDelete+0x420>
   48324:	mov	r4, r0
   48328:	mov	r0, r6
   4832c:	add	r1, pc, r1
   48330:	bl	17f8 <fopen@plt>
   48334:	cmp	r0, #0
   48338:	beq	483bc <Mat_VarDelete+0x24c>
   4833c:	stm	sp, {r7, r8}
   48340:	mov	r5, r0
   48344:	add	r7, sp, #16
   48348:	mov	r0, r7
   4834c:	mov	r1, #1
   48350:	mov	r2, #8192	; 0x2000
   48354:	mov	r3, r4
   48358:	bl	1a50 <fread_unlocked@plt>
   4835c:	cmp	r0, #0
   48360:	beq	48430 <Mat_VarDelete+0x2c0>
   48364:	mov	r8, r0
   48368:	mov	r0, r7
   4836c:	mov	r1, #1
   48370:	mov	r3, r5
   48374:	mov	r2, r8
   48378:	bl	1864 <fwrite_unlocked@plt>
   4837c:	cmp	r8, r0
   48380:	beq	48348 <Mat_VarDelete+0x1d8>
   48384:	mov	r0, r4
   48388:	bl	19e4 <fclose@plt>
   4838c:	mov	r0, r5
   48390:	bl	19e4 <fclose@plt>
   48394:	ldr	r0, [pc, #504]	; 48594 <Mat_VarDelete+0x424>
   48398:	mov	r1, r6
   4839c:	add	r0, pc, r0
   483a0:	bl	19cc <Mat_Critical@plt>
   483a4:	ldm	sp, {r7, r8}
   483a8:	b	483d4 <Mat_VarDelete+0x264>
   483ac:	ldr	r0, [pc, #472]	; 4858c <Mat_VarDelete+0x41c>
   483b0:	mov	r1, r8
   483b4:	add	r0, pc, r0
   483b8:	b	483d0 <Mat_VarDelete+0x260>
   483bc:	mov	r0, r4
   483c0:	bl	19e4 <fclose@plt>
   483c4:	ldr	r0, [pc, #480]	; 485ac <Mat_VarDelete+0x43c>
   483c8:	mov	r1, r6
   483cc:	add	r0, pc, r0
   483d0:	bl	19cc <Mat_Critical@plt>
   483d4:	cmp	r7, #0
   483d8:	beq	4840c <Mat_VarDelete+0x29c>
   483dc:	cmp	sl, #0
   483e0:	beq	48404 <Mat_VarDelete+0x294>
   483e4:	mov	r4, r7
   483e8:	ldr	r0, [r4]
   483ec:	cmp	r0, #0
   483f0:	beq	483f8 <Mat_VarDelete+0x288>
   483f4:	bl	181c <free@plt>
   483f8:	add	r4, r4, #4
   483fc:	subs	sl, sl, #1
   48400:	bne	483e8 <Mat_VarDelete+0x278>
   48404:	mov	r0, r7
   48408:	bl	181c <free@plt>
   4840c:	ldr	r0, [pc, #388]	; 48598 <Mat_VarDelete+0x428>
   48410:	mov	r1, r8
   48414:	mov	r2, r6
   48418:	add	r0, pc, r0
   4841c:	bl	19cc <Mat_Critical@plt>
   48420:	mvn	r4, #0
   48424:	mov	r0, r6
   48428:	bl	181c <free@plt>
   4842c:	b	481b0 <Mat_VarDelete+0x40>
   48430:	mov	r0, r4
   48434:	bl	19e4 <fclose@plt>
   48438:	mov	r0, r5
   4843c:	bl	19e4 <fclose@plt>
   48440:	ldr	r5, [sp, #4]
   48444:	mov	r0, r5
   48448:	bl	1a14 <remove@plt>
   4844c:	cmn	r0, #1
   48450:	beq	48520 <Mat_VarDelete+0x3b0>
   48454:	ldr	r1, [r9, #24]
   48458:	mov	r4, r0
   4845c:	mov	r0, r6
   48460:	bl	17e0 <Mat_Open@plt>
   48464:	cmp	r0, #0
   48468:	beq	48570 <Mat_VarDelete+0x400>
   4846c:	mov	r8, r0
   48470:	ldr	r0, [r9, #4]
   48474:	cmp	r0, #0
   48478:	beq	48480 <Mat_VarDelete+0x310>
   4847c:	bl	181c <free@plt>
   48480:	ldr	r0, [r9, #8]
   48484:	cmp	r0, #0
   48488:	beq	48490 <Mat_VarDelete+0x320>
   4848c:	bl	181c <free@plt>
   48490:	ldr	r0, [r9, #12]
   48494:	cmp	r0, #0
   48498:	beq	484a0 <Mat_VarDelete+0x330>
   4849c:	bl	181c <free@plt>
   484a0:	ldr	r0, [r9, #40]	; 0x28
   484a4:	str	r6, [sp, #4]
   484a8:	cmp	r0, #0
   484ac:	beq	484ec <Mat_VarDelete+0x37c>
   484b0:	ldr	r2, [r9, #36]	; 0x24
   484b4:	cmp	r2, #0
   484b8:	beq	484e8 <Mat_VarDelete+0x378>
   484bc:	mov	r6, #0
   484c0:	ldr	r1, [r0, r6, lsl #2]
   484c4:	cmp	r1, #0
   484c8:	beq	484dc <Mat_VarDelete+0x36c>
   484cc:	mov	r0, r1
   484d0:	bl	181c <free@plt>
   484d4:	ldr	r2, [r9, #36]	; 0x24
   484d8:	ldr	r0, [r9, #40]	; 0x28
   484dc:	add	r6, r6, #1
   484e0:	cmp	r6, r2
   484e4:	bcc	484c0 <Mat_VarDelete+0x350>
   484e8:	bl	181c <free@plt>
   484ec:	mov	r1, r8
   484f0:	mov	ip, r9
   484f4:	ldm	r1!, {r2, r3, r5, r6, r7}
   484f8:	stmia	ip!, {r2, r3, r5, r6, r7}
   484fc:	ldm	r1, {r0, r2, r3, r5, r6, r7}
   48500:	stm	ip, {r0, r2, r3, r5, r6, r7}
   48504:	mov	r0, r8
   48508:	bl	181c <free@plt>
   4850c:	ldr	r0, [sp]
   48510:	ldr	r6, [sp, #4]
   48514:	str	sl, [r9, #36]	; 0x24
   48518:	str	r0, [r9, #40]	; 0x28
   4851c:	b	48424 <Mat_VarDelete+0x2b4>
   48520:	ldr	r7, [sp]
   48524:	cmp	r7, #0
   48528:	beq	4855c <Mat_VarDelete+0x3ec>
   4852c:	cmp	sl, #0
   48530:	beq	48554 <Mat_VarDelete+0x3e4>
   48534:	mov	r4, r7
   48538:	ldr	r0, [r4]
   4853c:	cmp	r0, #0
   48540:	beq	48548 <Mat_VarDelete+0x3d8>
   48544:	bl	181c <free@plt>
   48548:	add	r4, r4, #4
   4854c:	subs	sl, sl, #1
   48550:	bne	48538 <Mat_VarDelete+0x3c8>
   48554:	mov	r0, r7
   48558:	bl	181c <free@plt>
   4855c:	ldr	r0, [pc, #56]	; 4859c <Mat_VarDelete+0x42c>
   48560:	mov	r1, r5
   48564:	add	r0, pc, r0
   48568:	bl	19cc <Mat_Critical@plt>
   4856c:	b	48420 <Mat_VarDelete+0x2b0>
   48570:	ldr	r0, [pc, #40]	; 485a0 <Mat_VarDelete+0x430>
   48574:	mov	r1, r6
   48578:	add	r0, pc, r0
   4857c:	bl	19cc <Mat_Critical@plt>
   48580:	b	48424 <Mat_VarDelete+0x2b4>
   48584:	.word	0x00004197
   48588:	.word	0x00003dc4
   4858c:	.word	0x00004354
   48590:	.word	0x000043ff
   48594:	.word	0x000043b5
   48598:	.word	0x00003de0
   4859c:	.word	0x00003cb8
   485a0:	.word	0x00003cbd
   485a4:	.word	0x00003f60
   485a8:	.word	0x00003fdc
   485ac:	.word	0x00004362

000485b0 <Mat_VarReadNext>:
   485b0:	push	{r4, r5, r6, sl, fp, lr}
   485b4:	add	fp, sp, #16
   485b8:	mov	r5, r0
   485bc:	ldr	r0, [r0, #16]
   485c0:	mov	r6, #0
   485c4:	cmp	r0, #512	; 0x200
   485c8:	bne	485f0 <Mat_VarReadNext+0x40>
   485cc:	mov	r0, r5
   485d0:	bl	1a8c <Mat_VarReadNextInfo@plt>
   485d4:	cmp	r0, #0
   485d8:	beq	48628 <Mat_VarReadNext+0x78>
   485dc:	mov	r4, r0
   485e0:	mov	r0, r5
   485e4:	mov	r1, r4
   485e8:	bl	49d6c <ReadData>
   485ec:	b	4864c <Mat_VarReadNext+0x9c>
   485f0:	ldr	r0, [r5]
   485f4:	bl	1924 <feof@plt>
   485f8:	mov	r4, #0
   485fc:	cmp	r0, #0
   48600:	bne	4864c <Mat_VarReadNext+0x9c>
   48604:	ldr	r0, [r5]
   48608:	bl	1858 <ftell@plt>
   4860c:	mov	r6, r0
   48610:	cmn	r0, #1
   48614:	bne	485cc <Mat_VarReadNext+0x1c>
   48618:	ldr	r0, [pc, #52]	; 48654 <Mat_VarReadNext+0xa4>
   4861c:	add	r0, pc, r0
   48620:	bl	19cc <Mat_Critical@plt>
   48624:	b	4864c <Mat_VarReadNext+0x9c>
   48628:	ldr	r0, [r5, #16]
   4862c:	mov	r4, #0
   48630:	cmp	r0, #512	; 0x200
   48634:	beq	4864c <Mat_VarReadNext+0x9c>
   48638:	ldr	r0, [r5]
   4863c:	mov	r1, r6
   48640:	mov	r2, #0
   48644:	mov	r4, #0
   48648:	bl	1a68 <fseek@plt>
   4864c:	mov	r0, r4
   48650:	pop	{r4, r5, r6, sl, fp, pc}
   48654:	.word	0x00003510

00048658 <Mat_VarWrite>:
   48658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4865c:	add	fp, sp, #28
   48660:	sub	sp, sp, #4
   48664:	mov	r9, r0
   48668:	mvn	r0, #0
   4866c:	cmp	r9, #0
   48670:	movne	sl, r1
   48674:	cmpne	r1, #0
   48678:	bne	48684 <Mat_VarWrite+0x2c>
   4867c:	sub	sp, fp, #28
   48680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48684:	ldr	r0, [r9, #40]	; 0x28
   48688:	mov	r8, r2
   4868c:	cmp	r0, #0
   48690:	bne	486a8 <Mat_VarWrite+0x50>
   48694:	mov	r0, #0
   48698:	mov	r1, sp
   4869c:	str	r0, [sp]
   486a0:	mov	r0, r9
   486a4:	bl	1948 <Mat_GetDir@plt>
   486a8:	ldr	r6, [r9, #36]	; 0x24
   486ac:	cmp	r6, #0
   486b0:	beq	486e8 <Mat_VarWrite+0x90>
   486b4:	ldr	r4, [r9, #40]	; 0x28
   486b8:	mov	r5, #0
   486bc:	ldr	r0, [r4, r5, lsl #2]
   486c0:	cmp	r0, #0
   486c4:	beq	486dc <Mat_VarWrite+0x84>
   486c8:	ldr	r7, [sl, #36]	; 0x24
   486cc:	mov	r1, r7
   486d0:	bl	17c8 <strcmp@plt>
   486d4:	cmp	r0, #0
   486d8:	beq	48718 <Mat_VarWrite+0xc0>
   486dc:	add	r5, r5, #1
   486e0:	cmp	r5, r6
   486e4:	bcc	486bc <Mat_VarWrite+0x64>
   486e8:	ldr	r0, [r9, #16]
   486ec:	cmp	r0, #16
   486f0:	beq	48730 <Mat_VarWrite+0xd8>
   486f4:	cmp	r0, #512	; 0x200
   486f8:	beq	48728 <Mat_VarWrite+0xd0>
   486fc:	cmp	r0, #256	; 0x100
   48700:	bne	48764 <Mat_VarWrite+0x10c>
   48704:	mov	r0, r9
   48708:	mov	r1, sl
   4870c:	mov	r2, r8
   48710:	bl	412bc <Mat_VarWrite5>
   48714:	b	4873c <Mat_VarWrite+0xe4>
   48718:	ldr	r0, [pc, #196]	; 487e4 <Mat_VarWrite+0x18c>
   4871c:	mov	r1, r7
   48720:	add	r0, pc, r0
   48724:	bl	19cc <Mat_Critical@plt>
   48728:	mov	r0, #1
   4872c:	b	4867c <Mat_VarWrite+0x24>
   48730:	mov	r0, r9
   48734:	mov	r1, sl
   48738:	bl	45c84 <Mat_VarWrite4>
   4873c:	cmp	r0, #0
   48740:	bne	4867c <Mat_VarWrite+0x24>
   48744:	ldr	r0, [r9, #40]	; 0x28
   48748:	cmp	r0, #0
   4874c:	beq	4876c <Mat_VarWrite+0x114>
   48750:	ldr	r1, [r9, #36]	; 0x24
   48754:	mov	r2, #4
   48758:	add	r1, r2, r1, lsl #2
   4875c:	bl	1888 <realloc@plt>
   48760:	b	48774 <Mat_VarWrite+0x11c>
   48764:	mov	r0, #2
   48768:	b	4867c <Mat_VarWrite+0x24>
   4876c:	mov	r0, #4
   48770:	bl	18e8 <malloc@plt>
   48774:	mov	r2, r0
   48778:	cmp	r0, #0
   4877c:	beq	487b8 <Mat_VarWrite+0x160>
   48780:	str	r2, [r9, #40]	; 0x28
   48784:	ldr	r1, [sl, #36]	; 0x24
   48788:	cmp	r1, #0
   4878c:	beq	487cc <Mat_VarWrite+0x174>
   48790:	ldr	r0, [pc, #80]	; 487e8 <Mat_VarWrite+0x190>
   48794:	add	r0, pc, r0
   48798:	bl	1ddc <strdup_printf>
   4879c:	ldr	r1, [r9, #36]	; 0x24
   487a0:	ldr	r2, [r9, #40]	; 0x28
   487a4:	add	r3, r1, #1
   487a8:	str	r3, [r9, #36]	; 0x24
   487ac:	str	r0, [r2, r1, lsl #2]
   487b0:	mov	r0, #0
   487b4:	b	4867c <Mat_VarWrite+0x24>
   487b8:	ldr	r0, [pc, #44]	; 487ec <Mat_VarWrite+0x194>
   487bc:	add	r0, pc, r0
   487c0:	bl	19cc <Mat_Critical@plt>
   487c4:	mov	r0, #3
   487c8:	b	4867c <Mat_VarWrite+0x24>
   487cc:	ldr	r1, [r9, #36]	; 0x24
   487d0:	add	r0, r1, #1
   487d4:	str	r0, [r9, #36]	; 0x24
   487d8:	mov	r0, #0
   487dc:	str	r0, [r2, r1, lsl #2]
   487e0:	b	4867c <Mat_VarWrite+0x24>
   487e4:	.word	0x00003fcc
   487e8:	.word	0x00003cd7
   487ec:	.word	0x000039f3

000487f0 <Mat_VarDuplicate>:
   487f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   487f4:	add	fp, sp, #28
   487f8:	sub	sp, sp, #4
   487fc:	vpush	{d8-d9}
   48800:	sub	sp, sp, #16
   48804:	mov	r9, r1
   48808:	mov	r5, r0
   4880c:	bl	18b8 <Mat_VarCalloc@plt>
   48810:	mov	r4, r0
   48814:	cmp	r0, #0
   48818:	beq	48c74 <Mat_VarDuplicate+0x484>
   4881c:	mov	r0, #36	; 0x24
   48820:	mov	r1, r5
   48824:	mov	r2, r4
   48828:	add	sl, r5, #16
   4882c:	vld1.32	{d8-d9}, [r1], r0
   48830:	mov	r0, #48	; 0x30
   48834:	vst1.32	{d8-d9}, [r2], r0
   48838:	add	r0, r4, #16
   4883c:	vld1.32	{d16-d17}, [sl]
   48840:	vst1.32	{d16-d17}, [r0]
   48844:	ldr	r0, [r5, #44]	; 0x2c
   48848:	ldr	r3, [r5, #48]	; 0x30
   4884c:	str	r0, [r4, #44]	; 0x2c
   48850:	str	r3, [r2]
   48854:	ldr	r6, [r1]
   48858:	cmp	r6, #0
   4885c:	beq	4888c <Mat_VarDuplicate+0x9c>
   48860:	mov	r0, r6
   48864:	bl	196c <strlen@plt>
   48868:	add	r7, r0, #1
   4886c:	mov	r0, r7
   48870:	bl	18e8 <malloc@plt>
   48874:	cmp	r0, #0
   48878:	str	r0, [r4, #36]	; 0x24
   4887c:	beq	4888c <Mat_VarDuplicate+0x9c>
   48880:	mov	r1, r6
   48884:	mov	r2, r7
   48888:	bl	1834 <memcpy@plt>
   4888c:	vmov.32	r0, d8[1]
   48890:	lsl	r6, r0, #2
   48894:	mov	r0, r6
   48898:	bl	18e8 <malloc@plt>
   4889c:	cmp	r0, #0
   488a0:	str	r0, [r4, #32]
   488a4:	beq	488b4 <Mat_VarDuplicate+0xc4>
   488a8:	ldr	r1, [r5, #32]
   488ac:	mov	r2, r6
   488b0:	bl	1834 <memcpy@plt>
   488b4:	ldr	r6, [r5, #52]	; 0x34
   488b8:	cmp	r6, #0
   488bc:	beq	48af0 <Mat_VarDuplicate+0x300>
   488c0:	ldr	r0, [r6]
   488c4:	ldr	r7, [r4, #52]	; 0x34
   488c8:	mov	r1, #0
   488cc:	str	r1, [r7, #12]
   488d0:	str	r1, [r7, #16]
   488d4:	str	r0, [r7]
   488d8:	ldr	r0, [r6, #4]
   488dc:	str	r0, [r7, #4]
   488e0:	ldr	r0, [r6, #8]
   488e4:	cmp	r0, #0
   488e8:	beq	48948 <Mat_VarDuplicate+0x158>
   488ec:	ldr	r0, [r6, #4]
   488f0:	cmp	r0, #0
   488f4:	beq	48948 <Mat_VarDuplicate+0x158>
   488f8:	mov	r1, #4
   488fc:	bl	17b0 <calloc@plt>
   48900:	str	r0, [r7, #8]
   48904:	ldr	r0, [r6, #4]
   48908:	cmp	r0, #0
   4890c:	beq	48948 <Mat_VarDuplicate+0x158>
   48910:	mov	r7, #0
   48914:	ldr	r0, [r6, #8]
   48918:	ldr	r0, [r0, r7, lsl #2]
   4891c:	cmp	r0, #0
   48920:	beq	48938 <Mat_VarDuplicate+0x148>
   48924:	bl	187c <strdup@plt>
   48928:	ldr	r1, [r4, #52]	; 0x34
   4892c:	ldr	r1, [r1, #8]
   48930:	str	r0, [r1, r7, lsl #2]
   48934:	ldr	r6, [r5, #52]	; 0x34
   48938:	ldr	r0, [r6, #4]
   4893c:	add	r7, r7, #1
   48940:	cmp	r7, r0
   48944:	bcc	48914 <Mat_VarDuplicate+0x124>
   48948:	ldr	r0, [r6, #12]
   4894c:	cmp	r0, #0
   48950:	beq	48978 <Mat_VarDuplicate+0x188>
   48954:	mov	r0, #56	; 0x38
   48958:	bl	18e8 <malloc@plt>
   4895c:	ldr	r1, [r4, #52]	; 0x34
   48960:	cmp	r0, #0
   48964:	str	r0, [r1, #12]
   48968:	beq	48978 <Mat_VarDuplicate+0x188>
   4896c:	ldr	r1, [r6, #12]
   48970:	bl	1960 <inflateCopy@plt>
   48974:	ldr	r6, [r5, #52]	; 0x34
   48978:	ldr	r0, [r6, #16]
   4897c:	cmp	r0, #0
   48980:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48984:	ldr	r0, [sl]
   48988:	cmp	r0, #5
   4898c:	bne	48b04 <Mat_VarDuplicate+0x314>
   48990:	mov	r0, #28
   48994:	bl	18e8 <malloc@plt>
   48998:	mov	r7, r0
   4899c:	ldr	r0, [r4, #52]	; 0x34
   489a0:	cmp	r7, #0
   489a4:	str	r7, [r0, #16]
   489a8:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   489ac:	ldr	r8, [r6, #16]
   489b0:	ldr	r0, [r8]
   489b4:	str	r0, [r7]
   489b8:	ldr	r0, [r8, #8]
   489bc:	str	r0, [r7, #8]
   489c0:	ldr	r0, [r8, #8]
   489c4:	lsl	r0, r0, #2
   489c8:	bl	18e8 <malloc@plt>
   489cc:	cmp	r0, #0
   489d0:	str	r0, [r7, #4]
   489d4:	beq	489e4 <Mat_VarDuplicate+0x1f4>
   489d8:	ldmib	r8, {r1, r2}
   489dc:	lsl	r2, r2, #2
   489e0:	bl	1834 <memcpy@plt>
   489e4:	ldr	r0, [r8, #16]
   489e8:	str	r0, [r7, #16]
   489ec:	ldr	r0, [r8, #16]
   489f0:	lsl	r0, r0, #2
   489f4:	bl	18e8 <malloc@plt>
   489f8:	cmp	r0, #0
   489fc:	str	r0, [r7, #12]
   48a00:	beq	48a14 <Mat_VarDuplicate+0x224>
   48a04:	ldr	r2, [r8, #16]
   48a08:	ldr	r1, [r8, #12]
   48a0c:	lsl	r2, r2, #2
   48a10:	bl	1834 <memcpy@plt>
   48a14:	ldr	r0, [r8, #20]
   48a18:	ldr	r1, [r4, #20]
   48a1c:	str	r0, [r7, #20]
   48a20:	cmp	r1, #0
   48a24:	ldr	r0, [r8, #24]
   48a28:	beq	48b9c <Mat_VarDuplicate+0x3ac>
   48a2c:	cmp	r0, #0
   48a30:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48a34:	mov	r0, #8
   48a38:	bl	18e8 <malloc@plt>
   48a3c:	cmp	r0, #0
   48a40:	str	r0, [r7, #24]
   48a44:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48a48:	mov	r7, r0
   48a4c:	ldr	r0, [r8, #24]
   48a50:	ldr	r6, [r8, #20]
   48a54:	str	r0, [sp, #12]
   48a58:	ldr	r0, [r5, #8]
   48a5c:	bl	193c <Mat_SizeOf@plt>
   48a60:	mul	r0, r0, r6
   48a64:	bl	18e8 <malloc@plt>
   48a68:	cmp	r0, #0
   48a6c:	str	r0, [r7]
   48a70:	beq	48aa4 <Mat_VarDuplicate+0x2b4>
   48a74:	mov	r6, r0
   48a78:	ldr	r0, [sp, #12]
   48a7c:	ldr	r0, [r0]
   48a80:	stmib	sp, {r0, r7}
   48a84:	ldr	r0, [r5, #8]
   48a88:	ldr	r7, [r8, #20]
   48a8c:	bl	193c <Mat_SizeOf@plt>
   48a90:	ldr	r1, [sp, #4]
   48a94:	mul	r2, r0, r7
   48a98:	ldr	r7, [sp, #8]
   48a9c:	mov	r0, r6
   48aa0:	bl	1834 <memcpy@plt>
   48aa4:	ldr	r0, [r5, #8]
   48aa8:	ldr	r6, [r8, #20]
   48aac:	bl	193c <Mat_SizeOf@plt>
   48ab0:	mul	r0, r0, r6
   48ab4:	bl	18e8 <malloc@plt>
   48ab8:	cmp	r0, #0
   48abc:	str	r0, [r7, #4]
   48ac0:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48ac4:	mov	r6, r0
   48ac8:	ldr	r0, [sp, #12]
   48acc:	ldr	r7, [r8, #20]
   48ad0:	ldr	r0, [r0, #4]
   48ad4:	str	r0, [sp, #12]
   48ad8:	ldr	r0, [r5, #8]
   48adc:	bl	193c <Mat_SizeOf@plt>
   48ae0:	ldr	r1, [sp, #12]
   48ae4:	mul	r2, r0, r7
   48ae8:	mov	r0, r6
   48aec:	b	48be4 <Mat_VarDuplicate+0x3f4>
   48af0:	ldr	r0, [r4, #52]	; 0x34
   48af4:	bl	181c <free@plt>
   48af8:	mov	r0, #0
   48afc:	str	r0, [r4, #52]	; 0x34
   48b00:	b	48be8 <Mat_VarDuplicate+0x3f8>
   48b04:	ldr	r0, [r4, #20]
   48b08:	cmp	r0, #0
   48b0c:	beq	48b74 <Mat_VarDuplicate+0x384>
   48b10:	mov	r0, #8
   48b14:	bl	18e8 <malloc@plt>
   48b18:	mov	r7, r0
   48b1c:	ldr	r0, [r4, #52]	; 0x34
   48b20:	cmp	r7, #0
   48b24:	str	r7, [r0, #16]
   48b28:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48b2c:	ldr	r8, [r4]
   48b30:	ldr	r6, [r6, #16]
   48b34:	mov	r0, r8
   48b38:	bl	18e8 <malloc@plt>
   48b3c:	cmp	r0, #0
   48b40:	str	r0, [r7]
   48b44:	beq	48b54 <Mat_VarDuplicate+0x364>
   48b48:	ldr	r1, [r6]
   48b4c:	mov	r2, r8
   48b50:	bl	1834 <memcpy@plt>
   48b54:	mov	r0, r8
   48b58:	bl	18e8 <malloc@plt>
   48b5c:	cmp	r0, #0
   48b60:	str	r0, [r7, #4]
   48b64:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48b68:	ldr	r1, [r6, #4]
   48b6c:	mov	r2, r8
   48b70:	b	48be4 <Mat_VarDuplicate+0x3f4>
   48b74:	ldr	r7, [r5]
   48b78:	mov	r0, r7
   48b7c:	bl	18e8 <malloc@plt>
   48b80:	ldr	r1, [r4, #52]	; 0x34
   48b84:	cmp	r0, #0
   48b88:	str	r0, [r1, #16]
   48b8c:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48b90:	ldr	r1, [r6, #16]
   48b94:	mov	r2, r7
   48b98:	b	48be4 <Mat_VarDuplicate+0x3f4>
   48b9c:	cmp	r0, #0
   48ba0:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48ba4:	ldr	r0, [r5, #8]
   48ba8:	ldr	r6, [r8, #20]
   48bac:	bl	193c <Mat_SizeOf@plt>
   48bb0:	mul	r0, r0, r6
   48bb4:	bl	18e8 <malloc@plt>
   48bb8:	cmp	r0, #0
   48bbc:	str	r0, [r7, #24]
   48bc0:	beq	48be8 <Mat_VarDuplicate+0x3f8>
   48bc4:	mov	r6, r0
   48bc8:	ldr	r0, [r5, #8]
   48bcc:	ldr	r7, [r8, #20]
   48bd0:	ldr	r8, [r8, #24]
   48bd4:	bl	193c <Mat_SizeOf@plt>
   48bd8:	mul	r2, r0, r7
   48bdc:	mov	r0, r6
   48be0:	mov	r1, r8
   48be4:	bl	1834 <memcpy@plt>
   48be8:	ldr	r8, [r5, #40]	; 0x28
   48bec:	cmp	r9, #0
   48bf0:	beq	48c70 <Mat_VarDuplicate+0x480>
   48bf4:	cmp	r8, #0
   48bf8:	beq	48c74 <Mat_VarDuplicate+0x484>
   48bfc:	ldr	r0, [sl]
   48c00:	cmp	r0, #1
   48c04:	beq	48c88 <Mat_VarDuplicate+0x498>
   48c08:	cmp	r0, #5
   48c0c:	beq	48ce0 <Mat_VarDuplicate+0x4f0>
   48c10:	cmp	r0, #2
   48c14:	bne	48e24 <Mat_VarDuplicate+0x634>
   48c18:	ldr	r7, [r5]
   48c1c:	mov	r0, r7
   48c20:	bl	18e8 <malloc@plt>
   48c24:	cmp	r0, #0
   48c28:	str	r0, [r4, #40]	; 0x28
   48c2c:	beq	48c74 <Mat_VarDuplicate+0x484>
   48c30:	mov	r6, r0
   48c34:	ldr	r0, [r5, #12]
   48c38:	cmp	r0, #1
   48c3c:	blt	48c74 <Mat_VarDuplicate+0x484>
   48c40:	cmp	r0, r7
   48c44:	bhi	48c74 <Mat_VarDuplicate+0x484>
   48c48:	udiv	r5, r7, r0
   48c4c:	mov	r7, #0
   48c50:	ldr	r0, [r8, r7, lsl #2]
   48c54:	mov	r1, r9
   48c58:	bl	1a80 <Mat_VarDuplicate@plt>
   48c5c:	str	r0, [r6, r7, lsl #2]
   48c60:	add	r7, r7, #1
   48c64:	cmp	r7, r5
   48c68:	bcc	48c50 <Mat_VarDuplicate+0x460>
   48c6c:	b	48c74 <Mat_VarDuplicate+0x484>
   48c70:	str	r8, [r4, #40]	; 0x28
   48c74:	mov	r0, r4
   48c78:	sub	sp, fp, #48	; 0x30
   48c7c:	vpop	{d8-d9}
   48c80:	add	sp, sp, #4
   48c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48c88:	ldr	r7, [r5]
   48c8c:	mov	r0, r7
   48c90:	bl	18e8 <malloc@plt>
   48c94:	cmp	r0, #0
   48c98:	str	r0, [r4, #40]	; 0x28
   48c9c:	beq	48c74 <Mat_VarDuplicate+0x484>
   48ca0:	mov	r6, r0
   48ca4:	ldr	r0, [r5, #12]
   48ca8:	cmp	r0, #1
   48cac:	blt	48c74 <Mat_VarDuplicate+0x484>
   48cb0:	cmp	r0, r7
   48cb4:	bhi	48c74 <Mat_VarDuplicate+0x484>
   48cb8:	udiv	r5, r7, r0
   48cbc:	mov	r7, #0
   48cc0:	ldr	r0, [r8, r7, lsl #2]
   48cc4:	mov	r1, r9
   48cc8:	bl	1a80 <Mat_VarDuplicate@plt>
   48ccc:	str	r0, [r6, r7, lsl #2]
   48cd0:	add	r7, r7, #1
   48cd4:	cmp	r7, r5
   48cd8:	bcc	48cc0 <Mat_VarDuplicate+0x4d0>
   48cdc:	b	48c74 <Mat_VarDuplicate+0x484>
   48ce0:	mov	r0, #28
   48ce4:	bl	18e8 <malloc@plt>
   48ce8:	cmp	r0, #0
   48cec:	str	r0, [r4, #40]	; 0x28
   48cf0:	beq	48c74 <Mat_VarDuplicate+0x484>
   48cf4:	mov	r6, r0
   48cf8:	ldr	r0, [r8]
   48cfc:	str	r0, [r6]
   48d00:	ldr	r0, [r8, #8]
   48d04:	str	r0, [r6, #8]
   48d08:	ldr	r0, [r8, #8]
   48d0c:	lsl	r0, r0, #2
   48d10:	bl	18e8 <malloc@plt>
   48d14:	cmp	r0, #0
   48d18:	str	r0, [r6, #4]
   48d1c:	beq	48d2c <Mat_VarDuplicate+0x53c>
   48d20:	ldmib	r8, {r1, r2}
   48d24:	lsl	r2, r2, #2
   48d28:	bl	1834 <memcpy@plt>
   48d2c:	ldr	r0, [r8, #16]
   48d30:	str	r0, [r6, #16]
   48d34:	ldr	r0, [r8, #16]
   48d38:	lsl	r0, r0, #2
   48d3c:	bl	18e8 <malloc@plt>
   48d40:	cmp	r0, #0
   48d44:	str	r0, [r6, #12]
   48d48:	beq	48d5c <Mat_VarDuplicate+0x56c>
   48d4c:	ldr	r2, [r8, #16]
   48d50:	ldr	r1, [r8, #12]
   48d54:	lsl	r2, r2, #2
   48d58:	bl	1834 <memcpy@plt>
   48d5c:	ldr	r0, [r8, #20]
   48d60:	ldr	r1, [r4, #20]
   48d64:	str	r0, [r6, #20]
   48d68:	cmp	r1, #0
   48d6c:	ldr	r0, [r8, #24]
   48d70:	beq	48eb0 <Mat_VarDuplicate+0x6c0>
   48d74:	cmp	r0, #0
   48d78:	beq	48efc <Mat_VarDuplicate+0x70c>
   48d7c:	mov	r0, #8
   48d80:	bl	18e8 <malloc@plt>
   48d84:	cmp	r0, #0
   48d88:	str	r0, [r6, #24]
   48d8c:	beq	48c74 <Mat_VarDuplicate+0x484>
   48d90:	mov	r7, r0
   48d94:	ldr	r0, [r5, #8]
   48d98:	ldr	r6, [r8, #20]
   48d9c:	ldr	r9, [r8, #24]
   48da0:	bl	193c <Mat_SizeOf@plt>
   48da4:	mul	r0, r0, r6
   48da8:	bl	18e8 <malloc@plt>
   48dac:	cmp	r0, #0
   48db0:	str	r0, [r7]
   48db4:	beq	48de0 <Mat_VarDuplicate+0x5f0>
   48db8:	mov	r6, r0
   48dbc:	ldr	r0, [r9]
   48dc0:	ldr	sl, [r8, #20]
   48dc4:	str	r0, [sp, #12]
   48dc8:	ldr	r0, [r5, #8]
   48dcc:	bl	193c <Mat_SizeOf@plt>
   48dd0:	ldr	r1, [sp, #12]
   48dd4:	mul	r2, r0, sl
   48dd8:	mov	r0, r6
   48ddc:	bl	1834 <memcpy@plt>
   48de0:	ldr	r0, [r5, #8]
   48de4:	ldr	r6, [r8, #20]
   48de8:	bl	193c <Mat_SizeOf@plt>
   48dec:	mul	r0, r0, r6
   48df0:	bl	18e8 <malloc@plt>
   48df4:	cmp	r0, #0
   48df8:	str	r0, [r7, #4]
   48dfc:	beq	48c74 <Mat_VarDuplicate+0x484>
   48e00:	mov	r6, r0
   48e04:	ldr	r0, [r5, #8]
   48e08:	ldr	r9, [r9, #4]
   48e0c:	ldr	r7, [r8, #20]
   48e10:	bl	193c <Mat_SizeOf@plt>
   48e14:	mul	r2, r0, r7
   48e18:	mov	r0, r6
   48e1c:	mov	r1, r9
   48e20:	b	48ea8 <Mat_VarDuplicate+0x6b8>
   48e24:	ldr	r0, [r4, #20]
   48e28:	cmp	r0, #0
   48e2c:	beq	48e88 <Mat_VarDuplicate+0x698>
   48e30:	mov	r0, #8
   48e34:	bl	18e8 <malloc@plt>
   48e38:	cmp	r0, #0
   48e3c:	str	r0, [r4, #40]	; 0x28
   48e40:	beq	48c74 <Mat_VarDuplicate+0x484>
   48e44:	ldr	r5, [r4]
   48e48:	mov	r6, r0
   48e4c:	mov	r0, r5
   48e50:	bl	18e8 <malloc@plt>
   48e54:	cmp	r0, #0
   48e58:	str	r0, [r6]
   48e5c:	beq	48e6c <Mat_VarDuplicate+0x67c>
   48e60:	ldr	r1, [r8]
   48e64:	mov	r2, r5
   48e68:	bl	1834 <memcpy@plt>
   48e6c:	mov	r0, r5
   48e70:	bl	18e8 <malloc@plt>
   48e74:	cmp	r0, #0
   48e78:	str	r0, [r6, #4]
   48e7c:	beq	48c74 <Mat_VarDuplicate+0x484>
   48e80:	ldr	r1, [r8, #4]
   48e84:	b	48ea4 <Mat_VarDuplicate+0x6b4>
   48e88:	ldr	r5, [r5]
   48e8c:	mov	r0, r5
   48e90:	bl	18e8 <malloc@plt>
   48e94:	cmp	r0, #0
   48e98:	str	r0, [r4, #40]	; 0x28
   48e9c:	beq	48c74 <Mat_VarDuplicate+0x484>
   48ea0:	mov	r1, r8
   48ea4:	mov	r2, r5
   48ea8:	bl	1834 <memcpy@plt>
   48eac:	b	48c74 <Mat_VarDuplicate+0x484>
   48eb0:	cmp	r0, #0
   48eb4:	beq	48efc <Mat_VarDuplicate+0x70c>
   48eb8:	ldr	r0, [r5, #8]
   48ebc:	ldr	r7, [r8, #20]
   48ec0:	bl	193c <Mat_SizeOf@plt>
   48ec4:	mul	r0, r0, r7
   48ec8:	bl	18e8 <malloc@plt>
   48ecc:	cmp	r0, #0
   48ed0:	str	r0, [r6, #24]
   48ed4:	beq	48c74 <Mat_VarDuplicate+0x484>
   48ed8:	mov	r7, r0
   48edc:	ldr	r0, [r5, #8]
   48ee0:	ldr	r6, [r8, #20]
   48ee4:	ldr	r8, [r8, #24]
   48ee8:	bl	193c <Mat_SizeOf@plt>
   48eec:	mul	r2, r0, r6
   48ef0:	mov	r0, r7
   48ef4:	mov	r1, r8
   48ef8:	b	48ea8 <Mat_VarDuplicate+0x6b8>
   48efc:	mov	r0, #0
   48f00:	str	r0, [r6, #24]
   48f04:	b	48c74 <Mat_VarDuplicate+0x484>

00048f08 <Mat_CalcSingleSubscript>:
   48f08:	push	{r4, r5, r6, sl, fp, lr}
   48f0c:	add	fp, sp, #16
   48f10:	cmp	r0, #1
   48f14:	blt	48f7c <Mat_CalcSingleSubscript+0x74>
   48f18:	mov	ip, r0
   48f1c:	sub	lr, r1, #4
   48f20:	mov	r3, #0
   48f24:	mov	r0, #0
   48f28:	ldr	r4, [r2, r3, lsl #2]
   48f2c:	ldr	r5, [r1, r3, lsl #2]
   48f30:	cmp	r4, r5
   48f34:	bgt	48f84 <Mat_CalcSingleSubscript+0x7c>
   48f38:	cmp	r4, #1
   48f3c:	blt	48f90 <Mat_CalcSingleSubscript+0x88>
   48f40:	sub	r4, r4, #1
   48f44:	cmp	r3, #0
   48f48:	beq	48f64 <Mat_CalcSingleSubscript+0x5c>
   48f4c:	mov	r5, #0
   48f50:	ldr	r6, [lr, -r5, lsl #2]
   48f54:	add	r5, r5, #1
   48f58:	cmp	r3, r5
   48f5c:	mul	r4, r6, r4
   48f60:	bne	48f50 <Mat_CalcSingleSubscript+0x48>
   48f64:	add	r3, r3, #1
   48f68:	add	r0, r4, r0
   48f6c:	add	lr, lr, #4
   48f70:	cmp	r3, ip
   48f74:	bne	48f28 <Mat_CalcSingleSubscript+0x20>
   48f78:	pop	{r4, r5, r6, sl, fp, pc}
   48f7c:	mov	r0, #0
   48f80:	pop	{r4, r5, r6, sl, fp, pc}
   48f84:	ldr	r0, [pc, #12]	; 48f98 <Mat_CalcSingleSubscript+0x90>
   48f88:	add	r0, pc, r0
   48f8c:	bl	19cc <Mat_Critical@plt>
   48f90:	mvn	r0, #0
   48f94:	pop	{r4, r5, r6, sl, fp, pc}
   48f98:	.word	0x000032e6

00048f9c <Mat_CalcSingleSubscript2>:
   48f9c:	push	{r4, r5, r6, sl, fp, lr}
   48fa0:	add	fp, sp, #16
   48fa4:	cmp	r0, #1
   48fa8:	blt	4900c <Mat_CalcSingleSubscript2+0x70>
   48fac:	sub	ip, r1, #4
   48fb0:	mov	lr, #0
   48fb4:	ldr	r4, [r2, lr, lsl #2]
   48fb8:	ldr	r5, [r1, lr, lsl #2]
   48fbc:	cmp	r4, r5
   48fc0:	bhi	49014 <Mat_CalcSingleSubscript2+0x78>
   48fc4:	cmp	r4, #0
   48fc8:	beq	49020 <Mat_CalcSingleSubscript2+0x84>
   48fcc:	sub	r4, r4, #1
   48fd0:	cmp	lr, #0
   48fd4:	beq	48ff0 <Mat_CalcSingleSubscript2+0x54>
   48fd8:	mov	r5, #0
   48fdc:	ldr	r6, [ip, -r5, lsl #2]
   48fe0:	add	r5, r5, #1
   48fe4:	cmp	lr, r5
   48fe8:	mul	r4, r6, r4
   48fec:	bne	48fdc <Mat_CalcSingleSubscript2+0x40>
   48ff0:	ldr	r5, [r3]
   48ff4:	add	lr, lr, #1
   48ff8:	add	ip, ip, #4
   48ffc:	cmp	lr, r0
   49000:	add	r4, r5, r4
   49004:	str	r4, [r3]
   49008:	bne	48fb4 <Mat_CalcSingleSubscript2+0x18>
   4900c:	mov	r0, #0
   49010:	pop	{r4, r5, r6, sl, fp, pc}
   49014:	ldr	r0, [pc, #12]	; 49028 <Mat_CalcSingleSubscript2+0x8c>
   49018:	add	r0, pc, r0
   4901c:	bl	19cc <Mat_Critical@plt>
   49020:	mov	r0, #1
   49024:	pop	{r4, r5, r6, sl, fp, pc}
   49028:	.word	0x00003283

0004902c <Mat_CalcSubscripts>:
   4902c:	push	{r4, r5, r6, sl, fp, lr}
   49030:	add	fp, sp, #16
   49034:	mov	r4, r0
   49038:	lsl	r0, r0, #2
   4903c:	mov	r5, r2
   49040:	mov	r6, r1
   49044:	bl	18e8 <malloc@plt>
   49048:	cmp	r4, #0
   4904c:	beq	490b4 <Mat_CalcSubscripts+0x88>
   49050:	vmov	s0, r5
   49054:	sub	r1, r6, #8
   49058:	vcvt.f64.s32	d16, s0
   4905c:	mov	r3, #1
   49060:	subs	r2, r4, #1
   49064:	beq	4907c <Mat_CalcSubscripts+0x50>
   49068:	ldr	r6, [r1, r4, lsl #2]
   4906c:	sub	r4, r4, #1
   49070:	cmp	r4, #1
   49074:	mul	r3, r6, r3
   49078:	bne	49068 <Mat_CalcSubscripts+0x3c>
   4907c:	vmov	s0, r3
   49080:	cmp	r2, #0
   49084:	mov	r4, r2
   49088:	vcvt.f64.s32	d17, s0
   4908c:	vdiv.f64	d17, d16, d17
   49090:	vcvtm.s32.f64	s0, d17
   49094:	vmov	r6, s0
   49098:	mul	r3, r3, r6
   4909c:	vmov	s0, r3
   490a0:	add	r3, r6, #1
   490a4:	vcvt.f64.s32	d17, s0
   490a8:	str	r3, [r0, r2, lsl #2]
   490ac:	vsub.f64	d16, d16, d17
   490b0:	bne	4905c <Mat_CalcSubscripts+0x30>
   490b4:	pop	{r4, r5, r6, sl, fp, pc}

000490b8 <Mat_CalcSubscripts2>:
   490b8:	push	{r4, r5, r6, sl, fp, lr}
   490bc:	add	fp, sp, #16
   490c0:	mov	r4, r0
   490c4:	lsl	r0, r0, #2
   490c8:	mov	r5, r2
   490cc:	mov	r6, r1
   490d0:	bl	18e8 <malloc@plt>
   490d4:	cmp	r4, #0
   490d8:	beq	49140 <Mat_CalcSubscripts2+0x88>
   490dc:	vmov	s0, r5
   490e0:	sub	r1, r6, #8
   490e4:	vcvt.f64.u32	d16, s0
   490e8:	mov	r3, #1
   490ec:	subs	r2, r4, #1
   490f0:	beq	49108 <Mat_CalcSubscripts2+0x50>
   490f4:	ldr	r6, [r1, r4, lsl #2]
   490f8:	sub	r4, r4, #1
   490fc:	cmp	r4, #1
   49100:	mul	r3, r6, r3
   49104:	bne	490f4 <Mat_CalcSubscripts2+0x3c>
   49108:	vmov	s0, r3
   4910c:	cmp	r2, #0
   49110:	mov	r4, r2
   49114:	vcvt.f64.u32	d17, s0
   49118:	vdiv.f64	d17, d16, d17
   4911c:	vcvtm.u32.f64	s0, d17
   49120:	vmov	r6, s0
   49124:	mul	r3, r3, r6
   49128:	vmov	s0, r3
   4912c:	add	r3, r6, #1
   49130:	vcvt.f64.u32	d17, s0
   49134:	str	r3, [r0, r2, lsl #2]
   49138:	vsub.f64	d16, d16, d17
   4913c:	bne	490e8 <Mat_CalcSubscripts2+0x30>
   49140:	pop	{r4, r5, r6, sl, fp, pc}

00049144 <Mat_VarGetSize>:
   49144:	push	{r4, r5, r6, r7, fp, lr}
   49148:	add	fp, sp, #16
   4914c:	mov	r4, r0
   49150:	ldr	r0, [r0, #16]
   49154:	cmp	r0, #1
   49158:	beq	49214 <Mat_VarGetSize+0xd0>
   4915c:	cmp	r0, #5
   49160:	beq	49278 <Mat_VarGetSize+0x134>
   49164:	cmp	r0, #2
   49168:	bne	492d8 <Mat_VarGetSize+0x194>
   4916c:	ldr	r6, [r4, #40]	; 0x28
   49170:	mov	r5, #0
   49174:	cmp	r6, #0
   49178:	beq	49204 <Mat_VarGetSize+0xc0>
   4917c:	ldr	r1, [r4, #52]	; 0x34
   49180:	ldr	r0, [r4, #4]
   49184:	ldr	r7, [r1, #4]
   49188:	cmp	r0, #1
   4918c:	blt	491b0 <Mat_VarGetSize+0x6c>
   49190:	ldr	r1, [r4, #32]
   49194:	ldr	r2, [r1]
   49198:	umull	r7, r2, r7, r2
   4919c:	cmp	r2, #0
   491a0:	bne	49204 <Mat_VarGetSize+0xc0>
   491a4:	add	r1, r1, #4
   491a8:	subs	r0, r0, #1
   491ac:	bne	49194 <Mat_VarGetSize+0x50>
   491b0:	mov	r0, #60	; 0x3c
   491b4:	umull	r5, r0, r7, r0
   491b8:	cmp	r0, #0
   491bc:	movwne	r0, #1
   491c0:	cmp	r0, #0
   491c4:	movwne	r5, #0
   491c8:	cmp	r7, #0
   491cc:	beq	49204 <Mat_VarGetSize+0xc0>
   491d0:	ldr	r0, [r6]
   491d4:	cmp	r0, #0
   491d8:	beq	491f8 <Mat_VarGetSize+0xb4>
   491dc:	ldr	r1, [r0, #16]
   491e0:	cmp	r1, #0
   491e4:	beq	491f4 <Mat_VarGetSize+0xb0>
   491e8:	bl	1a5c <Mat_VarGetSize@plt>
   491ec:	add	r5, r0, r5
   491f0:	b	491f8 <Mat_VarGetSize+0xb4>
   491f4:	sub	r5, r5, #56	; 0x38
   491f8:	add	r6, r6, #4
   491fc:	subs	r7, r7, #1
   49200:	bne	491d0 <Mat_VarGetSize+0x8c>
   49204:	ldr	r0, [r4, #52]	; 0x34
   49208:	ldr	r0, [r0, #4]
   4920c:	add	r5, r5, r0, lsl #6
   49210:	b	49310 <Mat_VarGetSize+0x1cc>
   49214:	ldr	r6, [r4, #40]	; 0x28
   49218:	cmp	r6, #0
   4921c:	beq	4930c <Mat_VarGetSize+0x1c8>
   49220:	ldr	r0, [r4]
   49224:	ldr	r1, [r4, #12]
   49228:	udiv	r4, r0, r1
   4922c:	cmp	r1, r0
   49230:	rsb	r2, r4, r4, lsl #4
   49234:	lsl	r5, r2, #2
   49238:	bhi	49310 <Mat_VarGetSize+0x1cc>
   4923c:	mov	r7, #0
   49240:	ldr	r0, [r6, r7, lsl #2]
   49244:	cmp	r0, #0
   49248:	beq	49268 <Mat_VarGetSize+0x124>
   4924c:	ldr	r1, [r0, #16]
   49250:	cmp	r1, #0
   49254:	beq	49264 <Mat_VarGetSize+0x120>
   49258:	bl	1a5c <Mat_VarGetSize@plt>
   4925c:	add	r5, r0, r5
   49260:	b	49268 <Mat_VarGetSize+0x124>
   49264:	sub	r5, r5, #56	; 0x38
   49268:	add	r7, r7, #1
   4926c:	cmp	r7, r4
   49270:	bcc	49240 <Mat_VarGetSize+0xfc>
   49274:	b	49310 <Mat_VarGetSize+0x1cc>
   49278:	ldr	r6, [r4, #40]	; 0x28
   4927c:	cmp	r6, #0
   49280:	beq	4930c <Mat_VarGetSize+0x1c8>
   49284:	ldr	r0, [r4, #8]
   49288:	ldr	r5, [r6, #20]
   4928c:	bl	193c <Mat_SizeOf@plt>
   49290:	mul	r1, r0, r5
   49294:	ldr	r2, [r4, #20]
   49298:	ldr	r0, [r6, #8]
   4929c:	ldr	r3, [r6, #16]
   492a0:	cmp	r2, #0
   492a4:	add	r7, r3, r0
   492a8:	movwne	r2, #1
   492ac:	lsl	r7, r7, #2
   492b0:	cmp	r3, #0
   492b4:	add	r5, r7, r1, lsl r2
   492b8:	cmpne	r0, #0
   492bc:	bne	49330 <Mat_VarGetSize+0x1ec>
   492c0:	ldr	r0, [r4, #28]
   492c4:	mov	r1, #1
   492c8:	cmp	r0, #0
   492cc:	movweq	r1, #8
   492d0:	add	r5, r1, r5
   492d4:	b	49310 <Mat_VarGetSize+0x1cc>
   492d8:	ldr	r5, [r4, #4]
   492dc:	cmp	r5, #1
   492e0:	blt	4930c <Mat_VarGetSize+0x1c8>
   492e4:	bl	1a38 <Mat_SizeOfClass@plt>
   492e8:	ldr	r1, [r4, #32]
   492ec:	ldr	r2, [r1]
   492f0:	umull	r0, r2, r0, r2
   492f4:	cmp	r2, #0
   492f8:	bne	49318 <Mat_VarGetSize+0x1d4>
   492fc:	add	r1, r1, #4
   49300:	subs	r5, r5, #1
   49304:	bne	492ec <Mat_VarGetSize+0x1a8>
   49308:	b	4931c <Mat_VarGetSize+0x1d8>
   4930c:	mov	r5, #0
   49310:	mov	r0, r5
   49314:	pop	{r4, r5, r6, r7, fp, pc}
   49318:	mov	r0, #0
   4931c:	ldr	r1, [r4, #20]
   49320:	cmp	r1, #0
   49324:	movwne	r1, #1
   49328:	lsl	r0, r0, r1
   4932c:	pop	{r4, r5, r6, r7, fp, pc}
   49330:	ldr	r0, [r6, #20]
   49334:	cmp	r0, #0
   49338:	bne	49310 <Mat_VarGetSize+0x1cc>
   4933c:	b	492c0 <Mat_VarGetSize+0x17c>

00049340 <Mat_VarPrint>:
   49340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49344:	add	fp, sp, #28
   49348:	sub	sp, sp, #4
   4934c:	cmp	r0, #0
   49350:	beq	49624 <Mat_VarPrint+0x2e4>
   49354:	mov	r9, r1
   49358:	ldr	r1, [r0, #36]	; 0x24
   4935c:	mov	sl, r0
   49360:	cmp	r1, #0
   49364:	beq	49374 <Mat_VarPrint+0x34>
   49368:	ldr	r0, [pc, #2012]	; 49b4c <Mat_VarPrint+0x80c>
   4936c:	add	r0, pc, r0
   49370:	bl	17ec <printf@plt>
   49374:	ldr	r1, [sl, #4]
   49378:	ldr	r0, [pc, #2000]	; 49b50 <Mat_VarPrint+0x810>
   4937c:	add	r0, pc, r0
   49380:	bl	17ec <printf@plt>
   49384:	ldr	r0, [sl, #4]
   49388:	cmp	r0, #1
   4938c:	blt	49624 <Mat_VarPrint+0x2e4>
   49390:	ldr	r1, [sl, #32]
   49394:	cmp	r1, #0
   49398:	beq	493c4 <Mat_VarPrint+0x84>
   4939c:	mov	r7, #1
   493a0:	mov	r2, #0
   493a4:	ldr	r3, [r1, r2, lsl #2]
   493a8:	umull	r7, r3, r7, r3
   493ac:	cmp	r3, #0
   493b0:	bne	493cc <Mat_VarPrint+0x8c>
   493b4:	add	r2, r2, #1
   493b8:	cmp	r0, r2
   493bc:	bne	493a4 <Mat_VarPrint+0x64>
   493c0:	b	493d0 <Mat_VarPrint+0x90>
   493c4:	mov	r7, #0
   493c8:	b	49420 <Mat_VarPrint+0xe0>
   493cc:	mov	r7, #0
   493d0:	ldr	r1, [r1]
   493d4:	ldr	r0, [pc, #1912]	; 49b54 <Mat_VarPrint+0x814>
   493d8:	add	r0, pc, r0
   493dc:	bl	17ec <printf@plt>
   493e0:	ldr	r0, [sl, #4]
   493e4:	cmp	r0, #2
   493e8:	blt	49418 <Mat_VarPrint+0xd8>
   493ec:	ldr	r6, [pc, #1892]	; 49b58 <Mat_VarPrint+0x818>
   493f0:	mov	r4, #1
   493f4:	add	r6, pc, r6
   493f8:	ldr	r0, [sl, #32]
   493fc:	ldr	r1, [r0, r4, lsl #2]
   49400:	mov	r0, r6
   49404:	bl	17ec <printf@plt>
   49408:	ldr	r0, [sl, #4]
   4940c:	add	r4, r4, #1
   49410:	cmp	r4, r0
   49414:	blt	493f8 <Mat_VarPrint+0xb8>
   49418:	mov	r0, #10
   4941c:	bl	19b4 <putchar@plt>
   49420:	ldr	r0, [sl, #16]
   49424:	ldr	r1, [pc, #1840]	; 49b5c <Mat_VarPrint+0x81c>
   49428:	add	r1, pc, r1
   4942c:	ldr	r1, [r1, r0, lsl #2]
   49430:	ldr	r0, [pc, #1832]	; 49b60 <Mat_VarPrint+0x820>
   49434:	add	r0, pc, r0
   49438:	bl	17ec <printf@plt>
   4943c:	ldr	r0, [sl, #20]
   49440:	cmp	r0, #0
   49444:	beq	49454 <Mat_VarPrint+0x114>
   49448:	ldr	r0, [pc, #1812]	; 49b64 <Mat_VarPrint+0x824>
   4944c:	add	r0, pc, r0
   49450:	b	49468 <Mat_VarPrint+0x128>
   49454:	ldr	r0, [sl, #28]
   49458:	cmp	r0, #0
   4945c:	beq	4946c <Mat_VarPrint+0x12c>
   49460:	ldr	r0, [pc, #1792]	; 49b68 <Mat_VarPrint+0x828>
   49464:	add	r0, pc, r0
   49468:	bl	17ec <printf@plt>
   4946c:	mov	r0, #10
   49470:	bl	19b4 <putchar@plt>
   49474:	ldr	r0, [sl, #8]
   49478:	cmp	r0, #0
   4947c:	beq	49498 <Mat_VarPrint+0x158>
   49480:	ldr	r1, [pc, #1764]	; 49b6c <Mat_VarPrint+0x82c>
   49484:	add	r1, pc, r1
   49488:	ldr	r1, [r1, r0, lsl #2]
   4948c:	ldr	r0, [pc, #1756]	; 49b70 <Mat_VarPrint+0x830>
   49490:	add	r0, pc, r0
   49494:	bl	17ec <printf@plt>
   49498:	ldr	r0, [sl, #16]
   4949c:	cmp	r0, #2
   494a0:	bne	49528 <Mat_VarPrint+0x1e8>
   494a4:	ldr	r0, [sl, #52]	; 0x34
   494a8:	ldr	r6, [r0, #4]
   494ac:	umull	r7, r0, r7, r6
   494b0:	cmp	r0, #0
   494b4:	bne	49598 <Mat_VarPrint+0x258>
   494b8:	cmp	r7, #0
   494bc:	beq	49598 <Mat_VarPrint+0x258>
   494c0:	ldr	r5, [sl, #40]	; 0x28
   494c4:	ldr	r0, [pc, #1704]	; 49b74 <Mat_VarPrint+0x834>
   494c8:	mov	r1, r7
   494cc:	add	r0, pc, r0
   494d0:	bl	17ec <printf@plt>
   494d4:	ldr	r8, [pc, #1692]	; 49b78 <Mat_VarPrint+0x838>
   494d8:	mov	r4, #0
   494dc:	add	r8, pc, r8
   494e0:	ldr	r0, [r5, r4, lsl #2]
   494e4:	cmp	r0, #0
   494e8:	beq	494f8 <Mat_VarPrint+0x1b8>
   494ec:	mov	r1, r9
   494f0:	bl	1984 <Mat_VarPrint@plt>
   494f4:	b	49518 <Mat_VarPrint+0x1d8>
   494f8:	udiv	r0, r4, r6
   494fc:	ldr	r1, [sl, #52]	; 0x34
   49500:	mov	r2, #0
   49504:	ldr	r1, [r1, #8]
   49508:	mls	r0, r0, r6, r4
   4950c:	ldr	r1, [r1, r0, lsl #2]
   49510:	mov	r0, r8
   49514:	bl	17ec <printf@plt>
   49518:	add	r4, r4, #1
   4951c:	cmp	r7, r4
   49520:	bne	494e0 <Mat_VarPrint+0x1a0>
   49524:	b	495e0 <Mat_VarPrint+0x2a0>
   49528:	ldr	r5, [sl, #40]	; 0x28
   4952c:	cmp	r5, #0
   49530:	beq	49584 <Mat_VarPrint+0x244>
   49534:	ldr	r4, [sl, #12]
   49538:	cmp	r4, #0
   4953c:	ble	49584 <Mat_VarPrint+0x244>
   49540:	cmp	r0, #1
   49544:	bne	495f4 <Mat_VarPrint+0x2b4>
   49548:	ldr	r6, [sl]
   4954c:	ldr	r0, [pc, #1592]	; 49b8c <Mat_VarPrint+0x84c>
   49550:	add	r0, pc, r0
   49554:	bl	18dc <puts@plt>
   49558:	cmp	r4, r6
   4955c:	bhi	495e0 <Mat_VarPrint+0x2a0>
   49560:	udiv	r4, r6, r4
   49564:	mov	r6, #0
   49568:	ldr	r0, [r5, r6, lsl #2]
   4956c:	mov	r1, r9
   49570:	bl	1984 <Mat_VarPrint@plt>
   49574:	add	r6, r6, #1
   49578:	cmp	r6, r4
   4957c:	bcc	49568 <Mat_VarPrint+0x228>
   49580:	b	495e0 <Mat_VarPrint+0x2a0>
   49584:	cmp	r9, #0
   49588:	beq	49624 <Mat_VarPrint+0x2e4>
   4958c:	ldr	r0, [pc, #1524]	; 49b88 <Mat_VarPrint+0x848>
   49590:	add	r0, pc, r0
   49594:	b	495e8 <Mat_VarPrint+0x2a8>
   49598:	ldr	r0, [pc, #1504]	; 49b80 <Mat_VarPrint+0x840>
   4959c:	mov	r1, r6
   495a0:	add	r0, pc, r0
   495a4:	bl	17ec <printf@plt>
   495a8:	cmp	r6, #0
   495ac:	beq	495e0 <Mat_VarPrint+0x2a0>
   495b0:	ldr	r5, [pc, #1484]	; 49b84 <Mat_VarPrint+0x844>
   495b4:	mov	r4, #0
   495b8:	add	r5, pc, r5
   495bc:	ldr	r0, [sl, #52]	; 0x34
   495c0:	mov	r2, #0
   495c4:	ldr	r0, [r0, #8]
   495c8:	ldr	r1, [r0, r4, lsl #2]
   495cc:	mov	r0, r5
   495d0:	bl	17ec <printf@plt>
   495d4:	add	r4, r4, #1
   495d8:	cmp	r6, r4
   495dc:	bne	495bc <Mat_VarPrint+0x27c>
   495e0:	ldr	r0, [pc, #1428]	; 49b7c <Mat_VarPrint+0x83c>
   495e4:	add	r0, pc, r0
   495e8:	sub	sp, fp, #28
   495ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   495f0:	b	18dc <puts@plt>
   495f4:	cmp	r9, #0
   495f8:	beq	49624 <Mat_VarPrint+0x2e4>
   495fc:	ldr	r0, [pc, #1420]	; 49b90 <Mat_VarPrint+0x850>
   49600:	add	r0, pc, r0
   49604:	bl	18dc <puts@plt>
   49608:	ldr	r0, [sl, #4]
   4960c:	cmp	r0, #3
   49610:	blt	4962c <Mat_VarPrint+0x2ec>
   49614:	ldr	r0, [pc, #1400]	; 49b94 <Mat_VarPrint+0x854>
   49618:	add	r0, pc, r0
   4961c:	bl	18dc <puts@plt>
   49620:	b	495e0 <Mat_VarPrint+0x2a0>
   49624:	sub	sp, fp, #28
   49628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4962c:	cmp	r0, #2
   49630:	beq	49660 <Mat_VarPrint+0x320>
   49634:	cmp	r0, #1
   49638:	bne	495e0 <Mat_VarPrint+0x2a0>
   4963c:	ldr	r0, [sl, #32]
   49640:	cmp	r0, #0
   49644:	beq	495e0 <Mat_VarPrint+0x2a0>
   49648:	ldr	r0, [r0]
   4964c:	cmp	r0, #16
   49650:	bcc	495e0 <Mat_VarPrint+0x2a0>
   49654:	ldr	r0, [pc, #1340]	; 49b98 <Mat_VarPrint+0x858>
   49658:	add	r0, pc, r0
   4965c:	b	4961c <Mat_VarPrint+0x2dc>
   49660:	ldr	r0, [sl, #32]
   49664:	cmp	r0, #0
   49668:	beq	495e0 <Mat_VarPrint+0x2a0>
   4966c:	ldr	r1, [sl, #16]
   49670:	sub	r2, r1, #6
   49674:	cmp	r2, #10
   49678:	bcs	4983c <Mat_VarPrint+0x4fc>
   4967c:	ldr	r0, [sl, #8]
   49680:	bl	193c <Mat_SizeOf@plt>
   49684:	mov	r5, r0
   49688:	ldr	r0, [sl, #20]
   4968c:	cmp	r0, #0
   49690:	beq	49758 <Mat_VarPrint+0x418>
   49694:	ldr	r1, [sl, #32]
   49698:	ldr	r0, [r1]
   4969c:	cmp	r0, #0
   496a0:	beq	495e0 <Mat_VarPrint+0x2a0>
   496a4:	ldr	r2, [sl, #40]	; 0x28
   496a8:	mov	r7, #0
   496ac:	ldm	r2, {r6, r8}
   496b0:	ldr	r1, [r1, #4]
   496b4:	cmp	r1, #0
   496b8:	beq	4972c <Mat_VarPrint+0x3ec>
   496bc:	mov	r9, #1
   496c0:	b	496cc <Mat_VarPrint+0x38c>
   496c4:	ldr	r0, [r0]
   496c8:	add	r9, r9, #1
   496cc:	sub	r1, r9, #1
   496d0:	mla	r4, r0, r1, r7
   496d4:	ldr	r0, [sl, #8]
   496d8:	mla	r1, r4, r5, r6
   496dc:	bl	49bc8 <Mat_PrintNumber>
   496e0:	ldr	r0, [pc, #1204]	; 49b9c <Mat_VarPrint+0x85c>
   496e4:	add	r0, pc, r0
   496e8:	bl	17ec <printf@plt>
   496ec:	ldr	r0, [sl, #8]
   496f0:	mla	r1, r4, r5, r8
   496f4:	bl	49bc8 <Mat_PrintNumber>
   496f8:	ldr	r0, [pc, #1184]	; 49ba0 <Mat_VarPrint+0x860>
   496fc:	add	r0, pc, r0
   49700:	bl	17ec <printf@plt>
   49704:	ldr	r0, [sl, #32]
   49708:	cmp	r9, #14
   4970c:	ldr	r1, [r0, #4]
   49710:	cmpls	r9, r1
   49714:	bcc	496c4 <Mat_VarPrint+0x384>
   49718:	cmp	r9, r1
   4971c:	bcs	4972c <Mat_VarPrint+0x3ec>
   49720:	ldr	r0, [pc, #1148]	; 49ba4 <Mat_VarPrint+0x864>
   49724:	add	r0, pc, r0
   49728:	bl	17ec <printf@plt>
   4972c:	mov	r0, #10
   49730:	bl	19b4 <putchar@plt>
   49734:	ldr	r1, [sl, #32]
   49738:	add	r7, r7, #1
   4973c:	cmp	r7, #14
   49740:	ldr	r0, [r1]
   49744:	cmpls	r7, r0
   49748:	bcc	496b0 <Mat_VarPrint+0x370>
   4974c:	cmp	r7, r0
   49750:	bcs	495e0 <Mat_VarPrint+0x2a0>
   49754:	b	49830 <Mat_VarPrint+0x4f0>
   49758:	ldr	r0, [sl, #32]
   4975c:	ldr	r1, [r0]
   49760:	cmp	r1, #0
   49764:	beq	495e0 <Mat_VarPrint+0x2a0>
   49768:	ldr	r9, [sl, #40]	; 0x28
   4976c:	ldr	r8, [pc, #1080]	; 49bac <Mat_VarPrint+0x86c>
   49770:	mov	r7, #0
   49774:	add	r8, pc, r8
   49778:	ldr	r0, [r0, #4]
   4977c:	cmp	r0, #0
   49780:	beq	49808 <Mat_VarPrint+0x4c8>
   49784:	ldr	r0, [sl, #8]
   49788:	mla	r1, r7, r5, r9
   4978c:	bl	49bc8 <Mat_PrintNumber>
   49790:	mov	r0, #32
   49794:	bl	19b4 <putchar@plt>
   49798:	ldr	r0, [sl, #32]
   4979c:	mov	r1, #0
   497a0:	ldr	r2, [r0, #4]
   497a4:	cmp	r2, #1
   497a8:	movwhi	r1, #1
   497ac:	cmp	r2, #2
   497b0:	bcc	497f8 <Mat_VarPrint+0x4b8>
   497b4:	mov	r6, #1
   497b8:	ldr	r0, [r0]
   497bc:	mla	r0, r0, r6, r7
   497c0:	mla	r1, r0, r5, r9
   497c4:	ldr	r0, [sl, #8]
   497c8:	bl	49bc8 <Mat_PrintNumber>
   497cc:	mov	r0, #32
   497d0:	bl	19b4 <putchar@plt>
   497d4:	ldr	r0, [sl, #32]
   497d8:	add	r6, r6, #1
   497dc:	mov	r1, #0
   497e0:	ldr	r2, [r0, #4]
   497e4:	cmp	r6, r2
   497e8:	movwcc	r1, #1
   497ec:	cmp	r6, #14
   497f0:	cmpls	r6, r2
   497f4:	bcc	497b8 <Mat_VarPrint+0x478>
   497f8:	cmp	r1, #0
   497fc:	beq	49808 <Mat_VarPrint+0x4c8>
   49800:	mov	r0, r8
   49804:	bl	17ec <printf@plt>
   49808:	mov	r0, #10
   4980c:	bl	19b4 <putchar@plt>
   49810:	ldr	r0, [sl, #32]
   49814:	add	r7, r7, #1
   49818:	cmp	r7, #14
   4981c:	ldr	r1, [r0]
   49820:	cmpls	r7, r1
   49824:	bcc	49778 <Mat_VarPrint+0x438>
   49828:	cmp	r7, r1
   4982c:	bcs	495e0 <Mat_VarPrint+0x2a0>
   49830:	ldr	r0, [pc, #880]	; 49ba8 <Mat_VarPrint+0x868>
   49834:	add	r0, pc, r0
   49838:	b	4961c <Mat_VarPrint+0x2dc>
   4983c:	cmp	r1, #4
   49840:	beq	49934 <Mat_VarPrint+0x5f4>
   49844:	cmp	r1, #5
   49848:	bne	495e0 <Mat_VarPrint+0x2a0>
   4984c:	ldr	r0, [sl, #8]
   49850:	bl	193c <Mat_SizeOf@plt>
   49854:	str	r0, [sp]
   49858:	ldr	r0, [sl, #20]
   4985c:	ldr	r5, [sl, #40]	; 0x28
   49860:	cmp	r0, #0
   49864:	beq	49a1c <Mat_VarPrint+0x6dc>
   49868:	ldr	r1, [r5, #16]
   4986c:	cmp	r1, #1
   49870:	beq	495e0 <Mat_VarPrint+0x2a0>
   49874:	ldr	r0, [r5, #24]
   49878:	mov	r6, #0
   4987c:	ldm	r0, {r8, r9}
   49880:	ldr	r0, [r5, #12]
   49884:	ldr	r7, [r0, r6, lsl #2]
   49888:	add	r6, r6, #1
   4988c:	ldr	r2, [r0, r6, lsl #2]
   49890:	cmp	r7, r2
   49894:	bcs	49924 <Mat_VarPrint+0x5e4>
   49898:	ldr	r1, [r5, #20]
   4989c:	cmp	r7, r1
   498a0:	bcs	49920 <Mat_VarPrint+0x5e0>
   498a4:	ldr	r0, [sp]
   498a8:	mul	r4, r0, r7
   498ac:	ldr	r0, [r5, #4]
   498b0:	mov	r2, r6
   498b4:	ldr	r0, [r0, r7, lsl #2]
   498b8:	add	r1, r0, #1
   498bc:	ldr	r0, [pc, #756]	; 49bb8 <Mat_VarPrint+0x878>
   498c0:	add	r0, pc, r0
   498c4:	bl	17ec <printf@plt>
   498c8:	ldr	r0, [sl, #8]
   498cc:	add	r1, r8, r4
   498d0:	bl	49bc8 <Mat_PrintNumber>
   498d4:	ldr	r0, [pc, #736]	; 49bbc <Mat_VarPrint+0x87c>
   498d8:	add	r0, pc, r0
   498dc:	bl	17ec <printf@plt>
   498e0:	ldr	r0, [sl, #8]
   498e4:	add	r1, r9, r4
   498e8:	bl	49bc8 <Mat_PrintNumber>
   498ec:	ldr	r0, [pc, #716]	; 49bc0 <Mat_VarPrint+0x880>
   498f0:	add	r0, pc, r0
   498f4:	bl	18dc <puts@plt>
   498f8:	ldr	r0, [r5, #12]
   498fc:	add	r7, r7, #1
   49900:	ldr	r1, [r0, r6, lsl #2]
   49904:	cmp	r7, r1
   49908:	bcs	49920 <Mat_VarPrint+0x5e0>
   4990c:	ldr	r1, [sp]
   49910:	add	r4, r4, r1
   49914:	ldr	r1, [r5, #20]
   49918:	cmp	r7, r1
   4991c:	bcc	498ac <Mat_VarPrint+0x56c>
   49920:	ldr	r1, [r5, #16]
   49924:	sub	r2, r1, #1
   49928:	cmp	r6, r2
   4992c:	bcc	49884 <Mat_VarPrint+0x544>
   49930:	b	495e0 <Mat_VarPrint+0x2a0>
   49934:	ldr	r1, [sl, #8]
   49938:	cmp	r1, #17
   4993c:	cmpne	r1, #4
   49940:	bne	49acc <Mat_VarPrint+0x78c>
   49944:	ldr	r1, [r0]
   49948:	cmp	r1, #0
   4994c:	beq	495e0 <Mat_VarPrint+0x2a0>
   49950:	ldr	r7, [sl, #40]	; 0x28
   49954:	ldr	r4, [pc, #596]	; 49bb0 <Mat_VarPrint+0x870>
   49958:	mov	r5, #0
   4995c:	mov	r6, #2
   49960:	mov	r9, #0
   49964:	add	r4, pc, r4
   49968:	ldr	r0, [r0, #4]
   4996c:	cmp	r0, #0
   49970:	beq	499fc <Mat_VarPrint+0x6bc>
   49974:	mov	r8, #1
   49978:	sub	r0, r8, #1
   4997c:	mla	r0, r1, r0, r9
   49980:	add	r0, r7, r0, lsl #1
   49984:	ldrh	r3, [r0]
   49988:	cmp	r3, #127	; 0x7f
   4998c:	bhi	4999c <Mat_VarPrint+0x65c>
   49990:	mov	r0, r3
   49994:	bl	19b4 <putchar@plt>
   49998:	b	499e0 <Mat_VarPrint+0x6a0>
   4999c:	cmp	r5, r3, lsr #11
   499a0:	bne	499c4 <Mat_VarPrint+0x684>
   499a4:	mov	r0, #192	; 0xc0
   499a8:	orr	r1, r0, r3, lsr #6
   499ac:	ldr	r0, [pc, #512]	; 49bb4 <Mat_VarPrint+0x874>
   499b0:	bfi	r3, r6, #6, #26
   499b4:	mov	r2, r3
   499b8:	add	r0, pc, r0
   499bc:	bl	17ec <printf@plt>
   499c0:	b	499e0 <Mat_VarPrint+0x6a0>
   499c4:	lsr	r2, r3, #6
   499c8:	mov	r0, #224	; 0xe0
   499cc:	orr	r1, r0, r3, lsr #12
   499d0:	bfi	r3, r6, #6, #26
   499d4:	bfi	r2, r6, #6, #26
   499d8:	mov	r0, r4
   499dc:	bl	17ec <printf@plt>
   499e0:	ldr	r0, [sl, #32]
   499e4:	ldr	r1, [r0, #4]
   499e8:	cmp	r8, r1
   499ec:	bcs	499fc <Mat_VarPrint+0x6bc>
   499f0:	ldr	r1, [r0]
   499f4:	add	r8, r8, #1
   499f8:	b	49978 <Mat_VarPrint+0x638>
   499fc:	mov	r0, #10
   49a00:	bl	19b4 <putchar@plt>
   49a04:	ldr	r0, [sl, #32]
   49a08:	add	r9, r9, #1
   49a0c:	ldr	r1, [r0]
   49a10:	cmp	r9, r1
   49a14:	bcc	49968 <Mat_VarPrint+0x628>
   49a18:	b	495e0 <Mat_VarPrint+0x2a0>
   49a1c:	ldr	r1, [r5, #16]
   49a20:	cmp	r1, #1
   49a24:	beq	495e0 <Mat_VarPrint+0x2a0>
   49a28:	ldr	r9, [r5, #24]
   49a2c:	ldr	r0, [r5, #12]
   49a30:	ldr	r8, [pc, #396]	; 49bc4 <Mat_VarPrint+0x884>
   49a34:	mov	r4, #0
   49a38:	add	r8, pc, r8
   49a3c:	ldr	r6, [r0, r4, lsl #2]
   49a40:	add	r4, r4, #1
   49a44:	ldr	r2, [r0, r4, lsl #2]
   49a48:	cmp	r6, r2
   49a4c:	bcs	49abc <Mat_VarPrint+0x77c>
   49a50:	ldr	r1, [r5, #20]
   49a54:	cmp	r6, r1
   49a58:	bcs	49ab8 <Mat_VarPrint+0x778>
   49a5c:	ldr	r0, [sp]
   49a60:	mla	r7, r0, r6, r9
   49a64:	ldr	r0, [r5, #4]
   49a68:	mov	r2, r4
   49a6c:	ldr	r0, [r0, r6, lsl #2]
   49a70:	add	r1, r0, #1
   49a74:	mov	r0, r8
   49a78:	bl	17ec <printf@plt>
   49a7c:	ldr	r0, [sl, #8]
   49a80:	mov	r1, r7
   49a84:	bl	49bc8 <Mat_PrintNumber>
   49a88:	mov	r0, #10
   49a8c:	bl	19b4 <putchar@plt>
   49a90:	ldr	r0, [r5, #12]
   49a94:	add	r6, r6, #1
   49a98:	ldr	r1, [r0, r4, lsl #2]
   49a9c:	cmp	r6, r1
   49aa0:	bcs	49ab8 <Mat_VarPrint+0x778>
   49aa4:	ldr	r1, [sp]
   49aa8:	add	r7, r7, r1
   49aac:	ldr	r1, [r5, #20]
   49ab0:	cmp	r6, r1
   49ab4:	bcc	49a64 <Mat_VarPrint+0x724>
   49ab8:	ldr	r1, [r5, #16]
   49abc:	sub	r2, r1, #1
   49ac0:	cmp	r4, r2
   49ac4:	bcc	49a3c <Mat_VarPrint+0x6fc>
   49ac8:	b	495e0 <Mat_VarPrint+0x2a0>
   49acc:	ldr	r1, [r0]
   49ad0:	cmp	r1, #0
   49ad4:	beq	495e0 <Mat_VarPrint+0x2a0>
   49ad8:	ldr	r5, [sl, #40]	; 0x28
   49adc:	mov	r6, #0
   49ae0:	ldr	r0, [r0, #4]
   49ae4:	cmp	r0, #0
   49ae8:	beq	49b2c <Mat_VarPrint+0x7ec>
   49aec:	ldrb	r0, [r5, r6]
   49af0:	bl	19b4 <putchar@plt>
   49af4:	ldr	r0, [sl, #32]
   49af8:	ldr	r1, [r0, #4]
   49afc:	cmp	r1, #2
   49b00:	bcc	49b2c <Mat_VarPrint+0x7ec>
   49b04:	mov	r4, #1
   49b08:	ldr	r0, [r0]
   49b0c:	mla	r0, r0, r4, r6
   49b10:	ldrb	r0, [r5, r0]
   49b14:	bl	19b4 <putchar@plt>
   49b18:	ldr	r0, [sl, #32]
   49b1c:	add	r4, r4, #1
   49b20:	ldr	r1, [r0, #4]
   49b24:	cmp	r4, r1
   49b28:	bcc	49b08 <Mat_VarPrint+0x7c8>
   49b2c:	mov	r0, #10
   49b30:	bl	19b4 <putchar@plt>
   49b34:	ldr	r0, [sl, #32]
   49b38:	add	r6, r6, #1
   49b3c:	ldr	r1, [r0]
   49b40:	cmp	r6, r1
   49b44:	bcc	49ae0 <Mat_VarPrint+0x7a0>
   49b48:	b	495e0 <Mat_VarPrint+0x2a0>
   49b4c:	.word	0x000030cc
   49b50:	.word	0x000032ce
   49b54:	.word	0x00003070
   49b58:	.word	0x00003064
   49b5c:	.word	0x00013a24
   49b60:	.word	0x0000302b
   49b64:	.word	0x00003022
   49b68:	.word	0x00003015
   49b6c:	.word	0x00013a10
   49b70:	.word	0x0000318c
   49b74:	.word	0x00003160
   49b78:	.word	0x0000315f
   49b7c:	.word	0x0000320a
   49b80:	.word	0x0000308c
   49b84:	.word	0x00003083
   49b88:	.word	0x0000325c
   49b8c:	.word	0x0000329a
   49b90:	.word	0x000031ea
   49b94:	.word	0x000031ad
   49b98:	.word	0x0000313d
   49b9c:	.word	0x00002f76
   49ba0:	.word	0x00002f62
   49ba4:	.word	0x00002f3d
   49ba8:	.word	0x00002f5b
   49bac:	.word	0x00002eed
   49bb0:	.word	0x00002d01
   49bb4:	.word	0x00002caf
   49bb8:	.word	0x00002dac
   49bbc:	.word	0x00002d82
   49bc0:	.word	0x00002e83
   49bc4:	.word	0x00002c34

00049bc8 <Mat_PrintNumber>:
   49bc8:	sub	r0, r0, #1
   49bcc:	cmp	r0, #12
   49bd0:	bxhi	lr
   49bd4:	add	r2, pc, #4
   49bd8:	ldr	r0, [r2, r0, lsl #2]
   49bdc:	add	pc, r2, r0
   49be0:	.word	0x00000034
   49be4:	.word	0x00000044
   49be8:	.word	0x00000054
   49bec:	.word	0x00000064
   49bf0:	.word	0x00000074
   49bf4:	.word	0x00000084
   49bf8:	.word	0x00000094
   49bfc:	.word	0x000000d4
   49c00:	.word	0x000000a0
   49c04:	.word	0x000000d4
   49c08:	.word	0x000000d4
   49c0c:	.word	0x000000b4
   49c10:	.word	0x000000c4
   49c14:	ldrsb	r1, [r1]
   49c18:	ldr	r0, [pc, #180]	; 49cd4 <Mat_PrintNumber+0x10c>
   49c1c:	add	r0, pc, r0
   49c20:	b	17ec <printf@plt>
   49c24:	ldrb	r1, [r1]
   49c28:	ldr	r0, [pc, #168]	; 49cd8 <Mat_PrintNumber+0x110>
   49c2c:	add	r0, pc, r0
   49c30:	b	17ec <printf@plt>
   49c34:	ldrsh	r1, [r1]
   49c38:	ldr	r0, [pc, #140]	; 49ccc <Mat_PrintNumber+0x104>
   49c3c:	add	r0, pc, r0
   49c40:	b	17ec <printf@plt>
   49c44:	ldrh	r1, [r1]
   49c48:	ldr	r0, [pc, #128]	; 49cd0 <Mat_PrintNumber+0x108>
   49c4c:	add	r0, pc, r0
   49c50:	b	17ec <printf@plt>
   49c54:	ldr	r1, [r1]
   49c58:	ldr	r0, [pc, #100]	; 49cc4 <Mat_PrintNumber+0xfc>
   49c5c:	add	r0, pc, r0
   49c60:	b	17ec <printf@plt>
   49c64:	ldr	r1, [r1]
   49c68:	ldr	r0, [pc, #88]	; 49cc8 <Mat_PrintNumber+0x100>
   49c6c:	add	r0, pc, r0
   49c70:	b	17ec <printf@plt>
   49c74:	vldr	s0, [r1]
   49c78:	vcvt.f64.f32	d16, s0
   49c7c:	b	49c84 <Mat_PrintNumber+0xbc>
   49c80:	vldr	d16, [r1]
   49c84:	ldr	r0, [pc, #44]	; 49cb8 <Mat_PrintNumber+0xf0>
   49c88:	vmov	r2, r3, d16
   49c8c:	add	r0, pc, r0
   49c90:	b	17ec <printf@plt>
   49c94:	ldrd	r2, [r1]
   49c98:	ldr	r0, [pc, #28]	; 49cbc <Mat_PrintNumber+0xf4>
   49c9c:	add	r0, pc, r0
   49ca0:	b	17ec <printf@plt>
   49ca4:	ldrd	r2, [r1]
   49ca8:	ldr	r0, [pc, #16]	; 49cc0 <Mat_PrintNumber+0xf8>
   49cac:	add	r0, pc, r0
   49cb0:	b	17ec <printf@plt>
   49cb4:	bx	lr
   49cb8:	.word	0x00002ae1
   49cbc:	.word	0x00002ad4
   49cc0:	.word	0x00002ac9
   49cc4:	.word	0x00002230
   49cc8:	.word	0x00002b0e
   49ccc:	.word	0x00002b41
   49cd0:	.word	0x00002b35
   49cd4:	.word	0x00002b69
   49cd8:	.word	0x00002b5e

00049cdc <Mat_VarReadData>:
   49cdc:	push	{fp, lr}
   49ce0:	mov	fp, sp
   49ce4:	ldr	ip, [r1, #16]
   49ce8:	sub	lr, ip, #6
   49cec:	mvn	ip, #0
   49cf0:	cmp	lr, #9
   49cf4:	bhi	49d30 <Mat_VarReadData+0x54>
   49cf8:	ldr	ip, [r0, #16]
   49cfc:	cmp	ip, #16
   49d00:	beq	49d1c <Mat_VarReadData+0x40>
   49d04:	cmp	ip, #512	; 0x200
   49d08:	beq	49d24 <Mat_VarReadData+0x48>
   49d0c:	cmp	ip, #256	; 0x100
   49d10:	bne	49d2c <Mat_VarReadData+0x50>
   49d14:	pop	{fp, lr}
   49d18:	b	221dc <Mat_VarReadData5>
   49d1c:	pop	{fp, lr}
   49d20:	b	46a78 <Mat_VarReadData4>
   49d24:	mov	ip, #1
   49d28:	b	49d30 <Mat_VarReadData+0x54>
   49d2c:	mov	ip, #2
   49d30:	mov	r0, ip
   49d34:	pop	{fp, pc}

00049d38 <Mat_VarReadDataAll>:
   49d38:	mov	r2, r0
   49d3c:	mov	r0, #1
   49d40:	cmp	r2, #0
   49d44:	cmpne	r1, #0
   49d48:	bne	49d50 <Mat_VarReadDataAll+0x18>
   49d4c:	bx	lr
   49d50:	push	{fp, lr}
   49d54:	mov	fp, sp
   49d58:	mov	r0, r2
   49d5c:	bl	49d6c <ReadData>
   49d60:	mov	r0, #0
   49d64:	pop	{fp, lr}
   49d68:	bx	lr

00049d6c <ReadData>:
   49d6c:	cmp	r0, #0
   49d70:	cmpne	r1, #0
   49d74:	bne	49d7c <ReadData+0x10>
   49d78:	bx	lr
   49d7c:	ldr	r2, [r0]
   49d80:	cmp	r2, #0
   49d84:	beq	49d78 <ReadData+0xc>
   49d88:	ldr	r2, [r0, #16]
   49d8c:	cmp	r2, #16
   49d90:	beq	49da0 <ReadData+0x34>
   49d94:	cmp	r2, #256	; 0x100
   49d98:	bxne	lr
   49d9c:	b	204b0 <Mat_VarRead5>
   49da0:	b	461e8 <Mat_VarRead4>

00049da4 <Mat_VarReadDataLinear>:
   49da4:	push	{fp, lr}
   49da8:	mov	fp, sp
   49dac:	ldr	ip, [r1, #16]
   49db0:	sub	lr, ip, #6
   49db4:	mvn	ip, #0
   49db8:	cmp	lr, #9
   49dbc:	bhi	49df8 <Mat_VarReadDataLinear+0x54>
   49dc0:	ldr	ip, [r0, #16]
   49dc4:	cmp	ip, #16
   49dc8:	beq	49de4 <Mat_VarReadDataLinear+0x40>
   49dcc:	cmp	ip, #512	; 0x200
   49dd0:	beq	49dec <Mat_VarReadDataLinear+0x48>
   49dd4:	cmp	ip, #256	; 0x100
   49dd8:	bne	49df4 <Mat_VarReadDataLinear+0x50>
   49ddc:	pop	{fp, lr}
   49de0:	b	40ad4 <Mat_VarReadDataLinear5>
   49de4:	pop	{fp, lr}
   49de8:	b	46c8c <Mat_VarReadDataLinear4>
   49dec:	mov	ip, #1
   49df0:	b	49df8 <Mat_VarReadDataLinear+0x54>
   49df4:	mov	ip, #2
   49df8:	mov	r0, ip
   49dfc:	pop	{fp, pc}

00049e00 <Mat_VarReadInfo>:
   49e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   49e04:	add	fp, sp, #24
   49e08:	cmp	r0, #0
   49e0c:	mov	r5, #0
   49e10:	movne	r6, r1
   49e14:	cmpne	r1, #0
   49e18:	bne	49e24 <Mat_VarReadInfo+0x24>
   49e1c:	mov	r0, r5
   49e20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   49e24:	mov	r4, r0
   49e28:	ldr	r0, [r0, #16]
   49e2c:	cmp	r0, #512	; 0x200
   49e30:	bne	49e98 <Mat_VarReadInfo+0x98>
   49e34:	ldr	r0, [r4, #36]	; 0x24
   49e38:	ldr	r8, [r4, #32]
   49e3c:	mov	r5, #0
   49e40:	str	r5, [r4, #32]
   49e44:	cmp	r0, #0
   49e48:	beq	49f40 <Mat_VarReadInfo+0x140>
   49e4c:	mov	r0, r4
   49e50:	bl	1a8c <Mat_VarReadNextInfo@plt>
   49e54:	cmp	r0, #0
   49e58:	beq	49f2c <Mat_VarReadInfo+0x12c>
   49e5c:	mov	r7, r0
   49e60:	ldr	r0, [r0, #36]	; 0x24
   49e64:	cmp	r0, #0
   49e68:	beq	49e7c <Mat_VarReadInfo+0x7c>
   49e6c:	mov	r1, r6
   49e70:	bl	17c8 <strcmp@plt>
   49e74:	cmp	r0, #0
   49e78:	beq	49f3c <Mat_VarReadInfo+0x13c>
   49e7c:	mov	r0, r7
   49e80:	bl	1930 <Mat_VarFree@plt>
   49e84:	ldr	r0, [r4, #32]
   49e88:	ldr	r1, [r4, #36]	; 0x24
   49e8c:	cmp	r0, r1
   49e90:	bcc	49e4c <Mat_VarReadInfo+0x4c>
   49e94:	b	49f40 <Mat_VarReadInfo+0x140>
   49e98:	ldr	r0, [r4]
   49e9c:	bl	1858 <ftell@plt>
   49ea0:	cmn	r0, #1
   49ea4:	beq	49f1c <Mat_VarReadInfo+0x11c>
   49ea8:	mov	r7, r0
   49eac:	ldr	r0, [r4]
   49eb0:	ldr	r1, [r4, #28]
   49eb4:	mov	r2, #0
   49eb8:	bl	1a68 <fseek@plt>
   49ebc:	mov	r0, r4
   49ec0:	bl	1a8c <Mat_VarReadNextInfo@plt>
   49ec4:	cmp	r0, #0
   49ec8:	beq	49ef8 <Mat_VarReadInfo+0xf8>
   49ecc:	mov	r5, r0
   49ed0:	ldr	r0, [r0, #36]	; 0x24
   49ed4:	cmp	r0, #0
   49ed8:	beq	49eec <Mat_VarReadInfo+0xec>
   49edc:	mov	r1, r6
   49ee0:	bl	17c8 <strcmp@plt>
   49ee4:	cmp	r0, #0
   49ee8:	beq	49f58 <Mat_VarReadInfo+0x158>
   49eec:	mov	r0, r5
   49ef0:	bl	1930 <Mat_VarFree@plt>
   49ef4:	b	49f08 <Mat_VarReadInfo+0x108>
   49ef8:	ldr	r0, [r4]
   49efc:	bl	1924 <feof@plt>
   49f00:	cmp	r0, #0
   49f04:	beq	49f48 <Mat_VarReadInfo+0x148>
   49f08:	ldr	r0, [r4]
   49f0c:	bl	1924 <feof@plt>
   49f10:	cmp	r0, #0
   49f14:	beq	49ebc <Mat_VarReadInfo+0xbc>
   49f18:	b	49f54 <Mat_VarReadInfo+0x154>
   49f1c:	ldr	r0, [pc, #80]	; 49f74 <Mat_VarReadInfo+0x174>
   49f20:	add	r0, pc, r0
   49f24:	bl	19cc <Mat_Critical@plt>
   49f28:	b	49e1c <Mat_VarReadInfo+0x1c>
   49f2c:	ldr	r0, [pc, #56]	; 49f6c <Mat_VarReadInfo+0x16c>
   49f30:	add	r0, pc, r0
   49f34:	bl	19cc <Mat_Critical@plt>
   49f38:	b	49f40 <Mat_VarReadInfo+0x140>
   49f3c:	mov	r5, r7
   49f40:	str	r8, [r4, #32]
   49f44:	b	49e1c <Mat_VarReadInfo+0x1c>
   49f48:	ldr	r0, [pc, #32]	; 49f70 <Mat_VarReadInfo+0x170>
   49f4c:	add	r0, pc, r0
   49f50:	bl	19cc <Mat_Critical@plt>
   49f54:	mov	r5, #0
   49f58:	ldr	r0, [r4]
   49f5c:	mov	r1, r7
   49f60:	mov	r2, #0
   49f64:	bl	1a68 <fseek@plt>
   49f68:	b	49e1c <Mat_VarReadInfo+0x1c>
   49f6c:	.word	0x00001e88
   49f70:	.word	0x00001e6c
   49f74:	.word	0x00001c0c

00049f78 <Mat_VarRead>:
   49f78:	push	{r4, r5, r6, r7, fp, lr}
   49f7c:	add	fp, sp, #16
   49f80:	cmp	r0, #0
   49f84:	mov	r4, #0
   49f88:	movne	r6, r1
   49f8c:	cmpne	r1, #0
   49f90:	bne	49f9c <Mat_VarRead+0x24>
   49f94:	mov	r0, r4
   49f98:	pop	{r4, r5, r6, r7, fp, pc}
   49f9c:	mov	r5, r0
   49fa0:	ldr	r0, [r0, #16]
   49fa4:	cmp	r0, #512	; 0x200
   49fa8:	bne	49fe0 <Mat_VarRead+0x68>
   49fac:	ldr	r7, [r5, #32]
   49fb0:	mov	r0, #0
   49fb4:	mov	r1, r6
   49fb8:	str	r0, [r5, #32]
   49fbc:	mov	r0, r5
   49fc0:	bl	1894 <Mat_VarReadInfo@plt>
   49fc4:	mov	r4, r0
   49fc8:	cmp	r0, #0
   49fcc:	movne	r0, r5
   49fd0:	movne	r1, r4
   49fd4:	blne	49d6c <ReadData>
   49fd8:	str	r7, [r5, #32]
   49fdc:	b	49f94 <Mat_VarRead+0x1c>
   49fe0:	ldr	r0, [r5]
   49fe4:	bl	1858 <ftell@plt>
   49fe8:	cmn	r0, #1
   49fec:	beq	4a028 <Mat_VarRead+0xb0>
   49ff0:	mov	r7, r0
   49ff4:	mov	r0, r5
   49ff8:	mov	r1, r6
   49ffc:	bl	1894 <Mat_VarReadInfo@plt>
   4a000:	mov	r4, r0
   4a004:	cmp	r0, #0
   4a008:	movne	r0, r5
   4a00c:	movne	r1, r4
   4a010:	blne	49d6c <ReadData>
   4a014:	ldr	r0, [r5]
   4a018:	mov	r1, r7
   4a01c:	mov	r2, #0
   4a020:	bl	1a68 <fseek@plt>
   4a024:	b	49f94 <Mat_VarRead+0x1c>
   4a028:	ldr	r0, [pc, #8]	; 4a038 <Mat_VarRead+0xc0>
   4a02c:	add	r0, pc, r0
   4a030:	bl	19cc <Mat_Critical@plt>
   4a034:	b	49f94 <Mat_VarRead+0x1c>
   4a038:	.word	0x00001b00

0004a03c <Mat_VarWriteInfo>:
   4a03c:	push	{fp, lr}
   4a040:	mov	fp, sp
   4a044:	ldr	r0, [r0, #16]
   4a048:	ldr	r2, [pc, #36]	; 4a074 <Mat_VarWriteInfo+0x38>
   4a04c:	ldr	r1, [pc, #36]	; 4a078 <Mat_VarWriteInfo+0x3c>
   4a050:	cmp	r0, #512	; 0x200
   4a054:	ldr	r0, [pc, #32]	; 4a07c <Mat_VarWriteInfo+0x40>
   4a058:	add	r2, pc, r2
   4a05c:	add	r1, pc, r1
   4a060:	moveq	r1, r2
   4a064:	add	r0, pc, r0
   4a068:	bl	19cc <Mat_Critical@plt>
   4a06c:	mov	r0, #1
   4a070:	pop	{fp, pc}
   4a074:	.word	0x00002667
   4a078:	.word	0x00002683
   4a07c:	.word	0x00002617

0004a080 <Mat_VarWriteData>:
   4a080:	push	{fp, lr}
   4a084:	mov	fp, sp
   4a088:	ldr	r0, [r0, #16]
   4a08c:	ldr	r2, [pc, #36]	; 4a0b8 <Mat_VarWriteData+0x38>
   4a090:	ldr	r1, [pc, #36]	; 4a0bc <Mat_VarWriteData+0x3c>
   4a094:	cmp	r0, #512	; 0x200
   4a098:	ldr	r0, [pc, #32]	; 4a0c0 <Mat_VarWriteData+0x40>
   4a09c:	add	r2, pc, r2
   4a0a0:	add	r1, pc, r1
   4a0a4:	moveq	r1, r2
   4a0a8:	add	r0, pc, r0
   4a0ac:	bl	19cc <Mat_Critical@plt>
   4a0b0:	mov	r0, #1
   4a0b4:	pop	{fp, pc}
   4a0b8:	.word	0x00002623
   4a0bc:	.word	0x0000263f
   4a0c0:	.word	0x000025d3

0004a0c4 <Mat_VarWriteAppend>:
   4a0c4:	push	{r4, sl, fp, lr}
   4a0c8:	add	fp, sp, #8
   4a0cc:	sub	sp, sp, #8
   4a0d0:	mov	r4, r0
   4a0d4:	mvn	r0, #0
   4a0d8:	cmp	r4, #0
   4a0dc:	cmpne	r1, #0
   4a0e0:	beq	4a114 <Mat_VarWriteAppend+0x50>
   4a0e4:	ldr	r0, [r4, #40]	; 0x28
   4a0e8:	cmp	r0, #0
   4a0ec:	bne	4a104 <Mat_VarWriteAppend+0x40>
   4a0f0:	mov	r0, #0
   4a0f4:	add	r1, sp, #4
   4a0f8:	str	r0, [sp, #4]
   4a0fc:	mov	r0, r4
   4a100:	bl	1948 <Mat_GetDir@plt>
   4a104:	ldr	r1, [r4, #16]
   4a108:	mov	r0, #2
   4a10c:	cmp	r1, #512	; 0x200
   4a110:	movweq	r0, #1
   4a114:	sub	sp, fp, #8
   4a118:	pop	{r4, sl, fp, pc}

0004a11c <Mat_VarGetCell>:
   4a11c:	push	{r4, r5, r6, sl, fp, lr}
   4a120:	add	fp, sp, #16
   4a124:	sub	sp, sp, #8
   4a128:	mov	r6, r0
   4a12c:	mov	r0, #1
   4a130:	mov	r4, #0
   4a134:	cmp	r6, #0
   4a138:	str	r0, [sp, #4]
   4a13c:	beq	4a16c <Mat_VarGetCell+0x50>
   4a140:	mov	r5, r1
   4a144:	add	r1, sp, #4
   4a148:	mov	r0, r6
   4a14c:	bl	47128 <SafeMulDims>
   4a150:	cmp	r5, #0
   4a154:	bmi	4a16c <Mat_VarGetCell+0x50>
   4a158:	ldr	r0, [sp, #4]
   4a15c:	cmp	r0, r5
   4a160:	bls	4a16c <Mat_VarGetCell+0x50>
   4a164:	ldr	r0, [r6, #40]	; 0x28
   4a168:	ldr	r4, [r0, r5, lsl #2]
   4a16c:	mov	r0, r4
   4a170:	sub	sp, fp, #16
   4a174:	pop	{r4, r5, r6, sl, fp, pc}

0004a178 <Mat_VarGetCells>:
   4a178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a17c:	add	fp, sp, #28
   4a180:	sub	sp, sp, #172	; 0xac
   4a184:	vmov.i32	q8, #0	; 0x00000000
   4a188:	mov	r9, r3
   4a18c:	sub	r3, fp, #72	; 0x48
   4a190:	str	r2, [sp, #16]
   4a194:	mov	r2, r0
   4a198:	mov	sl, r1
   4a19c:	mov	r0, #36	; 0x24
   4a1a0:	mov	r7, #0
   4a1a4:	mov	r1, r3
   4a1a8:	cmp	r2, #0
   4a1ac:	str	r7, [fp, #-40]	; 0xffffffd8
   4a1b0:	str	r7, [sp, #120]	; 0x78
   4a1b4:	str	r7, [sp, #80]	; 0x50
   4a1b8:	cmpne	sl, #0
   4a1bc:	vst1.64	{d16-d17}, [r1], r0
   4a1c0:	str	r7, [r1]
   4a1c4:	add	r1, r3, #16
   4a1c8:	add	r3, sp, #88	; 0x58
   4a1cc:	vst1.64	{d16-d17}, [r1]
   4a1d0:	add	r1, r3, #16
   4a1d4:	vst1.64	{d16-d17}, [r1]
   4a1d8:	mov	r1, r3
   4a1dc:	add	r3, sp, #48	; 0x30
   4a1e0:	vst1.64	{d16-d17}, [r1], r0
   4a1e4:	str	r7, [r1]
   4a1e8:	add	r1, r3, #16
   4a1ec:	vst1.64	{d16-d17}, [r1]
   4a1f0:	mov	r1, r3
   4a1f4:	vst1.64	{d16-d17}, [r1], r0
   4a1f8:	str	r7, [r1]
   4a1fc:	beq	4a210 <Mat_VarGetCells+0x98>
   4a200:	ldr	r0, [sp, #16]
   4a204:	cmp	r0, #0
   4a208:	cmpne	r9, #0
   4a20c:	bne	4a21c <Mat_VarGetCells+0xa4>
   4a210:	mov	r0, r7
   4a214:	sub	sp, fp, #28
   4a218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a21c:	ldr	r1, [r2, #4]
   4a220:	cmp	r1, #9
   4a224:	bgt	4a210 <Mat_VarGetCells+0x98>
   4a228:	ldr	r4, [r2, #32]
   4a22c:	cmp	r1, #2
   4a230:	str	r2, [sp, #12]
   4a234:	str	r1, [sp, #8]
   4a238:	ldr	r7, [r4]
   4a23c:	str	r7, [sp, #48]	; 0x30
   4a240:	ldr	r0, [r9]
   4a244:	ldr	r5, [sl]
   4a248:	mov	r6, r0
   4a24c:	str	r5, [fp, #-72]	; 0xffffffb8
   4a250:	str	r0, [sp, #32]
   4a254:	str	r5, [sp, #36]	; 0x24
   4a258:	blt	4a2bc <Mat_VarGetCells+0x144>
   4a25c:	mvn	r0, #3
   4a260:	add	r8, sl, #4
   4a264:	add	r2, r0, r1, lsl #2
   4a268:	sub	r0, fp, #72	; 0x48
   4a26c:	mov	r1, r8
   4a270:	orr	r0, r0, #4
   4a274:	bl	1834 <memcpy@plt>
   4a278:	ldr	r3, [sp, #8]
   4a27c:	ldr	r5, [sp, #36]	; 0x24
   4a280:	ldr	r6, [sp, #32]
   4a284:	add	r1, sp, #48	; 0x30
   4a288:	add	r0, r4, #4
   4a28c:	add	r2, r9, #4
   4a290:	orr	r1, r1, #4
   4a294:	sub	r3, r3, #1
   4a298:	ldr	r4, [r8], #4
   4a29c:	subs	r3, r3, #1
   4a2a0:	mla	r5, r7, r4, r5
   4a2a4:	ldr	r4, [r0], #4
   4a2a8:	mul	r7, r4, r7
   4a2ac:	str	r7, [r1], #4
   4a2b0:	ldr	r4, [r2], #4
   4a2b4:	mul	r6, r4, r6
   4a2b8:	bne	4a298 <Mat_VarGetCells+0x120>
   4a2bc:	lsl	r0, r6, #2
   4a2c0:	bl	18e8 <malloc@plt>
   4a2c4:	mov	r7, r0
   4a2c8:	cmp	r6, #1
   4a2cc:	blt	4a210 <Mat_VarGetCells+0x98>
   4a2d0:	ldr	r0, [sp, #16]
   4a2d4:	ldr	lr, [sp, #8]
   4a2d8:	ldr	r4, [sp, #32]
   4a2dc:	str	r6, [sp, #28]
   4a2e0:	add	r2, r9, #4
   4a2e4:	add	sl, sl, #4
   4a2e8:	mov	r9, #0
   4a2ec:	str	r7, [sp, #4]
   4a2f0:	add	r1, r0, #8
   4a2f4:	ldr	r0, [r0, #4]
   4a2f8:	lsl	r3, r4, #2
   4a2fc:	sub	r6, lr, #2
   4a300:	sub	r8, lr, #1
   4a304:	str	r1, [sp, #44]	; 0x2c
   4a308:	mov	r1, r7
   4a30c:	str	r3, [sp, #24]
   4a310:	str	r0, [sp, #20]
   4a314:	cmp	r4, #1
   4a318:	blt	4a348 <Mat_VarGetCells+0x1d0>
   4a31c:	ldr	r0, [sp, #12]
   4a320:	ldr	r0, [r0, #40]	; 0x28
   4a324:	add	r7, r0, r5, lsl #2
   4a328:	ldr	r0, [sp, #16]
   4a32c:	ldr	r0, [r0]
   4a330:	lsl	r5, r0, #2
   4a334:	mov	r0, r1
   4a338:	ldr	r3, [r7], r5
   4a33c:	subs	r4, r4, #1
   4a340:	str	r3, [r0], #4
   4a344:	bne	4a338 <Mat_VarGetCells+0x1c0>
   4a348:	ldr	r5, [sp, #36]	; 0x24
   4a34c:	ldr	r0, [sp, #92]	; 0x5c
   4a350:	ldr	r3, [sp, #20]
   4a354:	cmp	lr, #2
   4a358:	str	r1, [sp, #40]	; 0x28
   4a35c:	str	r5, [fp, #-72]	; 0xffffffb8
   4a360:	add	ip, r0, #1
   4a364:	ldr	r0, [fp, #-68]	; 0xffffffbc
   4a368:	str	ip, [sp, #92]	; 0x5c
   4a36c:	add	r0, r0, r3
   4a370:	str	r0, [fp, #-68]	; 0xffffffbc
   4a374:	blt	4a414 <Mat_VarGetCells+0x29c>
   4a378:	ldr	r5, [sp, #36]	; 0x24
   4a37c:	mov	r7, #0
   4a380:	sub	r1, fp, #72	; 0x48
   4a384:	add	r3, sp, #88	; 0x58
   4a388:	ldr	r0, [r2, r7, lsl #2]
   4a38c:	add	lr, r7, #1
   4a390:	cmp	ip, r0
   4a394:	bne	4a3e4 <Mat_VarGetCells+0x26c>
   4a398:	add	r3, r3, r7, lsl #2
   4a39c:	mov	r0, #0
   4a3a0:	cmp	lr, r8
   4a3a4:	str	r0, [r3, #4]
   4a3a8:	add	r0, r1, r7, lsl #2
   4a3ac:	ldr	r4, [sl, r7, lsl #2]
   4a3b0:	str	r4, [r0, #4]
   4a3b4:	bge	4a3dc <Mat_VarGetCells+0x264>
   4a3b8:	ldr	r1, [r3, #8]
   4a3bc:	add	r1, r1, #1
   4a3c0:	str	r1, [r3, #8]
   4a3c4:	ldr	r1, [sp, #44]	; 0x2c
   4a3c8:	ldr	r3, [r0, #8]
   4a3cc:	ldr	r1, [r1, r7, lsl #2]
   4a3d0:	add	r1, r3, r1
   4a3d4:	str	r1, [r0, #8]
   4a3d8:	sub	r1, fp, #72	; 0x48
   4a3dc:	add	r3, sp, #88	; 0x58
   4a3e0:	b	4a3ec <Mat_VarGetCells+0x274>
   4a3e4:	add	r0, r1, r7, lsl #2
   4a3e8:	ldr	r4, [r0, #4]
   4a3ec:	add	r0, sp, #48	; 0x30
   4a3f0:	cmp	r6, r7
   4a3f4:	ldr	r0, [r0, r7, lsl #2]
   4a3f8:	mla	r5, r0, r4, r5
   4a3fc:	beq	4a410 <Mat_VarGetCells+0x298>
   4a400:	add	r0, r3, r7, lsl #2
   4a404:	mov	r7, lr
   4a408:	ldr	ip, [r0, #8]
   4a40c:	b	4a388 <Mat_VarGetCells+0x210>
   4a410:	ldr	lr, [sp, #8]
   4a414:	ldr	r0, [sp, #24]
   4a418:	ldr	r1, [sp, #40]	; 0x28
   4a41c:	ldr	r4, [sp, #32]
   4a420:	add	r1, r1, r0
   4a424:	ldr	r0, [sp, #28]
   4a428:	add	r9, r9, r4
   4a42c:	cmp	r9, r0
   4a430:	blt	4a314 <Mat_VarGetCells+0x19c>
   4a434:	ldr	r7, [sp, #4]
   4a438:	b	4a210 <Mat_VarGetCells+0x98>

0004a43c <Mat_VarGetCellsLinear>:
   4a43c:	push	{r4, r5, r6, r7, fp, lr}
   4a440:	add	fp, sp, #16
   4a444:	cmp	r0, #0
   4a448:	beq	4a490 <Mat_VarGetCellsLinear+0x54>
   4a44c:	mov	r7, r0
   4a450:	lsl	r0, r3, #2
   4a454:	mov	r4, r3
   4a458:	mov	r5, r2
   4a45c:	mov	r6, r1
   4a460:	bl	18e8 <malloc@plt>
   4a464:	cmp	r4, #1
   4a468:	blt	4a48c <Mat_VarGetCellsLinear+0x50>
   4a46c:	ldr	r1, [r7, #40]	; 0x28
   4a470:	lsl	r2, r5, #2
   4a474:	mov	r3, r0
   4a478:	add	r1, r1, r6, lsl #2
   4a47c:	ldr	r7, [r1], r2
   4a480:	subs	r4, r4, #1
   4a484:	str	r7, [r3], #4
   4a488:	bne	4a47c <Mat_VarGetCellsLinear+0x40>
   4a48c:	pop	{r4, r5, r6, r7, fp, pc}
   4a490:	mov	r0, #0
   4a494:	pop	{r4, r5, r6, r7, fp, pc}

0004a498 <Mat_VarSetCell>:
   4a498:	push	{r4, r5, r6, r7, fp, lr}
   4a49c:	add	fp, sp, #16
   4a4a0:	sub	sp, sp, #8
   4a4a4:	mov	r7, r0
   4a4a8:	mov	r0, #1
   4a4ac:	mov	r4, #0
   4a4b0:	cmp	r7, #0
   4a4b4:	str	r0, [sp, #4]
   4a4b8:	beq	4a4fc <Mat_VarSetCell+0x64>
   4a4bc:	ldr	r0, [r7, #4]
   4a4c0:	cmp	r0, #1
   4a4c4:	blt	4a4fc <Mat_VarSetCell+0x64>
   4a4c8:	mov	r6, r1
   4a4cc:	add	r1, sp, #4
   4a4d0:	mov	r0, r7
   4a4d4:	mov	r5, r2
   4a4d8:	bl	47128 <SafeMulDims>
   4a4dc:	cmp	r6, #0
   4a4e0:	bmi	4a4fc <Mat_VarSetCell+0x64>
   4a4e4:	ldr	r0, [sp, #4]
   4a4e8:	cmp	r0, r6
   4a4ec:	bls	4a4fc <Mat_VarSetCell+0x64>
   4a4f0:	ldr	r0, [r7, #40]	; 0x28
   4a4f4:	ldr	r4, [r0, r6, lsl #2]
   4a4f8:	str	r5, [r0, r6, lsl #2]
   4a4fc:	mov	r0, r4
   4a500:	sub	sp, fp, #16
   4a504:	pop	{r4, r5, r6, r7, fp, pc}

0004a508 <Mat_VarCreateStruct>:
   4a508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a50c:	add	fp, sp, #28
   4a510:	sub	sp, sp, #4
   4a514:	mov	r5, #0
   4a518:	cmp	r2, #0
   4a51c:	beq	4a658 <Mat_VarCreateStruct+0x150>
   4a520:	mov	r9, r3
   4a524:	mov	r6, r2
   4a528:	mov	sl, r1
   4a52c:	mov	r7, r0
   4a530:	bl	18b8 <Mat_VarCalloc@plt>
   4a534:	cmp	r0, #0
   4a538:	beq	4a658 <Mat_VarCreateStruct+0x150>
   4a53c:	mov	r4, r0
   4a540:	mov	r0, #0
   4a544:	cmp	r7, #0
   4a548:	str	r0, [r4, #48]	; 0x30
   4a54c:	beq	4a55c <Mat_VarCreateStruct+0x54>
   4a550:	mov	r0, r7
   4a554:	bl	187c <strdup@plt>
   4a558:	str	r0, [r4, #36]	; 0x24
   4a55c:	ldr	r8, [fp, #8]
   4a560:	lsl	r0, sl, #2
   4a564:	str	sl, [r4, #4]
   4a568:	bl	18e8 <malloc@plt>
   4a56c:	str	r0, [r4, #32]
   4a570:	mov	r7, #1
   4a574:	ldr	r1, [r4, #4]
   4a578:	cmp	r1, #1
   4a57c:	blt	4a5a0 <Mat_VarCreateStruct+0x98>
   4a580:	mov	r1, #0
   4a584:	ldr	r2, [r6, r1, lsl #2]
   4a588:	str	r2, [r0, r1, lsl #2]
   4a58c:	mul	r7, r2, r7
   4a590:	add	r1, r1, #1
   4a594:	ldr	r2, [r4, #4]
   4a598:	cmp	r1, r2
   4a59c:	blt	4a584 <Mat_VarCreateStruct+0x7c>
   4a5a0:	mov	r1, #22
   4a5a4:	cmp	r8, #0
   4a5a8:	mov	r0, #4
   4a5ac:	mov	r2, #2
   4a5b0:	str	r1, [r4, #8]
   4a5b4:	str	r0, [r4, #12]
   4a5b8:	str	r2, [r4, #16]
   4a5bc:	beq	4a644 <Mat_VarCreateStruct+0x13c>
   4a5c0:	ldr	r0, [r4, #52]	; 0x34
   4a5c4:	str	r8, [r0, #4]
   4a5c8:	lsl	r0, r8, #2
   4a5cc:	bl	18e8 <malloc@plt>
   4a5d0:	ldr	r1, [r4, #52]	; 0x34
   4a5d4:	cmp	r0, #0
   4a5d8:	str	r0, [r1, #8]
   4a5dc:	beq	4a64c <Mat_VarCreateStruct+0x144>
   4a5e0:	mov	r5, #0
   4a5e4:	ldr	r0, [r9, r5, lsl #2]
   4a5e8:	cmp	r0, #0
   4a5ec:	beq	4a64c <Mat_VarCreateStruct+0x144>
   4a5f0:	bl	187c <strdup@plt>
   4a5f4:	ldr	r1, [r4, #52]	; 0x34
   4a5f8:	ldr	r1, [r1, #8]
   4a5fc:	str	r0, [r1, r5, lsl #2]
   4a600:	add	r5, r5, #1
   4a604:	cmp	r8, r5
   4a608:	bne	4a5e4 <Mat_VarCreateStruct+0xdc>
   4a60c:	cmp	r7, #0
   4a610:	beq	4a644 <Mat_VarCreateStruct+0x13c>
   4a614:	mov	r0, sp
   4a618:	mov	r1, r7
   4a61c:	mov	r2, r8
   4a620:	bl	47184 <SafeMul>
   4a624:	ldr	r2, [r4, #12]
   4a628:	ldr	r1, [sp]
   4a62c:	mov	r0, r4
   4a630:	bl	47184 <SafeMul>
   4a634:	ldr	r1, [r4, #12]
   4a638:	ldr	r0, [sp]
   4a63c:	bl	17b0 <calloc@plt>
   4a640:	str	r0, [r4, #40]	; 0x28
   4a644:	mov	r5, r4
   4a648:	b	4a658 <Mat_VarCreateStruct+0x150>
   4a64c:	mov	r0, r4
   4a650:	bl	1930 <Mat_VarFree@plt>
   4a654:	mov	r5, #0
   4a658:	mov	r0, r5
   4a65c:	sub	sp, fp, #28
   4a660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004a664 <Mat_VarAddStructField>:
   4a664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a668:	add	fp, sp, #28
   4a66c:	sub	sp, sp, #12
   4a670:	mov	r9, r0
   4a674:	mov	r0, #1
   4a678:	mvn	r8, #0
   4a67c:	cmp	r9, #0
   4a680:	str	r0, [sp, #8]
   4a684:	movne	r6, r1
   4a688:	cmpne	r1, #0
   4a68c:	bne	4a69c <Mat_VarAddStructField+0x38>
   4a690:	mov	r0, r8
   4a694:	sub	sp, fp, #28
   4a698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a69c:	add	r1, sp, #8
   4a6a0:	mov	r0, r9
   4a6a4:	bl	47128 <SafeMulDims>
   4a6a8:	ldr	r1, [r9, #52]	; 0x34
   4a6ac:	ldr	sl, [r1, #4]
   4a6b0:	ldr	r0, [r1, #8]
   4a6b4:	add	r7, sl, #1
   4a6b8:	str	r7, [r1, #4]
   4a6bc:	lsl	r1, r7, #2
   4a6c0:	bl	1888 <realloc@plt>
   4a6c4:	cmp	r0, #0
   4a6c8:	beq	4a690 <Mat_VarAddStructField+0x2c>
   4a6cc:	ldr	r1, [r9, #52]	; 0x34
   4a6d0:	str	r0, [r1, #8]
   4a6d4:	mov	r0, r6
   4a6d8:	bl	187c <strdup@plt>
   4a6dc:	ldr	r1, [r9, #52]	; 0x34
   4a6e0:	mov	r2, r7
   4a6e4:	ldr	r1, [r1, #8]
   4a6e8:	str	r0, [r1, sl, lsl #2]
   4a6ec:	add	r0, sp, #4
   4a6f0:	ldr	r1, [sp, #8]
   4a6f4:	bl	47184 <SafeMul>
   4a6f8:	ldr	r1, [sp, #4]
   4a6fc:	mov	r0, r9
   4a700:	mov	r2, #4
   4a704:	bl	47184 <SafeMul>
   4a708:	ldr	r0, [r9]
   4a70c:	bl	18e8 <malloc@plt>
   4a710:	cmp	r0, #0
   4a714:	beq	4a78c <Mat_VarAddStructField+0x128>
   4a718:	ldr	lr, [sp, #8]
   4a71c:	mov	r6, r0
   4a720:	ldr	r0, [r9, #40]	; 0x28
   4a724:	cmp	lr, #0
   4a728:	beq	4a77c <Mat_VarAddStructField+0x118>
   4a72c:	lsl	r8, sl, #2
   4a730:	mov	ip, #0
   4a734:	mov	r1, r0
   4a738:	mov	r3, #0
   4a73c:	mov	r4, #0
   4a740:	cmp	sl, #0
   4a744:	beq	4a764 <Mat_VarAddStructField+0x100>
   4a748:	mov	r7, r1
   4a74c:	mov	r5, sl
   4a750:	ldr	r2, [r7], #4
   4a754:	subs	r5, r5, #1
   4a758:	str	r2, [r6, r3, lsl #2]
   4a75c:	add	r3, r3, #1
   4a760:	bne	4a750 <Mat_VarAddStructField+0xec>
   4a764:	add	r4, r4, #1
   4a768:	str	ip, [r6, r3, lsl #2]
   4a76c:	add	r1, r1, r8
   4a770:	add	r3, r3, #1
   4a774:	cmp	r4, lr
   4a778:	bcc	4a740 <Mat_VarAddStructField+0xdc>
   4a77c:	bl	181c <free@plt>
   4a780:	mov	r8, #0
   4a784:	str	r6, [r9, #40]	; 0x28
   4a788:	b	4a690 <Mat_VarAddStructField+0x2c>
   4a78c:	mov	r0, #0
   4a790:	str	r0, [r9]
   4a794:	b	4a690 <Mat_VarAddStructField+0x2c>

0004a798 <Mat_VarGetNumberOfFields>:
   4a798:	mov	r1, r0
   4a79c:	mov	r0, #0
   4a7a0:	cmp	r1, #0
   4a7a4:	bxeq	lr
   4a7a8:	ldr	r2, [r1, #16]
   4a7ac:	cmp	r2, #2
   4a7b0:	bne	4a7c0 <Mat_VarGetNumberOfFields+0x28>
   4a7b4:	ldr	r1, [r1, #52]	; 0x34
   4a7b8:	cmp	r1, #0
   4a7bc:	ldrne	r0, [r1, #4]
   4a7c0:	bx	lr

0004a7c4 <Mat_VarGetStructFieldnames>:
   4a7c4:	mov	r1, r0
   4a7c8:	mov	r0, #0
   4a7cc:	cmp	r1, #0
   4a7d0:	bxeq	lr
   4a7d4:	ldr	r2, [r1, #16]
   4a7d8:	cmp	r2, #2
   4a7dc:	bne	4a7ec <Mat_VarGetStructFieldnames+0x28>
   4a7e0:	ldr	r1, [r1, #52]	; 0x34
   4a7e4:	cmp	r1, #0
   4a7e8:	ldrne	r0, [r1, #8]
   4a7ec:	bx	lr

0004a7f0 <Mat_VarGetStructFieldByIndex>:
   4a7f0:	push	{r4, r5, r6, r7, fp, lr}
   4a7f4:	add	fp, sp, #16
   4a7f8:	sub	sp, sp, #8
   4a7fc:	mov	r7, r0
   4a800:	mov	r0, #1
   4a804:	mov	r4, #0
   4a808:	cmp	r7, #0
   4a80c:	str	r0, [sp, #4]
   4a810:	beq	4a880 <Mat_VarGetStructFieldByIndex+0x90>
   4a814:	ldr	r0, [r7, #16]
   4a818:	cmp	r0, #2
   4a81c:	bne	4a880 <Mat_VarGetStructFieldByIndex+0x90>
   4a820:	ldr	r0, [r7, #12]
   4a824:	cmp	r0, #0
   4a828:	beq	4a880 <Mat_VarGetStructFieldByIndex+0x90>
   4a82c:	mov	r5, r1
   4a830:	add	r1, sp, #4
   4a834:	mov	r0, r7
   4a838:	mov	r6, r2
   4a83c:	bl	47128 <SafeMulDims>
   4a840:	ldr	r0, [sp, #4]
   4a844:	sub	r0, r0, #1
   4a848:	cmp	r0, r6
   4a84c:	bcs	4a85c <Mat_VarGetStructFieldByIndex+0x6c>
   4a850:	ldr	r0, [pc, #72]	; 4a8a0 <Mat_VarGetStructFieldByIndex+0xb0>
   4a854:	add	r0, pc, r0
   4a858:	b	4a87c <Mat_VarGetStructFieldByIndex+0x8c>
   4a85c:	ldr	r0, [r7, #52]	; 0x34
   4a860:	ldr	r0, [r0, #4]
   4a864:	cmp	r0, #0
   4a868:	beq	4a880 <Mat_VarGetStructFieldByIndex+0x90>
   4a86c:	cmp	r0, r5
   4a870:	bcs	4a88c <Mat_VarGetStructFieldByIndex+0x9c>
   4a874:	ldr	r0, [pc, #40]	; 4a8a4 <Mat_VarGetStructFieldByIndex+0xb4>
   4a878:	add	r0, pc, r0
   4a87c:	bl	19cc <Mat_Critical@plt>
   4a880:	mov	r0, r4
   4a884:	sub	sp, fp, #16
   4a888:	pop	{r4, r5, r6, r7, fp, pc}
   4a88c:	ldr	r1, [r7, #40]	; 0x28
   4a890:	mul	r0, r0, r6
   4a894:	add	r0, r1, r0, lsl #2
   4a898:	ldr	r4, [r0, r5, lsl #2]
   4a89c:	b	4a880 <Mat_VarGetStructFieldByIndex+0x90>
   4a8a0:	.word	0x00002008
   4a8a4:	.word	0x00002019

0004a8a8 <Mat_VarGetStructFieldByName>:
   4a8a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a8ac:	add	fp, sp, #28
   4a8b0:	sub	sp, sp, #4
   4a8b4:	mov	r6, r0
   4a8b8:	mov	r0, #1
   4a8bc:	mov	sl, #0
   4a8c0:	cmp	r6, #0
   4a8c4:	str	r0, [sp]
   4a8c8:	beq	4a96c <Mat_VarGetStructFieldByName+0xc4>
   4a8cc:	ldr	r0, [r6, #16]
   4a8d0:	cmp	r0, #2
   4a8d4:	bne	4a96c <Mat_VarGetStructFieldByName+0xc4>
   4a8d8:	ldr	r0, [r6, #12]
   4a8dc:	cmp	r0, #0
   4a8e0:	beq	4a96c <Mat_VarGetStructFieldByName+0xc4>
   4a8e4:	mov	r7, r1
   4a8e8:	mov	r1, sp
   4a8ec:	mov	r0, r6
   4a8f0:	mov	r9, r2
   4a8f4:	bl	47128 <SafeMulDims>
   4a8f8:	ldr	r0, [r6, #52]	; 0x34
   4a8fc:	mvn	r4, #0
   4a900:	ldr	r5, [r0, #4]
   4a904:	cmp	r5, #1
   4a908:	blt	4a938 <Mat_VarGetStructFieldByName+0x90>
   4a90c:	ldr	r8, [r0, #8]
   4a910:	mov	r4, #0
   4a914:	ldr	r0, [r8, r4, lsl #2]
   4a918:	mov	r1, r7
   4a91c:	bl	17c8 <strcmp@plt>
   4a920:	cmp	r0, #0
   4a924:	beq	4a938 <Mat_VarGetStructFieldByName+0x90>
   4a928:	add	r4, r4, #1
   4a92c:	cmp	r5, r4
   4a930:	bne	4a914 <Mat_VarGetStructFieldByName+0x6c>
   4a934:	mvn	r4, #0
   4a938:	ldr	r0, [sp]
   4a93c:	cmp	r0, r9
   4a940:	bls	4a960 <Mat_VarGetStructFieldByName+0xb8>
   4a944:	cmp	r4, #0
   4a948:	bmi	4a96c <Mat_VarGetStructFieldByName+0xc4>
   4a94c:	ldr	r1, [r6, #40]	; 0x28
   4a950:	mul	r0, r5, r9
   4a954:	add	r0, r1, r0, lsl #2
   4a958:	ldr	sl, [r0, r4, lsl #2]
   4a95c:	b	4a96c <Mat_VarGetStructFieldByName+0xc4>
   4a960:	ldr	r0, [pc, #16]	; 4a978 <Mat_VarGetStructFieldByName+0xd0>
   4a964:	add	r0, pc, r0
   4a968:	bl	19cc <Mat_Critical@plt>
   4a96c:	mov	r0, sl
   4a970:	sub	sp, fp, #28
   4a974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a978:	.word	0x00001ef8

0004a97c <Mat_VarGetStructField>:
   4a97c:	push	{r4, r5, r6, r7, fp, lr}
   4a980:	add	fp, sp, #16
   4a984:	sub	sp, sp, #8
   4a988:	mov	r5, r0
   4a98c:	mov	r0, #1
   4a990:	mov	r6, r1
   4a994:	add	r1, sp, #4
   4a998:	mov	r4, r3
   4a99c:	mov	r7, r2
   4a9a0:	str	r0, [sp, #4]
   4a9a4:	mov	r0, r5
   4a9a8:	bl	47128 <SafeMulDims>
   4a9ac:	mov	r0, #0
   4a9b0:	cmp	r4, #0
   4a9b4:	bmi	4aa1c <Mat_VarGetStructField+0xa0>
   4a9b8:	ldr	r1, [sp, #4]
   4a9bc:	sub	r1, r1, #1
   4a9c0:	cmp	r1, r4
   4a9c4:	bcc	4aa1c <Mat_VarGetStructField+0xa0>
   4a9c8:	ldr	r1, [r5, #52]	; 0x34
   4a9cc:	cmp	r7, #2
   4a9d0:	ldr	r1, [r1, #4]
   4a9d4:	bne	4aa00 <Mat_VarGetStructField+0x84>
   4a9d8:	cmp	r1, #1
   4a9dc:	blt	4aa00 <Mat_VarGetStructField+0x84>
   4a9e0:	ldr	r1, [r6]
   4a9e4:	cmp	r1, #0
   4a9e8:	beq	4aa1c <Mat_VarGetStructField+0xa0>
   4a9ec:	sub	r1, r1, #1
   4a9f0:	mov	r0, r5
   4a9f4:	mov	r2, r4
   4a9f8:	bl	1a44 <Mat_VarGetStructFieldByIndex@plt>
   4a9fc:	b	4aa1c <Mat_VarGetStructField+0xa0>
   4aa00:	cmp	r7, #1
   4aa04:	bne	4aa1c <Mat_VarGetStructField+0xa0>
   4aa08:	cmp	r1, #1
   4aa0c:	movge	r0, r5
   4aa10:	movge	r1, r6
   4aa14:	movge	r2, r4
   4aa18:	blge	1a2c <Mat_VarGetStructFieldByName@plt>
   4aa1c:	sub	sp, fp, #16
   4aa20:	pop	{r4, r5, r6, r7, fp, pc}

0004aa24 <Mat_VarGetStructs>:
   4aa24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4aa28:	add	fp, sp, #28
   4aa2c:	sub	sp, sp, #172	; 0xac
   4aa30:	vmov.i32	q8, #0	; 0x00000000
   4aa34:	str	r2, [sp, #44]	; 0x2c
   4aa38:	sub	r2, fp, #72	; 0x48
   4aa3c:	mov	r7, r0
   4aa40:	mov	r5, r1
   4aa44:	mov	r0, #36	; 0x24
   4aa48:	mov	r4, #0
   4aa4c:	mov	r1, r2
   4aa50:	cmp	r7, #0
   4aa54:	str	r4, [fp, #-40]	; 0xffffffd8
   4aa58:	str	r4, [sp, #120]	; 0x78
   4aa5c:	str	r4, [sp, #80]	; 0x50
   4aa60:	cmpne	r5, #0
   4aa64:	vst1.64	{d16-d17}, [r1], r0
   4aa68:	str	r4, [r1]
   4aa6c:	add	r1, r2, #16
   4aa70:	add	r2, sp, #88	; 0x58
   4aa74:	vst1.64	{d16-d17}, [r1]
   4aa78:	add	r1, r2, #16
   4aa7c:	vst1.64	{d16-d17}, [r1]
   4aa80:	mov	r1, r2
   4aa84:	add	r2, sp, #48	; 0x30
   4aa88:	vst1.64	{d16-d17}, [r1], r0
   4aa8c:	str	r4, [r1]
   4aa90:	add	r1, r2, #16
   4aa94:	vst1.64	{d16-d17}, [r1]
   4aa98:	mov	r1, r2
   4aa9c:	vst1.64	{d16-d17}, [r1], r0
   4aaa0:	str	r4, [r1]
   4aaa4:	beq	4aabc <Mat_VarGetStructs+0x98>
   4aaa8:	ldr	r0, [sp, #44]	; 0x2c
   4aaac:	cmp	r0, #0
   4aab0:	movne	r6, r3
   4aab4:	cmpne	r3, #0
   4aab8:	bne	4aac8 <Mat_VarGetStructs+0xa4>
   4aabc:	mov	r0, r4
   4aac0:	sub	sp, fp, #28
   4aac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4aac8:	ldr	r0, [r7, #4]
   4aacc:	cmp	r0, #9
   4aad0:	bgt	4aabc <Mat_VarGetStructs+0x98>
   4aad4:	ldr	r0, [r7, #16]
   4aad8:	cmp	r0, #2
   4aadc:	bne	4aabc <Mat_VarGetStructs+0x98>
   4aae0:	ldr	sl, [fp, #8]
   4aae4:	mov	r0, r7
   4aae8:	mov	r1, #0
   4aaec:	bl	1a80 <Mat_VarDuplicate@plt>
   4aaf0:	cmp	sl, #0
   4aaf4:	str	r0, [sp]
   4aaf8:	str	r6, [sp, #32]
   4aafc:	str	r5, [sp, #12]
   4ab00:	moveq	r1, #1
   4ab04:	streq	r1, [r0, #44]	; 0x2c
   4ab08:	ldr	ip, [r7, #32]
   4ab0c:	ldr	r1, [r7, #52]	; 0x34
   4ab10:	ldr	r2, [ip]
   4ab14:	ldr	r1, [r1, #4]
   4ab18:	str	r2, [sp, #48]	; 0x30
   4ab1c:	str	r1, [sp, #40]	; 0x28
   4ab20:	ldr	r1, [r0, #32]
   4ab24:	ldr	r0, [r6]
   4ab28:	ldr	r8, [r5]
   4ab2c:	str	r0, [r1]
   4ab30:	mov	r9, r0
   4ab34:	ldr	r3, [r5]
   4ab38:	str	r3, [fp, #-72]	; 0xffffffb8
   4ab3c:	ldr	r3, [r7, #4]
   4ab40:	cmp	r3, #2
   4ab44:	blt	4ab94 <Mat_VarGetStructs+0x170>
   4ab48:	ldr	r6, [sp, #12]
   4ab4c:	ldr	lr, [sp, #32]
   4ab50:	mov	r3, #1
   4ab54:	ldr	r5, [r6, r3, lsl #2]
   4ab58:	sub	r0, fp, #72	; 0x48
   4ab5c:	str	r5, [r0, r3, lsl #2]
   4ab60:	add	r0, sp, #48	; 0x30
   4ab64:	mla	r8, r2, r5, r8
   4ab68:	ldr	r4, [ip, r3, lsl #2]
   4ab6c:	mul	r4, r4, r2
   4ab70:	str	r4, [r0, r3, lsl #2]
   4ab74:	mov	r2, r4
   4ab78:	ldr	r0, [lr, r3, lsl #2]
   4ab7c:	str	r0, [r1, r3, lsl #2]
   4ab80:	mul	r9, r0, r9
   4ab84:	add	r3, r3, #1
   4ab88:	ldr	r0, [r7, #4]
   4ab8c:	cmp	r3, r0
   4ab90:	blt	4ab54 <Mat_VarGetStructs+0x130>
   4ab94:	ldr	r0, [sp, #40]	; 0x28
   4ab98:	ldr	r4, [sp]
   4ab9c:	mul	r0, r0, r9
   4aba0:	lsl	r0, r0, #2
   4aba4:	str	r0, [r4]
   4aba8:	bl	18e8 <malloc@plt>
   4abac:	cmp	r0, #0
   4abb0:	str	r0, [r4, #40]	; 0x28
   4abb4:	mov	r1, r0
   4abb8:	str	r0, [sp, #4]
   4abbc:	beq	4ad94 <Mat_VarGetStructs+0x370>
   4abc0:	cmp	r9, #0
   4abc4:	beq	4aabc <Mat_VarGetStructs+0x98>
   4abc8:	ldr	r0, [sp, #44]	; 0x2c
   4abcc:	ldr	r1, [sp, #32]
   4abd0:	ldr	r4, [sp, #40]	; 0x28
   4abd4:	str	r9, [sp, #8]
   4abd8:	add	r0, r0, #8
   4abdc:	mov	r2, r1
   4abe0:	str	r0, [sp, #20]
   4abe4:	ldr	r0, [sp, #12]
   4abe8:	add	r0, r0, #4
   4abec:	str	r0, [sp, #24]
   4abf0:	lsl	r0, r4, #2
   4abf4:	str	r0, [sp, #36]	; 0x24
   4abf8:	ldr	r0, [r2], #4
   4abfc:	str	r2, [sp, #28]
   4ac00:	mov	r2, #0
   4ac04:	str	r2, [sp, #16]
   4ac08:	cmp	r0, #1
   4ac0c:	blt	4ac8c <Mat_VarGetStructs+0x268>
   4ac10:	ldr	r0, [sp, #4]
   4ac14:	ldr	r1, [sp, #36]	; 0x24
   4ac18:	ldr	r2, [sp, #16]
   4ac1c:	mul	r6, r8, r4
   4ac20:	mov	r5, #0
   4ac24:	mla	r9, r1, r2, r0
   4ac28:	cmp	r4, #0
   4ac2c:	beq	4ac5c <Mat_VarGetStructs+0x238>
   4ac30:	mov	r8, r9
   4ac34:	ldr	r0, [r7, #40]	; 0x28
   4ac38:	cmp	sl, #0
   4ac3c:	ldr	r0, [r0, r6, lsl #2]
   4ac40:	beq	4ac4c <Mat_VarGetStructs+0x228>
   4ac44:	mov	r1, #1
   4ac48:	bl	1a80 <Mat_VarDuplicate@plt>
   4ac4c:	str	r0, [r8], #4
   4ac50:	subs	r4, r4, #1
   4ac54:	add	r6, r6, #1
   4ac58:	bne	4ac34 <Mat_VarGetStructs+0x210>
   4ac5c:	ldr	r0, [sp, #44]	; 0x2c
   4ac60:	ldr	r4, [sp, #40]	; 0x28
   4ac64:	add	r5, r5, #1
   4ac68:	ldr	r0, [r0]
   4ac6c:	sub	r0, r0, #1
   4ac70:	mla	r6, r0, r4, r6
   4ac74:	ldr	r0, [sp, #36]	; 0x24
   4ac78:	add	r9, r9, r0
   4ac7c:	ldr	r0, [sp, #32]
   4ac80:	ldr	r0, [r0]
   4ac84:	cmp	r5, r0
   4ac88:	blt	4ac28 <Mat_VarGetStructs+0x204>
   4ac8c:	ldr	r1, [sp, #12]
   4ac90:	ldr	r8, [r1]
   4ac94:	ldr	r1, [sp, #92]	; 0x5c
   4ac98:	add	r4, r1, #1
   4ac9c:	ldr	r1, [sp, #44]	; 0x2c
   4aca0:	str	r8, [fp, #-72]	; 0xffffffb8
   4aca4:	str	r4, [sp, #92]	; 0x5c
   4aca8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4acac:	ldr	r1, [r1, #4]
   4acb0:	add	r1, r2, r1
   4acb4:	str	r1, [fp, #-68]	; 0xffffffbc
   4acb8:	ldr	lr, [r7, #4]
   4acbc:	cmp	lr, #2
   4acc0:	blt	4ad68 <Mat_VarGetStructs+0x344>
   4acc4:	sub	ip, lr, #1
   4acc8:	mov	r3, #0
   4accc:	sub	r6, fp, #72	; 0x48
   4acd0:	add	r2, sp, #88	; 0x58
   4acd4:	ldr	r1, [sp, #28]
   4acd8:	add	r5, r3, #1
   4acdc:	ldr	r1, [r1, r3, lsl #2]
   4ace0:	cmp	r4, r1
   4ace4:	bne	4ad38 <Mat_VarGetStructs+0x314>
   4ace8:	add	r1, r2, r3, lsl #2
   4acec:	mov	r2, #0
   4acf0:	cmp	r5, ip
   4acf4:	str	r2, [r1, #4]
   4acf8:	ldr	r2, [sp, #24]
   4acfc:	ldr	r4, [r2, r3, lsl #2]
   4ad00:	add	r2, r6, r3, lsl #2
   4ad04:	str	r4, [r2, #4]
   4ad08:	bge	4ad30 <Mat_VarGetStructs+0x30c>
   4ad0c:	ldr	r6, [r1, #8]
   4ad10:	add	r6, r6, #1
   4ad14:	str	r6, [r1, #8]
   4ad18:	ldr	r1, [sp, #20]
   4ad1c:	ldr	r6, [r2, #8]
   4ad20:	ldr	r1, [r1, r3, lsl #2]
   4ad24:	add	r1, r6, r1
   4ad28:	sub	r6, fp, #72	; 0x48
   4ad2c:	str	r1, [r2, #8]
   4ad30:	add	r2, sp, #88	; 0x58
   4ad34:	b	4ad40 <Mat_VarGetStructs+0x31c>
   4ad38:	add	r1, r6, r3, lsl #2
   4ad3c:	ldr	r4, [r1, #4]
   4ad40:	add	r1, sp, #48	; 0x30
   4ad44:	ldr	r1, [r1, r3, lsl #2]
   4ad48:	mla	r8, r1, r4, r8
   4ad4c:	add	r1, r3, #2
   4ad50:	cmp	r1, lr
   4ad54:	bge	4ad68 <Mat_VarGetStructs+0x344>
   4ad58:	add	r1, r2, r3, lsl #2
   4ad5c:	mov	r3, r5
   4ad60:	ldr	r4, [r1, #8]
   4ad64:	b	4acd4 <Mat_VarGetStructs+0x2b0>
   4ad68:	ldr	r2, [sp, #16]
   4ad6c:	ldr	r9, [sp, #8]
   4ad70:	ldr	r4, [sp, #40]	; 0x28
   4ad74:	mov	r3, r2
   4ad78:	add	r3, r0, r2
   4ad7c:	cmp	r3, r9
   4ad80:	mov	r2, r3
   4ad84:	str	r3, [sp, #16]
   4ad88:	bcc	4ac08 <Mat_VarGetStructs+0x1e4>
   4ad8c:	ldr	r4, [sp]
   4ad90:	b	4aabc <Mat_VarGetStructs+0x98>
   4ad94:	mov	r0, r4
   4ad98:	bl	1930 <Mat_VarFree@plt>
   4ad9c:	mov	r4, #0
   4ada0:	b	4aabc <Mat_VarGetStructs+0x98>

0004ada4 <Mat_VarGetStructsLinear>:
   4ada4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4ada8:	add	fp, sp, #28
   4adac:	sub	sp, sp, #20
   4adb0:	mov	r5, #0
   4adb4:	cmp	r0, #0
   4adb8:	beq	4aefc <Mat_VarGetStructsLinear+0x158>
   4adbc:	mov	r6, r0
   4adc0:	ldr	r0, [r0, #4]
   4adc4:	cmp	r0, #10
   4adc8:	bgt	4aefc <Mat_VarGetStructsLinear+0x158>
   4adcc:	ldr	r8, [fp, #8]
   4add0:	mov	r4, r1
   4add4:	mov	r0, r6
   4add8:	mov	r1, #0
   4addc:	mov	r7, r3
   4ade0:	str	r2, [sp, #16]
   4ade4:	bl	1a80 <Mat_VarDuplicate@plt>
   4ade8:	cmp	r8, #0
   4adec:	mov	r5, r0
   4adf0:	moveq	r0, #1
   4adf4:	streq	r0, [r5, #44]	; 0x2c
   4adf8:	ldr	r0, [r6, #52]	; 0x34
   4adfc:	ldr	r9, [r0, #4]
   4ae00:	mul	r0, r7, r9
   4ae04:	lsl	r0, r0, #2
   4ae08:	str	r0, [r5]
   4ae0c:	bl	18e8 <malloc@plt>
   4ae10:	cmp	r0, #0
   4ae14:	str	r0, [r5, #40]	; 0x28
   4ae18:	beq	4aef0 <Mat_VarGetStructsLinear+0x14c>
   4ae1c:	mov	sl, r0
   4ae20:	ldr	r0, [r5, #32]
   4ae24:	cmp	r7, #1
   4ae28:	mov	r1, #1
   4ae2c:	str	r7, [r0]
   4ae30:	str	r1, [r0, #4]
   4ae34:	blt	4aefc <Mat_VarGetStructsLinear+0x158>
   4ae38:	ldr	r0, [sp, #16]
   4ae3c:	mul	r4, r9, r4
   4ae40:	str	r5, [sp, #4]
   4ae44:	mov	r5, #0
   4ae48:	str	r7, [sp, #16]
   4ae4c:	sub	r0, r0, #1
   4ae50:	mul	r0, r9, r0
   4ae54:	str	r0, [sp, #12]
   4ae58:	lsl	r0, r9, #2
   4ae5c:	str	r0, [sp, #8]
   4ae60:	ldr	r0, [fp, #8]
   4ae64:	cmp	r0, #0
   4ae68:	beq	4aea0 <Mat_VarGetStructsLinear+0xfc>
   4ae6c:	cmp	r9, #1
   4ae70:	blt	4aec8 <Mat_VarGetStructsLinear+0x124>
   4ae74:	mov	r7, sl
   4ae78:	mov	r8, r9
   4ae7c:	ldr	r0, [r6, #40]	; 0x28
   4ae80:	mov	r1, #1
   4ae84:	ldr	r0, [r0, r4, lsl #2]
   4ae88:	bl	1a80 <Mat_VarDuplicate@plt>
   4ae8c:	str	r0, [r7], #4
   4ae90:	subs	r8, r8, #1
   4ae94:	add	r4, r4, #1
   4ae98:	bne	4ae7c <Mat_VarGetStructsLinear+0xd8>
   4ae9c:	b	4aec8 <Mat_VarGetStructsLinear+0x124>
   4aea0:	cmp	r9, #1
   4aea4:	blt	4aec8 <Mat_VarGetStructsLinear+0x124>
   4aea8:	ldr	r0, [r6, #40]	; 0x28
   4aeac:	mov	r1, sl
   4aeb0:	mov	r2, r9
   4aeb4:	ldr	r3, [r0, r4, lsl #2]
   4aeb8:	subs	r2, r2, #1
   4aebc:	add	r4, r4, #1
   4aec0:	str	r3, [r1], #4
   4aec4:	bne	4aeb4 <Mat_VarGetStructsLinear+0x110>
   4aec8:	ldr	r0, [sp, #8]
   4aecc:	add	r5, r5, #1
   4aed0:	add	sl, sl, r0
   4aed4:	ldr	r0, [sp, #12]
   4aed8:	add	r4, r4, r0
   4aedc:	ldr	r0, [sp, #16]
   4aee0:	cmp	r5, r0
   4aee4:	bne	4ae60 <Mat_VarGetStructsLinear+0xbc>
   4aee8:	ldr	r5, [sp, #4]
   4aeec:	b	4aefc <Mat_VarGetStructsLinear+0x158>
   4aef0:	mov	r0, r5
   4aef4:	bl	1930 <Mat_VarFree@plt>
   4aef8:	mov	r5, #0
   4aefc:	mov	r0, r5
   4af00:	sub	sp, fp, #28
   4af04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004af08 <Mat_VarSetStructFieldByIndex>:
   4af08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4af0c:	add	fp, sp, #24
   4af10:	sub	sp, sp, #8
   4af14:	mov	r7, r0
   4af18:	mov	r0, #1
   4af1c:	mov	r4, #0
   4af20:	cmp	r7, #0
   4af24:	str	r0, [sp, #4]
   4af28:	beq	4afa8 <Mat_VarSetStructFieldByIndex+0xa0>
   4af2c:	ldr	r0, [r7, #16]
   4af30:	cmp	r0, #2
   4af34:	bne	4afa8 <Mat_VarSetStructFieldByIndex+0xa0>
   4af38:	ldr	r0, [r7, #40]	; 0x28
   4af3c:	cmp	r0, #0
   4af40:	beq	4afa8 <Mat_VarSetStructFieldByIndex+0xa0>
   4af44:	mov	r6, r1
   4af48:	add	r1, sp, #4
   4af4c:	mov	r0, r7
   4af50:	mov	r8, r3
   4af54:	mov	r5, r2
   4af58:	bl	47128 <SafeMulDims>
   4af5c:	ldr	r0, [r7, #52]	; 0x34
   4af60:	ldr	r0, [r0, #4]
   4af64:	cmp	r0, r6
   4af68:	ldrhi	r1, [sp, #4]
   4af6c:	cmphi	r1, r5
   4af70:	bls	4afa8 <Mat_VarSetStructFieldByIndex+0xa0>
   4af74:	ldr	r1, [r7, #40]	; 0x28
   4af78:	mla	r0, r0, r5, r6
   4af7c:	ldr	r4, [r1, r0, lsl #2]
   4af80:	str	r8, [r1, r0, lsl #2]
   4af84:	ldr	r0, [r8, #36]	; 0x24
   4af88:	cmp	r0, #0
   4af8c:	beq	4af94 <Mat_VarSetStructFieldByIndex+0x8c>
   4af90:	bl	181c <free@plt>
   4af94:	ldr	r0, [r7, #52]	; 0x34
   4af98:	ldr	r0, [r0, #8]
   4af9c:	ldr	r0, [r0, r6, lsl #2]
   4afa0:	bl	187c <strdup@plt>
   4afa4:	str	r0, [r8, #36]	; 0x24
   4afa8:	mov	r0, r4
   4afac:	sub	sp, fp, #24
   4afb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0004afb4 <Mat_VarSetStructFieldByName>:
   4afb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4afb8:	add	fp, sp, #28
   4afbc:	sub	sp, sp, #12
   4afc0:	mov	r8, r0
   4afc4:	mov	r0, #1
   4afc8:	mov	sl, #0
   4afcc:	cmp	r8, #0
   4afd0:	str	r0, [sp, #8]
   4afd4:	beq	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4afd8:	ldr	r0, [r8, #16]
   4afdc:	cmp	r0, #2
   4afe0:	bne	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4afe4:	ldr	r0, [r8, #40]	; 0x28
   4afe8:	cmp	r0, #0
   4afec:	beq	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4aff0:	mov	r4, r1
   4aff4:	add	r1, sp, #8
   4aff8:	mov	r0, r8
   4affc:	mov	r5, r3
   4b000:	mov	r9, r2
   4b004:	bl	47128 <SafeMulDims>
   4b008:	ldr	r0, [r8, #52]	; 0x34
   4b00c:	ldr	r6, [r0, #4]
   4b010:	cmp	r6, #1
   4b014:	blt	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4b018:	str	r5, [sp, #4]
   4b01c:	ldr	r5, [r0, #8]
   4b020:	mov	r7, #0
   4b024:	ldr	r0, [r5, r7, lsl #2]
   4b028:	mov	r1, r4
   4b02c:	bl	17c8 <strcmp@plt>
   4b030:	cmp	r0, #0
   4b034:	beq	4b04c <Mat_VarSetStructFieldByName+0x98>
   4b038:	add	r7, r7, #1
   4b03c:	cmp	r6, r7
   4b040:	bne	4b024 <Mat_VarSetStructFieldByName+0x70>
   4b044:	mov	sl, #0
   4b048:	b	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4b04c:	ldr	r0, [sp, #8]
   4b050:	ldr	r4, [sp, #4]
   4b054:	mov	sl, #0
   4b058:	cmp	r0, r9
   4b05c:	bls	4b098 <Mat_VarSetStructFieldByName+0xe4>
   4b060:	ldr	r1, [r8, #40]	; 0x28
   4b064:	mul	r0, r6, r9
   4b068:	add	r0, r1, r0, lsl #2
   4b06c:	ldr	sl, [r0, r7, lsl #2]
   4b070:	str	r4, [r0, r7, lsl #2]
   4b074:	ldr	r0, [r4, #36]	; 0x24
   4b078:	cmp	r0, #0
   4b07c:	beq	4b084 <Mat_VarSetStructFieldByName+0xd0>
   4b080:	bl	181c <free@plt>
   4b084:	ldr	r0, [r8, #52]	; 0x34
   4b088:	ldr	r0, [r0, #8]
   4b08c:	ldr	r0, [r0, r7, lsl #2]
   4b090:	bl	187c <strdup@plt>
   4b094:	str	r0, [r4, #36]	; 0x24
   4b098:	mov	r0, sl
   4b09c:	sub	sp, fp, #28
   4b0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004b0a4 <__aeabi_drsub>:
   4b0a4:	eor	r1, r1, #-2147483648	; 0x80000000
   4b0a8:	b	4b0b0 <__adddf3>

0004b0ac <__aeabi_dsub>:
   4b0ac:	eor	r3, r3, #-2147483648	; 0x80000000

0004b0b0 <__adddf3>:
   4b0b0:	push	{r4, r5, lr}
   4b0b4:	lsl	r4, r1, #1
   4b0b8:	lsl	r5, r3, #1
   4b0bc:	teq	r4, r5
   4b0c0:	teqeq	r0, r2
   4b0c4:	orrsne	ip, r4, r0
   4b0c8:	orrsne	ip, r5, r2
   4b0cc:	mvnsne	ip, r4, asr #21
   4b0d0:	mvnsne	ip, r5, asr #21
   4b0d4:	beq	4b2c0 <__adddf3+0x210>
   4b0d8:	lsr	r4, r4, #21
   4b0dc:	rsbs	r5, r4, r5, lsr #21
   4b0e0:	rsblt	r5, r5, #0
   4b0e4:	ble	4b104 <__adddf3+0x54>
   4b0e8:	add	r4, r4, r5
   4b0ec:	eor	r2, r0, r2
   4b0f0:	eor	r3, r1, r3
   4b0f4:	eor	r0, r2, r0
   4b0f8:	eor	r1, r3, r1
   4b0fc:	eor	r2, r0, r2
   4b100:	eor	r3, r1, r3
   4b104:	cmp	r5, #54	; 0x36
   4b108:	pophi	{r4, r5, pc}
   4b10c:	tst	r1, #-2147483648	; 0x80000000
   4b110:	lsl	r1, r1, #12
   4b114:	mov	ip, #1048576	; 0x100000
   4b118:	orr	r1, ip, r1, lsr #12
   4b11c:	beq	4b128 <__adddf3+0x78>
   4b120:	rsbs	r0, r0, #0
   4b124:	rsc	r1, r1, #0
   4b128:	tst	r3, #-2147483648	; 0x80000000
   4b12c:	lsl	r3, r3, #12
   4b130:	orr	r3, ip, r3, lsr #12
   4b134:	beq	4b140 <__adddf3+0x90>
   4b138:	rsbs	r2, r2, #0
   4b13c:	rsc	r3, r3, #0
   4b140:	teq	r4, r5
   4b144:	beq	4b2a8 <__adddf3+0x1f8>
   4b148:	sub	r4, r4, #1
   4b14c:	rsbs	lr, r5, #32
   4b150:	blt	4b16c <__adddf3+0xbc>
   4b154:	lsl	ip, r2, lr
   4b158:	adds	r0, r0, r2, lsr r5
   4b15c:	adc	r1, r1, #0
   4b160:	adds	r0, r0, r3, lsl lr
   4b164:	adcs	r1, r1, r3, asr r5
   4b168:	b	4b188 <__adddf3+0xd8>
   4b16c:	sub	r5, r5, #32
   4b170:	add	lr, lr, #32
   4b174:	cmp	r2, #1
   4b178:	lsl	ip, r3, lr
   4b17c:	orrcs	ip, ip, #2
   4b180:	adds	r0, r0, r3, asr r5
   4b184:	adcs	r1, r1, r3, asr #31
   4b188:	and	r5, r1, #-2147483648	; 0x80000000
   4b18c:	bpl	4b19c <__adddf3+0xec>
   4b190:	rsbs	ip, ip, #0
   4b194:	rscs	r0, r0, #0
   4b198:	rsc	r1, r1, #0
   4b19c:	cmp	r1, #1048576	; 0x100000
   4b1a0:	bcc	4b1e0 <__adddf3+0x130>
   4b1a4:	cmp	r1, #2097152	; 0x200000
   4b1a8:	bcc	4b1c8 <__adddf3+0x118>
   4b1ac:	lsrs	r1, r1, #1
   4b1b0:	rrxs	r0, r0
   4b1b4:	rrx	ip, ip
   4b1b8:	add	r4, r4, #1
   4b1bc:	lsl	r2, r4, #21
   4b1c0:	cmn	r2, #4194304	; 0x400000
   4b1c4:	bcs	4b320 <__adddf3+0x270>
   4b1c8:	cmp	ip, #-2147483648	; 0x80000000
   4b1cc:	lsrseq	ip, r0, #1
   4b1d0:	adcs	r0, r0, #0
   4b1d4:	adc	r1, r1, r4, lsl #20
   4b1d8:	orr	r1, r1, r5
   4b1dc:	pop	{r4, r5, pc}
   4b1e0:	lsls	ip, ip, #1
   4b1e4:	adcs	r0, r0, r0
   4b1e8:	adc	r1, r1, r1
   4b1ec:	tst	r1, #1048576	; 0x100000
   4b1f0:	sub	r4, r4, #1
   4b1f4:	bne	4b1c8 <__adddf3+0x118>
   4b1f8:	teq	r1, #0
   4b1fc:	moveq	r1, r0
   4b200:	moveq	r0, #0
   4b204:	clz	r3, r1
   4b208:	addeq	r3, r3, #32
   4b20c:	sub	r3, r3, #11
   4b210:	subs	r2, r3, #32
   4b214:	bge	4b238 <__adddf3+0x188>
   4b218:	adds	r2, r2, #12
   4b21c:	ble	4b234 <__adddf3+0x184>
   4b220:	add	ip, r2, #20
   4b224:	rsb	r2, r2, #12
   4b228:	lsl	r0, r1, ip
   4b22c:	lsr	r1, r1, r2
   4b230:	b	4b248 <__adddf3+0x198>
   4b234:	add	r2, r2, #20
   4b238:	rsble	ip, r2, #32
   4b23c:	lsl	r1, r1, r2
   4b240:	orrle	r1, r1, r0, lsr ip
   4b244:	lslle	r0, r0, r2
   4b248:	subs	r4, r4, r3
   4b24c:	addge	r1, r1, r4, lsl #20
   4b250:	orrge	r1, r1, r5
   4b254:	popge	{r4, r5, pc}
   4b258:	mvn	r4, r4
   4b25c:	subs	r4, r4, #31
   4b260:	bge	4b29c <__adddf3+0x1ec>
   4b264:	adds	r4, r4, #12
   4b268:	bgt	4b284 <__adddf3+0x1d4>
   4b26c:	add	r4, r4, #20
   4b270:	rsb	r2, r4, #32
   4b274:	lsr	r0, r0, r4
   4b278:	orr	r0, r0, r1, lsl r2
   4b27c:	orr	r1, r5, r1, lsr r4
   4b280:	pop	{r4, r5, pc}
   4b284:	rsb	r4, r4, #12
   4b288:	rsb	r2, r4, #32
   4b28c:	lsr	r0, r0, r2
   4b290:	orr	r0, r0, r1, lsl r4
   4b294:	mov	r1, r5
   4b298:	pop	{r4, r5, pc}
   4b29c:	lsr	r0, r1, r4
   4b2a0:	mov	r1, r5
   4b2a4:	pop	{r4, r5, pc}
   4b2a8:	teq	r4, #0
   4b2ac:	eor	r3, r3, #1048576	; 0x100000
   4b2b0:	eoreq	r1, r1, #1048576	; 0x100000
   4b2b4:	addeq	r4, r4, #1
   4b2b8:	subne	r5, r5, #1
   4b2bc:	b	4b148 <__adddf3+0x98>
   4b2c0:	mvns	ip, r4, asr #21
   4b2c4:	mvnsne	ip, r5, asr #21
   4b2c8:	beq	4b330 <__adddf3+0x280>
   4b2cc:	teq	r4, r5
   4b2d0:	teqeq	r0, r2
   4b2d4:	beq	4b2e8 <__adddf3+0x238>
   4b2d8:	orrs	ip, r4, r0
   4b2dc:	moveq	r1, r3
   4b2e0:	moveq	r0, r2
   4b2e4:	pop	{r4, r5, pc}
   4b2e8:	teq	r1, r3
   4b2ec:	movne	r1, #0
   4b2f0:	movne	r0, #0
   4b2f4:	popne	{r4, r5, pc}
   4b2f8:	lsrs	ip, r4, #21
   4b2fc:	bne	4b310 <__adddf3+0x260>
   4b300:	lsls	r0, r0, #1
   4b304:	adcs	r1, r1, r1
   4b308:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4b30c:	pop	{r4, r5, pc}
   4b310:	adds	r4, r4, #4194304	; 0x400000
   4b314:	addcc	r1, r1, #1048576	; 0x100000
   4b318:	popcc	{r4, r5, pc}
   4b31c:	and	r5, r1, #-2147483648	; 0x80000000
   4b320:	orr	r1, r5, #2130706432	; 0x7f000000
   4b324:	orr	r1, r1, #15728640	; 0xf00000
   4b328:	mov	r0, #0
   4b32c:	pop	{r4, r5, pc}
   4b330:	mvns	ip, r4, asr #21
   4b334:	movne	r1, r3
   4b338:	movne	r0, r2
   4b33c:	mvnseq	ip, r5, asr #21
   4b340:	movne	r3, r1
   4b344:	movne	r2, r0
   4b348:	orrs	r4, r0, r1, lsl #12
   4b34c:	orrseq	r5, r2, r3, lsl #12
   4b350:	teqeq	r1, r3
   4b354:	orrne	r1, r1, #524288	; 0x80000
   4b358:	pop	{r4, r5, pc}

0004b35c <__aeabi_ui2d>:
   4b35c:	teq	r0, #0
   4b360:	moveq	r1, #0
   4b364:	bxeq	lr
   4b368:	push	{r4, r5, lr}
   4b36c:	mov	r4, #1024	; 0x400
   4b370:	add	r4, r4, #50	; 0x32
   4b374:	mov	r5, #0
   4b378:	mov	r1, #0
   4b37c:	b	4b1f8 <__adddf3+0x148>

0004b380 <__aeabi_i2d>:
   4b380:	teq	r0, #0
   4b384:	moveq	r1, #0
   4b388:	bxeq	lr
   4b38c:	push	{r4, r5, lr}
   4b390:	mov	r4, #1024	; 0x400
   4b394:	add	r4, r4, #50	; 0x32
   4b398:	ands	r5, r0, #-2147483648	; 0x80000000
   4b39c:	rsbmi	r0, r0, #0
   4b3a0:	mov	r1, #0
   4b3a4:	b	4b1f8 <__adddf3+0x148>

0004b3a8 <__aeabi_f2d>:
   4b3a8:	lsls	r2, r0, #1
   4b3ac:	asr	r1, r2, #3
   4b3b0:	rrx	r1, r1
   4b3b4:	lsl	r0, r2, #28
   4b3b8:	andsne	r3, r2, #-16777216	; 0xff000000
   4b3bc:	teqne	r3, #-16777216	; 0xff000000
   4b3c0:	eorne	r1, r1, #939524096	; 0x38000000
   4b3c4:	bxne	lr
   4b3c8:	bics	r2, r2, #-16777216	; 0xff000000
   4b3cc:	bxeq	lr
   4b3d0:	teq	r3, #-16777216	; 0xff000000
   4b3d4:	orreq	r1, r1, #524288	; 0x80000
   4b3d8:	bxeq	lr
   4b3dc:	push	{r4, r5, lr}
   4b3e0:	mov	r4, #896	; 0x380
   4b3e4:	and	r5, r1, #-2147483648	; 0x80000000
   4b3e8:	bic	r1, r1, #-2147483648	; 0x80000000
   4b3ec:	b	4b1f8 <__adddf3+0x148>

0004b3f0 <__aeabi_ul2d>:
   4b3f0:	orrs	r2, r0, r1
   4b3f4:	bxeq	lr
   4b3f8:	push	{r4, r5, lr}
   4b3fc:	mov	r5, #0
   4b400:	b	4b420 <__aeabi_l2d+0x1c>

0004b404 <__aeabi_l2d>:
   4b404:	orrs	r2, r0, r1
   4b408:	bxeq	lr
   4b40c:	push	{r4, r5, lr}
   4b410:	ands	r5, r1, #-2147483648	; 0x80000000
   4b414:	bpl	4b420 <__aeabi_l2d+0x1c>
   4b418:	rsbs	r0, r0, #0
   4b41c:	rsc	r1, r1, #0
   4b420:	mov	r4, #1024	; 0x400
   4b424:	add	r4, r4, #50	; 0x32
   4b428:	lsrs	ip, r1, #22
   4b42c:	beq	4b19c <__adddf3+0xec>
   4b430:	mov	r2, #3
   4b434:	lsrs	ip, ip, #3
   4b438:	addne	r2, r2, #3
   4b43c:	lsrs	ip, ip, #3
   4b440:	addne	r2, r2, #3
   4b444:	add	r2, r2, ip, lsr #3
   4b448:	rsb	r3, r2, #32
   4b44c:	lsl	ip, r0, r3
   4b450:	lsr	r0, r0, r2
   4b454:	orr	r0, r0, r1, lsl r3
   4b458:	lsr	r1, r1, r2
   4b45c:	add	r4, r4, r2
   4b460:	b	4b19c <__adddf3+0xec>

0004b464 <__aeabi_frsub>:
   4b464:	eor	r0, r0, #-2147483648	; 0x80000000
   4b468:	b	4b470 <__addsf3>

0004b46c <__aeabi_fsub>:
   4b46c:	eor	r1, r1, #-2147483648	; 0x80000000

0004b470 <__addsf3>:
   4b470:	lsls	r2, r0, #1
   4b474:	lslsne	r3, r1, #1
   4b478:	teqne	r2, r3
   4b47c:	mvnsne	ip, r2, asr #24
   4b480:	mvnsne	ip, r3, asr #24
   4b484:	beq	4b57c <__addsf3+0x10c>
   4b488:	lsr	r2, r2, #24
   4b48c:	rsbs	r3, r2, r3, lsr #24
   4b490:	addgt	r2, r2, r3
   4b494:	eorgt	r1, r0, r1
   4b498:	eorgt	r0, r1, r0
   4b49c:	eorgt	r1, r0, r1
   4b4a0:	rsblt	r3, r3, #0
   4b4a4:	cmp	r3, #25
   4b4a8:	bxhi	lr
   4b4ac:	tst	r0, #-2147483648	; 0x80000000
   4b4b0:	orr	r0, r0, #8388608	; 0x800000
   4b4b4:	bic	r0, r0, #-16777216	; 0xff000000
   4b4b8:	rsbne	r0, r0, #0
   4b4bc:	tst	r1, #-2147483648	; 0x80000000
   4b4c0:	orr	r1, r1, #8388608	; 0x800000
   4b4c4:	bic	r1, r1, #-16777216	; 0xff000000
   4b4c8:	rsbne	r1, r1, #0
   4b4cc:	teq	r2, r3
   4b4d0:	beq	4b564 <__addsf3+0xf4>
   4b4d4:	sub	r2, r2, #1
   4b4d8:	adds	r0, r0, r1, asr r3
   4b4dc:	rsb	r3, r3, #32
   4b4e0:	lsl	r1, r1, r3
   4b4e4:	and	r3, r0, #-2147483648	; 0x80000000
   4b4e8:	bpl	4b4f4 <__addsf3+0x84>
   4b4ec:	rsbs	r1, r1, #0
   4b4f0:	rsc	r0, r0, #0
   4b4f4:	cmp	r0, #8388608	; 0x800000
   4b4f8:	bcc	4b52c <__addsf3+0xbc>
   4b4fc:	cmp	r0, #16777216	; 0x1000000
   4b500:	bcc	4b518 <__addsf3+0xa8>
   4b504:	lsrs	r0, r0, #1
   4b508:	rrx	r1, r1
   4b50c:	add	r2, r2, #1
   4b510:	cmp	r2, #254	; 0xfe
   4b514:	bcs	4b5d0 <__addsf3+0x160>
   4b518:	cmp	r1, #-2147483648	; 0x80000000
   4b51c:	adc	r0, r0, r2, lsl #23
   4b520:	biceq	r0, r0, #1
   4b524:	orr	r0, r0, r3
   4b528:	bx	lr
   4b52c:	lsls	r1, r1, #1
   4b530:	adc	r0, r0, r0
   4b534:	tst	r0, #8388608	; 0x800000
   4b538:	sub	r2, r2, #1
   4b53c:	bne	4b518 <__addsf3+0xa8>
   4b540:	clz	ip, r0
   4b544:	sub	ip, ip, #8
   4b548:	subs	r2, r2, ip
   4b54c:	lsl	r0, r0, ip
   4b550:	addge	r0, r0, r2, lsl #23
   4b554:	rsblt	r2, r2, #0
   4b558:	orrge	r0, r0, r3
   4b55c:	orrlt	r0, r3, r0, lsr r2
   4b560:	bx	lr
   4b564:	teq	r2, #0
   4b568:	eor	r1, r1, #8388608	; 0x800000
   4b56c:	eoreq	r0, r0, #8388608	; 0x800000
   4b570:	addeq	r2, r2, #1
   4b574:	subne	r3, r3, #1
   4b578:	b	4b4d4 <__addsf3+0x64>
   4b57c:	lsl	r3, r1, #1
   4b580:	mvns	ip, r2, asr #24
   4b584:	mvnsne	ip, r3, asr #24
   4b588:	beq	4b5dc <__addsf3+0x16c>
   4b58c:	teq	r2, r3
   4b590:	beq	4b5a0 <__addsf3+0x130>
   4b594:	teq	r2, #0
   4b598:	moveq	r0, r1
   4b59c:	bx	lr
   4b5a0:	teq	r0, r1
   4b5a4:	movne	r0, #0
   4b5a8:	bxne	lr
   4b5ac:	tst	r2, #-16777216	; 0xff000000
   4b5b0:	bne	4b5c0 <__addsf3+0x150>
   4b5b4:	lsls	r0, r0, #1
   4b5b8:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4b5bc:	bx	lr
   4b5c0:	adds	r2, r2, #33554432	; 0x2000000
   4b5c4:	addcc	r0, r0, #8388608	; 0x800000
   4b5c8:	bxcc	lr
   4b5cc:	and	r3, r0, #-2147483648	; 0x80000000
   4b5d0:	orr	r0, r3, #2130706432	; 0x7f000000
   4b5d4:	orr	r0, r0, #8388608	; 0x800000
   4b5d8:	bx	lr
   4b5dc:	mvns	r2, r2, asr #24
   4b5e0:	movne	r0, r1
   4b5e4:	mvnseq	r3, r3, asr #24
   4b5e8:	movne	r1, r0
   4b5ec:	lsls	r2, r0, #9
   4b5f0:	lslseq	r3, r1, #9
   4b5f4:	teqeq	r0, r1
   4b5f8:	orrne	r0, r0, #4194304	; 0x400000
   4b5fc:	bx	lr

0004b600 <__aeabi_ui2f>:
   4b600:	mov	r3, #0
   4b604:	b	4b610 <__aeabi_i2f+0x8>

0004b608 <__aeabi_i2f>:
   4b608:	ands	r3, r0, #-2147483648	; 0x80000000
   4b60c:	rsbmi	r0, r0, #0
   4b610:	movs	ip, r0
   4b614:	bxeq	lr
   4b618:	orr	r3, r3, #1258291200	; 0x4b000000
   4b61c:	mov	r1, r0
   4b620:	mov	r0, #0
   4b624:	b	4b668 <__aeabi_l2f+0x30>

0004b628 <__aeabi_ul2f>:
   4b628:	orrs	r2, r0, r1
   4b62c:	bxeq	lr
   4b630:	mov	r3, #0
   4b634:	b	4b650 <__aeabi_l2f+0x18>

0004b638 <__aeabi_l2f>:
   4b638:	orrs	r2, r0, r1
   4b63c:	bxeq	lr
   4b640:	ands	r3, r1, #-2147483648	; 0x80000000
   4b644:	bpl	4b650 <__aeabi_l2f+0x18>
   4b648:	rsbs	r0, r0, #0
   4b64c:	rsc	r1, r1, #0
   4b650:	movs	ip, r1
   4b654:	moveq	ip, r0
   4b658:	moveq	r1, r0
   4b65c:	moveq	r0, #0
   4b660:	orr	r3, r3, #1526726656	; 0x5b000000
   4b664:	subeq	r3, r3, #268435456	; 0x10000000
   4b668:	sub	r3, r3, #8388608	; 0x800000
   4b66c:	clz	r2, ip
   4b670:	subs	r2, r2, #8
   4b674:	sub	r3, r3, r2, lsl #23
   4b678:	blt	4b698 <__aeabi_l2f+0x60>
   4b67c:	add	r3, r3, r1, lsl r2
   4b680:	lsl	ip, r0, r2
   4b684:	rsb	r2, r2, #32
   4b688:	cmp	ip, #-2147483648	; 0x80000000
   4b68c:	adc	r0, r3, r0, lsr r2
   4b690:	biceq	r0, r0, #1
   4b694:	bx	lr
   4b698:	add	r2, r2, #32
   4b69c:	lsl	ip, r1, r2
   4b6a0:	rsb	r2, r2, #32
   4b6a4:	orrs	r0, r0, ip, lsl #1
   4b6a8:	adc	r0, r3, r1, lsr r2
   4b6ac:	biceq	r0, r0, ip, lsr #31
   4b6b0:	bx	lr

0004b6b4 <__aeabi_f2lz>:
   4b6b4:	vmov	s15, r0
   4b6b8:	vcmpe.f32	s15, #0.0
   4b6bc:	vmrs	APSR_nzcv, fpscr
   4b6c0:	bmi	4b6c8 <__aeabi_f2lz+0x14>
   4b6c4:	b	4b710 <__aeabi_f2ulz>
   4b6c8:	push	{r4, lr}
   4b6cc:	eor	r0, r0, #-2147483648	; 0x80000000
   4b6d0:	bl	4b710 <__aeabi_f2ulz>
   4b6d4:	rsbs	r0, r0, #0
   4b6d8:	rsc	r1, r1, #0
   4b6dc:	pop	{r4, pc}

0004b6e0 <__aeabi_d2lz>:
   4b6e0:	vmov	d7, r0, r1
   4b6e4:	vcmpe.f64	d7, #0.0
   4b6e8:	vmrs	APSR_nzcv, fpscr
   4b6ec:	bmi	4b6f4 <__aeabi_d2lz+0x14>
   4b6f0:	b	4b750 <__aeabi_d2ulz>
   4b6f4:	push	{r4, lr}
   4b6f8:	eor	r1, r1, #-2147483648	; 0x80000000
   4b6fc:	bl	4b750 <__aeabi_d2ulz>
   4b700:	rsbs	r0, r0, #0
   4b704:	rsc	r1, r1, #0
   4b708:	pop	{r4, pc}
   4b70c:	andeq	r0, r0, r0

0004b710 <__aeabi_f2ulz>:
   4b710:	vmov	s15, r0
   4b714:	vldr	d5, [pc, #36]	; 4b740 <__aeabi_f2ulz+0x30>
   4b718:	vcvt.f64.f32	d6, s15
   4b71c:	vldr	d7, [pc, #36]	; 4b748 <__aeabi_f2ulz+0x38>
   4b720:	vmul.f64	d7, d6, d7
   4b724:	vcvt.u32.f64	s14, d7
   4b728:	vcvt.f64.u32	d4, s14
   4b72c:	vmov	r1, s14
   4b730:	vmls.f64	d6, d4, d5
   4b734:	vcvt.u32.f64	s15, d6
   4b738:	vmov	r0, s15
   4b73c:	bx	lr
   4b740:	.word	0x00000000
   4b744:	.word	0x41f00000
   4b748:	.word	0x00000000
   4b74c:	.word	0x3df00000

0004b750 <__aeabi_d2ulz>:
   4b750:	vmov	d6, r0, r1
   4b754:	vldr	d7, [pc, #36]	; 4b780 <__aeabi_d2ulz+0x30>
   4b758:	vldr	d5, [pc, #40]	; 4b788 <__aeabi_d2ulz+0x38>
   4b75c:	vmul.f64	d7, d6, d7
   4b760:	vcvt.u32.f64	s14, d7
   4b764:	vcvt.f64.u32	d4, s14
   4b768:	vmov	r1, s14
   4b76c:	vmls.f64	d6, d4, d5
   4b770:	vcvt.u32.f64	s15, d6
   4b774:	vmov	r0, s15
   4b778:	bx	lr
   4b77c:	nop			; (mov r0, r0)
   4b780:	.word	0x00000000
   4b784:	.word	0x3df00000
   4b788:	.word	0x00000000
   4b78c:	.word	0x41f00000

Disassembly of section .fini:

0004b790 <_fini>:
   4b790:	push	{r3, lr}
   4b794:	pop	{r3, pc}
