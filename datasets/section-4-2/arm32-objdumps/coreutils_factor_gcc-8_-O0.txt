
../repos/coreutils/src/factor:     file format elf32-littlearm


Disassembly of section .init:

00010e50 <.init>:
   10e50:	push	{r3, lr}
   10e54:	bl	111a4 <__assert_fail@plt+0x4c>
   10e58:	pop	{r3, pc}

Disassembly of section .plt:

00010e5c <calloc@plt-0x14>:
   10e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e60:	ldr	lr, [pc, #4]	; 10e6c <calloc@plt-0x4>
   10e64:	add	lr, pc, lr
   10e68:	ldr	pc, [lr, #8]!
   10e6c:	muleq	r3, r4, r1

00010e70 <calloc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #221184	; 0x36000
   10e78:	ldr	pc, [ip, #404]!	; 0x194

00010e7c <fputs_unlocked@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #221184	; 0x36000
   10e84:	ldr	pc, [ip, #396]!	; 0x18c

00010e88 <raise@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #221184	; 0x36000
   10e90:	ldr	pc, [ip, #388]!	; 0x184

00010e94 <iconv_close@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #221184	; 0x36000
   10e9c:	ldr	pc, [ip, #380]!	; 0x17c

00010ea0 <iconv@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #221184	; 0x36000
   10ea8:	ldr	pc, [ip, #372]!	; 0x174

00010eac <strcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #221184	; 0x36000
   10eb4:	ldr	pc, [ip, #364]!	; 0x16c

00010eb8 <printf@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #221184	; 0x36000
   10ec0:	ldr	pc, [ip, #356]!	; 0x164

00010ec4 <fflush@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #221184	; 0x36000
   10ecc:	ldr	pc, [ip, #348]!	; 0x15c

00010ed0 <wcwidth@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #221184	; 0x36000
   10ed8:	ldr	pc, [ip, #340]!	; 0x154

00010edc <memmove@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #221184	; 0x36000
   10ee4:	ldr	pc, [ip, #332]!	; 0x14c

00010ee8 <free@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #221184	; 0x36000
   10ef0:	ldr	pc, [ip, #324]!	; 0x144

00010ef4 <_exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #221184	; 0x36000
   10efc:	ldr	pc, [ip, #316]!	; 0x13c

00010f00 <memcpy@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #221184	; 0x36000
   10f08:	ldr	pc, [ip, #308]!	; 0x134

00010f0c <mbsinit@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #221184	; 0x36000
   10f14:	ldr	pc, [ip, #300]!	; 0x12c

00010f18 <memcmp@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #221184	; 0x36000
   10f20:	ldr	pc, [ip, #292]!	; 0x124

00010f24 <fputc_unlocked@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #221184	; 0x36000
   10f2c:	ldr	pc, [ip, #284]!	; 0x11c

00010f30 <getc_unlocked@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #221184	; 0x36000
   10f38:	ldr	pc, [ip, #276]!	; 0x114

00010f3c <strdup@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #221184	; 0x36000
   10f44:	ldr	pc, [ip, #268]!	; 0x10c

00010f48 <realloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #221184	; 0x36000
   10f50:	ldr	pc, [ip, #260]!	; 0x104

00010f54 <textdomain@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #221184	; 0x36000
   10f5c:	ldr	pc, [ip, #252]!	; 0xfc

00010f60 <iswcntrl@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #221184	; 0x36000
   10f68:	ldr	pc, [ip, #244]!	; 0xf4

00010f6c <fflush_unlocked@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #221184	; 0x36000
   10f74:	ldr	pc, [ip, #236]!	; 0xec

00010f78 <iswprint@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #221184	; 0x36000
   10f80:	ldr	pc, [ip, #228]!	; 0xe4

00010f84 <fwrite@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #221184	; 0x36000
   10f8c:	ldr	pc, [ip, #220]!	; 0xdc

00010f90 <lseek64@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #221184	; 0x36000
   10f98:	ldr	pc, [ip, #212]!	; 0xd4

00010f9c <__ctype_get_mb_cur_max@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #221184	; 0x36000
   10fa4:	ldr	pc, [ip, #204]!	; 0xcc

00010fa8 <__fpending@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #221184	; 0x36000
   10fb0:	ldr	pc, [ip, #196]!	; 0xc4

00010fb4 <ferror_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #221184	; 0x36000
   10fbc:	ldr	pc, [ip, #188]!	; 0xbc

00010fc0 <mbrtowc@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #221184	; 0x36000
   10fc8:	ldr	pc, [ip, #180]!	; 0xb4

00010fcc <error@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #221184	; 0x36000
   10fd4:	ldr	pc, [ip, #172]!	; 0xac

00010fd8 <malloc@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #221184	; 0x36000
   10fe0:	ldr	pc, [ip, #164]!	; 0xa4

00010fe4 <iconv_open@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #221184	; 0x36000
   10fec:	ldr	pc, [ip, #156]!	; 0x9c

00010ff0 <__libc_start_main@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #221184	; 0x36000
   10ff8:	ldr	pc, [ip, #148]!	; 0x94

00010ffc <__freading@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #221184	; 0x36000
   11004:	ldr	pc, [ip, #140]!	; 0x8c

00011008 <__gmon_start__@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #221184	; 0x36000
   11010:	ldr	pc, [ip, #132]!	; 0x84

00011014 <getopt_long@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #221184	; 0x36000
   1101c:	ldr	pc, [ip, #124]!	; 0x7c

00011020 <__ctype_b_loc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #221184	; 0x36000
   11028:	ldr	pc, [ip, #116]!	; 0x74

0001102c <exit@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #221184	; 0x36000
   11034:	ldr	pc, [ip, #108]!	; 0x6c

00011038 <iswspace@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #221184	; 0x36000
   11040:	ldr	pc, [ip, #100]!	; 0x64

00011044 <gettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #221184	; 0x36000
   1104c:	ldr	pc, [ip, #92]!	; 0x5c

00011050 <strlen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #221184	; 0x36000
   11058:	ldr	pc, [ip, #84]!	; 0x54

0001105c <strchr@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #221184	; 0x36000
   11064:	ldr	pc, [ip, #76]!	; 0x4c

00011068 <fprintf@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #221184	; 0x36000
   11070:	ldr	pc, [ip, #68]!	; 0x44

00011074 <__errno_location@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #221184	; 0x36000
   1107c:	ldr	pc, [ip, #60]!	; 0x3c

00011080 <iswalnum@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #221184	; 0x36000
   11088:	ldr	pc, [ip, #52]!	; 0x34

0001108c <__cxa_atexit@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #221184	; 0x36000
   11094:	ldr	pc, [ip, #44]!	; 0x2c

00011098 <memset@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #221184	; 0x36000
   110a0:	ldr	pc, [ip, #36]!	; 0x24

000110a4 <write@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #221184	; 0x36000
   110ac:	ldr	pc, [ip, #28]!

000110b0 <fileno@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #221184	; 0x36000
   110b8:	ldr	pc, [ip, #20]!

000110bc <memchr@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #221184	; 0x36000
   110c4:	ldr	pc, [ip, #12]!

000110c8 <fclose@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #221184	; 0x36000
   110d0:	ldr	pc, [ip, #4]!

000110d4 <strnlen@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #217088	; 0x35000
   110dc:	ldr	pc, [ip, #4092]!	; 0xffc

000110e0 <fseeko64@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #217088	; 0x35000
   110e8:	ldr	pc, [ip, #4084]!	; 0xff4

000110ec <setlocale@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #217088	; 0x35000
   110f4:	ldr	pc, [ip, #4076]!	; 0xfec

000110f8 <strrchr@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #217088	; 0x35000
   11100:	ldr	pc, [ip, #4068]!	; 0xfe4

00011104 <nl_langinfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #217088	; 0x35000
   1110c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011110 <sprintf@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #217088	; 0x35000
   11118:	ldr	pc, [ip, #4052]!	; 0xfd4

0001111c <bindtextdomain@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #217088	; 0x35000
   11124:	ldr	pc, [ip, #4044]!	; 0xfcc

00011128 <isatty@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #217088	; 0x35000
   11130:	ldr	pc, [ip, #4036]!	; 0xfc4

00011134 <strncmp@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #217088	; 0x35000
   1113c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011140 <abort@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #217088	; 0x35000
   11148:	ldr	pc, [ip, #4020]!	; 0xfb4

0001114c <putchar_unlocked@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #217088	; 0x35000
   11154:	ldr	pc, [ip, #4012]!	; 0xfac

00011158 <__assert_fail@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #217088	; 0x35000
   11160:	ldr	pc, [ip, #4004]!	; 0xfa4

Disassembly of section .text:

00011168 <.text>:
   11168:	mov	fp, #0
   1116c:	mov	lr, #0
   11170:	pop	{r1}		; (ldr r1, [sp], #4)
   11174:	mov	r2, sp
   11178:	push	{r2}		; (str r2, [sp, #-4]!)
   1117c:	push	{r0}		; (str r0, [sp, #-4]!)
   11180:	ldr	ip, [pc, #16]	; 11198 <__assert_fail@plt+0x40>
   11184:	push	{ip}		; (str ip, [sp, #-4]!)
   11188:	ldr	r0, [pc, #12]	; 1119c <__assert_fail@plt+0x44>
   1118c:	ldr	r3, [pc, #12]	; 111a0 <__assert_fail@plt+0x48>
   11190:	bl	10ff0 <__libc_start_main@plt>
   11194:	bl	11140 <abort@plt>
   11198:	strdeq	r2, [r3], -ip
   1119c:	andeq	ip, r1, r8, ror #1
   111a0:	muleq	r3, ip, r0
   111a4:	ldr	r3, [pc, #20]	; 111c0 <__assert_fail@plt+0x68>
   111a8:	ldr	r2, [pc, #20]	; 111c4 <__assert_fail@plt+0x6c>
   111ac:	add	r3, pc, r3
   111b0:	ldr	r2, [r3, r2]
   111b4:	cmp	r2, #0
   111b8:	bxeq	lr
   111bc:	b	11008 <__gmon_start__@plt>
   111c0:	andeq	r5, r3, ip, asr #28
   111c4:	andeq	r0, r0, r8, lsl #2
   111c8:	ldr	r0, [pc, #24]	; 111e8 <__assert_fail@plt+0x90>
   111cc:	ldr	r3, [pc, #24]	; 111ec <__assert_fail@plt+0x94>
   111d0:	cmp	r3, r0
   111d4:	bxeq	lr
   111d8:	ldr	r3, [pc, #16]	; 111f0 <__assert_fail@plt+0x98>
   111dc:	cmp	r3, #0
   111e0:	bxeq	lr
   111e4:	bx	r3
   111e8:	andeq	r7, r4, r0, ror r1
   111ec:	andeq	r7, r4, r0, ror r1
   111f0:	andeq	r0, r0, r0
   111f4:	ldr	r0, [pc, #36]	; 11220 <__assert_fail@plt+0xc8>
   111f8:	ldr	r1, [pc, #36]	; 11224 <__assert_fail@plt+0xcc>
   111fc:	sub	r1, r1, r0
   11200:	asr	r1, r1, #2
   11204:	add	r1, r1, r1, lsr #31
   11208:	asrs	r1, r1, #1
   1120c:	bxeq	lr
   11210:	ldr	r3, [pc, #16]	; 11228 <__assert_fail@plt+0xd0>
   11214:	cmp	r3, #0
   11218:	bxeq	lr
   1121c:	bx	r3
   11220:	andeq	r7, r4, r0, ror r1
   11224:	andeq	r7, r4, r0, ror r1
   11228:	andeq	r0, r0, r0
   1122c:	push	{r4, lr}
   11230:	ldr	r4, [pc, #24]	; 11250 <__assert_fail@plt+0xf8>
   11234:	ldrb	r3, [r4]
   11238:	cmp	r3, #0
   1123c:	popne	{r4, pc}
   11240:	bl	111c8 <__assert_fail@plt+0x70>
   11244:	mov	r3, #1
   11248:	strb	r3, [r4]
   1124c:	pop	{r4, pc}
   11250:	muleq	r4, r0, r1
   11254:	b	111f4 <__assert_fail@plt+0x9c>
   11258:	str	fp, [sp, #-8]!
   1125c:	str	lr, [sp, #4]
   11260:	add	fp, sp, #4
   11264:	sub	sp, sp, #80	; 0x50
   11268:	str	r0, [fp, #-80]	; 0xffffffb0
   1126c:	movw	r2, #8860	; 0x229c
   11270:	movt	r2, #3
   11274:	sub	r3, fp, #72	; 0x48
   11278:	ldrd	r0, [r2]
   1127c:	strd	r0, [r3]
   11280:	ldrd	r0, [r2, #8]
   11284:	strd	r0, [r3, #8]
   11288:	ldrd	r0, [r2, #16]
   1128c:	strd	r0, [r3, #16]
   11290:	ldrd	r0, [r2, #24]
   11294:	strd	r0, [r3, #24]
   11298:	ldrd	r0, [r2, #32]
   1129c:	strd	r0, [r3, #32]
   112a0:	ldrd	r0, [r2, #40]	; 0x28
   112a4:	strd	r0, [r3, #40]	; 0x28
   112a8:	ldrd	r0, [r2, #48]	; 0x30
   112ac:	strd	r0, [r3, #48]	; 0x30
   112b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   112b4:	str	r3, [fp, #-8]
   112b8:	sub	r3, fp, #72	; 0x48
   112bc:	str	r3, [fp, #-12]
   112c0:	b	112d0 <__assert_fail@plt+0x178>
   112c4:	ldr	r3, [fp, #-12]
   112c8:	add	r3, r3, #8
   112cc:	str	r3, [fp, #-12]
   112d0:	ldr	r3, [fp, #-12]
   112d4:	ldr	r3, [r3]
   112d8:	cmp	r3, #0
   112dc:	beq	11300 <__assert_fail@plt+0x1a8>
   112e0:	ldr	r3, [fp, #-12]
   112e4:	ldr	r3, [r3]
   112e8:	mov	r1, r3
   112ec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   112f0:	bl	10eac <strcmp@plt>
   112f4:	mov	r3, r0
   112f8:	cmp	r3, #0
   112fc:	bne	112c4 <__assert_fail@plt+0x16c>
   11300:	ldr	r3, [fp, #-12]
   11304:	ldr	r3, [r3, #4]
   11308:	cmp	r3, #0
   1130c:	beq	1131c <__assert_fail@plt+0x1c4>
   11310:	ldr	r3, [fp, #-12]
   11314:	ldr	r3, [r3, #4]
   11318:	str	r3, [fp, #-8]
   1131c:	movw	r0, #8488	; 0x2128
   11320:	movt	r0, #3
   11324:	bl	11044 <gettext@plt>
   11328:	mov	r3, r0
   1132c:	movw	r2, #8512	; 0x2140
   11330:	movt	r2, #3
   11334:	movw	r1, #8552	; 0x2168
   11338:	movt	r1, #3
   1133c:	mov	r0, r3
   11340:	bl	10eb8 <printf@plt>
   11344:	mov	r1, #0
   11348:	mov	r0, #5
   1134c:	bl	110ec <setlocale@plt>
   11350:	str	r0, [fp, #-16]
   11354:	ldr	r3, [fp, #-16]
   11358:	cmp	r3, #0
   1135c:	beq	113a8 <__assert_fail@plt+0x250>
   11360:	mov	r2, #3
   11364:	movw	r1, #8568	; 0x2178
   11368:	movt	r1, #3
   1136c:	ldr	r0, [fp, #-16]
   11370:	bl	11134 <strncmp@plt>
   11374:	mov	r3, r0
   11378:	cmp	r3, #0
   1137c:	beq	113a8 <__assert_fail@plt+0x250>
   11380:	movw	r0, #8572	; 0x217c
   11384:	movt	r0, #3
   11388:	bl	11044 <gettext@plt>
   1138c:	mov	r2, r0
   11390:	movw	r3, #29068	; 0x718c
   11394:	movt	r3, #4
   11398:	ldr	r3, [r3]
   1139c:	mov	r1, r3
   113a0:	mov	r0, r2
   113a4:	bl	10e7c <fputs_unlocked@plt>
   113a8:	movw	r0, #8644	; 0x21c4
   113ac:	movt	r0, #3
   113b0:	bl	11044 <gettext@plt>
   113b4:	mov	r3, r0
   113b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   113bc:	movw	r1, #8512	; 0x2140
   113c0:	movt	r1, #3
   113c4:	mov	r0, r3
   113c8:	bl	10eb8 <printf@plt>
   113cc:	movw	r0, #8672	; 0x21e0
   113d0:	movt	r0, #3
   113d4:	bl	11044 <gettext@plt>
   113d8:	ldr	r2, [fp, #-8]
   113dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   113e0:	cmp	r2, r3
   113e4:	bne	113f4 <__assert_fail@plt+0x29c>
   113e8:	movw	r3, #8724	; 0x2214
   113ec:	movt	r3, #3
   113f0:	b	113fc <__assert_fail@plt+0x2a4>
   113f4:	movw	r3, #8736	; 0x2220
   113f8:	movt	r3, #3
   113fc:	mov	r2, r3
   11400:	ldr	r1, [fp, #-8]
   11404:	bl	10eb8 <printf@plt>
   11408:	nop	{0}
   1140c:	sub	sp, fp, #4
   11410:	ldr	fp, [sp]
   11414:	add	sp, sp, #4
   11418:	pop	{pc}		; (ldr pc, [sp], #4)
   1141c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11420:	strd	r6, [sp, #8]
   11424:	strd	r8, [sp, #16]
   11428:	str	fp, [sp, #24]
   1142c:	str	lr, [sp, #28]
   11430:	add	fp, sp, #28
   11434:	sub	sp, sp, #144	; 0x90
   11438:	str	r0, [fp, #-88]	; 0xffffffa8
   1143c:	strd	r2, [fp, #-100]	; 0xffffff9c
   11440:	ldrd	r2, [fp, #12]
   11444:	orrs	r3, r2, r3
   11448:	bne	1146c <__assert_fail@plt+0x314>
   1144c:	movw	r3, #22224	; 0x56d0
   11450:	movt	r3, #3
   11454:	movw	r2, #411	; 0x19b
   11458:	movw	r1, #9004	; 0x232c
   1145c:	movt	r1, #3
   11460:	movw	r0, #9020	; 0x233c
   11464:	movt	r0, #3
   11468:	bl	11158 <__assert_fail@plt>
   1146c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   11470:	orrs	r3, r2, r3
   11474:	bne	11490 <__assert_fail@plt+0x338>
   11478:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1147c:	mov	r2, #0
   11480:	mov	r3, #0
   11484:	strd	r2, [r1]
   11488:	ldrd	r2, [fp, #4]
   1148c:	b	117c8 <__assert_fail@plt+0x670>
   11490:	ldrd	r2, [fp, #12]
   11494:	strd	r2, [fp, #-36]	; 0xffffffdc
   11498:	mov	r3, #0
   1149c:	str	r3, [fp, #-40]	; 0xffffffd8
   114a0:	b	114cc <__assert_fail@plt+0x374>
   114a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   114a8:	mov	r0, #0
   114ac:	mov	r1, #0
   114b0:	lsl	r1, r3, #8
   114b4:	orr	r1, r1, r2, lsr #24
   114b8:	lsl	r0, r2, #8
   114bc:	strd	r0, [fp, #-36]	; 0xffffffdc
   114c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   114c4:	add	r3, r3, #8
   114c8:	str	r3, [fp, #-40]	; 0xffffffd8
   114cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   114d0:	mov	r2, #0
   114d4:	mov	r3, #-16777216	; 0xff000000
   114d8:	and	ip, r0, r2
   114dc:	str	ip, [fp, #-108]	; 0xffffff94
   114e0:	and	r3, r1, r3
   114e4:	str	r3, [fp, #-104]	; 0xffffff98
   114e8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   114ec:	orrs	r3, r2, r3
   114f0:	beq	114a4 <__assert_fail@plt+0x34c>
   114f4:	b	11520 <__assert_fail@plt+0x3c8>
   114f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   114fc:	adds	r1, r2, r2
   11500:	str	r1, [fp, #-132]	; 0xffffff7c
   11504:	adc	r3, r3, r3
   11508:	str	r3, [fp, #-128]	; 0xffffff80
   1150c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   11510:	strd	r2, [fp, #-36]	; 0xffffffdc
   11514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11518:	add	r3, r3, #1
   1151c:	str	r3, [fp, #-40]	; 0xffffffd8
   11520:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11524:	cmp	r2, #0
   11528:	sbcs	r3, r3, #0
   1152c:	bge	114f8 <__assert_fail@plt+0x3a0>
   11530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11534:	str	r3, [fp, #-64]	; 0xffffffc0
   11538:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1153c:	strd	r2, [fp, #-52]	; 0xffffffcc
   11540:	mov	r3, #0
   11544:	str	r3, [fp, #-56]	; 0xffffffc8
   11548:	b	11574 <__assert_fail@plt+0x41c>
   1154c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11550:	mov	r0, #0
   11554:	mov	r1, #0
   11558:	lsl	r1, r3, #8
   1155c:	orr	r1, r1, r2, lsr #24
   11560:	lsl	r0, r2, #8
   11564:	strd	r0, [fp, #-52]	; 0xffffffcc
   11568:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1156c:	add	r3, r3, #8
   11570:	str	r3, [fp, #-56]	; 0xffffffc8
   11574:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   11578:	mov	r2, #0
   1157c:	mov	r3, #-16777216	; 0xff000000
   11580:	and	ip, r0, r2
   11584:	str	ip, [fp, #-116]	; 0xffffff8c
   11588:	and	r3, r1, r3
   1158c:	str	r3, [fp, #-112]	; 0xffffff90
   11590:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   11594:	orrs	r3, r2, r3
   11598:	beq	1154c <__assert_fail@plt+0x3f4>
   1159c:	b	115c8 <__assert_fail@plt+0x470>
   115a0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   115a4:	adds	r1, r2, r2
   115a8:	str	r1, [fp, #-140]	; 0xffffff74
   115ac:	adc	r3, r3, r3
   115b0:	str	r3, [fp, #-136]	; 0xffffff78
   115b4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   115b8:	strd	r2, [fp, #-52]	; 0xffffffcc
   115bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   115c0:	add	r3, r3, #1
   115c4:	str	r3, [fp, #-56]	; 0xffffffc8
   115c8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   115cc:	cmp	r2, #0
   115d0:	sbcs	r3, r3, #0
   115d4:	bge	115a0 <__assert_fail@plt+0x448>
   115d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   115dc:	str	r3, [fp, #-68]	; 0xffffffbc
   115e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   115e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   115e8:	sub	r3, r2, r3
   115ec:	str	r3, [fp, #-72]	; 0xffffffb8
   115f0:	ldrd	r2, [fp, #12]
   115f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   115f8:	sub	ip, r1, #32
   115fc:	rsb	r0, r1, #32
   11600:	lsl	r7, r3, r1
   11604:	orr	r7, r7, r2, lsl ip
   11608:	orr	r7, r7, r2, lsr r0
   1160c:	lsl	r6, r2, r1
   11610:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11614:	rsb	r1, r3, #64	; 0x40
   11618:	ldrd	r2, [fp, #20]
   1161c:	rsb	ip, r1, #32
   11620:	sub	r0, r1, #32
   11624:	lsr	r4, r2, r1
   11628:	orr	r4, r4, r3, lsl ip
   1162c:	orr	r4, r4, r3, lsr r0
   11630:	lsr	r5, r3, r1
   11634:	orr	r3, r6, r4
   11638:	str	r3, [fp, #-148]	; 0xffffff6c
   1163c:	orr	r3, r7, r5
   11640:	str	r3, [fp, #-144]	; 0xffffff70
   11644:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   11648:	strd	r2, [fp, #12]
   1164c:	ldrd	r2, [fp, #20]
   11650:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11654:	sub	ip, r1, #32
   11658:	rsb	r0, r1, #32
   1165c:	lsl	r9, r3, r1
   11660:	orr	r9, r9, r2, lsl ip
   11664:	orr	r9, r9, r2, lsr r0
   11668:	lsl	r8, r2, r1
   1166c:	strd	r8, [fp, #20]
   11670:	mov	r3, #0
   11674:	str	r3, [fp, #-60]	; 0xffffffc4
   11678:	b	117a8 <__assert_fail@plt+0x650>
   1167c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11680:	ldrd	r2, [fp, #12]
   11684:	cmp	r1, r3
   11688:	cmpeq	r0, r2
   1168c:	bhi	116b8 <__assert_fail@plt+0x560>
   11690:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11694:	ldrd	r2, [fp, #12]
   11698:	cmp	r1, r3
   1169c:	cmpeq	r0, r2
   116a0:	bne	1173c <__assert_fail@plt+0x5e4>
   116a4:	ldrd	r0, [fp, #4]
   116a8:	ldrd	r2, [fp, #20]
   116ac:	cmp	r1, r3
   116b0:	cmpeq	r0, r2
   116b4:	bcc	1173c <__assert_fail@plt+0x5e4>
   116b8:	ldrd	r0, [fp, #4]
   116bc:	ldrd	r2, [fp, #20]
   116c0:	cmp	r1, r3
   116c4:	cmpeq	r0, r2
   116c8:	movcc	r3, #1
   116cc:	movcs	r3, #0
   116d0:	uxtb	r3, r3
   116d4:	uxtb	r2, r3
   116d8:	mov	r3, #0
   116dc:	strd	r2, [fp, #-84]	; 0xffffffac
   116e0:	ldrd	r0, [fp, #4]
   116e4:	ldrd	r2, [fp, #20]
   116e8:	subs	ip, r0, r2
   116ec:	str	ip, [fp, #-156]	; 0xffffff64
   116f0:	sbc	r3, r1, r3
   116f4:	str	r3, [fp, #-152]	; 0xffffff68
   116f8:	ldrd	r2, [fp, #-156]	; 0xffffff64
   116fc:	strd	r2, [fp, #4]
   11700:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11704:	ldrd	r2, [fp, #12]
   11708:	subs	ip, r0, r2
   1170c:	str	ip, [fp, #-124]	; 0xffffff84
   11710:	sbc	r3, r1, r3
   11714:	str	r3, [fp, #-120]	; 0xffffff88
   11718:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1171c:	ldrd	r0, [fp, #-124]	; 0xffffff84
   11720:	mov	ip, r0
   11724:	subs	ip, ip, r2
   11728:	str	ip, [fp, #-164]	; 0xffffff5c
   1172c:	sbc	r3, r1, r3
   11730:	str	r3, [fp, #-160]	; 0xffffff60
   11734:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   11738:	strd	r2, [fp, #-100]	; 0xffffff9c
   1173c:	ldrd	r2, [fp, #12]
   11740:	mov	r0, #0
   11744:	mov	r1, #0
   11748:	lsl	r1, r2, #31
   1174c:	mov	r0, #0
   11750:	ldrd	r4, [fp, #20]
   11754:	mov	r2, #0
   11758:	mov	r3, #0
   1175c:	lsr	r2, r4, #1
   11760:	orr	r2, r2, r5, lsl #31
   11764:	lsr	r3, r5, #1
   11768:	orr	ip, r0, r2
   1176c:	str	ip, [fp, #-172]	; 0xffffff54
   11770:	orr	r3, r1, r3
   11774:	str	r3, [fp, #-168]	; 0xffffff58
   11778:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1177c:	strd	r2, [fp, #20]
   11780:	ldrd	r0, [fp, #12]
   11784:	mov	r2, #0
   11788:	mov	r3, #0
   1178c:	lsr	r2, r0, #1
   11790:	orr	r2, r2, r1, lsl #31
   11794:	lsr	r3, r1, #1
   11798:	strd	r2, [fp, #12]
   1179c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   117a0:	add	r3, r3, #1
   117a4:	str	r3, [fp, #-60]	; 0xffffffc4
   117a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   117ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   117b0:	cmp	r2, r3
   117b4:	blt	1167c <__assert_fail@plt+0x524>
   117b8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   117bc:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   117c0:	strd	r2, [r1]
   117c4:	ldrd	r2, [fp, #4]
   117c8:	mov	r0, r2
   117cc:	mov	r1, r3
   117d0:	sub	sp, fp, #28
   117d4:	ldrd	r4, [sp]
   117d8:	ldrd	r6, [sp, #8]
   117dc:	ldrd	r8, [sp, #16]
   117e0:	ldr	fp, [sp, #24]
   117e4:	add	sp, sp, #28
   117e8:	pop	{pc}		; (ldr pc, [sp], #4)
   117ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   117f0:	strd	r6, [sp, #8]
   117f4:	strd	r8, [sp, #16]
   117f8:	str	fp, [sp, #24]
   117fc:	add	fp, sp, #24
   11800:	sub	sp, sp, #92	; 0x5c
   11804:	strd	r0, [fp, #-60]	; 0xffffffc4
   11808:	strd	r2, [fp, #-68]	; 0xffffffbc
   1180c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   11810:	mov	r2, #1
   11814:	mov	r3, #0
   11818:	and	r4, r0, r2
   1181c:	and	r5, r1, r3
   11820:	orrs	r3, r4, r5
   11824:	bne	11840 <__assert_fail@plt+0x6e8>
   11828:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1182c:	strd	r2, [fp, #-36]	; 0xffffffdc
   11830:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11834:	strd	r2, [fp, #-68]	; 0xffffffbc
   11838:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1183c:	strd	r2, [fp, #-60]	; 0xffffffc4
   11840:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11844:	orrs	r3, r2, r3
   11848:	bne	11858 <__assert_fail@plt+0x700>
   1184c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   11850:	strd	r2, [fp, #-76]	; 0xffffffb4
   11854:	b	119a4 <__assert_fail@plt+0x84c>
   11858:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1185c:	mov	r0, #0
   11860:	mov	r1, #0
   11864:	lsr	r0, r2, #1
   11868:	orr	r0, r0, r3, lsl #31
   1186c:	lsr	r1, r3, #1
   11870:	strd	r0, [fp, #-68]	; 0xffffffbc
   11874:	b	11894 <__assert_fail@plt+0x73c>
   11878:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1187c:	mov	r0, #0
   11880:	mov	r1, #0
   11884:	lsr	r0, r2, #1
   11888:	orr	r0, r0, r3, lsl #31
   1188c:	lsr	r1, r3, #1
   11890:	strd	r0, [fp, #-60]	; 0xffffffc4
   11894:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   11898:	mov	r2, #1
   1189c:	mov	r3, #0
   118a0:	and	ip, r0, r2
   118a4:	str	ip, [fp, #-84]	; 0xffffffac
   118a8:	and	r3, r1, r3
   118ac:	str	r3, [fp, #-80]	; 0xffffffb0
   118b0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   118b4:	orrs	r3, r2, r3
   118b8:	beq	11878 <__assert_fail@plt+0x720>
   118bc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   118c0:	mov	r0, #0
   118c4:	mov	r1, #0
   118c8:	lsr	r0, r2, #1
   118cc:	orr	r0, r0, r3, lsl #31
   118d0:	lsr	r1, r3, #1
   118d4:	strd	r0, [fp, #-60]	; 0xffffffc4
   118d8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   118dc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   118e0:	subs	ip, r0, r2
   118e4:	str	ip, [fp, #-92]	; 0xffffffa4
   118e8:	sbc	r3, r1, r3
   118ec:	str	r3, [fp, #-88]	; 0xffffffa8
   118f0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   118f4:	strd	r2, [fp, #-44]	; 0xffffffd4
   118f8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   118fc:	orrs	r3, r2, r3
   11900:	bne	11930 <__assert_fail@plt+0x7d8>
   11904:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11908:	adds	r1, r2, r2
   1190c:	str	r1, [fp, #-100]	; 0xffffff9c
   11910:	adc	r3, r3, r3
   11914:	str	r3, [fp, #-96]	; 0xffffffa0
   11918:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1191c:	adds	r1, r2, #1
   11920:	str	r1, [fp, #-76]	; 0xffffffb4
   11924:	adc	r3, r3, #0
   11928:	str	r3, [fp, #-72]	; 0xffffffb8
   1192c:	b	119a4 <__assert_fail@plt+0x84c>
   11930:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11934:	mov	r0, #0
   11938:	mov	r1, #0
   1193c:	asr	r0, r3, #31
   11940:	asr	r1, r3, #31
   11944:	strd	r0, [fp, #-52]	; 0xffffffcc
   11948:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1194c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11950:	and	r8, r0, r2
   11954:	and	r9, r1, r3
   11958:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1195c:	adds	r1, r2, r8
   11960:	str	r1, [fp, #-108]	; 0xffffff94
   11964:	adc	r3, r3, r9
   11968:	str	r3, [fp, #-104]	; 0xffffff98
   1196c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   11970:	strd	r2, [fp, #-68]	; 0xffffffbc
   11974:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   11978:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1197c:	eor	r6, r0, r2
   11980:	eor	r7, r1, r3
   11984:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11988:	subs	r1, r6, r2
   1198c:	str	r1, [fp, #-116]	; 0xffffff8c
   11990:	sbc	r3, r7, r3
   11994:	str	r3, [fp, #-112]	; 0xffffff90
   11998:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1199c:	strd	r2, [fp, #-60]	; 0xffffffc4
   119a0:	b	11874 <__assert_fail@plt+0x71c>
   119a4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   119a8:	mov	r0, r2
   119ac:	mov	r1, r3
   119b0:	sub	sp, fp, #24
   119b4:	ldrd	r4, [sp]
   119b8:	ldrd	r6, [sp, #8]
   119bc:	ldrd	r8, [sp, #16]
   119c0:	ldr	fp, [sp, #24]
   119c4:	add	sp, sp, #28
   119c8:	bx	lr
   119cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   119d0:	strd	r6, [sp, #8]
   119d4:	strd	r8, [sp, #16]
   119d8:	str	fp, [sp, #24]
   119dc:	str	lr, [sp, #28]
   119e0:	add	fp, sp, #28
   119e4:	sub	sp, sp, #128	; 0x80
   119e8:	str	r0, [fp, #-48]	; 0xffffffd0
   119ec:	strd	r2, [fp, #-60]	; 0xffffffc4
   119f0:	ldrd	r0, [fp, #20]
   119f4:	mov	r2, #1
   119f8:	mov	r3, #0
   119fc:	and	r4, r0, r2
   11a00:	and	r5, r1, r3
   11a04:	orrs	r3, r4, r5
   11a08:	bne	11a2c <__assert_fail@plt+0x8d4>
   11a0c:	movw	r3, #22232	; 0x56d8
   11a10:	movt	r3, #3
   11a14:	mov	r2, #476	; 0x1dc
   11a18:	movw	r1, #9004	; 0x232c
   11a1c:	movt	r1, #3
   11a20:	movw	r0, #9028	; 0x2344
   11a24:	movt	r0, #3
   11a28:	bl	11158 <__assert_fail@plt>
   11a2c:	ldrd	r0, [fp, #4]
   11a30:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11a34:	orr	r6, r0, r2
   11a38:	orr	r7, r1, r3
   11a3c:	orrs	r3, r6, r7
   11a40:	bne	11ab8 <__assert_fail@plt+0x960>
   11a44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a48:	ldrd	r2, [fp, #12]
   11a4c:	strd	r2, [r1]
   11a50:	ldrd	r2, [fp, #20]
   11a54:	b	11dc8 <__assert_fail@plt+0xc70>
   11a58:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11a5c:	mov	r4, #0
   11a60:	mov	r5, #0
   11a64:	lsl	r5, r2, #31
   11a68:	mov	r4, #0
   11a6c:	ldrd	r2, [fp, #4]
   11a70:	mov	r0, #0
   11a74:	mov	r1, #0
   11a78:	lsr	r0, r2, #1
   11a7c:	orr	r0, r0, r3, lsl #31
   11a80:	lsr	r1, r3, #1
   11a84:	orr	r3, r4, r0
   11a88:	str	r3, [fp, #-108]	; 0xffffff94
   11a8c:	orr	r3, r5, r1
   11a90:	str	r3, [fp, #-104]	; 0xffffff98
   11a94:	ldrd	r2, [fp, #-108]	; 0xffffff94
   11a98:	strd	r2, [fp, #4]
   11a9c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11aa0:	mov	r0, #0
   11aa4:	mov	r1, #0
   11aa8:	lsr	r0, r2, #1
   11aac:	orr	r0, r0, r3, lsl #31
   11ab0:	lsr	r1, r3, #1
   11ab4:	strd	r0, [fp, #-60]	; 0xffffffc4
   11ab8:	ldrd	r0, [fp, #4]
   11abc:	mov	r2, #1
   11ac0:	mov	r3, #0
   11ac4:	and	r8, r0, r2
   11ac8:	and	r9, r1, r3
   11acc:	orrs	r3, r8, r9
   11ad0:	beq	11a58 <__assert_fail@plt+0x900>
   11ad4:	ldrd	r0, [fp, #12]
   11ad8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11adc:	orr	ip, r0, r2
   11ae0:	str	ip, [fp, #-68]	; 0xffffffbc
   11ae4:	orr	r3, r1, r3
   11ae8:	str	r3, [fp, #-64]	; 0xffffffc0
   11aec:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   11af0:	orrs	r3, r2, r3
   11af4:	bne	11b20 <__assert_fail@plt+0x9c8>
   11af8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11afc:	mov	r2, #0
   11b00:	mov	r3, #0
   11b04:	strd	r2, [r1]
   11b08:	ldrd	r2, [fp, #4]
   11b0c:	ldrd	r0, [fp, #20]
   11b10:	bl	117ec <__assert_fail@plt+0x694>
   11b14:	mov	r2, r0
   11b18:	mov	r3, r1
   11b1c:	b	11dc8 <__assert_fail@plt+0xc70>
   11b20:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   11b24:	ldrd	r2, [fp, #12]
   11b28:	cmp	r1, r3
   11b2c:	cmpeq	r0, r2
   11b30:	bhi	11b5c <__assert_fail@plt+0xa04>
   11b34:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   11b38:	ldrd	r2, [fp, #12]
   11b3c:	cmp	r1, r3
   11b40:	cmpeq	r0, r2
   11b44:	bne	11c6c <__assert_fail@plt+0xb14>
   11b48:	ldrd	r0, [fp, #4]
   11b4c:	ldrd	r2, [fp, #20]
   11b50:	cmp	r1, r3
   11b54:	cmpeq	r0, r2
   11b58:	bls	11c6c <__assert_fail@plt+0xb14>
   11b5c:	ldrd	r0, [fp, #4]
   11b60:	ldrd	r2, [fp, #20]
   11b64:	cmp	r1, r3
   11b68:	cmpeq	r0, r2
   11b6c:	movcc	r3, #1
   11b70:	movcs	r3, #0
   11b74:	uxtb	r3, r3
   11b78:	uxtb	r2, r3
   11b7c:	mov	r3, #0
   11b80:	strd	r2, [fp, #-44]	; 0xffffffd4
   11b84:	ldrd	r0, [fp, #4]
   11b88:	ldrd	r2, [fp, #20]
   11b8c:	subs	ip, r0, r2
   11b90:	str	ip, [fp, #-116]	; 0xffffff8c
   11b94:	sbc	r3, r1, r3
   11b98:	str	r3, [fp, #-112]	; 0xffffff90
   11b9c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   11ba0:	strd	r2, [fp, #4]
   11ba4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   11ba8:	ldrd	r2, [fp, #12]
   11bac:	subs	ip, r0, r2
   11bb0:	str	ip, [fp, #-76]	; 0xffffffb4
   11bb4:	sbc	r3, r1, r3
   11bb8:	str	r3, [fp, #-72]	; 0xffffffb8
   11bbc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11bc0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   11bc4:	mov	ip, r0
   11bc8:	subs	ip, ip, r2
   11bcc:	str	ip, [fp, #-124]	; 0xffffff84
   11bd0:	sbc	r3, r1, r3
   11bd4:	str	r3, [fp, #-120]	; 0xffffff88
   11bd8:	ldrd	r2, [fp, #-124]	; 0xffffff84
   11bdc:	strd	r2, [fp, #-60]	; 0xffffffc4
   11be0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11be4:	mov	r4, #0
   11be8:	mov	r5, #0
   11bec:	lsl	r5, r2, #31
   11bf0:	mov	r4, #0
   11bf4:	ldrd	r2, [fp, #4]
   11bf8:	mov	r0, #0
   11bfc:	mov	r1, #0
   11c00:	lsr	r0, r2, #1
   11c04:	orr	r0, r0, r3, lsl #31
   11c08:	lsr	r1, r3, #1
   11c0c:	orr	r3, r4, r0
   11c10:	str	r3, [fp, #-132]	; 0xffffff7c
   11c14:	orr	r3, r5, r1
   11c18:	str	r3, [fp, #-128]	; 0xffffff80
   11c1c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   11c20:	strd	r2, [fp, #4]
   11c24:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11c28:	mov	r0, #0
   11c2c:	mov	r1, #0
   11c30:	lsr	r0, r2, #1
   11c34:	orr	r0, r0, r3, lsl #31
   11c38:	lsr	r1, r3, #1
   11c3c:	strd	r0, [fp, #-60]	; 0xffffffc4
   11c40:	ldrd	r0, [fp, #4]
   11c44:	mov	r2, #1
   11c48:	mov	r3, #0
   11c4c:	and	ip, r0, r2
   11c50:	str	ip, [fp, #-84]	; 0xffffffac
   11c54:	and	r3, r1, r3
   11c58:	str	r3, [fp, #-80]	; 0xffffffb0
   11c5c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   11c60:	orrs	r3, r2, r3
   11c64:	beq	11be0 <__assert_fail@plt+0xa88>
   11c68:	b	11db4 <__assert_fail@plt+0xc5c>
   11c6c:	ldrd	r0, [fp, #12]
   11c70:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11c74:	cmp	r1, r3
   11c78:	cmpeq	r0, r2
   11c7c:	bhi	11ca8 <__assert_fail@plt+0xb50>
   11c80:	ldrd	r0, [fp, #12]
   11c84:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11c88:	cmp	r1, r3
   11c8c:	cmpeq	r0, r2
   11c90:	bne	11db8 <__assert_fail@plt+0xc60>
   11c94:	ldrd	r0, [fp, #20]
   11c98:	ldrd	r2, [fp, #4]
   11c9c:	cmp	r1, r3
   11ca0:	cmpeq	r0, r2
   11ca4:	bls	11db8 <__assert_fail@plt+0xc60>
   11ca8:	ldrd	r0, [fp, #20]
   11cac:	ldrd	r2, [fp, #4]
   11cb0:	cmp	r1, r3
   11cb4:	cmpeq	r0, r2
   11cb8:	movcc	r3, #1
   11cbc:	movcs	r3, #0
   11cc0:	uxtb	r3, r3
   11cc4:	uxtb	r2, r3
   11cc8:	mov	r3, #0
   11ccc:	strd	r2, [fp, #-36]	; 0xffffffdc
   11cd0:	ldrd	r0, [fp, #20]
   11cd4:	ldrd	r2, [fp, #4]
   11cd8:	subs	ip, r0, r2
   11cdc:	str	ip, [fp, #-140]	; 0xffffff74
   11ce0:	sbc	r3, r1, r3
   11ce4:	str	r3, [fp, #-136]	; 0xffffff78
   11ce8:	ldrd	r2, [fp, #-140]	; 0xffffff74
   11cec:	strd	r2, [fp, #20]
   11cf0:	ldrd	r0, [fp, #12]
   11cf4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11cf8:	subs	ip, r0, r2
   11cfc:	str	ip, [fp, #-92]	; 0xffffffa4
   11d00:	sbc	r3, r1, r3
   11d04:	str	r3, [fp, #-88]	; 0xffffffa8
   11d08:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11d0c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   11d10:	mov	ip, r0
   11d14:	subs	ip, ip, r2
   11d18:	str	ip, [fp, #-148]	; 0xffffff6c
   11d1c:	sbc	r3, r1, r3
   11d20:	str	r3, [fp, #-144]	; 0xffffff70
   11d24:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   11d28:	strd	r2, [fp, #12]
   11d2c:	ldrd	r2, [fp, #12]
   11d30:	mov	r4, #0
   11d34:	mov	r5, #0
   11d38:	lsl	r5, r2, #31
   11d3c:	mov	r4, #0
   11d40:	ldrd	r2, [fp, #20]
   11d44:	mov	r0, #0
   11d48:	mov	r1, #0
   11d4c:	lsr	r0, r2, #1
   11d50:	orr	r0, r0, r3, lsl #31
   11d54:	lsr	r1, r3, #1
   11d58:	orr	r3, r4, r0
   11d5c:	str	r3, [fp, #-156]	; 0xffffff64
   11d60:	orr	r3, r5, r1
   11d64:	str	r3, [fp, #-152]	; 0xffffff68
   11d68:	ldrd	r2, [fp, #-156]	; 0xffffff64
   11d6c:	strd	r2, [fp, #20]
   11d70:	ldrd	r2, [fp, #12]
   11d74:	mov	r0, #0
   11d78:	mov	r1, #0
   11d7c:	lsr	r0, r2, #1
   11d80:	orr	r0, r0, r3, lsl #31
   11d84:	lsr	r1, r3, #1
   11d88:	strd	r0, [fp, #12]
   11d8c:	ldrd	r0, [fp, #20]
   11d90:	mov	r2, #1
   11d94:	mov	r3, #0
   11d98:	and	ip, r0, r2
   11d9c:	str	ip, [fp, #-100]	; 0xffffff9c
   11da0:	and	r3, r1, r3
   11da4:	str	r3, [fp, #-96]	; 0xffffffa0
   11da8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   11dac:	orrs	r3, r2, r3
   11db0:	beq	11d2c <__assert_fail@plt+0xbd4>
   11db4:	b	11ad4 <__assert_fail@plt+0x97c>
   11db8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11dbc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11dc0:	strd	r2, [r1]
   11dc4:	ldrd	r2, [fp, #4]
   11dc8:	mov	r0, r2
   11dcc:	mov	r1, r3
   11dd0:	sub	sp, fp, #28
   11dd4:	ldrd	r4, [sp]
   11dd8:	ldrd	r6, [sp, #8]
   11ddc:	ldrd	r8, [sp, #16]
   11de0:	ldr	fp, [sp, #24]
   11de4:	add	sp, sp, #28
   11de8:	pop	{pc}		; (ldr pc, [sp], #4)
   11dec:	push	{fp}		; (str fp, [sp, #-4]!)
   11df0:	add	fp, sp, #0
   11df4:	sub	sp, sp, #44	; 0x2c
   11df8:	str	r0, [fp, #-32]	; 0xffffffe0
   11dfc:	strd	r2, [fp, #-44]	; 0xffffffd4
   11e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e04:	ldrb	r3, [r3, #250]	; 0xfa
   11e08:	str	r3, [fp, #-16]
   11e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e10:	add	r3, r3, #16
   11e14:	str	r3, [fp, #-20]	; 0xffffffec
   11e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e1c:	add	r3, r3, #224	; 0xe0
   11e20:	str	r3, [fp, #-24]	; 0xffffffe8
   11e24:	ldr	r3, [fp, #-16]
   11e28:	sub	r3, r3, #1
   11e2c:	str	r3, [fp, #-8]
   11e30:	b	11e64 <__assert_fail@plt+0xd0c>
   11e34:	ldr	r3, [fp, #-8]
   11e38:	lsl	r3, r3, #3
   11e3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11e40:	add	r3, r2, r3
   11e44:	ldrd	r2, [r3]
   11e48:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   11e4c:	cmp	r1, r3
   11e50:	cmpeq	r0, r2
   11e54:	bcs	11e74 <__assert_fail@plt+0xd1c>
   11e58:	ldr	r3, [fp, #-8]
   11e5c:	sub	r3, r3, #1
   11e60:	str	r3, [fp, #-8]
   11e64:	ldr	r3, [fp, #-8]
   11e68:	cmp	r3, #0
   11e6c:	bge	11e34 <__assert_fail@plt+0xcdc>
   11e70:	b	11e78 <__assert_fail@plt+0xd20>
   11e74:	nop	{0}
   11e78:	ldr	r3, [fp, #-8]
   11e7c:	cmp	r3, #0
   11e80:	blt	11ea8 <__assert_fail@plt+0xd50>
   11e84:	ldr	r3, [fp, #-8]
   11e88:	lsl	r3, r3, #3
   11e8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11e90:	add	r3, r2, r3
   11e94:	ldrd	r2, [r3]
   11e98:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   11e9c:	cmp	r1, r3
   11ea0:	cmpeq	r0, r2
   11ea4:	beq	11f78 <__assert_fail@plt+0xe20>
   11ea8:	ldr	r3, [fp, #-16]
   11eac:	sub	r3, r3, #1
   11eb0:	str	r3, [fp, #-12]
   11eb4:	b	11f14 <__assert_fail@plt+0xdbc>
   11eb8:	ldr	r3, [fp, #-12]
   11ebc:	lsl	r3, r3, #3
   11ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ec4:	add	r3, r2, r3
   11ec8:	ldr	r2, [fp, #-12]
   11ecc:	add	r2, r2, #1
   11ed0:	lsl	r2, r2, #3
   11ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ed8:	add	r1, r1, r2
   11edc:	ldrd	r2, [r3]
   11ee0:	strd	r2, [r1]
   11ee4:	ldr	r3, [fp, #-12]
   11ee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11eec:	add	r2, r2, r3
   11ef0:	ldr	r3, [fp, #-12]
   11ef4:	add	r3, r3, #1
   11ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11efc:	add	r3, r1, r3
   11f00:	ldrb	r2, [r2]
   11f04:	strb	r2, [r3]
   11f08:	ldr	r3, [fp, #-12]
   11f0c:	sub	r3, r3, #1
   11f10:	str	r3, [fp, #-12]
   11f14:	ldr	r2, [fp, #-12]
   11f18:	ldr	r3, [fp, #-8]
   11f1c:	cmp	r2, r3
   11f20:	bgt	11eb8 <__assert_fail@plt+0xd60>
   11f24:	ldr	r3, [fp, #-8]
   11f28:	add	r3, r3, #1
   11f2c:	lsl	r3, r3, #3
   11f30:	ldr	r2, [fp, #-20]	; 0xffffffec
   11f34:	add	r1, r2, r3
   11f38:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11f3c:	strd	r2, [r1]
   11f40:	ldr	r3, [fp, #-8]
   11f44:	add	r3, r3, #1
   11f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f4c:	add	r3, r2, r3
   11f50:	ldr	r2, [fp, #4]
   11f54:	uxtb	r2, r2
   11f58:	strb	r2, [r3]
   11f5c:	ldr	r3, [fp, #-16]
   11f60:	uxtb	r3, r3
   11f64:	add	r3, r3, #1
   11f68:	uxtb	r2, r3
   11f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f70:	strb	r2, [r3, #250]	; 0xfa
   11f74:	b	11fa8 <__assert_fail@plt+0xe50>
   11f78:	ldr	r3, [fp, #-8]
   11f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f80:	add	r3, r2, r3
   11f84:	ldrb	r1, [r3]
   11f88:	ldr	r3, [fp, #4]
   11f8c:	uxtb	r2, r3
   11f90:	ldr	r3, [fp, #-8]
   11f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f98:	add	r3, r0, r3
   11f9c:	add	r2, r1, r2
   11fa0:	uxtb	r2, r2
   11fa4:	strb	r2, [r3]
   11fa8:	nop	{0}
   11fac:	add	sp, fp, #0
   11fb0:	pop	{fp}		; (ldr fp, [sp], #4)
   11fb4:	bx	lr
   11fb8:	str	fp, [sp, #-8]!
   11fbc:	str	lr, [sp, #4]
   11fc0:	add	fp, sp, #4
   11fc4:	sub	sp, sp, #24
   11fc8:	str	r0, [fp, #-8]
   11fcc:	strd	r2, [fp, #-20]	; 0xffffffec
   11fd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11fd4:	orrs	r3, r2, r3
   11fd8:	beq	12028 <__assert_fail@plt+0xed0>
   11fdc:	ldr	r3, [fp, #-8]
   11fe0:	ldrd	r2, [r3, #8]
   11fe4:	orrs	r3, r2, r3
   11fe8:	beq	1200c <__assert_fail@plt+0xeb4>
   11fec:	movw	r3, #22244	; 0x56e4
   11ff0:	movt	r3, #3
   11ff4:	movw	r2, #558	; 0x22e
   11ff8:	movw	r1, #9004	; 0x232c
   11ffc:	movt	r1, #3
   12000:	movw	r0, #9036	; 0x234c
   12004:	movt	r0, #3
   12008:	bl	11158 <__assert_fail@plt>
   1200c:	ldr	r1, [fp, #-8]
   12010:	ldrd	r2, [fp, #4]
   12014:	strd	r2, [r1]
   12018:	ldr	r1, [fp, #-8]
   1201c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12020:	strd	r2, [r1, #8]
   12024:	b	1203c <__assert_fail@plt+0xee4>
   12028:	mov	r3, #1
   1202c:	str	r3, [sp]
   12030:	ldrd	r2, [fp, #4]
   12034:	ldr	r0, [fp, #-8]
   12038:	bl	11dec <__assert_fail@plt+0xc94>
   1203c:	nop	{0}
   12040:	sub	sp, fp, #4
   12044:	ldr	fp, [sp]
   12048:	add	sp, sp, #4
   1204c:	pop	{pc}		; (ldr pc, [sp], #4)
   12050:	push	{r0, r1, r2, r3}
   12054:	str	fp, [sp, #-8]!
   12058:	str	lr, [sp, #4]
   1205c:	add	fp, sp, #4
   12060:	sub	sp, sp, #8
   12064:	add	r3, fp, #8
   12068:	str	r3, [fp, #-12]
   1206c:	b	1207c <__assert_fail@plt+0xf24>
   12070:	ldr	r3, [fp, #4]
   12074:	ldr	r0, [fp, #-8]
   12078:	blx	r3
   1207c:	ldr	r3, [fp, #-12]
   12080:	add	r2, r3, #4
   12084:	str	r2, [fp, #-12]
   12088:	ldr	r3, [r3]
   1208c:	str	r3, [fp, #-8]
   12090:	ldr	r3, [fp, #-8]
   12094:	cmp	r3, #0
   12098:	bne	12070 <__assert_fail@plt+0xf18>
   1209c:	nop	{0}
   120a0:	sub	sp, fp, #4
   120a4:	ldr	fp, [sp]
   120a8:	ldr	lr, [sp, #4]
   120ac:	add	sp, sp, #8
   120b0:	add	sp, sp, #16
   120b4:	bx	lr
   120b8:	push	{fp}		; (str fp, [sp, #-4]!)
   120bc:	add	fp, sp, #0
   120c0:	sub	sp, sp, #12
   120c4:	str	r0, [fp, #-8]
   120c8:	ldr	r3, [fp, #-8]
   120cc:	mov	r2, #0
   120d0:	str	r2, [r3]
   120d4:	ldr	r3, [fp, #-8]
   120d8:	mov	r2, #0
   120dc:	str	r2, [r3, #4]
   120e0:	ldr	r3, [fp, #-8]
   120e4:	mov	r2, #0
   120e8:	str	r2, [r3, #8]
   120ec:	nop	{0}
   120f0:	add	sp, fp, #0
   120f4:	pop	{fp}		; (ldr fp, [sp], #4)
   120f8:	bx	lr
   120fc:	str	fp, [sp, #-8]!
   12100:	str	lr, [sp, #4]
   12104:	add	fp, sp, #4
   12108:	sub	sp, sp, #16
   1210c:	str	r0, [fp, #-16]
   12110:	mov	r3, #0
   12114:	str	r3, [fp, #-8]
   12118:	b	12150 <__assert_fail@plt+0xff8>
   1211c:	ldr	r3, [fp, #-16]
   12120:	ldr	r1, [r3]
   12124:	ldr	r2, [fp, #-8]
   12128:	mov	r3, r2
   1212c:	lsl	r3, r3, #1
   12130:	add	r3, r3, r2
   12134:	lsl	r3, r3, #2
   12138:	add	r3, r1, r3
   1213c:	mov	r0, r3
   12140:	bl	20db0 <__assert_fail@plt+0xfc58>
   12144:	ldr	r3, [fp, #-8]
   12148:	add	r3, r3, #1
   1214c:	str	r3, [fp, #-8]
   12150:	ldr	r3, [fp, #-16]
   12154:	ldr	r3, [r3, #8]
   12158:	ldr	r2, [fp, #-8]
   1215c:	cmp	r2, r3
   12160:	bcc	1211c <__assert_fail@plt+0xfc4>
   12164:	ldr	r3, [fp, #-16]
   12168:	ldr	r3, [r3]
   1216c:	mov	r0, r3
   12170:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   12174:	ldr	r3, [fp, #-16]
   12178:	ldr	r3, [r3, #4]
   1217c:	mov	r0, r3
   12180:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   12184:	nop	{0}
   12188:	sub	sp, fp, #4
   1218c:	ldr	fp, [sp]
   12190:	add	sp, sp, #4
   12194:	pop	{pc}		; (ldr pc, [sp], #4)
   12198:	str	fp, [sp, #-8]!
   1219c:	str	lr, [sp, #4]
   121a0:	add	fp, sp, #4
   121a4:	sub	sp, sp, #32
   121a8:	str	r0, [fp, #-32]	; 0xffffffe0
   121ac:	str	r1, [fp, #-36]	; 0xffffffdc
   121b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121b4:	ldr	r3, [r3, #8]
   121b8:	str	r3, [fp, #-16]
   121bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121c0:	ldr	r3, [r3]
   121c4:	str	r3, [fp, #-20]	; 0xffffffec
   121c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121cc:	ldr	r3, [r3, #4]
   121d0:	str	r3, [fp, #-24]	; 0xffffffe8
   121d4:	ldr	r3, [fp, #-16]
   121d8:	sub	r3, r3, #1
   121dc:	str	r3, [fp, #-8]
   121e0:	b	12228 <__assert_fail@plt+0x10d0>
   121e4:	ldr	r2, [fp, #-8]
   121e8:	mov	r3, r2
   121ec:	lsl	r3, r3, #1
   121f0:	add	r3, r3, r2
   121f4:	lsl	r3, r3, #2
   121f8:	mov	r2, r3
   121fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12200:	add	r3, r3, r2
   12204:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12208:	mov	r0, r3
   1220c:	bl	22054 <__assert_fail@plt+0x10efc>
   12210:	mov	r3, r0
   12214:	cmp	r3, #0
   12218:	ble	12238 <__assert_fail@plt+0x10e0>
   1221c:	ldr	r3, [fp, #-8]
   12220:	sub	r3, r3, #1
   12224:	str	r3, [fp, #-8]
   12228:	ldr	r3, [fp, #-8]
   1222c:	cmp	r3, #0
   12230:	bge	121e4 <__assert_fail@plt+0x108c>
   12234:	b	1223c <__assert_fail@plt+0x10e4>
   12238:	nop	{0}
   1223c:	ldr	r3, [fp, #-8]
   12240:	cmp	r3, #0
   12244:	blt	12280 <__assert_fail@plt+0x1128>
   12248:	ldr	r2, [fp, #-8]
   1224c:	mov	r3, r2
   12250:	lsl	r3, r3, #1
   12254:	add	r3, r3, r2
   12258:	lsl	r3, r3, #2
   1225c:	mov	r2, r3
   12260:	ldr	r3, [fp, #-20]	; 0xffffffec
   12264:	add	r3, r3, r2
   12268:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1226c:	mov	r0, r3
   12270:	bl	22054 <__assert_fail@plt+0x10efc>
   12274:	mov	r3, r0
   12278:	cmp	r3, #0
   1227c:	beq	12408 <__assert_fail@plt+0x12b0>
   12280:	ldr	r3, [fp, #-16]
   12284:	add	r2, r3, #1
   12288:	mov	r3, r2
   1228c:	lsl	r3, r3, #1
   12290:	add	r3, r3, r2
   12294:	lsl	r3, r3, #2
   12298:	mov	r1, r3
   1229c:	ldr	r0, [fp, #-20]	; 0xffffffec
   122a0:	bl	2df14 <__assert_fail@plt+0x1cdbc>
   122a4:	str	r0, [fp, #-20]	; 0xffffffec
   122a8:	ldr	r3, [fp, #-16]
   122ac:	add	r3, r3, #1
   122b0:	lsl	r3, r3, #2
   122b4:	mov	r1, r3
   122b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122bc:	bl	2df14 <__assert_fail@plt+0x1cdbc>
   122c0:	str	r0, [fp, #-24]	; 0xffffffe8
   122c4:	ldr	r2, [fp, #-16]
   122c8:	mov	r3, r2
   122cc:	lsl	r3, r3, #1
   122d0:	add	r3, r3, r2
   122d4:	lsl	r3, r3, #2
   122d8:	mov	r2, r3
   122dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   122e0:	add	r3, r3, r2
   122e4:	mov	r0, r3
   122e8:	bl	20cdc <__assert_fail@plt+0xfb84>
   122ec:	ldr	r3, [fp, #-16]
   122f0:	sub	r3, r3, #1
   122f4:	str	r3, [fp, #-12]
   122f8:	b	12380 <__assert_fail@plt+0x1228>
   122fc:	ldr	r3, [fp, #-12]
   12300:	add	r2, r3, #1
   12304:	mov	r3, r2
   12308:	lsl	r3, r3, #1
   1230c:	add	r3, r3, r2
   12310:	lsl	r3, r3, #2
   12314:	mov	r2, r3
   12318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1231c:	add	r0, r3, r2
   12320:	ldr	r2, [fp, #-12]
   12324:	mov	r3, r2
   12328:	lsl	r3, r3, #1
   1232c:	add	r3, r3, r2
   12330:	lsl	r3, r3, #2
   12334:	mov	r2, r3
   12338:	ldr	r3, [fp, #-20]	; 0xffffffec
   1233c:	add	r3, r3, r2
   12340:	mov	r1, r3
   12344:	bl	20ff0 <__assert_fail@plt+0xfe98>
   12348:	ldr	r3, [fp, #-12]
   1234c:	lsl	r3, r3, #2
   12350:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12354:	add	r2, r2, r3
   12358:	ldr	r3, [fp, #-12]
   1235c:	add	r3, r3, #1
   12360:	lsl	r3, r3, #2
   12364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12368:	add	r3, r1, r3
   1236c:	ldr	r2, [r2]
   12370:	str	r2, [r3]
   12374:	ldr	r3, [fp, #-12]
   12378:	sub	r3, r3, #1
   1237c:	str	r3, [fp, #-12]
   12380:	ldr	r2, [fp, #-12]
   12384:	ldr	r3, [fp, #-8]
   12388:	cmp	r2, r3
   1238c:	bgt	122fc <__assert_fail@plt+0x11a4>
   12390:	ldr	r3, [fp, #-8]
   12394:	add	r2, r3, #1
   12398:	mov	r3, r2
   1239c:	lsl	r3, r3, #1
   123a0:	add	r3, r3, r2
   123a4:	lsl	r3, r3, #2
   123a8:	mov	r2, r3
   123ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   123b0:	add	r3, r3, r2
   123b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123b8:	mov	r0, r3
   123bc:	bl	20ff0 <__assert_fail@plt+0xfe98>
   123c0:	ldr	r3, [fp, #-8]
   123c4:	add	r3, r3, #1
   123c8:	lsl	r3, r3, #2
   123cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   123d0:	add	r3, r2, r3
   123d4:	mov	r2, #1
   123d8:	str	r2, [r3]
   123dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   123e4:	str	r2, [r3]
   123e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   123f0:	str	r2, [r3, #4]
   123f4:	ldr	r3, [fp, #-16]
   123f8:	add	r2, r3, #1
   123fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12400:	str	r2, [r3, #8]
   12404:	b	12434 <__assert_fail@plt+0x12dc>
   12408:	ldr	r3, [fp, #-8]
   1240c:	lsl	r3, r3, #2
   12410:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12414:	add	r3, r2, r3
   12418:	ldr	r2, [r3]
   1241c:	ldr	r3, [fp, #-8]
   12420:	lsl	r3, r3, #2
   12424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12428:	add	r3, r1, r3
   1242c:	add	r2, r2, #1
   12430:	str	r2, [r3]
   12434:	nop	{0}
   12438:	sub	sp, fp, #4
   1243c:	ldr	fp, [sp]
   12440:	add	sp, sp, #4
   12444:	pop	{pc}		; (ldr pc, [sp], #4)
   12448:	str	fp, [sp, #-8]!
   1244c:	str	lr, [sp, #4]
   12450:	add	fp, sp, #4
   12454:	sub	sp, sp, #24
   12458:	str	r0, [fp, #-24]	; 0xffffffe8
   1245c:	str	r1, [fp, #-28]	; 0xffffffe4
   12460:	sub	r3, fp, #16
   12464:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12468:	mov	r0, r3
   1246c:	bl	210dc <__assert_fail@plt+0xff84>
   12470:	sub	r3, fp, #16
   12474:	mov	r1, r3
   12478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1247c:	bl	12198 <__assert_fail@plt+0x1040>
   12480:	sub	r3, fp, #16
   12484:	mov	r0, r3
   12488:	bl	20db0 <__assert_fail@plt+0xfc58>
   1248c:	nop	{0}
   12490:	sub	sp, fp, #4
   12494:	ldr	fp, [sp]
   12498:	add	sp, sp, #4
   1249c:	pop	{pc}		; (ldr pc, [sp], #4)
   124a0:	strd	r4, [sp, #-16]!
   124a4:	str	fp, [sp, #8]
   124a8:	str	lr, [sp, #12]
   124ac:	add	fp, sp, #12
   124b0:	sub	sp, sp, #32
   124b4:	str	r0, [fp, #-24]	; 0xffffffe8
   124b8:	strd	r2, [fp, #-36]	; 0xffffffdc
   124bc:	mov	r3, #0
   124c0:	str	r3, [fp, #-16]
   124c4:	b	12504 <__assert_fail@plt+0x13ac>
   124c8:	ldr	r2, [fp, #4]
   124cc:	ldr	r3, [fp, #-16]
   124d0:	add	r2, r2, r3
   124d4:	movw	r3, #9060	; 0x2364
   124d8:	movt	r3, #3
   124dc:	ldrb	r3, [r3, r2]
   124e0:	uxtb	r2, r3
   124e4:	mov	r3, #0
   124e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   124ec:	adds	r4, r0, r2
   124f0:	adc	r5, r1, r3
   124f4:	strd	r4, [fp, #-36]	; 0xffffffdc
   124f8:	ldr	r3, [fp, #-16]
   124fc:	add	r3, r3, #1
   12500:	str	r3, [fp, #-16]
   12504:	ldr	r2, [fp, #-16]
   12508:	ldr	r3, [fp, #8]
   1250c:	cmp	r2, r3
   12510:	bcc	124c8 <__assert_fail@plt+0x1370>
   12514:	mov	r3, #1
   12518:	str	r3, [sp]
   1251c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12524:	bl	11dec <__assert_fail@plt+0xc94>
   12528:	nop	{0}
   1252c:	sub	sp, fp, #12
   12530:	ldrd	r4, [sp]
   12534:	ldr	fp, [sp, #8]
   12538:	add	sp, sp, #12
   1253c:	pop	{pc}		; (ldr pc, [sp], #4)
   12540:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12544:	strd	r6, [sp, #8]
   12548:	strd	r8, [sp, #16]
   1254c:	str	fp, [sp, #24]
   12550:	str	lr, [sp, #28]
   12554:	add	fp, sp, #28
   12558:	sub	sp, sp, #304	; 0x130
   1255c:	str	r0, [fp, #-200]	; 0xffffff38
   12560:	strd	r2, [fp, #-212]	; 0xffffff2c
   12564:	ldrd	r0, [fp, #4]
   12568:	mov	r2, #1
   1256c:	mov	r3, #0
   12570:	and	r4, r0, r2
   12574:	and	r5, r1, r3
   12578:	orrs	r3, r4, r5
   1257c:	bne	1277c <__assert_fail@plt+0x1624>
   12580:	ldrd	r2, [fp, #4]
   12584:	orrs	r3, r2, r3
   12588:	bne	12638 <__assert_fail@plt+0x14e0>
   1258c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12590:	strd	r2, [fp, #-44]	; 0xffffffd4
   12594:	mov	r3, #0
   12598:	str	r3, [fp, #-48]	; 0xffffffd0
   1259c:	b	125c8 <__assert_fail@plt+0x1470>
   125a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   125a4:	mov	r0, #0
   125a8:	mov	r1, #0
   125ac:	lsr	r0, r2, #1
   125b0:	orr	r0, r0, r3, lsl #31
   125b4:	lsr	r1, r3, #1
   125b8:	strd	r0, [fp, #-44]	; 0xffffffd4
   125bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   125c0:	add	r3, r3, #1
   125c4:	str	r3, [fp, #-48]	; 0xffffffd0
   125c8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   125cc:	mov	r2, #1
   125d0:	mov	r3, #0
   125d4:	and	ip, r0, r2
   125d8:	str	ip, [fp, #-236]	; 0xffffff14
   125dc:	and	r3, r1, r3
   125e0:	str	r3, [fp, #-232]	; 0xffffff18
   125e4:	ldrd	r2, [fp, #-236]	; 0xffffff14
   125e8:	orrs	r3, r2, r3
   125ec:	beq	125a0 <__assert_fail@plt+0x1448>
   125f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   125f4:	str	r3, [fp, #-32]	; 0xffffffe0
   125f8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   125fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12600:	rsb	ip, r1, #32
   12604:	sub	r0, r1, #32
   12608:	lsr	r8, r2, r1
   1260c:	orr	r8, r8, r3, lsl ip
   12610:	orr	r8, r8, r3, lsr r0
   12614:	lsr	r9, r3, r1
   12618:	strd	r8, [fp, #4]
   1261c:	mov	r2, #0
   12620:	mov	r3, #0
   12624:	strd	r2, [fp, #-212]	; 0xffffff2c
   12628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1262c:	add	r3, r3, #64	; 0x40
   12630:	str	r3, [fp, #-32]	; 0xffffffe0
   12634:	b	12764 <__assert_fail@plt+0x160c>
   12638:	ldrd	r2, [fp, #4]
   1263c:	strd	r2, [fp, #-60]	; 0xffffffc4
   12640:	mov	r3, #0
   12644:	str	r3, [fp, #-64]	; 0xffffffc0
   12648:	b	12674 <__assert_fail@plt+0x151c>
   1264c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12650:	mov	r0, #0
   12654:	mov	r1, #0
   12658:	lsr	r0, r2, #1
   1265c:	orr	r0, r0, r3, lsl #31
   12660:	lsr	r1, r3, #1
   12664:	strd	r0, [fp, #-60]	; 0xffffffc4
   12668:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1266c:	add	r3, r3, #1
   12670:	str	r3, [fp, #-64]	; 0xffffffc0
   12674:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   12678:	mov	r2, #1
   1267c:	mov	r3, #0
   12680:	and	ip, r0, r2
   12684:	str	ip, [fp, #-244]	; 0xffffff0c
   12688:	and	r3, r1, r3
   1268c:	str	r3, [fp, #-240]	; 0xffffff10
   12690:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   12694:	orrs	r3, r2, r3
   12698:	beq	1264c <__assert_fail@plt+0x14f4>
   1269c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   126a0:	str	r3, [fp, #-32]	; 0xffffffe0
   126a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   126a8:	rsb	r1, r3, #64	; 0x40
   126ac:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   126b0:	sub	ip, r1, #32
   126b4:	rsb	r0, r1, #32
   126b8:	lsl	lr, r3, r1
   126bc:	str	lr, [fp, #-216]	; 0xffffff28
   126c0:	ldr	lr, [fp, #-216]	; 0xffffff28
   126c4:	orr	ip, lr, r2, lsl ip
   126c8:	str	ip, [fp, #-216]	; 0xffffff28
   126cc:	ldr	ip, [fp, #-216]	; 0xffffff28
   126d0:	orr	r0, ip, r2, lsr r0
   126d4:	str	r0, [fp, #-216]	; 0xffffff28
   126d8:	lsl	r3, r2, r1
   126dc:	str	r3, [fp, #-220]	; 0xffffff24
   126e0:	ldrd	r2, [fp, #4]
   126e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   126e8:	rsb	ip, r1, #32
   126ec:	sub	r0, r1, #32
   126f0:	lsr	r6, r2, r1
   126f4:	orr	r6, r6, r3, lsl ip
   126f8:	orr	r6, r6, r3, lsr r0
   126fc:	lsr	r7, r3, r1
   12700:	ldrd	r2, [fp, #-220]	; 0xffffff24
   12704:	mov	r1, r2
   12708:	orr	r1, r1, r6
   1270c:	str	r1, [fp, #-260]	; 0xfffffefc
   12710:	orr	r3, r3, r7
   12714:	str	r3, [fp, #-256]	; 0xffffff00
   12718:	sub	r3, fp, #260	; 0x104
   1271c:	ldrd	r2, [r3]
   12720:	strd	r2, [fp, #4]
   12724:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1272c:	rsb	ip, r1, #32
   12730:	sub	r0, r1, #32
   12734:	lsr	lr, r2, r1
   12738:	str	lr, [fp, #-228]	; 0xffffff1c
   1273c:	ldr	lr, [fp, #-228]	; 0xffffff1c
   12740:	orr	ip, lr, r3, lsl ip
   12744:	str	ip, [fp, #-228]	; 0xffffff1c
   12748:	ldr	ip, [fp, #-228]	; 0xffffff1c
   1274c:	orr	r0, ip, r3, lsr r0
   12750:	str	r0, [fp, #-228]	; 0xffffff1c
   12754:	lsr	r3, r3, r1
   12758:	str	r3, [fp, #-224]	; 0xffffff20
   1275c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   12760:	strd	r2, [fp, #-212]	; 0xffffff2c
   12764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12768:	str	r3, [sp]
   1276c:	mov	r2, #2
   12770:	mov	r3, #0
   12774:	ldr	r0, [fp, #12]
   12778:	bl	11dec <__assert_fail@plt+0xc94>
   1277c:	mov	r2, #3
   12780:	mov	r3, #0
   12784:	strd	r2, [fp, #-76]	; 0xffffffb4
   12788:	mov	r3, #0
   1278c:	str	r3, [fp, #-80]	; 0xffffffb0
   12790:	b	12b58 <__assert_fail@plt+0x1a00>
   12794:	movw	r2, #10416	; 0x28b0
   12798:	movt	r2, #3
   1279c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   127a0:	lsl	r3, r3, #4
   127a4:	add	r3, r2, r3
   127a8:	ldrd	r2, [r3]
   127ac:	ldr	r1, [fp, #8]
   127b0:	mul	r0, r2, r1
   127b4:	ldr	r1, [fp, #4]
   127b8:	mul	r1, r3, r1
   127bc:	add	r0, r0, r1
   127c0:	ldr	r1, [fp, #4]
   127c4:	umull	r2, r3, r1, r2
   127c8:	add	r1, r0, r3
   127cc:	mov	r3, r1
   127d0:	strd	r2, [fp, #-100]	; 0xffffff9c
   127d4:	strd	r2, [fp, #-100]	; 0xffffff9c
   127d8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   127dc:	strd	r2, [fp, #-108]	; 0xffffff94
   127e0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   127e4:	strd	r2, [fp, #-116]	; 0xffffff8c
   127e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   127ec:	str	r3, [fp, #-120]	; 0xffffff88
   127f0:	ldrd	r2, [fp, #-108]	; 0xffffff94
   127f4:	mov	r0, #0
   127f8:	mov	r1, #0
   127fc:	mov	r0, r3
   12800:	mov	r1, #0
   12804:	mov	r3, r0
   12808:	str	r3, [fp, #-124]	; 0xffffff84
   1280c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12810:	str	r3, [fp, #-128]	; 0xffffff80
   12814:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   12818:	mov	r0, #0
   1281c:	mov	r1, #0
   12820:	mov	r0, r3
   12824:	mov	r1, #0
   12828:	mov	r3, r0
   1282c:	str	r3, [fp, #-132]	; 0xffffff7c
   12830:	ldr	r3, [fp, #-120]	; 0xffffff88
   12834:	mov	r0, r3
   12838:	mov	r1, #0
   1283c:	ldr	r3, [fp, #-128]	; 0xffffff80
   12840:	mov	r2, r3
   12844:	mov	r3, #0
   12848:	mul	lr, r2, r1
   1284c:	mul	ip, r0, r3
   12850:	add	ip, lr, ip
   12854:	umull	r2, r3, r0, r2
   12858:	add	r1, ip, r3
   1285c:	mov	r3, r1
   12860:	strd	r2, [fp, #-140]	; 0xffffff74
   12864:	strd	r2, [fp, #-140]	; 0xffffff74
   12868:	ldr	r3, [fp, #-120]	; 0xffffff88
   1286c:	mov	r0, r3
   12870:	mov	r1, #0
   12874:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12878:	mov	r2, r3
   1287c:	mov	r3, #0
   12880:	mul	lr, r2, r1
   12884:	mul	ip, r0, r3
   12888:	add	ip, lr, ip
   1288c:	umull	r2, r3, r0, r2
   12890:	add	r1, ip, r3
   12894:	mov	r3, r1
   12898:	strd	r2, [fp, #-148]	; 0xffffff6c
   1289c:	strd	r2, [fp, #-148]	; 0xffffff6c
   128a0:	ldr	r3, [fp, #-124]	; 0xffffff84
   128a4:	mov	r0, r3
   128a8:	mov	r1, #0
   128ac:	ldr	r3, [fp, #-128]	; 0xffffff80
   128b0:	mov	r2, r3
   128b4:	mov	r3, #0
   128b8:	mul	lr, r2, r1
   128bc:	mul	ip, r0, r3
   128c0:	add	ip, lr, ip
   128c4:	umull	r2, r3, r0, r2
   128c8:	add	r1, ip, r3
   128cc:	mov	r3, r1
   128d0:	strd	r2, [fp, #-156]	; 0xffffff64
   128d4:	strd	r2, [fp, #-156]	; 0xffffff64
   128d8:	ldr	r3, [fp, #-124]	; 0xffffff84
   128dc:	mov	r0, r3
   128e0:	mov	r1, #0
   128e4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   128e8:	mov	r2, r3
   128ec:	mov	r3, #0
   128f0:	mul	lr, r2, r1
   128f4:	mul	ip, r0, r3
   128f8:	add	ip, lr, ip
   128fc:	umull	r2, r3, r0, r2
   12900:	add	r1, ip, r3
   12904:	mov	r3, r1
   12908:	strd	r2, [fp, #-92]	; 0xffffffa4
   1290c:	strd	r2, [fp, #-92]	; 0xffffffa4
   12910:	ldrd	r2, [fp, #-140]	; 0xffffff74
   12914:	mov	r0, #0
   12918:	mov	r1, #0
   1291c:	mov	r0, r3
   12920:	mov	r1, #0
   12924:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   12928:	adds	ip, r2, r0
   1292c:	str	ip, [fp, #-268]	; 0xfffffef4
   12930:	adc	r3, r3, r1
   12934:	str	r3, [fp, #-264]	; 0xfffffef8
   12938:	sub	r3, fp, #268	; 0x10c
   1293c:	ldrd	r2, [r3]
   12940:	strd	r2, [fp, #-148]	; 0xffffff6c
   12944:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   12948:	ldrd	r2, [fp, #-156]	; 0xffffff64
   1294c:	adds	ip, r0, r2
   12950:	str	ip, [fp, #-276]	; 0xfffffeec
   12954:	adc	r3, r1, r3
   12958:	str	r3, [fp, #-272]	; 0xfffffef0
   1295c:	sub	r3, fp, #276	; 0x114
   12960:	ldrd	r2, [r3]
   12964:	strd	r2, [fp, #-148]	; 0xffffff6c
   12968:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   1296c:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12970:	cmp	r1, r3
   12974:	cmpeq	r0, r2
   12978:	bcs	1299c <__assert_fail@plt+0x1844>
   1297c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   12980:	adds	r1, r2, #0
   12984:	str	r1, [fp, #-284]	; 0xfffffee4
   12988:	adc	r3, r3, #1
   1298c:	str	r3, [fp, #-280]	; 0xfffffee8
   12990:	sub	r3, fp, #284	; 0x11c
   12994:	ldrd	r2, [r3]
   12998:	strd	r2, [fp, #-92]	; 0xffffffa4
   1299c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   129a0:	mov	r0, #0
   129a4:	mov	r1, #0
   129a8:	mov	r0, r3
   129ac:	mov	r1, #0
   129b0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   129b4:	adds	ip, r2, r0
   129b8:	str	ip, [fp, #-292]	; 0xfffffedc
   129bc:	adc	r3, r3, r1
   129c0:	str	r3, [fp, #-288]	; 0xfffffee0
   129c4:	sub	r3, fp, #292	; 0x124
   129c8:	ldrd	r2, [r3]
   129cc:	strd	r2, [fp, #-164]	; 0xffffff5c
   129d0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   129d4:	mov	r4, #0
   129d8:	mov	r5, #0
   129dc:	mov	r5, r2
   129e0:	mov	r4, #0
   129e4:	ldrd	r0, [fp, #-140]	; 0xffffff74
   129e8:	mvn	r2, #0
   129ec:	mov	r3, #0
   129f0:	and	ip, r0, r2
   129f4:	str	ip, [fp, #-252]	; 0xffffff04
   129f8:	and	r3, r1, r3
   129fc:	str	r3, [fp, #-248]	; 0xffffff08
   12a00:	ldrd	r2, [fp, #-252]	; 0xffffff04
   12a04:	mov	r1, r2
   12a08:	adds	r1, r4, r1
   12a0c:	str	r1, [fp, #-300]	; 0xfffffed4
   12a10:	adc	r3, r5, r3
   12a14:	str	r3, [fp, #-296]	; 0xfffffed8
   12a18:	sub	r3, fp, #300	; 0x12c
   12a1c:	ldrd	r2, [r3]
   12a20:	strd	r2, [fp, #-172]	; 0xffffff54
   12a24:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   12a28:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12a2c:	cmp	r1, r3
   12a30:	cmpeq	r0, r2
   12a34:	bhi	12b04 <__assert_fail@plt+0x19ac>
   12a38:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   12a3c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   12a40:	subs	ip, r0, r2
   12a44:	str	ip, [fp, #-308]	; 0xfffffecc
   12a48:	sbc	r3, r1, r3
   12a4c:	str	r3, [fp, #-304]	; 0xfffffed0
   12a50:	sub	r3, fp, #308	; 0x134
   12a54:	ldrd	r2, [r3]
   12a58:	strd	r2, [fp, #-164]	; 0xffffff5c
   12a5c:	movw	r2, #10416	; 0x28b0
   12a60:	movt	r2, #3
   12a64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a68:	lsl	r3, r3, #4
   12a6c:	add	r3, r2, r3
   12a70:	ldrd	r2, [r3]
   12a74:	ldr	r1, [fp, #-160]	; 0xffffff60
   12a78:	mul	r0, r2, r1
   12a7c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   12a80:	mul	r1, r3, r1
   12a84:	add	r0, r0, r1
   12a88:	ldr	r1, [fp, #-164]	; 0xffffff5c
   12a8c:	umull	r2, r3, r1, r2
   12a90:	add	r1, r0, r3
   12a94:	mov	r3, r1
   12a98:	strd	r2, [fp, #-180]	; 0xffffff4c
   12a9c:	strd	r2, [fp, #-180]	; 0xffffff4c
   12aa0:	movw	r2, #10416	; 0x28b0
   12aa4:	movt	r2, #3
   12aa8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12aac:	lsl	r3, r3, #4
   12ab0:	add	r3, r2, r3
   12ab4:	add	r3, r3, #8
   12ab8:	ldrd	r0, [r3]
   12abc:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   12ac0:	cmp	r3, r1
   12ac4:	cmpeq	r2, r0
   12ac8:	movhi	r3, #1
   12acc:	movls	r3, #0
   12ad0:	uxtb	r3, r3
   12ad4:	cmp	r3, #0
   12ad8:	bne	12b0c <__assert_fail@plt+0x19b4>
   12adc:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   12ae0:	strd	r2, [fp, #-212]	; 0xffffff2c
   12ae4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   12ae8:	strd	r2, [fp, #4]
   12aec:	mov	r3, #1
   12af0:	str	r3, [sp]
   12af4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12af8:	ldr	r0, [fp, #12]
   12afc:	bl	11dec <__assert_fail@plt+0xc94>
   12b00:	b	12794 <__assert_fail@plt+0x163c>
   12b04:	nop	{0}
   12b08:	b	12b10 <__assert_fail@plt+0x19b8>
   12b0c:	nop	{0}
   12b10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b14:	add	r2, r3, #1
   12b18:	movw	r3, #9060	; 0x2364
   12b1c:	movt	r3, #3
   12b20:	ldrb	r3, [r3, r2]
   12b24:	uxtb	r0, r3
   12b28:	mov	r1, #0
   12b2c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12b30:	adds	ip, r2, r0
   12b34:	str	ip, [fp, #-316]	; 0xfffffec4
   12b38:	adc	r3, r3, r1
   12b3c:	str	r3, [fp, #-312]	; 0xfffffec8
   12b40:	sub	r3, fp, #316	; 0x13c
   12b44:	ldrd	r2, [r3]
   12b48:	strd	r2, [fp, #-76]	; 0xffffffb4
   12b4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b50:	add	r3, r3, #1
   12b54:	str	r3, [fp, #-80]	; 0xffffffb0
   12b58:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12b5c:	orrs	r3, r2, r3
   12b60:	beq	12b70 <__assert_fail@plt+0x1a18>
   12b64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b68:	cmp	r3, #668	; 0x29c
   12b6c:	bcc	12794 <__assert_fail@plt+0x163c>
   12b70:	ldr	r3, [fp, #-200]	; 0xffffff38
   12b74:	cmp	r3, #0
   12b78:	beq	130c4 <__assert_fail@plt+0x1f6c>
   12b7c:	ldr	r1, [fp, #-200]	; 0xffffff38
   12b80:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12b84:	strd	r2, [r1]
   12b88:	b	130c4 <__assert_fail@plt+0x1f6c>
   12b8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b90:	lsl	r2, r3, #4
   12b94:	movw	r3, #10416	; 0x28b0
   12b98:	movt	r3, #3
   12b9c:	add	r3, r2, r3
   12ba0:	str	r3, [fp, #-184]	; 0xffffff48
   12ba4:	ldr	r3, [fp, #-184]	; 0xffffff48
   12ba8:	ldrd	r2, [r3]
   12bac:	ldr	r1, [fp, #8]
   12bb0:	mul	r0, r2, r1
   12bb4:	ldr	r1, [fp, #4]
   12bb8:	mul	r1, r3, r1
   12bbc:	add	r1, r0, r1
   12bc0:	ldr	r0, [fp, #4]
   12bc4:	umull	r2, r3, r0, r2
   12bc8:	add	r1, r1, r3
   12bcc:	mov	r3, r1
   12bd0:	strd	r2, [fp, #-196]	; 0xffffff3c
   12bd4:	strd	r2, [fp, #-196]	; 0xffffff3c
   12bd8:	ldr	r3, [fp, #-184]	; 0xffffff48
   12bdc:	ldrd	r2, [r3, #8]
   12be0:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12be4:	cmp	r1, r3
   12be8:	cmpeq	r0, r2
   12bec:	movhi	r3, #1
   12bf0:	movls	r3, #0
   12bf4:	uxtb	r3, r3
   12bf8:	cmp	r3, #0
   12bfc:	beq	12c04 <__assert_fail@plt+0x1aac>
   12c00:	b	12c30 <__assert_fail@plt+0x1ad8>
   12c04:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12c08:	strd	r2, [fp, #4]
   12c0c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c10:	add	r3, r3, #1
   12c14:	mov	r2, #0
   12c18:	str	r2, [sp, #4]
   12c1c:	str	r3, [sp]
   12c20:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12c24:	ldr	r0, [fp, #12]
   12c28:	bl	124a0 <__assert_fail@plt+0x1348>
   12c2c:	b	12ba4 <__assert_fail@plt+0x1a4c>
   12c30:	ldr	r3, [fp, #-184]	; 0xffffff48
   12c34:	add	r3, r3, #16
   12c38:	ldrd	r2, [r3]
   12c3c:	ldr	r1, [fp, #8]
   12c40:	mul	r0, r2, r1
   12c44:	ldr	r1, [fp, #4]
   12c48:	mul	r1, r3, r1
   12c4c:	add	r1, r0, r1
   12c50:	ldr	r0, [fp, #4]
   12c54:	umull	r2, r3, r0, r2
   12c58:	add	r1, r1, r3
   12c5c:	mov	r3, r1
   12c60:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c64:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c68:	ldr	r3, [fp, #-184]	; 0xffffff48
   12c6c:	add	r3, r3, #16
   12c70:	ldrd	r2, [r3, #8]
   12c74:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12c78:	cmp	r1, r3
   12c7c:	cmpeq	r0, r2
   12c80:	movhi	r3, #1
   12c84:	movls	r3, #0
   12c88:	uxtb	r3, r3
   12c8c:	cmp	r3, #0
   12c90:	beq	12c98 <__assert_fail@plt+0x1b40>
   12c94:	b	12cc4 <__assert_fail@plt+0x1b6c>
   12c98:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12c9c:	strd	r2, [fp, #4]
   12ca0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12ca4:	add	r3, r3, #1
   12ca8:	mov	r2, #1
   12cac:	str	r2, [sp, #4]
   12cb0:	str	r3, [sp]
   12cb4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12cb8:	ldr	r0, [fp, #12]
   12cbc:	bl	124a0 <__assert_fail@plt+0x1348>
   12cc0:	b	12c30 <__assert_fail@plt+0x1ad8>
   12cc4:	ldr	r3, [fp, #-184]	; 0xffffff48
   12cc8:	add	r3, r3, #32
   12ccc:	ldrd	r2, [r3]
   12cd0:	ldr	r1, [fp, #8]
   12cd4:	mul	r0, r2, r1
   12cd8:	ldr	r1, [fp, #4]
   12cdc:	mul	r1, r3, r1
   12ce0:	add	r1, r0, r1
   12ce4:	ldr	r0, [fp, #4]
   12ce8:	umull	r2, r3, r0, r2
   12cec:	add	r1, r1, r3
   12cf0:	mov	r3, r1
   12cf4:	strd	r2, [fp, #-196]	; 0xffffff3c
   12cf8:	strd	r2, [fp, #-196]	; 0xffffff3c
   12cfc:	ldr	r3, [fp, #-184]	; 0xffffff48
   12d00:	add	r3, r3, #32
   12d04:	ldrd	r2, [r3, #8]
   12d08:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12d0c:	cmp	r1, r3
   12d10:	cmpeq	r0, r2
   12d14:	movhi	r3, #1
   12d18:	movls	r3, #0
   12d1c:	uxtb	r3, r3
   12d20:	cmp	r3, #0
   12d24:	beq	12d2c <__assert_fail@plt+0x1bd4>
   12d28:	b	12d58 <__assert_fail@plt+0x1c00>
   12d2c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12d30:	strd	r2, [fp, #4]
   12d34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d38:	add	r3, r3, #1
   12d3c:	mov	r2, #2
   12d40:	str	r2, [sp, #4]
   12d44:	str	r3, [sp]
   12d48:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12d4c:	ldr	r0, [fp, #12]
   12d50:	bl	124a0 <__assert_fail@plt+0x1348>
   12d54:	b	12cc4 <__assert_fail@plt+0x1b6c>
   12d58:	ldr	r3, [fp, #-184]	; 0xffffff48
   12d5c:	add	r3, r3, #48	; 0x30
   12d60:	ldrd	r2, [r3]
   12d64:	ldr	r1, [fp, #8]
   12d68:	mul	r0, r2, r1
   12d6c:	ldr	r1, [fp, #4]
   12d70:	mul	r1, r3, r1
   12d74:	add	r1, r0, r1
   12d78:	ldr	r0, [fp, #4]
   12d7c:	umull	r2, r3, r0, r2
   12d80:	add	r1, r1, r3
   12d84:	mov	r3, r1
   12d88:	strd	r2, [fp, #-196]	; 0xffffff3c
   12d8c:	strd	r2, [fp, #-196]	; 0xffffff3c
   12d90:	ldr	r3, [fp, #-184]	; 0xffffff48
   12d94:	add	r3, r3, #48	; 0x30
   12d98:	ldrd	r2, [r3, #8]
   12d9c:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12da0:	cmp	r1, r3
   12da4:	cmpeq	r0, r2
   12da8:	movhi	r3, #1
   12dac:	movls	r3, #0
   12db0:	uxtb	r3, r3
   12db4:	cmp	r3, #0
   12db8:	beq	12dc0 <__assert_fail@plt+0x1c68>
   12dbc:	b	12dec <__assert_fail@plt+0x1c94>
   12dc0:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12dc4:	strd	r2, [fp, #4]
   12dc8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12dcc:	add	r3, r3, #1
   12dd0:	mov	r2, #3
   12dd4:	str	r2, [sp, #4]
   12dd8:	str	r3, [sp]
   12ddc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12de0:	ldr	r0, [fp, #12]
   12de4:	bl	124a0 <__assert_fail@plt+0x1348>
   12de8:	b	12d58 <__assert_fail@plt+0x1c00>
   12dec:	ldr	r3, [fp, #-184]	; 0xffffff48
   12df0:	add	r3, r3, #64	; 0x40
   12df4:	ldrd	r2, [r3]
   12df8:	ldr	r1, [fp, #8]
   12dfc:	mul	r0, r2, r1
   12e00:	ldr	r1, [fp, #4]
   12e04:	mul	r1, r3, r1
   12e08:	add	r1, r0, r1
   12e0c:	ldr	r0, [fp, #4]
   12e10:	umull	r2, r3, r0, r2
   12e14:	add	r1, r1, r3
   12e18:	mov	r3, r1
   12e1c:	strd	r2, [fp, #-196]	; 0xffffff3c
   12e20:	strd	r2, [fp, #-196]	; 0xffffff3c
   12e24:	ldr	r3, [fp, #-184]	; 0xffffff48
   12e28:	add	r3, r3, #64	; 0x40
   12e2c:	ldrd	r2, [r3, #8]
   12e30:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12e34:	cmp	r1, r3
   12e38:	cmpeq	r0, r2
   12e3c:	movhi	r3, #1
   12e40:	movls	r3, #0
   12e44:	uxtb	r3, r3
   12e48:	cmp	r3, #0
   12e4c:	beq	12e54 <__assert_fail@plt+0x1cfc>
   12e50:	b	12e80 <__assert_fail@plt+0x1d28>
   12e54:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12e58:	strd	r2, [fp, #4]
   12e5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e60:	add	r3, r3, #1
   12e64:	mov	r2, #4
   12e68:	str	r2, [sp, #4]
   12e6c:	str	r3, [sp]
   12e70:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12e74:	ldr	r0, [fp, #12]
   12e78:	bl	124a0 <__assert_fail@plt+0x1348>
   12e7c:	b	12dec <__assert_fail@plt+0x1c94>
   12e80:	ldr	r3, [fp, #-184]	; 0xffffff48
   12e84:	add	r3, r3, #80	; 0x50
   12e88:	ldrd	r2, [r3]
   12e8c:	ldr	r1, [fp, #8]
   12e90:	mul	r0, r2, r1
   12e94:	ldr	r1, [fp, #4]
   12e98:	mul	r1, r3, r1
   12e9c:	add	r1, r0, r1
   12ea0:	ldr	r0, [fp, #4]
   12ea4:	umull	r2, r3, r0, r2
   12ea8:	add	r1, r1, r3
   12eac:	mov	r3, r1
   12eb0:	strd	r2, [fp, #-196]	; 0xffffff3c
   12eb4:	strd	r2, [fp, #-196]	; 0xffffff3c
   12eb8:	ldr	r3, [fp, #-184]	; 0xffffff48
   12ebc:	add	r3, r3, #80	; 0x50
   12ec0:	ldrd	r2, [r3, #8]
   12ec4:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12ec8:	cmp	r1, r3
   12ecc:	cmpeq	r0, r2
   12ed0:	movhi	r3, #1
   12ed4:	movls	r3, #0
   12ed8:	uxtb	r3, r3
   12edc:	cmp	r3, #0
   12ee0:	beq	12ee8 <__assert_fail@plt+0x1d90>
   12ee4:	b	12f14 <__assert_fail@plt+0x1dbc>
   12ee8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12eec:	strd	r2, [fp, #4]
   12ef0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12ef4:	add	r3, r3, #1
   12ef8:	mov	r2, #5
   12efc:	str	r2, [sp, #4]
   12f00:	str	r3, [sp]
   12f04:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12f08:	ldr	r0, [fp, #12]
   12f0c:	bl	124a0 <__assert_fail@plt+0x1348>
   12f10:	b	12e80 <__assert_fail@plt+0x1d28>
   12f14:	ldr	r3, [fp, #-184]	; 0xffffff48
   12f18:	add	r3, r3, #96	; 0x60
   12f1c:	ldrd	r2, [r3]
   12f20:	ldr	r1, [fp, #8]
   12f24:	mul	r0, r2, r1
   12f28:	ldr	r1, [fp, #4]
   12f2c:	mul	r1, r3, r1
   12f30:	add	r1, r0, r1
   12f34:	ldr	r0, [fp, #4]
   12f38:	umull	r2, r3, r0, r2
   12f3c:	add	r1, r1, r3
   12f40:	mov	r3, r1
   12f44:	strd	r2, [fp, #-196]	; 0xffffff3c
   12f48:	strd	r2, [fp, #-196]	; 0xffffff3c
   12f4c:	ldr	r3, [fp, #-184]	; 0xffffff48
   12f50:	add	r3, r3, #96	; 0x60
   12f54:	ldrd	r2, [r3, #8]
   12f58:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12f5c:	cmp	r1, r3
   12f60:	cmpeq	r0, r2
   12f64:	movhi	r3, #1
   12f68:	movls	r3, #0
   12f6c:	uxtb	r3, r3
   12f70:	cmp	r3, #0
   12f74:	beq	12f7c <__assert_fail@plt+0x1e24>
   12f78:	b	12fa8 <__assert_fail@plt+0x1e50>
   12f7c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12f80:	strd	r2, [fp, #4]
   12f84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12f88:	add	r3, r3, #1
   12f8c:	mov	r2, #6
   12f90:	str	r2, [sp, #4]
   12f94:	str	r3, [sp]
   12f98:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12f9c:	ldr	r0, [fp, #12]
   12fa0:	bl	124a0 <__assert_fail@plt+0x1348>
   12fa4:	b	12f14 <__assert_fail@plt+0x1dbc>
   12fa8:	ldr	r3, [fp, #-184]	; 0xffffff48
   12fac:	add	r3, r3, #112	; 0x70
   12fb0:	ldrd	r2, [r3]
   12fb4:	ldr	r1, [fp, #8]
   12fb8:	mul	r0, r2, r1
   12fbc:	ldr	r1, [fp, #4]
   12fc0:	mul	r1, r3, r1
   12fc4:	add	r1, r0, r1
   12fc8:	ldr	r0, [fp, #4]
   12fcc:	umull	r2, r3, r0, r2
   12fd0:	add	r1, r1, r3
   12fd4:	mov	r3, r1
   12fd8:	strd	r2, [fp, #-196]	; 0xffffff3c
   12fdc:	strd	r2, [fp, #-196]	; 0xffffff3c
   12fe0:	ldr	r3, [fp, #-184]	; 0xffffff48
   12fe4:	add	r3, r3, #112	; 0x70
   12fe8:	ldrd	r2, [r3, #8]
   12fec:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   12ff0:	cmp	r1, r3
   12ff4:	cmpeq	r0, r2
   12ff8:	movhi	r3, #1
   12ffc:	movls	r3, #0
   13000:	uxtb	r3, r3
   13004:	cmp	r3, #0
   13008:	bne	13038 <__assert_fail@plt+0x1ee0>
   1300c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13010:	strd	r2, [fp, #4]
   13014:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13018:	add	r3, r3, #1
   1301c:	mov	r2, #7
   13020:	str	r2, [sp, #4]
   13024:	str	r3, [sp]
   13028:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1302c:	ldr	r0, [fp, #12]
   13030:	bl	124a0 <__assert_fail@plt+0x1348>
   13034:	b	12fa8 <__assert_fail@plt+0x1e50>
   13038:	nop	{0}
   1303c:	movw	r3, #9736	; 0x2608
   13040:	movt	r3, #3
   13044:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13048:	add	r3, r3, r2
   1304c:	ldrb	r3, [r3]
   13050:	uxtb	r2, r3
   13054:	mov	r3, #0
   13058:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1305c:	adds	ip, r0, r2
   13060:	str	ip, [fp, #-324]	; 0xfffffebc
   13064:	adc	r3, r1, r3
   13068:	str	r3, [fp, #-320]	; 0xfffffec0
   1306c:	sub	r3, fp, #324	; 0x144
   13070:	ldrd	r2, [r3]
   13074:	strd	r2, [fp, #-76]	; 0xffffffb4
   13078:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1307c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13080:	mul	r2, r2, r3
   13084:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13088:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1308c:	mul	r3, r1, r3
   13090:	add	r1, r2, r3
   13094:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13098:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1309c:	umull	r2, r3, r2, r3
   130a0:	add	r1, r1, r3
   130a4:	mov	r3, r1
   130a8:	ldrd	r0, [fp, #4]
   130ac:	cmp	r1, r3
   130b0:	cmpeq	r0, r2
   130b4:	bcc	130d4 <__assert_fail@plt+0x1f7c>
   130b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   130bc:	add	r3, r3, #8
   130c0:	str	r3, [fp, #-80]	; 0xffffffb0
   130c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   130c8:	cmp	r3, #668	; 0x29c
   130cc:	bcc	12b8c <__assert_fail@plt+0x1a34>
   130d0:	b	130d8 <__assert_fail@plt+0x1f80>
   130d4:	nop	{0}
   130d8:	ldrd	r2, [fp, #4]
   130dc:	mov	r0, r2
   130e0:	mov	r1, r3
   130e4:	sub	sp, fp, #28
   130e8:	ldrd	r4, [sp]
   130ec:	ldrd	r6, [sp, #8]
   130f0:	ldrd	r8, [sp, #16]
   130f4:	ldr	fp, [sp, #24]
   130f8:	add	sp, sp, #28
   130fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13100:	str	fp, [sp, #-8]!
   13104:	str	lr, [sp, #4]
   13108:	add	fp, sp, #4
   1310c:	sub	sp, sp, #32
   13110:	str	r0, [fp, #-32]	; 0xffffffe0
   13114:	str	r1, [fp, #-36]	; 0xffffffdc
   13118:	movw	r3, #29076	; 0x7194
   1311c:	movt	r3, #4
   13120:	ldrb	r3, [r3]
   13124:	cmp	r3, #0
   13128:	beq	1314c <__assert_fail@plt+0x1ff4>
   1312c:	movw	r3, #29056	; 0x7180
   13130:	movt	r3, #4
   13134:	ldr	r3, [r3]
   13138:	mov	r2, #17
   1313c:	mov	r1, #1
   13140:	movw	r0, #21216	; 0x52e0
   13144:	movt	r0, #3
   13148:	bl	10f84 <fwrite@plt>
   1314c:	sub	r3, fp, #24
   13150:	mov	r0, r3
   13154:	bl	20cdc <__assert_fail@plt+0xfb84>
   13158:	mov	r1, #0
   1315c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13160:	bl	283d8 <__assert_fail@plt+0x17280>
   13164:	str	r0, [fp, #-8]
   13168:	ldr	r2, [fp, #-8]
   1316c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13174:	bl	23b78 <__assert_fail@plt+0x12a20>
   13178:	b	13194 <__assert_fail@plt+0x203c>
   1317c:	mov	r1, #2
   13180:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13184:	bl	12448 <__assert_fail@plt+0x12f0>
   13188:	ldr	r3, [fp, #-8]
   1318c:	sub	r3, r3, #1
   13190:	str	r3, [fp, #-8]
   13194:	ldr	r3, [fp, #-8]
   13198:	cmp	r3, #0
   1319c:	bne	1317c <__assert_fail@plt+0x2024>
   131a0:	mov	r3, #3
   131a4:	str	r3, [fp, #-8]
   131a8:	mov	r3, #1
   131ac:	str	r3, [fp, #-12]
   131b0:	b	13238 <__assert_fail@plt+0x20e0>
   131b4:	ldr	r1, [fp, #-8]
   131b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131bc:	bl	24398 <__assert_fail@plt+0x13240>
   131c0:	mov	r3, r0
   131c4:	cmp	r3, #0
   131c8:	bne	1321c <__assert_fail@plt+0x20c4>
   131cc:	ldr	r2, [fp, #-12]
   131d0:	add	r3, r2, #1
   131d4:	str	r3, [fp, #-12]
   131d8:	movw	r3, #9060	; 0x2364
   131dc:	movt	r3, #3
   131e0:	ldrb	r3, [r3, r2]
   131e4:	mov	r2, r3
   131e8:	ldr	r3, [fp, #-8]
   131ec:	add	r3, r3, r2
   131f0:	str	r3, [fp, #-8]
   131f4:	ldr	r3, [fp, #-8]
   131f8:	ldr	r2, [fp, #-8]
   131fc:	mul	r3, r2, r3
   13200:	mov	r1, r3
   13204:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13208:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   1320c:	mov	r3, r0
   13210:	cmp	r3, #0
   13214:	bge	13238 <__assert_fail@plt+0x20e0>
   13218:	b	13244 <__assert_fail@plt+0x20ec>
   1321c:	ldr	r2, [fp, #-8]
   13220:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13228:	bl	240a8 <__assert_fail@plt+0x12f50>
   1322c:	ldr	r1, [fp, #-8]
   13230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13234:	bl	12448 <__assert_fail@plt+0x12f0>
   13238:	ldr	r3, [fp, #-12]
   1323c:	cmp	r3, #668	; 0x29c
   13240:	bls	131b4 <__assert_fail@plt+0x205c>
   13244:	sub	r3, fp, #24
   13248:	mov	r0, r3
   1324c:	bl	20db0 <__assert_fail@plt+0xfc58>
   13250:	nop	{0}
   13254:	sub	sp, fp, #4
   13258:	ldr	fp, [sp]
   1325c:	add	sp, sp, #4
   13260:	pop	{pc}		; (ldr pc, [sp], #4)
   13264:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13268:	strd	r6, [sp, #8]
   1326c:	strd	r8, [sp, #16]
   13270:	str	fp, [sp, #24]
   13274:	str	lr, [sp, #28]
   13278:	add	fp, sp, #28
   1327c:	sub	sp, sp, #280	; 0x118
   13280:	strd	r0, [fp, #-212]	; 0xffffff2c
   13284:	strd	r2, [fp, #-220]	; 0xffffff24
   13288:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1328c:	strd	r2, [fp, #-60]	; 0xffffffc4
   13290:	ldrd	r2, [fp, #-220]	; 0xffffff24
   13294:	strd	r2, [fp, #-68]	; 0xffffffbc
   13298:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1329c:	str	r3, [fp, #-72]	; 0xffffffb8
   132a0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   132a4:	mov	r0, #0
   132a8:	mov	r1, #0
   132ac:	mov	r0, r3
   132b0:	mov	r1, #0
   132b4:	mov	r3, r0
   132b8:	str	r3, [fp, #-76]	; 0xffffffb4
   132bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   132c0:	str	r3, [fp, #-80]	; 0xffffffb0
   132c4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   132c8:	mov	r0, #0
   132cc:	mov	r1, #0
   132d0:	mov	r0, r3
   132d4:	mov	r1, #0
   132d8:	mov	r3, r0
   132dc:	str	r3, [fp, #-84]	; 0xffffffac
   132e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   132e4:	mov	r0, r3
   132e8:	mov	r1, #0
   132ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   132f0:	mov	r2, r3
   132f4:	mov	r3, #0
   132f8:	mul	lr, r2, r1
   132fc:	mul	ip, r0, r3
   13300:	add	ip, lr, ip
   13304:	umull	r2, r3, r0, r2
   13308:	add	r1, ip, r3
   1330c:	mov	r3, r1
   13310:	strd	r2, [fp, #-92]	; 0xffffffa4
   13314:	strd	r2, [fp, #-92]	; 0xffffffa4
   13318:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1331c:	mov	r0, r3
   13320:	mov	r1, #0
   13324:	ldr	r3, [fp, #-84]	; 0xffffffac
   13328:	mov	r2, r3
   1332c:	mov	r3, #0
   13330:	mul	lr, r2, r1
   13334:	mul	ip, r0, r3
   13338:	add	ip, lr, ip
   1333c:	umull	r2, r3, r0, r2
   13340:	add	r1, ip, r3
   13344:	mov	r3, r1
   13348:	strd	r2, [fp, #-100]	; 0xffffff9c
   1334c:	strd	r2, [fp, #-100]	; 0xffffff9c
   13350:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13354:	mov	r0, r3
   13358:	mov	r1, #0
   1335c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13360:	mov	r2, r3
   13364:	mov	r3, #0
   13368:	mul	lr, r2, r1
   1336c:	mul	ip, r0, r3
   13370:	add	ip, lr, ip
   13374:	umull	r2, r3, r0, r2
   13378:	add	r1, ip, r3
   1337c:	mov	r3, r1
   13380:	strd	r2, [fp, #-108]	; 0xffffff94
   13384:	strd	r2, [fp, #-108]	; 0xffffff94
   13388:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1338c:	mov	r0, r3
   13390:	mov	r1, #0
   13394:	ldr	r3, [fp, #-84]	; 0xffffffac
   13398:	mov	r2, r3
   1339c:	mov	r3, #0
   133a0:	mul	lr, r2, r1
   133a4:	mul	ip, r0, r3
   133a8:	add	ip, lr, ip
   133ac:	umull	r2, r3, r0, r2
   133b0:	add	r1, ip, r3
   133b4:	mov	r3, r1
   133b8:	strd	r2, [fp, #-44]	; 0xffffffd4
   133bc:	strd	r2, [fp, #-44]	; 0xffffffd4
   133c0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   133c4:	mov	r0, #0
   133c8:	mov	r1, #0
   133cc:	mov	r0, r3
   133d0:	mov	r1, #0
   133d4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   133d8:	adds	r4, r2, r0
   133dc:	adc	r5, r3, r1
   133e0:	strd	r4, [fp, #-100]	; 0xffffff9c
   133e4:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   133e8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   133ec:	adds	r8, r0, r2
   133f0:	adc	r9, r1, r3
   133f4:	strd	r8, [fp, #-100]	; 0xffffff9c
   133f8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   133fc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   13400:	cmp	r1, r3
   13404:	cmpeq	r0, r2
   13408:	bcs	13428 <__assert_fail@plt+0x22d0>
   1340c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13410:	adds	r1, r2, #0
   13414:	str	r1, [fp, #-236]	; 0xffffff14
   13418:	adc	r3, r3, #1
   1341c:	str	r3, [fp, #-232]	; 0xffffff18
   13420:	ldrd	r2, [fp, #-236]	; 0xffffff14
   13424:	strd	r2, [fp, #-44]	; 0xffffffd4
   13428:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1342c:	mov	r0, #0
   13430:	mov	r1, #0
   13434:	mov	r0, r3
   13438:	mov	r1, #0
   1343c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13440:	adds	ip, r2, r0
   13444:	str	ip, [fp, #-244]	; 0xffffff0c
   13448:	adc	r3, r3, r1
   1344c:	str	r3, [fp, #-240]	; 0xffffff10
   13450:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   13454:	strd	r2, [fp, #-116]	; 0xffffff8c
   13458:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1345c:	mov	r4, #0
   13460:	mov	r5, #0
   13464:	mov	r5, r2
   13468:	mov	r4, #0
   1346c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   13470:	mvn	r2, #0
   13474:	mov	r3, #0
   13478:	and	r6, r0, r2
   1347c:	and	r7, r1, r3
   13480:	adds	r3, r4, r6
   13484:	str	r3, [fp, #-252]	; 0xffffff04
   13488:	adc	r3, r5, r7
   1348c:	str	r3, [fp, #-248]	; 0xffffff08
   13490:	ldrd	r2, [fp, #-252]	; 0xffffff04
   13494:	strd	r2, [fp, #-124]	; 0xffffff84
   13498:	ldr	r2, [fp, #-120]	; 0xffffff88
   1349c:	ldr	r3, [fp, #12]
   134a0:	mul	r1, r3, r2
   134a4:	ldr	r2, [fp, #16]
   134a8:	ldr	r3, [fp, #-124]	; 0xffffff84
   134ac:	mul	r3, r3, r2
   134b0:	add	r1, r1, r3
   134b4:	ldr	r2, [fp, #-124]	; 0xffffff84
   134b8:	ldr	r3, [fp, #12]
   134bc:	umull	r2, r3, r2, r3
   134c0:	add	r1, r1, r3
   134c4:	mov	r3, r1
   134c8:	strd	r2, [fp, #-132]	; 0xffffff7c
   134cc:	strd	r2, [fp, #-132]	; 0xffffff7c
   134d0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   134d4:	strd	r2, [fp, #-140]	; 0xffffff74
   134d8:	ldrd	r2, [fp, #4]
   134dc:	strd	r2, [fp, #-148]	; 0xffffff6c
   134e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   134e4:	str	r3, [fp, #-152]	; 0xffffff68
   134e8:	ldrd	r2, [fp, #-140]	; 0xffffff74
   134ec:	mov	r0, #0
   134f0:	mov	r1, #0
   134f4:	mov	r0, r3
   134f8:	mov	r1, #0
   134fc:	mov	r3, r0
   13500:	str	r3, [fp, #-156]	; 0xffffff64
   13504:	ldr	r3, [fp, #-148]	; 0xffffff6c
   13508:	str	r3, [fp, #-160]	; 0xffffff60
   1350c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   13510:	mov	r0, #0
   13514:	mov	r1, #0
   13518:	mov	r0, r3
   1351c:	mov	r1, #0
   13520:	mov	r3, r0
   13524:	str	r3, [fp, #-164]	; 0xffffff5c
   13528:	ldr	r3, [fp, #-152]	; 0xffffff68
   1352c:	mov	r0, r3
   13530:	mov	r1, #0
   13534:	ldr	r3, [fp, #-160]	; 0xffffff60
   13538:	mov	r2, r3
   1353c:	mov	r3, #0
   13540:	mul	lr, r2, r1
   13544:	mul	ip, r0, r3
   13548:	add	ip, lr, ip
   1354c:	umull	r2, r3, r0, r2
   13550:	add	r1, ip, r3
   13554:	mov	r3, r1
   13558:	strd	r2, [fp, #-172]	; 0xffffff54
   1355c:	strd	r2, [fp, #-172]	; 0xffffff54
   13560:	ldr	r3, [fp, #-152]	; 0xffffff68
   13564:	mov	r0, r3
   13568:	mov	r1, #0
   1356c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   13570:	mov	r2, r3
   13574:	mov	r3, #0
   13578:	mul	lr, r2, r1
   1357c:	mul	ip, r0, r3
   13580:	add	ip, lr, ip
   13584:	umull	r2, r3, r0, r2
   13588:	add	r1, ip, r3
   1358c:	mov	r3, r1
   13590:	strd	r2, [fp, #-180]	; 0xffffff4c
   13594:	strd	r2, [fp, #-180]	; 0xffffff4c
   13598:	ldr	r3, [fp, #-156]	; 0xffffff64
   1359c:	mov	r0, r3
   135a0:	mov	r1, #0
   135a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   135a8:	mov	r2, r3
   135ac:	mov	r3, #0
   135b0:	mul	lr, r2, r1
   135b4:	mul	ip, r0, r3
   135b8:	add	ip, lr, ip
   135bc:	umull	r2, r3, r0, r2
   135c0:	add	r1, ip, r3
   135c4:	mov	r3, r1
   135c8:	strd	r2, [fp, #-188]	; 0xffffff44
   135cc:	strd	r2, [fp, #-188]	; 0xffffff44
   135d0:	ldr	r3, [fp, #-156]	; 0xffffff64
   135d4:	mov	r0, r3
   135d8:	mov	r1, #0
   135dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   135e0:	mov	r2, r3
   135e4:	mov	r3, #0
   135e8:	mul	lr, r2, r1
   135ec:	mul	ip, r0, r3
   135f0:	add	ip, lr, ip
   135f4:	umull	r2, r3, r0, r2
   135f8:	add	r1, ip, r3
   135fc:	mov	r3, r1
   13600:	strd	r2, [fp, #-52]	; 0xffffffcc
   13604:	strd	r2, [fp, #-52]	; 0xffffffcc
   13608:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1360c:	mov	r0, #0
   13610:	mov	r1, #0
   13614:	mov	r0, r3
   13618:	mov	r1, #0
   1361c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   13620:	adds	ip, r2, r0
   13624:	str	ip, [fp, #-260]	; 0xfffffefc
   13628:	adc	r3, r3, r1
   1362c:	str	r3, [fp, #-256]	; 0xffffff00
   13630:	sub	r3, fp, #260	; 0x104
   13634:	ldrd	r2, [r3]
   13638:	strd	r2, [fp, #-180]	; 0xffffff4c
   1363c:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   13640:	ldrd	r2, [fp, #-188]	; 0xffffff44
   13644:	adds	ip, r0, r2
   13648:	str	ip, [fp, #-268]	; 0xfffffef4
   1364c:	adc	r3, r1, r3
   13650:	str	r3, [fp, #-264]	; 0xfffffef8
   13654:	sub	r3, fp, #268	; 0x10c
   13658:	ldrd	r2, [r3]
   1365c:	strd	r2, [fp, #-180]	; 0xffffff4c
   13660:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   13664:	ldrd	r2, [fp, #-188]	; 0xffffff44
   13668:	cmp	r1, r3
   1366c:	cmpeq	r0, r2
   13670:	bcs	13694 <__assert_fail@plt+0x253c>
   13674:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   13678:	adds	r1, r2, #0
   1367c:	str	r1, [fp, #-276]	; 0xfffffeec
   13680:	adc	r3, r3, #1
   13684:	str	r3, [fp, #-272]	; 0xfffffef0
   13688:	sub	r3, fp, #276	; 0x114
   1368c:	ldrd	r2, [r3]
   13690:	strd	r2, [fp, #-52]	; 0xffffffcc
   13694:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   13698:	mov	r2, #0
   1369c:	mov	r3, #0
   136a0:	mov	r2, r1
   136a4:	mov	r3, #0
   136a8:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   136ac:	adds	ip, r0, r2
   136b0:	str	ip, [fp, #-284]	; 0xfffffee4
   136b4:	adc	r3, r1, r3
   136b8:	str	r3, [fp, #-280]	; 0xfffffee8
   136bc:	sub	r3, fp, #284	; 0x11c
   136c0:	ldrd	r2, [r3]
   136c4:	strd	r2, [fp, #-196]	; 0xffffff3c
   136c8:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   136cc:	mov	r2, #0
   136d0:	mov	r3, #0
   136d4:	mov	r3, r0
   136d8:	mov	r2, #0
   136dc:	ldrd	r0, [fp, #-172]	; 0xffffff54
   136e0:	mvn	r4, #0
   136e4:	mov	r5, #0
   136e8:	and	ip, r0, r4
   136ec:	str	ip, [fp, #-228]	; 0xffffff1c
   136f0:	and	r1, r1, r5
   136f4:	str	r1, [fp, #-224]	; 0xffffff20
   136f8:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   136fc:	mov	ip, r0
   13700:	adds	ip, r2, ip
   13704:	str	ip, [fp, #-292]	; 0xfffffedc
   13708:	adc	r3, r3, r1
   1370c:	str	r3, [fp, #-288]	; 0xfffffee0
   13710:	sub	r3, fp, #292	; 0x124
   13714:	ldrd	r2, [r3]
   13718:	strd	r2, [fp, #-204]	; 0xffffff34
   1371c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   13720:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13724:	subs	ip, r0, r2
   13728:	str	ip, [fp, #-300]	; 0xfffffed4
   1372c:	sbc	r3, r1, r3
   13730:	str	r3, [fp, #-296]	; 0xfffffed8
   13734:	sub	r3, fp, #300	; 0x12c
   13738:	ldrd	r2, [r3]
   1373c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13740:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   13744:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13748:	cmp	r1, r3
   1374c:	cmpeq	r0, r2
   13750:	bcs	13778 <__assert_fail@plt+0x2620>
   13754:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13758:	ldrd	r2, [fp, #4]
   1375c:	adds	ip, r0, r2
   13760:	str	ip, [fp, #-308]	; 0xfffffecc
   13764:	adc	r3, r1, r3
   13768:	str	r3, [fp, #-304]	; 0xfffffed0
   1376c:	sub	r3, fp, #308	; 0x134
   13770:	ldrd	r2, [r3]
   13774:	strd	r2, [fp, #-36]	; 0xffffffdc
   13778:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1377c:	mov	r0, r2
   13780:	mov	r1, r3
   13784:	sub	sp, fp, #28
   13788:	ldrd	r4, [sp]
   1378c:	ldrd	r6, [sp, #8]
   13790:	ldrd	r8, [sp, #16]
   13794:	ldr	fp, [sp, #24]
   13798:	add	sp, sp, #28
   1379c:	pop	{pc}		; (ldr pc, [sp], #4)
   137a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   137a4:	strd	r6, [sp, #8]
   137a8:	strd	r8, [sp, #16]
   137ac:	str	fp, [sp, #24]
   137b0:	str	lr, [sp, #28]
   137b4:	add	fp, sp, #28
   137b8:	sub	sp, sp, #1216	; 0x4c0
   137bc:	str	r0, [fp, #-688]	; 0xfffffd50
   137c0:	sub	r1, fp, #700	; 0x2bc
   137c4:	strd	r2, [r1]
   137c8:	ldrd	r2, [fp, #44]	; 0x2c
   137cc:	rsbs	r2, r2, #0
   137d0:	rsc	r3, r3, #0
   137d4:	strd	r2, [fp, #44]	; 0x2c
   137d8:	sub	r3, fp, #700	; 0x2bc
   137dc:	ldrd	r2, [r3]
   137e0:	cmp	r2, #0
   137e4:	sbcs	r3, r3, #0
   137e8:	bge	1380c <__assert_fail@plt+0x26b4>
   137ec:	movw	r3, #22264	; 0x56f8
   137f0:	movt	r3, #3
   137f4:	movw	r2, #993	; 0x3e1
   137f8:	movw	r1, #9004	; 0x232c
   137fc:	movt	r1, #3
   13800:	movw	r0, #21364	; 0x5374
   13804:	movt	r0, #3
   13808:	bl	11158 <__assert_fail@plt>
   1380c:	ldrd	r2, [fp, #12]
   13810:	cmp	r2, #0
   13814:	sbcs	r3, r3, #0
   13818:	bge	1383c <__assert_fail@plt+0x26e4>
   1381c:	movw	r3, #22264	; 0x56f8
   13820:	movt	r3, #3
   13824:	movw	r2, #994	; 0x3e2
   13828:	movw	r1, #9004	; 0x232c
   1382c:	movt	r1, #3
   13830:	movw	r0, #21396	; 0x5394
   13834:	movt	r0, #3
   13838:	bl	11158 <__assert_fail@plt>
   1383c:	ldrd	r2, [fp, #28]
   13840:	cmp	r2, #0
   13844:	sbcs	r3, r3, #0
   13848:	bge	1386c <__assert_fail@plt+0x2714>
   1384c:	movw	r3, #22264	; 0x56f8
   13850:	movt	r3, #3
   13854:	movw	r2, #995	; 0x3e3
   13858:	movw	r1, #9004	; 0x232c
   1385c:	movt	r1, #3
   13860:	movw	r0, #21428	; 0x53b4
   13864:	movt	r0, #3
   13868:	bl	11158 <__assert_fail@plt>
   1386c:	ldrd	r2, [fp, #4]
   13870:	strd	r2, [fp, #-116]	; 0xffffff8c
   13874:	ldrd	r2, [fp, #20]
   13878:	strd	r2, [fp, #-124]	; 0xffffff84
   1387c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   13880:	str	r3, [fp, #-128]	; 0xffffff80
   13884:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   13888:	mov	r0, #0
   1388c:	mov	r1, #0
   13890:	mov	r0, r3
   13894:	mov	r1, #0
   13898:	mov	r3, r0
   1389c:	str	r3, [fp, #-132]	; 0xffffff7c
   138a0:	ldr	r3, [fp, #-124]	; 0xffffff84
   138a4:	str	r3, [fp, #-136]	; 0xffffff78
   138a8:	ldrd	r2, [fp, #-124]	; 0xffffff84
   138ac:	mov	r0, #0
   138b0:	mov	r1, #0
   138b4:	mov	r0, r3
   138b8:	mov	r1, #0
   138bc:	mov	r3, r0
   138c0:	str	r3, [fp, #-140]	; 0xffffff74
   138c4:	ldr	r3, [fp, #-128]	; 0xffffff80
   138c8:	mov	r0, r3
   138cc:	mov	r1, #0
   138d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   138d4:	mov	r2, r3
   138d8:	mov	r3, #0
   138dc:	mul	lr, r2, r1
   138e0:	mul	ip, r0, r3
   138e4:	add	ip, lr, ip
   138e8:	umull	r2, r3, r0, r2
   138ec:	add	r1, ip, r3
   138f0:	mov	r3, r1
   138f4:	strd	r2, [fp, #-148]	; 0xffffff6c
   138f8:	strd	r2, [fp, #-148]	; 0xffffff6c
   138fc:	ldr	r3, [fp, #-128]	; 0xffffff80
   13900:	mov	r0, r3
   13904:	mov	r1, #0
   13908:	ldr	r3, [fp, #-140]	; 0xffffff74
   1390c:	mov	r2, r3
   13910:	mov	r3, #0
   13914:	mul	lr, r2, r1
   13918:	mul	ip, r0, r3
   1391c:	add	ip, lr, ip
   13920:	umull	r2, r3, r0, r2
   13924:	add	r1, ip, r3
   13928:	mov	r3, r1
   1392c:	strd	r2, [fp, #-156]	; 0xffffff64
   13930:	strd	r2, [fp, #-156]	; 0xffffff64
   13934:	ldr	r3, [fp, #-132]	; 0xffffff7c
   13938:	mov	r0, r3
   1393c:	mov	r1, #0
   13940:	ldr	r3, [fp, #-136]	; 0xffffff78
   13944:	mov	r2, r3
   13948:	mov	r3, #0
   1394c:	mul	lr, r2, r1
   13950:	mul	ip, r0, r3
   13954:	add	ip, lr, ip
   13958:	umull	r2, r3, r0, r2
   1395c:	add	r1, ip, r3
   13960:	mov	r3, r1
   13964:	strd	r2, [fp, #-164]	; 0xffffff5c
   13968:	strd	r2, [fp, #-164]	; 0xffffff5c
   1396c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   13970:	mov	r0, r3
   13974:	mov	r1, #0
   13978:	ldr	r3, [fp, #-140]	; 0xffffff74
   1397c:	mov	r2, r3
   13980:	mov	r3, #0
   13984:	mul	lr, r2, r1
   13988:	mul	ip, r0, r3
   1398c:	add	ip, lr, ip
   13990:	umull	r2, r3, r0, r2
   13994:	add	r1, ip, r3
   13998:	mov	r3, r1
   1399c:	strd	r2, [fp, #-52]	; 0xffffffcc
   139a0:	strd	r2, [fp, #-52]	; 0xffffffcc
   139a4:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   139a8:	mov	r0, #0
   139ac:	mov	r1, #0
   139b0:	mov	r0, r3
   139b4:	mov	r1, #0
   139b8:	ldrd	r2, [fp, #-156]	; 0xffffff64
   139bc:	adds	r4, r2, r0
   139c0:	adc	r5, r3, r1
   139c4:	strd	r4, [fp, #-156]	; 0xffffff64
   139c8:	ldrd	r0, [fp, #-156]	; 0xffffff64
   139cc:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   139d0:	adds	r8, r0, r2
   139d4:	adc	r9, r1, r3
   139d8:	strd	r8, [fp, #-156]	; 0xffffff64
   139dc:	ldrd	r0, [fp, #-156]	; 0xffffff64
   139e0:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   139e4:	cmp	r1, r3
   139e8:	cmpeq	r0, r2
   139ec:	bcs	13a10 <__assert_fail@plt+0x28b8>
   139f0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   139f4:	adds	r1, r2, #0
   139f8:	str	r1, [fp, #-788]	; 0xfffffcec
   139fc:	adc	r3, r3, #1
   13a00:	str	r3, [fp, #-784]	; 0xfffffcf0
   13a04:	sub	r3, fp, #788	; 0x314
   13a08:	ldrd	r2, [r3]
   13a0c:	strd	r2, [fp, #-52]	; 0xffffffcc
   13a10:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13a14:	mov	r0, #0
   13a18:	mov	r1, #0
   13a1c:	mov	r0, r3
   13a20:	mov	r1, #0
   13a24:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   13a28:	adds	ip, r2, r0
   13a2c:	str	ip, [fp, #-796]	; 0xfffffce4
   13a30:	adc	r3, r3, r1
   13a34:	str	r3, [fp, #-792]	; 0xfffffce8
   13a38:	sub	r3, fp, #796	; 0x31c
   13a3c:	ldrd	r2, [r3]
   13a40:	strd	r2, [fp, #-172]	; 0xffffff54
   13a44:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13a48:	mov	r4, #0
   13a4c:	mov	r5, #0
   13a50:	mov	r5, r2
   13a54:	mov	r4, #0
   13a58:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   13a5c:	mvn	r2, #0
   13a60:	mov	r3, #0
   13a64:	and	r6, r0, r2
   13a68:	and	r7, r1, r3
   13a6c:	adds	r3, r4, r6
   13a70:	str	r3, [fp, #-804]	; 0xfffffcdc
   13a74:	adc	r3, r5, r7
   13a78:	str	r3, [fp, #-800]	; 0xfffffce0
   13a7c:	sub	r3, fp, #804	; 0x324
   13a80:	ldrd	r2, [r3]
   13a84:	strd	r2, [fp, #-180]	; 0xffffff4c
   13a88:	ldrd	r2, [fp, #4]
   13a8c:	strd	r2, [fp, #-188]	; 0xffffff44
   13a90:	ldrd	r2, [fp, #12]
   13a94:	strd	r2, [fp, #-196]	; 0xffffff3c
   13a98:	ldr	r3, [fp, #-188]	; 0xffffff44
   13a9c:	str	r3, [fp, #-200]	; 0xffffff38
   13aa0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   13aa4:	mov	r0, #0
   13aa8:	mov	r1, #0
   13aac:	mov	r0, r3
   13ab0:	mov	r1, #0
   13ab4:	mov	r3, r0
   13ab8:	str	r3, [fp, #-204]	; 0xffffff34
   13abc:	ldr	r3, [fp, #-196]	; 0xffffff3c
   13ac0:	str	r3, [fp, #-208]	; 0xffffff30
   13ac4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13ac8:	mov	r0, #0
   13acc:	mov	r1, #0
   13ad0:	mov	r0, r3
   13ad4:	mov	r1, #0
   13ad8:	mov	r3, r0
   13adc:	str	r3, [fp, #-212]	; 0xffffff2c
   13ae0:	ldr	r3, [fp, #-200]	; 0xffffff38
   13ae4:	mov	r0, r3
   13ae8:	mov	r1, #0
   13aec:	ldr	r3, [fp, #-208]	; 0xffffff30
   13af0:	mov	r2, r3
   13af4:	mov	r3, #0
   13af8:	mul	lr, r2, r1
   13afc:	mul	ip, r0, r3
   13b00:	add	ip, lr, ip
   13b04:	umull	r2, r3, r0, r2
   13b08:	add	r1, ip, r3
   13b0c:	mov	r3, r1
   13b10:	strd	r2, [fp, #-220]	; 0xffffff24
   13b14:	strd	r2, [fp, #-220]	; 0xffffff24
   13b18:	ldr	r3, [fp, #-200]	; 0xffffff38
   13b1c:	mov	r0, r3
   13b20:	mov	r1, #0
   13b24:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13b28:	mov	r2, r3
   13b2c:	mov	r3, #0
   13b30:	mul	lr, r2, r1
   13b34:	mul	ip, r0, r3
   13b38:	add	ip, lr, ip
   13b3c:	umull	r2, r3, r0, r2
   13b40:	add	r1, ip, r3
   13b44:	mov	r3, r1
   13b48:	strd	r2, [fp, #-228]	; 0xffffff1c
   13b4c:	strd	r2, [fp, #-228]	; 0xffffff1c
   13b50:	ldr	r3, [fp, #-204]	; 0xffffff34
   13b54:	mov	r0, r3
   13b58:	mov	r1, #0
   13b5c:	ldr	r3, [fp, #-208]	; 0xffffff30
   13b60:	mov	r2, r3
   13b64:	mov	r3, #0
   13b68:	mul	lr, r2, r1
   13b6c:	mul	ip, r0, r3
   13b70:	add	ip, lr, ip
   13b74:	umull	r2, r3, r0, r2
   13b78:	add	r1, ip, r3
   13b7c:	mov	r3, r1
   13b80:	strd	r2, [fp, #-236]	; 0xffffff14
   13b84:	strd	r2, [fp, #-236]	; 0xffffff14
   13b88:	ldr	r3, [fp, #-204]	; 0xffffff34
   13b8c:	mov	r0, r3
   13b90:	mov	r1, #0
   13b94:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13b98:	mov	r2, r3
   13b9c:	mov	r3, #0
   13ba0:	mul	lr, r2, r1
   13ba4:	mul	ip, r0, r3
   13ba8:	add	ip, lr, ip
   13bac:	umull	r2, r3, r0, r2
   13bb0:	add	r1, ip, r3
   13bb4:	mov	r3, r1
   13bb8:	strd	r2, [fp, #-60]	; 0xffffffc4
   13bbc:	strd	r2, [fp, #-60]	; 0xffffffc4
   13bc0:	ldrd	r2, [fp, #-220]	; 0xffffff24
   13bc4:	mov	r0, #0
   13bc8:	mov	r1, #0
   13bcc:	mov	r0, r3
   13bd0:	mov	r1, #0
   13bd4:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   13bd8:	adds	ip, r2, r0
   13bdc:	str	ip, [fp, #-812]	; 0xfffffcd4
   13be0:	adc	r3, r3, r1
   13be4:	str	r3, [fp, #-808]	; 0xfffffcd8
   13be8:	sub	r3, fp, #812	; 0x32c
   13bec:	ldrd	r2, [r3]
   13bf0:	strd	r2, [fp, #-228]	; 0xffffff1c
   13bf4:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   13bf8:	ldrd	r2, [fp, #-236]	; 0xffffff14
   13bfc:	adds	ip, r0, r2
   13c00:	str	ip, [fp, #-820]	; 0xfffffccc
   13c04:	adc	r3, r1, r3
   13c08:	str	r3, [fp, #-816]	; 0xfffffcd0
   13c0c:	sub	r3, fp, #820	; 0x334
   13c10:	ldrd	r2, [r3]
   13c14:	strd	r2, [fp, #-228]	; 0xffffff1c
   13c18:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   13c1c:	ldrd	r2, [fp, #-236]	; 0xffffff14
   13c20:	cmp	r1, r3
   13c24:	cmpeq	r0, r2
   13c28:	bcs	13c4c <__assert_fail@plt+0x2af4>
   13c2c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13c30:	adds	r1, r2, #0
   13c34:	str	r1, [fp, #-828]	; 0xfffffcc4
   13c38:	adc	r3, r3, #1
   13c3c:	str	r3, [fp, #-824]	; 0xfffffcc8
   13c40:	sub	r3, fp, #828	; 0x33c
   13c44:	ldrd	r2, [r3]
   13c48:	strd	r2, [fp, #-60]	; 0xffffffc4
   13c4c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   13c50:	mov	r0, #0
   13c54:	mov	r1, #0
   13c58:	mov	r0, r3
   13c5c:	mov	r1, #0
   13c60:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13c64:	adds	ip, r2, r0
   13c68:	str	ip, [fp, #-836]	; 0xfffffcbc
   13c6c:	adc	r3, r3, r1
   13c70:	str	r3, [fp, #-832]	; 0xfffffcc0
   13c74:	sub	r3, fp, #836	; 0x344
   13c78:	ldrd	r2, [r3]
   13c7c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13c80:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   13c84:	mov	r4, #0
   13c88:	mov	r5, #0
   13c8c:	mov	r5, r2
   13c90:	mov	r4, #0
   13c94:	ldrd	r0, [fp, #-220]	; 0xffffff24
   13c98:	mvn	r2, #0
   13c9c:	mov	r3, #0
   13ca0:	and	ip, r0, r2
   13ca4:	str	ip, [fp, #-708]	; 0xfffffd3c
   13ca8:	and	r3, r1, r3
   13cac:	str	r3, [fp, #-704]	; 0xfffffd40
   13cb0:	sub	r3, fp, #708	; 0x2c4
   13cb4:	ldrd	r2, [r3]
   13cb8:	mov	r1, r2
   13cbc:	adds	r1, r4, r1
   13cc0:	str	r1, [fp, #-844]	; 0xfffffcb4
   13cc4:	adc	r3, r5, r3
   13cc8:	str	r3, [fp, #-840]	; 0xfffffcb8
   13ccc:	sub	r3, fp, #844	; 0x34c
   13cd0:	ldrd	r2, [r3]
   13cd4:	strd	r2, [fp, #-44]	; 0xffffffd4
   13cd8:	ldr	r2, [fp, #48]	; 0x30
   13cdc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13ce0:	mul	r1, r3, r2
   13ce4:	ldr	r2, [fp, #-176]	; 0xffffff50
   13ce8:	ldr	r3, [fp, #44]	; 0x2c
   13cec:	mul	r3, r3, r2
   13cf0:	add	r1, r1, r3
   13cf4:	ldr	r2, [fp, #44]	; 0x2c
   13cf8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13cfc:	umull	r2, r3, r2, r3
   13d00:	add	r1, r1, r3
   13d04:	mov	r3, r1
   13d08:	strd	r2, [fp, #-244]	; 0xffffff0c
   13d0c:	strd	r2, [fp, #-244]	; 0xffffff0c
   13d10:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   13d14:	strd	r2, [fp, #-252]	; 0xffffff04
   13d18:	ldrd	r2, [fp, #36]	; 0x24
   13d1c:	sub	r1, fp, #260	; 0x104
   13d20:	strd	r2, [r1]
   13d24:	ldr	r3, [fp, #-252]	; 0xffffff04
   13d28:	str	r3, [fp, #-264]	; 0xfffffef8
   13d2c:	ldrd	r2, [fp, #-252]	; 0xffffff04
   13d30:	mov	r0, #0
   13d34:	mov	r1, #0
   13d38:	mov	r0, r3
   13d3c:	mov	r1, #0
   13d40:	mov	r3, r0
   13d44:	str	r3, [fp, #-268]	; 0xfffffef4
   13d48:	ldr	r3, [fp, #-260]	; 0xfffffefc
   13d4c:	str	r3, [fp, #-272]	; 0xfffffef0
   13d50:	sub	r3, fp, #260	; 0x104
   13d54:	ldrd	r2, [r3]
   13d58:	mov	r0, #0
   13d5c:	mov	r1, #0
   13d60:	mov	r0, r3
   13d64:	mov	r1, #0
   13d68:	mov	r3, r0
   13d6c:	str	r3, [fp, #-276]	; 0xfffffeec
   13d70:	ldr	r3, [fp, #-264]	; 0xfffffef8
   13d74:	mov	r4, r3
   13d78:	mov	r5, #0
   13d7c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   13d80:	mov	r2, r3
   13d84:	mov	r3, #0
   13d88:	sub	r1, fp, #284	; 0x11c
   13d8c:	mov	ip, r1
   13d90:	mul	r0, r2, r5
   13d94:	mul	r1, r4, r3
   13d98:	add	r1, r0, r1
   13d9c:	umull	r2, r3, r4, r2
   13da0:	add	r1, r1, r3
   13da4:	mov	r3, r1
   13da8:	strd	r2, [ip]
   13dac:	strd	r2, [ip]
   13db0:	ldr	r3, [fp, #-264]	; 0xfffffef8
   13db4:	mov	r4, r3
   13db8:	mov	r5, #0
   13dbc:	ldr	r3, [fp, #-276]	; 0xfffffeec
   13dc0:	mov	r2, r3
   13dc4:	mov	r3, #0
   13dc8:	sub	r1, fp, #284	; 0x11c
   13dcc:	mov	ip, r1
   13dd0:	mul	r0, r2, r5
   13dd4:	mul	r1, r4, r3
   13dd8:	add	r1, r0, r1
   13ddc:	umull	r2, r3, r4, r2
   13de0:	add	r1, r1, r3
   13de4:	mov	r3, r1
   13de8:	strd	r2, [ip, #-8]
   13dec:	strd	r2, [ip, #-8]
   13df0:	ldr	r3, [fp, #-268]	; 0xfffffef4
   13df4:	mov	r4, r3
   13df8:	mov	r5, #0
   13dfc:	ldr	r3, [fp, #-272]	; 0xfffffef0
   13e00:	mov	r2, r3
   13e04:	mov	r3, #0
   13e08:	sub	r1, fp, #300	; 0x12c
   13e0c:	mov	ip, r1
   13e10:	mul	r0, r2, r5
   13e14:	mul	r1, r4, r3
   13e18:	add	r1, r0, r1
   13e1c:	umull	r2, r3, r4, r2
   13e20:	add	r1, r1, r3
   13e24:	mov	r3, r1
   13e28:	strd	r2, [ip]
   13e2c:	strd	r2, [ip]
   13e30:	ldr	r3, [fp, #-268]	; 0xfffffef4
   13e34:	mov	r0, r3
   13e38:	mov	r1, #0
   13e3c:	ldr	r3, [fp, #-276]	; 0xfffffeec
   13e40:	mov	r2, r3
   13e44:	mov	r3, #0
   13e48:	mul	lr, r2, r1
   13e4c:	mul	ip, r0, r3
   13e50:	add	ip, lr, ip
   13e54:	umull	r2, r3, r0, r2
   13e58:	add	r1, ip, r3
   13e5c:	mov	r3, r1
   13e60:	strd	r2, [fp, #-68]	; 0xffffffbc
   13e64:	strd	r2, [fp, #-68]	; 0xffffffbc
   13e68:	sub	r3, fp, #284	; 0x11c
   13e6c:	ldrd	r2, [r3]
   13e70:	mov	r0, #0
   13e74:	mov	r1, #0
   13e78:	mov	r0, r3
   13e7c:	mov	r1, #0
   13e80:	sub	r3, fp, #284	; 0x11c
   13e84:	mov	ip, r3
   13e88:	sub	r3, fp, #284	; 0x11c
   13e8c:	ldrd	r2, [r3, #-8]
   13e90:	adds	lr, r2, r0
   13e94:	str	lr, [fp, #-852]	; 0xfffffcac
   13e98:	adc	r3, r3, r1
   13e9c:	str	r3, [fp, #-848]	; 0xfffffcb0
   13ea0:	sub	r3, fp, #852	; 0x354
   13ea4:	ldrd	r2, [r3]
   13ea8:	strd	r2, [ip, #-8]
   13eac:	sub	r3, fp, #284	; 0x11c
   13eb0:	mov	ip, r3
   13eb4:	sub	r3, fp, #284	; 0x11c
   13eb8:	mov	r2, r3
   13ebc:	sub	r3, fp, #300	; 0x12c
   13ec0:	ldrd	r0, [r2, #-8]
   13ec4:	ldrd	r2, [r3]
   13ec8:	adds	lr, r0, r2
   13ecc:	str	lr, [fp, #-860]	; 0xfffffca4
   13ed0:	adc	r3, r1, r3
   13ed4:	str	r3, [fp, #-856]	; 0xfffffca8
   13ed8:	sub	r3, fp, #860	; 0x35c
   13edc:	ldrd	r2, [r3]
   13ee0:	strd	r2, [ip, #-8]
   13ee4:	sub	r3, fp, #284	; 0x11c
   13ee8:	mov	r2, r3
   13eec:	sub	r3, fp, #300	; 0x12c
   13ef0:	ldrd	r0, [r2, #-8]
   13ef4:	ldrd	r2, [r3]
   13ef8:	cmp	r1, r3
   13efc:	cmpeq	r0, r2
   13f00:	bcs	13f24 <__assert_fail@plt+0x2dcc>
   13f04:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13f08:	adds	r1, r2, #0
   13f0c:	str	r1, [fp, #-868]	; 0xfffffc9c
   13f10:	adc	r3, r3, #1
   13f14:	str	r3, [fp, #-864]	; 0xfffffca0
   13f18:	sub	r3, fp, #868	; 0x364
   13f1c:	ldrd	r2, [r3]
   13f20:	strd	r2, [fp, #-68]	; 0xffffffbc
   13f24:	sub	r3, fp, #284	; 0x11c
   13f28:	ldrd	r2, [r3, #-8]
   13f2c:	mov	r0, #0
   13f30:	mov	r1, #0
   13f34:	mov	r0, r3
   13f38:	mov	r1, #0
   13f3c:	sub	r3, fp, #300	; 0x12c
   13f40:	mov	ip, r3
   13f44:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13f48:	adds	lr, r2, r0
   13f4c:	str	lr, [fp, #-876]	; 0xfffffc94
   13f50:	adc	r3, r3, r1
   13f54:	str	r3, [fp, #-872]	; 0xfffffc98
   13f58:	sub	r3, fp, #876	; 0x36c
   13f5c:	ldrd	r2, [r3]
   13f60:	strd	r2, [ip, #-8]
   13f64:	sub	r3, fp, #284	; 0x11c
   13f68:	ldrd	r2, [r3, #-8]
   13f6c:	mov	r4, #0
   13f70:	mov	r5, #0
   13f74:	mov	r5, r2
   13f78:	mov	r4, #0
   13f7c:	sub	r3, fp, #284	; 0x11c
   13f80:	ldrd	r0, [r3]
   13f84:	mvn	r2, #0
   13f88:	mov	r3, #0
   13f8c:	and	ip, r0, r2
   13f90:	str	ip, [fp, #-716]	; 0xfffffd34
   13f94:	and	r3, r1, r3
   13f98:	str	r3, [fp, #-712]	; 0xfffffd38
   13f9c:	sub	r3, fp, #316	; 0x13c
   13fa0:	sub	r2, fp, #716	; 0x2cc
   13fa4:	ldrd	r0, [r2]
   13fa8:	mov	r2, r0
   13fac:	adds	r2, r4, r2
   13fb0:	str	r2, [fp, #-884]	; 0xfffffc8c
   13fb4:	mov	r2, r1
   13fb8:	adc	r2, r5, r2
   13fbc:	str	r2, [fp, #-880]	; 0xfffffc90
   13fc0:	sub	r2, fp, #884	; 0x374
   13fc4:	ldrd	r0, [r2]
   13fc8:	strd	r0, [r3]
   13fcc:	sub	r3, fp, #316	; 0x13c
   13fd0:	mov	r1, r3
   13fd4:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   13fd8:	strd	r2, [r1, #-8]
   13fdc:	sub	r3, fp, #332	; 0x14c
   13fe0:	mov	r1, r3
   13fe4:	ldrd	r2, [fp, #28]
   13fe8:	strd	r2, [r1]
   13fec:	sub	r3, fp, #316	; 0x13c
   13ff0:	ldr	r3, [r3, #-8]
   13ff4:	str	r3, [fp, #-336]	; 0xfffffeb0
   13ff8:	sub	r3, fp, #316	; 0x13c
   13ffc:	ldrd	r2, [r3, #-8]
   14000:	mov	r0, #0
   14004:	mov	r1, #0
   14008:	mov	r0, r3
   1400c:	mov	r1, #0
   14010:	mov	r3, r0
   14014:	str	r3, [fp, #-340]	; 0xfffffeac
   14018:	sub	r3, fp, #332	; 0x14c
   1401c:	ldr	r3, [r3]
   14020:	str	r3, [fp, #-344]	; 0xfffffea8
   14024:	sub	r3, fp, #332	; 0x14c
   14028:	ldrd	r2, [r3]
   1402c:	mov	r0, #0
   14030:	mov	r1, #0
   14034:	mov	r0, r3
   14038:	mov	r1, #0
   1403c:	mov	r3, r0
   14040:	str	r3, [fp, #-348]	; 0xfffffea4
   14044:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   14048:	mov	r4, r3
   1404c:	mov	r5, #0
   14050:	ldr	r3, [fp, #-344]	; 0xfffffea8
   14054:	mov	r2, r3
   14058:	mov	r3, #0
   1405c:	sub	r1, fp, #348	; 0x15c
   14060:	mov	ip, r1
   14064:	mul	r0, r2, r5
   14068:	mul	r1, r4, r3
   1406c:	add	r1, r0, r1
   14070:	umull	r2, r3, r4, r2
   14074:	add	r1, r1, r3
   14078:	mov	r3, r1
   1407c:	strd	r2, [ip, #-8]
   14080:	strd	r2, [ip, #-8]
   14084:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   14088:	mov	r4, r3
   1408c:	mov	r5, #0
   14090:	ldr	r3, [fp, #-348]	; 0xfffffea4
   14094:	mov	r2, r3
   14098:	mov	r3, #0
   1409c:	sub	r1, fp, #364	; 0x16c
   140a0:	mov	ip, r1
   140a4:	mul	r0, r2, r5
   140a8:	mul	r1, r4, r3
   140ac:	add	r1, r0, r1
   140b0:	umull	r2, r3, r4, r2
   140b4:	add	r1, r1, r3
   140b8:	mov	r3, r1
   140bc:	strd	r2, [ip]
   140c0:	strd	r2, [ip]
   140c4:	ldr	r3, [fp, #-340]	; 0xfffffeac
   140c8:	mov	r4, r3
   140cc:	mov	r5, #0
   140d0:	ldr	r3, [fp, #-344]	; 0xfffffea8
   140d4:	mov	r2, r3
   140d8:	mov	r3, #0
   140dc:	sub	r1, fp, #364	; 0x16c
   140e0:	mov	ip, r1
   140e4:	mul	r0, r2, r5
   140e8:	mul	r1, r4, r3
   140ec:	add	r1, r0, r1
   140f0:	umull	r2, r3, r4, r2
   140f4:	add	r1, r1, r3
   140f8:	mov	r3, r1
   140fc:	strd	r2, [ip, #-8]
   14100:	strd	r2, [ip, #-8]
   14104:	ldr	r3, [fp, #-340]	; 0xfffffeac
   14108:	mov	r0, r3
   1410c:	mov	r1, #0
   14110:	ldr	r3, [fp, #-348]	; 0xfffffea4
   14114:	mov	r2, r3
   14118:	mov	r3, #0
   1411c:	mul	lr, r2, r1
   14120:	mul	ip, r0, r3
   14124:	add	ip, lr, ip
   14128:	umull	r2, r3, r0, r2
   1412c:	add	r1, ip, r3
   14130:	mov	r3, r1
   14134:	strd	r2, [fp, #-76]	; 0xffffffb4
   14138:	strd	r2, [fp, #-76]	; 0xffffffb4
   1413c:	sub	r3, fp, #348	; 0x15c
   14140:	ldrd	r2, [r3, #-8]
   14144:	mov	r0, #0
   14148:	mov	r1, #0
   1414c:	mov	r0, r3
   14150:	mov	r1, #0
   14154:	sub	r3, fp, #364	; 0x16c
   14158:	mov	ip, r3
   1415c:	sub	r3, fp, #364	; 0x16c
   14160:	ldrd	r2, [r3]
   14164:	adds	lr, r2, r0
   14168:	str	lr, [fp, #-892]	; 0xfffffc84
   1416c:	adc	r3, r3, r1
   14170:	str	r3, [fp, #-888]	; 0xfffffc88
   14174:	sub	r3, fp, #892	; 0x37c
   14178:	ldrd	r2, [r3]
   1417c:	strd	r2, [ip]
   14180:	sub	r3, fp, #364	; 0x16c
   14184:	mov	ip, r3
   14188:	sub	r3, fp, #364	; 0x16c
   1418c:	mov	r2, r3
   14190:	sub	r3, fp, #364	; 0x16c
   14194:	ldrd	r0, [r2]
   14198:	ldrd	r2, [r3, #-8]
   1419c:	adds	lr, r0, r2
   141a0:	str	lr, [fp, #-900]	; 0xfffffc7c
   141a4:	adc	r3, r1, r3
   141a8:	str	r3, [fp, #-896]	; 0xfffffc80
   141ac:	sub	r3, fp, #900	; 0x384
   141b0:	ldrd	r2, [r3]
   141b4:	strd	r2, [ip]
   141b8:	sub	r3, fp, #364	; 0x16c
   141bc:	mov	r2, r3
   141c0:	sub	r3, fp, #364	; 0x16c
   141c4:	ldrd	r0, [r2]
   141c8:	ldrd	r2, [r3, #-8]
   141cc:	cmp	r1, r3
   141d0:	cmpeq	r0, r2
   141d4:	bcs	141f8 <__assert_fail@plt+0x30a0>
   141d8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   141dc:	adds	r1, r2, #0
   141e0:	str	r1, [fp, #-908]	; 0xfffffc74
   141e4:	adc	r3, r3, #1
   141e8:	str	r3, [fp, #-904]	; 0xfffffc78
   141ec:	sub	r3, fp, #908	; 0x38c
   141f0:	ldrd	r2, [r3]
   141f4:	strd	r2, [fp, #-76]	; 0xffffffb4
   141f8:	sub	r3, fp, #364	; 0x16c
   141fc:	ldrd	r2, [r3]
   14200:	mov	r0, #0
   14204:	mov	r1, #0
   14208:	mov	r0, r3
   1420c:	mov	r1, #0
   14210:	sub	r3, fp, #380	; 0x17c
   14214:	mov	ip, r3
   14218:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1421c:	adds	lr, r2, r0
   14220:	str	lr, [fp, #-916]	; 0xfffffc6c
   14224:	adc	r3, r3, r1
   14228:	str	r3, [fp, #-912]	; 0xfffffc70
   1422c:	sub	r3, fp, #916	; 0x394
   14230:	ldrd	r2, [r3]
   14234:	strd	r2, [ip]
   14238:	sub	r3, fp, #364	; 0x16c
   1423c:	ldrd	r2, [r3]
   14240:	mov	r4, #0
   14244:	mov	r5, #0
   14248:	mov	r5, r2
   1424c:	mov	r4, #0
   14250:	sub	r3, fp, #348	; 0x15c
   14254:	ldrd	r0, [r3, #-8]
   14258:	mvn	r2, #0
   1425c:	mov	r3, #0
   14260:	and	ip, r0, r2
   14264:	str	ip, [fp, #-724]	; 0xfffffd2c
   14268:	and	r3, r1, r3
   1426c:	str	r3, [fp, #-720]	; 0xfffffd30
   14270:	sub	r3, fp, #380	; 0x17c
   14274:	sub	r2, fp, #724	; 0x2d4
   14278:	ldrd	r0, [r2]
   1427c:	mov	r2, r0
   14280:	adds	r2, r4, r2
   14284:	str	r2, [fp, #-924]	; 0xfffffc64
   14288:	mov	r2, r1
   1428c:	adc	r2, r5, r2
   14290:	str	r2, [fp, #-920]	; 0xfffffc68
   14294:	sub	r2, fp, #924	; 0x39c
   14298:	ldrd	r0, [r2]
   1429c:	strd	r0, [r3, #-8]
   142a0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   142a4:	ldr	r3, [fp, #-176]	; 0xffffff50
   142a8:	orr	r3, r2, r3
   142ac:	cmp	r3, #0
   142b0:	movne	r3, #1
   142b4:	moveq	r3, #0
   142b8:	uxtb	r3, r3
   142bc:	uxtb	r0, r3
   142c0:	mov	r1, #0
   142c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   142c8:	adds	ip, r2, r0
   142cc:	str	ip, [fp, #-932]	; 0xfffffc5c
   142d0:	adc	r3, r3, r1
   142d4:	str	r3, [fp, #-928]	; 0xfffffc60
   142d8:	sub	r3, fp, #932	; 0x3a4
   142dc:	ldrd	r2, [r3]
   142e0:	strd	r2, [fp, #-44]	; 0xffffffd4
   142e4:	sub	r3, fp, #396	; 0x18c
   142e8:	mov	ip, r3
   142ec:	sub	r3, fp, #300	; 0x12c
   142f0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   142f4:	ldrd	r2, [r3, #-8]
   142f8:	adds	lr, r0, r2
   142fc:	str	lr, [fp, #-940]	; 0xfffffc54
   14300:	adc	r3, r1, r3
   14304:	str	r3, [fp, #-936]	; 0xfffffc58
   14308:	sub	r3, fp, #940	; 0x3ac
   1430c:	ldrd	r2, [r3]
   14310:	strd	r2, [ip]
   14314:	sub	r3, fp, #396	; 0x18c
   14318:	ldrd	r0, [r3]
   1431c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14320:	cmp	r1, r3
   14324:	cmpeq	r0, r2
   14328:	movcc	r3, #1
   1432c:	movcs	r3, #0
   14330:	uxtb	r3, r3
   14334:	uxtb	r0, r3
   14338:	mov	r1, #0
   1433c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14340:	adds	ip, r2, r0
   14344:	str	ip, [fp, #-948]	; 0xfffffc4c
   14348:	adc	r3, r3, r1
   1434c:	str	r3, [fp, #-944]	; 0xfffffc50
   14350:	sub	r3, fp, #948	; 0x3b4
   14354:	ldrd	r2, [r3]
   14358:	strd	r2, [fp, #-36]	; 0xffffffdc
   1435c:	sub	r3, fp, #396	; 0x18c
   14360:	ldrd	r2, [r3]
   14364:	strd	r2, [fp, #-44]	; 0xffffffd4
   14368:	sub	r3, fp, #396	; 0x18c
   1436c:	mov	ip, r3
   14370:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14374:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14378:	adds	lr, r0, r2
   1437c:	str	lr, [fp, #-956]	; 0xfffffc44
   14380:	adc	r3, r1, r3
   14384:	str	r3, [fp, #-952]	; 0xfffffc48
   14388:	sub	r3, fp, #956	; 0x3bc
   1438c:	ldrd	r2, [r3]
   14390:	strd	r2, [ip, #-8]
   14394:	sub	r3, fp, #396	; 0x18c
   14398:	ldrd	r0, [r3, #-8]
   1439c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   143a0:	cmp	r1, r3
   143a4:	cmpeq	r0, r2
   143a8:	movcc	r3, #1
   143ac:	movcs	r3, #0
   143b0:	uxtb	r3, r3
   143b4:	uxtb	r0, r3
   143b8:	mov	r1, #0
   143bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   143c0:	adds	ip, r2, r0
   143c4:	str	ip, [fp, #-964]	; 0xfffffc3c
   143c8:	adc	r3, r3, r1
   143cc:	str	r3, [fp, #-960]	; 0xfffffc40
   143d0:	sub	r3, fp, #964	; 0x3c4
   143d4:	ldrd	r2, [r3]
   143d8:	strd	r2, [fp, #-36]	; 0xffffffdc
   143dc:	sub	r3, fp, #396	; 0x18c
   143e0:	ldrd	r2, [r3, #-8]
   143e4:	strd	r2, [fp, #-44]	; 0xffffffd4
   143e8:	sub	r3, fp, #412	; 0x19c
   143ec:	mov	ip, r3
   143f0:	sub	r3, fp, #380	; 0x17c
   143f4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   143f8:	ldrd	r2, [r3, #-8]
   143fc:	adds	lr, r0, r2
   14400:	str	lr, [fp, #-972]	; 0xfffffc34
   14404:	adc	r3, r1, r3
   14408:	str	r3, [fp, #-968]	; 0xfffffc38
   1440c:	sub	r3, fp, #972	; 0x3cc
   14410:	ldrd	r2, [r3]
   14414:	strd	r2, [ip]
   14418:	sub	r3, fp, #380	; 0x17c
   1441c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14420:	ldrd	r2, [r3]
   14424:	adds	ip, r0, r2
   14428:	str	ip, [fp, #-732]	; 0xfffffd24
   1442c:	adc	r3, r1, r3
   14430:	str	r3, [fp, #-728]	; 0xfffffd28
   14434:	sub	r3, fp, #412	; 0x19c
   14438:	ldrd	r0, [r3]
   1443c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14440:	cmp	r1, r3
   14444:	cmpeq	r0, r2
   14448:	movcc	r3, #1
   1444c:	movcs	r3, #0
   14450:	uxtb	r3, r3
   14454:	uxtb	r2, r3
   14458:	mov	r3, #0
   1445c:	sub	r1, fp, #732	; 0x2dc
   14460:	ldrd	r0, [r1]
   14464:	mov	ip, r0
   14468:	adds	ip, ip, r2
   1446c:	str	ip, [fp, #-980]	; 0xfffffc2c
   14470:	adc	r3, r1, r3
   14474:	str	r3, [fp, #-976]	; 0xfffffc30
   14478:	sub	r3, fp, #980	; 0x3d4
   1447c:	ldrd	r2, [r3]
   14480:	strd	r2, [fp, #-36]	; 0xffffffdc
   14484:	sub	r3, fp, #412	; 0x19c
   14488:	ldrd	r2, [r3]
   1448c:	strd	r2, [fp, #-44]	; 0xffffffd4
   14490:	sub	r3, fp, #412	; 0x19c
   14494:	mov	r1, r3
   14498:	sub	r3, fp, #700	; 0x2bc
   1449c:	ldrd	r2, [r3]
   144a0:	strd	r2, [r1, #-8]
   144a4:	sub	r3, fp, #428	; 0x1ac
   144a8:	mov	r1, r3
   144ac:	ldrd	r2, [fp, #20]
   144b0:	strd	r2, [r1]
   144b4:	sub	r3, fp, #412	; 0x19c
   144b8:	ldr	r3, [r3, #-8]
   144bc:	str	r3, [fp, #-432]	; 0xfffffe50
   144c0:	sub	r3, fp, #412	; 0x19c
   144c4:	ldrd	r2, [r3, #-8]
   144c8:	mov	r0, #0
   144cc:	mov	r1, #0
   144d0:	mov	r0, r3
   144d4:	mov	r1, #0
   144d8:	mov	r3, r0
   144dc:	str	r3, [fp, #-436]	; 0xfffffe4c
   144e0:	sub	r3, fp, #428	; 0x1ac
   144e4:	ldr	r3, [r3]
   144e8:	str	r3, [fp, #-440]	; 0xfffffe48
   144ec:	sub	r3, fp, #428	; 0x1ac
   144f0:	ldrd	r2, [r3]
   144f4:	mov	r0, #0
   144f8:	mov	r1, #0
   144fc:	mov	r0, r3
   14500:	mov	r1, #0
   14504:	mov	r3, r0
   14508:	str	r3, [fp, #-444]	; 0xfffffe44
   1450c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   14510:	mov	r4, r3
   14514:	mov	r5, #0
   14518:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1451c:	mov	r2, r3
   14520:	mov	r3, #0
   14524:	sub	r1, fp, #444	; 0x1bc
   14528:	mov	ip, r1
   1452c:	mul	r0, r2, r5
   14530:	mul	r1, r4, r3
   14534:	add	r1, r0, r1
   14538:	umull	r2, r3, r4, r2
   1453c:	add	r1, r1, r3
   14540:	mov	r3, r1
   14544:	strd	r2, [ip, #-8]
   14548:	strd	r2, [ip, #-8]
   1454c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   14550:	mov	r4, r3
   14554:	mov	r5, #0
   14558:	ldr	r3, [fp, #-444]	; 0xfffffe44
   1455c:	mov	r2, r3
   14560:	mov	r3, #0
   14564:	sub	r1, fp, #460	; 0x1cc
   14568:	mov	ip, r1
   1456c:	mul	r0, r2, r5
   14570:	mul	r1, r4, r3
   14574:	add	r1, r0, r1
   14578:	umull	r2, r3, r4, r2
   1457c:	add	r1, r1, r3
   14580:	mov	r3, r1
   14584:	strd	r2, [ip]
   14588:	strd	r2, [ip]
   1458c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   14590:	mov	r4, r3
   14594:	mov	r5, #0
   14598:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1459c:	mov	r2, r3
   145a0:	mov	r3, #0
   145a4:	sub	r1, fp, #460	; 0x1cc
   145a8:	mov	ip, r1
   145ac:	mul	r0, r2, r5
   145b0:	mul	r1, r4, r3
   145b4:	add	r1, r0, r1
   145b8:	umull	r2, r3, r4, r2
   145bc:	add	r1, r1, r3
   145c0:	mov	r3, r1
   145c4:	strd	r2, [ip, #-8]
   145c8:	strd	r2, [ip, #-8]
   145cc:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   145d0:	mov	r0, r3
   145d4:	mov	r1, #0
   145d8:	ldr	r3, [fp, #-444]	; 0xfffffe44
   145dc:	mov	r2, r3
   145e0:	mov	r3, #0
   145e4:	mul	lr, r2, r1
   145e8:	mul	ip, r0, r3
   145ec:	add	ip, lr, ip
   145f0:	umull	r2, r3, r0, r2
   145f4:	add	r1, ip, r3
   145f8:	mov	r3, r1
   145fc:	strd	r2, [fp, #-84]	; 0xffffffac
   14600:	strd	r2, [fp, #-84]	; 0xffffffac
   14604:	sub	r3, fp, #444	; 0x1bc
   14608:	ldrd	r2, [r3, #-8]
   1460c:	mov	r0, #0
   14610:	mov	r1, #0
   14614:	mov	r0, r3
   14618:	mov	r1, #0
   1461c:	sub	r3, fp, #460	; 0x1cc
   14620:	mov	ip, r3
   14624:	sub	r3, fp, #460	; 0x1cc
   14628:	ldrd	r2, [r3]
   1462c:	adds	lr, r2, r0
   14630:	str	lr, [fp, #-988]	; 0xfffffc24
   14634:	adc	r3, r3, r1
   14638:	str	r3, [fp, #-984]	; 0xfffffc28
   1463c:	sub	r3, fp, #988	; 0x3dc
   14640:	ldrd	r2, [r3]
   14644:	strd	r2, [ip]
   14648:	sub	r3, fp, #460	; 0x1cc
   1464c:	mov	ip, r3
   14650:	sub	r3, fp, #460	; 0x1cc
   14654:	mov	r2, r3
   14658:	sub	r3, fp, #460	; 0x1cc
   1465c:	ldrd	r0, [r2]
   14660:	ldrd	r2, [r3, #-8]
   14664:	adds	lr, r0, r2
   14668:	str	lr, [fp, #-996]	; 0xfffffc1c
   1466c:	adc	r3, r1, r3
   14670:	str	r3, [fp, #-992]	; 0xfffffc20
   14674:	sub	r3, fp, #996	; 0x3e4
   14678:	ldrd	r2, [r3]
   1467c:	strd	r2, [ip]
   14680:	sub	r3, fp, #460	; 0x1cc
   14684:	mov	r2, r3
   14688:	sub	r3, fp, #460	; 0x1cc
   1468c:	ldrd	r0, [r2]
   14690:	ldrd	r2, [r3, #-8]
   14694:	cmp	r1, r3
   14698:	cmpeq	r0, r2
   1469c:	bcs	146c0 <__assert_fail@plt+0x3568>
   146a0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   146a4:	adds	r1, r2, #0
   146a8:	str	r1, [fp, #-1004]	; 0xfffffc14
   146ac:	adc	r3, r3, #1
   146b0:	str	r3, [fp, #-1000]	; 0xfffffc18
   146b4:	sub	r3, fp, #1004	; 0x3ec
   146b8:	ldrd	r2, [r3]
   146bc:	strd	r2, [fp, #-84]	; 0xffffffac
   146c0:	sub	r3, fp, #460	; 0x1cc
   146c4:	ldrd	r2, [r3]
   146c8:	mov	r0, #0
   146cc:	mov	r1, #0
   146d0:	mov	r0, r3
   146d4:	mov	r1, #0
   146d8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   146dc:	adds	ip, r2, r0
   146e0:	str	ip, [fp, #-1012]	; 0xfffffc0c
   146e4:	adc	r3, r3, r1
   146e8:	str	r3, [fp, #-1008]	; 0xfffffc10
   146ec:	sub	r3, fp, #1012	; 0x3f4
   146f0:	ldrd	r2, [r3]
   146f4:	strd	r2, [fp, #-172]	; 0xffffff54
   146f8:	sub	r3, fp, #460	; 0x1cc
   146fc:	ldrd	r2, [r3]
   14700:	mov	r4, #0
   14704:	mov	r5, #0
   14708:	mov	r5, r2
   1470c:	mov	r4, #0
   14710:	sub	r3, fp, #444	; 0x1bc
   14714:	ldrd	r0, [r3, #-8]
   14718:	mvn	r2, #0
   1471c:	mov	r3, #0
   14720:	and	ip, r0, r2
   14724:	str	ip, [fp, #-740]	; 0xfffffd1c
   14728:	and	r3, r1, r3
   1472c:	str	r3, [fp, #-736]	; 0xfffffd20
   14730:	sub	r3, fp, #740	; 0x2e4
   14734:	ldrd	r2, [r3]
   14738:	mov	r1, r2
   1473c:	adds	r1, r4, r1
   14740:	str	r1, [fp, #-1020]	; 0xfffffc04
   14744:	adc	r3, r5, r3
   14748:	str	r3, [fp, #-1016]	; 0xfffffc08
   1474c:	sub	r3, fp, #1020	; 0x3fc
   14750:	ldrd	r2, [r3]
   14754:	strd	r2, [fp, #-180]	; 0xffffff4c
   14758:	sub	r3, fp, #476	; 0x1dc
   1475c:	mov	r1, r3
   14760:	sub	r3, fp, #700	; 0x2bc
   14764:	ldrd	r2, [r3]
   14768:	strd	r2, [r1]
   1476c:	sub	r3, fp, #476	; 0x1dc
   14770:	mov	r1, r3
   14774:	ldrd	r2, [fp, #12]
   14778:	strd	r2, [r1, #-8]
   1477c:	sub	r3, fp, #476	; 0x1dc
   14780:	ldr	r3, [r3]
   14784:	str	r3, [fp, #-488]	; 0xfffffe18
   14788:	sub	r3, fp, #476	; 0x1dc
   1478c:	ldrd	r2, [r3]
   14790:	mov	r0, #0
   14794:	mov	r1, #0
   14798:	mov	r0, r3
   1479c:	mov	r1, #0
   147a0:	mov	r3, r0
   147a4:	str	r3, [fp, #-492]	; 0xfffffe14
   147a8:	sub	r3, fp, #476	; 0x1dc
   147ac:	ldr	r3, [r3, #-8]
   147b0:	str	r3, [fp, #-496]	; 0xfffffe10
   147b4:	sub	r3, fp, #476	; 0x1dc
   147b8:	ldrd	r2, [r3, #-8]
   147bc:	mov	r0, #0
   147c0:	mov	r1, #0
   147c4:	mov	r0, r3
   147c8:	mov	r1, #0
   147cc:	mov	r3, r0
   147d0:	str	r3, [fp, #-500]	; 0xfffffe0c
   147d4:	ldr	r3, [fp, #-488]	; 0xfffffe18
   147d8:	mov	r4, r3
   147dc:	mov	r5, #0
   147e0:	ldr	r3, [fp, #-496]	; 0xfffffe10
   147e4:	mov	r2, r3
   147e8:	mov	r3, #0
   147ec:	sub	r1, fp, #508	; 0x1fc
   147f0:	mov	ip, r1
   147f4:	mul	r0, r2, r5
   147f8:	mul	r1, r4, r3
   147fc:	add	r1, r0, r1
   14800:	umull	r2, r3, r4, r2
   14804:	add	r1, r1, r3
   14808:	mov	r3, r1
   1480c:	strd	r2, [ip]
   14810:	strd	r2, [ip]
   14814:	ldr	r3, [fp, #-488]	; 0xfffffe18
   14818:	mov	r4, r3
   1481c:	mov	r5, #0
   14820:	ldr	r3, [fp, #-500]	; 0xfffffe0c
   14824:	mov	r2, r3
   14828:	mov	r3, #0
   1482c:	sub	r1, fp, #508	; 0x1fc
   14830:	mov	ip, r1
   14834:	mul	r0, r2, r5
   14838:	mul	r1, r4, r3
   1483c:	add	r1, r0, r1
   14840:	umull	r2, r3, r4, r2
   14844:	add	r1, r1, r3
   14848:	mov	r3, r1
   1484c:	strd	r2, [ip, #-8]
   14850:	strd	r2, [ip, #-8]
   14854:	ldr	r3, [fp, #-492]	; 0xfffffe14
   14858:	mov	r4, r3
   1485c:	mov	r5, #0
   14860:	ldr	r3, [fp, #-496]	; 0xfffffe10
   14864:	mov	r2, r3
   14868:	mov	r3, #0
   1486c:	sub	r1, fp, #524	; 0x20c
   14870:	mov	ip, r1
   14874:	mul	r0, r2, r5
   14878:	mul	r1, r4, r3
   1487c:	add	r1, r0, r1
   14880:	umull	r2, r3, r4, r2
   14884:	add	r1, r1, r3
   14888:	mov	r3, r1
   1488c:	strd	r2, [ip]
   14890:	strd	r2, [ip]
   14894:	ldr	r3, [fp, #-492]	; 0xfffffe14
   14898:	mov	r0, r3
   1489c:	mov	r1, #0
   148a0:	ldr	r3, [fp, #-500]	; 0xfffffe0c
   148a4:	mov	r2, r3
   148a8:	mov	r3, #0
   148ac:	mul	lr, r2, r1
   148b0:	mul	ip, r0, r3
   148b4:	add	ip, lr, ip
   148b8:	umull	r2, r3, r0, r2
   148bc:	add	r1, ip, r3
   148c0:	mov	r3, r1
   148c4:	strd	r2, [fp, #-92]	; 0xffffffa4
   148c8:	strd	r2, [fp, #-92]	; 0xffffffa4
   148cc:	sub	r3, fp, #508	; 0x1fc
   148d0:	ldrd	r2, [r3]
   148d4:	mov	r0, #0
   148d8:	mov	r1, #0
   148dc:	mov	r0, r3
   148e0:	mov	r1, #0
   148e4:	sub	r3, fp, #508	; 0x1fc
   148e8:	mov	ip, r3
   148ec:	sub	r3, fp, #508	; 0x1fc
   148f0:	ldrd	r2, [r3, #-8]
   148f4:	adds	lr, r2, r0
   148f8:	str	lr, [fp, #-1028]	; 0xfffffbfc
   148fc:	adc	r3, r3, r1
   14900:	str	r3, [fp, #-1024]	; 0xfffffc00
   14904:	sub	r3, fp, #1024	; 0x400
   14908:	sub	r3, r3, #4
   1490c:	ldrd	r2, [r3]
   14910:	strd	r2, [ip, #-8]
   14914:	sub	r3, fp, #508	; 0x1fc
   14918:	mov	ip, r3
   1491c:	sub	r3, fp, #508	; 0x1fc
   14920:	mov	r2, r3
   14924:	sub	r3, fp, #524	; 0x20c
   14928:	ldrd	r0, [r2, #-8]
   1492c:	ldrd	r2, [r3]
   14930:	adds	lr, r0, r2
   14934:	str	lr, [fp, #-1036]	; 0xfffffbf4
   14938:	adc	r3, r1, r3
   1493c:	str	r3, [fp, #-1032]	; 0xfffffbf8
   14940:	sub	r3, fp, #1024	; 0x400
   14944:	sub	r3, r3, #12
   14948:	ldrd	r2, [r3]
   1494c:	strd	r2, [ip, #-8]
   14950:	sub	r3, fp, #508	; 0x1fc
   14954:	mov	r2, r3
   14958:	sub	r3, fp, #524	; 0x20c
   1495c:	ldrd	r0, [r2, #-8]
   14960:	ldrd	r2, [r3]
   14964:	cmp	r1, r3
   14968:	cmpeq	r0, r2
   1496c:	bcs	14994 <__assert_fail@plt+0x383c>
   14970:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   14974:	adds	r1, r2, #0
   14978:	str	r1, [fp, #-1044]	; 0xfffffbec
   1497c:	adc	r3, r3, #1
   14980:	str	r3, [fp, #-1040]	; 0xfffffbf0
   14984:	sub	r3, fp, #1040	; 0x410
   14988:	sub	r3, r3, #4
   1498c:	ldrd	r2, [r3]
   14990:	strd	r2, [fp, #-92]	; 0xffffffa4
   14994:	sub	r3, fp, #508	; 0x1fc
   14998:	ldrd	r2, [r3, #-8]
   1499c:	mov	r0, #0
   149a0:	mov	r1, #0
   149a4:	mov	r0, r3
   149a8:	mov	r1, #0
   149ac:	sub	r3, fp, #380	; 0x17c
   149b0:	mov	ip, r3
   149b4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   149b8:	adds	lr, r2, r0
   149bc:	str	lr, [fp, #-1052]	; 0xfffffbe4
   149c0:	adc	r3, r3, r1
   149c4:	str	r3, [fp, #-1048]	; 0xfffffbe8
   149c8:	sub	r3, fp, #1040	; 0x410
   149cc:	sub	r3, r3, #12
   149d0:	ldrd	r2, [r3]
   149d4:	strd	r2, [ip]
   149d8:	sub	r3, fp, #508	; 0x1fc
   149dc:	ldrd	r2, [r3, #-8]
   149e0:	mov	r4, #0
   149e4:	mov	r5, #0
   149e8:	mov	r5, r2
   149ec:	mov	r4, #0
   149f0:	sub	r3, fp, #508	; 0x1fc
   149f4:	ldrd	r0, [r3]
   149f8:	mvn	r2, #0
   149fc:	mov	r3, #0
   14a00:	and	ip, r0, r2
   14a04:	str	ip, [fp, #-748]	; 0xfffffd14
   14a08:	and	r3, r1, r3
   14a0c:	str	r3, [fp, #-744]	; 0xfffffd18
   14a10:	sub	r3, fp, #380	; 0x17c
   14a14:	sub	r2, fp, #748	; 0x2ec
   14a18:	ldrd	r0, [r2]
   14a1c:	mov	r2, r0
   14a20:	adds	r2, r4, r2
   14a24:	str	r2, [fp, #-1060]	; 0xfffffbdc
   14a28:	mov	r2, r1
   14a2c:	adc	r2, r5, r2
   14a30:	str	r2, [fp, #-1056]	; 0xfffffbe0
   14a34:	sub	r2, fp, #1056	; 0x420
   14a38:	sub	r2, r2, #4
   14a3c:	ldrd	r0, [r2]
   14a40:	strd	r0, [r3, #-8]
   14a44:	sub	r3, fp, #524	; 0x20c
   14a48:	mov	ip, r3
   14a4c:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   14a50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14a54:	adds	lr, r0, r2
   14a58:	str	lr, [fp, #-1068]	; 0xfffffbd4
   14a5c:	adc	r3, r1, r3
   14a60:	str	r3, [fp, #-1064]	; 0xfffffbd8
   14a64:	sub	r3, fp, #1056	; 0x420
   14a68:	sub	r3, r3, #12
   14a6c:	ldrd	r2, [r3]
   14a70:	strd	r2, [ip, #-8]
   14a74:	sub	r3, fp, #524	; 0x20c
   14a78:	ldrd	r0, [r3, #-8]
   14a7c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   14a80:	cmp	r1, r3
   14a84:	cmpeq	r0, r2
   14a88:	movcc	r3, #1
   14a8c:	movcs	r3, #0
   14a90:	uxtb	r3, r3
   14a94:	uxtb	r0, r3
   14a98:	mov	r1, #0
   14a9c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14aa0:	adds	ip, r2, r0
   14aa4:	str	ip, [fp, #-1076]	; 0xfffffbcc
   14aa8:	adc	r3, r3, r1
   14aac:	str	r3, [fp, #-1072]	; 0xfffffbd0
   14ab0:	sub	r3, fp, #1072	; 0x430
   14ab4:	sub	r3, r3, #4
   14ab8:	ldrd	r2, [r3]
   14abc:	strd	r2, [fp, #-172]	; 0xffffff54
   14ac0:	sub	r3, fp, #524	; 0x20c
   14ac4:	ldrd	r2, [r3, #-8]
   14ac8:	strd	r2, [fp, #-180]	; 0xffffff4c
   14acc:	ldr	r2, [fp, #48]	; 0x30
   14ad0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   14ad4:	mul	r1, r3, r2
   14ad8:	ldr	r2, [fp, #-176]	; 0xffffff50
   14adc:	ldr	r3, [fp, #44]	; 0x2c
   14ae0:	mul	r3, r3, r2
   14ae4:	add	r1, r1, r3
   14ae8:	ldr	r2, [fp, #44]	; 0x2c
   14aec:	ldr	r3, [fp, #-180]	; 0xffffff4c
   14af0:	umull	r2, r3, r2, r3
   14af4:	add	r1, r1, r3
   14af8:	mov	r3, r1
   14afc:	strd	r2, [fp, #-244]	; 0xffffff0c
   14b00:	strd	r2, [fp, #-244]	; 0xffffff0c
   14b04:	sub	r3, fp, #540	; 0x21c
   14b08:	mov	ip, r3
   14b0c:	sub	r3, fp, #380	; 0x17c
   14b10:	ldrd	r0, [r3, #-8]
   14b14:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14b18:	adds	lr, r0, r2
   14b1c:	str	lr, [fp, #-1084]	; 0xfffffbc4
   14b20:	adc	r3, r1, r3
   14b24:	str	r3, [fp, #-1080]	; 0xfffffbc8
   14b28:	sub	r3, fp, #1072	; 0x430
   14b2c:	sub	r3, r3, #12
   14b30:	ldrd	r2, [r3]
   14b34:	strd	r2, [ip]
   14b38:	sub	r3, fp, #540	; 0x21c
   14b3c:	mov	r2, r3
   14b40:	sub	r3, fp, #380	; 0x17c
   14b44:	ldrd	r0, [r2]
   14b48:	ldrd	r2, [r3, #-8]
   14b4c:	cmp	r1, r3
   14b50:	cmpeq	r0, r2
   14b54:	movcc	r3, #1
   14b58:	movcs	r3, #0
   14b5c:	uxtb	r3, r3
   14b60:	uxtb	r0, r3
   14b64:	mov	r1, #0
   14b68:	sub	r3, fp, #380	; 0x17c
   14b6c:	ldrd	r2, [r3]
   14b70:	adds	ip, r2, r0
   14b74:	str	ip, [fp, #-1092]	; 0xfffffbbc
   14b78:	adc	r3, r3, r1
   14b7c:	str	r3, [fp, #-1088]	; 0xfffffbc0
   14b80:	sub	r3, fp, #1088	; 0x440
   14b84:	sub	r3, r3, #4
   14b88:	ldrd	r2, [r3]
   14b8c:	strd	r2, [fp, #-36]	; 0xffffffdc
   14b90:	sub	r3, fp, #540	; 0x21c
   14b94:	ldrd	r2, [r3]
   14b98:	strd	r2, [fp, #-44]	; 0xffffffd4
   14b9c:	sub	r3, fp, #540	; 0x21c
   14ba0:	mov	r1, r3
   14ba4:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   14ba8:	strd	r2, [r1, #-8]
   14bac:	sub	r3, fp, #556	; 0x22c
   14bb0:	mov	r1, r3
   14bb4:	ldrd	r2, [fp, #36]	; 0x24
   14bb8:	strd	r2, [r1]
   14bbc:	sub	r3, fp, #540	; 0x21c
   14bc0:	ldr	r3, [r3, #-8]
   14bc4:	str	r3, [fp, #-560]	; 0xfffffdd0
   14bc8:	sub	r3, fp, #540	; 0x21c
   14bcc:	ldrd	r2, [r3, #-8]
   14bd0:	mov	r0, #0
   14bd4:	mov	r1, #0
   14bd8:	mov	r0, r3
   14bdc:	mov	r1, #0
   14be0:	mov	r3, r0
   14be4:	str	r3, [fp, #-564]	; 0xfffffdcc
   14be8:	sub	r3, fp, #556	; 0x22c
   14bec:	ldr	r3, [r3]
   14bf0:	str	r3, [fp, #-568]	; 0xfffffdc8
   14bf4:	sub	r3, fp, #556	; 0x22c
   14bf8:	ldrd	r2, [r3]
   14bfc:	mov	r0, #0
   14c00:	mov	r1, #0
   14c04:	mov	r0, r3
   14c08:	mov	r1, #0
   14c0c:	mov	r3, r0
   14c10:	str	r3, [fp, #-572]	; 0xfffffdc4
   14c14:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14c18:	mov	r4, r3
   14c1c:	mov	r5, #0
   14c20:	ldr	r3, [fp, #-568]	; 0xfffffdc8
   14c24:	mov	r2, r3
   14c28:	mov	r3, #0
   14c2c:	sub	r1, fp, #572	; 0x23c
   14c30:	mov	ip, r1
   14c34:	mul	r0, r2, r5
   14c38:	mul	r1, r4, r3
   14c3c:	add	r1, r0, r1
   14c40:	umull	r2, r3, r4, r2
   14c44:	add	r1, r1, r3
   14c48:	mov	r3, r1
   14c4c:	strd	r2, [ip, #-8]
   14c50:	strd	r2, [ip, #-8]
   14c54:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14c58:	mov	r4, r3
   14c5c:	mov	r5, #0
   14c60:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   14c64:	mov	r2, r3
   14c68:	mov	r3, #0
   14c6c:	sub	r1, fp, #588	; 0x24c
   14c70:	mov	ip, r1
   14c74:	mul	r0, r2, r5
   14c78:	mul	r1, r4, r3
   14c7c:	add	r1, r0, r1
   14c80:	umull	r2, r3, r4, r2
   14c84:	add	r1, r1, r3
   14c88:	mov	r3, r1
   14c8c:	strd	r2, [ip]
   14c90:	strd	r2, [ip]
   14c94:	ldr	r3, [fp, #-564]	; 0xfffffdcc
   14c98:	mov	r4, r3
   14c9c:	mov	r5, #0
   14ca0:	ldr	r3, [fp, #-568]	; 0xfffffdc8
   14ca4:	mov	r2, r3
   14ca8:	mov	r3, #0
   14cac:	sub	r1, fp, #588	; 0x24c
   14cb0:	mov	ip, r1
   14cb4:	mul	r0, r2, r5
   14cb8:	mul	r1, r4, r3
   14cbc:	add	r1, r0, r1
   14cc0:	umull	r2, r3, r4, r2
   14cc4:	add	r1, r1, r3
   14cc8:	mov	r3, r1
   14ccc:	strd	r2, [ip, #-8]
   14cd0:	strd	r2, [ip, #-8]
   14cd4:	ldr	r3, [fp, #-564]	; 0xfffffdcc
   14cd8:	mov	r0, r3
   14cdc:	mov	r1, #0
   14ce0:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   14ce4:	mov	r2, r3
   14ce8:	mov	r3, #0
   14cec:	mul	lr, r2, r1
   14cf0:	mul	ip, r0, r3
   14cf4:	add	ip, lr, ip
   14cf8:	umull	r2, r3, r0, r2
   14cfc:	add	r1, ip, r3
   14d00:	mov	r3, r1
   14d04:	strd	r2, [fp, #-100]	; 0xffffff9c
   14d08:	strd	r2, [fp, #-100]	; 0xffffff9c
   14d0c:	sub	r3, fp, #572	; 0x23c
   14d10:	ldrd	r2, [r3, #-8]
   14d14:	mov	r0, #0
   14d18:	mov	r1, #0
   14d1c:	mov	r0, r3
   14d20:	mov	r1, #0
   14d24:	sub	r3, fp, #588	; 0x24c
   14d28:	mov	ip, r3
   14d2c:	sub	r3, fp, #588	; 0x24c
   14d30:	ldrd	r2, [r3]
   14d34:	adds	lr, r2, r0
   14d38:	str	lr, [fp, #-1100]	; 0xfffffbb4
   14d3c:	adc	r3, r3, r1
   14d40:	str	r3, [fp, #-1096]	; 0xfffffbb8
   14d44:	sub	r3, fp, #1088	; 0x440
   14d48:	sub	r3, r3, #12
   14d4c:	ldrd	r2, [r3]
   14d50:	strd	r2, [ip]
   14d54:	sub	r3, fp, #588	; 0x24c
   14d58:	mov	ip, r3
   14d5c:	sub	r3, fp, #588	; 0x24c
   14d60:	mov	r2, r3
   14d64:	sub	r3, fp, #588	; 0x24c
   14d68:	ldrd	r0, [r2]
   14d6c:	ldrd	r2, [r3, #-8]
   14d70:	adds	lr, r0, r2
   14d74:	str	lr, [fp, #-1108]	; 0xfffffbac
   14d78:	adc	r3, r1, r3
   14d7c:	str	r3, [fp, #-1104]	; 0xfffffbb0
   14d80:	sub	r3, fp, #1104	; 0x450
   14d84:	sub	r3, r3, #4
   14d88:	ldrd	r2, [r3]
   14d8c:	strd	r2, [ip]
   14d90:	sub	r3, fp, #588	; 0x24c
   14d94:	mov	r2, r3
   14d98:	sub	r3, fp, #588	; 0x24c
   14d9c:	ldrd	r0, [r2]
   14da0:	ldrd	r2, [r3, #-8]
   14da4:	cmp	r1, r3
   14da8:	cmpeq	r0, r2
   14dac:	bcs	14dd4 <__assert_fail@plt+0x3c7c>
   14db0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   14db4:	adds	r1, r2, #0
   14db8:	str	r1, [fp, #-1116]	; 0xfffffba4
   14dbc:	adc	r3, r3, #1
   14dc0:	str	r3, [fp, #-1112]	; 0xfffffba8
   14dc4:	sub	r3, fp, #1104	; 0x450
   14dc8:	sub	r3, r3, #12
   14dcc:	ldrd	r2, [r3]
   14dd0:	strd	r2, [fp, #-100]	; 0xffffff9c
   14dd4:	sub	r3, fp, #588	; 0x24c
   14dd8:	ldrd	r2, [r3]
   14ddc:	mov	r0, #0
   14de0:	mov	r1, #0
   14de4:	mov	r0, r3
   14de8:	mov	r1, #0
   14dec:	sub	r3, fp, #300	; 0x12c
   14df0:	mov	ip, r3
   14df4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   14df8:	adds	lr, r2, r0
   14dfc:	str	lr, [fp, #-1124]	; 0xfffffb9c
   14e00:	adc	r3, r3, r1
   14e04:	str	r3, [fp, #-1120]	; 0xfffffba0
   14e08:	sub	r3, fp, #1120	; 0x460
   14e0c:	sub	r3, r3, #4
   14e10:	ldrd	r2, [r3]
   14e14:	strd	r2, [ip, #-8]
   14e18:	sub	r3, fp, #588	; 0x24c
   14e1c:	ldrd	r2, [r3]
   14e20:	mov	r4, #0
   14e24:	mov	r5, #0
   14e28:	mov	r5, r2
   14e2c:	mov	r4, #0
   14e30:	sub	r3, fp, #572	; 0x23c
   14e34:	ldrd	r0, [r3, #-8]
   14e38:	mvn	r2, #0
   14e3c:	mov	r3, #0
   14e40:	and	ip, r0, r2
   14e44:	str	ip, [fp, #-756]	; 0xfffffd0c
   14e48:	and	r3, r1, r3
   14e4c:	str	r3, [fp, #-752]	; 0xfffffd10
   14e50:	sub	r3, fp, #316	; 0x13c
   14e54:	sub	r2, fp, #756	; 0x2f4
   14e58:	ldrd	r0, [r2]
   14e5c:	mov	r2, r0
   14e60:	adds	r2, r4, r2
   14e64:	str	r2, [fp, #-1132]	; 0xfffffb94
   14e68:	mov	r2, r1
   14e6c:	adc	r2, r5, r2
   14e70:	str	r2, [fp, #-1128]	; 0xfffffb98
   14e74:	sub	r2, fp, #1120	; 0x460
   14e78:	sub	r2, r2, #12
   14e7c:	ldrd	r0, [r2]
   14e80:	strd	r0, [r3]
   14e84:	sub	r3, fp, #604	; 0x25c
   14e88:	mov	r1, r3
   14e8c:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   14e90:	strd	r2, [r1]
   14e94:	sub	r3, fp, #604	; 0x25c
   14e98:	mov	r1, r3
   14e9c:	ldrd	r2, [fp, #28]
   14ea0:	strd	r2, [r1, #-8]
   14ea4:	sub	r3, fp, #604	; 0x25c
   14ea8:	ldr	r3, [r3]
   14eac:	str	r3, [fp, #-616]	; 0xfffffd98
   14eb0:	sub	r3, fp, #604	; 0x25c
   14eb4:	ldrd	r2, [r3]
   14eb8:	mov	r0, #0
   14ebc:	mov	r1, #0
   14ec0:	mov	r0, r3
   14ec4:	mov	r1, #0
   14ec8:	mov	r3, r0
   14ecc:	str	r3, [fp, #-620]	; 0xfffffd94
   14ed0:	sub	r3, fp, #604	; 0x25c
   14ed4:	ldr	r3, [r3, #-8]
   14ed8:	str	r3, [fp, #-624]	; 0xfffffd90
   14edc:	sub	r3, fp, #604	; 0x25c
   14ee0:	ldrd	r2, [r3, #-8]
   14ee4:	mov	r0, #0
   14ee8:	mov	r1, #0
   14eec:	mov	r0, r3
   14ef0:	mov	r1, #0
   14ef4:	mov	r3, r0
   14ef8:	str	r3, [fp, #-628]	; 0xfffffd8c
   14efc:	ldr	r3, [fp, #-616]	; 0xfffffd98
   14f00:	mov	r4, r3
   14f04:	mov	r5, #0
   14f08:	ldr	r3, [fp, #-624]	; 0xfffffd90
   14f0c:	mov	r2, r3
   14f10:	mov	r3, #0
   14f14:	sub	r1, fp, #636	; 0x27c
   14f18:	mov	ip, r1
   14f1c:	mul	r0, r2, r5
   14f20:	mul	r1, r4, r3
   14f24:	add	r1, r0, r1
   14f28:	umull	r2, r3, r4, r2
   14f2c:	add	r1, r1, r3
   14f30:	mov	r3, r1
   14f34:	strd	r2, [ip]
   14f38:	strd	r2, [ip]
   14f3c:	ldr	r3, [fp, #-616]	; 0xfffffd98
   14f40:	mov	r4, r3
   14f44:	mov	r5, #0
   14f48:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   14f4c:	mov	r2, r3
   14f50:	mov	r3, #0
   14f54:	sub	r1, fp, #636	; 0x27c
   14f58:	mov	ip, r1
   14f5c:	mul	r0, r2, r5
   14f60:	mul	r1, r4, r3
   14f64:	add	r1, r0, r1
   14f68:	umull	r2, r3, r4, r2
   14f6c:	add	r1, r1, r3
   14f70:	mov	r3, r1
   14f74:	strd	r2, [ip, #-8]
   14f78:	strd	r2, [ip, #-8]
   14f7c:	ldr	r3, [fp, #-620]	; 0xfffffd94
   14f80:	mov	r4, r3
   14f84:	mov	r5, #0
   14f88:	ldr	r3, [fp, #-624]	; 0xfffffd90
   14f8c:	mov	r2, r3
   14f90:	mov	r3, #0
   14f94:	sub	r1, fp, #652	; 0x28c
   14f98:	mov	ip, r1
   14f9c:	mul	r0, r2, r5
   14fa0:	mul	r1, r4, r3
   14fa4:	add	r1, r0, r1
   14fa8:	umull	r2, r3, r4, r2
   14fac:	add	r1, r1, r3
   14fb0:	mov	r3, r1
   14fb4:	strd	r2, [ip]
   14fb8:	strd	r2, [ip]
   14fbc:	ldr	r3, [fp, #-620]	; 0xfffffd94
   14fc0:	mov	r0, r3
   14fc4:	mov	r1, #0
   14fc8:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   14fcc:	mov	r2, r3
   14fd0:	mov	r3, #0
   14fd4:	mul	lr, r2, r1
   14fd8:	mul	ip, r0, r3
   14fdc:	add	ip, lr, ip
   14fe0:	umull	r2, r3, r0, r2
   14fe4:	add	r1, ip, r3
   14fe8:	mov	r3, r1
   14fec:	strd	r2, [fp, #-108]	; 0xffffff94
   14ff0:	strd	r2, [fp, #-108]	; 0xffffff94
   14ff4:	sub	r3, fp, #636	; 0x27c
   14ff8:	ldrd	r2, [r3]
   14ffc:	mov	r0, #0
   15000:	mov	r1, #0
   15004:	mov	r0, r3
   15008:	mov	r1, #0
   1500c:	sub	r3, fp, #636	; 0x27c
   15010:	mov	ip, r3
   15014:	sub	r3, fp, #636	; 0x27c
   15018:	ldrd	r2, [r3, #-8]
   1501c:	adds	lr, r2, r0
   15020:	str	lr, [fp, #-1140]	; 0xfffffb8c
   15024:	adc	r3, r3, r1
   15028:	str	r3, [fp, #-1136]	; 0xfffffb90
   1502c:	sub	r3, fp, #1136	; 0x470
   15030:	sub	r3, r3, #4
   15034:	ldrd	r2, [r3]
   15038:	strd	r2, [ip, #-8]
   1503c:	sub	r3, fp, #636	; 0x27c
   15040:	mov	ip, r3
   15044:	sub	r3, fp, #636	; 0x27c
   15048:	mov	r2, r3
   1504c:	sub	r3, fp, #652	; 0x28c
   15050:	ldrd	r0, [r2, #-8]
   15054:	ldrd	r2, [r3]
   15058:	adds	lr, r0, r2
   1505c:	str	lr, [fp, #-1148]	; 0xfffffb84
   15060:	adc	r3, r1, r3
   15064:	str	r3, [fp, #-1144]	; 0xfffffb88
   15068:	sub	r3, fp, #1136	; 0x470
   1506c:	sub	r3, r3, #12
   15070:	ldrd	r2, [r3]
   15074:	strd	r2, [ip, #-8]
   15078:	sub	r3, fp, #636	; 0x27c
   1507c:	mov	r2, r3
   15080:	sub	r3, fp, #652	; 0x28c
   15084:	ldrd	r0, [r2, #-8]
   15088:	ldrd	r2, [r3]
   1508c:	cmp	r1, r3
   15090:	cmpeq	r0, r2
   15094:	bcs	150bc <__assert_fail@plt+0x3f64>
   15098:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1509c:	adds	r1, r2, #0
   150a0:	str	r1, [fp, #-1156]	; 0xfffffb7c
   150a4:	adc	r3, r3, #1
   150a8:	str	r3, [fp, #-1152]	; 0xfffffb80
   150ac:	sub	r3, fp, #1152	; 0x480
   150b0:	sub	r3, r3, #4
   150b4:	ldrd	r2, [r3]
   150b8:	strd	r2, [fp, #-108]	; 0xffffff94
   150bc:	sub	r3, fp, #636	; 0x27c
   150c0:	ldrd	r2, [r3, #-8]
   150c4:	mov	r0, #0
   150c8:	mov	r1, #0
   150cc:	mov	r0, r3
   150d0:	mov	r1, #0
   150d4:	sub	r3, fp, #380	; 0x17c
   150d8:	mov	ip, r3
   150dc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   150e0:	adds	lr, r2, r0
   150e4:	str	lr, [fp, #-1164]	; 0xfffffb74
   150e8:	adc	r3, r3, r1
   150ec:	str	r3, [fp, #-1160]	; 0xfffffb78
   150f0:	sub	r3, fp, #1152	; 0x480
   150f4:	sub	r3, r3, #12
   150f8:	ldrd	r2, [r3]
   150fc:	strd	r2, [ip]
   15100:	sub	r3, fp, #636	; 0x27c
   15104:	ldrd	r2, [r3, #-8]
   15108:	mov	r4, #0
   1510c:	mov	r5, #0
   15110:	mov	r5, r2
   15114:	mov	r4, #0
   15118:	sub	r3, fp, #636	; 0x27c
   1511c:	ldrd	r0, [r3]
   15120:	mvn	r2, #0
   15124:	mov	r3, #0
   15128:	and	ip, r0, r2
   1512c:	str	ip, [fp, #-764]	; 0xfffffd04
   15130:	and	r3, r1, r3
   15134:	str	r3, [fp, #-760]	; 0xfffffd08
   15138:	sub	r3, fp, #380	; 0x17c
   1513c:	sub	r2, fp, #764	; 0x2fc
   15140:	ldrd	r0, [r2]
   15144:	mov	r2, r0
   15148:	adds	r2, r4, r2
   1514c:	str	r2, [fp, #-1172]	; 0xfffffb6c
   15150:	mov	r2, r1
   15154:	adc	r2, r5, r2
   15158:	str	r2, [fp, #-1168]	; 0xfffffb70
   1515c:	sub	r2, fp, #1168	; 0x490
   15160:	sub	r2, r2, #4
   15164:	ldrd	r0, [r2]
   15168:	strd	r0, [r3, #-8]
   1516c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   15170:	ldr	r3, [fp, #-176]	; 0xffffff50
   15174:	orr	r3, r2, r3
   15178:	cmp	r3, #0
   1517c:	movne	r3, #1
   15180:	moveq	r3, #0
   15184:	uxtb	r3, r3
   15188:	uxtb	r0, r3
   1518c:	mov	r1, #0
   15190:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15194:	adds	ip, r2, r0
   15198:	str	ip, [fp, #-1180]	; 0xfffffb64
   1519c:	adc	r3, r3, r1
   151a0:	str	r3, [fp, #-1176]	; 0xfffffb68
   151a4:	sub	r3, fp, #1168	; 0x490
   151a8:	sub	r3, r3, #12
   151ac:	ldrd	r2, [r3]
   151b0:	strd	r2, [fp, #-44]	; 0xffffffd4
   151b4:	sub	r3, fp, #652	; 0x28c
   151b8:	mov	ip, r3
   151bc:	sub	r3, fp, #300	; 0x12c
   151c0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   151c4:	ldrd	r2, [r3, #-8]
   151c8:	adds	lr, r0, r2
   151cc:	str	lr, [fp, #-1188]	; 0xfffffb5c
   151d0:	adc	r3, r1, r3
   151d4:	str	r3, [fp, #-1184]	; 0xfffffb60
   151d8:	sub	r3, fp, #1184	; 0x4a0
   151dc:	sub	r3, r3, #4
   151e0:	ldrd	r2, [r3]
   151e4:	strd	r2, [ip, #-8]
   151e8:	sub	r3, fp, #652	; 0x28c
   151ec:	ldrd	r0, [r3, #-8]
   151f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   151f4:	cmp	r1, r3
   151f8:	cmpeq	r0, r2
   151fc:	movcc	r3, #1
   15200:	movcs	r3, #0
   15204:	uxtb	r3, r3
   15208:	uxtb	r0, r3
   1520c:	mov	r1, #0
   15210:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15214:	adds	ip, r2, r0
   15218:	str	ip, [fp, #-1196]	; 0xfffffb54
   1521c:	adc	r3, r3, r1
   15220:	str	r3, [fp, #-1192]	; 0xfffffb58
   15224:	sub	r3, fp, #1184	; 0x4a0
   15228:	sub	r3, r3, #12
   1522c:	ldrd	r2, [r3]
   15230:	strd	r2, [fp, #-36]	; 0xffffffdc
   15234:	sub	r3, fp, #652	; 0x28c
   15238:	ldrd	r2, [r3, #-8]
   1523c:	strd	r2, [fp, #-44]	; 0xffffffd4
   15240:	sub	r3, fp, #668	; 0x29c
   15244:	mov	ip, r3
   15248:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1524c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   15250:	adds	lr, r0, r2
   15254:	str	lr, [fp, #-1204]	; 0xfffffb4c
   15258:	adc	r3, r1, r3
   1525c:	str	r3, [fp, #-1200]	; 0xfffffb50
   15260:	sub	r3, fp, #1200	; 0x4b0
   15264:	sub	r3, r3, #4
   15268:	ldrd	r2, [r3]
   1526c:	strd	r2, [ip]
   15270:	sub	r3, fp, #668	; 0x29c
   15274:	ldrd	r0, [r3]
   15278:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1527c:	cmp	r1, r3
   15280:	cmpeq	r0, r2
   15284:	movcc	r3, #1
   15288:	movcs	r3, #0
   1528c:	uxtb	r3, r3
   15290:	uxtb	r0, r3
   15294:	mov	r1, #0
   15298:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1529c:	adds	ip, r2, r0
   152a0:	str	ip, [fp, #-1212]	; 0xfffffb44
   152a4:	adc	r3, r3, r1
   152a8:	str	r3, [fp, #-1208]	; 0xfffffb48
   152ac:	sub	r3, fp, #1200	; 0x4b0
   152b0:	sub	r3, r3, #12
   152b4:	ldrd	r2, [r3]
   152b8:	strd	r2, [fp, #-36]	; 0xffffffdc
   152bc:	sub	r3, fp, #668	; 0x29c
   152c0:	ldrd	r2, [r3]
   152c4:	strd	r2, [fp, #-44]	; 0xffffffd4
   152c8:	sub	r3, fp, #668	; 0x29c
   152cc:	mov	ip, r3
   152d0:	sub	r3, fp, #380	; 0x17c
   152d4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   152d8:	ldrd	r2, [r3, #-8]
   152dc:	adds	lr, r0, r2
   152e0:	str	lr, [fp, #-1220]	; 0xfffffb3c
   152e4:	adc	r3, r1, r3
   152e8:	str	r3, [fp, #-1216]	; 0xfffffb40
   152ec:	sub	r3, fp, #1216	; 0x4c0
   152f0:	sub	r3, r3, #4
   152f4:	ldrd	r2, [r3]
   152f8:	strd	r2, [ip, #-8]
   152fc:	sub	r3, fp, #380	; 0x17c
   15300:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15304:	ldrd	r2, [r3]
   15308:	adds	ip, r0, r2
   1530c:	str	ip, [fp, #-772]	; 0xfffffcfc
   15310:	adc	r3, r1, r3
   15314:	str	r3, [fp, #-768]	; 0xfffffd00
   15318:	sub	r3, fp, #668	; 0x29c
   1531c:	ldrd	r0, [r3, #-8]
   15320:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15324:	cmp	r1, r3
   15328:	cmpeq	r0, r2
   1532c:	movcc	r3, #1
   15330:	movcs	r3, #0
   15334:	uxtb	r3, r3
   15338:	uxtb	r2, r3
   1533c:	mov	r3, #0
   15340:	sub	r1, fp, #772	; 0x304
   15344:	ldrd	r0, [r1]
   15348:	mov	ip, r0
   1534c:	adds	ip, ip, r2
   15350:	str	ip, [fp, #-1228]	; 0xfffffb34
   15354:	adc	r3, r1, r3
   15358:	str	r3, [fp, #-1224]	; 0xfffffb38
   1535c:	sub	r3, fp, #1216	; 0x4c0
   15360:	sub	r3, r3, #12
   15364:	ldrd	r2, [r3]
   15368:	strd	r2, [fp, #-36]	; 0xffffffdc
   1536c:	sub	r3, fp, #668	; 0x29c
   15370:	ldrd	r2, [r3, #-8]
   15374:	strd	r2, [fp, #-44]	; 0xffffffd4
   15378:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1537c:	ldrd	r2, [fp, #28]
   15380:	cmp	r1, r3
   15384:	cmpeq	r0, r2
   15388:	bhi	153b4 <__assert_fail@plt+0x425c>
   1538c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15390:	ldrd	r2, [fp, #28]
   15394:	cmp	r1, r3
   15398:	cmpeq	r0, r2
   1539c:	bne	15458 <__assert_fail@plt+0x4300>
   153a0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   153a4:	ldrd	r2, [fp, #36]	; 0x24
   153a8:	cmp	r1, r3
   153ac:	cmpeq	r0, r2
   153b0:	bcc	15458 <__assert_fail@plt+0x4300>
   153b4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   153b8:	ldrd	r2, [fp, #36]	; 0x24
   153bc:	cmp	r1, r3
   153c0:	cmpeq	r0, r2
   153c4:	movcc	r3, #1
   153c8:	movcs	r3, #0
   153cc:	uxtb	r3, r3
   153d0:	sub	r2, fp, #684	; 0x2ac
   153d4:	mov	r1, r2
   153d8:	uxtb	r2, r3
   153dc:	mov	r3, #0
   153e0:	strd	r2, [r1]
   153e4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   153e8:	ldrd	r2, [fp, #36]	; 0x24
   153ec:	subs	ip, r0, r2
   153f0:	str	ip, [fp, #-1236]	; 0xfffffb2c
   153f4:	sbc	r3, r1, r3
   153f8:	str	r3, [fp, #-1232]	; 0xfffffb30
   153fc:	sub	r3, fp, #1232	; 0x4d0
   15400:	sub	r3, r3, #4
   15404:	ldrd	r2, [r3]
   15408:	strd	r2, [fp, #-44]	; 0xffffffd4
   1540c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15410:	ldrd	r2, [fp, #28]
   15414:	subs	ip, r0, r2
   15418:	str	ip, [fp, #-780]	; 0xfffffcf4
   1541c:	sbc	r3, r1, r3
   15420:	str	r3, [fp, #-776]	; 0xfffffcf8
   15424:	sub	r3, fp, #684	; 0x2ac
   15428:	ldrd	r2, [r3]
   1542c:	sub	r1, fp, #780	; 0x30c
   15430:	ldrd	r0, [r1]
   15434:	mov	ip, r0
   15438:	subs	ip, ip, r2
   1543c:	str	ip, [fp, #-1244]	; 0xfffffb24
   15440:	sbc	r3, r1, r3
   15444:	str	r3, [fp, #-1240]	; 0xfffffb28
   15448:	sub	r3, fp, #1232	; 0x4d0
   1544c:	sub	r3, r3, #12
   15450:	ldrd	r2, [r3]
   15454:	strd	r2, [fp, #-36]	; 0xffffffdc
   15458:	ldr	r1, [fp, #-688]	; 0xfffffd50
   1545c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15460:	strd	r2, [r1]
   15464:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15468:	mov	r0, r2
   1546c:	mov	r1, r3
   15470:	sub	sp, fp, #28
   15474:	ldrd	r4, [sp]
   15478:	ldrd	r6, [sp, #8]
   1547c:	ldrd	r8, [sp, #16]
   15480:	ldr	fp, [sp, #24]
   15484:	add	sp, sp, #28
   15488:	pop	{pc}		; (ldr pc, [sp], #4)
   1548c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15490:	strd	r6, [sp, #8]
   15494:	str	fp, [sp, #16]
   15498:	str	lr, [sp, #20]
   1549c:	add	fp, sp, #20
   154a0:	sub	sp, sp, #40	; 0x28
   154a4:	strd	r0, [fp, #-36]	; 0xffffffdc
   154a8:	strd	r2, [fp, #-44]	; 0xffffffd4
   154ac:	ldrd	r2, [fp, #20]
   154b0:	strd	r2, [fp, #-28]	; 0xffffffe4
   154b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   154b8:	mov	r0, #1
   154bc:	mov	r1, #0
   154c0:	and	r6, r2, r0
   154c4:	and	r7, r3, r1
   154c8:	orrs	r3, r6, r7
   154cc:	beq	15554 <__assert_fail@plt+0x43fc>
   154d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   154d4:	strd	r2, [fp, #-28]	; 0xffffffe4
   154d8:	b	15554 <__assert_fail@plt+0x43fc>
   154dc:	ldrd	r2, [fp, #12]
   154e0:	strd	r2, [sp, #8]
   154e4:	ldrd	r2, [fp, #4]
   154e8:	strd	r2, [sp]
   154ec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   154f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   154f4:	bl	13264 <__assert_fail@plt+0x210c>
   154f8:	strd	r0, [fp, #-36]	; 0xffffffdc
   154fc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15500:	mov	r2, #0
   15504:	mov	r3, #0
   15508:	lsr	r2, r0, #1
   1550c:	orr	r2, r2, r1, lsl #31
   15510:	lsr	r3, r1, #1
   15514:	strd	r2, [fp, #-44]	; 0xffffffd4
   15518:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1551c:	mov	r0, #1
   15520:	mov	r1, #0
   15524:	and	r4, r2, r0
   15528:	and	r5, r3, r1
   1552c:	orrs	r3, r4, r5
   15530:	beq	15554 <__assert_fail@plt+0x43fc>
   15534:	ldrd	r2, [fp, #12]
   15538:	strd	r2, [sp, #8]
   1553c:	ldrd	r2, [fp, #4]
   15540:	strd	r2, [sp]
   15544:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15548:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   1554c:	bl	13264 <__assert_fail@plt+0x210c>
   15550:	strd	r0, [fp, #-28]	; 0xffffffe4
   15554:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15558:	orrs	r3, r2, r3
   1555c:	bne	154dc <__assert_fail@plt+0x4384>
   15560:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15564:	mov	r0, r2
   15568:	mov	r1, r3
   1556c:	sub	sp, fp, #20
   15570:	ldrd	r4, [sp]
   15574:	ldrd	r6, [sp, #8]
   15578:	ldr	fp, [sp, #16]
   1557c:	add	sp, sp, #20
   15580:	pop	{pc}		; (ldr pc, [sp], #4)
   15584:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15588:	strd	r6, [sp, #8]
   1558c:	str	fp, [sp, #16]
   15590:	str	lr, [sp, #20]
   15594:	add	fp, sp, #20
   15598:	sub	sp, sp, #128	; 0x80
   1559c:	str	r0, [fp, #-88]	; 0xffffffa8
   155a0:	str	r1, [fp, #-92]	; 0xffffffa4
   155a4:	str	r2, [fp, #-96]	; 0xffffffa0
   155a8:	str	r3, [fp, #-100]	; 0xffffff9c
   155ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155b0:	ldrd	r2, [r3]
   155b4:	strd	r2, [fp, #-52]	; 0xffffffcc
   155b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155bc:	ldrd	r2, [r3, #8]
   155c0:	strd	r2, [fp, #-44]	; 0xffffffd4
   155c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155c8:	ldrd	r2, [r3]
   155cc:	strd	r2, [fp, #-76]	; 0xffffffb4
   155d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155d4:	ldrd	r2, [r3, #8]
   155d8:	strd	r2, [fp, #-84]	; 0xffffffac
   155dc:	ldr	r3, [fp, #12]
   155e0:	ldrd	r2, [r3]
   155e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   155e8:	ldr	r3, [fp, #12]
   155ec:	ldrd	r2, [r3, #8]
   155f0:	strd	r2, [fp, #-28]	; 0xffffffe4
   155f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   155f8:	ldrd	r2, [r3]
   155fc:	strd	r2, [fp, #-68]	; 0xffffffbc
   15600:	mov	r3, #64	; 0x40
   15604:	str	r3, [fp, #-56]	; 0xffffffc8
   15608:	b	156e8 <__assert_fail@plt+0x4590>
   1560c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15610:	mov	r0, #1
   15614:	mov	r1, #0
   15618:	and	r6, r2, r0
   1561c:	and	r7, r3, r1
   15620:	orrs	r3, r6, r7
   15624:	beq	15674 <__assert_fail@plt+0x451c>
   15628:	ldrd	r2, [fp, #4]
   1562c:	strd	r2, [sp, #40]	; 0x28
   15630:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15634:	strd	r2, [sp, #32]
   15638:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1563c:	strd	r2, [sp, #24]
   15640:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15644:	strd	r2, [sp, #16]
   15648:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1564c:	strd	r2, [sp, #8]
   15650:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15654:	strd	r2, [sp]
   15658:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1565c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15660:	bl	137a0 <__assert_fail@plt+0x2648>
   15664:	strd	r0, [fp, #-36]	; 0xffffffdc
   15668:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1566c:	ldrd	r2, [r3]
   15670:	strd	r2, [fp, #-28]	; 0xffffffe4
   15674:	ldrd	r2, [fp, #4]
   15678:	strd	r2, [sp, #40]	; 0x28
   1567c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15680:	strd	r2, [sp, #32]
   15684:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15688:	strd	r2, [sp, #24]
   1568c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15690:	strd	r2, [sp, #16]
   15694:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15698:	strd	r2, [sp, #8]
   1569c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   156a0:	strd	r2, [sp]
   156a4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   156a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   156ac:	bl	137a0 <__assert_fail@plt+0x2648>
   156b0:	strd	r0, [fp, #-52]	; 0xffffffcc
   156b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   156b8:	ldrd	r2, [r3]
   156bc:	strd	r2, [fp, #-44]	; 0xffffffd4
   156c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   156c4:	sub	r3, r3, #1
   156c8:	str	r3, [fp, #-56]	; 0xffffffc8
   156cc:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   156d0:	mov	r2, #0
   156d4:	mov	r3, #0
   156d8:	lsr	r2, r0, #1
   156dc:	orr	r2, r2, r1, lsl #31
   156e0:	lsr	r3, r1, #1
   156e4:	strd	r2, [fp, #-68]	; 0xffffffbc
   156e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   156ec:	cmp	r3, #0
   156f0:	bne	1560c <__assert_fail@plt+0x44b4>
   156f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156f8:	ldrd	r2, [r3, #8]
   156fc:	strd	r2, [fp, #-68]	; 0xffffffbc
   15700:	b	157d4 <__assert_fail@plt+0x467c>
   15704:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15708:	mov	r0, #1
   1570c:	mov	r1, #0
   15710:	and	r4, r2, r0
   15714:	and	r5, r3, r1
   15718:	orrs	r3, r4, r5
   1571c:	beq	1576c <__assert_fail@plt+0x4614>
   15720:	ldrd	r2, [fp, #4]
   15724:	strd	r2, [sp, #40]	; 0x28
   15728:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1572c:	strd	r2, [sp, #32]
   15730:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15734:	strd	r2, [sp, #24]
   15738:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1573c:	strd	r2, [sp, #16]
   15740:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15744:	strd	r2, [sp, #8]
   15748:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1574c:	strd	r2, [sp]
   15750:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15754:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15758:	bl	137a0 <__assert_fail@plt+0x2648>
   1575c:	strd	r0, [fp, #-36]	; 0xffffffdc
   15760:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15764:	ldrd	r2, [r3]
   15768:	strd	r2, [fp, #-28]	; 0xffffffe4
   1576c:	ldrd	r2, [fp, #4]
   15770:	strd	r2, [sp, #40]	; 0x28
   15774:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15778:	strd	r2, [sp, #32]
   1577c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15780:	strd	r2, [sp, #24]
   15784:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15788:	strd	r2, [sp, #16]
   1578c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15790:	strd	r2, [sp, #8]
   15794:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15798:	strd	r2, [sp]
   1579c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   157a0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   157a4:	bl	137a0 <__assert_fail@plt+0x2648>
   157a8:	strd	r0, [fp, #-52]	; 0xffffffcc
   157ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   157b0:	ldrd	r2, [r3]
   157b4:	strd	r2, [fp, #-44]	; 0xffffffd4
   157b8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   157bc:	mov	r2, #0
   157c0:	mov	r3, #0
   157c4:	lsr	r2, r0, #1
   157c8:	orr	r2, r2, r1, lsl #31
   157cc:	lsr	r3, r1, #1
   157d0:	strd	r2, [fp, #-68]	; 0xffffffbc
   157d4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   157d8:	orrs	r3, r2, r3
   157dc:	bne	15704 <__assert_fail@plt+0x45ac>
   157e0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   157e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   157e8:	strd	r2, [r1]
   157ec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   157f0:	mov	r0, r2
   157f4:	mov	r1, r3
   157f8:	sub	sp, fp, #20
   157fc:	ldrd	r4, [sp]
   15800:	ldrd	r6, [sp, #8]
   15804:	ldr	fp, [sp, #16]
   15808:	add	sp, sp, #20
   1580c:	pop	{pc}		; (ldr pc, [sp], #4)
   15810:	strd	r4, [sp, #-16]!
   15814:	str	fp, [sp, #8]
   15818:	str	lr, [sp, #12]
   1581c:	add	fp, sp, #12
   15820:	sub	sp, sp, #64	; 0x40
   15824:	strd	r0, [fp, #-44]	; 0xffffffd4
   15828:	strd	r2, [fp, #-52]	; 0xffffffcc
   1582c:	ldrd	r2, [fp, #28]
   15830:	strd	r2, [sp, #16]
   15834:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15838:	strd	r2, [sp, #8]
   1583c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15840:	strd	r2, [sp]
   15844:	ldrd	r2, [fp, #12]
   15848:	ldrd	r0, [fp, #4]
   1584c:	bl	1548c <__assert_fail@plt+0x4334>
   15850:	strd	r0, [fp, #-20]	; 0xffffffec
   15854:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15858:	ldrd	r2, [fp, #28]
   1585c:	subs	r4, r0, r2
   15860:	sbc	r5, r1, r3
   15864:	strd	r4, [fp, #-36]	; 0xffffffdc
   15868:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1586c:	ldrd	r2, [fp, #28]
   15870:	cmp	r1, r3
   15874:	cmpeq	r0, r2
   15878:	beq	15890 <__assert_fail@plt+0x4738>
   1587c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15880:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15884:	cmp	r1, r3
   15888:	cmpeq	r0, r2
   1588c:	bne	15898 <__assert_fail@plt+0x4740>
   15890:	mov	r3, #1
   15894:	b	1591c <__assert_fail@plt+0x47c4>
   15898:	mov	r3, #1
   1589c:	str	r3, [fp, #-24]	; 0xffffffe8
   158a0:	b	15908 <__assert_fail@plt+0x47b0>
   158a4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   158a8:	strd	r2, [sp, #8]
   158ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   158b0:	strd	r2, [sp]
   158b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   158b8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   158bc:	bl	13264 <__assert_fail@plt+0x210c>
   158c0:	strd	r0, [fp, #-20]	; 0xffffffec
   158c4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   158c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   158cc:	cmp	r1, r3
   158d0:	cmpeq	r0, r2
   158d4:	bne	158e0 <__assert_fail@plt+0x4788>
   158d8:	mov	r3, #1
   158dc:	b	1591c <__assert_fail@plt+0x47c4>
   158e0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   158e4:	ldrd	r2, [fp, #28]
   158e8:	cmp	r1, r3
   158ec:	cmpeq	r0, r2
   158f0:	bne	158fc <__assert_fail@plt+0x47a4>
   158f4:	mov	r3, #0
   158f8:	b	1591c <__assert_fail@plt+0x47c4>
   158fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15900:	add	r3, r3, #1
   15904:	str	r3, [fp, #-24]	; 0xffffffe8
   15908:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1590c:	ldr	r3, [fp, #20]
   15910:	cmp	r2, r3
   15914:	bcc	158a4 <__assert_fail@plt+0x474c>
   15918:	mov	r3, #0
   1591c:	mov	r0, r3
   15920:	sub	sp, fp, #12
   15924:	ldrd	r4, [sp]
   15928:	ldr	fp, [sp, #8]
   1592c:	add	sp, sp, #12
   15930:	pop	{pc}		; (ldr pc, [sp], #4)
   15934:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15938:	strd	r6, [sp, #8]
   1593c:	strd	r8, [sp, #16]
   15940:	str	fp, [sp, #24]
   15944:	str	lr, [sp, #28]
   15948:	add	fp, sp, #28
   1594c:	sub	sp, sp, #120	; 0x78
   15950:	str	r0, [fp, #-88]	; 0xffffffa8
   15954:	strd	r2, [fp, #-100]	; 0xffffff9c
   15958:	sub	r0, fp, #84	; 0x54
   1595c:	ldr	r3, [fp, #16]
   15960:	str	r3, [sp, #8]
   15964:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   15968:	strd	r2, [sp]
   1596c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15970:	ldr	r2, [fp, #8]
   15974:	ldr	r1, [fp, #4]
   15978:	bl	15584 <__assert_fail@plt+0x442c>
   1597c:	strd	r0, [fp, #-44]	; 0xffffffd4
   15980:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15984:	strd	r2, [fp, #-36]	; 0xffffffdc
   15988:	ldr	r3, [fp, #16]
   1598c:	ldrd	r2, [r3]
   15990:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15994:	cmp	r1, r3
   15998:	cmpeq	r0, r2
   1599c:	bne	159c4 <__assert_fail@plt+0x486c>
   159a0:	ldr	r3, [fp, #16]
   159a4:	add	r3, r3, #8
   159a8:	ldrd	r2, [r3]
   159ac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   159b0:	cmp	r1, r3
   159b4:	cmpeq	r0, r2
   159b8:	bne	159c4 <__assert_fail@plt+0x486c>
   159bc:	mov	r3, #1
   159c0:	b	15b60 <__assert_fail@plt+0x4a08>
   159c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   159c8:	ldrd	r0, [r3]
   159cc:	ldr	r3, [fp, #16]
   159d0:	ldrd	r2, [r3]
   159d4:	cmp	r1, r3
   159d8:	cmpeq	r0, r2
   159dc:	movcc	r3, #1
   159e0:	movcs	r3, #0
   159e4:	uxtb	r3, r3
   159e8:	uxtb	r2, r3
   159ec:	mov	r3, #0
   159f0:	strd	r2, [fp, #-60]	; 0xffffffc4
   159f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   159f8:	ldrd	r0, [r3]
   159fc:	ldr	r3, [fp, #16]
   15a00:	ldrd	r2, [r3]
   15a04:	subs	r8, r0, r2
   15a08:	sbc	r9, r1, r3
   15a0c:	strd	r8, [fp, #-68]	; 0xffffffbc
   15a10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15a14:	add	r3, r3, #8
   15a18:	ldrd	r0, [r3]
   15a1c:	ldr	r3, [fp, #16]
   15a20:	add	r3, r3, #8
   15a24:	ldrd	r2, [r3]
   15a28:	subs	r4, r0, r2
   15a2c:	sbc	r5, r1, r3
   15a30:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15a34:	subs	r6, r4, r2
   15a38:	sbc	r7, r5, r3
   15a3c:	strd	r6, [fp, #-76]	; 0xffffffb4
   15a40:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15a44:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15a48:	cmp	r1, r3
   15a4c:	cmpeq	r0, r2
   15a50:	bne	15a70 <__assert_fail@plt+0x4918>
   15a54:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15a58:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15a5c:	cmp	r1, r3
   15a60:	cmpeq	r0, r2
   15a64:	bne	15a70 <__assert_fail@plt+0x4918>
   15a68:	mov	r3, #1
   15a6c:	b	15b60 <__assert_fail@plt+0x4a08>
   15a70:	mov	r3, #1
   15a74:	str	r3, [fp, #-48]	; 0xffffffd0
   15a78:	b	15b4c <__assert_fail@plt+0x49f4>
   15a7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15a80:	add	r3, r3, #8
   15a84:	ldrd	r2, [r3]
   15a88:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15a8c:	ldrd	r0, [r1]
   15a90:	sub	ip, fp, #84	; 0x54
   15a94:	ldrd	r4, [fp, #-100]	; 0xffffff9c
   15a98:	strd	r4, [sp, #40]	; 0x28
   15a9c:	strd	r0, [sp, #32]
   15aa0:	strd	r2, [sp, #24]
   15aa4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15aa8:	strd	r2, [sp, #16]
   15aac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15ab0:	strd	r2, [sp, #8]
   15ab4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15ab8:	strd	r2, [sp]
   15abc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15ac0:	mov	r0, ip
   15ac4:	bl	137a0 <__assert_fail@plt+0x2648>
   15ac8:	strd	r0, [fp, #-44]	; 0xffffffd4
   15acc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15ad0:	strd	r2, [fp, #-36]	; 0xffffffdc
   15ad4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15ad8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15adc:	cmp	r1, r3
   15ae0:	cmpeq	r0, r2
   15ae4:	bne	15b04 <__assert_fail@plt+0x49ac>
   15ae8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15aec:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15af0:	cmp	r1, r3
   15af4:	cmpeq	r0, r2
   15af8:	bne	15b04 <__assert_fail@plt+0x49ac>
   15afc:	mov	r3, #1
   15b00:	b	15b60 <__assert_fail@plt+0x4a08>
   15b04:	ldr	r3, [fp, #16]
   15b08:	ldrd	r2, [r3]
   15b0c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   15b10:	cmp	r1, r3
   15b14:	cmpeq	r0, r2
   15b18:	bne	15b40 <__assert_fail@plt+0x49e8>
   15b1c:	ldr	r3, [fp, #16]
   15b20:	add	r3, r3, #8
   15b24:	ldrd	r2, [r3]
   15b28:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15b2c:	cmp	r1, r3
   15b30:	cmpeq	r0, r2
   15b34:	bne	15b40 <__assert_fail@plt+0x49e8>
   15b38:	mov	r3, #0
   15b3c:	b	15b60 <__assert_fail@plt+0x4a08>
   15b40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15b44:	add	r3, r3, #1
   15b48:	str	r3, [fp, #-48]	; 0xffffffd0
   15b4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b50:	ldr	r3, [fp, #12]
   15b54:	cmp	r2, r3
   15b58:	bcc	15a7c <__assert_fail@plt+0x4924>
   15b5c:	mov	r3, #0
   15b60:	mov	r0, r3
   15b64:	sub	sp, fp, #28
   15b68:	ldrd	r4, [sp]
   15b6c:	ldrd	r6, [sp, #8]
   15b70:	ldrd	r8, [sp, #16]
   15b74:	ldr	fp, [sp, #24]
   15b78:	add	sp, sp, #28
   15b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b80:	str	fp, [sp, #-8]!
   15b84:	str	lr, [sp, #4]
   15b88:	add	fp, sp, #4
   15b8c:	sub	sp, sp, #24
   15b90:	str	r0, [fp, #-16]
   15b94:	str	r1, [fp, #-20]	; 0xffffffec
   15b98:	str	r2, [fp, #-24]	; 0xffffffe8
   15b9c:	str	r3, [fp, #-28]	; 0xffffffe4
   15ba0:	ldr	r3, [fp, #-16]
   15ba4:	ldr	r2, [fp, #4]
   15ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15bb0:	bl	25440 <__assert_fail@plt+0x142e8>
   15bb4:	mov	r1, #1
   15bb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15bbc:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   15bc0:	mov	r3, r0
   15bc4:	cmp	r3, #0
   15bc8:	beq	15be4 <__assert_fail@plt+0x4a8c>
   15bcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15bd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15bd4:	bl	22054 <__assert_fail@plt+0x10efc>
   15bd8:	mov	r3, r0
   15bdc:	cmp	r3, #0
   15be0:	bne	15bec <__assert_fail@plt+0x4a94>
   15be4:	mov	r3, #1
   15be8:	b	15c6c <__assert_fail@plt+0x4b14>
   15bec:	mov	r3, #1
   15bf0:	str	r3, [fp, #-8]
   15bf4:	b	15c58 <__assert_fail@plt+0x4b00>
   15bf8:	ldr	r3, [fp, #-16]
   15bfc:	mov	r2, #2
   15c00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c08:	bl	25838 <__assert_fail@plt+0x146e0>
   15c0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c14:	bl	22054 <__assert_fail@plt+0x10efc>
   15c18:	mov	r3, r0
   15c1c:	cmp	r3, #0
   15c20:	bne	15c2c <__assert_fail@plt+0x4ad4>
   15c24:	mov	r3, #1
   15c28:	b	15c6c <__assert_fail@plt+0x4b14>
   15c2c:	mov	r1, #1
   15c30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c34:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   15c38:	mov	r3, r0
   15c3c:	cmp	r3, #0
   15c40:	bne	15c4c <__assert_fail@plt+0x4af4>
   15c44:	mov	r3, #0
   15c48:	b	15c6c <__assert_fail@plt+0x4b14>
   15c4c:	ldr	r3, [fp, #-8]
   15c50:	add	r3, r3, #1
   15c54:	str	r3, [fp, #-8]
   15c58:	ldr	r2, [fp, #-8]
   15c5c:	ldr	r3, [fp, #8]
   15c60:	cmp	r2, r3
   15c64:	bcc	15bf8 <__assert_fail@plt+0x4aa0>
   15c68:	mov	r3, #0
   15c6c:	mov	r0, r3
   15c70:	sub	sp, fp, #4
   15c74:	ldr	fp, [sp]
   15c78:	add	sp, sp, #4
   15c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c80:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15c84:	strd	r6, [sp, #8]
   15c88:	strd	r8, [sp, #16]
   15c8c:	str	fp, [sp, #24]
   15c90:	str	lr, [sp, #28]
   15c94:	add	fp, sp, #28
   15c98:	sub	sp, sp, #840	; 0x348
   15c9c:	sub	r3, fp, #572	; 0x23c
   15ca0:	strd	r0, [r3, #-8]
   15ca4:	sub	r3, fp, #572	; 0x23c
   15ca8:	ldrd	r2, [r3, #-8]
   15cac:	cmp	r3, #0
   15cb0:	cmpeq	r2, #1
   15cb4:	bhi	15cc0 <__assert_fail@plt+0x4b68>
   15cb8:	mov	r3, #0
   15cbc:	b	169ec <__assert_fail@plt+0x5894>
   15cc0:	sub	r3, fp, #572	; 0x23c
   15cc4:	ldrd	r0, [r3, #-8]
   15cc8:	add	r3, pc, #768	; 0x300
   15ccc:	ldrd	r2, [r3]
   15cd0:	cmp	r1, r3
   15cd4:	cmpeq	r0, r2
   15cd8:	bhi	15ce4 <__assert_fail@plt+0x4b8c>
   15cdc:	mov	r3, #1
   15ce0:	b	169ec <__assert_fail@plt+0x5894>
   15ce4:	sub	r3, fp, #572	; 0x23c
   15ce8:	ldrd	r2, [r3, #-8]
   15cec:	subs	r4, r2, #1
   15cf0:	sbc	r5, r3, #0
   15cf4:	strd	r4, [fp, #-52]	; 0xffffffcc
   15cf8:	mov	r3, #0
   15cfc:	str	r3, [fp, #-32]	; 0xffffffe0
   15d00:	b	15d2c <__assert_fail@plt+0x4bd4>
   15d04:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15d08:	mov	r0, #0
   15d0c:	mov	r1, #0
   15d10:	lsr	r0, r2, #1
   15d14:	orr	r0, r0, r3, lsl #31
   15d18:	lsr	r1, r3, #1
   15d1c:	strd	r0, [fp, #-52]	; 0xffffffcc
   15d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d24:	add	r3, r3, #1
   15d28:	str	r3, [fp, #-32]	; 0xffffffe0
   15d2c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   15d30:	mov	r2, #1
   15d34:	mov	r3, #0
   15d38:	and	r6, r0, r2
   15d3c:	and	r7, r1, r3
   15d40:	orrs	r3, r6, r7
   15d44:	beq	15d04 <__assert_fail@plt+0x4bac>
   15d48:	mov	r2, #2
   15d4c:	mov	r3, #0
   15d50:	strd	r2, [fp, #-60]	; 0xffffffc4
   15d54:	sub	r3, fp, #572	; 0x23c
   15d58:	ldrd	r2, [r3, #-8]
   15d5c:	strd	r2, [fp, #-180]	; 0xffffff4c
   15d60:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   15d64:	mov	r0, #0
   15d68:	mov	r1, #0
   15d6c:	lsr	r0, r2, #1
   15d70:	orr	r0, r0, r3, lsl #31
   15d74:	lsr	r1, r3, #1
   15d78:	mov	r2, #127	; 0x7f
   15d7c:	mov	r3, #0
   15d80:	and	r8, r0, r2
   15d84:	and	r9, r1, r3
   15d88:	movw	r3, #21236	; 0x52f4
   15d8c:	movt	r3, #3
   15d90:	add	r3, r3, r8
   15d94:	ldrb	r3, [r3]
   15d98:	uxtb	r2, r3
   15d9c:	mov	r3, #0
   15da0:	strd	r2, [fp, #-188]	; 0xffffff44
   15da4:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15da8:	adds	r1, r2, r2
   15dac:	str	r1, [fp, #-660]	; 0xfffffd6c
   15db0:	adc	r3, r3, r3
   15db4:	str	r3, [fp, #-656]	; 0xfffffd70
   15db8:	sub	r3, fp, #660	; 0x294
   15dbc:	ldrd	r4, [r3]
   15dc0:	ldr	r2, [fp, #-184]	; 0xffffff48
   15dc4:	ldr	r3, [fp, #-188]	; 0xffffff44
   15dc8:	mul	r1, r3, r2
   15dcc:	ldr	r2, [fp, #-184]	; 0xffffff48
   15dd0:	ldr	r3, [fp, #-188]	; 0xffffff44
   15dd4:	mul	r3, r3, r2
   15dd8:	add	r1, r1, r3
   15ddc:	ldr	r2, [fp, #-188]	; 0xffffff44
   15de0:	ldr	r3, [fp, #-188]	; 0xffffff44
   15de4:	umull	r2, r3, r2, r3
   15de8:	add	r1, r1, r3
   15dec:	mov	r3, r1
   15df0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15df4:	mul	r0, r3, r1
   15df8:	ldr	r1, [fp, #-176]	; 0xffffff50
   15dfc:	mul	r1, r2, r1
   15e00:	add	r0, r0, r1
   15e04:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15e08:	umull	r2, r3, r1, r2
   15e0c:	add	r1, r0, r3
   15e10:	mov	r3, r1
   15e14:	subs	r1, r4, r2
   15e18:	str	r1, [fp, #-668]	; 0xfffffd64
   15e1c:	sbc	r3, r5, r3
   15e20:	str	r3, [fp, #-664]	; 0xfffffd68
   15e24:	sub	r3, fp, #668	; 0x29c
   15e28:	ldrd	r2, [r3]
   15e2c:	strd	r2, [fp, #-188]	; 0xffffff44
   15e30:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15e34:	adds	r1, r2, r2
   15e38:	str	r1, [fp, #-676]	; 0xfffffd5c
   15e3c:	adc	r3, r3, r3
   15e40:	str	r3, [fp, #-672]	; 0xfffffd60
   15e44:	sub	r3, fp, #676	; 0x2a4
   15e48:	ldrd	r4, [r3]
   15e4c:	ldr	r2, [fp, #-184]	; 0xffffff48
   15e50:	ldr	r3, [fp, #-188]	; 0xffffff44
   15e54:	mul	r1, r3, r2
   15e58:	ldr	r2, [fp, #-184]	; 0xffffff48
   15e5c:	ldr	r3, [fp, #-188]	; 0xffffff44
   15e60:	mul	r3, r3, r2
   15e64:	add	r1, r1, r3
   15e68:	ldr	r2, [fp, #-188]	; 0xffffff44
   15e6c:	ldr	r3, [fp, #-188]	; 0xffffff44
   15e70:	umull	r2, r3, r2, r3
   15e74:	add	r1, r1, r3
   15e78:	mov	r3, r1
   15e7c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15e80:	mul	r0, r3, r1
   15e84:	ldr	r1, [fp, #-176]	; 0xffffff50
   15e88:	mul	r1, r2, r1
   15e8c:	add	r0, r0, r1
   15e90:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15e94:	umull	r2, r3, r1, r2
   15e98:	add	r1, r0, r3
   15e9c:	mov	r3, r1
   15ea0:	subs	r1, r4, r2
   15ea4:	str	r1, [fp, #-684]	; 0xfffffd54
   15ea8:	sbc	r3, r5, r3
   15eac:	str	r3, [fp, #-680]	; 0xfffffd58
   15eb0:	sub	r3, fp, #684	; 0x2ac
   15eb4:	ldrd	r2, [r3]
   15eb8:	strd	r2, [fp, #-188]	; 0xffffff44
   15ebc:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15ec0:	adds	r1, r2, r2
   15ec4:	str	r1, [fp, #-692]	; 0xfffffd4c
   15ec8:	adc	r3, r3, r3
   15ecc:	str	r3, [fp, #-688]	; 0xfffffd50
   15ed0:	sub	r3, fp, #692	; 0x2b4
   15ed4:	ldrd	r4, [r3]
   15ed8:	ldr	r2, [fp, #-184]	; 0xffffff48
   15edc:	ldr	r3, [fp, #-188]	; 0xffffff44
   15ee0:	mul	r1, r3, r2
   15ee4:	ldr	r2, [fp, #-184]	; 0xffffff48
   15ee8:	ldr	r3, [fp, #-188]	; 0xffffff44
   15eec:	mul	r3, r3, r2
   15ef0:	add	r1, r1, r3
   15ef4:	ldr	r2, [fp, #-188]	; 0xffffff44
   15ef8:	ldr	r3, [fp, #-188]	; 0xffffff44
   15efc:	umull	r2, r3, r2, r3
   15f00:	add	r1, r1, r3
   15f04:	mov	r3, r1
   15f08:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15f0c:	mul	r0, r3, r1
   15f10:	ldr	r1, [fp, #-176]	; 0xffffff50
   15f14:	mul	r1, r2, r1
   15f18:	add	r0, r0, r1
   15f1c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15f20:	umull	r2, r3, r1, r2
   15f24:	add	r1, r0, r3
   15f28:	mov	r3, r1
   15f2c:	subs	r1, r4, r2
   15f30:	str	r1, [fp, #-700]	; 0xfffffd44
   15f34:	sbc	r3, r5, r3
   15f38:	str	r3, [fp, #-696]	; 0xfffffd48
   15f3c:	sub	r3, fp, #700	; 0x2bc
   15f40:	ldrd	r2, [r3]
   15f44:	strd	r2, [fp, #-188]	; 0xffffff44
   15f48:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15f4c:	strd	r2, [fp, #-196]	; 0xffffff3c
   15f50:	sub	r3, fp, #572	; 0x23c
   15f54:	ldrd	r2, [r3, #-8]
   15f58:	cmp	r3, #0
   15f5c:	cmpeq	r2, #1
   15f60:	bhi	15f84 <__assert_fail@plt+0x4e2c>
   15f64:	movw	r3, #22276	; 0x5704
   15f68:	movt	r3, #3
   15f6c:	movw	r2, #1214	; 0x4be
   15f70:	movw	r1, #9004	; 0x232c
   15f74:	movt	r1, #3
   15f78:	movw	r0, #21460	; 0x53d4
   15f7c:	movt	r0, #3
   15f80:	bl	11158 <__assert_fail@plt>
   15f84:	sub	r3, fp, #572	; 0x23c
   15f88:	ldrd	r2, [r3, #-8]
   15f8c:	strd	r2, [fp, #-68]	; 0xffffffbc
   15f90:	mov	r2, #0
   15f94:	mov	r3, #0
   15f98:	strd	r2, [fp, #-76]	; 0xffffffb4
   15f9c:	mov	r2, #1
   15fa0:	mov	r3, #0
   15fa4:	strd	r2, [fp, #-92]	; 0xffffffa4
   15fa8:	mov	r2, #0
   15fac:	mov	r3, #0
   15fb0:	strd	r2, [fp, #-100]	; 0xffffff9c
   15fb4:	mov	r2, #0
   15fb8:	mov	r3, #0
   15fbc:	strd	r2, [fp, #-84]	; 0xffffffac
   15fc0:	mov	r3, #64	; 0x40
   15fc4:	str	r3, [fp, #-104]	; 0xffffff98
   15fc8:	b	16154 <__assert_fail@plt+0x4ffc>
   15fcc:	nop	{0}
   15fd0:	cmneq	sp, r8, ror sp
   15fd4:	andeq	r0, r0, r0
   15fd8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15fdc:	mov	r4, #0
   15fe0:	mov	r5, #0
   15fe4:	lsl	r5, r2, #31
   15fe8:	mov	r4, #0
   15fec:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15ff0:	mov	r0, #0
   15ff4:	mov	r1, #0
   15ff8:	lsr	r0, r2, #1
   15ffc:	orr	r0, r0, r3, lsl #31
   16000:	lsr	r1, r3, #1
   16004:	orr	r3, r4, r0
   16008:	str	r3, [fp, #-708]	; 0xfffffd3c
   1600c:	orr	r3, r5, r1
   16010:	str	r3, [fp, #-704]	; 0xfffffd40
   16014:	sub	r3, fp, #708	; 0x2c4
   16018:	ldrd	r2, [r3]
   1601c:	strd	r2, [fp, #-76]	; 0xffffffb4
   16020:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16024:	mov	r0, #0
   16028:	mov	r1, #0
   1602c:	lsr	r0, r2, #1
   16030:	orr	r0, r0, r3, lsl #31
   16034:	lsr	r1, r3, #1
   16038:	strd	r0, [fp, #-68]	; 0xffffffbc
   1603c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   16040:	adds	r1, r2, r2
   16044:	str	r1, [fp, #-716]	; 0xfffffd34
   16048:	adc	r3, r3, r3
   1604c:	str	r3, [fp, #-712]	; 0xfffffd38
   16050:	sub	r3, fp, #716	; 0x2cc
   16054:	ldrd	r2, [r3]
   16058:	strd	r2, [fp, #-84]	; 0xffffffac
   1605c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16060:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16064:	cmp	r1, r3
   16068:	cmpeq	r0, r2
   1606c:	bhi	16098 <__assert_fail@plt+0x4f40>
   16070:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16074:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16078:	cmp	r1, r3
   1607c:	cmpeq	r0, r2
   16080:	bne	16148 <__assert_fail@plt+0x4ff0>
   16084:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16088:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1608c:	cmp	r1, r3
   16090:	cmpeq	r0, r2
   16094:	bcc	16148 <__assert_fail@plt+0x4ff0>
   16098:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1609c:	adds	r1, r2, #1
   160a0:	str	r1, [fp, #-724]	; 0xfffffd2c
   160a4:	adc	r3, r3, #0
   160a8:	str	r3, [fp, #-720]	; 0xfffffd30
   160ac:	sub	r3, fp, #724	; 0x2d4
   160b0:	ldrd	r2, [r3]
   160b4:	strd	r2, [fp, #-84]	; 0xffffffac
   160b8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   160bc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   160c0:	cmp	r1, r3
   160c4:	cmpeq	r0, r2
   160c8:	movcc	r3, #1
   160cc:	movcs	r3, #0
   160d0:	uxtb	r3, r3
   160d4:	uxtb	r2, r3
   160d8:	mov	r3, #0
   160dc:	strd	r2, [fp, #-204]	; 0xffffff34
   160e0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   160e4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   160e8:	subs	ip, r0, r2
   160ec:	str	ip, [fp, #-732]	; 0xfffffd24
   160f0:	sbc	r3, r1, r3
   160f4:	str	r3, [fp, #-728]	; 0xfffffd28
   160f8:	sub	r3, fp, #732	; 0x2dc
   160fc:	ldrd	r2, [r3]
   16100:	strd	r2, [fp, #-100]	; 0xffffff9c
   16104:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16108:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1610c:	subs	ip, r0, r2
   16110:	str	ip, [fp, #-588]	; 0xfffffdb4
   16114:	sbc	r3, r1, r3
   16118:	str	r3, [fp, #-584]	; 0xfffffdb8
   1611c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   16120:	sub	r1, fp, #588	; 0x24c
   16124:	ldrd	r0, [r1]
   16128:	mov	ip, r0
   1612c:	subs	ip, ip, r2
   16130:	str	ip, [fp, #-740]	; 0xfffffd1c
   16134:	sbc	r3, r1, r3
   16138:	str	r3, [fp, #-736]	; 0xfffffd20
   1613c:	sub	r3, fp, #740	; 0x2e4
   16140:	ldrd	r2, [r3]
   16144:	strd	r2, [fp, #-92]	; 0xffffffa4
   16148:	ldr	r3, [fp, #-104]	; 0xffffff98
   1614c:	sub	r3, r3, #1
   16150:	str	r3, [fp, #-104]	; 0xffffff98
   16154:	ldr	r3, [fp, #-104]	; 0xffffff98
   16158:	cmp	r3, #0
   1615c:	bne	15fd8 <__assert_fail@plt+0x4e80>
   16160:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   16164:	strd	r2, [fp, #-212]	; 0xffffff2c
   16168:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1616c:	strd	r2, [fp, #-220]	; 0xffffff24
   16170:	sub	r3, fp, #572	; 0x23c
   16174:	ldrd	r0, [r3, #-8]
   16178:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1617c:	subs	ip, r0, r2
   16180:	str	ip, [fp, #-596]	; 0xfffffdac
   16184:	sbc	r3, r1, r3
   16188:	str	r3, [fp, #-592]	; 0xfffffdb0
   1618c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16190:	sub	r1, fp, #596	; 0x254
   16194:	ldrd	r0, [r1]
   16198:	cmp	r3, r1
   1619c:	cmpeq	r2, r0
   161a0:	movcc	r3, #1
   161a4:	movcs	r3, #0
   161a8:	uxtb	r3, r3
   161ac:	uxtb	r2, r3
   161b0:	mov	r3, #0
   161b4:	rsbs	r2, r2, #0
   161b8:	rsc	r3, r3, #0
   161bc:	strd	r2, [fp, #-228]	; 0xffffff1c
   161c0:	sub	r3, fp, #572	; 0x23c
   161c4:	ldrd	r0, [r3, #-8]
   161c8:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   161cc:	and	ip, r0, r2
   161d0:	str	ip, [fp, #-604]	; 0xfffffda4
   161d4:	and	r3, r1, r3
   161d8:	str	r3, [fp, #-600]	; 0xfffffda8
   161dc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   161e0:	sub	r1, fp, #604	; 0x25c
   161e4:	ldrd	r0, [r1]
   161e8:	mov	ip, r0
   161ec:	adds	ip, ip, r2
   161f0:	str	ip, [fp, #-612]	; 0xfffffd9c
   161f4:	adc	r3, r1, r3
   161f8:	str	r3, [fp, #-608]	; 0xfffffda0
   161fc:	sub	r3, fp, #572	; 0x23c
   16200:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   16204:	ldrd	r2, [r3, #-8]
   16208:	subs	ip, r0, r2
   1620c:	str	ip, [fp, #-620]	; 0xfffffd94
   16210:	sbc	r3, r1, r3
   16214:	str	r3, [fp, #-616]	; 0xfffffd98
   16218:	sub	r3, fp, #612	; 0x264
   1621c:	ldrd	r0, [r3]
   16220:	mov	ip, r0
   16224:	sub	r3, fp, #620	; 0x26c
   16228:	ldrd	r2, [r3]
   1622c:	mov	lr, r2
   16230:	adds	ip, ip, lr
   16234:	str	ip, [fp, #-748]	; 0xfffffd14
   16238:	adc	r3, r1, r3
   1623c:	str	r3, [fp, #-744]	; 0xfffffd18
   16240:	sub	r3, fp, #748	; 0x2ec
   16244:	ldrd	r2, [r3]
   16248:	strd	r2, [fp, #-44]	; 0xffffffd4
   1624c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16250:	sub	r3, fp, #572	; 0x23c
   16254:	mov	r0, r3
   16258:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1625c:	strd	r2, [sp, #24]
   16260:	str	r1, [sp, #16]
   16264:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   16268:	strd	r2, [sp, #8]
   1626c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16270:	strd	r2, [sp]
   16274:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   16278:	ldrd	r0, [r0, #-8]
   1627c:	bl	15810 <__assert_fail@plt+0x46b8>
   16280:	mov	r3, r0
   16284:	eor	r3, r3, #1
   16288:	uxtb	r3, r3
   1628c:	cmp	r3, #0
   16290:	beq	1629c <__assert_fail@plt+0x5144>
   16294:	mov	r3, #0
   16298:	b	169ec <__assert_fail@plt+0x5894>
   1629c:	movw	r3, #28948	; 0x7114
   162a0:	movt	r3, #4
   162a4:	ldrb	r3, [r3]
   162a8:	cmp	r3, #0
   162ac:	beq	162e4 <__assert_fail@plt+0x518c>
   162b0:	sub	r3, fp, #572	; 0x23c
   162b4:	ldrd	r2, [r3, #-8]
   162b8:	subs	r1, r2, #1
   162bc:	str	r1, [fp, #-628]	; 0xfffffd8c
   162c0:	sbc	r3, r3, #0
   162c4:	str	r3, [fp, #-624]	; 0xfffffd90
   162c8:	sub	r3, fp, #572	; 0x23c
   162cc:	str	r3, [sp]
   162d0:	sub	r3, fp, #628	; 0x274
   162d4:	ldrd	r2, [r3]
   162d8:	mov	r0, #0
   162dc:	mov	r1, #0
   162e0:	bl	1af94 <__assert_fail@plt+0x9e3c>
   162e4:	mov	r3, #0
   162e8:	str	r3, [fp, #-108]	; 0xffffff94
   162ec:	b	169bc <__assert_fail@plt+0x5864>
   162f0:	movw	r3, #28948	; 0x7114
   162f4:	movt	r3, #4
   162f8:	ldrb	r3, [r3]
   162fc:	cmp	r3, #0
   16300:	beq	163dc <__assert_fail@plt+0x5284>
   16304:	mov	r3, #1
   16308:	strb	r3, [fp, #-33]	; 0xffffffdf
   1630c:	mov	r3, #0
   16310:	str	r3, [fp, #-112]	; 0xffffff90
   16314:	b	163b8 <__assert_fail@plt+0x5260>
   16318:	sub	r3, fp, #572	; 0x23c
   1631c:	ldrd	r2, [r3, #-8]
   16320:	subs	r1, r2, #1
   16324:	str	r1, [fp, #-636]	; 0xfffffd84
   16328:	sbc	r3, r3, #0
   1632c:	str	r3, [fp, #-632]	; 0xfffffd88
   16330:	sub	r3, fp, #572	; 0x23c
   16334:	mov	r2, r3
   16338:	ldr	r3, [fp, #-112]	; 0xffffff90
   1633c:	add	r3, r3, #2
   16340:	lsl	r3, r3, #3
   16344:	add	r3, r2, r3
   16348:	ldrd	r2, [r3]
   1634c:	sub	r1, fp, #636	; 0x27c
   16350:	ldrd	r0, [r1]
   16354:	bl	31f28 <__assert_fail@plt+0x20dd0>
   16358:	mov	r2, r0
   1635c:	mov	r3, r1
   16360:	mov	r0, r2
   16364:	mov	r1, r3
   16368:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1636c:	strd	r2, [sp, #16]
   16370:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   16374:	strd	r2, [sp, #8]
   16378:	sub	r3, fp, #572	; 0x23c
   1637c:	ldrd	r2, [r3, #-8]
   16380:	strd	r2, [sp]
   16384:	mov	r2, r0
   16388:	mov	r3, r1
   1638c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   16390:	bl	1548c <__assert_fail@plt+0x4334>
   16394:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16398:	cmp	r3, r1
   1639c:	cmpeq	r2, r0
   163a0:	movne	r3, #1
   163a4:	moveq	r3, #0
   163a8:	strb	r3, [fp, #-33]	; 0xffffffdf
   163ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   163b0:	add	r3, r3, #1
   163b4:	str	r3, [fp, #-112]	; 0xffffff90
   163b8:	ldrb	r3, [fp, #-322]	; 0xfffffebe
   163bc:	mov	r2, r3
   163c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   163c4:	cmp	r3, r2
   163c8:	bcs	163f0 <__assert_fail@plt+0x5298>
   163cc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   163d0:	cmp	r3, #0
   163d4:	bne	16318 <__assert_fail@plt+0x51c0>
   163d8:	b	163f0 <__assert_fail@plt+0x5298>
   163dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   163e0:	cmp	r3, #24
   163e4:	moveq	r3, #1
   163e8:	movne	r3, #0
   163ec:	strb	r3, [fp, #-33]	; 0xffffffdf
   163f0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   163f4:	cmp	r3, #0
   163f8:	beq	16404 <__assert_fail@plt+0x52ac>
   163fc:	mov	r3, #1
   16400:	b	169ec <__assert_fail@plt+0x5894>
   16404:	movw	r2, #9060	; 0x2364
   16408:	movt	r2, #3
   1640c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16410:	add	r3, r2, r3
   16414:	ldrb	r3, [r3]
   16418:	uxtb	r0, r3
   1641c:	mov	r1, #0
   16420:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16424:	adds	ip, r2, r0
   16428:	str	ip, [fp, #-756]	; 0xfffffd0c
   1642c:	adc	r3, r3, r1
   16430:	str	r3, [fp, #-752]	; 0xfffffd10
   16434:	sub	r3, fp, #756	; 0x2f4
   16438:	ldrd	r2, [r3]
   1643c:	strd	r2, [fp, #-60]	; 0xffffffc4
   16440:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16444:	strd	r2, [fp, #-236]	; 0xffffff14
   16448:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1644c:	strd	r2, [fp, #-244]	; 0xffffff0c
   16450:	ldr	r3, [fp, #-236]	; 0xffffff14
   16454:	str	r3, [fp, #-248]	; 0xffffff08
   16458:	ldrd	r2, [fp, #-236]	; 0xffffff14
   1645c:	mov	r0, #0
   16460:	mov	r1, #0
   16464:	mov	r0, r3
   16468:	mov	r1, #0
   1646c:	mov	r3, r0
   16470:	str	r3, [fp, #-252]	; 0xffffff04
   16474:	ldr	r3, [fp, #-244]	; 0xffffff0c
   16478:	str	r3, [fp, #-256]	; 0xffffff00
   1647c:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   16480:	mov	r0, #0
   16484:	mov	r1, #0
   16488:	mov	r0, r3
   1648c:	mov	r1, #0
   16490:	mov	r3, r0
   16494:	str	r3, [fp, #-260]	; 0xfffffefc
   16498:	ldr	r3, [fp, #-248]	; 0xffffff08
   1649c:	mov	r0, r3
   164a0:	mov	r1, #0
   164a4:	ldr	r3, [fp, #-256]	; 0xffffff00
   164a8:	mov	r2, r3
   164ac:	mov	r3, #0
   164b0:	mul	lr, r2, r1
   164b4:	mul	ip, r0, r3
   164b8:	add	ip, lr, ip
   164bc:	umull	r2, r3, r0, r2
   164c0:	add	r1, ip, r3
   164c4:	mov	r3, r1
   164c8:	sub	r1, fp, #268	; 0x10c
   164cc:	strd	r2, [r1]
   164d0:	sub	r1, fp, #268	; 0x10c
   164d4:	strd	r2, [r1]
   164d8:	ldr	r3, [fp, #-248]	; 0xffffff08
   164dc:	mov	r0, r3
   164e0:	mov	r1, #0
   164e4:	ldr	r3, [fp, #-260]	; 0xfffffefc
   164e8:	mov	r2, r3
   164ec:	mov	r3, #0
   164f0:	mul	lr, r2, r1
   164f4:	mul	ip, r0, r3
   164f8:	add	ip, lr, ip
   164fc:	umull	r2, r3, r0, r2
   16500:	add	r1, ip, r3
   16504:	mov	r3, r1
   16508:	sub	r1, fp, #276	; 0x114
   1650c:	strd	r2, [r1]
   16510:	sub	r1, fp, #276	; 0x114
   16514:	strd	r2, [r1]
   16518:	ldr	r3, [fp, #-252]	; 0xffffff04
   1651c:	mov	r4, r3
   16520:	mov	r5, #0
   16524:	ldr	r3, [fp, #-256]	; 0xffffff00
   16528:	mov	r2, r3
   1652c:	mov	r3, #0
   16530:	sub	r1, fp, #284	; 0x11c
   16534:	mov	ip, r1
   16538:	mul	r0, r2, r5
   1653c:	mul	r1, r4, r3
   16540:	add	r1, r0, r1
   16544:	umull	r2, r3, r4, r2
   16548:	add	r1, r1, r3
   1654c:	mov	r3, r1
   16550:	strd	r2, [ip]
   16554:	strd	r2, [ip]
   16558:	ldr	r3, [fp, #-252]	; 0xffffff04
   1655c:	mov	r0, r3
   16560:	mov	r1, #0
   16564:	ldr	r3, [fp, #-260]	; 0xfffffefc
   16568:	mov	r2, r3
   1656c:	mov	r3, #0
   16570:	mul	lr, r2, r1
   16574:	mul	ip, r0, r3
   16578:	add	ip, lr, ip
   1657c:	umull	r2, r3, r0, r2
   16580:	add	r1, ip, r3
   16584:	mov	r3, r1
   16588:	strd	r2, [fp, #-124]	; 0xffffff84
   1658c:	strd	r2, [fp, #-124]	; 0xffffff84
   16590:	sub	r3, fp, #268	; 0x10c
   16594:	ldrd	r2, [r3]
   16598:	mov	r0, #0
   1659c:	mov	r1, #0
   165a0:	mov	r0, r3
   165a4:	mov	r1, #0
   165a8:	sub	r3, fp, #276	; 0x114
   165ac:	ldrd	r2, [r3]
   165b0:	adds	ip, r2, r0
   165b4:	str	ip, [fp, #-764]	; 0xfffffd04
   165b8:	adc	r3, r3, r1
   165bc:	str	r3, [fp, #-760]	; 0xfffffd08
   165c0:	sub	r1, fp, #276	; 0x114
   165c4:	sub	r3, fp, #764	; 0x2fc
   165c8:	ldrd	r2, [r3]
   165cc:	strd	r2, [r1]
   165d0:	sub	r3, fp, #284	; 0x11c
   165d4:	sub	r2, fp, #276	; 0x114
   165d8:	ldrd	r0, [r2]
   165dc:	ldrd	r2, [r3]
   165e0:	adds	ip, r0, r2
   165e4:	str	ip, [fp, #-772]	; 0xfffffcfc
   165e8:	adc	r3, r1, r3
   165ec:	str	r3, [fp, #-768]	; 0xfffffd00
   165f0:	sub	r1, fp, #276	; 0x114
   165f4:	sub	r3, fp, #772	; 0x304
   165f8:	ldrd	r2, [r3]
   165fc:	strd	r2, [r1]
   16600:	sub	r3, fp, #284	; 0x11c
   16604:	sub	r2, fp, #276	; 0x114
   16608:	ldrd	r0, [r2]
   1660c:	ldrd	r2, [r3]
   16610:	cmp	r1, r3
   16614:	cmpeq	r0, r2
   16618:	bcs	1663c <__assert_fail@plt+0x54e4>
   1661c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   16620:	adds	r1, r2, #0
   16624:	str	r1, [fp, #-780]	; 0xfffffcf4
   16628:	adc	r3, r3, #1
   1662c:	str	r3, [fp, #-776]	; 0xfffffcf8
   16630:	sub	r3, fp, #780	; 0x30c
   16634:	ldrd	r2, [r3]
   16638:	strd	r2, [fp, #-124]	; 0xffffff84
   1663c:	sub	r3, fp, #276	; 0x114
   16640:	ldrd	r2, [r3]
   16644:	mov	r0, #0
   16648:	mov	r1, #0
   1664c:	mov	r0, r3
   16650:	mov	r1, #0
   16654:	sub	r3, fp, #284	; 0x11c
   16658:	mov	ip, r3
   1665c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   16660:	adds	lr, r2, r0
   16664:	str	lr, [fp, #-788]	; 0xfffffcec
   16668:	adc	r3, r3, r1
   1666c:	str	r3, [fp, #-784]	; 0xfffffcf0
   16670:	sub	r3, fp, #788	; 0x314
   16674:	ldrd	r2, [r3]
   16678:	strd	r2, [ip, #-8]
   1667c:	sub	r3, fp, #276	; 0x114
   16680:	ldrd	r2, [r3]
   16684:	mov	r4, #0
   16688:	mov	r5, #0
   1668c:	mov	r5, r2
   16690:	mov	r4, #0
   16694:	sub	r3, fp, #268	; 0x10c
   16698:	ldrd	r0, [r3]
   1669c:	mvn	r2, #0
   166a0:	mov	r3, #0
   166a4:	and	ip, r0, r2
   166a8:	str	ip, [fp, #-644]	; 0xfffffd7c
   166ac:	and	r3, r1, r3
   166b0:	str	r3, [fp, #-640]	; 0xfffffd80
   166b4:	sub	r3, fp, #300	; 0x12c
   166b8:	sub	r2, fp, #644	; 0x284
   166bc:	ldrd	r0, [r2]
   166c0:	mov	r2, r0
   166c4:	adds	r2, r4, r2
   166c8:	str	r2, [fp, #-796]	; 0xfffffce4
   166cc:	mov	r2, r1
   166d0:	adc	r2, r5, r2
   166d4:	str	r2, [fp, #-792]	; 0xfffffce8
   166d8:	sub	r2, fp, #796	; 0x31c
   166dc:	ldrd	r0, [r2]
   166e0:	strd	r0, [r3]
   166e4:	sub	r3, fp, #284	; 0x11c
   166e8:	ldr	r2, [r3, #-8]
   166ec:	ldr	r3, [r3, #-4]
   166f0:	orr	r3, r2, r3
   166f4:	cmp	r3, #0
   166f8:	moveq	r3, #1
   166fc:	movne	r3, #0
   16700:	uxtb	r3, r3
   16704:	cmp	r3, #0
   16708:	beq	1672c <__assert_fail@plt+0x55d4>
   1670c:	sub	r3, fp, #300	; 0x12c
   16710:	mov	r2, r3
   16714:	sub	r3, fp, #572	; 0x23c
   16718:	ldrd	r0, [r2]
   1671c:	ldrd	r2, [r3, #-8]
   16720:	bl	31f28 <__assert_fail@plt+0x20dd0>
   16724:	strd	r2, [fp, #-44]	; 0xffffffd4
   16728:	b	16960 <__assert_fail@plt+0x5808>
   1672c:	sub	r3, fp, #284	; 0x11c
   16730:	mov	r2, r3
   16734:	sub	r3, fp, #572	; 0x23c
   16738:	ldrd	r0, [r2, #-8]
   1673c:	ldrd	r2, [r3, #-8]
   16740:	cmp	r1, r3
   16744:	cmpeq	r0, r2
   16748:	bcc	1676c <__assert_fail@plt+0x5614>
   1674c:	movw	r3, #22276	; 0x5704
   16750:	movt	r3, #3
   16754:	movw	r2, #1262	; 0x4ee
   16758:	movw	r1, #9004	; 0x232c
   1675c:	movt	r1, #3
   16760:	movw	r0, #21472	; 0x53e0
   16764:	movt	r0, #3
   16768:	bl	11158 <__assert_fail@plt>
   1676c:	sub	r3, fp, #572	; 0x23c
   16770:	ldrd	r2, [r3, #-8]
   16774:	strd	r2, [fp, #-132]	; 0xffffff7c
   16778:	mov	r2, #0
   1677c:	mov	r3, #0
   16780:	strd	r2, [fp, #-140]	; 0xffffff74
   16784:	sub	r3, fp, #284	; 0x11c
   16788:	ldrd	r2, [r3, #-8]
   1678c:	strd	r2, [fp, #-156]	; 0xffffff64
   16790:	sub	r3, fp, #300	; 0x12c
   16794:	ldrd	r2, [r3]
   16798:	strd	r2, [fp, #-164]	; 0xffffff5c
   1679c:	mov	r2, #0
   167a0:	mov	r3, #0
   167a4:	strd	r2, [fp, #-148]	; 0xffffff6c
   167a8:	mov	r3, #64	; 0x40
   167ac:	str	r3, [fp, #-168]	; 0xffffff58
   167b0:	b	1693c <__assert_fail@plt+0x57e4>
   167b4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   167b8:	mov	r4, #0
   167bc:	mov	r5, #0
   167c0:	lsl	r5, r2, #31
   167c4:	mov	r4, #0
   167c8:	ldrd	r2, [fp, #-140]	; 0xffffff74
   167cc:	mov	r0, #0
   167d0:	mov	r1, #0
   167d4:	lsr	r0, r2, #1
   167d8:	orr	r0, r0, r3, lsl #31
   167dc:	lsr	r1, r3, #1
   167e0:	orr	r3, r4, r0
   167e4:	str	r3, [fp, #-804]	; 0xfffffcdc
   167e8:	orr	r3, r5, r1
   167ec:	str	r3, [fp, #-800]	; 0xfffffce0
   167f0:	sub	r3, fp, #804	; 0x324
   167f4:	ldrd	r2, [r3]
   167f8:	strd	r2, [fp, #-140]	; 0xffffff74
   167fc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16800:	mov	r0, #0
   16804:	mov	r1, #0
   16808:	lsr	r0, r2, #1
   1680c:	orr	r0, r0, r3, lsl #31
   16810:	lsr	r1, r3, #1
   16814:	strd	r0, [fp, #-132]	; 0xffffff7c
   16818:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1681c:	adds	r1, r2, r2
   16820:	str	r1, [fp, #-812]	; 0xfffffcd4
   16824:	adc	r3, r3, r3
   16828:	str	r3, [fp, #-808]	; 0xfffffcd8
   1682c:	sub	r3, fp, #812	; 0x32c
   16830:	ldrd	r2, [r3]
   16834:	strd	r2, [fp, #-148]	; 0xffffff6c
   16838:	ldrd	r0, [fp, #-156]	; 0xffffff64
   1683c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16840:	cmp	r1, r3
   16844:	cmpeq	r0, r2
   16848:	bhi	16874 <__assert_fail@plt+0x571c>
   1684c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   16850:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16854:	cmp	r1, r3
   16858:	cmpeq	r0, r2
   1685c:	bne	16930 <__assert_fail@plt+0x57d8>
   16860:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   16864:	ldrd	r2, [fp, #-140]	; 0xffffff74
   16868:	cmp	r1, r3
   1686c:	cmpeq	r0, r2
   16870:	bcc	16930 <__assert_fail@plt+0x57d8>
   16874:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   16878:	adds	r1, r2, #1
   1687c:	str	r1, [fp, #-820]	; 0xfffffccc
   16880:	adc	r3, r3, #0
   16884:	str	r3, [fp, #-816]	; 0xfffffcd0
   16888:	sub	r3, fp, #820	; 0x334
   1688c:	ldrd	r2, [r3]
   16890:	strd	r2, [fp, #-148]	; 0xffffff6c
   16894:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   16898:	ldrd	r2, [fp, #-140]	; 0xffffff74
   1689c:	cmp	r1, r3
   168a0:	cmpeq	r0, r2
   168a4:	movcc	r3, #1
   168a8:	movcs	r3, #0
   168ac:	uxtb	r2, r3
   168b0:	sub	r3, fp, #300	; 0x12c
   168b4:	mov	r1, r3
   168b8:	uxtb	r2, r2
   168bc:	mov	r3, #0
   168c0:	strd	r2, [r1, #-8]
   168c4:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   168c8:	ldrd	r2, [fp, #-140]	; 0xffffff74
   168cc:	subs	ip, r0, r2
   168d0:	str	ip, [fp, #-828]	; 0xfffffcc4
   168d4:	sbc	r3, r1, r3
   168d8:	str	r3, [fp, #-824]	; 0xfffffcc8
   168dc:	sub	r3, fp, #828	; 0x33c
   168e0:	ldrd	r2, [r3]
   168e4:	strd	r2, [fp, #-164]	; 0xffffff5c
   168e8:	ldrd	r0, [fp, #-156]	; 0xffffff64
   168ec:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   168f0:	subs	ip, r0, r2
   168f4:	str	ip, [fp, #-652]	; 0xfffffd74
   168f8:	sbc	r3, r1, r3
   168fc:	str	r3, [fp, #-648]	; 0xfffffd78
   16900:	sub	r3, fp, #300	; 0x12c
   16904:	ldrd	r2, [r3, #-8]
   16908:	sub	r1, fp, #652	; 0x28c
   1690c:	ldrd	r0, [r1]
   16910:	mov	ip, r0
   16914:	subs	ip, ip, r2
   16918:	str	ip, [fp, #-836]	; 0xfffffcbc
   1691c:	sbc	r3, r1, r3
   16920:	str	r3, [fp, #-832]	; 0xfffffcc0
   16924:	sub	r3, fp, #836	; 0x344
   16928:	ldrd	r2, [r3]
   1692c:	strd	r2, [fp, #-156]	; 0xffffff64
   16930:	ldr	r3, [fp, #-168]	; 0xffffff58
   16934:	sub	r3, r3, #1
   16938:	str	r3, [fp, #-168]	; 0xffffff58
   1693c:	ldr	r3, [fp, #-168]	; 0xffffff58
   16940:	cmp	r3, #0
   16944:	bne	167b4 <__assert_fail@plt+0x565c>
   16948:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   1694c:	strd	r2, [fp, #-44]	; 0xffffffd4
   16950:	sub	r3, fp, #316	; 0x13c
   16954:	mov	r1, r3
   16958:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1695c:	strd	r2, [r1]
   16960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16964:	sub	r3, fp, #572	; 0x23c
   16968:	mov	r0, r3
   1696c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16970:	strd	r2, [sp, #24]
   16974:	str	r1, [sp, #16]
   16978:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1697c:	strd	r2, [sp, #8]
   16980:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16984:	strd	r2, [sp]
   16988:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1698c:	ldrd	r0, [r0, #-8]
   16990:	bl	15810 <__assert_fail@plt+0x46b8>
   16994:	mov	r3, r0
   16998:	eor	r3, r3, #1
   1699c:	uxtb	r3, r3
   169a0:	cmp	r3, #0
   169a4:	beq	169b0 <__assert_fail@plt+0x5858>
   169a8:	mov	r3, #0
   169ac:	b	169ec <__assert_fail@plt+0x5894>
   169b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   169b4:	add	r3, r3, #1
   169b8:	str	r3, [fp, #-108]	; 0xffffff94
   169bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   169c0:	cmp	r3, #668	; 0x29c
   169c4:	bcc	162f0 <__assert_fail@plt+0x5198>
   169c8:	movw	r0, #21484	; 0x53ec
   169cc:	movt	r0, #3
   169d0:	bl	11044 <gettext@plt>
   169d4:	mov	r3, r0
   169d8:	mov	r2, r3
   169dc:	mov	r1, #0
   169e0:	mov	r0, #0
   169e4:	bl	10fcc <error@plt>
   169e8:	bl	11140 <abort@plt>
   169ec:	mov	r0, r3
   169f0:	sub	sp, fp, #28
   169f4:	ldrd	r4, [sp]
   169f8:	ldrd	r6, [sp, #8]
   169fc:	ldrd	r8, [sp, #16]
   16a00:	ldr	fp, [sp, #24]
   16a04:	add	sp, sp, #28
   16a08:	pop	{pc}		; (ldr pc, [sp], #4)
   16a0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16a10:	strd	r6, [sp, #8]
   16a14:	strd	r8, [sp, #16]
   16a18:	str	fp, [sp, #24]
   16a1c:	str	lr, [sp, #28]
   16a20:	add	fp, sp, #28
   16a24:	sub	sp, sp, #1152	; 0x480
   16a28:	sub	ip, fp, #700	; 0x2bc
   16a2c:	strd	r0, [ip, #-8]
   16a30:	sub	r1, fp, #716	; 0x2cc
   16a34:	strd	r2, [r1]
   16a38:	sub	r3, fp, #700	; 0x2bc
   16a3c:	ldrd	r2, [r3, #-8]
   16a40:	orrs	r3, r2, r3
   16a44:	bne	16a5c <__assert_fail@plt+0x5904>
   16a48:	sub	r3, fp, #716	; 0x2cc
   16a4c:	ldrd	r0, [r3]
   16a50:	bl	15c80 <__assert_fail@plt+0x4b28>
   16a54:	mov	r3, r0
   16a58:	b	180e0 <__assert_fail@plt+0x6f88>
   16a5c:	sub	r3, fp, #716	; 0x2cc
   16a60:	ldr	r2, [r3]
   16a64:	ldr	r3, [r3, #4]
   16a68:	orr	r3, r2, r3
   16a6c:	cmp	r3, #0
   16a70:	moveq	r3, #1
   16a74:	movne	r3, #0
   16a78:	uxtb	r3, r3
   16a7c:	uxtb	r0, r3
   16a80:	mov	r1, #0
   16a84:	sub	r3, fp, #700	; 0x2bc
   16a88:	ldrd	r2, [r3, #-8]
   16a8c:	subs	ip, r2, r0
   16a90:	str	ip, [fp, #-732]	; 0xfffffd24
   16a94:	sbc	r3, r3, r1
   16a98:	str	r3, [fp, #-728]	; 0xfffffd28
   16a9c:	sub	r3, fp, #364	; 0x16c
   16aa0:	sub	r2, fp, #732	; 0x2dc
   16aa4:	ldrd	r0, [r2]
   16aa8:	strd	r0, [r3, #8]
   16aac:	sub	r3, fp, #716	; 0x2cc
   16ab0:	ldrd	r2, [r3]
   16ab4:	subs	r1, r2, #1
   16ab8:	str	r1, [fp, #-740]	; 0xfffffd1c
   16abc:	sbc	r3, r3, #0
   16ac0:	str	r3, [fp, #-736]	; 0xfffffd20
   16ac4:	sub	r3, fp, #364	; 0x16c
   16ac8:	sub	r2, fp, #740	; 0x2e4
   16acc:	ldrd	r0, [r2]
   16ad0:	strd	r0, [r3]
   16ad4:	sub	r3, fp, #364	; 0x16c
   16ad8:	ldrd	r2, [r3]
   16adc:	orrs	r3, r2, r3
   16ae0:	bne	16ba8 <__assert_fail@plt+0x5a50>
   16ae4:	sub	r3, fp, #364	; 0x16c
   16ae8:	ldrd	r2, [r3, #8]
   16aec:	strd	r2, [fp, #-84]	; 0xffffffac
   16af0:	mov	r3, #0
   16af4:	str	r3, [fp, #-88]	; 0xffffffa8
   16af8:	b	16b24 <__assert_fail@plt+0x59cc>
   16afc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   16b00:	mov	r0, #0
   16b04:	mov	r1, #0
   16b08:	lsr	r0, r2, #1
   16b0c:	orr	r0, r0, r3, lsl #31
   16b10:	lsr	r1, r3, #1
   16b14:	strd	r0, [fp, #-84]	; 0xffffffac
   16b18:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16b1c:	add	r3, r3, #1
   16b20:	str	r3, [fp, #-88]	; 0xffffffa8
   16b24:	ldrd	r0, [fp, #-84]	; 0xffffffac
   16b28:	mov	r2, #1
   16b2c:	mov	r3, #0
   16b30:	and	ip, r0, r2
   16b34:	str	ip, [fp, #-748]	; 0xfffffd14
   16b38:	and	r3, r1, r3
   16b3c:	str	r3, [fp, #-744]	; 0xfffffd18
   16b40:	sub	r3, fp, #748	; 0x2ec
   16b44:	ldrd	r2, [r3]
   16b48:	orrs	r3, r2, r3
   16b4c:	beq	16afc <__assert_fail@plt+0x59a4>
   16b50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16b54:	str	r3, [fp, #-72]	; 0xffffffb8
   16b58:	sub	r3, fp, #364	; 0x16c
   16b5c:	ldrd	r2, [r3, #8]
   16b60:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16b64:	rsb	ip, r1, #32
   16b68:	sub	r0, r1, #32
   16b6c:	lsr	r8, r2, r1
   16b70:	orr	r8, r8, r3, lsl ip
   16b74:	orr	r8, r8, r3, lsr r0
   16b78:	lsr	r9, r3, r1
   16b7c:	sub	r3, fp, #348	; 0x15c
   16b80:	strd	r8, [r3]
   16b84:	sub	r3, fp, #348	; 0x15c
   16b88:	mov	r1, r3
   16b8c:	mov	r2, #0
   16b90:	mov	r3, #0
   16b94:	strd	r2, [r1, #8]
   16b98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16b9c:	add	r3, r3, #64	; 0x40
   16ba0:	str	r3, [fp, #-72]	; 0xffffffb8
   16ba4:	b	16cd4 <__assert_fail@plt+0x5b7c>
   16ba8:	sub	r3, fp, #364	; 0x16c
   16bac:	ldrd	r2, [r3]
   16bb0:	strd	r2, [fp, #-100]	; 0xffffff9c
   16bb4:	mov	r3, #0
   16bb8:	str	r3, [fp, #-48]	; 0xffffffd0
   16bbc:	b	16be8 <__assert_fail@plt+0x5a90>
   16bc0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   16bc4:	mov	r0, #0
   16bc8:	mov	r1, #0
   16bcc:	lsr	r0, r2, #1
   16bd0:	orr	r0, r0, r3, lsl #31
   16bd4:	lsr	r1, r3, #1
   16bd8:	strd	r0, [fp, #-100]	; 0xffffff9c
   16bdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16be0:	add	r3, r3, #1
   16be4:	str	r3, [fp, #-48]	; 0xffffffd0
   16be8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16bec:	mov	r2, #1
   16bf0:	mov	r3, #0
   16bf4:	and	ip, r0, r2
   16bf8:	str	ip, [fp, #-756]	; 0xfffffd0c
   16bfc:	and	r3, r1, r3
   16c00:	str	r3, [fp, #-752]	; 0xfffffd10
   16c04:	sub	r3, fp, #756	; 0x2f4
   16c08:	ldrd	r2, [r3]
   16c0c:	orrs	r3, r2, r3
   16c10:	beq	16bc0 <__assert_fail@plt+0x5a68>
   16c14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c18:	str	r3, [fp, #-72]	; 0xffffffb8
   16c1c:	sub	r3, fp, #364	; 0x16c
   16c20:	ldrd	r2, [r3, #8]
   16c24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16c28:	rsb	r1, r1, #64	; 0x40
   16c2c:	sub	ip, r1, #32
   16c30:	rsb	r0, r1, #32
   16c34:	lsl	r7, r3, r1
   16c38:	orr	r7, r7, r2, lsl ip
   16c3c:	orr	r7, r7, r2, lsr r0
   16c40:	lsl	r6, r2, r1
   16c44:	sub	r3, fp, #364	; 0x16c
   16c48:	ldrd	r2, [r3]
   16c4c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16c50:	rsb	ip, r1, #32
   16c54:	sub	r0, r1, #32
   16c58:	lsr	r4, r2, r1
   16c5c:	orr	r4, r4, r3, lsl ip
   16c60:	orr	r4, r4, r3, lsr r0
   16c64:	lsr	r5, r3, r1
   16c68:	orr	r3, r6, r4
   16c6c:	str	r3, [fp, #-764]	; 0xfffffd04
   16c70:	orr	r3, r7, r5
   16c74:	str	r3, [fp, #-760]	; 0xfffffd08
   16c78:	sub	r3, fp, #348	; 0x15c
   16c7c:	sub	r2, fp, #764	; 0x2fc
   16c80:	ldrd	r0, [r2]
   16c84:	strd	r0, [r3]
   16c88:	sub	r3, fp, #364	; 0x16c
   16c8c:	ldrd	r2, [r3, #8]
   16c90:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16c94:	rsb	ip, r1, #32
   16c98:	sub	r0, r1, #32
   16c9c:	lsr	lr, r2, r1
   16ca0:	str	lr, [fp, #-724]	; 0xfffffd2c
   16ca4:	ldr	lr, [fp, #-724]	; 0xfffffd2c
   16ca8:	orr	ip, lr, r3, lsl ip
   16cac:	str	ip, [fp, #-724]	; 0xfffffd2c
   16cb0:	ldr	ip, [fp, #-724]	; 0xfffffd2c
   16cb4:	orr	r0, ip, r3, lsr r0
   16cb8:	str	r0, [fp, #-724]	; 0xfffffd2c
   16cbc:	lsr	r3, r3, r1
   16cc0:	str	r3, [fp, #-720]	; 0xfffffd30
   16cc4:	sub	r3, fp, #348	; 0x15c
   16cc8:	sub	r2, fp, #724	; 0x2d4
   16ccc:	ldrd	r0, [r2]
   16cd0:	strd	r0, [r3, #8]
   16cd4:	mov	r2, #2
   16cd8:	mov	r3, #0
   16cdc:	strd	r2, [fp, #-60]	; 0xffffffc4
   16ce0:	sub	r3, fp, #716	; 0x2cc
   16ce4:	ldrd	r2, [r3]
   16ce8:	strd	r2, [fp, #-156]	; 0xffffff64
   16cec:	ldrd	r2, [fp, #-156]	; 0xffffff64
   16cf0:	mov	r0, #0
   16cf4:	mov	r1, #0
   16cf8:	lsr	r0, r2, #1
   16cfc:	orr	r0, r0, r3, lsl #31
   16d00:	lsr	r1, r3, #1
   16d04:	mov	r2, #127	; 0x7f
   16d08:	mov	r3, #0
   16d0c:	and	ip, r0, r2
   16d10:	str	ip, [fp, #-772]	; 0xfffffcfc
   16d14:	and	r3, r1, r3
   16d18:	str	r3, [fp, #-768]	; 0xfffffd00
   16d1c:	movw	r3, #21236	; 0x52f4
   16d20:	movt	r3, #3
   16d24:	ldr	r2, [fp, #-772]	; 0xfffffcfc
   16d28:	add	r3, r3, r2
   16d2c:	ldrb	r3, [r3]
   16d30:	uxtb	r2, r3
   16d34:	mov	r3, #0
   16d38:	strd	r2, [fp, #-164]	; 0xffffff5c
   16d3c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16d40:	adds	r1, r2, r2
   16d44:	str	r1, [fp, #-876]	; 0xfffffc94
   16d48:	adc	r3, r3, r3
   16d4c:	str	r3, [fp, #-872]	; 0xfffffc98
   16d50:	sub	r3, fp, #876	; 0x36c
   16d54:	ldrd	r4, [r3]
   16d58:	ldr	r2, [fp, #-160]	; 0xffffff60
   16d5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16d60:	mul	r1, r3, r2
   16d64:	ldr	r2, [fp, #-160]	; 0xffffff60
   16d68:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16d6c:	mul	r3, r3, r2
   16d70:	add	r1, r1, r3
   16d74:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16d78:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16d7c:	umull	r2, r3, r2, r3
   16d80:	add	r1, r1, r3
   16d84:	mov	r3, r1
   16d88:	ldr	r1, [fp, #-156]	; 0xffffff64
   16d8c:	mul	r0, r3, r1
   16d90:	ldr	r1, [fp, #-152]	; 0xffffff68
   16d94:	mul	r1, r2, r1
   16d98:	add	r0, r0, r1
   16d9c:	ldr	r1, [fp, #-156]	; 0xffffff64
   16da0:	umull	r2, r3, r1, r2
   16da4:	add	r1, r0, r3
   16da8:	mov	r3, r1
   16dac:	subs	r1, r4, r2
   16db0:	str	r1, [fp, #-884]	; 0xfffffc8c
   16db4:	sbc	r3, r5, r3
   16db8:	str	r3, [fp, #-880]	; 0xfffffc90
   16dbc:	sub	r3, fp, #884	; 0x374
   16dc0:	ldrd	r2, [r3]
   16dc4:	strd	r2, [fp, #-164]	; 0xffffff5c
   16dc8:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16dcc:	adds	r1, r2, r2
   16dd0:	str	r1, [fp, #-892]	; 0xfffffc84
   16dd4:	adc	r3, r3, r3
   16dd8:	str	r3, [fp, #-888]	; 0xfffffc88
   16ddc:	sub	r3, fp, #892	; 0x37c
   16de0:	ldrd	r4, [r3]
   16de4:	ldr	r2, [fp, #-160]	; 0xffffff60
   16de8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16dec:	mul	r1, r3, r2
   16df0:	ldr	r2, [fp, #-160]	; 0xffffff60
   16df4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16df8:	mul	r3, r3, r2
   16dfc:	add	r1, r1, r3
   16e00:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16e04:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16e08:	umull	r2, r3, r2, r3
   16e0c:	add	r1, r1, r3
   16e10:	mov	r3, r1
   16e14:	ldr	r1, [fp, #-156]	; 0xffffff64
   16e18:	mul	r0, r3, r1
   16e1c:	ldr	r1, [fp, #-152]	; 0xffffff68
   16e20:	mul	r1, r2, r1
   16e24:	add	r0, r0, r1
   16e28:	ldr	r1, [fp, #-156]	; 0xffffff64
   16e2c:	umull	r2, r3, r1, r2
   16e30:	add	r1, r0, r3
   16e34:	mov	r3, r1
   16e38:	subs	r1, r4, r2
   16e3c:	str	r1, [fp, #-900]	; 0xfffffc7c
   16e40:	sbc	r3, r5, r3
   16e44:	str	r3, [fp, #-896]	; 0xfffffc80
   16e48:	sub	r3, fp, #900	; 0x384
   16e4c:	ldrd	r2, [r3]
   16e50:	strd	r2, [fp, #-164]	; 0xffffff5c
   16e54:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16e58:	adds	r1, r2, r2
   16e5c:	str	r1, [fp, #-908]	; 0xfffffc74
   16e60:	adc	r3, r3, r3
   16e64:	str	r3, [fp, #-904]	; 0xfffffc78
   16e68:	sub	r3, fp, #908	; 0x38c
   16e6c:	ldrd	r4, [r3]
   16e70:	ldr	r2, [fp, #-160]	; 0xffffff60
   16e74:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16e78:	mul	r1, r3, r2
   16e7c:	ldr	r2, [fp, #-160]	; 0xffffff60
   16e80:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16e84:	mul	r3, r3, r2
   16e88:	add	r1, r1, r3
   16e8c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16e90:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16e94:	umull	r2, r3, r2, r3
   16e98:	add	r1, r1, r3
   16e9c:	mov	r3, r1
   16ea0:	ldr	r1, [fp, #-156]	; 0xffffff64
   16ea4:	mul	r0, r3, r1
   16ea8:	ldr	r1, [fp, #-152]	; 0xffffff68
   16eac:	mul	r1, r2, r1
   16eb0:	add	r0, r0, r1
   16eb4:	ldr	r1, [fp, #-156]	; 0xffffff64
   16eb8:	umull	r2, r3, r1, r2
   16ebc:	add	r1, r0, r3
   16ec0:	mov	r3, r1
   16ec4:	subs	r1, r4, r2
   16ec8:	str	r1, [fp, #-916]	; 0xfffffc6c
   16ecc:	sbc	r3, r5, r3
   16ed0:	str	r3, [fp, #-912]	; 0xfffffc70
   16ed4:	sub	r3, fp, #916	; 0x394
   16ed8:	ldrd	r2, [r3]
   16edc:	strd	r2, [fp, #-164]	; 0xffffff5c
   16ee0:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16ee4:	strd	r2, [fp, #-172]	; 0xffffff54
   16ee8:	sub	r3, fp, #700	; 0x2bc
   16eec:	ldrd	r2, [r3, #-8]
   16ef0:	cmp	r3, #0
   16ef4:	cmpeq	r2, #1
   16ef8:	bls	16f24 <__assert_fail@plt+0x5dcc>
   16efc:	mov	r2, #1
   16f00:	mov	r3, #0
   16f04:	strd	r2, [fp, #-68]	; 0xffffffbc
   16f08:	mov	r2, #0
   16f0c:	mov	r3, #0
   16f10:	strd	r2, [fp, #-36]	; 0xffffffdc
   16f14:	mov	r2, #64	; 0x40
   16f18:	mov	r3, #0
   16f1c:	strd	r2, [fp, #-44]	; 0xffffffd4
   16f20:	b	1709c <__assert_fail@plt+0x5f44>
   16f24:	mov	r2, #0
   16f28:	mov	r3, #0
   16f2c:	strd	r2, [fp, #-68]	; 0xffffffbc
   16f30:	mov	r2, #1
   16f34:	mov	r3, #0
   16f38:	strd	r2, [fp, #-36]	; 0xffffffdc
   16f3c:	mov	r2, #128	; 0x80
   16f40:	mov	r3, #0
   16f44:	strd	r2, [fp, #-44]	; 0xffffffd4
   16f48:	b	1709c <__assert_fail@plt+0x5f44>
   16f4c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   16f50:	adds	r1, r2, r2
   16f54:	str	r1, [fp, #-924]	; 0xfffffc64
   16f58:	adc	r3, r3, r3
   16f5c:	str	r3, [fp, #-920]	; 0xfffffc68
   16f60:	sub	r3, fp, #924	; 0x39c
   16f64:	ldrd	r4, [r3]
   16f68:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16f6c:	mov	r0, #0
   16f70:	mov	r1, #0
   16f74:	lsr	r0, r3, #31
   16f78:	mov	r1, #0
   16f7c:	orr	r3, r4, r0
   16f80:	str	r3, [fp, #-932]	; 0xfffffc5c
   16f84:	orr	r3, r5, r1
   16f88:	str	r3, [fp, #-928]	; 0xfffffc60
   16f8c:	sub	r3, fp, #932	; 0x3a4
   16f90:	ldrd	r2, [r3]
   16f94:	strd	r2, [fp, #-68]	; 0xffffffbc
   16f98:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16f9c:	adds	r1, r2, r2
   16fa0:	str	r1, [fp, #-940]	; 0xfffffc54
   16fa4:	adc	r3, r3, r3
   16fa8:	str	r3, [fp, #-936]	; 0xfffffc58
   16fac:	sub	r3, fp, #940	; 0x3ac
   16fb0:	ldrd	r2, [r3]
   16fb4:	strd	r2, [fp, #-36]	; 0xffffffdc
   16fb8:	sub	r3, fp, #700	; 0x2bc
   16fbc:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   16fc0:	ldrd	r2, [r3, #-8]
   16fc4:	cmp	r1, r3
   16fc8:	cmpeq	r0, r2
   16fcc:	bhi	17000 <__assert_fail@plt+0x5ea8>
   16fd0:	sub	r3, fp, #700	; 0x2bc
   16fd4:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   16fd8:	ldrd	r2, [r3, #-8]
   16fdc:	cmp	r1, r3
   16fe0:	cmpeq	r0, r2
   16fe4:	bne	1709c <__assert_fail@plt+0x5f44>
   16fe8:	sub	r3, fp, #716	; 0x2cc
   16fec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16ff0:	ldrd	r2, [r3]
   16ff4:	cmp	r1, r3
   16ff8:	cmpeq	r0, r2
   16ffc:	bcc	1709c <__assert_fail@plt+0x5f44>
   17000:	sub	r3, fp, #716	; 0x2cc
   17004:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17008:	ldrd	r2, [r3]
   1700c:	cmp	r1, r3
   17010:	cmpeq	r0, r2
   17014:	movcc	r3, #1
   17018:	movcs	r3, #0
   1701c:	uxtb	r3, r3
   17020:	uxtb	r2, r3
   17024:	mov	r3, #0
   17028:	strd	r2, [fp, #-180]	; 0xffffff4c
   1702c:	sub	r3, fp, #716	; 0x2cc
   17030:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17034:	ldrd	r2, [r3]
   17038:	subs	ip, r0, r2
   1703c:	str	ip, [fp, #-948]	; 0xfffffc4c
   17040:	sbc	r3, r1, r3
   17044:	str	r3, [fp, #-944]	; 0xfffffc50
   17048:	sub	r3, fp, #948	; 0x3b4
   1704c:	ldrd	r2, [r3]
   17050:	strd	r2, [fp, #-36]	; 0xffffffdc
   17054:	sub	r3, fp, #700	; 0x2bc
   17058:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1705c:	ldrd	r2, [r3, #-8]
   17060:	subs	ip, r0, r2
   17064:	str	ip, [fp, #-780]	; 0xfffffcf4
   17068:	sbc	r3, r1, r3
   1706c:	str	r3, [fp, #-776]	; 0xfffffcf8
   17070:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17074:	sub	r1, fp, #780	; 0x30c
   17078:	ldrd	r0, [r1]
   1707c:	mov	ip, r0
   17080:	subs	ip, ip, r2
   17084:	str	ip, [fp, #-956]	; 0xfffffc44
   17088:	sbc	r3, r1, r3
   1708c:	str	r3, [fp, #-952]	; 0xfffffc48
   17090:	sub	r3, fp, #956	; 0x3bc
   17094:	ldrd	r2, [r3]
   17098:	strd	r2, [fp, #-68]	; 0xffffffbc
   1709c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   170a0:	subs	r1, r2, #1
   170a4:	str	r1, [fp, #-964]	; 0xfffffc3c
   170a8:	sbc	r1, r3, #0
   170ac:	str	r1, [fp, #-960]	; 0xfffffc40
   170b0:	sub	r1, fp, #964	; 0x3c4
   170b4:	ldrd	r0, [r1]
   170b8:	strd	r0, [fp, #-44]	; 0xffffffd4
   170bc:	orrs	r3, r2, r3
   170c0:	bne	16f4c <__assert_fail@plt+0x5df4>
   170c4:	sub	r3, fp, #396	; 0x18c
   170c8:	mov	r1, r3
   170cc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   170d0:	strd	r2, [r1, #8]
   170d4:	sub	r3, fp, #396	; 0x18c
   170d8:	mov	r1, r3
   170dc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   170e0:	strd	r2, [r1]
   170e4:	sub	r3, fp, #396	; 0x18c
   170e8:	ldrd	r2, [r3]
   170ec:	adds	r1, r2, r2
   170f0:	str	r1, [fp, #-972]	; 0xfffffc34
   170f4:	adc	r3, r3, r3
   170f8:	str	r3, [fp, #-968]	; 0xfffffc38
   170fc:	sub	r3, fp, #972	; 0x3cc
   17100:	ldrd	r2, [r3]
   17104:	strd	r2, [fp, #-188]	; 0xffffff44
   17108:	sub	r3, fp, #396	; 0x18c
   1710c:	ldrd	r2, [r3, #8]
   17110:	adds	r1, r2, r2
   17114:	str	r1, [fp, #-980]	; 0xfffffc2c
   17118:	adc	r3, r3, r3
   1711c:	str	r3, [fp, #-976]	; 0xfffffc30
   17120:	sub	r3, fp, #980	; 0x3d4
   17124:	ldrd	r4, [r3]
   17128:	sub	r3, fp, #396	; 0x18c
   1712c:	ldrd	r0, [r3]
   17130:	ldrd	r2, [fp, #-188]	; 0xffffff44
   17134:	cmp	r3, r1
   17138:	cmpeq	r2, r0
   1713c:	movcc	r3, #1
   17140:	movcs	r3, #0
   17144:	uxtb	r3, r3
   17148:	uxtb	r2, r3
   1714c:	mov	r3, #0
   17150:	adds	r1, r4, r2
   17154:	str	r1, [fp, #-788]	; 0xfffffcec
   17158:	adc	r3, r5, r3
   1715c:	str	r3, [fp, #-784]	; 0xfffffcf0
   17160:	sub	r3, fp, #380	; 0x17c
   17164:	sub	r2, fp, #788	; 0x314
   17168:	ldrd	r0, [r2]
   1716c:	strd	r0, [r3, #8]
   17170:	sub	r3, fp, #380	; 0x17c
   17174:	mov	r1, r3
   17178:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1717c:	strd	r2, [r1]
   17180:	sub	r3, fp, #380	; 0x17c
   17184:	ldrd	r0, [r3, #8]
   17188:	sub	r3, fp, #700	; 0x2bc
   1718c:	ldrd	r2, [r3, #-8]
   17190:	cmp	r3, r1
   17194:	cmpeq	r2, r0
   17198:	bcc	171d4 <__assert_fail@plt+0x607c>
   1719c:	sub	r3, fp, #380	; 0x17c
   171a0:	ldrd	r0, [r3, #8]
   171a4:	sub	r3, fp, #700	; 0x2bc
   171a8:	ldrd	r2, [r3, #-8]
   171ac:	cmp	r3, r1
   171b0:	cmpeq	r2, r0
   171b4:	bne	17284 <__assert_fail@plt+0x612c>
   171b8:	sub	r3, fp, #380	; 0x17c
   171bc:	ldrd	r0, [r3]
   171c0:	sub	r3, fp, #716	; 0x2cc
   171c4:	ldrd	r2, [r3]
   171c8:	cmp	r3, r1
   171cc:	cmpeq	r2, r0
   171d0:	bhi	17284 <__assert_fail@plt+0x612c>
   171d4:	sub	r3, fp, #380	; 0x17c
   171d8:	ldrd	r0, [r3]
   171dc:	sub	r3, fp, #716	; 0x2cc
   171e0:	ldrd	r2, [r3]
   171e4:	cmp	r3, r1
   171e8:	cmpeq	r2, r0
   171ec:	movhi	r3, #1
   171f0:	movls	r3, #0
   171f4:	uxtb	r3, r3
   171f8:	uxtb	r2, r3
   171fc:	mov	r3, #0
   17200:	strd	r2, [fp, #-196]	; 0xffffff3c
   17204:	sub	r3, fp, #380	; 0x17c
   17208:	ldrd	r0, [r3]
   1720c:	sub	r3, fp, #716	; 0x2cc
   17210:	ldrd	r2, [r3]
   17214:	subs	ip, r0, r2
   17218:	str	ip, [fp, #-796]	; 0xfffffce4
   1721c:	sbc	r3, r1, r3
   17220:	str	r3, [fp, #-792]	; 0xfffffce8
   17224:	sub	r3, fp, #380	; 0x17c
   17228:	sub	r2, fp, #796	; 0x31c
   1722c:	ldrd	r0, [r2]
   17230:	strd	r0, [r3]
   17234:	sub	r3, fp, #380	; 0x17c
   17238:	ldrd	r0, [r3, #8]
   1723c:	sub	r3, fp, #700	; 0x2bc
   17240:	ldrd	r2, [r3, #-8]
   17244:	subs	ip, r0, r2
   17248:	str	ip, [fp, #-804]	; 0xfffffcdc
   1724c:	sbc	r3, r1, r3
   17250:	str	r3, [fp, #-800]	; 0xfffffce0
   17254:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17258:	sub	r1, fp, #804	; 0x324
   1725c:	ldrd	r0, [r1]
   17260:	mov	ip, r0
   17264:	subs	ip, ip, r2
   17268:	str	ip, [fp, #-812]	; 0xfffffcd4
   1726c:	sbc	r3, r1, r3
   17270:	str	r3, [fp, #-808]	; 0xfffffcd8
   17274:	sub	r3, fp, #380	; 0x17c
   17278:	sub	r2, fp, #812	; 0x32c
   1727c:	ldrd	r0, [r2]
   17280:	strd	r0, [r3, #8]
   17284:	sub	r3, fp, #412	; 0x19c
   17288:	mov	r1, r3
   1728c:	sub	r3, fp, #716	; 0x2cc
   17290:	ldrd	r2, [r3]
   17294:	strd	r2, [r1]
   17298:	sub	r3, fp, #412	; 0x19c
   1729c:	mov	r1, r3
   172a0:	sub	r3, fp, #700	; 0x2bc
   172a4:	ldrd	r2, [r3, #-8]
   172a8:	strd	r2, [r1, #8]
   172ac:	sub	r1, fp, #412	; 0x19c
   172b0:	sub	r3, fp, #396	; 0x18c
   172b4:	str	r3, [sp, #12]
   172b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   172bc:	str	r3, [sp, #8]
   172c0:	sub	r3, fp, #348	; 0x15c
   172c4:	str	r3, [sp, #4]
   172c8:	sub	r3, fp, #380	; 0x17c
   172cc:	str	r3, [sp]
   172d0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   172d4:	mov	r0, r1
   172d8:	bl	15934 <__assert_fail@plt+0x47dc>
   172dc:	mov	r3, r0
   172e0:	eor	r3, r3, #1
   172e4:	uxtb	r3, r3
   172e8:	cmp	r3, #0
   172ec:	beq	172f8 <__assert_fail@plt+0x61a0>
   172f0:	mov	r3, #0
   172f4:	b	180e0 <__assert_fail@plt+0x6f88>
   172f8:	movw	r3, #28948	; 0x7114
   172fc:	movt	r3, #4
   17300:	ldrb	r3, [r3]
   17304:	cmp	r3, #0
   17308:	beq	17338 <__assert_fail@plt+0x61e0>
   1730c:	sub	r3, fp, #364	; 0x16c
   17310:	ldrd	r4, [r3, #8]
   17314:	sub	r3, fp, #364	; 0x16c
   17318:	ldrd	r0, [r3]
   1731c:	sub	r3, fp, #668	; 0x29c
   17320:	str	r3, [sp]
   17324:	mov	r2, r0
   17328:	mov	r3, r1
   1732c:	mov	r0, r4
   17330:	mov	r1, r5
   17334:	bl	1af94 <__assert_fail@plt+0x9e3c>
   17338:	mov	r3, #0
   1733c:	str	r3, [fp, #-104]	; 0xffffff98
   17340:	b	180b0 <__assert_fail@plt+0x6f58>
   17344:	movw	r3, #28948	; 0x7114
   17348:	movt	r3, #4
   1734c:	ldrb	r3, [r3]
   17350:	cmp	r3, #0
   17354:	beq	17dd4 <__assert_fail@plt+0x6c7c>
   17358:	mov	r3, #1
   1735c:	strb	r3, [fp, #-105]	; 0xffffff97
   17360:	sub	r3, fp, #668	; 0x29c
   17364:	ldrd	r2, [r3, #8]
   17368:	orrs	r3, r2, r3
   1736c:	beq	17650 <__assert_fail@plt+0x64f8>
   17370:	sub	r3, fp, #668	; 0x29c
   17374:	ldrd	r2, [r3]
   17378:	strd	r2, [fp, #-204]	; 0xffffff34
   1737c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17380:	mov	r0, #0
   17384:	mov	r1, #0
   17388:	lsr	r0, r2, #1
   1738c:	orr	r0, r0, r3, lsl #31
   17390:	lsr	r1, r3, #1
   17394:	mov	r2, #127	; 0x7f
   17398:	mov	r3, #0
   1739c:	and	ip, r0, r2
   173a0:	str	ip, [fp, #-820]	; 0xfffffccc
   173a4:	and	r3, r1, r3
   173a8:	str	r3, [fp, #-816]	; 0xfffffcd0
   173ac:	movw	r3, #21236	; 0x52f4
   173b0:	movt	r3, #3
   173b4:	ldr	r2, [fp, #-820]	; 0xfffffccc
   173b8:	add	r3, r3, r2
   173bc:	ldrb	r3, [r3]
   173c0:	uxtb	r2, r3
   173c4:	mov	r3, #0
   173c8:	strd	r2, [fp, #-212]	; 0xffffff2c
   173cc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   173d0:	adds	r1, r2, r2
   173d4:	str	r1, [fp, #-988]	; 0xfffffc24
   173d8:	adc	r3, r3, r3
   173dc:	str	r3, [fp, #-984]	; 0xfffffc28
   173e0:	sub	r3, fp, #988	; 0x3dc
   173e4:	ldrd	r4, [r3]
   173e8:	ldr	r2, [fp, #-208]	; 0xffffff30
   173ec:	ldr	r3, [fp, #-212]	; 0xffffff2c
   173f0:	mul	r1, r3, r2
   173f4:	ldr	r2, [fp, #-208]	; 0xffffff30
   173f8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   173fc:	mul	r3, r3, r2
   17400:	add	r1, r1, r3
   17404:	ldr	r2, [fp, #-212]	; 0xffffff2c
   17408:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1740c:	umull	r2, r3, r2, r3
   17410:	add	r1, r1, r3
   17414:	mov	r3, r1
   17418:	ldr	r1, [fp, #-204]	; 0xffffff34
   1741c:	mul	r0, r3, r1
   17420:	ldr	r1, [fp, #-200]	; 0xffffff38
   17424:	mul	r1, r2, r1
   17428:	add	r0, r0, r1
   1742c:	ldr	r1, [fp, #-204]	; 0xffffff34
   17430:	umull	r2, r3, r1, r2
   17434:	add	r1, r0, r3
   17438:	mov	r3, r1
   1743c:	subs	r1, r4, r2
   17440:	str	r1, [fp, #-996]	; 0xfffffc1c
   17444:	sbc	r3, r5, r3
   17448:	str	r3, [fp, #-992]	; 0xfffffc20
   1744c:	sub	r3, fp, #996	; 0x3e4
   17450:	ldrd	r2, [r3]
   17454:	strd	r2, [fp, #-212]	; 0xffffff2c
   17458:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1745c:	adds	r1, r2, r2
   17460:	str	r1, [fp, #-1004]	; 0xfffffc14
   17464:	adc	r3, r3, r3
   17468:	str	r3, [fp, #-1000]	; 0xfffffc18
   1746c:	sub	r3, fp, #1004	; 0x3ec
   17470:	ldrd	r4, [r3]
   17474:	ldr	r2, [fp, #-208]	; 0xffffff30
   17478:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1747c:	mul	r1, r3, r2
   17480:	ldr	r2, [fp, #-208]	; 0xffffff30
   17484:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17488:	mul	r3, r3, r2
   1748c:	add	r1, r1, r3
   17490:	ldr	r2, [fp, #-212]	; 0xffffff2c
   17494:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17498:	umull	r2, r3, r2, r3
   1749c:	add	r1, r1, r3
   174a0:	mov	r3, r1
   174a4:	ldr	r1, [fp, #-204]	; 0xffffff34
   174a8:	mul	r0, r3, r1
   174ac:	ldr	r1, [fp, #-200]	; 0xffffff38
   174b0:	mul	r1, r2, r1
   174b4:	add	r0, r0, r1
   174b8:	ldr	r1, [fp, #-204]	; 0xffffff34
   174bc:	umull	r2, r3, r1, r2
   174c0:	add	r1, r0, r3
   174c4:	mov	r3, r1
   174c8:	subs	r1, r4, r2
   174cc:	str	r1, [fp, #-1012]	; 0xfffffc0c
   174d0:	sbc	r3, r5, r3
   174d4:	str	r3, [fp, #-1008]	; 0xfffffc10
   174d8:	sub	r3, fp, #1012	; 0x3f4
   174dc:	ldrd	r2, [r3]
   174e0:	strd	r2, [fp, #-212]	; 0xffffff2c
   174e4:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   174e8:	adds	r1, r2, r2
   174ec:	str	r1, [fp, #-1020]	; 0xfffffc04
   174f0:	adc	r3, r3, r3
   174f4:	str	r3, [fp, #-1016]	; 0xfffffc08
   174f8:	sub	r3, fp, #1020	; 0x3fc
   174fc:	ldrd	r4, [r3]
   17500:	ldr	r2, [fp, #-208]	; 0xffffff30
   17504:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17508:	mul	r1, r3, r2
   1750c:	ldr	r2, [fp, #-208]	; 0xffffff30
   17510:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17514:	mul	r3, r3, r2
   17518:	add	r1, r1, r3
   1751c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   17520:	ldr	r3, [fp, #-212]	; 0xffffff2c
   17524:	umull	r2, r3, r2, r3
   17528:	add	r1, r1, r3
   1752c:	mov	r3, r1
   17530:	ldr	r1, [fp, #-204]	; 0xffffff34
   17534:	mul	r0, r3, r1
   17538:	ldr	r1, [fp, #-200]	; 0xffffff38
   1753c:	mul	r1, r2, r1
   17540:	add	r0, r0, r1
   17544:	ldr	r1, [fp, #-204]	; 0xffffff34
   17548:	umull	r2, r3, r1, r2
   1754c:	add	r1, r0, r3
   17550:	mov	r3, r1
   17554:	subs	r1, r4, r2
   17558:	str	r1, [fp, #-1028]	; 0xfffffbfc
   1755c:	sbc	r3, r5, r3
   17560:	str	r3, [fp, #-1024]	; 0xfffffc00
   17564:	sub	r3, fp, #1024	; 0x400
   17568:	sub	r3, r3, #4
   1756c:	ldrd	r2, [r3]
   17570:	strd	r2, [fp, #-212]	; 0xffffff2c
   17574:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17578:	strd	r2, [fp, #-220]	; 0xffffff24
   1757c:	sub	r3, fp, #364	; 0x16c
   17580:	ldrd	r2, [r3]
   17584:	ldr	r1, [fp, #-220]	; 0xffffff24
   17588:	mul	r0, r3, r1
   1758c:	ldr	r1, [fp, #-216]	; 0xffffff28
   17590:	mul	r1, r2, r1
   17594:	add	r0, r0, r1
   17598:	ldr	r1, [fp, #-220]	; 0xffffff24
   1759c:	umull	r2, r3, r1, r2
   175a0:	add	r1, r0, r3
   175a4:	mov	r3, r1
   175a8:	sub	r1, fp, #684	; 0x2ac
   175ac:	strd	r2, [r1]
   175b0:	sub	r3, fp, #684	; 0x2ac
   175b4:	mov	r1, r3
   175b8:	mov	r2, #0
   175bc:	mov	r3, #0
   175c0:	strd	r2, [r1, #8]
   175c4:	sub	lr, fp, #412	; 0x19c
   175c8:	sub	ip, fp, #684	; 0x2ac
   175cc:	sub	r1, fp, #380	; 0x17c
   175d0:	sub	r3, fp, #700	; 0x2bc
   175d4:	add	r0, r3, #8
   175d8:	sub	r3, fp, #396	; 0x18c
   175dc:	str	r3, [sp, #8]
   175e0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   175e4:	strd	r2, [sp]
   175e8:	mov	r3, lr
   175ec:	mov	r2, ip
   175f0:	bl	15584 <__assert_fail@plt+0x442c>
   175f4:	sub	r3, fp, #700	; 0x2bc
   175f8:	strd	r0, [r3]
   175fc:	sub	r3, fp, #700	; 0x2bc
   17600:	ldrd	r0, [r3]
   17604:	sub	r3, fp, #396	; 0x18c
   17608:	ldrd	r2, [r3]
   1760c:	cmp	r1, r3
   17610:	cmpeq	r0, r2
   17614:	bne	17634 <__assert_fail@plt+0x64dc>
   17618:	sub	r3, fp, #700	; 0x2bc
   1761c:	ldrd	r0, [r3, #8]
   17620:	sub	r3, fp, #396	; 0x18c
   17624:	ldrd	r2, [r3, #8]
   17628:	cmp	r1, r3
   1762c:	cmpeq	r0, r2
   17630:	beq	1763c <__assert_fail@plt+0x64e4>
   17634:	mov	r3, #1
   17638:	b	17640 <__assert_fail@plt+0x64e8>
   1763c:	mov	r3, #0
   17640:	strb	r3, [fp, #-105]	; 0xffffff97
   17644:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17648:	and	r3, r3, #1
   1764c:	strb	r3, [fp, #-105]	; 0xffffff97
   17650:	mov	r3, #0
   17654:	str	r3, [fp, #-112]	; 0xffffff90
   17658:	b	17db0 <__assert_fail@plt+0x6c58>
   1765c:	sub	r3, fp, #668	; 0x29c
   17660:	mov	r2, r3
   17664:	ldr	r3, [fp, #-112]	; 0xffffff90
   17668:	add	r3, r3, #2
   1766c:	lsl	r3, r3, #3
   17670:	add	r3, r2, r3
   17674:	ldrd	r2, [r3]
   17678:	cmp	r3, #0
   1767c:	cmpeq	r2, #2
   17680:	bne	17700 <__assert_fail@plt+0x65a8>
   17684:	sub	r3, fp, #364	; 0x16c
   17688:	ldrd	r2, [r3, #8]
   1768c:	mov	r4, #0
   17690:	mov	r5, #0
   17694:	lsl	r5, r2, #31
   17698:	mov	r4, #0
   1769c:	sub	r3, fp, #364	; 0x16c
   176a0:	ldrd	r2, [r3]
   176a4:	mov	r0, #0
   176a8:	mov	r1, #0
   176ac:	lsr	r0, r2, #1
   176b0:	orr	r0, r0, r3, lsl #31
   176b4:	lsr	r1, r3, #1
   176b8:	orr	r3, r4, r0
   176bc:	str	r3, [fp, #-828]	; 0xfffffcc4
   176c0:	orr	r3, r5, r1
   176c4:	str	r3, [fp, #-824]	; 0xfffffcc8
   176c8:	sub	r3, fp, #684	; 0x2ac
   176cc:	sub	r2, fp, #828	; 0x33c
   176d0:	ldrd	r0, [r2]
   176d4:	strd	r0, [r3]
   176d8:	sub	r3, fp, #364	; 0x16c
   176dc:	ldrd	r2, [r3, #8]
   176e0:	mov	r0, #0
   176e4:	mov	r1, #0
   176e8:	lsr	r0, r2, #1
   176ec:	orr	r0, r0, r3, lsl #31
   176f0:	lsr	r1, r3, #1
   176f4:	sub	r3, fp, #684	; 0x2ac
   176f8:	strd	r0, [r3, #8]
   176fc:	b	17d18 <__assert_fail@plt+0x6bc0>
   17700:	sub	r3, fp, #668	; 0x29c
   17704:	mov	r2, r3
   17708:	ldr	r3, [fp, #-112]	; 0xffffff90
   1770c:	add	r3, r3, #2
   17710:	lsl	r3, r3, #3
   17714:	add	r3, r2, r3
   17718:	ldrd	r2, [r3]
   1771c:	strd	r2, [fp, #-228]	; 0xffffff1c
   17720:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   17724:	mov	r0, #0
   17728:	mov	r1, #0
   1772c:	lsr	r0, r2, #1
   17730:	orr	r0, r0, r3, lsl #31
   17734:	lsr	r1, r3, #1
   17738:	mov	r2, #127	; 0x7f
   1773c:	mov	r3, #0
   17740:	and	ip, r0, r2
   17744:	str	ip, [fp, #-836]	; 0xfffffcbc
   17748:	and	r3, r1, r3
   1774c:	str	r3, [fp, #-832]	; 0xfffffcc0
   17750:	movw	r3, #21236	; 0x52f4
   17754:	movt	r3, #3
   17758:	ldr	r2, [fp, #-836]	; 0xfffffcbc
   1775c:	add	r3, r3, r2
   17760:	ldrb	r3, [r3]
   17764:	uxtb	r2, r3
   17768:	mov	r3, #0
   1776c:	strd	r2, [fp, #-236]	; 0xffffff14
   17770:	ldrd	r2, [fp, #-236]	; 0xffffff14
   17774:	adds	r1, r2, r2
   17778:	str	r1, [fp, #-1036]	; 0xfffffbf4
   1777c:	adc	r3, r3, r3
   17780:	str	r3, [fp, #-1032]	; 0xfffffbf8
   17784:	sub	r3, fp, #1024	; 0x400
   17788:	sub	r3, r3, #12
   1778c:	ldrd	r4, [r3]
   17790:	ldr	r2, [fp, #-232]	; 0xffffff18
   17794:	ldr	r3, [fp, #-236]	; 0xffffff14
   17798:	mul	r1, r3, r2
   1779c:	ldr	r2, [fp, #-232]	; 0xffffff18
   177a0:	ldr	r3, [fp, #-236]	; 0xffffff14
   177a4:	mul	r3, r3, r2
   177a8:	add	r1, r1, r3
   177ac:	ldr	r2, [fp, #-236]	; 0xffffff14
   177b0:	ldr	r3, [fp, #-236]	; 0xffffff14
   177b4:	umull	r2, r3, r2, r3
   177b8:	add	r1, r1, r3
   177bc:	mov	r3, r1
   177c0:	ldr	r1, [fp, #-228]	; 0xffffff1c
   177c4:	mul	r0, r3, r1
   177c8:	ldr	r1, [fp, #-224]	; 0xffffff20
   177cc:	mul	r1, r2, r1
   177d0:	add	r0, r0, r1
   177d4:	ldr	r1, [fp, #-228]	; 0xffffff1c
   177d8:	umull	r2, r3, r1, r2
   177dc:	add	r1, r0, r3
   177e0:	mov	r3, r1
   177e4:	subs	r1, r4, r2
   177e8:	str	r1, [fp, #-1044]	; 0xfffffbec
   177ec:	sbc	r3, r5, r3
   177f0:	str	r3, [fp, #-1040]	; 0xfffffbf0
   177f4:	sub	r3, fp, #1040	; 0x410
   177f8:	sub	r3, r3, #4
   177fc:	ldrd	r2, [r3]
   17800:	strd	r2, [fp, #-236]	; 0xffffff14
   17804:	ldrd	r2, [fp, #-236]	; 0xffffff14
   17808:	adds	r1, r2, r2
   1780c:	str	r1, [fp, #-1052]	; 0xfffffbe4
   17810:	adc	r3, r3, r3
   17814:	str	r3, [fp, #-1048]	; 0xfffffbe8
   17818:	sub	r3, fp, #1040	; 0x410
   1781c:	sub	r3, r3, #12
   17820:	ldrd	r4, [r3]
   17824:	ldr	r2, [fp, #-232]	; 0xffffff18
   17828:	ldr	r3, [fp, #-236]	; 0xffffff14
   1782c:	mul	r1, r3, r2
   17830:	ldr	r2, [fp, #-232]	; 0xffffff18
   17834:	ldr	r3, [fp, #-236]	; 0xffffff14
   17838:	mul	r3, r3, r2
   1783c:	add	r1, r1, r3
   17840:	ldr	r2, [fp, #-236]	; 0xffffff14
   17844:	ldr	r3, [fp, #-236]	; 0xffffff14
   17848:	umull	r2, r3, r2, r3
   1784c:	add	r1, r1, r3
   17850:	mov	r3, r1
   17854:	ldr	r1, [fp, #-228]	; 0xffffff1c
   17858:	mul	r0, r3, r1
   1785c:	ldr	r1, [fp, #-224]	; 0xffffff20
   17860:	mul	r1, r2, r1
   17864:	add	r0, r0, r1
   17868:	ldr	r1, [fp, #-228]	; 0xffffff1c
   1786c:	umull	r2, r3, r1, r2
   17870:	add	r1, r0, r3
   17874:	mov	r3, r1
   17878:	subs	r1, r4, r2
   1787c:	str	r1, [fp, #-1060]	; 0xfffffbdc
   17880:	sbc	r3, r5, r3
   17884:	str	r3, [fp, #-1056]	; 0xfffffbe0
   17888:	sub	r3, fp, #1056	; 0x420
   1788c:	sub	r3, r3, #4
   17890:	ldrd	r2, [r3]
   17894:	strd	r2, [fp, #-236]	; 0xffffff14
   17898:	ldrd	r2, [fp, #-236]	; 0xffffff14
   1789c:	adds	r1, r2, r2
   178a0:	str	r1, [fp, #-1068]	; 0xfffffbd4
   178a4:	adc	r3, r3, r3
   178a8:	str	r3, [fp, #-1064]	; 0xfffffbd8
   178ac:	sub	r3, fp, #1056	; 0x420
   178b0:	sub	r3, r3, #12
   178b4:	ldrd	r4, [r3]
   178b8:	ldr	r2, [fp, #-232]	; 0xffffff18
   178bc:	ldr	r3, [fp, #-236]	; 0xffffff14
   178c0:	mul	r1, r3, r2
   178c4:	ldr	r2, [fp, #-232]	; 0xffffff18
   178c8:	ldr	r3, [fp, #-236]	; 0xffffff14
   178cc:	mul	r3, r3, r2
   178d0:	add	r1, r1, r3
   178d4:	ldr	r2, [fp, #-236]	; 0xffffff14
   178d8:	ldr	r3, [fp, #-236]	; 0xffffff14
   178dc:	umull	r2, r3, r2, r3
   178e0:	add	r1, r1, r3
   178e4:	mov	r3, r1
   178e8:	ldr	r1, [fp, #-228]	; 0xffffff1c
   178ec:	mul	r0, r3, r1
   178f0:	ldr	r1, [fp, #-224]	; 0xffffff20
   178f4:	mul	r1, r2, r1
   178f8:	add	r0, r0, r1
   178fc:	ldr	r1, [fp, #-228]	; 0xffffff1c
   17900:	umull	r2, r3, r1, r2
   17904:	add	r1, r0, r3
   17908:	mov	r3, r1
   1790c:	subs	r1, r4, r2
   17910:	str	r1, [fp, #-1076]	; 0xfffffbcc
   17914:	sbc	r3, r5, r3
   17918:	str	r3, [fp, #-1072]	; 0xfffffbd0
   1791c:	sub	r3, fp, #1072	; 0x430
   17920:	sub	r3, r3, #4
   17924:	ldrd	r2, [r3]
   17928:	strd	r2, [fp, #-236]	; 0xffffff14
   1792c:	ldrd	r2, [fp, #-236]	; 0xffffff14
   17930:	strd	r2, [fp, #-244]	; 0xffffff0c
   17934:	sub	r3, fp, #364	; 0x16c
   17938:	ldrd	r2, [r3]
   1793c:	ldr	r1, [fp, #-240]	; 0xffffff10
   17940:	mul	r0, r2, r1
   17944:	ldr	r1, [fp, #-244]	; 0xffffff0c
   17948:	mul	r1, r3, r1
   1794c:	add	r0, r0, r1
   17950:	ldr	r1, [fp, #-244]	; 0xffffff0c
   17954:	umull	r2, r3, r1, r2
   17958:	add	r1, r0, r3
   1795c:	mov	r3, r1
   17960:	strd	r2, [fp, #-252]	; 0xffffff04
   17964:	strd	r2, [fp, #-252]	; 0xffffff04
   17968:	sub	r3, fp, #364	; 0x16c
   1796c:	ldrd	r0, [r3, #8]
   17970:	sub	r3, fp, #668	; 0x29c
   17974:	mov	r2, r3
   17978:	ldr	r3, [fp, #-112]	; 0xffffff90
   1797c:	add	r3, r3, #2
   17980:	lsl	r3, r3, #3
   17984:	add	r3, r2, r3
   17988:	ldrd	r2, [r3]
   1798c:	cmp	r1, r3
   17990:	cmpeq	r0, r2
   17994:	bcc	17cf4 <__assert_fail@plt+0x6b9c>
   17998:	ldrd	r2, [fp, #-252]	; 0xffffff04
   1799c:	sub	r1, fp, #260	; 0x104
   179a0:	strd	r2, [r1]
   179a4:	sub	r3, fp, #668	; 0x29c
   179a8:	mov	r2, r3
   179ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   179b0:	add	r3, r3, #2
   179b4:	lsl	r3, r3, #3
   179b8:	add	r3, r2, r3
   179bc:	ldrd	r2, [r3]
   179c0:	sub	r1, fp, #268	; 0x10c
   179c4:	strd	r2, [r1]
   179c8:	ldr	r3, [fp, #-260]	; 0xfffffefc
   179cc:	str	r3, [fp, #-272]	; 0xfffffef0
   179d0:	sub	r3, fp, #260	; 0x104
   179d4:	ldrd	r2, [r3]
   179d8:	mov	r0, #0
   179dc:	mov	r1, #0
   179e0:	mov	r0, r3
   179e4:	mov	r1, #0
   179e8:	mov	r3, r0
   179ec:	str	r3, [fp, #-276]	; 0xfffffeec
   179f0:	ldr	r3, [fp, #-268]	; 0xfffffef4
   179f4:	str	r3, [fp, #-280]	; 0xfffffee8
   179f8:	sub	r3, fp, #268	; 0x10c
   179fc:	ldrd	r2, [r3]
   17a00:	mov	r0, #0
   17a04:	mov	r1, #0
   17a08:	mov	r0, r3
   17a0c:	mov	r1, #0
   17a10:	mov	r3, r0
   17a14:	str	r3, [fp, #-284]	; 0xfffffee4
   17a18:	ldr	r3, [fp, #-272]	; 0xfffffef0
   17a1c:	mov	r4, r3
   17a20:	mov	r5, #0
   17a24:	ldr	r3, [fp, #-280]	; 0xfffffee8
   17a28:	mov	r2, r3
   17a2c:	mov	r3, #0
   17a30:	sub	r1, fp, #284	; 0x11c
   17a34:	mov	ip, r1
   17a38:	mul	r0, r2, r5
   17a3c:	mul	r1, r4, r3
   17a40:	add	r1, r0, r1
   17a44:	umull	r2, r3, r4, r2
   17a48:	add	r1, r1, r3
   17a4c:	mov	r3, r1
   17a50:	strd	r2, [ip, #-8]
   17a54:	strd	r2, [ip, #-8]
   17a58:	ldr	r3, [fp, #-272]	; 0xfffffef0
   17a5c:	mov	r4, r3
   17a60:	mov	r5, #0
   17a64:	ldr	r3, [fp, #-284]	; 0xfffffee4
   17a68:	mov	r2, r3
   17a6c:	mov	r3, #0
   17a70:	sub	r1, fp, #300	; 0x12c
   17a74:	mov	ip, r1
   17a78:	mul	r0, r2, r5
   17a7c:	mul	r1, r4, r3
   17a80:	add	r1, r0, r1
   17a84:	umull	r2, r3, r4, r2
   17a88:	add	r1, r1, r3
   17a8c:	mov	r3, r1
   17a90:	strd	r2, [ip]
   17a94:	strd	r2, [ip]
   17a98:	ldr	r3, [fp, #-276]	; 0xfffffeec
   17a9c:	mov	r4, r3
   17aa0:	mov	r5, #0
   17aa4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   17aa8:	mov	r2, r3
   17aac:	mov	r3, #0
   17ab0:	sub	r1, fp, #300	; 0x12c
   17ab4:	mov	ip, r1
   17ab8:	mul	r0, r2, r5
   17abc:	mul	r1, r4, r3
   17ac0:	add	r1, r0, r1
   17ac4:	umull	r2, r3, r4, r2
   17ac8:	add	r1, r1, r3
   17acc:	mov	r3, r1
   17ad0:	strd	r2, [ip, #-8]
   17ad4:	strd	r2, [ip, #-8]
   17ad8:	ldr	r3, [fp, #-276]	; 0xfffffeec
   17adc:	mov	r0, r3
   17ae0:	mov	r1, #0
   17ae4:	ldr	r3, [fp, #-284]	; 0xfffffee4
   17ae8:	mov	r2, r3
   17aec:	mov	r3, #0
   17af0:	mul	lr, r2, r1
   17af4:	mul	ip, r0, r3
   17af8:	add	ip, lr, ip
   17afc:	umull	r2, r3, r0, r2
   17b00:	add	r1, ip, r3
   17b04:	mov	r3, r1
   17b08:	strd	r2, [fp, #-124]	; 0xffffff84
   17b0c:	strd	r2, [fp, #-124]	; 0xffffff84
   17b10:	sub	r3, fp, #284	; 0x11c
   17b14:	ldrd	r2, [r3, #-8]
   17b18:	mov	r0, #0
   17b1c:	mov	r1, #0
   17b20:	mov	r0, r3
   17b24:	mov	r1, #0
   17b28:	sub	r3, fp, #300	; 0x12c
   17b2c:	mov	ip, r3
   17b30:	sub	r3, fp, #300	; 0x12c
   17b34:	ldrd	r2, [r3]
   17b38:	adds	lr, r2, r0
   17b3c:	str	lr, [fp, #-1084]	; 0xfffffbc4
   17b40:	adc	r3, r3, r1
   17b44:	str	r3, [fp, #-1080]	; 0xfffffbc8
   17b48:	sub	r3, fp, #1072	; 0x430
   17b4c:	sub	r3, r3, #12
   17b50:	ldrd	r2, [r3]
   17b54:	strd	r2, [ip]
   17b58:	sub	r3, fp, #300	; 0x12c
   17b5c:	mov	ip, r3
   17b60:	sub	r3, fp, #300	; 0x12c
   17b64:	mov	r2, r3
   17b68:	sub	r3, fp, #300	; 0x12c
   17b6c:	ldrd	r0, [r2]
   17b70:	ldrd	r2, [r3, #-8]
   17b74:	adds	lr, r0, r2
   17b78:	str	lr, [fp, #-1092]	; 0xfffffbbc
   17b7c:	adc	r3, r1, r3
   17b80:	str	r3, [fp, #-1088]	; 0xfffffbc0
   17b84:	sub	r3, fp, #1088	; 0x440
   17b88:	sub	r3, r3, #4
   17b8c:	ldrd	r2, [r3]
   17b90:	strd	r2, [ip]
   17b94:	sub	r3, fp, #300	; 0x12c
   17b98:	mov	r2, r3
   17b9c:	sub	r3, fp, #300	; 0x12c
   17ba0:	ldrd	r0, [r2]
   17ba4:	ldrd	r2, [r3, #-8]
   17ba8:	cmp	r1, r3
   17bac:	cmpeq	r0, r2
   17bb0:	bcs	17bd8 <__assert_fail@plt+0x6a80>
   17bb4:	ldrd	r2, [fp, #-124]	; 0xffffff84
   17bb8:	adds	r1, r2, #0
   17bbc:	str	r1, [fp, #-1100]	; 0xfffffbb4
   17bc0:	adc	r3, r3, #1
   17bc4:	str	r3, [fp, #-1096]	; 0xfffffbb8
   17bc8:	sub	r3, fp, #1088	; 0x440
   17bcc:	sub	r3, r3, #12
   17bd0:	ldrd	r2, [r3]
   17bd4:	strd	r2, [fp, #-124]	; 0xffffff84
   17bd8:	sub	r3, fp, #300	; 0x12c
   17bdc:	ldrd	r2, [r3]
   17be0:	mov	r0, #0
   17be4:	mov	r1, #0
   17be8:	mov	r0, r3
   17bec:	mov	r1, #0
   17bf0:	sub	r3, fp, #316	; 0x13c
   17bf4:	mov	ip, r3
   17bf8:	ldrd	r2, [fp, #-124]	; 0xffffff84
   17bfc:	adds	lr, r2, r0
   17c00:	str	lr, [fp, #-1108]	; 0xfffffbac
   17c04:	adc	r3, r3, r1
   17c08:	str	r3, [fp, #-1104]	; 0xfffffbb0
   17c0c:	sub	r3, fp, #1104	; 0x450
   17c10:	sub	r3, r3, #4
   17c14:	ldrd	r2, [r3]
   17c18:	strd	r2, [ip]
   17c1c:	sub	r3, fp, #300	; 0x12c
   17c20:	ldrd	r2, [r3]
   17c24:	mov	r4, #0
   17c28:	mov	r5, #0
   17c2c:	mov	r5, r2
   17c30:	mov	r4, #0
   17c34:	sub	r3, fp, #284	; 0x11c
   17c38:	ldrd	r0, [r3, #-8]
   17c3c:	mvn	r2, #0
   17c40:	mov	r3, #0
   17c44:	and	ip, r0, r2
   17c48:	str	ip, [fp, #-844]	; 0xfffffcb4
   17c4c:	and	r3, r1, r3
   17c50:	str	r3, [fp, #-840]	; 0xfffffcb8
   17c54:	sub	r3, fp, #844	; 0x34c
   17c58:	ldrd	r2, [r3]
   17c5c:	mov	r1, r2
   17c60:	adds	r1, r4, r1
   17c64:	str	r1, [fp, #-852]	; 0xfffffcac
   17c68:	adc	r3, r5, r3
   17c6c:	str	r3, [fp, #-848]	; 0xfffffcb0
   17c70:	sub	r3, fp, #316	; 0x13c
   17c74:	sub	r2, fp, #852	; 0x354
   17c78:	ldrd	r0, [r2]
   17c7c:	strd	r0, [r3, #-8]
   17c80:	sub	r3, fp, #364	; 0x16c
   17c84:	ldrd	r0, [r3, #8]
   17c88:	sub	r3, fp, #316	; 0x13c
   17c8c:	ldrd	r2, [r3]
   17c90:	subs	ip, r0, r2
   17c94:	str	ip, [fp, #-860]	; 0xfffffca4
   17c98:	sbc	r3, r1, r3
   17c9c:	str	r3, [fp, #-856]	; 0xfffffca8
   17ca0:	ldr	r3, [fp, #-244]	; 0xffffff0c
   17ca4:	sub	r2, fp, #860	; 0x35c
   17ca8:	ldrd	r4, [r2]
   17cac:	mov	r2, r5
   17cb0:	mul	r2, r2, r3
   17cb4:	ldr	r3, [fp, #-240]	; 0xffffff10
   17cb8:	mov	r1, r4
   17cbc:	mul	r3, r1, r3
   17cc0:	add	r1, r2, r3
   17cc4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   17cc8:	mov	r2, r4
   17ccc:	umull	r2, r3, r3, r2
   17cd0:	add	r1, r1, r3
   17cd4:	mov	r3, r1
   17cd8:	sub	r1, fp, #684	; 0x2ac
   17cdc:	strd	r2, [r1, #8]
   17ce0:	sub	r3, fp, #684	; 0x2ac
   17ce4:	mov	r1, r3
   17ce8:	ldrd	r2, [fp, #-252]	; 0xffffff04
   17cec:	strd	r2, [r1]
   17cf0:	b	17d18 <__assert_fail@plt+0x6bc0>
   17cf4:	sub	r3, fp, #684	; 0x2ac
   17cf8:	mov	r1, r3
   17cfc:	ldrd	r2, [fp, #-252]	; 0xffffff04
   17d00:	strd	r2, [r1]
   17d04:	sub	r3, fp, #684	; 0x2ac
   17d08:	mov	r1, r3
   17d0c:	mov	r2, #0
   17d10:	mov	r3, #0
   17d14:	strd	r2, [r1, #8]
   17d18:	sub	lr, fp, #412	; 0x19c
   17d1c:	sub	ip, fp, #684	; 0x2ac
   17d20:	sub	r1, fp, #380	; 0x17c
   17d24:	sub	r3, fp, #700	; 0x2bc
   17d28:	add	r0, r3, #8
   17d2c:	sub	r3, fp, #396	; 0x18c
   17d30:	str	r3, [sp, #8]
   17d34:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17d38:	strd	r2, [sp]
   17d3c:	mov	r3, lr
   17d40:	mov	r2, ip
   17d44:	bl	15584 <__assert_fail@plt+0x442c>
   17d48:	sub	r3, fp, #700	; 0x2bc
   17d4c:	strd	r0, [r3]
   17d50:	sub	r3, fp, #700	; 0x2bc
   17d54:	ldrd	r0, [r3]
   17d58:	sub	r3, fp, #396	; 0x18c
   17d5c:	ldrd	r2, [r3]
   17d60:	cmp	r1, r3
   17d64:	cmpeq	r0, r2
   17d68:	bne	17d88 <__assert_fail@plt+0x6c30>
   17d6c:	sub	r3, fp, #700	; 0x2bc
   17d70:	ldrd	r0, [r3, #8]
   17d74:	sub	r3, fp, #396	; 0x18c
   17d78:	ldrd	r2, [r3, #8]
   17d7c:	cmp	r1, r3
   17d80:	cmpeq	r0, r2
   17d84:	beq	17d90 <__assert_fail@plt+0x6c38>
   17d88:	mov	r3, #1
   17d8c:	b	17d94 <__assert_fail@plt+0x6c3c>
   17d90:	mov	r3, #0
   17d94:	strb	r3, [fp, #-105]	; 0xffffff97
   17d98:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17d9c:	and	r3, r3, #1
   17da0:	strb	r3, [fp, #-105]	; 0xffffff97
   17da4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17da8:	add	r3, r3, #1
   17dac:	str	r3, [fp, #-112]	; 0xffffff90
   17db0:	ldrb	r3, [fp, #-418]	; 0xfffffe5e
   17db4:	mov	r2, r3
   17db8:	ldr	r3, [fp, #-112]	; 0xffffff90
   17dbc:	cmp	r3, r2
   17dc0:	bcs	17de8 <__assert_fail@plt+0x6c90>
   17dc4:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17dc8:	cmp	r3, #0
   17dcc:	bne	1765c <__assert_fail@plt+0x6504>
   17dd0:	b	17de8 <__assert_fail@plt+0x6c90>
   17dd4:	ldr	r3, [fp, #-104]	; 0xffffff98
   17dd8:	cmp	r3, #24
   17ddc:	moveq	r3, #1
   17de0:	movne	r3, #0
   17de4:	strb	r3, [fp, #-105]	; 0xffffff97
   17de8:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17dec:	cmp	r3, #0
   17df0:	beq	17dfc <__assert_fail@plt+0x6ca4>
   17df4:	mov	r3, #1
   17df8:	b	180e0 <__assert_fail@plt+0x6f88>
   17dfc:	movw	r2, #9060	; 0x2364
   17e00:	movt	r2, #3
   17e04:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e08:	add	r3, r2, r3
   17e0c:	ldrb	r3, [r3]
   17e10:	uxtb	r0, r3
   17e14:	mov	r1, #0
   17e18:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17e1c:	adds	ip, r2, r0
   17e20:	str	ip, [fp, #-1116]	; 0xfffffba4
   17e24:	adc	r3, r3, r1
   17e28:	str	r3, [fp, #-1112]	; 0xfffffba8
   17e2c:	sub	r3, fp, #1104	; 0x450
   17e30:	sub	r3, r3, #12
   17e34:	ldrd	r2, [r3]
   17e38:	strd	r2, [fp, #-60]	; 0xffffffc4
   17e3c:	sub	r3, fp, #700	; 0x2bc
   17e40:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   17e44:	ldrd	r2, [r3, #-8]
   17e48:	cmp	r1, r3
   17e4c:	cmpeq	r0, r2
   17e50:	bcs	17e78 <__assert_fail@plt+0x6d20>
   17e54:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17e58:	strd	r2, [fp, #-132]	; 0xffffff7c
   17e5c:	mov	r2, #0
   17e60:	mov	r3, #0
   17e64:	strd	r2, [fp, #-140]	; 0xffffff74
   17e68:	mov	r2, #64	; 0x40
   17e6c:	mov	r3, #0
   17e70:	strd	r2, [fp, #-148]	; 0xffffff6c
   17e74:	b	1800c <__assert_fail@plt+0x6eb4>
   17e78:	mov	r2, #0
   17e7c:	mov	r3, #0
   17e80:	strd	r2, [fp, #-132]	; 0xffffff7c
   17e84:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17e88:	strd	r2, [fp, #-140]	; 0xffffff74
   17e8c:	mov	r2, #128	; 0x80
   17e90:	mov	r3, #0
   17e94:	strd	r2, [fp, #-148]	; 0xffffff6c
   17e98:	b	1800c <__assert_fail@plt+0x6eb4>
   17e9c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   17ea0:	adds	r1, r2, r2
   17ea4:	str	r1, [fp, #-1124]	; 0xfffffb9c
   17ea8:	adc	r3, r3, r3
   17eac:	str	r3, [fp, #-1120]	; 0xfffffba0
   17eb0:	sub	r3, fp, #1120	; 0x460
   17eb4:	sub	r3, r3, #4
   17eb8:	ldrd	r4, [r3]
   17ebc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17ec0:	mov	r0, #0
   17ec4:	mov	r1, #0
   17ec8:	lsr	r0, r3, #31
   17ecc:	mov	r1, #0
   17ed0:	orr	r3, r4, r0
   17ed4:	str	r3, [fp, #-1132]	; 0xfffffb94
   17ed8:	orr	r3, r5, r1
   17edc:	str	r3, [fp, #-1128]	; 0xfffffb98
   17ee0:	sub	r3, fp, #1120	; 0x460
   17ee4:	sub	r3, r3, #12
   17ee8:	ldrd	r2, [r3]
   17eec:	strd	r2, [fp, #-132]	; 0xffffff7c
   17ef0:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17ef4:	adds	r1, r2, r2
   17ef8:	str	r1, [fp, #-1140]	; 0xfffffb8c
   17efc:	adc	r3, r3, r3
   17f00:	str	r3, [fp, #-1136]	; 0xfffffb90
   17f04:	sub	r3, fp, #1136	; 0x470
   17f08:	sub	r3, r3, #4
   17f0c:	ldrd	r2, [r3]
   17f10:	strd	r2, [fp, #-140]	; 0xffffff74
   17f14:	sub	r3, fp, #700	; 0x2bc
   17f18:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17f1c:	ldrd	r2, [r3, #-8]
   17f20:	cmp	r1, r3
   17f24:	cmpeq	r0, r2
   17f28:	bhi	17f5c <__assert_fail@plt+0x6e04>
   17f2c:	sub	r3, fp, #700	; 0x2bc
   17f30:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17f34:	ldrd	r2, [r3, #-8]
   17f38:	cmp	r1, r3
   17f3c:	cmpeq	r0, r2
   17f40:	bne	1800c <__assert_fail@plt+0x6eb4>
   17f44:	sub	r3, fp, #716	; 0x2cc
   17f48:	ldrd	r0, [fp, #-140]	; 0xffffff74
   17f4c:	ldrd	r2, [r3]
   17f50:	cmp	r1, r3
   17f54:	cmpeq	r0, r2
   17f58:	bcc	1800c <__assert_fail@plt+0x6eb4>
   17f5c:	sub	r3, fp, #716	; 0x2cc
   17f60:	ldrd	r0, [fp, #-140]	; 0xffffff74
   17f64:	ldrd	r2, [r3]
   17f68:	cmp	r1, r3
   17f6c:	cmpeq	r0, r2
   17f70:	movcc	r3, #1
   17f74:	movcs	r3, #0
   17f78:	uxtb	r2, r3
   17f7c:	sub	r3, fp, #332	; 0x14c
   17f80:	mov	r1, r3
   17f84:	uxtb	r2, r2
   17f88:	mov	r3, #0
   17f8c:	strd	r2, [r1]
   17f90:	sub	r3, fp, #716	; 0x2cc
   17f94:	ldrd	r0, [fp, #-140]	; 0xffffff74
   17f98:	ldrd	r2, [r3]
   17f9c:	subs	ip, r0, r2
   17fa0:	str	ip, [fp, #-1148]	; 0xfffffb84
   17fa4:	sbc	r3, r1, r3
   17fa8:	str	r3, [fp, #-1144]	; 0xfffffb88
   17fac:	sub	r3, fp, #1136	; 0x470
   17fb0:	sub	r3, r3, #12
   17fb4:	ldrd	r2, [r3]
   17fb8:	strd	r2, [fp, #-140]	; 0xffffff74
   17fbc:	sub	r3, fp, #700	; 0x2bc
   17fc0:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17fc4:	ldrd	r2, [r3, #-8]
   17fc8:	subs	ip, r0, r2
   17fcc:	str	ip, [fp, #-868]	; 0xfffffc9c
   17fd0:	sbc	r3, r1, r3
   17fd4:	str	r3, [fp, #-864]	; 0xfffffca0
   17fd8:	sub	r3, fp, #332	; 0x14c
   17fdc:	ldrd	r2, [r3]
   17fe0:	sub	r1, fp, #868	; 0x364
   17fe4:	ldrd	r0, [r1]
   17fe8:	mov	ip, r0
   17fec:	subs	ip, ip, r2
   17ff0:	str	ip, [fp, #-1156]	; 0xfffffb7c
   17ff4:	sbc	r3, r1, r3
   17ff8:	str	r3, [fp, #-1152]	; 0xfffffb80
   17ffc:	sub	r3, fp, #1152	; 0x480
   18000:	sub	r3, r3, #4
   18004:	ldrd	r2, [r3]
   18008:	strd	r2, [fp, #-132]	; 0xffffff7c
   1800c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   18010:	subs	r1, r2, #1
   18014:	str	r1, [fp, #-1164]	; 0xfffffb74
   18018:	sbc	r1, r3, #0
   1801c:	str	r1, [fp, #-1160]	; 0xfffffb78
   18020:	sub	r1, fp, #1152	; 0x480
   18024:	sub	r1, r1, #12
   18028:	ldrd	r0, [r1]
   1802c:	strd	r0, [fp, #-148]	; 0xffffff6c
   18030:	orrs	r3, r2, r3
   18034:	bne	17e9c <__assert_fail@plt+0x6d44>
   18038:	sub	r3, fp, #380	; 0x17c
   1803c:	mov	r1, r3
   18040:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   18044:	strd	r2, [r1, #8]
   18048:	sub	r3, fp, #380	; 0x17c
   1804c:	mov	r1, r3
   18050:	ldrd	r2, [fp, #-140]	; 0xffffff74
   18054:	strd	r2, [r1]
   18058:	sub	r1, fp, #412	; 0x19c
   1805c:	sub	r3, fp, #396	; 0x18c
   18060:	str	r3, [sp, #12]
   18064:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18068:	str	r3, [sp, #8]
   1806c:	sub	r3, fp, #348	; 0x15c
   18070:	str	r3, [sp, #4]
   18074:	sub	r3, fp, #380	; 0x17c
   18078:	str	r3, [sp]
   1807c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18080:	mov	r0, r1
   18084:	bl	15934 <__assert_fail@plt+0x47dc>
   18088:	mov	r3, r0
   1808c:	eor	r3, r3, #1
   18090:	uxtb	r3, r3
   18094:	cmp	r3, #0
   18098:	beq	180a4 <__assert_fail@plt+0x6f4c>
   1809c:	mov	r3, #0
   180a0:	b	180e0 <__assert_fail@plt+0x6f88>
   180a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   180a8:	add	r3, r3, #1
   180ac:	str	r3, [fp, #-104]	; 0xffffff98
   180b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   180b4:	cmp	r3, #668	; 0x29c
   180b8:	bcc	17344 <__assert_fail@plt+0x61ec>
   180bc:	movw	r0, #21484	; 0x53ec
   180c0:	movt	r0, #3
   180c4:	bl	11044 <gettext@plt>
   180c8:	mov	r3, r0
   180cc:	mov	r2, r3
   180d0:	mov	r1, #0
   180d4:	mov	r0, #0
   180d8:	bl	10fcc <error@plt>
   180dc:	bl	11140 <abort@plt>
   180e0:	mov	r0, r3
   180e4:	sub	sp, fp, #28
   180e8:	ldrd	r4, [sp]
   180ec:	ldrd	r6, [sp, #8]
   180f0:	ldrd	r8, [sp, #16]
   180f4:	ldr	fp, [sp, #24]
   180f8:	add	sp, sp, #28
   180fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18100:	str	fp, [sp, #-8]!
   18104:	str	lr, [sp, #4]
   18108:	add	fp, sp, #4
   1810c:	sub	sp, sp, #96	; 0x60
   18110:	str	r0, [fp, #-88]	; 0xffffffa8
   18114:	mov	r1, #1
   18118:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1811c:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   18120:	mov	r3, r0
   18124:	cmp	r3, #0
   18128:	bgt	18134 <__assert_fail@plt+0x6fdc>
   1812c:	mov	r3, #0
   18130:	b	18440 <__assert_fail@plt+0x72e8>
   18134:	movw	r1, #60793	; 0xed79
   18138:	movt	r1, #381	; 0x17d
   1813c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18140:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   18144:	mov	r3, r0
   18148:	cmp	r3, #0
   1814c:	bge	18158 <__assert_fail@plt+0x7000>
   18150:	mov	r3, #1
   18154:	b	18440 <__assert_fail@plt+0x72e8>
   18158:	sub	r0, fp, #56	; 0x38
   1815c:	sub	r2, fp, #44	; 0x2c
   18160:	sub	r1, fp, #32
   18164:	mov	r3, #0
   18168:	str	r3, [sp, #4]
   1816c:	sub	r3, fp, #68	; 0x44
   18170:	str	r3, [sp]
   18174:	mov	r3, r0
   18178:	movw	r0, #3292	; 0xcdc
   1817c:	movt	r0, #2
   18180:	bl	12050 <__assert_fail@plt+0xef8>
   18184:	sub	r3, fp, #56	; 0x38
   18188:	mov	r2, #1
   1818c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18190:	mov	r0, r3
   18194:	bl	223c4 <__assert_fail@plt+0x1126c>
   18198:	sub	r3, fp, #56	; 0x38
   1819c:	mov	r1, #0
   181a0:	mov	r0, r3
   181a4:	bl	283d8 <__assert_fail@plt+0x17280>
   181a8:	str	r0, [fp, #-20]	; 0xffffffec
   181ac:	sub	r1, fp, #56	; 0x38
   181b0:	sub	r3, fp, #32
   181b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   181b8:	mov	r0, r3
   181bc:	bl	23bbc <__assert_fail@plt+0x12a64>
   181c0:	sub	r3, fp, #44	; 0x2c
   181c4:	mov	r1, #2
   181c8:	mov	r0, r3
   181cc:	bl	20f68 <__assert_fail@plt+0xfe10>
   181d0:	sub	r0, fp, #68	; 0x44
   181d4:	sub	r2, fp, #44	; 0x2c
   181d8:	sub	r1, fp, #56	; 0x38
   181dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   181e0:	str	r3, [sp, #4]
   181e4:	sub	r3, fp, #32
   181e8:	str	r3, [sp]
   181ec:	mov	r3, r0
   181f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   181f4:	bl	15b80 <__assert_fail@plt+0x4a28>
   181f8:	mov	r3, r0
   181fc:	eor	r3, r3, #1
   18200:	uxtb	r3, r3
   18204:	cmp	r3, #0
   18208:	beq	18218 <__assert_fail@plt+0x70c0>
   1820c:	mov	r3, #0
   18210:	strb	r3, [fp, #-5]
   18214:	b	18410 <__assert_fail@plt+0x72b8>
   18218:	movw	r3, #28948	; 0x7114
   1821c:	movt	r3, #4
   18220:	ldrb	r3, [r3]
   18224:	cmp	r3, #0
   18228:	beq	18254 <__assert_fail@plt+0x70fc>
   1822c:	sub	r2, fp, #56	; 0x38
   18230:	sub	r3, fp, #68	; 0x44
   18234:	mov	r1, r2
   18238:	mov	r0, r3
   1823c:	bl	20ff0 <__assert_fail@plt+0xfe98>
   18240:	sub	r2, fp, #80	; 0x50
   18244:	sub	r3, fp, #68	; 0x44
   18248:	mov	r1, r2
   1824c:	mov	r0, r3
   18250:	bl	1b0c0 <__assert_fail@plt+0x9f68>
   18254:	mov	r3, #0
   18258:	str	r3, [fp, #-12]
   1825c:	b	183b4 <__assert_fail@plt+0x725c>
   18260:	movw	r3, #28948	; 0x7114
   18264:	movt	r3, #4
   18268:	ldrb	r3, [r3]
   1826c:	cmp	r3, #0
   18270:	beq	18318 <__assert_fail@plt+0x71c0>
   18274:	mov	r3, #1
   18278:	strb	r3, [fp, #-5]
   1827c:	mov	r3, #0
   18280:	str	r3, [fp, #-16]
   18284:	b	182f8 <__assert_fail@plt+0x71a0>
   18288:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1828c:	ldr	r2, [fp, #-16]
   18290:	mov	r3, r2
   18294:	lsl	r3, r3, #1
   18298:	add	r3, r3, r2
   1829c:	lsl	r3, r3, #2
   182a0:	add	r2, r1, r3
   182a4:	sub	r1, fp, #56	; 0x38
   182a8:	sub	r3, fp, #68	; 0x44
   182ac:	mov	r0, r3
   182b0:	bl	23ccc <__assert_fail@plt+0x12b74>
   182b4:	sub	r2, fp, #68	; 0x44
   182b8:	sub	r1, fp, #44	; 0x2c
   182bc:	sub	r0, fp, #68	; 0x44
   182c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   182c4:	bl	25440 <__assert_fail@plt+0x142e8>
   182c8:	sub	r3, fp, #68	; 0x44
   182cc:	mov	r1, #1
   182d0:	mov	r0, r3
   182d4:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   182d8:	mov	r3, r0
   182dc:	cmp	r3, #0
   182e0:	movne	r3, #1
   182e4:	moveq	r3, #0
   182e8:	strb	r3, [fp, #-5]
   182ec:	ldr	r3, [fp, #-16]
   182f0:	add	r3, r3, #1
   182f4:	str	r3, [fp, #-16]
   182f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   182fc:	ldr	r2, [fp, #-16]
   18300:	cmp	r2, r3
   18304:	bcs	1832c <__assert_fail@plt+0x71d4>
   18308:	ldrb	r3, [fp, #-5]
   1830c:	cmp	r3, #0
   18310:	bne	18288 <__assert_fail@plt+0x7130>
   18314:	b	1832c <__assert_fail@plt+0x71d4>
   18318:	ldr	r3, [fp, #-12]
   1831c:	cmp	r3, #24
   18320:	moveq	r3, #1
   18324:	movne	r3, #0
   18328:	strb	r3, [fp, #-5]
   1832c:	ldrb	r3, [fp, #-5]
   18330:	cmp	r3, #0
   18334:	bne	183e4 <__assert_fail@plt+0x728c>
   18338:	movw	r3, #9060	; 0x2364
   1833c:	movt	r3, #3
   18340:	ldr	r2, [fp, #-12]
   18344:	add	r3, r3, r2
   18348:	ldrb	r3, [r3]
   1834c:	mov	r2, r3
   18350:	sub	r1, fp, #44	; 0x2c
   18354:	sub	r3, fp, #44	; 0x2c
   18358:	mov	r0, r3
   1835c:	bl	22364 <__assert_fail@plt+0x1120c>
   18360:	sub	r0, fp, #68	; 0x44
   18364:	sub	r2, fp, #44	; 0x2c
   18368:	sub	r1, fp, #56	; 0x38
   1836c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18370:	str	r3, [sp, #4]
   18374:	sub	r3, fp, #32
   18378:	str	r3, [sp]
   1837c:	mov	r3, r0
   18380:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18384:	bl	15b80 <__assert_fail@plt+0x4a28>
   18388:	mov	r3, r0
   1838c:	eor	r3, r3, #1
   18390:	uxtb	r3, r3
   18394:	cmp	r3, #0
   18398:	beq	183a8 <__assert_fail@plt+0x7250>
   1839c:	mov	r3, #0
   183a0:	strb	r3, [fp, #-5]
   183a4:	b	183e8 <__assert_fail@plt+0x7290>
   183a8:	ldr	r3, [fp, #-12]
   183ac:	add	r3, r3, #1
   183b0:	str	r3, [fp, #-12]
   183b4:	ldr	r3, [fp, #-12]
   183b8:	cmp	r3, #668	; 0x29c
   183bc:	bcc	18260 <__assert_fail@plt+0x7108>
   183c0:	movw	r0, #21484	; 0x53ec
   183c4:	movt	r0, #3
   183c8:	bl	11044 <gettext@plt>
   183cc:	mov	r3, r0
   183d0:	mov	r2, r3
   183d4:	mov	r1, #0
   183d8:	mov	r0, #0
   183dc:	bl	10fcc <error@plt>
   183e0:	bl	11140 <abort@plt>
   183e4:	nop	{0}
   183e8:	movw	r3, #28948	; 0x7114
   183ec:	movt	r3, #4
   183f0:	ldrb	r3, [r3]
   183f4:	cmp	r3, #0
   183f8:	beq	1840c <__assert_fail@plt+0x72b4>
   183fc:	sub	r3, fp, #80	; 0x50
   18400:	mov	r0, r3
   18404:	bl	120fc <__assert_fail@plt+0xfa4>
   18408:	b	18410 <__assert_fail@plt+0x72b8>
   1840c:	nop	{0}
   18410:	sub	r0, fp, #56	; 0x38
   18414:	sub	r2, fp, #44	; 0x2c
   18418:	sub	r1, fp, #32
   1841c:	mov	r3, #0
   18420:	str	r3, [sp, #4]
   18424:	sub	r3, fp, #68	; 0x44
   18428:	str	r3, [sp]
   1842c:	mov	r3, r0
   18430:	movw	r0, #3504	; 0xdb0
   18434:	movt	r0, #2
   18438:	bl	12050 <__assert_fail@plt+0xef8>
   1843c:	ldrb	r3, [fp, #-5]
   18440:	mov	r0, r3
   18444:	sub	sp, fp, #4
   18448:	ldr	fp, [sp]
   1844c:	add	sp, sp, #4
   18450:	pop	{pc}		; (ldr pc, [sp], #4)
   18454:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18458:	strd	r6, [sp, #8]
   1845c:	strd	r8, [sp, #16]
   18460:	str	fp, [sp, #24]
   18464:	str	lr, [sp, #28]
   18468:	add	fp, sp, #28
   1846c:	sub	sp, sp, #520	; 0x208
   18470:	strd	r0, [fp, #-228]	; 0xffffff1c
   18474:	str	r2, [fp, #-232]	; 0xffffff18
   18478:	str	r3, [fp, #-236]	; 0xffffff14
   1847c:	mov	r3, #1
   18480:	str	r3, [fp, #-64]	; 0xffffffc0
   18484:	mov	r3, #1
   18488:	str	r3, [fp, #-68]	; 0xffffffbc
   1848c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18490:	cmp	r3, #0
   18494:	cmpeq	r2, #1
   18498:	bhi	184bc <__assert_fail@plt+0x7364>
   1849c:	movw	r3, #22284	; 0x570c
   184a0:	movt	r3, #3
   184a4:	movw	r2, #1466	; 0x5ba
   184a8:	movw	r1, #9004	; 0x232c
   184ac:	movt	r1, #3
   184b0:	movw	r0, #21460	; 0x53d4
   184b4:	movt	r0, #3
   184b8:	bl	11158 <__assert_fail@plt>
   184bc:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   184c0:	strd	r2, [fp, #-76]	; 0xffffffb4
   184c4:	mov	r2, #0
   184c8:	mov	r3, #0
   184cc:	strd	r2, [fp, #-84]	; 0xffffffac
   184d0:	mov	r2, #1
   184d4:	mov	r3, #0
   184d8:	strd	r2, [fp, #-100]	; 0xffffff9c
   184dc:	mov	r2, #0
   184e0:	mov	r3, #0
   184e4:	strd	r2, [fp, #-108]	; 0xffffff94
   184e8:	mov	r2, #0
   184ec:	mov	r3, #0
   184f0:	strd	r2, [fp, #-92]	; 0xffffffa4
   184f4:	mov	r3, #64	; 0x40
   184f8:	str	r3, [fp, #-112]	; 0xffffff90
   184fc:	b	18668 <__assert_fail@plt+0x7510>
   18500:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18504:	mov	r4, #0
   18508:	mov	r5, #0
   1850c:	lsl	r5, r2, #31
   18510:	mov	r4, #0
   18514:	ldrd	r2, [fp, #-84]	; 0xffffffac
   18518:	mov	r0, #0
   1851c:	mov	r1, #0
   18520:	lsr	r0, r2, #1
   18524:	orr	r0, r0, r3, lsl #31
   18528:	lsr	r1, r3, #1
   1852c:	orr	r3, r4, r0
   18530:	str	r3, [fp, #-404]	; 0xfffffe6c
   18534:	orr	r3, r5, r1
   18538:	str	r3, [fp, #-400]	; 0xfffffe70
   1853c:	sub	r3, fp, #404	; 0x194
   18540:	ldrd	r2, [r3]
   18544:	strd	r2, [fp, #-84]	; 0xffffffac
   18548:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1854c:	mov	r0, #0
   18550:	mov	r1, #0
   18554:	lsr	r0, r2, #1
   18558:	orr	r0, r0, r3, lsl #31
   1855c:	lsr	r1, r3, #1
   18560:	strd	r0, [fp, #-76]	; 0xffffffb4
   18564:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   18568:	adds	r1, r2, r2
   1856c:	str	r1, [fp, #-412]	; 0xfffffe64
   18570:	adc	r3, r3, r3
   18574:	str	r3, [fp, #-408]	; 0xfffffe68
   18578:	sub	r3, fp, #412	; 0x19c
   1857c:	ldrd	r2, [r3]
   18580:	strd	r2, [fp, #-92]	; 0xffffffa4
   18584:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   18588:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1858c:	cmp	r1, r3
   18590:	cmpeq	r0, r2
   18594:	bhi	185c0 <__assert_fail@plt+0x7468>
   18598:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   1859c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   185a0:	cmp	r1, r3
   185a4:	cmpeq	r0, r2
   185a8:	bne	1865c <__assert_fail@plt+0x7504>
   185ac:	ldrd	r0, [fp, #-108]	; 0xffffff94
   185b0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   185b4:	cmp	r1, r3
   185b8:	cmpeq	r0, r2
   185bc:	bcc	1865c <__assert_fail@plt+0x7504>
   185c0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   185c4:	adds	r1, r2, #1
   185c8:	str	r1, [fp, #-420]	; 0xfffffe5c
   185cc:	adc	r3, r3, #0
   185d0:	str	r3, [fp, #-416]	; 0xfffffe60
   185d4:	sub	r3, fp, #420	; 0x1a4
   185d8:	ldrd	r2, [r3]
   185dc:	strd	r2, [fp, #-92]	; 0xffffffa4
   185e0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   185e4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   185e8:	cmp	r1, r3
   185ec:	cmpeq	r0, r2
   185f0:	movcc	r3, #1
   185f4:	movcs	r3, #0
   185f8:	uxtb	r3, r3
   185fc:	uxtb	r2, r3
   18600:	mov	r3, #0
   18604:	strd	r2, [fp, #-124]	; 0xffffff84
   18608:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1860c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   18610:	subs	ip, r0, r2
   18614:	str	ip, [fp, #-428]	; 0xfffffe54
   18618:	sbc	r3, r1, r3
   1861c:	str	r3, [fp, #-424]	; 0xfffffe58
   18620:	sub	r3, fp, #428	; 0x1ac
   18624:	ldrd	r2, [r3]
   18628:	strd	r2, [fp, #-108]	; 0xffffff94
   1862c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   18630:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18634:	subs	r6, r0, r2
   18638:	sbc	r7, r1, r3
   1863c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   18640:	subs	r1, r6, r2
   18644:	str	r1, [fp, #-436]	; 0xfffffe4c
   18648:	sbc	r3, r7, r3
   1864c:	str	r3, [fp, #-432]	; 0xfffffe50
   18650:	sub	r3, fp, #436	; 0x1b4
   18654:	ldrd	r2, [r3]
   18658:	strd	r2, [fp, #-100]	; 0xffffff9c
   1865c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18660:	sub	r3, r3, #1
   18664:	str	r3, [fp, #-112]	; 0xffffff90
   18668:	ldr	r3, [fp, #-112]	; 0xffffff90
   1866c:	cmp	r3, #0
   18670:	bne	18500 <__assert_fail@plt+0x73a8>
   18674:	ldrd	r2, [fp, #-108]	; 0xffffff94
   18678:	strd	r2, [fp, #-60]	; 0xffffffc4
   1867c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   18680:	strd	r2, [fp, #-132]	; 0xffffff7c
   18684:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18688:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1868c:	subs	ip, r0, r2
   18690:	str	ip, [fp, #-244]	; 0xffffff0c
   18694:	sbc	r3, r1, r3
   18698:	str	r3, [fp, #-240]	; 0xffffff10
   1869c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   186a0:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   186a4:	cmp	r3, r1
   186a8:	cmpeq	r2, r0
   186ac:	movcc	r3, #1
   186b0:	movcs	r3, #0
   186b4:	uxtb	r3, r3
   186b8:	uxtb	r2, r3
   186bc:	mov	r3, #0
   186c0:	rsbs	r2, r2, #0
   186c4:	rsc	r3, r3, #0
   186c8:	strd	r2, [fp, #-140]	; 0xffffff74
   186cc:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   186d0:	ldrd	r2, [fp, #-140]	; 0xffffff74
   186d4:	and	r8, r0, r2
   186d8:	and	r9, r1, r3
   186dc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   186e0:	adds	r1, r8, r2
   186e4:	str	r1, [fp, #-252]	; 0xffffff04
   186e8:	adc	r3, r9, r3
   186ec:	str	r3, [fp, #-248]	; 0xffffff08
   186f0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   186f4:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   186f8:	subs	ip, r0, r2
   186fc:	str	ip, [fp, #-260]	; 0xfffffefc
   18700:	sbc	r3, r1, r3
   18704:	str	r3, [fp, #-256]	; 0xffffff00
   18708:	ldrd	r0, [fp, #-252]	; 0xffffff04
   1870c:	mov	ip, r0
   18710:	sub	r3, fp, #260	; 0x104
   18714:	ldrd	r2, [r3]
   18718:	mov	lr, r2
   1871c:	adds	ip, ip, lr
   18720:	str	ip, [fp, #-444]	; 0xfffffe44
   18724:	adc	r3, r1, r3
   18728:	str	r3, [fp, #-440]	; 0xfffffe48
   1872c:	sub	r3, fp, #444	; 0x1bc
   18730:	ldrd	r2, [r3]
   18734:	strd	r2, [fp, #-36]	; 0xffffffdc
   18738:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1873c:	strd	r2, [fp, #-44]	; 0xffffffd4
   18740:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18744:	strd	r2, [fp, #-52]	; 0xffffffcc
   18748:	b	18f84 <__assert_fail@plt+0x7e2c>
   1874c:	ldr	r3, [fp, #-232]	; 0xffffff18
   18750:	mov	r0, r3
   18754:	mov	r1, #0
   18758:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   1875c:	cmp	r3, r1
   18760:	cmpeq	r2, r0
   18764:	bhi	18788 <__assert_fail@plt+0x7630>
   18768:	movw	r3, #22284	; 0x570c
   1876c:	movt	r3, #3
   18770:	mov	r2, #1472	; 0x5c0
   18774:	movw	r1, #9004	; 0x232c
   18778:	movt	r1, #3
   1877c:	movw	r0, #21536	; 0x5420
   18780:	movt	r0, #3
   18784:	bl	11158 <__assert_fail@plt>
   18788:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   1878c:	strd	r2, [fp, #-148]	; 0xffffff6c
   18790:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   18794:	mov	r0, #0
   18798:	mov	r1, #0
   1879c:	lsr	r0, r2, #1
   187a0:	orr	r0, r0, r3, lsl #31
   187a4:	lsr	r1, r3, #1
   187a8:	mov	r2, #127	; 0x7f
   187ac:	mov	r3, #0
   187b0:	and	ip, r0, r2
   187b4:	str	ip, [fp, #-268]	; 0xfffffef4
   187b8:	and	r3, r1, r3
   187bc:	str	r3, [fp, #-264]	; 0xfffffef8
   187c0:	movw	r3, #21236	; 0x52f4
   187c4:	movt	r3, #3
   187c8:	ldr	r2, [fp, #-268]	; 0xfffffef4
   187cc:	add	r3, r3, r2
   187d0:	ldrb	r3, [r3]
   187d4:	uxtb	r2, r3
   187d8:	mov	r3, #0
   187dc:	strd	r2, [fp, #-156]	; 0xffffff64
   187e0:	ldrd	r2, [fp, #-156]	; 0xffffff64
   187e4:	adds	r1, r2, r2
   187e8:	str	r1, [fp, #-452]	; 0xfffffe3c
   187ec:	adc	r3, r3, r3
   187f0:	str	r3, [fp, #-448]	; 0xfffffe40
   187f4:	sub	r3, fp, #452	; 0x1c4
   187f8:	ldrd	r4, [r3]
   187fc:	ldr	r2, [fp, #-152]	; 0xffffff68
   18800:	ldr	r3, [fp, #-156]	; 0xffffff64
   18804:	mul	r1, r3, r2
   18808:	ldr	r2, [fp, #-152]	; 0xffffff68
   1880c:	ldr	r3, [fp, #-156]	; 0xffffff64
   18810:	mul	r3, r3, r2
   18814:	add	r1, r1, r3
   18818:	ldr	r2, [fp, #-156]	; 0xffffff64
   1881c:	ldr	r3, [fp, #-156]	; 0xffffff64
   18820:	umull	r2, r3, r2, r3
   18824:	add	r1, r1, r3
   18828:	mov	r3, r1
   1882c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18830:	mul	r0, r3, r1
   18834:	ldr	r1, [fp, #-144]	; 0xffffff70
   18838:	mul	r1, r2, r1
   1883c:	add	r0, r0, r1
   18840:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18844:	umull	r2, r3, r1, r2
   18848:	add	r1, r0, r3
   1884c:	mov	r3, r1
   18850:	subs	r1, r4, r2
   18854:	str	r1, [fp, #-460]	; 0xfffffe34
   18858:	sbc	r3, r5, r3
   1885c:	str	r3, [fp, #-456]	; 0xfffffe38
   18860:	sub	r3, fp, #460	; 0x1cc
   18864:	ldrd	r2, [r3]
   18868:	strd	r2, [fp, #-156]	; 0xffffff64
   1886c:	ldrd	r2, [fp, #-156]	; 0xffffff64
   18870:	adds	r1, r2, r2
   18874:	str	r1, [fp, #-468]	; 0xfffffe2c
   18878:	adc	r3, r3, r3
   1887c:	str	r3, [fp, #-464]	; 0xfffffe30
   18880:	sub	r3, fp, #468	; 0x1d4
   18884:	ldrd	r4, [r3]
   18888:	ldr	r2, [fp, #-152]	; 0xffffff68
   1888c:	ldr	r3, [fp, #-156]	; 0xffffff64
   18890:	mul	r1, r3, r2
   18894:	ldr	r2, [fp, #-152]	; 0xffffff68
   18898:	ldr	r3, [fp, #-156]	; 0xffffff64
   1889c:	mul	r3, r3, r2
   188a0:	add	r1, r1, r3
   188a4:	ldr	r2, [fp, #-156]	; 0xffffff64
   188a8:	ldr	r3, [fp, #-156]	; 0xffffff64
   188ac:	umull	r2, r3, r2, r3
   188b0:	add	r1, r1, r3
   188b4:	mov	r3, r1
   188b8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   188bc:	mul	r0, r3, r1
   188c0:	ldr	r1, [fp, #-144]	; 0xffffff70
   188c4:	mul	r1, r2, r1
   188c8:	add	r0, r0, r1
   188cc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   188d0:	umull	r2, r3, r1, r2
   188d4:	add	r1, r0, r3
   188d8:	mov	r3, r1
   188dc:	subs	r1, r4, r2
   188e0:	str	r1, [fp, #-476]	; 0xfffffe24
   188e4:	sbc	r3, r5, r3
   188e8:	str	r3, [fp, #-472]	; 0xfffffe28
   188ec:	sub	r3, fp, #476	; 0x1dc
   188f0:	ldrd	r2, [r3]
   188f4:	strd	r2, [fp, #-156]	; 0xffffff64
   188f8:	ldrd	r2, [fp, #-156]	; 0xffffff64
   188fc:	adds	r1, r2, r2
   18900:	str	r1, [fp, #-484]	; 0xfffffe1c
   18904:	adc	r3, r3, r3
   18908:	str	r3, [fp, #-480]	; 0xfffffe20
   1890c:	sub	r3, fp, #484	; 0x1e4
   18910:	ldrd	r4, [r3]
   18914:	ldr	r2, [fp, #-152]	; 0xffffff68
   18918:	ldr	r3, [fp, #-156]	; 0xffffff64
   1891c:	mul	r1, r3, r2
   18920:	ldr	r2, [fp, #-152]	; 0xffffff68
   18924:	ldr	r3, [fp, #-156]	; 0xffffff64
   18928:	mul	r3, r3, r2
   1892c:	add	r1, r1, r3
   18930:	ldr	r2, [fp, #-156]	; 0xffffff64
   18934:	ldr	r3, [fp, #-156]	; 0xffffff64
   18938:	umull	r2, r3, r2, r3
   1893c:	add	r1, r1, r3
   18940:	mov	r3, r1
   18944:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18948:	mul	r0, r3, r1
   1894c:	ldr	r1, [fp, #-144]	; 0xffffff70
   18950:	mul	r1, r2, r1
   18954:	add	r0, r0, r1
   18958:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1895c:	umull	r2, r3, r1, r2
   18960:	add	r1, r0, r3
   18964:	mov	r3, r1
   18968:	subs	r1, r4, r2
   1896c:	str	r1, [fp, #-492]	; 0xfffffe14
   18970:	sbc	r3, r5, r3
   18974:	str	r3, [fp, #-488]	; 0xfffffe18
   18978:	sub	r3, fp, #492	; 0x1ec
   1897c:	ldrd	r2, [r3]
   18980:	strd	r2, [fp, #-156]	; 0xffffff64
   18984:	ldrd	r2, [fp, #-156]	; 0xffffff64
   18988:	strd	r2, [fp, #-164]	; 0xffffff5c
   1898c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   18990:	strd	r2, [sp, #8]
   18994:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18998:	strd	r2, [sp]
   1899c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   189a0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   189a4:	bl	13264 <__assert_fail@plt+0x210c>
   189a8:	strd	r0, [fp, #-36]	; 0xffffffdc
   189ac:	ldr	r3, [fp, #-232]	; 0xffffff18
   189b0:	mov	r0, r3
   189b4:	mov	r1, #0
   189b8:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   189bc:	subs	ip, r2, r0
   189c0:	str	ip, [fp, #-276]	; 0xfffffeec
   189c4:	sbc	r3, r3, r1
   189c8:	str	r3, [fp, #-272]	; 0xfffffef0
   189cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   189d0:	sub	r1, fp, #276	; 0x114
   189d4:	ldrd	r0, [r1]
   189d8:	cmp	r3, r1
   189dc:	cmpeq	r2, r0
   189e0:	movcc	r3, #1
   189e4:	movcs	r3, #0
   189e8:	uxtb	r3, r3
   189ec:	uxtb	r2, r3
   189f0:	mov	r3, #0
   189f4:	rsbs	r2, r2, #0
   189f8:	rsc	r3, r3, #0
   189fc:	strd	r2, [fp, #-172]	; 0xffffff54
   18a00:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18a04:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18a08:	and	ip, r0, r2
   18a0c:	str	ip, [fp, #-284]	; 0xfffffee4
   18a10:	and	r3, r1, r3
   18a14:	str	r3, [fp, #-280]	; 0xfffffee8
   18a18:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18a1c:	sub	r1, fp, #284	; 0x11c
   18a20:	ldrd	r0, [r1]
   18a24:	mov	ip, r0
   18a28:	adds	ip, ip, r2
   18a2c:	str	ip, [fp, #-292]	; 0xfffffedc
   18a30:	adc	r3, r1, r3
   18a34:	str	r3, [fp, #-288]	; 0xfffffee0
   18a38:	ldr	r3, [fp, #-232]	; 0xffffff18
   18a3c:	mov	r0, r3
   18a40:	mov	r1, #0
   18a44:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18a48:	subs	ip, r0, r2
   18a4c:	str	ip, [fp, #-300]	; 0xfffffed4
   18a50:	sbc	r3, r1, r3
   18a54:	str	r3, [fp, #-296]	; 0xfffffed8
   18a58:	sub	r3, fp, #292	; 0x124
   18a5c:	ldrd	r0, [r3]
   18a60:	mov	ip, r0
   18a64:	sub	r3, fp, #300	; 0x12c
   18a68:	ldrd	r2, [r3]
   18a6c:	mov	lr, r2
   18a70:	adds	ip, ip, lr
   18a74:	str	ip, [fp, #-500]	; 0xfffffe0c
   18a78:	adc	r3, r1, r3
   18a7c:	str	r3, [fp, #-496]	; 0xfffffe10
   18a80:	sub	r3, fp, #500	; 0x1f4
   18a84:	ldrd	r2, [r3]
   18a88:	strd	r2, [fp, #-36]	; 0xffffffdc
   18a8c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18a90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18a94:	cmp	r1, r3
   18a98:	cmpeq	r0, r2
   18a9c:	movcc	r3, #1
   18aa0:	movcs	r3, #0
   18aa4:	uxtb	r3, r3
   18aa8:	uxtb	r2, r3
   18aac:	mov	r3, #0
   18ab0:	rsbs	r2, r2, #0
   18ab4:	rsc	r3, r3, #0
   18ab8:	strd	r2, [fp, #-180]	; 0xffffff4c
   18abc:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18ac0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   18ac4:	and	ip, r0, r2
   18ac8:	str	ip, [fp, #-308]	; 0xfffffecc
   18acc:	and	r3, r1, r3
   18ad0:	str	r3, [fp, #-304]	; 0xfffffed0
   18ad4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18ad8:	sub	r1, fp, #308	; 0x134
   18adc:	ldrd	r0, [r1]
   18ae0:	mov	ip, r0
   18ae4:	adds	ip, ip, r2
   18ae8:	str	ip, [fp, #-316]	; 0xfffffec4
   18aec:	adc	r3, r1, r3
   18af0:	str	r3, [fp, #-312]	; 0xfffffec8
   18af4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18af8:	sub	r1, fp, #316	; 0x13c
   18afc:	ldrd	r0, [r1]
   18b00:	mov	ip, r0
   18b04:	subs	ip, ip, r2
   18b08:	str	ip, [fp, #-508]	; 0xfffffe04
   18b0c:	sbc	r3, r1, r3
   18b10:	str	r3, [fp, #-504]	; 0xfffffe08
   18b14:	sub	r3, fp, #508	; 0x1fc
   18b18:	ldrd	r2, [r3]
   18b1c:	strd	r2, [fp, #-188]	; 0xffffff44
   18b20:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   18b24:	strd	r2, [sp, #8]
   18b28:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18b2c:	strd	r2, [sp]
   18b30:	ldrd	r2, [fp, #-188]	; 0xffffff44
   18b34:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   18b38:	bl	13264 <__assert_fail@plt+0x210c>
   18b3c:	strd	r0, [fp, #-60]	; 0xffffffc4
   18b40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18b44:	and	r3, r3, #31
   18b48:	cmp	r3, #1
   18b4c:	bne	18b7c <__assert_fail@plt+0x7a24>
   18b50:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18b54:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   18b58:	bl	117ec <__assert_fail@plt+0x694>
   18b5c:	mov	r2, r0
   18b60:	mov	r3, r1
   18b64:	cmp	r3, #0
   18b68:	cmpeq	r2, #1
   18b6c:	beq	18b74 <__assert_fail@plt+0x7a1c>
   18b70:	b	18ce8 <__assert_fail@plt+0x7b90>
   18b74:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18b78:	strd	r2, [fp, #-52]	; 0xffffffcc
   18b7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18b80:	sub	r3, r3, #1
   18b84:	str	r3, [fp, #-64]	; 0xffffffc0
   18b88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18b8c:	cmp	r3, #0
   18b90:	bne	1898c <__assert_fail@plt+0x7834>
   18b94:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18b98:	strd	r2, [fp, #-44]	; 0xffffffd4
   18b9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18ba0:	str	r3, [fp, #-64]	; 0xffffffc0
   18ba4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18ba8:	lsl	r3, r3, #1
   18bac:	str	r3, [fp, #-68]	; 0xffffffbc
   18bb0:	mov	r3, #0
   18bb4:	str	r3, [fp, #-116]	; 0xffffff8c
   18bb8:	b	18cc8 <__assert_fail@plt+0x7b70>
   18bbc:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   18bc0:	strd	r2, [sp, #8]
   18bc4:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18bc8:	strd	r2, [sp]
   18bcc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18bd0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18bd4:	bl	13264 <__assert_fail@plt+0x210c>
   18bd8:	strd	r0, [fp, #-36]	; 0xffffffdc
   18bdc:	ldr	r3, [fp, #-232]	; 0xffffff18
   18be0:	mov	r0, r3
   18be4:	mov	r1, #0
   18be8:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18bec:	subs	ip, r2, r0
   18bf0:	str	ip, [fp, #-324]	; 0xfffffebc
   18bf4:	sbc	r3, r3, r1
   18bf8:	str	r3, [fp, #-320]	; 0xfffffec0
   18bfc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18c00:	sub	r1, fp, #324	; 0x144
   18c04:	ldrd	r0, [r1]
   18c08:	cmp	r3, r1
   18c0c:	cmpeq	r2, r0
   18c10:	movcc	r3, #1
   18c14:	movcs	r3, #0
   18c18:	uxtb	r3, r3
   18c1c:	uxtb	r2, r3
   18c20:	mov	r3, #0
   18c24:	rsbs	r2, r2, #0
   18c28:	rsc	r3, r3, #0
   18c2c:	strd	r2, [fp, #-220]	; 0xffffff24
   18c30:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18c34:	ldrd	r2, [fp, #-220]	; 0xffffff24
   18c38:	and	ip, r0, r2
   18c3c:	str	ip, [fp, #-332]	; 0xfffffeb4
   18c40:	and	r3, r1, r3
   18c44:	str	r3, [fp, #-328]	; 0xfffffeb8
   18c48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18c4c:	sub	r1, fp, #332	; 0x14c
   18c50:	ldrd	r0, [r1]
   18c54:	mov	ip, r0
   18c58:	adds	ip, ip, r2
   18c5c:	str	ip, [fp, #-340]	; 0xfffffeac
   18c60:	adc	r3, r1, r3
   18c64:	str	r3, [fp, #-336]	; 0xfffffeb0
   18c68:	ldr	r3, [fp, #-232]	; 0xffffff18
   18c6c:	mov	r0, r3
   18c70:	mov	r1, #0
   18c74:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18c78:	subs	ip, r0, r2
   18c7c:	str	ip, [fp, #-348]	; 0xfffffea4
   18c80:	sbc	r3, r1, r3
   18c84:	str	r3, [fp, #-344]	; 0xfffffea8
   18c88:	sub	r3, fp, #340	; 0x154
   18c8c:	ldrd	r0, [r3]
   18c90:	mov	ip, r0
   18c94:	sub	r3, fp, #348	; 0x15c
   18c98:	ldrd	r2, [r3]
   18c9c:	mov	lr, r2
   18ca0:	adds	ip, ip, lr
   18ca4:	str	ip, [fp, #-516]	; 0xfffffdfc
   18ca8:	adc	r3, r1, r3
   18cac:	str	r3, [fp, #-512]	; 0xfffffe00
   18cb0:	sub	r3, fp, #516	; 0x204
   18cb4:	ldrd	r2, [r3]
   18cb8:	strd	r2, [fp, #-36]	; 0xffffffdc
   18cbc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18cc0:	add	r3, r3, #1
   18cc4:	str	r3, [fp, #-116]	; 0xffffff8c
   18cc8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18ccc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18cd0:	cmp	r2, r3
   18cd4:	bcc	18bbc <__assert_fail@plt+0x7a64>
   18cd8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18cdc:	strd	r2, [fp, #-52]	; 0xffffffcc
   18ce0:	b	1898c <__assert_fail@plt+0x7834>
   18ce4:	nop	{0}
   18ce8:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   18cec:	strd	r2, [sp, #8]
   18cf0:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18cf4:	strd	r2, [sp]
   18cf8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18cfc:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   18d00:	bl	13264 <__assert_fail@plt+0x210c>
   18d04:	strd	r0, [fp, #-52]	; 0xffffffcc
   18d08:	ldr	r3, [fp, #-232]	; 0xffffff18
   18d0c:	mov	r0, r3
   18d10:	mov	r1, #0
   18d14:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18d18:	subs	ip, r2, r0
   18d1c:	str	ip, [fp, #-356]	; 0xfffffe9c
   18d20:	sbc	r3, r3, r1
   18d24:	str	r3, [fp, #-352]	; 0xfffffea0
   18d28:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18d2c:	sub	r1, fp, #356	; 0x164
   18d30:	ldrd	r0, [r1]
   18d34:	cmp	r3, r1
   18d38:	cmpeq	r2, r0
   18d3c:	movcc	r3, #1
   18d40:	movcs	r3, #0
   18d44:	uxtb	r3, r3
   18d48:	uxtb	r2, r3
   18d4c:	mov	r3, #0
   18d50:	rsbs	r2, r2, #0
   18d54:	rsc	r3, r3, #0
   18d58:	strd	r2, [fp, #-196]	; 0xffffff3c
   18d5c:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18d60:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18d64:	and	ip, r0, r2
   18d68:	str	ip, [fp, #-364]	; 0xfffffe94
   18d6c:	and	r3, r1, r3
   18d70:	str	r3, [fp, #-360]	; 0xfffffe98
   18d74:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18d78:	sub	r1, fp, #364	; 0x16c
   18d7c:	ldrd	r0, [r1]
   18d80:	mov	ip, r0
   18d84:	adds	ip, ip, r2
   18d88:	str	ip, [fp, #-372]	; 0xfffffe8c
   18d8c:	adc	r3, r1, r3
   18d90:	str	r3, [fp, #-368]	; 0xfffffe90
   18d94:	ldr	r3, [fp, #-232]	; 0xffffff18
   18d98:	mov	r0, r3
   18d9c:	mov	r1, #0
   18da0:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18da4:	subs	ip, r0, r2
   18da8:	str	ip, [fp, #-380]	; 0xfffffe84
   18dac:	sbc	r3, r1, r3
   18db0:	str	r3, [fp, #-376]	; 0xfffffe88
   18db4:	sub	r3, fp, #372	; 0x174
   18db8:	ldrd	r0, [r3]
   18dbc:	mov	ip, r0
   18dc0:	sub	r3, fp, #380	; 0x17c
   18dc4:	ldrd	r2, [r3]
   18dc8:	mov	lr, r2
   18dcc:	adds	ip, ip, lr
   18dd0:	str	ip, [fp, #-524]	; 0xfffffdf4
   18dd4:	adc	r3, r1, r3
   18dd8:	str	r3, [fp, #-520]	; 0xfffffdf8
   18ddc:	sub	r3, fp, #524	; 0x20c
   18de0:	ldrd	r2, [r3]
   18de4:	strd	r2, [fp, #-52]	; 0xffffffcc
   18de8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18dec:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18df0:	cmp	r1, r3
   18df4:	cmpeq	r0, r2
   18df8:	movcc	r3, #1
   18dfc:	movcs	r3, #0
   18e00:	uxtb	r3, r3
   18e04:	uxtb	r2, r3
   18e08:	mov	r3, #0
   18e0c:	rsbs	r2, r2, #0
   18e10:	rsc	r3, r3, #0
   18e14:	strd	r2, [fp, #-204]	; 0xffffff34
   18e18:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18e1c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   18e20:	and	ip, r0, r2
   18e24:	str	ip, [fp, #-388]	; 0xfffffe7c
   18e28:	and	r3, r1, r3
   18e2c:	str	r3, [fp, #-384]	; 0xfffffe80
   18e30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18e34:	sub	r1, fp, #388	; 0x184
   18e38:	ldrd	r0, [r1]
   18e3c:	mov	ip, r0
   18e40:	adds	ip, ip, r2
   18e44:	str	ip, [fp, #-396]	; 0xfffffe74
   18e48:	adc	r3, r1, r3
   18e4c:	str	r3, [fp, #-392]	; 0xfffffe78
   18e50:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18e54:	sub	r1, fp, #396	; 0x18c
   18e58:	ldrd	r0, [r1]
   18e5c:	mov	ip, r0
   18e60:	subs	ip, ip, r2
   18e64:	str	ip, [fp, #-532]	; 0xfffffdec
   18e68:	sbc	r3, r1, r3
   18e6c:	str	r3, [fp, #-528]	; 0xfffffdf0
   18e70:	sub	r3, fp, #532	; 0x214
   18e74:	ldrd	r2, [r3]
   18e78:	strd	r2, [fp, #-188]	; 0xffffff44
   18e7c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18e80:	ldrd	r0, [fp, #-188]	; 0xffffff44
   18e84:	bl	117ec <__assert_fail@plt+0x694>
   18e88:	strd	r0, [fp, #-212]	; 0xffffff2c
   18e8c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18e90:	cmp	r3, #0
   18e94:	cmpeq	r2, #1
   18e98:	beq	18ce4 <__assert_fail@plt+0x7b8c>
   18e9c:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18ea0:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18ea4:	cmp	r1, r3
   18ea8:	cmpeq	r0, r2
   18eac:	bne	18ec8 <__assert_fail@plt+0x7d70>
   18eb0:	ldr	r3, [fp, #-232]	; 0xffffff18
   18eb4:	add	r2, r3, #1
   18eb8:	ldr	r3, [fp, #-236]	; 0xffffff14
   18ebc:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18ec0:	bl	18454 <__assert_fail@plt+0x72fc>
   18ec4:	b	18f94 <__assert_fail@plt+0x7e3c>
   18ec8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18ecc:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18ed0:	bl	31f28 <__assert_fail@plt+0x20dd0>
   18ed4:	mov	r2, r0
   18ed8:	mov	r3, r1
   18edc:	strd	r2, [fp, #-228]	; 0xffffff1c
   18ee0:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   18ee4:	bl	15c80 <__assert_fail@plt+0x4b28>
   18ee8:	mov	r3, r0
   18eec:	eor	r3, r3, #1
   18ef0:	uxtb	r3, r3
   18ef4:	cmp	r3, #0
   18ef8:	beq	18f14 <__assert_fail@plt+0x7dbc>
   18efc:	ldr	r3, [fp, #-232]	; 0xffffff18
   18f00:	add	r2, r3, #1
   18f04:	ldr	r3, [fp, #-236]	; 0xffffff14
   18f08:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   18f0c:	bl	18454 <__assert_fail@plt+0x72fc>
   18f10:	b	18f28 <__assert_fail@plt+0x7dd0>
   18f14:	mov	r3, #1
   18f18:	str	r3, [sp]
   18f1c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18f20:	ldr	r0, [fp, #-236]	; 0xffffff14
   18f24:	bl	11dec <__assert_fail@plt+0xc94>
   18f28:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   18f2c:	bl	15c80 <__assert_fail@plt+0x4b28>
   18f30:	mov	r3, r0
   18f34:	cmp	r3, #0
   18f38:	beq	18f54 <__assert_fail@plt+0x7dfc>
   18f3c:	mov	r3, #1
   18f40:	str	r3, [sp]
   18f44:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18f48:	ldr	r0, [fp, #-236]	; 0xffffff14
   18f4c:	bl	11dec <__assert_fail@plt+0xc94>
   18f50:	b	18f94 <__assert_fail@plt+0x7e3c>
   18f54:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18f58:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18f5c:	bl	31f28 <__assert_fail@plt+0x20dd0>
   18f60:	strd	r2, [fp, #-36]	; 0xffffffdc
   18f64:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18f68:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18f6c:	bl	31f28 <__assert_fail@plt+0x20dd0>
   18f70:	strd	r2, [fp, #-44]	; 0xffffffd4
   18f74:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   18f78:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18f7c:	bl	31f28 <__assert_fail@plt+0x20dd0>
   18f80:	strd	r2, [fp, #-52]	; 0xffffffcc
   18f84:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18f88:	cmp	r3, #0
   18f8c:	cmpeq	r2, #1
   18f90:	bne	1874c <__assert_fail@plt+0x75f4>
   18f94:	sub	sp, fp, #28
   18f98:	ldrd	r4, [sp]
   18f9c:	ldrd	r6, [sp, #8]
   18fa0:	ldrd	r8, [sp, #16]
   18fa4:	ldr	fp, [sp, #24]
   18fa8:	add	sp, sp, #28
   18fac:	pop	{pc}		; (ldr pc, [sp], #4)
   18fb0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18fb4:	strd	r6, [sp, #8]
   18fb8:	strd	r8, [sp, #16]
   18fbc:	str	fp, [sp, #24]
   18fc0:	str	lr, [sp, #28]
   18fc4:	add	fp, sp, #28
   18fc8:	sub	sp, sp, #1000	; 0x3e8
   18fcc:	sub	ip, fp, #444	; 0x1bc
   18fd0:	strd	r0, [ip]
   18fd4:	sub	r1, fp, #444	; 0x1bc
   18fd8:	strd	r2, [r1, #-8]
   18fdc:	mov	r3, #1
   18fe0:	str	r3, [fp, #-88]	; 0xffffffa8
   18fe4:	mov	r3, #1
   18fe8:	str	r3, [fp, #-92]	; 0xffffffa4
   18fec:	sub	r3, fp, #444	; 0x1bc
   18ff0:	ldrd	r2, [r3]
   18ff4:	cmp	r3, #0
   18ff8:	cmpeq	r2, #1
   18ffc:	bls	19028 <__assert_fail@plt+0x7ed0>
   19000:	mov	r2, #1
   19004:	mov	r3, #0
   19008:	strd	r2, [fp, #-100]	; 0xffffff9c
   1900c:	mov	r2, #0
   19010:	mov	r3, #0
   19014:	strd	r2, [fp, #-108]	; 0xffffff94
   19018:	mov	r2, #64	; 0x40
   1901c:	mov	r3, #0
   19020:	strd	r2, [fp, #-116]	; 0xffffff8c
   19024:	b	1918c <__assert_fail@plt+0x8034>
   19028:	mov	r2, #0
   1902c:	mov	r3, #0
   19030:	strd	r2, [fp, #-100]	; 0xffffff9c
   19034:	mov	r2, #1
   19038:	mov	r3, #0
   1903c:	strd	r2, [fp, #-108]	; 0xffffff94
   19040:	mov	r2, #128	; 0x80
   19044:	mov	r3, #0
   19048:	strd	r2, [fp, #-116]	; 0xffffff8c
   1904c:	b	1918c <__assert_fail@plt+0x8034>
   19050:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   19054:	adds	r1, r2, r2
   19058:	str	r1, [fp, #-628]	; 0xfffffd8c
   1905c:	adc	r3, r3, r3
   19060:	str	r3, [fp, #-624]	; 0xfffffd90
   19064:	sub	r3, fp, #628	; 0x274
   19068:	ldrd	r4, [r3]
   1906c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   19070:	mov	r0, #0
   19074:	mov	r1, #0
   19078:	lsr	r0, r3, #31
   1907c:	mov	r1, #0
   19080:	orr	r3, r4, r0
   19084:	str	r3, [fp, #-636]	; 0xfffffd84
   19088:	orr	r3, r5, r1
   1908c:	str	r3, [fp, #-632]	; 0xfffffd88
   19090:	sub	r3, fp, #636	; 0x27c
   19094:	ldrd	r2, [r3]
   19098:	strd	r2, [fp, #-100]	; 0xffffff9c
   1909c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   190a0:	adds	r1, r2, r2
   190a4:	str	r1, [fp, #-644]	; 0xfffffd7c
   190a8:	adc	r3, r3, r3
   190ac:	str	r3, [fp, #-640]	; 0xfffffd80
   190b0:	sub	r3, fp, #644	; 0x284
   190b4:	ldrd	r2, [r3]
   190b8:	strd	r2, [fp, #-108]	; 0xffffff94
   190bc:	sub	r3, fp, #444	; 0x1bc
   190c0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   190c4:	ldrd	r2, [r3]
   190c8:	cmp	r1, r3
   190cc:	cmpeq	r0, r2
   190d0:	bhi	19104 <__assert_fail@plt+0x7fac>
   190d4:	sub	r3, fp, #444	; 0x1bc
   190d8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   190dc:	ldrd	r2, [r3]
   190e0:	cmp	r1, r3
   190e4:	cmpeq	r0, r2
   190e8:	bne	1918c <__assert_fail@plt+0x8034>
   190ec:	sub	r3, fp, #444	; 0x1bc
   190f0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   190f4:	ldrd	r2, [r3, #-8]
   190f8:	cmp	r1, r3
   190fc:	cmpeq	r0, r2
   19100:	bcc	1918c <__assert_fail@plt+0x8034>
   19104:	sub	r3, fp, #444	; 0x1bc
   19108:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1910c:	ldrd	r2, [r3, #-8]
   19110:	cmp	r1, r3
   19114:	cmpeq	r0, r2
   19118:	movcc	r3, #1
   1911c:	movcs	r3, #0
   19120:	uxtb	r3, r3
   19124:	uxtb	r2, r3
   19128:	mov	r3, #0
   1912c:	strd	r2, [fp, #-140]	; 0xffffff74
   19130:	sub	r3, fp, #444	; 0x1bc
   19134:	ldrd	r0, [fp, #-108]	; 0xffffff94
   19138:	ldrd	r2, [r3, #-8]
   1913c:	subs	ip, r0, r2
   19140:	str	ip, [fp, #-652]	; 0xfffffd74
   19144:	sbc	r3, r1, r3
   19148:	str	r3, [fp, #-648]	; 0xfffffd78
   1914c:	sub	r3, fp, #652	; 0x28c
   19150:	ldrd	r2, [r3]
   19154:	strd	r2, [fp, #-108]	; 0xffffff94
   19158:	sub	r3, fp, #444	; 0x1bc
   1915c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   19160:	ldrd	r2, [r3]
   19164:	subs	r6, r0, r2
   19168:	sbc	r7, r1, r3
   1916c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   19170:	subs	r1, r6, r2
   19174:	str	r1, [fp, #-660]	; 0xfffffd6c
   19178:	sbc	r3, r7, r3
   1917c:	str	r3, [fp, #-656]	; 0xfffffd70
   19180:	sub	r3, fp, #660	; 0x294
   19184:	ldrd	r2, [r3]
   19188:	strd	r2, [fp, #-100]	; 0xffffff9c
   1918c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   19190:	subs	r1, r2, #1
   19194:	str	r1, [fp, #-668]	; 0xfffffd64
   19198:	sbc	r1, r3, #0
   1919c:	str	r1, [fp, #-664]	; 0xfffffd68
   191a0:	sub	r1, fp, #668	; 0x29c
   191a4:	ldrd	r0, [r1]
   191a8:	strd	r0, [fp, #-116]	; 0xffffff8c
   191ac:	orrs	r3, r2, r3
   191b0:	bne	19050 <__assert_fail@plt+0x7ef8>
   191b4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   191b8:	strd	r2, [fp, #-60]	; 0xffffffc4
   191bc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   191c0:	strd	r2, [fp, #-68]	; 0xffffffbc
   191c4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   191c8:	adds	r1, r2, r2
   191cc:	str	r1, [fp, #-676]	; 0xfffffd5c
   191d0:	adc	r3, r3, r3
   191d4:	str	r3, [fp, #-672]	; 0xfffffd60
   191d8:	sub	r3, fp, #676	; 0x2a4
   191dc:	ldrd	r2, [r3]
   191e0:	strd	r2, [fp, #-148]	; 0xffffff6c
   191e4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   191e8:	adds	r1, r2, r2
   191ec:	str	r1, [fp, #-684]	; 0xfffffd54
   191f0:	adc	r3, r3, r3
   191f4:	str	r3, [fp, #-680]	; 0xfffffd58
   191f8:	sub	r3, fp, #684	; 0x2ac
   191fc:	ldrd	r4, [r3]
   19200:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   19204:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19208:	cmp	r1, r3
   1920c:	cmpeq	r0, r2
   19210:	movcc	r3, #1
   19214:	movcs	r3, #0
   19218:	uxtb	r3, r3
   1921c:	uxtb	r2, r3
   19220:	mov	r3, #0
   19224:	adds	r1, r4, r2
   19228:	str	r1, [fp, #-460]	; 0xfffffe34
   1922c:	adc	r3, r5, r3
   19230:	str	r3, [fp, #-456]	; 0xfffffe38
   19234:	sub	r3, fp, #396	; 0x18c
   19238:	sub	r2, fp, #460	; 0x1cc
   1923c:	ldrd	r0, [r2]
   19240:	strd	r0, [r3, #-8]
   19244:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   19248:	strd	r2, [fp, #-36]	; 0xffffffdc
   1924c:	sub	r3, fp, #396	; 0x18c
   19250:	ldrd	r0, [r3, #-8]
   19254:	sub	r3, fp, #444	; 0x1bc
   19258:	ldrd	r2, [r3]
   1925c:	cmp	r3, r1
   19260:	cmpeq	r2, r0
   19264:	bcc	1929c <__assert_fail@plt+0x8144>
   19268:	sub	r3, fp, #396	; 0x18c
   1926c:	ldrd	r0, [r3, #-8]
   19270:	sub	r3, fp, #444	; 0x1bc
   19274:	ldrd	r2, [r3]
   19278:	cmp	r3, r1
   1927c:	cmpeq	r2, r0
   19280:	bne	1932c <__assert_fail@plt+0x81d4>
   19284:	sub	r3, fp, #444	; 0x1bc
   19288:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1928c:	ldrd	r2, [r3, #-8]
   19290:	cmp	r1, r3
   19294:	cmpeq	r0, r2
   19298:	bcc	1932c <__assert_fail@plt+0x81d4>
   1929c:	sub	r3, fp, #444	; 0x1bc
   192a0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   192a4:	ldrd	r2, [r3, #-8]
   192a8:	cmp	r1, r3
   192ac:	cmpeq	r0, r2
   192b0:	movcc	r3, #1
   192b4:	movcs	r3, #0
   192b8:	uxtb	r3, r3
   192bc:	uxtb	r2, r3
   192c0:	mov	r3, #0
   192c4:	strd	r2, [fp, #-156]	; 0xffffff64
   192c8:	sub	r3, fp, #444	; 0x1bc
   192cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   192d0:	ldrd	r2, [r3, #-8]
   192d4:	subs	ip, r0, r2
   192d8:	str	ip, [fp, #-692]	; 0xfffffd4c
   192dc:	sbc	r3, r1, r3
   192e0:	str	r3, [fp, #-688]	; 0xfffffd50
   192e4:	sub	r3, fp, #692	; 0x2b4
   192e8:	ldrd	r2, [r3]
   192ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   192f0:	sub	r3, fp, #396	; 0x18c
   192f4:	ldrd	r0, [r3, #-8]
   192f8:	sub	r3, fp, #444	; 0x1bc
   192fc:	ldrd	r2, [r3]
   19300:	subs	r8, r0, r2
   19304:	sbc	r9, r1, r3
   19308:	ldrd	r2, [fp, #-156]	; 0xffffff64
   1930c:	subs	r1, r8, r2
   19310:	str	r1, [fp, #-468]	; 0xfffffe2c
   19314:	sbc	r3, r9, r3
   19318:	str	r3, [fp, #-464]	; 0xfffffe30
   1931c:	sub	r3, fp, #396	; 0x18c
   19320:	sub	r2, fp, #468	; 0x1d4
   19324:	ldrd	r0, [r2]
   19328:	strd	r0, [r3, #-8]
   1932c:	sub	r3, fp, #396	; 0x18c
   19330:	ldrd	r2, [r3, #-8]
   19334:	sub	r1, fp, #412	; 0x19c
   19338:	strd	r2, [r1]
   1933c:	sub	r3, fp, #412	; 0x19c
   19340:	ldrd	r2, [r3]
   19344:	sub	r1, fp, #412	; 0x19c
   19348:	strd	r2, [r1, #-8]
   1934c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19350:	strd	r2, [fp, #-44]	; 0xffffffd4
   19354:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19358:	strd	r2, [fp, #-52]	; 0xffffffcc
   1935c:	b	1aadc <__assert_fail@plt+0x9984>
   19360:	sub	r3, fp, #444	; 0x1bc
   19364:	ldrd	r2, [r3, #-8]
   19368:	strd	r2, [fp, #-164]	; 0xffffff5c
   1936c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   19370:	mov	r0, #0
   19374:	mov	r1, #0
   19378:	lsr	r0, r2, #1
   1937c:	orr	r0, r0, r3, lsl #31
   19380:	lsr	r1, r3, #1
   19384:	mov	r2, #127	; 0x7f
   19388:	mov	r3, #0
   1938c:	and	ip, r0, r2
   19390:	str	ip, [fp, #-476]	; 0xfffffe24
   19394:	and	r3, r1, r3
   19398:	str	r3, [fp, #-472]	; 0xfffffe28
   1939c:	movw	r3, #21236	; 0x52f4
   193a0:	movt	r3, #3
   193a4:	ldr	r2, [fp, #-476]	; 0xfffffe24
   193a8:	add	r3, r3, r2
   193ac:	ldrb	r3, [r3]
   193b0:	uxtb	r2, r3
   193b4:	mov	r3, #0
   193b8:	strd	r2, [fp, #-172]	; 0xffffff54
   193bc:	ldrd	r2, [fp, #-172]	; 0xffffff54
   193c0:	adds	r1, r2, r2
   193c4:	str	r1, [fp, #-700]	; 0xfffffd44
   193c8:	adc	r3, r3, r3
   193cc:	str	r3, [fp, #-696]	; 0xfffffd48
   193d0:	sub	r3, fp, #700	; 0x2bc
   193d4:	ldrd	r4, [r3]
   193d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   193dc:	ldr	r3, [fp, #-172]	; 0xffffff54
   193e0:	mul	r1, r3, r2
   193e4:	ldr	r2, [fp, #-168]	; 0xffffff58
   193e8:	ldr	r3, [fp, #-172]	; 0xffffff54
   193ec:	mul	r3, r3, r2
   193f0:	add	r1, r1, r3
   193f4:	ldr	r2, [fp, #-172]	; 0xffffff54
   193f8:	ldr	r3, [fp, #-172]	; 0xffffff54
   193fc:	umull	r2, r3, r2, r3
   19400:	add	r1, r1, r3
   19404:	mov	r3, r1
   19408:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1940c:	mul	r0, r3, r1
   19410:	ldr	r1, [fp, #-160]	; 0xffffff60
   19414:	mul	r1, r2, r1
   19418:	add	r0, r0, r1
   1941c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19420:	umull	r2, r3, r1, r2
   19424:	add	r1, r0, r3
   19428:	mov	r3, r1
   1942c:	subs	r1, r4, r2
   19430:	str	r1, [fp, #-708]	; 0xfffffd3c
   19434:	sbc	r3, r5, r3
   19438:	str	r3, [fp, #-704]	; 0xfffffd40
   1943c:	sub	r3, fp, #708	; 0x2c4
   19440:	ldrd	r2, [r3]
   19444:	strd	r2, [fp, #-172]	; 0xffffff54
   19448:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1944c:	adds	r1, r2, r2
   19450:	str	r1, [fp, #-716]	; 0xfffffd34
   19454:	adc	r3, r3, r3
   19458:	str	r3, [fp, #-712]	; 0xfffffd38
   1945c:	sub	r3, fp, #716	; 0x2cc
   19460:	ldrd	r4, [r3]
   19464:	ldr	r2, [fp, #-168]	; 0xffffff58
   19468:	ldr	r3, [fp, #-172]	; 0xffffff54
   1946c:	mul	r1, r3, r2
   19470:	ldr	r2, [fp, #-168]	; 0xffffff58
   19474:	ldr	r3, [fp, #-172]	; 0xffffff54
   19478:	mul	r3, r3, r2
   1947c:	add	r1, r1, r3
   19480:	ldr	r2, [fp, #-172]	; 0xffffff54
   19484:	ldr	r3, [fp, #-172]	; 0xffffff54
   19488:	umull	r2, r3, r2, r3
   1948c:	add	r1, r1, r3
   19490:	mov	r3, r1
   19494:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19498:	mul	r0, r3, r1
   1949c:	ldr	r1, [fp, #-160]	; 0xffffff60
   194a0:	mul	r1, r2, r1
   194a4:	add	r0, r0, r1
   194a8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   194ac:	umull	r2, r3, r1, r2
   194b0:	add	r1, r0, r3
   194b4:	mov	r3, r1
   194b8:	subs	r1, r4, r2
   194bc:	str	r1, [fp, #-724]	; 0xfffffd2c
   194c0:	sbc	r3, r5, r3
   194c4:	str	r3, [fp, #-720]	; 0xfffffd30
   194c8:	sub	r3, fp, #724	; 0x2d4
   194cc:	ldrd	r2, [r3]
   194d0:	strd	r2, [fp, #-172]	; 0xffffff54
   194d4:	ldrd	r2, [fp, #-172]	; 0xffffff54
   194d8:	adds	r1, r2, r2
   194dc:	str	r1, [fp, #-732]	; 0xfffffd24
   194e0:	adc	r3, r3, r3
   194e4:	str	r3, [fp, #-728]	; 0xfffffd28
   194e8:	sub	r3, fp, #732	; 0x2dc
   194ec:	ldrd	r4, [r3]
   194f0:	ldr	r2, [fp, #-168]	; 0xffffff58
   194f4:	ldr	r3, [fp, #-172]	; 0xffffff54
   194f8:	mul	r1, r3, r2
   194fc:	ldr	r2, [fp, #-168]	; 0xffffff58
   19500:	ldr	r3, [fp, #-172]	; 0xffffff54
   19504:	mul	r3, r3, r2
   19508:	add	r1, r1, r3
   1950c:	ldr	r2, [fp, #-172]	; 0xffffff54
   19510:	ldr	r3, [fp, #-172]	; 0xffffff54
   19514:	umull	r2, r3, r2, r3
   19518:	add	r1, r1, r3
   1951c:	mov	r3, r1
   19520:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19524:	mul	r0, r3, r1
   19528:	ldr	r1, [fp, #-160]	; 0xffffff60
   1952c:	mul	r1, r2, r1
   19530:	add	r0, r0, r1
   19534:	ldr	r1, [fp, #-164]	; 0xffffff5c
   19538:	umull	r2, r3, r1, r2
   1953c:	add	r1, r0, r3
   19540:	mov	r3, r1
   19544:	subs	r1, r4, r2
   19548:	str	r1, [fp, #-740]	; 0xfffffd1c
   1954c:	sbc	r3, r5, r3
   19550:	str	r3, [fp, #-736]	; 0xfffffd20
   19554:	sub	r3, fp, #740	; 0x2e4
   19558:	ldrd	r2, [r3]
   1955c:	strd	r2, [fp, #-172]	; 0xffffff54
   19560:	ldrd	r2, [fp, #-172]	; 0xffffff54
   19564:	strd	r2, [fp, #-180]	; 0xffffff4c
   19568:	sub	r3, fp, #396	; 0x18c
   1956c:	ldrd	r4, [r3, #-8]
   19570:	sub	r3, fp, #396	; 0x18c
   19574:	ldrd	r0, [r3, #-8]
   19578:	sub	ip, fp, #436	; 0x1b4
   1957c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   19580:	strd	r2, [sp, #40]	; 0x28
   19584:	sub	r3, fp, #444	; 0x1bc
   19588:	ldrd	r2, [r3, #-8]
   1958c:	strd	r2, [sp, #32]
   19590:	sub	r3, fp, #444	; 0x1bc
   19594:	ldrd	r2, [r3]
   19598:	strd	r2, [sp, #24]
   1959c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   195a0:	strd	r2, [sp, #16]
   195a4:	strd	r0, [sp, #8]
   195a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   195ac:	strd	r2, [sp]
   195b0:	mov	r2, r4
   195b4:	mov	r3, r5
   195b8:	mov	r0, ip
   195bc:	bl	137a0 <__assert_fail@plt+0x2648>
   195c0:	strd	r0, [fp, #-36]	; 0xffffffdc
   195c4:	sub	r3, fp, #428	; 0x1ac
   195c8:	ldrd	r2, [r3, #-8]
   195cc:	sub	r1, fp, #396	; 0x18c
   195d0:	strd	r2, [r1, #-8]
   195d4:	ldr	r3, [fp, #4]
   195d8:	mov	r0, r3
   195dc:	mov	r1, #0
   195e0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   195e4:	adds	ip, r2, r0
   195e8:	str	ip, [fp, #-748]	; 0xfffffd14
   195ec:	adc	r3, r3, r1
   195f0:	str	r3, [fp, #-744]	; 0xfffffd18
   195f4:	sub	r3, fp, #748	; 0x2ec
   195f8:	ldrd	r2, [r3]
   195fc:	strd	r2, [fp, #-188]	; 0xffffff44
   19600:	ldrd	r0, [fp, #-188]	; 0xffffff44
   19604:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19608:	cmp	r1, r3
   1960c:	cmpeq	r0, r2
   19610:	movcc	r3, #1
   19614:	movcs	r3, #0
   19618:	uxtb	r3, r3
   1961c:	uxtb	r0, r3
   19620:	mov	r1, #0
   19624:	sub	r3, fp, #396	; 0x18c
   19628:	ldrd	r2, [r3, #-8]
   1962c:	adds	ip, r0, r2
   19630:	str	ip, [fp, #-484]	; 0xfffffe1c
   19634:	adc	r3, r1, r3
   19638:	str	r3, [fp, #-480]	; 0xfffffe20
   1963c:	sub	r3, fp, #396	; 0x18c
   19640:	sub	r2, fp, #484	; 0x1e4
   19644:	ldrd	r0, [r2]
   19648:	strd	r0, [r3, #-8]
   1964c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   19650:	strd	r2, [fp, #-36]	; 0xffffffdc
   19654:	sub	r3, fp, #396	; 0x18c
   19658:	ldrd	r0, [r3, #-8]
   1965c:	sub	r3, fp, #444	; 0x1bc
   19660:	ldrd	r2, [r3]
   19664:	cmp	r3, r1
   19668:	cmpeq	r2, r0
   1966c:	bcc	196a4 <__assert_fail@plt+0x854c>
   19670:	sub	r3, fp, #396	; 0x18c
   19674:	ldrd	r0, [r3, #-8]
   19678:	sub	r3, fp, #444	; 0x1bc
   1967c:	ldrd	r2, [r3]
   19680:	cmp	r3, r1
   19684:	cmpeq	r2, r0
   19688:	bne	19748 <__assert_fail@plt+0x85f0>
   1968c:	sub	r3, fp, #444	; 0x1bc
   19690:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19694:	ldrd	r2, [r3, #-8]
   19698:	cmp	r1, r3
   1969c:	cmpeq	r0, r2
   196a0:	bcc	19748 <__assert_fail@plt+0x85f0>
   196a4:	sub	r3, fp, #444	; 0x1bc
   196a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   196ac:	ldrd	r2, [r3, #-8]
   196b0:	cmp	r1, r3
   196b4:	cmpeq	r0, r2
   196b8:	movcc	r3, #1
   196bc:	movcs	r3, #0
   196c0:	uxtb	r3, r3
   196c4:	uxtb	r2, r3
   196c8:	mov	r3, #0
   196cc:	strd	r2, [fp, #-196]	; 0xffffff3c
   196d0:	sub	r3, fp, #444	; 0x1bc
   196d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   196d8:	ldrd	r2, [r3, #-8]
   196dc:	subs	ip, r0, r2
   196e0:	str	ip, [fp, #-756]	; 0xfffffd0c
   196e4:	sbc	r3, r1, r3
   196e8:	str	r3, [fp, #-752]	; 0xfffffd10
   196ec:	sub	r3, fp, #756	; 0x2f4
   196f0:	ldrd	r2, [r3]
   196f4:	strd	r2, [fp, #-36]	; 0xffffffdc
   196f8:	sub	r3, fp, #396	; 0x18c
   196fc:	ldrd	r0, [r3, #-8]
   19700:	sub	r3, fp, #444	; 0x1bc
   19704:	ldrd	r2, [r3]
   19708:	subs	ip, r0, r2
   1970c:	str	ip, [fp, #-492]	; 0xfffffe14
   19710:	sbc	r3, r1, r3
   19714:	str	r3, [fp, #-488]	; 0xfffffe18
   19718:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1971c:	sub	r1, fp, #492	; 0x1ec
   19720:	ldrd	r0, [r1]
   19724:	mov	ip, r0
   19728:	subs	ip, ip, r2
   1972c:	str	ip, [fp, #-500]	; 0xfffffe0c
   19730:	sbc	r3, r1, r3
   19734:	str	r3, [fp, #-496]	; 0xfffffe10
   19738:	sub	r3, fp, #396	; 0x18c
   1973c:	sub	r2, fp, #500	; 0x1f4
   19740:	ldrd	r0, [r2]
   19744:	strd	r0, [r3, #-8]
   19748:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1974c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19750:	cmp	r1, r3
   19754:	cmpeq	r0, r2
   19758:	movcc	r3, #1
   1975c:	movcs	r3, #0
   19760:	uxtb	r3, r3
   19764:	uxtb	r2, r3
   19768:	mov	r3, #0
   1976c:	strd	r2, [fp, #-204]	; 0xffffff34
   19770:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   19774:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19778:	subs	ip, r0, r2
   1977c:	str	ip, [fp, #-764]	; 0xfffffd04
   19780:	sbc	r3, r1, r3
   19784:	str	r3, [fp, #-760]	; 0xfffffd08
   19788:	sub	r3, fp, #764	; 0x2fc
   1978c:	ldrd	r2, [r3]
   19790:	strd	r2, [fp, #-84]	; 0xffffffac
   19794:	sub	r3, fp, #412	; 0x19c
   19798:	ldrd	r0, [r3]
   1979c:	sub	r3, fp, #396	; 0x18c
   197a0:	ldrd	r2, [r3, #-8]
   197a4:	subs	ip, r0, r2
   197a8:	str	ip, [fp, #-508]	; 0xfffffe04
   197ac:	sbc	r3, r1, r3
   197b0:	str	r3, [fp, #-504]	; 0xfffffe08
   197b4:	ldrd	r2, [fp, #-204]	; 0xffffff34
   197b8:	sub	r1, fp, #508	; 0x1fc
   197bc:	ldrd	r0, [r1]
   197c0:	mov	ip, r0
   197c4:	subs	ip, ip, r2
   197c8:	str	ip, [fp, #-772]	; 0xfffffcfc
   197cc:	sbc	r3, r1, r3
   197d0:	str	r3, [fp, #-768]	; 0xfffffd00
   197d4:	sub	r3, fp, #772	; 0x304
   197d8:	ldrd	r2, [r3]
   197dc:	strd	r2, [fp, #-76]	; 0xffffffb4
   197e0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   197e4:	cmp	r2, #0
   197e8:	sbcs	r3, r3, #0
   197ec:	bge	19888 <__assert_fail@plt+0x8730>
   197f0:	sub	r3, fp, #444	; 0x1bc
   197f4:	ldrd	r0, [fp, #-84]	; 0xffffffac
   197f8:	ldrd	r2, [r3, #-8]
   197fc:	adds	ip, r0, r2
   19800:	str	ip, [fp, #-780]	; 0xfffffcf4
   19804:	adc	r3, r1, r3
   19808:	str	r3, [fp, #-776]	; 0xfffffcf8
   1980c:	sub	r3, fp, #780	; 0x30c
   19810:	ldrd	r2, [r3]
   19814:	strd	r2, [fp, #-212]	; 0xffffff2c
   19818:	sub	r3, fp, #444	; 0x1bc
   1981c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   19820:	ldrd	r2, [r3]
   19824:	adds	ip, r0, r2
   19828:	str	ip, [fp, #-516]	; 0xfffffdfc
   1982c:	adc	r3, r1, r3
   19830:	str	r3, [fp, #-512]	; 0xfffffe00
   19834:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   19838:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1983c:	cmp	r1, r3
   19840:	cmpeq	r0, r2
   19844:	movcc	r3, #1
   19848:	movcs	r3, #0
   1984c:	uxtb	r3, r3
   19850:	uxtb	r2, r3
   19854:	mov	r3, #0
   19858:	sub	r1, fp, #516	; 0x204
   1985c:	ldrd	r0, [r1]
   19860:	mov	ip, r0
   19864:	adds	ip, ip, r2
   19868:	str	ip, [fp, #-788]	; 0xfffffcec
   1986c:	adc	r3, r1, r3
   19870:	str	r3, [fp, #-784]	; 0xfffffcf0
   19874:	sub	r3, fp, #788	; 0x314
   19878:	ldrd	r2, [r3]
   1987c:	strd	r2, [fp, #-76]	; 0xffffffb4
   19880:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   19884:	strd	r2, [fp, #-84]	; 0xffffffac
   19888:	sub	r1, fp, #436	; 0x1b4
   1988c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   19890:	strd	r2, [sp, #40]	; 0x28
   19894:	sub	r3, fp, #444	; 0x1bc
   19898:	ldrd	r2, [r3, #-8]
   1989c:	strd	r2, [sp, #32]
   198a0:	sub	r3, fp, #444	; 0x1bc
   198a4:	ldrd	r2, [r3]
   198a8:	strd	r2, [sp, #24]
   198ac:	ldrd	r2, [fp, #-84]	; 0xffffffac
   198b0:	strd	r2, [sp, #16]
   198b4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   198b8:	strd	r2, [sp, #8]
   198bc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   198c0:	strd	r2, [sp]
   198c4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   198c8:	mov	r0, r1
   198cc:	bl	137a0 <__assert_fail@plt+0x2648>
   198d0:	strd	r0, [fp, #-68]	; 0xffffffbc
   198d4:	sub	r3, fp, #428	; 0x1ac
   198d8:	ldrd	r2, [r3, #-8]
   198dc:	strd	r2, [fp, #-60]	; 0xffffffc4
   198e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   198e4:	and	r3, r3, #31
   198e8:	cmp	r3, #1
   198ec:	bne	19960 <__assert_fail@plt+0x8808>
   198f0:	sub	r1, fp, #428	; 0x1ac
   198f4:	sub	r3, fp, #444	; 0x1bc
   198f8:	ldrd	r2, [r3, #-8]
   198fc:	strd	r2, [sp, #16]
   19900:	sub	r3, fp, #444	; 0x1bc
   19904:	ldrd	r2, [r3]
   19908:	strd	r2, [sp, #8]
   1990c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19910:	strd	r2, [sp]
   19914:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19918:	mov	r0, r1
   1991c:	bl	119cc <__assert_fail@plt+0x874>
   19920:	strd	r0, [fp, #-220]	; 0xffffff24
   19924:	sub	r3, fp, #428	; 0x1ac
   19928:	ldrd	r2, [r3]
   1992c:	orrs	r3, r2, r3
   19930:	bne	19be8 <__assert_fail@plt+0x8a90>
   19934:	ldrd	r2, [fp, #-220]	; 0xffffff24
   19938:	cmp	r3, #0
   1993c:	cmpeq	r2, #1
   19940:	beq	19948 <__assert_fail@plt+0x87f0>
   19944:	b	19be8 <__assert_fail@plt+0x8a90>
   19948:	sub	r3, fp, #396	; 0x18c
   1994c:	ldrd	r2, [r3, #-8]
   19950:	sub	r1, fp, #412	; 0x19c
   19954:	strd	r2, [r1, #-8]
   19958:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1995c:	strd	r2, [fp, #-52]	; 0xffffffcc
   19960:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19964:	sub	r3, r3, #1
   19968:	str	r3, [fp, #-88]	; 0xffffffa8
   1996c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19970:	cmp	r3, #0
   19974:	bne	19568 <__assert_fail@plt+0x8410>
   19978:	sub	r3, fp, #396	; 0x18c
   1997c:	ldrd	r2, [r3, #-8]
   19980:	sub	r1, fp, #412	; 0x19c
   19984:	strd	r2, [r1]
   19988:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1998c:	strd	r2, [fp, #-44]	; 0xffffffd4
   19990:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19994:	str	r3, [fp, #-88]	; 0xffffffa8
   19998:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1999c:	lsl	r3, r3, #1
   199a0:	str	r3, [fp, #-92]	; 0xffffffa4
   199a4:	mov	r3, #0
   199a8:	str	r3, [fp, #-120]	; 0xffffff88
   199ac:	b	19bb8 <__assert_fail@plt+0x8a60>
   199b0:	sub	r3, fp, #396	; 0x18c
   199b4:	ldrd	r4, [r3, #-8]
   199b8:	sub	r3, fp, #396	; 0x18c
   199bc:	ldrd	r0, [r3, #-8]
   199c0:	sub	ip, fp, #436	; 0x1b4
   199c4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   199c8:	strd	r2, [sp, #40]	; 0x28
   199cc:	sub	r3, fp, #444	; 0x1bc
   199d0:	ldrd	r2, [r3, #-8]
   199d4:	strd	r2, [sp, #32]
   199d8:	sub	r3, fp, #444	; 0x1bc
   199dc:	ldrd	r2, [r3]
   199e0:	strd	r2, [sp, #24]
   199e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   199e8:	strd	r2, [sp, #16]
   199ec:	strd	r0, [sp, #8]
   199f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   199f4:	strd	r2, [sp]
   199f8:	mov	r2, r4
   199fc:	mov	r3, r5
   19a00:	mov	r0, ip
   19a04:	bl	137a0 <__assert_fail@plt+0x2648>
   19a08:	strd	r0, [fp, #-36]	; 0xffffffdc
   19a0c:	sub	r3, fp, #428	; 0x1ac
   19a10:	ldrd	r2, [r3, #-8]
   19a14:	sub	r1, fp, #396	; 0x18c
   19a18:	strd	r2, [r1, #-8]
   19a1c:	ldr	r3, [fp, #4]
   19a20:	mov	r0, r3
   19a24:	mov	r1, #0
   19a28:	sub	r3, fp, #380	; 0x17c
   19a2c:	mov	ip, r3
   19a30:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19a34:	adds	lr, r2, r0
   19a38:	str	lr, [fp, #-796]	; 0xfffffce4
   19a3c:	adc	r3, r3, r1
   19a40:	str	r3, [fp, #-792]	; 0xfffffce8
   19a44:	sub	r3, fp, #796	; 0x31c
   19a48:	ldrd	r2, [r3]
   19a4c:	strd	r2, [ip, #-8]
   19a50:	sub	r3, fp, #380	; 0x17c
   19a54:	ldrd	r0, [r3, #-8]
   19a58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19a5c:	cmp	r1, r3
   19a60:	cmpeq	r0, r2
   19a64:	movcc	r3, #1
   19a68:	movcs	r3, #0
   19a6c:	uxtb	r3, r3
   19a70:	uxtb	r0, r3
   19a74:	mov	r1, #0
   19a78:	sub	r3, fp, #396	; 0x18c
   19a7c:	ldrd	r2, [r3, #-8]
   19a80:	adds	ip, r0, r2
   19a84:	str	ip, [fp, #-524]	; 0xfffffdf4
   19a88:	adc	r3, r1, r3
   19a8c:	str	r3, [fp, #-520]	; 0xfffffdf8
   19a90:	sub	r3, fp, #396	; 0x18c
   19a94:	sub	r2, fp, #524	; 0x20c
   19a98:	ldrd	r0, [r2]
   19a9c:	strd	r0, [r3, #-8]
   19aa0:	sub	r3, fp, #380	; 0x17c
   19aa4:	ldrd	r2, [r3, #-8]
   19aa8:	strd	r2, [fp, #-36]	; 0xffffffdc
   19aac:	sub	r3, fp, #396	; 0x18c
   19ab0:	ldrd	r0, [r3, #-8]
   19ab4:	sub	r3, fp, #444	; 0x1bc
   19ab8:	ldrd	r2, [r3]
   19abc:	cmp	r3, r1
   19ac0:	cmpeq	r2, r0
   19ac4:	bcc	19afc <__assert_fail@plt+0x89a4>
   19ac8:	sub	r3, fp, #396	; 0x18c
   19acc:	ldrd	r0, [r3, #-8]
   19ad0:	sub	r3, fp, #444	; 0x1bc
   19ad4:	ldrd	r2, [r3]
   19ad8:	cmp	r3, r1
   19adc:	cmpeq	r2, r0
   19ae0:	bne	19bac <__assert_fail@plt+0x8a54>
   19ae4:	sub	r3, fp, #444	; 0x1bc
   19ae8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19aec:	ldrd	r2, [r3, #-8]
   19af0:	cmp	r1, r3
   19af4:	cmpeq	r0, r2
   19af8:	bcc	19bac <__assert_fail@plt+0x8a54>
   19afc:	sub	r3, fp, #444	; 0x1bc
   19b00:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19b04:	ldrd	r2, [r3, #-8]
   19b08:	cmp	r1, r3
   19b0c:	cmpeq	r0, r2
   19b10:	movcc	r3, #1
   19b14:	movcs	r3, #0
   19b18:	uxtb	r2, r3
   19b1c:	sub	r3, fp, #396	; 0x18c
   19b20:	mov	r1, r3
   19b24:	uxtb	r2, r2
   19b28:	mov	r3, #0
   19b2c:	strd	r2, [r1]
   19b30:	sub	r3, fp, #444	; 0x1bc
   19b34:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19b38:	ldrd	r2, [r3, #-8]
   19b3c:	subs	ip, r0, r2
   19b40:	str	ip, [fp, #-804]	; 0xfffffcdc
   19b44:	sbc	r3, r1, r3
   19b48:	str	r3, [fp, #-800]	; 0xfffffce0
   19b4c:	sub	r3, fp, #804	; 0x324
   19b50:	ldrd	r2, [r3]
   19b54:	strd	r2, [fp, #-36]	; 0xffffffdc
   19b58:	sub	r3, fp, #396	; 0x18c
   19b5c:	ldrd	r0, [r3, #-8]
   19b60:	sub	r3, fp, #444	; 0x1bc
   19b64:	ldrd	r2, [r3]
   19b68:	subs	ip, r0, r2
   19b6c:	str	ip, [fp, #-532]	; 0xfffffdec
   19b70:	sbc	r3, r1, r3
   19b74:	str	r3, [fp, #-528]	; 0xfffffdf0
   19b78:	sub	r3, fp, #396	; 0x18c
   19b7c:	ldrd	r2, [r3]
   19b80:	sub	r1, fp, #532	; 0x214
   19b84:	ldrd	r0, [r1]
   19b88:	mov	ip, r0
   19b8c:	subs	ip, ip, r2
   19b90:	str	ip, [fp, #-540]	; 0xfffffde4
   19b94:	sbc	r3, r1, r3
   19b98:	str	r3, [fp, #-536]	; 0xfffffde8
   19b9c:	sub	r3, fp, #396	; 0x18c
   19ba0:	sub	r2, fp, #540	; 0x21c
   19ba4:	ldrd	r0, [r2]
   19ba8:	strd	r0, [r3, #-8]
   19bac:	ldr	r3, [fp, #-120]	; 0xffffff88
   19bb0:	add	r3, r3, #1
   19bb4:	str	r3, [fp, #-120]	; 0xffffff88
   19bb8:	ldr	r2, [fp, #-120]	; 0xffffff88
   19bbc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19bc0:	cmp	r2, r3
   19bc4:	bcc	199b0 <__assert_fail@plt+0x8858>
   19bc8:	sub	r3, fp, #396	; 0x18c
   19bcc:	ldrd	r2, [r3, #-8]
   19bd0:	sub	r1, fp, #412	; 0x19c
   19bd4:	strd	r2, [r1, #-8]
   19bd8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19bdc:	strd	r2, [fp, #-52]	; 0xffffffcc
   19be0:	b	19568 <__assert_fail@plt+0x8410>
   19be4:	nop	{0}
   19be8:	sub	r3, fp, #412	; 0x19c
   19bec:	ldrd	r4, [r3, #-8]
   19bf0:	sub	r3, fp, #412	; 0x19c
   19bf4:	ldrd	r0, [r3, #-8]
   19bf8:	sub	ip, fp, #436	; 0x1b4
   19bfc:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   19c00:	strd	r2, [sp, #40]	; 0x28
   19c04:	sub	r3, fp, #444	; 0x1bc
   19c08:	ldrd	r2, [r3, #-8]
   19c0c:	strd	r2, [sp, #32]
   19c10:	sub	r3, fp, #444	; 0x1bc
   19c14:	ldrd	r2, [r3]
   19c18:	strd	r2, [sp, #24]
   19c1c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19c20:	strd	r2, [sp, #16]
   19c24:	strd	r0, [sp, #8]
   19c28:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19c2c:	strd	r2, [sp]
   19c30:	mov	r2, r4
   19c34:	mov	r3, r5
   19c38:	mov	r0, ip
   19c3c:	bl	137a0 <__assert_fail@plt+0x2648>
   19c40:	strd	r0, [fp, #-52]	; 0xffffffcc
   19c44:	sub	r3, fp, #428	; 0x1ac
   19c48:	ldrd	r2, [r3, #-8]
   19c4c:	sub	r1, fp, #412	; 0x19c
   19c50:	strd	r2, [r1, #-8]
   19c54:	ldr	r3, [fp, #4]
   19c58:	mov	r0, r3
   19c5c:	mov	r1, #0
   19c60:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19c64:	adds	ip, r2, r0
   19c68:	str	ip, [fp, #-812]	; 0xfffffcd4
   19c6c:	adc	r3, r3, r1
   19c70:	str	r3, [fp, #-808]	; 0xfffffcd8
   19c74:	sub	r3, fp, #812	; 0x32c
   19c78:	ldrd	r2, [r3]
   19c7c:	strd	r2, [fp, #-228]	; 0xffffff1c
   19c80:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   19c84:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19c88:	cmp	r1, r3
   19c8c:	cmpeq	r0, r2
   19c90:	movcc	r3, #1
   19c94:	movcs	r3, #0
   19c98:	uxtb	r3, r3
   19c9c:	uxtb	r0, r3
   19ca0:	mov	r1, #0
   19ca4:	sub	r3, fp, #412	; 0x19c
   19ca8:	ldrd	r2, [r3, #-8]
   19cac:	adds	ip, r0, r2
   19cb0:	str	ip, [fp, #-548]	; 0xfffffddc
   19cb4:	adc	r3, r1, r3
   19cb8:	str	r3, [fp, #-544]	; 0xfffffde0
   19cbc:	sub	r3, fp, #412	; 0x19c
   19cc0:	sub	r2, fp, #548	; 0x224
   19cc4:	ldrd	r0, [r2]
   19cc8:	strd	r0, [r3, #-8]
   19ccc:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   19cd0:	strd	r2, [fp, #-52]	; 0xffffffcc
   19cd4:	sub	r3, fp, #412	; 0x19c
   19cd8:	ldrd	r0, [r3, #-8]
   19cdc:	sub	r3, fp, #444	; 0x1bc
   19ce0:	ldrd	r2, [r3]
   19ce4:	cmp	r3, r1
   19ce8:	cmpeq	r2, r0
   19cec:	bcc	19d24 <__assert_fail@plt+0x8bcc>
   19cf0:	sub	r3, fp, #412	; 0x19c
   19cf4:	ldrd	r0, [r3, #-8]
   19cf8:	sub	r3, fp, #444	; 0x1bc
   19cfc:	ldrd	r2, [r3]
   19d00:	cmp	r3, r1
   19d04:	cmpeq	r2, r0
   19d08:	bne	19dc8 <__assert_fail@plt+0x8c70>
   19d0c:	sub	r3, fp, #444	; 0x1bc
   19d10:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   19d14:	ldrd	r2, [r3, #-8]
   19d18:	cmp	r1, r3
   19d1c:	cmpeq	r0, r2
   19d20:	bcc	19dc8 <__assert_fail@plt+0x8c70>
   19d24:	sub	r3, fp, #444	; 0x1bc
   19d28:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   19d2c:	ldrd	r2, [r3, #-8]
   19d30:	cmp	r1, r3
   19d34:	cmpeq	r0, r2
   19d38:	movcc	r3, #1
   19d3c:	movcs	r3, #0
   19d40:	uxtb	r3, r3
   19d44:	uxtb	r2, r3
   19d48:	mov	r3, #0
   19d4c:	strd	r2, [fp, #-236]	; 0xffffff14
   19d50:	sub	r3, fp, #444	; 0x1bc
   19d54:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   19d58:	ldrd	r2, [r3, #-8]
   19d5c:	subs	ip, r0, r2
   19d60:	str	ip, [fp, #-820]	; 0xfffffccc
   19d64:	sbc	r3, r1, r3
   19d68:	str	r3, [fp, #-816]	; 0xfffffcd0
   19d6c:	sub	r3, fp, #820	; 0x334
   19d70:	ldrd	r2, [r3]
   19d74:	strd	r2, [fp, #-52]	; 0xffffffcc
   19d78:	sub	r3, fp, #412	; 0x19c
   19d7c:	ldrd	r0, [r3, #-8]
   19d80:	sub	r3, fp, #444	; 0x1bc
   19d84:	ldrd	r2, [r3]
   19d88:	subs	ip, r0, r2
   19d8c:	str	ip, [fp, #-556]	; 0xfffffdd4
   19d90:	sbc	r3, r1, r3
   19d94:	str	r3, [fp, #-552]	; 0xfffffdd8
   19d98:	ldrd	r2, [fp, #-236]	; 0xffffff14
   19d9c:	sub	r1, fp, #556	; 0x22c
   19da0:	ldrd	r0, [r1]
   19da4:	mov	ip, r0
   19da8:	subs	ip, ip, r2
   19dac:	str	ip, [fp, #-564]	; 0xfffffdcc
   19db0:	sbc	r3, r1, r3
   19db4:	str	r3, [fp, #-560]	; 0xfffffdd0
   19db8:	sub	r3, fp, #412	; 0x19c
   19dbc:	sub	r2, fp, #564	; 0x234
   19dc0:	ldrd	r0, [r2]
   19dc4:	strd	r0, [r3, #-8]
   19dc8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   19dcc:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19dd0:	cmp	r1, r3
   19dd4:	cmpeq	r0, r2
   19dd8:	movcc	r3, #1
   19ddc:	movcs	r3, #0
   19de0:	uxtb	r3, r3
   19de4:	uxtb	r2, r3
   19de8:	mov	r3, #0
   19dec:	strd	r2, [fp, #-244]	; 0xffffff0c
   19df0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   19df4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19df8:	subs	ip, r0, r2
   19dfc:	str	ip, [fp, #-828]	; 0xfffffcc4
   19e00:	sbc	r3, r1, r3
   19e04:	str	r3, [fp, #-824]	; 0xfffffcc8
   19e08:	sub	r3, fp, #828	; 0x33c
   19e0c:	ldrd	r2, [r3]
   19e10:	strd	r2, [fp, #-84]	; 0xffffffac
   19e14:	sub	r3, fp, #412	; 0x19c
   19e18:	ldrd	r0, [r3]
   19e1c:	sub	r3, fp, #412	; 0x19c
   19e20:	ldrd	r2, [r3, #-8]
   19e24:	subs	ip, r0, r2
   19e28:	str	ip, [fp, #-572]	; 0xfffffdc4
   19e2c:	sbc	r3, r1, r3
   19e30:	str	r3, [fp, #-568]	; 0xfffffdc8
   19e34:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   19e38:	sub	r1, fp, #572	; 0x23c
   19e3c:	ldrd	r0, [r1]
   19e40:	mov	ip, r0
   19e44:	subs	ip, ip, r2
   19e48:	str	ip, [fp, #-836]	; 0xfffffcbc
   19e4c:	sbc	r3, r1, r3
   19e50:	str	r3, [fp, #-832]	; 0xfffffcc0
   19e54:	sub	r3, fp, #836	; 0x344
   19e58:	ldrd	r2, [r3]
   19e5c:	strd	r2, [fp, #-76]	; 0xffffffb4
   19e60:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   19e64:	cmp	r2, #0
   19e68:	sbcs	r3, r3, #0
   19e6c:	bge	19f08 <__assert_fail@plt+0x8db0>
   19e70:	sub	r3, fp, #444	; 0x1bc
   19e74:	ldrd	r0, [fp, #-84]	; 0xffffffac
   19e78:	ldrd	r2, [r3, #-8]
   19e7c:	adds	ip, r0, r2
   19e80:	str	ip, [fp, #-844]	; 0xfffffcb4
   19e84:	adc	r3, r1, r3
   19e88:	str	r3, [fp, #-840]	; 0xfffffcb8
   19e8c:	sub	r3, fp, #844	; 0x34c
   19e90:	ldrd	r2, [r3]
   19e94:	strd	r2, [fp, #-252]	; 0xffffff04
   19e98:	sub	r3, fp, #444	; 0x1bc
   19e9c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   19ea0:	ldrd	r2, [r3]
   19ea4:	adds	ip, r0, r2
   19ea8:	str	ip, [fp, #-580]	; 0xfffffdbc
   19eac:	adc	r3, r1, r3
   19eb0:	str	r3, [fp, #-576]	; 0xfffffdc0
   19eb4:	ldrd	r0, [fp, #-252]	; 0xffffff04
   19eb8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   19ebc:	cmp	r1, r3
   19ec0:	cmpeq	r0, r2
   19ec4:	movcc	r3, #1
   19ec8:	movcs	r3, #0
   19ecc:	uxtb	r3, r3
   19ed0:	uxtb	r2, r3
   19ed4:	mov	r3, #0
   19ed8:	sub	r1, fp, #580	; 0x244
   19edc:	ldrd	r0, [r1]
   19ee0:	mov	ip, r0
   19ee4:	adds	ip, ip, r2
   19ee8:	str	ip, [fp, #-852]	; 0xfffffcac
   19eec:	adc	r3, r1, r3
   19ef0:	str	r3, [fp, #-848]	; 0xfffffcb0
   19ef4:	sub	r3, fp, #852	; 0x354
   19ef8:	ldrd	r2, [r3]
   19efc:	strd	r2, [fp, #-76]	; 0xffffffb4
   19f00:	ldrd	r2, [fp, #-252]	; 0xffffff04
   19f04:	strd	r2, [fp, #-84]	; 0xffffffac
   19f08:	sub	r1, fp, #428	; 0x1ac
   19f0c:	sub	r3, fp, #444	; 0x1bc
   19f10:	ldrd	r2, [r3, #-8]
   19f14:	strd	r2, [sp, #16]
   19f18:	sub	r3, fp, #444	; 0x1bc
   19f1c:	ldrd	r2, [r3]
   19f20:	strd	r2, [sp, #8]
   19f24:	ldrd	r2, [fp, #-84]	; 0xffffffac
   19f28:	strd	r2, [sp]
   19f2c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   19f30:	mov	r0, r1
   19f34:	bl	119cc <__assert_fail@plt+0x874>
   19f38:	strd	r0, [fp, #-220]	; 0xffffff24
   19f3c:	sub	r3, fp, #428	; 0x1ac
   19f40:	ldrd	r2, [r3]
   19f44:	orrs	r3, r2, r3
   19f48:	bne	19f5c <__assert_fail@plt+0x8e04>
   19f4c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   19f50:	cmp	r3, #0
   19f54:	cmpeq	r2, #1
   19f58:	beq	19be4 <__assert_fail@plt+0x8a8c>
   19f5c:	sub	r3, fp, #428	; 0x1ac
   19f60:	ldrd	r2, [r3]
   19f64:	orrs	r3, r2, r3
   19f68:	bne	1a5c8 <__assert_fail@plt+0x9470>
   19f6c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   19f70:	sub	r1, fp, #260	; 0x104
   19f74:	strd	r2, [r1]
   19f78:	sub	r3, fp, #260	; 0x104
   19f7c:	ldrd	r2, [r3]
   19f80:	mov	r0, #0
   19f84:	mov	r1, #0
   19f88:	lsr	r0, r2, #1
   19f8c:	orr	r0, r0, r3, lsl #31
   19f90:	lsr	r1, r3, #1
   19f94:	mov	r2, #127	; 0x7f
   19f98:	mov	r3, #0
   19f9c:	and	ip, r0, r2
   19fa0:	str	ip, [fp, #-588]	; 0xfffffdb4
   19fa4:	and	r3, r1, r3
   19fa8:	str	r3, [fp, #-584]	; 0xfffffdb8
   19fac:	movw	r3, #21236	; 0x52f4
   19fb0:	movt	r3, #3
   19fb4:	ldr	r2, [fp, #-588]	; 0xfffffdb4
   19fb8:	add	r3, r3, r2
   19fbc:	ldrb	r3, [r3]
   19fc0:	uxtb	r2, r3
   19fc4:	mov	r3, #0
   19fc8:	sub	r1, fp, #268	; 0x10c
   19fcc:	strd	r2, [r1]
   19fd0:	sub	r3, fp, #268	; 0x10c
   19fd4:	ldrd	r2, [r3]
   19fd8:	adds	r1, r2, r2
   19fdc:	str	r1, [fp, #-860]	; 0xfffffca4
   19fe0:	adc	r3, r3, r3
   19fe4:	str	r3, [fp, #-856]	; 0xfffffca8
   19fe8:	sub	r3, fp, #860	; 0x35c
   19fec:	ldrd	r4, [r3]
   19ff0:	ldr	r2, [fp, #-264]	; 0xfffffef8
   19ff4:	ldr	r3, [fp, #-268]	; 0xfffffef4
   19ff8:	mul	r1, r3, r2
   19ffc:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1a000:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a004:	mul	r3, r3, r2
   1a008:	add	r1, r1, r3
   1a00c:	ldr	r2, [fp, #-268]	; 0xfffffef4
   1a010:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a014:	umull	r2, r3, r2, r3
   1a018:	add	r1, r1, r3
   1a01c:	mov	r3, r1
   1a020:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a024:	mul	r0, r3, r1
   1a028:	ldr	r1, [fp, #-256]	; 0xffffff00
   1a02c:	mul	r1, r2, r1
   1a030:	add	r0, r0, r1
   1a034:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a038:	umull	r2, r3, r1, r2
   1a03c:	add	r1, r0, r3
   1a040:	mov	r3, r1
   1a044:	subs	r1, r4, r2
   1a048:	str	r1, [fp, #-868]	; 0xfffffc9c
   1a04c:	sbc	r3, r5, r3
   1a050:	str	r3, [fp, #-864]	; 0xfffffca0
   1a054:	sub	r1, fp, #268	; 0x10c
   1a058:	sub	r3, fp, #868	; 0x364
   1a05c:	ldrd	r2, [r3]
   1a060:	strd	r2, [r1]
   1a064:	sub	r3, fp, #268	; 0x10c
   1a068:	ldrd	r2, [r3]
   1a06c:	adds	r1, r2, r2
   1a070:	str	r1, [fp, #-876]	; 0xfffffc94
   1a074:	adc	r3, r3, r3
   1a078:	str	r3, [fp, #-872]	; 0xfffffc98
   1a07c:	sub	r3, fp, #876	; 0x36c
   1a080:	ldrd	r4, [r3]
   1a084:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1a088:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a08c:	mul	r1, r3, r2
   1a090:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1a094:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a098:	mul	r3, r3, r2
   1a09c:	add	r1, r1, r3
   1a0a0:	ldr	r2, [fp, #-268]	; 0xfffffef4
   1a0a4:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a0a8:	umull	r2, r3, r2, r3
   1a0ac:	add	r1, r1, r3
   1a0b0:	mov	r3, r1
   1a0b4:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a0b8:	mul	r0, r3, r1
   1a0bc:	ldr	r1, [fp, #-256]	; 0xffffff00
   1a0c0:	mul	r1, r2, r1
   1a0c4:	add	r0, r0, r1
   1a0c8:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a0cc:	umull	r2, r3, r1, r2
   1a0d0:	add	r1, r0, r3
   1a0d4:	mov	r3, r1
   1a0d8:	subs	r1, r4, r2
   1a0dc:	str	r1, [fp, #-884]	; 0xfffffc8c
   1a0e0:	sbc	r3, r5, r3
   1a0e4:	str	r3, [fp, #-880]	; 0xfffffc90
   1a0e8:	sub	r1, fp, #268	; 0x10c
   1a0ec:	sub	r3, fp, #884	; 0x374
   1a0f0:	ldrd	r2, [r3]
   1a0f4:	strd	r2, [r1]
   1a0f8:	sub	r3, fp, #268	; 0x10c
   1a0fc:	ldrd	r2, [r3]
   1a100:	adds	r1, r2, r2
   1a104:	str	r1, [fp, #-892]	; 0xfffffc84
   1a108:	adc	r3, r3, r3
   1a10c:	str	r3, [fp, #-888]	; 0xfffffc88
   1a110:	sub	r3, fp, #892	; 0x37c
   1a114:	ldrd	r4, [r3]
   1a118:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1a11c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a120:	mul	r1, r3, r2
   1a124:	ldr	r2, [fp, #-264]	; 0xfffffef8
   1a128:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a12c:	mul	r3, r3, r2
   1a130:	add	r1, r1, r3
   1a134:	ldr	r2, [fp, #-268]	; 0xfffffef4
   1a138:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1a13c:	umull	r2, r3, r2, r3
   1a140:	add	r1, r1, r3
   1a144:	mov	r3, r1
   1a148:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a14c:	mul	r0, r3, r1
   1a150:	ldr	r1, [fp, #-256]	; 0xffffff00
   1a154:	mul	r1, r2, r1
   1a158:	add	r0, r0, r1
   1a15c:	ldr	r1, [fp, #-260]	; 0xfffffefc
   1a160:	umull	r2, r3, r1, r2
   1a164:	add	r1, r0, r3
   1a168:	mov	r3, r1
   1a16c:	subs	r1, r4, r2
   1a170:	str	r1, [fp, #-900]	; 0xfffffc7c
   1a174:	sbc	r3, r5, r3
   1a178:	str	r3, [fp, #-896]	; 0xfffffc80
   1a17c:	sub	r1, fp, #268	; 0x10c
   1a180:	sub	r3, fp, #900	; 0x384
   1a184:	ldrd	r2, [r3]
   1a188:	strd	r2, [r1]
   1a18c:	sub	r3, fp, #268	; 0x10c
   1a190:	ldrd	r2, [r3]
   1a194:	sub	r1, fp, #276	; 0x114
   1a198:	strd	r2, [r1]
   1a19c:	sub	r3, fp, #284	; 0x11c
   1a1a0:	mov	ip, r3
   1a1a4:	sub	r3, fp, #444	; 0x1bc
   1a1a8:	mov	r1, r3
   1a1ac:	ldr	r2, [r1, #-4]
   1a1b0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1a1b4:	mul	r0, r3, r2
   1a1b8:	ldr	r2, [fp, #-272]	; 0xfffffef0
   1a1bc:	ldr	r3, [r1, #-8]
   1a1c0:	mul	r3, r3, r2
   1a1c4:	add	r0, r0, r3
   1a1c8:	ldr	r2, [r1, #-8]
   1a1cc:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1a1d0:	umull	r2, r3, r2, r3
   1a1d4:	add	r1, r0, r3
   1a1d8:	mov	r3, r1
   1a1dc:	strd	r2, [ip]
   1a1e0:	strd	r2, [ip]
   1a1e4:	sub	r3, fp, #444	; 0x1bc
   1a1e8:	ldrd	r0, [r3]
   1a1ec:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a1f0:	cmp	r1, r3
   1a1f4:	cmpeq	r0, r2
   1a1f8:	bcc	1a554 <__assert_fail@plt+0x93fc>
   1a1fc:	sub	r3, fp, #284	; 0x11c
   1a200:	mov	r1, r3
   1a204:	sub	r3, fp, #284	; 0x11c
   1a208:	ldrd	r2, [r3]
   1a20c:	strd	r2, [r1, #-8]
   1a210:	sub	r3, fp, #300	; 0x12c
   1a214:	mov	r1, r3
   1a218:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a21c:	strd	r2, [r1]
   1a220:	sub	r3, fp, #284	; 0x11c
   1a224:	ldr	r3, [r3, #-8]
   1a228:	str	r3, [fp, #-304]	; 0xfffffed0
   1a22c:	sub	r3, fp, #284	; 0x11c
   1a230:	ldrd	r2, [r3, #-8]
   1a234:	mov	r0, #0
   1a238:	mov	r1, #0
   1a23c:	mov	r0, r3
   1a240:	mov	r1, #0
   1a244:	mov	r3, r0
   1a248:	str	r3, [fp, #-308]	; 0xfffffecc
   1a24c:	sub	r3, fp, #300	; 0x12c
   1a250:	ldr	r3, [r3]
   1a254:	str	r3, [fp, #-312]	; 0xfffffec8
   1a258:	sub	r3, fp, #300	; 0x12c
   1a25c:	ldrd	r2, [r3]
   1a260:	mov	r0, #0
   1a264:	mov	r1, #0
   1a268:	mov	r0, r3
   1a26c:	mov	r1, #0
   1a270:	mov	r3, r0
   1a274:	str	r3, [fp, #-316]	; 0xfffffec4
   1a278:	ldr	r3, [fp, #-304]	; 0xfffffed0
   1a27c:	mov	r4, r3
   1a280:	mov	r5, #0
   1a284:	ldr	r3, [fp, #-312]	; 0xfffffec8
   1a288:	mov	r2, r3
   1a28c:	mov	r3, #0
   1a290:	sub	r1, fp, #316	; 0x13c
   1a294:	mov	ip, r1
   1a298:	mul	r0, r2, r5
   1a29c:	mul	r1, r4, r3
   1a2a0:	add	r1, r0, r1
   1a2a4:	umull	r2, r3, r4, r2
   1a2a8:	add	r1, r1, r3
   1a2ac:	mov	r3, r1
   1a2b0:	strd	r2, [ip, #-8]
   1a2b4:	strd	r2, [ip, #-8]
   1a2b8:	ldr	r3, [fp, #-304]	; 0xfffffed0
   1a2bc:	mov	r4, r3
   1a2c0:	mov	r5, #0
   1a2c4:	ldr	r3, [fp, #-316]	; 0xfffffec4
   1a2c8:	mov	r2, r3
   1a2cc:	mov	r3, #0
   1a2d0:	sub	r1, fp, #332	; 0x14c
   1a2d4:	mov	ip, r1
   1a2d8:	mul	r0, r2, r5
   1a2dc:	mul	r1, r4, r3
   1a2e0:	add	r1, r0, r1
   1a2e4:	umull	r2, r3, r4, r2
   1a2e8:	add	r1, r1, r3
   1a2ec:	mov	r3, r1
   1a2f0:	strd	r2, [ip]
   1a2f4:	strd	r2, [ip]
   1a2f8:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a2fc:	mov	r4, r3
   1a300:	mov	r5, #0
   1a304:	ldr	r3, [fp, #-312]	; 0xfffffec8
   1a308:	mov	r2, r3
   1a30c:	mov	r3, #0
   1a310:	sub	r1, fp, #332	; 0x14c
   1a314:	mov	ip, r1
   1a318:	mul	r0, r2, r5
   1a31c:	mul	r1, r4, r3
   1a320:	add	r1, r0, r1
   1a324:	umull	r2, r3, r4, r2
   1a328:	add	r1, r1, r3
   1a32c:	mov	r3, r1
   1a330:	strd	r2, [ip, #-8]
   1a334:	strd	r2, [ip, #-8]
   1a338:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a33c:	mov	r0, r3
   1a340:	mov	r1, #0
   1a344:	ldr	r3, [fp, #-316]	; 0xfffffec4
   1a348:	mov	r2, r3
   1a34c:	mov	r3, #0
   1a350:	mul	lr, r2, r1
   1a354:	mul	ip, r0, r3
   1a358:	add	ip, lr, ip
   1a35c:	umull	r2, r3, r0, r2
   1a360:	add	r1, ip, r3
   1a364:	mov	r3, r1
   1a368:	strd	r2, [fp, #-132]	; 0xffffff7c
   1a36c:	strd	r2, [fp, #-132]	; 0xffffff7c
   1a370:	sub	r3, fp, #316	; 0x13c
   1a374:	ldrd	r2, [r3, #-8]
   1a378:	mov	r0, #0
   1a37c:	mov	r1, #0
   1a380:	mov	r0, r3
   1a384:	mov	r1, #0
   1a388:	sub	r3, fp, #332	; 0x14c
   1a38c:	mov	ip, r3
   1a390:	sub	r3, fp, #332	; 0x14c
   1a394:	ldrd	r2, [r3]
   1a398:	adds	lr, r2, r0
   1a39c:	str	lr, [fp, #-908]	; 0xfffffc74
   1a3a0:	adc	r3, r3, r1
   1a3a4:	str	r3, [fp, #-904]	; 0xfffffc78
   1a3a8:	sub	r3, fp, #908	; 0x38c
   1a3ac:	ldrd	r2, [r3]
   1a3b0:	strd	r2, [ip]
   1a3b4:	sub	r3, fp, #332	; 0x14c
   1a3b8:	mov	ip, r3
   1a3bc:	sub	r3, fp, #332	; 0x14c
   1a3c0:	mov	r2, r3
   1a3c4:	sub	r3, fp, #332	; 0x14c
   1a3c8:	ldrd	r0, [r2]
   1a3cc:	ldrd	r2, [r3, #-8]
   1a3d0:	adds	lr, r0, r2
   1a3d4:	str	lr, [fp, #-916]	; 0xfffffc6c
   1a3d8:	adc	r3, r1, r3
   1a3dc:	str	r3, [fp, #-912]	; 0xfffffc70
   1a3e0:	sub	r3, fp, #916	; 0x394
   1a3e4:	ldrd	r2, [r3]
   1a3e8:	strd	r2, [ip]
   1a3ec:	sub	r3, fp, #332	; 0x14c
   1a3f0:	mov	r2, r3
   1a3f4:	sub	r3, fp, #332	; 0x14c
   1a3f8:	ldrd	r0, [r2]
   1a3fc:	ldrd	r2, [r3, #-8]
   1a400:	cmp	r1, r3
   1a404:	cmpeq	r0, r2
   1a408:	bcs	1a42c <__assert_fail@plt+0x92d4>
   1a40c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1a410:	adds	r1, r2, #0
   1a414:	str	r1, [fp, #-924]	; 0xfffffc64
   1a418:	adc	r3, r3, #1
   1a41c:	str	r3, [fp, #-920]	; 0xfffffc68
   1a420:	sub	r3, fp, #924	; 0x39c
   1a424:	ldrd	r2, [r3]
   1a428:	strd	r2, [fp, #-132]	; 0xffffff7c
   1a42c:	sub	r3, fp, #332	; 0x14c
   1a430:	ldrd	r2, [r3]
   1a434:	mov	r0, #0
   1a438:	mov	r1, #0
   1a43c:	mov	r0, r3
   1a440:	mov	r1, #0
   1a444:	sub	r3, fp, #348	; 0x15c
   1a448:	mov	ip, r3
   1a44c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1a450:	adds	lr, r2, r0
   1a454:	str	lr, [fp, #-932]	; 0xfffffc5c
   1a458:	adc	r3, r3, r1
   1a45c:	str	r3, [fp, #-928]	; 0xfffffc60
   1a460:	sub	r3, fp, #932	; 0x3a4
   1a464:	ldrd	r2, [r3]
   1a468:	strd	r2, [ip]
   1a46c:	sub	r3, fp, #332	; 0x14c
   1a470:	ldrd	r2, [r3]
   1a474:	mov	r4, #0
   1a478:	mov	r5, #0
   1a47c:	mov	r5, r2
   1a480:	mov	r4, #0
   1a484:	sub	r3, fp, #316	; 0x13c
   1a488:	ldrd	r0, [r3, #-8]
   1a48c:	mvn	r2, #0
   1a490:	mov	r3, #0
   1a494:	and	ip, r0, r2
   1a498:	str	ip, [fp, #-596]	; 0xfffffdac
   1a49c:	and	r3, r1, r3
   1a4a0:	str	r3, [fp, #-592]	; 0xfffffdb0
   1a4a4:	sub	r3, fp, #596	; 0x254
   1a4a8:	ldrd	r2, [r3]
   1a4ac:	mov	r1, r2
   1a4b0:	adds	r1, r4, r1
   1a4b4:	str	r1, [fp, #-604]	; 0xfffffda4
   1a4b8:	adc	r3, r5, r3
   1a4bc:	str	r3, [fp, #-600]	; 0xfffffda8
   1a4c0:	sub	r3, fp, #348	; 0x15c
   1a4c4:	sub	r2, fp, #604	; 0x25c
   1a4c8:	ldrd	r0, [r2]
   1a4cc:	strd	r0, [r3, #-8]
   1a4d0:	sub	r3, fp, #444	; 0x1bc
   1a4d4:	mov	r2, r3
   1a4d8:	sub	r3, fp, #348	; 0x15c
   1a4dc:	ldrd	r0, [r2]
   1a4e0:	ldrd	r2, [r3]
   1a4e4:	subs	ip, r0, r2
   1a4e8:	str	ip, [fp, #-612]	; 0xfffffd9c
   1a4ec:	sbc	r3, r1, r3
   1a4f0:	str	r3, [fp, #-608]	; 0xfffffda0
   1a4f4:	sub	r3, fp, #444	; 0x1bc
   1a4f8:	mov	r0, r3
   1a4fc:	ldr	r3, [fp, #-272]	; 0xfffffef0
   1a500:	sub	r2, fp, #612	; 0x264
   1a504:	ldrd	r4, [r2]
   1a508:	mov	r2, r4
   1a50c:	mul	r2, r2, r3
   1a510:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1a514:	mov	r1, r5
   1a518:	mul	r3, r1, r3
   1a51c:	add	r1, r2, r3
   1a520:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1a524:	mov	r2, r4
   1a528:	umull	r2, r3, r3, r2
   1a52c:	add	r1, r1, r3
   1a530:	mov	r3, r1
   1a534:	strd	r2, [r0]
   1a538:	strd	r2, [r0]
   1a53c:	sub	r3, fp, #444	; 0x1bc
   1a540:	mov	r1, r3
   1a544:	sub	r3, fp, #284	; 0x11c
   1a548:	ldrd	r2, [r3]
   1a54c:	strd	r2, [r1, #-8]
   1a550:	b	1a57c <__assert_fail@plt+0x9424>
   1a554:	sub	r3, fp, #444	; 0x1bc
   1a558:	mov	r1, r3
   1a55c:	sub	r3, fp, #284	; 0x11c
   1a560:	ldrd	r2, [r3]
   1a564:	strd	r2, [r1, #-8]
   1a568:	sub	r3, fp, #444	; 0x1bc
   1a56c:	mov	r1, r3
   1a570:	mov	r2, #0
   1a574:	mov	r3, #0
   1a578:	strd	r2, [r1]
   1a57c:	ldrd	r0, [fp, #-220]	; 0xffffff24
   1a580:	bl	15c80 <__assert_fail@plt+0x4b28>
   1a584:	mov	r3, r0
   1a588:	eor	r3, r3, #1
   1a58c:	uxtb	r3, r3
   1a590:	cmp	r3, #0
   1a594:	beq	1a5b0 <__assert_fail@plt+0x9458>
   1a598:	ldr	r3, [fp, #4]
   1a59c:	add	r2, r3, #1
   1a5a0:	ldr	r3, [fp, #8]
   1a5a4:	ldrd	r0, [fp, #-220]	; 0xffffff24
   1a5a8:	bl	18454 <__assert_fail@plt+0x72fc>
   1a5ac:	b	1a96c <__assert_fail@plt+0x9814>
   1a5b0:	mov	r3, #1
   1a5b4:	str	r3, [sp]
   1a5b8:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a5bc:	ldr	r0, [fp, #8]
   1a5c0:	bl	11dec <__assert_fail@plt+0xc94>
   1a5c4:	b	1a96c <__assert_fail@plt+0x9814>
   1a5c8:	sub	r3, fp, #428	; 0x1ac
   1a5cc:	ldrd	r0, [r3]
   1a5d0:	sub	r3, fp, #444	; 0x1bc
   1a5d4:	ldrd	r2, [r3]
   1a5d8:	cmp	r3, r1
   1a5dc:	cmpeq	r2, r0
   1a5e0:	bne	1a630 <__assert_fail@plt+0x94d8>
   1a5e4:	sub	r3, fp, #444	; 0x1bc
   1a5e8:	ldrd	r0, [r3, #-8]
   1a5ec:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a5f0:	cmp	r1, r3
   1a5f4:	cmpeq	r0, r2
   1a5f8:	bne	1a630 <__assert_fail@plt+0x94d8>
   1a5fc:	ldr	r3, [fp, #4]
   1a600:	add	r3, r3, #1
   1a604:	sub	r2, fp, #444	; 0x1bc
   1a608:	mov	r0, r2
   1a60c:	sub	r2, fp, #444	; 0x1bc
   1a610:	mov	r1, r2
   1a614:	ldr	r2, [fp, #8]
   1a618:	str	r2, [sp, #4]
   1a61c:	str	r3, [sp]
   1a620:	ldrd	r2, [r0, #-8]
   1a624:	ldrd	r0, [r1]
   1a628:	bl	18fb0 <__assert_fail@plt+0x7e58>
   1a62c:	b	1ab00 <__assert_fail@plt+0x99a8>
   1a630:	sub	r3, fp, #364	; 0x16c
   1a634:	mov	r1, r3
   1a638:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a63c:	strd	r2, [r1]
   1a640:	sub	r3, fp, #364	; 0x16c
   1a644:	ldrd	r2, [r3]
   1a648:	mov	r0, #0
   1a64c:	mov	r1, #0
   1a650:	lsr	r0, r2, #1
   1a654:	orr	r0, r0, r3, lsl #31
   1a658:	lsr	r1, r3, #1
   1a65c:	mov	r2, #127	; 0x7f
   1a660:	mov	r3, #0
   1a664:	and	ip, r0, r2
   1a668:	str	ip, [fp, #-620]	; 0xfffffd94
   1a66c:	and	r3, r1, r3
   1a670:	str	r3, [fp, #-616]	; 0xfffffd98
   1a674:	movw	r3, #21236	; 0x52f4
   1a678:	movt	r3, #3
   1a67c:	ldr	r2, [fp, #-620]	; 0xfffffd94
   1a680:	add	r3, r3, r2
   1a684:	ldrb	r2, [r3]
   1a688:	sub	r3, fp, #364	; 0x16c
   1a68c:	mov	r1, r3
   1a690:	uxtb	r2, r2
   1a694:	mov	r3, #0
   1a698:	strd	r2, [r1, #-8]
   1a69c:	sub	r3, fp, #364	; 0x16c
   1a6a0:	ldrd	r2, [r3, #-8]
   1a6a4:	adds	r1, r2, r2
   1a6a8:	str	r1, [fp, #-940]	; 0xfffffc54
   1a6ac:	adc	r3, r3, r3
   1a6b0:	str	r3, [fp, #-936]	; 0xfffffc58
   1a6b4:	sub	r3, fp, #940	; 0x3ac
   1a6b8:	ldrd	r4, [r3]
   1a6bc:	sub	r3, fp, #364	; 0x16c
   1a6c0:	mov	r2, r3
   1a6c4:	ldr	r1, [r2, #-4]
   1a6c8:	ldr	r3, [r2, #-8]
   1a6cc:	mul	r0, r3, r1
   1a6d0:	ldr	r1, [r2, #-4]
   1a6d4:	ldr	r3, [r2, #-8]
   1a6d8:	mul	r3, r3, r1
   1a6dc:	add	ip, r0, r3
   1a6e0:	ldr	r1, [r2, #-8]
   1a6e4:	ldr	r3, [r2, #-8]
   1a6e8:	umull	r0, r1, r1, r3
   1a6ec:	add	r3, ip, r1
   1a6f0:	mov	r1, r3
   1a6f4:	sub	r3, fp, #364	; 0x16c
   1a6f8:	mov	r2, r3
   1a6fc:	ldr	r3, [r2]
   1a700:	mul	ip, r1, r3
   1a704:	ldr	r3, [r2, #4]
   1a708:	mul	r3, r0, r3
   1a70c:	add	ip, ip, r3
   1a710:	ldr	r3, [r2]
   1a714:	umull	r2, r3, r3, r0
   1a718:	add	r1, ip, r3
   1a71c:	mov	r3, r1
   1a720:	sub	r1, fp, #364	; 0x16c
   1a724:	subs	r0, r4, r2
   1a728:	str	r0, [fp, #-948]	; 0xfffffc4c
   1a72c:	sbc	r3, r5, r3
   1a730:	str	r3, [fp, #-944]	; 0xfffffc50
   1a734:	sub	r3, fp, #948	; 0x3b4
   1a738:	ldrd	r2, [r3]
   1a73c:	strd	r2, [r1, #-8]
   1a740:	sub	r3, fp, #364	; 0x16c
   1a744:	ldrd	r2, [r3, #-8]
   1a748:	adds	r1, r2, r2
   1a74c:	str	r1, [fp, #-956]	; 0xfffffc44
   1a750:	adc	r3, r3, r3
   1a754:	str	r3, [fp, #-952]	; 0xfffffc48
   1a758:	sub	r3, fp, #956	; 0x3bc
   1a75c:	ldrd	r4, [r3]
   1a760:	sub	r3, fp, #364	; 0x16c
   1a764:	mov	r2, r3
   1a768:	ldr	r1, [r2, #-4]
   1a76c:	ldr	r3, [r2, #-8]
   1a770:	mul	r0, r3, r1
   1a774:	ldr	r1, [r2, #-4]
   1a778:	ldr	r3, [r2, #-8]
   1a77c:	mul	r3, r3, r1
   1a780:	add	ip, r0, r3
   1a784:	ldr	r1, [r2, #-8]
   1a788:	ldr	r3, [r2, #-8]
   1a78c:	umull	r0, r1, r1, r3
   1a790:	add	r3, ip, r1
   1a794:	mov	r1, r3
   1a798:	sub	r3, fp, #364	; 0x16c
   1a79c:	mov	r2, r3
   1a7a0:	ldr	r3, [r2]
   1a7a4:	mul	ip, r1, r3
   1a7a8:	ldr	r3, [r2, #4]
   1a7ac:	mul	r3, r0, r3
   1a7b0:	add	ip, ip, r3
   1a7b4:	ldr	r3, [r2]
   1a7b8:	umull	r2, r3, r3, r0
   1a7bc:	add	r1, ip, r3
   1a7c0:	mov	r3, r1
   1a7c4:	sub	r1, fp, #364	; 0x16c
   1a7c8:	subs	r0, r4, r2
   1a7cc:	str	r0, [fp, #-964]	; 0xfffffc3c
   1a7d0:	sbc	r3, r5, r3
   1a7d4:	str	r3, [fp, #-960]	; 0xfffffc40
   1a7d8:	sub	r3, fp, #964	; 0x3c4
   1a7dc:	ldrd	r2, [r3]
   1a7e0:	strd	r2, [r1, #-8]
   1a7e4:	sub	r3, fp, #364	; 0x16c
   1a7e8:	ldrd	r2, [r3, #-8]
   1a7ec:	adds	r1, r2, r2
   1a7f0:	str	r1, [fp, #-972]	; 0xfffffc34
   1a7f4:	adc	r3, r3, r3
   1a7f8:	str	r3, [fp, #-968]	; 0xfffffc38
   1a7fc:	sub	r3, fp, #972	; 0x3cc
   1a800:	ldrd	r4, [r3]
   1a804:	sub	r3, fp, #364	; 0x16c
   1a808:	mov	r2, r3
   1a80c:	ldr	r1, [r2, #-4]
   1a810:	ldr	r3, [r2, #-8]
   1a814:	mul	r0, r3, r1
   1a818:	ldr	r1, [r2, #-4]
   1a81c:	ldr	r3, [r2, #-8]
   1a820:	mul	r3, r3, r1
   1a824:	add	ip, r0, r3
   1a828:	ldr	r1, [r2, #-8]
   1a82c:	ldr	r3, [r2, #-8]
   1a830:	umull	r0, r1, r1, r3
   1a834:	add	r3, ip, r1
   1a838:	mov	r1, r3
   1a83c:	sub	r3, fp, #364	; 0x16c
   1a840:	mov	r2, r3
   1a844:	ldr	r3, [r2]
   1a848:	mul	ip, r1, r3
   1a84c:	ldr	r3, [r2, #4]
   1a850:	mul	r3, r0, r3
   1a854:	add	ip, ip, r3
   1a858:	ldr	r3, [r2]
   1a85c:	umull	r2, r3, r3, r0
   1a860:	add	r1, ip, r3
   1a864:	mov	r3, r1
   1a868:	sub	r1, fp, #364	; 0x16c
   1a86c:	subs	r0, r4, r2
   1a870:	str	r0, [fp, #-980]	; 0xfffffc2c
   1a874:	sbc	r3, r5, r3
   1a878:	str	r3, [fp, #-976]	; 0xfffffc30
   1a87c:	sub	r3, fp, #980	; 0x3d4
   1a880:	ldrd	r2, [r3]
   1a884:	strd	r2, [r1, #-8]
   1a888:	sub	r3, fp, #380	; 0x17c
   1a88c:	mov	r1, r3
   1a890:	sub	r3, fp, #364	; 0x16c
   1a894:	ldrd	r2, [r3, #-8]
   1a898:	strd	r2, [r1]
   1a89c:	sub	r3, fp, #444	; 0x1bc
   1a8a0:	mov	lr, r3
   1a8a4:	sub	r3, fp, #380	; 0x17c
   1a8a8:	mov	ip, r3
   1a8ac:	sub	r3, fp, #444	; 0x1bc
   1a8b0:	mov	r1, r3
   1a8b4:	ldr	r2, [ip, #4]
   1a8b8:	ldr	r3, [r1, #-8]
   1a8bc:	mul	r0, r3, r2
   1a8c0:	ldr	r2, [r1, #-4]
   1a8c4:	ldr	r3, [ip]
   1a8c8:	mul	r3, r3, r2
   1a8cc:	add	r0, r0, r3
   1a8d0:	ldr	r2, [ip]
   1a8d4:	ldr	r3, [r1, #-8]
   1a8d8:	umull	r2, r3, r2, r3
   1a8dc:	add	r1, r0, r3
   1a8e0:	mov	r3, r1
   1a8e4:	strd	r2, [lr, #-8]
   1a8e8:	strd	r2, [lr, #-8]
   1a8ec:	sub	r3, fp, #444	; 0x1bc
   1a8f0:	mov	r1, r3
   1a8f4:	mov	r2, #0
   1a8f8:	mov	r3, #0
   1a8fc:	strd	r2, [r1]
   1a900:	sub	r3, fp, #428	; 0x1ac
   1a904:	ldrd	r0, [r3]
   1a908:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a90c:	bl	16a0c <__assert_fail@plt+0x58b4>
   1a910:	mov	r3, r0
   1a914:	eor	r3, r3, #1
   1a918:	uxtb	r3, r3
   1a91c:	cmp	r3, #0
   1a920:	beq	1a94c <__assert_fail@plt+0x97f4>
   1a924:	sub	r3, fp, #428	; 0x1ac
   1a928:	ldrd	r0, [r3]
   1a92c:	ldr	r3, [fp, #4]
   1a930:	add	r2, r3, #1
   1a934:	ldr	r3, [fp, #8]
   1a938:	str	r3, [sp, #4]
   1a93c:	str	r2, [sp]
   1a940:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a944:	bl	18fb0 <__assert_fail@plt+0x7e58>
   1a948:	b	1a96c <__assert_fail@plt+0x9814>
   1a94c:	sub	r3, fp, #428	; 0x1ac
   1a950:	ldrd	r0, [r3]
   1a954:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a958:	strd	r2, [sp]
   1a95c:	mov	r2, r0
   1a960:	mov	r3, r1
   1a964:	ldr	r0, [fp, #8]
   1a968:	bl	11fb8 <__assert_fail@plt+0xe60>
   1a96c:	sub	r3, fp, #444	; 0x1bc
   1a970:	ldrd	r2, [r3]
   1a974:	orrs	r3, r2, r3
   1a978:	bne	1a9d0 <__assert_fail@plt+0x9878>
   1a97c:	sub	r3, fp, #444	; 0x1bc
   1a980:	ldrd	r0, [r3, #-8]
   1a984:	bl	15c80 <__assert_fail@plt+0x4b28>
   1a988:	mov	r3, r0
   1a98c:	cmp	r3, #0
   1a990:	beq	1a9b4 <__assert_fail@plt+0x985c>
   1a994:	sub	r3, fp, #444	; 0x1bc
   1a998:	mov	r2, r3
   1a99c:	mov	r3, #1
   1a9a0:	str	r3, [sp]
   1a9a4:	ldrd	r2, [r2, #-8]
   1a9a8:	ldr	r0, [fp, #8]
   1a9ac:	bl	11dec <__assert_fail@plt+0xc94>
   1a9b0:	b	1ab00 <__assert_fail@plt+0x99a8>
   1a9b4:	sub	r3, fp, #444	; 0x1bc
   1a9b8:	mov	r1, r3
   1a9bc:	ldr	r3, [fp, #8]
   1a9c0:	ldr	r2, [fp, #4]
   1a9c4:	ldrd	r0, [r1, #-8]
   1a9c8:	bl	18454 <__assert_fail@plt+0x72fc>
   1a9cc:	b	1ab00 <__assert_fail@plt+0x99a8>
   1a9d0:	sub	r3, fp, #444	; 0x1bc
   1a9d4:	mov	r2, r3
   1a9d8:	sub	r3, fp, #444	; 0x1bc
   1a9dc:	mov	r1, r3
   1a9e0:	ldrd	r2, [r2, #-8]
   1a9e4:	ldrd	r0, [r1]
   1a9e8:	bl	16a0c <__assert_fail@plt+0x58b4>
   1a9ec:	mov	r3, r0
   1a9f0:	cmp	r3, #0
   1a9f4:	beq	1aa1c <__assert_fail@plt+0x98c4>
   1a9f8:	sub	r3, fp, #444	; 0x1bc
   1a9fc:	mov	r1, r3
   1aa00:	sub	r3, fp, #444	; 0x1bc
   1aa04:	ldrd	r2, [r3, #-8]
   1aa08:	strd	r2, [sp]
   1aa0c:	ldrd	r2, [r1]
   1aa10:	ldr	r0, [fp, #8]
   1aa14:	bl	11fb8 <__assert_fail@plt+0xe60>
   1aa18:	b	1ab00 <__assert_fail@plt+0x99a8>
   1aa1c:	sub	r3, fp, #396	; 0x18c
   1aa20:	ldrd	r0, [r3, #-8]
   1aa24:	sub	ip, fp, #404	; 0x194
   1aa28:	sub	r3, fp, #444	; 0x1bc
   1aa2c:	ldrd	r2, [r3, #-8]
   1aa30:	strd	r2, [sp, #16]
   1aa34:	sub	r3, fp, #444	; 0x1bc
   1aa38:	ldrd	r2, [r3]
   1aa3c:	strd	r2, [sp, #8]
   1aa40:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1aa44:	strd	r2, [sp]
   1aa48:	mov	r2, r0
   1aa4c:	mov	r3, r1
   1aa50:	mov	r0, ip
   1aa54:	bl	1141c <__assert_fail@plt+0x2c4>
   1aa58:	strd	r0, [fp, #-36]	; 0xffffffdc
   1aa5c:	sub	r3, fp, #412	; 0x19c
   1aa60:	ldrd	r0, [r3]
   1aa64:	sub	ip, fp, #412	; 0x19c
   1aa68:	sub	r3, fp, #444	; 0x1bc
   1aa6c:	ldrd	r2, [r3, #-8]
   1aa70:	strd	r2, [sp, #16]
   1aa74:	sub	r3, fp, #444	; 0x1bc
   1aa78:	ldrd	r2, [r3]
   1aa7c:	strd	r2, [sp, #8]
   1aa80:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1aa84:	strd	r2, [sp]
   1aa88:	mov	r2, r0
   1aa8c:	mov	r3, r1
   1aa90:	mov	r0, ip
   1aa94:	bl	1141c <__assert_fail@plt+0x2c4>
   1aa98:	strd	r0, [fp, #-44]	; 0xffffffd4
   1aa9c:	sub	r3, fp, #412	; 0x19c
   1aaa0:	ldrd	r0, [r3, #-8]
   1aaa4:	sub	ip, fp, #420	; 0x1a4
   1aaa8:	sub	r3, fp, #444	; 0x1bc
   1aaac:	ldrd	r2, [r3, #-8]
   1aab0:	strd	r2, [sp, #16]
   1aab4:	sub	r3, fp, #444	; 0x1bc
   1aab8:	ldrd	r2, [r3]
   1aabc:	strd	r2, [sp, #8]
   1aac0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1aac4:	strd	r2, [sp]
   1aac8:	mov	r2, r0
   1aacc:	mov	r3, r1
   1aad0:	mov	r0, ip
   1aad4:	bl	1141c <__assert_fail@plt+0x2c4>
   1aad8:	strd	r0, [fp, #-52]	; 0xffffffcc
   1aadc:	sub	r3, fp, #444	; 0x1bc
   1aae0:	ldrd	r2, [r3]
   1aae4:	orrs	r3, r2, r3
   1aae8:	bne	19360 <__assert_fail@plt+0x8208>
   1aaec:	sub	r3, fp, #444	; 0x1bc
   1aaf0:	ldrd	r2, [r3, #-8]
   1aaf4:	cmp	r3, #0
   1aaf8:	cmpeq	r2, #1
   1aafc:	bne	19360 <__assert_fail@plt+0x8208>
   1ab00:	sub	sp, fp, #28
   1ab04:	ldrd	r4, [sp]
   1ab08:	ldrd	r6, [sp, #8]
   1ab0c:	ldrd	r8, [sp, #16]
   1ab10:	ldr	fp, [sp, #24]
   1ab14:	add	sp, sp, #28
   1ab18:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ab20:	strd	r6, [sp, #8]
   1ab24:	strd	r8, [sp, #16]
   1ab28:	str	fp, [sp, #24]
   1ab2c:	str	lr, [sp, #28]
   1ab30:	add	fp, sp, #28
   1ab34:	sub	sp, sp, #136	; 0x88
   1ab38:	str	r0, [fp, #-128]	; 0xffffff80
   1ab3c:	str	r1, [fp, #-132]	; 0xffffff7c
   1ab40:	str	r2, [fp, #-136]	; 0xffffff78
   1ab44:	movw	r3, #29076	; 0x7194
   1ab48:	movt	r3, #4
   1ab4c:	ldrb	r3, [r3]
   1ab50:	cmp	r3, #0
   1ab54:	beq	1ab78 <__assert_fail@plt+0x9a20>
   1ab58:	movw	r3, #29056	; 0x7180
   1ab5c:	movt	r3, #4
   1ab60:	ldr	r3, [r3]
   1ab64:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1ab68:	movw	r1, #21544	; 0x5428
   1ab6c:	movt	r1, #3
   1ab70:	mov	r0, r3
   1ab74:	bl	11068 <fprintf@plt>
   1ab78:	sub	r2, fp, #124	; 0x7c
   1ab7c:	sub	r1, fp, #112	; 0x70
   1ab80:	mov	r3, #0
   1ab84:	movw	r0, #3292	; 0xcdc
   1ab88:	movt	r0, #2
   1ab8c:	bl	12050 <__assert_fail@plt+0xef8>
   1ab90:	sub	r3, fp, #88	; 0x58
   1ab94:	mov	r1, #2
   1ab98:	mov	r0, r3
   1ab9c:	bl	2109c <__assert_fail@plt+0xff44>
   1aba0:	sub	r3, fp, #64	; 0x40
   1aba4:	mov	r1, #2
   1aba8:	mov	r0, r3
   1abac:	bl	2109c <__assert_fail@plt+0xff44>
   1abb0:	sub	r3, fp, #76	; 0x4c
   1abb4:	mov	r1, #2
   1abb8:	mov	r0, r3
   1abbc:	bl	2109c <__assert_fail@plt+0xff44>
   1abc0:	sub	r3, fp, #100	; 0x64
   1abc4:	mov	r1, #1
   1abc8:	mov	r0, r3
   1abcc:	bl	210dc <__assert_fail@plt+0xff84>
   1abd0:	mov	r2, #1
   1abd4:	mov	r3, #0
   1abd8:	strd	r2, [fp, #-36]	; 0xffffffdc
   1abdc:	mov	r2, #1
   1abe0:	mov	r3, #0
   1abe4:	strd	r2, [fp, #-44]	; 0xffffffd4
   1abe8:	b	1af20 <__assert_fail@plt+0x9dc8>
   1abec:	sub	r2, fp, #64	; 0x40
   1abf0:	sub	r1, fp, #64	; 0x40
   1abf4:	sub	r3, fp, #112	; 0x70
   1abf8:	mov	r0, r3
   1abfc:	bl	22970 <__assert_fail@plt+0x11818>
   1ac00:	sub	r1, fp, #112	; 0x70
   1ac04:	sub	r3, fp, #64	; 0x40
   1ac08:	ldr	r2, [fp, #-128]	; 0xffffff80
   1ac0c:	mov	r0, r3
   1ac10:	bl	23550 <__assert_fail@plt+0x123f8>
   1ac14:	sub	r1, fp, #64	; 0x40
   1ac18:	sub	r3, fp, #64	; 0x40
   1ac1c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1ac20:	mov	r0, r3
   1ac24:	bl	22364 <__assert_fail@plt+0x1120c>
   1ac28:	sub	r2, fp, #64	; 0x40
   1ac2c:	sub	r1, fp, #76	; 0x4c
   1ac30:	sub	r3, fp, #112	; 0x70
   1ac34:	mov	r0, r3
   1ac38:	bl	227f8 <__assert_fail@plt+0x116a0>
   1ac3c:	sub	r2, fp, #112	; 0x70
   1ac40:	sub	r1, fp, #100	; 0x64
   1ac44:	sub	r3, fp, #124	; 0x7c
   1ac48:	mov	r0, r3
   1ac4c:	bl	22970 <__assert_fail@plt+0x11818>
   1ac50:	sub	r1, fp, #124	; 0x7c
   1ac54:	sub	r3, fp, #100	; 0x64
   1ac58:	ldr	r2, [fp, #-128]	; 0xffffff80
   1ac5c:	mov	r0, r3
   1ac60:	bl	23550 <__assert_fail@plt+0x123f8>
   1ac64:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ac68:	mov	r0, #31
   1ac6c:	mov	r1, #0
   1ac70:	and	r4, r2, r0
   1ac74:	and	r5, r3, r1
   1ac78:	cmp	r5, #0
   1ac7c:	cmpeq	r4, #1
   1ac80:	bne	1accc <__assert_fail@plt+0x9b74>
   1ac84:	sub	r1, fp, #100	; 0x64
   1ac88:	sub	r3, fp, #112	; 0x70
   1ac8c:	ldr	r2, [fp, #-128]	; 0xffffff80
   1ac90:	mov	r0, r3
   1ac94:	bl	24744 <__assert_fail@plt+0x135ec>
   1ac98:	sub	r3, fp, #112	; 0x70
   1ac9c:	mov	r1, #1
   1aca0:	mov	r0, r3
   1aca4:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   1aca8:	mov	r3, r0
   1acac:	cmp	r3, #0
   1acb0:	beq	1acb8 <__assert_fail@plt+0x9b60>
   1acb4:	b	1adac <__assert_fail@plt+0x9c54>
   1acb8:	sub	r2, fp, #64	; 0x40
   1acbc:	sub	r3, fp, #88	; 0x58
   1acc0:	mov	r1, r2
   1acc4:	mov	r0, r3
   1acc8:	bl	20ff0 <__assert_fail@plt+0xfe98>
   1accc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1acd0:	subs	r6, r2, #1
   1acd4:	sbc	r7, r3, #0
   1acd8:	strd	r6, [fp, #-36]	; 0xffffffdc
   1acdc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ace0:	orrs	r3, r2, r3
   1ace4:	bne	1abec <__assert_fail@plt+0x9a94>
   1ace8:	sub	r2, fp, #64	; 0x40
   1acec:	sub	r3, fp, #76	; 0x4c
   1acf0:	mov	r1, r2
   1acf4:	mov	r0, r3
   1acf8:	bl	20ff0 <__assert_fail@plt+0xfe98>
   1acfc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ad00:	strd	r2, [fp, #-36]	; 0xffffffdc
   1ad04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ad08:	adds	r8, r2, r2
   1ad0c:	adc	r9, r3, r3
   1ad10:	strd	r8, [fp, #-44]	; 0xffffffd4
   1ad14:	mov	r2, #0
   1ad18:	mov	r3, #0
   1ad1c:	strd	r2, [fp, #-52]	; 0xffffffcc
   1ad20:	b	1ad7c <__assert_fail@plt+0x9c24>
   1ad24:	sub	r2, fp, #64	; 0x40
   1ad28:	sub	r1, fp, #64	; 0x40
   1ad2c:	sub	r3, fp, #112	; 0x70
   1ad30:	mov	r0, r3
   1ad34:	bl	22970 <__assert_fail@plt+0x11818>
   1ad38:	sub	r1, fp, #112	; 0x70
   1ad3c:	sub	r3, fp, #64	; 0x40
   1ad40:	ldr	r2, [fp, #-128]	; 0xffffff80
   1ad44:	mov	r0, r3
   1ad48:	bl	23550 <__assert_fail@plt+0x123f8>
   1ad4c:	sub	r1, fp, #64	; 0x40
   1ad50:	sub	r3, fp, #64	; 0x40
   1ad54:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1ad58:	mov	r0, r3
   1ad5c:	bl	22364 <__assert_fail@plt+0x1120c>
   1ad60:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1ad64:	adds	r1, r2, #1
   1ad68:	str	r1, [fp, #-148]	; 0xffffff6c
   1ad6c:	adc	r3, r3, #0
   1ad70:	str	r3, [fp, #-144]	; 0xffffff70
   1ad74:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1ad78:	strd	r2, [fp, #-52]	; 0xffffffcc
   1ad7c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1ad80:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ad84:	cmp	r1, r3
   1ad88:	cmpeq	r0, r2
   1ad8c:	bcc	1ad24 <__assert_fail@plt+0x9bcc>
   1ad90:	sub	r2, fp, #64	; 0x40
   1ad94:	sub	r3, fp, #88	; 0x58
   1ad98:	mov	r1, r2
   1ad9c:	mov	r0, r3
   1ada0:	bl	20ff0 <__assert_fail@plt+0xfe98>
   1ada4:	b	1abec <__assert_fail@plt+0x9a94>
   1ada8:	nop	{0}
   1adac:	sub	r2, fp, #88	; 0x58
   1adb0:	sub	r1, fp, #88	; 0x58
   1adb4:	sub	r3, fp, #112	; 0x70
   1adb8:	mov	r0, r3
   1adbc:	bl	22970 <__assert_fail@plt+0x11818>
   1adc0:	sub	r1, fp, #112	; 0x70
   1adc4:	sub	r3, fp, #88	; 0x58
   1adc8:	ldr	r2, [fp, #-128]	; 0xffffff80
   1adcc:	mov	r0, r3
   1add0:	bl	23550 <__assert_fail@plt+0x123f8>
   1add4:	sub	r1, fp, #88	; 0x58
   1add8:	sub	r3, fp, #88	; 0x58
   1addc:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1ade0:	mov	r0, r3
   1ade4:	bl	22364 <__assert_fail@plt+0x1120c>
   1ade8:	sub	r2, fp, #88	; 0x58
   1adec:	sub	r1, fp, #76	; 0x4c
   1adf0:	sub	r3, fp, #112	; 0x70
   1adf4:	mov	r0, r3
   1adf8:	bl	227f8 <__assert_fail@plt+0x116a0>
   1adfc:	sub	r1, fp, #112	; 0x70
   1ae00:	sub	r3, fp, #112	; 0x70
   1ae04:	ldr	r2, [fp, #-128]	; 0xffffff80
   1ae08:	mov	r0, r3
   1ae0c:	bl	24744 <__assert_fail@plt+0x135ec>
   1ae10:	sub	r3, fp, #112	; 0x70
   1ae14:	mov	r1, #1
   1ae18:	mov	r0, r3
   1ae1c:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   1ae20:	mov	r3, r0
   1ae24:	cmp	r3, #0
   1ae28:	beq	1ada8 <__assert_fail@plt+0x9c50>
   1ae2c:	sub	r3, fp, #112	; 0x70
   1ae30:	mov	r2, r3
   1ae34:	ldr	r1, [fp, #-128]	; 0xffffff80
   1ae38:	ldr	r0, [fp, #-128]	; 0xffffff80
   1ae3c:	bl	23ccc <__assert_fail@plt+0x12b74>
   1ae40:	sub	r3, fp, #112	; 0x70
   1ae44:	mov	r0, r3
   1ae48:	bl	18100 <__assert_fail@plt+0x6fa8>
   1ae4c:	mov	r3, r0
   1ae50:	eor	r3, r3, #1
   1ae54:	uxtb	r3, r3
   1ae58:	cmp	r3, #0
   1ae5c:	beq	1aeb0 <__assert_fail@plt+0x9d58>
   1ae60:	movw	r3, #29076	; 0x7194
   1ae64:	movt	r3, #4
   1ae68:	ldrb	r3, [r3]
   1ae6c:	cmp	r3, #0
   1ae70:	beq	1ae94 <__assert_fail@plt+0x9d3c>
   1ae74:	movw	r3, #29056	; 0x7180
   1ae78:	movt	r3, #4
   1ae7c:	ldr	r3, [r3]
   1ae80:	mov	r2, #43	; 0x2b
   1ae84:	mov	r1, #1
   1ae88:	movw	r0, #21568	; 0x5440
   1ae8c:	movt	r0, #3
   1ae90:	bl	10f84 <fwrite@plt>
   1ae94:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1ae98:	add	r1, r3, #1
   1ae9c:	sub	r3, fp, #112	; 0x70
   1aea0:	ldr	r2, [fp, #-136]	; 0xffffff78
   1aea4:	mov	r0, r3
   1aea8:	bl	1ab1c <__assert_fail@plt+0x99c4>
   1aeac:	b	1aec0 <__assert_fail@plt+0x9d68>
   1aeb0:	sub	r3, fp, #112	; 0x70
   1aeb4:	mov	r1, r3
   1aeb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1aebc:	bl	12198 <__assert_fail@plt+0x1040>
   1aec0:	ldr	r0, [fp, #-128]	; 0xffffff80
   1aec4:	bl	18100 <__assert_fail@plt+0x6fa8>
   1aec8:	mov	r3, r0
   1aecc:	cmp	r3, #0
   1aed0:	beq	1aee4 <__assert_fail@plt+0x9d8c>
   1aed4:	ldr	r1, [fp, #-128]	; 0xffffff80
   1aed8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1aedc:	bl	12198 <__assert_fail@plt+0x1040>
   1aee0:	b	1af38 <__assert_fail@plt+0x9de0>
   1aee4:	sub	r1, fp, #64	; 0x40
   1aee8:	sub	r3, fp, #64	; 0x40
   1aeec:	ldr	r2, [fp, #-128]	; 0xffffff80
   1aef0:	mov	r0, r3
   1aef4:	bl	23550 <__assert_fail@plt+0x123f8>
   1aef8:	sub	r1, fp, #76	; 0x4c
   1aefc:	sub	r3, fp, #76	; 0x4c
   1af00:	ldr	r2, [fp, #-128]	; 0xffffff80
   1af04:	mov	r0, r3
   1af08:	bl	23550 <__assert_fail@plt+0x123f8>
   1af0c:	sub	r1, fp, #88	; 0x58
   1af10:	sub	r3, fp, #88	; 0x58
   1af14:	ldr	r2, [fp, #-128]	; 0xffffff80
   1af18:	mov	r0, r3
   1af1c:	bl	23550 <__assert_fail@plt+0x123f8>
   1af20:	mov	r1, #1
   1af24:	ldr	r0, [fp, #-128]	; 0xffffff80
   1af28:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   1af2c:	mov	r3, r0
   1af30:	cmp	r3, #0
   1af34:	bne	1abec <__assert_fail@plt+0x9a94>
   1af38:	sub	r0, fp, #112	; 0x70
   1af3c:	sub	r2, fp, #124	; 0x7c
   1af40:	sub	r1, fp, #100	; 0x64
   1af44:	mov	r3, #0
   1af48:	str	r3, [sp, #12]
   1af4c:	sub	r3, fp, #88	; 0x58
   1af50:	str	r3, [sp, #8]
   1af54:	sub	r3, fp, #64	; 0x40
   1af58:	str	r3, [sp, #4]
   1af5c:	sub	r3, fp, #76	; 0x4c
   1af60:	str	r3, [sp]
   1af64:	mov	r3, r0
   1af68:	movw	r0, #3504	; 0xdb0
   1af6c:	movt	r0, #2
   1af70:	bl	12050 <__assert_fail@plt+0xef8>
   1af74:	nop	{0}
   1af78:	sub	sp, fp, #28
   1af7c:	ldrd	r4, [sp]
   1af80:	ldrd	r6, [sp, #8]
   1af84:	ldrd	r8, [sp, #16]
   1af88:	ldr	fp, [sp, #24]
   1af8c:	add	sp, sp, #28
   1af90:	pop	{pc}		; (ldr pc, [sp], #4)
   1af94:	str	fp, [sp, #-8]!
   1af98:	str	lr, [sp, #4]
   1af9c:	add	fp, sp, #4
   1afa0:	sub	sp, sp, #32
   1afa4:	strd	r0, [fp, #-12]
   1afa8:	strd	r2, [fp, #-20]	; 0xffffffec
   1afac:	ldr	r3, [fp, #4]
   1afb0:	mov	r2, #0
   1afb4:	strb	r2, [r3, #250]	; 0xfa
   1afb8:	ldr	r1, [fp, #4]
   1afbc:	mov	r2, #0
   1afc0:	mov	r3, #0
   1afc4:	strd	r2, [r1, #8]
   1afc8:	ldrd	r2, [fp, #-12]
   1afcc:	orrs	r3, r2, r3
   1afd0:	bne	1afe4 <__assert_fail@plt+0x9e8c>
   1afd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1afd8:	cmp	r3, #0
   1afdc:	cmpeq	r2, #1
   1afe0:	bls	1b0a4 <__assert_fail@plt+0x9f4c>
   1afe4:	ldrd	r0, [fp, #-12]
   1afe8:	sub	ip, fp, #12
   1afec:	ldr	r3, [fp, #4]
   1aff0:	str	r3, [sp, #8]
   1aff4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1aff8:	strd	r2, [sp]
   1affc:	mov	r2, r0
   1b000:	mov	r3, r1
   1b004:	mov	r0, ip
   1b008:	bl	12540 <__assert_fail@plt+0x13e8>
   1b00c:	strd	r0, [fp, #-20]	; 0xffffffec
   1b010:	ldrd	r2, [fp, #-12]
   1b014:	orrs	r3, r2, r3
   1b018:	bne	1b02c <__assert_fail@plt+0x9ed4>
   1b01c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1b020:	cmp	r3, #0
   1b024:	cmpeq	r2, #1
   1b028:	bls	1b0ac <__assert_fail@plt+0x9f54>
   1b02c:	ldrd	r0, [fp, #-12]
   1b030:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1b034:	bl	16a0c <__assert_fail@plt+0x58b4>
   1b038:	mov	r3, r0
   1b03c:	cmp	r3, #0
   1b040:	beq	1b064 <__assert_fail@plt+0x9f0c>
   1b044:	ldrd	r0, [fp, #-12]
   1b048:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1b04c:	strd	r2, [sp]
   1b050:	mov	r2, r0
   1b054:	mov	r3, r1
   1b058:	ldr	r0, [fp, #4]
   1b05c:	bl	11fb8 <__assert_fail@plt+0xe60>
   1b060:	b	1b0b0 <__assert_fail@plt+0x9f58>
   1b064:	ldrd	r2, [fp, #-12]
   1b068:	orrs	r3, r2, r3
   1b06c:	bne	1b084 <__assert_fail@plt+0x9f2c>
   1b070:	ldr	r3, [fp, #4]
   1b074:	mov	r2, #1
   1b078:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1b07c:	bl	18454 <__assert_fail@plt+0x72fc>
   1b080:	b	1b0b0 <__assert_fail@plt+0x9f58>
   1b084:	ldrd	r0, [fp, #-12]
   1b088:	ldr	r3, [fp, #4]
   1b08c:	str	r3, [sp, #4]
   1b090:	mov	r3, #1
   1b094:	str	r3, [sp]
   1b098:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1b09c:	bl	18fb0 <__assert_fail@plt+0x7e58>
   1b0a0:	b	1b0b0 <__assert_fail@plt+0x9f58>
   1b0a4:	nop	{0}
   1b0a8:	b	1b0b0 <__assert_fail@plt+0x9f58>
   1b0ac:	nop	{0}
   1b0b0:	sub	sp, fp, #4
   1b0b4:	ldr	fp, [sp]
   1b0b8:	add	sp, sp, #4
   1b0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0c0:	str	fp, [sp, #-8]!
   1b0c4:	str	lr, [sp, #4]
   1b0c8:	add	fp, sp, #4
   1b0cc:	sub	sp, sp, #8
   1b0d0:	str	r0, [fp, #-8]
   1b0d4:	str	r1, [fp, #-12]
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	bl	120b8 <__assert_fail@plt+0xf60>
   1b0e0:	ldr	r0, [fp, #-8]
   1b0e4:	bl	21f1c <__assert_fail@plt+0x10dc4>
   1b0e8:	mov	r3, r0
   1b0ec:	cmp	r3, #0
   1b0f0:	beq	1b180 <__assert_fail@plt+0xa028>
   1b0f4:	ldr	r1, [fp, #-12]
   1b0f8:	ldr	r0, [fp, #-8]
   1b0fc:	bl	13100 <__assert_fail@plt+0x1fa8>
   1b100:	mov	r1, #1
   1b104:	ldr	r0, [fp, #-8]
   1b108:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   1b10c:	mov	r3, r0
   1b110:	cmp	r3, #0
   1b114:	beq	1b180 <__assert_fail@plt+0xa028>
   1b118:	movw	r3, #29076	; 0x7194
   1b11c:	movt	r3, #4
   1b120:	ldrb	r3, [r3]
   1b124:	cmp	r3, #0
   1b128:	beq	1b14c <__assert_fail@plt+0x9ff4>
   1b12c:	movw	r3, #29056	; 0x7180
   1b130:	movt	r3, #4
   1b134:	ldr	r3, [r3]
   1b138:	mov	r2, #19
   1b13c:	mov	r1, #1
   1b140:	movw	r0, #21612	; 0x546c
   1b144:	movt	r0, #3
   1b148:	bl	10f84 <fwrite@plt>
   1b14c:	ldr	r0, [fp, #-8]
   1b150:	bl	18100 <__assert_fail@plt+0x6fa8>
   1b154:	mov	r3, r0
   1b158:	cmp	r3, #0
   1b15c:	beq	1b170 <__assert_fail@plt+0xa018>
   1b160:	ldr	r1, [fp, #-8]
   1b164:	ldr	r0, [fp, #-12]
   1b168:	bl	12198 <__assert_fail@plt+0x1040>
   1b16c:	b	1b180 <__assert_fail@plt+0xa028>
   1b170:	ldr	r2, [fp, #-12]
   1b174:	mov	r1, #1
   1b178:	ldr	r0, [fp, #-8]
   1b17c:	bl	1ab1c <__assert_fail@plt+0x99c4>
   1b180:	nop	{0}
   1b184:	sub	sp, fp, #4
   1b188:	ldr	fp, [sp]
   1b18c:	add	sp, sp, #4
   1b190:	pop	{pc}		; (ldr pc, [sp], #4)
   1b194:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1b198:	strd	r6, [sp, #8]
   1b19c:	strd	r8, [sp, #16]
   1b1a0:	str	fp, [sp, #24]
   1b1a4:	add	fp, sp, #24
   1b1a8:	sub	sp, sp, #92	; 0x5c
   1b1ac:	str	r0, [fp, #-72]	; 0xffffffb8
   1b1b0:	str	r1, [fp, #-76]	; 0xffffffb4
   1b1b4:	str	r2, [fp, #-80]	; 0xffffffb0
   1b1b8:	mov	r2, #0
   1b1bc:	mov	r3, #0
   1b1c0:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b1c4:	mov	r2, #0
   1b1c8:	mov	r3, #0
   1b1cc:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b1d0:	mov	r3, #4
   1b1d4:	str	r3, [fp, #-48]	; 0xffffffd0
   1b1d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b1dc:	str	r3, [fp, #-52]	; 0xffffffcc
   1b1e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b1e4:	add	r2, r3, #1
   1b1e8:	str	r2, [fp, #-52]	; 0xffffffcc
   1b1ec:	ldrb	r3, [r3]
   1b1f0:	str	r3, [fp, #-56]	; 0xffffffc8
   1b1f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b1f8:	cmp	r3, #0
   1b1fc:	beq	1b238 <__assert_fail@plt+0xa0e0>
   1b200:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b204:	sub	r3, r3, #48	; 0x30
   1b208:	cmp	r3, #9
   1b20c:	movhi	r3, #1
   1b210:	movls	r3, #0
   1b214:	uxtb	r3, r3
   1b218:	cmp	r3, #0
   1b21c:	beq	1b22c <__assert_fail@plt+0xa0d4>
   1b220:	mov	r3, #4
   1b224:	str	r3, [fp, #-48]	; 0xffffffd0
   1b228:	b	1b23c <__assert_fail@plt+0xa0e4>
   1b22c:	mov	r3, #0
   1b230:	str	r3, [fp, #-48]	; 0xffffffd0
   1b234:	b	1b1e0 <__assert_fail@plt+0xa088>
   1b238:	nop	{0}
   1b23c:	b	1b494 <__assert_fail@plt+0xa33c>
   1b240:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b244:	add	r2, r3, #1
   1b248:	str	r2, [fp, #-80]	; 0xffffffb0
   1b24c:	ldrb	r3, [r3]
   1b250:	str	r3, [fp, #-60]	; 0xffffffc4
   1b254:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b258:	cmp	r3, #0
   1b25c:	beq	1b4a4 <__assert_fail@plt+0xa34c>
   1b260:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b264:	sub	r3, r3, #48	; 0x30
   1b268:	str	r3, [fp, #-60]	; 0xffffffc4
   1b26c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1b270:	add	r3, pc, #624	; 0x270
   1b274:	ldrd	r2, [r3]
   1b278:	cmp	r1, r3
   1b27c:	cmpeq	r0, r2
   1b280:	movhi	r3, #1
   1b284:	movls	r3, #0
   1b288:	uxtb	r3, r3
   1b28c:	cmp	r3, #0
   1b290:	beq	1b2a0 <__assert_fail@plt+0xa148>
   1b294:	mov	r3, #1
   1b298:	str	r3, [fp, #-48]	; 0xffffffd0
   1b29c:	b	1b4a8 <__assert_fail@plt+0xa350>
   1b2a0:	ldrd	r4, [fp, #-36]	; 0xffffffdc
   1b2a4:	mov	r2, r4
   1b2a8:	mov	r3, r5
   1b2ac:	mov	r0, #0
   1b2b0:	mov	r1, #0
   1b2b4:	lsl	r1, r3, #2
   1b2b8:	orr	r1, r1, r2, lsr #30
   1b2bc:	lsl	r0, r2, #2
   1b2c0:	mov	r2, r0
   1b2c4:	mov	r3, r1
   1b2c8:	adds	r2, r2, r4
   1b2cc:	adc	r3, r3, r5
   1b2d0:	adds	r1, r2, r2
   1b2d4:	str	r1, [fp, #-92]	; 0xffffffa4
   1b2d8:	adc	r3, r3, r3
   1b2dc:	str	r3, [fp, #-88]	; 0xffffffa8
   1b2e0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1b2e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b2e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b2ec:	mov	r0, #0
   1b2f0:	mov	r1, #0
   1b2f4:	lsr	r0, r3, #29
   1b2f8:	mov	r1, #0
   1b2fc:	mov	ip, r0
   1b300:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b304:	mov	r0, #0
   1b308:	mov	r1, #0
   1b30c:	lsr	r0, r3, #31
   1b310:	mov	r1, #0
   1b314:	mov	r3, r0
   1b318:	add	r3, ip, r3
   1b31c:	str	r3, [fp, #-64]	; 0xffffffc0
   1b320:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   1b324:	mov	r2, r4
   1b328:	mov	r3, r5
   1b32c:	mov	r0, #0
   1b330:	mov	r1, #0
   1b334:	lsl	r1, r3, #2
   1b338:	orr	r1, r1, r2, lsr #30
   1b33c:	lsl	r0, r2, #2
   1b340:	mov	r2, r0
   1b344:	mov	r3, r1
   1b348:	adds	r2, r2, r4
   1b34c:	adc	r3, r3, r5
   1b350:	adds	r1, r2, r2
   1b354:	str	r1, [fp, #-100]	; 0xffffff9c
   1b358:	adc	r3, r3, r3
   1b35c:	str	r3, [fp, #-96]	; 0xffffffa0
   1b360:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1b364:	mov	r0, r2
   1b368:	mov	r1, r3
   1b36c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b370:	adds	ip, r2, r2
   1b374:	str	ip, [fp, #-108]	; 0xffffff94
   1b378:	adc	r3, r3, r3
   1b37c:	str	r3, [fp, #-104]	; 0xffffff98
   1b380:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1b384:	cmp	r1, r3
   1b388:	cmpeq	r0, r2
   1b38c:	movcc	r3, #1
   1b390:	movcs	r3, #0
   1b394:	uxtb	r3, r3
   1b398:	mov	r2, r3
   1b39c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b3a0:	add	r3, r3, r2
   1b3a4:	str	r3, [fp, #-64]	; 0xffffffc0
   1b3a8:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   1b3ac:	mov	r2, r4
   1b3b0:	mov	r3, r5
   1b3b4:	mov	r0, #0
   1b3b8:	mov	r1, #0
   1b3bc:	lsl	r1, r3, #2
   1b3c0:	orr	r1, r1, r2, lsr #30
   1b3c4:	lsl	r0, r2, #2
   1b3c8:	mov	r2, r0
   1b3cc:	mov	r3, r1
   1b3d0:	adds	r2, r2, r4
   1b3d4:	adc	r3, r3, r5
   1b3d8:	adds	r1, r2, r2
   1b3dc:	str	r1, [fp, #-116]	; 0xffffff8c
   1b3e0:	adc	r3, r3, r3
   1b3e4:	str	r3, [fp, #-112]	; 0xffffff90
   1b3e8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1b3ec:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b3f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b3f4:	mov	r0, r3
   1b3f8:	mov	r1, #0
   1b3fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b400:	adds	r6, r2, r0
   1b404:	adc	r7, r3, r1
   1b408:	strd	r6, [fp, #-44]	; 0xffffffd4
   1b40c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b410:	mov	r0, r3
   1b414:	mov	r1, #0
   1b418:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b41c:	cmp	r3, r1
   1b420:	cmpeq	r2, r0
   1b424:	movcc	r3, #1
   1b428:	movcs	r3, #0
   1b42c:	uxtb	r3, r3
   1b430:	mov	r2, r3
   1b434:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b438:	add	r3, r3, r2
   1b43c:	str	r3, [fp, #-64]	; 0xffffffc0
   1b440:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b444:	mov	r0, r3
   1b448:	mov	r1, #0
   1b44c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b450:	adds	r8, r2, r0
   1b454:	adc	r9, r3, r1
   1b458:	strd	r8, [fp, #-36]	; 0xffffffdc
   1b45c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b460:	mov	r0, r3
   1b464:	mov	r1, #0
   1b468:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b46c:	cmp	r3, r1
   1b470:	cmpeq	r2, r0
   1b474:	movcc	r3, #1
   1b478:	movcs	r3, #0
   1b47c:	uxtb	r3, r3
   1b480:	cmp	r3, #0
   1b484:	beq	1b494 <__assert_fail@plt+0xa33c>
   1b488:	mov	r3, #1
   1b48c:	str	r3, [fp, #-48]	; 0xffffffd0
   1b490:	b	1b4a8 <__assert_fail@plt+0xa350>
   1b494:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b498:	cmp	r3, #0
   1b49c:	beq	1b240 <__assert_fail@plt+0xa0e8>
   1b4a0:	b	1b4a8 <__assert_fail@plt+0xa350>
   1b4a4:	nop	{0}
   1b4a8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1b4ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b4b0:	strd	r2, [r1]
   1b4b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b4b8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b4bc:	strd	r2, [r1]
   1b4c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b4c4:	mov	r0, r3
   1b4c8:	sub	sp, fp, #24
   1b4cc:	ldrd	r4, [sp]
   1b4d0:	ldrd	r6, [sp, #8]
   1b4d4:	ldrd	r8, [sp, #16]
   1b4d8:	ldr	fp, [sp, #24]
   1b4dc:	add	sp, sp, #28
   1b4e0:	bx	lr
   1b4e4:	nop	{0}
   1b4e8:	ldmibls	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   1b4ec:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   1b4f0:	str	fp, [sp, #-8]!
   1b4f4:	str	lr, [sp, #4]
   1b4f8:	add	fp, sp, #4
   1b4fc:	movw	r3, #29080	; 0x7198
   1b500:	movt	r3, #4
   1b504:	ldr	r3, [r3]
   1b508:	cmp	r3, #0
   1b50c:	bne	1b548 <__assert_fail@plt+0xa3f0>
   1b510:	mov	r0, #1024	; 0x400
   1b514:	bl	2de60 <__assert_fail@plt+0x1cd08>
   1b518:	mov	r3, r0
   1b51c:	mov	r2, r3
   1b520:	movw	r3, #29080	; 0x7198
   1b524:	movt	r3, #4
   1b528:	str	r2, [r3]
   1b52c:	movw	r3, #29080	; 0x7198
   1b530:	movt	r3, #4
   1b534:	ldr	r2, [r3]
   1b538:	movw	r3, #29080	; 0x7198
   1b53c:	movt	r3, #4
   1b540:	str	r2, [r3, #4]
   1b544:	b	1b54c <__assert_fail@plt+0xa3f4>
   1b548:	nop	{0}
   1b54c:	sub	sp, fp, #4
   1b550:	ldr	fp, [sp]
   1b554:	add	sp, sp, #4
   1b558:	pop	{pc}		; (ldr pc, [sp], #4)
   1b55c:	str	r4, [sp, #-12]!
   1b560:	str	fp, [sp, #4]
   1b564:	str	lr, [sp, #8]
   1b568:	add	fp, sp, #8
   1b56c:	sub	sp, sp, #12
   1b570:	movw	r3, #29080	; 0x7198
   1b574:	movt	r3, #4
   1b578:	ldr	r2, [r3, #4]
   1b57c:	movw	r3, #29080	; 0x7198
   1b580:	movt	r3, #4
   1b584:	ldr	r3, [r3]
   1b588:	sub	r3, r2, r3
   1b58c:	str	r3, [fp, #-16]
   1b590:	movw	r3, #29080	; 0x7198
   1b594:	movt	r3, #4
   1b598:	ldr	r3, [r3]
   1b59c:	ldr	r2, [fp, #-16]
   1b5a0:	mov	r1, r3
   1b5a4:	mov	r0, #1
   1b5a8:	bl	1c588 <__assert_fail@plt+0xb430>
   1b5ac:	mov	r2, r0
   1b5b0:	ldr	r3, [fp, #-16]
   1b5b4:	cmp	r3, r2
   1b5b8:	beq	1b5ec <__assert_fail@plt+0xa494>
   1b5bc:	bl	11074 <__errno_location@plt>
   1b5c0:	mov	r3, r0
   1b5c4:	ldr	r4, [r3]
   1b5c8:	movw	r0, #21632	; 0x5480
   1b5cc:	movt	r0, #3
   1b5d0:	bl	11044 <gettext@plt>
   1b5d4:	mov	r3, r0
   1b5d8:	movw	r2, #21644	; 0x548c
   1b5dc:	movt	r2, #3
   1b5e0:	mov	r1, r4
   1b5e4:	mov	r0, #1
   1b5e8:	bl	10fcc <error@plt>
   1b5ec:	movw	r3, #29080	; 0x7198
   1b5f0:	movt	r3, #4
   1b5f4:	ldr	r2, [r3]
   1b5f8:	movw	r3, #29080	; 0x7198
   1b5fc:	movt	r3, #4
   1b600:	str	r2, [r3, #4]
   1b604:	nop	{0}
   1b608:	sub	sp, fp, #8
   1b60c:	ldr	r4, [sp]
   1b610:	ldr	fp, [sp, #4]
   1b614:	add	sp, sp, #8
   1b618:	pop	{pc}		; (ldr pc, [sp], #4)
   1b61c:	str	fp, [sp, #-8]!
   1b620:	str	lr, [sp, #4]
   1b624:	add	fp, sp, #4
   1b628:	sub	sp, sp, #24
   1b62c:	mov	r3, r0
   1b630:	strb	r3, [fp, #-21]	; 0xffffffeb
   1b634:	movw	r3, #29080	; 0x7198
   1b638:	movt	r3, #4
   1b63c:	ldr	r2, [r3, #4]
   1b640:	add	r1, r2, #1
   1b644:	movw	r3, #29080	; 0x7198
   1b648:	movt	r3, #4
   1b64c:	str	r1, [r3, #4]
   1b650:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1b654:	strb	r3, [r2]
   1b658:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1b65c:	cmp	r3, #10
   1b660:	bne	1b7ac <__assert_fail@plt+0xa654>
   1b664:	movw	r3, #29080	; 0x7198
   1b668:	movt	r3, #4
   1b66c:	ldr	r2, [r3, #4]
   1b670:	movw	r3, #29080	; 0x7198
   1b674:	movt	r3, #4
   1b678:	ldr	r3, [r3]
   1b67c:	sub	r3, r2, r3
   1b680:	str	r3, [fp, #-12]
   1b684:	movw	r3, #28952	; 0x7118
   1b688:	movt	r3, #4
   1b68c:	ldr	r3, [r3]
   1b690:	cmn	r3, #1
   1b694:	bne	1b6d8 <__assert_fail@plt+0xa580>
   1b698:	mov	r0, #0
   1b69c:	bl	11128 <isatty@plt>
   1b6a0:	mov	r3, r0
   1b6a4:	cmp	r3, #0
   1b6a8:	bne	1b6c0 <__assert_fail@plt+0xa568>
   1b6ac:	mov	r0, #1
   1b6b0:	bl	11128 <isatty@plt>
   1b6b4:	mov	r3, r0
   1b6b8:	cmp	r3, #0
   1b6bc:	beq	1b6c8 <__assert_fail@plt+0xa570>
   1b6c0:	mov	r2, #1
   1b6c4:	b	1b6cc <__assert_fail@plt+0xa574>
   1b6c8:	mov	r2, #0
   1b6cc:	movw	r3, #28952	; 0x7118
   1b6d0:	movt	r3, #4
   1b6d4:	str	r2, [r3]
   1b6d8:	movw	r3, #28952	; 0x7118
   1b6dc:	movt	r3, #4
   1b6e0:	ldr	r3, [r3]
   1b6e4:	cmp	r3, #0
   1b6e8:	beq	1b6f4 <__assert_fail@plt+0xa59c>
   1b6ec:	bl	1b55c <__assert_fail@plt+0xa404>
   1b6f0:	b	1b7ac <__assert_fail@plt+0xa654>
   1b6f4:	ldr	r3, [fp, #-12]
   1b6f8:	cmp	r3, #512	; 0x200
   1b6fc:	bcc	1b7ac <__assert_fail@plt+0xa654>
   1b700:	movw	r3, #29080	; 0x7198
   1b704:	movt	r3, #4
   1b708:	ldr	r3, [r3, #4]
   1b70c:	str	r3, [fp, #-16]
   1b710:	movw	r3, #29080	; 0x7198
   1b714:	movt	r3, #4
   1b718:	ldr	r3, [r3]
   1b71c:	add	r3, r3, #512	; 0x200
   1b720:	str	r3, [fp, #-8]
   1b724:	ldr	r3, [fp, #-8]
   1b728:	sub	r3, r3, #1
   1b72c:	str	r3, [fp, #-8]
   1b730:	ldr	r3, [fp, #-8]
   1b734:	ldrb	r3, [r3]
   1b738:	cmp	r3, #10
   1b73c:	bne	1b724 <__assert_fail@plt+0xa5cc>
   1b740:	ldr	r3, [fp, #-8]
   1b744:	add	r3, r3, #1
   1b748:	str	r3, [fp, #-8]
   1b74c:	movw	r3, #29080	; 0x7198
   1b750:	movt	r3, #4
   1b754:	ldr	r2, [fp, #-8]
   1b758:	str	r2, [r3, #4]
   1b75c:	bl	1b55c <__assert_fail@plt+0xa404>
   1b760:	movw	r3, #29080	; 0x7198
   1b764:	movt	r3, #4
   1b768:	ldr	r0, [r3]
   1b76c:	ldr	r2, [fp, #-16]
   1b770:	ldr	r3, [fp, #-8]
   1b774:	sub	r3, r2, r3
   1b778:	mov	r2, r3
   1b77c:	ldr	r1, [fp, #-8]
   1b780:	bl	10f00 <memcpy@plt>
   1b784:	movw	r3, #29080	; 0x7198
   1b788:	movt	r3, #4
   1b78c:	ldr	r3, [r3]
   1b790:	ldr	r1, [fp, #-16]
   1b794:	ldr	r2, [fp, #-8]
   1b798:	sub	r2, r1, r2
   1b79c:	add	r2, r3, r2
   1b7a0:	movw	r3, #29080	; 0x7198
   1b7a4:	movt	r3, #4
   1b7a8:	str	r2, [r3, #4]
   1b7ac:	nop	{0}
   1b7b0:	sub	sp, fp, #4
   1b7b4:	ldr	fp, [sp]
   1b7b8:	add	sp, sp, #4
   1b7bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7c0:	str	fp, [sp, #-8]!
   1b7c4:	str	lr, [sp, #4]
   1b7c8:	add	fp, sp, #4
   1b7cc:	sub	sp, sp, #56	; 0x38
   1b7d0:	strd	r0, [fp, #-52]	; 0xffffffcc
   1b7d4:	str	r2, [fp, #-56]	; 0xffffffc8
   1b7d8:	sub	r3, fp, #40	; 0x28
   1b7dc:	mov	r2, r3
   1b7e0:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1b7e4:	bl	1c654 <__assert_fail@plt+0xb4fc>
   1b7e8:	str	r0, [fp, #-12]
   1b7ec:	sub	r3, fp, #40	; 0x28
   1b7f0:	ldr	r2, [fp, #-12]
   1b7f4:	sub	r3, r2, r3
   1b7f8:	rsb	r3, r3, #20
   1b7fc:	str	r3, [fp, #-16]
   1b800:	ldr	r3, [fp, #-16]
   1b804:	str	r3, [fp, #-8]
   1b808:	b	1b83c <__assert_fail@plt+0xa6e4>
   1b80c:	movw	r3, #29080	; 0x7198
   1b810:	movt	r3, #4
   1b814:	ldr	r2, [r3, #4]
   1b818:	add	r1, r2, #1
   1b81c:	movw	r3, #29080	; 0x7198
   1b820:	movt	r3, #4
   1b824:	str	r1, [r3, #4]
   1b828:	mov	r3, #48	; 0x30
   1b82c:	strb	r3, [r2]
   1b830:	ldr	r3, [fp, #-8]
   1b834:	add	r3, r3, #1
   1b838:	str	r3, [fp, #-8]
   1b83c:	ldr	r2, [fp, #-8]
   1b840:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b844:	cmp	r2, r3
   1b848:	bcc	1b80c <__assert_fail@plt+0xa6b4>
   1b84c:	movw	r3, #29080	; 0x7198
   1b850:	movt	r3, #4
   1b854:	ldr	r3, [r3, #4]
   1b858:	ldr	r2, [fp, #-16]
   1b85c:	ldr	r1, [fp, #-12]
   1b860:	mov	r0, r3
   1b864:	bl	10f00 <memcpy@plt>
   1b868:	movw	r3, #29080	; 0x7198
   1b86c:	movt	r3, #4
   1b870:	ldr	r2, [r3, #4]
   1b874:	ldr	r3, [fp, #-16]
   1b878:	add	r2, r2, r3
   1b87c:	movw	r3, #29080	; 0x7198
   1b880:	movt	r3, #4
   1b884:	str	r2, [r3, #4]
   1b888:	nop	{0}
   1b88c:	sub	sp, fp, #4
   1b890:	ldr	fp, [sp]
   1b894:	add	sp, sp, #4
   1b898:	pop	{pc}		; (ldr pc, [sp], #4)
   1b89c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b8a0:	strd	r6, [sp, #8]
   1b8a4:	strd	r8, [sp, #16]
   1b8a8:	str	fp, [sp, #24]
   1b8ac:	str	lr, [sp, #28]
   1b8b0:	add	fp, sp, #28
   1b8b4:	sub	sp, sp, #120	; 0x78
   1b8b8:	strd	r0, [fp, #-108]	; 0xffffff94
   1b8bc:	strd	r2, [fp, #-116]	; 0xffffff8c
   1b8c0:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1b8c4:	orrs	r3, r2, r3
   1b8c8:	bne	1b8dc <__assert_fail@plt+0xa784>
   1b8cc:	mov	r2, #0
   1b8d0:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1b8d4:	bl	1b7c0 <__assert_fail@plt+0xa668>
   1b8d8:	b	1bb00 <__assert_fail@plt+0xa9a8>
   1b8dc:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1b8e0:	add	r3, pc, #568	; 0x238
   1b8e4:	ldrd	r2, [r3]
   1b8e8:	bl	31f28 <__assert_fail@plt+0x20dd0>
   1b8ec:	mov	r2, r0
   1b8f0:	mov	r3, r1
   1b8f4:	strd	r2, [fp, #-84]	; 0xffffffac
   1b8f8:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1b8fc:	add	r3, pc, #540	; 0x21c
   1b900:	ldrd	r2, [r3]
   1b904:	bl	31f28 <__assert_fail@plt+0x20dd0>
   1b908:	strd	r2, [fp, #-92]	; 0xffffffa4
   1b90c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1b910:	add	r3, pc, #528	; 0x210
   1b914:	ldrd	r2, [r3]
   1b918:	cmp	r1, r3
   1b91c:	cmpeq	r0, r2
   1b920:	bls	1b944 <__assert_fail@plt+0xa7ec>
   1b924:	movw	r3, #22312	; 0x5728
   1b928:	movt	r3, #3
   1b92c:	movw	r2, #2438	; 0x986
   1b930:	movw	r1, #9004	; 0x232c
   1b934:	movt	r1, #3
   1b938:	movw	r0, #21648	; 0x5490
   1b93c:	movt	r0, #3
   1b940:	bl	11158 <__assert_fail@plt>
   1b944:	add	r3, pc, #468	; 0x1d4
   1b948:	ldrd	r2, [r3]
   1b94c:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b950:	mov	r2, #0
   1b954:	mov	r3, #0
   1b958:	strd	r2, [fp, #-44]	; 0xffffffd4
   1b95c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1b960:	strd	r2, [fp, #-60]	; 0xffffffc4
   1b964:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1b968:	strd	r2, [fp, #-68]	; 0xffffffbc
   1b96c:	mov	r2, #0
   1b970:	mov	r3, #0
   1b974:	strd	r2, [fp, #-52]	; 0xffffffcc
   1b978:	mov	r3, #64	; 0x40
   1b97c:	str	r3, [fp, #-72]	; 0xffffffb8
   1b980:	b	1bacc <__assert_fail@plt+0xa974>
   1b984:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b988:	mov	r4, #0
   1b98c:	mov	r5, #0
   1b990:	lsl	r5, r2, #31
   1b994:	mov	r4, #0
   1b998:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b99c:	mov	r0, #0
   1b9a0:	mov	r1, #0
   1b9a4:	lsr	r0, r2, #1
   1b9a8:	orr	r0, r0, r3, lsl #31
   1b9ac:	lsr	r1, r3, #1
   1b9b0:	orr	r8, r4, r0
   1b9b4:	orr	r9, r5, r1
   1b9b8:	strd	r8, [fp, #-44]	; 0xffffffd4
   1b9bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b9c0:	mov	r0, #0
   1b9c4:	mov	r1, #0
   1b9c8:	lsr	r0, r2, #1
   1b9cc:	orr	r0, r0, r3, lsl #31
   1b9d0:	lsr	r1, r3, #1
   1b9d4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b9d8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1b9dc:	adds	r1, r2, r2
   1b9e0:	str	r1, [fp, #-124]	; 0xffffff84
   1b9e4:	adc	r3, r3, r3
   1b9e8:	str	r3, [fp, #-120]	; 0xffffff88
   1b9ec:	ldrd	r2, [fp, #-124]	; 0xffffff84
   1b9f0:	strd	r2, [fp, #-52]	; 0xffffffcc
   1b9f4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1b9f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b9fc:	cmp	r1, r3
   1ba00:	cmpeq	r0, r2
   1ba04:	bhi	1ba30 <__assert_fail@plt+0xa8d8>
   1ba08:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1ba0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ba10:	cmp	r1, r3
   1ba14:	cmpeq	r0, r2
   1ba18:	bne	1bac0 <__assert_fail@plt+0xa968>
   1ba1c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1ba20:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ba24:	cmp	r1, r3
   1ba28:	cmpeq	r0, r2
   1ba2c:	bcc	1bac0 <__assert_fail@plt+0xa968>
   1ba30:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1ba34:	adds	r1, r2, #1
   1ba38:	str	r1, [fp, #-132]	; 0xffffff7c
   1ba3c:	adc	r3, r3, #0
   1ba40:	str	r3, [fp, #-128]	; 0xffffff80
   1ba44:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1ba48:	strd	r2, [fp, #-52]	; 0xffffffcc
   1ba4c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1ba50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ba54:	cmp	r1, r3
   1ba58:	cmpeq	r0, r2
   1ba5c:	movcc	r3, #1
   1ba60:	movcs	r3, #0
   1ba64:	uxtb	r3, r3
   1ba68:	uxtb	r2, r3
   1ba6c:	mov	r3, #0
   1ba70:	strd	r2, [fp, #-100]	; 0xffffff9c
   1ba74:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1ba78:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ba7c:	subs	ip, r0, r2
   1ba80:	str	ip, [fp, #-140]	; 0xffffff74
   1ba84:	sbc	r3, r1, r3
   1ba88:	str	r3, [fp, #-136]	; 0xffffff78
   1ba8c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   1ba90:	strd	r2, [fp, #-68]	; 0xffffffbc
   1ba94:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1ba98:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1ba9c:	subs	r6, r0, r2
   1baa0:	sbc	r7, r1, r3
   1baa4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1baa8:	subs	r1, r6, r2
   1baac:	str	r1, [fp, #-148]	; 0xffffff6c
   1bab0:	sbc	r3, r7, r3
   1bab4:	str	r3, [fp, #-144]	; 0xffffff70
   1bab8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1babc:	strd	r2, [fp, #-60]	; 0xffffffc4
   1bac0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bac4:	sub	r3, r3, #1
   1bac8:	str	r3, [fp, #-72]	; 0xffffffb8
   1bacc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bad0:	cmp	r3, #0
   1bad4:	bne	1b984 <__assert_fail@plt+0xa82c>
   1bad8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1badc:	strd	r2, [fp, #-92]	; 0xffffffa4
   1bae0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1bae4:	strd	r2, [fp, #-116]	; 0xffffff8c
   1bae8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1baec:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1baf0:	bl	1b89c <__assert_fail@plt+0xa744>
   1baf4:	mov	r2, #9
   1baf8:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1bafc:	bl	1b7c0 <__assert_fail@plt+0xa668>
   1bb00:	nop	{0}
   1bb04:	sub	sp, fp, #28
   1bb08:	ldrd	r4, [sp]
   1bb0c:	ldrd	r6, [sp, #8]
   1bb10:	ldrd	r8, [sp, #16]
   1bb14:	ldr	fp, [sp, #24]
   1bb18:	add	sp, sp, #28
   1bb1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb20:	blcc	fe6ce328 <stdout@@GLIBC_2.4+0xfe68719c>
   1bb24:	andeq	r0, r0, r0
   1bb28:	blcc	fe6ce32c <stdout@@GLIBC_2.4+0xfe6871a0>
   1bb2c:	andeq	r0, r0, r0
   1bb30:	str	fp, [sp, #-8]!
   1bb34:	str	lr, [sp, #4]
   1bb38:	add	fp, sp, #4
   1bb3c:	sub	sp, sp, #288	; 0x120
   1bb40:	sub	ip, fp, #276	; 0x114
   1bb44:	strd	r0, [ip]
   1bb48:	sub	r1, fp, #276	; 0x114
   1bb4c:	strd	r2, [r1, #-8]
   1bb50:	sub	r3, fp, #276	; 0x114
   1bb54:	sub	r2, fp, #276	; 0x114
   1bb58:	mov	r1, r2
   1bb5c:	ldrd	r2, [r3, #-8]
   1bb60:	ldrd	r0, [r1]
   1bb64:	bl	1b89c <__assert_fail@plt+0xa744>
   1bb68:	mov	r0, #58	; 0x3a
   1bb6c:	bl	1b61c <__assert_fail@plt+0xa4c4>
   1bb70:	sub	r3, fp, #276	; 0x114
   1bb74:	mov	r2, r3
   1bb78:	sub	r3, fp, #276	; 0x114
   1bb7c:	mov	r1, r3
   1bb80:	sub	r3, fp, #268	; 0x10c
   1bb84:	str	r3, [sp]
   1bb88:	ldrd	r2, [r2, #-8]
   1bb8c:	ldrd	r0, [r1]
   1bb90:	bl	1af94 <__assert_fail@plt+0x9e3c>
   1bb94:	mov	r3, #0
   1bb98:	str	r3, [fp, #-8]
   1bb9c:	b	1bc18 <__assert_fail@plt+0xaac0>
   1bba0:	mov	r3, #0
   1bba4:	str	r3, [fp, #-12]
   1bba8:	b	1bbec <__assert_fail@plt+0xaa94>
   1bbac:	mov	r0, #32
   1bbb0:	bl	1b61c <__assert_fail@plt+0xa4c4>
   1bbb4:	sub	r3, fp, #260	; 0x104
   1bbb8:	mov	r2, r3
   1bbbc:	ldr	r3, [fp, #-8]
   1bbc0:	add	r3, r3, #2
   1bbc4:	lsl	r3, r3, #3
   1bbc8:	add	r3, r2, r3
   1bbcc:	sub	r3, r3, #8
   1bbd0:	ldrd	r2, [r3]
   1bbd4:	mov	r0, #0
   1bbd8:	mov	r1, #0
   1bbdc:	bl	1b89c <__assert_fail@plt+0xa744>
   1bbe0:	ldr	r3, [fp, #-12]
   1bbe4:	add	r3, r3, #1
   1bbe8:	str	r3, [fp, #-12]
   1bbec:	sub	r2, fp, #44	; 0x2c
   1bbf0:	ldr	r3, [fp, #-8]
   1bbf4:	add	r3, r2, r3
   1bbf8:	ldrb	r3, [r3]
   1bbfc:	mov	r2, r3
   1bc00:	ldr	r3, [fp, #-12]
   1bc04:	cmp	r3, r2
   1bc08:	bcc	1bbac <__assert_fail@plt+0xaa54>
   1bc0c:	ldr	r3, [fp, #-8]
   1bc10:	add	r3, r3, #1
   1bc14:	str	r3, [fp, #-8]
   1bc18:	ldrb	r3, [fp, #-18]	; 0xffffffee
   1bc1c:	mov	r2, r3
   1bc20:	ldr	r3, [fp, #-8]
   1bc24:	cmp	r3, r2
   1bc28:	bcc	1bba0 <__assert_fail@plt+0xaa48>
   1bc2c:	sub	r3, fp, #260	; 0x104
   1bc30:	ldrd	r2, [r3]
   1bc34:	orrs	r3, r2, r3
   1bc38:	beq	1bc58 <__assert_fail@plt+0xab00>
   1bc3c:	mov	r0, #32
   1bc40:	bl	1b61c <__assert_fail@plt+0xa4c4>
   1bc44:	sub	r3, fp, #260	; 0x104
   1bc48:	ldrd	r0, [r3]
   1bc4c:	sub	r3, fp, #260	; 0x104
   1bc50:	ldrd	r2, [r3, #-8]
   1bc54:	bl	1b89c <__assert_fail@plt+0xa744>
   1bc58:	mov	r0, #10
   1bc5c:	bl	1b61c <__assert_fail@plt+0xa4c4>
   1bc60:	nop	{0}
   1bc64:	sub	sp, fp, #4
   1bc68:	ldr	fp, [sp]
   1bc6c:	add	sp, sp, #4
   1bc70:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc74:	strd	r4, [sp, #-16]!
   1bc78:	str	fp, [sp, #8]
   1bc7c:	str	lr, [sp, #12]
   1bc80:	add	fp, sp, #12
   1bc84:	sub	sp, sp, #64	; 0x40
   1bc88:	str	r0, [fp, #-72]	; 0xffffffb8
   1bc8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bc90:	str	r3, [fp, #-16]
   1bc94:	b	1bca4 <__assert_fail@plt+0xab4c>
   1bc98:	ldr	r3, [fp, #-16]
   1bc9c:	add	r3, r3, #1
   1bca0:	str	r3, [fp, #-16]
   1bca4:	ldr	r3, [fp, #-16]
   1bca8:	ldrb	r3, [r3]
   1bcac:	cmp	r3, #32
   1bcb0:	beq	1bc98 <__assert_fail@plt+0xab40>
   1bcb4:	ldr	r3, [fp, #-16]
   1bcb8:	ldrb	r3, [r3]
   1bcbc:	cmp	r3, #43	; 0x2b
   1bcc0:	moveq	r3, #1
   1bcc4:	movne	r3, #0
   1bcc8:	uxtb	r3, r3
   1bccc:	mov	r2, r3
   1bcd0:	ldr	r3, [fp, #-16]
   1bcd4:	add	r3, r3, r2
   1bcd8:	str	r3, [fp, #-16]
   1bcdc:	sub	r1, fp, #44	; 0x2c
   1bce0:	sub	r3, fp, #36	; 0x24
   1bce4:	ldr	r2, [fp, #-16]
   1bce8:	mov	r0, r3
   1bcec:	bl	1b194 <__assert_fail@plt+0xa03c>
   1bcf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bcf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bcf8:	cmp	r3, #0
   1bcfc:	beq	1bd10 <__assert_fail@plt+0xabb8>
   1bd00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd04:	cmp	r3, #1
   1bd08:	beq	1bdb0 <__assert_fail@plt+0xac58>
   1bd0c:	b	1bd7c <__assert_fail@plt+0xac24>
   1bd10:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bd14:	mvn	r0, #0
   1bd18:	mvn	r1, #-2147483648	; 0x80000000
   1bd1c:	and	r4, r2, r0
   1bd20:	and	r5, r3, r1
   1bd24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1bd28:	cmp	r5, r3
   1bd2c:	cmpeq	r4, r2
   1bd30:	bne	1bdb8 <__assert_fail@plt+0xac60>
   1bd34:	movw	r3, #29076	; 0x7194
   1bd38:	movt	r3, #4
   1bd3c:	ldrb	r3, [r3]
   1bd40:	cmp	r3, #0
   1bd44:	beq	1bd68 <__assert_fail@plt+0xac10>
   1bd48:	movw	r3, #29056	; 0x7180
   1bd4c:	movt	r3, #4
   1bd50:	ldr	r3, [r3]
   1bd54:	mov	r2, #36	; 0x24
   1bd58:	mov	r1, #1
   1bd5c:	movw	r0, #21668	; 0x54a4
   1bd60:	movt	r0, #3
   1bd64:	bl	10f84 <fwrite@plt>
   1bd68:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1bd6c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1bd70:	bl	1bb30 <__assert_fail@plt+0xa9d8>
   1bd74:	mov	r3, #1
   1bd78:	b	1bf10 <__assert_fail@plt+0xadb8>
   1bd7c:	movw	r0, #21708	; 0x54cc
   1bd80:	movt	r0, #3
   1bd84:	bl	11044 <gettext@plt>
   1bd88:	mov	r4, r0
   1bd8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1bd90:	bl	2cbe4 <__assert_fail@plt+0x1ba8c>
   1bd94:	mov	r3, r0
   1bd98:	mov	r2, r4
   1bd9c:	mov	r1, #0
   1bda0:	mov	r0, #0
   1bda4:	bl	10fcc <error@plt>
   1bda8:	mov	r3, #0
   1bdac:	b	1bf10 <__assert_fail@plt+0xadb8>
   1bdb0:	nop	{0}
   1bdb4:	b	1bdbc <__assert_fail@plt+0xac64>
   1bdb8:	nop	{0}
   1bdbc:	movw	r3, #29076	; 0x7194
   1bdc0:	movt	r3, #4
   1bdc4:	ldrb	r3, [r3]
   1bdc8:	cmp	r3, #0
   1bdcc:	beq	1bdf0 <__assert_fail@plt+0xac98>
   1bdd0:	movw	r3, #29056	; 0x7180
   1bdd4:	movt	r3, #4
   1bdd8:	ldr	r3, [r3]
   1bddc:	mov	r2, #39	; 0x27
   1bde0:	mov	r1, #1
   1bde4:	movw	r0, #21744	; 0x54f0
   1bde8:	movt	r0, #3
   1bdec:	bl	10f84 <fwrite@plt>
   1bdf0:	sub	r3, fp, #56	; 0x38
   1bdf4:	mov	r2, #10
   1bdf8:	ldr	r1, [fp, #-16]
   1bdfc:	mov	r0, r3
   1be00:	bl	29140 <__assert_fail@plt+0x17fe8>
   1be04:	movw	r3, #29068	; 0x718c
   1be08:	movt	r3, #4
   1be0c:	ldr	r3, [r3]
   1be10:	sub	r2, fp, #56	; 0x38
   1be14:	mov	r1, #10
   1be18:	mov	r0, r3
   1be1c:	bl	2918c <__assert_fail@plt+0x18034>
   1be20:	mov	r0, #58	; 0x3a
   1be24:	bl	1114c <putchar_unlocked@plt>
   1be28:	sub	r2, fp, #68	; 0x44
   1be2c:	sub	r3, fp, #56	; 0x38
   1be30:	mov	r1, r2
   1be34:	mov	r0, r3
   1be38:	bl	1b0c0 <__assert_fail@plt+0x9f68>
   1be3c:	mov	r3, #0
   1be40:	str	r3, [fp, #-20]	; 0xffffffec
   1be44:	b	1bec8 <__assert_fail@plt+0xad70>
   1be48:	mov	r3, #0
   1be4c:	str	r3, [fp, #-24]	; 0xffffffe8
   1be50:	b	1be9c <__assert_fail@plt+0xad44>
   1be54:	mov	r0, #32
   1be58:	bl	1114c <putchar_unlocked@plt>
   1be5c:	movw	r3, #29068	; 0x718c
   1be60:	movt	r3, #4
   1be64:	ldr	r0, [r3]
   1be68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1be6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be70:	mov	r3, r2
   1be74:	lsl	r3, r3, #1
   1be78:	add	r3, r3, r2
   1be7c:	lsl	r3, r3, #2
   1be80:	add	r3, r1, r3
   1be84:	mov	r2, r3
   1be88:	mov	r1, #10
   1be8c:	bl	2918c <__assert_fail@plt+0x18034>
   1be90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be94:	add	r3, r3, #1
   1be98:	str	r3, [fp, #-24]	; 0xffffffe8
   1be9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bea4:	lsl	r3, r3, #2
   1bea8:	add	r3, r2, r3
   1beac:	ldr	r3, [r3]
   1beb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1beb4:	cmp	r2, r3
   1beb8:	bcc	1be54 <__assert_fail@plt+0xacfc>
   1bebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bec0:	add	r3, r3, #1
   1bec4:	str	r3, [fp, #-20]	; 0xffffffec
   1bec8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1becc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bed0:	cmp	r2, r3
   1bed4:	bcc	1be48 <__assert_fail@plt+0xacf0>
   1bed8:	sub	r3, fp, #68	; 0x44
   1bedc:	mov	r0, r3
   1bee0:	bl	120fc <__assert_fail@plt+0xfa4>
   1bee4:	sub	r3, fp, #56	; 0x38
   1bee8:	mov	r0, r3
   1beec:	bl	20db0 <__assert_fail@plt+0xfc58>
   1bef0:	mov	r0, #10
   1bef4:	bl	1114c <putchar_unlocked@plt>
   1bef8:	movw	r3, #29068	; 0x718c
   1befc:	movt	r3, #4
   1bf00:	ldr	r3, [r3]
   1bf04:	mov	r0, r3
   1bf08:	bl	10f6c <fflush_unlocked@plt>
   1bf0c:	mov	r3, #1
   1bf10:	mov	r0, r3
   1bf14:	sub	sp, fp, #12
   1bf18:	ldrd	r4, [sp]
   1bf1c:	ldr	fp, [sp, #8]
   1bf20:	add	sp, sp, #12
   1bf24:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf28:	str	r4, [sp, #-12]!
   1bf2c:	str	fp, [sp, #4]
   1bf30:	str	lr, [sp, #8]
   1bf34:	add	fp, sp, #8
   1bf38:	sub	sp, sp, #12
   1bf3c:	str	r0, [fp, #-16]
   1bf40:	ldr	r3, [fp, #-16]
   1bf44:	cmp	r3, #0
   1bf48:	beq	1bf84 <__assert_fail@plt+0xae2c>
   1bf4c:	movw	r3, #29056	; 0x7180
   1bf50:	movt	r3, #4
   1bf54:	ldr	r4, [r3]
   1bf58:	movw	r0, #21784	; 0x5518
   1bf5c:	movt	r0, #3
   1bf60:	bl	11044 <gettext@plt>
   1bf64:	mov	r1, r0
   1bf68:	movw	r3, #29096	; 0x71a8
   1bf6c:	movt	r3, #4
   1bf70:	ldr	r3, [r3]
   1bf74:	mov	r2, r3
   1bf78:	mov	r0, r4
   1bf7c:	bl	11068 <fprintf@plt>
   1bf80:	b	1c034 <__assert_fail@plt+0xaedc>
   1bf84:	movw	r0, #21824	; 0x5540
   1bf88:	movt	r0, #3
   1bf8c:	bl	11044 <gettext@plt>
   1bf90:	movw	r3, #29096	; 0x71a8
   1bf94:	movt	r3, #4
   1bf98:	ldr	r1, [r3]
   1bf9c:	movw	r3, #29096	; 0x71a8
   1bfa0:	movt	r3, #4
   1bfa4:	ldr	r3, [r3]
   1bfa8:	mov	r2, r3
   1bfac:	bl	10eb8 <printf@plt>
   1bfb0:	movw	r0, #21864	; 0x5568
   1bfb4:	movt	r0, #3
   1bfb8:	bl	11044 <gettext@plt>
   1bfbc:	mov	r2, r0
   1bfc0:	movw	r3, #29068	; 0x718c
   1bfc4:	movt	r3, #4
   1bfc8:	ldr	r3, [r3]
   1bfcc:	mov	r1, r3
   1bfd0:	mov	r0, r2
   1bfd4:	bl	10e7c <fputs_unlocked@plt>
   1bfd8:	movw	r0, #22000	; 0x55f0
   1bfdc:	movt	r0, #3
   1bfe0:	bl	11044 <gettext@plt>
   1bfe4:	mov	r2, r0
   1bfe8:	movw	r3, #29068	; 0x718c
   1bfec:	movt	r3, #4
   1bff0:	ldr	r3, [r3]
   1bff4:	mov	r1, r3
   1bff8:	mov	r0, r2
   1bffc:	bl	10e7c <fputs_unlocked@plt>
   1c000:	movw	r0, #22048	; 0x5620
   1c004:	movt	r0, #3
   1c008:	bl	11044 <gettext@plt>
   1c00c:	mov	r2, r0
   1c010:	movw	r3, #29068	; 0x718c
   1c014:	movt	r3, #4
   1c018:	ldr	r3, [r3]
   1c01c:	mov	r1, r3
   1c020:	mov	r0, r2
   1c024:	bl	10e7c <fputs_unlocked@plt>
   1c028:	movw	r0, #22104	; 0x5658
   1c02c:	movt	r0, #3
   1c030:	bl	11258 <__assert_fail@plt+0x100>
   1c034:	ldr	r0, [fp, #-16]
   1c038:	bl	1102c <exit@plt>
   1c03c:	str	fp, [sp, #-8]!
   1c040:	str	lr, [sp, #4]
   1c044:	add	fp, sp, #4
   1c048:	sub	sp, sp, #16
   1c04c:	mov	r3, #1
   1c050:	strb	r3, [fp, #-5]
   1c054:	sub	r3, fp, #20
   1c058:	mov	r0, r3
   1c05c:	bl	2cc1c <__assert_fail@plt+0x1bac4>
   1c060:	movw	r3, #29064	; 0x7188
   1c064:	movt	r3, #4
   1c068:	ldr	r0, [r3]
   1c06c:	sub	r3, fp, #20
   1c070:	mov	r2, #3
   1c074:	movw	r1, #22112	; 0x5660
   1c078:	movt	r1, #3
   1c07c:	bl	2cd18 <__assert_fail@plt+0x1bbc0>
   1c080:	str	r0, [fp, #-12]
   1c084:	ldr	r3, [fp, #-12]
   1c088:	cmn	r3, #1
   1c08c:	beq	1c0c0 <__assert_fail@plt+0xaf68>
   1c090:	ldr	r3, [fp, #-16]
   1c094:	mov	r0, r3
   1c098:	bl	1bc74 <__assert_fail@plt+0xab1c>
   1c09c:	mov	r3, r0
   1c0a0:	mov	r2, r3
   1c0a4:	ldrb	r3, [fp, #-5]
   1c0a8:	and	r3, r3, r2
   1c0ac:	cmp	r3, #0
   1c0b0:	movne	r3, #1
   1c0b4:	moveq	r3, #0
   1c0b8:	strb	r3, [fp, #-5]
   1c0bc:	b	1c060 <__assert_fail@plt+0xaf08>
   1c0c0:	nop	{0}
   1c0c4:	ldr	r3, [fp, #-16]
   1c0c8:	mov	r0, r3
   1c0cc:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   1c0d0:	ldrb	r3, [fp, #-5]
   1c0d4:	mov	r0, r3
   1c0d8:	sub	sp, fp, #4
   1c0dc:	ldr	fp, [sp]
   1c0e0:	add	sp, sp, #4
   1c0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0e8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c0ec:	str	r6, [sp, #8]
   1c0f0:	str	fp, [sp, #12]
   1c0f4:	str	lr, [sp, #16]
   1c0f8:	add	fp, sp, #16
   1c0fc:	sub	sp, sp, #44	; 0x2c
   1c100:	str	r0, [fp, #-40]	; 0xffffffd8
   1c104:	str	r1, [fp, #-44]	; 0xffffffd4
   1c108:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c10c:	ldr	r3, [r3]
   1c110:	mov	r0, r3
   1c114:	bl	299a0 <__assert_fail@plt+0x18848>
   1c118:	movw	r1, #8736	; 0x2220
   1c11c:	movt	r1, #3
   1c120:	mov	r0, #6
   1c124:	bl	110ec <setlocale@plt>
   1c128:	movw	r1, #22116	; 0x5664
   1c12c:	movt	r1, #3
   1c130:	movw	r0, #8760	; 0x2238
   1c134:	movt	r0, #3
   1c138:	bl	1111c <bindtextdomain@plt>
   1c13c:	movw	r0, #8760	; 0x2238
   1c140:	movt	r0, #3
   1c144:	bl	10f54 <textdomain@plt>
   1c148:	bl	1b4f0 <__assert_fail@plt+0xa398>
   1c14c:	movw	r0, #50068	; 0xc394
   1c150:	movt	r0, #1
   1c154:	bl	32100 <__assert_fail@plt+0x20fa8>
   1c158:	movw	r0, #46428	; 0xb55c
   1c15c:	movt	r0, #1
   1c160:	bl	32100 <__assert_fail@plt+0x20fa8>
   1c164:	b	1c23c <__assert_fail@plt+0xb0e4>
   1c168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c16c:	cmn	r3, #2
   1c170:	beq	1c1a4 <__assert_fail@plt+0xb04c>
   1c174:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c178:	cmp	r3, #256	; 0x100
   1c17c:	beq	1c190 <__assert_fail@plt+0xb038>
   1c180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c184:	cmn	r3, #3
   1c188:	beq	1c1ac <__assert_fail@plt+0xb054>
   1c18c:	b	1c234 <__assert_fail@plt+0xb0dc>
   1c190:	movw	r3, #29076	; 0x7194
   1c194:	movt	r3, #4
   1c198:	mov	r2, #1
   1c19c:	strb	r2, [r3]
   1c1a0:	b	1c23c <__assert_fail@plt+0xb0e4>
   1c1a4:	mov	r0, #0
   1c1a8:	bl	1bf28 <__assert_fail@plt+0xadd0>
   1c1ac:	movw	r3, #29068	; 0x718c
   1c1b0:	movt	r3, #4
   1c1b4:	ldr	r4, [r3]
   1c1b8:	movw	r3, #28956	; 0x711c
   1c1bc:	movt	r3, #4
   1c1c0:	ldr	r5, [r3]
   1c1c4:	movw	r1, #22140	; 0x567c
   1c1c8:	movt	r1, #3
   1c1cc:	movw	r0, #22160	; 0x5690
   1c1d0:	movt	r0, #3
   1c1d4:	bl	2a09c <__assert_fail@plt+0x18f44>
   1c1d8:	mov	r6, r0
   1c1dc:	movw	r1, #22180	; 0x56a4
   1c1e0:	movt	r1, #3
   1c1e4:	movw	r0, #22196	; 0x56b4
   1c1e8:	movt	r0, #3
   1c1ec:	bl	2a09c <__assert_fail@plt+0x18f44>
   1c1f0:	mov	r2, r0
   1c1f4:	mov	r3, #0
   1c1f8:	str	r3, [sp, #12]
   1c1fc:	str	r2, [sp, #8]
   1c200:	str	r6, [sp, #4]
   1c204:	movw	r3, #22212	; 0x56c4
   1c208:	movt	r3, #3
   1c20c:	str	r3, [sp]
   1c210:	mov	r3, r5
   1c214:	movw	r2, #8552	; 0x2168
   1c218:	movt	r2, #3
   1c21c:	movw	r1, #22104	; 0x5658
   1c220:	movt	r1, #3
   1c224:	mov	r0, r4
   1c228:	bl	2dce0 <__assert_fail@plt+0x1cb88>
   1c22c:	mov	r0, #0
   1c230:	bl	1102c <exit@plt>
   1c234:	mov	r0, #1
   1c238:	bl	1bf28 <__assert_fail@plt+0xadd0>
   1c23c:	mov	r3, #0
   1c240:	str	r3, [sp]
   1c244:	movw	r3, #8940	; 0x22ec
   1c248:	movt	r3, #3
   1c24c:	movw	r2, #8736	; 0x2220
   1c250:	movt	r2, #3
   1c254:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c258:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c25c:	bl	11014 <getopt_long@plt>
   1c260:	str	r0, [fp, #-32]	; 0xffffffe0
   1c264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c268:	cmn	r3, #1
   1c26c:	bne	1c168 <__assert_fail@plt+0xb010>
   1c270:	movw	r3, #29048	; 0x7178
   1c274:	movt	r3, #4
   1c278:	ldr	r3, [r3]
   1c27c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c280:	cmp	r2, r3
   1c284:	bgt	1c298 <__assert_fail@plt+0xb140>
   1c288:	bl	1c03c <__assert_fail@plt+0xaee4>
   1c28c:	mov	r3, r0
   1c290:	strb	r3, [fp, #-21]	; 0xffffffeb
   1c294:	b	1c308 <__assert_fail@plt+0xb1b0>
   1c298:	mov	r3, #1
   1c29c:	strb	r3, [fp, #-21]	; 0xffffffeb
   1c2a0:	movw	r3, #29048	; 0x7178
   1c2a4:	movt	r3, #4
   1c2a8:	ldr	r3, [r3]
   1c2ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2b0:	b	1c2f8 <__assert_fail@plt+0xb1a0>
   1c2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c2b8:	lsl	r3, r3, #2
   1c2bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c2c0:	add	r3, r2, r3
   1c2c4:	ldr	r3, [r3]
   1c2c8:	mov	r0, r3
   1c2cc:	bl	1bc74 <__assert_fail@plt+0xab1c>
   1c2d0:	mov	r3, r0
   1c2d4:	eor	r3, r3, #1
   1c2d8:	uxtb	r3, r3
   1c2dc:	cmp	r3, #0
   1c2e0:	beq	1c2ec <__assert_fail@plt+0xb194>
   1c2e4:	mov	r3, #0
   1c2e8:	strb	r3, [fp, #-21]	; 0xffffffeb
   1c2ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c2f0:	add	r3, r3, #1
   1c2f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c2fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c300:	cmp	r2, r3
   1c304:	blt	1c2b4 <__assert_fail@plt+0xb15c>
   1c308:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1c30c:	eor	r3, r3, #1
   1c310:	uxtb	r3, r3
   1c314:	mov	r0, r3
   1c318:	sub	sp, fp, #16
   1c31c:	ldrd	r4, [sp]
   1c320:	ldr	r6, [sp, #8]
   1c324:	ldr	fp, [sp, #12]
   1c328:	add	sp, sp, #16
   1c32c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c330:	push	{fp}		; (str fp, [sp, #-4]!)
   1c334:	add	fp, sp, #0
   1c338:	sub	sp, sp, #12
   1c33c:	str	r0, [fp, #-8]
   1c340:	movw	r3, #29088	; 0x71a0
   1c344:	movt	r3, #4
   1c348:	ldr	r2, [fp, #-8]
   1c34c:	str	r2, [r3]
   1c350:	nop	{0}
   1c354:	add	sp, fp, #0
   1c358:	pop	{fp}		; (ldr fp, [sp], #4)
   1c35c:	bx	lr
   1c360:	push	{fp}		; (str fp, [sp, #-4]!)
   1c364:	add	fp, sp, #0
   1c368:	sub	sp, sp, #12
   1c36c:	mov	r3, r0
   1c370:	strb	r3, [fp, #-5]
   1c374:	movw	r3, #29092	; 0x71a4
   1c378:	movt	r3, #4
   1c37c:	ldrb	r2, [fp, #-5]
   1c380:	strb	r2, [r3]
   1c384:	nop	{0}
   1c388:	add	sp, fp, #0
   1c38c:	pop	{fp}		; (ldr fp, [sp], #4)
   1c390:	bx	lr
   1c394:	str	r4, [sp, #-12]!
   1c398:	str	fp, [sp, #4]
   1c39c:	str	lr, [sp, #8]
   1c3a0:	add	fp, sp, #8
   1c3a4:	sub	sp, sp, #20
   1c3a8:	movw	r3, #29068	; 0x718c
   1c3ac:	movt	r3, #4
   1c3b0:	ldr	r3, [r3]
   1c3b4:	mov	r0, r3
   1c3b8:	bl	2eb30 <__assert_fail@plt+0x1d9d8>
   1c3bc:	mov	r3, r0
   1c3c0:	cmp	r3, #0
   1c3c4:	beq	1c498 <__assert_fail@plt+0xb340>
   1c3c8:	movw	r3, #29092	; 0x71a4
   1c3cc:	movt	r3, #4
   1c3d0:	ldrb	r3, [r3]
   1c3d4:	eor	r3, r3, #1
   1c3d8:	uxtb	r3, r3
   1c3dc:	cmp	r3, #0
   1c3e0:	bne	1c3f8 <__assert_fail@plt+0xb2a0>
   1c3e4:	bl	11074 <__errno_location@plt>
   1c3e8:	mov	r3, r0
   1c3ec:	ldr	r3, [r3]
   1c3f0:	cmp	r3, #32
   1c3f4:	beq	1c498 <__assert_fail@plt+0xb340>
   1c3f8:	movw	r0, #22344	; 0x5748
   1c3fc:	movt	r0, #3
   1c400:	bl	11044 <gettext@plt>
   1c404:	str	r0, [fp, #-16]
   1c408:	movw	r3, #29088	; 0x71a0
   1c40c:	movt	r3, #4
   1c410:	ldr	r3, [r3]
   1c414:	cmp	r3, #0
   1c418:	beq	1c464 <__assert_fail@plt+0xb30c>
   1c41c:	bl	11074 <__errno_location@plt>
   1c420:	mov	r3, r0
   1c424:	ldr	r4, [r3]
   1c428:	movw	r3, #29088	; 0x71a0
   1c42c:	movt	r3, #4
   1c430:	ldr	r3, [r3]
   1c434:	mov	r0, r3
   1c438:	bl	2c870 <__assert_fail@plt+0x1b718>
   1c43c:	mov	r2, r0
   1c440:	ldr	r3, [fp, #-16]
   1c444:	str	r3, [sp]
   1c448:	mov	r3, r2
   1c44c:	movw	r2, #22356	; 0x5754
   1c450:	movt	r2, #3
   1c454:	mov	r1, r4
   1c458:	mov	r0, #0
   1c45c:	bl	10fcc <error@plt>
   1c460:	b	1c484 <__assert_fail@plt+0xb32c>
   1c464:	bl	11074 <__errno_location@plt>
   1c468:	mov	r3, r0
   1c46c:	ldr	r1, [r3]
   1c470:	ldr	r3, [fp, #-16]
   1c474:	movw	r2, #22364	; 0x575c
   1c478:	movt	r2, #3
   1c47c:	mov	r0, #0
   1c480:	bl	10fcc <error@plt>
   1c484:	movw	r3, #28960	; 0x7120
   1c488:	movt	r3, #4
   1c48c:	ldr	r3, [r3]
   1c490:	mov	r0, r3
   1c494:	bl	10ef4 <_exit@plt>
   1c498:	movw	r3, #29056	; 0x7180
   1c49c:	movt	r3, #4
   1c4a0:	ldr	r3, [r3]
   1c4a4:	mov	r0, r3
   1c4a8:	bl	2eb30 <__assert_fail@plt+0x1d9d8>
   1c4ac:	mov	r3, r0
   1c4b0:	cmp	r3, #0
   1c4b4:	beq	1c4cc <__assert_fail@plt+0xb374>
   1c4b8:	movw	r3, #28960	; 0x7120
   1c4bc:	movt	r3, #4
   1c4c0:	ldr	r3, [r3]
   1c4c4:	mov	r0, r3
   1c4c8:	bl	10ef4 <_exit@plt>
   1c4cc:	nop	{0}
   1c4d0:	sub	sp, fp, #8
   1c4d4:	ldr	r4, [sp]
   1c4d8:	ldr	fp, [sp, #4]
   1c4dc:	add	sp, sp, #8
   1c4e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4e4:	str	r4, [sp, #-12]!
   1c4e8:	str	fp, [sp, #4]
   1c4ec:	str	lr, [sp, #8]
   1c4f0:	add	fp, sp, #8
   1c4f4:	sub	sp, sp, #20
   1c4f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4fc:	bl	11074 <__errno_location@plt>
   1c500:	mov	r3, r0
   1c504:	ldr	r3, [r3]
   1c508:	str	r3, [fp, #-20]	; 0xffffffec
   1c50c:	bl	11074 <__errno_location@plt>
   1c510:	mov	r3, r0
   1c514:	ldr	r3, [r3]
   1c518:	str	r3, [fp, #-16]
   1c51c:	bl	11074 <__errno_location@plt>
   1c520:	mov	r2, r0
   1c524:	mov	r3, #0
   1c528:	str	r3, [r2]
   1c52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c530:	bl	10ee8 <free@plt>
   1c534:	bl	11074 <__errno_location@plt>
   1c538:	mov	r3, r0
   1c53c:	ldr	r3, [r3]
   1c540:	cmp	r3, #0
   1c544:	moveq	r3, #1
   1c548:	movne	r3, #0
   1c54c:	uxtb	r3, r3
   1c550:	mov	r4, r3
   1c554:	bl	11074 <__errno_location@plt>
   1c558:	mov	r2, r0
   1c55c:	lsl	r3, r4, #2
   1c560:	sub	r1, fp, #12
   1c564:	add	r3, r1, r3
   1c568:	ldr	r3, [r3, #-8]
   1c56c:	str	r3, [r2]
   1c570:	nop	{0}
   1c574:	sub	sp, fp, #8
   1c578:	ldr	r4, [sp]
   1c57c:	ldr	fp, [sp, #4]
   1c580:	add	sp, sp, #8
   1c584:	pop	{pc}		; (ldr pc, [sp], #4)
   1c588:	str	fp, [sp, #-8]!
   1c58c:	str	lr, [sp, #4]
   1c590:	add	fp, sp, #4
   1c594:	sub	sp, sp, #32
   1c598:	str	r0, [fp, #-24]	; 0xffffffe8
   1c59c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c5a0:	str	r2, [fp, #-32]	; 0xffffffe0
   1c5a4:	mov	r3, #0
   1c5a8:	str	r3, [fp, #-8]
   1c5ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5b0:	str	r3, [fp, #-12]
   1c5b4:	b	1c628 <__assert_fail@plt+0xb4d0>
   1c5b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c5bc:	ldr	r1, [fp, #-12]
   1c5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5c4:	bl	2d128 <__assert_fail@plt+0x1bfd0>
   1c5c8:	str	r0, [fp, #-16]
   1c5cc:	ldr	r3, [fp, #-16]
   1c5d0:	cmn	r3, #1
   1c5d4:	beq	1c638 <__assert_fail@plt+0xb4e0>
   1c5d8:	ldr	r3, [fp, #-16]
   1c5dc:	cmp	r3, #0
   1c5e0:	bne	1c5f8 <__assert_fail@plt+0xb4a0>
   1c5e4:	bl	11074 <__errno_location@plt>
   1c5e8:	mov	r2, r0
   1c5ec:	mov	r3, #28
   1c5f0:	str	r3, [r2]
   1c5f4:	b	1c63c <__assert_fail@plt+0xb4e4>
   1c5f8:	ldr	r2, [fp, #-8]
   1c5fc:	ldr	r3, [fp, #-16]
   1c600:	add	r3, r2, r3
   1c604:	str	r3, [fp, #-8]
   1c608:	ldr	r2, [fp, #-12]
   1c60c:	ldr	r3, [fp, #-16]
   1c610:	add	r3, r2, r3
   1c614:	str	r3, [fp, #-12]
   1c618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c61c:	ldr	r3, [fp, #-16]
   1c620:	sub	r3, r2, r3
   1c624:	str	r3, [fp, #-32]	; 0xffffffe0
   1c628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c62c:	cmp	r3, #0
   1c630:	bne	1c5b8 <__assert_fail@plt+0xb460>
   1c634:	b	1c63c <__assert_fail@plt+0xb4e4>
   1c638:	nop	{0}
   1c63c:	ldr	r3, [fp, #-8]
   1c640:	mov	r0, r3
   1c644:	sub	sp, fp, #4
   1c648:	ldr	fp, [sp]
   1c64c:	add	sp, sp, #4
   1c650:	pop	{pc}		; (ldr pc, [sp], #4)
   1c654:	str	fp, [sp, #-8]!
   1c658:	str	lr, [sp, #4]
   1c65c:	add	fp, sp, #4
   1c660:	sub	sp, sp, #24
   1c664:	strd	r0, [fp, #-20]	; 0xffffffec
   1c668:	str	r2, [fp, #-24]	; 0xffffffe8
   1c66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c670:	add	r3, r3, #20
   1c674:	str	r3, [fp, #-8]
   1c678:	ldr	r3, [fp, #-8]
   1c67c:	mov	r2, #0
   1c680:	strb	r2, [r3]
   1c684:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1c688:	mov	r2, #10
   1c68c:	mov	r3, #0
   1c690:	bl	31f28 <__assert_fail@plt+0x20dd0>
   1c694:	uxtb	r3, r2
   1c698:	ldr	r2, [fp, #-8]
   1c69c:	sub	r2, r2, #1
   1c6a0:	str	r2, [fp, #-8]
   1c6a4:	add	r3, r3, #48	; 0x30
   1c6a8:	uxtb	r2, r3
   1c6ac:	ldr	r3, [fp, #-8]
   1c6b0:	strb	r2, [r3]
   1c6b4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1c6b8:	mov	r2, #10
   1c6bc:	mov	r3, #0
   1c6c0:	bl	31f28 <__assert_fail@plt+0x20dd0>
   1c6c4:	mov	r2, r0
   1c6c8:	mov	r3, r1
   1c6cc:	strd	r2, [fp, #-20]	; 0xffffffec
   1c6d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1c6d4:	orrs	r3, r2, r3
   1c6d8:	bne	1c684 <__assert_fail@plt+0xb52c>
   1c6dc:	ldr	r3, [fp, #-8]
   1c6e0:	mov	r0, r3
   1c6e4:	sub	sp, fp, #4
   1c6e8:	ldr	fp, [sp]
   1c6ec:	add	sp, sp, #4
   1c6f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6f4:	andeq	r0, r0, r0
   1c6f8:	str	fp, [sp, #-8]!
   1c6fc:	str	lr, [sp, #4]
   1c700:	add	fp, sp, #4
   1c704:	sub	sp, sp, #8
   1c708:	str	r0, [fp, #-8]
   1c70c:	movw	r3, #29056	; 0x7180
   1c710:	movt	r3, #4
   1c714:	ldr	r3, [r3]
   1c718:	ldr	r2, [fp, #-8]
   1c71c:	movw	r1, #22372	; 0x5764
   1c720:	movt	r1, #3
   1c724:	mov	r0, r3
   1c728:	bl	11068 <fprintf@plt>
   1c72c:	bl	11140 <abort@plt>
   1c730:	str	fp, [sp, #-8]!
   1c734:	str	lr, [sp, #4]
   1c738:	add	fp, sp, #4
   1c73c:	sub	sp, sp, #16
   1c740:	str	r0, [fp, #-16]
   1c744:	ldr	r3, [fp, #-16]
   1c748:	cmp	r3, #0
   1c74c:	bne	1c770 <__assert_fail@plt+0xb618>
   1c750:	movw	r3, #23928	; 0x5d78
   1c754:	movt	r3, #3
   1c758:	movw	r2, #291	; 0x123
   1c75c:	movw	r1, #22376	; 0x5768
   1c760:	movt	r1, #3
   1c764:	movw	r0, #22392	; 0x5778
   1c768:	movt	r0, #3
   1c76c:	bl	11158 <__assert_fail@plt>
   1c770:	ldr	r0, [fp, #-16]
   1c774:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   1c778:	mov	r3, r0
   1c77c:	str	r3, [fp, #-8]
   1c780:	ldr	r3, [fp, #-8]
   1c784:	cmp	r3, #0
   1c788:	bne	1c798 <__assert_fail@plt+0xb640>
   1c78c:	movw	r0, #22404	; 0x5784
   1c790:	movt	r0, #3
   1c794:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   1c798:	ldr	r3, [fp, #-8]
   1c79c:	mov	r0, r3
   1c7a0:	sub	sp, fp, #4
   1c7a4:	ldr	fp, [sp]
   1c7a8:	add	sp, sp, #4
   1c7ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7b0:	str	fp, [sp, #-8]!
   1c7b4:	str	lr, [sp, #4]
   1c7b8:	add	fp, sp, #4
   1c7bc:	sub	sp, sp, #24
   1c7c0:	str	r0, [fp, #-16]
   1c7c4:	str	r1, [fp, #-20]	; 0xffffffec
   1c7c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c7cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7d0:	ldr	r0, [fp, #-16]
   1c7d4:	bl	2e9cc <__assert_fail@plt+0x1d874>
   1c7d8:	str	r0, [fp, #-8]
   1c7dc:	ldr	r3, [fp, #-8]
   1c7e0:	cmp	r3, #0
   1c7e4:	bne	1c7f4 <__assert_fail@plt+0xb69c>
   1c7e8:	movw	r0, #22452	; 0x57b4
   1c7ec:	movt	r0, #3
   1c7f0:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   1c7f4:	ldr	r3, [fp, #-8]
   1c7f8:	mov	r0, r3
   1c7fc:	sub	sp, fp, #4
   1c800:	ldr	fp, [sp]
   1c804:	add	sp, sp, #4
   1c808:	pop	{pc}		; (ldr pc, [sp], #4)
   1c80c:	str	fp, [sp, #-8]!
   1c810:	str	lr, [sp, #4]
   1c814:	add	fp, sp, #4
   1c818:	sub	sp, sp, #8
   1c81c:	str	r0, [fp, #-8]
   1c820:	str	r1, [fp, #-12]
   1c824:	ldr	r0, [fp, #-8]
   1c828:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   1c82c:	nop	{0}
   1c830:	sub	sp, fp, #4
   1c834:	ldr	fp, [sp]
   1c838:	add	sp, sp, #4
   1c83c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c840:	push	{fp}		; (str fp, [sp, #-4]!)
   1c844:	add	fp, sp, #0
   1c848:	sub	sp, sp, #20
   1c84c:	str	r0, [fp, #-8]
   1c850:	str	r1, [fp, #-12]
   1c854:	str	r2, [fp, #-16]
   1c858:	ldr	r3, [fp, #-8]
   1c85c:	cmp	r3, #0
   1c860:	beq	1c878 <__assert_fail@plt+0xb720>
   1c864:	movw	r3, #28964	; 0x7124
   1c868:	movt	r3, #4
   1c86c:	ldr	r2, [r3]
   1c870:	ldr	r3, [fp, #-8]
   1c874:	str	r2, [r3]
   1c878:	ldr	r3, [fp, #-12]
   1c87c:	cmp	r3, #0
   1c880:	beq	1c898 <__assert_fail@plt+0xb740>
   1c884:	movw	r3, #28968	; 0x7128
   1c888:	movt	r3, #4
   1c88c:	ldr	r2, [r3]
   1c890:	ldr	r3, [fp, #-12]
   1c894:	str	r2, [r3]
   1c898:	ldr	r3, [fp, #-16]
   1c89c:	cmp	r3, #0
   1c8a0:	beq	1c8b8 <__assert_fail@plt+0xb760>
   1c8a4:	movw	r3, #28972	; 0x712c
   1c8a8:	movt	r3, #4
   1c8ac:	ldr	r2, [r3]
   1c8b0:	ldr	r3, [fp, #-16]
   1c8b4:	str	r2, [r3]
   1c8b8:	nop	{0}
   1c8bc:	add	sp, fp, #0
   1c8c0:	pop	{fp}		; (ldr fp, [sp], #4)
   1c8c4:	bx	lr
   1c8c8:	push	{fp}		; (str fp, [sp, #-4]!)
   1c8cc:	add	fp, sp, #0
   1c8d0:	sub	sp, sp, #20
   1c8d4:	str	r0, [fp, #-8]
   1c8d8:	str	r1, [fp, #-12]
   1c8dc:	str	r2, [fp, #-16]
   1c8e0:	ldr	r3, [fp, #-8]
   1c8e4:	cmp	r3, #0
   1c8e8:	bne	1c8f8 <__assert_fail@plt+0xb7a0>
   1c8ec:	movw	r3, #50992	; 0xc730
   1c8f0:	movt	r3, #1
   1c8f4:	str	r3, [fp, #-8]
   1c8f8:	ldr	r3, [fp, #-12]
   1c8fc:	cmp	r3, #0
   1c900:	bne	1c910 <__assert_fail@plt+0xb7b8>
   1c904:	movw	r3, #51120	; 0xc7b0
   1c908:	movt	r3, #1
   1c90c:	str	r3, [fp, #-12]
   1c910:	ldr	r3, [fp, #-16]
   1c914:	cmp	r3, #0
   1c918:	bne	1c928 <__assert_fail@plt+0xb7d0>
   1c91c:	movw	r3, #51212	; 0xc80c
   1c920:	movt	r3, #1
   1c924:	str	r3, [fp, #-16]
   1c928:	movw	r3, #28964	; 0x7124
   1c92c:	movt	r3, #4
   1c930:	ldr	r2, [fp, #-8]
   1c934:	str	r2, [r3]
   1c938:	movw	r3, #28968	; 0x7128
   1c93c:	movt	r3, #4
   1c940:	ldr	r2, [fp, #-12]
   1c944:	str	r2, [r3]
   1c948:	movw	r3, #28972	; 0x712c
   1c94c:	movt	r3, #4
   1c950:	ldr	r2, [fp, #-16]
   1c954:	str	r2, [r3]
   1c958:	nop	{0}
   1c95c:	add	sp, fp, #0
   1c960:	pop	{fp}		; (ldr fp, [sp], #4)
   1c964:	bx	lr
   1c968:	str	fp, [sp, #-8]!
   1c96c:	str	lr, [sp, #4]
   1c970:	add	fp, sp, #4
   1c974:	sub	sp, sp, #8
   1c978:	str	r0, [fp, #-8]
   1c97c:	movw	r3, #28964	; 0x7124
   1c980:	movt	r3, #4
   1c984:	ldr	r3, [r3]
   1c988:	ldr	r2, [fp, #-8]
   1c98c:	lsl	r2, r2, #2
   1c990:	mov	r0, r2
   1c994:	blx	r3
   1c998:	mov	r3, r0
   1c99c:	mov	r0, r3
   1c9a0:	sub	sp, fp, #4
   1c9a4:	ldr	fp, [sp]
   1c9a8:	add	sp, sp, #4
   1c9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9b0:	str	fp, [sp, #-8]!
   1c9b4:	str	lr, [sp, #4]
   1c9b8:	add	fp, sp, #4
   1c9bc:	sub	sp, sp, #16
   1c9c0:	str	r0, [fp, #-8]
   1c9c4:	str	r1, [fp, #-12]
   1c9c8:	str	r2, [fp, #-16]
   1c9cc:	ldr	r3, [fp, #-16]
   1c9d0:	cmp	r3, #0
   1c9d4:	bgt	1c9f8 <__assert_fail@plt+0xb8a0>
   1c9d8:	movw	r3, #23948	; 0x5d8c
   1c9dc:	movt	r3, #3
   1c9e0:	mov	r2, #368	; 0x170
   1c9e4:	movw	r1, #22376	; 0x5768
   1c9e8:	movt	r1, #3
   1c9ec:	movw	r0, #22392	; 0x5778
   1c9f0:	movt	r0, #3
   1c9f4:	bl	11158 <__assert_fail@plt>
   1c9f8:	movw	r3, #28968	; 0x7128
   1c9fc:	movt	r3, #4
   1ca00:	ldr	r3, [r3]
   1ca04:	ldr	r2, [fp, #-12]
   1ca08:	lsl	r1, r2, #2
   1ca0c:	ldr	r2, [fp, #-16]
   1ca10:	lsl	r2, r2, #2
   1ca14:	ldr	r0, [fp, #-8]
   1ca18:	blx	r3
   1ca1c:	mov	r3, r0
   1ca20:	mov	r0, r3
   1ca24:	sub	sp, fp, #4
   1ca28:	ldr	fp, [sp]
   1ca2c:	add	sp, sp, #4
   1ca30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca34:	str	fp, [sp, #-8]!
   1ca38:	str	lr, [sp, #4]
   1ca3c:	add	fp, sp, #4
   1ca40:	sub	sp, sp, #8
   1ca44:	str	r0, [fp, #-8]
   1ca48:	str	r1, [fp, #-12]
   1ca4c:	movw	r3, #28972	; 0x712c
   1ca50:	movt	r3, #4
   1ca54:	ldr	r3, [r3]
   1ca58:	ldr	r2, [fp, #-12]
   1ca5c:	lsl	r2, r2, #2
   1ca60:	mov	r1, r2
   1ca64:	ldr	r0, [fp, #-8]
   1ca68:	blx	r3
   1ca6c:	nop	{0}
   1ca70:	sub	sp, fp, #4
   1ca74:	ldr	fp, [sp]
   1ca78:	add	sp, sp, #4
   1ca7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca80:	push	{fp}		; (str fp, [sp, #-4]!)
   1ca84:	add	fp, sp, #0
   1ca88:	sub	sp, sp, #28
   1ca8c:	str	r0, [fp, #-16]
   1ca90:	str	r1, [fp, #-20]	; 0xffffffec
   1ca94:	str	r2, [fp, #-24]	; 0xffffffe8
   1ca98:	mov	r3, #0
   1ca9c:	str	r3, [fp, #-8]
   1caa0:	b	1cad8 <__assert_fail@plt+0xb980>
   1caa4:	ldr	r3, [fp, #-8]
   1caa8:	lsl	r3, r3, #2
   1caac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cab0:	add	r2, r2, r3
   1cab4:	ldr	r3, [fp, #-8]
   1cab8:	lsl	r3, r3, #2
   1cabc:	ldr	r1, [fp, #-16]
   1cac0:	add	r3, r1, r3
   1cac4:	ldr	r2, [r2]
   1cac8:	str	r2, [r3]
   1cacc:	ldr	r3, [fp, #-8]
   1cad0:	add	r3, r3, #1
   1cad4:	str	r3, [fp, #-8]
   1cad8:	ldr	r2, [fp, #-8]
   1cadc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cae0:	cmp	r2, r3
   1cae4:	blt	1caa4 <__assert_fail@plt+0xb94c>
   1cae8:	nop	{0}
   1caec:	add	sp, fp, #0
   1caf0:	pop	{fp}		; (ldr fp, [sp], #4)
   1caf4:	bx	lr
   1caf8:	push	{fp}		; (str fp, [sp, #-4]!)
   1cafc:	add	fp, sp, #0
   1cb00:	sub	sp, sp, #20
   1cb04:	str	r0, [fp, #-8]
   1cb08:	str	r1, [fp, #-12]
   1cb0c:	str	r2, [fp, #-16]
   1cb10:	b	1cb3c <__assert_fail@plt+0xb9e4>
   1cb14:	ldr	r3, [fp, #-16]
   1cb18:	lsl	r3, r3, #2
   1cb1c:	ldr	r2, [fp, #-12]
   1cb20:	add	r2, r2, r3
   1cb24:	ldr	r3, [fp, #-16]
   1cb28:	lsl	r3, r3, #2
   1cb2c:	ldr	r1, [fp, #-8]
   1cb30:	add	r3, r1, r3
   1cb34:	ldr	r2, [r2]
   1cb38:	str	r2, [r3]
   1cb3c:	ldr	r3, [fp, #-16]
   1cb40:	sub	r3, r3, #1
   1cb44:	str	r3, [fp, #-16]
   1cb48:	ldr	r3, [fp, #-16]
   1cb4c:	cmp	r3, #0
   1cb50:	bge	1cb14 <__assert_fail@plt+0xb9bc>
   1cb54:	nop	{0}
   1cb58:	add	sp, fp, #0
   1cb5c:	pop	{fp}		; (ldr fp, [sp], #4)
   1cb60:	bx	lr
   1cb64:	push	{fp}		; (str fp, [sp, #-4]!)
   1cb68:	add	fp, sp, #0
   1cb6c:	sub	sp, sp, #20
   1cb70:	str	r0, [fp, #-8]
   1cb74:	str	r1, [fp, #-12]
   1cb78:	str	r2, [fp, #-16]
   1cb7c:	b	1cbf0 <__assert_fail@plt+0xba98>
   1cb80:	ldr	r3, [fp, #-16]
   1cb84:	lsl	r3, r3, #2
   1cb88:	ldr	r2, [fp, #-8]
   1cb8c:	add	r3, r2, r3
   1cb90:	ldr	r2, [r3]
   1cb94:	ldr	r3, [fp, #-16]
   1cb98:	lsl	r3, r3, #2
   1cb9c:	ldr	r1, [fp, #-12]
   1cba0:	add	r3, r1, r3
   1cba4:	ldr	r3, [r3]
   1cba8:	cmp	r2, r3
   1cbac:	beq	1cbf0 <__assert_fail@plt+0xba98>
   1cbb0:	ldr	r3, [fp, #-16]
   1cbb4:	lsl	r3, r3, #2
   1cbb8:	ldr	r2, [fp, #-8]
   1cbbc:	add	r3, r2, r3
   1cbc0:	ldr	r2, [r3]
   1cbc4:	ldr	r3, [fp, #-16]
   1cbc8:	lsl	r3, r3, #2
   1cbcc:	ldr	r1, [fp, #-12]
   1cbd0:	add	r3, r1, r3
   1cbd4:	ldr	r3, [r3]
   1cbd8:	cmp	r2, r3
   1cbdc:	bls	1cbe8 <__assert_fail@plt+0xba90>
   1cbe0:	mov	r3, #1
   1cbe4:	b	1cc0c <__assert_fail@plt+0xbab4>
   1cbe8:	mvn	r3, #0
   1cbec:	b	1cc0c <__assert_fail@plt+0xbab4>
   1cbf0:	ldr	r3, [fp, #-16]
   1cbf4:	sub	r3, r3, #1
   1cbf8:	str	r3, [fp, #-16]
   1cbfc:	ldr	r3, [fp, #-16]
   1cc00:	cmp	r3, #0
   1cc04:	bge	1cb80 <__assert_fail@plt+0xba28>
   1cc08:	mov	r3, #0
   1cc0c:	mov	r0, r3
   1cc10:	add	sp, fp, #0
   1cc14:	pop	{fp}		; (ldr fp, [sp], #4)
   1cc18:	bx	lr
   1cc1c:	str	fp, [sp, #-8]!
   1cc20:	str	lr, [sp, #4]
   1cc24:	add	fp, sp, #4
   1cc28:	sub	sp, sp, #16
   1cc2c:	str	r0, [fp, #-8]
   1cc30:	str	r1, [fp, #-12]
   1cc34:	str	r2, [fp, #-16]
   1cc38:	str	r3, [fp, #-20]	; 0xffffffec
   1cc3c:	ldr	r2, [fp, #-12]
   1cc40:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc44:	cmp	r2, r3
   1cc48:	beq	1cc6c <__assert_fail@plt+0xbb14>
   1cc4c:	ldr	r2, [fp, #-12]
   1cc50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc54:	cmp	r2, r3
   1cc58:	bge	1cc64 <__assert_fail@plt+0xbb0c>
   1cc5c:	mvn	r3, #0
   1cc60:	b	1cc80 <__assert_fail@plt+0xbb28>
   1cc64:	mov	r3, #1
   1cc68:	b	1cc80 <__assert_fail@plt+0xbb28>
   1cc6c:	ldr	r2, [fp, #-12]
   1cc70:	ldr	r1, [fp, #-16]
   1cc74:	ldr	r0, [fp, #-8]
   1cc78:	bl	1cb64 <__assert_fail@plt+0xba0c>
   1cc7c:	mov	r3, r0
   1cc80:	mov	r0, r3
   1cc84:	sub	sp, fp, #4
   1cc88:	ldr	fp, [sp]
   1cc8c:	add	sp, sp, #4
   1cc90:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc94:	push	{fp}		; (str fp, [sp, #-4]!)
   1cc98:	add	fp, sp, #0
   1cc9c:	sub	sp, sp, #12
   1cca0:	str	r0, [fp, #-8]
   1cca4:	str	r1, [fp, #-12]
   1cca8:	b	1ccb8 <__assert_fail@plt+0xbb60>
   1ccac:	ldr	r3, [fp, #-12]
   1ccb0:	sub	r3, r3, #1
   1ccb4:	str	r3, [fp, #-12]
   1ccb8:	ldr	r3, [fp, #-12]
   1ccbc:	cmp	r3, #0
   1ccc0:	ble	1cce4 <__assert_fail@plt+0xbb8c>
   1ccc4:	ldr	r3, [fp, #-12]
   1ccc8:	sub	r3, r3, #-1073741823	; 0xc0000001
   1cccc:	lsl	r3, r3, #2
   1ccd0:	ldr	r2, [fp, #-8]
   1ccd4:	add	r3, r2, r3
   1ccd8:	ldr	r3, [r3]
   1ccdc:	cmp	r3, #0
   1cce0:	beq	1ccac <__assert_fail@plt+0xbb54>
   1cce4:	ldr	r3, [fp, #-12]
   1cce8:	mov	r0, r3
   1ccec:	add	sp, fp, #0
   1ccf0:	pop	{fp}		; (ldr fp, [sp], #4)
   1ccf4:	bx	lr
   1ccf8:	str	fp, [sp, #-8]!
   1ccfc:	str	lr, [sp, #4]
   1cd00:	add	fp, sp, #4
   1cd04:	sub	sp, sp, #8
   1cd08:	str	r0, [fp, #-8]
   1cd0c:	str	r1, [fp, #-12]
   1cd10:	ldr	r1, [fp, #-12]
   1cd14:	ldr	r0, [fp, #-8]
   1cd18:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   1cd1c:	mov	r3, r0
   1cd20:	cmp	r3, #0
   1cd24:	moveq	r3, #1
   1cd28:	movne	r3, #0
   1cd2c:	uxtb	r3, r3
   1cd30:	mov	r0, r3
   1cd34:	sub	sp, fp, #4
   1cd38:	ldr	fp, [sp]
   1cd3c:	add	sp, sp, #4
   1cd40:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd44:	push	{fp}		; (str fp, [sp, #-4]!)
   1cd48:	add	fp, sp, #0
   1cd4c:	sub	sp, sp, #12
   1cd50:	str	r0, [fp, #-8]
   1cd54:	str	r1, [fp, #-12]
   1cd58:	b	1cd74 <__assert_fail@plt+0xbc1c>
   1cd5c:	ldr	r3, [fp, #-12]
   1cd60:	lsl	r3, r3, #2
   1cd64:	ldr	r2, [fp, #-8]
   1cd68:	add	r3, r2, r3
   1cd6c:	mov	r2, #0
   1cd70:	str	r2, [r3]
   1cd74:	ldr	r3, [fp, #-12]
   1cd78:	sub	r3, r3, #1
   1cd7c:	str	r3, [fp, #-12]
   1cd80:	ldr	r3, [fp, #-12]
   1cd84:	cmp	r3, #0
   1cd88:	bge	1cd5c <__assert_fail@plt+0xbc04>
   1cd8c:	nop	{0}
   1cd90:	add	sp, fp, #0
   1cd94:	pop	{fp}		; (ldr fp, [sp], #4)
   1cd98:	bx	lr
   1cd9c:	str	fp, [sp, #-8]!
   1cda0:	str	lr, [sp, #4]
   1cda4:	add	fp, sp, #4
   1cda8:	sub	sp, sp, #24
   1cdac:	str	r0, [fp, #-16]
   1cdb0:	str	r1, [fp, #-20]	; 0xffffffec
   1cdb4:	str	r2, [fp, #-24]	; 0xffffffe8
   1cdb8:	str	r3, [fp, #-28]	; 0xffffffe4
   1cdbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdc0:	cmp	r3, #0
   1cdc4:	bgt	1cde8 <__assert_fail@plt+0xbc90>
   1cdc8:	movw	r3, #23968	; 0x5da0
   1cdcc:	movt	r3, #3
   1cdd0:	movw	r2, #442	; 0x1ba
   1cdd4:	movw	r1, #22376	; 0x5768
   1cdd8:	movt	r1, #3
   1cddc:	movw	r0, #22500	; 0x57e4
   1cde0:	movt	r0, #3
   1cde4:	bl	11158 <__assert_fail@plt>
   1cde8:	mov	r3, #0
   1cdec:	str	r3, [fp, #-8]
   1cdf0:	ldr	r3, [fp, #-8]
   1cdf4:	lsl	r3, r3, #2
   1cdf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cdfc:	add	r3, r2, r3
   1ce00:	ldr	r3, [r3]
   1ce04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce08:	add	r3, r2, r3
   1ce0c:	str	r3, [fp, #-12]
   1ce10:	ldr	r2, [fp, #-12]
   1ce14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce18:	cmp	r2, r3
   1ce1c:	movcc	r3, #1
   1ce20:	movcs	r3, #0
   1ce24:	uxtb	r3, r3
   1ce28:	str	r3, [fp, #-28]	; 0xffffffe4
   1ce2c:	ldr	r3, [fp, #-8]
   1ce30:	lsl	r3, r3, #2
   1ce34:	ldr	r2, [fp, #-16]
   1ce38:	add	r3, r2, r3
   1ce3c:	ldr	r2, [fp, #-12]
   1ce40:	str	r2, [r3]
   1ce44:	ldr	r3, [fp, #-8]
   1ce48:	add	r3, r3, #1
   1ce4c:	str	r3, [fp, #-8]
   1ce50:	ldr	r2, [fp, #-8]
   1ce54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce58:	cmp	r2, r3
   1ce5c:	blt	1cdf0 <__assert_fail@plt+0xbc98>
   1ce60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce64:	mov	r0, r3
   1ce68:	sub	sp, fp, #4
   1ce6c:	ldr	fp, [sp]
   1ce70:	add	sp, sp, #4
   1ce74:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce78:	push	{fp}		; (str fp, [sp, #-4]!)
   1ce7c:	add	fp, sp, #0
   1ce80:	sub	sp, sp, #44	; 0x2c
   1ce84:	str	r0, [fp, #-32]	; 0xffffffe0
   1ce88:	str	r1, [fp, #-36]	; 0xffffffdc
   1ce8c:	str	r2, [fp, #-40]	; 0xffffffd8
   1ce90:	str	r3, [fp, #-44]	; 0xffffffd4
   1ce94:	mov	r3, #0
   1ce98:	str	r3, [fp, #-8]
   1ce9c:	mov	r3, #0
   1cea0:	str	r3, [fp, #-12]
   1cea4:	b	1cf60 <__assert_fail@plt+0xbe08>
   1cea8:	ldr	r3, [fp, #-8]
   1ceac:	lsl	r3, r3, #2
   1ceb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ceb4:	add	r3, r2, r3
   1ceb8:	ldr	r3, [r3]
   1cebc:	str	r3, [fp, #-16]
   1cec0:	ldr	r3, [fp, #-8]
   1cec4:	lsl	r3, r3, #2
   1cec8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cecc:	add	r3, r2, r3
   1ced0:	ldr	r3, [r3]
   1ced4:	str	r3, [fp, #-20]	; 0xffffffec
   1ced8:	ldr	r2, [fp, #-16]
   1cedc:	ldr	r3, [fp, #-12]
   1cee0:	add	r3, r2, r3
   1cee4:	str	r3, [fp, #-24]	; 0xffffffe8
   1cee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ceec:	ldr	r3, [fp, #-12]
   1cef0:	cmp	r2, r3
   1cef4:	movcc	r3, #1
   1cef8:	movcs	r3, #0
   1cefc:	uxtb	r3, r3
   1cf00:	str	r3, [fp, #-12]
   1cf04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf0c:	add	r3, r2, r3
   1cf10:	str	r3, [fp, #-24]	; 0xffffffe8
   1cf14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf1c:	cmp	r2, r3
   1cf20:	movcc	r3, #1
   1cf24:	movcs	r3, #0
   1cf28:	uxtb	r3, r3
   1cf2c:	mov	r2, r3
   1cf30:	ldr	r3, [fp, #-12]
   1cf34:	add	r3, r3, r2
   1cf38:	str	r3, [fp, #-12]
   1cf3c:	ldr	r3, [fp, #-8]
   1cf40:	lsl	r3, r3, #2
   1cf44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cf48:	add	r3, r2, r3
   1cf4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf50:	str	r2, [r3]
   1cf54:	ldr	r3, [fp, #-8]
   1cf58:	add	r3, r3, #1
   1cf5c:	str	r3, [fp, #-8]
   1cf60:	ldr	r2, [fp, #-8]
   1cf64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cf68:	cmp	r2, r3
   1cf6c:	blt	1cea8 <__assert_fail@plt+0xbd50>
   1cf70:	ldr	r3, [fp, #-12]
   1cf74:	mov	r0, r3
   1cf78:	add	sp, fp, #0
   1cf7c:	pop	{fp}		; (ldr fp, [sp], #4)
   1cf80:	bx	lr
   1cf84:	str	fp, [sp, #-8]!
   1cf88:	str	lr, [sp, #4]
   1cf8c:	add	fp, sp, #4
   1cf90:	sub	sp, sp, #24
   1cf94:	str	r0, [fp, #-16]
   1cf98:	str	r1, [fp, #-20]	; 0xffffffec
   1cf9c:	str	r2, [fp, #-24]	; 0xffffffe8
   1cfa0:	str	r3, [fp, #-28]	; 0xffffffe4
   1cfa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cfa8:	ldr	r3, [fp, #4]
   1cfac:	cmp	r2, r3
   1cfb0:	bge	1cfd4 <__assert_fail@plt+0xbe7c>
   1cfb4:	movw	r3, #23980	; 0x5dac
   1cfb8:	movt	r3, #3
   1cfbc:	mov	r2, #480	; 0x1e0
   1cfc0:	movw	r1, #22376	; 0x5768
   1cfc4:	movt	r1, #3
   1cfc8:	movw	r0, #22508	; 0x57ec
   1cfcc:	movt	r0, #3
   1cfd0:	bl	11158 <__assert_fail@plt>
   1cfd4:	ldr	r3, [fp, #4]
   1cfd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cfdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cfe0:	ldr	r0, [fp, #-16]
   1cfe4:	bl	1ce78 <__assert_fail@plt+0xbd20>
   1cfe8:	str	r0, [fp, #-8]
   1cfec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cff0:	ldr	r3, [fp, #4]
   1cff4:	cmp	r2, r3
   1cff8:	ble	1d034 <__assert_fail@plt+0xbedc>
   1cffc:	ldr	r3, [fp, #4]
   1d000:	lsl	r3, r3, #2
   1d004:	ldr	r2, [fp, #-16]
   1d008:	add	r0, r2, r3
   1d00c:	ldr	r3, [fp, #4]
   1d010:	lsl	r3, r3, #2
   1d014:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d018:	add	r1, r2, r3
   1d01c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d020:	ldr	r3, [fp, #4]
   1d024:	sub	r2, r2, r3
   1d028:	ldr	r3, [fp, #-8]
   1d02c:	bl	1cd9c <__assert_fail@plt+0xbc44>
   1d030:	str	r0, [fp, #-8]
   1d034:	ldr	r3, [fp, #-8]
   1d038:	mov	r0, r3
   1d03c:	sub	sp, fp, #4
   1d040:	ldr	fp, [sp]
   1d044:	add	sp, sp, #4
   1d048:	pop	{pc}		; (ldr pc, [sp], #4)
   1d04c:	str	fp, [sp, #-8]!
   1d050:	str	lr, [sp, #4]
   1d054:	add	fp, sp, #4
   1d058:	sub	sp, sp, #32
   1d05c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d060:	str	r1, [fp, #-28]	; 0xffffffe4
   1d064:	str	r2, [fp, #-32]	; 0xffffffe0
   1d068:	str	r3, [fp, #-36]	; 0xffffffdc
   1d06c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d070:	cmp	r3, #0
   1d074:	bgt	1d098 <__assert_fail@plt+0xbf40>
   1d078:	movw	r3, #23988	; 0x5db4
   1d07c:	movt	r3, #3
   1d080:	movw	r2, #493	; 0x1ed
   1d084:	movw	r1, #22376	; 0x5768
   1d088:	movt	r1, #3
   1d08c:	movw	r0, #22500	; 0x57e4
   1d090:	movt	r0, #3
   1d094:	bl	11158 <__assert_fail@plt>
   1d098:	mov	r3, #0
   1d09c:	str	r3, [fp, #-8]
   1d0a0:	ldr	r3, [fp, #-8]
   1d0a4:	lsl	r3, r3, #2
   1d0a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d0ac:	add	r3, r2, r3
   1d0b0:	ldr	r3, [r3]
   1d0b4:	str	r3, [fp, #-12]
   1d0b8:	ldr	r2, [fp, #-12]
   1d0bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d0c0:	cmp	r2, r3
   1d0c4:	movcc	r3, #1
   1d0c8:	movcs	r3, #0
   1d0cc:	uxtb	r3, r3
   1d0d0:	str	r3, [fp, #-16]
   1d0d4:	ldr	r3, [fp, #-8]
   1d0d8:	lsl	r3, r3, #2
   1d0dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d0e0:	add	r3, r2, r3
   1d0e4:	ldr	r1, [fp, #-12]
   1d0e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d0ec:	sub	r2, r1, r2
   1d0f0:	str	r2, [r3]
   1d0f4:	ldr	r3, [fp, #-16]
   1d0f8:	str	r3, [fp, #-36]	; 0xffffffdc
   1d0fc:	ldr	r3, [fp, #-8]
   1d100:	add	r3, r3, #1
   1d104:	str	r3, [fp, #-8]
   1d108:	ldr	r2, [fp, #-8]
   1d10c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d110:	cmp	r2, r3
   1d114:	blt	1d0a0 <__assert_fail@plt+0xbf48>
   1d118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d11c:	mov	r0, r3
   1d120:	sub	sp, fp, #4
   1d124:	ldr	fp, [sp]
   1d128:	add	sp, sp, #4
   1d12c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d130:	push	{fp}		; (str fp, [sp, #-4]!)
   1d134:	add	fp, sp, #0
   1d138:	sub	sp, sp, #36	; 0x24
   1d13c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d140:	str	r1, [fp, #-28]	; 0xffffffe4
   1d144:	str	r2, [fp, #-32]	; 0xffffffe0
   1d148:	str	r3, [fp, #-36]	; 0xffffffdc
   1d14c:	mov	r3, #0
   1d150:	str	r3, [fp, #-8]
   1d154:	mov	r3, #0
   1d158:	str	r3, [fp, #-12]
   1d15c:	b	1d210 <__assert_fail@plt+0xc0b8>
   1d160:	ldr	r3, [fp, #-8]
   1d164:	lsl	r3, r3, #2
   1d168:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d16c:	add	r3, r2, r3
   1d170:	ldr	r3, [r3]
   1d174:	str	r3, [fp, #-16]
   1d178:	ldr	r3, [fp, #-8]
   1d17c:	lsl	r3, r3, #2
   1d180:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d184:	add	r3, r2, r3
   1d188:	ldr	r3, [r3]
   1d18c:	str	r3, [fp, #-20]	; 0xffffffec
   1d190:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d194:	ldr	r3, [fp, #-12]
   1d198:	add	r3, r2, r3
   1d19c:	str	r3, [fp, #-20]	; 0xffffffec
   1d1a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d1a4:	ldr	r3, [fp, #-12]
   1d1a8:	cmp	r2, r3
   1d1ac:	movcc	r3, #1
   1d1b0:	movcs	r3, #0
   1d1b4:	uxtb	r3, r3
   1d1b8:	str	r3, [fp, #-12]
   1d1bc:	ldr	r2, [fp, #-16]
   1d1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1c4:	cmp	r2, r3
   1d1c8:	movcc	r3, #1
   1d1cc:	movcs	r3, #0
   1d1d0:	uxtb	r3, r3
   1d1d4:	mov	r2, r3
   1d1d8:	ldr	r3, [fp, #-12]
   1d1dc:	add	r3, r3, r2
   1d1e0:	str	r3, [fp, #-12]
   1d1e4:	ldr	r3, [fp, #-8]
   1d1e8:	lsl	r3, r3, #2
   1d1ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1f0:	add	r3, r2, r3
   1d1f4:	ldr	r1, [fp, #-16]
   1d1f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d1fc:	sub	r2, r1, r2
   1d200:	str	r2, [r3]
   1d204:	ldr	r3, [fp, #-8]
   1d208:	add	r3, r3, #1
   1d20c:	str	r3, [fp, #-8]
   1d210:	ldr	r2, [fp, #-8]
   1d214:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d218:	cmp	r2, r3
   1d21c:	blt	1d160 <__assert_fail@plt+0xc008>
   1d220:	ldr	r3, [fp, #-12]
   1d224:	mov	r0, r3
   1d228:	add	sp, fp, #0
   1d22c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d230:	bx	lr
   1d234:	str	fp, [sp, #-8]!
   1d238:	str	lr, [sp, #4]
   1d23c:	add	fp, sp, #4
   1d240:	sub	sp, sp, #24
   1d244:	str	r0, [fp, #-16]
   1d248:	str	r1, [fp, #-20]	; 0xffffffec
   1d24c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d250:	str	r3, [fp, #-28]	; 0xffffffe4
   1d254:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d258:	ldr	r3, [fp, #4]
   1d25c:	cmp	r2, r3
   1d260:	bge	1d284 <__assert_fail@plt+0xc12c>
   1d264:	movw	r3, #24000	; 0x5dc0
   1d268:	movt	r3, #3
   1d26c:	mov	r2, #532	; 0x214
   1d270:	movw	r1, #22376	; 0x5768
   1d274:	movt	r1, #3
   1d278:	movw	r0, #22508	; 0x57ec
   1d27c:	movt	r0, #3
   1d280:	bl	11158 <__assert_fail@plt>
   1d284:	ldr	r3, [fp, #4]
   1d288:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d28c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d290:	ldr	r0, [fp, #-16]
   1d294:	bl	1d130 <__assert_fail@plt+0xbfd8>
   1d298:	str	r0, [fp, #-8]
   1d29c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2a0:	ldr	r3, [fp, #4]
   1d2a4:	cmp	r2, r3
   1d2a8:	ble	1d2e4 <__assert_fail@plt+0xc18c>
   1d2ac:	ldr	r3, [fp, #4]
   1d2b0:	lsl	r3, r3, #2
   1d2b4:	ldr	r2, [fp, #-16]
   1d2b8:	add	r0, r2, r3
   1d2bc:	ldr	r3, [fp, #4]
   1d2c0:	lsl	r3, r3, #2
   1d2c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d2c8:	add	r1, r2, r3
   1d2cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2d0:	ldr	r3, [fp, #4]
   1d2d4:	sub	r2, r2, r3
   1d2d8:	ldr	r3, [fp, #-8]
   1d2dc:	bl	1d04c <__assert_fail@plt+0xbef4>
   1d2e0:	str	r0, [fp, #-8]
   1d2e4:	ldr	r3, [fp, #-8]
   1d2e8:	mov	r0, r3
   1d2ec:	sub	sp, fp, #4
   1d2f0:	ldr	fp, [sp]
   1d2f4:	add	sp, sp, #4
   1d2f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2fc:	str	fp, [sp, #-8]!
   1d300:	str	lr, [sp, #4]
   1d304:	add	fp, sp, #4
   1d308:	sub	sp, sp, #80	; 0x50
   1d30c:	str	r0, [fp, #-72]	; 0xffffffb8
   1d310:	str	r1, [fp, #-76]	; 0xffffffb4
   1d314:	str	r2, [fp, #-80]	; 0xffffffb0
   1d318:	str	r3, [fp, #-84]	; 0xffffffac
   1d31c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d320:	cmp	r3, #0
   1d324:	bgt	1d348 <__assert_fail@plt+0xc1f0>
   1d328:	movw	r3, #24008	; 0x5dc8
   1d32c:	movt	r3, #3
   1d330:	movw	r2, #545	; 0x221
   1d334:	movw	r1, #22376	; 0x5768
   1d338:	movt	r1, #3
   1d33c:	movw	r0, #22520	; 0x57f8
   1d340:	movt	r0, #3
   1d344:	bl	11158 <__assert_fail@plt>
   1d348:	mov	r3, #0
   1d34c:	str	r3, [fp, #-8]
   1d350:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d354:	add	r2, r3, #4
   1d358:	str	r2, [fp, #-76]	; 0xffffffb4
   1d35c:	ldr	r3, [r3]
   1d360:	str	r3, [fp, #-16]
   1d364:	mov	r3, #32
   1d368:	str	r3, [fp, #-20]	; 0xffffffec
   1d36c:	ldr	r3, [fp, #-16]
   1d370:	str	r3, [fp, #-24]	; 0xffffffe8
   1d374:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d378:	str	r3, [fp, #-28]	; 0xffffffe4
   1d37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d380:	uxth	r3, r3
   1d384:	str	r3, [fp, #-32]	; 0xffffffe0
   1d388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d38c:	lsr	r3, r3, #16
   1d390:	str	r3, [fp, #-36]	; 0xffffffdc
   1d394:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d398:	uxth	r3, r3
   1d39c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d3a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3a4:	lsr	r3, r3, #16
   1d3a8:	str	r3, [fp, #-44]	; 0xffffffd4
   1d3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d3b4:	mul	r3, r2, r3
   1d3b8:	str	r3, [fp, #-48]	; 0xffffffd0
   1d3bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d3c4:	mul	r3, r2, r3
   1d3c8:	str	r3, [fp, #-52]	; 0xffffffcc
   1d3cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d3d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d3d4:	mul	r3, r2, r3
   1d3d8:	str	r3, [fp, #-56]	; 0xffffffc8
   1d3dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d3e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d3e4:	mul	r3, r2, r3
   1d3e8:	str	r3, [fp, #-12]
   1d3ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d3f0:	lsr	r3, r3, #16
   1d3f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d3f8:	add	r3, r2, r3
   1d3fc:	str	r3, [fp, #-52]	; 0xffffffcc
   1d400:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d404:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d408:	add	r3, r2, r3
   1d40c:	str	r3, [fp, #-52]	; 0xffffffcc
   1d410:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d414:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d418:	cmp	r2, r3
   1d41c:	bcs	1d42c <__assert_fail@plt+0xc2d4>
   1d420:	ldr	r3, [fp, #-12]
   1d424:	add	r3, r3, #65536	; 0x10000
   1d428:	str	r3, [fp, #-12]
   1d42c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d430:	lsr	r3, r3, #16
   1d434:	ldr	r2, [fp, #-12]
   1d438:	add	r3, r2, r3
   1d43c:	str	r3, [fp, #-60]	; 0xffffffc4
   1d440:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d444:	lsl	r2, r3, #16
   1d448:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d44c:	uxth	r3, r3
   1d450:	add	r3, r2, r3
   1d454:	str	r3, [fp, #-64]	; 0xffffffc0
   1d458:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d45c:	ldr	r3, [fp, #-8]
   1d460:	add	r3, r2, r3
   1d464:	str	r3, [fp, #-64]	; 0xffffffc0
   1d468:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d46c:	ldr	r3, [fp, #-8]
   1d470:	cmp	r2, r3
   1d474:	movcc	r3, #1
   1d478:	movcs	r3, #0
   1d47c:	uxtb	r3, r3
   1d480:	mov	r2, r3
   1d484:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d488:	add	r3, r3, r2
   1d48c:	str	r3, [fp, #-8]
   1d490:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d494:	add	r2, r3, #4
   1d498:	str	r2, [fp, #-72]	; 0xffffffb8
   1d49c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d4a0:	str	r2, [r3]
   1d4a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d4a8:	sub	r3, r3, #1
   1d4ac:	str	r3, [fp, #-80]	; 0xffffffb0
   1d4b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d4b4:	cmp	r3, #0
   1d4b8:	bne	1d350 <__assert_fail@plt+0xc1f8>
   1d4bc:	ldr	r3, [fp, #-8]
   1d4c0:	mov	r0, r3
   1d4c4:	sub	sp, fp, #4
   1d4c8:	ldr	fp, [sp]
   1d4cc:	add	sp, sp, #4
   1d4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4d4:	str	fp, [sp, #-8]!
   1d4d8:	str	lr, [sp, #4]
   1d4dc:	add	fp, sp, #4
   1d4e0:	sub	sp, sp, #80	; 0x50
   1d4e4:	str	r0, [fp, #-72]	; 0xffffffb8
   1d4e8:	str	r1, [fp, #-76]	; 0xffffffb4
   1d4ec:	str	r2, [fp, #-80]	; 0xffffffb0
   1d4f0:	str	r3, [fp, #-84]	; 0xffffffac
   1d4f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d4f8:	cmp	r3, #0
   1d4fc:	bgt	1d520 <__assert_fail@plt+0xc3c8>
   1d500:	movw	r3, #24020	; 0x5dd4
   1d504:	movt	r3, #3
   1d508:	mov	r2, #568	; 0x238
   1d50c:	movw	r1, #22376	; 0x5768
   1d510:	movt	r1, #3
   1d514:	movw	r0, #22520	; 0x57f8
   1d518:	movt	r0, #3
   1d51c:	bl	11158 <__assert_fail@plt>
   1d520:	mov	r3, #0
   1d524:	str	r3, [fp, #-8]
   1d528:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d52c:	add	r2, r3, #4
   1d530:	str	r2, [fp, #-76]	; 0xffffffb4
   1d534:	ldr	r3, [r3]
   1d538:	str	r3, [fp, #-16]
   1d53c:	mov	r3, #32
   1d540:	str	r3, [fp, #-20]	; 0xffffffec
   1d544:	ldr	r3, [fp, #-16]
   1d548:	str	r3, [fp, #-24]	; 0xffffffe8
   1d54c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d550:	str	r3, [fp, #-28]	; 0xffffffe4
   1d554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d558:	uxth	r3, r3
   1d55c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d564:	lsr	r3, r3, #16
   1d568:	str	r3, [fp, #-36]	; 0xffffffdc
   1d56c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d570:	uxth	r3, r3
   1d574:	str	r3, [fp, #-40]	; 0xffffffd8
   1d578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d57c:	lsr	r3, r3, #16
   1d580:	str	r3, [fp, #-44]	; 0xffffffd4
   1d584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d588:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d58c:	mul	r3, r2, r3
   1d590:	str	r3, [fp, #-48]	; 0xffffffd0
   1d594:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d598:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d59c:	mul	r3, r2, r3
   1d5a0:	str	r3, [fp, #-52]	; 0xffffffcc
   1d5a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d5a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d5ac:	mul	r3, r2, r3
   1d5b0:	str	r3, [fp, #-56]	; 0xffffffc8
   1d5b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d5b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d5bc:	mul	r3, r2, r3
   1d5c0:	str	r3, [fp, #-12]
   1d5c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d5c8:	lsr	r3, r3, #16
   1d5cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d5d0:	add	r3, r2, r3
   1d5d4:	str	r3, [fp, #-52]	; 0xffffffcc
   1d5d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d5dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d5e0:	add	r3, r2, r3
   1d5e4:	str	r3, [fp, #-52]	; 0xffffffcc
   1d5e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d5ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d5f0:	cmp	r2, r3
   1d5f4:	bcs	1d604 <__assert_fail@plt+0xc4ac>
   1d5f8:	ldr	r3, [fp, #-12]
   1d5fc:	add	r3, r3, #65536	; 0x10000
   1d600:	str	r3, [fp, #-12]
   1d604:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d608:	lsr	r3, r3, #16
   1d60c:	ldr	r2, [fp, #-12]
   1d610:	add	r3, r2, r3
   1d614:	str	r3, [fp, #-60]	; 0xffffffc4
   1d618:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d61c:	lsl	r2, r3, #16
   1d620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d624:	uxth	r3, r3
   1d628:	add	r3, r2, r3
   1d62c:	str	r3, [fp, #-64]	; 0xffffffc0
   1d630:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d634:	ldr	r3, [fp, #-8]
   1d638:	add	r3, r2, r3
   1d63c:	str	r3, [fp, #-64]	; 0xffffffc0
   1d640:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d644:	ldr	r3, [fp, #-8]
   1d648:	cmp	r2, r3
   1d64c:	movcc	r3, #1
   1d650:	movcs	r3, #0
   1d654:	uxtb	r3, r3
   1d658:	mov	r2, r3
   1d65c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d660:	add	r3, r3, r2
   1d664:	str	r3, [fp, #-8]
   1d668:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d66c:	ldr	r3, [r3]
   1d670:	str	r3, [fp, #-68]	; 0xffffffbc
   1d674:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d678:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d67c:	add	r3, r2, r3
   1d680:	str	r3, [fp, #-64]	; 0xffffffc0
   1d684:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d688:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d68c:	cmp	r2, r3
   1d690:	movcc	r3, #1
   1d694:	movcs	r3, #0
   1d698:	uxtb	r3, r3
   1d69c:	mov	r2, r3
   1d6a0:	ldr	r3, [fp, #-8]
   1d6a4:	add	r3, r3, r2
   1d6a8:	str	r3, [fp, #-8]
   1d6ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d6b0:	add	r2, r3, #4
   1d6b4:	str	r2, [fp, #-72]	; 0xffffffb8
   1d6b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d6bc:	str	r2, [r3]
   1d6c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6c4:	sub	r3, r3, #1
   1d6c8:	str	r3, [fp, #-80]	; 0xffffffb0
   1d6cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6d0:	cmp	r3, #0
   1d6d4:	bne	1d528 <__assert_fail@plt+0xc3d0>
   1d6d8:	ldr	r3, [fp, #-8]
   1d6dc:	mov	r0, r3
   1d6e0:	sub	sp, fp, #4
   1d6e4:	ldr	fp, [sp]
   1d6e8:	add	sp, sp, #4
   1d6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6f0:	str	fp, [sp, #-8]!
   1d6f4:	str	lr, [sp, #4]
   1d6f8:	add	fp, sp, #4
   1d6fc:	sub	sp, sp, #80	; 0x50
   1d700:	str	r0, [fp, #-72]	; 0xffffffb8
   1d704:	str	r1, [fp, #-76]	; 0xffffffb4
   1d708:	str	r2, [fp, #-80]	; 0xffffffb0
   1d70c:	str	r3, [fp, #-84]	; 0xffffffac
   1d710:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d714:	cmp	r3, #0
   1d718:	bgt	1d73c <__assert_fail@plt+0xc5e4>
   1d71c:	movw	r3, #24036	; 0x5de4
   1d720:	movt	r3, #3
   1d724:	movw	r2, #594	; 0x252
   1d728:	movw	r1, #22376	; 0x5768
   1d72c:	movt	r1, #3
   1d730:	movw	r0, #22520	; 0x57f8
   1d734:	movt	r0, #3
   1d738:	bl	11158 <__assert_fail@plt>
   1d73c:	mov	r3, #0
   1d740:	str	r3, [fp, #-8]
   1d744:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d748:	add	r2, r3, #4
   1d74c:	str	r2, [fp, #-76]	; 0xffffffb4
   1d750:	ldr	r3, [r3]
   1d754:	str	r3, [fp, #-16]
   1d758:	mov	r3, #32
   1d75c:	str	r3, [fp, #-20]	; 0xffffffec
   1d760:	ldr	r3, [fp, #-16]
   1d764:	str	r3, [fp, #-24]	; 0xffffffe8
   1d768:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d76c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d774:	uxth	r3, r3
   1d778:	str	r3, [fp, #-32]	; 0xffffffe0
   1d77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d780:	lsr	r3, r3, #16
   1d784:	str	r3, [fp, #-36]	; 0xffffffdc
   1d788:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d78c:	uxth	r3, r3
   1d790:	str	r3, [fp, #-40]	; 0xffffffd8
   1d794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d798:	lsr	r3, r3, #16
   1d79c:	str	r3, [fp, #-44]	; 0xffffffd4
   1d7a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d7a8:	mul	r3, r2, r3
   1d7ac:	str	r3, [fp, #-48]	; 0xffffffd0
   1d7b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d7b8:	mul	r3, r2, r3
   1d7bc:	str	r3, [fp, #-52]	; 0xffffffcc
   1d7c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d7c8:	mul	r3, r2, r3
   1d7cc:	str	r3, [fp, #-56]	; 0xffffffc8
   1d7d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d7d8:	mul	r3, r2, r3
   1d7dc:	str	r3, [fp, #-12]
   1d7e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d7e4:	lsr	r3, r3, #16
   1d7e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d7ec:	add	r3, r2, r3
   1d7f0:	str	r3, [fp, #-52]	; 0xffffffcc
   1d7f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d7f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d7fc:	add	r3, r2, r3
   1d800:	str	r3, [fp, #-52]	; 0xffffffcc
   1d804:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d808:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d80c:	cmp	r2, r3
   1d810:	bcs	1d820 <__assert_fail@plt+0xc6c8>
   1d814:	ldr	r3, [fp, #-12]
   1d818:	add	r3, r3, #65536	; 0x10000
   1d81c:	str	r3, [fp, #-12]
   1d820:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d824:	lsr	r3, r3, #16
   1d828:	ldr	r2, [fp, #-12]
   1d82c:	add	r3, r2, r3
   1d830:	str	r3, [fp, #-60]	; 0xffffffc4
   1d834:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d838:	lsl	r2, r3, #16
   1d83c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d840:	uxth	r3, r3
   1d844:	add	r3, r2, r3
   1d848:	str	r3, [fp, #-64]	; 0xffffffc0
   1d84c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d850:	ldr	r3, [fp, #-8]
   1d854:	add	r3, r2, r3
   1d858:	str	r3, [fp, #-64]	; 0xffffffc0
   1d85c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d860:	ldr	r3, [fp, #-8]
   1d864:	cmp	r2, r3
   1d868:	movcc	r3, #1
   1d86c:	movcs	r3, #0
   1d870:	uxtb	r3, r3
   1d874:	mov	r2, r3
   1d878:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d87c:	add	r3, r3, r2
   1d880:	str	r3, [fp, #-8]
   1d884:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d888:	ldr	r3, [r3]
   1d88c:	str	r3, [fp, #-68]	; 0xffffffbc
   1d890:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d894:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d898:	sub	r3, r2, r3
   1d89c:	str	r3, [fp, #-64]	; 0xffffffc0
   1d8a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d8a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d8a8:	cmp	r2, r3
   1d8ac:	movhi	r3, #1
   1d8b0:	movls	r3, #0
   1d8b4:	uxtb	r3, r3
   1d8b8:	mov	r2, r3
   1d8bc:	ldr	r3, [fp, #-8]
   1d8c0:	add	r3, r3, r2
   1d8c4:	str	r3, [fp, #-8]
   1d8c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d8cc:	add	r2, r3, #4
   1d8d0:	str	r2, [fp, #-72]	; 0xffffffb8
   1d8d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d8d8:	str	r2, [r3]
   1d8dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d8e0:	sub	r3, r3, #1
   1d8e4:	str	r3, [fp, #-80]	; 0xffffffb0
   1d8e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d8ec:	cmp	r3, #0
   1d8f0:	bne	1d744 <__assert_fail@plt+0xc5ec>
   1d8f4:	ldr	r3, [fp, #-8]
   1d8f8:	mov	r0, r3
   1d8fc:	sub	sp, fp, #4
   1d900:	ldr	fp, [sp]
   1d904:	add	sp, sp, #4
   1d908:	pop	{pc}		; (ldr pc, [sp], #4)
   1d90c:	str	r4, [sp, #-12]!
   1d910:	str	fp, [sp, #4]
   1d914:	str	lr, [sp, #8]
   1d918:	add	fp, sp, #8
   1d91c:	sub	sp, sp, #20
   1d920:	str	r0, [fp, #-16]
   1d924:	str	r1, [fp, #-20]	; 0xffffffec
   1d928:	str	r2, [fp, #-24]	; 0xffffffe8
   1d92c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d934:	ldr	r3, [fp, #4]
   1d938:	cmp	r2, r3
   1d93c:	bge	1d960 <__assert_fail@plt+0xc808>
   1d940:	movw	r3, #24052	; 0x5df4
   1d944:	movt	r3, #3
   1d948:	movw	r2, #618	; 0x26a
   1d94c:	movw	r1, #22376	; 0x5768
   1d950:	movt	r1, #3
   1d954:	movw	r0, #22528	; 0x5800
   1d958:	movt	r0, #3
   1d95c:	bl	11158 <__assert_fail@plt>
   1d960:	ldr	r3, [fp, #4]
   1d964:	cmp	r3, #0
   1d968:	bgt	1d98c <__assert_fail@plt+0xc834>
   1d96c:	movw	r3, #24052	; 0x5df4
   1d970:	movt	r3, #3
   1d974:	movw	r2, #619	; 0x26b
   1d978:	movw	r1, #22376	; 0x5768
   1d97c:	movt	r1, #3
   1d980:	movw	r0, #22540	; 0x580c
   1d984:	movt	r0, #3
   1d988:	bl	11158 <__assert_fail@plt>
   1d98c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d990:	ldr	r3, [fp, #4]
   1d994:	add	r3, r2, r3
   1d998:	lsl	r3, r3, #2
   1d99c:	ldr	r2, [fp, #-16]
   1d9a0:	add	r3, r2, r3
   1d9a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d9a8:	cmp	r2, r3
   1d9ac:	bcs	1d9ec <__assert_fail@plt+0xc894>
   1d9b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9b4:	lsl	r3, r3, #2
   1d9b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d9bc:	add	r3, r2, r3
   1d9c0:	ldr	r2, [fp, #-16]
   1d9c4:	cmp	r2, r3
   1d9c8:	bcs	1d9ec <__assert_fail@plt+0xc894>
   1d9cc:	movw	r3, #24052	; 0x5df4
   1d9d0:	movt	r3, #3
   1d9d4:	mov	r2, #620	; 0x26c
   1d9d8:	movw	r1, #22376	; 0x5768
   1d9dc:	movt	r1, #3
   1d9e0:	movw	r0, #22548	; 0x5814
   1d9e4:	movt	r0, #3
   1d9e8:	bl	11158 <__assert_fail@plt>
   1d9ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9f0:	ldr	r3, [fp, #4]
   1d9f4:	add	r3, r2, r3
   1d9f8:	lsl	r3, r3, #2
   1d9fc:	ldr	r2, [fp, #-16]
   1da00:	add	r3, r2, r3
   1da04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1da08:	cmp	r2, r3
   1da0c:	bcs	1da4c <__assert_fail@plt+0xc8f4>
   1da10:	ldr	r3, [fp, #4]
   1da14:	lsl	r3, r3, #2
   1da18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1da1c:	add	r3, r2, r3
   1da20:	ldr	r2, [fp, #-16]
   1da24:	cmp	r2, r3
   1da28:	bcs	1da4c <__assert_fail@plt+0xc8f4>
   1da2c:	movw	r3, #24052	; 0x5df4
   1da30:	movt	r3, #3
   1da34:	movw	r2, #621	; 0x26d
   1da38:	movw	r1, #22376	; 0x5768
   1da3c:	movt	r1, #3
   1da40:	movw	r0, #22588	; 0x583c
   1da44:	movt	r0, #3
   1da48:	bl	11158 <__assert_fail@plt>
   1da4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da50:	ldr	r1, [r3]
   1da54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da58:	lsl	r3, r3, #2
   1da5c:	ldr	r2, [fp, #-16]
   1da60:	add	r4, r2, r3
   1da64:	mov	r3, r1
   1da68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1da70:	ldr	r0, [fp, #-16]
   1da74:	bl	1d2fc <__assert_fail@plt+0xc1a4>
   1da78:	mov	r3, r0
   1da7c:	str	r3, [r4]
   1da80:	b	1dad0 <__assert_fail@plt+0xc978>
   1da84:	ldr	r3, [fp, #-16]
   1da88:	add	r3, r3, #4
   1da8c:	str	r3, [fp, #-16]
   1da90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da94:	add	r3, r3, #4
   1da98:	str	r3, [fp, #-28]	; 0xffffffe4
   1da9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1daa0:	ldr	r1, [r3]
   1daa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daa8:	lsl	r3, r3, #2
   1daac:	ldr	r2, [fp, #-16]
   1dab0:	add	r4, r2, r3
   1dab4:	mov	r3, r1
   1dab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dabc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dac0:	ldr	r0, [fp, #-16]
   1dac4:	bl	1d4d4 <__assert_fail@plt+0xc37c>
   1dac8:	mov	r3, r0
   1dacc:	str	r3, [r4]
   1dad0:	ldr	r3, [fp, #4]
   1dad4:	sub	r3, r3, #1
   1dad8:	str	r3, [fp, #4]
   1dadc:	ldr	r3, [fp, #4]
   1dae0:	cmp	r3, #0
   1dae4:	bgt	1da84 <__assert_fail@plt+0xc92c>
   1dae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daec:	lsl	r3, r3, #2
   1daf0:	ldr	r2, [fp, #-16]
   1daf4:	add	r3, r2, r3
   1daf8:	ldr	r3, [r3]
   1dafc:	mov	r0, r3
   1db00:	sub	sp, fp, #8
   1db04:	ldr	r4, [sp]
   1db08:	ldr	fp, [sp, #4]
   1db0c:	add	sp, sp, #8
   1db10:	pop	{pc}		; (ldr pc, [sp], #4)
   1db14:	str	fp, [sp, #-8]!
   1db18:	str	lr, [sp, #4]
   1db1c:	add	fp, sp, #4
   1db20:	sub	sp, sp, #24
   1db24:	str	r0, [fp, #-8]
   1db28:	str	r1, [fp, #-12]
   1db2c:	str	r2, [fp, #-16]
   1db30:	str	r3, [fp, #-20]	; 0xffffffec
   1db34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db38:	str	r3, [sp]
   1db3c:	ldr	r3, [fp, #-16]
   1db40:	ldr	r2, [fp, #-20]	; 0xffffffec
   1db44:	ldr	r1, [fp, #-12]
   1db48:	ldr	r0, [fp, #-8]
   1db4c:	bl	1d90c <__assert_fail@plt+0xc7b4>
   1db50:	nop	{0}
   1db54:	sub	sp, fp, #4
   1db58:	ldr	fp, [sp]
   1db5c:	add	sp, sp, #4
   1db60:	pop	{pc}		; (ldr pc, [sp], #4)
   1db64:	str	fp, [sp, #-8]!
   1db68:	str	lr, [sp, #4]
   1db6c:	add	fp, sp, #4
   1db70:	sub	sp, sp, #24
   1db74:	str	r0, [fp, #-8]
   1db78:	str	r1, [fp, #-12]
   1db7c:	str	r2, [fp, #-16]
   1db80:	ldr	r3, [fp, #-16]
   1db84:	str	r3, [sp]
   1db88:	ldr	r3, [fp, #-12]
   1db8c:	ldr	r2, [fp, #-16]
   1db90:	ldr	r1, [fp, #-12]
   1db94:	ldr	r0, [fp, #-8]
   1db98:	bl	1d90c <__assert_fail@plt+0xc7b4>
   1db9c:	nop	{0}
   1dba0:	sub	sp, fp, #4
   1dba4:	ldr	fp, [sp]
   1dba8:	add	sp, sp, #4
   1dbac:	pop	{pc}		; (ldr pc, [sp], #4)
   1dbb0:	str	fp, [sp, #-8]!
   1dbb4:	str	lr, [sp, #4]
   1dbb8:	add	fp, sp, #4
   1dbbc:	sub	sp, sp, #32
   1dbc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1dbc4:	str	r1, [fp, #-28]	; 0xffffffe4
   1dbc8:	str	r2, [fp, #-32]	; 0xffffffe0
   1dbcc:	str	r3, [fp, #-36]	; 0xffffffdc
   1dbd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbd4:	cmp	r3, #0
   1dbd8:	bgt	1dbfc <__assert_fail@plt+0xcaa4>
   1dbdc:	movw	r3, #24060	; 0x5dfc
   1dbe0:	movt	r3, #3
   1dbe4:	movw	r2, #659	; 0x293
   1dbe8:	movw	r1, #22376	; 0x5768
   1dbec:	movt	r1, #3
   1dbf0:	movw	r0, #22520	; 0x57f8
   1dbf4:	movt	r0, #3
   1dbf8:	bl	11158 <__assert_fail@plt>
   1dbfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc00:	cmp	r3, #0
   1dc04:	bne	1dc28 <__assert_fail@plt+0xcad0>
   1dc08:	movw	r3, #24060	; 0x5dfc
   1dc0c:	movt	r3, #3
   1dc10:	mov	r2, #660	; 0x294
   1dc14:	movw	r1, #22376	; 0x5768
   1dc18:	movt	r1, #3
   1dc1c:	movw	r0, #22628	; 0x5864
   1dc20:	movt	r0, #3
   1dc24:	bl	11158 <__assert_fail@plt>
   1dc28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc2c:	cmp	r3, #31
   1dc30:	bls	1dc54 <__assert_fail@plt+0xcafc>
   1dc34:	movw	r3, #24060	; 0x5dfc
   1dc38:	movt	r3, #3
   1dc3c:	movw	r2, #661	; 0x295
   1dc40:	movw	r1, #22376	; 0x5768
   1dc44:	movt	r1, #3
   1dc48:	movw	r0, #22640	; 0x5870
   1dc4c:	movt	r0, #3
   1dc50:	bl	11158 <__assert_fail@plt>
   1dc54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc58:	lsl	r3, r3, #2
   1dc5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dc60:	add	r3, r2, r3
   1dc64:	str	r3, [fp, #-28]	; 0xffffffe4
   1dc68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc6c:	lsl	r3, r3, #2
   1dc70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dc74:	add	r3, r2, r3
   1dc78:	str	r3, [fp, #-24]	; 0xffffffe8
   1dc7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc80:	rsb	r3, r3, #32
   1dc84:	str	r3, [fp, #-12]
   1dc88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc8c:	sub	r3, r3, #4
   1dc90:	str	r3, [fp, #-28]	; 0xffffffe4
   1dc94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc98:	ldr	r3, [r3]
   1dc9c:	str	r3, [fp, #-16]
   1dca0:	ldr	r2, [fp, #-16]
   1dca4:	ldr	r3, [fp, #-12]
   1dca8:	lsr	r3, r2, r3
   1dcac:	str	r3, [fp, #-20]	; 0xffffffec
   1dcb0:	ldr	r2, [fp, #-16]
   1dcb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dcb8:	lsl	r3, r2, r3
   1dcbc:	str	r3, [fp, #-8]
   1dcc0:	b	1dd14 <__assert_fail@plt+0xcbbc>
   1dcc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dcc8:	sub	r3, r3, #4
   1dccc:	str	r3, [fp, #-28]	; 0xffffffe4
   1dcd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dcd4:	ldr	r3, [r3]
   1dcd8:	str	r3, [fp, #-16]
   1dcdc:	ldr	r2, [fp, #-16]
   1dce0:	ldr	r3, [fp, #-12]
   1dce4:	lsr	r2, r2, r3
   1dce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dcec:	sub	r3, r3, #4
   1dcf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1dcf4:	ldr	r3, [fp, #-8]
   1dcf8:	orr	r2, r2, r3
   1dcfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd00:	str	r2, [r3]
   1dd04:	ldr	r2, [fp, #-16]
   1dd08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dd0c:	lsl	r3, r2, r3
   1dd10:	str	r3, [fp, #-8]
   1dd14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd18:	sub	r3, r3, #1
   1dd1c:	str	r3, [fp, #-32]	; 0xffffffe0
   1dd20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd24:	cmp	r3, #0
   1dd28:	bne	1dcc4 <__assert_fail@plt+0xcb6c>
   1dd2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd30:	sub	r3, r3, #4
   1dd34:	str	r3, [fp, #-24]	; 0xffffffe8
   1dd38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd3c:	ldr	r2, [fp, #-8]
   1dd40:	str	r2, [r3]
   1dd44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd48:	mov	r0, r3
   1dd4c:	sub	sp, fp, #4
   1dd50:	ldr	fp, [sp]
   1dd54:	add	sp, sp, #4
   1dd58:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd5c:	str	fp, [sp, #-8]!
   1dd60:	str	lr, [sp, #4]
   1dd64:	add	fp, sp, #4
   1dd68:	sub	sp, sp, #32
   1dd6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd70:	str	r1, [fp, #-28]	; 0xffffffe4
   1dd74:	str	r2, [fp, #-32]	; 0xffffffe0
   1dd78:	str	r3, [fp, #-36]	; 0xffffffdc
   1dd7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd80:	cmp	r3, #0
   1dd84:	bgt	1dda8 <__assert_fail@plt+0xcc50>
   1dd88:	movw	r3, #24072	; 0x5e08
   1dd8c:	movt	r3, #3
   1dd90:	movw	r2, #689	; 0x2b1
   1dd94:	movw	r1, #22376	; 0x5768
   1dd98:	movt	r1, #3
   1dd9c:	movw	r0, #22520	; 0x57f8
   1dda0:	movt	r0, #3
   1dda4:	bl	11158 <__assert_fail@plt>
   1dda8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ddac:	cmp	r3, #0
   1ddb0:	bne	1ddd4 <__assert_fail@plt+0xcc7c>
   1ddb4:	movw	r3, #24072	; 0x5e08
   1ddb8:	movt	r3, #3
   1ddbc:	movw	r2, #690	; 0x2b2
   1ddc0:	movw	r1, #22376	; 0x5768
   1ddc4:	movt	r1, #3
   1ddc8:	movw	r0, #22628	; 0x5864
   1ddcc:	movt	r0, #3
   1ddd0:	bl	11158 <__assert_fail@plt>
   1ddd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ddd8:	cmp	r3, #31
   1dddc:	bls	1de00 <__assert_fail@plt+0xcca8>
   1dde0:	movw	r3, #24072	; 0x5e08
   1dde4:	movt	r3, #3
   1dde8:	movw	r2, #691	; 0x2b3
   1ddec:	movw	r1, #22376	; 0x5768
   1ddf0:	movt	r1, #3
   1ddf4:	movw	r0, #22640	; 0x5870
   1ddf8:	movt	r0, #3
   1ddfc:	bl	11158 <__assert_fail@plt>
   1de00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1de04:	rsb	r3, r3, #32
   1de08:	str	r3, [fp, #-12]
   1de0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de10:	add	r2, r3, #4
   1de14:	str	r2, [fp, #-28]	; 0xffffffe4
   1de18:	ldr	r3, [r3]
   1de1c:	str	r3, [fp, #-16]
   1de20:	ldr	r2, [fp, #-16]
   1de24:	ldr	r3, [fp, #-12]
   1de28:	lsl	r3, r2, r3
   1de2c:	str	r3, [fp, #-20]	; 0xffffffec
   1de30:	ldr	r2, [fp, #-16]
   1de34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1de38:	lsr	r3, r2, r3
   1de3c:	str	r3, [fp, #-8]
   1de40:	b	1de8c <__assert_fail@plt+0xcd34>
   1de44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de48:	add	r2, r3, #4
   1de4c:	str	r2, [fp, #-28]	; 0xffffffe4
   1de50:	ldr	r3, [r3]
   1de54:	str	r3, [fp, #-16]
   1de58:	ldr	r2, [fp, #-16]
   1de5c:	ldr	r3, [fp, #-12]
   1de60:	lsl	r1, r2, r3
   1de64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de68:	add	r2, r3, #4
   1de6c:	str	r2, [fp, #-24]	; 0xffffffe8
   1de70:	ldr	r2, [fp, #-8]
   1de74:	orr	r2, r1, r2
   1de78:	str	r2, [r3]
   1de7c:	ldr	r2, [fp, #-16]
   1de80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1de84:	lsr	r3, r2, r3
   1de88:	str	r3, [fp, #-8]
   1de8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de90:	sub	r3, r3, #1
   1de94:	str	r3, [fp, #-32]	; 0xffffffe0
   1de98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de9c:	cmp	r3, #0
   1dea0:	bne	1de44 <__assert_fail@plt+0xccec>
   1dea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dea8:	ldr	r2, [fp, #-8]
   1deac:	str	r2, [r3]
   1deb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1deb4:	mov	r0, r3
   1deb8:	sub	sp, fp, #4
   1debc:	ldr	fp, [sp]
   1dec0:	add	sp, sp, #4
   1dec4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dec8:	str	fp, [sp, #-8]!
   1decc:	str	lr, [sp, #4]
   1ded0:	add	fp, sp, #4
   1ded4:	sub	sp, sp, #40	; 0x28
   1ded8:	str	r0, [fp, #-32]	; 0xffffffe0
   1dedc:	str	r1, [fp, #-36]	; 0xffffffdc
   1dee0:	str	r2, [fp, #-40]	; 0xffffffd8
   1dee4:	str	r3, [fp, #-44]	; 0xffffffd4
   1dee8:	ldr	r3, [fp, #4]
   1deec:	cmp	r3, #0
   1def0:	beq	1df20 <__assert_fail@plt+0xcdc8>
   1def4:	ldr	r3, [fp, #4]
   1def8:	cmn	r3, #1
   1defc:	beq	1df20 <__assert_fail@plt+0xcdc8>
   1df00:	movw	r3, #24084	; 0x5e14
   1df04:	movt	r3, #3
   1df08:	movw	r2, #715	; 0x2cb
   1df0c:	movw	r1, #22376	; 0x5768
   1df10:	movt	r1, #3
   1df14:	movw	r0, #22660	; 0x5884
   1df18:	movt	r0, #3
   1df1c:	bl	11158 <__assert_fail@plt>
   1df20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1df24:	cmp	r3, #0
   1df28:	blt	1df3c <__assert_fail@plt+0xcde4>
   1df2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1df30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df34:	cmp	r2, r3
   1df38:	ble	1df5c <__assert_fail@plt+0xce04>
   1df3c:	movw	r3, #24084	; 0x5e14
   1df40:	movt	r3, #3
   1df44:	mov	r2, #716	; 0x2cc
   1df48:	movw	r1, #22376	; 0x5768
   1df4c:	movt	r1, #3
   1df50:	movw	r0, #22692	; 0x58a4
   1df54:	movt	r0, #3
   1df58:	bl	11158 <__assert_fail@plt>
   1df5c:	b	1dfbc <__assert_fail@plt+0xce64>
   1df60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1df64:	add	r3, r3, #1
   1df68:	str	r3, [fp, #-36]	; 0xffffffdc
   1df6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1df70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df74:	cmp	r2, r3
   1df78:	bne	1df9c <__assert_fail@plt+0xce44>
   1df7c:	ldr	r3, [fp, #4]
   1df80:	cmp	r3, #0
   1df84:	beq	1df94 <__assert_fail@plt+0xce3c>
   1df88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df8c:	lsl	r3, r3, #5
   1df90:	b	1e084 <__assert_fail@plt+0xcf2c>
   1df94:	mvn	r3, #0
   1df98:	b	1e084 <__assert_fail@plt+0xcf2c>
   1df9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfa0:	lsl	r3, r3, #2
   1dfa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dfa8:	add	r3, r2, r3
   1dfac:	ldr	r3, [r3]
   1dfb0:	ldr	r2, [fp, #4]
   1dfb4:	eor	r3, r3, r2
   1dfb8:	str	r3, [fp, #-32]	; 0xffffffe0
   1dfbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfc0:	cmp	r3, #0
   1dfc4:	beq	1df60 <__assert_fail@plt+0xce08>
   1dfc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfcc:	str	r3, [fp, #-16]
   1dfd0:	mov	r3, #0
   1dfd4:	str	r3, [fp, #-20]	; 0xffffffec
   1dfd8:	ldr	r3, [fp, #-16]
   1dfdc:	rsb	r3, r3, #0
   1dfe0:	ldr	r2, [fp, #-16]
   1dfe4:	and	r3, r3, r2
   1dfe8:	str	r3, [fp, #-8]
   1dfec:	mov	r3, #0
   1dff0:	str	r3, [fp, #-12]
   1dff4:	mov	r3, #8
   1dff8:	str	r3, [fp, #-24]	; 0xffffffe8
   1dffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e000:	cmp	r3, #31
   1e004:	bhi	1e054 <__assert_fail@plt+0xcefc>
   1e008:	b	1e028 <__assert_fail@plt+0xced0>
   1e00c:	ldr	r2, [fp, #-8]
   1e010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e014:	lsl	r3, r2, r3
   1e018:	str	r3, [fp, #-8]
   1e01c:	ldr	r3, [fp, #-12]
   1e020:	add	r3, r3, #8
   1e024:	str	r3, [fp, #-12]
   1e028:	ldr	r3, [fp, #-8]
   1e02c:	and	r3, r3, #-16777216	; 0xff000000
   1e030:	cmp	r3, #0
   1e034:	beq	1e00c <__assert_fail@plt+0xceb4>
   1e038:	b	1e054 <__assert_fail@plt+0xcefc>
   1e03c:	ldr	r3, [fp, #-8]
   1e040:	lsl	r3, r3, #1
   1e044:	str	r3, [fp, #-8]
   1e048:	ldr	r3, [fp, #-12]
   1e04c:	add	r3, r3, #1
   1e050:	str	r3, [fp, #-12]
   1e054:	ldr	r3, [fp, #-8]
   1e058:	cmp	r3, #0
   1e05c:	bge	1e03c <__assert_fail@plt+0xcee4>
   1e060:	ldr	r3, [fp, #-12]
   1e064:	str	r3, [fp, #-20]	; 0xffffffec
   1e068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e06c:	rsb	r3, r3, #31
   1e070:	str	r3, [fp, #-28]	; 0xffffffe4
   1e074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e078:	lsl	r2, r3, #5
   1e07c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e080:	add	r3, r2, r3
   1e084:	mov	r0, r3
   1e088:	sub	sp, fp, #4
   1e08c:	ldr	fp, [sp]
   1e090:	add	sp, sp, #4
   1e094:	pop	{pc}		; (ldr pc, [sp], #4)
   1e098:	str	fp, [sp, #-8]!
   1e09c:	str	lr, [sp, #4]
   1e0a0:	add	fp, sp, #4
   1e0a4:	sub	sp, sp, #24
   1e0a8:	str	r0, [fp, #-16]
   1e0ac:	str	r1, [fp, #-20]	; 0xffffffec
   1e0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e0b4:	lsr	r3, r3, #5
   1e0b8:	str	r3, [fp, #-8]
   1e0bc:	ldr	r3, [fp, #-8]
   1e0c0:	lsl	r3, r3, #2
   1e0c4:	ldr	r2, [fp, #-16]
   1e0c8:	add	r3, r2, r3
   1e0cc:	ldr	r2, [r3]
   1e0d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e0d4:	and	r3, r3, #31
   1e0d8:	mvn	r1, #0
   1e0dc:	lsl	r3, r1, r3
   1e0e0:	and	r0, r2, r3
   1e0e4:	mov	r3, #0
   1e0e8:	str	r3, [sp]
   1e0ec:	ldr	r3, [fp, #-8]
   1e0f0:	ldr	r2, [fp, #-16]
   1e0f4:	ldr	r1, [fp, #-8]
   1e0f8:	bl	1dec8 <__assert_fail@plt+0xcd70>
   1e0fc:	mov	r3, r0
   1e100:	mov	r0, r3
   1e104:	sub	sp, fp, #4
   1e108:	ldr	fp, [sp]
   1e10c:	add	sp, sp, #4
   1e110:	pop	{pc}		; (ldr pc, [sp], #4)
   1e114:	str	fp, [sp, #-8]!
   1e118:	str	lr, [sp, #4]
   1e11c:	add	fp, sp, #4
   1e120:	sub	sp, sp, #24
   1e124:	str	r0, [fp, #-16]
   1e128:	str	r1, [fp, #-20]	; 0xffffffec
   1e12c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e130:	lsr	r3, r3, #5
   1e134:	str	r3, [fp, #-8]
   1e138:	ldr	r3, [fp, #-8]
   1e13c:	lsl	r3, r3, #2
   1e140:	ldr	r2, [fp, #-16]
   1e144:	add	r3, r2, r3
   1e148:	ldr	r3, [r3]
   1e14c:	mvn	r2, r3
   1e150:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e154:	and	r3, r3, #31
   1e158:	mvn	r1, #0
   1e15c:	lsl	r3, r1, r3
   1e160:	and	r0, r2, r3
   1e164:	mvn	r3, #0
   1e168:	str	r3, [sp]
   1e16c:	ldr	r3, [fp, #-8]
   1e170:	ldr	r2, [fp, #-16]
   1e174:	ldr	r1, [fp, #-8]
   1e178:	bl	1dec8 <__assert_fail@plt+0xcd70>
   1e17c:	mov	r3, r0
   1e180:	mov	r0, r3
   1e184:	sub	sp, fp, #4
   1e188:	ldr	fp, [sp]
   1e18c:	add	sp, sp, #4
   1e190:	pop	{pc}		; (ldr pc, [sp], #4)
   1e194:	push	{fp}		; (str fp, [sp, #-4]!)
   1e198:	add	fp, sp, #0
   1e19c:	sub	sp, sp, #20
   1e1a0:	str	r0, [fp, #-8]
   1e1a4:	str	r1, [fp, #-12]
   1e1a8:	str	r2, [fp, #-16]
   1e1ac:	b	1e1d4 <__assert_fail@plt+0xd07c>
   1e1b0:	ldr	r3, [fp, #-12]
   1e1b4:	add	r2, r3, #4
   1e1b8:	str	r2, [fp, #-12]
   1e1bc:	ldr	r2, [r3]
   1e1c0:	ldr	r3, [fp, #-8]
   1e1c4:	add	r1, r3, #4
   1e1c8:	str	r1, [fp, #-8]
   1e1cc:	mvn	r2, r2
   1e1d0:	str	r2, [r3]
   1e1d4:	ldr	r3, [fp, #-16]
   1e1d8:	sub	r3, r3, #1
   1e1dc:	str	r3, [fp, #-16]
   1e1e0:	ldr	r3, [fp, #-16]
   1e1e4:	cmp	r3, #0
   1e1e8:	bge	1e1b0 <__assert_fail@plt+0xd058>
   1e1ec:	nop	{0}
   1e1f0:	add	sp, fp, #0
   1e1f4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e1f8:	bx	lr
   1e1fc:	str	fp, [sp, #-8]!
   1e200:	str	lr, [sp, #4]
   1e204:	add	fp, sp, #4
   1e208:	sub	sp, sp, #16
   1e20c:	str	r0, [fp, #-8]
   1e210:	str	r1, [fp, #-12]
   1e214:	str	r2, [fp, #-16]
   1e218:	b	1e260 <__assert_fail@plt+0xd108>
   1e21c:	ldr	r3, [fp, #-8]
   1e220:	mov	r2, #0
   1e224:	str	r2, [r3]
   1e228:	ldr	r3, [fp, #-16]
   1e22c:	sub	r3, r3, #1
   1e230:	str	r3, [fp, #-16]
   1e234:	ldr	r3, [fp, #-16]
   1e238:	cmp	r3, #0
   1e23c:	bne	1e248 <__assert_fail@plt+0xd0f0>
   1e240:	mov	r3, #0
   1e244:	b	1e2bc <__assert_fail@plt+0xd164>
   1e248:	ldr	r3, [fp, #-12]
   1e24c:	add	r3, r3, #4
   1e250:	str	r3, [fp, #-12]
   1e254:	ldr	r3, [fp, #-8]
   1e258:	add	r3, r3, #4
   1e25c:	str	r3, [fp, #-8]
   1e260:	ldr	r3, [fp, #-12]
   1e264:	ldr	r3, [r3]
   1e268:	cmp	r3, #0
   1e26c:	beq	1e21c <__assert_fail@plt+0xd0c4>
   1e270:	ldr	r3, [fp, #-12]
   1e274:	ldr	r3, [r3]
   1e278:	rsb	r2, r3, #0
   1e27c:	ldr	r3, [fp, #-8]
   1e280:	str	r2, [r3]
   1e284:	ldr	r3, [fp, #-8]
   1e288:	add	r3, r3, #4
   1e28c:	str	r3, [fp, #-8]
   1e290:	ldr	r3, [fp, #-12]
   1e294:	add	r3, r3, #4
   1e298:	str	r3, [fp, #-12]
   1e29c:	ldr	r3, [fp, #-16]
   1e2a0:	sub	r3, r3, #1
   1e2a4:	str	r3, [fp, #-16]
   1e2a8:	ldr	r2, [fp, #-16]
   1e2ac:	ldr	r1, [fp, #-12]
   1e2b0:	ldr	r0, [fp, #-8]
   1e2b4:	bl	1e194 <__assert_fail@plt+0xd03c>
   1e2b8:	mov	r3, #1
   1e2bc:	mov	r0, r3
   1e2c0:	sub	sp, fp, #4
   1e2c4:	ldr	fp, [sp]
   1e2c8:	add	sp, sp, #4
   1e2cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2d0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e2d4:	add	fp, sp, #0
   1e2d8:	sub	sp, sp, #92	; 0x5c
   1e2dc:	str	r0, [fp, #-88]	; 0xffffffa8
   1e2e0:	str	r1, [fp, #-92]	; 0xffffffa4
   1e2e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e2e8:	uxth	r3, r3
   1e2ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1e2f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e2f4:	lsr	r3, r3, #16
   1e2f8:	str	r3, [fp, #-32]	; 0xffffffe0
   1e2fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e300:	mvn	r2, r3
   1e304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e308:	udiv	r3, r2, r3
   1e30c:	str	r3, [fp, #-20]	; 0xffffffec
   1e310:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e314:	mvn	r2, r3
   1e318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e31c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e320:	mul	r3, r1, r3
   1e324:	sub	r3, r2, r3
   1e328:	lsl	r3, r3, #16
   1e32c:	mvn	r3, r3, lsr #16
   1e330:	mvn	r3, r3, lsl #16
   1e334:	str	r3, [fp, #-8]
   1e338:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e33c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e340:	mul	r3, r2, r3
   1e344:	str	r3, [fp, #-36]	; 0xffffffdc
   1e348:	ldr	r2, [fp, #-8]
   1e34c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e350:	cmp	r2, r3
   1e354:	bcs	1e3b0 <__assert_fail@plt+0xd258>
   1e358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e35c:	sub	r3, r3, #1
   1e360:	str	r3, [fp, #-20]	; 0xffffffec
   1e364:	ldr	r2, [fp, #-8]
   1e368:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e36c:	add	r3, r2, r3
   1e370:	str	r3, [fp, #-8]
   1e374:	ldr	r2, [fp, #-8]
   1e378:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e37c:	cmp	r2, r3
   1e380:	bcc	1e3b0 <__assert_fail@plt+0xd258>
   1e384:	ldr	r2, [fp, #-8]
   1e388:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e38c:	cmp	r2, r3
   1e390:	bcs	1e3b0 <__assert_fail@plt+0xd258>
   1e394:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e398:	sub	r3, r3, #1
   1e39c:	str	r3, [fp, #-20]	; 0xffffffec
   1e3a0:	ldr	r2, [fp, #-8]
   1e3a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e3a8:	add	r3, r2, r3
   1e3ac:	str	r3, [fp, #-8]
   1e3b0:	ldr	r2, [fp, #-8]
   1e3b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e3b8:	sub	r3, r2, r3
   1e3bc:	str	r3, [fp, #-8]
   1e3c0:	ldr	r3, [fp, #-8]
   1e3c4:	lsr	r3, r3, #16
   1e3c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e3cc:	mul	r3, r2, r3
   1e3d0:	ldr	r2, [fp, #-8]
   1e3d4:	add	r3, r2, r3
   1e3d8:	str	r3, [fp, #-36]	; 0xffffffdc
   1e3dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e3e0:	lsr	r3, r3, #16
   1e3e4:	add	r3, r3, #1
   1e3e8:	str	r3, [fp, #-16]
   1e3ec:	ldr	r3, [fp, #-8]
   1e3f0:	lsl	r2, r3, #16
   1e3f4:	ldr	r3, [fp, #-16]
   1e3f8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1e3fc:	mul	r3, r1, r3
   1e400:	sub	r3, r2, r3
   1e404:	add	r3, r3, #65280	; 0xff00
   1e408:	add	r3, r3, #255	; 0xff
   1e40c:	str	r3, [fp, #-8]
   1e410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e414:	lsl	r3, r3, #16
   1e418:	ldr	r2, [fp, #-8]
   1e41c:	cmp	r2, r3
   1e420:	bcc	1e440 <__assert_fail@plt+0xd2e8>
   1e424:	ldr	r3, [fp, #-16]
   1e428:	sub	r3, r3, #1
   1e42c:	str	r3, [fp, #-16]
   1e430:	ldr	r2, [fp, #-8]
   1e434:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e438:	add	r3, r2, r3
   1e43c:	str	r3, [fp, #-8]
   1e440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e444:	lsl	r3, r3, #16
   1e448:	ldr	r2, [fp, #-16]
   1e44c:	add	r3, r2, r3
   1e450:	str	r3, [fp, #-12]
   1e454:	ldr	r2, [fp, #-8]
   1e458:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e45c:	cmp	r2, r3
   1e460:	bcc	1e480 <__assert_fail@plt+0xd328>
   1e464:	ldr	r3, [fp, #-12]
   1e468:	add	r3, r3, #1
   1e46c:	str	r3, [fp, #-12]
   1e470:	ldr	r2, [fp, #-8]
   1e474:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e478:	sub	r3, r2, r3
   1e47c:	str	r3, [fp, #-8]
   1e480:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1e484:	cmp	r3, #0
   1e488:	beq	1e688 <__assert_fail@plt+0xd530>
   1e48c:	ldr	r3, [fp, #-8]
   1e490:	mvn	r3, r3
   1e494:	str	r3, [fp, #-8]
   1e498:	ldr	r2, [fp, #-8]
   1e49c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1e4a0:	add	r3, r2, r3
   1e4a4:	str	r3, [fp, #-8]
   1e4a8:	ldr	r2, [fp, #-8]
   1e4ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1e4b0:	cmp	r2, r3
   1e4b4:	bcs	1e500 <__assert_fail@plt+0xd3a8>
   1e4b8:	ldr	r3, [fp, #-12]
   1e4bc:	sub	r3, r3, #1
   1e4c0:	str	r3, [fp, #-12]
   1e4c4:	ldr	r2, [fp, #-8]
   1e4c8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e4cc:	cmp	r2, r3
   1e4d0:	bcc	1e4f0 <__assert_fail@plt+0xd398>
   1e4d4:	ldr	r3, [fp, #-12]
   1e4d8:	sub	r3, r3, #1
   1e4dc:	str	r3, [fp, #-12]
   1e4e0:	ldr	r2, [fp, #-8]
   1e4e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e4e8:	sub	r3, r2, r3
   1e4ec:	str	r3, [fp, #-8]
   1e4f0:	ldr	r2, [fp, #-8]
   1e4f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e4f8:	sub	r3, r2, r3
   1e4fc:	str	r3, [fp, #-8]
   1e500:	mov	r3, #32
   1e504:	str	r3, [fp, #-40]	; 0xffffffd8
   1e508:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1e50c:	str	r3, [fp, #-44]	; 0xffffffd4
   1e510:	ldr	r3, [fp, #-12]
   1e514:	str	r3, [fp, #-48]	; 0xffffffd0
   1e518:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e51c:	uxth	r3, r3
   1e520:	str	r3, [fp, #-52]	; 0xffffffcc
   1e524:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e528:	lsr	r3, r3, #16
   1e52c:	str	r3, [fp, #-56]	; 0xffffffc8
   1e530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e534:	uxth	r3, r3
   1e538:	str	r3, [fp, #-60]	; 0xffffffc4
   1e53c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e540:	lsr	r3, r3, #16
   1e544:	str	r3, [fp, #-64]	; 0xffffffc0
   1e548:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e54c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e550:	mul	r3, r2, r3
   1e554:	str	r3, [fp, #-68]	; 0xffffffbc
   1e558:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e55c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e560:	mul	r3, r2, r3
   1e564:	str	r3, [fp, #-72]	; 0xffffffb8
   1e568:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e56c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e570:	mul	r3, r2, r3
   1e574:	str	r3, [fp, #-76]	; 0xffffffb4
   1e578:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e57c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e580:	mul	r3, r2, r3
   1e584:	str	r3, [fp, #-24]	; 0xffffffe8
   1e588:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e58c:	lsr	r3, r3, #16
   1e590:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e594:	add	r3, r2, r3
   1e598:	str	r3, [fp, #-72]	; 0xffffffb8
   1e59c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e5a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1e5a4:	add	r3, r2, r3
   1e5a8:	str	r3, [fp, #-72]	; 0xffffffb8
   1e5ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e5b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1e5b4:	cmp	r2, r3
   1e5b8:	bcs	1e5c8 <__assert_fail@plt+0xd470>
   1e5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e5c0:	add	r3, r3, #65536	; 0x10000
   1e5c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e5c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5cc:	lsr	r3, r3, #16
   1e5d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e5d4:	add	r3, r2, r3
   1e5d8:	str	r3, [fp, #-80]	; 0xffffffb0
   1e5dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e5e0:	lsl	r2, r3, #16
   1e5e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e5e8:	uxth	r3, r3
   1e5ec:	add	r3, r2, r3
   1e5f0:	str	r3, [fp, #-84]	; 0xffffffac
   1e5f4:	ldr	r2, [fp, #-8]
   1e5f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e5fc:	add	r3, r2, r3
   1e600:	str	r3, [fp, #-8]
   1e604:	ldr	r2, [fp, #-8]
   1e608:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e60c:	cmp	r2, r3
   1e610:	bcs	1e688 <__assert_fail@plt+0xd530>
   1e614:	ldr	r3, [fp, #-12]
   1e618:	sub	r3, r3, #1
   1e61c:	str	r3, [fp, #-12]
   1e620:	ldr	r2, [fp, #-8]
   1e624:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e628:	cmp	r2, r3
   1e62c:	movhi	r3, #1
   1e630:	movls	r3, #0
   1e634:	uxtb	r3, r3
   1e638:	mov	r0, r3
   1e63c:	ldr	r2, [fp, #-8]
   1e640:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e644:	cmp	r2, r3
   1e648:	moveq	r3, #1
   1e64c:	movne	r3, #0
   1e650:	uxtb	r2, r3
   1e654:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e658:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1e65c:	cmp	r1, r3
   1e660:	movhi	r3, #1
   1e664:	movls	r3, #0
   1e668:	uxtb	r3, r3
   1e66c:	and	r3, r3, r2
   1e670:	uxtb	r3, r3
   1e674:	orr	r3, r0, r3
   1e678:	mov	r2, r3
   1e67c:	ldr	r3, [fp, #-12]
   1e680:	sub	r3, r3, r2
   1e684:	str	r3, [fp, #-12]
   1e688:	ldr	r3, [fp, #-12]
   1e68c:	mov	r0, r3
   1e690:	add	sp, fp, #0
   1e694:	pop	{fp}		; (ldr fp, [sp], #4)
   1e698:	bx	lr
   1e69c:	str	fp, [sp, #-8]!
   1e6a0:	str	lr, [sp, #4]
   1e6a4:	add	fp, sp, #4
   1e6a8:	sub	sp, sp, #24
   1e6ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6b0:	str	r1, [fp, #-28]	; 0xffffffe4
   1e6b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6b8:	cmp	r3, #0
   1e6bc:	bne	1e6e0 <__assert_fail@plt+0xd588>
   1e6c0:	movw	r3, #24100	; 0x5e24
   1e6c4:	movt	r3, #3
   1e6c8:	movw	r2, #902	; 0x386
   1e6cc:	movw	r1, #22376	; 0x5768
   1e6d0:	movt	r1, #3
   1e6d4:	movw	r0, #22712	; 0x58b8
   1e6d8:	movt	r0, #3
   1e6dc:	bl	11158 <__assert_fail@plt>
   1e6e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6e4:	str	r3, [fp, #-8]
   1e6e8:	mov	r3, #0
   1e6ec:	str	r3, [fp, #-12]
   1e6f0:	mov	r3, #8
   1e6f4:	str	r3, [fp, #-16]
   1e6f8:	ldr	r3, [fp, #-16]
   1e6fc:	cmp	r3, #31
   1e700:	bhi	1e750 <__assert_fail@plt+0xd5f8>
   1e704:	b	1e724 <__assert_fail@plt+0xd5cc>
   1e708:	ldr	r2, [fp, #-8]
   1e70c:	ldr	r3, [fp, #-16]
   1e710:	lsl	r3, r2, r3
   1e714:	str	r3, [fp, #-8]
   1e718:	ldr	r3, [fp, #-12]
   1e71c:	add	r3, r3, #8
   1e720:	str	r3, [fp, #-12]
   1e724:	ldr	r3, [fp, #-8]
   1e728:	and	r3, r3, #-16777216	; 0xff000000
   1e72c:	cmp	r3, #0
   1e730:	beq	1e708 <__assert_fail@plt+0xd5b0>
   1e734:	b	1e750 <__assert_fail@plt+0xd5f8>
   1e738:	ldr	r3, [fp, #-8]
   1e73c:	lsl	r3, r3, #1
   1e740:	str	r3, [fp, #-8]
   1e744:	ldr	r3, [fp, #-12]
   1e748:	add	r3, r3, #1
   1e74c:	str	r3, [fp, #-12]
   1e750:	ldr	r3, [fp, #-8]
   1e754:	cmp	r3, #0
   1e758:	bge	1e738 <__assert_fail@plt+0xd5e0>
   1e75c:	ldr	r3, [fp, #-12]
   1e760:	str	r3, [fp, #-20]	; 0xffffffec
   1e764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e76c:	str	r2, [r3]
   1e770:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e774:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e778:	lsl	r2, r2, r3
   1e77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e780:	str	r2, [r3, #4]
   1e784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e788:	ldr	r3, [r3, #4]
   1e78c:	mov	r1, #0
   1e790:	mov	r0, r3
   1e794:	bl	1e2d0 <__assert_fail@plt+0xd178>
   1e798:	mov	r2, r0
   1e79c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7a0:	str	r2, [r3, #12]
   1e7a4:	nop	{0}
   1e7a8:	sub	sp, fp, #4
   1e7ac:	ldr	fp, [sp]
   1e7b0:	add	sp, sp, #4
   1e7b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e7b8:	str	fp, [sp, #-8]!
   1e7bc:	str	lr, [sp, #4]
   1e7c0:	add	fp, sp, #4
   1e7c4:	sub	sp, sp, #32
   1e7c8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7cc:	str	r1, [fp, #-28]	; 0xffffffe4
   1e7d0:	str	r2, [fp, #-32]	; 0xffffffe0
   1e7d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e7d8:	cmp	r3, #0
   1e7dc:	bne	1e800 <__assert_fail@plt+0xd6a8>
   1e7e0:	movw	r3, #24120	; 0x5e38
   1e7e4:	movt	r3, #3
   1e7e8:	movw	r2, #915	; 0x393
   1e7ec:	movw	r1, #22376	; 0x5768
   1e7f0:	movt	r1, #3
   1e7f4:	movw	r0, #22720	; 0x58c0
   1e7f8:	movt	r0, #3
   1e7fc:	bl	11158 <__assert_fail@plt>
   1e800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e804:	str	r3, [fp, #-8]
   1e808:	mov	r3, #0
   1e80c:	str	r3, [fp, #-12]
   1e810:	mov	r3, #8
   1e814:	str	r3, [fp, #-16]
   1e818:	ldr	r3, [fp, #-16]
   1e81c:	cmp	r3, #31
   1e820:	bhi	1e870 <__assert_fail@plt+0xd718>
   1e824:	b	1e844 <__assert_fail@plt+0xd6ec>
   1e828:	ldr	r2, [fp, #-8]
   1e82c:	ldr	r3, [fp, #-16]
   1e830:	lsl	r3, r2, r3
   1e834:	str	r3, [fp, #-8]
   1e838:	ldr	r3, [fp, #-12]
   1e83c:	add	r3, r3, #8
   1e840:	str	r3, [fp, #-12]
   1e844:	ldr	r3, [fp, #-8]
   1e848:	and	r3, r3, #-16777216	; 0xff000000
   1e84c:	cmp	r3, #0
   1e850:	beq	1e828 <__assert_fail@plt+0xd6d0>
   1e854:	b	1e870 <__assert_fail@plt+0xd718>
   1e858:	ldr	r3, [fp, #-8]
   1e85c:	lsl	r3, r3, #1
   1e860:	str	r3, [fp, #-8]
   1e864:	ldr	r3, [fp, #-12]
   1e868:	add	r3, r3, #1
   1e86c:	str	r3, [fp, #-12]
   1e870:	ldr	r3, [fp, #-8]
   1e874:	cmp	r3, #0
   1e878:	bge	1e858 <__assert_fail@plt+0xd700>
   1e87c:	ldr	r3, [fp, #-12]
   1e880:	str	r3, [fp, #-20]	; 0xffffffec
   1e884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e888:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e88c:	str	r2, [r3]
   1e890:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e894:	cmp	r3, #0
   1e898:	beq	1e8d0 <__assert_fail@plt+0xd778>
   1e89c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8a4:	lsl	r2, r2, r3
   1e8a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8ac:	rsb	r3, r3, #32
   1e8b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e8b4:	lsr	r3, r1, r3
   1e8b8:	orr	r3, r2, r3
   1e8bc:	str	r3, [fp, #-28]	; 0xffffffe4
   1e8c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8c8:	lsl	r3, r2, r3
   1e8cc:	str	r3, [fp, #-32]	; 0xffffffe0
   1e8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e8d8:	str	r2, [r3, #4]
   1e8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8e4:	str	r2, [r3, #8]
   1e8e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e8ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e8f0:	bl	1e2d0 <__assert_fail@plt+0xd178>
   1e8f4:	mov	r2, r0
   1e8f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8fc:	str	r2, [r3, #12]
   1e900:	nop	{0}
   1e904:	sub	sp, fp, #4
   1e908:	ldr	fp, [sp]
   1e90c:	add	sp, sp, #4
   1e910:	pop	{pc}		; (ldr pc, [sp], #4)
   1e914:	str	fp, [sp, #-8]!
   1e918:	str	lr, [sp, #4]
   1e91c:	add	fp, sp, #4
   1e920:	sub	sp, sp, #40	; 0x28
   1e924:	str	r0, [fp, #-32]	; 0xffffffe0
   1e928:	str	r1, [fp, #-36]	; 0xffffffdc
   1e92c:	str	r2, [fp, #-40]	; 0xffffffd8
   1e930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e934:	cmp	r3, #0
   1e938:	bgt	1e95c <__assert_fail@plt+0xd804>
   1e93c:	movw	r3, #24140	; 0x5e4c
   1e940:	movt	r3, #3
   1e944:	mov	r2, #932	; 0x3a4
   1e948:	movw	r1, #22376	; 0x5768
   1e94c:	movt	r1, #3
   1e950:	movw	r0, #22728	; 0x58c8
   1e954:	movt	r0, #3
   1e958:	bl	11158 <__assert_fail@plt>
   1e95c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e960:	cmp	r3, #1
   1e964:	bne	1e980 <__assert_fail@plt+0xd828>
   1e968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e96c:	ldr	r3, [r3]
   1e970:	mov	r1, r3
   1e974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e978:	bl	1e69c <__assert_fail@plt+0xd544>
   1e97c:	b	1eb3c <__assert_fail@plt+0xd9e4>
   1e980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e984:	cmp	r3, #2
   1e988:	bne	1e9b0 <__assert_fail@plt+0xd858>
   1e98c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e990:	add	r3, r3, #4
   1e994:	ldr	r1, [r3]
   1e998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e99c:	ldr	r3, [r3]
   1e9a0:	mov	r2, r3
   1e9a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9a8:	bl	1e7b8 <__assert_fail@plt+0xd660>
   1e9ac:	b	1eb3c <__assert_fail@plt+0xd9e4>
   1e9b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9b4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1e9b8:	lsl	r3, r3, #2
   1e9bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e9c0:	add	r3, r2, r3
   1e9c4:	ldr	r3, [r3]
   1e9c8:	str	r3, [fp, #-8]
   1e9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9d0:	sub	r3, r3, #-1073741822	; 0xc0000002
   1e9d4:	lsl	r3, r3, #2
   1e9d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e9dc:	add	r3, r2, r3
   1e9e0:	ldr	r3, [r3]
   1e9e4:	str	r3, [fp, #-12]
   1e9e8:	ldr	r3, [fp, #-8]
   1e9ec:	cmp	r3, #0
   1e9f0:	bne	1ea14 <__assert_fail@plt+0xd8bc>
   1e9f4:	movw	r3, #24140	; 0x5e4c
   1e9f8:	movt	r3, #3
   1e9fc:	movw	r2, #945	; 0x3b1
   1ea00:	movw	r1, #22376	; 0x5768
   1ea04:	movt	r1, #3
   1ea08:	movw	r0, #22720	; 0x58c0
   1ea0c:	movt	r0, #3
   1ea10:	bl	11158 <__assert_fail@plt>
   1ea14:	ldr	r3, [fp, #-8]
   1ea18:	str	r3, [fp, #-16]
   1ea1c:	mov	r3, #0
   1ea20:	str	r3, [fp, #-20]	; 0xffffffec
   1ea24:	mov	r3, #8
   1ea28:	str	r3, [fp, #-24]	; 0xffffffe8
   1ea2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea30:	cmp	r3, #31
   1ea34:	bhi	1ea84 <__assert_fail@plt+0xd92c>
   1ea38:	b	1ea58 <__assert_fail@plt+0xd900>
   1ea3c:	ldr	r2, [fp, #-16]
   1ea40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea44:	lsl	r3, r2, r3
   1ea48:	str	r3, [fp, #-16]
   1ea4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea50:	add	r3, r3, #8
   1ea54:	str	r3, [fp, #-20]	; 0xffffffec
   1ea58:	ldr	r3, [fp, #-16]
   1ea5c:	and	r3, r3, #-16777216	; 0xff000000
   1ea60:	cmp	r3, #0
   1ea64:	beq	1ea3c <__assert_fail@plt+0xd8e4>
   1ea68:	b	1ea84 <__assert_fail@plt+0xd92c>
   1ea6c:	ldr	r3, [fp, #-16]
   1ea70:	lsl	r3, r3, #1
   1ea74:	str	r3, [fp, #-16]
   1ea78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea7c:	add	r3, r3, #1
   1ea80:	str	r3, [fp, #-20]	; 0xffffffec
   1ea84:	ldr	r3, [fp, #-16]
   1ea88:	cmp	r3, #0
   1ea8c:	bge	1ea6c <__assert_fail@plt+0xd914>
   1ea90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea94:	str	r3, [fp, #-28]	; 0xffffffe4
   1ea98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eaa0:	str	r2, [r3]
   1eaa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eaa8:	cmp	r3, #0
   1eaac:	beq	1eb0c <__assert_fail@plt+0xd9b4>
   1eab0:	ldr	r2, [fp, #-8]
   1eab4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eab8:	lsl	r2, r2, r3
   1eabc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eac0:	rsb	r3, r3, #32
   1eac4:	ldr	r1, [fp, #-12]
   1eac8:	lsr	r3, r1, r3
   1eacc:	orr	r3, r2, r3
   1ead0:	str	r3, [fp, #-8]
   1ead4:	ldr	r2, [fp, #-12]
   1ead8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eadc:	lsl	r2, r2, r3
   1eae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eae4:	sub	r3, r3, #-1073741821	; 0xc0000003
   1eae8:	lsl	r3, r3, #2
   1eaec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1eaf0:	add	r3, r1, r3
   1eaf4:	ldr	r1, [r3]
   1eaf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eafc:	rsb	r3, r3, #32
   1eb00:	lsr	r3, r1, r3
   1eb04:	orr	r3, r2, r3
   1eb08:	str	r3, [fp, #-12]
   1eb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb10:	ldr	r2, [fp, #-8]
   1eb14:	str	r2, [r3, #4]
   1eb18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb1c:	ldr	r2, [fp, #-12]
   1eb20:	str	r2, [r3, #8]
   1eb24:	ldr	r1, [fp, #-12]
   1eb28:	ldr	r0, [fp, #-8]
   1eb2c:	bl	1e2d0 <__assert_fail@plt+0xd178>
   1eb30:	mov	r2, r0
   1eb34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb38:	str	r2, [r3, #12]
   1eb3c:	nop	{0}
   1eb40:	sub	sp, fp, #4
   1eb44:	ldr	fp, [sp]
   1eb48:	add	sp, sp, #4
   1eb4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb50:	str	fp, [sp, #-8]!
   1eb54:	str	lr, [sp, #4]
   1eb58:	add	fp, sp, #4
   1eb5c:	sub	sp, sp, #104	; 0x68
   1eb60:	str	r0, [fp, #-96]	; 0xffffffa0
   1eb64:	str	r1, [fp, #-100]	; 0xffffff9c
   1eb68:	str	r2, [fp, #-104]	; 0xffffff98
   1eb6c:	str	r3, [fp, #-108]	; 0xffffff94
   1eb70:	mov	r3, #0
   1eb74:	str	r3, [fp, #-12]
   1eb78:	mov	r3, #0
   1eb7c:	str	r3, [fp, #-16]
   1eb80:	ldr	r3, [fp, #-108]	; 0xffffff94
   1eb84:	ldr	r3, [r3]
   1eb88:	cmp	r3, #0
   1eb8c:	beq	1ebe0 <__assert_fail@plt+0xda88>
   1eb90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1eb94:	str	r3, [fp, #-12]
   1eb98:	ldr	r3, [fp, #-12]
   1eb9c:	cmp	r3, #0
   1eba0:	bne	1ebb8 <__assert_fail@plt+0xda60>
   1eba4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1eba8:	str	r3, [fp, #-16]
   1ebac:	ldr	r0, [fp, #-16]
   1ebb0:	bl	1c968 <__assert_fail@plt+0xb810>
   1ebb4:	str	r0, [fp, #-12]
   1ebb8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ebbc:	ldr	r3, [r3]
   1ebc0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1ebc4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1ebc8:	ldr	r0, [fp, #-12]
   1ebcc:	bl	1dbb0 <__assert_fail@plt+0xca58>
   1ebd0:	str	r0, [fp, #-8]
   1ebd4:	ldr	r3, [fp, #-12]
   1ebd8:	str	r3, [fp, #-100]	; 0xffffff9c
   1ebdc:	b	1ebe8 <__assert_fail@plt+0xda90>
   1ebe0:	mov	r3, #0
   1ebe4:	str	r3, [fp, #-8]
   1ebe8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ebec:	ldr	r3, [r3, #4]
   1ebf0:	str	r3, [fp, #-32]	; 0xffffffe0
   1ebf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ebf8:	ldr	r3, [r3, #12]
   1ebfc:	str	r3, [fp, #-36]	; 0xffffffdc
   1ec00:	b	1ee20 <__assert_fail@plt+0xdcc8>
   1ec04:	mov	r3, #32
   1ec08:	str	r3, [fp, #-40]	; 0xffffffd8
   1ec0c:	ldr	r3, [fp, #-8]
   1ec10:	str	r3, [fp, #-44]	; 0xffffffd4
   1ec14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec18:	str	r3, [fp, #-48]	; 0xffffffd0
   1ec1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ec20:	uxth	r3, r3
   1ec24:	str	r3, [fp, #-52]	; 0xffffffcc
   1ec28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ec2c:	lsr	r3, r3, #16
   1ec30:	str	r3, [fp, #-56]	; 0xffffffc8
   1ec34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec38:	uxth	r3, r3
   1ec3c:	str	r3, [fp, #-60]	; 0xffffffc4
   1ec40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec44:	lsr	r3, r3, #16
   1ec48:	str	r3, [fp, #-64]	; 0xffffffc0
   1ec4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ec50:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ec54:	mul	r3, r2, r3
   1ec58:	str	r3, [fp, #-68]	; 0xffffffbc
   1ec5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ec60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ec64:	mul	r3, r2, r3
   1ec68:	str	r3, [fp, #-72]	; 0xffffffb8
   1ec6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ec70:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ec74:	mul	r3, r2, r3
   1ec78:	str	r3, [fp, #-76]	; 0xffffffb4
   1ec7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ec80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ec84:	mul	r3, r2, r3
   1ec88:	str	r3, [fp, #-28]	; 0xffffffe4
   1ec8c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ec90:	lsr	r3, r3, #16
   1ec94:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ec98:	add	r3, r2, r3
   1ec9c:	str	r3, [fp, #-72]	; 0xffffffb8
   1eca0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1eca4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1eca8:	add	r3, r2, r3
   1ecac:	str	r3, [fp, #-72]	; 0xffffffb8
   1ecb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ecb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ecb8:	cmp	r2, r3
   1ecbc:	bcs	1eccc <__assert_fail@plt+0xdb74>
   1ecc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ecc4:	add	r3, r3, #65536	; 0x10000
   1ecc8:	str	r3, [fp, #-28]	; 0xffffffe4
   1eccc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ecd0:	lsr	r3, r3, #16
   1ecd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ecd8:	add	r3, r2, r3
   1ecdc:	str	r3, [fp, #-20]	; 0xffffffec
   1ece0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ece4:	lsl	r2, r3, #16
   1ece8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ecec:	uxth	r3, r3
   1ecf0:	add	r3, r2, r3
   1ecf4:	str	r3, [fp, #-80]	; 0xffffffb0
   1ecf8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ecfc:	lsl	r3, r3, #2
   1ed00:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1ed04:	add	r3, r2, r3
   1ed08:	ldr	r3, [r3]
   1ed0c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ed10:	add	r3, r2, r3
   1ed14:	str	r3, [fp, #-84]	; 0xffffffac
   1ed18:	ldr	r2, [fp, #-8]
   1ed1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed20:	add	r3, r2, r3
   1ed24:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ed28:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ed2c:	cmp	r1, r2
   1ed30:	movcc	r2, #1
   1ed34:	movcs	r2, #0
   1ed38:	uxtb	r2, r2
   1ed3c:	add	r3, r3, r2
   1ed40:	add	r3, r3, #1
   1ed44:	str	r3, [fp, #-20]	; 0xffffffec
   1ed48:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ed4c:	str	r3, [fp, #-80]	; 0xffffffb0
   1ed50:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ed54:	lsl	r3, r3, #2
   1ed58:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1ed5c:	add	r3, r2, r3
   1ed60:	ldr	r2, [r3]
   1ed64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ed6c:	mul	r3, r1, r3
   1ed70:	sub	r3, r2, r3
   1ed74:	str	r3, [fp, #-24]	; 0xffffffe8
   1ed78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ed80:	cmp	r2, r3
   1ed84:	movhi	r3, #1
   1ed88:	movls	r3, #0
   1ed8c:	uxtb	r3, r3
   1ed90:	rsb	r3, r3, #0
   1ed94:	str	r3, [fp, #-88]	; 0xffffffa8
   1ed98:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1eda0:	add	r3, r2, r3
   1eda4:	str	r3, [fp, #-20]	; 0xffffffec
   1eda8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1edac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1edb0:	and	r3, r3, r2
   1edb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edb8:	add	r3, r2, r3
   1edbc:	str	r3, [fp, #-24]	; 0xffffffe8
   1edc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1edc8:	cmp	r2, r3
   1edcc:	bcc	1edec <__assert_fail@plt+0xdc94>
   1edd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1edd8:	sub	r3, r2, r3
   1eddc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ede0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ede4:	add	r3, r3, #1
   1ede8:	str	r3, [fp, #-20]	; 0xffffffec
   1edec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edf0:	str	r3, [fp, #-8]
   1edf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edf8:	str	r3, [fp, #-92]	; 0xffffffa4
   1edfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ee00:	cmp	r3, #0
   1ee04:	beq	1ee20 <__assert_fail@plt+0xdcc8>
   1ee08:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ee0c:	lsl	r3, r3, #2
   1ee10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ee14:	add	r3, r2, r3
   1ee18:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1ee1c:	str	r2, [r3]
   1ee20:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ee24:	sub	r3, r3, #1
   1ee28:	str	r3, [fp, #-104]	; 0xffffff98
   1ee2c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ee30:	cmp	r3, #0
   1ee34:	bge	1ec04 <__assert_fail@plt+0xdaac>
   1ee38:	ldr	r3, [fp, #-16]
   1ee3c:	cmp	r3, #0
   1ee40:	beq	1ee50 <__assert_fail@plt+0xdcf8>
   1ee44:	ldr	r1, [fp, #-16]
   1ee48:	ldr	r0, [fp, #-12]
   1ee4c:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   1ee50:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ee54:	ldr	r3, [r3]
   1ee58:	ldr	r2, [fp, #-8]
   1ee5c:	lsr	r3, r2, r3
   1ee60:	mov	r0, r3
   1ee64:	sub	sp, fp, #4
   1ee68:	ldr	fp, [sp]
   1ee6c:	add	sp, sp, #4
   1ee70:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee74:	str	fp, [sp, #-8]!
   1ee78:	str	lr, [sp, #4]
   1ee7c:	add	fp, sp, #4
   1ee80:	sub	sp, sp, #176	; 0xb0
   1ee84:	str	r0, [fp, #-168]	; 0xffffff58
   1ee88:	str	r1, [fp, #-172]	; 0xffffff54
   1ee8c:	str	r2, [fp, #-176]	; 0xffffff50
   1ee90:	str	r3, [fp, #-180]	; 0xffffff4c
   1ee94:	ldr	r3, [fp, #-176]	; 0xffffff50
   1ee98:	cmp	r3, #1
   1ee9c:	bgt	1eec0 <__assert_fail@plt+0xdd68>
   1eea0:	movw	r3, #24160	; 0x5e60
   1eea4:	movt	r3, #3
   1eea8:	movw	r2, #1009	; 0x3f1
   1eeac:	movw	r1, #22376	; 0x5768
   1eeb0:	movt	r1, #3
   1eeb4:	movw	r0, #22736	; 0x58d0
   1eeb8:	movt	r0, #3
   1eebc:	bl	11158 <__assert_fail@plt>
   1eec0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1eec4:	ldr	r3, [r3]
   1eec8:	str	r3, [fp, #-32]	; 0xffffffe0
   1eecc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1eed0:	ldr	r3, [r3, #4]
   1eed4:	str	r3, [fp, #-36]	; 0xffffffdc
   1eed8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1eedc:	ldr	r3, [r3, #8]
   1eee0:	str	r3, [fp, #-40]	; 0xffffffd8
   1eee4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1eee8:	ldr	r3, [r3, #12]
   1eeec:	str	r3, [fp, #-44]	; 0xffffffd4
   1eef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eef4:	cmp	r3, #0
   1eef8:	beq	1ef18 <__assert_fail@plt+0xddc0>
   1eefc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ef00:	ldr	r2, [fp, #-176]	; 0xffffff50
   1ef04:	ldr	r1, [fp, #-172]	; 0xffffff54
   1ef08:	ldr	r0, [fp, #-172]	; 0xffffff54
   1ef0c:	bl	1dbb0 <__assert_fail@plt+0xca58>
   1ef10:	str	r0, [fp, #-12]
   1ef14:	b	1ef20 <__assert_fail@plt+0xddc8>
   1ef18:	mov	r3, #0
   1ef1c:	str	r3, [fp, #-12]
   1ef20:	ldr	r3, [fp, #-176]	; 0xffffff50
   1ef24:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ef28:	lsl	r3, r3, #2
   1ef2c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1ef30:	add	r3, r2, r3
   1ef34:	ldr	r3, [r3]
   1ef38:	str	r3, [fp, #-16]
   1ef3c:	ldr	r3, [fp, #-176]	; 0xffffff50
   1ef40:	sub	r3, r3, #2
   1ef44:	str	r3, [fp, #-8]
   1ef48:	ldr	r3, [fp, #-8]
   1ef4c:	lsl	r3, r3, #2
   1ef50:	ldr	r2, [fp, #-172]	; 0xffffff54
   1ef54:	add	r3, r2, r3
   1ef58:	ldr	r3, [r3]
   1ef5c:	str	r3, [fp, #-48]	; 0xffffffd0
   1ef60:	mov	r3, #32
   1ef64:	str	r3, [fp, #-52]	; 0xffffffcc
   1ef68:	ldr	r3, [fp, #-12]
   1ef6c:	str	r3, [fp, #-56]	; 0xffffffc8
   1ef70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ef74:	str	r3, [fp, #-60]	; 0xffffffc4
   1ef78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef7c:	uxth	r3, r3
   1ef80:	str	r3, [fp, #-64]	; 0xffffffc0
   1ef84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef88:	lsr	r3, r3, #16
   1ef8c:	str	r3, [fp, #-68]	; 0xffffffbc
   1ef90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ef94:	uxth	r3, r3
   1ef98:	str	r3, [fp, #-72]	; 0xffffffb8
   1ef9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1efa0:	lsr	r3, r3, #16
   1efa4:	str	r3, [fp, #-76]	; 0xffffffb4
   1efa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1efac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1efb0:	mul	r3, r2, r3
   1efb4:	str	r3, [fp, #-80]	; 0xffffffb0
   1efb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1efbc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1efc0:	mul	r3, r2, r3
   1efc4:	str	r3, [fp, #-84]	; 0xffffffac
   1efc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1efcc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1efd0:	mul	r3, r2, r3
   1efd4:	str	r3, [fp, #-88]	; 0xffffffa8
   1efd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1efdc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1efe0:	mul	r3, r2, r3
   1efe4:	str	r3, [fp, #-24]	; 0xffffffe8
   1efe8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1efec:	lsr	r3, r3, #16
   1eff0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1eff4:	add	r3, r2, r3
   1eff8:	str	r3, [fp, #-84]	; 0xffffffac
   1effc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1f000:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1f004:	add	r3, r2, r3
   1f008:	str	r3, [fp, #-84]	; 0xffffffac
   1f00c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1f010:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1f014:	cmp	r2, r3
   1f018:	bcs	1f028 <__assert_fail@plt+0xded0>
   1f01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f020:	add	r3, r3, #65536	; 0x10000
   1f024:	str	r3, [fp, #-24]	; 0xffffffe8
   1f028:	ldr	r3, [fp, #-84]	; 0xffffffac
   1f02c:	lsr	r3, r3, #16
   1f030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f034:	add	r3, r2, r3
   1f038:	str	r3, [fp, #-20]	; 0xffffffec
   1f03c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1f040:	lsl	r2, r3, #16
   1f044:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1f048:	uxth	r3, r3
   1f04c:	add	r3, r2, r3
   1f050:	str	r3, [fp, #-92]	; 0xffffffa4
   1f054:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1f058:	ldr	r3, [fp, #-16]
   1f05c:	add	r3, r2, r3
   1f060:	str	r3, [fp, #-96]	; 0xffffffa0
   1f064:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f068:	ldr	r3, [fp, #-12]
   1f06c:	add	r3, r2, r3
   1f070:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1f074:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1f078:	cmp	r1, r2
   1f07c:	movcc	r2, #1
   1f080:	movcs	r2, #0
   1f084:	uxtb	r2, r2
   1f088:	add	r3, r3, r2
   1f08c:	str	r3, [fp, #-20]	; 0xffffffec
   1f090:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1f094:	str	r3, [fp, #-92]	; 0xffffffa4
   1f098:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f09c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f0a0:	mul	r3, r2, r3
   1f0a4:	ldr	r2, [fp, #-16]
   1f0a8:	sub	r3, r2, r3
   1f0ac:	str	r3, [fp, #-12]
   1f0b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f0b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f0b8:	sub	r3, r2, r3
   1f0bc:	str	r3, [fp, #-100]	; 0xffffff9c
   1f0c0:	ldr	r2, [fp, #-12]
   1f0c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f0c8:	sub	r3, r2, r3
   1f0cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1f0d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f0d4:	cmp	r1, r2
   1f0d8:	movcc	r2, #1
   1f0dc:	movcs	r2, #0
   1f0e0:	uxtb	r2, r2
   1f0e4:	sub	r3, r3, r2
   1f0e8:	str	r3, [fp, #-12]
   1f0ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f0f0:	str	r3, [fp, #-16]
   1f0f4:	mov	r3, #32
   1f0f8:	str	r3, [fp, #-104]	; 0xffffff98
   1f0fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f100:	str	r3, [fp, #-108]	; 0xffffff94
   1f104:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f108:	str	r3, [fp, #-112]	; 0xffffff90
   1f10c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f110:	uxth	r3, r3
   1f114:	str	r3, [fp, #-116]	; 0xffffff8c
   1f118:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f11c:	lsr	r3, r3, #16
   1f120:	str	r3, [fp, #-120]	; 0xffffff88
   1f124:	ldr	r3, [fp, #-112]	; 0xffffff90
   1f128:	uxth	r3, r3
   1f12c:	str	r3, [fp, #-124]	; 0xffffff84
   1f130:	ldr	r3, [fp, #-112]	; 0xffffff90
   1f134:	lsr	r3, r3, #16
   1f138:	str	r3, [fp, #-128]	; 0xffffff80
   1f13c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1f140:	ldr	r2, [fp, #-124]	; 0xffffff84
   1f144:	mul	r3, r2, r3
   1f148:	str	r3, [fp, #-132]	; 0xffffff7c
   1f14c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1f150:	ldr	r2, [fp, #-128]	; 0xffffff80
   1f154:	mul	r3, r2, r3
   1f158:	str	r3, [fp, #-136]	; 0xffffff78
   1f15c:	ldr	r3, [fp, #-120]	; 0xffffff88
   1f160:	ldr	r2, [fp, #-124]	; 0xffffff84
   1f164:	mul	r3, r2, r3
   1f168:	str	r3, [fp, #-140]	; 0xffffff74
   1f16c:	ldr	r3, [fp, #-120]	; 0xffffff88
   1f170:	ldr	r2, [fp, #-128]	; 0xffffff80
   1f174:	mul	r3, r2, r3
   1f178:	str	r3, [fp, #-28]	; 0xffffffe4
   1f17c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1f180:	lsr	r3, r3, #16
   1f184:	ldr	r2, [fp, #-136]	; 0xffffff78
   1f188:	add	r3, r2, r3
   1f18c:	str	r3, [fp, #-136]	; 0xffffff78
   1f190:	ldr	r2, [fp, #-136]	; 0xffffff78
   1f194:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f198:	add	r3, r2, r3
   1f19c:	str	r3, [fp, #-136]	; 0xffffff78
   1f1a0:	ldr	r2, [fp, #-136]	; 0xffffff78
   1f1a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f1a8:	cmp	r2, r3
   1f1ac:	bcs	1f1bc <__assert_fail@plt+0xe064>
   1f1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f1b4:	add	r3, r3, #65536	; 0x10000
   1f1b8:	str	r3, [fp, #-28]	; 0xffffffe4
   1f1bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f1c0:	lsr	r3, r3, #16
   1f1c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f1c8:	add	r3, r2, r3
   1f1cc:	str	r3, [fp, #-144]	; 0xffffff70
   1f1d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f1d4:	lsl	r2, r3, #16
   1f1d8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1f1dc:	uxth	r3, r3
   1f1e0:	add	r3, r2, r3
   1f1e4:	str	r3, [fp, #-148]	; 0xffffff6c
   1f1e8:	ldr	r2, [fp, #-16]
   1f1ec:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1f1f0:	sub	r3, r2, r3
   1f1f4:	str	r3, [fp, #-152]	; 0xffffff68
   1f1f8:	ldr	r2, [fp, #-12]
   1f1fc:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f200:	sub	r3, r2, r3
   1f204:	ldr	r1, [fp, #-16]
   1f208:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1f20c:	cmp	r1, r2
   1f210:	movcc	r2, #1
   1f214:	movcs	r2, #0
   1f218:	uxtb	r2, r2
   1f21c:	sub	r3, r3, r2
   1f220:	str	r3, [fp, #-12]
   1f224:	ldr	r3, [fp, #-152]	; 0xffffff68
   1f228:	str	r3, [fp, #-16]
   1f22c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f230:	add	r3, r3, #1
   1f234:	str	r3, [fp, #-20]	; 0xffffffec
   1f238:	ldr	r2, [fp, #-12]
   1f23c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1f240:	cmp	r2, r3
   1f244:	movcs	r3, #1
   1f248:	movcc	r3, #0
   1f24c:	uxtb	r3, r3
   1f250:	rsb	r3, r3, #0
   1f254:	str	r3, [fp, #-156]	; 0xffffff64
   1f258:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f25c:	ldr	r3, [fp, #-156]	; 0xffffff64
   1f260:	add	r3, r2, r3
   1f264:	str	r3, [fp, #-20]	; 0xffffffec
   1f268:	ldr	r2, [fp, #-156]	; 0xffffff64
   1f26c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f270:	and	r3, r3, r2
   1f274:	ldr	r2, [fp, #-16]
   1f278:	add	r3, r2, r3
   1f27c:	str	r3, [fp, #-160]	; 0xffffff60
   1f280:	ldr	r2, [fp, #-156]	; 0xffffff64
   1f284:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f288:	and	r2, r2, r3
   1f28c:	ldr	r3, [fp, #-12]
   1f290:	add	r3, r2, r3
   1f294:	ldr	r1, [fp, #-160]	; 0xffffff60
   1f298:	ldr	r2, [fp, #-16]
   1f29c:	cmp	r1, r2
   1f2a0:	movcc	r2, #1
   1f2a4:	movcs	r2, #0
   1f2a8:	uxtb	r2, r2
   1f2ac:	add	r3, r3, r2
   1f2b0:	str	r3, [fp, #-12]
   1f2b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1f2b8:	str	r3, [fp, #-16]
   1f2bc:	ldr	r2, [fp, #-12]
   1f2c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2c4:	cmp	r2, r3
   1f2c8:	bcc	1f33c <__assert_fail@plt+0xe1e4>
   1f2cc:	ldr	r2, [fp, #-12]
   1f2d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2d4:	cmp	r2, r3
   1f2d8:	bhi	1f2ec <__assert_fail@plt+0xe194>
   1f2dc:	ldr	r2, [fp, #-16]
   1f2e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f2e4:	cmp	r2, r3
   1f2e8:	bcc	1f33c <__assert_fail@plt+0xe1e4>
   1f2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f2f0:	add	r3, r3, #1
   1f2f4:	str	r3, [fp, #-20]	; 0xffffffec
   1f2f8:	ldr	r2, [fp, #-16]
   1f2fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f300:	sub	r3, r2, r3
   1f304:	str	r3, [fp, #-164]	; 0xffffff5c
   1f308:	ldr	r2, [fp, #-12]
   1f30c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f310:	sub	r3, r2, r3
   1f314:	ldr	r1, [fp, #-16]
   1f318:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f31c:	cmp	r1, r2
   1f320:	movcc	r2, #1
   1f324:	movcs	r2, #0
   1f328:	uxtb	r2, r2
   1f32c:	sub	r3, r3, r2
   1f330:	str	r3, [fp, #-12]
   1f334:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1f338:	str	r3, [fp, #-16]
   1f33c:	ldr	r3, [fp, #-168]	; 0xffffff58
   1f340:	cmp	r3, #0
   1f344:	beq	1f360 <__assert_fail@plt+0xe208>
   1f348:	ldr	r3, [fp, #-8]
   1f34c:	lsl	r3, r3, #2
   1f350:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f354:	add	r3, r2, r3
   1f358:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f35c:	str	r2, [r3]
   1f360:	ldr	r3, [fp, #-8]
   1f364:	sub	r3, r3, #1
   1f368:	str	r3, [fp, #-8]
   1f36c:	ldr	r3, [fp, #-8]
   1f370:	cmp	r3, #0
   1f374:	bge	1ef48 <__assert_fail@plt+0xddf0>
   1f378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f37c:	cmp	r3, #0
   1f380:	beq	1f3f8 <__assert_fail@plt+0xe2a0>
   1f384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f388:	rsb	r3, r3, #32
   1f38c:	mvn	r2, #0
   1f390:	lsr	r2, r2, r3
   1f394:	ldr	r3, [fp, #-16]
   1f398:	and	r3, r3, r2
   1f39c:	cmp	r3, #0
   1f3a0:	beq	1f3c4 <__assert_fail@plt+0xe26c>
   1f3a4:	movw	r3, #24160	; 0x5e60
   1f3a8:	movt	r3, #3
   1f3ac:	movw	r2, #1036	; 0x40c
   1f3b0:	movw	r1, #22376	; 0x5768
   1f3b4:	movt	r1, #3
   1f3b8:	movw	r0, #22744	; 0x58d8
   1f3bc:	movt	r0, #3
   1f3c0:	bl	11158 <__assert_fail@plt>
   1f3c4:	ldr	r2, [fp, #-16]
   1f3c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f3cc:	lsr	r2, r2, r3
   1f3d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f3d4:	rsb	r3, r3, #32
   1f3d8:	ldr	r1, [fp, #-12]
   1f3dc:	lsl	r3, r1, r3
   1f3e0:	orr	r3, r2, r3
   1f3e4:	str	r3, [fp, #-16]
   1f3e8:	ldr	r2, [fp, #-12]
   1f3ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f3f0:	lsr	r3, r2, r3
   1f3f4:	str	r3, [fp, #-12]
   1f3f8:	ldr	r3, [fp, #-172]	; 0xffffff54
   1f3fc:	add	r3, r3, #4
   1f400:	ldr	r2, [fp, #-12]
   1f404:	str	r2, [r3]
   1f408:	ldr	r3, [fp, #-172]	; 0xffffff54
   1f40c:	ldr	r2, [fp, #-16]
   1f410:	str	r2, [r3]
   1f414:	nop	{0}
   1f418:	sub	sp, fp, #4
   1f41c:	ldr	fp, [sp]
   1f420:	add	sp, sp, #4
   1f424:	pop	{pc}		; (ldr pc, [sp], #4)
   1f428:	str	fp, [sp, #-8]!
   1f42c:	str	lr, [sp, #4]
   1f430:	add	fp, sp, #4
   1f434:	sub	sp, sp, #168	; 0xa8
   1f438:	str	r0, [fp, #-160]	; 0xffffff60
   1f43c:	str	r1, [fp, #-164]	; 0xffffff5c
   1f440:	str	r2, [fp, #-168]	; 0xffffff58
   1f444:	str	r3, [fp, #-172]	; 0xffffff54
   1f448:	ldr	r3, [fp, #8]
   1f44c:	cmp	r3, #2
   1f450:	bgt	1f474 <__assert_fail@plt+0xe31c>
   1f454:	movw	r3, #24180	; 0x5e74
   1f458:	movt	r3, #3
   1f45c:	movw	r2, #1057	; 0x421
   1f460:	movw	r1, #22376	; 0x5768
   1f464:	movt	r1, #3
   1f468:	movw	r0, #22800	; 0x5910
   1f46c:	movt	r0, #3
   1f470:	bl	11158 <__assert_fail@plt>
   1f474:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f478:	ldr	r3, [fp, #8]
   1f47c:	cmp	r2, r3
   1f480:	bge	1f4a4 <__assert_fail@plt+0xe34c>
   1f484:	movw	r3, #24180	; 0x5e74
   1f488:	movt	r3, #3
   1f48c:	movw	r2, #1058	; 0x422
   1f490:	movw	r1, #22376	; 0x5768
   1f494:	movt	r1, #3
   1f498:	movw	r0, #22808	; 0x5918
   1f49c:	movt	r0, #3
   1f4a0:	bl	11158 <__assert_fail@plt>
   1f4a4:	ldr	r3, [fp, #8]
   1f4a8:	sub	r3, r3, #-1073741823	; 0xc0000001
   1f4ac:	lsl	r3, r3, #2
   1f4b0:	ldr	r2, [fp, #4]
   1f4b4:	add	r3, r2, r3
   1f4b8:	ldr	r3, [r3]
   1f4bc:	str	r3, [fp, #-28]	; 0xffffffe4
   1f4c0:	ldr	r3, [fp, #8]
   1f4c4:	sub	r3, r3, #-1073741822	; 0xc0000002
   1f4c8:	lsl	r3, r3, #2
   1f4cc:	ldr	r2, [fp, #4]
   1f4d0:	add	r3, r2, r3
   1f4d4:	ldr	r3, [r3]
   1f4d8:	str	r3, [fp, #-32]	; 0xffffffe0
   1f4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f4e0:	cmp	r3, #0
   1f4e4:	blt	1f508 <__assert_fail@plt+0xe3b0>
   1f4e8:	movw	r3, #24180	; 0x5e74
   1f4ec:	movt	r3, #3
   1f4f0:	movw	r2, #1063	; 0x427
   1f4f4:	movw	r1, #22376	; 0x5768
   1f4f8:	movt	r1, #3
   1f4fc:	movw	r0, #22820	; 0x5924
   1f500:	movt	r0, #3
   1f504:	bl	11158 <__assert_fail@plt>
   1f508:	ldr	r2, [fp, #-168]	; 0xffffff58
   1f50c:	ldr	r3, [fp, #8]
   1f510:	sub	r3, r2, r3
   1f514:	str	r3, [fp, #-8]
   1f518:	ldr	r3, [fp, #8]
   1f51c:	sub	r2, r3, #1
   1f520:	ldr	r3, [fp, #-8]
   1f524:	add	r3, r2, r3
   1f528:	lsl	r3, r3, #2
   1f52c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f530:	add	r3, r2, r3
   1f534:	ldr	r3, [r3]
   1f538:	str	r3, [fp, #-16]
   1f53c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f544:	cmp	r2, r3
   1f548:	bne	1f5ac <__assert_fail@plt+0xe454>
   1f54c:	ldr	r2, [fp, #-16]
   1f550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f554:	cmp	r2, r3
   1f558:	bne	1f5ac <__assert_fail@plt+0xe454>
   1f55c:	mvn	r3, #0
   1f560:	str	r3, [fp, #-12]
   1f564:	ldr	r3, [fp, #-8]
   1f568:	lsl	r3, r3, #2
   1f56c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f570:	add	r0, r2, r3
   1f574:	ldr	r3, [fp, #-12]
   1f578:	ldr	r2, [fp, #8]
   1f57c:	ldr	r1, [fp, #4]
   1f580:	bl	1d6f0 <__assert_fail@plt+0xc598>
   1f584:	ldr	r3, [fp, #8]
   1f588:	sub	r2, r3, #1
   1f58c:	ldr	r3, [fp, #-8]
   1f590:	add	r3, r2, r3
   1f594:	lsl	r3, r3, #2
   1f598:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f59c:	add	r3, r2, r3
   1f5a0:	ldr	r3, [r3]
   1f5a4:	str	r3, [fp, #-172]	; 0xffffff54
   1f5a8:	b	1fac4 <__assert_fail@plt+0xe96c>
   1f5ac:	mov	r3, #32
   1f5b0:	str	r3, [fp, #-36]	; 0xffffffdc
   1f5b4:	ldr	r3, [fp, #-172]	; 0xffffff54
   1f5b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f5bc:	ldr	r3, [fp, #12]
   1f5c0:	str	r3, [fp, #-44]	; 0xffffffd4
   1f5c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f5c8:	uxth	r3, r3
   1f5cc:	str	r3, [fp, #-48]	; 0xffffffd0
   1f5d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f5d4:	lsr	r3, r3, #16
   1f5d8:	str	r3, [fp, #-52]	; 0xffffffcc
   1f5dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f5e0:	uxth	r3, r3
   1f5e4:	str	r3, [fp, #-56]	; 0xffffffc8
   1f5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f5ec:	lsr	r3, r3, #16
   1f5f0:	str	r3, [fp, #-60]	; 0xffffffc4
   1f5f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f5f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f5fc:	mul	r3, r2, r3
   1f600:	str	r3, [fp, #-64]	; 0xffffffc0
   1f604:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f608:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f60c:	mul	r3, r2, r3
   1f610:	str	r3, [fp, #-68]	; 0xffffffbc
   1f614:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f618:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f61c:	mul	r3, r2, r3
   1f620:	str	r3, [fp, #-72]	; 0xffffffb8
   1f624:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f628:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f62c:	mul	r3, r2, r3
   1f630:	str	r3, [fp, #-20]	; 0xffffffec
   1f634:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f638:	lsr	r3, r3, #16
   1f63c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1f640:	add	r3, r2, r3
   1f644:	str	r3, [fp, #-68]	; 0xffffffbc
   1f648:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1f64c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1f650:	add	r3, r2, r3
   1f654:	str	r3, [fp, #-68]	; 0xffffffbc
   1f658:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1f65c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1f660:	cmp	r2, r3
   1f664:	bcs	1f674 <__assert_fail@plt+0xe51c>
   1f668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f66c:	add	r3, r3, #65536	; 0x10000
   1f670:	str	r3, [fp, #-20]	; 0xffffffec
   1f674:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f678:	lsr	r3, r3, #16
   1f67c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f680:	add	r3, r2, r3
   1f684:	str	r3, [fp, #-12]
   1f688:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f68c:	lsl	r2, r3, #16
   1f690:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f694:	uxth	r3, r3
   1f698:	add	r3, r2, r3
   1f69c:	str	r3, [fp, #-76]	; 0xffffffb4
   1f6a0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1f6a4:	ldr	r3, [fp, #-16]
   1f6a8:	add	r3, r2, r3
   1f6ac:	str	r3, [fp, #-80]	; 0xffffffb0
   1f6b0:	ldr	r2, [fp, #-12]
   1f6b4:	ldr	r3, [fp, #-172]	; 0xffffff54
   1f6b8:	add	r3, r2, r3
   1f6bc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1f6c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1f6c4:	cmp	r1, r2
   1f6c8:	movcc	r2, #1
   1f6cc:	movcs	r2, #0
   1f6d0:	uxtb	r2, r2
   1f6d4:	add	r3, r3, r2
   1f6d8:	str	r3, [fp, #-12]
   1f6dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1f6e0:	str	r3, [fp, #-76]	; 0xffffffb4
   1f6e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f6e8:	ldr	r2, [fp, #-12]
   1f6ec:	mul	r3, r2, r3
   1f6f0:	ldr	r2, [fp, #-16]
   1f6f4:	sub	r3, r2, r3
   1f6f8:	str	r3, [fp, #-172]	; 0xffffff54
   1f6fc:	ldr	r3, [fp, #8]
   1f700:	sub	r2, r3, #2
   1f704:	ldr	r3, [fp, #-8]
   1f708:	add	r3, r2, r3
   1f70c:	lsl	r3, r3, #2
   1f710:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f714:	add	r3, r2, r3
   1f718:	ldr	r2, [r3]
   1f71c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f720:	sub	r3, r2, r3
   1f724:	str	r3, [fp, #-84]	; 0xffffffac
   1f728:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f72c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f730:	sub	r3, r2, r3
   1f734:	ldr	r2, [fp, #8]
   1f738:	sub	r1, r2, #2
   1f73c:	ldr	r2, [fp, #-8]
   1f740:	add	r2, r1, r2
   1f744:	lsl	r2, r2, #2
   1f748:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1f74c:	add	r2, r1, r2
   1f750:	ldr	r2, [r2]
   1f754:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f758:	cmp	r1, r2
   1f75c:	movhi	r2, #1
   1f760:	movls	r2, #0
   1f764:	uxtb	r2, r2
   1f768:	sub	r3, r3, r2
   1f76c:	str	r3, [fp, #-172]	; 0xffffff54
   1f770:	ldr	r3, [fp, #-84]	; 0xffffffac
   1f774:	str	r3, [fp, #-16]
   1f778:	mov	r3, #32
   1f77c:	str	r3, [fp, #-88]	; 0xffffffa8
   1f780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f784:	str	r3, [fp, #-92]	; 0xffffffa4
   1f788:	ldr	r3, [fp, #-12]
   1f78c:	str	r3, [fp, #-96]	; 0xffffffa0
   1f790:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1f794:	uxth	r3, r3
   1f798:	str	r3, [fp, #-100]	; 0xffffff9c
   1f79c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1f7a0:	lsr	r3, r3, #16
   1f7a4:	str	r3, [fp, #-104]	; 0xffffff98
   1f7a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1f7ac:	uxth	r3, r3
   1f7b0:	str	r3, [fp, #-108]	; 0xffffff94
   1f7b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1f7b8:	lsr	r3, r3, #16
   1f7bc:	str	r3, [fp, #-112]	; 0xffffff90
   1f7c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f7c4:	ldr	r2, [fp, #-108]	; 0xffffff94
   1f7c8:	mul	r3, r2, r3
   1f7cc:	str	r3, [fp, #-116]	; 0xffffff8c
   1f7d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f7d4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1f7d8:	mul	r3, r2, r3
   1f7dc:	str	r3, [fp, #-120]	; 0xffffff88
   1f7e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1f7e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   1f7e8:	mul	r3, r2, r3
   1f7ec:	str	r3, [fp, #-124]	; 0xffffff84
   1f7f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1f7f4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1f7f8:	mul	r3, r2, r3
   1f7fc:	str	r3, [fp, #-24]	; 0xffffffe8
   1f800:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1f804:	lsr	r3, r3, #16
   1f808:	ldr	r2, [fp, #-120]	; 0xffffff88
   1f80c:	add	r3, r2, r3
   1f810:	str	r3, [fp, #-120]	; 0xffffff88
   1f814:	ldr	r2, [fp, #-120]	; 0xffffff88
   1f818:	ldr	r3, [fp, #-124]	; 0xffffff84
   1f81c:	add	r3, r2, r3
   1f820:	str	r3, [fp, #-120]	; 0xffffff88
   1f824:	ldr	r2, [fp, #-120]	; 0xffffff88
   1f828:	ldr	r3, [fp, #-124]	; 0xffffff84
   1f82c:	cmp	r2, r3
   1f830:	bcs	1f840 <__assert_fail@plt+0xe6e8>
   1f834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f838:	add	r3, r3, #65536	; 0x10000
   1f83c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f840:	ldr	r3, [fp, #-120]	; 0xffffff88
   1f844:	lsr	r3, r3, #16
   1f848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f84c:	add	r3, r2, r3
   1f850:	str	r3, [fp, #-128]	; 0xffffff80
   1f854:	ldr	r3, [fp, #-120]	; 0xffffff88
   1f858:	lsl	r2, r3, #16
   1f85c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1f860:	uxth	r3, r3
   1f864:	add	r3, r2, r3
   1f868:	str	r3, [fp, #-132]	; 0xffffff7c
   1f86c:	ldr	r2, [fp, #-16]
   1f870:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1f874:	sub	r3, r2, r3
   1f878:	str	r3, [fp, #-136]	; 0xffffff78
   1f87c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f880:	ldr	r3, [fp, #-128]	; 0xffffff80
   1f884:	sub	r3, r2, r3
   1f888:	ldr	r1, [fp, #-16]
   1f88c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1f890:	cmp	r1, r2
   1f894:	movcc	r2, #1
   1f898:	movcs	r2, #0
   1f89c:	uxtb	r2, r2
   1f8a0:	sub	r3, r3, r2
   1f8a4:	str	r3, [fp, #-172]	; 0xffffff54
   1f8a8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f8ac:	str	r3, [fp, #-16]
   1f8b0:	ldr	r3, [fp, #-12]
   1f8b4:	add	r3, r3, #1
   1f8b8:	str	r3, [fp, #-12]
   1f8bc:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f8c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1f8c4:	cmp	r2, r3
   1f8c8:	movcs	r3, #1
   1f8cc:	movcc	r3, #0
   1f8d0:	uxtb	r3, r3
   1f8d4:	rsb	r3, r3, #0
   1f8d8:	str	r3, [fp, #-140]	; 0xffffff74
   1f8dc:	ldr	r2, [fp, #-12]
   1f8e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8e4:	add	r3, r2, r3
   1f8e8:	str	r3, [fp, #-12]
   1f8ec:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f8f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f8f4:	and	r3, r3, r2
   1f8f8:	ldr	r2, [fp, #-16]
   1f8fc:	add	r3, r2, r3
   1f900:	str	r3, [fp, #-144]	; 0xffffff70
   1f904:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f90c:	and	r2, r2, r3
   1f910:	ldr	r3, [fp, #-172]	; 0xffffff54
   1f914:	add	r3, r2, r3
   1f918:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f91c:	ldr	r2, [fp, #-16]
   1f920:	cmp	r1, r2
   1f924:	movcc	r2, #1
   1f928:	movcs	r2, #0
   1f92c:	uxtb	r2, r2
   1f930:	add	r3, r3, r2
   1f934:	str	r3, [fp, #-172]	; 0xffffff54
   1f938:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f93c:	str	r3, [fp, #-16]
   1f940:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f948:	cmp	r2, r3
   1f94c:	bcc	1f9c0 <__assert_fail@plt+0xe868>
   1f950:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f958:	cmp	r2, r3
   1f95c:	bhi	1f970 <__assert_fail@plt+0xe818>
   1f960:	ldr	r2, [fp, #-16]
   1f964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f968:	cmp	r2, r3
   1f96c:	bcc	1f9c0 <__assert_fail@plt+0xe868>
   1f970:	ldr	r3, [fp, #-12]
   1f974:	add	r3, r3, #1
   1f978:	str	r3, [fp, #-12]
   1f97c:	ldr	r2, [fp, #-16]
   1f980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f984:	sub	r3, r2, r3
   1f988:	str	r3, [fp, #-148]	; 0xffffff6c
   1f98c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1f990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f994:	sub	r3, r2, r3
   1f998:	ldr	r1, [fp, #-16]
   1f99c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f9a0:	cmp	r1, r2
   1f9a4:	movcc	r2, #1
   1f9a8:	movcs	r2, #0
   1f9ac:	uxtb	r2, r2
   1f9b0:	sub	r3, r3, r2
   1f9b4:	str	r3, [fp, #-172]	; 0xffffff54
   1f9b8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1f9bc:	str	r3, [fp, #-16]
   1f9c0:	ldr	r3, [fp, #-8]
   1f9c4:	lsl	r3, r3, #2
   1f9c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1f9cc:	add	r0, r2, r3
   1f9d0:	ldr	r3, [fp, #8]
   1f9d4:	sub	r2, r3, #2
   1f9d8:	ldr	r3, [fp, #-12]
   1f9dc:	ldr	r1, [fp, #4]
   1f9e0:	bl	1d6f0 <__assert_fail@plt+0xc598>
   1f9e4:	str	r0, [fp, #-152]	; 0xffffff68
   1f9e8:	ldr	r2, [fp, #-16]
   1f9ec:	ldr	r3, [fp, #-152]	; 0xffffff68
   1f9f0:	cmp	r2, r3
   1f9f4:	movcc	r3, #1
   1f9f8:	movcs	r3, #0
   1f9fc:	uxtb	r3, r3
   1fa00:	str	r3, [fp, #-156]	; 0xffffff64
   1fa04:	ldr	r2, [fp, #-16]
   1fa08:	ldr	r3, [fp, #-152]	; 0xffffff68
   1fa0c:	sub	r3, r2, r3
   1fa10:	str	r3, [fp, #-16]
   1fa14:	ldr	r2, [fp, #-172]	; 0xffffff54
   1fa18:	ldr	r3, [fp, #-156]	; 0xffffff64
   1fa1c:	cmp	r2, r3
   1fa20:	movcc	r3, #1
   1fa24:	movcs	r3, #0
   1fa28:	uxtb	r3, r3
   1fa2c:	str	r3, [fp, #-152]	; 0xffffff68
   1fa30:	ldr	r2, [fp, #-172]	; 0xffffff54
   1fa34:	ldr	r3, [fp, #-156]	; 0xffffff64
   1fa38:	sub	r3, r2, r3
   1fa3c:	str	r3, [fp, #-172]	; 0xffffff54
   1fa40:	ldr	r3, [fp, #8]
   1fa44:	sub	r2, r3, #2
   1fa48:	ldr	r3, [fp, #-8]
   1fa4c:	add	r3, r2, r3
   1fa50:	lsl	r3, r3, #2
   1fa54:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fa58:	add	r3, r2, r3
   1fa5c:	ldr	r2, [fp, #-16]
   1fa60:	str	r2, [r3]
   1fa64:	ldr	r3, [fp, #-152]	; 0xffffff68
   1fa68:	cmp	r3, #0
   1fa6c:	beq	1fac4 <__assert_fail@plt+0xe96c>
   1fa70:	ldr	r3, [fp, #-8]
   1fa74:	lsl	r3, r3, #2
   1fa78:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fa7c:	add	r0, r2, r3
   1fa80:	ldr	r3, [fp, #-8]
   1fa84:	lsl	r3, r3, #2
   1fa88:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fa8c:	add	r1, r2, r3
   1fa90:	ldr	r3, [fp, #8]
   1fa94:	sub	r3, r3, #1
   1fa98:	ldr	r2, [fp, #4]
   1fa9c:	bl	1ce78 <__assert_fail@plt+0xbd20>
   1faa0:	mov	r2, r0
   1faa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1faa8:	add	r3, r2, r3
   1faac:	ldr	r2, [fp, #-172]	; 0xffffff54
   1fab0:	add	r3, r2, r3
   1fab4:	str	r3, [fp, #-172]	; 0xffffff54
   1fab8:	ldr	r3, [fp, #-12]
   1fabc:	sub	r3, r3, #1
   1fac0:	str	r3, [fp, #-12]
   1fac4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1fac8:	cmp	r3, #0
   1facc:	beq	1fae8 <__assert_fail@plt+0xe990>
   1fad0:	ldr	r3, [fp, #-8]
   1fad4:	lsl	r3, r3, #2
   1fad8:	ldr	r2, [fp, #-160]	; 0xffffff60
   1fadc:	add	r3, r2, r3
   1fae0:	ldr	r2, [fp, #-12]
   1fae4:	str	r2, [r3]
   1fae8:	ldr	r3, [fp, #-8]
   1faec:	sub	r3, r3, #1
   1faf0:	str	r3, [fp, #-8]
   1faf4:	ldr	r3, [fp, #-8]
   1faf8:	cmp	r3, #0
   1fafc:	bge	1f518 <__assert_fail@plt+0xe3c0>
   1fb00:	ldr	r3, [fp, #8]
   1fb04:	sub	r3, r3, #-1073741823	; 0xc0000001
   1fb08:	lsl	r3, r3, #2
   1fb0c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1fb10:	add	r3, r2, r3
   1fb14:	ldr	r2, [fp, #-172]	; 0xffffff54
   1fb18:	str	r2, [r3]
   1fb1c:	nop	{0}
   1fb20:	sub	sp, fp, #4
   1fb24:	ldr	fp, [sp]
   1fb28:	add	sp, sp, #4
   1fb2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb30:	str	fp, [sp, #-8]!
   1fb34:	str	lr, [sp, #4]
   1fb38:	add	fp, sp, #4
   1fb3c:	sub	sp, sp, #48	; 0x30
   1fb40:	str	r0, [fp, #-24]	; 0xffffffe8
   1fb44:	str	r1, [fp, #-28]	; 0xffffffe4
   1fb48:	str	r2, [fp, #-32]	; 0xffffffe0
   1fb4c:	str	r3, [fp, #-36]	; 0xffffffdc
   1fb50:	ldr	r3, [fp, #4]
   1fb54:	cmp	r3, #0
   1fb58:	bgt	1fb7c <__assert_fail@plt+0xea24>
   1fb5c:	movw	r3, #24196	; 0x5e84
   1fb60:	movt	r3, #3
   1fb64:	movw	r2, #1113	; 0x459
   1fb68:	movw	r1, #22376	; 0x5768
   1fb6c:	movt	r1, #3
   1fb70:	movw	r0, #22728	; 0x58c8
   1fb74:	movt	r0, #3
   1fb78:	bl	11158 <__assert_fail@plt>
   1fb7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb80:	ldr	r3, [fp, #4]
   1fb84:	cmp	r2, r3
   1fb88:	bge	1fbac <__assert_fail@plt+0xea54>
   1fb8c:	movw	r3, #24196	; 0x5e84
   1fb90:	movt	r3, #3
   1fb94:	movw	r2, #1114	; 0x45a
   1fb98:	movw	r1, #22376	; 0x5768
   1fb9c:	movt	r1, #3
   1fba0:	movw	r0, #22808	; 0x5918
   1fba4:	movt	r0, #3
   1fba8:	bl	11158 <__assert_fail@plt>
   1fbac:	ldr	r3, [fp, #4]
   1fbb0:	cmp	r3, #1
   1fbb4:	bne	1fbdc <__assert_fail@plt+0xea84>
   1fbb8:	ldr	r3, [fp, #8]
   1fbbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fbc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fbc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fbc8:	bl	1eb50 <__assert_fail@plt+0xd9f8>
   1fbcc:	mov	r2, r0
   1fbd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fbd4:	str	r2, [r3]
   1fbd8:	b	1fd7c <__assert_fail@plt+0xec24>
   1fbdc:	ldr	r3, [fp, #4]
   1fbe0:	cmp	r3, #2
   1fbe4:	bne	1fc00 <__assert_fail@plt+0xeaa8>
   1fbe8:	ldr	r3, [fp, #8]
   1fbec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fbf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fbf8:	bl	1ee74 <__assert_fail@plt+0xdd1c>
   1fbfc:	b	1fd7c <__assert_fail@plt+0xec24>
   1fc00:	ldr	r3, [fp, #8]
   1fc04:	ldr	r2, [r3, #4]
   1fc08:	ldr	r3, [fp, #4]
   1fc0c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1fc10:	lsl	r3, r3, #2
   1fc14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fc18:	add	r3, r1, r3
   1fc1c:	ldr	r3, [r3]
   1fc20:	cmp	r2, r3
   1fc24:	beq	1fc48 <__assert_fail@plt+0xeaf0>
   1fc28:	movw	r3, #24196	; 0x5e84
   1fc2c:	movt	r3, #3
   1fc30:	movw	r2, #1125	; 0x465
   1fc34:	movw	r1, #22376	; 0x5768
   1fc38:	movt	r1, #3
   1fc3c:	movw	r0, #22852	; 0x5944
   1fc40:	movt	r0, #3
   1fc44:	bl	11158 <__assert_fail@plt>
   1fc48:	ldr	r3, [fp, #8]
   1fc4c:	ldr	r2, [r3, #8]
   1fc50:	ldr	r3, [fp, #4]
   1fc54:	sub	r3, r3, #-1073741822	; 0xc0000002
   1fc58:	lsl	r3, r3, #2
   1fc5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fc60:	add	r3, r1, r3
   1fc64:	ldr	r3, [r3]
   1fc68:	cmp	r2, r3
   1fc6c:	beq	1fc90 <__assert_fail@plt+0xeb38>
   1fc70:	movw	r3, #24196	; 0x5e84
   1fc74:	movt	r3, #3
   1fc78:	movw	r2, #1126	; 0x466
   1fc7c:	movw	r1, #22376	; 0x5768
   1fc80:	movt	r1, #3
   1fc84:	movw	r0, #22872	; 0x5958
   1fc88:	movt	r0, #3
   1fc8c:	bl	11158 <__assert_fail@plt>
   1fc90:	ldr	r3, [fp, #8]
   1fc94:	ldr	r3, [r3, #4]
   1fc98:	cmp	r3, #0
   1fc9c:	blt	1fcc0 <__assert_fail@plt+0xeb68>
   1fca0:	movw	r3, #24196	; 0x5e84
   1fca4:	movt	r3, #3
   1fca8:	movw	r2, #1127	; 0x467
   1fcac:	movw	r1, #22376	; 0x5768
   1fcb0:	movt	r1, #3
   1fcb4:	movw	r0, #22892	; 0x596c
   1fcb8:	movt	r0, #3
   1fcbc:	bl	11158 <__assert_fail@plt>
   1fcc0:	ldr	r3, [fp, #8]
   1fcc4:	ldr	r3, [r3]
   1fcc8:	str	r3, [fp, #-12]
   1fccc:	ldr	r3, [fp, #-12]
   1fcd0:	cmp	r3, #0
   1fcd4:	beq	1fcf4 <__assert_fail@plt+0xeb9c>
   1fcd8:	ldr	r3, [fp, #-12]
   1fcdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fce0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fce8:	bl	1dbb0 <__assert_fail@plt+0xca58>
   1fcec:	str	r0, [fp, #-8]
   1fcf0:	b	1fcfc <__assert_fail@plt+0xeba4>
   1fcf4:	mov	r3, #0
   1fcf8:	str	r3, [fp, #-8]
   1fcfc:	ldr	r3, [fp, #8]
   1fd00:	ldr	r3, [r3, #12]
   1fd04:	str	r3, [sp, #8]
   1fd08:	ldr	r3, [fp, #4]
   1fd0c:	str	r3, [sp, #4]
   1fd10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd14:	str	r3, [sp]
   1fd18:	ldr	r3, [fp, #-8]
   1fd1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd28:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1fd2c:	ldr	r3, [fp, #-12]
   1fd30:	cmp	r3, #0
   1fd34:	beq	1fd7c <__assert_fail@plt+0xec24>
   1fd38:	ldr	r3, [fp, #-12]
   1fd3c:	ldr	r2, [fp, #4]
   1fd40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd48:	bl	1dd5c <__assert_fail@plt+0xcc04>
   1fd4c:	str	r0, [fp, #-16]
   1fd50:	ldr	r3, [fp, #-16]
   1fd54:	cmp	r3, #0
   1fd58:	beq	1fd7c <__assert_fail@plt+0xec24>
   1fd5c:	movw	r3, #24196	; 0x5e84
   1fd60:	movt	r3, #3
   1fd64:	movw	r2, #1138	; 0x472
   1fd68:	movw	r1, #22376	; 0x5768
   1fd6c:	movt	r1, #3
   1fd70:	movw	r0, #22928	; 0x5990
   1fd74:	movt	r0, #3
   1fd78:	bl	11158 <__assert_fail@plt>
   1fd7c:	nop	{0}
   1fd80:	sub	sp, fp, #4
   1fd84:	ldr	fp, [sp]
   1fd88:	add	sp, sp, #4
   1fd8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fd90:	str	fp, [sp, #-8]!
   1fd94:	str	lr, [sp, #4]
   1fd98:	add	fp, sp, #4
   1fd9c:	sub	sp, sp, #48	; 0x30
   1fda0:	str	r0, [fp, #-32]	; 0xffffffe0
   1fda4:	str	r1, [fp, #-36]	; 0xffffffdc
   1fda8:	str	r2, [fp, #-40]	; 0xffffffd8
   1fdac:	str	r3, [fp, #-44]	; 0xffffffd4
   1fdb0:	mov	r3, #0
   1fdb4:	str	r3, [fp, #-8]
   1fdb8:	ldr	r3, [fp, #4]
   1fdbc:	cmp	r3, #0
   1fdc0:	bgt	1fde4 <__assert_fail@plt+0xec8c>
   1fdc4:	movw	r3, #24216	; 0x5e98
   1fdc8:	movt	r3, #3
   1fdcc:	movw	r2, #1148	; 0x47c
   1fdd0:	movw	r1, #22376	; 0x5768
   1fdd4:	movt	r1, #3
   1fdd8:	movw	r0, #22728	; 0x58c8
   1fddc:	movt	r0, #3
   1fde0:	bl	11158 <__assert_fail@plt>
   1fde4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fde8:	ldr	r3, [fp, #4]
   1fdec:	cmp	r2, r3
   1fdf0:	bge	1fe14 <__assert_fail@plt+0xecbc>
   1fdf4:	movw	r3, #24216	; 0x5e98
   1fdf8:	movt	r3, #3
   1fdfc:	movw	r2, #1149	; 0x47d
   1fe00:	movw	r1, #22376	; 0x5768
   1fe04:	movt	r1, #3
   1fe08:	movw	r0, #22808	; 0x5918
   1fe0c:	movt	r0, #3
   1fe10:	bl	11158 <__assert_fail@plt>
   1fe14:	sub	r3, fp, #28
   1fe18:	ldr	r2, [fp, #4]
   1fe1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fe20:	mov	r0, r3
   1fe24:	bl	1e914 <__assert_fail@plt+0xd7bc>
   1fe28:	ldr	r3, [fp, #4]
   1fe2c:	cmp	r3, #2
   1fe30:	ble	1fe98 <__assert_fail@plt+0xed40>
   1fe34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe38:	cmp	r3, #0
   1fe3c:	beq	1fe98 <__assert_fail@plt+0xed40>
   1fe40:	ldr	r0, [fp, #4]
   1fe44:	bl	1c968 <__assert_fail@plt+0xb810>
   1fe48:	str	r0, [fp, #-8]
   1fe4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe50:	ldr	r2, [fp, #4]
   1fe54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fe58:	ldr	r0, [fp, #-8]
   1fe5c:	bl	1dbb0 <__assert_fail@plt+0xca58>
   1fe60:	str	r0, [fp, #-12]
   1fe64:	ldr	r3, [fp, #-12]
   1fe68:	cmp	r3, #0
   1fe6c:	beq	1fe90 <__assert_fail@plt+0xed38>
   1fe70:	movw	r3, #24216	; 0x5e98
   1fe74:	movt	r3, #3
   1fe78:	movw	r2, #1155	; 0x483
   1fe7c:	movw	r1, #22376	; 0x5768
   1fe80:	movt	r1, #3
   1fe84:	movw	r0, #22928	; 0x5990
   1fe88:	movt	r0, #3
   1fe8c:	bl	11158 <__assert_fail@plt>
   1fe90:	ldr	r3, [fp, #-8]
   1fe94:	str	r3, [fp, #-44]	; 0xffffffd4
   1fe98:	sub	r3, fp, #28
   1fe9c:	str	r3, [sp, #4]
   1fea0:	ldr	r3, [fp, #4]
   1fea4:	str	r3, [sp]
   1fea8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1feac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1feb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1feb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1feb8:	bl	1fb30 <__assert_fail@plt+0xe9d8>
   1febc:	ldr	r3, [fp, #-8]
   1fec0:	cmp	r3, #0
   1fec4:	beq	1fed4 <__assert_fail@plt+0xed7c>
   1fec8:	ldr	r1, [fp, #4]
   1fecc:	ldr	r0, [fp, #-8]
   1fed0:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   1fed4:	nop	{0}
   1fed8:	sub	sp, fp, #4
   1fedc:	ldr	fp, [sp]
   1fee0:	add	sp, sp, #4
   1fee4:	pop	{pc}		; (ldr pc, [sp], #4)
   1fee8:	push	{fp}		; (str fp, [sp, #-4]!)
   1feec:	add	fp, sp, #0
   1fef0:	sub	sp, sp, #12
   1fef4:	str	r0, [fp, #-8]
   1fef8:	ldr	r3, [fp, #-8]
   1fefc:	cmp	r3, #16
   1ff00:	beq	1ff94 <__assert_fail@plt+0xee3c>
   1ff04:	ldr	r3, [fp, #-8]
   1ff08:	cmp	r3, #16
   1ff0c:	bhi	1ff38 <__assert_fail@plt+0xede0>
   1ff10:	ldr	r3, [fp, #-8]
   1ff14:	cmp	r3, #4
   1ff18:	beq	1ff84 <__assert_fail@plt+0xee2c>
   1ff1c:	ldr	r3, [fp, #-8]
   1ff20:	cmp	r3, #8
   1ff24:	beq	1ff8c <__assert_fail@plt+0xee34>
   1ff28:	ldr	r3, [fp, #-8]
   1ff2c:	cmp	r3, #2
   1ff30:	beq	1ff7c <__assert_fail@plt+0xee24>
   1ff34:	b	1ffbc <__assert_fail@plt+0xee64>
   1ff38:	ldr	r3, [fp, #-8]
   1ff3c:	cmp	r3, #64	; 0x40
   1ff40:	beq	1ffa4 <__assert_fail@plt+0xee4c>
   1ff44:	ldr	r3, [fp, #-8]
   1ff48:	cmp	r3, #64	; 0x40
   1ff4c:	bhi	1ff60 <__assert_fail@plt+0xee08>
   1ff50:	ldr	r3, [fp, #-8]
   1ff54:	cmp	r3, #32
   1ff58:	beq	1ff9c <__assert_fail@plt+0xee44>
   1ff5c:	b	1ffbc <__assert_fail@plt+0xee64>
   1ff60:	ldr	r3, [fp, #-8]
   1ff64:	cmp	r3, #128	; 0x80
   1ff68:	beq	1ffac <__assert_fail@plt+0xee54>
   1ff6c:	ldr	r3, [fp, #-8]
   1ff70:	cmp	r3, #256	; 0x100
   1ff74:	beq	1ffb4 <__assert_fail@plt+0xee5c>
   1ff78:	b	1ffbc <__assert_fail@plt+0xee64>
   1ff7c:	mov	r3, #1
   1ff80:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ff84:	mov	r3, #2
   1ff88:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ff8c:	mov	r3, #3
   1ff90:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ff94:	mov	r3, #4
   1ff98:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ff9c:	mov	r3, #5
   1ffa0:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ffa4:	mov	r3, #6
   1ffa8:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ffac:	mov	r3, #7
   1ffb0:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ffb4:	mov	r3, #8
   1ffb8:	b	1ffc0 <__assert_fail@plt+0xee68>
   1ffbc:	mov	r3, #0
   1ffc0:	mov	r0, r3
   1ffc4:	add	sp, fp, #0
   1ffc8:	pop	{fp}		; (ldr fp, [sp], #4)
   1ffcc:	bx	lr
   1ffd0:	push	{fp}		; (str fp, [sp, #-4]!)
   1ffd4:	add	fp, sp, #0
   1ffd8:	sub	sp, sp, #28
   1ffdc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ffe0:	str	r1, [fp, #-28]	; 0xffffffe4
   1ffe4:	mvn	r2, #0
   1ffe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ffec:	udiv	r3, r2, r3
   1fff0:	str	r3, [fp, #-16]
   1fff4:	mov	r3, #1
   1fff8:	str	r3, [fp, #-12]
   1fffc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20000:	str	r3, [fp, #-8]
   20004:	b	20024 <__assert_fail@plt+0xeecc>
   20008:	ldr	r3, [fp, #-8]
   2000c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20010:	mul	r3, r2, r3
   20014:	str	r3, [fp, #-8]
   20018:	ldr	r3, [fp, #-12]
   2001c:	add	r3, r3, #1
   20020:	str	r3, [fp, #-12]
   20024:	ldr	r2, [fp, #-8]
   20028:	ldr	r3, [fp, #-16]
   2002c:	cmp	r2, r3
   20030:	bls	20008 <__assert_fail@plt+0xeeb0>
   20034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20038:	ldr	r2, [fp, #-12]
   2003c:	str	r2, [r3]
   20040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20044:	ldr	r2, [fp, #-8]
   20048:	str	r2, [r3, #4]
   2004c:	nop	{0}
   20050:	add	sp, fp, #0
   20054:	pop	{fp}		; (ldr fp, [sp], #4)
   20058:	bx	lr
   2005c:	str	fp, [sp, #-8]!
   20060:	str	lr, [sp, #4]
   20064:	add	fp, sp, #4
   20068:	sub	sp, sp, #24
   2006c:	str	r0, [fp, #-24]	; 0xffffffe8
   20070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20074:	cmp	r3, #0
   20078:	bne	2009c <__assert_fail@plt+0xef44>
   2007c:	movw	r3, #24228	; 0x5ea4
   20080:	movt	r3, #3
   20084:	movw	r2, #1210	; 0x4ba
   20088:	movw	r1, #22376	; 0x5768
   2008c:	movt	r1, #3
   20090:	movw	r0, #22940	; 0x599c
   20094:	movt	r0, #3
   20098:	bl	11158 <__assert_fail@plt>
   2009c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200a0:	str	r3, [fp, #-8]
   200a4:	mov	r3, #0
   200a8:	str	r3, [fp, #-12]
   200ac:	mov	r3, #8
   200b0:	str	r3, [fp, #-16]
   200b4:	ldr	r3, [fp, #-16]
   200b8:	cmp	r3, #31
   200bc:	bhi	2010c <__assert_fail@plt+0xefb4>
   200c0:	b	200e0 <__assert_fail@plt+0xef88>
   200c4:	ldr	r2, [fp, #-8]
   200c8:	ldr	r3, [fp, #-16]
   200cc:	lsl	r3, r2, r3
   200d0:	str	r3, [fp, #-8]
   200d4:	ldr	r3, [fp, #-12]
   200d8:	add	r3, r3, #8
   200dc:	str	r3, [fp, #-12]
   200e0:	ldr	r3, [fp, #-8]
   200e4:	and	r3, r3, #-16777216	; 0xff000000
   200e8:	cmp	r3, #0
   200ec:	beq	200c4 <__assert_fail@plt+0xef6c>
   200f0:	b	2010c <__assert_fail@plt+0xefb4>
   200f4:	ldr	r3, [fp, #-8]
   200f8:	lsl	r3, r3, #1
   200fc:	str	r3, [fp, #-8]
   20100:	ldr	r3, [fp, #-12]
   20104:	add	r3, r3, #1
   20108:	str	r3, [fp, #-12]
   2010c:	ldr	r3, [fp, #-8]
   20110:	cmp	r3, #0
   20114:	bge	200f4 <__assert_fail@plt+0xef9c>
   20118:	ldr	r3, [fp, #-12]
   2011c:	str	r3, [fp, #-20]	; 0xffffffec
   20120:	ldr	r3, [fp, #-20]	; 0xffffffec
   20124:	rsb	r3, r3, #32
   20128:	mov	r0, r3
   2012c:	sub	sp, fp, #4
   20130:	ldr	fp, [sp]
   20134:	add	sp, sp, #4
   20138:	pop	{pc}		; (ldr pc, [sp], #4)
   2013c:	str	r4, [sp, #-12]!
   20140:	str	fp, [sp, #4]
   20144:	str	lr, [sp, #8]
   20148:	add	fp, sp, #8
   2014c:	sub	sp, sp, #44	; 0x2c
   20150:	str	r0, [fp, #-40]	; 0xffffffd8
   20154:	str	r1, [fp, #-44]	; 0xffffffd4
   20158:	str	r2, [fp, #-48]	; 0xffffffd0
   2015c:	str	r3, [fp, #-52]	; 0xffffffcc
   20160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20164:	sub	r3, r3, #1
   20168:	lsl	r4, r3, #5
   2016c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20170:	sub	r3, r3, #-1073741823	; 0xc0000001
   20174:	lsl	r3, r3, #2
   20178:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2017c:	add	r3, r2, r3
   20180:	ldr	r3, [r3]
   20184:	mov	r0, r3
   20188:	bl	2005c <__assert_fail@plt+0xef04>
   2018c:	mov	r3, r0
   20190:	add	r2, r4, r3
   20194:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20198:	add	r3, r2, r3
   2019c:	sub	r2, r3, #1
   201a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   201a4:	udiv	r3, r2, r3
   201a8:	str	r3, [fp, #-32]	; 0xffffffe0
   201ac:	mov	r2, #1
   201b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   201b4:	lsl	r3, r2, r3
   201b8:	uxtb	r3, r3
   201bc:	sub	r3, r3, #1
   201c0:	strb	r3, [fp, #-33]	; 0xffffffdf
   201c4:	mov	r3, #0
   201c8:	str	r3, [fp, #-20]	; 0xffffffec
   201cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   201d0:	str	r3, [fp, #-16]
   201d4:	mov	r3, #0
   201d8:	str	r3, [fp, #-24]	; 0xffffffe8
   201dc:	b	20298 <__assert_fail@plt+0xf140>
   201e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   201e4:	lsl	r3, r3, #2
   201e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   201ec:	add	r3, r2, r3
   201f0:	ldr	r2, [r3]
   201f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   201f8:	lsr	r3, r2, r3
   201fc:	strb	r3, [fp, #-25]	; 0xffffffe7
   20200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20204:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20208:	add	r3, r2, r3
   2020c:	str	r3, [fp, #-24]	; 0xffffffe8
   20210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20214:	cmp	r3, #31
   20218:	bls	20278 <__assert_fail@plt+0xf120>
   2021c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20220:	add	r3, r3, #1
   20224:	str	r3, [fp, #-20]	; 0xffffffec
   20228:	ldr	r2, [fp, #-20]	; 0xffffffec
   2022c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20230:	cmp	r2, r3
   20234:	bge	20278 <__assert_fail@plt+0xf120>
   20238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2023c:	sub	r3, r3, #32
   20240:	str	r3, [fp, #-24]	; 0xffffffe8
   20244:	ldr	r3, [fp, #-20]	; 0xffffffec
   20248:	lsl	r3, r3, #2
   2024c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20250:	add	r3, r2, r3
   20254:	ldr	r2, [r3]
   20258:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2025c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20260:	sub	r3, r1, r3
   20264:	lsl	r3, r2, r3
   20268:	uxtb	r2, r3
   2026c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20270:	orr	r3, r2, r3
   20274:	strb	r3, [fp, #-25]	; 0xffffffe7
   20278:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2027c:	ldr	r3, [fp, #-16]
   20280:	add	r3, r2, r3
   20284:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   20288:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   2028c:	and	r2, r2, r1
   20290:	uxtb	r2, r2
   20294:	strb	r2, [r3]
   20298:	ldr	r3, [fp, #-16]
   2029c:	sub	r2, r3, #1
   202a0:	str	r2, [fp, #-16]
   202a4:	cmp	r3, #0
   202a8:	bne	201e0 <__assert_fail@plt+0xf088>
   202ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   202b0:	mov	r0, r3
   202b4:	sub	sp, fp, #8
   202b8:	ldr	r4, [sp]
   202bc:	ldr	fp, [sp, #4]
   202c0:	add	sp, sp, #8
   202c4:	pop	{pc}		; (ldr pc, [sp], #4)
   202c8:	str	fp, [sp, #-8]!
   202cc:	str	lr, [sp, #4]
   202d0:	add	fp, sp, #4
   202d4:	sub	sp, sp, #96	; 0x60
   202d8:	str	r0, [fp, #-88]	; 0xffffffa8
   202dc:	str	r1, [fp, #-92]	; 0xffffffa4
   202e0:	str	r2, [fp, #-96]	; 0xffffffa0
   202e4:	mov	r3, #0
   202e8:	str	r3, [fp, #-8]
   202ec:	b	20584 <__assert_fail@plt+0xf42c>
   202f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   202f4:	ldr	r3, [r3]
   202f8:	rsb	r3, r3, #32
   202fc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   20300:	lsr	r3, r2, r3
   20304:	str	r3, [fp, #-24]	; 0xffffffe8
   20308:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2030c:	ldr	r3, [r3]
   20310:	ldr	r2, [fp, #-92]	; 0xffffffa4
   20314:	lsl	r3, r2, r3
   20318:	str	r3, [fp, #-28]	; 0xffffffe4
   2031c:	mov	r3, #32
   20320:	str	r3, [fp, #-32]	; 0xffffffe0
   20324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20328:	str	r3, [fp, #-36]	; 0xffffffdc
   2032c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   20330:	ldr	r3, [r3, #12]
   20334:	str	r3, [fp, #-40]	; 0xffffffd8
   20338:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2033c:	uxth	r3, r3
   20340:	str	r3, [fp, #-44]	; 0xffffffd4
   20344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20348:	lsr	r3, r3, #16
   2034c:	str	r3, [fp, #-48]	; 0xffffffd0
   20350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20354:	uxth	r3, r3
   20358:	str	r3, [fp, #-52]	; 0xffffffcc
   2035c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20360:	lsr	r3, r3, #16
   20364:	str	r3, [fp, #-56]	; 0xffffffc8
   20368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2036c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20370:	mul	r3, r2, r3
   20374:	str	r3, [fp, #-60]	; 0xffffffc4
   20378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2037c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20380:	mul	r3, r2, r3
   20384:	str	r3, [fp, #-64]	; 0xffffffc0
   20388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2038c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   20390:	mul	r3, r2, r3
   20394:	str	r3, [fp, #-68]	; 0xffffffbc
   20398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2039c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   203a0:	mul	r3, r2, r3
   203a4:	str	r3, [fp, #-20]	; 0xffffffec
   203a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   203ac:	lsr	r3, r3, #16
   203b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   203b4:	add	r3, r2, r3
   203b8:	str	r3, [fp, #-64]	; 0xffffffc0
   203bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   203c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   203c4:	add	r3, r2, r3
   203c8:	str	r3, [fp, #-64]	; 0xffffffc0
   203cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   203d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   203d4:	cmp	r2, r3
   203d8:	bcs	203e8 <__assert_fail@plt+0xf290>
   203dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   203e0:	add	r3, r3, #65536	; 0x10000
   203e4:	str	r3, [fp, #-20]	; 0xffffffec
   203e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   203ec:	lsr	r3, r3, #16
   203f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   203f4:	add	r3, r2, r3
   203f8:	str	r3, [fp, #-12]
   203fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20400:	lsl	r2, r3, #16
   20404:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20408:	uxth	r3, r3
   2040c:	add	r3, r2, r3
   20410:	str	r3, [fp, #-72]	; 0xffffffb8
   20414:	ldr	r2, [fp, #-72]	; 0xffffffb8
   20418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2041c:	add	r3, r2, r3
   20420:	str	r3, [fp, #-76]	; 0xffffffb4
   20424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20428:	ldr	r3, [fp, #-12]
   2042c:	add	r3, r2, r3
   20430:	ldr	r1, [fp, #-76]	; 0xffffffb4
   20434:	ldr	r2, [fp, #-72]	; 0xffffffb8
   20438:	cmp	r1, r2
   2043c:	movcc	r2, #1
   20440:	movcs	r2, #0
   20444:	uxtb	r2, r2
   20448:	add	r3, r3, r2
   2044c:	add	r3, r3, #1
   20450:	str	r3, [fp, #-12]
   20454:	ldr	r3, [fp, #-76]	; 0xffffffb4
   20458:	str	r3, [fp, #-72]	; 0xffffffb8
   2045c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   20460:	ldr	r3, [r3, #4]
   20464:	ldr	r2, [fp, #-12]
   20468:	mul	r3, r2, r3
   2046c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20470:	sub	r3, r2, r3
   20474:	str	r3, [fp, #-16]
   20478:	ldr	r2, [fp, #-16]
   2047c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   20480:	cmp	r2, r3
   20484:	movhi	r3, #1
   20488:	movls	r3, #0
   2048c:	uxtb	r3, r3
   20490:	rsb	r3, r3, #0
   20494:	str	r3, [fp, #-80]	; 0xffffffb0
   20498:	ldr	r2, [fp, #-12]
   2049c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   204a0:	add	r3, r2, r3
   204a4:	str	r3, [fp, #-12]
   204a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   204ac:	ldr	r2, [r3, #4]
   204b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   204b4:	and	r3, r3, r2
   204b8:	ldr	r2, [fp, #-16]
   204bc:	add	r3, r2, r3
   204c0:	str	r3, [fp, #-16]
   204c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   204c8:	ldr	r3, [r3, #4]
   204cc:	ldr	r2, [fp, #-16]
   204d0:	cmp	r2, r3
   204d4:	bcc	204f8 <__assert_fail@plt+0xf3a0>
   204d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   204dc:	ldr	r3, [r3, #4]
   204e0:	ldr	r2, [fp, #-16]
   204e4:	sub	r3, r2, r3
   204e8:	str	r3, [fp, #-16]
   204ec:	ldr	r3, [fp, #-12]
   204f0:	add	r3, r3, #1
   204f4:	str	r3, [fp, #-12]
   204f8:	ldr	r3, [fp, #-16]
   204fc:	str	r3, [fp, #-84]	; 0xffffffac
   20500:	ldr	r3, [fp, #-12]
   20504:	str	r3, [fp, #-92]	; 0xffffffa4
   20508:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2050c:	ldr	r3, [r3]
   20510:	rsb	r3, r3, #32
   20514:	mvn	r2, #0
   20518:	lsr	r2, r2, r3
   2051c:	ldr	r3, [fp, #-84]	; 0xffffffac
   20520:	and	r3, r3, r2
   20524:	cmp	r3, #0
   20528:	beq	2054c <__assert_fail@plt+0xf3f4>
   2052c:	movw	r3, #24252	; 0x5ebc
   20530:	movt	r3, #3
   20534:	movw	r2, #1259	; 0x4eb
   20538:	movw	r1, #22376	; 0x5768
   2053c:	movt	r1, #3
   20540:	movw	r0, #22948	; 0x59a4
   20544:	movt	r0, #3
   20548:	bl	11158 <__assert_fail@plt>
   2054c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   20550:	ldr	r3, [r3]
   20554:	ldr	r2, [fp, #-84]	; 0xffffffac
   20558:	lsr	r3, r2, r3
   2055c:	str	r3, [fp, #-84]	; 0xffffffac
   20560:	ldr	r3, [fp, #-8]
   20564:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20568:	add	r3, r2, r3
   2056c:	ldr	r2, [fp, #-84]	; 0xffffffac
   20570:	uxtb	r2, r2
   20574:	strb	r2, [r3]
   20578:	ldr	r3, [fp, #-8]
   2057c:	add	r3, r3, #1
   20580:	str	r3, [fp, #-8]
   20584:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20588:	cmp	r3, #0
   2058c:	bne	202f0 <__assert_fail@plt+0xf198>
   20590:	ldr	r3, [fp, #-8]
   20594:	mov	r0, r3
   20598:	sub	sp, fp, #4
   2059c:	ldr	fp, [sp]
   205a0:	add	sp, sp, #4
   205a4:	pop	{pc}		; (ldr pc, [sp], #4)
   205a8:	str	fp, [sp, #-8]!
   205ac:	str	lr, [sp, #4]
   205b0:	add	fp, sp, #4
   205b4:	sub	sp, sp, #72	; 0x48
   205b8:	str	r0, [fp, #-64]	; 0xffffffc0
   205bc:	str	r1, [fp, #-68]	; 0xffffffbc
   205c0:	str	r2, [fp, #-72]	; 0xffffffb8
   205c4:	str	r3, [fp, #-76]	; 0xffffffb4
   205c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   205cc:	sub	r3, fp, #40	; 0x28
   205d0:	mov	r1, r2
   205d4:	mov	r0, r3
   205d8:	bl	1e69c <__assert_fail@plt+0xd544>
   205dc:	mov	r3, #0
   205e0:	str	r3, [fp, #-8]
   205e4:	ldr	r3, [fp, #4]
   205e8:	cmp	r3, #1
   205ec:	ble	206d4 <__assert_fail@plt+0xf57c>
   205f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   205f4:	ldr	r2, [r3, #4]
   205f8:	sub	r3, fp, #56	; 0x38
   205fc:	mov	r1, r2
   20600:	mov	r0, r3
   20604:	bl	1e69c <__assert_fail@plt+0xd544>
   20608:	sub	r3, fp, #56	; 0x38
   2060c:	ldr	r2, [fp, #4]
   20610:	ldr	r1, [fp, #-76]	; 0xffffffb4
   20614:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20618:	bl	1eb50 <__assert_fail@plt+0xd9f8>
   2061c:	str	r0, [fp, #-20]	; 0xffffffec
   20620:	ldr	r3, [fp, #4]
   20624:	sub	r3, r3, #-1073741823	; 0xc0000001
   20628:	lsl	r3, r3, #2
   2062c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   20630:	add	r3, r2, r3
   20634:	ldr	r3, [r3]
   20638:	cmp	r3, #0
   2063c:	moveq	r3, #1
   20640:	movne	r3, #0
   20644:	uxtb	r3, r3
   20648:	mov	r2, r3
   2064c:	ldr	r3, [fp, #4]
   20650:	sub	r3, r3, r2
   20654:	str	r3, [fp, #4]
   20658:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2065c:	ldr	r3, [fp, #-8]
   20660:	add	r3, r2, r3
   20664:	sub	r2, fp, #40	; 0x28
   20668:	ldr	r1, [fp, #-20]	; 0xffffffec
   2066c:	mov	r0, r3
   20670:	bl	202c8 <__assert_fail@plt+0xf170>
   20674:	str	r0, [fp, #-16]
   20678:	ldr	r2, [fp, #-8]
   2067c:	ldr	r3, [fp, #-16]
   20680:	add	r3, r2, r3
   20684:	str	r3, [fp, #-8]
   20688:	b	206b4 <__assert_fail@plt+0xf55c>
   2068c:	ldr	r3, [fp, #-8]
   20690:	add	r2, r3, #1
   20694:	str	r2, [fp, #-8]
   20698:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2069c:	add	r3, r2, r3
   206a0:	mov	r2, #0
   206a4:	strb	r2, [r3]
   206a8:	ldr	r3, [fp, #-16]
   206ac:	add	r3, r3, #1
   206b0:	str	r3, [fp, #-16]
   206b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   206b8:	ldr	r3, [r3]
   206bc:	ldr	r2, [fp, #-16]
   206c0:	cmp	r2, r3
   206c4:	bcc	2068c <__assert_fail@plt+0xf534>
   206c8:	ldr	r3, [fp, #4]
   206cc:	cmp	r3, #1
   206d0:	bgt	20608 <__assert_fail@plt+0xf4b0>
   206d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   206d8:	ldr	r3, [fp, #-8]
   206dc:	add	r0, r2, r3
   206e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   206e4:	ldr	r3, [r3]
   206e8:	sub	r2, fp, #40	; 0x28
   206ec:	mov	r1, r3
   206f0:	bl	202c8 <__assert_fail@plt+0xf170>
   206f4:	mov	r2, r0
   206f8:	ldr	r3, [fp, #-8]
   206fc:	add	r3, r3, r2
   20700:	str	r3, [fp, #-8]
   20704:	mov	r3, #0
   20708:	str	r3, [fp, #-12]
   2070c:	b	2077c <__assert_fail@plt+0xf624>
   20710:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20714:	ldr	r3, [fp, #-12]
   20718:	add	r3, r2, r3
   2071c:	ldrb	r3, [r3]
   20720:	strb	r3, [fp, #-21]	; 0xffffffeb
   20724:	ldr	r2, [fp, #-8]
   20728:	ldr	r3, [fp, #-12]
   2072c:	sub	r3, r2, r3
   20730:	sub	r3, r3, #1
   20734:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20738:	add	r2, r2, r3
   2073c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   20740:	ldr	r3, [fp, #-12]
   20744:	add	r3, r1, r3
   20748:	ldrb	r2, [r2]
   2074c:	strb	r2, [r3]
   20750:	ldr	r2, [fp, #-8]
   20754:	ldr	r3, [fp, #-12]
   20758:	sub	r3, r2, r3
   2075c:	sub	r3, r3, #1
   20760:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20764:	add	r3, r2, r3
   20768:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   2076c:	strb	r2, [r3]
   20770:	ldr	r3, [fp, #-12]
   20774:	add	r3, r3, #1
   20778:	str	r3, [fp, #-12]
   2077c:	ldr	r3, [fp, #-12]
   20780:	lsl	r3, r3, #1
   20784:	add	r3, r3, #1
   20788:	ldr	r2, [fp, #-8]
   2078c:	cmp	r2, r3
   20790:	bhi	20710 <__assert_fail@plt+0xf5b8>
   20794:	ldr	r3, [fp, #-8]
   20798:	mov	r0, r3
   2079c:	sub	sp, fp, #4
   207a0:	ldr	fp, [sp]
   207a4:	add	sp, sp, #4
   207a8:	pop	{pc}		; (ldr pc, [sp], #4)
   207ac:	str	fp, [sp, #-8]!
   207b0:	str	lr, [sp, #4]
   207b4:	add	fp, sp, #4
   207b8:	sub	sp, sp, #40	; 0x28
   207bc:	str	r0, [fp, #-24]	; 0xffffffe8
   207c0:	str	r1, [fp, #-28]	; 0xffffffe4
   207c4:	str	r2, [fp, #-32]	; 0xffffffe0
   207c8:	str	r3, [fp, #-36]	; 0xffffffdc
   207cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   207d0:	cmp	r3, #0
   207d4:	bgt	207f8 <__assert_fail@plt+0xf6a0>
   207d8:	movw	r3, #24272	; 0x5ed0
   207dc:	movt	r3, #3
   207e0:	movw	r2, #1316	; 0x524
   207e4:	movw	r1, #22376	; 0x5768
   207e8:	movt	r1, #3
   207ec:	movw	r0, #23008	; 0x59e0
   207f0:	movt	r0, #3
   207f4:	bl	11158 <__assert_fail@plt>
   207f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   207fc:	sub	r3, r3, #-1073741823	; 0xc0000001
   20800:	lsl	r3, r3, #2
   20804:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20808:	add	r3, r2, r3
   2080c:	ldr	r3, [r3]
   20810:	cmp	r3, #0
   20814:	bne	20838 <__assert_fail@plt+0xf6e0>
   20818:	movw	r3, #24272	; 0x5ed0
   2081c:	movt	r3, #3
   20820:	movw	r2, #1317	; 0x525
   20824:	movw	r1, #22376	; 0x5768
   20828:	movt	r1, #3
   2082c:	movw	r0, #23016	; 0x59e8
   20830:	movt	r0, #3
   20834:	bl	11158 <__assert_fail@plt>
   20838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2083c:	mov	r0, r3
   20840:	bl	1fee8 <__assert_fail@plt+0xed90>
   20844:	str	r0, [fp, #-8]
   20848:	ldr	r3, [fp, #-8]
   2084c:	cmp	r3, #0
   20850:	beq	20870 <__assert_fail@plt+0xf718>
   20854:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20858:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2085c:	ldr	r1, [fp, #-8]
   20860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20864:	bl	2013c <__assert_fail@plt+0xefe4>
   20868:	mov	r3, r0
   2086c:	b	208a4 <__assert_fail@plt+0xf74c>
   20870:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20874:	sub	r3, fp, #16
   20878:	mov	r1, r2
   2087c:	mov	r0, r3
   20880:	bl	1ffd0 <__assert_fail@plt+0xee78>
   20884:	sub	r2, fp, #16
   20888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2088c:	str	r3, [sp]
   20890:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2089c:	bl	205a8 <__assert_fail@plt+0xf450>
   208a0:	mov	r3, r0
   208a4:	mov	r0, r3
   208a8:	sub	sp, fp, #4
   208ac:	ldr	fp, [sp]
   208b0:	add	sp, sp, #4
   208b4:	pop	{pc}		; (ldr pc, [sp], #4)
   208b8:	str	fp, [sp, #-8]!
   208bc:	str	lr, [sp, #4]
   208c0:	add	fp, sp, #4
   208c4:	sub	sp, sp, #32
   208c8:	str	r0, [fp, #-24]	; 0xffffffe8
   208cc:	str	r1, [fp, #-28]	; 0xffffffe4
   208d0:	str	r2, [fp, #-32]	; 0xffffffe0
   208d4:	str	r3, [fp, #-36]	; 0xffffffdc
   208d8:	mov	r3, #0
   208dc:	str	r3, [fp, #-12]
   208e0:	mov	r3, #0
   208e4:	str	r3, [fp, #-8]
   208e8:	mov	r3, #0
   208ec:	str	r3, [fp, #-16]
   208f0:	b	2098c <__assert_fail@plt+0xf834>
   208f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   208f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   208fc:	add	r3, r2, r3
   20900:	ldrb	r3, [r3]
   20904:	mov	r2, r3
   20908:	ldr	r3, [fp, #-16]
   2090c:	lsl	r3, r2, r3
   20910:	ldr	r2, [fp, #-12]
   20914:	orr	r3, r2, r3
   20918:	str	r3, [fp, #-12]
   2091c:	ldr	r2, [fp, #-16]
   20920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20924:	add	r3, r2, r3
   20928:	str	r3, [fp, #-16]
   2092c:	ldr	r3, [fp, #-16]
   20930:	cmp	r3, #31
   20934:	bls	2098c <__assert_fail@plt+0xf834>
   20938:	ldr	r3, [fp, #-16]
   2093c:	sub	r3, r3, #32
   20940:	str	r3, [fp, #-16]
   20944:	ldr	r3, [fp, #-8]
   20948:	add	r2, r3, #1
   2094c:	str	r2, [fp, #-8]
   20950:	lsl	r3, r3, #2
   20954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20958:	add	r3, r2, r3
   2095c:	ldr	r2, [fp, #-12]
   20960:	str	r2, [r3]
   20964:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2096c:	add	r3, r2, r3
   20970:	ldrb	r3, [r3]
   20974:	mov	r1, r3
   20978:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2097c:	ldr	r3, [fp, #-16]
   20980:	sub	r3, r2, r3
   20984:	lsr	r3, r1, r3
   20988:	str	r3, [fp, #-12]
   2098c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20990:	sub	r2, r3, #1
   20994:	str	r2, [fp, #-32]	; 0xffffffe0
   20998:	cmp	r3, #0
   2099c:	bne	208f4 <__assert_fail@plt+0xf79c>
   209a0:	ldr	r3, [fp, #-12]
   209a4:	cmp	r3, #0
   209a8:	beq	209d0 <__assert_fail@plt+0xf878>
   209ac:	ldr	r3, [fp, #-8]
   209b0:	add	r2, r3, #1
   209b4:	str	r2, [fp, #-8]
   209b8:	lsl	r3, r3, #2
   209bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   209c0:	add	r3, r2, r3
   209c4:	ldr	r2, [fp, #-12]
   209c8:	str	r2, [r3]
   209cc:	b	209e0 <__assert_fail@plt+0xf888>
   209d0:	ldr	r1, [fp, #-8]
   209d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   209d8:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   209dc:	str	r0, [fp, #-8]
   209e0:	ldr	r3, [fp, #-8]
   209e4:	mov	r0, r3
   209e8:	sub	sp, fp, #4
   209ec:	ldr	fp, [sp]
   209f0:	add	sp, sp, #4
   209f4:	pop	{pc}		; (ldr pc, [sp], #4)
   209f8:	str	fp, [sp, #-8]!
   209fc:	str	lr, [sp, #4]
   20a00:	add	fp, sp, #4
   20a04:	sub	sp, sp, #40	; 0x28
   20a08:	str	r0, [fp, #-32]	; 0xffffffe0
   20a0c:	str	r1, [fp, #-36]	; 0xffffffdc
   20a10:	str	r2, [fp, #-40]	; 0xffffffd8
   20a14:	str	r3, [fp, #-44]	; 0xffffffd4
   20a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a1c:	cmp	r3, #0
   20a20:	bne	20a44 <__assert_fail@plt+0xf8ec>
   20a24:	movw	r3, #24284	; 0x5edc
   20a28:	movt	r3, #3
   20a2c:	movw	r2, #1370	; 0x55a
   20a30:	movw	r1, #22376	; 0x5768
   20a34:	movt	r1, #3
   20a38:	movw	r0, #23032	; 0x59f8
   20a3c:	movt	r0, #3
   20a40:	bl	11158 <__assert_fail@plt>
   20a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a48:	sub	r3, r3, #1
   20a4c:	ldr	r2, [fp, #4]
   20a50:	ldr	r2, [r2]
   20a54:	udiv	r1, r3, r2
   20a58:	mul	r2, r2, r1
   20a5c:	sub	r3, r3, r2
   20a60:	add	r3, r3, #1
   20a64:	str	r3, [fp, #-16]
   20a68:	mov	r3, #0
   20a6c:	str	r3, [fp, #-20]	; 0xffffffec
   20a70:	ldr	r3, [fp, #-20]	; 0xffffffec
   20a74:	add	r2, r3, #1
   20a78:	str	r2, [fp, #-20]	; 0xffffffec
   20a7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20a80:	add	r3, r2, r3
   20a84:	ldrb	r3, [r3]
   20a88:	str	r3, [fp, #-12]
   20a8c:	b	20abc <__assert_fail@plt+0xf964>
   20a90:	ldr	r3, [fp, #-12]
   20a94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20a98:	mul	r2, r2, r3
   20a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20aa0:	add	r1, r3, #1
   20aa4:	str	r1, [fp, #-20]	; 0xffffffec
   20aa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20aac:	add	r3, r1, r3
   20ab0:	ldrb	r3, [r3]
   20ab4:	add	r3, r2, r3
   20ab8:	str	r3, [fp, #-12]
   20abc:	ldr	r3, [fp, #-16]
   20ac0:	sub	r3, r3, #1
   20ac4:	str	r3, [fp, #-16]
   20ac8:	ldr	r3, [fp, #-16]
   20acc:	cmp	r3, #0
   20ad0:	bne	20a90 <__assert_fail@plt+0xf938>
   20ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20ad8:	ldr	r2, [fp, #-12]
   20adc:	str	r2, [r3]
   20ae0:	mov	r3, #1
   20ae4:	str	r3, [fp, #-8]
   20ae8:	b	20bcc <__assert_fail@plt+0xfa74>
   20aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   20af0:	add	r2, r3, #1
   20af4:	str	r2, [fp, #-20]	; 0xffffffec
   20af8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20afc:	add	r3, r2, r3
   20b00:	ldrb	r3, [r3]
   20b04:	str	r3, [fp, #-12]
   20b08:	mov	r3, #1
   20b0c:	str	r3, [fp, #-16]
   20b10:	b	20b4c <__assert_fail@plt+0xf9f4>
   20b14:	ldr	r3, [fp, #-12]
   20b18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20b1c:	mul	r2, r2, r3
   20b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   20b24:	add	r1, r3, #1
   20b28:	str	r1, [fp, #-20]	; 0xffffffec
   20b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20b30:	add	r3, r1, r3
   20b34:	ldrb	r3, [r3]
   20b38:	add	r3, r2, r3
   20b3c:	str	r3, [fp, #-12]
   20b40:	ldr	r3, [fp, #-16]
   20b44:	add	r3, r3, #1
   20b48:	str	r3, [fp, #-16]
   20b4c:	ldr	r3, [fp, #4]
   20b50:	ldr	r3, [r3]
   20b54:	ldr	r2, [fp, #-16]
   20b58:	cmp	r2, r3
   20b5c:	bcc	20b14 <__assert_fail@plt+0xf9bc>
   20b60:	ldr	r3, [fp, #4]
   20b64:	ldr	r3, [r3, #4]
   20b68:	ldr	r2, [fp, #-8]
   20b6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20b74:	bl	1d2fc <__assert_fail@plt+0xc1a4>
   20b78:	str	r0, [fp, #-24]	; 0xffffffe8
   20b7c:	ldr	r3, [fp, #-12]
   20b80:	ldr	r2, [fp, #-8]
   20b84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20b8c:	bl	1cd9c <__assert_fail@plt+0xbc44>
   20b90:	mov	r2, r0
   20b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20b98:	add	r3, r3, r2
   20b9c:	str	r3, [fp, #-24]	; 0xffffffe8
   20ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ba4:	cmp	r3, #0
   20ba8:	beq	20bcc <__assert_fail@plt+0xfa74>
   20bac:	ldr	r3, [fp, #-8]
   20bb0:	add	r2, r3, #1
   20bb4:	str	r2, [fp, #-8]
   20bb8:	lsl	r3, r3, #2
   20bbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20bc0:	add	r3, r2, r3
   20bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20bc8:	str	r2, [r3]
   20bcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   20bd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bd4:	cmp	r2, r3
   20bd8:	bcc	20aec <__assert_fail@plt+0xf994>
   20bdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   20be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20be4:	cmp	r2, r3
   20be8:	beq	20c0c <__assert_fail@plt+0xfab4>
   20bec:	movw	r3, #24284	; 0x5edc
   20bf0:	movt	r3, #3
   20bf4:	movw	r2, #1394	; 0x572
   20bf8:	movw	r1, #22376	; 0x5768
   20bfc:	movt	r1, #3
   20c00:	movw	r0, #23040	; 0x5a00
   20c04:	movt	r0, #3
   20c08:	bl	11158 <__assert_fail@plt>
   20c0c:	ldr	r3, [fp, #-8]
   20c10:	mov	r0, r3
   20c14:	sub	sp, fp, #4
   20c18:	ldr	fp, [sp]
   20c1c:	add	sp, sp, #4
   20c20:	pop	{pc}		; (ldr pc, [sp], #4)
   20c24:	str	fp, [sp, #-8]!
   20c28:	str	lr, [sp, #4]
   20c2c:	add	fp, sp, #4
   20c30:	sub	sp, sp, #40	; 0x28
   20c34:	str	r0, [fp, #-24]	; 0xffffffe8
   20c38:	str	r1, [fp, #-28]	; 0xffffffe4
   20c3c:	str	r2, [fp, #-32]	; 0xffffffe0
   20c40:	str	r3, [fp, #-36]	; 0xffffffdc
   20c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20c48:	cmp	r3, #0
   20c4c:	bne	20c58 <__assert_fail@plt+0xfb00>
   20c50:	mov	r3, #0
   20c54:	b	20cc8 <__assert_fail@plt+0xfb70>
   20c58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20c5c:	mov	r0, r3
   20c60:	bl	1fee8 <__assert_fail@plt+0xed90>
   20c64:	str	r0, [fp, #-8]
   20c68:	ldr	r3, [fp, #-8]
   20c6c:	cmp	r3, #0
   20c70:	beq	20c90 <__assert_fail@plt+0xfb38>
   20c74:	ldr	r3, [fp, #-8]
   20c78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20c84:	bl	208b8 <__assert_fail@plt+0xf760>
   20c88:	mov	r3, r0
   20c8c:	b	20cc8 <__assert_fail@plt+0xfb70>
   20c90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20c94:	sub	r3, fp, #16
   20c98:	mov	r1, r2
   20c9c:	mov	r0, r3
   20ca0:	bl	1ffd0 <__assert_fail@plt+0xee78>
   20ca4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20ca8:	sub	r3, fp, #16
   20cac:	str	r3, [sp]
   20cb0:	mov	r3, r2
   20cb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20cb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20cc0:	bl	209f8 <__assert_fail@plt+0xf8a0>
   20cc4:	mov	r3, r0
   20cc8:	mov	r0, r3
   20ccc:	sub	sp, fp, #4
   20cd0:	ldr	fp, [sp]
   20cd4:	add	sp, sp, #4
   20cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   20cdc:	push	{fp}		; (str fp, [sp, #-4]!)
   20ce0:	add	fp, sp, #0
   20ce4:	sub	sp, sp, #12
   20ce8:	str	r0, [fp, #-8]
   20cec:	ldr	r3, [fp, #-8]
   20cf0:	mov	r2, #0
   20cf4:	str	r2, [r3]
   20cf8:	ldr	r3, [fp, #-8]
   20cfc:	mov	r2, #0
   20d00:	str	r2, [r3, #4]
   20d04:	ldr	r2, [fp, #-8]
   20d08:	movw	r3, #24304	; 0x5ef0
   20d0c:	movt	r3, #3
   20d10:	str	r3, [r2, #8]
   20d14:	nop	{0}
   20d18:	add	sp, fp, #0
   20d1c:	pop	{fp}		; (ldr fp, [sp], #4)
   20d20:	bx	lr
   20d24:	str	fp, [sp, #-8]!
   20d28:	str	lr, [sp, #4]
   20d2c:	add	fp, sp, #4
   20d30:	sub	sp, sp, #16
   20d34:	str	r0, [fp, #-16]
   20d38:	str	r1, [fp, #-20]	; 0xffffffec
   20d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d40:	cmp	r3, #0
   20d44:	movne	r3, #1
   20d48:	moveq	r3, #0
   20d4c:	uxtb	r3, r3
   20d50:	mov	r2, r3
   20d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d58:	sub	r3, r3, r2
   20d5c:	str	r3, [fp, #-20]	; 0xffffffec
   20d60:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d64:	lsr	r3, r3, #5
   20d68:	add	r3, r3, #1
   20d6c:	str	r3, [fp, #-8]
   20d70:	ldr	r3, [fp, #-16]
   20d74:	ldr	r2, [fp, #-8]
   20d78:	str	r2, [r3]
   20d7c:	ldr	r3, [fp, #-16]
   20d80:	mov	r2, #0
   20d84:	str	r2, [r3, #4]
   20d88:	ldr	r0, [fp, #-8]
   20d8c:	bl	1c968 <__assert_fail@plt+0xb810>
   20d90:	mov	r2, r0
   20d94:	ldr	r3, [fp, #-16]
   20d98:	str	r2, [r3, #8]
   20d9c:	nop	{0}
   20da0:	sub	sp, fp, #4
   20da4:	ldr	fp, [sp]
   20da8:	add	sp, sp, #4
   20dac:	pop	{pc}		; (ldr pc, [sp], #4)
   20db0:	str	fp, [sp, #-8]!
   20db4:	str	lr, [sp, #4]
   20db8:	add	fp, sp, #4
   20dbc:	sub	sp, sp, #8
   20dc0:	str	r0, [fp, #-8]
   20dc4:	ldr	r3, [fp, #-8]
   20dc8:	ldr	r3, [r3]
   20dcc:	cmp	r3, #0
   20dd0:	beq	20df0 <__assert_fail@plt+0xfc98>
   20dd4:	ldr	r3, [fp, #-8]
   20dd8:	ldr	r2, [r3, #8]
   20ddc:	ldr	r3, [fp, #-8]
   20de0:	ldr	r3, [r3]
   20de4:	mov	r1, r3
   20de8:	mov	r0, r2
   20dec:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   20df0:	nop	{0}
   20df4:	sub	sp, fp, #4
   20df8:	ldr	fp, [sp]
   20dfc:	add	sp, sp, #4
   20e00:	pop	{pc}		; (ldr pc, [sp], #4)
   20e04:	str	fp, [sp, #-8]!
   20e08:	str	lr, [sp, #4]
   20e0c:	add	fp, sp, #4
   20e10:	sub	sp, sp, #8
   20e14:	str	r0, [fp, #-8]
   20e18:	str	r1, [fp, #-12]
   20e1c:	ldr	r3, [fp, #-12]
   20e20:	cmp	r3, #1
   20e24:	movge	r3, r3
   20e28:	movlt	r3, #1
   20e2c:	str	r3, [fp, #-12]
   20e30:	ldr	r3, [fp, #-8]
   20e34:	ldr	r3, [r3]
   20e38:	cmp	r3, #0
   20e3c:	beq	20e6c <__assert_fail@plt+0xfd14>
   20e40:	ldr	r3, [fp, #-8]
   20e44:	ldr	r0, [r3, #8]
   20e48:	ldr	r3, [fp, #-8]
   20e4c:	ldr	r3, [r3]
   20e50:	ldr	r2, [fp, #-12]
   20e54:	mov	r1, r3
   20e58:	bl	1c9b0 <__assert_fail@plt+0xb858>
   20e5c:	mov	r2, r0
   20e60:	ldr	r3, [fp, #-8]
   20e64:	str	r2, [r3, #8]
   20e68:	b	20e80 <__assert_fail@plt+0xfd28>
   20e6c:	ldr	r0, [fp, #-12]
   20e70:	bl	1c968 <__assert_fail@plt+0xb810>
   20e74:	mov	r2, r0
   20e78:	ldr	r3, [fp, #-8]
   20e7c:	str	r2, [r3, #8]
   20e80:	ldr	r3, [fp, #-8]
   20e84:	ldr	r2, [fp, #-12]
   20e88:	str	r2, [r3]
   20e8c:	ldr	r3, [fp, #-8]
   20e90:	ldr	r3, [r3, #4]
   20e94:	cmp	r3, #0
   20e98:	rsblt	r3, r3, #0
   20e9c:	ldr	r2, [fp, #-12]
   20ea0:	cmp	r2, r3
   20ea4:	bge	20eb4 <__assert_fail@plt+0xfd5c>
   20ea8:	ldr	r3, [fp, #-8]
   20eac:	mov	r2, #0
   20eb0:	str	r2, [r3, #4]
   20eb4:	ldr	r3, [fp, #-8]
   20eb8:	ldr	r3, [r3, #8]
   20ebc:	mov	r0, r3
   20ec0:	sub	sp, fp, #4
   20ec4:	ldr	fp, [sp]
   20ec8:	add	sp, sp, #4
   20ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   20ed0:	str	r4, [sp, #-12]!
   20ed4:	str	fp, [sp, #4]
   20ed8:	str	lr, [sp, #8]
   20edc:	add	fp, sp, #8
   20ee0:	sub	sp, sp, #12
   20ee4:	str	r0, [fp, #-16]
   20ee8:	str	r1, [fp, #-20]	; 0xffffffec
   20eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   20ef0:	cmp	r3, #0
   20ef4:	blt	20f0c <__assert_fail@plt+0xfdb4>
   20ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20efc:	mov	r1, r3
   20f00:	ldr	r0, [fp, #-16]
   20f04:	bl	20f68 <__assert_fail@plt+0xfe10>
   20f08:	b	20f50 <__assert_fail@plt+0xfdf8>
   20f0c:	ldr	r3, [fp, #-16]
   20f10:	mvn	r2, #0
   20f14:	str	r2, [r3, #4]
   20f18:	ldr	r4, [fp, #-20]	; 0xffffffec
   20f1c:	ldr	r3, [fp, #-16]
   20f20:	ldr	r3, [r3]
   20f24:	cmp	r3, #0
   20f28:	bgt	20f40 <__assert_fail@plt+0xfde8>
   20f2c:	mov	r1, #1
   20f30:	ldr	r0, [fp, #-16]
   20f34:	bl	20e04 <__assert_fail@plt+0xfcac>
   20f38:	mov	r3, r0
   20f3c:	b	20f48 <__assert_fail@plt+0xfdf0>
   20f40:	ldr	r3, [fp, #-16]
   20f44:	ldr	r3, [r3, #8]
   20f48:	rsb	r2, r4, #0
   20f4c:	str	r2, [r3]
   20f50:	nop	{0}
   20f54:	sub	sp, fp, #8
   20f58:	ldr	r4, [sp]
   20f5c:	ldr	fp, [sp, #4]
   20f60:	add	sp, sp, #8
   20f64:	pop	{pc}		; (ldr pc, [sp], #4)
   20f68:	str	fp, [sp, #-8]!
   20f6c:	str	lr, [sp, #4]
   20f70:	add	fp, sp, #4
   20f74:	sub	sp, sp, #8
   20f78:	str	r0, [fp, #-8]
   20f7c:	str	r1, [fp, #-12]
   20f80:	ldr	r3, [fp, #-12]
   20f84:	cmp	r3, #0
   20f88:	beq	20fd0 <__assert_fail@plt+0xfe78>
   20f8c:	ldr	r3, [fp, #-8]
   20f90:	mov	r2, #1
   20f94:	str	r2, [r3, #4]
   20f98:	ldr	r3, [fp, #-8]
   20f9c:	ldr	r3, [r3]
   20fa0:	cmp	r3, #0
   20fa4:	bgt	20fbc <__assert_fail@plt+0xfe64>
   20fa8:	mov	r1, #1
   20fac:	ldr	r0, [fp, #-8]
   20fb0:	bl	20e04 <__assert_fail@plt+0xfcac>
   20fb4:	mov	r3, r0
   20fb8:	b	20fc4 <__assert_fail@plt+0xfe6c>
   20fbc:	ldr	r3, [fp, #-8]
   20fc0:	ldr	r3, [r3, #8]
   20fc4:	ldr	r2, [fp, #-12]
   20fc8:	str	r2, [r3]
   20fcc:	b	20fdc <__assert_fail@plt+0xfe84>
   20fd0:	ldr	r3, [fp, #-8]
   20fd4:	mov	r2, #0
   20fd8:	str	r2, [r3, #4]
   20fdc:	nop	{0}
   20fe0:	sub	sp, fp, #4
   20fe4:	ldr	fp, [sp]
   20fe8:	add	sp, sp, #4
   20fec:	pop	{pc}		; (ldr pc, [sp], #4)
   20ff0:	str	fp, [sp, #-8]!
   20ff4:	str	lr, [sp, #4]
   20ff8:	add	fp, sp, #4
   20ffc:	sub	sp, sp, #16
   21000:	str	r0, [fp, #-16]
   21004:	str	r1, [fp, #-20]	; 0xffffffec
   21008:	ldr	r2, [fp, #-16]
   2100c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21010:	cmp	r2, r3
   21014:	beq	21088 <__assert_fail@plt+0xff30>
   21018:	ldr	r3, [fp, #-20]	; 0xffffffec
   2101c:	ldr	r3, [r3, #4]
   21020:	cmp	r3, #0
   21024:	rsblt	r3, r3, #0
   21028:	str	r3, [fp, #-8]
   2102c:	ldr	r3, [fp, #-16]
   21030:	ldr	r3, [r3]
   21034:	ldr	r2, [fp, #-8]
   21038:	cmp	r2, r3
   2103c:	ble	21054 <__assert_fail@plt+0xfefc>
   21040:	ldr	r1, [fp, #-8]
   21044:	ldr	r0, [fp, #-16]
   21048:	bl	20e04 <__assert_fail@plt+0xfcac>
   2104c:	mov	r3, r0
   21050:	b	2105c <__assert_fail@plt+0xff04>
   21054:	ldr	r3, [fp, #-16]
   21058:	ldr	r3, [r3, #8]
   2105c:	str	r3, [fp, #-12]
   21060:	ldr	r3, [fp, #-20]	; 0xffffffec
   21064:	ldr	r3, [r3, #8]
   21068:	ldr	r2, [fp, #-8]
   2106c:	mov	r1, r3
   21070:	ldr	r0, [fp, #-12]
   21074:	bl	1ca80 <__assert_fail@plt+0xb928>
   21078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2107c:	ldr	r2, [r3, #4]
   21080:	ldr	r3, [fp, #-16]
   21084:	str	r2, [r3, #4]
   21088:	nop	{0}
   2108c:	sub	sp, fp, #4
   21090:	ldr	fp, [sp]
   21094:	add	sp, sp, #4
   21098:	pop	{pc}		; (ldr pc, [sp], #4)
   2109c:	str	fp, [sp, #-8]!
   210a0:	str	lr, [sp, #4]
   210a4:	add	fp, sp, #4
   210a8:	sub	sp, sp, #8
   210ac:	str	r0, [fp, #-8]
   210b0:	str	r1, [fp, #-12]
   210b4:	ldr	r0, [fp, #-8]
   210b8:	bl	20cdc <__assert_fail@plt+0xfb84>
   210bc:	ldr	r1, [fp, #-12]
   210c0:	ldr	r0, [fp, #-8]
   210c4:	bl	20ed0 <__assert_fail@plt+0xfd78>
   210c8:	nop	{0}
   210cc:	sub	sp, fp, #4
   210d0:	ldr	fp, [sp]
   210d4:	add	sp, sp, #4
   210d8:	pop	{pc}		; (ldr pc, [sp], #4)
   210dc:	str	fp, [sp, #-8]!
   210e0:	str	lr, [sp, #4]
   210e4:	add	fp, sp, #4
   210e8:	sub	sp, sp, #8
   210ec:	str	r0, [fp, #-8]
   210f0:	str	r1, [fp, #-12]
   210f4:	ldr	r0, [fp, #-8]
   210f8:	bl	20cdc <__assert_fail@plt+0xfb84>
   210fc:	ldr	r1, [fp, #-12]
   21100:	ldr	r0, [fp, #-8]
   21104:	bl	20f68 <__assert_fail@plt+0xfe10>
   21108:	nop	{0}
   2110c:	sub	sp, fp, #4
   21110:	ldr	fp, [sp]
   21114:	add	sp, sp, #4
   21118:	pop	{pc}		; (ldr pc, [sp], #4)
   2111c:	str	fp, [sp, #-8]!
   21120:	str	lr, [sp, #4]
   21124:	add	fp, sp, #4
   21128:	sub	sp, sp, #8
   2112c:	str	r0, [fp, #-8]
   21130:	str	r1, [fp, #-12]
   21134:	ldr	r0, [fp, #-8]
   21138:	bl	20cdc <__assert_fail@plt+0xfb84>
   2113c:	ldr	r1, [fp, #-12]
   21140:	ldr	r0, [fp, #-8]
   21144:	bl	20ff0 <__assert_fail@plt+0xfe98>
   21148:	nop	{0}
   2114c:	sub	sp, fp, #4
   21150:	ldr	fp, [sp]
   21154:	add	sp, sp, #4
   21158:	pop	{pc}		; (ldr pc, [sp], #4)
   2115c:	str	fp, [sp, #-8]!
   21160:	str	lr, [sp, #4]
   21164:	add	fp, sp, #4
   21168:	sub	sp, sp, #8
   2116c:	str	r0, [fp, #-8]
   21170:	mvn	r1, #-2147483648	; 0x80000000
   21174:	ldr	r0, [fp, #-8]
   21178:	bl	21f6c <__assert_fail@plt+0x10e14>
   2117c:	mov	r3, r0
   21180:	cmp	r3, #0
   21184:	bgt	211a8 <__assert_fail@plt+0x10050>
   21188:	mov	r1, #-2147483648	; 0x80000000
   2118c:	ldr	r0, [fp, #-8]
   21190:	bl	21f6c <__assert_fail@plt+0x10e14>
   21194:	mov	r3, r0
   21198:	cmp	r3, #0
   2119c:	blt	211a8 <__assert_fail@plt+0x10050>
   211a0:	mov	r3, #1
   211a4:	b	211ac <__assert_fail@plt+0x10054>
   211a8:	mov	r3, #0
   211ac:	mov	r0, r3
   211b0:	sub	sp, fp, #4
   211b4:	ldr	fp, [sp]
   211b8:	add	sp, sp, #4
   211bc:	pop	{pc}		; (ldr pc, [sp], #4)
   211c0:	push	{fp}		; (str fp, [sp, #-4]!)
   211c4:	add	fp, sp, #0
   211c8:	sub	sp, sp, #20
   211cc:	str	r0, [fp, #-16]
   211d0:	str	r1, [fp, #-20]	; 0xffffffec
   211d4:	mov	r3, #1
   211d8:	str	r3, [fp, #-8]
   211dc:	mov	r3, #0
   211e0:	str	r3, [fp, #-12]
   211e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   211e8:	ldr	r3, [fp, #-8]
   211ec:	cmp	r2, r3
   211f0:	ble	21228 <__assert_fail@plt+0x100d0>
   211f4:	ldr	r3, [fp, #-8]
   211f8:	lsl	r3, r3, #2
   211fc:	ldr	r2, [fp, #-16]
   21200:	add	r3, r2, r3
   21204:	ldr	r3, [r3]
   21208:	ldr	r2, [fp, #-12]
   2120c:	cmp	r2, r3
   21210:	bls	21230 <__assert_fail@plt+0x100d8>
   21214:	ldr	r3, [fp, #-8]
   21218:	add	r3, r3, #1
   2121c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21220:	cmp	r2, r3
   21224:	bne	21230 <__assert_fail@plt+0x100d8>
   21228:	mov	r3, #1
   2122c:	b	21234 <__assert_fail@plt+0x100dc>
   21230:	mov	r3, #0
   21234:	mov	r0, r3
   21238:	add	sp, fp, #0
   2123c:	pop	{fp}		; (ldr fp, [sp], #4)
   21240:	bx	lr
   21244:	str	fp, [sp, #-8]!
   21248:	str	lr, [sp, #4]
   2124c:	add	fp, sp, #4
   21250:	sub	sp, sp, #16
   21254:	str	r0, [fp, #-16]
   21258:	ldr	r3, [fp, #-16]
   2125c:	ldr	r3, [r3, #4]
   21260:	str	r3, [fp, #-8]
   21264:	ldr	r3, [fp, #-8]
   21268:	cmp	r3, #0
   2126c:	blt	21298 <__assert_fail@plt+0x10140>
   21270:	ldr	r3, [fp, #-16]
   21274:	ldr	r3, [r3, #8]
   21278:	ldr	r1, [fp, #-8]
   2127c:	mov	r0, r3
   21280:	bl	211c0 <__assert_fail@plt+0x10068>
   21284:	mov	r3, r0
   21288:	cmp	r3, #0
   2128c:	beq	21298 <__assert_fail@plt+0x10140>
   21290:	mov	r3, #1
   21294:	b	2129c <__assert_fail@plt+0x10144>
   21298:	mov	r3, #0
   2129c:	mov	r0, r3
   212a0:	sub	sp, fp, #4
   212a4:	ldr	fp, [sp]
   212a8:	add	sp, sp, #4
   212ac:	pop	{pc}		; (ldr pc, [sp], #4)
   212b0:	str	fp, [sp, #-8]!
   212b4:	str	lr, [sp, #4]
   212b8:	add	fp, sp, #4
   212bc:	sub	sp, sp, #8
   212c0:	str	r0, [fp, #-8]
   212c4:	mvn	r1, #-2147483648	; 0x80000000
   212c8:	ldr	r0, [fp, #-8]
   212cc:	bl	21f6c <__assert_fail@plt+0x10e14>
   212d0:	mov	r3, r0
   212d4:	cmp	r3, #0
   212d8:	bgt	212fc <__assert_fail@plt+0x101a4>
   212dc:	mov	r1, #-2147483648	; 0x80000000
   212e0:	ldr	r0, [fp, #-8]
   212e4:	bl	21f6c <__assert_fail@plt+0x10e14>
   212e8:	mov	r3, r0
   212ec:	cmp	r3, #0
   212f0:	blt	212fc <__assert_fail@plt+0x101a4>
   212f4:	mov	r3, #1
   212f8:	b	21300 <__assert_fail@plt+0x101a8>
   212fc:	mov	r3, #0
   21300:	mov	r0, r3
   21304:	sub	sp, fp, #4
   21308:	ldr	fp, [sp]
   2130c:	add	sp, sp, #4
   21310:	pop	{pc}		; (ldr pc, [sp], #4)
   21314:	str	fp, [sp, #-8]!
   21318:	str	lr, [sp, #4]
   2131c:	add	fp, sp, #4
   21320:	sub	sp, sp, #8
   21324:	str	r0, [fp, #-8]
   21328:	ldr	r3, [fp, #-8]
   2132c:	ldr	r3, [r3, #4]
   21330:	cmp	r3, #0
   21334:	blt	21358 <__assert_fail@plt+0x10200>
   21338:	mvn	r1, #0
   2133c:	ldr	r0, [fp, #-8]
   21340:	bl	2211c <__assert_fail@plt+0x10fc4>
   21344:	mov	r3, r0
   21348:	cmp	r3, #0
   2134c:	bgt	21358 <__assert_fail@plt+0x10200>
   21350:	mov	r3, #1
   21354:	b	2135c <__assert_fail@plt+0x10204>
   21358:	mov	r3, #0
   2135c:	mov	r0, r3
   21360:	sub	sp, fp, #4
   21364:	ldr	fp, [sp]
   21368:	add	sp, sp, #4
   2136c:	pop	{pc}		; (ldr pc, [sp], #4)
   21370:	str	fp, [sp, #-8]!
   21374:	str	lr, [sp, #4]
   21378:	add	fp, sp, #4
   2137c:	sub	sp, sp, #8
   21380:	str	r0, [fp, #-8]
   21384:	movw	r1, #32767	; 0x7fff
   21388:	ldr	r0, [fp, #-8]
   2138c:	bl	21f6c <__assert_fail@plt+0x10e14>
   21390:	mov	r3, r0
   21394:	cmp	r3, #0
   21398:	bgt	213c0 <__assert_fail@plt+0x10268>
   2139c:	mov	r1, #32768	; 0x8000
   213a0:	movt	r1, #65535	; 0xffff
   213a4:	ldr	r0, [fp, #-8]
   213a8:	bl	21f6c <__assert_fail@plt+0x10e14>
   213ac:	mov	r3, r0
   213b0:	cmp	r3, #0
   213b4:	blt	213c0 <__assert_fail@plt+0x10268>
   213b8:	mov	r3, #1
   213bc:	b	213c4 <__assert_fail@plt+0x1026c>
   213c0:	mov	r3, #0
   213c4:	mov	r0, r3
   213c8:	sub	sp, fp, #4
   213cc:	ldr	fp, [sp]
   213d0:	add	sp, sp, #4
   213d4:	pop	{pc}		; (ldr pc, [sp], #4)
   213d8:	str	fp, [sp, #-8]!
   213dc:	str	lr, [sp, #4]
   213e0:	add	fp, sp, #4
   213e4:	sub	sp, sp, #8
   213e8:	str	r0, [fp, #-8]
   213ec:	ldr	r3, [fp, #-8]
   213f0:	ldr	r3, [r3, #4]
   213f4:	cmp	r3, #0
   213f8:	blt	2141c <__assert_fail@plt+0x102c4>
   213fc:	movw	r1, #65535	; 0xffff
   21400:	ldr	r0, [fp, #-8]
   21404:	bl	2211c <__assert_fail@plt+0x10fc4>
   21408:	mov	r3, r0
   2140c:	cmp	r3, #0
   21410:	bgt	2141c <__assert_fail@plt+0x102c4>
   21414:	mov	r3, #1
   21418:	b	21420 <__assert_fail@plt+0x102c8>
   2141c:	mov	r3, #0
   21420:	mov	r0, r3
   21424:	sub	sp, fp, #4
   21428:	ldr	fp, [sp]
   2142c:	add	sp, sp, #4
   21430:	pop	{pc}		; (ldr pc, [sp], #4)
   21434:	str	fp, [sp, #-8]!
   21438:	str	lr, [sp, #4]
   2143c:	add	fp, sp, #4
   21440:	sub	sp, sp, #16
   21444:	str	r0, [fp, #-16]
   21448:	ldr	r0, [fp, #-16]
   2144c:	bl	214a8 <__assert_fail@plt+0x10350>
   21450:	str	r0, [fp, #-8]
   21454:	mov	r3, #1
   21458:	str	r3, [fp, #-12]
   2145c:	ldr	r3, [fp, #-16]
   21460:	ldr	r3, [r3, #4]
   21464:	cmp	r3, #0
   21468:	bge	2148c <__assert_fail@plt+0x10334>
   2146c:	ldr	r3, [fp, #-12]
   21470:	rsb	r2, r3, #0
   21474:	ldr	r1, [fp, #-8]
   21478:	ldr	r3, [fp, #-12]
   2147c:	sub	r3, r1, r3
   21480:	bic	r3, r3, #-2147483648	; 0x80000000
   21484:	sub	r3, r2, r3
   21488:	b	21494 <__assert_fail@plt+0x1033c>
   2148c:	ldr	r3, [fp, #-8]
   21490:	bic	r3, r3, #-2147483648	; 0x80000000
   21494:	mov	r0, r3
   21498:	sub	sp, fp, #4
   2149c:	ldr	fp, [sp]
   214a0:	add	sp, sp, #4
   214a4:	pop	{pc}		; (ldr pc, [sp], #4)
   214a8:	push	{fp}		; (str fp, [sp, #-4]!)
   214ac:	add	fp, sp, #0
   214b0:	sub	sp, sp, #12
   214b4:	str	r0, [fp, #-8]
   214b8:	ldr	r3, [fp, #-8]
   214bc:	ldr	r3, [r3, #4]
   214c0:	cmp	r3, #0
   214c4:	beq	214d8 <__assert_fail@plt+0x10380>
   214c8:	ldr	r3, [fp, #-8]
   214cc:	ldr	r3, [r3, #8]
   214d0:	ldr	r3, [r3]
   214d4:	b	214dc <__assert_fail@plt+0x10384>
   214d8:	mov	r3, #0
   214dc:	mov	r0, r3
   214e0:	add	sp, fp, #0
   214e4:	pop	{fp}		; (ldr fp, [sp], #4)
   214e8:	bx	lr
   214ec:	push	{fp}		; (str fp, [sp, #-4]!)
   214f0:	add	fp, sp, #0
   214f4:	sub	sp, sp, #12
   214f8:	str	r0, [fp, #-8]
   214fc:	ldr	r3, [fp, #-8]
   21500:	ldr	r3, [r3, #4]
   21504:	cmp	r3, #0
   21508:	rsblt	r3, r3, #0
   2150c:	mov	r0, r3
   21510:	add	sp, fp, #0
   21514:	pop	{fp}		; (ldr fp, [sp], #4)
   21518:	bx	lr
   2151c:	push	{fp}		; (str fp, [sp, #-4]!)
   21520:	add	fp, sp, #0
   21524:	sub	sp, sp, #12
   21528:	str	r0, [fp, #-8]
   2152c:	str	r1, [fp, #-12]
   21530:	ldr	r3, [fp, #-12]
   21534:	cmp	r3, #0
   21538:	blt	21574 <__assert_fail@plt+0x1041c>
   2153c:	ldr	r3, [fp, #-8]
   21540:	ldr	r3, [r3, #4]
   21544:	cmp	r3, #0
   21548:	rsblt	r3, r3, #0
   2154c:	ldr	r2, [fp, #-12]
   21550:	cmp	r2, r3
   21554:	bge	21574 <__assert_fail@plt+0x1041c>
   21558:	ldr	r3, [fp, #-8]
   2155c:	ldr	r2, [r3, #8]
   21560:	ldr	r3, [fp, #-12]
   21564:	lsl	r3, r3, #2
   21568:	add	r3, r2, r3
   2156c:	ldr	r3, [r3]
   21570:	b	21578 <__assert_fail@plt+0x10420>
   21574:	mov	r3, #0
   21578:	mov	r0, r3
   2157c:	add	sp, fp, #0
   21580:	pop	{fp}		; (ldr fp, [sp], #4)
   21584:	bx	lr
   21588:	str	fp, [sp, #-8]!
   2158c:	str	lr, [sp, #4]
   21590:	add	fp, sp, #4
   21594:	sub	sp, sp, #8
   21598:	str	r0, [fp, #-8]
   2159c:	str	r1, [fp, #-12]
   215a0:	ldr	r3, [fp, #-12]
   215a4:	cmp	r3, #0
   215a8:	movne	r3, #1
   215ac:	moveq	r3, #0
   215b0:	uxtb	r3, r3
   215b4:	mov	r2, r3
   215b8:	ldr	r3, [fp, #-12]
   215bc:	sub	r3, r3, r2
   215c0:	lsr	r3, r3, #5
   215c4:	add	r3, r3, #1
   215c8:	mov	r1, r3
   215cc:	ldr	r0, [fp, #-8]
   215d0:	bl	20e04 <__assert_fail@plt+0xfcac>
   215d4:	nop	{0}
   215d8:	sub	sp, fp, #4
   215dc:	ldr	fp, [sp]
   215e0:	add	sp, sp, #4
   215e4:	pop	{pc}		; (ldr pc, [sp], #4)
   215e8:	push	{fp}		; (str fp, [sp, #-4]!)
   215ec:	add	fp, sp, #0
   215f0:	sub	sp, sp, #12
   215f4:	str	r0, [fp, #-8]
   215f8:	ldr	r3, [fp, #-8]
   215fc:	ldr	r3, [r3, #8]
   21600:	mov	r0, r3
   21604:	add	sp, fp, #0
   21608:	pop	{fp}		; (ldr fp, [sp], #4)
   2160c:	bx	lr
   21610:	str	fp, [sp, #-8]!
   21614:	str	lr, [sp, #4]
   21618:	add	fp, sp, #4
   2161c:	sub	sp, sp, #8
   21620:	str	r0, [fp, #-8]
   21624:	str	r1, [fp, #-12]
   21628:	ldr	r3, [fp, #-12]
   2162c:	cmp	r3, #0
   21630:	bgt	21654 <__assert_fail@plt+0x104fc>
   21634:	movw	r3, #24308	; 0x5ef4
   21638:	movt	r3, #3
   2163c:	movw	r2, #1663	; 0x67f
   21640:	movw	r1, #22376	; 0x5768
   21644:	movt	r1, #3
   21648:	movw	r0, #22500	; 0x57e4
   2164c:	movt	r0, #3
   21650:	bl	11158 <__assert_fail@plt>
   21654:	ldr	r3, [fp, #-8]
   21658:	ldr	r3, [r3]
   2165c:	ldr	r2, [fp, #-12]
   21660:	cmp	r2, r3
   21664:	ble	2167c <__assert_fail@plt+0x10524>
   21668:	ldr	r1, [fp, #-12]
   2166c:	ldr	r0, [fp, #-8]
   21670:	bl	20e04 <__assert_fail@plt+0xfcac>
   21674:	mov	r3, r0
   21678:	b	21684 <__assert_fail@plt+0x1052c>
   2167c:	ldr	r3, [fp, #-8]
   21680:	ldr	r3, [r3, #8]
   21684:	mov	r0, r3
   21688:	sub	sp, fp, #4
   2168c:	ldr	fp, [sp]
   21690:	add	sp, sp, #4
   21694:	pop	{pc}		; (ldr pc, [sp], #4)
   21698:	str	fp, [sp, #-8]!
   2169c:	str	lr, [sp, #4]
   216a0:	add	fp, sp, #4
   216a4:	sub	sp, sp, #8
   216a8:	str	r0, [fp, #-8]
   216ac:	str	r1, [fp, #-12]
   216b0:	ldr	r1, [fp, #-12]
   216b4:	ldr	r0, [fp, #-8]
   216b8:	bl	21610 <__assert_fail@plt+0x104b8>
   216bc:	mov	r3, r0
   216c0:	mov	r0, r3
   216c4:	sub	sp, fp, #4
   216c8:	ldr	fp, [sp]
   216cc:	add	sp, sp, #4
   216d0:	pop	{pc}		; (ldr pc, [sp], #4)
   216d4:	str	fp, [sp, #-8]!
   216d8:	str	lr, [sp, #4]
   216dc:	add	fp, sp, #4
   216e0:	sub	sp, sp, #16
   216e4:	str	r0, [fp, #-16]
   216e8:	str	r1, [fp, #-20]	; 0xffffffec
   216ec:	ldr	r3, [fp, #-16]
   216f0:	ldr	r2, [r3, #8]
   216f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   216f8:	cmp	r3, #0
   216fc:	rsblt	r3, r3, #0
   21700:	mov	r1, r3
   21704:	mov	r0, r2
   21708:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   2170c:	str	r0, [fp, #-8]
   21710:	ldr	r3, [fp, #-20]	; 0xffffffec
   21714:	cmp	r3, #0
   21718:	bge	21728 <__assert_fail@plt+0x105d0>
   2171c:	ldr	r3, [fp, #-8]
   21720:	rsb	r3, r3, #0
   21724:	b	2172c <__assert_fail@plt+0x105d4>
   21728:	ldr	r3, [fp, #-8]
   2172c:	ldr	r2, [fp, #-16]
   21730:	str	r3, [r2, #4]
   21734:	nop	{0}
   21738:	sub	sp, fp, #4
   2173c:	ldr	fp, [sp]
   21740:	add	sp, sp, #4
   21744:	pop	{pc}		; (ldr pc, [sp], #4)
   21748:	push	{fp}		; (str fp, [sp, #-4]!)
   2174c:	add	fp, sp, #0
   21750:	sub	sp, sp, #20
   21754:	str	r0, [fp, #-8]
   21758:	str	r1, [fp, #-12]
   2175c:	str	r2, [fp, #-16]
   21760:	ldr	r3, [fp, #-8]
   21764:	mov	r2, #0
   21768:	str	r2, [r3]
   2176c:	ldr	r3, [fp, #-8]
   21770:	ldr	r2, [fp, #-12]
   21774:	str	r2, [r3, #8]
   21778:	ldr	r3, [fp, #-8]
   2177c:	ldr	r2, [fp, #-16]
   21780:	str	r2, [r3, #4]
   21784:	ldr	r3, [fp, #-8]
   21788:	mov	r0, r3
   2178c:	add	sp, fp, #0
   21790:	pop	{fp}		; (ldr fp, [sp], #4)
   21794:	bx	lr
   21798:	str	fp, [sp, #-8]!
   2179c:	str	lr, [sp, #4]
   217a0:	add	fp, sp, #4
   217a4:	sub	sp, sp, #16
   217a8:	str	r0, [fp, #-8]
   217ac:	str	r1, [fp, #-12]
   217b0:	str	r2, [fp, #-16]
   217b4:	ldr	r2, [fp, #-16]
   217b8:	ldr	r1, [fp, #-12]
   217bc:	ldr	r0, [fp, #-8]
   217c0:	bl	21748 <__assert_fail@plt+0x105f0>
   217c4:	ldr	r1, [fp, #-16]
   217c8:	ldr	r0, [fp, #-8]
   217cc:	bl	216d4 <__assert_fail@plt+0x1057c>
   217d0:	ldr	r3, [fp, #-8]
   217d4:	mov	r0, r3
   217d8:	sub	sp, fp, #4
   217dc:	ldr	fp, [sp]
   217e0:	add	sp, sp, #4
   217e4:	pop	{pc}		; (ldr pc, [sp], #4)
   217e8:	str	fp, [sp, #-8]!
   217ec:	str	lr, [sp, #4]
   217f0:	add	fp, sp, #4
   217f4:	sub	sp, sp, #56	; 0x38
   217f8:	str	r0, [fp, #-48]	; 0xffffffd0
   217fc:	vstr	d0, [fp, #-60]	; 0xffffffc4
   21800:	vldr	d6, [fp, #-60]	; 0xffffffc4
   21804:	vldr	d7, [fp, #-60]	; 0xffffffc4
   21808:	vcmp.f64	d6, d7
   2180c:	vmrs	APSR_nzcv, fpscr
   21810:	bne	21830 <__assert_fail@plt+0x106d8>
   21814:	vldr	d7, [fp, #-60]	; 0xffffffc4
   21818:	vldr	d6, [pc, #608]	; 21a80 <__assert_fail@plt+0x10928>
   2181c:	vmul.f64	d7, d7, d6
   21820:	vldr	d6, [fp, #-60]	; 0xffffffc4
   21824:	vcmp.f64	d6, d7
   21828:	vmrs	APSR_nzcv, fpscr
   2182c:	bne	21840 <__assert_fail@plt+0x106e8>
   21830:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21834:	mov	r2, #0
   21838:	str	r2, [r3, #4]
   2183c:	b	21a6c <__assert_fail@plt+0x10914>
   21840:	vldr	d7, [fp, #-60]	; 0xffffffc4
   21844:	vcmpe.f64	d7, #0.0
   21848:	vmrs	APSR_nzcv, fpscr
   2184c:	movmi	r3, #1
   21850:	movpl	r3, #0
   21854:	uxtb	r3, r3
   21858:	str	r3, [fp, #-16]
   2185c:	ldr	r3, [fp, #-16]
   21860:	cmp	r3, #0
   21864:	beq	21874 <__assert_fail@plt+0x1071c>
   21868:	vldr	d7, [fp, #-60]	; 0xffffffc4
   2186c:	vneg.f64	d7, d7
   21870:	vstr	d7, [fp, #-60]	; 0xffffffc4
   21874:	vldr	d7, [fp, #-60]	; 0xffffffc4
   21878:	vldr	d6, [pc, #520]	; 21a88 <__assert_fail@plt+0x10930>
   2187c:	vcmpe.f64	d7, d6
   21880:	vmrs	APSR_nzcv, fpscr
   21884:	bpl	21898 <__assert_fail@plt+0x10740>
   21888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2188c:	mov	r2, #0
   21890:	str	r2, [r3, #4]
   21894:	b	21a6c <__assert_fail@plt+0x10914>
   21898:	mov	r2, #0
   2189c:	mov	r3, #0
   218a0:	movt	r3, #16880	; 0x41f0
   218a4:	strd	r2, [fp, #-28]	; 0xffffffe4
   218a8:	vldr	d5, [pc, #472]	; 21a88 <__assert_fail@plt+0x10930>
   218ac:	vldr	d6, [fp, #-28]	; 0xffffffe4
   218b0:	vdiv.f64	d7, d5, d6
   218b4:	vstr	d7, [fp, #-36]	; 0xffffffdc
   218b8:	mov	r3, #1
   218bc:	str	r3, [fp, #-8]
   218c0:	b	218e0 <__assert_fail@plt+0x10788>
   218c4:	vldr	d6, [fp, #-60]	; 0xffffffc4
   218c8:	vldr	d7, [fp, #-36]	; 0xffffffdc
   218cc:	vmul.f64	d7, d6, d7
   218d0:	vstr	d7, [fp, #-60]	; 0xffffffc4
   218d4:	ldr	r3, [fp, #-8]
   218d8:	add	r3, r3, #1
   218dc:	str	r3, [fp, #-8]
   218e0:	vldr	d6, [fp, #-60]	; 0xffffffc4
   218e4:	vldr	d7, [fp, #-28]	; 0xffffffe4
   218e8:	vcmpe.f64	d6, d7
   218ec:	vmrs	APSR_nzcv, fpscr
   218f0:	bge	218c4 <__assert_fail@plt+0x1076c>
   218f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   218f8:	ldr	r3, [r3]
   218fc:	ldr	r2, [fp, #-8]
   21900:	cmp	r2, r3
   21904:	ble	2191c <__assert_fail@plt+0x107c4>
   21908:	ldr	r1, [fp, #-8]
   2190c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21910:	bl	20e04 <__assert_fail@plt+0xfcac>
   21914:	mov	r3, r0
   21918:	b	21924 <__assert_fail@plt+0x107cc>
   2191c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21920:	ldr	r3, [r3, #8]
   21924:	str	r3, [fp, #-40]	; 0xffffffd8
   21928:	vldr	d7, [fp, #-60]	; 0xffffffc4
   2192c:	vcvt.u32.f64	s15, d7
   21930:	vmov	r3, s15
   21934:	str	r3, [fp, #-44]	; 0xffffffd4
   21938:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2193c:	vmov	s15, r3
   21940:	vcvt.f64.u32	d7, s15
   21944:	vldr	d6, [fp, #-60]	; 0xffffffc4
   21948:	vsub.f64	d7, d6, d7
   2194c:	vstr	d7, [fp, #-60]	; 0xffffffc4
   21950:	vldr	d7, [fp, #-60]	; 0xffffffc4
   21954:	vldr	d6, [pc, #300]	; 21a88 <__assert_fail@plt+0x10930>
   21958:	vcmpe.f64	d7, d6
   2195c:	vmrs	APSR_nzcv, fpscr
   21960:	bmi	21984 <__assert_fail@plt+0x1082c>
   21964:	movw	r3, #24328	; 0x5f08
   21968:	movt	r3, #3
   2196c:	movw	r2, #1736	; 0x6c8
   21970:	movw	r1, #22376	; 0x5768
   21974:	movt	r1, #3
   21978:	movw	r0, #23048	; 0x5a08
   2197c:	movt	r0, #3
   21980:	bl	11158 <__assert_fail@plt>
   21984:	ldr	r3, [fp, #-8]
   21988:	sub	r3, r3, #1
   2198c:	str	r3, [fp, #-12]
   21990:	ldr	r3, [fp, #-12]
   21994:	lsl	r3, r3, #2
   21998:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2199c:	add	r3, r2, r3
   219a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   219a4:	str	r2, [r3]
   219a8:	b	21a30 <__assert_fail@plt+0x108d8>
   219ac:	vldr	d6, [fp, #-60]	; 0xffffffc4
   219b0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   219b4:	vmul.f64	d7, d6, d7
   219b8:	vstr	d7, [fp, #-60]	; 0xffffffc4
   219bc:	vldr	d7, [fp, #-60]	; 0xffffffc4
   219c0:	vcvt.u32.f64	s15, d7
   219c4:	vmov	r3, s15
   219c8:	str	r3, [fp, #-44]	; 0xffffffd4
   219cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   219d0:	vmov	s15, r3
   219d4:	vcvt.f64.u32	d7, s15
   219d8:	vldr	d6, [fp, #-60]	; 0xffffffc4
   219dc:	vsub.f64	d7, d6, d7
   219e0:	vstr	d7, [fp, #-60]	; 0xffffffc4
   219e4:	vldr	d7, [fp, #-60]	; 0xffffffc4
   219e8:	vldr	d6, [pc, #152]	; 21a88 <__assert_fail@plt+0x10930>
   219ec:	vcmpe.f64	d7, d6
   219f0:	vmrs	APSR_nzcv, fpscr
   219f4:	bmi	21a18 <__assert_fail@plt+0x108c0>
   219f8:	movw	r3, #24328	; 0x5f08
   219fc:	movt	r3, #3
   21a00:	mov	r2, #1744	; 0x6d0
   21a04:	movw	r1, #22376	; 0x5768
   21a08:	movt	r1, #3
   21a0c:	movw	r0, #23048	; 0x5a08
   21a10:	movt	r0, #3
   21a14:	bl	11158 <__assert_fail@plt>
   21a18:	ldr	r3, [fp, #-12]
   21a1c:	lsl	r3, r3, #2
   21a20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21a24:	add	r3, r2, r3
   21a28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   21a2c:	str	r2, [r3]
   21a30:	ldr	r3, [fp, #-12]
   21a34:	sub	r3, r3, #1
   21a38:	str	r3, [fp, #-12]
   21a3c:	ldr	r3, [fp, #-12]
   21a40:	cmp	r3, #0
   21a44:	bge	219ac <__assert_fail@plt+0x10854>
   21a48:	ldr	r3, [fp, #-16]
   21a4c:	cmp	r3, #0
   21a50:	beq	21a60 <__assert_fail@plt+0x10908>
   21a54:	ldr	r3, [fp, #-8]
   21a58:	rsb	r3, r3, #0
   21a5c:	b	21a64 <__assert_fail@plt+0x1090c>
   21a60:	ldr	r3, [fp, #-8]
   21a64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21a68:	str	r3, [r2, #4]
   21a6c:	sub	sp, fp, #4
   21a70:	ldr	fp, [sp]
   21a74:	add	sp, sp, #4
   21a78:	pop	{pc}		; (ldr pc, [sp], #4)
   21a7c:	nop	{0}
   21a80:	andeq	r0, r0, r0
   21a84:	svccc	0x00e00000
   21a88:	andeq	r0, r0, r0
   21a8c:	svccc	0x00f00000	; IMB
   21a90:	str	fp, [sp, #-8]!
   21a94:	str	lr, [sp, #4]
   21a98:	add	fp, sp, #4
   21a9c:	sub	sp, sp, #16
   21aa0:	str	r0, [fp, #-8]
   21aa4:	vstr	d0, [fp, #-20]	; 0xffffffec
   21aa8:	ldr	r0, [fp, #-8]
   21aac:	bl	20cdc <__assert_fail@plt+0xfb84>
   21ab0:	vldr	d0, [fp, #-20]	; 0xffffffec
   21ab4:	ldr	r0, [fp, #-8]
   21ab8:	bl	217e8 <__assert_fail@plt+0x10690>
   21abc:	nop	{0}
   21ac0:	sub	sp, fp, #4
   21ac4:	ldr	fp, [sp]
   21ac8:	add	sp, sp, #4
   21acc:	pop	{pc}		; (ldr pc, [sp], #4)
   21ad0:	push	{fp}		; (str fp, [sp, #-4]!)
   21ad4:	add	fp, sp, #0
   21ad8:	sub	sp, sp, #60	; 0x3c
   21adc:	str	r0, [fp, #-56]	; 0xffffffc8
   21ae0:	mov	r2, #0
   21ae4:	mov	r3, #0
   21ae8:	movt	r3, #16880	; 0x41f0
   21aec:	strd	r2, [fp, #-44]	; 0xffffffd4
   21af0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21af4:	ldr	r3, [r3, #4]
   21af8:	cmp	r3, #0
   21afc:	rsblt	r3, r3, #0
   21b00:	str	r3, [fp, #-16]
   21b04:	ldr	r3, [fp, #-16]
   21b08:	cmp	r3, #0
   21b0c:	bne	21b1c <__assert_fail@plt+0x109c4>
   21b10:	mov	r2, #0
   21b14:	mov	r3, #0
   21b18:	b	21ccc <__assert_fail@plt+0x10b74>
   21b1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21b20:	ldr	r2, [r3, #8]
   21b24:	ldr	r3, [fp, #-16]
   21b28:	sub	r3, r3, #1
   21b2c:	str	r3, [fp, #-16]
   21b30:	ldr	r3, [fp, #-16]
   21b34:	lsl	r3, r3, #2
   21b38:	add	r3, r2, r3
   21b3c:	ldr	r3, [r3]
   21b40:	str	r3, [fp, #-12]
   21b44:	ldr	r3, [fp, #-12]
   21b48:	str	r3, [fp, #-32]	; 0xffffffe0
   21b4c:	mov	r3, #0
   21b50:	str	r3, [fp, #-36]	; 0xffffffdc
   21b54:	mov	r3, #8
   21b58:	str	r3, [fp, #-48]	; 0xffffffd0
   21b5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b60:	cmp	r3, #31
   21b64:	bhi	21bb4 <__assert_fail@plt+0x10a5c>
   21b68:	b	21b88 <__assert_fail@plt+0x10a30>
   21b6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21b70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b74:	lsl	r3, r2, r3
   21b78:	str	r3, [fp, #-32]	; 0xffffffe0
   21b7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21b80:	add	r3, r3, #8
   21b84:	str	r3, [fp, #-36]	; 0xffffffdc
   21b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b8c:	and	r3, r3, #-16777216	; 0xff000000
   21b90:	cmp	r3, #0
   21b94:	beq	21b6c <__assert_fail@plt+0x10a14>
   21b98:	b	21bb4 <__assert_fail@plt+0x10a5c>
   21b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ba0:	lsl	r3, r3, #1
   21ba4:	str	r3, [fp, #-32]	; 0xffffffe0
   21ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21bac:	add	r3, r3, #1
   21bb0:	str	r3, [fp, #-36]	; 0xffffffdc
   21bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21bb8:	cmp	r3, #0
   21bbc:	bge	21b9c <__assert_fail@plt+0x10a44>
   21bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21bc4:	str	r3, [fp, #-8]
   21bc8:	ldr	r3, [fp, #-8]
   21bcc:	add	r3, r3, #21
   21bd0:	str	r3, [fp, #-8]
   21bd4:	ldr	r3, [fp, #-8]
   21bd8:	cmp	r3, #0
   21bdc:	bge	21bfc <__assert_fail@plt+0x10aa4>
   21be0:	ldr	r3, [fp, #-8]
   21be4:	rsb	r3, r3, #0
   21be8:	mvn	r2, #0
   21bec:	lsl	r3, r2, r3
   21bf0:	ldr	r2, [fp, #-12]
   21bf4:	and	r3, r3, r2
   21bf8:	str	r3, [fp, #-12]
   21bfc:	ldr	r3, [fp, #-12]
   21c00:	vmov	s15, r3
   21c04:	vcvt.f64.u32	d7, s15
   21c08:	vstr	d7, [fp, #-28]	; 0xffffffe4
   21c0c:	b	21c94 <__assert_fail@plt+0x10b3c>
   21c10:	vldr	d6, [fp, #-28]	; 0xffffffe4
   21c14:	vldr	d7, [fp, #-44]	; 0xffffffd4
   21c18:	vmul.f64	d7, d6, d7
   21c1c:	vstr	d7, [fp, #-28]	; 0xffffffe4
   21c20:	ldr	r3, [fp, #-8]
   21c24:	cmp	r3, #0
   21c28:	ble	21c94 <__assert_fail@plt+0x10b3c>
   21c2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21c30:	ldr	r2, [r3, #8]
   21c34:	ldr	r3, [fp, #-16]
   21c38:	lsl	r3, r3, #2
   21c3c:	add	r3, r2, r3
   21c40:	ldr	r3, [r3]
   21c44:	str	r3, [fp, #-12]
   21c48:	ldr	r3, [fp, #-8]
   21c4c:	sub	r3, r3, #32
   21c50:	str	r3, [fp, #-8]
   21c54:	ldr	r3, [fp, #-8]
   21c58:	cmp	r3, #0
   21c5c:	bge	21c7c <__assert_fail@plt+0x10b24>
   21c60:	ldr	r3, [fp, #-8]
   21c64:	rsb	r3, r3, #0
   21c68:	mvn	r2, #0
   21c6c:	lsl	r3, r2, r3
   21c70:	ldr	r2, [fp, #-12]
   21c74:	and	r3, r3, r2
   21c78:	str	r3, [fp, #-12]
   21c7c:	ldr	r3, [fp, #-12]
   21c80:	vmov	s15, r3
   21c84:	vcvt.f64.u32	d7, s15
   21c88:	vldr	d6, [fp, #-28]	; 0xffffffe4
   21c8c:	vadd.f64	d7, d6, d7
   21c90:	vstr	d7, [fp, #-28]	; 0xffffffe4
   21c94:	ldr	r3, [fp, #-16]
   21c98:	sub	r3, r3, #1
   21c9c:	str	r3, [fp, #-16]
   21ca0:	ldr	r3, [fp, #-16]
   21ca4:	cmp	r3, #0
   21ca8:	bge	21c10 <__assert_fail@plt+0x10ab8>
   21cac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21cb0:	ldr	r3, [r3, #4]
   21cb4:	cmp	r3, #0
   21cb8:	bge	21cc8 <__assert_fail@plt+0x10b70>
   21cbc:	vldr	d7, [fp, #-28]	; 0xffffffe4
   21cc0:	vneg.f64	d7, d7
   21cc4:	vstr	d7, [fp, #-28]	; 0xffffffe4
   21cc8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   21ccc:	vmov	d7, r2, r3
   21cd0:	vmov.f64	d0, d7
   21cd4:	add	sp, fp, #0
   21cd8:	pop	{fp}		; (ldr fp, [sp], #4)
   21cdc:	bx	lr
   21ce0:	push	{fp}		; (str fp, [sp, #-4]!)
   21ce4:	add	fp, sp, #0
   21ce8:	sub	sp, sp, #52	; 0x34
   21cec:	str	r0, [fp, #-40]	; 0xffffffd8
   21cf0:	vstr	d0, [fp, #-52]	; 0xffffffcc
   21cf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21cf8:	ldr	r3, [r3, #4]
   21cfc:	str	r3, [fp, #-12]
   21d00:	vldr	d7, [fp, #-52]	; 0xffffffcc
   21d04:	vcmpe.f64	d7, #0.0
   21d08:	vmrs	APSR_nzcv, fpscr
   21d0c:	blt	21d18 <__assert_fail@plt+0x10bc0>
   21d10:	vldr	d7, [fp, #-52]	; 0xffffffcc
   21d14:	b	21d20 <__assert_fail@plt+0x10bc8>
   21d18:	vldr	d7, [fp, #-52]	; 0xffffffcc
   21d1c:	vneg.f64	d7, d7
   21d20:	vstr	d7, [fp, #-52]	; 0xffffffcc
   21d24:	ldr	r3, [fp, #-12]
   21d28:	cmp	r3, #0
   21d2c:	beq	21e50 <__assert_fail@plt+0x10cf8>
   21d30:	ldr	r3, [fp, #-12]
   21d34:	cmp	r3, #0
   21d38:	rsblt	r3, r3, #0
   21d3c:	str	r3, [fp, #-12]
   21d40:	mov	r2, #0
   21d44:	mov	r3, #0
   21d48:	movt	r3, #16880	; 0x41f0
   21d4c:	strd	r2, [fp, #-20]	; 0xffffffec
   21d50:	vldr	d5, [pc, #296]	; 21e80 <__assert_fail@plt+0x10d28>
   21d54:	vldr	d6, [fp, #-20]	; 0xffffffec
   21d58:	vdiv.f64	d7, d5, d6
   21d5c:	vstr	d7, [fp, #-28]	; 0xffffffe4
   21d60:	mov	r3, #1
   21d64:	str	r3, [fp, #-8]
   21d68:	b	21d88 <__assert_fail@plt+0x10c30>
   21d6c:	vldr	d6, [fp, #-52]	; 0xffffffcc
   21d70:	vldr	d7, [fp, #-28]	; 0xffffffe4
   21d74:	vmul.f64	d7, d6, d7
   21d78:	vstr	d7, [fp, #-52]	; 0xffffffcc
   21d7c:	ldr	r3, [fp, #-8]
   21d80:	add	r3, r3, #1
   21d84:	str	r3, [fp, #-8]
   21d88:	ldr	r2, [fp, #-8]
   21d8c:	ldr	r3, [fp, #-12]
   21d90:	cmp	r2, r3
   21d94:	blt	21d6c <__assert_fail@plt+0x10c14>
   21d98:	vldr	d6, [fp, #-52]	; 0xffffffcc
   21d9c:	vldr	d7, [fp, #-20]	; 0xffffffec
   21da0:	vcmpe.f64	d6, d7
   21da4:	vmrs	APSR_nzcv, fpscr
   21da8:	blt	21db4 <__assert_fail@plt+0x10c5c>
   21dac:	mvn	r3, #0
   21db0:	b	21e6c <__assert_fail@plt+0x10d14>
   21db4:	ldr	r3, [fp, #-12]
   21db8:	str	r3, [fp, #-8]
   21dbc:	b	21e3c <__assert_fail@plt+0x10ce4>
   21dc0:	vldr	d7, [fp, #-52]	; 0xffffffcc
   21dc4:	vcvt.u32.f64	s15, d7
   21dc8:	vmov	r3, s15
   21dcc:	str	r3, [fp, #-32]	; 0xffffffe0
   21dd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21dd4:	ldr	r2, [r3, #8]
   21dd8:	ldr	r3, [fp, #-8]
   21ddc:	lsl	r3, r3, #2
   21de0:	add	r3, r2, r3
   21de4:	ldr	r3, [r3]
   21de8:	str	r3, [fp, #-36]	; 0xffffffdc
   21dec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21df4:	cmp	r2, r3
   21df8:	bls	21e04 <__assert_fail@plt+0x10cac>
   21dfc:	mov	r3, #1
   21e00:	b	21e6c <__assert_fail@plt+0x10d14>
   21e04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21e0c:	cmp	r2, r3
   21e10:	bcs	21e1c <__assert_fail@plt+0x10cc4>
   21e14:	mvn	r3, #0
   21e18:	b	21e6c <__assert_fail@plt+0x10d14>
   21e1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21e20:	vmov	s15, r3
   21e24:	vcvt.f64.u32	d7, s15
   21e28:	vldr	d6, [fp, #-52]	; 0xffffffcc
   21e2c:	vsub.f64	d7, d6, d7
   21e30:	vldr	d6, [fp, #-20]	; 0xffffffec
   21e34:	vmul.f64	d7, d6, d7
   21e38:	vstr	d7, [fp, #-52]	; 0xffffffcc
   21e3c:	ldr	r3, [fp, #-8]
   21e40:	sub	r2, r3, #1
   21e44:	str	r2, [fp, #-8]
   21e48:	cmp	r3, #0
   21e4c:	bgt	21dc0 <__assert_fail@plt+0x10c68>
   21e50:	vldr	d7, [fp, #-52]	; 0xffffffcc
   21e54:	vcmpe.f64	d7, #0.0
   21e58:	vmrs	APSR_nzcv, fpscr
   21e5c:	movgt	r3, #1
   21e60:	movle	r3, #0
   21e64:	uxtb	r3, r3
   21e68:	rsb	r3, r3, #0
   21e6c:	mov	r0, r3
   21e70:	add	sp, fp, #0
   21e74:	pop	{fp}		; (ldr fp, [sp], #4)
   21e78:	bx	lr
   21e7c:	nop	{0}
   21e80:	andeq	r0, r0, r0
   21e84:	svccc	0x00f00000	; IMB
   21e88:	str	fp, [sp, #-8]!
   21e8c:	str	lr, [sp, #4]
   21e90:	add	fp, sp, #4
   21e94:	sub	sp, sp, #16
   21e98:	str	r0, [fp, #-8]
   21e9c:	vstr	d0, [fp, #-20]	; 0xffffffec
   21ea0:	ldr	r3, [fp, #-8]
   21ea4:	ldr	r3, [r3, #4]
   21ea8:	cmp	r3, #0
   21eac:	bge	21ee0 <__assert_fail@plt+0x10d88>
   21eb0:	vldr	d7, [fp, #-20]	; 0xffffffec
   21eb4:	vcmpe.f64	d7, #0.0
   21eb8:	vmrs	APSR_nzcv, fpscr
   21ebc:	blt	21ec8 <__assert_fail@plt+0x10d70>
   21ec0:	mvn	r3, #0
   21ec4:	b	21f08 <__assert_fail@plt+0x10db0>
   21ec8:	vldr	d0, [fp, #-20]	; 0xffffffec
   21ecc:	ldr	r0, [fp, #-8]
   21ed0:	bl	21ce0 <__assert_fail@plt+0x10b88>
   21ed4:	mov	r3, r0
   21ed8:	rsb	r3, r3, #0
   21edc:	b	21f08 <__assert_fail@plt+0x10db0>
   21ee0:	vldr	d7, [fp, #-20]	; 0xffffffec
   21ee4:	vcmpe.f64	d7, #0.0
   21ee8:	vmrs	APSR_nzcv, fpscr
   21eec:	bpl	21ef8 <__assert_fail@plt+0x10da0>
   21ef0:	mov	r3, #1
   21ef4:	b	21f08 <__assert_fail@plt+0x10db0>
   21ef8:	vldr	d0, [fp, #-20]	; 0xffffffec
   21efc:	ldr	r0, [fp, #-8]
   21f00:	bl	21ce0 <__assert_fail@plt+0x10b88>
   21f04:	mov	r3, r0
   21f08:	mov	r0, r3
   21f0c:	sub	sp, fp, #4
   21f10:	ldr	fp, [sp]
   21f14:	add	sp, sp, #4
   21f18:	pop	{pc}		; (ldr pc, [sp], #4)
   21f1c:	push	{fp}		; (str fp, [sp, #-4]!)
   21f20:	add	fp, sp, #0
   21f24:	sub	sp, sp, #12
   21f28:	str	r0, [fp, #-8]
   21f2c:	ldr	r3, [fp, #-8]
   21f30:	ldr	r3, [r3, #4]
   21f34:	cmp	r3, #0
   21f38:	movgt	r3, #1
   21f3c:	movle	r3, #0
   21f40:	uxtb	r3, r3
   21f44:	mov	r2, r3
   21f48:	ldr	r3, [fp, #-8]
   21f4c:	ldr	r3, [r3, #4]
   21f50:	lsr	r3, r3, #31
   21f54:	uxtb	r3, r3
   21f58:	sub	r3, r2, r3
   21f5c:	mov	r0, r3
   21f60:	add	sp, fp, #0
   21f64:	pop	{fp}		; (ldr fp, [sp], #4)
   21f68:	bx	lr
   21f6c:	str	fp, [sp, #-8]!
   21f70:	str	lr, [sp, #4]
   21f74:	add	fp, sp, #4
   21f78:	sub	sp, sp, #16
   21f7c:	str	r0, [fp, #-16]
   21f80:	str	r1, [fp, #-20]	; 0xffffffec
   21f84:	ldr	r3, [fp, #-16]
   21f88:	ldr	r3, [r3, #4]
   21f8c:	str	r3, [fp, #-8]
   21f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f94:	cmp	r3, #0
   21f98:	blt	21fb4 <__assert_fail@plt+0x10e5c>
   21f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fa0:	mov	r1, r3
   21fa4:	ldr	r0, [fp, #-16]
   21fa8:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   21fac:	mov	r3, r0
   21fb0:	b	21fe4 <__assert_fail@plt+0x10e8c>
   21fb4:	ldr	r3, [fp, #-8]
   21fb8:	cmp	r3, #0
   21fbc:	blt	21fc8 <__assert_fail@plt+0x10e70>
   21fc0:	mov	r3, #1
   21fc4:	b	21fe4 <__assert_fail@plt+0x10e8c>
   21fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fcc:	rsb	r3, r3, #0
   21fd0:	mov	r1, r3
   21fd4:	ldr	r0, [fp, #-16]
   21fd8:	bl	2211c <__assert_fail@plt+0x10fc4>
   21fdc:	mov	r3, r0
   21fe0:	rsb	r3, r3, #0
   21fe4:	mov	r0, r3
   21fe8:	sub	sp, fp, #4
   21fec:	ldr	fp, [sp]
   21ff0:	add	sp, sp, #4
   21ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   21ff8:	str	fp, [sp, #-8]!
   21ffc:	str	lr, [sp, #4]
   22000:	add	fp, sp, #4
   22004:	sub	sp, sp, #16
   22008:	str	r0, [fp, #-16]
   2200c:	str	r1, [fp, #-20]	; 0xffffffec
   22010:	ldr	r3, [fp, #-16]
   22014:	ldr	r3, [r3, #4]
   22018:	str	r3, [fp, #-8]
   2201c:	ldr	r3, [fp, #-8]
   22020:	cmp	r3, #0
   22024:	bge	22030 <__assert_fail@plt+0x10ed8>
   22028:	mvn	r3, #0
   2202c:	b	22040 <__assert_fail@plt+0x10ee8>
   22030:	ldr	r1, [fp, #-20]	; 0xffffffec
   22034:	ldr	r0, [fp, #-16]
   22038:	bl	2211c <__assert_fail@plt+0x10fc4>
   2203c:	mov	r3, r0
   22040:	mov	r0, r3
   22044:	sub	sp, fp, #4
   22048:	ldr	fp, [sp]
   2204c:	add	sp, sp, #4
   22050:	pop	{pc}		; (ldr pc, [sp], #4)
   22054:	str	fp, [sp, #-8]!
   22058:	str	lr, [sp, #4]
   2205c:	add	fp, sp, #4
   22060:	sub	sp, sp, #16
   22064:	str	r0, [fp, #-16]
   22068:	str	r1, [fp, #-20]	; 0xffffffec
   2206c:	ldr	r3, [fp, #-16]
   22070:	ldr	r3, [r3, #4]
   22074:	str	r3, [fp, #-8]
   22078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2207c:	ldr	r3, [r3, #4]
   22080:	str	r3, [fp, #-12]
   22084:	ldr	r2, [fp, #-8]
   22088:	ldr	r3, [fp, #-12]
   2208c:	cmp	r2, r3
   22090:	beq	220b4 <__assert_fail@plt+0x10f5c>
   22094:	ldr	r2, [fp, #-8]
   22098:	ldr	r3, [fp, #-12]
   2209c:	cmp	r2, r3
   220a0:	bge	220ac <__assert_fail@plt+0x10f54>
   220a4:	mvn	r3, #0
   220a8:	b	22108 <__assert_fail@plt+0x10fb0>
   220ac:	mov	r3, #1
   220b0:	b	22108 <__assert_fail@plt+0x10fb0>
   220b4:	ldr	r3, [fp, #-8]
   220b8:	cmp	r3, #0
   220bc:	blt	220e4 <__assert_fail@plt+0x10f8c>
   220c0:	ldr	r3, [fp, #-16]
   220c4:	ldr	r0, [r3, #8]
   220c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   220cc:	ldr	r3, [r3, #8]
   220d0:	ldr	r2, [fp, #-8]
   220d4:	mov	r1, r3
   220d8:	bl	1cb64 <__assert_fail@plt+0xba0c>
   220dc:	mov	r3, r0
   220e0:	b	22108 <__assert_fail@plt+0x10fb0>
   220e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   220e8:	ldr	r0, [r3, #8]
   220ec:	ldr	r3, [fp, #-16]
   220f0:	ldr	r1, [r3, #8]
   220f4:	ldr	r3, [fp, #-8]
   220f8:	rsb	r3, r3, #0
   220fc:	mov	r2, r3
   22100:	bl	1cb64 <__assert_fail@plt+0xba0c>
   22104:	mov	r3, r0
   22108:	mov	r0, r3
   2210c:	sub	sp, fp, #4
   22110:	ldr	fp, [sp]
   22114:	add	sp, sp, #4
   22118:	pop	{pc}		; (ldr pc, [sp], #4)
   2211c:	str	fp, [sp, #-8]!
   22120:	str	lr, [sp, #4]
   22124:	add	fp, sp, #4
   22128:	sub	sp, sp, #16
   2212c:	str	r0, [fp, #-16]
   22130:	str	r1, [fp, #-20]	; 0xffffffec
   22134:	ldr	r3, [fp, #-16]
   22138:	ldr	r3, [r3, #4]
   2213c:	cmp	r3, #0
   22140:	rsblt	r3, r3, #0
   22144:	str	r3, [fp, #-8]
   22148:	ldr	r3, [fp, #-16]
   2214c:	ldr	r3, [r3, #8]
   22150:	ldr	r1, [fp, #-8]
   22154:	mov	r0, r3
   22158:	bl	211c0 <__assert_fail@plt+0x10068>
   2215c:	mov	r3, r0
   22160:	cmp	r3, #0
   22164:	bne	22170 <__assert_fail@plt+0x11018>
   22168:	mov	r3, #1
   2216c:	b	221b4 <__assert_fail@plt+0x1105c>
   22170:	ldr	r0, [fp, #-16]
   22174:	bl	214a8 <__assert_fail@plt+0x10350>
   22178:	str	r0, [fp, #-12]
   2217c:	ldr	r2, [fp, #-12]
   22180:	ldr	r3, [fp, #-20]	; 0xffffffec
   22184:	cmp	r2, r3
   22188:	movhi	r3, #1
   2218c:	movls	r3, #0
   22190:	uxtb	r3, r3
   22194:	mov	r1, r3
   22198:	ldr	r2, [fp, #-12]
   2219c:	ldr	r3, [fp, #-20]	; 0xffffffec
   221a0:	cmp	r2, r3
   221a4:	movcc	r3, #1
   221a8:	movcs	r3, #0
   221ac:	uxtb	r3, r3
   221b0:	sub	r3, r1, r3
   221b4:	mov	r0, r3
   221b8:	sub	sp, fp, #4
   221bc:	ldr	fp, [sp]
   221c0:	add	sp, sp, #4
   221c4:	pop	{pc}		; (ldr pc, [sp], #4)
   221c8:	str	fp, [sp, #-8]!
   221cc:	str	lr, [sp, #4]
   221d0:	add	fp, sp, #4
   221d4:	sub	sp, sp, #8
   221d8:	str	r0, [fp, #-8]
   221dc:	str	r1, [fp, #-12]
   221e0:	ldr	r3, [fp, #-8]
   221e4:	ldr	r0, [r3, #8]
   221e8:	ldr	r3, [fp, #-8]
   221ec:	ldr	r3, [r3, #4]
   221f0:	eor	r1, r3, r3, asr #31
   221f4:	sub	r1, r1, r3, asr #31
   221f8:	ldr	r3, [fp, #-12]
   221fc:	ldr	r2, [r3, #8]
   22200:	ldr	r3, [fp, #-12]
   22204:	ldr	r3, [r3, #4]
   22208:	cmp	r3, #0
   2220c:	rsblt	r3, r3, #0
   22210:	bl	1cc1c <__assert_fail@plt+0xbac4>
   22214:	mov	r3, r0
   22218:	mov	r0, r3
   2221c:	sub	sp, fp, #4
   22220:	ldr	fp, [sp]
   22224:	add	sp, sp, #4
   22228:	pop	{pc}		; (ldr pc, [sp], #4)
   2222c:	str	fp, [sp, #-8]!
   22230:	str	lr, [sp, #4]
   22234:	add	fp, sp, #4
   22238:	sub	sp, sp, #8
   2223c:	str	r0, [fp, #-8]
   22240:	str	r1, [fp, #-12]
   22244:	ldr	r1, [fp, #-12]
   22248:	ldr	r0, [fp, #-8]
   2224c:	bl	20ff0 <__assert_fail@plt+0xfe98>
   22250:	ldr	r3, [fp, #-8]
   22254:	ldr	r3, [r3, #4]
   22258:	eor	r2, r3, r3, asr #31
   2225c:	sub	r2, r2, r3, asr #31
   22260:	ldr	r3, [fp, #-8]
   22264:	str	r2, [r3, #4]
   22268:	nop	{0}
   2226c:	sub	sp, fp, #4
   22270:	ldr	fp, [sp]
   22274:	add	sp, sp, #4
   22278:	pop	{pc}		; (ldr pc, [sp], #4)
   2227c:	str	fp, [sp, #-8]!
   22280:	str	lr, [sp, #4]
   22284:	add	fp, sp, #4
   22288:	sub	sp, sp, #8
   2228c:	str	r0, [fp, #-8]
   22290:	str	r1, [fp, #-12]
   22294:	ldr	r1, [fp, #-12]
   22298:	ldr	r0, [fp, #-8]
   2229c:	bl	20ff0 <__assert_fail@plt+0xfe98>
   222a0:	ldr	r3, [fp, #-8]
   222a4:	ldr	r3, [r3, #4]
   222a8:	rsb	r2, r3, #0
   222ac:	ldr	r3, [fp, #-8]
   222b0:	str	r2, [r3, #4]
   222b4:	nop	{0}
   222b8:	sub	sp, fp, #4
   222bc:	ldr	fp, [sp]
   222c0:	add	sp, sp, #4
   222c4:	pop	{pc}		; (ldr pc, [sp], #4)
   222c8:	push	{fp}		; (str fp, [sp, #-4]!)
   222cc:	add	fp, sp, #0
   222d0:	sub	sp, sp, #28
   222d4:	str	r0, [fp, #-24]	; 0xffffffe8
   222d8:	str	r1, [fp, #-28]	; 0xffffffe4
   222dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222e0:	ldr	r3, [r3, #4]
   222e4:	str	r3, [fp, #-8]
   222e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222ec:	ldr	r2, [r3, #4]
   222f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222f4:	str	r2, [r3, #4]
   222f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222fc:	ldr	r2, [fp, #-8]
   22300:	str	r2, [r3, #4]
   22304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22308:	ldr	r3, [r3]
   2230c:	str	r3, [fp, #-12]
   22310:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22314:	ldr	r2, [r3]
   22318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2231c:	str	r2, [r3]
   22320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22324:	ldr	r2, [fp, #-12]
   22328:	str	r2, [r3]
   2232c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22330:	ldr	r3, [r3, #8]
   22334:	str	r3, [fp, #-16]
   22338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2233c:	ldr	r2, [r3, #8]
   22340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22344:	str	r2, [r3, #8]
   22348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2234c:	ldr	r2, [fp, #-16]
   22350:	str	r2, [r3, #8]
   22354:	nop	{0}
   22358:	add	sp, fp, #0
   2235c:	pop	{fp}		; (ldr fp, [sp], #4)
   22360:	bx	lr
   22364:	str	fp, [sp, #-8]!
   22368:	str	lr, [sp, #4]
   2236c:	add	fp, sp, #4
   22370:	sub	sp, sp, #32
   22374:	str	r0, [fp, #-24]	; 0xffffffe8
   22378:	str	r1, [fp, #-28]	; 0xffffffe4
   2237c:	str	r2, [fp, #-32]	; 0xffffffe0
   22380:	sub	r3, fp, #16
   22384:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22388:	mov	r0, r3
   2238c:	bl	210dc <__assert_fail@plt+0xff84>
   22390:	sub	r3, fp, #16
   22394:	mov	r2, r3
   22398:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2239c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   223a0:	bl	22758 <__assert_fail@plt+0x11600>
   223a4:	sub	r3, fp, #16
   223a8:	mov	r0, r3
   223ac:	bl	20db0 <__assert_fail@plt+0xfc58>
   223b0:	nop	{0}
   223b4:	sub	sp, fp, #4
   223b8:	ldr	fp, [sp]
   223bc:	add	sp, sp, #4
   223c0:	pop	{pc}		; (ldr pc, [sp], #4)
   223c4:	str	fp, [sp, #-8]!
   223c8:	str	lr, [sp, #4]
   223cc:	add	fp, sp, #4
   223d0:	sub	sp, sp, #16
   223d4:	str	r0, [fp, #-8]
   223d8:	str	r1, [fp, #-12]
   223dc:	str	r2, [fp, #-16]
   223e0:	ldr	r2, [fp, #-12]
   223e4:	ldr	r1, [fp, #-16]
   223e8:	ldr	r0, [fp, #-8]
   223ec:	bl	22410 <__assert_fail@plt+0x112b8>
   223f0:	ldr	r1, [fp, #-8]
   223f4:	ldr	r0, [fp, #-8]
   223f8:	bl	2227c <__assert_fail@plt+0x11124>
   223fc:	nop	{0}
   22400:	sub	sp, fp, #4
   22404:	ldr	fp, [sp]
   22408:	add	sp, sp, #4
   2240c:	pop	{pc}		; (ldr pc, [sp], #4)
   22410:	str	fp, [sp, #-8]!
   22414:	str	lr, [sp, #4]
   22418:	add	fp, sp, #4
   2241c:	sub	sp, sp, #16
   22420:	str	r0, [fp, #-8]
   22424:	str	r1, [fp, #-12]
   22428:	str	r2, [fp, #-16]
   2242c:	ldr	r1, [fp, #-16]
   22430:	ldr	r0, [fp, #-8]
   22434:	bl	2227c <__assert_fail@plt+0x11124>
   22438:	ldr	r2, [fp, #-12]
   2243c:	ldr	r1, [fp, #-8]
   22440:	ldr	r0, [fp, #-8]
   22444:	bl	22364 <__assert_fail@plt+0x1120c>
   22448:	nop	{0}
   2244c:	sub	sp, fp, #4
   22450:	ldr	fp, [sp]
   22454:	add	sp, sp, #4
   22458:	pop	{pc}		; (ldr pc, [sp], #4)
   2245c:	str	fp, [sp, #-8]!
   22460:	str	lr, [sp, #4]
   22464:	add	fp, sp, #4
   22468:	sub	sp, sp, #48	; 0x30
   2246c:	str	r0, [fp, #-32]	; 0xffffffe0
   22470:	str	r1, [fp, #-36]	; 0xffffffdc
   22474:	str	r2, [fp, #-40]	; 0xffffffd8
   22478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2247c:	ldr	r3, [r3, #4]
   22480:	cmp	r3, #0
   22484:	rsblt	r3, r3, #0
   22488:	str	r3, [fp, #-8]
   2248c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22490:	ldr	r3, [r3, #4]
   22494:	cmp	r3, #0
   22498:	rsblt	r3, r3, #0
   2249c:	str	r3, [fp, #-12]
   224a0:	ldr	r2, [fp, #-8]
   224a4:	ldr	r3, [fp, #-12]
   224a8:	cmp	r2, r3
   224ac:	bge	224e0 <__assert_fail@plt+0x11388>
   224b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   224b4:	str	r3, [fp, #-16]
   224b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   224bc:	str	r3, [fp, #-36]	; 0xffffffdc
   224c0:	ldr	r3, [fp, #-16]
   224c4:	str	r3, [fp, #-40]	; 0xffffffd8
   224c8:	ldr	r3, [fp, #-8]
   224cc:	str	r3, [fp, #-20]	; 0xffffffec
   224d0:	ldr	r3, [fp, #-12]
   224d4:	str	r3, [fp, #-8]
   224d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   224dc:	str	r3, [fp, #-12]
   224e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   224e4:	ldr	r3, [r3]
   224e8:	ldr	r2, [fp, #-8]
   224ec:	cmp	r2, r3
   224f0:	blt	22510 <__assert_fail@plt+0x113b8>
   224f4:	ldr	r3, [fp, #-8]
   224f8:	add	r3, r3, #1
   224fc:	mov	r1, r3
   22500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22504:	bl	20e04 <__assert_fail@plt+0xfcac>
   22508:	mov	r3, r0
   2250c:	b	22518 <__assert_fail@plt+0x113c0>
   22510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22514:	ldr	r3, [r3, #8]
   22518:	str	r3, [fp, #-24]	; 0xffffffe8
   2251c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22520:	ldr	r1, [r3, #8]
   22524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22528:	ldr	r2, [r3, #8]
   2252c:	ldr	r3, [fp, #-12]
   22530:	str	r3, [sp]
   22534:	mov	r3, r2
   22538:	ldr	r2, [fp, #-8]
   2253c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22540:	bl	1cf84 <__assert_fail@plt+0xbe2c>
   22544:	str	r0, [fp, #-28]	; 0xffffffe4
   22548:	ldr	r3, [fp, #-8]
   2254c:	lsl	r3, r3, #2
   22550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22554:	add	r3, r2, r3
   22558:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2255c:	str	r2, [r3]
   22560:	ldr	r2, [fp, #-8]
   22564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22568:	add	r3, r2, r3
   2256c:	mov	r0, r3
   22570:	sub	sp, fp, #4
   22574:	ldr	fp, [sp]
   22578:	add	sp, sp, #4
   2257c:	pop	{pc}		; (ldr pc, [sp], #4)
   22580:	str	fp, [sp, #-8]!
   22584:	str	lr, [sp, #4]
   22588:	add	fp, sp, #4
   2258c:	sub	sp, sp, #48	; 0x30
   22590:	str	r0, [fp, #-32]	; 0xffffffe0
   22594:	str	r1, [fp, #-36]	; 0xffffffdc
   22598:	str	r2, [fp, #-40]	; 0xffffffd8
   2259c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   225a0:	ldr	r3, [r3, #4]
   225a4:	cmp	r3, #0
   225a8:	rsblt	r3, r3, #0
   225ac:	str	r3, [fp, #-8]
   225b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225b4:	ldr	r3, [r3, #4]
   225b8:	cmp	r3, #0
   225bc:	rsblt	r3, r3, #0
   225c0:	str	r3, [fp, #-12]
   225c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   225c8:	ldr	r0, [r3, #8]
   225cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225d0:	ldr	r2, [r3, #8]
   225d4:	ldr	r3, [fp, #-12]
   225d8:	ldr	r1, [fp, #-8]
   225dc:	bl	1cc1c <__assert_fail@plt+0xbac4>
   225e0:	str	r0, [fp, #-16]
   225e4:	ldr	r3, [fp, #-16]
   225e8:	cmp	r3, #0
   225ec:	ble	22690 <__assert_fail@plt+0x11538>
   225f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   225f4:	ldr	r3, [r3]
   225f8:	ldr	r2, [fp, #-8]
   225fc:	cmp	r2, r3
   22600:	ble	22618 <__assert_fail@plt+0x114c0>
   22604:	ldr	r1, [fp, #-8]
   22608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2260c:	bl	20e04 <__assert_fail@plt+0xfcac>
   22610:	mov	r3, r0
   22614:	b	22620 <__assert_fail@plt+0x114c8>
   22618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2261c:	ldr	r3, [r3, #8]
   22620:	str	r3, [fp, #-20]	; 0xffffffec
   22624:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22628:	ldr	r1, [r3, #8]
   2262c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22630:	ldr	r2, [r3, #8]
   22634:	ldr	r3, [fp, #-12]
   22638:	str	r3, [sp]
   2263c:	mov	r3, r2
   22640:	ldr	r2, [fp, #-8]
   22644:	ldr	r0, [fp, #-20]	; 0xffffffec
   22648:	bl	1d234 <__assert_fail@plt+0xc0dc>
   2264c:	str	r0, [fp, #-24]	; 0xffffffe8
   22650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22654:	cmp	r3, #0
   22658:	beq	2267c <__assert_fail@plt+0x11524>
   2265c:	movw	r3, #24340	; 0x5f14
   22660:	movt	r3, #3
   22664:	movw	r2, #2006	; 0x7d6
   22668:	movw	r1, #22376	; 0x5768
   2266c:	movt	r1, #3
   22670:	movw	r0, #22928	; 0x5990
   22674:	movt	r0, #3
   22678:	bl	11158 <__assert_fail@plt>
   2267c:	ldr	r1, [fp, #-8]
   22680:	ldr	r0, [fp, #-20]	; 0xffffffec
   22684:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   22688:	mov	r3, r0
   2268c:	b	22744 <__assert_fail@plt+0x115ec>
   22690:	ldr	r3, [fp, #-16]
   22694:	cmp	r3, #0
   22698:	bge	22740 <__assert_fail@plt+0x115e8>
   2269c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226a0:	ldr	r3, [r3]
   226a4:	ldr	r2, [fp, #-12]
   226a8:	cmp	r2, r3
   226ac:	ble	226c4 <__assert_fail@plt+0x1156c>
   226b0:	ldr	r1, [fp, #-12]
   226b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   226b8:	bl	20e04 <__assert_fail@plt+0xfcac>
   226bc:	mov	r3, r0
   226c0:	b	226cc <__assert_fail@plt+0x11574>
   226c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226c8:	ldr	r3, [r3, #8]
   226cc:	str	r3, [fp, #-20]	; 0xffffffec
   226d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   226d4:	ldr	r1, [r3, #8]
   226d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   226dc:	ldr	r2, [r3, #8]
   226e0:	ldr	r3, [fp, #-8]
   226e4:	str	r3, [sp]
   226e8:	mov	r3, r2
   226ec:	ldr	r2, [fp, #-12]
   226f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   226f4:	bl	1d234 <__assert_fail@plt+0xc0dc>
   226f8:	str	r0, [fp, #-28]	; 0xffffffe4
   226fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22700:	cmp	r3, #0
   22704:	beq	22728 <__assert_fail@plt+0x115d0>
   22708:	movw	r3, #24340	; 0x5f14
   2270c:	movt	r3, #3
   22710:	movw	r2, #2012	; 0x7dc
   22714:	movw	r1, #22376	; 0x5768
   22718:	movt	r1, #3
   2271c:	movw	r0, #22928	; 0x5990
   22720:	movt	r0, #3
   22724:	bl	11158 <__assert_fail@plt>
   22728:	ldr	r1, [fp, #-12]
   2272c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22730:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   22734:	mov	r3, r0
   22738:	rsb	r3, r3, #0
   2273c:	b	22744 <__assert_fail@plt+0x115ec>
   22740:	mov	r3, #0
   22744:	mov	r0, r3
   22748:	sub	sp, fp, #4
   2274c:	ldr	fp, [sp]
   22750:	add	sp, sp, #4
   22754:	pop	{pc}		; (ldr pc, [sp], #4)
   22758:	str	fp, [sp, #-8]!
   2275c:	str	lr, [sp, #4]
   22760:	add	fp, sp, #4
   22764:	sub	sp, sp, #24
   22768:	str	r0, [fp, #-16]
   2276c:	str	r1, [fp, #-20]	; 0xffffffec
   22770:	str	r2, [fp, #-24]	; 0xffffffe8
   22774:	ldr	r3, [fp, #-20]	; 0xffffffec
   22778:	ldr	r2, [r3, #4]
   2277c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22780:	ldr	r3, [r3, #4]
   22784:	eor	r3, r3, r2
   22788:	cmp	r3, #0
   2278c:	blt	227a8 <__assert_fail@plt+0x11650>
   22790:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22794:	ldr	r1, [fp, #-20]	; 0xffffffec
   22798:	ldr	r0, [fp, #-16]
   2279c:	bl	2245c <__assert_fail@plt+0x11304>
   227a0:	str	r0, [fp, #-8]
   227a4:	b	227bc <__assert_fail@plt+0x11664>
   227a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   227ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   227b0:	ldr	r0, [fp, #-16]
   227b4:	bl	22580 <__assert_fail@plt+0x11428>
   227b8:	str	r0, [fp, #-8]
   227bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   227c0:	ldr	r3, [r3, #4]
   227c4:	cmp	r3, #0
   227c8:	bge	227d8 <__assert_fail@plt+0x11680>
   227cc:	ldr	r3, [fp, #-8]
   227d0:	rsb	r3, r3, #0
   227d4:	b	227dc <__assert_fail@plt+0x11684>
   227d8:	ldr	r3, [fp, #-8]
   227dc:	ldr	r2, [fp, #-16]
   227e0:	str	r3, [r2, #4]
   227e4:	nop	{0}
   227e8:	sub	sp, fp, #4
   227ec:	ldr	fp, [sp]
   227f0:	add	sp, sp, #4
   227f4:	pop	{pc}		; (ldr pc, [sp], #4)
   227f8:	str	fp, [sp, #-8]!
   227fc:	str	lr, [sp, #4]
   22800:	add	fp, sp, #4
   22804:	sub	sp, sp, #24
   22808:	str	r0, [fp, #-16]
   2280c:	str	r1, [fp, #-20]	; 0xffffffec
   22810:	str	r2, [fp, #-24]	; 0xffffffe8
   22814:	ldr	r3, [fp, #-20]	; 0xffffffec
   22818:	ldr	r2, [r3, #4]
   2281c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22820:	ldr	r3, [r3, #4]
   22824:	eor	r3, r3, r2
   22828:	cmp	r3, #0
   2282c:	blt	22848 <__assert_fail@plt+0x116f0>
   22830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22834:	ldr	r1, [fp, #-20]	; 0xffffffec
   22838:	ldr	r0, [fp, #-16]
   2283c:	bl	22580 <__assert_fail@plt+0x11428>
   22840:	str	r0, [fp, #-8]
   22844:	b	2285c <__assert_fail@plt+0x11704>
   22848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2284c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22850:	ldr	r0, [fp, #-16]
   22854:	bl	2245c <__assert_fail@plt+0x11304>
   22858:	str	r0, [fp, #-8]
   2285c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22860:	ldr	r3, [r3, #4]
   22864:	cmp	r3, #0
   22868:	bge	22878 <__assert_fail@plt+0x11720>
   2286c:	ldr	r3, [fp, #-8]
   22870:	rsb	r3, r3, #0
   22874:	b	2287c <__assert_fail@plt+0x11724>
   22878:	ldr	r3, [fp, #-8]
   2287c:	ldr	r2, [fp, #-16]
   22880:	str	r3, [r2, #4]
   22884:	nop	{0}
   22888:	sub	sp, fp, #4
   2288c:	ldr	fp, [sp]
   22890:	add	sp, sp, #4
   22894:	pop	{pc}		; (ldr pc, [sp], #4)
   22898:	str	fp, [sp, #-8]!
   2289c:	str	lr, [sp, #4]
   228a0:	add	fp, sp, #4
   228a4:	sub	sp, sp, #16
   228a8:	str	r0, [fp, #-8]
   228ac:	str	r1, [fp, #-12]
   228b0:	str	r2, [fp, #-16]
   228b4:	ldr	r3, [fp, #-16]
   228b8:	cmp	r3, #0
   228bc:	bge	228e8 <__assert_fail@plt+0x11790>
   228c0:	ldr	r3, [fp, #-16]
   228c4:	rsb	r3, r3, #0
   228c8:	mov	r2, r3
   228cc:	ldr	r1, [fp, #-12]
   228d0:	ldr	r0, [fp, #-8]
   228d4:	bl	22910 <__assert_fail@plt+0x117b8>
   228d8:	ldr	r1, [fp, #-8]
   228dc:	ldr	r0, [fp, #-8]
   228e0:	bl	2227c <__assert_fail@plt+0x11124>
   228e4:	b	228fc <__assert_fail@plt+0x117a4>
   228e8:	ldr	r3, [fp, #-16]
   228ec:	mov	r2, r3
   228f0:	ldr	r1, [fp, #-12]
   228f4:	ldr	r0, [fp, #-8]
   228f8:	bl	22910 <__assert_fail@plt+0x117b8>
   228fc:	nop	{0}
   22900:	sub	sp, fp, #4
   22904:	ldr	fp, [sp]
   22908:	add	sp, sp, #4
   2290c:	pop	{pc}		; (ldr pc, [sp], #4)
   22910:	str	fp, [sp, #-8]!
   22914:	str	lr, [sp, #4]
   22918:	add	fp, sp, #4
   2291c:	sub	sp, sp, #32
   22920:	str	r0, [fp, #-24]	; 0xffffffe8
   22924:	str	r1, [fp, #-28]	; 0xffffffe4
   22928:	str	r2, [fp, #-32]	; 0xffffffe0
   2292c:	sub	r3, fp, #16
   22930:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22934:	mov	r0, r3
   22938:	bl	210dc <__assert_fail@plt+0xff84>
   2293c:	sub	r3, fp, #16
   22940:	mov	r2, r3
   22944:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2294c:	bl	22970 <__assert_fail@plt+0x11818>
   22950:	sub	r3, fp, #16
   22954:	mov	r0, r3
   22958:	bl	20db0 <__assert_fail@plt+0xfc58>
   2295c:	nop	{0}
   22960:	sub	sp, fp, #4
   22964:	ldr	fp, [sp]
   22968:	add	sp, sp, #4
   2296c:	pop	{pc}		; (ldr pc, [sp], #4)
   22970:	str	fp, [sp, #-8]!
   22974:	str	lr, [sp, #4]
   22978:	add	fp, sp, #4
   2297c:	sub	sp, sp, #56	; 0x38
   22980:	str	r0, [fp, #-40]	; 0xffffffd8
   22984:	str	r1, [fp, #-44]	; 0xffffffd4
   22988:	str	r2, [fp, #-48]	; 0xffffffd0
   2298c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22990:	ldr	r3, [r3, #4]
   22994:	str	r3, [fp, #-8]
   22998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2299c:	ldr	r3, [r3, #4]
   229a0:	str	r3, [fp, #-12]
   229a4:	ldr	r3, [fp, #-8]
   229a8:	cmp	r3, #0
   229ac:	beq	229bc <__assert_fail@plt+0x11864>
   229b0:	ldr	r3, [fp, #-12]
   229b4:	cmp	r3, #0
   229b8:	bne	229cc <__assert_fail@plt+0x11874>
   229bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   229c0:	mov	r2, #0
   229c4:	str	r2, [r3, #4]
   229c8:	b	22b14 <__assert_fail@plt+0x119bc>
   229cc:	ldr	r2, [fp, #-8]
   229d0:	ldr	r3, [fp, #-12]
   229d4:	eor	r3, r3, r2
   229d8:	lsr	r3, r3, #31
   229dc:	uxtb	r3, r3
   229e0:	str	r3, [fp, #-16]
   229e4:	ldr	r3, [fp, #-8]
   229e8:	cmp	r3, #0
   229ec:	rsblt	r3, r3, #0
   229f0:	str	r3, [fp, #-8]
   229f4:	ldr	r3, [fp, #-12]
   229f8:	cmp	r3, #0
   229fc:	rsblt	r3, r3, #0
   22a00:	str	r3, [fp, #-12]
   22a04:	ldr	r2, [fp, #-8]
   22a08:	ldr	r3, [fp, #-12]
   22a0c:	add	r3, r2, r3
   22a10:	lsl	r2, r3, #5
   22a14:	sub	r3, fp, #36	; 0x24
   22a18:	mov	r1, r2
   22a1c:	mov	r0, r3
   22a20:	bl	20d24 <__assert_fail@plt+0xfbcc>
   22a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a28:	str	r3, [fp, #-20]	; 0xffffffec
   22a2c:	ldr	r2, [fp, #-8]
   22a30:	ldr	r3, [fp, #-12]
   22a34:	cmp	r2, r3
   22a38:	blt	22a68 <__assert_fail@plt+0x11910>
   22a3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22a40:	ldr	r1, [r3, #8]
   22a44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22a48:	ldr	r2, [r3, #8]
   22a4c:	ldr	r3, [fp, #-12]
   22a50:	str	r3, [sp]
   22a54:	mov	r3, r2
   22a58:	ldr	r2, [fp, #-8]
   22a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a60:	bl	1d90c <__assert_fail@plt+0xc7b4>
   22a64:	b	22a90 <__assert_fail@plt+0x11938>
   22a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22a6c:	ldr	r1, [r3, #8]
   22a70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22a74:	ldr	r2, [r3, #8]
   22a78:	ldr	r3, [fp, #-8]
   22a7c:	str	r3, [sp]
   22a80:	mov	r3, r2
   22a84:	ldr	r2, [fp, #-12]
   22a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a8c:	bl	1d90c <__assert_fail@plt+0xc7b4>
   22a90:	ldr	r2, [fp, #-8]
   22a94:	ldr	r3, [fp, #-12]
   22a98:	add	r3, r2, r3
   22a9c:	str	r3, [fp, #-24]	; 0xffffffe8
   22aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22aa4:	sub	r3, r3, #-1073741823	; 0xc0000001
   22aa8:	lsl	r3, r3, #2
   22aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   22ab0:	add	r3, r2, r3
   22ab4:	ldr	r3, [r3]
   22ab8:	cmp	r3, #0
   22abc:	moveq	r3, #1
   22ac0:	movne	r3, #0
   22ac4:	uxtb	r3, r3
   22ac8:	mov	r2, r3
   22acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22ad0:	sub	r3, r3, r2
   22ad4:	str	r3, [fp, #-24]	; 0xffffffe8
   22ad8:	ldr	r3, [fp, #-16]
   22adc:	cmp	r3, #0
   22ae0:	beq	22af0 <__assert_fail@plt+0x11998>
   22ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22ae8:	rsb	r3, r3, #0
   22aec:	b	22af4 <__assert_fail@plt+0x1199c>
   22af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22af4:	str	r3, [fp, #-32]	; 0xffffffe0
   22af8:	sub	r3, fp, #36	; 0x24
   22afc:	mov	r1, r3
   22b00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22b04:	bl	222c8 <__assert_fail@plt+0x11170>
   22b08:	sub	r3, fp, #36	; 0x24
   22b0c:	mov	r0, r3
   22b10:	bl	20db0 <__assert_fail@plt+0xfc58>
   22b14:	sub	sp, fp, #4
   22b18:	ldr	fp, [sp]
   22b1c:	add	sp, sp, #4
   22b20:	pop	{pc}		; (ldr pc, [sp], #4)
   22b24:	str	fp, [sp, #-8]!
   22b28:	str	lr, [sp, #4]
   22b2c:	add	fp, sp, #4
   22b30:	sub	sp, sp, #40	; 0x28
   22b34:	str	r0, [fp, #-32]	; 0xffffffe0
   22b38:	str	r1, [fp, #-36]	; 0xffffffdc
   22b3c:	str	r2, [fp, #-40]	; 0xffffffd8
   22b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22b44:	ldr	r3, [r3, #4]
   22b48:	cmp	r3, #0
   22b4c:	rsblt	r3, r3, #0
   22b50:	str	r3, [fp, #-12]
   22b54:	ldr	r3, [fp, #-12]
   22b58:	cmp	r3, #0
   22b5c:	bne	22b70 <__assert_fail@plt+0x11a18>
   22b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22b64:	mov	r2, #0
   22b68:	str	r2, [r3, #4]
   22b6c:	b	22cb4 <__assert_fail@plt+0x11b5c>
   22b70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22b74:	lsr	r3, r3, #5
   22b78:	str	r3, [fp, #-16]
   22b7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22b80:	and	r3, r3, #31
   22b84:	str	r3, [fp, #-20]	; 0xffffffec
   22b88:	ldr	r2, [fp, #-12]
   22b8c:	ldr	r3, [fp, #-16]
   22b90:	add	r3, r2, r3
   22b94:	ldr	r2, [fp, #-20]	; 0xffffffec
   22b98:	cmp	r2, #0
   22b9c:	movne	r2, #1
   22ba0:	moveq	r2, #0
   22ba4:	uxtb	r2, r2
   22ba8:	add	r3, r3, r2
   22bac:	str	r3, [fp, #-8]
   22bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22bb4:	ldr	r3, [r3]
   22bb8:	ldr	r2, [fp, #-8]
   22bbc:	cmp	r2, r3
   22bc0:	ble	22bd8 <__assert_fail@plt+0x11a80>
   22bc4:	ldr	r1, [fp, #-8]
   22bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22bcc:	bl	20e04 <__assert_fail@plt+0xfcac>
   22bd0:	mov	r3, r0
   22bd4:	b	22be0 <__assert_fail@plt+0x11a88>
   22bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22bdc:	ldr	r3, [r3, #8]
   22be0:	str	r3, [fp, #-24]	; 0xffffffe8
   22be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22be8:	cmp	r3, #0
   22bec:	beq	22c5c <__assert_fail@plt+0x11b04>
   22bf0:	ldr	r3, [fp, #-16]
   22bf4:	lsl	r3, r3, #2
   22bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22bfc:	add	r0, r2, r3
   22c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22c04:	ldr	r1, [r3, #8]
   22c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   22c0c:	ldr	r2, [fp, #-12]
   22c10:	bl	1dbb0 <__assert_fail@plt+0xca58>
   22c14:	str	r0, [fp, #-28]	; 0xffffffe4
   22c18:	ldr	r3, [fp, #-8]
   22c1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   22c20:	lsl	r3, r3, #2
   22c24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22c28:	add	r3, r2, r3
   22c2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22c30:	str	r2, [r3]
   22c34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22c38:	cmp	r3, #0
   22c3c:	moveq	r3, #1
   22c40:	movne	r3, #0
   22c44:	uxtb	r3, r3
   22c48:	mov	r2, r3
   22c4c:	ldr	r3, [fp, #-8]
   22c50:	sub	r3, r3, r2
   22c54:	str	r3, [fp, #-8]
   22c58:	b	22c80 <__assert_fail@plt+0x11b28>
   22c5c:	ldr	r3, [fp, #-16]
   22c60:	lsl	r3, r3, #2
   22c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22c68:	add	r0, r2, r3
   22c6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22c70:	ldr	r3, [r3, #8]
   22c74:	ldr	r2, [fp, #-12]
   22c78:	mov	r1, r3
   22c7c:	bl	1caf8 <__assert_fail@plt+0xb9a0>
   22c80:	ldr	r1, [fp, #-16]
   22c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22c88:	bl	1cd44 <__assert_fail@plt+0xbbec>
   22c8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22c90:	ldr	r3, [r3, #4]
   22c94:	cmp	r3, #0
   22c98:	bge	22ca8 <__assert_fail@plt+0x11b50>
   22c9c:	ldr	r3, [fp, #-8]
   22ca0:	rsb	r3, r3, #0
   22ca4:	b	22cac <__assert_fail@plt+0x11b54>
   22ca8:	ldr	r3, [fp, #-8]
   22cac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22cb0:	str	r3, [r2, #4]
   22cb4:	sub	sp, fp, #4
   22cb8:	ldr	fp, [sp]
   22cbc:	add	sp, sp, #4
   22cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   22cc4:	str	fp, [sp, #-8]!
   22cc8:	str	lr, [sp, #4]
   22ccc:	add	fp, sp, #4
   22cd0:	sub	sp, sp, #32
   22cd4:	str	r0, [fp, #-24]	; 0xffffffe8
   22cd8:	str	r1, [fp, #-28]	; 0xffffffe4
   22cdc:	str	r2, [fp, #-32]	; 0xffffffe0
   22ce0:	sub	r3, fp, #16
   22ce4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22ce8:	mov	r0, r3
   22cec:	bl	210dc <__assert_fail@plt+0xff84>
   22cf0:	sub	r2, fp, #16
   22cf4:	sub	r3, fp, #16
   22cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22cfc:	mov	r0, r3
   22d00:	bl	22970 <__assert_fail@plt+0x11818>
   22d04:	sub	r3, fp, #16
   22d08:	mov	r2, r3
   22d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d14:	bl	22758 <__assert_fail@plt+0x11600>
   22d18:	sub	r3, fp, #16
   22d1c:	mov	r0, r3
   22d20:	bl	20db0 <__assert_fail@plt+0xfc58>
   22d24:	nop	{0}
   22d28:	sub	sp, fp, #4
   22d2c:	ldr	fp, [sp]
   22d30:	add	sp, sp, #4
   22d34:	pop	{pc}		; (ldr pc, [sp], #4)
   22d38:	str	fp, [sp, #-8]!
   22d3c:	str	lr, [sp, #4]
   22d40:	add	fp, sp, #4
   22d44:	sub	sp, sp, #32
   22d48:	str	r0, [fp, #-24]	; 0xffffffe8
   22d4c:	str	r1, [fp, #-28]	; 0xffffffe4
   22d50:	str	r2, [fp, #-32]	; 0xffffffe0
   22d54:	sub	r3, fp, #16
   22d58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22d5c:	mov	r0, r3
   22d60:	bl	210dc <__assert_fail@plt+0xff84>
   22d64:	sub	r2, fp, #16
   22d68:	sub	r3, fp, #16
   22d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d70:	mov	r0, r3
   22d74:	bl	22970 <__assert_fail@plt+0x11818>
   22d78:	sub	r3, fp, #16
   22d7c:	mov	r2, r3
   22d80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d88:	bl	227f8 <__assert_fail@plt+0x116a0>
   22d8c:	sub	r3, fp, #16
   22d90:	mov	r0, r3
   22d94:	bl	20db0 <__assert_fail@plt+0xfc58>
   22d98:	nop	{0}
   22d9c:	sub	sp, fp, #4
   22da0:	ldr	fp, [sp]
   22da4:	add	sp, sp, #4
   22da8:	pop	{pc}		; (ldr pc, [sp], #4)
   22dac:	str	fp, [sp, #-8]!
   22db0:	str	lr, [sp, #4]
   22db4:	add	fp, sp, #4
   22db8:	sub	sp, sp, #32
   22dbc:	str	r0, [fp, #-24]	; 0xffffffe8
   22dc0:	str	r1, [fp, #-28]	; 0xffffffe4
   22dc4:	str	r2, [fp, #-32]	; 0xffffffe0
   22dc8:	sub	r3, fp, #16
   22dcc:	mov	r0, r3
   22dd0:	bl	20cdc <__assert_fail@plt+0xfb84>
   22dd4:	sub	r3, fp, #16
   22dd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22de0:	mov	r0, r3
   22de4:	bl	22970 <__assert_fail@plt+0x11818>
   22de8:	sub	r3, fp, #16
   22dec:	mov	r2, r3
   22df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22df8:	bl	22758 <__assert_fail@plt+0x11600>
   22dfc:	sub	r3, fp, #16
   22e00:	mov	r0, r3
   22e04:	bl	20db0 <__assert_fail@plt+0xfc58>
   22e08:	nop	{0}
   22e0c:	sub	sp, fp, #4
   22e10:	ldr	fp, [sp]
   22e14:	add	sp, sp, #4
   22e18:	pop	{pc}		; (ldr pc, [sp], #4)
   22e1c:	str	fp, [sp, #-8]!
   22e20:	str	lr, [sp, #4]
   22e24:	add	fp, sp, #4
   22e28:	sub	sp, sp, #32
   22e2c:	str	r0, [fp, #-24]	; 0xffffffe8
   22e30:	str	r1, [fp, #-28]	; 0xffffffe4
   22e34:	str	r2, [fp, #-32]	; 0xffffffe0
   22e38:	sub	r3, fp, #16
   22e3c:	mov	r0, r3
   22e40:	bl	20cdc <__assert_fail@plt+0xfb84>
   22e44:	sub	r3, fp, #16
   22e48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22e50:	mov	r0, r3
   22e54:	bl	22970 <__assert_fail@plt+0x11818>
   22e58:	sub	r3, fp, #16
   22e5c:	mov	r2, r3
   22e60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22e68:	bl	227f8 <__assert_fail@plt+0x116a0>
   22e6c:	sub	r3, fp, #16
   22e70:	mov	r0, r3
   22e74:	bl	20db0 <__assert_fail@plt+0xfc58>
   22e78:	nop	{0}
   22e7c:	sub	sp, fp, #4
   22e80:	ldr	fp, [sp]
   22e84:	add	sp, sp, #4
   22e88:	pop	{pc}		; (ldr pc, [sp], #4)
   22e8c:	str	fp, [sp, #-8]!
   22e90:	str	lr, [sp, #4]
   22e94:	add	fp, sp, #4
   22e98:	sub	sp, sp, #88	; 0x58
   22e9c:	str	r0, [fp, #-72]	; 0xffffffb8
   22ea0:	str	r1, [fp, #-76]	; 0xffffffb4
   22ea4:	str	r2, [fp, #-80]	; 0xffffffb0
   22ea8:	str	r3, [fp, #-84]	; 0xffffffac
   22eac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   22eb0:	ldr	r3, [r3, #4]
   22eb4:	str	r3, [fp, #-12]
   22eb8:	ldr	r3, [fp, #-84]	; 0xffffffac
   22ebc:	ldr	r3, [r3, #4]
   22ec0:	str	r3, [fp, #-16]
   22ec4:	ldr	r3, [fp, #-16]
   22ec8:	cmp	r3, #0
   22ecc:	bne	22edc <__assert_fail@plt+0x11d84>
   22ed0:	movw	r0, #23056	; 0x5a10
   22ed4:	movt	r0, #3
   22ed8:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   22edc:	ldr	r3, [fp, #-12]
   22ee0:	cmp	r3, #0
   22ee4:	bne	22f20 <__assert_fail@plt+0x11dc8>
   22ee8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22eec:	cmp	r3, #0
   22ef0:	beq	22f00 <__assert_fail@plt+0x11da8>
   22ef4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22ef8:	mov	r2, #0
   22efc:	str	r2, [r3, #4]
   22f00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   22f04:	cmp	r3, #0
   22f08:	beq	22f18 <__assert_fail@plt+0x11dc0>
   22f0c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   22f10:	mov	r2, #0
   22f14:	str	r2, [r3, #4]
   22f18:	mov	r3, #0
   22f1c:	b	23284 <__assert_fail@plt+0x1212c>
   22f20:	ldr	r3, [fp, #-12]
   22f24:	cmp	r3, #0
   22f28:	rsblt	r3, r3, #0
   22f2c:	str	r3, [fp, #-20]	; 0xffffffec
   22f30:	ldr	r3, [fp, #-16]
   22f34:	cmp	r3, #0
   22f38:	rsblt	r3, r3, #0
   22f3c:	str	r3, [fp, #-24]	; 0xffffffe8
   22f40:	ldr	r2, [fp, #-16]
   22f44:	ldr	r3, [fp, #-12]
   22f48:	eor	r3, r3, r2
   22f4c:	str	r3, [fp, #-28]	; 0xffffffe4
   22f50:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f58:	cmp	r2, r3
   22f5c:	bge	23038 <__assert_fail@plt+0x11ee0>
   22f60:	ldr	r3, [fp, #4]
   22f64:	cmp	r3, #1
   22f68:	bne	22fb0 <__assert_fail@plt+0x11e58>
   22f6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22f70:	cmp	r3, #0
   22f74:	blt	22fb0 <__assert_fail@plt+0x11e58>
   22f78:	ldr	r3, [fp, #-76]	; 0xffffffb4
   22f7c:	cmp	r3, #0
   22f80:	beq	22f94 <__assert_fail@plt+0x11e3c>
   22f84:	ldr	r2, [fp, #-84]	; 0xffffffac
   22f88:	ldr	r1, [fp, #-80]	; 0xffffffb0
   22f8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   22f90:	bl	227f8 <__assert_fail@plt+0x116a0>
   22f94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22f98:	cmp	r3, #0
   22f9c:	beq	23030 <__assert_fail@plt+0x11ed8>
   22fa0:	mov	r1, #1
   22fa4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22fa8:	bl	20f68 <__assert_fail@plt+0xfe10>
   22fac:	b	23030 <__assert_fail@plt+0x11ed8>
   22fb0:	ldr	r3, [fp, #4]
   22fb4:	cmp	r3, #0
   22fb8:	bne	23000 <__assert_fail@plt+0x11ea8>
   22fbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22fc0:	cmp	r3, #0
   22fc4:	bge	23000 <__assert_fail@plt+0x11ea8>
   22fc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   22fcc:	cmp	r3, #0
   22fd0:	beq	22fe4 <__assert_fail@plt+0x11e8c>
   22fd4:	ldr	r2, [fp, #-84]	; 0xffffffac
   22fd8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   22fdc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   22fe0:	bl	22758 <__assert_fail@plt+0x11600>
   22fe4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22fe8:	cmp	r3, #0
   22fec:	beq	23030 <__assert_fail@plt+0x11ed8>
   22ff0:	mvn	r1, #0
   22ff4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22ff8:	bl	20ed0 <__assert_fail@plt+0xfd78>
   22ffc:	b	23030 <__assert_fail@plt+0x11ed8>
   23000:	ldr	r3, [fp, #-76]	; 0xffffffb4
   23004:	cmp	r3, #0
   23008:	beq	23018 <__assert_fail@plt+0x11ec0>
   2300c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   23010:	ldr	r0, [fp, #-76]	; 0xffffffb4
   23014:	bl	20ff0 <__assert_fail@plt+0xfe98>
   23018:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2301c:	cmp	r3, #0
   23020:	beq	23030 <__assert_fail@plt+0x11ed8>
   23024:	ldr	r3, [fp, #-72]	; 0xffffffb8
   23028:	mov	r2, #0
   2302c:	str	r2, [r3, #4]
   23030:	mov	r3, #1
   23034:	b	23284 <__assert_fail@plt+0x1212c>
   23038:	sub	r3, fp, #64	; 0x40
   2303c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   23040:	mov	r0, r3
   23044:	bl	2111c <__assert_fail@plt+0xffc4>
   23048:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2304c:	str	r3, [fp, #-32]	; 0xffffffe0
   23050:	ldr	r2, [fp, #-20]	; 0xffffffec
   23054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23058:	sub	r3, r2, r3
   2305c:	add	r3, r3, #1
   23060:	str	r3, [fp, #-36]	; 0xffffffdc
   23064:	ldr	r3, [fp, #-72]	; 0xffffffb8
   23068:	cmp	r3, #0
   2306c:	beq	23094 <__assert_fail@plt+0x11f3c>
   23070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23074:	lsl	r2, r3, #5
   23078:	sub	r3, fp, #52	; 0x34
   2307c:	mov	r1, r2
   23080:	mov	r0, r3
   23084:	bl	20d24 <__assert_fail@plt+0xfbcc>
   23088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2308c:	str	r3, [fp, #-8]
   23090:	b	2309c <__assert_fail@plt+0x11f44>
   23094:	mov	r3, #0
   23098:	str	r3, [fp, #-8]
   2309c:	ldr	r3, [fp, #-84]	; 0xffffffac
   230a0:	ldr	r2, [r3, #8]
   230a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   230a8:	str	r3, [sp]
   230ac:	mov	r3, r2
   230b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   230b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   230b8:	ldr	r0, [fp, #-8]
   230bc:	bl	1fd90 <__assert_fail@plt+0xec38>
   230c0:	ldr	r3, [fp, #-8]
   230c4:	cmp	r3, #0
   230c8:	beq	23124 <__assert_fail@plt+0x11fcc>
   230cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   230d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   230d4:	lsl	r3, r3, #2
   230d8:	ldr	r2, [fp, #-8]
   230dc:	add	r3, r2, r3
   230e0:	ldr	r3, [r3]
   230e4:	cmp	r3, #0
   230e8:	moveq	r3, #1
   230ec:	movne	r3, #0
   230f0:	uxtb	r3, r3
   230f4:	mov	r2, r3
   230f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   230fc:	sub	r3, r3, r2
   23100:	str	r3, [fp, #-36]	; 0xffffffdc
   23104:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23108:	cmp	r3, #0
   2310c:	bge	2311c <__assert_fail@plt+0x11fc4>
   23110:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23114:	rsb	r3, r3, #0
   23118:	b	23120 <__assert_fail@plt+0x11fc8>
   2311c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23120:	str	r3, [fp, #-48]	; 0xffffffd0
   23124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2312c:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   23130:	str	r0, [fp, #-40]	; 0xffffffd8
   23134:	ldr	r3, [fp, #-12]
   23138:	cmp	r3, #0
   2313c:	bge	2314c <__assert_fail@plt+0x11ff4>
   23140:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23144:	rsb	r3, r3, #0
   23148:	b	23150 <__assert_fail@plt+0x11ff8>
   2314c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23150:	str	r3, [fp, #-60]	; 0xffffffc4
   23154:	ldr	r3, [fp, #4]
   23158:	cmp	r3, #0
   2315c:	bne	231bc <__assert_fail@plt+0x12064>
   23160:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23164:	cmp	r3, #0
   23168:	bge	231bc <__assert_fail@plt+0x12064>
   2316c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23170:	cmp	r3, #0
   23174:	beq	231bc <__assert_fail@plt+0x12064>
   23178:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2317c:	cmp	r3, #0
   23180:	beq	23198 <__assert_fail@plt+0x12040>
   23184:	sub	r1, fp, #52	; 0x34
   23188:	sub	r3, fp, #52	; 0x34
   2318c:	mov	r2, #1
   23190:	mov	r0, r3
   23194:	bl	223c4 <__assert_fail@plt+0x1126c>
   23198:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2319c:	cmp	r3, #0
   231a0:	beq	23220 <__assert_fail@plt+0x120c8>
   231a4:	sub	r1, fp, #64	; 0x40
   231a8:	sub	r3, fp, #64	; 0x40
   231ac:	ldr	r2, [fp, #-84]	; 0xffffffac
   231b0:	mov	r0, r3
   231b4:	bl	22758 <__assert_fail@plt+0x11600>
   231b8:	b	23220 <__assert_fail@plt+0x120c8>
   231bc:	ldr	r3, [fp, #4]
   231c0:	cmp	r3, #1
   231c4:	bne	23220 <__assert_fail@plt+0x120c8>
   231c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   231cc:	cmp	r3, #0
   231d0:	blt	23220 <__assert_fail@plt+0x120c8>
   231d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231d8:	cmp	r3, #0
   231dc:	beq	23220 <__assert_fail@plt+0x120c8>
   231e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   231e4:	cmp	r3, #0
   231e8:	beq	23200 <__assert_fail@plt+0x120a8>
   231ec:	sub	r1, fp, #52	; 0x34
   231f0:	sub	r3, fp, #52	; 0x34
   231f4:	mov	r2, #1
   231f8:	mov	r0, r3
   231fc:	bl	22364 <__assert_fail@plt+0x1120c>
   23200:	ldr	r3, [fp, #-76]	; 0xffffffb4
   23204:	cmp	r3, #0
   23208:	beq	23220 <__assert_fail@plt+0x120c8>
   2320c:	sub	r1, fp, #64	; 0x40
   23210:	sub	r3, fp, #64	; 0x40
   23214:	ldr	r2, [fp, #-84]	; 0xffffffac
   23218:	mov	r0, r3
   2321c:	bl	227f8 <__assert_fail@plt+0x116a0>
   23220:	ldr	r3, [fp, #-72]	; 0xffffffb8
   23224:	cmp	r3, #0
   23228:	beq	23248 <__assert_fail@plt+0x120f0>
   2322c:	sub	r3, fp, #52	; 0x34
   23230:	ldr	r1, [fp, #-72]	; 0xffffffb8
   23234:	mov	r0, r3
   23238:	bl	222c8 <__assert_fail@plt+0x11170>
   2323c:	sub	r3, fp, #52	; 0x34
   23240:	mov	r0, r3
   23244:	bl	20db0 <__assert_fail@plt+0xfc58>
   23248:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2324c:	cmp	r3, #0
   23250:	beq	23264 <__assert_fail@plt+0x1210c>
   23254:	sub	r3, fp, #64	; 0x40
   23258:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2325c:	mov	r0, r3
   23260:	bl	222c8 <__assert_fail@plt+0x11170>
   23264:	sub	r3, fp, #64	; 0x40
   23268:	mov	r0, r3
   2326c:	bl	20db0 <__assert_fail@plt+0xfc58>
   23270:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23274:	cmp	r3, #0
   23278:	movne	r3, #1
   2327c:	moveq	r3, #0
   23280:	uxtb	r3, r3
   23284:	mov	r0, r3
   23288:	sub	sp, fp, #4
   2328c:	ldr	fp, [sp]
   23290:	add	sp, sp, #4
   23294:	pop	{pc}		; (ldr pc, [sp], #4)
   23298:	str	fp, [sp, #-8]!
   2329c:	str	lr, [sp, #4]
   232a0:	add	fp, sp, #4
   232a4:	sub	sp, sp, #24
   232a8:	str	r0, [fp, #-8]
   232ac:	str	r1, [fp, #-12]
   232b0:	str	r2, [fp, #-16]
   232b4:	str	r3, [fp, #-20]	; 0xffffffec
   232b8:	mov	r3, #1
   232bc:	str	r3, [sp]
   232c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   232c4:	ldr	r2, [fp, #-16]
   232c8:	ldr	r1, [fp, #-12]
   232cc:	ldr	r0, [fp, #-8]
   232d0:	bl	22e8c <__assert_fail@plt+0x11d34>
   232d4:	nop	{0}
   232d8:	sub	sp, fp, #4
   232dc:	ldr	fp, [sp]
   232e0:	add	sp, sp, #4
   232e4:	pop	{pc}		; (ldr pc, [sp], #4)
   232e8:	str	fp, [sp, #-8]!
   232ec:	str	lr, [sp, #4]
   232f0:	add	fp, sp, #4
   232f4:	sub	sp, sp, #24
   232f8:	str	r0, [fp, #-8]
   232fc:	str	r1, [fp, #-12]
   23300:	str	r2, [fp, #-16]
   23304:	str	r3, [fp, #-20]	; 0xffffffec
   23308:	mov	r3, #0
   2330c:	str	r3, [sp]
   23310:	ldr	r3, [fp, #-20]	; 0xffffffec
   23314:	ldr	r2, [fp, #-16]
   23318:	ldr	r1, [fp, #-12]
   2331c:	ldr	r0, [fp, #-8]
   23320:	bl	22e8c <__assert_fail@plt+0x11d34>
   23324:	nop	{0}
   23328:	sub	sp, fp, #4
   2332c:	ldr	fp, [sp]
   23330:	add	sp, sp, #4
   23334:	pop	{pc}		; (ldr pc, [sp], #4)
   23338:	str	fp, [sp, #-8]!
   2333c:	str	lr, [sp, #4]
   23340:	add	fp, sp, #4
   23344:	sub	sp, sp, #24
   23348:	str	r0, [fp, #-8]
   2334c:	str	r1, [fp, #-12]
   23350:	str	r2, [fp, #-16]
   23354:	str	r3, [fp, #-20]	; 0xffffffec
   23358:	mov	r3, #2
   2335c:	str	r3, [sp]
   23360:	ldr	r3, [fp, #-20]	; 0xffffffec
   23364:	ldr	r2, [fp, #-16]
   23368:	ldr	r1, [fp, #-12]
   2336c:	ldr	r0, [fp, #-8]
   23370:	bl	22e8c <__assert_fail@plt+0x11d34>
   23374:	nop	{0}
   23378:	sub	sp, fp, #4
   2337c:	ldr	fp, [sp]
   23380:	add	sp, sp, #4
   23384:	pop	{pc}		; (ldr pc, [sp], #4)
   23388:	str	fp, [sp, #-8]!
   2338c:	str	lr, [sp, #4]
   23390:	add	fp, sp, #4
   23394:	sub	sp, sp, #24
   23398:	str	r0, [fp, #-8]
   2339c:	str	r1, [fp, #-12]
   233a0:	str	r2, [fp, #-16]
   233a4:	mov	r3, #1
   233a8:	str	r3, [sp]
   233ac:	ldr	r3, [fp, #-16]
   233b0:	ldr	r2, [fp, #-12]
   233b4:	mov	r1, #0
   233b8:	ldr	r0, [fp, #-8]
   233bc:	bl	22e8c <__assert_fail@plt+0x11d34>
   233c0:	nop	{0}
   233c4:	sub	sp, fp, #4
   233c8:	ldr	fp, [sp]
   233cc:	add	sp, sp, #4
   233d0:	pop	{pc}		; (ldr pc, [sp], #4)
   233d4:	str	fp, [sp, #-8]!
   233d8:	str	lr, [sp, #4]
   233dc:	add	fp, sp, #4
   233e0:	sub	sp, sp, #24
   233e4:	str	r0, [fp, #-8]
   233e8:	str	r1, [fp, #-12]
   233ec:	str	r2, [fp, #-16]
   233f0:	mov	r3, #0
   233f4:	str	r3, [sp]
   233f8:	ldr	r3, [fp, #-16]
   233fc:	ldr	r2, [fp, #-12]
   23400:	mov	r1, #0
   23404:	ldr	r0, [fp, #-8]
   23408:	bl	22e8c <__assert_fail@plt+0x11d34>
   2340c:	nop	{0}
   23410:	sub	sp, fp, #4
   23414:	ldr	fp, [sp]
   23418:	add	sp, sp, #4
   2341c:	pop	{pc}		; (ldr pc, [sp], #4)
   23420:	str	fp, [sp, #-8]!
   23424:	str	lr, [sp, #4]
   23428:	add	fp, sp, #4
   2342c:	sub	sp, sp, #24
   23430:	str	r0, [fp, #-8]
   23434:	str	r1, [fp, #-12]
   23438:	str	r2, [fp, #-16]
   2343c:	mov	r3, #2
   23440:	str	r3, [sp]
   23444:	ldr	r3, [fp, #-16]
   23448:	ldr	r2, [fp, #-12]
   2344c:	mov	r1, #0
   23450:	ldr	r0, [fp, #-8]
   23454:	bl	22e8c <__assert_fail@plt+0x11d34>
   23458:	nop	{0}
   2345c:	sub	sp, fp, #4
   23460:	ldr	fp, [sp]
   23464:	add	sp, sp, #4
   23468:	pop	{pc}		; (ldr pc, [sp], #4)
   2346c:	str	fp, [sp, #-8]!
   23470:	str	lr, [sp, #4]
   23474:	add	fp, sp, #4
   23478:	sub	sp, sp, #24
   2347c:	str	r0, [fp, #-8]
   23480:	str	r1, [fp, #-12]
   23484:	str	r2, [fp, #-16]
   23488:	mov	r3, #1
   2348c:	str	r3, [sp]
   23490:	ldr	r3, [fp, #-16]
   23494:	ldr	r2, [fp, #-12]
   23498:	ldr	r1, [fp, #-8]
   2349c:	mov	r0, #0
   234a0:	bl	22e8c <__assert_fail@plt+0x11d34>
   234a4:	nop	{0}
   234a8:	sub	sp, fp, #4
   234ac:	ldr	fp, [sp]
   234b0:	add	sp, sp, #4
   234b4:	pop	{pc}		; (ldr pc, [sp], #4)
   234b8:	str	fp, [sp, #-8]!
   234bc:	str	lr, [sp, #4]
   234c0:	add	fp, sp, #4
   234c4:	sub	sp, sp, #24
   234c8:	str	r0, [fp, #-8]
   234cc:	str	r1, [fp, #-12]
   234d0:	str	r2, [fp, #-16]
   234d4:	mov	r3, #0
   234d8:	str	r3, [sp]
   234dc:	ldr	r3, [fp, #-16]
   234e0:	ldr	r2, [fp, #-12]
   234e4:	ldr	r1, [fp, #-8]
   234e8:	mov	r0, #0
   234ec:	bl	22e8c <__assert_fail@plt+0x11d34>
   234f0:	nop	{0}
   234f4:	sub	sp, fp, #4
   234f8:	ldr	fp, [sp]
   234fc:	add	sp, sp, #4
   23500:	pop	{pc}		; (ldr pc, [sp], #4)
   23504:	str	fp, [sp, #-8]!
   23508:	str	lr, [sp, #4]
   2350c:	add	fp, sp, #4
   23510:	sub	sp, sp, #24
   23514:	str	r0, [fp, #-8]
   23518:	str	r1, [fp, #-12]
   2351c:	str	r2, [fp, #-16]
   23520:	mov	r3, #2
   23524:	str	r3, [sp]
   23528:	ldr	r3, [fp, #-16]
   2352c:	ldr	r2, [fp, #-12]
   23530:	ldr	r1, [fp, #-8]
   23534:	mov	r0, #0
   23538:	bl	22e8c <__assert_fail@plt+0x11d34>
   2353c:	nop	{0}
   23540:	sub	sp, fp, #4
   23544:	ldr	fp, [sp]
   23548:	add	sp, sp, #4
   2354c:	pop	{pc}		; (ldr pc, [sp], #4)
   23550:	str	fp, [sp, #-8]!
   23554:	str	lr, [sp, #4]
   23558:	add	fp, sp, #4
   2355c:	sub	sp, sp, #24
   23560:	str	r0, [fp, #-8]
   23564:	str	r1, [fp, #-12]
   23568:	str	r2, [fp, #-16]
   2356c:	ldr	r3, [fp, #-16]
   23570:	ldr	r3, [r3, #4]
   23574:	lsr	r3, r3, #31
   23578:	uxtb	r3, r3
   2357c:	str	r3, [sp]
   23580:	ldr	r3, [fp, #-16]
   23584:	ldr	r2, [fp, #-12]
   23588:	ldr	r1, [fp, #-8]
   2358c:	mov	r0, #0
   23590:	bl	22e8c <__assert_fail@plt+0x11d34>
   23594:	nop	{0}
   23598:	sub	sp, fp, #4
   2359c:	ldr	fp, [sp]
   235a0:	add	sp, sp, #4
   235a4:	pop	{pc}		; (ldr pc, [sp], #4)
   235a8:	str	fp, [sp, #-8]!
   235ac:	str	lr, [sp, #4]
   235b0:	add	fp, sp, #4
   235b4:	sub	sp, sp, #40	; 0x28
   235b8:	str	r0, [fp, #-32]	; 0xffffffe0
   235bc:	str	r1, [fp, #-36]	; 0xffffffdc
   235c0:	str	r2, [fp, #-40]	; 0xffffffd8
   235c4:	str	r3, [fp, #-44]	; 0xffffffd4
   235c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   235cc:	ldr	r3, [r3, #4]
   235d0:	str	r3, [fp, #-16]
   235d4:	ldr	r3, [fp, #-16]
   235d8:	cmp	r3, #0
   235dc:	bne	235f0 <__assert_fail@plt+0x12498>
   235e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   235e4:	mov	r2, #0
   235e8:	str	r2, [r3, #4]
   235ec:	b	237dc <__assert_fail@plt+0x12684>
   235f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   235f4:	lsr	r3, r3, #5
   235f8:	str	r3, [fp, #-20]	; 0xffffffec
   235fc:	ldr	r3, [fp, #-16]
   23600:	eor	r2, r3, r3, asr #31
   23604:	sub	r2, r2, r3, asr #31
   23608:	ldr	r3, [fp, #-20]	; 0xffffffec
   2360c:	sub	r3, r2, r3
   23610:	str	r3, [fp, #-8]
   23614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23618:	and	r3, r3, #31
   2361c:	str	r3, [fp, #-40]	; 0xffffffd8
   23620:	ldr	r3, [fp, #-16]
   23624:	cmp	r3, #0
   23628:	ble	23634 <__assert_fail@plt+0x124dc>
   2362c:	mov	r2, #1
   23630:	b	23638 <__assert_fail@plt+0x124e0>
   23634:	mov	r2, #0
   23638:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2363c:	cmp	r2, r3
   23640:	bne	236b8 <__assert_fail@plt+0x12560>
   23644:	ldr	r3, [fp, #-8]
   23648:	cmp	r3, #0
   2364c:	ble	236a4 <__assert_fail@plt+0x1254c>
   23650:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23654:	ldr	r3, [r3, #8]
   23658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2365c:	mov	r0, r3
   23660:	bl	1ccf8 <__assert_fail@plt+0xbba0>
   23664:	mov	r3, r0
   23668:	cmp	r3, #0
   2366c:	beq	236a4 <__assert_fail@plt+0x1254c>
   23670:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23674:	ldr	r2, [r3, #8]
   23678:	ldr	r3, [fp, #-20]	; 0xffffffec
   2367c:	lsl	r3, r3, #2
   23680:	add	r3, r2, r3
   23684:	ldr	r2, [r3]
   23688:	mvn	r1, #0
   2368c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23690:	lsl	r3, r1, r3
   23694:	mvn	r3, r3
   23698:	and	r3, r3, r2
   2369c:	cmp	r3, #0
   236a0:	beq	236ac <__assert_fail@plt+0x12554>
   236a4:	mov	r3, #1
   236a8:	b	236b0 <__assert_fail@plt+0x12558>
   236ac:	mov	r3, #0
   236b0:	str	r3, [fp, #-12]
   236b4:	b	236c0 <__assert_fail@plt+0x12568>
   236b8:	mov	r3, #0
   236bc:	str	r3, [fp, #-12]
   236c0:	ldr	r3, [fp, #-8]
   236c4:	cmp	r3, #0
   236c8:	bgt	236d8 <__assert_fail@plt+0x12580>
   236cc:	mov	r3, #0
   236d0:	str	r3, [fp, #-8]
   236d4:	b	2379c <__assert_fail@plt+0x12644>
   236d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   236dc:	ldr	r3, [r3]
   236e0:	ldr	r2, [fp, #-8]
   236e4:	cmp	r2, r3
   236e8:	ble	23700 <__assert_fail@plt+0x125a8>
   236ec:	ldr	r1, [fp, #-8]
   236f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236f4:	bl	20e04 <__assert_fail@plt+0xfcac>
   236f8:	mov	r3, r0
   236fc:	b	23708 <__assert_fail@plt+0x125b0>
   23700:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23704:	ldr	r3, [r3, #8]
   23708:	str	r3, [fp, #-24]	; 0xffffffe8
   2370c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23710:	cmp	r3, #0
   23714:	beq	23778 <__assert_fail@plt+0x12620>
   23718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2371c:	ldr	r2, [r3, #8]
   23720:	ldr	r3, [fp, #-20]	; 0xffffffec
   23724:	lsl	r3, r3, #2
   23728:	add	r1, r2, r3
   2372c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23730:	ldr	r2, [fp, #-8]
   23734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23738:	bl	1dd5c <__assert_fail@plt+0xcc04>
   2373c:	ldr	r3, [fp, #-8]
   23740:	sub	r3, r3, #-1073741823	; 0xc0000001
   23744:	lsl	r3, r3, #2
   23748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2374c:	add	r3, r2, r3
   23750:	ldr	r3, [r3]
   23754:	cmp	r3, #0
   23758:	moveq	r3, #1
   2375c:	movne	r3, #0
   23760:	uxtb	r3, r3
   23764:	mov	r2, r3
   23768:	ldr	r3, [fp, #-8]
   2376c:	sub	r3, r3, r2
   23770:	str	r3, [fp, #-8]
   23774:	b	2379c <__assert_fail@plt+0x12644>
   23778:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2377c:	ldr	r2, [r3, #8]
   23780:	ldr	r3, [fp, #-20]	; 0xffffffec
   23784:	lsl	r3, r3, #2
   23788:	add	r3, r2, r3
   2378c:	ldr	r2, [fp, #-8]
   23790:	mov	r1, r3
   23794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23798:	bl	1ca80 <__assert_fail@plt+0xb928>
   2379c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   237a0:	ldr	r2, [fp, #-8]
   237a4:	str	r2, [r3, #4]
   237a8:	ldr	r3, [fp, #-12]
   237ac:	cmp	r3, #0
   237b0:	beq	237c4 <__assert_fail@plt+0x1266c>
   237b4:	mov	r2, #1
   237b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   237bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237c0:	bl	22364 <__assert_fail@plt+0x1120c>
   237c4:	ldr	r3, [fp, #-16]
   237c8:	cmp	r3, #0
   237cc:	bge	237dc <__assert_fail@plt+0x12684>
   237d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   237d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237d8:	bl	2227c <__assert_fail@plt+0x11124>
   237dc:	sub	sp, fp, #4
   237e0:	ldr	fp, [sp]
   237e4:	add	sp, sp, #4
   237e8:	pop	{pc}		; (ldr pc, [sp], #4)
   237ec:	str	fp, [sp, #-8]!
   237f0:	str	lr, [sp, #4]
   237f4:	add	fp, sp, #4
   237f8:	sub	sp, sp, #48	; 0x30
   237fc:	str	r0, [fp, #-40]	; 0xffffffd8
   23800:	str	r1, [fp, #-44]	; 0xffffffd4
   23804:	str	r2, [fp, #-48]	; 0xffffffd0
   23808:	str	r3, [fp, #-52]	; 0xffffffcc
   2380c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23810:	ldr	r3, [r3, #4]
   23814:	str	r3, [fp, #-8]
   23818:	ldr	r3, [fp, #-8]
   2381c:	cmp	r3, #0
   23820:	beq	23830 <__assert_fail@plt+0x126d8>
   23824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23828:	cmp	r3, #0
   2382c:	bne	23840 <__assert_fail@plt+0x126e8>
   23830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23834:	mov	r2, #0
   23838:	str	r2, [r3, #4]
   2383c:	b	23b24 <__assert_fail@plt+0x129cc>
   23840:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23844:	add	r3, r3, #31
   23848:	lsr	r3, r3, #5
   2384c:	str	r3, [fp, #-12]
   23850:	ldr	r3, [fp, #-12]
   23854:	cmp	r3, #0
   23858:	bgt	2387c <__assert_fail@plt+0x12724>
   2385c:	movw	r3, #24352	; 0x5f20
   23860:	movt	r3, #3
   23864:	movw	r2, #2427	; 0x97b
   23868:	movw	r1, #22376	; 0x5768
   2386c:	movt	r1, #3
   23870:	movw	r0, #23084	; 0x5a2c
   23874:	movt	r0, #3
   23878:	bl	11158 <__assert_fail@plt>
   2387c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23880:	ldr	r3, [r3]
   23884:	ldr	r2, [fp, #-12]
   23888:	cmp	r2, r3
   2388c:	ble	238a4 <__assert_fail@plt+0x1274c>
   23890:	ldr	r1, [fp, #-12]
   23894:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23898:	bl	20e04 <__assert_fail@plt+0xfcac>
   2389c:	mov	r3, r0
   238a0:	b	238ac <__assert_fail@plt+0x12754>
   238a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   238a8:	ldr	r3, [r3, #8]
   238ac:	str	r3, [fp, #-20]	; 0xffffffec
   238b0:	ldr	r3, [fp, #-8]
   238b4:	cmp	r3, #0
   238b8:	rsblt	r3, r3, #0
   238bc:	str	r3, [fp, #-24]	; 0xffffffe8
   238c0:	ldr	r3, [fp, #-12]
   238c4:	lsl	r2, r3, #5
   238c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   238cc:	sub	r3, r2, r3
   238d0:	mvn	r2, #0
   238d4:	lsr	r3, r2, r3
   238d8:	str	r3, [fp, #-28]	; 0xffffffe4
   238dc:	ldr	r2, [fp, #-12]
   238e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238e4:	cmp	r2, r3
   238e8:	ble	23a10 <__assert_fail@plt+0x128b8>
   238ec:	ldr	r3, [fp, #-8]
   238f0:	cmp	r3, #0
   238f4:	ble	23900 <__assert_fail@plt+0x127a8>
   238f8:	mov	r2, #1
   238fc:	b	23904 <__assert_fail@plt+0x127ac>
   23900:	mov	r2, #0
   23904:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23908:	cmp	r2, r3
   2390c:	bne	239dc <__assert_fail@plt+0x12884>
   23910:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23914:	ldr	r3, [r3, #8]
   23918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2391c:	mov	r1, r3
   23920:	ldr	r0, [fp, #-20]	; 0xffffffec
   23924:	bl	1e1fc <__assert_fail@plt+0xd0a4>
   23928:	mov	r3, r0
   2392c:	cmp	r3, #0
   23930:	moveq	r3, #1
   23934:	movne	r3, #0
   23938:	uxtb	r3, r3
   2393c:	str	r3, [fp, #-32]	; 0xffffffe0
   23940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23944:	cmp	r3, #0
   23948:	beq	2396c <__assert_fail@plt+0x12814>
   2394c:	movw	r3, #24352	; 0x5f20
   23950:	movt	r3, #3
   23954:	movw	r2, #2443	; 0x98b
   23958:	movw	r1, #22376	; 0x5768
   2395c:	movt	r1, #3
   23960:	movw	r0, #22928	; 0x5990
   23964:	movt	r0, #3
   23968:	bl	11158 <__assert_fail@plt>
   2396c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23970:	str	r3, [fp, #-16]
   23974:	b	2399c <__assert_fail@plt+0x12844>
   23978:	ldr	r3, [fp, #-16]
   2397c:	lsl	r3, r3, #2
   23980:	ldr	r2, [fp, #-20]	; 0xffffffec
   23984:	add	r3, r2, r3
   23988:	mvn	r2, #0
   2398c:	str	r2, [r3]
   23990:	ldr	r3, [fp, #-16]
   23994:	add	r3, r3, #1
   23998:	str	r3, [fp, #-16]
   2399c:	ldr	r3, [fp, #-12]
   239a0:	sub	r3, r3, #1
   239a4:	ldr	r2, [fp, #-16]
   239a8:	cmp	r2, r3
   239ac:	blt	23978 <__assert_fail@plt+0x12820>
   239b0:	ldr	r3, [fp, #-12]
   239b4:	sub	r3, r3, #-1073741823	; 0xc0000001
   239b8:	lsl	r3, r3, #2
   239bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   239c0:	add	r3, r2, r3
   239c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   239c8:	str	r2, [r3]
   239cc:	ldr	r3, [fp, #-8]
   239d0:	rsb	r3, r3, #0
   239d4:	str	r3, [fp, #-8]
   239d8:	b	23af0 <__assert_fail@plt+0x12998>
   239dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   239e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   239e4:	cmp	r2, r3
   239e8:	beq	23a04 <__assert_fail@plt+0x128ac>
   239ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   239f0:	ldr	r3, [r3, #8]
   239f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   239f8:	mov	r1, r3
   239fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a00:	bl	1ca80 <__assert_fail@plt+0xb928>
   23a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23a08:	str	r3, [fp, #-12]
   23a0c:	b	23af0 <__assert_fail@plt+0x12998>
   23a10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23a18:	cmp	r2, r3
   23a1c:	beq	23a3c <__assert_fail@plt+0x128e4>
   23a20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23a24:	ldr	r1, [r3, #8]
   23a28:	ldr	r3, [fp, #-12]
   23a2c:	sub	r3, r3, #1
   23a30:	mov	r2, r3
   23a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a38:	bl	1ca80 <__assert_fail@plt+0xb928>
   23a3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23a40:	ldr	r2, [r3, #8]
   23a44:	ldr	r3, [fp, #-12]
   23a48:	sub	r3, r3, #-1073741823	; 0xc0000001
   23a4c:	lsl	r3, r3, #2
   23a50:	add	r3, r2, r3
   23a54:	ldr	r1, [r3]
   23a58:	ldr	r3, [fp, #-12]
   23a5c:	sub	r3, r3, #-1073741823	; 0xc0000001
   23a60:	lsl	r3, r3, #2
   23a64:	ldr	r2, [fp, #-20]	; 0xffffffec
   23a68:	add	r3, r2, r3
   23a6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23a70:	and	r2, r2, r1
   23a74:	str	r2, [r3]
   23a78:	ldr	r3, [fp, #-8]
   23a7c:	cmp	r3, #0
   23a80:	ble	23a8c <__assert_fail@plt+0x12934>
   23a84:	mov	r2, #1
   23a88:	b	23a90 <__assert_fail@plt+0x12938>
   23a8c:	mov	r2, #0
   23a90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23a94:	cmp	r2, r3
   23a98:	bne	23af0 <__assert_fail@plt+0x12998>
   23a9c:	ldr	r2, [fp, #-12]
   23aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23aa8:	bl	1e1fc <__assert_fail@plt+0xd0a4>
   23aac:	ldr	r3, [fp, #-12]
   23ab0:	sub	r3, r3, #-1073741823	; 0xc0000001
   23ab4:	lsl	r3, r3, #2
   23ab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   23abc:	add	r3, r2, r3
   23ac0:	ldr	r1, [r3]
   23ac4:	ldr	r3, [fp, #-12]
   23ac8:	sub	r3, r3, #-1073741823	; 0xc0000001
   23acc:	lsl	r3, r3, #2
   23ad0:	ldr	r2, [fp, #-20]	; 0xffffffec
   23ad4:	add	r3, r2, r3
   23ad8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23adc:	and	r2, r2, r1
   23ae0:	str	r2, [r3]
   23ae4:	ldr	r3, [fp, #-8]
   23ae8:	rsb	r3, r3, #0
   23aec:	str	r3, [fp, #-8]
   23af0:	ldr	r1, [fp, #-12]
   23af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23af8:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   23afc:	str	r0, [fp, #-12]
   23b00:	ldr	r3, [fp, #-8]
   23b04:	cmp	r3, #0
   23b08:	bge	23b18 <__assert_fail@plt+0x129c0>
   23b0c:	ldr	r3, [fp, #-12]
   23b10:	rsb	r3, r3, #0
   23b14:	b	23b1c <__assert_fail@plt+0x129c4>
   23b18:	ldr	r3, [fp, #-12]
   23b1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b20:	str	r3, [r2, #4]
   23b24:	sub	sp, fp, #4
   23b28:	ldr	fp, [sp]
   23b2c:	add	sp, sp, #4
   23b30:	pop	{pc}		; (ldr pc, [sp], #4)
   23b34:	str	fp, [sp, #-8]!
   23b38:	str	lr, [sp, #4]
   23b3c:	add	fp, sp, #4
   23b40:	sub	sp, sp, #16
   23b44:	str	r0, [fp, #-8]
   23b48:	str	r1, [fp, #-12]
   23b4c:	str	r2, [fp, #-16]
   23b50:	mov	r3, #1
   23b54:	ldr	r2, [fp, #-16]
   23b58:	ldr	r1, [fp, #-12]
   23b5c:	ldr	r0, [fp, #-8]
   23b60:	bl	235a8 <__assert_fail@plt+0x12450>
   23b64:	nop	{0}
   23b68:	sub	sp, fp, #4
   23b6c:	ldr	fp, [sp]
   23b70:	add	sp, sp, #4
   23b74:	pop	{pc}		; (ldr pc, [sp], #4)
   23b78:	str	fp, [sp, #-8]!
   23b7c:	str	lr, [sp, #4]
   23b80:	add	fp, sp, #4
   23b84:	sub	sp, sp, #16
   23b88:	str	r0, [fp, #-8]
   23b8c:	str	r1, [fp, #-12]
   23b90:	str	r2, [fp, #-16]
   23b94:	mov	r3, #0
   23b98:	ldr	r2, [fp, #-16]
   23b9c:	ldr	r1, [fp, #-12]
   23ba0:	ldr	r0, [fp, #-8]
   23ba4:	bl	235a8 <__assert_fail@plt+0x12450>
   23ba8:	nop	{0}
   23bac:	sub	sp, fp, #4
   23bb0:	ldr	fp, [sp]
   23bb4:	add	sp, sp, #4
   23bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   23bbc:	str	fp, [sp, #-8]!
   23bc0:	str	lr, [sp, #4]
   23bc4:	add	fp, sp, #4
   23bc8:	sub	sp, sp, #16
   23bcc:	str	r0, [fp, #-8]
   23bd0:	str	r1, [fp, #-12]
   23bd4:	str	r2, [fp, #-16]
   23bd8:	mov	r3, #2
   23bdc:	ldr	r2, [fp, #-16]
   23be0:	ldr	r1, [fp, #-12]
   23be4:	ldr	r0, [fp, #-8]
   23be8:	bl	235a8 <__assert_fail@plt+0x12450>
   23bec:	nop	{0}
   23bf0:	sub	sp, fp, #4
   23bf4:	ldr	fp, [sp]
   23bf8:	add	sp, sp, #4
   23bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   23c00:	str	fp, [sp, #-8]!
   23c04:	str	lr, [sp, #4]
   23c08:	add	fp, sp, #4
   23c0c:	sub	sp, sp, #16
   23c10:	str	r0, [fp, #-8]
   23c14:	str	r1, [fp, #-12]
   23c18:	str	r2, [fp, #-16]
   23c1c:	mov	r3, #1
   23c20:	ldr	r2, [fp, #-16]
   23c24:	ldr	r1, [fp, #-12]
   23c28:	ldr	r0, [fp, #-8]
   23c2c:	bl	237ec <__assert_fail@plt+0x12694>
   23c30:	nop	{0}
   23c34:	sub	sp, fp, #4
   23c38:	ldr	fp, [sp]
   23c3c:	add	sp, sp, #4
   23c40:	pop	{pc}		; (ldr pc, [sp], #4)
   23c44:	str	fp, [sp, #-8]!
   23c48:	str	lr, [sp, #4]
   23c4c:	add	fp, sp, #4
   23c50:	sub	sp, sp, #16
   23c54:	str	r0, [fp, #-8]
   23c58:	str	r1, [fp, #-12]
   23c5c:	str	r2, [fp, #-16]
   23c60:	mov	r3, #0
   23c64:	ldr	r2, [fp, #-16]
   23c68:	ldr	r1, [fp, #-12]
   23c6c:	ldr	r0, [fp, #-8]
   23c70:	bl	237ec <__assert_fail@plt+0x12694>
   23c74:	nop	{0}
   23c78:	sub	sp, fp, #4
   23c7c:	ldr	fp, [sp]
   23c80:	add	sp, sp, #4
   23c84:	pop	{pc}		; (ldr pc, [sp], #4)
   23c88:	str	fp, [sp, #-8]!
   23c8c:	str	lr, [sp, #4]
   23c90:	add	fp, sp, #4
   23c94:	sub	sp, sp, #16
   23c98:	str	r0, [fp, #-8]
   23c9c:	str	r1, [fp, #-12]
   23ca0:	str	r2, [fp, #-16]
   23ca4:	mov	r3, #2
   23ca8:	ldr	r2, [fp, #-16]
   23cac:	ldr	r1, [fp, #-12]
   23cb0:	ldr	r0, [fp, #-8]
   23cb4:	bl	237ec <__assert_fail@plt+0x12694>
   23cb8:	nop	{0}
   23cbc:	sub	sp, fp, #4
   23cc0:	ldr	fp, [sp]
   23cc4:	add	sp, sp, #4
   23cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   23ccc:	str	fp, [sp, #-8]!
   23cd0:	str	lr, [sp, #4]
   23cd4:	add	fp, sp, #4
   23cd8:	sub	sp, sp, #32
   23cdc:	str	r0, [fp, #-16]
   23ce0:	str	r1, [fp, #-20]	; 0xffffffec
   23ce4:	str	r2, [fp, #-24]	; 0xffffffe8
   23ce8:	mov	r3, #2
   23cec:	str	r3, [sp]
   23cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23cf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   23cf8:	mov	r1, #0
   23cfc:	ldr	r0, [fp, #-16]
   23d00:	bl	22e8c <__assert_fail@plt+0x11d34>
   23d04:	mov	r3, r0
   23d08:	str	r3, [fp, #-8]
   23d0c:	ldr	r3, [fp, #-8]
   23d10:	cmp	r3, #0
   23d14:	beq	23d38 <__assert_fail@plt+0x12be0>
   23d18:	movw	r3, #24368	; 0x5f30
   23d1c:	movt	r3, #3
   23d20:	movw	r2, #2521	; 0x9d9
   23d24:	movw	r1, #22376	; 0x5768
   23d28:	movt	r1, #3
   23d2c:	movw	r0, #22928	; 0x5990
   23d30:	movt	r0, #3
   23d34:	bl	11158 <__assert_fail@plt>
   23d38:	nop	{0}
   23d3c:	sub	sp, fp, #4
   23d40:	ldr	fp, [sp]
   23d44:	add	sp, sp, #4
   23d48:	pop	{pc}		; (ldr pc, [sp], #4)
   23d4c:	str	fp, [sp, #-8]!
   23d50:	str	lr, [sp, #4]
   23d54:	add	fp, sp, #4
   23d58:	sub	sp, sp, #16
   23d5c:	str	r0, [fp, #-8]
   23d60:	str	r1, [fp, #-12]
   23d64:	mov	r3, #2
   23d68:	str	r3, [sp]
   23d6c:	ldr	r3, [fp, #-12]
   23d70:	ldr	r2, [fp, #-8]
   23d74:	mov	r1, #0
   23d78:	mov	r0, #0
   23d7c:	bl	22e8c <__assert_fail@plt+0x11d34>
   23d80:	mov	r3, r0
   23d84:	cmp	r3, #0
   23d88:	moveq	r3, #1
   23d8c:	movne	r3, #0
   23d90:	uxtb	r3, r3
   23d94:	mov	r0, r3
   23d98:	sub	sp, fp, #4
   23d9c:	ldr	fp, [sp]
   23da0:	add	sp, sp, #4
   23da4:	pop	{pc}		; (ldr pc, [sp], #4)
   23da8:	str	fp, [sp, #-8]!
   23dac:	str	lr, [sp, #4]
   23db0:	add	fp, sp, #4
   23db4:	sub	sp, sp, #32
   23db8:	str	r0, [fp, #-24]	; 0xffffffe8
   23dbc:	str	r1, [fp, #-28]	; 0xffffffe4
   23dc0:	str	r2, [fp, #-32]	; 0xffffffe0
   23dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23dc8:	bl	21f1c <__assert_fail@plt+0x10dc4>
   23dcc:	mov	r3, r0
   23dd0:	cmp	r3, #0
   23dd4:	bne	23dfc <__assert_fail@plt+0x12ca4>
   23dd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23de0:	bl	22054 <__assert_fail@plt+0x10efc>
   23de4:	mov	r3, r0
   23de8:	cmp	r3, #0
   23dec:	moveq	r3, #1
   23df0:	movne	r3, #0
   23df4:	uxtb	r3, r3
   23df8:	b	23e40 <__assert_fail@plt+0x12ce8>
   23dfc:	sub	r3, fp, #20
   23e00:	mov	r0, r3
   23e04:	bl	20cdc <__assert_fail@plt+0xfb84>
   23e08:	sub	r3, fp, #20
   23e0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23e14:	mov	r0, r3
   23e18:	bl	227f8 <__assert_fail@plt+0x116a0>
   23e1c:	sub	r3, fp, #20
   23e20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23e24:	mov	r0, r3
   23e28:	bl	23d4c <__assert_fail@plt+0x12bf4>
   23e2c:	str	r0, [fp, #-8]
   23e30:	sub	r3, fp, #20
   23e34:	mov	r0, r3
   23e38:	bl	20db0 <__assert_fail@plt+0xfc58>
   23e3c:	ldr	r3, [fp, #-8]
   23e40:	mov	r0, r3
   23e44:	sub	sp, fp, #4
   23e48:	ldr	fp, [sp]
   23e4c:	add	sp, sp, #4
   23e50:	pop	{pc}		; (ldr pc, [sp], #4)
   23e54:	str	fp, [sp, #-8]!
   23e58:	str	lr, [sp, #4]
   23e5c:	add	fp, sp, #4
   23e60:	sub	sp, sp, #56	; 0x38
   23e64:	str	r0, [fp, #-40]	; 0xffffffd8
   23e68:	str	r1, [fp, #-44]	; 0xffffffd4
   23e6c:	str	r2, [fp, #-48]	; 0xffffffd0
   23e70:	str	r3, [fp, #-52]	; 0xffffffcc
   23e74:	sub	r3, fp, #20
   23e78:	mov	r0, r3
   23e7c:	bl	20cdc <__assert_fail@plt+0xfb84>
   23e80:	sub	r3, fp, #32
   23e84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23e88:	mov	r0, r3
   23e8c:	bl	210dc <__assert_fail@plt+0xff84>
   23e90:	sub	r2, fp, #32
   23e94:	sub	r1, fp, #20
   23e98:	ldr	r3, [fp, #4]
   23e9c:	str	r3, [sp]
   23ea0:	mov	r3, r2
   23ea4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23eac:	bl	22e8c <__assert_fail@plt+0x11d34>
   23eb0:	sub	r3, fp, #32
   23eb4:	mov	r0, r3
   23eb8:	bl	20db0 <__assert_fail@plt+0xfc58>
   23ebc:	sub	r3, fp, #20
   23ec0:	mov	r0, r3
   23ec4:	bl	214a8 <__assert_fail@plt+0x10350>
   23ec8:	str	r0, [fp, #-8]
   23ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23ed0:	cmp	r3, #0
   23ed4:	beq	23ee8 <__assert_fail@plt+0x12d90>
   23ed8:	sub	r3, fp, #20
   23edc:	mov	r1, r3
   23ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23ee4:	bl	222c8 <__assert_fail@plt+0x11170>
   23ee8:	sub	r3, fp, #20
   23eec:	mov	r0, r3
   23ef0:	bl	20db0 <__assert_fail@plt+0xfc58>
   23ef4:	ldr	r3, [fp, #-8]
   23ef8:	mov	r0, r3
   23efc:	sub	sp, fp, #4
   23f00:	ldr	fp, [sp]
   23f04:	add	sp, sp, #4
   23f08:	pop	{pc}		; (ldr pc, [sp], #4)
   23f0c:	str	fp, [sp, #-8]!
   23f10:	str	lr, [sp, #4]
   23f14:	add	fp, sp, #4
   23f18:	sub	sp, sp, #24
   23f1c:	str	r0, [fp, #-8]
   23f20:	str	r1, [fp, #-12]
   23f24:	str	r2, [fp, #-16]
   23f28:	str	r3, [fp, #-20]	; 0xffffffec
   23f2c:	mov	r3, #1
   23f30:	str	r3, [sp]
   23f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   23f38:	ldr	r2, [fp, #-16]
   23f3c:	ldr	r1, [fp, #-12]
   23f40:	ldr	r0, [fp, #-8]
   23f44:	bl	23e54 <__assert_fail@plt+0x12cfc>
   23f48:	mov	r3, r0
   23f4c:	mov	r0, r3
   23f50:	sub	sp, fp, #4
   23f54:	ldr	fp, [sp]
   23f58:	add	sp, sp, #4
   23f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   23f60:	str	fp, [sp, #-8]!
   23f64:	str	lr, [sp, #4]
   23f68:	add	fp, sp, #4
   23f6c:	sub	sp, sp, #24
   23f70:	str	r0, [fp, #-8]
   23f74:	str	r1, [fp, #-12]
   23f78:	str	r2, [fp, #-16]
   23f7c:	str	r3, [fp, #-20]	; 0xffffffec
   23f80:	mov	r3, #0
   23f84:	str	r3, [sp]
   23f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   23f8c:	ldr	r2, [fp, #-16]
   23f90:	ldr	r1, [fp, #-12]
   23f94:	ldr	r0, [fp, #-8]
   23f98:	bl	23e54 <__assert_fail@plt+0x12cfc>
   23f9c:	mov	r3, r0
   23fa0:	mov	r0, r3
   23fa4:	sub	sp, fp, #4
   23fa8:	ldr	fp, [sp]
   23fac:	add	sp, sp, #4
   23fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   23fb4:	str	fp, [sp, #-8]!
   23fb8:	str	lr, [sp, #4]
   23fbc:	add	fp, sp, #4
   23fc0:	sub	sp, sp, #24
   23fc4:	str	r0, [fp, #-8]
   23fc8:	str	r1, [fp, #-12]
   23fcc:	str	r2, [fp, #-16]
   23fd0:	str	r3, [fp, #-20]	; 0xffffffec
   23fd4:	mov	r3, #2
   23fd8:	str	r3, [sp]
   23fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23fe0:	ldr	r2, [fp, #-16]
   23fe4:	ldr	r1, [fp, #-12]
   23fe8:	ldr	r0, [fp, #-8]
   23fec:	bl	23e54 <__assert_fail@plt+0x12cfc>
   23ff0:	mov	r3, r0
   23ff4:	mov	r0, r3
   23ff8:	sub	sp, fp, #4
   23ffc:	ldr	fp, [sp]
   24000:	add	sp, sp, #4
   24004:	pop	{pc}		; (ldr pc, [sp], #4)
   24008:	str	fp, [sp, #-8]!
   2400c:	str	lr, [sp, #4]
   24010:	add	fp, sp, #4
   24014:	sub	sp, sp, #24
   24018:	str	r0, [fp, #-8]
   2401c:	str	r1, [fp, #-12]
   24020:	str	r2, [fp, #-16]
   24024:	mov	r3, #1
   24028:	str	r3, [sp]
   2402c:	ldr	r3, [fp, #-16]
   24030:	ldr	r2, [fp, #-12]
   24034:	mov	r1, #0
   24038:	ldr	r0, [fp, #-8]
   2403c:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24040:	mov	r3, r0
   24044:	mov	r0, r3
   24048:	sub	sp, fp, #4
   2404c:	ldr	fp, [sp]
   24050:	add	sp, sp, #4
   24054:	pop	{pc}		; (ldr pc, [sp], #4)
   24058:	str	fp, [sp, #-8]!
   2405c:	str	lr, [sp, #4]
   24060:	add	fp, sp, #4
   24064:	sub	sp, sp, #24
   24068:	str	r0, [fp, #-8]
   2406c:	str	r1, [fp, #-12]
   24070:	str	r2, [fp, #-16]
   24074:	mov	r3, #0
   24078:	str	r3, [sp]
   2407c:	ldr	r3, [fp, #-16]
   24080:	ldr	r2, [fp, #-12]
   24084:	mov	r1, #0
   24088:	ldr	r0, [fp, #-8]
   2408c:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24090:	mov	r3, r0
   24094:	mov	r0, r3
   24098:	sub	sp, fp, #4
   2409c:	ldr	fp, [sp]
   240a0:	add	sp, sp, #4
   240a4:	pop	{pc}		; (ldr pc, [sp], #4)
   240a8:	str	fp, [sp, #-8]!
   240ac:	str	lr, [sp, #4]
   240b0:	add	fp, sp, #4
   240b4:	sub	sp, sp, #24
   240b8:	str	r0, [fp, #-8]
   240bc:	str	r1, [fp, #-12]
   240c0:	str	r2, [fp, #-16]
   240c4:	mov	r3, #2
   240c8:	str	r3, [sp]
   240cc:	ldr	r3, [fp, #-16]
   240d0:	ldr	r2, [fp, #-12]
   240d4:	mov	r1, #0
   240d8:	ldr	r0, [fp, #-8]
   240dc:	bl	23e54 <__assert_fail@plt+0x12cfc>
   240e0:	mov	r3, r0
   240e4:	mov	r0, r3
   240e8:	sub	sp, fp, #4
   240ec:	ldr	fp, [sp]
   240f0:	add	sp, sp, #4
   240f4:	pop	{pc}		; (ldr pc, [sp], #4)
   240f8:	str	fp, [sp, #-8]!
   240fc:	str	lr, [sp, #4]
   24100:	add	fp, sp, #4
   24104:	sub	sp, sp, #24
   24108:	str	r0, [fp, #-8]
   2410c:	str	r1, [fp, #-12]
   24110:	str	r2, [fp, #-16]
   24114:	mov	r3, #1
   24118:	str	r3, [sp]
   2411c:	ldr	r3, [fp, #-16]
   24120:	ldr	r2, [fp, #-12]
   24124:	ldr	r1, [fp, #-8]
   24128:	mov	r0, #0
   2412c:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24130:	mov	r3, r0
   24134:	mov	r0, r3
   24138:	sub	sp, fp, #4
   2413c:	ldr	fp, [sp]
   24140:	add	sp, sp, #4
   24144:	pop	{pc}		; (ldr pc, [sp], #4)
   24148:	str	fp, [sp, #-8]!
   2414c:	str	lr, [sp, #4]
   24150:	add	fp, sp, #4
   24154:	sub	sp, sp, #24
   24158:	str	r0, [fp, #-8]
   2415c:	str	r1, [fp, #-12]
   24160:	str	r2, [fp, #-16]
   24164:	mov	r3, #0
   24168:	str	r3, [sp]
   2416c:	ldr	r3, [fp, #-16]
   24170:	ldr	r2, [fp, #-12]
   24174:	ldr	r1, [fp, #-8]
   24178:	mov	r0, #0
   2417c:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24180:	mov	r3, r0
   24184:	mov	r0, r3
   24188:	sub	sp, fp, #4
   2418c:	ldr	fp, [sp]
   24190:	add	sp, sp, #4
   24194:	pop	{pc}		; (ldr pc, [sp], #4)
   24198:	str	fp, [sp, #-8]!
   2419c:	str	lr, [sp, #4]
   241a0:	add	fp, sp, #4
   241a4:	sub	sp, sp, #24
   241a8:	str	r0, [fp, #-8]
   241ac:	str	r1, [fp, #-12]
   241b0:	str	r2, [fp, #-16]
   241b4:	mov	r3, #2
   241b8:	str	r3, [sp]
   241bc:	ldr	r3, [fp, #-16]
   241c0:	ldr	r2, [fp, #-12]
   241c4:	ldr	r1, [fp, #-8]
   241c8:	mov	r0, #0
   241cc:	bl	23e54 <__assert_fail@plt+0x12cfc>
   241d0:	mov	r3, r0
   241d4:	mov	r0, r3
   241d8:	sub	sp, fp, #4
   241dc:	ldr	fp, [sp]
   241e0:	add	sp, sp, #4
   241e4:	pop	{pc}		; (ldr pc, [sp], #4)
   241e8:	str	fp, [sp, #-8]!
   241ec:	str	lr, [sp, #4]
   241f0:	add	fp, sp, #4
   241f4:	sub	sp, sp, #16
   241f8:	str	r0, [fp, #-8]
   241fc:	str	r1, [fp, #-12]
   24200:	mov	r3, #1
   24204:	str	r3, [sp]
   24208:	ldr	r3, [fp, #-12]
   2420c:	ldr	r2, [fp, #-8]
   24210:	mov	r1, #0
   24214:	mov	r0, #0
   24218:	bl	23e54 <__assert_fail@plt+0x12cfc>
   2421c:	mov	r3, r0
   24220:	mov	r0, r3
   24224:	sub	sp, fp, #4
   24228:	ldr	fp, [sp]
   2422c:	add	sp, sp, #4
   24230:	pop	{pc}		; (ldr pc, [sp], #4)
   24234:	str	fp, [sp, #-8]!
   24238:	str	lr, [sp, #4]
   2423c:	add	fp, sp, #4
   24240:	sub	sp, sp, #16
   24244:	str	r0, [fp, #-8]
   24248:	str	r1, [fp, #-12]
   2424c:	mov	r3, #0
   24250:	str	r3, [sp]
   24254:	ldr	r3, [fp, #-12]
   24258:	ldr	r2, [fp, #-8]
   2425c:	mov	r1, #0
   24260:	mov	r0, #0
   24264:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24268:	mov	r3, r0
   2426c:	mov	r0, r3
   24270:	sub	sp, fp, #4
   24274:	ldr	fp, [sp]
   24278:	add	sp, sp, #4
   2427c:	pop	{pc}		; (ldr pc, [sp], #4)
   24280:	str	fp, [sp, #-8]!
   24284:	str	lr, [sp, #4]
   24288:	add	fp, sp, #4
   2428c:	sub	sp, sp, #16
   24290:	str	r0, [fp, #-8]
   24294:	str	r1, [fp, #-12]
   24298:	mov	r3, #2
   2429c:	str	r3, [sp]
   242a0:	ldr	r3, [fp, #-12]
   242a4:	ldr	r2, [fp, #-8]
   242a8:	mov	r1, #0
   242ac:	mov	r0, #0
   242b0:	bl	23e54 <__assert_fail@plt+0x12cfc>
   242b4:	mov	r3, r0
   242b8:	mov	r0, r3
   242bc:	sub	sp, fp, #4
   242c0:	ldr	fp, [sp]
   242c4:	add	sp, sp, #4
   242c8:	pop	{pc}		; (ldr pc, [sp], #4)
   242cc:	str	fp, [sp, #-8]!
   242d0:	str	lr, [sp, #4]
   242d4:	add	fp, sp, #4
   242d8:	sub	sp, sp, #24
   242dc:	str	r0, [fp, #-8]
   242e0:	str	r1, [fp, #-12]
   242e4:	str	r2, [fp, #-16]
   242e8:	mov	r3, #0
   242ec:	str	r3, [sp]
   242f0:	ldr	r3, [fp, #-16]
   242f4:	ldr	r2, [fp, #-12]
   242f8:	ldr	r1, [fp, #-8]
   242fc:	mov	r0, #0
   24300:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24304:	mov	r3, r0
   24308:	mov	r0, r3
   2430c:	sub	sp, fp, #4
   24310:	ldr	fp, [sp]
   24314:	add	sp, sp, #4
   24318:	pop	{pc}		; (ldr pc, [sp], #4)
   2431c:	str	fp, [sp, #-8]!
   24320:	str	lr, [sp, #4]
   24324:	add	fp, sp, #4
   24328:	sub	sp, sp, #32
   2432c:	str	r0, [fp, #-16]
   24330:	str	r1, [fp, #-20]	; 0xffffffec
   24334:	str	r2, [fp, #-24]	; 0xffffffe8
   24338:	mov	r3, #2
   2433c:	str	r3, [sp]
   24340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24344:	ldr	r2, [fp, #-20]	; 0xffffffec
   24348:	mov	r1, #0
   2434c:	ldr	r0, [fp, #-16]
   24350:	bl	23e54 <__assert_fail@plt+0x12cfc>
   24354:	str	r0, [fp, #-8]
   24358:	ldr	r3, [fp, #-8]
   2435c:	cmp	r3, #0
   24360:	beq	24384 <__assert_fail@plt+0x1322c>
   24364:	movw	r3, #24384	; 0x5f40
   24368:	movt	r3, #3
   2436c:	movw	r2, #2647	; 0xa57
   24370:	movw	r1, #22376	; 0x5768
   24374:	movt	r1, #3
   24378:	movw	r0, #22928	; 0x5990
   2437c:	movt	r0, #3
   24380:	bl	11158 <__assert_fail@plt>
   24384:	nop	{0}
   24388:	sub	sp, fp, #4
   2438c:	ldr	fp, [sp]
   24390:	add	sp, sp, #4
   24394:	pop	{pc}		; (ldr pc, [sp], #4)
   24398:	str	fp, [sp, #-8]!
   2439c:	str	lr, [sp, #4]
   243a0:	add	fp, sp, #4
   243a4:	sub	sp, sp, #16
   243a8:	str	r0, [fp, #-8]
   243ac:	str	r1, [fp, #-12]
   243b0:	mov	r3, #2
   243b4:	str	r3, [sp]
   243b8:	ldr	r3, [fp, #-12]
   243bc:	ldr	r2, [fp, #-8]
   243c0:	mov	r1, #0
   243c4:	mov	r0, #0
   243c8:	bl	23e54 <__assert_fail@plt+0x12cfc>
   243cc:	mov	r3, r0
   243d0:	cmp	r3, #0
   243d4:	moveq	r3, #1
   243d8:	movne	r3, #0
   243dc:	uxtb	r3, r3
   243e0:	mov	r0, r3
   243e4:	sub	sp, fp, #4
   243e8:	ldr	fp, [sp]
   243ec:	add	sp, sp, #4
   243f0:	pop	{pc}		; (ldr pc, [sp], #4)
   243f4:	str	fp, [sp, #-8]!
   243f8:	str	lr, [sp, #4]
   243fc:	add	fp, sp, #4
   24400:	sub	sp, sp, #40	; 0x28
   24404:	str	r0, [fp, #-40]	; 0xffffffd8
   24408:	str	r1, [fp, #-44]	; 0xffffffd4
   2440c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24410:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24414:	orr	r3, r2, r3
   24418:	cmp	r3, #0
   2441c:	bne	24440 <__assert_fail@plt+0x132e8>
   24420:	movw	r3, #24400	; 0x5f50
   24424:	movt	r3, #3
   24428:	movw	r2, #2663	; 0xa67
   2442c:	movw	r1, #22376	; 0x5768
   24430:	movt	r1, #3
   24434:	movw	r0, #23092	; 0x5a34
   24438:	movt	r0, #3
   2443c:	bl	11158 <__assert_fail@plt>
   24440:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24444:	cmp	r3, #0
   24448:	bne	24454 <__assert_fail@plt+0x132fc>
   2444c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24450:	b	24610 <__assert_fail@plt+0x134b8>
   24454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24458:	cmp	r3, #0
   2445c:	bne	24468 <__assert_fail@plt+0x13310>
   24460:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24464:	b	24610 <__assert_fail@plt+0x134b8>
   24468:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2446c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24470:	orr	r3, r2, r3
   24474:	str	r3, [fp, #-16]
   24478:	mov	r3, #0
   2447c:	str	r3, [fp, #-20]	; 0xffffffec
   24480:	ldr	r3, [fp, #-16]
   24484:	rsb	r3, r3, #0
   24488:	ldr	r2, [fp, #-16]
   2448c:	and	r3, r3, r2
   24490:	str	r3, [fp, #-8]
   24494:	mov	r3, #0
   24498:	str	r3, [fp, #-12]
   2449c:	mov	r3, #8
   244a0:	str	r3, [fp, #-24]	; 0xffffffe8
   244a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244a8:	cmp	r3, #31
   244ac:	bhi	244fc <__assert_fail@plt+0x133a4>
   244b0:	b	244d0 <__assert_fail@plt+0x13378>
   244b4:	ldr	r2, [fp, #-8]
   244b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244bc:	lsl	r3, r2, r3
   244c0:	str	r3, [fp, #-8]
   244c4:	ldr	r3, [fp, #-12]
   244c8:	add	r3, r3, #8
   244cc:	str	r3, [fp, #-12]
   244d0:	ldr	r3, [fp, #-8]
   244d4:	and	r3, r3, #-16777216	; 0xff000000
   244d8:	cmp	r3, #0
   244dc:	beq	244b4 <__assert_fail@plt+0x1335c>
   244e0:	b	244fc <__assert_fail@plt+0x133a4>
   244e4:	ldr	r3, [fp, #-8]
   244e8:	lsl	r3, r3, #1
   244ec:	str	r3, [fp, #-8]
   244f0:	ldr	r3, [fp, #-12]
   244f4:	add	r3, r3, #1
   244f8:	str	r3, [fp, #-12]
   244fc:	ldr	r3, [fp, #-8]
   24500:	cmp	r3, #0
   24504:	bge	244e4 <__assert_fail@plt+0x1338c>
   24508:	ldr	r3, [fp, #-12]
   2450c:	str	r3, [fp, #-20]	; 0xffffffec
   24510:	ldr	r3, [fp, #-20]	; 0xffffffec
   24514:	rsb	r3, r3, #31
   24518:	str	r3, [fp, #-28]	; 0xffffffe4
   2451c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24520:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24524:	lsr	r3, r2, r3
   24528:	str	r3, [fp, #-40]	; 0xffffffd8
   2452c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24534:	lsr	r3, r2, r3
   24538:	str	r3, [fp, #-44]	; 0xffffffd4
   2453c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24540:	and	r3, r3, #1
   24544:	cmp	r3, #0
   24548:	bne	24574 <__assert_fail@plt+0x1341c>
   2454c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24550:	str	r3, [fp, #-32]	; 0xffffffe0
   24554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24558:	str	r3, [fp, #-40]	; 0xffffffd8
   2455c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24560:	str	r3, [fp, #-44]	; 0xffffffd4
   24564:	b	24574 <__assert_fail@plt+0x1341c>
   24568:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2456c:	lsr	r3, r3, #1
   24570:	str	r3, [fp, #-44]	; 0xffffffd4
   24574:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24578:	and	r3, r3, #1
   2457c:	cmp	r3, #0
   24580:	beq	24568 <__assert_fail@plt+0x13410>
   24584:	b	245f4 <__assert_fail@plt+0x1349c>
   24588:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2458c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24590:	cmp	r2, r3
   24594:	bls	245c8 <__assert_fail@plt+0x13470>
   24598:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2459c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245a0:	sub	r3, r2, r3
   245a4:	str	r3, [fp, #-40]	; 0xffffffd8
   245a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   245ac:	lsr	r3, r3, #1
   245b0:	str	r3, [fp, #-40]	; 0xffffffd8
   245b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   245b8:	and	r3, r3, #1
   245bc:	cmp	r3, #0
   245c0:	beq	245a8 <__assert_fail@plt+0x13450>
   245c4:	b	245f4 <__assert_fail@plt+0x1349c>
   245c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   245cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   245d0:	sub	r3, r2, r3
   245d4:	str	r3, [fp, #-44]	; 0xffffffd4
   245d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245dc:	lsr	r3, r3, #1
   245e0:	str	r3, [fp, #-44]	; 0xffffffd4
   245e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245e8:	and	r3, r3, #1
   245ec:	cmp	r3, #0
   245f0:	beq	245d8 <__assert_fail@plt+0x13480>
   245f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   245f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245fc:	cmp	r2, r3
   24600:	bne	24588 <__assert_fail@plt+0x13430>
   24604:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24608:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2460c:	lsl	r3, r2, r3
   24610:	mov	r0, r3
   24614:	sub	sp, fp, #4
   24618:	ldr	fp, [sp]
   2461c:	add	sp, sp, #4
   24620:	pop	{pc}		; (ldr pc, [sp], #4)
   24624:	str	fp, [sp, #-8]!
   24628:	str	lr, [sp, #4]
   2462c:	add	fp, sp, #4
   24630:	sub	sp, sp, #32
   24634:	str	r0, [fp, #-24]	; 0xffffffe8
   24638:	str	r1, [fp, #-28]	; 0xffffffe4
   2463c:	str	r2, [fp, #-32]	; 0xffffffe0
   24640:	sub	r3, fp, #16
   24644:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24648:	mov	r0, r3
   2464c:	bl	210dc <__assert_fail@plt+0xff84>
   24650:	sub	r2, fp, #16
   24654:	sub	r3, fp, #16
   24658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2465c:	mov	r0, r3
   24660:	bl	24744 <__assert_fail@plt+0x135ec>
   24664:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24668:	cmp	r3, #0
   2466c:	beq	24680 <__assert_fail@plt+0x13528>
   24670:	sub	r3, fp, #16
   24674:	mov	r0, r3
   24678:	bl	214a8 <__assert_fail@plt+0x10350>
   2467c:	str	r0, [fp, #-32]	; 0xffffffe0
   24680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24684:	cmp	r3, #0
   24688:	beq	2469c <__assert_fail@plt+0x13544>
   2468c:	sub	r3, fp, #16
   24690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24694:	mov	r0, r3
   24698:	bl	222c8 <__assert_fail@plt+0x11170>
   2469c:	sub	r3, fp, #16
   246a0:	mov	r0, r3
   246a4:	bl	20db0 <__assert_fail@plt+0xfc58>
   246a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   246ac:	mov	r0, r3
   246b0:	sub	sp, fp, #4
   246b4:	ldr	fp, [sp]
   246b8:	add	sp, sp, #4
   246bc:	pop	{pc}		; (ldr pc, [sp], #4)
   246c0:	str	fp, [sp, #-8]!
   246c4:	str	lr, [sp, #4]
   246c8:	add	fp, sp, #4
   246cc:	sub	sp, sp, #16
   246d0:	str	r0, [fp, #-16]
   246d4:	ldr	r3, [fp, #-16]
   246d8:	ldr	r3, [r3, #4]
   246dc:	cmp	r3, #0
   246e0:	bgt	24704 <__assert_fail@plt+0x135ac>
   246e4:	movw	r3, #24412	; 0x5f5c
   246e8:	movt	r3, #3
   246ec:	movw	r2, #2723	; 0xaa3
   246f0:	movw	r1, #22376	; 0x5768
   246f4:	movt	r1, #3
   246f8:	movw	r0, #23104	; 0x5a40
   246fc:	movt	r0, #3
   24700:	bl	11158 <__assert_fail@plt>
   24704:	ldr	r3, [fp, #-16]
   24708:	ldr	r3, [r3, #8]
   2470c:	mov	r1, #0
   24710:	mov	r0, r3
   24714:	bl	1e098 <__assert_fail@plt+0xcf40>
   24718:	str	r0, [fp, #-8]
   2471c:	ldr	r2, [fp, #-8]
   24720:	ldr	r1, [fp, #-16]
   24724:	ldr	r0, [fp, #-16]
   24728:	bl	23bbc <__assert_fail@plt+0x12a64>
   2472c:	ldr	r3, [fp, #-8]
   24730:	mov	r0, r3
   24734:	sub	sp, fp, #4
   24738:	ldr	fp, [sp]
   2473c:	add	sp, sp, #4
   24740:	pop	{pc}		; (ldr pc, [sp], #4)
   24744:	str	fp, [sp, #-8]!
   24748:	str	lr, [sp, #4]
   2474c:	add	fp, sp, #4
   24750:	sub	sp, sp, #64	; 0x40
   24754:	str	r0, [fp, #-56]	; 0xffffffc8
   24758:	str	r1, [fp, #-60]	; 0xffffffc4
   2475c:	str	r2, [fp, #-64]	; 0xffffffc0
   24760:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24764:	ldr	r3, [r3, #4]
   24768:	cmp	r3, #0
   2476c:	bne	24780 <__assert_fail@plt+0x13628>
   24770:	ldr	r1, [fp, #-64]	; 0xffffffc0
   24774:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24778:	bl	2222c <__assert_fail@plt+0x110d4>
   2477c:	b	249ac <__assert_fail@plt+0x13854>
   24780:	ldr	r3, [fp, #-64]	; 0xffffffc0
   24784:	ldr	r3, [r3, #4]
   24788:	cmp	r3, #0
   2478c:	bne	247a0 <__assert_fail@plt+0x13648>
   24790:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24794:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24798:	bl	2222c <__assert_fail@plt+0x110d4>
   2479c:	b	249ac <__assert_fail@plt+0x13854>
   247a0:	sub	r3, fp, #36	; 0x24
   247a4:	mov	r0, r3
   247a8:	bl	20cdc <__assert_fail@plt+0xfb84>
   247ac:	sub	r3, fp, #48	; 0x30
   247b0:	mov	r0, r3
   247b4:	bl	20cdc <__assert_fail@plt+0xfb84>
   247b8:	sub	r3, fp, #36	; 0x24
   247bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   247c0:	mov	r0, r3
   247c4:	bl	2222c <__assert_fail@plt+0x110d4>
   247c8:	sub	r3, fp, #36	; 0x24
   247cc:	mov	r0, r3
   247d0:	bl	246c0 <__assert_fail@plt+0x13568>
   247d4:	str	r0, [fp, #-8]
   247d8:	sub	r3, fp, #48	; 0x30
   247dc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   247e0:	mov	r0, r3
   247e4:	bl	2222c <__assert_fail@plt+0x110d4>
   247e8:	sub	r3, fp, #48	; 0x30
   247ec:	mov	r0, r3
   247f0:	bl	246c0 <__assert_fail@plt+0x13568>
   247f4:	str	r0, [fp, #-12]
   247f8:	ldr	r2, [fp, #-12]
   247fc:	ldr	r3, [fp, #-8]
   24800:	cmp	r2, r3
   24804:	movcc	r3, r2
   24808:	movcs	r3, r3
   2480c:	str	r3, [fp, #-16]
   24810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24818:	cmp	r2, r3
   2481c:	bge	24834 <__assert_fail@plt+0x136dc>
   24820:	sub	r2, fp, #48	; 0x30
   24824:	sub	r3, fp, #36	; 0x24
   24828:	mov	r1, r2
   2482c:	mov	r0, r3
   24830:	bl	222c8 <__assert_fail@plt+0x11170>
   24834:	sub	r2, fp, #48	; 0x30
   24838:	sub	r1, fp, #36	; 0x24
   2483c:	sub	r3, fp, #36	; 0x24
   24840:	mov	r0, r3
   24844:	bl	23504 <__assert_fail@plt+0x123ac>
   24848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2484c:	cmp	r3, #0
   24850:	bne	24868 <__assert_fail@plt+0x13710>
   24854:	sub	r3, fp, #48	; 0x30
   24858:	mov	r1, r3
   2485c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24860:	bl	222c8 <__assert_fail@plt+0x11170>
   24864:	b	24984 <__assert_fail@plt+0x1382c>
   24868:	sub	r3, fp, #36	; 0x24
   2486c:	mov	r0, r3
   24870:	bl	246c0 <__assert_fail@plt+0x13568>
   24874:	sub	r2, fp, #48	; 0x30
   24878:	sub	r3, fp, #36	; 0x24
   2487c:	mov	r1, r2
   24880:	mov	r0, r3
   24884:	bl	22054 <__assert_fail@plt+0x10efc>
   24888:	str	r0, [fp, #-20]	; 0xffffffec
   2488c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24890:	cmp	r3, #0
   24894:	bne	248ac <__assert_fail@plt+0x13754>
   24898:	sub	r3, fp, #36	; 0x24
   2489c:	mov	r1, r3
   248a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   248a4:	bl	222c8 <__assert_fail@plt+0x11170>
   248a8:	b	24984 <__assert_fail@plt+0x1382c>
   248ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   248b0:	cmp	r3, #0
   248b4:	bge	248cc <__assert_fail@plt+0x13774>
   248b8:	sub	r2, fp, #48	; 0x30
   248bc:	sub	r3, fp, #36	; 0x24
   248c0:	mov	r1, r2
   248c4:	mov	r0, r3
   248c8:	bl	222c8 <__assert_fail@plt+0x11170>
   248cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   248d0:	cmp	r3, #1
   248d4:	bne	2496c <__assert_fail@plt+0x13814>
   248d8:	sub	r2, fp, #48	; 0x30
   248dc:	sub	r1, fp, #36	; 0x24
   248e0:	sub	r3, fp, #36	; 0x24
   248e4:	mov	r0, r3
   248e8:	bl	23504 <__assert_fail@plt+0x123ac>
   248ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   248f0:	ldr	r3, [r3]
   248f4:	cmp	r3, #0
   248f8:	bgt	24910 <__assert_fail@plt+0x137b8>
   248fc:	mov	r1, #1
   24900:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24904:	bl	20e04 <__assert_fail@plt+0xfcac>
   24908:	mov	r3, r0
   2490c:	b	24918 <__assert_fail@plt+0x137c0>
   24910:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24914:	ldr	r3, [r3, #8]
   24918:	str	r3, [fp, #-24]	; 0xffffffe8
   2491c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24920:	ldr	r2, [r3]
   24924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24928:	ldr	r3, [r3]
   2492c:	mov	r1, r3
   24930:	mov	r0, r2
   24934:	bl	243f4 <__assert_fail@plt+0x1329c>
   24938:	mov	r2, r0
   2493c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24940:	str	r2, [r3]
   24944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24948:	ldr	r3, [r3]
   2494c:	cmp	r3, #0
   24950:	movne	r3, #1
   24954:	moveq	r3, #0
   24958:	uxtb	r3, r3
   2495c:	mov	r2, r3
   24960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24964:	str	r2, [r3, #4]
   24968:	b	24984 <__assert_fail@plt+0x1382c>
   2496c:	sub	r2, fp, #48	; 0x30
   24970:	sub	r1, fp, #36	; 0x24
   24974:	sub	r3, fp, #36	; 0x24
   24978:	mov	r0, r3
   2497c:	bl	227f8 <__assert_fail@plt+0x116a0>
   24980:	b	24868 <__assert_fail@plt+0x13710>
   24984:	sub	r3, fp, #36	; 0x24
   24988:	mov	r0, r3
   2498c:	bl	20db0 <__assert_fail@plt+0xfc58>
   24990:	sub	r3, fp, #48	; 0x30
   24994:	mov	r0, r3
   24998:	bl	20db0 <__assert_fail@plt+0xfc58>
   2499c:	ldr	r2, [fp, #-16]
   249a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   249a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   249a8:	bl	22b24 <__assert_fail@plt+0x119cc>
   249ac:	sub	sp, fp, #4
   249b0:	ldr	fp, [sp]
   249b4:	add	sp, sp, #4
   249b8:	pop	{pc}		; (ldr pc, [sp], #4)
   249bc:	str	fp, [sp, #-8]!
   249c0:	str	lr, [sp, #4]
   249c4:	add	fp, sp, #4
   249c8:	sub	sp, sp, #136	; 0x88
   249cc:	str	r0, [fp, #-128]	; 0xffffff80
   249d0:	str	r1, [fp, #-132]	; 0xffffff7c
   249d4:	str	r2, [fp, #-136]	; 0xffffff78
   249d8:	str	r3, [fp, #-140]	; 0xffffff74
   249dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   249e0:	ldr	r3, [r3, #4]
   249e4:	cmp	r3, #0
   249e8:	bne	24a38 <__assert_fail@plt+0x138e0>
   249ec:	ldr	r0, [fp, #4]
   249f0:	bl	21f1c <__assert_fail@plt+0x10dc4>
   249f4:	str	r0, [fp, #-24]	; 0xffffffe8
   249f8:	ldr	r1, [fp, #4]
   249fc:	ldr	r0, [fp, #-128]	; 0xffffff80
   24a00:	bl	2222c <__assert_fail@plt+0x110d4>
   24a04:	ldr	r3, [fp, #-132]	; 0xffffff7c
   24a08:	cmp	r3, #0
   24a0c:	beq	24a1c <__assert_fail@plt+0x138c4>
   24a10:	ldr	r3, [fp, #-132]	; 0xffffff7c
   24a14:	mov	r2, #0
   24a18:	str	r2, [r3, #4]
   24a1c:	ldr	r3, [fp, #-136]	; 0xffffff78
   24a20:	cmp	r3, #0
   24a24:	beq	25080 <__assert_fail@plt+0x13f28>
   24a28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24a2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   24a30:	bl	20ed0 <__assert_fail@plt+0xfd78>
   24a34:	b	25080 <__assert_fail@plt+0x13f28>
   24a38:	ldr	r3, [fp, #4]
   24a3c:	ldr	r3, [r3, #4]
   24a40:	cmp	r3, #0
   24a44:	bne	24a94 <__assert_fail@plt+0x1393c>
   24a48:	ldr	r0, [fp, #-140]	; 0xffffff74
   24a4c:	bl	21f1c <__assert_fail@plt+0x10dc4>
   24a50:	str	r0, [fp, #-28]	; 0xffffffe4
   24a54:	ldr	r1, [fp, #-140]	; 0xffffff74
   24a58:	ldr	r0, [fp, #-128]	; 0xffffff80
   24a5c:	bl	2222c <__assert_fail@plt+0x110d4>
   24a60:	ldr	r3, [fp, #-132]	; 0xffffff7c
   24a64:	cmp	r3, #0
   24a68:	beq	24a78 <__assert_fail@plt+0x13920>
   24a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24a70:	ldr	r0, [fp, #-132]	; 0xffffff7c
   24a74:	bl	20ed0 <__assert_fail@plt+0xfd78>
   24a78:	ldr	r3, [fp, #-136]	; 0xffffff78
   24a7c:	cmp	r3, #0
   24a80:	beq	25088 <__assert_fail@plt+0x13f30>
   24a84:	ldr	r3, [fp, #-136]	; 0xffffff78
   24a88:	mov	r2, #0
   24a8c:	str	r2, [r3, #4]
   24a90:	b	25088 <__assert_fail@plt+0x13f30>
   24a94:	sub	r3, fp, #60	; 0x3c
   24a98:	mov	r0, r3
   24a9c:	bl	20cdc <__assert_fail@plt+0xfb84>
   24aa0:	sub	r3, fp, #72	; 0x48
   24aa4:	mov	r0, r3
   24aa8:	bl	20cdc <__assert_fail@plt+0xfb84>
   24aac:	sub	r3, fp, #84	; 0x54
   24ab0:	mov	r0, r3
   24ab4:	bl	20cdc <__assert_fail@plt+0xfb84>
   24ab8:	sub	r3, fp, #96	; 0x60
   24abc:	mov	r0, r3
   24ac0:	bl	20cdc <__assert_fail@plt+0xfb84>
   24ac4:	sub	r3, fp, #108	; 0x6c
   24ac8:	mov	r0, r3
   24acc:	bl	20cdc <__assert_fail@plt+0xfb84>
   24ad0:	sub	r3, fp, #120	; 0x78
   24ad4:	mov	r0, r3
   24ad8:	bl	20cdc <__assert_fail@plt+0xfb84>
   24adc:	sub	r3, fp, #60	; 0x3c
   24ae0:	ldr	r1, [fp, #-140]	; 0xffffff74
   24ae4:	mov	r0, r3
   24ae8:	bl	2222c <__assert_fail@plt+0x110d4>
   24aec:	sub	r3, fp, #60	; 0x3c
   24af0:	mov	r0, r3
   24af4:	bl	246c0 <__assert_fail@plt+0x13568>
   24af8:	str	r0, [fp, #-8]
   24afc:	sub	r3, fp, #72	; 0x48
   24b00:	ldr	r1, [fp, #4]
   24b04:	mov	r0, r3
   24b08:	bl	2222c <__assert_fail@plt+0x110d4>
   24b0c:	sub	r3, fp, #72	; 0x48
   24b10:	mov	r0, r3
   24b14:	bl	246c0 <__assert_fail@plt+0x13568>
   24b18:	str	r0, [fp, #-12]
   24b1c:	ldr	r2, [fp, #-12]
   24b20:	ldr	r3, [fp, #-8]
   24b24:	cmp	r2, r3
   24b28:	movcc	r3, r2
   24b2c:	movcs	r3, r3
   24b30:	str	r3, [fp, #-32]	; 0xffffffe0
   24b34:	ldr	r2, [fp, #-8]
   24b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b3c:	sub	r3, r2, r3
   24b40:	str	r3, [fp, #-8]
   24b44:	ldr	r2, [fp, #-12]
   24b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b4c:	sub	r3, r2, r3
   24b50:	str	r3, [fp, #-12]
   24b54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   24b58:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24b5c:	cmp	r2, r3
   24b60:	bge	24bc0 <__assert_fail@plt+0x13a68>
   24b64:	sub	r2, fp, #72	; 0x48
   24b68:	sub	r3, fp, #60	; 0x3c
   24b6c:	mov	r1, r2
   24b70:	mov	r0, r3
   24b74:	bl	222c8 <__assert_fail@plt+0x11170>
   24b78:	ldr	r3, [fp, #-140]	; 0xffffff74
   24b7c:	str	r3, [fp, #-36]	; 0xffffffdc
   24b80:	ldr	r3, [fp, #4]
   24b84:	str	r3, [fp, #-140]	; 0xffffff74
   24b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b8c:	str	r3, [fp, #4]
   24b90:	ldr	r3, [fp, #-132]	; 0xffffff7c
   24b94:	str	r3, [fp, #-40]	; 0xffffffd8
   24b98:	ldr	r3, [fp, #-136]	; 0xffffff78
   24b9c:	str	r3, [fp, #-132]	; 0xffffff7c
   24ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ba4:	str	r3, [fp, #-136]	; 0xffffff78
   24ba8:	ldr	r3, [fp, #-8]
   24bac:	str	r3, [fp, #-44]	; 0xffffffd4
   24bb0:	ldr	r3, [fp, #-12]
   24bb4:	str	r3, [fp, #-8]
   24bb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24bbc:	str	r3, [fp, #-12]
   24bc0:	sub	r3, fp, #72	; 0x48
   24bc4:	sub	r2, fp, #60	; 0x3c
   24bc8:	sub	r1, fp, #60	; 0x3c
   24bcc:	sub	r0, fp, #120	; 0x78
   24bd0:	bl	23338 <__assert_fail@plt+0x121e0>
   24bd4:	sub	r1, fp, #120	; 0x78
   24bd8:	sub	r3, fp, #120	; 0x78
   24bdc:	ldr	r2, [fp, #-8]
   24be0:	mov	r0, r3
   24be4:	bl	22b24 <__assert_fail@plt+0x119cc>
   24be8:	sub	r3, fp, #96	; 0x60
   24bec:	ldr	r1, [fp, #-12]
   24bf0:	mov	r0, r3
   24bf4:	bl	2726c <__assert_fail@plt+0x16114>
   24bf8:	ldr	r2, [fp, #-8]
   24bfc:	ldr	r3, [fp, #-12]
   24c00:	add	r3, r2, r3
   24c04:	str	r3, [fp, #-16]
   24c08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c0c:	cmp	r3, #0
   24c10:	ble	24d80 <__assert_fail@plt+0x13c28>
   24c14:	sub	r3, fp, #60	; 0x3c
   24c18:	mov	r0, r3
   24c1c:	bl	246c0 <__assert_fail@plt+0x13568>
   24c20:	str	r0, [fp, #-20]	; 0xffffffec
   24c24:	ldr	r2, [fp, #-8]
   24c28:	ldr	r3, [fp, #-20]	; 0xffffffec
   24c2c:	add	r2, r2, r3
   24c30:	sub	r3, fp, #108	; 0x6c
   24c34:	mov	r1, r2
   24c38:	mov	r0, r3
   24c3c:	bl	2726c <__assert_fail@plt+0x16114>
   24c40:	ldr	r2, [fp, #-16]
   24c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   24c48:	add	r3, r2, r3
   24c4c:	str	r3, [fp, #-16]
   24c50:	sub	r2, fp, #72	; 0x48
   24c54:	sub	r3, fp, #60	; 0x3c
   24c58:	mov	r1, r2
   24c5c:	mov	r0, r3
   24c60:	bl	22054 <__assert_fail@plt+0x10efc>
   24c64:	str	r0, [fp, #-48]	; 0xffffffd0
   24c68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24c6c:	cmp	r3, #0
   24c70:	beq	24d94 <__assert_fail@plt+0x13c3c>
   24c74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24c78:	cmp	r3, #0
   24c7c:	bge	24cf8 <__assert_fail@plt+0x13ba0>
   24c80:	sub	r2, fp, #60	; 0x3c
   24c84:	sub	r1, fp, #72	; 0x48
   24c88:	sub	r3, fp, #72	; 0x48
   24c8c:	mov	r0, r3
   24c90:	bl	227f8 <__assert_fail@plt+0x116a0>
   24c94:	sub	r2, fp, #120	; 0x78
   24c98:	sub	r1, fp, #108	; 0x6c
   24c9c:	sub	r3, fp, #108	; 0x6c
   24ca0:	mov	r0, r3
   24ca4:	bl	22758 <__assert_fail@plt+0x11600>
   24ca8:	sub	r2, fp, #96	; 0x60
   24cac:	sub	r1, fp, #84	; 0x54
   24cb0:	sub	r3, fp, #84	; 0x54
   24cb4:	mov	r0, r3
   24cb8:	bl	22758 <__assert_fail@plt+0x11600>
   24cbc:	sub	r3, fp, #72	; 0x48
   24cc0:	mov	r0, r3
   24cc4:	bl	246c0 <__assert_fail@plt+0x13568>
   24cc8:	str	r0, [fp, #-20]	; 0xffffffec
   24ccc:	sub	r1, fp, #120	; 0x78
   24cd0:	sub	r3, fp, #120	; 0x78
   24cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   24cd8:	mov	r0, r3
   24cdc:	bl	22b24 <__assert_fail@plt+0x119cc>
   24ce0:	sub	r1, fp, #96	; 0x60
   24ce4:	sub	r3, fp, #96	; 0x60
   24ce8:	ldr	r2, [fp, #-20]	; 0xffffffec
   24cec:	mov	r0, r3
   24cf0:	bl	22b24 <__assert_fail@plt+0x119cc>
   24cf4:	b	24d6c <__assert_fail@plt+0x13c14>
   24cf8:	sub	r2, fp, #72	; 0x48
   24cfc:	sub	r1, fp, #60	; 0x3c
   24d00:	sub	r3, fp, #60	; 0x3c
   24d04:	mov	r0, r3
   24d08:	bl	227f8 <__assert_fail@plt+0x116a0>
   24d0c:	sub	r2, fp, #120	; 0x78
   24d10:	sub	r1, fp, #108	; 0x6c
   24d14:	sub	r3, fp, #120	; 0x78
   24d18:	mov	r0, r3
   24d1c:	bl	22758 <__assert_fail@plt+0x11600>
   24d20:	sub	r2, fp, #96	; 0x60
   24d24:	sub	r1, fp, #84	; 0x54
   24d28:	sub	r3, fp, #96	; 0x60
   24d2c:	mov	r0, r3
   24d30:	bl	22758 <__assert_fail@plt+0x11600>
   24d34:	sub	r3, fp, #60	; 0x3c
   24d38:	mov	r0, r3
   24d3c:	bl	246c0 <__assert_fail@plt+0x13568>
   24d40:	str	r0, [fp, #-20]	; 0xffffffec
   24d44:	sub	r1, fp, #108	; 0x6c
   24d48:	sub	r3, fp, #108	; 0x6c
   24d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24d50:	mov	r0, r3
   24d54:	bl	22b24 <__assert_fail@plt+0x119cc>
   24d58:	sub	r1, fp, #84	; 0x54
   24d5c:	sub	r3, fp, #84	; 0x54
   24d60:	ldr	r2, [fp, #-20]	; 0xffffffec
   24d64:	mov	r0, r3
   24d68:	bl	22b24 <__assert_fail@plt+0x119cc>
   24d6c:	ldr	r2, [fp, #-16]
   24d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   24d74:	add	r3, r2, r3
   24d78:	str	r3, [fp, #-16]
   24d7c:	b	24c50 <__assert_fail@plt+0x13af8>
   24d80:	sub	r3, fp, #108	; 0x6c
   24d84:	ldr	r1, [fp, #-8]
   24d88:	mov	r0, r3
   24d8c:	bl	2726c <__assert_fail@plt+0x16114>
   24d90:	b	24d98 <__assert_fail@plt+0x13c40>
   24d94:	nop	{0}
   24d98:	sub	r1, fp, #72	; 0x48
   24d9c:	sub	r3, fp, #72	; 0x48
   24da0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24da4:	mov	r0, r3
   24da8:	bl	22b24 <__assert_fail@plt+0x119cc>
   24dac:	sub	r2, fp, #84	; 0x54
   24db0:	sub	r3, fp, #84	; 0x54
   24db4:	mov	r1, r2
   24db8:	mov	r0, r3
   24dbc:	bl	2227c <__assert_fail@plt+0x11124>
   24dc0:	sub	r2, fp, #72	; 0x48
   24dc4:	sub	r3, fp, #96	; 0x60
   24dc8:	ldr	r1, [fp, #4]
   24dcc:	mov	r0, r3
   24dd0:	bl	23ccc <__assert_fail@plt+0x12b74>
   24dd4:	sub	r2, fp, #96	; 0x60
   24dd8:	sub	r3, fp, #96	; 0x60
   24ddc:	mov	r1, r2
   24de0:	mov	r0, r3
   24de4:	bl	2222c <__assert_fail@plt+0x110d4>
   24de8:	sub	r2, fp, #72	; 0x48
   24dec:	sub	r3, fp, #120	; 0x78
   24df0:	ldr	r1, [fp, #-140]	; 0xffffff74
   24df4:	mov	r0, r3
   24df8:	bl	23ccc <__assert_fail@plt+0x12b74>
   24dfc:	sub	r2, fp, #120	; 0x78
   24e00:	sub	r3, fp, #120	; 0x78
   24e04:	mov	r1, r2
   24e08:	mov	r0, r3
   24e0c:	bl	2222c <__assert_fail@plt+0x110d4>
   24e10:	b	24f34 <__assert_fail@plt+0x13ddc>
   24e14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   24e18:	cmp	r3, #0
   24e1c:	movne	r3, #1
   24e20:	moveq	r3, #0
   24e24:	uxtb	r3, r3
   24e28:	mov	r2, r3
   24e2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   24e30:	ldr	r3, [r3]
   24e34:	and	r3, r3, r2
   24e38:	cmp	r3, #0
   24e3c:	bne	24e6c <__assert_fail@plt+0x13d14>
   24e40:	ldr	r3, [fp, #-104]	; 0xffffff98
   24e44:	cmp	r3, #0
   24e48:	movne	r3, #1
   24e4c:	moveq	r3, #0
   24e50:	uxtb	r3, r3
   24e54:	mov	r2, r3
   24e58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   24e5c:	ldr	r3, [r3]
   24e60:	and	r3, r3, r2
   24e64:	cmp	r3, #0
   24e68:	beq	24e94 <__assert_fail@plt+0x13d3c>
   24e6c:	sub	r2, fp, #96	; 0x60
   24e70:	sub	r1, fp, #84	; 0x54
   24e74:	sub	r3, fp, #84	; 0x54
   24e78:	mov	r0, r3
   24e7c:	bl	227f8 <__assert_fail@plt+0x116a0>
   24e80:	sub	r2, fp, #120	; 0x78
   24e84:	sub	r1, fp, #108	; 0x6c
   24e88:	sub	r3, fp, #108	; 0x6c
   24e8c:	mov	r0, r3
   24e90:	bl	22758 <__assert_fail@plt+0x11600>
   24e94:	ldr	r3, [fp, #-104]	; 0xffffff98
   24e98:	cmp	r3, #0
   24e9c:	movne	r3, #1
   24ea0:	moveq	r3, #0
   24ea4:	uxtb	r3, r3
   24ea8:	mov	r2, r3
   24eac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   24eb0:	ldr	r3, [r3]
   24eb4:	and	r3, r3, r2
   24eb8:	cmp	r3, #0
   24ebc:	bne	24eec <__assert_fail@plt+0x13d94>
   24ec0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   24ec4:	cmp	r3, #0
   24ec8:	movne	r3, #1
   24ecc:	moveq	r3, #0
   24ed0:	uxtb	r3, r3
   24ed4:	mov	r2, r3
   24ed8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   24edc:	ldr	r3, [r3]
   24ee0:	and	r3, r3, r2
   24ee4:	cmp	r3, #0
   24ee8:	beq	24f0c <__assert_fail@plt+0x13db4>
   24eec:	movw	r3, #24428	; 0x5f6c
   24ef0:	movt	r3, #3
   24ef4:	movw	r2, #2950	; 0xb86
   24ef8:	movw	r1, #22376	; 0x5768
   24efc:	movt	r1, #3
   24f00:	movw	r0, #23120	; 0x5a50
   24f04:	movt	r0, #3
   24f08:	bl	11158 <__assert_fail@plt>
   24f0c:	sub	r1, fp, #84	; 0x54
   24f10:	sub	r3, fp, #84	; 0x54
   24f14:	mov	r2, #1
   24f18:	mov	r0, r3
   24f1c:	bl	23bbc <__assert_fail@plt+0x12a64>
   24f20:	sub	r1, fp, #108	; 0x6c
   24f24:	sub	r3, fp, #108	; 0x6c
   24f28:	mov	r2, #1
   24f2c:	mov	r0, r3
   24f30:	bl	23bbc <__assert_fail@plt+0x12a64>
   24f34:	ldr	r3, [fp, #-16]
   24f38:	sub	r2, r3, #1
   24f3c:	str	r2, [fp, #-16]
   24f40:	cmp	r3, #0
   24f44:	bne	24e14 <__assert_fail@plt+0x13cbc>
   24f48:	sub	r2, fp, #96	; 0x60
   24f4c:	sub	r1, fp, #84	; 0x54
   24f50:	sub	r3, fp, #96	; 0x60
   24f54:	mov	r0, r3
   24f58:	bl	22758 <__assert_fail@plt+0x11600>
   24f5c:	sub	r2, fp, #96	; 0x60
   24f60:	sub	r3, fp, #84	; 0x54
   24f64:	mov	r1, r2
   24f68:	mov	r0, r3
   24f6c:	bl	221c8 <__assert_fail@plt+0x11070>
   24f70:	mov	r3, r0
   24f74:	cmp	r3, #0
   24f78:	ble	24fa4 <__assert_fail@plt+0x13e4c>
   24f7c:	sub	r2, fp, #96	; 0x60
   24f80:	sub	r3, fp, #84	; 0x54
   24f84:	mov	r1, r2
   24f88:	mov	r0, r3
   24f8c:	bl	222c8 <__assert_fail@plt+0x11170>
   24f90:	sub	r2, fp, #120	; 0x78
   24f94:	sub	r1, fp, #108	; 0x6c
   24f98:	sub	r3, fp, #108	; 0x6c
   24f9c:	mov	r0, r3
   24fa0:	bl	227f8 <__assert_fail@plt+0x116a0>
   24fa4:	ldr	r3, [fp, #-140]	; 0xffffff74
   24fa8:	ldr	r3, [r3, #4]
   24fac:	cmp	r3, #0
   24fb0:	bge	24fc8 <__assert_fail@plt+0x13e70>
   24fb4:	sub	r2, fp, #84	; 0x54
   24fb8:	sub	r3, fp, #84	; 0x54
   24fbc:	mov	r1, r2
   24fc0:	mov	r0, r3
   24fc4:	bl	2227c <__assert_fail@plt+0x11124>
   24fc8:	ldr	r3, [fp, #4]
   24fcc:	ldr	r3, [r3, #4]
   24fd0:	cmp	r3, #0
   24fd4:	bge	24fec <__assert_fail@plt+0x13e94>
   24fd8:	sub	r2, fp, #108	; 0x6c
   24fdc:	sub	r3, fp, #108	; 0x6c
   24fe0:	mov	r1, r2
   24fe4:	mov	r0, r3
   24fe8:	bl	2227c <__assert_fail@plt+0x11124>
   24fec:	sub	r3, fp, #72	; 0x48
   24ff0:	mov	r1, r3
   24ff4:	ldr	r0, [fp, #-128]	; 0xffffff80
   24ff8:	bl	222c8 <__assert_fail@plt+0x11170>
   24ffc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   25000:	cmp	r3, #0
   25004:	beq	25018 <__assert_fail@plt+0x13ec0>
   25008:	sub	r3, fp, #84	; 0x54
   2500c:	mov	r1, r3
   25010:	ldr	r0, [fp, #-132]	; 0xffffff7c
   25014:	bl	222c8 <__assert_fail@plt+0x11170>
   25018:	ldr	r3, [fp, #-136]	; 0xffffff78
   2501c:	cmp	r3, #0
   25020:	beq	25034 <__assert_fail@plt+0x13edc>
   25024:	sub	r3, fp, #108	; 0x6c
   25028:	mov	r1, r3
   2502c:	ldr	r0, [fp, #-136]	; 0xffffff78
   25030:	bl	222c8 <__assert_fail@plt+0x11170>
   25034:	sub	r3, fp, #60	; 0x3c
   25038:	mov	r0, r3
   2503c:	bl	20db0 <__assert_fail@plt+0xfc58>
   25040:	sub	r3, fp, #72	; 0x48
   25044:	mov	r0, r3
   25048:	bl	20db0 <__assert_fail@plt+0xfc58>
   2504c:	sub	r3, fp, #84	; 0x54
   25050:	mov	r0, r3
   25054:	bl	20db0 <__assert_fail@plt+0xfc58>
   25058:	sub	r3, fp, #96	; 0x60
   2505c:	mov	r0, r3
   25060:	bl	20db0 <__assert_fail@plt+0xfc58>
   25064:	sub	r3, fp, #108	; 0x6c
   25068:	mov	r0, r3
   2506c:	bl	20db0 <__assert_fail@plt+0xfc58>
   25070:	sub	r3, fp, #120	; 0x78
   25074:	mov	r0, r3
   25078:	bl	20db0 <__assert_fail@plt+0xfc58>
   2507c:	b	2508c <__assert_fail@plt+0x13f34>
   25080:	nop	{0}
   25084:	b	2508c <__assert_fail@plt+0x13f34>
   25088:	nop	{0}
   2508c:	sub	sp, fp, #4
   25090:	ldr	fp, [sp]
   25094:	add	sp, sp, #4
   25098:	pop	{pc}		; (ldr pc, [sp], #4)
   2509c:	str	fp, [sp, #-8]!
   250a0:	str	lr, [sp, #4]
   250a4:	add	fp, sp, #4
   250a8:	sub	sp, sp, #32
   250ac:	str	r0, [fp, #-24]	; 0xffffffe8
   250b0:	str	r1, [fp, #-28]	; 0xffffffe4
   250b4:	str	r2, [fp, #-32]	; 0xffffffe0
   250b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   250bc:	ldr	r3, [r3, #4]
   250c0:	cmp	r3, #0
   250c4:	beq	250d8 <__assert_fail@plt+0x13f80>
   250c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   250cc:	ldr	r3, [r3, #4]
   250d0:	cmp	r3, #0
   250d4:	bne	250e8 <__assert_fail@plt+0x13f90>
   250d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250dc:	mov	r2, #0
   250e0:	str	r2, [r3, #4]
   250e4:	b	25148 <__assert_fail@plt+0x13ff0>
   250e8:	sub	r3, fp, #16
   250ec:	mov	r0, r3
   250f0:	bl	20cdc <__assert_fail@plt+0xfb84>
   250f4:	sub	r3, fp, #16
   250f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   250fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25100:	mov	r0, r3
   25104:	bl	24744 <__assert_fail@plt+0x135ec>
   25108:	sub	r2, fp, #16
   2510c:	sub	r3, fp, #16
   25110:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25114:	mov	r0, r3
   25118:	bl	23ccc <__assert_fail@plt+0x12b74>
   2511c:	sub	r3, fp, #16
   25120:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25124:	mov	r1, r3
   25128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2512c:	bl	22970 <__assert_fail@plt+0x11818>
   25130:	sub	r3, fp, #16
   25134:	mov	r0, r3
   25138:	bl	20db0 <__assert_fail@plt+0xfc58>
   2513c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25144:	bl	2222c <__assert_fail@plt+0x110d4>
   25148:	sub	sp, fp, #4
   2514c:	ldr	fp, [sp]
   25150:	add	sp, sp, #4
   25154:	pop	{pc}		; (ldr pc, [sp], #4)
   25158:	str	fp, [sp, #-8]!
   2515c:	str	lr, [sp, #4]
   25160:	add	fp, sp, #4
   25164:	sub	sp, sp, #16
   25168:	str	r0, [fp, #-8]
   2516c:	str	r1, [fp, #-12]
   25170:	str	r2, [fp, #-16]
   25174:	ldr	r3, [fp, #-16]
   25178:	cmp	r3, #0
   2517c:	beq	25190 <__assert_fail@plt+0x14038>
   25180:	ldr	r3, [fp, #-12]
   25184:	ldr	r3, [r3, #4]
   25188:	cmp	r3, #0
   2518c:	bne	251a0 <__assert_fail@plt+0x14048>
   25190:	ldr	r3, [fp, #-8]
   25194:	mov	r2, #0
   25198:	str	r2, [r3, #4]
   2519c:	b	251dc <__assert_fail@plt+0x14084>
   251a0:	ldr	r2, [fp, #-16]
   251a4:	ldr	r1, [fp, #-12]
   251a8:	mov	r0, #0
   251ac:	bl	24624 <__assert_fail@plt+0x134cc>
   251b0:	mov	r2, r0
   251b4:	ldr	r3, [fp, #-16]
   251b8:	udiv	r3, r3, r2
   251bc:	str	r3, [fp, #-16]
   251c0:	ldr	r2, [fp, #-16]
   251c4:	ldr	r1, [fp, #-12]
   251c8:	ldr	r0, [fp, #-8]
   251cc:	bl	22910 <__assert_fail@plt+0x117b8>
   251d0:	ldr	r1, [fp, #-8]
   251d4:	ldr	r0, [fp, #-8]
   251d8:	bl	2222c <__assert_fail@plt+0x110d4>
   251dc:	sub	sp, fp, #4
   251e0:	ldr	fp, [sp]
   251e4:	add	sp, sp, #4
   251e8:	pop	{pc}		; (ldr pc, [sp], #4)
   251ec:	str	fp, [sp, #-8]!
   251f0:	str	lr, [sp, #4]
   251f4:	add	fp, sp, #4
   251f8:	sub	sp, sp, #56	; 0x38
   251fc:	str	r0, [fp, #-40]	; 0xffffffd8
   25200:	str	r1, [fp, #-44]	; 0xffffffd4
   25204:	str	r2, [fp, #-48]	; 0xffffffd0
   25208:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2520c:	ldr	r3, [r3, #4]
   25210:	cmp	r3, #0
   25214:	beq	25230 <__assert_fail@plt+0x140d8>
   25218:	mov	r1, #1
   2521c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25220:	bl	2211c <__assert_fail@plt+0x10fc4>
   25224:	mov	r3, r0
   25228:	cmp	r3, #0
   2522c:	bgt	25238 <__assert_fail@plt+0x140e0>
   25230:	mov	r3, #0
   25234:	b	25314 <__assert_fail@plt+0x141bc>
   25238:	sub	r3, fp, #20
   2523c:	mov	r0, r3
   25240:	bl	20cdc <__assert_fail@plt+0xfb84>
   25244:	sub	r3, fp, #32
   25248:	mov	r0, r3
   2524c:	bl	20cdc <__assert_fail@plt+0xfb84>
   25250:	sub	r1, fp, #32
   25254:	sub	r0, fp, #20
   25258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2525c:	str	r3, [sp]
   25260:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25264:	mov	r2, #0
   25268:	bl	249bc <__assert_fail@plt+0x13864>
   2526c:	sub	r3, fp, #20
   25270:	mov	r1, #1
   25274:	mov	r0, r3
   25278:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   2527c:	mov	r3, r0
   25280:	cmp	r3, #0
   25284:	moveq	r3, #1
   25288:	movne	r3, #0
   2528c:	uxtb	r3, r3
   25290:	str	r3, [fp, #-8]
   25294:	ldr	r3, [fp, #-8]
   25298:	cmp	r3, #0
   2529c:	beq	252f8 <__assert_fail@plt+0x141a0>
   252a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   252a4:	cmp	r3, #0
   252a8:	bge	252e8 <__assert_fail@plt+0x14190>
   252ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   252b0:	ldr	r3, [r3, #4]
   252b4:	cmp	r3, #0
   252b8:	blt	252d4 <__assert_fail@plt+0x1417c>
   252bc:	sub	r1, fp, #32
   252c0:	sub	r3, fp, #32
   252c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   252c8:	mov	r0, r3
   252cc:	bl	22758 <__assert_fail@plt+0x11600>
   252d0:	b	252e8 <__assert_fail@plt+0x14190>
   252d4:	sub	r1, fp, #32
   252d8:	sub	r3, fp, #32
   252dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   252e0:	mov	r0, r3
   252e4:	bl	227f8 <__assert_fail@plt+0x116a0>
   252e8:	sub	r3, fp, #32
   252ec:	mov	r1, r3
   252f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   252f4:	bl	222c8 <__assert_fail@plt+0x11170>
   252f8:	sub	r3, fp, #20
   252fc:	mov	r0, r3
   25300:	bl	20db0 <__assert_fail@plt+0xfc58>
   25304:	sub	r3, fp, #32
   25308:	mov	r0, r3
   2530c:	bl	20db0 <__assert_fail@plt+0xfc58>
   25310:	ldr	r3, [fp, #-8]
   25314:	mov	r0, r3
   25318:	sub	sp, fp, #4
   2531c:	ldr	fp, [sp]
   25320:	add	sp, sp, #4
   25324:	pop	{pc}		; (ldr pc, [sp], #4)
   25328:	str	fp, [sp, #-8]!
   2532c:	str	lr, [sp, #4]
   25330:	add	fp, sp, #4
   25334:	sub	sp, sp, #32
   25338:	str	r0, [fp, #-24]	; 0xffffffe8
   2533c:	str	r1, [fp, #-28]	; 0xffffffe4
   25340:	str	r2, [fp, #-32]	; 0xffffffe0
   25344:	sub	r3, fp, #20
   25348:	mov	r1, #1
   2534c:	mov	r0, r3
   25350:	bl	210dc <__assert_fail@plt+0xff84>
   25354:	mov	r3, #-2147483648	; 0x80000000
   25358:	str	r3, [fp, #-8]
   2535c:	sub	r2, fp, #20
   25360:	sub	r1, fp, #20
   25364:	sub	r3, fp, #20
   25368:	mov	r0, r3
   2536c:	bl	22970 <__assert_fail@plt+0x11818>
   25370:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25374:	ldr	r3, [fp, #-8]
   25378:	and	r3, r3, r2
   2537c:	cmp	r3, #0
   25380:	beq	25398 <__assert_fail@plt+0x14240>
   25384:	sub	r1, fp, #20
   25388:	sub	r3, fp, #20
   2538c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25390:	mov	r0, r3
   25394:	bl	22970 <__assert_fail@plt+0x11818>
   25398:	ldr	r3, [fp, #-8]
   2539c:	lsr	r3, r3, #1
   253a0:	str	r3, [fp, #-8]
   253a4:	ldr	r3, [fp, #-8]
   253a8:	cmp	r3, #0
   253ac:	bne	2535c <__assert_fail@plt+0x14204>
   253b0:	sub	r3, fp, #20
   253b4:	mov	r1, r3
   253b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   253bc:	bl	222c8 <__assert_fail@plt+0x11170>
   253c0:	sub	r3, fp, #20
   253c4:	mov	r0, r3
   253c8:	bl	20db0 <__assert_fail@plt+0xfc58>
   253cc:	nop	{0}
   253d0:	sub	sp, fp, #4
   253d4:	ldr	fp, [sp]
   253d8:	add	sp, sp, #4
   253dc:	pop	{pc}		; (ldr pc, [sp], #4)
   253e0:	str	fp, [sp, #-8]!
   253e4:	str	lr, [sp, #4]
   253e8:	add	fp, sp, #4
   253ec:	sub	sp, sp, #32
   253f0:	str	r0, [fp, #-24]	; 0xffffffe8
   253f4:	str	r1, [fp, #-28]	; 0xffffffe4
   253f8:	str	r2, [fp, #-32]	; 0xffffffe0
   253fc:	sub	r3, fp, #16
   25400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25404:	mov	r0, r3
   25408:	bl	210dc <__assert_fail@plt+0xff84>
   2540c:	sub	r3, fp, #16
   25410:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25414:	mov	r1, r3
   25418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2541c:	bl	25328 <__assert_fail@plt+0x141d0>
   25420:	sub	r3, fp, #16
   25424:	mov	r0, r3
   25428:	bl	20db0 <__assert_fail@plt+0xfc58>
   2542c:	nop	{0}
   25430:	sub	sp, fp, #4
   25434:	ldr	fp, [sp]
   25438:	add	sp, sp, #4
   2543c:	pop	{pc}		; (ldr pc, [sp], #4)
   25440:	str	fp, [sp, #-8]!
   25444:	str	lr, [sp, #4]
   25448:	add	fp, sp, #4
   2544c:	sub	sp, sp, #112	; 0x70
   25450:	str	r0, [fp, #-96]	; 0xffffffa0
   25454:	str	r1, [fp, #-100]	; 0xffffff9c
   25458:	str	r2, [fp, #-104]	; 0xffffff98
   2545c:	str	r3, [fp, #-108]	; 0xffffff94
   25460:	mov	r3, #0
   25464:	str	r3, [fp, #-16]
   25468:	ldr	r3, [fp, #-104]	; 0xffffff98
   2546c:	ldr	r3, [r3, #4]
   25470:	cmp	r3, #0
   25474:	rsblt	r3, r3, #0
   25478:	str	r3, [fp, #-8]
   2547c:	ldr	r3, [fp, #-108]	; 0xffffff94
   25480:	ldr	r3, [r3, #4]
   25484:	cmp	r3, #0
   25488:	rsblt	r3, r3, #0
   2548c:	str	r3, [fp, #-28]	; 0xffffffe4
   25490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25494:	cmp	r3, #0
   25498:	bne	254a8 <__assert_fail@plt+0x14350>
   2549c:	movw	r0, #23156	; 0x5a74
   254a0:	movt	r0, #3
   254a4:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   254a8:	ldr	r3, [fp, #-8]
   254ac:	cmp	r3, #0
   254b0:	bne	254c4 <__assert_fail@plt+0x1436c>
   254b4:	mov	r1, #1
   254b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   254bc:	bl	20f68 <__assert_fail@plt+0xfe10>
   254c0:	b	25828 <__assert_fail@plt+0x146d0>
   254c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   254c8:	ldr	r3, [r3, #8]
   254cc:	str	r3, [fp, #-12]
   254d0:	sub	r3, fp, #88	; 0x58
   254d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   254d8:	ldr	r1, [fp, #-12]
   254dc:	mov	r0, r3
   254e0:	bl	1e914 <__assert_fail@plt+0xd7bc>
   254e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   254e8:	str	r3, [fp, #-32]	; 0xffffffe0
   254ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   254f0:	cmp	r3, #0
   254f4:	beq	25558 <__assert_fail@plt+0x14400>
   254f8:	mov	r3, #0
   254fc:	str	r3, [fp, #-88]	; 0xffffffa8
   25500:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25504:	bl	1c968 <__assert_fail@plt+0xb810>
   25508:	str	r0, [fp, #-16]
   2550c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25510:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25514:	ldr	r1, [fp, #-12]
   25518:	ldr	r0, [fp, #-16]
   2551c:	bl	1dbb0 <__assert_fail@plt+0xca58>
   25520:	str	r0, [fp, #-36]	; 0xffffffdc
   25524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25528:	cmp	r3, #0
   2552c:	beq	25550 <__assert_fail@plt+0x143f8>
   25530:	movw	r3, #24440	; 0x5f78
   25534:	movt	r3, #3
   25538:	movw	r2, #3116	; 0xc2c
   2553c:	movw	r1, #22376	; 0x5768
   25540:	movt	r1, #3
   25544:	movw	r0, #22928	; 0x5990
   25548:	movt	r0, #3
   2554c:	bl	11158 <__assert_fail@plt>
   25550:	ldr	r3, [fp, #-16]
   25554:	str	r3, [fp, #-12]
   25558:	sub	r3, fp, #72	; 0x48
   2555c:	mov	r0, r3
   25560:	bl	20cdc <__assert_fail@plt+0xfb84>
   25564:	ldr	r3, [fp, #-104]	; 0xffffff98
   25568:	ldr	r3, [r3, #4]
   2556c:	cmp	r3, #0
   25570:	bge	255a4 <__assert_fail@plt+0x1444c>
   25574:	sub	r3, fp, #72	; 0x48
   25578:	ldr	r2, [fp, #-108]	; 0xffffff94
   2557c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   25580:	mov	r0, r3
   25584:	bl	251ec <__assert_fail@plt+0x14094>
   25588:	mov	r3, r0
   2558c:	cmp	r3, #0
   25590:	bne	256a4 <__assert_fail@plt+0x1454c>
   25594:	movw	r0, #23180	; 0x5a8c
   25598:	movt	r0, #3
   2559c:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   255a0:	b	256a4 <__assert_fail@plt+0x1454c>
   255a4:	sub	r3, fp, #72	; 0x48
   255a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   255ac:	mov	r0, r3
   255b0:	bl	2222c <__assert_fail@plt+0x110d4>
   255b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   255b8:	str	r3, [fp, #-20]	; 0xffffffec
   255bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   255c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255c4:	cmp	r2, r3
   255c8:	blt	255f8 <__assert_fail@plt+0x144a0>
   255cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   255d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   255d4:	sub	r3, fp, #88	; 0x58
   255d8:	str	r3, [sp, #4]
   255dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255e0:	str	r3, [sp]
   255e4:	ldr	r3, [fp, #-12]
   255e8:	mov	r0, #0
   255ec:	bl	1fb30 <__assert_fail@plt+0xe9d8>
   255f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255f4:	str	r3, [fp, #-20]	; 0xffffffec
   255f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   255fc:	ldr	r3, [r3, #4]
   25600:	cmp	r3, #0
   25604:	bge	2568c <__assert_fail@plt+0x14534>
   25608:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2560c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25610:	cmp	r2, r3
   25614:	ble	25630 <__assert_fail@plt+0x144d8>
   25618:	sub	r3, fp, #72	; 0x48
   2561c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25620:	mov	r0, r3
   25624:	bl	20e04 <__assert_fail@plt+0xfcac>
   25628:	mov	r3, r0
   2562c:	b	25634 <__assert_fail@plt+0x144dc>
   25630:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25634:	str	r3, [fp, #-40]	; 0xffffffd8
   25638:	ldr	r3, [fp, #-20]	; 0xffffffec
   2563c:	str	r3, [sp]
   25640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25644:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25648:	ldr	r1, [fp, #-12]
   2564c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25650:	bl	1d234 <__assert_fail@plt+0xc0dc>
   25654:	str	r0, [fp, #-44]	; 0xffffffd4
   25658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2565c:	cmp	r3, #0
   25660:	beq	25684 <__assert_fail@plt+0x1452c>
   25664:	movw	r3, #24440	; 0x5f78
   25668:	movt	r3, #3
   2566c:	movw	r2, #3145	; 0xc49
   25670:	movw	r1, #22376	; 0x5768
   25674:	movt	r1, #3
   25678:	movw	r0, #22928	; 0x5990
   2567c:	movt	r0, #3
   25680:	bl	11158 <__assert_fail@plt>
   25684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25688:	str	r3, [fp, #-20]	; 0xffffffec
   2568c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25690:	ldr	r1, [fp, #-20]	; 0xffffffec
   25694:	mov	r0, r3
   25698:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   2569c:	mov	r3, r0
   256a0:	str	r3, [fp, #-68]	; 0xffffffbc
   256a4:	sub	r3, fp, #60	; 0x3c
   256a8:	mov	r1, #1
   256ac:	mov	r0, r3
   256b0:	bl	210dc <__assert_fail@plt+0xff84>
   256b4:	b	2577c <__assert_fail@plt+0x14624>
   256b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   256bc:	ldr	r2, [r3, #8]
   256c0:	ldr	r3, [fp, #-8]
   256c4:	lsl	r3, r3, #2
   256c8:	add	r3, r2, r3
   256cc:	ldr	r3, [r3]
   256d0:	str	r3, [fp, #-48]	; 0xffffffd0
   256d4:	mov	r3, #-2147483648	; 0x80000000
   256d8:	str	r3, [fp, #-24]	; 0xffffffe8
   256dc:	sub	r2, fp, #60	; 0x3c
   256e0:	sub	r1, fp, #60	; 0x3c
   256e4:	sub	r3, fp, #60	; 0x3c
   256e8:	mov	r0, r3
   256ec:	bl	22970 <__assert_fail@plt+0x11818>
   256f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   256f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   256f8:	and	r3, r3, r2
   256fc:	cmp	r3, #0
   25700:	beq	25718 <__assert_fail@plt+0x145c0>
   25704:	sub	r2, fp, #72	; 0x48
   25708:	sub	r1, fp, #60	; 0x3c
   2570c:	sub	r3, fp, #60	; 0x3c
   25710:	mov	r0, r3
   25714:	bl	22970 <__assert_fail@plt+0x11818>
   25718:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2571c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25720:	cmp	r2, r3
   25724:	bge	25764 <__assert_fail@plt+0x1460c>
   25728:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2572c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25730:	sub	r3, fp, #88	; 0x58
   25734:	str	r3, [sp, #4]
   25738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2573c:	str	r3, [sp]
   25740:	ldr	r3, [fp, #-12]
   25744:	mov	r0, #0
   25748:	bl	1fb30 <__assert_fail@plt+0xe9d8>
   2574c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25754:	mov	r0, r3
   25758:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   2575c:	mov	r3, r0
   25760:	str	r3, [fp, #-56]	; 0xffffffc8
   25764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25768:	lsr	r3, r3, #1
   2576c:	str	r3, [fp, #-24]	; 0xffffffe8
   25770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25774:	cmp	r3, #0
   25778:	bne	256dc <__assert_fail@plt+0x14584>
   2577c:	ldr	r3, [fp, #-8]
   25780:	sub	r3, r3, #1
   25784:	str	r3, [fp, #-8]
   25788:	ldr	r3, [fp, #-8]
   2578c:	cmp	r3, #0
   25790:	bge	256b8 <__assert_fail@plt+0x14560>
   25794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25798:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2579c:	cmp	r2, r3
   257a0:	bgt	257e8 <__assert_fail@plt+0x14690>
   257a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257a8:	str	r3, [fp, #-88]	; 0xffffffa8
   257ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   257b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   257b4:	sub	r3, fp, #88	; 0x58
   257b8:	str	r3, [sp, #4]
   257bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   257c0:	str	r3, [sp]
   257c4:	ldr	r3, [fp, #-12]
   257c8:	mov	r0, #0
   257cc:	bl	1fb30 <__assert_fail@plt+0xe9d8>
   257d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   257d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   257d8:	mov	r0, r3
   257dc:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   257e0:	mov	r3, r0
   257e4:	str	r3, [fp, #-56]	; 0xffffffc8
   257e8:	ldr	r3, [fp, #-16]
   257ec:	cmp	r3, #0
   257f0:	beq	25800 <__assert_fail@plt+0x146a8>
   257f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   257f8:	ldr	r0, [fp, #-16]
   257fc:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   25800:	sub	r3, fp, #60	; 0x3c
   25804:	mov	r1, r3
   25808:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2580c:	bl	222c8 <__assert_fail@plt+0x11170>
   25810:	sub	r3, fp, #60	; 0x3c
   25814:	mov	r0, r3
   25818:	bl	20db0 <__assert_fail@plt+0xfc58>
   2581c:	sub	r3, fp, #72	; 0x48
   25820:	mov	r0, r3
   25824:	bl	20db0 <__assert_fail@plt+0xfc58>
   25828:	sub	sp, fp, #4
   2582c:	ldr	fp, [sp]
   25830:	add	sp, sp, #4
   25834:	pop	{pc}		; (ldr pc, [sp], #4)
   25838:	str	fp, [sp, #-8]!
   2583c:	str	lr, [sp, #4]
   25840:	add	fp, sp, #4
   25844:	sub	sp, sp, #32
   25848:	str	r0, [fp, #-24]	; 0xffffffe8
   2584c:	str	r1, [fp, #-28]	; 0xffffffe4
   25850:	str	r2, [fp, #-32]	; 0xffffffe0
   25854:	str	r3, [fp, #-36]	; 0xffffffdc
   25858:	sub	r3, fp, #16
   2585c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   25860:	mov	r0, r3
   25864:	bl	210dc <__assert_fail@plt+0xff84>
   25868:	sub	r2, fp, #16
   2586c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25878:	bl	25440 <__assert_fail@plt+0x142e8>
   2587c:	sub	r3, fp, #16
   25880:	mov	r0, r3
   25884:	bl	20db0 <__assert_fail@plt+0xfc58>
   25888:	nop	{0}
   2588c:	sub	sp, fp, #4
   25890:	ldr	fp, [sp]
   25894:	add	sp, sp, #4
   25898:	pop	{pc}		; (ldr pc, [sp], #4)
   2589c:	str	fp, [sp, #-8]!
   258a0:	str	lr, [sp, #4]
   258a4:	add	fp, sp, #4
   258a8:	sub	sp, sp, #64	; 0x40
   258ac:	str	r0, [fp, #-56]	; 0xffffffc8
   258b0:	str	r1, [fp, #-60]	; 0xffffffc4
   258b4:	str	r2, [fp, #-64]	; 0xffffffc0
   258b8:	str	r3, [fp, #-68]	; 0xffffffbc
   258bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   258c0:	ldr	r3, [r3, #4]
   258c4:	lsr	r3, r3, #31
   258c8:	uxtb	r3, r3
   258cc:	str	r3, [fp, #-8]
   258d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   258d4:	mvn	r2, r3
   258d8:	ldr	r3, [fp, #-8]
   258dc:	and	r3, r3, r2
   258e0:	cmp	r3, #0
   258e4:	beq	258f4 <__assert_fail@plt+0x1479c>
   258e8:	movw	r0, #23236	; 0x5ac4
   258ec:	movt	r0, #3
   258f0:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   258f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   258f8:	cmp	r3, #0
   258fc:	bne	2590c <__assert_fail@plt+0x147b4>
   25900:	movw	r0, #23284	; 0x5af4
   25904:	movt	r0, #3
   25908:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   2590c:	mov	r1, #1
   25910:	ldr	r0, [fp, #-64]	; 0xffffffc0
   25914:	bl	2211c <__assert_fail@plt+0x10fc4>
   25918:	mov	r3, r0
   2591c:	cmp	r3, #0
   25920:	bgt	25958 <__assert_fail@plt+0x14800>
   25924:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25928:	cmp	r3, #0
   2592c:	beq	2593c <__assert_fail@plt+0x147e4>
   25930:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25934:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25938:	bl	20ff0 <__assert_fail@plt+0xfe98>
   2593c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25940:	cmp	r3, #0
   25944:	beq	25b68 <__assert_fail@plt+0x14a10>
   25948:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2594c:	mov	r2, #0
   25950:	str	r2, [r3, #4]
   25954:	b	25b6c <__assert_fail@plt+0x14a14>
   25958:	sub	r3, fp, #36	; 0x24
   2595c:	mov	r0, r3
   25960:	bl	20cdc <__assert_fail@plt+0xfb84>
   25964:	sub	r3, fp, #24
   25968:	mov	r0, r3
   2596c:	bl	20cdc <__assert_fail@plt+0xfb84>
   25970:	mov	r1, #2
   25974:	ldr	r0, [fp, #-64]	; 0xffffffc0
   25978:	bl	2864c <__assert_fail@plt+0x174f4>
   2597c:	mov	r3, r0
   25980:	sub	r2, r3, #1
   25984:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25988:	udiv	r3, r2, r3
   2598c:	add	r3, r3, #1
   25990:	str	r3, [fp, #-12]
   25994:	sub	r3, fp, #24
   25998:	ldr	r1, [fp, #-12]
   2599c:	mov	r0, r3
   259a0:	bl	2726c <__assert_fail@plt+0x16114>
   259a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   259a8:	cmp	r3, #2
   259ac:	bne	25a24 <__assert_fail@plt+0x148cc>
   259b0:	sub	r2, fp, #24
   259b4:	sub	r3, fp, #36	; 0x24
   259b8:	mov	r1, r2
   259bc:	mov	r0, r3
   259c0:	bl	222c8 <__assert_fail@plt+0x11170>
   259c4:	sub	r2, fp, #36	; 0x24
   259c8:	sub	r3, fp, #24
   259cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   259d0:	mov	r0, r3
   259d4:	bl	23420 <__assert_fail@plt+0x122c8>
   259d8:	sub	r2, fp, #36	; 0x24
   259dc:	sub	r1, fp, #24
   259e0:	sub	r3, fp, #24
   259e4:	mov	r0, r3
   259e8:	bl	22758 <__assert_fail@plt+0x11600>
   259ec:	sub	r1, fp, #24
   259f0:	sub	r3, fp, #24
   259f4:	mov	r2, #1
   259f8:	mov	r0, r3
   259fc:	bl	23bbc <__assert_fail@plt+0x12a64>
   25a00:	sub	r2, fp, #36	; 0x24
   25a04:	sub	r3, fp, #24
   25a08:	mov	r1, r2
   25a0c:	mov	r0, r3
   25a10:	bl	221c8 <__assert_fail@plt+0x11070>
   25a14:	mov	r3, r0
   25a18:	cmp	r3, #0
   25a1c:	blt	259b0 <__assert_fail@plt+0x14858>
   25a20:	b	25afc <__assert_fail@plt+0x149a4>
   25a24:	sub	r3, fp, #48	; 0x30
   25a28:	mov	r0, r3
   25a2c:	bl	20cdc <__assert_fail@plt+0xfb84>
   25a30:	ldr	r3, [fp, #-8]
   25a34:	cmp	r3, #0
   25a38:	beq	25a50 <__assert_fail@plt+0x148f8>
   25a3c:	sub	r2, fp, #24
   25a40:	sub	r3, fp, #24
   25a44:	mov	r1, r2
   25a48:	mov	r0, r3
   25a4c:	bl	2227c <__assert_fail@plt+0x11124>
   25a50:	sub	r2, fp, #24
   25a54:	sub	r3, fp, #36	; 0x24
   25a58:	mov	r1, r2
   25a5c:	mov	r0, r3
   25a60:	bl	222c8 <__assert_fail@plt+0x11170>
   25a64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25a68:	sub	r2, r3, #1
   25a6c:	sub	r1, fp, #36	; 0x24
   25a70:	sub	r3, fp, #24
   25a74:	mov	r0, r3
   25a78:	bl	25328 <__assert_fail@plt+0x141d0>
   25a7c:	sub	r2, fp, #24
   25a80:	sub	r3, fp, #24
   25a84:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25a88:	mov	r0, r3
   25a8c:	bl	23420 <__assert_fail@plt+0x122c8>
   25a90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25a94:	sub	r2, r3, #1
   25a98:	sub	r1, fp, #36	; 0x24
   25a9c:	sub	r3, fp, #48	; 0x30
   25aa0:	mov	r0, r3
   25aa4:	bl	22910 <__assert_fail@plt+0x117b8>
   25aa8:	sub	r2, fp, #48	; 0x30
   25aac:	sub	r1, fp, #24
   25ab0:	sub	r3, fp, #24
   25ab4:	mov	r0, r3
   25ab8:	bl	22758 <__assert_fail@plt+0x11600>
   25abc:	sub	r1, fp, #24
   25ac0:	sub	r3, fp, #24
   25ac4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25ac8:	mov	r0, r3
   25acc:	bl	240a8 <__assert_fail@plt+0x12f50>
   25ad0:	sub	r2, fp, #36	; 0x24
   25ad4:	sub	r3, fp, #24
   25ad8:	mov	r1, r2
   25adc:	mov	r0, r3
   25ae0:	bl	221c8 <__assert_fail@plt+0x11070>
   25ae4:	mov	r3, r0
   25ae8:	cmp	r3, #0
   25aec:	blt	25a50 <__assert_fail@plt+0x148f8>
   25af0:	sub	r3, fp, #48	; 0x30
   25af4:	mov	r0, r3
   25af8:	bl	20db0 <__assert_fail@plt+0xfc58>
   25afc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25b00:	cmp	r3, #0
   25b04:	beq	25b30 <__assert_fail@plt+0x149d8>
   25b08:	sub	r1, fp, #36	; 0x24
   25b0c:	sub	r3, fp, #24
   25b10:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25b14:	mov	r0, r3
   25b18:	bl	25328 <__assert_fail@plt+0x141d0>
   25b1c:	sub	r3, fp, #24
   25b20:	mov	r2, r3
   25b24:	ldr	r1, [fp, #-64]	; 0xffffffc0
   25b28:	ldr	r0, [fp, #-60]	; 0xffffffc4
   25b2c:	bl	227f8 <__assert_fail@plt+0x116a0>
   25b30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25b34:	cmp	r3, #0
   25b38:	beq	25b4c <__assert_fail@plt+0x149f4>
   25b3c:	sub	r3, fp, #36	; 0x24
   25b40:	mov	r1, r3
   25b44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25b48:	bl	222c8 <__assert_fail@plt+0x11170>
   25b4c:	sub	r3, fp, #36	; 0x24
   25b50:	mov	r0, r3
   25b54:	bl	20db0 <__assert_fail@plt+0xfc58>
   25b58:	sub	r3, fp, #24
   25b5c:	mov	r0, r3
   25b60:	bl	20db0 <__assert_fail@plt+0xfc58>
   25b64:	b	25b6c <__assert_fail@plt+0x14a14>
   25b68:	nop	{0}
   25b6c:	sub	sp, fp, #4
   25b70:	ldr	fp, [sp]
   25b74:	add	sp, sp, #4
   25b78:	pop	{pc}		; (ldr pc, [sp], #4)
   25b7c:	str	fp, [sp, #-8]!
   25b80:	str	lr, [sp, #4]
   25b84:	add	fp, sp, #4
   25b88:	sub	sp, sp, #32
   25b8c:	str	r0, [fp, #-24]	; 0xffffffe8
   25b90:	str	r1, [fp, #-28]	; 0xffffffe4
   25b94:	str	r2, [fp, #-32]	; 0xffffffe0
   25b98:	sub	r3, fp, #20
   25b9c:	mov	r0, r3
   25ba0:	bl	20cdc <__assert_fail@plt+0xfb84>
   25ba4:	sub	r1, fp, #20
   25ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25bac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25bb4:	bl	2589c <__assert_fail@plt+0x14744>
   25bb8:	ldr	r3, [fp, #-16]
   25bbc:	cmp	r3, #0
   25bc0:	moveq	r3, #1
   25bc4:	movne	r3, #0
   25bc8:	uxtb	r3, r3
   25bcc:	str	r3, [fp, #-8]
   25bd0:	sub	r3, fp, #20
   25bd4:	mov	r0, r3
   25bd8:	bl	20db0 <__assert_fail@plt+0xfc58>
   25bdc:	ldr	r3, [fp, #-8]
   25be0:	mov	r0, r3
   25be4:	sub	sp, fp, #4
   25be8:	ldr	fp, [sp]
   25bec:	add	sp, sp, #4
   25bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   25bf4:	str	fp, [sp, #-8]!
   25bf8:	str	lr, [sp, #4]
   25bfc:	add	fp, sp, #4
   25c00:	sub	sp, sp, #16
   25c04:	str	r0, [fp, #-8]
   25c08:	str	r1, [fp, #-12]
   25c0c:	str	r2, [fp, #-16]
   25c10:	mov	r3, #2
   25c14:	ldr	r2, [fp, #-16]
   25c18:	ldr	r1, [fp, #-12]
   25c1c:	ldr	r0, [fp, #-8]
   25c20:	bl	2589c <__assert_fail@plt+0x14744>
   25c24:	nop	{0}
   25c28:	sub	sp, fp, #4
   25c2c:	ldr	fp, [sp]
   25c30:	add	sp, sp, #4
   25c34:	pop	{pc}		; (ldr pc, [sp], #4)
   25c38:	str	fp, [sp, #-8]!
   25c3c:	str	lr, [sp, #4]
   25c40:	add	fp, sp, #4
   25c44:	sub	sp, sp, #8
   25c48:	str	r0, [fp, #-8]
   25c4c:	str	r1, [fp, #-12]
   25c50:	mov	r3, #2
   25c54:	ldr	r2, [fp, #-12]
   25c58:	mov	r1, #0
   25c5c:	ldr	r0, [fp, #-8]
   25c60:	bl	2589c <__assert_fail@plt+0x14744>
   25c64:	nop	{0}
   25c68:	sub	sp, fp, #4
   25c6c:	ldr	fp, [sp]
   25c70:	add	sp, sp, #4
   25c74:	pop	{pc}		; (ldr pc, [sp], #4)
   25c78:	str	fp, [sp, #-8]!
   25c7c:	str	lr, [sp, #4]
   25c80:	add	fp, sp, #4
   25c84:	sub	sp, sp, #8
   25c88:	str	r0, [fp, #-8]
   25c8c:	ldr	r3, [fp, #-8]
   25c90:	ldr	r3, [r3, #4]
   25c94:	cmp	r3, #0
   25c98:	bgt	25cb8 <__assert_fail@plt+0x14b60>
   25c9c:	ldr	r3, [fp, #-8]
   25ca0:	ldr	r3, [r3, #4]
   25ca4:	cmp	r3, #0
   25ca8:	moveq	r3, #1
   25cac:	movne	r3, #0
   25cb0:	uxtb	r3, r3
   25cb4:	b	25ccc <__assert_fail@plt+0x14b74>
   25cb8:	mov	r2, #2
   25cbc:	ldr	r1, [fp, #-8]
   25cc0:	mov	r0, #0
   25cc4:	bl	25b7c <__assert_fail@plt+0x14a24>
   25cc8:	mov	r3, r0
   25ccc:	mov	r0, r3
   25cd0:	sub	sp, fp, #4
   25cd4:	ldr	fp, [sp]
   25cd8:	add	sp, sp, #4
   25cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   25ce0:	str	fp, [sp, #-8]!
   25ce4:	str	lr, [sp, #4]
   25ce8:	add	fp, sp, #4
   25cec:	sub	sp, sp, #24
   25cf0:	str	r0, [fp, #-24]	; 0xffffffe8
   25cf4:	str	r1, [fp, #-28]	; 0xffffffe4
   25cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25cfc:	cmp	r3, #0
   25d00:	bgt	25d24 <__assert_fail@plt+0x14bcc>
   25d04:	movw	r3, #24452	; 0x5f84
   25d08:	movt	r3, #3
   25d0c:	movw	r2, #3302	; 0xce6
   25d10:	movw	r1, #22376	; 0x5768
   25d14:	movt	r1, #3
   25d18:	movw	r0, #22500	; 0x57e4
   25d1c:	movt	r0, #3
   25d20:	bl	11158 <__assert_fail@plt>
   25d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25d28:	sub	r3, r3, #-1073741823	; 0xc0000001
   25d2c:	lsl	r3, r3, #2
   25d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25d34:	add	r3, r2, r3
   25d38:	ldr	r3, [r3]
   25d3c:	cmp	r3, #0
   25d40:	bne	25d64 <__assert_fail@plt+0x14c0c>
   25d44:	movw	r3, #24452	; 0x5f84
   25d48:	movt	r3, #3
   25d4c:	movw	r2, #3303	; 0xce7
   25d50:	movw	r1, #22376	; 0x5768
   25d54:	movt	r1, #3
   25d58:	movw	r0, #23312	; 0x5b10
   25d5c:	movt	r0, #3
   25d60:	bl	11158 <__assert_fail@plt>
   25d64:	sub	r3, fp, #16
   25d68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25d70:	mov	r0, r3
   25d74:	bl	21748 <__assert_fail@plt+0x105f0>
   25d78:	mov	r3, r0
   25d7c:	mov	r2, #2
   25d80:	mov	r1, r3
   25d84:	mov	r0, #0
   25d88:	bl	25b7c <__assert_fail@plt+0x14a24>
   25d8c:	mov	r3, r0
   25d90:	mov	r0, r3
   25d94:	sub	sp, fp, #4
   25d98:	ldr	fp, [sp]
   25d9c:	add	sp, sp, #4
   25da0:	pop	{pc}		; (ldr pc, [sp], #4)
   25da4:	str	fp, [sp, #-8]!
   25da8:	str	lr, [sp, #4]
   25dac:	add	fp, sp, #4
   25db0:	sub	sp, sp, #56	; 0x38
   25db4:	str	r0, [fp, #-48]	; 0xffffffd0
   25db8:	str	r1, [fp, #-52]	; 0xffffffcc
   25dbc:	str	r2, [fp, #-56]	; 0xffffffc8
   25dc0:	str	r3, [fp, #-60]	; 0xffffffc4
   25dc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25dc8:	cmp	r3, #0
   25dcc:	bgt	25df0 <__assert_fail@plt+0x14c98>
   25dd0:	movw	r3, #24476	; 0x5f9c
   25dd4:	movt	r3, #3
   25dd8:	movw	r2, #3313	; 0xcf1
   25ddc:	movw	r1, #22376	; 0x5768
   25de0:	movt	r1, #3
   25de4:	movw	r0, #22500	; 0x57e4
   25de8:	movt	r0, #3
   25dec:	bl	11158 <__assert_fail@plt>
   25df0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25df4:	sub	r3, r3, #-1073741823	; 0xc0000001
   25df8:	lsl	r3, r3, #2
   25dfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25e00:	add	r3, r2, r3
   25e04:	ldr	r3, [r3]
   25e08:	cmp	r3, #0
   25e0c:	bne	25e30 <__assert_fail@plt+0x14cd8>
   25e10:	movw	r3, #24476	; 0x5f9c
   25e14:	movt	r3, #3
   25e18:	movw	r2, #3314	; 0xcf2
   25e1c:	movw	r1, #22376	; 0x5768
   25e20:	movt	r1, #3
   25e24:	movw	r0, #23312	; 0x5b10
   25e28:	movt	r0, #3
   25e2c:	bl	11158 <__assert_fail@plt>
   25e30:	sub	r3, fp, #32
   25e34:	mov	r0, r3
   25e38:	bl	20cdc <__assert_fail@plt+0xfb84>
   25e3c:	sub	r3, fp, #20
   25e40:	mov	r0, r3
   25e44:	bl	20cdc <__assert_fail@plt+0xfb84>
   25e48:	sub	r3, fp, #44	; 0x2c
   25e4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25e50:	ldr	r1, [fp, #-56]	; 0xffffffc8
   25e54:	mov	r0, r3
   25e58:	bl	21748 <__assert_fail@plt+0x105f0>
   25e5c:	mov	r2, r0
   25e60:	sub	r1, fp, #32
   25e64:	sub	r0, fp, #20
   25e68:	mov	r3, #2
   25e6c:	bl	2589c <__assert_fail@plt+0x14744>
   25e70:	ldr	r2, [fp, #-16]
   25e74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25e78:	add	r3, r3, #1
   25e7c:	lsr	r1, r3, #31
   25e80:	add	r3, r1, r3
   25e84:	asr	r3, r3, #1
   25e88:	cmp	r2, r3
   25e8c:	beq	25eb0 <__assert_fail@plt+0x14d58>
   25e90:	movw	r3, #24476	; 0x5f9c
   25e94:	movt	r3, #3
   25e98:	movw	r2, #3320	; 0xcf8
   25e9c:	movw	r1, #22376	; 0x5768
   25ea0:	movt	r1, #3
   25ea4:	movw	r0, #23328	; 0x5b20
   25ea8:	movt	r0, #3
   25eac:	bl	11158 <__assert_fail@plt>
   25eb0:	ldr	r3, [fp, #-12]
   25eb4:	ldr	r2, [fp, #-16]
   25eb8:	mov	r1, r3
   25ebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   25ec0:	bl	1caf8 <__assert_fail@plt+0xb9a0>
   25ec4:	sub	r3, fp, #20
   25ec8:	mov	r0, r3
   25ecc:	bl	20db0 <__assert_fail@plt+0xfc58>
   25ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25ed4:	str	r3, [fp, #-8]
   25ed8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25edc:	cmp	r3, #0
   25ee0:	beq	25ef8 <__assert_fail@plt+0x14da0>
   25ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ee8:	ldr	r2, [fp, #-8]
   25eec:	mov	r1, r3
   25ef0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25ef4:	bl	1caf8 <__assert_fail@plt+0xb9a0>
   25ef8:	sub	r3, fp, #32
   25efc:	mov	r0, r3
   25f00:	bl	20db0 <__assert_fail@plt+0xfc58>
   25f04:	ldr	r3, [fp, #-8]
   25f08:	mov	r0, r3
   25f0c:	sub	sp, fp, #4
   25f10:	ldr	fp, [sp]
   25f14:	add	sp, sp, #4
   25f18:	pop	{pc}		; (ldr pc, [sp], #4)
   25f1c:	str	fp, [sp, #-8]!
   25f20:	str	lr, [sp, #4]
   25f24:	add	fp, sp, #4
   25f28:	sub	sp, sp, #16
   25f2c:	str	r0, [fp, #-8]
   25f30:	str	r1, [fp, #-12]
   25f34:	str	r2, [fp, #-16]
   25f38:	ldr	r3, [fp, #-12]
   25f3c:	cmp	r3, #0
   25f40:	moveq	r3, #1
   25f44:	movne	r3, #0
   25f48:	uxtb	r3, r3
   25f4c:	mov	r2, r3
   25f50:	ldr	r3, [fp, #-12]
   25f54:	add	r3, r2, r3
   25f58:	mov	r1, r3
   25f5c:	ldr	r0, [fp, #-8]
   25f60:	bl	20f68 <__assert_fail@plt+0xfe10>
   25f64:	ldr	r3, [fp, #-16]
   25f68:	add	r3, r3, #1
   25f6c:	cmp	r3, #1
   25f70:	bls	25fb0 <__assert_fail@plt+0x14e58>
   25f74:	b	25f98 <__assert_fail@plt+0x14e40>
   25f78:	ldr	r2, [fp, #-12]
   25f7c:	ldr	r3, [fp, #-16]
   25f80:	sub	r3, r2, r3
   25f84:	str	r3, [fp, #-12]
   25f88:	ldr	r2, [fp, #-12]
   25f8c:	ldr	r1, [fp, #-8]
   25f90:	ldr	r0, [fp, #-8]
   25f94:	bl	22910 <__assert_fail@plt+0x117b8>
   25f98:	ldr	r3, [fp, #-16]
   25f9c:	add	r3, r3, #1
   25fa0:	ldr	r2, [fp, #-12]
   25fa4:	cmp	r2, r3
   25fa8:	bhi	25f78 <__assert_fail@plt+0x14e20>
   25fac:	b	25fb4 <__assert_fail@plt+0x14e5c>
   25fb0:	nop	{0}
   25fb4:	sub	sp, fp, #4
   25fb8:	ldr	fp, [sp]
   25fbc:	add	sp, sp, #4
   25fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   25fc4:	str	fp, [sp, #-8]!
   25fc8:	str	lr, [sp, #4]
   25fcc:	add	fp, sp, #4
   25fd0:	sub	sp, sp, #8
   25fd4:	str	r0, [fp, #-8]
   25fd8:	str	r1, [fp, #-12]
   25fdc:	mov	r2, #2
   25fe0:	ldr	r1, [fp, #-12]
   25fe4:	ldr	r0, [fp, #-8]
   25fe8:	bl	25f1c <__assert_fail@plt+0x14dc4>
   25fec:	nop	{0}
   25ff0:	sub	sp, fp, #4
   25ff4:	ldr	fp, [sp]
   25ff8:	add	sp, sp, #4
   25ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   26000:	str	fp, [sp, #-8]!
   26004:	str	lr, [sp, #4]
   26008:	add	fp, sp, #4
   2600c:	sub	sp, sp, #8
   26010:	str	r0, [fp, #-8]
   26014:	str	r1, [fp, #-12]
   26018:	mov	r2, #1
   2601c:	ldr	r1, [fp, #-12]
   26020:	ldr	r0, [fp, #-8]
   26024:	bl	25f1c <__assert_fail@plt+0x14dc4>
   26028:	nop	{0}
   2602c:	sub	sp, fp, #4
   26030:	ldr	fp, [sp]
   26034:	add	sp, sp, #4
   26038:	pop	{pc}		; (ldr pc, [sp], #4)
   2603c:	str	fp, [sp, #-8]!
   26040:	str	lr, [sp, #4]
   26044:	add	fp, sp, #4
   26048:	sub	sp, sp, #32
   2604c:	str	r0, [fp, #-24]	; 0xffffffe8
   26050:	str	r1, [fp, #-28]	; 0xffffffe4
   26054:	str	r2, [fp, #-32]	; 0xffffffe0
   26058:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2605c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26060:	cmp	r2, r3
   26064:	movls	r3, #1
   26068:	movhi	r3, #0
   2606c:	uxtb	r3, r3
   26070:	mov	r1, r3
   26074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26078:	bl	20f68 <__assert_fail@plt+0xfe10>
   2607c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26080:	lsr	r3, r3, #1
   26084:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26088:	cmp	r2, r3
   2608c:	bls	260b8 <__assert_fail@plt+0x14f60>
   26090:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26098:	cmp	r2, r3
   2609c:	bhi	260b0 <__assert_fail@plt+0x14f58>
   260a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   260a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   260a8:	sub	r3, r2, r3
   260ac:	b	260b4 <__assert_fail@plt+0x14f5c>
   260b0:	mov	r3, #0
   260b4:	str	r3, [fp, #-32]	; 0xffffffe0
   260b8:	sub	r3, fp, #16
   260bc:	mov	r0, r3
   260c0:	bl	20cdc <__assert_fail@plt+0xfb84>
   260c4:	sub	r3, fp, #16
   260c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   260cc:	mov	r0, r3
   260d0:	bl	26000 <__assert_fail@plt+0x14ea8>
   260d4:	b	26100 <__assert_fail@plt+0x14fa8>
   260d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   260dc:	sub	r2, r3, #1
   260e0:	str	r2, [fp, #-28]	; 0xffffffe4
   260e4:	mov	r2, r3
   260e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   260ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   260f0:	bl	22910 <__assert_fail@plt+0x117b8>
   260f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   260f8:	sub	r3, r3, #1
   260fc:	str	r3, [fp, #-32]	; 0xffffffe0
   26100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26104:	cmp	r3, #0
   26108:	bne	260d8 <__assert_fail@plt+0x14f80>
   2610c:	sub	r3, fp, #16
   26110:	mov	r2, r3
   26114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2611c:	bl	23ccc <__assert_fail@plt+0x12b74>
   26120:	sub	r3, fp, #16
   26124:	mov	r0, r3
   26128:	bl	20db0 <__assert_fail@plt+0xfc58>
   2612c:	nop	{0}
   26130:	sub	sp, fp, #4
   26134:	ldr	fp, [sp]
   26138:	add	sp, sp, #4
   2613c:	pop	{pc}		; (ldr pc, [sp], #4)
   26140:	str	fp, [sp, #-8]!
   26144:	str	lr, [sp, #4]
   26148:	add	fp, sp, #4
   2614c:	sub	sp, sp, #56	; 0x38
   26150:	str	r0, [fp, #-56]	; 0xffffffc8
   26154:	str	r1, [fp, #-60]	; 0xffffffc4
   26158:	mov	r3, #0
   2615c:	str	r3, [fp, #-12]
   26160:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26164:	and	r3, r3, #1
   26168:	cmp	r3, #0
   2616c:	bne	26190 <__assert_fail@plt+0x15038>
   26170:	movw	r3, #24488	; 0x5fa8
   26174:	movt	r3, #3
   26178:	movw	r2, #3383	; 0xd37
   2617c:	movw	r1, #22376	; 0x5768
   26180:	movt	r1, #3
   26184:	movw	r0, #23352	; 0x5b38
   26188:	movt	r0, #3
   2618c:	bl	11158 <__assert_fail@plt>
   26190:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26194:	cmp	r3, #0
   26198:	bne	261bc <__assert_fail@plt+0x15064>
   2619c:	movw	r3, #24488	; 0x5fa8
   261a0:	movt	r3, #3
   261a4:	movw	r2, #3384	; 0xd38
   261a8:	movw	r1, #22376	; 0x5768
   261ac:	movt	r1, #3
   261b0:	movw	r0, #23360	; 0x5b40
   261b4:	movt	r0, #3
   261b8:	bl	11158 <__assert_fail@plt>
   261bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   261c0:	lsr	r3, r3, #1
   261c4:	str	r3, [fp, #-60]	; 0xffffffc4
   261c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   261cc:	str	r3, [fp, #-32]	; 0xffffffe0
   261d0:	mov	r3, #0
   261d4:	str	r3, [fp, #-36]	; 0xffffffdc
   261d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   261dc:	rsb	r3, r3, #0
   261e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261e4:	and	r3, r3, r2
   261e8:	str	r3, [fp, #-16]
   261ec:	mov	r3, #0
   261f0:	str	r3, [fp, #-20]	; 0xffffffec
   261f4:	mov	r3, #8
   261f8:	str	r3, [fp, #-40]	; 0xffffffd8
   261fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26200:	cmp	r3, #31
   26204:	bhi	26254 <__assert_fail@plt+0x150fc>
   26208:	b	26228 <__assert_fail@plt+0x150d0>
   2620c:	ldr	r2, [fp, #-16]
   26210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26214:	lsl	r3, r2, r3
   26218:	str	r3, [fp, #-16]
   2621c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26220:	add	r3, r3, #8
   26224:	str	r3, [fp, #-20]	; 0xffffffec
   26228:	ldr	r3, [fp, #-16]
   2622c:	and	r3, r3, #-16777216	; 0xff000000
   26230:	cmp	r3, #0
   26234:	beq	2620c <__assert_fail@plt+0x150b4>
   26238:	b	26254 <__assert_fail@plt+0x150fc>
   2623c:	ldr	r3, [fp, #-16]
   26240:	lsl	r3, r3, #1
   26244:	str	r3, [fp, #-16]
   26248:	ldr	r3, [fp, #-20]	; 0xffffffec
   2624c:	add	r3, r3, #1
   26250:	str	r3, [fp, #-20]	; 0xffffffec
   26254:	ldr	r3, [fp, #-16]
   26258:	cmp	r3, #0
   2625c:	bge	2623c <__assert_fail@plt+0x150e4>
   26260:	ldr	r3, [fp, #-20]	; 0xffffffec
   26264:	str	r3, [fp, #-36]	; 0xffffffdc
   26268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2626c:	rsb	r3, r3, #31
   26270:	str	r3, [fp, #-8]
   26274:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26278:	lsr	r3, r3, #1
   2627c:	str	r3, [fp, #-56]	; 0xffffffc8
   26280:	ldr	r2, [fp, #-56]	; 0xffffffc8
   26284:	ldr	r3, [fp, #-8]
   26288:	lsr	r3, r2, r3
   2628c:	str	r3, [fp, #-56]	; 0xffffffc8
   26290:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26294:	lsr	r2, r3, #1
   26298:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2629c:	eor	r2, r2, r3
   262a0:	ldr	r3, [fp, #-8]
   262a4:	and	r2, r2, r3
   262a8:	ldr	r3, [fp, #-12]
   262ac:	eor	r3, r3, r2
   262b0:	str	r3, [fp, #-12]
   262b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   262b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262bc:	cmp	r2, r3
   262c0:	bcs	2632c <__assert_fail@plt+0x151d4>
   262c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   262c8:	cmp	r3, #0
   262cc:	bne	262f0 <__assert_fail@plt+0x15198>
   262d0:	ldr	r3, [fp, #-12]
   262d4:	and	r3, r3, #1
   262d8:	cmp	r3, #0
   262dc:	beq	262e8 <__assert_fail@plt+0x15190>
   262e0:	mvn	r3, #0
   262e4:	b	26424 <__assert_fail@plt+0x152cc>
   262e8:	mov	r3, #1
   262ec:	b	26424 <__assert_fail@plt+0x152cc>
   262f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   262f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262f8:	and	r2, r2, r3
   262fc:	ldr	r3, [fp, #-12]
   26300:	eor	r3, r3, r2
   26304:	str	r3, [fp, #-12]
   26308:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2630c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26310:	sub	r3, r2, r3
   26314:	str	r3, [fp, #-56]	; 0xffffffc8
   26318:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2631c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26320:	sub	r3, r2, r3
   26324:	str	r3, [fp, #-60]	; 0xffffffc4
   26328:	b	26368 <__assert_fail@plt+0x15210>
   2632c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   26330:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26334:	sub	r3, r2, r3
   26338:	str	r3, [fp, #-56]	; 0xffffffc8
   2633c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26340:	cmp	r3, #0
   26344:	bne	26368 <__assert_fail@plt+0x15210>
   26348:	movw	r3, #24488	; 0x5fa8
   2634c:	movt	r3, #3
   26350:	movw	r2, #3410	; 0xd52
   26354:	movw	r1, #22376	; 0x5768
   26358:	movt	r1, #3
   2635c:	movw	r0, #23360	; 0x5b40
   26360:	movt	r0, #3
   26364:	bl	11158 <__assert_fail@plt>
   26368:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2636c:	str	r3, [fp, #-44]	; 0xffffffd4
   26370:	mov	r3, #0
   26374:	str	r3, [fp, #-48]	; 0xffffffd0
   26378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2637c:	rsb	r3, r3, #0
   26380:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26384:	and	r3, r3, r2
   26388:	str	r3, [fp, #-24]	; 0xffffffe8
   2638c:	mov	r3, #0
   26390:	str	r3, [fp, #-28]	; 0xffffffe4
   26394:	mov	r3, #8
   26398:	str	r3, [fp, #-52]	; 0xffffffcc
   2639c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   263a0:	cmp	r3, #31
   263a4:	bhi	263f4 <__assert_fail@plt+0x1529c>
   263a8:	b	263c8 <__assert_fail@plt+0x15270>
   263ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   263b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   263b4:	lsl	r3, r2, r3
   263b8:	str	r3, [fp, #-24]	; 0xffffffe8
   263bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   263c0:	add	r3, r3, #8
   263c4:	str	r3, [fp, #-28]	; 0xffffffe4
   263c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263cc:	and	r3, r3, #-16777216	; 0xff000000
   263d0:	cmp	r3, #0
   263d4:	beq	263ac <__assert_fail@plt+0x15254>
   263d8:	b	263f4 <__assert_fail@plt+0x1529c>
   263dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263e0:	lsl	r3, r3, #1
   263e4:	str	r3, [fp, #-24]	; 0xffffffe8
   263e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   263ec:	add	r3, r3, #1
   263f0:	str	r3, [fp, #-28]	; 0xffffffe4
   263f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   263f8:	cmp	r3, #0
   263fc:	bge	263dc <__assert_fail@plt+0x15284>
   26400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26404:	str	r3, [fp, #-48]	; 0xffffffd0
   26408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2640c:	rsb	r3, r3, #31
   26410:	str	r3, [fp, #-8]
   26414:	ldr	r3, [fp, #-8]
   26418:	add	r3, r3, #1
   2641c:	str	r3, [fp, #-8]
   26420:	b	26280 <__assert_fail@plt+0x15128>
   26424:	mov	r0, r3
   26428:	sub	sp, fp, #4
   2642c:	ldr	fp, [sp]
   26430:	add	sp, sp, #4
   26434:	pop	{pc}		; (ldr pc, [sp], #4)
   26438:	str	fp, [sp, #-8]!
   2643c:	str	lr, [sp, #4]
   26440:	add	fp, sp, #4
   26444:	sub	sp, sp, #16
   26448:	str	r0, [fp, #-8]
   2644c:	str	r1, [fp, #-12]
   26450:	str	r2, [fp, #-16]
   26454:	ldr	r2, [fp, #-16]
   26458:	ldr	r1, [fp, #-12]
   2645c:	ldr	r0, [fp, #-12]
   26460:	bl	23550 <__assert_fail@plt+0x123f8>
   26464:	ldr	r2, [fp, #-8]
   26468:	ldr	r1, [fp, #-8]
   2646c:	ldr	r0, [fp, #-8]
   26470:	bl	22970 <__assert_fail@plt+0x11818>
   26474:	mov	r2, #2
   26478:	ldr	r1, [fp, #-12]
   2647c:	ldr	r0, [fp, #-8]
   26480:	bl	22d38 <__assert_fail@plt+0x11be0>
   26484:	ldr	r2, [fp, #-16]
   26488:	ldr	r1, [fp, #-8]
   2648c:	ldr	r0, [fp, #-8]
   26490:	bl	23504 <__assert_fail@plt+0x123ac>
   26494:	ldr	r2, [fp, #-12]
   26498:	ldr	r1, [fp, #-12]
   2649c:	ldr	r0, [fp, #-12]
   264a0:	bl	22970 <__assert_fail@plt+0x11818>
   264a4:	nop	{0}
   264a8:	sub	sp, fp, #4
   264ac:	ldr	fp, [sp]
   264b0:	add	sp, sp, #4
   264b4:	pop	{pc}		; (ldr pc, [sp], #4)
   264b8:	str	fp, [sp, #-8]!
   264bc:	str	lr, [sp, #4]
   264c0:	add	fp, sp, #4
   264c4:	sub	sp, sp, #40	; 0x28
   264c8:	str	r0, [fp, #-32]	; 0xffffffe0
   264cc:	str	r1, [fp, #-36]	; 0xffffffdc
   264d0:	str	r2, [fp, #-40]	; 0xffffffd8
   264d4:	str	r3, [fp, #-44]	; 0xffffffd4
   264d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   264dc:	cmp	r3, #0
   264e0:	bne	26504 <__assert_fail@plt+0x153ac>
   264e4:	movw	r3, #24508	; 0x5fbc
   264e8:	movt	r3, #3
   264ec:	movw	r2, #3442	; 0xd72
   264f0:	movw	r1, #22376	; 0x5768
   264f4:	movt	r1, #3
   264f8:	movw	r0, #23368	; 0x5b48
   264fc:	movt	r0, #3
   26500:	bl	11158 <__assert_fail@plt>
   26504:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26508:	cmp	r3, #1073741824	; 0x40000000
   2650c:	ble	26530 <__assert_fail@plt+0x153d8>
   26510:	movw	r3, #24508	; 0x5fbc
   26514:	movt	r3, #3
   26518:	movw	r2, #3443	; 0xd73
   2651c:	movw	r1, #22376	; 0x5768
   26520:	movt	r1, #3
   26524:	movw	r0, #23376	; 0x5b50
   26528:	movt	r0, #3
   2652c:	bl	11158 <__assert_fail@plt>
   26530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26534:	cmp	r3, #-1073741823	; 0xc0000001
   26538:	bge	2655c <__assert_fail@plt+0x15404>
   2653c:	movw	r3, #24508	; 0x5fbc
   26540:	movt	r3, #3
   26544:	movw	r2, #3444	; 0xd74
   26548:	movw	r1, #22376	; 0x5768
   2654c:	movt	r1, #3
   26550:	movw	r0, #23400	; 0x5b68
   26554:	movt	r0, #3
   26558:	bl	11158 <__assert_fail@plt>
   2655c:	mov	r1, #4
   26560:	ldr	r0, [fp, #4]
   26564:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   26568:	mov	r3, r0
   2656c:	cmp	r3, #0
   26570:	bgt	26594 <__assert_fail@plt+0x1543c>
   26574:	movw	r3, #24508	; 0x5fbc
   26578:	movt	r3, #3
   2657c:	movw	r2, #3445	; 0xd75
   26580:	movw	r1, #22376	; 0x5768
   26584:	movt	r1, #3
   26588:	movw	r0, #23424	; 0x5b80
   2658c:	movt	r0, #3
   26590:	bl	11158 <__assert_fail@plt>
   26594:	ldr	r3, [fp, #4]
   26598:	ldr	r3, [r3, #4]
   2659c:	cmp	r3, #0
   265a0:	movne	r3, #1
   265a4:	moveq	r3, #0
   265a8:	uxtb	r3, r3
   265ac:	mov	r2, r3
   265b0:	ldr	r3, [fp, #4]
   265b4:	ldr	r3, [r3, #8]
   265b8:	ldr	r3, [r3]
   265bc:	and	r3, r3, r2
   265c0:	cmp	r3, #0
   265c4:	bne	265e8 <__assert_fail@plt+0x15490>
   265c8:	movw	r3, #24508	; 0x5fbc
   265cc:	movt	r3, #3
   265d0:	movw	r2, #3446	; 0xd76
   265d4:	movw	r1, #22376	; 0x5768
   265d8:	movt	r1, #3
   265dc:	movw	r0, #23448	; 0x5b98
   265e0:	movt	r0, #3
   265e4:	bl	11158 <__assert_fail@plt>
   265e8:	sub	r3, fp, #24
   265ec:	mov	r1, #1
   265f0:	mov	r0, r3
   265f4:	bl	210dc <__assert_fail@plt+0xff84>
   265f8:	mov	r1, #1
   265fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26600:	bl	20f68 <__assert_fail@plt+0xfe10>
   26604:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26608:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2660c:	bl	20ed0 <__assert_fail@plt+0xfd78>
   26610:	mov	r1, #2
   26614:	ldr	r0, [fp, #4]
   26618:	bl	2864c <__assert_fail@plt+0x174f4>
   2661c:	mov	r3, r0
   26620:	sub	r3, r3, #1
   26624:	str	r3, [fp, #-8]
   26628:	b	26754 <__assert_fail@plt+0x155fc>
   2662c:	sub	r1, fp, #24
   26630:	sub	r3, fp, #24
   26634:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26638:	mov	r0, r3
   2663c:	bl	22970 <__assert_fail@plt+0x11818>
   26640:	ldr	r2, [fp, #4]
   26644:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2664c:	bl	26438 <__assert_fail@plt+0x152e0>
   26650:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26654:	ldr	r3, [fp, #-8]
   26658:	cmp	r2, r3
   2665c:	beq	26678 <__assert_fail@plt+0x15520>
   26660:	ldr	r1, [fp, #-8]
   26664:	ldr	r0, [fp, #4]
   26668:	bl	26e20 <__assert_fail@plt+0x15cc8>
   2666c:	mov	r3, r0
   26670:	cmp	r3, #0
   26674:	beq	26740 <__assert_fail@plt+0x155e8>
   26678:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2667c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26684:	bl	22898 <__assert_fail@plt+0x11740>
   26688:	sub	r3, fp, #24
   2668c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26690:	mov	r0, r3
   26694:	bl	222c8 <__assert_fail@plt+0x11170>
   26698:	sub	r1, fp, #24
   2669c:	sub	r3, fp, #24
   266a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   266a4:	mov	r0, r3
   266a8:	bl	22758 <__assert_fail@plt+0x11600>
   266ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   266b0:	cmp	r3, #0
   266b4:	movne	r3, #1
   266b8:	moveq	r3, #0
   266bc:	uxtb	r3, r3
   266c0:	mov	r2, r3
   266c4:	ldr	r3, [fp, #-16]
   266c8:	ldr	r3, [r3]
   266cc:	and	r3, r3, r2
   266d0:	cmp	r3, #0
   266d4:	beq	266ec <__assert_fail@plt+0x15594>
   266d8:	sub	r1, fp, #24
   266dc:	sub	r3, fp, #24
   266e0:	ldr	r2, [fp, #4]
   266e4:	mov	r0, r3
   266e8:	bl	22758 <__assert_fail@plt+0x11600>
   266ec:	sub	r1, fp, #24
   266f0:	sub	r3, fp, #24
   266f4:	mov	r2, #1
   266f8:	mov	r0, r3
   266fc:	bl	23bbc <__assert_fail@plt+0x12a64>
   26700:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26704:	lsl	r3, r3, #1
   26708:	rsb	r3, r3, #0
   2670c:	mov	r2, r3
   26710:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26718:	bl	22898 <__assert_fail@plt+0x11740>
   2671c:	sub	r3, fp, #24
   26720:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26724:	mov	r1, r3
   26728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2672c:	bl	22758 <__assert_fail@plt+0x11600>
   26730:	ldr	r2, [fp, #4]
   26734:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26738:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2673c:	bl	23504 <__assert_fail@plt+0x123ac>
   26740:	sub	r1, fp, #24
   26744:	sub	r3, fp, #24
   26748:	ldr	r2, [fp, #4]
   2674c:	mov	r0, r3
   26750:	bl	23504 <__assert_fail@plt+0x123ac>
   26754:	ldr	r3, [fp, #-8]
   26758:	sub	r3, r3, #1
   2675c:	str	r3, [fp, #-8]
   26760:	ldr	r2, [fp, #-8]
   26764:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26768:	cmp	r2, r3
   2676c:	bcs	2662c <__assert_fail@plt+0x154d4>
   26770:	ldr	r3, [fp, #-20]	; 0xffffffec
   26774:	cmp	r3, #0
   26778:	moveq	r3, #1
   2677c:	movne	r3, #0
   26780:	uxtb	r3, r3
   26784:	str	r3, [fp, #-12]
   26788:	sub	r3, fp, #24
   2678c:	mov	r0, r3
   26790:	bl	20db0 <__assert_fail@plt+0xfc58>
   26794:	ldr	r3, [fp, #-12]
   26798:	mov	r0, r3
   2679c:	sub	sp, fp, #4
   267a0:	ldr	fp, [sp]
   267a4:	add	sp, sp, #4
   267a8:	pop	{pc}		; (ldr pc, [sp], #4)
   267ac:	str	fp, [sp, #-8]!
   267b0:	str	lr, [sp, #4]
   267b4:	add	fp, sp, #4
   267b8:	sub	sp, sp, #64	; 0x40
   267bc:	str	r0, [fp, #-56]	; 0xffffffc8
   267c0:	str	r1, [fp, #-60]	; 0xffffffc4
   267c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   267c8:	ldr	r1, [r3, #8]
   267cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   267d0:	ldr	r3, [r3, #4]
   267d4:	eor	r2, r3, r3, asr #31
   267d8:	sub	r2, r2, r3, asr #31
   267dc:	sub	r3, fp, #48	; 0x30
   267e0:	mov	r0, r3
   267e4:	bl	21748 <__assert_fail@plt+0x105f0>
   267e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   267ec:	cmp	r3, #0
   267f0:	movne	r3, #1
   267f4:	moveq	r3, #0
   267f8:	uxtb	r3, r3
   267fc:	mov	r2, r3
   26800:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26804:	ldr	r3, [r3]
   26808:	and	r3, r3, r2
   2680c:	cmp	r3, #0
   26810:	bne	26834 <__assert_fail@plt+0x156dc>
   26814:	movw	r3, #24524	; 0x5fcc
   26818:	movt	r3, #3
   2681c:	mov	r2, #3504	; 0xdb0
   26820:	movw	r1, #22376	; 0x5768
   26824:	movt	r1, #3
   26828:	movw	r0, #23448	; 0x5b98
   2682c:	movt	r0, #3
   26830:	bl	11158 <__assert_fail@plt>
   26834:	sub	r3, fp, #48	; 0x30
   26838:	mov	r2, #2
   2683c:	mov	r1, r3
   26840:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26844:	bl	25b7c <__assert_fail@plt+0x14a24>
   26848:	mov	r3, r0
   2684c:	cmp	r3, #0
   26850:	beq	2685c <__assert_fail@plt+0x15704>
   26854:	mov	r3, #0
   26858:	b	269f4 <__assert_fail@plt+0x1589c>
   2685c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26860:	ldr	r3, [r3, #4]
   26864:	cmp	r3, #1
   26868:	bne	26880 <__assert_fail@plt+0x15728>
   2686c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26870:	ldr	r3, [r3, #8]
   26874:	ldr	r3, [r3]
   26878:	sub	r3, r3, #1
   2687c:	b	26884 <__assert_fail@plt+0x1572c>
   26880:	mvn	r3, #0
   26884:	str	r3, [fp, #-16]
   26888:	mov	r3, #3
   2688c:	str	r3, [fp, #-12]
   26890:	ldr	r2, [fp, #-12]
   26894:	ldr	r3, [fp, #-16]
   26898:	cmp	r2, r3
   2689c:	bcc	268bc <__assert_fail@plt+0x15764>
   268a0:	ldr	r3, [fp, #-12]
   268a4:	cmn	r3, #1
   268a8:	beq	268b4 <__assert_fail@plt+0x1575c>
   268ac:	mov	r3, #2
   268b0:	b	269f4 <__assert_fail@plt+0x1589c>
   268b4:	mov	r3, #1
   268b8:	b	269f4 <__assert_fail@plt+0x1589c>
   268bc:	ldr	r3, [fp, #-12]
   268c0:	add	r3, r3, #2
   268c4:	str	r3, [fp, #-12]
   268c8:	sub	r3, fp, #48	; 0x30
   268cc:	ldr	r1, [fp, #-12]
   268d0:	mov	r0, r3
   268d4:	bl	24280 <__assert_fail@plt+0x13128>
   268d8:	str	r0, [fp, #-20]	; 0xffffffec
   268dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   268e0:	cmp	r3, #0
   268e4:	bne	268f0 <__assert_fail@plt+0x15798>
   268e8:	mov	r3, #0
   268ec:	b	269f4 <__assert_fail@plt+0x1589c>
   268f0:	ldr	r1, [fp, #-12]
   268f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   268f8:	bl	26140 <__assert_fail@plt+0x14fe8>
   268fc:	mov	r3, r0
   26900:	cmp	r3, #1
   26904:	beq	26890 <__assert_fail@plt+0x15738>
   26908:	sub	r3, fp, #36	; 0x24
   2690c:	mov	r0, r3
   26910:	bl	20cdc <__assert_fail@plt+0xfb84>
   26914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26918:	ldr	r3, [r3]
   2691c:	mvn	r0, r3
   26920:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26924:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26928:	mvn	r3, #0
   2692c:	str	r3, [sp]
   26930:	mov	r3, r1
   26934:	mov	r1, #0
   26938:	bl	1dec8 <__assert_fail@plt+0xcd70>
   2693c:	str	r0, [fp, #-8]
   26940:	ldr	r3, [fp, #-12]
   26944:	and	r3, r3, #2
   26948:	cmp	r3, #0
   2694c:	beq	26960 <__assert_fail@plt+0x15808>
   26950:	ldr	r3, [fp, #-12]
   26954:	lsr	r3, r3, #2
   26958:	add	r3, r3, #1
   2695c:	b	2696c <__assert_fail@plt+0x15814>
   26960:	ldr	r3, [fp, #-12]
   26964:	lsr	r3, r3, #2
   26968:	rsb	r3, r3, #0
   2696c:	str	r3, [fp, #-24]	; 0xffffffe8
   26970:	sub	r0, fp, #36	; 0x24
   26974:	sub	r3, fp, #48	; 0x30
   26978:	str	r3, [sp]
   2697c:	ldr	r3, [fp, #-8]
   26980:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26984:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26988:	bl	264b8 <__assert_fail@plt+0x15360>
   2698c:	mov	r3, r0
   26990:	cmp	r3, #0
   26994:	bne	269d4 <__assert_fail@plt+0x1587c>
   26998:	b	269b0 <__assert_fail@plt+0x15858>
   2699c:	sub	r2, fp, #48	; 0x30
   269a0:	sub	r3, fp, #36	; 0x24
   269a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   269a8:	mov	r0, r3
   269ac:	bl	26438 <__assert_fail@plt+0x152e0>
   269b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269b4:	cmp	r3, #0
   269b8:	beq	269d4 <__assert_fail@plt+0x1587c>
   269bc:	ldr	r3, [fp, #-8]
   269c0:	sub	r3, r3, #1
   269c4:	str	r3, [fp, #-8]
   269c8:	ldr	r3, [fp, #-8]
   269cc:	cmp	r3, #0
   269d0:	bne	2699c <__assert_fail@plt+0x15844>
   269d4:	sub	r3, fp, #36	; 0x24
   269d8:	mov	r0, r3
   269dc:	bl	20db0 <__assert_fail@plt+0xfc58>
   269e0:	ldr	r3, [fp, #-8]
   269e4:	cmp	r3, #0
   269e8:	movne	r3, #1
   269ec:	moveq	r3, #0
   269f0:	uxtb	r3, r3
   269f4:	mov	r0, r3
   269f8:	sub	sp, fp, #4
   269fc:	ldr	fp, [sp]
   26a00:	add	sp, sp, #4
   26a04:	pop	{pc}		; (ldr pc, [sp], #4)
   26a08:	str	fp, [sp, #-8]!
   26a0c:	str	lr, [sp, #4]
   26a10:	add	fp, sp, #4
   26a14:	sub	sp, sp, #16
   26a18:	str	r0, [fp, #-8]
   26a1c:	str	r1, [fp, #-12]
   26a20:	str	r2, [fp, #-16]
   26a24:	str	r3, [fp, #-20]	; 0xffffffec
   26a28:	ldr	r3, [fp, #4]
   26a2c:	cmp	r3, #0
   26a30:	bne	26a54 <__assert_fail@plt+0x158fc>
   26a34:	movw	r3, #24540	; 0x5fdc
   26a38:	movt	r3, #3
   26a3c:	movw	r2, #3550	; 0xdde
   26a40:	movw	r1, #22376	; 0x5768
   26a44:	movt	r1, #3
   26a48:	movw	r0, #23464	; 0x5ba8
   26a4c:	movt	r0, #3
   26a50:	bl	11158 <__assert_fail@plt>
   26a54:	ldr	r3, [fp, #-8]
   26a58:	ldr	r2, [fp, #-20]	; 0xffffffec
   26a5c:	ldr	r1, [fp, #-16]
   26a60:	ldr	r0, [fp, #-16]
   26a64:	bl	25440 <__assert_fail@plt+0x142e8>
   26a68:	mov	r1, #1
   26a6c:	ldr	r0, [fp, #-16]
   26a70:	bl	21ff8 <__assert_fail@plt+0x10ea0>
   26a74:	mov	r3, r0
   26a78:	cmp	r3, #0
   26a7c:	beq	26a98 <__assert_fail@plt+0x15940>
   26a80:	ldr	r1, [fp, #-12]
   26a84:	ldr	r0, [fp, #-16]
   26a88:	bl	22054 <__assert_fail@plt+0x10efc>
   26a8c:	mov	r3, r0
   26a90:	cmp	r3, #0
   26a94:	bne	26ad4 <__assert_fail@plt+0x1597c>
   26a98:	mov	r3, #1
   26a9c:	b	26af0 <__assert_fail@plt+0x15998>
   26aa0:	ldr	r3, [fp, #-8]
   26aa4:	mov	r2, #2
   26aa8:	ldr	r1, [fp, #-16]
   26aac:	ldr	r0, [fp, #-16]
   26ab0:	bl	25838 <__assert_fail@plt+0x146e0>
   26ab4:	ldr	r1, [fp, #-12]
   26ab8:	ldr	r0, [fp, #-16]
   26abc:	bl	22054 <__assert_fail@plt+0x10efc>
   26ac0:	mov	r3, r0
   26ac4:	cmp	r3, #0
   26ac8:	bne	26ad4 <__assert_fail@plt+0x1597c>
   26acc:	mov	r3, #1
   26ad0:	b	26af0 <__assert_fail@plt+0x15998>
   26ad4:	ldr	r3, [fp, #4]
   26ad8:	sub	r3, r3, #1
   26adc:	str	r3, [fp, #4]
   26ae0:	ldr	r3, [fp, #4]
   26ae4:	cmp	r3, #0
   26ae8:	bne	26aa0 <__assert_fail@plt+0x15948>
   26aec:	mov	r3, #0
   26af0:	mov	r0, r3
   26af4:	sub	sp, fp, #4
   26af8:	ldr	fp, [sp]
   26afc:	add	sp, sp, #4
   26b00:	pop	{pc}		; (ldr pc, [sp], #4)
   26b04:	str	fp, [sp, #-8]!
   26b08:	str	lr, [sp, #4]
   26b0c:	add	fp, sp, #4
   26b10:	sub	sp, sp, #64	; 0x40
   26b14:	str	r0, [fp, #-56]	; 0xffffffc8
   26b18:	str	r1, [fp, #-60]	; 0xffffffc4
   26b1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26b20:	ldr	r3, [r3, #4]
   26b24:	cmp	r3, #0
   26b28:	movne	r3, #1
   26b2c:	moveq	r3, #0
   26b30:	uxtb	r3, r3
   26b34:	mov	r2, r3
   26b38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26b3c:	ldr	r3, [r3, #8]
   26b40:	ldr	r3, [r3]
   26b44:	and	r3, r3, r2
   26b48:	cmp	r3, #0
   26b4c:	bne	26b78 <__assert_fail@plt+0x15a20>
   26b50:	mov	r1, #2
   26b54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26b58:	bl	2211c <__assert_fail@plt+0x10fc4>
   26b5c:	mov	r3, r0
   26b60:	cmp	r3, #0
   26b64:	bne	26b70 <__assert_fail@plt+0x15a18>
   26b68:	mov	r3, #2
   26b6c:	b	26e0c <__assert_fail@plt+0x15cb4>
   26b70:	mov	r3, #0
   26b74:	b	26e0c <__assert_fail@plt+0x15cb4>
   26b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26b7c:	ldr	r3, [r3, #4]
   26b80:	cmp	r3, #0
   26b84:	bne	26ba8 <__assert_fail@plt+0x15a50>
   26b88:	movw	r3, #24556	; 0x5fec
   26b8c:	movt	r3, #3
   26b90:	movw	r2, #3590	; 0xe06
   26b94:	movw	r1, #22376	; 0x5768
   26b98:	movt	r1, #3
   26b9c:	movw	r0, #23472	; 0x5bb0
   26ba0:	movt	r0, #3
   26ba4:	bl	11158 <__assert_fail@plt>
   26ba8:	mov	r1, #64	; 0x40
   26bac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26bb0:	bl	2211c <__assert_fail@plt+0x10fc4>
   26bb4:	mov	r3, r0
   26bb8:	cmp	r3, #0
   26bbc:	bge	26be4 <__assert_fail@plt+0x15a8c>
   26bc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26bc4:	ldr	r3, [r3, #8]
   26bc8:	ldr	r3, [r3]
   26bcc:	lsr	r2, r3, #1
   26bd0:	movw	r3, #38620	; 0x96dc
   26bd4:	movt	r3, #51561	; 0xc969
   26bd8:	lsr	r3, r3, r2
   26bdc:	and	r3, r3, #2
   26be0:	b	26e0c <__assert_fail@plt+0x15cb4>
   26be4:	movw	r2, #55191	; 0xd797
   26be8:	movt	r2, #49359	; 0xc0cf
   26bec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26bf0:	mov	r0, #0
   26bf4:	bl	24624 <__assert_fail@plt+0x134cc>
   26bf8:	mov	r3, r0
   26bfc:	cmp	r3, #1
   26c00:	beq	26c0c <__assert_fail@plt+0x15ab4>
   26c04:	mov	r3, #0
   26c08:	b	26e0c <__assert_fail@plt+0x15cb4>
   26c0c:	movw	r1, #961	; 0x3c1
   26c10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26c14:	bl	2211c <__assert_fail@plt+0x10fc4>
   26c18:	mov	r3, r0
   26c1c:	cmp	r3, #0
   26c20:	bge	26c2c <__assert_fail@plt+0x15ad4>
   26c24:	mov	r3, #2
   26c28:	b	26e0c <__assert_fail@plt+0x15cb4>
   26c2c:	sub	r3, fp, #28
   26c30:	mov	r0, r3
   26c34:	bl	20cdc <__assert_fail@plt+0xfb84>
   26c38:	sub	r3, fp, #40	; 0x28
   26c3c:	mov	r0, r3
   26c40:	bl	20cdc <__assert_fail@plt+0xfb84>
   26c44:	sub	r3, fp, #28
   26c48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26c4c:	mov	r0, r3
   26c50:	bl	2222c <__assert_fail@plt+0x110d4>
   26c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c58:	ldr	r2, [r3]
   26c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c60:	sub	r2, r2, #1
   26c64:	str	r2, [r3]
   26c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   26c6c:	mov	r1, #0
   26c70:	mov	r0, r3
   26c74:	bl	1e098 <__assert_fail@plt+0xcf40>
   26c78:	str	r0, [fp, #-16]
   26c7c:	sub	r1, fp, #28
   26c80:	sub	r3, fp, #40	; 0x28
   26c84:	ldr	r2, [fp, #-16]
   26c88:	mov	r0, r3
   26c8c:	bl	23bbc <__assert_fail@plt+0x12a64>
   26c90:	sub	r3, fp, #52	; 0x34
   26c94:	mov	r1, #2
   26c98:	mov	r0, r3
   26c9c:	bl	210dc <__assert_fail@plt+0xff84>
   26ca0:	sub	r0, fp, #40	; 0x28
   26ca4:	sub	r2, fp, #52	; 0x34
   26ca8:	sub	r1, fp, #28
   26cac:	ldr	r3, [fp, #-16]
   26cb0:	str	r3, [sp]
   26cb4:	mov	r3, r0
   26cb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26cbc:	bl	26a08 <__assert_fail@plt+0x158b0>
   26cc0:	mov	r3, r0
   26cc4:	cmp	r3, #0
   26cc8:	beq	26cf0 <__assert_fail@plt+0x15b98>
   26ccc:	sub	r3, fp, #52	; 0x34
   26cd0:	mov	r1, r3
   26cd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26cd8:	bl	267ac <__assert_fail@plt+0x15654>
   26cdc:	mov	r3, r0
   26ce0:	cmp	r3, #0
   26ce4:	beq	26cf0 <__assert_fail@plt+0x15b98>
   26ce8:	mov	r3, #1
   26cec:	b	26cf4 <__assert_fail@plt+0x15b9c>
   26cf0:	mov	r3, #0
   26cf4:	str	r3, [fp, #-8]
   26cf8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26cfc:	sub	r3, r3, #24
   26d00:	str	r3, [fp, #-60]	; 0xffffffc4
   26d04:	mov	r3, #0
   26d08:	str	r3, [fp, #-12]
   26d0c:	b	26db0 <__assert_fail@plt+0x15c58>
   26d10:	ldr	r3, [fp, #-12]
   26d14:	add	r3, r3, #1
   26d18:	ldr	r2, [fp, #-12]
   26d1c:	mul	r3, r2, r3
   26d20:	add	r2, r3, #41	; 0x29
   26d24:	sub	r3, fp, #52	; 0x34
   26d28:	mov	r1, r2
   26d2c:	mov	r0, r3
   26d30:	bl	20f68 <__assert_fail@plt+0xfe10>
   26d34:	sub	r2, fp, #28
   26d38:	sub	r3, fp, #52	; 0x34
   26d3c:	mov	r1, r2
   26d40:	mov	r0, r3
   26d44:	bl	22054 <__assert_fail@plt+0x10efc>
   26d48:	mov	r3, r0
   26d4c:	cmp	r3, #0
   26d50:	blt	26d80 <__assert_fail@plt+0x15c28>
   26d54:	ldr	r3, [fp, #-12]
   26d58:	cmp	r3, #29
   26d5c:	bgt	26de0 <__assert_fail@plt+0x15c88>
   26d60:	movw	r3, #24556	; 0x5fec
   26d64:	movt	r3, #3
   26d68:	movw	r2, #3629	; 0xe2d
   26d6c:	movw	r1, #22376	; 0x5768
   26d70:	movt	r1, #3
   26d74:	movw	r0, #23492	; 0x5bc4
   26d78:	movt	r0, #3
   26d7c:	bl	11158 <__assert_fail@plt>
   26d80:	sub	r0, fp, #40	; 0x28
   26d84:	sub	r2, fp, #52	; 0x34
   26d88:	sub	r1, fp, #28
   26d8c:	ldr	r3, [fp, #-16]
   26d90:	str	r3, [sp]
   26d94:	mov	r3, r0
   26d98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26d9c:	bl	26a08 <__assert_fail@plt+0x158b0>
   26da0:	str	r0, [fp, #-8]
   26da4:	ldr	r3, [fp, #-12]
   26da8:	add	r3, r3, #1
   26dac:	str	r3, [fp, #-12]
   26db0:	ldr	r2, [fp, #-12]
   26db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26db8:	cmp	r2, r3
   26dbc:	movlt	r3, #1
   26dc0:	movge	r3, #0
   26dc4:	uxtb	r3, r3
   26dc8:	mov	r2, r3
   26dcc:	ldr	r3, [fp, #-8]
   26dd0:	and	r3, r3, r2
   26dd4:	cmp	r3, #0
   26dd8:	bne	26d10 <__assert_fail@plt+0x15bb8>
   26ddc:	b	26de4 <__assert_fail@plt+0x15c8c>
   26de0:	nop	{0}
   26de4:	sub	r3, fp, #28
   26de8:	mov	r0, r3
   26dec:	bl	20db0 <__assert_fail@plt+0xfc58>
   26df0:	sub	r3, fp, #40	; 0x28
   26df4:	mov	r0, r3
   26df8:	bl	20db0 <__assert_fail@plt+0xfc58>
   26dfc:	sub	r3, fp, #52	; 0x34
   26e00:	mov	r0, r3
   26e04:	bl	20db0 <__assert_fail@plt+0xfc58>
   26e08:	ldr	r3, [fp, #-8]
   26e0c:	mov	r0, r3
   26e10:	sub	sp, fp, #4
   26e14:	ldr	fp, [sp]
   26e18:	add	sp, sp, #4
   26e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   26e20:	push	{fp}		; (str fp, [sp, #-4]!)
   26e24:	add	fp, sp, #0
   26e28:	sub	sp, sp, #36	; 0x24
   26e2c:	str	r0, [fp, #-32]	; 0xffffffe0
   26e30:	str	r1, [fp, #-36]	; 0xffffffdc
   26e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26e38:	ldr	r3, [r3, #4]
   26e3c:	str	r3, [fp, #-12]
   26e40:	ldr	r3, [fp, #-12]
   26e44:	cmp	r3, #0
   26e48:	rsblt	r3, r3, #0
   26e4c:	str	r3, [fp, #-16]
   26e50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26e54:	lsr	r3, r3, #5
   26e58:	str	r3, [fp, #-8]
   26e5c:	ldr	r2, [fp, #-8]
   26e60:	ldr	r3, [fp, #-16]
   26e64:	cmp	r2, r3
   26e68:	blt	26e7c <__assert_fail@plt+0x15d24>
   26e6c:	ldr	r3, [fp, #-12]
   26e70:	lsr	r3, r3, #31
   26e74:	uxtb	r3, r3
   26e78:	b	26f3c <__assert_fail@plt+0x15de4>
   26e7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26e80:	and	r3, r3, #31
   26e84:	str	r3, [fp, #-20]	; 0xffffffec
   26e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26e8c:	ldr	r2, [r3, #8]
   26e90:	ldr	r3, [fp, #-8]
   26e94:	lsl	r3, r3, #2
   26e98:	add	r3, r2, r3
   26e9c:	ldr	r3, [r3]
   26ea0:	str	r3, [fp, #-24]	; 0xffffffe8
   26ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26eac:	lsr	r3, r2, r3
   26eb0:	and	r3, r3, #1
   26eb4:	str	r3, [fp, #-28]	; 0xffffffe4
   26eb8:	ldr	r3, [fp, #-12]
   26ebc:	cmp	r3, #0
   26ec0:	bge	26f38 <__assert_fail@plt+0x15de0>
   26ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ec8:	cmp	r3, #0
   26ecc:	beq	26f20 <__assert_fail@plt+0x15dc8>
   26ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ed4:	rsb	r3, r3, #32
   26ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26edc:	lsl	r3, r2, r3
   26ee0:	cmp	r3, #0
   26ee4:	beq	26f20 <__assert_fail@plt+0x15dc8>
   26ee8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26eec:	eor	r3, r3, #1
   26ef0:	b	26f3c <__assert_fail@plt+0x15de4>
   26ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ef8:	ldr	r2, [r3, #8]
   26efc:	ldr	r3, [fp, #-8]
   26f00:	lsl	r3, r3, #2
   26f04:	add	r3, r2, r3
   26f08:	ldr	r3, [r3]
   26f0c:	cmp	r3, #0
   26f10:	beq	26f20 <__assert_fail@plt+0x15dc8>
   26f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26f18:	eor	r3, r3, #1
   26f1c:	b	26f3c <__assert_fail@plt+0x15de4>
   26f20:	ldr	r3, [fp, #-8]
   26f24:	sub	r3, r3, #1
   26f28:	str	r3, [fp, #-8]
   26f2c:	ldr	r3, [fp, #-8]
   26f30:	cmp	r3, #0
   26f34:	bge	26ef4 <__assert_fail@plt+0x15d9c>
   26f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26f3c:	mov	r0, r3
   26f40:	add	sp, fp, #0
   26f44:	pop	{fp}		; (ldr fp, [sp], #4)
   26f48:	bx	lr
   26f4c:	str	fp, [sp, #-8]!
   26f50:	str	lr, [sp, #4]
   26f54:	add	fp, sp, #4
   26f58:	sub	sp, sp, #32
   26f5c:	str	r0, [fp, #-32]	; 0xffffffe0
   26f60:	str	r1, [fp, #-36]	; 0xffffffdc
   26f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f68:	ldr	r3, [r3, #4]
   26f6c:	cmp	r3, #0
   26f70:	rsblt	r3, r3, #0
   26f74:	str	r3, [fp, #-8]
   26f78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26f7c:	lsr	r3, r3, #5
   26f80:	str	r3, [fp, #-16]
   26f84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26f88:	and	r3, r3, #31
   26f8c:	mov	r2, #1
   26f90:	lsl	r3, r2, r3
   26f94:	str	r3, [fp, #-20]	; 0xffffffec
   26f98:	ldr	r2, [fp, #-16]
   26f9c:	ldr	r3, [fp, #-8]
   26fa0:	cmp	r2, r3
   26fa4:	blt	2704c <__assert_fail@plt+0x15ef4>
   26fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26fac:	ldr	r3, [r3]
   26fb0:	ldr	r2, [fp, #-16]
   26fb4:	cmp	r2, r3
   26fb8:	blt	26fd8 <__assert_fail@plt+0x15e80>
   26fbc:	ldr	r3, [fp, #-16]
   26fc0:	add	r3, r3, #1
   26fc4:	mov	r1, r3
   26fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fcc:	bl	20e04 <__assert_fail@plt+0xfcac>
   26fd0:	mov	r3, r0
   26fd4:	b	26fe0 <__assert_fail@plt+0x15e88>
   26fd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26fdc:	ldr	r3, [r3, #8]
   26fe0:	str	r3, [fp, #-24]	; 0xffffffe8
   26fe4:	ldr	r3, [fp, #-16]
   26fe8:	lsl	r3, r3, #2
   26fec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26ff0:	add	r3, r2, r3
   26ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ff8:	str	r2, [r3]
   26ffc:	ldr	r3, [fp, #-8]
   27000:	str	r3, [fp, #-12]
   27004:	b	2702c <__assert_fail@plt+0x15ed4>
   27008:	ldr	r3, [fp, #-12]
   2700c:	lsl	r3, r3, #2
   27010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27014:	add	r3, r2, r3
   27018:	mov	r2, #0
   2701c:	str	r2, [r3]
   27020:	ldr	r3, [fp, #-12]
   27024:	add	r3, r3, #1
   27028:	str	r3, [fp, #-12]
   2702c:	ldr	r2, [fp, #-12]
   27030:	ldr	r3, [fp, #-16]
   27034:	cmp	r2, r3
   27038:	blt	27008 <__assert_fail@plt+0x15eb0>
   2703c:	ldr	r3, [fp, #-16]
   27040:	add	r3, r3, #1
   27044:	str	r3, [fp, #-8]
   27048:	b	270f8 <__assert_fail@plt+0x15fa0>
   2704c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27050:	ldr	r3, [r3, #8]
   27054:	str	r3, [fp, #-24]	; 0xffffffe8
   27058:	ldr	r3, [fp, #-16]
   2705c:	lsl	r3, r3, #2
   27060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27064:	add	r0, r2, r3
   27068:	ldr	r3, [fp, #-16]
   2706c:	lsl	r3, r3, #2
   27070:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27074:	add	r1, r2, r3
   27078:	ldr	r2, [fp, #-8]
   2707c:	ldr	r3, [fp, #-16]
   27080:	sub	r2, r2, r3
   27084:	ldr	r3, [fp, #-20]	; 0xffffffec
   27088:	bl	1cd9c <__assert_fail@plt+0xbc44>
   2708c:	str	r0, [fp, #-28]	; 0xffffffe4
   27090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27094:	cmp	r3, #0
   27098:	beq	270f8 <__assert_fail@plt+0x15fa0>
   2709c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   270a0:	ldr	r3, [r3]
   270a4:	ldr	r2, [fp, #-8]
   270a8:	cmp	r2, r3
   270ac:	blt	270cc <__assert_fail@plt+0x15f74>
   270b0:	ldr	r3, [fp, #-8]
   270b4:	add	r3, r3, #1
   270b8:	mov	r1, r3
   270bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   270c0:	bl	20e04 <__assert_fail@plt+0xfcac>
   270c4:	mov	r3, r0
   270c8:	b	270d4 <__assert_fail@plt+0x15f7c>
   270cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   270d0:	ldr	r3, [r3, #8]
   270d4:	str	r3, [fp, #-24]	; 0xffffffe8
   270d8:	ldr	r3, [fp, #-8]
   270dc:	add	r2, r3, #1
   270e0:	str	r2, [fp, #-8]
   270e4:	lsl	r3, r3, #2
   270e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   270ec:	add	r3, r2, r3
   270f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   270f4:	str	r2, [r3]
   270f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   270fc:	ldr	r3, [r3, #4]
   27100:	cmp	r3, #0
   27104:	bge	27114 <__assert_fail@plt+0x15fbc>
   27108:	ldr	r3, [fp, #-8]
   2710c:	rsb	r3, r3, #0
   27110:	b	27118 <__assert_fail@plt+0x15fc0>
   27114:	ldr	r3, [fp, #-8]
   27118:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2711c:	str	r3, [r2, #4]
   27120:	nop	{0}
   27124:	sub	sp, fp, #4
   27128:	ldr	fp, [sp]
   2712c:	add	sp, sp, #4
   27130:	pop	{pc}		; (ldr pc, [sp], #4)
   27134:	str	fp, [sp, #-8]!
   27138:	str	lr, [sp, #4]
   2713c:	add	fp, sp, #4
   27140:	sub	sp, sp, #32
   27144:	str	r0, [fp, #-32]	; 0xffffffe0
   27148:	str	r1, [fp, #-36]	; 0xffffffdc
   2714c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27150:	ldr	r3, [r3, #4]
   27154:	cmp	r3, #0
   27158:	rsblt	r3, r3, #0
   2715c:	str	r3, [fp, #-8]
   27160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27164:	ldr	r3, [r3, #8]
   27168:	str	r3, [fp, #-12]
   2716c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27170:	lsr	r3, r3, #5
   27174:	str	r3, [fp, #-16]
   27178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2717c:	and	r3, r3, #31
   27180:	mov	r2, #1
   27184:	lsl	r3, r2, r3
   27188:	str	r3, [fp, #-20]	; 0xffffffec
   2718c:	ldr	r2, [fp, #-16]
   27190:	ldr	r3, [fp, #-8]
   27194:	cmp	r2, r3
   27198:	blt	271bc <__assert_fail@plt+0x16064>
   2719c:	movw	r3, #24576	; 0x6000
   271a0:	movt	r3, #3
   271a4:	movw	r2, #3753	; 0xea9
   271a8:	movw	r1, #22376	; 0x5768
   271ac:	movt	r1, #3
   271b0:	movw	r0, #23500	; 0x5bcc
   271b4:	movt	r0, #3
   271b8:	bl	11158 <__assert_fail@plt>
   271bc:	ldr	r3, [fp, #-16]
   271c0:	lsl	r3, r3, #2
   271c4:	ldr	r2, [fp, #-12]
   271c8:	add	r0, r2, r3
   271cc:	ldr	r3, [fp, #-16]
   271d0:	lsl	r3, r3, #2
   271d4:	ldr	r2, [fp, #-12]
   271d8:	add	r1, r2, r3
   271dc:	ldr	r2, [fp, #-8]
   271e0:	ldr	r3, [fp, #-16]
   271e4:	sub	r2, r2, r3
   271e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   271ec:	bl	1d04c <__assert_fail@plt+0xbef4>
   271f0:	str	r0, [fp, #-24]	; 0xffffffe8
   271f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271f8:	cmp	r3, #0
   271fc:	beq	27220 <__assert_fail@plt+0x160c8>
   27200:	movw	r3, #24576	; 0x6000
   27204:	movt	r3, #3
   27208:	movw	r2, #3756	; 0xeac
   2720c:	movw	r1, #22376	; 0x5768
   27210:	movt	r1, #3
   27214:	movw	r0, #22928	; 0x5990
   27218:	movt	r0, #3
   2721c:	bl	11158 <__assert_fail@plt>
   27220:	ldr	r1, [fp, #-8]
   27224:	ldr	r0, [fp, #-12]
   27228:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   2722c:	str	r0, [fp, #-8]
   27230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27234:	ldr	r3, [r3, #4]
   27238:	cmp	r3, #0
   2723c:	bge	2724c <__assert_fail@plt+0x160f4>
   27240:	ldr	r3, [fp, #-8]
   27244:	rsb	r3, r3, #0
   27248:	b	27250 <__assert_fail@plt+0x160f8>
   2724c:	ldr	r3, [fp, #-8]
   27250:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27254:	str	r3, [r2, #4]
   27258:	nop	{0}
   2725c:	sub	sp, fp, #4
   27260:	ldr	fp, [sp]
   27264:	add	sp, sp, #4
   27268:	pop	{pc}		; (ldr pc, [sp], #4)
   2726c:	str	fp, [sp, #-8]!
   27270:	str	lr, [sp, #4]
   27274:	add	fp, sp, #4
   27278:	sub	sp, sp, #8
   2727c:	str	r0, [fp, #-8]
   27280:	str	r1, [fp, #-12]
   27284:	ldr	r1, [fp, #-12]
   27288:	ldr	r0, [fp, #-8]
   2728c:	bl	26e20 <__assert_fail@plt+0x15cc8>
   27290:	mov	r3, r0
   27294:	cmp	r3, #0
   27298:	bne	272c8 <__assert_fail@plt+0x16170>
   2729c:	ldr	r3, [fp, #-8]
   272a0:	ldr	r3, [r3, #4]
   272a4:	cmp	r3, #0
   272a8:	blt	272bc <__assert_fail@plt+0x16164>
   272ac:	ldr	r1, [fp, #-12]
   272b0:	ldr	r0, [fp, #-8]
   272b4:	bl	26f4c <__assert_fail@plt+0x15df4>
   272b8:	b	272c8 <__assert_fail@plt+0x16170>
   272bc:	ldr	r1, [fp, #-12]
   272c0:	ldr	r0, [fp, #-8]
   272c4:	bl	27134 <__assert_fail@plt+0x15fdc>
   272c8:	nop	{0}
   272cc:	sub	sp, fp, #4
   272d0:	ldr	fp, [sp]
   272d4:	add	sp, sp, #4
   272d8:	pop	{pc}		; (ldr pc, [sp], #4)
   272dc:	str	fp, [sp, #-8]!
   272e0:	str	lr, [sp, #4]
   272e4:	add	fp, sp, #4
   272e8:	sub	sp, sp, #8
   272ec:	str	r0, [fp, #-8]
   272f0:	str	r1, [fp, #-12]
   272f4:	ldr	r1, [fp, #-12]
   272f8:	ldr	r0, [fp, #-8]
   272fc:	bl	26e20 <__assert_fail@plt+0x15cc8>
   27300:	mov	r3, r0
   27304:	cmp	r3, #0
   27308:	beq	27338 <__assert_fail@plt+0x161e0>
   2730c:	ldr	r3, [fp, #-8]
   27310:	ldr	r3, [r3, #4]
   27314:	cmp	r3, #0
   27318:	blt	2732c <__assert_fail@plt+0x161d4>
   2731c:	ldr	r1, [fp, #-12]
   27320:	ldr	r0, [fp, #-8]
   27324:	bl	27134 <__assert_fail@plt+0x15fdc>
   27328:	b	27338 <__assert_fail@plt+0x161e0>
   2732c:	ldr	r1, [fp, #-12]
   27330:	ldr	r0, [fp, #-8]
   27334:	bl	26f4c <__assert_fail@plt+0x15df4>
   27338:	nop	{0}
   2733c:	sub	sp, fp, #4
   27340:	ldr	fp, [sp]
   27344:	add	sp, sp, #4
   27348:	pop	{pc}		; (ldr pc, [sp], #4)
   2734c:	str	fp, [sp, #-8]!
   27350:	str	lr, [sp, #4]
   27354:	add	fp, sp, #4
   27358:	sub	sp, sp, #8
   2735c:	str	r0, [fp, #-8]
   27360:	str	r1, [fp, #-12]
   27364:	ldr	r1, [fp, #-12]
   27368:	ldr	r0, [fp, #-8]
   2736c:	bl	26e20 <__assert_fail@plt+0x15cc8>
   27370:	mov	r2, r0
   27374:	ldr	r3, [fp, #-8]
   27378:	ldr	r3, [r3, #4]
   2737c:	lsr	r3, r3, #31
   27380:	uxtb	r3, r3
   27384:	cmp	r2, r3
   27388:	beq	2739c <__assert_fail@plt+0x16244>
   2738c:	ldr	r1, [fp, #-12]
   27390:	ldr	r0, [fp, #-8]
   27394:	bl	27134 <__assert_fail@plt+0x15fdc>
   27398:	b	273a8 <__assert_fail@plt+0x16250>
   2739c:	ldr	r1, [fp, #-12]
   273a0:	ldr	r0, [fp, #-8]
   273a4:	bl	26f4c <__assert_fail@plt+0x15df4>
   273a8:	nop	{0}
   273ac:	sub	sp, fp, #4
   273b0:	ldr	fp, [sp]
   273b4:	add	sp, sp, #4
   273b8:	pop	{pc}		; (ldr pc, [sp], #4)
   273bc:	str	fp, [sp, #-8]!
   273c0:	str	lr, [sp, #4]
   273c4:	add	fp, sp, #4
   273c8:	sub	sp, sp, #8
   273cc:	str	r0, [fp, #-8]
   273d0:	str	r1, [fp, #-12]
   273d4:	mov	r2, #1
   273d8:	ldr	r1, [fp, #-12]
   273dc:	ldr	r0, [fp, #-8]
   273e0:	bl	22364 <__assert_fail@plt+0x1120c>
   273e4:	ldr	r1, [fp, #-8]
   273e8:	ldr	r0, [fp, #-8]
   273ec:	bl	2227c <__assert_fail@plt+0x11124>
   273f0:	nop	{0}
   273f4:	sub	sp, fp, #4
   273f8:	ldr	fp, [sp]
   273fc:	add	sp, sp, #4
   27400:	pop	{pc}		; (ldr pc, [sp], #4)
   27404:	str	fp, [sp, #-8]!
   27408:	str	lr, [sp, #4]
   2740c:	add	fp, sp, #4
   27410:	sub	sp, sp, #88	; 0x58
   27414:	str	r0, [fp, #-80]	; 0xffffffb0
   27418:	str	r1, [fp, #-84]	; 0xffffffac
   2741c:	str	r2, [fp, #-88]	; 0xffffffa8
   27420:	ldr	r3, [fp, #-84]	; 0xffffffac
   27424:	ldr	r3, [r3, #4]
   27428:	cmp	r3, #0
   2742c:	rsblt	r3, r3, #0
   27430:	str	r3, [fp, #-8]
   27434:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27438:	ldr	r3, [r3, #4]
   2743c:	cmp	r3, #0
   27440:	rsblt	r3, r3, #0
   27444:	str	r3, [fp, #-12]
   27448:	ldr	r2, [fp, #-8]
   2744c:	ldr	r3, [fp, #-12]
   27450:	cmp	r2, r3
   27454:	bge	27488 <__assert_fail@plt+0x16330>
   27458:	ldr	r3, [fp, #-84]	; 0xffffffac
   2745c:	str	r3, [fp, #-36]	; 0xffffffdc
   27460:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27464:	str	r3, [fp, #-84]	; 0xffffffac
   27468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2746c:	str	r3, [fp, #-88]	; 0xffffffa8
   27470:	ldr	r3, [fp, #-8]
   27474:	str	r3, [fp, #-40]	; 0xffffffd8
   27478:	ldr	r3, [fp, #-12]
   2747c:	str	r3, [fp, #-8]
   27480:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27484:	str	r3, [fp, #-12]
   27488:	ldr	r3, [fp, #-12]
   2748c:	cmp	r3, #0
   27490:	bne	274a4 <__assert_fail@plt+0x1634c>
   27494:	ldr	r3, [fp, #-80]	; 0xffffffb0
   27498:	mov	r2, #0
   2749c:	str	r2, [r3, #4]
   274a0:	b	277c0 <__assert_fail@plt+0x16668>
   274a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   274a8:	ldr	r3, [r3, #4]
   274ac:	lsr	r3, r3, #31
   274b0:	uxtb	r3, r3
   274b4:	str	r3, [fp, #-24]	; 0xffffffe8
   274b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   274bc:	ldr	r3, [r3, #4]
   274c0:	lsr	r3, r3, #31
   274c4:	uxtb	r3, r3
   274c8:	str	r3, [fp, #-28]	; 0xffffffe4
   274cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   274d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   274d4:	and	r3, r3, r2
   274d8:	str	r3, [fp, #-32]	; 0xffffffe0
   274dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274e0:	rsb	r3, r3, #0
   274e4:	str	r3, [fp, #-44]	; 0xffffffd4
   274e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   274ec:	rsb	r3, r3, #0
   274f0:	str	r3, [fp, #-48]	; 0xffffffd0
   274f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   274f8:	rsb	r3, r3, #0
   274fc:	str	r3, [fp, #-52]	; 0xffffffcc
   27500:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27504:	cmp	r3, #0
   27508:	beq	27514 <__assert_fail@plt+0x163bc>
   2750c:	ldr	r3, [fp, #-8]
   27510:	b	27518 <__assert_fail@plt+0x163c0>
   27514:	ldr	r3, [fp, #-12]
   27518:	str	r3, [fp, #-16]
   2751c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27520:	ldr	r3, [fp, #-16]
   27524:	add	r2, r2, r3
   27528:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2752c:	ldr	r3, [r3]
   27530:	cmp	r2, r3
   27534:	ble	27558 <__assert_fail@plt+0x16400>
   27538:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2753c:	ldr	r3, [fp, #-16]
   27540:	add	r3, r2, r3
   27544:	mov	r1, r3
   27548:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2754c:	bl	20e04 <__assert_fail@plt+0xfcac>
   27550:	mov	r3, r0
   27554:	b	27560 <__assert_fail@plt+0x16408>
   27558:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2755c:	ldr	r3, [r3, #8]
   27560:	str	r3, [fp, #-56]	; 0xffffffc8
   27564:	ldr	r3, [fp, #-84]	; 0xffffffac
   27568:	ldr	r3, [r3, #8]
   2756c:	str	r3, [fp, #-60]	; 0xffffffc4
   27570:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27574:	ldr	r3, [r3, #8]
   27578:	str	r3, [fp, #-64]	; 0xffffffc0
   2757c:	mov	r3, #0
   27580:	str	r3, [fp, #-20]	; 0xffffffec
   27584:	ldr	r3, [fp, #-20]	; 0xffffffec
   27588:	lsl	r3, r3, #2
   2758c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   27590:	add	r3, r2, r3
   27594:	ldr	r2, [r3]
   27598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2759c:	eor	r3, r3, r2
   275a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   275a4:	add	r3, r2, r3
   275a8:	str	r3, [fp, #-68]	; 0xffffffbc
   275ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   275b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   275b4:	cmp	r2, r3
   275b8:	movcc	r3, #1
   275bc:	movcs	r3, #0
   275c0:	uxtb	r3, r3
   275c4:	str	r3, [fp, #-24]	; 0xffffffe8
   275c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   275cc:	lsl	r3, r3, #2
   275d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   275d4:	add	r3, r2, r3
   275d8:	ldr	r2, [r3]
   275dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   275e0:	eor	r3, r3, r2
   275e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   275e8:	add	r3, r2, r3
   275ec:	str	r3, [fp, #-72]	; 0xffffffb8
   275f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   275f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   275f8:	cmp	r2, r3
   275fc:	movcc	r3, #1
   27600:	movcs	r3, #0
   27604:	uxtb	r3, r3
   27608:	str	r3, [fp, #-28]	; 0xffffffe4
   2760c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   27610:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27614:	and	r2, r2, r3
   27618:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2761c:	eor	r3, r3, r2
   27620:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27624:	add	r3, r2, r3
   27628:	str	r3, [fp, #-76]	; 0xffffffb4
   2762c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   27630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27634:	cmp	r2, r3
   27638:	movcc	r3, #1
   2763c:	movcs	r3, #0
   27640:	uxtb	r3, r3
   27644:	str	r3, [fp, #-32]	; 0xffffffe0
   27648:	ldr	r3, [fp, #-20]	; 0xffffffec
   2764c:	lsl	r3, r3, #2
   27650:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27654:	add	r3, r2, r3
   27658:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2765c:	str	r2, [r3]
   27660:	ldr	r3, [fp, #-20]	; 0xffffffec
   27664:	add	r3, r3, #1
   27668:	str	r3, [fp, #-20]	; 0xffffffec
   2766c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27670:	ldr	r3, [fp, #-12]
   27674:	cmp	r2, r3
   27678:	blt	27584 <__assert_fail@plt+0x1642c>
   2767c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27680:	cmp	r3, #0
   27684:	beq	2774c <__assert_fail@plt+0x165f4>
   27688:	movw	r3, #24592	; 0x6010
   2768c:	movt	r3, #3
   27690:	movw	r2, #3854	; 0xf0e
   27694:	movw	r1, #22376	; 0x5768
   27698:	movt	r1, #3
   2769c:	movw	r0, #23516	; 0x5bdc
   276a0:	movt	r0, #3
   276a4:	bl	11158 <__assert_fail@plt>
   276a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   276ac:	lsl	r3, r3, #2
   276b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   276b4:	add	r3, r2, r3
   276b8:	ldr	r2, [r3]
   276bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   276c0:	eor	r3, r3, r2
   276c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   276c8:	add	r3, r2, r3
   276cc:	str	r3, [fp, #-68]	; 0xffffffbc
   276d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   276d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276d8:	cmp	r2, r3
   276dc:	movcc	r3, #1
   276e0:	movcs	r3, #0
   276e4:	uxtb	r3, r3
   276e8:	str	r3, [fp, #-24]	; 0xffffffe8
   276ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   276f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   276f4:	and	r2, r2, r3
   276f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   276fc:	eor	r3, r3, r2
   27700:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27704:	add	r3, r2, r3
   27708:	str	r3, [fp, #-76]	; 0xffffffb4
   2770c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   27710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27714:	cmp	r2, r3
   27718:	movcc	r3, #1
   2771c:	movcs	r3, #0
   27720:	uxtb	r3, r3
   27724:	str	r3, [fp, #-32]	; 0xffffffe0
   27728:	ldr	r3, [fp, #-20]	; 0xffffffec
   2772c:	lsl	r3, r3, #2
   27730:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27734:	add	r3, r2, r3
   27738:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2773c:	str	r2, [r3]
   27740:	ldr	r3, [fp, #-20]	; 0xffffffec
   27744:	add	r3, r3, #1
   27748:	str	r3, [fp, #-20]	; 0xffffffec
   2774c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27750:	ldr	r3, [fp, #-16]
   27754:	cmp	r2, r3
   27758:	blt	276a8 <__assert_fail@plt+0x16550>
   2775c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27760:	cmp	r3, #0
   27764:	beq	2778c <__assert_fail@plt+0x16634>
   27768:	ldr	r3, [fp, #-16]
   2776c:	add	r2, r3, #1
   27770:	str	r2, [fp, #-16]
   27774:	lsl	r3, r3, #2
   27778:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2777c:	add	r3, r2, r3
   27780:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27784:	str	r2, [r3]
   27788:	b	2779c <__assert_fail@plt+0x16644>
   2778c:	ldr	r1, [fp, #-16]
   27790:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27794:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   27798:	str	r0, [fp, #-16]
   2779c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   277a0:	cmp	r3, #0
   277a4:	beq	277b4 <__assert_fail@plt+0x1665c>
   277a8:	ldr	r3, [fp, #-16]
   277ac:	rsb	r3, r3, #0
   277b0:	b	277b8 <__assert_fail@plt+0x16660>
   277b4:	ldr	r3, [fp, #-16]
   277b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   277bc:	str	r3, [r2, #4]
   277c0:	sub	sp, fp, #4
   277c4:	ldr	fp, [sp]
   277c8:	add	sp, sp, #4
   277cc:	pop	{pc}		; (ldr pc, [sp], #4)
   277d0:	str	fp, [sp, #-8]!
   277d4:	str	lr, [sp, #4]
   277d8:	add	fp, sp, #4
   277dc:	sub	sp, sp, #88	; 0x58
   277e0:	str	r0, [fp, #-80]	; 0xffffffb0
   277e4:	str	r1, [fp, #-84]	; 0xffffffac
   277e8:	str	r2, [fp, #-88]	; 0xffffffa8
   277ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   277f0:	ldr	r3, [r3, #4]
   277f4:	cmp	r3, #0
   277f8:	rsblt	r3, r3, #0
   277fc:	str	r3, [fp, #-8]
   27800:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27804:	ldr	r3, [r3, #4]
   27808:	cmp	r3, #0
   2780c:	rsblt	r3, r3, #0
   27810:	str	r3, [fp, #-12]
   27814:	ldr	r2, [fp, #-8]
   27818:	ldr	r3, [fp, #-12]
   2781c:	cmp	r2, r3
   27820:	bge	27854 <__assert_fail@plt+0x166fc>
   27824:	ldr	r3, [fp, #-84]	; 0xffffffac
   27828:	str	r3, [fp, #-36]	; 0xffffffdc
   2782c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27830:	str	r3, [fp, #-84]	; 0xffffffac
   27834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27838:	str	r3, [fp, #-88]	; 0xffffffa8
   2783c:	ldr	r3, [fp, #-8]
   27840:	str	r3, [fp, #-40]	; 0xffffffd8
   27844:	ldr	r3, [fp, #-12]
   27848:	str	r3, [fp, #-8]
   2784c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27850:	str	r3, [fp, #-12]
   27854:	ldr	r3, [fp, #-12]
   27858:	cmp	r3, #0
   2785c:	bne	27870 <__assert_fail@plt+0x16718>
   27860:	ldr	r1, [fp, #-84]	; 0xffffffac
   27864:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27868:	bl	20ff0 <__assert_fail@plt+0xfe98>
   2786c:	b	27b8c <__assert_fail@plt+0x16a34>
   27870:	ldr	r3, [fp, #-84]	; 0xffffffac
   27874:	ldr	r3, [r3, #4]
   27878:	lsr	r3, r3, #31
   2787c:	uxtb	r3, r3
   27880:	str	r3, [fp, #-24]	; 0xffffffe8
   27884:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27888:	ldr	r3, [r3, #4]
   2788c:	lsr	r3, r3, #31
   27890:	uxtb	r3, r3
   27894:	str	r3, [fp, #-28]	; 0xffffffe4
   27898:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2789c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278a0:	orr	r3, r2, r3
   278a4:	str	r3, [fp, #-32]	; 0xffffffe0
   278a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   278ac:	rsb	r3, r3, #0
   278b0:	str	r3, [fp, #-44]	; 0xffffffd4
   278b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278b8:	rsb	r3, r3, #0
   278bc:	str	r3, [fp, #-48]	; 0xffffffd0
   278c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   278c4:	rsb	r3, r3, #0
   278c8:	str	r3, [fp, #-52]	; 0xffffffcc
   278cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   278d0:	cmp	r3, #0
   278d4:	beq	278e0 <__assert_fail@plt+0x16788>
   278d8:	ldr	r3, [fp, #-12]
   278dc:	b	278e4 <__assert_fail@plt+0x1678c>
   278e0:	ldr	r3, [fp, #-8]
   278e4:	str	r3, [fp, #-16]
   278e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   278ec:	ldr	r3, [fp, #-16]
   278f0:	add	r2, r2, r3
   278f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   278f8:	ldr	r3, [r3]
   278fc:	cmp	r2, r3
   27900:	ble	27924 <__assert_fail@plt+0x167cc>
   27904:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27908:	ldr	r3, [fp, #-16]
   2790c:	add	r3, r2, r3
   27910:	mov	r1, r3
   27914:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27918:	bl	20e04 <__assert_fail@plt+0xfcac>
   2791c:	mov	r3, r0
   27920:	b	2792c <__assert_fail@plt+0x167d4>
   27924:	ldr	r3, [fp, #-80]	; 0xffffffb0
   27928:	ldr	r3, [r3, #8]
   2792c:	str	r3, [fp, #-56]	; 0xffffffc8
   27930:	ldr	r3, [fp, #-84]	; 0xffffffac
   27934:	ldr	r3, [r3, #8]
   27938:	str	r3, [fp, #-60]	; 0xffffffc4
   2793c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27940:	ldr	r3, [r3, #8]
   27944:	str	r3, [fp, #-64]	; 0xffffffc0
   27948:	mov	r3, #0
   2794c:	str	r3, [fp, #-20]	; 0xffffffec
   27950:	ldr	r3, [fp, #-20]	; 0xffffffec
   27954:	lsl	r3, r3, #2
   27958:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2795c:	add	r3, r2, r3
   27960:	ldr	r2, [r3]
   27964:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27968:	eor	r3, r3, r2
   2796c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27970:	add	r3, r2, r3
   27974:	str	r3, [fp, #-68]	; 0xffffffbc
   27978:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2797c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27980:	cmp	r2, r3
   27984:	movcc	r3, #1
   27988:	movcs	r3, #0
   2798c:	uxtb	r3, r3
   27990:	str	r3, [fp, #-24]	; 0xffffffe8
   27994:	ldr	r3, [fp, #-20]	; 0xffffffec
   27998:	lsl	r3, r3, #2
   2799c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   279a0:	add	r3, r2, r3
   279a4:	ldr	r2, [r3]
   279a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   279ac:	eor	r3, r3, r2
   279b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   279b4:	add	r3, r2, r3
   279b8:	str	r3, [fp, #-72]	; 0xffffffb8
   279bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   279c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   279c4:	cmp	r2, r3
   279c8:	movcc	r3, #1
   279cc:	movcs	r3, #0
   279d0:	uxtb	r3, r3
   279d4:	str	r3, [fp, #-28]	; 0xffffffe4
   279d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   279dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   279e0:	orr	r2, r2, r3
   279e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   279e8:	eor	r3, r3, r2
   279ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   279f0:	add	r3, r2, r3
   279f4:	str	r3, [fp, #-76]	; 0xffffffb4
   279f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   279fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a00:	cmp	r2, r3
   27a04:	movcc	r3, #1
   27a08:	movcs	r3, #0
   27a0c:	uxtb	r3, r3
   27a10:	str	r3, [fp, #-32]	; 0xffffffe0
   27a14:	ldr	r3, [fp, #-20]	; 0xffffffec
   27a18:	lsl	r3, r3, #2
   27a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27a20:	add	r3, r2, r3
   27a24:	ldr	r2, [fp, #-76]	; 0xffffffb4
   27a28:	str	r2, [r3]
   27a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27a30:	add	r3, r3, #1
   27a34:	str	r3, [fp, #-20]	; 0xffffffec
   27a38:	ldr	r2, [fp, #-20]	; 0xffffffec
   27a3c:	ldr	r3, [fp, #-12]
   27a40:	cmp	r2, r3
   27a44:	blt	27950 <__assert_fail@plt+0x167f8>
   27a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27a4c:	cmp	r3, #0
   27a50:	beq	27b18 <__assert_fail@plt+0x169c0>
   27a54:	movw	r3, #24600	; 0x6018
   27a58:	movt	r3, #3
   27a5c:	movw	r2, #3927	; 0xf57
   27a60:	movw	r1, #22376	; 0x5768
   27a64:	movt	r1, #3
   27a68:	movw	r0, #23516	; 0x5bdc
   27a6c:	movt	r0, #3
   27a70:	bl	11158 <__assert_fail@plt>
   27a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   27a78:	lsl	r3, r3, #2
   27a7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   27a80:	add	r3, r2, r3
   27a84:	ldr	r2, [r3]
   27a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27a8c:	eor	r3, r3, r2
   27a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27a94:	add	r3, r2, r3
   27a98:	str	r3, [fp, #-68]	; 0xffffffbc
   27a9c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   27aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27aa4:	cmp	r2, r3
   27aa8:	movcc	r3, #1
   27aac:	movcs	r3, #0
   27ab0:	uxtb	r3, r3
   27ab4:	str	r3, [fp, #-24]	; 0xffffffe8
   27ab8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   27abc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27ac0:	orr	r2, r2, r3
   27ac4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27ac8:	eor	r3, r3, r2
   27acc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27ad0:	add	r3, r2, r3
   27ad4:	str	r3, [fp, #-76]	; 0xffffffb4
   27ad8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   27adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ae0:	cmp	r2, r3
   27ae4:	movcc	r3, #1
   27ae8:	movcs	r3, #0
   27aec:	uxtb	r3, r3
   27af0:	str	r3, [fp, #-32]	; 0xffffffe0
   27af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27af8:	lsl	r3, r3, #2
   27afc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27b00:	add	r3, r2, r3
   27b04:	ldr	r2, [fp, #-76]	; 0xffffffb4
   27b08:	str	r2, [r3]
   27b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b10:	add	r3, r3, #1
   27b14:	str	r3, [fp, #-20]	; 0xffffffec
   27b18:	ldr	r2, [fp, #-20]	; 0xffffffec
   27b1c:	ldr	r3, [fp, #-16]
   27b20:	cmp	r2, r3
   27b24:	blt	27a74 <__assert_fail@plt+0x1691c>
   27b28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b2c:	cmp	r3, #0
   27b30:	beq	27b58 <__assert_fail@plt+0x16a00>
   27b34:	ldr	r3, [fp, #-16]
   27b38:	add	r2, r3, #1
   27b3c:	str	r2, [fp, #-16]
   27b40:	lsl	r3, r3, #2
   27b44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27b48:	add	r3, r2, r3
   27b4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27b50:	str	r2, [r3]
   27b54:	b	27b68 <__assert_fail@plt+0x16a10>
   27b58:	ldr	r1, [fp, #-16]
   27b5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   27b60:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   27b64:	str	r0, [fp, #-16]
   27b68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27b6c:	cmp	r3, #0
   27b70:	beq	27b80 <__assert_fail@plt+0x16a28>
   27b74:	ldr	r3, [fp, #-16]
   27b78:	rsb	r3, r3, #0
   27b7c:	b	27b84 <__assert_fail@plt+0x16a2c>
   27b80:	ldr	r3, [fp, #-16]
   27b84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   27b88:	str	r3, [r2, #4]
   27b8c:	sub	sp, fp, #4
   27b90:	ldr	fp, [sp]
   27b94:	add	sp, sp, #4
   27b98:	pop	{pc}		; (ldr pc, [sp], #4)
   27b9c:	str	fp, [sp, #-8]!
   27ba0:	str	lr, [sp, #4]
   27ba4:	add	fp, sp, #4
   27ba8:	sub	sp, sp, #88	; 0x58
   27bac:	str	r0, [fp, #-80]	; 0xffffffb0
   27bb0:	str	r1, [fp, #-84]	; 0xffffffac
   27bb4:	str	r2, [fp, #-88]	; 0xffffffa8
   27bb8:	ldr	r3, [fp, #-84]	; 0xffffffac
   27bbc:	ldr	r3, [r3, #4]
   27bc0:	cmp	r3, #0
   27bc4:	rsblt	r3, r3, #0
   27bc8:	str	r3, [fp, #-8]
   27bcc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27bd0:	ldr	r3, [r3, #4]
   27bd4:	cmp	r3, #0
   27bd8:	rsblt	r3, r3, #0
   27bdc:	str	r3, [fp, #-12]
   27be0:	ldr	r2, [fp, #-8]
   27be4:	ldr	r3, [fp, #-12]
   27be8:	cmp	r2, r3
   27bec:	bge	27c20 <__assert_fail@plt+0x16ac8>
   27bf0:	ldr	r3, [fp, #-84]	; 0xffffffac
   27bf4:	str	r3, [fp, #-32]	; 0xffffffe0
   27bf8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27bfc:	str	r3, [fp, #-84]	; 0xffffffac
   27c00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27c04:	str	r3, [fp, #-88]	; 0xffffffa8
   27c08:	ldr	r3, [fp, #-8]
   27c0c:	str	r3, [fp, #-36]	; 0xffffffdc
   27c10:	ldr	r3, [fp, #-12]
   27c14:	str	r3, [fp, #-8]
   27c18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c1c:	str	r3, [fp, #-12]
   27c20:	ldr	r3, [fp, #-12]
   27c24:	cmp	r3, #0
   27c28:	bne	27c3c <__assert_fail@plt+0x16ae4>
   27c2c:	ldr	r1, [fp, #-84]	; 0xffffffac
   27c30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27c34:	bl	20ff0 <__assert_fail@plt+0xfe98>
   27c38:	b	27f34 <__assert_fail@plt+0x16ddc>
   27c3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   27c40:	ldr	r3, [r3, #4]
   27c44:	lsr	r3, r3, #31
   27c48:	uxtb	r3, r3
   27c4c:	str	r3, [fp, #-20]	; 0xffffffec
   27c50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27c54:	ldr	r3, [r3, #4]
   27c58:	lsr	r3, r3, #31
   27c5c:	uxtb	r3, r3
   27c60:	str	r3, [fp, #-24]	; 0xffffffe8
   27c64:	ldr	r2, [fp, #-20]	; 0xffffffec
   27c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c6c:	eor	r3, r3, r2
   27c70:	str	r3, [fp, #-28]	; 0xffffffe4
   27c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   27c78:	rsb	r3, r3, #0
   27c7c:	str	r3, [fp, #-40]	; 0xffffffd8
   27c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c84:	rsb	r3, r3, #0
   27c88:	str	r3, [fp, #-44]	; 0xffffffd4
   27c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27c90:	rsb	r3, r3, #0
   27c94:	str	r3, [fp, #-48]	; 0xffffffd0
   27c98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27c9c:	ldr	r3, [fp, #-8]
   27ca0:	add	r2, r2, r3
   27ca4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   27ca8:	ldr	r3, [r3]
   27cac:	cmp	r2, r3
   27cb0:	ble	27cd4 <__assert_fail@plt+0x16b7c>
   27cb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27cb8:	ldr	r3, [fp, #-8]
   27cbc:	add	r3, r2, r3
   27cc0:	mov	r1, r3
   27cc4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   27cc8:	bl	20e04 <__assert_fail@plt+0xfcac>
   27ccc:	mov	r3, r0
   27cd0:	b	27cdc <__assert_fail@plt+0x16b84>
   27cd4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   27cd8:	ldr	r3, [r3, #8]
   27cdc:	str	r3, [fp, #-52]	; 0xffffffcc
   27ce0:	ldr	r3, [fp, #-84]	; 0xffffffac
   27ce4:	ldr	r3, [r3, #8]
   27ce8:	str	r3, [fp, #-56]	; 0xffffffc8
   27cec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27cf0:	ldr	r3, [r3, #8]
   27cf4:	str	r3, [fp, #-60]	; 0xffffffc4
   27cf8:	mov	r3, #0
   27cfc:	str	r3, [fp, #-16]
   27d00:	ldr	r3, [fp, #-16]
   27d04:	lsl	r3, r3, #2
   27d08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27d0c:	add	r3, r2, r3
   27d10:	ldr	r2, [r3]
   27d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27d18:	eor	r3, r3, r2
   27d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27d20:	add	r3, r2, r3
   27d24:	str	r3, [fp, #-64]	; 0xffffffc0
   27d28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d30:	cmp	r2, r3
   27d34:	movcc	r3, #1
   27d38:	movcs	r3, #0
   27d3c:	uxtb	r3, r3
   27d40:	str	r3, [fp, #-20]	; 0xffffffec
   27d44:	ldr	r3, [fp, #-16]
   27d48:	lsl	r3, r3, #2
   27d4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   27d50:	add	r3, r2, r3
   27d54:	ldr	r2, [r3]
   27d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27d5c:	eor	r3, r3, r2
   27d60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27d64:	add	r3, r2, r3
   27d68:	str	r3, [fp, #-68]	; 0xffffffbc
   27d6c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   27d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d74:	cmp	r2, r3
   27d78:	movcc	r3, #1
   27d7c:	movcs	r3, #0
   27d80:	uxtb	r3, r3
   27d84:	str	r3, [fp, #-24]	; 0xffffffe8
   27d88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27d8c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27d90:	eor	r2, r2, r3
   27d94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27d98:	eor	r3, r3, r2
   27d9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27da0:	add	r3, r2, r3
   27da4:	str	r3, [fp, #-72]	; 0xffffffb8
   27da8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27db0:	cmp	r2, r3
   27db4:	movcc	r3, #1
   27db8:	movcs	r3, #0
   27dbc:	uxtb	r3, r3
   27dc0:	str	r3, [fp, #-28]	; 0xffffffe4
   27dc4:	ldr	r3, [fp, #-16]
   27dc8:	lsl	r3, r3, #2
   27dcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27dd0:	add	r3, r2, r3
   27dd4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27dd8:	str	r2, [r3]
   27ddc:	ldr	r3, [fp, #-16]
   27de0:	add	r3, r3, #1
   27de4:	str	r3, [fp, #-16]
   27de8:	ldr	r2, [fp, #-16]
   27dec:	ldr	r3, [fp, #-12]
   27df0:	cmp	r2, r3
   27df4:	blt	27d00 <__assert_fail@plt+0x16ba8>
   27df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27dfc:	cmp	r3, #0
   27e00:	beq	27ec0 <__assert_fail@plt+0x16d68>
   27e04:	movw	r3, #24608	; 0x6020
   27e08:	movt	r3, #3
   27e0c:	movw	r2, #3996	; 0xf9c
   27e10:	movw	r1, #22376	; 0x5768
   27e14:	movt	r1, #3
   27e18:	movw	r0, #23516	; 0x5bdc
   27e1c:	movt	r0, #3
   27e20:	bl	11158 <__assert_fail@plt>
   27e24:	ldr	r3, [fp, #-16]
   27e28:	lsl	r3, r3, #2
   27e2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27e30:	add	r3, r2, r3
   27e34:	ldr	r2, [r3]
   27e38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27e3c:	eor	r3, r3, r2
   27e40:	ldr	r2, [fp, #-20]	; 0xffffffec
   27e44:	add	r3, r2, r3
   27e48:	str	r3, [fp, #-64]	; 0xffffffc0
   27e4c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   27e54:	cmp	r2, r3
   27e58:	movcc	r3, #1
   27e5c:	movcs	r3, #0
   27e60:	uxtb	r3, r3
   27e64:	str	r3, [fp, #-20]	; 0xffffffec
   27e68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27e70:	eor	r3, r3, r2
   27e74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27e78:	add	r3, r2, r3
   27e7c:	str	r3, [fp, #-72]	; 0xffffffb8
   27e80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27e84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27e88:	cmp	r2, r3
   27e8c:	movcc	r3, #1
   27e90:	movcs	r3, #0
   27e94:	uxtb	r3, r3
   27e98:	str	r3, [fp, #-28]	; 0xffffffe4
   27e9c:	ldr	r3, [fp, #-16]
   27ea0:	lsl	r3, r3, #2
   27ea4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27ea8:	add	r3, r2, r3
   27eac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27eb0:	str	r2, [r3]
   27eb4:	ldr	r3, [fp, #-16]
   27eb8:	add	r3, r3, #1
   27ebc:	str	r3, [fp, #-16]
   27ec0:	ldr	r2, [fp, #-16]
   27ec4:	ldr	r3, [fp, #-8]
   27ec8:	cmp	r2, r3
   27ecc:	blt	27e24 <__assert_fail@plt+0x16ccc>
   27ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27ed4:	cmp	r3, #0
   27ed8:	beq	27f00 <__assert_fail@plt+0x16da8>
   27edc:	ldr	r3, [fp, #-8]
   27ee0:	add	r2, r3, #1
   27ee4:	str	r2, [fp, #-8]
   27ee8:	lsl	r3, r3, #2
   27eec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   27ef0:	add	r3, r2, r3
   27ef4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27ef8:	str	r2, [r3]
   27efc:	b	27f10 <__assert_fail@plt+0x16db8>
   27f00:	ldr	r1, [fp, #-8]
   27f04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   27f08:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   27f0c:	str	r0, [fp, #-8]
   27f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27f14:	cmp	r3, #0
   27f18:	beq	27f28 <__assert_fail@plt+0x16dd0>
   27f1c:	ldr	r3, [fp, #-8]
   27f20:	rsb	r3, r3, #0
   27f24:	b	27f2c <__assert_fail@plt+0x16dd4>
   27f28:	ldr	r3, [fp, #-8]
   27f2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   27f30:	str	r3, [r2, #4]
   27f34:	sub	sp, fp, #4
   27f38:	ldr	fp, [sp]
   27f3c:	add	sp, sp, #4
   27f40:	pop	{pc}		; (ldr pc, [sp], #4)
   27f44:	push	{fp}		; (str fp, [sp, #-4]!)
   27f48:	add	fp, sp, #0
   27f4c:	sub	sp, sp, #28
   27f50:	str	r0, [fp, #-24]	; 0xffffffe8
   27f54:	mov	r3, #16
   27f58:	str	r3, [fp, #-12]
   27f5c:	mov	r3, #0
   27f60:	str	r3, [fp, #-8]
   27f64:	b	28010 <__assert_fail@plt+0x16eb8>
   27f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27f6c:	lsr	r2, r3, #1
   27f70:	movw	r3, #21845	; 0x5555
   27f74:	and	r3, r3, r2
   27f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27f7c:	sub	r3, r2, r3
   27f80:	str	r3, [fp, #-16]
   27f84:	ldr	r3, [fp, #-16]
   27f88:	lsr	r3, r3, #2
   27f8c:	movw	r2, #13107	; 0x3333
   27f90:	and	r2, r2, r3
   27f94:	ldr	r1, [fp, #-16]
   27f98:	movw	r3, #13107	; 0x3333
   27f9c:	and	r3, r3, r1
   27fa0:	add	r3, r2, r3
   27fa4:	str	r3, [fp, #-16]
   27fa8:	ldr	r3, [fp, #-16]
   27fac:	lsr	r3, r3, #4
   27fb0:	ldr	r2, [fp, #-16]
   27fb4:	add	r3, r2, r3
   27fb8:	str	r3, [fp, #-16]
   27fbc:	ldr	r3, [fp, #-16]
   27fc0:	lsr	r3, r3, #8
   27fc4:	and	r2, r3, #15
   27fc8:	ldr	r3, [fp, #-16]
   27fcc:	and	r3, r3, #15
   27fd0:	add	r3, r2, r3
   27fd4:	str	r3, [fp, #-16]
   27fd8:	ldr	r2, [fp, #-8]
   27fdc:	ldr	r3, [fp, #-16]
   27fe0:	add	r3, r2, r3
   27fe4:	str	r3, [fp, #-8]
   27fe8:	ldr	r3, [fp, #-12]
   27fec:	cmp	r3, #31
   27ff0:	bhi	28008 <__assert_fail@plt+0x16eb0>
   27ff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27ff8:	ldr	r3, [fp, #-12]
   27ffc:	lsr	r3, r2, r3
   28000:	str	r3, [fp, #-24]	; 0xffffffe8
   28004:	b	28010 <__assert_fail@plt+0x16eb8>
   28008:	mov	r3, #0
   2800c:	str	r3, [fp, #-24]	; 0xffffffe8
   28010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28014:	cmp	r3, #0
   28018:	bne	27f68 <__assert_fail@plt+0x16e10>
   2801c:	ldr	r3, [fp, #-8]
   28020:	mov	r0, r3
   28024:	add	sp, fp, #0
   28028:	pop	{fp}		; (ldr fp, [sp], #4)
   2802c:	bx	lr
   28030:	str	fp, [sp, #-8]!
   28034:	str	lr, [sp, #4]
   28038:	add	fp, sp, #4
   2803c:	sub	sp, sp, #16
   28040:	str	r0, [fp, #-16]
   28044:	str	r1, [fp, #-20]	; 0xffffffec
   28048:	mov	r3, #0
   2804c:	str	r3, [fp, #-12]
   28050:	mov	r3, #0
   28054:	str	r3, [fp, #-8]
   28058:	b	28094 <__assert_fail@plt+0x16f3c>
   2805c:	ldr	r3, [fp, #-8]
   28060:	lsl	r3, r3, #2
   28064:	ldr	r2, [fp, #-16]
   28068:	add	r3, r2, r3
   2806c:	ldr	r3, [r3]
   28070:	mov	r0, r3
   28074:	bl	27f44 <__assert_fail@plt+0x16dec>
   28078:	mov	r2, r0
   2807c:	ldr	r3, [fp, #-12]
   28080:	add	r3, r3, r2
   28084:	str	r3, [fp, #-12]
   28088:	ldr	r3, [fp, #-8]
   2808c:	add	r3, r3, #1
   28090:	str	r3, [fp, #-8]
   28094:	ldr	r2, [fp, #-8]
   28098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2809c:	cmp	r2, r3
   280a0:	blt	2805c <__assert_fail@plt+0x16f04>
   280a4:	ldr	r3, [fp, #-12]
   280a8:	mov	r0, r3
   280ac:	sub	sp, fp, #4
   280b0:	ldr	fp, [sp]
   280b4:	add	sp, sp, #4
   280b8:	pop	{pc}		; (ldr pc, [sp], #4)
   280bc:	str	fp, [sp, #-8]!
   280c0:	str	lr, [sp, #4]
   280c4:	add	fp, sp, #4
   280c8:	sub	sp, sp, #16
   280cc:	str	r0, [fp, #-16]
   280d0:	ldr	r3, [fp, #-16]
   280d4:	ldr	r3, [r3, #4]
   280d8:	str	r3, [fp, #-8]
   280dc:	ldr	r3, [fp, #-8]
   280e0:	cmp	r3, #0
   280e4:	bge	280f0 <__assert_fail@plt+0x16f98>
   280e8:	mvn	r3, #0
   280ec:	b	28108 <__assert_fail@plt+0x16fb0>
   280f0:	ldr	r3, [fp, #-16]
   280f4:	ldr	r3, [r3, #8]
   280f8:	ldr	r1, [fp, #-8]
   280fc:	mov	r0, r3
   28100:	bl	28030 <__assert_fail@plt+0x16ed8>
   28104:	mov	r3, r0
   28108:	mov	r0, r3
   2810c:	sub	sp, fp, #4
   28110:	ldr	fp, [sp]
   28114:	add	sp, sp, #4
   28118:	pop	{pc}		; (ldr pc, [sp], #4)
   2811c:	str	fp, [sp, #-8]!
   28120:	str	lr, [sp, #4]
   28124:	add	fp, sp, #4
   28128:	sub	sp, sp, #64	; 0x40
   2812c:	str	r0, [fp, #-64]	; 0xffffffc0
   28130:	str	r1, [fp, #-68]	; 0xffffffbc
   28134:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28138:	ldr	r3, [r3, #4]
   2813c:	str	r3, [fp, #-8]
   28140:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28144:	ldr	r3, [r3, #4]
   28148:	str	r3, [fp, #-12]
   2814c:	ldr	r2, [fp, #-8]
   28150:	ldr	r3, [fp, #-12]
   28154:	eor	r3, r3, r2
   28158:	cmp	r3, #0
   2815c:	bge	28168 <__assert_fail@plt+0x17010>
   28160:	mvn	r3, #0
   28164:	b	283c4 <__assert_fail@plt+0x1726c>
   28168:	ldr	r3, [fp, #-8]
   2816c:	lsr	r3, r3, #31
   28170:	uxtb	r3, r3
   28174:	str	r3, [fp, #-24]	; 0xffffffe8
   28178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2817c:	str	r3, [fp, #-20]	; 0xffffffec
   28180:	ldr	r3, [fp, #-20]	; 0xffffffec
   28184:	rsb	r3, r3, #0
   28188:	str	r3, [fp, #-40]	; 0xffffffd8
   2818c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28190:	cmp	r3, #0
   28194:	beq	281dc <__assert_fail@plt+0x17084>
   28198:	ldr	r3, [fp, #-12]
   2819c:	cmp	r3, #0
   281a0:	blt	281c4 <__assert_fail@plt+0x1706c>
   281a4:	movw	r3, #24616	; 0x6028
   281a8:	movt	r3, #3
   281ac:	movw	r2, #4079	; 0xfef
   281b0:	movw	r1, #22376	; 0x5768
   281b4:	movt	r1, #3
   281b8:	movw	r0, #23524	; 0x5be4
   281bc:	movt	r0, #3
   281c0:	bl	11158 <__assert_fail@plt>
   281c4:	ldr	r3, [fp, #-8]
   281c8:	rsb	r3, r3, #0
   281cc:	str	r3, [fp, #-8]
   281d0:	ldr	r3, [fp, #-12]
   281d4:	rsb	r3, r3, #0
   281d8:	str	r3, [fp, #-12]
   281dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   281e0:	ldr	r3, [r3, #8]
   281e4:	str	r3, [fp, #-28]	; 0xffffffe4
   281e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   281ec:	ldr	r3, [r3, #8]
   281f0:	str	r3, [fp, #-32]	; 0xffffffe0
   281f4:	ldr	r2, [fp, #-8]
   281f8:	ldr	r3, [fp, #-12]
   281fc:	cmp	r2, r3
   28200:	bge	28234 <__assert_fail@plt+0x170dc>
   28204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28208:	str	r3, [fp, #-44]	; 0xffffffd4
   2820c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28210:	str	r3, [fp, #-28]	; 0xffffffe4
   28214:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28218:	str	r3, [fp, #-32]	; 0xffffffe0
   2821c:	ldr	r3, [fp, #-8]
   28220:	str	r3, [fp, #-48]	; 0xffffffd0
   28224:	ldr	r3, [fp, #-12]
   28228:	str	r3, [fp, #-8]
   2822c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28230:	str	r3, [fp, #-12]
   28234:	mov	r3, #0
   28238:	str	r3, [fp, #-16]
   2823c:	mov	r3, #0
   28240:	str	r3, [fp, #-36]	; 0xffffffdc
   28244:	b	28300 <__assert_fail@plt+0x171a8>
   28248:	ldr	r3, [fp, #-16]
   2824c:	lsl	r3, r3, #2
   28250:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28254:	add	r3, r2, r3
   28258:	ldr	r2, [r3]
   2825c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28260:	eor	r3, r3, r2
   28264:	ldr	r2, [fp, #-20]	; 0xffffffec
   28268:	add	r3, r2, r3
   2826c:	str	r3, [fp, #-52]	; 0xffffffcc
   28270:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28274:	ldr	r3, [fp, #-20]	; 0xffffffec
   28278:	cmp	r2, r3
   2827c:	movcc	r3, #1
   28280:	movcs	r3, #0
   28284:	uxtb	r3, r3
   28288:	str	r3, [fp, #-20]	; 0xffffffec
   2828c:	ldr	r3, [fp, #-16]
   28290:	lsl	r3, r3, #2
   28294:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28298:	add	r3, r2, r3
   2829c:	ldr	r2, [r3]
   282a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282a4:	eor	r3, r3, r2
   282a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   282ac:	add	r3, r2, r3
   282b0:	str	r3, [fp, #-56]	; 0xffffffc8
   282b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   282b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   282bc:	cmp	r2, r3
   282c0:	movcc	r3, #1
   282c4:	movcs	r3, #0
   282c8:	uxtb	r3, r3
   282cc:	str	r3, [fp, #-24]	; 0xffffffe8
   282d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   282d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   282d8:	eor	r3, r3, r2
   282dc:	mov	r0, r3
   282e0:	bl	27f44 <__assert_fail@plt+0x16dec>
   282e4:	mov	r2, r0
   282e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   282ec:	add	r3, r3, r2
   282f0:	str	r3, [fp, #-36]	; 0xffffffdc
   282f4:	ldr	r3, [fp, #-16]
   282f8:	add	r3, r3, #1
   282fc:	str	r3, [fp, #-16]
   28300:	ldr	r2, [fp, #-16]
   28304:	ldr	r3, [fp, #-12]
   28308:	cmp	r2, r3
   2830c:	blt	28248 <__assert_fail@plt+0x170f0>
   28310:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28314:	cmp	r3, #0
   28318:	beq	283b0 <__assert_fail@plt+0x17258>
   2831c:	movw	r3, #24616	; 0x6028
   28320:	movt	r3, #3
   28324:	movw	r2, #4100	; 0x1004
   28328:	movw	r1, #22376	; 0x5768
   2832c:	movt	r1, #3
   28330:	movw	r0, #23516	; 0x5bdc
   28334:	movt	r0, #3
   28338:	bl	11158 <__assert_fail@plt>
   2833c:	ldr	r3, [fp, #-16]
   28340:	lsl	r3, r3, #2
   28344:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28348:	add	r3, r2, r3
   2834c:	ldr	r2, [r3]
   28350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28354:	eor	r3, r3, r2
   28358:	ldr	r2, [fp, #-20]	; 0xffffffec
   2835c:	add	r3, r2, r3
   28360:	str	r3, [fp, #-52]	; 0xffffffcc
   28364:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2836c:	cmp	r2, r3
   28370:	movcc	r3, #1
   28374:	movcs	r3, #0
   28378:	uxtb	r3, r3
   2837c:	str	r3, [fp, #-20]	; 0xffffffec
   28380:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28388:	eor	r3, r3, r2
   2838c:	mov	r0, r3
   28390:	bl	27f44 <__assert_fail@plt+0x16dec>
   28394:	mov	r2, r0
   28398:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2839c:	add	r3, r3, r2
   283a0:	str	r3, [fp, #-36]	; 0xffffffdc
   283a4:	ldr	r3, [fp, #-16]
   283a8:	add	r3, r3, #1
   283ac:	str	r3, [fp, #-16]
   283b0:	ldr	r2, [fp, #-16]
   283b4:	ldr	r3, [fp, #-8]
   283b8:	cmp	r2, r3
   283bc:	blt	2833c <__assert_fail@plt+0x171e4>
   283c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   283c4:	mov	r0, r3
   283c8:	sub	sp, fp, #4
   283cc:	ldr	fp, [sp]
   283d0:	add	sp, sp, #4
   283d4:	pop	{pc}		; (ldr pc, [sp], #4)
   283d8:	str	fp, [sp, #-8]!
   283dc:	str	lr, [sp, #4]
   283e0:	add	fp, sp, #4
   283e4:	sub	sp, sp, #40	; 0x28
   283e8:	str	r0, [fp, #-32]	; 0xffffffe0
   283ec:	str	r1, [fp, #-36]	; 0xffffffdc
   283f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   283f4:	ldr	r3, [r3, #4]
   283f8:	str	r3, [fp, #-16]
   283fc:	ldr	r3, [fp, #-16]
   28400:	cmp	r3, #0
   28404:	rsblt	r3, r3, #0
   28408:	str	r3, [fp, #-20]	; 0xffffffec
   2840c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28410:	lsr	r3, r3, #5
   28414:	str	r3, [fp, #-24]	; 0xffffffe8
   28418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2841c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28420:	cmp	r2, r3
   28424:	blt	28444 <__assert_fail@plt+0x172ec>
   28428:	ldr	r3, [fp, #-16]
   2842c:	cmp	r3, #0
   28430:	bge	2843c <__assert_fail@plt+0x172e4>
   28434:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28438:	b	2850c <__assert_fail@plt+0x173b4>
   2843c:	mvn	r3, #0
   28440:	b	2850c <__assert_fail@plt+0x173b4>
   28444:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28448:	ldr	r3, [r3, #8]
   2844c:	str	r3, [fp, #-28]	; 0xffffffe4
   28450:	mov	r3, #0
   28454:	str	r3, [fp, #-12]
   28458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2845c:	lsl	r3, r3, #2
   28460:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28464:	add	r3, r2, r3
   28468:	ldr	r3, [r3]
   2846c:	str	r3, [fp, #-8]
   28470:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28474:	cmp	r3, #0
   28478:	beq	284ec <__assert_fail@plt+0x17394>
   2847c:	ldr	r3, [fp, #-16]
   28480:	cmp	r3, #0
   28484:	bge	284d0 <__assert_fail@plt+0x17378>
   28488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2848c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28490:	bl	1ccf8 <__assert_fail@plt+0xbba0>
   28494:	mov	r3, r0
   28498:	str	r3, [fp, #-12]
   2849c:	ldr	r2, [fp, #-12]
   284a0:	ldr	r3, [fp, #-8]
   284a4:	sub	r3, r2, r3
   284a8:	sub	r3, r3, #1
   284ac:	str	r3, [fp, #-8]
   284b0:	ldr	r2, [fp, #-8]
   284b4:	ldr	r3, [fp, #-12]
   284b8:	cmp	r2, r3
   284bc:	movcs	r3, #1
   284c0:	movcc	r3, #0
   284c4:	uxtb	r3, r3
   284c8:	rsb	r3, r3, #0
   284cc:	str	r3, [fp, #-12]
   284d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   284d4:	and	r3, r3, #31
   284d8:	mvn	r2, #0
   284dc:	lsl	r3, r2, r3
   284e0:	ldr	r2, [fp, #-8]
   284e4:	and	r3, r3, r2
   284e8:	str	r3, [fp, #-8]
   284ec:	ldr	r3, [fp, #-12]
   284f0:	str	r3, [sp]
   284f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   284f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   284fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28500:	ldr	r0, [fp, #-8]
   28504:	bl	1dec8 <__assert_fail@plt+0xcd70>
   28508:	mov	r3, r0
   2850c:	mov	r0, r3
   28510:	sub	sp, fp, #4
   28514:	ldr	fp, [sp]
   28518:	add	sp, sp, #4
   2851c:	pop	{pc}		; (ldr pc, [sp], #4)
   28520:	str	fp, [sp, #-8]!
   28524:	str	lr, [sp, #4]
   28528:	add	fp, sp, #4
   2852c:	sub	sp, sp, #40	; 0x28
   28530:	str	r0, [fp, #-32]	; 0xffffffe0
   28534:	str	r1, [fp, #-36]	; 0xffffffdc
   28538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2853c:	ldr	r3, [r3, #4]
   28540:	str	r3, [fp, #-12]
   28544:	ldr	r3, [fp, #-12]
   28548:	mvn	r3, r3
   2854c:	lsr	r3, r3, #31
   28550:	uxtb	r3, r3
   28554:	rsb	r3, r3, #0
   28558:	str	r3, [fp, #-16]
   2855c:	ldr	r3, [fp, #-12]
   28560:	cmp	r3, #0
   28564:	rsblt	r3, r3, #0
   28568:	str	r3, [fp, #-20]	; 0xffffffec
   2856c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28570:	lsr	r3, r3, #5
   28574:	str	r3, [fp, #-24]	; 0xffffffe8
   28578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2857c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28580:	cmp	r2, r3
   28584:	blt	285a4 <__assert_fail@plt+0x1744c>
   28588:	ldr	r3, [fp, #-16]
   2858c:	cmp	r3, #0
   28590:	beq	2859c <__assert_fail@plt+0x17444>
   28594:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28598:	b	28638 <__assert_fail@plt+0x174e0>
   2859c:	mvn	r3, #0
   285a0:	b	28638 <__assert_fail@plt+0x174e0>
   285a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   285a8:	ldr	r3, [r3, #8]
   285ac:	str	r3, [fp, #-28]	; 0xffffffe4
   285b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   285b4:	lsl	r3, r3, #2
   285b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   285bc:	add	r3, r2, r3
   285c0:	ldr	r3, [r3]
   285c4:	ldr	r2, [fp, #-16]
   285c8:	eor	r3, r3, r2
   285cc:	str	r3, [fp, #-8]
   285d0:	ldr	r3, [fp, #-16]
   285d4:	cmp	r3, #0
   285d8:	bne	285fc <__assert_fail@plt+0x174a4>
   285dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   285e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   285e4:	bl	1ccf8 <__assert_fail@plt+0xbba0>
   285e8:	mov	r3, r0
   285ec:	mov	r2, r3
   285f0:	ldr	r3, [fp, #-8]
   285f4:	sub	r3, r3, r2
   285f8:	str	r3, [fp, #-8]
   285fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28600:	and	r3, r3, #31
   28604:	mvn	r2, #0
   28608:	lsl	r3, r2, r3
   2860c:	ldr	r2, [fp, #-8]
   28610:	and	r3, r3, r2
   28614:	str	r3, [fp, #-8]
   28618:	ldr	r3, [fp, #-16]
   2861c:	str	r3, [sp]
   28620:	ldr	r3, [fp, #-20]	; 0xffffffec
   28624:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28628:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2862c:	ldr	r0, [fp, #-8]
   28630:	bl	1dec8 <__assert_fail@plt+0xcd70>
   28634:	mov	r3, r0
   28638:	mov	r0, r3
   2863c:	sub	sp, fp, #4
   28640:	ldr	fp, [sp]
   28644:	add	sp, sp, #4
   28648:	pop	{pc}		; (ldr pc, [sp], #4)
   2864c:	str	r4, [sp, #-12]!
   28650:	str	fp, [sp, #4]
   28654:	str	lr, [sp, #8]
   28658:	add	fp, sp, #8
   2865c:	sub	sp, sp, #52	; 0x34
   28660:	str	r0, [fp, #-56]	; 0xffffffc8
   28664:	str	r1, [fp, #-60]	; 0xffffffc4
   28668:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2866c:	cmp	r3, #1
   28670:	bgt	28694 <__assert_fail@plt+0x1753c>
   28674:	movw	r3, #24628	; 0x6034
   28678:	movt	r3, #3
   2867c:	movw	r2, #4191	; 0x105f
   28680:	movw	r1, #22376	; 0x5768
   28684:	movt	r1, #3
   28688:	movw	r0, #23532	; 0x5bec
   2868c:	movt	r0, #3
   28690:	bl	11158 <__assert_fail@plt>
   28694:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28698:	cmp	r3, #62	; 0x3e
   2869c:	ble	286c0 <__assert_fail@plt+0x17568>
   286a0:	movw	r3, #24628	; 0x6034
   286a4:	movt	r3, #3
   286a8:	movw	r2, #4192	; 0x1060
   286ac:	movw	r1, #22376	; 0x5768
   286b0:	movt	r1, #3
   286b4:	movw	r0, #23544	; 0x5bf8
   286b8:	movt	r0, #3
   286bc:	bl	11158 <__assert_fail@plt>
   286c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   286c4:	ldr	r3, [r3, #4]
   286c8:	cmp	r3, #0
   286cc:	rsblt	r3, r3, #0
   286d0:	str	r3, [fp, #-24]	; 0xffffffe8
   286d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   286d8:	cmp	r3, #0
   286dc:	bne	286e8 <__assert_fail@plt+0x17590>
   286e0:	mov	r3, #1
   286e4:	b	288d0 <__assert_fail@plt+0x17778>
   286e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   286ec:	ldr	r3, [r3, #8]
   286f0:	str	r3, [fp, #-28]	; 0xffffffe4
   286f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   286f8:	sub	r3, r3, #1
   286fc:	lsl	r4, r3, #5
   28700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28704:	sub	r3, r3, #-1073741823	; 0xc0000001
   28708:	lsl	r3, r3, #2
   2870c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28710:	add	r3, r2, r3
   28714:	ldr	r3, [r3]
   28718:	mov	r0, r3
   2871c:	bl	2005c <__assert_fail@plt+0xef04>
   28720:	mov	r3, r0
   28724:	add	r3, r4, r3
   28728:	str	r3, [fp, #-32]	; 0xffffffe0
   2872c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28730:	sub	r3, r3, #2
   28734:	cmp	r3, #30
   28738:	ldrls	pc, [pc, r3, lsl #2]
   2873c:	b	2881c <__assert_fail@plt+0x176c4>
   28740:			; <UNDEFINED> instruction: 0x000287bc
   28744:	andeq	r8, r2, ip, lsl r8
   28748:	andeq	r8, r2, r4, asr #15
   2874c:	andeq	r8, r2, ip, lsl r8
   28750:	andeq	r8, r2, ip, lsl r8
   28754:	andeq	r8, r2, ip, lsl r8
   28758:	ldrdeq	r8, [r2], -r4
   2875c:	andeq	r8, r2, ip, lsl r8
   28760:	andeq	r8, r2, ip, lsl r8
   28764:	andeq	r8, r2, ip, lsl r8
   28768:	andeq	r8, r2, ip, lsl r8
   2876c:	andeq	r8, r2, ip, lsl r8
   28770:	andeq	r8, r2, ip, lsl r8
   28774:	andeq	r8, r2, ip, lsl r8
   28778:	strdeq	r8, [r2], -r0
   2877c:	andeq	r8, r2, ip, lsl r8
   28780:	andeq	r8, r2, ip, lsl r8
   28784:	andeq	r8, r2, ip, lsl r8
   28788:	andeq	r8, r2, ip, lsl r8
   2878c:	andeq	r8, r2, ip, lsl r8
   28790:	andeq	r8, r2, ip, lsl r8
   28794:	andeq	r8, r2, ip, lsl r8
   28798:	andeq	r8, r2, ip, lsl r8
   2879c:	andeq	r8, r2, ip, lsl r8
   287a0:	andeq	r8, r2, ip, lsl r8
   287a4:	andeq	r8, r2, ip, lsl r8
   287a8:	andeq	r8, r2, ip, lsl r8
   287ac:	andeq	r8, r2, ip, lsl r8
   287b0:	andeq	r8, r2, ip, lsl r8
   287b4:	andeq	r8, r2, ip, lsl r8
   287b8:	andeq	r8, r2, r0, lsl #16
   287bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287c0:	b	288d0 <__assert_fail@plt+0x17778>
   287c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287c8:	add	r3, r3, #1
   287cc:	lsr	r3, r3, #1
   287d0:	b	288d0 <__assert_fail@plt+0x17778>
   287d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287d8:	add	r2, r3, #2
   287dc:	movw	r3, #43691	; 0xaaab
   287e0:	movt	r3, #43690	; 0xaaaa
   287e4:	umull	r2, r3, r3, r2
   287e8:	lsr	r3, r3, #1
   287ec:	b	288d0 <__assert_fail@plt+0x17778>
   287f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   287f4:	add	r3, r3, #3
   287f8:	lsr	r3, r3, #2
   287fc:	b	288d0 <__assert_fail@plt+0x17778>
   28800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28804:	add	r2, r3, #4
   28808:	movw	r3, #52429	; 0xcccd
   2880c:	movt	r3, #52428	; 0xcccc
   28810:	umull	r2, r3, r3, r2
   28814:	lsr	r3, r3, #2
   28818:	b	288d0 <__assert_fail@plt+0x17778>
   2881c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28820:	bl	1c968 <__assert_fail@plt+0xb810>
   28824:	str	r0, [fp, #-36]	; 0xffffffdc
   28828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2882c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28834:	bl	1ca80 <__assert_fail@plt+0xb928>
   28838:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2883c:	sub	r3, fp, #52	; 0x34
   28840:	mov	r1, r2
   28844:	mov	r0, r3
   28848:	bl	1e69c <__assert_fail@plt+0xd544>
   2884c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28850:	str	r3, [fp, #-16]
   28854:	mov	r3, #0
   28858:	str	r3, [fp, #-20]	; 0xffffffec
   2885c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28860:	add	r3, r3, #1
   28864:	str	r3, [fp, #-20]	; 0xffffffec
   28868:	sub	r3, fp, #52	; 0x34
   2886c:	ldr	r2, [fp, #-16]
   28870:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28874:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28878:	bl	1eb50 <__assert_fail@plt+0xd9f8>
   2887c:	ldr	r3, [fp, #-16]
   28880:	sub	r3, r3, #-1073741823	; 0xc0000001
   28884:	lsl	r3, r3, #2
   28888:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2888c:	add	r3, r2, r3
   28890:	ldr	r3, [r3]
   28894:	cmp	r3, #0
   28898:	moveq	r3, #1
   2889c:	movne	r3, #0
   288a0:	uxtb	r3, r3
   288a4:	mov	r2, r3
   288a8:	ldr	r3, [fp, #-16]
   288ac:	sub	r3, r3, r2
   288b0:	str	r3, [fp, #-16]
   288b4:	ldr	r3, [fp, #-16]
   288b8:	cmp	r3, #0
   288bc:	bgt	2885c <__assert_fail@plt+0x17704>
   288c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   288c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   288c8:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   288cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   288d0:	mov	r0, r3
   288d4:	sub	sp, fp, #8
   288d8:	ldr	r4, [sp]
   288dc:	ldr	fp, [sp, #4]
   288e0:	add	sp, sp, #8
   288e4:	pop	{pc}		; (ldr pc, [sp], #4)
   288e8:	str	fp, [sp, #-8]!
   288ec:	str	lr, [sp, #4]
   288f0:	add	fp, sp, #4
   288f4:	sub	sp, sp, #64	; 0x40
   288f8:	str	r0, [fp, #-48]	; 0xffffffd0
   288fc:	str	r1, [fp, #-52]	; 0xffffffcc
   28900:	str	r2, [fp, #-56]	; 0xffffffc8
   28904:	movw	r3, #23556	; 0x5c04
   28908:	movt	r3, #3
   2890c:	str	r3, [fp, #-8]
   28910:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28914:	cmp	r3, #1
   28918:	ble	2894c <__assert_fail@plt+0x177f4>
   2891c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28920:	cmp	r3, #36	; 0x24
   28924:	bgt	28938 <__assert_fail@plt+0x177e0>
   28928:	movw	r3, #23620	; 0x5c44
   2892c:	movt	r3, #3
   28930:	str	r3, [fp, #-8]
   28934:	b	28984 <__assert_fail@plt+0x1782c>
   28938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2893c:	cmp	r3, #62	; 0x3e
   28940:	ble	28984 <__assert_fail@plt+0x1782c>
   28944:	mov	r3, #0
   28948:	b	28bbc <__assert_fail@plt+0x17a64>
   2894c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28950:	cmn	r3, #1
   28954:	blt	28964 <__assert_fail@plt+0x1780c>
   28958:	mov	r3, #10
   2895c:	str	r3, [fp, #-52]	; 0xffffffcc
   28960:	b	28984 <__assert_fail@plt+0x1782c>
   28964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28968:	rsb	r3, r3, #0
   2896c:	str	r3, [fp, #-52]	; 0xffffffcc
   28970:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28974:	cmp	r3, #36	; 0x24
   28978:	ble	28984 <__assert_fail@plt+0x1782c>
   2897c:	mov	r3, #0
   28980:	b	28bbc <__assert_fail@plt+0x17a64>
   28984:	ldr	r1, [fp, #-52]	; 0xffffffcc
   28988:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2898c:	bl	2864c <__assert_fail@plt+0x174f4>
   28990:	mov	r3, r0
   28994:	add	r3, r3, #1
   28998:	str	r3, [fp, #-16]
   2899c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   289a0:	cmp	r3, #0
   289a4:	bne	289d0 <__assert_fail@plt+0x17878>
   289a8:	ldr	r3, [fp, #-16]
   289ac:	add	r3, r3, #1
   289b0:	str	r3, [fp, #-20]	; 0xffffffec
   289b4:	movw	r3, #28964	; 0x7124
   289b8:	movt	r3, #4
   289bc:	ldr	r3, [r3]
   289c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   289c4:	blx	r3
   289c8:	str	r0, [fp, #-48]	; 0xffffffd0
   289cc:	b	289d8 <__assert_fail@plt+0x17880>
   289d0:	mov	r3, #0
   289d4:	str	r3, [fp, #-20]	; 0xffffffec
   289d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   289dc:	ldr	r3, [r3, #4]
   289e0:	cmp	r3, #0
   289e4:	rsblt	r3, r3, #0
   289e8:	str	r3, [fp, #-24]	; 0xffffffe8
   289ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   289f0:	cmp	r3, #0
   289f4:	bne	28a10 <__assert_fail@plt+0x178b8>
   289f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   289fc:	mov	r2, #48	; 0x30
   28a00:	strb	r2, [r3]
   28a04:	mov	r3, #1
   28a08:	str	r3, [fp, #-16]
   28a0c:	b	28b60 <__assert_fail@plt+0x17a08>
   28a10:	mov	r3, #0
   28a14:	str	r3, [fp, #-12]
   28a18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28a1c:	ldr	r3, [r3, #4]
   28a20:	cmp	r3, #0
   28a24:	bge	28a44 <__assert_fail@plt+0x178ec>
   28a28:	ldr	r3, [fp, #-12]
   28a2c:	add	r2, r3, #1
   28a30:	str	r2, [fp, #-12]
   28a34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28a38:	add	r3, r2, r3
   28a3c:	mov	r2, #45	; 0x2d
   28a40:	strb	r2, [r3]
   28a44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28a48:	mov	r0, r3
   28a4c:	bl	1fee8 <__assert_fail@plt+0xed90>
   28a50:	str	r0, [fp, #-28]	; 0xffffffe4
   28a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28a58:	cmp	r3, #0
   28a5c:	beq	28a94 <__assert_fail@plt+0x1793c>
   28a60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28a64:	ldr	r3, [fp, #-12]
   28a68:	add	r0, r2, r3
   28a6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28a70:	ldr	r2, [r3, #8]
   28a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28a7c:	bl	2013c <__assert_fail@plt+0xefe4>
   28a80:	mov	r2, r0
   28a84:	ldr	r3, [fp, #-12]
   28a88:	add	r3, r3, r2
   28a8c:	str	r3, [fp, #-16]
   28a90:	b	28b4c <__assert_fail@plt+0x179f4>
   28a94:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28a98:	sub	r3, fp, #40	; 0x28
   28a9c:	mov	r1, r2
   28aa0:	mov	r0, r3
   28aa4:	bl	1ffd0 <__assert_fail@plt+0xee78>
   28aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28aac:	bl	1c968 <__assert_fail@plt+0xb810>
   28ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   28ab4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28ab8:	ldr	r3, [r3, #8]
   28abc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28ac0:	mov	r1, r3
   28ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28ac8:	bl	1ca80 <__assert_fail@plt+0xb928>
   28acc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28ad0:	ldr	r3, [fp, #-12]
   28ad4:	add	r0, r2, r3
   28ad8:	sub	r2, fp, #40	; 0x28
   28adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ae0:	str	r3, [sp]
   28ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28ae8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   28aec:	bl	205a8 <__assert_fail@plt+0xf450>
   28af0:	mov	r2, r0
   28af4:	ldr	r3, [fp, #-12]
   28af8:	add	r3, r3, r2
   28afc:	str	r3, [fp, #-16]
   28b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28b04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28b08:	bl	1ca34 <__assert_fail@plt+0xb8dc>
   28b0c:	b	28b4c <__assert_fail@plt+0x179f4>
   28b10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28b14:	ldr	r3, [fp, #-12]
   28b18:	add	r3, r2, r3
   28b1c:	ldrb	r3, [r3]
   28b20:	mov	r2, r3
   28b24:	ldr	r3, [fp, #-8]
   28b28:	add	r2, r3, r2
   28b2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   28b30:	ldr	r3, [fp, #-12]
   28b34:	add	r3, r1, r3
   28b38:	ldrb	r2, [r2]
   28b3c:	strb	r2, [r3]
   28b40:	ldr	r3, [fp, #-12]
   28b44:	add	r3, r3, #1
   28b48:	str	r3, [fp, #-12]
   28b4c:	ldr	r2, [fp, #-12]
   28b50:	ldr	r3, [fp, #-16]
   28b54:	cmp	r2, r3
   28b58:	bcc	28b10 <__assert_fail@plt+0x179b8>
   28b5c:	nop	{0}
   28b60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28b64:	ldr	r3, [fp, #-16]
   28b68:	add	r3, r2, r3
   28b6c:	mov	r2, #0
   28b70:	strb	r2, [r3]
   28b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   28b78:	cmp	r3, #0
   28b7c:	beq	28bb8 <__assert_fail@plt+0x17a60>
   28b80:	ldr	r3, [fp, #-16]
   28b84:	add	r3, r3, #1
   28b88:	ldr	r2, [fp, #-20]	; 0xffffffec
   28b8c:	cmp	r2, r3
   28b90:	beq	28bb8 <__assert_fail@plt+0x17a60>
   28b94:	movw	r3, #28968	; 0x7128
   28b98:	movt	r3, #4
   28b9c:	ldr	r3, [r3]
   28ba0:	ldr	r2, [fp, #-16]
   28ba4:	add	r2, r2, #1
   28ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
   28bac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28bb0:	blx	r3
   28bb4:	str	r0, [fp, #-48]	; 0xffffffd0
   28bb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28bbc:	mov	r0, r3
   28bc0:	sub	sp, fp, #4
   28bc4:	ldr	fp, [sp]
   28bc8:	add	sp, sp, #4
   28bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   28bd0:	str	fp, [sp, #-8]!
   28bd4:	str	lr, [sp, #4]
   28bd8:	add	fp, sp, #4
   28bdc:	sub	sp, sp, #72	; 0x48
   28be0:	str	r0, [fp, #-56]	; 0xffffffc8
   28be4:	str	r1, [fp, #-60]	; 0xffffffc4
   28be8:	str	r2, [fp, #-64]	; 0xffffffc0
   28bec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28bf0:	cmp	r3, #0
   28bf4:	beq	28c40 <__assert_fail@plt+0x17ae8>
   28bf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28bfc:	cmp	r3, #1
   28c00:	ble	28c10 <__assert_fail@plt+0x17ab8>
   28c04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28c08:	cmp	r3, #62	; 0x3e
   28c0c:	ble	28c30 <__assert_fail@plt+0x17ad8>
   28c10:	movw	r3, #24644	; 0x6044
   28c14:	movt	r3, #3
   28c18:	movw	r2, #4320	; 0x10e0
   28c1c:	movw	r1, #22376	; 0x5768
   28c20:	movt	r1, #3
   28c24:	movw	r0, #23660	; 0x5c6c
   28c28:	movt	r0, #3
   28c2c:	bl	11158 <__assert_fail@plt>
   28c30:	b	28c40 <__assert_fail@plt+0x17ae8>
   28c34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28c38:	add	r3, r3, #1
   28c3c:	str	r3, [fp, #-60]	; 0xffffffc4
   28c40:	bl	11020 <__ctype_b_loc@plt>
   28c44:	mov	r3, r0
   28c48:	ldr	r2, [r3]
   28c4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28c50:	ldrb	r3, [r3]
   28c54:	lsl	r3, r3, #1
   28c58:	add	r3, r2, r3
   28c5c:	ldrh	r3, [r3]
   28c60:	and	r3, r3, #8192	; 0x2000
   28c64:	cmp	r3, #0
   28c68:	bne	28c34 <__assert_fail@plt+0x17adc>
   28c6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28c70:	ldrb	r3, [r3]
   28c74:	cmp	r3, #45	; 0x2d
   28c78:	moveq	r3, #1
   28c7c:	movne	r3, #0
   28c80:	uxtb	r3, r3
   28c84:	str	r3, [fp, #-24]	; 0xffffffe8
   28c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28c8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   28c90:	add	r3, r2, r3
   28c94:	str	r3, [fp, #-60]	; 0xffffffc4
   28c98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28c9c:	cmp	r3, #0
   28ca0:	bne	28d48 <__assert_fail@plt+0x17bf0>
   28ca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28ca8:	ldrb	r3, [r3]
   28cac:	cmp	r3, #48	; 0x30
   28cb0:	bne	28d40 <__assert_fail@plt+0x17be8>
   28cb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28cb8:	add	r3, r3, #1
   28cbc:	ldrb	r3, [r3]
   28cc0:	cmp	r3, #120	; 0x78
   28cc4:	beq	28cdc <__assert_fail@plt+0x17b84>
   28cc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28ccc:	add	r3, r3, #1
   28cd0:	ldrb	r3, [r3]
   28cd4:	cmp	r3, #88	; 0x58
   28cd8:	bne	28cf4 <__assert_fail@plt+0x17b9c>
   28cdc:	mov	r3, #16
   28ce0:	str	r3, [fp, #-64]	; 0xffffffc0
   28ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28ce8:	add	r3, r3, #2
   28cec:	str	r3, [fp, #-60]	; 0xffffffc4
   28cf0:	b	28d48 <__assert_fail@plt+0x17bf0>
   28cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28cf8:	add	r3, r3, #1
   28cfc:	ldrb	r3, [r3]
   28d00:	cmp	r3, #98	; 0x62
   28d04:	beq	28d1c <__assert_fail@plt+0x17bc4>
   28d08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28d0c:	add	r3, r3, #1
   28d10:	ldrb	r3, [r3]
   28d14:	cmp	r3, #66	; 0x42
   28d18:	bne	28d34 <__assert_fail@plt+0x17bdc>
   28d1c:	mov	r3, #2
   28d20:	str	r3, [fp, #-64]	; 0xffffffc0
   28d24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28d28:	add	r3, r3, #2
   28d2c:	str	r3, [fp, #-60]	; 0xffffffc4
   28d30:	b	28d48 <__assert_fail@plt+0x17bf0>
   28d34:	mov	r3, #8
   28d38:	str	r3, [fp, #-64]	; 0xffffffc0
   28d3c:	b	28d48 <__assert_fail@plt+0x17bf0>
   28d40:	mov	r3, #10
   28d44:	str	r3, [fp, #-64]	; 0xffffffc0
   28d48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28d4c:	ldrb	r3, [r3]
   28d50:	cmp	r3, #0
   28d54:	bne	28d6c <__assert_fail@plt+0x17c14>
   28d58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28d5c:	mov	r2, #0
   28d60:	str	r2, [r3, #4]
   28d64:	mvn	r3, #0
   28d68:	b	2912c <__assert_fail@plt+0x17fd4>
   28d6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   28d70:	bl	11050 <strlen@plt>
   28d74:	str	r0, [fp, #-28]	; 0xffffffe4
   28d78:	movw	r3, #28964	; 0x7124
   28d7c:	movt	r3, #4
   28d80:	ldr	r3, [r3]
   28d84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28d88:	blx	r3
   28d8c:	str	r0, [fp, #-32]	; 0xffffffe0
   28d90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28d94:	cmp	r3, #36	; 0x24
   28d98:	ble	28da4 <__assert_fail@plt+0x17c4c>
   28d9c:	mov	r3, #36	; 0x24
   28da0:	b	28da8 <__assert_fail@plt+0x17c50>
   28da4:	mov	r3, #10
   28da8:	str	r3, [fp, #-36]	; 0xffffffdc
   28dac:	mov	r3, #0
   28db0:	str	r3, [fp, #-16]
   28db4:	b	28f04 <__assert_fail@plt+0x17dac>
   28db8:	bl	11020 <__ctype_b_loc@plt>
   28dbc:	mov	r3, r0
   28dc0:	ldr	r2, [r3]
   28dc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28dc8:	ldrb	r3, [r3]
   28dcc:	lsl	r3, r3, #1
   28dd0:	add	r3, r2, r3
   28dd4:	ldrh	r3, [r3]
   28dd8:	and	r3, r3, #8192	; 0x2000
   28ddc:	cmp	r3, #0
   28de0:	bne	28ef4 <__assert_fail@plt+0x17d9c>
   28de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28de8:	ldrb	r3, [r3]
   28dec:	cmp	r3, #47	; 0x2f
   28df0:	bls	28e18 <__assert_fail@plt+0x17cc0>
   28df4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28df8:	ldrb	r3, [r3]
   28dfc:	cmp	r3, #57	; 0x39
   28e00:	bhi	28e18 <__assert_fail@plt+0x17cc0>
   28e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e08:	ldrb	r3, [r3]
   28e0c:	sub	r3, r3, #48	; 0x30
   28e10:	str	r3, [fp, #-20]	; 0xffffffec
   28e14:	b	28e94 <__assert_fail@plt+0x17d3c>
   28e18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e1c:	ldrb	r3, [r3]
   28e20:	cmp	r3, #96	; 0x60
   28e24:	bls	28e58 <__assert_fail@plt+0x17d00>
   28e28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e2c:	ldrb	r3, [r3]
   28e30:	cmp	r3, #122	; 0x7a
   28e34:	bhi	28e58 <__assert_fail@plt+0x17d00>
   28e38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e3c:	ldrb	r3, [r3]
   28e40:	mov	r2, r3
   28e44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28e48:	add	r3, r2, r3
   28e4c:	sub	r3, r3, #97	; 0x61
   28e50:	str	r3, [fp, #-20]	; 0xffffffec
   28e54:	b	28e94 <__assert_fail@plt+0x17d3c>
   28e58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e5c:	ldrb	r3, [r3]
   28e60:	cmp	r3, #64	; 0x40
   28e64:	bls	28e8c <__assert_fail@plt+0x17d34>
   28e68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e6c:	ldrb	r3, [r3]
   28e70:	cmp	r3, #90	; 0x5a
   28e74:	bhi	28e8c <__assert_fail@plt+0x17d34>
   28e78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28e7c:	ldrb	r3, [r3]
   28e80:	sub	r3, r3, #55	; 0x37
   28e84:	str	r3, [fp, #-20]	; 0xffffffec
   28e88:	b	28e94 <__assert_fail@plt+0x17d3c>
   28e8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28e90:	str	r3, [fp, #-20]	; 0xffffffec
   28e94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28e98:	ldr	r2, [fp, #-20]	; 0xffffffec
   28e9c:	cmp	r2, r3
   28ea0:	bcc	28ed0 <__assert_fail@plt+0x17d78>
   28ea4:	movw	r3, #28972	; 0x712c
   28ea8:	movt	r3, #4
   28eac:	ldr	r3, [r3]
   28eb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28eb8:	blx	r3
   28ebc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28ec0:	mov	r2, #0
   28ec4:	str	r2, [r3, #4]
   28ec8:	mvn	r3, #0
   28ecc:	b	2912c <__assert_fail@plt+0x17fd4>
   28ed0:	ldr	r3, [fp, #-16]
   28ed4:	add	r2, r3, #1
   28ed8:	str	r2, [fp, #-16]
   28edc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28ee0:	add	r3, r2, r3
   28ee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   28ee8:	uxtb	r2, r2
   28eec:	strb	r2, [r3]
   28ef0:	b	28ef8 <__assert_fail@plt+0x17da0>
   28ef4:	nop	{0}
   28ef8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28efc:	add	r3, r3, #1
   28f00:	str	r3, [fp, #-60]	; 0xffffffc4
   28f04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28f08:	ldrb	r3, [r3]
   28f0c:	cmp	r3, #0
   28f10:	bne	28db8 <__assert_fail@plt+0x17c60>
   28f14:	ldr	r3, [fp, #-16]
   28f18:	cmp	r3, #0
   28f1c:	bne	28f4c <__assert_fail@plt+0x17df4>
   28f20:	movw	r3, #28972	; 0x712c
   28f24:	movt	r3, #4
   28f28:	ldr	r3, [r3]
   28f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28f34:	blx	r3
   28f38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28f3c:	mov	r2, #0
   28f40:	str	r2, [r3, #4]
   28f44:	mvn	r3, #0
   28f48:	b	2912c <__assert_fail@plt+0x17fd4>
   28f4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28f50:	mov	r0, r3
   28f54:	bl	1fee8 <__assert_fail@plt+0xed90>
   28f58:	str	r0, [fp, #-40]	; 0xffffffd8
   28f5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28f60:	cmp	r3, #0
   28f64:	beq	28fd0 <__assert_fail@plt+0x17e78>
   28f68:	ldr	r3, [fp, #-16]
   28f6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28f70:	mul	r3, r2, r3
   28f74:	add	r3, r3, #31
   28f78:	lsr	r3, r3, #5
   28f7c:	str	r3, [fp, #-12]
   28f80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28f84:	ldr	r3, [r3]
   28f88:	ldr	r2, [fp, #-12]
   28f8c:	cmp	r2, r3
   28f90:	ble	28fa8 <__assert_fail@plt+0x17e50>
   28f94:	ldr	r1, [fp, #-12]
   28f98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28f9c:	bl	20e04 <__assert_fail@plt+0xfcac>
   28fa0:	mov	r3, r0
   28fa4:	b	28fb0 <__assert_fail@plt+0x17e58>
   28fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28fac:	ldr	r3, [r3, #8]
   28fb0:	str	r3, [fp, #-44]	; 0xffffffd4
   28fb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28fb8:	ldr	r2, [fp, #-16]
   28fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28fc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28fc4:	bl	208b8 <__assert_fail@plt+0xf760>
   28fc8:	str	r0, [fp, #-8]
   28fcc:	b	290bc <__assert_fail@plt+0x17f64>
   28fd0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   28fd4:	sub	r3, fp, #52	; 0x34
   28fd8:	mov	r1, r2
   28fdc:	mov	r0, r3
   28fe0:	bl	1ffd0 <__assert_fail@plt+0xee78>
   28fe4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28fe8:	ldr	r3, [fp, #-16]
   28fec:	add	r3, r2, r3
   28ff0:	sub	r2, r3, #1
   28ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28ff8:	udiv	r3, r2, r3
   28ffc:	str	r3, [fp, #-12]
   29000:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29004:	ldr	r3, [r3]
   29008:	ldr	r2, [fp, #-12]
   2900c:	cmp	r2, r3
   29010:	ble	29028 <__assert_fail@plt+0x17ed0>
   29014:	ldr	r1, [fp, #-12]
   29018:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2901c:	bl	20e04 <__assert_fail@plt+0xfcac>
   29020:	mov	r3, r0
   29024:	b	29030 <__assert_fail@plt+0x17ed8>
   29028:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2902c:	ldr	r3, [r3, #8]
   29030:	str	r3, [fp, #-44]	; 0xffffffd4
   29034:	ldr	r2, [fp, #-64]	; 0xffffffc0
   29038:	sub	r3, fp, #52	; 0x34
   2903c:	str	r3, [sp]
   29040:	mov	r3, r2
   29044:	ldr	r2, [fp, #-16]
   29048:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2904c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29050:	bl	209f8 <__assert_fail@plt+0xf8a0>
   29054:	str	r0, [fp, #-8]
   29058:	ldr	r3, [fp, #-8]
   2905c:	cmp	r3, #0
   29060:	bgt	29084 <__assert_fail@plt+0x17f2c>
   29064:	movw	r3, #24644	; 0x6044
   29068:	movt	r3, #3
   2906c:	movw	r2, #4405	; 0x1135
   29070:	movw	r1, #22376	; 0x5768
   29074:	movt	r1, #3
   29078:	movw	r0, #23084	; 0x5a2c
   2907c:	movt	r0, #3
   29080:	bl	11158 <__assert_fail@plt>
   29084:	ldr	r3, [fp, #-8]
   29088:	sub	r3, r3, #-1073741823	; 0xc0000001
   2908c:	lsl	r3, r3, #2
   29090:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29094:	add	r3, r2, r3
   29098:	ldr	r3, [r3]
   2909c:	cmp	r3, #0
   290a0:	moveq	r3, #1
   290a4:	movne	r3, #0
   290a8:	uxtb	r3, r3
   290ac:	mov	r2, r3
   290b0:	ldr	r3, [fp, #-8]
   290b4:	sub	r3, r3, r2
   290b8:	str	r3, [fp, #-8]
   290bc:	ldr	r2, [fp, #-8]
   290c0:	ldr	r3, [fp, #-12]
   290c4:	cmp	r2, r3
   290c8:	ble	290ec <__assert_fail@plt+0x17f94>
   290cc:	movw	r3, #24644	; 0x6044
   290d0:	movt	r3, #3
   290d4:	movw	r2, #4408	; 0x1138
   290d8:	movw	r1, #22376	; 0x5768
   290dc:	movt	r1, #3
   290e0:	movw	r0, #23700	; 0x5c94
   290e4:	movt	r0, #3
   290e8:	bl	11158 <__assert_fail@plt>
   290ec:	movw	r3, #28972	; 0x712c
   290f0:	movt	r3, #4
   290f4:	ldr	r3, [r3]
   290f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   290fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29100:	blx	r3
   29104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29108:	cmp	r3, #0
   2910c:	beq	2911c <__assert_fail@plt+0x17fc4>
   29110:	ldr	r3, [fp, #-8]
   29114:	rsb	r3, r3, #0
   29118:	b	29120 <__assert_fail@plt+0x17fc8>
   2911c:	ldr	r3, [fp, #-8]
   29120:	ldr	r2, [fp, #-56]	; 0xffffffc8
   29124:	str	r3, [r2, #4]
   29128:	mov	r3, #0
   2912c:	mov	r0, r3
   29130:	sub	sp, fp, #4
   29134:	ldr	fp, [sp]
   29138:	add	sp, sp, #4
   2913c:	pop	{pc}		; (ldr pc, [sp], #4)
   29140:	str	fp, [sp, #-8]!
   29144:	str	lr, [sp, #4]
   29148:	add	fp, sp, #4
   2914c:	sub	sp, sp, #16
   29150:	str	r0, [fp, #-8]
   29154:	str	r1, [fp, #-12]
   29158:	str	r2, [fp, #-16]
   2915c:	ldr	r0, [fp, #-8]
   29160:	bl	20cdc <__assert_fail@plt+0xfb84>
   29164:	ldr	r2, [fp, #-16]
   29168:	ldr	r1, [fp, #-12]
   2916c:	ldr	r0, [fp, #-8]
   29170:	bl	28bd0 <__assert_fail@plt+0x17a78>
   29174:	mov	r3, r0
   29178:	mov	r0, r3
   2917c:	sub	sp, fp, #4
   29180:	ldr	fp, [sp]
   29184:	add	sp, sp, #4
   29188:	pop	{pc}		; (ldr pc, [sp], #4)
   2918c:	str	fp, [sp, #-8]!
   29190:	str	lr, [sp, #4]
   29194:	add	fp, sp, #4
   29198:	sub	sp, sp, #32
   2919c:	str	r0, [fp, #-24]	; 0xffffffe8
   291a0:	str	r1, [fp, #-28]	; 0xffffffe4
   291a4:	str	r2, [fp, #-32]	; 0xffffffe0
   291a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   291ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   291b0:	mov	r0, #0
   291b4:	bl	288e8 <__assert_fail@plt+0x17790>
   291b8:	str	r0, [fp, #-8]
   291bc:	ldr	r3, [fp, #-8]
   291c0:	cmp	r3, #0
   291c4:	bne	291d0 <__assert_fail@plt+0x18078>
   291c8:	mov	r3, #0
   291cc:	b	29218 <__assert_fail@plt+0x180c0>
   291d0:	ldr	r0, [fp, #-8]
   291d4:	bl	11050 <strlen@plt>
   291d8:	str	r0, [fp, #-12]
   291dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   291e0:	ldr	r2, [fp, #-12]
   291e4:	mov	r1, #1
   291e8:	ldr	r0, [fp, #-8]
   291ec:	bl	10f84 <fwrite@plt>
   291f0:	str	r0, [fp, #-16]
   291f4:	movw	r3, #28972	; 0x712c
   291f8:	movt	r3, #4
   291fc:	ldr	r3, [r3]
   29200:	ldr	r2, [fp, #-12]
   29204:	add	r2, r2, #1
   29208:	mov	r1, r2
   2920c:	ldr	r0, [fp, #-8]
   29210:	blx	r3
   29214:	ldr	r3, [fp, #-16]
   29218:	mov	r0, r3
   2921c:	sub	sp, fp, #4
   29220:	ldr	fp, [sp]
   29224:	add	sp, sp, #4
   29228:	pop	{pc}		; (ldr pc, [sp], #4)
   2922c:	push	{fp}		; (str fp, [sp, #-4]!)
   29230:	add	fp, sp, #0
   29234:	sub	sp, sp, #12
   29238:	movw	r3, #24656	; 0x6050
   2923c:	movt	r3, #3
   29240:	str	r3, [fp, #-8]
   29244:	ldr	r3, [fp, #-8]
   29248:	ldrb	r3, [r3]
   2924c:	rsb	r3, r3, #1
   29250:	mov	r0, r3
   29254:	add	sp, fp, #0
   29258:	pop	{fp}		; (ldr fp, [sp], #4)
   2925c:	bx	lr
   29260:	str	fp, [sp, #-8]!
   29264:	str	lr, [sp, #4]
   29268:	add	fp, sp, #4
   2926c:	sub	sp, sp, #48	; 0x30
   29270:	str	r0, [fp, #-40]	; 0xffffffd8
   29274:	str	r1, [fp, #-44]	; 0xffffffd4
   29278:	str	r2, [fp, #-48]	; 0xffffffd0
   2927c:	str	r3, [fp, #-52]	; 0xffffffcc
   29280:	ldr	r3, [fp, #8]
   29284:	cmp	r3, #0
   29288:	beq	29298 <__assert_fail@plt+0x18140>
   2928c:	movw	r0, #23712	; 0x5ca0
   29290:	movt	r0, #3
   29294:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   29298:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2929c:	cmp	r3, #1
   292a0:	beq	292d0 <__assert_fail@plt+0x18178>
   292a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   292a8:	cmn	r3, #1
   292ac:	beq	292d0 <__assert_fail@plt+0x18178>
   292b0:	movw	r3, #24660	; 0x6054
   292b4:	movt	r3, #3
   292b8:	movw	r2, #4468	; 0x1174
   292bc:	movw	r1, #22376	; 0x5768
   292c0:	movt	r1, #3
   292c4:	movw	r0, #23748	; 0x5cc4
   292c8:	movt	r0, #3
   292cc:	bl	11158 <__assert_fail@plt>
   292d0:	ldr	r3, [fp, #4]
   292d4:	cmn	r3, #1
   292d8:	blt	292e8 <__assert_fail@plt+0x18190>
   292dc:	ldr	r3, [fp, #4]
   292e0:	cmp	r3, #1
   292e4:	ble	29308 <__assert_fail@plt+0x181b0>
   292e8:	movw	r3, #24660	; 0x6054
   292ec:	movt	r3, #3
   292f0:	movw	r2, #4469	; 0x1175
   292f4:	movw	r1, #22376	; 0x5768
   292f8:	movt	r1, #3
   292fc:	movw	r0, #23776	; 0x5ce0
   29300:	movt	r0, #3
   29304:	bl	11158 <__assert_fail@plt>
   29308:	ldr	r3, [fp, #4]
   2930c:	cmp	r3, #0
   29310:	bne	2931c <__assert_fail@plt+0x181c4>
   29314:	bl	2922c <__assert_fail@plt+0x180d4>
   29318:	str	r0, [fp, #4]
   2931c:	ldr	r3, [fp, #12]
   29320:	str	r3, [fp, #-8]
   29324:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29328:	ldr	r3, [fp, #4]
   2932c:	cmp	r2, r3
   29330:	beq	29340 <__assert_fail@plt+0x181e8>
   29334:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29338:	lsl	r3, r3, #1
   2933c:	b	29344 <__assert_fail@plt+0x181ec>
   29340:	mov	r3, #0
   29344:	str	r3, [fp, #-12]
   29348:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2934c:	cmp	r3, #1
   29350:	bne	2937c <__assert_fail@plt+0x18224>
   29354:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29358:	sub	r3, r3, #1
   2935c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   29360:	mul	r3, r2, r3
   29364:	ldr	r2, [fp, #-8]
   29368:	add	r3, r2, r3
   2936c:	str	r3, [fp, #-8]
   29370:	ldr	r3, [fp, #-12]
   29374:	rsb	r3, r3, #0
   29378:	str	r3, [fp, #-12]
   2937c:	ldr	r3, [fp, #4]
   29380:	cmp	r3, #1
   29384:	bne	2939c <__assert_fail@plt+0x18244>
   29388:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2938c:	sub	r3, r3, #1
   29390:	ldr	r2, [fp, #-8]
   29394:	add	r3, r2, r3
   29398:	str	r3, [fp, #-8]
   2939c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   293a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   293a4:	mul	r3, r2, r3
   293a8:	add	r3, r3, #3
   293ac:	lsr	r3, r3, #2
   293b0:	str	r3, [fp, #-32]	; 0xffffffe0
   293b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   293b8:	ldr	r3, [r3]
   293bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   293c0:	cmp	r2, r3
   293c4:	ble	293dc <__assert_fail@plt+0x18284>
   293c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   293cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   293d0:	bl	20e04 <__assert_fail@plt+0xfcac>
   293d4:	mov	r3, r0
   293d8:	b	293e4 <__assert_fail@plt+0x1828c>
   293dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   293e0:	ldr	r3, [r3, #8]
   293e4:	str	r3, [fp, #-36]	; 0xffffffdc
   293e8:	mov	r3, #0
   293ec:	str	r3, [fp, #-16]
   293f0:	mov	r3, #0
   293f4:	str	r3, [fp, #-20]	; 0xffffffec
   293f8:	mov	r3, #0
   293fc:	str	r3, [fp, #-24]	; 0xffffffe8
   29400:	b	294c4 <__assert_fail@plt+0x1836c>
   29404:	mov	r3, #0
   29408:	str	r3, [fp, #-28]	; 0xffffffe4
   2940c:	b	29498 <__assert_fail@plt+0x18340>
   29410:	ldr	r3, [fp, #-8]
   29414:	ldrb	r3, [r3]
   29418:	mov	r1, r3
   2941c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29420:	add	r2, r3, #1
   29424:	str	r2, [fp, #-20]	; 0xffffffec
   29428:	lsl	r3, r3, #3
   2942c:	lsl	r3, r1, r3
   29430:	ldr	r2, [fp, #-16]
   29434:	orr	r3, r2, r3
   29438:	str	r3, [fp, #-16]
   2943c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29440:	cmp	r3, #4
   29444:	bne	29478 <__assert_fail@plt+0x18320>
   29448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2944c:	add	r2, r3, #1
   29450:	str	r2, [fp, #-24]	; 0xffffffe8
   29454:	lsl	r3, r3, #2
   29458:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2945c:	add	r3, r2, r3
   29460:	ldr	r2, [fp, #-16]
   29464:	str	r2, [r3]
   29468:	mov	r3, #0
   2946c:	str	r3, [fp, #-20]	; 0xffffffec
   29470:	mov	r3, #0
   29474:	str	r3, [fp, #-16]
   29478:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2947c:	add	r3, r3, #1
   29480:	str	r3, [fp, #-28]	; 0xffffffe4
   29484:	ldr	r3, [fp, #4]
   29488:	rsb	r3, r3, #0
   2948c:	ldr	r2, [fp, #-8]
   29490:	add	r3, r2, r3
   29494:	str	r3, [fp, #-8]
   29498:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2949c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   294a0:	cmp	r2, r3
   294a4:	bcc	29410 <__assert_fail@plt+0x182b8>
   294a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   294ac:	sub	r3, r3, #1
   294b0:	str	r3, [fp, #-44]	; 0xffffffd4
   294b4:	ldr	r3, [fp, #-12]
   294b8:	ldr	r2, [fp, #-8]
   294bc:	add	r3, r2, r3
   294c0:	str	r3, [fp, #-8]
   294c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   294c8:	cmp	r3, #0
   294cc:	bne	29404 <__assert_fail@plt+0x182ac>
   294d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   294d4:	cmp	r3, #0
   294d8:	movne	r3, #1
   294dc:	moveq	r3, #0
   294e0:	uxtb	r3, r3
   294e4:	mov	r2, r3
   294e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   294ec:	add	r3, r2, r3
   294f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   294f4:	cmp	r2, r3
   294f8:	beq	2951c <__assert_fail@plt+0x183c4>
   294fc:	movw	r3, #24660	; 0x6054
   29500:	movt	r3, #3
   29504:	movw	r2, #4507	; 0x119b
   29508:	movw	r1, #22376	; 0x5768
   2950c:	movt	r1, #3
   29510:	movw	r0, #23804	; 0x5cfc
   29514:	movt	r0, #3
   29518:	bl	11158 <__assert_fail@plt>
   2951c:	ldr	r3, [fp, #-16]
   29520:	cmp	r3, #0
   29524:	beq	2954c <__assert_fail@plt+0x183f4>
   29528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2952c:	add	r2, r3, #1
   29530:	str	r2, [fp, #-24]	; 0xffffffe8
   29534:	lsl	r3, r3, #2
   29538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2953c:	add	r3, r2, r3
   29540:	ldr	r2, [fp, #-16]
   29544:	str	r2, [r3]
   29548:	b	2955c <__assert_fail@plt+0x18404>
   2954c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29554:	bl	1cc94 <__assert_fail@plt+0xbb3c>
   29558:	str	r0, [fp, #-24]	; 0xffffffe8
   2955c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29564:	str	r2, [r3, #4]
   29568:	nop	{0}
   2956c:	sub	sp, fp, #4
   29570:	ldr	fp, [sp]
   29574:	add	sp, sp, #4
   29578:	pop	{pc}		; (ldr pc, [sp], #4)
   2957c:	str	fp, [sp, #-8]!
   29580:	str	lr, [sp, #4]
   29584:	add	fp, sp, #4
   29588:	sub	sp, sp, #64	; 0x40
   2958c:	str	r0, [fp, #-56]	; 0xffffffc8
   29590:	str	r1, [fp, #-60]	; 0xffffffc4
   29594:	str	r2, [fp, #-64]	; 0xffffffc0
   29598:	str	r3, [fp, #-68]	; 0xffffffbc
   2959c:	ldr	r3, [fp, #8]
   295a0:	cmp	r3, #0
   295a4:	beq	295b4 <__assert_fail@plt+0x1845c>
   295a8:	movw	r0, #23828	; 0x5d14
   295ac:	movt	r0, #3
   295b0:	bl	1c6f8 <__assert_fail@plt+0xb5a0>
   295b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   295b8:	cmp	r3, #1
   295bc:	beq	295ec <__assert_fail@plt+0x18494>
   295c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   295c4:	cmn	r3, #1
   295c8:	beq	295ec <__assert_fail@plt+0x18494>
   295cc:	movw	r3, #24672	; 0x6060
   295d0:	movt	r3, #3
   295d4:	movw	r2, #4526	; 0x11ae
   295d8:	movw	r1, #22376	; 0x5768
   295dc:	movt	r1, #3
   295e0:	movw	r0, #23748	; 0x5cc4
   295e4:	movt	r0, #3
   295e8:	bl	11158 <__assert_fail@plt>
   295ec:	ldr	r3, [fp, #4]
   295f0:	cmn	r3, #1
   295f4:	blt	29604 <__assert_fail@plt+0x184ac>
   295f8:	ldr	r3, [fp, #4]
   295fc:	cmp	r3, #1
   29600:	ble	29624 <__assert_fail@plt+0x184cc>
   29604:	movw	r3, #24672	; 0x6060
   29608:	movt	r3, #3
   2960c:	movw	r2, #4527	; 0x11af
   29610:	movw	r1, #22376	; 0x5768
   29614:	movt	r1, #3
   29618:	movw	r0, #23776	; 0x5ce0
   2961c:	movt	r0, #3
   29620:	bl	11158 <__assert_fail@plt>
   29624:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29628:	cmp	r3, #0
   2962c:	bne	29660 <__assert_fail@plt+0x18508>
   29630:	ldr	r3, [fp, #12]
   29634:	ldr	r3, [r3, #4]
   29638:	cmp	r3, #0
   2963c:	beq	29660 <__assert_fail@plt+0x18508>
   29640:	movw	r3, #24672	; 0x6060
   29644:	movt	r3, #3
   29648:	movw	r2, #4528	; 0x11b0
   2964c:	movw	r1, #22376	; 0x5768
   29650:	movt	r1, #3
   29654:	movw	r0, #23864	; 0x5d38
   29658:	movt	r0, #3
   2965c:	bl	11158 <__assert_fail@plt>
   29660:	ldr	r3, [fp, #12]
   29664:	ldr	r3, [r3, #4]
   29668:	str	r3, [fp, #-40]	; 0xffffffd8
   2966c:	mov	r3, #0
   29670:	str	r3, [fp, #-8]
   29674:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29678:	cmp	r3, #0
   2967c:	beq	29970 <__assert_fail@plt+0x18818>
   29680:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29684:	cmp	r3, #0
   29688:	rsblt	r3, r3, #0
   2968c:	str	r3, [fp, #-40]	; 0xffffffd8
   29690:	ldr	r3, [fp, #12]
   29694:	ldr	r2, [r3, #8]
   29698:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2969c:	sub	r3, r3, #-1073741823	; 0xc0000001
   296a0:	lsl	r3, r3, #2
   296a4:	add	r3, r2, r3
   296a8:	ldr	r3, [r3]
   296ac:	str	r3, [fp, #-24]	; 0xffffffe8
   296b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   296b4:	cmp	r3, #0
   296b8:	bne	296dc <__assert_fail@plt+0x18584>
   296bc:	movw	r3, #24672	; 0x6060
   296c0:	movt	r3, #3
   296c4:	movw	r2, #4548	; 0x11c4
   296c8:	movw	r1, #22376	; 0x5768
   296cc:	movt	r1, #3
   296d0:	movw	r0, #23896	; 0x5d58
   296d4:	movt	r0, #3
   296d8:	bl	11158 <__assert_fail@plt>
   296dc:	mov	r3, #0
   296e0:	str	r3, [fp, #-12]
   296e4:	ldr	r3, [fp, #-12]
   296e8:	cmp	r3, #0
   296ec:	bne	29720 <__assert_fail@plt+0x185c8>
   296f0:	mov	r3, #8
   296f4:	str	r3, [fp, #-44]	; 0xffffffd4
   296f8:	ldr	r3, [fp, #-12]
   296fc:	add	r3, r3, #1
   29700:	str	r3, [fp, #-12]
   29704:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2970c:	lsr	r3, r2, r3
   29710:	str	r3, [fp, #-24]	; 0xffffffe8
   29714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29718:	cmp	r3, #0
   2971c:	bne	296f0 <__assert_fail@plt+0x18598>
   29720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29724:	sub	r3, r3, #1
   29728:	lsl	r2, r3, #2
   2972c:	ldr	r3, [fp, #-12]
   29730:	add	r2, r2, r3
   29734:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29738:	add	r3, r2, r3
   2973c:	sub	r2, r3, #1
   29740:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29744:	udiv	r3, r2, r3
   29748:	str	r3, [fp, #-8]
   2974c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29750:	cmp	r3, #0
   29754:	bne	2977c <__assert_fail@plt+0x18624>
   29758:	movw	r3, #28964	; 0x7124
   2975c:	movt	r3, #4
   29760:	ldr	r3, [r3]
   29764:	ldr	r2, [fp, #-8]
   29768:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2976c:	mul	r2, r1, r2
   29770:	mov	r0, r2
   29774:	blx	r3
   29778:	str	r0, [fp, #-56]	; 0xffffffc8
   2977c:	ldr	r3, [fp, #4]
   29780:	cmp	r3, #0
   29784:	bne	29790 <__assert_fail@plt+0x18638>
   29788:	bl	2922c <__assert_fail@plt+0x180d4>
   2978c:	str	r0, [fp, #4]
   29790:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29794:	str	r3, [fp, #-16]
   29798:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2979c:	ldr	r3, [fp, #4]
   297a0:	cmp	r2, r3
   297a4:	beq	297b4 <__assert_fail@plt+0x1865c>
   297a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   297ac:	lsl	r3, r3, #1
   297b0:	b	297b8 <__assert_fail@plt+0x18660>
   297b4:	mov	r3, #0
   297b8:	str	r3, [fp, #-20]	; 0xffffffec
   297bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   297c0:	cmp	r3, #1
   297c4:	bne	297f0 <__assert_fail@plt+0x18698>
   297c8:	ldr	r3, [fp, #-8]
   297cc:	sub	r3, r3, #1
   297d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   297d4:	mul	r3, r2, r3
   297d8:	ldr	r2, [fp, #-16]
   297dc:	add	r3, r2, r3
   297e0:	str	r3, [fp, #-16]
   297e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   297e8:	rsb	r3, r3, #0
   297ec:	str	r3, [fp, #-20]	; 0xffffffec
   297f0:	ldr	r3, [fp, #4]
   297f4:	cmp	r3, #1
   297f8:	bne	29810 <__assert_fail@plt+0x186b8>
   297fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29800:	sub	r3, r3, #1
   29804:	ldr	r2, [fp, #-16]
   29808:	add	r3, r2, r3
   2980c:	str	r3, [fp, #-16]
   29810:	mov	r3, #0
   29814:	str	r3, [fp, #-28]	; 0xffffffe4
   29818:	mov	r3, #0
   2981c:	str	r3, [fp, #-32]	; 0xffffffe0
   29820:	mov	r3, #0
   29824:	str	r3, [fp, #-12]
   29828:	b	29900 <__assert_fail@plt+0x187a8>
   2982c:	mov	r3, #0
   29830:	str	r3, [fp, #-36]	; 0xffffffdc
   29834:	b	298d4 <__assert_fail@plt+0x1877c>
   29838:	mov	r3, #8
   2983c:	str	r3, [fp, #-48]	; 0xffffffd0
   29840:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29844:	cmp	r3, #0
   29848:	bne	29888 <__assert_fail@plt+0x18730>
   2984c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29850:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29854:	cmp	r2, r3
   29858:	bge	29880 <__assert_fail@plt+0x18728>
   2985c:	ldr	r3, [fp, #12]
   29860:	ldr	r2, [r3, #8]
   29864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29868:	add	r1, r3, #1
   2986c:	str	r1, [fp, #-32]	; 0xffffffe0
   29870:	lsl	r3, r3, #2
   29874:	add	r3, r2, r3
   29878:	ldr	r3, [r3]
   2987c:	str	r3, [fp, #-24]	; 0xffffffe8
   29880:	mov	r3, #4
   29884:	str	r3, [fp, #-28]	; 0xffffffe4
   29888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2988c:	uxtb	r2, r3
   29890:	ldr	r3, [fp, #-16]
   29894:	strb	r2, [r3]
   29898:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2989c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   298a0:	lsr	r3, r2, r3
   298a4:	str	r3, [fp, #-24]	; 0xffffffe8
   298a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   298ac:	sub	r3, r3, #1
   298b0:	str	r3, [fp, #-28]	; 0xffffffe4
   298b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   298b8:	add	r3, r3, #1
   298bc:	str	r3, [fp, #-36]	; 0xffffffdc
   298c0:	ldr	r3, [fp, #4]
   298c4:	rsb	r3, r3, #0
   298c8:	ldr	r2, [fp, #-16]
   298cc:	add	r3, r2, r3
   298d0:	str	r3, [fp, #-16]
   298d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   298d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   298dc:	cmp	r2, r3
   298e0:	bcc	29838 <__assert_fail@plt+0x186e0>
   298e4:	ldr	r3, [fp, #-12]
   298e8:	add	r3, r3, #1
   298ec:	str	r3, [fp, #-12]
   298f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   298f4:	ldr	r2, [fp, #-16]
   298f8:	add	r3, r2, r3
   298fc:	str	r3, [fp, #-16]
   29900:	ldr	r2, [fp, #-12]
   29904:	ldr	r3, [fp, #-8]
   29908:	cmp	r2, r3
   2990c:	bcc	2982c <__assert_fail@plt+0x186d4>
   29910:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29918:	cmp	r2, r3
   2991c:	beq	29940 <__assert_fail@plt+0x187e8>
   29920:	movw	r3, #24672	; 0x6060
   29924:	movt	r3, #3
   29928:	movw	r2, #4611	; 0x1203
   2992c:	movw	r1, #22376	; 0x5768
   29930:	movt	r1, #3
   29934:	movw	r0, #23908	; 0x5d64
   29938:	movt	r0, #3
   2993c:	bl	11158 <__assert_fail@plt>
   29940:	ldr	r2, [fp, #-12]
   29944:	ldr	r3, [fp, #-8]
   29948:	cmp	r2, r3
   2994c:	beq	29970 <__assert_fail@plt+0x18818>
   29950:	movw	r3, #24672	; 0x6060
   29954:	movt	r3, #3
   29958:	movw	r2, #4612	; 0x1204
   2995c:	movw	r1, #22376	; 0x5768
   29960:	movt	r1, #3
   29964:	movw	r0, #23916	; 0x5d6c
   29968:	movt	r0, #3
   2996c:	bl	11158 <__assert_fail@plt>
   29970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29974:	cmp	r3, #0
   29978:	beq	29988 <__assert_fail@plt+0x18830>
   2997c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29980:	ldr	r2, [fp, #-8]
   29984:	str	r2, [r3]
   29988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2998c:	mov	r0, r3
   29990:	sub	sp, fp, #4
   29994:	ldr	fp, [sp]
   29998:	add	sp, sp, #4
   2999c:	pop	{pc}		; (ldr pc, [sp], #4)
   299a0:	str	fp, [sp, #-8]!
   299a4:	str	lr, [sp, #4]
   299a8:	add	fp, sp, #4
   299ac:	sub	sp, sp, #16
   299b0:	str	r0, [fp, #-16]
   299b4:	ldr	r3, [fp, #-16]
   299b8:	cmp	r3, #0
   299bc:	bne	299e4 <__assert_fail@plt+0x1888c>
   299c0:	movw	r3, #29056	; 0x7180
   299c4:	movt	r3, #4
   299c8:	ldr	r3, [r3]
   299cc:	mov	r2, #55	; 0x37
   299d0:	mov	r1, #1
   299d4:	movw	r0, #24684	; 0x606c
   299d8:	movt	r0, #3
   299dc:	bl	10f84 <fwrite@plt>
   299e0:	bl	11140 <abort@plt>
   299e4:	mov	r1, #47	; 0x2f
   299e8:	ldr	r0, [fp, #-16]
   299ec:	bl	110f8 <strrchr@plt>
   299f0:	str	r0, [fp, #-8]
   299f4:	ldr	r3, [fp, #-8]
   299f8:	cmp	r3, #0
   299fc:	beq	29a0c <__assert_fail@plt+0x188b4>
   29a00:	ldr	r3, [fp, #-8]
   29a04:	add	r3, r3, #1
   29a08:	b	29a10 <__assert_fail@plt+0x188b8>
   29a0c:	ldr	r3, [fp, #-16]
   29a10:	str	r3, [fp, #-12]
   29a14:	ldr	r2, [fp, #-12]
   29a18:	ldr	r3, [fp, #-16]
   29a1c:	sub	r3, r2, r3
   29a20:	cmp	r3, #6
   29a24:	ble	29a94 <__assert_fail@plt+0x1893c>
   29a28:	ldr	r3, [fp, #-12]
   29a2c:	sub	r3, r3, #7
   29a30:	mov	r2, #7
   29a34:	movw	r1, #24740	; 0x60a4
   29a38:	movt	r1, #3
   29a3c:	mov	r0, r3
   29a40:	bl	11134 <strncmp@plt>
   29a44:	mov	r3, r0
   29a48:	cmp	r3, #0
   29a4c:	bne	29a94 <__assert_fail@plt+0x1893c>
   29a50:	ldr	r3, [fp, #-12]
   29a54:	str	r3, [fp, #-16]
   29a58:	mov	r2, #3
   29a5c:	movw	r1, #24748	; 0x60ac
   29a60:	movt	r1, #3
   29a64:	ldr	r0, [fp, #-12]
   29a68:	bl	11134 <strncmp@plt>
   29a6c:	mov	r3, r0
   29a70:	cmp	r3, #0
   29a74:	bne	29a94 <__assert_fail@plt+0x1893c>
   29a78:	ldr	r3, [fp, #-12]
   29a7c:	add	r3, r3, #3
   29a80:	str	r3, [fp, #-16]
   29a84:	movw	r3, #29040	; 0x7170
   29a88:	movt	r3, #4
   29a8c:	ldr	r2, [fp, #-16]
   29a90:	str	r2, [r3]
   29a94:	movw	r3, #29096	; 0x71a8
   29a98:	movt	r3, #4
   29a9c:	ldr	r2, [fp, #-16]
   29aa0:	str	r2, [r3]
   29aa4:	movw	r3, #29044	; 0x7174
   29aa8:	movt	r3, #4
   29aac:	ldr	r2, [fp, #-16]
   29ab0:	str	r2, [r3]
   29ab4:	nop	{0}
   29ab8:	sub	sp, fp, #4
   29abc:	ldr	fp, [sp]
   29ac0:	add	sp, sp, #4
   29ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   29ac8:	str	fp, [sp, #-8]!
   29acc:	str	lr, [sp, #4]
   29ad0:	add	fp, sp, #4
   29ad4:	sub	sp, sp, #144	; 0x90
   29ad8:	str	r0, [fp, #-144]	; 0xffffff70
   29adc:	str	r1, [fp, #-148]	; 0xffffff6c
   29ae0:	mov	r1, #2
   29ae4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   29ae8:	bl	2d1dc <__assert_fail@plt+0x1c084>
   29aec:	mov	r3, r0
   29af0:	str	r3, [fp, #-16]
   29af4:	mov	r3, #0
   29af8:	strb	r3, [fp, #-5]
   29afc:	b	29f94 <__assert_fail@plt+0x18e3c>
   29b00:	ldr	r1, [fp, #-16]
   29b04:	ldr	r0, [fp, #-144]	; 0xffffff70
   29b08:	bl	2ff20 <__assert_fail@plt+0x1edc8>
   29b0c:	str	r0, [fp, #-20]	; 0xffffffec
   29b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b14:	cmp	r3, #0
   29b18:	beq	29fa8 <__assert_fail@plt+0x18e50>
   29b1c:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   29b20:	mov	r3, r0
   29b24:	cmp	r3, #1
   29b28:	bls	29ea0 <__assert_fail@plt+0x18d48>
   29b2c:	ldr	r3, [fp, #-144]	; 0xffffff70
   29b30:	str	r3, [fp, #-120]	; 0xffffff88
   29b34:	mov	r3, #0
   29b38:	strb	r3, [fp, #-136]	; 0xffffff78
   29b3c:	sub	r3, fp, #136	; 0x88
   29b40:	add	r3, r3, #4
   29b44:	mov	r2, #8
   29b48:	mov	r1, #0
   29b4c:	mov	r0, r3
   29b50:	bl	11098 <memset@plt>
   29b54:	mov	r3, #0
   29b58:	strb	r3, [fp, #-124]	; 0xffffff84
   29b5c:	mov	r3, #1
   29b60:	strb	r3, [fp, #-6]
   29b64:	ldr	r3, [fp, #-120]	; 0xffffff88
   29b68:	ldr	r2, [fp, #-20]	; 0xffffffec
   29b6c:	cmp	r2, r3
   29b70:	bls	29c3c <__assert_fail@plt+0x18ae4>
   29b74:	sub	r3, fp, #136	; 0x88
   29b78:	mov	r0, r3
   29b7c:	bl	306d8 <__assert_fail@plt+0x1f580>
   29b80:	ldrb	r3, [fp, #-112]	; 0xffffff90
   29b84:	eor	r3, r3, #1
   29b88:	uxtb	r3, r3
   29b8c:	cmp	r3, #0
   29b90:	bne	29ba0 <__assert_fail@plt+0x18a48>
   29b94:	ldr	r3, [fp, #-108]	; 0xffffff94
   29b98:	cmp	r3, #0
   29b9c:	beq	29ba8 <__assert_fail@plt+0x18a50>
   29ba0:	mov	r3, #1
   29ba4:	b	29bac <__assert_fail@plt+0x18a54>
   29ba8:	mov	r3, #0
   29bac:	cmp	r3, #0
   29bb0:	bne	29bb8 <__assert_fail@plt+0x18a60>
   29bb4:	bl	11140 <abort@plt>
   29bb8:	sub	r3, fp, #80	; 0x50
   29bbc:	sub	r2, fp, #120	; 0x78
   29bc0:	ldrd	r0, [r2]
   29bc4:	strd	r0, [r3]
   29bc8:	ldrd	r0, [r2, #8]
   29bcc:	strd	r0, [r3, #8]
   29bd0:	ldrd	r0, [r2, #16]
   29bd4:	strd	r0, [r3, #16]
   29bd8:	ldrd	r0, [r2, #24]
   29bdc:	strd	r0, [r3, #24]
   29be0:	ldrd	r0, [r2, #32]
   29be4:	strd	r0, [r3, #32]
   29be8:	ldr	r2, [fp, #-120]	; 0xffffff88
   29bec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   29bf0:	add	r3, r2, r3
   29bf4:	str	r3, [fp, #-120]	; 0xffffff88
   29bf8:	mov	r3, #0
   29bfc:	strb	r3, [fp, #-124]	; 0xffffff84
   29c00:	ldr	r3, [fp, #-120]	; 0xffffff88
   29c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   29c08:	cmp	r2, r3
   29c0c:	bhi	29b74 <__assert_fail@plt+0x18a1c>
   29c10:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   29c14:	cmp	r3, #0
   29c18:	beq	29c3c <__assert_fail@plt+0x18ae4>
   29c1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29c20:	mov	r0, r3
   29c24:	bl	11080 <iswalnum@plt>
   29c28:	mov	r3, r0
   29c2c:	cmp	r3, #0
   29c30:	beq	29c3c <__assert_fail@plt+0x18ae4>
   29c34:	mov	r3, #0
   29c38:	strb	r3, [fp, #-6]
   29c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c40:	str	r3, [fp, #-120]	; 0xffffff88
   29c44:	mov	r3, #0
   29c48:	strb	r3, [fp, #-136]	; 0xffffff78
   29c4c:	sub	r3, fp, #136	; 0x88
   29c50:	add	r3, r3, #4
   29c54:	mov	r2, #8
   29c58:	mov	r1, #0
   29c5c:	mov	r0, r3
   29c60:	bl	11098 <memset@plt>
   29c64:	mov	r3, #0
   29c68:	strb	r3, [fp, #-124]	; 0xffffff84
   29c6c:	ldr	r3, [fp, #-16]
   29c70:	str	r3, [fp, #-64]	; 0xffffffc0
   29c74:	mov	r3, #0
   29c78:	strb	r3, [fp, #-80]	; 0xffffffb0
   29c7c:	sub	r3, fp, #80	; 0x50
   29c80:	add	r3, r3, #4
   29c84:	mov	r2, #8
   29c88:	mov	r1, #0
   29c8c:	mov	r0, r3
   29c90:	bl	11098 <memset@plt>
   29c94:	mov	r3, #0
   29c98:	strb	r3, [fp, #-68]	; 0xffffffbc
   29c9c:	b	29d14 <__assert_fail@plt+0x18bbc>
   29ca0:	sub	r3, fp, #136	; 0x88
   29ca4:	mov	r0, r3
   29ca8:	bl	306d8 <__assert_fail@plt+0x1f580>
   29cac:	ldrb	r3, [fp, #-112]	; 0xffffff90
   29cb0:	eor	r3, r3, #1
   29cb4:	uxtb	r3, r3
   29cb8:	cmp	r3, #0
   29cbc:	bne	29ccc <__assert_fail@plt+0x18b74>
   29cc0:	ldr	r3, [fp, #-108]	; 0xffffff94
   29cc4:	cmp	r3, #0
   29cc8:	beq	29cd4 <__assert_fail@plt+0x18b7c>
   29ccc:	mov	r3, #1
   29cd0:	b	29cd8 <__assert_fail@plt+0x18b80>
   29cd4:	mov	r3, #0
   29cd8:	cmp	r3, #0
   29cdc:	bne	29ce4 <__assert_fail@plt+0x18b8c>
   29ce0:	bl	11140 <abort@plt>
   29ce4:	ldr	r2, [fp, #-120]	; 0xffffff88
   29ce8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   29cec:	add	r3, r2, r3
   29cf0:	str	r3, [fp, #-120]	; 0xffffff88
   29cf4:	mov	r3, #0
   29cf8:	strb	r3, [fp, #-124]	; 0xffffff84
   29cfc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   29d00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29d04:	add	r3, r2, r3
   29d08:	str	r3, [fp, #-64]	; 0xffffffc0
   29d0c:	mov	r3, #0
   29d10:	strb	r3, [fp, #-68]	; 0xffffffbc
   29d14:	sub	r3, fp, #80	; 0x50
   29d18:	mov	r0, r3
   29d1c:	bl	306d8 <__assert_fail@plt+0x1f580>
   29d20:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   29d24:	eor	r3, r3, #1
   29d28:	uxtb	r3, r3
   29d2c:	cmp	r3, #0
   29d30:	bne	29d40 <__assert_fail@plt+0x18be8>
   29d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29d38:	cmp	r3, #0
   29d3c:	beq	29d48 <__assert_fail@plt+0x18bf0>
   29d40:	mov	r3, #1
   29d44:	b	29d4c <__assert_fail@plt+0x18bf4>
   29d48:	mov	r3, #0
   29d4c:	cmp	r3, #0
   29d50:	bne	29ca0 <__assert_fail@plt+0x18b48>
   29d54:	mov	r3, #1
   29d58:	strb	r3, [fp, #-7]
   29d5c:	sub	r3, fp, #136	; 0x88
   29d60:	mov	r0, r3
   29d64:	bl	306d8 <__assert_fail@plt+0x1f580>
   29d68:	ldrb	r3, [fp, #-112]	; 0xffffff90
   29d6c:	eor	r3, r3, #1
   29d70:	uxtb	r3, r3
   29d74:	cmp	r3, #0
   29d78:	bne	29d88 <__assert_fail@plt+0x18c30>
   29d7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   29d80:	cmp	r3, #0
   29d84:	beq	29d90 <__assert_fail@plt+0x18c38>
   29d88:	mov	r3, #1
   29d8c:	b	29d94 <__assert_fail@plt+0x18c3c>
   29d90:	mov	r3, #0
   29d94:	cmp	r3, #0
   29d98:	beq	29df8 <__assert_fail@plt+0x18ca0>
   29d9c:	sub	r3, fp, #80	; 0x50
   29da0:	sub	r2, fp, #120	; 0x78
   29da4:	ldrd	r0, [r2]
   29da8:	strd	r0, [r3]
   29dac:	ldrd	r0, [r2, #8]
   29db0:	strd	r0, [r3, #8]
   29db4:	ldrd	r0, [r2, #16]
   29db8:	strd	r0, [r3, #16]
   29dbc:	ldrd	r0, [r2, #24]
   29dc0:	strd	r0, [r3, #24]
   29dc4:	ldrd	r0, [r2, #32]
   29dc8:	strd	r0, [r3, #32]
   29dcc:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   29dd0:	cmp	r3, #0
   29dd4:	beq	29df8 <__assert_fail@plt+0x18ca0>
   29dd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29ddc:	mov	r0, r3
   29de0:	bl	11080 <iswalnum@plt>
   29de4:	mov	r3, r0
   29de8:	cmp	r3, #0
   29dec:	beq	29df8 <__assert_fail@plt+0x18ca0>
   29df0:	mov	r3, #0
   29df4:	strb	r3, [fp, #-7]
   29df8:	ldrb	r3, [fp, #-6]
   29dfc:	cmp	r3, #0
   29e00:	beq	29e1c <__assert_fail@plt+0x18cc4>
   29e04:	ldrb	r3, [fp, #-7]
   29e08:	cmp	r3, #0
   29e0c:	beq	29e1c <__assert_fail@plt+0x18cc4>
   29e10:	mov	r3, #1
   29e14:	strb	r3, [fp, #-5]
   29e18:	b	29fbc <__assert_fail@plt+0x18e64>
   29e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29e20:	str	r3, [fp, #-120]	; 0xffffff88
   29e24:	mov	r3, #0
   29e28:	strb	r3, [fp, #-136]	; 0xffffff78
   29e2c:	sub	r3, fp, #136	; 0x88
   29e30:	add	r3, r3, #4
   29e34:	mov	r2, #8
   29e38:	mov	r1, #0
   29e3c:	mov	r0, r3
   29e40:	bl	11098 <memset@plt>
   29e44:	mov	r3, #0
   29e48:	strb	r3, [fp, #-124]	; 0xffffff84
   29e4c:	sub	r3, fp, #136	; 0x88
   29e50:	mov	r0, r3
   29e54:	bl	306d8 <__assert_fail@plt+0x1f580>
   29e58:	ldrb	r3, [fp, #-112]	; 0xffffff90
   29e5c:	eor	r3, r3, #1
   29e60:	uxtb	r3, r3
   29e64:	cmp	r3, #0
   29e68:	bne	29e78 <__assert_fail@plt+0x18d20>
   29e6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   29e70:	cmp	r3, #0
   29e74:	beq	29e80 <__assert_fail@plt+0x18d28>
   29e78:	mov	r3, #1
   29e7c:	b	29e84 <__assert_fail@plt+0x18d2c>
   29e80:	mov	r3, #0
   29e84:	cmp	r3, #0
   29e88:	beq	29fb0 <__assert_fail@plt+0x18e58>
   29e8c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   29e90:	ldr	r2, [fp, #-20]	; 0xffffffec
   29e94:	add	r3, r2, r3
   29e98:	str	r3, [fp, #-144]	; 0xffffff70
   29e9c:	b	29f94 <__assert_fail@plt+0x18e3c>
   29ea0:	mov	r3, #1
   29ea4:	strb	r3, [fp, #-8]
   29ea8:	ldr	r2, [fp, #-144]	; 0xffffff70
   29eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   29eb0:	cmp	r2, r3
   29eb4:	bcs	29ef0 <__assert_fail@plt+0x18d98>
   29eb8:	bl	11020 <__ctype_b_loc@plt>
   29ebc:	mov	r3, r0
   29ec0:	ldr	r2, [r3]
   29ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ec8:	sub	r3, r3, #1
   29ecc:	ldrb	r3, [r3]
   29ed0:	lsl	r3, r3, #1
   29ed4:	add	r3, r2, r3
   29ed8:	ldrh	r3, [r3]
   29edc:	and	r3, r3, #8
   29ee0:	cmp	r3, #0
   29ee4:	beq	29ef0 <__assert_fail@plt+0x18d98>
   29ee8:	mov	r3, #0
   29eec:	strb	r3, [fp, #-8]
   29ef0:	ldr	r0, [fp, #-16]
   29ef4:	bl	11050 <strlen@plt>
   29ef8:	mov	r2, r0
   29efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f00:	add	r3, r3, r2
   29f04:	str	r3, [fp, #-24]	; 0xffffffe8
   29f08:	mov	r3, #1
   29f0c:	strb	r3, [fp, #-9]
   29f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f14:	ldrb	r3, [r3]
   29f18:	cmp	r3, #0
   29f1c:	beq	29f54 <__assert_fail@plt+0x18dfc>
   29f20:	bl	11020 <__ctype_b_loc@plt>
   29f24:	mov	r3, r0
   29f28:	ldr	r2, [r3]
   29f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f30:	ldrb	r3, [r3]
   29f34:	lsl	r3, r3, #1
   29f38:	add	r3, r2, r3
   29f3c:	ldrh	r3, [r3]
   29f40:	and	r3, r3, #8
   29f44:	cmp	r3, #0
   29f48:	beq	29f54 <__assert_fail@plt+0x18dfc>
   29f4c:	mov	r3, #0
   29f50:	strb	r3, [fp, #-9]
   29f54:	ldrb	r3, [fp, #-8]
   29f58:	cmp	r3, #0
   29f5c:	beq	29f78 <__assert_fail@plt+0x18e20>
   29f60:	ldrb	r3, [fp, #-9]
   29f64:	cmp	r3, #0
   29f68:	beq	29f78 <__assert_fail@plt+0x18e20>
   29f6c:	mov	r3, #1
   29f70:	strb	r3, [fp, #-5]
   29f74:	b	29fbc <__assert_fail@plt+0x18e64>
   29f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f7c:	ldrb	r3, [r3]
   29f80:	cmp	r3, #0
   29f84:	beq	29fb8 <__assert_fail@plt+0x18e60>
   29f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f8c:	add	r3, r3, #1
   29f90:	str	r3, [fp, #-144]	; 0xffffff70
   29f94:	ldr	r3, [fp, #-144]	; 0xffffff70
   29f98:	ldrb	r3, [r3]
   29f9c:	cmp	r3, #0
   29fa0:	bne	29b00 <__assert_fail@plt+0x189a8>
   29fa4:	b	29fbc <__assert_fail@plt+0x18e64>
   29fa8:	nop	{0}
   29fac:	b	29fbc <__assert_fail@plt+0x18e64>
   29fb0:	nop	{0}
   29fb4:	b	29fbc <__assert_fail@plt+0x18e64>
   29fb8:	nop	{0}
   29fbc:	ldr	r0, [fp, #-16]
   29fc0:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   29fc4:	ldrb	r3, [fp, #-5]
   29fc8:	mov	r0, r3
   29fcc:	sub	sp, fp, #4
   29fd0:	ldr	fp, [sp]
   29fd4:	add	sp, sp, #4
   29fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   29fdc:	str	r4, [sp, #-12]!
   29fe0:	str	fp, [sp, #4]
   29fe4:	str	lr, [sp, #8]
   29fe8:	add	fp, sp, #8
   29fec:	sub	sp, sp, #20
   29ff0:	str	r0, [fp, #-24]	; 0xffffffe8
   29ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29ff8:	bl	11044 <gettext@plt>
   29ffc:	str	r0, [fp, #-16]
   2a000:	ldr	r2, [fp, #-16]
   2a004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a008:	cmp	r2, r3
   2a00c:	beq	2a080 <__assert_fail@plt+0x18f28>
   2a010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a014:	ldr	r0, [fp, #-16]
   2a018:	bl	29ac8 <__assert_fail@plt+0x18970>
   2a01c:	mov	r3, r0
   2a020:	cmp	r3, #0
   2a024:	beq	2a030 <__assert_fail@plt+0x18ed8>
   2a028:	ldr	r3, [fp, #-16]
   2a02c:	b	2a084 <__assert_fail@plt+0x18f2c>
   2a030:	ldr	r0, [fp, #-16]
   2a034:	bl	11050 <strlen@plt>
   2a038:	mov	r4, r0
   2a03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a040:	bl	11050 <strlen@plt>
   2a044:	mov	r3, r0
   2a048:	add	r3, r4, r3
   2a04c:	add	r3, r3, #4
   2a050:	mov	r0, r3
   2a054:	bl	2de60 <__assert_fail@plt+0x1cd08>
   2a058:	mov	r3, r0
   2a05c:	str	r3, [fp, #-20]	; 0xffffffec
   2a060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a064:	ldr	r2, [fp, #-16]
   2a068:	movw	r1, #24752	; 0x60b0
   2a06c:	movt	r1, #3
   2a070:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a074:	bl	11110 <sprintf@plt>
   2a078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a07c:	b	2a084 <__assert_fail@plt+0x18f2c>
   2a080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a084:	mov	r0, r3
   2a088:	sub	sp, fp, #8
   2a08c:	ldr	r4, [sp]
   2a090:	ldr	fp, [sp, #4]
   2a094:	add	sp, sp, #8
   2a098:	pop	{pc}		; (ldr pc, [sp], #4)
   2a09c:	str	r4, [sp, #-12]!
   2a0a0:	str	fp, [sp, #4]
   2a0a4:	str	lr, [sp, #8]
   2a0a8:	add	fp, sp, #8
   2a0ac:	sub	sp, sp, #60	; 0x3c
   2a0b0:	str	r0, [fp, #-64]	; 0xffffffc0
   2a0b4:	str	r1, [fp, #-68]	; 0xffffffbc
   2a0b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a0bc:	bl	11044 <gettext@plt>
   2a0c0:	str	r0, [fp, #-32]	; 0xffffffe0
   2a0c4:	bl	2f044 <__assert_fail@plt+0x1deec>
   2a0c8:	str	r0, [fp, #-36]	; 0xffffffdc
   2a0cc:	mov	r3, #0
   2a0d0:	str	r3, [fp, #-16]
   2a0d4:	mov	r3, #0
   2a0d8:	str	r3, [fp, #-20]	; 0xffffffec
   2a0dc:	mov	r3, #0
   2a0e0:	str	r3, [fp, #-24]	; 0xffffffe8
   2a0e4:	mov	r3, #0
   2a0e8:	str	r3, [fp, #-28]	; 0xffffffe4
   2a0ec:	movw	r1, #24760	; 0x60b8
   2a0f0:	movt	r1, #3
   2a0f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a0f8:	bl	2ea84 <__assert_fail@plt+0x1d92c>
   2a0fc:	mov	r3, r0
   2a100:	cmp	r3, #0
   2a104:	beq	2a1e8 <__assert_fail@plt+0x19090>
   2a108:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a10c:	movw	r1, #24760	; 0x60b8
   2a110:	movt	r1, #3
   2a114:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a118:	bl	2e7fc <__assert_fail@plt+0x1d6a4>
   2a11c:	mov	r3, r0
   2a120:	str	r3, [fp, #-16]
   2a124:	ldr	r3, [fp, #-16]
   2a128:	str	r3, [fp, #-24]	; 0xffffffe8
   2a12c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a130:	bl	11050 <strlen@plt>
   2a134:	str	r0, [fp, #-40]	; 0xffffffd8
   2a138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a13c:	add	r3, r3, #11
   2a140:	mov	r0, r3
   2a144:	bl	2de60 <__assert_fail@plt+0x1cd08>
   2a148:	mov	r3, r0
   2a14c:	str	r3, [fp, #-44]	; 0xffffffd4
   2a150:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a154:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a15c:	bl	10f00 <memcpy@plt>
   2a160:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a168:	add	r3, r2, r3
   2a16c:	mov	r2, #11
   2a170:	movw	r1, #24768	; 0x60c0
   2a174:	movt	r1, #3
   2a178:	mov	r0, r3
   2a17c:	bl	10f00 <memcpy@plt>
   2a180:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a184:	movw	r1, #24760	; 0x60b8
   2a188:	movt	r1, #3
   2a18c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a190:	bl	2e7fc <__assert_fail@plt+0x1d6a4>
   2a194:	mov	r3, r0
   2a198:	str	r3, [fp, #-48]	; 0xffffffd0
   2a19c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2a1a0:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a1a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a1a8:	cmp	r3, #0
   2a1ac:	beq	2a1f8 <__assert_fail@plt+0x190a0>
   2a1b0:	mov	r1, #63	; 0x3f
   2a1b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a1b8:	bl	1105c <strchr@plt>
   2a1bc:	mov	r3, r0
   2a1c0:	cmp	r3, #0
   2a1c4:	beq	2a1d4 <__assert_fail@plt+0x1907c>
   2a1c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2a1cc:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a1d0:	b	2a1f8 <__assert_fail@plt+0x190a0>
   2a1d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a1d8:	str	r3, [fp, #-20]	; 0xffffffec
   2a1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a1e0:	str	r3, [fp, #-28]	; 0xffffffe4
   2a1e4:	b	2a1f8 <__assert_fail@plt+0x190a0>
   2a1e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a1ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2a1f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a1f4:	str	r3, [fp, #-28]	; 0xffffffe4
   2a1f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a1fc:	cmp	r3, #0
   2a200:	bne	2a220 <__assert_fail@plt+0x190c8>
   2a204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a208:	cmp	r3, #0
   2a20c:	beq	2a218 <__assert_fail@plt+0x190c0>
   2a210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a214:	b	2a224 <__assert_fail@plt+0x190cc>
   2a218:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a21c:	b	2a224 <__assert_fail@plt+0x190cc>
   2a220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a224:	str	r3, [fp, #-52]	; 0xffffffcc
   2a228:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2a22c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a230:	bl	10eac <strcmp@plt>
   2a234:	mov	r3, r0
   2a238:	cmp	r3, #0
   2a23c:	beq	2a348 <__assert_fail@plt+0x191f0>
   2a240:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2a244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a248:	bl	29ac8 <__assert_fail@plt+0x18970>
   2a24c:	mov	r3, r0
   2a250:	cmp	r3, #0
   2a254:	bne	2a2a0 <__assert_fail@plt+0x19148>
   2a258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a25c:	cmp	r3, #0
   2a260:	beq	2a27c <__assert_fail@plt+0x19124>
   2a264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a26c:	bl	29ac8 <__assert_fail@plt+0x18970>
   2a270:	mov	r3, r0
   2a274:	cmp	r3, #0
   2a278:	bne	2a2a0 <__assert_fail@plt+0x19148>
   2a27c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a280:	cmp	r3, #0
   2a284:	beq	2a2d0 <__assert_fail@plt+0x19178>
   2a288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a28c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a290:	bl	29ac8 <__assert_fail@plt+0x18970>
   2a294:	mov	r3, r0
   2a298:	cmp	r3, #0
   2a29c:	beq	2a2d0 <__assert_fail@plt+0x19178>
   2a2a0:	ldr	r3, [fp, #-16]
   2a2a4:	cmp	r3, #0
   2a2a8:	beq	2a2b4 <__assert_fail@plt+0x1915c>
   2a2ac:	ldr	r0, [fp, #-16]
   2a2b0:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a2b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a2b8:	cmp	r3, #0
   2a2bc:	beq	2a2c8 <__assert_fail@plt+0x19170>
   2a2c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a2c4:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a2c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2cc:	b	2a394 <__assert_fail@plt+0x1923c>
   2a2d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2d4:	bl	11050 <strlen@plt>
   2a2d8:	mov	r4, r0
   2a2dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a2e0:	bl	11050 <strlen@plt>
   2a2e4:	mov	r3, r0
   2a2e8:	add	r3, r4, r3
   2a2ec:	add	r3, r3, #4
   2a2f0:	mov	r0, r3
   2a2f4:	bl	2de60 <__assert_fail@plt+0x1cd08>
   2a2f8:	mov	r3, r0
   2a2fc:	str	r3, [fp, #-56]	; 0xffffffc8
   2a300:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a304:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a308:	movw	r1, #24752	; 0x60b0
   2a30c:	movt	r1, #3
   2a310:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a314:	bl	11110 <sprintf@plt>
   2a318:	ldr	r3, [fp, #-16]
   2a31c:	cmp	r3, #0
   2a320:	beq	2a32c <__assert_fail@plt+0x191d4>
   2a324:	ldr	r0, [fp, #-16]
   2a328:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a32c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a330:	cmp	r3, #0
   2a334:	beq	2a340 <__assert_fail@plt+0x191e8>
   2a338:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a33c:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a340:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a344:	b	2a394 <__assert_fail@plt+0x1923c>
   2a348:	ldr	r3, [fp, #-16]
   2a34c:	cmp	r3, #0
   2a350:	beq	2a36c <__assert_fail@plt+0x19214>
   2a354:	ldr	r2, [fp, #-16]
   2a358:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a35c:	cmp	r2, r3
   2a360:	beq	2a36c <__assert_fail@plt+0x19214>
   2a364:	ldr	r0, [fp, #-16]
   2a368:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a36c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a370:	cmp	r3, #0
   2a374:	beq	2a390 <__assert_fail@plt+0x19238>
   2a378:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a37c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a380:	cmp	r2, r3
   2a384:	beq	2a390 <__assert_fail@plt+0x19238>
   2a388:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a38c:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2a390:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a394:	mov	r0, r3
   2a398:	sub	sp, fp, #8
   2a39c:	ldr	r4, [sp]
   2a3a0:	ldr	fp, [sp, #4]
   2a3a4:	add	sp, sp, #8
   2a3a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a3ac:	str	fp, [sp, #-8]!
   2a3b0:	str	lr, [sp, #4]
   2a3b4:	add	fp, sp, #4
   2a3b8:	sub	sp, sp, #16
   2a3bc:	str	r0, [fp, #-16]
   2a3c0:	bl	11074 <__errno_location@plt>
   2a3c4:	mov	r3, r0
   2a3c8:	ldr	r3, [r3]
   2a3cc:	str	r3, [fp, #-8]
   2a3d0:	ldr	r3, [fp, #-16]
   2a3d4:	cmp	r3, #0
   2a3d8:	beq	2a3e4 <__assert_fail@plt+0x1928c>
   2a3dc:	ldr	r3, [fp, #-16]
   2a3e0:	b	2a3ec <__assert_fail@plt+0x19294>
   2a3e4:	movw	r3, #29100	; 0x71ac
   2a3e8:	movt	r3, #4
   2a3ec:	mov	r1, #48	; 0x30
   2a3f0:	mov	r0, r3
   2a3f4:	bl	2e580 <__assert_fail@plt+0x1d428>
   2a3f8:	mov	r3, r0
   2a3fc:	str	r3, [fp, #-12]
   2a400:	bl	11074 <__errno_location@plt>
   2a404:	mov	r2, r0
   2a408:	ldr	r3, [fp, #-8]
   2a40c:	str	r3, [r2]
   2a410:	ldr	r3, [fp, #-12]
   2a414:	mov	r0, r3
   2a418:	sub	sp, fp, #4
   2a41c:	ldr	fp, [sp]
   2a420:	add	sp, sp, #4
   2a424:	pop	{pc}		; (ldr pc, [sp], #4)
   2a428:	push	{fp}		; (str fp, [sp, #-4]!)
   2a42c:	add	fp, sp, #0
   2a430:	sub	sp, sp, #12
   2a434:	str	r0, [fp, #-8]
   2a438:	ldr	r3, [fp, #-8]
   2a43c:	cmp	r3, #0
   2a440:	beq	2a44c <__assert_fail@plt+0x192f4>
   2a444:	ldr	r3, [fp, #-8]
   2a448:	b	2a454 <__assert_fail@plt+0x192fc>
   2a44c:	movw	r3, #29100	; 0x71ac
   2a450:	movt	r3, #4
   2a454:	ldr	r3, [r3]
   2a458:	mov	r0, r3
   2a45c:	add	sp, fp, #0
   2a460:	pop	{fp}		; (ldr fp, [sp], #4)
   2a464:	bx	lr
   2a468:	push	{fp}		; (str fp, [sp, #-4]!)
   2a46c:	add	fp, sp, #0
   2a470:	sub	sp, sp, #12
   2a474:	str	r0, [fp, #-8]
   2a478:	str	r1, [fp, #-12]
   2a47c:	ldr	r3, [fp, #-8]
   2a480:	cmp	r3, #0
   2a484:	beq	2a490 <__assert_fail@plt+0x19338>
   2a488:	ldr	r3, [fp, #-8]
   2a48c:	b	2a498 <__assert_fail@plt+0x19340>
   2a490:	movw	r3, #29100	; 0x71ac
   2a494:	movt	r3, #4
   2a498:	ldr	r2, [fp, #-12]
   2a49c:	str	r2, [r3]
   2a4a0:	nop	{0}
   2a4a4:	add	sp, fp, #0
   2a4a8:	pop	{fp}		; (ldr fp, [sp], #4)
   2a4ac:	bx	lr
   2a4b0:	push	{fp}		; (str fp, [sp, #-4]!)
   2a4b4:	add	fp, sp, #0
   2a4b8:	sub	sp, sp, #36	; 0x24
   2a4bc:	str	r0, [fp, #-24]	; 0xffffffe8
   2a4c0:	mov	r3, r1
   2a4c4:	str	r2, [fp, #-32]	; 0xffffffe0
   2a4c8:	strb	r3, [fp, #-25]	; 0xffffffe7
   2a4cc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2a4d0:	strb	r3, [fp, #-5]
   2a4d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4d8:	cmp	r3, #0
   2a4dc:	beq	2a4e8 <__assert_fail@plt+0x19390>
   2a4e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4e4:	b	2a4f0 <__assert_fail@plt+0x19398>
   2a4e8:	movw	r3, #29100	; 0x71ac
   2a4ec:	movt	r3, #4
   2a4f0:	add	r2, r3, #8
   2a4f4:	ldrb	r3, [fp, #-5]
   2a4f8:	lsr	r3, r3, #5
   2a4fc:	uxtb	r3, r3
   2a500:	lsl	r3, r3, #2
   2a504:	add	r3, r2, r3
   2a508:	str	r3, [fp, #-12]
   2a50c:	ldrb	r3, [fp, #-5]
   2a510:	and	r3, r3, #31
   2a514:	str	r3, [fp, #-16]
   2a518:	ldr	r3, [fp, #-12]
   2a51c:	ldr	r2, [r3]
   2a520:	ldr	r3, [fp, #-16]
   2a524:	lsr	r3, r2, r3
   2a528:	and	r3, r3, #1
   2a52c:	str	r3, [fp, #-20]	; 0xffffffec
   2a530:	ldr	r3, [fp, #-12]
   2a534:	ldr	r3, [r3]
   2a538:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a53c:	and	r1, r2, #1
   2a540:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a544:	eor	r1, r1, r2
   2a548:	ldr	r2, [fp, #-16]
   2a54c:	lsl	r2, r1, r2
   2a550:	eor	r2, r2, r3
   2a554:	ldr	r3, [fp, #-12]
   2a558:	str	r2, [r3]
   2a55c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a560:	mov	r0, r3
   2a564:	add	sp, fp, #0
   2a568:	pop	{fp}		; (ldr fp, [sp], #4)
   2a56c:	bx	lr
   2a570:	push	{fp}		; (str fp, [sp, #-4]!)
   2a574:	add	fp, sp, #0
   2a578:	sub	sp, sp, #20
   2a57c:	str	r0, [fp, #-16]
   2a580:	str	r1, [fp, #-20]	; 0xffffffec
   2a584:	ldr	r3, [fp, #-16]
   2a588:	cmp	r3, #0
   2a58c:	bne	2a59c <__assert_fail@plt+0x19444>
   2a590:	movw	r3, #29100	; 0x71ac
   2a594:	movt	r3, #4
   2a598:	str	r3, [fp, #-16]
   2a59c:	ldr	r3, [fp, #-16]
   2a5a0:	ldr	r3, [r3, #4]
   2a5a4:	str	r3, [fp, #-8]
   2a5a8:	ldr	r3, [fp, #-16]
   2a5ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a5b0:	str	r2, [r3, #4]
   2a5b4:	ldr	r3, [fp, #-8]
   2a5b8:	mov	r0, r3
   2a5bc:	add	sp, fp, #0
   2a5c0:	pop	{fp}		; (ldr fp, [sp], #4)
   2a5c4:	bx	lr
   2a5c8:	str	fp, [sp, #-8]!
   2a5cc:	str	lr, [sp, #4]
   2a5d0:	add	fp, sp, #4
   2a5d4:	sub	sp, sp, #16
   2a5d8:	str	r0, [fp, #-8]
   2a5dc:	str	r1, [fp, #-12]
   2a5e0:	str	r2, [fp, #-16]
   2a5e4:	ldr	r3, [fp, #-8]
   2a5e8:	cmp	r3, #0
   2a5ec:	bne	2a5fc <__assert_fail@plt+0x194a4>
   2a5f0:	movw	r3, #29100	; 0x71ac
   2a5f4:	movt	r3, #4
   2a5f8:	str	r3, [fp, #-8]
   2a5fc:	ldr	r3, [fp, #-8]
   2a600:	mov	r2, #10
   2a604:	str	r2, [r3]
   2a608:	ldr	r3, [fp, #-12]
   2a60c:	cmp	r3, #0
   2a610:	beq	2a620 <__assert_fail@plt+0x194c8>
   2a614:	ldr	r3, [fp, #-16]
   2a618:	cmp	r3, #0
   2a61c:	bne	2a624 <__assert_fail@plt+0x194cc>
   2a620:	bl	11140 <abort@plt>
   2a624:	ldr	r3, [fp, #-8]
   2a628:	ldr	r2, [fp, #-12]
   2a62c:	str	r2, [r3, #40]	; 0x28
   2a630:	ldr	r3, [fp, #-8]
   2a634:	ldr	r2, [fp, #-16]
   2a638:	str	r2, [r3, #44]	; 0x2c
   2a63c:	nop	{0}
   2a640:	sub	sp, fp, #4
   2a644:	ldr	fp, [sp]
   2a648:	add	sp, sp, #4
   2a64c:	pop	{pc}		; (ldr pc, [sp], #4)
   2a650:	str	fp, [sp, #-8]!
   2a654:	str	lr, [sp, #4]
   2a658:	add	fp, sp, #4
   2a65c:	sub	sp, sp, #56	; 0x38
   2a660:	str	r0, [fp, #-56]	; 0xffffffc8
   2a664:	str	r1, [fp, #-60]	; 0xffffffc4
   2a668:	sub	r1, fp, #52	; 0x34
   2a66c:	mov	r2, #0
   2a670:	mov	r3, #0
   2a674:	strd	r2, [r1]
   2a678:	strd	r2, [r1, #8]
   2a67c:	strd	r2, [r1, #16]
   2a680:	strd	r2, [r1, #24]
   2a684:	strd	r2, [r1, #32]
   2a688:	strd	r2, [r1, #40]	; 0x28
   2a68c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a690:	cmp	r3, #10
   2a694:	bne	2a69c <__assert_fail@plt+0x19544>
   2a698:	bl	11140 <abort@plt>
   2a69c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a6a0:	str	r3, [fp, #-52]	; 0xffffffcc
   2a6a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a6a8:	mov	r2, r3
   2a6ac:	sub	r3, fp, #52	; 0x34
   2a6b0:	ldrd	r0, [r3]
   2a6b4:	strd	r0, [r2]
   2a6b8:	ldrd	r0, [r3, #8]
   2a6bc:	strd	r0, [r2, #8]
   2a6c0:	ldrd	r0, [r3, #16]
   2a6c4:	strd	r0, [r2, #16]
   2a6c8:	ldrd	r0, [r3, #24]
   2a6cc:	strd	r0, [r2, #24]
   2a6d0:	ldrd	r0, [r3, #32]
   2a6d4:	strd	r0, [r2, #32]
   2a6d8:	ldrd	r0, [r3, #40]	; 0x28
   2a6dc:	strd	r0, [r2, #40]	; 0x28
   2a6e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a6e4:	sub	sp, fp, #4
   2a6e8:	ldr	fp, [sp]
   2a6ec:	add	sp, sp, #4
   2a6f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a6f4:	str	fp, [sp, #-8]!
   2a6f8:	str	lr, [sp, #4]
   2a6fc:	add	fp, sp, #4
   2a700:	sub	sp, sp, #16
   2a704:	str	r0, [fp, #-16]
   2a708:	str	r1, [fp, #-20]	; 0xffffffec
   2a70c:	ldr	r0, [fp, #-16]
   2a710:	bl	11044 <gettext@plt>
   2a714:	str	r0, [fp, #-8]
   2a718:	ldr	r2, [fp, #-8]
   2a71c:	ldr	r3, [fp, #-16]
   2a720:	cmp	r2, r3
   2a724:	beq	2a730 <__assert_fail@plt+0x195d8>
   2a728:	ldr	r3, [fp, #-8]
   2a72c:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a730:	bl	2f044 <__assert_fail@plt+0x1deec>
   2a734:	str	r0, [fp, #-12]
   2a738:	movw	r1, #24968	; 0x6188
   2a73c:	movt	r1, #3
   2a740:	ldr	r0, [fp, #-12]
   2a744:	bl	2ea84 <__assert_fail@plt+0x1d92c>
   2a748:	mov	r3, r0
   2a74c:	cmp	r3, #0
   2a750:	bne	2a77c <__assert_fail@plt+0x19624>
   2a754:	ldr	r3, [fp, #-16]
   2a758:	ldrb	r3, [r3]
   2a75c:	cmp	r3, #96	; 0x60
   2a760:	bne	2a770 <__assert_fail@plt+0x19618>
   2a764:	movw	r3, #24976	; 0x6190
   2a768:	movt	r3, #3
   2a76c:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a770:	movw	r3, #24980	; 0x6194
   2a774:	movt	r3, #3
   2a778:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a77c:	movw	r1, #24984	; 0x6198
   2a780:	movt	r1, #3
   2a784:	ldr	r0, [fp, #-12]
   2a788:	bl	2ea84 <__assert_fail@plt+0x1d92c>
   2a78c:	mov	r3, r0
   2a790:	cmp	r3, #0
   2a794:	bne	2a7c0 <__assert_fail@plt+0x19668>
   2a798:	ldr	r3, [fp, #-16]
   2a79c:	ldrb	r3, [r3]
   2a7a0:	cmp	r3, #96	; 0x60
   2a7a4:	bne	2a7b4 <__assert_fail@plt+0x1965c>
   2a7a8:	movw	r3, #24992	; 0x61a0
   2a7ac:	movt	r3, #3
   2a7b0:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a7b4:	movw	r3, #24996	; 0x61a4
   2a7b8:	movt	r3, #3
   2a7bc:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a7c4:	cmp	r3, #9
   2a7c8:	bne	2a7d8 <__assert_fail@plt+0x19680>
   2a7cc:	movw	r3, #25000	; 0x61a8
   2a7d0:	movt	r3, #3
   2a7d4:	b	2a7e0 <__assert_fail@plt+0x19688>
   2a7d8:	movw	r3, #25004	; 0x61ac
   2a7dc:	movt	r3, #3
   2a7e0:	mov	r0, r3
   2a7e4:	sub	sp, fp, #4
   2a7e8:	ldr	fp, [sp]
   2a7ec:	add	sp, sp, #4
   2a7f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a7f4:	str	r4, [sp, #-12]!
   2a7f8:	str	fp, [sp, #4]
   2a7fc:	str	lr, [sp, #8]
   2a800:	add	fp, sp, #8
   2a804:	sub	sp, sp, #116	; 0x74
   2a808:	str	r0, [fp, #-88]	; 0xffffffa8
   2a80c:	str	r1, [fp, #-92]	; 0xffffffa4
   2a810:	str	r2, [fp, #-96]	; 0xffffffa0
   2a814:	str	r3, [fp, #-100]	; 0xffffff9c
   2a818:	mov	r3, #0
   2a81c:	str	r3, [fp, #-20]	; 0xffffffec
   2a820:	mov	r3, #0
   2a824:	str	r3, [fp, #-24]	; 0xffffffe8
   2a828:	mov	r3, #0
   2a82c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a830:	mov	r3, #0
   2a834:	str	r3, [fp, #-32]	; 0xffffffe0
   2a838:	mov	r3, #0
   2a83c:	strb	r3, [fp, #-33]	; 0xffffffdf
   2a840:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2a844:	mov	r3, r0
   2a848:	cmp	r3, #1
   2a84c:	moveq	r3, #1
   2a850:	movne	r3, #0
   2a854:	strb	r3, [fp, #-57]	; 0xffffffc7
   2a858:	ldr	r3, [fp, #8]
   2a85c:	and	r3, r3, #2
   2a860:	cmp	r3, #0
   2a864:	movne	r3, #1
   2a868:	moveq	r3, #0
   2a86c:	strb	r3, [fp, #-34]	; 0xffffffde
   2a870:	mov	r3, #0
   2a874:	strb	r3, [fp, #-35]	; 0xffffffdd
   2a878:	mov	r3, #0
   2a87c:	strb	r3, [fp, #-36]	; 0xffffffdc
   2a880:	mov	r3, #1
   2a884:	strb	r3, [fp, #-37]	; 0xffffffdb
   2a888:	ldr	r3, [fp, #4]
   2a88c:	cmp	r3, #10
   2a890:	ldrls	pc, [pc, r3, lsl #2]
   2a894:	b	2aaac <__assert_fail@plt+0x19954>
   2a898:	andeq	sl, r2, r0, lsr #21
   2a89c:	andeq	sl, r2, r8, lsl sl
   2a8a0:	andeq	sl, r2, ip, lsr sl
   2a8a4:	andeq	sl, r2, r0, lsl sl
   2a8a8:	andeq	sl, r2, r0, lsr #20
   2a8ac:	ldrdeq	sl, [r2], -r4
   2a8b0:	andeq	sl, r2, r4, asr #17
   2a8b4:	andeq	sl, r2, r8, lsr r9
   2a8b8:	andeq	sl, r2, ip, asr #18
   2a8bc:	andeq	sl, r2, ip, asr #18
   2a8c0:	andeq	sl, r2, ip, asr #18
   2a8c4:	mov	r3, #5
   2a8c8:	str	r3, [fp, #4]
   2a8cc:	mov	r3, #1
   2a8d0:	strb	r3, [fp, #-34]	; 0xffffffde
   2a8d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2a8d8:	eor	r3, r3, #1
   2a8dc:	uxtb	r3, r3
   2a8e0:	cmp	r3, #0
   2a8e4:	beq	2a918 <__assert_fail@plt+0x197c0>
   2a8e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a8ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a8f0:	cmp	r2, r3
   2a8f4:	bcs	2a90c <__assert_fail@plt+0x197b4>
   2a8f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2a8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a900:	add	r3, r2, r3
   2a904:	mov	r2, #34	; 0x22
   2a908:	strb	r2, [r3]
   2a90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a910:	add	r3, r3, #1
   2a914:	str	r3, [fp, #-20]	; 0xffffffec
   2a918:	mov	r3, #1
   2a91c:	strb	r3, [fp, #-33]	; 0xffffffdf
   2a920:	movw	r3, #25000	; 0x61a8
   2a924:	movt	r3, #3
   2a928:	str	r3, [fp, #-28]	; 0xffffffe4
   2a92c:	mov	r3, #1
   2a930:	str	r3, [fp, #-32]	; 0xffffffe0
   2a934:	b	2aab0 <__assert_fail@plt+0x19958>
   2a938:	mov	r3, #1
   2a93c:	strb	r3, [fp, #-33]	; 0xffffffdf
   2a940:	mov	r3, #0
   2a944:	strb	r3, [fp, #-34]	; 0xffffffde
   2a948:	b	2aab0 <__assert_fail@plt+0x19958>
   2a94c:	ldr	r3, [fp, #4]
   2a950:	cmp	r3, #10
   2a954:	beq	2a980 <__assert_fail@plt+0x19828>
   2a958:	ldr	r1, [fp, #4]
   2a95c:	movw	r0, #25008	; 0x61b0
   2a960:	movt	r0, #3
   2a964:	bl	2a6f4 <__assert_fail@plt+0x1959c>
   2a968:	str	r0, [fp, #16]
   2a96c:	ldr	r1, [fp, #4]
   2a970:	movw	r0, #25004	; 0x61ac
   2a974:	movt	r0, #3
   2a978:	bl	2a6f4 <__assert_fail@plt+0x1959c>
   2a97c:	str	r0, [fp, #20]
   2a980:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2a984:	eor	r3, r3, #1
   2a988:	uxtb	r3, r3
   2a98c:	cmp	r3, #0
   2a990:	beq	2a9f0 <__assert_fail@plt+0x19898>
   2a994:	ldr	r3, [fp, #16]
   2a998:	str	r3, [fp, #-28]	; 0xffffffe4
   2a99c:	b	2a9e0 <__assert_fail@plt+0x19888>
   2a9a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a9a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a9a8:	cmp	r2, r3
   2a9ac:	bcs	2a9c8 <__assert_fail@plt+0x19870>
   2a9b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2a9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9b8:	add	r3, r2, r3
   2a9bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a9c0:	ldrb	r2, [r2]
   2a9c4:	strb	r2, [r3]
   2a9c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9cc:	add	r3, r3, #1
   2a9d0:	str	r3, [fp, #-20]	; 0xffffffec
   2a9d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a9d8:	add	r3, r3, #1
   2a9dc:	str	r3, [fp, #-28]	; 0xffffffe4
   2a9e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a9e4:	ldrb	r3, [r3]
   2a9e8:	cmp	r3, #0
   2a9ec:	bne	2a9a0 <__assert_fail@plt+0x19848>
   2a9f0:	mov	r3, #1
   2a9f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   2a9f8:	ldr	r3, [fp, #20]
   2a9fc:	str	r3, [fp, #-28]	; 0xffffffe4
   2aa00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aa04:	bl	11050 <strlen@plt>
   2aa08:	str	r0, [fp, #-32]	; 0xffffffe0
   2aa0c:	b	2aab0 <__assert_fail@plt+0x19958>
   2aa10:	mov	r3, #1
   2aa14:	strb	r3, [fp, #-33]	; 0xffffffdf
   2aa18:	mov	r3, #1
   2aa1c:	strb	r3, [fp, #-34]	; 0xffffffde
   2aa20:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2aa24:	eor	r3, r3, #1
   2aa28:	uxtb	r3, r3
   2aa2c:	cmp	r3, #0
   2aa30:	beq	2aa3c <__assert_fail@plt+0x198e4>
   2aa34:	mov	r3, #1
   2aa38:	strb	r3, [fp, #-33]	; 0xffffffdf
   2aa3c:	mov	r3, #2
   2aa40:	str	r3, [fp, #4]
   2aa44:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2aa48:	eor	r3, r3, #1
   2aa4c:	uxtb	r3, r3
   2aa50:	cmp	r3, #0
   2aa54:	beq	2aa88 <__assert_fail@plt+0x19930>
   2aa58:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aa5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2aa60:	cmp	r2, r3
   2aa64:	bcs	2aa7c <__assert_fail@plt+0x19924>
   2aa68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2aa6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa70:	add	r3, r2, r3
   2aa74:	mov	r2, #39	; 0x27
   2aa78:	strb	r2, [r3]
   2aa7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa80:	add	r3, r3, #1
   2aa84:	str	r3, [fp, #-20]	; 0xffffffec
   2aa88:	movw	r3, #25004	; 0x61ac
   2aa8c:	movt	r3, #3
   2aa90:	str	r3, [fp, #-28]	; 0xffffffe4
   2aa94:	mov	r3, #1
   2aa98:	str	r3, [fp, #-32]	; 0xffffffe0
   2aa9c:	b	2aab0 <__assert_fail@plt+0x19958>
   2aaa0:	mov	r3, #0
   2aaa4:	strb	r3, [fp, #-34]	; 0xffffffde
   2aaa8:	b	2aab0 <__assert_fail@plt+0x19958>
   2aaac:	bl	11140 <abort@plt>
   2aab0:	mov	r3, #0
   2aab4:	str	r3, [fp, #-16]
   2aab8:	b	2bc54 <__assert_fail@plt+0x1aafc>
   2aabc:	mov	r3, #0
   2aac0:	strb	r3, [fp, #-40]	; 0xffffffd8
   2aac4:	mov	r3, #0
   2aac8:	strb	r3, [fp, #-41]	; 0xffffffd7
   2aacc:	mov	r3, #0
   2aad0:	strb	r3, [fp, #-42]	; 0xffffffd6
   2aad4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2aad8:	cmp	r3, #0
   2aadc:	beq	2ab78 <__assert_fail@plt+0x19a20>
   2aae0:	ldr	r3, [fp, #4]
   2aae4:	cmp	r3, #2
   2aae8:	beq	2ab78 <__assert_fail@plt+0x19a20>
   2aaec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aaf0:	cmp	r3, #0
   2aaf4:	beq	2ab78 <__assert_fail@plt+0x19a20>
   2aaf8:	ldr	r2, [fp, #-16]
   2aafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab00:	add	r4, r2, r3
   2ab04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ab08:	cmn	r3, #1
   2ab0c:	bne	2ab30 <__assert_fail@plt+0x199d8>
   2ab10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab14:	cmp	r3, #1
   2ab18:	bls	2ab30 <__assert_fail@plt+0x199d8>
   2ab1c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2ab20:	bl	11050 <strlen@plt>
   2ab24:	str	r0, [fp, #-100]	; 0xffffff9c
   2ab28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ab2c:	b	2ab34 <__assert_fail@plt+0x199dc>
   2ab30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2ab34:	cmp	r3, r4
   2ab38:	bcc	2ab78 <__assert_fail@plt+0x19a20>
   2ab3c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2ab40:	ldr	r3, [fp, #-16]
   2ab44:	add	r3, r2, r3
   2ab48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ab4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ab50:	mov	r0, r3
   2ab54:	bl	10f18 <memcmp@plt>
   2ab58:	mov	r3, r0
   2ab5c:	cmp	r3, #0
   2ab60:	bne	2ab78 <__assert_fail@plt+0x19a20>
   2ab64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2ab68:	cmp	r3, #0
   2ab6c:	bne	2be10 <__assert_fail@plt+0x1acb8>
   2ab70:	mov	r3, #1
   2ab74:	strb	r3, [fp, #-40]	; 0xffffffd8
   2ab78:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2ab7c:	ldr	r3, [fp, #-16]
   2ab80:	add	r3, r2, r3
   2ab84:	ldrb	r3, [r3]
   2ab88:	strb	r3, [fp, #-38]	; 0xffffffda
   2ab8c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2ab90:	cmp	r3, #126	; 0x7e
   2ab94:	ldrls	pc, [pc, r3, lsl #2]
   2ab98:	b	2b3d0 <__assert_fail@plt+0x1a278>
   2ab9c:	muleq	r2, r8, sp
   2aba0:	ldrdeq	fp, [r2], -r0
   2aba4:	ldrdeq	fp, [r2], -r0
   2aba8:	ldrdeq	fp, [r2], -r0
   2abac:	ldrdeq	fp, [r2], -r0
   2abb0:	ldrdeq	fp, [r2], -r0
   2abb4:	ldrdeq	fp, [r2], -r0
   2abb8:	andeq	fp, r2, ip, lsl #3
   2abbc:	muleq	r2, r8, r1
   2abc0:	andeq	fp, r2, r8, asr #3
   2abc4:			; <UNDEFINED> instruction: 0x0002b1b0
   2abc8:	ldrdeq	fp, [r2], -r4
   2abcc:	andeq	fp, r2, r4, lsr #3
   2abd0:			; <UNDEFINED> instruction: 0x0002b1bc
   2abd4:	ldrdeq	fp, [r2], -r0
   2abd8:	ldrdeq	fp, [r2], -r0
   2abdc:	ldrdeq	fp, [r2], -r0
   2abe0:	ldrdeq	fp, [r2], -r0
   2abe4:	ldrdeq	fp, [r2], -r0
   2abe8:	ldrdeq	fp, [r2], -r0
   2abec:	ldrdeq	fp, [r2], -r0
   2abf0:	ldrdeq	fp, [r2], -r0
   2abf4:	ldrdeq	fp, [r2], -r0
   2abf8:	ldrdeq	fp, [r2], -r0
   2abfc:	ldrdeq	fp, [r2], -r0
   2ac00:	ldrdeq	fp, [r2], -r0
   2ac04:	ldrdeq	fp, [r2], -r0
   2ac08:	ldrdeq	fp, [r2], -r0
   2ac0c:	ldrdeq	fp, [r2], -r0
   2ac10:	ldrdeq	fp, [r2], -r0
   2ac14:	ldrdeq	fp, [r2], -r0
   2ac18:	ldrdeq	fp, [r2], -r0
   2ac1c:			; <UNDEFINED> instruction: 0x0002b2b4
   2ac20:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac24:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac28:	andeq	fp, r2, r8, lsr #5
   2ac2c:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac30:	andeq	fp, r2, r4, asr #7
   2ac34:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac38:	ldrdeq	fp, [r2], -r8
   2ac3c:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac40:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac44:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac48:	andeq	fp, r2, r4, asr #7
   2ac4c:	andeq	fp, r2, r4, asr #7
   2ac50:	andeq	fp, r2, r4, asr #7
   2ac54:	andeq	fp, r2, r4, asr #7
   2ac58:	andeq	fp, r2, r4, asr #7
   2ac5c:	andeq	fp, r2, r4, asr #7
   2ac60:	andeq	fp, r2, r4, asr #7
   2ac64:	andeq	fp, r2, r4, asr #7
   2ac68:	andeq	fp, r2, r4, asr #7
   2ac6c:	andeq	fp, r2, r4, asr #7
   2ac70:	andeq	fp, r2, r4, asr #7
   2ac74:	andeq	fp, r2, r4, asr #7
   2ac78:	andeq	fp, r2, r4, asr #7
   2ac7c:	andeq	fp, r2, r4, asr #7
   2ac80:	andeq	fp, r2, r4, asr #7
   2ac84:	andeq	fp, r2, r4, asr #7
   2ac88:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac8c:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac90:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac94:			; <UNDEFINED> instruction: 0x0002b2bc
   2ac98:	andeq	sl, r2, r8, ror pc
   2ac9c:	ldrdeq	fp, [r2], -r0
   2aca0:	andeq	fp, r2, r4, asr #7
   2aca4:	andeq	fp, r2, r4, asr #7
   2aca8:	andeq	fp, r2, r4, asr #7
   2acac:	andeq	fp, r2, r4, asr #7
   2acb0:	andeq	fp, r2, r4, asr #7
   2acb4:	andeq	fp, r2, r4, asr #7
   2acb8:	andeq	fp, r2, r4, asr #7
   2acbc:	andeq	fp, r2, r4, asr #7
   2acc0:	andeq	fp, r2, r4, asr #7
   2acc4:	andeq	fp, r2, r4, asr #7
   2acc8:	andeq	fp, r2, r4, asr #7
   2accc:	andeq	fp, r2, r4, asr #7
   2acd0:	andeq	fp, r2, r4, asr #7
   2acd4:	andeq	fp, r2, r4, asr #7
   2acd8:	andeq	fp, r2, r4, asr #7
   2acdc:	andeq	fp, r2, r4, asr #7
   2ace0:	andeq	fp, r2, r4, asr #7
   2ace4:	andeq	fp, r2, r4, asr #7
   2ace8:	andeq	fp, r2, r4, asr #7
   2acec:	andeq	fp, r2, r4, asr #7
   2acf0:	andeq	fp, r2, r4, asr #7
   2acf4:	andeq	fp, r2, r4, asr #7
   2acf8:	andeq	fp, r2, r4, asr #7
   2acfc:	andeq	fp, r2, r4, asr #7
   2ad00:	andeq	fp, r2, r4, asr #7
   2ad04:	andeq	fp, r2, r4, asr #7
   2ad08:			; <UNDEFINED> instruction: 0x0002b2bc
   2ad0c:	andeq	fp, r2, r0, ror #3
   2ad10:	andeq	fp, r2, r4, asr #7
   2ad14:			; <UNDEFINED> instruction: 0x0002b2bc
   2ad18:	andeq	fp, r2, r4, asr #7
   2ad1c:			; <UNDEFINED> instruction: 0x0002b2bc
   2ad20:	andeq	fp, r2, r4, asr #7
   2ad24:	andeq	fp, r2, r4, asr #7
   2ad28:	andeq	fp, r2, r4, asr #7
   2ad2c:	andeq	fp, r2, r4, asr #7
   2ad30:	andeq	fp, r2, r4, asr #7
   2ad34:	andeq	fp, r2, r4, asr #7
   2ad38:	andeq	fp, r2, r4, asr #7
   2ad3c:	andeq	fp, r2, r4, asr #7
   2ad40:	andeq	fp, r2, r4, asr #7
   2ad44:	andeq	fp, r2, r4, asr #7
   2ad48:	andeq	fp, r2, r4, asr #7
   2ad4c:	andeq	fp, r2, r4, asr #7
   2ad50:	andeq	fp, r2, r4, asr #7
   2ad54:	andeq	fp, r2, r4, asr #7
   2ad58:	andeq	fp, r2, r4, asr #7
   2ad5c:	andeq	fp, r2, r4, asr #7
   2ad60:	andeq	fp, r2, r4, asr #7
   2ad64:	andeq	fp, r2, r4, asr #7
   2ad68:	andeq	fp, r2, r4, asr #7
   2ad6c:	andeq	fp, r2, r4, asr #7
   2ad70:	andeq	fp, r2, r4, asr #7
   2ad74:	andeq	fp, r2, r4, asr #7
   2ad78:	andeq	fp, r2, r4, asr #7
   2ad7c:	andeq	fp, r2, r4, asr #7
   2ad80:	andeq	fp, r2, r4, asr #7
   2ad84:	andeq	fp, r2, r4, asr #7
   2ad88:	andeq	fp, r2, r0, ror #4
   2ad8c:			; <UNDEFINED> instruction: 0x0002b2bc
   2ad90:	andeq	fp, r2, r0, ror #4
   2ad94:	andeq	fp, r2, r8, lsr #5
   2ad98:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2ad9c:	cmp	r3, #0
   2ada0:	beq	2af64 <__assert_fail@plt+0x19e0c>
   2ada4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2ada8:	cmp	r3, #0
   2adac:	bne	2be18 <__assert_fail@plt+0x1acc0>
   2adb0:	mov	r3, #1
   2adb4:	strb	r3, [fp, #-41]	; 0xffffffd7
   2adb8:	ldr	r3, [fp, #4]
   2adbc:	cmp	r3, #2
   2adc0:	bne	2ae70 <__assert_fail@plt+0x19d18>
   2adc4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   2adc8:	eor	r3, r3, #1
   2adcc:	uxtb	r3, r3
   2add0:	cmp	r3, #0
   2add4:	beq	2ae70 <__assert_fail@plt+0x19d18>
   2add8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2addc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ade0:	cmp	r2, r3
   2ade4:	bcs	2adfc <__assert_fail@plt+0x19ca4>
   2ade8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2adec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2adf0:	add	r3, r2, r3
   2adf4:	mov	r2, #39	; 0x27
   2adf8:	strb	r2, [r3]
   2adfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae00:	add	r3, r3, #1
   2ae04:	str	r3, [fp, #-20]	; 0xffffffec
   2ae08:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ae10:	cmp	r2, r3
   2ae14:	bcs	2ae2c <__assert_fail@plt+0x19cd4>
   2ae18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ae1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae20:	add	r3, r2, r3
   2ae24:	mov	r2, #36	; 0x24
   2ae28:	strb	r2, [r3]
   2ae2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae30:	add	r3, r3, #1
   2ae34:	str	r3, [fp, #-20]	; 0xffffffec
   2ae38:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ae40:	cmp	r2, r3
   2ae44:	bcs	2ae5c <__assert_fail@plt+0x19d04>
   2ae48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ae4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae50:	add	r3, r2, r3
   2ae54:	mov	r2, #39	; 0x27
   2ae58:	strb	r2, [r3]
   2ae5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae60:	add	r3, r3, #1
   2ae64:	str	r3, [fp, #-20]	; 0xffffffec
   2ae68:	mov	r3, #1
   2ae6c:	strb	r3, [fp, #-35]	; 0xffffffdd
   2ae70:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ae78:	cmp	r2, r3
   2ae7c:	bcs	2ae94 <__assert_fail@plt+0x19d3c>
   2ae80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ae84:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae88:	add	r3, r2, r3
   2ae8c:	mov	r2, #92	; 0x5c
   2ae90:	strb	r2, [r3]
   2ae94:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae98:	add	r3, r3, #1
   2ae9c:	str	r3, [fp, #-20]	; 0xffffffec
   2aea0:	ldr	r3, [fp, #4]
   2aea4:	cmp	r3, #2
   2aea8:	beq	2af58 <__assert_fail@plt+0x19e00>
   2aeac:	ldr	r3, [fp, #-16]
   2aeb0:	add	r3, r3, #1
   2aeb4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2aeb8:	cmp	r2, r3
   2aebc:	bls	2af58 <__assert_fail@plt+0x19e00>
   2aec0:	ldr	r3, [fp, #-16]
   2aec4:	add	r3, r3, #1
   2aec8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2aecc:	add	r3, r2, r3
   2aed0:	ldrb	r3, [r3]
   2aed4:	cmp	r3, #47	; 0x2f
   2aed8:	bls	2af58 <__assert_fail@plt+0x19e00>
   2aedc:	ldr	r3, [fp, #-16]
   2aee0:	add	r3, r3, #1
   2aee4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2aee8:	add	r3, r2, r3
   2aeec:	ldrb	r3, [r3]
   2aef0:	cmp	r3, #57	; 0x39
   2aef4:	bhi	2af58 <__assert_fail@plt+0x19e00>
   2aef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aefc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2af00:	cmp	r2, r3
   2af04:	bcs	2af1c <__assert_fail@plt+0x19dc4>
   2af08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2af0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af10:	add	r3, r2, r3
   2af14:	mov	r2, #48	; 0x30
   2af18:	strb	r2, [r3]
   2af1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af20:	add	r3, r3, #1
   2af24:	str	r3, [fp, #-20]	; 0xffffffec
   2af28:	ldr	r2, [fp, #-20]	; 0xffffffec
   2af2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2af30:	cmp	r2, r3
   2af34:	bcs	2af4c <__assert_fail@plt+0x19df4>
   2af38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2af3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af40:	add	r3, r2, r3
   2af44:	mov	r2, #48	; 0x30
   2af48:	strb	r2, [r3]
   2af4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af50:	add	r3, r3, #1
   2af54:	str	r3, [fp, #-20]	; 0xffffffec
   2af58:	mov	r3, #48	; 0x30
   2af5c:	strb	r3, [fp, #-38]	; 0xffffffda
   2af60:	b	2b9a0 <__assert_fail@plt+0x1a848>
   2af64:	ldr	r3, [fp, #8]
   2af68:	and	r3, r3, #1
   2af6c:	cmp	r3, #0
   2af70:	beq	2b9a0 <__assert_fail@plt+0x1a848>
   2af74:	b	2bc48 <__assert_fail@plt+0x1aaf0>
   2af78:	ldr	r3, [fp, #4]
   2af7c:	cmp	r3, #2
   2af80:	beq	2af94 <__assert_fail@plt+0x19e3c>
   2af84:	ldr	r3, [fp, #4]
   2af88:	cmp	r3, #5
   2af8c:	beq	2afa4 <__assert_fail@plt+0x19e4c>
   2af90:	b	2b188 <__assert_fail@plt+0x1a030>
   2af94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2af98:	cmp	r3, #0
   2af9c:	beq	2b17c <__assert_fail@plt+0x1a024>
   2afa0:	b	2be4c <__assert_fail@plt+0x1acf4>
   2afa4:	ldr	r3, [fp, #8]
   2afa8:	and	r3, r3, #4
   2afac:	cmp	r3, #0
   2afb0:	beq	2b184 <__assert_fail@plt+0x1a02c>
   2afb4:	ldr	r3, [fp, #-16]
   2afb8:	add	r3, r3, #2
   2afbc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2afc0:	cmp	r2, r3
   2afc4:	bls	2b184 <__assert_fail@plt+0x1a02c>
   2afc8:	ldr	r3, [fp, #-16]
   2afcc:	add	r3, r3, #1
   2afd0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2afd4:	add	r3, r2, r3
   2afd8:	ldrb	r3, [r3]
   2afdc:	cmp	r3, #63	; 0x3f
   2afe0:	bne	2b184 <__assert_fail@plt+0x1a02c>
   2afe4:	ldr	r3, [fp, #-16]
   2afe8:	add	r3, r3, #2
   2afec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2aff0:	add	r3, r2, r3
   2aff4:	ldrb	r3, [r3]
   2aff8:	sub	r3, r3, #33	; 0x21
   2affc:	cmp	r3, #29
   2b000:	ldrls	pc, [pc, r3, lsl #2]
   2b004:	b	2b174 <__assert_fail@plt+0x1a01c>
   2b008:	andeq	fp, r2, r0, lsl #1
   2b00c:	andeq	fp, r2, r4, ror r1
   2b010:	andeq	fp, r2, r4, ror r1
   2b014:	andeq	fp, r2, r4, ror r1
   2b018:	andeq	fp, r2, r4, ror r1
   2b01c:	andeq	fp, r2, r4, ror r1
   2b020:	andeq	fp, r2, r0, lsl #1
   2b024:	andeq	fp, r2, r0, lsl #1
   2b028:	andeq	fp, r2, r0, lsl #1
   2b02c:	andeq	fp, r2, r4, ror r1
   2b030:	andeq	fp, r2, r4, ror r1
   2b034:	andeq	fp, r2, r4, ror r1
   2b038:	andeq	fp, r2, r0, lsl #1
   2b03c:	andeq	fp, r2, r4, ror r1
   2b040:	andeq	fp, r2, r0, lsl #1
   2b044:	andeq	fp, r2, r4, ror r1
   2b048:	andeq	fp, r2, r4, ror r1
   2b04c:	andeq	fp, r2, r4, ror r1
   2b050:	andeq	fp, r2, r4, ror r1
   2b054:	andeq	fp, r2, r4, ror r1
   2b058:	andeq	fp, r2, r4, ror r1
   2b05c:	andeq	fp, r2, r4, ror r1
   2b060:	andeq	fp, r2, r4, ror r1
   2b064:	andeq	fp, r2, r4, ror r1
   2b068:	andeq	fp, r2, r4, ror r1
   2b06c:	andeq	fp, r2, r4, ror r1
   2b070:	andeq	fp, r2, r4, ror r1
   2b074:	andeq	fp, r2, r0, lsl #1
   2b078:	andeq	fp, r2, r0, lsl #1
   2b07c:	andeq	fp, r2, r0, lsl #1
   2b080:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b084:	cmp	r3, #0
   2b088:	bne	2be20 <__assert_fail@plt+0x1acc8>
   2b08c:	ldr	r3, [fp, #-16]
   2b090:	add	r3, r3, #2
   2b094:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b098:	add	r3, r2, r3
   2b09c:	ldrb	r3, [r3]
   2b0a0:	strb	r3, [fp, #-38]	; 0xffffffda
   2b0a4:	ldr	r3, [fp, #-16]
   2b0a8:	add	r3, r3, #2
   2b0ac:	str	r3, [fp, #-16]
   2b0b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b0b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b0b8:	cmp	r2, r3
   2b0bc:	bcs	2b0d4 <__assert_fail@plt+0x19f7c>
   2b0c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b0c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0c8:	add	r3, r2, r3
   2b0cc:	mov	r2, #63	; 0x3f
   2b0d0:	strb	r2, [r3]
   2b0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0d8:	add	r3, r3, #1
   2b0dc:	str	r3, [fp, #-20]	; 0xffffffec
   2b0e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b0e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b0e8:	cmp	r2, r3
   2b0ec:	bcs	2b104 <__assert_fail@plt+0x19fac>
   2b0f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b0f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0f8:	add	r3, r2, r3
   2b0fc:	mov	r2, #34	; 0x22
   2b100:	strb	r2, [r3]
   2b104:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b108:	add	r3, r3, #1
   2b10c:	str	r3, [fp, #-20]	; 0xffffffec
   2b110:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b114:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b118:	cmp	r2, r3
   2b11c:	bcs	2b134 <__assert_fail@plt+0x19fdc>
   2b120:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b124:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b128:	add	r3, r2, r3
   2b12c:	mov	r2, #34	; 0x22
   2b130:	strb	r2, [r3]
   2b134:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b138:	add	r3, r3, #1
   2b13c:	str	r3, [fp, #-20]	; 0xffffffec
   2b140:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b144:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b148:	cmp	r2, r3
   2b14c:	bcs	2b164 <__assert_fail@plt+0x1a00c>
   2b150:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b154:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b158:	add	r3, r2, r3
   2b15c:	mov	r2, #63	; 0x3f
   2b160:	strb	r2, [r3]
   2b164:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b168:	add	r3, r3, #1
   2b16c:	str	r3, [fp, #-20]	; 0xffffffec
   2b170:	b	2b178 <__assert_fail@plt+0x1a020>
   2b174:	nop	{0}
   2b178:	b	2b184 <__assert_fail@plt+0x1a02c>
   2b17c:	nop	{0}
   2b180:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b184:	nop	{0}
   2b188:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b18c:	mov	r3, #97	; 0x61
   2b190:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b194:	b	2b248 <__assert_fail@plt+0x1a0f0>
   2b198:	mov	r3, #98	; 0x62
   2b19c:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1a0:	b	2b248 <__assert_fail@plt+0x1a0f0>
   2b1a4:	mov	r3, #102	; 0x66
   2b1a8:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1ac:	b	2b248 <__assert_fail@plt+0x1a0f0>
   2b1b0:	mov	r3, #110	; 0x6e
   2b1b4:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1b8:	b	2b22c <__assert_fail@plt+0x1a0d4>
   2b1bc:	mov	r3, #114	; 0x72
   2b1c0:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1c4:	b	2b22c <__assert_fail@plt+0x1a0d4>
   2b1c8:	mov	r3, #116	; 0x74
   2b1cc:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1d0:	b	2b22c <__assert_fail@plt+0x1a0d4>
   2b1d4:	mov	r3, #118	; 0x76
   2b1d8:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1dc:	b	2b248 <__assert_fail@plt+0x1a0f0>
   2b1e0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2b1e4:	strb	r3, [fp, #-39]	; 0xffffffd9
   2b1e8:	ldr	r3, [fp, #4]
   2b1ec:	cmp	r3, #2
   2b1f0:	bne	2b204 <__assert_fail@plt+0x1a0ac>
   2b1f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b1f8:	cmp	r3, #0
   2b1fc:	beq	2bb60 <__assert_fail@plt+0x1aa08>
   2b200:	b	2be4c <__assert_fail@plt+0x1acf4>
   2b204:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2b208:	cmp	r3, #0
   2b20c:	beq	2b228 <__assert_fail@plt+0x1a0d0>
   2b210:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b214:	cmp	r3, #0
   2b218:	beq	2b228 <__assert_fail@plt+0x1a0d0>
   2b21c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b220:	cmp	r3, #0
   2b224:	bne	2bb68 <__assert_fail@plt+0x1aa10>
   2b228:	nop	{0}
   2b22c:	ldr	r3, [fp, #4]
   2b230:	cmp	r3, #2
   2b234:	bne	2b244 <__assert_fail@plt+0x1a0ec>
   2b238:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b23c:	cmp	r3, #0
   2b240:	bne	2be28 <__assert_fail@plt+0x1acd0>
   2b244:	nop	{0}
   2b248:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2b24c:	cmp	r3, #0
   2b250:	beq	2b9a8 <__assert_fail@plt+0x1a850>
   2b254:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   2b258:	strb	r3, [fp, #-38]	; 0xffffffda
   2b25c:	b	2ba60 <__assert_fail@plt+0x1a908>
   2b260:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b264:	cmn	r3, #1
   2b268:	bne	2b28c <__assert_fail@plt+0x1a134>
   2b26c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b270:	add	r3, r3, #1
   2b274:	ldrb	r3, [r3]
   2b278:	cmp	r3, #0
   2b27c:	movne	r3, #1
   2b280:	moveq	r3, #0
   2b284:	uxtb	r3, r3
   2b288:	b	2b2a0 <__assert_fail@plt+0x1a148>
   2b28c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b290:	cmp	r3, #1
   2b294:	movne	r3, #1
   2b298:	moveq	r3, #0
   2b29c:	uxtb	r3, r3
   2b2a0:	cmp	r3, #0
   2b2a4:	bne	2b9b0 <__assert_fail@plt+0x1a858>
   2b2a8:	ldr	r3, [fp, #-16]
   2b2ac:	cmp	r3, #0
   2b2b0:	bne	2b9b8 <__assert_fail@plt+0x1a860>
   2b2b4:	mov	r3, #1
   2b2b8:	strb	r3, [fp, #-42]	; 0xffffffd6
   2b2bc:	ldr	r3, [fp, #4]
   2b2c0:	cmp	r3, #2
   2b2c4:	bne	2b9c0 <__assert_fail@plt+0x1a868>
   2b2c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b2cc:	cmp	r3, #0
   2b2d0:	beq	2b9c0 <__assert_fail@plt+0x1a868>
   2b2d4:	b	2be4c <__assert_fail@plt+0x1acf4>
   2b2d8:	mov	r3, #1
   2b2dc:	strb	r3, [fp, #-36]	; 0xffffffdc
   2b2e0:	mov	r3, #1
   2b2e4:	strb	r3, [fp, #-42]	; 0xffffffd6
   2b2e8:	ldr	r3, [fp, #4]
   2b2ec:	cmp	r3, #2
   2b2f0:	bne	2b9c8 <__assert_fail@plt+0x1a870>
   2b2f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b2f8:	cmp	r3, #0
   2b2fc:	bne	2be30 <__assert_fail@plt+0x1acd8>
   2b300:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b304:	cmp	r3, #0
   2b308:	beq	2b328 <__assert_fail@plt+0x1a1d0>
   2b30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b310:	cmp	r3, #0
   2b314:	bne	2b328 <__assert_fail@plt+0x1a1d0>
   2b318:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b31c:	str	r3, [fp, #-24]	; 0xffffffe8
   2b320:	mov	r3, #0
   2b324:	str	r3, [fp, #-92]	; 0xffffffa4
   2b328:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b32c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b330:	cmp	r2, r3
   2b334:	bcs	2b34c <__assert_fail@plt+0x1a1f4>
   2b338:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b340:	add	r3, r2, r3
   2b344:	mov	r2, #39	; 0x27
   2b348:	strb	r2, [r3]
   2b34c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b350:	add	r3, r3, #1
   2b354:	str	r3, [fp, #-20]	; 0xffffffec
   2b358:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b35c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b360:	cmp	r2, r3
   2b364:	bcs	2b37c <__assert_fail@plt+0x1a224>
   2b368:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b36c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b370:	add	r3, r2, r3
   2b374:	mov	r2, #92	; 0x5c
   2b378:	strb	r2, [r3]
   2b37c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b380:	add	r3, r3, #1
   2b384:	str	r3, [fp, #-20]	; 0xffffffec
   2b388:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b38c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b390:	cmp	r2, r3
   2b394:	bcs	2b3ac <__assert_fail@plt+0x1a254>
   2b398:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b39c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b3a0:	add	r3, r2, r3
   2b3a4:	mov	r2, #39	; 0x27
   2b3a8:	strb	r2, [r3]
   2b3ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b3b0:	add	r3, r3, #1
   2b3b4:	str	r3, [fp, #-20]	; 0xffffffec
   2b3b8:	mov	r3, #0
   2b3bc:	strb	r3, [fp, #-35]	; 0xffffffdd
   2b3c0:	b	2b9c8 <__assert_fail@plt+0x1a870>
   2b3c4:	mov	r3, #1
   2b3c8:	strb	r3, [fp, #-42]	; 0xffffffd6
   2b3cc:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b3d0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2b3d4:	cmp	r3, #0
   2b3d8:	beq	2b418 <__assert_fail@plt+0x1a2c0>
   2b3dc:	mov	r3, #1
   2b3e0:	str	r3, [fp, #-48]	; 0xffffffd0
   2b3e4:	bl	11020 <__ctype_b_loc@plt>
   2b3e8:	mov	r3, r0
   2b3ec:	ldr	r2, [r3]
   2b3f0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2b3f4:	lsl	r3, r3, #1
   2b3f8:	add	r3, r2, r3
   2b3fc:	ldrh	r3, [r3]
   2b400:	and	r3, r3, #16384	; 0x4000
   2b404:	cmp	r3, #0
   2b408:	movne	r3, #1
   2b40c:	moveq	r3, #0
   2b410:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b414:	b	2b664 <__assert_fail@plt+0x1a50c>
   2b418:	sub	r3, fp, #76	; 0x4c
   2b41c:	mov	r2, #8
   2b420:	mov	r1, #0
   2b424:	mov	r0, r3
   2b428:	bl	11098 <memset@plt>
   2b42c:	mov	r3, #0
   2b430:	str	r3, [fp, #-48]	; 0xffffffd0
   2b434:	mov	r3, #1
   2b438:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b43c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b440:	cmn	r3, #1
   2b444:	bne	2b454 <__assert_fail@plt+0x1a2fc>
   2b448:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2b44c:	bl	11050 <strlen@plt>
   2b450:	str	r0, [fp, #-100]	; 0xffffff9c
   2b454:	ldr	r2, [fp, #-16]
   2b458:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b45c:	add	r3, r2, r3
   2b460:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b464:	add	r1, r2, r3
   2b468:	ldr	r2, [fp, #-16]
   2b46c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b470:	add	r3, r2, r3
   2b474:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2b478:	sub	r2, r2, r3
   2b47c:	sub	r3, fp, #76	; 0x4c
   2b480:	sub	r0, fp, #80	; 0x50
   2b484:	bl	2f41c <__assert_fail@plt+0x1e2c4>
   2b488:	str	r0, [fp, #-64]	; 0xffffffc0
   2b48c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b490:	cmp	r3, #0
   2b494:	beq	2b658 <__assert_fail@plt+0x1a500>
   2b498:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b49c:	cmn	r3, #1
   2b4a0:	bne	2b4b0 <__assert_fail@plt+0x1a358>
   2b4a4:	mov	r3, #0
   2b4a8:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b4ac:	b	2b664 <__assert_fail@plt+0x1a50c>
   2b4b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b4b4:	cmn	r3, #2
   2b4b8:	bne	2b510 <__assert_fail@plt+0x1a3b8>
   2b4bc:	mov	r3, #0
   2b4c0:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b4c4:	b	2b4d4 <__assert_fail@plt+0x1a37c>
   2b4c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b4cc:	add	r3, r3, #1
   2b4d0:	str	r3, [fp, #-48]	; 0xffffffd0
   2b4d4:	ldr	r2, [fp, #-16]
   2b4d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b4dc:	add	r3, r2, r3
   2b4e0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2b4e4:	cmp	r2, r3
   2b4e8:	bls	2b660 <__assert_fail@plt+0x1a508>
   2b4ec:	ldr	r2, [fp, #-16]
   2b4f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b4f4:	add	r3, r2, r3
   2b4f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b4fc:	add	r3, r2, r3
   2b500:	ldrb	r3, [r3]
   2b504:	cmp	r3, #0
   2b508:	bne	2b4c8 <__assert_fail@plt+0x1a370>
   2b50c:	b	2b660 <__assert_fail@plt+0x1a508>
   2b510:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b514:	cmp	r3, #0
   2b518:	beq	2b60c <__assert_fail@plt+0x1a4b4>
   2b51c:	ldr	r3, [fp, #4]
   2b520:	cmp	r3, #2
   2b524:	bne	2b60c <__assert_fail@plt+0x1a4b4>
   2b528:	mov	r3, #1
   2b52c:	str	r3, [fp, #-56]	; 0xffffffc8
   2b530:	b	2b5fc <__assert_fail@plt+0x1a4a4>
   2b534:	ldr	r2, [fp, #-16]
   2b538:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b53c:	add	r2, r2, r3
   2b540:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b544:	add	r3, r2, r3
   2b548:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b54c:	add	r3, r2, r3
   2b550:	ldrb	r3, [r3]
   2b554:	sub	r3, r3, #91	; 0x5b
   2b558:	cmp	r3, #33	; 0x21
   2b55c:	ldrls	pc, [pc, r3, lsl #2]
   2b560:	b	2b5ec <__assert_fail@plt+0x1a494>
   2b564:	andeq	fp, r2, ip, asr #28
   2b568:	andeq	fp, r2, ip, asr #28
   2b56c:	andeq	fp, r2, ip, ror #11
   2b570:	andeq	fp, r2, ip, asr #28
   2b574:	andeq	fp, r2, ip, ror #11
   2b578:	andeq	fp, r2, ip, asr #28
   2b57c:	andeq	fp, r2, ip, ror #11
   2b580:	andeq	fp, r2, ip, ror #11
   2b584:	andeq	fp, r2, ip, ror #11
   2b588:	andeq	fp, r2, ip, ror #11
   2b58c:	andeq	fp, r2, ip, ror #11
   2b590:	andeq	fp, r2, ip, ror #11
   2b594:	andeq	fp, r2, ip, ror #11
   2b598:	andeq	fp, r2, ip, ror #11
   2b59c:	andeq	fp, r2, ip, ror #11
   2b5a0:	andeq	fp, r2, ip, ror #11
   2b5a4:	andeq	fp, r2, ip, ror #11
   2b5a8:	andeq	fp, r2, ip, ror #11
   2b5ac:	andeq	fp, r2, ip, ror #11
   2b5b0:	andeq	fp, r2, ip, ror #11
   2b5b4:	andeq	fp, r2, ip, ror #11
   2b5b8:	andeq	fp, r2, ip, ror #11
   2b5bc:	andeq	fp, r2, ip, ror #11
   2b5c0:	andeq	fp, r2, ip, ror #11
   2b5c4:	andeq	fp, r2, ip, ror #11
   2b5c8:	andeq	fp, r2, ip, ror #11
   2b5cc:	andeq	fp, r2, ip, ror #11
   2b5d0:	andeq	fp, r2, ip, ror #11
   2b5d4:	andeq	fp, r2, ip, ror #11
   2b5d8:	andeq	fp, r2, ip, ror #11
   2b5dc:	andeq	fp, r2, ip, ror #11
   2b5e0:	andeq	fp, r2, ip, ror #11
   2b5e4:	andeq	fp, r2, ip, ror #11
   2b5e8:	andeq	fp, r2, ip, asr #28
   2b5ec:	nop	{0}
   2b5f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b5f4:	add	r3, r3, #1
   2b5f8:	str	r3, [fp, #-56]	; 0xffffffc8
   2b5fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2b600:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b604:	cmp	r2, r3
   2b608:	bcc	2b534 <__assert_fail@plt+0x1a3dc>
   2b60c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b610:	mov	r0, r3
   2b614:	bl	10f78 <iswprint@plt>
   2b618:	mov	r3, r0
   2b61c:	cmp	r3, #0
   2b620:	bne	2b62c <__assert_fail@plt+0x1a4d4>
   2b624:	mov	r3, #0
   2b628:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b62c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b630:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b634:	add	r3, r2, r3
   2b638:	str	r3, [fp, #-48]	; 0xffffffd0
   2b63c:	sub	r3, fp, #76	; 0x4c
   2b640:	mov	r0, r3
   2b644:	bl	10f0c <mbsinit@plt>
   2b648:	mov	r3, r0
   2b64c:	cmp	r3, #0
   2b650:	beq	2b454 <__assert_fail@plt+0x1a2fc>
   2b654:	b	2b664 <__assert_fail@plt+0x1a50c>
   2b658:	nop	{0}
   2b65c:	b	2b664 <__assert_fail@plt+0x1a50c>
   2b660:	nop	{0}
   2b664:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2b668:	strb	r3, [fp, #-42]	; 0xffffffd6
   2b66c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b670:	cmp	r3, #1
   2b674:	bhi	2b698 <__assert_fail@plt+0x1a540>
   2b678:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2b67c:	cmp	r3, #0
   2b680:	beq	2b9d0 <__assert_fail@plt+0x1a878>
   2b684:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2b688:	eor	r3, r3, #1
   2b68c:	uxtb	r3, r3
   2b690:	cmp	r3, #0
   2b694:	beq	2b9d0 <__assert_fail@plt+0x1a878>
   2b698:	ldr	r2, [fp, #-16]
   2b69c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b6a0:	add	r3, r2, r3
   2b6a4:	str	r3, [fp, #-68]	; 0xffffffbc
   2b6a8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2b6ac:	cmp	r3, #0
   2b6b0:	beq	2b864 <__assert_fail@plt+0x1a70c>
   2b6b4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2b6b8:	eor	r3, r3, #1
   2b6bc:	uxtb	r3, r3
   2b6c0:	cmp	r3, #0
   2b6c4:	beq	2b864 <__assert_fail@plt+0x1a70c>
   2b6c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b6cc:	cmp	r3, #0
   2b6d0:	bne	2be38 <__assert_fail@plt+0x1ace0>
   2b6d4:	mov	r3, #1
   2b6d8:	strb	r3, [fp, #-41]	; 0xffffffd7
   2b6dc:	ldr	r3, [fp, #4]
   2b6e0:	cmp	r3, #2
   2b6e4:	bne	2b794 <__assert_fail@plt+0x1a63c>
   2b6e8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   2b6ec:	eor	r3, r3, #1
   2b6f0:	uxtb	r3, r3
   2b6f4:	cmp	r3, #0
   2b6f8:	beq	2b794 <__assert_fail@plt+0x1a63c>
   2b6fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b700:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b704:	cmp	r2, r3
   2b708:	bcs	2b720 <__assert_fail@plt+0x1a5c8>
   2b70c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b710:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b714:	add	r3, r2, r3
   2b718:	mov	r2, #39	; 0x27
   2b71c:	strb	r2, [r3]
   2b720:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b724:	add	r3, r3, #1
   2b728:	str	r3, [fp, #-20]	; 0xffffffec
   2b72c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b730:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b734:	cmp	r2, r3
   2b738:	bcs	2b750 <__assert_fail@plt+0x1a5f8>
   2b73c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b740:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b744:	add	r3, r2, r3
   2b748:	mov	r2, #36	; 0x24
   2b74c:	strb	r2, [r3]
   2b750:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b754:	add	r3, r3, #1
   2b758:	str	r3, [fp, #-20]	; 0xffffffec
   2b75c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b760:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b764:	cmp	r2, r3
   2b768:	bcs	2b780 <__assert_fail@plt+0x1a628>
   2b76c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b770:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b774:	add	r3, r2, r3
   2b778:	mov	r2, #39	; 0x27
   2b77c:	strb	r2, [r3]
   2b780:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b784:	add	r3, r3, #1
   2b788:	str	r3, [fp, #-20]	; 0xffffffec
   2b78c:	mov	r3, #1
   2b790:	strb	r3, [fp, #-35]	; 0xffffffdd
   2b794:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b798:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b79c:	cmp	r2, r3
   2b7a0:	bcs	2b7b8 <__assert_fail@plt+0x1a660>
   2b7a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b7a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b7ac:	add	r3, r2, r3
   2b7b0:	mov	r2, #92	; 0x5c
   2b7b4:	strb	r2, [r3]
   2b7b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b7bc:	add	r3, r3, #1
   2b7c0:	str	r3, [fp, #-20]	; 0xffffffec
   2b7c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b7c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b7cc:	cmp	r2, r3
   2b7d0:	bcs	2b7f8 <__assert_fail@plt+0x1a6a0>
   2b7d4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2b7d8:	lsr	r3, r3, #6
   2b7dc:	uxtb	r2, r3
   2b7e0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b7e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b7e8:	add	r3, r1, r3
   2b7ec:	add	r2, r2, #48	; 0x30
   2b7f0:	uxtb	r2, r2
   2b7f4:	strb	r2, [r3]
   2b7f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b7fc:	add	r3, r3, #1
   2b800:	str	r3, [fp, #-20]	; 0xffffffec
   2b804:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b808:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b80c:	cmp	r2, r3
   2b810:	bcs	2b840 <__assert_fail@plt+0x1a6e8>
   2b814:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2b818:	lsr	r3, r3, #3
   2b81c:	uxtb	r3, r3
   2b820:	and	r3, r3, #7
   2b824:	uxtb	r2, r3
   2b828:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b82c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b830:	add	r3, r1, r3
   2b834:	add	r2, r2, #48	; 0x30
   2b838:	uxtb	r2, r2
   2b83c:	strb	r2, [r3]
   2b840:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b844:	add	r3, r3, #1
   2b848:	str	r3, [fp, #-20]	; 0xffffffec
   2b84c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2b850:	and	r3, r3, #7
   2b854:	uxtb	r3, r3
   2b858:	add	r3, r3, #48	; 0x30
   2b85c:	strb	r3, [fp, #-38]	; 0xffffffda
   2b860:	b	2b8a8 <__assert_fail@plt+0x1a750>
   2b864:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   2b868:	cmp	r3, #0
   2b86c:	beq	2b8a8 <__assert_fail@plt+0x1a750>
   2b870:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b874:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b878:	cmp	r2, r3
   2b87c:	bcs	2b894 <__assert_fail@plt+0x1a73c>
   2b880:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b884:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b888:	add	r3, r2, r3
   2b88c:	mov	r2, #92	; 0x5c
   2b890:	strb	r2, [r3]
   2b894:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b898:	add	r3, r3, #1
   2b89c:	str	r3, [fp, #-20]	; 0xffffffec
   2b8a0:	mov	r3, #0
   2b8a4:	strb	r3, [fp, #-40]	; 0xffffffd8
   2b8a8:	ldr	r3, [fp, #-16]
   2b8ac:	add	r3, r3, #1
   2b8b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2b8b4:	cmp	r2, r3
   2b8b8:	bls	2b998 <__assert_fail@plt+0x1a840>
   2b8bc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   2b8c0:	cmp	r3, #0
   2b8c4:	beq	2b944 <__assert_fail@plt+0x1a7ec>
   2b8c8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2b8cc:	eor	r3, r3, #1
   2b8d0:	uxtb	r3, r3
   2b8d4:	cmp	r3, #0
   2b8d8:	beq	2b944 <__assert_fail@plt+0x1a7ec>
   2b8dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b8e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b8e4:	cmp	r2, r3
   2b8e8:	bcs	2b900 <__assert_fail@plt+0x1a7a8>
   2b8ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b8f4:	add	r3, r2, r3
   2b8f8:	mov	r2, #39	; 0x27
   2b8fc:	strb	r2, [r3]
   2b900:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b904:	add	r3, r3, #1
   2b908:	str	r3, [fp, #-20]	; 0xffffffec
   2b90c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b910:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b914:	cmp	r2, r3
   2b918:	bcs	2b930 <__assert_fail@plt+0x1a7d8>
   2b91c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b920:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b924:	add	r3, r2, r3
   2b928:	mov	r2, #39	; 0x27
   2b92c:	strb	r2, [r3]
   2b930:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b934:	add	r3, r3, #1
   2b938:	str	r3, [fp, #-20]	; 0xffffffec
   2b93c:	mov	r3, #0
   2b940:	strb	r3, [fp, #-35]	; 0xffffffdd
   2b944:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b948:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b94c:	cmp	r2, r3
   2b950:	bcs	2b968 <__assert_fail@plt+0x1a810>
   2b954:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2b958:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b95c:	add	r3, r2, r3
   2b960:	ldrb	r2, [fp, #-38]	; 0xffffffda
   2b964:	strb	r2, [r3]
   2b968:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b96c:	add	r3, r3, #1
   2b970:	str	r3, [fp, #-20]	; 0xffffffec
   2b974:	ldr	r3, [fp, #-16]
   2b978:	add	r3, r3, #1
   2b97c:	str	r3, [fp, #-16]
   2b980:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b984:	ldr	r3, [fp, #-16]
   2b988:	add	r3, r2, r3
   2b98c:	ldrb	r3, [r3]
   2b990:	strb	r3, [fp, #-38]	; 0xffffffda
   2b994:	b	2b6a8 <__assert_fail@plt+0x1a550>
   2b998:	nop	{0}
   2b99c:	b	2bb74 <__assert_fail@plt+0x1aa1c>
   2b9a0:	nop	{0}
   2b9a4:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9a8:	nop	{0}
   2b9ac:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9b0:	nop	{0}
   2b9b4:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9b8:	nop	{0}
   2b9bc:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9c0:	nop	{0}
   2b9c4:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9c8:	nop	{0}
   2b9cc:	b	2b9d4 <__assert_fail@plt+0x1a87c>
   2b9d0:	nop	{0}
   2b9d4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2b9d8:	eor	r3, r3, #1
   2b9dc:	uxtb	r3, r3
   2b9e0:	cmp	r3, #0
   2b9e4:	bne	2b9f4 <__assert_fail@plt+0x1a89c>
   2b9e8:	ldr	r3, [fp, #4]
   2b9ec:	cmp	r3, #2
   2b9f0:	bne	2ba08 <__assert_fail@plt+0x1a8b0>
   2b9f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2b9f8:	eor	r3, r3, #1
   2b9fc:	uxtb	r3, r3
   2ba00:	cmp	r3, #0
   2ba04:	bne	2ba48 <__assert_fail@plt+0x1a8f0>
   2ba08:	ldr	r3, [fp, #12]
   2ba0c:	cmp	r3, #0
   2ba10:	beq	2ba48 <__assert_fail@plt+0x1a8f0>
   2ba14:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2ba18:	lsr	r3, r3, #5
   2ba1c:	uxtb	r3, r3
   2ba20:	lsl	r3, r3, #2
   2ba24:	ldr	r2, [fp, #12]
   2ba28:	add	r3, r2, r3
   2ba2c:	ldr	r2, [r3]
   2ba30:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2ba34:	and	r3, r3, #31
   2ba38:	lsr	r3, r2, r3
   2ba3c:	and	r3, r3, #1
   2ba40:	cmp	r3, #0
   2ba44:	bne	2ba5c <__assert_fail@plt+0x1a904>
   2ba48:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   2ba4c:	eor	r3, r3, #1
   2ba50:	uxtb	r3, r3
   2ba54:	cmp	r3, #0
   2ba58:	bne	2bb70 <__assert_fail@plt+0x1aa18>
   2ba5c:	nop	{0}
   2ba60:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2ba64:	cmp	r3, #0
   2ba68:	bne	2be40 <__assert_fail@plt+0x1ace8>
   2ba6c:	mov	r3, #1
   2ba70:	strb	r3, [fp, #-41]	; 0xffffffd7
   2ba74:	ldr	r3, [fp, #4]
   2ba78:	cmp	r3, #2
   2ba7c:	bne	2bb2c <__assert_fail@plt+0x1a9d4>
   2ba80:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   2ba84:	eor	r3, r3, #1
   2ba88:	uxtb	r3, r3
   2ba8c:	cmp	r3, #0
   2ba90:	beq	2bb2c <__assert_fail@plt+0x1a9d4>
   2ba94:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ba98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2ba9c:	cmp	r2, r3
   2baa0:	bcs	2bab8 <__assert_fail@plt+0x1a960>
   2baa4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2baa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2baac:	add	r3, r2, r3
   2bab0:	mov	r2, #39	; 0x27
   2bab4:	strb	r2, [r3]
   2bab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2babc:	add	r3, r3, #1
   2bac0:	str	r3, [fp, #-20]	; 0xffffffec
   2bac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bac8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bacc:	cmp	r2, r3
   2bad0:	bcs	2bae8 <__assert_fail@plt+0x1a990>
   2bad4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2badc:	add	r3, r2, r3
   2bae0:	mov	r2, #36	; 0x24
   2bae4:	strb	r2, [r3]
   2bae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2baec:	add	r3, r3, #1
   2baf0:	str	r3, [fp, #-20]	; 0xffffffec
   2baf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2baf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bafc:	cmp	r2, r3
   2bb00:	bcs	2bb18 <__assert_fail@plt+0x1a9c0>
   2bb04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bb08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb0c:	add	r3, r2, r3
   2bb10:	mov	r2, #39	; 0x27
   2bb14:	strb	r2, [r3]
   2bb18:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb1c:	add	r3, r3, #1
   2bb20:	str	r3, [fp, #-20]	; 0xffffffec
   2bb24:	mov	r3, #1
   2bb28:	strb	r3, [fp, #-35]	; 0xffffffdd
   2bb2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bb30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bb34:	cmp	r2, r3
   2bb38:	bcs	2bb50 <__assert_fail@plt+0x1a9f8>
   2bb3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bb40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb44:	add	r3, r2, r3
   2bb48:	mov	r2, #92	; 0x5c
   2bb4c:	strb	r2, [r3]
   2bb50:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb54:	add	r3, r3, #1
   2bb58:	str	r3, [fp, #-20]	; 0xffffffec
   2bb5c:	b	2bb74 <__assert_fail@plt+0x1aa1c>
   2bb60:	nop	{0}
   2bb64:	b	2bb74 <__assert_fail@plt+0x1aa1c>
   2bb68:	nop	{0}
   2bb6c:	b	2bb74 <__assert_fail@plt+0x1aa1c>
   2bb70:	nop	{0}
   2bb74:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   2bb78:	cmp	r3, #0
   2bb7c:	beq	2bbfc <__assert_fail@plt+0x1aaa4>
   2bb80:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2bb84:	eor	r3, r3, #1
   2bb88:	uxtb	r3, r3
   2bb8c:	cmp	r3, #0
   2bb90:	beq	2bbfc <__assert_fail@plt+0x1aaa4>
   2bb94:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bb98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bb9c:	cmp	r2, r3
   2bba0:	bcs	2bbb8 <__assert_fail@plt+0x1aa60>
   2bba4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbac:	add	r3, r2, r3
   2bbb0:	mov	r2, #39	; 0x27
   2bbb4:	strb	r2, [r3]
   2bbb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbbc:	add	r3, r3, #1
   2bbc0:	str	r3, [fp, #-20]	; 0xffffffec
   2bbc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bbc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bbcc:	cmp	r2, r3
   2bbd0:	bcs	2bbe8 <__assert_fail@plt+0x1aa90>
   2bbd4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbdc:	add	r3, r2, r3
   2bbe0:	mov	r2, #39	; 0x27
   2bbe4:	strb	r2, [r3]
   2bbe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbec:	add	r3, r3, #1
   2bbf0:	str	r3, [fp, #-20]	; 0xffffffec
   2bbf4:	mov	r3, #0
   2bbf8:	strb	r3, [fp, #-35]	; 0xffffffdd
   2bbfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bc00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bc04:	cmp	r2, r3
   2bc08:	bcs	2bc20 <__assert_fail@plt+0x1aac8>
   2bc0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bc10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc14:	add	r3, r2, r3
   2bc18:	ldrb	r2, [fp, #-38]	; 0xffffffda
   2bc1c:	strb	r2, [r3]
   2bc20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc24:	add	r3, r3, #1
   2bc28:	str	r3, [fp, #-20]	; 0xffffffec
   2bc2c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   2bc30:	eor	r3, r3, #1
   2bc34:	uxtb	r3, r3
   2bc38:	cmp	r3, #0
   2bc3c:	beq	2bc48 <__assert_fail@plt+0x1aaf0>
   2bc40:	mov	r3, #0
   2bc44:	strb	r3, [fp, #-37]	; 0xffffffdb
   2bc48:	ldr	r3, [fp, #-16]
   2bc4c:	add	r3, r3, #1
   2bc50:	str	r3, [fp, #-16]
   2bc54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2bc58:	cmn	r3, #1
   2bc5c:	bne	2bc84 <__assert_fail@plt+0x1ab2c>
   2bc60:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2bc64:	ldr	r3, [fp, #-16]
   2bc68:	add	r3, r2, r3
   2bc6c:	ldrb	r3, [r3]
   2bc70:	cmp	r3, #0
   2bc74:	movne	r3, #1
   2bc78:	moveq	r3, #0
   2bc7c:	uxtb	r3, r3
   2bc80:	b	2bc9c <__assert_fail@plt+0x1ab44>
   2bc84:	ldr	r2, [fp, #-16]
   2bc88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2bc8c:	cmp	r2, r3
   2bc90:	movne	r3, #1
   2bc94:	moveq	r3, #0
   2bc98:	uxtb	r3, r3
   2bc9c:	cmp	r3, #0
   2bca0:	bne	2aabc <__assert_fail@plt+0x19964>
   2bca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bca8:	cmp	r3, #0
   2bcac:	bne	2bcc8 <__assert_fail@plt+0x1ab70>
   2bcb0:	ldr	r3, [fp, #4]
   2bcb4:	cmp	r3, #2
   2bcb8:	bne	2bcc8 <__assert_fail@plt+0x1ab70>
   2bcbc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2bcc0:	cmp	r3, #0
   2bcc4:	bne	2be48 <__assert_fail@plt+0x1acf0>
   2bcc8:	ldr	r3, [fp, #4]
   2bccc:	cmp	r3, #2
   2bcd0:	bne	2bd70 <__assert_fail@plt+0x1ac18>
   2bcd4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2bcd8:	eor	r3, r3, #1
   2bcdc:	uxtb	r3, r3
   2bce0:	cmp	r3, #0
   2bce4:	beq	2bd70 <__assert_fail@plt+0x1ac18>
   2bce8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   2bcec:	cmp	r3, #0
   2bcf0:	beq	2bd70 <__assert_fail@plt+0x1ac18>
   2bcf4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   2bcf8:	cmp	r3, #0
   2bcfc:	beq	2bd44 <__assert_fail@plt+0x1abec>
   2bd00:	ldr	r3, [fp, #20]
   2bd04:	str	r3, [sp, #16]
   2bd08:	ldr	r3, [fp, #16]
   2bd0c:	str	r3, [sp, #12]
   2bd10:	ldr	r3, [fp, #12]
   2bd14:	str	r3, [sp, #8]
   2bd18:	ldr	r3, [fp, #8]
   2bd1c:	str	r3, [sp, #4]
   2bd20:	mov	r3, #5
   2bd24:	str	r3, [sp]
   2bd28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2bd2c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2bd30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bd34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bd38:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2bd3c:	mov	r3, r0
   2bd40:	b	2beb0 <__assert_fail@plt+0x1ad58>
   2bd44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd48:	cmp	r3, #0
   2bd4c:	bne	2bd70 <__assert_fail@plt+0x1ac18>
   2bd50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd54:	cmp	r3, #0
   2bd58:	beq	2bd70 <__assert_fail@plt+0x1ac18>
   2bd5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd60:	str	r3, [fp, #-92]	; 0xffffffa4
   2bd64:	mov	r3, #0
   2bd68:	str	r3, [fp, #-20]	; 0xffffffec
   2bd6c:	b	2a888 <__assert_fail@plt+0x19730>
   2bd70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bd74:	cmp	r3, #0
   2bd78:	beq	2bde4 <__assert_fail@plt+0x1ac8c>
   2bd7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2bd80:	eor	r3, r3, #1
   2bd84:	uxtb	r3, r3
   2bd88:	cmp	r3, #0
   2bd8c:	beq	2bde4 <__assert_fail@plt+0x1ac8c>
   2bd90:	b	2bdd4 <__assert_fail@plt+0x1ac7c>
   2bd94:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bd98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bd9c:	cmp	r2, r3
   2bda0:	bcs	2bdbc <__assert_fail@plt+0x1ac64>
   2bda4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdac:	add	r3, r2, r3
   2bdb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bdb4:	ldrb	r2, [r2]
   2bdb8:	strb	r2, [r3]
   2bdbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdc0:	add	r3, r3, #1
   2bdc4:	str	r3, [fp, #-20]	; 0xffffffec
   2bdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bdcc:	add	r3, r3, #1
   2bdd0:	str	r3, [fp, #-28]	; 0xffffffe4
   2bdd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bdd8:	ldrb	r3, [r3]
   2bddc:	cmp	r3, #0
   2bde0:	bne	2bd94 <__assert_fail@plt+0x1ac3c>
   2bde4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bde8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2bdec:	cmp	r2, r3
   2bdf0:	bcs	2be08 <__assert_fail@plt+0x1acb0>
   2bdf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2bdf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdfc:	add	r3, r2, r3
   2be00:	mov	r2, #0
   2be04:	strb	r2, [r3]
   2be08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be0c:	b	2beb0 <__assert_fail@plt+0x1ad58>
   2be10:	nop	{0}
   2be14:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be18:	nop	{0}
   2be1c:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be20:	nop	{0}
   2be24:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be28:	nop	{0}
   2be2c:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be30:	nop	{0}
   2be34:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be38:	nop	{0}
   2be3c:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be40:	nop	{0}
   2be44:	b	2be4c <__assert_fail@plt+0x1acf4>
   2be48:	nop	{0}
   2be4c:	ldr	r3, [fp, #4]
   2be50:	cmp	r3, #2
   2be54:	bne	2be6c <__assert_fail@plt+0x1ad14>
   2be58:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2be5c:	cmp	r3, #0
   2be60:	beq	2be6c <__assert_fail@plt+0x1ad14>
   2be64:	mov	r3, #4
   2be68:	str	r3, [fp, #4]
   2be6c:	ldr	r3, [fp, #8]
   2be70:	bic	r3, r3, #2
   2be74:	ldr	r2, [fp, #20]
   2be78:	str	r2, [sp, #16]
   2be7c:	ldr	r2, [fp, #16]
   2be80:	str	r2, [sp, #12]
   2be84:	mov	r2, #0
   2be88:	str	r2, [sp, #8]
   2be8c:	str	r3, [sp, #4]
   2be90:	ldr	r3, [fp, #4]
   2be94:	str	r3, [sp]
   2be98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2be9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2bea0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2bea4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2bea8:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2beac:	mov	r3, r0
   2beb0:	mov	r0, r3
   2beb4:	sub	sp, fp, #8
   2beb8:	ldr	r4, [sp]
   2bebc:	ldr	fp, [sp, #4]
   2bec0:	add	sp, sp, #8
   2bec4:	pop	{pc}		; (ldr pc, [sp], #4)
   2bec8:	str	fp, [sp, #-8]!
   2becc:	str	lr, [sp, #4]
   2bed0:	add	fp, sp, #4
   2bed4:	sub	sp, sp, #56	; 0x38
   2bed8:	str	r0, [fp, #-24]	; 0xffffffe8
   2bedc:	str	r1, [fp, #-28]	; 0xffffffe4
   2bee0:	str	r2, [fp, #-32]	; 0xffffffe0
   2bee4:	str	r3, [fp, #-36]	; 0xffffffdc
   2bee8:	ldr	r3, [fp, #4]
   2beec:	cmp	r3, #0
   2bef0:	beq	2befc <__assert_fail@plt+0x1ada4>
   2bef4:	ldr	r3, [fp, #4]
   2bef8:	b	2bf04 <__assert_fail@plt+0x1adac>
   2befc:	movw	r3, #29100	; 0x71ac
   2bf00:	movt	r3, #4
   2bf04:	str	r3, [fp, #-8]
   2bf08:	bl	11074 <__errno_location@plt>
   2bf0c:	mov	r3, r0
   2bf10:	ldr	r3, [r3]
   2bf14:	str	r3, [fp, #-12]
   2bf18:	ldr	r3, [fp, #-8]
   2bf1c:	ldr	r3, [r3]
   2bf20:	ldr	r2, [fp, #-8]
   2bf24:	ldr	r2, [r2, #4]
   2bf28:	ldr	r1, [fp, #-8]
   2bf2c:	add	r1, r1, #8
   2bf30:	ldr	r0, [fp, #-8]
   2bf34:	ldr	r0, [r0, #40]	; 0x28
   2bf38:	ldr	ip, [fp, #-8]
   2bf3c:	ldr	ip, [ip, #44]	; 0x2c
   2bf40:	str	ip, [sp, #16]
   2bf44:	str	r0, [sp, #12]
   2bf48:	str	r1, [sp, #8]
   2bf4c:	str	r2, [sp, #4]
   2bf50:	str	r3, [sp]
   2bf54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bf58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bf5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bf60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf64:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2bf68:	str	r0, [fp, #-16]
   2bf6c:	bl	11074 <__errno_location@plt>
   2bf70:	mov	r2, r0
   2bf74:	ldr	r3, [fp, #-12]
   2bf78:	str	r3, [r2]
   2bf7c:	ldr	r3, [fp, #-16]
   2bf80:	mov	r0, r3
   2bf84:	sub	sp, fp, #4
   2bf88:	ldr	fp, [sp]
   2bf8c:	add	sp, sp, #4
   2bf90:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf94:	str	fp, [sp, #-8]!
   2bf98:	str	lr, [sp, #4]
   2bf9c:	add	fp, sp, #4
   2bfa0:	sub	sp, sp, #16
   2bfa4:	str	r0, [fp, #-8]
   2bfa8:	str	r1, [fp, #-12]
   2bfac:	str	r2, [fp, #-16]
   2bfb0:	ldr	r3, [fp, #-16]
   2bfb4:	mov	r2, #0
   2bfb8:	ldr	r1, [fp, #-12]
   2bfbc:	ldr	r0, [fp, #-8]
   2bfc0:	bl	2bfdc <__assert_fail@plt+0x1ae84>
   2bfc4:	mov	r3, r0
   2bfc8:	mov	r0, r3
   2bfcc:	sub	sp, fp, #4
   2bfd0:	ldr	fp, [sp]
   2bfd4:	add	sp, sp, #4
   2bfd8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bfdc:	str	fp, [sp, #-8]!
   2bfe0:	str	lr, [sp, #4]
   2bfe4:	add	fp, sp, #4
   2bfe8:	sub	sp, sp, #64	; 0x40
   2bfec:	str	r0, [fp, #-32]	; 0xffffffe0
   2bff0:	str	r1, [fp, #-36]	; 0xffffffdc
   2bff4:	str	r2, [fp, #-40]	; 0xffffffd8
   2bff8:	str	r3, [fp, #-44]	; 0xffffffd4
   2bffc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c000:	cmp	r3, #0
   2c004:	beq	2c010 <__assert_fail@plt+0x1aeb8>
   2c008:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c00c:	b	2c018 <__assert_fail@plt+0x1aec0>
   2c010:	movw	r3, #29100	; 0x71ac
   2c014:	movt	r3, #4
   2c018:	str	r3, [fp, #-8]
   2c01c:	bl	11074 <__errno_location@plt>
   2c020:	mov	r3, r0
   2c024:	ldr	r3, [r3]
   2c028:	str	r3, [fp, #-12]
   2c02c:	ldr	r3, [fp, #-8]
   2c030:	ldr	r3, [r3, #4]
   2c034:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c038:	cmp	r2, #0
   2c03c:	moveq	r2, #1
   2c040:	movne	r2, #0
   2c044:	uxtb	r2, r2
   2c048:	orr	r3, r3, r2
   2c04c:	str	r3, [fp, #-16]
   2c050:	ldr	r3, [fp, #-8]
   2c054:	ldr	r3, [r3]
   2c058:	ldr	r2, [fp, #-8]
   2c05c:	add	r2, r2, #8
   2c060:	ldr	r1, [fp, #-8]
   2c064:	ldr	r1, [r1, #40]	; 0x28
   2c068:	ldr	r0, [fp, #-8]
   2c06c:	ldr	r0, [r0, #44]	; 0x2c
   2c070:	str	r0, [sp, #16]
   2c074:	str	r1, [sp, #12]
   2c078:	str	r2, [sp, #8]
   2c07c:	ldr	r2, [fp, #-16]
   2c080:	str	r2, [sp, #4]
   2c084:	str	r3, [sp]
   2c088:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c08c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c090:	mov	r1, #0
   2c094:	mov	r0, #0
   2c098:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2c09c:	mov	r3, r0
   2c0a0:	add	r3, r3, #1
   2c0a4:	str	r3, [fp, #-20]	; 0xffffffec
   2c0a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c0ac:	bl	2dee0 <__assert_fail@plt+0x1cd88>
   2c0b0:	mov	r3, r0
   2c0b4:	str	r3, [fp, #-24]	; 0xffffffe8
   2c0b8:	ldr	r3, [fp, #-8]
   2c0bc:	ldr	r3, [r3]
   2c0c0:	ldr	r2, [fp, #-8]
   2c0c4:	add	r2, r2, #8
   2c0c8:	ldr	r1, [fp, #-8]
   2c0cc:	ldr	r1, [r1, #40]	; 0x28
   2c0d0:	ldr	r0, [fp, #-8]
   2c0d4:	ldr	r0, [r0, #44]	; 0x2c
   2c0d8:	str	r0, [sp, #16]
   2c0dc:	str	r1, [sp, #12]
   2c0e0:	str	r2, [sp, #8]
   2c0e4:	ldr	r2, [fp, #-16]
   2c0e8:	str	r2, [sp, #4]
   2c0ec:	str	r3, [sp]
   2c0f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c0f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c0f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c100:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2c104:	bl	11074 <__errno_location@plt>
   2c108:	mov	r2, r0
   2c10c:	ldr	r3, [fp, #-12]
   2c110:	str	r3, [r2]
   2c114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c118:	cmp	r3, #0
   2c11c:	beq	2c130 <__assert_fail@plt+0x1afd8>
   2c120:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c124:	sub	r2, r3, #1
   2c128:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c12c:	str	r2, [r3]
   2c130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c134:	mov	r0, r3
   2c138:	sub	sp, fp, #4
   2c13c:	ldr	fp, [sp]
   2c140:	add	sp, sp, #4
   2c144:	pop	{pc}		; (ldr pc, [sp], #4)
   2c148:	str	fp, [sp, #-8]!
   2c14c:	str	lr, [sp, #4]
   2c150:	add	fp, sp, #4
   2c154:	sub	sp, sp, #8
   2c158:	movw	r3, #28988	; 0x713c
   2c15c:	movt	r3, #4
   2c160:	ldr	r3, [r3]
   2c164:	str	r3, [fp, #-12]
   2c168:	mov	r3, #1
   2c16c:	str	r3, [fp, #-8]
   2c170:	b	2c19c <__assert_fail@plt+0x1b044>
   2c174:	ldr	r3, [fp, #-8]
   2c178:	lsl	r3, r3, #3
   2c17c:	ldr	r2, [fp, #-12]
   2c180:	add	r3, r2, r3
   2c184:	ldr	r3, [r3, #4]
   2c188:	mov	r0, r3
   2c18c:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2c190:	ldr	r3, [fp, #-8]
   2c194:	add	r3, r3, #1
   2c198:	str	r3, [fp, #-8]
   2c19c:	movw	r3, #28976	; 0x7130
   2c1a0:	movt	r3, #4
   2c1a4:	ldr	r3, [r3]
   2c1a8:	ldr	r2, [fp, #-8]
   2c1ac:	cmp	r2, r3
   2c1b0:	blt	2c174 <__assert_fail@plt+0x1b01c>
   2c1b4:	ldr	r3, [fp, #-12]
   2c1b8:	ldr	r2, [r3, #4]
   2c1bc:	movw	r3, #29148	; 0x71dc
   2c1c0:	movt	r3, #4
   2c1c4:	cmp	r2, r3
   2c1c8:	beq	2c200 <__assert_fail@plt+0x1b0a8>
   2c1cc:	ldr	r3, [fp, #-12]
   2c1d0:	ldr	r3, [r3, #4]
   2c1d4:	mov	r0, r3
   2c1d8:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2c1dc:	movw	r3, #28980	; 0x7134
   2c1e0:	movt	r3, #4
   2c1e4:	mov	r2, #256	; 0x100
   2c1e8:	str	r2, [r3]
   2c1ec:	movw	r3, #28980	; 0x7134
   2c1f0:	movt	r3, #4
   2c1f4:	movw	r2, #29148	; 0x71dc
   2c1f8:	movt	r2, #4
   2c1fc:	str	r2, [r3, #4]
   2c200:	ldr	r2, [fp, #-12]
   2c204:	movw	r3, #28980	; 0x7134
   2c208:	movt	r3, #4
   2c20c:	cmp	r2, r3
   2c210:	beq	2c230 <__assert_fail@plt+0x1b0d8>
   2c214:	ldr	r0, [fp, #-12]
   2c218:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2c21c:	movw	r3, #28988	; 0x713c
   2c220:	movt	r3, #4
   2c224:	movw	r2, #28980	; 0x7134
   2c228:	movt	r2, #4
   2c22c:	str	r2, [r3]
   2c230:	movw	r3, #28976	; 0x7130
   2c234:	movt	r3, #4
   2c238:	mov	r2, #1
   2c23c:	str	r2, [r3]
   2c240:	nop	{0}
   2c244:	sub	sp, fp, #4
   2c248:	ldr	fp, [sp]
   2c24c:	add	sp, sp, #4
   2c250:	pop	{pc}		; (ldr pc, [sp], #4)
   2c254:	str	fp, [sp, #-8]!
   2c258:	str	lr, [sp, #4]
   2c25c:	add	fp, sp, #4
   2c260:	sub	sp, sp, #80	; 0x50
   2c264:	str	r0, [fp, #-48]	; 0xffffffd0
   2c268:	str	r1, [fp, #-52]	; 0xffffffcc
   2c26c:	str	r2, [fp, #-56]	; 0xffffffc8
   2c270:	str	r3, [fp, #-60]	; 0xffffffc4
   2c274:	bl	11074 <__errno_location@plt>
   2c278:	mov	r3, r0
   2c27c:	ldr	r3, [r3]
   2c280:	str	r3, [fp, #-16]
   2c284:	movw	r3, #28988	; 0x713c
   2c288:	movt	r3, #4
   2c28c:	ldr	r3, [r3]
   2c290:	str	r3, [fp, #-8]
   2c294:	mvn	r3, #-2147483648	; 0x80000000
   2c298:	str	r3, [fp, #-20]	; 0xffffffec
   2c29c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c2a0:	cmp	r3, #0
   2c2a4:	blt	2c2b8 <__assert_fail@plt+0x1b160>
   2c2a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2c2ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c2b0:	cmp	r2, r3
   2c2b4:	blt	2c2bc <__assert_fail@plt+0x1b164>
   2c2b8:	bl	11140 <abort@plt>
   2c2bc:	movw	r3, #28976	; 0x7130
   2c2c0:	movt	r3, #4
   2c2c4:	ldr	r3, [r3]
   2c2c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2c2cc:	cmp	r2, r3
   2c2d0:	blt	2c3c8 <__assert_fail@plt+0x1b270>
   2c2d4:	ldr	r2, [fp, #-8]
   2c2d8:	movw	r3, #28980	; 0x7134
   2c2dc:	movt	r3, #4
   2c2e0:	cmp	r2, r3
   2c2e4:	moveq	r3, #1
   2c2e8:	movne	r3, #0
   2c2ec:	strb	r3, [fp, #-21]	; 0xffffffeb
   2c2f0:	movw	r3, #28976	; 0x7130
   2c2f4:	movt	r3, #4
   2c2f8:	ldr	r3, [r3]
   2c2fc:	str	r3, [fp, #-40]	; 0xffffffd8
   2c300:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2c304:	cmp	r3, #0
   2c308:	beq	2c314 <__assert_fail@plt+0x1b1bc>
   2c30c:	mov	r0, #0
   2c310:	b	2c318 <__assert_fail@plt+0x1b1c0>
   2c314:	ldr	r0, [fp, #-8]
   2c318:	movw	r3, #28976	; 0x7130
   2c31c:	movt	r3, #4
   2c320:	ldr	r3, [r3]
   2c324:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2c328:	sub	r3, r2, r3
   2c32c:	add	r2, r3, #1
   2c330:	sub	r1, fp, #40	; 0x28
   2c334:	mov	r3, #8
   2c338:	str	r3, [sp]
   2c33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c340:	bl	2e240 <__assert_fail@plt+0x1d0e8>
   2c344:	str	r0, [fp, #-8]
   2c348:	movw	r3, #28988	; 0x713c
   2c34c:	movt	r3, #4
   2c350:	ldr	r2, [fp, #-8]
   2c354:	str	r2, [r3]
   2c358:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2c35c:	cmp	r3, #0
   2c360:	beq	2c37c <__assert_fail@plt+0x1b224>
   2c364:	ldr	r2, [fp, #-8]
   2c368:	movw	r3, #28980	; 0x7134
   2c36c:	movt	r3, #4
   2c370:	mov	r1, r2
   2c374:	ldrd	r2, [r3]
   2c378:	strd	r2, [r1]
   2c37c:	movw	r3, #28976	; 0x7130
   2c380:	movt	r3, #4
   2c384:	ldr	r3, [r3]
   2c388:	lsl	r3, r3, #3
   2c38c:	ldr	r2, [fp, #-8]
   2c390:	add	r0, r2, r3
   2c394:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c398:	movw	r3, #28976	; 0x7130
   2c39c:	movt	r3, #4
   2c3a0:	ldr	r3, [r3]
   2c3a4:	sub	r3, r2, r3
   2c3a8:	lsl	r3, r3, #3
   2c3ac:	mov	r2, r3
   2c3b0:	mov	r1, #0
   2c3b4:	bl	11098 <memset@plt>
   2c3b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c3bc:	movw	r3, #28976	; 0x7130
   2c3c0:	movt	r3, #4
   2c3c4:	str	r2, [r3]
   2c3c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c3cc:	lsl	r3, r3, #3
   2c3d0:	ldr	r2, [fp, #-8]
   2c3d4:	add	r3, r2, r3
   2c3d8:	ldr	r3, [r3]
   2c3dc:	str	r3, [fp, #-28]	; 0xffffffe4
   2c3e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c3e4:	lsl	r3, r3, #3
   2c3e8:	ldr	r2, [fp, #-8]
   2c3ec:	add	r3, r2, r3
   2c3f0:	ldr	r3, [r3, #4]
   2c3f4:	str	r3, [fp, #-12]
   2c3f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c3fc:	ldr	r3, [r3, #4]
   2c400:	orr	r3, r3, #1
   2c404:	str	r3, [fp, #-32]	; 0xffffffe0
   2c408:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c40c:	ldr	r3, [r3]
   2c410:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2c414:	add	r2, r2, #8
   2c418:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c41c:	ldr	r1, [r1, #40]	; 0x28
   2c420:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c424:	ldr	r0, [r0, #44]	; 0x2c
   2c428:	str	r0, [sp, #16]
   2c42c:	str	r1, [sp, #12]
   2c430:	str	r2, [sp, #8]
   2c434:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c438:	str	r2, [sp, #4]
   2c43c:	str	r3, [sp]
   2c440:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c444:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2c448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c44c:	ldr	r0, [fp, #-12]
   2c450:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2c454:	str	r0, [fp, #-36]	; 0xffffffdc
   2c458:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c45c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c460:	cmp	r2, r3
   2c464:	bhi	2c51c <__assert_fail@plt+0x1b3c4>
   2c468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c46c:	add	r3, r3, #1
   2c470:	str	r3, [fp, #-28]	; 0xffffffe4
   2c474:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c478:	lsl	r3, r3, #3
   2c47c:	ldr	r2, [fp, #-8]
   2c480:	add	r3, r2, r3
   2c484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c488:	str	r2, [r3]
   2c48c:	ldr	r2, [fp, #-12]
   2c490:	movw	r3, #29148	; 0x71dc
   2c494:	movt	r3, #4
   2c498:	cmp	r2, r3
   2c49c:	beq	2c4a8 <__assert_fail@plt+0x1b350>
   2c4a0:	ldr	r0, [fp, #-12]
   2c4a4:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2c4a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c4ac:	bl	2dee0 <__assert_fail@plt+0x1cd88>
   2c4b0:	mov	r3, r0
   2c4b4:	str	r3, [fp, #-12]
   2c4b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c4bc:	lsl	r3, r3, #3
   2c4c0:	ldr	r2, [fp, #-8]
   2c4c4:	add	r3, r2, r3
   2c4c8:	ldr	r2, [fp, #-12]
   2c4cc:	str	r2, [r3, #4]
   2c4d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c4d4:	ldr	r3, [r3]
   2c4d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2c4dc:	add	r2, r2, #8
   2c4e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c4e4:	ldr	r1, [r1, #40]	; 0x28
   2c4e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c4ec:	ldr	r0, [r0, #44]	; 0x2c
   2c4f0:	str	r0, [sp, #16]
   2c4f4:	str	r1, [sp, #12]
   2c4f8:	str	r2, [sp, #8]
   2c4fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c500:	str	r2, [sp, #4]
   2c504:	str	r3, [sp]
   2c508:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c50c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2c510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c514:	ldr	r0, [fp, #-12]
   2c518:	bl	2a7f4 <__assert_fail@plt+0x1969c>
   2c51c:	bl	11074 <__errno_location@plt>
   2c520:	mov	r2, r0
   2c524:	ldr	r3, [fp, #-16]
   2c528:	str	r3, [r2]
   2c52c:	ldr	r3, [fp, #-12]
   2c530:	mov	r0, r3
   2c534:	sub	sp, fp, #4
   2c538:	ldr	fp, [sp]
   2c53c:	add	sp, sp, #4
   2c540:	pop	{pc}		; (ldr pc, [sp], #4)
   2c544:	str	fp, [sp, #-8]!
   2c548:	str	lr, [sp, #4]
   2c54c:	add	fp, sp, #4
   2c550:	sub	sp, sp, #8
   2c554:	str	r0, [fp, #-8]
   2c558:	str	r1, [fp, #-12]
   2c55c:	movw	r3, #29100	; 0x71ac
   2c560:	movt	r3, #4
   2c564:	mvn	r2, #0
   2c568:	ldr	r1, [fp, #-12]
   2c56c:	ldr	r0, [fp, #-8]
   2c570:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c574:	mov	r3, r0
   2c578:	mov	r0, r3
   2c57c:	sub	sp, fp, #4
   2c580:	ldr	fp, [sp]
   2c584:	add	sp, sp, #4
   2c588:	pop	{pc}		; (ldr pc, [sp], #4)
   2c58c:	str	fp, [sp, #-8]!
   2c590:	str	lr, [sp, #4]
   2c594:	add	fp, sp, #4
   2c598:	sub	sp, sp, #16
   2c59c:	str	r0, [fp, #-8]
   2c5a0:	str	r1, [fp, #-12]
   2c5a4:	str	r2, [fp, #-16]
   2c5a8:	movw	r3, #29100	; 0x71ac
   2c5ac:	movt	r3, #4
   2c5b0:	ldr	r2, [fp, #-16]
   2c5b4:	ldr	r1, [fp, #-12]
   2c5b8:	ldr	r0, [fp, #-8]
   2c5bc:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c5c0:	mov	r3, r0
   2c5c4:	mov	r0, r3
   2c5c8:	sub	sp, fp, #4
   2c5cc:	ldr	fp, [sp]
   2c5d0:	add	sp, sp, #4
   2c5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c5d8:	str	fp, [sp, #-8]!
   2c5dc:	str	lr, [sp, #4]
   2c5e0:	add	fp, sp, #4
   2c5e4:	sub	sp, sp, #8
   2c5e8:	str	r0, [fp, #-8]
   2c5ec:	ldr	r1, [fp, #-8]
   2c5f0:	mov	r0, #0
   2c5f4:	bl	2c544 <__assert_fail@plt+0x1b3ec>
   2c5f8:	mov	r3, r0
   2c5fc:	mov	r0, r3
   2c600:	sub	sp, fp, #4
   2c604:	ldr	fp, [sp]
   2c608:	add	sp, sp, #4
   2c60c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c610:	str	fp, [sp, #-8]!
   2c614:	str	lr, [sp, #4]
   2c618:	add	fp, sp, #4
   2c61c:	sub	sp, sp, #8
   2c620:	str	r0, [fp, #-8]
   2c624:	str	r1, [fp, #-12]
   2c628:	ldr	r2, [fp, #-12]
   2c62c:	ldr	r1, [fp, #-8]
   2c630:	mov	r0, #0
   2c634:	bl	2c58c <__assert_fail@plt+0x1b434>
   2c638:	mov	r3, r0
   2c63c:	mov	r0, r3
   2c640:	sub	sp, fp, #4
   2c644:	ldr	fp, [sp]
   2c648:	add	sp, sp, #4
   2c64c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c650:	str	fp, [sp, #-8]!
   2c654:	str	lr, [sp, #4]
   2c658:	add	fp, sp, #4
   2c65c:	sub	sp, sp, #64	; 0x40
   2c660:	str	r0, [fp, #-56]	; 0xffffffc8
   2c664:	str	r1, [fp, #-60]	; 0xffffffc4
   2c668:	str	r2, [fp, #-64]	; 0xffffffc0
   2c66c:	sub	r3, fp, #52	; 0x34
   2c670:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c674:	mov	r0, r3
   2c678:	bl	2a650 <__assert_fail@plt+0x194f8>
   2c67c:	sub	r3, fp, #52	; 0x34
   2c680:	mvn	r2, #0
   2c684:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2c688:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c68c:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c690:	mov	r3, r0
   2c694:	mov	r0, r3
   2c698:	sub	sp, fp, #4
   2c69c:	ldr	fp, [sp]
   2c6a0:	add	sp, sp, #4
   2c6a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c6a8:	str	fp, [sp, #-8]!
   2c6ac:	str	lr, [sp, #4]
   2c6b0:	add	fp, sp, #4
   2c6b4:	sub	sp, sp, #64	; 0x40
   2c6b8:	str	r0, [fp, #-56]	; 0xffffffc8
   2c6bc:	str	r1, [fp, #-60]	; 0xffffffc4
   2c6c0:	str	r2, [fp, #-64]	; 0xffffffc0
   2c6c4:	str	r3, [fp, #-68]	; 0xffffffbc
   2c6c8:	sub	r3, fp, #52	; 0x34
   2c6cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c6d0:	mov	r0, r3
   2c6d4:	bl	2a650 <__assert_fail@plt+0x194f8>
   2c6d8:	sub	r3, fp, #52	; 0x34
   2c6dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2c6e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2c6e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c6e8:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c6ec:	mov	r3, r0
   2c6f0:	mov	r0, r3
   2c6f4:	sub	sp, fp, #4
   2c6f8:	ldr	fp, [sp]
   2c6fc:	add	sp, sp, #4
   2c700:	pop	{pc}		; (ldr pc, [sp], #4)
   2c704:	str	fp, [sp, #-8]!
   2c708:	str	lr, [sp, #4]
   2c70c:	add	fp, sp, #4
   2c710:	sub	sp, sp, #8
   2c714:	str	r0, [fp, #-8]
   2c718:	str	r1, [fp, #-12]
   2c71c:	ldr	r2, [fp, #-12]
   2c720:	ldr	r1, [fp, #-8]
   2c724:	mov	r0, #0
   2c728:	bl	2c650 <__assert_fail@plt+0x1b4f8>
   2c72c:	mov	r3, r0
   2c730:	mov	r0, r3
   2c734:	sub	sp, fp, #4
   2c738:	ldr	fp, [sp]
   2c73c:	add	sp, sp, #4
   2c740:	pop	{pc}		; (ldr pc, [sp], #4)
   2c744:	str	fp, [sp, #-8]!
   2c748:	str	lr, [sp, #4]
   2c74c:	add	fp, sp, #4
   2c750:	sub	sp, sp, #16
   2c754:	str	r0, [fp, #-8]
   2c758:	str	r1, [fp, #-12]
   2c75c:	str	r2, [fp, #-16]
   2c760:	ldr	r3, [fp, #-16]
   2c764:	ldr	r2, [fp, #-12]
   2c768:	ldr	r1, [fp, #-8]
   2c76c:	mov	r0, #0
   2c770:	bl	2c6a8 <__assert_fail@plt+0x1b550>
   2c774:	mov	r3, r0
   2c778:	mov	r0, r3
   2c77c:	sub	sp, fp, #4
   2c780:	ldr	fp, [sp]
   2c784:	add	sp, sp, #4
   2c788:	pop	{pc}		; (ldr pc, [sp], #4)
   2c78c:	str	fp, [sp, #-8]!
   2c790:	str	lr, [sp, #4]
   2c794:	add	fp, sp, #4
   2c798:	sub	sp, sp, #64	; 0x40
   2c79c:	str	r0, [fp, #-56]	; 0xffffffc8
   2c7a0:	str	r1, [fp, #-60]	; 0xffffffc4
   2c7a4:	mov	r3, r2
   2c7a8:	strb	r3, [fp, #-61]	; 0xffffffc3
   2c7ac:	movw	r2, #29100	; 0x71ac
   2c7b0:	movt	r2, #4
   2c7b4:	sub	r3, fp, #52	; 0x34
   2c7b8:	ldrd	r0, [r2]
   2c7bc:	strd	r0, [r3]
   2c7c0:	ldrd	r0, [r2, #8]
   2c7c4:	strd	r0, [r3, #8]
   2c7c8:	ldrd	r0, [r2, #16]
   2c7cc:	strd	r0, [r3, #16]
   2c7d0:	ldrd	r0, [r2, #24]
   2c7d4:	strd	r0, [r3, #24]
   2c7d8:	ldrd	r0, [r2, #32]
   2c7dc:	strd	r0, [r3, #32]
   2c7e0:	ldrd	r0, [r2, #40]	; 0x28
   2c7e4:	strd	r0, [r3, #40]	; 0x28
   2c7e8:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   2c7ec:	sub	r3, fp, #52	; 0x34
   2c7f0:	mov	r2, #1
   2c7f4:	mov	r0, r3
   2c7f8:	bl	2a4b0 <__assert_fail@plt+0x19358>
   2c7fc:	sub	r3, fp, #52	; 0x34
   2c800:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2c804:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2c808:	mov	r0, #0
   2c80c:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c810:	mov	r3, r0
   2c814:	mov	r0, r3
   2c818:	sub	sp, fp, #4
   2c81c:	ldr	fp, [sp]
   2c820:	add	sp, sp, #4
   2c824:	pop	{pc}		; (ldr pc, [sp], #4)
   2c828:	str	fp, [sp, #-8]!
   2c82c:	str	lr, [sp, #4]
   2c830:	add	fp, sp, #4
   2c834:	sub	sp, sp, #8
   2c838:	str	r0, [fp, #-8]
   2c83c:	mov	r3, r1
   2c840:	strb	r3, [fp, #-9]
   2c844:	ldrb	r3, [fp, #-9]
   2c848:	mov	r2, r3
   2c84c:	mvn	r1, #0
   2c850:	ldr	r0, [fp, #-8]
   2c854:	bl	2c78c <__assert_fail@plt+0x1b634>
   2c858:	mov	r3, r0
   2c85c:	mov	r0, r3
   2c860:	sub	sp, fp, #4
   2c864:	ldr	fp, [sp]
   2c868:	add	sp, sp, #4
   2c86c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c870:	str	fp, [sp, #-8]!
   2c874:	str	lr, [sp, #4]
   2c878:	add	fp, sp, #4
   2c87c:	sub	sp, sp, #8
   2c880:	str	r0, [fp, #-8]
   2c884:	mov	r1, #58	; 0x3a
   2c888:	ldr	r0, [fp, #-8]
   2c88c:	bl	2c828 <__assert_fail@plt+0x1b6d0>
   2c890:	mov	r3, r0
   2c894:	mov	r0, r3
   2c898:	sub	sp, fp, #4
   2c89c:	ldr	fp, [sp]
   2c8a0:	add	sp, sp, #4
   2c8a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8a8:	str	fp, [sp, #-8]!
   2c8ac:	str	lr, [sp, #4]
   2c8b0:	add	fp, sp, #4
   2c8b4:	sub	sp, sp, #8
   2c8b8:	str	r0, [fp, #-8]
   2c8bc:	str	r1, [fp, #-12]
   2c8c0:	mov	r2, #58	; 0x3a
   2c8c4:	ldr	r1, [fp, #-12]
   2c8c8:	ldr	r0, [fp, #-8]
   2c8cc:	bl	2c78c <__assert_fail@plt+0x1b634>
   2c8d0:	mov	r3, r0
   2c8d4:	mov	r0, r3
   2c8d8:	sub	sp, fp, #4
   2c8dc:	ldr	fp, [sp]
   2c8e0:	add	sp, sp, #4
   2c8e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8e8:	str	fp, [sp, #-8]!
   2c8ec:	str	lr, [sp, #4]
   2c8f0:	add	fp, sp, #4
   2c8f4:	sub	sp, sp, #112	; 0x70
   2c8f8:	str	r0, [fp, #-56]	; 0xffffffc8
   2c8fc:	str	r1, [fp, #-60]	; 0xffffffc4
   2c900:	str	r2, [fp, #-64]	; 0xffffffc0
   2c904:	sub	r3, fp, #116	; 0x74
   2c908:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c90c:	mov	r0, r3
   2c910:	bl	2a650 <__assert_fail@plt+0x194f8>
   2c914:	sub	r3, fp, #52	; 0x34
   2c918:	sub	r2, fp, #116	; 0x74
   2c91c:	ldrd	r0, [r2]
   2c920:	strd	r0, [r3]
   2c924:	ldrd	r0, [r2, #8]
   2c928:	strd	r0, [r3, #8]
   2c92c:	ldrd	r0, [r2, #16]
   2c930:	strd	r0, [r3, #16]
   2c934:	ldrd	r0, [r2, #24]
   2c938:	strd	r0, [r3, #24]
   2c93c:	ldrd	r0, [r2, #32]
   2c940:	strd	r0, [r3, #32]
   2c944:	ldrd	r0, [r2, #40]	; 0x28
   2c948:	strd	r0, [r3, #40]	; 0x28
   2c94c:	sub	r3, fp, #52	; 0x34
   2c950:	mov	r2, #1
   2c954:	mov	r1, #58	; 0x3a
   2c958:	mov	r0, r3
   2c95c:	bl	2a4b0 <__assert_fail@plt+0x19358>
   2c960:	sub	r3, fp, #52	; 0x34
   2c964:	mvn	r2, #0
   2c968:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2c96c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c970:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2c974:	mov	r3, r0
   2c978:	mov	r0, r3
   2c97c:	sub	sp, fp, #4
   2c980:	ldr	fp, [sp]
   2c984:	add	sp, sp, #4
   2c988:	pop	{pc}		; (ldr pc, [sp], #4)
   2c98c:	str	fp, [sp, #-8]!
   2c990:	str	lr, [sp, #4]
   2c994:	add	fp, sp, #4
   2c998:	sub	sp, sp, #24
   2c99c:	str	r0, [fp, #-8]
   2c9a0:	str	r1, [fp, #-12]
   2c9a4:	str	r2, [fp, #-16]
   2c9a8:	str	r3, [fp, #-20]	; 0xffffffec
   2c9ac:	mvn	r3, #0
   2c9b0:	str	r3, [sp]
   2c9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c9b8:	ldr	r2, [fp, #-16]
   2c9bc:	ldr	r1, [fp, #-12]
   2c9c0:	ldr	r0, [fp, #-8]
   2c9c4:	bl	2c9e0 <__assert_fail@plt+0x1b888>
   2c9c8:	mov	r3, r0
   2c9cc:	mov	r0, r3
   2c9d0:	sub	sp, fp, #4
   2c9d4:	ldr	fp, [sp]
   2c9d8:	add	sp, sp, #4
   2c9dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c9e0:	str	fp, [sp, #-8]!
   2c9e4:	str	lr, [sp, #4]
   2c9e8:	add	fp, sp, #4
   2c9ec:	sub	sp, sp, #64	; 0x40
   2c9f0:	str	r0, [fp, #-56]	; 0xffffffc8
   2c9f4:	str	r1, [fp, #-60]	; 0xffffffc4
   2c9f8:	str	r2, [fp, #-64]	; 0xffffffc0
   2c9fc:	str	r3, [fp, #-68]	; 0xffffffbc
   2ca00:	movw	r2, #29100	; 0x71ac
   2ca04:	movt	r2, #4
   2ca08:	sub	r3, fp, #52	; 0x34
   2ca0c:	ldrd	r0, [r2]
   2ca10:	strd	r0, [r3]
   2ca14:	ldrd	r0, [r2, #8]
   2ca18:	strd	r0, [r3, #8]
   2ca1c:	ldrd	r0, [r2, #16]
   2ca20:	strd	r0, [r3, #16]
   2ca24:	ldrd	r0, [r2, #24]
   2ca28:	strd	r0, [r3, #24]
   2ca2c:	ldrd	r0, [r2, #32]
   2ca30:	strd	r0, [r3, #32]
   2ca34:	ldrd	r0, [r2, #40]	; 0x28
   2ca38:	strd	r0, [r3, #40]	; 0x28
   2ca3c:	sub	r3, fp, #52	; 0x34
   2ca40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ca44:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2ca48:	mov	r0, r3
   2ca4c:	bl	2a5c8 <__assert_fail@plt+0x19470>
   2ca50:	sub	r3, fp, #52	; 0x34
   2ca54:	ldr	r2, [fp, #4]
   2ca58:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ca5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ca60:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2ca64:	mov	r3, r0
   2ca68:	mov	r0, r3
   2ca6c:	sub	sp, fp, #4
   2ca70:	ldr	fp, [sp]
   2ca74:	add	sp, sp, #4
   2ca78:	pop	{pc}		; (ldr pc, [sp], #4)
   2ca7c:	str	fp, [sp, #-8]!
   2ca80:	str	lr, [sp, #4]
   2ca84:	add	fp, sp, #4
   2ca88:	sub	sp, sp, #16
   2ca8c:	str	r0, [fp, #-8]
   2ca90:	str	r1, [fp, #-12]
   2ca94:	str	r2, [fp, #-16]
   2ca98:	ldr	r3, [fp, #-16]
   2ca9c:	ldr	r2, [fp, #-12]
   2caa0:	ldr	r1, [fp, #-8]
   2caa4:	mov	r0, #0
   2caa8:	bl	2c98c <__assert_fail@plt+0x1b834>
   2caac:	mov	r3, r0
   2cab0:	mov	r0, r3
   2cab4:	sub	sp, fp, #4
   2cab8:	ldr	fp, [sp]
   2cabc:	add	sp, sp, #4
   2cac0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cac4:	str	fp, [sp, #-8]!
   2cac8:	str	lr, [sp, #4]
   2cacc:	add	fp, sp, #4
   2cad0:	sub	sp, sp, #24
   2cad4:	str	r0, [fp, #-8]
   2cad8:	str	r1, [fp, #-12]
   2cadc:	str	r2, [fp, #-16]
   2cae0:	str	r3, [fp, #-20]	; 0xffffffec
   2cae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cae8:	str	r3, [sp]
   2caec:	ldr	r3, [fp, #-16]
   2caf0:	ldr	r2, [fp, #-12]
   2caf4:	ldr	r1, [fp, #-8]
   2caf8:	mov	r0, #0
   2cafc:	bl	2c9e0 <__assert_fail@plt+0x1b888>
   2cb00:	mov	r3, r0
   2cb04:	mov	r0, r3
   2cb08:	sub	sp, fp, #4
   2cb0c:	ldr	fp, [sp]
   2cb10:	add	sp, sp, #4
   2cb14:	pop	{pc}		; (ldr pc, [sp], #4)
   2cb18:	str	fp, [sp, #-8]!
   2cb1c:	str	lr, [sp, #4]
   2cb20:	add	fp, sp, #4
   2cb24:	sub	sp, sp, #16
   2cb28:	str	r0, [fp, #-8]
   2cb2c:	str	r1, [fp, #-12]
   2cb30:	str	r2, [fp, #-16]
   2cb34:	movw	r3, #28992	; 0x7140
   2cb38:	movt	r3, #4
   2cb3c:	ldr	r2, [fp, #-16]
   2cb40:	ldr	r1, [fp, #-12]
   2cb44:	ldr	r0, [fp, #-8]
   2cb48:	bl	2c254 <__assert_fail@plt+0x1b0fc>
   2cb4c:	mov	r3, r0
   2cb50:	mov	r0, r3
   2cb54:	sub	sp, fp, #4
   2cb58:	ldr	fp, [sp]
   2cb5c:	add	sp, sp, #4
   2cb60:	pop	{pc}		; (ldr pc, [sp], #4)
   2cb64:	str	fp, [sp, #-8]!
   2cb68:	str	lr, [sp, #4]
   2cb6c:	add	fp, sp, #4
   2cb70:	sub	sp, sp, #8
   2cb74:	str	r0, [fp, #-8]
   2cb78:	str	r1, [fp, #-12]
   2cb7c:	ldr	r2, [fp, #-12]
   2cb80:	ldr	r1, [fp, #-8]
   2cb84:	mov	r0, #0
   2cb88:	bl	2cb18 <__assert_fail@plt+0x1b9c0>
   2cb8c:	mov	r3, r0
   2cb90:	mov	r0, r3
   2cb94:	sub	sp, fp, #4
   2cb98:	ldr	fp, [sp]
   2cb9c:	add	sp, sp, #4
   2cba0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cba4:	str	fp, [sp, #-8]!
   2cba8:	str	lr, [sp, #4]
   2cbac:	add	fp, sp, #4
   2cbb0:	sub	sp, sp, #8
   2cbb4:	str	r0, [fp, #-8]
   2cbb8:	str	r1, [fp, #-12]
   2cbbc:	mvn	r2, #0
   2cbc0:	ldr	r1, [fp, #-12]
   2cbc4:	ldr	r0, [fp, #-8]
   2cbc8:	bl	2cb18 <__assert_fail@plt+0x1b9c0>
   2cbcc:	mov	r3, r0
   2cbd0:	mov	r0, r3
   2cbd4:	sub	sp, fp, #4
   2cbd8:	ldr	fp, [sp]
   2cbdc:	add	sp, sp, #4
   2cbe0:	pop	{pc}		; (ldr pc, [sp], #4)
   2cbe4:	str	fp, [sp, #-8]!
   2cbe8:	str	lr, [sp, #4]
   2cbec:	add	fp, sp, #4
   2cbf0:	sub	sp, sp, #8
   2cbf4:	str	r0, [fp, #-8]
   2cbf8:	ldr	r1, [fp, #-8]
   2cbfc:	mov	r0, #0
   2cc00:	bl	2cba4 <__assert_fail@plt+0x1ba4c>
   2cc04:	mov	r3, r0
   2cc08:	mov	r0, r3
   2cc0c:	sub	sp, fp, #4
   2cc10:	ldr	fp, [sp]
   2cc14:	add	sp, sp, #4
   2cc18:	pop	{pc}		; (ldr pc, [sp], #4)
   2cc1c:	push	{fp}		; (str fp, [sp, #-4]!)
   2cc20:	add	fp, sp, #0
   2cc24:	sub	sp, sp, #12
   2cc28:	str	r0, [fp, #-8]
   2cc2c:	ldr	r3, [fp, #-8]
   2cc30:	mov	r2, #0
   2cc34:	str	r2, [r3]
   2cc38:	ldr	r3, [fp, #-8]
   2cc3c:	mov	r2, #0
   2cc40:	str	r2, [r3, #4]
   2cc44:	nop	{0}
   2cc48:	add	sp, fp, #0
   2cc4c:	pop	{fp}		; (ldr fp, [sp], #4)
   2cc50:	bx	lr
   2cc54:	push	{fp}		; (str fp, [sp, #-4]!)
   2cc58:	add	fp, sp, #0
   2cc5c:	sub	sp, sp, #12
   2cc60:	str	r0, [fp, #-8]
   2cc64:	str	r1, [fp, #-12]
   2cc68:	ldr	r3, [fp, #-8]
   2cc6c:	lsr	r3, r3, #5
   2cc70:	lsl	r3, r3, #2
   2cc74:	ldr	r2, [fp, #-12]
   2cc78:	add	r3, r2, r3
   2cc7c:	ldr	r2, [r3]
   2cc80:	ldr	r3, [fp, #-8]
   2cc84:	and	r3, r3, #31
   2cc88:	lsr	r3, r2, r3
   2cc8c:	and	r3, r3, #1
   2cc90:	cmp	r3, #0
   2cc94:	movne	r3, #1
   2cc98:	moveq	r3, #0
   2cc9c:	uxtb	r3, r3
   2cca0:	mov	r0, r3
   2cca4:	add	sp, fp, #0
   2cca8:	pop	{fp}		; (ldr fp, [sp], #4)
   2ccac:	bx	lr
   2ccb0:	push	{fp}		; (str fp, [sp, #-4]!)
   2ccb4:	add	fp, sp, #0
   2ccb8:	sub	sp, sp, #20
   2ccbc:	str	r0, [fp, #-16]
   2ccc0:	str	r1, [fp, #-20]	; 0xffffffec
   2ccc4:	mov	r3, #1
   2ccc8:	str	r3, [fp, #-8]
   2cccc:	ldr	r3, [fp, #-16]
   2ccd0:	lsr	r3, r3, #5
   2ccd4:	lsl	r2, r3, #2
   2ccd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ccdc:	add	r2, r1, r2
   2cce0:	ldr	r1, [r2]
   2cce4:	ldr	r2, [fp, #-16]
   2cce8:	and	r2, r2, #31
   2ccec:	ldr	r0, [fp, #-8]
   2ccf0:	lsl	r2, r0, r2
   2ccf4:	lsl	r3, r3, #2
   2ccf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ccfc:	add	r3, r0, r3
   2cd00:	orr	r2, r1, r2
   2cd04:	str	r2, [r3]
   2cd08:	nop	{0}
   2cd0c:	add	sp, fp, #0
   2cd10:	pop	{fp}		; (ldr fp, [sp], #4)
   2cd14:	bx	lr
   2cd18:	str	fp, [sp, #-8]!
   2cd1c:	str	lr, [sp, #4]
   2cd20:	add	fp, sp, #4
   2cd24:	sub	sp, sp, #80	; 0x50
   2cd28:	str	r0, [fp, #-64]	; 0xffffffc0
   2cd2c:	str	r1, [fp, #-68]	; 0xffffffbc
   2cd30:	str	r2, [fp, #-72]	; 0xffffffb8
   2cd34:	str	r3, [fp, #-76]	; 0xffffffb4
   2cd38:	sub	r3, fp, #52	; 0x34
   2cd3c:	mov	r2, #32
   2cd40:	mov	r1, #0
   2cd44:	mov	r0, r3
   2cd48:	bl	11098 <memset@plt>
   2cd4c:	mov	r3, #0
   2cd50:	str	r3, [fp, #-12]
   2cd54:	b	2cd8c <__assert_fail@plt+0x1bc34>
   2cd58:	ldr	r3, [fp, #-12]
   2cd5c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2cd60:	add	r3, r2, r3
   2cd64:	ldrb	r3, [r3]
   2cd68:	strb	r3, [fp, #-17]	; 0xffffffef
   2cd6c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2cd70:	sub	r2, fp, #52	; 0x34
   2cd74:	mov	r1, r2
   2cd78:	mov	r0, r3
   2cd7c:	bl	2ccb0 <__assert_fail@plt+0x1bb58>
   2cd80:	ldr	r3, [fp, #-12]
   2cd84:	add	r3, r3, #1
   2cd88:	str	r3, [fp, #-12]
   2cd8c:	ldr	r3, [fp, #-12]
   2cd90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2cd94:	cmp	r2, r3
   2cd98:	bhi	2cd58 <__assert_fail@plt+0x1bc00>
   2cd9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2cda0:	bl	10f30 <getc_unlocked@plt>
   2cda4:	str	r0, [fp, #-8]
   2cda8:	b	2cdb8 <__assert_fail@plt+0x1bc60>
   2cdac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2cdb0:	bl	10f30 <getc_unlocked@plt>
   2cdb4:	str	r0, [fp, #-8]
   2cdb8:	ldr	r3, [fp, #-8]
   2cdbc:	cmp	r3, #0
   2cdc0:	blt	2cde4 <__assert_fail@plt+0x1bc8c>
   2cdc4:	ldr	r3, [fp, #-8]
   2cdc8:	sub	r2, fp, #52	; 0x34
   2cdcc:	mov	r1, r2
   2cdd0:	mov	r0, r3
   2cdd4:	bl	2cc54 <__assert_fail@plt+0x1bafc>
   2cdd8:	mov	r3, r0
   2cddc:	cmp	r3, #0
   2cde0:	bne	2cdac <__assert_fail@plt+0x1bc54>
   2cde4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2cde8:	ldr	r3, [r3, #4]
   2cdec:	str	r3, [fp, #-16]
   2cdf0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2cdf4:	ldr	r3, [r3]
   2cdf8:	str	r3, [fp, #-56]	; 0xffffffc8
   2cdfc:	mov	r3, #0
   2ce00:	str	r3, [fp, #-12]
   2ce04:	ldr	r3, [fp, #-8]
   2ce08:	cmp	r3, #0
   2ce0c:	bge	2ce24 <__assert_fail@plt+0x1bccc>
   2ce10:	ldr	r3, [fp, #-12]
   2ce14:	cmp	r3, #0
   2ce18:	bne	2ce24 <__assert_fail@plt+0x1bccc>
   2ce1c:	mvn	r3, #0
   2ce20:	b	2cf04 <__assert_fail@plt+0x1bdac>
   2ce24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ce28:	ldr	r2, [fp, #-12]
   2ce2c:	cmp	r2, r3
   2ce30:	bne	2ce54 <__assert_fail@plt+0x1bcfc>
   2ce34:	sub	r1, fp, #56	; 0x38
   2ce38:	mov	r3, #1
   2ce3c:	str	r3, [sp]
   2ce40:	mvn	r3, #0
   2ce44:	mov	r2, #1
   2ce48:	ldr	r0, [fp, #-16]
   2ce4c:	bl	2e240 <__assert_fail@plt+0x1d0e8>
   2ce50:	str	r0, [fp, #-16]
   2ce54:	ldr	r3, [fp, #-8]
   2ce58:	cmp	r3, #0
   2ce5c:	bge	2ce78 <__assert_fail@plt+0x1bd20>
   2ce60:	ldr	r3, [fp, #-12]
   2ce64:	ldr	r2, [fp, #-16]
   2ce68:	add	r3, r2, r3
   2ce6c:	mov	r2, #0
   2ce70:	strb	r2, [r3]
   2ce74:	b	2cee4 <__assert_fail@plt+0x1bd8c>
   2ce78:	ldr	r3, [fp, #-8]
   2ce7c:	sub	r2, fp, #52	; 0x34
   2ce80:	mov	r1, r2
   2ce84:	mov	r0, r3
   2ce88:	bl	2cc54 <__assert_fail@plt+0x1bafc>
   2ce8c:	mov	r3, r0
   2ce90:	cmp	r3, #0
   2ce94:	beq	2ceb0 <__assert_fail@plt+0x1bd58>
   2ce98:	ldr	r3, [fp, #-12]
   2ce9c:	ldr	r2, [fp, #-16]
   2cea0:	add	r3, r2, r3
   2cea4:	mov	r2, #0
   2cea8:	strb	r2, [r3]
   2ceac:	b	2cee4 <__assert_fail@plt+0x1bd8c>
   2ceb0:	ldr	r3, [fp, #-12]
   2ceb4:	add	r2, r3, #1
   2ceb8:	str	r2, [fp, #-12]
   2cebc:	mov	r2, r3
   2cec0:	ldr	r3, [fp, #-16]
   2cec4:	add	r3, r3, r2
   2cec8:	ldr	r2, [fp, #-8]
   2cecc:	uxtb	r2, r2
   2ced0:	strb	r2, [r3]
   2ced4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ced8:	bl	10f30 <getc_unlocked@plt>
   2cedc:	str	r0, [fp, #-8]
   2cee0:	b	2ce04 <__assert_fail@plt+0x1bcac>
   2cee4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2cee8:	ldr	r2, [fp, #-16]
   2ceec:	str	r2, [r3, #4]
   2cef0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cef4:	mov	r2, r3
   2cef8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2cefc:	str	r2, [r3]
   2cf00:	ldr	r3, [fp, #-12]
   2cf04:	mov	r0, r3
   2cf08:	sub	sp, fp, #4
   2cf0c:	ldr	fp, [sp]
   2cf10:	add	sp, sp, #4
   2cf14:	pop	{pc}		; (ldr pc, [sp], #4)
   2cf18:	str	r4, [sp, #-12]!
   2cf1c:	str	fp, [sp, #4]
   2cf20:	str	lr, [sp, #8]
   2cf24:	add	fp, sp, #8
   2cf28:	sub	sp, sp, #68	; 0x44
   2cf2c:	str	r0, [fp, #-56]	; 0xffffffc8
   2cf30:	str	r1, [fp, #-60]	; 0xffffffc4
   2cf34:	str	r2, [fp, #-64]	; 0xffffffc0
   2cf38:	str	r3, [fp, #-68]	; 0xffffffbc
   2cf3c:	sub	r3, fp, #44	; 0x2c
   2cf40:	str	r3, [fp, #-28]	; 0xffffffe4
   2cf44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cf48:	cmp	r3, #0
   2cf4c:	bne	2cf5c <__assert_fail@plt+0x1be04>
   2cf50:	mov	r3, #64	; 0x40
   2cf54:	str	r3, [fp, #-60]	; 0xffffffc4
   2cf58:	b	2cf68 <__assert_fail@plt+0x1be10>
   2cf5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cf60:	add	r3, r3, #1
   2cf64:	str	r3, [fp, #-60]	; 0xffffffc4
   2cf68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cf6c:	str	r3, [fp, #-48]	; 0xffffffd0
   2cf70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cf74:	mov	r1, #4
   2cf78:	mov	r0, r3
   2cf7c:	bl	2e090 <__assert_fail@plt+0x1cf38>
   2cf80:	mov	r3, r0
   2cf84:	str	r3, [fp, #-16]
   2cf88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cf8c:	mov	r1, #4
   2cf90:	mov	r0, r3
   2cf94:	bl	2e090 <__assert_fail@plt+0x1cf38>
   2cf98:	mov	r3, r0
   2cf9c:	str	r3, [fp, #-20]	; 0xffffffec
   2cfa0:	mov	r3, #0
   2cfa4:	str	r3, [fp, #-24]	; 0xffffffe8
   2cfa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cfac:	bl	2cc1c <__assert_fail@plt+0x1bac4>
   2cfb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cfb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2cfb8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2cfbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2cfc0:	bl	2cd18 <__assert_fail@plt+0x1bbc0>
   2cfc4:	str	r0, [fp, #-32]	; 0xffffffe0
   2cfc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cfcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cfd0:	cmp	r2, r3
   2cfd4:	blt	2d010 <__assert_fail@plt+0x1beb8>
   2cfd8:	sub	r1, fp, #48	; 0x30
   2cfdc:	mov	r3, #4
   2cfe0:	str	r3, [sp]
   2cfe4:	mvn	r3, #0
   2cfe8:	mov	r2, #1
   2cfec:	ldr	r0, [fp, #-16]
   2cff0:	bl	2e240 <__assert_fail@plt+0x1d0e8>
   2cff4:	str	r0, [fp, #-16]
   2cff8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cffc:	mov	r2, #4
   2d000:	mov	r1, r3
   2d004:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d008:	bl	2dfc4 <__assert_fail@plt+0x1ce6c>
   2d00c:	str	r0, [fp, #-20]	; 0xffffffec
   2d010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d014:	cmn	r3, #1
   2d018:	bne	2d07c <__assert_fail@plt+0x1bf24>
   2d01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d020:	lsl	r3, r3, #2
   2d024:	ldr	r2, [fp, #-16]
   2d028:	add	r3, r2, r3
   2d02c:	mov	r2, #0
   2d030:	str	r2, [r3]
   2d034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d038:	lsl	r3, r3, #2
   2d03c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d040:	add	r3, r2, r3
   2d044:	mov	r2, #0
   2d048:	str	r2, [r3]
   2d04c:	nop	{0}
   2d050:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d054:	ldr	r3, [r3, #4]
   2d058:	mov	r0, r3
   2d05c:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2d060:	ldr	r3, [fp, #4]
   2d064:	ldr	r2, [fp, #-16]
   2d068:	str	r2, [r3]
   2d06c:	ldr	r3, [fp, #8]
   2d070:	cmp	r3, #0
   2d074:	beq	2d104 <__assert_fail@plt+0x1bfac>
   2d078:	b	2d0f4 <__assert_fail@plt+0x1bf9c>
   2d07c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d080:	add	r3, r3, #1
   2d084:	mov	r1, #1
   2d088:	mov	r0, r3
   2d08c:	bl	2e090 <__assert_fail@plt+0x1cf38>
   2d090:	mov	r3, r0
   2d094:	str	r3, [fp, #-36]	; 0xffffffdc
   2d098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d09c:	lsl	r3, r3, #2
   2d0a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d0a4:	add	r3, r2, r3
   2d0a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d0ac:	str	r2, [r3]
   2d0b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d0b4:	ldr	r1, [r3, #4]
   2d0b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d0bc:	add	r0, r3, #1
   2d0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d0c4:	lsl	r3, r3, #2
   2d0c8:	ldr	r2, [fp, #-16]
   2d0cc:	add	r4, r2, r3
   2d0d0:	mov	r2, r0
   2d0d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d0d8:	bl	10f00 <memcpy@plt>
   2d0dc:	mov	r3, r0
   2d0e0:	str	r3, [r4]
   2d0e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d0e8:	add	r3, r3, #1
   2d0ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2d0f0:	b	2cfb0 <__assert_fail@plt+0x1be58>
   2d0f4:	ldr	r3, [fp, #8]
   2d0f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d0fc:	str	r2, [r3]
   2d100:	b	2d10c <__assert_fail@plt+0x1bfb4>
   2d104:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d108:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2d10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d110:	mov	r0, r3
   2d114:	sub	sp, fp, #8
   2d118:	ldr	r4, [sp]
   2d11c:	ldr	fp, [sp, #4]
   2d120:	add	sp, sp, #8
   2d124:	pop	{pc}		; (ldr pc, [sp], #4)
   2d128:	str	fp, [sp, #-8]!
   2d12c:	str	lr, [sp, #4]
   2d130:	add	fp, sp, #4
   2d134:	sub	sp, sp, #24
   2d138:	str	r0, [fp, #-16]
   2d13c:	str	r1, [fp, #-20]	; 0xffffffec
   2d140:	str	r2, [fp, #-24]	; 0xffffffe8
   2d144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d148:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d14c:	ldr	r0, [fp, #-16]
   2d150:	bl	110a4 <write@plt>
   2d154:	str	r0, [fp, #-8]
   2d158:	ldr	r3, [fp, #-8]
   2d15c:	cmp	r3, #0
   2d160:	blt	2d16c <__assert_fail@plt+0x1c014>
   2d164:	ldr	r3, [fp, #-8]
   2d168:	b	2d1c8 <__assert_fail@plt+0x1c070>
   2d16c:	bl	11074 <__errno_location@plt>
   2d170:	mov	r3, r0
   2d174:	ldr	r3, [r3]
   2d178:	cmp	r3, #4
   2d17c:	beq	2d1c0 <__assert_fail@plt+0x1c068>
   2d180:	bl	11074 <__errno_location@plt>
   2d184:	mov	r3, r0
   2d188:	ldr	r3, [r3]
   2d18c:	cmp	r3, #22
   2d190:	bne	2d1b8 <__assert_fail@plt+0x1c060>
   2d194:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d198:	mov	r3, #0
   2d19c:	movt	r3, #32752	; 0x7ff0
   2d1a0:	cmp	r2, r3
   2d1a4:	bls	2d1b8 <__assert_fail@plt+0x1c060>
   2d1a8:	mov	r3, #0
   2d1ac:	movt	r3, #32752	; 0x7ff0
   2d1b0:	str	r3, [fp, #-24]	; 0xffffffe8
   2d1b4:	b	2d1c4 <__assert_fail@plt+0x1c06c>
   2d1b8:	ldr	r3, [fp, #-8]
   2d1bc:	b	2d1c8 <__assert_fail@plt+0x1c070>
   2d1c0:	nop	{0}
   2d1c4:	b	2d144 <__assert_fail@plt+0x1bfec>
   2d1c8:	mov	r0, r3
   2d1cc:	sub	sp, fp, #4
   2d1d0:	ldr	fp, [sp]
   2d1d4:	add	sp, sp, #4
   2d1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d1dc:	str	r4, [sp, #-12]!
   2d1e0:	str	fp, [sp, #4]
   2d1e4:	str	lr, [sp, #8]
   2d1e8:	add	fp, sp, #8
   2d1ec:	sub	sp, sp, #92	; 0x5c
   2d1f0:	str	r0, [fp, #-96]	; 0xffffffa0
   2d1f4:	str	r1, [fp, #-100]	; 0xffffff9c
   2d1f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2d1fc:	bl	10f3c <strdup@plt>
   2d200:	mov	r3, r0
   2d204:	str	r3, [fp, #-28]	; 0xffffffe4
   2d208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d20c:	cmp	r3, #0
   2d210:	bne	2d218 <__assert_fail@plt+0x1c0c0>
   2d214:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2d218:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2d21c:	mov	r3, r0
   2d220:	cmp	r3, #1
   2d224:	bls	2d4f4 <__assert_fail@plt+0x1c39c>
   2d228:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d22c:	cmp	r3, #0
   2d230:	beq	2d300 <__assert_fail@plt+0x1c1a8>
   2d234:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d238:	str	r3, [fp, #-68]	; 0xffffffbc
   2d23c:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2d240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d244:	bl	11050 <strlen@plt>
   2d248:	mov	r3, r0
   2d24c:	add	r3, r4, r3
   2d250:	str	r3, [fp, #-88]	; 0xffffffa8
   2d254:	mov	r3, #0
   2d258:	strb	r3, [fp, #-84]	; 0xffffffac
   2d25c:	sub	r3, fp, #88	; 0x58
   2d260:	add	r3, r3, #8
   2d264:	mov	r2, #8
   2d268:	mov	r1, #0
   2d26c:	mov	r0, r3
   2d270:	bl	11098 <memset@plt>
   2d274:	mov	r3, #0
   2d278:	strb	r3, [fp, #-72]	; 0xffffffb8
   2d27c:	b	2d298 <__assert_fail@plt+0x1c140>
   2d280:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d284:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d288:	add	r3, r2, r3
   2d28c:	str	r3, [fp, #-68]	; 0xffffffbc
   2d290:	mov	r3, #0
   2d294:	strb	r3, [fp, #-72]	; 0xffffffb8
   2d298:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d29c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d2a0:	cmp	r2, r3
   2d2a4:	bcs	2d2d8 <__assert_fail@plt+0x1c180>
   2d2a8:	sub	r3, fp, #88	; 0x58
   2d2ac:	mov	r0, r3
   2d2b0:	bl	2f0ac <__assert_fail@plt+0x1df54>
   2d2b4:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d2b8:	cmp	r3, #0
   2d2bc:	beq	2d2d8 <__assert_fail@plt+0x1c180>
   2d2c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d2c4:	mov	r0, r3
   2d2c8:	bl	11038 <iswspace@plt>
   2d2cc:	mov	r3, r0
   2d2d0:	cmp	r3, #0
   2d2d4:	bne	2d280 <__assert_fail@plt+0x1c128>
   2d2d8:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2d2dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d2e0:	mov	r0, r3
   2d2e4:	bl	11050 <strlen@plt>
   2d2e8:	mov	r3, r0
   2d2ec:	add	r3, r3, #1
   2d2f0:	mov	r2, r3
   2d2f4:	mov	r1, r4
   2d2f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d2fc:	bl	10edc <memmove@plt>
   2d300:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d304:	cmp	r3, #1
   2d308:	beq	2d5f4 <__assert_fail@plt+0x1c49c>
   2d30c:	mov	r3, #0
   2d310:	str	r3, [fp, #-16]
   2d314:	mov	r3, #0
   2d318:	str	r3, [fp, #-20]	; 0xffffffec
   2d31c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d320:	str	r3, [fp, #-68]	; 0xffffffbc
   2d324:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2d328:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d32c:	bl	11050 <strlen@plt>
   2d330:	mov	r3, r0
   2d334:	add	r3, r4, r3
   2d338:	str	r3, [fp, #-88]	; 0xffffffa8
   2d33c:	mov	r3, #0
   2d340:	strb	r3, [fp, #-84]	; 0xffffffac
   2d344:	sub	r3, fp, #88	; 0x58
   2d348:	add	r3, r3, #8
   2d34c:	mov	r2, #8
   2d350:	mov	r1, #0
   2d354:	mov	r0, r3
   2d358:	bl	11098 <memset@plt>
   2d35c:	mov	r3, #0
   2d360:	strb	r3, [fp, #-72]	; 0xffffffb8
   2d364:	b	2d4ac <__assert_fail@plt+0x1c354>
   2d368:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d36c:	cmp	r3, #0
   2d370:	beq	2d38c <__assert_fail@plt+0x1c234>
   2d374:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d378:	mov	r0, r3
   2d37c:	bl	11038 <iswspace@plt>
   2d380:	mov	r3, r0
   2d384:	cmp	r3, #0
   2d388:	bne	2d488 <__assert_fail@plt+0x1c330>
   2d38c:	ldr	r3, [fp, #-16]
   2d390:	cmp	r3, #0
   2d394:	bne	2d3d0 <__assert_fail@plt+0x1c278>
   2d398:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d39c:	eor	r3, r3, #1
   2d3a0:	uxtb	r3, r3
   2d3a4:	cmp	r3, #0
   2d3a8:	bne	2d3c4 <__assert_fail@plt+0x1c26c>
   2d3ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d3b0:	mov	r0, r3
   2d3b4:	bl	11038 <iswspace@plt>
   2d3b8:	mov	r3, r0
   2d3bc:	cmp	r3, #0
   2d3c0:	bne	2d3d0 <__assert_fail@plt+0x1c278>
   2d3c4:	mov	r3, #1
   2d3c8:	str	r3, [fp, #-16]
   2d3cc:	b	2d494 <__assert_fail@plt+0x1c33c>
   2d3d0:	ldr	r3, [fp, #-16]
   2d3d4:	cmp	r3, #1
   2d3d8:	bne	2d408 <__assert_fail@plt+0x1c2b0>
   2d3dc:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d3e0:	eor	r3, r3, #1
   2d3e4:	uxtb	r3, r3
   2d3e8:	cmp	r3, #0
   2d3ec:	bne	2d490 <__assert_fail@plt+0x1c338>
   2d3f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d3f4:	mov	r0, r3
   2d3f8:	bl	11038 <iswspace@plt>
   2d3fc:	mov	r3, r0
   2d400:	cmp	r3, #0
   2d404:	beq	2d490 <__assert_fail@plt+0x1c338>
   2d408:	ldr	r3, [fp, #-16]
   2d40c:	cmp	r3, #1
   2d410:	bne	2d44c <__assert_fail@plt+0x1c2f4>
   2d414:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d418:	cmp	r3, #0
   2d41c:	beq	2d44c <__assert_fail@plt+0x1c2f4>
   2d420:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d424:	mov	r0, r3
   2d428:	bl	11038 <iswspace@plt>
   2d42c:	mov	r3, r0
   2d430:	cmp	r3, #0
   2d434:	beq	2d44c <__assert_fail@plt+0x1c2f4>
   2d438:	mov	r3, #2
   2d43c:	str	r3, [fp, #-16]
   2d440:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d444:	str	r3, [fp, #-20]	; 0xffffffec
   2d448:	b	2d494 <__assert_fail@plt+0x1c33c>
   2d44c:	ldr	r3, [fp, #-16]
   2d450:	cmp	r3, #2
   2d454:	bne	2d47c <__assert_fail@plt+0x1c324>
   2d458:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2d45c:	cmp	r3, #0
   2d460:	beq	2d47c <__assert_fail@plt+0x1c324>
   2d464:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d468:	mov	r0, r3
   2d46c:	bl	11038 <iswspace@plt>
   2d470:	mov	r3, r0
   2d474:	cmp	r3, #0
   2d478:	bne	2d494 <__assert_fail@plt+0x1c33c>
   2d47c:	mov	r3, #1
   2d480:	str	r3, [fp, #-16]
   2d484:	b	2d494 <__assert_fail@plt+0x1c33c>
   2d488:	nop	{0}
   2d48c:	b	2d494 <__assert_fail@plt+0x1c33c>
   2d490:	nop	{0}
   2d494:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d498:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d49c:	add	r3, r2, r3
   2d4a0:	str	r3, [fp, #-68]	; 0xffffffbc
   2d4a4:	mov	r3, #0
   2d4a8:	strb	r3, [fp, #-72]	; 0xffffffb8
   2d4ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d4b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d4b4:	cmp	r2, r3
   2d4b8:	bcs	2d4d8 <__assert_fail@plt+0x1c380>
   2d4bc:	sub	r3, fp, #88	; 0x58
   2d4c0:	mov	r0, r3
   2d4c4:	bl	2f0ac <__assert_fail@plt+0x1df54>
   2d4c8:	ldr	r3, [fp, #-16]
   2d4cc:	cmp	r3, #0
   2d4d0:	bne	2d38c <__assert_fail@plt+0x1c234>
   2d4d4:	b	2d368 <__assert_fail@plt+0x1c210>
   2d4d8:	ldr	r3, [fp, #-16]
   2d4dc:	cmp	r3, #2
   2d4e0:	bne	2d5f4 <__assert_fail@plt+0x1c49c>
   2d4e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d4e8:	mov	r2, #0
   2d4ec:	strb	r2, [r3]
   2d4f0:	b	2d5f4 <__assert_fail@plt+0x1c49c>
   2d4f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d4f8:	cmp	r3, #0
   2d4fc:	beq	2d574 <__assert_fail@plt+0x1c41c>
   2d500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d504:	str	r3, [fp, #-24]	; 0xffffffe8
   2d508:	b	2d518 <__assert_fail@plt+0x1c3c0>
   2d50c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d510:	add	r3, r3, #1
   2d514:	str	r3, [fp, #-24]	; 0xffffffe8
   2d518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d51c:	ldrb	r3, [r3]
   2d520:	cmp	r3, #0
   2d524:	beq	2d554 <__assert_fail@plt+0x1c3fc>
   2d528:	bl	11020 <__ctype_b_loc@plt>
   2d52c:	mov	r3, r0
   2d530:	ldr	r2, [r3]
   2d534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d538:	ldrb	r3, [r3]
   2d53c:	lsl	r3, r3, #1
   2d540:	add	r3, r2, r3
   2d544:	ldrh	r3, [r3]
   2d548:	and	r3, r3, #8192	; 0x2000
   2d54c:	cmp	r3, #0
   2d550:	bne	2d50c <__assert_fail@plt+0x1c3b4>
   2d554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d558:	bl	11050 <strlen@plt>
   2d55c:	mov	r3, r0
   2d560:	add	r3, r3, #1
   2d564:	mov	r2, r3
   2d568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d56c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d570:	bl	10edc <memmove@plt>
   2d574:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2d578:	cmp	r3, #1
   2d57c:	beq	2d5f4 <__assert_fail@plt+0x1c49c>
   2d580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d584:	bl	11050 <strlen@plt>
   2d588:	mov	r3, r0
   2d58c:	sub	r3, r3, #1
   2d590:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d594:	add	r3, r2, r3
   2d598:	str	r3, [fp, #-24]	; 0xffffffe8
   2d59c:	b	2d5b8 <__assert_fail@plt+0x1c460>
   2d5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5a4:	mov	r2, #0
   2d5a8:	strb	r2, [r3]
   2d5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5b0:	sub	r3, r3, #1
   2d5b4:	str	r3, [fp, #-24]	; 0xffffffe8
   2d5b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d5c0:	cmp	r2, r3
   2d5c4:	bcc	2d5f4 <__assert_fail@plt+0x1c49c>
   2d5c8:	bl	11020 <__ctype_b_loc@plt>
   2d5cc:	mov	r3, r0
   2d5d0:	ldr	r2, [r3]
   2d5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5d8:	ldrb	r3, [r3]
   2d5dc:	lsl	r3, r3, #1
   2d5e0:	add	r3, r2, r3
   2d5e4:	ldrh	r3, [r3]
   2d5e8:	and	r3, r3, #8192	; 0x2000
   2d5ec:	cmp	r3, #0
   2d5f0:	bne	2d5a0 <__assert_fail@plt+0x1c448>
   2d5f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d5f8:	mov	r0, r3
   2d5fc:	sub	sp, fp, #8
   2d600:	ldr	r4, [sp]
   2d604:	ldr	fp, [sp, #4]
   2d608:	add	sp, sp, #8
   2d60c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d610:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d614:	strd	r6, [sp, #8]
   2d618:	str	fp, [sp, #16]
   2d61c:	str	lr, [sp, #20]
   2d620:	add	fp, sp, #20
   2d624:	sub	sp, sp, #48	; 0x30
   2d628:	str	r0, [fp, #-24]	; 0xffffffe8
   2d62c:	str	r1, [fp, #-28]	; 0xffffffe4
   2d630:	str	r2, [fp, #-32]	; 0xffffffe0
   2d634:	str	r3, [fp, #-36]	; 0xffffffdc
   2d638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d63c:	cmp	r3, #0
   2d640:	beq	2d668 <__assert_fail@plt+0x1c510>
   2d644:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d648:	str	r3, [sp]
   2d64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d650:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d654:	movw	r1, #25012	; 0x61b4
   2d658:	movt	r1, #3
   2d65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d660:	bl	11068 <fprintf@plt>
   2d664:	b	2d680 <__assert_fail@plt+0x1c528>
   2d668:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d66c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d670:	movw	r1, #25024	; 0x61c0
   2d674:	movt	r1, #3
   2d678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d67c:	bl	11068 <fprintf@plt>
   2d680:	movw	r0, #25032	; 0x61c8
   2d684:	movt	r0, #3
   2d688:	bl	11044 <gettext@plt>
   2d68c:	mov	r2, r0
   2d690:	movw	r3, #2022	; 0x7e6
   2d694:	movw	r1, #25816	; 0x64d8
   2d698:	movt	r1, #3
   2d69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d6a0:	bl	11068 <fprintf@plt>
   2d6a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d6a8:	mov	r0, #10
   2d6ac:	bl	10f24 <fputc_unlocked@plt>
   2d6b0:	movw	r0, #25036	; 0x61cc
   2d6b4:	movt	r0, #3
   2d6b8:	bl	11044 <gettext@plt>
   2d6bc:	mov	r3, r0
   2d6c0:	movw	r2, #25208	; 0x6278
   2d6c4:	movt	r2, #3
   2d6c8:	mov	r1, r3
   2d6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d6d0:	bl	11068 <fprintf@plt>
   2d6d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d6d8:	mov	r0, #10
   2d6dc:	bl	10f24 <fputc_unlocked@plt>
   2d6e0:	ldr	r3, [fp, #8]
   2d6e4:	cmp	r3, #9
   2d6e8:	ldrls	pc, [pc, r3, lsl #2]
   2d6ec:	b	2dacc <__assert_fail@plt+0x1c974>
   2d6f0:	andeq	sp, r2, r8, ror fp
   2d6f4:	andeq	sp, r2, r8, lsl r7
   2d6f8:	andeq	sp, r2, r0, asr #14
   2d6fc:	andeq	sp, r2, r0, ror r7
   2d700:			; <UNDEFINED> instruction: 0x0002d7b4
   2d704:	andeq	sp, r2, r0, lsl r8
   2d708:	andeq	sp, r2, ip, ror r8
   2d70c:	strdeq	sp, [r2], -r8
   2d710:	andeq	sp, r2, r4, lsl #19
   2d714:	andeq	sp, r2, r0, lsr #20
   2d718:	movw	r0, #25244	; 0x629c
   2d71c:	movt	r0, #3
   2d720:	bl	11044 <gettext@plt>
   2d724:	mov	r1, r0
   2d728:	ldr	r3, [fp, #4]
   2d72c:	ldr	r3, [r3]
   2d730:	mov	r2, r3
   2d734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d738:	bl	11068 <fprintf@plt>
   2d73c:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d740:	movw	r0, #25260	; 0x62ac
   2d744:	movt	r0, #3
   2d748:	bl	11044 <gettext@plt>
   2d74c:	mov	r1, r0
   2d750:	ldr	r3, [fp, #4]
   2d754:	ldr	r2, [r3]
   2d758:	ldr	r3, [fp, #4]
   2d75c:	add	r3, r3, #4
   2d760:	ldr	r3, [r3]
   2d764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d768:	bl	11068 <fprintf@plt>
   2d76c:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d770:	movw	r0, #25284	; 0x62c4
   2d774:	movt	r0, #3
   2d778:	bl	11044 <gettext@plt>
   2d77c:	ldr	r3, [fp, #4]
   2d780:	ldr	r2, [r3]
   2d784:	ldr	r3, [fp, #4]
   2d788:	add	r3, r3, #4
   2d78c:	ldr	r1, [r3]
   2d790:	ldr	r3, [fp, #4]
   2d794:	add	r3, r3, #8
   2d798:	ldr	r3, [r3]
   2d79c:	str	r3, [sp]
   2d7a0:	mov	r3, r1
   2d7a4:	mov	r1, r0
   2d7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7ac:	bl	11068 <fprintf@plt>
   2d7b0:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d7b4:	movw	r0, #25312	; 0x62e0
   2d7b8:	movt	r0, #3
   2d7bc:	bl	11044 <gettext@plt>
   2d7c0:	mov	ip, r0
   2d7c4:	ldr	r3, [fp, #4]
   2d7c8:	ldr	r1, [r3]
   2d7cc:	ldr	r3, [fp, #4]
   2d7d0:	add	r3, r3, #4
   2d7d4:	ldr	r0, [r3]
   2d7d8:	ldr	r3, [fp, #4]
   2d7dc:	add	r3, r3, #8
   2d7e0:	ldr	r3, [r3]
   2d7e4:	ldr	r2, [fp, #4]
   2d7e8:	add	r2, r2, #12
   2d7ec:	ldr	r2, [r2]
   2d7f0:	str	r2, [sp, #4]
   2d7f4:	str	r3, [sp]
   2d7f8:	mov	r3, r0
   2d7fc:	mov	r2, r1
   2d800:	mov	r1, ip
   2d804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d808:	bl	11068 <fprintf@plt>
   2d80c:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d810:	movw	r0, #25344	; 0x6300
   2d814:	movt	r0, #3
   2d818:	bl	11044 <gettext@plt>
   2d81c:	mov	lr, r0
   2d820:	ldr	r3, [fp, #4]
   2d824:	ldr	r0, [r3]
   2d828:	ldr	r3, [fp, #4]
   2d82c:	add	r3, r3, #4
   2d830:	ldr	ip, [r3]
   2d834:	ldr	r3, [fp, #4]
   2d838:	add	r3, r3, #8
   2d83c:	ldr	r3, [r3]
   2d840:	ldr	r2, [fp, #4]
   2d844:	add	r2, r2, #12
   2d848:	ldr	r2, [r2]
   2d84c:	ldr	r1, [fp, #4]
   2d850:	add	r1, r1, #16
   2d854:	ldr	r1, [r1]
   2d858:	str	r1, [sp, #8]
   2d85c:	str	r2, [sp, #4]
   2d860:	str	r3, [sp]
   2d864:	mov	r3, ip
   2d868:	mov	r2, r0
   2d86c:	mov	r1, lr
   2d870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d874:	bl	11068 <fprintf@plt>
   2d878:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d87c:	movw	r0, #25380	; 0x6324
   2d880:	movt	r0, #3
   2d884:	bl	11044 <gettext@plt>
   2d888:	mov	r4, r0
   2d88c:	ldr	r3, [fp, #4]
   2d890:	ldr	ip, [r3]
   2d894:	ldr	r3, [fp, #4]
   2d898:	add	r3, r3, #4
   2d89c:	ldr	lr, [r3]
   2d8a0:	ldr	r3, [fp, #4]
   2d8a4:	add	r3, r3, #8
   2d8a8:	ldr	r3, [r3]
   2d8ac:	ldr	r2, [fp, #4]
   2d8b0:	add	r2, r2, #12
   2d8b4:	ldr	r2, [r2]
   2d8b8:	ldr	r1, [fp, #4]
   2d8bc:	add	r1, r1, #16
   2d8c0:	ldr	r1, [r1]
   2d8c4:	ldr	r0, [fp, #4]
   2d8c8:	add	r0, r0, #20
   2d8cc:	ldr	r0, [r0]
   2d8d0:	str	r0, [sp, #12]
   2d8d4:	str	r1, [sp, #8]
   2d8d8:	str	r2, [sp, #4]
   2d8dc:	str	r3, [sp]
   2d8e0:	mov	r3, lr
   2d8e4:	mov	r2, ip
   2d8e8:	mov	r1, r4
   2d8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8f0:	bl	11068 <fprintf@plt>
   2d8f4:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d8f8:	movw	r0, #25420	; 0x634c
   2d8fc:	movt	r0, #3
   2d900:	bl	11044 <gettext@plt>
   2d904:	mov	r5, r0
   2d908:	ldr	r3, [fp, #4]
   2d90c:	ldr	lr, [r3]
   2d910:	ldr	r3, [fp, #4]
   2d914:	add	r3, r3, #4
   2d918:	ldr	r4, [r3]
   2d91c:	ldr	r3, [fp, #4]
   2d920:	add	r3, r3, #8
   2d924:	ldr	r3, [r3]
   2d928:	ldr	r2, [fp, #4]
   2d92c:	add	r2, r2, #12
   2d930:	ldr	r2, [r2]
   2d934:	ldr	r1, [fp, #4]
   2d938:	add	r1, r1, #16
   2d93c:	ldr	r1, [r1]
   2d940:	ldr	r0, [fp, #4]
   2d944:	add	r0, r0, #20
   2d948:	ldr	r0, [r0]
   2d94c:	ldr	ip, [fp, #4]
   2d950:	add	ip, ip, #24
   2d954:	ldr	ip, [ip]
   2d958:	str	ip, [sp, #16]
   2d95c:	str	r0, [sp, #12]
   2d960:	str	r1, [sp, #8]
   2d964:	str	r2, [sp, #4]
   2d968:	str	r3, [sp]
   2d96c:	mov	r3, r4
   2d970:	mov	r2, lr
   2d974:	mov	r1, r5
   2d978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d97c:	bl	11068 <fprintf@plt>
   2d980:	b	2db7c <__assert_fail@plt+0x1ca24>
   2d984:	movw	r0, #25464	; 0x6378
   2d988:	movt	r0, #3
   2d98c:	bl	11044 <gettext@plt>
   2d990:	mov	r6, r0
   2d994:	ldr	r3, [fp, #4]
   2d998:	ldr	r4, [r3]
   2d99c:	ldr	r3, [fp, #4]
   2d9a0:	add	r3, r3, #4
   2d9a4:	ldr	r5, [r3]
   2d9a8:	ldr	r3, [fp, #4]
   2d9ac:	add	r3, r3, #8
   2d9b0:	ldr	r3, [r3]
   2d9b4:	ldr	r2, [fp, #4]
   2d9b8:	add	r2, r2, #12
   2d9bc:	ldr	r2, [r2]
   2d9c0:	ldr	r1, [fp, #4]
   2d9c4:	add	r1, r1, #16
   2d9c8:	ldr	r1, [r1]
   2d9cc:	ldr	r0, [fp, #4]
   2d9d0:	add	r0, r0, #20
   2d9d4:	ldr	r0, [r0]
   2d9d8:	ldr	ip, [fp, #4]
   2d9dc:	add	ip, ip, #24
   2d9e0:	ldr	ip, [ip]
   2d9e4:	ldr	lr, [fp, #4]
   2d9e8:	add	lr, lr, #28
   2d9ec:	ldr	lr, [lr]
   2d9f0:	str	lr, [sp, #20]
   2d9f4:	str	ip, [sp, #16]
   2d9f8:	str	r0, [sp, #12]
   2d9fc:	str	r1, [sp, #8]
   2da00:	str	r2, [sp, #4]
   2da04:	str	r3, [sp]
   2da08:	mov	r3, r5
   2da0c:	mov	r2, r4
   2da10:	mov	r1, r6
   2da14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da18:	bl	11068 <fprintf@plt>
   2da1c:	b	2db7c <__assert_fail@plt+0x1ca24>
   2da20:	movw	r0, #25512	; 0x63a8
   2da24:	movt	r0, #3
   2da28:	bl	11044 <gettext@plt>
   2da2c:	mov	r7, r0
   2da30:	ldr	r3, [fp, #4]
   2da34:	ldr	r5, [r3]
   2da38:	ldr	r3, [fp, #4]
   2da3c:	add	r3, r3, #4
   2da40:	ldr	r6, [r3]
   2da44:	ldr	r3, [fp, #4]
   2da48:	add	r3, r3, #8
   2da4c:	ldr	r3, [r3]
   2da50:	ldr	r2, [fp, #4]
   2da54:	add	r2, r2, #12
   2da58:	ldr	r2, [r2]
   2da5c:	ldr	r1, [fp, #4]
   2da60:	add	r1, r1, #16
   2da64:	ldr	r1, [r1]
   2da68:	ldr	r0, [fp, #4]
   2da6c:	add	r0, r0, #20
   2da70:	ldr	r0, [r0]
   2da74:	ldr	ip, [fp, #4]
   2da78:	add	ip, ip, #24
   2da7c:	ldr	ip, [ip]
   2da80:	ldr	lr, [fp, #4]
   2da84:	add	lr, lr, #28
   2da88:	ldr	lr, [lr]
   2da8c:	ldr	r4, [fp, #4]
   2da90:	add	r4, r4, #32
   2da94:	ldr	r4, [r4]
   2da98:	str	r4, [sp, #24]
   2da9c:	str	lr, [sp, #20]
   2daa0:	str	ip, [sp, #16]
   2daa4:	str	r0, [sp, #12]
   2daa8:	str	r1, [sp, #8]
   2daac:	str	r2, [sp, #4]
   2dab0:	str	r3, [sp]
   2dab4:	mov	r3, r6
   2dab8:	mov	r2, r5
   2dabc:	mov	r1, r7
   2dac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dac4:	bl	11068 <fprintf@plt>
   2dac8:	b	2db7c <__assert_fail@plt+0x1ca24>
   2dacc:	movw	r0, #25564	; 0x63dc
   2dad0:	movt	r0, #3
   2dad4:	bl	11044 <gettext@plt>
   2dad8:	mov	r7, r0
   2dadc:	ldr	r3, [fp, #4]
   2dae0:	ldr	r5, [r3]
   2dae4:	ldr	r3, [fp, #4]
   2dae8:	add	r3, r3, #4
   2daec:	ldr	r6, [r3]
   2daf0:	ldr	r3, [fp, #4]
   2daf4:	add	r3, r3, #8
   2daf8:	ldr	r3, [r3]
   2dafc:	ldr	r2, [fp, #4]
   2db00:	add	r2, r2, #12
   2db04:	ldr	r2, [r2]
   2db08:	ldr	r1, [fp, #4]
   2db0c:	add	r1, r1, #16
   2db10:	ldr	r1, [r1]
   2db14:	ldr	r0, [fp, #4]
   2db18:	add	r0, r0, #20
   2db1c:	ldr	r0, [r0]
   2db20:	ldr	ip, [fp, #4]
   2db24:	add	ip, ip, #24
   2db28:	ldr	ip, [ip]
   2db2c:	ldr	lr, [fp, #4]
   2db30:	add	lr, lr, #28
   2db34:	ldr	lr, [lr]
   2db38:	ldr	r4, [fp, #4]
   2db3c:	add	r4, r4, #32
   2db40:	ldr	r4, [r4]
   2db44:	str	r4, [sp, #24]
   2db48:	str	lr, [sp, #20]
   2db4c:	str	ip, [sp, #16]
   2db50:	str	r0, [sp, #12]
   2db54:	str	r1, [sp, #8]
   2db58:	str	r2, [sp, #4]
   2db5c:	str	r3, [sp]
   2db60:	mov	r3, r6
   2db64:	mov	r2, r5
   2db68:	mov	r1, r7
   2db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2db70:	bl	11068 <fprintf@plt>
   2db74:	b	2db7c <__assert_fail@plt+0x1ca24>
   2db78:	nop	{0}
   2db7c:	nop	{0}
   2db80:	sub	sp, fp, #20
   2db84:	ldrd	r4, [sp]
   2db88:	ldrd	r6, [sp, #8]
   2db8c:	ldr	fp, [sp, #16]
   2db90:	add	sp, sp, #20
   2db94:	pop	{pc}		; (ldr pc, [sp], #4)
   2db98:	str	fp, [sp, #-8]!
   2db9c:	str	lr, [sp, #4]
   2dba0:	add	fp, sp, #4
   2dba4:	sub	sp, sp, #32
   2dba8:	str	r0, [fp, #-16]
   2dbac:	str	r1, [fp, #-20]	; 0xffffffec
   2dbb0:	str	r2, [fp, #-24]	; 0xffffffe8
   2dbb4:	str	r3, [fp, #-28]	; 0xffffffe4
   2dbb8:	mov	r3, #0
   2dbbc:	str	r3, [fp, #-8]
   2dbc0:	b	2dbd0 <__assert_fail@plt+0x1ca78>
   2dbc4:	ldr	r3, [fp, #-8]
   2dbc8:	add	r3, r3, #1
   2dbcc:	str	r3, [fp, #-8]
   2dbd0:	ldr	r3, [fp, #-8]
   2dbd4:	lsl	r3, r3, #2
   2dbd8:	ldr	r2, [fp, #4]
   2dbdc:	add	r3, r2, r3
   2dbe0:	ldr	r3, [r3]
   2dbe4:	cmp	r3, #0
   2dbe8:	bne	2dbc4 <__assert_fail@plt+0x1ca6c>
   2dbec:	ldr	r3, [fp, #-8]
   2dbf0:	str	r3, [sp, #4]
   2dbf4:	ldr	r3, [fp, #4]
   2dbf8:	str	r3, [sp]
   2dbfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dc00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2dc08:	ldr	r0, [fp, #-16]
   2dc0c:	bl	2d610 <__assert_fail@plt+0x1c4b8>
   2dc10:	nop	{0}
   2dc14:	sub	sp, fp, #4
   2dc18:	ldr	fp, [sp]
   2dc1c:	add	sp, sp, #4
   2dc20:	pop	{pc}		; (ldr pc, [sp], #4)
   2dc24:	str	fp, [sp, #-8]!
   2dc28:	str	lr, [sp, #4]
   2dc2c:	add	fp, sp, #4
   2dc30:	sub	sp, sp, #72	; 0x48
   2dc34:	str	r0, [fp, #-56]	; 0xffffffc8
   2dc38:	str	r1, [fp, #-60]	; 0xffffffc4
   2dc3c:	str	r2, [fp, #-64]	; 0xffffffc0
   2dc40:	str	r3, [fp, #-68]	; 0xffffffbc
   2dc44:	mov	r3, #0
   2dc48:	str	r3, [fp, #-8]
   2dc4c:	b	2dc5c <__assert_fail@plt+0x1cb04>
   2dc50:	ldr	r3, [fp, #-8]
   2dc54:	add	r3, r3, #1
   2dc58:	str	r3, [fp, #-8]
   2dc5c:	ldr	r3, [fp, #-8]
   2dc60:	cmp	r3, #9
   2dc64:	bhi	2dca8 <__assert_fail@plt+0x1cb50>
   2dc68:	ldr	r3, [fp, #4]
   2dc6c:	add	r2, r3, #4
   2dc70:	str	r2, [fp, #4]
   2dc74:	ldr	r2, [r3]
   2dc78:	ldr	r3, [fp, #-8]
   2dc7c:	lsl	r3, r3, #2
   2dc80:	sub	r1, fp, #4
   2dc84:	add	r3, r1, r3
   2dc88:	str	r2, [r3, #-44]	; 0xffffffd4
   2dc8c:	ldr	r3, [fp, #-8]
   2dc90:	lsl	r3, r3, #2
   2dc94:	sub	r2, fp, #4
   2dc98:	add	r3, r2, r3
   2dc9c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   2dca0:	cmp	r3, #0
   2dca4:	bne	2dc50 <__assert_fail@plt+0x1caf8>
   2dca8:	ldr	r3, [fp, #-8]
   2dcac:	str	r3, [sp, #4]
   2dcb0:	sub	r3, fp, #48	; 0x30
   2dcb4:	str	r3, [sp]
   2dcb8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2dcbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2dcc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dcc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2dcc8:	bl	2d610 <__assert_fail@plt+0x1c4b8>
   2dccc:	nop	{0}
   2dcd0:	sub	sp, fp, #4
   2dcd4:	ldr	fp, [sp]
   2dcd8:	add	sp, sp, #4
   2dcdc:	pop	{pc}		; (ldr pc, [sp], #4)
   2dce0:	push	{r3}		; (str r3, [sp, #-4]!)
   2dce4:	str	fp, [sp, #-8]!
   2dce8:	str	lr, [sp, #4]
   2dcec:	add	fp, sp, #4
   2dcf0:	sub	sp, sp, #36	; 0x24
   2dcf4:	str	r0, [fp, #-20]	; 0xffffffec
   2dcf8:	str	r1, [fp, #-24]	; 0xffffffe8
   2dcfc:	str	r2, [fp, #-28]	; 0xffffffe4
   2dd00:	add	r3, fp, #8
   2dd04:	str	r3, [fp, #-12]
   2dd08:	ldr	r3, [fp, #-12]
   2dd0c:	str	r3, [sp]
   2dd10:	ldr	r3, [fp, #4]
   2dd14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dd18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dd1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dd20:	bl	2dc24 <__assert_fail@plt+0x1cacc>
   2dd24:	nop	{0}
   2dd28:	sub	sp, fp, #4
   2dd2c:	ldr	fp, [sp]
   2dd30:	ldr	lr, [sp, #4]
   2dd34:	add	sp, sp, #8
   2dd38:	add	sp, sp, #4
   2dd3c:	bx	lr
   2dd40:	str	fp, [sp, #-8]!
   2dd44:	str	lr, [sp, #4]
   2dd48:	add	fp, sp, #4
   2dd4c:	movw	r3, #29068	; 0x718c
   2dd50:	movt	r3, #4
   2dd54:	ldr	r3, [r3]
   2dd58:	mov	r1, r3
   2dd5c:	mov	r0, #10
   2dd60:	bl	10f24 <fputc_unlocked@plt>
   2dd64:	movw	r0, #25624	; 0x6418
   2dd68:	movt	r0, #3
   2dd6c:	bl	11044 <gettext@plt>
   2dd70:	mov	r3, r0
   2dd74:	movw	r1, #25644	; 0x642c
   2dd78:	movt	r1, #3
   2dd7c:	mov	r0, r3
   2dd80:	bl	10eb8 <printf@plt>
   2dd84:	movw	r0, #25668	; 0x6444
   2dd88:	movt	r0, #3
   2dd8c:	bl	11044 <gettext@plt>
   2dd90:	mov	r3, r0
   2dd94:	movw	r2, #25688	; 0x6458
   2dd98:	movt	r2, #3
   2dd9c:	movw	r1, #25728	; 0x6480
   2dda0:	movt	r1, #3
   2dda4:	mov	r0, r3
   2dda8:	bl	10eb8 <printf@plt>
   2ddac:	movw	r0, #25744	; 0x6490
   2ddb0:	movt	r0, #3
   2ddb4:	bl	11044 <gettext@plt>
   2ddb8:	mov	r3, r0
   2ddbc:	movw	r1, #25784	; 0x64b8
   2ddc0:	movt	r1, #3
   2ddc4:	mov	r0, r3
   2ddc8:	bl	10eb8 <printf@plt>
   2ddcc:	nop	{0}
   2ddd0:	sub	sp, fp, #4
   2ddd4:	ldr	fp, [sp]
   2ddd8:	add	sp, sp, #4
   2dddc:	pop	{pc}		; (ldr pc, [sp], #4)
   2dde0:	str	fp, [sp, #-8]!
   2dde4:	str	lr, [sp, #4]
   2dde8:	add	fp, sp, #4
   2ddec:	sub	sp, sp, #16
   2ddf0:	str	r0, [fp, #-8]
   2ddf4:	str	r1, [fp, #-12]
   2ddf8:	str	r2, [fp, #-16]
   2ddfc:	ldr	r2, [fp, #-16]
   2de00:	ldr	r1, [fp, #-12]
   2de04:	ldr	r0, [fp, #-8]
   2de08:	bl	2dfc4 <__assert_fail@plt+0x1ce6c>
   2de0c:	mov	r3, r0
   2de10:	mov	r0, r3
   2de14:	sub	sp, fp, #4
   2de18:	ldr	fp, [sp]
   2de1c:	add	sp, sp, #4
   2de20:	pop	{pc}		; (ldr pc, [sp], #4)
   2de24:	str	fp, [sp, #-8]!
   2de28:	str	lr, [sp, #4]
   2de2c:	add	fp, sp, #4
   2de30:	sub	sp, sp, #8
   2de34:	str	r0, [fp, #-8]
   2de38:	ldr	r3, [fp, #-8]
   2de3c:	cmp	r3, #0
   2de40:	bne	2de48 <__assert_fail@plt+0x1ccf0>
   2de44:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2de48:	ldr	r3, [fp, #-8]
   2de4c:	mov	r0, r3
   2de50:	sub	sp, fp, #4
   2de54:	ldr	fp, [sp]
   2de58:	add	sp, sp, #4
   2de5c:	pop	{pc}		; (ldr pc, [sp], #4)
   2de60:	str	fp, [sp, #-8]!
   2de64:	str	lr, [sp, #4]
   2de68:	add	fp, sp, #4
   2de6c:	sub	sp, sp, #8
   2de70:	str	r0, [fp, #-8]
   2de74:	ldr	r0, [fp, #-8]
   2de78:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   2de7c:	mov	r3, r0
   2de80:	mov	r0, r3
   2de84:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2de88:	mov	r3, r0
   2de8c:	mov	r0, r3
   2de90:	sub	sp, fp, #4
   2de94:	ldr	fp, [sp]
   2de98:	add	sp, sp, #4
   2de9c:	pop	{pc}		; (ldr pc, [sp], #4)
   2dea0:	str	fp, [sp, #-8]!
   2dea4:	str	lr, [sp, #4]
   2dea8:	add	fp, sp, #4
   2deac:	sub	sp, sp, #8
   2deb0:	str	r0, [fp, #-8]
   2deb4:	ldr	r0, [fp, #-8]
   2deb8:	bl	2eefc <__assert_fail@plt+0x1dda4>
   2debc:	mov	r3, r0
   2dec0:	mov	r0, r3
   2dec4:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2dec8:	mov	r3, r0
   2decc:	mov	r0, r3
   2ded0:	sub	sp, fp, #4
   2ded4:	ldr	fp, [sp]
   2ded8:	add	sp, sp, #4
   2dedc:	pop	{pc}		; (ldr pc, [sp], #4)
   2dee0:	str	fp, [sp, #-8]!
   2dee4:	str	lr, [sp, #4]
   2dee8:	add	fp, sp, #4
   2deec:	sub	sp, sp, #8
   2def0:	str	r0, [fp, #-8]
   2def4:	ldr	r0, [fp, #-8]
   2def8:	bl	2de60 <__assert_fail@plt+0x1cd08>
   2defc:	mov	r3, r0
   2df00:	mov	r0, r3
   2df04:	sub	sp, fp, #4
   2df08:	ldr	fp, [sp]
   2df0c:	add	sp, sp, #4
   2df10:	pop	{pc}		; (ldr pc, [sp], #4)
   2df14:	str	fp, [sp, #-8]!
   2df18:	str	lr, [sp, #4]
   2df1c:	add	fp, sp, #4
   2df20:	sub	sp, sp, #16
   2df24:	str	r0, [fp, #-16]
   2df28:	str	r1, [fp, #-20]	; 0xffffffec
   2df2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2df30:	ldr	r0, [fp, #-16]
   2df34:	bl	2e9cc <__assert_fail@plt+0x1d874>
   2df38:	str	r0, [fp, #-8]
   2df3c:	ldr	r3, [fp, #-8]
   2df40:	cmp	r3, #0
   2df44:	bne	2df64 <__assert_fail@plt+0x1ce0c>
   2df48:	ldr	r3, [fp, #-16]
   2df4c:	cmp	r3, #0
   2df50:	beq	2df60 <__assert_fail@plt+0x1ce08>
   2df54:	ldr	r3, [fp, #-20]	; 0xffffffec
   2df58:	cmp	r3, #0
   2df5c:	beq	2df64 <__assert_fail@plt+0x1ce0c>
   2df60:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2df64:	ldr	r3, [fp, #-8]
   2df68:	mov	r0, r3
   2df6c:	sub	sp, fp, #4
   2df70:	ldr	fp, [sp]
   2df74:	add	sp, sp, #4
   2df78:	pop	{pc}		; (ldr pc, [sp], #4)
   2df7c:	str	fp, [sp, #-8]!
   2df80:	str	lr, [sp, #4]
   2df84:	add	fp, sp, #4
   2df88:	sub	sp, sp, #8
   2df8c:	str	r0, [fp, #-8]
   2df90:	str	r1, [fp, #-12]
   2df94:	ldr	r1, [fp, #-12]
   2df98:	ldr	r0, [fp, #-8]
   2df9c:	bl	2ef34 <__assert_fail@plt+0x1dddc>
   2dfa0:	mov	r3, r0
   2dfa4:	mov	r0, r3
   2dfa8:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2dfac:	mov	r3, r0
   2dfb0:	mov	r0, r3
   2dfb4:	sub	sp, fp, #4
   2dfb8:	ldr	fp, [sp]
   2dfbc:	add	sp, sp, #4
   2dfc0:	pop	{pc}		; (ldr pc, [sp], #4)
   2dfc4:	str	fp, [sp, #-8]!
   2dfc8:	str	lr, [sp, #4]
   2dfcc:	add	fp, sp, #4
   2dfd0:	sub	sp, sp, #24
   2dfd4:	str	r0, [fp, #-16]
   2dfd8:	str	r1, [fp, #-20]	; 0xffffffec
   2dfdc:	str	r2, [fp, #-24]	; 0xffffffe8
   2dfe0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dfe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2dfe8:	ldr	r0, [fp, #-16]
   2dfec:	bl	30a3c <__assert_fail@plt+0x1f8e4>
   2dff0:	str	r0, [fp, #-8]
   2dff4:	ldr	r3, [fp, #-8]
   2dff8:	cmp	r3, #0
   2dffc:	bne	2e028 <__assert_fail@plt+0x1ced0>
   2e000:	ldr	r3, [fp, #-16]
   2e004:	cmp	r3, #0
   2e008:	beq	2e024 <__assert_fail@plt+0x1cecc>
   2e00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e010:	cmp	r3, #0
   2e014:	beq	2e028 <__assert_fail@plt+0x1ced0>
   2e018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e01c:	cmp	r3, #0
   2e020:	beq	2e028 <__assert_fail@plt+0x1ced0>
   2e024:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e028:	ldr	r3, [fp, #-8]
   2e02c:	mov	r0, r3
   2e030:	sub	sp, fp, #4
   2e034:	ldr	fp, [sp]
   2e038:	add	sp, sp, #4
   2e03c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e040:	str	fp, [sp, #-8]!
   2e044:	str	lr, [sp, #4]
   2e048:	add	fp, sp, #4
   2e04c:	sub	sp, sp, #16
   2e050:	str	r0, [fp, #-8]
   2e054:	str	r1, [fp, #-12]
   2e058:	str	r2, [fp, #-16]
   2e05c:	ldr	r2, [fp, #-16]
   2e060:	ldr	r1, [fp, #-12]
   2e064:	ldr	r0, [fp, #-8]
   2e068:	bl	2efd4 <__assert_fail@plt+0x1de7c>
   2e06c:	mov	r3, r0
   2e070:	mov	r0, r3
   2e074:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2e078:	mov	r3, r0
   2e07c:	mov	r0, r3
   2e080:	sub	sp, fp, #4
   2e084:	ldr	fp, [sp]
   2e088:	add	sp, sp, #4
   2e08c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e090:	str	fp, [sp, #-8]!
   2e094:	str	lr, [sp, #4]
   2e098:	add	fp, sp, #4
   2e09c:	sub	sp, sp, #8
   2e0a0:	str	r0, [fp, #-8]
   2e0a4:	str	r1, [fp, #-12]
   2e0a8:	ldr	r2, [fp, #-12]
   2e0ac:	ldr	r1, [fp, #-8]
   2e0b0:	mov	r0, #0
   2e0b4:	bl	2dfc4 <__assert_fail@plt+0x1ce6c>
   2e0b8:	mov	r3, r0
   2e0bc:	mov	r0, r3
   2e0c0:	sub	sp, fp, #4
   2e0c4:	ldr	fp, [sp]
   2e0c8:	add	sp, sp, #4
   2e0cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0d0:	str	fp, [sp, #-8]!
   2e0d4:	str	lr, [sp, #4]
   2e0d8:	add	fp, sp, #4
   2e0dc:	sub	sp, sp, #8
   2e0e0:	str	r0, [fp, #-8]
   2e0e4:	str	r1, [fp, #-12]
   2e0e8:	ldr	r2, [fp, #-12]
   2e0ec:	ldr	r1, [fp, #-8]
   2e0f0:	mov	r0, #0
   2e0f4:	bl	2e040 <__assert_fail@plt+0x1cee8>
   2e0f8:	mov	r3, r0
   2e0fc:	mov	r0, r3
   2e100:	sub	sp, fp, #4
   2e104:	ldr	fp, [sp]
   2e108:	add	sp, sp, #4
   2e10c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e110:	str	fp, [sp, #-8]!
   2e114:	str	lr, [sp, #4]
   2e118:	add	fp, sp, #4
   2e11c:	sub	sp, sp, #8
   2e120:	str	r0, [fp, #-8]
   2e124:	str	r1, [fp, #-12]
   2e128:	mov	r2, #1
   2e12c:	ldr	r1, [fp, #-12]
   2e130:	ldr	r0, [fp, #-8]
   2e134:	bl	2e150 <__assert_fail@plt+0x1cff8>
   2e138:	mov	r3, r0
   2e13c:	mov	r0, r3
   2e140:	sub	sp, fp, #4
   2e144:	ldr	fp, [sp]
   2e148:	add	sp, sp, #4
   2e14c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e150:	str	fp, [sp, #-8]!
   2e154:	str	lr, [sp, #4]
   2e158:	add	fp, sp, #4
   2e15c:	sub	sp, sp, #24
   2e160:	str	r0, [fp, #-16]
   2e164:	str	r1, [fp, #-20]	; 0xffffffec
   2e168:	str	r2, [fp, #-24]	; 0xffffffe8
   2e16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e170:	ldr	r3, [r3]
   2e174:	str	r3, [fp, #-8]
   2e178:	ldr	r3, [fp, #-16]
   2e17c:	cmp	r3, #0
   2e180:	bne	2e1c8 <__assert_fail@plt+0x1d070>
   2e184:	ldr	r3, [fp, #-8]
   2e188:	cmp	r3, #0
   2e18c:	bne	2e204 <__assert_fail@plt+0x1d0ac>
   2e190:	mov	r2, #64	; 0x40
   2e194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e198:	udiv	r3, r2, r3
   2e19c:	str	r3, [fp, #-8]
   2e1a0:	ldr	r3, [fp, #-8]
   2e1a4:	cmp	r3, #0
   2e1a8:	moveq	r3, #1
   2e1ac:	movne	r3, #0
   2e1b0:	uxtb	r3, r3
   2e1b4:	mov	r2, r3
   2e1b8:	ldr	r3, [fp, #-8]
   2e1bc:	add	r3, r2, r3
   2e1c0:	str	r3, [fp, #-8]
   2e1c4:	b	2e204 <__assert_fail@plt+0x1d0ac>
   2e1c8:	ldr	r2, [fp, #-8]
   2e1cc:	ldr	r3, [fp, #-8]
   2e1d0:	lsr	r3, r3, #1
   2e1d4:	add	r3, r3, #1
   2e1d8:	mov	r1, #0
   2e1dc:	adds	r3, r2, r3
   2e1e0:	bcc	2e1e8 <__assert_fail@plt+0x1d090>
   2e1e4:	mov	r1, #1
   2e1e8:	str	r3, [fp, #-8]
   2e1ec:	mov	r3, r1
   2e1f0:	and	r3, r3, #1
   2e1f4:	uxtb	r3, r3
   2e1f8:	cmp	r3, #0
   2e1fc:	beq	2e204 <__assert_fail@plt+0x1d0ac>
   2e200:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e204:	ldr	r3, [fp, #-8]
   2e208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e20c:	mov	r1, r3
   2e210:	ldr	r0, [fp, #-16]
   2e214:	bl	2dfc4 <__assert_fail@plt+0x1ce6c>
   2e218:	str	r0, [fp, #-16]
   2e21c:	ldr	r2, [fp, #-8]
   2e220:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e224:	str	r2, [r3]
   2e228:	ldr	r3, [fp, #-16]
   2e22c:	mov	r0, r3
   2e230:	sub	sp, fp, #4
   2e234:	ldr	fp, [sp]
   2e238:	add	sp, sp, #4
   2e23c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e240:	str	fp, [sp, #-8]!
   2e244:	str	lr, [sp, #4]
   2e248:	add	fp, sp, #4
   2e24c:	sub	sp, sp, #32
   2e250:	str	r0, [fp, #-24]	; 0xffffffe8
   2e254:	str	r1, [fp, #-28]	; 0xffffffe4
   2e258:	str	r2, [fp, #-32]	; 0xffffffe0
   2e25c:	str	r3, [fp, #-36]	; 0xffffffdc
   2e260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e264:	ldr	r3, [r3]
   2e268:	str	r3, [fp, #-8]
   2e26c:	ldr	r3, [fp, #-8]
   2e270:	asr	r3, r3, #1
   2e274:	mov	r1, #0
   2e278:	ldr	r2, [fp, #-8]
   2e27c:	adds	r3, r2, r3
   2e280:	bvc	2e288 <__assert_fail@plt+0x1d130>
   2e284:	mov	r1, #1
   2e288:	str	r3, [fp, #-16]
   2e28c:	mov	r3, r1
   2e290:	and	r3, r3, #1
   2e294:	uxtb	r3, r3
   2e298:	cmp	r3, #0
   2e29c:	beq	2e2a8 <__assert_fail@plt+0x1d150>
   2e2a0:	mvn	r3, #-2147483648	; 0x80000000
   2e2a4:	str	r3, [fp, #-16]
   2e2a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e2ac:	cmp	r3, #0
   2e2b0:	blt	2e2cc <__assert_fail@plt+0x1d174>
   2e2b4:	ldr	r3, [fp, #-16]
   2e2b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e2bc:	cmp	r2, r3
   2e2c0:	bge	2e2cc <__assert_fail@plt+0x1d174>
   2e2c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e2c8:	str	r3, [fp, #-16]
   2e2cc:	ldr	r2, [fp, #-16]
   2e2d0:	mov	lr, #0
   2e2d4:	ldr	r3, [fp, #4]
   2e2d8:	smull	r2, r3, r2, r3
   2e2dc:	mov	r0, #0
   2e2e0:	mov	r1, #0
   2e2e4:	mov	r0, r3
   2e2e8:	asr	r1, r3, #31
   2e2ec:	asr	ip, r2, #31
   2e2f0:	cmp	ip, r0
   2e2f4:	beq	2e2fc <__assert_fail@plt+0x1d1a4>
   2e2f8:	mov	lr, #1
   2e2fc:	mov	r3, r2
   2e300:	str	r3, [fp, #-20]	; 0xffffffec
   2e304:	mov	r3, lr
   2e308:	and	r3, r3, #1
   2e30c:	uxtb	r3, r3
   2e310:	cmp	r3, #0
   2e314:	beq	2e320 <__assert_fail@plt+0x1d1c8>
   2e318:	mvn	r3, #-2147483648	; 0x80000000
   2e31c:	b	2e338 <__assert_fail@plt+0x1d1e0>
   2e320:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e324:	cmp	r3, #63	; 0x3f
   2e328:	bgt	2e334 <__assert_fail@plt+0x1d1dc>
   2e32c:	mov	r3, #64	; 0x40
   2e330:	b	2e338 <__assert_fail@plt+0x1d1e0>
   2e334:	mov	r3, #0
   2e338:	str	r3, [fp, #-12]
   2e33c:	ldr	r3, [fp, #-12]
   2e340:	cmp	r3, #0
   2e344:	beq	2e37c <__assert_fail@plt+0x1d224>
   2e348:	ldr	r2, [fp, #-12]
   2e34c:	ldr	r3, [fp, #4]
   2e350:	sdiv	r3, r2, r3
   2e354:	str	r3, [fp, #-16]
   2e358:	ldr	r3, [fp, #-12]
   2e35c:	ldr	r2, [fp, #4]
   2e360:	sdiv	r2, r3, r2
   2e364:	ldr	r1, [fp, #4]
   2e368:	mul	r2, r1, r2
   2e36c:	sub	r3, r3, r2
   2e370:	ldr	r2, [fp, #-12]
   2e374:	sub	r3, r2, r3
   2e378:	str	r3, [fp, #-20]	; 0xffffffec
   2e37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e380:	cmp	r3, #0
   2e384:	bne	2e394 <__assert_fail@plt+0x1d23c>
   2e388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e38c:	mov	r2, #0
   2e390:	str	r2, [r3]
   2e394:	ldr	r2, [fp, #-16]
   2e398:	ldr	r3, [fp, #-8]
   2e39c:	sub	r3, r2, r3
   2e3a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e3a4:	cmp	r2, r3
   2e3a8:	ble	2e448 <__assert_fail@plt+0x1d2f0>
   2e3ac:	mov	r1, #0
   2e3b0:	ldr	r2, [fp, #-8]
   2e3b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e3b8:	adds	r3, r2, r3
   2e3bc:	bvc	2e3c4 <__assert_fail@plt+0x1d26c>
   2e3c0:	mov	r1, #1
   2e3c4:	str	r3, [fp, #-16]
   2e3c8:	mov	r3, r1
   2e3cc:	and	r3, r3, #1
   2e3d0:	uxtb	r3, r3
   2e3d4:	cmp	r3, #0
   2e3d8:	bne	2e444 <__assert_fail@plt+0x1d2ec>
   2e3dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e3e0:	cmp	r3, #0
   2e3e4:	blt	2e3f8 <__assert_fail@plt+0x1d2a0>
   2e3e8:	ldr	r3, [fp, #-16]
   2e3ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e3f0:	cmp	r2, r3
   2e3f4:	blt	2e444 <__assert_fail@plt+0x1d2ec>
   2e3f8:	ldr	r2, [fp, #-16]
   2e3fc:	mov	lr, #0
   2e400:	ldr	r3, [fp, #4]
   2e404:	smull	r2, r3, r2, r3
   2e408:	mov	r0, #0
   2e40c:	mov	r1, #0
   2e410:	mov	r0, r3
   2e414:	asr	r1, r3, #31
   2e418:	asr	ip, r2, #31
   2e41c:	cmp	ip, r0
   2e420:	beq	2e428 <__assert_fail@plt+0x1d2d0>
   2e424:	mov	lr, #1
   2e428:	mov	r3, r2
   2e42c:	str	r3, [fp, #-20]	; 0xffffffec
   2e430:	mov	r3, lr
   2e434:	and	r3, r3, #1
   2e438:	uxtb	r3, r3
   2e43c:	cmp	r3, #0
   2e440:	beq	2e448 <__assert_fail@plt+0x1d2f0>
   2e444:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e448:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e44c:	mov	r1, r3
   2e450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e454:	bl	2df14 <__assert_fail@plt+0x1cdbc>
   2e458:	str	r0, [fp, #-24]	; 0xffffffe8
   2e45c:	ldr	r2, [fp, #-16]
   2e460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e464:	str	r2, [r3]
   2e468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e46c:	mov	r0, r3
   2e470:	sub	sp, fp, #4
   2e474:	ldr	fp, [sp]
   2e478:	add	sp, sp, #4
   2e47c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e480:	str	fp, [sp, #-8]!
   2e484:	str	lr, [sp, #4]
   2e488:	add	fp, sp, #4
   2e48c:	sub	sp, sp, #8
   2e490:	str	r0, [fp, #-8]
   2e494:	mov	r1, #1
   2e498:	ldr	r0, [fp, #-8]
   2e49c:	bl	2e4f0 <__assert_fail@plt+0x1d398>
   2e4a0:	mov	r3, r0
   2e4a4:	mov	r0, r3
   2e4a8:	sub	sp, fp, #4
   2e4ac:	ldr	fp, [sp]
   2e4b0:	add	sp, sp, #4
   2e4b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4b8:	str	fp, [sp, #-8]!
   2e4bc:	str	lr, [sp, #4]
   2e4c0:	add	fp, sp, #4
   2e4c4:	sub	sp, sp, #8
   2e4c8:	str	r0, [fp, #-8]
   2e4cc:	mov	r1, #1
   2e4d0:	ldr	r0, [fp, #-8]
   2e4d4:	bl	2e538 <__assert_fail@plt+0x1d3e0>
   2e4d8:	mov	r3, r0
   2e4dc:	mov	r0, r3
   2e4e0:	sub	sp, fp, #4
   2e4e4:	ldr	fp, [sp]
   2e4e8:	add	sp, sp, #4
   2e4ec:	pop	{pc}		; (ldr pc, [sp], #4)
   2e4f0:	str	fp, [sp, #-8]!
   2e4f4:	str	lr, [sp, #4]
   2e4f8:	add	fp, sp, #4
   2e4fc:	sub	sp, sp, #8
   2e500:	str	r0, [fp, #-8]
   2e504:	str	r1, [fp, #-12]
   2e508:	ldr	r1, [fp, #-12]
   2e50c:	ldr	r0, [fp, #-8]
   2e510:	bl	2e86c <__assert_fail@plt+0x1d714>
   2e514:	mov	r3, r0
   2e518:	mov	r0, r3
   2e51c:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2e520:	mov	r3, r0
   2e524:	mov	r0, r3
   2e528:	sub	sp, fp, #4
   2e52c:	ldr	fp, [sp]
   2e530:	add	sp, sp, #4
   2e534:	pop	{pc}		; (ldr pc, [sp], #4)
   2e538:	str	fp, [sp, #-8]!
   2e53c:	str	lr, [sp, #4]
   2e540:	add	fp, sp, #4
   2e544:	sub	sp, sp, #8
   2e548:	str	r0, [fp, #-8]
   2e54c:	str	r1, [fp, #-12]
   2e550:	ldr	r1, [fp, #-12]
   2e554:	ldr	r0, [fp, #-8]
   2e558:	bl	2ef90 <__assert_fail@plt+0x1de38>
   2e55c:	mov	r3, r0
   2e560:	mov	r0, r3
   2e564:	bl	2de24 <__assert_fail@plt+0x1cccc>
   2e568:	mov	r3, r0
   2e56c:	mov	r0, r3
   2e570:	sub	sp, fp, #4
   2e574:	ldr	fp, [sp]
   2e578:	add	sp, sp, #4
   2e57c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e580:	str	fp, [sp, #-8]!
   2e584:	str	lr, [sp, #4]
   2e588:	add	fp, sp, #4
   2e58c:	sub	sp, sp, #8
   2e590:	str	r0, [fp, #-8]
   2e594:	str	r1, [fp, #-12]
   2e598:	ldr	r0, [fp, #-12]
   2e59c:	bl	2de60 <__assert_fail@plt+0x1cd08>
   2e5a0:	mov	r3, r0
   2e5a4:	ldr	r2, [fp, #-12]
   2e5a8:	ldr	r1, [fp, #-8]
   2e5ac:	mov	r0, r3
   2e5b0:	bl	10f00 <memcpy@plt>
   2e5b4:	mov	r3, r0
   2e5b8:	mov	r0, r3
   2e5bc:	sub	sp, fp, #4
   2e5c0:	ldr	fp, [sp]
   2e5c4:	add	sp, sp, #4
   2e5c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2e5cc:	str	fp, [sp, #-8]!
   2e5d0:	str	lr, [sp, #4]
   2e5d4:	add	fp, sp, #4
   2e5d8:	sub	sp, sp, #8
   2e5dc:	str	r0, [fp, #-8]
   2e5e0:	str	r1, [fp, #-12]
   2e5e4:	ldr	r0, [fp, #-12]
   2e5e8:	bl	2dea0 <__assert_fail@plt+0x1cd48>
   2e5ec:	mov	r3, r0
   2e5f0:	mov	r0, r3
   2e5f4:	ldr	r3, [fp, #-12]
   2e5f8:	mov	r2, r3
   2e5fc:	ldr	r1, [fp, #-8]
   2e600:	bl	10f00 <memcpy@plt>
   2e604:	mov	r3, r0
   2e608:	mov	r0, r3
   2e60c:	sub	sp, fp, #4
   2e610:	ldr	fp, [sp]
   2e614:	add	sp, sp, #4
   2e618:	pop	{pc}		; (ldr pc, [sp], #4)
   2e61c:	str	fp, [sp, #-8]!
   2e620:	str	lr, [sp, #4]
   2e624:	add	fp, sp, #4
   2e628:	sub	sp, sp, #16
   2e62c:	str	r0, [fp, #-16]
   2e630:	str	r1, [fp, #-20]	; 0xffffffec
   2e634:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e638:	add	r3, r3, #1
   2e63c:	mov	r0, r3
   2e640:	bl	2dea0 <__assert_fail@plt+0x1cd48>
   2e644:	mov	r3, r0
   2e648:	str	r3, [fp, #-8]
   2e64c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e650:	ldr	r2, [fp, #-8]
   2e654:	add	r3, r2, r3
   2e658:	mov	r2, #0
   2e65c:	strb	r2, [r3]
   2e660:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e664:	mov	r2, r3
   2e668:	ldr	r1, [fp, #-16]
   2e66c:	ldr	r0, [fp, #-8]
   2e670:	bl	10f00 <memcpy@plt>
   2e674:	mov	r3, r0
   2e678:	mov	r0, r3
   2e67c:	sub	sp, fp, #4
   2e680:	ldr	fp, [sp]
   2e684:	add	sp, sp, #4
   2e688:	pop	{pc}		; (ldr pc, [sp], #4)
   2e68c:	str	fp, [sp, #-8]!
   2e690:	str	lr, [sp, #4]
   2e694:	add	fp, sp, #4
   2e698:	sub	sp, sp, #8
   2e69c:	str	r0, [fp, #-8]
   2e6a0:	ldr	r0, [fp, #-8]
   2e6a4:	bl	11050 <strlen@plt>
   2e6a8:	mov	r3, r0
   2e6ac:	add	r3, r3, #1
   2e6b0:	mov	r1, r3
   2e6b4:	ldr	r0, [fp, #-8]
   2e6b8:	bl	2e580 <__assert_fail@plt+0x1d428>
   2e6bc:	mov	r3, r0
   2e6c0:	mov	r0, r3
   2e6c4:	sub	sp, fp, #4
   2e6c8:	ldr	fp, [sp]
   2e6cc:	add	sp, sp, #4
   2e6d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e6d4:	strd	r4, [sp, #-16]!
   2e6d8:	str	fp, [sp, #8]
   2e6dc:	str	lr, [sp, #12]
   2e6e0:	add	fp, sp, #12
   2e6e4:	movw	r3, #28960	; 0x7120
   2e6e8:	movt	r3, #4
   2e6ec:	ldr	r4, [r3]
   2e6f0:	movw	r0, #25864	; 0x6508
   2e6f4:	movt	r0, #3
   2e6f8:	bl	11044 <gettext@plt>
   2e6fc:	mov	r3, r0
   2e700:	movw	r2, #25884	; 0x651c
   2e704:	movt	r2, #3
   2e708:	mov	r1, #0
   2e70c:	mov	r0, r4
   2e710:	bl	10fcc <error@plt>
   2e714:	bl	11140 <abort@plt>
   2e718:	str	fp, [sp, #-8]!
   2e71c:	str	lr, [sp, #4]
   2e720:	add	fp, sp, #4
   2e724:	sub	sp, sp, #32
   2e728:	str	r0, [fp, #-16]
   2e72c:	str	r1, [fp, #-20]	; 0xffffffec
   2e730:	str	r2, [fp, #-24]	; 0xffffffe8
   2e734:	str	r3, [fp, #-28]	; 0xffffffe4
   2e738:	ldr	r3, [fp, #4]
   2e73c:	str	r3, [sp]
   2e740:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e744:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e748:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e74c:	ldr	r0, [fp, #-16]
   2e750:	bl	30ae0 <__assert_fail@plt+0x1f988>
   2e754:	str	r0, [fp, #-8]
   2e758:	ldr	r3, [fp, #-8]
   2e75c:	cmp	r3, #0
   2e760:	bge	2e77c <__assert_fail@plt+0x1d624>
   2e764:	bl	11074 <__errno_location@plt>
   2e768:	mov	r3, r0
   2e76c:	ldr	r3, [r3]
   2e770:	cmp	r3, #12
   2e774:	bne	2e77c <__assert_fail@plt+0x1d624>
   2e778:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e77c:	ldr	r3, [fp, #-8]
   2e780:	mov	r0, r3
   2e784:	sub	sp, fp, #4
   2e788:	ldr	fp, [sp]
   2e78c:	add	sp, sp, #4
   2e790:	pop	{pc}		; (ldr pc, [sp], #4)
   2e794:	str	fp, [sp, #-8]!
   2e798:	str	lr, [sp, #4]
   2e79c:	add	fp, sp, #4
   2e7a0:	sub	sp, sp, #16
   2e7a4:	str	r0, [fp, #-16]
   2e7a8:	str	r1, [fp, #-20]	; 0xffffffec
   2e7ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e7b0:	ldr	r0, [fp, #-16]
   2e7b4:	bl	30ecc <__assert_fail@plt+0x1fd74>
   2e7b8:	mov	r3, r0
   2e7bc:	str	r3, [fp, #-8]
   2e7c0:	ldr	r3, [fp, #-8]
   2e7c4:	cmp	r3, #0
   2e7c8:	bne	2e7e4 <__assert_fail@plt+0x1d68c>
   2e7cc:	bl	11074 <__errno_location@plt>
   2e7d0:	mov	r3, r0
   2e7d4:	ldr	r3, [r3]
   2e7d8:	cmp	r3, #12
   2e7dc:	bne	2e7e4 <__assert_fail@plt+0x1d68c>
   2e7e0:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e7e4:	ldr	r3, [fp, #-8]
   2e7e8:	mov	r0, r3
   2e7ec:	sub	sp, fp, #4
   2e7f0:	ldr	fp, [sp]
   2e7f4:	add	sp, sp, #4
   2e7f8:	pop	{pc}		; (ldr pc, [sp], #4)
   2e7fc:	str	fp, [sp, #-8]!
   2e800:	str	lr, [sp, #4]
   2e804:	add	fp, sp, #4
   2e808:	sub	sp, sp, #24
   2e80c:	str	r0, [fp, #-16]
   2e810:	str	r1, [fp, #-20]	; 0xffffffec
   2e814:	str	r2, [fp, #-24]	; 0xffffffe8
   2e818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e81c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e820:	ldr	r0, [fp, #-16]
   2e824:	bl	31228 <__assert_fail@plt+0x200d0>
   2e828:	mov	r3, r0
   2e82c:	str	r3, [fp, #-8]
   2e830:	ldr	r3, [fp, #-8]
   2e834:	cmp	r3, #0
   2e838:	bne	2e854 <__assert_fail@plt+0x1d6fc>
   2e83c:	bl	11074 <__errno_location@plt>
   2e840:	mov	r3, r0
   2e844:	ldr	r3, [r3]
   2e848:	cmp	r3, #12
   2e84c:	bne	2e854 <__assert_fail@plt+0x1d6fc>
   2e850:	bl	2e6d4 <__assert_fail@plt+0x1d57c>
   2e854:	ldr	r3, [fp, #-8]
   2e858:	mov	r0, r3
   2e85c:	sub	sp, fp, #4
   2e860:	ldr	fp, [sp]
   2e864:	add	sp, sp, #4
   2e868:	pop	{pc}		; (ldr pc, [sp], #4)
   2e86c:	str	fp, [sp, #-8]!
   2e870:	str	lr, [sp, #4]
   2e874:	add	fp, sp, #4
   2e878:	sub	sp, sp, #16
   2e87c:	str	r0, [fp, #-16]
   2e880:	str	r1, [fp, #-20]	; 0xffffffec
   2e884:	ldr	r3, [fp, #-16]
   2e888:	cmp	r3, #0
   2e88c:	beq	2e89c <__assert_fail@plt+0x1d744>
   2e890:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e894:	cmp	r3, #0
   2e898:	bne	2e8ac <__assert_fail@plt+0x1d754>
   2e89c:	mov	r3, #1
   2e8a0:	str	r3, [fp, #-20]	; 0xffffffec
   2e8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8a8:	str	r3, [fp, #-16]
   2e8ac:	mov	ip, #0
   2e8b0:	ldr	r2, [fp, #-16]
   2e8b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8b8:	umull	r0, r1, r2, r3
   2e8bc:	mov	r2, #0
   2e8c0:	mov	r3, #0
   2e8c4:	mov	r2, r1
   2e8c8:	mov	r3, #0
   2e8cc:	cmp	r2, #0
   2e8d0:	beq	2e8d8 <__assert_fail@plt+0x1d780>
   2e8d4:	mov	ip, #1
   2e8d8:	cmp	r0, #0
   2e8dc:	bge	2e8e4 <__assert_fail@plt+0x1d78c>
   2e8e0:	mov	ip, #1
   2e8e4:	mov	r3, ip
   2e8e8:	and	r3, r3, #1
   2e8ec:	uxtb	r3, r3
   2e8f0:	cmp	r3, #0
   2e8f4:	beq	2e910 <__assert_fail@plt+0x1d7b8>
   2e8f8:	bl	11074 <__errno_location@plt>
   2e8fc:	mov	r2, r0
   2e900:	mov	r3, #12
   2e904:	str	r3, [r2]
   2e908:	mov	r3, #0
   2e90c:	b	2e928 <__assert_fail@plt+0x1d7d0>
   2e910:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e914:	ldr	r0, [fp, #-16]
   2e918:	bl	10e70 <calloc@plt>
   2e91c:	mov	r3, r0
   2e920:	str	r3, [fp, #-8]
   2e924:	ldr	r3, [fp, #-8]
   2e928:	mov	r0, r3
   2e92c:	sub	sp, fp, #4
   2e930:	ldr	fp, [sp]
   2e934:	add	sp, sp, #4
   2e938:	pop	{pc}		; (ldr pc, [sp], #4)
   2e93c:	str	fp, [sp, #-8]!
   2e940:	str	lr, [sp, #4]
   2e944:	add	fp, sp, #4
   2e948:	sub	sp, sp, #16
   2e94c:	str	r0, [fp, #-16]
   2e950:	ldr	r3, [fp, #-16]
   2e954:	cmp	r3, #0
   2e958:	bne	2e964 <__assert_fail@plt+0x1d80c>
   2e95c:	mov	r3, #1
   2e960:	str	r3, [fp, #-16]
   2e964:	mov	r2, #0
   2e968:	ldr	r3, [fp, #-16]
   2e96c:	cmp	r3, #0
   2e970:	bge	2e978 <__assert_fail@plt+0x1d820>
   2e974:	mov	r2, #1
   2e978:	mov	r3, r2
   2e97c:	and	r3, r3, #1
   2e980:	uxtb	r3, r3
   2e984:	cmp	r3, #0
   2e988:	beq	2e9a4 <__assert_fail@plt+0x1d84c>
   2e98c:	bl	11074 <__errno_location@plt>
   2e990:	mov	r2, r0
   2e994:	mov	r3, #12
   2e998:	str	r3, [r2]
   2e99c:	mov	r3, #0
   2e9a0:	b	2e9b8 <__assert_fail@plt+0x1d860>
   2e9a4:	ldr	r0, [fp, #-16]
   2e9a8:	bl	10fd8 <malloc@plt>
   2e9ac:	mov	r3, r0
   2e9b0:	str	r3, [fp, #-8]
   2e9b4:	ldr	r3, [fp, #-8]
   2e9b8:	mov	r0, r3
   2e9bc:	sub	sp, fp, #4
   2e9c0:	ldr	fp, [sp]
   2e9c4:	add	sp, sp, #4
   2e9c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2e9cc:	str	fp, [sp, #-8]!
   2e9d0:	str	lr, [sp, #4]
   2e9d4:	add	fp, sp, #4
   2e9d8:	sub	sp, sp, #16
   2e9dc:	str	r0, [fp, #-16]
   2e9e0:	str	r1, [fp, #-20]	; 0xffffffec
   2e9e4:	ldr	r3, [fp, #-16]
   2e9e8:	cmp	r3, #0
   2e9ec:	bne	2ea00 <__assert_fail@plt+0x1d8a8>
   2e9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e9f4:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   2e9f8:	mov	r3, r0
   2e9fc:	b	2ea70 <__assert_fail@plt+0x1d918>
   2ea00:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea04:	cmp	r3, #0
   2ea08:	bne	2ea1c <__assert_fail@plt+0x1d8c4>
   2ea0c:	ldr	r0, [fp, #-16]
   2ea10:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   2ea14:	mov	r3, #0
   2ea18:	b	2ea70 <__assert_fail@plt+0x1d918>
   2ea1c:	mov	r2, #0
   2ea20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea24:	cmp	r3, #0
   2ea28:	bge	2ea30 <__assert_fail@plt+0x1d8d8>
   2ea2c:	mov	r2, #1
   2ea30:	mov	r3, r2
   2ea34:	and	r3, r3, #1
   2ea38:	uxtb	r3, r3
   2ea3c:	cmp	r3, #0
   2ea40:	beq	2ea5c <__assert_fail@plt+0x1d904>
   2ea44:	bl	11074 <__errno_location@plt>
   2ea48:	mov	r2, r0
   2ea4c:	mov	r3, #12
   2ea50:	str	r3, [r2]
   2ea54:	mov	r3, #0
   2ea58:	b	2ea70 <__assert_fail@plt+0x1d918>
   2ea5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ea60:	ldr	r0, [fp, #-16]
   2ea64:	bl	10f48 <realloc@plt>
   2ea68:	str	r0, [fp, #-8]
   2ea6c:	ldr	r3, [fp, #-8]
   2ea70:	mov	r0, r3
   2ea74:	sub	sp, fp, #4
   2ea78:	ldr	fp, [sp]
   2ea7c:	add	sp, sp, #4
   2ea80:	pop	{pc}		; (ldr pc, [sp], #4)
   2ea84:	strd	r4, [sp, #-16]!
   2ea88:	str	fp, [sp, #8]
   2ea8c:	str	lr, [sp, #12]
   2ea90:	add	fp, sp, #12
   2ea94:	sub	sp, sp, #16
   2ea98:	str	r0, [fp, #-24]	; 0xffffffe8
   2ea9c:	str	r1, [fp, #-28]	; 0xffffffe4
   2eaa0:	ldr	r5, [fp, #-24]	; 0xffffffe8
   2eaa4:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2eaa8:	cmp	r5, r4
   2eaac:	bne	2eab8 <__assert_fail@plt+0x1d960>
   2eab0:	mov	r3, #0
   2eab4:	b	2eb18 <__assert_fail@plt+0x1d9c0>
   2eab8:	ldrb	r3, [r5]
   2eabc:	mov	r0, r3
   2eac0:	bl	31858 <__assert_fail@plt+0x20700>
   2eac4:	mov	r3, r0
   2eac8:	strb	r3, [fp, #-13]
   2eacc:	ldrb	r3, [r4]
   2ead0:	mov	r0, r3
   2ead4:	bl	31858 <__assert_fail@plt+0x20700>
   2ead8:	mov	r3, r0
   2eadc:	strb	r3, [fp, #-14]
   2eae0:	ldrb	r3, [fp, #-13]
   2eae4:	cmp	r3, #0
   2eae8:	beq	2eb08 <__assert_fail@plt+0x1d9b0>
   2eaec:	add	r5, r5, #1
   2eaf0:	add	r4, r4, #1
   2eaf4:	ldrb	r2, [fp, #-13]
   2eaf8:	ldrb	r3, [fp, #-14]
   2eafc:	cmp	r2, r3
   2eb00:	beq	2eab8 <__assert_fail@plt+0x1d960>
   2eb04:	b	2eb0c <__assert_fail@plt+0x1d9b4>
   2eb08:	nop	{0}
   2eb0c:	ldrb	r2, [fp, #-13]
   2eb10:	ldrb	r3, [fp, #-14]
   2eb14:	sub	r3, r2, r3
   2eb18:	mov	r0, r3
   2eb1c:	sub	sp, fp, #12
   2eb20:	ldrd	r4, [sp]
   2eb24:	ldr	fp, [sp, #8]
   2eb28:	add	sp, sp, #12
   2eb2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2eb30:	str	fp, [sp, #-8]!
   2eb34:	str	lr, [sp, #4]
   2eb38:	add	fp, sp, #4
   2eb3c:	sub	sp, sp, #16
   2eb40:	str	r0, [fp, #-16]
   2eb44:	ldr	r0, [fp, #-16]
   2eb48:	bl	10fa8 <__fpending@plt>
   2eb4c:	mov	r3, r0
   2eb50:	cmp	r3, #0
   2eb54:	movne	r3, #1
   2eb58:	moveq	r3, #0
   2eb5c:	strb	r3, [fp, #-5]
   2eb60:	ldr	r0, [fp, #-16]
   2eb64:	bl	10fb4 <ferror_unlocked@plt>
   2eb68:	mov	r3, r0
   2eb6c:	cmp	r3, #0
   2eb70:	movne	r3, #1
   2eb74:	moveq	r3, #0
   2eb78:	strb	r3, [fp, #-6]
   2eb7c:	ldr	r0, [fp, #-16]
   2eb80:	bl	2ec14 <__assert_fail@plt+0x1dabc>
   2eb84:	mov	r3, r0
   2eb88:	cmp	r3, #0
   2eb8c:	movne	r3, #1
   2eb90:	moveq	r3, #0
   2eb94:	strb	r3, [fp, #-7]
   2eb98:	ldrb	r3, [fp, #-6]
   2eb9c:	cmp	r3, #0
   2eba0:	bne	2ebd0 <__assert_fail@plt+0x1da78>
   2eba4:	ldrb	r3, [fp, #-7]
   2eba8:	cmp	r3, #0
   2ebac:	beq	2ebfc <__assert_fail@plt+0x1daa4>
   2ebb0:	ldrb	r3, [fp, #-5]
   2ebb4:	cmp	r3, #0
   2ebb8:	bne	2ebd0 <__assert_fail@plt+0x1da78>
   2ebbc:	bl	11074 <__errno_location@plt>
   2ebc0:	mov	r3, r0
   2ebc4:	ldr	r3, [r3]
   2ebc8:	cmp	r3, #9
   2ebcc:	beq	2ebfc <__assert_fail@plt+0x1daa4>
   2ebd0:	ldrb	r3, [fp, #-7]
   2ebd4:	eor	r3, r3, #1
   2ebd8:	uxtb	r3, r3
   2ebdc:	cmp	r3, #0
   2ebe0:	beq	2ebf4 <__assert_fail@plt+0x1da9c>
   2ebe4:	bl	11074 <__errno_location@plt>
   2ebe8:	mov	r2, r0
   2ebec:	mov	r3, #0
   2ebf0:	str	r3, [r2]
   2ebf4:	mvn	r3, #0
   2ebf8:	b	2ec00 <__assert_fail@plt+0x1daa8>
   2ebfc:	mov	r3, #0
   2ec00:	mov	r0, r3
   2ec04:	sub	sp, fp, #4
   2ec08:	ldr	fp, [sp]
   2ec0c:	add	sp, sp, #4
   2ec10:	pop	{pc}		; (ldr pc, [sp], #4)
   2ec14:	str	fp, [sp, #-8]!
   2ec18:	str	lr, [sp, #4]
   2ec1c:	add	fp, sp, #4
   2ec20:	sub	sp, sp, #32
   2ec24:	str	r0, [fp, #-24]	; 0xffffffe8
   2ec28:	mov	r3, #0
   2ec2c:	str	r3, [fp, #-8]
   2ec30:	mov	r3, #0
   2ec34:	str	r3, [fp, #-12]
   2ec38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec3c:	bl	110b0 <fileno@plt>
   2ec40:	str	r0, [fp, #-16]
   2ec44:	ldr	r3, [fp, #-16]
   2ec48:	cmp	r3, #0
   2ec4c:	bge	2ec60 <__assert_fail@plt+0x1db08>
   2ec50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec54:	bl	110c8 <fclose@plt>
   2ec58:	mov	r3, r0
   2ec5c:	b	2ed04 <__assert_fail@plt+0x1dbac>
   2ec60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec64:	bl	10ffc <__freading@plt>
   2ec68:	mov	r3, r0
   2ec6c:	cmp	r3, #0
   2ec70:	beq	2ecac <__assert_fail@plt+0x1db54>
   2ec74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec78:	bl	110b0 <fileno@plt>
   2ec7c:	mov	r1, r0
   2ec80:	mov	r3, #1
   2ec84:	str	r3, [sp]
   2ec88:	mov	r2, #0
   2ec8c:	mov	r3, #0
   2ec90:	mov	r0, r1
   2ec94:	bl	10f90 <lseek64@plt>
   2ec98:	mvn	r2, #0
   2ec9c:	mvn	r3, #0
   2eca0:	cmp	r1, r3
   2eca4:	cmpeq	r0, r2
   2eca8:	beq	2ecd0 <__assert_fail@plt+0x1db78>
   2ecac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecb0:	bl	2ed6c <__assert_fail@plt+0x1dc14>
   2ecb4:	mov	r3, r0
   2ecb8:	cmp	r3, #0
   2ecbc:	beq	2ecd0 <__assert_fail@plt+0x1db78>
   2ecc0:	bl	11074 <__errno_location@plt>
   2ecc4:	mov	r3, r0
   2ecc8:	ldr	r3, [r3]
   2eccc:	str	r3, [fp, #-8]
   2ecd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ecd4:	bl	110c8 <fclose@plt>
   2ecd8:	str	r0, [fp, #-12]
   2ecdc:	ldr	r3, [fp, #-8]
   2ece0:	cmp	r3, #0
   2ece4:	beq	2ed00 <__assert_fail@plt+0x1dba8>
   2ece8:	bl	11074 <__errno_location@plt>
   2ecec:	mov	r2, r0
   2ecf0:	ldr	r3, [fp, #-8]
   2ecf4:	str	r3, [r2]
   2ecf8:	mvn	r3, #0
   2ecfc:	str	r3, [fp, #-12]
   2ed00:	ldr	r3, [fp, #-12]
   2ed04:	mov	r0, r3
   2ed08:	sub	sp, fp, #4
   2ed0c:	ldr	fp, [sp]
   2ed10:	add	sp, sp, #4
   2ed14:	pop	{pc}		; (ldr pc, [sp], #4)
   2ed18:	str	fp, [sp, #-8]!
   2ed1c:	str	lr, [sp, #4]
   2ed20:	add	fp, sp, #4
   2ed24:	sub	sp, sp, #16
   2ed28:	str	r0, [fp, #-8]
   2ed2c:	ldr	r3, [fp, #-8]
   2ed30:	ldr	r3, [r3]
   2ed34:	and	r3, r3, #256	; 0x100
   2ed38:	cmp	r3, #0
   2ed3c:	beq	2ed58 <__assert_fail@plt+0x1dc00>
   2ed40:	mov	r3, #1
   2ed44:	str	r3, [sp]
   2ed48:	mov	r2, #0
   2ed4c:	mov	r3, #0
   2ed50:	ldr	r0, [fp, #-8]
   2ed54:	bl	2edd8 <__assert_fail@plt+0x1dc80>
   2ed58:	nop	{0}
   2ed5c:	sub	sp, fp, #4
   2ed60:	ldr	fp, [sp]
   2ed64:	add	sp, sp, #4
   2ed68:	pop	{pc}		; (ldr pc, [sp], #4)
   2ed6c:	str	fp, [sp, #-8]!
   2ed70:	str	lr, [sp, #4]
   2ed74:	add	fp, sp, #4
   2ed78:	sub	sp, sp, #8
   2ed7c:	str	r0, [fp, #-8]
   2ed80:	ldr	r3, [fp, #-8]
   2ed84:	cmp	r3, #0
   2ed88:	beq	2eda0 <__assert_fail@plt+0x1dc48>
   2ed8c:	ldr	r0, [fp, #-8]
   2ed90:	bl	10ffc <__freading@plt>
   2ed94:	mov	r3, r0
   2ed98:	cmp	r3, #0
   2ed9c:	bne	2edb0 <__assert_fail@plt+0x1dc58>
   2eda0:	ldr	r0, [fp, #-8]
   2eda4:	bl	10ec4 <fflush@plt>
   2eda8:	mov	r3, r0
   2edac:	b	2edc4 <__assert_fail@plt+0x1dc6c>
   2edb0:	ldr	r0, [fp, #-8]
   2edb4:	bl	2ed18 <__assert_fail@plt+0x1dbc0>
   2edb8:	ldr	r0, [fp, #-8]
   2edbc:	bl	10ec4 <fflush@plt>
   2edc0:	mov	r3, r0
   2edc4:	mov	r0, r3
   2edc8:	sub	sp, fp, #4
   2edcc:	ldr	fp, [sp]
   2edd0:	add	sp, sp, #4
   2edd4:	pop	{pc}		; (ldr pc, [sp], #4)
   2edd8:	str	fp, [sp, #-8]!
   2eddc:	str	lr, [sp, #4]
   2ede0:	add	fp, sp, #4
   2ede4:	sub	sp, sp, #32
   2ede8:	str	r0, [fp, #-16]
   2edec:	strd	r2, [fp, #-28]	; 0xffffffe4
   2edf0:	ldr	r3, [fp, #-16]
   2edf4:	ldr	r2, [r3, #8]
   2edf8:	ldr	r3, [fp, #-16]
   2edfc:	ldr	r3, [r3, #4]
   2ee00:	cmp	r2, r3
   2ee04:	bne	2ee9c <__assert_fail@plt+0x1dd44>
   2ee08:	ldr	r3, [fp, #-16]
   2ee0c:	ldr	r2, [r3, #20]
   2ee10:	ldr	r3, [fp, #-16]
   2ee14:	ldr	r3, [r3, #16]
   2ee18:	cmp	r2, r3
   2ee1c:	bne	2ee9c <__assert_fail@plt+0x1dd44>
   2ee20:	ldr	r3, [fp, #-16]
   2ee24:	ldr	r3, [r3, #36]	; 0x24
   2ee28:	cmp	r3, #0
   2ee2c:	bne	2ee9c <__assert_fail@plt+0x1dd44>
   2ee30:	ldr	r0, [fp, #-16]
   2ee34:	bl	110b0 <fileno@plt>
   2ee38:	mov	r1, r0
   2ee3c:	ldr	r3, [fp, #4]
   2ee40:	str	r3, [sp]
   2ee44:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2ee48:	mov	r0, r1
   2ee4c:	bl	10f90 <lseek64@plt>
   2ee50:	strd	r0, [fp, #-12]
   2ee54:	ldrd	r2, [fp, #-12]
   2ee58:	mvn	r0, #0
   2ee5c:	mvn	r1, #0
   2ee60:	cmp	r3, r1
   2ee64:	cmpeq	r2, r0
   2ee68:	bne	2ee74 <__assert_fail@plt+0x1dd1c>
   2ee6c:	mvn	r3, #0
   2ee70:	b	2eeb4 <__assert_fail@plt+0x1dd5c>
   2ee74:	ldr	r3, [fp, #-16]
   2ee78:	ldr	r3, [r3]
   2ee7c:	bic	r2, r3, #16
   2ee80:	ldr	r3, [fp, #-16]
   2ee84:	str	r2, [r3]
   2ee88:	ldr	r1, [fp, #-16]
   2ee8c:	ldrd	r2, [fp, #-12]
   2ee90:	strd	r2, [r1, #80]	; 0x50
   2ee94:	mov	r3, #0
   2ee98:	b	2eeb4 <__assert_fail@plt+0x1dd5c>
   2ee9c:	ldr	r3, [fp, #4]
   2eea0:	str	r3, [sp]
   2eea4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2eea8:	ldr	r0, [fp, #-16]
   2eeac:	bl	110e0 <fseeko64@plt>
   2eeb0:	mov	r3, r0
   2eeb4:	mov	r0, r3
   2eeb8:	sub	sp, fp, #4
   2eebc:	ldr	fp, [sp]
   2eec0:	add	sp, sp, #4
   2eec4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eec8:	str	fp, [sp, #-8]!
   2eecc:	str	lr, [sp, #4]
   2eed0:	add	fp, sp, #4
   2eed4:	bl	11074 <__errno_location@plt>
   2eed8:	mov	r2, r0
   2eedc:	mov	r3, #12
   2eee0:	str	r3, [r2]
   2eee4:	mov	r3, #0
   2eee8:	mov	r0, r3
   2eeec:	sub	sp, fp, #4
   2eef0:	ldr	fp, [sp]
   2eef4:	add	sp, sp, #4
   2eef8:	pop	{pc}		; (ldr pc, [sp], #4)
   2eefc:	str	fp, [sp, #-8]!
   2ef00:	str	lr, [sp, #4]
   2ef04:	add	fp, sp, #4
   2ef08:	sub	sp, sp, #8
   2ef0c:	str	r0, [fp, #-8]
   2ef10:	ldr	r3, [fp, #-8]
   2ef14:	mov	r0, r3
   2ef18:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   2ef1c:	mov	r3, r0
   2ef20:	mov	r0, r3
   2ef24:	sub	sp, fp, #4
   2ef28:	ldr	fp, [sp]
   2ef2c:	add	sp, sp, #4
   2ef30:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef34:	str	fp, [sp, #-8]!
   2ef38:	str	lr, [sp, #4]
   2ef3c:	add	fp, sp, #4
   2ef40:	sub	sp, sp, #8
   2ef44:	str	r0, [fp, #-8]
   2ef48:	str	r1, [fp, #-12]
   2ef4c:	ldr	r3, [fp, #-12]
   2ef50:	cmp	r3, #0
   2ef54:	moveq	r3, #1
   2ef58:	movne	r3, #0
   2ef5c:	uxtb	r3, r3
   2ef60:	mov	r2, r3
   2ef64:	ldr	r3, [fp, #-12]
   2ef68:	orr	r3, r2, r3
   2ef6c:	mov	r1, r3
   2ef70:	ldr	r0, [fp, #-8]
   2ef74:	bl	2e9cc <__assert_fail@plt+0x1d874>
   2ef78:	mov	r3, r0
   2ef7c:	mov	r0, r3
   2ef80:	sub	sp, fp, #4
   2ef84:	ldr	fp, [sp]
   2ef88:	add	sp, sp, #4
   2ef8c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef90:	str	fp, [sp, #-8]!
   2ef94:	str	lr, [sp, #4]
   2ef98:	add	fp, sp, #4
   2ef9c:	sub	sp, sp, #8
   2efa0:	str	r0, [fp, #-8]
   2efa4:	str	r1, [fp, #-12]
   2efa8:	ldr	r3, [fp, #-8]
   2efac:	ldr	r2, [fp, #-12]
   2efb0:	mov	r1, r2
   2efb4:	mov	r0, r3
   2efb8:	bl	2e86c <__assert_fail@plt+0x1d714>
   2efbc:	mov	r3, r0
   2efc0:	mov	r0, r3
   2efc4:	sub	sp, fp, #4
   2efc8:	ldr	fp, [sp]
   2efcc:	add	sp, sp, #4
   2efd0:	pop	{pc}		; (ldr pc, [sp], #4)
   2efd4:	str	fp, [sp, #-8]!
   2efd8:	str	lr, [sp, #4]
   2efdc:	add	fp, sp, #4
   2efe0:	sub	sp, sp, #16
   2efe4:	str	r0, [fp, #-8]
   2efe8:	str	r1, [fp, #-12]
   2efec:	str	r2, [fp, #-16]
   2eff0:	ldr	r3, [fp, #-12]
   2eff4:	cmp	r3, #0
   2eff8:	beq	2f008 <__assert_fail@plt+0x1deb0>
   2effc:	ldr	r3, [fp, #-16]
   2f000:	cmp	r3, #0
   2f004:	bne	2f018 <__assert_fail@plt+0x1dec0>
   2f008:	mov	r3, #1
   2f00c:	str	r3, [fp, #-16]
   2f010:	ldr	r3, [fp, #-16]
   2f014:	str	r3, [fp, #-12]
   2f018:	ldr	r3, [fp, #-12]
   2f01c:	ldr	r2, [fp, #-16]
   2f020:	mov	r1, r3
   2f024:	ldr	r0, [fp, #-8]
   2f028:	bl	30a3c <__assert_fail@plt+0x1f8e4>
   2f02c:	mov	r3, r0
   2f030:	mov	r0, r3
   2f034:	sub	sp, fp, #4
   2f038:	ldr	fp, [sp]
   2f03c:	add	sp, sp, #4
   2f040:	pop	{pc}		; (ldr pc, [sp], #4)
   2f044:	str	fp, [sp, #-8]!
   2f048:	str	lr, [sp, #4]
   2f04c:	add	fp, sp, #4
   2f050:	sub	sp, sp, #8
   2f054:	mov	r0, #14
   2f058:	bl	11104 <nl_langinfo@plt>
   2f05c:	str	r0, [fp, #-8]
   2f060:	ldr	r3, [fp, #-8]
   2f064:	cmp	r3, #0
   2f068:	bne	2f078 <__assert_fail@plt+0x1df20>
   2f06c:	movw	r3, #25888	; 0x6520
   2f070:	movt	r3, #3
   2f074:	str	r3, [fp, #-8]
   2f078:	ldr	r3, [fp, #-8]
   2f07c:	ldrb	r3, [r3]
   2f080:	cmp	r3, #0
   2f084:	bne	2f094 <__assert_fail@plt+0x1df3c>
   2f088:	movw	r3, #25892	; 0x6524
   2f08c:	movt	r3, #3
   2f090:	str	r3, [fp, #-8]
   2f094:	ldr	r3, [fp, #-8]
   2f098:	mov	r0, r3
   2f09c:	sub	sp, fp, #4
   2f0a0:	ldr	fp, [sp]
   2f0a4:	add	sp, sp, #4
   2f0a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2f0ac:	str	fp, [sp, #-8]!
   2f0b0:	str	lr, [sp, #4]
   2f0b4:	add	fp, sp, #4
   2f0b8:	sub	sp, sp, #8
   2f0bc:	str	r0, [fp, #-8]
   2f0c0:	ldr	r3, [fp, #-8]
   2f0c4:	ldrb	r3, [r3, #16]
   2f0c8:	cmp	r3, #0
   2f0cc:	bne	2f2f4 <__assert_fail@plt+0x1e19c>
   2f0d0:	ldr	r3, [fp, #-8]
   2f0d4:	ldrb	r3, [r3, #4]
   2f0d8:	cmp	r3, #0
   2f0dc:	bne	2f180 <__assert_fail@plt+0x1e028>
   2f0e0:	ldr	r3, [fp, #-8]
   2f0e4:	ldr	r3, [r3, #20]
   2f0e8:	ldrb	r3, [r3]
   2f0ec:	mov	r0, r3
   2f0f0:	bl	31c44 <__assert_fail@plt+0x20aec>
   2f0f4:	mov	r3, r0
   2f0f8:	cmp	r3, #0
   2f0fc:	beq	2f134 <__assert_fail@plt+0x1dfdc>
   2f100:	ldr	r3, [fp, #-8]
   2f104:	mov	r2, #1
   2f108:	str	r2, [r3, #24]
   2f10c:	ldr	r3, [fp, #-8]
   2f110:	ldr	r3, [r3, #20]
   2f114:	ldrb	r3, [r3]
   2f118:	mov	r2, r3
   2f11c:	ldr	r3, [fp, #-8]
   2f120:	str	r2, [r3, #32]
   2f124:	ldr	r3, [fp, #-8]
   2f128:	mov	r2, #1
   2f12c:	strb	r2, [r3, #28]
   2f130:	b	2f2e4 <__assert_fail@plt+0x1e18c>
   2f134:	ldr	r3, [fp, #-8]
   2f138:	add	r3, r3, #8
   2f13c:	mov	r0, r3
   2f140:	bl	10f0c <mbsinit@plt>
   2f144:	mov	r3, r0
   2f148:	cmp	r3, #0
   2f14c:	bne	2f170 <__assert_fail@plt+0x1e018>
   2f150:	movw	r3, #25984	; 0x6580
   2f154:	movt	r3, #3
   2f158:	mov	r2, #135	; 0x87
   2f15c:	movw	r1, #25900	; 0x652c
   2f160:	movt	r1, #3
   2f164:	movw	r0, #25916	; 0x653c
   2f168:	movt	r0, #3
   2f16c:	bl	11158 <__assert_fail@plt>
   2f170:	ldr	r3, [fp, #-8]
   2f174:	mov	r2, #1
   2f178:	strb	r2, [r3, #4]
   2f17c:	b	2f184 <__assert_fail@plt+0x1e02c>
   2f180:	nop	{0}
   2f184:	ldr	r3, [fp, #-8]
   2f188:	add	r0, r3, #32
   2f18c:	ldr	r3, [fp, #-8]
   2f190:	ldr	r1, [r3, #20]
   2f194:	ldr	r3, [fp, #-8]
   2f198:	ldr	r2, [r3]
   2f19c:	ldr	r3, [fp, #-8]
   2f1a0:	ldr	r3, [r3, #20]
   2f1a4:	sub	r3, r2, r3
   2f1a8:	mov	r2, r3
   2f1ac:	ldr	r3, [fp, #-8]
   2f1b0:	add	r3, r3, #8
   2f1b4:	bl	2f41c <__assert_fail@plt+0x1e2c4>
   2f1b8:	mov	r2, r0
   2f1bc:	ldr	r3, [fp, #-8]
   2f1c0:	str	r2, [r3, #24]
   2f1c4:	ldr	r3, [fp, #-8]
   2f1c8:	ldr	r3, [r3, #24]
   2f1cc:	cmn	r3, #1
   2f1d0:	bne	2f1f0 <__assert_fail@plt+0x1e098>
   2f1d4:	ldr	r3, [fp, #-8]
   2f1d8:	mov	r2, #1
   2f1dc:	str	r2, [r3, #24]
   2f1e0:	ldr	r3, [fp, #-8]
   2f1e4:	mov	r2, #0
   2f1e8:	strb	r2, [r3, #28]
   2f1ec:	b	2f2e4 <__assert_fail@plt+0x1e18c>
   2f1f0:	ldr	r3, [fp, #-8]
   2f1f4:	ldr	r3, [r3, #24]
   2f1f8:	cmn	r3, #2
   2f1fc:	bne	2f230 <__assert_fail@plt+0x1e0d8>
   2f200:	ldr	r3, [fp, #-8]
   2f204:	ldr	r2, [r3]
   2f208:	ldr	r3, [fp, #-8]
   2f20c:	ldr	r3, [r3, #20]
   2f210:	sub	r3, r2, r3
   2f214:	mov	r2, r3
   2f218:	ldr	r3, [fp, #-8]
   2f21c:	str	r2, [r3, #24]
   2f220:	ldr	r3, [fp, #-8]
   2f224:	mov	r2, #0
   2f228:	strb	r2, [r3, #28]
   2f22c:	b	2f2e4 <__assert_fail@plt+0x1e18c>
   2f230:	ldr	r3, [fp, #-8]
   2f234:	ldr	r3, [r3, #24]
   2f238:	cmp	r3, #0
   2f23c:	bne	2f2b0 <__assert_fail@plt+0x1e158>
   2f240:	ldr	r3, [fp, #-8]
   2f244:	mov	r2, #1
   2f248:	str	r2, [r3, #24]
   2f24c:	ldr	r3, [fp, #-8]
   2f250:	ldr	r3, [r3, #20]
   2f254:	ldrb	r3, [r3]
   2f258:	cmp	r3, #0
   2f25c:	beq	2f280 <__assert_fail@plt+0x1e128>
   2f260:	movw	r3, #25984	; 0x6580
   2f264:	movt	r3, #3
   2f268:	mov	r2, #162	; 0xa2
   2f26c:	movw	r1, #25900	; 0x652c
   2f270:	movt	r1, #3
   2f274:	movw	r0, #25940	; 0x6554
   2f278:	movt	r0, #3
   2f27c:	bl	11158 <__assert_fail@plt>
   2f280:	ldr	r3, [fp, #-8]
   2f284:	ldr	r3, [r3, #32]
   2f288:	cmp	r3, #0
   2f28c:	beq	2f2b0 <__assert_fail@plt+0x1e158>
   2f290:	movw	r3, #25984	; 0x6580
   2f294:	movt	r3, #3
   2f298:	mov	r2, #163	; 0xa3
   2f29c:	movw	r1, #25900	; 0x652c
   2f2a0:	movt	r1, #3
   2f2a4:	movw	r0, #25964	; 0x656c
   2f2a8:	movt	r0, #3
   2f2ac:	bl	11158 <__assert_fail@plt>
   2f2b0:	ldr	r3, [fp, #-8]
   2f2b4:	mov	r2, #1
   2f2b8:	strb	r2, [r3, #28]
   2f2bc:	ldr	r3, [fp, #-8]
   2f2c0:	add	r3, r3, #8
   2f2c4:	mov	r0, r3
   2f2c8:	bl	10f0c <mbsinit@plt>
   2f2cc:	mov	r3, r0
   2f2d0:	cmp	r3, #0
   2f2d4:	beq	2f2e4 <__assert_fail@plt+0x1e18c>
   2f2d8:	ldr	r3, [fp, #-8]
   2f2dc:	mov	r2, #0
   2f2e0:	strb	r2, [r3, #4]
   2f2e4:	ldr	r3, [fp, #-8]
   2f2e8:	mov	r2, #1
   2f2ec:	strb	r2, [r3, #16]
   2f2f0:	b	2f2f8 <__assert_fail@plt+0x1e1a0>
   2f2f4:	nop	{0}
   2f2f8:	sub	sp, fp, #4
   2f2fc:	ldr	fp, [sp]
   2f300:	add	sp, sp, #4
   2f304:	pop	{pc}		; (ldr pc, [sp], #4)
   2f308:	push	{fp}		; (str fp, [sp, #-4]!)
   2f30c:	add	fp, sp, #0
   2f310:	sub	sp, sp, #12
   2f314:	str	r0, [fp, #-8]
   2f318:	str	r1, [fp, #-12]
   2f31c:	ldr	r3, [fp, #-8]
   2f320:	ldr	r2, [r3, #20]
   2f324:	ldr	r3, [fp, #-12]
   2f328:	add	r2, r2, r3
   2f32c:	ldr	r3, [fp, #-8]
   2f330:	str	r2, [r3, #20]
   2f334:	ldr	r3, [fp, #-8]
   2f338:	ldr	r2, [r3]
   2f33c:	ldr	r3, [fp, #-12]
   2f340:	add	r2, r2, r3
   2f344:	ldr	r3, [fp, #-8]
   2f348:	str	r2, [r3]
   2f34c:	nop	{0}
   2f350:	add	sp, fp, #0
   2f354:	pop	{fp}		; (ldr fp, [sp], #4)
   2f358:	bx	lr
   2f35c:	str	fp, [sp, #-8]!
   2f360:	str	lr, [sp, #4]
   2f364:	add	fp, sp, #4
   2f368:	sub	sp, sp, #8
   2f36c:	str	r0, [fp, #-8]
   2f370:	str	r1, [fp, #-12]
   2f374:	ldr	r3, [fp, #-12]
   2f378:	ldr	r2, [r3]
   2f37c:	ldr	r3, [fp, #-8]
   2f380:	str	r2, [r3]
   2f384:	ldr	r3, [fp, #-12]
   2f388:	ldrb	r2, [r3, #4]
   2f38c:	ldr	r3, [fp, #-8]
   2f390:	strb	r2, [r3, #4]
   2f394:	ldr	r3, [fp, #-8]
   2f398:	ldrb	r3, [r3, #4]
   2f39c:	cmp	r3, #0
   2f3a0:	beq	2f3c4 <__assert_fail@plt+0x1e26c>
   2f3a4:	ldr	r3, [fp, #-8]
   2f3a8:	add	r0, r3, #8
   2f3ac:	ldr	r3, [fp, #-12]
   2f3b0:	add	r3, r3, #8
   2f3b4:	mov	r2, #8
   2f3b8:	mov	r1, r3
   2f3bc:	bl	10f00 <memcpy@plt>
   2f3c0:	b	2f3dc <__assert_fail@plt+0x1e284>
   2f3c4:	ldr	r3, [fp, #-8]
   2f3c8:	add	r3, r3, #8
   2f3cc:	mov	r2, #8
   2f3d0:	mov	r1, #0
   2f3d4:	mov	r0, r3
   2f3d8:	bl	11098 <memset@plt>
   2f3dc:	ldr	r3, [fp, #-12]
   2f3e0:	ldrb	r2, [r3, #16]
   2f3e4:	ldr	r3, [fp, #-8]
   2f3e8:	strb	r2, [r3, #16]
   2f3ec:	ldr	r3, [fp, #-8]
   2f3f0:	add	r2, r3, #20
   2f3f4:	ldr	r3, [fp, #-12]
   2f3f8:	add	r3, r3, #20
   2f3fc:	mov	r1, r3
   2f400:	mov	r0, r2
   2f404:	bl	31b7c <__assert_fail@plt+0x20a24>
   2f408:	nop	{0}
   2f40c:	sub	sp, fp, #4
   2f410:	ldr	fp, [sp]
   2f414:	add	sp, sp, #4
   2f418:	pop	{pc}		; (ldr pc, [sp], #4)
   2f41c:	str	fp, [sp, #-8]!
   2f420:	str	lr, [sp, #4]
   2f424:	add	fp, sp, #4
   2f428:	sub	sp, sp, #32
   2f42c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f430:	str	r1, [fp, #-28]	; 0xffffffe4
   2f434:	str	r2, [fp, #-32]	; 0xffffffe0
   2f438:	str	r3, [fp, #-36]	; 0xffffffdc
   2f43c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f440:	cmp	r3, #0
   2f444:	bne	2f450 <__assert_fail@plt+0x1e2f8>
   2f448:	sub	r3, fp, #16
   2f44c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f454:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f458:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f45c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f460:	bl	10fc0 <mbrtowc@plt>
   2f464:	str	r0, [fp, #-8]
   2f468:	ldr	r3, [fp, #-8]
   2f46c:	cmn	r3, #3
   2f470:	bls	2f4bc <__assert_fail@plt+0x1e364>
   2f474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f478:	cmp	r3, #0
   2f47c:	beq	2f4bc <__assert_fail@plt+0x1e364>
   2f480:	mov	r0, #0
   2f484:	bl	318d8 <__assert_fail@plt+0x20780>
   2f488:	mov	r3, r0
   2f48c:	eor	r3, r3, #1
   2f490:	uxtb	r3, r3
   2f494:	cmp	r3, #0
   2f498:	beq	2f4bc <__assert_fail@plt+0x1e364>
   2f49c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f4a0:	ldrb	r3, [r3]
   2f4a4:	strb	r3, [fp, #-9]
   2f4a8:	ldrb	r2, [fp, #-9]
   2f4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f4b0:	str	r2, [r3]
   2f4b4:	mov	r3, #1
   2f4b8:	b	2f4c0 <__assert_fail@plt+0x1e368>
   2f4bc:	ldr	r3, [fp, #-8]
   2f4c0:	mov	r0, r3
   2f4c4:	sub	sp, fp, #4
   2f4c8:	ldr	fp, [sp]
   2f4cc:	add	sp, sp, #4
   2f4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f4d4:	str	fp, [sp, #-8]!
   2f4d8:	str	lr, [sp, #4]
   2f4dc:	add	fp, sp, #4
   2f4e0:	sub	sp, sp, #48	; 0x30
   2f4e4:	str	r0, [fp, #-40]	; 0xffffffd8
   2f4e8:	str	r1, [fp, #-44]	; 0xffffffd4
   2f4ec:	str	r2, [fp, #-48]	; 0xffffffd0
   2f4f0:	str	r3, [fp, #-52]	; 0xffffffcc
   2f4f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f4f8:	str	r3, [fp, #-28]	; 0xffffffe4
   2f4fc:	mov	r3, #0
   2f500:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f504:	lsl	r2, r2, #2
   2f508:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f50c:	lsr	r1, r1, #30
   2f510:	cmp	r1, #0
   2f514:	beq	2f51c <__assert_fail@plt+0x1e3c4>
   2f518:	mov	r3, #1
   2f51c:	cmp	r2, #0
   2f520:	bge	2f528 <__assert_fail@plt+0x1e3d0>
   2f524:	mov	r3, #1
   2f528:	and	r3, r3, #1
   2f52c:	uxtb	r3, r3
   2f530:	eor	r3, r3, #1
   2f534:	uxtb	r3, r3
   2f538:	cmp	r3, #0
   2f53c:	beq	2f5a4 <__assert_fail@plt+0x1e44c>
   2f540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f544:	lsl	r3, r3, #2
   2f548:	cmp	r3, #4016	; 0xfb0
   2f54c:	bhi	2f58c <__assert_fail@plt+0x1e434>
   2f550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f554:	add	r3, r3, #4
   2f558:	lsl	r3, r3, #2
   2f55c:	sub	r3, r3, #1
   2f560:	add	r3, r3, #7
   2f564:	lsr	r3, r3, #3
   2f568:	lsl	r3, r3, #3
   2f56c:	sub	sp, sp, r3
   2f570:	mov	r3, sp
   2f574:	add	r3, r3, #7
   2f578:	lsr	r3, r3, #3
   2f57c:	lsl	r3, r3, #3
   2f580:	add	r3, r3, #15
   2f584:	bic	r3, r3, #15
   2f588:	b	2f5a8 <__assert_fail@plt+0x1e450>
   2f58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f590:	lsl	r3, r3, #2
   2f594:	mov	r0, r3
   2f598:	bl	3197c <__assert_fail@plt+0x20824>
   2f59c:	mov	r3, r0
   2f5a0:	b	2f5a8 <__assert_fail@plt+0x1e450>
   2f5a4:	mov	r3, #0
   2f5a8:	str	r3, [fp, #-32]	; 0xffffffe0
   2f5ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f5b0:	cmp	r3, #0
   2f5b4:	bne	2f5c0 <__assert_fail@plt+0x1e468>
   2f5b8:	mov	r3, #0
   2f5bc:	b	2f7b4 <__assert_fail@plt+0x1e65c>
   2f5c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f5c4:	add	r3, r3, #4
   2f5c8:	mov	r2, #1
   2f5cc:	str	r2, [r3]
   2f5d0:	mov	r3, #0
   2f5d4:	str	r3, [fp, #-12]
   2f5d8:	mov	r3, #2
   2f5dc:	str	r3, [fp, #-8]
   2f5e0:	b	2f6a0 <__assert_fail@plt+0x1e548>
   2f5e4:	ldr	r3, [fp, #-8]
   2f5e8:	sub	r3, r3, #1
   2f5ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f5f0:	add	r3, r2, r3
   2f5f4:	ldrb	r3, [r3]
   2f5f8:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f5fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f600:	ldr	r3, [fp, #-12]
   2f604:	add	r3, r2, r3
   2f608:	ldrb	r3, [r3]
   2f60c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   2f610:	cmp	r2, r3
   2f614:	bne	2f648 <__assert_fail@plt+0x1e4f0>
   2f618:	ldr	r3, [fp, #-12]
   2f61c:	add	r3, r3, #1
   2f620:	str	r3, [fp, #-12]
   2f624:	ldr	r3, [fp, #-8]
   2f628:	lsl	r3, r3, #2
   2f62c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f630:	add	r3, r2, r3
   2f634:	ldr	r1, [fp, #-8]
   2f638:	ldr	r2, [fp, #-12]
   2f63c:	sub	r2, r1, r2
   2f640:	str	r2, [r3]
   2f644:	b	2f694 <__assert_fail@plt+0x1e53c>
   2f648:	ldr	r3, [fp, #-12]
   2f64c:	cmp	r3, #0
   2f650:	bne	2f670 <__assert_fail@plt+0x1e518>
   2f654:	ldr	r3, [fp, #-8]
   2f658:	lsl	r3, r3, #2
   2f65c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f660:	add	r3, r2, r3
   2f664:	ldr	r2, [fp, #-8]
   2f668:	str	r2, [r3]
   2f66c:	b	2f694 <__assert_fail@plt+0x1e53c>
   2f670:	ldr	r3, [fp, #-12]
   2f674:	lsl	r3, r3, #2
   2f678:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f67c:	add	r3, r2, r3
   2f680:	ldr	r3, [r3]
   2f684:	ldr	r2, [fp, #-12]
   2f688:	sub	r3, r2, r3
   2f68c:	str	r3, [fp, #-12]
   2f690:	b	2f5fc <__assert_fail@plt+0x1e4a4>
   2f694:	ldr	r3, [fp, #-8]
   2f698:	add	r3, r3, #1
   2f69c:	str	r3, [fp, #-8]
   2f6a0:	ldr	r2, [fp, #-8]
   2f6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f6a8:	cmp	r2, r3
   2f6ac:	bcc	2f5e4 <__assert_fail@plt+0x1e48c>
   2f6b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f6b4:	mov	r2, #0
   2f6b8:	str	r2, [r3]
   2f6bc:	mov	r3, #0
   2f6c0:	str	r3, [fp, #-16]
   2f6c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f6c8:	str	r3, [fp, #-20]	; 0xffffffec
   2f6cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f6d0:	str	r3, [fp, #-24]	; 0xffffffe8
   2f6d4:	b	2f798 <__assert_fail@plt+0x1e640>
   2f6d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f6dc:	ldr	r3, [fp, #-16]
   2f6e0:	add	r3, r2, r3
   2f6e4:	ldrb	r2, [r3]
   2f6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f6ec:	ldrb	r3, [r3]
   2f6f0:	cmp	r2, r3
   2f6f4:	bne	2f730 <__assert_fail@plt+0x1e5d8>
   2f6f8:	ldr	r3, [fp, #-16]
   2f6fc:	add	r3, r3, #1
   2f700:	str	r3, [fp, #-16]
   2f704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f708:	add	r3, r3, #1
   2f70c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f710:	ldr	r2, [fp, #-16]
   2f714:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f718:	cmp	r2, r3
   2f71c:	bne	2f798 <__assert_fail@plt+0x1e640>
   2f720:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f724:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f728:	str	r2, [r3]
   2f72c:	b	2f7a8 <__assert_fail@plt+0x1e650>
   2f730:	ldr	r3, [fp, #-16]
   2f734:	cmp	r3, #0
   2f738:	beq	2f780 <__assert_fail@plt+0x1e628>
   2f73c:	ldr	r3, [fp, #-16]
   2f740:	lsl	r3, r3, #2
   2f744:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f748:	add	r3, r2, r3
   2f74c:	ldr	r3, [r3]
   2f750:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f754:	add	r3, r2, r3
   2f758:	str	r3, [fp, #-20]	; 0xffffffec
   2f75c:	ldr	r3, [fp, #-16]
   2f760:	lsl	r3, r3, #2
   2f764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f768:	add	r3, r2, r3
   2f76c:	ldr	r3, [r3]
   2f770:	ldr	r2, [fp, #-16]
   2f774:	sub	r3, r2, r3
   2f778:	str	r3, [fp, #-16]
   2f77c:	b	2f798 <__assert_fail@plt+0x1e640>
   2f780:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f784:	add	r3, r3, #1
   2f788:	str	r3, [fp, #-20]	; 0xffffffec
   2f78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f790:	add	r3, r3, #1
   2f794:	str	r3, [fp, #-24]	; 0xffffffe8
   2f798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f79c:	ldrb	r3, [r3]
   2f7a0:	cmp	r3, #0
   2f7a4:	bne	2f6d8 <__assert_fail@plt+0x1e580>
   2f7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f7ac:	bl	31aa8 <__assert_fail@plt+0x20950>
   2f7b0:	mov	r3, #1
   2f7b4:	mov	r0, r3
   2f7b8:	sub	sp, fp, #4
   2f7bc:	ldr	fp, [sp]
   2f7c0:	add	sp, sp, #4
   2f7c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2f7c8:	str	fp, [sp, #-8]!
   2f7cc:	str	lr, [sp, #4]
   2f7d0:	add	fp, sp, #4
   2f7d4:	sub	sp, sp, #176	; 0xb0
   2f7d8:	str	r0, [fp, #-168]	; 0xffffff58
   2f7dc:	str	r1, [fp, #-172]	; 0xffffff54
   2f7e0:	str	r2, [fp, #-176]	; 0xffffff50
   2f7e4:	ldr	r0, [fp, #-172]	; 0xffffff54
   2f7e8:	bl	31ca4 <__assert_fail@plt+0x20b4c>
   2f7ec:	str	r0, [fp, #-28]	; 0xffffffe4
   2f7f0:	mov	ip, #0
   2f7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f7f8:	mov	r2, #44	; 0x2c
   2f7fc:	umull	r0, r1, r3, r2
   2f800:	mov	r2, #0
   2f804:	mov	r3, #0
   2f808:	mov	r2, r1
   2f80c:	mov	r3, #0
   2f810:	cmp	r2, #0
   2f814:	beq	2f81c <__assert_fail@plt+0x1e6c4>
   2f818:	mov	ip, #1
   2f81c:	cmp	r0, #0
   2f820:	bge	2f828 <__assert_fail@plt+0x1e6d0>
   2f824:	mov	ip, #1
   2f828:	mov	r3, ip
   2f82c:	and	r3, r3, #1
   2f830:	uxtb	r3, r3
   2f834:	cmp	r3, #0
   2f838:	bne	2f8a8 <__assert_fail@plt+0x1e750>
   2f83c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f840:	mov	r2, #44	; 0x2c
   2f844:	mul	r3, r2, r3
   2f848:	cmp	r3, #4016	; 0xfb0
   2f84c:	bhi	2f88c <__assert_fail@plt+0x1e734>
   2f850:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f854:	mov	r2, #44	; 0x2c
   2f858:	mul	r3, r2, r3
   2f85c:	add	r3, r3, #15
   2f860:	add	r3, r3, #7
   2f864:	lsr	r3, r3, #3
   2f868:	lsl	r3, r3, #3
   2f86c:	sub	sp, sp, r3
   2f870:	mov	r3, sp
   2f874:	add	r3, r3, #7
   2f878:	lsr	r3, r3, #3
   2f87c:	lsl	r3, r3, #3
   2f880:	add	r3, r3, #15
   2f884:	bic	r3, r3, #15
   2f888:	b	2f8ac <__assert_fail@plt+0x1e754>
   2f88c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f890:	mov	r2, #44	; 0x2c
   2f894:	mul	r3, r2, r3
   2f898:	mov	r0, r3
   2f89c:	bl	3197c <__assert_fail@plt+0x20824>
   2f8a0:	mov	r3, r0
   2f8a4:	b	2f8ac <__assert_fail@plt+0x1e754>
   2f8a8:	mov	r3, #0
   2f8ac:	str	r3, [fp, #-32]	; 0xffffffe0
   2f8b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8b4:	cmp	r3, #0
   2f8b8:	bne	2f8c4 <__assert_fail@plt+0x1e76c>
   2f8bc:	mov	r3, #0
   2f8c0:	b	2ff0c <__assert_fail@plt+0x1edb4>
   2f8c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8c8:	str	r3, [fp, #-36]	; 0xffffffdc
   2f8cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f8d0:	mov	r3, r2
   2f8d4:	lsl	r3, r3, #2
   2f8d8:	add	r3, r3, r2
   2f8dc:	lsl	r3, r3, #3
   2f8e0:	mov	r2, r3
   2f8e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f8e8:	add	r3, r3, r2
   2f8ec:	str	r3, [fp, #-40]	; 0xffffffd8
   2f8f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f8f4:	str	r3, [fp, #-44]	; 0xffffffd4
   2f8f8:	mov	r3, #0
   2f8fc:	str	r3, [fp, #-8]
   2f900:	ldr	r3, [fp, #-172]	; 0xffffff54
   2f904:	str	r3, [fp, #-88]	; 0xffffffa8
   2f908:	mov	r3, #0
   2f90c:	strb	r3, [fp, #-104]	; 0xffffff98
   2f910:	sub	r3, fp, #104	; 0x68
   2f914:	add	r3, r3, #4
   2f918:	mov	r2, #8
   2f91c:	mov	r1, #0
   2f920:	mov	r0, r3
   2f924:	bl	11098 <memset@plt>
   2f928:	mov	r3, #0
   2f92c:	strb	r3, [fp, #-92]	; 0xffffffa4
   2f930:	b	2f98c <__assert_fail@plt+0x1e834>
   2f934:	ldr	r2, [fp, #-8]
   2f938:	mov	r3, r2
   2f93c:	lsl	r3, r3, #2
   2f940:	add	r3, r3, r2
   2f944:	lsl	r3, r3, #3
   2f948:	mov	r2, r3
   2f94c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f950:	add	r2, r3, r2
   2f954:	sub	r3, fp, #104	; 0x68
   2f958:	add	r3, r3, #16
   2f95c:	mov	r1, r3
   2f960:	mov	r0, r2
   2f964:	bl	31b7c <__assert_fail@plt+0x20a24>
   2f968:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2f96c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2f970:	add	r3, r2, r3
   2f974:	str	r3, [fp, #-88]	; 0xffffffa8
   2f978:	mov	r3, #0
   2f97c:	strb	r3, [fp, #-92]	; 0xffffffa4
   2f980:	ldr	r3, [fp, #-8]
   2f984:	add	r3, r3, #1
   2f988:	str	r3, [fp, #-8]
   2f98c:	sub	r3, fp, #104	; 0x68
   2f990:	mov	r0, r3
   2f994:	bl	306d8 <__assert_fail@plt+0x1f580>
   2f998:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   2f99c:	eor	r3, r3, #1
   2f9a0:	uxtb	r3, r3
   2f9a4:	cmp	r3, #0
   2f9a8:	bne	2f9b8 <__assert_fail@plt+0x1e860>
   2f9ac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2f9b0:	cmp	r3, #0
   2f9b4:	beq	2f9c0 <__assert_fail@plt+0x1e868>
   2f9b8:	mov	r3, #1
   2f9bc:	b	2f9c4 <__assert_fail@plt+0x1e86c>
   2f9c0:	mov	r3, #0
   2f9c4:	cmp	r3, #0
   2f9c8:	bne	2f934 <__assert_fail@plt+0x1e7dc>
   2f9cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f9d0:	add	r3, r3, #4
   2f9d4:	mov	r2, #1
   2f9d8:	str	r2, [r3]
   2f9dc:	mov	r3, #0
   2f9e0:	str	r3, [fp, #-16]
   2f9e4:	mov	r3, #2
   2f9e8:	str	r3, [fp, #-12]
   2f9ec:	b	2fbb0 <__assert_fail@plt+0x1ea58>
   2f9f0:	ldr	r2, [fp, #-12]
   2f9f4:	mov	r3, r2
   2f9f8:	lsl	r3, r3, #2
   2f9fc:	add	r3, r3, r2
   2fa00:	lsl	r3, r3, #3
   2fa04:	sub	r3, r3, #40	; 0x28
   2fa08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fa0c:	add	r3, r2, r3
   2fa10:	str	r3, [fp, #-48]	; 0xffffffd0
   2fa14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fa18:	ldrb	r3, [r3, #8]
   2fa1c:	cmp	r3, #0
   2fa20:	beq	2fa90 <__assert_fail@plt+0x1e938>
   2fa24:	ldr	r2, [fp, #-16]
   2fa28:	mov	r3, r2
   2fa2c:	lsl	r3, r3, #2
   2fa30:	add	r3, r3, r2
   2fa34:	lsl	r3, r3, #3
   2fa38:	mov	r2, r3
   2fa3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa40:	add	r3, r3, r2
   2fa44:	ldrb	r3, [r3, #8]
   2fa48:	cmp	r3, #0
   2fa4c:	beq	2fa90 <__assert_fail@plt+0x1e938>
   2fa50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fa54:	ldr	r1, [r3, #12]
   2fa58:	ldr	r2, [fp, #-16]
   2fa5c:	mov	r3, r2
   2fa60:	lsl	r3, r3, #2
   2fa64:	add	r3, r3, r2
   2fa68:	lsl	r3, r3, #3
   2fa6c:	mov	r2, r3
   2fa70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa74:	add	r3, r3, r2
   2fa78:	ldr	r3, [r3, #12]
   2fa7c:	cmp	r1, r3
   2fa80:	moveq	r3, #1
   2fa84:	movne	r3, #0
   2fa88:	uxtb	r3, r3
   2fa8c:	b	2fb20 <__assert_fail@plt+0x1e9c8>
   2fa90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fa94:	ldr	r1, [r3, #4]
   2fa98:	ldr	r2, [fp, #-16]
   2fa9c:	mov	r3, r2
   2faa0:	lsl	r3, r3, #2
   2faa4:	add	r3, r3, r2
   2faa8:	lsl	r3, r3, #3
   2faac:	mov	r2, r3
   2fab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fab4:	add	r3, r3, r2
   2fab8:	ldr	r3, [r3, #4]
   2fabc:	cmp	r1, r3
   2fac0:	bne	2fb14 <__assert_fail@plt+0x1e9bc>
   2fac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fac8:	ldr	r0, [r3]
   2facc:	ldr	r2, [fp, #-16]
   2fad0:	mov	r3, r2
   2fad4:	lsl	r3, r3, #2
   2fad8:	add	r3, r3, r2
   2fadc:	lsl	r3, r3, #3
   2fae0:	mov	r2, r3
   2fae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fae8:	add	r3, r3, r2
   2faec:	ldr	r1, [r3]
   2faf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2faf4:	ldr	r3, [r3, #4]
   2faf8:	mov	r2, r3
   2fafc:	bl	10f18 <memcmp@plt>
   2fb00:	mov	r3, r0
   2fb04:	cmp	r3, #0
   2fb08:	bne	2fb14 <__assert_fail@plt+0x1e9bc>
   2fb0c:	mov	r3, #1
   2fb10:	b	2fb18 <__assert_fail@plt+0x1e9c0>
   2fb14:	mov	r3, #0
   2fb18:	and	r3, r3, #1
   2fb1c:	uxtb	r3, r3
   2fb20:	cmp	r3, #0
   2fb24:	beq	2fb58 <__assert_fail@plt+0x1ea00>
   2fb28:	ldr	r3, [fp, #-16]
   2fb2c:	add	r3, r3, #1
   2fb30:	str	r3, [fp, #-16]
   2fb34:	ldr	r3, [fp, #-12]
   2fb38:	lsl	r3, r3, #2
   2fb3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fb40:	add	r3, r2, r3
   2fb44:	ldr	r1, [fp, #-12]
   2fb48:	ldr	r2, [fp, #-16]
   2fb4c:	sub	r2, r1, r2
   2fb50:	str	r2, [r3]
   2fb54:	b	2fba4 <__assert_fail@plt+0x1ea4c>
   2fb58:	ldr	r3, [fp, #-16]
   2fb5c:	cmp	r3, #0
   2fb60:	bne	2fb80 <__assert_fail@plt+0x1ea28>
   2fb64:	ldr	r3, [fp, #-12]
   2fb68:	lsl	r3, r3, #2
   2fb6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fb70:	add	r3, r2, r3
   2fb74:	ldr	r2, [fp, #-12]
   2fb78:	str	r2, [r3]
   2fb7c:	b	2fba4 <__assert_fail@plt+0x1ea4c>
   2fb80:	ldr	r3, [fp, #-16]
   2fb84:	lsl	r3, r3, #2
   2fb88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fb8c:	add	r3, r2, r3
   2fb90:	ldr	r3, [r3]
   2fb94:	ldr	r2, [fp, #-16]
   2fb98:	sub	r3, r2, r3
   2fb9c:	str	r3, [fp, #-16]
   2fba0:	b	2fa14 <__assert_fail@plt+0x1e8bc>
   2fba4:	ldr	r3, [fp, #-12]
   2fba8:	add	r3, r3, #1
   2fbac:	str	r3, [fp, #-12]
   2fbb0:	ldr	r2, [fp, #-12]
   2fbb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fbb8:	cmp	r2, r3
   2fbbc:	bcc	2f9f0 <__assert_fail@plt+0x1e898>
   2fbc0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2fbc4:	mov	r2, #0
   2fbc8:	str	r2, [r3]
   2fbcc:	mov	r3, #0
   2fbd0:	str	r3, [fp, #-20]	; 0xffffffec
   2fbd4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fbd8:	str	r3, [fp, #-144]	; 0xffffff70
   2fbdc:	mov	r3, #0
   2fbe0:	strb	r3, [fp, #-160]	; 0xffffff60
   2fbe4:	sub	r3, fp, #160	; 0xa0
   2fbe8:	add	r3, r3, #4
   2fbec:	mov	r2, #8
   2fbf0:	mov	r1, #0
   2fbf4:	mov	r0, r3
   2fbf8:	bl	11098 <memset@plt>
   2fbfc:	mov	r3, #0
   2fc00:	strb	r3, [fp, #-148]	; 0xffffff6c
   2fc04:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fc08:	str	r3, [fp, #-88]	; 0xffffffa8
   2fc0c:	mov	r3, #0
   2fc10:	strb	r3, [fp, #-104]	; 0xffffff98
   2fc14:	sub	r3, fp, #104	; 0x68
   2fc18:	add	r3, r3, #4
   2fc1c:	mov	r2, #8
   2fc20:	mov	r1, #0
   2fc24:	mov	r0, r3
   2fc28:	bl	11098 <memset@plt>
   2fc2c:	mov	r3, #0
   2fc30:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fc34:	b	2fec0 <__assert_fail@plt+0x1ed68>
   2fc38:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fc3c:	mov	r3, r2
   2fc40:	lsl	r3, r3, #2
   2fc44:	add	r3, r3, r2
   2fc48:	lsl	r3, r3, #3
   2fc4c:	mov	r2, r3
   2fc50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fc54:	add	r3, r3, r2
   2fc58:	ldrb	r3, [r3, #8]
   2fc5c:	cmp	r3, #0
   2fc60:	beq	2fcac <__assert_fail@plt+0x1eb54>
   2fc64:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   2fc68:	cmp	r3, #0
   2fc6c:	beq	2fcac <__assert_fail@plt+0x1eb54>
   2fc70:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fc74:	mov	r3, r2
   2fc78:	lsl	r3, r3, #2
   2fc7c:	add	r3, r3, r2
   2fc80:	lsl	r3, r3, #3
   2fc84:	mov	r2, r3
   2fc88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fc8c:	add	r3, r3, r2
   2fc90:	ldr	r2, [r3, #12]
   2fc94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fc98:	cmp	r2, r3
   2fc9c:	moveq	r3, #1
   2fca0:	movne	r3, #0
   2fca4:	uxtb	r3, r3
   2fca8:	b	2fd50 <__assert_fail@plt+0x1ebf8>
   2fcac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fcb0:	mov	r3, r2
   2fcb4:	lsl	r3, r3, #2
   2fcb8:	add	r3, r3, r2
   2fcbc:	lsl	r3, r3, #3
   2fcc0:	mov	r2, r3
   2fcc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fcc8:	add	r3, r3, r2
   2fccc:	ldr	r2, [r3, #4]
   2fcd0:	ldr	r3, [fp, #-84]	; 0xffffffac
   2fcd4:	cmp	r2, r3
   2fcd8:	bne	2fd44 <__assert_fail@plt+0x1ebec>
   2fcdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fce0:	mov	r3, r2
   2fce4:	lsl	r3, r3, #2
   2fce8:	add	r3, r3, r2
   2fcec:	lsl	r3, r3, #3
   2fcf0:	mov	r2, r3
   2fcf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fcf8:	add	r3, r3, r2
   2fcfc:	ldr	r0, [r3]
   2fd00:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2fd04:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fd08:	mov	r3, r2
   2fd0c:	lsl	r3, r3, #2
   2fd10:	add	r3, r3, r2
   2fd14:	lsl	r3, r3, #3
   2fd18:	mov	r2, r3
   2fd1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd20:	add	r3, r3, r2
   2fd24:	ldr	r3, [r3, #4]
   2fd28:	mov	r2, r3
   2fd2c:	bl	10f18 <memcmp@plt>
   2fd30:	mov	r3, r0
   2fd34:	cmp	r3, #0
   2fd38:	bne	2fd44 <__assert_fail@plt+0x1ebec>
   2fd3c:	mov	r3, #1
   2fd40:	b	2fd48 <__assert_fail@plt+0x1ebf0>
   2fd44:	mov	r3, #0
   2fd48:	and	r3, r3, #1
   2fd4c:	uxtb	r3, r3
   2fd50:	cmp	r3, #0
   2fd54:	beq	2fd9c <__assert_fail@plt+0x1ec44>
   2fd58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd5c:	add	r3, r3, #1
   2fd60:	str	r3, [fp, #-20]	; 0xffffffec
   2fd64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2fd68:	ldr	r3, [fp, #-84]	; 0xffffffac
   2fd6c:	add	r3, r2, r3
   2fd70:	str	r3, [fp, #-88]	; 0xffffffa8
   2fd74:	mov	r3, #0
   2fd78:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fd7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fd80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd84:	cmp	r2, r3
   2fd88:	bne	2fec0 <__assert_fail@plt+0x1ed68>
   2fd8c:	ldr	r2, [fp, #-144]	; 0xffffff70
   2fd90:	ldr	r3, [fp, #-176]	; 0xffffff50
   2fd94:	str	r2, [r3]
   2fd98:	b	2ff00 <__assert_fail@plt+0x1eda8>
   2fd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fda0:	cmp	r3, #0
   2fda4:	beq	2fe4c <__assert_fail@plt+0x1ecf4>
   2fda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fdac:	lsl	r3, r3, #2
   2fdb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fdb4:	add	r3, r2, r3
   2fdb8:	ldr	r3, [r3]
   2fdbc:	str	r3, [fp, #-24]	; 0xffffffe8
   2fdc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fdc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fdc8:	sub	r3, r2, r3
   2fdcc:	str	r3, [fp, #-20]	; 0xffffffec
   2fdd0:	b	2fe3c <__assert_fail@plt+0x1ece4>
   2fdd4:	sub	r3, fp, #160	; 0xa0
   2fdd8:	mov	r0, r3
   2fddc:	bl	306d8 <__assert_fail@plt+0x1f580>
   2fde0:	ldrb	r3, [fp, #-136]	; 0xffffff78
   2fde4:	eor	r3, r3, #1
   2fde8:	uxtb	r3, r3
   2fdec:	cmp	r3, #0
   2fdf0:	bne	2fe00 <__assert_fail@plt+0x1eca8>
   2fdf4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2fdf8:	cmp	r3, #0
   2fdfc:	beq	2fe08 <__assert_fail@plt+0x1ecb0>
   2fe00:	mov	r3, #1
   2fe04:	b	2fe0c <__assert_fail@plt+0x1ecb4>
   2fe08:	mov	r3, #0
   2fe0c:	cmp	r3, #0
   2fe10:	bne	2fe18 <__assert_fail@plt+0x1ecc0>
   2fe14:	bl	11140 <abort@plt>
   2fe18:	ldr	r2, [fp, #-144]	; 0xffffff70
   2fe1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   2fe20:	add	r3, r2, r3
   2fe24:	str	r3, [fp, #-144]	; 0xffffff70
   2fe28:	mov	r3, #0
   2fe2c:	strb	r3, [fp, #-148]	; 0xffffff6c
   2fe30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe34:	sub	r3, r3, #1
   2fe38:	str	r3, [fp, #-24]	; 0xffffffe8
   2fe3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe40:	cmp	r3, #0
   2fe44:	bne	2fdd4 <__assert_fail@plt+0x1ec7c>
   2fe48:	b	2fec0 <__assert_fail@plt+0x1ed68>
   2fe4c:	sub	r3, fp, #160	; 0xa0
   2fe50:	mov	r0, r3
   2fe54:	bl	306d8 <__assert_fail@plt+0x1f580>
   2fe58:	ldrb	r3, [fp, #-136]	; 0xffffff78
   2fe5c:	eor	r3, r3, #1
   2fe60:	uxtb	r3, r3
   2fe64:	cmp	r3, #0
   2fe68:	bne	2fe78 <__assert_fail@plt+0x1ed20>
   2fe6c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2fe70:	cmp	r3, #0
   2fe74:	beq	2fe80 <__assert_fail@plt+0x1ed28>
   2fe78:	mov	r3, #1
   2fe7c:	b	2fe84 <__assert_fail@plt+0x1ed2c>
   2fe80:	mov	r3, #0
   2fe84:	cmp	r3, #0
   2fe88:	bne	2fe90 <__assert_fail@plt+0x1ed38>
   2fe8c:	bl	11140 <abort@plt>
   2fe90:	ldr	r2, [fp, #-144]	; 0xffffff70
   2fe94:	ldr	r3, [fp, #-140]	; 0xffffff74
   2fe98:	add	r3, r2, r3
   2fe9c:	str	r3, [fp, #-144]	; 0xffffff70
   2fea0:	mov	r3, #0
   2fea4:	strb	r3, [fp, #-148]	; 0xffffff6c
   2fea8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2feac:	ldr	r3, [fp, #-84]	; 0xffffffac
   2feb0:	add	r3, r2, r3
   2feb4:	str	r3, [fp, #-88]	; 0xffffffa8
   2feb8:	mov	r3, #0
   2febc:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fec0:	sub	r3, fp, #104	; 0x68
   2fec4:	mov	r0, r3
   2fec8:	bl	306d8 <__assert_fail@plt+0x1f580>
   2fecc:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   2fed0:	eor	r3, r3, #1
   2fed4:	uxtb	r3, r3
   2fed8:	cmp	r3, #0
   2fedc:	bne	2feec <__assert_fail@plt+0x1ed94>
   2fee0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fee4:	cmp	r3, #0
   2fee8:	beq	2fef4 <__assert_fail@plt+0x1ed9c>
   2feec:	mov	r3, #1
   2fef0:	b	2fef8 <__assert_fail@plt+0x1eda0>
   2fef4:	mov	r3, #0
   2fef8:	cmp	r3, #0
   2fefc:	bne	2fc38 <__assert_fail@plt+0x1eae0>
   2ff00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ff04:	bl	31aa8 <__assert_fail@plt+0x20950>
   2ff08:	mov	r3, #1
   2ff0c:	mov	r0, r3
   2ff10:	sub	sp, fp, #4
   2ff14:	ldr	fp, [sp]
   2ff18:	add	sp, sp, #4
   2ff1c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ff20:	str	r4, [sp, #-12]!
   2ff24:	str	fp, [sp, #4]
   2ff28:	str	lr, [sp, #8]
   2ff2c:	add	fp, sp, #8
   2ff30:	sub	sp, sp, #356	; 0x164
   2ff34:	str	r0, [fp, #-360]	; 0xfffffe98
   2ff38:	str	r1, [fp, #-364]	; 0xfffffe94
   2ff3c:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2ff40:	mov	r3, r0
   2ff44:	cmp	r3, #1
   2ff48:	bls	304b0 <__assert_fail@plt+0x1f358>
   2ff4c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ff50:	str	r3, [fp, #-336]	; 0xfffffeb0
   2ff54:	mov	r3, #0
   2ff58:	strb	r3, [fp, #-352]	; 0xfffffea0
   2ff5c:	sub	r3, fp, #352	; 0x160
   2ff60:	add	r3, r3, #4
   2ff64:	mov	r2, #8
   2ff68:	mov	r1, #0
   2ff6c:	mov	r0, r3
   2ff70:	bl	11098 <memset@plt>
   2ff74:	mov	r3, #0
   2ff78:	strb	r3, [fp, #-340]	; 0xfffffeac
   2ff7c:	sub	r3, fp, #352	; 0x160
   2ff80:	mov	r0, r3
   2ff84:	bl	306d8 <__assert_fail@plt+0x1f580>
   2ff88:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   2ff8c:	eor	r3, r3, #1
   2ff90:	uxtb	r3, r3
   2ff94:	cmp	r3, #0
   2ff98:	bne	2ffa8 <__assert_fail@plt+0x1ee50>
   2ff9c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   2ffa0:	cmp	r3, #0
   2ffa4:	beq	2ffb0 <__assert_fail@plt+0x1ee58>
   2ffa8:	mov	r3, #1
   2ffac:	b	2ffb4 <__assert_fail@plt+0x1ee5c>
   2ffb0:	mov	r3, #0
   2ffb4:	cmp	r3, #0
   2ffb8:	beq	304a8 <__assert_fail@plt+0x1f350>
   2ffbc:	mov	r3, #1
   2ffc0:	strb	r3, [fp, #-13]
   2ffc4:	mov	r3, #0
   2ffc8:	str	r3, [fp, #-20]	; 0xffffffec
   2ffcc:	mov	r3, #0
   2ffd0:	str	r3, [fp, #-24]	; 0xffffffe8
   2ffd4:	mov	r3, #0
   2ffd8:	str	r3, [fp, #-28]	; 0xffffffe4
   2ffdc:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ffe0:	str	r3, [fp, #-280]	; 0xfffffee8
   2ffe4:	mov	r3, #0
   2ffe8:	strb	r3, [fp, #-296]	; 0xfffffed8
   2ffec:	sub	r3, fp, #296	; 0x128
   2fff0:	add	r3, r3, #4
   2fff4:	mov	r2, #8
   2fff8:	mov	r1, #0
   2fffc:	mov	r0, r3
   30000:	bl	11098 <memset@plt>
   30004:	mov	r3, #0
   30008:	strb	r3, [fp, #-284]	; 0xfffffee4
   3000c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30010:	str	r3, [fp, #-224]	; 0xffffff20
   30014:	mov	r3, #0
   30018:	strb	r3, [fp, #-240]	; 0xffffff10
   3001c:	sub	r3, fp, #240	; 0xf0
   30020:	add	r3, r3, #4
   30024:	mov	r2, #8
   30028:	mov	r1, #0
   3002c:	mov	r0, r3
   30030:	bl	11098 <memset@plt>
   30034:	mov	r3, #0
   30038:	strb	r3, [fp, #-228]	; 0xffffff1c
   3003c:	sub	r3, fp, #240	; 0xf0
   30040:	mov	r0, r3
   30044:	bl	306d8 <__assert_fail@plt+0x1f580>
   30048:	ldrb	r3, [fp, #-216]	; 0xffffff28
   3004c:	eor	r3, r3, #1
   30050:	uxtb	r3, r3
   30054:	cmp	r3, #0
   30058:	bne	30068 <__assert_fail@plt+0x1ef10>
   3005c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   30060:	cmp	r3, #0
   30064:	beq	30070 <__assert_fail@plt+0x1ef18>
   30068:	mov	r3, #1
   3006c:	b	30074 <__assert_fail@plt+0x1ef1c>
   30070:	mov	r3, #0
   30074:	cmp	r3, #0
   30078:	bne	30084 <__assert_fail@plt+0x1ef2c>
   3007c:	mov	r3, #0
   30080:	b	306c0 <__assert_fail@plt+0x1f568>
   30084:	ldrb	r3, [fp, #-13]
   30088:	cmp	r3, #0
   3008c:	beq	301bc <__assert_fail@plt+0x1f064>
   30090:	ldr	r3, [fp, #-20]	; 0xffffffec
   30094:	cmp	r3, #9
   30098:	bls	301bc <__assert_fail@plt+0x1f064>
   3009c:	ldr	r2, [fp, #-20]	; 0xffffffec
   300a0:	mov	r3, r2
   300a4:	lsl	r3, r3, #2
   300a8:	add	r3, r3, r2
   300ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   300b0:	cmp	r2, r3
   300b4:	bcc	301bc <__assert_fail@plt+0x1f064>
   300b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   300bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   300c0:	sub	r3, r2, r3
   300c4:	str	r3, [fp, #-32]	; 0xffffffe0
   300c8:	b	300f0 <__assert_fail@plt+0x1ef98>
   300cc:	ldr	r2, [fp, #-280]	; 0xfffffee8
   300d0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   300d4:	add	r3, r2, r3
   300d8:	str	r3, [fp, #-280]	; 0xfffffee8
   300dc:	mov	r3, #0
   300e0:	strb	r3, [fp, #-284]	; 0xfffffee4
   300e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   300e8:	sub	r3, r3, #1
   300ec:	str	r3, [fp, #-32]	; 0xffffffe0
   300f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   300f4:	cmp	r3, #0
   300f8:	beq	3013c <__assert_fail@plt+0x1efe4>
   300fc:	sub	r3, fp, #296	; 0x128
   30100:	mov	r0, r3
   30104:	bl	306d8 <__assert_fail@plt+0x1f580>
   30108:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   3010c:	eor	r3, r3, #1
   30110:	uxtb	r3, r3
   30114:	cmp	r3, #0
   30118:	bne	30128 <__assert_fail@plt+0x1efd0>
   3011c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   30120:	cmp	r3, #0
   30124:	beq	30130 <__assert_fail@plt+0x1efd8>
   30128:	mov	r3, #1
   3012c:	b	30134 <__assert_fail@plt+0x1efdc>
   30130:	mov	r3, #0
   30134:	cmp	r3, #0
   30138:	bne	300cc <__assert_fail@plt+0x1ef74>
   3013c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30140:	str	r3, [fp, #-28]	; 0xffffffe4
   30144:	sub	r3, fp, #296	; 0x128
   30148:	mov	r0, r3
   3014c:	bl	306d8 <__assert_fail@plt+0x1f580>
   30150:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   30154:	eor	r3, r3, #1
   30158:	uxtb	r3, r3
   3015c:	cmp	r3, #0
   30160:	bne	30170 <__assert_fail@plt+0x1f018>
   30164:	ldr	r3, [fp, #-268]	; 0xfffffef4
   30168:	cmp	r3, #0
   3016c:	beq	30178 <__assert_fail@plt+0x1f020>
   30170:	mov	r3, #1
   30174:	b	3017c <__assert_fail@plt+0x1f024>
   30178:	mov	r3, #0
   3017c:	cmp	r3, #0
   30180:	bne	301bc <__assert_fail@plt+0x1f064>
   30184:	sub	r3, fp, #68	; 0x44
   30188:	mov	r2, r3
   3018c:	ldr	r1, [fp, #-364]	; 0xfffffe94
   30190:	ldr	r0, [fp, #-360]	; 0xfffffe98
   30194:	bl	2f7c8 <__assert_fail@plt+0x1e670>
   30198:	mov	r3, r0
   3019c:	strb	r3, [fp, #-61]	; 0xffffffc3
   301a0:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   301a4:	cmp	r3, #0
   301a8:	beq	301b4 <__assert_fail@plt+0x1f05c>
   301ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   301b0:	b	306c0 <__assert_fail@plt+0x1f568>
   301b4:	mov	r3, #0
   301b8:	strb	r3, [fp, #-13]
   301bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   301c0:	add	r3, r3, #1
   301c4:	str	r3, [fp, #-20]	; 0xffffffec
   301c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   301cc:	add	r3, r3, #1
   301d0:	str	r3, [fp, #-24]	; 0xffffffe8
   301d4:	ldrb	r3, [fp, #-216]	; 0xffffff28
   301d8:	cmp	r3, #0
   301dc:	beq	30208 <__assert_fail@plt+0x1f0b0>
   301e0:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   301e4:	cmp	r3, #0
   301e8:	beq	30208 <__assert_fail@plt+0x1f0b0>
   301ec:	ldr	r2, [fp, #-212]	; 0xffffff2c
   301f0:	ldr	r3, [fp, #-324]	; 0xfffffebc
   301f4:	cmp	r2, r3
   301f8:	moveq	r3, #1
   301fc:	movne	r3, #0
   30200:	uxtb	r3, r3
   30204:	b	3024c <__assert_fail@plt+0x1f0f4>
   30208:	ldr	r2, [fp, #-220]	; 0xffffff24
   3020c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   30210:	cmp	r2, r3
   30214:	bne	30240 <__assert_fail@plt+0x1f0e8>
   30218:	ldr	r3, [fp, #-224]	; 0xffffff20
   3021c:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   30220:	ldr	r2, [fp, #-220]	; 0xffffff24
   30224:	mov	r0, r3
   30228:	bl	10f18 <memcmp@plt>
   3022c:	mov	r3, r0
   30230:	cmp	r3, #0
   30234:	bne	30240 <__assert_fail@plt+0x1f0e8>
   30238:	mov	r3, #1
   3023c:	b	30244 <__assert_fail@plt+0x1f0ec>
   30240:	mov	r3, #0
   30244:	and	r3, r3, #1
   30248:	uxtb	r3, r3
   3024c:	cmp	r3, #0
   30250:	beq	3048c <__assert_fail@plt+0x1f334>
   30254:	sub	r3, fp, #184	; 0xb8
   30258:	sub	r2, fp, #240	; 0xf0
   3025c:	ldrd	r0, [r2]
   30260:	strd	r0, [r3]
   30264:	ldrd	r0, [r2, #8]
   30268:	strd	r0, [r3, #8]
   3026c:	ldrd	r0, [r2, #16]
   30270:	strd	r0, [r3, #16]
   30274:	ldrd	r0, [r2, #24]
   30278:	strd	r0, [r3, #24]
   3027c:	ldrd	r0, [r2, #32]
   30280:	strd	r0, [r3, #32]
   30284:	ldrd	r0, [r2, #40]	; 0x28
   30288:	strd	r0, [r3, #40]	; 0x28
   3028c:	ldrd	r0, [r2, #48]	; 0x30
   30290:	strd	r0, [r3, #48]	; 0x30
   30294:	ldr	r2, [fp, #-168]	; 0xffffff58
   30298:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3029c:	add	r3, r2, r3
   302a0:	str	r3, [fp, #-168]	; 0xffffff58
   302a4:	mov	r3, #0
   302a8:	strb	r3, [fp, #-172]	; 0xffffff54
   302ac:	ldr	r3, [fp, #-364]	; 0xfffffe94
   302b0:	str	r3, [fp, #-112]	; 0xffffff90
   302b4:	mov	r3, #0
   302b8:	strb	r3, [fp, #-128]	; 0xffffff80
   302bc:	sub	r3, fp, #128	; 0x80
   302c0:	add	r3, r3, #4
   302c4:	mov	r2, #8
   302c8:	mov	r1, #0
   302cc:	mov	r0, r3
   302d0:	bl	11098 <memset@plt>
   302d4:	mov	r3, #0
   302d8:	strb	r3, [fp, #-116]	; 0xffffff8c
   302dc:	sub	r3, fp, #128	; 0x80
   302e0:	mov	r0, r3
   302e4:	bl	306d8 <__assert_fail@plt+0x1f580>
   302e8:	ldrb	r3, [fp, #-104]	; 0xffffff98
   302ec:	eor	r3, r3, #1
   302f0:	uxtb	r3, r3
   302f4:	cmp	r3, #0
   302f8:	bne	30308 <__assert_fail@plt+0x1f1b0>
   302fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   30300:	cmp	r3, #0
   30304:	beq	30310 <__assert_fail@plt+0x1f1b8>
   30308:	mov	r3, #1
   3030c:	b	30314 <__assert_fail@plt+0x1f1bc>
   30310:	mov	r3, #0
   30314:	cmp	r3, #0
   30318:	bne	30320 <__assert_fail@plt+0x1f1c8>
   3031c:	bl	11140 <abort@plt>
   30320:	ldr	r2, [fp, #-112]	; 0xffffff90
   30324:	ldr	r3, [fp, #-108]	; 0xffffff94
   30328:	add	r3, r2, r3
   3032c:	str	r3, [fp, #-112]	; 0xffffff90
   30330:	mov	r3, #0
   30334:	strb	r3, [fp, #-116]	; 0xffffff8c
   30338:	sub	r3, fp, #128	; 0x80
   3033c:	mov	r0, r3
   30340:	bl	306d8 <__assert_fail@plt+0x1f580>
   30344:	ldrb	r3, [fp, #-104]	; 0xffffff98
   30348:	eor	r3, r3, #1
   3034c:	uxtb	r3, r3
   30350:	cmp	r3, #0
   30354:	bne	30364 <__assert_fail@plt+0x1f20c>
   30358:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3035c:	cmp	r3, #0
   30360:	beq	3036c <__assert_fail@plt+0x1f214>
   30364:	mov	r3, #1
   30368:	b	30370 <__assert_fail@plt+0x1f218>
   3036c:	mov	r3, #0
   30370:	cmp	r3, #0
   30374:	bne	30380 <__assert_fail@plt+0x1f228>
   30378:	ldr	r3, [fp, #-224]	; 0xffffff20
   3037c:	b	306c0 <__assert_fail@plt+0x1f568>
   30380:	sub	r3, fp, #184	; 0xb8
   30384:	mov	r0, r3
   30388:	bl	306d8 <__assert_fail@plt+0x1f580>
   3038c:	ldrb	r3, [fp, #-160]	; 0xffffff60
   30390:	eor	r3, r3, #1
   30394:	uxtb	r3, r3
   30398:	cmp	r3, #0
   3039c:	bne	303ac <__assert_fail@plt+0x1f254>
   303a0:	ldr	r3, [fp, #-156]	; 0xffffff64
   303a4:	cmp	r3, #0
   303a8:	beq	303b4 <__assert_fail@plt+0x1f25c>
   303ac:	mov	r3, #1
   303b0:	b	303b8 <__assert_fail@plt+0x1f260>
   303b4:	mov	r3, #0
   303b8:	cmp	r3, #0
   303bc:	bne	303c8 <__assert_fail@plt+0x1f270>
   303c0:	mov	r3, #0
   303c4:	b	306c0 <__assert_fail@plt+0x1f568>
   303c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303cc:	add	r3, r3, #1
   303d0:	str	r3, [fp, #-24]	; 0xffffffe8
   303d4:	ldrb	r3, [fp, #-160]	; 0xffffff60
   303d8:	cmp	r3, #0
   303dc:	beq	30408 <__assert_fail@plt+0x1f2b0>
   303e0:	ldrb	r3, [fp, #-104]	; 0xffffff98
   303e4:	cmp	r3, #0
   303e8:	beq	30408 <__assert_fail@plt+0x1f2b0>
   303ec:	ldr	r2, [fp, #-156]	; 0xffffff64
   303f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   303f4:	cmp	r2, r3
   303f8:	movne	r3, #1
   303fc:	moveq	r3, #0
   30400:	uxtb	r3, r3
   30404:	b	3044c <__assert_fail@plt+0x1f2f4>
   30408:	ldr	r2, [fp, #-164]	; 0xffffff5c
   3040c:	ldr	r3, [fp, #-108]	; 0xffffff94
   30410:	cmp	r2, r3
   30414:	bne	30438 <__assert_fail@plt+0x1f2e0>
   30418:	ldr	r3, [fp, #-168]	; 0xffffff58
   3041c:	ldr	r1, [fp, #-112]	; 0xffffff90
   30420:	ldr	r2, [fp, #-164]	; 0xffffff5c
   30424:	mov	r0, r3
   30428:	bl	10f18 <memcmp@plt>
   3042c:	mov	r3, r0
   30430:	cmp	r3, #0
   30434:	beq	30440 <__assert_fail@plt+0x1f2e8>
   30438:	mov	r3, #1
   3043c:	b	30444 <__assert_fail@plt+0x1f2ec>
   30440:	mov	r3, #0
   30444:	and	r3, r3, #1
   30448:	uxtb	r3, r3
   3044c:	cmp	r3, #0
   30450:	bne	30488 <__assert_fail@plt+0x1f330>
   30454:	ldr	r2, [fp, #-168]	; 0xffffff58
   30458:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3045c:	add	r3, r2, r3
   30460:	str	r3, [fp, #-168]	; 0xffffff58
   30464:	mov	r3, #0
   30468:	strb	r3, [fp, #-172]	; 0xffffff54
   3046c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30470:	ldr	r3, [fp, #-108]	; 0xffffff94
   30474:	add	r3, r2, r3
   30478:	str	r3, [fp, #-112]	; 0xffffff90
   3047c:	mov	r3, #0
   30480:	strb	r3, [fp, #-116]	; 0xffffff8c
   30484:	b	30338 <__assert_fail@plt+0x1f1e0>
   30488:	nop	{0}
   3048c:	ldr	r2, [fp, #-224]	; 0xffffff20
   30490:	ldr	r3, [fp, #-220]	; 0xffffff24
   30494:	add	r3, r2, r3
   30498:	str	r3, [fp, #-224]	; 0xffffff20
   3049c:	mov	r3, #0
   304a0:	strb	r3, [fp, #-228]	; 0xffffff1c
   304a4:	b	3003c <__assert_fail@plt+0x1eee4>
   304a8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   304ac:	b	306c0 <__assert_fail@plt+0x1f568>
   304b0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   304b4:	ldrb	r3, [r3]
   304b8:	cmp	r3, #0
   304bc:	beq	306bc <__assert_fail@plt+0x1f564>
   304c0:	mov	r3, #1
   304c4:	strb	r3, [fp, #-33]	; 0xffffffdf
   304c8:	mov	r3, #0
   304cc:	str	r3, [fp, #-40]	; 0xffffffd8
   304d0:	mov	r3, #0
   304d4:	str	r3, [fp, #-44]	; 0xffffffd4
   304d8:	mov	r3, #0
   304dc:	str	r3, [fp, #-48]	; 0xffffffd0
   304e0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   304e4:	str	r3, [fp, #-52]	; 0xffffffcc
   304e8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   304ec:	add	r2, r3, #1
   304f0:	str	r2, [fp, #-364]	; 0xfffffe94
   304f4:	ldrb	r3, [r3]
   304f8:	strb	r3, [fp, #-62]	; 0xffffffc2
   304fc:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30500:	ldrb	r3, [r3]
   30504:	cmp	r3, #0
   30508:	bne	30514 <__assert_fail@plt+0x1f3bc>
   3050c:	mov	r3, #0
   30510:	b	306c0 <__assert_fail@plt+0x1f568>
   30514:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   30518:	cmp	r3, #0
   3051c:	beq	305f8 <__assert_fail@plt+0x1f4a0>
   30520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30524:	cmp	r3, #9
   30528:	bls	305f8 <__assert_fail@plt+0x1f4a0>
   3052c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30530:	mov	r3, r2
   30534:	lsl	r3, r3, #2
   30538:	add	r3, r3, r2
   3053c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30540:	cmp	r2, r3
   30544:	bcc	305f8 <__assert_fail@plt+0x1f4a0>
   30548:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3054c:	cmp	r3, #0
   30550:	beq	3059c <__assert_fail@plt+0x1f444>
   30554:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3055c:	sub	r3, r2, r3
   30560:	mov	r1, r3
   30564:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30568:	bl	110d4 <strnlen@plt>
   3056c:	mov	r2, r0
   30570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30574:	add	r3, r3, r2
   30578:	str	r3, [fp, #-52]	; 0xffffffcc
   3057c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30580:	ldrb	r3, [r3]
   30584:	cmp	r3, #0
   30588:	bne	30594 <__assert_fail@plt+0x1f43c>
   3058c:	mov	r3, #0
   30590:	str	r3, [fp, #-52]	; 0xffffffcc
   30594:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30598:	str	r3, [fp, #-48]	; 0xffffffd0
   3059c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   305a0:	cmp	r3, #0
   305a4:	bne	305f8 <__assert_fail@plt+0x1f4a0>
   305a8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   305ac:	sub	r4, r3, #1
   305b0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   305b4:	sub	r3, r3, #1
   305b8:	mov	r0, r3
   305bc:	bl	11050 <strlen@plt>
   305c0:	mov	r2, r0
   305c4:	sub	r3, fp, #72	; 0x48
   305c8:	mov	r1, r4
   305cc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   305d0:	bl	2f4d4 <__assert_fail@plt+0x1e37c>
   305d4:	mov	r3, r0
   305d8:	strb	r3, [fp, #-63]	; 0xffffffc1
   305dc:	ldrb	r3, [fp, #-63]	; 0xffffffc1
   305e0:	cmp	r3, #0
   305e4:	beq	305f0 <__assert_fail@plt+0x1f498>
   305e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   305ec:	b	306c0 <__assert_fail@plt+0x1f568>
   305f0:	mov	r3, #0
   305f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   305f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   305fc:	add	r3, r3, #1
   30600:	str	r3, [fp, #-40]	; 0xffffffd8
   30604:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30608:	add	r3, r3, #1
   3060c:	str	r3, [fp, #-44]	; 0xffffffd4
   30610:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30614:	ldrb	r3, [r3]
   30618:	ldrb	r2, [fp, #-62]	; 0xffffffc2
   3061c:	cmp	r2, r3
   30620:	bne	306ac <__assert_fail@plt+0x1f554>
   30624:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30628:	add	r3, r3, #1
   3062c:	str	r3, [fp, #-56]	; 0xffffffc8
   30630:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30634:	str	r3, [fp, #-60]	; 0xffffffc4
   30638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3063c:	ldrb	r3, [r3]
   30640:	cmp	r3, #0
   30644:	bne	30650 <__assert_fail@plt+0x1f4f8>
   30648:	ldr	r3, [fp, #-360]	; 0xfffffe98
   3064c:	b	306c0 <__assert_fail@plt+0x1f568>
   30650:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30654:	ldrb	r3, [r3]
   30658:	cmp	r3, #0
   3065c:	bne	30668 <__assert_fail@plt+0x1f510>
   30660:	mov	r3, #0
   30664:	b	306c0 <__assert_fail@plt+0x1f568>
   30668:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3066c:	add	r3, r3, #1
   30670:	str	r3, [fp, #-44]	; 0xffffffd4
   30674:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30678:	ldrb	r2, [r3]
   3067c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30680:	ldrb	r3, [r3]
   30684:	cmp	r2, r3
   30688:	bne	306a8 <__assert_fail@plt+0x1f550>
   3068c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30690:	add	r3, r3, #1
   30694:	str	r3, [fp, #-56]	; 0xffffffc8
   30698:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3069c:	add	r3, r3, #1
   306a0:	str	r3, [fp, #-60]	; 0xffffffc4
   306a4:	b	30638 <__assert_fail@plt+0x1f4e0>
   306a8:	nop	{0}
   306ac:	ldr	r3, [fp, #-360]	; 0xfffffe98
   306b0:	add	r3, r3, #1
   306b4:	str	r3, [fp, #-360]	; 0xfffffe98
   306b8:	b	304fc <__assert_fail@plt+0x1f3a4>
   306bc:	ldr	r3, [fp, #-360]	; 0xfffffe98
   306c0:	mov	r0, r3
   306c4:	sub	sp, fp, #8
   306c8:	ldr	r4, [sp]
   306cc:	ldr	fp, [sp, #4]
   306d0:	add	sp, sp, #8
   306d4:	pop	{pc}		; (ldr pc, [sp], #4)
   306d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   306dc:	str	r6, [sp, #8]
   306e0:	str	fp, [sp, #12]
   306e4:	str	lr, [sp, #16]
   306e8:	add	fp, sp, #16
   306ec:	sub	sp, sp, #12
   306f0:	str	r0, [fp, #-24]	; 0xffffffe8
   306f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   306f8:	ldrb	r3, [r3, #12]
   306fc:	cmp	r3, #0
   30700:	bne	30934 <__assert_fail@plt+0x1f7dc>
   30704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30708:	ldrb	r3, [r3]
   3070c:	cmp	r3, #0
   30710:	bne	307b4 <__assert_fail@plt+0x1f65c>
   30714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30718:	ldr	r3, [r3, #16]
   3071c:	ldrb	r3, [r3]
   30720:	mov	r0, r3
   30724:	bl	31c44 <__assert_fail@plt+0x20aec>
   30728:	mov	r3, r0
   3072c:	cmp	r3, #0
   30730:	beq	30768 <__assert_fail@plt+0x1f610>
   30734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30738:	mov	r2, #1
   3073c:	str	r2, [r3, #20]
   30740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30744:	ldr	r3, [r3, #16]
   30748:	ldrb	r3, [r3]
   3074c:	mov	r2, r3
   30750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30754:	str	r2, [r3, #28]
   30758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3075c:	mov	r2, #1
   30760:	strb	r2, [r3, #24]
   30764:	b	30924 <__assert_fail@plt+0x1f7cc>
   30768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3076c:	add	r3, r3, #4
   30770:	mov	r0, r3
   30774:	bl	10f0c <mbsinit@plt>
   30778:	mov	r3, r0
   3077c:	cmp	r3, #0
   30780:	bne	307a4 <__assert_fail@plt+0x1f64c>
   30784:	movw	r3, #26088	; 0x65e8
   30788:	movt	r3, #3
   3078c:	mov	r2, #143	; 0x8f
   30790:	movw	r1, #26004	; 0x6594
   30794:	movt	r1, #3
   30798:	movw	r0, #26020	; 0x65a4
   3079c:	movt	r0, #3
   307a0:	bl	11158 <__assert_fail@plt>
   307a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307a8:	mov	r2, #1
   307ac:	strb	r2, [r3]
   307b0:	b	307b8 <__assert_fail@plt+0x1f660>
   307b4:	nop	{0}
   307b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307bc:	add	r4, r3, #28
   307c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307c4:	ldr	r5, [r3, #16]
   307c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307cc:	ldr	r6, [r3, #16]
   307d0:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   307d4:	mov	r3, r0
   307d8:	mov	r1, r3
   307dc:	mov	r0, r6
   307e0:	bl	3134c <__assert_fail@plt+0x201f4>
   307e4:	mov	r2, r0
   307e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307ec:	add	r3, r3, #4
   307f0:	mov	r1, r5
   307f4:	mov	r0, r4
   307f8:	bl	2f41c <__assert_fail@plt+0x1e2c4>
   307fc:	mov	r2, r0
   30800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30804:	str	r2, [r3, #20]
   30808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3080c:	ldr	r3, [r3, #20]
   30810:	cmn	r3, #1
   30814:	bne	30834 <__assert_fail@plt+0x1f6dc>
   30818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3081c:	mov	r2, #1
   30820:	str	r2, [r3, #20]
   30824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30828:	mov	r2, #0
   3082c:	strb	r2, [r3, #24]
   30830:	b	30924 <__assert_fail@plt+0x1f7cc>
   30834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30838:	ldr	r3, [r3, #20]
   3083c:	cmn	r3, #2
   30840:	bne	30870 <__assert_fail@plt+0x1f718>
   30844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30848:	ldr	r3, [r3, #16]
   3084c:	mov	r0, r3
   30850:	bl	11050 <strlen@plt>
   30854:	mov	r2, r0
   30858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3085c:	str	r2, [r3, #20]
   30860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30864:	mov	r2, #0
   30868:	strb	r2, [r3, #24]
   3086c:	b	30924 <__assert_fail@plt+0x1f7cc>
   30870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30874:	ldr	r3, [r3, #20]
   30878:	cmp	r3, #0
   3087c:	bne	308f0 <__assert_fail@plt+0x1f798>
   30880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30884:	mov	r2, #1
   30888:	str	r2, [r3, #20]
   3088c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30890:	ldr	r3, [r3, #16]
   30894:	ldrb	r3, [r3]
   30898:	cmp	r3, #0
   3089c:	beq	308c0 <__assert_fail@plt+0x1f768>
   308a0:	movw	r3, #26088	; 0x65e8
   308a4:	movt	r3, #3
   308a8:	mov	r2, #171	; 0xab
   308ac:	movw	r1, #26004	; 0x6594
   308b0:	movt	r1, #3
   308b4:	movw	r0, #26044	; 0x65bc
   308b8:	movt	r0, #3
   308bc:	bl	11158 <__assert_fail@plt>
   308c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   308c4:	ldr	r3, [r3, #28]
   308c8:	cmp	r3, #0
   308cc:	beq	308f0 <__assert_fail@plt+0x1f798>
   308d0:	movw	r3, #26088	; 0x65e8
   308d4:	movt	r3, #3
   308d8:	mov	r2, #172	; 0xac
   308dc:	movw	r1, #26004	; 0x6594
   308e0:	movt	r1, #3
   308e4:	movw	r0, #26068	; 0x65d4
   308e8:	movt	r0, #3
   308ec:	bl	11158 <__assert_fail@plt>
   308f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   308f4:	mov	r2, #1
   308f8:	strb	r2, [r3, #24]
   308fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30900:	add	r3, r3, #4
   30904:	mov	r0, r3
   30908:	bl	10f0c <mbsinit@plt>
   3090c:	mov	r3, r0
   30910:	cmp	r3, #0
   30914:	beq	30924 <__assert_fail@plt+0x1f7cc>
   30918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3091c:	mov	r2, #0
   30920:	strb	r2, [r3]
   30924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30928:	mov	r2, #1
   3092c:	strb	r2, [r3, #12]
   30930:	b	30938 <__assert_fail@plt+0x1f7e0>
   30934:	nop	{0}
   30938:	sub	sp, fp, #16
   3093c:	ldrd	r4, [sp]
   30940:	ldr	r6, [sp, #8]
   30944:	ldr	fp, [sp, #12]
   30948:	add	sp, sp, #16
   3094c:	pop	{pc}		; (ldr pc, [sp], #4)
   30950:	push	{fp}		; (str fp, [sp, #-4]!)
   30954:	add	fp, sp, #0
   30958:	sub	sp, sp, #12
   3095c:	str	r0, [fp, #-8]
   30960:	str	r1, [fp, #-12]
   30964:	ldr	r3, [fp, #-8]
   30968:	ldr	r2, [r3, #16]
   3096c:	ldr	r3, [fp, #-12]
   30970:	add	r2, r2, r3
   30974:	ldr	r3, [fp, #-8]
   30978:	str	r2, [r3, #16]
   3097c:	nop	{0}
   30980:	add	sp, fp, #0
   30984:	pop	{fp}		; (ldr fp, [sp], #4)
   30988:	bx	lr
   3098c:	str	fp, [sp, #-8]!
   30990:	str	lr, [sp, #4]
   30994:	add	fp, sp, #4
   30998:	sub	sp, sp, #8
   3099c:	str	r0, [fp, #-8]
   309a0:	str	r1, [fp, #-12]
   309a4:	ldr	r3, [fp, #-12]
   309a8:	ldrb	r2, [r3]
   309ac:	ldr	r3, [fp, #-8]
   309b0:	strb	r2, [r3]
   309b4:	ldr	r3, [fp, #-8]
   309b8:	ldrb	r3, [r3]
   309bc:	cmp	r3, #0
   309c0:	beq	309e4 <__assert_fail@plt+0x1f88c>
   309c4:	ldr	r3, [fp, #-8]
   309c8:	add	r0, r3, #4
   309cc:	ldr	r3, [fp, #-12]
   309d0:	add	r3, r3, #4
   309d4:	mov	r2, #8
   309d8:	mov	r1, r3
   309dc:	bl	10f00 <memcpy@plt>
   309e0:	b	309fc <__assert_fail@plt+0x1f8a4>
   309e4:	ldr	r3, [fp, #-8]
   309e8:	add	r3, r3, #4
   309ec:	mov	r2, #8
   309f0:	mov	r1, #0
   309f4:	mov	r0, r3
   309f8:	bl	11098 <memset@plt>
   309fc:	ldr	r3, [fp, #-12]
   30a00:	ldrb	r2, [r3, #12]
   30a04:	ldr	r3, [fp, #-8]
   30a08:	strb	r2, [r3, #12]
   30a0c:	ldr	r3, [fp, #-8]
   30a10:	add	r2, r3, #16
   30a14:	ldr	r3, [fp, #-12]
   30a18:	add	r3, r3, #16
   30a1c:	mov	r1, r3
   30a20:	mov	r0, r2
   30a24:	bl	31b7c <__assert_fail@plt+0x20a24>
   30a28:	nop	{0}
   30a2c:	sub	sp, fp, #4
   30a30:	ldr	fp, [sp]
   30a34:	add	sp, sp, #4
   30a38:	pop	{pc}		; (ldr pc, [sp], #4)
   30a3c:	str	fp, [sp, #-8]!
   30a40:	str	lr, [sp, #4]
   30a44:	add	fp, sp, #4
   30a48:	sub	sp, sp, #24
   30a4c:	str	r0, [fp, #-16]
   30a50:	str	r1, [fp, #-20]	; 0xffffffec
   30a54:	str	r2, [fp, #-24]	; 0xffffffe8
   30a58:	mov	ip, #0
   30a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a64:	umull	r0, r1, r2, r3
   30a68:	mov	r2, #0
   30a6c:	mov	r3, #0
   30a70:	mov	r2, r1
   30a74:	mov	r3, #0
   30a78:	cmp	r2, #0
   30a7c:	beq	30a84 <__assert_fail@plt+0x1f92c>
   30a80:	mov	ip, #1
   30a84:	mov	r3, r0
   30a88:	str	r3, [fp, #-8]
   30a8c:	mov	r3, ip
   30a90:	and	r3, r3, #1
   30a94:	uxtb	r3, r3
   30a98:	cmp	r3, #0
   30a9c:	beq	30ab8 <__assert_fail@plt+0x1f960>
   30aa0:	bl	11074 <__errno_location@plt>
   30aa4:	mov	r2, r0
   30aa8:	mov	r3, #12
   30aac:	str	r3, [r2]
   30ab0:	mov	r3, #0
   30ab4:	b	30acc <__assert_fail@plt+0x1f974>
   30ab8:	ldr	r3, [fp, #-8]
   30abc:	mov	r1, r3
   30ac0:	ldr	r0, [fp, #-16]
   30ac4:	bl	2e9cc <__assert_fail@plt+0x1d874>
   30ac8:	mov	r3, r0
   30acc:	mov	r0, r3
   30ad0:	sub	sp, fp, #4
   30ad4:	ldr	fp, [sp]
   30ad8:	add	sp, sp, #4
   30adc:	pop	{pc}		; (ldr pc, [sp], #4)
   30ae0:	str	fp, [sp, #-8]!
   30ae4:	str	lr, [sp, #4]
   30ae8:	add	fp, sp, #4
   30aec:	sub	sp, sp, #4160	; 0x1040
   30af0:	sub	sp, sp, #32
   30af4:	sub	ip, fp, #4096	; 0x1000
   30af8:	sub	ip, ip, #4
   30afc:	str	r0, [ip, #-76]	; 0xffffffb4
   30b00:	sub	r0, fp, #4096	; 0x1000
   30b04:	sub	r0, r0, #4
   30b08:	str	r1, [r0, #-80]	; 0xffffffb0
   30b0c:	sub	r1, fp, #4096	; 0x1000
   30b10:	sub	r1, r1, #4
   30b14:	str	r2, [r1, #-84]	; 0xffffffac
   30b18:	sub	r2, fp, #4096	; 0x1000
   30b1c:	sub	r2, r2, #4
   30b20:	str	r3, [r2, #-88]	; 0xffffffa8
   30b24:	sub	r3, fp, #4096	; 0x1000
   30b28:	sub	r3, r3, #4
   30b2c:	mov	r0, r3
   30b30:	mov	r3, #0
   30b34:	str	r3, [sp]
   30b38:	mov	r3, #0
   30b3c:	mov	r2, #0
   30b40:	mov	r1, #0
   30b44:	ldr	r0, [r0, #-84]	; 0xffffffac
   30b48:	bl	10ea0 <iconv@plt>
   30b4c:	mov	r3, #0
   30b50:	str	r3, [fp, #-12]
   30b54:	sub	r3, fp, #4096	; 0x1000
   30b58:	sub	r3, r3, #4
   30b5c:	ldr	r3, [r3, #-76]	; 0xffffffb4
   30b60:	str	r3, [fp, #-36]	; 0xffffffdc
   30b64:	sub	r3, fp, #4096	; 0x1000
   30b68:	sub	r3, r3, #4
   30b6c:	ldr	r3, [r3, #-80]	; 0xffffffb0
   30b70:	str	r3, [fp, #-40]	; 0xffffffd8
   30b74:	b	30c20 <__assert_fail@plt+0x1fac8>
   30b78:	sub	r3, fp, #4160	; 0x1040
   30b7c:	sub	r3, r3, #4
   30b80:	sub	r3, r3, #4
   30b84:	str	r3, [fp, #-44]	; 0xffffffd4
   30b88:	mov	r3, #4096	; 0x1000
   30b8c:	str	r3, [fp, #-48]	; 0xffffffd0
   30b90:	sub	ip, fp, #44	; 0x2c
   30b94:	sub	r2, fp, #40	; 0x28
   30b98:	sub	r1, fp, #36	; 0x24
   30b9c:	sub	r3, fp, #4096	; 0x1000
   30ba0:	sub	r3, r3, #4
   30ba4:	mov	r0, r3
   30ba8:	sub	r3, fp, #48	; 0x30
   30bac:	str	r3, [sp]
   30bb0:	mov	r3, ip
   30bb4:	ldr	r0, [r0, #-84]	; 0xffffffac
   30bb8:	bl	10ea0 <iconv@plt>
   30bbc:	str	r0, [fp, #-16]
   30bc0:	ldr	r3, [fp, #-16]
   30bc4:	cmn	r3, #1
   30bc8:	bne	30bfc <__assert_fail@plt+0x1faa4>
   30bcc:	bl	11074 <__errno_location@plt>
   30bd0:	mov	r3, r0
   30bd4:	ldr	r3, [r3]
   30bd8:	cmp	r3, #7
   30bdc:	beq	30bfc <__assert_fail@plt+0x1faa4>
   30be0:	bl	11074 <__errno_location@plt>
   30be4:	mov	r3, r0
   30be8:	ldr	r3, [r3]
   30bec:	cmp	r3, #22
   30bf0:	beq	30c30 <__assert_fail@plt+0x1fad8>
   30bf4:	mvn	r3, #0
   30bf8:	b	30eb8 <__assert_fail@plt+0x1fd60>
   30bfc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30c00:	sub	r3, fp, #4160	; 0x1040
   30c04:	sub	r3, r3, #4
   30c08:	sub	r3, r3, #4
   30c0c:	sub	r3, r2, r3
   30c10:	mov	r2, r3
   30c14:	ldr	r3, [fp, #-12]
   30c18:	add	r3, r3, r2
   30c1c:	str	r3, [fp, #-12]
   30c20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30c24:	cmp	r3, #0
   30c28:	bne	30b78 <__assert_fail@plt+0x1fa20>
   30c2c:	b	30c34 <__assert_fail@plt+0x1fadc>
   30c30:	nop	{0}
   30c34:	sub	r3, fp, #4160	; 0x1040
   30c38:	sub	r3, r3, #4
   30c3c:	sub	r3, r3, #4
   30c40:	str	r3, [fp, #-52]	; 0xffffffcc
   30c44:	mov	r3, #4096	; 0x1000
   30c48:	str	r3, [fp, #-56]	; 0xffffffc8
   30c4c:	sub	r2, fp, #52	; 0x34
   30c50:	sub	r3, fp, #4096	; 0x1000
   30c54:	sub	r3, r3, #4
   30c58:	mov	r0, r3
   30c5c:	sub	r3, fp, #56	; 0x38
   30c60:	str	r3, [sp]
   30c64:	mov	r3, r2
   30c68:	mov	r2, #0
   30c6c:	mov	r1, #0
   30c70:	ldr	r0, [r0, #-84]	; 0xffffffac
   30c74:	bl	10ea0 <iconv@plt>
   30c78:	str	r0, [fp, #-20]	; 0xffffffec
   30c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c80:	cmn	r3, #1
   30c84:	bne	30c90 <__assert_fail@plt+0x1fb38>
   30c88:	mvn	r3, #0
   30c8c:	b	30eb8 <__assert_fail@plt+0x1fd60>
   30c90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   30c94:	sub	r3, fp, #4160	; 0x1040
   30c98:	sub	r3, r3, #4
   30c9c:	sub	r3, r3, #4
   30ca0:	sub	r3, r2, r3
   30ca4:	mov	r2, r3
   30ca8:	ldr	r3, [fp, #-12]
   30cac:	add	r3, r3, r2
   30cb0:	str	r3, [fp, #-12]
   30cb4:	ldr	r3, [fp, #-12]
   30cb8:	str	r3, [fp, #-24]	; 0xffffffe8
   30cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30cc0:	cmp	r3, #0
   30cc4:	bne	30cdc <__assert_fail@plt+0x1fb84>
   30cc8:	ldr	r3, [fp, #4]
   30ccc:	mov	r2, #0
   30cd0:	str	r2, [r3]
   30cd4:	mov	r3, #0
   30cd8:	b	30eb8 <__assert_fail@plt+0x1fd60>
   30cdc:	sub	r3, fp, #4096	; 0x1000
   30ce0:	sub	r3, r3, #4
   30ce4:	ldr	r3, [r3, #-88]	; 0xffffffa8
   30ce8:	ldr	r3, [r3]
   30cec:	cmp	r3, #0
   30cf0:	beq	30d20 <__assert_fail@plt+0x1fbc8>
   30cf4:	ldr	r3, [fp, #4]
   30cf8:	ldr	r3, [r3]
   30cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30d00:	cmp	r2, r3
   30d04:	bhi	30d20 <__assert_fail@plt+0x1fbc8>
   30d08:	sub	r3, fp, #4096	; 0x1000
   30d0c:	sub	r3, r3, #4
   30d10:	ldr	r3, [r3, #-88]	; 0xffffffa8
   30d14:	ldr	r3, [r3]
   30d18:	str	r3, [fp, #-8]
   30d1c:	b	30d54 <__assert_fail@plt+0x1fbfc>
   30d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d24:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   30d28:	mov	r3, r0
   30d2c:	str	r3, [fp, #-8]
   30d30:	ldr	r3, [fp, #-8]
   30d34:	cmp	r3, #0
   30d38:	bne	30d54 <__assert_fail@plt+0x1fbfc>
   30d3c:	bl	11074 <__errno_location@plt>
   30d40:	mov	r2, r0
   30d44:	mov	r3, #12
   30d48:	str	r3, [r2]
   30d4c:	mvn	r3, #0
   30d50:	b	30eb8 <__assert_fail@plt+0x1fd60>
   30d54:	sub	r3, fp, #4096	; 0x1000
   30d58:	sub	r3, r3, #4
   30d5c:	mov	r0, r3
   30d60:	mov	r3, #0
   30d64:	str	r3, [sp]
   30d68:	mov	r3, #0
   30d6c:	mov	r2, #0
   30d70:	mov	r1, #0
   30d74:	ldr	r0, [r0, #-84]	; 0xffffffac
   30d78:	bl	10ea0 <iconv@plt>
   30d7c:	sub	r3, fp, #4096	; 0x1000
   30d80:	sub	r3, r3, #4
   30d84:	ldr	r3, [r3, #-76]	; 0xffffffb4
   30d88:	str	r3, [fp, #-60]	; 0xffffffc4
   30d8c:	sub	r3, fp, #4096	; 0x1000
   30d90:	sub	r3, r3, #4
   30d94:	ldr	r3, [r3, #-80]	; 0xffffffb0
   30d98:	str	r3, [fp, #-64]	; 0xffffffc0
   30d9c:	ldr	r3, [fp, #-8]
   30da0:	str	r3, [fp, #-68]	; 0xffffffbc
   30da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30da8:	str	r3, [fp, #-72]	; 0xffffffb8
   30dac:	b	30e04 <__assert_fail@plt+0x1fcac>
   30db0:	sub	ip, fp, #68	; 0x44
   30db4:	sub	r2, fp, #64	; 0x40
   30db8:	sub	r1, fp, #60	; 0x3c
   30dbc:	sub	r3, fp, #4096	; 0x1000
   30dc0:	sub	r3, r3, #4
   30dc4:	mov	r0, r3
   30dc8:	sub	r3, fp, #72	; 0x48
   30dcc:	str	r3, [sp]
   30dd0:	mov	r3, ip
   30dd4:	ldr	r0, [r0, #-84]	; 0xffffffac
   30dd8:	bl	10ea0 <iconv@plt>
   30ddc:	str	r0, [fp, #-28]	; 0xffffffe4
   30de0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30de4:	cmn	r3, #1
   30de8:	bne	30e04 <__assert_fail@plt+0x1fcac>
   30dec:	bl	11074 <__errno_location@plt>
   30df0:	mov	r3, r0
   30df4:	ldr	r3, [r3]
   30df8:	cmp	r3, #22
   30dfc:	bne	30e84 <__assert_fail@plt+0x1fd2c>
   30e00:	b	30e10 <__assert_fail@plt+0x1fcb8>
   30e04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30e08:	cmp	r3, #0
   30e0c:	bne	30db0 <__assert_fail@plt+0x1fc58>
   30e10:	sub	r2, fp, #68	; 0x44
   30e14:	sub	r3, fp, #4096	; 0x1000
   30e18:	sub	r3, r3, #4
   30e1c:	mov	r0, r3
   30e20:	sub	r3, fp, #72	; 0x48
   30e24:	str	r3, [sp]
   30e28:	mov	r3, r2
   30e2c:	mov	r2, #0
   30e30:	mov	r1, #0
   30e34:	ldr	r0, [r0, #-84]	; 0xffffffac
   30e38:	bl	10ea0 <iconv@plt>
   30e3c:	str	r0, [fp, #-32]	; 0xffffffe0
   30e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30e44:	cmn	r3, #1
   30e48:	beq	30e8c <__assert_fail@plt+0x1fd34>
   30e4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   30e50:	cmp	r3, #0
   30e54:	beq	30e5c <__assert_fail@plt+0x1fd04>
   30e58:	bl	11140 <abort@plt>
   30e5c:	sub	r3, fp, #4096	; 0x1000
   30e60:	sub	r3, r3, #4
   30e64:	ldr	r3, [r3, #-88]	; 0xffffffa8
   30e68:	ldr	r2, [fp, #-8]
   30e6c:	str	r2, [r3]
   30e70:	ldr	r3, [fp, #4]
   30e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30e78:	str	r2, [r3]
   30e7c:	mov	r3, #0
   30e80:	b	30eb8 <__assert_fail@plt+0x1fd60>
   30e84:	nop	{0}
   30e88:	b	30e90 <__assert_fail@plt+0x1fd38>
   30e8c:	nop	{0}
   30e90:	sub	r3, fp, #4096	; 0x1000
   30e94:	sub	r3, r3, #4
   30e98:	ldr	r3, [r3, #-88]	; 0xffffffa8
   30e9c:	ldr	r3, [r3]
   30ea0:	ldr	r2, [fp, #-8]
   30ea4:	cmp	r2, r3
   30ea8:	beq	30eb4 <__assert_fail@plt+0x1fd5c>
   30eac:	ldr	r0, [fp, #-8]
   30eb0:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   30eb4:	mvn	r3, #0
   30eb8:	mov	r0, r3
   30ebc:	sub	sp, fp, #4
   30ec0:	ldr	fp, [sp]
   30ec4:	add	sp, sp, #4
   30ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   30ecc:	str	fp, [sp, #-8]!
   30ed0:	str	lr, [sp, #4]
   30ed4:	add	fp, sp, #4
   30ed8:	sub	sp, sp, #88	; 0x58
   30edc:	str	r0, [fp, #-80]	; 0xffffffb0
   30ee0:	str	r1, [fp, #-84]	; 0xffffffac
   30ee4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   30ee8:	str	r3, [fp, #-60]	; 0xffffffc4
   30eec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   30ef0:	bl	11050 <strlen@plt>
   30ef4:	mov	r3, r0
   30ef8:	str	r3, [fp, #-64]	; 0xffffffc0
   30efc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   30f00:	str	r3, [fp, #-12]
   30f04:	movw	r3, #65535	; 0xffff
   30f08:	str	r3, [fp, #-16]
   30f0c:	ldr	r3, [fp, #-16]
   30f10:	lsr	r3, r3, #4
   30f14:	ldr	r2, [fp, #-12]
   30f18:	cmp	r2, r3
   30f1c:	bhi	30f2c <__assert_fail@plt+0x1fdd4>
   30f20:	ldr	r3, [fp, #-12]
   30f24:	lsl	r3, r3, #4
   30f28:	str	r3, [fp, #-12]
   30f2c:	ldr	r3, [fp, #-12]
   30f30:	add	r3, r3, #1
   30f34:	str	r3, [fp, #-12]
   30f38:	ldr	r0, [fp, #-12]
   30f3c:	bl	2e93c <__assert_fail@plt+0x1d7e4>
   30f40:	mov	r3, r0
   30f44:	str	r3, [fp, #-8]
   30f48:	ldr	r3, [fp, #-8]
   30f4c:	cmp	r3, #0
   30f50:	bne	30f6c <__assert_fail@plt+0x1fe14>
   30f54:	bl	11074 <__errno_location@plt>
   30f58:	mov	r2, r0
   30f5c:	mov	r3, #12
   30f60:	str	r3, [r2]
   30f64:	mov	r3, #0
   30f68:	b	31214 <__assert_fail@plt+0x200bc>
   30f6c:	mov	r3, #0
   30f70:	str	r3, [sp]
   30f74:	mov	r3, #0
   30f78:	mov	r2, #0
   30f7c:	mov	r1, #0
   30f80:	ldr	r0, [fp, #-84]	; 0xffffffac
   30f84:	bl	10ea0 <iconv@plt>
   30f88:	ldr	r3, [fp, #-8]
   30f8c:	str	r3, [fp, #-68]	; 0xffffffbc
   30f90:	ldr	r3, [fp, #-12]
   30f94:	sub	r3, r3, #1
   30f98:	str	r3, [fp, #-72]	; 0xffffffb8
   30f9c:	sub	r0, fp, #68	; 0x44
   30fa0:	sub	r2, fp, #64	; 0x40
   30fa4:	sub	r1, fp, #60	; 0x3c
   30fa8:	sub	r3, fp, #72	; 0x48
   30fac:	str	r3, [sp]
   30fb0:	mov	r3, r0
   30fb4:	ldr	r0, [fp, #-84]	; 0xffffffac
   30fb8:	bl	10ea0 <iconv@plt>
   30fbc:	str	r0, [fp, #-20]	; 0xffffffec
   30fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   30fc4:	cmn	r3, #1
   30fc8:	bne	3109c <__assert_fail@plt+0x1ff44>
   30fcc:	bl	11074 <__errno_location@plt>
   30fd0:	mov	r3, r0
   30fd4:	ldr	r3, [r3]
   30fd8:	cmp	r3, #22
   30fdc:	beq	310a4 <__assert_fail@plt+0x1ff4c>
   30fe0:	bl	11074 <__errno_location@plt>
   30fe4:	mov	r3, r0
   30fe8:	ldr	r3, [r3]
   30fec:	cmp	r3, #7
   30ff0:	bne	311d0 <__assert_fail@plt+0x20078>
   30ff4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   30ff8:	ldr	r3, [fp, #-8]
   30ffc:	sub	r3, r2, r3
   31000:	str	r3, [fp, #-24]	; 0xffffffe8
   31004:	ldr	r3, [fp, #-12]
   31008:	lsl	r3, r3, #1
   3100c:	str	r3, [fp, #-28]	; 0xffffffe4
   31010:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31014:	ldr	r3, [fp, #-12]
   31018:	cmp	r2, r3
   3101c:	bhi	31034 <__assert_fail@plt+0x1fedc>
   31020:	bl	11074 <__errno_location@plt>
   31024:	mov	r2, r0
   31028:	mov	r3, #12
   3102c:	str	r3, [r2]
   31030:	b	311dc <__assert_fail@plt+0x20084>
   31034:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31038:	ldr	r0, [fp, #-8]
   3103c:	bl	2e9cc <__assert_fail@plt+0x1d874>
   31040:	str	r0, [fp, #-32]	; 0xffffffe0
   31044:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31048:	cmp	r3, #0
   3104c:	bne	31064 <__assert_fail@plt+0x1ff0c>
   31050:	bl	11074 <__errno_location@plt>
   31054:	mov	r2, r0
   31058:	mov	r3, #12
   3105c:	str	r3, [r2]
   31060:	b	311dc <__assert_fail@plt+0x20084>
   31064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31068:	str	r3, [fp, #-8]
   3106c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31070:	str	r3, [fp, #-12]
   31074:	ldr	r2, [fp, #-8]
   31078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3107c:	add	r3, r2, r3
   31080:	str	r3, [fp, #-68]	; 0xffffffbc
   31084:	ldr	r2, [fp, #-12]
   31088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3108c:	sub	r3, r2, r3
   31090:	sub	r3, r3, #1
   31094:	str	r3, [fp, #-72]	; 0xffffffb8
   31098:	b	30f9c <__assert_fail@plt+0x1fe44>
   3109c:	nop	{0}
   310a0:	b	310a8 <__assert_fail@plt+0x1ff50>
   310a4:	nop	{0}
   310a8:	sub	r2, fp, #68	; 0x44
   310ac:	sub	r3, fp, #72	; 0x48
   310b0:	str	r3, [sp]
   310b4:	mov	r3, r2
   310b8:	mov	r2, #0
   310bc:	mov	r1, #0
   310c0:	ldr	r0, [fp, #-84]	; 0xffffffac
   310c4:	bl	10ea0 <iconv@plt>
   310c8:	str	r0, [fp, #-36]	; 0xffffffdc
   310cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   310d0:	cmn	r3, #1
   310d4:	bne	31194 <__assert_fail@plt+0x2003c>
   310d8:	bl	11074 <__errno_location@plt>
   310dc:	mov	r3, r0
   310e0:	ldr	r3, [r3]
   310e4:	cmp	r3, #7
   310e8:	bne	311d8 <__assert_fail@plt+0x20080>
   310ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   310f0:	ldr	r3, [fp, #-8]
   310f4:	sub	r3, r2, r3
   310f8:	str	r3, [fp, #-40]	; 0xffffffd8
   310fc:	ldr	r3, [fp, #-12]
   31100:	lsl	r3, r3, #1
   31104:	str	r3, [fp, #-44]	; 0xffffffd4
   31108:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3110c:	ldr	r3, [fp, #-12]
   31110:	cmp	r2, r3
   31114:	bhi	3112c <__assert_fail@plt+0x1ffd4>
   31118:	bl	11074 <__errno_location@plt>
   3111c:	mov	r2, r0
   31120:	mov	r3, #12
   31124:	str	r3, [r2]
   31128:	b	311dc <__assert_fail@plt+0x20084>
   3112c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31130:	ldr	r0, [fp, #-8]
   31134:	bl	2e9cc <__assert_fail@plt+0x1d874>
   31138:	str	r0, [fp, #-48]	; 0xffffffd0
   3113c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31140:	cmp	r3, #0
   31144:	bne	3115c <__assert_fail@plt+0x20004>
   31148:	bl	11074 <__errno_location@plt>
   3114c:	mov	r2, r0
   31150:	mov	r3, #12
   31154:	str	r3, [r2]
   31158:	b	311dc <__assert_fail@plt+0x20084>
   3115c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31160:	str	r3, [fp, #-8]
   31164:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31168:	str	r3, [fp, #-12]
   3116c:	ldr	r2, [fp, #-8]
   31170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31174:	add	r3, r2, r3
   31178:	str	r3, [fp, #-68]	; 0xffffffbc
   3117c:	ldr	r2, [fp, #-12]
   31180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31184:	sub	r3, r2, r3
   31188:	sub	r3, r3, #1
   3118c:	str	r3, [fp, #-72]	; 0xffffffb8
   31190:	b	310a8 <__assert_fail@plt+0x1ff50>
   31194:	nop	{0}
   31198:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3119c:	add	r2, r3, #1
   311a0:	str	r2, [fp, #-68]	; 0xffffffbc
   311a4:	mov	r2, #0
   311a8:	strb	r2, [r3]
   311ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   311b0:	ldr	r3, [fp, #-8]
   311b4:	sub	r3, r2, r3
   311b8:	str	r3, [fp, #-52]	; 0xffffffcc
   311bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   311c0:	ldr	r3, [fp, #-12]
   311c4:	cmp	r2, r3
   311c8:	bcc	311ec <__assert_fail@plt+0x20094>
   311cc:	b	31210 <__assert_fail@plt+0x200b8>
   311d0:	nop	{0}
   311d4:	b	311dc <__assert_fail@plt+0x20084>
   311d8:	nop	{0}
   311dc:	ldr	r0, [fp, #-8]
   311e0:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   311e4:	mov	r3, #0
   311e8:	b	31214 <__assert_fail@plt+0x200bc>
   311ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   311f0:	ldr	r0, [fp, #-8]
   311f4:	bl	2e9cc <__assert_fail@plt+0x1d874>
   311f8:	str	r0, [fp, #-56]	; 0xffffffc8
   311fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   31200:	cmp	r3, #0
   31204:	beq	31210 <__assert_fail@plt+0x200b8>
   31208:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3120c:	str	r3, [fp, #-8]
   31210:	ldr	r3, [fp, #-8]
   31214:	mov	r0, r3
   31218:	sub	sp, fp, #4
   3121c:	ldr	fp, [sp]
   31220:	add	sp, sp, #4
   31224:	pop	{pc}		; (ldr pc, [sp], #4)
   31228:	str	fp, [sp, #-8]!
   3122c:	str	lr, [sp, #4]
   31230:	add	fp, sp, #4
   31234:	sub	sp, sp, #32
   31238:	str	r0, [fp, #-24]	; 0xffffffe8
   3123c:	str	r1, [fp, #-28]	; 0xffffffe4
   31240:	str	r2, [fp, #-32]	; 0xffffffe0
   31244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31248:	ldrb	r3, [r3]
   3124c:	cmp	r3, #0
   31250:	beq	3126c <__assert_fail@plt+0x20114>
   31254:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3125c:	bl	2ea84 <__assert_fail@plt+0x1d92c>
   31260:	mov	r3, r0
   31264:	cmp	r3, #0
   31268:	bne	312a0 <__assert_fail@plt+0x20148>
   3126c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31270:	bl	10f3c <strdup@plt>
   31274:	mov	r3, r0
   31278:	str	r3, [fp, #-20]	; 0xffffffec
   3127c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31280:	cmp	r3, #0
   31284:	bne	31298 <__assert_fail@plt+0x20140>
   31288:	bl	11074 <__errno_location@plt>
   3128c:	mov	r2, r0
   31290:	mov	r3, #12
   31294:	str	r3, [r2]
   31298:	ldr	r3, [fp, #-20]	; 0xffffffec
   3129c:	b	31338 <__assert_fail@plt+0x201e0>
   312a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   312a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   312a8:	bl	10fe4 <iconv_open@plt>
   312ac:	str	r0, [fp, #-8]
   312b0:	ldr	r3, [fp, #-8]
   312b4:	cmn	r3, #1
   312b8:	bne	312c4 <__assert_fail@plt+0x2016c>
   312bc:	mov	r3, #0
   312c0:	b	31338 <__assert_fail@plt+0x201e0>
   312c4:	ldr	r1, [fp, #-8]
   312c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   312cc:	bl	30ecc <__assert_fail@plt+0x1fd74>
   312d0:	mov	r3, r0
   312d4:	str	r3, [fp, #-12]
   312d8:	ldr	r3, [fp, #-12]
   312dc:	cmp	r3, #0
   312e0:	bne	31310 <__assert_fail@plt+0x201b8>
   312e4:	bl	11074 <__errno_location@plt>
   312e8:	mov	r3, r0
   312ec:	ldr	r3, [r3]
   312f0:	str	r3, [fp, #-16]
   312f4:	ldr	r0, [fp, #-8]
   312f8:	bl	10e94 <iconv_close@plt>
   312fc:	bl	11074 <__errno_location@plt>
   31300:	mov	r2, r0
   31304:	ldr	r3, [fp, #-16]
   31308:	str	r3, [r2]
   3130c:	b	31334 <__assert_fail@plt+0x201dc>
   31310:	ldr	r0, [fp, #-8]
   31314:	bl	10e94 <iconv_close@plt>
   31318:	mov	r3, r0
   3131c:	cmp	r3, #0
   31320:	bge	31334 <__assert_fail@plt+0x201dc>
   31324:	ldr	r0, [fp, #-12]
   31328:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   3132c:	mov	r3, #0
   31330:	b	31338 <__assert_fail@plt+0x201e0>
   31334:	ldr	r3, [fp, #-12]
   31338:	mov	r0, r3
   3133c:	sub	sp, fp, #4
   31340:	ldr	fp, [sp]
   31344:	add	sp, sp, #4
   31348:	pop	{pc}		; (ldr pc, [sp], #4)
   3134c:	str	fp, [sp, #-8]!
   31350:	str	lr, [sp, #4]
   31354:	add	fp, sp, #4
   31358:	sub	sp, sp, #16
   3135c:	str	r0, [fp, #-16]
   31360:	str	r1, [fp, #-20]	; 0xffffffec
   31364:	ldr	r2, [fp, #-20]	; 0xffffffec
   31368:	mov	r1, #0
   3136c:	ldr	r0, [fp, #-16]
   31370:	bl	110bc <memchr@plt>
   31374:	str	r0, [fp, #-8]
   31378:	ldr	r3, [fp, #-8]
   3137c:	cmp	r3, #0
   31380:	beq	31398 <__assert_fail@plt+0x20240>
   31384:	ldr	r2, [fp, #-8]
   31388:	ldr	r3, [fp, #-16]
   3138c:	sub	r3, r2, r3
   31390:	add	r3, r3, #1
   31394:	b	3139c <__assert_fail@plt+0x20244>
   31398:	ldr	r3, [fp, #-20]	; 0xffffffec
   3139c:	mov	r0, r3
   313a0:	sub	sp, fp, #4
   313a4:	ldr	fp, [sp]
   313a8:	add	sp, sp, #4
   313ac:	pop	{pc}		; (ldr pc, [sp], #4)
   313b0:	push	{fp}		; (str fp, [sp, #-4]!)
   313b4:	add	fp, sp, #0
   313b8:	sub	sp, sp, #12
   313bc:	str	r0, [fp, #-8]
   313c0:	ldr	r3, [fp, #-8]
   313c4:	cmp	r3, #90	; 0x5a
   313c8:	bgt	313ec <__assert_fail@plt+0x20294>
   313cc:	ldr	r3, [fp, #-8]
   313d0:	cmp	r3, #65	; 0x41
   313d4:	bge	313fc <__assert_fail@plt+0x202a4>
   313d8:	ldr	r3, [fp, #-8]
   313dc:	sub	r3, r3, #48	; 0x30
   313e0:	cmp	r3, #9
   313e4:	bhi	31404 <__assert_fail@plt+0x202ac>
   313e8:	b	313fc <__assert_fail@plt+0x202a4>
   313ec:	ldr	r3, [fp, #-8]
   313f0:	sub	r3, r3, #97	; 0x61
   313f4:	cmp	r3, #25
   313f8:	bhi	31404 <__assert_fail@plt+0x202ac>
   313fc:	mov	r3, #1
   31400:	b	31408 <__assert_fail@plt+0x202b0>
   31404:	mov	r3, #0
   31408:	mov	r0, r3
   3140c:	add	sp, fp, #0
   31410:	pop	{fp}		; (ldr fp, [sp], #4)
   31414:	bx	lr
   31418:	push	{fp}		; (str fp, [sp, #-4]!)
   3141c:	add	fp, sp, #0
   31420:	sub	sp, sp, #12
   31424:	str	r0, [fp, #-8]
   31428:	ldr	r3, [fp, #-8]
   3142c:	cmp	r3, #65	; 0x41
   31430:	blt	31458 <__assert_fail@plt+0x20300>
   31434:	ldr	r3, [fp, #-8]
   31438:	cmp	r3, #90	; 0x5a
   3143c:	ble	31450 <__assert_fail@plt+0x202f8>
   31440:	ldr	r3, [fp, #-8]
   31444:	sub	r3, r3, #97	; 0x61
   31448:	cmp	r3, #25
   3144c:	bhi	31458 <__assert_fail@plt+0x20300>
   31450:	mov	r3, #1
   31454:	b	3145c <__assert_fail@plt+0x20304>
   31458:	mov	r3, #0
   3145c:	mov	r0, r3
   31460:	add	sp, fp, #0
   31464:	pop	{fp}		; (ldr fp, [sp], #4)
   31468:	bx	lr
   3146c:	push	{fp}		; (str fp, [sp, #-4]!)
   31470:	add	fp, sp, #0
   31474:	sub	sp, sp, #12
   31478:	str	r0, [fp, #-8]
   3147c:	ldr	r3, [fp, #-8]
   31480:	cmp	r3, #127	; 0x7f
   31484:	bhi	31490 <__assert_fail@plt+0x20338>
   31488:	mov	r3, #1
   3148c:	b	31494 <__assert_fail@plt+0x2033c>
   31490:	mov	r3, #0
   31494:	mov	r0, r3
   31498:	add	sp, fp, #0
   3149c:	pop	{fp}		; (ldr fp, [sp], #4)
   314a0:	bx	lr
   314a4:	push	{fp}		; (str fp, [sp, #-4]!)
   314a8:	add	fp, sp, #0
   314ac:	sub	sp, sp, #12
   314b0:	str	r0, [fp, #-8]
   314b4:	ldr	r3, [fp, #-8]
   314b8:	cmp	r3, #32
   314bc:	beq	314cc <__assert_fail@plt+0x20374>
   314c0:	ldr	r3, [fp, #-8]
   314c4:	cmp	r3, #9
   314c8:	bne	314d4 <__assert_fail@plt+0x2037c>
   314cc:	mov	r3, #1
   314d0:	b	314d8 <__assert_fail@plt+0x20380>
   314d4:	mov	r3, #0
   314d8:	and	r3, r3, #1
   314dc:	uxtb	r3, r3
   314e0:	mov	r0, r3
   314e4:	add	sp, fp, #0
   314e8:	pop	{fp}		; (ldr fp, [sp], #4)
   314ec:	bx	lr
   314f0:	push	{fp}		; (str fp, [sp, #-4]!)
   314f4:	add	fp, sp, #0
   314f8:	sub	sp, sp, #12
   314fc:	str	r0, [fp, #-8]
   31500:	ldr	r3, [fp, #-8]
   31504:	cmp	r3, #0
   31508:	blt	3152c <__assert_fail@plt+0x203d4>
   3150c:	ldr	r3, [fp, #-8]
   31510:	cmp	r3, #31
   31514:	ble	31524 <__assert_fail@plt+0x203cc>
   31518:	ldr	r3, [fp, #-8]
   3151c:	cmp	r3, #127	; 0x7f
   31520:	bne	3152c <__assert_fail@plt+0x203d4>
   31524:	mov	r3, #1
   31528:	b	31530 <__assert_fail@plt+0x203d8>
   3152c:	mov	r3, #0
   31530:	mov	r0, r3
   31534:	add	sp, fp, #0
   31538:	pop	{fp}		; (ldr fp, [sp], #4)
   3153c:	bx	lr
   31540:	push	{fp}		; (str fp, [sp, #-4]!)
   31544:	add	fp, sp, #0
   31548:	sub	sp, sp, #12
   3154c:	str	r0, [fp, #-8]
   31550:	ldr	r3, [fp, #-8]
   31554:	sub	r3, r3, #48	; 0x30
   31558:	cmp	r3, #9
   3155c:	bhi	31568 <__assert_fail@plt+0x20410>
   31560:	mov	r3, #1
   31564:	b	3156c <__assert_fail@plt+0x20414>
   31568:	mov	r3, #0
   3156c:	mov	r0, r3
   31570:	add	sp, fp, #0
   31574:	pop	{fp}		; (ldr fp, [sp], #4)
   31578:	bx	lr
   3157c:	push	{fp}		; (str fp, [sp, #-4]!)
   31580:	add	fp, sp, #0
   31584:	sub	sp, sp, #12
   31588:	str	r0, [fp, #-8]
   3158c:	ldr	r3, [fp, #-8]
   31590:	sub	r3, r3, #33	; 0x21
   31594:	cmp	r3, #93	; 0x5d
   31598:	bhi	315a4 <__assert_fail@plt+0x2044c>
   3159c:	mov	r3, #1
   315a0:	b	315a8 <__assert_fail@plt+0x20450>
   315a4:	mov	r3, #0
   315a8:	mov	r0, r3
   315ac:	add	sp, fp, #0
   315b0:	pop	{fp}		; (ldr fp, [sp], #4)
   315b4:	bx	lr
   315b8:	push	{fp}		; (str fp, [sp, #-4]!)
   315bc:	add	fp, sp, #0
   315c0:	sub	sp, sp, #12
   315c4:	str	r0, [fp, #-8]
   315c8:	ldr	r3, [fp, #-8]
   315cc:	sub	r3, r3, #97	; 0x61
   315d0:	cmp	r3, #25
   315d4:	bhi	315e0 <__assert_fail@plt+0x20488>
   315d8:	mov	r3, #1
   315dc:	b	315e4 <__assert_fail@plt+0x2048c>
   315e0:	mov	r3, #0
   315e4:	mov	r0, r3
   315e8:	add	sp, fp, #0
   315ec:	pop	{fp}		; (ldr fp, [sp], #4)
   315f0:	bx	lr
   315f4:	push	{fp}		; (str fp, [sp, #-4]!)
   315f8:	add	fp, sp, #0
   315fc:	sub	sp, sp, #12
   31600:	str	r0, [fp, #-8]
   31604:	ldr	r3, [fp, #-8]
   31608:	sub	r3, r3, #32
   3160c:	cmp	r3, #94	; 0x5e
   31610:	bhi	3161c <__assert_fail@plt+0x204c4>
   31614:	mov	r3, #1
   31618:	b	31620 <__assert_fail@plt+0x204c8>
   3161c:	mov	r3, #0
   31620:	mov	r0, r3
   31624:	add	sp, fp, #0
   31628:	pop	{fp}		; (ldr fp, [sp], #4)
   3162c:	bx	lr
   31630:	push	{fp}		; (str fp, [sp, #-4]!)
   31634:	add	fp, sp, #0
   31638:	sub	sp, sp, #12
   3163c:	str	r0, [fp, #-8]
   31640:	ldr	r3, [fp, #-8]
   31644:	cmp	r3, #64	; 0x40
   31648:	bgt	3166c <__assert_fail@plt+0x20514>
   3164c:	ldr	r3, [fp, #-8]
   31650:	cmp	r3, #58	; 0x3a
   31654:	bge	31694 <__assert_fail@plt+0x2053c>
   31658:	ldr	r3, [fp, #-8]
   3165c:	sub	r3, r3, #33	; 0x21
   31660:	cmp	r3, #14
   31664:	bhi	3169c <__assert_fail@plt+0x20544>
   31668:	b	31694 <__assert_fail@plt+0x2053c>
   3166c:	ldr	r3, [fp, #-8]
   31670:	cmp	r3, #91	; 0x5b
   31674:	blt	3169c <__assert_fail@plt+0x20544>
   31678:	ldr	r3, [fp, #-8]
   3167c:	cmp	r3, #96	; 0x60
   31680:	ble	31694 <__assert_fail@plt+0x2053c>
   31684:	ldr	r3, [fp, #-8]
   31688:	sub	r3, r3, #123	; 0x7b
   3168c:	cmp	r3, #3
   31690:	bhi	3169c <__assert_fail@plt+0x20544>
   31694:	mov	r3, #1
   31698:	b	316a0 <__assert_fail@plt+0x20548>
   3169c:	mov	r3, #0
   316a0:	mov	r0, r3
   316a4:	add	sp, fp, #0
   316a8:	pop	{fp}		; (ldr fp, [sp], #4)
   316ac:	bx	lr
   316b0:	push	{fp}		; (str fp, [sp, #-4]!)
   316b4:	add	fp, sp, #0
   316b8:	sub	sp, sp, #12
   316bc:	str	r0, [fp, #-8]
   316c0:	ldr	r3, [fp, #-8]
   316c4:	cmp	r3, #9
   316c8:	blt	316ec <__assert_fail@plt+0x20594>
   316cc:	ldr	r3, [fp, #-8]
   316d0:	cmp	r3, #13
   316d4:	ble	316e4 <__assert_fail@plt+0x2058c>
   316d8:	ldr	r3, [fp, #-8]
   316dc:	cmp	r3, #32
   316e0:	bne	316ec <__assert_fail@plt+0x20594>
   316e4:	mov	r3, #1
   316e8:	b	316f0 <__assert_fail@plt+0x20598>
   316ec:	mov	r3, #0
   316f0:	mov	r0, r3
   316f4:	add	sp, fp, #0
   316f8:	pop	{fp}		; (ldr fp, [sp], #4)
   316fc:	bx	lr
   31700:	push	{fp}		; (str fp, [sp, #-4]!)
   31704:	add	fp, sp, #0
   31708:	sub	sp, sp, #12
   3170c:	str	r0, [fp, #-8]
   31710:	ldr	r3, [fp, #-8]
   31714:	sub	r3, r3, #65	; 0x41
   31718:	cmp	r3, #25
   3171c:	bhi	31728 <__assert_fail@plt+0x205d0>
   31720:	mov	r3, #1
   31724:	b	3172c <__assert_fail@plt+0x205d4>
   31728:	mov	r3, #0
   3172c:	mov	r0, r3
   31730:	add	sp, fp, #0
   31734:	pop	{fp}		; (ldr fp, [sp], #4)
   31738:	bx	lr
   3173c:	push	{fp}		; (str fp, [sp, #-4]!)
   31740:	add	fp, sp, #0
   31744:	sub	sp, sp, #12
   31748:	str	r0, [fp, #-8]
   3174c:	ldr	r3, [fp, #-8]
   31750:	sub	r3, r3, #48	; 0x30
   31754:	cmp	r3, #54	; 0x36
   31758:	ldrls	pc, [pc, r3, lsl #2]
   3175c:	b	31844 <__assert_fail@plt+0x206ec>
   31760:	andeq	r1, r3, ip, lsr r8
   31764:	andeq	r1, r3, ip, lsr r8
   31768:	andeq	r1, r3, ip, lsr r8
   3176c:	andeq	r1, r3, ip, lsr r8
   31770:	andeq	r1, r3, ip, lsr r8
   31774:	andeq	r1, r3, ip, lsr r8
   31778:	andeq	r1, r3, ip, lsr r8
   3177c:	andeq	r1, r3, ip, lsr r8
   31780:	andeq	r1, r3, ip, lsr r8
   31784:	andeq	r1, r3, ip, lsr r8
   31788:	andeq	r1, r3, r4, asr #16
   3178c:	andeq	r1, r3, r4, asr #16
   31790:	andeq	r1, r3, r4, asr #16
   31794:	andeq	r1, r3, r4, asr #16
   31798:	andeq	r1, r3, r4, asr #16
   3179c:	andeq	r1, r3, r4, asr #16
   317a0:	andeq	r1, r3, r4, asr #16
   317a4:	andeq	r1, r3, ip, lsr r8
   317a8:	andeq	r1, r3, ip, lsr r8
   317ac:	andeq	r1, r3, ip, lsr r8
   317b0:	andeq	r1, r3, ip, lsr r8
   317b4:	andeq	r1, r3, ip, lsr r8
   317b8:	andeq	r1, r3, ip, lsr r8
   317bc:	andeq	r1, r3, r4, asr #16
   317c0:	andeq	r1, r3, r4, asr #16
   317c4:	andeq	r1, r3, r4, asr #16
   317c8:	andeq	r1, r3, r4, asr #16
   317cc:	andeq	r1, r3, r4, asr #16
   317d0:	andeq	r1, r3, r4, asr #16
   317d4:	andeq	r1, r3, r4, asr #16
   317d8:	andeq	r1, r3, r4, asr #16
   317dc:	andeq	r1, r3, r4, asr #16
   317e0:	andeq	r1, r3, r4, asr #16
   317e4:	andeq	r1, r3, r4, asr #16
   317e8:	andeq	r1, r3, r4, asr #16
   317ec:	andeq	r1, r3, r4, asr #16
   317f0:	andeq	r1, r3, r4, asr #16
   317f4:	andeq	r1, r3, r4, asr #16
   317f8:	andeq	r1, r3, r4, asr #16
   317fc:	andeq	r1, r3, r4, asr #16
   31800:	andeq	r1, r3, r4, asr #16
   31804:	andeq	r1, r3, r4, asr #16
   31808:	andeq	r1, r3, r4, asr #16
   3180c:	andeq	r1, r3, r4, asr #16
   31810:	andeq	r1, r3, r4, asr #16
   31814:	andeq	r1, r3, r4, asr #16
   31818:	andeq	r1, r3, r4, asr #16
   3181c:	andeq	r1, r3, r4, asr #16
   31820:	andeq	r1, r3, r4, asr #16
   31824:	andeq	r1, r3, ip, lsr r8
   31828:	andeq	r1, r3, ip, lsr r8
   3182c:	andeq	r1, r3, ip, lsr r8
   31830:	andeq	r1, r3, ip, lsr r8
   31834:	andeq	r1, r3, ip, lsr r8
   31838:	andeq	r1, r3, ip, lsr r8
   3183c:	mov	r3, #1
   31840:	b	31848 <__assert_fail@plt+0x206f0>
   31844:	mov	r3, #0
   31848:	mov	r0, r3
   3184c:	add	sp, fp, #0
   31850:	pop	{fp}		; (ldr fp, [sp], #4)
   31854:	bx	lr
   31858:	push	{fp}		; (str fp, [sp, #-4]!)
   3185c:	add	fp, sp, #0
   31860:	sub	sp, sp, #12
   31864:	str	r0, [fp, #-8]
   31868:	ldr	r3, [fp, #-8]
   3186c:	sub	r3, r3, #65	; 0x41
   31870:	cmp	r3, #25
   31874:	bhi	31884 <__assert_fail@plt+0x2072c>
   31878:	ldr	r3, [fp, #-8]
   3187c:	add	r3, r3, #32
   31880:	b	31888 <__assert_fail@plt+0x20730>
   31884:	ldr	r3, [fp, #-8]
   31888:	mov	r0, r3
   3188c:	add	sp, fp, #0
   31890:	pop	{fp}		; (ldr fp, [sp], #4)
   31894:	bx	lr
   31898:	push	{fp}		; (str fp, [sp, #-4]!)
   3189c:	add	fp, sp, #0
   318a0:	sub	sp, sp, #12
   318a4:	str	r0, [fp, #-8]
   318a8:	ldr	r3, [fp, #-8]
   318ac:	sub	r3, r3, #97	; 0x61
   318b0:	cmp	r3, #25
   318b4:	bhi	318c4 <__assert_fail@plt+0x2076c>
   318b8:	ldr	r3, [fp, #-8]
   318bc:	sub	r3, r3, #32
   318c0:	b	318c8 <__assert_fail@plt+0x20770>
   318c4:	ldr	r3, [fp, #-8]
   318c8:	mov	r0, r3
   318cc:	add	sp, fp, #0
   318d0:	pop	{fp}		; (ldr fp, [sp], #4)
   318d4:	bx	lr
   318d8:	str	fp, [sp, #-8]!
   318dc:	str	lr, [sp, #4]
   318e0:	add	fp, sp, #4
   318e4:	sub	sp, sp, #272	; 0x110
   318e8:	str	r0, [fp, #-272]	; 0xfffffef0
   318ec:	sub	r3, fp, #264	; 0x108
   318f0:	movw	r2, #257	; 0x101
   318f4:	mov	r1, r3
   318f8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   318fc:	bl	31eb0 <__assert_fail@plt+0x20d58>
   31900:	mov	r3, r0
   31904:	cmp	r3, #0
   31908:	beq	31914 <__assert_fail@plt+0x207bc>
   3190c:	mov	r3, #0
   31910:	b	31968 <__assert_fail@plt+0x20810>
   31914:	sub	r3, fp, #264	; 0x108
   31918:	movw	r1, #26108	; 0x65fc
   3191c:	movt	r1, #3
   31920:	mov	r0, r3
   31924:	bl	10eac <strcmp@plt>
   31928:	mov	r3, r0
   3192c:	cmp	r3, #0
   31930:	beq	3195c <__assert_fail@plt+0x20804>
   31934:	sub	r3, fp, #264	; 0x108
   31938:	movw	r1, #26112	; 0x6600
   3193c:	movt	r1, #3
   31940:	mov	r0, r3
   31944:	bl	10eac <strcmp@plt>
   31948:	mov	r3, r0
   3194c:	cmp	r3, #0
   31950:	beq	3195c <__assert_fail@plt+0x20804>
   31954:	mov	r3, #1
   31958:	b	31960 <__assert_fail@plt+0x20808>
   3195c:	mov	r3, #0
   31960:	and	r3, r3, #1
   31964:	uxtb	r3, r3
   31968:	mov	r0, r3
   3196c:	sub	sp, fp, #4
   31970:	ldr	fp, [sp]
   31974:	add	sp, sp, #4
   31978:	pop	{pc}		; (ldr pc, [sp], #4)
   3197c:	str	fp, [sp, #-8]!
   31980:	str	lr, [sp, #4]
   31984:	add	fp, sp, #4
   31988:	sub	sp, sp, #48	; 0x30
   3198c:	str	r0, [fp, #-48]	; 0xffffffd0
   31990:	mov	r3, #15
   31994:	str	r3, [fp, #-8]
   31998:	ldr	r3, [fp, #-8]
   3199c:	add	r3, r3, #1
   319a0:	str	r3, [fp, #-12]
   319a4:	mov	r0, #0
   319a8:	ldr	r2, [fp, #-12]
   319ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   319b0:	add	r3, r2, r3
   319b4:	add	r1, r3, #-2147483648	; 0x80000000
   319b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   319bc:	cmp	r1, r2
   319c0:	bcs	319c8 <__assert_fail@plt+0x20870>
   319c4:	mov	r0, #1
   319c8:	str	r3, [fp, #-36]	; 0xffffffdc
   319cc:	mov	r3, r0
   319d0:	and	r3, r3, #1
   319d4:	uxtb	r3, r3
   319d8:	eor	r3, r3, #1
   319dc:	uxtb	r3, r3
   319e0:	cmp	r3, #0
   319e4:	beq	31a90 <__assert_fail@plt+0x20938>
   319e8:	mov	r3, #0
   319ec:	and	r3, r3, #1
   319f0:	uxtb	r3, r3
   319f4:	eor	r3, r3, #1
   319f8:	uxtb	r3, r3
   319fc:	cmp	r3, #0
   31a00:	beq	31a90 <__assert_fail@plt+0x20938>
   31a04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31a08:	mov	r0, r3
   31a0c:	bl	10fd8 <malloc@plt>
   31a10:	mov	r3, r0
   31a14:	str	r3, [fp, #-16]
   31a18:	ldr	r3, [fp, #-16]
   31a1c:	cmp	r3, #0
   31a20:	beq	31a90 <__assert_fail@plt+0x20938>
   31a24:	ldr	r3, [fp, #-16]
   31a28:	str	r3, [fp, #-20]	; 0xffffffec
   31a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31a30:	mov	r2, #8
   31a34:	adds	r3, r3, r2
   31a38:	str	r3, [fp, #-40]	; 0xffffffd8
   31a3c:	ldr	r3, [fp, #-8]
   31a40:	mvn	r2, r3
   31a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31a48:	and	r2, r2, r3
   31a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31a50:	sub	r3, r2, r3
   31a54:	add	r3, r3, #8
   31a58:	str	r3, [fp, #-24]	; 0xffffffe8
   31a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31a60:	ldr	r2, [fp, #-16]
   31a64:	add	r3, r2, r3
   31a68:	str	r3, [fp, #-28]	; 0xffffffe4
   31a6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31a70:	str	r3, [fp, #-32]	; 0xffffffe0
   31a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a78:	sub	r3, r3, #1
   31a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31a80:	uxtb	r2, r2
   31a84:	strb	r2, [r3]
   31a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a8c:	b	31a94 <__assert_fail@plt+0x2093c>
   31a90:	mov	r3, #0
   31a94:	mov	r0, r3
   31a98:	sub	sp, fp, #4
   31a9c:	ldr	fp, [sp]
   31aa0:	add	sp, sp, #4
   31aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   31aa8:	str	fp, [sp, #-8]!
   31aac:	str	lr, [sp, #4]
   31ab0:	add	fp, sp, #4
   31ab4:	sub	sp, sp, #16
   31ab8:	str	r0, [fp, #-16]
   31abc:	ldr	r3, [fp, #-16]
   31ac0:	and	r3, r3, #7
   31ac4:	cmp	r3, #0
   31ac8:	beq	31ad0 <__assert_fail@plt+0x20978>
   31acc:	bl	11140 <abort@plt>
   31ad0:	ldr	r3, [fp, #-16]
   31ad4:	and	r3, r3, #8
   31ad8:	cmp	r3, #0
   31adc:	beq	31b04 <__assert_fail@plt+0x209ac>
   31ae0:	ldr	r3, [fp, #-16]
   31ae4:	sub	r3, r3, #1
   31ae8:	ldrb	r3, [r3]
   31aec:	rsb	r3, r3, #0
   31af0:	ldr	r2, [fp, #-16]
   31af4:	add	r3, r2, r3
   31af8:	str	r3, [fp, #-8]
   31afc:	ldr	r0, [fp, #-8]
   31b00:	bl	1c4e4 <__assert_fail@plt+0xb38c>
   31b04:	nop	{0}
   31b08:	sub	sp, fp, #4
   31b0c:	ldr	fp, [sp]
   31b10:	add	sp, sp, #4
   31b14:	pop	{pc}		; (ldr pc, [sp], #4)
   31b18:	str	fp, [sp, #-8]!
   31b1c:	str	lr, [sp, #4]
   31b20:	add	fp, sp, #4
   31b24:	sub	sp, sp, #16
   31b28:	str	r0, [fp, #-16]
   31b2c:	ldr	r0, [fp, #-16]
   31b30:	bl	10ed0 <wcwidth@plt>
   31b34:	str	r0, [fp, #-8]
   31b38:	ldr	r3, [fp, #-8]
   31b3c:	cmp	r3, #0
   31b40:	bge	31b64 <__assert_fail@plt+0x20a0c>
   31b44:	ldr	r0, [fp, #-16]
   31b48:	bl	10f60 <iswcntrl@plt>
   31b4c:	mov	r3, r0
   31b50:	cmp	r3, #0
   31b54:	moveq	r3, #1
   31b58:	movne	r3, #0
   31b5c:	uxtb	r3, r3
   31b60:	b	31b68 <__assert_fail@plt+0x20a10>
   31b64:	ldr	r3, [fp, #-8]
   31b68:	mov	r0, r3
   31b6c:	sub	sp, fp, #4
   31b70:	ldr	fp, [sp]
   31b74:	add	sp, sp, #4
   31b78:	pop	{pc}		; (ldr pc, [sp], #4)
   31b7c:	str	fp, [sp, #-8]!
   31b80:	str	lr, [sp, #4]
   31b84:	add	fp, sp, #4
   31b88:	sub	sp, sp, #8
   31b8c:	str	r0, [fp, #-8]
   31b90:	str	r1, [fp, #-12]
   31b94:	ldr	r3, [fp, #-12]
   31b98:	ldr	r2, [r3]
   31b9c:	ldr	r3, [fp, #-12]
   31ba0:	add	r3, r3, #16
   31ba4:	cmp	r2, r3
   31ba8:	bne	31be0 <__assert_fail@plt+0x20a88>
   31bac:	ldr	r3, [fp, #-8]
   31bb0:	add	r0, r3, #16
   31bb4:	ldr	r3, [fp, #-12]
   31bb8:	add	r1, r3, #16
   31bbc:	ldr	r3, [fp, #-12]
   31bc0:	ldr	r3, [r3, #4]
   31bc4:	mov	r2, r3
   31bc8:	bl	10f00 <memcpy@plt>
   31bcc:	ldr	r3, [fp, #-8]
   31bd0:	add	r2, r3, #16
   31bd4:	ldr	r3, [fp, #-8]
   31bd8:	str	r2, [r3]
   31bdc:	b	31bf0 <__assert_fail@plt+0x20a98>
   31be0:	ldr	r3, [fp, #-12]
   31be4:	ldr	r2, [r3]
   31be8:	ldr	r3, [fp, #-8]
   31bec:	str	r2, [r3]
   31bf0:	ldr	r3, [fp, #-12]
   31bf4:	ldr	r2, [r3, #4]
   31bf8:	ldr	r3, [fp, #-8]
   31bfc:	str	r2, [r3, #4]
   31c00:	ldr	r3, [fp, #-12]
   31c04:	ldrb	r2, [r3, #8]
   31c08:	ldr	r3, [fp, #-8]
   31c0c:	strb	r2, [r3, #8]
   31c10:	ldr	r3, [fp, #-8]
   31c14:	ldrb	r3, [r3, #8]
   31c18:	cmp	r3, #0
   31c1c:	beq	31c30 <__assert_fail@plt+0x20ad8>
   31c20:	ldr	r3, [fp, #-12]
   31c24:	ldr	r2, [r3, #12]
   31c28:	ldr	r3, [fp, #-8]
   31c2c:	str	r2, [r3, #12]
   31c30:	nop	{0}
   31c34:	sub	sp, fp, #4
   31c38:	ldr	fp, [sp]
   31c3c:	add	sp, sp, #4
   31c40:	pop	{pc}		; (ldr pc, [sp], #4)
   31c44:	push	{fp}		; (str fp, [sp, #-4]!)
   31c48:	add	fp, sp, #0
   31c4c:	sub	sp, sp, #12
   31c50:	mov	r3, r0
   31c54:	strb	r3, [fp, #-5]
   31c58:	ldrb	r3, [fp, #-5]
   31c5c:	lsr	r3, r3, #5
   31c60:	uxtb	r3, r3
   31c64:	mov	r2, r3
   31c68:	movw	r3, #26120	; 0x6608
   31c6c:	movt	r3, #3
   31c70:	ldr	r2, [r3, r2, lsl #2]
   31c74:	ldrb	r3, [fp, #-5]
   31c78:	and	r3, r3, #31
   31c7c:	lsr	r3, r2, r3
   31c80:	and	r3, r3, #1
   31c84:	cmp	r3, #0
   31c88:	movne	r3, #1
   31c8c:	moveq	r3, #0
   31c90:	uxtb	r3, r3
   31c94:	mov	r0, r3
   31c98:	add	sp, fp, #0
   31c9c:	pop	{fp}		; (ldr fp, [sp], #4)
   31ca0:	bx	lr
   31ca4:	str	fp, [sp, #-8]!
   31ca8:	str	lr, [sp, #4]
   31cac:	add	fp, sp, #4
   31cb0:	sub	sp, sp, #72	; 0x48
   31cb4:	str	r0, [fp, #-72]	; 0xffffffb8
   31cb8:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   31cbc:	mov	r3, r0
   31cc0:	cmp	r3, #1
   31cc4:	bls	31d70 <__assert_fail@plt+0x20c18>
   31cc8:	mov	r3, #0
   31ccc:	str	r3, [fp, #-8]
   31cd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   31cd4:	str	r3, [fp, #-48]	; 0xffffffd0
   31cd8:	mov	r3, #0
   31cdc:	strb	r3, [fp, #-64]	; 0xffffffc0
   31ce0:	sub	r3, fp, #64	; 0x40
   31ce4:	add	r3, r3, #4
   31ce8:	mov	r2, #8
   31cec:	mov	r1, #0
   31cf0:	mov	r0, r3
   31cf4:	bl	11098 <memset@plt>
   31cf8:	mov	r3, #0
   31cfc:	strb	r3, [fp, #-52]	; 0xffffffcc
   31d00:	b	31d28 <__assert_fail@plt+0x20bd0>
   31d04:	ldr	r3, [fp, #-8]
   31d08:	add	r3, r3, #1
   31d0c:	str	r3, [fp, #-8]
   31d10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   31d14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31d18:	add	r3, r2, r3
   31d1c:	str	r3, [fp, #-48]	; 0xffffffd0
   31d20:	mov	r3, #0
   31d24:	strb	r3, [fp, #-52]	; 0xffffffcc
   31d28:	sub	r3, fp, #64	; 0x40
   31d2c:	mov	r0, r3
   31d30:	bl	306d8 <__assert_fail@plt+0x1f580>
   31d34:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   31d38:	eor	r3, r3, #1
   31d3c:	uxtb	r3, r3
   31d40:	cmp	r3, #0
   31d44:	bne	31d54 <__assert_fail@plt+0x20bfc>
   31d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31d4c:	cmp	r3, #0
   31d50:	beq	31d5c <__assert_fail@plt+0x20c04>
   31d54:	mov	r3, #1
   31d58:	b	31d60 <__assert_fail@plt+0x20c08>
   31d5c:	mov	r3, #0
   31d60:	cmp	r3, #0
   31d64:	bne	31d04 <__assert_fail@plt+0x20bac>
   31d68:	ldr	r3, [fp, #-8]
   31d6c:	b	31d7c <__assert_fail@plt+0x20c24>
   31d70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   31d74:	bl	11050 <strlen@plt>
   31d78:	mov	r3, r0
   31d7c:	mov	r0, r3
   31d80:	sub	sp, fp, #4
   31d84:	ldr	fp, [sp]
   31d88:	add	sp, sp, #4
   31d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   31d90:	str	fp, [sp, #-8]!
   31d94:	str	lr, [sp, #4]
   31d98:	add	fp, sp, #4
   31d9c:	sub	sp, sp, #16
   31da0:	str	r0, [fp, #-16]
   31da4:	mov	r1, #0
   31da8:	ldr	r0, [fp, #-16]
   31dac:	bl	110ec <setlocale@plt>
   31db0:	str	r0, [fp, #-8]
   31db4:	ldr	r3, [fp, #-8]
   31db8:	mov	r0, r3
   31dbc:	sub	sp, fp, #4
   31dc0:	ldr	fp, [sp]
   31dc4:	add	sp, sp, #4
   31dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   31dcc:	str	fp, [sp, #-8]!
   31dd0:	str	lr, [sp, #4]
   31dd4:	add	fp, sp, #4
   31dd8:	sub	sp, sp, #24
   31ddc:	str	r0, [fp, #-16]
   31de0:	str	r1, [fp, #-20]	; 0xffffffec
   31de4:	str	r2, [fp, #-24]	; 0xffffffe8
   31de8:	ldr	r0, [fp, #-16]
   31dec:	bl	31d90 <__assert_fail@plt+0x20c38>
   31df0:	str	r0, [fp, #-8]
   31df4:	ldr	r3, [fp, #-8]
   31df8:	cmp	r3, #0
   31dfc:	bne	31e20 <__assert_fail@plt+0x20cc8>
   31e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e04:	cmp	r3, #0
   31e08:	beq	31e18 <__assert_fail@plt+0x20cc0>
   31e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e10:	mov	r2, #0
   31e14:	strb	r2, [r3]
   31e18:	mov	r3, #22
   31e1c:	b	31e9c <__assert_fail@plt+0x20d44>
   31e20:	ldr	r0, [fp, #-8]
   31e24:	bl	11050 <strlen@plt>
   31e28:	str	r0, [fp, #-12]
   31e2c:	ldr	r2, [fp, #-12]
   31e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e34:	cmp	r2, r3
   31e38:	bcs	31e5c <__assert_fail@plt+0x20d04>
   31e3c:	ldr	r3, [fp, #-12]
   31e40:	add	r3, r3, #1
   31e44:	mov	r2, r3
   31e48:	ldr	r1, [fp, #-8]
   31e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31e50:	bl	10f00 <memcpy@plt>
   31e54:	mov	r3, #0
   31e58:	b	31e9c <__assert_fail@plt+0x20d44>
   31e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e60:	cmp	r3, #0
   31e64:	beq	31e98 <__assert_fail@plt+0x20d40>
   31e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e6c:	sub	r3, r3, #1
   31e70:	mov	r2, r3
   31e74:	ldr	r1, [fp, #-8]
   31e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   31e7c:	bl	10f00 <memcpy@plt>
   31e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e84:	sub	r3, r3, #1
   31e88:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e8c:	add	r3, r2, r3
   31e90:	mov	r2, #0
   31e94:	strb	r2, [r3]
   31e98:	mov	r3, #34	; 0x22
   31e9c:	mov	r0, r3
   31ea0:	sub	sp, fp, #4
   31ea4:	ldr	fp, [sp]
   31ea8:	add	sp, sp, #4
   31eac:	pop	{pc}		; (ldr pc, [sp], #4)
   31eb0:	str	fp, [sp, #-8]!
   31eb4:	str	lr, [sp, #4]
   31eb8:	add	fp, sp, #4
   31ebc:	sub	sp, sp, #16
   31ec0:	str	r0, [fp, #-8]
   31ec4:	str	r1, [fp, #-12]
   31ec8:	str	r2, [fp, #-16]
   31ecc:	ldr	r2, [fp, #-16]
   31ed0:	ldr	r1, [fp, #-12]
   31ed4:	ldr	r0, [fp, #-8]
   31ed8:	bl	31dcc <__assert_fail@plt+0x20c74>
   31edc:	mov	r3, r0
   31ee0:	mov	r0, r3
   31ee4:	sub	sp, fp, #4
   31ee8:	ldr	fp, [sp]
   31eec:	add	sp, sp, #4
   31ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   31ef4:	str	fp, [sp, #-8]!
   31ef8:	str	lr, [sp, #4]
   31efc:	add	fp, sp, #4
   31f00:	sub	sp, sp, #8
   31f04:	str	r0, [fp, #-8]
   31f08:	ldr	r0, [fp, #-8]
   31f0c:	bl	31d90 <__assert_fail@plt+0x20c38>
   31f10:	mov	r3, r0
   31f14:	mov	r0, r3
   31f18:	sub	sp, fp, #4
   31f1c:	ldr	fp, [sp]
   31f20:	add	sp, sp, #4
   31f24:	pop	{pc}		; (ldr pc, [sp], #4)
   31f28:	cmp	r3, #0
   31f2c:	cmpeq	r2, #0
   31f30:	bne	31f48 <__assert_fail@plt+0x20df0>
   31f34:	cmp	r1, #0
   31f38:	cmpeq	r0, #0
   31f3c:	mvnne	r1, #0
   31f40:	mvnne	r0, #0
   31f44:	b	31f64 <__assert_fail@plt+0x20e0c>
   31f48:	sub	sp, sp, #8
   31f4c:	push	{sp, lr}
   31f50:	bl	31f74 <__assert_fail@plt+0x20e1c>
   31f54:	ldr	lr, [sp, #4]
   31f58:	add	sp, sp, #8
   31f5c:	pop	{r2, r3}
   31f60:	bx	lr
   31f64:	push	{r1, lr}
   31f68:	mov	r0, #8
   31f6c:	bl	10e88 <raise@plt>
   31f70:	pop	{r1, pc}
   31f74:	cmp	r1, r3
   31f78:	cmpeq	r0, r2
   31f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31f80:	mov	r4, r0
   31f84:	movcc	r0, #0
   31f88:	mov	r5, r1
   31f8c:	ldr	lr, [sp, #36]	; 0x24
   31f90:	movcc	r1, r0
   31f94:	bcc	32090 <__assert_fail@plt+0x20f38>
   31f98:	cmp	r3, #0
   31f9c:	clzeq	ip, r2
   31fa0:	clzne	ip, r3
   31fa4:	addeq	ip, ip, #32
   31fa8:	cmp	r5, #0
   31fac:	clzeq	r1, r4
   31fb0:	addeq	r1, r1, #32
   31fb4:	clzne	r1, r5
   31fb8:	sub	ip, ip, r1
   31fbc:	sub	sl, ip, #32
   31fc0:	lsl	r9, r3, ip
   31fc4:	rsb	fp, ip, #32
   31fc8:	orr	r9, r9, r2, lsl sl
   31fcc:	orr	r9, r9, r2, lsr fp
   31fd0:	lsl	r8, r2, ip
   31fd4:	cmp	r5, r9
   31fd8:	cmpeq	r4, r8
   31fdc:	movcc	r0, #0
   31fe0:	movcc	r1, r0
   31fe4:	bcc	32000 <__assert_fail@plt+0x20ea8>
   31fe8:	mov	r0, #1
   31fec:	subs	r4, r4, r8
   31ff0:	lsl	r1, r0, sl
   31ff4:	orr	r1, r1, r0, lsr fp
   31ff8:	lsl	r0, r0, ip
   31ffc:	sbc	r5, r5, r9
   32000:	cmp	ip, #0
   32004:	beq	32090 <__assert_fail@plt+0x20f38>
   32008:	lsr	r6, r8, #1
   3200c:	orr	r6, r6, r9, lsl #31
   32010:	lsr	r7, r9, #1
   32014:	mov	r2, ip
   32018:	b	3203c <__assert_fail@plt+0x20ee4>
   3201c:	subs	r3, r4, r6
   32020:	sbc	r8, r5, r7
   32024:	adds	r3, r3, r3
   32028:	adc	r8, r8, r8
   3202c:	adds	r4, r3, #1
   32030:	adc	r5, r8, #0
   32034:	subs	r2, r2, #1
   32038:	beq	32058 <__assert_fail@plt+0x20f00>
   3203c:	cmp	r5, r7
   32040:	cmpeq	r4, r6
   32044:	bcs	3201c <__assert_fail@plt+0x20ec4>
   32048:	adds	r4, r4, r4
   3204c:	adc	r5, r5, r5
   32050:	subs	r2, r2, #1
   32054:	bne	3203c <__assert_fail@plt+0x20ee4>
   32058:	lsr	r3, r4, ip
   3205c:	orr	r3, r3, r5, lsl fp
   32060:	lsr	r2, r5, ip
   32064:	orr	r3, r3, r5, lsr sl
   32068:	adds	r0, r0, r4
   3206c:	mov	r4, r3
   32070:	lsl	r3, r2, ip
   32074:	orr	r3, r3, r4, lsl sl
   32078:	lsl	ip, r4, ip
   3207c:	orr	r3, r3, r4, lsr fp
   32080:	adc	r1, r1, r5
   32084:	subs	r0, r0, ip
   32088:	mov	r5, r2
   3208c:	sbc	r1, r1, r3
   32090:	cmp	lr, #0
   32094:	strdne	r4, [lr]
   32098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3209c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   320a0:	mov	r7, r0
   320a4:	ldr	r6, [pc, #72]	; 320f4 <__assert_fail@plt+0x20f9c>
   320a8:	ldr	r5, [pc, #72]	; 320f8 <__assert_fail@plt+0x20fa0>
   320ac:	add	r6, pc, r6
   320b0:	add	r5, pc, r5
   320b4:	sub	r6, r6, r5
   320b8:	mov	r8, r1
   320bc:	mov	r9, r2
   320c0:	bl	10e50 <calloc@plt-0x20>
   320c4:	asrs	r6, r6, #2
   320c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   320cc:	mov	r4, #0
   320d0:	add	r4, r4, #1
   320d4:	ldr	r3, [r5], #4
   320d8:	mov	r2, r9
   320dc:	mov	r1, r8
   320e0:	mov	r0, r7
   320e4:	blx	r3
   320e8:	cmp	r6, r4
   320ec:	bne	320d0 <__assert_fail@plt+0x20f78>
   320f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   320f4:	andeq	r4, r1, r0, ror #28
   320f8:	andeq	r4, r1, r8, asr lr
   320fc:	bx	lr
   32100:	ldr	r3, [pc, #12]	; 32114 <__assert_fail@plt+0x20fbc>
   32104:	mov	r1, #0
   32108:	add	r3, pc, r3
   3210c:	ldr	r2, [r3]
   32110:	b	1108c <__cxa_atexit@plt>
   32114:	andeq	r5, r1, r0

Disassembly of section .fini:

00032118 <.fini>:
   32118:	push	{r3, lr}
   3211c:	pop	{r3, pc}
