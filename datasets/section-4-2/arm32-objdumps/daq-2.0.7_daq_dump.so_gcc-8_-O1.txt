
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000550 <_init>:
 550:	push	{r3, lr}
 554:	bl	630 <call_weak_fn>
 558:	pop	{r3, pc}

Disassembly of section .plt:

0000055c <.plt>:
 55c:	push	{lr}		; (str lr, [sp, #-4]!)
 560:	ldr	lr, [pc, #4]	; 56c <.plt+0x10>
 564:	add	lr, pc, lr
 568:	ldr	pc, [lr, #8]!
 56c:	.word	0x00011a94

00000570 <calloc@plt>:
 570:	add	ip, pc, #0, 12
 574:	add	ip, ip, #69632	; 0x11000
 578:	ldr	pc, [ip, #2708]!	; 0xa94

0000057c <strcmp@plt>:
 57c:	add	ip, pc, #0, 12
 580:	add	ip, ip, #69632	; 0x11000
 584:	ldr	pc, [ip, #2700]!	; 0xa8c

00000588 <__cxa_finalize@plt>:
 588:	add	ip, pc, #0, 12
 58c:	add	ip, ip, #69632	; 0x11000
 590:	ldr	pc, [ip, #2692]!	; 0xa84

00000594 <free@plt>:
 594:	add	ip, pc, #0, 12
 598:	add	ip, ip, #69632	; 0x11000
 59c:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a0 <ferror@plt>:
 5a0:	add	ip, pc, #0, 12
 5a4:	add	ip, ip, #69632	; 0x11000
 5a8:	ldr	pc, [ip, #2676]!	; 0xa74

000005ac <strdup@plt>:
 5ac:	add	ip, pc, #0, 12
 5b0:	add	ip, ip, #69632	; 0x11000
 5b4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b8 <pcap_close@plt>:
 5b8:	add	ip, pc, #0, 12
 5bc:	add	ip, ip, #69632	; 0x11000
 5c0:	ldr	pc, [ip, #2660]!	; 0xa64

000005c4 <strcasecmp@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #69632	; 0x11000
 5cc:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d0 <pcap_open_dead@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #69632	; 0x11000
 5d8:	ldr	pc, [ip, #2644]!	; 0xa54

000005dc <pcap_dump@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #69632	; 0x11000
 5e4:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e8 <__gmon_start__@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #69632	; 0x11000
 5f0:	ldr	pc, [ip, #2628]!	; 0xa44

000005f4 <snprintf@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #69632	; 0x11000
 5fc:	ldr	pc, [ip, #2620]!	; 0xa3c

00000600 <pcap_dump_file@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #69632	; 0x11000
 608:	ldr	pc, [ip, #2612]!	; 0xa34

0000060c <memset@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #69632	; 0x11000
 614:	ldr	pc, [ip, #2604]!	; 0xa2c

00000618 <pcap_dump_close@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #69632	; 0x11000
 620:	ldr	pc, [ip, #2596]!	; 0xa24

00000624 <pcap_dump_open@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #69632	; 0x11000
 62c:	ldr	pc, [ip, #2588]!	; 0xa1c

Disassembly of section .text:

00000630 <call_weak_fn>:
 630:	ldr	r3, [pc, #20]	; 64c <call_weak_fn+0x1c>
 634:	ldr	r2, [pc, #20]	; 650 <call_weak_fn+0x20>
 638:	add	r3, pc, r3
 63c:	ldr	r2, [r3, r2]
 640:	cmp	r2, #0
 644:	bxeq	lr
 648:	b	5e8 <__gmon_start__@plt>
 64c:	.word	0x000119c0
 650:	.word	0x00000054

00000654 <deregister_tm_clones>:
 654:	ldr	r0, [pc, #44]	; 688 <deregister_tm_clones+0x34>
 658:	ldr	r3, [pc, #44]	; 68c <deregister_tm_clones+0x38>
 65c:	add	r0, pc, r0
 660:	add	r3, pc, r3
 664:	cmp	r3, r0
 668:	ldr	r3, [pc, #32]	; 690 <deregister_tm_clones+0x3c>
 66c:	add	r3, pc, r3
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <deregister_tm_clones+0x40>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00011a64
 68c:	.word	0x00011a60
 690:	.word	0x0001198c
 694:	.word	0x00000050

00000698 <register_tm_clones>:
 698:	ldr	r0, [pc, #56]	; 6d8 <register_tm_clones+0x40>
 69c:	ldr	r3, [pc, #56]	; 6dc <register_tm_clones+0x44>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	sub	r1, r3, r0
 6ac:	ldr	r3, [pc, #44]	; 6e0 <register_tm_clones+0x48>
 6b0:	asr	r1, r1, #2
 6b4:	add	r3, pc, r3
 6b8:	add	r1, r1, r1, lsr #31
 6bc:	asrs	r1, r1, #1
 6c0:	bxeq	lr
 6c4:	ldr	r2, [pc, #24]	; 6e4 <register_tm_clones+0x4c>
 6c8:	ldr	r3, [r3, r2]
 6cc:	cmp	r3, #0
 6d0:	bxeq	lr
 6d4:	bx	r3
 6d8:	.word	0x00011a20
 6dc:	.word	0x00011a1c
 6e0:	.word	0x00011944
 6e4:	.word	0x00000058

000006e8 <__do_global_dtors_aux>:
 6e8:	ldr	r3, [pc, #76]	; 73c <__do_global_dtors_aux+0x54>
 6ec:	ldr	r2, [pc, #76]	; 740 <__do_global_dtors_aux+0x58>
 6f0:	add	r3, pc, r3
 6f4:	add	r2, pc, r2
 6f8:	ldrb	r3, [r3]
 6fc:	cmp	r3, #0
 700:	bxne	lr
 704:	ldr	r3, [pc, #56]	; 744 <__do_global_dtors_aux+0x5c>
 708:	push	{r4, lr}
 70c:	ldr	r3, [r2, r3]
 710:	cmp	r3, #0
 714:	beq	724 <__do_global_dtors_aux+0x3c>
 718:	ldr	r3, [pc, #40]	; 748 <__do_global_dtors_aux+0x60>
 71c:	ldr	r0, [pc, r3]
 720:	bl	588 <__cxa_finalize@plt>
 724:	bl	654 <deregister_tm_clones>
 728:	ldr	r3, [pc, #28]	; 74c <__do_global_dtors_aux+0x64>
 72c:	mov	r2, #1
 730:	add	r3, pc, r3
 734:	strb	r2, [r3]
 738:	pop	{r4, pc}
 73c:	.word	0x000119d0
 740:	.word	0x00011904
 744:	.word	0x0000004c
 748:	.word	0x00011938
 74c:	.word	0x00011990

00000750 <frame_dummy>:
 750:	b	698 <register_tm_clones>

00000754 <dump_daq_acquire>:
 754:	str	r4, [sp, #-8]!
 758:	str	lr, [sp, #4]
 75c:	sub	sp, sp, #8
 760:	str	r2, [r0, #16]
 764:	ldr	r2, [sp, #16]
 768:	str	r2, [r0, #20]
 76c:	ldr	r2, [r0]
 770:	str	r0, [sp]
 774:	ldr	r4, [r2, #28]
 778:	ldr	r2, [pc, #24]	; 798 <dump_daq_acquire+0x44>
 77c:	add	r2, pc, r2
 780:	ldr	r0, [r0, #4]
 784:	blx	r4
 788:	add	sp, sp, #8
 78c:	ldr	r4, [sp]
 790:	add	sp, sp, #4
 794:	pop	{pc}		; (ldr pc, [sp], #4)
 798:	.word	0x000002a4

0000079c <dump_daq_set_filter>:
 79c:	str	r4, [sp, #-8]!
 7a0:	str	lr, [sp, #4]
 7a4:	ldr	r3, [r0]
 7a8:	ldr	r3, [r3, #20]
 7ac:	ldr	r0, [r0, #4]
 7b0:	blx	r3
 7b4:	ldr	r4, [sp]
 7b8:	add	sp, sp, #4
 7bc:	pop	{pc}		; (ldr pc, [sp], #4)

000007c0 <dump_daq_breakloop>:
 7c0:	str	r4, [sp, #-8]!
 7c4:	str	lr, [sp, #4]
 7c8:	ldr	r3, [r0]
 7cc:	ldr	r3, [r3, #36]	; 0x24
 7d0:	ldr	r0, [r0, #4]
 7d4:	blx	r3
 7d8:	ldr	r4, [sp]
 7dc:	add	sp, sp, #4
 7e0:	pop	{pc}		; (ldr pc, [sp], #4)

000007e4 <dump_daq_check_status>:
 7e4:	str	r4, [sp, #-8]!
 7e8:	str	lr, [sp, #4]
 7ec:	ldr	r3, [r0]
 7f0:	ldr	r3, [r3, #48]	; 0x30
 7f4:	ldr	r0, [r0, #4]
 7f8:	blx	r3
 7fc:	ldr	r4, [sp]
 800:	add	sp, sp, #4
 804:	pop	{pc}		; (ldr pc, [sp], #4)

00000808 <dump_daq_get_stats>:
 808:	strd	r4, [sp, #-24]!	; 0xffffffe8
 80c:	strd	r6, [sp, #8]
 810:	str	r8, [sp, #16]
 814:	str	lr, [sp, #20]
 818:	mov	r5, r0
 81c:	mov	r8, r1
 820:	mov	r4, r0
 824:	ldr	r3, [r4], #64	; 0x40
 828:	ldr	r3, [r3, #52]	; 0x34
 82c:	ldr	r0, [r0, #4]
 830:	blx	r3
 834:	add	r3, r8, #40	; 0x28
 838:	add	r2, r5, #120	; 0x78
 83c:	ldrd	r6, [r4], #8
 840:	strd	r6, [r3], #8
 844:	cmp	r4, r2
 848:	bne	83c <dump_daq_get_stats+0x34>
 84c:	ldrd	r2, [r5, #56]	; 0x38
 850:	strd	r2, [r8, #32]
 854:	ldrd	r4, [sp]
 858:	ldrd	r6, [sp, #8]
 85c:	ldr	r8, [sp, #16]
 860:	add	sp, sp, #20
 864:	pop	{pc}		; (ldr pc, [sp], #4)

00000868 <dump_daq_get_snaplen>:
 868:	str	r4, [sp, #-8]!
 86c:	str	lr, [sp, #4]
 870:	ldr	r3, [r0]
 874:	ldr	r3, [r3, #60]	; 0x3c
 878:	ldr	r0, [r0, #4]
 87c:	blx	r3
 880:	ldr	r4, [sp]
 884:	add	sp, sp, #4
 888:	pop	{pc}		; (ldr pc, [sp], #4)

0000088c <dump_daq_get_capabilities>:
 88c:	str	r4, [sp, #-8]!
 890:	str	lr, [sp, #4]
 894:	ldr	r3, [r0]
 898:	ldr	r3, [r3, #64]	; 0x40
 89c:	ldr	r0, [r0, #4]
 8a0:	blx	r3
 8a4:	orr	r0, r0, #7
 8a8:	ldr	r4, [sp]
 8ac:	add	sp, sp, #4
 8b0:	pop	{pc}		; (ldr pc, [sp], #4)

000008b4 <dump_daq_get_datalink_type>:
 8b4:	str	r4, [sp, #-8]!
 8b8:	str	lr, [sp, #4]
 8bc:	ldr	r3, [r0]
 8c0:	ldr	r3, [r3, #68]	; 0x44
 8c4:	ldr	r0, [r0, #4]
 8c8:	blx	r3
 8cc:	ldr	r4, [sp]
 8d0:	add	sp, sp, #4
 8d4:	pop	{pc}		; (ldr pc, [sp], #4)

000008d8 <dump_daq_get_errbuf>:
 8d8:	str	r4, [sp, #-8]!
 8dc:	str	lr, [sp, #4]
 8e0:	ldr	r3, [r0]
 8e4:	ldr	r3, [r3, #72]	; 0x48
 8e8:	ldr	r0, [r0, #4]
 8ec:	blx	r3
 8f0:	ldr	r4, [sp]
 8f4:	add	sp, sp, #4
 8f8:	pop	{pc}		; (ldr pc, [sp], #4)

000008fc <dump_daq_set_errbuf>:
 8fc:	str	r4, [sp, #-8]!
 900:	str	lr, [sp, #4]
 904:	ldr	r3, [r0]
 908:	ldr	r3, [r3, #76]	; 0x4c
 90c:	ldr	r0, [r0, #4]
 910:	cmp	r1, #0
 914:	beq	928 <dump_daq_set_errbuf+0x2c>
 918:	blx	r3
 91c:	ldr	r4, [sp]
 920:	add	sp, sp, #4
 924:	pop	{pc}		; (ldr pc, [sp], #4)
 928:	ldr	r1, [pc, #4]	; 934 <dump_daq_set_errbuf+0x38>
 92c:	add	r1, pc, r1
 930:	b	918 <dump_daq_set_errbuf+0x1c>
 934:	.word	0x00000670

00000938 <dump_daq_get_device_index>:
 938:	str	r4, [sp, #-8]!
 93c:	str	lr, [sp, #4]
 940:	ldr	r3, [r0]
 944:	ldr	r3, [r3, #80]	; 0x50
 948:	ldr	r0, [r0, #4]
 94c:	blx	r3
 950:	ldr	r4, [sp]
 954:	add	sp, sp, #4
 958:	pop	{pc}		; (ldr pc, [sp], #4)

0000095c <dump_daq_reset_stats>:
 95c:	str	r4, [sp, #-8]!
 960:	str	lr, [sp, #4]
 964:	mov	r4, r0
 968:	ldr	r3, [r4], #24
 96c:	ldr	r3, [r3, #56]	; 0x38
 970:	ldr	r0, [r0, #4]
 974:	blx	r3
 978:	mov	r2, #96	; 0x60
 97c:	mov	r1, #0
 980:	mov	r0, r4
 984:	bl	60c <memset@plt>
 988:	ldr	r4, [sp]
 98c:	add	sp, sp, #4
 990:	pop	{pc}		; (ldr pc, [sp], #4)

00000994 <dump_daq_shutdown>:
 994:	str	r4, [sp, #-8]!
 998:	str	lr, [sp, #4]
 99c:	mov	r4, r0
 9a0:	ldr	r3, [r0]
 9a4:	ldr	r3, [r3, #44]	; 0x2c
 9a8:	ldr	r0, [r0, #4]
 9ac:	blx	r3
 9b0:	ldr	r0, [r4, #12]
 9b4:	cmp	r0, #0
 9b8:	beq	9c0 <dump_daq_shutdown+0x2c>
 9bc:	bl	594 <free@plt>
 9c0:	mov	r0, r4
 9c4:	bl	594 <free@plt>
 9c8:	ldr	r4, [sp]
 9cc:	add	sp, sp, #4
 9d0:	pop	{pc}		; (ldr pc, [sp], #4)

000009d4 <dump_daq_stop>:
 9d4:	strd	r4, [sp, #-16]!
 9d8:	str	r6, [sp, #8]
 9dc:	str	lr, [sp, #12]
 9e0:	mov	r4, r0
 9e4:	ldr	r3, [r0]
 9e8:	ldr	r3, [r3, #40]	; 0x28
 9ec:	ldr	r0, [r0, #4]
 9f0:	blx	r3
 9f4:	subs	r5, r0, #0
 9f8:	bne	a14 <dump_daq_stop+0x40>
 9fc:	ldr	r0, [r4, #8]
 a00:	cmp	r0, #0
 a04:	beq	a14 <dump_daq_stop+0x40>
 a08:	bl	618 <pcap_dump_close@plt>
 a0c:	mov	r3, #0
 a10:	str	r3, [r4, #8]
 a14:	mov	r0, r5
 a18:	ldrd	r4, [sp]
 a1c:	ldr	r6, [sp, #8]
 a20:	add	sp, sp, #12
 a24:	pop	{pc}		; (ldr pc, [sp], #4)

00000a28 <daq_dump_capture>:
 a28:	strd	r4, [sp, #-24]!	; 0xffffffe8
 a2c:	strd	r6, [sp, #8]
 a30:	str	r8, [sp, #16]
 a34:	str	lr, [sp, #20]
 a38:	mov	r4, r0
 a3c:	mov	r6, r1
 a40:	mov	r7, r2
 a44:	ldr	r3, [r0, #16]
 a48:	ldr	r0, [r0, #20]
 a4c:	blx	r3
 a50:	cmp	r0, #6
 a54:	bhi	aa0 <daq_dump_capture+0x78>
 a58:	mov	r5, r0
 a5c:	add	r2, r4, r0, lsl #3
 a60:	ldr	r3, [r2, #64]	; 0x40
 a64:	ldr	r1, [r2, #68]	; 0x44
 a68:	adds	r3, r3, #1
 a6c:	adc	r1, r1, #0
 a70:	str	r3, [r2, #64]	; 0x40
 a74:	str	r1, [r2, #68]	; 0x44
 a78:	ldr	r3, [pc, #84]	; ad4 <daq_dump_capture+0xac>
 a7c:	add	r3, pc, r3
 a80:	ldr	r3, [r3, r0, lsl #2]
 a84:	cmp	r3, #0
 a88:	beq	abc <daq_dump_capture+0x94>
 a8c:	mov	r2, r7
 a90:	mov	r1, r6
 a94:	ldr	r0, [r4, #8]
 a98:	bl	5dc <pcap_dump@plt>
 a9c:	b	abc <daq_dump_capture+0x94>
 aa0:	ldr	r3, [r4, #72]	; 0x48
 aa4:	ldr	r2, [r4, #76]	; 0x4c
 aa8:	adds	r3, r3, #1
 aac:	adc	r2, r2, #0
 ab0:	str	r3, [r4, #72]	; 0x48
 ab4:	str	r2, [r4, #76]	; 0x4c
 ab8:	mov	r5, #1
 abc:	mov	r0, r5
 ac0:	ldrd	r4, [sp]
 ac4:	ldrd	r6, [sp, #8]
 ac8:	ldr	r8, [sp, #16]
 acc:	add	sp, sp, #20
 ad0:	pop	{pc}		; (ldr pc, [sp], #4)
 ad4:	.word	0x00000454

00000ad8 <dump_daq_inject>:
 ad8:	str	r4, [sp, #-16]!
 adc:	strd	r6, [sp, #4]
 ae0:	str	lr, [sp, #12]
 ae4:	sub	sp, sp, #56	; 0x38
 ae8:	mov	r4, r0
 aec:	mov	r0, r1
 af0:	add	r1, sp, #4
 af4:	ldrd	r6, [r0]
 af8:	strd	r6, [sp, #4]
 afc:	ldrd	r6, [r0, #16]
 b00:	strd	r6, [r1, #16]
 b04:	ldrd	r6, [r0, #24]
 b08:	strd	r6, [r1, #24]
 b0c:	ldrd	r6, [r0, #32]
 b10:	strd	r6, [r1, #32]
 b14:	ldrd	r6, [r0, #40]	; 0x28
 b18:	strd	r6, [r1, #40]	; 0x28
 b1c:	ldr	r0, [r0, #48]	; 0x30
 b20:	str	r0, [r1, #48]	; 0x30
 b24:	str	r3, [sp, #12]
 b28:	str	r3, [sp, #16]
 b2c:	ldr	r0, [r4, #8]
 b30:	bl	5dc <pcap_dump@plt>
 b34:	ldr	r0, [r4, #8]
 b38:	bl	600 <pcap_dump_file@plt>
 b3c:	bl	5a0 <ferror@plt>
 b40:	cmp	r0, #0
 b44:	bne	b74 <dump_daq_inject+0x9c>
 b48:	ldr	r3, [r4, #56]	; 0x38
 b4c:	ldr	r2, [r4, #60]	; 0x3c
 b50:	adds	r3, r3, #1
 b54:	adc	r2, r2, #0
 b58:	str	r3, [r4, #56]	; 0x38
 b5c:	str	r2, [r4, #60]	; 0x3c
 b60:	add	sp, sp, #56	; 0x38
 b64:	ldr	r4, [sp]
 b68:	ldrd	r6, [sp, #4]
 b6c:	add	sp, sp, #12
 b70:	pop	{pc}		; (ldr pc, [sp], #4)
 b74:	ldr	r3, [r4]
 b78:	ldr	r3, [r3, #76]	; 0x4c
 b7c:	ldr	r1, [pc, #16]	; b94 <dump_daq_inject+0xbc>
 b80:	add	r1, pc, r1
 b84:	ldr	r0, [r4, #4]
 b88:	blx	r3
 b8c:	mvn	r0, #0
 b90:	b	b60 <dump_daq_inject+0x88>
 b94:	.word	0x00000380

00000b98 <dump_daq_start>:
 b98:	strd	r4, [sp, #-24]!	; 0xffffffe8
 b9c:	strd	r6, [sp, #8]
 ba0:	str	r8, [sp, #16]
 ba4:	str	lr, [sp, #20]
 ba8:	mov	r4, r0
 bac:	ldr	r5, [r0, #12]
 bb0:	cmp	r5, #0
 bb4:	beq	c40 <dump_daq_start+0xa8>
 bb8:	ldr	r3, [r4]
 bbc:	ldr	r3, [r3, #24]
 bc0:	ldr	r0, [r4, #4]
 bc4:	blx	r3
 bc8:	subs	r6, r0, #0
 bcc:	bne	c28 <dump_daq_start+0x90>
 bd0:	ldr	r3, [r4]
 bd4:	ldr	r3, [r3, #68]	; 0x44
 bd8:	ldr	r0, [r4, #4]
 bdc:	blx	r3
 be0:	mov	r7, r0
 be4:	ldr	r3, [r4]
 be8:	ldr	r3, [r3, #60]	; 0x3c
 bec:	ldr	r0, [r4, #4]
 bf0:	blx	r3
 bf4:	mov	r1, r0
 bf8:	mov	r0, r7
 bfc:	bl	5d0 <pcap_open_dead@plt>
 c00:	subs	r7, r0, #0
 c04:	beq	c4c <dump_daq_start+0xb4>
 c08:	mov	r1, r5
 c0c:	mov	r0, r7
 c10:	bl	624 <pcap_dump_open@plt>
 c14:	str	r0, [r4, #8]
 c18:	cmp	r0, #0
 c1c:	beq	c54 <dump_daq_start+0xbc>
 c20:	mov	r0, r7
 c24:	bl	5b8 <pcap_close@plt>
 c28:	mov	r0, r6
 c2c:	ldrd	r4, [sp]
 c30:	ldrd	r6, [sp, #8]
 c34:	ldr	r8, [sp, #16]
 c38:	add	sp, sp, #20
 c3c:	pop	{pc}		; (ldr pc, [sp], #4)
 c40:	ldr	r5, [pc, #60]	; c84 <dump_daq_start+0xec>
 c44:	add	r5, pc, r5
 c48:	b	bb8 <dump_daq_start+0x20>
 c4c:	mov	r3, #0
 c50:	str	r3, [r4, #8]
 c54:	ldr	r3, [r4]
 c58:	ldr	r3, [r3, #40]	; 0x28
 c5c:	ldr	r0, [r4, #4]
 c60:	blx	r3
 c64:	ldr	r3, [r4]
 c68:	ldr	r3, [r3, #76]	; 0x4c
 c6c:	ldr	r1, [pc, #20]	; c88 <dump_daq_start+0xf0>
 c70:	add	r1, pc, r1
 c74:	ldr	r0, [r4, #4]
 c78:	blx	r3
 c7c:	mvn	r6, #0
 c80:	b	c28 <dump_daq_start+0x90>
 c84:	.word	0x000002dc
 c88:	.word	0x000002c0

00000c8c <dump_daq_initialize>:
 c8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
 c90:	strd	r6, [sp, #8]
 c94:	strd	r8, [sp, #16]
 c98:	strd	sl, [sp, #24]
 c9c:	str	lr, [sp, #32]
 ca0:	sub	sp, sp, #44	; 0x2c
 ca4:	mov	r4, r0
 ca8:	mov	fp, r1
 cac:	str	r2, [sp]
 cb0:	str	r3, [sp, #4]
 cb4:	mov	r1, #120	; 0x78
 cb8:	mov	r0, #1
 cbc:	bl	570 <calloc@plt>
 cc0:	ldr	r5, [r4, #24]
 cc4:	ldrd	r2, [r4]
 cc8:	strd	r2, [sp, #12]
 ccc:	ldrd	r2, [r4, #8]
 cd0:	strd	r2, [sp, #20]
 cd4:	ldrd	r2, [r4, #16]
 cd8:	strd	r2, [sp, #28]
 cdc:	str	r5, [sp, #36]	; 0x24
 ce0:	subs	r6, r0, #0
 ce4:	beq	d20 <dump_daq_initialize+0x94>
 ce8:	cmp	r5, #0
 cec:	beq	d48 <dump_daq_initialize+0xbc>
 cf0:	ldr	r3, [r5, #12]
 cf4:	tst	r3, #1
 cf8:	beq	d48 <dump_daq_initialize+0xbc>
 cfc:	ldr	r4, [sp, #32]
 d00:	cmp	r4, #0
 d04:	beq	e2c <dump_daq_initialize+0x1a0>
 d08:	mov	r7, #0
 d0c:	ldr	sl, [pc, #404]	; ea8 <dump_daq_initialize+0x21c>
 d10:	add	sl, pc, sl
 d14:	ldr	r9, [pc, #400]	; eac <dump_daq_initialize+0x220>
 d18:	add	r9, pc, r9
 d1c:	b	d88 <dump_daq_initialize+0xfc>
 d20:	ldr	r3, [pc, #392]	; eb0 <dump_daq_initialize+0x224>
 d24:	add	r3, pc, r3
 d28:	add	r3, r3, #28
 d2c:	ldr	r2, [pc, #384]	; eb4 <dump_daq_initialize+0x228>
 d30:	add	r2, pc, r2
 d34:	ldr	r1, [sp, #4]
 d38:	ldr	r0, [sp]
 d3c:	bl	5f4 <snprintf@plt>
 d40:	mvn	r4, #1
 d44:	b	e54 <dump_daq_initialize+0x1c8>
 d48:	ldr	r3, [pc, #360]	; eb8 <dump_daq_initialize+0x22c>
 d4c:	add	r3, pc, r3
 d50:	add	r3, r3, #28
 d54:	ldr	r2, [pc, #352]	; ebc <dump_daq_initialize+0x230>
 d58:	add	r2, pc, r2
 d5c:	ldr	r1, [sp, #4]
 d60:	ldr	r0, [sp]
 d64:	bl	5f4 <snprintf@plt>
 d68:	mov	r0, r6
 d6c:	bl	594 <free@plt>
 d70:	mvn	r4, #0
 d74:	b	e54 <dump_daq_initialize+0x1c8>
 d78:	ldr	r7, [r4, #4]
 d7c:	ldr	r4, [r4, #8]
 d80:	cmp	r4, #0
 d84:	beq	dc4 <dump_daq_initialize+0x138>
 d88:	ldr	r8, [r4]
 d8c:	mov	r1, sl
 d90:	mov	r0, r8
 d94:	bl	57c <strcmp@plt>
 d98:	cmp	r0, #0
 d9c:	beq	d78 <dump_daq_initialize+0xec>
 da0:	mov	r1, r9
 da4:	mov	r0, r8
 da8:	bl	57c <strcmp@plt>
 dac:	cmp	r0, #0
 db0:	bne	d7c <dump_daq_initialize+0xf0>
 db4:	ldr	r0, [r4, #4]
 db8:	bl	5ac <strdup@plt>
 dbc:	str	r0, [r6, #12]
 dc0:	b	d7c <dump_daq_initialize+0xf0>
 dc4:	cmp	r7, #0
 dc8:	beq	e2c <dump_daq_initialize+0x1a0>
 dcc:	ldr	r1, [pc, #236]	; ec0 <dump_daq_initialize+0x234>
 dd0:	add	r1, pc, r1
 dd4:	mov	r0, r7
 dd8:	bl	5c4 <strcasecmp@plt>
 ddc:	cmp	r0, #0
 de0:	moveq	r3, #2
 de4:	streq	r3, [sp, #24]
 de8:	beq	e2c <dump_daq_initialize+0x1a0>
 dec:	ldr	r1, [pc, #208]	; ec4 <dump_daq_initialize+0x238>
 df0:	add	r1, pc, r1
 df4:	mov	r0, r7
 df8:	bl	5c4 <strcasecmp@plt>
 dfc:	cmp	r0, #0
 e00:	moveq	r3, #0
 e04:	streq	r3, [sp, #24]
 e08:	beq	e2c <dump_daq_initialize+0x1a0>
 e0c:	ldr	r1, [pc, #180]	; ec8 <dump_daq_initialize+0x23c>
 e10:	add	r1, pc, r1
 e14:	mov	r0, r7
 e18:	bl	5c4 <strcasecmp@plt>
 e1c:	cmp	r0, #0
 e20:	moveq	r3, #1
 e24:	streq	r3, [sp, #24]
 e28:	bne	e74 <dump_daq_initialize+0x1e8>
 e2c:	ldr	r4, [r5, #16]
 e30:	ldr	r3, [sp, #4]
 e34:	ldr	r2, [sp]
 e38:	add	r1, r6, #4
 e3c:	add	r0, sp, #12
 e40:	blx	r4
 e44:	subs	r4, r0, #0
 e48:	streq	r5, [r6]
 e4c:	streq	r6, [fp]
 e50:	bne	e9c <dump_daq_initialize+0x210>
 e54:	mov	r0, r4
 e58:	add	sp, sp, #44	; 0x2c
 e5c:	ldrd	r4, [sp]
 e60:	ldrd	r6, [sp, #8]
 e64:	ldrd	r8, [sp, #16]
 e68:	ldrd	sl, [sp, #24]
 e6c:	add	sp, sp, #32
 e70:	pop	{pc}		; (ldr pc, [sp], #4)
 e74:	mov	r3, r7
 e78:	ldr	r2, [pc, #76]	; ecc <dump_daq_initialize+0x240>
 e7c:	add	r2, pc, r2
 e80:	ldr	r1, [sp, #4]
 e84:	ldr	r0, [sp]
 e88:	bl	5f4 <snprintf@plt>
 e8c:	mov	r0, r6
 e90:	bl	594 <free@plt>
 e94:	mvn	r4, #0
 e98:	b	e54 <dump_daq_initialize+0x1c8>
 e9c:	mov	r0, r6
 ea0:	bl	594 <free@plt>
 ea4:	b	e54 <dump_daq_initialize+0x1c8>
 ea8:	.word	0x00000290
 eac:	.word	0x00000228
 eb0:	.word	0x000001ac
 eb4:	.word	0x00000218
 eb8:	.word	0x00000184
 ebc:	.word	0x00000224
 ec0:	.word	0x000001dc
 ec4:	.word	0x000001c8
 ec8:	.word	0x000001b0
 ecc:	.word	0x0000014c

Disassembly of section .fini:

00000ed0 <_fini>:
 ed0:	push	{r3, lr}
 ed4:	pop	{r3, pc}
