
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000044a4 <.init>:
    44a4:	push	{r3, lr}
    44a8:	bl	4800 <__assert_fail@plt+0x18>
    44ac:	pop	{r3, pc}

Disassembly of section .plt:

000044b0 <calloc@plt-0x14>:
    44b0:	push	{lr}		; (str lr, [sp, #-4]!)
    44b4:	ldr	lr, [pc, #4]	; 44c0 <calloc@plt-0x4>
    44b8:	add	lr, pc, lr
    44bc:	ldr	pc, [lr, #8]!
    44c0:	andeq	r5, r2, r0, asr #22

000044c4 <calloc@plt>:
    44c4:	add	ip, pc, #0, 12
    44c8:	add	ip, ip, #151552	; 0x25000
    44cc:	ldr	pc, [ip, #2880]!	; 0xb40

000044d0 <raise@plt>:
    44d0:	add	ip, pc, #0, 12
    44d4:	add	ip, ip, #151552	; 0x25000
    44d8:	ldr	pc, [ip, #2872]!	; 0xb38

000044dc <gen_hop_pattern@plt>:
    44dc:	add	ip, pc, #0, 12
    44e0:	add	ip, ip, #151552	; 0x25000
    44e4:	ldr	pc, [ip, #2864]!	; 0xb30

000044e8 <__cxa_finalize@plt>:
    44e8:	add	ip, pc, #0, 12
    44ec:	add	ip, ip, #151552	; 0x25000
    44f0:	ldr	pc, [ip, #2856]!	; 0xb28

000044f4 <btbb_get_payload_packed@plt>:
    44f4:	add	ip, pc, #0, 12
    44f8:	add	ip, ip, #151552	; 0x25000
    44fc:	ldr	pc, [ip, #2848]!	; 0xb20

00004500 <printf@plt>:
    4500:	add	ip, pc, #0, 12
    4504:	add	ip, ip, #151552	; 0x25000
    4508:	ldr	pc, [ip, #2840]!	; 0xb18

0000450c <fopen@plt>:
    450c:	add	ip, pc, #0, 12
    4510:	add	ip, ip, #151552	; 0x25000
    4514:	ldr	pc, [ip, #2832]!	; 0xb10

00004518 <lell_packet_is_data@plt>:
    4518:	add	ip, pc, #0, 12
    451c:	add	ip, ip, #151552	; 0x25000
    4520:	ldr	pc, [ip, #2824]!	; 0xb08

00004524 <fflush@plt>:
    4524:	add	ip, pc, #0, 12
    4528:	add	ip, ip, #151552	; 0x25000
    452c:	ldr	pc, [ip, #2816]!	; 0xb00

00004530 <btbb_packet_set_flag@plt>:
    4530:	add	ip, pc, #0, 12
    4534:	add	ip, ip, #151552	; 0x25000
    4538:	ldr	pc, [ip, #2808]!	; 0xaf8

0000453c <pcapng_append_interface_option@plt>:
    453c:	add	ip, pc, #0, 12
    4540:	add	ip, ip, #151552	; 0x25000
    4544:	ldr	pc, [ip, #2800]!	; 0xaf0

00004548 <free@plt>:
    4548:	add	ip, pc, #0, 12
    454c:	add	ip, ip, #151552	; 0x25000
    4550:	ldr	pc, [ip, #2792]!	; 0xae8

00004554 <btbb_packet_get_modulation@plt>:
    4554:	add	ip, pc, #0, 12
    4558:	add	ip, ip, #151552	; 0x25000
    455c:	ldr	pc, [ip, #2784]!	; 0xae0

00004560 <btbb_packet_get_ac_errors@plt>:
    4560:	add	ip, pc, #0, 12
    4564:	add	ip, ip, #151552	; 0x25000
    4568:	ldr	pc, [ip, #2776]!	; 0xad8

0000456c <memcpy@plt>:
    456c:	add	ip, pc, #0, 12
    4570:	add	ip, ip, #151552	; 0x25000
    4574:	ldr	pc, [ip, #2768]!	; 0xad0

00004578 <btbb_uap_from_header@plt>:
    4578:	add	ip, pc, #0, 12
    457c:	add	ip, ip, #151552	; 0x25000
    4580:	ldr	pc, [ip, #2760]!	; 0xac8

00004584 <fhs@plt>:
    4584:	add	ip, pc, #0, 12
    4588:	add	ip, ip, #151552	; 0x25000
    458c:	ldr	pc, [ip, #2752]!	; 0xac0

00004590 <EV4@plt>:
    4590:	add	ip, pc, #0, 12
    4594:	add	ip, ip, #151552	; 0x25000
    4598:	ldr	pc, [ip, #2744]!	; 0xab8

0000459c <memcmp@plt>:
    459c:	add	ip, pc, #0, 12
    45a0:	add	ip, ip, #151552	; 0x25000
    45a4:	ldr	pc, [ip, #2736]!	; 0xab0

000045a8 <btbb_header_present@plt>:
    45a8:	add	ip, pc, #0, 12
    45ac:	add	ip, ip, #151552	; 0x25000
    45b0:	ldr	pc, [ip, #2728]!	; 0xaa8

000045b4 <pcapng_create@plt>:
    45b4:	add	ip, pc, #0, 12
    45b8:	add	ip, ip, #151552	; 0x25000
    45bc:	ldr	pc, [ip, #2720]!	; 0xaa0

000045c0 <DM@plt>:
    45c0:	add	ip, pc, #0, 12
    45c4:	add	ip, ip, #151552	; 0x25000
    45c8:	ldr	pc, [ip, #2712]!	; 0xa98

000045cc <HV@plt>:
    45cc:	add	ip, pc, #0, 12
    45d0:	add	ip, ip, #151552	; 0x25000
    45d4:	ldr	pc, [ip, #2704]!	; 0xa90

000045d8 <perror@plt>:
    45d8:	add	ip, pc, #0, 12
    45dc:	add	ip, ip, #151552	; 0x25000
    45e0:	ldr	pc, [ip, #2696]!	; 0xa88

000045e4 <btbb_packet_set_uap@plt>:
    45e4:	add	ip, pc, #0, 12
    45e8:	add	ip, ip, #151552	; 0x25000
    45ec:	ldr	pc, [ip, #2688]!	; 0xa80

000045f0 <fwrite@plt>:
    45f0:	add	ip, pc, #0, 12
    45f4:	add	ip, ip, #151552	; 0x25000
    45f8:	ldr	pc, [ip, #2680]!	; 0xa78

000045fc <crc_check@plt>:
    45fc:	add	ip, pc, #0, 12
    4600:	add	ip, ip, #151552	; 0x25000
    4604:	ldr	pc, [ip, #2672]!	; 0xa70

00004608 <btbb_decode@plt>:
    4608:	add	ip, pc, #0, 12
    460c:	add	ip, ip, #151552	; 0x25000
    4610:	ldr	pc, [ip, #2664]!	; 0xa68

00004614 <btbb_winnow@plt>:
    4614:	add	ip, pc, #0, 12
    4618:	add	ip, ip, #151552	; 0x25000
    461c:	ldr	pc, [ip, #2656]!	; 0xa60

00004620 <get_hop_pattern@plt>:
    4620:	add	ip, pc, #0, 12
    4624:	add	ip, ip, #151552	; 0x25000
    4628:	ldr	pc, [ip, #2648]!	; 0xa58

0000462c <puts@plt>:
    462c:	add	ip, pc, #0, 12
    4630:	add	ip, ip, #151552	; 0x25000
    4634:	ldr	pc, [ip, #2640]!	; 0xa50

00004638 <malloc@plt>:
    4638:	add	ip, pc, #0, 12
    463c:	add	ip, ip, #151552	; 0x25000
    4640:	ldr	pc, [ip, #2632]!	; 0xa48

00004644 <try_hop@plt>:
    4644:	add	ip, pc, #0, 12
    4648:	add	ip, ip, #151552	; 0x25000
    464c:	ldr	pc, [ip, #2624]!	; 0xa40

00004650 <__gmon_start__@plt>:
    4650:	add	ip, pc, #0, 12
    4654:	add	ip, ip, #151552	; 0x25000
    4658:	ldr	pc, [ip, #2616]!	; 0xa38

0000465c <open@plt>:
    465c:	add	ip, pc, #0, 12
    4660:	add	ip, ip, #151552	; 0x25000
    4664:	ldr	pc, [ip, #2608]!	; 0xa30

00004668 <__ctype_b_loc@plt>:
    4668:	add	ip, pc, #0, 12
    466c:	add	ip, ip, #151552	; 0x25000
    4670:	ldr	pc, [ip, #2600]!	; 0xa28

00004674 <exit@plt>:
    4674:	add	ip, pc, #0, 12
    4678:	add	ip, ip, #151552	; 0x25000
    467c:	ldr	pc, [ip, #2592]!	; 0xa20

00004680 <btbb_packet_get_payload_length@plt>:
    4680:	add	ip, pc, #0, 12
    4684:	add	ip, ip, #151552	; 0x25000
    4688:	ldr	pc, [ip, #2584]!	; 0xa18

0000468c <strlen@plt>:
    468c:	add	ip, pc, #0, 12
    4690:	add	ip, ip, #151552	; 0x25000
    4694:	ldr	pc, [ip, #2576]!	; 0xa10

00004698 <btbb_decode_header@plt>:
    4698:	add	ip, pc, #0, 12
    469c:	add	ip, ip, #151552	; 0x25000
    46a0:	ldr	pc, [ip, #2568]!	; 0xa08

000046a4 <mmap@plt>:
    46a4:	add	ip, pc, #0, 12
    46a8:	add	ip, ip, #151552	; 0x25000
    46ac:	ldr	pc, [ip, #2560]!	; 0xa00

000046b0 <btbb_packet_get_header_packed@plt>:
    46b0:	add	ip, pc, #0, 12
    46b4:	add	ip, ip, #151552	; 0x25000
    46b8:	ldr	pc, [ip, #2552]!	; 0x9f8

000046bc <lell_get_channel_k@plt>:
    46bc:	add	ip, pc, #0, 12
    46c0:	add	ip, ip, #151552	; 0x25000
    46c4:	ldr	pc, [ip, #2544]!	; 0x9f0

000046c8 <fprintf@plt>:
    46c8:	add	ip, pc, #0, 12
    46cc:	add	ip, ip, #151552	; 0x25000
    46d0:	ldr	pc, [ip, #2536]!	; 0x9e8

000046d4 <getpagesize@plt>:
    46d4:	add	ip, pc, #0, 12
    46d8:	add	ip, ip, #151552	; 0x25000
    46dc:	ldr	pc, [ip, #2528]!	; 0x9e0

000046e0 <pcapng_append_packet@plt>:
    46e0:	add	ip, pc, #0, 12
    46e4:	add	ip, ip, #151552	; 0x25000
    46e8:	ldr	pc, [ip, #2520]!	; 0x9d8

000046ec <btbb_packet_get_transport@plt>:
    46ec:	add	ip, pc, #0, 12
    46f0:	add	ip, ip, #151552	; 0x25000
    46f4:	ldr	pc, [ip, #2512]!	; 0x9d0

000046f8 <memset@plt>:
    46f8:	add	ip, pc, #0, 12
    46fc:	add	ip, ip, #151552	; 0x25000
    4700:	ldr	pc, [ip, #2504]!	; 0x9c8

00004704 <putchar@plt>:
    4704:	add	ip, pc, #0, 12
    4708:	add	ip, ip, #151552	; 0x25000
    470c:	ldr	pc, [ip, #2496]!	; 0x9c0

00004710 <strncpy@plt>:
    4710:	add	ip, pc, #0, 12
    4714:	add	ip, ip, #151552	; 0x25000
    4718:	ldr	pc, [ip, #2488]!	; 0x9b8

0000471c <EV3@plt>:
    471c:	add	ip, pc, #0, 12
    4720:	add	ip, ip, #151552	; 0x25000
    4724:	ldr	pc, [ip, #2480]!	; 0x9b0

00004728 <btbb_packet_get_lap@plt>:
    4728:	add	ip, pc, #0, 12
    472c:	add	ip, ip, #151552	; 0x25000
    4730:	ldr	pc, [ip, #2472]!	; 0x9a8

00004734 <bt_compidtostr@plt>:
    4734:	add	ip, pc, #0, 12
    4738:	add	ip, ip, #151552	; 0x25000
    473c:	ldr	pc, [ip, #2464]!	; 0x9a0

00004740 <write@plt>:
    4740:	add	ip, pc, #0, 12
    4744:	add	ip, ip, #151552	; 0x25000
    4748:	ldr	pc, [ip, #2456]!	; 0x998

0000474c <get_piconet@plt>:
    474c:	add	ip, pc, #0, 12
    4750:	add	ip, ip, #151552	; 0x25000
    4754:	ldr	pc, [ip, #2448]!	; 0x990

00004758 <perm5@plt>:
    4758:	add	ip, pc, #0, 12
    475c:	add	ip, ip, #151552	; 0x25000
    4760:	ldr	pc, [ip, #2440]!	; 0x988

00004764 <fclose@plt>:
    4764:	add	ip, pc, #0, 12
    4768:	add	ip, ip, #151552	; 0x25000
    476c:	ldr	pc, [ip, #2432]!	; 0x980

00004770 <EV5@plt>:
    4770:	add	ip, pc, #0, 12
    4774:	add	ip, ip, #151552	; 0x25000
    4778:	ldr	pc, [ip, #2424]!	; 0x978

0000477c <munmap@plt>:
    477c:	add	ip, pc, #0, 12
    4780:	add	ip, ip, #151552	; 0x25000
    4784:	ldr	pc, [ip, #2416]!	; 0x970

00004788 <DH@plt>:
    4788:	add	ip, pc, #0, 12
    478c:	add	ip, ip, #151552	; 0x25000
    4790:	ldr	pc, [ip, #2408]!	; 0x968

00004794 <btbb_packet_get_channel@plt>:
    4794:	add	ip, pc, #0, 12
    4798:	add	ip, ip, #151552	; 0x25000
    479c:	ldr	pc, [ip, #2400]!	; 0x960

000047a0 <btbb_decode_payload@plt>:
    47a0:	add	ip, pc, #0, 12
    47a4:	add	ip, ip, #151552	; 0x25000
    47a8:	ldr	pc, [ip, #2392]!	; 0x958

000047ac <promiscuous_packet_search@plt>:
    47ac:	add	ip, pc, #0, 12
    47b0:	add	ip, ip, #151552	; 0x25000
    47b4:	ldr	pc, [ip, #2384]!	; 0x950

000047b8 <pcapng_close@plt>:
    47b8:	add	ip, pc, #0, 12
    47bc:	add	ip, ip, #151552	; 0x25000
    47c0:	ldr	pc, [ip, #2376]!	; 0x948

000047c4 <btbb_print_packet@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #151552	; 0x25000
    47cc:	ldr	pc, [ip, #2368]!	; 0x940

000047d0 <try_clock@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #151552	; 0x25000
    47d8:	ldr	pc, [ip, #2360]!	; 0x938

000047dc <close@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #151552	; 0x25000
    47e4:	ldr	pc, [ip, #2352]!	; 0x930

000047e8 <__assert_fail@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #151552	; 0x25000
    47f0:	ldr	pc, [ip, #2344]!	; 0x928

Disassembly of section .text:

00004800 <btbb_gen_syncword@@Base-0x128>:
    4800:	ldr	r3, [pc, #20]	; 481c <__assert_fail@plt+0x34>
    4804:	ldr	r2, [pc, #20]	; 4820 <__assert_fail@plt+0x38>
    4808:	add	r3, pc, r3
    480c:	ldr	r2, [r3, r2]
    4810:	cmp	r2, #0
    4814:	bxeq	lr
    4818:	b	4650 <__gmon_start__@plt>
    481c:	strdeq	r5, [r2], -r0
    4820:	andeq	r0, r0, r0, lsr r1
    4824:	ldr	r0, [pc, #44]	; 4858 <__assert_fail@plt+0x70>
    4828:	ldr	r3, [pc, #44]	; 485c <__assert_fail@plt+0x74>
    482c:	add	r0, pc, r0
    4830:	add	r3, pc, r3
    4834:	cmp	r3, r0
    4838:	ldr	r3, [pc, #32]	; 4860 <__assert_fail@plt+0x78>
    483c:	add	r3, pc, r3
    4840:	bxeq	lr
    4844:	ldr	r2, [pc, #24]	; 4864 <__assert_fail@plt+0x7c>
    4848:	ldr	r3, [r3, r2]
    484c:	cmp	r3, #0
    4850:	bxeq	lr
    4854:	bx	r3
    4858:	andeq	r5, r2, r0, lsl r9
    485c:	andeq	r5, r2, ip, lsl #18
    4860:			; <UNDEFINED> instruction: 0x000257bc
    4864:	andeq	r0, r0, r0, lsr #2
    4868:	ldr	r0, [pc, #56]	; 48a8 <__assert_fail@plt+0xc0>
    486c:	ldr	r3, [pc, #56]	; 48ac <__assert_fail@plt+0xc4>
    4870:	add	r0, pc, r0
    4874:	add	r3, pc, r3
    4878:	sub	r1, r3, r0
    487c:	ldr	r3, [pc, #44]	; 48b0 <__assert_fail@plt+0xc8>
    4880:	asr	r1, r1, #2
    4884:	add	r3, pc, r3
    4888:	add	r1, r1, r1, lsr #31
    488c:	asrs	r1, r1, #1
    4890:	bxeq	lr
    4894:	ldr	r2, [pc, #24]	; 48b4 <__assert_fail@plt+0xcc>
    4898:	ldr	r3, [r3, r2]
    489c:	cmp	r3, #0
    48a0:	bxeq	lr
    48a4:	bx	r3
    48a8:	andeq	r5, r2, ip, asr #17
    48ac:	andeq	r5, r2, r8, asr #17
    48b0:	andeq	r5, r2, r4, ror r7
    48b4:	andeq	r0, r0, r8, lsr r1
    48b8:	ldr	r3, [pc, #76]	; 490c <__assert_fail@plt+0x124>
    48bc:	ldr	r2, [pc, #76]	; 4910 <__assert_fail@plt+0x128>
    48c0:	add	r3, pc, r3
    48c4:	add	r2, pc, r2
    48c8:	ldrb	r3, [r3]
    48cc:	cmp	r3, #0
    48d0:	bxne	lr
    48d4:	ldr	r3, [pc, #56]	; 4914 <__assert_fail@plt+0x12c>
    48d8:	push	{r4, lr}
    48dc:	ldr	r3, [r2, r3]
    48e0:	cmp	r3, #0
    48e4:	beq	48f4 <__assert_fail@plt+0x10c>
    48e8:	ldr	r3, [pc, #40]	; 4918 <__assert_fail@plt+0x130>
    48ec:	ldr	r0, [pc, r3]
    48f0:	bl	44e8 <__cxa_finalize@plt>
    48f4:	bl	4824 <__assert_fail@plt+0x3c>
    48f8:	ldr	r3, [pc, #28]	; 491c <__assert_fail@plt+0x134>
    48fc:	mov	r2, #1
    4900:	add	r3, pc, r3
    4904:	strb	r2, [r3]
    4908:	pop	{r4, pc}
    490c:	andeq	r5, r2, ip, ror r8
    4910:	andeq	r5, r2, r4, lsr r7
    4914:	andeq	r0, r0, ip, lsl r1
    4918:	andeq	r5, r2, r8, asr #16
    491c:	andeq	r5, r2, ip, lsr r8
    4920:	b	4868 <__assert_fail@plt+0x80>
    4924:	andeq	r0, r0, r0

00004928 <btbb_gen_syncword@@Base>:
    4928:	push	{r4, r5, fp, lr}
    492c:	add	fp, sp, #8
    4930:	ldr	r2, [pc, #60]	; 4974 <btbb_gen_syncword@@Base+0x4c>
    4934:	movw	ip, #3710	; 0xe7e
    4938:	mov	r1, #-1342177278	; 0xb0000002
    493c:	mov	r3, #0
    4940:	mov	lr, #8388608	; 0x800000
    4944:	movt	ip, #51074	; 0xc782
    4948:	add	r2, pc, r2
    494c:	tst	r0, lr, lsr r3
    4950:	add	r3, r3, #1
    4954:	ldrdne	r4, [r2]
    4958:	add	r2, r2, #8
    495c:	eorne	r1, r5, r1
    4960:	eorne	ip, r4, ip
    4964:	cmp	r3, #24
    4968:	moveq	r0, ip
    496c:	popeq	{r4, r5, fp, pc}
    4970:	b	494c <btbb_gen_syncword@@Base+0x24>
    4974:	andeq	fp, r0, r0, lsr #18

00004978 <btbb_get_release@@Base>:
    4978:	ldr	r0, [pc, #4]	; 4984 <btbb_get_release@@Base+0xc>
    497c:	add	r0, pc, r0
    4980:	bx	lr
    4984:	andeq	sp, r0, r0, ror #29

00004988 <btbb_get_version@@Base>:
    4988:	ldr	r0, [pc, #4]	; 4994 <btbb_get_version@@Base+0xc>
    498c:	add	r0, pc, r0
    4990:	bx	lr
    4994:	ldrdeq	sp, [r0], -fp

00004998 <btbb_init@@Base>:
    4998:	push	{r4, r5, r6, sl, fp, lr}
    499c:	add	fp, sp, #16
    49a0:	cmp	r0, #6
    49a4:	bcs	49f8 <btbb_init@@Base+0x60>
    49a8:	mov	r5, r0
    49ac:	mov	r4, #0
    49b0:	cmp	r0, #0
    49b4:	beq	49f0 <btbb_init@@Base+0x58>
    49b8:	ldr	r0, [pc, #112]	; 4a30 <btbb_init@@Base+0x98>
    49bc:	ldr	r0, [pc, r0]
    49c0:	cmp	r0, #0
    49c4:	bne	49f0 <btbb_init@@Base+0x58>
    49c8:	mov	r4, #0
    49cc:	mov	r6, #0
    49d0:	add	r6, r6, #1
    49d4:	mov	r0, #0
    49d8:	mov	r1, #0
    49dc:	mov	r2, #0
    49e0:	mov	r3, r6
    49e4:	bl	7ec8 <clock_from_fhs@@Base+0xd0>
    49e8:	cmp	r5, r6
    49ec:	bne	49d0 <btbb_init@@Base+0x38>
    49f0:	mov	r0, r4
    49f4:	pop	{r4, r5, r6, sl, fp, pc}
    49f8:	ldr	r0, [pc, #36]	; 4a24 <btbb_init@@Base+0x8c>
    49fc:	ldr	r0, [pc, r0]
    4a00:	ldr	r0, [r0]
    4a04:	ldr	r1, [pc, #28]	; 4a28 <btbb_init@@Base+0x90>
    4a08:	ldr	r2, [pc, #28]	; 4a2c <btbb_init@@Base+0x94>
    4a0c:	add	r1, pc, r1
    4a10:	add	r2, pc, r2
    4a14:	bl	46c8 <fprintf@plt>
    4a18:	mvn	r4, #0
    4a1c:	mov	r0, r4
    4a20:	pop	{r4, r5, r6, sl, fp, pc}
    4a24:	andeq	r5, r2, r0, lsr #14
    4a28:	andeq	sp, r0, pc, asr lr
    4a2c:	andeq	sp, r0, fp, ror lr
    4a30:	andeq	r5, r2, r4, lsl #15

00004a34 <btbb_packet_new@@Base>:
    4a34:	push	{r4, r5, fp, lr}
    4a38:	add	fp, sp, #8
    4a3c:	mov	r0, #1
    4a40:	mov	r1, #5952	; 0x1740
    4a44:	mov	r5, #1
    4a48:	bl	44c4 <calloc@plt>
    4a4c:	mov	r4, r0
    4a50:	cmp	r0, #0
    4a54:	movne	r0, r4
    4a58:	strne	r5, [r4]
    4a5c:	popne	{r4, r5, fp, pc}
    4a60:	ldr	r0, [pc, #32]	; 4a88 <btbb_packet_new@@Base+0x54>
    4a64:	mov	r1, #25
    4a68:	mov	r2, #1
    4a6c:	ldr	r0, [pc, r0]
    4a70:	ldr	r3, [r0]
    4a74:	ldr	r0, [pc, #16]	; 4a8c <btbb_packet_new@@Base+0x58>
    4a78:	add	r0, pc, r0
    4a7c:	bl	45f0 <fwrite@plt>
    4a80:	mov	r0, r4
    4a84:	pop	{r4, r5, fp, pc}
    4a88:			; <UNDEFINED> instruction: 0x000256b0
    4a8c:	andeq	sp, r0, sp, lsl lr

00004a90 <btbb_packet_ref@@Base>:
    4a90:	ldr	r1, [r0]
    4a94:	add	r1, r1, #1
    4a98:	str	r1, [r0]
    4a9c:	bx	lr

00004aa0 <btbb_packet_unref@@Base>:
    4aa0:	ldr	r1, [r0]
    4aa4:	subs	r1, r1, #1
    4aa8:	str	r1, [r0]
    4aac:	bxne	lr
    4ab0:	b	4548 <free@plt>

00004ab4 <btbb_packet_get_lap@@Base>:
    4ab4:	ldr	r0, [r0, #12]
    4ab8:	bx	lr

00004abc <btbb_packet_set_uap@@Base>:
    4abc:	strb	r1, [r0, #9]
    4ac0:	ldr	r1, [r0, #4]
    4ac4:	orr	r1, r1, #4
    4ac8:	str	r1, [r0, #4]
    4acc:	bx	lr

00004ad0 <btbb_packet_set_flag@@Base>:
    4ad0:	push	{fp, lr}
    4ad4:	mov	fp, sp
    4ad8:	ldr	lr, [r0, #4]
    4adc:	mov	ip, #1
    4ae0:	cmp	r2, #0
    4ae4:	orr	r3, lr, ip, lsl r1
    4ae8:	biceq	r3, lr, ip, lsl r1
    4aec:	str	r3, [r0, #4]
    4af0:	pop	{fp, pc}

00004af4 <btbb_packet_get_uap@@Base>:
    4af4:	ldrb	r0, [r0, #9]
    4af8:	bx	lr

00004afc <btbb_packet_get_nap@@Base>:
    4afc:	ldrh	r0, [r0, #10]
    4b00:	bx	lr

00004b04 <btbb_packet_get_clkn@@Base>:
    4b04:	ldr	r0, [r0, #2816]	; 0xb00
    4b08:	bx	lr

00004b0c <btbb_packet_get_channel@@Base>:
    4b0c:	ldrb	r0, [r0, #8]
    4b10:	bx	lr

00004b14 <btbb_packet_set_modulation@@Base>:
    4b14:	strb	r1, [r0, #16]
    4b18:	bx	lr

00004b1c <btbb_packet_get_modulation@@Base>:
    4b1c:	ldrb	r0, [r0, #16]
    4b20:	bx	lr

00004b24 <btbb_packet_set_transport@@Base>:
    4b24:	strb	r1, [r0, #17]
    4b28:	bx	lr

00004b2c <btbb_packet_get_transport@@Base>:
    4b2c:	ldrb	r0, [r0, #17]
    4b30:	bx	lr

00004b34 <btbb_packet_get_ac_errors@@Base>:
    4b34:	ldrb	r0, [r0, #2820]	; 0xb04
    4b38:	bx	lr
    4b3c:	nop	{0}

00004b40 <promiscuous_packet_search@@Base>:
    4b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4b44:	add	fp, sp, #28
    4b48:	sub	sp, sp, #4
    4b4c:	vpush	{d8-d9}
    4b50:	sub	sp, sp, #32
    4b54:	cmp	r1, #1
    4b58:	str	r3, [sp, #16]
    4b5c:	blt	4ee4 <promiscuous_packet_search@@Base+0x3a4>
    4b60:	mov	r5, r0
    4b64:	mov	r6, r1
    4b68:	ldrb	r0, [r0, #57]	; 0x39
    4b6c:	str	r2, [sp]
    4b70:	vldr	d8, [pc, #920]	; 4f10 <promiscuous_packet_search@@Base+0x3d0>
    4b74:	mov	r4, #0
    4b78:	add	sl, sp, #20
    4b7c:	vmov.i32	d9, #2	; 0x00000002
    4b80:	ldrb	r1, [r5, #58]	; 0x3a
    4b84:	ldrb	r2, [r5, #59]	; 0x3b
    4b88:	ldrb	r3, [r5, #60]	; 0x3c
    4b8c:	mov	r7, r5
    4b90:	orr	r0, r0, r1, lsl #1
    4b94:	ldrb	r1, [r5, #61]	; 0x3d
    4b98:	orr	r0, r0, r2, lsl #2
    4b9c:	orr	r0, r0, r3, lsl #3
    4ba0:	orr	r0, r0, r1, lsl #4
    4ba4:	ldrb	r1, [r5, #62]	; 0x3e
    4ba8:	ldr	r2, [pc, #872]	; 4f18 <promiscuous_packet_search@@Base+0x3d8>
    4bac:	str	r6, [sp, #12]
    4bb0:	str	r5, [sp, #8]
    4bb4:	orr	r0, r0, r1, lsl #5
    4bb8:	add	r2, pc, r2
    4bbc:	lsl	r8, r0, #1
    4bc0:	b	4c94 <promiscuous_packet_search@@Base+0x154>
    4bc4:	rsb	r5, r0, #0
    4bc8:	ldr	r0, [r6, #40]	; 0x28
    4bcc:	cmp	r0, #8
    4bd0:	bne	4bec <promiscuous_packet_search@@Base+0xac>
    4bd4:	ldr	r0, [r6, #36]	; 0x24
    4bd8:	add	r1, sp, #24
    4bdc:	mov	r2, #8
    4be0:	bl	459c <memcmp@plt>
    4be4:	cmp	r0, #0
    4be8:	beq	4c00 <promiscuous_packet_search@@Base+0xc0>
    4bec:	ldr	r0, [r6, #32]
    4bf0:	cmp	r0, #0
    4bf4:	addsne	r6, r0, r5
    4bf8:	bne	4bc8 <promiscuous_packet_search@@Base+0x88>
    4bfc:	b	4ea8 <promiscuous_packet_search@@Base+0x368>
    4c00:	ldrd	r0, [r6, #8]
    4c04:	movw	r2, #21845	; 0x5555
    4c08:	movw	r3, #13107	; 0x3333
    4c0c:	movt	r2, #21845	; 0x5555
    4c10:	movt	r3, #13107	; 0x3333
    4c14:	mov	r6, r2
    4c18:	mov	r5, r3
    4c1c:	and	r2, r2, r1, lsr #1
    4c20:	sub	r2, r1, r2
    4c24:	and	r3, r3, r2, lsr #2
    4c28:	and	r2, r2, r5
    4c2c:	add	r2, r2, r3
    4c30:	movw	r3, #3855	; 0xf0f
    4c34:	movt	r3, #3855	; 0xf0f
    4c38:	add	r2, r2, r2, lsr #4
    4c3c:	mov	ip, r3
    4c40:	and	r2, r2, r3
    4c44:	movw	r3, #257	; 0x101
    4c48:	movt	r3, #257	; 0x101
    4c4c:	mov	lr, r3
    4c50:	mul	r2, r2, r3
    4c54:	and	r3, r6, r0, lsr #1
    4c58:	sub	r0, r0, r3
    4c5c:	and	r3, r5, r0, lsr #2
    4c60:	and	r0, r0, r5
    4c64:	add	r0, r0, r3
    4c68:	add	r0, r0, r0, lsr #4
    4c6c:	and	r0, r0, ip
    4c70:	mul	r0, r0, lr
    4c74:	lsr	r0, r0, #24
    4c78:	add	ip, r0, r2, lsr #24
    4c7c:	ldr	r0, [fp, #8]
    4c80:	strb	ip, [r0]
    4c84:	eor	r0, r1, r9
    4c88:	lsr	r0, r0, #2
    4c8c:	str	r0, [sp, #4]
    4c90:	b	4eb4 <promiscuous_packet_search@@Base+0x374>
    4c94:	add	r0, r5, r4
    4c98:	and	r1, r8, #254	; 0xfe
    4c9c:	ldrb	r0, [r0, #63]	; 0x3f
    4ca0:	lsl	r0, r0, #6
    4ca4:	orr	r8, r0, r1, lsr #1
    4ca8:	uxtb	r0, r8
    4cac:	ldrb	r0, [r2, r0]
    4cb0:	cmp	r0, #1
    4cb4:	bhi	4ed4 <promiscuous_packet_search@@Base+0x394>
    4cb8:	vmov.i32	q8, #0	; 0x00000000
    4cbc:	mov	r0, #0
    4cc0:	vorr	d18, d8, d8
    4cc4:	add	r1, r7, r0
    4cc8:	vmovl.u32	q11, d18
    4ccc:	add	r0, r0, #2
    4cd0:	vadd.i32	d18, d18, d9
    4cd4:	ldrh	r1, [r1]
    4cd8:	cmp	r0, #64	; 0x40
    4cdc:	strh	r1, [sp, #20]
    4ce0:	vld1.16	{d19[0]}, [sl :16]
    4ce4:	vmovl.u8	q10, d19
    4ce8:	vmovl.u16	q10, d20
    4cec:	vmovl.u32	q10, d20
    4cf0:	vshl.u64	q10, q10, q11
    4cf4:	vorr	q8, q10, q8
    4cf8:	bne	4cc4 <promiscuous_packet_search@@Base+0x184>
    4cfc:	ldr	r0, [fp, #8]
    4d00:	mov	ip, #0
    4d04:	vorr	d18, d17, d17
    4d08:	movw	lr, #2040	; 0x7f8
    4d0c:	vorr	q8, q8, q9
    4d10:	vmov.32	r1, d16[1]
    4d14:	strb	ip, [r0]
    4d18:	mov	r0, #1016	; 0x3f8
    4d1c:	ldr	r3, [pc, #504]	; 4f1c <promiscuous_packet_search@@Base+0x3dc>
    4d20:	and	r2, r0, r1, lsr #22
    4d24:	movw	r0, #36246	; 0x8d96
    4d28:	bic	r1, r1, #-33554432	; 0xfe000000
    4d2c:	ldr	r6, [pc, #492]	; 4f20 <promiscuous_packet_search@@Base+0x3e0>
    4d30:	movt	r0, #33668	; 0x8384
    4d34:	add	r3, pc, r3
    4d38:	add	r6, pc, r6
    4d3c:	ldr	r2, [r3, r2]!
    4d40:	ldr	r3, [r3, #4]
    4d44:	orr	r9, r3, r1
    4d48:	eor	r1, r9, r0
    4d4c:	ldr	r0, [pc, #464]	; 4f24 <promiscuous_packet_search@@Base+0x3e4>
    4d50:	uxtb	r3, r1
    4d54:	and	r5, lr, r1, lsr #5
    4d58:	ldr	r3, [r6, r3, lsl #3]!
    4d5c:	add	r0, pc, r0
    4d60:	ldr	r5, [r0, r5]!
    4d64:	eor	r3, r5, r3
    4d68:	vmov.32	r5, d16[0]
    4d6c:	ldr	r0, [r0, #4]
    4d70:	orr	r2, r2, r5
    4d74:	ldr	r5, [pc, #428]	; 4f28 <promiscuous_packet_search@@Base+0x3e8>
    4d78:	eor	r2, r3, r2
    4d7c:	and	r3, lr, r1, lsr #13
    4d80:	and	r1, lr, r1, lsr #21
    4d84:	add	r5, pc, r5
    4d88:	ldr	r3, [r5, r3]!
    4d8c:	eor	r2, r2, r3
    4d90:	ldr	r3, [pc, #404]	; 4f2c <promiscuous_packet_search@@Base+0x3ec>
    4d94:	add	r3, pc, r3
    4d98:	ldr	r1, [r3, r1]!
    4d9c:	eor	r1, r2, r1
    4da0:	movw	r2, #21756	; 0x54fc
    4da4:	movt	r2, #48076	; 0xbbcc
    4da8:	eor	r1, r1, r2
    4dac:	ldr	r2, [r6, #4]
    4db0:	eor	r0, r0, r2
    4db4:	ldr	r2, [r5, #4]
    4db8:	eor	r0, r0, r2
    4dbc:	ldr	r2, [r3, #4]
    4dc0:	eor	r2, r0, r2
    4dc4:	orrs	r0, r1, r2
    4dc8:	lsr	r0, r9, #2
    4dcc:	str	r0, [sp, #4]
    4dd0:	beq	4eb4 <promiscuous_packet_search@@Base+0x374>
    4dd4:	str	r1, [sp, #24]
    4dd8:	str	r2, [sp, #28]
    4ddc:	ldr	r0, [pc, #332]	; 4f30 <promiscuous_packet_search@@Base+0x3f0>
    4de0:	ldr	r0, [pc, r0]
    4de4:	cmp	r0, #0
    4de8:	beq	4ea8 <promiscuous_packet_search@@Base+0x368>
    4dec:	movw	r3, #47810	; 0xbac2
    4df0:	ldr	r0, [r0, #16]
    4df4:	movt	r3, #40777	; 0x9f49
    4df8:	mov	r6, r3
    4dfc:	add	r1, r1, r3
    4e00:	movw	r3, #31161	; 0x79b9
    4e04:	movt	r3, #40503	; 0x9e37
    4e08:	add	r3, r2, r3
    4e0c:	add	r2, r2, r6
    4e10:	sub	r1, r1, r3
    4e14:	movw	r3, #63341	; 0xf76d
    4e18:	movt	r3, #7
    4e1c:	eor	r1, r1, r3
    4e20:	movw	r3, #48887	; 0xbef7
    4e24:	sub	r2, r2, r1
    4e28:	movt	r3, #65261	; 0xfeed
    4e2c:	eor	r2, r2, r1, lsl #8
    4e30:	sub	r3, r3, r1
    4e34:	sub	r3, r3, r2
    4e38:	sub	r1, r1, r2
    4e3c:	eor	r3, r3, r2, lsr #13
    4e40:	sub	r1, r1, r3
    4e44:	sub	r2, r2, r3
    4e48:	eor	r1, r1, r3, lsr #12
    4e4c:	sub	r2, r2, r1
    4e50:	sub	r3, r3, r1
    4e54:	eor	r2, r2, r1, lsl #16
    4e58:	sub	r3, r3, r2
    4e5c:	sub	r1, r1, r2
    4e60:	eor	r3, r3, r2, lsr #5
    4e64:	sub	r1, r1, r3
    4e68:	sub	r2, r2, r3
    4e6c:	eor	r1, r1, r3, lsr #3
    4e70:	sub	r2, r2, r1
    4e74:	eor	r2, r2, r1, lsl #10
    4e78:	sub	r1, r3, r1
    4e7c:	sub	r1, r1, r2
    4e80:	eor	r1, r1, r2, lsr #15
    4e84:	ldm	r0, {r2, r3}
    4e88:	sub	r3, r3, #1
    4e8c:	and	r1, r3, r1
    4e90:	add	r1, r1, r1, lsl #1
    4e94:	ldr	r1, [r2, r1, lsl #2]
    4e98:	cmp	r1, #0
    4e9c:	ldrne	r0, [r0, #20]
    4ea0:	subsne	r6, r1, r0
    4ea4:	bne	4bc4 <promiscuous_packet_search@@Base+0x84>
    4ea8:	ldr	r0, [fp, #8]
    4eac:	mov	ip, #255	; 0xff
    4eb0:	strb	ip, [r0]
    4eb4:	ldr	r6, [sp, #12]
    4eb8:	ldr	r5, [sp, #8]
    4ebc:	ldr	r2, [pc, #112]	; 4f34 <promiscuous_packet_search@@Base+0x3f4>
    4ec0:	ldr	r1, [sp, #16]
    4ec4:	uxtb	r0, ip
    4ec8:	add	r2, pc, r2
    4ecc:	cmp	r0, r1
    4ed0:	ble	4eec <promiscuous_packet_search@@Base+0x3ac>
    4ed4:	add	r4, r4, #1
    4ed8:	add	r7, r7, #1
    4edc:	cmp	r4, r6
    4ee0:	blt	4c94 <promiscuous_packet_search@@Base+0x154>
    4ee4:	mvn	r4, #0
    4ee8:	b	4efc <promiscuous_packet_search@@Base+0x3bc>
    4eec:	ldr	r0, [sp, #4]
    4ef0:	ldr	r1, [sp]
    4ef4:	bic	r0, r0, #-16777216	; 0xff000000
    4ef8:	str	r0, [r1]
    4efc:	mov	r0, r4
    4f00:	sub	sp, fp, #48	; 0x30
    4f04:	vpop	{d8-d9}
    4f08:	add	sp, sp, #4
    4f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4f10:	andeq	r0, r0, r0
    4f14:	andeq	r0, r0, r1
    4f18:	andeq	fp, r0, r0, ror r7
    4f1c:	andeq	fp, r0, r4, ror r6
    4f20:	andeq	fp, r0, r0, ror sl
    4f24:	andeq	ip, r0, ip, asr #4
    4f28:	andeq	ip, r0, r4, lsr #20
    4f2c:	andeq	sp, r0, r4, lsl r2
    4f30:	andeq	r5, r2, r0, ror #6
    4f34:	andeq	fp, r0, r0, ror #8

00004f38 <find_known_lap@@Base>:
    4f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f3c:	add	fp, sp, #28
    4f40:	sub	sp, sp, #12
    4f44:	str	r3, [sp]
    4f48:	str	r1, [sp, #4]
    4f4c:	movw	lr, #3710	; 0xe7e
    4f50:	mov	ip, #-1342177278	; 0xb0000002
    4f54:	mov	r4, #0
    4f58:	mov	r6, #8388608	; 0x800000
    4f5c:	ldr	r5, [pc, #332]	; 50b0 <find_known_lap@@Base+0x178>
    4f60:	movt	lr, #51074	; 0xc782
    4f64:	add	r5, pc, r5
    4f68:	tst	r2, r6, lsr r4
    4f6c:	add	r4, r4, #1
    4f70:	ldrne	r8, [r5]
    4f74:	ldrne	r7, [r5, #4]
    4f78:	add	r5, r5, #8
    4f7c:	eorne	ip, r7, ip
    4f80:	eorne	lr, r8, lr
    4f84:	cmp	r4, #24
    4f88:	bne	4f68 <find_known_lap@@Base+0x30>
    4f8c:	ldr	r1, [sp, #4]
    4f90:	mvn	r5, #0
    4f94:	cmp	r1, #1
    4f98:	blt	509c <find_known_lap@@Base+0x164>
    4f9c:	vldr	d16, [pc, #260]	; 50a8 <find_known_lap@@Base+0x170>
    4fa0:	movw	r2, #13107	; 0x3333
    4fa4:	movw	sl, #3855	; 0xf0f
    4fa8:	movw	r7, #257	; 0x101
    4fac:	mov	r5, #0
    4fb0:	add	r6, sp, #8
    4fb4:	vmov.i32	d17, #2	; 0x00000002
    4fb8:	movt	r2, #13107	; 0x3333
    4fbc:	movt	sl, #3855	; 0xf0f
    4fc0:	movt	r7, #257	; 0x101
    4fc4:	vmov.i32	q9, #0	; 0x00000000
    4fc8:	mov	r8, #0
    4fcc:	vorr	d20, d16, d16
    4fd0:	add	r9, r0, r8
    4fd4:	vmovl.u32	q12, d20
    4fd8:	add	r8, r8, #2
    4fdc:	vadd.i32	d20, d20, d17
    4fe0:	ldrh	r4, [r9]
    4fe4:	cmp	r8, #64	; 0x40
    4fe8:	strh	r4, [sp, #8]
    4fec:	vld1.16	{d21[0]}, [r6 :16]
    4ff0:	vmovl.u8	q11, d21
    4ff4:	vmovl.u16	q11, d22
    4ff8:	vmovl.u32	q11, d22
    4ffc:	vshl.u64	q11, q11, q12
    5000:	vorr	q9, q11, q9
    5004:	bne	4fd0 <find_known_lap@@Base+0x98>
    5008:	vorr	d20, d19, d19
    500c:	movw	r1, #21845	; 0x5555
    5010:	vorr	q9, q9, q10
    5014:	movt	r1, #21845	; 0x5555
    5018:	vmov.32	r4, d18[1]
    501c:	eor	r4, r4, ip
    5020:	and	r3, r1, r4, lsr #1
    5024:	sub	r3, r4, r3
    5028:	and	r4, r2, r3, lsr #2
    502c:	and	r3, r3, r2
    5030:	add	r3, r3, r4
    5034:	vmov.32	r4, d18[0]
    5038:	eor	r4, r4, lr
    503c:	add	r3, r3, r3, lsr #4
    5040:	and	r1, r1, r4, lsr #1
    5044:	and	r3, r3, sl
    5048:	sub	r1, r4, r1
    504c:	mul	r3, r3, r7
    5050:	and	r4, r2, r1, lsr #2
    5054:	and	r1, r1, r2
    5058:	add	r1, r1, r4
    505c:	add	r1, r1, r1, lsr #4
    5060:	and	r1, r1, sl
    5064:	mul	r1, r1, r7
    5068:	lsr	r1, r1, #24
    506c:	add	r1, r1, r3, lsr #24
    5070:	ldr	r3, [fp, #8]
    5074:	strb	r1, [r3]
    5078:	ldr	r3, [sp]
    507c:	cmp	r1, r3
    5080:	ble	509c <find_known_lap@@Base+0x164>
    5084:	ldr	r1, [sp, #4]
    5088:	add	r5, r5, #1
    508c:	add	r0, r0, #1
    5090:	cmp	r5, r1
    5094:	blt	4fc4 <find_known_lap@@Base+0x8c>
    5098:	mvn	r5, #0
    509c:	mov	r0, r5
    50a0:	sub	sp, fp, #28
    50a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    50a8:	andeq	r0, r0, r0
    50ac:	andeq	r0, r0, r1
    50b0:	andeq	fp, r0, r4, lsl #6
    50b4:	nop	{0}

000050b8 <btbb_find_ac@@Base>:
    50b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    50bc:	add	fp, sp, #28
    50c0:	sub	sp, sp, #20
    50c4:	cmn	r2, #1
    50c8:	str	r2, [sp, #16]
    50cc:	beq	5220 <btbb_find_ac@@Base+0x168>
    50d0:	ldr	r6, [pc, #504]	; 52d0 <btbb_find_ac@@Base+0x218>
    50d4:	movw	r5, #3710	; 0xe7e
    50d8:	mov	ip, #-1342177278	; 0xb0000002
    50dc:	mov	r7, #0
    50e0:	mov	r4, #8388608	; 0x800000
    50e4:	movt	r5, #51074	; 0xc782
    50e8:	add	r6, pc, r6
    50ec:	tst	r2, r4, lsr r7
    50f0:	add	r7, r7, #1
    50f4:	ldrdne	r8, [r6]
    50f8:	add	r6, r6, #8
    50fc:	eorne	ip, r9, ip
    5100:	eorne	r5, r8, r5
    5104:	cmp	r7, #24
    5108:	bne	50ec <btbb_find_ac@@Base+0x34>
    510c:	mvn	r4, #0
    5110:	cmp	r1, #1
    5114:	blt	5298 <btbb_find_ac@@Base+0x1e0>
    5118:	vldr	d16, [pc, #424]	; 52c8 <btbb_find_ac@@Base+0x210>
    511c:	movw	r8, #13107	; 0x3333
    5120:	movw	r9, #3855	; 0xf0f
    5124:	movw	sl, #257	; 0x101
    5128:	mov	r4, #0
    512c:	add	r2, sp, #8
    5130:	vmov.i32	d17, #2	; 0x00000002
    5134:	str	r1, [sp, #4]
    5138:	movt	r8, #13107	; 0x3333
    513c:	movt	r9, #3855	; 0xf0f
    5140:	movt	sl, #257	; 0x101
    5144:	mov	r1, r3
    5148:	vmov.i32	q9, #0	; 0x00000000
    514c:	mov	r7, #0
    5150:	vorr	d20, d16, d16
    5154:	add	r6, r0, r7
    5158:	vmovl.u32	q12, d20
    515c:	add	r7, r7, #2
    5160:	vadd.i32	d20, d20, d17
    5164:	ldrh	r6, [r6]
    5168:	cmp	r7, #64	; 0x40
    516c:	strh	r6, [sp, #8]
    5170:	vld1.16	{d21[0]}, [r2 :16]
    5174:	vmovl.u8	q11, d21
    5178:	vmovl.u16	q11, d22
    517c:	vmovl.u32	q11, d22
    5180:	vshl.u64	q11, q11, q12
    5184:	vorr	q9, q11, q9
    5188:	bne	5154 <btbb_find_ac@@Base+0x9c>
    518c:	vorr	d20, d19, d19
    5190:	movw	r3, #21845	; 0x5555
    5194:	vorr	q9, q9, q10
    5198:	movt	r3, #21845	; 0x5555
    519c:	vmov.32	r6, d18[1]
    51a0:	eor	r6, r6, ip
    51a4:	and	r7, r3, r6, lsr #1
    51a8:	sub	r6, r6, r7
    51ac:	and	r7, r8, r6, lsr #2
    51b0:	and	r6, r6, r8
    51b4:	add	r6, r6, r7
    51b8:	vmov.32	r7, d18[0]
    51bc:	eor	r7, r7, r5
    51c0:	add	r6, r6, r6, lsr #4
    51c4:	and	lr, r3, r7, lsr #1
    51c8:	and	r6, r6, r9
    51cc:	sub	r7, r7, lr
    51d0:	mul	r6, r6, sl
    51d4:	and	r3, r8, r7, lsr #2
    51d8:	and	r7, r7, r8
    51dc:	add	r3, r7, r3
    51e0:	add	r3, r3, r3, lsr #4
    51e4:	and	r3, r3, r9
    51e8:	mul	r3, r3, sl
    51ec:	lsr	r3, r3, #24
    51f0:	add	r7, r3, r6, lsr #24
    51f4:	cmp	r7, r1
    51f8:	ble	5240 <btbb_find_ac@@Base+0x188>
    51fc:	mov	r3, r1
    5200:	ldr	r1, [sp, #4]
    5204:	add	r4, r4, #1
    5208:	add	r0, r0, #1
    520c:	cmp	r4, r1
    5210:	blt	5144 <btbb_find_ac@@Base+0x8c>
    5214:	strb	r7, [sp, #15]
    5218:	mvn	r4, #0
    521c:	b	5298 <btbb_find_ac@@Base+0x1e0>
    5220:	add	r2, sp, #15
    5224:	str	r2, [sp]
    5228:	add	r2, sp, #16
    522c:	bl	47ac <promiscuous_packet_search@plt>
    5230:	mov	r4, r0
    5234:	cmp	r4, #0
    5238:	bge	524c <btbb_find_ac@@Base+0x194>
    523c:	b	5298 <btbb_find_ac@@Base+0x1e0>
    5240:	strb	r7, [sp, #15]
    5244:	cmp	r4, #0
    5248:	blt	5298 <btbb_find_ac@@Base+0x1e0>
    524c:	ldr	r6, [fp, #8]
    5250:	ldr	r5, [r6]
    5254:	cmp	r5, #0
    5258:	bne	5280 <btbb_find_ac@@Base+0x1c8>
    525c:	mov	r0, #1
    5260:	mov	r1, #5952	; 0x1740
    5264:	mov	r7, #1
    5268:	bl	44c4 <calloc@plt>
    526c:	mov	r5, r0
    5270:	cmp	r0, #0
    5274:	beq	52a4 <btbb_find_ac@@Base+0x1ec>
    5278:	str	r7, [r5]
    527c:	str	r5, [r6]
    5280:	ldr	r0, [sp, #16]
    5284:	ldrb	r1, [sp, #15]
    5288:	mov	r2, #1
    528c:	str	r2, [r5, #4]
    5290:	strb	r1, [r5, #2820]	; 0xb04
    5294:	str	r0, [r5, #12]
    5298:	mov	r0, r4
    529c:	sub	sp, fp, #28
    52a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    52a4:	ldr	r0, [pc, #40]	; 52d4 <btbb_find_ac@@Base+0x21c>
    52a8:	mov	r1, #25
    52ac:	mov	r2, #1
    52b0:	ldr	r0, [pc, r0]
    52b4:	ldr	r3, [r0]
    52b8:	ldr	r0, [pc, #24]	; 52d8 <btbb_find_ac@@Base+0x220>
    52bc:	add	r0, pc, r0
    52c0:	bl	45f0 <fwrite@plt>
    52c4:	b	527c <btbb_find_ac@@Base+0x1c4>
    52c8:	andeq	r0, r0, r0
    52cc:	andeq	r0, r0, r1
    52d0:	andeq	fp, r0, r0, lsl #3
    52d4:	andeq	r4, r2, ip, ror #28
    52d8:	ldrdeq	sp, [r0], -r9

000052dc <btbb_packet_set_data@@Base>:
    52dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    52e0:	add	fp, sp, #24
    52e4:	ldr	lr, [fp, #8]
    52e8:	movw	ip, #3125	; 0xc35
    52ec:	cmp	r2, ip
    52f0:	movlt	ip, r2
    52f4:	cmp	r2, #1
    52f8:	blt	5384 <btbb_packet_set_data@@Base+0xa8>
    52fc:	cmp	ip, #1
    5300:	mov	r4, #1
    5304:	mov	r6, #1
    5308:	mov	r2, #0
    530c:	movgt	r4, ip
    5310:	cmp	r4, #16
    5314:	bcc	5368 <btbb_packet_set_data@@Base+0x8c>
    5318:	cmp	ip, #1
    531c:	movw	r8, #2824	; 0xb08
    5320:	movgt	r6, ip
    5324:	add	r5, r0, r8
    5328:	add	r7, r1, r6
    532c:	cmp	r5, r7
    5330:	bcs	5344 <btbb_packet_set_data@@Base+0x68>
    5334:	add	r6, r0, r6
    5338:	add	r6, r6, r8
    533c:	cmp	r6, r1
    5340:	bhi	5368 <btbb_packet_set_data@@Base+0x8c>
    5344:	bic	r2, r4, #-2147483633	; 0x8000000f
    5348:	mov	r7, r1
    534c:	mov	r6, r2
    5350:	vld1.8	{d16-d17}, [r7]!
    5354:	subs	r6, r6, #16
    5358:	vst1.8	{d16-d17}, [r5]!
    535c:	bne	5350 <btbb_packet_set_data@@Base+0x74>
    5360:	cmp	r4, r2
    5364:	beq	5384 <btbb_packet_set_data@@Base+0xa8>
    5368:	movw	r4, #2824	; 0xb08
    536c:	add	r4, r0, r4
    5370:	ldrb	r5, [r1, r2]
    5374:	strb	r5, [r4, r2]
    5378:	add	r2, r2, #1
    537c:	cmp	r2, ip
    5380:	blt	5370 <btbb_packet_set_data@@Base+0x94>
    5384:	movw	r1, #2822	; 0xb06
    5388:	strh	ip, [r0, r1]
    538c:	lsr	r1, lr, #1
    5390:	strb	r3, [r0, #8]
    5394:	str	r1, [r0, #2816]	; 0xb00
    5398:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000539c <btbb_packet_get_flag@@Base>:
    539c:	ldr	r0, [r0, #4]
    53a0:	mov	r2, #1
    53a4:	and	r0, r0, r2, lsl r1
    53a8:	cmp	r0, #0
    53ac:	movwne	r0, #1
    53b0:	bx	lr

000053b4 <btbb_get_symbols@@Base>:
    53b4:	movw	r1, #2824	; 0xb08
    53b8:	add	r0, r0, r1
    53bc:	bx	lr

000053c0 <btbb_packet_get_payload_length@@Base>:
    53c0:	ldr	r0, [r0, #64]	; 0x40
    53c4:	bx	lr

000053c8 <btbb_get_payload@@Base>:
    53c8:	add	r0, r0, #68	; 0x44
    53cc:	bx	lr

000053d0 <btbb_get_payload_packed@@Base>:
    53d0:	push	{r4, r5, r6, sl, fp, lr}
    53d4:	add	fp, sp, #16
    53d8:	ldr	r2, [r0, #64]	; 0x40
    53dc:	cmp	r2, #1
    53e0:	blt	543c <btbb_get_payload_packed@@Base+0x6c>
    53e4:	mov	r3, #0
    53e8:	add	r2, r0, r3, lsl #3
    53ec:	ldrb	ip, [r2, #68]	; 0x44
    53f0:	ldrb	lr, [r2, #69]	; 0x45
    53f4:	ldrb	r6, [r2, #70]	; 0x46
    53f8:	ldrb	r5, [r2, #71]	; 0x47
    53fc:	orr	r4, ip, lr, lsl #1
    5400:	orr	r6, r4, r6, lsl #2
    5404:	orr	r6, r6, r5, lsl #3
    5408:	ldrb	r5, [r2, #72]	; 0x48
    540c:	orr	r6, r6, r5, lsl #4
    5410:	ldrb	r5, [r2, #73]	; 0x49
    5414:	orr	r6, r6, r5, lsl #5
    5418:	ldrb	r5, [r2, #74]	; 0x4a
    541c:	ldrb	r2, [r2, #75]	; 0x4b
    5420:	orr	r6, r6, r5, lsl #6
    5424:	orr	r2, r6, r2, lsl #7
    5428:	strb	r2, [r1, r3]
    542c:	add	r3, r3, #1
    5430:	ldr	r2, [r0, #64]	; 0x40
    5434:	cmp	r3, r2
    5438:	blt	53e8 <btbb_get_payload_packed@@Base+0x18>
    543c:	mov	r0, r2
    5440:	pop	{r4, r5, r6, sl, fp, pc}

00005444 <btbb_packet_get_type@@Base>:
    5444:	ldrb	r0, [r0, #18]
    5448:	bx	lr

0000544c <btbb_packet_get_lt_addr@@Base>:
    544c:	ldrb	r0, [r0, #19]
    5450:	bx	lr

00005454 <btbb_packet_get_header_flags@@Base>:
    5454:	ldrb	r0, [r0, #20]
    5458:	bx	lr

0000545c <btbb_packet_get_hec@@Base>:
    545c:	ldrb	r0, [r0, #21]
    5460:	bx	lr

00005464 <btbb_packet_get_header_packed@@Base>:
    5464:	ldrb	ip, [r0, #22]
    5468:	ldrb	r2, [r0, #23]
    546c:	ldrb	r3, [r0, #24]
    5470:	ldrb	r1, [r0, #25]
    5474:	orr	r2, ip, r2, lsl #1
    5478:	orr	r2, r2, r3, lsl #2
    547c:	orr	r1, r2, r1, lsl #3
    5480:	ldrb	r2, [r0, #26]
    5484:	orr	r1, r1, r2, lsl #4
    5488:	ldrb	r2, [r0, #27]
    548c:	orr	r1, r1, r2, lsl #5
    5490:	ldrb	r2, [r0, #28]
    5494:	orr	r1, r1, r2, lsl #6
    5498:	ldrb	r2, [r0, #29]
    549c:	orr	r1, r1, r2, lsl #7
    54a0:	ldrb	r2, [r0, #30]
    54a4:	orr	r1, r1, r2, lsl #8
    54a8:	ldrb	r2, [r0, #31]
    54ac:	orr	r1, r1, r2, lsl #9
    54b0:	ldrb	r2, [r0, #32]
    54b4:	orr	r1, r1, r2, lsl #10
    54b8:	ldrb	r2, [r0, #33]	; 0x21
    54bc:	orr	r1, r1, r2, lsl #11
    54c0:	ldrb	r2, [r0, #34]	; 0x22
    54c4:	orr	r1, r1, r2, lsl #12
    54c8:	ldrb	r2, [r0, #35]	; 0x23
    54cc:	orr	r1, r1, r2, lsl #13
    54d0:	ldrb	r2, [r0, #36]	; 0x24
    54d4:	orr	r1, r1, r2, lsl #14
    54d8:	ldrb	r2, [r0, #37]	; 0x25
    54dc:	orr	r1, r1, r2, lsl #15
    54e0:	ldrb	r2, [r0, #38]	; 0x26
    54e4:	ldrb	r0, [r0, #39]	; 0x27
    54e8:	orr	r1, r1, r2, lsl #16
    54ec:	orr	r0, r1, r0, lsl #17
    54f0:	bx	lr

000054f4 <crc_check@@Base>:
    54f4:	push	{r4, sl, fp, lr}
    54f8:	add	fp, sp, #8
    54fc:	mov	r4, r1
    5500:	mov	r1, r0
    5504:	ldrb	r0, [r4, #18]
    5508:	sub	r2, r0, #2
    550c:	mov	r0, #1
    5510:	cmp	r2, #13
    5514:	bhi	558c <crc_check@@Base+0x98>
    5518:	add	r3, pc, #4
    551c:	ldr	r2, [r3, r2, lsl #2]
    5520:	add	pc, r3, r2
    5524:	strheq	r0, [r0], -r4
    5528:	andeq	r0, r0, r8, lsr r0
    552c:	andeq	r0, r0, r4, ror r0
    5530:	andeq	r0, r0, ip, asr #1
    5534:	andeq	r0, r0, r8, rrx
    5538:	andeq	r0, r0, r4, ror #1
    553c:	andeq	r0, r0, r8, lsr r0
    5540:	andeq	r0, r0, r8, rrx
    5544:	andeq	r0, r0, r8, lsr r0
    5548:	andeq	r0, r0, r4, ror r0
    554c:	strdeq	r0, [r0], -ip
    5550:	andeq	r0, r0, r4, lsl r1
    5554:	andeq	r0, r0, r8, lsr r0
    5558:	andeq	r0, r0, r4, ror r0
    555c:	mov	r0, r1
    5560:	mov	r1, r4
    5564:	bl	45c0 <DM@plt>
    5568:	cmp	r0, #0
    556c:	beq	55ac <crc_check@@Base+0xb8>
    5570:	cmp	r0, #2
    5574:	blt	558c <crc_check@@Base+0x98>
    5578:	ldrb	r2, [r4, #18]
    557c:	mov	r1, #1
    5580:	cmp	r2, #7
    5584:	cmpne	r2, #13
    5588:	beq	55d0 <crc_check@@Base+0xdc>
    558c:	mov	r1, r0
    5590:	mov	r0, r1
    5594:	pop	{r4, sl, fp, pc}
    5598:	mov	r0, r1
    559c:	mov	r1, r4
    55a0:	bl	4788 <DH@plt>
    55a4:	cmp	r0, #0
    55a8:	bne	5570 <crc_check@@Base+0x7c>
    55ac:	ldrb	r2, [r4, #18]
    55b0:	mov	r1, #1
    55b4:	cmp	r2, #5
    55b8:	bhi	55d0 <crc_check@@Base+0xdc>
    55bc:	mov	r3, #1
    55c0:	mov	r4, #44	; 0x2c
    55c4:	mov	r0, #0
    55c8:	tst	r4, r3, lsl r2
    55cc:	movne	r1, r0
    55d0:	mov	r0, r1
    55d4:	pop	{r4, sl, fp, pc}
    55d8:	mov	r0, r1
    55dc:	mov	r1, r4
    55e0:	bl	4584 <fhs@plt>
    55e4:	cmp	r0, #0
    55e8:	bne	5570 <crc_check@@Base+0x7c>
    55ec:	b	55ac <crc_check@@Base+0xb8>
    55f0:	mov	r0, r1
    55f4:	mov	r1, r4
    55f8:	bl	45cc <HV@plt>
    55fc:	cmp	r0, #0
    5600:	bne	5570 <crc_check@@Base+0x7c>
    5604:	b	55ac <crc_check@@Base+0xb8>
    5608:	mov	r0, r1
    560c:	mov	r1, r4
    5610:	bl	471c <EV3@plt>
    5614:	cmp	r0, #0
    5618:	bne	5570 <crc_check@@Base+0x7c>
    561c:	b	55ac <crc_check@@Base+0xb8>
    5620:	mov	r0, r1
    5624:	mov	r1, r4
    5628:	bl	4590 <EV4@plt>
    562c:	cmp	r0, #0
    5630:	bne	5570 <crc_check@@Base+0x7c>
    5634:	b	55ac <crc_check@@Base+0xb8>
    5638:	mov	r0, r1
    563c:	mov	r1, r4
    5640:	bl	4770 <EV5@plt>
    5644:	cmp	r0, #0
    5648:	bne	5570 <crc_check@@Base+0x7c>
    564c:	b	55ac <crc_check@@Base+0xb8>

00005650 <fhs@@Base>:
    5650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5654:	add	fp, sp, #28
    5658:	sub	sp, sp, #20
    565c:	mov	r7, r0
    5660:	mov	r0, #20
    5664:	mov	r8, r1
    5668:	str	r0, [r1, #64]	; 0x40
    566c:	movw	r0, #2822	; 0xb06
    5670:	ldrh	r0, [r1, r0]
    5674:	lsr	r1, r0, #1
    5678:	mov	r0, #1
    567c:	cmp	r1, #181	; 0xb5
    5680:	bcc	57f4 <fhs@@Base+0x1a4>
    5684:	movw	r0, #2946	; 0xb82
    5688:	mov	r1, #160	; 0xa0
    568c:	add	r0, r8, r0
    5690:	bl	65d8 <HV@@Base+0x2e0>
    5694:	mov	r1, r0
    5698:	mov	r0, #0
    569c:	cmp	r1, #0
    56a0:	str	r1, [sp, #12]
    56a4:	beq	57f4 <fhs@@Base+0x1a4>
    56a8:	ldr	r0, [r8, #64]	; 0x40
    56ac:	cmp	r0, #1
    56b0:	str	r0, [sp, #16]
    56b4:	blt	572c <fhs@@Base+0xdc>
    56b8:	ldr	r1, [pc, #336]	; 5810 <fhs@@Base+0x1c0>
    56bc:	and	r0, r7, #63	; 0x3f
    56c0:	ldr	r2, [r8, #4]
    56c4:	movw	r3, #1033	; 0x409
    56c8:	movt	r3, #33026	; 0x8102
    56cc:	add	r1, pc, r1
    56d0:	and	r2, r2, #1
    56d4:	ldrb	r0, [r1, r0]
    56d8:	add	r1, r8, #68	; 0x44
    56dc:	add	r5, r0, #18
    56e0:	ldr	r0, [sp, #16]
    56e4:	ldr	ip, [pc, #296]	; 5814 <fhs@@Base+0x1c4>
    56e8:	ldr	r6, [sp, #12]
    56ec:	lsl	r0, r0, #3
    56f0:	add	ip, pc, ip
    56f4:	smmla	r7, r5, r3, r5
    56f8:	cmp	r2, #0
    56fc:	asr	r4, r7, #6
    5700:	add	r7, r4, r7, lsr #31
    5704:	rsb	r7, r7, r7, lsl #7
    5708:	sub	r5, r5, r7
    570c:	ldrb	r7, [r6]
    5710:	add	r6, r6, #1
    5714:	ldrbne	r4, [ip, r5]
    5718:	add	r5, r5, #1
    571c:	eorne	r7, r4, r7
    5720:	subs	r0, r0, #1
    5724:	strb	r7, [r1], #1
    5728:	bne	56f4 <fhs@@Base+0xa4>
    572c:	mov	r0, r8
    5730:	bl	680c <HV@@Base+0x514>
    5734:	cmp	r0, #0
    5738:	bne	57fc <fhs@@Base+0x1ac>
    573c:	ldr	r0, [sp, #16]
    5740:	movw	r9, #1033	; 0x409
    5744:	mov	r7, #32
    5748:	movt	r9, #33026	; 0x8102
    574c:	lsl	r0, r0, #3
    5750:	str	r0, [sp, #8]
    5754:	add	r0, r8, #68	; 0x44
    5758:	str	r0, [sp, #4]
    575c:	ldr	sl, [pc, #180]	; 5818 <fhs@@Base+0x1c8>
    5760:	add	sl, pc, sl
    5764:	ldr	r0, [sp, #16]
    5768:	cmp	r0, #1
    576c:	blt	57cc <fhs@@Base+0x17c>
    5770:	ldr	r0, [pc, #164]	; 581c <fhs@@Base+0x1cc>
    5774:	ldr	r1, [sp, #12]
    5778:	ldr	r2, [sp, #8]
    577c:	ldr	r3, [sp, #4]
    5780:	add	r0, pc, r0
    5784:	ldrb	r0, [r0, r7]
    5788:	add	r6, r0, #18
    578c:	ldr	r0, [r8, #4]
    5790:	and	r0, r0, #1
    5794:	smmla	r5, r6, r9, r6
    5798:	cmp	r0, #0
    579c:	asr	r4, r5, #6
    57a0:	add	r5, r4, r5, lsr #31
    57a4:	rsb	r5, r5, r5, lsl #7
    57a8:	sub	r6, r6, r5
    57ac:	ldrb	r5, [r1]
    57b0:	add	r1, r1, #1
    57b4:	ldrbne	r4, [sl, r6]
    57b8:	add	r6, r6, #1
    57bc:	eorne	r5, r4, r5
    57c0:	subs	r2, r2, #1
    57c4:	strb	r5, [r3], #1
    57c8:	bne	5794 <fhs@@Base+0x144>
    57cc:	mov	r0, r8
    57d0:	bl	680c <HV@@Base+0x514>
    57d4:	cmp	r0, #0
    57d8:	bne	57fc <fhs@@Base+0x1ac>
    57dc:	add	r7, r7, #1
    57e0:	cmp	r7, #63	; 0x3f
    57e4:	bls	5764 <fhs@@Base+0x114>
    57e8:	ldr	r0, [sp, #12]
    57ec:	bl	4548 <free@plt>
    57f0:	mov	r0, #0
    57f4:	sub	sp, fp, #28
    57f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    57fc:	ldr	r0, [sp, #12]
    5800:	bl	4548 <free@plt>
    5804:	mov	r0, #1000	; 0x3e8
    5808:	sub	sp, fp, #28
    580c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5810:	andeq	sp, r0, r6, asr r2
    5814:	strheq	sp, [r0], -r8
    5818:	andeq	sp, r0, r8, asr #32
    581c:	andeq	sp, r0, r2, lsr #3

00005820 <DM@@Base>:
    5820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5824:	add	fp, sp, #28
    5828:	sub	sp, sp, #12
    582c:	mov	r8, r0
    5830:	ldrb	r0, [r1, #18]
    5834:	mov	r4, r1
    5838:	sub	r1, r0, #3
    583c:	cmp	r1, #11
    5840:	bhi	59a8 <DM@@Base+0x188>
    5844:	movw	r0, #2946	; 0xb82
    5848:	mov	r7, #20
    584c:	mov	r2, #1
    5850:	mov	r5, #0
    5854:	add	r9, r4, r0
    5858:	movw	r0, #2822	; 0xb06
    585c:	ldrh	r0, [r4, r0]
    5860:	add	r3, pc, #8
    5864:	ldr	r1, [r3, r1, lsl #2]
    5868:	sub	sl, r0, #122	; 0x7a
    586c:	add	pc, r3, r1
    5870:	andeq	r0, r0, r4, asr r0
    5874:	andeq	r0, r0, ip, lsr r1
    5878:	andeq	r0, r0, ip, lsr r1
    587c:	andeq	r0, r0, ip, lsr r1
    5880:	andeq	r0, r0, ip, lsr r1
    5884:	andeq	r0, r0, r0, lsr r0
    5888:	andeq	r0, r0, ip, lsr r1
    588c:	andeq	r0, r0, r4, asr #32
    5890:	andeq	r0, r0, ip, lsr r1
    5894:	andeq	r0, r0, ip, lsr r1
    5898:	andeq	r0, r0, ip, lsr r1
    589c:	andeq	r0, r0, ip, asr #32
    58a0:	movw	r1, #3026	; 0xbd2
    58a4:	sub	sl, r0, #202	; 0xca
    58a8:	mov	r7, #12
    58ac:	add	r9, r4, r1
    58b0:	b	58c4 <DM@@Base+0xa4>
    58b4:	mov	r7, #125	; 0x7d
    58b8:	b	58c0 <DM@@Base+0xa0>
    58bc:	mov	r7, #228	; 0xe4
    58c0:	mov	r2, #2
    58c4:	mov	r5, #1
    58c8:	mov	r0, r9
    58cc:	mov	r1, r8
    58d0:	mov	r3, sl
    58d4:	str	r4, [sp, #4]
    58d8:	str	r5, [sp]
    58dc:	bl	694c <HV@@Base+0x654>
    58e0:	cmp	r0, #0
    58e4:	beq	59a8 <DM@@Base+0x188>
    58e8:	ldr	r6, [r4, #64]	; 0x40
    58ec:	cmp	r6, r7
    58f0:	bgt	59ac <DM@@Base+0x18c>
    58f4:	cmp	sl, r6, lsl #3
    58f8:	blt	59ac <DM@@Base+0x18c>
    58fc:	lsl	r7, r6, #3
    5900:	mov	r0, r9
    5904:	mov	r1, r7
    5908:	bl	65d8 <HV@@Base+0x2e0>
    590c:	cmp	r0, #0
    5910:	mov	r5, #0
    5914:	beq	59ac <DM@@Base+0x18c>
    5918:	cmp	r6, #1
    591c:	blt	598c <DM@@Base+0x16c>
    5920:	ldr	r2, [pc, #144]	; 59b8 <DM@@Base+0x198>
    5924:	and	r1, r8, #63	; 0x3f
    5928:	movw	lr, #1033	; 0x409
    592c:	mov	r5, r0
    5930:	movt	lr, #33026	; 0x8102
    5934:	add	r2, pc, r2
    5938:	ldrb	r1, [r2, r1]
    593c:	ldr	r2, [r4, #4]
    5940:	ldr	ip, [pc, #116]	; 59bc <DM@@Base+0x19c>
    5944:	add	r6, r1, #18
    5948:	add	r1, r4, #68	; 0x44
    594c:	and	r8, r2, #1
    5950:	add	ip, pc, ip
    5954:	smmla	r3, r6, lr, r6
    5958:	cmp	r8, #0
    595c:	asr	r2, r3, #6
    5960:	add	r2, r2, r3, lsr #31
    5964:	ldrb	r3, [r5]
    5968:	add	r5, r5, #1
    596c:	rsb	r2, r2, r2, lsl #7
    5970:	sub	r6, r6, r2
    5974:	ldrbne	r2, [ip, r6]
    5978:	add	r6, r6, #1
    597c:	eorne	r3, r2, r3
    5980:	subs	r7, r7, #1
    5984:	strb	r3, [r1], #1
    5988:	bne	5954 <DM@@Base+0x134>
    598c:	bl	4548 <free@plt>
    5990:	mov	r0, r4
    5994:	bl	680c <HV@@Base+0x514>
    5998:	mov	r5, #10
    599c:	cmp	r0, #0
    59a0:	movweq	r5, #2
    59a4:	b	59ac <DM@@Base+0x18c>
    59a8:	mov	r5, #0
    59ac:	mov	r0, r5
    59b0:	sub	sp, fp, #28
    59b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    59b8:	andeq	ip, r0, lr, ror #31
    59bc:	andeq	ip, r0, r8, asr lr

000059c0 <DH@@Base>:
    59c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    59c4:	add	fp, sp, #24
    59c8:	sub	sp, sp, #8
    59cc:	mov	r8, r0
    59d0:	ldrb	r0, [r1, #18]
    59d4:	mov	r6, #0
    59d8:	sub	r0, r0, #4
    59dc:	cmp	r0, #11
    59e0:	bhi	5b24 <DH@@Base+0x164>
    59e4:	mov	r5, r1
    59e8:	movw	r1, #2822	; 0xb06
    59ec:	mov	r2, #1
    59f0:	mov	r4, #30
    59f4:	ldrh	r1, [r5, r1]
    59f8:	add	r3, pc, #4
    59fc:	ldr	r0, [r3, r0, lsl #2]
    5a00:	add	pc, r3, r0
    5a04:	andeq	r0, r0, r4, asr #32
    5a08:	andeq	r0, r0, r0, lsr #2
    5a0c:	andeq	r0, r0, r0, lsr #2
    5a10:	andeq	r0, r0, r0, lsr #2
    5a14:	andeq	r0, r0, r0, lsr #2
    5a18:	andeq	r0, r0, r4, asr #32
    5a1c:	andeq	r0, r0, r0, lsr #2
    5a20:	andeq	r0, r0, r0, lsr r0
    5a24:	andeq	r0, r0, r0, lsr #2
    5a28:	andeq	r0, r0, r0, lsr #2
    5a2c:	andeq	r0, r0, r0, lsr #2
    5a30:	andeq	r0, r0, ip, lsr r0
    5a34:	mov	r2, #2
    5a38:	mov	r4, #187	; 0xbb
    5a3c:	b	5a48 <DH@@Base+0x88>
    5a40:	mov	r2, #2
    5a44:	movw	r4, #343	; 0x157
    5a48:	movw	r0, #2946	; 0xb82
    5a4c:	sub	r7, r1, #122	; 0x7a
    5a50:	mov	r6, #0
    5a54:	mov	r1, r8
    5a58:	str	r5, [sp, #4]
    5a5c:	add	r0, r5, r0
    5a60:	mov	r3, r7
    5a64:	str	r6, [sp]
    5a68:	bl	694c <HV@@Base+0x654>
    5a6c:	cmp	r0, #0
    5a70:	beq	5b24 <DH@@Base+0x164>
    5a74:	ldr	r0, [r5, #64]	; 0x40
    5a78:	mov	r6, #1
    5a7c:	cmp	r0, r4
    5a80:	bgt	5b24 <DH@@Base+0x164>
    5a84:	cmp	r7, r0, lsl #3
    5a88:	blt	5b24 <DH@@Base+0x164>
    5a8c:	cmp	r0, #1
    5a90:	blt	5b00 <DH@@Base+0x140>
    5a94:	ldr	r2, [pc, #148]	; 5b30 <DH@@Base+0x170>
    5a98:	and	r1, r8, #63	; 0x3f
    5a9c:	lsl	r0, r0, #3
    5aa0:	mov	r4, r5
    5aa4:	add	r2, pc, r2
    5aa8:	ldrb	r1, [r2, r1]
    5aac:	movw	r2, #1033	; 0x409
    5ab0:	movt	r2, #33026	; 0x8102
    5ab4:	add	r7, r1, #18
    5ab8:	ldr	r1, [r5, #4]
    5abc:	ldr	ip, [pc, #112]	; 5b34 <DH@@Base+0x174>
    5ac0:	and	r1, r1, #1
    5ac4:	add	ip, pc, ip
    5ac8:	smmla	r6, r7, r2, r7
    5acc:	cmp	r1, #0
    5ad0:	asr	r3, r6, #6
    5ad4:	add	r3, r3, r6, lsr #31
    5ad8:	ldrb	r6, [r4, #2946]	; 0xb82
    5adc:	rsb	r3, r3, r3, lsl #7
    5ae0:	sub	r7, r7, r3
    5ae4:	ldrbne	r3, [ip, r7]
    5ae8:	add	r7, r7, #1
    5aec:	eorne	r6, r3, r6
    5af0:	subs	r0, r0, #1
    5af4:	strb	r6, [r4, #68]	; 0x44
    5af8:	add	r4, r4, #1
    5afc:	bne	5ac8 <DH@@Base+0x108>
    5b00:	ldrb	r0, [r5, #18]
    5b04:	mov	r6, #2
    5b08:	cmp	r0, #9
    5b0c:	beq	5b24 <DH@@Base+0x164>
    5b10:	mov	r0, r5
    5b14:	bl	680c <HV@@Base+0x514>
    5b18:	mov	r6, #10
    5b1c:	cmp	r0, #0
    5b20:	movweq	r6, #2
    5b24:	mov	r0, r6
    5b28:	sub	sp, fp, #24
    5b2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    5b30:	andeq	ip, r0, lr, ror lr
    5b34:	andeq	ip, r0, r4, ror #25

00005b38 <EV3@@Base>:
    5b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5b3c:	add	fp, sp, #28
    5b40:	sub	sp, sp, #4
    5b44:	mov	r4, r1
    5b48:	mov	r1, #0
    5b4c:	movw	r2, #2822	; 0xb06
    5b50:	movw	r7, #1033	; 0x409
    5b54:	and	r9, r0, #63	; 0x3f
    5b58:	str	r1, [r4, #64]	; 0x40
    5b5c:	movt	r7, #33026	; 0x8102
    5b60:	ldrh	r2, [r4, r2]
    5b64:	ldr	r8, [pc, #520]	; 5d74 <EV3@@Base+0x23c>
    5b68:	ldr	r6, [pc, #520]	; 5d78 <EV3@@Base+0x240>
    5b6c:	sub	sl, r2, #122	; 0x7a
    5b70:	add	r8, pc, r8
    5b74:	add	r6, pc, r6
    5b78:	add	r0, r1, #1
    5b7c:	lsl	r0, r0, #3
    5b80:	cmp	r0, sl
    5b84:	bgt	5d5c <EV3@@Base+0x224>
    5b88:	lsl	r0, r1, #3
    5b8c:	ldrb	r1, [r8, r9]
    5b90:	add	r1, r0, r1
    5b94:	add	r0, r4, r0
    5b98:	add	r1, r1, #18
    5b9c:	add	r0, r0, #68	; 0x44
    5ba0:	smmla	r2, r1, r7, r1
    5ba4:	asr	r3, r2, #6
    5ba8:	add	r2, r3, r2, lsr #31
    5bac:	ldrb	r3, [r4, #4]
    5bb0:	sub	r2, r2, r2, lsl #7
    5bb4:	add	r1, r1, r2
    5bb8:	ldrb	r2, [r4, #2946]	; 0xb82
    5bbc:	tst	r3, #1
    5bc0:	ldrbne	r3, [r6, r1]
    5bc4:	add	r1, r1, #1
    5bc8:	eorne	r2, r3, r2
    5bcc:	strb	r2, [r0]
    5bd0:	smmla	r2, r1, r7, r1
    5bd4:	asr	r3, r2, #6
    5bd8:	add	r2, r3, r2, lsr #31
    5bdc:	ldrb	r3, [r4, #4]
    5be0:	sub	r2, r2, r2, lsl #7
    5be4:	add	r1, r1, r2
    5be8:	ldrb	r2, [r4, #2947]	; 0xb83
    5bec:	tst	r3, #1
    5bf0:	ldrbne	r3, [r6, r1]
    5bf4:	add	r1, r1, #1
    5bf8:	eorne	r2, r3, r2
    5bfc:	strb	r2, [r0, #1]
    5c00:	smmla	r2, r1, r7, r1
    5c04:	asr	r3, r2, #6
    5c08:	add	r2, r3, r2, lsr #31
    5c0c:	ldrb	r3, [r4, #4]
    5c10:	sub	r2, r2, r2, lsl #7
    5c14:	add	r1, r1, r2
    5c18:	ldrb	r2, [r4, #2948]	; 0xb84
    5c1c:	tst	r3, #1
    5c20:	ldrbne	r3, [r6, r1]
    5c24:	add	r1, r1, #1
    5c28:	eorne	r2, r3, r2
    5c2c:	strb	r2, [r0, #2]
    5c30:	smmla	r2, r1, r7, r1
    5c34:	asr	r3, r2, #6
    5c38:	add	r2, r3, r2, lsr #31
    5c3c:	ldrb	r3, [r4, #4]
    5c40:	sub	r2, r2, r2, lsl #7
    5c44:	add	r1, r1, r2
    5c48:	ldrb	r2, [r4, #2949]	; 0xb85
    5c4c:	tst	r3, #1
    5c50:	ldrbne	r3, [r6, r1]
    5c54:	eorne	r2, r3, r2
    5c58:	strb	r2, [r0, #3]
    5c5c:	ldrb	r3, [r4, #4]
    5c60:	ldrb	r2, [r4, #2950]	; 0xb86
    5c64:	tst	r3, #1
    5c68:	bne	5c88 <EV3@@Base+0x150>
    5c6c:	strb	r2, [r0, #4]
    5c70:	ldrb	r1, [r4, #2951]	; 0xb87
    5c74:	strb	r1, [r0, #5]
    5c78:	ldrb	r1, [r4, #2952]	; 0xb88
    5c7c:	strb	r1, [r0, #6]
    5c80:	ldrb	r1, [r4, #2953]	; 0xb89
    5c84:	b	5d20 <EV3@@Base+0x1e8>
    5c88:	add	r1, r1, #1
    5c8c:	smmla	r3, r1, r7, r1
    5c90:	asr	r5, r3, #6
    5c94:	add	r3, r5, r3, lsr #31
    5c98:	sub	r3, r3, r3, lsl #7
    5c9c:	add	r1, r1, r3
    5ca0:	ldrb	r3, [r6, r1]
    5ca4:	add	r1, r1, #1
    5ca8:	eor	r2, r3, r2
    5cac:	strb	r2, [r0, #4]
    5cb0:	smmla	r2, r1, r7, r1
    5cb4:	asr	r3, r2, #6
    5cb8:	add	r2, r3, r2, lsr #31
    5cbc:	ldrb	r3, [r4, #2951]	; 0xb87
    5cc0:	sub	r2, r2, r2, lsl #7
    5cc4:	add	r1, r1, r2
    5cc8:	ldrb	r2, [r6, r1]
    5ccc:	add	r1, r1, #1
    5cd0:	eor	r2, r2, r3
    5cd4:	strb	r2, [r0, #5]
    5cd8:	smmla	r2, r1, r7, r1
    5cdc:	asr	r3, r2, #6
    5ce0:	add	r2, r3, r2, lsr #31
    5ce4:	ldrb	r3, [r4, #2952]	; 0xb88
    5ce8:	sub	r2, r2, r2, lsl #7
    5cec:	add	r1, r1, r2
    5cf0:	ldrb	r2, [r6, r1]
    5cf4:	add	r1, r1, #1
    5cf8:	eor	r2, r2, r3
    5cfc:	strb	r2, [r0, #6]
    5d00:	smmla	r2, r1, r7, r1
    5d04:	asr	r3, r2, #6
    5d08:	add	r2, r3, r2, lsr #31
    5d0c:	sub	r2, r2, r2, lsl #7
    5d10:	add	r1, r1, r2
    5d14:	ldrb	r2, [r4, #2953]	; 0xb89
    5d18:	ldrb	r1, [r6, r1]
    5d1c:	eor	r1, r1, r2
    5d20:	strb	r1, [r0, #7]
    5d24:	ldr	r5, [r4, #64]	; 0x40
    5d28:	cmp	r5, #2
    5d2c:	ble	5d40 <EV3@@Base+0x208>
    5d30:	mov	r0, r4
    5d34:	bl	680c <HV@@Base+0x514>
    5d38:	cmp	r0, #0
    5d3c:	bne	5d68 <EV3@@Base+0x230>
    5d40:	add	r1, r5, #1
    5d44:	cmp	r5, #31
    5d48:	str	r1, [r4, #64]	; 0x40
    5d4c:	blt	5b78 <EV3@@Base+0x40>
    5d50:	mov	r0, #2
    5d54:	sub	sp, fp, #28
    5d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d5c:	mov	r0, #1
    5d60:	sub	sp, fp, #28
    5d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d68:	mov	r0, #10
    5d6c:	sub	sp, fp, #28
    5d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d74:			; <UNDEFINED> instruction: 0x0000cdb2
    5d78:	andeq	ip, r0, r4, lsr ip

00005d7c <EV4@@Base>:
    5d7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5d80:	add	fp, sp, #28
    5d84:	sub	sp, sp, #12
    5d88:	mov	r5, r1
    5d8c:	mov	r1, #1
    5d90:	and	r0, r0, #63	; 0x3f
    5d94:	movw	sl, #2065	; 0x811
    5d98:	mov	r4, #0
    5d9c:	mov	r6, #0
    5da0:	str	r1, [r5, #64]	; 0x40
    5da4:	movw	r1, #2946	; 0xb82
    5da8:	str	r0, [sp]
    5dac:	movt	sl, #516	; 0x204
    5db0:	add	r1, r5, r1
    5db4:	str	r1, [sp, #4]
    5db8:	movw	r1, #2822	; 0xb06
    5dbc:	ldrh	r1, [r5, r1]
    5dc0:	sub	r1, r1, #122	; 0x7a
    5dc4:	str	r1, [sp, #8]
    5dc8:	ldr	r8, [pc, #732]	; 60ac <EV4@@Base+0x330>
    5dcc:	add	r8, pc, r8
    5dd0:	ldr	r0, [sp, #8]
    5dd4:	add	r9, r6, #15
    5dd8:	cmp	r9, r0
    5ddc:	bgt	608c <EV4@@Base+0x310>
    5de0:	ldr	r0, [sp, #4]
    5de4:	mov	r1, #10
    5de8:	add	r0, r0, r6
    5dec:	bl	65d8 <HV@@Base+0x2e0>
    5df0:	cmp	r0, #0
    5df4:	beq	6098 <EV4@@Base+0x31c>
    5df8:	ldr	r1, [sp]
    5dfc:	ldr	r2, [pc, #684]	; 60b0 <EV4@@Base+0x334>
    5e00:	ldrb	r6, [r5, #4]
    5e04:	add	r2, pc, r2
    5e08:	tst	r6, #1
    5e0c:	ldrb	r1, [r2, r1]
    5e10:	ldrb	r2, [r0]
    5e14:	add	r1, r4, r1
    5e18:	add	r3, r1, #18
    5e1c:	umull	r1, r7, r3, sl
    5e20:	add	r1, r5, r4
    5e24:	add	r1, r1, #68	; 0x44
    5e28:	bne	5e78 <EV4@@Base+0xfc>
    5e2c:	strb	r2, [r1]
    5e30:	ldrb	r2, [r0, #1]
    5e34:	strb	r2, [r1, #1]
    5e38:	ldrb	r2, [r0, #2]
    5e3c:	strb	r2, [r1, #2]
    5e40:	ldrb	r2, [r0, #3]
    5e44:	strb	r2, [r1, #3]
    5e48:	ldrb	r2, [r0, #4]
    5e4c:	strb	r2, [r1, #4]
    5e50:	ldrb	r2, [r0, #5]
    5e54:	strb	r2, [r1, #5]
    5e58:	ldrb	r2, [r0, #6]
    5e5c:	strb	r2, [r1, #6]
    5e60:	ldrb	r2, [r0, #7]
    5e64:	strb	r2, [r1, #7]
    5e68:	ldrb	r2, [r0, #8]
    5e6c:	strb	r2, [r1, #8]
    5e70:	ldrb	r2, [r0, #9]
    5e74:	b	6020 <EV4@@Base+0x2a4>
    5e78:	sub	r6, r3, r7
    5e7c:	add	r7, r7, r6, lsr #1
    5e80:	lsr	r7, r7, #6
    5e84:	sub	r7, r7, r7, lsl #7
    5e88:	add	r3, r3, r7
    5e8c:	ldrb	r7, [r8, r3]
    5e90:	eor	r2, r7, r2
    5e94:	strb	r2, [r1]
    5e98:	add	r2, r3, #1
    5e9c:	umull	r3, r7, r2, sl
    5ea0:	sub	r3, r2, r7
    5ea4:	add	r3, r7, r3, lsr #1
    5ea8:	ldrb	r7, [r0, #1]
    5eac:	lsr	r3, r3, #6
    5eb0:	sub	r3, r3, r3, lsl #7
    5eb4:	add	r2, r2, r3
    5eb8:	ldrb	r3, [r8, r2]
    5ebc:	add	r2, r2, #1
    5ec0:	eor	r3, r3, r7
    5ec4:	strb	r3, [r1, #1]
    5ec8:	umull	r3, r7, r2, sl
    5ecc:	sub	r3, r2, r7
    5ed0:	add	r3, r7, r3, lsr #1
    5ed4:	ldrb	r7, [r0, #2]
    5ed8:	lsr	r3, r3, #6
    5edc:	sub	r3, r3, r3, lsl #7
    5ee0:	add	r2, r2, r3
    5ee4:	ldrb	r3, [r8, r2]
    5ee8:	add	r2, r2, #1
    5eec:	eor	r3, r3, r7
    5ef0:	strb	r3, [r1, #2]
    5ef4:	umull	r3, r7, r2, sl
    5ef8:	sub	r3, r2, r7
    5efc:	add	r3, r7, r3, lsr #1
    5f00:	ldrb	r7, [r0, #3]
    5f04:	lsr	r3, r3, #6
    5f08:	sub	r3, r3, r3, lsl #7
    5f0c:	add	r2, r2, r3
    5f10:	ldrb	r3, [r8, r2]
    5f14:	add	r2, r2, #1
    5f18:	eor	r3, r3, r7
    5f1c:	strb	r3, [r1, #3]
    5f20:	umull	r3, r7, r2, sl
    5f24:	sub	r3, r2, r7
    5f28:	add	r3, r7, r3, lsr #1
    5f2c:	ldrb	r7, [r0, #4]
    5f30:	lsr	r3, r3, #6
    5f34:	sub	r3, r3, r3, lsl #7
    5f38:	add	r2, r2, r3
    5f3c:	ldrb	r3, [r8, r2]
    5f40:	add	r2, r2, #1
    5f44:	eor	r3, r3, r7
    5f48:	strb	r3, [r1, #4]
    5f4c:	umull	r3, r7, r2, sl
    5f50:	sub	r3, r2, r7
    5f54:	add	r3, r7, r3, lsr #1
    5f58:	ldrb	r7, [r0, #5]
    5f5c:	lsr	r3, r3, #6
    5f60:	sub	r3, r3, r3, lsl #7
    5f64:	add	r2, r2, r3
    5f68:	ldrb	r3, [r8, r2]
    5f6c:	add	r2, r2, #1
    5f70:	eor	r3, r3, r7
    5f74:	strb	r3, [r1, #5]
    5f78:	umull	r3, r7, r2, sl
    5f7c:	sub	r3, r2, r7
    5f80:	add	r3, r7, r3, lsr #1
    5f84:	ldrb	r7, [r0, #6]
    5f88:	lsr	r3, r3, #6
    5f8c:	sub	r3, r3, r3, lsl #7
    5f90:	add	r2, r2, r3
    5f94:	ldrb	r3, [r8, r2]
    5f98:	add	r2, r2, #1
    5f9c:	eor	r3, r3, r7
    5fa0:	strb	r3, [r1, #6]
    5fa4:	umull	r3, r7, r2, sl
    5fa8:	sub	r3, r2, r7
    5fac:	add	r3, r7, r3, lsr #1
    5fb0:	ldrb	r7, [r0, #7]
    5fb4:	lsr	r3, r3, #6
    5fb8:	sub	r3, r3, r3, lsl #7
    5fbc:	add	r2, r2, r3
    5fc0:	ldrb	r3, [r8, r2]
    5fc4:	add	r2, r2, #1
    5fc8:	eor	r3, r3, r7
    5fcc:	strb	r3, [r1, #7]
    5fd0:	umull	r3, r7, r2, sl
    5fd4:	sub	r3, r2, r7
    5fd8:	add	r3, r7, r3, lsr #1
    5fdc:	ldrb	r7, [r0, #8]
    5fe0:	lsr	r3, r3, #6
    5fe4:	sub	r3, r3, r3, lsl #7
    5fe8:	add	r2, r2, r3
    5fec:	ldrb	r3, [r8, r2]
    5ff0:	add	r2, r2, #1
    5ff4:	eor	r3, r3, r7
    5ff8:	strb	r3, [r1, #8]
    5ffc:	umull	r3, r7, r2, sl
    6000:	sub	r3, r2, r7
    6004:	add	r3, r7, r3, lsr #1
    6008:	lsr	r3, r3, #6
    600c:	sub	r3, r3, r3, lsl #7
    6010:	add	r2, r2, r3
    6014:	ldrb	r3, [r0, #9]
    6018:	ldrb	r2, [r8, r2]
    601c:	eor	r2, r2, r3
    6020:	strb	r2, [r1, #9]
    6024:	bl	4548 <free@plt>
    6028:	ldr	r0, [r5, #64]	; 0x40
    602c:	cmp	r4, r0, lsl #3
    6030:	blt	6060 <EV4@@Base+0x2e4>
    6034:	add	r6, r0, #1
    6038:	lsl	r7, r0, #3
    603c:	mov	r0, r5
    6040:	bl	680c <HV@@Base+0x514>
    6044:	cmp	r0, #0
    6048:	bne	6080 <EV4@@Base+0x304>
    604c:	add	r7, r7, #8
    6050:	str	r6, [r5, #64]	; 0x40
    6054:	add	r6, r6, #1
    6058:	cmp	r7, r4
    605c:	ble	603c <EV4@@Base+0x2c0>
    6060:	movw	r0, #1470	; 0x5be
    6064:	add	r4, r4, #10
    6068:	mov	r6, r9
    606c:	cmp	r9, r0
    6070:	bcc	5dd0 <EV4@@Base+0x54>
    6074:	mov	r0, #2
    6078:	sub	sp, fp, #28
    607c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6080:	mov	r0, #10
    6084:	sub	sp, fp, #28
    6088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    608c:	mov	r0, #1
    6090:	sub	sp, fp, #28
    6094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6098:	mov	r0, #0
    609c:	cmp	r6, #44	; 0x2c
    60a0:	movwhi	r0, #1
    60a4:	sub	sp, fp, #28
    60a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60ac:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    60b0:	andeq	ip, r0, lr, lsl fp

000060b4 <EV5@@Base>:
    60b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    60b8:	add	fp, sp, #28
    60bc:	sub	sp, sp, #4
    60c0:	mov	r4, r1
    60c4:	mov	r1, #0
    60c8:	movw	r2, #2822	; 0xb06
    60cc:	movw	r7, #1033	; 0x409
    60d0:	and	r9, r0, #63	; 0x3f
    60d4:	str	r1, [r4, #64]	; 0x40
    60d8:	movt	r7, #33026	; 0x8102
    60dc:	ldrh	r2, [r4, r2]
    60e0:	ldr	r8, [pc, #520]	; 62f0 <EV5@@Base+0x23c>
    60e4:	ldr	r6, [pc, #520]	; 62f4 <EV5@@Base+0x240>
    60e8:	sub	sl, r2, #122	; 0x7a
    60ec:	add	r8, pc, r8
    60f0:	add	r6, pc, r6
    60f4:	add	r0, r1, #1
    60f8:	lsl	r0, r0, #3
    60fc:	cmp	r0, sl
    6100:	bgt	62d8 <EV5@@Base+0x224>
    6104:	lsl	r0, r1, #3
    6108:	ldrb	r1, [r8, r9]
    610c:	add	r1, r0, r1
    6110:	add	r0, r4, r0
    6114:	add	r1, r1, #18
    6118:	add	r0, r0, #68	; 0x44
    611c:	smmla	r2, r1, r7, r1
    6120:	asr	r3, r2, #6
    6124:	add	r2, r3, r2, lsr #31
    6128:	ldrb	r3, [r4, #4]
    612c:	sub	r2, r2, r2, lsl #7
    6130:	add	r1, r1, r2
    6134:	ldrb	r2, [r4, #2946]	; 0xb82
    6138:	tst	r3, #1
    613c:	ldrbne	r3, [r6, r1]
    6140:	add	r1, r1, #1
    6144:	eorne	r2, r3, r2
    6148:	strb	r2, [r0]
    614c:	smmla	r2, r1, r7, r1
    6150:	asr	r3, r2, #6
    6154:	add	r2, r3, r2, lsr #31
    6158:	ldrb	r3, [r4, #4]
    615c:	sub	r2, r2, r2, lsl #7
    6160:	add	r1, r1, r2
    6164:	ldrb	r2, [r4, #2947]	; 0xb83
    6168:	tst	r3, #1
    616c:	ldrbne	r3, [r6, r1]
    6170:	add	r1, r1, #1
    6174:	eorne	r2, r3, r2
    6178:	strb	r2, [r0, #1]
    617c:	smmla	r2, r1, r7, r1
    6180:	asr	r3, r2, #6
    6184:	add	r2, r3, r2, lsr #31
    6188:	ldrb	r3, [r4, #4]
    618c:	sub	r2, r2, r2, lsl #7
    6190:	add	r1, r1, r2
    6194:	ldrb	r2, [r4, #2948]	; 0xb84
    6198:	tst	r3, #1
    619c:	ldrbne	r3, [r6, r1]
    61a0:	add	r1, r1, #1
    61a4:	eorne	r2, r3, r2
    61a8:	strb	r2, [r0, #2]
    61ac:	smmla	r2, r1, r7, r1
    61b0:	asr	r3, r2, #6
    61b4:	add	r2, r3, r2, lsr #31
    61b8:	ldrb	r3, [r4, #4]
    61bc:	sub	r2, r2, r2, lsl #7
    61c0:	add	r1, r1, r2
    61c4:	ldrb	r2, [r4, #2949]	; 0xb85
    61c8:	tst	r3, #1
    61cc:	ldrbne	r3, [r6, r1]
    61d0:	eorne	r2, r3, r2
    61d4:	strb	r2, [r0, #3]
    61d8:	ldrb	r3, [r4, #4]
    61dc:	ldrb	r2, [r4, #2950]	; 0xb86
    61e0:	tst	r3, #1
    61e4:	bne	6204 <EV5@@Base+0x150>
    61e8:	strb	r2, [r0, #4]
    61ec:	ldrb	r1, [r4, #2951]	; 0xb87
    61f0:	strb	r1, [r0, #5]
    61f4:	ldrb	r1, [r4, #2952]	; 0xb88
    61f8:	strb	r1, [r0, #6]
    61fc:	ldrb	r1, [r4, #2953]	; 0xb89
    6200:	b	629c <EV5@@Base+0x1e8>
    6204:	add	r1, r1, #1
    6208:	smmla	r3, r1, r7, r1
    620c:	asr	r5, r3, #6
    6210:	add	r3, r5, r3, lsr #31
    6214:	sub	r3, r3, r3, lsl #7
    6218:	add	r1, r1, r3
    621c:	ldrb	r3, [r6, r1]
    6220:	add	r1, r1, #1
    6224:	eor	r2, r3, r2
    6228:	strb	r2, [r0, #4]
    622c:	smmla	r2, r1, r7, r1
    6230:	asr	r3, r2, #6
    6234:	add	r2, r3, r2, lsr #31
    6238:	ldrb	r3, [r4, #2951]	; 0xb87
    623c:	sub	r2, r2, r2, lsl #7
    6240:	add	r1, r1, r2
    6244:	ldrb	r2, [r6, r1]
    6248:	add	r1, r1, #1
    624c:	eor	r2, r2, r3
    6250:	strb	r2, [r0, #5]
    6254:	smmla	r2, r1, r7, r1
    6258:	asr	r3, r2, #6
    625c:	add	r2, r3, r2, lsr #31
    6260:	ldrb	r3, [r4, #2952]	; 0xb88
    6264:	sub	r2, r2, r2, lsl #7
    6268:	add	r1, r1, r2
    626c:	ldrb	r2, [r6, r1]
    6270:	add	r1, r1, #1
    6274:	eor	r2, r2, r3
    6278:	strb	r2, [r0, #6]
    627c:	smmla	r2, r1, r7, r1
    6280:	asr	r3, r2, #6
    6284:	add	r2, r3, r2, lsr #31
    6288:	sub	r2, r2, r2, lsl #7
    628c:	add	r1, r1, r2
    6290:	ldrb	r2, [r4, #2953]	; 0xb89
    6294:	ldrb	r1, [r6, r1]
    6298:	eor	r1, r1, r2
    629c:	strb	r1, [r0, #7]
    62a0:	ldr	r5, [r4, #64]	; 0x40
    62a4:	cmp	r5, #2
    62a8:	ble	62bc <EV5@@Base+0x208>
    62ac:	mov	r0, r4
    62b0:	bl	680c <HV@@Base+0x514>
    62b4:	cmp	r0, #0
    62b8:	bne	62e4 <EV5@@Base+0x230>
    62bc:	add	r1, r5, #1
    62c0:	cmp	r5, #181	; 0xb5
    62c4:	str	r1, [r4, #64]	; 0x40
    62c8:	blt	60f4 <EV5@@Base+0x40>
    62cc:	mov	r0, #2
    62d0:	sub	sp, fp, #28
    62d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    62d8:	mov	r0, #1
    62dc:	sub	sp, fp, #28
    62e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    62e4:	mov	r0, #10
    62e8:	sub	sp, fp, #28
    62ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    62f0:	andeq	ip, r0, r6, lsr r8
    62f4:			; <UNDEFINED> instruction: 0x0000c6b8

000062f8 <HV@@Base>:
    62f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    62fc:	add	fp, sp, #24
    6300:	sub	sp, sp, #80	; 0x50
    6304:	mov	r6, r0
    6308:	mov	r0, #0
    630c:	mov	r5, r1
    6310:	str	r0, [r1, #40]	; 0x28
    6314:	movw	r1, #2822	; 0xb06
    6318:	ldrh	r1, [r5, r1]
    631c:	lsr	r1, r1, #1
    6320:	cmp	r1, #180	; 0xb4
    6324:	bhi	633c <HV@@Base+0x44>
    6328:	str	r0, [r5, #64]	; 0x40
    632c:	mov	r8, #1
    6330:	mov	r0, r8
    6334:	sub	sp, fp, #24
    6338:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    633c:	ldrb	r0, [r5, #18]
    6340:	mov	r8, #2
    6344:	cmp	r0, #7
    6348:	beq	6484 <HV@@Base+0x18c>
    634c:	cmp	r0, #6
    6350:	beq	6504 <HV@@Base+0x20c>
    6354:	cmp	r0, #5
    6358:	bne	6330 <HV@@Base+0x38>
    635c:	vldr	d18, [pc, #580]	; 65a8 <HV@@Base+0x2b0>
    6360:	vldr	d19, [pc, #584]	; 65b0 <HV@@Base+0x2b8>
    6364:	vldr	d20, [pc, #588]	; 65b8 <HV@@Base+0x2c0>
    6368:	movw	r0, #2946	; 0xb82
    636c:	vmov.i32	q8, #0	; 0x00000000
    6370:	mov	r2, #0
    6374:	vmov.i32	q11, #255	; 0x000000ff
    6378:	add	r1, r5, r0
    637c:	mov	r0, sp
    6380:	mov	r3, r1
    6384:	add	r1, r1, #12
    6388:	vld1.8	{d24}, [r3]!
    638c:	ldr	r3, [r3]
    6390:	vmov.32	d25[0], r3
    6394:	add	r3, r0, r2
    6398:	add	r2, r2, #4
    639c:	vtbl.8	d21, {d24-d25}, d18
    63a0:	vtbl.8	d26, {d24-d25}, d19
    63a4:	vtbl.8	d24, {d24-d25}, d20
    63a8:	cmp	r2, #80	; 0x50
    63ac:	veor	d25, d26, d21
    63b0:	veor	d27, d24, d26
    63b4:	veor	d28, d24, d21
    63b8:	vorr	d25, d27, d25
    63bc:	vorr	d27, d24, d21
    63c0:	vand	d21, d24, d21
    63c4:	vorr	d25, d25, d28
    63c8:	vand	d24, d27, d26
    63cc:	vmovl.u16	q13, d25
    63d0:	vorr	d21, d24, d21
    63d4:	vand	q12, q13, q11
    63d8:	vuzp.8	d21, d26
    63dc:	vadd.i32	q8, q8, q12
    63e0:	vst1.32	{d21[0]}, [r3]
    63e4:	bne	6380 <HV@@Base+0x88>
    63e8:	vext.8	q9, q8, q8, #8
    63ec:	vadd.i32	q8, q8, q9
    63f0:	vdup.32	q9, d16[1]
    63f4:	vadd.i32	q8, q8, q9
    63f8:	vmov.32	r1, d16[0]
    63fc:	cmp	r1, #19
    6400:	bhi	65a0 <HV@@Base+0x2a8>
    6404:	mov	r1, #10
    6408:	str	r1, [r5, #64]	; 0x40
    640c:	ldr	r2, [r5, #4]
    6410:	orr	r1, r2, #128	; 0x80
    6414:	and	r2, r2, #1
    6418:	str	r1, [r5, #4]
    641c:	and	r1, r6, #63	; 0x3f
    6420:	movw	r6, #1033	; 0x409
    6424:	ldr	r3, [pc, #404]	; 65c0 <HV@@Base+0x2c8>
    6428:	ldr	ip, [pc, #404]	; 65c4 <HV@@Base+0x2cc>
    642c:	movt	r6, #33026	; 0x8102
    6430:	add	r3, pc, r3
    6434:	add	ip, pc, ip
    6438:	ldrb	r1, [r3, r1]
    643c:	mov	r3, #0
    6440:	add	r4, r1, #18
    6444:	add	r1, r5, #68	; 0x44
    6448:	smmla	r7, r4, r6, r4
    644c:	cmp	r2, #0
    6450:	asr	r5, r7, #6
    6454:	add	r7, r5, r7, lsr #31
    6458:	rsb	r7, r7, r7, lsl #7
    645c:	sub	r4, r4, r7
    6460:	ldrb	r7, [r0, r3]
    6464:	ldrbne	r5, [ip, r4]
    6468:	add	r4, r4, #1
    646c:	eorne	r7, r5, r7
    6470:	strb	r7, [r1, r3]
    6474:	add	r3, r3, #1
    6478:	cmp	r3, #80	; 0x50
    647c:	bne	6448 <HV@@Base+0x150>
    6480:	b	6330 <HV@@Base+0x38>
    6484:	mov	r0, #30
    6488:	str	r0, [r5, #64]	; 0x40
    648c:	ldr	r0, [r5, #4]
    6490:	orr	r1, r0, #128	; 0x80
    6494:	and	r0, r0, #1
    6498:	str	r1, [r5, #4]
    649c:	and	r1, r6, #63	; 0x3f
    64a0:	ldr	r2, [pc, #296]	; 65d0 <HV@@Base+0x2d8>
    64a4:	ldr	ip, [pc, #296]	; 65d4 <HV@@Base+0x2dc>
    64a8:	add	r2, pc, r2
    64ac:	add	ip, pc, ip
    64b0:	ldrb	r1, [r2, r1]
    64b4:	movw	r2, #1033	; 0x409
    64b8:	movt	r2, #33026	; 0x8102
    64bc:	add	r6, r1, #18
    64c0:	mov	r1, #0
    64c4:	smmla	r7, r6, r2, r6
    64c8:	cmp	r0, #0
    64cc:	asr	r4, r7, #6
    64d0:	add	r7, r4, r7, lsr #31
    64d4:	add	r4, r5, r1
    64d8:	add	r1, r1, #1
    64dc:	rsb	r7, r7, r7, lsl #7
    64e0:	sub	r6, r6, r7
    64e4:	ldrb	r7, [r4, #2946]	; 0xb82
    64e8:	ldrbne	r3, [ip, r6]
    64ec:	add	r6, r6, #1
    64f0:	eorne	r7, r3, r7
    64f4:	cmp	r1, #240	; 0xf0
    64f8:	strb	r7, [r4, #68]	; 0x44
    64fc:	bne	64c4 <HV@@Base+0x1cc>
    6500:	b	6330 <HV@@Base+0x38>
    6504:	movw	r0, #2946	; 0xb82
    6508:	mov	r1, #160	; 0xa0
    650c:	add	r0, r5, r0
    6510:	bl	65d8 <HV@@Base+0x2e0>
    6514:	cmp	r0, #0
    6518:	beq	65a0 <HV@@Base+0x2a8>
    651c:	mov	r1, #20
    6520:	str	r1, [r5, #64]	; 0x40
    6524:	ldr	r2, [r5, #4]
    6528:	orr	r1, r2, #128	; 0x80
    652c:	and	r2, r2, #1
    6530:	str	r1, [r5, #4]
    6534:	and	r1, r6, #63	; 0x3f
    6538:	movw	r6, #1033	; 0x409
    653c:	ldr	r3, [pc, #132]	; 65c8 <HV@@Base+0x2d0>
    6540:	ldr	ip, [pc, #132]	; 65cc <HV@@Base+0x2d4>
    6544:	movt	r6, #33026	; 0x8102
    6548:	add	r3, pc, r3
    654c:	add	ip, pc, ip
    6550:	ldrb	r1, [r3, r1]
    6554:	mov	r3, #0
    6558:	add	r4, r1, #18
    655c:	add	r1, r5, #68	; 0x44
    6560:	smmla	r7, r4, r6, r4
    6564:	cmp	r2, #0
    6568:	asr	r5, r7, #6
    656c:	add	r7, r5, r7, lsr #31
    6570:	rsb	r7, r7, r7, lsl #7
    6574:	sub	r4, r4, r7
    6578:	ldrb	r7, [r0, r3]
    657c:	ldrbne	r5, [ip, r4]
    6580:	add	r4, r4, #1
    6584:	eorne	r7, r5, r7
    6588:	strb	r7, [r1, r3]
    658c:	add	r3, r3, #1
    6590:	cmp	r3, #160	; 0xa0
    6594:	bne	6560 <HV@@Base+0x268>
    6598:	bl	4548 <free@plt>
    659c:	b	6330 <HV@@Base+0x38>
    65a0:	mov	r8, #0
    65a4:	b	6330 <HV@@Base+0x38>
    65a8:			; <UNDEFINED> instruction: 0xff03ff00
    65ac:			; <UNDEFINED> instruction: 0xff09ff06
    65b0:			; <UNDEFINED> instruction: 0xff04ff01
    65b4:			; <UNDEFINED> instruction: 0xff0aff07
    65b8:			; <UNDEFINED> instruction: 0xff05ff02
    65bc:			; <UNDEFINED> instruction: 0xff0bff08
    65c0:	strdeq	ip, [r0], -r2
    65c4:	andeq	ip, r0, r4, ror r3
    65c8:	ldrdeq	ip, [r0], -sl
    65cc:	andeq	ip, r0, ip, asr r2
    65d0:	andeq	ip, r0, sl, ror r4
    65d4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    65d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    65dc:	add	fp, sp, #24
    65e0:	mov	r5, r0
    65e4:	movw	r0, #26215	; 0x6667
    65e8:	mov	r8, r1
    65ec:	movt	r0, #26214	; 0x6666
    65f0:	smmul	r0, r1, r0
    65f4:	lsr	r1, r0, #2
    65f8:	add	r0, r1, r0, lsr #31
    65fc:	add	r0, r0, r0, lsl #2
    6600:	sub	r0, r8, r0, lsl #1
    6604:	uxtb	r0, r0
    6608:	rsb	r1, r0, #10
    660c:	cmp	r0, #0
    6610:	addne	r8, r8, r1
    6614:	mov	r0, r8
    6618:	bl	4638 <malloc@plt>
    661c:	cmp	r8, #1
    6620:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    6624:	mov	r1, #0
    6628:	mvn	ip, #6
    662c:	vld1.8	{d16}, [r5]
    6630:	ldrh	r2, [r5, #8]
    6634:	add	r3, r0, r1
    6638:	strh	r2, [r3, #8]
    663c:	vst1.8	{d16}, [r3]
    6640:	ldrb	r2, [r5]
    6644:	ldrb	r3, [r5, #1]
    6648:	ldrb	r4, [r5, #2]
    664c:	ldrb	r6, [r5, #3]
    6650:	orr	r7, r2, r3, lsl #1
    6654:	and	r2, r2, #1
    6658:	rsb	r2, r2, #0
    665c:	tst	r7, #2
    6660:	and	r3, r2, #11
    6664:	orr	r2, r7, r4, lsl #2
    6668:	ldrb	r7, [r5, #4]
    666c:	eorne	r3, r3, #22
    6670:	tst	r2, #4
    6674:	orr	r2, r2, r6, lsl #3
    6678:	eorne	r3, r3, #7
    667c:	tst	r2, #8
    6680:	eorne	r3, r3, #14
    6684:	orr	r2, r2, r7, lsl #4
    6688:	ldrb	r7, [r5, #5]
    668c:	tst	r2, #16
    6690:	eorne	r3, r3, #28
    6694:	orr	r2, r2, r7, lsl #5
    6698:	ldrb	r7, [r5, #6]
    669c:	tst	r2, #32
    66a0:	eorne	r3, r3, #19
    66a4:	orr	r2, r2, r7, lsl #6
    66a8:	ldrb	r7, [r5, #7]
    66ac:	tst	r2, #64	; 0x40
    66b0:	eorne	r3, r3, #13
    66b4:	orr	r2, r2, r7, lsl #7
    66b8:	ldrb	r7, [r5, #8]
    66bc:	tst	r2, #128	; 0x80
    66c0:	eorne	r3, r3, #26
    66c4:	orr	r2, r2, r7, lsl #8
    66c8:	ldrb	r7, [r5, #9]
    66cc:	tst	r2, #256	; 0x100
    66d0:	eorne	r3, r3, #31
    66d4:	orr	r2, r2, r7, lsl #9
    66d8:	ldrb	r7, [r5, #10]
    66dc:	tst	r2, #512	; 0x200
    66e0:	ldrb	r2, [r5, #11]
    66e4:	eorne	r3, r3, #21
    66e8:	orr	r2, r7, r2, lsl #1
    66ec:	ldrb	r7, [r5, #12]
    66f0:	orr	r2, r2, r7, lsl #2
    66f4:	ldrb	r7, [r5, #13]
    66f8:	orr	r2, r2, r7, lsl #3
    66fc:	ldrb	r7, [r5, #14]
    6700:	orr	r2, r2, r7, lsl #4
    6704:	eor	r3, r2, r3
    6708:	sub	r2, r3, #1
    670c:	and	r2, r2, r3
    6710:	tst	r2, #255	; 0xff
    6714:	beq	67ec <HV@@Base+0x4f4>
    6718:	uxtab	r3, ip, r3
    671c:	cmp	r3, #24
    6720:	bhi	6800 <HV@@Base+0x508>
    6724:	add	r2, pc, #4
    6728:	ldr	r3, [r2, r3, lsl #2]
    672c:	add	pc, r2, r3
    6730:	andeq	r0, r0, r4, rrx
    6734:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6738:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    673c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6740:	andeq	r0, r0, ip, rrx
    6744:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6748:	andeq	r0, r0, r4, ror r0
    674c:	andeq	r0, r0, ip, ror r0
    6750:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6754:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6758:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    675c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6760:	andeq	r0, r0, r4, lsl #1
    6764:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6768:	andeq	r0, r0, ip, lsl #1
    676c:	muleq	r0, r4, r0
    6770:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6774:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6778:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    677c:	muleq	r0, ip, r0
    6780:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6784:	andeq	r0, r0, r4, lsr #1
    6788:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    678c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6790:	andeq	r0, r0, ip, lsr #1
    6794:	add	r3, r1, #2
    6798:	b	67e0 <HV@@Base+0x4e8>
    679c:	mov	r3, r1
    67a0:	b	67e0 <HV@@Base+0x4e8>
    67a4:	add	r3, r1, #6
    67a8:	b	67e0 <HV@@Base+0x4e8>
    67ac:	add	r3, r1, #3
    67b0:	b	67e0 <HV@@Base+0x4e8>
    67b4:	add	r3, r1, #5
    67b8:	b	67e0 <HV@@Base+0x4e8>
    67bc:	add	r3, r1, #9
    67c0:	b	67e0 <HV@@Base+0x4e8>
    67c4:	orr	r3, r1, #1
    67c8:	b	67e0 <HV@@Base+0x4e8>
    67cc:	add	r3, r1, #7
    67d0:	b	67e0 <HV@@Base+0x4e8>
    67d4:	add	r3, r1, #4
    67d8:	b	67e0 <HV@@Base+0x4e8>
    67dc:	add	r3, r1, #8
    67e0:	ldrb	r2, [r0, r3]
    67e4:	eor	r2, r2, #1
    67e8:	strb	r2, [r0, r3]
    67ec:	add	r1, r1, #10
    67f0:	add	r5, r5, #15
    67f4:	cmp	r1, r8
    67f8:	blt	662c <HV@@Base+0x334>
    67fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6800:	bl	4548 <free@plt>
    6804:	mov	r0, #0
    6808:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    680c:	push	{r4, sl, fp, lr}
    6810:	add	fp, sp, #8
    6814:	ldrb	r1, [r0, #9]
    6818:	mov	r2, #2
    681c:	lsl	r3, r1, #7
    6820:	and	r2, r2, r1, lsr #5
    6824:	orr	r3, r3, r1, lsr #7
    6828:	orr	r2, r3, r2
    682c:	mov	r3, #4
    6830:	and	r3, r3, r1, lsr #3
    6834:	orr	r2, r2, r3
    6838:	mov	r3, #8
    683c:	and	r3, r3, r1, lsr #1
    6840:	orr	r2, r2, r3
    6844:	and	r3, r1, #8
    6848:	orr	r2, r2, r3, lsl #1
    684c:	and	r3, r1, #4
    6850:	and	r1, r1, #2
    6854:	orr	r2, r2, r3, lsl #3
    6858:	mvn	r3, #15
    685c:	orr	r1, r2, r1, lsl #5
    6860:	ldr	r2, [r0, #64]	; 0x40
    6864:	lsl	r1, r1, #8
    6868:	add	lr, r3, r2, lsl #3
    686c:	cmp	lr, #1
    6870:	blt	68b4 <HV@@Base+0x5bc>
    6874:	mov	r2, #0
    6878:	movw	ip, #65534	; 0xfffe
    687c:	mov	r3, #0
    6880:	add	r2, r0, r2
    6884:	and	r4, r1, ip
    6888:	add	r3, r3, #1
    688c:	ldrb	r2, [r2, #68]	; 0x44
    6890:	eor	r1, r1, r2
    6894:	lsl	r2, r1, #15
    6898:	and	r1, r1, #1
    689c:	orr	r2, r2, r4, lsr #1
    68a0:	eor	r2, r2, r1, lsl #10
    68a4:	eor	r1, r2, r1, lsl #3
    68a8:	uxth	r2, r3
    68ac:	cmp	lr, r2
    68b0:	bgt	6880 <HV@@Base+0x588>
    68b4:	add	r0, r0, lr
    68b8:	uxth	r1, r1
    68bc:	ldrb	ip, [r0, #68]	; 0x44
    68c0:	ldrb	r3, [r0, #69]	; 0x45
    68c4:	ldrb	r4, [r0, #70]	; 0x46
    68c8:	ldrb	r2, [r0, #71]	; 0x47
    68cc:	orr	r3, ip, r3, lsl #1
    68d0:	orr	r3, r3, r4, lsl #2
    68d4:	orr	r2, r3, r2, lsl #3
    68d8:	ldrb	r3, [r0, #72]	; 0x48
    68dc:	orr	r2, r2, r3, lsl #4
    68e0:	ldrb	r3, [r0, #73]	; 0x49
    68e4:	orr	r2, r2, r3, lsl #5
    68e8:	ldrb	r3, [r0, #74]	; 0x4a
    68ec:	orr	r2, r2, r3, lsl #6
    68f0:	ldrb	r3, [r0, #75]	; 0x4b
    68f4:	orr	r2, r2, r3, lsl #7
    68f8:	ldrb	r3, [r0, #76]	; 0x4c
    68fc:	orr	r2, r2, r3, lsl #8
    6900:	ldrb	r3, [r0, #77]	; 0x4d
    6904:	orr	r2, r2, r3, lsl #9
    6908:	ldrb	r3, [r0, #78]	; 0x4e
    690c:	orr	r2, r2, r3, lsl #10
    6910:	ldrb	r3, [r0, #79]	; 0x4f
    6914:	orr	r2, r2, r3, lsl #11
    6918:	ldrb	r3, [r0, #80]	; 0x50
    691c:	orr	r2, r2, r3, lsl #12
    6920:	ldrb	r3, [r0, #81]	; 0x51
    6924:	orr	r2, r2, r3, lsl #13
    6928:	ldrb	r3, [r0, #82]	; 0x52
    692c:	ldrb	r0, [r0, #83]	; 0x53
    6930:	orr	r2, r2, r3, lsl #14
    6934:	orr	r0, r2, r0, lsl #15
    6938:	uxth	r0, r0
    693c:	sub	r0, r1, r0
    6940:	clz	r0, r0
    6944:	lsr	r0, r0, #5
    6948:	pop	{r4, sl, fp, pc}
    694c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6950:	add	fp, sp, #24
    6954:	mov	r6, r1
    6958:	ldr	r9, [fp, #12]
    695c:	ldr	r1, [fp, #8]
    6960:	mov	r8, r2
    6964:	mov	r5, #0
    6968:	cmp	r2, #2
    696c:	bne	6a0c <HV@@Base+0x714>
    6970:	cmp	r3, #16
    6974:	blt	6f10 <HV@@Base+0xc18>
    6978:	cmp	r1, #0
    697c:	beq	6aa0 <HV@@Base+0x7a8>
    6980:	cmp	r3, #30
    6984:	blt	6f10 <HV@@Base+0xc18>
    6988:	mov	r1, #16
    698c:	bl	65d8 <HV@@Base+0x2e0>
    6990:	cmp	r0, #0
    6994:	beq	6f10 <HV@@Base+0xc18>
    6998:	ldr	r2, [pc, #1400]	; 6f18 <HV@@Base+0xc20>
    699c:	and	r1, r6, #63	; 0x3f
    69a0:	movw	r6, #1033	; 0x409
    69a4:	mov	r3, #0
    69a8:	movt	r6, #33026	; 0x8102
    69ac:	add	r2, pc, r2
    69b0:	ldrb	r1, [r2, r1]
    69b4:	ldr	r2, [r9, #4]
    69b8:	ldr	ip, [pc, #1372]	; 6f1c <HV@@Base+0xc24>
    69bc:	add	r4, r1, #18
    69c0:	add	r1, r9, #44	; 0x2c
    69c4:	and	r2, r2, #1
    69c8:	add	ip, pc, ip
    69cc:	smmla	r7, r4, r6, r4
    69d0:	cmp	r2, #0
    69d4:	asr	r5, r7, #6
    69d8:	add	r7, r5, r7, lsr #31
    69dc:	rsb	r7, r7, r7, lsl #7
    69e0:	sub	r4, r4, r7
    69e4:	ldrb	r7, [r0, r3]
    69e8:	ldrbne	r5, [ip, r4]
    69ec:	add	r4, r4, #1
    69f0:	eorne	r7, r5, r7
    69f4:	strb	r7, [r1, r3]
    69f8:	add	r3, r3, #1
    69fc:	cmp	r3, #16
    6a00:	bne	69cc <HV@@Base+0x6d4>
    6a04:	bl	4548 <free@plt>
    6a08:	b	6b0c <HV@@Base+0x814>
    6a0c:	cmp	r3, #8
    6a10:	blt	6f10 <HV@@Base+0xc18>
    6a14:	cmp	r1, #0
    6a18:	beq	6b64 <HV@@Base+0x86c>
    6a1c:	cmp	r3, #15
    6a20:	blt	6f10 <HV@@Base+0xc18>
    6a24:	mov	r1, #8
    6a28:	bl	65d8 <HV@@Base+0x2e0>
    6a2c:	cmp	r0, #0
    6a30:	beq	6f10 <HV@@Base+0xc18>
    6a34:	ldr	r2, [pc, #1260]	; 6f28 <HV@@Base+0xc30>
    6a38:	and	r1, r6, #63	; 0x3f
    6a3c:	ldrb	r6, [r9, #4]
    6a40:	add	r2, pc, r2
    6a44:	tst	r6, #1
    6a48:	ldrb	r1, [r2, r1]
    6a4c:	add	r2, r1, #18
    6a50:	movw	r1, #2065	; 0x811
    6a54:	movt	r1, #516	; 0x204
    6a58:	umull	r3, r7, r2, r1
    6a5c:	ldrb	r3, [r0]
    6a60:	bne	6d30 <HV@@Base+0xa38>
    6a64:	strb	r3, [r9, #44]	; 0x2c
    6a68:	ldrb	r1, [r0, #1]
    6a6c:	strb	r1, [r9, #45]	; 0x2d
    6a70:	ldrb	r1, [r0, #2]
    6a74:	strb	r1, [r9, #46]	; 0x2e
    6a78:	ldrb	r1, [r0, #3]
    6a7c:	strb	r1, [r9, #47]	; 0x2f
    6a80:	ldrb	r1, [r0, #4]
    6a84:	strb	r1, [r9, #48]	; 0x30
    6a88:	ldrb	r1, [r0, #5]
    6a8c:	strb	r1, [r9, #49]	; 0x31
    6a90:	ldrb	r1, [r0, #6]
    6a94:	strb	r1, [r9, #50]	; 0x32
    6a98:	ldrb	r1, [r0, #7]
    6a9c:	b	6e88 <HV@@Base+0xb90>
    6aa0:	ldr	r2, [pc, #1144]	; 6f20 <HV@@Base+0xc28>
    6aa4:	and	r1, r6, #63	; 0x3f
    6aa8:	movw	r6, #1033	; 0x409
    6aac:	mov	r3, #0
    6ab0:	movt	r6, #33026	; 0x8102
    6ab4:	add	r2, pc, r2
    6ab8:	ldrb	r1, [r2, r1]
    6abc:	ldr	r2, [r9, #4]
    6ac0:	ldr	ip, [pc, #1116]	; 6f24 <HV@@Base+0xc2c>
    6ac4:	add	r4, r1, #18
    6ac8:	add	r1, r9, #44	; 0x2c
    6acc:	and	r2, r2, #1
    6ad0:	add	ip, pc, ip
    6ad4:	smmla	r7, r4, r6, r4
    6ad8:	cmp	r2, #0
    6adc:	asr	r5, r7, #6
    6ae0:	add	r7, r5, r7, lsr #31
    6ae4:	rsb	r7, r7, r7, lsl #7
    6ae8:	sub	r4, r4, r7
    6aec:	ldrb	r7, [r0, r3]
    6af0:	ldrbne	r5, [ip, r4]
    6af4:	add	r4, r4, #1
    6af8:	eorne	r7, r5, r7
    6afc:	strb	r7, [r1, r3]
    6b00:	add	r3, r3, #1
    6b04:	cmp	r3, #16
    6b08:	bne	6ad4 <HV@@Base+0x7dc>
    6b0c:	ldrb	r0, [r9, #47]	; 0x2f
    6b10:	ldrb	r1, [r9, #48]	; 0x30
    6b14:	ldrb	r2, [r9, #49]	; 0x31
    6b18:	ldrb	r3, [r9, #50]	; 0x32
    6b1c:	orr	r0, r0, r1, lsl #1
    6b20:	ldrb	r1, [r9, #51]	; 0x33
    6b24:	orr	r0, r0, r2, lsl #2
    6b28:	orr	r0, r0, r3, lsl #3
    6b2c:	orr	r0, r0, r1, lsl #4
    6b30:	ldrb	r1, [r9, #52]	; 0x34
    6b34:	orr	r0, r0, r1, lsl #5
    6b38:	ldrb	r1, [r9, #53]	; 0x35
    6b3c:	orr	r0, r0, r1, lsl #6
    6b40:	ldrb	r1, [r9, #54]	; 0x36
    6b44:	orr	r0, r0, r1, lsl #7
    6b48:	ldrb	r1, [r9, #55]	; 0x37
    6b4c:	orr	r0, r0, r1, lsl #8
    6b50:	ldrb	r1, [r9, #56]	; 0x38
    6b54:	orr	r0, r0, r1, lsl #9
    6b58:	mov	r1, #4
    6b5c:	uxtah	r0, r1, r0
    6b60:	b	6ebc <HV@@Base+0xbc4>
    6b64:	ldr	r2, [pc, #960]	; 6f2c <HV@@Base+0xc34>
    6b68:	and	r1, r6, #63	; 0x3f
    6b6c:	ldrb	r6, [r9, #4]
    6b70:	add	r2, pc, r2
    6b74:	tst	r6, #1
    6b78:	ldrb	r1, [r2, r1]
    6b7c:	add	r3, r1, #18
    6b80:	movw	r1, #2065	; 0x811
    6b84:	movt	r1, #516	; 0x204
    6b88:	umull	r2, r7, r3, r1
    6b8c:	ldrb	r2, [r0]
    6b90:	bne	6bd0 <HV@@Base+0x8d8>
    6b94:	strb	r2, [r9, #44]	; 0x2c
    6b98:	ldrb	r1, [r0, #1]
    6b9c:	strb	r1, [r9, #45]	; 0x2d
    6ba0:	ldrb	r1, [r0, #2]
    6ba4:	strb	r1, [r9, #46]	; 0x2e
    6ba8:	ldrb	r3, [r0, #3]
    6bac:	strb	r3, [r9, #47]	; 0x2f
    6bb0:	ldrb	r6, [r0, #4]
    6bb4:	strb	r6, [r9, #48]	; 0x30
    6bb8:	ldrb	r5, [r0, #5]
    6bbc:	strb	r5, [r9, #49]	; 0x31
    6bc0:	ldrb	r2, [r0, #6]
    6bc4:	strb	r2, [r9, #50]	; 0x32
    6bc8:	ldrb	r0, [r0, #7]
    6bcc:	b	6d28 <HV@@Base+0xa30>
    6bd0:	sub	r6, r3, r7
    6bd4:	ldr	ip, [pc, #856]	; 6f34 <HV@@Base+0xc3c>
    6bd8:	add	r7, r7, r6, lsr #1
    6bdc:	lsr	r7, r7, #6
    6be0:	sub	r7, r7, r7, lsl #7
    6be4:	add	r3, r3, r7
    6be8:	add	ip, pc, ip
    6bec:	ldrb	r7, [ip, r3]
    6bf0:	eor	r2, r7, r2
    6bf4:	strb	r2, [r9, #44]	; 0x2c
    6bf8:	add	r2, r3, #1
    6bfc:	umull	r3, r7, r2, r1
    6c00:	sub	r3, r2, r7
    6c04:	add	r3, r7, r3, lsr #1
    6c08:	ldrb	r7, [r0, #1]
    6c0c:	lsr	r3, r3, #6
    6c10:	sub	r3, r3, r3, lsl #7
    6c14:	add	r2, r2, r3
    6c18:	ldrb	r3, [ip, r2]
    6c1c:	add	r2, r2, #1
    6c20:	eor	r3, r3, r7
    6c24:	strb	r3, [r9, #45]	; 0x2d
    6c28:	umull	r3, r7, r2, r1
    6c2c:	sub	r3, r2, r7
    6c30:	add	r3, r7, r3, lsr #1
    6c34:	ldrb	r7, [r0, #2]
    6c38:	lsr	r3, r3, #6
    6c3c:	sub	r3, r3, r3, lsl #7
    6c40:	add	r2, r2, r3
    6c44:	ldrb	r3, [ip, r2]
    6c48:	add	r2, r2, #1
    6c4c:	eor	r3, r3, r7
    6c50:	strb	r3, [r9, #46]	; 0x2e
    6c54:	umull	r3, r7, r2, r1
    6c58:	sub	r3, r2, r7
    6c5c:	add	r3, r7, r3, lsr #1
    6c60:	lsr	r3, r3, #6
    6c64:	sub	r3, r3, r3, lsl #7
    6c68:	add	r2, r2, r3
    6c6c:	add	r3, r2, #1
    6c70:	ldrb	r2, [ip, r2]
    6c74:	umull	r7, r6, r3, r1
    6c78:	sub	r7, r3, r6
    6c7c:	add	r7, r6, r7, lsr #1
    6c80:	lsr	r7, r7, #6
    6c84:	sub	r7, r7, r7, lsl #7
    6c88:	add	r3, r3, r7
    6c8c:	add	r7, r3, #1
    6c90:	umull	r6, r5, r7, r1
    6c94:	sub	r6, r7, r5
    6c98:	add	r6, r5, r6, lsr #1
    6c9c:	lsr	r6, r6, #6
    6ca0:	sub	r6, r6, r6, lsl #7
    6ca4:	add	r7, r7, r6
    6ca8:	add	r6, r7, #1
    6cac:	ldrb	r7, [ip, r7]
    6cb0:	umull	r5, r4, r6, r1
    6cb4:	sub	r5, r6, r4
    6cb8:	add	r5, r4, r5, lsr #1
    6cbc:	lsr	r5, r5, #6
    6cc0:	sub	r5, r5, r5, lsl #7
    6cc4:	add	r4, r6, r5
    6cc8:	ldrb	r6, [ip, r3]
    6ccc:	ldrb	r3, [r0, #3]
    6cd0:	eor	r3, r2, r3
    6cd4:	strb	r3, [r9, #47]	; 0x2f
    6cd8:	ldrb	r2, [r0, #4]
    6cdc:	eor	r6, r6, r2
    6ce0:	strb	r6, [r9, #48]	; 0x30
    6ce4:	ldrb	r2, [r0, #5]
    6ce8:	eor	r5, r7, r2
    6cec:	ldrb	r2, [ip, r4]
    6cf0:	strb	r5, [r9, #49]	; 0x31
    6cf4:	ldrb	r7, [r0, #6]
    6cf8:	eor	r2, r2, r7
    6cfc:	add	r7, r4, #1
    6d00:	umull	r1, r4, r7, r1
    6d04:	strb	r2, [r9, #50]	; 0x32
    6d08:	sub	r1, r7, r4
    6d0c:	ldrb	r0, [r0, #7]
    6d10:	add	r1, r4, r1, lsr #1
    6d14:	lsr	r1, r1, #6
    6d18:	sub	r1, r1, r1, lsl #7
    6d1c:	add	r1, r7, r1
    6d20:	ldrb	r1, [ip, r1]
    6d24:	eor	r0, r1, r0
    6d28:	strb	r0, [r9, #51]	; 0x33
    6d2c:	b	6ea4 <HV@@Base+0xbac>
    6d30:	sub	r6, r2, r7
    6d34:	add	r7, r7, r6, lsr #1
    6d38:	lsr	r7, r7, #6
    6d3c:	sub	r7, r7, r7, lsl #7
    6d40:	add	r7, r2, r7
    6d44:	ldr	r2, [pc, #492]	; 6f38 <HV@@Base+0xc40>
    6d48:	add	r2, pc, r2
    6d4c:	ldrb	r6, [r2, r7]
    6d50:	eor	r3, r6, r3
    6d54:	strb	r3, [r9, #44]	; 0x2c
    6d58:	add	r3, r7, #1
    6d5c:	umull	r7, r6, r3, r1
    6d60:	sub	r7, r3, r6
    6d64:	add	r7, r6, r7, lsr #1
    6d68:	ldrb	r6, [r0, #1]
    6d6c:	lsr	r7, r7, #6
    6d70:	sub	r7, r7, r7, lsl #7
    6d74:	add	r3, r3, r7
    6d78:	ldrb	r7, [r2, r3]
    6d7c:	add	r3, r3, #1
    6d80:	eor	r7, r7, r6
    6d84:	strb	r7, [r9, #45]	; 0x2d
    6d88:	umull	r7, r6, r3, r1
    6d8c:	sub	r7, r3, r6
    6d90:	add	r7, r6, r7, lsr #1
    6d94:	ldrb	r6, [r0, #2]
    6d98:	lsr	r7, r7, #6
    6d9c:	sub	r7, r7, r7, lsl #7
    6da0:	add	r3, r3, r7
    6da4:	ldrb	r7, [r2, r3]
    6da8:	add	r3, r3, #1
    6dac:	eor	r7, r7, r6
    6db0:	strb	r7, [r9, #46]	; 0x2e
    6db4:	umull	r7, r6, r3, r1
    6db8:	sub	r7, r3, r6
    6dbc:	add	r7, r6, r7, lsr #1
    6dc0:	ldrb	r6, [r0, #3]
    6dc4:	lsr	r7, r7, #6
    6dc8:	sub	r7, r7, r7, lsl #7
    6dcc:	add	r3, r3, r7
    6dd0:	ldrb	r7, [r2, r3]
    6dd4:	add	r3, r3, #1
    6dd8:	eor	r7, r7, r6
    6ddc:	strb	r7, [r9, #47]	; 0x2f
    6de0:	umull	r7, r6, r3, r1
    6de4:	sub	r7, r3, r6
    6de8:	add	r7, r6, r7, lsr #1
    6dec:	ldrb	r6, [r0, #4]
    6df0:	lsr	r7, r7, #6
    6df4:	sub	r7, r7, r7, lsl #7
    6df8:	add	r3, r3, r7
    6dfc:	ldrb	r7, [r2, r3]
    6e00:	add	r3, r3, #1
    6e04:	eor	r7, r7, r6
    6e08:	strb	r7, [r9, #48]	; 0x30
    6e0c:	umull	r7, r6, r3, r1
    6e10:	sub	r7, r3, r6
    6e14:	add	r7, r6, r7, lsr #1
    6e18:	ldrb	r6, [r0, #5]
    6e1c:	lsr	r7, r7, #6
    6e20:	sub	r7, r7, r7, lsl #7
    6e24:	add	r3, r3, r7
    6e28:	ldrb	r7, [r2, r3]
    6e2c:	add	r3, r3, #1
    6e30:	eor	r7, r7, r6
    6e34:	strb	r7, [r9, #49]	; 0x31
    6e38:	umull	r7, r6, r3, r1
    6e3c:	sub	r7, r3, r6
    6e40:	add	r7, r6, r7, lsr #1
    6e44:	ldrb	r6, [r0, #6]
    6e48:	lsr	r7, r7, #6
    6e4c:	sub	r7, r7, r7, lsl #7
    6e50:	add	r3, r3, r7
    6e54:	ldrb	r7, [r2, r3]
    6e58:	add	r3, r3, #1
    6e5c:	eor	r7, r7, r6
    6e60:	strb	r7, [r9, #50]	; 0x32
    6e64:	umull	r1, r7, r3, r1
    6e68:	sub	r1, r3, r7
    6e6c:	add	r1, r7, r1, lsr #1
    6e70:	lsr	r1, r1, #6
    6e74:	sub	r1, r1, r1, lsl #7
    6e78:	add	r1, r3, r1
    6e7c:	ldrb	r1, [r2, r1]
    6e80:	ldrb	r2, [r0, #7]
    6e84:	eor	r1, r1, r2
    6e88:	strb	r1, [r9, #51]	; 0x33
    6e8c:	bl	4548 <free@plt>
    6e90:	ldrb	r0, [r9, #51]	; 0x33
    6e94:	ldrb	r3, [r9, #47]	; 0x2f
    6e98:	ldrb	r6, [r9, #48]	; 0x30
    6e9c:	ldrb	r5, [r9, #49]	; 0x31
    6ea0:	ldrb	r2, [r9, #50]	; 0x32
    6ea4:	orr	r1, r3, r6, lsl #1
    6ea8:	orr	r1, r1, r5, lsl #2
    6eac:	orr	r1, r1, r2, lsl #3
    6eb0:	orr	r0, r1, r0, lsl #4
    6eb4:	mov	r1, #3
    6eb8:	uxtab	r0, r1, r0
    6ebc:	str	r0, [r9, #64]	; 0x40
    6ec0:	mov	r5, #1
    6ec4:	ldrb	r1, [r9, #18]
    6ec8:	sub	r2, r1, #3
    6ecc:	mov	r1, #0
    6ed0:	uxtb	r3, r2
    6ed4:	cmp	r3, #12
    6ed8:	sxtbls	r1, r2
    6edc:	ldrls	r2, [pc, #76]	; 6f30 <HV@@Base+0xc38>
    6ee0:	str	r8, [r9, #40]	; 0x28
    6ee4:	addls	r2, pc, r2
    6ee8:	ldrls	r1, [r2, r1, lsl #2]
    6eec:	cmp	r0, r1
    6ef0:	movlt	r1, r0
    6ef4:	str	r1, [r9, #64]	; 0x40
    6ef8:	ldrb	r0, [r9, #44]	; 0x2c
    6efc:	ldrb	r1, [r9, #45]	; 0x2d
    6f00:	ldrb	r2, [r9, #46]	; 0x2e
    6f04:	orr	r0, r0, r1, lsl #1
    6f08:	strb	r2, [r9, #61]	; 0x3d
    6f0c:	strb	r0, [r9, #60]	; 0x3c
    6f10:	mov	r0, r5
    6f14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6f18:	andeq	fp, r0, r6, ror pc
    6f1c:	andeq	fp, r0, r0, ror #27
    6f20:	andeq	fp, r0, lr, ror #28
    6f24:	ldrdeq	fp, [r0], -r8
    6f28:	andeq	fp, r0, r2, ror #29
    6f2c:			; <UNDEFINED> instruction: 0x0000bdb2
    6f30:	andeq	fp, r0, r4, asr #18
    6f34:	andeq	fp, r0, r0, asr #23
    6f38:	andeq	fp, r0, r0, ror #20
    6f3c:	nop	{0}

00006f40 <try_clock@@Base>:
    6f40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6f44:	add	fp, sp, #24
    6f48:	sub	sp, sp, #40	; 0x28
    6f4c:	mov	r8, r1
    6f50:	movw	r1, #2892	; 0xb4c
    6f54:	vldr	d18, [pc, #796]	; 7278 <try_clock@@Base+0x338>
    6f58:	vldr	d19, [pc, #800]	; 7280 <try_clock@@Base+0x340>
    6f5c:	vldr	d20, [pc, #804]	; 7288 <try_clock@@Base+0x348>
    6f60:	add	ip, sp, #20
    6f64:	add	r1, r8, r1
    6f68:	ldr	r2, [r8, #2900]	; 0xb54
    6f6c:	vld1.8	{d16}, [r1]
    6f70:	movw	r1, #2904	; 0xb58
    6f74:	add	r1, r8, r1
    6f78:	vmov.32	d17[0], r2
    6f7c:	vtbl.8	d21, {d16-d17}, d18
    6f80:	vtbl.8	d22, {d16-d17}, d19
    6f84:	vtbl.8	d16, {d16-d17}, d20
    6f88:	vorr	d17, d22, d21
    6f8c:	vand	d23, d22, d21
    6f90:	vand	d17, d17, d16
    6f94:	vorr	d17, d17, d23
    6f98:	vuzp.8	d17, d23
    6f9c:	vst1.32	{d17[0]}, [ip :32]
    6fa0:	vld1.8	{d24}, [r1]
    6fa4:	ldr	r1, [r8, #2912]	; 0xb60
    6fa8:	vmov.32	d25[0], r1
    6fac:	add	r1, ip, #4
    6fb0:	vtbl.8	d17, {d24-d25}, d18
    6fb4:	vtbl.8	d23, {d24-d25}, d19
    6fb8:	vtbl.8	d24, {d24-d25}, d20
    6fbc:	vorr	d25, d23, d17
    6fc0:	vand	d26, d23, d17
    6fc4:	vand	d25, d25, d24
    6fc8:	vorr	d25, d25, d26
    6fcc:	vuzp.8	d25, d26
    6fd0:	vst1.32	{d25[0]}, [r1 :32]
    6fd4:	movw	r1, #2916	; 0xb64
    6fd8:	add	r1, r8, r1
    6fdc:	vld1.8	{d26}, [r1]
    6fe0:	ldr	r1, [r8, #2924]	; 0xb6c
    6fe4:	vmov.32	d27[0], r1
    6fe8:	add	r1, ip, #8
    6fec:	vtbl.8	d25, {d26-d27}, d18
    6ff0:	vtbl.8	d28, {d26-d27}, d19
    6ff4:	vtbl.8	d26, {d26-d27}, d20
    6ff8:	vorr	d27, d28, d25
    6ffc:	vand	d29, d28, d25
    7000:	vand	d27, d27, d26
    7004:	vorr	d27, d27, d29
    7008:	vuzp.8	d27, d29
    700c:	vst1.32	{d27[0]}, [r1 :32]
    7010:	add	r1, r8, #2928	; 0xb70
    7014:	vld1.8	{d30}, [r1]
    7018:	ldr	r1, [r8, #2936]	; 0xb78
    701c:	vmov.32	d31[0], r1
    7020:	add	r1, ip, #12
    7024:	vtbl.8	d18, {d30-d31}, d18
    7028:	vtbl.8	d19, {d30-d31}, d19
    702c:	vtbl.8	d20, {d30-d31}, d20
    7030:	veor	d31, d24, d17
    7034:	veor	d24, d23, d24
    7038:	veor	d30, d16, d21
    703c:	veor	d16, d22, d16
    7040:	veor	d21, d22, d21
    7044:	veor	d17, d23, d17
    7048:	veor	d23, d26, d25
    704c:	vorr	d27, d19, d18
    7050:	vand	d29, d19, d18
    7054:	vorr	d22, d24, d31
    7058:	veor	d24, d28, d26
    705c:	vorr	d16, d16, d30
    7060:	vand	d27, d27, d20
    7064:	vorr	d16, d16, d21
    7068:	vorr	d17, d22, d17
    706c:	vorr	d22, d24, d23
    7070:	veor	d21, d28, d25
    7074:	veor	d23, d20, d18
    7078:	veor	d20, d19, d20
    707c:	veor	d18, d19, d18
    7080:	vmov.i32	q12, #255	; 0x000000ff
    7084:	vorr	d27, d27, d29
    7088:	vorr	d19, d20, d23
    708c:	vorr	d21, d22, d21
    7090:	vuzp.8	d27, d26
    7094:	vorr	d18, d19, d18
    7098:	vmovl.u16	q10, d21
    709c:	vst1.32	{d27[0]}, [r1 :32]
    70a0:	vmovl.u16	q13, d16
    70a4:	vmovl.u16	q8, d17
    70a8:	vmovl.u16	q9, d18
    70ac:	vand	q10, q10, q12
    70b0:	ldrb	r1, [r8, #2940]	; 0xb7c
    70b4:	ldrb	r3, [r8, #2942]	; 0xb7e
    70b8:	ldrb	lr, [r8, #2941]	; 0xb7d
    70bc:	vand	q11, q13, q12
    70c0:	vand	q8, q8, q12
    70c4:	vand	q9, q9, q12
    70c8:	vadd.i32	q8, q11, q8
    70cc:	vadd.i32	q8, q8, q10
    70d0:	vadd.i32	q8, q8, q9
    70d4:	orr	r6, r3, r1
    70d8:	and	r5, r3, r1
    70dc:	vext.8	q9, q8, q8, #8
    70e0:	and	r6, r6, lr
    70e4:	vadd.i32	q8, q8, q9
    70e8:	orr	r6, r6, r5
    70ec:	vdup.32	q9, d16[1]
    70f0:	strb	r6, [sp, #36]	; 0x24
    70f4:	vadd.i32	q8, q8, q9
    70f8:	ldrb	r6, [r8, #2943]	; 0xb7f
    70fc:	ldrb	r4, [r8, #2945]	; 0xb81
    7100:	ldrb	r5, [r8, #2944]	; 0xb80
    7104:	vmov.32	r9, d16[0]
    7108:	orr	r7, r4, r6
    710c:	and	r2, r4, r6
    7110:	and	r7, r7, r5
    7114:	orr	r2, r7, r2
    7118:	eor	r7, lr, r1
    711c:	eor	r1, r3, r1
    7120:	strb	r2, [sp, #37]	; 0x25
    7124:	eor	r2, r3, lr
    7128:	eor	r3, r4, r5
    712c:	orr	r2, r2, r7
    7130:	orr	r1, r2, r1
    7134:	eor	r2, r5, r6
    7138:	orr	r2, r3, r2
    713c:	eor	r3, r4, r6
    7140:	uxtab	r1, r9, r1
    7144:	orr	r2, r2, r3
    7148:	uxtab	r2, r1, r2
    714c:	mov	r1, #0
    7150:	cmp	r2, #3
    7154:	bhi	726c <try_clock@@Base+0x32c>
    7158:	ldr	r1, [pc, #304]	; 7290 <try_clock@@Base+0x350>
    715c:	and	r0, r0, #63	; 0x3f
    7160:	movw	r2, #1033	; 0x409
    7164:	add	r3, sp, #2
    7168:	movt	r2, #33026	; 0x8102
    716c:	add	r1, pc, r1
    7170:	ldrb	r5, [r1, r0]
    7174:	ldr	r0, [r8, #4]
    7178:	ldr	r4, [pc, #276]	; 7294 <try_clock@@Base+0x354>
    717c:	mov	r1, #0
    7180:	and	r0, r0, #1
    7184:	add	r4, pc, r4
    7188:	smmla	r7, r5, r2, r5
    718c:	cmp	r0, #0
    7190:	asr	r6, r7, #6
    7194:	add	r7, r6, r7, lsr #31
    7198:	ldrb	r6, [ip, r1]
    719c:	rsb	r7, r7, r7, lsl #7
    71a0:	sub	r5, r5, r7
    71a4:	ldrbne	r7, [r4, r5]
    71a8:	add	r5, r5, #1
    71ac:	eorne	r6, r7, r6
    71b0:	strb	r6, [r3, r1]
    71b4:	add	r1, r1, #1
    71b8:	cmp	r1, #18
    71bc:	bne	7188 <try_clock@@Base+0x248>
    71c0:	ldrb	r0, [sp, #13]
    71c4:	ldrb	r1, [sp, #12]
    71c8:	ldrb	r2, [sp, #3]
    71cc:	ldrb	r3, [sp, #4]
    71d0:	ldrb	r4, [sp, #5]
    71d4:	ldrb	r5, [sp, #6]
    71d8:	ldrb	r6, [sp, #7]
    71dc:	ldrb	r7, [sp, #8]
    71e0:	orr	r0, r1, r0, lsl #1
    71e4:	ldrb	r1, [sp, #14]
    71e8:	orr	r0, r0, r1, lsl #2
    71ec:	ldrb	r1, [sp, #15]
    71f0:	orr	r0, r0, r1, lsl #3
    71f4:	ldrb	r1, [sp, #16]
    71f8:	orr	r0, r0, r1, lsl #4
    71fc:	ldrb	r1, [sp, #17]
    7200:	orr	r0, r0, r1, lsl #5
    7204:	ldrb	r1, [sp, #18]
    7208:	orr	r0, r0, r1, lsl #6
    720c:	ldrb	r1, [sp, #19]
    7210:	orr	r0, r0, r1, lsl #7
    7214:	uxtb	r1, r0
    7218:	ldrb	r0, [sp, #2]
    721c:	orr	r0, r0, r2, lsl #1
    7220:	ldrb	r2, [sp, #9]
    7224:	orr	r0, r0, r3, lsl #2
    7228:	orr	r0, r0, r4, lsl #3
    722c:	orr	r0, r0, r5, lsl #4
    7230:	orr	r0, r0, r6, lsl #5
    7234:	orr	r0, r0, r7, lsl #6
    7238:	orr	r0, r0, r2, lsl #7
    723c:	ldrb	r2, [sp, #10]
    7240:	orr	r0, r0, r2, lsl #8
    7244:	ldrb	r2, [sp, #11]
    7248:	orr	r0, r0, r2, lsl #9
    724c:	uxth	r0, r0
    7250:	bl	7298 <try_clock@@Base+0x358>
    7254:	mov	r1, r0
    7258:	strb	r0, [r8, #9]
    725c:	orr	r0, r4, r5, lsl #1
    7260:	orr	r0, r0, r6, lsl #2
    7264:	orr	r0, r0, r7, lsl #3
    7268:	strb	r0, [r8, #18]
    726c:	mov	r0, r1
    7270:	sub	sp, fp, #24
    7274:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    7278:			; <UNDEFINED> instruction: 0xff03ff00
    727c:			; <UNDEFINED> instruction: 0xff09ff06
    7280:			; <UNDEFINED> instruction: 0xff05ff02
    7284:			; <UNDEFINED> instruction: 0xff0bff08
    7288:			; <UNDEFINED> instruction: 0xff04ff01
    728c:			; <UNDEFINED> instruction: 0xff0aff07
    7290:			; <UNDEFINED> instruction: 0x0000b7b6
    7294:	andeq	fp, r0, r4, lsr #12
    7298:	sxtb	r2, r1
    729c:	mov	r3, #2
    72a0:	cmn	r2, #1
    72a4:	ubfx	r2, r0, #9, #1
    72a8:	eorle	r1, r1, #101	; 0x65
    72ac:	eor	r2, r2, r1, lsr #7
    72b0:	orr	r2, r2, r1, lsl #1
    72b4:	lsl	r1, r1, #1
    72b8:	sxtb	r1, r1
    72bc:	cmn	r1, #1
    72c0:	eorle	r2, r2, #101	; 0x65
    72c4:	uxtb	r1, r2
    72c8:	ubfx	r2, r0, #8, #1
    72cc:	eor	r2, r2, r1, lsr #7
    72d0:	orr	r2, r2, r1, lsl #1
    72d4:	lsl	r1, r1, #1
    72d8:	sxtb	r1, r1
    72dc:	cmn	r1, #1
    72e0:	eorle	r2, r2, #101	; 0x65
    72e4:	uxtb	r1, r2
    72e8:	ubfx	r2, r0, #7, #1
    72ec:	eor	r2, r2, r1, lsr #7
    72f0:	orr	r2, r2, r1, lsl #1
    72f4:	lsl	r1, r1, #1
    72f8:	sxtb	r1, r1
    72fc:	cmn	r1, #1
    7300:	eorle	r2, r2, #101	; 0x65
    7304:	uxtb	r1, r2
    7308:	ubfx	r2, r0, #6, #1
    730c:	eor	r2, r2, r1, lsr #7
    7310:	orr	r2, r2, r1, lsl #1
    7314:	lsl	r1, r1, #1
    7318:	sxtb	r1, r1
    731c:	cmn	r1, #1
    7320:	eorle	r2, r2, #101	; 0x65
    7324:	uxtb	r1, r2
    7328:	ubfx	r2, r0, #5, #1
    732c:	eor	r2, r2, r1, lsr #7
    7330:	orr	r2, r2, r1, lsl #1
    7334:	lsl	r1, r1, #1
    7338:	sxtb	r1, r1
    733c:	cmn	r1, #1
    7340:	eorle	r2, r2, #101	; 0x65
    7344:	uxtb	r1, r2
    7348:	ubfx	r2, r0, #4, #1
    734c:	eor	r2, r2, r1, lsr #7
    7350:	orr	r2, r2, r1, lsl #1
    7354:	lsl	r1, r1, #1
    7358:	sxtb	r1, r1
    735c:	cmn	r1, #1
    7360:	eorle	r2, r2, #101	; 0x65
    7364:	uxtb	r1, r2
    7368:	ubfx	r2, r0, #3, #1
    736c:	eor	r2, r2, r1, lsr #7
    7370:	orr	r2, r2, r1, lsl #1
    7374:	lsl	r1, r1, #1
    7378:	sxtb	r1, r1
    737c:	cmn	r1, #1
    7380:	eorle	r2, r2, #101	; 0x65
    7384:	uxtb	r1, r2
    7388:	ubfx	r2, r0, #2, #1
    738c:	eor	r2, r2, r1, lsr #7
    7390:	orr	r2, r2, r1, lsl #1
    7394:	lsl	r1, r1, #1
    7398:	sxtb	r1, r1
    739c:	cmn	r1, #1
    73a0:	eorle	r2, r2, #101	; 0x65
    73a4:	uxtb	r1, r2
    73a8:	ubfx	r2, r0, #1, #1
    73ac:	and	r0, r0, #1
    73b0:	eor	r2, r2, r1, lsr #7
    73b4:	orr	r2, r2, r1, lsl #1
    73b8:	lsl	r1, r1, #1
    73bc:	sxtb	r1, r1
    73c0:	cmn	r1, #1
    73c4:	eorle	r2, r2, #101	; 0x65
    73c8:	uxtb	r1, r2
    73cc:	eor	r0, r0, r1, lsr #7
    73d0:	orr	r0, r0, r1, lsl #1
    73d4:	uxtb	r1, r0
    73d8:	lsl	r2, r0, #7
    73dc:	orr	r2, r2, r1, lsr #7
    73e0:	and	r3, r3, r1, lsr #5
    73e4:	orr	r2, r2, r3
    73e8:	mov	r3, #4
    73ec:	and	r3, r3, r1, lsr #3
    73f0:	orr	r2, r2, r3
    73f4:	mov	r3, #8
    73f8:	and	r1, r3, r1, lsr #1
    73fc:	orr	r1, r2, r1
    7400:	and	r2, r0, #8
    7404:	orr	r1, r1, r2, lsl #1
    7408:	and	r2, r0, #4
    740c:	and	r0, r0, #2
    7410:	orr	r1, r1, r2, lsl #3
    7414:	orr	r0, r1, r0, lsl #5
    7418:	uxtb	r0, r0
    741c:	bx	lr

00007420 <btbb_decode_header@@Base>:
    7420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7424:	add	fp, sp, #28
    7428:	sub	sp, sp, #36	; 0x24
    742c:	ldr	lr, [r0, #4]
    7430:	mov	r4, r0
    7434:	mov	r0, #0
    7438:	tst	lr, #16
    743c:	beq	77a8 <btbb_decode_header@@Base+0x388>
    7440:	movw	r1, #2892	; 0xb4c
    7444:	ldr	r3, [r4, #2900]	; 0xb54
    7448:	vldr	d18, [pc, #864]	; 77b0 <btbb_decode_header@@Base+0x390>
    744c:	vldr	d19, [pc, #868]	; 77b8 <btbb_decode_header@@Base+0x398>
    7450:	vldr	d20, [pc, #872]	; 77c0 <btbb_decode_header@@Base+0x3a0>
    7454:	add	ip, sp, #16
    7458:	add	r1, r4, r1
    745c:	vld1.8	{d16}, [r1]
    7460:	movw	r1, #2904	; 0xb58
    7464:	add	r1, r4, r1
    7468:	vmov.32	d17[0], r3
    746c:	vtbl.8	d21, {d16-d17}, d18
    7470:	vtbl.8	d22, {d16-d17}, d19
    7474:	vtbl.8	d16, {d16-d17}, d20
    7478:	vorr	d17, d22, d21
    747c:	vand	d23, d22, d21
    7480:	vand	d17, d17, d16
    7484:	vorr	d17, d17, d23
    7488:	vuzp.8	d17, d23
    748c:	vst1.32	{d17[0]}, [ip :32]
    7490:	vld1.8	{d24}, [r1]
    7494:	ldr	r1, [r4, #2912]	; 0xb60
    7498:	vmov.32	d25[0], r1
    749c:	add	r1, ip, #4
    74a0:	vtbl.8	d17, {d24-d25}, d18
    74a4:	vtbl.8	d23, {d24-d25}, d19
    74a8:	vtbl.8	d24, {d24-d25}, d20
    74ac:	vorr	d25, d23, d17
    74b0:	vand	d26, d23, d17
    74b4:	vand	d25, d25, d24
    74b8:	vorr	d25, d25, d26
    74bc:	vuzp.8	d25, d26
    74c0:	vst1.32	{d25[0]}, [r1 :32]
    74c4:	movw	r1, #2916	; 0xb64
    74c8:	add	r1, r4, r1
    74cc:	vld1.8	{d26}, [r1]
    74d0:	ldr	r1, [r4, #2924]	; 0xb6c
    74d4:	vmov.32	d27[0], r1
    74d8:	add	r1, ip, #8
    74dc:	vtbl.8	d25, {d26-d27}, d18
    74e0:	vtbl.8	d28, {d26-d27}, d19
    74e4:	vtbl.8	d26, {d26-d27}, d20
    74e8:	vorr	d27, d28, d25
    74ec:	vand	d29, d28, d25
    74f0:	vand	d27, d27, d26
    74f4:	vorr	d27, d27, d29
    74f8:	vuzp.8	d27, d29
    74fc:	vst1.32	{d27[0]}, [r1 :32]
    7500:	add	r1, r4, #2928	; 0xb70
    7504:	vld1.8	{d30}, [r1]
    7508:	ldr	r1, [r4, #2936]	; 0xb78
    750c:	vmov.32	d31[0], r1
    7510:	add	r1, ip, #12
    7514:	vtbl.8	d18, {d30-d31}, d18
    7518:	vtbl.8	d19, {d30-d31}, d19
    751c:	vtbl.8	d20, {d30-d31}, d20
    7520:	veor	d31, d24, d17
    7524:	veor	d24, d23, d24
    7528:	veor	d30, d16, d21
    752c:	veor	d16, d22, d16
    7530:	veor	d21, d22, d21
    7534:	veor	d17, d23, d17
    7538:	veor	d23, d26, d25
    753c:	vorr	d27, d19, d18
    7540:	vand	d29, d19, d18
    7544:	vorr	d22, d24, d31
    7548:	veor	d24, d28, d26
    754c:	vorr	d16, d16, d30
    7550:	vand	d27, d27, d20
    7554:	vorr	d16, d16, d21
    7558:	vorr	d17, d22, d17
    755c:	vorr	d22, d24, d23
    7560:	veor	d21, d28, d25
    7564:	veor	d23, d20, d18
    7568:	veor	d20, d19, d20
    756c:	veor	d18, d19, d18
    7570:	vmov.i32	q12, #255	; 0x000000ff
    7574:	vorr	d27, d27, d29
    7578:	vorr	d19, d20, d23
    757c:	vorr	d21, d22, d21
    7580:	vuzp.8	d27, d26
    7584:	vorr	d18, d19, d18
    7588:	vmovl.u16	q10, d21
    758c:	vst1.32	{d27[0]}, [r1 :32]
    7590:	vmovl.u16	q13, d16
    7594:	vmovl.u16	q8, d17
    7598:	vmovl.u16	q9, d18
    759c:	vand	q10, q10, q12
    75a0:	ldrb	r3, [r4, #2940]	; 0xb7c
    75a4:	ldrb	r7, [r4, #2942]	; 0xb7e
    75a8:	ldrb	r8, [r4, #2941]	; 0xb7d
    75ac:	vand	q11, q13, q12
    75b0:	vand	q8, q8, q12
    75b4:	vand	q9, q9, q12
    75b8:	vadd.i32	q8, q11, q8
    75bc:	vadd.i32	q8, q8, q10
    75c0:	vadd.i32	q8, q8, q9
    75c4:	orr	r1, r7, r3
    75c8:	and	r5, r7, r3
    75cc:	vext.8	q9, q8, q8, #8
    75d0:	eor	sl, r8, r3
    75d4:	eor	r3, r7, r3
    75d8:	and	r1, r1, r8
    75dc:	vadd.i32	q8, q8, q9
    75e0:	orr	r1, r1, r5
    75e4:	vdup.32	q9, d16[1]
    75e8:	strb	r1, [sp, #32]
    75ec:	vadd.i32	q8, q8, q9
    75f0:	ldrb	r1, [r4, #2943]	; 0xb7f
    75f4:	ldrb	r2, [r4, #2945]	; 0xb81
    75f8:	ldrb	r5, [r4, #2944]	; 0xb80
    75fc:	orr	r6, r2, r1
    7600:	and	r9, r6, r5
    7604:	and	r6, r2, r1
    7608:	orr	r6, r9, r6
    760c:	vmov.32	r9, d16[0]
    7610:	strb	r6, [sp, #33]	; 0x21
    7614:	eor	r6, r7, r8
    7618:	orr	r6, r6, sl
    761c:	orr	r3, r6, r3
    7620:	eor	r6, r5, r1
    7624:	eor	r5, r2, r5
    7628:	eor	r1, r2, r1
    762c:	orr	r5, r5, r6
    7630:	uxtab	r3, r9, r3
    7634:	orr	r1, r5, r1
    7638:	uxtab	r1, r3, r1
    763c:	cmp	r1, #3
    7640:	bhi	77a8 <btbb_decode_header@@Base+0x388>
    7644:	ldr	r0, [r4, #2816]	; 0xb00
    7648:	ldr	r1, [pc, #376]	; 77c8 <btbb_decode_header@@Base+0x3a8>
    764c:	and	r2, lr, #1
    7650:	ldr	lr, [pc, #372]	; 77cc <btbb_decode_header@@Base+0x3ac>
    7654:	movw	r7, #1033	; 0x409
    7658:	mov	r3, #0
    765c:	movt	r7, #33026	; 0x8102
    7660:	and	r0, r0, #63	; 0x3f
    7664:	add	r1, pc, r1
    7668:	add	lr, pc, lr
    766c:	ldrb	r5, [r1, r0]
    7670:	add	r0, r4, #22
    7674:	smmla	r1, r5, r7, r5
    7678:	cmp	r2, #0
    767c:	asr	r6, r1, #6
    7680:	add	r1, r6, r1, lsr #31
    7684:	rsb	r1, r1, r1, lsl #7
    7688:	sub	r5, r5, r1
    768c:	ldrb	r1, [ip, r3]
    7690:	ldrbne	r6, [lr, r5]
    7694:	add	r5, r5, #1
    7698:	eorne	r1, r6, r1
    769c:	strb	r1, [r0, r3]
    76a0:	add	r3, r3, #1
    76a4:	cmp	r3, #18
    76a8:	bne	7674 <btbb_decode_header@@Base+0x254>
    76ac:	ldrb	r0, [r4, #22]
    76b0:	ldrb	r1, [r4, #23]
    76b4:	ldrb	r3, [r4, #24]
    76b8:	ldrb	r2, [r4, #25]
    76bc:	ldrb	r5, [r4, #27]
    76c0:	ldrb	r6, [r4, #28]
    76c4:	ldrb	r7, [r4, #29]
    76c8:	ldrb	r8, [r4, #30]
    76cc:	ldrb	r9, [r4, #31]
    76d0:	orr	r0, r0, r1, lsl #1
    76d4:	ldrb	r1, [r4, #26]
    76d8:	str	r2, [sp, #12]
    76dc:	str	r3, [sp, #8]
    76e0:	orr	r0, r0, r3, lsl #2
    76e4:	orr	r0, r0, r2, lsl #3
    76e8:	ldrb	r2, [r4, #32]
    76ec:	orr	r0, r0, r1, lsl #4
    76f0:	str	r1, [sp, #4]
    76f4:	ldrb	r1, [r4, #33]	; 0x21
    76f8:	orr	r0, r0, r5, lsl #5
    76fc:	orr	r0, r0, r6, lsl #6
    7700:	orr	r0, r0, r7, lsl #7
    7704:	orr	r1, r2, r1, lsl #1
    7708:	ldrb	r2, [r4, #34]	; 0x22
    770c:	orr	r0, r0, r8, lsl #8
    7710:	orr	r0, r0, r9, lsl #9
    7714:	uxth	r0, r0
    7718:	orr	r1, r1, r2, lsl #2
    771c:	ldrb	r2, [r4, #35]	; 0x23
    7720:	orr	r1, r1, r2, lsl #3
    7724:	ldrb	r2, [r4, #36]	; 0x24
    7728:	orr	r1, r1, r2, lsl #4
    772c:	ldrb	r2, [r4, #37]	; 0x25
    7730:	orr	r1, r1, r2, lsl #5
    7734:	ldrb	r2, [r4, #38]	; 0x26
    7738:	orr	r1, r1, r2, lsl #6
    773c:	ldrb	r2, [r4, #39]	; 0x27
    7740:	orr	sl, r1, r2, lsl #7
    7744:	uxtb	r1, sl
    7748:	bl	7298 <try_clock@@Base+0x358>
    774c:	ldrb	r2, [r4, #9]
    7750:	mov	r1, r0
    7754:	mov	r0, #0
    7758:	cmp	r1, r2
    775c:	bne	77a8 <btbb_decode_header@@Base+0x388>
    7760:	orr	r1, r7, r8, lsl #1
    7764:	strb	sl, [r4, #21]
    7768:	ldr	r2, [sp, #4]
    776c:	ldr	r0, [sp, #8]
    7770:	orr	r1, r1, r9, lsl #2
    7774:	strb	r1, [r4, #20]
    7778:	ldr	r1, [sp, #12]
    777c:	lsl	r0, r0, #2
    7780:	orr	r1, r1, r2, lsl #1
    7784:	orr	r1, r1, r5, lsl #2
    7788:	orr	r1, r1, r6, lsl #3
    778c:	strb	r1, [r4, #18]
    7790:	ldrb	r1, [r4, #22]
    7794:	ldrb	r2, [r4, #23]
    7798:	orr	r1, r1, r2, lsl #1
    779c:	orr	r0, r1, r0
    77a0:	strb	r0, [r4, #19]
    77a4:	mov	r0, #1
    77a8:	sub	sp, fp, #28
    77ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77b0:			; <UNDEFINED> instruction: 0xff03ff00
    77b4:			; <UNDEFINED> instruction: 0xff09ff06
    77b8:			; <UNDEFINED> instruction: 0xff05ff02
    77bc:			; <UNDEFINED> instruction: 0xff0bff08
    77c0:			; <UNDEFINED> instruction: 0xff04ff01
    77c4:			; <UNDEFINED> instruction: 0xff0aff07
    77c8:			; <UNDEFINED> instruction: 0x0000b2be
    77cc:	andeq	fp, r0, r0, asr #2

000077d0 <btbb_decode_payload@@Base>:
    77d0:	push	{r4, sl, fp, lr}
    77d4:	add	fp, sp, #8
    77d8:	mov	r4, r0
    77dc:	mov	r0, #0
    77e0:	str	r0, [r4, #40]	; 0x28
    77e4:	ldrb	r1, [r4, #18]
    77e8:	cmp	r1, #15
    77ec:	bhi	78bc <btbb_decode_payload@@Base+0xec>
    77f0:	add	r0, pc, #4
    77f4:	ldr	r1, [r0, r1, lsl #2]
    77f8:	add	pc, r0, r1
    77fc:	andeq	r0, r0, r0, rrx
    7800:	andeq	r0, r0, r0, rrx
    7804:	andeq	r0, r0, r0, ror r0
    7808:	andeq	r0, r0, r0, asr #32
    780c:	andeq	r0, r0, r0, asr r0
    7810:	muleq	r0, r4, r0
    7814:	muleq	r0, r4, r0
    7818:	andeq	r0, r0, r0, lsl #1
    781c:	andeq	r0, r0, r0, asr #32
    7820:	andeq	r0, r0, r0, asr r0
    7824:	andeq	r0, r0, r0, asr #32
    7828:	andeq	r0, r0, r0, asr r0
    782c:	strheq	r0, [r0], -r4
    7830:	andeq	r0, r0, r4, lsr #1
    7834:	andeq	r0, r0, r0, asr #32
    7838:	andeq	r0, r0, r0, asr r0
    783c:	ldr	r0, [r4, #2816]	; 0xb00
    7840:	mov	r1, r4
    7844:	bl	45c0 <DM@plt>
    7848:	b	78bc <btbb_decode_payload@@Base+0xec>
    784c:	ldr	r0, [r4, #2816]	; 0xb00
    7850:	mov	r1, r4
    7854:	bl	4788 <DH@plt>
    7858:	b	78bc <btbb_decode_payload@@Base+0xec>
    785c:	mov	r0, #0
    7860:	str	r0, [r4, #64]	; 0x40
    7864:	mov	r0, #1
    7868:	b	78bc <btbb_decode_payload@@Base+0xec>
    786c:	ldr	r0, [r4, #2816]	; 0xb00
    7870:	mov	r1, r4
    7874:	bl	4584 <fhs@plt>
    7878:	b	78bc <btbb_decode_payload@@Base+0xec>
    787c:	ldr	r0, [r4, #2816]	; 0xb00
    7880:	mov	r1, r4
    7884:	bl	471c <EV3@plt>
    7888:	cmp	r0, #1
    788c:	bgt	78bc <btbb_decode_payload@@Base+0xec>
    7890:	ldr	r0, [r4, #2816]	; 0xb00
    7894:	mov	r1, r4
    7898:	bl	45cc <HV@plt>
    789c:	b	78bc <btbb_decode_payload@@Base+0xec>
    78a0:	ldr	r0, [r4, #2816]	; 0xb00
    78a4:	mov	r1, r4
    78a8:	bl	4770 <EV5@plt>
    78ac:	b	78bc <btbb_decode_payload@@Base+0xec>
    78b0:	ldr	r0, [r4, #2816]	; 0xb00
    78b4:	mov	r1, r4
    78b8:	bl	4590 <EV4@plt>
    78bc:	ldr	r1, [r4, #4]
    78c0:	orr	r1, r1, #128	; 0x80
    78c4:	str	r1, [r4, #4]
    78c8:	pop	{r4, sl, fp, pc}

000078cc <btbb_decode@@Base>:
    78cc:	push	{r4, r5, fp, lr}
    78d0:	add	fp, sp, #8
    78d4:	mov	r4, r0
    78d8:	ldr	r0, [r0, #4]
    78dc:	bic	r0, r0, #128	; 0x80
    78e0:	str	r0, [r4, #4]
    78e4:	mov	r0, r4
    78e8:	bl	4698 <btbb_decode_header@plt>
    78ec:	cmp	r0, #0
    78f0:	moveq	r5, #0
    78f4:	moveq	r0, r5
    78f8:	popeq	{r4, r5, fp, pc}
    78fc:	mov	r0, r4
    7900:	bl	47a0 <btbb_decode_payload@plt>
    7904:	mov	r5, r0
    7908:	cmp	r0, #1
    790c:	blt	7930 <btbb_decode@@Base+0x64>
    7910:	ldr	r0, [r4, #2816]	; 0xb00
    7914:	mov	r2, r5
    7918:	and	r1, r0, #63	; 0x3f
    791c:	ldr	r0, [pc, #20]	; 7938 <btbb_decode@@Base+0x6c>
    7920:	add	r0, pc, r0
    7924:	bl	4500 <printf@plt>
    7928:	mov	r0, r4
    792c:	bl	47c4 <btbb_print_packet@plt>
    7930:	mov	r0, r5
    7934:	pop	{r4, r5, fp, pc}
    7938:	andeq	sl, r0, pc, lsl #31

0000793c <btbb_print_packet@@Base>:
    793c:	push	{r4, r5, r6, r7, fp, lr}
    7940:	add	fp, sp, #16
    7944:	mov	r4, r0
    7948:	ldrb	r0, [r0, #4]
    794c:	tst	r0, #128	; 0x80
    7950:	bne	7958 <btbb_print_packet@@Base+0x1c>
    7954:	pop	{r4, r5, r6, r7, fp, pc}
    7958:	ldrb	r0, [r4, #18]
    795c:	ldr	r1, [pc, #256]	; 7a64 <btbb_print_packet@@Base+0x128>
    7960:	add	r1, pc, r1
    7964:	ldr	r1, [r1, r0, lsl #2]
    7968:	ldr	r0, [pc, #248]	; 7a68 <btbb_print_packet@@Base+0x12c>
    796c:	add	r0, pc, r0
    7970:	bl	4500 <printf@plt>
    7974:	ldr	r0, [r4, #40]	; 0x28
    7978:	cmp	r0, #0
    797c:	ble	79c8 <btbb_print_packet@@Base+0x8c>
    7980:	ldrb	r1, [r4, #19]
    7984:	ldr	r0, [pc, #224]	; 7a6c <btbb_print_packet@@Base+0x130>
    7988:	add	r0, pc, r0
    798c:	bl	4500 <printf@plt>
    7990:	ldrb	r1, [r4, #60]	; 0x3c
    7994:	ldr	r0, [pc, #212]	; 7a70 <btbb_print_packet@@Base+0x134>
    7998:	add	r0, pc, r0
    799c:	bl	4500 <printf@plt>
    79a0:	ldrb	r1, [r4, #61]	; 0x3d
    79a4:	ldr	r0, [pc, #200]	; 7a74 <btbb_print_packet@@Base+0x138>
    79a8:	add	r0, pc, r0
    79ac:	bl	4500 <printf@plt>
    79b0:	mov	r5, r4
    79b4:	ldr	r1, [r5, #64]!	; 0x40
    79b8:	ldr	r0, [pc, #184]	; 7a78 <btbb_print_packet@@Base+0x13c>
    79bc:	add	r0, pc, r0
    79c0:	bl	4500 <printf@plt>
    79c4:	b	79cc <btbb_print_packet@@Base+0x90>
    79c8:	add	r5, r4, #64	; 0x40
    79cc:	ldr	r0, [r5]
    79d0:	cmp	r0, #0
    79d4:	popeq	{r4, r5, r6, r7, fp, pc}
    79d8:	ldr	r0, [pc, #156]	; 7a7c <btbb_print_packet@@Base+0x140>
    79dc:	add	r0, pc, r0
    79e0:	bl	4500 <printf@plt>
    79e4:	ldr	r0, [r5]
    79e8:	cmp	r0, #1
    79ec:	blt	7a58 <btbb_print_packet@@Base+0x11c>
    79f0:	ldr	r7, [pc, #136]	; 7a80 <btbb_print_packet@@Base+0x144>
    79f4:	mov	r6, #0
    79f8:	add	r7, pc, r7
    79fc:	add	r0, r4, r6, lsl #3
    7a00:	ldrb	r1, [r0, #68]	; 0x44
    7a04:	ldrb	r2, [r0, #69]	; 0x45
    7a08:	ldrb	r3, [r0, #70]	; 0x46
    7a0c:	ldrb	r5, [r0, #71]	; 0x47
    7a10:	orr	r1, r1, r2, lsl #1
    7a14:	ldrb	r2, [r0, #72]	; 0x48
    7a18:	orr	r1, r1, r3, lsl #2
    7a1c:	orr	r1, r1, r5, lsl #3
    7a20:	orr	r1, r1, r2, lsl #4
    7a24:	ldrb	r2, [r0, #73]	; 0x49
    7a28:	orr	r1, r1, r2, lsl #5
    7a2c:	ldrb	r2, [r0, #74]	; 0x4a
    7a30:	ldrb	r0, [r0, #75]	; 0x4b
    7a34:	orr	r1, r1, r2, lsl #6
    7a38:	orr	r0, r1, r0, lsl #7
    7a3c:	uxtb	r1, r0
    7a40:	mov	r0, r7
    7a44:	bl	4500 <printf@plt>
    7a48:	ldr	r0, [r4, #64]	; 0x40
    7a4c:	add	r6, r6, #1
    7a50:	cmp	r6, r0
    7a54:	blt	79fc <btbb_print_packet@@Base+0xc0>
    7a58:	mov	r0, #10
    7a5c:	pop	{r4, r5, r6, r7, fp, lr}
    7a60:	b	4704 <putchar@plt>
    7a64:	andeq	r1, r2, r8, lsl #9
    7a68:	andeq	sl, r0, sp, ror #30
    7a6c:	andeq	sl, r0, sp, asr pc
    7a70:	andeq	sl, r0, ip, asr pc
    7a74:	andeq	sl, r0, r8, asr pc
    7a78:	andeq	sl, r0, r0, asr pc
    7a7c:	andeq	fp, r0, r2, asr #11
    7a80:	andeq	fp, r0, pc, lsr #16

00007a84 <tun_format@@Base>:
    7a84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    7a88:	add	fp, sp, #24
    7a8c:	ldr	r8, [r0, #64]	; 0x40
    7a90:	mov	r9, r0
    7a94:	add	r0, r8, #9
    7a98:	bl	4638 <malloc@plt>
    7a9c:	ldr	r1, [r9, #2816]	; 0xb00
    7aa0:	cmp	r8, #1
    7aa4:	lsr	r2, r1, #8
    7aa8:	strb	r1, [r0]
    7aac:	strb	r2, [r0, #1]
    7ab0:	lsr	r2, r1, #16
    7ab4:	lsr	r1, r1, #24
    7ab8:	strb	r2, [r0, #2]
    7abc:	strb	r1, [r0, #3]
    7ac0:	ldrb	r1, [r9, #8]
    7ac4:	strb	r1, [r0, #4]
    7ac8:	ldr	r1, [r9, #4]
    7acc:	and	r2, r1, #2
    7ad0:	ubfx	r1, r1, #5, #1
    7ad4:	orr	r1, r1, r2
    7ad8:	strb	r1, [r0, #5]
    7adc:	ldrb	ip, [r9, #22]
    7ae0:	ldrb	r2, [r9, #23]
    7ae4:	ldrb	r3, [r9, #24]
    7ae8:	ldrb	r1, [r9, #25]
    7aec:	orr	r2, ip, r2, lsl #1
    7af0:	orr	r2, r2, r3, lsl #2
    7af4:	orr	r1, r2, r1, lsl #3
    7af8:	ldrb	r2, [r9, #26]
    7afc:	orr	r1, r1, r2, lsl #4
    7b00:	ldrb	r2, [r9, #27]
    7b04:	orr	r1, r1, r2, lsl #5
    7b08:	ldrb	r2, [r9, #28]
    7b0c:	orr	r1, r1, r2, lsl #6
    7b10:	strb	r1, [r0, #6]
    7b14:	ldrb	r1, [r9, #29]
    7b18:	ldrb	r2, [r9, #30]
    7b1c:	ldrb	r3, [r9, #31]
    7b20:	orr	r1, r1, r2, lsl #1
    7b24:	orr	r1, r1, r3, lsl #2
    7b28:	strb	r1, [r0, #7]
    7b2c:	ldrb	ip, [r9, #32]
    7b30:	ldrb	r2, [r9, #33]	; 0x21
    7b34:	ldrb	r3, [r9, #34]	; 0x22
    7b38:	ldrb	r1, [r9, #35]	; 0x23
    7b3c:	orr	r2, ip, r2, lsl #1
    7b40:	orr	r2, r2, r3, lsl #2
    7b44:	orr	r1, r2, r1, lsl #3
    7b48:	ldrb	r2, [r9, #36]	; 0x24
    7b4c:	orr	r1, r1, r2, lsl #4
    7b50:	ldrb	r2, [r9, #37]	; 0x25
    7b54:	orr	r1, r1, r2, lsl #5
    7b58:	ldrb	r2, [r9, #38]	; 0x26
    7b5c:	orr	r1, r1, r2, lsl #6
    7b60:	ldrb	r2, [r9, #39]	; 0x27
    7b64:	orr	r1, r1, r2, lsl #7
    7b68:	strb	r1, [r0, #8]
    7b6c:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
    7b70:	add	r1, r0, #9
    7b74:	mov	r2, #0
    7b78:	add	r3, r9, r2, lsl #3
    7b7c:	ldrb	r5, [r3, #68]	; 0x44
    7b80:	ldrb	r6, [r3, #69]	; 0x45
    7b84:	ldrb	r7, [r3, #70]	; 0x46
    7b88:	ldrb	r4, [r3, #71]	; 0x47
    7b8c:	orr	r6, r5, r6, lsl #1
    7b90:	orr	r7, r6, r7, lsl #2
    7b94:	ldrb	r6, [r3, #72]	; 0x48
    7b98:	orr	r7, r7, r4, lsl #3
    7b9c:	orr	r7, r7, r6, lsl #4
    7ba0:	ldrb	r6, [r3, #73]	; 0x49
    7ba4:	orr	r7, r7, r6, lsl #5
    7ba8:	ldrb	r6, [r3, #74]	; 0x4a
    7bac:	ldrb	r3, [r3, #75]	; 0x4b
    7bb0:	orr	r7, r7, r6, lsl #6
    7bb4:	orr	r3, r7, r3, lsl #7
    7bb8:	strb	r3, [r1, r2]
    7bbc:	add	r2, r2, #1
    7bc0:	cmp	r8, r2
    7bc4:	bne	7b78 <tun_format@@Base+0xf4>
    7bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00007bcc <btbb_header_present@@Base>:
    7bcc:	movw	r1, #2822	; 0xb06
    7bd0:	ldrh	r2, [r0, r1]
    7bd4:	mov	r1, #0
    7bd8:	cmp	r2, #122	; 0x7a
    7bdc:	bcc	7c68 <btbb_header_present@@Base+0x9c>
    7be0:	push	{r4, sl, fp, lr}
    7be4:	add	fp, sp, #8
    7be8:	ldrb	r1, [r0, #2887]	; 0xb47
    7bec:	ldrb	ip, [r0, #2888]	; 0xb48
    7bf0:	ldrb	lr, [r0, #2889]	; 0xb49
    7bf4:	ldrb	r2, [r0, #2890]	; 0xb4a
    7bf8:	clz	r3, r1
    7bfc:	lsr	r3, r3, #5
    7c00:	eor	r4, r2, r3
    7c04:	eor	r3, ip, r3
    7c08:	eor	r2, lr, r1
    7c0c:	uxtab	r2, r3, r2
    7c10:	ldrb	r3, [r0, #2891]	; 0xb4b
    7c14:	add	r2, r2, r4
    7c18:	eor	r1, r3, r1
    7c1c:	uxtab	r2, r2, r1
    7c20:	mov	r1, #0
    7c24:	add	r3, r0, r1
    7c28:	add	r1, r1, #3
    7c2c:	ldrb	ip, [r3, #2892]	; 0xb4c
    7c30:	ldrb	r4, [r3, #2893]	; 0xb4d
    7c34:	ldrb	r3, [r3, #2894]	; 0xb4e
    7c38:	cmp	r1, #54	; 0x36
    7c3c:	eor	lr, r4, ip
    7c40:	eor	r4, r3, r4
    7c44:	eor	r3, r3, ip
    7c48:	orr	r4, r4, lr
    7c4c:	orr	r3, r4, r3
    7c50:	uxtab	r2, r2, r3
    7c54:	bcc	7c24 <btbb_header_present@@Base+0x58>
    7c58:	mov	r1, #0
    7c5c:	cmp	r2, #5
    7c60:	movwlt	r1, #1
    7c64:	pop	{r4, sl, fp, lr}
    7c68:	mov	r0, r1
    7c6c:	bx	lr

00007c70 <lap_from_fhs@@Base>:
    7c70:	ldrb	ip, [r0, #102]	; 0x66
    7c74:	ldrb	r2, [r0, #103]	; 0x67
    7c78:	ldrb	r3, [r0, #104]	; 0x68
    7c7c:	ldrb	r1, [r0, #105]	; 0x69
    7c80:	orr	r2, ip, r2, lsl #1
    7c84:	orr	r2, r2, r3, lsl #2
    7c88:	orr	r1, r2, r1, lsl #3
    7c8c:	ldrb	r2, [r0, #106]	; 0x6a
    7c90:	orr	r1, r1, r2, lsl #4
    7c94:	ldrb	r2, [r0, #107]	; 0x6b
    7c98:	orr	r1, r1, r2, lsl #5
    7c9c:	ldrb	r2, [r0, #108]	; 0x6c
    7ca0:	orr	r1, r1, r2, lsl #6
    7ca4:	ldrb	r2, [r0, #109]	; 0x6d
    7ca8:	orr	r1, r1, r2, lsl #7
    7cac:	ldrb	r2, [r0, #110]	; 0x6e
    7cb0:	orr	r1, r1, r2, lsl #8
    7cb4:	ldrb	r2, [r0, #111]	; 0x6f
    7cb8:	orr	r1, r1, r2, lsl #9
    7cbc:	ldrb	r2, [r0, #112]	; 0x70
    7cc0:	orr	r1, r1, r2, lsl #10
    7cc4:	ldrb	r2, [r0, #113]	; 0x71
    7cc8:	orr	r1, r1, r2, lsl #11
    7ccc:	ldrb	r2, [r0, #114]	; 0x72
    7cd0:	orr	r1, r1, r2, lsl #12
    7cd4:	ldrb	r2, [r0, #115]	; 0x73
    7cd8:	orr	r1, r1, r2, lsl #13
    7cdc:	ldrb	r2, [r0, #116]	; 0x74
    7ce0:	orr	r1, r1, r2, lsl #14
    7ce4:	ldrb	r2, [r0, #117]	; 0x75
    7ce8:	orr	r1, r1, r2, lsl #15
    7cec:	ldrb	r2, [r0, #118]	; 0x76
    7cf0:	orr	r1, r1, r2, lsl #16
    7cf4:	ldrb	r2, [r0, #119]	; 0x77
    7cf8:	orr	r1, r1, r2, lsl #17
    7cfc:	ldrb	r2, [r0, #120]	; 0x78
    7d00:	orr	r1, r1, r2, lsl #18
    7d04:	ldrb	r2, [r0, #121]	; 0x79
    7d08:	orr	r1, r1, r2, lsl #19
    7d0c:	ldrb	r2, [r0, #122]	; 0x7a
    7d10:	orr	r1, r1, r2, lsl #20
    7d14:	ldrb	r2, [r0, #123]	; 0x7b
    7d18:	orr	r1, r1, r2, lsl #21
    7d1c:	ldrb	r2, [r0, #124]	; 0x7c
    7d20:	ldrb	r0, [r0, #125]	; 0x7d
    7d24:	orr	r1, r1, r2, lsl #22
    7d28:	orr	r0, r1, r0, lsl #23
    7d2c:	bx	lr

00007d30 <uap_from_fhs@@Base>:
    7d30:	ldrb	ip, [r0, #132]	; 0x84
    7d34:	ldrb	r2, [r0, #133]	; 0x85
    7d38:	ldrb	r3, [r0, #134]	; 0x86
    7d3c:	ldrb	r1, [r0, #135]	; 0x87
    7d40:	orr	r2, ip, r2, lsl #1
    7d44:	orr	r2, r2, r3, lsl #2
    7d48:	orr	r1, r2, r1, lsl #3
    7d4c:	ldrb	r2, [r0, #136]	; 0x88
    7d50:	orr	r1, r1, r2, lsl #4
    7d54:	ldrb	r2, [r0, #137]	; 0x89
    7d58:	orr	r1, r1, r2, lsl #5
    7d5c:	ldrb	r2, [r0, #138]	; 0x8a
    7d60:	ldrb	r0, [r0, #139]	; 0x8b
    7d64:	orr	r1, r1, r2, lsl #6
    7d68:	orr	r0, r1, r0, lsl #7
    7d6c:	uxtb	r0, r0
    7d70:	bx	lr

00007d74 <nap_from_fhs@@Base>:
    7d74:	ldrb	ip, [r0, #140]	; 0x8c
    7d78:	ldrb	r2, [r0, #141]	; 0x8d
    7d7c:	ldrb	r3, [r0, #142]	; 0x8e
    7d80:	ldrb	r1, [r0, #143]	; 0x8f
    7d84:	orr	r2, ip, r2, lsl #1
    7d88:	orr	r2, r2, r3, lsl #2
    7d8c:	orr	r1, r2, r1, lsl #3
    7d90:	ldrb	r2, [r0, #144]	; 0x90
    7d94:	orr	r1, r1, r2, lsl #4
    7d98:	ldrb	r2, [r0, #145]	; 0x91
    7d9c:	orr	r1, r1, r2, lsl #5
    7da0:	ldrb	r2, [r0, #146]	; 0x92
    7da4:	orr	r1, r1, r2, lsl #6
    7da8:	ldrb	r2, [r0, #147]	; 0x93
    7dac:	orr	r1, r1, r2, lsl #7
    7db0:	ldrb	r2, [r0, #148]	; 0x94
    7db4:	orr	r1, r1, r2, lsl #8
    7db8:	ldrb	r2, [r0, #149]	; 0x95
    7dbc:	orr	r1, r1, r2, lsl #9
    7dc0:	ldrb	r2, [r0, #150]	; 0x96
    7dc4:	orr	r1, r1, r2, lsl #10
    7dc8:	ldrb	r2, [r0, #151]	; 0x97
    7dcc:	orr	r1, r1, r2, lsl #11
    7dd0:	ldrb	r2, [r0, #152]	; 0x98
    7dd4:	orr	r1, r1, r2, lsl #12
    7dd8:	ldrb	r2, [r0, #153]	; 0x99
    7ddc:	orr	r1, r1, r2, lsl #13
    7de0:	ldrb	r2, [r0, #154]	; 0x9a
    7de4:	ldrb	r0, [r0, #155]	; 0x9b
    7de8:	orr	r1, r1, r2, lsl #14
    7dec:	orr	r0, r1, r0, lsl #15
    7df0:	uxth	r0, r0
    7df4:	bx	lr

00007df8 <clock_from_fhs@@Base>:
    7df8:	ldrb	ip, [r0, #183]	; 0xb7
    7dfc:	ldrb	r2, [r0, #184]	; 0xb8
    7e00:	ldrb	r3, [r0, #185]	; 0xb9
    7e04:	ldrb	r1, [r0, #186]	; 0xba
    7e08:	orr	r2, ip, r2, lsl #1
    7e0c:	orr	r2, r2, r3, lsl #2
    7e10:	orr	r1, r2, r1, lsl #3
    7e14:	ldrb	r2, [r0, #187]	; 0xbb
    7e18:	orr	r1, r1, r2, lsl #4
    7e1c:	ldrb	r2, [r0, #188]	; 0xbc
    7e20:	orr	r1, r1, r2, lsl #5
    7e24:	ldrb	r2, [r0, #189]	; 0xbd
    7e28:	orr	r1, r1, r2, lsl #6
    7e2c:	ldrb	r2, [r0, #190]	; 0xbe
    7e30:	orr	r1, r1, r2, lsl #7
    7e34:	ldrb	r2, [r0, #191]	; 0xbf
    7e38:	orr	r1, r1, r2, lsl #8
    7e3c:	ldrb	r2, [r0, #192]	; 0xc0
    7e40:	orr	r1, r1, r2, lsl #9
    7e44:	ldrb	r2, [r0, #193]	; 0xc1
    7e48:	orr	r1, r1, r2, lsl #10
    7e4c:	ldrb	r2, [r0, #194]	; 0xc2
    7e50:	orr	r1, r1, r2, lsl #11
    7e54:	ldrb	r2, [r0, #195]	; 0xc3
    7e58:	orr	r1, r1, r2, lsl #12
    7e5c:	ldrb	r2, [r0, #196]	; 0xc4
    7e60:	orr	r1, r1, r2, lsl #13
    7e64:	ldrb	r2, [r0, #197]	; 0xc5
    7e68:	orr	r1, r1, r2, lsl #14
    7e6c:	ldrb	r2, [r0, #198]	; 0xc6
    7e70:	orr	r1, r1, r2, lsl #15
    7e74:	ldrb	r2, [r0, #199]	; 0xc7
    7e78:	orr	r1, r1, r2, lsl #16
    7e7c:	ldrb	r2, [r0, #200]	; 0xc8
    7e80:	orr	r1, r1, r2, lsl #17
    7e84:	ldrb	r2, [r0, #201]	; 0xc9
    7e88:	orr	r1, r1, r2, lsl #18
    7e8c:	ldrb	r2, [r0, #202]	; 0xca
    7e90:	orr	r1, r1, r2, lsl #19
    7e94:	ldrb	r2, [r0, #203]	; 0xcb
    7e98:	orr	r1, r1, r2, lsl #20
    7e9c:	ldrb	r2, [r0, #204]	; 0xcc
    7ea0:	orr	r1, r1, r2, lsl #21
    7ea4:	ldrb	r2, [r0, #205]	; 0xcd
    7ea8:	orr	r1, r1, r2, lsl #22
    7eac:	ldrb	r2, [r0, #206]	; 0xce
    7eb0:	orr	r1, r1, r2, lsl #23
    7eb4:	ldrb	r2, [r0, #207]	; 0xcf
    7eb8:	ldrb	r0, [r0, #208]	; 0xd0
    7ebc:	orr	r1, r1, r2, lsl #24
    7ec0:	orr	r0, r1, r0, lsl #25
    7ec4:	bx	lr
    7ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ecc:	add	fp, sp, #28
    7ed0:	sub	sp, sp, #4
    7ed4:	vpush	{d8-d9}
    7ed8:	sub	sp, sp, #24
    7edc:	cmp	r2, #57	; 0x39
    7ee0:	str	r1, [sp, #16]
    7ee4:	bgt	835c <clock_from_fhs@@Base+0x564>
    7ee8:	sub	r6, r3, #1
    7eec:	mov	r8, r0
    7ef0:	mov	r9, #0
    7ef4:	vmov.i32	q4, #0	; 0x00000000
    7ef8:	str	r0, [sp, #12]
    7efc:	str	r6, [sp, #8]
    7f00:	mov	r7, r2
    7f04:	mov	r2, #1
    7f08:	sub	r1, r7, #32
    7f0c:	lsl	r0, r2, r7
    7f10:	str	r7, [sp, #20]
    7f14:	cmp	r1, #0
    7f18:	movwge	r0, #0
    7f1c:	orr	r4, r0, r8
    7f20:	rsb	r0, r7, #32
    7f24:	lsr	r0, r2, r0
    7f28:	lslge	r0, r2, r1
    7f2c:	ldr	r1, [sp, #16]
    7f30:	cmp	r6, #0
    7f34:	orr	r5, r0, r1
    7f38:	beq	7f54 <clock_from_fhs@@Base+0x15c>
    7f3c:	add	r2, r7, #1
    7f40:	mov	r0, r4
    7f44:	mov	r1, r5
    7f48:	mov	r3, r6
    7f4c:	bl	7ec8 <clock_from_fhs@@Base+0xd0>
    7f50:	b	834c <clock_from_fhs@@Base+0x554>
    7f54:	mov	r0, #48	; 0x30
    7f58:	bl	4638 <malloc@plt>
    7f5c:	mov	r8, r0
    7f60:	str	r5, [r0, #12]
    7f64:	str	r9, [r0, #24]
    7f68:	mov	r0, #8
    7f6c:	movw	ip, #2040	; 0x7f8
    7f70:	str	r0, [r8, #40]	; 0x28
    7f74:	movw	r0, #29288	; 0x7268
    7f78:	add	lr, r8, #16
    7f7c:	ldr	r2, [pc, #1008]	; 8374 <clock_from_fhs@@Base+0x57c>
    7f80:	ldr	r6, [pc, #1008]	; 8378 <clock_from_fhs@@Base+0x580>
    7f84:	movt	r0, #52347	; 0xcc7b
    7f88:	str	r4, [r8, #8]
    7f8c:	eor	r0, r5, r0
    7f90:	ldr	r5, [pc, #996]	; 837c <clock_from_fhs@@Base+0x584>
    7f94:	uxtb	r3, r0
    7f98:	and	r1, ip, r0, lsr #5
    7f9c:	add	r6, pc, r6
    7fa0:	add	r2, pc, r2
    7fa4:	ldr	r3, [r6, r3, lsl #3]!
    7fa8:	ldr	r1, [r2, r1]!
    7fac:	add	r5, pc, r5
    7fb0:	eor	r3, r3, r4
    7fb4:	eor	r1, r3, r1
    7fb8:	and	r3, ip, r0, lsr #13
    7fbc:	and	r0, ip, r0, lsr #21
    7fc0:	ldr	r3, [r5, r3]!
    7fc4:	eor	r1, r1, r3
    7fc8:	ldr	r3, [pc, #944]	; 8380 <clock_from_fhs@@Base+0x588>
    7fcc:	add	r3, pc, r3
    7fd0:	ldr	r0, [r3, r0]!
    7fd4:	eor	r0, r1, r0
    7fd8:	movw	r1, #19995	; 0x4e1b
    7fdc:	movt	r1, #65377	; 0xff61
    7fe0:	eor	r0, r0, r1
    7fe4:	ldr	r1, [r6, #4]
    7fe8:	str	r0, [r8]
    7fec:	ldr	r0, [r2, #4]
    7ff0:	eor	r0, r1, r0
    7ff4:	ldr	r1, [r5, #4]
    7ff8:	eor	r0, r0, r1
    7ffc:	ldr	r1, [r3, #4]
    8000:	eor	r0, r0, r1
    8004:	str	r0, [r8, #4]
    8008:	str	r8, [r8, #36]	; 0x24
    800c:	ldr	r0, [pc, #880]	; 8384 <clock_from_fhs@@Base+0x58c>
    8010:	ldr	r0, [pc, r0]
    8014:	cmp	r0, #0
    8018:	beq	803c <clock_from_fhs@@Base+0x244>
    801c:	ldr	r4, [r0, #16]!
    8020:	ldr	r1, [r4, #16]
    8024:	str	r8, [r1, #8]
    8028:	ldr	r2, [r4, #20]
    802c:	sub	r1, r1, r2
    8030:	str	r1, [r8, #20]
    8034:	str	lr, [r4, #16]
    8038:	b	80c8 <clock_from_fhs@@Base+0x2d0>
    803c:	ldr	r0, [pc, #836]	; 8388 <clock_from_fhs@@Base+0x590>
    8040:	mov	r5, lr
    8044:	str	r9, [r8, #20]
    8048:	add	r0, pc, r0
    804c:	str	r8, [r0]
    8050:	mov	r0, #44	; 0x2c
    8054:	bl	4638 <malloc@plt>
    8058:	cmp	r0, #0
    805c:	str	r0, [r8, #16]
    8060:	beq	836c <clock_from_fhs@@Base+0x574>
    8064:	mov	r4, r0
    8068:	add	r0, r0, #12
    806c:	vst1.32	{d8-d9}, [r0]
    8070:	mov	r0, #32
    8074:	str	r0, [r4, #4]
    8078:	mov	r0, #5
    807c:	str	r0, [r4, #8]
    8080:	add	r0, r4, #28
    8084:	vst1.32	{d8-d9}, [r0]
    8088:	mov	r0, #16
    808c:	str	r5, [r4, #16]
    8090:	str	r0, [r4, #20]
    8094:	mov	r0, #384	; 0x180
    8098:	bl	4638 <malloc@plt>
    809c:	cmp	r0, #0
    80a0:	str	r0, [r4]
    80a4:	beq	836c <clock_from_fhs@@Base+0x574>
    80a8:	mov	r1, #0
    80ac:	mov	r2, #384	; 0x180
    80b0:	bl	46f8 <memset@plt>
    80b4:	movw	r0, #8161	; 0x1fe1
    80b8:	mov	lr, r5
    80bc:	movt	r0, #40977	; 0xa011
    80c0:	str	r0, [r4, #40]	; 0x28
    80c4:	mov	r0, r5
    80c8:	ldr	r1, [r4, #12]
    80cc:	movw	r2, #31161	; 0x79b9
    80d0:	movw	r3, #47810	; 0xbac2
    80d4:	movt	r2, #40503	; 0x9e37
    80d8:	movt	r3, #40777	; 0x9f49
    80dc:	add	r1, r1, #1
    80e0:	str	r1, [r4, #12]
    80e4:	ldrb	r4, [r8, #3]
    80e8:	ldr	r1, [r8, #4]
    80ec:	ldrb	r5, [r8, #2]
    80f0:	ldrb	r6, [r8, #1]
    80f4:	ldrb	ip, [r8]
    80f8:	ldr	sl, [r0]
    80fc:	add	r2, r1, r2
    8100:	add	r4, r3, r4, lsl #24
    8104:	add	r1, r1, r3
    8108:	movw	r3, #48887	; 0xbef7
    810c:	str	sl, [r8, #16]
    8110:	sub	r2, r4, r2
    8114:	movt	r3, #65261	; 0xfeed
    8118:	add	r2, r2, r5, lsl #16
    811c:	add	r2, r2, r6, lsl #8
    8120:	movw	r6, #63341	; 0xf76d
    8124:	add	r2, r2, ip
    8128:	movt	r6, #7
    812c:	eor	r2, r2, r6
    8130:	sub	r1, r1, r2
    8134:	sub	r3, r3, r2
    8138:	eor	r1, r1, r2, lsl #8
    813c:	sub	r3, r3, r1
    8140:	sub	r2, r2, r1
    8144:	eor	r3, r3, r1, lsr #13
    8148:	sub	r2, r2, r3
    814c:	sub	r1, r1, r3
    8150:	eor	r2, r2, r3, lsr #12
    8154:	sub	r1, r1, r2
    8158:	sub	r3, r3, r2
    815c:	eor	r1, r1, r2, lsl #16
    8160:	sub	r3, r3, r1
    8164:	sub	r2, r2, r1
    8168:	eor	r3, r3, r1, lsr #5
    816c:	sub	r2, r2, r3
    8170:	sub	r1, r1, r3
    8174:	eor	r2, r2, r3, lsr #3
    8178:	sub	r1, r1, r2
    817c:	eor	r1, r1, r2, lsl #10
    8180:	sub	r2, r3, r2
    8184:	sub	r2, r2, r1
    8188:	eor	r1, r2, r1, lsr #15
    818c:	str	r1, [r8, #44]	; 0x2c
    8190:	ldr	r2, [r0]
    8194:	ldm	r2, {r0, r2}
    8198:	sub	r2, r2, #1
    819c:	mov	r3, r0
    81a0:	and	r1, r1, r2
    81a4:	add	r2, r1, r1, lsl #1
    81a8:	ldr	r6, [r3, r2, lsl #2]!
    81ac:	add	r0, r0, r2, lsl #2
    81b0:	mov	r2, #10
    81b4:	ldr	r1, [r3, #4]
    81b8:	cmp	r6, #0
    81bc:	add	r1, r1, #1
    81c0:	str	r1, [r3, #4]
    81c4:	str	r9, [r8, #28]
    81c8:	str	r6, [r8, #32]
    81cc:	strne	lr, [r6, #12]
    81d0:	str	lr, [r3]
    81d4:	ldr	r8, [sp, #12]
    81d8:	ldr	r6, [sp, #8]
    81dc:	ldr	r0, [r0, #8]
    81e0:	add	r0, r0, r0, lsl #2
    81e4:	add	r0, r2, r0, lsl #1
    81e8:	cmp	r1, r0
    81ec:	bcc	834c <clock_from_fhs@@Base+0x554>
    81f0:	ldr	r0, [sl, #36]	; 0x24
    81f4:	cmp	r0, #1
    81f8:	beq	834c <clock_from_fhs@@Base+0x554>
    81fc:	ldr	r0, [sl, #4]
    8200:	str	lr, [sp, #4]
    8204:	add	r0, r0, r0, lsl #1
    8208:	lsl	r0, r0, #3
    820c:	bl	4638 <malloc@plt>
    8210:	cmp	r0, #0
    8214:	beq	836c <clock_from_fhs@@Base+0x574>
    8218:	mov	r8, r0
    821c:	ldr	r0, [sl, #4]
    8220:	mov	r1, #0
    8224:	add	r0, r0, r0, lsl #1
    8228:	lsl	r2, r0, #3
    822c:	mov	r0, r8
    8230:	bl	46f8 <memset@plt>
    8234:	str	r9, [sl, #28]
    8238:	mvn	r2, #0
    823c:	mov	r6, #1
    8240:	ldm	sl, {r0, ip}
    8244:	ldr	r1, [sl, #8]
    8248:	ldr	r7, [sl, #12]
    824c:	add	r1, r1, #1
    8250:	add	r2, r2, ip, lsl #1
    8254:	lsr	r3, r7, r1
    8258:	tst	r2, r7
    825c:	addne	r3, r6, r7, lsr r1
    8260:	cmp	ip, #0
    8264:	str	r3, [sl, #24]
    8268:	beq	82ec <clock_from_fhs@@Base+0x4f4>
    826c:	mov	r6, #0
    8270:	mov	lr, #0
    8274:	add	r1, lr, lr, lsl #1
    8278:	ldr	r1, [r0, r1, lsl #2]
    827c:	cmp	r1, #0
    8280:	beq	82e0 <clock_from_fhs@@Base+0x4e8>
    8284:	ldr	r5, [r1, #28]
    8288:	ldr	r4, [r1, #16]
    828c:	and	r5, r5, r2
    8290:	add	r5, r5, r5, lsl #1
    8294:	add	r5, r8, r5, lsl #2
    8298:	ldr	r7, [r5, #4]
    829c:	add	r9, r7, #1
    82a0:	cmp	r9, r3
    82a4:	str	r9, [r5, #4]
    82a8:	addhi	r6, r6, #1
    82ac:	udivhi	r7, r9, r3
    82b0:	mov	r9, #0
    82b4:	strhi	r6, [sl, #28]
    82b8:	strhi	r7, [r5, #8]
    82bc:	str	r9, [r1, #12]
    82c0:	ldr	r7, [r5]
    82c4:	cmp	r7, #0
    82c8:	str	r7, [r1, #16]
    82cc:	strne	r1, [r7, #12]
    82d0:	str	r1, [r5]
    82d4:	cmp	r4, #0
    82d8:	mov	r1, r4
    82dc:	bne	8284 <clock_from_fhs@@Base+0x48c>
    82e0:	add	lr, lr, #1
    82e4:	cmp	lr, ip
    82e8:	bne	8274 <clock_from_fhs@@Base+0x47c>
    82ec:	bl	4548 <free@plt>
    82f0:	ldr	r0, [sp, #4]
    82f4:	ldr	r0, [r0]
    82f8:	str	r8, [r0]
    82fc:	ldmib	r0, {r1, r2, r3}
    8300:	ldr	r7, [r0, #28]
    8304:	lsl	r1, r1, #1
    8308:	cmp	r7, r3, lsr #1
    830c:	str	r1, [r0, #4]
    8310:	add	r1, r2, #1
    8314:	str	r1, [r0, #8]
    8318:	bls	8340 <clock_from_fhs@@Base+0x548>
    831c:	ldr	r1, [r0, #32]
    8320:	ldr	r8, [sp, #12]
    8324:	ldr	r6, [sp, #8]
    8328:	add	r1, r1, #1
    832c:	cmp	r1, #2
    8330:	str	r1, [r0, #32]
    8334:	movcs	r1, #1
    8338:	strcs	r1, [r0, #36]	; 0x24
    833c:	b	834c <clock_from_fhs@@Base+0x554>
    8340:	ldr	r8, [sp, #12]
    8344:	ldr	r6, [sp, #8]
    8348:	str	r9, [r0, #32]
    834c:	ldr	r0, [sp, #20]
    8350:	add	r2, r0, #1
    8354:	cmp	r0, #57	; 0x39
    8358:	blt	7f00 <clock_from_fhs@@Base+0x108>
    835c:	sub	sp, fp, #48	; 0x30
    8360:	vpop	{d8-d9}
    8364:	add	sp, sp, #4
    8368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    836c:	mvn	r0, #0
    8370:	bl	4674 <exit@plt>
    8374:	andeq	r9, r0, r8
    8378:	andeq	r8, r0, ip, lsl #16
    837c:	strdeq	r9, [r0], -ip
    8380:	ldrdeq	r9, [r0], -ip
    8384:	andeq	r2, r2, r0, lsr r1
    8388:	strdeq	r2, [r2], -r8
    838c:	andeq	r0, r0, r0

00008390 <count_bits@@Base>:
    8390:	mov	r1, #0
    8394:	cmp	r0, #0
    8398:	beq	83b0 <count_bits@@Base+0x20>
    839c:	sub	r2, r0, #1
    83a0:	add	r1, r1, #1
    83a4:	and	r0, r2, r0
    83a8:	tst	r0, #255	; 0xff
    83ac:	bne	839c <count_bits@@Base+0xc>
    83b0:	mov	r0, r1
    83b4:	bx	lr

000083b8 <btbb_piconet_new@@Base>:
    83b8:	push	{r4, sl, fp, lr}
    83bc:	add	fp, sp, #8
    83c0:	mov	r0, #1
    83c4:	movw	r1, #5660	; 0x161c
    83c8:	mov	r4, #1
    83cc:	bl	44c4 <calloc@plt>
    83d0:	str	r4, [r0]
    83d4:	pop	{r4, sl, fp, pc}

000083d8 <btbb_piconet_ref@@Base>:
    83d8:	ldr	r1, [r0]
    83dc:	add	r1, r1, #1
    83e0:	str	r1, [r0]
    83e4:	bx	lr

000083e8 <btbb_piconet_unref@@Base>:
    83e8:	ldr	r1, [r0]
    83ec:	subs	r1, r1, #1
    83f0:	str	r1, [r0]
    83f4:	bxne	lr
    83f8:	b	4548 <free@plt>

000083fc <btbb_init_survey@@Base>:
    83fc:	ldr	r0, [pc, #16]	; 8414 <btbb_init_survey@@Base+0x18>
    8400:	mov	r1, #1
    8404:	add	r0, pc, r0
    8408:	strb	r1, [r0]
    840c:	mov	r0, #0
    8410:	bx	lr
    8414:	andeq	r1, r2, r4, asr #26

00008418 <btbb_init_piconet@@Base>:
    8418:	str	r1, [r0, #24]
    841c:	ldr	r1, [r0, #4]
    8420:	orr	r1, r1, #8
    8424:	str	r1, [r0, #4]
    8428:	bx	lr

0000842c <btbb_piconet_set_flag@@Base>:
    842c:	push	{fp, lr}
    8430:	mov	fp, sp
    8434:	ldr	lr, [r0, #4]
    8438:	mov	ip, #1
    843c:	cmp	r2, #0
    8440:	orr	r3, lr, ip, lsl r1
    8444:	biceq	r3, lr, ip, lsl r1
    8448:	str	r3, [r0, #4]
    844c:	pop	{fp, pc}

00008450 <btbb_piconet_get_flag@@Base>:
    8450:	ldr	r0, [r0, #4]
    8454:	mov	r2, #1
    8458:	and	r0, r0, r2, lsl r1
    845c:	cmp	r0, #0
    8460:	movwne	r0, #1
    8464:	bx	lr

00008468 <btbb_piconet_set_uap@@Base>:
    8468:	strb	r1, [r0, #28]
    846c:	ldr	r1, [r0, #4]
    8470:	orr	r1, r1, #4
    8474:	str	r1, [r0, #4]
    8478:	bx	lr

0000847c <btbb_piconet_get_uap@@Base>:
    847c:	ldrb	r0, [r0, #28]
    8480:	bx	lr

00008484 <btbb_piconet_get_lap@@Base>:
    8484:	ldr	r0, [r0, #24]
    8488:	bx	lr

0000848c <btbb_piconet_get_nap@@Base>:
    848c:	ldrh	r0, [r0, #30]
    8490:	bx	lr

00008494 <btbb_piconet_get_bdaddr@@Base>:
    8494:	ldrb	r1, [r0, #28]
    8498:	ldr	r2, [r0, #24]
    849c:	orr	r2, r2, r1, lsl #24
    84a0:	ldrh	r1, [r0, #30]
    84a4:	mov	r0, r2
    84a8:	bx	lr

000084ac <btbb_piconet_get_clk_offset@@Base>:
    84ac:	movw	r1, #5648	; 0x1610
    84b0:	ldr	r0, [r0, r1]
    84b4:	bx	lr

000084b8 <btbb_piconet_set_clk_offset@@Base>:
    84b8:	movw	r2, #5648	; 0x1610
    84bc:	str	r1, [r0, r2]
    84c0:	bx	lr

000084c4 <btbb_piconet_set_afh_map@@Base>:
    84c4:	push	{fp, lr}
    84c8:	mov	fp, sp
    84cc:	mov	ip, #0
    84d0:	strb	ip, [r0, #22]
    84d4:	ldrb	r3, [r1, ip]
    84d8:	add	r2, r0, ip
    84dc:	mov	lr, #0
    84e0:	cmp	r3, #0
    84e4:	strb	r3, [r2, #12]
    84e8:	beq	8504 <btbb_piconet_set_afh_map@@Base+0x40>
    84ec:	mov	lr, #0
    84f0:	sub	r2, r3, #1
    84f4:	add	lr, lr, #1
    84f8:	and	r3, r2, r3
    84fc:	tst	r3, #255	; 0xff
    8500:	bne	84f0 <btbb_piconet_set_afh_map@@Base+0x2c>
    8504:	ldrb	r2, [r0, #22]
    8508:	add	ip, ip, #1
    850c:	cmp	ip, #10
    8510:	add	r2, r2, lr
    8514:	strb	r2, [r0, #22]
    8518:	bne	84d4 <btbb_piconet_set_afh_map@@Base+0x10>
    851c:	ldrb	r1, [r0, #4]
    8520:	tst	r1, #4
    8524:	popeq	{fp, pc}
    8528:	pop	{fp, lr}
    852c:	b	8530 <get_hop_pattern@@Base>

00008530 <get_hop_pattern@@Base>:
    8530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8534:	add	fp, sp, #28
    8538:	sub	sp, sp, #20
    853c:	mov	r5, r0
    8540:	ldrb	r0, [r0, #28]
    8544:	mov	r3, #128	; 0x80
    8548:	movw	r9, #63341	; 0xf76d
    854c:	movw	r7, #16653	; 0x410d
    8550:	movw	r4, #47814	; 0xbac6
    8554:	movw	sl, #48883	; 0xbef3
    8558:	ldr	r1, [r5, #24]
    855c:	ldr	r2, [r5, #4]
    8560:	movt	r9, #7
    8564:	movt	r7, #274	; 0x112
    8568:	movt	r4, #40777	; 0x9f49
    856c:	movt	sl, #65261	; 0xfeed
    8570:	orr	r6, r1, r0, lsl #24
    8574:	ldrb	r0, [r5, #22]
    8578:	and	r2, r3, r2, lsr #4
    857c:	str	r6, [sp, #8]
    8580:	orr	r8, r2, r0
    8584:	str	r8, [sp, #12]
    8588:	ldr	r0, [pc, #1100]	; 89dc <get_hop_pattern@@Base+0x4ac>
    858c:	ldr	r0, [pc, r0]
    8590:	cmp	r0, #0
    8594:	beq	8680 <get_hop_pattern@@Base+0x150>
    8598:	and	r2, r6, #-16777216	; 0xff000000
    859c:	and	r3, r1, #16711680	; 0xff0000
    85a0:	ldr	r0, [r0, #12]
    85a4:	add	r2, r2, r7
    85a8:	add	r2, r2, r3
    85ac:	and	r3, r1, #65280	; 0xff00
    85b0:	add	r2, r2, r3
    85b4:	uxtab	r1, r2, r1
    85b8:	eor	r1, r1, r9
    85bc:	sub	r2, r4, r1
    85c0:	sub	r3, sl, r1
    85c4:	eor	r2, r2, r1, lsl #8
    85c8:	sub	r3, r3, r2
    85cc:	sub	r1, r1, r2
    85d0:	eor	r3, r3, r2, lsr #13
    85d4:	sub	r1, r1, r3
    85d8:	sub	r2, r2, r3
    85dc:	eor	r1, r1, r3, lsr #12
    85e0:	sub	r2, r2, r1
    85e4:	sub	r3, r3, r1
    85e8:	eor	r2, r2, r1, lsl #16
    85ec:	sub	r3, r3, r2
    85f0:	sub	r1, r1, r2
    85f4:	eor	r3, r3, r2, lsr #5
    85f8:	sub	r1, r1, r3
    85fc:	sub	r2, r2, r3
    8600:	eor	r1, r1, r3, lsr #3
    8604:	sub	r2, r2, r1
    8608:	eor	r2, r2, r1, lsl #10
    860c:	sub	r1, r3, r1
    8610:	sub	r1, r1, r2
    8614:	eor	r1, r1, r2, lsr #15
    8618:	ldm	r0, {r2, r3}
    861c:	sub	r3, r3, #1
    8620:	and	r1, r1, r3
    8624:	add	r1, r1, r1, lsl #1
    8628:	ldr	r1, [r2, r1, lsl #2]
    862c:	b	8634 <get_hop_pattern@@Base+0x104>
    8630:	ldr	r1, [r4, #28]
    8634:	cmp	r1, #0
    8638:	ldrne	r2, [r0, #20]
    863c:	subsne	r4, r1, r2
    8640:	beq	8680 <get_hop_pattern@@Base+0x150>
    8644:	ldr	r1, [r4, #36]	; 0x24
    8648:	cmp	r1, #4
    864c:	bne	8630 <get_hop_pattern@@Base+0x100>
    8650:	ldr	r1, [r4, #32]
    8654:	ldr	r2, [sp, #8]
    8658:	ldr	r1, [r1]
    865c:	cmp	r1, r2
    8660:	bne	8630 <get_hop_pattern@@Base+0x100>
    8664:	ldr	r0, [pc, #892]	; 89e8 <get_hop_pattern@@Base+0x4b8>
    8668:	add	r0, pc, r0
    866c:	bl	462c <puts@plt>
    8670:	ldr	r0, [r4, #8]
    8674:	str	r0, [r5, #372]	; 0x174
    8678:	sub	sp, fp, #28
    867c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8680:	mov	r0, r5
    8684:	bl	44dc <gen_hop_pattern@plt>
    8688:	mov	r0, #48	; 0x30
    868c:	bl	4638 <malloc@plt>
    8690:	mov	r4, r0
    8694:	ldr	r0, [r5, #372]	; 0x174
    8698:	mov	r1, #0
    869c:	mov	r2, #4
    86a0:	str	r1, [r4, #20]
    86a4:	stm	r4, {r6, r8}
    86a8:	add	r8, r4, #12
    86ac:	str	r0, [r4, #8]
    86b0:	str	r4, [r4, #32]
    86b4:	str	r2, [r4, #36]	; 0x24
    86b8:	ldr	r0, [pc, #800]	; 89e0 <get_hop_pattern@@Base+0x4b0>
    86bc:	ldr	r0, [pc, r0]
    86c0:	cmp	r0, #0
    86c4:	beq	86e8 <get_hop_pattern@@Base+0x1b8>
    86c8:	ldr	r5, [r0, #12]!
    86cc:	ldr	r1, [r5, #16]
    86d0:	str	r4, [r1, #8]
    86d4:	ldr	r2, [r5, #20]
    86d8:	sub	r1, r1, r2
    86dc:	str	r1, [r4, #16]
    86e0:	str	r8, [r5, #16]
    86e4:	b	876c <get_hop_pattern@@Base+0x23c>
    86e8:	ldr	r0, [pc, #756]	; 89e4 <get_hop_pattern@@Base+0x4b4>
    86ec:	str	r1, [r4, #16]
    86f0:	add	r0, pc, r0
    86f4:	str	r4, [r0]
    86f8:	mov	r0, #44	; 0x2c
    86fc:	bl	4638 <malloc@plt>
    8700:	cmp	r0, #0
    8704:	str	r0, [r4, #12]
    8708:	beq	89d4 <get_hop_pattern@@Base+0x4a4>
    870c:	mov	r5, r0
    8710:	vmov.i32	q8, #0	; 0x00000000
    8714:	add	r0, r0, #12
    8718:	mov	r1, #5
    871c:	vst1.32	{d16-d17}, [r0]
    8720:	mov	r0, #32
    8724:	stmib	r5, {r0, r1}
    8728:	add	r0, r5, #28
    872c:	vst1.32	{d16-d17}, [r0]
    8730:	mov	r0, #12
    8734:	str	r8, [r5, #16]
    8738:	str	r0, [r5, #20]
    873c:	mov	r0, #384	; 0x180
    8740:	bl	4638 <malloc@plt>
    8744:	cmp	r0, #0
    8748:	str	r0, [r5]
    874c:	beq	89d4 <get_hop_pattern@@Base+0x4a4>
    8750:	mov	r1, #0
    8754:	mov	r2, #384	; 0x180
    8758:	bl	46f8 <memset@plt>
    875c:	movw	r0, #8161	; 0x1fe1
    8760:	movt	r0, #40977	; 0xa011
    8764:	str	r0, [r5, #40]	; 0x28
    8768:	mov	r0, r8
    876c:	ldr	r1, [r5, #12]
    8770:	add	r1, r1, #1
    8774:	str	r1, [r5, #12]
    8778:	ldr	r5, [r0]
    877c:	str	r5, [r4, #12]
    8780:	ldrb	r6, [r4, #3]
    8784:	ldrb	r3, [r4, #2]
    8788:	ldrb	r2, [r4, #1]
    878c:	ldrb	r1, [r4]
    8790:	add	r7, r7, r6, lsl #24
    8794:	mov	r6, #0
    8798:	add	r3, r7, r3, lsl #16
    879c:	add	r2, r3, r2, lsl #8
    87a0:	add	r1, r2, r1
    87a4:	movw	r2, #47814	; 0xbac6
    87a8:	eor	r1, r1, r9
    87ac:	movt	r2, #40777	; 0x9f49
    87b0:	sub	r2, r2, r1
    87b4:	sub	r3, sl, r1
    87b8:	eor	r2, r2, r1, lsl #8
    87bc:	sub	r3, r3, r2
    87c0:	sub	r1, r1, r2
    87c4:	eor	r3, r3, r2, lsr #13
    87c8:	sub	r1, r1, r3
    87cc:	sub	r2, r2, r3
    87d0:	eor	r1, r1, r3, lsr #12
    87d4:	sub	r2, r2, r1
    87d8:	sub	r3, r3, r1
    87dc:	eor	r2, r2, r1, lsl #16
    87e0:	sub	r3, r3, r2
    87e4:	sub	r1, r1, r2
    87e8:	eor	r3, r3, r2, lsr #5
    87ec:	sub	r1, r1, r3
    87f0:	sub	r2, r2, r3
    87f4:	eor	r1, r1, r3, lsr #3
    87f8:	sub	r2, r2, r1
    87fc:	eor	r2, r2, r1, lsl #10
    8800:	sub	r1, r3, r1
    8804:	sub	r1, r1, r2
    8808:	eor	r1, r1, r2, lsr #15
    880c:	str	r1, [r4, #40]	; 0x28
    8810:	ldr	r2, [r0]
    8814:	ldm	r2, {r0, r2}
    8818:	sub	r2, r2, #1
    881c:	mov	r3, r0
    8820:	and	r1, r1, r2
    8824:	add	r2, r1, r1, lsl #1
    8828:	ldr	r7, [r3, r2, lsl #2]!
    882c:	add	r0, r0, r2, lsl #2
    8830:	mov	r2, #10
    8834:	ldr	r1, [r3, #4]
    8838:	cmp	r7, #0
    883c:	add	r1, r1, #1
    8840:	str	r1, [r3, #4]
    8844:	str	r6, [r4, #24]
    8848:	str	r7, [r4, #28]
    884c:	strne	r8, [r7, #12]
    8850:	str	r8, [r3]
    8854:	ldr	r0, [r0, #8]
    8858:	add	r0, r0, r0, lsl #2
    885c:	add	r0, r2, r0, lsl #1
    8860:	cmp	r1, r0
    8864:	bcc	89cc <get_hop_pattern@@Base+0x49c>
    8868:	ldr	r0, [r5, #36]	; 0x24
    886c:	cmp	r0, #1
    8870:	beq	89cc <get_hop_pattern@@Base+0x49c>
    8874:	ldr	r0, [r5, #4]
    8878:	str	r8, [sp]
    887c:	add	r0, r0, r0, lsl #1
    8880:	lsl	r0, r0, #3
    8884:	bl	4638 <malloc@plt>
    8888:	cmp	r0, #0
    888c:	beq	89d4 <get_hop_pattern@@Base+0x4a4>
    8890:	mov	r9, r0
    8894:	ldr	r0, [r5, #4]
    8898:	mov	r1, #0
    889c:	mov	sl, #0
    88a0:	add	r0, r0, r0, lsl #1
    88a4:	lsl	r2, r0, #3
    88a8:	mov	r0, r9
    88ac:	bl	46f8 <memset@plt>
    88b0:	str	sl, [r5, #28]
    88b4:	mvn	r2, #0
    88b8:	mov	r6, #1
    88bc:	ldr	r0, [r5]
    88c0:	str	r0, [sp, #4]
    88c4:	ldmib	r5, {r0, r1, r7}
    88c8:	add	r1, r1, #1
    88cc:	add	r2, r2, r0, lsl #1
    88d0:	lsr	r3, r7, r1
    88d4:	tst	r2, r7
    88d8:	addne	r3, r6, r7, lsr r1
    88dc:	cmp	r0, #0
    88e0:	str	r3, [r5, #24]
    88e4:	beq	896c <get_hop_pattern@@Base+0x43c>
    88e8:	mov	ip, r5
    88ec:	mov	r6, #0
    88f0:	mov	lr, #0
    88f4:	ldr	r4, [sp, #4]
    88f8:	add	r1, lr, lr, lsl #1
    88fc:	ldr	r5, [r4, r1, lsl #2]
    8900:	cmp	r5, #0
    8904:	beq	8960 <get_hop_pattern@@Base+0x430>
    8908:	ldr	r1, [r5, #28]
    890c:	ldr	r7, [r5, #16]
    8910:	and	r1, r1, r2
    8914:	add	r1, r1, r1, lsl #1
    8918:	add	r1, r9, r1, lsl #2
    891c:	ldr	r4, [r1, #4]
    8920:	add	r8, r4, #1
    8924:	cmp	r8, r3
    8928:	str	r8, [r1, #4]
    892c:	addhi	r6, r6, #1
    8930:	udivhi	r4, r8, r3
    8934:	strhi	r6, [ip, #28]
    8938:	strhi	r4, [r1, #8]
    893c:	str	sl, [r5, #12]
    8940:	ldr	r4, [r1]
    8944:	cmp	r4, #0
    8948:	str	r4, [r5, #16]
    894c:	strne	r5, [r4, #12]
    8950:	str	r5, [r1]
    8954:	cmp	r7, #0
    8958:	mov	r5, r7
    895c:	bne	8908 <get_hop_pattern@@Base+0x3d8>
    8960:	add	lr, lr, #1
    8964:	cmp	lr, r0
    8968:	bne	88f4 <get_hop_pattern@@Base+0x3c4>
    896c:	ldr	r0, [sp, #4]
    8970:	bl	4548 <free@plt>
    8974:	ldr	r0, [sp]
    8978:	ldr	r0, [r0]
    897c:	str	r9, [r0]
    8980:	ldmib	r0, {r1, r2, r3}
    8984:	ldr	r7, [r0, #28]
    8988:	lsl	r1, r1, #1
    898c:	cmp	r7, r3, lsr #1
    8990:	str	r1, [r0, #4]
    8994:	add	r1, r2, #1
    8998:	str	r1, [r0, #8]
    899c:	movls	r1, #0
    89a0:	strls	r1, [r0, #32]
    89a4:	subls	sp, fp, #28
    89a8:	popls	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    89ac:	ldr	r1, [r0, #32]
    89b0:	add	r1, r1, #1
    89b4:	cmp	r1, #2
    89b8:	str	r1, [r0, #32]
    89bc:	movcs	r1, #1
    89c0:	strcs	r1, [r0, #36]	; 0x24
    89c4:	subcs	sp, fp, #28
    89c8:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    89cc:	sub	sp, fp, #28
    89d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    89d4:	mvn	r0, #0
    89d8:	bl	4674 <exit@plt>
    89dc:	andeq	r1, r2, r0, asr #23
    89e0:	muleq	r2, r0, sl
    89e4:	andeq	r1, r2, ip, asr sl
    89e8:	strdeq	sl, [r0], -r0

000089ec <btbb_piconet_get_afh_map@@Base>:
    89ec:	add	r0, r0, #12
    89f0:	bx	lr

000089f4 <btbb_piconet_set_channel_seen@@Base>:
    89f4:	push	{fp, lr}
    89f8:	mov	fp, sp
    89fc:	add	r2, r0, r1, lsr #3
    8a00:	and	lr, r1, #7
    8a04:	mov	ip, #1
    8a08:	mov	r1, #0
    8a0c:	ldrb	r3, [r2, #12]!
    8a10:	tst	r3, ip, lsl lr
    8a14:	beq	8a20 <btbb_piconet_set_channel_seen@@Base+0x2c>
    8a18:	mov	r0, r1
    8a1c:	pop	{fp, pc}
    8a20:	lsl	r1, ip, lr
    8a24:	orr	r1, r3, r1
    8a28:	strb	r1, [r2]
    8a2c:	ldrb	r1, [r0, #22]
    8a30:	add	r1, r1, #1
    8a34:	strb	r1, [r0, #22]
    8a38:	mov	r1, #1
    8a3c:	mov	r0, r1
    8a40:	pop	{fp, pc}

00008a44 <btbb_piconet_clear_channel_seen@@Base>:
    8a44:	push	{fp, lr}
    8a48:	mov	fp, sp
    8a4c:	mov	lr, r0
    8a50:	and	ip, r1, #7
    8a54:	mov	r0, #1
    8a58:	add	r1, lr, r1, lsr #3
    8a5c:	ldrb	r3, [r1, #12]!
    8a60:	tst	r3, r0, lsl ip
    8a64:	moveq	r0, #0
    8a68:	popeq	{fp, pc}
    8a6c:	lsl	r2, r0, ip
    8a70:	bic	r2, r3, r2
    8a74:	strb	r2, [r1]
    8a78:	ldrb	r1, [lr, #22]
    8a7c:	sub	r1, r1, #1
    8a80:	strb	r1, [lr, #22]
    8a84:	pop	{fp, pc}

00008a88 <btbb_piconet_get_channel_seen@@Base>:
    8a88:	mov	r2, r0
    8a8c:	mov	r0, #1
    8a90:	cmp	r1, #78	; 0x4e
    8a94:	bxhi	lr
    8a98:	add	r0, r2, r1, lsr #3
    8a9c:	and	r1, r1, #7
    8aa0:	mov	r2, #1
    8aa4:	ldrb	r0, [r0, #12]
    8aa8:	and	r0, r0, r2, lsl r1
    8aac:	cmp	r0, #0
    8ab0:	movwne	r0, #1
    8ab4:	bx	lr

00008ab8 <precalc@@Base>:
    8ab8:	push	{r4, r5, r6, sl, fp, lr}
    8abc:	add	fp, sp, #16
    8ac0:	movw	lr, #29865	; 0x74a9
    8ac4:	mov	r1, #0
    8ac8:	mov	r3, #79	; 0x4f
    8acc:	mov	ip, #1
    8ad0:	mov	r2, #0
    8ad4:	movt	lr, #53092	; 0xcf64
    8ad8:	b	8ae8 <precalc@@Base+0x30>
    8adc:	add	r1, r1, #1
    8ae0:	cmp	r1, #79	; 0x4f
    8ae4:	popeq	{r4, r5, r6, sl, fp, pc}
    8ae8:	lsl	r4, r1, #1
    8aec:	uxtb	r4, r4
    8af0:	umull	r5, r6, r4, lr
    8af4:	lsr	r5, r6, #6
    8af8:	mls	r4, r5, r3, r4
    8afc:	ldrb	r5, [r0, #5]
    8b00:	tst	r5, #8
    8b04:	bne	8b10 <precalc@@Base+0x58>
    8b08:	mov	r5, r1
    8b0c:	b	8b30 <precalc@@Base+0x78>
    8b10:	add	r5, r0, r4, lsr #3
    8b14:	and	r6, r4, #7
    8b18:	ldrb	r5, [r5, #12]
    8b1c:	tst	r5, ip, lsl r6
    8b20:	beq	8adc <precalc@@Base+0x24>
    8b24:	add	r6, r2, #1
    8b28:	mov	r5, r2
    8b2c:	mov	r2, r6
    8b30:	add	r5, r0, r5, lsl #2
    8b34:	str	r4, [r5, #56]	; 0x38
    8b38:	b	8adc <precalc@@Base+0x24>

00008b3c <address_precalc@@Base>:
    8b3c:	push	{r4, r5, fp, lr}
    8b40:	add	fp, sp, #8
    8b44:	ubfx	r2, r0, #19, #4
    8b48:	mov	ip, #8
    8b4c:	mov	lr, #16
    8b50:	and	r4, r0, #1
    8b54:	str	r2, [r1, #36]	; 0x24
    8b58:	ubfx	r2, r0, #23, #5
    8b5c:	and	r3, lr, r0, asr #4
    8b60:	str	r2, [r1, #44]	; 0x2c
    8b64:	ubfx	r2, r0, #10, #9
    8b68:	str	r2, [r1, #52]	; 0x34
    8b6c:	and	r2, ip, r0, asr #3
    8b70:	orr	r2, r2, r4
    8b74:	orr	r2, r2, r3
    8b78:	mov	r3, #4
    8b7c:	and	r4, r3, r0, asr #2
    8b80:	and	r3, r3, r0, asr #3
    8b84:	orr	r2, r2, r4
    8b88:	mov	r4, #2
    8b8c:	and	r5, r4, r0, asr #1
    8b90:	orr	r2, r2, r5
    8b94:	mov	r5, #64	; 0x40
    8b98:	str	r2, [r1, #48]	; 0x30
    8b9c:	mov	r2, #32
    8ba0:	and	r5, r5, r0, lsr #7
    8ba4:	and	r2, r2, r0, lsr #6
    8ba8:	orr	r2, r5, r2
    8bac:	and	r5, lr, r0, lsr #5
    8bb0:	orr	r2, r2, r5
    8bb4:	and	r5, ip, r0, asr #4
    8bb8:	orr	r2, r2, r5
    8bbc:	orr	r2, r2, r3
    8bc0:	and	r3, r4, r0, asr #2
    8bc4:	orr	r2, r2, r3
    8bc8:	mov	r3, #1
    8bcc:	and	r0, r3, r0, asr #1
    8bd0:	orr	r0, r2, r0
    8bd4:	str	r0, [r1, #40]	; 0x28
    8bd8:	pop	{r4, r5, fp, pc}
    8bdc:	nop	{0}

00008be0 <perm5@@Base>:
    8be0:	push	{r4, r5, r6, sl, fp, lr}
    8be4:	add	fp, sp, #16
    8be8:	sub	sp, sp, #76	; 0x4c
    8bec:	add	r3, pc, #268	; 0x10c
    8bf0:	vdup.32	q11, r2
    8bf4:	vmov.i32	q12, #1	; 0x00000001
    8bf8:	mov	ip, sp
    8bfc:	vdup.32	q9, r1
    8c00:	vdup.32	q14, r0
    8c04:	and	r2, r2, #1
    8c08:	and	r1, r1, #1
    8c0c:	and	r0, r0, #1
    8c10:	vld1.64	{d16-d17}, [r3 :128]
    8c14:	add	r3, pc, #244	; 0xf4
    8c18:	vld1.64	{d20-d21}, [r3 :128]
    8c1c:	add	r3, ip, #4
    8c20:	vneg.s32	q8, q8
    8c24:	vshl.u32	q13, q11, q8
    8c28:	vneg.s32	q10, q10
    8c2c:	vshl.u32	q9, q9, q8
    8c30:	vshl.u32	q8, q14, q8
    8c34:	vshl.u32	q10, q11, q10
    8c38:	vand	q13, q13, q12
    8c3c:	vand	q9, q9, q12
    8c40:	vand	q8, q8, q12
    8c44:	vst1.32	{d26-d27}, [r3]
    8c48:	add	r3, ip, #20
    8c4c:	vand	q10, q10, q12
    8c50:	vst1.32	{d20-d21}, [r3]
    8c54:	add	r3, ip, #40	; 0x28
    8c58:	vst1.32	{d18-d19}, [r3]
    8c5c:	sub	r3, fp, #36	; 0x24
    8c60:	str	r2, [sp]
    8c64:	str	r1, [sp, #36]	; 0x24
    8c68:	vmov.32	r2, d19[1]
    8c6c:	mov	r1, #0
    8c70:	add	lr, r3, #4
    8c74:	vst1.32	{d16-d17}, [lr]
    8c78:	str	r0, [fp, #-36]	; 0xffffffdc
    8c7c:	add	r0, ip, #48	; 0x30
    8c80:	ldr	ip, [pc, #152]	; 8d20 <perm5@@Base+0x140>
    8c84:	ldr	lr, [pc, #152]	; 8d24 <perm5@@Base+0x144>
    8c88:	add	ip, pc, ip
    8c8c:	add	lr, pc, lr
    8c90:	cmp	r2, #0
    8c94:	bne	8cac <perm5@@Base+0xcc>
    8c98:	b	8ccc <perm5@@Base+0xec>
    8c9c:	ldr	r2, [r0, -r1, lsl #2]
    8ca0:	add	r1, r1, #1
    8ca4:	cmp	r2, #0
    8ca8:	beq	8ccc <perm5@@Base+0xec>
    8cac:	sub	r2, ip, r1, lsl #2
    8cb0:	sub	r5, lr, r1, lsl #2
    8cb4:	ldr	r2, [r2, #52]	; 0x34
    8cb8:	ldr	r5, [r5, #52]	; 0x34
    8cbc:	ldr	r4, [r3, r2, lsl #2]
    8cc0:	ldr	r6, [r3, r5, lsl #2]
    8cc4:	str	r6, [r3, r2, lsl #2]
    8cc8:	str	r4, [r3, r5, lsl #2]
    8ccc:	cmp	r1, #13
    8cd0:	bne	8c9c <perm5@@Base+0xbc>
    8cd4:	sub	r3, fp, #36	; 0x24
    8cd8:	ldm	r3, {r0, r1, r2, r3}
    8cdc:	add	r0, r0, r1, lsl #1
    8ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
    8ce4:	add	r0, r0, r2, lsl #2
    8ce8:	add	r0, r0, r3, lsl #3
    8cec:	add	r0, r0, r1, lsl #4
    8cf0:	sub	sp, fp, #16
    8cf4:	pop	{r4, r5, r6, sl, fp, pc}
    8cf8:	nop	{0}
    8cfc:	nop	{0}
    8d00:	andeq	r0, r0, r1
    8d04:	andeq	r0, r0, r2
    8d08:	andeq	r0, r0, r3
    8d0c:	andeq	r0, r0, r4
    8d10:	andeq	r0, r0, r5
    8d14:	andeq	r0, r0, r6
    8d18:	andeq	r0, r0, r7
    8d1c:	andeq	r0, r0, r8
    8d20:	andeq	r9, r0, ip, asr sp
    8d24:	muleq	r0, r0, sp

00008d28 <perm_table_init@@Base>:
    8d28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    8d2c:	add	fp, sp, #24
    8d30:	ldr	r8, [pc, #88]	; 8d90 <perm_table_init@@Base+0x68>
    8d34:	mov	r4, #0
    8d38:	ldr	r8, [pc, r8]
    8d3c:	b	8d50 <perm_table_init@@Base+0x28>
    8d40:	add	r4, r4, #1
    8d44:	add	r8, r8, #16384	; 0x4000
    8d48:	cmp	r4, #32
    8d4c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    8d50:	mov	r7, r8
    8d54:	mov	r5, #0
    8d58:	mov	r6, #0
    8d5c:	mov	r0, r4
    8d60:	mov	r1, r5
    8d64:	mov	r2, r6
    8d68:	bl	4758 <perm5@plt>
    8d6c:	strb	r0, [r7, r6]
    8d70:	add	r6, r6, #1
    8d74:	cmp	r6, #512	; 0x200
    8d78:	bne	8d5c <perm_table_init@@Base+0x34>
    8d7c:	add	r5, r5, #1
    8d80:	add	r7, r7, #512	; 0x200
    8d84:	cmp	r5, #32
    8d88:	bne	8d58 <perm_table_init@@Base+0x30>
    8d8c:	b	8d40 <perm_table_init@@Base+0x18>
    8d90:	andeq	r1, r2, r8, ror #7

00008d94 <fast_perm@@Base>:
    8d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d98:	add	fp, sp, #28
    8d9c:	sub	sp, sp, #4
    8da0:	mov	r6, r0
    8da4:	ldr	r0, [pc, #156]	; 8e48 <fast_perm@@Base+0xb4>
    8da8:	mov	r9, r1
    8dac:	ldr	r0, [pc, r0]
    8db0:	ldr	r0, [r0]
    8db4:	cmp	r0, #0
    8db8:	bne	8e2c <fast_perm@@Base+0x98>
    8dbc:	str	r2, [sp]
    8dc0:	mov	r7, #0
    8dc4:	ldr	r8, [pc, #128]	; 8e4c <fast_perm@@Base+0xb8>
    8dc8:	ldr	r8, [pc, r8]
    8dcc:	mov	sl, r8
    8dd0:	mov	r4, #0
    8dd4:	mov	r5, #0
    8dd8:	mov	r0, r7
    8ddc:	mov	r1, r4
    8de0:	mov	r2, r5
    8de4:	bl	4758 <perm5@plt>
    8de8:	strb	r0, [sl, r5]
    8dec:	add	r5, r5, #1
    8df0:	cmp	r5, #512	; 0x200
    8df4:	bne	8dd8 <fast_perm@@Base+0x44>
    8df8:	add	r4, r4, #1
    8dfc:	add	sl, sl, #512	; 0x200
    8e00:	cmp	r4, #32
    8e04:	bne	8dd4 <fast_perm@@Base+0x40>
    8e08:	add	r7, r7, #1
    8e0c:	add	r8, r8, #16384	; 0x4000
    8e10:	cmp	r7, #32
    8e14:	bne	8dcc <fast_perm@@Base+0x38>
    8e18:	ldr	r1, [pc, #48]	; 8e50 <fast_perm@@Base+0xbc>
    8e1c:	mov	r0, #1
    8e20:	ldr	r1, [pc, r1]
    8e24:	ldr	r2, [sp]
    8e28:	str	r0, [r1]
    8e2c:	ldr	r0, [pc, #32]	; 8e54 <fast_perm@@Base+0xc0>
    8e30:	ldr	r0, [pc, r0]
    8e34:	add	r0, r0, r6, lsl #14
    8e38:	add	r0, r0, r9, lsl #9
    8e3c:	ldrb	r0, [r0, r2]
    8e40:	sub	sp, fp, #28
    8e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e48:	andeq	r1, r2, r8, ror r3
    8e4c:	andeq	r1, r2, r8, asr r3
    8e50:	andeq	r1, r2, r4, lsl #6
    8e54:	strdeq	r1, [r2], -r0

00008e58 <gen_hop_pattern@@Base>:
    8e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e5c:	add	fp, sp, #28
    8e60:	sub	sp, sp, #84	; 0x54
    8e64:	mov	r9, r0
    8e68:	ldr	r0, [pc, #1184]	; 9310 <gen_hop_pattern@@Base+0x4b8>
    8e6c:	add	r0, pc, r0
    8e70:	bl	462c <puts@plt>
    8e74:	mov	r0, #134217728	; 0x8000000
    8e78:	bl	4638 <malloc@plt>
    8e7c:	str	r0, [r9, #372]	; 0x174
    8e80:	mov	r0, #0
    8e84:	mov	r1, #79	; 0x4f
    8e88:	mov	r2, #1
    8e8c:	mov	r4, #0
    8e90:	lsl	r3, r0, #1
    8e94:	movw	r7, #29865	; 0x74a9
    8e98:	uxtb	r3, r3
    8e9c:	movt	r7, #53092	; 0xcf64
    8ea0:	umull	r7, r5, r3, r7
    8ea4:	lsr	r7, r5, #6
    8ea8:	mls	r7, r7, r1, r3
    8eac:	ldrb	r3, [r9, #5]
    8eb0:	tst	r3, #8
    8eb4:	bne	8ec0 <gen_hop_pattern@@Base+0x68>
    8eb8:	mov	r3, r0
    8ebc:	b	8ee0 <gen_hop_pattern@@Base+0x88>
    8ec0:	add	r3, r9, r7, lsr #3
    8ec4:	and	r5, r7, #7
    8ec8:	ldrb	r3, [r3, #12]
    8ecc:	tst	r3, r2, lsl r5
    8ed0:	beq	8ee8 <gen_hop_pattern@@Base+0x90>
    8ed4:	add	r6, r4, #1
    8ed8:	mov	r3, r4
    8edc:	mov	r4, r6
    8ee0:	add	r3, r9, r3, lsl #2
    8ee4:	str	r7, [r3, #56]	; 0x38
    8ee8:	add	r0, r0, #1
    8eec:	cmp	r0, #79	; 0x4f
    8ef0:	bne	8e90 <gen_hop_pattern@@Base+0x38>
    8ef4:	ldr	r0, [r9, #24]
    8ef8:	mov	r7, #8
    8efc:	mov	sl, #0
    8f00:	ubfx	r1, r0, #19, #4
    8f04:	and	r5, r0, #1
    8f08:	str	r1, [r9, #36]	; 0x24
    8f0c:	ubfx	r1, r0, #10, #9
    8f10:	str	r1, [r9, #52]	; 0x34
    8f14:	ldrb	r1, [r9, #28]
    8f18:	orr	r1, r0, r1, lsl #24
    8f1c:	ubfx	r2, r1, #23, #5
    8f20:	bic	r1, r1, #-268435456	; 0xf0000000
    8f24:	and	r6, r7, r1, lsr #3
    8f28:	str	r2, [r9, #44]	; 0x2c
    8f2c:	mov	r2, #16
    8f30:	and	r3, r2, r1, lsr #4
    8f34:	orr	r6, r6, r5
    8f38:	orr	r3, r6, r3
    8f3c:	mov	r6, #4
    8f40:	and	r5, r6, r1, lsr #2
    8f44:	orr	r3, r3, r5
    8f48:	mov	r5, #2
    8f4c:	and	r4, r5, r1, lsr #1
    8f50:	orr	r3, r3, r4
    8f54:	mov	r4, #64	; 0x40
    8f58:	str	r3, [r9, #48]	; 0x30
    8f5c:	mov	r3, #32
    8f60:	and	r4, r4, r0, lsr #7
    8f64:	and	r3, r3, r0, lsr #6
    8f68:	and	r0, r2, r0, lsr #5
    8f6c:	and	r2, r7, r1, lsr #4
    8f70:	orr	r3, r4, r3
    8f74:	orr	r0, r3, r0
    8f78:	orr	r0, r0, r2
    8f7c:	and	r2, r6, r1, lsr #3
    8f80:	mov	r6, #0
    8f84:	orr	r0, r0, r2
    8f88:	and	r2, r5, r1, lsr #2
    8f8c:	ubfx	r1, r1, #1, #1
    8f90:	orr	r0, r0, r2
    8f94:	mov	r2, #0
    8f98:	orr	r0, r0, r1
    8f9c:	mov	r1, #0
    8fa0:	str	r0, [r9, #40]	; 0x28
    8fa4:	ldr	r3, [pc, #872]	; 9314 <gen_hop_pattern@@Base+0x4bc>
    8fa8:	ldr	r3, [pc, r3]
    8fac:	ldr	r7, [pc, #868]	; 9318 <gen_hop_pattern@@Base+0x4c0>
    8fb0:	ldr	r7, [pc, r7]
    8fb4:	str	r6, [fp, #-36]	; 0xffffffdc
    8fb8:	mov	r6, #0
    8fbc:	str	r6, [fp, #-32]	; 0xffffffe0
    8fc0:	str	r9, [sp, #56]	; 0x38
    8fc4:	mov	r6, #0
    8fc8:	str	r2, [sp, #4]
    8fcc:	str	sl, [sp, #12]
    8fd0:	str	r1, [sp, #8]
    8fd4:	ldr	r0, [r9, #44]	; 0x2c
    8fd8:	str	r6, [sp, #16]
    8fdc:	eor	r0, r0, r6
    8fe0:	mov	r6, #0
    8fe4:	str	r0, [fp, #-48]	; 0xffffffd0
    8fe8:	str	sl, [sp, #24]
    8fec:	str	r1, [sp, #20]
    8ff0:	ldr	r0, [r9, #48]	; 0x30
    8ff4:	str	r6, [sp, #36]	; 0x24
    8ff8:	eor	r0, r0, r6
    8ffc:	mov	r6, r1
    9000:	str	r0, [fp, #-40]	; 0xffffffd8
    9004:	eor	r0, r0, #31
    9008:	str	r0, [fp, #-44]	; 0xffffffd4
    900c:	str	sl, [sp, #32]
    9010:	str	r1, [sp, #28]
    9014:	mov	r1, #0
    9018:	ldr	r0, [r9, #52]	; 0x34
    901c:	str	r6, [sp, #44]	; 0x2c
    9020:	mov	r8, #0
    9024:	str	r1, [sp, #40]	; 0x28
    9028:	str	sl, [sp, #48]	; 0x30
    902c:	eor	r6, r0, r1
    9030:	str	r6, [fp, #-52]	; 0xffffffcc
    9034:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9038:	add	r0, r8, r0
    903c:	asr	r1, r0, #31
    9040:	add	r1, r0, r1, lsr #27
    9044:	bic	r1, r1, #31
    9048:	sub	r0, r0, r1
    904c:	ldr	r1, [r9, #36]	; 0x24
    9050:	eor	r1, r0, r1
    9054:	ldr	r0, [r3]
    9058:	cmp	r0, #0
    905c:	bne	90dc <gen_hop_pattern@@Base+0x284>
    9060:	mov	r5, #0
    9064:	mov	r9, r7
    9068:	str	r1, [sp, #52]	; 0x34
    906c:	mov	r4, r9
    9070:	mov	r6, #0
    9074:	mov	r7, #0
    9078:	mov	r0, r5
    907c:	mov	r1, r6
    9080:	mov	r2, r7
    9084:	bl	4758 <perm5@plt>
    9088:	strb	r0, [r4, r7]
    908c:	add	r7, r7, #1
    9090:	cmp	r7, #512	; 0x200
    9094:	bne	9078 <gen_hop_pattern@@Base+0x220>
    9098:	add	r6, r6, #1
    909c:	add	r4, r4, #512	; 0x200
    90a0:	cmp	r6, #32
    90a4:	bne	9074 <gen_hop_pattern@@Base+0x21c>
    90a8:	add	r5, r5, #1
    90ac:	add	r9, r9, #16384	; 0x4000
    90b0:	cmp	r5, #32
    90b4:	bne	906c <gen_hop_pattern@@Base+0x214>
    90b8:	ldr	r3, [pc, #604]	; 931c <gen_hop_pattern@@Base+0x4c4>
    90bc:	mov	r0, #1
    90c0:	ldr	r3, [pc, r3]
    90c4:	ldr	r9, [sp, #56]	; 0x38
    90c8:	str	r0, [r3]
    90cc:	ldr	r7, [pc, #588]	; 9320 <gen_hop_pattern@@Base+0x4c8>
    90d0:	ldr	r7, [pc, r7]
    90d4:	ldr	r6, [fp, #-52]	; 0xffffffcc
    90d8:	ldr	r1, [sp, #52]	; 0x34
    90dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    90e0:	add	r5, r7, r1, lsl #14
    90e4:	ldr	r1, [r9, #40]	; 0x28
    90e8:	add	r0, r5, r0, lsl #9
    90ec:	ldrb	r0, [r0, r6]
    90f0:	add	r0, r1, r0
    90f4:	ldrb	r1, [r9, #5]
    90f8:	tst	r1, #8
    90fc:	bne	9124 <gen_hop_pattern@@Base+0x2cc>
    9100:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9104:	add	r0, r0, r1
    9108:	movw	r1, #29865	; 0x74a9
    910c:	movt	r1, #53092	; 0xcf64
    9110:	umull	r1, r2, r0, r1
    9114:	lsr	r1, r2, #6
    9118:	mov	r2, #79	; 0x4f
    911c:	mls	r0, r1, r2, r0
    9120:	b	9138 <gen_hop_pattern@@Base+0x2e0>
    9124:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9128:	add	r0, r0, r1
    912c:	ldrb	r1, [r9, #22]
    9130:	udiv	r2, r0, r1
    9134:	mls	r0, r2, r1, r0
    9138:	add	r0, r9, r0, lsl #2
    913c:	ldr	r1, [r9, #372]	; 0x174
    9140:	ldr	r0, [r0, #56]	; 0x38
    9144:	strb	r0, [r1, sl]
    9148:	ldr	r0, [r3]
    914c:	cmp	r0, #0
    9150:	bne	91d0 <gen_hop_pattern@@Base+0x378>
    9154:	str	r5, [sp, #52]	; 0x34
    9158:	mov	r5, #0
    915c:	mov	r9, r7
    9160:	mov	r4, r9
    9164:	mov	r6, #0
    9168:	mov	r7, #0
    916c:	mov	r0, r5
    9170:	mov	r1, r6
    9174:	mov	r2, r7
    9178:	bl	4758 <perm5@plt>
    917c:	strb	r0, [r4, r7]
    9180:	add	r7, r7, #1
    9184:	cmp	r7, #512	; 0x200
    9188:	bne	916c <gen_hop_pattern@@Base+0x314>
    918c:	add	r6, r6, #1
    9190:	add	r4, r4, #512	; 0x200
    9194:	cmp	r6, #32
    9198:	bne	9168 <gen_hop_pattern@@Base+0x310>
    919c:	add	r5, r5, #1
    91a0:	add	r9, r9, #16384	; 0x4000
    91a4:	cmp	r5, #32
    91a8:	bne	9160 <gen_hop_pattern@@Base+0x308>
    91ac:	ldr	r3, [pc, #368]	; 9324 <gen_hop_pattern@@Base+0x4cc>
    91b0:	mov	r0, #1
    91b4:	ldr	r3, [pc, r3]
    91b8:	ldr	r9, [sp, #56]	; 0x38
    91bc:	str	r0, [r3]
    91c0:	ldr	r7, [pc, #352]	; 9328 <gen_hop_pattern@@Base+0x4d0>
    91c4:	ldr	r7, [pc, r7]
    91c8:	ldr	r6, [fp, #-52]	; 0xffffffcc
    91cc:	ldr	r5, [sp, #52]	; 0x34
    91d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    91d4:	ldr	r1, [r9, #40]	; 0x28
    91d8:	add	r0, r5, r0, lsl #9
    91dc:	ldrb	r0, [r0, r6]
    91e0:	add	r0, r0, r1
    91e4:	ldrb	r1, [r9, #5]
    91e8:	add	r0, r0, #32
    91ec:	tst	r1, #8
    91f0:	bne	9218 <gen_hop_pattern@@Base+0x3c0>
    91f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    91f8:	add	r0, r0, r1
    91fc:	movw	r1, #29865	; 0x74a9
    9200:	movt	r1, #53092	; 0xcf64
    9204:	umull	r1, r2, r0, r1
    9208:	lsr	r1, r2, #6
    920c:	mov	r2, #79	; 0x4f
    9210:	mls	r0, r1, r2, r0
    9214:	b	922c <gen_hop_pattern@@Base+0x3d4>
    9218:	ldr	r1, [fp, #-36]	; 0xffffffdc
    921c:	add	r0, r0, r1
    9220:	ldrb	r1, [r9, #22]
    9224:	udiv	r2, r0, r1
    9228:	mls	r0, r2, r1, r0
    922c:	add	r0, r9, r0, lsl #2
    9230:	ldr	r1, [r9, #372]	; 0x174
    9234:	add	r8, r8, #1
    9238:	orr	r2, sl, #1
    923c:	add	sl, sl, #2
    9240:	ldr	r0, [r0, #56]	; 0x38
    9244:	cmp	r8, #32
    9248:	strb	r0, [r1, r2]
    924c:	bne	9034 <gen_hop_pattern@@Base+0x1dc>
    9250:	ldr	r6, [sp, #44]	; 0x2c
    9254:	movw	r0, #29865	; 0x74a9
    9258:	movt	r0, #53092	; 0xcf64
    925c:	add	r6, r6, #16
    9260:	umull	r0, r1, r6, r0
    9264:	lsr	r0, r1, #6
    9268:	mov	r1, #79	; 0x4f
    926c:	mls	r2, r0, r1, r6
    9270:	ldrb	r0, [r9, #22]
    9274:	str	r2, [fp, #-32]	; 0xffffffe0
    9278:	udiv	r1, r2, r0
    927c:	mls	r0, r1, r0, r2
    9280:	str	r0, [fp, #-36]	; 0xffffffdc
    9284:	ldr	r1, [sp, #40]	; 0x28
    9288:	ldr	sl, [sp, #48]	; 0x30
    928c:	add	r1, r1, #1
    9290:	add	sl, sl, #64	; 0x40
    9294:	cmp	r1, #512	; 0x200
    9298:	bne	9018 <gen_hop_pattern@@Base+0x1c0>
    929c:	ldr	r6, [sp, #36]	; 0x24
    92a0:	ldr	sl, [sp, #32]
    92a4:	ldr	r1, [sp, #28]
    92a8:	add	r6, r6, #1
    92ac:	add	sl, sl, #32768	; 0x8000
    92b0:	add	r1, r1, #8192	; 0x2000
    92b4:	cmp	r6, #32
    92b8:	bne	8ff0 <gen_hop_pattern@@Base+0x198>
    92bc:	ldr	r6, [sp, #16]
    92c0:	ldr	sl, [sp, #24]
    92c4:	ldr	r1, [sp, #20]
    92c8:	add	r6, r6, #1
    92cc:	add	sl, sl, #1048576	; 0x100000
    92d0:	add	r1, r1, #262144	; 0x40000
    92d4:	cmp	r6, #32
    92d8:	bne	8fd4 <gen_hop_pattern@@Base+0x17c>
    92dc:	ldr	r2, [sp, #4]
    92e0:	ldr	sl, [sp, #12]
    92e4:	ldr	r1, [sp, #8]
    92e8:	add	r2, r2, #1
    92ec:	add	sl, sl, #33554432	; 0x2000000
    92f0:	add	r1, r1, #8388608	; 0x800000
    92f4:	cmp	r2, #4
    92f8:	bne	8fc4 <gen_hop_pattern@@Base+0x16c>
    92fc:	ldr	r0, [pc, #40]	; 932c <gen_hop_pattern@@Base+0x4d4>
    9300:	add	r0, pc, r0
    9304:	sub	sp, fp, #28
    9308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    930c:	b	462c <puts@plt>
    9310:	andeq	r9, r0, ip, lsl sp
    9314:	andeq	r1, r2, ip, ror r1
    9318:	andeq	r1, r2, r0, ror r1
    931c:	andeq	r1, r2, r4, rrx
    9320:	andeq	r1, r2, r0, asr r0
    9324:	andeq	r0, r2, r0, ror pc
    9328:	andeq	r0, r2, ip, asr pc
    932c:			; <UNDEFINED> instruction: 0x000098b8

00009330 <single_hop@@Base>:
    9330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9334:	add	fp, sp, #28
    9338:	sub	sp, sp, #20
    933c:	mov	r8, r1
    9340:	mov	r5, r0
    9344:	ldr	r0, [r1, #36]	; 0x24
    9348:	ldr	r1, [r1, #44]	; 0x2c
    934c:	movw	ip, #65520	; 0xfff0
    9350:	ldr	r2, [r8, #48]	; 0x30
    9354:	ldr	r3, [r8, #52]	; 0x34
    9358:	ubfx	r4, r5, #1, #1
    935c:	movt	ip, #511	; 0x1ff
    9360:	rsb	r7, r4, r4, lsl #5
    9364:	eor	r1, r1, r5, lsr #21
    9368:	add	r1, r1, r5, lsr #2
    936c:	eor	r2, r2, r5, lsr #16
    9370:	eor	r3, r3, r5, lsr #7
    9374:	and	r1, r1, #31
    9378:	and	r2, r2, #31
    937c:	bfc	r3, #9, #23
    9380:	eor	r6, r1, r0
    9384:	ldr	r0, [pc, #248]	; 9484 <single_hop@@Base+0x154>
    9388:	eor	r7, r2, r7
    938c:	ldr	r0, [pc, r0]
    9390:	ldr	r0, [r0]
    9394:	cmp	r0, #0
    9398:	bne	9428 <single_hop@@Base+0xf8>
    939c:	add	r0, sp, #8
    93a0:	str	r6, [sp, #4]
    93a4:	mov	r6, #0
    93a8:	stm	r0, {r3, r4, r7}
    93ac:	ldr	sl, [pc, #212]	; 9488 <single_hop@@Base+0x158>
    93b0:	ldr	sl, [pc, sl]
    93b4:	mov	r9, sl
    93b8:	mov	r7, #0
    93bc:	mov	r4, #0
    93c0:	mov	r0, r6
    93c4:	mov	r1, r7
    93c8:	mov	r2, r4
    93cc:	bl	4758 <perm5@plt>
    93d0:	strb	r0, [r9, r4]
    93d4:	add	r4, r4, #1
    93d8:	cmp	r4, #512	; 0x200
    93dc:	bne	93c0 <single_hop@@Base+0x90>
    93e0:	add	r7, r7, #1
    93e4:	add	r9, r9, #512	; 0x200
    93e8:	cmp	r7, #32
    93ec:	bne	93bc <single_hop@@Base+0x8c>
    93f0:	add	r6, r6, #1
    93f4:	add	sl, sl, #16384	; 0x4000
    93f8:	cmp	r6, #32
    93fc:	bne	93b4 <single_hop@@Base+0x84>
    9400:	ldr	r1, [pc, #132]	; 948c <single_hop@@Base+0x15c>
    9404:	movw	r6, #65520	; 0xfff0
    9408:	mov	r0, #1
    940c:	add	r7, sp, #8
    9410:	movt	r6, #511	; 0x1ff
    9414:	mov	ip, r6
    9418:	ldr	r1, [pc, r1]
    941c:	str	r0, [r1]
    9420:	ldm	r7, {r3, r4, r7}
    9424:	ldr	r6, [sp, #4]
    9428:	ldr	r2, [pc, #96]	; 9490 <single_hop@@Base+0x160>
    942c:	and	r1, ip, r5, lsr #3
    9430:	lsl	r0, r4, #5
    9434:	ldr	r2, [pc, r2]
    9438:	add	r2, r2, r6, lsl #14
    943c:	add	r2, r2, r7, lsl #9
    9440:	ldrb	r7, [r8, #5]
    9444:	ldrb	r3, [r2, r3]
    9448:	mov	r2, #79	; 0x4f
    944c:	tst	r7, #8
    9450:	ldrbne	r2, [r8, #22]
    9454:	add	r0, r0, r3
    9458:	udiv	r7, r1, r2
    945c:	mls	r1, r7, r2, r1
    9460:	add	r0, r0, r1
    9464:	ldr	r1, [r8, #40]	; 0x28
    9468:	add	r0, r0, r1
    946c:	udiv	r1, r0, r2
    9470:	mls	r0, r1, r2, r0
    9474:	add	r0, r8, r0, lsl #2
    9478:	ldrb	r0, [r0, #56]	; 0x38
    947c:	sub	sp, fp, #28
    9480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9484:	muleq	r2, r8, sp
    9488:	andeq	r0, r2, r0, ror sp
    948c:	andeq	r0, r2, ip, lsl #26
    9490:	andeq	r0, r2, ip, ror #25

00009494 <hop@@Base>:
    9494:	ldr	r1, [r1, #372]	; 0x174
    9498:	ldrb	r0, [r1, r0]
    949c:	bx	lr

000094a0 <btbb_init_hop_reversal@@Base>:
    94a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94a4:	add	fp, sp, #28
    94a8:	sub	sp, sp, #4
    94ac:	mov	r8, r0
    94b0:	mov	r0, r1
    94b4:	mov	sl, r1
    94b8:	bl	4620 <get_hop_pattern@plt>
    94bc:	movw	r0, #15728	; 0x3d70
    94c0:	cmp	r8, #0
    94c4:	movt	r0, #10
    94c8:	movweq	r0, #15760	; 0x3d90
    94cc:	movteq	r0, #3
    94d0:	bl	4638 <malloc@plt>
    94d4:	str	r0, [sl, #32]
    94d8:	movw	r1, #5648	; 0x1610
    94dc:	movw	r2, #5652	; 0x1614
    94e0:	movw	r9, #65472	; 0xffc0
    94e4:	movw	ip, #34079	; 0x851f
    94e8:	mov	lr, #25
    94ec:	ldr	r1, [sl, r1]
    94f0:	ldr	r2, [sl, r2]
    94f4:	ldr	r5, [sl, #372]	; 0x174
    94f8:	movt	r9, #2047	; 0x7ff
    94fc:	movt	ip, #20971	; 0x51eb
    9500:	add	r1, r2, r1
    9504:	and	r3, r1, #63	; 0x3f
    9508:	movw	r1, #4648	; 0x1228
    950c:	ldrb	r2, [sl, r1]
    9510:	mov	r1, #0
    9514:	ldr	r6, [sl, #8]
    9518:	ldrb	r7, [r5, r3]
    951c:	cmp	r6, #0
    9520:	addne	r6, r7, #24
    9524:	umullne	r7, r4, r6, ip
    9528:	lsrne	r4, r4, #3
    952c:	mlsne	r4, r4, lr, r6
    9530:	addne	r7, r4, #26
    9534:	uxtb	r4, r7
    9538:	cmp	r4, r2
    953c:	add	r4, r3, #64	; 0x40
    9540:	streq	r3, [r0, r1, lsl #2]
    9544:	addeq	r1, r1, #1
    9548:	cmp	r3, r9
    954c:	mov	r3, r4
    9550:	bcc	9514 <btbb_init_hop_reversal@@Base+0x74>
    9554:	mov	r0, #0
    9558:	movw	r3, #56799	; 0xdddf
    955c:	cmp	r8, #0
    9560:	str	r0, [sl, #388]	; 0x184
    9564:	str	r1, [sl, #376]	; 0x178
    9568:	mov	r0, #8704	; 0x2200
    956c:	movt	r3, #65535	; 0xffff
    9570:	ldr	r2, [sl, #4]
    9574:	movweq	r0, #512	; 0x200
    9578:	and	r2, r2, r3
    957c:	orr	r0, r2, r0
    9580:	str	r0, [sl, #4]
    9584:	ldr	r0, [pc, #16]	; 959c <btbb_init_hop_reversal@@Base+0xfc>
    9588:	add	r0, pc, r0
    958c:	bl	4500 <printf@plt>
    9590:	ldr	r0, [sl, #376]	; 0x178
    9594:	sub	sp, fp, #28
    9598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    959c:	andeq	r9, r0, ip, asr #9

000095a0 <try_hop@@Base>:
    95a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    95a4:	add	fp, sp, #28
    95a8:	sub	sp, sp, #4
    95ac:	ldrb	r7, [r1, #28]
    95b0:	mov	r4, r1
    95b4:	mov	r5, r0
    95b8:	bl	4608 <btbb_decode@plt>
    95bc:	ldr	r6, [r4, #4]
    95c0:	tst	r6, #512	; 0x200
    95c4:	bne	96c8 <try_hop@@Base+0x128>
    95c8:	mov	r0, r5
    95cc:	mov	r1, r4
    95d0:	bl	4578 <btbb_uap_from_header@plt>
    95d4:	tst	r6, #16
    95d8:	bne	9718 <try_hop@@Base+0x178>
    95dc:	cmp	r0, #0
    95e0:	beq	9744 <try_hop@@Base+0x1a4>
    95e4:	ldrb	r0, [r4, #28]
    95e8:	cmp	r7, r0
    95ec:	bne	9760 <try_hop@@Base+0x1c0>
    95f0:	mov	r0, r4
    95f4:	str	r7, [sp]
    95f8:	bl	4620 <get_hop_pattern@plt>
    95fc:	movw	r0, #15760	; 0x3d90
    9600:	movt	r0, #3
    9604:	bl	4638 <malloc@plt>
    9608:	str	r0, [r4, #32]
    960c:	movw	r1, #5648	; 0x1610
    9610:	movw	r2, #5652	; 0x1614
    9614:	movw	r9, #65472	; 0xffc0
    9618:	movw	ip, #34079	; 0x851f
    961c:	mov	lr, #25
    9620:	ldr	r1, [r4, r1]
    9624:	ldr	r2, [r4, r2]
    9628:	ldr	r5, [r4, #8]
    962c:	ldr	r6, [r4, #372]	; 0x174
    9630:	movt	r9, #2047	; 0x7ff
    9634:	movt	ip, #20971	; 0x51eb
    9638:	add	r1, r2, r1
    963c:	and	r3, r1, #63	; 0x3f
    9640:	movw	r1, #4648	; 0x1228
    9644:	ldrb	sl, [r4, r1]
    9648:	mov	r1, #0
    964c:	ldrb	r7, [r6, r3]
    9650:	cmp	r5, #0
    9654:	addne	r7, r7, #24
    9658:	umullne	r2, r8, r7, ip
    965c:	lsrne	r2, r8, #3
    9660:	mlsne	r2, r2, lr, r7
    9664:	addne	r7, r2, #26
    9668:	uxtb	r2, r7
    966c:	cmp	r2, sl
    9670:	add	r2, r3, #64	; 0x40
    9674:	streq	r3, [r0, r1, lsl #2]
    9678:	addeq	r1, r1, #1
    967c:	cmp	r3, r9
    9680:	mov	r3, r2
    9684:	bcc	964c <try_hop@@Base+0xac>
    9688:	mov	r0, #0
    968c:	movw	r2, #56799	; 0xdddf
    9690:	str	r0, [r4, #388]	; 0x184
    9694:	str	r1, [r4, #376]	; 0x178
    9698:	movt	r2, #65535	; 0xffff
    969c:	ldr	r0, [r4, #4]
    96a0:	and	r0, r0, r2
    96a4:	orr	r0, r0, #512	; 0x200
    96a8:	str	r0, [r4, #4]
    96ac:	ldr	r0, [pc, #196]	; 9778 <try_hop@@Base+0x1d8>
    96b0:	add	r0, pc, r0
    96b4:	bl	4500 <printf@plt>
    96b8:	mov	r0, r4
    96bc:	bl	4614 <btbb_winnow@plt>
    96c0:	ldr	r7, [sp]
    96c4:	b	9744 <try_hop@@Base+0x1a4>
    96c8:	movw	r1, #5652	; 0x1614
    96cc:	ldr	r0, [r4, #380]	; 0x17c
    96d0:	ldr	r2, [r5, #2816]	; 0xb00
    96d4:	ldr	r1, [r4, r1]
    96d8:	add	r0, r4, r0, lsl #2
    96dc:	sub	r1, r2, r1
    96e0:	movw	r2, #4648	; 0x1228
    96e4:	str	r1, [r0, #648]	; 0x288
    96e8:	ldr	r0, [r4, #380]	; 0x17c
    96ec:	ldrb	r1, [r5, #8]
    96f0:	add	r0, r4, r0
    96f4:	strb	r1, [r0, r2]
    96f8:	ldr	r0, [r4, #380]	; 0x17c
    96fc:	ldr	r1, [r4, #384]	; 0x180
    9700:	add	r0, r0, #1
    9704:	add	r1, r1, #1
    9708:	str	r0, [r4, #380]	; 0x17c
    970c:	mov	r0, r4
    9710:	str	r1, [r4, #384]	; 0x180
    9714:	bl	4614 <btbb_winnow@plt>
    9718:	ldrb	r0, [r4, #4]
    971c:	tst	r0, #32
    9720:	beq	9744 <try_hop@@Base+0x1a4>
    9724:	ldr	r0, [pc, #68]	; 9770 <try_hop@@Base+0x1d0>
    9728:	add	r0, pc, r0
    972c:	bl	462c <puts@plt>
    9730:	movw	r0, #5648	; 0x1610
    9734:	ldr	r1, [r4, r0]
    9738:	ldr	r0, [pc, #52]	; 9774 <try_hop@@Base+0x1d4>
    973c:	add	r0, pc, r0
    9740:	bl	4500 <printf@plt>
    9744:	ldr	r0, [r4, #4]
    9748:	tst	r0, #4
    974c:	orreq	r0, r0, #4
    9750:	strbeq	r7, [r4, #28]
    9754:	streq	r0, [r4, #4]
    9758:	sub	sp, fp, #28
    975c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9760:	ldr	r0, [pc, #20]	; 977c <try_hop@@Base+0x1dc>
    9764:	add	r0, pc, r0
    9768:	bl	462c <puts@plt>
    976c:	b	9744 <try_hop@@Base+0x1a4>
    9770:	andeq	r9, r0, pc, lsl r4
    9774:	andeq	r9, r0, r7, lsr r3
    9778:	andeq	r9, r0, r4, lsr #7
    977c:	andeq	r9, r0, r4, ror r4

00009780 <btbb_winnow@@Base>:
    9780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9784:	add	fp, sp, #28
    9788:	sub	sp, sp, #4
    978c:	mov	r9, r0
    9790:	ldr	r1, [r0, #376]	; 0x178
    9794:	ldr	r2, [r0, #380]	; 0x17c
    9798:	ldr	r0, [r0, #388]	; 0x184
    979c:	cmp	r0, r2
    97a0:	bge	9914 <btbb_winnow@@Base+0x194>
    97a4:	cmp	r1, #1
    97a8:	blt	98c4 <btbb_winnow@@Base+0x144>
    97ac:	mov	r8, #25
    97b0:	add	r2, r9, r0
    97b4:	movw	r3, #4648	; 0x1228
    97b8:	add	r0, r9, r0, lsl #2
    97bc:	ldr	r5, [r9, #372]	; 0x174
    97c0:	mov	r6, #0
    97c4:	mov	r7, #0
    97c8:	ldrb	lr, [r2, r3]
    97cc:	ldr	ip, [r0, #648]	; 0x288
    97d0:	ldr	r3, [r9, #32]
    97d4:	ldr	r4, [r3, r7, lsl #2]
    97d8:	ldr	r2, [r9, #8]
    97dc:	add	r0, r4, ip
    97e0:	cmp	r2, #0
    97e4:	bic	r0, r0, #-134217728	; 0xf8000000
    97e8:	ldrb	r0, [r5, r0]
    97ec:	beq	980c <btbb_winnow@@Base+0x8c>
    97f0:	movw	r2, #34079	; 0x851f
    97f4:	add	r0, r0, #24
    97f8:	movt	r2, #20971	; 0x51eb
    97fc:	umull	r2, sl, r0, r2
    9800:	lsr	r2, sl, #3
    9804:	mls	r0, r2, r8, r0
    9808:	add	r0, r0, #26
    980c:	uxtb	r0, r0
    9810:	add	r7, r7, #1
    9814:	cmp	r0, lr
    9818:	streq	r4, [r3, r6, lsl #2]
    981c:	addeq	r6, r6, #1
    9820:	ldreq	r1, [r9, #376]	; 0x178
    9824:	cmp	r7, r1
    9828:	blt	97d4 <btbb_winnow@@Base+0x54>
    982c:	cmp	r6, #0
    9830:	str	r6, [r9, #376]	; 0x178
    9834:	beq	98cc <btbb_winnow@@Base+0x14c>
    9838:	cmp	r6, #1
    983c:	beq	9924 <btbb_winnow@@Base+0x1a4>
    9840:	cmp	r6, #2
    9844:	blt	9918 <btbb_winnow@@Base+0x198>
    9848:	ldr	r1, [r9, #380]	; 0x17c
    984c:	cmp	r1, #1
    9850:	blt	98a4 <btbb_winnow@@Base+0x124>
    9854:	ldr	r0, [r9, #388]	; 0x184
    9858:	movw	r3, #4648	; 0x1228
    985c:	sub	r0, r0, #1
    9860:	add	r2, r9, r0
    9864:	ldrb	r2, [r2, r3]
    9868:	cmp	lr, r2
    986c:	bne	98a4 <btbb_winnow@@Base+0x124>
    9870:	add	r0, r9, r0, lsl #2
    9874:	ldr	r0, [r0, #648]	; 0x288
    9878:	add	r0, r0, #1
    987c:	cmp	ip, r0
    9880:	ldreq	r0, [r9, #4]
    9884:	andseq	r2, r0, #4096	; 0x1000
    9888:	bne	98a4 <btbb_winnow@@Base+0x124>
    988c:	orr	r0, r0, #4096	; 0x1000
    9890:	str	r0, [r9, #4]
    9894:	ldr	r0, [pc, #204]	; 9968 <btbb_winnow@@Base+0x1e8>
    9898:	add	r0, pc, r0
    989c:	bl	462c <puts@plt>
    98a0:	ldr	r1, [r9, #380]	; 0x17c
    98a4:	ldr	r0, [r9, #388]	; 0x184
    98a8:	add	r0, r0, #1
    98ac:	cmp	r0, r1
    98b0:	str	r0, [r9, #388]	; 0x184
    98b4:	bge	9918 <btbb_winnow@@Base+0x198>
    98b8:	ldr	r1, [r9, #376]	; 0x178
    98bc:	cmp	r1, #0
    98c0:	bgt	97b0 <btbb_winnow@@Base+0x30>
    98c4:	mov	r0, #0
    98c8:	str	r0, [r9, #376]	; 0x178
    98cc:	ldr	r0, [r9, #4]
    98d0:	tst	r0, #512	; 0x200
    98d4:	beq	98ec <btbb_winnow@@Base+0x16c>
    98d8:	ldr	r0, [r9, #32]
    98dc:	bl	4548 <free@plt>
    98e0:	mov	r0, #0
    98e4:	str	r0, [r9, #372]	; 0x174
    98e8:	ldr	r0, [r9, #4]
    98ec:	movw	r1, #61899	; 0xf1cb
    98f0:	mov	r2, #2048	; 0x800
    98f4:	mov	r6, #0
    98f8:	movt	r1, #65535	; 0xffff
    98fc:	str	r6, [r9, #380]	; 0x17c
    9900:	and	r1, r0, r1
    9904:	and	r0, r2, r0, lsr #1
    9908:	orr	r0, r0, r1
    990c:	str	r0, [r9, #4]
    9910:	b	9918 <btbb_winnow@@Base+0x198>
    9914:	mov	r6, r1
    9918:	mov	r0, r6
    991c:	sub	sp, fp, #28
    9920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9924:	movw	r0, #5652	; 0x1614
    9928:	ldr	r1, [r3]
    992c:	ldr	r0, [r9, r0]
    9930:	sub	r0, r1, r0
    9934:	movw	r1, #5648	; 0x1610
    9938:	lsl	r0, r0, #1
    993c:	str	r0, [r9, r1]
    9940:	ldr	r1, [r3]
    9944:	ldr	r0, [pc, #24]	; 9964 <btbb_winnow@@Base+0x1e4>
    9948:	add	r0, pc, r0
    994c:	bl	4500 <printf@plt>
    9950:	ldr	r0, [r9, #4]
    9954:	mov	r6, #1
    9958:	orr	r0, r0, #32
    995c:	str	r0, [r9, #4]
    9960:	b	9918 <btbb_winnow@@Base+0x198>
    9964:	andeq	r9, r0, r3, ror #3
    9968:	andeq	r9, r0, r0, ror #6

0000996c <btbb_uap_from_header@@Base>:
    996c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9970:	add	fp, sp, #28
    9974:	sub	sp, sp, #12
    9978:	mov	r5, r0
    997c:	ldr	r0, [r0, #2816]	; 0xb00
    9980:	mov	r4, r1
    9984:	mov	r2, #1
    9988:	str	r0, [sp, #8]
    998c:	ldrb	r0, [r1, #5]
    9990:	tst	r0, #4
    9994:	ldreq	r1, [sp, #8]
    9998:	movweq	r0, #5652	; 0x1614
    999c:	streq	r1, [r4, r0]
    99a0:	ldrb	r0, [r5, #8]
    99a4:	and	r1, r0, #7
    99a8:	add	r0, r4, r0, lsr #3
    99ac:	ldrb	r3, [r0, #12]!
    99b0:	tst	r3, r2, lsl r1
    99b4:	bne	99d0 <btbb_uap_from_header@@Base+0x64>
    99b8:	lsl	r1, r2, r1
    99bc:	orr	r1, r3, r1
    99c0:	strb	r1, [r0]
    99c4:	ldrb	r0, [r4, #22]
    99c8:	add	r0, r0, #1
    99cc:	strb	r0, [r4, #22]
    99d0:	ldr	r0, [r4, #380]	; 0x17c
    99d4:	cmp	r0, #1000	; 0x3e8
    99d8:	bge	9b58 <btbb_uap_from_header@@Base+0x1ec>
    99dc:	movw	r1, #5652	; 0x1614
    99e0:	mov	r2, r4
    99e4:	add	r0, r4, r0, lsl #2
    99e8:	add	r9, r4, #392	; 0x188
    99ec:	mov	r8, #0
    99f0:	mov	sl, #0
    99f4:	ldr	r1, [r2, r1]!
    99f8:	str	r2, [sp, #4]
    99fc:	ldr	r2, [sp, #8]
    9a00:	sub	r1, r2, r1
    9a04:	movw	r2, #4648	; 0x1228
    9a08:	str	r1, [r0, #648]	; 0x288
    9a0c:	ldr	r0, [r4, #380]	; 0x17c
    9a10:	ldrb	r1, [r5, #8]
    9a14:	add	r0, r4, r0
    9a18:	strb	r1, [r0, r2]
    9a1c:	ldr	r0, [r4, #380]	; 0x17c
    9a20:	ldr	r1, [r4, #384]	; 0x180
    9a24:	add	r0, r0, #1
    9a28:	add	r1, r1, #1
    9a2c:	str	r0, [r4, #380]	; 0x17c
    9a30:	mov	r0, #0
    9a34:	str	r1, [r4, #384]	; 0x180
    9a38:	str	r0, [sp]
    9a3c:	ldr	r0, [r9, r8, lsl #2]
    9a40:	cmn	r0, #1
    9a44:	bgt	9a54 <btbb_uap_from_header@@Base+0xe8>
    9a48:	ldr	r2, [r4, #4]
    9a4c:	tst	r2, #1024	; 0x400
    9a50:	bne	9af0 <btbb_uap_from_header@@Base+0x184>
    9a54:	ldr	r1, [sp, #4]
    9a58:	ldr	r0, [sp, #8]
    9a5c:	ldr	r1, [r1]
    9a60:	add	r0, r0, r8
    9a64:	sub	r0, r0, r1
    9a68:	mov	r1, r5
    9a6c:	and	r7, r0, #63	; 0x3f
    9a70:	mov	r0, r7
    9a74:	bl	47d0 <try_clock@plt>
    9a78:	ldr	r2, [r4, #4]
    9a7c:	mov	r6, r0
    9a80:	tst	r2, #1024	; 0x400
    9a84:	beq	9a98 <btbb_uap_from_header@@Base+0x12c>
    9a88:	ldr	r1, [r9, r8, lsl #2]
    9a8c:	mvn	r0, #0
    9a90:	cmp	r1, r6
    9a94:	bne	9aa8 <btbb_uap_from_header@@Base+0x13c>
    9a98:	mov	r0, r7
    9a9c:	mov	r1, r5
    9aa0:	bl	45fc <crc_check@plt>
    9aa4:	ldr	r2, [r4, #4]
    9aa8:	ands	r3, r2, #4
    9aac:	beq	9ac0 <btbb_uap_from_header@@Base+0x154>
    9ab0:	ldrb	r1, [r4, #28]
    9ab4:	cmp	r6, r1
    9ab8:	mvn	r1, #0
    9abc:	movne	r0, r1
    9ac0:	sub	r1, r0, #1
    9ac4:	cmp	r1, #2
    9ac8:	bcc	9ae4 <btbb_uap_from_header@@Base+0x178>
    9acc:	add	r0, r0, #1
    9ad0:	cmp	r0, #1
    9ad4:	bhi	9bb0 <btbb_uap_from_header@@Base+0x244>
    9ad8:	mvn	r0, #0
    9adc:	str	r0, [r9, r8, lsl #2]
    9ae0:	b	9af0 <btbb_uap_from_header@@Base+0x184>
    9ae4:	add	sl, sl, #1
    9ae8:	str	r6, [r9, r8, lsl #2]
    9aec:	str	r8, [sp]
    9af0:	add	r8, r8, #1
    9af4:	cmp	r8, #64	; 0x40
    9af8:	bcc	9a3c <btbb_uap_from_header@@Base+0xd0>
    9afc:	orr	r1, r2, #1024	; 0x400
    9b00:	cmp	sl, #0
    9b04:	str	r1, [r4, #4]
    9b08:	beq	9c04 <btbb_uap_from_header@@Base+0x298>
    9b0c:	mov	r0, #0
    9b10:	cmp	sl, #1
    9b14:	bne	9ba8 <btbb_uap_from_header@@Base+0x23c>
    9b18:	ldr	r0, [sp, #4]
    9b1c:	ldr	r5, [sp]
    9b20:	tst	r2, #4
    9b24:	ldr	r0, [r0]
    9b28:	sub	r0, r5, r0
    9b2c:	and	r1, r0, #63	; 0x3f
    9b30:	movw	r0, #5648	; 0x1610
    9b34:	str	r1, [r4, r0]
    9b38:	bne	9c10 <btbb_uap_from_header@@Base+0x2a4>
    9b3c:	add	r5, r4, r5, lsl #2
    9b40:	ldr	r2, [r4, #384]	; 0x180
    9b44:	ldr	r1, [r5, #392]!	; 0x188
    9b48:	ldr	r0, [pc, #268]	; 9c5c <btbb_uap_from_header@@Base+0x2f0>
    9b4c:	add	r0, pc, r0
    9b50:	bl	4500 <printf@plt>
    9b54:	b	9c28 <btbb_uap_from_header@@Base+0x2bc>
    9b58:	ldr	r0, [pc, #240]	; 9c50 <btbb_uap_from_header@@Base+0x2e4>
    9b5c:	add	r0, pc, r0
    9b60:	bl	462c <puts@plt>
    9b64:	ldr	r1, [r4, #4]
    9b68:	tst	r1, #512	; 0x200
    9b6c:	beq	9b84 <btbb_uap_from_header@@Base+0x218>
    9b70:	ldr	r0, [r4, #32]
    9b74:	bl	4548 <free@plt>
    9b78:	mov	r0, #0
    9b7c:	str	r0, [r4, #372]	; 0x174
    9b80:	ldr	r1, [r4, #4]
    9b84:	movw	r2, #61899	; 0xf1cb
    9b88:	mov	r3, #2048	; 0x800
    9b8c:	mov	r0, #0
    9b90:	movt	r2, #65535	; 0xffff
    9b94:	str	r0, [r4, #380]	; 0x17c
    9b98:	and	r2, r1, r2
    9b9c:	and	r1, r3, r1, lsr #1
    9ba0:	orr	r1, r1, r2
    9ba4:	str	r1, [r4, #4]
    9ba8:	sub	sp, fp, #28
    9bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9bb0:	ldr	r0, [sp, #4]
    9bb4:	cmp	r3, #0
    9bb8:	ldr	r0, [r0]
    9bbc:	sub	r0, r8, r0
    9bc0:	and	r1, r0, #63	; 0x3f
    9bc4:	movw	r0, #5648	; 0x1610
    9bc8:	str	r1, [r4, r0]
    9bcc:	bne	9be4 <btbb_uap_from_header@@Base+0x278>
    9bd0:	ldr	r2, [r4, #384]	; 0x180
    9bd4:	ldr	r0, [pc, #120]	; 9c54 <btbb_uap_from_header@@Base+0x2e8>
    9bd8:	mov	r1, r6
    9bdc:	add	r0, pc, r0
    9be0:	b	9bf0 <btbb_uap_from_header@@Base+0x284>
    9be4:	ldr	r2, [r4, #384]	; 0x180
    9be8:	ldr	r0, [pc, #104]	; 9c58 <btbb_uap_from_header@@Base+0x2ec>
    9bec:	add	r0, pc, r0
    9bf0:	bl	4500 <printf@plt>
    9bf4:	mov	r0, #0
    9bf8:	strb	r6, [r4, #28]
    9bfc:	str	r0, [r4, #384]	; 0x180
    9c00:	b	9c38 <btbb_uap_from_header@@Base+0x2cc>
    9c04:	tst	r2, #512	; 0x200
    9c08:	bne	9b70 <btbb_uap_from_header@@Base+0x204>
    9c0c:	b	9b84 <btbb_uap_from_header@@Base+0x218>
    9c10:	ldr	r2, [r4, #384]	; 0x180
    9c14:	ldr	r0, [pc, #68]	; 9c60 <btbb_uap_from_header@@Base+0x2f4>
    9c18:	add	r0, pc, r0
    9c1c:	bl	4500 <printf@plt>
    9c20:	add	r0, r4, r5, lsl #2
    9c24:	add	r5, r0, #392	; 0x188
    9c28:	ldr	r0, [r5]
    9c2c:	mov	r1, #0
    9c30:	str	r1, [r4, #384]	; 0x180
    9c34:	strb	r0, [r4, #28]
    9c38:	ldr	r0, [r4, #4]
    9c3c:	orr	r0, r0, #20
    9c40:	str	r0, [r4, #4]
    9c44:	mov	r0, #1
    9c48:	sub	sp, fp, #28
    9c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9c50:	andeq	r9, r0, ip, asr #1
    9c54:	andeq	r8, r0, fp, lsr #29
    9c58:	ldrdeq	r8, [r0], -r2
    9c5c:	andeq	r8, r0, r8, asr #30
    9c60:			; <UNDEFINED> instruction: 0x00008eb3

00009c64 <btbb_print_afh_map@@Base>:
    9c64:	push	{r4, r5, r6, r7, fp, lr}
    9c68:	add	fp, sp, #16
    9c6c:	sub	sp, sp, #32
    9c70:	ldrb	ip, [r0, #15]
    9c74:	ldrb	lr, [r0, #16]
    9c78:	ldrb	r1, [r0, #12]
    9c7c:	ldrb	r2, [r0, #13]
    9c80:	ldrb	r3, [r0, #14]
    9c84:	ldrb	r4, [r0, #17]
    9c88:	ldrb	r5, [r0, #18]
    9c8c:	ldrb	r6, [r0, #19]
    9c90:	ldrb	r7, [r0, #20]
    9c94:	ldrb	r0, [r0, #21]
    9c98:	stm	sp, {ip, lr}
    9c9c:	add	ip, sp, #8
    9ca0:	stm	ip, {r4, r5, r6, r7}
    9ca4:	str	r0, [sp, #24]
    9ca8:	ldr	r0, [pc, #12]	; 9cbc <btbb_print_afh_map@@Base+0x58>
    9cac:	add	r0, pc, r0
    9cb0:	bl	4500 <printf@plt>
    9cb4:	sub	sp, fp, #16
    9cb8:	pop	{r4, r5, r6, r7, fp, pc}
    9cbc:	andeq	r8, r0, sl, asr #28

00009cc0 <get_piconet@@Base>:
    9cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9cc4:	add	fp, sp, #28
    9cc8:	sub	sp, sp, #20
    9ccc:	str	r0, [sp, #16]
    9cd0:	movw	sl, #63341	; 0xf76d
    9cd4:	movw	r1, #16653	; 0x410d
    9cd8:	movw	r2, #47814	; 0xbac6
    9cdc:	movw	r8, #48883	; 0xbef3
    9ce0:	mov	r6, r0
    9ce4:	ldr	r7, [pc, #1132]	; a158 <get_piconet@@Base+0x498>
    9ce8:	movt	sl, #7
    9cec:	movt	r1, #274	; 0x112
    9cf0:	movt	r2, #40777	; 0x9f49
    9cf4:	movt	r8, #65261	; 0xfeed
    9cf8:	ldr	r7, [pc, r7]
    9cfc:	cmp	r7, #0
    9d00:	beq	9dd8 <get_piconet@@Base+0x118>
    9d04:	and	r0, r6, #-16777216	; 0xff000000
    9d08:	add	r0, r0, r1
    9d0c:	and	r1, r6, #16711680	; 0xff0000
    9d10:	add	r0, r0, r1
    9d14:	and	r1, r6, #65280	; 0xff00
    9d18:	add	r0, r0, r1
    9d1c:	uxtab	r0, r0, r6
    9d20:	eor	r0, r0, sl
    9d24:	sub	r1, r2, r0
    9d28:	sub	r2, r8, r0
    9d2c:	eor	r1, r1, r0, lsl #8
    9d30:	sub	r2, r2, r1
    9d34:	sub	r0, r0, r1
    9d38:	eor	r2, r2, r1, lsr #13
    9d3c:	sub	r0, r0, r2
    9d40:	sub	r1, r1, r2
    9d44:	eor	r0, r0, r2, lsr #12
    9d48:	sub	r1, r1, r0
    9d4c:	sub	r2, r2, r0
    9d50:	eor	r1, r1, r0, lsl #16
    9d54:	sub	r2, r2, r1
    9d58:	sub	r0, r0, r1
    9d5c:	eor	r2, r2, r1, lsr #5
    9d60:	sub	r0, r0, r2
    9d64:	sub	r1, r1, r2
    9d68:	eor	r0, r0, r2, lsr #3
    9d6c:	sub	r1, r1, r0
    9d70:	eor	r1, r1, r0, lsl #10
    9d74:	sub	r0, r2, r0
    9d78:	sub	r0, r0, r1
    9d7c:	eor	r1, r0, r1, lsr #15
    9d80:	ldr	r0, [r7, #8]
    9d84:	ldm	r0, {r2, r3}
    9d88:	sub	r3, r3, #1
    9d8c:	and	r1, r1, r3
    9d90:	add	r1, r1, r1, lsl #1
    9d94:	ldr	r1, [r2, r1, lsl #2]
    9d98:	b	9da0 <get_piconet@@Base+0xe0>
    9d9c:	ldr	r1, [r1, #24]
    9da0:	cmp	r1, #0
    9da4:	ldrne	r2, [r0, #20]
    9da8:	subsne	r1, r1, r2
    9dac:	beq	9dd8 <get_piconet@@Base+0x118>
    9db0:	ldr	r2, [r1, #32]
    9db4:	cmp	r2, #4
    9db8:	bne	9d9c <get_piconet@@Base+0xdc>
    9dbc:	ldr	r2, [r1, #28]
    9dc0:	ldr	r3, [sp, #16]
    9dc4:	ldr	r2, [r2]
    9dc8:	cmp	r2, r3
    9dcc:	bne	9d9c <get_piconet@@Base+0xdc>
    9dd0:	ldr	r4, [r1, #4]
    9dd4:	b	a144 <get_piconet@@Base+0x484>
    9dd8:	mov	r0, #1
    9ddc:	movw	r1, #5660	; 0x161c
    9de0:	mov	r5, #1
    9de4:	bl	44c4 <calloc@plt>
    9de8:	mov	r4, r0
    9dec:	str	r6, [r0, #24]
    9df0:	mov	r0, #8
    9df4:	str	r5, [r4]
    9df8:	str	r0, [r4, #4]
    9dfc:	mov	r0, #40	; 0x28
    9e00:	bl	4638 <malloc@plt>
    9e04:	mov	r5, r0
    9e08:	str	r6, [r0]
    9e0c:	str	r4, [r0, #4]
    9e10:	mov	r0, #0
    9e14:	mov	r1, #4
    9e18:	cmp	r7, #0
    9e1c:	add	r9, r5, #8
    9e20:	str	r0, [r5, #16]
    9e24:	str	r5, [r5, #28]
    9e28:	str	r1, [r5, #32]
    9e2c:	beq	9e50 <get_piconet@@Base+0x190>
    9e30:	ldr	r6, [r7, #8]!
    9e34:	ldr	r0, [r6, #16]
    9e38:	str	r5, [r0, #8]
    9e3c:	ldr	r1, [r6, #20]
    9e40:	sub	r0, r0, r1
    9e44:	str	r0, [r5, #12]
    9e48:	str	r9, [r6, #16]
    9e4c:	b	9ed4 <get_piconet@@Base+0x214>
    9e50:	ldr	r1, [pc, #772]	; a15c <get_piconet@@Base+0x49c>
    9e54:	str	r0, [r5, #12]
    9e58:	mov	r0, #44	; 0x2c
    9e5c:	add	r1, pc, r1
    9e60:	str	r5, [r1]
    9e64:	bl	4638 <malloc@plt>
    9e68:	cmp	r0, #0
    9e6c:	str	r0, [r5, #8]
    9e70:	beq	a150 <get_piconet@@Base+0x490>
    9e74:	mov	r6, r0
    9e78:	vmov.i32	q8, #0	; 0x00000000
    9e7c:	add	r0, r0, #12
    9e80:	mov	r1, #5
    9e84:	vst1.32	{d16-d17}, [r0]
    9e88:	mov	r0, #32
    9e8c:	stmib	r6, {r0, r1}
    9e90:	add	r0, r6, #28
    9e94:	vst1.32	{d16-d17}, [r0]
    9e98:	mov	r0, #8
    9e9c:	str	r9, [r6, #16]
    9ea0:	str	r0, [r6, #20]
    9ea4:	mov	r0, #384	; 0x180
    9ea8:	bl	4638 <malloc@plt>
    9eac:	cmp	r0, #0
    9eb0:	str	r0, [r6]
    9eb4:	beq	a150 <get_piconet@@Base+0x490>
    9eb8:	mov	r1, #0
    9ebc:	mov	r2, #384	; 0x180
    9ec0:	bl	46f8 <memset@plt>
    9ec4:	movw	r0, #8161	; 0x1fe1
    9ec8:	mov	r7, r9
    9ecc:	movt	r0, #40977	; 0xa011
    9ed0:	str	r0, [r6, #40]	; 0x28
    9ed4:	ldr	r0, [r6, #12]
    9ed8:	add	r0, r0, #1
    9edc:	str	r0, [r6, #12]
    9ee0:	movw	r6, #16653	; 0x410d
    9ee4:	ldr	ip, [r7]
    9ee8:	movt	r6, #274	; 0x112
    9eec:	str	ip, [r5, #8]
    9ef0:	ldrb	r3, [r5, #3]
    9ef4:	ldrb	r2, [r5, #2]
    9ef8:	ldrb	r1, [r5, #1]
    9efc:	ldrb	r0, [r5]
    9f00:	add	r3, r6, r3, lsl #24
    9f04:	mov	r6, #0
    9f08:	add	r2, r3, r2, lsl #16
    9f0c:	add	r1, r2, r1, lsl #8
    9f10:	add	r0, r1, r0
    9f14:	movw	r1, #47814	; 0xbac6
    9f18:	eor	r0, r0, sl
    9f1c:	movt	r1, #40777	; 0x9f49
    9f20:	sub	r1, r1, r0
    9f24:	sub	r2, r8, r0
    9f28:	eor	r1, r1, r0, lsl #8
    9f2c:	sub	r2, r2, r1
    9f30:	sub	r0, r0, r1
    9f34:	eor	r2, r2, r1, lsr #13
    9f38:	sub	r0, r0, r2
    9f3c:	sub	r1, r1, r2
    9f40:	eor	r0, r0, r2, lsr #12
    9f44:	sub	r1, r1, r0
    9f48:	sub	r2, r2, r0
    9f4c:	eor	r1, r1, r0, lsl #16
    9f50:	sub	r2, r2, r1
    9f54:	sub	r0, r0, r1
    9f58:	eor	r2, r2, r1, lsr #5
    9f5c:	sub	r0, r0, r2
    9f60:	sub	r1, r1, r2
    9f64:	eor	r0, r0, r2, lsr #3
    9f68:	sub	r1, r1, r0
    9f6c:	eor	r1, r1, r0, lsl #10
    9f70:	sub	r0, r2, r0
    9f74:	sub	r0, r0, r1
    9f78:	eor	r1, r0, r1, lsr #15
    9f7c:	str	r1, [r5, #36]	; 0x24
    9f80:	ldr	r2, [r7]
    9f84:	ldm	r2, {r0, r2}
    9f88:	sub	r2, r2, #1
    9f8c:	mov	r3, r0
    9f90:	and	r1, r1, r2
    9f94:	add	r2, r1, r1, lsl #1
    9f98:	ldr	r7, [r3, r2, lsl #2]!
    9f9c:	add	r0, r0, r2, lsl #2
    9fa0:	mov	r2, #10
    9fa4:	ldr	r1, [r3, #4]
    9fa8:	cmp	r7, #0
    9fac:	add	r1, r1, #1
    9fb0:	str	r1, [r3, #4]
    9fb4:	str	r6, [r5, #20]
    9fb8:	str	r7, [r5, #24]
    9fbc:	strne	r9, [r7, #12]
    9fc0:	str	r9, [r3]
    9fc4:	ldr	r0, [r0, #8]
    9fc8:	add	r0, r0, r0, lsl #2
    9fcc:	add	r0, r2, r0, lsl #1
    9fd0:	cmp	r1, r0
    9fd4:	bcc	a144 <get_piconet@@Base+0x484>
    9fd8:	ldr	r0, [ip, #36]	; 0x24
    9fdc:	cmp	r0, #1
    9fe0:	beq	a144 <get_piconet@@Base+0x484>
    9fe4:	ldr	r0, [ip, #4]
    9fe8:	str	r4, [sp, #8]
    9fec:	str	r9, [sp, #4]
    9ff0:	mov	r4, ip
    9ff4:	add	r0, r0, r0, lsl #1
    9ff8:	lsl	r0, r0, #3
    9ffc:	bl	4638 <malloc@plt>
    a000:	cmp	r0, #0
    a004:	beq	a150 <get_piconet@@Base+0x490>
    a008:	mov	r8, r0
    a00c:	ldr	r0, [r4, #4]
    a010:	mov	r1, #0
    a014:	mov	r9, #0
    a018:	add	r0, r0, r0, lsl #1
    a01c:	lsl	r2, r0, #3
    a020:	mov	r0, r8
    a024:	bl	46f8 <memset@plt>
    a028:	str	r9, [r4, #28]
    a02c:	mvn	r2, #0
    a030:	mov	r6, #1
    a034:	ldr	r0, [r4]
    a038:	str	r0, [sp, #12]
    a03c:	ldmib	r4, {r0, r1, r7}
    a040:	add	r1, r1, #1
    a044:	add	r2, r2, r0, lsl #1
    a048:	lsr	r3, r7, r1
    a04c:	tst	r2, r7
    a050:	addne	r3, r6, r7, lsr r1
    a054:	cmp	r0, #0
    a058:	str	r3, [r4, #24]
    a05c:	beq	a0e4 <get_piconet@@Base+0x424>
    a060:	mov	ip, r4
    a064:	mov	r4, #0
    a068:	mov	lr, #0
    a06c:	ldr	r5, [sp, #12]
    a070:	add	r1, lr, lr, lsl #1
    a074:	ldr	r6, [r5, r1, lsl #2]
    a078:	cmp	r6, #0
    a07c:	beq	a0d8 <get_piconet@@Base+0x418>
    a080:	ldr	r1, [r6, #28]
    a084:	ldr	r7, [r6, #16]
    a088:	and	r1, r1, r2
    a08c:	add	r1, r1, r1, lsl #1
    a090:	add	r1, r8, r1, lsl #2
    a094:	ldr	r5, [r1, #4]
    a098:	add	sl, r5, #1
    a09c:	cmp	sl, r3
    a0a0:	str	sl, [r1, #4]
    a0a4:	addhi	r4, r4, #1
    a0a8:	udivhi	r5, sl, r3
    a0ac:	strhi	r4, [ip, #28]
    a0b0:	strhi	r5, [r1, #8]
    a0b4:	str	r9, [r6, #12]
    a0b8:	ldr	r5, [r1]
    a0bc:	cmp	r5, #0
    a0c0:	str	r5, [r6, #16]
    a0c4:	strne	r6, [r5, #12]
    a0c8:	str	r6, [r1]
    a0cc:	cmp	r7, #0
    a0d0:	mov	r6, r7
    a0d4:	bne	a080 <get_piconet@@Base+0x3c0>
    a0d8:	add	lr, lr, #1
    a0dc:	cmp	lr, r0
    a0e0:	bne	a06c <get_piconet@@Base+0x3ac>
    a0e4:	ldr	r0, [sp, #12]
    a0e8:	bl	4548 <free@plt>
    a0ec:	ldr	r0, [sp, #4]
    a0f0:	ldr	r0, [r0]
    a0f4:	str	r8, [r0]
    a0f8:	ldmib	r0, {r1, r2, r3}
    a0fc:	ldr	r7, [r0, #28]
    a100:	lsl	r1, r1, #1
    a104:	cmp	r7, r3, lsr #1
    a108:	str	r1, [r0, #4]
    a10c:	add	r1, r2, #1
    a110:	str	r1, [r0, #8]
    a114:	bls	a138 <get_piconet@@Base+0x478>
    a118:	ldr	r1, [r0, #32]
    a11c:	ldr	r4, [sp, #8]
    a120:	add	r1, r1, #1
    a124:	cmp	r1, #2
    a128:	str	r1, [r0, #32]
    a12c:	movcs	r1, #1
    a130:	strcs	r1, [r0, #36]	; 0x24
    a134:	b	a144 <get_piconet@@Base+0x484>
    a138:	ldr	r4, [sp, #8]
    a13c:	mov	r1, #0
    a140:	str	r1, [r0, #32]
    a144:	mov	r0, r4
    a148:	sub	sp, fp, #28
    a14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a150:	mvn	r0, #0
    a154:	bl	4674 <exit@plt>
    a158:	andeq	r0, r2, r8, asr r4
    a15c:	strdeq	r0, [r2], -r4

0000a160 <btbb_next_survey_result@@Base>:
    a160:	push	{r4, sl, fp, lr}
    a164:	add	fp, sp, #8
    a168:	ldr	r0, [pc, #48]	; a1a0 <btbb_next_survey_result@@Base+0x40>
    a16c:	ldr	r0, [pc, r0]
    a170:	cmp	r0, #0
    a174:	moveq	r4, #0
    a178:	moveq	r0, r4
    a17c:	popeq	{r4, sl, fp, pc}
    a180:	ldr	r4, [r0, #4]
    a184:	ldr	r1, [r0, #16]
    a188:	ldr	r2, [pc, #20]	; a1a4 <btbb_next_survey_result@@Base+0x44>
    a18c:	add	r2, pc, r2
    a190:	str	r1, [r2]
    a194:	bl	4548 <free@plt>
    a198:	mov	r0, r4
    a19c:	pop	{r4, sl, fp, pc}
    a1a0:	andeq	pc, r1, r4, ror #31
    a1a4:	andeq	pc, r1, r4, asr #31

0000a1a8 <btbb_process_packet@@Base>:
    a1a8:	push	{r4, r5, r6, sl, fp, lr}
    a1ac:	add	fp, sp, #16
    a1b0:	mov	r5, r0
    a1b4:	ldr	r0, [pc, #388]	; a340 <btbb_process_packet@@Base+0x198>
    a1b8:	add	r0, pc, r0
    a1bc:	ldrb	r0, [r0]
    a1c0:	cmp	r0, #1
    a1c4:	bne	a240 <btbb_process_packet@@Base+0x98>
    a1c8:	mov	r0, r5
    a1cc:	bl	4728 <btbb_packet_get_lap@plt>
    a1d0:	bl	474c <get_piconet@plt>
    a1d4:	mov	r6, r0
    a1d8:	ldrb	r0, [r5, #8]
    a1dc:	mov	r2, #1
    a1e0:	and	r1, r0, #7
    a1e4:	add	r0, r6, r0, lsr #3
    a1e8:	ldrb	r3, [r0, #12]!
    a1ec:	tst	r3, r2, lsl r1
    a1f0:	bne	a20c <btbb_process_packet@@Base+0x64>
    a1f4:	lsl	r1, r2, r1
    a1f8:	orr	r1, r3, r1
    a1fc:	strb	r1, [r0]
    a200:	ldrb	r0, [r6, #22]
    a204:	add	r0, r0, #1
    a208:	strb	r0, [r6, #22]
    a20c:	mov	r0, r5
    a210:	bl	45a8 <btbb_header_present@plt>
    a214:	mov	r4, #0
    a218:	cmp	r0, #0
    a21c:	beq	a2dc <btbb_process_packet@@Base+0x134>
    a220:	ldrb	r0, [r6, #4]
    a224:	tst	r0, #4
    a228:	bne	a2dc <btbb_process_packet@@Base+0x134>
    a22c:	mov	r0, r5
    a230:	mov	r1, r6
    a234:	bl	4578 <btbb_uap_from_header@plt>
    a238:	mov	r0, r4
    a23c:	pop	{r4, r5, r6, sl, fp, pc}
    a240:	mov	r6, r1
    a244:	mov	r4, #0
    a248:	cmp	r1, #0
    a24c:	beq	a2dc <btbb_process_packet@@Base+0x134>
    a250:	ldrb	r0, [r5, #8]
    a254:	mov	r2, #1
    a258:	and	r1, r0, #7
    a25c:	add	r0, r6, r0, lsr #3
    a260:	ldrb	r3, [r0, #12]!
    a264:	tst	r3, r2, lsl r1
    a268:	bne	a284 <btbb_process_packet@@Base+0xdc>
    a26c:	lsl	r1, r2, r1
    a270:	orr	r1, r3, r1
    a274:	strb	r1, [r0]
    a278:	ldrb	r0, [r6, #22]
    a27c:	add	r0, r0, #1
    a280:	strb	r0, [r6, #22]
    a284:	ldrb	r0, [r6, #4]
    a288:	tst	r0, #8
    a28c:	beq	a2dc <btbb_process_packet@@Base+0x134>
    a290:	mov	r0, r5
    a294:	bl	45a8 <btbb_header_present@plt>
    a298:	cmp	r0, #0
    a29c:	beq	a2dc <btbb_process_packet@@Base+0x134>
    a2a0:	ldrb	r0, [r6, #5]
    a2a4:	ldrb	r1, [r6, #28]
    a2a8:	tst	r0, #64	; 0x40
    a2ac:	bne	a2e4 <btbb_process_packet@@Base+0x13c>
    a2b0:	cmp	r1, #0
    a2b4:	beq	a22c <btbb_process_packet@@Base+0x84>
    a2b8:	mov	r0, r5
    a2bc:	mov	r1, r6
    a2c0:	bl	4644 <try_hop@plt>
    a2c4:	ldr	r0, [r6, #4]
    a2c8:	and	r1, r0, #48	; 0x30
    a2cc:	cmp	r1, #48	; 0x30
    a2d0:	orreq	r0, r0, #16384	; 0x4000
    a2d4:	mvneq	r4, #0
    a2d8:	streq	r0, [r6, #4]
    a2dc:	mov	r0, r4
    a2e0:	pop	{r4, r5, r6, sl, fp, pc}
    a2e4:	mov	r0, r5
    a2e8:	bl	45e4 <btbb_packet_set_uap@plt>
    a2ec:	mov	r0, r5
    a2f0:	mov	r1, #4
    a2f4:	mov	r2, #1
    a2f8:	bl	4530 <btbb_packet_set_flag@plt>
    a2fc:	mov	r0, r5
    a300:	mov	r1, #5
    a304:	mov	r2, #1
    a308:	bl	4530 <btbb_packet_set_flag@plt>
    a30c:	mov	r0, r5
    a310:	bl	4608 <btbb_decode@plt>
    a314:	cmp	r0, #0
    a318:	beq	a32c <btbb_process_packet@@Base+0x184>
    a31c:	mov	r0, r5
    a320:	bl	47c4 <btbb_print_packet@plt>
    a324:	mov	r0, r4
    a328:	pop	{r4, r5, r6, sl, fp, pc}
    a32c:	ldr	r0, [pc, #16]	; a344 <btbb_process_packet@@Base+0x19c>
    a330:	add	r0, pc, r0
    a334:	bl	462c <puts@plt>
    a338:	mov	r0, r4
    a33c:	pop	{r4, r5, r6, sl, fp, pc}
    a340:	muleq	r1, r0, pc	; <UNPREDICTABLE>
    a344:	andeq	r8, r0, r8, lsr #18

0000a348 <lell_packet_new@@Base>:
    a348:	push	{r4, sl, fp, lr}
    a34c:	add	fp, sp, #8
    a350:	mov	r0, #1
    a354:	mov	r1, #104	; 0x68
    a358:	mov	r4, #1
    a35c:	bl	44c4 <calloc@plt>
    a360:	str	r4, [r0, #96]	; 0x60
    a364:	pop	{r4, sl, fp, pc}

0000a368 <lell_packet_ref@@Base>:
    a368:	ldr	r1, [r0, #96]	; 0x60
    a36c:	add	r1, r1, #1
    a370:	str	r1, [r0, #96]	; 0x60
    a374:	bx	lr

0000a378 <lell_packet_unref@@Base>:
    a378:	ldr	r1, [r0, #96]	; 0x60
    a37c:	subs	r1, r1, #1
    a380:	str	r1, [r0, #96]	; 0x60
    a384:	bxne	lr
    a388:	b	4548 <free@plt>

0000a38c <lell_allocate_and_decode@@Base>:
    a38c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    a390:	add	fp, sp, #24
    a394:	mov	r5, r1
    a398:	mov	r6, r0
    a39c:	mov	r0, #1
    a3a0:	mov	r1, #104	; 0x68
    a3a4:	mov	r7, r3
    a3a8:	mov	r8, r2
    a3ac:	mov	r9, #1
    a3b0:	bl	44c4 <calloc@plt>
    a3b4:	str	r9, [r0, #96]	; 0x60
    a3b8:	str	r0, [r7]
    a3bc:	mov	r1, #48	; 0x30
    a3c0:	mov	r4, r0
    a3c4:	add	r0, r6, #16
    a3c8:	add	r2, r6, #32
    a3cc:	vld1.8	{d16-d17}, [r6], r1
    a3d0:	vld1.8	{d18-d19}, [r0]
    a3d4:	vld1.8	{d20-d21}, [r2]
    a3d8:	add	r0, r4, #16
    a3dc:	vld1.8	{d22-d23}, [r6]
    a3e0:	vst1.8	{d18-d19}, [r0]
    a3e4:	add	r0, r4, #32
    a3e8:	vst1.8	{d20-d21}, [r0]
    a3ec:	mov	r0, r4
    a3f0:	vst1.8	{d16-d17}, [r0], r1
    a3f4:	mov	r1, #37	; 0x25
    a3f8:	vst1.8	{d22-d23}, [r0]
    a3fc:	movw	r0, #2402	; 0x962
    a400:	cmp	r5, r0
    a404:	beq	a45c <lell_allocate_and_decode@@Base+0xd0>
    a408:	movw	r1, #2425	; 0x979
    a40c:	cmp	r5, r1
    a410:	bhi	a428 <lell_allocate_and_decode@@Base+0x9c>
    a414:	movw	r1, #2404	; 0x964
    a418:	sub	r1, r5, r1
    a41c:	add	r1, r1, r1, lsr #31
    a420:	asr	r1, r1, #1
    a424:	b	a45c <lell_allocate_and_decode@@Base+0xd0>
    a428:	movw	r2, #2426	; 0x97a
    a42c:	mov	r1, #38	; 0x26
    a430:	cmp	r5, r2
    a434:	beq	a45c <lell_allocate_and_decode@@Base+0xd0>
    a438:	lsr	r2, r5, #4
    a43c:	mov	r1, #39	; 0x27
    a440:	cmp	r2, #154	; 0x9a
    a444:	bhi	a45c <lell_allocate_and_decode@@Base+0xd0>
    a448:	movw	r1, #2428	; 0x97c
    a44c:	mov	r2, #11
    a450:	sub	r1, r5, r1
    a454:	add	r1, r1, r1, lsr #31
    a458:	add	r1, r2, r1, lsr #1
    a45c:	sub	r0, r5, r0
    a460:	strb	r1, [r4, #68]	; 0x44
    a464:	str	r8, [r4, #76]	; 0x4c
    a468:	uxtb	r1, r1
    a46c:	add	r0, r0, r0, lsr #31
    a470:	cmp	r1, #36	; 0x24
    a474:	lsr	r0, r0, #1
    a478:	strb	r0, [r4, #69]	; 0x45
    a47c:	ldr	r0, [r4]
    a480:	str	r0, [r4, #64]	; 0x40
    a484:	ldrb	r2, [r4, #5]
    a488:	bls	a50c <lell_allocate_and_decode@@Base+0x180>
    a48c:	and	r1, r2, #63	; 0x3f
    a490:	str	r1, [r4, #72]	; 0x48
    a494:	movw	r1, #48854	; 0xbed6
    a498:	movt	r1, #36489	; 0x8e89
    a49c:	subs	r2, r0, r1
    a4a0:	clz	r2, r2
    a4a4:	lsr	r2, r2, #5
    a4a8:	strb	r2, [r4, #100]	; 0x64
    a4ac:	ldrb	r2, [r4, #4]
    a4b0:	and	r3, r2, #15
    a4b4:	strb	r3, [r4, #80]	; 0x50
    a4b8:	ubfx	r3, r2, #6, #1
    a4bc:	lsr	r2, r2, #7
    a4c0:	str	r3, [r4, #84]	; 0x54
    a4c4:	str	r2, [r4, #88]	; 0x58
    a4c8:	mov	r2, #0
    a4cc:	beq	a504 <lell_allocate_and_decode@@Base+0x178>
    a4d0:	eors	r0, r0, r1
    a4d4:	beq	a500 <lell_allocate_and_decode@@Base+0x174>
    a4d8:	mov	r1, #0
    a4dc:	mov	r2, r1
    a4e0:	sub	r1, r0, #1
    a4e4:	ands	r0, r1, r0
    a4e8:	add	r1, r2, #1
    a4ec:	bne	a4dc <lell_allocate_and_decode@@Base+0x150>
    a4f0:	tst	r2, #255	; 0xff
    a4f4:	moveq	r2, #1
    a4f8:	streq	r2, [r4, #92]	; 0x5c
    a4fc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    a500:	mov	r2, #32
    a504:	str	r2, [r4, #92]	; 0x5c
    a508:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    a50c:	and	r1, r2, #31
    a510:	str	r1, [r4, #72]	; 0x48
    a514:	bl	a540 <lell_packet_is_data@@Base+0x14>
    a518:	str	r0, [r4, #92]	; 0x5c
    a51c:	clz	r0, r0
    a520:	lsr	r0, r0, #5
    a524:	strb	r0, [r4, #100]	; 0x64
    a528:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000a52c <lell_packet_is_data@@Base>:
    a52c:	ldrb	r1, [r0, #68]	; 0x44
    a530:	mov	r0, #0
    a534:	cmp	r1, #37	; 0x25
    a538:	movwcc	r0, #1
    a53c:	bx	lr
    a540:	push	{r4, r5, fp, lr}
    a544:	add	fp, sp, #8
    a548:	mov	ip, r0
    a54c:	ldr	r0, [pc, #4048]	; b524 <lell_packet_is_data@@Base+0xff8>
    a550:	ldr	r1, [pc, #4048]	; b528 <lell_packet_is_data@@Base+0xffc>
    a554:	movw	lr, #48854	; 0xbed6
    a558:	tst	ip, #1
    a55c:	uxtb	r3, ip
    a560:	ubfx	r4, ip, #8, #8
    a564:	movt	lr, #36489	; 0x8e89
    a568:	add	r1, pc, r1
    a56c:	add	r0, pc, r0
    a570:	mov	r2, r1
    a574:	mov	r5, r1
    a578:	moveq	r2, r0
    a57c:	tst	ip, #128	; 0x80
    a580:	moveq	r5, r0
    a584:	ldrb	r2, [r2, r3]
    a588:	tst	ip, #32768	; 0x8000
    a58c:	ldrb	r5, [r5, r4]
    a590:	ubfx	r4, ip, #16, #8
    a594:	add	r2, r5, r2
    a598:	mov	r5, r1
    a59c:	moveq	r5, r0
    a5a0:	tst	ip, #8388608	; 0x800000
    a5a4:	moveq	r1, r0
    a5a8:	ldrb	r5, [r5, r4]
    a5ac:	ldrb	r0, [r1, ip, lsr #24]
    a5b0:	mov	r1, #0
    a5b4:	add	r2, r2, r5
    a5b8:	eor	r5, ip, ip, lsr #8
    a5bc:	add	r0, r2, r0
    a5c0:	eor	r2, r3, ip, lsr #24
    a5c4:	eor	r3, ip, ip, lsr #16
    a5c8:	orr	r3, r5, r3
    a5cc:	subs	r0, r0, #24
    a5d0:	uxtb	r3, r3
    a5d4:	movls	r0, r1
    a5d8:	eors	r4, ip, lr
    a5dc:	orr	r2, r2, r3
    a5e0:	ldr	r3, [pc, #4056]	; b5c0 <lell_packet_is_data@@Base+0x1094>
    a5e4:	clz	r2, r2
    a5e8:	lsr	r2, r2, #5
    a5ec:	add	r3, pc, r3
    a5f0:	ldrb	r3, [r3, ip, lsr #26]
    a5f4:	beq	a61c <lell_packet_is_data@@Base+0xf0>
    a5f8:	mov	r1, #0
    a5fc:	mov	r5, r1
    a600:	sub	r1, r4, #1
    a604:	ands	r4, r1, r4
    a608:	add	r1, r5, #1
    a60c:	bne	a5fc <lell_packet_is_data@@Base+0xd0>
    a610:	uxtb	r1, r5
    a614:	clz	r1, r1
    a618:	lsr	r1, r1, #5
    a61c:	mov	r4, #1
    a620:	cmp	ip, lr
    a624:	movweq	r4, #2
    a628:	add	r2, r4, r2
    a62c:	sub	r2, r2, r3
    a630:	add	r0, r2, r0
    a634:	mov	r2, ip
    a638:	add	r0, r0, r1
    a63c:	bfc	r2, #12, #20
    a640:	movw	r1, #2035	; 0x7f3
    a644:	cmp	r2, r1
    a648:	ble	a688 <lell_packet_is_data@@Base+0x15c>
    a64c:	movw	r1, #3063	; 0xbf7
    a650:	cmp	r2, r1
    a654:	ble	acac <lell_packet_is_data@@Base+0x780>
    a658:	cmp	r2, #3712	; 0xe80
    a65c:	bge	ad18 <lell_packet_is_data@@Base+0x7ec>
    a660:	movw	r1, #3325	; 0xcfd
    a664:	cmp	r2, r1
    a668:	bgt	ada0 <lell_packet_is_data@@Base+0x874>
    a66c:	movw	r1, #3064	; 0xbf8
    a670:	sub	r1, r2, r1
    a674:	cmp	r1, #16
    a678:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    a67c:	cmp	r2, #3200	; 0xc80
    a680:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    a684:	b	ae7c <lell_packet_is_data@@Base+0x950>
    a688:	movw	r1, #765	; 0x2fd
    a68c:	cmp	r2, r1
    a690:	bgt	ace0 <lell_packet_is_data@@Base+0x7b4>
    a694:	cmp	r2, #384	; 0x180
    a698:	bhi	adf0 <lell_packet_is_data@@Base+0x8c4>
    a69c:	add	r1, pc, #4
    a6a0:	ldr	r2, [r1, r2, lsl #2]
    a6a4:	add	pc, r1, r2
    a6a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a6fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a700:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a704:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a708:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a70c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a710:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a714:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a718:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a71c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a720:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a724:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a728:	ldrdeq	r0, [r0], -r4
    a72c:	ldrdeq	r0, [r0], -r4
    a730:	ldrdeq	r0, [r0], -r4
    a734:	ldrdeq	r0, [r0], -r4
    a738:	ldrdeq	r0, [r0], -r4
    a73c:	ldrdeq	r0, [r0], -r4
    a740:	ldrdeq	r0, [r0], -r4
    a744:	ldrdeq	r0, [r0], -r4
    a748:	ldrdeq	r0, [r0], -r4
    a74c:	ldrdeq	r0, [r0], -r4
    a750:	ldrdeq	r0, [r0], -r4
    a754:	ldrdeq	r0, [r0], -r4
    a758:	ldrdeq	r0, [r0], -r4
    a75c:	ldrdeq	r0, [r0], -r4
    a760:	ldrdeq	r0, [r0], -r4
    a764:	ldrdeq	r0, [r0], -r4
    a768:	ldrdeq	r0, [r0], -r4
    a76c:	ldrdeq	r0, [r0], -r4
    a770:	ldrdeq	r0, [r0], -r4
    a774:	ldrdeq	r0, [r0], -r4
    a778:	ldrdeq	r0, [r0], -r4
    a77c:	ldrdeq	r0, [r0], -r4
    a780:	ldrdeq	r0, [r0], -r4
    a784:	ldrdeq	r0, [r0], -r4
    a788:	ldrdeq	r0, [r0], -r4
    a78c:	ldrdeq	r0, [r0], -r4
    a790:	ldrdeq	r0, [r0], -r4
    a794:	ldrdeq	r0, [r0], -r4
    a798:	ldrdeq	r0, [r0], -r4
    a79c:	ldrdeq	r0, [r0], -r4
    a7a0:	ldrdeq	r0, [r0], -r4
    a7a4:	ldrdeq	r0, [r0], -r4
    a7a8:	ldrdeq	r0, [r0], -r4
    a7ac:	ldrdeq	r0, [r0], -r4
    a7b0:	ldrdeq	r0, [r0], -r4
    a7b4:	ldrdeq	r0, [r0], -r4
    a7b8:	ldrdeq	r0, [r0], -r4
    a7bc:	ldrdeq	r0, [r0], -r4
    a7c0:	ldrdeq	r0, [r0], -r4
    a7c4:	ldrdeq	r0, [r0], -r4
    a7c8:	ldrdeq	r0, [r0], -r4
    a7cc:	ldrdeq	r0, [r0], -r4
    a7d0:	ldrdeq	r0, [r0], -r4
    a7d4:	ldrdeq	r0, [r0], -r4
    a7d8:	ldrdeq	r0, [r0], -r4
    a7dc:	ldrdeq	r0, [r0], -r4
    a7e0:	ldrdeq	r0, [r0], -r4
    a7e4:	ldrdeq	r0, [r0], -r4
    a7e8:	ldrdeq	r0, [r0], -r4
    a7ec:	ldrdeq	r0, [r0], -r4
    a7f0:	ldrdeq	r0, [r0], -r4
    a7f4:	ldrdeq	r0, [r0], -r4
    a7f8:	ldrdeq	r0, [r0], -r4
    a7fc:	ldrdeq	r0, [r0], -r4
    a800:	ldrdeq	r0, [r0], -r4
    a804:	ldrdeq	r0, [r0], -r4
    a808:	ldrdeq	r0, [r0], -r4
    a80c:	ldrdeq	r0, [r0], -r4
    a810:	ldrdeq	r0, [r0], -r4
    a814:	ldrdeq	r0, [r0], -r4
    a818:	ldrdeq	r0, [r0], -r4
    a81c:	ldrdeq	r0, [r0], -r4
    a820:	ldrdeq	r0, [r0], -r4
    a824:	ldrdeq	r0, [r0], -r4
    a828:	ldrdeq	r0, [r0], -r4
    a82c:	ldrdeq	r0, [r0], -r4
    a830:	ldrdeq	r0, [r0], -r4
    a834:	ldrdeq	r0, [r0], -r4
    a838:	ldrdeq	r0, [r0], -r4
    a83c:	ldrdeq	r0, [r0], -r4
    a840:	ldrdeq	r0, [r0], -r4
    a844:	ldrdeq	r0, [r0], -r4
    a848:	ldrdeq	r0, [r0], -r4
    a84c:	ldrdeq	r0, [r0], -r4
    a850:	ldrdeq	r0, [r0], -r4
    a854:	ldrdeq	r0, [r0], -r4
    a858:	ldrdeq	r0, [r0], -r4
    a85c:	ldrdeq	r0, [r0], -r4
    a860:	ldrdeq	r0, [r0], -r4
    a864:	ldrdeq	r0, [r0], -r4
    a868:	ldrdeq	r0, [r0], -r4
    a86c:	ldrdeq	r0, [r0], -r4
    a870:	ldrdeq	r0, [r0], -r4
    a874:	ldrdeq	r0, [r0], -r4
    a878:	ldrdeq	r0, [r0], -r4
    a87c:	ldrdeq	r0, [r0], -r4
    a880:	ldrdeq	r0, [r0], -r4
    a884:	ldrdeq	r0, [r0], -r4
    a888:	ldrdeq	r0, [r0], -r4
    a88c:	ldrdeq	r0, [r0], -r4
    a890:	ldrdeq	r0, [r0], -r4
    a894:	ldrdeq	r0, [r0], -r4
    a898:	ldrdeq	r0, [r0], -r4
    a89c:	ldrdeq	r0, [r0], -r4
    a8a0:	ldrdeq	r0, [r0], -r4
    a8a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a8a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a8ac:	ldrdeq	r0, [r0], -r4
    a8b0:	ldrdeq	r0, [r0], -r4
    a8b4:	ldrdeq	r0, [r0], -r4
    a8b8:	ldrdeq	r0, [r0], -r4
    a8bc:	ldrdeq	r0, [r0], -r4
    a8c0:	ldrdeq	r0, [r0], -r4
    a8c4:	ldrdeq	r0, [r0], -r4
    a8c8:	ldrdeq	r0, [r0], -r4
    a8cc:	ldrdeq	r0, [r0], -r4
    a8d0:	ldrdeq	r0, [r0], -r4
    a8d4:	ldrdeq	r0, [r0], -r4
    a8d8:	ldrdeq	r0, [r0], -r4
    a8dc:	ldrdeq	r0, [r0], -r4
    a8e0:	ldrdeq	r0, [r0], -r4
    a8e4:	ldrdeq	r0, [r0], -r4
    a8e8:	ldrdeq	r0, [r0], -r4
    a8ec:	ldrdeq	r0, [r0], -r4
    a8f0:	ldrdeq	r0, [r0], -r4
    a8f4:	ldrdeq	r0, [r0], -r4
    a8f8:	ldrdeq	r0, [r0], -r4
    a8fc:	ldrdeq	r0, [r0], -r4
    a900:	ldrdeq	r0, [r0], -r4
    a904:	ldrdeq	r0, [r0], -r4
    a908:	ldrdeq	r0, [r0], -r4
    a90c:	ldrdeq	r0, [r0], -r4
    a910:	ldrdeq	r0, [r0], -r4
    a914:	ldrdeq	r0, [r0], -r4
    a918:	ldrdeq	r0, [r0], -r4
    a91c:	ldrdeq	r0, [r0], -r4
    a920:	ldrdeq	r0, [r0], -r4
    a924:	ldrdeq	r0, [r0], -r4
    a928:	ldrdeq	r0, [r0], -r4
    a92c:	ldrdeq	r0, [r0], -r4
    a930:	ldrdeq	r0, [r0], -r4
    a934:	ldrdeq	r0, [r0], -r4
    a938:	ldrdeq	r0, [r0], -r4
    a93c:	ldrdeq	r0, [r0], -r4
    a940:	ldrdeq	r0, [r0], -r4
    a944:	ldrdeq	r0, [r0], -r4
    a948:	ldrdeq	r0, [r0], -r4
    a94c:	ldrdeq	r0, [r0], -r4
    a950:	ldrdeq	r0, [r0], -r4
    a954:	ldrdeq	r0, [r0], -r4
    a958:	ldrdeq	r0, [r0], -r4
    a95c:	ldrdeq	r0, [r0], -r4
    a960:	ldrdeq	r0, [r0], -r4
    a964:	ldrdeq	r0, [r0], -r4
    a968:	ldrdeq	r0, [r0], -r4
    a96c:	ldrdeq	r0, [r0], -r4
    a970:	ldrdeq	r0, [r0], -r4
    a974:	ldrdeq	r0, [r0], -r4
    a978:	ldrdeq	r0, [r0], -r4
    a97c:	ldrdeq	r0, [r0], -r4
    a980:	ldrdeq	r0, [r0], -r4
    a984:	ldrdeq	r0, [r0], -r4
    a988:	ldrdeq	r0, [r0], -r4
    a98c:	ldrdeq	r0, [r0], -r4
    a990:	ldrdeq	r0, [r0], -r4
    a994:	ldrdeq	r0, [r0], -r4
    a998:	ldrdeq	r0, [r0], -r4
    a99c:	ldrdeq	r0, [r0], -r4
    a9a0:	ldrdeq	r0, [r0], -r4
    a9a4:	ldrdeq	r0, [r0], -r4
    a9a8:	ldrdeq	r0, [r0], -r4
    a9ac:	ldrdeq	r0, [r0], -r4
    a9b0:	ldrdeq	r0, [r0], -r4
    a9b4:	ldrdeq	r0, [r0], -r4
    a9b8:	ldrdeq	r0, [r0], -r4
    a9bc:	ldrdeq	r0, [r0], -r4
    a9c0:	ldrdeq	r0, [r0], -r4
    a9c4:	ldrdeq	r0, [r0], -r4
    a9c8:	ldrdeq	r0, [r0], -r4
    a9cc:	ldrdeq	r0, [r0], -r4
    a9d0:	ldrdeq	r0, [r0], -r4
    a9d4:	ldrdeq	r0, [r0], -r4
    a9d8:	ldrdeq	r0, [r0], -r4
    a9dc:	ldrdeq	r0, [r0], -r4
    a9e0:	ldrdeq	r0, [r0], -r4
    a9e4:	ldrdeq	r0, [r0], -r4
    a9e8:	ldrdeq	r0, [r0], -r4
    a9ec:	ldrdeq	r0, [r0], -r4
    a9f0:	ldrdeq	r0, [r0], -r4
    a9f4:	ldrdeq	r0, [r0], -r4
    a9f8:	ldrdeq	r0, [r0], -r4
    a9fc:	ldrdeq	r0, [r0], -r4
    aa00:	ldrdeq	r0, [r0], -r4
    aa04:	ldrdeq	r0, [r0], -r4
    aa08:	ldrdeq	r0, [r0], -r4
    aa0c:	ldrdeq	r0, [r0], -r4
    aa10:	ldrdeq	r0, [r0], -r4
    aa14:	ldrdeq	r0, [r0], -r4
    aa18:	ldrdeq	r0, [r0], -r4
    aa1c:	ldrdeq	r0, [r0], -r4
    aa20:	ldrdeq	r0, [r0], -r4
    aa24:	ldrdeq	r0, [r0], -r4
    aa28:	ldrdeq	r0, [r0], -r4
    aa2c:	ldrdeq	r0, [r0], -r4
    aa30:	ldrdeq	r0, [r0], -r4
    aa34:	ldrdeq	r0, [r0], -r4
    aa38:	ldrdeq	r0, [r0], -r4
    aa3c:	ldrdeq	r0, [r0], -r4
    aa40:	ldrdeq	r0, [r0], -r4
    aa44:	ldrdeq	r0, [r0], -r4
    aa48:	ldrdeq	r0, [r0], -r4
    aa4c:	ldrdeq	r0, [r0], -r4
    aa50:	ldrdeq	r0, [r0], -r4
    aa54:	ldrdeq	r0, [r0], -r4
    aa58:	ldrdeq	r0, [r0], -r4
    aa5c:	ldrdeq	r0, [r0], -r4
    aa60:	ldrdeq	r0, [r0], -r4
    aa64:	ldrdeq	r0, [r0], -r4
    aa68:	ldrdeq	r0, [r0], -r4
    aa6c:	ldrdeq	r0, [r0], -r4
    aa70:	ldrdeq	r0, [r0], -r4
    aa74:	ldrdeq	r0, [r0], -r4
    aa78:	ldrdeq	r0, [r0], -r4
    aa7c:	ldrdeq	r0, [r0], -r4
    aa80:	ldrdeq	r0, [r0], -r4
    aa84:	ldrdeq	r0, [r0], -r4
    aa88:	ldrdeq	r0, [r0], -r4
    aa8c:	ldrdeq	r0, [r0], -r4
    aa90:	ldrdeq	r0, [r0], -r4
    aa94:	ldrdeq	r0, [r0], -r4
    aa98:	ldrdeq	r0, [r0], -r4
    aa9c:	ldrdeq	r0, [r0], -r4
    aaa0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aaa4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aaa8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aaac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    aab0:	ldrdeq	r0, [r0], -r4
    aab4:	ldrdeq	r0, [r0], -r4
    aab8:	ldrdeq	r0, [r0], -r4
    aabc:	ldrdeq	r0, [r0], -r4
    aac0:	ldrdeq	r0, [r0], -r4
    aac4:	ldrdeq	r0, [r0], -r4
    aac8:	ldrdeq	r0, [r0], -r4
    aacc:	ldrdeq	r0, [r0], -r4
    aad0:	ldrdeq	r0, [r0], -r4
    aad4:	ldrdeq	r0, [r0], -r4
    aad8:	ldrdeq	r0, [r0], -r4
    aadc:	ldrdeq	r0, [r0], -r4
    aae0:	ldrdeq	r0, [r0], -r4
    aae4:	ldrdeq	r0, [r0], -r4
    aae8:	ldrdeq	r0, [r0], -r4
    aaec:	ldrdeq	r0, [r0], -r4
    aaf0:	ldrdeq	r0, [r0], -r4
    aaf4:	ldrdeq	r0, [r0], -r4
    aaf8:	ldrdeq	r0, [r0], -r4
    aafc:	ldrdeq	r0, [r0], -r4
    ab00:	ldrdeq	r0, [r0], -r4
    ab04:	ldrdeq	r0, [r0], -r4
    ab08:	ldrdeq	r0, [r0], -r4
    ab0c:	ldrdeq	r0, [r0], -r4
    ab10:	ldrdeq	r0, [r0], -r4
    ab14:	ldrdeq	r0, [r0], -r4
    ab18:	ldrdeq	r0, [r0], -r4
    ab1c:	ldrdeq	r0, [r0], -r4
    ab20:	ldrdeq	r0, [r0], -r4
    ab24:	ldrdeq	r0, [r0], -r4
    ab28:	ldrdeq	r0, [r0], -r4
    ab2c:	ldrdeq	r0, [r0], -r4
    ab30:	ldrdeq	r0, [r0], -r4
    ab34:	ldrdeq	r0, [r0], -r4
    ab38:	ldrdeq	r0, [r0], -r4
    ab3c:	ldrdeq	r0, [r0], -r4
    ab40:	ldrdeq	r0, [r0], -r4
    ab44:	ldrdeq	r0, [r0], -r4
    ab48:	ldrdeq	r0, [r0], -r4
    ab4c:	ldrdeq	r0, [r0], -r4
    ab50:	ldrdeq	r0, [r0], -r4
    ab54:	ldrdeq	r0, [r0], -r4
    ab58:	ldrdeq	r0, [r0], -r4
    ab5c:	ldrdeq	r0, [r0], -r4
    ab60:	ldrdeq	r0, [r0], -r4
    ab64:	ldrdeq	r0, [r0], -r4
    ab68:	ldrdeq	r0, [r0], -r4
    ab6c:	ldrdeq	r0, [r0], -r4
    ab70:	ldrdeq	r0, [r0], -r4
    ab74:	ldrdeq	r0, [r0], -r4
    ab78:	ldrdeq	r0, [r0], -r4
    ab7c:	ldrdeq	r0, [r0], -r4
    ab80:	ldrdeq	r0, [r0], -r4
    ab84:	ldrdeq	r0, [r0], -r4
    ab88:	ldrdeq	r0, [r0], -r4
    ab8c:	ldrdeq	r0, [r0], -r4
    ab90:	ldrdeq	r0, [r0], -r4
    ab94:	ldrdeq	r0, [r0], -r4
    ab98:	ldrdeq	r0, [r0], -r4
    ab9c:	ldrdeq	r0, [r0], -r4
    aba0:	ldrdeq	r0, [r0], -r4
    aba4:	ldrdeq	r0, [r0], -r4
    aba8:	ldrdeq	r0, [r0], -r4
    abac:	ldrdeq	r0, [r0], -r4
    abb0:	ldrdeq	r0, [r0], -r4
    abb4:	ldrdeq	r0, [r0], -r4
    abb8:	ldrdeq	r0, [r0], -r4
    abbc:	ldrdeq	r0, [r0], -r4
    abc0:	ldrdeq	r0, [r0], -r4
    abc4:	ldrdeq	r0, [r0], -r4
    abc8:	ldrdeq	r0, [r0], -r4
    abcc:	ldrdeq	r0, [r0], -r4
    abd0:	ldrdeq	r0, [r0], -r4
    abd4:	ldrdeq	r0, [r0], -r4
    abd8:	ldrdeq	r0, [r0], -r4
    abdc:	ldrdeq	r0, [r0], -r4
    abe0:	ldrdeq	r0, [r0], -r4
    abe4:	ldrdeq	r0, [r0], -r4
    abe8:	ldrdeq	r0, [r0], -r4
    abec:	ldrdeq	r0, [r0], -r4
    abf0:	ldrdeq	r0, [r0], -r4
    abf4:	ldrdeq	r0, [r0], -r4
    abf8:	ldrdeq	r0, [r0], -r4
    abfc:	ldrdeq	r0, [r0], -r4
    ac00:	ldrdeq	r0, [r0], -r4
    ac04:	ldrdeq	r0, [r0], -r4
    ac08:	ldrdeq	r0, [r0], -r4
    ac0c:	ldrdeq	r0, [r0], -r4
    ac10:	ldrdeq	r0, [r0], -r4
    ac14:	ldrdeq	r0, [r0], -r4
    ac18:	ldrdeq	r0, [r0], -r4
    ac1c:	ldrdeq	r0, [r0], -r4
    ac20:	ldrdeq	r0, [r0], -r4
    ac24:	ldrdeq	r0, [r0], -r4
    ac28:	ldrdeq	r0, [r0], -r4
    ac2c:	ldrdeq	r0, [r0], -r4
    ac30:	ldrdeq	r0, [r0], -r4
    ac34:	ldrdeq	r0, [r0], -r4
    ac38:	ldrdeq	r0, [r0], -r4
    ac3c:	ldrdeq	r0, [r0], -r4
    ac40:	ldrdeq	r0, [r0], -r4
    ac44:	ldrdeq	r0, [r0], -r4
    ac48:	ldrdeq	r0, [r0], -r4
    ac4c:	ldrdeq	r0, [r0], -r4
    ac50:	ldrdeq	r0, [r0], -r4
    ac54:	ldrdeq	r0, [r0], -r4
    ac58:	ldrdeq	r0, [r0], -r4
    ac5c:	ldrdeq	r0, [r0], -r4
    ac60:	ldrdeq	r0, [r0], -r4
    ac64:	ldrdeq	r0, [r0], -r4
    ac68:	ldrdeq	r0, [r0], -r4
    ac6c:	ldrdeq	r0, [r0], -r4
    ac70:	ldrdeq	r0, [r0], -r4
    ac74:	ldrdeq	r0, [r0], -r4
    ac78:	ldrdeq	r0, [r0], -r4
    ac7c:	ldrdeq	r0, [r0], -r4
    ac80:	ldrdeq	r0, [r0], -r4
    ac84:	ldrdeq	r0, [r0], -r4
    ac88:	ldrdeq	r0, [r0], -r4
    ac8c:	ldrdeq	r0, [r0], -r4
    ac90:	ldrdeq	r0, [r0], -r4
    ac94:	ldrdeq	r0, [r0], -r4
    ac98:	ldrdeq	r0, [r0], -r4
    ac9c:	ldrdeq	r0, [r0], -r4
    aca0:	ldrdeq	r0, [r0], -r4
    aca4:	ldrdeq	r0, [r0], -r4
    aca8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    acac:	cmp	r2, #2432	; 0x980
    acb0:	bge	ad74 <lell_packet_is_data@@Base+0x848>
    acb4:	movw	r1, #2036	; 0x7f4
    acb8:	sub	r1, r2, r1
    acbc:	cmp	r1, #28
    acc0:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    acc4:	movw	r1, #2302	; 0x8fe
    acc8:	sub	r1, r2, r1
    accc:	cmp	r1, #4
    acd0:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    acd4:	cmp	r2, #2176	; 0x880
    acd8:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    acdc:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ace0:	cmp	r2, #1152	; 0x480
    ace4:	bge	ad44 <lell_packet_is_data@@Base+0x818>
    ace8:	sub	r1, r2, #1016	; 0x3f8
    acec:	cmp	r1, #15
    acf0:	bhi	acfc <lell_packet_is_data@@Base+0x7d0>
    acf4:	cmp	r1, #9
    acf8:	bne	ae78 <lell_packet_is_data@@Base+0x94c>
    acfc:	movw	r1, #766	; 0x2fe
    ad00:	sub	r1, r2, r1
    ad04:	cmp	r1, #4
    ad08:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    ad0c:	cmp	r2, #896	; 0x380
    ad10:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ad14:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ad18:	cmp	r2, #4064	; 0xfe0
    ad1c:	blt	ae58 <lell_packet_is_data@@Base+0x92c>
    ad20:	sub	r1, r2, #4064	; 0xfe0
    ad24:	cmp	r1, #31
    ad28:	bhi	ae7c <lell_packet_is_data@@Base+0x950>
    ad2c:	movw	r3, #1
    ad30:	mov	r2, #1
    ad34:	movt	r3, #65535	; 0xffff
    ad38:	tst	r3, r2, lsl r1
    ad3c:	addne	r0, r0, #1
    ad40:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ad44:	movw	r1, #1531	; 0x5fb
    ad48:	cmp	r2, r1
    ad4c:	ble	ae10 <lell_packet_is_data@@Base+0x8e4>
    ad50:	cmp	r2, #1664	; 0x680
    ad54:	bge	ae34 <lell_packet_is_data@@Base+0x908>
    ad58:	movw	r1, #1532	; 0x5fc
    ad5c:	sub	r1, r2, r1
    ad60:	cmp	r1, #7
    ad64:	bhi	ae7c <lell_packet_is_data@@Base+0x950>
    ad68:	cmp	r1, #4
    ad6c:	bne	ae78 <lell_packet_is_data@@Base+0x94c>
    ad70:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ad74:	cmp	r2, #2688	; 0xa80
    ad78:	bge	adcc <lell_packet_is_data@@Base+0x8a0>
    ad7c:	movw	r1, #2556	; 0x9fc
    ad80:	sub	r1, r2, r1
    ad84:	cmp	r1, #7
    ad88:	bhi	ad94 <lell_packet_is_data@@Base+0x868>
    ad8c:	cmp	r1, #4
    ad90:	bne	ae78 <lell_packet_is_data@@Base+0x94c>
    ad94:	cmp	r2, #2432	; 0x980
    ad98:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ad9c:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ada0:	movw	r1, #3580	; 0xdfc
    ada4:	sub	r1, r2, r1
    ada8:	cmp	r1, #8
    adac:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    adb0:	movw	r1, #3326	; 0xcfe
    adb4:	sub	r1, r2, r1
    adb8:	cmp	r1, #4
    adbc:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    adc0:	cmp	r2, #3456	; 0xd80
    adc4:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    adc8:	b	ae7c <lell_packet_is_data@@Base+0x950>
    adcc:	movw	r1, #2814	; 0xafe
    add0:	sub	r1, r2, r1
    add4:	cmp	r1, #4
    add8:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    addc:	cmp	r2, #2688	; 0xa80
    ade0:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ade4:	cmp	r2, #2944	; 0xb80
    ade8:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    adec:	b	ae7c <lell_packet_is_data@@Base+0x950>
    adf0:	sub	r1, r2, #508	; 0x1fc
    adf4:	cmp	r1, #7
    adf8:	bhi	ae04 <lell_packet_is_data@@Base+0x8d8>
    adfc:	cmp	r1, #4
    ae00:	bne	ae78 <lell_packet_is_data@@Base+0x94c>
    ae04:	cmp	r2, #640	; 0x280
    ae08:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae0c:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ae10:	movw	r1, #1278	; 0x4fe
    ae14:	sub	r1, r2, r1
    ae18:	cmp	r1, #4
    ae1c:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    ae20:	cmp	r2, #1152	; 0x480
    ae24:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae28:	cmp	r2, #1408	; 0x580
    ae2c:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae30:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ae34:	movw	r1, #1790	; 0x6fe
    ae38:	sub	r1, r2, r1
    ae3c:	cmp	r1, #4
    ae40:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    ae44:	cmp	r2, #1664	; 0x680
    ae48:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae4c:	cmp	r2, #1920	; 0x780
    ae50:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae54:	b	ae7c <lell_packet_is_data@@Base+0x950>
    ae58:	movw	r1, #3838	; 0xefe
    ae5c:	sub	r1, r2, r1
    ae60:	cmp	r1, #4
    ae64:	bcc	ae78 <lell_packet_is_data@@Base+0x94c>
    ae68:	cmp	r2, #3712	; 0xe80
    ae6c:	beq	ae78 <lell_packet_is_data@@Base+0x94c>
    ae70:	cmp	r2, #3968	; 0xf80
    ae74:	bne	ae7c <lell_packet_is_data@@Base+0x950>
    ae78:	add	r0, r0, #1
    ae7c:	ubfx	r3, ip, #4, #12
    ae80:	movw	r1, #2035	; 0x7f3
    ae84:	lsr	r2, ip, #8
    ae88:	cmp	r3, r1
    ae8c:	ble	aecc <lell_packet_is_data@@Base+0x9a0>
    ae90:	movw	r1, #3063	; 0xbf7
    ae94:	cmp	r3, r1
    ae98:	ble	b4f0 <lell_packet_is_data@@Base+0xfc4>
    ae9c:	cmp	r3, #3712	; 0xe80
    aea0:	bge	b564 <lell_packet_is_data@@Base+0x1038>
    aea4:	movw	r1, #3325	; 0xcfd
    aea8:	cmp	r3, r1
    aeac:	bgt	b5f0 <lell_packet_is_data@@Base+0x10c4>
    aeb0:	movw	r1, #3064	; 0xbf8
    aeb4:	sub	r1, r3, r1
    aeb8:	cmp	r1, #16
    aebc:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    aec0:	cmp	r3, #3200	; 0xc80
    aec4:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    aec8:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    aecc:	movw	r1, #765	; 0x2fd
    aed0:	cmp	r3, r1
    aed4:	bgt	b52c <lell_packet_is_data@@Base+0x1000>
    aed8:	cmp	r3, #384	; 0x180
    aedc:	bhi	b640 <lell_packet_is_data@@Base+0x1114>
    aee0:	add	r1, pc, #4
    aee4:	ldr	r3, [r1, r3, lsl #2]
    aee8:	add	pc, r1, r3
    aeec:	ldrdeq	r0, [r0], -ip
    aef0:	ldrdeq	r0, [r0], -ip
    aef4:	ldrdeq	r0, [r0], -ip
    aef8:	ldrdeq	r0, [r0], -ip
    aefc:	ldrdeq	r0, [r0], -ip
    af00:	ldrdeq	r0, [r0], -ip
    af04:	ldrdeq	r0, [r0], -ip
    af08:	ldrdeq	r0, [r0], -ip
    af0c:	ldrdeq	r0, [r0], -ip
    af10:	ldrdeq	r0, [r0], -ip
    af14:	ldrdeq	r0, [r0], -ip
    af18:	ldrdeq	r0, [r0], -ip
    af1c:	ldrdeq	r0, [r0], -ip
    af20:	ldrdeq	r0, [r0], -ip
    af24:	ldrdeq	r0, [r0], -ip
    af28:	ldrdeq	r0, [r0], -ip
    af2c:	ldrdeq	r0, [r0], -ip
    af30:	ldrdeq	r0, [r0], -ip
    af34:	ldrdeq	r0, [r0], -ip
    af38:	ldrdeq	r0, [r0], -ip
    af3c:	ldrdeq	r0, [r0], -ip
    af40:	ldrdeq	r0, [r0], -ip
    af44:	ldrdeq	r0, [r0], -ip
    af48:	ldrdeq	r0, [r0], -ip
    af4c:	ldrdeq	r0, [r0], -ip
    af50:	ldrdeq	r0, [r0], -ip
    af54:	ldrdeq	r0, [r0], -ip
    af58:	ldrdeq	r0, [r0], -ip
    af5c:	ldrdeq	r0, [r0], -ip
    af60:	ldrdeq	r0, [r0], -ip
    af64:	ldrdeq	r0, [r0], -ip
    af68:	ldrdeq	r0, [r0], -ip
    af6c:	andeq	r0, r0, r0, ror #15
    af70:	andeq	r0, r0, r0, ror #15
    af74:	andeq	r0, r0, r0, ror #15
    af78:	andeq	r0, r0, r0, ror #15
    af7c:	andeq	r0, r0, r0, ror #15
    af80:	andeq	r0, r0, r0, ror #15
    af84:	andeq	r0, r0, r0, ror #15
    af88:	andeq	r0, r0, r0, ror #15
    af8c:	andeq	r0, r0, r0, ror #15
    af90:	andeq	r0, r0, r0, ror #15
    af94:	andeq	r0, r0, r0, ror #15
    af98:	andeq	r0, r0, r0, ror #15
    af9c:	andeq	r0, r0, r0, ror #15
    afa0:	andeq	r0, r0, r0, ror #15
    afa4:	andeq	r0, r0, r0, ror #15
    afa8:	andeq	r0, r0, r0, ror #15
    afac:	andeq	r0, r0, r0, ror #15
    afb0:	andeq	r0, r0, r0, ror #15
    afb4:	andeq	r0, r0, r0, ror #15
    afb8:	andeq	r0, r0, r0, ror #15
    afbc:	andeq	r0, r0, r0, ror #15
    afc0:	andeq	r0, r0, r0, ror #15
    afc4:	andeq	r0, r0, r0, ror #15
    afc8:	andeq	r0, r0, r0, ror #15
    afcc:	andeq	r0, r0, r0, ror #15
    afd0:	andeq	r0, r0, r0, ror #15
    afd4:	andeq	r0, r0, r0, ror #15
    afd8:	andeq	r0, r0, r0, ror #15
    afdc:	andeq	r0, r0, r0, ror #15
    afe0:	andeq	r0, r0, r0, ror #15
    afe4:	andeq	r0, r0, r0, ror #15
    afe8:	andeq	r0, r0, r0, ror #15
    afec:	andeq	r0, r0, r0, ror #15
    aff0:	andeq	r0, r0, r0, ror #15
    aff4:	andeq	r0, r0, r0, ror #15
    aff8:	andeq	r0, r0, r0, ror #15
    affc:	andeq	r0, r0, r0, ror #15
    b000:	andeq	r0, r0, r0, ror #15
    b004:	andeq	r0, r0, r0, ror #15
    b008:	andeq	r0, r0, r0, ror #15
    b00c:	andeq	r0, r0, r0, ror #15
    b010:	andeq	r0, r0, r0, ror #15
    b014:	andeq	r0, r0, r0, ror #15
    b018:	andeq	r0, r0, r0, ror #15
    b01c:	andeq	r0, r0, r0, ror #15
    b020:	andeq	r0, r0, r0, ror #15
    b024:	andeq	r0, r0, r0, ror #15
    b028:	andeq	r0, r0, r0, ror #15
    b02c:	andeq	r0, r0, r0, ror #15
    b030:	andeq	r0, r0, r0, ror #15
    b034:	andeq	r0, r0, r0, ror #15
    b038:	andeq	r0, r0, r0, ror #15
    b03c:	andeq	r0, r0, r0, ror #15
    b040:	andeq	r0, r0, r0, ror #15
    b044:	andeq	r0, r0, r0, ror #15
    b048:	andeq	r0, r0, r0, ror #15
    b04c:	andeq	r0, r0, r0, ror #15
    b050:	andeq	r0, r0, r0, ror #15
    b054:	andeq	r0, r0, r0, ror #15
    b058:	andeq	r0, r0, r0, ror #15
    b05c:	andeq	r0, r0, r0, ror #15
    b060:	andeq	r0, r0, r0, ror #15
    b064:	andeq	r0, r0, r0, ror #15
    b068:	andeq	r0, r0, r0, ror #15
    b06c:	andeq	r0, r0, r0, ror #15
    b070:	andeq	r0, r0, r0, ror #15
    b074:	andeq	r0, r0, r0, ror #15
    b078:	andeq	r0, r0, r0, ror #15
    b07c:	andeq	r0, r0, r0, ror #15
    b080:	andeq	r0, r0, r0, ror #15
    b084:	andeq	r0, r0, r0, ror #15
    b088:	andeq	r0, r0, r0, ror #15
    b08c:	andeq	r0, r0, r0, ror #15
    b090:	andeq	r0, r0, r0, ror #15
    b094:	andeq	r0, r0, r0, ror #15
    b098:	andeq	r0, r0, r0, ror #15
    b09c:	andeq	r0, r0, r0, ror #15
    b0a0:	andeq	r0, r0, r0, ror #15
    b0a4:	andeq	r0, r0, r0, ror #15
    b0a8:	andeq	r0, r0, r0, ror #15
    b0ac:	andeq	r0, r0, r0, ror #15
    b0b0:	andeq	r0, r0, r0, ror #15
    b0b4:	andeq	r0, r0, r0, ror #15
    b0b8:	andeq	r0, r0, r0, ror #15
    b0bc:	andeq	r0, r0, r0, ror #15
    b0c0:	andeq	r0, r0, r0, ror #15
    b0c4:	andeq	r0, r0, r0, ror #15
    b0c8:	andeq	r0, r0, r0, ror #15
    b0cc:	andeq	r0, r0, r0, ror #15
    b0d0:	andeq	r0, r0, r0, ror #15
    b0d4:	andeq	r0, r0, r0, ror #15
    b0d8:	andeq	r0, r0, r0, ror #15
    b0dc:	andeq	r0, r0, r0, ror #15
    b0e0:	andeq	r0, r0, r0, ror #15
    b0e4:	andeq	r0, r0, r0, ror #15
    b0e8:	ldrdeq	r0, [r0], -ip
    b0ec:	ldrdeq	r0, [r0], -ip
    b0f0:	andeq	r0, r0, r0, ror #15
    b0f4:	andeq	r0, r0, r0, ror #15
    b0f8:	andeq	r0, r0, r0, ror #15
    b0fc:	andeq	r0, r0, r0, ror #15
    b100:	andeq	r0, r0, r0, ror #15
    b104:	andeq	r0, r0, r0, ror #15
    b108:	andeq	r0, r0, r0, ror #15
    b10c:	andeq	r0, r0, r0, ror #15
    b110:	andeq	r0, r0, r0, ror #15
    b114:	andeq	r0, r0, r0, ror #15
    b118:	andeq	r0, r0, r0, ror #15
    b11c:	andeq	r0, r0, r0, ror #15
    b120:	andeq	r0, r0, r0, ror #15
    b124:	andeq	r0, r0, r0, ror #15
    b128:	andeq	r0, r0, r0, ror #15
    b12c:	andeq	r0, r0, r0, ror #15
    b130:	andeq	r0, r0, r0, ror #15
    b134:	andeq	r0, r0, r0, ror #15
    b138:	andeq	r0, r0, r0, ror #15
    b13c:	andeq	r0, r0, r0, ror #15
    b140:	andeq	r0, r0, r0, ror #15
    b144:	andeq	r0, r0, r0, ror #15
    b148:	andeq	r0, r0, r0, ror #15
    b14c:	andeq	r0, r0, r0, ror #15
    b150:	andeq	r0, r0, r0, ror #15
    b154:	andeq	r0, r0, r0, ror #15
    b158:	andeq	r0, r0, r0, ror #15
    b15c:	andeq	r0, r0, r0, ror #15
    b160:	andeq	r0, r0, r0, ror #15
    b164:	andeq	r0, r0, r0, ror #15
    b168:	andeq	r0, r0, r0, ror #15
    b16c:	andeq	r0, r0, r0, ror #15
    b170:	andeq	r0, r0, r0, ror #15
    b174:	andeq	r0, r0, r0, ror #15
    b178:	andeq	r0, r0, r0, ror #15
    b17c:	andeq	r0, r0, r0, ror #15
    b180:	andeq	r0, r0, r0, ror #15
    b184:	andeq	r0, r0, r0, ror #15
    b188:	andeq	r0, r0, r0, ror #15
    b18c:	andeq	r0, r0, r0, ror #15
    b190:	andeq	r0, r0, r0, ror #15
    b194:	andeq	r0, r0, r0, ror #15
    b198:	andeq	r0, r0, r0, ror #15
    b19c:	andeq	r0, r0, r0, ror #15
    b1a0:	andeq	r0, r0, r0, ror #15
    b1a4:	andeq	r0, r0, r0, ror #15
    b1a8:	andeq	r0, r0, r0, ror #15
    b1ac:	andeq	r0, r0, r0, ror #15
    b1b0:	andeq	r0, r0, r0, ror #15
    b1b4:	andeq	r0, r0, r0, ror #15
    b1b8:	andeq	r0, r0, r0, ror #15
    b1bc:	andeq	r0, r0, r0, ror #15
    b1c0:	andeq	r0, r0, r0, ror #15
    b1c4:	andeq	r0, r0, r0, ror #15
    b1c8:	andeq	r0, r0, r0, ror #15
    b1cc:	andeq	r0, r0, r0, ror #15
    b1d0:	andeq	r0, r0, r0, ror #15
    b1d4:	andeq	r0, r0, r0, ror #15
    b1d8:	andeq	r0, r0, r0, ror #15
    b1dc:	andeq	r0, r0, r0, ror #15
    b1e0:	andeq	r0, r0, r0, ror #15
    b1e4:	andeq	r0, r0, r0, ror #15
    b1e8:	andeq	r0, r0, r0, ror #15
    b1ec:	andeq	r0, r0, r0, ror #15
    b1f0:	andeq	r0, r0, r0, ror #15
    b1f4:	andeq	r0, r0, r0, ror #15
    b1f8:	andeq	r0, r0, r0, ror #15
    b1fc:	andeq	r0, r0, r0, ror #15
    b200:	andeq	r0, r0, r0, ror #15
    b204:	andeq	r0, r0, r0, ror #15
    b208:	andeq	r0, r0, r0, ror #15
    b20c:	andeq	r0, r0, r0, ror #15
    b210:	andeq	r0, r0, r0, ror #15
    b214:	andeq	r0, r0, r0, ror #15
    b218:	andeq	r0, r0, r0, ror #15
    b21c:	andeq	r0, r0, r0, ror #15
    b220:	andeq	r0, r0, r0, ror #15
    b224:	andeq	r0, r0, r0, ror #15
    b228:	andeq	r0, r0, r0, ror #15
    b22c:	andeq	r0, r0, r0, ror #15
    b230:	andeq	r0, r0, r0, ror #15
    b234:	andeq	r0, r0, r0, ror #15
    b238:	andeq	r0, r0, r0, ror #15
    b23c:	andeq	r0, r0, r0, ror #15
    b240:	andeq	r0, r0, r0, ror #15
    b244:	andeq	r0, r0, r0, ror #15
    b248:	andeq	r0, r0, r0, ror #15
    b24c:	andeq	r0, r0, r0, ror #15
    b250:	andeq	r0, r0, r0, ror #15
    b254:	andeq	r0, r0, r0, ror #15
    b258:	andeq	r0, r0, r0, ror #15
    b25c:	andeq	r0, r0, r0, ror #15
    b260:	andeq	r0, r0, r0, ror #15
    b264:	andeq	r0, r0, r0, ror #15
    b268:	andeq	r0, r0, r0, ror #15
    b26c:	andeq	r0, r0, r0, ror #15
    b270:	andeq	r0, r0, r0, ror #15
    b274:	andeq	r0, r0, r0, ror #15
    b278:	andeq	r0, r0, r0, ror #15
    b27c:	andeq	r0, r0, r0, ror #15
    b280:	andeq	r0, r0, r0, ror #15
    b284:	andeq	r0, r0, r0, ror #15
    b288:	andeq	r0, r0, r0, ror #15
    b28c:	andeq	r0, r0, r0, ror #15
    b290:	andeq	r0, r0, r0, ror #15
    b294:	andeq	r0, r0, r0, ror #15
    b298:	andeq	r0, r0, r0, ror #15
    b29c:	andeq	r0, r0, r0, ror #15
    b2a0:	andeq	r0, r0, r0, ror #15
    b2a4:	andeq	r0, r0, r0, ror #15
    b2a8:	andeq	r0, r0, r0, ror #15
    b2ac:	andeq	r0, r0, r0, ror #15
    b2b0:	andeq	r0, r0, r0, ror #15
    b2b4:	andeq	r0, r0, r0, ror #15
    b2b8:	andeq	r0, r0, r0, ror #15
    b2bc:	andeq	r0, r0, r0, ror #15
    b2c0:	andeq	r0, r0, r0, ror #15
    b2c4:	andeq	r0, r0, r0, ror #15
    b2c8:	andeq	r0, r0, r0, ror #15
    b2cc:	andeq	r0, r0, r0, ror #15
    b2d0:	andeq	r0, r0, r0, ror #15
    b2d4:	andeq	r0, r0, r0, ror #15
    b2d8:	andeq	r0, r0, r0, ror #15
    b2dc:	andeq	r0, r0, r0, ror #15
    b2e0:	andeq	r0, r0, r0, ror #15
    b2e4:	ldrdeq	r0, [r0], -ip
    b2e8:	ldrdeq	r0, [r0], -ip
    b2ec:	ldrdeq	r0, [r0], -ip
    b2f0:	ldrdeq	r0, [r0], -ip
    b2f4:	andeq	r0, r0, r0, ror #15
    b2f8:	andeq	r0, r0, r0, ror #15
    b2fc:	andeq	r0, r0, r0, ror #15
    b300:	andeq	r0, r0, r0, ror #15
    b304:	andeq	r0, r0, r0, ror #15
    b308:	andeq	r0, r0, r0, ror #15
    b30c:	andeq	r0, r0, r0, ror #15
    b310:	andeq	r0, r0, r0, ror #15
    b314:	andeq	r0, r0, r0, ror #15
    b318:	andeq	r0, r0, r0, ror #15
    b31c:	andeq	r0, r0, r0, ror #15
    b320:	andeq	r0, r0, r0, ror #15
    b324:	andeq	r0, r0, r0, ror #15
    b328:	andeq	r0, r0, r0, ror #15
    b32c:	andeq	r0, r0, r0, ror #15
    b330:	andeq	r0, r0, r0, ror #15
    b334:	andeq	r0, r0, r0, ror #15
    b338:	andeq	r0, r0, r0, ror #15
    b33c:	andeq	r0, r0, r0, ror #15
    b340:	andeq	r0, r0, r0, ror #15
    b344:	andeq	r0, r0, r0, ror #15
    b348:	andeq	r0, r0, r0, ror #15
    b34c:	andeq	r0, r0, r0, ror #15
    b350:	andeq	r0, r0, r0, ror #15
    b354:	andeq	r0, r0, r0, ror #15
    b358:	andeq	r0, r0, r0, ror #15
    b35c:	andeq	r0, r0, r0, ror #15
    b360:	andeq	r0, r0, r0, ror #15
    b364:	andeq	r0, r0, r0, ror #15
    b368:	andeq	r0, r0, r0, ror #15
    b36c:	andeq	r0, r0, r0, ror #15
    b370:	andeq	r0, r0, r0, ror #15
    b374:	andeq	r0, r0, r0, ror #15
    b378:	andeq	r0, r0, r0, ror #15
    b37c:	andeq	r0, r0, r0, ror #15
    b380:	andeq	r0, r0, r0, ror #15
    b384:	andeq	r0, r0, r0, ror #15
    b388:	andeq	r0, r0, r0, ror #15
    b38c:	andeq	r0, r0, r0, ror #15
    b390:	andeq	r0, r0, r0, ror #15
    b394:	andeq	r0, r0, r0, ror #15
    b398:	andeq	r0, r0, r0, ror #15
    b39c:	andeq	r0, r0, r0, ror #15
    b3a0:	andeq	r0, r0, r0, ror #15
    b3a4:	andeq	r0, r0, r0, ror #15
    b3a8:	andeq	r0, r0, r0, ror #15
    b3ac:	andeq	r0, r0, r0, ror #15
    b3b0:	andeq	r0, r0, r0, ror #15
    b3b4:	andeq	r0, r0, r0, ror #15
    b3b8:	andeq	r0, r0, r0, ror #15
    b3bc:	andeq	r0, r0, r0, ror #15
    b3c0:	andeq	r0, r0, r0, ror #15
    b3c4:	andeq	r0, r0, r0, ror #15
    b3c8:	andeq	r0, r0, r0, ror #15
    b3cc:	andeq	r0, r0, r0, ror #15
    b3d0:	andeq	r0, r0, r0, ror #15
    b3d4:	andeq	r0, r0, r0, ror #15
    b3d8:	andeq	r0, r0, r0, ror #15
    b3dc:	andeq	r0, r0, r0, ror #15
    b3e0:	andeq	r0, r0, r0, ror #15
    b3e4:	andeq	r0, r0, r0, ror #15
    b3e8:	andeq	r0, r0, r0, ror #15
    b3ec:	andeq	r0, r0, r0, ror #15
    b3f0:	andeq	r0, r0, r0, ror #15
    b3f4:	andeq	r0, r0, r0, ror #15
    b3f8:	andeq	r0, r0, r0, ror #15
    b3fc:	andeq	r0, r0, r0, ror #15
    b400:	andeq	r0, r0, r0, ror #15
    b404:	andeq	r0, r0, r0, ror #15
    b408:	andeq	r0, r0, r0, ror #15
    b40c:	andeq	r0, r0, r0, ror #15
    b410:	andeq	r0, r0, r0, ror #15
    b414:	andeq	r0, r0, r0, ror #15
    b418:	andeq	r0, r0, r0, ror #15
    b41c:	andeq	r0, r0, r0, ror #15
    b420:	andeq	r0, r0, r0, ror #15
    b424:	andeq	r0, r0, r0, ror #15
    b428:	andeq	r0, r0, r0, ror #15
    b42c:	andeq	r0, r0, r0, ror #15
    b430:	andeq	r0, r0, r0, ror #15
    b434:	andeq	r0, r0, r0, ror #15
    b438:	andeq	r0, r0, r0, ror #15
    b43c:	andeq	r0, r0, r0, ror #15
    b440:	andeq	r0, r0, r0, ror #15
    b444:	andeq	r0, r0, r0, ror #15
    b448:	andeq	r0, r0, r0, ror #15
    b44c:	andeq	r0, r0, r0, ror #15
    b450:	andeq	r0, r0, r0, ror #15
    b454:	andeq	r0, r0, r0, ror #15
    b458:	andeq	r0, r0, r0, ror #15
    b45c:	andeq	r0, r0, r0, ror #15
    b460:	andeq	r0, r0, r0, ror #15
    b464:	andeq	r0, r0, r0, ror #15
    b468:	andeq	r0, r0, r0, ror #15
    b46c:	andeq	r0, r0, r0, ror #15
    b470:	andeq	r0, r0, r0, ror #15
    b474:	andeq	r0, r0, r0, ror #15
    b478:	andeq	r0, r0, r0, ror #15
    b47c:	andeq	r0, r0, r0, ror #15
    b480:	andeq	r0, r0, r0, ror #15
    b484:	andeq	r0, r0, r0, ror #15
    b488:	andeq	r0, r0, r0, ror #15
    b48c:	andeq	r0, r0, r0, ror #15
    b490:	andeq	r0, r0, r0, ror #15
    b494:	andeq	r0, r0, r0, ror #15
    b498:	andeq	r0, r0, r0, ror #15
    b49c:	andeq	r0, r0, r0, ror #15
    b4a0:	andeq	r0, r0, r0, ror #15
    b4a4:	andeq	r0, r0, r0, ror #15
    b4a8:	andeq	r0, r0, r0, ror #15
    b4ac:	andeq	r0, r0, r0, ror #15
    b4b0:	andeq	r0, r0, r0, ror #15
    b4b4:	andeq	r0, r0, r0, ror #15
    b4b8:	andeq	r0, r0, r0, ror #15
    b4bc:	andeq	r0, r0, r0, ror #15
    b4c0:	andeq	r0, r0, r0, ror #15
    b4c4:	andeq	r0, r0, r0, ror #15
    b4c8:	andeq	r0, r0, r0, ror #15
    b4cc:	andeq	r0, r0, r0, ror #15
    b4d0:	andeq	r0, r0, r0, ror #15
    b4d4:	andeq	r0, r0, r0, ror #15
    b4d8:	andeq	r0, r0, r0, ror #15
    b4dc:	andeq	r0, r0, r0, ror #15
    b4e0:	andeq	r0, r0, r0, ror #15
    b4e4:	andeq	r0, r0, r0, ror #15
    b4e8:	andeq	r0, r0, r0, ror #15
    b4ec:	ldrdeq	r0, [r0], -ip
    b4f0:	cmp	r3, #2432	; 0x980
    b4f4:	bge	b5c4 <lell_packet_is_data@@Base+0x1098>
    b4f8:	movw	r1, #2036	; 0x7f4
    b4fc:	sub	r1, r3, r1
    b500:	cmp	r1, #28
    b504:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b508:	movw	r1, #2302	; 0x8fe
    b50c:	sub	r1, r3, r1
    b510:	cmp	r1, #4
    b514:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b518:	cmp	r3, #2176	; 0x880
    b51c:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b520:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b524:	andeq	r8, r0, r7, lsr #29
    b528:	andeq	r8, r0, sl, asr #20
    b52c:	cmp	r3, #1152	; 0x480
    b530:	bge	b590 <lell_packet_is_data@@Base+0x1064>
    b534:	sub	r1, r3, #1016	; 0x3f8
    b538:	cmp	r1, #15
    b53c:	bhi	b548 <lell_packet_is_data@@Base+0x101c>
    b540:	cmp	r1, #9
    b544:	bne	b6c8 <lell_packet_is_data@@Base+0x119c>
    b548:	movw	r1, #766	; 0x2fe
    b54c:	sub	r1, r3, r1
    b550:	cmp	r1, #4
    b554:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b558:	cmp	r3, #896	; 0x380
    b55c:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b560:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b564:	cmp	r3, #4064	; 0xfe0
    b568:	blt	b6a8 <lell_packet_is_data@@Base+0x117c>
    b56c:	sub	r1, r3, #4064	; 0xfe0
    b570:	cmp	r1, #31
    b574:	bhi	b6cc <lell_packet_is_data@@Base+0x11a0>
    b578:	movw	r5, #1
    b57c:	mov	r3, #1
    b580:	movt	r5, #65535	; 0xffff
    b584:	tst	r5, r3, lsl r1
    b588:	addne	r0, r0, #1
    b58c:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b590:	movw	r1, #1531	; 0x5fb
    b594:	cmp	r3, r1
    b598:	ble	b660 <lell_packet_is_data@@Base+0x1134>
    b59c:	cmp	r3, #1664	; 0x680
    b5a0:	bge	b684 <lell_packet_is_data@@Base+0x1158>
    b5a4:	movw	r1, #1532	; 0x5fc
    b5a8:	sub	r1, r3, r1
    b5ac:	cmp	r1, #7
    b5b0:	bhi	b6cc <lell_packet_is_data@@Base+0x11a0>
    b5b4:	cmp	r1, #4
    b5b8:	bne	b6c8 <lell_packet_is_data@@Base+0x119c>
    b5bc:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b5c0:	andeq	r8, r0, r7, lsr #30
    b5c4:	cmp	r3, #2688	; 0xa80
    b5c8:	bge	b61c <lell_packet_is_data@@Base+0x10f0>
    b5cc:	movw	r1, #2556	; 0x9fc
    b5d0:	sub	r1, r3, r1
    b5d4:	cmp	r1, #7
    b5d8:	bhi	b5e4 <lell_packet_is_data@@Base+0x10b8>
    b5dc:	cmp	r1, #4
    b5e0:	bne	b6c8 <lell_packet_is_data@@Base+0x119c>
    b5e4:	cmp	r3, #2432	; 0x980
    b5e8:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b5ec:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b5f0:	movw	r1, #3580	; 0xdfc
    b5f4:	sub	r1, r3, r1
    b5f8:	cmp	r1, #8
    b5fc:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b600:	movw	r1, #3326	; 0xcfe
    b604:	sub	r1, r3, r1
    b608:	cmp	r1, #4
    b60c:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b610:	cmp	r3, #3456	; 0xd80
    b614:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b618:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b61c:	movw	r1, #2814	; 0xafe
    b620:	sub	r1, r3, r1
    b624:	cmp	r1, #4
    b628:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b62c:	cmp	r3, #2688	; 0xa80
    b630:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b634:	cmp	r3, #2944	; 0xb80
    b638:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b63c:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b640:	sub	r1, r3, #508	; 0x1fc
    b644:	cmp	r1, #7
    b648:	bhi	b654 <lell_packet_is_data@@Base+0x1128>
    b64c:	cmp	r1, #4
    b650:	bne	b6c8 <lell_packet_is_data@@Base+0x119c>
    b654:	cmp	r3, #640	; 0x280
    b658:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b65c:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b660:	movw	r1, #1278	; 0x4fe
    b664:	sub	r1, r3, r1
    b668:	cmp	r1, #4
    b66c:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b670:	cmp	r3, #1152	; 0x480
    b674:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b678:	cmp	r3, #1408	; 0x580
    b67c:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b680:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b684:	movw	r1, #1790	; 0x6fe
    b688:	sub	r1, r3, r1
    b68c:	cmp	r1, #4
    b690:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b694:	cmp	r3, #1664	; 0x680
    b698:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b69c:	cmp	r3, #1920	; 0x780
    b6a0:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b6a4:	b	b6cc <lell_packet_is_data@@Base+0x11a0>
    b6a8:	movw	r1, #3838	; 0xefe
    b6ac:	sub	r1, r3, r1
    b6b0:	cmp	r1, #4
    b6b4:	bcc	b6c8 <lell_packet_is_data@@Base+0x119c>
    b6b8:	cmp	r3, #3712	; 0xe80
    b6bc:	beq	b6c8 <lell_packet_is_data@@Base+0x119c>
    b6c0:	cmp	r3, #3968	; 0xf80
    b6c4:	bne	b6cc <lell_packet_is_data@@Base+0x11a0>
    b6c8:	add	r0, r0, #1
    b6cc:	bfc	r2, #12, #20
    b6d0:	movw	r1, #2035	; 0x7f3
    b6d4:	cmp	r2, r1
    b6d8:	ble	b718 <lell_packet_is_data@@Base+0x11ec>
    b6dc:	movw	r1, #3063	; 0xbf7
    b6e0:	cmp	r2, r1
    b6e4:	ble	bd3c <lell_packet_is_data@@Base+0x1810>
    b6e8:	cmp	r2, #3712	; 0xe80
    b6ec:	bge	bda8 <lell_packet_is_data@@Base+0x187c>
    b6f0:	movw	r1, #3325	; 0xcfd
    b6f4:	cmp	r2, r1
    b6f8:	bgt	be30 <lell_packet_is_data@@Base+0x1904>
    b6fc:	movw	r1, #3064	; 0xbf8
    b700:	sub	r1, r2, r1
    b704:	cmp	r1, #16
    b708:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    b70c:	cmp	r2, #3200	; 0xc80
    b710:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    b714:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    b718:	movw	r1, #765	; 0x2fd
    b71c:	cmp	r2, r1
    b720:	bgt	bd70 <lell_packet_is_data@@Base+0x1844>
    b724:	cmp	r2, #384	; 0x180
    b728:	bhi	be80 <lell_packet_is_data@@Base+0x1954>
    b72c:	add	r1, pc, #4
    b730:	ldr	r2, [r1, r2, lsl #2]
    b734:	add	pc, r1, r2
    b738:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b73c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b740:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b744:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b748:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b74c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b750:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b754:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b758:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b75c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b760:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b764:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b768:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b76c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b770:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b774:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b778:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b77c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b780:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b784:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b788:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b78c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b790:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b794:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b798:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b79c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b7b8:	ldrdeq	r0, [r0], -r4
    b7bc:	ldrdeq	r0, [r0], -r4
    b7c0:	ldrdeq	r0, [r0], -r4
    b7c4:	ldrdeq	r0, [r0], -r4
    b7c8:	ldrdeq	r0, [r0], -r4
    b7cc:	ldrdeq	r0, [r0], -r4
    b7d0:	ldrdeq	r0, [r0], -r4
    b7d4:	ldrdeq	r0, [r0], -r4
    b7d8:	ldrdeq	r0, [r0], -r4
    b7dc:	ldrdeq	r0, [r0], -r4
    b7e0:	ldrdeq	r0, [r0], -r4
    b7e4:	ldrdeq	r0, [r0], -r4
    b7e8:	ldrdeq	r0, [r0], -r4
    b7ec:	ldrdeq	r0, [r0], -r4
    b7f0:	ldrdeq	r0, [r0], -r4
    b7f4:	ldrdeq	r0, [r0], -r4
    b7f8:	ldrdeq	r0, [r0], -r4
    b7fc:	ldrdeq	r0, [r0], -r4
    b800:	ldrdeq	r0, [r0], -r4
    b804:	ldrdeq	r0, [r0], -r4
    b808:	ldrdeq	r0, [r0], -r4
    b80c:	ldrdeq	r0, [r0], -r4
    b810:	ldrdeq	r0, [r0], -r4
    b814:	ldrdeq	r0, [r0], -r4
    b818:	ldrdeq	r0, [r0], -r4
    b81c:	ldrdeq	r0, [r0], -r4
    b820:	ldrdeq	r0, [r0], -r4
    b824:	ldrdeq	r0, [r0], -r4
    b828:	ldrdeq	r0, [r0], -r4
    b82c:	ldrdeq	r0, [r0], -r4
    b830:	ldrdeq	r0, [r0], -r4
    b834:	ldrdeq	r0, [r0], -r4
    b838:	ldrdeq	r0, [r0], -r4
    b83c:	ldrdeq	r0, [r0], -r4
    b840:	ldrdeq	r0, [r0], -r4
    b844:	ldrdeq	r0, [r0], -r4
    b848:	ldrdeq	r0, [r0], -r4
    b84c:	ldrdeq	r0, [r0], -r4
    b850:	ldrdeq	r0, [r0], -r4
    b854:	ldrdeq	r0, [r0], -r4
    b858:	ldrdeq	r0, [r0], -r4
    b85c:	ldrdeq	r0, [r0], -r4
    b860:	ldrdeq	r0, [r0], -r4
    b864:	ldrdeq	r0, [r0], -r4
    b868:	ldrdeq	r0, [r0], -r4
    b86c:	ldrdeq	r0, [r0], -r4
    b870:	ldrdeq	r0, [r0], -r4
    b874:	ldrdeq	r0, [r0], -r4
    b878:	ldrdeq	r0, [r0], -r4
    b87c:	ldrdeq	r0, [r0], -r4
    b880:	ldrdeq	r0, [r0], -r4
    b884:	ldrdeq	r0, [r0], -r4
    b888:	ldrdeq	r0, [r0], -r4
    b88c:	ldrdeq	r0, [r0], -r4
    b890:	ldrdeq	r0, [r0], -r4
    b894:	ldrdeq	r0, [r0], -r4
    b898:	ldrdeq	r0, [r0], -r4
    b89c:	ldrdeq	r0, [r0], -r4
    b8a0:	ldrdeq	r0, [r0], -r4
    b8a4:	ldrdeq	r0, [r0], -r4
    b8a8:	ldrdeq	r0, [r0], -r4
    b8ac:	ldrdeq	r0, [r0], -r4
    b8b0:	ldrdeq	r0, [r0], -r4
    b8b4:	ldrdeq	r0, [r0], -r4
    b8b8:	ldrdeq	r0, [r0], -r4
    b8bc:	ldrdeq	r0, [r0], -r4
    b8c0:	ldrdeq	r0, [r0], -r4
    b8c4:	ldrdeq	r0, [r0], -r4
    b8c8:	ldrdeq	r0, [r0], -r4
    b8cc:	ldrdeq	r0, [r0], -r4
    b8d0:	ldrdeq	r0, [r0], -r4
    b8d4:	ldrdeq	r0, [r0], -r4
    b8d8:	ldrdeq	r0, [r0], -r4
    b8dc:	ldrdeq	r0, [r0], -r4
    b8e0:	ldrdeq	r0, [r0], -r4
    b8e4:	ldrdeq	r0, [r0], -r4
    b8e8:	ldrdeq	r0, [r0], -r4
    b8ec:	ldrdeq	r0, [r0], -r4
    b8f0:	ldrdeq	r0, [r0], -r4
    b8f4:	ldrdeq	r0, [r0], -r4
    b8f8:	ldrdeq	r0, [r0], -r4
    b8fc:	ldrdeq	r0, [r0], -r4
    b900:	ldrdeq	r0, [r0], -r4
    b904:	ldrdeq	r0, [r0], -r4
    b908:	ldrdeq	r0, [r0], -r4
    b90c:	ldrdeq	r0, [r0], -r4
    b910:	ldrdeq	r0, [r0], -r4
    b914:	ldrdeq	r0, [r0], -r4
    b918:	ldrdeq	r0, [r0], -r4
    b91c:	ldrdeq	r0, [r0], -r4
    b920:	ldrdeq	r0, [r0], -r4
    b924:	ldrdeq	r0, [r0], -r4
    b928:	ldrdeq	r0, [r0], -r4
    b92c:	ldrdeq	r0, [r0], -r4
    b930:	ldrdeq	r0, [r0], -r4
    b934:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b938:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b93c:	ldrdeq	r0, [r0], -r4
    b940:	ldrdeq	r0, [r0], -r4
    b944:	ldrdeq	r0, [r0], -r4
    b948:	ldrdeq	r0, [r0], -r4
    b94c:	ldrdeq	r0, [r0], -r4
    b950:	ldrdeq	r0, [r0], -r4
    b954:	ldrdeq	r0, [r0], -r4
    b958:	ldrdeq	r0, [r0], -r4
    b95c:	ldrdeq	r0, [r0], -r4
    b960:	ldrdeq	r0, [r0], -r4
    b964:	ldrdeq	r0, [r0], -r4
    b968:	ldrdeq	r0, [r0], -r4
    b96c:	ldrdeq	r0, [r0], -r4
    b970:	ldrdeq	r0, [r0], -r4
    b974:	ldrdeq	r0, [r0], -r4
    b978:	ldrdeq	r0, [r0], -r4
    b97c:	ldrdeq	r0, [r0], -r4
    b980:	ldrdeq	r0, [r0], -r4
    b984:	ldrdeq	r0, [r0], -r4
    b988:	ldrdeq	r0, [r0], -r4
    b98c:	ldrdeq	r0, [r0], -r4
    b990:	ldrdeq	r0, [r0], -r4
    b994:	ldrdeq	r0, [r0], -r4
    b998:	ldrdeq	r0, [r0], -r4
    b99c:	ldrdeq	r0, [r0], -r4
    b9a0:	ldrdeq	r0, [r0], -r4
    b9a4:	ldrdeq	r0, [r0], -r4
    b9a8:	ldrdeq	r0, [r0], -r4
    b9ac:	ldrdeq	r0, [r0], -r4
    b9b0:	ldrdeq	r0, [r0], -r4
    b9b4:	ldrdeq	r0, [r0], -r4
    b9b8:	ldrdeq	r0, [r0], -r4
    b9bc:	ldrdeq	r0, [r0], -r4
    b9c0:	ldrdeq	r0, [r0], -r4
    b9c4:	ldrdeq	r0, [r0], -r4
    b9c8:	ldrdeq	r0, [r0], -r4
    b9cc:	ldrdeq	r0, [r0], -r4
    b9d0:	ldrdeq	r0, [r0], -r4
    b9d4:	ldrdeq	r0, [r0], -r4
    b9d8:	ldrdeq	r0, [r0], -r4
    b9dc:	ldrdeq	r0, [r0], -r4
    b9e0:	ldrdeq	r0, [r0], -r4
    b9e4:	ldrdeq	r0, [r0], -r4
    b9e8:	ldrdeq	r0, [r0], -r4
    b9ec:	ldrdeq	r0, [r0], -r4
    b9f0:	ldrdeq	r0, [r0], -r4
    b9f4:	ldrdeq	r0, [r0], -r4
    b9f8:	ldrdeq	r0, [r0], -r4
    b9fc:	ldrdeq	r0, [r0], -r4
    ba00:	ldrdeq	r0, [r0], -r4
    ba04:	ldrdeq	r0, [r0], -r4
    ba08:	ldrdeq	r0, [r0], -r4
    ba0c:	ldrdeq	r0, [r0], -r4
    ba10:	ldrdeq	r0, [r0], -r4
    ba14:	ldrdeq	r0, [r0], -r4
    ba18:	ldrdeq	r0, [r0], -r4
    ba1c:	ldrdeq	r0, [r0], -r4
    ba20:	ldrdeq	r0, [r0], -r4
    ba24:	ldrdeq	r0, [r0], -r4
    ba28:	ldrdeq	r0, [r0], -r4
    ba2c:	ldrdeq	r0, [r0], -r4
    ba30:	ldrdeq	r0, [r0], -r4
    ba34:	ldrdeq	r0, [r0], -r4
    ba38:	ldrdeq	r0, [r0], -r4
    ba3c:	ldrdeq	r0, [r0], -r4
    ba40:	ldrdeq	r0, [r0], -r4
    ba44:	ldrdeq	r0, [r0], -r4
    ba48:	ldrdeq	r0, [r0], -r4
    ba4c:	ldrdeq	r0, [r0], -r4
    ba50:	ldrdeq	r0, [r0], -r4
    ba54:	ldrdeq	r0, [r0], -r4
    ba58:	ldrdeq	r0, [r0], -r4
    ba5c:	ldrdeq	r0, [r0], -r4
    ba60:	ldrdeq	r0, [r0], -r4
    ba64:	ldrdeq	r0, [r0], -r4
    ba68:	ldrdeq	r0, [r0], -r4
    ba6c:	ldrdeq	r0, [r0], -r4
    ba70:	ldrdeq	r0, [r0], -r4
    ba74:	ldrdeq	r0, [r0], -r4
    ba78:	ldrdeq	r0, [r0], -r4
    ba7c:	ldrdeq	r0, [r0], -r4
    ba80:	ldrdeq	r0, [r0], -r4
    ba84:	ldrdeq	r0, [r0], -r4
    ba88:	ldrdeq	r0, [r0], -r4
    ba8c:	ldrdeq	r0, [r0], -r4
    ba90:	ldrdeq	r0, [r0], -r4
    ba94:	ldrdeq	r0, [r0], -r4
    ba98:	ldrdeq	r0, [r0], -r4
    ba9c:	ldrdeq	r0, [r0], -r4
    baa0:	ldrdeq	r0, [r0], -r4
    baa4:	ldrdeq	r0, [r0], -r4
    baa8:	ldrdeq	r0, [r0], -r4
    baac:	ldrdeq	r0, [r0], -r4
    bab0:	ldrdeq	r0, [r0], -r4
    bab4:	ldrdeq	r0, [r0], -r4
    bab8:	ldrdeq	r0, [r0], -r4
    babc:	ldrdeq	r0, [r0], -r4
    bac0:	ldrdeq	r0, [r0], -r4
    bac4:	ldrdeq	r0, [r0], -r4
    bac8:	ldrdeq	r0, [r0], -r4
    bacc:	ldrdeq	r0, [r0], -r4
    bad0:	ldrdeq	r0, [r0], -r4
    bad4:	ldrdeq	r0, [r0], -r4
    bad8:	ldrdeq	r0, [r0], -r4
    badc:	ldrdeq	r0, [r0], -r4
    bae0:	ldrdeq	r0, [r0], -r4
    bae4:	ldrdeq	r0, [r0], -r4
    bae8:	ldrdeq	r0, [r0], -r4
    baec:	ldrdeq	r0, [r0], -r4
    baf0:	ldrdeq	r0, [r0], -r4
    baf4:	ldrdeq	r0, [r0], -r4
    baf8:	ldrdeq	r0, [r0], -r4
    bafc:	ldrdeq	r0, [r0], -r4
    bb00:	ldrdeq	r0, [r0], -r4
    bb04:	ldrdeq	r0, [r0], -r4
    bb08:	ldrdeq	r0, [r0], -r4
    bb0c:	ldrdeq	r0, [r0], -r4
    bb10:	ldrdeq	r0, [r0], -r4
    bb14:	ldrdeq	r0, [r0], -r4
    bb18:	ldrdeq	r0, [r0], -r4
    bb1c:	ldrdeq	r0, [r0], -r4
    bb20:	ldrdeq	r0, [r0], -r4
    bb24:	ldrdeq	r0, [r0], -r4
    bb28:	ldrdeq	r0, [r0], -r4
    bb2c:	ldrdeq	r0, [r0], -r4
    bb30:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bb34:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bb38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bb3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bb40:	ldrdeq	r0, [r0], -r4
    bb44:	ldrdeq	r0, [r0], -r4
    bb48:	ldrdeq	r0, [r0], -r4
    bb4c:	ldrdeq	r0, [r0], -r4
    bb50:	ldrdeq	r0, [r0], -r4
    bb54:	ldrdeq	r0, [r0], -r4
    bb58:	ldrdeq	r0, [r0], -r4
    bb5c:	ldrdeq	r0, [r0], -r4
    bb60:	ldrdeq	r0, [r0], -r4
    bb64:	ldrdeq	r0, [r0], -r4
    bb68:	ldrdeq	r0, [r0], -r4
    bb6c:	ldrdeq	r0, [r0], -r4
    bb70:	ldrdeq	r0, [r0], -r4
    bb74:	ldrdeq	r0, [r0], -r4
    bb78:	ldrdeq	r0, [r0], -r4
    bb7c:	ldrdeq	r0, [r0], -r4
    bb80:	ldrdeq	r0, [r0], -r4
    bb84:	ldrdeq	r0, [r0], -r4
    bb88:	ldrdeq	r0, [r0], -r4
    bb8c:	ldrdeq	r0, [r0], -r4
    bb90:	ldrdeq	r0, [r0], -r4
    bb94:	ldrdeq	r0, [r0], -r4
    bb98:	ldrdeq	r0, [r0], -r4
    bb9c:	ldrdeq	r0, [r0], -r4
    bba0:	ldrdeq	r0, [r0], -r4
    bba4:	ldrdeq	r0, [r0], -r4
    bba8:	ldrdeq	r0, [r0], -r4
    bbac:	ldrdeq	r0, [r0], -r4
    bbb0:	ldrdeq	r0, [r0], -r4
    bbb4:	ldrdeq	r0, [r0], -r4
    bbb8:	ldrdeq	r0, [r0], -r4
    bbbc:	ldrdeq	r0, [r0], -r4
    bbc0:	ldrdeq	r0, [r0], -r4
    bbc4:	ldrdeq	r0, [r0], -r4
    bbc8:	ldrdeq	r0, [r0], -r4
    bbcc:	ldrdeq	r0, [r0], -r4
    bbd0:	ldrdeq	r0, [r0], -r4
    bbd4:	ldrdeq	r0, [r0], -r4
    bbd8:	ldrdeq	r0, [r0], -r4
    bbdc:	ldrdeq	r0, [r0], -r4
    bbe0:	ldrdeq	r0, [r0], -r4
    bbe4:	ldrdeq	r0, [r0], -r4
    bbe8:	ldrdeq	r0, [r0], -r4
    bbec:	ldrdeq	r0, [r0], -r4
    bbf0:	ldrdeq	r0, [r0], -r4
    bbf4:	ldrdeq	r0, [r0], -r4
    bbf8:	ldrdeq	r0, [r0], -r4
    bbfc:	ldrdeq	r0, [r0], -r4
    bc00:	ldrdeq	r0, [r0], -r4
    bc04:	ldrdeq	r0, [r0], -r4
    bc08:	ldrdeq	r0, [r0], -r4
    bc0c:	ldrdeq	r0, [r0], -r4
    bc10:	ldrdeq	r0, [r0], -r4
    bc14:	ldrdeq	r0, [r0], -r4
    bc18:	ldrdeq	r0, [r0], -r4
    bc1c:	ldrdeq	r0, [r0], -r4
    bc20:	ldrdeq	r0, [r0], -r4
    bc24:	ldrdeq	r0, [r0], -r4
    bc28:	ldrdeq	r0, [r0], -r4
    bc2c:	ldrdeq	r0, [r0], -r4
    bc30:	ldrdeq	r0, [r0], -r4
    bc34:	ldrdeq	r0, [r0], -r4
    bc38:	ldrdeq	r0, [r0], -r4
    bc3c:	ldrdeq	r0, [r0], -r4
    bc40:	ldrdeq	r0, [r0], -r4
    bc44:	ldrdeq	r0, [r0], -r4
    bc48:	ldrdeq	r0, [r0], -r4
    bc4c:	ldrdeq	r0, [r0], -r4
    bc50:	ldrdeq	r0, [r0], -r4
    bc54:	ldrdeq	r0, [r0], -r4
    bc58:	ldrdeq	r0, [r0], -r4
    bc5c:	ldrdeq	r0, [r0], -r4
    bc60:	ldrdeq	r0, [r0], -r4
    bc64:	ldrdeq	r0, [r0], -r4
    bc68:	ldrdeq	r0, [r0], -r4
    bc6c:	ldrdeq	r0, [r0], -r4
    bc70:	ldrdeq	r0, [r0], -r4
    bc74:	ldrdeq	r0, [r0], -r4
    bc78:	ldrdeq	r0, [r0], -r4
    bc7c:	ldrdeq	r0, [r0], -r4
    bc80:	ldrdeq	r0, [r0], -r4
    bc84:	ldrdeq	r0, [r0], -r4
    bc88:	ldrdeq	r0, [r0], -r4
    bc8c:	ldrdeq	r0, [r0], -r4
    bc90:	ldrdeq	r0, [r0], -r4
    bc94:	ldrdeq	r0, [r0], -r4
    bc98:	ldrdeq	r0, [r0], -r4
    bc9c:	ldrdeq	r0, [r0], -r4
    bca0:	ldrdeq	r0, [r0], -r4
    bca4:	ldrdeq	r0, [r0], -r4
    bca8:	ldrdeq	r0, [r0], -r4
    bcac:	ldrdeq	r0, [r0], -r4
    bcb0:	ldrdeq	r0, [r0], -r4
    bcb4:	ldrdeq	r0, [r0], -r4
    bcb8:	ldrdeq	r0, [r0], -r4
    bcbc:	ldrdeq	r0, [r0], -r4
    bcc0:	ldrdeq	r0, [r0], -r4
    bcc4:	ldrdeq	r0, [r0], -r4
    bcc8:	ldrdeq	r0, [r0], -r4
    bccc:	ldrdeq	r0, [r0], -r4
    bcd0:	ldrdeq	r0, [r0], -r4
    bcd4:	ldrdeq	r0, [r0], -r4
    bcd8:	ldrdeq	r0, [r0], -r4
    bcdc:	ldrdeq	r0, [r0], -r4
    bce0:	ldrdeq	r0, [r0], -r4
    bce4:	ldrdeq	r0, [r0], -r4
    bce8:	ldrdeq	r0, [r0], -r4
    bcec:	ldrdeq	r0, [r0], -r4
    bcf0:	ldrdeq	r0, [r0], -r4
    bcf4:	ldrdeq	r0, [r0], -r4
    bcf8:	ldrdeq	r0, [r0], -r4
    bcfc:	ldrdeq	r0, [r0], -r4
    bd00:	ldrdeq	r0, [r0], -r4
    bd04:	ldrdeq	r0, [r0], -r4
    bd08:	ldrdeq	r0, [r0], -r4
    bd0c:	ldrdeq	r0, [r0], -r4
    bd10:	ldrdeq	r0, [r0], -r4
    bd14:	ldrdeq	r0, [r0], -r4
    bd18:	ldrdeq	r0, [r0], -r4
    bd1c:	ldrdeq	r0, [r0], -r4
    bd20:	ldrdeq	r0, [r0], -r4
    bd24:	ldrdeq	r0, [r0], -r4
    bd28:	ldrdeq	r0, [r0], -r4
    bd2c:	ldrdeq	r0, [r0], -r4
    bd30:	ldrdeq	r0, [r0], -r4
    bd34:	ldrdeq	r0, [r0], -r4
    bd38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bd3c:	cmp	r2, #2432	; 0x980
    bd40:	bge	be04 <lell_packet_is_data@@Base+0x18d8>
    bd44:	movw	r1, #2036	; 0x7f4
    bd48:	sub	r1, r2, r1
    bd4c:	cmp	r1, #28
    bd50:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    bd54:	movw	r1, #2302	; 0x8fe
    bd58:	sub	r1, r2, r1
    bd5c:	cmp	r1, #4
    bd60:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    bd64:	cmp	r2, #2176	; 0x880
    bd68:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bd6c:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bd70:	cmp	r2, #1152	; 0x480
    bd74:	bge	bdd4 <lell_packet_is_data@@Base+0x18a8>
    bd78:	sub	r1, r2, #1016	; 0x3f8
    bd7c:	cmp	r1, #15
    bd80:	bhi	bd8c <lell_packet_is_data@@Base+0x1860>
    bd84:	cmp	r1, #9
    bd88:	bne	bf08 <lell_packet_is_data@@Base+0x19dc>
    bd8c:	movw	r1, #766	; 0x2fe
    bd90:	sub	r1, r2, r1
    bd94:	cmp	r1, #4
    bd98:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    bd9c:	cmp	r2, #896	; 0x380
    bda0:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bda4:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bda8:	cmp	r2, #4064	; 0xfe0
    bdac:	blt	bee8 <lell_packet_is_data@@Base+0x19bc>
    bdb0:	sub	r1, r2, #4064	; 0xfe0
    bdb4:	cmp	r1, #31
    bdb8:	bhi	bf0c <lell_packet_is_data@@Base+0x19e0>
    bdbc:	movw	r3, #1
    bdc0:	mov	r2, #1
    bdc4:	movt	r3, #65535	; 0xffff
    bdc8:	tst	r3, r2, lsl r1
    bdcc:	addne	r0, r0, #1
    bdd0:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bdd4:	movw	r1, #1531	; 0x5fb
    bdd8:	cmp	r2, r1
    bddc:	ble	bea0 <lell_packet_is_data@@Base+0x1974>
    bde0:	cmp	r2, #1664	; 0x680
    bde4:	bge	bec4 <lell_packet_is_data@@Base+0x1998>
    bde8:	movw	r1, #1532	; 0x5fc
    bdec:	sub	r1, r2, r1
    bdf0:	cmp	r1, #7
    bdf4:	bhi	bf0c <lell_packet_is_data@@Base+0x19e0>
    bdf8:	cmp	r1, #4
    bdfc:	bne	bf08 <lell_packet_is_data@@Base+0x19dc>
    be00:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    be04:	cmp	r2, #2688	; 0xa80
    be08:	bge	be5c <lell_packet_is_data@@Base+0x1930>
    be0c:	movw	r1, #2556	; 0x9fc
    be10:	sub	r1, r2, r1
    be14:	cmp	r1, #7
    be18:	bhi	be24 <lell_packet_is_data@@Base+0x18f8>
    be1c:	cmp	r1, #4
    be20:	bne	bf08 <lell_packet_is_data@@Base+0x19dc>
    be24:	cmp	r2, #2432	; 0x980
    be28:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    be2c:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    be30:	movw	r1, #3580	; 0xdfc
    be34:	sub	r1, r2, r1
    be38:	cmp	r1, #8
    be3c:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    be40:	movw	r1, #3326	; 0xcfe
    be44:	sub	r1, r2, r1
    be48:	cmp	r1, #4
    be4c:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    be50:	cmp	r2, #3456	; 0xd80
    be54:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    be58:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    be5c:	movw	r1, #2814	; 0xafe
    be60:	sub	r1, r2, r1
    be64:	cmp	r1, #4
    be68:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    be6c:	cmp	r2, #2688	; 0xa80
    be70:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    be74:	cmp	r2, #2944	; 0xb80
    be78:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    be7c:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    be80:	sub	r1, r2, #508	; 0x1fc
    be84:	cmp	r1, #7
    be88:	bhi	be94 <lell_packet_is_data@@Base+0x1968>
    be8c:	cmp	r1, #4
    be90:	bne	bf08 <lell_packet_is_data@@Base+0x19dc>
    be94:	cmp	r2, #640	; 0x280
    be98:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    be9c:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bea0:	movw	r1, #1278	; 0x4fe
    bea4:	sub	r1, r2, r1
    bea8:	cmp	r1, #4
    beac:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    beb0:	cmp	r2, #1152	; 0x480
    beb4:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    beb8:	cmp	r2, #1408	; 0x580
    bebc:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bec0:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bec4:	movw	r1, #1790	; 0x6fe
    bec8:	sub	r1, r2, r1
    becc:	cmp	r1, #4
    bed0:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    bed4:	cmp	r2, #1664	; 0x680
    bed8:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bedc:	cmp	r2, #1920	; 0x780
    bee0:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bee4:	b	bf0c <lell_packet_is_data@@Base+0x19e0>
    bee8:	movw	r1, #3838	; 0xefe
    beec:	sub	r1, r2, r1
    bef0:	cmp	r1, #4
    bef4:	bcc	bf08 <lell_packet_is_data@@Base+0x19dc>
    bef8:	cmp	r2, #3712	; 0xe80
    befc:	beq	bf08 <lell_packet_is_data@@Base+0x19dc>
    bf00:	cmp	r2, #3968	; 0xf80
    bf04:	bne	bf0c <lell_packet_is_data@@Base+0x19e0>
    bf08:	add	r0, r0, #1
    bf0c:	ubfx	r3, ip, #12, #12
    bf10:	movw	r1, #2035	; 0x7f3
    bf14:	lsr	r2, ip, #16
    bf18:	cmp	r3, r1
    bf1c:	ble	bf5c <lell_packet_is_data@@Base+0x1a30>
    bf20:	movw	r1, #3063	; 0xbf7
    bf24:	cmp	r3, r1
    bf28:	ble	c580 <lell_packet_is_data@@Base+0x2054>
    bf2c:	cmp	r3, #3712	; 0xe80
    bf30:	bge	c5ec <lell_packet_is_data@@Base+0x20c0>
    bf34:	movw	r1, #3325	; 0xcfd
    bf38:	cmp	r3, r1
    bf3c:	bgt	c674 <lell_packet_is_data@@Base+0x2148>
    bf40:	movw	r1, #3064	; 0xbf8
    bf44:	sub	r1, r3, r1
    bf48:	cmp	r1, #16
    bf4c:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    bf50:	cmp	r3, #3200	; 0xc80
    bf54:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    bf58:	b	c750 <lell_packet_is_data@@Base+0x2224>
    bf5c:	movw	r1, #765	; 0x2fd
    bf60:	cmp	r3, r1
    bf64:	bgt	c5b4 <lell_packet_is_data@@Base+0x2088>
    bf68:	cmp	r3, #384	; 0x180
    bf6c:	bhi	c6c4 <lell_packet_is_data@@Base+0x2198>
    bf70:	add	r1, pc, #4
    bf74:	ldr	r3, [r1, r3, lsl #2]
    bf78:	add	pc, r1, r3
    bf7c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf80:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bf9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfa0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfa4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfa8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfb0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfb4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfb8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfcc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfd0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfd8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfdc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfe0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfe4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfe8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bfec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bff4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bff8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bffc:	ldrdeq	r0, [r0], -r4
    c000:	ldrdeq	r0, [r0], -r4
    c004:	ldrdeq	r0, [r0], -r4
    c008:	ldrdeq	r0, [r0], -r4
    c00c:	ldrdeq	r0, [r0], -r4
    c010:	ldrdeq	r0, [r0], -r4
    c014:	ldrdeq	r0, [r0], -r4
    c018:	ldrdeq	r0, [r0], -r4
    c01c:	ldrdeq	r0, [r0], -r4
    c020:	ldrdeq	r0, [r0], -r4
    c024:	ldrdeq	r0, [r0], -r4
    c028:	ldrdeq	r0, [r0], -r4
    c02c:	ldrdeq	r0, [r0], -r4
    c030:	ldrdeq	r0, [r0], -r4
    c034:	ldrdeq	r0, [r0], -r4
    c038:	ldrdeq	r0, [r0], -r4
    c03c:	ldrdeq	r0, [r0], -r4
    c040:	ldrdeq	r0, [r0], -r4
    c044:	ldrdeq	r0, [r0], -r4
    c048:	ldrdeq	r0, [r0], -r4
    c04c:	ldrdeq	r0, [r0], -r4
    c050:	ldrdeq	r0, [r0], -r4
    c054:	ldrdeq	r0, [r0], -r4
    c058:	ldrdeq	r0, [r0], -r4
    c05c:	ldrdeq	r0, [r0], -r4
    c060:	ldrdeq	r0, [r0], -r4
    c064:	ldrdeq	r0, [r0], -r4
    c068:	ldrdeq	r0, [r0], -r4
    c06c:	ldrdeq	r0, [r0], -r4
    c070:	ldrdeq	r0, [r0], -r4
    c074:	ldrdeq	r0, [r0], -r4
    c078:	ldrdeq	r0, [r0], -r4
    c07c:	ldrdeq	r0, [r0], -r4
    c080:	ldrdeq	r0, [r0], -r4
    c084:	ldrdeq	r0, [r0], -r4
    c088:	ldrdeq	r0, [r0], -r4
    c08c:	ldrdeq	r0, [r0], -r4
    c090:	ldrdeq	r0, [r0], -r4
    c094:	ldrdeq	r0, [r0], -r4
    c098:	ldrdeq	r0, [r0], -r4
    c09c:	ldrdeq	r0, [r0], -r4
    c0a0:	ldrdeq	r0, [r0], -r4
    c0a4:	ldrdeq	r0, [r0], -r4
    c0a8:	ldrdeq	r0, [r0], -r4
    c0ac:	ldrdeq	r0, [r0], -r4
    c0b0:	ldrdeq	r0, [r0], -r4
    c0b4:	ldrdeq	r0, [r0], -r4
    c0b8:	ldrdeq	r0, [r0], -r4
    c0bc:	ldrdeq	r0, [r0], -r4
    c0c0:	ldrdeq	r0, [r0], -r4
    c0c4:	ldrdeq	r0, [r0], -r4
    c0c8:	ldrdeq	r0, [r0], -r4
    c0cc:	ldrdeq	r0, [r0], -r4
    c0d0:	ldrdeq	r0, [r0], -r4
    c0d4:	ldrdeq	r0, [r0], -r4
    c0d8:	ldrdeq	r0, [r0], -r4
    c0dc:	ldrdeq	r0, [r0], -r4
    c0e0:	ldrdeq	r0, [r0], -r4
    c0e4:	ldrdeq	r0, [r0], -r4
    c0e8:	ldrdeq	r0, [r0], -r4
    c0ec:	ldrdeq	r0, [r0], -r4
    c0f0:	ldrdeq	r0, [r0], -r4
    c0f4:	ldrdeq	r0, [r0], -r4
    c0f8:	ldrdeq	r0, [r0], -r4
    c0fc:	ldrdeq	r0, [r0], -r4
    c100:	ldrdeq	r0, [r0], -r4
    c104:	ldrdeq	r0, [r0], -r4
    c108:	ldrdeq	r0, [r0], -r4
    c10c:	ldrdeq	r0, [r0], -r4
    c110:	ldrdeq	r0, [r0], -r4
    c114:	ldrdeq	r0, [r0], -r4
    c118:	ldrdeq	r0, [r0], -r4
    c11c:	ldrdeq	r0, [r0], -r4
    c120:	ldrdeq	r0, [r0], -r4
    c124:	ldrdeq	r0, [r0], -r4
    c128:	ldrdeq	r0, [r0], -r4
    c12c:	ldrdeq	r0, [r0], -r4
    c130:	ldrdeq	r0, [r0], -r4
    c134:	ldrdeq	r0, [r0], -r4
    c138:	ldrdeq	r0, [r0], -r4
    c13c:	ldrdeq	r0, [r0], -r4
    c140:	ldrdeq	r0, [r0], -r4
    c144:	ldrdeq	r0, [r0], -r4
    c148:	ldrdeq	r0, [r0], -r4
    c14c:	ldrdeq	r0, [r0], -r4
    c150:	ldrdeq	r0, [r0], -r4
    c154:	ldrdeq	r0, [r0], -r4
    c158:	ldrdeq	r0, [r0], -r4
    c15c:	ldrdeq	r0, [r0], -r4
    c160:	ldrdeq	r0, [r0], -r4
    c164:	ldrdeq	r0, [r0], -r4
    c168:	ldrdeq	r0, [r0], -r4
    c16c:	ldrdeq	r0, [r0], -r4
    c170:	ldrdeq	r0, [r0], -r4
    c174:	ldrdeq	r0, [r0], -r4
    c178:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c17c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c180:	ldrdeq	r0, [r0], -r4
    c184:	ldrdeq	r0, [r0], -r4
    c188:	ldrdeq	r0, [r0], -r4
    c18c:	ldrdeq	r0, [r0], -r4
    c190:	ldrdeq	r0, [r0], -r4
    c194:	ldrdeq	r0, [r0], -r4
    c198:	ldrdeq	r0, [r0], -r4
    c19c:	ldrdeq	r0, [r0], -r4
    c1a0:	ldrdeq	r0, [r0], -r4
    c1a4:	ldrdeq	r0, [r0], -r4
    c1a8:	ldrdeq	r0, [r0], -r4
    c1ac:	ldrdeq	r0, [r0], -r4
    c1b0:	ldrdeq	r0, [r0], -r4
    c1b4:	ldrdeq	r0, [r0], -r4
    c1b8:	ldrdeq	r0, [r0], -r4
    c1bc:	ldrdeq	r0, [r0], -r4
    c1c0:	ldrdeq	r0, [r0], -r4
    c1c4:	ldrdeq	r0, [r0], -r4
    c1c8:	ldrdeq	r0, [r0], -r4
    c1cc:	ldrdeq	r0, [r0], -r4
    c1d0:	ldrdeq	r0, [r0], -r4
    c1d4:	ldrdeq	r0, [r0], -r4
    c1d8:	ldrdeq	r0, [r0], -r4
    c1dc:	ldrdeq	r0, [r0], -r4
    c1e0:	ldrdeq	r0, [r0], -r4
    c1e4:	ldrdeq	r0, [r0], -r4
    c1e8:	ldrdeq	r0, [r0], -r4
    c1ec:	ldrdeq	r0, [r0], -r4
    c1f0:	ldrdeq	r0, [r0], -r4
    c1f4:	ldrdeq	r0, [r0], -r4
    c1f8:	ldrdeq	r0, [r0], -r4
    c1fc:	ldrdeq	r0, [r0], -r4
    c200:	ldrdeq	r0, [r0], -r4
    c204:	ldrdeq	r0, [r0], -r4
    c208:	ldrdeq	r0, [r0], -r4
    c20c:	ldrdeq	r0, [r0], -r4
    c210:	ldrdeq	r0, [r0], -r4
    c214:	ldrdeq	r0, [r0], -r4
    c218:	ldrdeq	r0, [r0], -r4
    c21c:	ldrdeq	r0, [r0], -r4
    c220:	ldrdeq	r0, [r0], -r4
    c224:	ldrdeq	r0, [r0], -r4
    c228:	ldrdeq	r0, [r0], -r4
    c22c:	ldrdeq	r0, [r0], -r4
    c230:	ldrdeq	r0, [r0], -r4
    c234:	ldrdeq	r0, [r0], -r4
    c238:	ldrdeq	r0, [r0], -r4
    c23c:	ldrdeq	r0, [r0], -r4
    c240:	ldrdeq	r0, [r0], -r4
    c244:	ldrdeq	r0, [r0], -r4
    c248:	ldrdeq	r0, [r0], -r4
    c24c:	ldrdeq	r0, [r0], -r4
    c250:	ldrdeq	r0, [r0], -r4
    c254:	ldrdeq	r0, [r0], -r4
    c258:	ldrdeq	r0, [r0], -r4
    c25c:	ldrdeq	r0, [r0], -r4
    c260:	ldrdeq	r0, [r0], -r4
    c264:	ldrdeq	r0, [r0], -r4
    c268:	ldrdeq	r0, [r0], -r4
    c26c:	ldrdeq	r0, [r0], -r4
    c270:	ldrdeq	r0, [r0], -r4
    c274:	ldrdeq	r0, [r0], -r4
    c278:	ldrdeq	r0, [r0], -r4
    c27c:	ldrdeq	r0, [r0], -r4
    c280:	ldrdeq	r0, [r0], -r4
    c284:	ldrdeq	r0, [r0], -r4
    c288:	ldrdeq	r0, [r0], -r4
    c28c:	ldrdeq	r0, [r0], -r4
    c290:	ldrdeq	r0, [r0], -r4
    c294:	ldrdeq	r0, [r0], -r4
    c298:	ldrdeq	r0, [r0], -r4
    c29c:	ldrdeq	r0, [r0], -r4
    c2a0:	ldrdeq	r0, [r0], -r4
    c2a4:	ldrdeq	r0, [r0], -r4
    c2a8:	ldrdeq	r0, [r0], -r4
    c2ac:	ldrdeq	r0, [r0], -r4
    c2b0:	ldrdeq	r0, [r0], -r4
    c2b4:	ldrdeq	r0, [r0], -r4
    c2b8:	ldrdeq	r0, [r0], -r4
    c2bc:	ldrdeq	r0, [r0], -r4
    c2c0:	ldrdeq	r0, [r0], -r4
    c2c4:	ldrdeq	r0, [r0], -r4
    c2c8:	ldrdeq	r0, [r0], -r4
    c2cc:	ldrdeq	r0, [r0], -r4
    c2d0:	ldrdeq	r0, [r0], -r4
    c2d4:	ldrdeq	r0, [r0], -r4
    c2d8:	ldrdeq	r0, [r0], -r4
    c2dc:	ldrdeq	r0, [r0], -r4
    c2e0:	ldrdeq	r0, [r0], -r4
    c2e4:	ldrdeq	r0, [r0], -r4
    c2e8:	ldrdeq	r0, [r0], -r4
    c2ec:	ldrdeq	r0, [r0], -r4
    c2f0:	ldrdeq	r0, [r0], -r4
    c2f4:	ldrdeq	r0, [r0], -r4
    c2f8:	ldrdeq	r0, [r0], -r4
    c2fc:	ldrdeq	r0, [r0], -r4
    c300:	ldrdeq	r0, [r0], -r4
    c304:	ldrdeq	r0, [r0], -r4
    c308:	ldrdeq	r0, [r0], -r4
    c30c:	ldrdeq	r0, [r0], -r4
    c310:	ldrdeq	r0, [r0], -r4
    c314:	ldrdeq	r0, [r0], -r4
    c318:	ldrdeq	r0, [r0], -r4
    c31c:	ldrdeq	r0, [r0], -r4
    c320:	ldrdeq	r0, [r0], -r4
    c324:	ldrdeq	r0, [r0], -r4
    c328:	ldrdeq	r0, [r0], -r4
    c32c:	ldrdeq	r0, [r0], -r4
    c330:	ldrdeq	r0, [r0], -r4
    c334:	ldrdeq	r0, [r0], -r4
    c338:	ldrdeq	r0, [r0], -r4
    c33c:	ldrdeq	r0, [r0], -r4
    c340:	ldrdeq	r0, [r0], -r4
    c344:	ldrdeq	r0, [r0], -r4
    c348:	ldrdeq	r0, [r0], -r4
    c34c:	ldrdeq	r0, [r0], -r4
    c350:	ldrdeq	r0, [r0], -r4
    c354:	ldrdeq	r0, [r0], -r4
    c358:	ldrdeq	r0, [r0], -r4
    c35c:	ldrdeq	r0, [r0], -r4
    c360:	ldrdeq	r0, [r0], -r4
    c364:	ldrdeq	r0, [r0], -r4
    c368:	ldrdeq	r0, [r0], -r4
    c36c:	ldrdeq	r0, [r0], -r4
    c370:	ldrdeq	r0, [r0], -r4
    c374:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c378:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c37c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c380:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c384:	ldrdeq	r0, [r0], -r4
    c388:	ldrdeq	r0, [r0], -r4
    c38c:	ldrdeq	r0, [r0], -r4
    c390:	ldrdeq	r0, [r0], -r4
    c394:	ldrdeq	r0, [r0], -r4
    c398:	ldrdeq	r0, [r0], -r4
    c39c:	ldrdeq	r0, [r0], -r4
    c3a0:	ldrdeq	r0, [r0], -r4
    c3a4:	ldrdeq	r0, [r0], -r4
    c3a8:	ldrdeq	r0, [r0], -r4
    c3ac:	ldrdeq	r0, [r0], -r4
    c3b0:	ldrdeq	r0, [r0], -r4
    c3b4:	ldrdeq	r0, [r0], -r4
    c3b8:	ldrdeq	r0, [r0], -r4
    c3bc:	ldrdeq	r0, [r0], -r4
    c3c0:	ldrdeq	r0, [r0], -r4
    c3c4:	ldrdeq	r0, [r0], -r4
    c3c8:	ldrdeq	r0, [r0], -r4
    c3cc:	ldrdeq	r0, [r0], -r4
    c3d0:	ldrdeq	r0, [r0], -r4
    c3d4:	ldrdeq	r0, [r0], -r4
    c3d8:	ldrdeq	r0, [r0], -r4
    c3dc:	ldrdeq	r0, [r0], -r4
    c3e0:	ldrdeq	r0, [r0], -r4
    c3e4:	ldrdeq	r0, [r0], -r4
    c3e8:	ldrdeq	r0, [r0], -r4
    c3ec:	ldrdeq	r0, [r0], -r4
    c3f0:	ldrdeq	r0, [r0], -r4
    c3f4:	ldrdeq	r0, [r0], -r4
    c3f8:	ldrdeq	r0, [r0], -r4
    c3fc:	ldrdeq	r0, [r0], -r4
    c400:	ldrdeq	r0, [r0], -r4
    c404:	ldrdeq	r0, [r0], -r4
    c408:	ldrdeq	r0, [r0], -r4
    c40c:	ldrdeq	r0, [r0], -r4
    c410:	ldrdeq	r0, [r0], -r4
    c414:	ldrdeq	r0, [r0], -r4
    c418:	ldrdeq	r0, [r0], -r4
    c41c:	ldrdeq	r0, [r0], -r4
    c420:	ldrdeq	r0, [r0], -r4
    c424:	ldrdeq	r0, [r0], -r4
    c428:	ldrdeq	r0, [r0], -r4
    c42c:	ldrdeq	r0, [r0], -r4
    c430:	ldrdeq	r0, [r0], -r4
    c434:	ldrdeq	r0, [r0], -r4
    c438:	ldrdeq	r0, [r0], -r4
    c43c:	ldrdeq	r0, [r0], -r4
    c440:	ldrdeq	r0, [r0], -r4
    c444:	ldrdeq	r0, [r0], -r4
    c448:	ldrdeq	r0, [r0], -r4
    c44c:	ldrdeq	r0, [r0], -r4
    c450:	ldrdeq	r0, [r0], -r4
    c454:	ldrdeq	r0, [r0], -r4
    c458:	ldrdeq	r0, [r0], -r4
    c45c:	ldrdeq	r0, [r0], -r4
    c460:	ldrdeq	r0, [r0], -r4
    c464:	ldrdeq	r0, [r0], -r4
    c468:	ldrdeq	r0, [r0], -r4
    c46c:	ldrdeq	r0, [r0], -r4
    c470:	ldrdeq	r0, [r0], -r4
    c474:	ldrdeq	r0, [r0], -r4
    c478:	ldrdeq	r0, [r0], -r4
    c47c:	ldrdeq	r0, [r0], -r4
    c480:	ldrdeq	r0, [r0], -r4
    c484:	ldrdeq	r0, [r0], -r4
    c488:	ldrdeq	r0, [r0], -r4
    c48c:	ldrdeq	r0, [r0], -r4
    c490:	ldrdeq	r0, [r0], -r4
    c494:	ldrdeq	r0, [r0], -r4
    c498:	ldrdeq	r0, [r0], -r4
    c49c:	ldrdeq	r0, [r0], -r4
    c4a0:	ldrdeq	r0, [r0], -r4
    c4a4:	ldrdeq	r0, [r0], -r4
    c4a8:	ldrdeq	r0, [r0], -r4
    c4ac:	ldrdeq	r0, [r0], -r4
    c4b0:	ldrdeq	r0, [r0], -r4
    c4b4:	ldrdeq	r0, [r0], -r4
    c4b8:	ldrdeq	r0, [r0], -r4
    c4bc:	ldrdeq	r0, [r0], -r4
    c4c0:	ldrdeq	r0, [r0], -r4
    c4c4:	ldrdeq	r0, [r0], -r4
    c4c8:	ldrdeq	r0, [r0], -r4
    c4cc:	ldrdeq	r0, [r0], -r4
    c4d0:	ldrdeq	r0, [r0], -r4
    c4d4:	ldrdeq	r0, [r0], -r4
    c4d8:	ldrdeq	r0, [r0], -r4
    c4dc:	ldrdeq	r0, [r0], -r4
    c4e0:	ldrdeq	r0, [r0], -r4
    c4e4:	ldrdeq	r0, [r0], -r4
    c4e8:	ldrdeq	r0, [r0], -r4
    c4ec:	ldrdeq	r0, [r0], -r4
    c4f0:	ldrdeq	r0, [r0], -r4
    c4f4:	ldrdeq	r0, [r0], -r4
    c4f8:	ldrdeq	r0, [r0], -r4
    c4fc:	ldrdeq	r0, [r0], -r4
    c500:	ldrdeq	r0, [r0], -r4
    c504:	ldrdeq	r0, [r0], -r4
    c508:	ldrdeq	r0, [r0], -r4
    c50c:	ldrdeq	r0, [r0], -r4
    c510:	ldrdeq	r0, [r0], -r4
    c514:	ldrdeq	r0, [r0], -r4
    c518:	ldrdeq	r0, [r0], -r4
    c51c:	ldrdeq	r0, [r0], -r4
    c520:	ldrdeq	r0, [r0], -r4
    c524:	ldrdeq	r0, [r0], -r4
    c528:	ldrdeq	r0, [r0], -r4
    c52c:	ldrdeq	r0, [r0], -r4
    c530:	ldrdeq	r0, [r0], -r4
    c534:	ldrdeq	r0, [r0], -r4
    c538:	ldrdeq	r0, [r0], -r4
    c53c:	ldrdeq	r0, [r0], -r4
    c540:	ldrdeq	r0, [r0], -r4
    c544:	ldrdeq	r0, [r0], -r4
    c548:	ldrdeq	r0, [r0], -r4
    c54c:	ldrdeq	r0, [r0], -r4
    c550:	ldrdeq	r0, [r0], -r4
    c554:	ldrdeq	r0, [r0], -r4
    c558:	ldrdeq	r0, [r0], -r4
    c55c:	ldrdeq	r0, [r0], -r4
    c560:	ldrdeq	r0, [r0], -r4
    c564:	ldrdeq	r0, [r0], -r4
    c568:	ldrdeq	r0, [r0], -r4
    c56c:	ldrdeq	r0, [r0], -r4
    c570:	ldrdeq	r0, [r0], -r4
    c574:	ldrdeq	r0, [r0], -r4
    c578:	ldrdeq	r0, [r0], -r4
    c57c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c580:	cmp	r3, #2432	; 0x980
    c584:	bge	c648 <lell_packet_is_data@@Base+0x211c>
    c588:	movw	r1, #2036	; 0x7f4
    c58c:	sub	r1, r3, r1
    c590:	cmp	r1, #28
    c594:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c598:	movw	r1, #2302	; 0x8fe
    c59c:	sub	r1, r3, r1
    c5a0:	cmp	r1, #4
    c5a4:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c5a8:	cmp	r3, #2176	; 0x880
    c5ac:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c5b0:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c5b4:	cmp	r3, #1152	; 0x480
    c5b8:	bge	c618 <lell_packet_is_data@@Base+0x20ec>
    c5bc:	sub	r1, r3, #1016	; 0x3f8
    c5c0:	cmp	r1, #15
    c5c4:	bhi	c5d0 <lell_packet_is_data@@Base+0x20a4>
    c5c8:	cmp	r1, #9
    c5cc:	bne	c74c <lell_packet_is_data@@Base+0x2220>
    c5d0:	movw	r1, #766	; 0x2fe
    c5d4:	sub	r1, r3, r1
    c5d8:	cmp	r1, #4
    c5dc:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c5e0:	cmp	r3, #896	; 0x380
    c5e4:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c5e8:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c5ec:	cmp	r3, #4064	; 0xfe0
    c5f0:	blt	c72c <lell_packet_is_data@@Base+0x2200>
    c5f4:	sub	r1, r3, #4064	; 0xfe0
    c5f8:	cmp	r1, #31
    c5fc:	bhi	c750 <lell_packet_is_data@@Base+0x2224>
    c600:	movw	r5, #1
    c604:	mov	r3, #1
    c608:	movt	r5, #65535	; 0xffff
    c60c:	tst	r5, r3, lsl r1
    c610:	addne	r0, r0, #1
    c614:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c618:	movw	r1, #1531	; 0x5fb
    c61c:	cmp	r3, r1
    c620:	ble	c6e4 <lell_packet_is_data@@Base+0x21b8>
    c624:	cmp	r3, #1664	; 0x680
    c628:	bge	c708 <lell_packet_is_data@@Base+0x21dc>
    c62c:	movw	r1, #1532	; 0x5fc
    c630:	sub	r1, r3, r1
    c634:	cmp	r1, #7
    c638:	bhi	c750 <lell_packet_is_data@@Base+0x2224>
    c63c:	cmp	r1, #4
    c640:	bne	c74c <lell_packet_is_data@@Base+0x2220>
    c644:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c648:	cmp	r3, #2688	; 0xa80
    c64c:	bge	c6a0 <lell_packet_is_data@@Base+0x2174>
    c650:	movw	r1, #2556	; 0x9fc
    c654:	sub	r1, r3, r1
    c658:	cmp	r1, #7
    c65c:	bhi	c668 <lell_packet_is_data@@Base+0x213c>
    c660:	cmp	r1, #4
    c664:	bne	c74c <lell_packet_is_data@@Base+0x2220>
    c668:	cmp	r3, #2432	; 0x980
    c66c:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c670:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c674:	movw	r1, #3580	; 0xdfc
    c678:	sub	r1, r3, r1
    c67c:	cmp	r1, #8
    c680:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c684:	movw	r1, #3326	; 0xcfe
    c688:	sub	r1, r3, r1
    c68c:	cmp	r1, #4
    c690:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c694:	cmp	r3, #3456	; 0xd80
    c698:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c69c:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c6a0:	movw	r1, #2814	; 0xafe
    c6a4:	sub	r1, r3, r1
    c6a8:	cmp	r1, #4
    c6ac:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c6b0:	cmp	r3, #2688	; 0xa80
    c6b4:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c6b8:	cmp	r3, #2944	; 0xb80
    c6bc:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c6c0:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c6c4:	sub	r1, r3, #508	; 0x1fc
    c6c8:	cmp	r1, #7
    c6cc:	bhi	c6d8 <lell_packet_is_data@@Base+0x21ac>
    c6d0:	cmp	r1, #4
    c6d4:	bne	c74c <lell_packet_is_data@@Base+0x2220>
    c6d8:	cmp	r3, #640	; 0x280
    c6dc:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c6e0:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c6e4:	movw	r1, #1278	; 0x4fe
    c6e8:	sub	r1, r3, r1
    c6ec:	cmp	r1, #4
    c6f0:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c6f4:	cmp	r3, #1152	; 0x480
    c6f8:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c6fc:	cmp	r3, #1408	; 0x580
    c700:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c704:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c708:	movw	r1, #1790	; 0x6fe
    c70c:	sub	r1, r3, r1
    c710:	cmp	r1, #4
    c714:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c718:	cmp	r3, #1664	; 0x680
    c71c:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c720:	cmp	r3, #1920	; 0x780
    c724:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c728:	b	c750 <lell_packet_is_data@@Base+0x2224>
    c72c:	movw	r1, #3838	; 0xefe
    c730:	sub	r1, r3, r1
    c734:	cmp	r1, #4
    c738:	bcc	c74c <lell_packet_is_data@@Base+0x2220>
    c73c:	cmp	r3, #3712	; 0xe80
    c740:	beq	c74c <lell_packet_is_data@@Base+0x2220>
    c744:	cmp	r3, #3968	; 0xf80
    c748:	bne	c750 <lell_packet_is_data@@Base+0x2224>
    c74c:	add	r0, r0, #1
    c750:	bfc	r2, #12, #20
    c754:	movw	r1, #2035	; 0x7f3
    c758:	cmp	r2, r1
    c75c:	ble	c79c <lell_packet_is_data@@Base+0x2270>
    c760:	movw	r1, #3063	; 0xbf7
    c764:	cmp	r2, r1
    c768:	ble	cdc0 <lell_packet_is_data@@Base+0x2894>
    c76c:	cmp	r2, #3712	; 0xe80
    c770:	bge	ce2c <lell_packet_is_data@@Base+0x2900>
    c774:	movw	r1, #3325	; 0xcfd
    c778:	cmp	r2, r1
    c77c:	bgt	ceb4 <lell_packet_is_data@@Base+0x2988>
    c780:	movw	r1, #3064	; 0xbf8
    c784:	sub	r1, r2, r1
    c788:	cmp	r1, #16
    c78c:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    c790:	cmp	r2, #3200	; 0xc80
    c794:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    c798:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    c79c:	movw	r1, #765	; 0x2fd
    c7a0:	cmp	r2, r1
    c7a4:	bgt	cdf4 <lell_packet_is_data@@Base+0x28c8>
    c7a8:	cmp	r2, #384	; 0x180
    c7ac:	bhi	cf04 <lell_packet_is_data@@Base+0x29d8>
    c7b0:	add	r1, pc, #4
    c7b4:	ldr	r2, [r1, r2, lsl #2]
    c7b8:	add	pc, r1, r2
    c7bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c7fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c800:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c804:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c808:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c80c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c810:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c814:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c818:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c81c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c820:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c824:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c828:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c82c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c830:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c834:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c838:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c83c:	ldrdeq	r0, [r0], -r4
    c840:	ldrdeq	r0, [r0], -r4
    c844:	ldrdeq	r0, [r0], -r4
    c848:	ldrdeq	r0, [r0], -r4
    c84c:	ldrdeq	r0, [r0], -r4
    c850:	ldrdeq	r0, [r0], -r4
    c854:	ldrdeq	r0, [r0], -r4
    c858:	ldrdeq	r0, [r0], -r4
    c85c:	ldrdeq	r0, [r0], -r4
    c860:	ldrdeq	r0, [r0], -r4
    c864:	ldrdeq	r0, [r0], -r4
    c868:	ldrdeq	r0, [r0], -r4
    c86c:	ldrdeq	r0, [r0], -r4
    c870:	ldrdeq	r0, [r0], -r4
    c874:	ldrdeq	r0, [r0], -r4
    c878:	ldrdeq	r0, [r0], -r4
    c87c:	ldrdeq	r0, [r0], -r4
    c880:	ldrdeq	r0, [r0], -r4
    c884:	ldrdeq	r0, [r0], -r4
    c888:	ldrdeq	r0, [r0], -r4
    c88c:	ldrdeq	r0, [r0], -r4
    c890:	ldrdeq	r0, [r0], -r4
    c894:	ldrdeq	r0, [r0], -r4
    c898:	ldrdeq	r0, [r0], -r4
    c89c:	ldrdeq	r0, [r0], -r4
    c8a0:	ldrdeq	r0, [r0], -r4
    c8a4:	ldrdeq	r0, [r0], -r4
    c8a8:	ldrdeq	r0, [r0], -r4
    c8ac:	ldrdeq	r0, [r0], -r4
    c8b0:	ldrdeq	r0, [r0], -r4
    c8b4:	ldrdeq	r0, [r0], -r4
    c8b8:	ldrdeq	r0, [r0], -r4
    c8bc:	ldrdeq	r0, [r0], -r4
    c8c0:	ldrdeq	r0, [r0], -r4
    c8c4:	ldrdeq	r0, [r0], -r4
    c8c8:	ldrdeq	r0, [r0], -r4
    c8cc:	ldrdeq	r0, [r0], -r4
    c8d0:	ldrdeq	r0, [r0], -r4
    c8d4:	ldrdeq	r0, [r0], -r4
    c8d8:	ldrdeq	r0, [r0], -r4
    c8dc:	ldrdeq	r0, [r0], -r4
    c8e0:	ldrdeq	r0, [r0], -r4
    c8e4:	ldrdeq	r0, [r0], -r4
    c8e8:	ldrdeq	r0, [r0], -r4
    c8ec:	ldrdeq	r0, [r0], -r4
    c8f0:	ldrdeq	r0, [r0], -r4
    c8f4:	ldrdeq	r0, [r0], -r4
    c8f8:	ldrdeq	r0, [r0], -r4
    c8fc:	ldrdeq	r0, [r0], -r4
    c900:	ldrdeq	r0, [r0], -r4
    c904:	ldrdeq	r0, [r0], -r4
    c908:	ldrdeq	r0, [r0], -r4
    c90c:	ldrdeq	r0, [r0], -r4
    c910:	ldrdeq	r0, [r0], -r4
    c914:	ldrdeq	r0, [r0], -r4
    c918:	ldrdeq	r0, [r0], -r4
    c91c:	ldrdeq	r0, [r0], -r4
    c920:	ldrdeq	r0, [r0], -r4
    c924:	ldrdeq	r0, [r0], -r4
    c928:	ldrdeq	r0, [r0], -r4
    c92c:	ldrdeq	r0, [r0], -r4
    c930:	ldrdeq	r0, [r0], -r4
    c934:	ldrdeq	r0, [r0], -r4
    c938:	ldrdeq	r0, [r0], -r4
    c93c:	ldrdeq	r0, [r0], -r4
    c940:	ldrdeq	r0, [r0], -r4
    c944:	ldrdeq	r0, [r0], -r4
    c948:	ldrdeq	r0, [r0], -r4
    c94c:	ldrdeq	r0, [r0], -r4
    c950:	ldrdeq	r0, [r0], -r4
    c954:	ldrdeq	r0, [r0], -r4
    c958:	ldrdeq	r0, [r0], -r4
    c95c:	ldrdeq	r0, [r0], -r4
    c960:	ldrdeq	r0, [r0], -r4
    c964:	ldrdeq	r0, [r0], -r4
    c968:	ldrdeq	r0, [r0], -r4
    c96c:	ldrdeq	r0, [r0], -r4
    c970:	ldrdeq	r0, [r0], -r4
    c974:	ldrdeq	r0, [r0], -r4
    c978:	ldrdeq	r0, [r0], -r4
    c97c:	ldrdeq	r0, [r0], -r4
    c980:	ldrdeq	r0, [r0], -r4
    c984:	ldrdeq	r0, [r0], -r4
    c988:	ldrdeq	r0, [r0], -r4
    c98c:	ldrdeq	r0, [r0], -r4
    c990:	ldrdeq	r0, [r0], -r4
    c994:	ldrdeq	r0, [r0], -r4
    c998:	ldrdeq	r0, [r0], -r4
    c99c:	ldrdeq	r0, [r0], -r4
    c9a0:	ldrdeq	r0, [r0], -r4
    c9a4:	ldrdeq	r0, [r0], -r4
    c9a8:	ldrdeq	r0, [r0], -r4
    c9ac:	ldrdeq	r0, [r0], -r4
    c9b0:	ldrdeq	r0, [r0], -r4
    c9b4:	ldrdeq	r0, [r0], -r4
    c9b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c9bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c9c0:	ldrdeq	r0, [r0], -r4
    c9c4:	ldrdeq	r0, [r0], -r4
    c9c8:	ldrdeq	r0, [r0], -r4
    c9cc:	ldrdeq	r0, [r0], -r4
    c9d0:	ldrdeq	r0, [r0], -r4
    c9d4:	ldrdeq	r0, [r0], -r4
    c9d8:	ldrdeq	r0, [r0], -r4
    c9dc:	ldrdeq	r0, [r0], -r4
    c9e0:	ldrdeq	r0, [r0], -r4
    c9e4:	ldrdeq	r0, [r0], -r4
    c9e8:	ldrdeq	r0, [r0], -r4
    c9ec:	ldrdeq	r0, [r0], -r4
    c9f0:	ldrdeq	r0, [r0], -r4
    c9f4:	ldrdeq	r0, [r0], -r4
    c9f8:	ldrdeq	r0, [r0], -r4
    c9fc:	ldrdeq	r0, [r0], -r4
    ca00:	ldrdeq	r0, [r0], -r4
    ca04:	ldrdeq	r0, [r0], -r4
    ca08:	ldrdeq	r0, [r0], -r4
    ca0c:	ldrdeq	r0, [r0], -r4
    ca10:	ldrdeq	r0, [r0], -r4
    ca14:	ldrdeq	r0, [r0], -r4
    ca18:	ldrdeq	r0, [r0], -r4
    ca1c:	ldrdeq	r0, [r0], -r4
    ca20:	ldrdeq	r0, [r0], -r4
    ca24:	ldrdeq	r0, [r0], -r4
    ca28:	ldrdeq	r0, [r0], -r4
    ca2c:	ldrdeq	r0, [r0], -r4
    ca30:	ldrdeq	r0, [r0], -r4
    ca34:	ldrdeq	r0, [r0], -r4
    ca38:	ldrdeq	r0, [r0], -r4
    ca3c:	ldrdeq	r0, [r0], -r4
    ca40:	ldrdeq	r0, [r0], -r4
    ca44:	ldrdeq	r0, [r0], -r4
    ca48:	ldrdeq	r0, [r0], -r4
    ca4c:	ldrdeq	r0, [r0], -r4
    ca50:	ldrdeq	r0, [r0], -r4
    ca54:	ldrdeq	r0, [r0], -r4
    ca58:	ldrdeq	r0, [r0], -r4
    ca5c:	ldrdeq	r0, [r0], -r4
    ca60:	ldrdeq	r0, [r0], -r4
    ca64:	ldrdeq	r0, [r0], -r4
    ca68:	ldrdeq	r0, [r0], -r4
    ca6c:	ldrdeq	r0, [r0], -r4
    ca70:	ldrdeq	r0, [r0], -r4
    ca74:	ldrdeq	r0, [r0], -r4
    ca78:	ldrdeq	r0, [r0], -r4
    ca7c:	ldrdeq	r0, [r0], -r4
    ca80:	ldrdeq	r0, [r0], -r4
    ca84:	ldrdeq	r0, [r0], -r4
    ca88:	ldrdeq	r0, [r0], -r4
    ca8c:	ldrdeq	r0, [r0], -r4
    ca90:	ldrdeq	r0, [r0], -r4
    ca94:	ldrdeq	r0, [r0], -r4
    ca98:	ldrdeq	r0, [r0], -r4
    ca9c:	ldrdeq	r0, [r0], -r4
    caa0:	ldrdeq	r0, [r0], -r4
    caa4:	ldrdeq	r0, [r0], -r4
    caa8:	ldrdeq	r0, [r0], -r4
    caac:	ldrdeq	r0, [r0], -r4
    cab0:	ldrdeq	r0, [r0], -r4
    cab4:	ldrdeq	r0, [r0], -r4
    cab8:	ldrdeq	r0, [r0], -r4
    cabc:	ldrdeq	r0, [r0], -r4
    cac0:	ldrdeq	r0, [r0], -r4
    cac4:	ldrdeq	r0, [r0], -r4
    cac8:	ldrdeq	r0, [r0], -r4
    cacc:	ldrdeq	r0, [r0], -r4
    cad0:	ldrdeq	r0, [r0], -r4
    cad4:	ldrdeq	r0, [r0], -r4
    cad8:	ldrdeq	r0, [r0], -r4
    cadc:	ldrdeq	r0, [r0], -r4
    cae0:	ldrdeq	r0, [r0], -r4
    cae4:	ldrdeq	r0, [r0], -r4
    cae8:	ldrdeq	r0, [r0], -r4
    caec:	ldrdeq	r0, [r0], -r4
    caf0:	ldrdeq	r0, [r0], -r4
    caf4:	ldrdeq	r0, [r0], -r4
    caf8:	ldrdeq	r0, [r0], -r4
    cafc:	ldrdeq	r0, [r0], -r4
    cb00:	ldrdeq	r0, [r0], -r4
    cb04:	ldrdeq	r0, [r0], -r4
    cb08:	ldrdeq	r0, [r0], -r4
    cb0c:	ldrdeq	r0, [r0], -r4
    cb10:	ldrdeq	r0, [r0], -r4
    cb14:	ldrdeq	r0, [r0], -r4
    cb18:	ldrdeq	r0, [r0], -r4
    cb1c:	ldrdeq	r0, [r0], -r4
    cb20:	ldrdeq	r0, [r0], -r4
    cb24:	ldrdeq	r0, [r0], -r4
    cb28:	ldrdeq	r0, [r0], -r4
    cb2c:	ldrdeq	r0, [r0], -r4
    cb30:	ldrdeq	r0, [r0], -r4
    cb34:	ldrdeq	r0, [r0], -r4
    cb38:	ldrdeq	r0, [r0], -r4
    cb3c:	ldrdeq	r0, [r0], -r4
    cb40:	ldrdeq	r0, [r0], -r4
    cb44:	ldrdeq	r0, [r0], -r4
    cb48:	ldrdeq	r0, [r0], -r4
    cb4c:	ldrdeq	r0, [r0], -r4
    cb50:	ldrdeq	r0, [r0], -r4
    cb54:	ldrdeq	r0, [r0], -r4
    cb58:	ldrdeq	r0, [r0], -r4
    cb5c:	ldrdeq	r0, [r0], -r4
    cb60:	ldrdeq	r0, [r0], -r4
    cb64:	ldrdeq	r0, [r0], -r4
    cb68:	ldrdeq	r0, [r0], -r4
    cb6c:	ldrdeq	r0, [r0], -r4
    cb70:	ldrdeq	r0, [r0], -r4
    cb74:	ldrdeq	r0, [r0], -r4
    cb78:	ldrdeq	r0, [r0], -r4
    cb7c:	ldrdeq	r0, [r0], -r4
    cb80:	ldrdeq	r0, [r0], -r4
    cb84:	ldrdeq	r0, [r0], -r4
    cb88:	ldrdeq	r0, [r0], -r4
    cb8c:	ldrdeq	r0, [r0], -r4
    cb90:	ldrdeq	r0, [r0], -r4
    cb94:	ldrdeq	r0, [r0], -r4
    cb98:	ldrdeq	r0, [r0], -r4
    cb9c:	ldrdeq	r0, [r0], -r4
    cba0:	ldrdeq	r0, [r0], -r4
    cba4:	ldrdeq	r0, [r0], -r4
    cba8:	ldrdeq	r0, [r0], -r4
    cbac:	ldrdeq	r0, [r0], -r4
    cbb0:	ldrdeq	r0, [r0], -r4
    cbb4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cbb8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cbbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cbc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cbc4:	ldrdeq	r0, [r0], -r4
    cbc8:	ldrdeq	r0, [r0], -r4
    cbcc:	ldrdeq	r0, [r0], -r4
    cbd0:	ldrdeq	r0, [r0], -r4
    cbd4:	ldrdeq	r0, [r0], -r4
    cbd8:	ldrdeq	r0, [r0], -r4
    cbdc:	ldrdeq	r0, [r0], -r4
    cbe0:	ldrdeq	r0, [r0], -r4
    cbe4:	ldrdeq	r0, [r0], -r4
    cbe8:	ldrdeq	r0, [r0], -r4
    cbec:	ldrdeq	r0, [r0], -r4
    cbf0:	ldrdeq	r0, [r0], -r4
    cbf4:	ldrdeq	r0, [r0], -r4
    cbf8:	ldrdeq	r0, [r0], -r4
    cbfc:	ldrdeq	r0, [r0], -r4
    cc00:	ldrdeq	r0, [r0], -r4
    cc04:	ldrdeq	r0, [r0], -r4
    cc08:	ldrdeq	r0, [r0], -r4
    cc0c:	ldrdeq	r0, [r0], -r4
    cc10:	ldrdeq	r0, [r0], -r4
    cc14:	ldrdeq	r0, [r0], -r4
    cc18:	ldrdeq	r0, [r0], -r4
    cc1c:	ldrdeq	r0, [r0], -r4
    cc20:	ldrdeq	r0, [r0], -r4
    cc24:	ldrdeq	r0, [r0], -r4
    cc28:	ldrdeq	r0, [r0], -r4
    cc2c:	ldrdeq	r0, [r0], -r4
    cc30:	ldrdeq	r0, [r0], -r4
    cc34:	ldrdeq	r0, [r0], -r4
    cc38:	ldrdeq	r0, [r0], -r4
    cc3c:	ldrdeq	r0, [r0], -r4
    cc40:	ldrdeq	r0, [r0], -r4
    cc44:	ldrdeq	r0, [r0], -r4
    cc48:	ldrdeq	r0, [r0], -r4
    cc4c:	ldrdeq	r0, [r0], -r4
    cc50:	ldrdeq	r0, [r0], -r4
    cc54:	ldrdeq	r0, [r0], -r4
    cc58:	ldrdeq	r0, [r0], -r4
    cc5c:	ldrdeq	r0, [r0], -r4
    cc60:	ldrdeq	r0, [r0], -r4
    cc64:	ldrdeq	r0, [r0], -r4
    cc68:	ldrdeq	r0, [r0], -r4
    cc6c:	ldrdeq	r0, [r0], -r4
    cc70:	ldrdeq	r0, [r0], -r4
    cc74:	ldrdeq	r0, [r0], -r4
    cc78:	ldrdeq	r0, [r0], -r4
    cc7c:	ldrdeq	r0, [r0], -r4
    cc80:	ldrdeq	r0, [r0], -r4
    cc84:	ldrdeq	r0, [r0], -r4
    cc88:	ldrdeq	r0, [r0], -r4
    cc8c:	ldrdeq	r0, [r0], -r4
    cc90:	ldrdeq	r0, [r0], -r4
    cc94:	ldrdeq	r0, [r0], -r4
    cc98:	ldrdeq	r0, [r0], -r4
    cc9c:	ldrdeq	r0, [r0], -r4
    cca0:	ldrdeq	r0, [r0], -r4
    cca4:	ldrdeq	r0, [r0], -r4
    cca8:	ldrdeq	r0, [r0], -r4
    ccac:	ldrdeq	r0, [r0], -r4
    ccb0:	ldrdeq	r0, [r0], -r4
    ccb4:	ldrdeq	r0, [r0], -r4
    ccb8:	ldrdeq	r0, [r0], -r4
    ccbc:	ldrdeq	r0, [r0], -r4
    ccc0:	ldrdeq	r0, [r0], -r4
    ccc4:	ldrdeq	r0, [r0], -r4
    ccc8:	ldrdeq	r0, [r0], -r4
    cccc:	ldrdeq	r0, [r0], -r4
    ccd0:	ldrdeq	r0, [r0], -r4
    ccd4:	ldrdeq	r0, [r0], -r4
    ccd8:	ldrdeq	r0, [r0], -r4
    ccdc:	ldrdeq	r0, [r0], -r4
    cce0:	ldrdeq	r0, [r0], -r4
    cce4:	ldrdeq	r0, [r0], -r4
    cce8:	ldrdeq	r0, [r0], -r4
    ccec:	ldrdeq	r0, [r0], -r4
    ccf0:	ldrdeq	r0, [r0], -r4
    ccf4:	ldrdeq	r0, [r0], -r4
    ccf8:	ldrdeq	r0, [r0], -r4
    ccfc:	ldrdeq	r0, [r0], -r4
    cd00:	ldrdeq	r0, [r0], -r4
    cd04:	ldrdeq	r0, [r0], -r4
    cd08:	ldrdeq	r0, [r0], -r4
    cd0c:	ldrdeq	r0, [r0], -r4
    cd10:	ldrdeq	r0, [r0], -r4
    cd14:	ldrdeq	r0, [r0], -r4
    cd18:	ldrdeq	r0, [r0], -r4
    cd1c:	ldrdeq	r0, [r0], -r4
    cd20:	ldrdeq	r0, [r0], -r4
    cd24:	ldrdeq	r0, [r0], -r4
    cd28:	ldrdeq	r0, [r0], -r4
    cd2c:	ldrdeq	r0, [r0], -r4
    cd30:	ldrdeq	r0, [r0], -r4
    cd34:	ldrdeq	r0, [r0], -r4
    cd38:	ldrdeq	r0, [r0], -r4
    cd3c:	ldrdeq	r0, [r0], -r4
    cd40:	ldrdeq	r0, [r0], -r4
    cd44:	ldrdeq	r0, [r0], -r4
    cd48:	ldrdeq	r0, [r0], -r4
    cd4c:	ldrdeq	r0, [r0], -r4
    cd50:	ldrdeq	r0, [r0], -r4
    cd54:	ldrdeq	r0, [r0], -r4
    cd58:	ldrdeq	r0, [r0], -r4
    cd5c:	ldrdeq	r0, [r0], -r4
    cd60:	ldrdeq	r0, [r0], -r4
    cd64:	ldrdeq	r0, [r0], -r4
    cd68:	ldrdeq	r0, [r0], -r4
    cd6c:	ldrdeq	r0, [r0], -r4
    cd70:	ldrdeq	r0, [r0], -r4
    cd74:	ldrdeq	r0, [r0], -r4
    cd78:	ldrdeq	r0, [r0], -r4
    cd7c:	ldrdeq	r0, [r0], -r4
    cd80:	ldrdeq	r0, [r0], -r4
    cd84:	ldrdeq	r0, [r0], -r4
    cd88:	ldrdeq	r0, [r0], -r4
    cd8c:	ldrdeq	r0, [r0], -r4
    cd90:	ldrdeq	r0, [r0], -r4
    cd94:	ldrdeq	r0, [r0], -r4
    cd98:	ldrdeq	r0, [r0], -r4
    cd9c:	ldrdeq	r0, [r0], -r4
    cda0:	ldrdeq	r0, [r0], -r4
    cda4:	ldrdeq	r0, [r0], -r4
    cda8:	ldrdeq	r0, [r0], -r4
    cdac:	ldrdeq	r0, [r0], -r4
    cdb0:	ldrdeq	r0, [r0], -r4
    cdb4:	ldrdeq	r0, [r0], -r4
    cdb8:	ldrdeq	r0, [r0], -r4
    cdbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cdc0:	cmp	r2, #2432	; 0x980
    cdc4:	bge	ce88 <lell_packet_is_data@@Base+0x295c>
    cdc8:	movw	r1, #2036	; 0x7f4
    cdcc:	sub	r1, r2, r1
    cdd0:	cmp	r1, #28
    cdd4:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cdd8:	movw	r1, #2302	; 0x8fe
    cddc:	sub	r1, r2, r1
    cde0:	cmp	r1, #4
    cde4:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cde8:	cmp	r2, #2176	; 0x880
    cdec:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cdf0:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cdf4:	cmp	r2, #1152	; 0x480
    cdf8:	bge	ce58 <lell_packet_is_data@@Base+0x292c>
    cdfc:	sub	r1, r2, #1016	; 0x3f8
    ce00:	cmp	r1, #15
    ce04:	bhi	ce10 <lell_packet_is_data@@Base+0x28e4>
    ce08:	cmp	r1, #9
    ce0c:	bne	cf8c <lell_packet_is_data@@Base+0x2a60>
    ce10:	movw	r1, #766	; 0x2fe
    ce14:	sub	r1, r2, r1
    ce18:	cmp	r1, #4
    ce1c:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    ce20:	cmp	r2, #896	; 0x380
    ce24:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    ce28:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    ce2c:	cmp	r2, #4064	; 0xfe0
    ce30:	blt	cf6c <lell_packet_is_data@@Base+0x2a40>
    ce34:	sub	r1, r2, #4064	; 0xfe0
    ce38:	cmp	r1, #31
    ce3c:	bhi	cf90 <lell_packet_is_data@@Base+0x2a64>
    ce40:	movw	r3, #1
    ce44:	mov	r2, #1
    ce48:	movt	r3, #65535	; 0xffff
    ce4c:	tst	r3, r2, lsl r1
    ce50:	addne	r0, r0, #1
    ce54:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    ce58:	movw	r1, #1531	; 0x5fb
    ce5c:	cmp	r2, r1
    ce60:	ble	cf24 <lell_packet_is_data@@Base+0x29f8>
    ce64:	cmp	r2, #1664	; 0x680
    ce68:	bge	cf48 <lell_packet_is_data@@Base+0x2a1c>
    ce6c:	movw	r1, #1532	; 0x5fc
    ce70:	sub	r1, r2, r1
    ce74:	cmp	r1, #7
    ce78:	bhi	cf90 <lell_packet_is_data@@Base+0x2a64>
    ce7c:	cmp	r1, #4
    ce80:	bne	cf8c <lell_packet_is_data@@Base+0x2a60>
    ce84:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    ce88:	cmp	r2, #2688	; 0xa80
    ce8c:	bge	cee0 <lell_packet_is_data@@Base+0x29b4>
    ce90:	movw	r1, #2556	; 0x9fc
    ce94:	sub	r1, r2, r1
    ce98:	cmp	r1, #7
    ce9c:	bhi	cea8 <lell_packet_is_data@@Base+0x297c>
    cea0:	cmp	r1, #4
    cea4:	bne	cf8c <lell_packet_is_data@@Base+0x2a60>
    cea8:	cmp	r2, #2432	; 0x980
    ceac:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    ceb0:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    ceb4:	movw	r1, #3580	; 0xdfc
    ceb8:	sub	r1, r2, r1
    cebc:	cmp	r1, #8
    cec0:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cec4:	movw	r1, #3326	; 0xcfe
    cec8:	sub	r1, r2, r1
    cecc:	cmp	r1, #4
    ced0:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    ced4:	cmp	r2, #3456	; 0xd80
    ced8:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cedc:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cee0:	movw	r1, #2814	; 0xafe
    cee4:	sub	r1, r2, r1
    cee8:	cmp	r1, #4
    ceec:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cef0:	cmp	r2, #2688	; 0xa80
    cef4:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cef8:	cmp	r2, #2944	; 0xb80
    cefc:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf00:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cf04:	sub	r1, r2, #508	; 0x1fc
    cf08:	cmp	r1, #7
    cf0c:	bhi	cf18 <lell_packet_is_data@@Base+0x29ec>
    cf10:	cmp	r1, #4
    cf14:	bne	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf18:	cmp	r2, #640	; 0x280
    cf1c:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf20:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cf24:	movw	r1, #1278	; 0x4fe
    cf28:	sub	r1, r2, r1
    cf2c:	cmp	r1, #4
    cf30:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf34:	cmp	r2, #1152	; 0x480
    cf38:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf3c:	cmp	r2, #1408	; 0x580
    cf40:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf44:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cf48:	movw	r1, #1790	; 0x6fe
    cf4c:	sub	r1, r2, r1
    cf50:	cmp	r1, #4
    cf54:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf58:	cmp	r2, #1664	; 0x680
    cf5c:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf60:	cmp	r2, #1920	; 0x780
    cf64:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf68:	b	cf90 <lell_packet_is_data@@Base+0x2a64>
    cf6c:	movw	r1, #3838	; 0xefe
    cf70:	sub	r1, r2, r1
    cf74:	cmp	r1, #4
    cf78:	bcc	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf7c:	cmp	r2, #3712	; 0xe80
    cf80:	beq	cf8c <lell_packet_is_data@@Base+0x2a60>
    cf84:	cmp	r2, #3968	; 0xf80
    cf88:	bne	cf90 <lell_packet_is_data@@Base+0x2a64>
    cf8c:	add	r0, r0, #1
    cf90:	lsr	r1, ip, #20
    cf94:	movw	r2, #2035	; 0x7f3
    cf98:	cmp	r1, r2
    cf9c:	ble	cfdc <lell_packet_is_data@@Base+0x2ab0>
    cfa0:	movw	r2, #3063	; 0xbf7
    cfa4:	cmp	r1, r2
    cfa8:	ble	d600 <lell_packet_is_data@@Base+0x30d4>
    cfac:	cmp	r1, #3712	; 0xe80
    cfb0:	bge	d66c <lell_packet_is_data@@Base+0x3140>
    cfb4:	movw	r2, #3325	; 0xcfd
    cfb8:	cmp	r1, r2
    cfbc:	bgt	d6f4 <lell_packet_is_data@@Base+0x31c8>
    cfc0:	movw	r2, #3064	; 0xbf8
    cfc4:	sub	r2, r1, r2
    cfc8:	cmp	r2, #16
    cfcc:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    cfd0:	cmp	r1, #3200	; 0xc80
    cfd4:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    cfd8:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    cfdc:	movw	r2, #765	; 0x2fd
    cfe0:	cmp	r1, r2
    cfe4:	bgt	d634 <lell_packet_is_data@@Base+0x3108>
    cfe8:	cmp	r1, #384	; 0x180
    cfec:	bhi	d744 <lell_packet_is_data@@Base+0x3218>
    cff0:	add	r2, pc, #4
    cff4:	ldr	r1, [r2, r1, lsl #2]
    cff8:	add	pc, r2, r1
    cffc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d000:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d004:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d008:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d00c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d010:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d014:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d018:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d01c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d020:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d024:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d028:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d02c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d030:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d034:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d038:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d03c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d040:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d044:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d048:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d04c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d050:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d054:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d058:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d05c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d060:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d064:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d068:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d06c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d070:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d074:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d078:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d07c:	ldrdeq	r0, [r0], -r4
    d080:	ldrdeq	r0, [r0], -r4
    d084:	ldrdeq	r0, [r0], -r4
    d088:	ldrdeq	r0, [r0], -r4
    d08c:	ldrdeq	r0, [r0], -r4
    d090:	ldrdeq	r0, [r0], -r4
    d094:	ldrdeq	r0, [r0], -r4
    d098:	ldrdeq	r0, [r0], -r4
    d09c:	ldrdeq	r0, [r0], -r4
    d0a0:	ldrdeq	r0, [r0], -r4
    d0a4:	ldrdeq	r0, [r0], -r4
    d0a8:	ldrdeq	r0, [r0], -r4
    d0ac:	ldrdeq	r0, [r0], -r4
    d0b0:	ldrdeq	r0, [r0], -r4
    d0b4:	ldrdeq	r0, [r0], -r4
    d0b8:	ldrdeq	r0, [r0], -r4
    d0bc:	ldrdeq	r0, [r0], -r4
    d0c0:	ldrdeq	r0, [r0], -r4
    d0c4:	ldrdeq	r0, [r0], -r4
    d0c8:	ldrdeq	r0, [r0], -r4
    d0cc:	ldrdeq	r0, [r0], -r4
    d0d0:	ldrdeq	r0, [r0], -r4
    d0d4:	ldrdeq	r0, [r0], -r4
    d0d8:	ldrdeq	r0, [r0], -r4
    d0dc:	ldrdeq	r0, [r0], -r4
    d0e0:	ldrdeq	r0, [r0], -r4
    d0e4:	ldrdeq	r0, [r0], -r4
    d0e8:	ldrdeq	r0, [r0], -r4
    d0ec:	ldrdeq	r0, [r0], -r4
    d0f0:	ldrdeq	r0, [r0], -r4
    d0f4:	ldrdeq	r0, [r0], -r4
    d0f8:	ldrdeq	r0, [r0], -r4
    d0fc:	ldrdeq	r0, [r0], -r4
    d100:	ldrdeq	r0, [r0], -r4
    d104:	ldrdeq	r0, [r0], -r4
    d108:	ldrdeq	r0, [r0], -r4
    d10c:	ldrdeq	r0, [r0], -r4
    d110:	ldrdeq	r0, [r0], -r4
    d114:	ldrdeq	r0, [r0], -r4
    d118:	ldrdeq	r0, [r0], -r4
    d11c:	ldrdeq	r0, [r0], -r4
    d120:	ldrdeq	r0, [r0], -r4
    d124:	ldrdeq	r0, [r0], -r4
    d128:	ldrdeq	r0, [r0], -r4
    d12c:	ldrdeq	r0, [r0], -r4
    d130:	ldrdeq	r0, [r0], -r4
    d134:	ldrdeq	r0, [r0], -r4
    d138:	ldrdeq	r0, [r0], -r4
    d13c:	ldrdeq	r0, [r0], -r4
    d140:	ldrdeq	r0, [r0], -r4
    d144:	ldrdeq	r0, [r0], -r4
    d148:	ldrdeq	r0, [r0], -r4
    d14c:	ldrdeq	r0, [r0], -r4
    d150:	ldrdeq	r0, [r0], -r4
    d154:	ldrdeq	r0, [r0], -r4
    d158:	ldrdeq	r0, [r0], -r4
    d15c:	ldrdeq	r0, [r0], -r4
    d160:	ldrdeq	r0, [r0], -r4
    d164:	ldrdeq	r0, [r0], -r4
    d168:	ldrdeq	r0, [r0], -r4
    d16c:	ldrdeq	r0, [r0], -r4
    d170:	ldrdeq	r0, [r0], -r4
    d174:	ldrdeq	r0, [r0], -r4
    d178:	ldrdeq	r0, [r0], -r4
    d17c:	ldrdeq	r0, [r0], -r4
    d180:	ldrdeq	r0, [r0], -r4
    d184:	ldrdeq	r0, [r0], -r4
    d188:	ldrdeq	r0, [r0], -r4
    d18c:	ldrdeq	r0, [r0], -r4
    d190:	ldrdeq	r0, [r0], -r4
    d194:	ldrdeq	r0, [r0], -r4
    d198:	ldrdeq	r0, [r0], -r4
    d19c:	ldrdeq	r0, [r0], -r4
    d1a0:	ldrdeq	r0, [r0], -r4
    d1a4:	ldrdeq	r0, [r0], -r4
    d1a8:	ldrdeq	r0, [r0], -r4
    d1ac:	ldrdeq	r0, [r0], -r4
    d1b0:	ldrdeq	r0, [r0], -r4
    d1b4:	ldrdeq	r0, [r0], -r4
    d1b8:	ldrdeq	r0, [r0], -r4
    d1bc:	ldrdeq	r0, [r0], -r4
    d1c0:	ldrdeq	r0, [r0], -r4
    d1c4:	ldrdeq	r0, [r0], -r4
    d1c8:	ldrdeq	r0, [r0], -r4
    d1cc:	ldrdeq	r0, [r0], -r4
    d1d0:	ldrdeq	r0, [r0], -r4
    d1d4:	ldrdeq	r0, [r0], -r4
    d1d8:	ldrdeq	r0, [r0], -r4
    d1dc:	ldrdeq	r0, [r0], -r4
    d1e0:	ldrdeq	r0, [r0], -r4
    d1e4:	ldrdeq	r0, [r0], -r4
    d1e8:	ldrdeq	r0, [r0], -r4
    d1ec:	ldrdeq	r0, [r0], -r4
    d1f0:	ldrdeq	r0, [r0], -r4
    d1f4:	ldrdeq	r0, [r0], -r4
    d1f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d1fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d200:	ldrdeq	r0, [r0], -r4
    d204:	ldrdeq	r0, [r0], -r4
    d208:	ldrdeq	r0, [r0], -r4
    d20c:	ldrdeq	r0, [r0], -r4
    d210:	ldrdeq	r0, [r0], -r4
    d214:	ldrdeq	r0, [r0], -r4
    d218:	ldrdeq	r0, [r0], -r4
    d21c:	ldrdeq	r0, [r0], -r4
    d220:	ldrdeq	r0, [r0], -r4
    d224:	ldrdeq	r0, [r0], -r4
    d228:	ldrdeq	r0, [r0], -r4
    d22c:	ldrdeq	r0, [r0], -r4
    d230:	ldrdeq	r0, [r0], -r4
    d234:	ldrdeq	r0, [r0], -r4
    d238:	ldrdeq	r0, [r0], -r4
    d23c:	ldrdeq	r0, [r0], -r4
    d240:	ldrdeq	r0, [r0], -r4
    d244:	ldrdeq	r0, [r0], -r4
    d248:	ldrdeq	r0, [r0], -r4
    d24c:	ldrdeq	r0, [r0], -r4
    d250:	ldrdeq	r0, [r0], -r4
    d254:	ldrdeq	r0, [r0], -r4
    d258:	ldrdeq	r0, [r0], -r4
    d25c:	ldrdeq	r0, [r0], -r4
    d260:	ldrdeq	r0, [r0], -r4
    d264:	ldrdeq	r0, [r0], -r4
    d268:	ldrdeq	r0, [r0], -r4
    d26c:	ldrdeq	r0, [r0], -r4
    d270:	ldrdeq	r0, [r0], -r4
    d274:	ldrdeq	r0, [r0], -r4
    d278:	ldrdeq	r0, [r0], -r4
    d27c:	ldrdeq	r0, [r0], -r4
    d280:	ldrdeq	r0, [r0], -r4
    d284:	ldrdeq	r0, [r0], -r4
    d288:	ldrdeq	r0, [r0], -r4
    d28c:	ldrdeq	r0, [r0], -r4
    d290:	ldrdeq	r0, [r0], -r4
    d294:	ldrdeq	r0, [r0], -r4
    d298:	ldrdeq	r0, [r0], -r4
    d29c:	ldrdeq	r0, [r0], -r4
    d2a0:	ldrdeq	r0, [r0], -r4
    d2a4:	ldrdeq	r0, [r0], -r4
    d2a8:	ldrdeq	r0, [r0], -r4
    d2ac:	ldrdeq	r0, [r0], -r4
    d2b0:	ldrdeq	r0, [r0], -r4
    d2b4:	ldrdeq	r0, [r0], -r4
    d2b8:	ldrdeq	r0, [r0], -r4
    d2bc:	ldrdeq	r0, [r0], -r4
    d2c0:	ldrdeq	r0, [r0], -r4
    d2c4:	ldrdeq	r0, [r0], -r4
    d2c8:	ldrdeq	r0, [r0], -r4
    d2cc:	ldrdeq	r0, [r0], -r4
    d2d0:	ldrdeq	r0, [r0], -r4
    d2d4:	ldrdeq	r0, [r0], -r4
    d2d8:	ldrdeq	r0, [r0], -r4
    d2dc:	ldrdeq	r0, [r0], -r4
    d2e0:	ldrdeq	r0, [r0], -r4
    d2e4:	ldrdeq	r0, [r0], -r4
    d2e8:	ldrdeq	r0, [r0], -r4
    d2ec:	ldrdeq	r0, [r0], -r4
    d2f0:	ldrdeq	r0, [r0], -r4
    d2f4:	ldrdeq	r0, [r0], -r4
    d2f8:	ldrdeq	r0, [r0], -r4
    d2fc:	ldrdeq	r0, [r0], -r4
    d300:	ldrdeq	r0, [r0], -r4
    d304:	ldrdeq	r0, [r0], -r4
    d308:	ldrdeq	r0, [r0], -r4
    d30c:	ldrdeq	r0, [r0], -r4
    d310:	ldrdeq	r0, [r0], -r4
    d314:	ldrdeq	r0, [r0], -r4
    d318:	ldrdeq	r0, [r0], -r4
    d31c:	ldrdeq	r0, [r0], -r4
    d320:	ldrdeq	r0, [r0], -r4
    d324:	ldrdeq	r0, [r0], -r4
    d328:	ldrdeq	r0, [r0], -r4
    d32c:	ldrdeq	r0, [r0], -r4
    d330:	ldrdeq	r0, [r0], -r4
    d334:	ldrdeq	r0, [r0], -r4
    d338:	ldrdeq	r0, [r0], -r4
    d33c:	ldrdeq	r0, [r0], -r4
    d340:	ldrdeq	r0, [r0], -r4
    d344:	ldrdeq	r0, [r0], -r4
    d348:	ldrdeq	r0, [r0], -r4
    d34c:	ldrdeq	r0, [r0], -r4
    d350:	ldrdeq	r0, [r0], -r4
    d354:	ldrdeq	r0, [r0], -r4
    d358:	ldrdeq	r0, [r0], -r4
    d35c:	ldrdeq	r0, [r0], -r4
    d360:	ldrdeq	r0, [r0], -r4
    d364:	ldrdeq	r0, [r0], -r4
    d368:	ldrdeq	r0, [r0], -r4
    d36c:	ldrdeq	r0, [r0], -r4
    d370:	ldrdeq	r0, [r0], -r4
    d374:	ldrdeq	r0, [r0], -r4
    d378:	ldrdeq	r0, [r0], -r4
    d37c:	ldrdeq	r0, [r0], -r4
    d380:	ldrdeq	r0, [r0], -r4
    d384:	ldrdeq	r0, [r0], -r4
    d388:	ldrdeq	r0, [r0], -r4
    d38c:	ldrdeq	r0, [r0], -r4
    d390:	ldrdeq	r0, [r0], -r4
    d394:	ldrdeq	r0, [r0], -r4
    d398:	ldrdeq	r0, [r0], -r4
    d39c:	ldrdeq	r0, [r0], -r4
    d3a0:	ldrdeq	r0, [r0], -r4
    d3a4:	ldrdeq	r0, [r0], -r4
    d3a8:	ldrdeq	r0, [r0], -r4
    d3ac:	ldrdeq	r0, [r0], -r4
    d3b0:	ldrdeq	r0, [r0], -r4
    d3b4:	ldrdeq	r0, [r0], -r4
    d3b8:	ldrdeq	r0, [r0], -r4
    d3bc:	ldrdeq	r0, [r0], -r4
    d3c0:	ldrdeq	r0, [r0], -r4
    d3c4:	ldrdeq	r0, [r0], -r4
    d3c8:	ldrdeq	r0, [r0], -r4
    d3cc:	ldrdeq	r0, [r0], -r4
    d3d0:	ldrdeq	r0, [r0], -r4
    d3d4:	ldrdeq	r0, [r0], -r4
    d3d8:	ldrdeq	r0, [r0], -r4
    d3dc:	ldrdeq	r0, [r0], -r4
    d3e0:	ldrdeq	r0, [r0], -r4
    d3e4:	ldrdeq	r0, [r0], -r4
    d3e8:	ldrdeq	r0, [r0], -r4
    d3ec:	ldrdeq	r0, [r0], -r4
    d3f0:	ldrdeq	r0, [r0], -r4
    d3f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d3f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d3fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d400:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d404:	ldrdeq	r0, [r0], -r4
    d408:	ldrdeq	r0, [r0], -r4
    d40c:	ldrdeq	r0, [r0], -r4
    d410:	ldrdeq	r0, [r0], -r4
    d414:	ldrdeq	r0, [r0], -r4
    d418:	ldrdeq	r0, [r0], -r4
    d41c:	ldrdeq	r0, [r0], -r4
    d420:	ldrdeq	r0, [r0], -r4
    d424:	ldrdeq	r0, [r0], -r4
    d428:	ldrdeq	r0, [r0], -r4
    d42c:	ldrdeq	r0, [r0], -r4
    d430:	ldrdeq	r0, [r0], -r4
    d434:	ldrdeq	r0, [r0], -r4
    d438:	ldrdeq	r0, [r0], -r4
    d43c:	ldrdeq	r0, [r0], -r4
    d440:	ldrdeq	r0, [r0], -r4
    d444:	ldrdeq	r0, [r0], -r4
    d448:	ldrdeq	r0, [r0], -r4
    d44c:	ldrdeq	r0, [r0], -r4
    d450:	ldrdeq	r0, [r0], -r4
    d454:	ldrdeq	r0, [r0], -r4
    d458:	ldrdeq	r0, [r0], -r4
    d45c:	ldrdeq	r0, [r0], -r4
    d460:	ldrdeq	r0, [r0], -r4
    d464:	ldrdeq	r0, [r0], -r4
    d468:	ldrdeq	r0, [r0], -r4
    d46c:	ldrdeq	r0, [r0], -r4
    d470:	ldrdeq	r0, [r0], -r4
    d474:	ldrdeq	r0, [r0], -r4
    d478:	ldrdeq	r0, [r0], -r4
    d47c:	ldrdeq	r0, [r0], -r4
    d480:	ldrdeq	r0, [r0], -r4
    d484:	ldrdeq	r0, [r0], -r4
    d488:	ldrdeq	r0, [r0], -r4
    d48c:	ldrdeq	r0, [r0], -r4
    d490:	ldrdeq	r0, [r0], -r4
    d494:	ldrdeq	r0, [r0], -r4
    d498:	ldrdeq	r0, [r0], -r4
    d49c:	ldrdeq	r0, [r0], -r4
    d4a0:	ldrdeq	r0, [r0], -r4
    d4a4:	ldrdeq	r0, [r0], -r4
    d4a8:	ldrdeq	r0, [r0], -r4
    d4ac:	ldrdeq	r0, [r0], -r4
    d4b0:	ldrdeq	r0, [r0], -r4
    d4b4:	ldrdeq	r0, [r0], -r4
    d4b8:	ldrdeq	r0, [r0], -r4
    d4bc:	ldrdeq	r0, [r0], -r4
    d4c0:	ldrdeq	r0, [r0], -r4
    d4c4:	ldrdeq	r0, [r0], -r4
    d4c8:	ldrdeq	r0, [r0], -r4
    d4cc:	ldrdeq	r0, [r0], -r4
    d4d0:	ldrdeq	r0, [r0], -r4
    d4d4:	ldrdeq	r0, [r0], -r4
    d4d8:	ldrdeq	r0, [r0], -r4
    d4dc:	ldrdeq	r0, [r0], -r4
    d4e0:	ldrdeq	r0, [r0], -r4
    d4e4:	ldrdeq	r0, [r0], -r4
    d4e8:	ldrdeq	r0, [r0], -r4
    d4ec:	ldrdeq	r0, [r0], -r4
    d4f0:	ldrdeq	r0, [r0], -r4
    d4f4:	ldrdeq	r0, [r0], -r4
    d4f8:	ldrdeq	r0, [r0], -r4
    d4fc:	ldrdeq	r0, [r0], -r4
    d500:	ldrdeq	r0, [r0], -r4
    d504:	ldrdeq	r0, [r0], -r4
    d508:	ldrdeq	r0, [r0], -r4
    d50c:	ldrdeq	r0, [r0], -r4
    d510:	ldrdeq	r0, [r0], -r4
    d514:	ldrdeq	r0, [r0], -r4
    d518:	ldrdeq	r0, [r0], -r4
    d51c:	ldrdeq	r0, [r0], -r4
    d520:	ldrdeq	r0, [r0], -r4
    d524:	ldrdeq	r0, [r0], -r4
    d528:	ldrdeq	r0, [r0], -r4
    d52c:	ldrdeq	r0, [r0], -r4
    d530:	ldrdeq	r0, [r0], -r4
    d534:	ldrdeq	r0, [r0], -r4
    d538:	ldrdeq	r0, [r0], -r4
    d53c:	ldrdeq	r0, [r0], -r4
    d540:	ldrdeq	r0, [r0], -r4
    d544:	ldrdeq	r0, [r0], -r4
    d548:	ldrdeq	r0, [r0], -r4
    d54c:	ldrdeq	r0, [r0], -r4
    d550:	ldrdeq	r0, [r0], -r4
    d554:	ldrdeq	r0, [r0], -r4
    d558:	ldrdeq	r0, [r0], -r4
    d55c:	ldrdeq	r0, [r0], -r4
    d560:	ldrdeq	r0, [r0], -r4
    d564:	ldrdeq	r0, [r0], -r4
    d568:	ldrdeq	r0, [r0], -r4
    d56c:	ldrdeq	r0, [r0], -r4
    d570:	ldrdeq	r0, [r0], -r4
    d574:	ldrdeq	r0, [r0], -r4
    d578:	ldrdeq	r0, [r0], -r4
    d57c:	ldrdeq	r0, [r0], -r4
    d580:	ldrdeq	r0, [r0], -r4
    d584:	ldrdeq	r0, [r0], -r4
    d588:	ldrdeq	r0, [r0], -r4
    d58c:	ldrdeq	r0, [r0], -r4
    d590:	ldrdeq	r0, [r0], -r4
    d594:	ldrdeq	r0, [r0], -r4
    d598:	ldrdeq	r0, [r0], -r4
    d59c:	ldrdeq	r0, [r0], -r4
    d5a0:	ldrdeq	r0, [r0], -r4
    d5a4:	ldrdeq	r0, [r0], -r4
    d5a8:	ldrdeq	r0, [r0], -r4
    d5ac:	ldrdeq	r0, [r0], -r4
    d5b0:	ldrdeq	r0, [r0], -r4
    d5b4:	ldrdeq	r0, [r0], -r4
    d5b8:	ldrdeq	r0, [r0], -r4
    d5bc:	ldrdeq	r0, [r0], -r4
    d5c0:	ldrdeq	r0, [r0], -r4
    d5c4:	ldrdeq	r0, [r0], -r4
    d5c8:	ldrdeq	r0, [r0], -r4
    d5cc:	ldrdeq	r0, [r0], -r4
    d5d0:	ldrdeq	r0, [r0], -r4
    d5d4:	ldrdeq	r0, [r0], -r4
    d5d8:	ldrdeq	r0, [r0], -r4
    d5dc:	ldrdeq	r0, [r0], -r4
    d5e0:	ldrdeq	r0, [r0], -r4
    d5e4:	ldrdeq	r0, [r0], -r4
    d5e8:	ldrdeq	r0, [r0], -r4
    d5ec:	ldrdeq	r0, [r0], -r4
    d5f0:	ldrdeq	r0, [r0], -r4
    d5f4:	ldrdeq	r0, [r0], -r4
    d5f8:	ldrdeq	r0, [r0], -r4
    d5fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d600:	cmp	r1, #2432	; 0x980
    d604:	bge	d6c8 <lell_packet_is_data@@Base+0x319c>
    d608:	movw	r2, #2036	; 0x7f4
    d60c:	sub	r2, r1, r2
    d610:	cmp	r2, #28
    d614:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d618:	movw	r2, #2302	; 0x8fe
    d61c:	sub	r2, r1, r2
    d620:	cmp	r2, #4
    d624:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d628:	cmp	r1, #2176	; 0x880
    d62c:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d630:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d634:	cmp	r1, #1152	; 0x480
    d638:	bge	d698 <lell_packet_is_data@@Base+0x316c>
    d63c:	sub	r2, r1, #1016	; 0x3f8
    d640:	cmp	r2, #15
    d644:	bhi	d650 <lell_packet_is_data@@Base+0x3124>
    d648:	cmp	r2, #9
    d64c:	bne	d7cc <lell_packet_is_data@@Base+0x32a0>
    d650:	movw	r2, #766	; 0x2fe
    d654:	sub	r2, r1, r2
    d658:	cmp	r2, #4
    d65c:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d660:	cmp	r1, #896	; 0x380
    d664:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d668:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d66c:	cmp	r1, #4064	; 0xfe0
    d670:	blt	d7ac <lell_packet_is_data@@Base+0x3280>
    d674:	sub	r1, r1, #4064	; 0xfe0
    d678:	cmp	r1, #31
    d67c:	bhi	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d680:	movw	r3, #1
    d684:	mov	r2, #1
    d688:	movt	r3, #65535	; 0xffff
    d68c:	tst	r3, r2, lsl r1
    d690:	addne	r0, r0, #1
    d694:	pop	{r4, r5, fp, pc}
    d698:	movw	r2, #1531	; 0x5fb
    d69c:	cmp	r1, r2
    d6a0:	ble	d764 <lell_packet_is_data@@Base+0x3238>
    d6a4:	cmp	r1, #1664	; 0x680
    d6a8:	bge	d788 <lell_packet_is_data@@Base+0x325c>
    d6ac:	movw	r2, #1532	; 0x5fc
    d6b0:	sub	r1, r1, r2
    d6b4:	cmp	r1, #7
    d6b8:	pophi	{r4, r5, fp, pc}
    d6bc:	cmp	r1, #4
    d6c0:	bne	d7cc <lell_packet_is_data@@Base+0x32a0>
    d6c4:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d6c8:	cmp	r1, #2688	; 0xa80
    d6cc:	bge	d720 <lell_packet_is_data@@Base+0x31f4>
    d6d0:	movw	r2, #2556	; 0x9fc
    d6d4:	sub	r2, r1, r2
    d6d8:	cmp	r2, #7
    d6dc:	bhi	d6e8 <lell_packet_is_data@@Base+0x31bc>
    d6e0:	cmp	r2, #4
    d6e4:	bne	d7cc <lell_packet_is_data@@Base+0x32a0>
    d6e8:	cmp	r1, #2432	; 0x980
    d6ec:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d6f0:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d6f4:	movw	r2, #3580	; 0xdfc
    d6f8:	sub	r2, r1, r2
    d6fc:	cmp	r2, #8
    d700:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d704:	movw	r2, #3326	; 0xcfe
    d708:	sub	r2, r1, r2
    d70c:	cmp	r2, #4
    d710:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d714:	cmp	r1, #3456	; 0xd80
    d718:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d71c:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d720:	movw	r2, #2814	; 0xafe
    d724:	sub	r2, r1, r2
    d728:	cmp	r2, #4
    d72c:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d730:	cmp	r1, #2688	; 0xa80
    d734:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d738:	cmp	r1, #2944	; 0xb80
    d73c:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d740:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d744:	sub	r2, r1, #508	; 0x1fc
    d748:	cmp	r2, #7
    d74c:	bhi	d758 <lell_packet_is_data@@Base+0x322c>
    d750:	cmp	r2, #4
    d754:	bne	d7cc <lell_packet_is_data@@Base+0x32a0>
    d758:	cmp	r1, #640	; 0x280
    d75c:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d760:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d764:	movw	r2, #1278	; 0x4fe
    d768:	sub	r2, r1, r2
    d76c:	cmp	r2, #4
    d770:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d774:	cmp	r1, #1152	; 0x480
    d778:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d77c:	cmp	r1, #1408	; 0x580
    d780:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d784:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d788:	movw	r2, #1790	; 0x6fe
    d78c:	sub	r2, r1, r2
    d790:	cmp	r2, #4
    d794:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d798:	cmp	r1, #1664	; 0x680
    d79c:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d7a0:	cmp	r1, #1920	; 0x780
    d7a4:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d7a8:	b	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d7ac:	movw	r2, #3838	; 0xefe
    d7b0:	sub	r2, r1, r2
    d7b4:	cmp	r2, #4
    d7b8:	bcc	d7cc <lell_packet_is_data@@Base+0x32a0>
    d7bc:	cmp	r1, #3712	; 0xe80
    d7c0:	beq	d7cc <lell_packet_is_data@@Base+0x32a0>
    d7c4:	cmp	r1, #3968	; 0xf80
    d7c8:	bne	d7d0 <lell_packet_is_data@@Base+0x32a4>
    d7cc:	add	r0, r0, #1
    d7d0:	pop	{r4, r5, fp, pc}

0000d7d4 <lell_get_access_address@@Base>:
    d7d4:	ldr	r0, [r0, #64]	; 0x40
    d7d8:	bx	lr

0000d7dc <lell_get_access_address_offenses@@Base>:
    d7dc:	ldr	r0, [r0, #92]	; 0x5c
    d7e0:	bx	lr

0000d7e4 <lell_get_channel_index@@Base>:
    d7e4:	ldrb	r0, [r0, #68]	; 0x44
    d7e8:	bx	lr

0000d7ec <lell_get_channel_k@@Base>:
    d7ec:	ldrb	r0, [r0, #69]	; 0x45
    d7f0:	bx	lr

0000d7f4 <lell_get_adv_type_str@@Base>:
    d7f4:	ldrb	r2, [r0, #68]	; 0x44
    d7f8:	mov	r1, r0
    d7fc:	mov	r0, #0
    d800:	cmp	r2, #37	; 0x25
    d804:	bxcc	lr
    d808:	ldrb	r0, [r1, #80]	; 0x50
    d80c:	cmp	r0, #6
    d810:	ldrhi	r0, [pc, #20]	; d82c <lell_get_adv_type_str@@Base+0x38>
    d814:	addhi	r0, pc, r0
    d818:	bxhi	lr
    d81c:	ldr	r1, [pc, #12]	; d830 <lell_get_adv_type_str@@Base+0x3c>
    d820:	add	r1, pc, r1
    d824:	ldr	r0, [r1, r0, lsl #2]
    d828:	bx	lr
    d82c:	andeq	r5, r0, ip, asr r4
    d830:	andeq	fp, r1, r8, lsl #12

0000d834 <lell_print@@Base>:
    d834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d838:	add	fp, sp, #28
    d83c:	sub	sp, sp, #4
    d840:	mov	r4, r0
    d844:	ldrb	r0, [r0, #68]	; 0x44
    d848:	mov	sl, r4
    d84c:	cmp	r0, #36	; 0x24
    d850:	bls	d8c0 <lell_print@@Base+0x8c>
    d854:	ldr	r3, [sl, #72]!	; 0x48
    d858:	ldrb	r0, [sl, #28]
    d85c:	ldr	r1, [pc, #2044]	; e060 <lell_print@@Base+0x82c>
    d860:	ldr	r2, [pc, #2044]	; e064 <lell_print@@Base+0x830>
    d864:	add	r1, pc, r1
    d868:	add	r2, pc, r2
    d86c:	tst	r0, #1
    d870:	moveq	r2, r1
    d874:	ldr	r1, [sl, #-8]
    d878:	ldr	r0, [pc, #2024]	; e068 <lell_print@@Base+0x834>
    d87c:	add	r0, pc, r0
    d880:	bl	4500 <printf@plt>
    d884:	ldrb	r1, [sl, #-4]
    d888:	ldr	r0, [pc, #2012]	; e06c <lell_print@@Base+0x838>
    d88c:	add	r0, pc, r0
    d890:	bl	4500 <printf@plt>
    d894:	ldrb	r0, [sl, #-4]
    d898:	mov	r1, #0
    d89c:	cmp	r0, #37	; 0x25
    d8a0:	bcc	d97c <lell_print@@Base+0x148>
    d8a4:	ldrb	r0, [r4, #80]	; 0x50
    d8a8:	cmp	r0, #6
    d8ac:	bhi	d974 <lell_print@@Base+0x140>
    d8b0:	ldr	r1, [pc, #1980]	; e074 <lell_print@@Base+0x840>
    d8b4:	add	r1, pc, r1
    d8b8:	ldr	r1, [r1, r0, lsl #2]
    d8bc:	b	d97c <lell_print@@Base+0x148>
    d8c0:	ldr	r3, [sl, #72]!	; 0x48
    d8c4:	ldrb	r0, [sl, #28]
    d8c8:	ldr	r1, [pc, #1900]	; e03c <lell_print@@Base+0x808>
    d8cc:	ldr	r2, [pc, #1900]	; e040 <lell_print@@Base+0x80c>
    d8d0:	ldrb	r5, [sl, #-68]	; 0xffffffbc
    d8d4:	add	r1, pc, r1
    d8d8:	add	r2, pc, r2
    d8dc:	tst	r0, #1
    d8e0:	moveq	r2, r1
    d8e4:	ldr	r1, [sl, #-8]
    d8e8:	ldr	r0, [pc, #1876]	; e044 <lell_print@@Base+0x810>
    d8ec:	add	r0, pc, r0
    d8f0:	bl	4500 <printf@plt>
    d8f4:	ldrb	r1, [sl, #-4]
    d8f8:	ldr	r0, [pc, #1864]	; e048 <lell_print@@Base+0x814>
    d8fc:	add	r0, pc, r0
    d900:	bl	4500 <printf@plt>
    d904:	ldr	r0, [pc, #1856]	; e04c <lell_print@@Base+0x818>
    d908:	and	r5, r5, #3
    d90c:	mov	r1, r5
    d910:	add	r0, pc, r0
    d914:	ldr	r2, [r0, r5, lsl #2]
    d918:	ldr	r0, [pc, #1840]	; e050 <lell_print@@Base+0x81c>
    d91c:	add	r0, pc, r0
    d920:	bl	4500 <printf@plt>
    d924:	ldrb	r0, [sl, #-68]	; 0xffffffbc
    d928:	ubfx	r1, r0, #2, #1
    d92c:	ubfx	r2, r0, #3, #1
    d930:	ubfx	r3, r0, #4, #1
    d934:	ldr	r0, [pc, #1816]	; e054 <lell_print@@Base+0x820>
    d938:	add	r0, pc, r0
    d93c:	bl	4500 <printf@plt>
    d940:	cmp	r5, #3
    d944:	bne	dd18 <lell_print@@Base+0x4e4>
    d948:	ldrb	r1, [r4, #6]
    d94c:	ldr	r2, [pc, #1796]	; e058 <lell_print@@Base+0x824>
    d950:	cmp	r1, #20
    d954:	mov	r0, r1
    d958:	add	r2, pc, r2
    d95c:	movcs	r0, #20
    d960:	ldr	r2, [r2, r0, lsl #2]
    d964:	ldr	r0, [pc, #1776]	; e05c <lell_print@@Base+0x828>
    d968:	add	r0, pc, r0
    d96c:	bl	4500 <printf@plt>
    d970:	b	dd18 <lell_print@@Base+0x4e4>
    d974:	ldr	r1, [pc, #1780]	; e070 <lell_print@@Base+0x83c>
    d978:	add	r1, pc, r1
    d97c:	ldr	r0, [pc, #1780]	; e078 <lell_print@@Base+0x844>
    d980:	add	r0, pc, r0
    d984:	bl	4500 <printf@plt>
    d988:	ldrb	r0, [r4, #80]	; 0x50
    d98c:	cmp	r0, #6
    d990:	bhi	dd18 <lell_print@@Base+0x4e4>
    d994:	add	r1, pc, #4
    d998:	ldr	r0, [r1, r0, lsl #2]
    d99c:	add	pc, r1, r0
    d9a0:	andeq	r0, r0, ip, lsl r0
    d9a4:	strdeq	r0, [r0], -r8
    d9a8:	andeq	r0, r0, ip, lsl r0
    d9ac:	muleq	r0, r8, r1
    d9b0:	muleq	r0, r4, r2
    d9b4:	andeq	r0, r0, r0, lsr r4
    d9b8:	andeq	r0, r0, ip, lsl r0
    d9bc:	ldr	r6, [r4, #84]	; 0x54
    d9c0:	ldrb	r2, [r4, #11]
    d9c4:	ldr	r0, [pc, #1712]	; e07c <lell_print@@Base+0x848>
    d9c8:	ldr	r1, [pc, #1712]	; e080 <lell_print@@Base+0x84c>
    d9cc:	add	r0, pc, r0
    d9d0:	add	r1, pc, r1
    d9d4:	bl	4500 <printf@plt>
    d9d8:	ldrb	r1, [r4, #10]
    d9dc:	ldr	r5, [pc, #1696]	; e084 <lell_print@@Base+0x850>
    d9e0:	add	r5, pc, r5
    d9e4:	mov	r0, r5
    d9e8:	bl	4500 <printf@plt>
    d9ec:	ldrb	r1, [r4, #9]
    d9f0:	mov	r0, r5
    d9f4:	bl	4500 <printf@plt>
    d9f8:	ldrb	r1, [r4, #8]
    d9fc:	mov	r0, r5
    da00:	bl	4500 <printf@plt>
    da04:	ldrb	r1, [r4, #7]
    da08:	mov	r0, r5
    da0c:	bl	4500 <printf@plt>
    da10:	ldrb	r1, [r4, #6]
    da14:	mov	r0, r5
    da18:	bl	4500 <printf@plt>
    da1c:	ldr	r0, [pc, #1636]	; e088 <lell_print@@Base+0x854>
    da20:	ldr	r1, [pc, #1636]	; e08c <lell_print@@Base+0x858>
    da24:	cmp	r6, #0
    da28:	add	r0, pc, r0
    da2c:	add	r1, pc, r1
    da30:	moveq	r1, r0
    da34:	ldr	r0, [pc, #1620]	; e090 <lell_print@@Base+0x85c>
    da38:	add	r0, pc, r0
    da3c:	bl	4500 <printf@plt>
    da40:	ldr	r0, [r4, #72]	; 0x48
    da44:	cmp	r0, #7
    da48:	blt	dd18 <lell_print@@Base+0x4e4>
    da4c:	ldr	r0, [pc, #1600]	; e094 <lell_print@@Base+0x860>
    da50:	add	r0, pc, r0
    da54:	bl	4500 <printf@plt>
    da58:	ldr	r0, [sl]
    da5c:	cmp	r0, #7
    da60:	blt	dd00 <lell_print@@Base+0x4cc>
    da64:	ldr	r5, [pc, #1580]	; e098 <lell_print@@Base+0x864>
    da68:	add	r6, r4, #12
    da6c:	mov	r7, #0
    da70:	add	r5, pc, r5
    da74:	ldrb	r1, [r6, r7]
    da78:	mov	r0, r5
    da7c:	bl	4500 <printf@plt>
    da80:	ldr	r0, [sl]
    da84:	add	r7, r7, #1
    da88:	sub	r0, r0, #6
    da8c:	cmp	r7, r0
    da90:	blt	da74 <lell_print@@Base+0x240>
    da94:	b	dd00 <lell_print@@Base+0x4cc>
    da98:	ldr	r9, [r4, #84]	; 0x54
    da9c:	ldrb	r2, [r4, #11]
    daa0:	ldr	r0, [pc, #1524]	; e09c <lell_print@@Base+0x868>
    daa4:	ldr	r1, [pc, #1524]	; e0a0 <lell_print@@Base+0x86c>
    daa8:	add	r0, pc, r0
    daac:	add	r1, pc, r1
    dab0:	bl	4500 <printf@plt>
    dab4:	ldrb	r1, [r4, #10]
    dab8:	ldr	r5, [pc, #1508]	; e0a4 <lell_print@@Base+0x870>
    dabc:	add	r5, pc, r5
    dac0:	mov	r0, r5
    dac4:	bl	4500 <printf@plt>
    dac8:	ldrb	r1, [r4, #9]
    dacc:	mov	r0, r5
    dad0:	bl	4500 <printf@plt>
    dad4:	ldrb	r1, [r4, #8]
    dad8:	mov	r0, r5
    dadc:	bl	4500 <printf@plt>
    dae0:	ldrb	r1, [r4, #7]
    dae4:	mov	r0, r5
    dae8:	bl	4500 <printf@plt>
    daec:	ldrb	r1, [r4, #6]
    daf0:	mov	r0, r5
    daf4:	bl	4500 <printf@plt>
    daf8:	ldr	r7, [pc, #1448]	; e0a8 <lell_print@@Base+0x874>
    dafc:	ldr	r6, [pc, #1448]	; e0ac <lell_print@@Base+0x878>
    db00:	cmp	r9, #0
    db04:	ldr	r9, [pc, #1444]	; e0b0 <lell_print@@Base+0x87c>
    db08:	add	r6, pc, r6
    db0c:	add	r9, pc, r9
    db10:	add	r7, pc, r7
    db14:	mov	r1, r6
    db18:	mov	r0, r9
    db1c:	moveq	r1, r7
    db20:	bl	4500 <printf@plt>
    db24:	ldr	r8, [r4, #88]	; 0x58
    db28:	ldrb	r2, [r4, #17]
    db2c:	ldr	r1, [pc, #1408]	; e0b4 <lell_print@@Base+0x880>
    db30:	add	r1, pc, r1
    db34:	b	dbd4 <lell_print@@Base+0x3a0>
    db38:	ldr	r9, [r4, #84]	; 0x54
    db3c:	ldrb	r2, [r4, #11]
    db40:	ldr	r0, [pc, #1396]	; e0bc <lell_print@@Base+0x888>
    db44:	ldr	r1, [pc, #1396]	; e0c0 <lell_print@@Base+0x88c>
    db48:	add	r0, pc, r0
    db4c:	add	r1, pc, r1
    db50:	bl	4500 <printf@plt>
    db54:	ldrb	r1, [r4, #10]
    db58:	ldr	r5, [pc, #1380]	; e0c4 <lell_print@@Base+0x890>
    db5c:	add	r5, pc, r5
    db60:	mov	r0, r5
    db64:	bl	4500 <printf@plt>
    db68:	ldrb	r1, [r4, #9]
    db6c:	mov	r0, r5
    db70:	bl	4500 <printf@plt>
    db74:	ldrb	r1, [r4, #8]
    db78:	mov	r0, r5
    db7c:	bl	4500 <printf@plt>
    db80:	ldrb	r1, [r4, #7]
    db84:	mov	r0, r5
    db88:	bl	4500 <printf@plt>
    db8c:	ldrb	r1, [r4, #6]
    db90:	mov	r0, r5
    db94:	bl	4500 <printf@plt>
    db98:	ldr	r7, [pc, #1320]	; e0c8 <lell_print@@Base+0x894>
    db9c:	ldr	r6, [pc, #1320]	; e0cc <lell_print@@Base+0x898>
    dba0:	cmp	r9, #0
    dba4:	ldr	r9, [pc, #1316]	; e0d0 <lell_print@@Base+0x89c>
    dba8:	add	r6, pc, r6
    dbac:	add	r9, pc, r9
    dbb0:	add	r7, pc, r7
    dbb4:	mov	r1, r6
    dbb8:	mov	r0, r9
    dbbc:	moveq	r1, r7
    dbc0:	bl	4500 <printf@plt>
    dbc4:	ldr	r8, [r4, #88]	; 0x58
    dbc8:	ldrb	r2, [r4, #17]
    dbcc:	ldr	r1, [pc, #1280]	; e0d4 <lell_print@@Base+0x8a0>
    dbd0:	add	r1, pc, r1
    dbd4:	ldr	r0, [pc, #1244]	; e0b8 <lell_print@@Base+0x884>
    dbd8:	add	r0, pc, r0
    dbdc:	bl	4500 <printf@plt>
    dbe0:	ldrb	r1, [r4, #16]
    dbe4:	mov	r0, r5
    dbe8:	bl	4500 <printf@plt>
    dbec:	ldrb	r1, [r4, #15]
    dbf0:	mov	r0, r5
    dbf4:	bl	4500 <printf@plt>
    dbf8:	ldrb	r1, [r4, #14]
    dbfc:	mov	r0, r5
    dc00:	bl	4500 <printf@plt>
    dc04:	ldrb	r1, [r4, #13]
    dc08:	mov	r0, r5
    dc0c:	bl	4500 <printf@plt>
    dc10:	ldrb	r1, [r4, #12]
    dc14:	mov	r0, r5
    dc18:	bl	4500 <printf@plt>
    dc1c:	cmp	r8, #0
    dc20:	mov	r0, r9
    dc24:	moveq	r6, r7
    dc28:	mov	r1, r6
    dc2c:	bl	4500 <printf@plt>
    dc30:	b	dd18 <lell_print@@Base+0x4e4>
    dc34:	ldr	r6, [r4, #84]	; 0x54
    dc38:	ldrb	r2, [r4, #11]
    dc3c:	ldr	r0, [pc, #1172]	; e0d8 <lell_print@@Base+0x8a4>
    dc40:	ldr	r1, [pc, #1172]	; e0dc <lell_print@@Base+0x8a8>
    dc44:	add	r0, pc, r0
    dc48:	add	r1, pc, r1
    dc4c:	bl	4500 <printf@plt>
    dc50:	ldrb	r1, [r4, #10]
    dc54:	ldr	r5, [pc, #1156]	; e0e0 <lell_print@@Base+0x8ac>
    dc58:	add	r5, pc, r5
    dc5c:	mov	r0, r5
    dc60:	bl	4500 <printf@plt>
    dc64:	ldrb	r1, [r4, #9]
    dc68:	mov	r0, r5
    dc6c:	bl	4500 <printf@plt>
    dc70:	ldrb	r1, [r4, #8]
    dc74:	mov	r0, r5
    dc78:	bl	4500 <printf@plt>
    dc7c:	ldrb	r1, [r4, #7]
    dc80:	mov	r0, r5
    dc84:	bl	4500 <printf@plt>
    dc88:	ldrb	r1, [r4, #6]
    dc8c:	mov	r0, r5
    dc90:	bl	4500 <printf@plt>
    dc94:	ldr	r0, [pc, #1096]	; e0e4 <lell_print@@Base+0x8b0>
    dc98:	ldr	r1, [pc, #1096]	; e0e8 <lell_print@@Base+0x8b4>
    dc9c:	cmp	r6, #0
    dca0:	add	r0, pc, r0
    dca4:	add	r1, pc, r1
    dca8:	moveq	r1, r0
    dcac:	ldr	r0, [pc, #1080]	; e0ec <lell_print@@Base+0x8b8>
    dcb0:	add	r0, pc, r0
    dcb4:	bl	4500 <printf@plt>
    dcb8:	ldr	r0, [pc, #1072]	; e0f0 <lell_print@@Base+0x8bc>
    dcbc:	add	r0, pc, r0
    dcc0:	bl	4500 <printf@plt>
    dcc4:	ldr	r0, [r4, #72]	; 0x48
    dcc8:	cmp	r0, #7
    dccc:	blt	dd00 <lell_print@@Base+0x4cc>
    dcd0:	ldr	r5, [pc, #1052]	; e0f4 <lell_print@@Base+0x8c0>
    dcd4:	add	r6, r4, #12
    dcd8:	mov	r7, #0
    dcdc:	add	r5, pc, r5
    dce0:	ldrb	r1, [r6, r7]
    dce4:	mov	r0, r5
    dce8:	bl	4500 <printf@plt>
    dcec:	ldr	r0, [sl]
    dcf0:	add	r7, r7, #1
    dcf4:	sub	r0, r0, #6
    dcf8:	cmp	r7, r0
    dcfc:	blt	dce0 <lell_print@@Base+0x4ac>
    dd00:	mov	r0, #10
    dd04:	bl	4704 <putchar@plt>
    dd08:	ldr	r1, [r4, #72]	; 0x48
    dd0c:	add	r0, r4, #12
    dd10:	sub	r1, r1, #6
    dd14:	bl	e168 <lell_print@@Base+0x934>
    dd18:	mov	r0, #10
    dd1c:	bl	4704 <putchar@plt>
    dd20:	ldr	r0, [pc, #1072]	; e158 <lell_print@@Base+0x924>
    dd24:	add	r0, pc, r0
    dd28:	bl	4500 <printf@plt>
    dd2c:	ldr	r0, [sl]
    dd30:	cmp	r0, #1
    dd34:	blt	dd68 <lell_print@@Base+0x534>
    dd38:	ldr	r5, [pc, #1052]	; e15c <lell_print@@Base+0x928>
    dd3c:	mov	r6, #6
    dd40:	add	r5, pc, r5
    dd44:	ldrb	r1, [r4, r6]
    dd48:	mov	r0, r5
    dd4c:	bl	4500 <printf@plt>
    dd50:	ldr	r1, [r4, #72]	; 0x48
    dd54:	add	r0, r6, #1
    dd58:	add	r1, r1, #5
    dd5c:	cmp	r6, r1
    dd60:	mov	r6, r0
    dd64:	blt	dd44 <lell_print@@Base+0x510>
    dd68:	mov	r0, #10
    dd6c:	bl	4704 <putchar@plt>
    dd70:	ldr	r0, [pc, #1000]	; e160 <lell_print@@Base+0x92c>
    dd74:	add	r0, pc, r0
    dd78:	bl	4500 <printf@plt>
    dd7c:	ldr	r0, [r4, #72]	; 0x48
    dd80:	add	r0, r4, r0
    dd84:	ldrb	r1, [r0, #6]
    dd88:	ldr	r5, [pc, #980]	; e164 <lell_print@@Base+0x930>
    dd8c:	add	r5, pc, r5
    dd90:	mov	r0, r5
    dd94:	bl	4500 <printf@plt>
    dd98:	ldr	r0, [r4, #72]	; 0x48
    dd9c:	add	r0, r4, r0
    dda0:	ldrb	r1, [r0, #7]
    dda4:	mov	r0, r5
    dda8:	bl	4500 <printf@plt>
    ddac:	ldr	r0, [r4, #72]	; 0x48
    ddb0:	add	r0, r4, r0
    ddb4:	ldrb	r1, [r0, #8]
    ddb8:	mov	r0, r5
    ddbc:	bl	4500 <printf@plt>
    ddc0:	mov	r0, #10
    ddc4:	sub	sp, fp, #28
    ddc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ddcc:	b	4704 <putchar@plt>
    ddd0:	ldr	r9, [r4, #84]	; 0x54
    ddd4:	ldrb	r2, [r4, #11]
    ddd8:	ldr	r0, [pc, #792]	; e0f8 <lell_print@@Base+0x8c4>
    dddc:	ldr	r1, [pc, #792]	; e0fc <lell_print@@Base+0x8c8>
    dde0:	add	r0, pc, r0
    dde4:	add	r1, pc, r1
    dde8:	bl	4500 <printf@plt>
    ddec:	ldrb	r1, [r4, #10]
    ddf0:	ldr	r5, [pc, #776]	; e100 <lell_print@@Base+0x8cc>
    ddf4:	add	r5, pc, r5
    ddf8:	mov	r0, r5
    ddfc:	bl	4500 <printf@plt>
    de00:	ldrb	r1, [r4, #9]
    de04:	mov	r0, r5
    de08:	bl	4500 <printf@plt>
    de0c:	ldrb	r1, [r4, #8]
    de10:	mov	r0, r5
    de14:	bl	4500 <printf@plt>
    de18:	ldrb	r1, [r4, #7]
    de1c:	mov	r0, r5
    de20:	bl	4500 <printf@plt>
    de24:	ldrb	r1, [r4, #6]
    de28:	mov	r0, r5
    de2c:	bl	4500 <printf@plt>
    de30:	ldr	r7, [pc, #716]	; e104 <lell_print@@Base+0x8d0>
    de34:	ldr	r6, [pc, #716]	; e108 <lell_print@@Base+0x8d4>
    de38:	cmp	r9, #0
    de3c:	ldr	r9, [pc, #712]	; e10c <lell_print@@Base+0x8d8>
    de40:	add	r6, pc, r6
    de44:	add	r9, pc, r9
    de48:	add	r7, pc, r7
    de4c:	mov	r1, r6
    de50:	mov	r0, r9
    de54:	moveq	r1, r7
    de58:	bl	4500 <printf@plt>
    de5c:	ldr	r8, [r4, #88]	; 0x58
    de60:	ldrb	r2, [r4, #17]
    de64:	ldr	r1, [pc, #676]	; e110 <lell_print@@Base+0x8dc>
    de68:	ldr	r0, [pc, #676]	; e114 <lell_print@@Base+0x8e0>
    de6c:	add	r1, pc, r1
    de70:	add	r0, pc, r0
    de74:	bl	4500 <printf@plt>
    de78:	ldrb	r1, [r4, #16]
    de7c:	mov	r0, r5
    de80:	bl	4500 <printf@plt>
    de84:	ldrb	r1, [r4, #15]
    de88:	mov	r0, r5
    de8c:	bl	4500 <printf@plt>
    de90:	ldrb	r1, [r4, #14]
    de94:	mov	r0, r5
    de98:	bl	4500 <printf@plt>
    de9c:	ldrb	r1, [r4, #13]
    dea0:	mov	r0, r5
    dea4:	bl	4500 <printf@plt>
    dea8:	ldrb	r1, [r4, #12]
    deac:	mov	r0, r5
    deb0:	bl	4500 <printf@plt>
    deb4:	cmp	r8, #0
    deb8:	mov	r0, r9
    debc:	moveq	r6, r7
    dec0:	mov	r1, r6
    dec4:	bl	4500 <printf@plt>
    dec8:	ldr	r2, [r4, #18]
    decc:	ldr	r0, [pc, #580]	; e118 <lell_print@@Base+0x8e4>
    ded0:	ldr	r1, [pc, #580]	; e11c <lell_print@@Base+0x8e8>
    ded4:	add	r0, pc, r0
    ded8:	add	r1, pc, r1
    dedc:	bl	4500 <printf@plt>
    dee0:	ldrb	r1, [r4, #23]
    dee4:	ldrb	r2, [r4, #24]
    dee8:	ldrb	r0, [r4, #22]
    deec:	lsl	r1, r1, #8
    def0:	orr	r1, r1, r2, lsl #16
    def4:	orr	r2, r1, r0
    def8:	ldr	r0, [pc, #544]	; e120 <lell_print@@Base+0x8ec>
    defc:	ldr	r1, [pc, #544]	; e124 <lell_print@@Base+0x8f0>
    df00:	add	r0, pc, r0
    df04:	add	r1, pc, r1
    df08:	bl	4500 <printf@plt>
    df0c:	ldrb	r2, [r4, #25]
    df10:	ldr	r0, [pc, #528]	; e128 <lell_print@@Base+0x8f4>
    df14:	ldr	r1, [pc, #528]	; e12c <lell_print@@Base+0x8f8>
    df18:	add	r0, pc, r0
    df1c:	add	r1, pc, r1
    df20:	mov	r3, r2
    df24:	bl	4500 <printf@plt>
    df28:	ldrb	r0, [r4, #26]
    df2c:	ldrb	r1, [r4, #27]
    df30:	ldr	r5, [pc, #504]	; e130 <lell_print@@Base+0x8fc>
    df34:	orr	r2, r0, r1, lsl #8
    df38:	ldr	r1, [pc, #500]	; e134 <lell_print@@Base+0x900>
    df3c:	add	r5, pc, r5
    df40:	mov	r0, r5
    df44:	mov	r3, r2
    df48:	add	r1, pc, r1
    df4c:	bl	4500 <printf@plt>
    df50:	ldrb	r0, [r4, #28]
    df54:	ldrb	r1, [r4, #29]
    df58:	orr	r2, r0, r1, lsl #8
    df5c:	ldr	r1, [pc, #468]	; e138 <lell_print@@Base+0x904>
    df60:	mov	r0, r5
    df64:	mov	r3, r2
    df68:	add	r1, pc, r1
    df6c:	bl	4500 <printf@plt>
    df70:	ldrb	r0, [r4, #30]
    df74:	ldrb	r1, [r4, #31]
    df78:	orr	r2, r0, r1, lsl #8
    df7c:	ldr	r1, [pc, #440]	; e13c <lell_print@@Base+0x908>
    df80:	mov	r0, r5
    df84:	mov	r3, r2
    df88:	add	r1, pc, r1
    df8c:	bl	4500 <printf@plt>
    df90:	ldrb	r0, [r4, #32]
    df94:	ldrb	r1, [r4, #33]	; 0x21
    df98:	orr	r2, r0, r1, lsl #8
    df9c:	ldr	r1, [pc, #412]	; e140 <lell_print@@Base+0x90c>
    dfa0:	mov	r0, r5
    dfa4:	mov	r3, r2
    dfa8:	add	r1, pc, r1
    dfac:	bl	4500 <printf@plt>
    dfb0:	ldr	r0, [pc, #396]	; e144 <lell_print@@Base+0x910>
    dfb4:	add	r0, pc, r0
    dfb8:	bl	4500 <printf@plt>
    dfbc:	ldrb	r1, [r4, #34]	; 0x22
    dfc0:	ldr	r5, [pc, #384]	; e148 <lell_print@@Base+0x914>
    dfc4:	add	r5, pc, r5
    dfc8:	mov	r0, r5
    dfcc:	bl	4500 <printf@plt>
    dfd0:	ldrb	r1, [r4, #35]	; 0x23
    dfd4:	mov	r0, r5
    dfd8:	bl	4500 <printf@plt>
    dfdc:	ldrb	r1, [r4, #36]	; 0x24
    dfe0:	mov	r0, r5
    dfe4:	bl	4500 <printf@plt>
    dfe8:	ldrb	r1, [r4, #37]	; 0x25
    dfec:	mov	r0, r5
    dff0:	bl	4500 <printf@plt>
    dff4:	ldrb	r1, [r4, #38]	; 0x26
    dff8:	mov	r0, r5
    dffc:	bl	4500 <printf@plt>
    e000:	mov	r0, #10
    e004:	bl	4704 <putchar@plt>
    e008:	ldrb	r0, [r4, #39]	; 0x27
    e00c:	and	r1, r0, #31
    e010:	ldr	r0, [pc, #308]	; e14c <lell_print@@Base+0x918>
    e014:	add	r0, pc, r0
    e018:	bl	4500 <printf@plt>
    e01c:	ldrb	r0, [r4, #39]	; 0x27
    e020:	lsr	r1, r0, #5
    e024:	ldr	r0, [pc, #292]	; e150 <lell_print@@Base+0x91c>
    e028:	add	r0, pc, r0
    e02c:	ldr	r2, [r0, r1, lsl #2]
    e030:	ldr	r0, [pc, #284]	; e154 <lell_print@@Base+0x920>
    e034:	add	r0, pc, r0
    e038:	b	d96c <lell_print@@Base+0x138>
    e03c:	andeq	r5, r0, r1, lsr #8
    e040:	andeq	r5, r0, pc, lsl r4
    e044:	andeq	r5, r0, r8, ror #7
    e048:	andeq	r5, r0, r1, lsl #8
    e04c:	andeq	fp, r1, r4, lsr r5
    e050:	strdeq	r5, [r0], -r8
    e054:	andeq	r5, r0, pc, ror #7
    e058:	strdeq	fp, [r1], -ip
    e05c:	andeq	r5, r0, r5, asr #10
    e060:	muleq	r0, r1, r4
    e064:	andeq	r5, r0, pc, lsl #9
    e068:	andeq	r5, r0, r6, asr #12
    e06c:	andeq	r5, r0, r1, ror r4
    e070:	strdeq	r5, [r0], -r8
    e074:	andeq	fp, r1, r4, ror r5
    e078:	andeq	r5, r0, r9, ror #10
    e07c:	andeq	r5, r0, r8, lsr r7
    e080:	andeq	r5, r0, r8, lsr #10
    e084:	andeq	r5, r0, pc, lsr #14
    e088:	strdeq	r5, [r0], -fp
    e08c:	strdeq	r5, [r0], -r0
    e090:	ldrdeq	r5, [r0], -sp
    e094:			; <UNDEFINED> instruction: 0x000054b0
    e098:			; <UNDEFINED> instruction: 0x000057b7
    e09c:	andeq	r5, r0, ip, asr r6
    e0a0:	andeq	r5, r0, ip, asr #8
    e0a4:	andeq	r5, r0, r3, asr r6
    e0a8:	andeq	r5, r0, r3, lsl r6
    e0ac:	andeq	r5, r0, r4, lsl r6
    e0b0:	andeq	r5, r0, r9, lsl #12
    e0b4:	ldrdeq	r5, [r0], -sp
    e0b8:	andeq	r5, r0, ip, lsr #10
    e0bc:			; <UNDEFINED> instruction: 0x000055bc
    e0c0:	andeq	r5, r0, r9, asr #7
    e0c4:			; <UNDEFINED> instruction: 0x000055b3
    e0c8:	andeq	r5, r0, r3, ror r5
    e0cc:	andeq	r5, r0, r4, ror r5
    e0d0:	andeq	r5, r0, r9, ror #10
    e0d4:	andeq	r5, r0, r8, lsr #6
    e0d8:	andeq	r5, r0, r0, asr #9
    e0dc:			; <UNDEFINED> instruction: 0x000052b0
    e0e0:			; <UNDEFINED> instruction: 0x000054b7
    e0e4:	andeq	r5, r0, r3, lsl #9
    e0e8:	andeq	r5, r0, r8, ror r4
    e0ec:	andeq	r5, r0, r5, ror #8
    e0f0:	andeq	r5, r0, r1, ror #4
    e0f4:	andeq	r5, r0, fp, asr #10
    e0f8:	andeq	r5, r0, r4, lsr #6
    e0fc:	andeq	r5, r0, r9, lsr #2
    e100:	andeq	r5, r0, fp, lsl r3
    e104:	ldrdeq	r5, [r0], -fp
    e108:	ldrdeq	r5, [r0], -ip
    e10c:	ldrdeq	r5, [r0], -r1
    e110:	andeq	r5, r0, ip, lsl #1
    e114:	muleq	r0, r4, r2
    e118:	andeq	r5, r0, lr, asr r4
    e11c:	andeq	r5, r0, r6, asr r0
    e120:	andeq	r5, r0, lr, lsr r4
    e124:	andeq	r5, r0, r2, lsr r0
    e128:	andeq	r5, r0, r2, lsr r4
    e12c:	andeq	r5, r0, r4, lsr #32
    e130:	andeq	r5, r0, pc, lsl r4
    e134:	andeq	r5, r0, r2
    e138:	andeq	r4, r0, lr, ror #31
    e13c:	ldrdeq	r4, [r0], -r9
    e140:	andeq	r4, r0, r3, asr #31
    e144:	andeq	r4, r0, r1, asr #31
    e148:	andeq	r5, r0, r3, ror #4
    e14c:	andeq	r4, r0, sl, ror #30
    e150:	andeq	sl, r1, r0, lsl #29
    e154:	andeq	r4, r0, r7, asr pc
    e158:	andeq	r5, r0, r8, ror r2
    e15c:	andeq	r5, r0, r7, ror #9
    e160:	andeq	r5, r0, r3, lsr r2
    e164:	muleq	r0, fp, r4
    e168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e16c:	add	fp, sp, #28
    e170:	sub	sp, sp, #4
    e174:	vpush	{d8}
    e178:	sub	sp, sp, #32
    e17c:	cmp	r1, #1
    e180:	blt	e8cc <lell_print@@Base+0x1098>
    e184:	mov	r7, r0
    e188:	add	r0, r0, #2
    e18c:	mov	r3, r1
    e190:	mov	r9, #0
    e194:	vmov.f64	d8, #116	; 0x3fa00000  1.250
    e198:	str	r0, [sp, #4]
    e19c:	add	r0, r7, #4
    e1a0:	str	r0, [sp]
    e1a4:	ldr	r4, [pc, #1900]	; e918 <lell_print@@Base+0x10e4>
    e1a8:	ldr	r2, [pc, #1900]	; e91c <lell_print@@Base+0x10e8>
    e1ac:	ldr	sl, [pc, #1900]	; e920 <lell_print@@Base+0x10ec>
    e1b0:	str	r1, [sp, #8]
    e1b4:	str	r7, [sp, #12]
    e1b8:	add	r4, pc, r4
    e1bc:	add	r2, pc, r2
    e1c0:	add	sl, pc, sl
    e1c4:	ldrb	r6, [r7, r9]
    e1c8:	add	r1, r9, #1
    e1cc:	mov	r8, r9
    e1d0:	add	r9, r1, r6
    e1d4:	cmp	r9, r3
    e1d8:	bgt	e8dc <lell_print@@Base+0x10a8>
    e1dc:	cmp	r6, #0
    e1e0:	beq	e8fc <lell_print@@Base+0x10c8>
    e1e4:	ldrb	r7, [r7, r1]
    e1e8:	ldr	r0, [pc, #1844]	; e924 <lell_print@@Base+0x10f0>
    e1ec:	mov	r5, r2
    e1f0:	add	r0, pc, r0
    e1f4:	mov	r1, r7
    e1f8:	bl	4500 <printf@plt>
    e1fc:	sub	r0, r7, #1
    e200:	cmp	r0, #21
    e204:	bhi	e368 <lell_print@@Base+0xb34>
    e208:	add	r1, pc, #4
    e20c:	ldr	r0, [r1, r0, lsl #2]
    e210:	add	pc, r1, r0
    e214:	andeq	r0, r0, r8, asr r0
    e218:	andeq	r0, r0, r4, lsr #4
    e21c:	andeq	r0, r0, r0, lsr r2
    e220:	andeq	r0, r0, r0, ror #3
    e224:	andeq	r0, r0, r0, ror #3
    e228:	andeq	r0, r0, r4, lsl #5
    e22c:	muleq	r0, r0, r2
    e230:	andeq	r0, r0, r0, ror #3
    e234:			; <UNDEFINED> instruction: 0x000002b8
    e238:	andeq	r0, r0, r0, lsl r3
    e23c:	andeq	r0, r0, r0, ror #3
    e240:	andeq	r0, r0, r0, ror #3
    e244:	andeq	r0, r0, r0, ror #3
    e248:	andeq	r0, r0, r0, ror #3
    e24c:	andeq	r0, r0, r0, ror #3
    e250:	andeq	r0, r0, r0, ror #3
    e254:	andeq	r0, r0, r0, ror #3
    e258:	andeq	r0, r0, r8, asr #6
    e25c:	andeq	r0, r0, r0, ror #3
    e260:	andeq	r0, r0, r0, ror #3
    e264:	andeq	r0, r0, r0, ror #3
    e268:	andeq	r0, r0, r4, asr #7
    e26c:	ldr	r0, [pc, #1720]	; e92c <lell_print@@Base+0x10f8>
    e270:	add	r0, pc, r0
    e274:	bl	462c <puts@plt>
    e278:	mov	r0, r4
    e27c:	bl	4500 <printf@plt>
    e280:	ldr	r7, [sp, #12]
    e284:	add	r6, r8, #2
    e288:	ldrb	r0, [r7, r6]
    e28c:	ldr	r4, [pc, #1692]	; e930 <lell_print@@Base+0x10fc>
    e290:	add	r4, pc, r4
    e294:	lsr	r1, r0, #7
    e298:	mov	r0, r4
    e29c:	bl	4500 <printf@plt>
    e2a0:	ldrb	r0, [r7, r6]
    e2a4:	ubfx	r1, r0, #6, #1
    e2a8:	mov	r0, r4
    e2ac:	bl	4500 <printf@plt>
    e2b0:	ldrb	r0, [r7, r6]
    e2b4:	ubfx	r1, r0, #5, #1
    e2b8:	mov	r0, r4
    e2bc:	bl	4500 <printf@plt>
    e2c0:	ldrb	r0, [r7, r6]
    e2c4:	ubfx	r1, r0, #4, #1
    e2c8:	mov	r0, r4
    e2cc:	bl	4500 <printf@plt>
    e2d0:	ldrb	r0, [r7, r6]
    e2d4:	ubfx	r1, r0, #3, #1
    e2d8:	mov	r0, r4
    e2dc:	bl	4500 <printf@plt>
    e2e0:	ldrb	r0, [r7, r6]
    e2e4:	ubfx	r1, r0, #2, #1
    e2e8:	mov	r0, r4
    e2ec:	bl	4500 <printf@plt>
    e2f0:	ldrb	r0, [r7, r6]
    e2f4:	ubfx	r1, r0, #1, #1
    e2f8:	mov	r0, r4
    e2fc:	bl	4500 <printf@plt>
    e300:	ldrb	r0, [r7, r6]
    e304:	and	r1, r0, #1
    e308:	mov	r0, r4
    e30c:	bl	4500 <printf@plt>
    e310:	mov	r0, #10
    e314:	bl	4704 <putchar@plt>
    e318:	ldrb	r0, [r7, r6]
    e31c:	ldr	r4, [pc, #1552]	; e934 <lell_print@@Base+0x1100>
    e320:	tst	r0, #1
    e324:	add	r4, pc, r4
    e328:	bne	e798 <lell_print@@Base+0xf64>
    e32c:	tst	r0, #2
    e330:	bne	e7b8 <lell_print@@Base+0xf84>
    e334:	tst	r0, #4
    e338:	bne	e7d8 <lell_print@@Base+0xfa4>
    e33c:	tst	r0, #8
    e340:	bne	e7f8 <lell_print@@Base+0xfc4>
    e344:	tst	r0, #16
    e348:	bne	e818 <lell_print@@Base+0xfe4>
    e34c:	tst	r0, #32
    e350:	bne	e838 <lell_print@@Base+0x1004>
    e354:	tst	r0, #64	; 0x40
    e358:	bne	e858 <lell_print@@Base+0x1024>
    e35c:	tst	r0, #128	; 0x80
    e360:	bne	e878 <lell_print@@Base+0x1044>
    e364:	b	e88c <lell_print@@Base+0x1058>
    e368:	cmp	r7, #255	; 0xff
    e36c:	bne	e3f4 <lell_print@@Base+0xbc0>
    e370:	ldr	r0, [pc, #1580]	; e9a4 <lell_print@@Base+0x1170>
    e374:	add	r0, pc, r0
    e378:	bl	462c <puts@plt>
    e37c:	mov	r0, r4
    e380:	bl	4500 <printf@plt>
    e384:	cmp	r6, #3
    e388:	bcc	e654 <lell_print@@Base+0xe20>
    e38c:	ldr	r0, [sp, #12]
    e390:	add	r0, r0, r8
    e394:	ldrh	r0, [r0, #2]
    e398:	bl	4734 <bt_compidtostr@plt>
    e39c:	mov	r1, r0
    e3a0:	ldr	r0, [pc, #1536]	; e9a8 <lell_print@@Base+0x1174>
    e3a4:	add	r0, pc, r0
    e3a8:	bl	4500 <printf@plt>
    e3ac:	mov	r0, r4
    e3b0:	bl	4500 <printf@plt>
    e3b4:	ldr	r0, [pc, #1520]	; e9ac <lell_print@@Base+0x1178>
    e3b8:	add	r0, pc, r0
    e3bc:	bl	4500 <printf@plt>
    e3c0:	ldr	r7, [pc, #1512]	; e9b0 <lell_print@@Base+0x117c>
    e3c4:	cmp	r6, #3
    e3c8:	add	r7, pc, r7
    e3cc:	beq	e88c <lell_print@@Base+0x1058>
    e3d0:	ldr	r0, [sp]
    e3d4:	sub	r6, r6, #3
    e3d8:	add	r4, r0, r8
    e3dc:	ldrb	r1, [r4], #1
    e3e0:	mov	r0, r7
    e3e4:	bl	4500 <printf@plt>
    e3e8:	subs	r6, r6, #1
    e3ec:	bne	e3dc <lell_print@@Base+0xba8>
    e3f0:	b	e88c <lell_print@@Base+0x1058>
    e3f4:	mov	r0, #10
    e3f8:	bl	4704 <putchar@plt>
    e3fc:	mov	r0, r4
    e400:	bl	4500 <printf@plt>
    e404:	ldr	r7, [pc, #1308]	; e928 <lell_print@@Base+0x10f4>
    e408:	cmp	r6, #2
    e40c:	add	r7, pc, r7
    e410:	bcc	e88c <lell_print@@Base+0x1058>
    e414:	ldr	r0, [sp, #4]
    e418:	sub	r6, r6, #1
    e41c:	add	r4, r0, r8
    e420:	ldrb	r1, [r4], #1
    e424:	mov	r0, r7
    e428:	bl	4500 <printf@plt>
    e42c:	subs	r6, r6, #1
    e430:	bne	e420 <lell_print@@Base+0xbec>
    e434:	b	e88c <lell_print@@Base+0x1058>
    e438:	ldr	r0, [pc, #1304]	; e958 <lell_print@@Base+0x1124>
    e43c:	add	r0, pc, r0
    e440:	b	e44c <lell_print@@Base+0xc18>
    e444:	ldr	r0, [pc, #1296]	; e95c <lell_print@@Base+0x1128>
    e448:	add	r0, pc, r0
    e44c:	bl	462c <puts@plt>
    e450:	mov	r2, r5
    e454:	tst	r6, #1
    e458:	beq	e8b4 <lell_print@@Base+0x1080>
    e45c:	cmp	r6, #2
    e460:	bcc	e8b4 <lell_print@@Base+0x1080>
    e464:	ldr	r0, [sp, #4]
    e468:	sub	r4, r6, #1
    e46c:	mov	r7, #0
    e470:	add	r6, r0, r8
    e474:	add	r0, r6, r7
    e478:	ldrh	r1, [r0]
    e47c:	mov	r0, r2
    e480:	bl	4500 <printf@plt>
    e484:	add	r7, r7, #2
    e488:	mov	r2, r5
    e48c:	cmp	r7, r4
    e490:	blt	e474 <lell_print@@Base+0xc40>
    e494:	b	e8b4 <lell_print@@Base+0x1080>
    e498:	ldr	r0, [pc, #1220]	; e964 <lell_print@@Base+0x1130>
    e49c:	add	r0, pc, r0
    e4a0:	b	e4ac <lell_print@@Base+0xc78>
    e4a4:	ldr	r0, [pc, #1212]	; e968 <lell_print@@Base+0x1134>
    e4a8:	add	r0, pc, r0
    e4ac:	bl	462c <puts@plt>
    e4b0:	sub	r7, r6, #1
    e4b4:	tst	r7, #15
    e4b8:	beq	e664 <lell_print@@Base+0xe30>
    e4bc:	ldr	r0, [pc, #1196]	; e970 <lell_print@@Base+0x113c>
    e4c0:	mov	r1, r7
    e4c4:	add	r0, pc, r0
    e4c8:	b	e8ac <lell_print@@Base+0x1078>
    e4cc:	ldr	r0, [pc, #1184]	; e974 <lell_print@@Base+0x1140>
    e4d0:	add	r0, pc, r0
    e4d4:	bl	462c <puts@plt>
    e4d8:	mov	r0, r4
    e4dc:	bl	4500 <printf@plt>
    e4e0:	cmp	r6, #2
    e4e4:	bcc	e88c <lell_print@@Base+0x1058>
    e4e8:	ldr	r0, [sp, #4]
    e4ec:	sub	r7, r6, #1
    e4f0:	add	r4, r0, r8
    e4f4:	bl	4668 <__ctype_b_loc@plt>
    e4f8:	mov	r6, r0
    e4fc:	ldrb	r0, [r4], #1
    e500:	ldr	r1, [r6]
    e504:	add	r1, r1, r0, lsl #1
    e508:	ldrh	r1, [r1]
    e50c:	tst	r1, #16384	; 0x4000
    e510:	movweq	r0, #46	; 0x2e
    e514:	bl	4704 <putchar@plt>
    e518:	subs	r7, r7, #1
    e51c:	bne	e4fc <lell_print@@Base+0xcc8>
    e520:	b	e88c <lell_print@@Base+0x1058>
    e524:	ldr	r0, [pc, #1100]	; e978 <lell_print@@Base+0x1144>
    e528:	add	r0, pc, r0
    e52c:	bl	462c <puts@plt>
    e530:	mov	r0, r4
    e534:	bl	4500 <printf@plt>
    e538:	sub	r1, r6, #1
    e53c:	cmp	r1, #1
    e540:	bne	e898 <lell_print@@Base+0x1064>
    e544:	ldr	r0, [sp, #12]
    e548:	add	r0, r0, r8
    e54c:	ldrb	r1, [r0, #2]
    e550:	ldr	r0, [pc, #1060]	; e97c <lell_print@@Base+0x1148>
    e554:	add	r0, pc, r0
    e558:	b	e8ac <lell_print@@Base+0x1078>
    e55c:	ldr	r0, [pc, #1056]	; e984 <lell_print@@Base+0x1150>
    e560:	add	r0, pc, r0
    e564:	bl	462c <puts@plt>
    e568:	mov	r0, r4
    e56c:	bl	4500 <printf@plt>
    e570:	sub	r1, r6, #1
    e574:	cmp	r1, #4
    e578:	bne	e8a4 <lell_print@@Base+0x1070>
    e57c:	ldr	r0, [sp, #12]
    e580:	add	r4, r0, r8
    e584:	ldrb	r0, [r4, #2]
    e588:	ldrb	r1, [r4, #3]
    e58c:	orr	r0, r0, r1, lsl #8
    e590:	vmov	s0, r0
    e594:	vcvt.f64.s32	d16, s0
    e598:	ldr	r0, [pc, #1000]	; e988 <lell_print@@Base+0x1154>
    e59c:	vmul.f64	d16, d16, d8
    e5a0:	vmov	r2, r3, d16
    e5a4:	add	r0, pc, r0
    e5a8:	bl	4500 <printf@plt>
    e5ac:	ldrb	r0, [r4, #4]
    e5b0:	ldrb	r1, [r4, #5]
    e5b4:	orr	r0, r0, r1, lsl #8
    e5b8:	vmov	s0, r0
    e5bc:	vcvt.f64.s32	d16, s0
    e5c0:	ldr	r0, [pc, #964]	; e98c <lell_print@@Base+0x1158>
    e5c4:	vmul.f64	d16, d16, d8
    e5c8:	vmov	r2, r3, d16
    e5cc:	add	r0, pc, r0
    e5d0:	bl	4500 <printf@plt>
    e5d4:	b	e8b0 <lell_print@@Base+0x107c>
    e5d8:	ldr	r0, [pc, #948]	; e994 <lell_print@@Base+0x1160>
    e5dc:	add	r0, pc, r0
    e5e0:	bl	462c <puts@plt>
    e5e4:	mov	r0, r4
    e5e8:	bl	4500 <printf@plt>
    e5ec:	cmp	r6, #3
    e5f0:	bcc	e654 <lell_print@@Base+0xe20>
    e5f4:	ldr	r0, [sp, #12]
    e5f8:	add	r0, r0, r8
    e5fc:	ldrb	r1, [r0, #2]
    e600:	ldrb	r0, [r0, #3]
    e604:	orr	r1, r1, r0, lsl #8
    e608:	ldr	r0, [pc, #904]	; e998 <lell_print@@Base+0x1164>
    e60c:	add	r0, pc, r0
    e610:	bl	4500 <printf@plt>
    e614:	ldr	r7, [pc, #896]	; e99c <lell_print@@Base+0x1168>
    e618:	cmp	r6, #3
    e61c:	add	r7, pc, r7
    e620:	beq	e88c <lell_print@@Base+0x1058>
    e624:	ldr	r0, [pc, #884]	; e9a0 <lell_print@@Base+0x116c>
    e628:	add	r0, pc, r0
    e62c:	bl	4500 <printf@plt>
    e630:	ldr	r0, [sp]
    e634:	sub	r6, r6, #3
    e638:	add	r4, r0, r8
    e63c:	ldrb	r1, [r4], #1
    e640:	mov	r0, r7
    e644:	bl	4500 <printf@plt>
    e648:	subs	r6, r6, #1
    e64c:	bne	e63c <lell_print@@Base+0xe08>
    e650:	b	e88c <lell_print@@Base+0x1058>
    e654:	ldr	r0, [pc, #856]	; e9b4 <lell_print@@Base+0x1180>
    e658:	sub	r1, r6, #1
    e65c:	add	r0, pc, r0
    e660:	b	e8ac <lell_print@@Base+0x1078>
    e664:	cmp	r6, #2
    e668:	bcc	e8b0 <lell_print@@Base+0x107c>
    e66c:	ldr	r0, [sp, #4]
    e670:	mov	r4, #0
    e674:	add	r6, r0, r8
    e678:	ldrb	r0, [r6, r4]
    e67c:	and	r1, r4, #15
    e680:	add	r3, sp, #16
    e684:	eor	r2, r1, #15
    e688:	cmp	r1, #15
    e68c:	strb	r0, [r3, r2]
    e690:	bne	e788 <lell_print@@Base+0xf54>
    e694:	ldr	r0, [pc, #720]	; e96c <lell_print@@Base+0x1138>
    e698:	add	r0, pc, r0
    e69c:	bl	4500 <printf@plt>
    e6a0:	ldrb	r1, [sp, #16]
    e6a4:	mov	r0, sl
    e6a8:	bl	4500 <printf@plt>
    e6ac:	ldrb	r1, [sp, #17]
    e6b0:	mov	r0, sl
    e6b4:	bl	4500 <printf@plt>
    e6b8:	ldrb	r1, [sp, #18]
    e6bc:	mov	r0, sl
    e6c0:	bl	4500 <printf@plt>
    e6c4:	ldrb	r1, [sp, #19]
    e6c8:	mov	r0, sl
    e6cc:	bl	4500 <printf@plt>
    e6d0:	mov	r0, #45	; 0x2d
    e6d4:	bl	4704 <putchar@plt>
    e6d8:	ldrb	r1, [sp, #20]
    e6dc:	mov	r0, sl
    e6e0:	bl	4500 <printf@plt>
    e6e4:	ldrb	r1, [sp, #21]
    e6e8:	mov	r0, sl
    e6ec:	bl	4500 <printf@plt>
    e6f0:	mov	r0, #45	; 0x2d
    e6f4:	bl	4704 <putchar@plt>
    e6f8:	ldrb	r1, [sp, #22]
    e6fc:	mov	r0, sl
    e700:	bl	4500 <printf@plt>
    e704:	ldrb	r1, [sp, #23]
    e708:	mov	r0, sl
    e70c:	bl	4500 <printf@plt>
    e710:	mov	r0, #45	; 0x2d
    e714:	bl	4704 <putchar@plt>
    e718:	ldrb	r1, [sp, #24]
    e71c:	mov	r0, sl
    e720:	bl	4500 <printf@plt>
    e724:	ldrb	r1, [sp, #25]
    e728:	mov	r0, sl
    e72c:	bl	4500 <printf@plt>
    e730:	mov	r0, #45	; 0x2d
    e734:	bl	4704 <putchar@plt>
    e738:	ldrb	r1, [sp, #26]
    e73c:	mov	r0, sl
    e740:	bl	4500 <printf@plt>
    e744:	ldrb	r1, [sp, #27]
    e748:	mov	r0, sl
    e74c:	bl	4500 <printf@plt>
    e750:	ldrb	r1, [sp, #28]
    e754:	mov	r0, sl
    e758:	bl	4500 <printf@plt>
    e75c:	ldrb	r1, [sp, #29]
    e760:	mov	r0, sl
    e764:	bl	4500 <printf@plt>
    e768:	ldrb	r1, [sp, #30]
    e76c:	mov	r0, sl
    e770:	bl	4500 <printf@plt>
    e774:	ldrb	r1, [sp, #31]
    e778:	mov	r0, sl
    e77c:	bl	4500 <printf@plt>
    e780:	mov	r0, #10
    e784:	bl	4704 <putchar@plt>
    e788:	add	r4, r4, #1
    e78c:	cmp	r7, r4
    e790:	bne	e678 <lell_print@@Base+0xe44>
    e794:	b	e8b0 <lell_print@@Base+0x107c>
    e798:	mov	r0, r4
    e79c:	bl	4500 <printf@plt>
    e7a0:	ldr	r0, [pc, #400]	; e938 <lell_print@@Base+0x1104>
    e7a4:	add	r0, pc, r0
    e7a8:	bl	462c <puts@plt>
    e7ac:	ldrb	r0, [r7, r6]
    e7b0:	tst	r0, #2
    e7b4:	beq	e334 <lell_print@@Base+0xb00>
    e7b8:	mov	r0, r4
    e7bc:	bl	4500 <printf@plt>
    e7c0:	ldr	r0, [pc, #372]	; e93c <lell_print@@Base+0x1108>
    e7c4:	add	r0, pc, r0
    e7c8:	bl	462c <puts@plt>
    e7cc:	ldrb	r0, [r7, r6]
    e7d0:	tst	r0, #4
    e7d4:	beq	e33c <lell_print@@Base+0xb08>
    e7d8:	mov	r0, r4
    e7dc:	bl	4500 <printf@plt>
    e7e0:	ldr	r0, [pc, #344]	; e940 <lell_print@@Base+0x110c>
    e7e4:	add	r0, pc, r0
    e7e8:	bl	462c <puts@plt>
    e7ec:	ldrb	r0, [r7, r6]
    e7f0:	tst	r0, #8
    e7f4:	beq	e344 <lell_print@@Base+0xb10>
    e7f8:	mov	r0, r4
    e7fc:	bl	4500 <printf@plt>
    e800:	ldr	r0, [pc, #316]	; e944 <lell_print@@Base+0x1110>
    e804:	add	r0, pc, r0
    e808:	bl	462c <puts@plt>
    e80c:	ldrb	r0, [r7, r6]
    e810:	tst	r0, #16
    e814:	beq	e34c <lell_print@@Base+0xb18>
    e818:	mov	r0, r4
    e81c:	bl	4500 <printf@plt>
    e820:	ldr	r0, [pc, #288]	; e948 <lell_print@@Base+0x1114>
    e824:	add	r0, pc, r0
    e828:	bl	462c <puts@plt>
    e82c:	ldrb	r0, [r7, r6]
    e830:	tst	r0, #32
    e834:	beq	e354 <lell_print@@Base+0xb20>
    e838:	mov	r0, r4
    e83c:	bl	4500 <printf@plt>
    e840:	ldr	r0, [pc, #260]	; e94c <lell_print@@Base+0x1118>
    e844:	add	r0, pc, r0
    e848:	bl	462c <puts@plt>
    e84c:	ldrb	r0, [r7, r6]
    e850:	tst	r0, #64	; 0x40
    e854:	beq	e35c <lell_print@@Base+0xb28>
    e858:	mov	r0, r4
    e85c:	bl	4500 <printf@plt>
    e860:	ldr	r0, [pc, #232]	; e950 <lell_print@@Base+0x111c>
    e864:	add	r0, pc, r0
    e868:	bl	462c <puts@plt>
    e86c:	ldrb	r0, [r7, r6]
    e870:	tst	r0, #128	; 0x80
    e874:	beq	e88c <lell_print@@Base+0x1058>
    e878:	mov	r0, r4
    e87c:	bl	4500 <printf@plt>
    e880:	ldr	r0, [pc, #204]	; e954 <lell_print@@Base+0x1120>
    e884:	add	r0, pc, r0
    e888:	bl	462c <puts@plt>
    e88c:	mov	r0, #10
    e890:	bl	4704 <putchar@plt>
    e894:	b	e8b0 <lell_print@@Base+0x107c>
    e898:	ldr	r0, [pc, #224]	; e980 <lell_print@@Base+0x114c>
    e89c:	add	r0, pc, r0
    e8a0:	b	e8ac <lell_print@@Base+0x1078>
    e8a4:	ldr	r0, [pc, #228]	; e990 <lell_print@@Base+0x115c>
    e8a8:	add	r0, pc, r0
    e8ac:	bl	4500 <printf@plt>
    e8b0:	mov	r2, r5
    e8b4:	ldr	r3, [sp, #8]
    e8b8:	ldr	r4, [pc, #160]	; e960 <lell_print@@Base+0x112c>
    e8bc:	ldr	r7, [sp, #12]
    e8c0:	cmp	r9, r3
    e8c4:	add	r4, pc, r4
    e8c8:	blt	e1c4 <lell_print@@Base+0x990>
    e8cc:	sub	sp, fp, #40	; 0x28
    e8d0:	vpop	{d8}
    e8d4:	add	sp, sp, #4
    e8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8dc:	ldr	r0, [pc, #212]	; e9b8 <lell_print@@Base+0x1184>
    e8e0:	mov	r2, r6
    e8e4:	add	r0, pc, r0
    e8e8:	sub	sp, fp, #40	; 0x28
    e8ec:	vpop	{d8}
    e8f0:	add	sp, sp, #4
    e8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e8f8:	b	4500 <printf@plt>
    e8fc:	ldr	r0, [pc, #184]	; e9bc <lell_print@@Base+0x1188>
    e900:	add	r0, pc, r0
    e904:	sub	sp, fp, #40	; 0x28
    e908:	vpop	{d8}
    e90c:	add	sp, sp, #4
    e910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e914:	b	462c <puts@plt>
    e918:	andeq	r4, r0, r5, asr #31
    e91c:	andeq	r4, r0, sp, asr #31
    e920:	andeq	r5, r0, r8, rrx
    e924:	andeq	r4, r0, r4, ror pc
    e928:	andeq	r4, r0, fp, lsl lr
    e92c:	muleq	r0, sl, r1
    e930:	andeq	r4, r0, r6, ror #29
    e934:	andeq	r4, r0, r5, asr lr
    e938:	andeq	r4, r0, r7, asr #21
    e93c:	andeq	r4, r0, r4, asr #21
    e940:	andeq	r4, r0, r1, asr #21
    e944:			; <UNDEFINED> instruction: 0x00004ab6
    e948:	ldrdeq	r4, [r0], -r5
    e94c:	andeq	r4, r0, r4, lsr r4
    e950:	andeq	r4, r0, r4, lsl r4
    e954:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    e958:	andeq	r5, r0, ip, lsl r2
    e95c:	strdeq	r5, [r0], -r0
    e960:			; <UNDEFINED> instruction: 0x000048b9
    e964:	andeq	r5, r0, ip, ror #2
    e968:	andeq	r5, r0, r0, asr #2
    e96c:	andeq	r4, r0, r5, ror #21
    e970:	ldrdeq	r4, [r0], -r6
    e974:	strdeq	r5, [r0], -r8
    e978:	andeq	r5, r0, r0, lsl #1
    e97c:	andeq	r4, r0, r2, ror ip
    e980:	andeq	r4, r0, r2, lsr r9
    e984:	andeq	r5, r0, r8, lsl r0
    e988:	andeq	r4, r0, sl, asr #24
    e98c:	andeq	r4, r0, fp, lsr #24
    e990:	andeq	r4, r0, sl, asr r9
    e994:	andeq	r4, r0, lr, lsl lr
    e998:	andeq	r4, r0, r6, lsl ip
    e99c:	andeq	r4, r0, fp, lsl #24
    e9a0:	andeq	r4, r0, r5, lsl #24
    e9a4:	andeq	r5, r0, r4, ror #3
    e9a8:			; <UNDEFINED> instruction: 0x00004eba
    e9ac:	andeq	r4, r0, r0, ror fp
    e9b0:	andeq	r4, r0, pc, asr lr
    e9b4:	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    e9b8:	andeq	r4, r0, r6, asr #16
    e9bc:	andeq	r4, r0, r8, lsl #27

0000e9c0 <bt_compidtostr@@Base>:
    e9c0:	add	r0, r0, #1
    e9c4:	movw	r2, #1038	; 0x40e
    e9c8:	uxth	r1, r0
    e9cc:	cmp	r1, r2
    e9d0:	ldrhi	r0, [pc, #28]	; e9f4 <bt_compidtostr@@Base+0x34>
    e9d4:	addhi	r0, pc, r0
    e9d8:	bxhi	lr
    e9dc:	ldr	r1, [pc, #12]	; e9f0 <bt_compidtostr@@Base+0x30>
    e9e0:	sxth	r0, r0
    e9e4:	add	r1, pc, r1
    e9e8:	ldr	r0, [r1, r0, lsl #2]
    e9ec:	bx	lr
    e9f0:	andeq	sl, r1, r4, ror #9
    e9f4:	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...

0000ea00 <btbb_pcap_open@@Base>:
    ea00:	push	{r4, sl, fp, lr}
    ea04:	add	fp, sp, #8
    ea08:	sub	sp, sp, #24
    ea0c:	movw	r3, #15437	; 0x3c4d
    ea10:	movt	r3, #41394	; 0xa1b2
    ea14:	str	r3, [sp]
    ea18:	movw	r3, #2
    ea1c:	movt	r3, #4
    ea20:	str	r3, [sp, #4]
    ea24:	mov	r3, #0
    ea28:	str	r3, [sp, #8]
    ea2c:	str	r3, [sp, #12]
    ea30:	str	r2, [sp, #16]
    ea34:	str	r1, [sp, #20]
    ea38:	ldr	r1, [pc, #48]	; ea70 <btbb_pcap_open@@Base+0x70>
    ea3c:	add	r1, pc, r1
    ea40:	bl	450c <fopen@plt>
    ea44:	mov	r4, r0
    ea48:	cmp	r0, #0
    ea4c:	beq	ea64 <btbb_pcap_open@@Base+0x64>
    ea50:	mov	r0, sp
    ea54:	mov	r1, #24
    ea58:	mov	r2, #1
    ea5c:	mov	r3, r4
    ea60:	bl	45f0 <fwrite@plt>
    ea64:	mov	r0, r4
    ea68:	sub	sp, fp, #8
    ea6c:	pop	{r4, sl, fp, pc}
    ea70:	andeq	r9, r0, r4, lsr #21
    ea74:	nop	{0}
    ea78:	nop	{0}
    ea7c:	nop	{0}

0000ea80 <btbb_pcap_create_file@@Base>:
    ea80:	push	{r4, r5, r6, r7, fp, lr}
    ea84:	add	fp, sp, #16
    ea88:	sub	sp, sp, #24
    ea8c:	mov	r7, r0
    ea90:	mov	r0, #4
    ea94:	mov	r5, r1
    ea98:	bl	4638 <malloc@plt>
    ea9c:	cmp	r0, #0
    eaa0:	beq	eb18 <btbb_pcap_create_file@@Base+0x98>
    eaa4:	mov	r6, #0
    eaa8:	mov	r4, r0
    eaac:	str	r6, [r0]
    eab0:	add	r0, pc, #168	; 0xa8
    eab4:	vld1.64	{d16-d17}, [r0 :128]
    eab8:	mov	r0, sp
    eabc:	add	r0, r0, #8
    eac0:	vst1.32	{d16-d17}, [r0]
    eac4:	movw	r0, #15437	; 0x3c4d
    eac8:	movt	r0, #41394	; 0xa1b2
    eacc:	str	r0, [sp]
    ead0:	movw	r0, #2
    ead4:	movt	r0, #4
    ead8:	str	r0, [sp, #4]
    eadc:	mov	r0, r7
    eae0:	ldr	r1, [pc, #136]	; eb70 <btbb_pcap_create_file@@Base+0xf0>
    eae4:	add	r1, pc, r1
    eae8:	bl	450c <fopen@plt>
    eaec:	cmp	r0, #0
    eaf0:	beq	eb28 <btbb_pcap_create_file@@Base+0xa8>
    eaf4:	mov	r7, r0
    eaf8:	mov	r0, sp
    eafc:	mov	r1, #24
    eb00:	mov	r2, #1
    eb04:	mov	r3, r7
    eb08:	bl	45f0 <fwrite@plt>
    eb0c:	str	r7, [r4]
    eb10:	str	r4, [r5]
    eb14:	b	eb1c <btbb_pcap_create_file@@Base+0x9c>
    eb18:	mvn	r6, #2
    eb1c:	mov	r0, r6
    eb20:	sub	sp, fp, #16
    eb24:	pop	{r4, r5, r6, r7, fp, pc}
    eb28:	mov	r0, #0
    eb2c:	str	r0, [r4]
    eb30:	ldr	r0, [pc, #60]	; eb74 <btbb_pcap_create_file@@Base+0xf4>
    eb34:	add	r0, pc, r0
    eb38:	bl	45d8 <perror@plt>
    eb3c:	ldr	r0, [r4]
    eb40:	cmp	r0, #0
    eb44:	beq	eb4c <btbb_pcap_create_file@@Base+0xcc>
    eb48:	bl	4764 <fclose@plt>
    eb4c:	mov	r0, r4
    eb50:	bl	4548 <free@plt>
    eb54:	mvn	r6, #1
    eb58:	b	eb1c <btbb_pcap_create_file@@Base+0x9c>
    eb5c:	nop	{0}
	...
    eb68:	muleq	r0, r0, r1
    eb6c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    eb70:	strdeq	r9, [r0], -ip
    eb74:	andeq	r9, r0, lr, lsr #19

0000eb78 <btbb_pcap_close@@Base>:
    eb78:	cmp	r0, #0
    eb7c:	mvneq	r0, #0
    eb80:	bxeq	lr
    eb84:	push	{r4, sl, fp, lr}
    eb88:	add	fp, sp, #8
    eb8c:	mov	r4, r0
    eb90:	ldr	r0, [r0]
    eb94:	cmp	r0, #0
    eb98:	beq	eba0 <btbb_pcap_close@@Base+0x28>
    eb9c:	bl	4764 <fclose@plt>
    eba0:	mov	r0, r4
    eba4:	bl	4548 <free@plt>
    eba8:	mov	r0, #0
    ebac:	pop	{r4, sl, fp, pc}

0000ebb0 <btbb_pcap_dump@@Base>:
    ebb0:	push	{r4, r5, r6, sl, fp, lr}
    ebb4:	add	fp, sp, #16
    ebb8:	mov	r6, r0
    ebbc:	mov	r4, r2
    ebc0:	mov	r5, r1
    ebc4:	mov	r0, r1
    ebc8:	mov	r1, #16
    ebcc:	mov	r2, #1
    ebd0:	mov	r3, r6
    ebd4:	bl	45f0 <fwrite@plt>
    ebd8:	ldr	r1, [r5, #8]
    ebdc:	mov	r0, r4
    ebe0:	mov	r2, #1
    ebe4:	mov	r3, r6
    ebe8:	bl	45f0 <fwrite@plt>
    ebec:	mov	r0, r6
    ebf0:	pop	{r4, r5, r6, sl, fp, lr}
    ebf4:	b	4524 <fflush@plt>

0000ebf8 <btbb_pcap_append_packet@@Base>:
    ebf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ebfc:	add	fp, sp, #28
    ec00:	sub	sp, sp, #468	; 0x1d4
    ec04:	mvn	r5, #0
    ec08:	cmp	r0, #0
    ec0c:	beq	edcc <btbb_pcap_append_packet@@Base+0x1d4>
    ec10:	mov	sl, r0
    ec14:	ldr	r0, [r0]
    ec18:	cmp	r0, #0
    ec1c:	beq	edcc <btbb_pcap_append_packet@@Base+0x1d4>
    ec20:	ldr	r7, [fp, #24]
    ec24:	mov	r4, r3
    ec28:	mov	r9, r2
    ec2c:	mov	r0, r7
    ec30:	bl	4680 <btbb_packet_get_payload_length@plt>
    ec34:	mov	r6, r0
    ec38:	add	r0, r0, #7
    ec3c:	str	sp, [fp, #-476]	; 0xfffffe24
    ec40:	bic	r0, r0, #7
    ec44:	sub	r1, sp, r0
    ec48:	mov	sp, r1
    ec4c:	mov	r0, r7
    ec50:	str	r1, [fp, #-496]	; 0xfffffe10
    ec54:	bl	44f4 <btbb_get_payload_packed@plt>
    ec58:	movw	r2, #51712	; 0xca00
    ec5c:	mov	r0, r9
    ec60:	mov	r1, r4
    ec64:	mov	r3, #0
    ec68:	mov	r5, #0
    ec6c:	movt	r2, #15258	; 0x3b9a
    ec70:	bl	100f0 <lell_pcapng_close@@Base+0x28>
    ec74:	mov	r4, r0
    ec78:	mov	r0, r7
    ec7c:	bl	4794 <btbb_packet_get_channel@plt>
    ec80:	str	r0, [fp, #-480]	; 0xfffffe20
    ec84:	mov	r0, r7
    ec88:	bl	4560 <btbb_packet_get_ac_errors@plt>
    ec8c:	str	r0, [fp, #-484]	; 0xfffffe1c
    ec90:	mov	r0, r7
    ec94:	bl	46ec <btbb_packet_get_transport@plt>
    ec98:	str	r0, [fp, #-488]	; 0xfffffe18
    ec9c:	mov	r0, r7
    eca0:	bl	4554 <btbb_packet_get_modulation@plt>
    eca4:	str	r0, [fp, #-492]	; 0xfffffe14
    eca8:	mov	r0, r7
    ecac:	bl	4728 <btbb_packet_get_lap@plt>
    ecb0:	mov	r8, r0
    ecb4:	mov	r0, r7
    ecb8:	bl	46b0 <btbb_packet_get_header_packed@plt>
    ecbc:	movw	r1, #51712	; 0xca00
    ecc0:	cmp	r6, #400	; 0x190
    ecc4:	str	r4, [fp, #-472]	; 0xfffffe28
    ecc8:	ldr	r2, [fp, #-492]	; 0xfffffe14
    eccc:	ldr	r3, [fp, #16]
    ecd0:	sub	lr, fp, #256	; 0x100
    ecd4:	mov	r7, #3
    ecd8:	movt	r1, #15258	; 0x3b9a
    ecdc:	movcs	r6, #400	; 0x190
    ece0:	mls	r1, r4, r1, r9
    ece4:	ldr	r4, [fp, #8]
    ece8:	str	r1, [fp, #-468]	; 0xfffffe2c
    ecec:	add	r1, r6, #22
    ecf0:	str	r1, [fp, #-464]	; 0xfffffe30
    ecf4:	str	r1, [fp, #-460]	; 0xfffffe34
    ecf8:	ldr	r1, [fp, #-480]	; 0xfffffe20
    ecfc:	strb	r1, [fp, #-456]	; 0xfffffe38
    ed00:	ldr	r1, [fp, #-484]	; 0xfffffe1c
    ed04:	strb	r1, [fp, #-453]	; 0xfffffe3b
    ed08:	ldr	r1, [fp, #-488]	; 0xfffffe18
    ed0c:	orr	r1, r2, r1, lsl #4
    ed10:	ldr	r2, [fp, #20]
    ed14:	strb	r1, [fp, #-452]	; 0xfffffe3c
    ed18:	sub	r1, lr, #194	; 0xc2
    ed1c:	strb	r5, [fp, #-451]	; 0xfffffe3d
    ed20:	strh	r5, [r1]
    ed24:	str	r8, [fp, #-448]	; 0xfffffe40
    ed28:	mov	r8, r1
    ed2c:	bic	r1, r3, #-16777216	; 0xff000000
    ed30:	strb	r4, [fp, #-455]	; 0xfffffe39
    ed34:	orr	r1, r1, r2, lsl #24
    ed38:	str	r1, [fp, #-444]	; 0xfffffe44
    ed3c:	ldr	r1, [fp, #12]
    ed40:	cmp	r1, r4
    ed44:	sub	r4, fp, #472	; 0x1d8
    ed48:	strb	r1, [fp, #-454]	; 0xfffffe3a
    ed4c:	str	r0, [fp, #-440]	; 0xfffffe48
    ed50:	movwlt	r7, #7
    ed54:	cmn	r3, #1
    ed58:	orrne	r7, r7, #16
    ed5c:	cmp	r2, #255	; 0xff
    ed60:	orrne	r7, r7, #128	; 0x80
    ed64:	cmp	r6, #0
    ed68:	strh	r7, [r8, #14]
    ed6c:	beq	ed8c <btbb_pcap_append_packet@@Base+0x194>
    ed70:	cmp	r6, #400	; 0x190
    ed74:	bhi	edd8 <btbb_pcap_append_packet@@Base+0x1e0>
    ed78:	ldr	r1, [fp, #-496]	; 0xfffffe10
    ed7c:	add	r0, r4, #38	; 0x26
    ed80:	mov	r2, r6
    ed84:	bl	456c <memcpy@plt>
    ed88:	orr	r7, r7, #32
    ed8c:	strh	r7, [r8, #14]
    ed90:	sub	r0, fp, #472	; 0x1d8
    ed94:	mov	r1, #16
    ed98:	mov	r2, #1
    ed9c:	add	r4, r4, #16
    eda0:	ldr	r6, [sl]
    eda4:	mov	r3, r6
    eda8:	bl	45f0 <fwrite@plt>
    edac:	ldr	r1, [fp, #-464]	; 0xfffffe30
    edb0:	mov	r0, r4
    edb4:	mov	r2, #1
    edb8:	mov	r3, r6
    edbc:	bl	45f0 <fwrite@plt>
    edc0:	mov	r0, r6
    edc4:	bl	4524 <fflush@plt>
    edc8:	ldr	sp, [fp, #-476]	; 0xfffffe24
    edcc:	mov	r0, r5
    edd0:	sub	sp, fp, #28
    edd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    edd8:	ldr	r0, [pc, #24]	; edf8 <btbb_pcap_append_packet@@Base+0x200>
    eddc:	ldr	r1, [pc, #24]	; edfc <btbb_pcap_append_packet@@Base+0x204>
    ede0:	ldr	r3, [pc, #24]	; ee00 <btbb_pcap_append_packet@@Base+0x208>
    ede4:	mov	r2, #162	; 0xa2
    ede8:	add	r0, pc, r0
    edec:	add	r1, pc, r1
    edf0:	add	r3, pc, r3
    edf4:	bl	47e8 <__assert_fail@plt>
    edf8:	andeq	r9, r0, r6, lsl #14
    edfc:	andeq	r9, r0, r7, lsr r7
    ee00:	andeq	r9, r0, fp, ror r7
    ee04:	nop	{0}
    ee08:	nop	{0}
    ee0c:	nop	{0}

0000ee10 <lell_pcap_create_file@@Base>:
    ee10:	push	{r4, r5, r6, r7, fp, lr}
    ee14:	add	fp, sp, #16
    ee18:	sub	sp, sp, #24
    ee1c:	mov	r7, r0
    ee20:	mov	r0, #12
    ee24:	mov	r4, r1
    ee28:	bl	4638 <malloc@plt>
    ee2c:	cmp	r0, #0
    ee30:	beq	eeb8 <lell_pcap_create_file@@Base+0xa8>
    ee34:	mov	r5, #0
    ee38:	mov	r6, r0
    ee3c:	str	r5, [r0]
    ee40:	str	r5, [r0, #4]
    ee44:	str	r5, [r0, #8]
    ee48:	add	r0, pc, #144	; 0x90
    ee4c:	vld1.64	{d16-d17}, [r0 :128]
    ee50:	mov	r0, sp
    ee54:	add	r0, r0, #8
    ee58:	vst1.32	{d16-d17}, [r0]
    ee5c:	movw	r0, #15437	; 0x3c4d
    ee60:	movt	r0, #41394	; 0xa1b2
    ee64:	str	r0, [sp]
    ee68:	movw	r0, #2
    ee6c:	movt	r0, #4
    ee70:	str	r0, [sp, #4]
    ee74:	mov	r0, r7
    ee78:	ldr	r1, [pc, #112]	; eef0 <lell_pcap_create_file@@Base+0xe0>
    ee7c:	add	r1, pc, r1
    ee80:	bl	450c <fopen@plt>
    ee84:	cmp	r0, #0
    ee88:	beq	eec0 <lell_pcap_create_file@@Base+0xb0>
    ee8c:	mov	r7, r0
    ee90:	mov	r0, sp
    ee94:	mov	r1, #24
    ee98:	mov	r2, #1
    ee9c:	mov	r3, r7
    eea0:	bl	45f0 <fwrite@plt>
    eea4:	mov	r0, #256	; 0x100
    eea8:	str	r7, [r6]
    eeac:	str	r0, [r6, #4]
    eeb0:	str	r6, [r4]
    eeb4:	b	eecc <lell_pcap_create_file@@Base+0xbc>
    eeb8:	mvn	r5, #2
    eebc:	b	eecc <lell_pcap_create_file@@Base+0xbc>
    eec0:	mov	r0, r6
    eec4:	bl	4548 <free@plt>
    eec8:	mvn	r5, #1
    eecc:	mov	r0, r5
    eed0:	sub	sp, fp, #16
    eed4:	pop	{r4, r5, r6, r7, fp, pc}
    eed8:	nop	{0}
    eedc:	nop	{0}
	...
    eee8:	muleq	r0, r0, r1
    eeec:	andeq	r0, r0, r0, lsl #2
    eef0:	andeq	r9, r0, r4, ror #12
    eef4:	nop	{0}
    eef8:	nop	{0}
    eefc:	nop	{0}

0000ef00 <lell_pcap_ppi_create_file@@Base>:
    ef00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    ef04:	add	fp, sp, #24
    ef08:	sub	sp, sp, #24
    ef0c:	mov	r4, r0
    ef10:	mov	r0, #12
    ef14:	mov	r5, r2
    ef18:	mov	r8, r1
    ef1c:	bl	4638 <malloc@plt>
    ef20:	cmp	r0, #0
    ef24:	beq	efb0 <lell_pcap_ppi_create_file@@Base+0xb0>
    ef28:	mov	r6, #0
    ef2c:	mov	r7, r0
    ef30:	str	r6, [r0]
    ef34:	str	r6, [r0, #4]
    ef38:	str	r6, [r0, #8]
    ef3c:	add	r0, pc, #140	; 0x8c
    ef40:	vld1.64	{d16-d17}, [r0 :128]
    ef44:	mov	r0, sp
    ef48:	add	r0, r0, #8
    ef4c:	vst1.32	{d16-d17}, [r0]
    ef50:	movw	r0, #15437	; 0x3c4d
    ef54:	movt	r0, #41394	; 0xa1b2
    ef58:	str	r0, [sp]
    ef5c:	movw	r0, #2
    ef60:	movt	r0, #4
    ef64:	str	r0, [sp, #4]
    ef68:	mov	r0, r4
    ef6c:	ldr	r1, [pc, #108]	; efe0 <lell_pcap_ppi_create_file@@Base+0xe0>
    ef70:	add	r1, pc, r1
    ef74:	bl	450c <fopen@plt>
    ef78:	cmp	r0, #0
    ef7c:	beq	efb8 <lell_pcap_ppi_create_file@@Base+0xb8>
    ef80:	mov	r4, r0
    ef84:	mov	r0, sp
    ef88:	mov	r1, #24
    ef8c:	mov	r2, #1
    ef90:	mov	r3, r4
    ef94:	bl	45f0 <fwrite@plt>
    ef98:	mov	r0, #192	; 0xc0
    ef9c:	str	r4, [r7]
    efa0:	str	r0, [r7, #4]
    efa4:	str	r7, [r5]
    efa8:	strb	r8, [r7, #8]
    efac:	b	efc4 <lell_pcap_ppi_create_file@@Base+0xc4>
    efb0:	mvn	r6, #2
    efb4:	b	efc4 <lell_pcap_ppi_create_file@@Base+0xc4>
    efb8:	mov	r0, r7
    efbc:	bl	4548 <free@plt>
    efc0:	mvn	r6, #1
    efc4:	mov	r0, r6
    efc8:	sub	sp, fp, #24
    efcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
    efd8:	muleq	r0, r0, r1
    efdc:	andeq	r0, r0, r0, asr #1
    efe0:	andeq	r9, r0, r0, ror r5

0000efe4 <lell_pcap_append_packet@@Base>:
    efe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    efe8:	add	fp, sp, #28
    efec:	sub	sp, sp, #292	; 0x124
    eff0:	mvn	r4, #0
    eff4:	cmp	r0, #0
    eff8:	beq	f0fc <lell_pcap_append_packet@@Base+0x118>
    effc:	mov	r5, r0
    f000:	ldr	r0, [r0]
    f004:	cmp	r0, #0
    f008:	beq	f0fc <lell_pcap_append_packet@@Base+0x118>
    f00c:	ldr	r0, [r5, #4]
    f010:	cmp	r0, #256	; 0x100
    f014:	bne	f0fc <lell_pcap_append_packet@@Base+0x118>
    f018:	movw	r9, #51712	; 0xca00
    f01c:	ldr	r8, [fp, #20]
    f020:	ldr	sl, [fp, #8]
    f024:	mov	r1, r3
    f028:	mov	r7, r2
    f02c:	mov	r0, r2
    f030:	mov	r3, #0
    f034:	mov	r4, #0
    f038:	movt	r9, #15258	; 0x3b9a
    f03c:	mov	r2, r9
    f040:	bl	100f0 <lell_pcapng_close@@Base+0x28>
    f044:	mov	r6, r0
    f048:	mls	r7, r0, r9, r7
    f04c:	mov	r0, r8
    f050:	bl	4518 <lell_packet_is_data@plt>
    f054:	ldr	r1, [r8, #72]	; 0x48
    f058:	ldr	r2, [r8, #92]	; 0x5c
    f05c:	ldrb	r3, [r8, #69]	; 0x45
    f060:	stmib	sp, {r6, r7}
    f064:	ldr	r6, [fp, #12]
    f068:	ldr	r7, [fp, #16]
    f06c:	clz	r0, r0
    f070:	strb	sl, [sp, #21]
    f074:	lsr	r0, r0, #5
    f078:	str	r7, [sp, #24]
    f07c:	mov	r7, #35	; 0x23
    f080:	cmp	r6, sl
    f084:	strb	r6, [sp, #22]
    f088:	add	r6, sp, #4
    f08c:	movwlt	r7, #39	; 0x27
    f090:	orr	r0, r7, r0, lsl #4
    f094:	strh	r0, [sp, #28]
    f098:	strb	r3, [sp, #20]
    f09c:	strb	r2, [sp, #23]
    f0a0:	add	r2, r1, #9
    f0a4:	add	r0, r1, #19
    f0a8:	mov	r1, r8
    f0ac:	cmp	r2, #255	; 0xff
    f0b0:	str	r0, [sp, #12]
    f0b4:	movcs	r2, #255	; 0xff
    f0b8:	add	r0, r2, #10
    f0bc:	str	r0, [sp, #16]
    f0c0:	add	r0, r6, #26
    f0c4:	bl	456c <memcpy@plt>
    f0c8:	ldr	r5, [r5]
    f0cc:	mov	r0, r6
    f0d0:	mov	r1, #16
    f0d4:	mov	r2, #1
    f0d8:	mov	r3, r5
    f0dc:	bl	45f0 <fwrite@plt>
    f0e0:	ldr	r1, [sp, #12]
    f0e4:	add	r0, r6, #16
    f0e8:	mov	r2, #1
    f0ec:	mov	r3, r5
    f0f0:	bl	45f0 <fwrite@plt>
    f0f4:	mov	r0, r5
    f0f8:	bl	4524 <fflush@plt>
    f0fc:	mov	r0, r4
    f100:	sub	sp, fp, #28
    f104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f108 <lell_pcap_append_ppi_packet@@Base>:
    f108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f10c:	add	fp, sp, #28
    f110:	sub	sp, sp, #300	; 0x12c
    f114:	mvn	r4, #0
    f118:	cmp	r0, #0
    f11c:	beq	f23c <lell_pcap_append_ppi_packet@@Base+0x134>
    f120:	mov	r5, r0
    f124:	ldr	r0, [r0]
    f128:	cmp	r0, #0
    f12c:	beq	f23c <lell_pcap_append_ppi_packet@@Base+0x134>
    f130:	ldr	r0, [r5, #4]
    f134:	cmp	r0, #192	; 0xc0
    f138:	bne	f23c <lell_pcap_append_ppi_packet@@Base+0x134>
    f13c:	movw	r9, #51712	; 0xca00
    f140:	ldr	r8, [fp, #28]
    f144:	ldr	sl, [fp, #8]
    f148:	mov	r1, r3
    f14c:	mov	r7, r2
    f150:	mov	r0, r2
    f154:	mov	r3, #0
    f158:	mov	r4, #0
    f15c:	movt	r9, #15258	; 0x3b9a
    f160:	mov	r2, r9
    f164:	bl	100f0 <lell_pcapng_close@@Base+0x28>
    f168:	mov	r6, r0
    f16c:	mls	r7, r0, r9, r7
    f170:	mov	r0, r8
    f174:	bl	46bc <lell_get_channel_k@plt>
    f178:	ldr	r1, [r8, #72]	; 0x48
    f17c:	mov	r2, #1572864	; 0x180000
    f180:	stm	sp, {r6, r7}
    f184:	mov	r6, sp
    f188:	str	r2, [sp, #16]
    f18c:	mov	r2, #147	; 0x93
    f190:	str	r2, [sp, #20]
    f194:	movw	r2, #30006	; 0x7536
    f198:	movt	r2, #12
    f19c:	str	r2, [sp, #24]
    f1a0:	add	r2, r1, #33	; 0x21
    f1a4:	str	r2, [sp, #12]
    f1a8:	add	r2, r1, #9
    f1ac:	cmp	r2, #255	; 0xff
    f1b0:	movcs	r2, #255	; 0xff
    f1b4:	add	r1, r2, #24
    f1b8:	str	r1, [sp, #8]
    f1bc:	movw	r1, #2402	; 0x962
    f1c0:	add	r0, r1, r0, lsl #1
    f1c4:	ldrb	r1, [r5, #8]
    f1c8:	strh	r0, [sp, #29]
    f1cc:	strb	sl, [sp, #31]
    f1d0:	strb	r1, [sp, #28]
    f1d4:	ldr	r1, [fp, #16]
    f1d8:	ldr	r0, [r8, #76]	; 0x4c
    f1dc:	strb	r1, [sp, #36]	; 0x24
    f1e0:	ldr	r1, [fp, #12]
    f1e4:	strb	r1, [sp, #37]	; 0x25
    f1e8:	ldr	r1, [fp, #20]
    f1ec:	strb	r1, [sp, #38]	; 0x26
    f1f0:	ldr	r1, [fp, #24]
    f1f4:	strb	r1, [sp, #39]	; 0x27
    f1f8:	str	r0, [sp, #32]
    f1fc:	add	r0, r6, #40	; 0x28
    f200:	mov	r1, r8
    f204:	bl	456c <memcpy@plt>
    f208:	ldr	r5, [r5]
    f20c:	mov	r0, r6
    f210:	mov	r1, #16
    f214:	mov	r2, #1
    f218:	mov	r3, r5
    f21c:	bl	45f0 <fwrite@plt>
    f220:	ldr	r1, [sp, #8]
    f224:	add	r0, r6, #16
    f228:	mov	r2, #1
    f22c:	mov	r3, r5
    f230:	bl	45f0 <fwrite@plt>
    f234:	mov	r0, r5
    f238:	bl	4524 <fflush@plt>
    f23c:	mov	r0, r4
    f240:	sub	sp, fp, #28
    f244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f248 <lell_pcap_close@@Base>:
    f248:	cmp	r0, #0
    f24c:	mvneq	r0, #0
    f250:	bxeq	lr
    f254:	push	{r4, sl, fp, lr}
    f258:	add	fp, sp, #8
    f25c:	mov	r4, r0
    f260:	ldr	r0, [r0]
    f264:	cmp	r0, #0
    f268:	beq	f270 <lell_pcap_close@@Base+0x28>
    f26c:	bl	4764 <fclose@plt>
    f270:	mov	r0, r4
    f274:	bl	4548 <free@plt>
    f278:	mov	r0, #0
    f27c:	pop	{r4, sl, fp, pc}

0000f280 <pcapng_create@@Base>:
    f280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f284:	add	fp, sp, #28
    f288:	sub	sp, sp, #4
    f28c:	vpush	{d8-d9}
    f290:	sub	sp, sp, #48	; 0x30
    f294:	mov	r7, r3
    f298:	mov	r8, r2
    f29c:	mov	r5, r1
    f2a0:	mov	r4, r0
    f2a4:	vmov.i32	q4, #0	; 0x00000000
    f2a8:	add	sl, r0, #4
    f2ac:	bl	46d4 <getpagesize@plt>
    f2b0:	mov	r6, r0
    f2b4:	mov	r0, #0
    f2b8:	mov	r1, #194	; 0xc2
    f2bc:	mov	r2, #432	; 0x1b0
    f2c0:	vst1.32	{d8-d9}, [sl]
    f2c4:	str	r0, [r4, #20]
    f2c8:	str	r0, [r4, #24]
    f2cc:	mov	r0, r5
    f2d0:	bl	465c <open@plt>
    f2d4:	mov	r9, #6
    f2d8:	cmn	r0, #1
    f2dc:	str	r0, [r4]
    f2e0:	beq	f6d0 <pcapng_create@@Base+0x450>
    f2e4:	ldr	r1, [pc, #1080]	; f724 <pcapng_create@@Base+0x4a4>
    f2e8:	add	r1, pc, r1
    f2ec:	vld1.64	{d16-d17}, [r1]!
    f2f0:	vldr	d18, [r1]
    f2f4:	add	r1, sp, #24
    f2f8:	mov	r2, r1
    f2fc:	vst1.64	{d16-d17}, [r2]!
    f300:	vstr	d18, [r2]
    f304:	mov	r2, #24
    f308:	str	r2, [r4, #8]
    f30c:	mov	r2, #24
    f310:	bl	4740 <write@plt>
    f314:	cmn	r0, #1
    f318:	mov	r5, r0
    f31c:	str	r6, [sp, #20]
    f320:	cmpne	r8, #0
    f324:	bne	f33c <pcapng_create@@Base+0xbc>
    f328:	ldr	r0, [r4, #8]
    f32c:	cmn	r5, #1
    f330:	str	r0, [r4, #12]
    f334:	bne	f400 <pcapng_create@@Base+0x180>
    f338:	b	f6d0 <pcapng_create@@Base+0x450>
    f33c:	ldrh	r0, [r8]
    f340:	str	r7, [sp, #12]
    f344:	str	sl, [sp, #16]
    f348:	cmp	r0, #0
    f34c:	beq	f3e8 <pcapng_create@@Base+0x168>
    f350:	ldr	r7, [pc, #976]	; f728 <pcapng_create@@Base+0x4a8>
    f354:	add	r7, pc, r7
    f358:	ldrh	sl, [r8, #2]
    f35c:	cmp	sl, #0
    f360:	beq	f3e8 <pcapng_create@@Base+0x168>
    f364:	ldr	r0, [r4]
    f368:	add	r2, sl, #4
    f36c:	mov	r1, r8
    f370:	bl	4740 <write@plt>
    f374:	movw	r1, #65532	; 0xfffc
    f378:	mov	r5, r0
    f37c:	add	r0, sl, #3
    f380:	movt	r1, #1
    f384:	and	r9, r0, r1
    f388:	subs	r0, r9, sl
    f38c:	cmnne	r5, #1
    f390:	beq	f3c0 <pcapng_create@@Base+0x140>
    f394:	add	r0, sl, #1
    f398:	sub	r6, r0, r9
    f39c:	ldr	r0, [r4]
    f3a0:	mov	r1, r7
    f3a4:	mov	r2, #1
    f3a8:	bl	4740 <write@plt>
    f3ac:	cmp	r6, #0
    f3b0:	mov	r5, r0
    f3b4:	addne	r6, r6, #1
    f3b8:	cmnne	r5, #1
    f3bc:	bne	f39c <pcapng_create@@Base+0x11c>
    f3c0:	ldr	r1, [r4, #8]
    f3c4:	add	r0, r9, #4
    f3c8:	cmn	r5, #1
    f3cc:	add	r1, r1, r0
    f3d0:	str	r1, [r4, #8]
    f3d4:	beq	f6b8 <pcapng_create@@Base+0x438>
    f3d8:	add	r8, r8, r0
    f3dc:	ldrh	r0, [r8]
    f3e0:	cmp	r0, #0
    f3e4:	bne	f358 <pcapng_create@@Base+0xd8>
    f3e8:	ldr	r0, [r4, #8]
    f3ec:	ldr	sl, [sp, #16]
    f3f0:	ldr	r6, [sp, #20]
    f3f4:	ldr	r7, [sp, #12]
    f3f8:	mov	r9, #6
    f3fc:	str	r0, [r4, #12]
    f400:	add	r1, r7, r6
    f404:	add	r1, r1, r0
    f408:	add	r1, r1, #3
    f40c:	udiv	r1, r1, r6
    f410:	mul	r1, r1, r6
    f414:	subs	r7, r1, r0
    f418:	str	r1, [r4, #8]
    f41c:	cmnne	r5, #1
    f420:	beq	f450 <pcapng_create@@Base+0x1d0>
    f424:	ldr	r6, [pc, #768]	; f72c <pcapng_create@@Base+0x4ac>
    f428:	add	r6, pc, r6
    f42c:	ldr	r0, [r4]
    f430:	mov	r1, r6
    f434:	mov	r2, #1
    f438:	bl	4740 <write@plt>
    f43c:	mov	r5, r0
    f440:	subs	r7, r7, #1
    f444:	cmnne	r5, #1
    f448:	bne	f42c <pcapng_create@@Base+0x1ac>
    f44c:	ldr	r1, [r4, #8]
    f450:	ldr	r0, [r4]
    f454:	mov	r2, #0
    f458:	mov	r3, #1
    f45c:	stm	sp, {r0, r2}
    f460:	mov	r0, #0
    f464:	mov	r2, #3
    f468:	bl	46a4 <mmap@plt>
    f46c:	cmn	r5, #1
    f470:	str	r0, [r4, #4]
    f474:	beq	f6d0 <pcapng_create@@Base+0x450>
    f478:	cmn	r0, #1
    f47c:	beq	f4e4 <pcapng_create@@Base+0x264>
    f480:	ldr	r0, [fp, #12]
    f484:	ldr	r1, [fp, #8]
    f488:	mov	r2, #0
    f48c:	mov	r3, #1
    f490:	str	r2, [sp, #28]
    f494:	str	r3, [sp, #24]
    f498:	strh	r1, [sp, #32]
    f49c:	strh	r2, [sp, #34]	; 0x22
    f4a0:	str	r0, [sp, #36]	; 0x24
    f4a4:	mov	r0, #16
    f4a8:	add	r1, sp, #24
    f4ac:	mov	r2, #16
    f4b0:	str	r0, [r4, #20]
    f4b4:	ldr	r0, [r4]
    f4b8:	bl	4740 <write@plt>
    f4bc:	cmn	r0, #1
    f4c0:	mov	r5, r0
    f4c4:	ldrne	r6, [fp, #16]
    f4c8:	cmpne	r6, #0
    f4cc:	bne	f4ec <pcapng_create@@Base+0x26c>
    f4d0:	ldr	r0, [r4, #20]
    f4d4:	cmn	r5, #1
    f4d8:	str	r0, [r4, #24]
    f4dc:	bne	f5a4 <pcapng_create@@Base+0x324>
    f4e0:	b	f6d0 <pcapng_create@@Base+0x450>
    f4e4:	mov	r9, #7
    f4e8:	b	f6d0 <pcapng_create@@Base+0x450>
    f4ec:	ldrh	r0, [r6]
    f4f0:	str	sl, [sp, #16]
    f4f4:	cmp	r0, #0
    f4f8:	beq	f594 <pcapng_create@@Base+0x314>
    f4fc:	ldr	sl, [pc, #556]	; f730 <pcapng_create@@Base+0x4b0>
    f500:	movw	r8, #65532	; 0xfffc
    f504:	movt	r8, #1
    f508:	add	sl, pc, sl
    f50c:	ldrh	r7, [r6, #2]
    f510:	cmp	r7, #0
    f514:	beq	f594 <pcapng_create@@Base+0x314>
    f518:	ldr	r0, [r4]
    f51c:	add	r2, r7, #4
    f520:	mov	r1, r6
    f524:	bl	4740 <write@plt>
    f528:	mov	r5, r0
    f52c:	add	r0, r7, #3
    f530:	and	r9, r0, r8
    f534:	subs	r0, r9, r7
    f538:	cmnne	r5, #1
    f53c:	beq	f56c <pcapng_create@@Base+0x2ec>
    f540:	add	r0, r7, #1
    f544:	sub	r7, r0, r9
    f548:	ldr	r0, [r4]
    f54c:	mov	r1, sl
    f550:	mov	r2, #1
    f554:	bl	4740 <write@plt>
    f558:	cmp	r7, #0
    f55c:	mov	r5, r0
    f560:	addne	r7, r7, #1
    f564:	cmnne	r5, #1
    f568:	bne	f548 <pcapng_create@@Base+0x2c8>
    f56c:	ldr	r1, [r4, #20]
    f570:	add	r0, r9, #4
    f574:	cmn	r5, #1
    f578:	add	r1, r1, r0
    f57c:	str	r1, [r4, #20]
    f580:	beq	f6c0 <pcapng_create@@Base+0x440>
    f584:	add	r6, r6, r0
    f588:	ldrh	r0, [r6]
    f58c:	cmp	r0, #0
    f590:	bne	f50c <pcapng_create@@Base+0x28c>
    f594:	ldr	r0, [r4, #20]
    f598:	ldr	sl, [sp, #16]
    f59c:	mov	r9, #6
    f5a0:	str	r0, [r4, #24]
    f5a4:	ldr	r1, [fp, #20]
    f5a8:	ldr	r2, [sp, #20]
    f5ac:	add	r1, r1, r2
    f5b0:	add	r1, r1, r0
    f5b4:	add	r1, r1, #3
    f5b8:	udiv	r1, r1, r2
    f5bc:	mul	r1, r1, r2
    f5c0:	subs	r7, r1, r0
    f5c4:	str	r1, [r4, #20]
    f5c8:	beq	f5f8 <pcapng_create@@Base+0x378>
    f5cc:	ldr	r6, [pc, #352]	; f734 <pcapng_create@@Base+0x4b4>
    f5d0:	add	r6, pc, r6
    f5d4:	ldr	r0, [r4]
    f5d8:	mov	r1, r6
    f5dc:	mov	r2, #1
    f5e0:	bl	4740 <write@plt>
    f5e4:	mov	r5, r0
    f5e8:	subs	r7, r7, #1
    f5ec:	cmnne	r5, #1
    f5f0:	bne	f5d4 <pcapng_create@@Base+0x354>
    f5f4:	ldr	r1, [r4, #20]
    f5f8:	ldr	r0, [r4]
    f5fc:	ldr	r2, [r4, #8]
    f600:	mov	r3, #1
    f604:	stm	sp, {r0, r2}
    f608:	mov	r0, #0
    f60c:	mov	r2, #3
    f610:	bl	46a4 <mmap@plt>
    f614:	cmn	r5, #1
    f618:	str	r0, [r4, #16]
    f61c:	beq	f6d0 <pcapng_create@@Base+0x450>
    f620:	cmn	r0, #1
    f624:	mov	r9, #7
    f628:	beq	f6d0 <pcapng_create@@Base+0x450>
    f62c:	ldmib	r4, {r0, r1, r2}
    f630:	ldr	r3, [pc, #256]	; f738 <pcapng_create@@Base+0x4b8>
    f634:	mov	r9, #0
    f638:	sub	r1, r1, r2
    f63c:	add	r3, pc, r3
    f640:	sub	r1, r1, #12
    f644:	strh	r1, [r3, #2]
    f648:	ldr	r1, [pc, #236]	; f73c <pcapng_create@@Base+0x4bc>
    f64c:	ldr	r1, [pc, r1]
    f650:	str	r1, [r0, r2]
    f654:	ldmib	r4, {r0, r1}
    f658:	bic	r2, r1, #3
    f65c:	str	r1, [r0, #4]
    f660:	add	r0, r0, r2
    f664:	str	r1, [r0, #-4]
    f668:	ldr	r0, [r4, #20]
    f66c:	ldr	r1, [r4, #24]
    f670:	sub	r0, r0, r1
    f674:	sub	r0, r0, #12
    f678:	strh	r0, [r3, #2]
    f67c:	ldr	r0, [r4, #16]
    f680:	ldr	r2, [pc, #184]	; f740 <pcapng_create@@Base+0x4c0>
    f684:	ldr	r2, [pc, r2]
    f688:	str	r2, [r0, r1]
    f68c:	ldr	r1, [r4, #20]
    f690:	ldr	r0, [r4, #16]
    f694:	bic	r2, r1, #3
    f698:	str	r1, [r0, #4]
    f69c:	add	r0, r0, r2
    f6a0:	str	r1, [r0, #-4]
    f6a4:	ldr	r0, [r4, #4]
    f6a8:	ldr	r1, [r4, #20]
    f6ac:	str	r9, [r0, #20]
    f6b0:	str	r1, [r0, #16]
    f6b4:	b	f710 <pcapng_create@@Base+0x490>
    f6b8:	str	r1, [r4, #12]
    f6bc:	b	f6c8 <pcapng_create@@Base+0x448>
    f6c0:	ldr	r0, [r4, #20]
    f6c4:	str	r0, [r4, #24]
    f6c8:	ldr	sl, [sp, #16]
    f6cc:	mov	r9, #6
    f6d0:	ldr	r0, [r4, #16]
    f6d4:	add	r1, r0, #1
    f6d8:	cmp	r1, #2
    f6dc:	bcc	f6e8 <pcapng_create@@Base+0x468>
    f6e0:	ldr	r1, [r4, #20]
    f6e4:	bl	477c <munmap@plt>
    f6e8:	ldr	r0, [sl]
    f6ec:	add	r1, r0, #1
    f6f0:	cmp	r1, #2
    f6f4:	bcc	f700 <pcapng_create@@Base+0x480>
    f6f8:	ldr	r1, [r4, #8]
    f6fc:	bl	477c <munmap@plt>
    f700:	ldr	r0, [r4]
    f704:	cmn	r0, #1
    f708:	beq	f710 <pcapng_create@@Base+0x490>
    f70c:	bl	47dc <close@plt>
    f710:	mov	r0, r9
    f714:	sub	sp, fp, #48	; 0x30
    f718:	vpop	{d8-d9}
    f71c:	add	sp, sp, #4
    f720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f724:	andeq	r9, r0, r0, asr #7
    f728:	andeq	r9, r0, ip, ror #6
    f72c:	muleq	r0, r8, r2
    f730:			; <UNDEFINED> instruction: 0x000091b8
    f734:	strdeq	r9, [r0], -r0
    f738:	strdeq	sl, [r1], -ip
    f73c:	andeq	sl, r1, ip, ror #21
    f740:			; <UNDEFINED> instruction: 0x0001aab4

0000f744 <pcapng_close@@Base>:
    f744:	push	{r4, sl, fp, lr}
    f748:	add	fp, sp, #8
    f74c:	mov	r4, r0
    f750:	ldr	r0, [r0, #16]
    f754:	add	r1, r0, #1
    f758:	cmp	r1, #2
    f75c:	bcc	f768 <pcapng_close@@Base+0x24>
    f760:	ldr	r1, [r4, #20]
    f764:	bl	477c <munmap@plt>
    f768:	ldr	r0, [r4, #4]
    f76c:	add	r1, r0, #1
    f770:	cmp	r1, #2
    f774:	bcc	f780 <pcapng_close@@Base+0x3c>
    f778:	ldr	r1, [r4, #8]
    f77c:	bl	477c <munmap@plt>
    f780:	ldr	r0, [r4]
    f784:	cmn	r0, #1
    f788:	beq	f790 <pcapng_close@@Base+0x4c>
    f78c:	bl	47dc <close@plt>
    f790:	mov	r0, #0
    f794:	pop	{r4, sl, fp, pc}

0000f798 <pcapng_append_section_option@@Base>:
    f798:	push	{r4, r5, fp, lr}
    f79c:	add	fp, sp, #8
    f7a0:	mov	r4, r0
    f7a4:	mov	r0, #1
    f7a8:	cmp	r4, #0
    f7ac:	ldrne	r2, [r4]
    f7b0:	cmnne	r2, #1
    f7b4:	beq	f7dc <pcapng_append_section_option@@Base+0x44>
    f7b8:	ldr	r2, [r4, #4]
    f7bc:	mov	r0, #5
    f7c0:	add	r3, r2, #1
    f7c4:	cmp	r3, #2
    f7c8:	popcc	{r4, r5, fp, pc}
    f7cc:	cmp	r1, #0
    f7d0:	ldrne	r3, [r4, #12]
    f7d4:	cmpne	r3, #0
    f7d8:	bne	f7e0 <pcapng_append_section_option@@Base+0x48>
    f7dc:	pop	{r4, r5, fp, pc}
    f7e0:	ldrh	r5, [r1, #2]
    f7e4:	add	r0, r2, r3
    f7e8:	add	r2, r5, #4
    f7ec:	bl	456c <memcpy@plt>
    f7f0:	movw	r1, #65532	; 0xfffc
    f7f4:	add	r0, r5, #7
    f7f8:	movt	r1, #1
    f7fc:	and	r0, r0, r1
    f800:	ldmib	r4, {r1, r2, r3}
    f804:	add	r0, r0, r3
    f808:	str	r0, [r4, #12]
    f80c:	sub	r2, r2, r0
    f810:	ldr	r3, [pc, #28]	; f834 <pcapng_append_section_option@@Base+0x9c>
    f814:	sub	r2, r2, #12
    f818:	add	r3, pc, r3
    f81c:	strh	r2, [r3, #2]
    f820:	ldr	r2, [pc, #16]	; f838 <pcapng_append_section_option@@Base+0xa0>
    f824:	ldr	r2, [pc, r2]
    f828:	str	r2, [r1, r0]
    f82c:	mov	r0, #0
    f830:	pop	{r4, r5, fp, pc}
    f834:	andeq	sl, r1, r0, lsr #18
    f838:	andeq	sl, r1, r4, lsl r9

0000f83c <pcapng_append_interface_option@@Base>:
    f83c:	push	{r4, r5, fp, lr}
    f840:	add	fp, sp, #8
    f844:	mov	r4, r0
    f848:	mov	r0, #1
    f84c:	cmp	r4, #0
    f850:	ldrne	r2, [r4]
    f854:	cmnne	r2, #1
    f858:	beq	f880 <pcapng_append_interface_option@@Base+0x44>
    f85c:	ldr	r2, [r4, #16]
    f860:	mov	r0, #5
    f864:	add	r3, r2, #1
    f868:	cmp	r3, #2
    f86c:	popcc	{r4, r5, fp, pc}
    f870:	cmp	r1, #0
    f874:	ldrne	r3, [r4, #24]
    f878:	cmpne	r3, #0
    f87c:	bne	f884 <pcapng_append_interface_option@@Base+0x48>
    f880:	pop	{r4, r5, fp, pc}
    f884:	ldrh	r5, [r1, #2]
    f888:	add	r0, r2, r3
    f88c:	add	r2, r5, #4
    f890:	bl	456c <memcpy@plt>
    f894:	movw	r1, #65532	; 0xfffc
    f898:	add	r0, r5, #7
    f89c:	add	r3, r4, #16
    f8a0:	movt	r1, #1
    f8a4:	and	r0, r0, r1
    f8a8:	ldm	r3, {r1, r2, r3}
    f8ac:	add	r0, r0, r3
    f8b0:	str	r0, [r4, #24]
    f8b4:	sub	r2, r2, r0
    f8b8:	ldr	r3, [pc, #28]	; f8dc <pcapng_append_interface_option@@Base+0xa0>
    f8bc:	sub	r2, r2, #12
    f8c0:	add	r3, pc, r3
    f8c4:	strh	r2, [r3, #2]
    f8c8:	ldr	r2, [pc, #16]	; f8e0 <pcapng_append_interface_option@@Base+0xa4>
    f8cc:	ldr	r2, [pc, r2]
    f8d0:	str	r2, [r1, r0]
    f8d4:	mov	r0, #0
    f8d8:	pop	{r4, r5, fp, pc}
    f8dc:	andeq	sl, r1, r8, ror r8
    f8e0:	andeq	sl, r1, ip, ror #16

0000f8e4 <pcapng_append_packet@@Base>:
    f8e4:	push	{r4, r5, fp, lr}
    f8e8:	add	fp, sp, #8
    f8ec:	mov	r4, r0
    f8f0:	mov	r0, #1
    f8f4:	cmp	r4, #0
    f8f8:	ldrne	r2, [r4]
    f8fc:	cmnne	r2, #1
    f900:	bne	f908 <pcapng_append_packet@@Base+0x24>
    f904:	pop	{r4, r5, fp, pc}
    f908:	ldr	r5, [r1, #4]
    f90c:	mov	r0, r2
    f910:	mov	r2, r5
    f914:	bl	4740 <write@plt>
    f918:	mov	r1, r0
    f91c:	mov	r0, #0
    f920:	cmn	r1, #1
    f924:	popeq	{r4, r5, fp, pc}
    f928:	ldr	r1, [r4, #4]
    f92c:	ldr	r2, [r1, #16]
    f930:	ldr	r3, [r1, #20]
    f934:	adds	r2, r2, r5
    f938:	str	r2, [r1, #16]
    f93c:	adc	r2, r3, #0
    f940:	str	r2, [r1, #20]
    f944:	pop	{r4, r5, fp, pc}

0000f948 <btbb_pcapng_create_file@@Base>:
    f948:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f94c:	add	fp, sp, #24
    f950:	sub	sp, sp, #288	; 0x120
    f954:	mov	r6, r0
    f958:	mov	r0, #28
    f95c:	mov	r8, r2
    f960:	mov	r7, r1
    f964:	bl	4638 <malloc@plt>
    f968:	cmp	r0, #0
    f96c:	mvneq	r0, #4
    f970:	subeq	sp, fp, #24
    f974:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    f978:	add	r9, sp, #16
    f97c:	mov	r4, r0
    f980:	mov	r1, #0
    f984:	movw	r2, #258	; 0x102
    f988:	mov	r5, #0
    f98c:	orr	r0, r9, #2
    f990:	bl	46f8 <memset@plt>
    f994:	mov	r0, #3
    f998:	cmp	r7, #0
    f99c:	strh	r0, [sp, #16]
    f9a0:	beq	f9d0 <btbb_pcapng_create_file@@Base+0x88>
    f9a4:	add	r5, r9, #4
    f9a8:	mov	r1, r7
    f9ac:	mov	r2, #256	; 0x100
    f9b0:	mov	r0, r5
    f9b4:	bl	4710 <strncpy@plt>
    f9b8:	mov	r0, #0
    f9bc:	strb	r0, [sp, #275]	; 0x113
    f9c0:	mov	r0, r5
    f9c4:	bl	468c <strlen@plt>
    f9c8:	mov	r5, r9
    f9cc:	strh	r0, [sp, #18]
    f9d0:	bl	46d4 <getpagesize@plt>
    f9d4:	mov	r3, r0
    f9d8:	mov	r1, #255	; 0xff
    f9dc:	mov	r0, #400	; 0x190
    f9e0:	str	r1, [sp]
    f9e4:	stmib	sp, {r0, r5}
    f9e8:	str	r3, [sp, #12]
    f9ec:	mov	r0, r4
    f9f0:	mov	r1, r6
    f9f4:	ldr	r2, [pc, #188]	; fab8 <btbb_pcapng_create_file@@Base+0x170>
    f9f8:	ldr	r2, [pc, r2]
    f9fc:	bl	45b4 <pcapng_create@plt>
    fa00:	mov	r6, r0
    fa04:	cmp	r0, #0
    fa08:	bne	fa58 <btbb_pcapng_create_file@@Base+0x110>
    fa0c:	cmp	r5, #0
    fa10:	ldrhne	r1, [r5]
    fa14:	cmpne	r1, #0
    fa18:	bne	fa6c <btbb_pcapng_create_file@@Base+0x124>
    fa1c:	ldr	r0, [pc, #152]	; fabc <btbb_pcapng_create_file@@Base+0x174>
    fa20:	sub	r1, fp, #36	; 0x24
    fa24:	add	r0, pc, r0
    fa28:	ldrb	r0, [r0, #4]
    fa2c:	strb	r0, [fp, #-32]	; 0xffffffe0
    fa30:	ldr	r0, [pc, #136]	; fac0 <btbb_pcapng_create_file@@Base+0x178>
    fa34:	ldr	r0, [pc, r0]
    fa38:	str	r0, [fp, #-36]	; 0xffffffdc
    fa3c:	mov	r0, r4
    fa40:	bl	453c <pcapng_append_interface_option@plt>
    fa44:	cmp	r0, #0
    fa48:	beq	faa8 <btbb_pcapng_create_file@@Base+0x160>
    fa4c:	mov	r6, r0
    fa50:	mov	r0, r4
    fa54:	bl	47b8 <pcapng_close@plt>
    fa58:	mov	r0, r4
    fa5c:	bl	4548 <free@plt>
    fa60:	rsb	r0, r6, #0
    fa64:	sub	sp, fp, #24
    fa68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fa6c:	movw	r0, #65532	; 0xfffc
    fa70:	movt	r0, #1
    fa74:	ldrh	r2, [r5, #2]
    fa78:	cmp	r2, #0
    fa7c:	beq	fa1c <btbb_pcapng_create_file@@Base+0xd4>
    fa80:	uxth	r1, r1
    fa84:	cmp	r1, #9
    fa88:	beq	faa8 <btbb_pcapng_create_file@@Base+0x160>
    fa8c:	add	r1, r2, #3
    fa90:	and	r1, r1, r0
    fa94:	add	r5, r5, r1
    fa98:	ldrh	r1, [r5, #4]!
    fa9c:	cmp	r1, #0
    faa0:	bne	fa74 <btbb_pcapng_create_file@@Base+0x12c>
    faa4:	b	fa1c <btbb_pcapng_create_file@@Base+0xd4>
    faa8:	str	r4, [r8]
    faac:	mov	r0, #0
    fab0:	sub	sp, fp, #24
    fab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fab8:	andeq	sl, r1, r4, lsr r7
    fabc:			; <UNDEFINED> instruction: 0x00008cb0
    fac0:	andeq	r8, r0, r0, lsr #25

0000fac4 <btbb_pcapng_append_packet@@Base>:
    fac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fac8:	add	fp, sp, #28
    facc:	sub	sp, sp, #476	; 0x1dc
    fad0:	ldr	r4, [fp, #24]
    fad4:	str	r0, [fp, #-488]	; 0xfffffe18
    fad8:	str	r3, [fp, #-496]	; 0xfffffe10
    fadc:	str	r2, [fp, #-492]	; 0xfffffe14
    fae0:	mov	r0, r4
    fae4:	bl	4680 <btbb_packet_get_payload_length@plt>
    fae8:	mov	r5, r0
    faec:	add	r0, r0, #7
    faf0:	bic	r0, r0, #7
    faf4:	sub	r1, sp, r0
    faf8:	mov	sp, r1
    fafc:	mov	r0, r4
    fb00:	str	r1, [fp, #-500]	; 0xfffffe0c
    fb04:	bl	44f4 <btbb_get_payload_packed@plt>
    fb08:	mov	r0, r4
    fb0c:	bl	4794 <btbb_packet_get_channel@plt>
    fb10:	mov	r7, r0
    fb14:	mov	r0, r4
    fb18:	bl	4560 <btbb_packet_get_ac_errors@plt>
    fb1c:	mov	r8, r0
    fb20:	mov	r0, r4
    fb24:	bl	46ec <btbb_packet_get_transport@plt>
    fb28:	mov	r9, r0
    fb2c:	mov	r0, r4
    fb30:	bl	4554 <btbb_packet_get_modulation@plt>
    fb34:	mov	sl, r0
    fb38:	mov	r0, r4
    fb3c:	bl	4728 <btbb_packet_get_lap@plt>
    fb40:	mov	r6, r0
    fb44:	mov	r0, r4
    fb48:	bl	46b0 <btbb_packet_get_header_packed@plt>
    fb4c:	mov	r1, #6
    fb50:	cmp	r5, #400	; 0x190
    fb54:	ldr	r3, [fp, #20]
    fb58:	sub	lr, fp, #256	; 0x100
    fb5c:	mov	r4, #3
    fb60:	str	r1, [fp, #-484]	; 0xfffffe1c
    fb64:	ldr	r1, [fp, #-496]	; 0xfffffe10
    fb68:	movge	r5, #400	; 0x190
    fb6c:	str	r1, [fp, #-472]	; 0xfffffe28
    fb70:	ldr	r1, [fp, #-492]	; 0xfffffe14
    fb74:	str	r1, [fp, #-468]	; 0xfffffe2c
    fb78:	add	r1, r5, #22
    fb7c:	str	r1, [fp, #-464]	; 0xfffffe30
    fb80:	str	r1, [fp, #-460]	; 0xfffffe34
    fb84:	mov	r1, #0
    fb88:	strb	r7, [fp, #-456]	; 0xfffffe38
    fb8c:	add	r7, r5, #61	; 0x3d
    fb90:	str	r1, [fp, #-476]	; 0xfffffe24
    fb94:	orr	r1, sl, r9, lsl #4
    fb98:	strb	r8, [fp, #-453]	; 0xfffffe3b
    fb9c:	sub	r8, lr, #194	; 0xc2
    fba0:	mov	r9, #0
    fba4:	strb	r1, [fp, #-452]	; 0xfffffe3c
    fba8:	ldr	r1, [fp, #16]
    fbac:	strb	r9, [fp, #-451]	; 0xfffffe3d
    fbb0:	strh	r9, [r8]
    fbb4:	str	r6, [fp, #-448]	; 0xfffffe40
    fbb8:	bic	r6, r7, #3
    fbbc:	str	r6, [fp, #-480]	; 0xfffffe20
    fbc0:	bic	r2, r1, #-16777216	; 0xff000000
    fbc4:	orr	r2, r2, r3, lsl #24
    fbc8:	str	r2, [fp, #-444]	; 0xfffffe44
    fbcc:	ldr	r2, [fp, #8]
    fbd0:	strb	r2, [fp, #-455]	; 0xfffffe39
    fbd4:	str	r0, [fp, #-440]	; 0xfffffe48
    fbd8:	ldr	r0, [fp, #12]
    fbdc:	cmp	r0, r2
    fbe0:	strb	r0, [fp, #-454]	; 0xfffffe3a
    fbe4:	movwlt	r4, #7
    fbe8:	cmn	r1, #1
    fbec:	orrne	r4, r4, #16
    fbf0:	cmp	r3, #255	; 0xff
    fbf4:	orrne	r4, r4, #128	; 0x80
    fbf8:	cmp	r5, #0
    fbfc:	strh	r4, [r8, #14]
    fc00:	beq	fc24 <btbb_pcapng_append_packet@@Base+0x160>
    fc04:	cmp	r5, #400	; 0x190
    fc08:	bhi	fc50 <btbb_pcapng_append_packet@@Base+0x18c>
    fc0c:	ldr	r1, [fp, #-500]	; 0xfffffe0c
    fc10:	sub	r0, fp, #484	; 0x1e4
    fc14:	mov	r2, r5
    fc18:	add	r0, r0, #50	; 0x32
    fc1c:	bl	456c <memcpy@plt>
    fc20:	orr	r4, r4, #32
    fc24:	lsr	r0, r7, #2
    fc28:	sub	r1, fp, #484	; 0x1e4
    fc2c:	strh	r4, [r8, #14]
    fc30:	add	r0, r1, r0, lsl #2
    fc34:	str	r9, [r0, #-8]
    fc38:	str	r6, [r0, #-4]
    fc3c:	ldr	r0, [fp, #-488]	; 0xfffffe18
    fc40:	bl	46e0 <pcapng_append_packet@plt>
    fc44:	rsb	r0, r0, #0
    fc48:	sub	sp, fp, #28
    fc4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fc50:	ldr	r0, [pc, #24]	; fc70 <btbb_pcapng_append_packet@@Base+0x1ac>
    fc54:	ldr	r1, [pc, #24]	; fc74 <btbb_pcapng_append_packet@@Base+0x1b0>
    fc58:	ldr	r3, [pc, #24]	; fc78 <btbb_pcapng_append_packet@@Base+0x1b4>
    fc5c:	mov	r2, #221	; 0xdd
    fc60:	add	r0, pc, r0
    fc64:	add	r1, pc, r1
    fc68:	add	r3, pc, r3
    fc6c:	bl	47e8 <__assert_fail@plt>
    fc70:	andeq	r8, r0, lr, lsl #17
    fc74:	andeq	r8, r0, r5, ror sl
    fc78:			; <UNDEFINED> instruction: 0x00008abe

0000fc7c <btbb_pcapng_record_bdaddr@@Base>:
    fc7c:	push	{fp, lr}
    fc80:	mov	fp, sp
    fc84:	sub	sp, sp, #16
    fc88:	movw	r1, #54080	; 0xd340
    fc8c:	strb	r2, [sp, #8]
    fc90:	movt	r1, #12
    fc94:	str	r1, [sp, #4]
    fc98:	lsr	r1, r2, #8
    fc9c:	strb	r3, [sp, #12]
    fca0:	strb	r1, [sp, #9]
    fca4:	lsr	r1, r2, #16
    fca8:	strb	r1, [sp, #10]
    fcac:	lsr	r1, r2, #24
    fcb0:	strb	r1, [sp, #11]
    fcb4:	lsr	r1, r3, #8
    fcb8:	strb	r1, [sp, #13]
    fcbc:	ldr	r1, [fp, #8]
    fcc0:	strb	r1, [sp, #14]
    fcc4:	ldr	r1, [fp, #12]
    fcc8:	strb	r1, [sp, #15]
    fccc:	add	r1, sp, #4
    fcd0:	bl	453c <pcapng_append_interface_option@plt>
    fcd4:	rsb	r0, r0, #0
    fcd8:	mov	sp, fp
    fcdc:	pop	{fp, pc}

0000fce0 <btbb_pcapng_record_btclock@@Base>:
    fce0:	push	{fp, lr}
    fce4:	mov	fp, sp
    fce8:	sub	sp, sp, #24
    fcec:	movw	r1, #54081	; 0xd341
    fcf0:	movt	r1, #24
    fcf4:	str	r1, [sp]
    fcf8:	ldr	r1, [fp, #12]
    fcfc:	str	r2, [sp, #12]
    fd00:	str	r1, [sp, #8]
    fd04:	ldr	r1, [fp, #8]
    fd08:	str	r1, [sp, #4]
    fd0c:	ldr	r1, [fp, #16]
    fd10:	str	r1, [sp, #16]
    fd14:	ldr	r1, [fp, #20]
    fd18:	str	r1, [sp, #20]
    fd1c:	mov	r1, sp
    fd20:	bl	453c <pcapng_append_interface_option@plt>
    fd24:	rsb	r0, r0, #0
    fd28:	mov	sp, fp
    fd2c:	pop	{fp, pc}

0000fd30 <btbb_pcapng_close@@Base>:
    fd30:	push	{r4, sl, fp, lr}
    fd34:	add	fp, sp, #8
    fd38:	mov	r4, r0
    fd3c:	bl	47b8 <pcapng_close@plt>
    fd40:	cmp	r4, #0
    fd44:	beq	fd50 <btbb_pcapng_close@@Base+0x20>
    fd48:	mov	r0, r4
    fd4c:	bl	4548 <free@plt>
    fd50:	mvn	r0, #0
    fd54:	pop	{r4, sl, fp, pc}

0000fd58 <lell_pcapng_create_file@@Base>:
    fd58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    fd5c:	add	fp, sp, #24
    fd60:	sub	sp, sp, #288	; 0x120
    fd64:	mov	r6, r0
    fd68:	mov	r0, #28
    fd6c:	mov	r8, r2
    fd70:	mov	r7, r1
    fd74:	bl	4638 <malloc@plt>
    fd78:	cmp	r0, #0
    fd7c:	mvneq	r0, #4
    fd80:	subeq	sp, fp, #24
    fd84:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    fd88:	add	r9, sp, #16
    fd8c:	mov	r4, r0
    fd90:	mov	r1, #0
    fd94:	movw	r2, #258	; 0x102
    fd98:	mov	r5, #0
    fd9c:	orr	r0, r9, #2
    fda0:	bl	46f8 <memset@plt>
    fda4:	mov	r0, #3
    fda8:	cmp	r7, #0
    fdac:	strh	r0, [sp, #16]
    fdb0:	beq	fde0 <lell_pcapng_create_file@@Base+0x88>
    fdb4:	add	r5, r9, #4
    fdb8:	mov	r1, r7
    fdbc:	mov	r2, #256	; 0x100
    fdc0:	mov	r0, r5
    fdc4:	bl	4710 <strncpy@plt>
    fdc8:	mov	r0, #0
    fdcc:	strb	r0, [sp, #275]	; 0x113
    fdd0:	mov	r0, r5
    fdd4:	bl	468c <strlen@plt>
    fdd8:	mov	r5, r9
    fddc:	strh	r0, [sp, #18]
    fde0:	bl	46d4 <getpagesize@plt>
    fde4:	mov	r3, r0
    fde8:	mov	r1, #256	; 0x100
    fdec:	mov	r0, #64	; 0x40
    fdf0:	str	r1, [sp]
    fdf4:	stmib	sp, {r0, r5}
    fdf8:	str	r3, [sp, #12]
    fdfc:	mov	r0, r4
    fe00:	mov	r1, r6
    fe04:	ldr	r2, [pc, #188]	; fec8 <lell_pcapng_create_file@@Base+0x170>
    fe08:	ldr	r2, [pc, r2]
    fe0c:	bl	45b4 <pcapng_create@plt>
    fe10:	mov	r6, r0
    fe14:	cmp	r0, #0
    fe18:	bne	fe68 <lell_pcapng_create_file@@Base+0x110>
    fe1c:	cmp	r5, #0
    fe20:	ldrhne	r1, [r5]
    fe24:	cmpne	r1, #0
    fe28:	bne	fe7c <lell_pcapng_create_file@@Base+0x124>
    fe2c:	ldr	r0, [pc, #152]	; fecc <lell_pcapng_create_file@@Base+0x174>
    fe30:	sub	r1, fp, #36	; 0x24
    fe34:	add	r0, pc, r0
    fe38:	ldrb	r0, [r0, #4]
    fe3c:	strb	r0, [fp, #-32]	; 0xffffffe0
    fe40:	ldr	r0, [pc, #136]	; fed0 <lell_pcapng_create_file@@Base+0x178>
    fe44:	ldr	r0, [pc, r0]
    fe48:	str	r0, [fp, #-36]	; 0xffffffdc
    fe4c:	mov	r0, r4
    fe50:	bl	453c <pcapng_append_interface_option@plt>
    fe54:	cmp	r0, #0
    fe58:	beq	feb8 <lell_pcapng_create_file@@Base+0x160>
    fe5c:	mov	r6, r0
    fe60:	mov	r0, r4
    fe64:	bl	47b8 <pcapng_close@plt>
    fe68:	mov	r0, r4
    fe6c:	bl	4548 <free@plt>
    fe70:	rsb	r0, r6, #0
    fe74:	sub	sp, fp, #24
    fe78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fe7c:	movw	r0, #65532	; 0xfffc
    fe80:	movt	r0, #1
    fe84:	ldrh	r2, [r5, #2]
    fe88:	cmp	r2, #0
    fe8c:	beq	fe2c <lell_pcapng_create_file@@Base+0xd4>
    fe90:	uxth	r1, r1
    fe94:	cmp	r1, #9
    fe98:	beq	feb8 <lell_pcapng_create_file@@Base+0x160>
    fe9c:	add	r1, r2, #3
    fea0:	and	r1, r1, r0
    fea4:	add	r5, r5, r1
    fea8:	ldrh	r1, [r5, #4]!
    feac:	cmp	r1, #0
    feb0:	bne	fe84 <lell_pcapng_create_file@@Base+0x12c>
    feb4:	b	fe2c <lell_pcapng_create_file@@Base+0xd4>
    feb8:	str	r4, [r8]
    febc:	mov	r0, #0
    fec0:	sub	sp, fp, #24
    fec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fec8:	andeq	sl, r1, r4, lsr #6
    fecc:	andeq	r8, r0, r0, lsr #17
    fed0:	muleq	r0, r0, r8

0000fed4 <lell_pcapng_append_packet@@Base>:
    fed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fed8:	add	fp, sp, #28
    fedc:	sub	sp, sp, #372	; 0x174
    fee0:	ldr	r5, [fp, #20]
    fee4:	str	r0, [sp, #12]
    fee8:	mov	r8, r3
    feec:	mov	sl, r2
    fef0:	mov	r0, r5
    fef4:	bl	4518 <lell_packet_is_data@plt>
    fef8:	ldr	r1, [r5, #72]	; 0x48
    fefc:	add	r2, r1, #9
    ff00:	cmp	r2, #256	; 0x100
    ff04:	bcs	10040 <lell_pcapng_append_packet@@Base+0x16c>
    ff08:	add	r3, r1, #19
    ff0c:	add	r1, r1, #58	; 0x3a
    ff10:	ldr	lr, [fp, #12]
    ff14:	ldr	ip, [fp, #16]
    ff18:	ldrb	r4, [r5, #69]	; 0x45
    ff1c:	mov	r9, #6
    ff20:	ldr	r7, [r5, #92]	; 0x5c
    ff24:	clz	r0, r0
    ff28:	str	r8, [sp, #4]
    ff2c:	bic	r6, r1, #3
    ff30:	lsr	r1, r1, #2
    ff34:	lsr	r0, r0, #5
    ff38:	str	r1, [sp, #8]
    ff3c:	ldr	r1, [fp, #8]
    ff40:	str	r6, [sp, #20]
    ff44:	str	r9, [sp, #16]
    ff48:	mov	r9, #0
    ff4c:	str	r9, [sp, #24]
    ff50:	str	r8, [sp, #28]
    ff54:	str	sl, [sp, #32]
    ff58:	str	r3, [sp, #36]	; 0x24
    ff5c:	str	r3, [sp, #40]	; 0x28
    ff60:	mov	r3, #35	; 0x23
    ff64:	mov	r8, sl
    ff68:	cmp	lr, r1
    ff6c:	strb	r1, [sp, #45]	; 0x2d
    ff70:	strb	lr, [sp, #46]	; 0x2e
    ff74:	str	ip, [sp, #48]	; 0x30
    ff78:	strb	r4, [sp, #44]	; 0x2c
    ff7c:	add	r4, sp, #16
    ff80:	strb	r7, [sp, #47]	; 0x2f
    ff84:	mov	r1, r5
    ff88:	movwlt	r3, #39	; 0x27
    ff8c:	orr	r0, r3, r0, lsl #4
    ff90:	strh	r0, [sp, #52]	; 0x34
    ff94:	add	r0, r4, #38	; 0x26
    ff98:	bl	456c <memcpy@plt>
    ff9c:	ldr	r0, [sp, #8]
    ffa0:	ldr	sl, [sp, #12]
    ffa4:	mov	r1, r4
    ffa8:	add	r0, r4, r0, lsl #2
    ffac:	str	r9, [r0, #-8]
    ffb0:	str	r6, [r0, #-4]
    ffb4:	mov	r0, sl
    ffb8:	bl	46e0 <pcapng_append_packet@plt>
    ffbc:	rsb	r4, r0, #0
    ffc0:	cmp	r0, #0
    ffc4:	bne	10034 <lell_pcapng_append_packet@@Base+0x160>
    ffc8:	mov	r0, r5
    ffcc:	mov	r6, r8
    ffd0:	bl	4518 <lell_packet_is_data@plt>
    ffd4:	cmp	r0, #0
    ffd8:	bne	10034 <lell_pcapng_append_packet@@Base+0x160>
    ffdc:	ldrb	r0, [r5, #80]	; 0x50
    ffe0:	cmp	r0, #5
    ffe4:	bne	10034 <lell_pcapng_append_packet@@Base+0x160>
    ffe8:	movw	r0, #54144	; 0xd380
    ffec:	str	r6, [fp, #-76]	; 0xffffffb4
    fff0:	mov	r2, #32
    fff4:	sub	r1, fp, #80	; 0x50
    fff8:	movt	r0, #46	; 0x2e
    fffc:	str	r0, [fp, #-80]	; 0xffffffb0
   10000:	ldr	r0, [sp, #4]
   10004:	str	r0, [fp, #-72]	; 0xffffffb8
   10008:	add	r0, r5, #16
   1000c:	vld1.8	{d16-d17}, [r0]
   10010:	vld1.8	{d18-d19}, [r5], r2
   10014:	add	r0, r1, #28
   10018:	vst1.32	{d16-d17}, [r0]
   1001c:	add	r0, r1, #12
   10020:	vst1.32	{d18-d19}, [r0]
   10024:	ldrh	r0, [r5]
   10028:	strh	r0, [fp, #-36]	; 0xffffffdc
   1002c:	mov	r0, sl
   10030:	bl	453c <pcapng_append_interface_option@plt>
   10034:	mov	r0, r4
   10038:	sub	sp, fp, #28
   1003c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10040:	ldr	r0, [pc, #24]	; 10060 <lell_pcapng_append_packet@@Base+0x18c>
   10044:	ldr	r1, [pc, #24]	; 10064 <lell_pcapng_append_packet@@Base+0x190>
   10048:	ldr	r3, [pc, #24]	; 10068 <lell_pcapng_append_packet@@Base+0x194>
   1004c:	movw	r2, #441	; 0x1b9
   10050:	add	r0, pc, r0
   10054:	add	r1, pc, r1
   10058:	add	r3, pc, r3
   1005c:	bl	47e8 <__assert_fail@plt>
   10060:	andeq	r8, r0, r2, lsl r8
   10064:	andeq	r8, r0, r5, lsl #13
   10068:	andeq	r8, r0, r3, lsr #16

0001006c <lell_pcapng_record_connect_req@@Base>:
   1006c:	push	{fp, lr}
   10070:	mov	fp, sp
   10074:	sub	sp, sp, #48	; 0x30
   10078:	stmib	sp, {r2, r3}
   1007c:	ldr	r2, [fp, #8]
   10080:	movw	r1, #54144	; 0xd380
   10084:	mov	ip, #32
   10088:	movt	r1, #46	; 0x2e
   1008c:	str	r1, [sp]
   10090:	mov	r1, sp
   10094:	add	r3, r1, #12
   10098:	add	lr, r2, #16
   1009c:	vld1.8	{d16-d17}, [r2], ip
   100a0:	vld1.8	{d18-d19}, [lr]
   100a4:	vst1.32	{d16-d17}, [r3]
   100a8:	add	r3, r1, #28
   100ac:	vst1.32	{d18-d19}, [r3]
   100b0:	ldrh	r2, [r2]
   100b4:	strh	r2, [sp, #44]	; 0x2c
   100b8:	bl	453c <pcapng_append_interface_option@plt>
   100bc:	rsb	r0, r0, #0
   100c0:	mov	sp, fp
   100c4:	pop	{fp, pc}

000100c8 <lell_pcapng_close@@Base>:
   100c8:	push	{r4, sl, fp, lr}
   100cc:	add	fp, sp, #8
   100d0:	mov	r4, r0
   100d4:	bl	47b8 <pcapng_close@plt>
   100d8:	cmp	r4, #0
   100dc:	beq	100e8 <lell_pcapng_close@@Base+0x20>
   100e0:	mov	r0, r4
   100e4:	bl	4548 <free@plt>
   100e8:	mvn	r0, #0
   100ec:	pop	{r4, sl, fp, pc}
   100f0:	cmp	r3, #0
   100f4:	cmpeq	r2, #0
   100f8:	bne	10110 <lell_pcapng_close@@Base+0x48>
   100fc:	cmp	r1, #0
   10100:	cmpeq	r0, #0
   10104:	mvnne	r1, #0
   10108:	mvnne	r0, #0
   1010c:	b	1012c <lell_pcapng_close@@Base+0x64>
   10110:	sub	sp, sp, #8
   10114:	push	{sp, lr}
   10118:	bl	1013c <lell_pcapng_close@@Base+0x74>
   1011c:	ldr	lr, [sp, #4]
   10120:	add	sp, sp, #8
   10124:	pop	{r2, r3}
   10128:	bx	lr
   1012c:	push	{r1, lr}
   10130:	mov	r0, #8
   10134:	bl	44d0 <raise@plt>
   10138:	pop	{r1, pc}
   1013c:	cmp	r1, r3
   10140:	cmpeq	r0, r2
   10144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10148:	mov	r4, r0
   1014c:	movcc	r0, #0
   10150:	mov	r5, r1
   10154:	ldr	lr, [sp, #36]	; 0x24
   10158:	movcc	r1, r0
   1015c:	bcc	10258 <lell_pcapng_close@@Base+0x190>
   10160:	cmp	r3, #0
   10164:	clzeq	ip, r2
   10168:	clzne	ip, r3
   1016c:	addeq	ip, ip, #32
   10170:	cmp	r5, #0
   10174:	clzeq	r1, r4
   10178:	addeq	r1, r1, #32
   1017c:	clzne	r1, r5
   10180:	sub	ip, ip, r1
   10184:	sub	sl, ip, #32
   10188:	lsl	r9, r3, ip
   1018c:	rsb	fp, ip, #32
   10190:	orr	r9, r9, r2, lsl sl
   10194:	orr	r9, r9, r2, lsr fp
   10198:	lsl	r8, r2, ip
   1019c:	cmp	r5, r9
   101a0:	cmpeq	r4, r8
   101a4:	movcc	r0, #0
   101a8:	movcc	r1, r0
   101ac:	bcc	101c8 <lell_pcapng_close@@Base+0x100>
   101b0:	mov	r0, #1
   101b4:	subs	r4, r4, r8
   101b8:	lsl	r1, r0, sl
   101bc:	orr	r1, r1, r0, lsr fp
   101c0:	lsl	r0, r0, ip
   101c4:	sbc	r5, r5, r9
   101c8:	cmp	ip, #0
   101cc:	beq	10258 <lell_pcapng_close@@Base+0x190>
   101d0:	lsr	r6, r8, #1
   101d4:	orr	r6, r6, r9, lsl #31
   101d8:	lsr	r7, r9, #1
   101dc:	mov	r2, ip
   101e0:	b	10204 <lell_pcapng_close@@Base+0x13c>
   101e4:	subs	r3, r4, r6
   101e8:	sbc	r8, r5, r7
   101ec:	adds	r3, r3, r3
   101f0:	adc	r8, r8, r8
   101f4:	adds	r4, r3, #1
   101f8:	adc	r5, r8, #0
   101fc:	subs	r2, r2, #1
   10200:	beq	10220 <lell_pcapng_close@@Base+0x158>
   10204:	cmp	r5, r7
   10208:	cmpeq	r4, r6
   1020c:	bcs	101e4 <lell_pcapng_close@@Base+0x11c>
   10210:	adds	r4, r4, r4
   10214:	adc	r5, r5, r5
   10218:	subs	r2, r2, #1
   1021c:	bne	10204 <lell_pcapng_close@@Base+0x13c>
   10220:	lsr	r3, r4, ip
   10224:	orr	r3, r3, r5, lsl fp
   10228:	lsr	r2, r5, ip
   1022c:	orr	r3, r3, r5, lsr sl
   10230:	adds	r0, r0, r4
   10234:	mov	r4, r3
   10238:	lsl	r3, r2, ip
   1023c:	orr	r3, r3, r4, lsl sl
   10240:	lsl	ip, r4, ip
   10244:	orr	r3, r3, r4, lsr fp
   10248:	adc	r1, r1, r5
   1024c:	subs	r0, r0, ip
   10250:	mov	r5, r2
   10254:	sbc	r1, r1, r3
   10258:	cmp	lr, #0
   1025c:	strdne	r4, [lr]
   10260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00010264 <.fini>:
   10264:	push	{r3, lr}
   10268:	pop	{r3, pc}
