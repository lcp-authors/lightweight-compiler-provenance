
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010acc <.init>:
   10acc:	push	{r3, lr}
   10ad0:	bl	10c5c <_start@@Base+0x3c>
   10ad4:	pop	{r3, pc}

Disassembly of section .plt:

00010ad8 <calloc@plt-0x14>:
   10ad8:	push	{lr}		; (str lr, [sp, #-4]!)
   10adc:	ldr	lr, [pc, #4]	; 10ae8 <calloc@plt-0x4>
   10ae0:	add	lr, pc, lr
   10ae4:	ldr	pc, [lr, #8]!
   10ae8:	andeq	r2, r1, r8, lsl r5

00010aec <calloc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1304]!	; 0x518

00010af8 <printf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1296]!	; 0x510

00010b04 <memmove@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1288]!	; 0x508

00010b10 <free@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1280]!	; 0x500

00010b1c <realloc@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b28 <puts@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b34 <malloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b40 <__libc_start_main@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b4c <__gmon_start__@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b58 <setvbuf@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b64 <putchar@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b70 <abort@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1216]!	; 0x4c0

Disassembly of section .text:

00010b7c <main@@Base>:
   10b7c:	ldr	r2, [pc, #140]	; 10c10 <main@@Base+0x94>
   10b80:	mov	r3, #0
   10b84:	push	{r4, lr}
   10b88:	mov	r1, r3
   10b8c:	ldr	r0, [r2]
   10b90:	mov	r2, #2
   10b94:	bl	10b58 <setvbuf@plt>
   10b98:	ldr	r2, [pc, #116]	; 10c14 <main@@Base+0x98>
   10b9c:	mov	r3, #0
   10ba0:	mov	r1, r3
   10ba4:	ldr	r0, [r2]
   10ba8:	mov	r2, #2
   10bac:	bl	10b58 <setvbuf@plt>
   10bb0:	bl	110f8 <teste_grafo_novo@@Base>
   10bb4:	mov	r4, r0
   10bb8:	bl	111dc <teste_grafo_aresta@@Base>
   10bbc:	add	r4, r4, r0
   10bc0:	bl	11380 <teste_grafo_adiciona@@Base>
   10bc4:	add	r4, r4, r0
   10bc8:	bl	11590 <teste_grafo_remove@@Base>
   10bcc:	add	r4, r4, r0
   10bd0:	bl	11738 <teste_v_sucessores@@Base>
   10bd4:	add	r4, r4, r0
   10bd8:	bl	11978 <teste_v_antecessores@@Base>
   10bdc:	add	r4, r4, r0
   10be0:	bl	11bb4 <teste_v_grau@@Base>
   10be4:	add	r4, r4, r0
   10be8:	bl	11d3c <teste_v_celebridade@@Base>
   10bec:	adds	r1, r4, r0
   10bf0:	beq	10c04 <main@@Base+0x88>
   10bf4:	ldr	r0, [pc, #28]	; 10c18 <main@@Base+0x9c>
   10bf8:	bl	10af8 <printf@plt>
   10bfc:	mov	r0, #0
   10c00:	pop	{r4, pc}
   10c04:	ldr	r0, [pc, #16]	; 10c1c <main@@Base+0xa0>
   10c08:	bl	10b28 <puts@plt>
   10c0c:	b	10bfc <main@@Base+0x80>
   10c10:	andeq	r3, r2, ip, asr #32
   10c14:	andeq	r3, r2, r8, asr #32
   10c18:	andeq	r2, r1, r0, ror #28
   10c1c:	andeq	r2, r1, r8, asr #28

00010c20 <_start@@Base>:
   10c20:	mov	fp, #0
   10c24:	mov	lr, #0
   10c28:	pop	{r1}		; (ldr r1, [sp], #4)
   10c2c:	mov	r2, sp
   10c30:	push	{r2}		; (str r2, [sp, #-4]!)
   10c34:	push	{r0}		; (str r0, [sp, #-4]!)
   10c38:	ldr	ip, [pc, #16]	; 10c50 <_start@@Base+0x30>
   10c3c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c40:	ldr	r0, [pc, #12]	; 10c54 <_start@@Base+0x34>
   10c44:	ldr	r3, [pc, #12]	; 10c58 <_start@@Base+0x38>
   10c48:	bl	10b40 <__libc_start_main@plt>
   10c4c:	bl	10b70 <abort@plt>
   10c50:	andeq	r2, r1, r4, ror #14
   10c54:	andeq	r0, r1, ip, ror fp
   10c58:	andeq	r2, r1, r4, lsl #14
   10c5c:	ldr	r3, [pc, #20]	; 10c78 <_start@@Base+0x58>
   10c60:	ldr	r2, [pc, #20]	; 10c7c <_start@@Base+0x5c>
   10c64:	add	r3, pc, r3
   10c68:	ldr	r2, [r3, r2]
   10c6c:	cmp	r2, #0
   10c70:	bxeq	lr
   10c74:	b	10b4c <__gmon_start__@plt>
   10c78:	muleq	r1, r4, r3
   10c7c:	andeq	r0, r0, ip, lsr r0
   10c80:	ldr	r3, [pc, #28]	; 10ca4 <_start@@Base+0x84>
   10c84:	ldr	r0, [pc, #28]	; 10ca8 <_start@@Base+0x88>
   10c88:	sub	r3, r3, r0
   10c8c:	cmp	r3, #6
   10c90:	bxls	lr
   10c94:	ldr	r3, [pc, #16]	; 10cac <_start@@Base+0x8c>
   10c98:	cmp	r3, #0
   10c9c:	bxeq	lr
   10ca0:	bx	r3
   10ca4:	andeq	r3, r2, fp, asr #32
   10ca8:	andeq	r3, r2, r8, asr #32
   10cac:	andeq	r0, r0, r0
   10cb0:	ldr	r1, [pc, #36]	; 10cdc <_start@@Base+0xbc>
   10cb4:	ldr	r0, [pc, #36]	; 10ce0 <_start@@Base+0xc0>
   10cb8:	sub	r1, r1, r0
   10cbc:	asr	r1, r1, #2
   10cc0:	add	r1, r1, r1, lsr #31
   10cc4:	asrs	r1, r1, #1
   10cc8:	bxeq	lr
   10ccc:	ldr	r3, [pc, #16]	; 10ce4 <_start@@Base+0xc4>
   10cd0:	cmp	r3, #0
   10cd4:	bxeq	lr
   10cd8:	bx	r3
   10cdc:	andeq	r3, r2, r8, asr #32
   10ce0:	andeq	r3, r2, r8, asr #32
   10ce4:	andeq	r0, r0, r0
   10ce8:	push	{r4, lr}
   10cec:	ldr	r4, [pc, #24]	; 10d0c <_start@@Base+0xec>
   10cf0:	ldrb	r3, [r4]
   10cf4:	cmp	r3, #0
   10cf8:	popne	{r4, pc}
   10cfc:	bl	10c80 <_start@@Base+0x60>
   10d00:	mov	r3, #1
   10d04:	strb	r3, [r4]
   10d08:	pop	{r4, pc}
   10d0c:	andeq	r3, r2, r0, asr r0
   10d10:	ldr	r0, [pc, #40]	; 10d40 <_start@@Base+0x120>
   10d14:	ldr	r3, [r0]
   10d18:	cmp	r3, #0
   10d1c:	bne	10d24 <_start@@Base+0x104>
   10d20:	b	10cb0 <_start@@Base+0x90>
   10d24:	ldr	r3, [pc, #24]	; 10d44 <_start@@Base+0x124>
   10d28:	cmp	r3, #0
   10d2c:	beq	10d20 <_start@@Base+0x100>
   10d30:	push	{r4, lr}
   10d34:	blx	r3
   10d38:	pop	{r4, lr}
   10d3c:	b	10cb0 <_start@@Base+0x90>
   10d40:	andeq	r2, r2, r4, lsl pc
   10d44:	andeq	r0, r0, r0
   10d48:	push	{r1, r2, r3}
   10d4c:	mov	r0, #8
   10d50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d54:	sub	sp, sp, #12
   10d58:	bl	10b34 <malloc@plt>
   10d5c:	add	r3, sp, #48	; 0x30
   10d60:	mov	r1, #8
   10d64:	mov	r7, r1
   10d68:	str	r3, [sp, #4]
   10d6c:	mov	r5, #2
   10d70:	mov	r6, #1
   10d74:	mov	r8, r0
   10d78:	mov	r0, #9
   10d7c:	bl	10aec <calloc@plt>
   10d80:	mov	r9, r0
   10d84:	str	r0, [r8, #4]
   10d88:	ldr	r2, [sp, #4]
   10d8c:	mov	r1, r7
   10d90:	mov	r3, r2
   10d94:	mov	r0, r6
   10d98:	ldr	r4, [r3], #8
   10d9c:	ldr	sl, [r2, #4]
   10da0:	str	r3, [sp, #4]
   10da4:	bl	10aec <calloc@plt>
   10da8:	add	r2, r9, r4, lsl #3
   10dac:	ldr	r3, [r9, r4, lsl #3]
   10db0:	ldr	r1, [r2, #4]
   10db4:	add	r3, r3, #1
   10db8:	subs	r5, r5, #1
   10dbc:	str	r0, [r2, #4]
   10dc0:	str	sl, [r0]
   10dc4:	str	r1, [r0, #4]
   10dc8:	str	r3, [r9, r4, lsl #3]
   10dcc:	bne	10d88 <_start@@Base+0x168>
   10dd0:	mov	r3, #9
   10dd4:	mov	r0, r8
   10dd8:	str	r3, [r8]
   10ddc:	add	sp, sp, #12
   10de0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10de4:	add	sp, sp, #12
   10de8:	bx	lr
   10dec:	push	{r1, r2, r3}
   10df0:	mov	r0, #8
   10df4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10df8:	sub	sp, sp, #12
   10dfc:	bl	10b34 <malloc@plt>
   10e00:	add	r3, sp, #48	; 0x30
   10e04:	mov	r1, #8
   10e08:	mov	r7, r1
   10e0c:	str	r3, [sp, #4]
   10e10:	mov	r5, #3
   10e14:	mov	r6, #1
   10e18:	mov	r8, r0
   10e1c:	mov	r0, #9
   10e20:	bl	10aec <calloc@plt>
   10e24:	mov	r9, r0
   10e28:	str	r0, [r8, #4]
   10e2c:	ldr	r2, [sp, #4]
   10e30:	mov	r1, r7
   10e34:	mov	r3, r2
   10e38:	mov	r0, r6
   10e3c:	ldr	r4, [r3], #8
   10e40:	ldr	sl, [r2, #4]
   10e44:	str	r3, [sp, #4]
   10e48:	bl	10aec <calloc@plt>
   10e4c:	add	r2, r9, r4, lsl #3
   10e50:	ldr	r3, [r9, r4, lsl #3]
   10e54:	ldr	r1, [r2, #4]
   10e58:	add	r3, r3, #1
   10e5c:	subs	r5, r5, #1
   10e60:	str	r0, [r2, #4]
   10e64:	str	sl, [r0]
   10e68:	str	r1, [r0, #4]
   10e6c:	str	r3, [r9, r4, lsl #3]
   10e70:	bne	10e2c <_start@@Base+0x20c>
   10e74:	mov	r3, #9
   10e78:	mov	r0, r8
   10e7c:	str	r3, [r8]
   10e80:	add	sp, sp, #12
   10e84:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e88:	add	sp, sp, #12
   10e8c:	bx	lr
   10e90:	push	{r1, r2, r3}
   10e94:	mov	r0, #8
   10e98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e9c:	sub	sp, sp, #12
   10ea0:	bl	10b34 <malloc@plt>
   10ea4:	mov	r1, #8
   10ea8:	add	r3, sp, #48	; 0x30
   10eac:	mov	r7, r1
   10eb0:	str	r3, [sp, #4]
   10eb4:	mov	r5, #11
   10eb8:	mov	r6, #1
   10ebc:	mov	r8, r0
   10ec0:	mov	r0, r1
   10ec4:	bl	10aec <calloc@plt>
   10ec8:	mov	r9, r0
   10ecc:	str	r0, [r8, #4]
   10ed0:	ldr	r2, [sp, #4]
   10ed4:	mov	r1, r7
   10ed8:	mov	r3, r2
   10edc:	mov	r0, r6
   10ee0:	ldr	r4, [r3], #8
   10ee4:	ldr	sl, [r2, #4]
   10ee8:	str	r3, [sp, #4]
   10eec:	bl	10aec <calloc@plt>
   10ef0:	add	r2, r9, r4, lsl #3
   10ef4:	ldr	r3, [r9, r4, lsl #3]
   10ef8:	ldr	r1, [r2, #4]
   10efc:	add	r3, r3, #1
   10f00:	subs	r5, r5, #1
   10f04:	str	r0, [r2, #4]
   10f08:	str	sl, [r0]
   10f0c:	str	r1, [r0, #4]
   10f10:	str	r3, [r9, r4, lsl #3]
   10f14:	bne	10ed0 <_start@@Base+0x2b0>
   10f18:	mov	r3, #8
   10f1c:	mov	r0, r8
   10f20:	str	r3, [r8]
   10f24:	add	sp, sp, #12
   10f28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f2c:	add	sp, sp, #12
   10f30:	bx	lr
   10f34:	push	{r1, r2, r3}
   10f38:	mov	r0, #8
   10f3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f40:	sub	sp, sp, #12
   10f44:	bl	10b34 <malloc@plt>
   10f48:	mov	r1, #8
   10f4c:	add	r3, sp, #48	; 0x30
   10f50:	mov	r7, r1
   10f54:	str	r3, [sp, #4]
   10f58:	mov	r5, #15
   10f5c:	mov	r6, #1
   10f60:	mov	r8, r0
   10f64:	mov	r0, r1
   10f68:	bl	10aec <calloc@plt>
   10f6c:	mov	r9, r0
   10f70:	str	r0, [r8, #4]
   10f74:	ldr	r2, [sp, #4]
   10f78:	mov	r1, r7
   10f7c:	mov	r3, r2
   10f80:	mov	r0, r6
   10f84:	ldr	r4, [r3], #8
   10f88:	ldr	sl, [r2, #4]
   10f8c:	str	r3, [sp, #4]
   10f90:	bl	10aec <calloc@plt>
   10f94:	add	r2, r9, r4, lsl #3
   10f98:	ldr	r3, [r9, r4, lsl #3]
   10f9c:	ldr	r1, [r2, #4]
   10fa0:	add	r3, r3, #1
   10fa4:	subs	r5, r5, #1
   10fa8:	str	r0, [r2, #4]
   10fac:	str	sl, [r0]
   10fb0:	str	r1, [r0, #4]
   10fb4:	str	r3, [r9, r4, lsl #3]
   10fb8:	bne	10f74 <_start@@Base+0x354>
   10fbc:	mov	r3, #8
   10fc0:	mov	r0, r8
   10fc4:	str	r3, [r8]
   10fc8:	add	sp, sp, #12
   10fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fd0:	add	sp, sp, #12
   10fd4:	bx	lr

00010fd8 <_g@@Base>:
   10fd8:	push	{r1, r2, r3}
   10fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fe0:	sub	sp, sp, #16
   10fe4:	mov	r4, r0
   10fe8:	str	r0, [sp, #4]
   10fec:	mov	r0, #8
   10ff0:	ldr	r6, [sp, #52]	; 0x34
   10ff4:	bl	10b34 <malloc@plt>
   10ff8:	add	r3, sp, #56	; 0x38
   10ffc:	mov	r1, #8
   11000:	str	r3, [sp, #12]
   11004:	mov	r9, r0
   11008:	mov	r0, r4
   1100c:	bl	10aec <calloc@plt>
   11010:	cmp	r6, #0
   11014:	str	r0, [r9, #4]
   11018:	ble	11084 <_g@@Base+0xac>
   1101c:	sub	r6, r6, #1
   11020:	bic	r6, r6, #1
   11024:	mov	r5, r0
   11028:	add	r6, r6, #2
   1102c:	mov	fp, #0
   11030:	mov	r8, #8
   11034:	mov	r7, #1
   11038:	ldr	r2, [sp, #12]
   1103c:	mov	r1, r8
   11040:	mov	r3, r2
   11044:	mov	r0, r7
   11048:	ldr	r4, [r3], #8
   1104c:	ldr	sl, [r2, #4]
   11050:	str	r3, [sp, #12]
   11054:	bl	10aec <calloc@plt>
   11058:	add	r1, r5, r4, lsl #3
   1105c:	ldr	r3, [r5, r4, lsl #3]
   11060:	ldr	ip, [r1, #4]
   11064:	add	fp, fp, #2
   11068:	add	r3, r3, #1
   1106c:	cmp	fp, r6
   11070:	str	r0, [r1, #4]
   11074:	str	sl, [r0]
   11078:	str	ip, [r0, #4]
   1107c:	str	r3, [r5, r4, lsl #3]
   11080:	bne	11038 <_g@@Base+0x60>
   11084:	ldr	r3, [sp, #4]
   11088:	mov	r0, r9
   1108c:	str	r3, [r9]
   11090:	add	sp, sp, #16
   11094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11098:	add	sp, sp, #12
   1109c:	bx	lr

000110a0 <_f@@Base>:
   110a0:	push	{r4, r5, r6, lr}
   110a4:	subs	r5, r0, #0
   110a8:	beq	110f0 <_f@@Base+0x50>
   110ac:	ldr	r3, [r5]
   110b0:	cmp	r3, #0
   110b4:	ble	110f0 <_f@@Base+0x50>
   110b8:	mov	r6, r1
   110bc:	mov	r4, #0
   110c0:	b	110d0 <_f@@Base+0x30>
   110c4:	ldr	r3, [r5]
   110c8:	cmp	r3, r4
   110cc:	ble	110f0 <_f@@Base+0x50>
   110d0:	mov	r1, r4
   110d4:	mov	r0, r5
   110d8:	bl	124c0 <vetor_elemento@@Base>
   110dc:	add	r4, r4, #1
   110e0:	cmp	r0, r6
   110e4:	bne	110c4 <_f@@Base+0x24>
   110e8:	mov	r0, #1
   110ec:	pop	{r4, r5, r6, pc}
   110f0:	mov	r0, #0
   110f4:	pop	{r4, r5, r6, pc}

000110f8 <teste_grafo_novo@@Base>:
   110f8:	push	{r4, r5, r6, lr}
   110fc:	ldr	r0, [pc, #196]	; 111c8 <teste_grafo_novo@@Base+0xd0>
   11100:	bl	10af8 <printf@plt>
   11104:	mov	r0, #10
   11108:	bl	11ebc <grafo_novo@@Base>
   1110c:	subs	r4, r0, #0
   11110:	beq	111a4 <teste_grafo_novo@@Base+0xac>
   11114:	ldr	r3, [r4]
   11118:	cmp	r3, #10
   1111c:	moveq	r5, #1
   11120:	moveq	r6, #0
   11124:	beq	11138 <teste_grafo_novo@@Base+0x40>
   11128:	ldr	r0, [pc, #156]	; 111cc <teste_grafo_novo@@Base+0xd4>
   1112c:	bl	10af8 <printf@plt>
   11130:	mov	r5, #2
   11134:	mov	r6, #1
   11138:	mov	r0, r4
   1113c:	bl	11f18 <grafo_apaga@@Base>
   11140:	mov	r0, #1
   11144:	bl	11ebc <grafo_novo@@Base>
   11148:	subs	r4, r0, #0
   1114c:	beq	111bc <teste_grafo_novo@@Base+0xc4>
   11150:	ldr	r3, [r4]
   11154:	cmp	r3, #1
   11158:	beq	1117c <teste_grafo_novo@@Base+0x84>
   1115c:	ldr	r0, [pc, #108]	; 111d0 <teste_grafo_novo@@Base+0xd8>
   11160:	bl	10af8 <printf@plt>
   11164:	mov	r0, r4
   11168:	bl	11f18 <grafo_apaga@@Base>
   1116c:	mov	r0, #10
   11170:	bl	10b64 <putchar@plt>
   11174:	mov	r0, r5
   11178:	pop	{r4, r5, r6, pc}
   1117c:	bl	11f18 <grafo_apaga@@Base>
   11180:	cmp	r6, #0
   11184:	bne	1119c <teste_grafo_novo@@Base+0xa4>
   11188:	mov	r5, r6
   1118c:	ldr	r0, [pc, #64]	; 111d4 <teste_grafo_novo@@Base+0xdc>
   11190:	bl	10b28 <puts@plt>
   11194:	mov	r0, r5
   11198:	pop	{r4, r5, r6, pc}
   1119c:	mov	r5, r6
   111a0:	b	1116c <teste_grafo_novo@@Base+0x74>
   111a4:	ldr	r0, [pc, #44]	; 111d8 <teste_grafo_novo@@Base+0xe0>
   111a8:	bl	10af8 <printf@plt>
   111ac:	mov	r0, #10
   111b0:	bl	10b64 <putchar@plt>
   111b4:	mov	r5, #1
   111b8:	b	11174 <teste_grafo_novo@@Base+0x7c>
   111bc:	ldr	r0, [pc, #20]	; 111d8 <teste_grafo_novo@@Base+0xe0>
   111c0:	bl	10af8 <printf@plt>
   111c4:	b	1116c <teste_grafo_novo@@Base+0x74>
   111c8:	andeq	r2, r1, r4, ror r7
   111cc:	muleq	r1, ip, r7
   111d0:	andeq	r2, r1, r0, asr #15
   111d4:	andeq	r2, r1, r4, ror #15
   111d8:	andeq	r2, r1, r4, lsl #15

000111dc <teste_grafo_aresta@@Base>:
   111dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   111e0:	sub	sp, sp, #84	; 0x54
   111e4:	mov	ip, #7
   111e8:	mov	r5, #4
   111ec:	mov	r8, #0
   111f0:	mov	r0, #6
   111f4:	mov	r1, #3
   111f8:	mov	r9, #5
   111fc:	mov	r7, #2
   11200:	mov	r4, #1
   11204:	mov	r2, r1
   11208:	str	ip, [sp, #16]
   1120c:	str	ip, [sp]
   11210:	mov	r3, r7
   11214:	str	r0, [sp, #44]	; 0x2c
   11218:	str	r5, [sp, #40]	; 0x28
   1121c:	str	r5, [sp, #32]
   11220:	str	r5, [sp, #28]
   11224:	str	r1, [sp, #68]	; 0x44
   11228:	str	r0, [sp, #64]	; 0x40
   1122c:	mov	r1, #22
   11230:	str	r0, [sp, #60]	; 0x3c
   11234:	str	r8, [sp, #36]	; 0x24
   11238:	str	r8, [sp, #8]
   1123c:	str	r9, [sp, #24]
   11240:	str	r9, [sp, #20]
   11244:	str	r7, [sp, #12]
   11248:	str	r7, [sp, #4]
   1124c:	mov	r0, #8
   11250:	str	ip, [sp, #56]	; 0x38
   11254:	str	r4, [sp, #76]	; 0x4c
   11258:	str	r4, [sp, #52]	; 0x34
   1125c:	str	r4, [sp, #48]	; 0x30
   11260:	str	r8, [sp, #72]	; 0x48
   11264:	bl	10e90 <_start@@Base+0x270>
   11268:	mov	r6, r0
   1126c:	ldr	r0, [pc, #248]	; 1136c <teste_grafo_aresta@@Base+0x190>
   11270:	bl	10af8 <printf@plt>
   11274:	mov	r2, r5
   11278:	mov	r1, r9
   1127c:	mov	r0, r6
   11280:	bl	11f78 <grafo_aresta@@Base>
   11284:	cmp	r0, r4
   11288:	moveq	r5, r0
   1128c:	moveq	r4, r8
   11290:	beq	112a0 <teste_grafo_aresta@@Base+0xc4>
   11294:	ldr	r0, [pc, #212]	; 11370 <teste_grafo_aresta@@Base+0x194>
   11298:	mov	r5, r7
   1129c:	bl	10af8 <printf@plt>
   112a0:	mov	r2, #6
   112a4:	mov	r1, #7
   112a8:	mov	r0, r6
   112ac:	bl	11f78 <grafo_aresta@@Base>
   112b0:	cmp	r0, #1
   112b4:	beq	112c4 <teste_grafo_aresta@@Base+0xe8>
   112b8:	ldr	r0, [pc, #176]	; 11370 <teste_grafo_aresta@@Base+0x194>
   112bc:	bl	10af8 <printf@plt>
   112c0:	mov	r4, r5
   112c4:	mov	r2, #1
   112c8:	mov	r1, #7
   112cc:	mov	r0, r6
   112d0:	bl	11f78 <grafo_aresta@@Base>
   112d4:	cmp	r0, #0
   112d8:	bne	1133c <teste_grafo_aresta@@Base+0x160>
   112dc:	mov	r2, #7
   112e0:	mov	r1, #2
   112e4:	bl	11f78 <grafo_aresta@@Base>
   112e8:	cmn	r0, #1
   112ec:	beq	11318 <teste_grafo_aresta@@Base+0x13c>
   112f0:	ldr	r0, [pc, #124]	; 11374 <teste_grafo_aresta@@Base+0x198>
   112f4:	bl	10af8 <printf@plt>
   112f8:	mov	r0, r6
   112fc:	add	r4, r4, #1
   11300:	bl	11f18 <grafo_apaga@@Base>
   11304:	mov	r0, #10
   11308:	bl	10b64 <putchar@plt>
   1130c:	mov	r0, r4
   11310:	add	sp, sp, #84	; 0x54
   11314:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11318:	mov	r0, r6
   1131c:	bl	11f18 <grafo_apaga@@Base>
   11320:	cmp	r4, #0
   11324:	bne	11304 <teste_grafo_aresta@@Base+0x128>
   11328:	ldr	r0, [pc, #72]	; 11378 <teste_grafo_aresta@@Base+0x19c>
   1132c:	bl	10b28 <puts@plt>
   11330:	mov	r0, r4
   11334:	add	sp, sp, #84	; 0x54
   11338:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1133c:	ldr	r0, [pc, #56]	; 1137c <teste_grafo_aresta@@Base+0x1a0>
   11340:	bl	10af8 <printf@plt>
   11344:	mov	r2, #7
   11348:	mov	r1, #2
   1134c:	mov	r0, #0
   11350:	bl	11f78 <grafo_aresta@@Base>
   11354:	add	r4, r4, #1
   11358:	cmn	r0, #1
   1135c:	bne	112f0 <teste_grafo_aresta@@Base+0x114>
   11360:	mov	r0, r6
   11364:	bl	11f18 <grafo_apaga@@Base>
   11368:	b	11304 <teste_grafo_aresta@@Base+0x128>
   1136c:	andeq	r2, r1, r8, ror #15
   11370:	strdeq	r2, [r1], -ip
   11374:	andeq	r2, r1, r0, ror r8
   11378:	andeq	r2, r1, r4, ror #15
   1137c:	andeq	r2, r1, r4, lsr r8

00011380 <teste_grafo_adiciona@@Base>:
   11380:	push	{r4, r5, r6, lr}
   11384:	sub	sp, sp, #8
   11388:	mov	r6, #2
   1138c:	mov	r4, #7
   11390:	mov	r3, r6
   11394:	mov	r2, #3
   11398:	mov	r1, #4
   1139c:	str	r4, [sp]
   113a0:	str	r6, [sp, #4]
   113a4:	mov	r0, #9
   113a8:	bl	10d48 <_start@@Base+0x128>
   113ac:	mov	r5, r0
   113b0:	ldr	r0, [pc, #440]	; 11570 <teste_grafo_adiciona@@Base+0x1f0>
   113b4:	bl	10af8 <printf@plt>
   113b8:	mov	r2, r4
   113bc:	mov	r1, r6
   113c0:	mov	r0, r5
   113c4:	bl	11fe0 <grafo_adiciona@@Base>
   113c8:	cmp	r0, #1
   113cc:	moveq	r4, r0
   113d0:	moveq	r2, #0
   113d4:	beq	113e8 <teste_grafo_adiciona@@Base+0x68>
   113d8:	ldr	r0, [pc, #404]	; 11574 <teste_grafo_adiciona@@Base+0x1f4>
   113dc:	bl	10af8 <printf@plt>
   113e0:	mov	r4, r6
   113e4:	mov	r2, #1
   113e8:	ldr	r3, [r5, #4]
   113ec:	ldr	r3, [r3, #20]
   113f0:	cmp	r3, #0
   113f4:	beq	11408 <teste_grafo_adiciona@@Base+0x88>
   113f8:	ldr	r3, [r3]
   113fc:	cmp	r3, #7
   11400:	moveq	r4, r2
   11404:	beq	11410 <teste_grafo_adiciona@@Base+0x90>
   11408:	ldr	r0, [pc, #360]	; 11578 <teste_grafo_adiciona@@Base+0x1f8>
   1140c:	bl	10af8 <printf@plt>
   11410:	mov	r2, #8
   11414:	mov	r1, #3
   11418:	mov	r0, r5
   1141c:	bl	11fe0 <grafo_adiciona@@Base>
   11420:	cmp	r0, #1
   11424:	beq	11434 <teste_grafo_adiciona@@Base+0xb4>
   11428:	ldr	r0, [pc, #324]	; 11574 <teste_grafo_adiciona@@Base+0x1f4>
   1142c:	bl	10af8 <printf@plt>
   11430:	add	r4, r4, #1
   11434:	ldr	r3, [r5, #4]
   11438:	ldr	r3, [r3, #28]
   1143c:	cmp	r3, #0
   11440:	beq	1145c <teste_grafo_adiciona@@Base+0xdc>
   11444:	ldr	r2, [r3, #4]
   11448:	cmp	r2, #0
   1144c:	beq	1145c <teste_grafo_adiciona@@Base+0xdc>
   11450:	ldr	r1, [r2, #4]
   11454:	cmp	r1, #0
   11458:	beq	1153c <teste_grafo_adiciona@@Base+0x1bc>
   1145c:	ldr	r0, [pc, #280]	; 1157c <teste_grafo_adiciona@@Base+0x1fc>
   11460:	bl	10af8 <printf@plt>
   11464:	add	r4, r4, #1
   11468:	mov	r2, #7
   1146c:	mov	r1, #2
   11470:	mov	r0, r5
   11474:	bl	11fe0 <grafo_adiciona@@Base>
   11478:	cmp	r0, #0
   1147c:	bne	1152c <teste_grafo_adiciona@@Base+0x1ac>
   11480:	mov	r2, #7
   11484:	mov	r1, #22
   11488:	mov	r0, r5
   1148c:	bl	11fe0 <grafo_adiciona@@Base>
   11490:	cmn	r0, #1
   11494:	beq	114f0 <teste_grafo_adiciona@@Base+0x170>
   11498:	ldr	r0, [pc, #224]	; 11580 <teste_grafo_adiciona@@Base+0x200>
   1149c:	bl	10af8 <printf@plt>
   114a0:	mov	r2, #7
   114a4:	mov	r1, #2
   114a8:	mov	r0, #0
   114ac:	bl	11fe0 <grafo_adiciona@@Base>
   114b0:	add	r4, r4, #1
   114b4:	cmn	r0, #1
   114b8:	beq	114e4 <teste_grafo_adiciona@@Base+0x164>
   114bc:	ldr	r0, [pc, #192]	; 11584 <teste_grafo_adiciona@@Base+0x204>
   114c0:	bl	10af8 <printf@plt>
   114c4:	mov	r0, r5
   114c8:	add	r4, r4, #1
   114cc:	bl	11f18 <grafo_apaga@@Base>
   114d0:	mov	r0, #10
   114d4:	bl	10b64 <putchar@plt>
   114d8:	mov	r0, r4
   114dc:	add	sp, sp, #8
   114e0:	pop	{r4, r5, r6, pc}
   114e4:	mov	r0, r5
   114e8:	bl	11f18 <grafo_apaga@@Base>
   114ec:	b	114d0 <teste_grafo_adiciona@@Base+0x150>
   114f0:	mov	r2, #7
   114f4:	mov	r1, #2
   114f8:	mov	r0, #0
   114fc:	bl	11fe0 <grafo_adiciona@@Base>
   11500:	cmn	r0, #1
   11504:	bne	114bc <teste_grafo_adiciona@@Base+0x13c>
   11508:	mov	r0, r5
   1150c:	bl	11f18 <grafo_apaga@@Base>
   11510:	cmp	r4, #0
   11514:	bne	114d0 <teste_grafo_adiciona@@Base+0x150>
   11518:	ldr	r0, [pc, #104]	; 11588 <teste_grafo_adiciona@@Base+0x208>
   1151c:	bl	10b28 <puts@plt>
   11520:	mov	r0, r4
   11524:	add	sp, sp, #8
   11528:	pop	{r4, r5, r6, pc}
   1152c:	ldr	r0, [pc, #88]	; 1158c <teste_grafo_adiciona@@Base+0x20c>
   11530:	bl	10af8 <printf@plt>
   11534:	add	r4, r4, #1
   11538:	b	11480 <teste_grafo_adiciona@@Base+0x100>
   1153c:	ldr	r3, [r3]
   11540:	cmp	r3, #2
   11544:	beq	11560 <teste_grafo_adiciona@@Base+0x1e0>
   11548:	cmp	r3, #8
   1154c:	bne	1145c <teste_grafo_adiciona@@Base+0xdc>
   11550:	ldr	r3, [r2]
   11554:	cmp	r3, #2
   11558:	bne	1145c <teste_grafo_adiciona@@Base+0xdc>
   1155c:	b	11468 <teste_grafo_adiciona@@Base+0xe8>
   11560:	ldr	r3, [r2]
   11564:	cmp	r3, #8
   11568:	bne	1145c <teste_grafo_adiciona@@Base+0xdc>
   1156c:	b	11468 <teste_grafo_adiciona@@Base+0xe8>
   11570:	andeq	r2, r1, r8, lsr #17
   11574:			; <UNDEFINED> instruction: 0x000128bc
   11578:	strdeq	r2, [r1], -r8
   1157c:	andeq	r2, r1, r8, lsr #18
   11580:	muleq	r1, ip, r9
   11584:	ldrdeq	r2, [r1], -r4
   11588:	andeq	r2, r1, r4, ror #15
   1158c:	andeq	r2, r1, r4, ror #18

00011590 <teste_grafo_remove@@Base>:
   11590:	push	{r4, r5, r6, r7, lr}
   11594:	mov	r5, #7
   11598:	sub	sp, sp, #20
   1159c:	mov	r7, #2
   115a0:	mov	r6, #1
   115a4:	mov	r3, r7
   115a8:	mov	r2, #3
   115ac:	mov	r1, #6
   115b0:	str	r6, [sp, #12]
   115b4:	str	r5, [sp, #8]
   115b8:	stm	sp, {r5, r7}
   115bc:	mov	r0, #9
   115c0:	bl	10dec <_start@@Base+0x1cc>
   115c4:	mov	r4, r0
   115c8:	ldr	r0, [pc, #336]	; 11720 <teste_grafo_remove@@Base+0x190>
   115cc:	bl	10af8 <printf@plt>
   115d0:	mov	r2, r6
   115d4:	mov	r1, r5
   115d8:	mov	r0, r4
   115dc:	bl	1208c <grafo_remove@@Base>
   115e0:	cmp	r0, r6
   115e4:	moveq	r5, r0
   115e8:	moveq	r6, #0
   115ec:	beq	115fc <teste_grafo_remove@@Base+0x6c>
   115f0:	ldr	r0, [pc, #300]	; 11724 <teste_grafo_remove@@Base+0x194>
   115f4:	mov	r5, r7
   115f8:	bl	10af8 <printf@plt>
   115fc:	ldr	r3, [r4, #4]
   11600:	ldr	r3, [r3, #60]	; 0x3c
   11604:	cmp	r3, #0
   11608:	beq	11618 <teste_grafo_remove@@Base+0x88>
   1160c:	ldr	r2, [r3, #4]
   11610:	cmp	r2, #0
   11614:	beq	1170c <teste_grafo_remove@@Base+0x17c>
   11618:	ldr	r0, [pc, #264]	; 11728 <teste_grafo_remove@@Base+0x198>
   1161c:	bl	10af8 <printf@plt>
   11620:	mov	r2, #2
   11624:	mov	r1, #7
   11628:	mov	r0, r4
   1162c:	bl	1208c <grafo_remove@@Base>
   11630:	cmp	r0, #1
   11634:	beq	11644 <teste_grafo_remove@@Base+0xb4>
   11638:	ldr	r0, [pc, #228]	; 11724 <teste_grafo_remove@@Base+0x194>
   1163c:	bl	10af8 <printf@plt>
   11640:	add	r5, r5, #1
   11644:	ldr	r3, [r4, #4]
   11648:	ldr	r3, [r3, #60]	; 0x3c
   1164c:	cmp	r3, #0
   11650:	beq	11660 <teste_grafo_remove@@Base+0xd0>
   11654:	ldr	r0, [pc, #204]	; 11728 <teste_grafo_remove@@Base+0x198>
   11658:	bl	10af8 <printf@plt>
   1165c:	add	r5, r5, #1
   11660:	mov	r2, #0
   11664:	mov	r1, #4
   11668:	mov	r0, r4
   1166c:	bl	1208c <grafo_remove@@Base>
   11670:	cmp	r0, #0
   11674:	bne	116dc <teste_grafo_remove@@Base+0x14c>
   11678:	mov	r2, #22
   1167c:	mov	r1, #7
   11680:	mov	r0, r4
   11684:	bl	1208c <grafo_remove@@Base>
   11688:	cmn	r0, #1
   1168c:	beq	116b8 <teste_grafo_remove@@Base+0x128>
   11690:	ldr	r0, [pc, #148]	; 1172c <teste_grafo_remove@@Base+0x19c>
   11694:	bl	10af8 <printf@plt>
   11698:	mov	r0, r4
   1169c:	add	r5, r5, #1
   116a0:	bl	11f18 <grafo_apaga@@Base>
   116a4:	mov	r0, #10
   116a8:	bl	10b64 <putchar@plt>
   116ac:	mov	r0, r5
   116b0:	add	sp, sp, #20
   116b4:	pop	{r4, r5, r6, r7, pc}
   116b8:	mov	r0, r4
   116bc:	bl	11f18 <grafo_apaga@@Base>
   116c0:	cmp	r5, #0
   116c4:	bne	116a4 <teste_grafo_remove@@Base+0x114>
   116c8:	ldr	r0, [pc, #96]	; 11730 <teste_grafo_remove@@Base+0x1a0>
   116cc:	bl	10b28 <puts@plt>
   116d0:	mov	r0, r5
   116d4:	add	sp, sp, #20
   116d8:	pop	{r4, r5, r6, r7, pc}
   116dc:	ldr	r0, [pc, #80]	; 11734 <teste_grafo_remove@@Base+0x1a4>
   116e0:	bl	10af8 <printf@plt>
   116e4:	mov	r2, #22
   116e8:	mov	r1, #7
   116ec:	mov	r0, r4
   116f0:	bl	1208c <grafo_remove@@Base>
   116f4:	add	r5, r5, #1
   116f8:	cmn	r0, #1
   116fc:	bne	11690 <teste_grafo_remove@@Base+0x100>
   11700:	mov	r0, r4
   11704:	bl	11f18 <grafo_apaga@@Base>
   11708:	b	116a4 <teste_grafo_remove@@Base+0x114>
   1170c:	ldr	r3, [r3]
   11710:	cmp	r3, #2
   11714:	moveq	r5, r6
   11718:	bne	11618 <teste_grafo_remove@@Base+0x88>
   1171c:	b	11620 <teste_grafo_remove@@Base+0x90>
   11720:	andeq	r2, r1, ip, lsl #20
   11724:	andeq	r2, r1, r0, lsr #20
   11728:	andeq	r2, r1, ip, asr sl
   1172c:	ldrdeq	r2, [r1], -r4
   11730:	andeq	r2, r1, r4, ror #15
   11734:	muleq	r1, r8, sl

00011738 <teste_v_sucessores@@Base>:
   11738:	push	{r4, r5, r6, r7, r8, lr}
   1173c:	sub	sp, sp, #80	; 0x50
   11740:	mov	r5, #7
   11744:	mov	r3, #4
   11748:	mov	r7, #0
   1174c:	mov	r0, #3
   11750:	mov	r1, #5
   11754:	mov	r8, #2
   11758:	mov	ip, #6
   1175c:	mov	r2, r0
   11760:	mov	r4, #1
   11764:	str	r5, [sp, #16]
   11768:	str	r5, [sp]
   1176c:	str	r3, [sp, #40]	; 0x28
   11770:	str	r3, [sp, #32]
   11774:	str	r3, [sp, #28]
   11778:	str	r1, [sp, #24]
   1177c:	mov	r3, r8
   11780:	str	r1, [sp, #20]
   11784:	str	r0, [sp, #68]	; 0x44
   11788:	mov	r1, #22
   1178c:	str	r7, [sp, #36]	; 0x24
   11790:	str	r7, [sp, #8]
   11794:	str	r8, [sp, #12]
   11798:	str	r8, [sp, #4]
   1179c:	mov	r0, #8
   117a0:	str	ip, [sp, #44]	; 0x2c
   117a4:	str	ip, [sp, #64]	; 0x40
   117a8:	str	ip, [sp, #60]	; 0x3c
   117ac:	str	r5, [sp, #56]	; 0x38
   117b0:	str	r7, [sp, #72]	; 0x48
   117b4:	str	r4, [sp, #76]	; 0x4c
   117b8:	str	r4, [sp, #52]	; 0x34
   117bc:	str	r4, [sp, #48]	; 0x30
   117c0:	bl	10e90 <_start@@Base+0x270>
   117c4:	mov	r6, r0
   117c8:	ldr	r0, [pc, #396]	; 1195c <teste_v_sucessores@@Base+0x224>
   117cc:	bl	10af8 <printf@plt>
   117d0:	mov	r1, r5
   117d4:	mov	r0, r6
   117d8:	bl	12148 <v_sucessores@@Base>
   117dc:	subs	r5, r0, #0
   117e0:	beq	11924 <teste_v_sucessores@@Base+0x1ec>
   117e4:	ldr	r3, [r5]
   117e8:	cmp	r3, #3
   117ec:	beq	11808 <teste_v_sucessores@@Base+0xd0>
   117f0:	ldr	r0, [pc, #360]	; 11960 <teste_v_sucessores@@Base+0x228>
   117f4:	bl	10af8 <printf@plt>
   117f8:	ldr	r3, [r5]
   117fc:	cmp	r3, #0
   11800:	ble	11954 <teste_v_sucessores@@Base+0x21c>
   11804:	mov	r7, r4
   11808:	mov	r4, #0
   1180c:	b	11818 <teste_v_sucessores@@Base+0xe0>
   11810:	cmp	r4, r3
   11814:	bge	11898 <teste_v_sucessores@@Base+0x160>
   11818:	mov	r1, r4
   1181c:	mov	r0, r5
   11820:	bl	124c0 <vetor_elemento@@Base>
   11824:	add	r4, r4, #1
   11828:	ldr	r3, [r5]
   1182c:	cmp	r0, #2
   11830:	bne	11810 <teste_v_sucessores@@Base+0xd8>
   11834:	cmp	r3, #0
   11838:	movgt	r4, #0
   1183c:	bgt	1184c <teste_v_sucessores@@Base+0x114>
   11840:	b	11898 <teste_v_sucessores@@Base+0x160>
   11844:	cmp	r4, r3
   11848:	bge	11898 <teste_v_sucessores@@Base+0x160>
   1184c:	mov	r1, r4
   11850:	mov	r0, r5
   11854:	bl	124c0 <vetor_elemento@@Base>
   11858:	add	r4, r4, #1
   1185c:	ldr	r3, [r5]
   11860:	cmp	r0, #5
   11864:	bne	11844 <teste_v_sucessores@@Base+0x10c>
   11868:	cmp	r3, #0
   1186c:	movgt	r4, #0
   11870:	ble	11898 <teste_v_sucessores@@Base+0x160>
   11874:	mov	r1, r4
   11878:	mov	r0, r5
   1187c:	bl	124c0 <vetor_elemento@@Base>
   11880:	add	r4, r4, #1
   11884:	cmp	r0, #6
   11888:	beq	118a4 <teste_v_sucessores@@Base+0x16c>
   1188c:	ldr	r3, [r5]
   11890:	cmp	r4, r3
   11894:	blt	11874 <teste_v_sucessores@@Base+0x13c>
   11898:	add	r7, r7, #1
   1189c:	ldr	r0, [pc, #192]	; 11964 <teste_v_sucessores@@Base+0x22c>
   118a0:	bl	10af8 <printf@plt>
   118a4:	mov	r0, r5
   118a8:	bl	1245c <vetor_apaga@@Base>
   118ac:	mov	r1, #2
   118b0:	mov	r0, r6
   118b4:	bl	12148 <v_sucessores@@Base>
   118b8:	subs	r4, r0, #0
   118bc:	beq	1193c <teste_v_sucessores@@Base+0x204>
   118c0:	ldr	r3, [r4]
   118c4:	cmp	r3, #0
   118c8:	bne	118f4 <teste_v_sucessores@@Base+0x1bc>
   118cc:	bl	1245c <vetor_apaga@@Base>
   118d0:	mov	r0, r6
   118d4:	bl	11f18 <grafo_apaga@@Base>
   118d8:	cmp	r7, #0
   118dc:	bne	11910 <teste_v_sucessores@@Base+0x1d8>
   118e0:	ldr	r0, [pc, #128]	; 11968 <teste_v_sucessores@@Base+0x230>
   118e4:	bl	10b28 <puts@plt>
   118e8:	mov	r0, r7
   118ec:	add	sp, sp, #80	; 0x50
   118f0:	pop	{r4, r5, r6, r7, r8, pc}
   118f4:	ldr	r0, [pc, #112]	; 1196c <teste_v_sucessores@@Base+0x234>
   118f8:	bl	10af8 <printf@plt>
   118fc:	mov	r0, r4
   11900:	bl	1245c <vetor_apaga@@Base>
   11904:	mov	r0, r6
   11908:	add	r7, r7, #1
   1190c:	bl	11f18 <grafo_apaga@@Base>
   11910:	mov	r0, #10
   11914:	bl	10b64 <putchar@plt>
   11918:	mov	r0, r7
   1191c:	add	sp, sp, #80	; 0x50
   11920:	pop	{r4, r5, r6, r7, r8, pc}
   11924:	ldr	r0, [pc, #68]	; 11970 <teste_v_sucessores@@Base+0x238>
   11928:	bl	10af8 <printf@plt>
   1192c:	mov	r0, #10
   11930:	mov	r7, r4
   11934:	bl	10b64 <putchar@plt>
   11938:	b	118e8 <teste_v_sucessores@@Base+0x1b0>
   1193c:	ldr	r0, [pc, #48]	; 11974 <teste_v_sucessores@@Base+0x23c>
   11940:	bl	10af8 <printf@plt>
   11944:	mov	r0, #10
   11948:	add	r7, r7, #1
   1194c:	bl	10b64 <putchar@plt>
   11950:	b	118e8 <teste_v_sucessores@@Base+0x1b0>
   11954:	mov	r7, r8
   11958:	b	1189c <teste_v_sucessores@@Base+0x164>
   1195c:	andeq	r2, r1, ip, lsl #22
   11960:	andeq	r2, r1, r0, asr fp
   11964:	andeq	r2, r1, ip, ror fp
   11968:	andeq	r2, r1, r4, ror #15
   1196c:	andeq	r2, r1, r8, ror #23
   11970:	andeq	r2, r1, r0, lsr #22
   11974:	andeq	r2, r1, r8, lsr #23

00011978 <teste_v_antecessores@@Base>:
   11978:	push	{r4, r5, r6, r7, r8, lr}
   1197c:	sub	sp, sp, #80	; 0x50
   11980:	mov	ip, #7
   11984:	mov	lr, #5
   11988:	mov	r0, #6
   1198c:	mov	r3, #4
   11990:	mov	r6, #2
   11994:	mov	r8, #0
   11998:	mov	r1, #3
   1199c:	mov	r2, r1
   119a0:	str	ip, [sp, #16]
   119a4:	str	ip, [sp]
   119a8:	str	lr, [sp, #24]
   119ac:	str	lr, [sp, #20]
   119b0:	mov	r4, #1
   119b4:	str	r0, [sp, #44]	; 0x2c
   119b8:	str	r3, [sp, #40]	; 0x28
   119bc:	str	r3, [sp, #32]
   119c0:	str	r3, [sp, #28]
   119c4:	str	r1, [sp, #68]	; 0x44
   119c8:	mov	r3, r6
   119cc:	mov	r1, #22
   119d0:	str	r0, [sp, #64]	; 0x40
   119d4:	str	r0, [sp, #60]	; 0x3c
   119d8:	str	r8, [sp, #36]	; 0x24
   119dc:	str	r8, [sp, #8]
   119e0:	str	r6, [sp, #12]
   119e4:	str	r6, [sp, #4]
   119e8:	mov	r0, #8
   119ec:	str	ip, [sp, #56]	; 0x38
   119f0:	str	r8, [sp, #72]	; 0x48
   119f4:	str	r4, [sp, #76]	; 0x4c
   119f8:	str	r4, [sp, #52]	; 0x34
   119fc:	str	r4, [sp, #48]	; 0x30
   11a00:	bl	10e90 <_start@@Base+0x270>
   11a04:	mov	r7, r0
   11a08:	ldr	r0, [pc, #392]	; 11b98 <teste_v_antecessores@@Base+0x220>
   11a0c:	bl	10af8 <printf@plt>
   11a10:	mov	r1, r6
   11a14:	mov	r0, r7
   11a18:	bl	121c8 <v_antecessores@@Base>
   11a1c:	subs	r5, r0, #0
   11a20:	beq	11b60 <teste_v_antecessores@@Base+0x1e8>
   11a24:	ldr	r3, [r5]
   11a28:	cmp	r3, #3
   11a2c:	beq	11a48 <teste_v_antecessores@@Base+0xd0>
   11a30:	ldr	r0, [pc, #356]	; 11b9c <teste_v_antecessores@@Base+0x224>
   11a34:	bl	10af8 <printf@plt>
   11a38:	ldr	r3, [r5]
   11a3c:	cmp	r3, #0
   11a40:	ble	11b90 <teste_v_antecessores@@Base+0x218>
   11a44:	mov	r8, r4
   11a48:	mov	r4, #0
   11a4c:	b	11a58 <teste_v_antecessores@@Base+0xe0>
   11a50:	cmp	r4, r3
   11a54:	bge	11ad4 <teste_v_antecessores@@Base+0x15c>
   11a58:	mov	r1, r4
   11a5c:	mov	r0, r5
   11a60:	bl	124c0 <vetor_elemento@@Base>
   11a64:	add	r4, r4, #1
   11a68:	ldr	r3, [r5]
   11a6c:	subs	r6, r0, #0
   11a70:	bne	11a50 <teste_v_antecessores@@Base+0xd8>
   11a74:	cmp	r3, #0
   11a78:	movgt	r4, r6
   11a7c:	bgt	11a8c <teste_v_antecessores@@Base+0x114>
   11a80:	b	11ad4 <teste_v_antecessores@@Base+0x15c>
   11a84:	cmp	r4, r3
   11a88:	bge	11ad4 <teste_v_antecessores@@Base+0x15c>
   11a8c:	mov	r1, r4
   11a90:	mov	r0, r5
   11a94:	bl	124c0 <vetor_elemento@@Base>
   11a98:	add	r4, r4, #1
   11a9c:	ldr	r3, [r5]
   11aa0:	cmp	r0, #3
   11aa4:	bne	11a84 <teste_v_antecessores@@Base+0x10c>
   11aa8:	cmp	r3, #0
   11aac:	ble	11ad4 <teste_v_antecessores@@Base+0x15c>
   11ab0:	mov	r1, r6
   11ab4:	mov	r0, r5
   11ab8:	bl	124c0 <vetor_elemento@@Base>
   11abc:	add	r6, r6, #1
   11ac0:	cmp	r0, #7
   11ac4:	beq	11ae0 <teste_v_antecessores@@Base+0x168>
   11ac8:	ldr	r3, [r5]
   11acc:	cmp	r6, r3
   11ad0:	blt	11ab0 <teste_v_antecessores@@Base+0x138>
   11ad4:	add	r8, r8, #1
   11ad8:	ldr	r0, [pc, #192]	; 11ba0 <teste_v_antecessores@@Base+0x228>
   11adc:	bl	10af8 <printf@plt>
   11ae0:	mov	r0, r5
   11ae4:	bl	1245c <vetor_apaga@@Base>
   11ae8:	mov	r1, #7
   11aec:	mov	r0, r7
   11af0:	bl	121c8 <v_antecessores@@Base>
   11af4:	subs	r4, r0, #0
   11af8:	beq	11b78 <teste_v_antecessores@@Base+0x200>
   11afc:	ldr	r3, [r4]
   11b00:	cmp	r3, #0
   11b04:	bne	11b30 <teste_v_antecessores@@Base+0x1b8>
   11b08:	bl	1245c <vetor_apaga@@Base>
   11b0c:	mov	r0, r7
   11b10:	bl	11f18 <grafo_apaga@@Base>
   11b14:	cmp	r8, #0
   11b18:	bne	11b4c <teste_v_antecessores@@Base+0x1d4>
   11b1c:	ldr	r0, [pc, #128]	; 11ba4 <teste_v_antecessores@@Base+0x22c>
   11b20:	bl	10b28 <puts@plt>
   11b24:	mov	r0, r8
   11b28:	add	sp, sp, #80	; 0x50
   11b2c:	pop	{r4, r5, r6, r7, r8, pc}
   11b30:	ldr	r0, [pc, #112]	; 11ba8 <teste_v_antecessores@@Base+0x230>
   11b34:	bl	10af8 <printf@plt>
   11b38:	mov	r0, r4
   11b3c:	bl	1245c <vetor_apaga@@Base>
   11b40:	mov	r0, r7
   11b44:	add	r8, r8, #1
   11b48:	bl	11f18 <grafo_apaga@@Base>
   11b4c:	mov	r0, #10
   11b50:	bl	10b64 <putchar@plt>
   11b54:	mov	r0, r8
   11b58:	add	sp, sp, #80	; 0x50
   11b5c:	pop	{r4, r5, r6, r7, r8, pc}
   11b60:	ldr	r0, [pc, #68]	; 11bac <teste_v_antecessores@@Base+0x234>
   11b64:	bl	10af8 <printf@plt>
   11b68:	mov	r0, #10
   11b6c:	mov	r8, r4
   11b70:	bl	10b64 <putchar@plt>
   11b74:	b	11b24 <teste_v_antecessores@@Base+0x1ac>
   11b78:	ldr	r0, [pc, #48]	; 11bb0 <teste_v_antecessores@@Base+0x238>
   11b7c:	bl	10af8 <printf@plt>
   11b80:	mov	r0, #10
   11b84:	add	r8, r8, #1
   11b88:	bl	10b64 <putchar@plt>
   11b8c:	b	11b24 <teste_v_antecessores@@Base+0x1ac>
   11b90:	mov	r8, r6
   11b94:	b	11ad8 <teste_v_antecessores@@Base+0x160>
   11b98:	andeq	r2, r1, r8, lsl ip
   11b9c:	andeq	r2, r1, ip, asr ip
   11ba0:	andeq	r2, r1, ip, lsl #25
   11ba4:	andeq	r2, r1, r4, ror #15
   11ba8:	strdeq	r2, [r1], -ip
   11bac:	andeq	r2, r1, ip, lsr #24
   11bb0:			; <UNDEFINED> instruction: 0x00012cbc

00011bb4 <teste_v_grau@@Base>:
   11bb4:	push	{r4, r5, r6, r7, r8, lr}
   11bb8:	sub	sp, sp, #80	; 0x50
   11bbc:	mov	ip, #7
   11bc0:	mov	r0, #6
   11bc4:	mov	r3, #4
   11bc8:	mov	r8, #0
   11bcc:	mov	r1, #5
   11bd0:	mov	r5, #2
   11bd4:	mov	r6, #3
   11bd8:	mov	r2, r6
   11bdc:	str	ip, [sp, #16]
   11be0:	str	ip, [sp]
   11be4:	mov	r4, #1
   11be8:	str	r0, [sp, #44]	; 0x2c
   11bec:	str	r3, [sp, #40]	; 0x28
   11bf0:	str	r3, [sp, #32]
   11bf4:	str	r3, [sp, #28]
   11bf8:	str	r1, [sp, #24]
   11bfc:	mov	r3, r5
   11c00:	str	r1, [sp, #20]
   11c04:	str	r0, [sp, #64]	; 0x40
   11c08:	mov	r1, #22
   11c0c:	str	r0, [sp, #60]	; 0x3c
   11c10:	str	r8, [sp, #36]	; 0x24
   11c14:	str	r8, [sp, #8]
   11c18:	str	r5, [sp, #12]
   11c1c:	str	r5, [sp, #4]
   11c20:	mov	r0, #8
   11c24:	str	ip, [sp, #56]	; 0x38
   11c28:	str	r8, [sp, #72]	; 0x48
   11c2c:	str	r6, [sp, #68]	; 0x44
   11c30:	str	r4, [sp, #76]	; 0x4c
   11c34:	str	r4, [sp, #52]	; 0x34
   11c38:	str	r4, [sp, #48]	; 0x30
   11c3c:	bl	10e90 <_start@@Base+0x270>
   11c40:	mov	r7, r0
   11c44:	ldr	r0, [pc, #220]	; 11d28 <teste_v_grau@@Base+0x174>
   11c48:	bl	10af8 <printf@plt>
   11c4c:	mov	r0, r7
   11c50:	mvn	r1, #3
   11c54:	bl	12280 <v_grau@@Base>
   11c58:	cmn	r0, #1
   11c5c:	beq	11ce8 <teste_v_grau@@Base+0x134>
   11c60:	ldr	r0, [pc, #196]	; 11d2c <teste_v_grau@@Base+0x178>
   11c64:	bl	10af8 <printf@plt>
   11c68:	mov	r1, #7
   11c6c:	mov	r0, r7
   11c70:	bl	12280 <v_grau@@Base>
   11c74:	cmp	r0, #3
   11c78:	beq	11ccc <teste_v_grau@@Base+0x118>
   11c7c:	ldr	r0, [pc, #172]	; 11d30 <teste_v_grau@@Base+0x17c>
   11c80:	bl	10af8 <printf@plt>
   11c84:	mov	r1, #5
   11c88:	mov	r0, r7
   11c8c:	bl	12280 <v_grau@@Base>
   11c90:	cmp	r0, #2
   11c94:	beq	11cbc <teste_v_grau@@Base+0x108>
   11c98:	ldr	r0, [pc, #148]	; 11d34 <teste_v_grau@@Base+0x180>
   11c9c:	bl	10af8 <printf@plt>
   11ca0:	mov	r0, r7
   11ca4:	bl	11f18 <grafo_apaga@@Base>
   11ca8:	mov	r0, #10
   11cac:	bl	10b64 <putchar@plt>
   11cb0:	mov	r0, r6
   11cb4:	add	sp, sp, #80	; 0x50
   11cb8:	pop	{r4, r5, r6, r7, r8, pc}
   11cbc:	mov	r0, r7
   11cc0:	bl	11f18 <grafo_apaga@@Base>
   11cc4:	mov	r6, r5
   11cc8:	b	11ca8 <teste_v_grau@@Base+0xf4>
   11ccc:	mov	r1, #5
   11cd0:	mov	r0, r7
   11cd4:	bl	12280 <v_grau@@Base>
   11cd8:	cmp	r0, #2
   11cdc:	beq	11cf8 <teste_v_grau@@Base+0x144>
   11ce0:	mov	r6, r5
   11ce4:	b	11c98 <teste_v_grau@@Base+0xe4>
   11ce8:	mov	r6, r5
   11cec:	mov	r5, r4
   11cf0:	mov	r4, r8
   11cf4:	b	11c68 <teste_v_grau@@Base+0xb4>
   11cf8:	mov	r0, r7
   11cfc:	bl	11f18 <grafo_apaga@@Base>
   11d00:	cmp	r4, #0
   11d04:	bne	11d20 <teste_v_grau@@Base+0x16c>
   11d08:	ldr	r0, [pc, #40]	; 11d38 <teste_v_grau@@Base+0x184>
   11d0c:	bl	10b28 <puts@plt>
   11d10:	mov	r6, r4
   11d14:	mov	r0, r6
   11d18:	add	sp, sp, #80	; 0x50
   11d1c:	pop	{r4, r5, r6, r7, r8, pc}
   11d20:	mov	r6, r4
   11d24:	b	11ca8 <teste_v_grau@@Base+0xf4>
   11d28:	andeq	r2, r1, ip, lsr #26
   11d2c:	andeq	r2, r1, r8, lsr sp
   11d30:	andeq	r2, r1, r8, ror #26
   11d34:	muleq	r1, r8, sp
   11d38:	andeq	r2, r1, r4, ror #15

00011d3c <teste_v_celebridade@@Base>:
   11d3c:	push	{r4, r5, r6, r7, lr}
   11d40:	sub	sp, sp, #116	; 0x74
   11d44:	mov	r4, #2
   11d48:	mov	lr, #3
   11d4c:	mov	r6, #7
   11d50:	mov	r0, #4
   11d54:	mov	ip, #0
   11d58:	mov	r1, #5
   11d5c:	mov	r5, #1
   11d60:	mov	r3, r4
   11d64:	mov	r2, lr
   11d68:	str	ip, [sp, #8]
   11d6c:	str	r6, [sp]
   11d70:	str	ip, [sp, #72]	; 0x48
   11d74:	str	ip, [sp, #36]	; 0x24
   11d78:	str	r1, [sp, #104]	; 0x68
   11d7c:	mov	ip, #6
   11d80:	str	r1, [sp, #24]
   11d84:	str	r1, [sp, #20]
   11d88:	str	r0, [sp, #96]	; 0x60
   11d8c:	mov	r1, #30
   11d90:	str	r0, [sp, #40]	; 0x28
   11d94:	str	r0, [sp, #32]
   11d98:	str	r0, [sp, #28]
   11d9c:	str	r4, [sp, #4]
   11da0:	mov	r0, #8
   11da4:	str	lr, [sp, #68]	; 0x44
   11da8:	str	ip, [sp, #88]	; 0x58
   11dac:	str	ip, [sp, #64]	; 0x40
   11db0:	str	ip, [sp, #60]	; 0x3c
   11db4:	str	ip, [sp, #44]	; 0x2c
   11db8:	str	r6, [sp, #56]	; 0x38
   11dbc:	str	r6, [sp, #16]
   11dc0:	str	r4, [sp, #12]
   11dc4:	str	r4, [sp, #108]	; 0x6c
   11dc8:	str	r4, [sp, #100]	; 0x64
   11dcc:	str	r4, [sp, #92]	; 0x5c
   11dd0:	str	r4, [sp, #84]	; 0x54
   11dd4:	str	r5, [sp, #80]	; 0x50
   11dd8:	str	r5, [sp, #76]	; 0x4c
   11ddc:	str	r5, [sp, #52]	; 0x34
   11de0:	str	r5, [sp, #48]	; 0x30
   11de4:	bl	10f34 <_start@@Base+0x314>
   11de8:	mov	r7, r0
   11dec:	ldr	r0, [pc, #148]	; 11e88 <teste_v_celebridade@@Base+0x14c>
   11df0:	bl	10af8 <printf@plt>
   11df4:	mov	r1, r6
   11df8:	mov	r0, r7
   11dfc:	bl	123a8 <v_celebridade@@Base>
   11e00:	subs	r6, r0, #0
   11e04:	bne	11e60 <teste_v_celebridade@@Base+0x124>
   11e08:	mov	r1, r4
   11e0c:	mov	r0, r7
   11e10:	bl	123a8 <v_celebridade@@Base>
   11e14:	cmp	r0, #1
   11e18:	movne	r6, r5
   11e1c:	beq	11e44 <teste_v_celebridade@@Base+0x108>
   11e20:	ldr	r0, [pc, #100]	; 11e8c <teste_v_celebridade@@Base+0x150>
   11e24:	bl	10af8 <printf@plt>
   11e28:	mov	r0, r7
   11e2c:	bl	11f18 <grafo_apaga@@Base>
   11e30:	mov	r0, #10
   11e34:	bl	10b64 <putchar@plt>
   11e38:	mov	r0, r6
   11e3c:	add	sp, sp, #116	; 0x74
   11e40:	pop	{r4, r5, r6, r7, pc}
   11e44:	mov	r0, r7
   11e48:	bl	11f18 <grafo_apaga@@Base>
   11e4c:	ldr	r0, [pc, #60]	; 11e90 <teste_v_celebridade@@Base+0x154>
   11e50:	bl	10b28 <puts@plt>
   11e54:	mov	r0, r6
   11e58:	add	sp, sp, #116	; 0x74
   11e5c:	pop	{r4, r5, r6, r7, pc}
   11e60:	ldr	r0, [pc, #44]	; 11e94 <teste_v_celebridade@@Base+0x158>
   11e64:	bl	10af8 <printf@plt>
   11e68:	mov	r1, r4
   11e6c:	mov	r0, r7
   11e70:	bl	123a8 <v_celebridade@@Base>
   11e74:	cmp	r0, r5
   11e78:	mov	r6, r0
   11e7c:	movne	r6, r4
   11e80:	beq	11e28 <teste_v_celebridade@@Base+0xec>
   11e84:	b	11e20 <teste_v_celebridade@@Base+0xe4>
   11e88:	andeq	r2, r1, r8, asr #27
   11e8c:	andeq	r2, r1, r4, lsl lr
   11e90:	andeq	r2, r1, r4, ror #15
   11e94:	ldrdeq	r2, [r1], -ip

00011e98 <cria_elem@@Base>:
   11e98:	push	{r4, lr}
   11e9c:	mov	r4, r0
   11ea0:	mov	r0, #8
   11ea4:	bl	10b34 <malloc@plt>
   11ea8:	cmp	r0, #0
   11eac:	movne	r3, #0
   11eb0:	strne	r4, [r0]
   11eb4:	strne	r3, [r0, #4]
   11eb8:	pop	{r4, pc}

00011ebc <grafo_novo@@Base>:
   11ebc:	push	{r4, r5, r6, lr}
   11ec0:	subs	r5, r0, #0
   11ec4:	ble	11f10 <grafo_novo@@Base+0x54>
   11ec8:	mov	r0, #8
   11ecc:	bl	10b34 <malloc@plt>
   11ed0:	lsl	r4, r5, #3
   11ed4:	mov	r6, r0
   11ed8:	str	r5, [r0]
   11edc:	mov	r0, r4
   11ee0:	bl	10b34 <malloc@plt>
   11ee4:	mov	r2, #0
   11ee8:	mov	r3, r0
   11eec:	add	r1, r0, r4
   11ef0:	str	r0, [r6, #4]
   11ef4:	str	r2, [r3]
   11ef8:	str	r2, [r3, #4]
   11efc:	add	r3, r3, #8
   11f00:	cmp	r3, r1
   11f04:	bne	11ef4 <grafo_novo@@Base+0x38>
   11f08:	mov	r0, r6
   11f0c:	pop	{r4, r5, r6, pc}
   11f10:	mov	r6, #0
   11f14:	b	11f08 <grafo_novo@@Base+0x4c>

00011f18 <grafo_apaga@@Base>:
   11f18:	push	{r4, r5, r6, lr}
   11f1c:	subs	r6, r0, #0
   11f20:	popeq	{r4, r5, r6, pc}
   11f24:	ldm	r6, {r2, r3}
   11f28:	cmp	r2, #0
   11f2c:	ble	11f64 <grafo_apaga@@Base+0x4c>
   11f30:	mov	r5, #0
   11f34:	add	r1, r3, r5, lsl #3
   11f38:	ldr	r0, [r1, #4]
   11f3c:	cmp	r0, #0
   11f40:	beq	11f58 <grafo_apaga@@Base+0x40>
   11f44:	ldr	r4, [r0, #4]
   11f48:	bl	10b10 <free@plt>
   11f4c:	subs	r0, r4, #0
   11f50:	bne	11f44 <grafo_apaga@@Base+0x2c>
   11f54:	ldm	r6, {r2, r3}
   11f58:	add	r5, r5, #1
   11f5c:	cmp	r5, r2
   11f60:	blt	11f34 <grafo_apaga@@Base+0x1c>
   11f64:	mov	r0, r3
   11f68:	bl	10b10 <free@plt>
   11f6c:	mov	r0, r6
   11f70:	pop	{r4, r5, r6, lr}
   11f74:	b	10b10 <free@plt>

00011f78 <grafo_aresta@@Base>:
   11f78:	cmp	r0, #0
   11f7c:	beq	11fd8 <grafo_aresta@@Base+0x60>
   11f80:	ldr	r3, [r0]
   11f84:	cmp	r3, r1
   11f88:	blt	11fd8 <grafo_aresta@@Base+0x60>
   11f8c:	cmp	r3, r2
   11f90:	blt	11fcc <grafo_aresta@@Base+0x54>
   11f94:	ldr	r3, [r0, #4]
   11f98:	add	r1, r3, r1, lsl #3
   11f9c:	ldr	r0, [r1, #4]
   11fa0:	cmp	r0, #0
   11fa4:	bne	11fb8 <grafo_aresta@@Base+0x40>
   11fa8:	bx	lr
   11fac:	ldr	r0, [r0, #4]
   11fb0:	cmp	r0, #0
   11fb4:	beq	11fd4 <grafo_aresta@@Base+0x5c>
   11fb8:	ldr	r3, [r0]
   11fbc:	cmp	r2, r3
   11fc0:	bne	11fac <grafo_aresta@@Base+0x34>
   11fc4:	mov	r0, #1
   11fc8:	bx	lr
   11fcc:	mov	r0, #0
   11fd0:	bx	lr
   11fd4:	bx	lr
   11fd8:	mvn	r0, #0
   11fdc:	bx	lr

00011fe0 <grafo_adiciona@@Base>:
   11fe0:	cmp	r0, #0
   11fe4:	beq	12084 <grafo_adiciona@@Base+0xa4>
   11fe8:	ldr	r3, [r0]
   11fec:	cmp	r3, r2
   11ff0:	cmpge	r3, r1
   11ff4:	blt	12084 <grafo_adiciona@@Base+0xa4>
   11ff8:	push	{r4, r5, r6, r7, r8, lr}
   11ffc:	ldr	r7, [r0, #4]
   12000:	add	r5, r7, r1, lsl #3
   12004:	ldr	r6, [r5, #4]
   12008:	cmp	r6, #0
   1200c:	beq	1203c <grafo_adiciona@@Base+0x5c>
   12010:	ldr	r1, [r6]
   12014:	cmp	r2, r1
   12018:	beq	1207c <grafo_adiciona@@Base+0x9c>
   1201c:	mov	r3, r6
   12020:	b	12030 <grafo_adiciona@@Base+0x50>
   12024:	ldr	r0, [r3]
   12028:	cmp	r2, r0
   1202c:	beq	1207c <grafo_adiciona@@Base+0x9c>
   12030:	ldr	r3, [r3, #4]
   12034:	cmp	r3, #0
   12038:	bne	12024 <grafo_adiciona@@Base+0x44>
   1203c:	mov	r0, #8
   12040:	mov	r4, r2
   12044:	bl	10b34 <malloc@plt>
   12048:	subs	r3, r0, #0
   1204c:	beq	12070 <grafo_adiciona@@Base+0x90>
   12050:	ldr	r2, [r7]
   12054:	mov	r0, #1
   12058:	add	r2, r2, #1
   1205c:	str	r4, [r3]
   12060:	str	r3, [r5, #4]
   12064:	str	r6, [r3, #4]
   12068:	str	r2, [r7]
   1206c:	pop	{r4, r5, r6, r7, r8, pc}
   12070:	str	r3, [r5, #4]
   12074:	str	r6, [r3, #4]
   12078:	udf	#0
   1207c:	mov	r0, #0
   12080:	pop	{r4, r5, r6, r7, r8, pc}
   12084:	mvn	r0, #0
   12088:	bx	lr

0001208c <grafo_remove@@Base>:
   1208c:	cmp	r0, #0
   12090:	beq	12140 <grafo_remove@@Base+0xb4>
   12094:	cmp	r1, r2
   12098:	ldr	ip, [r0]
   1209c:	movge	r3, r1
   120a0:	movlt	r3, r2
   120a4:	cmp	ip, r3
   120a8:	blt	12140 <grafo_remove@@Base+0xb4>
   120ac:	ldr	ip, [r0, #4]
   120b0:	add	r1, ip, r1, lsl #3
   120b4:	ldr	r3, [r1, #4]
   120b8:	cmp	r3, #0
   120bc:	beq	12114 <grafo_remove@@Base+0x88>
   120c0:	ldr	r0, [r3]
   120c4:	push	{r4, lr}
   120c8:	cmp	r2, r0
   120cc:	bne	120e4 <grafo_remove@@Base+0x58>
   120d0:	b	1211c <grafo_remove@@Base+0x90>
   120d4:	ldr	r1, [r0]
   120d8:	cmp	r2, r1
   120dc:	beq	120f4 <grafo_remove@@Base+0x68>
   120e0:	mov	r3, r0
   120e4:	ldr	r0, [r3, #4]
   120e8:	cmp	r0, #0
   120ec:	bne	120d4 <grafo_remove@@Base+0x48>
   120f0:	pop	{r4, pc}
   120f4:	ldr	r2, [ip]
   120f8:	ldr	r1, [r0, #4]
   120fc:	sub	r2, r2, #1
   12100:	str	r1, [r3, #4]
   12104:	str	r2, [ip]
   12108:	bl	10b10 <free@plt>
   1210c:	mov	r0, #1
   12110:	pop	{r4, pc}
   12114:	mov	r0, r3
   12118:	bx	lr
   1211c:	ldr	r2, [ip]
   12120:	ldr	r0, [r3, #4]
   12124:	sub	r2, r2, #1
   12128:	str	r0, [r1, #4]
   1212c:	mov	r0, r3
   12130:	str	r2, [ip]
   12134:	bl	10b10 <free@plt>
   12138:	mov	r0, #1
   1213c:	pop	{r4, pc}
   12140:	mvn	r0, #0
   12144:	bx	lr

00012148 <v_sucessores@@Base>:
   12148:	push	{r4, r5, r6, lr}
   1214c:	subs	r5, r0, #0
   12150:	beq	121c0 <v_sucessores@@Base+0x78>
   12154:	ldr	r3, [r5]
   12158:	cmp	r1, #0
   1215c:	cmpge	r3, r1
   12160:	movgt	r3, #1
   12164:	movle	r3, #0
   12168:	ble	121b8 <v_sucessores@@Base+0x70>
   1216c:	mov	r4, r1
   12170:	bl	12438 <vetor_novo@@Base>
   12174:	ldr	r1, [r5, #4]
   12178:	add	r1, r1, r4, lsl #3
   1217c:	ldr	r4, [r1, #4]
   12180:	cmp	r4, #0
   12184:	mov	r6, r0
   12188:	beq	121b0 <v_sucessores@@Base+0x68>
   1218c:	mov	r5, #0
   12190:	mov	r2, r5
   12194:	ldr	r1, [r4]
   12198:	mov	r0, r6
   1219c:	bl	124f0 <vetor_insere@@Base>
   121a0:	ldr	r4, [r4, #4]
   121a4:	add	r5, r5, #1
   121a8:	cmp	r4, #0
   121ac:	bne	12190 <v_sucessores@@Base+0x48>
   121b0:	mov	r0, r6
   121b4:	pop	{r4, r5, r6, pc}
   121b8:	mov	r6, r3
   121bc:	b	121b0 <v_sucessores@@Base+0x68>
   121c0:	mov	r6, r5
   121c4:	b	121b0 <v_sucessores@@Base+0x68>

000121c8 <v_antecessores@@Base>:
   121c8:	push	{r4, r5, r6, r7, r8, lr}
   121cc:	subs	r6, r0, #0
   121d0:	beq	12278 <v_antecessores@@Base+0xb0>
   121d4:	ldr	r3, [r6]
   121d8:	cmp	r1, #0
   121dc:	cmpge	r3, r1
   121e0:	movgt	r3, #1
   121e4:	movle	r3, #0
   121e8:	ble	1226c <v_antecessores@@Base+0xa4>
   121ec:	mov	r4, r1
   121f0:	bl	12438 <vetor_novo@@Base>
   121f4:	ldr	r1, [r6]
   121f8:	cmp	r1, #0
   121fc:	mov	r7, r0
   12200:	ble	1223c <v_antecessores@@Base+0x74>
   12204:	mov	r8, #0
   12208:	mov	r5, r8
   1220c:	ldr	r3, [r6, #4]
   12210:	add	r3, r3, r5, lsl #3
   12214:	b	12224 <v_antecessores@@Base+0x5c>
   12218:	ldr	r2, [r3]
   1221c:	cmp	r4, r2
   12220:	beq	12244 <v_antecessores@@Base+0x7c>
   12224:	ldr	r3, [r3, #4]
   12228:	cmp	r3, #0
   1222c:	bne	12218 <v_antecessores@@Base+0x50>
   12230:	add	r5, r5, #1
   12234:	cmp	r5, r1
   12238:	blt	1220c <v_antecessores@@Base+0x44>
   1223c:	mov	r0, r7
   12240:	pop	{r4, r5, r6, r7, r8, pc}
   12244:	mov	r1, r5
   12248:	mov	r2, r8
   1224c:	mov	r0, r7
   12250:	bl	124f0 <vetor_insere@@Base>
   12254:	ldr	r1, [r6]
   12258:	add	r5, r5, #1
   1225c:	cmp	r5, r1
   12260:	add	r8, r8, #1
   12264:	blt	1220c <v_antecessores@@Base+0x44>
   12268:	b	1223c <v_antecessores@@Base+0x74>
   1226c:	mov	r7, r3
   12270:	mov	r0, r7
   12274:	pop	{r4, r5, r6, r7, r8, pc}
   12278:	mov	r7, r6
   1227c:	b	1223c <v_antecessores@@Base+0x74>

00012280 <v_grau@@Base>:
   12280:	push	{r4, r5, r6, r7, r8, lr}
   12284:	subs	r4, r1, #0
   12288:	blt	123a0 <v_grau@@Base+0x120>
   1228c:	cmp	r0, #0
   12290:	mov	r7, r0
   12294:	beq	12394 <v_grau@@Base+0x114>
   12298:	ldr	r3, [r0]
   1229c:	cmp	r4, r3
   122a0:	bge	12394 <v_grau@@Base+0x114>
   122a4:	bl	12438 <vetor_novo@@Base>
   122a8:	ldr	r1, [r7]
   122ac:	mov	r8, #0
   122b0:	cmp	r1, #0
   122b4:	mov	r6, r0
   122b8:	ble	1233c <v_grau@@Base+0xbc>
   122bc:	mov	r5, r8
   122c0:	ldr	r3, [r7, #4]
   122c4:	add	r3, r3, r5, lsl #3
   122c8:	b	122d8 <v_grau@@Base+0x58>
   122cc:	ldr	r2, [r3]
   122d0:	cmp	r4, r2
   122d4:	beq	1236c <v_grau@@Base+0xec>
   122d8:	ldr	r3, [r3, #4]
   122dc:	cmp	r3, #0
   122e0:	bne	122cc <v_grau@@Base+0x4c>
   122e4:	add	r5, r5, #1
   122e8:	cmp	r5, r1
   122ec:	blt	122c0 <v_grau@@Base+0x40>
   122f0:	cmp	r4, r1
   122f4:	movge	r8, #0
   122f8:	bge	1233c <v_grau@@Base+0xbc>
   122fc:	bl	12438 <vetor_novo@@Base>
   12300:	ldr	r3, [r7, #4]
   12304:	add	r4, r3, r4, lsl #3
   12308:	ldr	r4, [r4, #4]
   1230c:	cmp	r4, #0
   12310:	mov	r8, r0
   12314:	beq	1233c <v_grau@@Base+0xbc>
   12318:	mov	r5, #0
   1231c:	mov	r2, r5
   12320:	ldr	r1, [r4]
   12324:	mov	r0, r8
   12328:	bl	124f0 <vetor_insere@@Base>
   1232c:	ldr	r4, [r4, #4]
   12330:	add	r5, r5, #1
   12334:	cmp	r4, #0
   12338:	bne	1231c <v_grau@@Base+0x9c>
   1233c:	mov	r0, r6
   12340:	bl	124b0 <vetor_tamanho@@Base>
   12344:	mov	r4, r0
   12348:	mov	r0, r8
   1234c:	bl	124b0 <vetor_tamanho@@Base>
   12350:	add	r4, r4, r0
   12354:	mov	r0, r6
   12358:	bl	1245c <vetor_apaga@@Base>
   1235c:	mov	r0, r8
   12360:	bl	1245c <vetor_apaga@@Base>
   12364:	mov	r0, r4
   12368:	pop	{r4, r5, r6, r7, r8, pc}
   1236c:	mov	r1, r5
   12370:	mov	r2, r8
   12374:	mov	r0, r6
   12378:	bl	124f0 <vetor_insere@@Base>
   1237c:	ldr	r1, [r7]
   12380:	add	r5, r5, #1
   12384:	cmp	r5, r1
   12388:	add	r8, r8, #1
   1238c:	blt	122c0 <v_grau@@Base+0x40>
   12390:	b	122f0 <v_grau@@Base+0x70>
   12394:	mov	r6, #0
   12398:	mov	r8, r6
   1239c:	b	1233c <v_grau@@Base+0xbc>
   123a0:	mvn	r4, #0
   123a4:	b	12364 <v_grau@@Base+0xe4>

000123a8 <v_celebridade@@Base>:
   123a8:	subs	r3, r0, #0
   123ac:	beq	12430 <v_celebridade@@Base+0x88>
   123b0:	ldr	r0, [r3, #4]
   123b4:	ldr	ip, [r0, r1, lsl #3]
   123b8:	cmp	ip, #0
   123bc:	bne	12420 <v_celebridade@@Base+0x78>
   123c0:	push	{r4, lr}
   123c4:	ldr	r4, [r3]
   123c8:	cmp	r4, #0
   123cc:	ble	12428 <v_celebridade@@Base+0x80>
   123d0:	add	lr, r0, r4, lsl #3
   123d4:	ldr	r3, [r0, #4]
   123d8:	cmp	r3, #0
   123dc:	bne	123f0 <v_celebridade@@Base+0x48>
   123e0:	b	12400 <v_celebridade@@Base+0x58>
   123e4:	ldr	r3, [r3, #4]
   123e8:	cmp	r3, #0
   123ec:	beq	12400 <v_celebridade@@Base+0x58>
   123f0:	ldr	r2, [r3]
   123f4:	cmp	r1, r2
   123f8:	bne	123e4 <v_celebridade@@Base+0x3c>
   123fc:	add	ip, ip, #1
   12400:	add	r0, r0, #8
   12404:	cmp	lr, r0
   12408:	bne	123d4 <v_celebridade@@Base+0x2c>
   1240c:	add	ip, ip, #1
   12410:	sub	r0, r4, ip
   12414:	clz	r0, r0
   12418:	lsr	r0, r0, #5
   1241c:	pop	{r4, pc}
   12420:	mov	r0, #0
   12424:	bx	lr
   12428:	mov	ip, #1
   1242c:	b	12410 <v_celebridade@@Base+0x68>
   12430:	mvn	r0, #0
   12434:	bx	lr

00012438 <vetor_novo@@Base>:
   12438:	push	{r4, lr}
   1243c:	mov	r0, #12
   12440:	bl	10b34 <malloc@plt>
   12444:	cmp	r0, #0
   12448:	movne	r3, #0
   1244c:	strne	r3, [r0]
   12450:	strne	r3, [r0, #4]
   12454:	strne	r3, [r0, #8]
   12458:	pop	{r4, pc}

0001245c <vetor_apaga@@Base>:
   1245c:	push	{r4, lr}
   12460:	subs	r4, r0, #0
   12464:	popeq	{r4, pc}
   12468:	ldr	r0, [r4, #8]
   1246c:	bl	10b10 <free@plt>
   12470:	mov	r0, r4
   12474:	pop	{r4, lr}
   12478:	b	10b10 <free@plt>

0001247c <vetor_atribui@@Base>:
   1247c:	clz	r3, r0
   12480:	lsr	r3, r3, #5
   12484:	orrs	r3, r3, r1, lsr #31
   12488:	bne	124a8 <vetor_atribui@@Base+0x2c>
   1248c:	ldr	r3, [r0]
   12490:	cmp	r1, r3
   12494:	bge	124a8 <vetor_atribui@@Base+0x2c>
   12498:	ldr	r3, [r0, #8]
   1249c:	mov	r0, r1
   124a0:	str	r2, [r3, r1, lsl #2]
   124a4:	bx	lr
   124a8:	mvn	r0, #0
   124ac:	bx	lr

000124b0 <vetor_tamanho@@Base>:
   124b0:	cmp	r0, #0
   124b4:	ldrne	r0, [r0]
   124b8:	mvneq	r0, #0
   124bc:	bx	lr

000124c0 <vetor_elemento@@Base>:
   124c0:	clz	r3, r0
   124c4:	lsr	r3, r3, #5
   124c8:	orrs	r3, r3, r1, lsr #31
   124cc:	bne	124e8 <vetor_elemento@@Base+0x28>
   124d0:	ldr	r3, [r0]
   124d4:	cmp	r1, r3
   124d8:	bge	124e8 <vetor_elemento@@Base+0x28>
   124dc:	ldr	r3, [r0, #8]
   124e0:	ldr	r0, [r3, r1, lsl #2]
   124e4:	bx	lr
   124e8:	mov	r0, #-2147483648	; 0x80000000
   124ec:	bx	lr

000124f0 <vetor_insere@@Base>:
   124f0:	cmn	r2, #1
   124f4:	movge	r3, #0
   124f8:	movlt	r3, #1
   124fc:	cmp	r0, #0
   12500:	orreq	r3, r3, #1
   12504:	cmp	r3, #0
   12508:	push	{r4, r5, r6, r7, r8, lr}
   1250c:	bne	125b4 <vetor_insere@@Base+0xc4>
   12510:	ldr	r5, [r0]
   12514:	cmp	r2, r5
   12518:	bgt	125b4 <vetor_insere@@Base+0xc4>
   1251c:	ldr	r3, [r0, #4]
   12520:	cmn	r2, #1
   12524:	movne	r4, r2
   12528:	moveq	r4, r5
   1252c:	cmp	r5, r3
   12530:	mov	r7, r0
   12534:	mov	r6, r1
   12538:	beq	12580 <vetor_insere@@Base+0x90>
   1253c:	ldr	r8, [r0, #8]
   12540:	cmp	r4, r5
   12544:	bge	1256c <vetor_insere@@Base+0x7c>
   12548:	sub	r2, r5, r4
   1254c:	lsl	r1, r5, #2
   12550:	lsl	r2, r2, #2
   12554:	add	r0, r1, #4
   12558:	sub	r0, r0, r2
   1255c:	sub	r1, r1, r2
   12560:	add	r1, r8, r1
   12564:	add	r0, r8, r0
   12568:	bl	10b04 <memmove@plt>
   1256c:	add	r5, r5, #1
   12570:	str	r6, [r8, r4, lsl #2]
   12574:	str	r5, [r7]
   12578:	mov	r0, r4
   1257c:	pop	{r4, r5, r6, r7, r8, pc}
   12580:	cmp	r5, #0
   12584:	lslne	r3, r5, #1
   12588:	moveq	r3, #1
   1258c:	lslne	r1, r5, #3
   12590:	moveq	r1, #4
   12594:	str	r3, [r0, #4]
   12598:	ldr	r0, [r0, #8]
   1259c:	bl	10b1c <realloc@plt>
   125a0:	cmp	r0, #0
   125a4:	str	r0, [r7, #8]
   125a8:	ldrne	r5, [r7]
   125ac:	movne	r8, r0
   125b0:	bne	12540 <vetor_insere@@Base+0x50>
   125b4:	mvn	r4, #0
   125b8:	b	12578 <vetor_insere@@Base+0x88>

000125bc <vetor_remove@@Base>:
   125bc:	clz	r3, r0
   125c0:	lsr	r3, r3, #5
   125c4:	orrs	r3, r3, r1, lsr #31
   125c8:	bne	12624 <vetor_remove@@Base+0x68>
   125cc:	push	{r4, r5, r6, lr}
   125d0:	ldr	r4, [r0]
   125d4:	cmp	r1, r4
   125d8:	bge	1262c <vetor_remove@@Base+0x70>
   125dc:	add	r3, r1, #1
   125e0:	cmp	r4, r3
   125e4:	mov	r5, r0
   125e8:	ble	12614 <vetor_remove@@Base+0x58>
   125ec:	mvn	r2, #-1073741824	; 0xc0000000
   125f0:	sub	r2, r2, r1
   125f4:	lsl	r3, r1, #2
   125f8:	ldr	r0, [r0, #8]
   125fc:	add	r2, r2, r4
   12600:	add	r1, r3, #4
   12604:	add	r1, r0, r1
   12608:	lsl	r2, r2, #2
   1260c:	add	r0, r0, r3
   12610:	bl	10b04 <memmove@plt>
   12614:	sub	r4, r4, #1
   12618:	str	r4, [r5]
   1261c:	mov	r0, #0
   12620:	pop	{r4, r5, r6, pc}
   12624:	mvn	r0, #0
   12628:	bx	lr
   1262c:	mvn	r0, #0
   12630:	pop	{r4, r5, r6, pc}

00012634 <vetor_pesquisa@@Base>:
   12634:	cmp	r0, #0
   12638:	beq	1267c <vetor_pesquisa@@Base+0x48>
   1263c:	ldr	ip, [r0]
   12640:	cmp	ip, #0
   12644:	ble	1267c <vetor_pesquisa@@Base+0x48>
   12648:	ldr	r3, [r0, #8]
   1264c:	ldr	r2, [r3]
   12650:	cmp	r1, r2
   12654:	beq	12684 <vetor_pesquisa@@Base+0x50>
   12658:	add	r3, r3, #4
   1265c:	mov	r0, #0
   12660:	b	12670 <vetor_pesquisa@@Base+0x3c>
   12664:	ldr	r2, [r3], #4
   12668:	cmp	r2, r1
   1266c:	bxeq	lr
   12670:	add	r0, r0, #1
   12674:	cmp	r0, ip
   12678:	bne	12664 <vetor_pesquisa@@Base+0x30>
   1267c:	mvn	r0, #0
   12680:	bx	lr
   12684:	mov	r0, #0
   12688:	bx	lr

0001268c <vetor_ordena@@Base>:
   1268c:	cmp	r0, #0
   12690:	beq	126fc <vetor_ordena@@Base+0x70>
   12694:	ldr	r3, [r0]
   12698:	cmp	r3, #1
   1269c:	ble	126f4 <vetor_ordena@@Base+0x68>
   126a0:	push	{r4, r5, lr}
   126a4:	sub	r3, r3, #-1073741823	; 0xc0000001
   126a8:	ldr	r5, [r0, #8]
   126ac:	mov	lr, #1
   126b0:	mov	ip, r5
   126b4:	add	r4, r5, r3, lsl #2
   126b8:	ldr	r0, [ip, #4]!
   126bc:	mov	r3, lr
   126c0:	mov	r2, ip
   126c4:	ldr	r1, [r2, #-4]
   126c8:	cmp	r0, r1
   126cc:	bge	126dc <vetor_ordena@@Base+0x50>
   126d0:	subs	r3, r3, #1
   126d4:	str	r1, [r2], #-4
   126d8:	bne	126c4 <vetor_ordena@@Base+0x38>
   126dc:	cmp	r4, ip
   126e0:	str	r0, [r5, r3, lsl #2]
   126e4:	add	lr, lr, #1
   126e8:	bne	126b8 <vetor_ordena@@Base+0x2c>
   126ec:	mov	r0, #0
   126f0:	pop	{r4, r5, pc}
   126f4:	mov	r0, #0
   126f8:	bx	lr
   126fc:	mvn	r0, #0
   12700:	bx	lr

00012704 <__libc_csu_init@@Base>:
   12704:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12708:	mov	r7, r0
   1270c:	ldr	r6, [pc, #72]	; 1275c <__libc_csu_init@@Base+0x58>
   12710:	ldr	r5, [pc, #72]	; 12760 <__libc_csu_init@@Base+0x5c>
   12714:	add	r6, pc, r6
   12718:	add	r5, pc, r5
   1271c:	sub	r6, r6, r5
   12720:	mov	r8, r1
   12724:	mov	r9, r2
   12728:	bl	10acc <calloc@plt-0x20>
   1272c:	asrs	r6, r6, #2
   12730:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12734:	mov	r4, #0
   12738:	add	r4, r4, #1
   1273c:	ldr	r3, [r5], #4
   12740:	mov	r2, r9
   12744:	mov	r1, r8
   12748:	mov	r0, r7
   1274c:	blx	r3
   12750:	cmp	r6, r4
   12754:	bne	12738 <__libc_csu_init@@Base+0x34>
   12758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1275c:	strdeq	r0, [r1], -r4
   12760:	andeq	r0, r1, ip, ror #15

00012764 <__libc_csu_fini@@Base>:
   12764:	bx	lr

Disassembly of section .fini:

00012768 <.fini>:
   12768:	push	{r3, lr}
   1276c:	pop	{r3, pc}
