
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001104c <.init>:
   1104c:	push	{r3, lr}
   11050:	bl	119cc <__snprintf_chk@plt+0x624>
   11054:	pop	{r3, pc}

Disassembly of section .plt:

00011058 <calloc@plt-0x14>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	ldr	lr, [pc, #4]	; 11068 <calloc@plt-0x4>
   11060:	add	lr, pc, lr
   11064:	ldr	pc, [lr, #8]!
   11068:	muleq	r1, r8, pc	; <UNPREDICTABLE>

0001106c <calloc@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #3992]!	; 0xf98

00011078 <fputs_unlocked@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #3984]!	; 0xf90

00011084 <raise@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #3976]!	; 0xf88

00011090 <strcmp@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #3968]!	; 0xf80

0001109c <strtol@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #3960]!	; 0xf78

000110a8 <fflush@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #3952]!	; 0xf70

000110b4 <sigprocmask@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #3944]!	; 0xf68

000110c0 <free@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #20, 20	; 0x14000
   110c8:	ldr	pc, [ip, #3936]!	; 0xf60

000110cc <_exit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #20, 20	; 0x14000
   110d4:	ldr	pc, [ip, #3928]!	; 0xf58

000110d8 <memcpy@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #20, 20	; 0x14000
   110e0:	ldr	pc, [ip, #3920]!	; 0xf50

000110e4 <execvp@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #20, 20	; 0x14000
   110ec:	ldr	pc, [ip, #3912]!	; 0xf48

000110f0 <mbsinit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #20, 20	; 0x14000
   110f8:	ldr	pc, [ip, #3904]!	; 0xf40

000110fc <signal@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #20, 20	; 0x14000
   11104:	ldr	pc, [ip, #3896]!	; 0xf38

00011108 <memcmp@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #20, 20	; 0x14000
   11110:	ldr	pc, [ip, #3888]!	; 0xf30

00011114 <fputc_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #20, 20	; 0x14000
   1111c:	ldr	pc, [ip, #3880]!	; 0xf28

00011120 <dcgettext@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #20, 20	; 0x14000
   11128:	ldr	pc, [ip, #3872]!	; 0xf20

0001112c <alarm@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #20, 20	; 0x14000
   11134:	ldr	pc, [ip, #3864]!	; 0xf18

00011138 <realloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #20, 20	; 0x14000
   11140:	ldr	pc, [ip, #3856]!	; 0xf10

00011144 <timer_create@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #20, 20	; 0x14000
   1114c:	ldr	pc, [ip, #3848]!	; 0xf08

00011150 <textdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #20, 20	; 0x14000
   11158:	ldr	pc, [ip, #3840]!	; 0xf00

0001115c <iswprint@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #20, 20	; 0x14000
   11164:	ldr	pc, [ip, #3832]!	; 0xef8

00011168 <timer_settime@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #20, 20	; 0x14000
   11170:	ldr	pc, [ip, #3824]!	; 0xef0

00011174 <sigaction@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #20, 20	; 0x14000
   1117c:	ldr	pc, [ip, #3816]!	; 0xee8

00011180 <lseek64@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #20, 20	; 0x14000
   11188:	ldr	pc, [ip, #3808]!	; 0xee0

0001118c <waitpid@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #20, 20	; 0x14000
   11194:	ldr	pc, [ip, #3800]!	; 0xed8

00011198 <__ctype_get_mb_cur_max@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #20, 20	; 0x14000
   111a0:	ldr	pc, [ip, #3792]!	; 0xed0

000111a4 <strcpy@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #20, 20	; 0x14000
   111ac:	ldr	pc, [ip, #3784]!	; 0xec8

000111b0 <__fpending@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #20, 20	; 0x14000
   111b8:	ldr	pc, [ip, #3776]!	; 0xec0

000111bc <ferror_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #20, 20	; 0x14000
   111c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c8 <mbrtowc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #20, 20	; 0x14000
   111d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d4 <error@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #20, 20	; 0x14000
   111dc:	ldr	pc, [ip, #3752]!	; 0xea8

000111e0 <timer_delete@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #20, 20	; 0x14000
   111e8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ec <malloc@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #20, 20	; 0x14000
   111f4:	ldr	pc, [ip, #3736]!	; 0xe98

000111f8 <sigaddset@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #20, 20	; 0x14000
   11200:	ldr	pc, [ip, #3728]!	; 0xe90

00011204 <__libc_start_main@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #20, 20	; 0x14000
   1120c:	ldr	pc, [ip, #3720]!	; 0xe88

00011210 <__freading@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #20, 20	; 0x14000
   11218:	ldr	pc, [ip, #3712]!	; 0xe80

0001121c <__gmon_start__@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #20, 20	; 0x14000
   11224:	ldr	pc, [ip, #3704]!	; 0xe78

00011228 <getopt_long@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #20, 20	; 0x14000
   11230:	ldr	pc, [ip, #3696]!	; 0xe70

00011234 <kill@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #20, 20	; 0x14000
   1123c:	ldr	pc, [ip, #3688]!	; 0xe68

00011240 <__ctype_b_loc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #20, 20	; 0x14000
   11248:	ldr	pc, [ip, #3680]!	; 0xe60

0001124c <exit@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #20, 20	; 0x14000
   11254:	ldr	pc, [ip, #3672]!	; 0xe58

00011258 <strlen@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #20, 20	; 0x14000
   11260:	ldr	pc, [ip, #3664]!	; 0xe50

00011264 <__libc_current_sigrtmax@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #20, 20	; 0x14000
   1126c:	ldr	pc, [ip, #3656]!	; 0xe48

00011270 <strchr@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #20, 20	; 0x14000
   11278:	ldr	pc, [ip, #3648]!	; 0xe40

0001127c <__errno_location@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #20, 20	; 0x14000
   11284:	ldr	pc, [ip, #3640]!	; 0xe38

00011288 <__sprintf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #20, 20	; 0x14000
   11290:	ldr	pc, [ip, #3632]!	; 0xe30

00011294 <__cxa_atexit@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #20, 20	; 0x14000
   1129c:	ldr	pc, [ip, #3624]!	; 0xe28

000112a0 <memset@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #20, 20	; 0x14000
   112a8:	ldr	pc, [ip, #3616]!	; 0xe20

000112ac <sigsuspend@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #20, 20	; 0x14000
   112b4:	ldr	pc, [ip, #3608]!	; 0xe18

000112b8 <__printf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #20, 20	; 0x14000
   112c0:	ldr	pc, [ip, #3600]!	; 0xe10

000112c4 <prctl@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #20, 20	; 0x14000
   112cc:	ldr	pc, [ip, #3592]!	; 0xe08

000112d0 <strtod@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #20, 20	; 0x14000
   112d8:	ldr	pc, [ip, #3584]!	; 0xe00

000112dc <fileno@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #20, 20	; 0x14000
   112e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e8 <__fprintf_chk@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #20, 20	; 0x14000
   112f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f4 <fclose@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #20, 20	; 0x14000
   112fc:	ldr	pc, [ip, #3560]!	; 0xde8

00011300 <fseeko64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #20, 20	; 0x14000
   11308:	ldr	pc, [ip, #3552]!	; 0xde0

0001130c <strtod_l@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #20, 20	; 0x14000
   11314:	ldr	pc, [ip, #3544]!	; 0xdd8

00011318 <setlocale@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #20, 20	; 0x14000
   11320:	ldr	pc, [ip, #3536]!	; 0xdd0

00011324 <sigemptyset@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #20, 20	; 0x14000
   1132c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011330 <fork@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #20, 20	; 0x14000
   11338:	ldr	pc, [ip, #3520]!	; 0xdc0

0001133c <strrchr@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #20, 20	; 0x14000
   11344:	ldr	pc, [ip, #3512]!	; 0xdb8

00011348 <nl_langinfo@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #20, 20	; 0x14000
   11350:	ldr	pc, [ip, #3504]!	; 0xdb0

00011354 <newlocale@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #20, 20	; 0x14000
   1135c:	ldr	pc, [ip, #3496]!	; 0xda8

00011360 <setpgid@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #20, 20	; 0x14000
   11368:	ldr	pc, [ip, #3488]!	; 0xda0

0001136c <bindtextdomain@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #20, 20	; 0x14000
   11374:	ldr	pc, [ip, #3480]!	; 0xd98

00011378 <__libc_current_sigrtmin@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #20, 20	; 0x14000
   11380:	ldr	pc, [ip, #3472]!	; 0xd90

00011384 <fputs@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #20, 20	; 0x14000
   1138c:	ldr	pc, [ip, #3464]!	; 0xd88

00011390 <strncmp@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #20, 20	; 0x14000
   11398:	ldr	pc, [ip, #3456]!	; 0xd80

0001139c <abort@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #20, 20	; 0x14000
   113a4:	ldr	pc, [ip, #3448]!	; 0xd78

000113a8 <__snprintf_chk@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #20, 20	; 0x14000
   113b0:	ldr	pc, [ip, #3440]!	; 0xd70

Disassembly of section .text:

000113b8 <.text>:
   113b8:	push	{r4, lr}
   113bc:	bl	1127c <__errno_location@plt>
   113c0:	mov	r3, #12
   113c4:	str	r3, [r0]
   113c8:	mov	r0, #0
   113cc:	pop	{r4, pc}
   113d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113d4:	mov	r4, r0
   113d8:	mov	r6, r1
   113dc:	vpush	{d8}
   113e0:	sub	sp, sp, #296	; 0x128
   113e4:	ldr	r0, [r1]
   113e8:	bl	12578 <__snprintf_chk@plt+0x11d0>
   113ec:	ldr	r1, [pc, #1336]	; 1192c <__snprintf_chk@plt+0x584>
   113f0:	mov	r0, #6
   113f4:	bl	11318 <setlocale@plt>
   113f8:	ldr	r1, [pc, #1328]	; 11930 <__snprintf_chk@plt+0x588>
   113fc:	ldr	r0, [pc, #1328]	; 11934 <__snprintf_chk@plt+0x58c>
   11400:	bl	1136c <bindtextdomain@plt>
   11404:	ldr	r0, [pc, #1320]	; 11934 <__snprintf_chk@plt+0x58c>
   11408:	bl	11150 <textdomain@plt>
   1140c:	ldr	r3, [pc, #1316]	; 11938 <__snprintf_chk@plt+0x590>
   11410:	mov	r2, #125	; 0x7d
   11414:	ldr	r0, [pc, #1312]	; 1193c <__snprintf_chk@plt+0x594>
   11418:	ldr	sl, [pc, #1312]	; 11940 <__snprintf_chk@plt+0x598>
   1141c:	str	r2, [r3]
   11420:	ldr	r9, [pc, #1308]	; 11944 <__snprintf_chk@plt+0x59c>
   11424:	ldr	r8, [pc, #1308]	; 11948 <__snprintf_chk@plt+0x5a0>
   11428:	bl	14bcc <__snprintf_chk@plt+0x3824>
   1142c:	mov	r5, #0
   11430:	mov	r3, sl
   11434:	mov	r2, r9
   11438:	mov	r1, r6
   1143c:	mov	r0, r4
   11440:	str	r5, [sp]
   11444:	bl	11228 <getopt_long@plt>
   11448:	cmn	r0, #1
   1144c:	bne	115b4 <__snprintf_chk@plt+0x20c>
   11450:	ldr	r5, [pc, #1268]	; 1194c <__snprintf_chk@plt+0x5a4>
   11454:	ldr	r3, [r5]
   11458:	sub	r4, r4, r3
   1145c:	cmp	r4, #1
   11460:	ble	1165c <__snprintf_chk@plt+0x2b4>
   11464:	add	r2, r3, #1
   11468:	ldr	r4, [pc, #1248]	; 11950 <__snprintf_chk@plt+0x5a8>
   1146c:	ldr	r0, [r6, r3, lsl #2]
   11470:	str	r2, [r5]
   11474:	bl	12078 <__snprintf_chk@plt+0xcd0>
   11478:	ldr	r7, [r5]
   1147c:	vmov.f64	d8, d0
   11480:	ldrb	r1, [r4, #24]
   11484:	ldr	r3, [r6, r7, lsl #2]
   11488:	add	r9, r6, r7, lsl #2
   1148c:	cmp	r1, #0
   11490:	str	r3, [r4, #20]
   11494:	bne	114a0 <__snprintf_chk@plt+0xf8>
   11498:	mov	r0, r1
   1149c:	bl	11360 <setpgid@plt>
   114a0:	ldr	r8, [pc, #1196]	; 11954 <__snprintf_chk@plt+0x5ac>
   114a4:	add	r0, sp, #160	; 0xa0
   114a8:	mov	r5, #268435456	; 0x10000000
   114ac:	ldr	sl, [r8]
   114b0:	bl	11324 <sigemptyset@plt>
   114b4:	ldr	r3, [pc, #1180]	; 11958 <__snprintf_chk@plt+0x5b0>
   114b8:	mov	r2, #0
   114bc:	add	r1, sp, #156	; 0x9c
   114c0:	mov	r0, #14
   114c4:	str	r3, [sp, #156]	; 0x9c
   114c8:	str	r5, [sp, #288]	; 0x120
   114cc:	bl	11174 <sigaction@plt>
   114d0:	mov	r2, #0
   114d4:	add	r1, sp, #156	; 0x9c
   114d8:	mov	r0, #2
   114dc:	bl	11174 <sigaction@plt>
   114e0:	mov	r2, #0
   114e4:	add	r1, sp, #156	; 0x9c
   114e8:	mov	r0, #3
   114ec:	bl	11174 <sigaction@plt>
   114f0:	mov	r2, #0
   114f4:	add	r1, sp, #156	; 0x9c
   114f8:	mov	r0, #1
   114fc:	bl	11174 <sigaction@plt>
   11500:	mov	r2, #0
   11504:	add	r1, sp, #156	; 0x9c
   11508:	mov	r0, #15
   1150c:	bl	11174 <sigaction@plt>
   11510:	mov	r2, #0
   11514:	add	r1, sp, #156	; 0x9c
   11518:	mov	r0, sl
   1151c:	bl	11174 <sigaction@plt>
   11520:	mov	r1, #1
   11524:	mov	r0, #21
   11528:	bl	110fc <signal@plt>
   1152c:	mov	r1, #1
   11530:	mov	r0, #22
   11534:	bl	110fc <signal@plt>
   11538:	add	r0, sp, #160	; 0xa0
   1153c:	bl	11324 <sigemptyset@plt>
   11540:	ldr	r3, [pc, #1044]	; 1195c <__snprintf_chk@plt+0x5b4>
   11544:	mov	r2, #0
   11548:	add	r1, sp, #156	; 0x9c
   1154c:	mov	r0, #17
   11550:	str	r3, [sp, #156]	; 0x9c
   11554:	str	r5, [sp, #288]	; 0x120
   11558:	bl	11174 <sigaction@plt>
   1155c:	mov	r0, #17
   11560:	bl	11d40 <__snprintf_chk@plt+0x998>
   11564:	bl	11330 <fork@plt>
   11568:	cmn	r0, #1
   1156c:	mov	r5, r0
   11570:	str	r0, [r4, #4]
   11574:	bne	11680 <__snprintf_chk@plt+0x2d8>
   11578:	bl	1127c <__errno_location@plt>
   1157c:	ldr	r4, [r0]
   11580:	mov	r2, #5
   11584:	mov	r0, #0
   11588:	mov	r6, #125	; 0x7d
   1158c:	ldr	r1, [pc, #972]	; 11960 <__snprintf_chk@plt+0x5b8>
   11590:	bl	11120 <dcgettext@plt>
   11594:	mov	r2, r0
   11598:	mov	r0, #0
   1159c:	mov	r1, r4
   115a0:	bl	111d4 <error@plt>
   115a4:	mov	r0, r6
   115a8:	add	sp, sp, #296	; 0x128
   115ac:	vpop	{d8}
   115b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115b4:	cmp	r0, #115	; 0x73
   115b8:	beq	11640 <__snprintf_chk@plt+0x298>
   115bc:	ldr	r7, [pc, #908]	; 11950 <__snprintf_chk@plt+0x5a8>
   115c0:	bgt	11608 <__snprintf_chk@plt+0x260>
   115c4:	cmn	r0, #2
   115c8:	beq	11678 <__snprintf_chk@plt+0x2d0>
   115cc:	cmp	r0, #107	; 0x6b
   115d0:	beq	11630 <__snprintf_chk@plt+0x288>
   115d4:	cmn	r0, #3
   115d8:	bne	1165c <__snprintf_chk@plt+0x2b4>
   115dc:	ldr	r3, [pc, #896]	; 11964 <__snprintf_chk@plt+0x5bc>
   115e0:	ldr	r0, [pc, #896]	; 11968 <__snprintf_chk@plt+0x5c0>
   115e4:	ldr	r2, [pc, #896]	; 1196c <__snprintf_chk@plt+0x5c4>
   115e8:	stm	sp, {r3, r5}
   115ec:	ldr	r3, [pc, #892]	; 11970 <__snprintf_chk@plt+0x5c8>
   115f0:	ldr	r1, [pc, #892]	; 11974 <__snprintf_chk@plt+0x5cc>
   115f4:	ldr	r0, [r0]
   115f8:	ldr	r3, [r3]
   115fc:	bl	1421c <__snprintf_chk@plt+0x2e74>
   11600:	mov	r0, r5
   11604:	bl	1124c <exit@plt>
   11608:	cmp	r0, #256	; 0x100
   1160c:	beq	11664 <__snprintf_chk@plt+0x2bc>
   11610:	movw	r3, #257	; 0x101
   11614:	cmp	r0, r3
   11618:	mov	r3, #1
   1161c:	beq	11670 <__snprintf_chk@plt+0x2c8>
   11620:	cmp	r0, #118	; 0x76
   11624:	bne	1165c <__snprintf_chk@plt+0x2b4>
   11628:	strb	r3, [r7, #16]
   1162c:	b	1142c <__snprintf_chk@plt+0x84>
   11630:	ldr	r0, [r8]
   11634:	bl	12078 <__snprintf_chk@plt+0xcd0>
   11638:	vstr	d0, [r7, #8]
   1163c:	b	1142c <__snprintf_chk@plt+0x84>
   11640:	add	r1, sp, #8
   11644:	ldr	r0, [r8]
   11648:	bl	12168 <__snprintf_chk@plt+0xdc0>
   1164c:	ldr	r3, [pc, #768]	; 11954 <__snprintf_chk@plt+0x5ac>
   11650:	cmn	r0, #1
   11654:	str	r0, [r3]
   11658:	bne	1142c <__snprintf_chk@plt+0x84>
   1165c:	mov	r0, #125	; 0x7d
   11660:	b	1167c <__snprintf_chk@plt+0x2d4>
   11664:	mov	r3, #1
   11668:	strb	r3, [r7, #24]
   1166c:	b	1142c <__snprintf_chk@plt+0x84>
   11670:	strb	r3, [r7, #25]
   11674:	b	1142c <__snprintf_chk@plt+0x84>
   11678:	mov	r0, r5
   1167c:	bl	11dac <__snprintf_chk@plt+0xa04>
   11680:	cmp	r0, #0
   11684:	bne	116f4 <__snprintf_chk@plt+0x34c>
   11688:	mov	r1, r0
   1168c:	mov	r0, #21
   11690:	bl	110fc <signal@plt>
   11694:	mov	r1, r5
   11698:	mov	r0, #22
   1169c:	bl	110fc <signal@plt>
   116a0:	mov	r1, r9
   116a4:	ldr	r0, [r6, r7, lsl #2]
   116a8:	bl	110e4 <execvp@plt>
   116ac:	bl	1127c <__errno_location@plt>
   116b0:	ldr	r7, [r0]
   116b4:	mov	r2, #5
   116b8:	mov	r0, r5
   116bc:	ldr	r1, [pc, #692]	; 11978 <__snprintf_chk@plt+0x5d0>
   116c0:	cmp	r7, #2
   116c4:	moveq	r6, #127	; 0x7f
   116c8:	movne	r6, #126	; 0x7e
   116cc:	bl	11120 <dcgettext@plt>
   116d0:	mov	r8, r0
   116d4:	ldr	r0, [r4, #20]
   116d8:	bl	13b78 <__snprintf_chk@plt+0x27d0>
   116dc:	mov	r3, r0
   116e0:	mov	r2, r8
   116e4:	mov	r1, r7
   116e8:	mov	r0, r5
   116ec:	bl	111d4 <error@plt>
   116f0:	b	115a4 <__snprintf_chk@plt+0x1fc>
   116f4:	mov	r0, #14
   116f8:	bl	11d40 <__snprintf_chk@plt+0x998>
   116fc:	vmov.f64	d0, d8
   11700:	mov	r0, #1
   11704:	bl	11ab0 <__snprintf_chk@plt+0x708>
   11708:	add	r0, sp, #156	; 0x9c
   1170c:	ldr	r5, [r8]
   11710:	bl	11324 <sigemptyset@plt>
   11714:	mov	r1, #14
   11718:	add	r0, sp, #156	; 0x9c
   1171c:	bl	111f8 <sigaddset@plt>
   11720:	mov	r1, #2
   11724:	add	r0, sp, #156	; 0x9c
   11728:	bl	111f8 <sigaddset@plt>
   1172c:	mov	r1, #3
   11730:	add	r0, sp, #156	; 0x9c
   11734:	bl	111f8 <sigaddset@plt>
   11738:	mov	r1, #1
   1173c:	add	r0, sp, #156	; 0x9c
   11740:	bl	111f8 <sigaddset@plt>
   11744:	mov	r1, #15
   11748:	add	r0, sp, #156	; 0x9c
   1174c:	bl	111f8 <sigaddset@plt>
   11750:	mov	r1, r5
   11754:	add	r0, sp, #156	; 0x9c
   11758:	bl	111f8 <sigaddset@plt>
   1175c:	mov	r1, #17
   11760:	add	r0, sp, #156	; 0x9c
   11764:	bl	111f8 <sigaddset@plt>
   11768:	add	r2, sp, #28
   1176c:	add	r1, sp, #156	; 0x9c
   11770:	mov	r0, #0
   11774:	bl	110b4 <sigprocmask@plt>
   11778:	cmp	r0, #0
   1177c:	beq	117a8 <__snprintf_chk@plt+0x400>
   11780:	bl	1127c <__errno_location@plt>
   11784:	ldr	r5, [r0]
   11788:	mov	r2, #5
   1178c:	mov	r0, #0
   11790:	ldr	r1, [pc, #484]	; 1197c <__snprintf_chk@plt+0x5d4>
   11794:	bl	11120 <dcgettext@plt>
   11798:	mov	r2, r0
   1179c:	mov	r0, #0
   117a0:	mov	r1, r5
   117a4:	bl	111d4 <error@plt>
   117a8:	mov	r2, #1
   117ac:	add	r1, sp, #156	; 0x9c
   117b0:	ldr	r0, [r4, #4]
   117b4:	bl	1118c <waitpid@plt>
   117b8:	cmp	r0, #0
   117bc:	beq	117f8 <__snprintf_chk@plt+0x450>
   117c0:	bge	11804 <__snprintf_chk@plt+0x45c>
   117c4:	bl	1127c <__errno_location@plt>
   117c8:	ldr	r5, [r0]
   117cc:	mov	r2, #5
   117d0:	mov	r0, #0
   117d4:	ldr	r1, [pc, #420]	; 11980 <__snprintf_chk@plt+0x5d8>
   117d8:	bl	11120 <dcgettext@plt>
   117dc:	mov	r2, r0
   117e0:	mov	r0, #0
   117e4:	mov	r1, r5
   117e8:	bl	111d4 <error@plt>
   117ec:	mov	r3, #125	; 0x7d
   117f0:	str	r3, [sp, #156]	; 0x9c
   117f4:	b	118b0 <__snprintf_chk@plt+0x508>
   117f8:	add	r0, sp, #28
   117fc:	bl	112ac <sigsuspend@plt>
   11800:	b	117a8 <__snprintf_chk@plt+0x400>
   11804:	ldr	r3, [sp, #156]	; 0x9c
   11808:	ands	r5, r3, #127	; 0x7f
   1180c:	ubfxeq	r3, r3, #8, #8
   11810:	beq	117f0 <__snprintf_chk@plt+0x448>
   11814:	add	r2, r5, #1
   11818:	sbfx	r2, r2, #1, #7
   1181c:	cmp	r2, #0
   11820:	ble	11900 <__snprintf_chk@plt+0x558>
   11824:	tst	r3, #128	; 0x80
   11828:	beq	1184c <__snprintf_chk@plt+0x4a4>
   1182c:	mov	r2, #5
   11830:	ldr	r1, [pc, #332]	; 11984 <__snprintf_chk@plt+0x5dc>
   11834:	mov	r0, #0
   11838:	bl	11120 <dcgettext@plt>
   1183c:	mov	r1, #0
   11840:	mov	r2, r0
   11844:	mov	r0, r1
   11848:	bl	111d4 <error@plt>
   1184c:	ldr	r6, [r4]
   11850:	cmp	r6, #0
   11854:	bne	11884 <__snprintf_chk@plt+0x4dc>
   11858:	mov	r1, r6
   1185c:	mov	r0, #4
   11860:	bl	112c4 <prctl@plt>
   11864:	subs	r1, r0, #0
   11868:	bne	118d4 <__snprintf_chk@plt+0x52c>
   1186c:	mov	r0, r5
   11870:	bl	110fc <signal@plt>
   11874:	mov	r0, r5
   11878:	bl	11d40 <__snprintf_chk@plt+0x998>
   1187c:	mov	r0, r5
   11880:	bl	11084 <raise@plt>
   11884:	ldr	r2, [r4]
   11888:	sub	r3, r5, #9
   1188c:	add	r5, r5, #128	; 0x80
   11890:	clz	r3, r3
   11894:	lsr	r3, r3, #5
   11898:	str	r5, [sp, #156]	; 0x9c
   1189c:	cmp	r2, #0
   118a0:	moveq	r3, #0
   118a4:	cmp	r3, #0
   118a8:	movne	r3, #1
   118ac:	strbne	r3, [r4, #25]
   118b0:	ldr	r3, [r4]
   118b4:	cmp	r3, #0
   118b8:	beq	118cc <__snprintf_chk@plt+0x524>
   118bc:	ldrb	r3, [r4, #25]
   118c0:	cmp	r3, #0
   118c4:	moveq	r3, #124	; 0x7c
   118c8:	streq	r3, [sp, #156]	; 0x9c
   118cc:	ldr	r6, [sp, #156]	; 0x9c
   118d0:	b	115a4 <__snprintf_chk@plt+0x1fc>
   118d4:	bl	1127c <__errno_location@plt>
   118d8:	ldr	r7, [r0]
   118dc:	mov	r2, #5
   118e0:	mov	r0, r6
   118e4:	ldr	r1, [pc, #156]	; 11988 <__snprintf_chk@plt+0x5e0>
   118e8:	bl	11120 <dcgettext@plt>
   118ec:	mov	r2, r0
   118f0:	mov	r0, r6
   118f4:	mov	r1, r7
   118f8:	bl	111d4 <error@plt>
   118fc:	b	11884 <__snprintf_chk@plt+0x4dc>
   11900:	mov	r2, #5
   11904:	ldr	r1, [pc, #128]	; 1198c <__snprintf_chk@plt+0x5e4>
   11908:	mov	r0, #0
   1190c:	bl	11120 <dcgettext@plt>
   11910:	mov	r1, #0
   11914:	mov	r2, r0
   11918:	ldr	r3, [sp, #156]	; 0x9c
   1191c:	mov	r0, r1
   11920:	bl	111d4 <error@plt>
   11924:	mov	r3, #1
   11928:	b	117f0 <__snprintf_chk@plt+0x448>
   1192c:	andeq	r5, r1, fp, asr r5
   11930:	andeq	r5, r1, r5, ror r5
   11934:			; <UNDEFINED> instruction: 0x000154b9
   11938:	andeq	r6, r2, r8, lsr r1
   1193c:	muleq	r1, r0, r3
   11940:	andeq	r4, r1, r8, lsr #24
   11944:	muleq	r1, fp, r5
   11948:	andeq	r6, r2, r8, lsr r3
   1194c:	andeq	r6, r2, r8, lsr #6
   11950:	andeq	r6, r2, r0, asr #6
   11954:	andeq	r6, r2, r0, lsr r1
   11958:	andeq	r1, r1, r8, ror #23
   1195c:	andeq	r1, r1, r0, lsl #21
   11960:	andeq	r5, r1, r2, lsr #11
   11964:	andeq	r5, r1, sp, lsl #11
   11968:	andeq	r6, r2, r4, lsr r3
   1196c:			; <UNDEFINED> instruction: 0x000154b5
   11970:	andeq	r6, r2, r4, lsr r1
   11974:	andeq	r4, r1, sp, lsl #26
   11978:			; <UNDEFINED> instruction: 0x000155ba
   1197c:	strdeq	r4, [r1], -r8
   11980:	ldrdeq	r5, [r1], -r3
   11984:	andeq	r5, r1, sp, ror #11
   11988:	andeq	r5, r1, pc, lsl #12
   1198c:	andeq	r5, r1, r4, lsr r6
   11990:	mov	fp, #0
   11994:	mov	lr, #0
   11998:	pop	{r1}		; (ldr r1, [sp], #4)
   1199c:	mov	r2, sp
   119a0:	push	{r2}		; (str r2, [sp, #-4]!)
   119a4:	push	{r0}		; (str r0, [sp, #-4]!)
   119a8:	ldr	ip, [pc, #16]	; 119c0 <__snprintf_chk@plt+0x618>
   119ac:	push	{ip}		; (str ip, [sp, #-4]!)
   119b0:	ldr	r0, [pc, #12]	; 119c4 <__snprintf_chk@plt+0x61c>
   119b4:	ldr	r3, [pc, #12]	; 119c8 <__snprintf_chk@plt+0x620>
   119b8:	bl	11204 <__libc_start_main@plt>
   119bc:	bl	1139c <abort@plt>
   119c0:	andeq	r4, r1, r8, asr #23
   119c4:	ldrdeq	r1, [r1], -r0
   119c8:	andeq	r4, r1, r8, ror #22
   119cc:	ldr	r3, [pc, #20]	; 119e8 <__snprintf_chk@plt+0x640>
   119d0:	ldr	r2, [pc, #20]	; 119ec <__snprintf_chk@plt+0x644>
   119d4:	add	r3, pc, r3
   119d8:	ldr	r2, [r3, r2]
   119dc:	cmp	r2, #0
   119e0:	bxeq	lr
   119e4:	b	1121c <__gmon_start__@plt>
   119e8:	andeq	r4, r1, r4, lsr #12
   119ec:	andeq	r0, r0, r4, lsr #2
   119f0:	ldr	r0, [pc, #24]	; 11a10 <__snprintf_chk@plt+0x668>
   119f4:	ldr	r3, [pc, #24]	; 11a14 <__snprintf_chk@plt+0x66c>
   119f8:	cmp	r3, r0
   119fc:	bxeq	lr
   11a00:	ldr	r3, [pc, #16]	; 11a18 <__snprintf_chk@plt+0x670>
   11a04:	cmp	r3, #0
   11a08:	bxeq	lr
   11a0c:	bx	r3
   11a10:	andeq	r6, r2, r0, lsr #6
   11a14:	andeq	r6, r2, r0, lsr #6
   11a18:	andeq	r0, r0, r0
   11a1c:	ldr	r0, [pc, #36]	; 11a48 <__snprintf_chk@plt+0x6a0>
   11a20:	ldr	r1, [pc, #36]	; 11a4c <__snprintf_chk@plt+0x6a4>
   11a24:	sub	r1, r1, r0
   11a28:	asr	r1, r1, #2
   11a2c:	add	r1, r1, r1, lsr #31
   11a30:	asrs	r1, r1, #1
   11a34:	bxeq	lr
   11a38:	ldr	r3, [pc, #16]	; 11a50 <__snprintf_chk@plt+0x6a8>
   11a3c:	cmp	r3, #0
   11a40:	bxeq	lr
   11a44:	bx	r3
   11a48:	andeq	r6, r2, r0, lsr #6
   11a4c:	andeq	r6, r2, r0, lsr #6
   11a50:	andeq	r0, r0, r0
   11a54:	push	{r4, lr}
   11a58:	ldr	r4, [pc, #24]	; 11a78 <__snprintf_chk@plt+0x6d0>
   11a5c:	ldrb	r3, [r4]
   11a60:	cmp	r3, #0
   11a64:	popne	{r4, pc}
   11a68:	bl	119f0 <__snprintf_chk@plt+0x648>
   11a6c:	mov	r3, #1
   11a70:	strb	r3, [r4]
   11a74:	pop	{r4, pc}
   11a78:	andeq	r6, r2, ip, lsr r3
   11a7c:	b	11a1c <__snprintf_chk@plt+0x674>
   11a80:	bx	lr
   11a84:	push	{r4, r5, r6, lr}
   11a88:	subs	r5, r0, #0
   11a8c:	mov	r4, r1
   11a90:	bne	11aa0 <__snprintf_chk@plt+0x6f8>
   11a94:	mov	r1, #1
   11a98:	mov	r0, r4
   11a9c:	bl	110fc <signal@plt>
   11aa0:	mov	r1, r4
   11aa4:	mov	r0, r5
   11aa8:	pop	{r4, r5, r6, lr}
   11aac:	b	11234 <kill@plt>
   11ab0:	push	{r4, r5, r6, lr}
   11ab4:	mov	r6, r0
   11ab8:	mov	r4, #0
   11abc:	vpush	{d8}
   11ac0:	sub	sp, sp, #32
   11ac4:	vmov.f64	d8, d0
   11ac8:	add	r5, sp, #8
   11acc:	mov	r0, r5
   11ad0:	bl	12468 <__snprintf_chk@plt+0x10c0>
   11ad4:	ldm	r5, {r0, r1}
   11ad8:	add	r3, sp, #32
   11adc:	add	r2, sp, #4
   11ae0:	str	r4, [sp, #16]
   11ae4:	str	r4, [sp, #20]
   11ae8:	stmdb	r3, {r0, r1}
   11aec:	mov	r1, r4
   11af0:	mov	r0, r4
   11af4:	bl	11144 <timer_create@plt>
   11af8:	subs	r5, r0, #0
   11afc:	bne	11b98 <__snprintf_chk@plt+0x7f0>
   11b00:	mov	r3, r5
   11b04:	add	r2, sp, #16
   11b08:	ldr	r0, [sp, #4]
   11b0c:	mov	r1, r5
   11b10:	bl	11168 <timer_settime@plt>
   11b14:	cmp	r0, r4
   11b18:	beq	11b8c <__snprintf_chk@plt+0x7e4>
   11b1c:	cmp	r6, r4
   11b20:	beq	11b4c <__snprintf_chk@plt+0x7a4>
   11b24:	bl	1127c <__errno_location@plt>
   11b28:	ldr	r4, [r0]
   11b2c:	mov	r2, #5
   11b30:	mov	r0, r5
   11b34:	ldr	r1, [pc, #164]	; 11be0 <__snprintf_chk@plt+0x838>
   11b38:	bl	11120 <dcgettext@plt>
   11b3c:	mov	r2, r0
   11b40:	mov	r0, r5
   11b44:	mov	r1, r4
   11b48:	bl	111d4 <error@plt>
   11b4c:	ldr	r0, [sp, #4]
   11b50:	bl	111e0 <timer_delete@plt>
   11b54:	vldr	d7, [pc, #124]	; 11bd8 <__snprintf_chk@plt+0x830>
   11b58:	vcmpe.f64	d8, d7
   11b5c:	vmrs	APSR_nzcv, fpscr
   11b60:	mvnge	r0, #0
   11b64:	bge	11b88 <__snprintf_chk@plt+0x7e0>
   11b68:	vcvt.u32.f64	s15, d8
   11b6c:	vcvt.f64.u32	d6, s15
   11b70:	vmov	r3, s15
   11b74:	vcmpe.f64	d6, d8
   11b78:	vmrs	APSR_nzcv, fpscr
   11b7c:	movmi	r0, #1
   11b80:	movpl	r0, #0
   11b84:	add	r0, r0, r3
   11b88:	bl	1112c <alarm@plt>
   11b8c:	add	sp, sp, #32
   11b90:	vpop	{d8}
   11b94:	pop	{r4, r5, r6, pc}
   11b98:	cmp	r6, #0
   11b9c:	beq	11b54 <__snprintf_chk@plt+0x7ac>
   11ba0:	bl	1127c <__errno_location@plt>
   11ba4:	ldr	r5, [r0]
   11ba8:	cmp	r5, #38	; 0x26
   11bac:	beq	11b54 <__snprintf_chk@plt+0x7ac>
   11bb0:	mov	r2, #5
   11bb4:	ldr	r1, [pc, #40]	; 11be4 <__snprintf_chk@plt+0x83c>
   11bb8:	mov	r0, r4
   11bbc:	bl	11120 <dcgettext@plt>
   11bc0:	mov	r2, r0
   11bc4:	mov	r1, r5
   11bc8:	mov	r0, r4
   11bcc:	bl	111d4 <error@plt>
   11bd0:	b	11b54 <__snprintf_chk@plt+0x7ac>
   11bd4:	nop	{0}
   11bd8:			; <UNDEFINED> instruction: 0xffe00000
   11bdc:	strdmi	pc, [pc, #255]	; 11ce3 <__snprintf_chk@plt+0x93b>
   11be0:	andeq	r4, r1, r8, lsr #25
   11be4:			; <UNDEFINED> instruction: 0x00014cbf
   11be8:	push	{r4, r5, r6, r7, lr}
   11bec:	cmp	r0, #14
   11bf0:	moveq	r3, #1
   11bf4:	movne	r4, r0
   11bf8:	ldr	r5, [pc, #304]	; 11d30 <__snprintf_chk@plt+0x988>
   11bfc:	vpush	{d8}
   11c00:	sub	sp, sp, #36	; 0x24
   11c04:	streq	r3, [r5]
   11c08:	ldreq	r3, [pc, #292]	; 11d34 <__snprintf_chk@plt+0x98c>
   11c0c:	ldreq	r4, [r3]
   11c10:	ldr	r3, [r5, #4]
   11c14:	cmp	r3, #0
   11c18:	beq	11d28 <__snprintf_chk@plt+0x980>
   11c1c:	vldr	d8, [r5, #8]
   11c20:	vcmp.f64	d8, #0.0
   11c24:	vmrs	APSR_nzcv, fpscr
   11c28:	beq	11c60 <__snprintf_chk@plt+0x8b8>
   11c2c:	bl	1127c <__errno_location@plt>
   11c30:	ldr	r3, [pc, #252]	; 11d34 <__snprintf_chk@plt+0x98c>
   11c34:	mov	r6, r0
   11c38:	mov	r2, #9
   11c3c:	mov	r0, #0
   11c40:	vmov.f64	d0, d8
   11c44:	ldr	r7, [r6]
   11c48:	str	r2, [r3]
   11c4c:	bl	11ab0 <__snprintf_chk@plt+0x708>
   11c50:	mov	r2, #0
   11c54:	mov	r3, #0
   11c58:	str	r7, [r6]
   11c5c:	strd	r2, [r5, #8]
   11c60:	ldrb	r3, [r5, #16]
   11c64:	cmp	r3, #0
   11c68:	beq	11cd0 <__snprintf_chk@plt+0x928>
   11c6c:	add	r1, sp, #12
   11c70:	mov	r0, r4
   11c74:	bl	13cf8 <__snprintf_chk@plt+0x2950>
   11c78:	cmp	r0, #0
   11c7c:	beq	11c9c <__snprintf_chk@plt+0x8f4>
   11c80:	ldr	r3, [pc, #176]	; 11d38 <__snprintf_chk@plt+0x990>
   11c84:	mov	r2, #1
   11c88:	add	r0, sp, #12
   11c8c:	stm	sp, {r3, r4}
   11c90:	mov	r3, #19
   11c94:	mov	r1, r3
   11c98:	bl	113a8 <__snprintf_chk@plt>
   11c9c:	mov	r2, #5
   11ca0:	ldr	r1, [pc, #148]	; 11d3c <__snprintf_chk@plt+0x994>
   11ca4:	mov	r0, #0
   11ca8:	bl	11120 <dcgettext@plt>
   11cac:	mov	r6, r0
   11cb0:	ldr	r0, [r5, #20]
   11cb4:	bl	13b78 <__snprintf_chk@plt+0x27d0>
   11cb8:	mov	r1, #0
   11cbc:	add	r3, sp, #12
   11cc0:	str	r0, [sp]
   11cc4:	mov	r2, r6
   11cc8:	mov	r0, r1
   11ccc:	bl	111d4 <error@plt>
   11cd0:	ldr	r6, [r5, #4]
   11cd4:	mov	r1, r4
   11cd8:	mov	r0, r6
   11cdc:	bl	11a84 <__snprintf_chk@plt+0x6dc>
   11ce0:	ldrb	r5, [r5, #24]
   11ce4:	cmp	r5, #0
   11ce8:	bne	11d1c <__snprintf_chk@plt+0x974>
   11cec:	mov	r1, r4
   11cf0:	mov	r0, r5
   11cf4:	bl	11a84 <__snprintf_chk@plt+0x6dc>
   11cf8:	cmp	r4, #9
   11cfc:	cmpne	r4, #18
   11d00:	beq	11d1c <__snprintf_chk@plt+0x974>
   11d04:	mov	r1, #18
   11d08:	mov	r0, r6
   11d0c:	bl	11a84 <__snprintf_chk@plt+0x6dc>
   11d10:	mov	r1, #18
   11d14:	mov	r0, r5
   11d18:	bl	11a84 <__snprintf_chk@plt+0x6dc>
   11d1c:	add	sp, sp, #36	; 0x24
   11d20:	vpop	{d8}
   11d24:	pop	{r4, r5, r6, r7, pc}
   11d28:	add	r0, r4, #128	; 0x80
   11d2c:	bl	110cc <_exit@plt>
   11d30:	andeq	r6, r2, r0, asr #6
   11d34:	andeq	r6, r2, r0, lsr r1
   11d38:	ldrdeq	r4, [r1], -r5
   11d3c:	ldrdeq	r4, [r1], -r8
   11d40:	push	{r4, lr}
   11d44:	sub	sp, sp, #128	; 0x80
   11d48:	mov	r4, r0
   11d4c:	mov	r0, sp
   11d50:	bl	11324 <sigemptyset@plt>
   11d54:	mov	r1, r4
   11d58:	mov	r0, sp
   11d5c:	bl	111f8 <sigaddset@plt>
   11d60:	mov	r2, #0
   11d64:	mov	r1, sp
   11d68:	mov	r0, #1
   11d6c:	bl	110b4 <sigprocmask@plt>
   11d70:	cmp	r0, #0
   11d74:	beq	11da0 <__snprintf_chk@plt+0x9f8>
   11d78:	bl	1127c <__errno_location@plt>
   11d7c:	ldr	r4, [r0]
   11d80:	mov	r2, #5
   11d84:	mov	r0, #0
   11d88:	ldr	r1, [pc, #24]	; 11da8 <__snprintf_chk@plt+0xa00>
   11d8c:	bl	11120 <dcgettext@plt>
   11d90:	mov	r2, r0
   11d94:	mov	r0, #0
   11d98:	mov	r1, r4
   11d9c:	bl	111d4 <error@plt>
   11da0:	add	sp, sp, #128	; 0x80
   11da4:	pop	{r4, pc}
   11da8:	strdeq	r4, [r1], -r8
   11dac:	subs	r5, r0, #0
   11db0:	push	{r7, lr}
   11db4:	sub	sp, sp, #56	; 0x38
   11db8:	ldr	r4, [pc, #596]	; 12014 <__snprintf_chk@plt+0xc6c>
   11dbc:	beq	11df4 <__snprintf_chk@plt+0xa4c>
   11dc0:	mov	r2, #5
   11dc4:	mov	r0, #0
   11dc8:	ldr	r3, [pc, #584]	; 12018 <__snprintf_chk@plt+0xc70>
   11dcc:	ldr	r1, [pc, #584]	; 1201c <__snprintf_chk@plt+0xc74>
   11dd0:	ldr	r6, [r3]
   11dd4:	bl	11120 <dcgettext@plt>
   11dd8:	mov	r2, r0
   11ddc:	mov	r1, #1
   11de0:	ldr	r3, [r4]
   11de4:	mov	r0, r6
   11de8:	bl	112e8 <__fprintf_chk@plt>
   11dec:	mov	r0, r5
   11df0:	bl	1124c <exit@plt>
   11df4:	mov	r2, #5
   11df8:	ldr	r1, [pc, #544]	; 12020 <__snprintf_chk@plt+0xc78>
   11dfc:	mov	r6, sp
   11e00:	bl	11120 <dcgettext@plt>
   11e04:	ldr	r3, [r4]
   11e08:	mov	r1, r0
   11e0c:	mov	r0, #1
   11e10:	ldr	r4, [pc, #524]	; 12024 <__snprintf_chk@plt+0xc7c>
   11e14:	ldr	r7, [pc, #524]	; 12028 <__snprintf_chk@plt+0xc80>
   11e18:	mov	r2, r3
   11e1c:	bl	112b8 <__printf_chk@plt>
   11e20:	mov	r2, #5
   11e24:	ldr	r1, [pc, #512]	; 1202c <__snprintf_chk@plt+0xc84>
   11e28:	mov	r0, r5
   11e2c:	bl	11120 <dcgettext@plt>
   11e30:	ldr	r1, [r4]
   11e34:	bl	11078 <fputs_unlocked@plt>
   11e38:	mov	r2, #5
   11e3c:	ldr	r1, [pc, #492]	; 12030 <__snprintf_chk@plt+0xc88>
   11e40:	mov	r0, r5
   11e44:	bl	11120 <dcgettext@plt>
   11e48:	ldr	r1, [r4]
   11e4c:	bl	11078 <fputs_unlocked@plt>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #472]	; 12034 <__snprintf_chk@plt+0xc8c>
   11e58:	mov	r0, r5
   11e5c:	bl	11120 <dcgettext@plt>
   11e60:	ldr	r1, [r4]
   11e64:	bl	11078 <fputs_unlocked@plt>
   11e68:	mov	r2, #5
   11e6c:	ldr	r1, [pc, #452]	; 12038 <__snprintf_chk@plt+0xc90>
   11e70:	mov	r0, r5
   11e74:	bl	11120 <dcgettext@plt>
   11e78:	ldr	r1, [r4]
   11e7c:	bl	11078 <fputs_unlocked@plt>
   11e80:	mov	r2, #5
   11e84:	ldr	r1, [pc, #432]	; 1203c <__snprintf_chk@plt+0xc94>
   11e88:	mov	r0, r5
   11e8c:	bl	11120 <dcgettext@plt>
   11e90:	ldr	r1, [r4]
   11e94:	bl	11078 <fputs_unlocked@plt>
   11e98:	mov	r2, #5
   11e9c:	ldr	r1, [pc, #412]	; 12040 <__snprintf_chk@plt+0xc98>
   11ea0:	mov	r0, r5
   11ea4:	bl	11120 <dcgettext@plt>
   11ea8:	ldr	r1, [r4]
   11eac:	bl	11078 <fputs_unlocked@plt>
   11eb0:	mov	r2, #5
   11eb4:	ldr	r1, [pc, #392]	; 12044 <__snprintf_chk@plt+0xc9c>
   11eb8:	mov	r0, r5
   11ebc:	bl	11120 <dcgettext@plt>
   11ec0:	ldr	r1, [r4]
   11ec4:	bl	11078 <fputs_unlocked@plt>
   11ec8:	mov	r2, #5
   11ecc:	ldr	r1, [pc, #372]	; 12048 <__snprintf_chk@plt+0xca0>
   11ed0:	mov	r0, r5
   11ed4:	bl	11120 <dcgettext@plt>
   11ed8:	ldr	r1, [r4]
   11edc:	bl	11078 <fputs_unlocked@plt>
   11ee0:	mov	r2, #5
   11ee4:	ldr	r1, [pc, #352]	; 1204c <__snprintf_chk@plt+0xca4>
   11ee8:	mov	r0, r5
   11eec:	bl	11120 <dcgettext@plt>
   11ef0:	ldr	r1, [r4]
   11ef4:	bl	11078 <fputs_unlocked@plt>
   11ef8:	ldr	lr, [pc, #336]	; 12050 <__snprintf_chk@plt+0xca8>
   11efc:	mov	ip, sp
   11f00:	ldm	lr!, {r0, r1, r2, r3}
   11f04:	stmia	ip!, {r0, r1, r2, r3}
   11f08:	ldm	lr!, {r0, r1, r2, r3}
   11f0c:	stmia	ip!, {r0, r1, r2, r3}
   11f10:	ldm	lr!, {r0, r1, r2, r3}
   11f14:	stmia	ip!, {r0, r1, r2, r3}
   11f18:	ldm	lr, {r0, r1}
   11f1c:	stm	ip, {r0, r1}
   11f20:	ldr	r1, [r6]
   11f24:	cmp	r1, #0
   11f28:	bne	11fcc <__snprintf_chk@plt+0xc24>
   11f2c:	ldr	r6, [r6, #4]
   11f30:	mov	r2, #5
   11f34:	mov	r0, #0
   11f38:	ldr	r7, [pc, #232]	; 12028 <__snprintf_chk@plt+0xc80>
   11f3c:	ldr	r1, [pc, #272]	; 12054 <__snprintf_chk@plt+0xcac>
   11f40:	cmp	r6, #0
   11f44:	moveq	r6, r7
   11f48:	bl	11120 <dcgettext@plt>
   11f4c:	mov	r1, r0
   11f50:	ldr	r3, [pc, #256]	; 12058 <__snprintf_chk@plt+0xcb0>
   11f54:	mov	r0, #1
   11f58:	ldr	r2, [pc, #252]	; 1205c <__snprintf_chk@plt+0xcb4>
   11f5c:	bl	112b8 <__printf_chk@plt>
   11f60:	mov	r1, #0
   11f64:	mov	r0, #5
   11f68:	bl	11318 <setlocale@plt>
   11f6c:	cmp	r0, #0
   11f70:	bne	11fe4 <__snprintf_chk@plt+0xc3c>
   11f74:	mov	r2, #5
   11f78:	ldr	r1, [pc, #224]	; 12060 <__snprintf_chk@plt+0xcb8>
   11f7c:	mov	r0, #0
   11f80:	bl	11120 <dcgettext@plt>
   11f84:	mov	r1, r0
   11f88:	ldr	r3, [pc, #152]	; 12028 <__snprintf_chk@plt+0xc80>
   11f8c:	mov	r0, #1
   11f90:	ldr	r2, [pc, #192]	; 12058 <__snprintf_chk@plt+0xcb0>
   11f94:	bl	112b8 <__printf_chk@plt>
   11f98:	mov	r2, #5
   11f9c:	ldr	r1, [pc, #192]	; 12064 <__snprintf_chk@plt+0xcbc>
   11fa0:	mov	r0, #0
   11fa4:	bl	11120 <dcgettext@plt>
   11fa8:	ldr	r2, [pc, #184]	; 12068 <__snprintf_chk@plt+0xcc0>
   11fac:	cmp	r6, r7
   11fb0:	mov	r1, r0
   11fb4:	mov	r0, #1
   11fb8:	ldr	r3, [pc, #172]	; 1206c <__snprintf_chk@plt+0xcc4>
   11fbc:	moveq	r3, r2
   11fc0:	mov	r2, r6
   11fc4:	bl	112b8 <__printf_chk@plt>
   11fc8:	b	11dec <__snprintf_chk@plt+0xa44>
   11fcc:	mov	r0, r7
   11fd0:	bl	11090 <strcmp@plt>
   11fd4:	cmp	r0, #0
   11fd8:	beq	11f2c <__snprintf_chk@plt+0xb84>
   11fdc:	add	r6, r6, #8
   11fe0:	b	11f20 <__snprintf_chk@plt+0xb78>
   11fe4:	mov	r2, #3
   11fe8:	ldr	r1, [pc, #128]	; 12070 <__snprintf_chk@plt+0xcc8>
   11fec:	bl	11390 <strncmp@plt>
   11ff0:	cmp	r0, #0
   11ff4:	beq	11f74 <__snprintf_chk@plt+0xbcc>
   11ff8:	mov	r2, #5
   11ffc:	ldr	r1, [pc, #112]	; 12074 <__snprintf_chk@plt+0xccc>
   12000:	mov	r0, #0
   12004:	bl	11120 <dcgettext@plt>
   12008:	ldr	r1, [r4]
   1200c:	bl	11078 <fputs_unlocked@plt>
   12010:	b	11f74 <__snprintf_chk@plt+0xbcc>
   12014:	andeq	r6, r2, r4, ror #6
   12018:	andeq	r6, r2, r0, lsr r3
   1201c:	andeq	r4, r1, r5, lsl sp
   12020:	andeq	r4, r1, ip, lsr sp
   12024:	andeq	r6, r2, r4, lsr r3
   12028:	andeq	r4, r1, sp, lsl #26
   1202c:	andeq	r4, r1, sp, ror sp
   12030:			; <UNDEFINED> instruction: 0x00014dba
   12034:	andeq	r4, r1, r5, lsl #28
   12038:	andeq	r5, r1, r1, ror #1
   1203c:	andeq	r5, r1, r3, lsr #2
   12040:	andeq	r5, r1, r0, asr r1
   12044:	andeq	r5, r1, r6, lsl #3
   12048:	andeq	r5, r1, r5, asr #4
   1204c:	andeq	r5, r1, pc, lsr #6
   12050:	strdeq	r4, [r1], -r0
   12054:	andeq	r5, r1, r6, ror r4
   12058:	andeq	r5, r1, sp, lsl #9
   1205c:			; <UNDEFINED> instruction: 0x000154b5
   12060:	andeq	r5, r1, lr, lsl #10
   12064:	andeq	r5, r1, r9, lsr #10
   12068:	andeq	r5, r1, r1, ror r6
   1206c:	andeq	r5, r1, fp, asr r5
   12070:	andeq	r5, r1, r3, asr #9
   12074:	andeq	r5, r1, r7, asr #9
   12078:	push	{r4, r5, lr}
   1207c:	sub	sp, sp, #20
   12080:	mov	r5, r0
   12084:	add	r2, sp, #8
   12088:	add	r1, sp, #4
   1208c:	ldr	r3, [pc, #200]	; 1215c <__snprintf_chk@plt+0xdb4>
   12090:	bl	145dc <__snprintf_chk@plt+0x3234>
   12094:	cmp	r0, #0
   12098:	bne	120ac <__snprintf_chk@plt+0xd04>
   1209c:	bl	1127c <__errno_location@plt>
   120a0:	ldr	r3, [r0]
   120a4:	cmp	r3, #34	; 0x22
   120a8:	bne	120f0 <__snprintf_chk@plt+0xd48>
   120ac:	vldr	d7, [sp, #8]
   120b0:	vcmpe.f64	d7, #0.0
   120b4:	vmrs	APSR_nzcv, fpscr
   120b8:	blt	120f0 <__snprintf_chk@plt+0xd48>
   120bc:	ldr	r2, [sp, #4]
   120c0:	ldrb	r3, [r2]
   120c4:	cmp	r3, #0
   120c8:	beq	1213c <__snprintf_chk@plt+0xd94>
   120cc:	ldrb	r2, [r2, #1]
   120d0:	cmp	r2, #0
   120d4:	bne	120f0 <__snprintf_chk@plt+0xd48>
   120d8:	cmp	r3, #104	; 0x68
   120dc:	beq	12154 <__snprintf_chk@plt+0xdac>
   120e0:	bhi	12128 <__snprintf_chk@plt+0xd80>
   120e4:	cmp	r3, #100	; 0x64
   120e8:	ldreq	r3, [pc, #112]	; 12160 <__snprintf_chk@plt+0xdb8>
   120ec:	beq	12140 <__snprintf_chk@plt+0xd98>
   120f0:	mov	r2, #5
   120f4:	mov	r0, #0
   120f8:	ldr	r1, [pc, #100]	; 12164 <__snprintf_chk@plt+0xdbc>
   120fc:	bl	11120 <dcgettext@plt>
   12100:	mov	r4, r0
   12104:	mov	r0, r5
   12108:	bl	13b78 <__snprintf_chk@plt+0x27d0>
   1210c:	mov	r1, #0
   12110:	mov	r3, r0
   12114:	mov	r2, r4
   12118:	mov	r0, r1
   1211c:	bl	111d4 <error@plt>
   12120:	mov	r0, #125	; 0x7d
   12124:	bl	11dac <__snprintf_chk@plt+0xa04>
   12128:	cmp	r3, #109	; 0x6d
   1212c:	moveq	r3, #60	; 0x3c
   12130:	beq	12140 <__snprintf_chk@plt+0xd98>
   12134:	cmp	r3, #115	; 0x73
   12138:	bne	120f0 <__snprintf_chk@plt+0xd48>
   1213c:	mov	r3, #1
   12140:	vmov	s13, r3
   12144:	vcvt.f64.s32	d0, s13
   12148:	vmul.f64	d0, d0, d7
   1214c:	add	sp, sp, #20
   12150:	pop	{r4, r5, pc}
   12154:	mov	r3, #3600	; 0xe10
   12158:	b	12140 <__snprintf_chk@plt+0xd98>
   1215c:	strdeq	r2, [r1], -r8
   12160:	andeq	r5, r1, r0, lsl #3
   12164:	andeq	r5, r1, ip, asr r5
   12168:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1216c:	mov	r6, r0
   12170:	mov	r8, r1
   12174:	ldrb	r3, [r0]
   12178:	sub	r3, r3, #48	; 0x30
   1217c:	cmp	r3, #9
   12180:	bhi	1223c <__snprintf_chk@plt+0xe94>
   12184:	bl	1127c <__errno_location@plt>
   12188:	mov	r4, r0
   1218c:	mov	r3, #0
   12190:	mov	r2, #10
   12194:	add	r1, sp, #4
   12198:	mov	r0, r6
   1219c:	str	r3, [r4]
   121a0:	bl	1109c <strtol@plt>
   121a4:	ldr	r3, [sp, #4]
   121a8:	cmp	r3, r6
   121ac:	beq	121c8 <__snprintf_chk@plt+0xe20>
   121b0:	ldrb	r3, [r3]
   121b4:	cmp	r3, #0
   121b8:	bne	121c8 <__snprintf_chk@plt+0xe20>
   121bc:	ldr	r3, [r4]
   121c0:	cmp	r3, #0
   121c4:	beq	12218 <__snprintf_chk@plt+0xe70>
   121c8:	mvn	r3, #0
   121cc:	str	r3, [sp]
   121d0:	ldr	r0, [sp]
   121d4:	cmp	r0, #0
   121d8:	bge	122d8 <__snprintf_chk@plt+0xf30>
   121dc:	mov	r2, #5
   121e0:	ldr	r1, [pc, #264]	; 122f0 <__snprintf_chk@plt+0xf48>
   121e4:	mov	r0, #0
   121e8:	bl	11120 <dcgettext@plt>
   121ec:	mov	r4, r0
   121f0:	mov	r0, r6
   121f4:	bl	13b78 <__snprintf_chk@plt+0x27d0>
   121f8:	mov	r1, #0
   121fc:	mov	r3, r0
   12200:	mov	r2, r4
   12204:	mov	r0, r1
   12208:	bl	111d4 <error@plt>
   1220c:	mvn	r0, #0
   12210:	add	sp, sp, #12
   12214:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12218:	cmn	r0, #1
   1221c:	bne	12228 <__snprintf_chk@plt+0xe80>
   12220:	str	r0, [sp]
   12224:	b	121d0 <__snprintf_chk@plt+0xe28>
   12228:	cmp	r0, #254	; 0xfe
   1222c:	movgt	r3, #255	; 0xff
   12230:	movle	r3, #127	; 0x7f
   12234:	and	r0, r0, r3
   12238:	b	12220 <__snprintf_chk@plt+0xe78>
   1223c:	ldr	r9, [pc, #176]	; 122f4 <__snprintf_chk@plt+0xf4c>
   12240:	bl	14580 <__snprintf_chk@plt+0x31d8>
   12244:	mov	r4, r0
   12248:	sub	r7, r0, #1
   1224c:	ldrb	r5, [r7, #1]!
   12250:	cmp	r5, #0
   12254:	bne	1228c <__snprintf_chk@plt+0xee4>
   12258:	mov	r1, sp
   1225c:	mov	r0, r4
   12260:	bl	13b84 <__snprintf_chk@plt+0x27dc>
   12264:	cmp	r0, #0
   12268:	beq	12280 <__snprintf_chk@plt+0xed8>
   1226c:	ldrb	r3, [r4]
   12270:	cmp	r3, #83	; 0x53
   12274:	beq	122a8 <__snprintf_chk@plt+0xf00>
   12278:	mvn	r3, #0
   1227c:	str	r3, [sp]
   12280:	mov	r0, r4
   12284:	bl	12528 <__snprintf_chk@plt+0x1180>
   12288:	b	121d0 <__snprintf_chk@plt+0xe28>
   1228c:	mov	r1, r5
   12290:	mov	r0, r9
   12294:	bl	11270 <strchr@plt>
   12298:	cmp	r0, #0
   1229c:	subne	r5, r5, #32
   122a0:	strbne	r5, [r7]
   122a4:	b	1224c <__snprintf_chk@plt+0xea4>
   122a8:	ldrb	r3, [r4, #1]
   122ac:	cmp	r3, #73	; 0x49
   122b0:	bne	12278 <__snprintf_chk@plt+0xed0>
   122b4:	ldrb	r3, [r4, #2]
   122b8:	cmp	r3, #71	; 0x47
   122bc:	bne	12278 <__snprintf_chk@plt+0xed0>
   122c0:	mov	r1, sp
   122c4:	add	r0, r4, #3
   122c8:	bl	13b84 <__snprintf_chk@plt+0x27dc>
   122cc:	cmp	r0, #0
   122d0:	bne	12278 <__snprintf_chk@plt+0xed0>
   122d4:	b	12280 <__snprintf_chk@plt+0xed8>
   122d8:	mov	r1, r8
   122dc:	bl	13cf8 <__snprintf_chk@plt+0x2950>
   122e0:	cmp	r0, #0
   122e4:	bne	121dc <__snprintf_chk@plt+0xe34>
   122e8:	ldr	r0, [sp]
   122ec:	b	12210 <__snprintf_chk@plt+0xe68>
   122f0:	andeq	r5, r1, sl, lsl #14
   122f4:	andeq	r5, r1, pc, ror #13
   122f8:	push	{r4, r5, r6, r7, lr}
   122fc:	mov	r4, r1
   12300:	mov	r7, r0
   12304:	vpush	{d8}
   12308:	sub	sp, sp, #12
   1230c:	mov	r1, sp
   12310:	bl	112d0 <strtod@plt>
   12314:	ldr	r3, [sp]
   12318:	vmov.f64	d8, d0
   1231c:	ldrb	r3, [r3]
   12320:	cmp	r3, #0
   12324:	beq	12354 <__snprintf_chk@plt+0xfac>
   12328:	bl	1127c <__errno_location@plt>
   1232c:	mov	r5, r0
   12330:	add	r1, sp, #4
   12334:	mov	r0, r7
   12338:	ldr	r6, [r5]
   1233c:	bl	14748 <__snprintf_chk@plt+0x33a0>
   12340:	ldrd	r2, [sp]
   12344:	cmp	r2, r3
   12348:	vmovcc.f64	d8, d0
   1234c:	strcc	r3, [sp]
   12350:	strcs	r6, [r5]
   12354:	cmp	r4, #0
   12358:	vmov.f64	d0, d8
   1235c:	ldrne	r3, [sp]
   12360:	strne	r3, [r4]
   12364:	add	sp, sp, #12
   12368:	vpop	{d8}
   1236c:	pop	{r4, r5, r6, r7, pc}
   12370:	ldr	r3, [pc, #4]	; 1237c <__snprintf_chk@plt+0xfd4>
   12374:	str	r0, [r3]
   12378:	bx	lr
   1237c:	andeq	r6, r2, ip, asr r3
   12380:	ldr	r3, [pc, #4]	; 1238c <__snprintf_chk@plt+0xfe4>
   12384:	strb	r0, [r3, #4]
   12388:	bx	lr
   1238c:	andeq	r6, r2, ip, asr r3
   12390:	ldr	r3, [pc, #176]	; 12448 <__snprintf_chk@plt+0x10a0>
   12394:	push	{r0, r1, r4, r5, r6, lr}
   12398:	ldr	r0, [r3]
   1239c:	bl	147b0 <__snprintf_chk@plt+0x3408>
   123a0:	cmp	r0, #0
   123a4:	beq	1242c <__snprintf_chk@plt+0x1084>
   123a8:	ldr	r4, [pc, #156]	; 1244c <__snprintf_chk@plt+0x10a4>
   123ac:	bl	1127c <__errno_location@plt>
   123b0:	mov	r5, r0
   123b4:	ldrb	r6, [r4, #4]
   123b8:	cmp	r6, #0
   123bc:	beq	123cc <__snprintf_chk@plt+0x1024>
   123c0:	ldr	r3, [r0]
   123c4:	cmp	r3, #32
   123c8:	beq	1242c <__snprintf_chk@plt+0x1084>
   123cc:	mov	r2, #5
   123d0:	ldr	r1, [pc, #120]	; 12450 <__snprintf_chk@plt+0x10a8>
   123d4:	mov	r0, #0
   123d8:	bl	11120 <dcgettext@plt>
   123dc:	mov	r6, r0
   123e0:	ldr	r0, [r4]
   123e4:	cmp	r0, #0
   123e8:	beq	12418 <__snprintf_chk@plt+0x1070>
   123ec:	ldr	r4, [r5]
   123f0:	bl	13a28 <__snprintf_chk@plt+0x2680>
   123f4:	mov	r3, r0
   123f8:	ldr	r2, [pc, #84]	; 12454 <__snprintf_chk@plt+0x10ac>
   123fc:	mov	r0, #0
   12400:	str	r6, [sp]
   12404:	mov	r1, r4
   12408:	bl	111d4 <error@plt>
   1240c:	ldr	r3, [pc, #68]	; 12458 <__snprintf_chk@plt+0x10b0>
   12410:	ldr	r0, [r3]
   12414:	bl	110cc <_exit@plt>
   12418:	mov	r3, r6
   1241c:	ldr	r2, [pc, #56]	; 1245c <__snprintf_chk@plt+0x10b4>
   12420:	ldr	r1, [r5]
   12424:	bl	111d4 <error@plt>
   12428:	b	1240c <__snprintf_chk@plt+0x1064>
   1242c:	ldr	r3, [pc, #44]	; 12460 <__snprintf_chk@plt+0x10b8>
   12430:	ldr	r0, [r3]
   12434:	bl	147b0 <__snprintf_chk@plt+0x3408>
   12438:	cmp	r0, #0
   1243c:	bne	1240c <__snprintf_chk@plt+0x1064>
   12440:	add	sp, sp, #8
   12444:	pop	{r4, r5, r6, pc}
   12448:	andeq	r6, r2, r4, lsr r3
   1244c:	andeq	r6, r2, ip, asr r3
   12450:	andeq	r5, r1, ip, lsr #14
   12454:	andeq	r5, r1, r8, lsr r7
   12458:	andeq	r6, r2, r8, lsr r1
   1245c:	andeq	r5, r1, ip, lsr r7
   12460:	andeq	r6, r2, r0, lsr r3
   12464:	andeq	r0, r0, r0
   12468:	vldr	d7, [pc, #152]	; 12508 <__snprintf_chk@plt+0x1160>
   1246c:	vcmpe.f64	d0, d7
   12470:	vmrs	APSR_nzcv, fpscr
   12474:	movle	r3, #-2147483648	; 0x80000000
   12478:	strle	r3, [r0]
   1247c:	movle	r3, #0
   12480:	ble	124a0 <__snprintf_chk@plt+0x10f8>
   12484:	vldr	d7, [pc, #132]	; 12510 <__snprintf_chk@plt+0x1168>
   12488:	vcmpe.f64	d0, d7
   1248c:	vmrs	APSR_nzcv, fpscr
   12490:	bmi	124a8 <__snprintf_chk@plt+0x1100>
   12494:	mvn	r3, #-2147483648	; 0x80000000
   12498:	str	r3, [r0]
   1249c:	ldr	r3, [pc, #124]	; 12520 <__snprintf_chk@plt+0x1178>
   124a0:	str	r3, [r0, #4]
   124a4:	bx	lr
   124a8:	vcvt.s32.f64	s15, d0
   124ac:	ldr	ip, [pc, #112]	; 12524 <__snprintf_chk@plt+0x117c>
   124b0:	vcvt.f64.s32	d6, s15
   124b4:	vsub.f64	d0, d0, d6
   124b8:	vldr	d6, [pc, #88]	; 12518 <__snprintf_chk@plt+0x1170>
   124bc:	vmul.f64	d0, d0, d6
   124c0:	vcvt.s32.f64	s14, d0
   124c4:	vcvt.f64.s32	d6, s14
   124c8:	vmov	r2, s14
   124cc:	vcmpe.f64	d6, d0
   124d0:	vmrs	APSR_nzcv, fpscr
   124d4:	movmi	r3, #1
   124d8:	movpl	r3, #0
   124dc:	add	r1, r3, r2
   124e0:	vmov	r2, s15
   124e4:	sdiv	r3, r1, ip
   124e8:	add	r2, r3, r2
   124ec:	mls	r3, ip, r3, r1
   124f0:	cmp	r3, #0
   124f4:	sublt	r2, r2, #1
   124f8:	addlt	r3, r3, ip
   124fc:	str	r2, [r0]
   12500:	b	124a0 <__snprintf_chk@plt+0x10f8>
   12504:	nop	{0}
   12508:	andeq	r0, r0, r0
   1250c:	mvngt	r0, r0
   12510:	andeq	r0, r0, r0
   12514:	mvnmi	r0, r0
   12518:	andeq	r0, r0, r0
   1251c:	bicmi	ip, sp, r5, ror #26
   12520:	blcc	fe6c4d24 <optarg@@GLIBC_2.4+0xfe69e9ec>
   12524:	blcc	fe6c4d2c <optarg@@GLIBC_2.4+0xfe69e9f4>
   12528:	push	{r0, r1, r2, r4, r5, lr}
   1252c:	mov	r5, r0
   12530:	bl	1127c <__errno_location@plt>
   12534:	mov	r4, r0
   12538:	mov	r0, r5
   1253c:	ldr	r3, [r4]
   12540:	str	r3, [sp]
   12544:	str	r3, [sp, #4]
   12548:	mov	r3, #0
   1254c:	str	r3, [r4]
   12550:	bl	110c0 <free@plt>
   12554:	ldr	r3, [r4]
   12558:	add	r2, sp, #8
   1255c:	clz	r3, r3
   12560:	lsr	r3, r3, #5
   12564:	add	r3, r2, r3, lsl #2
   12568:	ldr	r3, [r3, #-8]
   1256c:	str	r3, [r4]
   12570:	add	sp, sp, #12
   12574:	pop	{r4, r5, pc}
   12578:	push	{r4, r5, r6, lr}
   1257c:	subs	r4, r0, #0
   12580:	bne	12598 <__snprintf_chk@plt+0x11f0>
   12584:	ldr	r3, [pc, #124]	; 12608 <__snprintf_chk@plt+0x1260>
   12588:	ldr	r0, [pc, #124]	; 1260c <__snprintf_chk@plt+0x1264>
   1258c:	ldr	r1, [r3]
   12590:	bl	11384 <fputs@plt>
   12594:	bl	1139c <abort@plt>
   12598:	mov	r1, #47	; 0x2f
   1259c:	bl	1133c <strrchr@plt>
   125a0:	subs	r6, r0, #0
   125a4:	beq	125f4 <__snprintf_chk@plt+0x124c>
   125a8:	add	r5, r6, #1
   125ac:	sub	r3, r5, r4
   125b0:	cmp	r3, #6
   125b4:	ble	125f4 <__snprintf_chk@plt+0x124c>
   125b8:	mov	r2, #7
   125bc:	ldr	r1, [pc, #76]	; 12610 <__snprintf_chk@plt+0x1268>
   125c0:	sub	r0, r6, #6
   125c4:	bl	11390 <strncmp@plt>
   125c8:	cmp	r0, #0
   125cc:	bne	125f4 <__snprintf_chk@plt+0x124c>
   125d0:	mov	r2, #3
   125d4:	ldr	r1, [pc, #56]	; 12614 <__snprintf_chk@plt+0x126c>
   125d8:	mov	r0, r5
   125dc:	bl	11390 <strncmp@plt>
   125e0:	cmp	r0, #0
   125e4:	ldreq	r3, [pc, #44]	; 12618 <__snprintf_chk@plt+0x1270>
   125e8:	addeq	r4, r6, #4
   125ec:	movne	r4, r5
   125f0:	streq	r4, [r3]
   125f4:	ldr	r3, [pc, #32]	; 1261c <__snprintf_chk@plt+0x1274>
   125f8:	str	r4, [r3]
   125fc:	ldr	r3, [pc, #28]	; 12620 <__snprintf_chk@plt+0x1278>
   12600:	str	r4, [r3]
   12604:	pop	{r4, r5, r6, pc}
   12608:	andeq	r6, r2, r0, lsr r3
   1260c:	andeq	r5, r1, pc, lsr r7
   12610:	andeq	r5, r1, r7, ror r7
   12614:	andeq	r5, r1, pc, ror r7
   12618:	andeq	r6, r2, r0, lsr #6
   1261c:	andeq	r6, r2, r4, ror #6
   12620:	andeq	r6, r2, r4, lsr #6
   12624:	push	{r4, lr}
   12628:	mov	r2, #48	; 0x30
   1262c:	mov	r4, r1
   12630:	mov	r1, #0
   12634:	bl	112a0 <memset@plt>
   12638:	cmp	r4, #10
   1263c:	bne	12644 <__snprintf_chk@plt+0x129c>
   12640:	bl	1139c <abort@plt>
   12644:	str	r4, [r0]
   12648:	pop	{r4, pc}
   1264c:	push	{r4, r5, r6, lr}
   12650:	mov	r2, #5
   12654:	mov	r6, r0
   12658:	mov	r5, r1
   1265c:	mov	r1, r0
   12660:	mov	r0, #0
   12664:	bl	11120 <dcgettext@plt>
   12668:	cmp	r6, r0
   1266c:	mov	r4, r0
   12670:	bne	126e0 <__snprintf_chk@plt+0x1338>
   12674:	bl	149d8 <__snprintf_chk@plt+0x3630>
   12678:	ldrb	r3, [r0]
   1267c:	bic	r3, r3, #32
   12680:	cmp	r3, #85	; 0x55
   12684:	bne	126e8 <__snprintf_chk@plt+0x1340>
   12688:	ldrb	r3, [r0, #1]
   1268c:	bic	r3, r3, #32
   12690:	cmp	r3, #84	; 0x54
   12694:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12698:	ldrb	r3, [r0, #2]
   1269c:	bic	r3, r3, #32
   126a0:	cmp	r3, #70	; 0x46
   126a4:	bne	12758 <__snprintf_chk@plt+0x13b0>
   126a8:	ldrb	r3, [r0, #3]
   126ac:	cmp	r3, #45	; 0x2d
   126b0:	bne	12758 <__snprintf_chk@plt+0x13b0>
   126b4:	ldrb	r3, [r0, #4]
   126b8:	cmp	r3, #56	; 0x38
   126bc:	bne	12758 <__snprintf_chk@plt+0x13b0>
   126c0:	ldrb	r3, [r0, #5]
   126c4:	cmp	r3, #0
   126c8:	bne	12758 <__snprintf_chk@plt+0x13b0>
   126cc:	ldrb	r2, [r4]
   126d0:	ldr	r3, [pc, #144]	; 12768 <__snprintf_chk@plt+0x13c0>
   126d4:	ldr	r4, [pc, #144]	; 1276c <__snprintf_chk@plt+0x13c4>
   126d8:	cmp	r2, #96	; 0x60
   126dc:	movne	r4, r3
   126e0:	mov	r0, r4
   126e4:	pop	{r4, r5, r6, pc}
   126e8:	cmp	r3, #71	; 0x47
   126ec:	bne	12758 <__snprintf_chk@plt+0x13b0>
   126f0:	ldrb	r3, [r0, #1]
   126f4:	bic	r3, r3, #32
   126f8:	cmp	r3, #66	; 0x42
   126fc:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12700:	ldrb	r3, [r0, #2]
   12704:	cmp	r3, #49	; 0x31
   12708:	bne	12758 <__snprintf_chk@plt+0x13b0>
   1270c:	ldrb	r3, [r0, #3]
   12710:	cmp	r3, #56	; 0x38
   12714:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12718:	ldrb	r3, [r0, #4]
   1271c:	cmp	r3, #48	; 0x30
   12720:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12724:	ldrb	r3, [r0, #5]
   12728:	cmp	r3, #51	; 0x33
   1272c:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12730:	ldrb	r3, [r0, #6]
   12734:	cmp	r3, #48	; 0x30
   12738:	bne	12758 <__snprintf_chk@plt+0x13b0>
   1273c:	ldrb	r3, [r0, #7]
   12740:	cmp	r3, #0
   12744:	bne	12758 <__snprintf_chk@plt+0x13b0>
   12748:	ldrb	r2, [r4]
   1274c:	ldr	r3, [pc, #28]	; 12770 <__snprintf_chk@plt+0x13c8>
   12750:	ldr	r4, [pc, #28]	; 12774 <__snprintf_chk@plt+0x13cc>
   12754:	b	126d8 <__snprintf_chk@plt+0x1330>
   12758:	ldr	r4, [pc, #24]	; 12778 <__snprintf_chk@plt+0x13d0>
   1275c:	cmp	r5, #9
   12760:	ldr	r3, [pc, #20]	; 1277c <__snprintf_chk@plt+0x13d4>
   12764:	b	126dc <__snprintf_chk@plt+0x1334>
   12768:	ldrdeq	r5, [r1], -sl
   1276c:	andeq	r5, r1, r5, ror #15
   12770:	ldrdeq	r5, [r1], -lr
   12774:	andeq	r5, r1, r1, ror #15
   12778:	ldrdeq	r5, [r1], -r8
   1277c:	andeq	r5, r1, r9, ror #15
   12780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12784:	sub	sp, sp, #108	; 0x6c
   12788:	mov	r8, r0
   1278c:	mov	r5, r1
   12790:	mov	r6, #0
   12794:	str	r3, [sp, #40]	; 0x28
   12798:	str	r2, [sp, #48]	; 0x30
   1279c:	ldr	sl, [sp, #144]	; 0x90
   127a0:	bl	11198 <__ctype_get_mb_cur_max@plt>
   127a4:	ldr	r3, [sp, #148]	; 0x94
   127a8:	str	r6, [sp, #24]
   127ac:	str	r6, [sp, #32]
   127b0:	str	r6, [sp, #44]	; 0x2c
   127b4:	str	r6, [sp, #52]	; 0x34
   127b8:	ubfx	r7, r3, #1, #1
   127bc:	mov	r3, #1
   127c0:	str	r6, [sp, #60]	; 0x3c
   127c4:	str	r3, [sp, #72]	; 0x48
   127c8:	str	r0, [sp, #76]	; 0x4c
   127cc:	cmp	sl, #10
   127d0:	ldrls	pc, [pc, sl, lsl #2]
   127d4:	b	12a18 <__snprintf_chk@plt+0x1670>
   127d8:	andeq	r2, r1, r4, lsl #16
   127dc:	andeq	r2, r1, r0, lsr sl
   127e0:			; <UNDEFINED> instruction: 0x000129b4
   127e4:	andeq	r2, r1, ip, asr #19
   127e8:	muleq	r1, ip, r9
   127ec:	strdeq	r2, [r1], -r4
   127f0:	ldrdeq	r2, [r1], -r4
   127f4:	andeq	r2, r1, ip, lsl sl
   127f8:	andeq	r2, r1, r4, lsr #18
   127fc:	andeq	r2, r1, r4, lsr #18
   12800:	andeq	r2, r1, r4, lsr #18
   12804:	mov	r4, sl
   12808:	mov	r7, #0
   1280c:	mov	r9, r5
   12810:	mov	r3, #0
   12814:	str	r6, [sp, #68]	; 0x44
   12818:	str	r3, [sp, #28]
   1281c:	ldr	r3, [sp, #40]	; 0x28
   12820:	cmn	r3, #1
   12824:	bne	133c4 <__snprintf_chk@plt+0x201c>
   12828:	ldr	r2, [sp, #28]
   1282c:	ldr	r3, [sp, #48]	; 0x30
   12830:	ldrb	r3, [r3, r2]
   12834:	adds	r3, r3, #0
   12838:	movne	r3, #1
   1283c:	str	r3, [sp, #36]	; 0x24
   12840:	ldr	r3, [sp, #36]	; 0x24
   12844:	cmp	r3, #0
   12848:	bne	12a54 <__snprintf_chk@plt+0x16ac>
   1284c:	sub	r3, sl, #2
   12850:	cmp	r4, #0
   12854:	clz	r3, r3
   12858:	movne	r2, #0
   1285c:	lsr	r3, r3, #5
   12860:	andeq	r2, r3, r7
   12864:	cmp	r2, #0
   12868:	bne	12c18 <__snprintf_chk@plt+0x1870>
   1286c:	eor	r7, r7, #1
   12870:	ands	r3, r3, r7
   12874:	beq	1343c <__snprintf_chk@plt+0x2094>
   12878:	ldr	r2, [sp, #68]	; 0x44
   1287c:	cmp	r2, #0
   12880:	beq	13404 <__snprintf_chk@plt+0x205c>
   12884:	ldr	r3, [sp, #72]	; 0x48
   12888:	cmp	r3, #0
   1288c:	beq	133d8 <__snprintf_chk@plt+0x2030>
   12890:	ldr	r2, [sp, #48]	; 0x30
   12894:	ldr	r3, [sp, #160]	; 0xa0
   12898:	ldr	r1, [sp, #60]	; 0x3c
   1289c:	str	r3, [sp, #16]
   128a0:	ldr	r3, [sp, #156]	; 0x9c
   128a4:	str	r3, [sp, #12]
   128a8:	ldr	r3, [sp, #152]	; 0x98
   128ac:	str	r3, [sp, #8]
   128b0:	ldr	r3, [sp, #148]	; 0x94
   128b4:	str	r3, [sp, #4]
   128b8:	mov	r3, #5
   128bc:	str	r3, [sp]
   128c0:	ldr	r3, [sp, #40]	; 0x28
   128c4:	mov	r0, r8
   128c8:	bl	12780 <__snprintf_chk@plt+0x13d8>
   128cc:	mov	r4, r0
   128d0:	b	13430 <__snprintf_chk@plt+0x2088>
   128d4:	ldr	r3, [pc, #2948]	; 13460 <__snprintf_chk@plt+0x20b8>
   128d8:	mov	r7, #1
   128dc:	mov	r4, #0
   128e0:	mov	sl, #5
   128e4:	str	r7, [sp, #24]
   128e8:	str	r7, [sp, #32]
   128ec:	str	r3, [sp, #44]	; 0x2c
   128f0:	b	1280c <__snprintf_chk@plt+0x1464>
   128f4:	cmp	r7, #0
   128f8:	bne	12a3c <__snprintf_chk@plt+0x1694>
   128fc:	cmp	r5, #0
   12900:	mov	r4, #1
   12904:	movne	r3, #34	; 0x22
   12908:	strbne	r3, [r8]
   1290c:	mov	r3, #1
   12910:	str	r3, [sp, #24]
   12914:	str	r3, [sp, #32]
   12918:	ldr	r3, [pc, #2880]	; 13460 <__snprintf_chk@plt+0x20b8>
   1291c:	str	r3, [sp, #44]	; 0x2c
   12920:	b	1280c <__snprintf_chk@plt+0x1464>
   12924:	cmp	sl, #10
   12928:	beq	1294c <__snprintf_chk@plt+0x15a4>
   1292c:	mov	r1, sl
   12930:	ldr	r0, [pc, #2860]	; 13464 <__snprintf_chk@plt+0x20bc>
   12934:	bl	1264c <__snprintf_chk@plt+0x12a4>
   12938:	mov	r1, sl
   1293c:	str	r0, [sp, #156]	; 0x9c
   12940:	ldr	r0, [pc, #2848]	; 13468 <__snprintf_chk@plt+0x20c0>
   12944:	bl	1264c <__snprintf_chk@plt+0x12a4>
   12948:	str	r0, [sp, #160]	; 0xa0
   1294c:	cmp	r7, #0
   12950:	moveq	r4, r7
   12954:	beq	1296c <__snprintf_chk@plt+0x15c4>
   12958:	mov	r4, #0
   1295c:	b	1297c <__snprintf_chk@plt+0x15d4>
   12960:	cmp	r5, r4
   12964:	strbhi	r3, [r8, r4]
   12968:	add	r4, r4, #1
   1296c:	ldr	r3, [sp, #156]	; 0x9c
   12970:	ldrb	r3, [r3, r4]
   12974:	cmp	r3, #0
   12978:	bne	12960 <__snprintf_chk@plt+0x15b8>
   1297c:	ldr	r0, [sp, #160]	; 0xa0
   12980:	bl	11258 <strlen@plt>
   12984:	ldr	r3, [sp, #160]	; 0xa0
   12988:	str	r0, [sp, #32]
   1298c:	str	r3, [sp, #44]	; 0x2c
   12990:	mov	r3, #1
   12994:	str	r3, [sp, #24]
   12998:	b	1280c <__snprintf_chk@plt+0x1464>
   1299c:	mov	r3, #1
   129a0:	cmp	r7, #0
   129a4:	streq	r3, [sp, #24]
   129a8:	beq	129ec <__snprintf_chk@plt+0x1644>
   129ac:	str	r3, [sp, #32]
   129b0:	b	129d8 <__snprintf_chk@plt+0x1630>
   129b4:	cmp	r7, #0
   129b8:	beq	129ec <__snprintf_chk@plt+0x1644>
   129bc:	mov	r3, #1
   129c0:	str	r3, [sp, #32]
   129c4:	ldr	r3, [pc, #2716]	; 13468 <__snprintf_chk@plt+0x20c0>
   129c8:	b	12a4c <__snprintf_chk@plt+0x16a4>
   129cc:	mov	r7, #1
   129d0:	str	r7, [sp, #24]
   129d4:	str	r7, [sp, #32]
   129d8:	ldr	r3, [pc, #2696]	; 13468 <__snprintf_chk@plt+0x20c0>
   129dc:	mov	r4, #0
   129e0:	str	r3, [sp, #44]	; 0x2c
   129e4:	mov	sl, #2
   129e8:	b	1280c <__snprintf_chk@plt+0x1464>
   129ec:	cmp	r5, #0
   129f0:	movne	r3, #39	; 0x27
   129f4:	movne	r7, #0
   129f8:	strbne	r3, [r8]
   129fc:	moveq	r7, r5
   12a00:	mov	r3, #1
   12a04:	mov	r4, #1
   12a08:	str	r3, [sp, #32]
   12a0c:	ldr	r3, [pc, #2644]	; 13468 <__snprintf_chk@plt+0x20c0>
   12a10:	str	r3, [sp, #44]	; 0x2c
   12a14:	b	129e4 <__snprintf_chk@plt+0x163c>
   12a18:	bl	1139c <abort@plt>
   12a1c:	mov	r3, #1
   12a20:	mov	r7, #0
   12a24:	str	r3, [sp, #24]
   12a28:	mov	r4, #0
   12a2c:	b	1280c <__snprintf_chk@plt+0x1464>
   12a30:	mov	r7, #1
   12a34:	str	sl, [sp, #32]
   12a38:	b	129d8 <__snprintf_chk@plt+0x1630>
   12a3c:	mov	r3, #1
   12a40:	str	r7, [sp, #24]
   12a44:	str	r3, [sp, #32]
   12a48:	ldr	r3, [pc, #2576]	; 13460 <__snprintf_chk@plt+0x20b8>
   12a4c:	str	r3, [sp, #44]	; 0x2c
   12a50:	b	12a28 <__snprintf_chk@plt+0x1680>
   12a54:	ldr	fp, [sp, #24]
   12a58:	ldr	r3, [sp, #32]
   12a5c:	cmp	sl, #2
   12a60:	moveq	fp, #0
   12a64:	andne	fp, fp, #1
   12a68:	adds	r5, r3, #0
   12a6c:	movne	r5, #1
   12a70:	ands	r3, fp, r5
   12a74:	str	r3, [sp, #64]	; 0x40
   12a78:	beq	12b48 <__snprintf_chk@plt+0x17a0>
   12a7c:	ldr	r3, [sp, #28]
   12a80:	ldr	r2, [sp, #32]
   12a84:	cmp	r2, #1
   12a88:	add	r6, r3, r2
   12a8c:	mov	r3, r2
   12a90:	ldr	r2, [sp, #40]	; 0x28
   12a94:	movls	r3, #0
   12a98:	movhi	r3, #1
   12a9c:	cmn	r2, #1
   12aa0:	movne	r3, #0
   12aa4:	cmp	r3, #0
   12aa8:	beq	12ab8 <__snprintf_chk@plt+0x1710>
   12aac:	ldr	r0, [sp, #48]	; 0x30
   12ab0:	bl	11258 <strlen@plt>
   12ab4:	str	r0, [sp, #40]	; 0x28
   12ab8:	ldr	r3, [sp, #40]	; 0x28
   12abc:	cmp	r6, r3
   12ac0:	bhi	12b40 <__snprintf_chk@plt+0x1798>
   12ac4:	ldr	r0, [sp, #28]
   12ac8:	ldr	r2, [sp, #32]
   12acc:	ldr	r3, [sp, #48]	; 0x30
   12ad0:	ldr	r1, [sp, #44]	; 0x2c
   12ad4:	add	r0, r3, r0
   12ad8:	bl	11108 <memcmp@plt>
   12adc:	cmp	r0, #0
   12ae0:	bne	12b40 <__snprintf_chk@plt+0x1798>
   12ae4:	cmp	r7, #0
   12ae8:	beq	12b48 <__snprintf_chk@plt+0x17a0>
   12aec:	str	r7, [sp, #24]
   12af0:	ldr	r3, [sp, #24]
   12af4:	mov	r1, r9
   12af8:	ldr	r2, [sp, #48]	; 0x30
   12afc:	cmp	sl, #2
   12b00:	movne	r3, #0
   12b04:	andeq	r3, r3, #1
   12b08:	cmp	r3, #0
   12b0c:	ldr	r3, [sp, #160]	; 0xa0
   12b10:	movne	sl, #4
   12b14:	str	sl, [sp]
   12b18:	str	r3, [sp, #16]
   12b1c:	ldr	r3, [sp, #156]	; 0x9c
   12b20:	str	r3, [sp, #12]
   12b24:	mov	r3, #0
   12b28:	str	r3, [sp, #8]
   12b2c:	ldr	r3, [sp, #148]	; 0x94
   12b30:	bic	r3, r3, #2
   12b34:	str	r3, [sp, #4]
   12b38:	ldr	r3, [sp, #40]	; 0x28
   12b3c:	b	128c4 <__snprintf_chk@plt+0x151c>
   12b40:	mov	r3, #0
   12b44:	str	r3, [sp, #64]	; 0x40
   12b48:	ldr	r2, [sp, #28]
   12b4c:	ldr	r3, [sp, #48]	; 0x30
   12b50:	add	r3, r3, r2
   12b54:	str	r3, [sp, #80]	; 0x50
   12b58:	ldr	r3, [sp, #48]	; 0x30
   12b5c:	ldrb	r6, [r3, r2]
   12b60:	cmp	r6, #58	; 0x3a
   12b64:	bhi	12cc8 <__snprintf_chk@plt+0x1920>
   12b68:	cmp	r6, #43	; 0x2b
   12b6c:	bcs	12e88 <__snprintf_chk@plt+0x1ae0>
   12b70:	cmp	r6, #32
   12b74:	beq	12edc <__snprintf_chk@plt+0x1b34>
   12b78:	bhi	12c20 <__snprintf_chk@plt+0x1878>
   12b7c:	cmp	r6, #9
   12b80:	beq	13084 <__snprintf_chk@plt+0x1cdc>
   12b84:	bhi	12be4 <__snprintf_chk@plt+0x183c>
   12b88:	cmp	r6, #7
   12b8c:	beq	13094 <__snprintf_chk@plt+0x1cec>
   12b90:	bhi	130b0 <__snprintf_chk@plt+0x1d08>
   12b94:	cmp	r6, #0
   12b98:	beq	12ef8 <__snprintf_chk@plt+0x1b50>
   12b9c:	ldr	r3, [sp, #76]	; 0x4c
   12ba0:	cmp	r3, #1
   12ba4:	bne	130fc <__snprintf_chk@plt+0x1d54>
   12ba8:	bl	11240 <__ctype_b_loc@plt>
   12bac:	ldr	r2, [r0]
   12bb0:	sxth	r3, r6
   12bb4:	lsl	r3, r3, #1
   12bb8:	ldrh	r5, [r2, r3]
   12bbc:	ldr	r3, [sp, #76]	; 0x4c
   12bc0:	ubfx	r5, r5, #14, #1
   12bc4:	str	r3, [sp, #56]	; 0x38
   12bc8:	ldr	r3, [sp, #24]
   12bcc:	eor	fp, r5, #1
   12bd0:	and	fp, fp, r3
   12bd4:	ands	fp, fp, #255	; 0xff
   12bd8:	beq	12db8 <__snprintf_chk@plt+0x1a10>
   12bdc:	mov	r5, #0
   12be0:	b	131a8 <__snprintf_chk@plt+0x1e00>
   12be4:	cmp	r6, #11
   12be8:	beq	130b8 <__snprintf_chk@plt+0x1d10>
   12bec:	bcc	1308c <__snprintf_chk@plt+0x1ce4>
   12bf0:	cmp	r6, #12
   12bf4:	beq	130c0 <__snprintf_chk@plt+0x1d18>
   12bf8:	cmp	r6, #13
   12bfc:	moveq	r3, #114	; 0x72
   12c00:	bne	12b9c <__snprintf_chk@plt+0x17f4>
   12c04:	cmp	sl, #2
   12c08:	movne	r2, #0
   12c0c:	andeq	r2, r7, #1
   12c10:	cmp	r2, #0
   12c14:	beq	13098 <__snprintf_chk@plt+0x1cf0>
   12c18:	mov	sl, #2
   12c1c:	b	12af0 <__snprintf_chk@plt+0x1748>
   12c20:	cmp	r6, #37	; 0x25
   12c24:	beq	12e88 <__snprintf_chk@plt+0x1ae0>
   12c28:	bhi	12c3c <__snprintf_chk@plt+0x1894>
   12c2c:	cmp	r6, #35	; 0x23
   12c30:	beq	12ed0 <__snprintf_chk@plt+0x1b28>
   12c34:	mov	r5, #0
   12c38:	b	12ee0 <__snprintf_chk@plt+0x1b38>
   12c3c:	cmp	r6, #39	; 0x27
   12c40:	bne	12c34 <__snprintf_chk@plt+0x188c>
   12c44:	cmp	sl, #2
   12c48:	ldrne	r5, [sp, #36]	; 0x24
   12c4c:	movne	r3, r5
   12c50:	strne	r3, [sp, #68]	; 0x44
   12c54:	bne	12fd4 <__snprintf_chk@plt+0x1c2c>
   12c58:	cmp	r7, #0
   12c5c:	bne	12af0 <__snprintf_chk@plt+0x1748>
   12c60:	ldr	r3, [sp, #60]	; 0x3c
   12c64:	cmp	r9, #0
   12c68:	clz	r3, r3
   12c6c:	lsr	r3, r3, #5
   12c70:	moveq	r3, #0
   12c74:	cmp	r3, #0
   12c78:	strne	r9, [sp, #60]	; 0x3c
   12c7c:	movne	r9, #0
   12c80:	bne	12c90 <__snprintf_chk@plt+0x18e8>
   12c84:	cmp	r9, r4
   12c88:	movhi	r3, #39	; 0x27
   12c8c:	strbhi	r3, [r8, r4]
   12c90:	add	r3, r4, #1
   12c94:	ldr	r5, [sp, #36]	; 0x24
   12c98:	mov	fp, #0
   12c9c:	cmp	r3, r9
   12ca0:	movcc	r2, #92	; 0x5c
   12ca4:	str	fp, [sp, #52]	; 0x34
   12ca8:	strbcc	r2, [r8, r3]
   12cac:	add	r3, r4, #2
   12cb0:	add	r4, r4, #3
   12cb4:	cmp	r3, r9
   12cb8:	str	r5, [sp, #68]	; 0x44
   12cbc:	movcc	r2, #39	; 0x27
   12cc0:	strbcc	r2, [r8, r3]
   12cc4:	b	12db8 <__snprintf_chk@plt+0x1a10>
   12cc8:	cmp	r6, #94	; 0x5e
   12ccc:	beq	12c34 <__snprintf_chk@plt+0x188c>
   12cd0:	bhi	12e90 <__snprintf_chk@plt+0x1ae8>
   12cd4:	cmp	r6, #90	; 0x5a
   12cd8:	bhi	12e7c <__snprintf_chk@plt+0x1ad4>
   12cdc:	cmp	r6, #65	; 0x41
   12ce0:	bcs	12e88 <__snprintf_chk@plt+0x1ae0>
   12ce4:	cmp	r6, #62	; 0x3e
   12ce8:	bls	12c34 <__snprintf_chk@plt+0x188c>
   12cec:	cmp	r6, #63	; 0x3f
   12cf0:	bne	12b9c <__snprintf_chk@plt+0x17f4>
   12cf4:	cmp	sl, #2
   12cf8:	beq	12fdc <__snprintf_chk@plt+0x1c34>
   12cfc:	cmp	sl, #5
   12d00:	movne	fp, #0
   12d04:	bne	133ac <__snprintf_chk@plt+0x2004>
   12d08:	ldr	r3, [sp, #148]	; 0x94
   12d0c:	tst	r3, #4
   12d10:	beq	12fe4 <__snprintf_chk@plt+0x1c3c>
   12d14:	ldr	r3, [sp, #28]
   12d18:	add	r2, r3, #2
   12d1c:	ldr	r3, [sp, #40]	; 0x28
   12d20:	cmp	r2, r3
   12d24:	bcs	12fe4 <__snprintf_chk@plt+0x1c3c>
   12d28:	ldr	r1, [sp, #28]
   12d2c:	ldr	r3, [sp, #48]	; 0x30
   12d30:	add	r3, r3, r1
   12d34:	ldrb	r1, [r3, #1]
   12d38:	cmp	r1, #63	; 0x3f
   12d3c:	bne	12fe4 <__snprintf_chk@plt+0x1c3c>
   12d40:	ldr	r3, [sp, #48]	; 0x30
   12d44:	ldrb	r6, [r3, r2]
   12d48:	sub	r3, r6, #33	; 0x21
   12d4c:	uxtb	r3, r3
   12d50:	cmp	r3, #29
   12d54:	bhi	133b4 <__snprintf_chk@plt+0x200c>
   12d58:	ldr	r0, [pc, #1804]	; 1346c <__snprintf_chk@plt+0x20c4>
   12d5c:	mov	r5, #1
   12d60:	ands	r5, r0, r5, lsl r3
   12d64:	beq	133bc <__snprintf_chk@plt+0x2014>
   12d68:	cmp	r7, #0
   12d6c:	bne	12af0 <__snprintf_chk@plt+0x1748>
   12d70:	cmp	r9, r4
   12d74:	add	r3, r4, #1
   12d78:	str	r2, [sp, #28]
   12d7c:	mov	r5, #0
   12d80:	strbhi	r1, [r8, r4]
   12d84:	cmp	r9, r3
   12d88:	mov	fp, r5
   12d8c:	movhi	r1, #34	; 0x22
   12d90:	strbhi	r1, [r8, r3]
   12d94:	add	r3, r4, #2
   12d98:	cmp	r9, r3
   12d9c:	movhi	r1, #34	; 0x22
   12da0:	strbhi	r1, [r8, r3]
   12da4:	add	r3, r4, #3
   12da8:	add	r4, r4, #4
   12dac:	cmp	r9, r3
   12db0:	movhi	r1, #63	; 0x3f
   12db4:	strbhi	r1, [r8, r3]
   12db8:	ldr	r3, [sp, #24]
   12dbc:	eor	r3, r3, #1
   12dc0:	cmp	sl, #2
   12dc4:	orreq	r3, r3, #1
   12dc8:	eor	r3, r3, #1
   12dcc:	orr	r3, r7, r3
   12dd0:	tst	r3, #255	; 0xff
   12dd4:	beq	12e00 <__snprintf_chk@plt+0x1a58>
   12dd8:	ldr	r3, [sp, #152]	; 0x98
   12ddc:	cmp	r3, #0
   12de0:	beq	12e00 <__snprintf_chk@plt+0x1a58>
   12de4:	ldr	r1, [sp, #152]	; 0x98
   12de8:	ubfx	r2, r6, #5, #8
   12dec:	and	r3, r6, #31
   12df0:	ldr	r2, [r1, r2, lsl #2]
   12df4:	lsr	r3, r2, r3
   12df8:	tst	r3, #1
   12dfc:	bne	12e0c <__snprintf_chk@plt+0x1a64>
   12e00:	ldr	r3, [sp, #64]	; 0x40
   12e04:	cmp	r3, #0
   12e08:	beq	13004 <__snprintf_chk@plt+0x1c5c>
   12e0c:	sub	r3, sl, #2
   12e10:	cmp	r7, #0
   12e14:	clz	r3, r3
   12e18:	lsr	r3, r3, #5
   12e1c:	bne	12af0 <__snprintf_chk@plt+0x1748>
   12e20:	ldr	r2, [sp, #52]	; 0x34
   12e24:	eor	r2, r2, #1
   12e28:	ands	r3, r3, r2
   12e2c:	beq	12e64 <__snprintf_chk@plt+0x1abc>
   12e30:	cmp	r9, r4
   12e34:	str	r3, [sp, #52]	; 0x34
   12e38:	movhi	r2, #39	; 0x27
   12e3c:	strbhi	r2, [r8, r4]
   12e40:	add	r2, r4, #1
   12e44:	cmp	r9, r2
   12e48:	movhi	r1, #36	; 0x24
   12e4c:	strbhi	r1, [r8, r2]
   12e50:	add	r2, r4, #2
   12e54:	add	r4, r4, #3
   12e58:	cmp	r9, r2
   12e5c:	movhi	r1, #39	; 0x27
   12e60:	strbhi	r1, [r8, r2]
   12e64:	cmp	r9, r4
   12e68:	ldr	fp, [sp, #36]	; 0x24
   12e6c:	movhi	r3, #92	; 0x5c
   12e70:	strbhi	r3, [r8, r4]
   12e74:	add	r4, r4, #1
   12e78:	b	13004 <__snprintf_chk@plt+0x1c5c>
   12e7c:	cmp	r6, #92	; 0x5c
   12e80:	beq	12fec <__snprintf_chk@plt+0x1c44>
   12e84:	bls	12c34 <__snprintf_chk@plt+0x188c>
   12e88:	ldr	r5, [sp, #36]	; 0x24
   12e8c:	b	12fd4 <__snprintf_chk@plt+0x1c2c>
   12e90:	cmp	r6, #122	; 0x7a
   12e94:	bhi	12eb4 <__snprintf_chk@plt+0x1b0c>
   12e98:	cmp	r6, #97	; 0x61
   12e9c:	bcs	12e88 <__snprintf_chk@plt+0x1ae0>
   12ea0:	cmp	r6, #95	; 0x5f
   12ea4:	beq	12e88 <__snprintf_chk@plt+0x1ae0>
   12ea8:	cmp	r6, #96	; 0x60
   12eac:	bne	12b9c <__snprintf_chk@plt+0x17f4>
   12eb0:	b	12c34 <__snprintf_chk@plt+0x188c>
   12eb4:	cmp	r6, #124	; 0x7c
   12eb8:	beq	12c34 <__snprintf_chk@plt+0x188c>
   12ebc:	bcc	130c8 <__snprintf_chk@plt+0x1d20>
   12ec0:	cmp	r6, #125	; 0x7d
   12ec4:	beq	130c8 <__snprintf_chk@plt+0x1d20>
   12ec8:	cmp	r6, #126	; 0x7e
   12ecc:	bne	12b9c <__snprintf_chk@plt+0x17f4>
   12ed0:	ldr	r3, [sp, #28]
   12ed4:	cmp	r3, #0
   12ed8:	bne	12fe4 <__snprintf_chk@plt+0x1c3c>
   12edc:	ldr	r5, [sp, #36]	; 0x24
   12ee0:	cmp	sl, #2
   12ee4:	movne	fp, #0
   12ee8:	andeq	fp, r7, #1
   12eec:	cmp	fp, #0
   12ef0:	beq	12db8 <__snprintf_chk@plt+0x1a10>
   12ef4:	b	12c18 <__snprintf_chk@plt+0x1870>
   12ef8:	ldr	r3, [sp, #24]
   12efc:	cmp	r3, #0
   12f00:	beq	12fc8 <__snprintf_chk@plt+0x1c20>
   12f04:	sub	r2, sl, #2
   12f08:	cmp	r7, #0
   12f0c:	clz	r2, r2
   12f10:	lsr	r2, r2, #5
   12f14:	bne	12aec <__snprintf_chk@plt+0x1744>
   12f18:	ldr	r3, [sp, #52]	; 0x34
   12f1c:	eor	r3, r3, #1
   12f20:	ands	r2, r2, r3
   12f24:	moveq	r3, r4
   12f28:	beq	12f60 <__snprintf_chk@plt+0x1bb8>
   12f2c:	cmp	r9, r4
   12f30:	str	r2, [sp, #52]	; 0x34
   12f34:	movhi	r3, #39	; 0x27
   12f38:	strbhi	r3, [r8, r4]
   12f3c:	add	r3, r4, #1
   12f40:	cmp	r9, r3
   12f44:	movhi	r1, #36	; 0x24
   12f48:	strbhi	r1, [r8, r3]
   12f4c:	add	r3, r4, #2
   12f50:	cmp	r9, r3
   12f54:	movhi	r1, #39	; 0x27
   12f58:	strbhi	r1, [r8, r3]
   12f5c:	add	r3, r4, #3
   12f60:	cmp	r9, r3
   12f64:	add	r4, r3, #1
   12f68:	movhi	r2, #92	; 0x5c
   12f6c:	strbhi	r2, [r8, r3]
   12f70:	cmp	fp, #0
   12f74:	beq	1339c <__snprintf_chk@plt+0x1ff4>
   12f78:	ldr	r2, [sp, #28]
   12f7c:	ldr	r1, [sp, #40]	; 0x28
   12f80:	add	r2, r2, #1
   12f84:	cmp	r2, r1
   12f88:	bcs	12fc0 <__snprintf_chk@plt+0x1c18>
   12f8c:	ldr	r1, [sp, #48]	; 0x30
   12f90:	mov	r6, #48	; 0x30
   12f94:	ldrb	r2, [r1, r2]
   12f98:	sub	r2, r2, #48	; 0x30
   12f9c:	cmp	r2, #9
   12fa0:	bhi	133ac <__snprintf_chk@plt+0x2004>
   12fa4:	cmp	r9, r4
   12fa8:	add	r2, r3, #2
   12fac:	strbhi	r6, [r8, r4]
   12fb0:	cmp	r9, r2
   12fb4:	add	r4, r3, #3
   12fb8:	movhi	r1, #48	; 0x30
   12fbc:	strbhi	r1, [r8, r2]
   12fc0:	mov	r5, #0
   12fc4:	b	133a4 <__snprintf_chk@plt+0x1ffc>
   12fc8:	ldr	r3, [sp, #148]	; 0x94
   12fcc:	ands	r5, r3, #1
   12fd0:	bne	13058 <__snprintf_chk@plt+0x1cb0>
   12fd4:	mov	fp, #0
   12fd8:	b	12db8 <__snprintf_chk@plt+0x1a10>
   12fdc:	cmp	r7, #0
   12fe0:	bne	12af0 <__snprintf_chk@plt+0x1748>
   12fe4:	mov	r5, #0
   12fe8:	b	12fd4 <__snprintf_chk@plt+0x1c2c>
   12fec:	cmp	sl, #2
   12ff0:	bne	13064 <__snprintf_chk@plt+0x1cbc>
   12ff4:	cmp	r7, #0
   12ff8:	bne	12af0 <__snprintf_chk@plt+0x1748>
   12ffc:	mov	r5, r7
   13000:	mov	fp, r7
   13004:	ldr	r3, [sp, #52]	; 0x34
   13008:	eor	fp, fp, #1
   1300c:	tst	r3, fp
   13010:	beq	1303c <__snprintf_chk@plt+0x1c94>
   13014:	cmp	r9, r4
   13018:	movhi	r3, #39	; 0x27
   1301c:	strbhi	r3, [r8, r4]
   13020:	add	r3, r4, #1
   13024:	add	r4, r4, #2
   13028:	cmp	r9, r3
   1302c:	movhi	r2, #39	; 0x27
   13030:	strbhi	r2, [r8, r3]
   13034:	mov	r3, #0
   13038:	str	r3, [sp, #52]	; 0x34
   1303c:	cmp	r9, r4
   13040:	ldr	r3, [sp, #72]	; 0x48
   13044:	strbhi	r6, [r8, r4]
   13048:	cmp	r5, #0
   1304c:	add	r4, r4, #1
   13050:	moveq	r3, #0
   13054:	str	r3, [sp, #72]	; 0x48
   13058:	ldr	r3, [sp, #28]
   1305c:	add	r3, r3, #1
   13060:	b	12818 <__snprintf_chk@plt+0x1470>
   13064:	ldr	r3, [sp, #24]
   13068:	and	r3, r3, r7
   1306c:	tst	r5, r3
   13070:	moveq	r3, r6
   13074:	beq	12c04 <__snprintf_chk@plt+0x185c>
   13078:	mov	fp, #0
   1307c:	mov	r5, fp
   13080:	b	13004 <__snprintf_chk@plt+0x1c5c>
   13084:	mov	r3, #116	; 0x74
   13088:	b	12c04 <__snprintf_chk@plt+0x185c>
   1308c:	mov	r3, #110	; 0x6e
   13090:	b	12c04 <__snprintf_chk@plt+0x185c>
   13094:	mov	r3, #97	; 0x61
   13098:	ldr	r2, [sp, #24]
   1309c:	cmp	r2, #0
   130a0:	beq	12fe4 <__snprintf_chk@plt+0x1c3c>
   130a4:	mov	r6, r3
   130a8:	mov	r5, #0
   130ac:	b	12e0c <__snprintf_chk@plt+0x1a64>
   130b0:	mov	r3, #98	; 0x62
   130b4:	b	13098 <__snprintf_chk@plt+0x1cf0>
   130b8:	mov	r3, #118	; 0x76
   130bc:	b	13098 <__snprintf_chk@plt+0x1cf0>
   130c0:	mov	r3, #102	; 0x66
   130c4:	b	13098 <__snprintf_chk@plt+0x1cf0>
   130c8:	ldr	r3, [sp, #40]	; 0x28
   130cc:	cmn	r3, #1
   130d0:	bne	130f0 <__snprintf_chk@plt+0x1d48>
   130d4:	ldr	r3, [sp, #48]	; 0x30
   130d8:	ldrb	r3, [r3, #1]
   130dc:	adds	r3, r3, #0
   130e0:	movne	r3, #1
   130e4:	cmp	r3, #0
   130e8:	bne	12fe4 <__snprintf_chk@plt+0x1c3c>
   130ec:	b	12ed0 <__snprintf_chk@plt+0x1b28>
   130f0:	ldr	r3, [sp, #40]	; 0x28
   130f4:	subs	r3, r3, #1
   130f8:	b	130e0 <__snprintf_chk@plt+0x1d38>
   130fc:	mov	r3, #0
   13100:	mov	r2, #0
   13104:	strd	r2, [sp, #96]	; 0x60
   13108:	ldr	r3, [sp, #40]	; 0x28
   1310c:	cmn	r3, #1
   13110:	bne	13120 <__snprintf_chk@plt+0x1d78>
   13114:	ldr	r0, [sp, #48]	; 0x30
   13118:	bl	11258 <strlen@plt>
   1311c:	str	r0, [sp, #40]	; 0x28
   13120:	ldr	r5, [sp, #36]	; 0x24
   13124:	mov	r3, #0
   13128:	str	r3, [sp, #56]	; 0x38
   1312c:	ldr	r3, [sp, #28]
   13130:	add	r0, sp, #92	; 0x5c
   13134:	ldr	r1, [sp, #40]	; 0x28
   13138:	ldr	r2, [sp, #56]	; 0x38
   1313c:	add	r2, r3, r2
   13140:	ldr	r3, [sp, #48]	; 0x30
   13144:	add	fp, r3, r2
   13148:	sub	r2, r1, r2
   1314c:	add	r3, sp, #96	; 0x60
   13150:	mov	r1, fp
   13154:	bl	14a0c <__snprintf_chk@plt+0x3664>
   13158:	subs	r2, r0, #0
   1315c:	beq	1319c <__snprintf_chk@plt+0x1df4>
   13160:	cmn	r2, #1
   13164:	beq	13370 <__snprintf_chk@plt+0x1fc8>
   13168:	cmn	r2, #2
   1316c:	bne	132e0 <__snprintf_chk@plt+0x1f38>
   13170:	ldr	r3, [sp, #28]
   13174:	ldr	r2, [sp, #56]	; 0x38
   13178:	add	r3, r3, r2
   1317c:	ldr	r2, [sp, #40]	; 0x28
   13180:	cmp	r2, r3
   13184:	bls	13370 <__snprintf_chk@plt+0x1fc8>
   13188:	ldr	r2, [sp, #56]	; 0x38
   1318c:	ldr	r3, [sp, #80]	; 0x50
   13190:	ldrb	r5, [r3, r2]
   13194:	cmp	r5, #0
   13198:	bne	132d0 <__snprintf_chk@plt+0x1f28>
   1319c:	ldr	r3, [sp, #56]	; 0x38
   131a0:	cmp	r3, #1
   131a4:	bls	12bc8 <__snprintf_chk@plt+0x1820>
   131a8:	ldr	r3, [sp, #28]
   131ac:	mov	fp, #0
   131b0:	mov	ip, #92	; 0x5c
   131b4:	ldr	r2, [sp, #56]	; 0x38
   131b8:	add	r3, r3, r2
   131bc:	ldr	r2, [sp, #24]
   131c0:	str	r3, [sp, #36]	; 0x24
   131c4:	eor	r3, r5, #1
   131c8:	and	r3, r3, r2
   131cc:	mov	r2, #39	; 0x27
   131d0:	uxtb	r3, r3
   131d4:	cmp	r3, #0
   131d8:	beq	13378 <__snprintf_chk@plt+0x1fd0>
   131dc:	sub	r0, sl, #2
   131e0:	cmp	r7, #0
   131e4:	clz	r0, r0
   131e8:	lsr	r0, r0, #5
   131ec:	bne	12aec <__snprintf_chk@plt+0x1744>
   131f0:	ldr	r1, [sp, #52]	; 0x34
   131f4:	eor	r1, r1, #1
   131f8:	ands	r1, r0, r1
   131fc:	beq	1322c <__snprintf_chk@plt+0x1e84>
   13200:	cmp	r9, r4
   13204:	add	r0, r4, #1
   13208:	str	r1, [sp, #52]	; 0x34
   1320c:	strbhi	r2, [r8, r4]
   13210:	cmp	r9, r0
   13214:	movhi	lr, #36	; 0x24
   13218:	strbhi	lr, [r8, r0]
   1321c:	add	r0, r4, #2
   13220:	add	r4, r4, #3
   13224:	cmp	r9, r0
   13228:	strbhi	r2, [r8, r0]
   1322c:	cmp	r9, r4
   13230:	add	r0, r4, #1
   13234:	mov	fp, r3
   13238:	strbhi	ip, [r8, r4]
   1323c:	cmp	r9, r0
   13240:	lsrhi	r1, r6, #6
   13244:	addhi	r1, r1, #48	; 0x30
   13248:	strbhi	r1, [r8, r0]
   1324c:	add	r0, r4, #2
   13250:	add	r4, r4, #3
   13254:	cmp	r9, r0
   13258:	ubfxhi	r1, r6, #3, #3
   1325c:	and	r6, r6, #7
   13260:	add	r6, r6, #48	; 0x30
   13264:	addhi	r1, r1, #48	; 0x30
   13268:	strbhi	r1, [r8, r0]
   1326c:	eor	r0, fp, #1
   13270:	ldr	r1, [sp, #28]
   13274:	ldr	lr, [sp, #52]	; 0x34
   13278:	add	r1, r1, #1
   1327c:	and	r0, r0, lr
   13280:	ldr	lr, [sp, #36]	; 0x24
   13284:	cmp	r1, lr
   13288:	bcs	13004 <__snprintf_chk@plt+0x1c5c>
   1328c:	cmp	r0, #0
   13290:	beq	132b4 <__snprintf_chk@plt+0x1f0c>
   13294:	cmp	r9, r4
   13298:	add	r0, r4, #1
   1329c:	strbhi	r2, [r8, r4]
   132a0:	cmp	r9, r0
   132a4:	add	r4, r4, #2
   132a8:	strbhi	r2, [r8, r0]
   132ac:	mov	r0, #0
   132b0:	str	r0, [sp, #52]	; 0x34
   132b4:	ldr	r0, [sp, #48]	; 0x30
   132b8:	cmp	r9, r4
   132bc:	str	r1, [sp, #28]
   132c0:	strbhi	r6, [r8, r4]
   132c4:	add	r4, r4, #1
   132c8:	ldrb	r6, [r0, r1]
   132cc:	b	131d4 <__snprintf_chk@plt+0x1e2c>
   132d0:	ldr	r3, [sp, #56]	; 0x38
   132d4:	add	r3, r3, #1
   132d8:	str	r3, [sp, #56]	; 0x38
   132dc:	b	13170 <__snprintf_chk@plt+0x1dc8>
   132e0:	cmp	sl, #2
   132e4:	movne	r3, #0
   132e8:	andeq	r3, r7, #1
   132ec:	cmp	r3, #0
   132f0:	movne	r1, #1
   132f4:	bne	13350 <__snprintf_chk@plt+0x1fa8>
   132f8:	ldr	r0, [sp, #92]	; 0x5c
   132fc:	str	r2, [sp, #84]	; 0x54
   13300:	bl	1115c <iswprint@plt>
   13304:	ldr	r3, [sp, #56]	; 0x38
   13308:	cmp	r0, #0
   1330c:	add	r0, sp, #96	; 0x60
   13310:	moveq	r5, #0
   13314:	ldr	r2, [sp, #84]	; 0x54
   13318:	add	r3, r3, r2
   1331c:	str	r3, [sp, #56]	; 0x38
   13320:	bl	110f0 <mbsinit@plt>
   13324:	cmp	r0, #0
   13328:	beq	1312c <__snprintf_chk@plt+0x1d84>
   1332c:	b	1319c <__snprintf_chk@plt+0x1df4>
   13330:	ldrb	r3, [fp, #1]!
   13334:	cmp	r3, #94	; 0x5e
   13338:	beq	12c18 <__snprintf_chk@plt+0x1870>
   1333c:	bhi	1335c <__snprintf_chk@plt+0x1fb4>
   13340:	sub	r3, r3, #91	; 0x5b
   13344:	cmp	r3, #1
   13348:	bls	12c18 <__snprintf_chk@plt+0x1870>
   1334c:	add	r1, r1, #1
   13350:	cmp	r1, r2
   13354:	bne	13330 <__snprintf_chk@plt+0x1f88>
   13358:	b	132f8 <__snprintf_chk@plt+0x1f50>
   1335c:	cmp	r3, #96	; 0x60
   13360:	beq	12c18 <__snprintf_chk@plt+0x1870>
   13364:	cmp	r3, #124	; 0x7c
   13368:	bne	1334c <__snprintf_chk@plt+0x1fa4>
   1336c:	b	12c18 <__snprintf_chk@plt+0x1870>
   13370:	mov	r5, #0
   13374:	b	1319c <__snprintf_chk@plt+0x1df4>
   13378:	ldr	r1, [sp, #64]	; 0x40
   1337c:	cmp	r1, #0
   13380:	beq	1326c <__snprintf_chk@plt+0x1ec4>
   13384:	cmp	r9, r4
   13388:	mov	r1, #0
   1338c:	strbhi	ip, [r8, r4]
   13390:	add	r4, r4, #1
   13394:	str	r1, [sp, #64]	; 0x40
   13398:	b	1326c <__snprintf_chk@plt+0x1ec4>
   1339c:	mov	r5, fp
   133a0:	ldr	fp, [sp, #24]
   133a4:	mov	r6, #48	; 0x30
   133a8:	b	12db8 <__snprintf_chk@plt+0x1a10>
   133ac:	mov	r5, #0
   133b0:	b	12db8 <__snprintf_chk@plt+0x1a10>
   133b4:	mov	r6, r1
   133b8:	b	12fe4 <__snprintf_chk@plt+0x1c3c>
   133bc:	mov	r6, r1
   133c0:	b	12fd4 <__snprintf_chk@plt+0x1c2c>
   133c4:	ldr	r2, [sp, #28]
   133c8:	ldr	r3, [sp, #40]	; 0x28
   133cc:	subs	r3, r3, r2
   133d0:	movne	r3, #1
   133d4:	b	1283c <__snprintf_chk@plt+0x1494>
   133d8:	ldr	r3, [sp, #60]	; 0x3c
   133dc:	mov	sl, #2
   133e0:	ldr	r7, [sp, #72]	; 0x48
   133e4:	adds	r6, r3, #0
   133e8:	mov	r5, r3
   133ec:	movne	r6, #1
   133f0:	cmp	r9, #0
   133f4:	movne	r6, #0
   133f8:	cmp	r6, #0
   133fc:	bne	127cc <__snprintf_chk@plt+0x1424>
   13400:	ldr	r3, [sp, #68]	; 0x44
   13404:	ldr	r2, [sp, #44]	; 0x2c
   13408:	cmp	r2, #0
   1340c:	moveq	r3, #0
   13410:	andne	r3, r3, #1
   13414:	cmp	r3, #0
   13418:	movne	r3, r2
   1341c:	subne	r3, r3, #1
   13420:	bne	13450 <__snprintf_chk@plt+0x20a8>
   13424:	cmp	r9, r4
   13428:	movhi	r3, #0
   1342c:	strbhi	r3, [r8, r4]
   13430:	mov	r0, r4
   13434:	add	sp, sp, #108	; 0x6c
   13438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1343c:	mov	r3, r7
   13440:	b	13404 <__snprintf_chk@plt+0x205c>
   13444:	cmp	r9, r4
   13448:	strbhi	r2, [r8, r4]
   1344c:	add	r4, r4, #1
   13450:	ldrb	r2, [r3, #1]!
   13454:	cmp	r2, #0
   13458:	bne	13444 <__snprintf_chk@plt+0x209c>
   1345c:	b	13424 <__snprintf_chk@plt+0x207c>
   13460:	ldrdeq	r5, [r1], -r8
   13464:	andeq	r5, r1, fp, ror #15
   13468:	andeq	r5, r1, r9, ror #15
   1346c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13474:	sub	sp, sp, #52	; 0x34
   13478:	mov	r6, r0
   1347c:	mov	r5, r3
   13480:	mov	r8, r1
   13484:	mov	r9, r2
   13488:	bl	1127c <__errno_location@plt>
   1348c:	ldr	r3, [r0]
   13490:	cmn	r6, #-2147483647	; 0x80000001
   13494:	str	r0, [sp, #24]
   13498:	ldr	r7, [pc, #368]	; 13610 <__snprintf_chk@plt+0x2268>
   1349c:	str	r3, [sp, #32]
   134a0:	movne	r3, #0
   134a4:	moveq	r3, #1
   134a8:	orrs	r3, r3, r6, lsr #31
   134ac:	ldr	r4, [r7]
   134b0:	beq	134b8 <__snprintf_chk@plt+0x2110>
   134b4:	bl	1139c <abort@plt>
   134b8:	ldr	r2, [r7, #4]
   134bc:	cmp	r2, r6
   134c0:	bgt	13530 <__snprintf_chk@plt+0x2188>
   134c4:	add	sl, r7, #8
   134c8:	mov	r3, #8
   134cc:	cmp	r4, sl
   134d0:	add	r1, sp, #44	; 0x2c
   134d4:	str	r2, [sp, #44]	; 0x2c
   134d8:	sub	r2, r6, r2
   134dc:	movne	r0, r4
   134e0:	moveq	r0, #0
   134e4:	add	r2, r2, #1
   134e8:	str	r3, [sp]
   134ec:	mvn	r3, #-2147483648	; 0x80000000
   134f0:	bl	1441c <__snprintf_chk@plt+0x3074>
   134f4:	cmp	r4, sl
   134f8:	mov	fp, r0
   134fc:	str	r0, [r7]
   13500:	ldmeq	r4, {r0, r1}
   13504:	mov	r4, fp
   13508:	ldr	r2, [sp, #44]	; 0x2c
   1350c:	stmeq	fp, {r0, r1}
   13510:	mov	r1, #0
   13514:	ldr	r0, [r7, #4]
   13518:	sub	r2, r2, r0
   1351c:	add	r0, fp, r0, lsl #3
   13520:	lsl	r2, r2, #3
   13524:	bl	112a0 <memset@plt>
   13528:	ldr	r3, [sp, #44]	; 0x2c
   1352c:	str	r3, [r7, #4]
   13530:	ldr	r3, [r5, #4]
   13534:	add	sl, r4, r6, lsl #3
   13538:	mov	r2, r8
   1353c:	ldr	fp, [r4, r6, lsl #3]
   13540:	ldr	r7, [sl, #4]
   13544:	orr	r3, r3, #1
   13548:	str	r3, [sp, #28]
   1354c:	add	r3, r5, #8
   13550:	mov	r1, fp
   13554:	str	r3, [sp, #36]	; 0x24
   13558:	mov	r0, r7
   1355c:	ldr	r3, [r5, #44]	; 0x2c
   13560:	str	r3, [sp, #16]
   13564:	ldr	r3, [r5, #40]	; 0x28
   13568:	str	r3, [sp, #12]
   1356c:	add	r3, r5, #8
   13570:	str	r3, [sp, #8]
   13574:	ldr	r3, [sp, #28]
   13578:	str	r3, [sp, #4]
   1357c:	ldr	r3, [r5]
   13580:	str	r3, [sp]
   13584:	mov	r3, r9
   13588:	bl	12780 <__snprintf_chk@plt+0x13d8>
   1358c:	cmp	fp, r0
   13590:	bhi	135f8 <__snprintf_chk@plt+0x2250>
   13594:	ldr	r3, [pc, #120]	; 13614 <__snprintf_chk@plt+0x226c>
   13598:	add	fp, r0, #1
   1359c:	str	fp, [r4, r6, lsl #3]
   135a0:	cmp	r7, r3
   135a4:	beq	135b0 <__snprintf_chk@plt+0x2208>
   135a8:	mov	r0, r7
   135ac:	bl	12528 <__snprintf_chk@plt+0x1180>
   135b0:	mov	r0, fp
   135b4:	bl	1430c <__snprintf_chk@plt+0x2f64>
   135b8:	ldr	r3, [r5, #44]	; 0x2c
   135bc:	mov	r2, r8
   135c0:	mov	r1, fp
   135c4:	str	r0, [sl, #4]
   135c8:	mov	r7, r0
   135cc:	str	r3, [sp, #16]
   135d0:	ldr	r3, [r5, #40]	; 0x28
   135d4:	str	r3, [sp, #12]
   135d8:	add	r3, r5, #8
   135dc:	str	r3, [sp, #8]
   135e0:	ldr	r3, [sp, #28]
   135e4:	str	r3, [sp, #4]
   135e8:	ldr	r3, [r5]
   135ec:	str	r3, [sp]
   135f0:	mov	r3, r9
   135f4:	bl	12780 <__snprintf_chk@plt+0x13d8>
   135f8:	ldr	r3, [sp, #24]
   135fc:	mov	r0, r7
   13600:	ldr	r2, [sp, #32]
   13604:	str	r2, [r3]
   13608:	add	sp, sp, #52	; 0x34
   1360c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13610:	andeq	r6, r2, ip, lsr r1
   13614:	andeq	r6, r2, r8, ror #6
   13618:	push	{r4, r5, r6, lr}
   1361c:	mov	r5, r0
   13620:	bl	1127c <__errno_location@plt>
   13624:	mov	r4, r0
   13628:	cmp	r5, #0
   1362c:	ldr	r0, [pc, #20]	; 13648 <__snprintf_chk@plt+0x22a0>
   13630:	mov	r1, #48	; 0x30
   13634:	movne	r0, r5
   13638:	ldr	r6, [r4]
   1363c:	bl	1450c <__snprintf_chk@plt+0x3164>
   13640:	str	r6, [r4]
   13644:	pop	{r4, r5, r6, pc}
   13648:	andeq	r6, r2, r8, ror #8
   1364c:	ldr	r3, [pc, #12]	; 13660 <__snprintf_chk@plt+0x22b8>
   13650:	cmp	r0, #0
   13654:	moveq	r0, r3
   13658:	ldr	r0, [r0]
   1365c:	bx	lr
   13660:	andeq	r6, r2, r8, ror #8
   13664:	ldr	r3, [pc, #12]	; 13678 <__snprintf_chk@plt+0x22d0>
   13668:	cmp	r0, #0
   1366c:	moveq	r0, r3
   13670:	str	r1, [r0]
   13674:	bx	lr
   13678:	andeq	r6, r2, r8, ror #8
   1367c:	ldr	r3, [pc, #52]	; 136b8 <__snprintf_chk@plt+0x2310>
   13680:	cmp	r0, #0
   13684:	push	{lr}		; (str lr, [sp, #-4]!)
   13688:	lsr	lr, r1, #5
   1368c:	and	r1, r1, #31
   13690:	moveq	r0, r3
   13694:	add	r3, r0, #8
   13698:	ldr	ip, [r3, lr, lsl #2]
   1369c:	lsr	r0, ip, r1
   136a0:	eor	r2, r2, r0
   136a4:	and	r0, r0, #1
   136a8:	and	r2, r2, #1
   136ac:	eor	r1, ip, r2, lsl r1
   136b0:	str	r1, [r3, lr, lsl #2]
   136b4:	pop	{pc}		; (ldr pc, [sp], #4)
   136b8:	andeq	r6, r2, r8, ror #8
   136bc:	ldr	r3, [pc, #16]	; 136d4 <__snprintf_chk@plt+0x232c>
   136c0:	cmp	r0, #0
   136c4:	movne	r3, r0
   136c8:	ldr	r0, [r3, #4]
   136cc:	str	r1, [r3, #4]
   136d0:	bx	lr
   136d4:	andeq	r6, r2, r8, ror #8
   136d8:	ldr	r3, [pc, #44]	; 1370c <__snprintf_chk@plt+0x2364>
   136dc:	cmp	r0, #0
   136e0:	moveq	r0, r3
   136e4:	mov	r3, #10
   136e8:	cmp	r2, #0
   136ec:	cmpne	r1, #0
   136f0:	str	r3, [r0]
   136f4:	bne	13700 <__snprintf_chk@plt+0x2358>
   136f8:	push	{r4, lr}
   136fc:	bl	1139c <abort@plt>
   13700:	str	r1, [r0, #40]	; 0x28
   13704:	str	r2, [r0, #44]	; 0x2c
   13708:	bx	lr
   1370c:	andeq	r6, r2, r8, ror #8
   13710:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13714:	sub	sp, sp, #24
   13718:	mov	sl, r3
   1371c:	mov	r7, r0
   13720:	mov	r8, r1
   13724:	mov	r9, r2
   13728:	ldr	r4, [sp, #56]	; 0x38
   1372c:	ldr	r3, [pc, #88]	; 1378c <__snprintf_chk@plt+0x23e4>
   13730:	cmp	r4, #0
   13734:	moveq	r4, r3
   13738:	bl	1127c <__errno_location@plt>
   1373c:	ldr	r3, [r4, #44]	; 0x2c
   13740:	mov	r5, r0
   13744:	mov	r2, r9
   13748:	mov	r1, r8
   1374c:	mov	r0, r7
   13750:	ldr	r6, [r5]
   13754:	str	r3, [sp, #16]
   13758:	ldr	r3, [r4, #40]	; 0x28
   1375c:	str	r3, [sp, #12]
   13760:	add	r3, r4, #8
   13764:	str	r3, [sp, #8]
   13768:	ldr	r3, [r4, #4]
   1376c:	str	r3, [sp, #4]
   13770:	ldr	r3, [r4]
   13774:	str	r3, [sp]
   13778:	mov	r3, sl
   1377c:	bl	12780 <__snprintf_chk@plt+0x13d8>
   13780:	str	r6, [r5]
   13784:	add	sp, sp, #24
   13788:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1378c:	andeq	r6, r2, r8, ror #8
   13790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13794:	cmp	r3, #0
   13798:	sub	sp, sp, #44	; 0x2c
   1379c:	mov	r6, r2
   137a0:	mov	sl, r1
   137a4:	mov	r9, r0
   137a8:	ldr	r4, [pc, #176]	; 13860 <__snprintf_chk@plt+0x24b8>
   137ac:	movne	r4, r3
   137b0:	bl	1127c <__errno_location@plt>
   137b4:	ldr	r3, [r0]
   137b8:	mov	r1, #0
   137bc:	mov	r2, r9
   137c0:	mov	r8, r0
   137c4:	mov	r0, r1
   137c8:	ldr	r5, [r4, #4]
   137cc:	add	fp, r4, #8
   137d0:	str	r3, [sp, #28]
   137d4:	ldr	r3, [r4, #44]	; 0x2c
   137d8:	cmp	r6, #0
   137dc:	orreq	r5, r5, #1
   137e0:	str	r3, [sp, #16]
   137e4:	ldr	r3, [r4, #40]	; 0x28
   137e8:	stmib	sp, {r5, fp}
   137ec:	str	r3, [sp, #12]
   137f0:	ldr	r3, [r4]
   137f4:	str	r3, [sp]
   137f8:	mov	r3, sl
   137fc:	bl	12780 <__snprintf_chk@plt+0x13d8>
   13800:	add	r1, r0, #1
   13804:	mov	r7, r0
   13808:	mov	r0, r1
   1380c:	str	r1, [sp, #36]	; 0x24
   13810:	bl	1430c <__snprintf_chk@plt+0x2f64>
   13814:	ldr	r3, [r4, #44]	; 0x2c
   13818:	mov	r2, r9
   1381c:	ldr	r1, [sp, #36]	; 0x24
   13820:	str	r3, [sp, #16]
   13824:	ldr	r3, [r4, #40]	; 0x28
   13828:	stmib	sp, {r5, fp}
   1382c:	str	r0, [sp, #32]
   13830:	str	r3, [sp, #12]
   13834:	ldr	r3, [r4]
   13838:	str	r3, [sp]
   1383c:	mov	r3, sl
   13840:	bl	12780 <__snprintf_chk@plt+0x13d8>
   13844:	ldr	r3, [sp, #28]
   13848:	cmp	r6, #0
   1384c:	ldr	r0, [sp, #32]
   13850:	str	r3, [r8]
   13854:	strne	r7, [r6]
   13858:	add	sp, sp, #44	; 0x2c
   1385c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13860:	andeq	r6, r2, r8, ror #8
   13864:	mov	r3, r2
   13868:	mov	r2, #0
   1386c:	b	13790 <__snprintf_chk@plt+0x23e8>
   13870:	push	{r4, r5, r6, r7, r8, lr}
   13874:	mov	r6, #1
   13878:	ldr	r4, [pc, #100]	; 138e4 <__snprintf_chk@plt+0x253c>
   1387c:	ldr	r5, [r4]
   13880:	add	r7, r5, #4
   13884:	ldr	r3, [r4, #4]
   13888:	cmp	r3, r6
   1388c:	bgt	138d4 <__snprintf_chk@plt+0x252c>
   13890:	ldr	r6, [pc, #80]	; 138e8 <__snprintf_chk@plt+0x2540>
   13894:	ldr	r0, [r5, #4]
   13898:	cmp	r0, r6
   1389c:	beq	138b0 <__snprintf_chk@plt+0x2508>
   138a0:	bl	12528 <__snprintf_chk@plt+0x1180>
   138a4:	mov	r3, #256	; 0x100
   138a8:	str	r3, [r4, #8]
   138ac:	str	r6, [r4, #12]
   138b0:	ldr	r6, [pc, #52]	; 138ec <__snprintf_chk@plt+0x2544>
   138b4:	cmp	r5, r6
   138b8:	beq	138c8 <__snprintf_chk@plt+0x2520>
   138bc:	mov	r0, r5
   138c0:	bl	12528 <__snprintf_chk@plt+0x1180>
   138c4:	str	r6, [r4]
   138c8:	mov	r3, #1
   138cc:	str	r3, [r4, #4]
   138d0:	pop	{r4, r5, r6, r7, r8, pc}
   138d4:	ldr	r0, [r7, r6, lsl #3]
   138d8:	add	r6, r6, #1
   138dc:	bl	12528 <__snprintf_chk@plt+0x1180>
   138e0:	b	13884 <__snprintf_chk@plt+0x24dc>
   138e4:	andeq	r6, r2, ip, lsr r1
   138e8:	andeq	r6, r2, r8, ror #6
   138ec:	andeq	r6, r2, r4, asr #2
   138f0:	ldr	r3, [pc, #4]	; 138fc <__snprintf_chk@plt+0x2554>
   138f4:	mvn	r2, #0
   138f8:	b	13470 <__snprintf_chk@plt+0x20c8>
   138fc:	andeq	r6, r2, r8, ror #8
   13900:	ldr	r3, [pc]	; 13908 <__snprintf_chk@plt+0x2560>
   13904:	b	13470 <__snprintf_chk@plt+0x20c8>
   13908:	andeq	r6, r2, r8, ror #8
   1390c:	mov	r1, r0
   13910:	mov	r0, #0
   13914:	b	138f0 <__snprintf_chk@plt+0x2548>
   13918:	mov	r2, r1
   1391c:	mov	r1, r0
   13920:	mov	r0, #0
   13924:	b	13900 <__snprintf_chk@plt+0x2558>
   13928:	push	{r4, r5, lr}
   1392c:	sub	sp, sp, #52	; 0x34
   13930:	mov	r5, r2
   13934:	mov	r4, r0
   13938:	mov	r0, sp
   1393c:	bl	12624 <__snprintf_chk@plt+0x127c>
   13940:	mov	r3, sp
   13944:	mvn	r2, #0
   13948:	mov	r1, r5
   1394c:	mov	r0, r4
   13950:	bl	13470 <__snprintf_chk@plt+0x20c8>
   13954:	add	sp, sp, #52	; 0x34
   13958:	pop	{r4, r5, pc}
   1395c:	push	{r4, r5, r6, lr}
   13960:	sub	sp, sp, #48	; 0x30
   13964:	mov	r5, r2
   13968:	mov	r6, r3
   1396c:	mov	r4, r0
   13970:	mov	r0, sp
   13974:	bl	12624 <__snprintf_chk@plt+0x127c>
   13978:	mov	r3, sp
   1397c:	mov	r2, r6
   13980:	mov	r1, r5
   13984:	mov	r0, r4
   13988:	bl	13470 <__snprintf_chk@plt+0x20c8>
   1398c:	add	sp, sp, #48	; 0x30
   13990:	pop	{r4, r5, r6, pc}
   13994:	mov	r2, r1
   13998:	mov	r1, r0
   1399c:	mov	r0, #0
   139a0:	b	13928 <__snprintf_chk@plt+0x2580>
   139a4:	mov	r3, r2
   139a8:	mov	r2, r1
   139ac:	mov	r1, r0
   139b0:	mov	r0, #0
   139b4:	b	1395c <__snprintf_chk@plt+0x25b4>
   139b8:	push	{r4, r5, r6, lr}
   139bc:	mov	r4, r0
   139c0:	mov	r5, r1
   139c4:	mov	r6, r2
   139c8:	sub	sp, sp, #48	; 0x30
   139cc:	mov	ip, sp
   139d0:	ldr	lr, [pc, #64]	; 13a18 <__snprintf_chk@plt+0x2670>
   139d4:	ldm	lr!, {r0, r1, r2, r3}
   139d8:	stmia	ip!, {r0, r1, r2, r3}
   139dc:	ldm	lr!, {r0, r1, r2, r3}
   139e0:	stmia	ip!, {r0, r1, r2, r3}
   139e4:	ldm	lr, {r0, r1, r2, r3}
   139e8:	stm	ip, {r0, r1, r2, r3}
   139ec:	mov	r1, r6
   139f0:	mov	r2, #1
   139f4:	mov	r0, sp
   139f8:	bl	1367c <__snprintf_chk@plt+0x22d4>
   139fc:	mov	r3, sp
   13a00:	mov	r2, r5
   13a04:	mov	r1, r4
   13a08:	mov	r0, #0
   13a0c:	bl	13470 <__snprintf_chk@plt+0x20c8>
   13a10:	add	sp, sp, #48	; 0x30
   13a14:	pop	{r4, r5, r6, pc}
   13a18:	andeq	r6, r2, r8, ror #8
   13a1c:	mov	r2, r1
   13a20:	mvn	r1, #0
   13a24:	b	139b8 <__snprintf_chk@plt+0x2610>
   13a28:	mov	r1, #58	; 0x3a
   13a2c:	b	13a1c <__snprintf_chk@plt+0x2674>
   13a30:	mov	r2, #58	; 0x3a
   13a34:	b	139b8 <__snprintf_chk@plt+0x2610>
   13a38:	push	{r4, r5, lr}
   13a3c:	sub	sp, sp, #100	; 0x64
   13a40:	mov	r4, r0
   13a44:	mov	r0, sp
   13a48:	mov	r5, r2
   13a4c:	bl	12624 <__snprintf_chk@plt+0x127c>
   13a50:	mov	ip, sp
   13a54:	add	lr, sp, #48	; 0x30
   13a58:	ldm	ip!, {r0, r1, r2, r3}
   13a5c:	stmia	lr!, {r0, r1, r2, r3}
   13a60:	ldm	ip!, {r0, r1, r2, r3}
   13a64:	stmia	lr!, {r0, r1, r2, r3}
   13a68:	ldm	ip, {r0, r1, r2, r3}
   13a6c:	stm	lr, {r0, r1, r2, r3}
   13a70:	mov	r2, #1
   13a74:	mov	r1, #58	; 0x3a
   13a78:	add	r0, sp, #48	; 0x30
   13a7c:	bl	1367c <__snprintf_chk@plt+0x22d4>
   13a80:	add	r3, sp, #48	; 0x30
   13a84:	mvn	r2, #0
   13a88:	mov	r1, r5
   13a8c:	mov	r0, r4
   13a90:	bl	13470 <__snprintf_chk@plt+0x20c8>
   13a94:	add	sp, sp, #100	; 0x64
   13a98:	pop	{r4, r5, pc}
   13a9c:	push	{r4, r5, r6, r7, lr}
   13aa0:	mov	r4, r0
   13aa4:	mov	r6, r1
   13aa8:	mov	r7, r2
   13aac:	mov	r5, r3
   13ab0:	sub	sp, sp, #52	; 0x34
   13ab4:	ldr	lr, [pc, #68]	; 13b00 <__snprintf_chk@plt+0x2758>
   13ab8:	mov	ip, sp
   13abc:	ldm	lr!, {r0, r1, r2, r3}
   13ac0:	stmia	ip!, {r0, r1, r2, r3}
   13ac4:	ldm	lr!, {r0, r1, r2, r3}
   13ac8:	stmia	ip!, {r0, r1, r2, r3}
   13acc:	ldm	lr, {r0, r1, r2, r3}
   13ad0:	stm	ip, {r0, r1, r2, r3}
   13ad4:	mov	r2, r7
   13ad8:	mov	r1, r6
   13adc:	mov	r0, sp
   13ae0:	bl	136d8 <__snprintf_chk@plt+0x2330>
   13ae4:	ldr	r2, [sp, #72]	; 0x48
   13ae8:	mov	r3, sp
   13aec:	mov	r1, r5
   13af0:	mov	r0, r4
   13af4:	bl	13470 <__snprintf_chk@plt+0x20c8>
   13af8:	add	sp, sp, #52	; 0x34
   13afc:	pop	{r4, r5, r6, r7, pc}
   13b00:	andeq	r6, r2, r8, ror #8
   13b04:	mvn	ip, #0
   13b08:	push	{r0, r1, r2, lr}
   13b0c:	str	ip, [sp]
   13b10:	bl	13a9c <__snprintf_chk@plt+0x26f4>
   13b14:	add	sp, sp, #12
   13b18:	pop	{pc}		; (ldr pc, [sp], #4)
   13b1c:	mov	r3, r2
   13b20:	mov	r2, r1
   13b24:	mov	r1, r0
   13b28:	mov	r0, #0
   13b2c:	b	13b04 <__snprintf_chk@plt+0x275c>
   13b30:	push	{r0, r1, r2, lr}
   13b34:	str	r3, [sp]
   13b38:	mov	r3, r2
   13b3c:	mov	r2, r1
   13b40:	mov	r1, r0
   13b44:	mov	r0, #0
   13b48:	bl	13a9c <__snprintf_chk@plt+0x26f4>
   13b4c:	add	sp, sp, #12
   13b50:	pop	{pc}		; (ldr pc, [sp], #4)
   13b54:	ldr	r3, [pc]	; 13b5c <__snprintf_chk@plt+0x27b4>
   13b58:	b	13470 <__snprintf_chk@plt+0x20c8>
   13b5c:	andeq	r6, r2, ip, asr #2
   13b60:	mov	r2, r1
   13b64:	mov	r1, r0
   13b68:	mov	r0, #0
   13b6c:	b	13b54 <__snprintf_chk@plt+0x27ac>
   13b70:	mvn	r2, #0
   13b74:	b	13b54 <__snprintf_chk@plt+0x27ac>
   13b78:	mov	r1, r0
   13b7c:	mov	r0, #0
   13b80:	b	13b70 <__snprintf_chk@plt+0x27c8>
   13b84:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13b88:	mov	r6, r1
   13b8c:	ldrb	r3, [r0]
   13b90:	sub	r3, r3, #48	; 0x30
   13b94:	cmp	r3, #9
   13b98:	bhi	13bcc <__snprintf_chk@plt+0x2824>
   13b9c:	mov	r2, #10
   13ba0:	add	r1, sp, #4
   13ba4:	bl	1109c <strtol@plt>
   13ba8:	ldr	r3, [sp, #4]
   13bac:	ldrb	r3, [r3]
   13bb0:	cmp	r0, #64	; 0x40
   13bb4:	cmple	r3, #0
   13bb8:	beq	13bfc <__snprintf_chk@plt+0x2854>
   13bbc:	mvn	r0, #0
   13bc0:	str	r0, [r6]
   13bc4:	add	sp, sp, #12
   13bc8:	pop	{r4, r5, r6, r7, pc}
   13bcc:	ldr	r5, [pc, #276]	; 13ce8 <__snprintf_chk@plt+0x2940>
   13bd0:	mov	r7, r0
   13bd4:	mov	r4, #0
   13bd8:	mov	r1, r7
   13bdc:	mov	r0, r5
   13be0:	bl	11090 <strcmp@plt>
   13be4:	cmp	r0, #0
   13be8:	bne	13c08 <__snprintf_chk@plt+0x2860>
   13bec:	mov	r3, #12
   13bf0:	mul	r4, r3, r4
   13bf4:	ldr	r3, [pc, #240]	; 13cec <__snprintf_chk@plt+0x2944>
   13bf8:	ldr	r0, [r3, r4]
   13bfc:	str	r0, [r6]
   13c00:	asr	r0, r0, #31
   13c04:	b	13bc4 <__snprintf_chk@plt+0x281c>
   13c08:	add	r4, r4, #1
   13c0c:	add	r5, r5, #12
   13c10:	cmp	r4, #35	; 0x23
   13c14:	bne	13bd8 <__snprintf_chk@plt+0x2830>
   13c18:	bl	11378 <__libc_current_sigrtmin@plt>
   13c1c:	mov	r5, r0
   13c20:	bl	11264 <__libc_current_sigrtmax@plt>
   13c24:	cmp	r5, #0
   13c28:	mov	r4, r0
   13c2c:	ble	13c80 <__snprintf_chk@plt+0x28d8>
   13c30:	mov	r2, #5
   13c34:	ldr	r1, [pc, #180]	; 13cf0 <__snprintf_chk@plt+0x2948>
   13c38:	mov	r0, r7
   13c3c:	bl	11390 <strncmp@plt>
   13c40:	cmp	r0, #0
   13c44:	bne	13c80 <__snprintf_chk@plt+0x28d8>
   13c48:	mov	r2, #10
   13c4c:	add	r1, sp, #4
   13c50:	add	r0, r7, #5
   13c54:	bl	1109c <strtol@plt>
   13c58:	ldr	r3, [sp, #4]
   13c5c:	ldrb	r3, [r3]
   13c60:	cmp	r0, #0
   13c64:	cmpge	r3, #0
   13c68:	bne	13bbc <__snprintf_chk@plt+0x2814>
   13c6c:	sub	r4, r4, r5
   13c70:	cmp	r0, r4
   13c74:	addle	r0, r5, r0
   13c78:	ble	13bfc <__snprintf_chk@plt+0x2854>
   13c7c:	b	13bbc <__snprintf_chk@plt+0x2814>
   13c80:	cmp	r4, #0
   13c84:	ble	13bbc <__snprintf_chk@plt+0x2814>
   13c88:	mov	r2, #5
   13c8c:	ldr	r1, [pc, #96]	; 13cf4 <__snprintf_chk@plt+0x294c>
   13c90:	mov	r0, r7
   13c94:	bl	11390 <strncmp@plt>
   13c98:	cmp	r0, #0
   13c9c:	bne	13bbc <__snprintf_chk@plt+0x2814>
   13ca0:	mov	r2, #10
   13ca4:	add	r1, sp, #4
   13ca8:	add	r0, r7, #5
   13cac:	bl	1109c <strtol@plt>
   13cb0:	ldr	r3, [sp, #4]
   13cb4:	ldrb	r3, [r3]
   13cb8:	cmp	r3, #0
   13cbc:	bne	13bbc <__snprintf_chk@plt+0x2814>
   13cc0:	sub	r3, r5, r4
   13cc4:	cmp	r0, r3
   13cc8:	movlt	r5, #0
   13ccc:	movge	r5, #1
   13cd0:	cmp	r0, #0
   13cd4:	movgt	r5, #0
   13cd8:	cmp	r5, #0
   13cdc:	addne	r0, r4, r0
   13ce0:	bne	13bfc <__snprintf_chk@plt+0x2854>
   13ce4:	b	13bbc <__snprintf_chk@plt+0x2814>
   13ce8:	andeq	r6, r2, r0, lsl #3
   13cec:	andeq	r6, r2, ip, ror r1
   13cf0:	andeq	r5, r1, fp, lsr r8
   13cf4:	andeq	r5, r1, r1, asr #16
   13cf8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13cfc:	mov	r6, r1
   13d00:	mov	r4, r0
   13d04:	mov	r3, #0
   13d08:	mov	r0, #12
   13d0c:	ldr	r1, [pc, #184]	; 13dcc <__snprintf_chk@plt+0x2a24>
   13d10:	mul	r2, r0, r3
   13d14:	ldr	ip, [r2, r1]
   13d18:	cmp	ip, r4
   13d1c:	bne	13d3c <__snprintf_chk@plt+0x2994>
   13d20:	add	r2, r2, #4
   13d24:	mov	r0, r6
   13d28:	add	r1, r1, r2
   13d2c:	bl	111a4 <strcpy@plt>
   13d30:	mov	r0, #0
   13d34:	add	sp, sp, #12
   13d38:	pop	{r4, r5, r6, r7, pc}
   13d3c:	add	r3, r3, #1
   13d40:	cmp	r3, #35	; 0x23
   13d44:	bne	13d10 <__snprintf_chk@plt+0x2968>
   13d48:	bl	11378 <__libc_current_sigrtmin@plt>
   13d4c:	mov	r5, r0
   13d50:	bl	11264 <__libc_current_sigrtmax@plt>
   13d54:	cmp	r4, r0
   13d58:	mov	r7, r0
   13d5c:	movle	r3, #0
   13d60:	movgt	r3, #1
   13d64:	cmp	r4, r5
   13d68:	orrlt	r3, r3, #1
   13d6c:	cmp	r3, #0
   13d70:	mvnne	r0, #0
   13d74:	bne	13d34 <__snprintf_chk@plt+0x298c>
   13d78:	sub	r3, r7, r5
   13d7c:	add	r3, r5, r3, asr #1
   13d80:	cmp	r3, r4
   13d84:	blt	13db8 <__snprintf_chk@plt+0x2a10>
   13d88:	ldr	r1, [pc, #64]	; 13dd0 <__snprintf_chk@plt+0x2a28>
   13d8c:	mov	r0, r6
   13d90:	bl	111a4 <strcpy@plt>
   13d94:	subs	r0, r4, r5
   13d98:	beq	13d34 <__snprintf_chk@plt+0x298c>
   13d9c:	ldr	r3, [pc, #48]	; 13dd4 <__snprintf_chk@plt+0x2a2c>
   13da0:	mvn	r2, #0
   13da4:	mov	r1, #1
   13da8:	str	r0, [sp]
   13dac:	add	r0, r6, #5
   13db0:	bl	11288 <__sprintf_chk@plt>
   13db4:	b	13d30 <__snprintf_chk@plt+0x2988>
   13db8:	ldr	r1, [pc, #24]	; 13dd8 <__snprintf_chk@plt+0x2a30>
   13dbc:	mov	r0, r6
   13dc0:	mov	r5, r7
   13dc4:	bl	111a4 <strcpy@plt>
   13dc8:	b	13d94 <__snprintf_chk@plt+0x29ec>
   13dcc:	andeq	r6, r2, ip, ror r1
   13dd0:	andeq	r5, r1, fp, lsr r8
   13dd4:	andeq	r5, r1, r7, asr #16
   13dd8:	andeq	r5, r1, r1, asr #16
   13ddc:	push	{r4, r5, r6, lr}
   13de0:	cmp	r1, #0
   13de4:	sub	sp, sp, #32
   13de8:	mov	r5, r0
   13dec:	ldr	r4, [sp, #48]	; 0x30
   13df0:	ldr	r6, [sp, #52]	; 0x34
   13df4:	beq	13ea8 <__snprintf_chk@plt+0x2b00>
   13df8:	strd	r2, [sp]
   13dfc:	mov	r3, r1
   13e00:	mov	r1, #1
   13e04:	ldr	r2, [pc, #856]	; 14164 <__snprintf_chk@plt+0x2dbc>
   13e08:	bl	112e8 <__fprintf_chk@plt>
   13e0c:	mov	r2, #5
   13e10:	ldr	r1, [pc, #848]	; 14168 <__snprintf_chk@plt+0x2dc0>
   13e14:	mov	r0, #0
   13e18:	bl	11120 <dcgettext@plt>
   13e1c:	movw	r3, #2022	; 0x7e6
   13e20:	ldr	r2, [pc, #836]	; 1416c <__snprintf_chk@plt+0x2dc4>
   13e24:	mov	r1, #1
   13e28:	str	r3, [sp]
   13e2c:	mov	r3, r0
   13e30:	mov	r0, r5
   13e34:	bl	112e8 <__fprintf_chk@plt>
   13e38:	mov	r1, r5
   13e3c:	mov	r0, #10
   13e40:	bl	11114 <fputc_unlocked@plt>
   13e44:	mov	r2, #5
   13e48:	ldr	r1, [pc, #800]	; 14170 <__snprintf_chk@plt+0x2dc8>
   13e4c:	mov	r0, #0
   13e50:	bl	11120 <dcgettext@plt>
   13e54:	mov	r2, r0
   13e58:	mov	r1, #1
   13e5c:	ldr	r3, [pc, #784]	; 14174 <__snprintf_chk@plt+0x2dcc>
   13e60:	mov	r0, r5
   13e64:	bl	112e8 <__fprintf_chk@plt>
   13e68:	mov	r1, r5
   13e6c:	mov	r0, #10
   13e70:	bl	11114 <fputc_unlocked@plt>
   13e74:	cmp	r6, #9
   13e78:	ldrls	pc, [pc, r6, lsl #2]
   13e7c:	b	14158 <__snprintf_chk@plt+0x2db0>
   13e80:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13e84:	andeq	r3, r1, r0, asr #29
   13e88:	andeq	r3, r1, ip, ror #29
   13e8c:	andeq	r3, r1, r0, lsr #30
   13e90:	andeq	r3, r1, ip, asr pc
   13e94:	andeq	r3, r1, r0, lsr #31
   13e98:	andeq	r3, r1, r8, ror #31
   13e9c:	andeq	r4, r1, r8, lsr r0
   13ea0:	muleq	r1, r0, r0
   13ea4:	strdeq	r4, [r1], -r0
   13ea8:	mov	r1, #1
   13eac:	str	r3, [sp]
   13eb0:	mov	r3, r2
   13eb4:	ldr	r2, [pc, #700]	; 14178 <__snprintf_chk@plt+0x2dd0>
   13eb8:	bl	112e8 <__fprintf_chk@plt>
   13ebc:	b	13e0c <__snprintf_chk@plt+0x2a64>
   13ec0:	mov	r2, #5
   13ec4:	ldr	r1, [pc, #688]	; 1417c <__snprintf_chk@plt+0x2dd4>
   13ec8:	mov	r0, #0
   13ecc:	bl	11120 <dcgettext@plt>
   13ed0:	ldr	r3, [r4]
   13ed4:	mov	r2, r0
   13ed8:	mov	r1, #1
   13edc:	mov	r0, r5
   13ee0:	add	sp, sp, #32
   13ee4:	pop	{r4, r5, r6, lr}
   13ee8:	b	112e8 <__fprintf_chk@plt>
   13eec:	mov	r2, #5
   13ef0:	ldr	r1, [pc, #648]	; 14180 <__snprintf_chk@plt+0x2dd8>
   13ef4:	mov	r0, #0
   13ef8:	bl	11120 <dcgettext@plt>
   13efc:	ldr	r3, [r4, #4]
   13f00:	mov	r2, r0
   13f04:	mov	r1, #1
   13f08:	mov	r0, r5
   13f0c:	str	r3, [sp, #48]	; 0x30
   13f10:	ldr	r3, [r4]
   13f14:	add	sp, sp, #32
   13f18:	pop	{r4, r5, r6, lr}
   13f1c:	b	112e8 <__fprintf_chk@plt>
   13f20:	mov	r2, #5
   13f24:	ldr	r1, [pc, #600]	; 14184 <__snprintf_chk@plt+0x2ddc>
   13f28:	mov	r0, #0
   13f2c:	bl	11120 <dcgettext@plt>
   13f30:	ldr	r3, [r4, #8]
   13f34:	mov	r2, r0
   13f38:	mov	r1, #1
   13f3c:	mov	r0, r5
   13f40:	str	r3, [sp, #52]	; 0x34
   13f44:	ldr	r3, [r4, #4]
   13f48:	str	r3, [sp, #48]	; 0x30
   13f4c:	ldr	r3, [r4]
   13f50:	add	sp, sp, #32
   13f54:	pop	{r4, r5, r6, lr}
   13f58:	b	112e8 <__fprintf_chk@plt>
   13f5c:	mov	r2, #5
   13f60:	ldr	r1, [pc, #544]	; 14188 <__snprintf_chk@plt+0x2de0>
   13f64:	mov	r0, #0
   13f68:	bl	11120 <dcgettext@plt>
   13f6c:	ldr	r3, [r4, #12]
   13f70:	mov	r2, r0
   13f74:	mov	r1, #1
   13f78:	mov	r0, r5
   13f7c:	str	r3, [sp, #8]
   13f80:	ldr	r3, [r4, #8]
   13f84:	str	r3, [sp, #4]
   13f88:	ldr	r3, [r4, #4]
   13f8c:	str	r3, [sp]
   13f90:	ldr	r3, [r4]
   13f94:	bl	112e8 <__fprintf_chk@plt>
   13f98:	add	sp, sp, #32
   13f9c:	pop	{r4, r5, r6, pc}
   13fa0:	mov	r2, #5
   13fa4:	ldr	r1, [pc, #480]	; 1418c <__snprintf_chk@plt+0x2de4>
   13fa8:	mov	r0, #0
   13fac:	bl	11120 <dcgettext@plt>
   13fb0:	ldr	r3, [r4, #16]
   13fb4:	mov	r2, r0
   13fb8:	mov	r1, #1
   13fbc:	mov	r0, r5
   13fc0:	str	r3, [sp, #12]
   13fc4:	ldr	r3, [r4, #12]
   13fc8:	str	r3, [sp, #8]
   13fcc:	ldr	r3, [r4, #8]
   13fd0:	str	r3, [sp, #4]
   13fd4:	ldr	r3, [r4, #4]
   13fd8:	str	r3, [sp]
   13fdc:	ldr	r3, [r4]
   13fe0:	bl	112e8 <__fprintf_chk@plt>
   13fe4:	b	13f98 <__snprintf_chk@plt+0x2bf0>
   13fe8:	mov	r2, #5
   13fec:	ldr	r1, [pc, #412]	; 14190 <__snprintf_chk@plt+0x2de8>
   13ff0:	mov	r0, #0
   13ff4:	bl	11120 <dcgettext@plt>
   13ff8:	ldr	r3, [r4, #20]
   13ffc:	mov	r2, r0
   14000:	mov	r1, #1
   14004:	mov	r0, r5
   14008:	str	r3, [sp, #16]
   1400c:	ldr	r3, [r4, #16]
   14010:	str	r3, [sp, #12]
   14014:	ldr	r3, [r4, #12]
   14018:	str	r3, [sp, #8]
   1401c:	ldr	r3, [r4, #8]
   14020:	str	r3, [sp, #4]
   14024:	ldr	r3, [r4, #4]
   14028:	str	r3, [sp]
   1402c:	ldr	r3, [r4]
   14030:	bl	112e8 <__fprintf_chk@plt>
   14034:	b	13f98 <__snprintf_chk@plt+0x2bf0>
   14038:	mov	r2, #5
   1403c:	ldr	r1, [pc, #336]	; 14194 <__snprintf_chk@plt+0x2dec>
   14040:	mov	r0, #0
   14044:	bl	11120 <dcgettext@plt>
   14048:	ldr	r3, [r4, #24]
   1404c:	mov	r2, r0
   14050:	mov	r1, #1
   14054:	mov	r0, r5
   14058:	str	r3, [sp, #20]
   1405c:	ldr	r3, [r4, #20]
   14060:	str	r3, [sp, #16]
   14064:	ldr	r3, [r4, #16]
   14068:	str	r3, [sp, #12]
   1406c:	ldr	r3, [r4, #12]
   14070:	str	r3, [sp, #8]
   14074:	ldr	r3, [r4, #8]
   14078:	str	r3, [sp, #4]
   1407c:	ldr	r3, [r4, #4]
   14080:	str	r3, [sp]
   14084:	ldr	r3, [r4]
   14088:	bl	112e8 <__fprintf_chk@plt>
   1408c:	b	13f98 <__snprintf_chk@plt+0x2bf0>
   14090:	mov	r2, #5
   14094:	ldr	r1, [pc, #252]	; 14198 <__snprintf_chk@plt+0x2df0>
   14098:	mov	r0, #0
   1409c:	bl	11120 <dcgettext@plt>
   140a0:	ldr	r3, [r4, #28]
   140a4:	mov	r2, r0
   140a8:	mov	r1, #1
   140ac:	mov	r0, r5
   140b0:	str	r3, [sp, #24]
   140b4:	ldr	r3, [r4, #24]
   140b8:	str	r3, [sp, #20]
   140bc:	ldr	r3, [r4, #20]
   140c0:	str	r3, [sp, #16]
   140c4:	ldr	r3, [r4, #16]
   140c8:	str	r3, [sp, #12]
   140cc:	ldr	r3, [r4, #12]
   140d0:	str	r3, [sp, #8]
   140d4:	ldr	r3, [r4, #8]
   140d8:	str	r3, [sp, #4]
   140dc:	ldr	r3, [r4, #4]
   140e0:	str	r3, [sp]
   140e4:	ldr	r3, [r4]
   140e8:	bl	112e8 <__fprintf_chk@plt>
   140ec:	b	13f98 <__snprintf_chk@plt+0x2bf0>
   140f0:	ldr	r1, [pc, #164]	; 1419c <__snprintf_chk@plt+0x2df4>
   140f4:	mov	r2, #5
   140f8:	mov	r0, #0
   140fc:	bl	11120 <dcgettext@plt>
   14100:	ldr	r3, [r4, #32]
   14104:	mov	r2, r0
   14108:	mov	r1, #1
   1410c:	mov	r0, r5
   14110:	str	r3, [sp, #28]
   14114:	ldr	r3, [r4, #28]
   14118:	str	r3, [sp, #24]
   1411c:	ldr	r3, [r4, #24]
   14120:	str	r3, [sp, #20]
   14124:	ldr	r3, [r4, #20]
   14128:	str	r3, [sp, #16]
   1412c:	ldr	r3, [r4, #16]
   14130:	str	r3, [sp, #12]
   14134:	ldr	r3, [r4, #12]
   14138:	str	r3, [sp, #8]
   1413c:	ldr	r3, [r4, #8]
   14140:	str	r3, [sp, #4]
   14144:	ldr	r3, [r4, #4]
   14148:	str	r3, [sp]
   1414c:	ldr	r3, [r4]
   14150:	bl	112e8 <__fprintf_chk@plt>
   14154:	b	13f98 <__snprintf_chk@plt+0x2bf0>
   14158:	mov	r2, #5
   1415c:	ldr	r1, [pc, #60]	; 141a0 <__snprintf_chk@plt+0x2df8>
   14160:	b	140f8 <__snprintf_chk@plt+0x2d50>
   14164:	andeq	r5, r1, fp, asr #16
   14168:	andeq	r5, r1, lr, asr r8
   1416c:	andeq	r5, r1, ip, lsr #22
   14170:	andeq	r5, r1, r2, ror #16
   14174:	andeq	r5, r1, sp, lsl #18
   14178:	andeq	r5, r1, r7, asr r8
   1417c:	andeq	r5, r1, pc, lsr #18
   14180:	andeq	r5, r1, pc, lsr r9
   14184:	andeq	r5, r1, r6, asr r9
   14188:	andeq	r5, r1, r2, ror r9
   1418c:	muleq	r1, r2, r9
   14190:			; <UNDEFINED> instruction: 0x000159b6
   14194:	ldrdeq	r5, [r1], -lr
   14198:	andeq	r5, r1, sl, lsl #20
   1419c:	andeq	r5, r1, sl, lsr sl
   141a0:	andeq	r5, r1, lr, ror #20
   141a4:	push	{r0, r1, r4, lr}
   141a8:	mov	ip, #0
   141ac:	ldr	lr, [sp, #16]
   141b0:	ldr	r4, [lr, ip, lsl #2]
   141b4:	cmp	r4, #0
   141b8:	bne	141d0 <__snprintf_chk@plt+0x2e28>
   141bc:	str	lr, [sp]
   141c0:	str	ip, [sp, #4]
   141c4:	bl	13ddc <__snprintf_chk@plt+0x2a34>
   141c8:	add	sp, sp, #8
   141cc:	pop	{r4, pc}
   141d0:	add	ip, ip, #1
   141d4:	b	141b0 <__snprintf_chk@plt+0x2e08>
   141d8:	push	{r4, r5, r6, lr}
   141dc:	sub	sp, sp, #48	; 0x30
   141e0:	mov	ip, #0
   141e4:	add	lr, sp, #8
   141e8:	mov	r5, lr
   141ec:	ldr	r6, [sp, #64]	; 0x40
   141f0:	ldr	r4, [r6, ip, lsl #2]
   141f4:	cmp	r4, #0
   141f8:	str	r4, [lr], #4
   141fc:	beq	1420c <__snprintf_chk@plt+0x2e64>
   14200:	add	ip, ip, #1
   14204:	cmp	ip, #10
   14208:	bne	141f0 <__snprintf_chk@plt+0x2e48>
   1420c:	stm	sp, {r5, ip}
   14210:	bl	13ddc <__snprintf_chk@plt+0x2a34>
   14214:	add	sp, sp, #48	; 0x30
   14218:	pop	{r4, r5, r6, pc}
   1421c:	push	{r3}		; (str r3, [sp, #-4]!)
   14220:	push	{r0, r1, r2, r3, lr}
   14224:	add	r3, sp, #24
   14228:	str	r3, [sp]
   1422c:	str	r3, [sp, #12]
   14230:	ldr	r3, [sp, #20]
   14234:	bl	141d8 <__snprintf_chk@plt+0x2e30>
   14238:	add	sp, sp, #16
   1423c:	pop	{lr}		; (ldr lr, [sp], #4)
   14240:	add	sp, sp, #4
   14244:	bx	lr
   14248:	ldr	r3, [pc, #116]	; 142c4 <__snprintf_chk@plt+0x2f1c>
   1424c:	mov	r0, #10
   14250:	push	{r4, lr}
   14254:	ldr	r1, [r3]
   14258:	bl	11114 <fputc_unlocked@plt>
   1425c:	mov	r2, #5
   14260:	ldr	r1, [pc, #96]	; 142c8 <__snprintf_chk@plt+0x2f20>
   14264:	mov	r0, #0
   14268:	bl	11120 <dcgettext@plt>
   1426c:	mov	r1, r0
   14270:	ldr	r2, [pc, #84]	; 142cc <__snprintf_chk@plt+0x2f24>
   14274:	mov	r0, #1
   14278:	bl	112b8 <__printf_chk@plt>
   1427c:	mov	r2, #5
   14280:	ldr	r1, [pc, #72]	; 142d0 <__snprintf_chk@plt+0x2f28>
   14284:	mov	r0, #0
   14288:	bl	11120 <dcgettext@plt>
   1428c:	mov	r1, r0
   14290:	ldr	r3, [pc, #60]	; 142d4 <__snprintf_chk@plt+0x2f2c>
   14294:	mov	r0, #1
   14298:	ldr	r2, [pc, #56]	; 142d8 <__snprintf_chk@plt+0x2f30>
   1429c:	bl	112b8 <__printf_chk@plt>
   142a0:	mov	r2, #5
   142a4:	ldr	r1, [pc, #48]	; 142dc <__snprintf_chk@plt+0x2f34>
   142a8:	mov	r0, #0
   142ac:	bl	11120 <dcgettext@plt>
   142b0:	mov	r1, r0
   142b4:	ldr	r2, [pc, #36]	; 142e0 <__snprintf_chk@plt+0x2f38>
   142b8:	mov	r0, #1
   142bc:	pop	{r4, lr}
   142c0:	b	112b8 <__printf_chk@plt>
   142c4:	andeq	r6, r2, r4, lsr r3
   142c8:	andeq	r5, r1, sl, lsr #21
   142cc:			; <UNDEFINED> instruction: 0x00015abe
   142d0:	ldrdeq	r5, [r1], -r4
   142d4:	andeq	r5, r1, sp, lsl #9
   142d8:			; <UNDEFINED> instruction: 0x000154b5
   142dc:	andeq	r5, r1, r8, ror #21
   142e0:	andeq	r5, r1, pc, lsl #22
   142e4:	push	{r4, lr}
   142e8:	bl	146d4 <__snprintf_chk@plt+0x332c>
   142ec:	cmp	r0, #0
   142f0:	popne	{r4, pc}
   142f4:	bl	1459c <__snprintf_chk@plt+0x31f4>
   142f8:	push	{r4, lr}
   142fc:	bl	146d4 <__snprintf_chk@plt+0x332c>
   14300:	cmp	r0, #0
   14304:	popne	{r4, pc}
   14308:	bl	1459c <__snprintf_chk@plt+0x31f4>
   1430c:	b	142e4 <__snprintf_chk@plt+0x2f3c>
   14310:	push	{r4, r5, r6, lr}
   14314:	mov	r5, r0
   14318:	mov	r4, r1
   1431c:	bl	14700 <__snprintf_chk@plt+0x3358>
   14320:	cmp	r0, #0
   14324:	popne	{r4, r5, r6, pc}
   14328:	adds	r4, r4, #0
   1432c:	movne	r4, #1
   14330:	cmp	r5, #0
   14334:	moveq	r4, #1
   14338:	cmp	r4, #0
   1433c:	popeq	{r4, r5, r6, pc}
   14340:	bl	1459c <__snprintf_chk@plt+0x31f4>
   14344:	push	{r4, lr}
   14348:	bl	149b4 <__snprintf_chk@plt+0x360c>
   1434c:	cmp	r0, #0
   14350:	popne	{r4, pc}
   14354:	bl	1459c <__snprintf_chk@plt+0x31f4>
   14358:	push	{r4, r5, r6, lr}
   1435c:	mov	r6, r0
   14360:	mov	r5, r1
   14364:	mov	r4, r2
   14368:	bl	14a5c <__snprintf_chk@plt+0x36b4>
   1436c:	cmp	r0, #0
   14370:	popne	{r4, r5, r6, pc}
   14374:	cmp	r6, #0
   14378:	beq	14388 <__snprintf_chk@plt+0x2fe0>
   1437c:	cmp	r5, #0
   14380:	cmpne	r4, #0
   14384:	popeq	{r4, r5, r6, pc}
   14388:	bl	1459c <__snprintf_chk@plt+0x31f4>
   1438c:	b	14358 <__snprintf_chk@plt+0x2fb0>
   14390:	push	{r4, lr}
   14394:	bl	149c4 <__snprintf_chk@plt+0x361c>
   14398:	cmp	r0, #0
   1439c:	popne	{r4, pc}
   143a0:	bl	1459c <__snprintf_chk@plt+0x31f4>
   143a4:	mov	r2, r1
   143a8:	mov	r1, r0
   143ac:	mov	r0, #0
   143b0:	b	14358 <__snprintf_chk@plt+0x2fb0>
   143b4:	mov	r2, r1
   143b8:	mov	r1, r0
   143bc:	mov	r0, #0
   143c0:	b	14390 <__snprintf_chk@plt+0x2fe8>
   143c4:	cmp	r0, #0
   143c8:	push	{r4, r5, r6, lr}
   143cc:	mov	r5, r1
   143d0:	ldr	r4, [r1]
   143d4:	bne	14400 <__snprintf_chk@plt+0x3058>
   143d8:	cmp	r4, #0
   143dc:	bne	143f0 <__snprintf_chk@plt+0x3048>
   143e0:	mov	r4, #64	; 0x40
   143e4:	udiv	r4, r4, r2
   143e8:	cmp	r2, #64	; 0x40
   143ec:	addhi	r4, r4, #1
   143f0:	mov	r1, r4
   143f4:	bl	14358 <__snprintf_chk@plt+0x2fb0>
   143f8:	str	r4, [r5]
   143fc:	pop	{r4, r5, r6, pc}
   14400:	lsr	r3, r4, #1
   14404:	add	r3, r3, #1
   14408:	adds	r4, r4, r3
   1440c:	bcc	143f0 <__snprintf_chk@plt+0x3048>
   14410:	bl	1459c <__snprintf_chk@plt+0x31f4>
   14414:	mov	r2, #1
   14418:	b	143c4 <__snprintf_chk@plt+0x301c>
   1441c:	ldr	ip, [r1]
   14420:	push	{r4, r5, r6, r7, r8, lr}
   14424:	mov	r5, r1
   14428:	mvn	r8, r3
   1442c:	lsr	r8, r8, #31
   14430:	ldr	lr, [sp, #24]
   14434:	asr	r1, ip, #1
   14438:	adds	r4, ip, r1
   1443c:	mvnvs	r4, #-2147483648	; 0x80000000
   14440:	cmp	r3, r4
   14444:	movge	r1, #0
   14448:	andlt	r1, r8, #1
   1444c:	cmp	r1, #0
   14450:	movne	r4, r3
   14454:	smull	r6, r7, r4, lr
   14458:	cmp	r7, r6, asr #31
   1445c:	bne	14474 <__snprintf_chk@plt+0x30cc>
   14460:	cmp	r6, #63	; 0x3f
   14464:	mov	r1, r6
   14468:	bgt	14484 <__snprintf_chk@plt+0x30dc>
   1446c:	mov	r1, #64	; 0x40
   14470:	b	14478 <__snprintf_chk@plt+0x30d0>
   14474:	mvn	r1, #-2147483648	; 0x80000000
   14478:	sdiv	r4, r1, lr
   1447c:	mls	r6, lr, r4, r1
   14480:	sub	r1, r1, r6
   14484:	cmp	r0, #0
   14488:	sub	r6, r4, ip
   1448c:	streq	r0, [r5]
   14490:	cmp	r6, r2
   14494:	bge	144c8 <__snprintf_chk@plt+0x3120>
   14498:	adds	r4, ip, r2
   1449c:	bvs	144c4 <__snprintf_chk@plt+0x311c>
   144a0:	cmp	r4, r3
   144a4:	movle	r3, #0
   144a8:	andgt	r3, r8, #1
   144ac:	cmp	r3, #0
   144b0:	bne	144c4 <__snprintf_chk@plt+0x311c>
   144b4:	smull	r2, r3, r4, lr
   144b8:	cmp	r3, r2, asr #31
   144bc:	mov	r1, r2
   144c0:	beq	144c8 <__snprintf_chk@plt+0x3120>
   144c4:	bl	1459c <__snprintf_chk@plt+0x31f4>
   144c8:	bl	14310 <__snprintf_chk@plt+0x2f68>
   144cc:	str	r4, [r5]
   144d0:	pop	{r4, r5, r6, r7, r8, pc}
   144d4:	push	{r4, lr}
   144d8:	bl	14680 <__snprintf_chk@plt+0x32d8>
   144dc:	cmp	r0, #0
   144e0:	popne	{r4, pc}
   144e4:	bl	1459c <__snprintf_chk@plt+0x31f4>
   144e8:	mov	r1, #1
   144ec:	b	144d4 <__snprintf_chk@plt+0x312c>
   144f0:	push	{r4, lr}
   144f4:	bl	14680 <__snprintf_chk@plt+0x32d8>
   144f8:	cmp	r0, #0
   144fc:	popne	{r4, pc}
   14500:	bl	1459c <__snprintf_chk@plt+0x31f4>
   14504:	mov	r1, #1
   14508:	b	144f0 <__snprintf_chk@plt+0x3148>
   1450c:	push	{r4, r5, r6, lr}
   14510:	mov	r4, r1
   14514:	mov	r5, r0
   14518:	mov	r0, r1
   1451c:	bl	142e4 <__snprintf_chk@plt+0x2f3c>
   14520:	mov	r2, r4
   14524:	mov	r1, r5
   14528:	pop	{r4, r5, r6, lr}
   1452c:	b	110d8 <memcpy@plt>
   14530:	push	{r4, r5, r6, lr}
   14534:	mov	r4, r1
   14538:	mov	r5, r0
   1453c:	mov	r0, r1
   14540:	bl	142f8 <__snprintf_chk@plt+0x2f50>
   14544:	mov	r2, r4
   14548:	mov	r1, r5
   1454c:	pop	{r4, r5, r6, lr}
   14550:	b	110d8 <memcpy@plt>
   14554:	push	{r4, r5, r6, lr}
   14558:	mov	r5, r0
   1455c:	add	r0, r1, #1
   14560:	mov	r4, r1
   14564:	bl	142f8 <__snprintf_chk@plt+0x2f50>
   14568:	mov	r2, #0
   1456c:	mov	r1, r5
   14570:	strb	r2, [r0, r4]
   14574:	mov	r2, r4
   14578:	pop	{r4, r5, r6, lr}
   1457c:	b	110d8 <memcpy@plt>
   14580:	push	{r4, lr}
   14584:	mov	r4, r0
   14588:	bl	11258 <strlen@plt>
   1458c:	add	r1, r0, #1
   14590:	mov	r0, r4
   14594:	pop	{r4, lr}
   14598:	b	1450c <__snprintf_chk@plt+0x3164>
   1459c:	ldr	r3, [pc, #44]	; 145d0 <__snprintf_chk@plt+0x3228>
   145a0:	mov	r2, #5
   145a4:	mov	r0, #0
   145a8:	push	{r4, lr}
   145ac:	ldr	r1, [pc, #32]	; 145d4 <__snprintf_chk@plt+0x322c>
   145b0:	ldr	r4, [r3]
   145b4:	bl	11120 <dcgettext@plt>
   145b8:	mov	r3, r0
   145bc:	ldr	r2, [pc, #20]	; 145d8 <__snprintf_chk@plt+0x3230>
   145c0:	mov	r1, #0
   145c4:	mov	r0, r4
   145c8:	bl	111d4 <error@plt>
   145cc:	bl	1139c <abort@plt>
   145d0:	andeq	r6, r2, r8, lsr r1
   145d4:	andeq	r5, r1, fp, asr fp
   145d8:	andeq	r5, r1, ip, lsr r7
   145dc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   145e0:	mov	r4, #0
   145e4:	mov	r7, r0
   145e8:	mov	r9, r3
   145ec:	mov	r5, r1
   145f0:	mov	r8, r2
   145f4:	bl	1127c <__errno_location@plt>
   145f8:	mov	r6, r0
   145fc:	add	r1, sp, #4
   14600:	str	r4, [r0]
   14604:	mov	r0, r7
   14608:	blx	r9
   1460c:	ldr	r3, [sp, #4]
   14610:	cmp	r3, r7
   14614:	beq	14644 <__snprintf_chk@plt+0x329c>
   14618:	cmp	r5, r4
   1461c:	bne	1464c <__snprintf_chk@plt+0x32a4>
   14620:	ldrb	r2, [r3]
   14624:	cmp	r2, r4
   14628:	movne	r0, r5
   1462c:	bne	14674 <__snprintf_chk@plt+0x32cc>
   14630:	vcmp.f64	d0, #0.0
   14634:	vmrs	APSR_nzcv, fpscr
   14638:	bne	1465c <__snprintf_chk@plt+0x32b4>
   1463c:	mov	r0, #1
   14640:	b	14674 <__snprintf_chk@plt+0x32cc>
   14644:	mov	r0, r4
   14648:	b	14668 <__snprintf_chk@plt+0x32c0>
   1464c:	vcmp.f64	d0, #0.0
   14650:	vmrs	APSR_nzcv, fpscr
   14654:	moveq	r0, #1
   14658:	beq	14670 <__snprintf_chk@plt+0x32c8>
   1465c:	ldr	r0, [r6]
   14660:	subs	r0, r0, #34	; 0x22
   14664:	movne	r0, #1
   14668:	cmp	r5, #0
   1466c:	beq	14674 <__snprintf_chk@plt+0x32cc>
   14670:	str	r3, [r5]
   14674:	vstr	d0, [r8]
   14678:	add	sp, sp, #12
   1467c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14680:	cmp	r1, #0
   14684:	cmpne	r0, #0
   14688:	beq	146c0 <__snprintf_chk@plt+0x3318>
   1468c:	push	{r4, r5, r6, lr}
   14690:	umull	r4, r5, r0, r1
   14694:	adds	r3, r5, #0
   14698:	movne	r3, #1
   1469c:	cmp	r4, #0
   146a0:	blt	146ac <__snprintf_chk@plt+0x3304>
   146a4:	cmp	r3, #0
   146a8:	beq	146cc <__snprintf_chk@plt+0x3324>
   146ac:	bl	1127c <__errno_location@plt>
   146b0:	mov	r3, #12
   146b4:	str	r3, [r0]
   146b8:	mov	r0, #0
   146bc:	pop	{r4, r5, r6, pc}
   146c0:	mov	r1, #1
   146c4:	mov	r0, r1
   146c8:	b	1106c <calloc@plt>
   146cc:	pop	{r4, r5, r6, lr}
   146d0:	b	146c8 <__snprintf_chk@plt+0x3320>
   146d4:	cmp	r0, #0
   146d8:	beq	146f8 <__snprintf_chk@plt+0x3350>
   146dc:	bge	146fc <__snprintf_chk@plt+0x3354>
   146e0:	push	{r4, lr}
   146e4:	bl	1127c <__errno_location@plt>
   146e8:	mov	r3, #12
   146ec:	str	r3, [r0]
   146f0:	mov	r0, #0
   146f4:	pop	{r4, pc}
   146f8:	mov	r0, #1
   146fc:	b	111ec <malloc@plt>
   14700:	cmp	r0, #0
   14704:	bne	14710 <__snprintf_chk@plt+0x3368>
   14708:	mov	r0, r1
   1470c:	b	146d4 <__snprintf_chk@plt+0x332c>
   14710:	cmp	r1, #0
   14714:	push	{r4, lr}
   14718:	bne	14728 <__snprintf_chk@plt+0x3380>
   1471c:	bl	12528 <__snprintf_chk@plt+0x1180>
   14720:	mov	r0, #0
   14724:	pop	{r4, pc}
   14728:	blt	14734 <__snprintf_chk@plt+0x338c>
   1472c:	pop	{r4, lr}
   14730:	b	11138 <realloc@plt>
   14734:	bl	1127c <__errno_location@plt>
   14738:	mov	r3, #12
   1473c:	str	r3, [r0]
   14740:	b	14720 <__snprintf_chk@plt+0x3378>
   14744:	andeq	r0, r0, r0
   14748:	push	{r4, r5, r6, lr}
   1474c:	mov	r6, r0
   14750:	mov	r5, r1
   14754:	ldr	r4, [pc, #76]	; 147a8 <__snprintf_chk@plt+0x3400>
   14758:	ldr	r2, [r4]
   1475c:	cmp	r2, #0
   14760:	bne	14774 <__snprintf_chk@plt+0x33cc>
   14764:	ldr	r1, [pc, #64]	; 147ac <__snprintf_chk@plt+0x3404>
   14768:	movw	r0, #8127	; 0x1fbf
   1476c:	bl	11354 <newlocale@plt>
   14770:	str	r0, [r4]
   14774:	ldr	r2, [r4]
   14778:	cmp	r2, #0
   1477c:	bne	14790 <__snprintf_chk@plt+0x33e8>
   14780:	cmp	r5, #0
   14784:	vldr	d0, [pc, #20]	; 147a0 <__snprintf_chk@plt+0x33f8>
   14788:	strne	r6, [r5]
   1478c:	pop	{r4, r5, r6, pc}
   14790:	mov	r1, r5
   14794:	mov	r0, r6
   14798:	pop	{r4, r5, r6, lr}
   1479c:	b	1130c <strtod_l@plt>
	...
   147a8:	muleq	r2, r8, r4
   147ac:	andeq	r5, r1, ip, ror #22
   147b0:	push	{r4, r5, r6, lr}
   147b4:	mov	r4, r0
   147b8:	bl	111b0 <__fpending@plt>
   147bc:	mov	r5, r0
   147c0:	mov	r0, r4
   147c4:	bl	111bc <ferror_unlocked@plt>
   147c8:	mov	r6, r0
   147cc:	mov	r0, r4
   147d0:	bl	14820 <__snprintf_chk@plt+0x3478>
   147d4:	cmp	r6, #0
   147d8:	mov	r4, r0
   147dc:	bne	14808 <__snprintf_chk@plt+0x3460>
   147e0:	cmp	r0, #0
   147e4:	beq	14800 <__snprintf_chk@plt+0x3458>
   147e8:	cmp	r5, #0
   147ec:	bne	14818 <__snprintf_chk@plt+0x3470>
   147f0:	bl	1127c <__errno_location@plt>
   147f4:	ldr	r4, [r0]
   147f8:	subs	r4, r4, #9
   147fc:	mvnne	r4, #0
   14800:	mov	r0, r4
   14804:	pop	{r4, r5, r6, pc}
   14808:	cmp	r0, #0
   1480c:	bne	14818 <__snprintf_chk@plt+0x3470>
   14810:	bl	1127c <__errno_location@plt>
   14814:	str	r4, [r0]
   14818:	mvn	r4, #0
   1481c:	b	14800 <__snprintf_chk@plt+0x3458>
   14820:	push	{r0, r1, r2, r4, r5, lr}
   14824:	mov	r4, r0
   14828:	bl	112dc <fileno@plt>
   1482c:	cmp	r0, #0
   14830:	mov	r0, r4
   14834:	bge	14844 <__snprintf_chk@plt+0x349c>
   14838:	add	sp, sp, #12
   1483c:	pop	{r4, r5, lr}
   14840:	b	112f4 <fclose@plt>
   14844:	bl	11210 <__freading@plt>
   14848:	cmp	r0, #0
   1484c:	bne	14888 <__snprintf_chk@plt+0x34e0>
   14850:	mov	r0, r4
   14854:	bl	148c8 <__snprintf_chk@plt+0x3520>
   14858:	cmp	r0, #0
   1485c:	bne	148bc <__snprintf_chk@plt+0x3514>
   14860:	mov	r5, #0
   14864:	mov	r0, r4
   14868:	bl	112f4 <fclose@plt>
   1486c:	cmp	r5, #0
   14870:	beq	14880 <__snprintf_chk@plt+0x34d8>
   14874:	bl	1127c <__errno_location@plt>
   14878:	str	r5, [r0]
   1487c:	mvn	r0, #0
   14880:	add	sp, sp, #12
   14884:	pop	{r4, r5, pc}
   14888:	mov	r0, r4
   1488c:	bl	112dc <fileno@plt>
   14890:	mov	r3, #1
   14894:	mov	r2, #0
   14898:	str	r3, [sp]
   1489c:	mov	r3, #0
   148a0:	bl	11180 <lseek64@plt>
   148a4:	mvn	r3, #0
   148a8:	mvn	r2, #0
   148ac:	cmp	r1, r3
   148b0:	cmpeq	r0, r2
   148b4:	bne	14850 <__snprintf_chk@plt+0x34a8>
   148b8:	b	14860 <__snprintf_chk@plt+0x34b8>
   148bc:	bl	1127c <__errno_location@plt>
   148c0:	ldr	r5, [r0]
   148c4:	b	14864 <__snprintf_chk@plt+0x34bc>
   148c8:	push	{r0, r1, r4, lr}
   148cc:	subs	r4, r0, #0
   148d0:	bne	148e4 <__snprintf_chk@plt+0x353c>
   148d4:	mov	r0, r4
   148d8:	add	sp, sp, #8
   148dc:	pop	{r4, lr}
   148e0:	b	110a8 <fflush@plt>
   148e4:	bl	11210 <__freading@plt>
   148e8:	cmp	r0, #0
   148ec:	beq	148d4 <__snprintf_chk@plt+0x352c>
   148f0:	ldr	r3, [r4]
   148f4:	tst	r3, #256	; 0x100
   148f8:	beq	148d4 <__snprintf_chk@plt+0x352c>
   148fc:	mov	r3, #1
   14900:	mov	r2, #0
   14904:	mov	r0, r4
   14908:	str	r3, [sp]
   1490c:	mov	r3, #0
   14910:	bl	14918 <__snprintf_chk@plt+0x3570>
   14914:	b	148d4 <__snprintf_chk@plt+0x352c>
   14918:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1491c:	mov	r4, r0
   14920:	ldmib	r0, {ip, lr}
   14924:	ldr	r8, [sp, #32]
   14928:	cmp	lr, ip
   1492c:	bne	1499c <__snprintf_chk@plt+0x35f4>
   14930:	ldr	ip, [r0, #16]
   14934:	ldr	lr, [r0, #20]
   14938:	cmp	lr, ip
   1493c:	bne	1499c <__snprintf_chk@plt+0x35f4>
   14940:	ldr	r5, [r0, #36]	; 0x24
   14944:	cmp	r5, #0
   14948:	bne	1499c <__snprintf_chk@plt+0x35f4>
   1494c:	mov	r6, r2
   14950:	mov	r7, r3
   14954:	bl	112dc <fileno@plt>
   14958:	mov	r2, r6
   1495c:	mov	r3, r7
   14960:	str	r8, [sp]
   14964:	bl	11180 <lseek64@plt>
   14968:	mvn	r3, #0
   1496c:	mvn	r2, #0
   14970:	cmp	r1, r3
   14974:	cmpeq	r0, r2
   14978:	mvneq	r0, #0
   1497c:	beq	14994 <__snprintf_chk@plt+0x35ec>
   14980:	ldr	r3, [r4]
   14984:	strd	r0, [r4, #80]	; 0x50
   14988:	mov	r0, r5
   1498c:	bic	r3, r3, #16
   14990:	str	r3, [r4]
   14994:	add	sp, sp, #8
   14998:	pop	{r4, r5, r6, r7, r8, pc}
   1499c:	mov	r0, r4
   149a0:	str	r8, [sp, #32]
   149a4:	add	sp, sp, #8
   149a8:	pop	{r4, r5, r6, r7, r8, lr}
   149ac:	b	11300 <fseeko64@plt>
   149b0:	b	146d4 <__snprintf_chk@plt+0x332c>
   149b4:	cmp	r1, #0
   149b8:	orreq	r1, r1, #1
   149bc:	b	14700 <__snprintf_chk@plt+0x3358>
   149c0:	b	14680 <__snprintf_chk@plt+0x32d8>
   149c4:	cmp	r2, #0
   149c8:	cmpne	r1, #0
   149cc:	moveq	r2, #1
   149d0:	moveq	r1, r2
   149d4:	b	14a5c <__snprintf_chk@plt+0x36b4>
   149d8:	push	{r4, lr}
   149dc:	mov	r0, #14
   149e0:	bl	11348 <nl_langinfo@plt>
   149e4:	cmp	r0, #0
   149e8:	beq	14a00 <__snprintf_chk@plt+0x3658>
   149ec:	ldrb	r2, [r0]
   149f0:	ldr	r3, [pc, #16]	; 14a08 <__snprintf_chk@plt+0x3660>
   149f4:	cmp	r2, #0
   149f8:	moveq	r0, r3
   149fc:	pop	{r4, pc}
   14a00:	ldr	r0, [pc]	; 14a08 <__snprintf_chk@plt+0x3660>
   14a04:	pop	{r4, pc}
   14a08:	andeq	r5, r1, lr, ror #22
   14a0c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14a10:	subs	r5, r0, #0
   14a14:	mov	r7, r2
   14a18:	addeq	r5, sp, #4
   14a1c:	mov	r6, r1
   14a20:	mov	r0, r5
   14a24:	bl	111c8 <mbrtowc@plt>
   14a28:	cmp	r7, #0
   14a2c:	cmnne	r0, #3
   14a30:	mov	r4, r0
   14a34:	bls	14a50 <__snprintf_chk@plt+0x36a8>
   14a38:	mov	r0, #0
   14a3c:	bl	14a88 <__snprintf_chk@plt+0x36e0>
   14a40:	cmp	r0, #0
   14a44:	ldrbeq	r3, [r6]
   14a48:	moveq	r4, #1
   14a4c:	streq	r3, [r5]
   14a50:	mov	r0, r4
   14a54:	add	sp, sp, #12
   14a58:	pop	{r4, r5, r6, r7, pc}
   14a5c:	umull	r2, r3, r1, r2
   14a60:	cmp	r3, #0
   14a64:	bne	14a70 <__snprintf_chk@plt+0x36c8>
   14a68:	mov	r1, r2
   14a6c:	b	14700 <__snprintf_chk@plt+0x3358>
   14a70:	push	{r4, lr}
   14a74:	bl	1127c <__errno_location@plt>
   14a78:	mov	r3, #12
   14a7c:	str	r3, [r0]
   14a80:	mov	r0, #0
   14a84:	pop	{r4, pc}
   14a88:	push	{lr}		; (str lr, [sp, #-4]!)
   14a8c:	sub	sp, sp, #268	; 0x10c
   14a90:	movw	r2, #257	; 0x101
   14a94:	add	r1, sp, #4
   14a98:	bl	14ae4 <__snprintf_chk@plt+0x373c>
   14a9c:	cmp	r0, #0
   14aa0:	movne	r0, #0
   14aa4:	bne	14ad4 <__snprintf_chk@plt+0x372c>
   14aa8:	ldr	r1, [pc, #44]	; 14adc <__snprintf_chk@plt+0x3734>
   14aac:	add	r0, sp, #4
   14ab0:	bl	11090 <strcmp@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14ad0 <__snprintf_chk@plt+0x3728>
   14abc:	ldr	r1, [pc, #28]	; 14ae0 <__snprintf_chk@plt+0x3738>
   14ac0:	add	r0, sp, #4
   14ac4:	bl	11090 <strcmp@plt>
   14ac8:	adds	r0, r0, #0
   14acc:	movne	r0, #1
   14ad0:	and	r0, r0, #1
   14ad4:	add	sp, sp, #268	; 0x10c
   14ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   14adc:	andeq	r5, r1, ip, ror #22
   14ae0:	andeq	r5, r1, r4, ror fp
   14ae4:	push	{r4, r5, r6, lr}
   14ae8:	mov	r5, r1
   14aec:	mov	r1, #0
   14af0:	mov	r4, r2
   14af4:	bl	11318 <setlocale@plt>
   14af8:	subs	r6, r0, #0
   14afc:	bne	14b10 <__snprintf_chk@plt+0x3768>
   14b00:	cmp	r4, #0
   14b04:	mov	r0, #22
   14b08:	strbne	r6, [r5]
   14b0c:	pop	{r4, r5, r6, pc}
   14b10:	bl	11258 <strlen@plt>
   14b14:	cmp	r4, r0
   14b18:	bls	14b34 <__snprintf_chk@plt+0x378c>
   14b1c:	add	r2, r0, #1
   14b20:	mov	r1, r6
   14b24:	mov	r0, r5
   14b28:	bl	110d8 <memcpy@plt>
   14b2c:	mov	r0, #0
   14b30:	pop	{r4, r5, r6, pc}
   14b34:	cmp	r4, #0
   14b38:	beq	14b58 <__snprintf_chk@plt+0x37b0>
   14b3c:	sub	r4, r4, #1
   14b40:	mov	r1, r6
   14b44:	mov	r2, r4
   14b48:	mov	r0, r5
   14b4c:	bl	110d8 <memcpy@plt>
   14b50:	mov	r3, #0
   14b54:	strb	r3, [r5, r4]
   14b58:	mov	r0, #34	; 0x22
   14b5c:	pop	{r4, r5, r6, pc}
   14b60:	mov	r1, #0
   14b64:	b	11318 <setlocale@plt>
   14b68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b6c:	mov	r7, r0
   14b70:	ldr	r6, [pc, #72]	; 14bc0 <__snprintf_chk@plt+0x3818>
   14b74:	ldr	r5, [pc, #72]	; 14bc4 <__snprintf_chk@plt+0x381c>
   14b78:	add	r6, pc, r6
   14b7c:	add	r5, pc, r5
   14b80:	sub	r6, r6, r5
   14b84:	mov	r8, r1
   14b88:	mov	r9, r2
   14b8c:	bl	1104c <calloc@plt-0x20>
   14b90:	asrs	r6, r6, #2
   14b94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b98:	mov	r4, #0
   14b9c:	add	r4, r4, #1
   14ba0:	ldr	r3, [r5], #4
   14ba4:	mov	r2, r9
   14ba8:	mov	r1, r8
   14bac:	mov	r0, r7
   14bb0:	blx	r3
   14bb4:	cmp	r6, r4
   14bb8:	bne	14b9c <__snprintf_chk@plt+0x37f4>
   14bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bc0:	andeq	r1, r1, r4, lsl #7
   14bc4:	andeq	r1, r1, ip, ror r3
   14bc8:	bx	lr
   14bcc:	ldr	r3, [pc, #12]	; 14be0 <__snprintf_chk@plt+0x3838>
   14bd0:	mov	r1, #0
   14bd4:	add	r3, pc, r3
   14bd8:	ldr	r2, [r3]
   14bdc:	b	11294 <__cxa_atexit@plt>
   14be0:	andeq	r1, r1, r0, asr r5

Disassembly of section .fini:

00014be4 <.fini>:
   14be4:	push	{r3, lr}
   14be8:	pop	{r3, pc}
