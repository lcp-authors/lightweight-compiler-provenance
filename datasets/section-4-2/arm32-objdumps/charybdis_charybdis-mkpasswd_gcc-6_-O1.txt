
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010680 <.init>:
   10680:	push	{r3, lr}
   10684:	bl	107e4 <sprintf@plt+0x48>
   10688:	pop	{r3, pc}

Disassembly of section .plt:

0001068c <open@plt-0x14>:
   1068c:	push	{lr}		; (str lr, [sp, #-4]!)
   10690:	ldr	lr, [pc, #4]	; 1069c <open@plt-0x4>
   10694:	add	lr, pc, lr
   10698:	ldr	pc, [lr, #8]!
   1069c:	andeq	r1, r1, r4, ror #18

000106a0 <open@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2404]!	; 0x964

000106ac <abort@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2396]!	; 0x95c

000106b8 <srand@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2388]!	; 0x954

000106c4 <__libc_start_main@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2380]!	; 0x94c

000106d0 <__gmon_start__@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2372]!	; 0x944

000106dc <getpass@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2364]!	; 0x93c

000106e8 <calloc@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2356]!	; 0x934

000106f4 <free@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2348]!	; 0x92c

00010700 <read@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2340]!	; 0x924

0001070c <strlen@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2332]!	; 0x91c

00010718 <getopt@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2324]!	; 0x914

00010724 <strtol@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2316]!	; 0x90c

00010730 <printf@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2308]!	; 0x904

0001073c <fwrite@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2300]!	; 0x8fc

00010748 <time@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2292]!	; 0x8f4

00010754 <strdup@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2284]!	; 0x8ec

00010760 <rb_crypt@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2276]!	; 0x8e4

0001076c <puts@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2268]!	; 0x8dc

00010778 <rand@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2260]!	; 0x8d4

00010784 <strcmp@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010790 <exit@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2244]!	; 0x8c4

0001079c <sprintf@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2236]!	; 0x8bc

Disassembly of section .text:

000107a8 <.text>:
   107a8:	mov	fp, #0
   107ac:	mov	lr, #0
   107b0:	pop	{r1}		; (ldr r1, [sp], #4)
   107b4:	mov	r2, sp
   107b8:	push	{r2}		; (str r2, [sp, #-4]!)
   107bc:	push	{r0}		; (str r0, [sp, #-4]!)
   107c0:	ldr	ip, [pc, #16]	; 107d8 <sprintf@plt+0x3c>
   107c4:	push	{ip}		; (str ip, [sp, #-4]!)
   107c8:	ldr	r0, [pc, #12]	; 107dc <sprintf@plt+0x40>
   107cc:	ldr	r3, [pc, #12]	; 107e0 <sprintf@plt+0x44>
   107d0:	bl	106c4 <__libc_start_main@plt>
   107d4:	bl	106ac <abort@plt>
   107d8:	andeq	r1, r1, r4, lsr #3
   107dc:	andeq	r0, r1, r8, ror #19
   107e0:	andeq	r1, r1, r4, asr #2
   107e4:	ldr	r3, [pc, #20]	; 10800 <sprintf@plt+0x64>
   107e8:	ldr	r2, [pc, #20]	; 10804 <sprintf@plt+0x68>
   107ec:	add	r3, pc, r3
   107f0:	ldr	r2, [r3, r2]
   107f4:	cmp	r2, #0
   107f8:	bxeq	lr
   107fc:	b	106d0 <__gmon_start__@plt>
   10800:	andeq	r1, r1, ip, lsl #16
   10804:	andeq	r0, r0, r4, rrx
   10808:	ldr	r3, [pc, #28]	; 1082c <sprintf@plt+0x90>
   1080c:	ldr	r0, [pc, #28]	; 10830 <sprintf@plt+0x94>
   10810:	sub	r3, r3, r0
   10814:	cmp	r3, #6
   10818:	bxls	lr
   1081c:	ldr	r3, [pc, #16]	; 10834 <sprintf@plt+0x98>
   10820:	cmp	r3, #0
   10824:	bxeq	lr
   10828:	bx	r3
   1082c:	andeq	r2, r2, r3, ror r0
   10830:	andeq	r2, r2, r0, ror r0
   10834:	andeq	r0, r0, r0
   10838:	ldr	r1, [pc, #36]	; 10864 <sprintf@plt+0xc8>
   1083c:	ldr	r0, [pc, #36]	; 10868 <sprintf@plt+0xcc>
   10840:	sub	r1, r1, r0
   10844:	asr	r1, r1, #2
   10848:	add	r1, r1, r1, lsr #31
   1084c:	asrs	r1, r1, #1
   10850:	bxeq	lr
   10854:	ldr	r3, [pc, #16]	; 1086c <sprintf@plt+0xd0>
   10858:	cmp	r3, #0
   1085c:	bxeq	lr
   10860:	bx	r3
   10864:	andeq	r2, r2, r0, ror r0
   10868:	andeq	r2, r2, r0, ror r0
   1086c:	andeq	r0, r0, r0
   10870:	push	{r4, lr}
   10874:	ldr	r4, [pc, #24]	; 10894 <sprintf@plt+0xf8>
   10878:	ldrb	r3, [r4]
   1087c:	cmp	r3, #0
   10880:	popne	{r4, pc}
   10884:	bl	10808 <sprintf@plt+0x6c>
   10888:	mov	r3, #1
   1088c:	strb	r3, [r4]
   10890:	pop	{r4, pc}
   10894:	andeq	r2, r2, ip, ror r0
   10898:	ldr	r0, [pc, #40]	; 108c8 <sprintf@plt+0x12c>
   1089c:	ldr	r3, [r0]
   108a0:	cmp	r3, #0
   108a4:	bne	108ac <sprintf@plt+0x110>
   108a8:	b	10838 <sprintf@plt+0x9c>
   108ac:	ldr	r3, [pc, #24]	; 108cc <sprintf@plt+0x130>
   108b0:	cmp	r3, #0
   108b4:	beq	108a8 <sprintf@plt+0x10c>
   108b8:	push	{r4, lr}
   108bc:	blx	r3
   108c0:	pop	{r4, lr}
   108c4:	b	10838 <sprintf@plt+0x9c>
   108c8:	strdeq	r1, [r2], -ip
   108cc:	andeq	r0, r0, r0
   108d0:	push	{r4, r5, r6, r7, r8, lr}
   108d4:	mov	r7, r0
   108d8:	mov	r5, r1
   108dc:	mov	r0, #0
   108e0:	bl	10748 <time@plt>
   108e4:	bl	106b8 <srand@plt>
   108e8:	cmp	r5, #0
   108ec:	ble	10924 <sprintf@plt+0x188>
   108f0:	mov	r4, r7
   108f4:	add	r5, r7, r5
   108f8:	ldr	r6, [pc, #44]	; 1092c <sprintf@plt+0x190>
   108fc:	bl	10778 <rand@plt>
   10900:	asr	r3, r0, #31
   10904:	lsr	r3, r3, #26
   10908:	add	r0, r0, r3
   1090c:	and	r0, r0, #63	; 0x3f
   10910:	sub	r0, r0, r3
   10914:	ldrb	r3, [r6, r0]
   10918:	strb	r3, [r4], #1
   1091c:	cmp	r4, r5
   10920:	bne	108fc <sprintf@plt+0x160>
   10924:	mov	r0, r7
   10928:	pop	{r4, r5, r6, r7, r8, pc}
   1092c:			; <UNDEFINED> instruction: 0x000111b4
   10930:	push	{r4, r5, r6, r7, r8, lr}
   10934:	mov	r5, r0
   10938:	mov	r4, r1
   1093c:	mov	r1, #0
   10940:	ldr	r0, [pc, #152]	; 109e0 <sprintf@plt+0x244>
   10944:	bl	106a0 <open@plt>
   10948:	subs	r7, r0, #0
   1094c:	blt	109b8 <sprintf@plt+0x21c>
   10950:	mov	r1, r4
   10954:	mov	r0, #1
   10958:	bl	106e8 <calloc@plt>
   1095c:	mov	r6, r0
   10960:	mov	r2, r4
   10964:	mov	r1, r0
   10968:	mov	r0, r7
   1096c:	bl	10700 <read@plt>
   10970:	cmp	r4, r0
   10974:	bne	109c8 <sprintf@plt+0x22c>
   10978:	cmp	r4, #0
   1097c:	ble	109a8 <sprintf@plt+0x20c>
   10980:	mov	r2, r6
   10984:	sub	ip, r5, #1
   10988:	add	r1, r6, r4
   1098c:	ldr	r0, [pc, #80]	; 109e4 <sprintf@plt+0x248>
   10990:	ldrb	r3, [r2], #1
   10994:	and	r3, r3, #63	; 0x3f
   10998:	ldrb	r3, [r0, r3]
   1099c:	strb	r3, [ip, #1]!
   109a0:	cmp	r2, r1
   109a4:	bne	10990 <sprintf@plt+0x1f4>
   109a8:	mov	r0, r6
   109ac:	bl	106f4 <free@plt>
   109b0:	mov	r0, r5
   109b4:	pop	{r4, r5, r6, r7, r8, pc}
   109b8:	mov	r1, r4
   109bc:	mov	r0, r5
   109c0:	bl	108d0 <sprintf@plt+0x134>
   109c4:	pop	{r4, r5, r6, r7, r8, pc}
   109c8:	mov	r0, r6
   109cc:	bl	106f4 <free@plt>
   109d0:	mov	r1, r4
   109d4:	mov	r0, r5
   109d8:	bl	108d0 <sprintf@plt+0x134>
   109dc:	pop	{r4, r5, r6, r7, r8, pc}
   109e0:	strdeq	r1, [r1], -r8
   109e4:			; <UNDEFINED> instruction: 0x000111b4
   109e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109ec:	sub	sp, sp, #20
   109f0:	mov	r7, r0
   109f4:	str	r1, [sp]
   109f8:	mov	r5, #0
   109fc:	str	r5, [sp, #4]
   10a00:	mov	r4, r5
   10a04:	mov	fp, r5
   10a08:	mov	sl, r5
   10a0c:	ldr	r6, [pc, #1652]	; 11088 <sprintf@plt+0x8ec>
   10a10:	ldr	r8, [pc, #1652]	; 1108c <sprintf@plt+0x8f0>
   10a14:	mov	r9, r5
   10a18:	mov	r2, r6
   10a1c:	ldr	r1, [sp]
   10a20:	mov	r0, r7
   10a24:	bl	10718 <getopt@plt>
   10a28:	cmn	r0, #1
   10a2c:	beq	10c58 <sprintf@plt+0x4bc>
   10a30:	sub	r3, r0, #63	; 0x3f
   10a34:	cmp	r3, #58	; 0x3a
   10a38:	ldrls	pc, [pc, r3, lsl #2]
   10a3c:	b	10c48 <sprintf@plt+0x4ac>
   10a40:	andeq	r0, r1, r8, lsl #24
   10a44:	andeq	r0, r1, r8, asr #24
   10a48:	andeq	r0, r1, r8, asr #24
   10a4c:	andeq	r0, r1, r8, asr #24
   10a50:	andeq	r0, r1, r8, asr #24
   10a54:	andeq	r0, r1, r8, asr #24
   10a58:	andeq	r0, r1, r8, asr #24
   10a5c:	andeq	r0, r1, r8, asr #24
   10a60:	andeq	r0, r1, r8, asr #24
   10a64:	andeq	r0, r1, r8, asr #24
   10a68:	andeq	r0, r1, r8, asr #24
   10a6c:	andeq	r0, r1, r8, asr #24
   10a70:	andeq	r0, r1, r8, asr #24
   10a74:	andeq	r0, r1, r8, asr #24
   10a78:	andeq	r0, r1, r8, asr #24
   10a7c:	andeq	r0, r1, r8, asr #24
   10a80:	andeq	r0, r1, r8, asr #24
   10a84:	andeq	r0, r1, r8, asr #24
   10a88:	andeq	r0, r1, r8, asr #24
   10a8c:	andeq	r0, r1, r8, asr #24
   10a90:	andeq	r0, r1, r8, asr #24
   10a94:	andeq	r0, r1, r8, asr #24
   10a98:	andeq	r0, r1, r8, asr #24
   10a9c:	andeq	r0, r1, r8, asr #24
   10aa0:	andeq	r0, r1, r8, asr #24
   10aa4:	andeq	r0, r1, r8, asr #24
   10aa8:	andeq	r0, r1, r8, asr #24
   10aac:	andeq	r0, r1, r8, asr #24
   10ab0:	andeq	r0, r1, r8, asr #24
   10ab4:	andeq	r0, r1, r8, asr #24
   10ab8:	andeq	r0, r1, r8, asr #24
   10abc:	andeq	r0, r1, r8, asr #24
   10ac0:	andeq	r0, r1, r8, asr #24
   10ac4:	andeq	r0, r1, r8, asr #24
   10ac8:	andeq	r0, r1, r8, asr #24
   10acc:	andeq	r0, r1, r4, lsr fp
   10ad0:	andeq	r0, r1, r8, asr #24
   10ad4:	andeq	r0, r1, r8, asr #24
   10ad8:	andeq	r0, r1, r8, asr #24
   10adc:	andeq	r0, r1, r8, asr #24
   10ae0:	andeq	r0, r1, r8, asr #24
   10ae4:	andeq	r0, r1, r0, lsr #23
   10ae8:	andeq	r0, r1, r8, asr #24
   10aec:	andeq	r0, r1, r8, asr #24
   10af0:	andeq	r0, r1, r8, asr #24
   10af4:	andeq	r0, r1, r0, asr #22
   10af8:	andeq	r0, r1, ip, lsr #22
   10afc:	andeq	r0, r1, r8, asr #24
   10b00:	andeq	r0, r1, r8, asr #24
   10b04:	andeq	r0, r1, r4, lsl #23
   10b08:	andeq	r0, r1, r8, asr #24
   10b0c:	andeq	r0, r1, ip, asr fp
   10b10:	andeq	r0, r1, r8, ror fp
   10b14:	andeq	r0, r1, r8, asr #24
   10b18:	andeq	r0, r1, r8, asr #24
   10b1c:	andeq	r0, r1, r8, asr #24
   10b20:	andeq	r0, r1, r8, asr #24
   10b24:	muleq	r1, r0, fp
   10b28:	muleq	r1, r8, fp
   10b2c:	orr	r4, r4, #1
   10b30:	b	10a18 <sprintf@plt+0x27c>
   10b34:	orr	r4, r4, #16
   10b38:	mov	r5, #4
   10b3c:	b	10a18 <sprintf@plt+0x27c>
   10b40:	orr	r4, r4, #8
   10b44:	mov	r2, #10
   10b48:	mov	r1, r9
   10b4c:	ldr	r0, [r8]
   10b50:	bl	10724 <strtol@plt>
   10b54:	str	r0, [sp, #4]
   10b58:	b	10a18 <sprintf@plt+0x27c>
   10b5c:	orr	r4, r4, #32
   10b60:	mov	r2, #10
   10b64:	mov	r1, r9
   10b68:	ldr	r0, [r8]
   10b6c:	bl	10724 <strtol@plt>
   10b70:	mov	r5, r0
   10b74:	b	10a18 <sprintf@plt+0x27c>
   10b78:	orr	r4, r4, #2
   10b7c:	ldr	fp, [r8]
   10b80:	b	10a18 <sprintf@plt+0x27c>
   10b84:	orr	r4, r4, #4
   10b88:	ldr	sl, [r8]
   10b8c:	b	10a18 <sprintf@plt+0x27c>
   10b90:	orr	r4, r4, #64	; 0x40
   10b94:	b	10a18 <sprintf@plt+0x27c>
   10b98:	orr	r4, r4, #128	; 0x80
   10b9c:	b	10a18 <sprintf@plt+0x27c>
   10ba0:	ldr	r0, [pc, #1256]	; 11090 <sprintf@plt+0x8f4>
   10ba4:	bl	1076c <puts@plt>
   10ba8:	ldr	r0, [pc, #1252]	; 11094 <sprintf@plt+0x8f8>
   10bac:	bl	1076c <puts@plt>
   10bb0:	ldr	r0, [pc, #1248]	; 11098 <sprintf@plt+0x8fc>
   10bb4:	bl	1076c <puts@plt>
   10bb8:	ldr	r0, [pc, #1244]	; 1109c <sprintf@plt+0x900>
   10bbc:	bl	1076c <puts@plt>
   10bc0:	ldr	r0, [pc, #1240]	; 110a0 <sprintf@plt+0x904>
   10bc4:	bl	1076c <puts@plt>
   10bc8:	ldr	r0, [pc, #1236]	; 110a4 <sprintf@plt+0x908>
   10bcc:	bl	1076c <puts@plt>
   10bd0:	ldr	r0, [pc, #1232]	; 110a8 <sprintf@plt+0x90c>
   10bd4:	bl	1076c <puts@plt>
   10bd8:	ldr	r0, [pc, #1228]	; 110ac <sprintf@plt+0x910>
   10bdc:	bl	1076c <puts@plt>
   10be0:	ldr	r0, [pc, #1224]	; 110b0 <sprintf@plt+0x914>
   10be4:	bl	1076c <puts@plt>
   10be8:	ldr	r0, [pc, #1220]	; 110b4 <sprintf@plt+0x918>
   10bec:	bl	1076c <puts@plt>
   10bf0:	ldr	r0, [pc, #1216]	; 110b8 <sprintf@plt+0x91c>
   10bf4:	bl	1076c <puts@plt>
   10bf8:	ldr	r0, [pc, #1212]	; 110bc <sprintf@plt+0x920>
   10bfc:	bl	1076c <puts@plt>
   10c00:	mov	r0, #0
   10c04:	bl	10790 <exit@plt>
   10c08:	ldr	r0, [pc, #1200]	; 110c0 <sprintf@plt+0x924>
   10c0c:	bl	1076c <puts@plt>
   10c10:	ldr	r0, [pc, #1196]	; 110c4 <sprintf@plt+0x928>
   10c14:	bl	1076c <puts@plt>
   10c18:	ldr	r0, [pc, #1192]	; 110c8 <sprintf@plt+0x92c>
   10c1c:	bl	1076c <puts@plt>
   10c20:	ldr	r0, [pc, #1188]	; 110cc <sprintf@plt+0x930>
   10c24:	bl	1076c <puts@plt>
   10c28:	ldr	r0, [pc, #1184]	; 110d0 <sprintf@plt+0x934>
   10c2c:	bl	1076c <puts@plt>
   10c30:	ldr	r0, [pc, #1180]	; 110d4 <sprintf@plt+0x938>
   10c34:	bl	1076c <puts@plt>
   10c38:	ldr	r0, [pc, #1176]	; 110d8 <sprintf@plt+0x93c>
   10c3c:	bl	1076c <puts@plt>
   10c40:	mov	r0, #0
   10c44:	bl	10790 <exit@plt>
   10c48:	mov	r1, r0
   10c4c:	ldr	r0, [pc, #1160]	; 110dc <sprintf@plt+0x940>
   10c50:	bl	10730 <printf@plt>
   10c54:	b	10a18 <sprintf@plt+0x27c>
   10c58:	tst	r4, #1
   10c5c:	beq	10d00 <sprintf@plt+0x564>
   10c60:	ldr	r3, [sp, #4]
   10c64:	cmp	r3, #0
   10c68:	beq	10f5c <sprintf@plt+0x7c0>
   10c6c:	tst	r4, #2
   10c70:	beq	10ce4 <sprintf@plt+0x548>
   10c74:	cmp	fp, #0
   10c78:	beq	10cd4 <sprintf@plt+0x538>
   10c7c:	mov	r0, fp
   10c80:	bl	1070c <strlen@plt>
   10c84:	cmp	r0, #16
   10c88:	bhi	10cd4 <sprintf@plt+0x538>
   10c8c:	ldr	r5, [pc, #1100]	; 110e0 <sprintf@plt+0x944>
   10c90:	mov	r2, fp
   10c94:	ldr	r1, [pc, #1096]	; 110e4 <sprintf@plt+0x948>
   10c98:	mov	r0, r5
   10c9c:	bl	1079c <sprintf@plt>
   10ca0:	tst	r4, #4
   10ca4:	beq	10eb4 <sprintf@plt+0x718>
   10ca8:	cmp	sl, #0
   10cac:	beq	10e94 <sprintf@plt+0x6f8>
   10cb0:	mov	r1, r5
   10cb4:	mov	r0, sl
   10cb8:	bl	10760 <rb_crypt@plt>
   10cbc:	mov	r4, r0
   10cc0:	mov	r0, r4
   10cc4:	bl	1076c <puts@plt>
   10cc8:	mov	r0, #0
   10ccc:	add	sp, sp, #20
   10cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cd4:	ldr	r0, [pc, #1036]	; 110e8 <sprintf@plt+0x94c>
   10cd8:	bl	1076c <puts@plt>
   10cdc:	mov	r0, #1
   10ce0:	bl	10790 <exit@plt>
   10ce4:	ldr	r3, [sp, #4]
   10ce8:	cmp	r3, #16
   10cec:	ble	10f6c <sprintf@plt+0x7d0>
   10cf0:	ldr	r0, [pc, #1012]	; 110ec <sprintf@plt+0x950>
   10cf4:	bl	1076c <puts@plt>
   10cf8:	mov	r0, #0
   10cfc:	bl	10790 <exit@plt>
   10d00:	tst	r4, #16
   10d04:	beq	10d8c <sprintf@plt+0x5f0>
   10d08:	ldr	r3, [sp, #4]
   10d0c:	cmp	r3, #0
   10d10:	beq	10fa8 <sprintf@plt+0x80c>
   10d14:	tst	r4, #2
   10d18:	beq	10d70 <sprintf@plt+0x5d4>
   10d1c:	cmp	fp, #0
   10d20:	beq	10d60 <sprintf@plt+0x5c4>
   10d24:	mov	r0, fp
   10d28:	bl	1070c <strlen@plt>
   10d2c:	cmp	r0, #22
   10d30:	bhi	10d60 <sprintf@plt+0x5c4>
   10d34:	mov	r2, r5
   10d38:	ldr	r1, [pc, #944]	; 110f0 <sprintf@plt+0x954>
   10d3c:	add	r0, sp, #12
   10d40:	bl	1079c <sprintf@plt>
   10d44:	ldr	r5, [pc, #936]	; 110f4 <sprintf@plt+0x958>
   10d48:	mov	r3, fp
   10d4c:	add	r2, sp, #12
   10d50:	ldr	r1, [pc, #928]	; 110f8 <sprintf@plt+0x95c>
   10d54:	mov	r0, r5
   10d58:	bl	1079c <sprintf@plt>
   10d5c:	b	10ca0 <sprintf@plt+0x504>
   10d60:	ldr	r0, [pc, #916]	; 110fc <sprintf@plt+0x960>
   10d64:	bl	1076c <puts@plt>
   10d68:	mov	r0, #1
   10d6c:	bl	10790 <exit@plt>
   10d70:	ldr	r3, [sp, #4]
   10d74:	cmp	r3, #22
   10d78:	ble	10fb8 <sprintf@plt+0x81c>
   10d7c:	ldr	r0, [pc, #892]	; 11100 <sprintf@plt+0x964>
   10d80:	bl	1076c <puts@plt>
   10d84:	mov	r0, #0
   10d88:	bl	10790 <exit@plt>
   10d8c:	tst	r4, #64	; 0x40
   10d90:	beq	10e14 <sprintf@plt+0x678>
   10d94:	ldr	r3, [sp, #4]
   10d98:	cmp	r3, #0
   10d9c:	beq	11008 <sprintf@plt+0x86c>
   10da0:	tst	r4, #2
   10da4:	bne	11018 <sprintf@plt+0x87c>
   10da8:	ldr	r3, [sp, #4]
   10dac:	cmp	r3, #16
   10db0:	bgt	10e04 <sprintf@plt+0x668>
   10db4:	ldr	r5, [pc, #840]	; 11104 <sprintf@plt+0x968>
   10db8:	mov	r6, #36	; 0x24
   10dbc:	strb	r6, [r5, #56]	; 0x38
   10dc0:	mov	r3, #53	; 0x35
   10dc4:	strb	r3, [r5, #57]	; 0x39
   10dc8:	strb	r6, [r5, #58]	; 0x3a
   10dcc:	ldr	r7, [sp, #4]
   10dd0:	mov	r1, r7
   10dd4:	add	r0, r5, #59	; 0x3b
   10dd8:	bl	10930 <sprintf@plt+0x194>
   10ddc:	add	r5, r5, r7
   10de0:	strb	r6, [r5, #59]	; 0x3b
   10de4:	mov	r3, #0
   10de8:	strb	r3, [r5, #60]	; 0x3c
   10dec:	ldr	r5, [pc, #788]	; 11108 <sprintf@plt+0x96c>
   10df0:	b	10ca0 <sprintf@plt+0x504>
   10df4:	ldr	r0, [pc, #748]	; 110e8 <sprintf@plt+0x94c>
   10df8:	bl	1076c <puts@plt>
   10dfc:	mov	r0, #1
   10e00:	bl	10790 <exit@plt>
   10e04:	ldr	r0, [pc, #768]	; 1110c <sprintf@plt+0x970>
   10e08:	bl	1076c <puts@plt>
   10e0c:	mov	r0, #0
   10e10:	bl	10790 <exit@plt>
   10e14:	ldr	r3, [sp, #4]
   10e18:	cmp	r3, #0
   10e1c:	beq	11048 <sprintf@plt+0x8ac>
   10e20:	tst	r4, #2
   10e24:	bne	11058 <sprintf@plt+0x8bc>
   10e28:	ldr	r3, [sp, #4]
   10e2c:	cmp	r3, #16
   10e30:	bgt	10e84 <sprintf@plt+0x6e8>
   10e34:	ldr	r5, [pc, #712]	; 11104 <sprintf@plt+0x968>
   10e38:	mov	r6, #36	; 0x24
   10e3c:	strb	r6, [r5, #104]	; 0x68
   10e40:	mov	r3, #54	; 0x36
   10e44:	strb	r3, [r5, #105]	; 0x69
   10e48:	strb	r6, [r5, #106]	; 0x6a
   10e4c:	ldr	r7, [sp, #4]
   10e50:	mov	r1, r7
   10e54:	add	r0, r5, #107	; 0x6b
   10e58:	bl	10930 <sprintf@plt+0x194>
   10e5c:	add	r5, r5, r7
   10e60:	strb	r6, [r5, #107]	; 0x6b
   10e64:	mov	r3, #0
   10e68:	strb	r3, [r5, #108]	; 0x6c
   10e6c:	ldr	r5, [pc, #668]	; 11110 <sprintf@plt+0x974>
   10e70:	b	10ca0 <sprintf@plt+0x504>
   10e74:	ldr	r0, [pc, #620]	; 110e8 <sprintf@plt+0x94c>
   10e78:	bl	1076c <puts@plt>
   10e7c:	mov	r0, #1
   10e80:	bl	10790 <exit@plt>
   10e84:	ldr	r0, [pc, #648]	; 11114 <sprintf@plt+0x978>
   10e88:	bl	1076c <puts@plt>
   10e8c:	mov	r0, #0
   10e90:	bl	10790 <exit@plt>
   10e94:	ldr	r3, [pc, #636]	; 11118 <sprintf@plt+0x97c>
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r2, #30
   10ea0:	mov	r1, #1
   10ea4:	ldr	r0, [pc, #624]	; 1111c <sprintf@plt+0x980>
   10ea8:	bl	1073c <fwrite@plt>
   10eac:	mov	r0, #1
   10eb0:	b	10ccc <sprintf@plt+0x530>
   10eb4:	ldr	r0, [pc, #612]	; 11120 <sprintf@plt+0x984>
   10eb8:	bl	106dc <getpass@plt>
   10ebc:	mov	r1, r5
   10ec0:	bl	10760 <rb_crypt@plt>
   10ec4:	cmp	r0, #0
   10ec8:	beq	10f1c <sprintf@plt+0x780>
   10ecc:	bl	10754 <strdup@plt>
   10ed0:	mov	r4, r0
   10ed4:	ldr	r0, [pc, #584]	; 11124 <sprintf@plt+0x988>
   10ed8:	bl	106dc <getpass@plt>
   10edc:	mov	r1, r5
   10ee0:	bl	10760 <rb_crypt@plt>
   10ee4:	subs	r1, r0, #0
   10ee8:	beq	10f3c <sprintf@plt+0x7a0>
   10eec:	mov	r0, r4
   10ef0:	bl	10784 <strcmp@plt>
   10ef4:	cmp	r0, #0
   10ef8:	beq	10cc0 <sprintf@plt+0x524>
   10efc:	ldr	r3, [pc, #532]	; 11118 <sprintf@plt+0x97c>
   10f00:	ldr	r3, [r3]
   10f04:	mov	r2, #23
   10f08:	mov	r1, #1
   10f0c:	ldr	r0, [pc, #532]	; 11128 <sprintf@plt+0x98c>
   10f10:	bl	1073c <fwrite@plt>
   10f14:	mov	r0, #1
   10f18:	b	10ccc <sprintf@plt+0x530>
   10f1c:	ldr	r3, [pc, #500]	; 11118 <sprintf@plt+0x97c>
   10f20:	ldr	r3, [r3]
   10f24:	mov	r2, #18
   10f28:	mov	r1, #1
   10f2c:	ldr	r0, [pc, #504]	; 1112c <sprintf@plt+0x990>
   10f30:	bl	1073c <fwrite@plt>
   10f34:	mov	r0, #1
   10f38:	b	10ccc <sprintf@plt+0x530>
   10f3c:	ldr	r3, [pc, #468]	; 11118 <sprintf@plt+0x97c>
   10f40:	ldr	r3, [r3]
   10f44:	mov	r2, #18
   10f48:	mov	r1, #1
   10f4c:	ldr	r0, [pc, #472]	; 1112c <sprintf@plt+0x990>
   10f50:	bl	1073c <fwrite@plt>
   10f54:	mov	r0, #1
   10f58:	b	10ccc <sprintf@plt+0x530>
   10f5c:	tst	r4, #2
   10f60:	moveq	r3, #8
   10f64:	streq	r3, [sp, #4]
   10f68:	bne	10c74 <sprintf@plt+0x4d8>
   10f6c:	ldr	r5, [pc, #400]	; 11104 <sprintf@plt+0x968>
   10f70:	mov	r6, #36	; 0x24
   10f74:	strb	r6, [r5]
   10f78:	mov	r3, #49	; 0x31
   10f7c:	strb	r3, [r5, #1]
   10f80:	strb	r6, [r5, #2]
   10f84:	ldr	r7, [sp, #4]
   10f88:	mov	r1, r7
   10f8c:	add	r0, r5, #3
   10f90:	bl	10930 <sprintf@plt+0x194>
   10f94:	add	r9, r5, r7
   10f98:	strb	r6, [r9, #3]
   10f9c:	mov	r3, #0
   10fa0:	strb	r3, [r9, #4]
   10fa4:	b	10ca0 <sprintf@plt+0x504>
   10fa8:	tst	r4, #2
   10fac:	moveq	r3, #22
   10fb0:	streq	r3, [sp, #4]
   10fb4:	bne	10d1c <sprintf@plt+0x580>
   10fb8:	mov	r2, r5
   10fbc:	ldr	r1, [pc, #300]	; 110f0 <sprintf@plt+0x954>
   10fc0:	add	r0, sp, #12
   10fc4:	bl	1079c <sprintf@plt>
   10fc8:	ldr	r6, [pc, #308]	; 11104 <sprintf@plt+0x968>
   10fcc:	add	r5, r6, #24
   10fd0:	add	r2, sp, #12
   10fd4:	ldr	r1, [pc, #340]	; 11130 <sprintf@plt+0x994>
   10fd8:	mov	r0, r5
   10fdc:	bl	1079c <sprintf@plt>
   10fe0:	ldr	r7, [sp, #4]
   10fe4:	mov	r1, r7
   10fe8:	add	r0, r6, #31
   10fec:	bl	10930 <sprintf@plt+0x194>
   10ff0:	add	r6, r6, r7
   10ff4:	mov	r3, #36	; 0x24
   10ff8:	strb	r3, [r6, #31]
   10ffc:	mov	r3, #0
   11000:	strb	r3, [r6, #32]
   11004:	b	10ca0 <sprintf@plt+0x504>
   11008:	tst	r4, #2
   1100c:	moveq	r3, #16
   11010:	streq	r3, [sp, #4]
   11014:	beq	10db4 <sprintf@plt+0x618>
   11018:	cmp	fp, #0
   1101c:	beq	10df4 <sprintf@plt+0x658>
   11020:	mov	r0, fp
   11024:	bl	1070c <strlen@plt>
   11028:	cmp	r0, #16
   1102c:	bhi	10df4 <sprintf@plt+0x658>
   11030:	ldr	r5, [pc, #252]	; 11134 <sprintf@plt+0x998>
   11034:	mov	r2, fp
   11038:	ldr	r1, [pc, #248]	; 11138 <sprintf@plt+0x99c>
   1103c:	mov	r0, r5
   11040:	bl	1079c <sprintf@plt>
   11044:	b	10ca0 <sprintf@plt+0x504>
   11048:	tst	r4, #2
   1104c:	moveq	r3, #16
   11050:	streq	r3, [sp, #4]
   11054:	beq	10e34 <sprintf@plt+0x698>
   11058:	cmp	fp, #0
   1105c:	beq	10e74 <sprintf@plt+0x6d8>
   11060:	mov	r0, fp
   11064:	bl	1070c <strlen@plt>
   11068:	cmp	r0, #16
   1106c:	bhi	10e74 <sprintf@plt+0x6d8>
   11070:	ldr	r5, [pc, #196]	; 1113c <sprintf@plt+0x9a0>
   11074:	mov	r2, fp
   11078:	ldr	r1, [pc, #192]	; 11140 <sprintf@plt+0x9a4>
   1107c:	mov	r0, r5
   11080:	bl	1079c <sprintf@plt>
   11084:	b	10ca0 <sprintf@plt+0x504>
   11088:	andeq	r1, r1, r8, lsl #11
   1108c:	andeq	r2, r2, r8, ror r0
   11090:	andeq	r1, r1, r4, lsl #4
   11094:	andeq	r1, r1, r0, asr r2
   11098:	andeq	r1, r1, r0, ror r2
   1109c:	muleq	r1, r0, r2
   110a0:	andeq	r1, r1, ip, lsr #5
   110a4:	andeq	r1, r1, ip, asr #5
   110a8:	andeq	r1, r1, r4, lsl #6
   110ac:	andeq	r1, r1, ip, lsr r3
   110b0:	andeq	r1, r1, r8, ror #6
   110b4:	andeq	r1, r1, r0, lsr #7
   110b8:			; <UNDEFINED> instruction: 0x000113bc
   110bc:	andeq	r1, r1, r4, ror #7
   110c0:	andeq	r1, r1, r8, lsl #8
   110c4:	andeq	r1, r1, ip, lsr #8
   110c8:	andeq	r1, r1, r0, ror r4
   110cc:			; <UNDEFINED> instruction: 0x000114b0
   110d0:	strdeq	r1, [r1], -r0
   110d4:	andeq	r1, r1, r0, lsr r5
   110d8:	andeq	r1, r1, r8, asr r5
   110dc:	andeq	r1, r1, r0, ror r5
   110e0:	andeq	r2, r2, r0, lsl #2
   110e4:	muleq	r1, r8, r5
   110e8:	andeq	r1, r1, r0, lsr #11
   110ec:	andeq	r1, r1, r4, ror #11
   110f0:	andeq	r1, r1, r0, lsl #12
   110f4:	andeq	r2, r2, r8, lsl r1
   110f8:	andeq	r1, r1, r8, lsl #12
   110fc:	andeq	r1, r1, r4, lsl r6
   11100:	andeq	r1, r1, r8, asr r6
   11104:	andeq	r2, r2, r0, lsl #1
   11108:	strheq	r2, [r2], -r8
   1110c:	andeq	r1, r1, r8, lsl #13
   11110:	andeq	r2, r2, r8, ror #1
   11114:	andeq	r1, r1, ip, lsr #13
   11118:	andeq	r2, r2, r0, ror r0
   1111c:	andeq	r1, r1, r8, asr #13
   11120:	andeq	r1, r1, r8, ror #13
   11124:	andeq	r1, r1, r8, lsl #14
   11128:	andeq	r1, r1, r0, lsl r7
   1112c:	strdeq	r1, [r1], -r4
   11130:	andeq	r1, r1, r8, ror r6
   11134:	andeq	r2, r2, r8, lsr r1
   11138:	andeq	r1, r1, r0, lsl #13
   1113c:	ldrdeq	r2, [r2], -r0
   11140:	andeq	r1, r1, r4, lsr #13
   11144:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11148:	mov	r7, r0
   1114c:	ldr	r6, [pc, #72]	; 1119c <sprintf@plt+0xa00>
   11150:	ldr	r5, [pc, #72]	; 111a0 <sprintf@plt+0xa04>
   11154:	add	r6, pc, r6
   11158:	add	r5, pc, r5
   1115c:	sub	r6, r6, r5
   11160:	mov	r8, r1
   11164:	mov	r9, r2
   11168:	bl	10680 <open@plt-0x20>
   1116c:	asrs	r6, r6, #2
   11170:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11174:	mov	r4, #0
   11178:	add	r4, r4, #1
   1117c:	ldr	r3, [r5], #4
   11180:	mov	r2, r9
   11184:	mov	r1, r8
   11188:	mov	r0, r7
   1118c:	blx	r3
   11190:	cmp	r6, r4
   11194:	bne	11178 <sprintf@plt+0x9dc>
   11198:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1119c:	muleq	r1, ip, sp
   111a0:	muleq	r1, r4, sp
   111a4:	bx	lr

Disassembly of section .fini:

000111a8 <.fini>:
   111a8:	push	{r3, lr}
   111ac:	pop	{r3, pc}
