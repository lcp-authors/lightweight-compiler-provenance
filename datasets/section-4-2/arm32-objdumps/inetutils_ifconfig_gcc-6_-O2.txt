
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

0001132c <.init>:
   1132c:	push	{r3, lr}
   11330:	bl	11878 <ftello64@plt+0x1a8>
   11334:	pop	{r3, pc}

Disassembly of section .plt:

00011338 <calloc@plt-0x14>:
   11338:	push	{lr}		; (str lr, [sp, #-4]!)
   1133c:	ldr	lr, [pc, #4]	; 11348 <calloc@plt-0x4>
   11340:	add	lr, pc, lr
   11344:	ldr	pc, [lr, #8]!
   11348:			; <UNDEFINED> instruction: 0x00020cb8

0001134c <calloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #32, 20	; 0x20000
   11354:	ldr	pc, [ip, #3256]!	; 0xcb8

00011358 <fputs_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #32, 20	; 0x20000
   11360:	ldr	pc, [ip, #3248]!	; 0xcb0

00011364 <strstr@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #32, 20	; 0x20000
   1136c:	ldr	pc, [ip, #3240]!	; 0xca8

00011370 <ether_hostton@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #32, 20	; 0x20000
   11378:	ldr	pc, [ip, #3232]!	; 0xca0

0001137c <raise@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #32, 20	; 0x20000
   11384:	ldr	pc, [ip, #3224]!	; 0xc98

00011388 <__getdelim@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #32, 20	; 0x20000
   11390:	ldr	pc, [ip, #3216]!	; 0xc90

00011394 <inet_aton@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #32, 20	; 0x20000
   1139c:	ldr	pc, [ip, #3208]!	; 0xc88

000113a0 <strcmp@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #32, 20	; 0x20000
   113a8:	ldr	pc, [ip, #3200]!	; 0xc80

000113ac <strtol@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #32, 20	; 0x20000
   113b4:	ldr	pc, [ip, #3192]!	; 0xc78

000113b8 <printf@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #32, 20	; 0x20000
   113c0:	ldr	pc, [ip, #3184]!	; 0xc70

000113c4 <memmove@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #32, 20	; 0x20000
   113cc:	ldr	pc, [ip, #3176]!	; 0xc68

000113d0 <strchrnul@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #32, 20	; 0x20000
   113d8:	ldr	pc, [ip, #3168]!	; 0xc60

000113dc <free@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #32, 20	; 0x20000
   113e4:	ldr	pc, [ip, #3160]!	; 0xc58

000113e8 <gai_strerror@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #32, 20	; 0x20000
   113f0:	ldr	pc, [ip, #3152]!	; 0xc50

000113f4 <ferror@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #32, 20	; 0x20000
   113fc:	ldr	pc, [ip, #3144]!	; 0xc48

00011400 <strndup@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #32, 20	; 0x20000
   11408:	ldr	pc, [ip, #3136]!	; 0xc40

0001140c <memcpy@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #32, 20	; 0x20000
   11414:	ldr	pc, [ip, #3128]!	; 0xc38

00011418 <fwrite_unlocked@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #32, 20	; 0x20000
   11420:	ldr	pc, [ip, #3120]!	; 0xc30

00011424 <inet_ntoa@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #32, 20	; 0x20000
   1142c:	ldr	pc, [ip, #3112]!	; 0xc28

00011430 <sleep@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #32, 20	; 0x20000
   11438:	ldr	pc, [ip, #3104]!	; 0xc20

0001143c <strdup@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #32, 20	; 0x20000
   11444:	ldr	pc, [ip, #3096]!	; 0xc18

00011448 <realloc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #32, 20	; 0x20000
   11450:	ldr	pc, [ip, #3088]!	; 0xc10

00011454 <strcasecmp@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #32, 20	; 0x20000
   1145c:	ldr	pc, [ip, #3080]!	; 0xc08

00011460 <funlockfile@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #32, 20	; 0x20000
   11468:	ldr	pc, [ip, #3072]!	; 0xc00

0001146c <__fxstat64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #32, 20	; 0x20000
   11474:	ldr	pc, [ip, #3064]!	; 0xbf8

00011478 <fwrite@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #32, 20	; 0x20000
   11480:	ldr	pc, [ip, #3056]!	; 0xbf0

00011484 <ioctl@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #32, 20	; 0x20000
   1148c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011490 <strcpy@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #32, 20	; 0x20000
   11498:	ldr	pc, [ip, #3040]!	; 0xbe0

0001149c <fread@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #32, 20	; 0x20000
   114a4:	ldr	pc, [ip, #3032]!	; 0xbd8

000114a8 <error@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #32, 20	; 0x20000
   114b0:	ldr	pc, [ip, #3024]!	; 0xbd0

000114b4 <getenv@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #32, 20	; 0x20000
   114bc:	ldr	pc, [ip, #3016]!	; 0xbc8

000114c0 <puts@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #32, 20	; 0x20000
   114c8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114cc <malloc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #32, 20	; 0x20000
   114d4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114d8 <__libc_start_main@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #32, 20	; 0x20000
   114e0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114e4 <strerror@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #32, 20	; 0x20000
   114ec:	ldr	pc, [ip, #2984]!	; 0xba8

000114f0 <__ctype_tolower_loc@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #32, 20	; 0x20000
   114f8:	ldr	pc, [ip, #2976]!	; 0xba0

000114fc <ether_aton@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #32, 20	; 0x20000
   11504:	ldr	pc, [ip, #2968]!	; 0xb98

00011508 <__gmon_start__@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #32, 20	; 0x20000
   11510:	ldr	pc, [ip, #2960]!	; 0xb90

00011514 <mempcpy@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #32, 20	; 0x20000
   1151c:	ldr	pc, [ip, #2952]!	; 0xb88

00011520 <__ctype_b_loc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #32, 20	; 0x20000
   11528:	ldr	pc, [ip, #2944]!	; 0xb80

0001152c <exit@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #32, 20	; 0x20000
   11534:	ldr	pc, [ip, #2936]!	; 0xb78

00011538 <strtoul@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #32, 20	; 0x20000
   11540:	ldr	pc, [ip, #2928]!	; 0xb70

00011544 <strlen@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #32, 20	; 0x20000
   1154c:	ldr	pc, [ip, #2920]!	; 0xb68

00011550 <strchr@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #32, 20	; 0x20000
   11558:	ldr	pc, [ip, #2912]!	; 0xb60

0001155c <fprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #32, 20	; 0x20000
   11564:	ldr	pc, [ip, #2904]!	; 0xb58

00011568 <__errno_location@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #32, 20	; 0x20000
   11570:	ldr	pc, [ip, #2896]!	; 0xb50

00011574 <strncasecmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #32, 20	; 0x20000
   1157c:	ldr	pc, [ip, #2888]!	; 0xb48

00011580 <strerror_r@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #32, 20	; 0x20000
   11588:	ldr	pc, [ip, #2880]!	; 0xb40

0001158c <setvbuf@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #32, 20	; 0x20000
   11594:	ldr	pc, [ip, #2872]!	; 0xb38

00011598 <memset@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #32, 20	; 0x20000
   115a0:	ldr	pc, [ip, #2864]!	; 0xb30

000115a4 <strncpy@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #32, 20	; 0x20000
   115ac:	ldr	pc, [ip, #2856]!	; 0xb28

000115b0 <fileno@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #32, 20	; 0x20000
   115b8:	ldr	pc, [ip, #2848]!	; 0xb20

000115bc <memchr@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #32, 20	; 0x20000
   115c4:	ldr	pc, [ip, #2840]!	; 0xb18

000115c8 <fclose@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #32, 20	; 0x20000
   115d0:	ldr	pc, [ip, #2832]!	; 0xb10

000115d4 <ether_ntoa@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #32, 20	; 0x20000
   115dc:	ldr	pc, [ip, #2824]!	; 0xb08

000115e0 <__overflow@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #32, 20	; 0x20000
   115e8:	ldr	pc, [ip, #2816]!	; 0xb00

000115ec <getnameinfo@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #32, 20	; 0x20000
   115f4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115f8 <strrchr@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #32, 20	; 0x20000
   11600:	ldr	pc, [ip, #2800]!	; 0xaf0

00011604 <vfprintf@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #32, 20	; 0x20000
   1160c:	ldr	pc, [ip, #2792]!	; 0xae8

00011610 <fputc@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #32, 20	; 0x20000
   11618:	ldr	pc, [ip, #2784]!	; 0xae0

0001161c <sscanf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #32, 20	; 0x20000
   11624:	ldr	pc, [ip, #2776]!	; 0xad8

00011628 <putc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #32, 20	; 0x20000
   11630:	ldr	pc, [ip, #2768]!	; 0xad0

00011634 <flockfile@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #32, 20	; 0x20000
   1163c:	ldr	pc, [ip, #2760]!	; 0xac8

00011640 <vsnprintf@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #32, 20	; 0x20000
   11648:	ldr	pc, [ip, #2752]!	; 0xac0

0001164c <fopen64@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #32, 20	; 0x20000
   11654:	ldr	pc, [ip, #2744]!	; 0xab8

00011658 <qsort@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #32, 20	; 0x20000
   11660:	ldr	pc, [ip, #2736]!	; 0xab0

00011664 <explicit_bzero@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #32, 20	; 0x20000
   1166c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011670 <freeaddrinfo@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #32, 20	; 0x20000
   11678:	ldr	pc, [ip, #2720]!	; 0xaa0

0001167c <getaddrinfo@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #32, 20	; 0x20000
   11684:	ldr	pc, [ip, #2712]!	; 0xa98

00011688 <socket@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #32, 20	; 0x20000
   11690:	ldr	pc, [ip, #2704]!	; 0xa90

00011694 <if_nametoindex@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #32, 20	; 0x20000
   1169c:	ldr	pc, [ip, #2696]!	; 0xa88

000116a0 <strncmp@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #32, 20	; 0x20000
   116a8:	ldr	pc, [ip, #2688]!	; 0xa80

000116ac <abort@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #32, 20	; 0x20000
   116b4:	ldr	pc, [ip, #2680]!	; 0xa78

000116b8 <close@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #32, 20	; 0x20000
   116c0:	ldr	pc, [ip, #2672]!	; 0xa70

000116c4 <__assert_fail@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #32, 20	; 0x20000
   116cc:	ldr	pc, [ip, #2664]!	; 0xa68

000116d0 <ftello64@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #32, 20	; 0x20000
   116d8:	ldr	pc, [ip, #2656]!	; 0xa60

Disassembly of section .text:

000116dc <argp_parse@@Base-0x5d7c>:
   116dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116e0:	mov	r4, r1
   116e4:	mov	r5, r0
   116e8:	ldr	r0, [r1]
   116ec:	bl	18774 <_obstack_memory_used@@Base+0x34>
   116f0:	mov	r1, r4
   116f4:	mov	r0, r5
   116f8:	bl	13698 <ftello64@plt+0x1fc8>
   116fc:	mov	r2, #0
   11700:	mov	r1, #1
   11704:	mov	r0, #2
   11708:	bl	11688 <socket@plt>
   1170c:	subs	r8, r0, #0
   11710:	blt	11808 <ftello64@plt+0x138>
   11714:	ldr	r6, [pc, #264]	; 11824 <ftello64@plt+0x154>
   11718:	ldr	r7, [pc, #264]	; 11828 <ftello64@plt+0x158>
   1171c:	ldr	r2, [r6]
   11720:	ldr	r3, [r7]
   11724:	rsb	r2, r2, r2, lsl #3
   11728:	add	r2, r3, r2, lsl #3
   1172c:	cmp	r3, r2
   11730:	bcs	11800 <ftello64@plt+0x130>
   11734:	ldr	r5, [pc, #240]	; 1182c <ftello64@plt+0x15c>
   11738:	ldr	r9, [pc, #240]	; 11830 <ftello64@plt+0x160>
   1173c:	ldr	fp, [pc, #240]	; 11834 <ftello64@plt+0x164>
   11740:	add	sl, r3, #56	; 0x38
   11744:	mov	r4, #0
   11748:	b	11790 <ftello64@plt+0xc0>
   1174c:	ldr	r0, [sl, #-56]	; 0xffffffc8
   11750:	bl	11694 <if_nametoindex@plt>
   11754:	cmp	r0, #0
   11758:	beq	11774 <ftello64@plt+0xa4>
   1175c:	cmp	r4, #0
   11760:	add	r4, r4, #1
   11764:	bne	117d0 <ftello64@plt+0x100>
   11768:	ldr	r1, [sl, #-56]	; 0xffffffc8
   1176c:	mov	r0, r9
   11770:	bl	113b8 <printf@plt>
   11774:	ldr	r2, [r6]
   11778:	ldr	r1, [r7]
   1177c:	rsb	r2, r2, r2, lsl #3
   11780:	add	r2, r1, r2, lsl #3
   11784:	cmp	sl, r2
   11788:	add	sl, sl, #56	; 0x38
   1178c:	bcs	117e0 <ftello64@plt+0x110>
   11790:	ldr	r2, [r5]
   11794:	sub	r1, sl, #56	; 0x38
   11798:	cmp	r2, #0
   1179c:	bne	1174c <ftello64@plt+0x7c>
   117a0:	mov	r0, r8
   117a4:	bl	1277c <ftello64@plt+0x10ac>
   117a8:	subs	r4, r0, #0
   117ac:	beq	11774 <ftello64@plt+0xa4>
   117b0:	ldr	r3, [r5]
   117b4:	cmp	r3, #0
   117b8:	beq	117f0 <ftello64@plt+0x120>
   117bc:	ldr	r3, [pc, #112]	; 11834 <ftello64@plt+0x164>
   117c0:	mov	r0, #10
   117c4:	ldr	r1, [r3]
   117c8:	bl	11628 <putc@plt>
   117cc:	b	117f0 <ftello64@plt+0x120>
   117d0:	ldr	r1, [fp]
   117d4:	mov	r0, #32
   117d8:	bl	11628 <putc@plt>
   117dc:	b	11768 <ftello64@plt+0x98>
   117e0:	ldr	r3, [r5]
   117e4:	cmp	r3, #0
   117e8:	cmpne	r4, #0
   117ec:	bne	117bc <ftello64@plt+0xec>
   117f0:	mov	r0, r8
   117f4:	bl	116b8 <close@plt>
   117f8:	mov	r0, r4
   117fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11800:	mov	r4, #0
   11804:	b	117f0 <ftello64@plt+0x120>
   11808:	bl	11568 <__errno_location@plt>
   1180c:	ldr	r2, [pc, #36]	; 11838 <ftello64@plt+0x168>
   11810:	ldr	r1, [r0]
   11814:	mov	r0, #0
   11818:	bl	114a8 <error@plt>
   1181c:	mov	r0, #1
   11820:	bl	1152c <exit@plt>
   11824:	strdeq	r2, [r3], -r0
   11828:	andeq	r2, r3, ip, ror #23
   1182c:	andeq	r2, r3, r4, lsl #24
   11830:	andeq	lr, r1, r0, lsl #15
   11834:	andeq	r2, r3, ip, asr #22
   11838:			; <UNDEFINED> instruction: 0x0001e1bc
   1183c:	mov	fp, #0
   11840:	mov	lr, #0
   11844:	pop	{r1}		; (ldr r1, [sp], #4)
   11848:	mov	r2, sp
   1184c:	push	{r2}		; (str r2, [sp, #-4]!)
   11850:	push	{r0}		; (str r0, [sp, #-4]!)
   11854:	ldr	ip, [pc, #16]	; 1186c <ftello64@plt+0x19c>
   11858:	push	{ip}		; (str ip, [sp, #-4]!)
   1185c:	ldr	r0, [pc, #12]	; 11870 <ftello64@plt+0x1a0>
   11860:	ldr	r3, [pc, #12]	; 11874 <ftello64@plt+0x1a4>
   11864:	bl	114d8 <__libc_start_main@plt>
   11868:	bl	116ac <abort@plt>
   1186c:	andeq	lr, r1, ip, lsr #3
   11870:	ldrdeq	r1, [r1], -ip
   11874:	andeq	lr, r1, ip, asr #2
   11878:	ldr	r3, [pc, #20]	; 11894 <ftello64@plt+0x1c4>
   1187c:	ldr	r2, [pc, #20]	; 11898 <ftello64@plt+0x1c8>
   11880:	add	r3, pc, r3
   11884:	ldr	r2, [r3, r2]
   11888:	cmp	r2, #0
   1188c:	bxeq	lr
   11890:	b	11508 <__gmon_start__@plt>
   11894:	andeq	r0, r2, r8, ror r7
   11898:	andeq	r0, r0, ip, lsr r1
   1189c:	ldr	r3, [pc, #28]	; 118c0 <ftello64@plt+0x1f0>
   118a0:	ldr	r0, [pc, #28]	; 118c4 <ftello64@plt+0x1f4>
   118a4:	sub	r3, r3, r0
   118a8:	cmp	r3, #6
   118ac:	bxls	lr
   118b0:	ldr	r3, [pc, #16]	; 118c8 <ftello64@plt+0x1f8>
   118b4:	cmp	r3, #0
   118b8:	bxeq	lr
   118bc:	bx	r3
   118c0:	andeq	r2, r3, pc, lsr fp
   118c4:	andeq	r2, r3, ip, lsr fp
   118c8:	andeq	r0, r0, r0
   118cc:	ldr	r1, [pc, #36]	; 118f8 <ftello64@plt+0x228>
   118d0:	ldr	r0, [pc, #36]	; 118fc <ftello64@plt+0x22c>
   118d4:	sub	r1, r1, r0
   118d8:	asr	r1, r1, #2
   118dc:	add	r1, r1, r1, lsr #31
   118e0:	asrs	r1, r1, #1
   118e4:	bxeq	lr
   118e8:	ldr	r3, [pc, #16]	; 11900 <ftello64@plt+0x230>
   118ec:	cmp	r3, #0
   118f0:	bxeq	lr
   118f4:	bx	r3
   118f8:	andeq	r2, r3, ip, lsr fp
   118fc:	andeq	r2, r3, ip, lsr fp
   11900:	andeq	r0, r0, r0
   11904:	push	{r4, lr}
   11908:	ldr	r4, [pc, #24]	; 11928 <ftello64@plt+0x258>
   1190c:	ldrb	r3, [r4]
   11910:	cmp	r3, #0
   11914:	popne	{r4, pc}
   11918:	bl	1189c <ftello64@plt+0x1cc>
   1191c:	mov	r3, #1
   11920:	strb	r3, [r4]
   11924:	pop	{r4, pc}
   11928:	andeq	r2, r3, r0, asr fp
   1192c:	ldr	r0, [pc, #40]	; 1195c <ftello64@plt+0x28c>
   11930:	ldr	r3, [r0]
   11934:	cmp	r3, #0
   11938:	bne	11940 <ftello64@plt+0x270>
   1193c:	b	118cc <ftello64@plt+0x1fc>
   11940:	ldr	r3, [pc, #24]	; 11960 <ftello64@plt+0x290>
   11944:	cmp	r3, #0
   11948:	beq	1193c <ftello64@plt+0x26c>
   1194c:	push	{r4, lr}
   11950:	blx	r3
   11954:	pop	{r4, lr}
   11958:	b	118cc <ftello64@plt+0x1fc>
   1195c:	andeq	r1, r3, r4, lsl pc
   11960:	andeq	r0, r0, r0
   11964:	ldr	r1, [r1]
   11968:	ldr	r0, [r0]
   1196c:	b	113a0 <strcmp@plt>
   11970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11974:	mov	r8, r0
   11978:	ldr	r6, [pc, #584]	; 11bc8 <ftello64@plt+0x4f8>
   1197c:	sub	sp, sp, #12
   11980:	ldr	r0, [r6]
   11984:	cmp	r0, #0
   11988:	beq	11bac <ftello64@plt+0x4dc>
   1198c:	mov	r4, r6
   11990:	mov	r5, #0
   11994:	ldr	r3, [r4, #8]
   11998:	cmp	r3, #0
   1199c:	bne	119ac <ftello64@plt+0x2dc>
   119a0:	bl	11544 <strlen@plt>
   119a4:	add	r5, r5, #1
   119a8:	add	r5, r5, r0
   119ac:	ldr	r0, [r4, #12]!
   119b0:	cmp	r0, #0
   119b4:	bne	11994 <ftello64@plt+0x2c4>
   119b8:	add	r0, r5, #80	; 0x50
   119bc:	bl	18f64 <_obstack_memory_used@@Base+0x824>
   119c0:	ldr	r4, [r6]
   119c4:	cmp	r4, #0
   119c8:	mov	r9, r0
   119cc:	add	r6, r0, #80	; 0x50
   119d0:	beq	11bb8 <ftello64@plt+0x4e8>
   119d4:	ldr	sl, [pc, #492]	; 11bc8 <ftello64@plt+0x4f8>
   119d8:	mov	r7, #0
   119dc:	ldr	r3, [sl, #8]
   119e0:	cmp	r3, #0
   119e4:	bne	11a4c <ftello64@plt+0x37c>
   119e8:	ldr	r3, [sl, #4]
   119ec:	tst	r3, #72	; 0x48
   119f0:	bne	11a4c <ftello64@plt+0x37c>
   119f4:	mov	r0, r4
   119f8:	mov	r2, #2
   119fc:	ldr	r1, [pc, #456]	; 11bcc <ftello64@plt+0x4fc>
   11a00:	str	r6, [r9, r7, lsl #2]
   11a04:	bl	116a0 <strncmp@plt>
   11a08:	add	r7, r7, #1
   11a0c:	cmp	r0, #0
   11a10:	addeq	r4, r4, #2
   11a14:	ldrb	fp, [r4]
   11a18:	cmp	fp, #0
   11a1c:	beq	11b90 <ftello64@plt+0x4c0>
   11a20:	bl	114f0 <__ctype_tolower_loc@plt>
   11a24:	mov	r3, r6
   11a28:	ldr	r1, [r0]
   11a2c:	ldr	r2, [r1, fp, lsl #2]
   11a30:	strb	r2, [r3], #1
   11a34:	ldrb	fp, [r4, #1]!
   11a38:	cmp	fp, #0
   11a3c:	bne	11a2c <ftello64@plt+0x35c>
   11a40:	add	r6, r3, #1
   11a44:	mov	r2, #0
   11a48:	strb	r2, [r3]
   11a4c:	ldr	r4, [sl, #12]!
   11a50:	cmp	r4, #0
   11a54:	bne	119dc <ftello64@plt+0x30c>
   11a58:	lsl	r4, r7, #1
   11a5c:	ldr	r3, [pc, #364]	; 11bd0 <ftello64@plt+0x500>
   11a60:	mov	r2, #4
   11a64:	mov	r1, r7
   11a68:	mov	r0, r9
   11a6c:	bl	11658 <qsort@plt>
   11a70:	cmp	r8, #0
   11a74:	add	r4, r5, r4
   11a78:	beq	11b98 <ftello64@plt+0x4c8>
   11a7c:	mov	r0, r8
   11a80:	bl	11544 <strlen@plt>
   11a84:	add	r4, r4, #36	; 0x24
   11a88:	add	r0, r4, r0
   11a8c:	bl	18f64 <_obstack_memory_used@@Base+0x824>
   11a90:	mov	r1, r8
   11a94:	mov	r4, r0
   11a98:	str	r0, [sp, #4]
   11a9c:	bl	11490 <strcpy@plt>
   11aa0:	mov	r0, r8
   11aa4:	bl	11544 <strlen@plt>
   11aa8:	add	r8, r4, r0
   11aac:	cmp	r7, #0
   11ab0:	beq	11b38 <ftello64@plt+0x468>
   11ab4:	sub	r5, r9, #4
   11ab8:	mov	r4, #1
   11abc:	mov	fp, #44	; 0x2c
   11ac0:	b	11afc <ftello64@plt+0x42c>
   11ac4:	mov	r1, r6
   11ac8:	mov	r0, r8
   11acc:	bl	11490 <strcpy@plt>
   11ad0:	mov	r0, r6
   11ad4:	bl	11544 <strlen@plt>
   11ad8:	cmp	r7, r4
   11adc:	add	r3, r8, r0
   11ae0:	bls	11bc0 <ftello64@plt+0x4f0>
   11ae4:	strb	fp, [r8, r0]
   11ae8:	add	r8, r3, #2
   11aec:	mov	r2, #32
   11af0:	strb	r2, [r3, #1]
   11af4:	add	r4, r4, #1
   11af8:	add	r5, r5, #4
   11afc:	cmp	r4, #1
   11b00:	ldreq	r6, [r5, #4]
   11b04:	beq	11ac4 <ftello64@plt+0x3f4>
   11b08:	ldr	sl, [r5]
   11b0c:	ldr	r6, [r5, #4]
   11b10:	mov	r0, sl
   11b14:	bl	11544 <strlen@plt>
   11b18:	mov	r1, r6
   11b1c:	mov	r2, r0
   11b20:	mov	r0, sl
   11b24:	bl	116a0 <strncmp@plt>
   11b28:	cmp	r0, #0
   11b2c:	bne	11ac4 <ftello64@plt+0x3f4>
   11b30:	cmp	r7, r4
   11b34:	bhi	11af4 <ftello64@plt+0x424>
   11b38:	ldr	r4, [pc, #148]	; 11bd4 <ftello64@plt+0x504>
   11b3c:	mov	lr, r8
   11b40:	add	r5, r4, #32
   11b44:	mov	ip, r4
   11b48:	add	lr, lr, #16
   11b4c:	ldm	ip!, {r0, r1, r2, r3}
   11b50:	add	r4, r4, #16
   11b54:	cmp	ip, r5
   11b58:	str	r0, [lr, #-16]
   11b5c:	str	r1, [lr, #-12]
   11b60:	str	r2, [lr, #-8]
   11b64:	str	r3, [lr, #-4]
   11b68:	bne	11b44 <ftello64@plt+0x474>
   11b6c:	ldr	r0, [r4]
   11b70:	mov	r3, #0
   11b74:	str	r0, [lr]
   11b78:	mov	r0, r9
   11b7c:	strb	r3, [r8, #35]	; 0x23
   11b80:	bl	182f0 <argp_parse@@Base+0xe98>
   11b84:	ldr	r0, [sp, #4]
   11b88:	add	sp, sp, #12
   11b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b90:	mov	r3, r6
   11b94:	b	11a40 <ftello64@plt+0x370>
   11b98:	add	r0, r4, #36	; 0x24
   11b9c:	bl	18f64 <_obstack_memory_used@@Base+0x824>
   11ba0:	mov	r8, r0
   11ba4:	str	r0, [sp, #4]
   11ba8:	b	11aac <ftello64@plt+0x3dc>
   11bac:	mov	r5, r0
   11bb0:	mov	r0, #80	; 0x50
   11bb4:	b	119bc <ftello64@plt+0x2ec>
   11bb8:	mov	r7, r4
   11bbc:	b	11a5c <ftello64@plt+0x38c>
   11bc0:	mov	r8, r3
   11bc4:	b	11b38 <ftello64@plt+0x468>
   11bc8:	andeq	r2, r3, r8, asr #2
   11bcc:	andeq	lr, r1, ip, asr #3
   11bd0:	andeq	r1, r1, r4, ror #18
   11bd4:	ldrdeq	lr, [r1], -r0
   11bd8:	ldr	r3, [pc, #168]	; 11c88 <ftello64@plt+0x5b8>
   11bdc:	push	{r4, r5, r6, r7, r8, lr}
   11be0:	ldr	r5, [r3]
   11be4:	cmp	r5, #0
   11be8:	bne	11bfc <ftello64@plt+0x52c>
   11bec:	b	11c70 <ftello64@plt+0x5a0>
   11bf0:	ldr	r5, [r3, #12]!
   11bf4:	cmp	r5, #0
   11bf8:	beq	11c70 <ftello64@plt+0x5a0>
   11bfc:	ldr	r2, [r3, #4]
   11c00:	cmp	r2, r0
   11c04:	bne	11bf0 <ftello64@plt+0x520>
   11c08:	ldr	r2, [r3, #8]
   11c0c:	cmp	r2, #0
   11c10:	bne	11bf0 <ftello64@plt+0x520>
   11c14:	cmp	r1, #0
   11c18:	beq	11c78 <ftello64@plt+0x5a8>
   11c1c:	mov	r8, r1
   11c20:	ldr	r6, [r3]
   11c24:	mov	r4, r3
   11c28:	b	11c54 <ftello64@plt+0x584>
   11c2c:	ldrb	r3, [r7, #-1]
   11c30:	cmp	r3, #58	; 0x3a
   11c34:	bne	11c6c <ftello64@plt+0x59c>
   11c38:	bl	11544 <strlen@plt>
   11c3c:	ldrb	r3, [r7, r0]
   11c40:	cmp	r3, #58	; 0x3a
   11c44:	bne	11c6c <ftello64@plt+0x59c>
   11c48:	ldr	r6, [r4, #12]!
   11c4c:	cmp	r6, #0
   11c50:	beq	11c70 <ftello64@plt+0x5a0>
   11c54:	mov	r1, r6
   11c58:	mov	r0, r8
   11c5c:	bl	11364 <strstr@plt>
   11c60:	subs	r7, r0, #0
   11c64:	mov	r0, r6
   11c68:	bne	11c2c <ftello64@plt+0x55c>
   11c6c:	mov	r5, r6
   11c70:	mov	r0, r5
   11c74:	pop	{r4, r5, r6, r7, r8, pc}
   11c78:	ldr	r6, [r3]
   11c7c:	cmp	r6, #0
   11c80:	bne	11c6c <ftello64@plt+0x59c>
   11c84:	b	11c70 <ftello64@plt+0x5a0>
   11c88:	andeq	r2, r3, r8, asr #2
   11c8c:	cmp	r1, #1
   11c90:	push	{r4, r5, r6, r7, r8, lr}
   11c94:	mov	r5, r1
   11c98:	mov	r7, r2
   11c9c:	mov	r6, r0
   11ca0:	bls	11cd8 <ftello64@plt+0x608>
   11ca4:	ldrb	r3, [r0]
   11ca8:	cmp	r3, #45	; 0x2d
   11cac:	addeq	r6, r0, #1
   11cb0:	subeq	r5, r1, #1
   11cb4:	moveq	r8, #1
   11cb8:	beq	11cdc <ftello64@plt+0x60c>
   11cbc:	cmp	r5, #2
   11cc0:	beq	11cd8 <ftello64@plt+0x608>
   11cc4:	mov	r2, #2
   11cc8:	ldr	r1, [pc, #104]	; 11d38 <ftello64@plt+0x668>
   11ccc:	bl	11574 <strncasecmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11d28 <ftello64@plt+0x658>
   11cd8:	mov	r8, #0
   11cdc:	ldr	r4, [pc, #88]	; 11d3c <ftello64@plt+0x66c>
   11ce0:	ldr	r0, [r4]
   11ce4:	cmp	r0, #0
   11ce8:	bne	11cfc <ftello64@plt+0x62c>
   11cec:	pop	{r4, r5, r6, r7, r8, pc}
   11cf0:	ldr	r0, [r4, #12]!
   11cf4:	cmp	r0, #0
   11cf8:	beq	11d24 <ftello64@plt+0x654>
   11cfc:	mov	r2, r5
   11d00:	mov	r1, r6
   11d04:	bl	11574 <strncasecmp@plt>
   11d08:	cmp	r0, #0
   11d0c:	bne	11cf0 <ftello64@plt+0x620>
   11d10:	ldr	r3, [r4, #8]
   11d14:	eor	r3, r3, r8
   11d18:	str	r3, [r7]
   11d1c:	ldr	r0, [r4, #4]
   11d20:	pop	{r4, r5, r6, r7, r8, pc}
   11d24:	pop	{r4, r5, r6, r7, r8, pc}
   11d28:	add	r6, r6, #2
   11d2c:	sub	r5, r5, #2
   11d30:	mov	r8, #1
   11d34:	b	11cdc <ftello64@plt+0x60c>
   11d38:	andeq	lr, r1, ip, asr #3
   11d3c:	andeq	r2, r3, r8, asr #2
   11d40:	push	{r4, r5, r6, lr}
   11d44:	mov	r5, r1
   11d48:	mov	r4, r0
   11d4c:	bl	11544 <strlen@plt>
   11d50:	mov	r2, r5
   11d54:	mov	r1, r0
   11d58:	mov	r0, r4
   11d5c:	pop	{r4, r5, r6, lr}
   11d60:	b	11c8c <ftello64@plt+0x5bc>
   11d64:	subs	r2, r2, #1
   11d68:	beq	11dbc <ftello64@plt+0x6ec>
   11d6c:	ldr	ip, [pc, #80]	; 11dc4 <ftello64@plt+0x6f4>
   11d70:	ldr	r3, [ip, #252]	; 0xfc
   11d74:	cmp	r3, #0
   11d78:	beq	11dbc <ftello64@plt+0x6ec>
   11d7c:	add	ip, ip, #252	; 0xfc
   11d80:	b	11d90 <ftello64@plt+0x6c0>
   11d84:	ldr	r3, [ip, #8]!
   11d88:	cmp	r3, #0
   11d8c:	beq	11dbc <ftello64@plt+0x6ec>
   11d90:	tst	r0, r3
   11d94:	beq	11d84 <ftello64@plt+0x6b4>
   11d98:	ldr	r3, [ip, #4]
   11d9c:	subs	r2, r2, #1
   11da0:	strb	r3, [r1]
   11da4:	add	r3, r1, #1
   11da8:	mov	r1, r3
   11dac:	bne	11d84 <ftello64@plt+0x6b4>
   11db0:	mov	r2, #0
   11db4:	strb	r2, [r3]
   11db8:	bx	lr
   11dbc:	mov	r3, r1
   11dc0:	b	11db0 <ftello64@plt+0x6e0>
   11dc4:	andeq	r2, r3, r8, asr #2
   11dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dcc:	subs	fp, r0, #0
   11dd0:	sub	sp, sp, #12
   11dd4:	beq	11ebc <ftello64@plt+0x7ec>
   11dd8:	mov	r5, #0
   11ddc:	mov	r6, #1
   11de0:	mov	r7, r1
   11de4:	mov	sl, r2
   11de8:	ldr	r9, [pc, #212]	; 11ec4 <ftello64@plt+0x7f4>
   11dec:	mov	r8, r5
   11df0:	mov	r4, r6
   11df4:	b	11e18 <ftello64@plt+0x748>
   11df8:	lsls	r4, r4, #1
   11dfc:	movne	r2, #1
   11e00:	moveq	r2, #0
   11e04:	cmp	fp, #0
   11e08:	moveq	r2, #0
   11e0c:	andne	r2, r2, #1
   11e10:	cmp	r2, #0
   11e14:	beq	11e58 <ftello64@plt+0x788>
   11e18:	tst	fp, r4
   11e1c:	beq	11df8 <ftello64@plt+0x728>
   11e20:	mov	r1, r7
   11e24:	mov	r0, r4
   11e28:	bl	11bd8 <ftello64@plt+0x508>
   11e2c:	subs	r2, r0, #0
   11e30:	beq	11df8 <ftello64@plt+0x728>
   11e34:	cmp	r6, #0
   11e38:	bic	fp, fp, r4
   11e3c:	mov	r6, r8
   11e40:	beq	11e84 <ftello64@plt+0x7b4>
   11e44:	mov	r1, r2
   11e48:	mov	r0, r9
   11e4c:	bl	113b8 <printf@plt>
   11e50:	add	r5, r5, r0
   11e54:	b	11df8 <ftello64@plt+0x728>
   11e58:	cmp	fp, #0
   11e5c:	beq	11e78 <ftello64@plt+0x7a8>
   11e60:	cmp	r6, #0
   11e64:	beq	11ea4 <ftello64@plt+0x7d4>
   11e68:	mov	r1, fp
   11e6c:	ldr	r0, [pc, #84]	; 11ec8 <ftello64@plt+0x7f8>
   11e70:	bl	113b8 <printf@plt>
   11e74:	add	r5, r5, r0
   11e78:	mov	r0, r5
   11e7c:	add	sp, sp, #12
   11e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e84:	ldr	r3, [pc, #64]	; 11ecc <ftello64@plt+0x7fc>
   11e88:	mov	r0, sl
   11e8c:	str	r2, [sp, #4]
   11e90:	ldr	r1, [r3]
   11e94:	bl	11628 <putc@plt>
   11e98:	add	r5, r5, #1
   11e9c:	ldr	r2, [sp, #4]
   11ea0:	b	11e44 <ftello64@plt+0x774>
   11ea4:	ldr	r2, [pc, #32]	; 11ecc <ftello64@plt+0x7fc>
   11ea8:	mov	r0, sl
   11eac:	add	r5, r5, #1
   11eb0:	ldr	r1, [r2]
   11eb4:	bl	11628 <putc@plt>
   11eb8:	b	11e68 <ftello64@plt+0x798>
   11ebc:	mov	r5, fp
   11ec0:	b	11e78 <ftello64@plt+0x7a8>
   11ec4:	andeq	lr, r1, r0, lsl #15
   11ec8:	strdeq	lr, [r1], -r4
   11ecc:	andeq	r2, r3, ip, asr #22
   11ed0:	push	{r4, r5, r6, r7, r8, lr}
   11ed4:	sub	sp, sp, #72	; 0x48
   11ed8:	mov	r6, r2
   11edc:	mov	r8, r0
   11ee0:	mov	r2, #32
   11ee4:	mov	r4, r1
   11ee8:	add	r0, sp, #40	; 0x28
   11eec:	mov	r1, #0
   11ef0:	bl	11598 <memset@plt>
   11ef4:	mov	ip, #2
   11ef8:	add	r2, sp, #40	; 0x28
   11efc:	mov	r0, r6
   11f00:	add	r3, sp, #20
   11f04:	mov	r1, #0
   11f08:	str	ip, [sp, #44]	; 0x2c
   11f0c:	bl	1167c <getaddrinfo@plt>
   11f10:	cmp	r0, #0
   11f14:	bne	12048 <ftello64@plt+0x978>
   11f18:	ldr	r3, [sp, #20]
   11f1c:	cmp	r3, #0
   11f20:	bne	11f34 <ftello64@plt+0x864>
   11f24:	b	11fe4 <ftello64@plt+0x914>
   11f28:	ldr	r3, [r3, #28]
   11f2c:	cmp	r3, #0
   11f30:	beq	11fe4 <ftello64@plt+0x914>
   11f34:	ldr	r2, [r3, #4]
   11f38:	cmp	r2, #2
   11f3c:	bne	11f28 <ftello64@plt+0x858>
   11f40:	ldr	r1, [r3, #16]
   11f44:	ldr	r0, [r3, #20]
   11f48:	mov	r5, #0
   11f4c:	mov	r3, #1
   11f50:	add	r2, sp, #24
   11f54:	str	r3, [sp, #8]
   11f58:	str	r5, [sp, #4]
   11f5c:	mov	r3, #16
   11f60:	str	r5, [sp]
   11f64:	bl	115ec <getnameinfo@plt>
   11f68:	mov	r7, r0
   11f6c:	ldr	r0, [sp, #20]
   11f70:	bl	11670 <freeaddrinfo@plt>
   11f74:	cmp	r7, r5
   11f78:	bne	1200c <ftello64@plt+0x93c>
   11f7c:	mov	r3, #2
   11f80:	add	r1, r4, #20
   11f84:	strh	r3, [r4, #16]
   11f88:	add	r0, sp, #24
   11f8c:	bl	11394 <inet_aton@plt>
   11f90:	subs	r1, r0, #0
   11f94:	beq	12034 <ftello64@plt+0x964>
   11f98:	mov	r0, r8
   11f9c:	mov	r2, r4
   11fa0:	ldr	r1, [pc, #228]	; 1208c <ftello64@plt+0x9bc>
   11fa4:	bl	183f8 <argp_parse@@Base+0xfa0>
   11fa8:	cmp	r0, #0
   11fac:	blt	1206c <ftello64@plt+0x99c>
   11fb0:	ldr	r3, [pc, #216]	; 12090 <ftello64@plt+0x9c0>
   11fb4:	ldr	r0, [r3]
   11fb8:	cmp	r0, #0
   11fbc:	beq	11fdc <ftello64@plt+0x90c>
   11fc0:	ldr	r0, [r4, #20]
   11fc4:	bl	11424 <inet_ntoa@plt>
   11fc8:	mov	r1, r4
   11fcc:	mov	r2, r0
   11fd0:	ldr	r0, [pc, #188]	; 12094 <ftello64@plt+0x9c4>
   11fd4:	bl	113b8 <printf@plt>
   11fd8:	mov	r0, r7
   11fdc:	add	sp, sp, #72	; 0x48
   11fe0:	pop	{r4, r5, r6, r7, r8, pc}
   11fe4:	mov	r1, #0
   11fe8:	mov	r0, r1
   11fec:	mov	r3, r6
   11ff0:	ldr	r2, [pc, #160]	; 12098 <ftello64@plt+0x9c8>
   11ff4:	bl	114a8 <error@plt>
   11ff8:	ldr	r0, [sp, #20]
   11ffc:	bl	11670 <freeaddrinfo@plt>
   12000:	mvn	r0, #0
   12004:	add	sp, sp, #72	; 0x48
   12008:	pop	{r4, r5, r6, r7, r8, pc}
   1200c:	mov	r0, r7
   12010:	bl	113e8 <gai_strerror@plt>
   12014:	mov	r3, r6
   12018:	ldr	r2, [pc, #124]	; 1209c <ftello64@plt+0x9cc>
   1201c:	mov	r1, r5
   12020:	str	r0, [sp]
   12024:	mov	r0, r5
   12028:	bl	114a8 <error@plt>
   1202c:	mvn	r0, #0
   12030:	b	11fdc <ftello64@plt+0x90c>
   12034:	add	r3, sp, #24
   12038:	ldr	r2, [pc, #96]	; 120a0 <ftello64@plt+0x9d0>
   1203c:	bl	114a8 <error@plt>
   12040:	mvn	r0, #0
   12044:	b	11fdc <ftello64@plt+0x90c>
   12048:	bl	113e8 <gai_strerror@plt>
   1204c:	mov	r1, #0
   12050:	mov	r3, r6
   12054:	ldr	r2, [pc, #64]	; 1209c <ftello64@plt+0x9cc>
   12058:	str	r0, [sp]
   1205c:	mov	r0, r1
   12060:	bl	114a8 <error@plt>
   12064:	mvn	r0, #0
   12068:	b	11fdc <ftello64@plt+0x90c>
   1206c:	bl	11568 <__errno_location@plt>
   12070:	ldr	r3, [pc, #44]	; 120a4 <ftello64@plt+0x9d4>
   12074:	ldr	r2, [pc, #44]	; 120a8 <ftello64@plt+0x9d8>
   12078:	ldr	r1, [r0]
   1207c:	mov	r0, r7
   12080:	bl	114a8 <error@plt>
   12084:	mvn	r0, #0
   12088:	b	11fdc <ftello64@plt+0x90c>
   1208c:	andeq	r8, r0, r6, lsl r9
   12090:	andeq	r2, r3, r0, lsl #24
   12094:	andeq	lr, r1, ip, ror #5
   12098:	andeq	lr, r1, r4, lsl r3
   1209c:	andeq	lr, r1, r0, lsr #5
   120a0:			; <UNDEFINED> instruction: 0x0001e2b8
   120a4:	ldrdeq	lr, [r1], -r4
   120a8:	andeq	lr, r1, r0, ror #5
   120ac:	mov	r3, #2
   120b0:	push	{r4, r5, r6, lr}
   120b4:	mov	r4, r1
   120b8:	strh	r3, [r1, #16]
   120bc:	mov	r6, r0
   120c0:	add	r1, r1, #20
   120c4:	mov	r0, r2
   120c8:	mov	r5, r2
   120cc:	bl	11394 <inet_aton@plt>
   120d0:	subs	r1, r0, #0
   120d4:	beq	12120 <ftello64@plt+0xa50>
   120d8:	mov	r0, r6
   120dc:	mov	r2, r4
   120e0:	ldr	r1, [pc, #108]	; 12154 <ftello64@plt+0xa84>
   120e4:	bl	183f8 <argp_parse@@Base+0xfa0>
   120e8:	cmp	r0, #0
   120ec:	blt	12134 <ftello64@plt+0xa64>
   120f0:	ldr	r3, [pc, #96]	; 12158 <ftello64@plt+0xa88>
   120f4:	ldr	r0, [r3]
   120f8:	cmp	r0, #0
   120fc:	popeq	{r4, r5, r6, pc}
   12100:	ldr	r0, [r4, #20]
   12104:	bl	11424 <inet_ntoa@plt>
   12108:	mov	r1, r4
   1210c:	mov	r2, r0
   12110:	ldr	r0, [pc, #68]	; 1215c <ftello64@plt+0xa8c>
   12114:	bl	113b8 <printf@plt>
   12118:	mov	r0, #0
   1211c:	pop	{r4, r5, r6, pc}
   12120:	mov	r3, r5
   12124:	ldr	r2, [pc, #52]	; 12160 <ftello64@plt+0xa90>
   12128:	bl	114a8 <error@plt>
   1212c:	mvn	r0, #0
   12130:	pop	{r4, r5, r6, pc}
   12134:	bl	11568 <__errno_location@plt>
   12138:	ldr	r3, [pc, #36]	; 12164 <ftello64@plt+0xa94>
   1213c:	ldr	r2, [pc, #36]	; 12168 <ftello64@plt+0xa98>
   12140:	ldr	r1, [r0]
   12144:	mov	r0, #0
   12148:	bl	114a8 <error@plt>
   1214c:	mvn	r0, #0
   12150:	pop	{r4, r5, r6, pc}
   12154:	andeq	r8, r0, ip, lsl r9
   12158:	andeq	r2, r3, r0, lsl #24
   1215c:	andeq	lr, r1, ip, asr #6
   12160:			; <UNDEFINED> instruction: 0x0001e2b8
   12164:	andeq	lr, r1, ip, lsr r3
   12168:	andeq	lr, r1, r0, ror #5
   1216c:	push	{r4, r5, r6, r7, r8, lr}
   12170:	sub	sp, sp, #72	; 0x48
   12174:	mov	r6, r2
   12178:	mov	r8, r0
   1217c:	mov	r2, #32
   12180:	mov	r4, r1
   12184:	add	r0, sp, #40	; 0x28
   12188:	mov	r1, #0
   1218c:	bl	11598 <memset@plt>
   12190:	mov	ip, #2
   12194:	add	r2, sp, #40	; 0x28
   12198:	mov	r0, r6
   1219c:	add	r3, sp, #20
   121a0:	mov	r1, #0
   121a4:	str	ip, [sp, #44]	; 0x2c
   121a8:	bl	1167c <getaddrinfo@plt>
   121ac:	cmp	r0, #0
   121b0:	bne	122e4 <ftello64@plt+0xc14>
   121b4:	ldr	r3, [sp, #20]
   121b8:	cmp	r3, #0
   121bc:	bne	121d0 <ftello64@plt+0xb00>
   121c0:	b	12280 <ftello64@plt+0xbb0>
   121c4:	ldr	r3, [r3, #28]
   121c8:	cmp	r3, #0
   121cc:	beq	12280 <ftello64@plt+0xbb0>
   121d0:	ldr	r2, [r3, #4]
   121d4:	cmp	r2, #2
   121d8:	bne	121c4 <ftello64@plt+0xaf4>
   121dc:	ldr	r1, [r3, #16]
   121e0:	ldr	r0, [r3, #20]
   121e4:	mov	r5, #0
   121e8:	mov	r3, #1
   121ec:	add	r2, sp, #24
   121f0:	str	r3, [sp, #8]
   121f4:	str	r5, [sp, #4]
   121f8:	mov	r3, #16
   121fc:	str	r5, [sp]
   12200:	bl	115ec <getnameinfo@plt>
   12204:	mov	r7, r0
   12208:	ldr	r0, [sp, #20]
   1220c:	bl	11670 <freeaddrinfo@plt>
   12210:	cmp	r7, r5
   12214:	bne	122a8 <ftello64@plt+0xbd8>
   12218:	mov	r3, #2
   1221c:	add	r1, r4, #20
   12220:	strh	r3, [r4, #16]
   12224:	add	r0, sp, #24
   12228:	bl	11394 <inet_aton@plt>
   1222c:	subs	r1, r0, #0
   12230:	beq	122d0 <ftello64@plt+0xc00>
   12234:	mov	r0, r8
   12238:	mov	r2, r4
   1223c:	ldr	r1, [pc, #228]	; 12328 <ftello64@plt+0xc58>
   12240:	bl	183f8 <argp_parse@@Base+0xfa0>
   12244:	cmp	r0, #0
   12248:	blt	12308 <ftello64@plt+0xc38>
   1224c:	ldr	r3, [pc, #216]	; 1232c <ftello64@plt+0xc5c>
   12250:	ldr	r0, [r3]
   12254:	cmp	r0, #0
   12258:	beq	12278 <ftello64@plt+0xba8>
   1225c:	ldr	r0, [r4, #20]
   12260:	bl	11424 <inet_ntoa@plt>
   12264:	mov	r1, r4
   12268:	mov	r2, r0
   1226c:	ldr	r0, [pc, #188]	; 12330 <ftello64@plt+0xc60>
   12270:	bl	113b8 <printf@plt>
   12274:	mov	r0, r7
   12278:	add	sp, sp, #72	; 0x48
   1227c:	pop	{r4, r5, r6, r7, r8, pc}
   12280:	mov	r1, #0
   12284:	mov	r0, r1
   12288:	mov	r3, r6
   1228c:	ldr	r2, [pc, #160]	; 12334 <ftello64@plt+0xc64>
   12290:	bl	114a8 <error@plt>
   12294:	ldr	r0, [sp, #20]
   12298:	bl	11670 <freeaddrinfo@plt>
   1229c:	mvn	r0, #0
   122a0:	add	sp, sp, #72	; 0x48
   122a4:	pop	{r4, r5, r6, r7, r8, pc}
   122a8:	mov	r0, r7
   122ac:	bl	113e8 <gai_strerror@plt>
   122b0:	mov	r3, r6
   122b4:	ldr	r2, [pc, #124]	; 12338 <ftello64@plt+0xc68>
   122b8:	mov	r1, r5
   122bc:	str	r0, [sp]
   122c0:	mov	r0, r5
   122c4:	bl	114a8 <error@plt>
   122c8:	mvn	r0, #0
   122cc:	b	12278 <ftello64@plt+0xba8>
   122d0:	add	r3, sp, #24
   122d4:	ldr	r2, [pc, #96]	; 1233c <ftello64@plt+0xc6c>
   122d8:	bl	114a8 <error@plt>
   122dc:	mvn	r0, #0
   122e0:	b	12278 <ftello64@plt+0xba8>
   122e4:	bl	113e8 <gai_strerror@plt>
   122e8:	mov	r1, #0
   122ec:	mov	r3, r6
   122f0:	ldr	r2, [pc, #64]	; 12338 <ftello64@plt+0xc68>
   122f4:	str	r0, [sp]
   122f8:	mov	r0, r1
   122fc:	bl	114a8 <error@plt>
   12300:	mvn	r0, #0
   12304:	b	12278 <ftello64@plt+0xba8>
   12308:	bl	11568 <__errno_location@plt>
   1230c:	ldr	r3, [pc, #44]	; 12340 <ftello64@plt+0xc70>
   12310:	ldr	r2, [pc, #44]	; 12344 <ftello64@plt+0xc74>
   12314:	ldr	r1, [r0]
   12318:	mov	r0, r7
   1231c:	bl	114a8 <error@plt>
   12320:	mvn	r0, #0
   12324:	b	12278 <ftello64@plt+0xba8>
   12328:	andeq	r8, r0, r8, lsl r9
   1232c:	andeq	r2, r3, r0, lsl #24
   12330:	andeq	lr, r1, r4, lsl #7
   12334:	andeq	lr, r1, r4, lsl r3
   12338:	andeq	lr, r1, r0, lsr #5
   1233c:			; <UNDEFINED> instruction: 0x0001e2b8
   12340:	andeq	lr, r1, r4, ror r3
   12344:	andeq	lr, r1, r0, ror #5
   12348:	mov	r3, #2
   1234c:	push	{r4, r5, r6, lr}
   12350:	mov	r4, r1
   12354:	strh	r3, [r1, #16]
   12358:	mov	r6, r0
   1235c:	add	r1, r1, #20
   12360:	mov	r0, r2
   12364:	mov	r5, r2
   12368:	bl	11394 <inet_aton@plt>
   1236c:	subs	r1, r0, #0
   12370:	beq	123bc <ftello64@plt+0xcec>
   12374:	mov	r0, r6
   12378:	mov	r2, r4
   1237c:	ldr	r1, [pc, #108]	; 123f0 <ftello64@plt+0xd20>
   12380:	bl	183f8 <argp_parse@@Base+0xfa0>
   12384:	cmp	r0, #0
   12388:	blt	123d0 <ftello64@plt+0xd00>
   1238c:	ldr	r3, [pc, #96]	; 123f4 <ftello64@plt+0xd24>
   12390:	ldr	r0, [r3]
   12394:	cmp	r0, #0
   12398:	popeq	{r4, r5, r6, pc}
   1239c:	ldr	r0, [r4, #20]
   123a0:	bl	11424 <inet_ntoa@plt>
   123a4:	mov	r1, r4
   123a8:	mov	r2, r0
   123ac:	ldr	r0, [pc, #68]	; 123f8 <ftello64@plt+0xd28>
   123b0:	bl	113b8 <printf@plt>
   123b4:	mov	r0, #0
   123b8:	pop	{r4, r5, r6, pc}
   123bc:	mov	r3, r5
   123c0:	ldr	r2, [pc, #52]	; 123fc <ftello64@plt+0xd2c>
   123c4:	bl	114a8 <error@plt>
   123c8:	mvn	r0, #0
   123cc:	pop	{r4, r5, r6, pc}
   123d0:	bl	11568 <__errno_location@plt>
   123d4:	ldr	r3, [pc, #36]	; 12400 <ftello64@plt+0xd30>
   123d8:	ldr	r2, [pc, #36]	; 12404 <ftello64@plt+0xd34>
   123dc:	ldr	r1, [r0]
   123e0:	mov	r0, #0
   123e4:	bl	114a8 <error@plt>
   123e8:	mvn	r0, #0
   123ec:	pop	{r4, r5, r6, pc}
   123f0:	andeq	r8, r0, sl, lsl r9
   123f4:	andeq	r2, r3, r0, lsl #24
   123f8:	andeq	lr, r1, r0, asr #7
   123fc:			; <UNDEFINED> instruction: 0x0001e2b8
   12400:			; <UNDEFINED> instruction: 0x0001e3b0
   12404:	andeq	lr, r1, r0, ror #5
   12408:	push	{r4, r5, r6, r7, lr}
   1240c:	mov	r6, r0
   12410:	sub	sp, sp, #12
   12414:	mov	r0, r2
   12418:	mov	r7, r2
   1241c:	mov	r4, r1
   12420:	bl	114fc <ether_aton@plt>
   12424:	subs	r5, r0, #0
   12428:	beq	12498 <ftello64@plt+0xdc8>
   1242c:	mov	r2, r4
   12430:	ldr	r1, [pc, #180]	; 124ec <ftello64@plt+0xe1c>
   12434:	mov	r0, r6
   12438:	bl	183f8 <argp_parse@@Base+0xfa0>
   1243c:	ldr	r3, [r5]
   12440:	mov	r0, r6
   12444:	str	r3, [r4, #18]
   12448:	ldrh	r3, [r5, #4]
   1244c:	mov	r2, r4
   12450:	ldr	r1, [pc, #152]	; 124f0 <ftello64@plt+0xe20>
   12454:	strh	r3, [r4, #22]
   12458:	bl	183f8 <argp_parse@@Base+0xfa0>
   1245c:	cmp	r0, #0
   12460:	blt	124cc <ftello64@plt+0xdfc>
   12464:	ldr	r3, [pc, #136]	; 124f4 <ftello64@plt+0xe24>
   12468:	ldr	r0, [r3]
   1246c:	cmp	r0, #0
   12470:	beq	12490 <ftello64@plt+0xdc0>
   12474:	mov	r0, r5
   12478:	bl	115d4 <ether_ntoa@plt>
   1247c:	mov	r1, r4
   12480:	mov	r2, r0
   12484:	ldr	r0, [pc, #108]	; 124f8 <ftello64@plt+0xe28>
   12488:	bl	113b8 <printf@plt>
   1248c:	mov	r0, #0
   12490:	add	sp, sp, #12
   12494:	pop	{r4, r5, r6, r7, pc}
   12498:	mov	r1, sp
   1249c:	mov	r0, r7
   124a0:	bl	11370 <ether_hostton@plt>
   124a4:	cmp	r0, #0
   124a8:	moveq	r5, sp
   124ac:	beq	1242c <ftello64@plt+0xd5c>
   124b0:	mov	r0, r5
   124b4:	mov	r3, r7
   124b8:	ldr	r2, [pc, #60]	; 124fc <ftello64@plt+0xe2c>
   124bc:	mov	r1, r5
   124c0:	bl	114a8 <error@plt>
   124c4:	mvn	r0, #0
   124c8:	b	12490 <ftello64@plt+0xdc0>
   124cc:	bl	11568 <__errno_location@plt>
   124d0:	ldr	r3, [pc, #40]	; 12500 <ftello64@plt+0xe30>
   124d4:	ldr	r2, [pc, #40]	; 12504 <ftello64@plt+0xe34>
   124d8:	ldr	r1, [r0]
   124dc:	mov	r0, #0
   124e0:	bl	114a8 <error@plt>
   124e4:	mvn	r0, #0
   124e8:	b	12490 <ftello64@plt+0xdc0>
   124ec:	andeq	r8, r0, r7, lsr #18
   124f0:	andeq	r8, r0, r4, lsr #18
   124f4:	andeq	r2, r3, r0, lsl #24
   124f8:	andeq	lr, r1, r8, lsr #8
   124fc:	strdeq	lr, [r1], -r0
   12500:	andeq	lr, r1, r8, lsl r4
   12504:	andeq	lr, r1, r0, ror #5
   12508:	push	{r4, lr}
   1250c:	mov	r4, r1
   12510:	ldr	r1, [pc, #84]	; 1256c <ftello64@plt+0xe9c>
   12514:	str	r2, [r4, #16]
   12518:	mov	r2, r4
   1251c:	bl	183f8 <argp_parse@@Base+0xfa0>
   12520:	cmp	r0, #0
   12524:	blt	12550 <ftello64@plt+0xe80>
   12528:	ldr	r3, [pc, #64]	; 12570 <ftello64@plt+0xea0>
   1252c:	ldr	r0, [r3]
   12530:	cmp	r0, #0
   12534:	popeq	{r4, pc}
   12538:	ldr	r2, [r4, #16]
   1253c:	mov	r1, r4
   12540:	ldr	r0, [pc, #44]	; 12574 <ftello64@plt+0xea4>
   12544:	bl	113b8 <printf@plt>
   12548:	mov	r0, #0
   1254c:	pop	{r4, pc}
   12550:	bl	11568 <__errno_location@plt>
   12554:	ldr	r2, [pc, #28]	; 12578 <ftello64@plt+0xea8>
   12558:	ldr	r1, [r0]
   1255c:	mov	r0, #0
   12560:	bl	114a8 <error@plt>
   12564:	mvn	r0, #0
   12568:	pop	{r4, pc}
   1256c:	andeq	r8, r0, r2, lsr #18
   12570:	andeq	r2, r3, r0, lsl #24
   12574:	andeq	lr, r1, ip, ror #8
   12578:	andeq	lr, r1, r8, asr r4
   1257c:	push	{r4, lr}
   12580:	mov	r4, r1
   12584:	ldr	r1, [pc, #84]	; 125e0 <ftello64@plt+0xf10>
   12588:	str	r2, [r4, #16]
   1258c:	mov	r2, r4
   12590:	bl	183f8 <argp_parse@@Base+0xfa0>
   12594:	cmp	r0, #0
   12598:	blt	125c4 <ftello64@plt+0xef4>
   1259c:	ldr	r3, [pc, #64]	; 125e4 <ftello64@plt+0xf14>
   125a0:	ldr	r0, [r3]
   125a4:	cmp	r0, #0
   125a8:	popeq	{r4, pc}
   125ac:	ldr	r2, [r4, #16]
   125b0:	mov	r1, r4
   125b4:	ldr	r0, [pc, #44]	; 125e8 <ftello64@plt+0xf18>
   125b8:	bl	113b8 <printf@plt>
   125bc:	mov	r0, #0
   125c0:	pop	{r4, pc}
   125c4:	bl	11568 <__errno_location@plt>
   125c8:	ldr	r2, [pc, #28]	; 125ec <ftello64@plt+0xf1c>
   125cc:	ldr	r1, [r0]
   125d0:	mov	r0, #0
   125d4:	bl	114a8 <error@plt>
   125d8:	mvn	r0, #0
   125dc:	pop	{r4, pc}
   125e0:	andeq	r8, r0, lr, lsl r9
   125e4:	andeq	r2, r3, r0, lsl #24
   125e8:	andeq	lr, r1, r4, lsr #9
   125ec:	andeq	lr, r1, ip, lsl #9
   125f0:	push	{r4, r5, r6, r7, lr}
   125f4:	mov	lr, r1
   125f8:	mov	r7, r0
   125fc:	mov	r4, r1
   12600:	mov	r5, r2
   12604:	mov	r6, r3
   12608:	ldm	lr!, {r0, r1, r2, r3}
   1260c:	sub	sp, sp, #36	; 0x24
   12610:	mov	ip, sp
   12614:	stmia	ip!, {r0, r1, r2, r3}
   12618:	ldm	lr, {r0, r1, r2, r3}
   1261c:	stm	ip, {r0, r1, r2, r3}
   12620:	mov	r0, r7
   12624:	mov	r2, sp
   12628:	ldr	r1, [pc, #280]	; 12748 <ftello64@plt+0x1078>
   1262c:	bl	183f8 <argp_parse@@Base+0xfa0>
   12630:	cmp	r0, #0
   12634:	blt	12710 <ftello64@plt+0x1040>
   12638:	ldrh	r3, [sp, #16]
   1263c:	mov	r0, r7
   12640:	mov	r2, r4
   12644:	orr	r3, r3, r5
   12648:	bic	r3, r3, r6
   1264c:	strh	r3, [r4, #16]
   12650:	ldr	r1, [pc, #244]	; 1274c <ftello64@plt+0x107c>
   12654:	bl	183f8 <argp_parse@@Base+0xfa0>
   12658:	cmp	r0, #0
   1265c:	blt	1272c <ftello64@plt+0x105c>
   12660:	ldr	r3, [pc, #232]	; 12750 <ftello64@plt+0x1080>
   12664:	ldr	r0, [r3]
   12668:	cmp	r0, #0
   1266c:	beq	126a4 <ftello64@plt+0xfd4>
   12670:	cmp	r5, #0
   12674:	bne	126ac <ftello64@plt+0xfdc>
   12678:	ldr	r1, [pc, #212]	; 12754 <ftello64@plt+0x1084>
   1267c:	ldr	r0, [pc, #212]	; 12758 <ftello64@plt+0x1088>
   12680:	bl	113b8 <printf@plt>
   12684:	mov	r1, r4
   12688:	ldr	r0, [pc, #204]	; 1275c <ftello64@plt+0x108c>
   1268c:	bl	113b8 <printf@plt>
   12690:	cmp	r6, #0
   12694:	bne	126e4 <ftello64@plt+0x1014>
   12698:	ldr	r0, [pc, #192]	; 12760 <ftello64@plt+0x1090>
   1269c:	bl	114c0 <puts@plt>
   126a0:	mov	r0, #0
   126a4:	add	sp, sp, #36	; 0x24
   126a8:	pop	{r4, r5, r6, r7, pc}
   126ac:	ldr	r1, [pc, #176]	; 12764 <ftello64@plt+0x1094>
   126b0:	ldr	r0, [pc, #160]	; 12758 <ftello64@plt+0x1088>
   126b4:	bl	113b8 <printf@plt>
   126b8:	ldr	r0, [pc, #168]	; 12768 <ftello64@plt+0x1098>
   126bc:	bl	113b8 <printf@plt>
   126c0:	mov	r0, r5
   126c4:	mov	r2, #44	; 0x2c
   126c8:	mov	r1, #0
   126cc:	bl	11dc8 <ftello64@plt+0x6f8>
   126d0:	ldr	r3, [pc, #148]	; 1276c <ftello64@plt+0x109c>
   126d4:	mov	r0, #39	; 0x27
   126d8:	ldr	r1, [r3]
   126dc:	bl	11628 <putc@plt>
   126e0:	b	12684 <ftello64@plt+0xfb4>
   126e4:	ldr	r0, [pc, #132]	; 12770 <ftello64@plt+0x10a0>
   126e8:	bl	113b8 <printf@plt>
   126ec:	mov	r0, r6
   126f0:	mov	r2, #44	; 0x2c
   126f4:	mov	r1, #0
   126f8:	bl	11dc8 <ftello64@plt+0x6f8>
   126fc:	ldr	r3, [pc, #104]	; 1276c <ftello64@plt+0x109c>
   12700:	mov	r0, #39	; 0x27
   12704:	ldr	r1, [r3]
   12708:	bl	11628 <putc@plt>
   1270c:	b	12698 <ftello64@plt+0xfc8>
   12710:	bl	11568 <__errno_location@plt>
   12714:	ldr	r2, [pc, #88]	; 12774 <ftello64@plt+0x10a4>
   12718:	ldr	r1, [r0]
   1271c:	mov	r0, #0
   12720:	bl	114a8 <error@plt>
   12724:	mvn	r0, #0
   12728:	b	126a4 <ftello64@plt+0xfd4>
   1272c:	bl	11568 <__errno_location@plt>
   12730:	ldr	r2, [pc, #64]	; 12778 <ftello64@plt+0x10a8>
   12734:	ldr	r1, [r0]
   12738:	mov	r0, #0
   1273c:	bl	114a8 <error@plt>
   12740:	mvn	r0, #0
   12744:	b	126a4 <ftello64@plt+0xfd4>
   12748:	andeq	r8, r0, r3, lsl r9
   1274c:	andeq	r8, r0, r4, lsl r9
   12750:	andeq	r2, r3, r0, lsl #24
   12754:	andeq	lr, r1, r0, lsr #10
   12758:	andeq	lr, r1, ip, lsl #10
   1275c:	strdeq	lr, [r1], -r0
   12760:	andeq	lr, r1, r8, lsr #21
   12764:	strdeq	r1, [r2], -ip
   12768:	andeq	lr, r1, ip, lsl r5
   1276c:	andeq	r2, r3, ip, asr #22
   12770:	strdeq	lr, [r1], -ip
   12774:	andeq	lr, r1, r8, asr #9
   12778:	ldrdeq	lr, [r1], -ip
   1277c:	push	{r4, r5, lr}
   12780:	mov	r4, r1
   12784:	sub	sp, sp, #36	; 0x24
   12788:	mov	r2, #32
   1278c:	mov	r1, #0
   12790:	mov	r5, r0
   12794:	mov	r0, sp
   12798:	bl	11598 <memset@plt>
   1279c:	mov	r2, #16
   127a0:	ldr	r1, [r4]
   127a4:	mov	r0, sp
   127a8:	bl	115a4 <strncpy@plt>
   127ac:	ldr	r3, [r4, #4]
   127b0:	mov	r2, #0
   127b4:	tst	r3, #8
   127b8:	strb	r2, [sp, #15]
   127bc:	bne	12858 <ftello64@plt+0x1188>
   127c0:	tst	r3, #16
   127c4:	bne	12878 <ftello64@plt+0x11a8>
   127c8:	tst	r3, #32
   127cc:	bne	1289c <ftello64@plt+0x11cc>
   127d0:	tst	r3, #64	; 0x40
   127d4:	bne	128c0 <ftello64@plt+0x11f0>
   127d8:	tst	r3, #1024	; 0x400
   127dc:	bne	128e4 <ftello64@plt+0x1214>
   127e0:	tst	r3, #128	; 0x80
   127e4:	bne	12908 <ftello64@plt+0x1238>
   127e8:	tst	r3, #256	; 0x100
   127ec:	bne	1292c <ftello64@plt+0x125c>
   127f0:	tst	r3, #1
   127f4:	bne	12950 <ftello64@plt+0x1280>
   127f8:	ldr	r2, [r4, #44]	; 0x2c
   127fc:	cmp	r2, #0
   12800:	bne	1283c <ftello64@plt+0x116c>
   12804:	ldr	r3, [r4, #48]	; 0x30
   12808:	cmp	r3, #0
   1280c:	bne	12840 <ftello64@plt+0x1170>
   12810:	ldr	r0, [r4, #4]
   12814:	ands	r0, r0, #2
   12818:	beq	12834 <ftello64@plt+0x1164>
   1281c:	mov	r0, r5
   12820:	mov	r2, sp
   12824:	ldr	r3, [r4, #12]
   12828:	ldr	r1, [r4]
   1282c:	bl	154b0 <ftello64@plt+0x3de0>
   12830:	mov	r0, #0
   12834:	add	sp, sp, #36	; 0x24
   12838:	pop	{r4, r5, pc}
   1283c:	ldr	r3, [r4, #48]	; 0x30
   12840:	mov	r1, sp
   12844:	mov	r0, r5
   12848:	bl	125f0 <ftello64@plt+0xf20>
   1284c:	cmp	r0, #0
   12850:	beq	12810 <ftello64@plt+0x1140>
   12854:	b	12834 <ftello64@plt+0x1164>
   12858:	ldr	r2, [r4, #20]
   1285c:	mov	r1, sp
   12860:	mov	r0, r5
   12864:	bl	11ed0 <ftello64@plt+0x800>
   12868:	cmp	r0, #0
   1286c:	bne	12834 <ftello64@plt+0x1164>
   12870:	ldr	r3, [r4, #4]
   12874:	b	127c0 <ftello64@plt+0x10f0>
   12878:	ldr	r2, [r4, #24]
   1287c:	mov	r1, sp
   12880:	mov	r0, r5
   12884:	bl	120ac <ftello64@plt+0x9dc>
   12888:	cmp	r0, #0
   1288c:	bne	12834 <ftello64@plt+0x1164>
   12890:	ldr	r3, [r4, #4]
   12894:	tst	r3, #32
   12898:	beq	127d0 <ftello64@plt+0x1100>
   1289c:	ldr	r2, [r4, #28]
   128a0:	mov	r1, sp
   128a4:	mov	r0, r5
   128a8:	bl	1216c <ftello64@plt+0xa9c>
   128ac:	cmp	r0, #0
   128b0:	bne	12834 <ftello64@plt+0x1164>
   128b4:	ldr	r3, [r4, #4]
   128b8:	tst	r3, #64	; 0x40
   128bc:	beq	127d8 <ftello64@plt+0x1108>
   128c0:	ldr	r2, [r4, #32]
   128c4:	mov	r1, sp
   128c8:	mov	r0, r5
   128cc:	bl	12348 <ftello64@plt+0xc78>
   128d0:	cmp	r0, #0
   128d4:	bne	12834 <ftello64@plt+0x1164>
   128d8:	ldr	r3, [r4, #4]
   128dc:	tst	r3, #1024	; 0x400
   128e0:	beq	127e0 <ftello64@plt+0x1110>
   128e4:	ldr	r2, [r4, #52]	; 0x34
   128e8:	mov	r1, sp
   128ec:	mov	r0, r5
   128f0:	bl	12408 <ftello64@plt+0xd38>
   128f4:	cmp	r0, #0
   128f8:	bne	12834 <ftello64@plt+0x1164>
   128fc:	ldr	r3, [r4, #4]
   12900:	tst	r3, #128	; 0x80
   12904:	beq	127e8 <ftello64@plt+0x1118>
   12908:	ldr	r2, [r4, #36]	; 0x24
   1290c:	mov	r1, sp
   12910:	mov	r0, r5
   12914:	bl	12508 <ftello64@plt+0xe38>
   12918:	cmp	r0, #0
   1291c:	bne	12834 <ftello64@plt+0x1164>
   12920:	ldr	r3, [r4, #4]
   12924:	tst	r3, #256	; 0x100
   12928:	beq	127f0 <ftello64@plt+0x1120>
   1292c:	ldr	r2, [r4, #40]	; 0x28
   12930:	mov	r1, sp
   12934:	mov	r0, r5
   12938:	bl	1257c <ftello64@plt+0xeac>
   1293c:	cmp	r0, #0
   12940:	bne	12834 <ftello64@plt+0x1164>
   12944:	ldr	r3, [r4, #4]
   12948:	tst	r3, #1
   1294c:	beq	127f8 <ftello64@plt+0x1128>
   12950:	ldr	r2, [r4, #8]
   12954:	mov	r1, sp
   12958:	mov	r0, r5
   1295c:	bl	16e70 <ftello64@plt+0x57a0>
   12960:	cmp	r0, #0
   12964:	bne	12834 <ftello64@plt+0x1164>
   12968:	ldr	r2, [r4, #44]	; 0x2c
   1296c:	cmp	r2, #0
   12970:	beq	12804 <ftello64@plt+0x1134>
   12974:	b	1283c <ftello64@plt+0x116c>
   12978:	ldr	r1, [r1]
   1297c:	ldr	r0, [r0]
   12980:	b	113a0 <strcmp@plt>
   12984:	ldr	r3, [pc, #20]	; 129a0 <ftello64@plt+0x12d0>
   12988:	cmp	r0, r3
   1298c:	beq	12998 <ftello64@plt+0x12c8>
   12990:	mov	r0, r1
   12994:	bx	lr
   12998:	ldr	r0, [pc, #4]	; 129a4 <ftello64@plt+0x12d4>
   1299c:	b	11970 <ftello64@plt+0x2a0>
   129a0:	andeq	r0, r0, #4
   129a4:	andeq	lr, r1, ip, ror r5
   129a8:	ldr	r3, [pc, #76]	; 129fc <ftello64@plt+0x132c>
   129ac:	push	{r4, r5, r6, lr}
   129b0:	mov	r5, r0
   129b4:	ldr	r0, [r3]
   129b8:	cmp	r0, #0
   129bc:	bne	129d0 <ftello64@plt+0x1300>
   129c0:	b	129f0 <ftello64@plt+0x1320>
   129c4:	ldr	r0, [r4, #12]
   129c8:	cmp	r0, #0
   129cc:	beq	129f0 <ftello64@plt+0x1320>
   129d0:	mov	r1, r5
   129d4:	mov	r4, r3
   129d8:	bl	113a0 <strcmp@plt>
   129dc:	add	r3, r4, #12
   129e0:	cmp	r0, #0
   129e4:	bne	129c4 <ftello64@plt+0x12f4>
   129e8:	mov	r0, r4
   129ec:	pop	{r4, r5, r6, pc}
   129f0:	mov	r4, r0
   129f4:	mov	r0, r4
   129f8:	pop	{r4, r5, r6, pc}
   129fc:			; <UNDEFINED> instruction: 0x000322b4
   12a00:	push	{r4, r5, r6, r7, r8, lr}
   12a04:	mov	r5, r0
   12a08:	ldr	r4, [pc, #160]	; 12ab0 <ftello64@plt+0x13e0>
   12a0c:	ldr	r6, [pc, #160]	; 12ab4 <ftello64@plt+0x13e4>
   12a10:	ldr	r2, [pc, #160]	; 12ab8 <ftello64@plt+0x13e8>
   12a14:	ldr	r3, [r4]
   12a18:	ldr	ip, [r6]
   12a1c:	add	r3, r3, #1
   12a20:	mov	r0, ip
   12a24:	rsb	r1, r3, r3, lsl #3
   12a28:	mov	r7, #1
   12a2c:	lsl	r1, r1, #3
   12a30:	str	r3, [r4]
   12a34:	str	r7, [r2]
   12a38:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   12a3c:	cmp	r0, #0
   12a40:	str	r0, [r6]
   12a44:	movne	r6, r0
   12a48:	beq	12a94 <ftello64@plt+0x13c4>
   12a4c:	ldr	r4, [r4]
   12a50:	ldr	lr, [pc, #100]	; 12abc <ftello64@plt+0x13ec>
   12a54:	rsb	r4, r4, r4, lsl #3
   12a58:	ldm	lr!, {r0, r1, r2, r3}
   12a5c:	lsl	r4, r4, #3
   12a60:	sub	r4, r4, #56	; 0x38
   12a64:	add	r7, r6, r4
   12a68:	mov	ip, r7
   12a6c:	stmia	ip!, {r0, r1, r2, r3}
   12a70:	ldm	lr!, {r0, r1, r2, r3}
   12a74:	stmia	ip!, {r0, r1, r2, r3}
   12a78:	ldm	lr!, {r0, r1, r2, r3}
   12a7c:	stmia	ip!, {r0, r1, r2, r3}
   12a80:	ldm	lr, {r0, r1}
   12a84:	stm	ip, {r0, r1}
   12a88:	str	r5, [r6, r4]
   12a8c:	mov	r0, r7
   12a90:	pop	{r4, r5, r6, r7, r8, pc}
   12a94:	bl	11568 <__errno_location@plt>
   12a98:	ldr	r2, [pc, #32]	; 12ac0 <ftello64@plt+0x13f0>
   12a9c:	ldr	r1, [r0]
   12aa0:	mov	r0, r7
   12aa4:	bl	114a8 <error@plt>
   12aa8:	ldr	r6, [r6]
   12aac:	b	12a4c <ftello64@plt+0x137c>
   12ab0:	strdeq	r2, [r3], -r0
   12ab4:	andeq	r2, r3, ip, ror #23
   12ab8:	strdeq	r2, [r3], -ip
   12abc:	andeq	lr, r1, r4, lsr #10
   12ac0:	muleq	r1, r0, r5
   12ac4:	push	{r4, r5, lr}
   12ac8:	subs	r4, r0, #0
   12acc:	sub	sp, sp, #12
   12ad0:	mov	r5, r1
   12ad4:	beq	12b18 <ftello64@plt+0x1448>
   12ad8:	ldr	r3, [r4, #4]
   12adc:	tst	r3, #8
   12ae0:	beq	12b04 <ftello64@plt+0x1434>
   12ae4:	ldr	r2, [r4]
   12ae8:	ldr	r3, [pc, #68]	; 12b34 <ftello64@plt+0x1464>
   12aec:	str	r2, [sp]
   12af0:	mov	r1, #0
   12af4:	ldr	r2, [pc, #60]	; 12b38 <ftello64@plt+0x1468>
   12af8:	mov	r0, #1
   12afc:	bl	114a8 <error@plt>
   12b00:	ldr	r3, [r4, #4]
   12b04:	orr	r3, r3, #8
   12b08:	str	r3, [r4, #4]
   12b0c:	str	r5, [r4, #20]
   12b10:	add	sp, sp, #12
   12b14:	pop	{r4, r5, pc}
   12b18:	str	r1, [sp]
   12b1c:	ldr	r3, [pc, #16]	; 12b34 <ftello64@plt+0x1464>
   12b20:	ldr	r2, [pc, #20]	; 12b3c <ftello64@plt+0x146c>
   12b24:	mov	r1, r4
   12b28:	mov	r0, #1
   12b2c:	bl	114a8 <error@plt>
   12b30:	b	12ad8 <ftello64@plt+0x1408>
   12b34:	andeq	lr, r1, ip, asr #5
   12b38:	andeq	lr, r1, r4, ror #11
   12b3c:	andeq	lr, r1, r0, asr #11
   12b40:	push	{r4, r5, lr}
   12b44:	subs	r4, r0, #0
   12b48:	sub	sp, sp, #12
   12b4c:	mov	r5, r1
   12b50:	beq	12b94 <ftello64@plt+0x14c4>
   12b54:	ldr	r3, [r4, #4]
   12b58:	tst	r3, #16
   12b5c:	beq	12b80 <ftello64@plt+0x14b0>
   12b60:	ldr	r2, [r4]
   12b64:	ldr	r3, [pc, #68]	; 12bb0 <ftello64@plt+0x14e0>
   12b68:	str	r2, [sp]
   12b6c:	mov	r1, #0
   12b70:	ldr	r2, [pc, #60]	; 12bb4 <ftello64@plt+0x14e4>
   12b74:	mov	r0, #1
   12b78:	bl	114a8 <error@plt>
   12b7c:	ldr	r3, [r4, #4]
   12b80:	orr	r3, r3, #16
   12b84:	str	r3, [r4, #4]
   12b88:	str	r5, [r4, #24]
   12b8c:	add	sp, sp, #12
   12b90:	pop	{r4, r5, pc}
   12b94:	str	r1, [sp]
   12b98:	ldr	r3, [pc, #16]	; 12bb0 <ftello64@plt+0x14e0>
   12b9c:	ldr	r2, [pc, #20]	; 12bb8 <ftello64@plt+0x14e8>
   12ba0:	mov	r1, r4
   12ba4:	mov	r0, #1
   12ba8:	bl	114a8 <error@plt>
   12bac:	b	12b54 <ftello64@plt+0x1484>
   12bb0:	andeq	lr, r1, ip, lsl #12
   12bb4:	andeq	lr, r1, r4, ror #11
   12bb8:	andeq	lr, r1, r0, asr #11
   12bbc:	push	{r4, r5, lr}
   12bc0:	subs	r4, r0, #0
   12bc4:	sub	sp, sp, #12
   12bc8:	mov	r5, r1
   12bcc:	beq	12c10 <ftello64@plt+0x1540>
   12bd0:	ldr	r3, [r4, #4]
   12bd4:	tst	r3, #32
   12bd8:	beq	12bfc <ftello64@plt+0x152c>
   12bdc:	ldr	r2, [r4]
   12be0:	ldr	r3, [pc, #68]	; 12c2c <ftello64@plt+0x155c>
   12be4:	str	r2, [sp]
   12be8:	mov	r1, #0
   12bec:	ldr	r2, [pc, #60]	; 12c30 <ftello64@plt+0x1560>
   12bf0:	mov	r0, #1
   12bf4:	bl	114a8 <error@plt>
   12bf8:	ldr	r3, [r4, #4]
   12bfc:	orr	r3, r3, #32
   12c00:	str	r3, [r4, #4]
   12c04:	str	r5, [r4, #28]
   12c08:	add	sp, sp, #12
   12c0c:	pop	{r4, r5, pc}
   12c10:	str	r1, [sp]
   12c14:	ldr	r3, [pc, #16]	; 12c2c <ftello64@plt+0x155c>
   12c18:	ldr	r2, [pc, #20]	; 12c34 <ftello64@plt+0x1564>
   12c1c:	mov	r1, r4
   12c20:	mov	r0, #1
   12c24:	bl	114a8 <error@plt>
   12c28:	b	12bd0 <ftello64@plt+0x1500>
   12c2c:	andeq	lr, r1, r4, lsl r6
   12c30:	andeq	lr, r1, r4, ror #11
   12c34:	andeq	lr, r1, r0, asr #11
   12c38:	push	{r4, r5, lr}
   12c3c:	subs	r4, r0, #0
   12c40:	sub	sp, sp, #12
   12c44:	mov	r5, r1
   12c48:	beq	12c8c <ftello64@plt+0x15bc>
   12c4c:	ldr	r3, [r4, #4]
   12c50:	tst	r3, #64	; 0x40
   12c54:	beq	12c78 <ftello64@plt+0x15a8>
   12c58:	ldr	r2, [r4]
   12c5c:	ldr	r3, [pc, #68]	; 12ca8 <ftello64@plt+0x15d8>
   12c60:	str	r2, [sp]
   12c64:	mov	r1, #0
   12c68:	ldr	r2, [pc, #60]	; 12cac <ftello64@plt+0x15dc>
   12c6c:	mov	r0, #1
   12c70:	bl	114a8 <error@plt>
   12c74:	ldr	r3, [r4, #4]
   12c78:	orr	r3, r3, #64	; 0x40
   12c7c:	str	r3, [r4, #4]
   12c80:	str	r5, [r4, #32]
   12c84:	add	sp, sp, #12
   12c88:	pop	{r4, r5, pc}
   12c8c:	str	r1, [sp]
   12c90:	ldr	r3, [pc, #16]	; 12ca8 <ftello64@plt+0x15d8>
   12c94:	ldr	r2, [pc, #20]	; 12cb0 <ftello64@plt+0x15e0>
   12c98:	mov	r1, r4
   12c9c:	mov	r0, #1
   12ca0:	bl	114a8 <error@plt>
   12ca4:	b	12c4c <ftello64@plt+0x157c>
   12ca8:	andeq	lr, r1, r0, lsr r6
   12cac:	andeq	lr, r1, r4, ror #11
   12cb0:	andeq	lr, r1, r0, asr #11
   12cb4:	push	{r4, r5, lr}
   12cb8:	subs	r4, r0, #0
   12cbc:	sub	sp, sp, #12
   12cc0:	mov	r5, r1
   12cc4:	beq	12d08 <ftello64@plt+0x1638>
   12cc8:	ldr	r3, [r4, #4]
   12ccc:	tst	r3, #1024	; 0x400
   12cd0:	beq	12cf4 <ftello64@plt+0x1624>
   12cd4:	ldr	r2, [r4]
   12cd8:	ldr	r3, [pc, #68]	; 12d24 <ftello64@plt+0x1654>
   12cdc:	str	r2, [sp]
   12ce0:	mov	r1, #0
   12ce4:	ldr	r2, [pc, #60]	; 12d28 <ftello64@plt+0x1658>
   12ce8:	mov	r0, #1
   12cec:	bl	114a8 <error@plt>
   12cf0:	ldr	r3, [r4, #4]
   12cf4:	orr	r3, r3, #1024	; 0x400
   12cf8:	str	r3, [r4, #4]
   12cfc:	str	r5, [r4, #52]	; 0x34
   12d00:	add	sp, sp, #12
   12d04:	pop	{r4, r5, pc}
   12d08:	str	r1, [sp]
   12d0c:	ldr	r3, [pc, #16]	; 12d24 <ftello64@plt+0x1654>
   12d10:	ldr	r2, [pc, #20]	; 12d2c <ftello64@plt+0x165c>
   12d14:	mov	r1, r4
   12d18:	mov	r0, #1
   12d1c:	bl	114a8 <error@plt>
   12d20:	b	12cc8 <ftello64@plt+0x15f8>
   12d24:	andeq	lr, r1, r4, lsl #8
   12d28:	andeq	lr, r1, r4, ror #11
   12d2c:	andeq	lr, r1, r0, asr #11
   12d30:	push	{r4, r5, lr}
   12d34:	subs	r4, r0, #0
   12d38:	sub	sp, sp, #20
   12d3c:	mov	r5, r1
   12d40:	beq	12dd0 <ftello64@plt+0x1700>
   12d44:	ldr	r3, [r4, #4]
   12d48:	tst	r3, #128	; 0x80
   12d4c:	bne	12db0 <ftello64@plt+0x16e0>
   12d50:	mov	r2, #0
   12d54:	add	r1, sp, #12
   12d58:	mov	r0, r5
   12d5c:	bl	113ac <strtol@plt>
   12d60:	str	r0, [r4, #36]	; 0x24
   12d64:	ldrb	r3, [r5]
   12d68:	cmp	r3, #0
   12d6c:	beq	12d80 <ftello64@plt+0x16b0>
   12d70:	ldr	r3, [sp, #12]
   12d74:	ldrb	r3, [r3]
   12d78:	cmp	r3, #0
   12d7c:	beq	12d9c <ftello64@plt+0x16cc>
   12d80:	ldr	r2, [r4]
   12d84:	mov	r3, r5
   12d88:	str	r2, [sp]
   12d8c:	mov	r1, #0
   12d90:	ldr	r2, [pc, #84]	; 12dec <ftello64@plt+0x171c>
   12d94:	mov	r0, #1
   12d98:	bl	114a8 <error@plt>
   12d9c:	ldr	r3, [r4, #4]
   12da0:	orr	r3, r3, #128	; 0x80
   12da4:	str	r3, [r4, #4]
   12da8:	add	sp, sp, #20
   12dac:	pop	{r4, r5, pc}
   12db0:	ldr	r2, [r4]
   12db4:	ldr	r3, [pc, #52]	; 12df0 <ftello64@plt+0x1720>
   12db8:	str	r2, [sp]
   12dbc:	mov	r1, #0
   12dc0:	ldr	r2, [pc, #44]	; 12df4 <ftello64@plt+0x1724>
   12dc4:	mov	r0, #1
   12dc8:	bl	114a8 <error@plt>
   12dcc:	b	12d50 <ftello64@plt+0x1680>
   12dd0:	str	r1, [sp]
   12dd4:	ldr	r3, [pc, #20]	; 12df0 <ftello64@plt+0x1720>
   12dd8:	ldr	r2, [pc, #24]	; 12df8 <ftello64@plt+0x1728>
   12ddc:	mov	r1, r4
   12de0:	mov	r0, #1
   12de4:	bl	114a8 <error@plt>
   12de8:	b	12d44 <ftello64@plt+0x1674>
   12dec:	andeq	lr, r1, r4, ror r6
   12df0:	andeq	lr, r1, r4, asr #12
   12df4:	andeq	lr, r1, r4, ror #11
   12df8:	andeq	lr, r1, r0, asr r6
   12dfc:	push	{r4, r5, lr}
   12e00:	subs	r4, r0, #0
   12e04:	sub	sp, sp, #20
   12e08:	mov	r5, r1
   12e0c:	beq	12e9c <ftello64@plt+0x17cc>
   12e10:	ldr	r3, [r4, #4]
   12e14:	tst	r3, #256	; 0x100
   12e18:	bne	12e7c <ftello64@plt+0x17ac>
   12e1c:	mov	r2, #0
   12e20:	add	r1, sp, #12
   12e24:	mov	r0, r5
   12e28:	bl	113ac <strtol@plt>
   12e2c:	str	r0, [r4, #40]	; 0x28
   12e30:	ldrb	r3, [r5]
   12e34:	cmp	r3, #0
   12e38:	beq	12e4c <ftello64@plt+0x177c>
   12e3c:	ldr	r3, [sp, #12]
   12e40:	ldrb	r3, [r3]
   12e44:	cmp	r3, #0
   12e48:	beq	12e68 <ftello64@plt+0x1798>
   12e4c:	ldr	r2, [r4]
   12e50:	mov	r3, r5
   12e54:	str	r2, [sp]
   12e58:	mov	r1, #0
   12e5c:	ldr	r2, [pc, #84]	; 12eb8 <ftello64@plt+0x17e8>
   12e60:	mov	r0, #1
   12e64:	bl	114a8 <error@plt>
   12e68:	ldr	r3, [r4, #4]
   12e6c:	orr	r3, r3, #256	; 0x100
   12e70:	str	r3, [r4, #4]
   12e74:	add	sp, sp, #20
   12e78:	pop	{r4, r5, pc}
   12e7c:	ldr	r2, [r4]
   12e80:	ldr	r3, [pc, #52]	; 12ebc <ftello64@plt+0x17ec>
   12e84:	str	r2, [sp]
   12e88:	mov	r1, #0
   12e8c:	ldr	r2, [pc, #44]	; 12ec0 <ftello64@plt+0x17f0>
   12e90:	mov	r0, #1
   12e94:	bl	114a8 <error@plt>
   12e98:	b	12e1c <ftello64@plt+0x174c>
   12e9c:	str	r1, [sp]
   12ea0:	ldr	r3, [pc, #20]	; 12ebc <ftello64@plt+0x17ec>
   12ea4:	ldr	r2, [pc, #24]	; 12ec4 <ftello64@plt+0x17f4>
   12ea8:	mov	r1, r4
   12eac:	mov	r0, #1
   12eb0:	bl	114a8 <error@plt>
   12eb4:	b	12e10 <ftello64@plt+0x1740>
   12eb8:	andeq	lr, r1, r4, ror r6
   12ebc:	andeq	lr, r1, r8, lsr #13
   12ec0:	andeq	lr, r1, r4, ror #11
   12ec4:	andeq	lr, r1, r0, asr r6
   12ec8:	push	{r4, r5, lr}
   12ecc:	subs	r4, r0, #0
   12ed0:	sub	sp, sp, #12
   12ed4:	mov	r5, r1
   12ed8:	beq	12f28 <ftello64@plt+0x1858>
   12edc:	ldr	r1, [pc, #92]	; 12f40 <ftello64@plt+0x1870>
   12ee0:	mov	r0, r5
   12ee4:	bl	11454 <strcasecmp@plt>
   12ee8:	cmp	r0, #0
   12eec:	moveq	r3, #2
   12ef0:	strheq	r3, [r4, #16]
   12ef4:	beq	12f14 <ftello64@plt+0x1844>
   12ef8:	ldr	r2, [r4]
   12efc:	mov	r3, r5
   12f00:	str	r2, [sp]
   12f04:	mov	r1, #0
   12f08:	ldr	r2, [pc, #52]	; 12f44 <ftello64@plt+0x1874>
   12f0c:	mov	r0, #1
   12f10:	bl	114a8 <error@plt>
   12f14:	ldr	r3, [r4, #4]
   12f18:	orr	r3, r3, #4
   12f1c:	str	r3, [r4, #4]
   12f20:	add	sp, sp, #12
   12f24:	pop	{r4, r5, pc}
   12f28:	mov	r3, r1
   12f2c:	ldr	r2, [pc, #20]	; 12f48 <ftello64@plt+0x1878>
   12f30:	mov	r1, r4
   12f34:	mov	r0, #1
   12f38:	bl	114a8 <error@plt>
   12f3c:	b	12edc <ftello64@plt+0x180c>
   12f40:	andeq	lr, r1, r8, ror #13
   12f44:	strdeq	lr, [r1], -r0
   12f48:			; <UNDEFINED> instruction: 0x0001e6b8
   12f4c:	cmp	r0, #0
   12f50:	ldreq	r3, [pc, #72]	; 12fa0 <ftello64@plt+0x18d0>
   12f54:	ldrne	ip, [r0, #4]
   12f58:	ldrne	r3, [pc, #64]	; 12fa0 <ftello64@plt+0x18d0>
   12f5c:	ldreq	r0, [r3]
   12f60:	orrne	ip, ip, #512	; 0x200
   12f64:	orreq	r0, r0, #512	; 0x200
   12f68:	strne	ip, [r0, #4]
   12f6c:	streq	r0, [r3]
   12f70:	cmp	r2, #0
   12f74:	ldmibne	r3, {r0, r2}
   12f78:	ldreq	r0, [r3, #8]
   12f7c:	ldreq	r2, [r3, #4]
   12f80:	orrne	r0, r0, r1
   12f84:	bicne	r1, r2, r1
   12f88:	orreq	r0, r0, r1
   12f8c:	biceq	r1, r2, r1
   12f90:	stmibne	r3, {r0, r1}
   12f94:	streq	r0, [r3, #8]
   12f98:	streq	r1, [r3, #4]
   12f9c:	bx	lr
   12fa0:	andeq	r2, r3, r4, asr fp
   12fa4:	ldrb	r3, [r1]
   12fa8:	cmp	r3, #0
   12fac:	bxeq	lr
   12fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fb4:	mov	r4, r1
   12fb8:	sub	sp, sp, #20
   12fbc:	mov	r7, r0
   12fc0:	ldr	fp, [pc, #260]	; 130cc <ftello64@plt+0x19fc>
   12fc4:	mov	r8, #44	; 0x2c
   12fc8:	mov	r9, #0
   12fcc:	mov	sl, #1
   12fd0:	b	12ff0 <ftello64@plt+0x1920>
   12fd4:	ldr	r2, [sp, #12]
   12fd8:	mov	r0, r7
   12fdc:	bl	12f4c <ftello64@plt+0x187c>
   12fe0:	add	r4, r5, #1
   12fe4:	ldrb	r3, [r4]
   12fe8:	cmp	r3, #0
   12fec:	beq	13090 <ftello64@plt+0x19c0>
   12ff0:	mov	r1, r8
   12ff4:	mov	r0, r4
   12ff8:	bl	11550 <strchr@plt>
   12ffc:	subs	r5, r0, #0
   13000:	beq	13050 <ftello64@plt+0x1980>
   13004:	sub	r6, r5, r4
   13008:	mov	r1, r6
   1300c:	add	r2, sp, #12
   13010:	mov	r0, r4
   13014:	bl	11c8c <ftello64@plt+0x5bc>
   13018:	subs	r1, r0, #0
   1301c:	bne	12fd4 <ftello64@plt+0x1904>
   13020:	mov	r2, fp
   13024:	mov	r1, r9
   13028:	mov	r0, sl
   1302c:	str	r4, [sp, #4]
   13030:	str	r6, [sp]
   13034:	mov	r3, r6
   13038:	bl	114a8 <error@plt>
   1303c:	ldr	r2, [sp, #12]
   13040:	mov	r1, r9
   13044:	mov	r0, r7
   13048:	bl	12f4c <ftello64@plt+0x187c>
   1304c:	b	12fe0 <ftello64@plt+0x1910>
   13050:	mov	r0, r4
   13054:	bl	11544 <strlen@plt>
   13058:	add	r2, sp, #12
   1305c:	mov	r1, r0
   13060:	mov	r5, r0
   13064:	mov	r0, r4
   13068:	bl	11c8c <ftello64@plt+0x5bc>
   1306c:	subs	r1, r0, #0
   13070:	beq	13098 <ftello64@plt+0x19c8>
   13074:	add	r4, r4, r5
   13078:	ldr	r2, [sp, #12]
   1307c:	mov	r0, r7
   13080:	bl	12f4c <ftello64@plt+0x187c>
   13084:	ldrb	r3, [r4]
   13088:	cmp	r3, #0
   1308c:	bne	12ff0 <ftello64@plt+0x1920>
   13090:	add	sp, sp, #20
   13094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13098:	str	r4, [sp, #4]
   1309c:	mov	r2, fp
   130a0:	mov	r1, r9
   130a4:	mov	r0, sl
   130a8:	str	r5, [sp]
   130ac:	mov	r3, r5
   130b0:	bl	114a8 <error@plt>
   130b4:	ldr	r2, [sp, #12]
   130b8:	mov	r1, r9
   130bc:	mov	r0, r7
   130c0:	add	r4, r4, r5
   130c4:	bl	12f4c <ftello64@plt+0x187c>
   130c8:	b	12fe4 <ftello64@plt+0x1914>
   130cc:	andeq	lr, r1, r0, lsr r7
   130d0:	push	{r4, lr}
   130d4:	mov	r4, r0
   130d8:	bl	12bbc <ftello64@plt+0x14ec>
   130dc:	mov	r0, r4
   130e0:	mov	r2, #0
   130e4:	mov	r1, #16
   130e8:	pop	{r4, lr}
   130ec:	b	12f4c <ftello64@plt+0x187c>
   130f0:	push	{r4, r5, r6, lr}
   130f4:	subs	r5, r0, #0
   130f8:	beq	1315c <ftello64@plt+0x1a8c>
   130fc:	ldr	r4, [pc, #112]	; 13174 <ftello64@plt+0x1aa4>
   13100:	ldr	r1, [r4]
   13104:	cmp	r1, #0
   13108:	bne	1311c <ftello64@plt+0x1a4c>
   1310c:	b	1312c <ftello64@plt+0x1a5c>
   13110:	ldr	r1, [r4, #12]!
   13114:	cmp	r1, #0
   13118:	beq	1312c <ftello64@plt+0x1a5c>
   1311c:	mov	r0, r5
   13120:	bl	113a0 <strcmp@plt>
   13124:	cmp	r0, #0
   13128:	bne	13110 <ftello64@plt+0x1a40>
   1312c:	ldr	r1, [r4, #8]
   13130:	cmp	r1, #0
   13134:	beq	13144 <ftello64@plt+0x1a74>
   13138:	ldr	r3, [pc, #56]	; 13178 <ftello64@plt+0x1aa8>
   1313c:	str	r1, [r3]
   13140:	pop	{r4, r5, r6, pc}
   13144:	mov	r3, r5
   13148:	ldr	r2, [pc, #44]	; 1317c <ftello64@plt+0x1aac>
   1314c:	mov	r0, #1
   13150:	bl	114a8 <error@plt>
   13154:	ldr	r1, [r4, #8]
   13158:	b	13138 <ftello64@plt+0x1a68>
   1315c:	ldr	r2, [pc, #28]	; 13180 <ftello64@plt+0x1ab0>
   13160:	ldr	r3, [pc, #28]	; 13184 <ftello64@plt+0x1ab4>
   13164:	ldr	r5, [r2]
   13168:	cmp	r5, #0
   1316c:	moveq	r5, r3
   13170:	b	130fc <ftello64@plt+0x1a2c>
   13174:			; <UNDEFINED> instruction: 0x000322b4
   13178:	strdeq	r2, [r3], -r4
   1317c:	andeq	lr, r1, ip, asr #14
   13180:	strdeq	r2, [r3], -r8
   13184:	andeq	lr, r1, r4, asr #14
   13188:	push	{r4, r5, r6, r7, r8, r9, lr}
   1318c:	sub	sp, sp, #20
   13190:	mov	r3, #0
   13194:	ldr	r1, [pc, #440]	; 13354 <ftello64@plt+0x1c84>
   13198:	str	r3, [sp, #8]
   1319c:	str	r3, [sp, #12]
   131a0:	mov	r4, r0
   131a4:	bl	1164c <fopen64@plt>
   131a8:	subs	r7, r0, #0
   131ac:	beq	13338 <ftello64@plt+0x1c68>
   131b0:	ldr	r3, [pc, #416]	; 13358 <ftello64@plt+0x1c88>
   131b4:	ldr	r6, [pc, #416]	; 1335c <ftello64@plt+0x1c8c>
   131b8:	mov	r2, #0
   131bc:	str	r3, [sp]
   131c0:	mov	r1, r2
   131c4:	ldr	r3, [pc, #404]	; 13360 <ftello64@plt+0x1c90>
   131c8:	add	r0, r6, #12
   131cc:	bl	18530 <_obstack_begin@@Base>
   131d0:	add	r9, r6, #12
   131d4:	mov	r8, #10
   131d8:	mov	r3, r7
   131dc:	mov	r2, r8
   131e0:	add	r1, sp, #12
   131e4:	add	r0, sp, #8
   131e8:	bl	11388 <__getdelim@plt>
   131ec:	cmp	r0, #0
   131f0:	ble	13284 <ftello64@plt+0x1bb4>
   131f4:	ldr	r4, [sp, #8]
   131f8:	mov	r0, r4
   131fc:	bl	11544 <strlen@plt>
   13200:	subs	r5, r0, #0
   13204:	beq	131d8 <ftello64@plt+0x1b08>
   13208:	sub	r3, r5, #1
   1320c:	ldrb	r2, [r4, r3]
   13210:	cmp	r2, #10
   13214:	beq	13274 <ftello64@plt+0x1ba4>
   13218:	add	r1, r4, r5
   1321c:	mov	r3, r4
   13220:	cmp	r3, r1
   13224:	beq	13244 <ftello64@plt+0x1b74>
   13228:	ldrb	r2, [r3], #1
   1322c:	cmp	r2, #32
   13230:	beq	13220 <ftello64@plt+0x1b50>
   13234:	cmp	r2, #35	; 0x23
   13238:	beq	131d8 <ftello64@plt+0x1b08>
   1323c:	cmp	r2, #9
   13240:	beq	13220 <ftello64@plt+0x1b50>
   13244:	ldr	r0, [r6, #24]
   13248:	ldr	r3, [r6, #28]
   1324c:	sub	r3, r3, r0
   13250:	cmp	r5, r3
   13254:	bhi	1330c <ftello64@plt+0x1c3c>
   13258:	mov	r2, r5
   1325c:	mov	r1, r4
   13260:	bl	1140c <memcpy@plt>
   13264:	ldr	r3, [r6, #24]
   13268:	add	r5, r3, r5
   1326c:	str	r5, [r6, #24]
   13270:	b	131d8 <ftello64@plt+0x1b08>
   13274:	cmp	r3, #0
   13278:	movne	r5, r3
   1327c:	beq	131d8 <ftello64@plt+0x1b08>
   13280:	b	13218 <ftello64@plt+0x1b48>
   13284:	ldr	r0, [sp, #8]
   13288:	bl	182f0 <argp_parse@@Base+0xe98>
   1328c:	mov	r0, r7
   13290:	bl	115c8 <fclose@plt>
   13294:	ldr	r3, [r6, #24]
   13298:	ldr	r2, [r6, #28]
   1329c:	cmp	r2, r3
   132a0:	beq	13324 <ftello64@plt+0x1c54>
   132a4:	mov	r2, #0
   132a8:	add	r1, r3, #1
   132ac:	str	r1, [r6, #24]
   132b0:	strb	r2, [r3]
   132b4:	ldr	r3, [r6, #24]
   132b8:	ldr	r0, [r6, #20]
   132bc:	ldr	ip, [r6, #36]	; 0x24
   132c0:	cmp	r0, r3
   132c4:	ldr	r1, [r6, #28]
   132c8:	ldrbeq	r2, [r6, #52]	; 0x34
   132cc:	add	r3, r3, ip
   132d0:	bic	r3, r3, ip
   132d4:	orreq	r2, r2, #2
   132d8:	strbeq	r2, [r6, #52]	; 0x34
   132dc:	ldr	r2, [r6, #16]
   132e0:	str	r3, [r6, #24]
   132e4:	sub	ip, r3, r2
   132e8:	sub	r2, r1, r2
   132ec:	cmp	ip, r2
   132f0:	ldr	r2, [pc, #108]	; 13364 <ftello64@plt+0x1c94>
   132f4:	movhi	r3, r1
   132f8:	strhi	r1, [r6, #24]
   132fc:	str	r3, [r6, #20]
   13300:	str	r0, [r2]
   13304:	add	sp, sp, #20
   13308:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1330c:	mov	r0, r9
   13310:	mov	r1, r5
   13314:	bl	18580 <_obstack_newchunk@@Base>
   13318:	ldr	r0, [r6, #24]
   1331c:	ldr	r4, [sp, #8]
   13320:	b	13258 <ftello64@plt+0x1b88>
   13324:	mov	r1, #1
   13328:	ldr	r0, [pc, #56]	; 13368 <ftello64@plt+0x1c98>
   1332c:	bl	18580 <_obstack_newchunk@@Base>
   13330:	ldr	r3, [r6, #24]
   13334:	b	132a4 <ftello64@plt+0x1bd4>
   13338:	bl	11568 <__errno_location@plt>
   1333c:	mov	r3, r4
   13340:	ldr	r2, [pc, #36]	; 1336c <ftello64@plt+0x1c9c>
   13344:	ldr	r1, [r0]
   13348:	mov	r0, #1
   1334c:	bl	114a8 <error@plt>
   13350:	b	131b0 <ftello64@plt+0x1ae0>
   13354:	andeq	lr, r1, r4, lsr #13
   13358:	strdeq	r8, [r1], -r0
   1335c:	andeq	r2, r3, r4, asr fp
   13360:	andeq	r9, r1, r0, lsr #10
   13364:	strdeq	r2, [r3], -r4
   13368:	andeq	r2, r3, r0, ror #22
   1336c:	andeq	lr, r1, r8, ror #14
   13370:	cmp	r0, #0
   13374:	bxeq	lr
   13378:	ldr	r3, [pc, #128]	; 13400 <ftello64@plt+0x1d30>
   1337c:	ldr	r2, [r3]
   13380:	cmp	r2, #0
   13384:	bne	133e4 <ftello64@plt+0x1d14>
   13388:	ldr	r2, [r0, #4]
   1338c:	cmp	r2, #0
   13390:	bne	133a8 <ftello64@plt+0x1cd8>
   13394:	ldr	r2, [pc, #104]	; 13404 <ftello64@plt+0x1d34>
   13398:	mov	r1, #2
   1339c:	str	r1, [r0, #4]
   133a0:	ldr	r2, [r2]
   133a4:	str	r2, [r0, #12]
   133a8:	ldr	r1, [r3, #8]
   133ac:	ldr	r2, [r3, #4]
   133b0:	orrs	ip, r1, r2
   133b4:	beq	133fc <ftello64@plt+0x1d2c>
   133b8:	push	{lr}		; (str lr, [sp, #-4]!)
   133bc:	ldr	ip, [r0, #48]	; 0x30
   133c0:	ldr	lr, [r0, #44]	; 0x2c
   133c4:	orr	r2, ip, r2
   133c8:	orr	r1, lr, r1
   133cc:	mov	ip, #0
   133d0:	str	r1, [r0, #44]	; 0x2c
   133d4:	str	r2, [r0, #48]	; 0x30
   133d8:	str	ip, [r3, #4]
   133dc:	str	ip, [r3, #8]
   133e0:	pop	{pc}		; (ldr pc, [sp], #4)
   133e4:	ldr	ip, [r0, #4]
   133e8:	mov	r1, #0
   133ec:	orr	r2, r2, ip
   133f0:	str	r2, [r0, #4]
   133f4:	str	r1, [r3]
   133f8:	b	1338c <ftello64@plt+0x1cbc>
   133fc:	bx	lr
   13400:	andeq	r2, r3, r4, asr fp
   13404:	strdeq	r2, [r3], -r4
   13408:	ldr	ip, [r2, #28]
   1340c:	cmp	r0, #108	; 0x6c
   13410:	push	{r4, lr}
   13414:	sub	sp, sp, #8
   13418:	ldr	r4, [ip]
   1341c:	beq	135f0 <ftello64@plt+0x1f20>
   13420:	mov	r3, r1
   13424:	ble	1346c <ftello64@plt+0x1d9c>
   13428:	cmp	r0, #256	; 0x100
   1342c:	beq	1351c <ftello64@plt+0x1e4c>
   13430:	ble	134c0 <ftello64@plt+0x1df0>
   13434:	ldr	r1, [pc, #572]	; 13678 <ftello64@plt+0x1fa8>
   13438:	cmp	r0, r1
   1343c:	beq	1352c <ftello64@plt+0x1e5c>
   13440:	blt	13644 <ftello64@plt+0x1f74>
   13444:	ldr	r3, [pc, #560]	; 1367c <ftello64@plt+0x1fac>
   13448:	cmp	r0, r3
   1344c:	beq	13608 <ftello64@plt+0x1f38>
   13450:	ldr	r3, [pc, #552]	; 13680 <ftello64@plt+0x1fb0>
   13454:	cmp	r0, r3
   13458:	bne	13514 <ftello64@plt+0x1e44>
   1345c:	ldr	r2, [r2, #32]
   13460:	mov	r3, #0
   13464:	str	ip, [r2]
   13468:	b	134f0 <ftello64@plt+0x1e20>
   1346c:	cmp	r0, #77	; 0x4d
   13470:	beq	135c0 <ftello64@plt+0x1ef0>
   13474:	ble	134fc <ftello64@plt+0x1e2c>
   13478:	cmp	r0, #98	; 0x62
   1347c:	beq	135ac <ftello64@plt+0x1edc>
   13480:	ble	13578 <ftello64@plt+0x1ea8>
   13484:	cmp	r0, #100	; 0x64
   13488:	beq	13554 <ftello64@plt+0x1e84>
   1348c:	cmp	r0, #105	; 0x69
   13490:	bne	13514 <ftello64@plt+0x1e44>
   13494:	mov	r0, r4
   13498:	stm	sp, {r2, r3}
   1349c:	bl	13370 <ftello64@plt+0x1ca0>
   134a0:	ldr	r3, [sp, #4]
   134a4:	mov	r0, r3
   134a8:	bl	12a00 <ftello64@plt+0x1330>
   134ac:	ldr	r2, [sp]
   134b0:	mov	r3, #0
   134b4:	ldr	r2, [r2, #28]
   134b8:	str	r0, [r2]
   134bc:	b	134f0 <ftello64@plt+0x1e20>
   134c0:	cmp	r0, #112	; 0x70
   134c4:	beq	13554 <ftello64@plt+0x1e84>
   134c8:	ble	13594 <ftello64@plt+0x1ec4>
   134cc:	cmp	r0, #115	; 0x73
   134d0:	beq	135d0 <ftello64@plt+0x1f00>
   134d4:	cmp	r0, #118	; 0x76
   134d8:	bne	13514 <ftello64@plt+0x1e44>
   134dc:	ldr	r1, [pc, #416]	; 13684 <ftello64@plt+0x1fb4>
   134e0:	mov	r3, #0
   134e4:	ldr	r2, [r1]
   134e8:	add	r2, r2, #1
   134ec:	str	r2, [r1]
   134f0:	mov	r0, r3
   134f4:	add	sp, sp, #8
   134f8:	pop	{r4, pc}
   134fc:	cmp	r0, #66	; 0x42
   13500:	beq	135ac <ftello64@plt+0x1edc>
   13504:	cmp	r0, #70	; 0x46
   13508:	beq	135e0 <ftello64@plt+0x1f10>
   1350c:	cmp	r0, #65	; 0x41
   13510:	beq	13544 <ftello64@plt+0x1e74>
   13514:	mov	r3, #7
   13518:	b	134f0 <ftello64@plt+0x1e20>
   1351c:	mov	r0, r4
   13520:	bl	12dfc <ftello64@plt+0x172c>
   13524:	mov	r3, #0
   13528:	b	134f0 <ftello64@plt+0x1e20>
   1352c:	mov	r0, r4
   13530:	mov	r2, #0
   13534:	mov	r1, #65	; 0x41
   13538:	bl	12f4c <ftello64@plt+0x187c>
   1353c:	mov	r3, #0
   13540:	b	134f0 <ftello64@plt+0x1e20>
   13544:	mov	r0, r4
   13548:	bl	12ac4 <ftello64@plt+0x13f4>
   1354c:	mov	r3, #0
   13550:	b	134f0 <ftello64@plt+0x1e20>
   13554:	mov	r1, r3
   13558:	mov	r0, r4
   1355c:	bl	12bbc <ftello64@plt+0x14ec>
   13560:	mov	r0, r4
   13564:	mov	r2, #0
   13568:	mov	r1, #16
   1356c:	bl	12f4c <ftello64@plt+0x187c>
   13570:	mov	r3, #0
   13574:	b	134f0 <ftello64@plt+0x1e20>
   13578:	cmp	r0, #97	; 0x61
   1357c:	bne	13514 <ftello64@plt+0x1e44>
   13580:	ldr	r2, [pc, #256]	; 13688 <ftello64@plt+0x1fb8>
   13584:	mov	r1, #1
   13588:	mov	r3, #0
   1358c:	str	r1, [r2]
   13590:	b	134f0 <ftello64@plt+0x1e20>
   13594:	cmp	r0, #109	; 0x6d
   13598:	bne	13514 <ftello64@plt+0x1e44>
   1359c:	mov	r0, r4
   135a0:	bl	12b40 <ftello64@plt+0x1470>
   135a4:	mov	r3, #0
   135a8:	b	134f0 <ftello64@plt+0x1e20>
   135ac:	mov	r1, r3
   135b0:	mov	r0, r4
   135b4:	bl	12c38 <ftello64@plt+0x1568>
   135b8:	mov	r3, #0
   135bc:	b	134f0 <ftello64@plt+0x1e20>
   135c0:	mov	r0, r4
   135c4:	bl	12d30 <ftello64@plt+0x1660>
   135c8:	mov	r3, #0
   135cc:	b	134f0 <ftello64@plt+0x1e20>
   135d0:	ldr	r0, [pc, #180]	; 1368c <ftello64@plt+0x1fbc>
   135d4:	bl	130f0 <ftello64@plt+0x1a20>
   135d8:	mov	r3, #0
   135dc:	b	134f0 <ftello64@plt+0x1e20>
   135e0:	mov	r0, r4
   135e4:	bl	12fa4 <ftello64@plt+0x18d4>
   135e8:	mov	r3, #0
   135ec:	b	134f0 <ftello64@plt+0x1e20>
   135f0:	ldr	r1, [pc, #152]	; 13690 <ftello64@plt+0x1fc0>
   135f4:	mov	r3, #0
   135f8:	ldr	r2, [r1]
   135fc:	add	r2, r2, #1
   13600:	str	r2, [r1]
   13604:	b	134f0 <ftello64@plt+0x1e20>
   13608:	cmp	r4, #0
   1360c:	ldreq	r3, [pc, #128]	; 13694 <ftello64@plt+0x1fc4>
   13610:	ldrne	r2, [r4, #4]
   13614:	ldrne	r3, [pc, #120]	; 13694 <ftello64@plt+0x1fc4>
   13618:	ldreq	r2, [r3]
   1361c:	orrne	r2, r2, #512	; 0x200
   13620:	orreq	r2, r2, #512	; 0x200
   13624:	streq	r2, [r3]
   13628:	strne	r2, [r4, #4]
   1362c:	ldmib	r3, {r1, r2}
   13630:	orr	r1, r1, #1
   13634:	bic	r2, r2, #1
   13638:	stmib	r3, {r1, r2}
   1363c:	mov	r3, #0
   13640:	b	134f0 <ftello64@plt+0x1e20>
   13644:	cmp	r3, #0
   13648:	beq	13658 <ftello64@plt+0x1f88>
   1364c:	ldrb	r2, [r3]
   13650:	cmp	r2, #64	; 0x40
   13654:	beq	13668 <ftello64@plt+0x1f98>
   13658:	mov	r0, r3
   1365c:	bl	130f0 <ftello64@plt+0x1a20>
   13660:	mov	r3, #0
   13664:	b	134f0 <ftello64@plt+0x1e20>
   13668:	add	r0, r3, #1
   1366c:	bl	13188 <ftello64@plt+0x1ab8>
   13670:	mov	r3, #0
   13674:	b	134f0 <ftello64@plt+0x1e20>
   13678:	andeq	r0, r0, r2, lsl #2
   1367c:	andeq	r0, r0, r3, lsl #2
   13680:	tsteq	r0, r3
   13684:	andeq	r2, r3, r0, lsl #24
   13688:	strdeq	r2, [r3], -r8
   1368c:	andeq	lr, r1, r4, lsl #15
   13690:	andeq	r2, r3, r4, lsl #24
   13694:	andeq	r2, r3, r4, asr fp
   13698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1369c:	sub	sp, sp, #20
   136a0:	ldr	r7, [pc, #480]	; 13888 <ftello64@plt+0x21b8>
   136a4:	add	r5, sp, #16
   136a8:	mov	r6, r0
   136ac:	ldr	r3, [r7]
   136b0:	mov	r0, #0
   136b4:	ldr	r4, [pc, #464]	; 1388c <ftello64@plt+0x21bc>
   136b8:	mov	r8, r1
   136bc:	str	r3, [r5, #-4]!
   136c0:	bl	130f0 <ftello64@plt+0x1a20>
   136c4:	ldr	r3, [pc, #452]	; 13890 <ftello64@plt+0x21c0>
   136c8:	ldr	r2, [pc, #452]	; 13894 <ftello64@plt+0x21c4>
   136cc:	add	r1, r4, #144	; 0x90
   136d0:	ldr	r0, [pc, #448]	; 13898 <ftello64@plt+0x21c8>
   136d4:	str	r2, [r3]
   136d8:	bl	1821c <argp_parse@@Base+0xdc4>
   136dc:	ldr	r3, [pc, #440]	; 1389c <ftello64@plt+0x21cc>
   136e0:	ldr	lr, [pc, #440]	; 138a0 <ftello64@plt+0x21d0>
   136e4:	ldr	ip, [pc, #440]	; 138a4 <ftello64@plt+0x21d4>
   136e8:	ldm	r3, {r0, r1, r2, r3}
   136ec:	add	r9, sp, #8
   136f0:	ldr	lr, [lr]
   136f4:	str	r5, [sp, #4]
   136f8:	stm	ip, {r0, r1, r2, r3}
   136fc:	mov	r1, r6
   13700:	str	r9, [sp]
   13704:	mov	r2, r8
   13708:	mov	r3, #8
   1370c:	str	lr, [r4, #160]	; 0xa0
   13710:	str	ip, [r4, #168]	; 0xa8
   13714:	add	r0, r4, #152	; 0x98
   13718:	bl	17458 <argp_parse@@Base>
   1371c:	ldr	r0, [sp, #12]
   13720:	bl	13370 <ftello64@plt+0x1ca0>
   13724:	ldr	r1, [sp, #8]
   13728:	cmp	r6, r1
   1372c:	bgt	13744 <ftello64@plt+0x2074>
   13730:	ldr	r3, [r7]
   13734:	cmp	r3, #0
   13738:	beq	13770 <ftello64@plt+0x20a0>
   1373c:	add	sp, sp, #20
   13740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13744:	add	r2, r8, r1, lsl #2
   13748:	mov	r0, r5
   1374c:	sub	r1, r6, r1
   13750:	bl	16a6c <ftello64@plt+0x539c>
   13754:	subs	r1, r0, #0
   13758:	beq	13864 <ftello64@plt+0x2194>
   1375c:	ldr	r0, [sp, #12]
   13760:	bl	13370 <ftello64@plt+0x1ca0>
   13764:	ldr	r3, [r7]
   13768:	cmp	r3, #0
   1376c:	bne	1373c <ftello64@plt+0x206c>
   13770:	ldr	r3, [pc, #304]	; 138a8 <ftello64@plt+0x21d8>
   13774:	ldr	r3, [r3]
   13778:	blx	r3
   1377c:	subs	r5, r0, #0
   13780:	beq	13874 <ftello64@plt+0x21a4>
   13784:	ldr	r8, [pc, #288]	; 138ac <ftello64@plt+0x21dc>
   13788:	add	r5, r5, #8
   1378c:	ldr	r6, [r7]
   13790:	ldr	sl, [r8]
   13794:	ldr	r9, [pc, #276]	; 138b0 <ftello64@plt+0x21e0>
   13798:	b	13808 <ftello64@plt+0x2138>
   1379c:	str	r3, [r8]
   137a0:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   137a4:	subs	r6, r0, #0
   137a8:	str	r0, [r7]
   137ac:	beq	13848 <ftello64@plt+0x2178>
   137b0:	ldr	sl, [r8]
   137b4:	ldr	lr, [pc, #248]	; 138b4 <ftello64@plt+0x21e4>
   137b8:	add	r5, r5, #8
   137bc:	rsb	r4, sl, sl, lsl #3
   137c0:	ldm	lr!, {r0, r1, r2, r3}
   137c4:	lsl	r4, r4, #3
   137c8:	sub	r4, r4, #56	; 0x38
   137cc:	add	fp, r6, r4
   137d0:	mov	ip, fp
   137d4:	stmia	ip!, {r0, r1, r2, r3}
   137d8:	ldm	lr!, {r0, r1, r2, r3}
   137dc:	stmia	ip!, {r0, r1, r2, r3}
   137e0:	ldm	lr!, {r0, r1, r2, r3}
   137e4:	stmia	ip!, {r0, r1, r2, r3}
   137e8:	ldm	lr, {r0, r1}
   137ec:	stm	ip, {r0, r1}
   137f0:	ldr	r3, [r5, #-12]
   137f4:	str	r3, [r6, r4]
   137f8:	mov	r3, #2
   137fc:	str	r3, [fp, #4]
   13800:	ldr	r3, [r9]
   13804:	str	r3, [fp, #12]
   13808:	add	r3, sl, #1
   1380c:	ldr	r2, [r5, #-8]
   13810:	rsb	r1, r3, r3, lsl #3
   13814:	cmp	r2, #0
   13818:	mov	r0, r6
   1381c:	lsl	r1, r1, #3
   13820:	bne	1379c <ftello64@plt+0x20cc>
   13824:	ldr	r2, [r5, #-4]
   13828:	cmp	r2, #0
   1382c:	bne	1379c <ftello64@plt+0x20cc>
   13830:	mov	r1, sl
   13834:	ldr	r3, [pc, #124]	; 138b8 <ftello64@plt+0x21e8>
   13838:	mov	r2, #56	; 0x38
   1383c:	bl	11658 <qsort@plt>
   13840:	add	sp, sp, #20
   13844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13848:	bl	11568 <__errno_location@plt>
   1384c:	ldr	r2, [pc, #104]	; 138bc <ftello64@plt+0x21ec>
   13850:	ldr	r1, [r0]
   13854:	mov	r0, #1
   13858:	bl	114a8 <error@plt>
   1385c:	ldr	r6, [r7]
   13860:	b	137b0 <ftello64@plt+0x20e0>
   13864:	ldr	r2, [pc, #84]	; 138c0 <ftello64@plt+0x21f0>
   13868:	mov	r0, #1
   1386c:	bl	114a8 <error@plt>
   13870:	b	1375c <ftello64@plt+0x208c>
   13874:	ldr	r2, [pc, #72]	; 138c4 <ftello64@plt+0x21f4>
   13878:	mov	r1, r5
   1387c:	mov	r0, #1
   13880:	bl	114a8 <error@plt>
   13884:	b	13784 <ftello64@plt+0x20b4>
   13888:	andeq	r2, r3, ip, ror #23
   1388c:			; <UNDEFINED> instruction: 0x000322b4
   13890:	andeq	r2, r3, r0, lsr #24
   13894:	andeq	lr, r1, ip, lsl #15
   13898:	andeq	lr, r1, r4, lsr #15
   1389c:	muleq	r3, r8, sl
   138a0:	strdeq	r2, [r3], -r4
   138a4:	andeq	r2, r3, ip, lsl #23
   138a8:	muleq	r3, r4, sl
   138ac:	strdeq	r2, [r3], -r0
   138b0:	strdeq	r2, [r3], -r4
   138b4:	andeq	lr, r1, r4, lsr #10
   138b8:	andeq	r2, r1, r8, ror r9
   138bc:	muleq	r1, r0, r5
   138c0:			; <UNDEFINED> instruction: 0x0001e7b0
   138c4:	andeq	lr, r1, r4, asr #15
   138c8:	bx	lr
   138cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138d0:	mov	r4, r1
   138d4:	mov	r5, r2
   138d8:	bl	11568 <__errno_location@plt>
   138dc:	mov	r2, #0
   138e0:	cmp	r4, #0
   138e4:	str	r2, [r0]
   138e8:	ble	13950 <ftello64@plt+0x2280>
   138ec:	ldr	r0, [r5]
   138f0:	mov	r1, r2
   138f4:	bl	113ac <strtol@plt>
   138f8:	subs	r4, r0, #0
   138fc:	ble	13950 <ftello64@plt+0x2280>
   13900:	ldr	r5, [pc, #116]	; 1397c <ftello64@plt+0x22ac>
   13904:	ldr	r2, [r5]
   13908:	ldr	r3, [r2]
   1390c:	cmp	r4, r3
   13910:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   13914:	ldr	r9, [pc, #100]	; 13980 <ftello64@plt+0x22b0>
   13918:	ldr	r8, [pc, #100]	; 13984 <ftello64@plt+0x22b4>
   1391c:	mov	r7, #32
   13920:	mov	r6, #1
   13924:	add	r3, r3, #1
   13928:	str	r3, [r2]
   1392c:	ldr	r1, [r9]
   13930:	mov	r0, r7
   13934:	bl	11628 <putc@plt>
   13938:	ldr	r2, [r5]
   1393c:	str	r6, [r8]
   13940:	ldr	r3, [r2]
   13944:	cmp	r3, r4
   13948:	blt	13924 <ftello64@plt+0x2254>
   1394c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13950:	ldr	r5, [pc, #36]	; 1397c <ftello64@plt+0x22ac>
   13954:	ldr	r2, [r5]
   13958:	ldr	r3, [r2]
   1395c:	cmp	r3, #0
   13960:	add	r4, r3, #7
   13964:	movge	r4, r3
   13968:	bic	r4, r4, #7
   1396c:	add	r4, r4, #8
   13970:	cmp	r4, r3
   13974:	bgt	13914 <ftello64@plt+0x2244>
   13978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1397c:	andeq	r2, r3, r8, lsl r5
   13980:	andeq	r2, r3, r4, lsl ip
   13984:	andeq	r2, r3, r8, lsl #24
   13988:	cmp	r1, #0
   1398c:	push	{r4, lr}
   13990:	movle	r0, #0
   13994:	ble	139ac <ftello64@plt+0x22dc>
   13998:	mov	r3, r2
   1399c:	mov	r2, #0
   139a0:	ldr	r0, [r3]
   139a4:	mov	r1, r2
   139a8:	bl	11538 <strtoul@plt>
   139ac:	bl	1152c <exit@plt>
   139b0:	push	{r4, r5, r6, lr}
   139b4:	mov	r4, r0
   139b8:	ldr	r0, [r0]
   139bc:	bl	11694 <if_nametoindex@plt>
   139c0:	subs	r5, r0, #0
   139c4:	bne	139e0 <ftello64@plt+0x2310>
   139c8:	bl	11568 <__errno_location@plt>
   139cc:	ldr	r3, [r4]
   139d0:	ldr	r2, [pc, #56]	; 13a10 <ftello64@plt+0x2340>
   139d4:	ldr	r1, [r0]
   139d8:	mov	r0, #1
   139dc:	bl	114a8 <error@plt>
   139e0:	mov	r1, r5
   139e4:	ldr	r0, [pc, #40]	; 13a14 <ftello64@plt+0x2344>
   139e8:	bl	113b8 <printf@plt>
   139ec:	ldr	r3, [pc, #36]	; 13a18 <ftello64@plt+0x2348>
   139f0:	ldr	r1, [pc, #36]	; 13a1c <ftello64@plt+0x234c>
   139f4:	mov	ip, #1
   139f8:	ldr	r2, [r3]
   139fc:	ldr	r3, [r2]
   13a00:	add	r0, r3, r0
   13a04:	str	r0, [r2]
   13a08:	str	ip, [r1]
   13a0c:	pop	{r4, r5, r6, pc}
   13a10:	andeq	pc, r1, r0, asr #23
   13a14:	andeq	pc, r1, ip, ror #23
   13a18:	andeq	r2, r3, r8, lsl r5
   13a1c:	andeq	r2, r3, r8, lsl #24
   13a20:	cmp	r1, #9
   13a24:	push	{r4, lr}
   13a28:	ldr	r3, [pc, #108]	; 13a9c <ftello64@plt+0x23cc>
   13a2c:	beq	13a78 <ftello64@plt+0x23a8>
   13a30:	cmp	r1, #10
   13a34:	beq	13a68 <ftello64@plt+0x2398>
   13a38:	ldr	r2, [r3]
   13a3c:	ldr	r3, [r2]
   13a40:	add	r3, r3, #1
   13a44:	str	r3, [r2]
   13a48:	ldr	r3, [pc, #80]	; 13aa0 <ftello64@plt+0x23d0>
   13a4c:	mov	r0, r1
   13a50:	ldr	r1, [r3]
   13a54:	bl	11628 <putc@plt>
   13a58:	ldr	r3, [pc, #68]	; 13aa4 <ftello64@plt+0x23d4>
   13a5c:	mov	r2, #1
   13a60:	str	r2, [r3]
   13a64:	pop	{r4, pc}
   13a68:	ldr	r3, [r3]
   13a6c:	mov	r2, #0
   13a70:	str	r2, [r3]
   13a74:	b	13a48 <ftello64@plt+0x2378>
   13a78:	ldr	r2, [r3]
   13a7c:	ldr	r3, [r2]
   13a80:	add	r0, r3, #7
   13a84:	cmp	r3, #0
   13a88:	movlt	r3, r0
   13a8c:	bic	r3, r3, #7
   13a90:	add	r3, r3, #8
   13a94:	str	r3, [r2]
   13a98:	b	13a48 <ftello64@plt+0x2378>
   13a9c:	andeq	r2, r3, r8, lsl r5
   13aa0:	andeq	r2, r3, r4, lsl ip
   13aa4:	andeq	r2, r3, r8, lsl #24
   13aa8:	mov	r1, #10
   13aac:	b	13a20 <ftello64@plt+0x2350>
   13ab0:	mov	r1, #9
   13ab4:	b	13a20 <ftello64@plt+0x2350>
   13ab8:	cmp	r1, #0
   13abc:	push	{r4, r5, r6, lr}
   13ac0:	mov	r5, r0
   13ac4:	ldreq	r4, [r0]
   13ac8:	ldrne	r4, [r2]
   13acc:	mov	r0, r4
   13ad0:	bl	129a8 <ftello64@plt+0x12d8>
   13ad4:	subs	r6, r0, #0
   13ad8:	beq	13b04 <ftello64@plt+0x2434>
   13adc:	ldr	r4, [r6, #4]
   13ae0:	ldrb	r1, [r4]
   13ae4:	cmp	r1, #0
   13ae8:	popeq	{r4, r5, r6, pc}
   13aec:	mov	r0, r5
   13af0:	bl	13a20 <ftello64@plt+0x2350>
   13af4:	ldrb	r1, [r4, #1]!
   13af8:	cmp	r1, #0
   13afc:	bne	13aec <ftello64@plt+0x241c>
   13b00:	pop	{r4, r5, r6, pc}
   13b04:	bl	11568 <__errno_location@plt>
   13b08:	mov	r3, r4
   13b0c:	ldr	r2, [pc, #12]	; 13b20 <ftello64@plt+0x2450>
   13b10:	ldr	r1, [r0]
   13b14:	mov	r0, #1
   13b18:	bl	114a8 <error@plt>
   13b1c:	b	13adc <ftello64@plt+0x240c>
   13b20:	strdeq	pc, [r1], -r0
   13b24:	cmp	r1, #0
   13b28:	push	{r4, r5, r6, lr}
   13b2c:	mov	r5, r0
   13b30:	ldreq	r4, [r0]
   13b34:	ldrne	r4, [r2]
   13b38:	mov	r0, r4
   13b3c:	bl	129a8 <ftello64@plt+0x12d8>
   13b40:	subs	r6, r0, #0
   13b44:	beq	13b70 <ftello64@plt+0x24a0>
   13b48:	ldr	r4, [r6, #8]
   13b4c:	ldrb	r1, [r4]
   13b50:	cmp	r1, #0
   13b54:	popeq	{r4, r5, r6, pc}
   13b58:	mov	r0, r5
   13b5c:	bl	13a20 <ftello64@plt+0x2350>
   13b60:	ldrb	r1, [r4, #1]!
   13b64:	cmp	r1, #0
   13b68:	bne	13b58 <ftello64@plt+0x2488>
   13b6c:	pop	{r4, r5, r6, pc}
   13b70:	bl	11568 <__errno_location@plt>
   13b74:	mov	r3, r4
   13b78:	ldr	r2, [pc, #12]	; 13b8c <ftello64@plt+0x24bc>
   13b7c:	ldr	r1, [r0]
   13b80:	mov	r0, #1
   13b84:	bl	114a8 <error@plt>
   13b88:	b	13b48 <ftello64@plt+0x2478>
   13b8c:	strdeq	pc, [r1], -r0
   13b90:	ldr	r3, [pc, #44]	; 13bc4 <ftello64@plt+0x24f4>
   13b94:	push	{r4, r5, r6, lr}
   13b98:	ldr	r4, [r3]
   13b9c:	ldrb	r1, [r4]
   13ba0:	cmp	r1, #0
   13ba4:	popeq	{r4, r5, r6, pc}
   13ba8:	mov	r5, r0
   13bac:	mov	r0, r5
   13bb0:	bl	13a20 <ftello64@plt+0x2350>
   13bb4:	ldrb	r1, [r4, #1]!
   13bb8:	cmp	r1, #0
   13bbc:	bne	13bac <ftello64@plt+0x24dc>
   13bc0:	pop	{r4, r5, r6, pc}
   13bc4:	andeq	r2, r3, r4, asr #23
   13bc8:	push	{r4, r5, r6, lr}
   13bcc:	ldr	r4, [r0]
   13bd0:	ldrb	r1, [r4]
   13bd4:	cmp	r1, #0
   13bd8:	popeq	{r4, r5, r6, pc}
   13bdc:	mov	r5, r0
   13be0:	mov	r0, r5
   13be4:	bl	13a20 <ftello64@plt+0x2350>
   13be8:	ldrb	r1, [r4, #1]!
   13bec:	cmp	r1, #0
   13bf0:	bne	13be0 <ftello64@plt+0x2510>
   13bf4:	pop	{r4, r5, r6, pc}
   13bf8:	push	{r4, r5, r6, lr}
   13bfc:	mov	r1, #40	; 0x28
   13c00:	ldr	r4, [pc, #24]	; 13c20 <ftello64@plt+0x2550>
   13c04:	mov	r5, r0
   13c08:	mov	r0, r5
   13c0c:	bl	13a20 <ftello64@plt+0x2350>
   13c10:	ldrb	r1, [r4, #1]!
   13c14:	cmp	r1, #0
   13c18:	bne	13c08 <ftello64@plt+0x2538>
   13c1c:	pop	{r4, r5, r6, pc}
   13c20:	andeq	pc, r1, r8, lsl #24
   13c24:	b	13bf8 <ftello64@plt+0x2528>
   13c28:	push	{r4, r5, r6, lr}
   13c2c:	mov	r4, r1
   13c30:	ldrb	r1, [r1]
   13c34:	cmp	r1, #0
   13c38:	popeq	{r4, r5, r6, pc}
   13c3c:	mov	r5, r0
   13c40:	mov	r0, r5
   13c44:	bl	13a20 <ftello64@plt+0x2350>
   13c48:	ldrb	r1, [r4, #1]!
   13c4c:	cmp	r1, #0
   13c50:	bne	13c40 <ftello64@plt+0x2570>
   13c54:	pop	{r4, r5, r6, pc}
   13c58:	cmp	r1, #0
   13c5c:	push	{r4, r5, r6, r7, r8, lr}
   13c60:	mov	r7, r3
   13c64:	ble	13c7c <ftello64@plt+0x25ac>
   13c68:	ldr	r4, [r2]
   13c6c:	mov	r6, r2
   13c70:	ldrb	r3, [r4]
   13c74:	cmp	r3, #37	; 0x25
   13c78:	beq	13cac <ftello64@plt+0x25dc>
   13c7c:	ldr	r0, [pc, #392]	; 13e0c <ftello64@plt+0x273c>
   13c80:	mov	r1, r7
   13c84:	bl	113b8 <printf@plt>
   13c88:	ldr	r3, [pc, #384]	; 13e10 <ftello64@plt+0x2740>
   13c8c:	ldr	r1, [pc, #384]	; 13e14 <ftello64@plt+0x2744>
   13c90:	mov	ip, #1
   13c94:	ldr	r2, [r3]
   13c98:	ldr	r3, [r2]
   13c9c:	add	r0, r3, r0
   13ca0:	str	r0, [r2]
   13ca4:	str	ip, [r1]
   13ca8:	pop	{r4, r5, r6, r7, r8, pc}
   13cac:	ldrb	r5, [r4, #1]
   13cb0:	cmp	r5, #35	; 0x23
   13cb4:	addne	r4, r4, #1
   13cb8:	ldrbeq	r5, [r4, #2]
   13cbc:	addeq	r4, r4, #2
   13cc0:	bl	11520 <__ctype_b_loc@plt>
   13cc4:	ldr	ip, [r0]
   13cc8:	b	13cd0 <ftello64@plt+0x2600>
   13ccc:	ldrb	r5, [r4, #1]!
   13cd0:	lsl	r0, r5, #1
   13cd4:	ldrh	r0, [ip, r0]
   13cd8:	tst	r0, #2048	; 0x800
   13cdc:	bne	13ccc <ftello64@plt+0x25fc>
   13ce0:	and	r3, r5, #223	; 0xdf
   13ce4:	cmp	r3, #72	; 0x48
   13ce8:	bne	13cfc <ftello64@plt+0x262c>
   13cec:	ldrb	r3, [r4, #1]
   13cf0:	cmp	r3, #0
   13cf4:	addne	r4, r4, #1
   13cf8:	movne	r5, r3
   13cfc:	sub	r5, r5, #72	; 0x48
   13d00:	cmp	r5, #48	; 0x30
   13d04:	ldrls	pc, [pc, r5, lsl #2]
   13d08:	b	13e00 <ftello64@plt+0x2730>
   13d0c:	strdeq	r3, [r1], -r4
   13d10:	andeq	r3, r1, r0, lsl #28
   13d14:	andeq	r3, r1, r0, lsl #28
   13d18:	andeq	r3, r1, r0, lsl #28
   13d1c:	andeq	r3, r1, r0, lsl #28
   13d20:	andeq	r3, r1, r0, lsl #28
   13d24:	andeq	r3, r1, r0, lsl #28
   13d28:	andeq	r3, r1, r8, ror #27
   13d2c:	andeq	r3, r1, r0, lsl #28
   13d30:	andeq	r3, r1, r0, lsl #28
   13d34:	andeq	r3, r1, r0, lsl #28
   13d38:	andeq	r3, r1, r0, lsl #28
   13d3c:	andeq	r3, r1, r0, lsl #28
   13d40:	andeq	r3, r1, r0, lsl #28
   13d44:	andeq	r3, r1, r0, lsl #28
   13d48:	andeq	r3, r1, r0, lsl #28
   13d4c:	strdeq	r3, [r1], -r4
   13d50:	andeq	r3, r1, r0, lsl #28
   13d54:	andeq	r3, r1, r0, lsl #28
   13d58:	andeq	r3, r1, r0, lsl #28
   13d5c:	andeq	r3, r1, r0, lsl #28
   13d60:	andeq	r3, r1, r0, lsl #28
   13d64:	andeq	r3, r1, r0, lsl #28
   13d68:	andeq	r3, r1, r0, lsl #28
   13d6c:	andeq	r3, r1, r0, lsl #28
   13d70:	andeq	r3, r1, r0, lsl #28
   13d74:	andeq	r3, r1, r0, lsl #28
   13d78:	andeq	r3, r1, r0, lsl #28
   13d7c:	andeq	r3, r1, r0, lsl #28
   13d80:	andeq	r3, r1, r0, lsl #28
   13d84:	andeq	r3, r1, r0, lsl #28
   13d88:	andeq	r3, r1, r0, lsl #28
   13d8c:	ldrdeq	r3, [r1], -r0
   13d90:	andeq	r3, r1, r0, lsl #28
   13d94:	andeq	r3, r1, r0, lsl #28
   13d98:	andeq	r3, r1, r0, lsl #28
   13d9c:	andeq	r3, r1, r0, lsl #28
   13da0:	andeq	r3, r1, r0, lsl #28
   13da4:	andeq	r3, r1, r0, lsl #28
   13da8:	andeq	r3, r1, r8, ror #27
   13dac:	andeq	r3, r1, r0, lsl #28
   13db0:	andeq	r3, r1, r0, lsl #28
   13db4:	andeq	r3, r1, r0, lsl #28
   13db8:	andeq	r3, r1, r0, lsl #28
   13dbc:	andeq	r3, r1, r0, lsl #28
   13dc0:	andeq	r3, r1, r0, lsl #28
   13dc4:	andeq	r3, r1, r0, lsl #28
   13dc8:	andeq	r3, r1, r0, lsl #28
   13dcc:	ldrdeq	r3, [r1], -r0
   13dd0:	mov	r3, #120	; 0x78
   13dd4:	strb	r3, [r4]
   13dd8:	mov	r3, #0
   13ddc:	strb	r3, [r4, #1]
   13de0:	ldr	r0, [r6]
   13de4:	b	13c80 <ftello64@plt+0x25b0>
   13de8:	mov	r3, #111	; 0x6f
   13dec:	strb	r3, [r4]
   13df0:	b	13dd8 <ftello64@plt+0x2708>
   13df4:	mov	r3, #88	; 0x58
   13df8:	strb	r3, [r4]
   13dfc:	b	13dd8 <ftello64@plt+0x2708>
   13e00:	mov	r3, #105	; 0x69
   13e04:	strb	r3, [r4]
   13e08:	b	13dd8 <ftello64@plt+0x2708>
   13e0c:	andeq	pc, r1, ip, ror #23
   13e10:	andeq	r2, r3, r8, lsl r5
   13e14:	andeq	r2, r3, r8, lsl #24
   13e18:	push	{r4, r5, r6, lr}
   13e1c:	mov	r4, r0
   13e20:	mov	r5, r1
   13e24:	mov	r6, r2
   13e28:	ldr	r0, [r0, #8]
   13e2c:	ldr	r2, [r4, #4]
   13e30:	ldr	r1, [pc, #64]	; 13e78 <ftello64@plt+0x27a8>
   13e34:	bl	183f8 <argp_parse@@Base+0xfa0>
   13e38:	cmp	r0, #0
   13e3c:	blt	13e5c <ftello64@plt+0x278c>
   13e40:	ldr	r3, [r4, #4]
   13e44:	mov	r2, r6
   13e48:	mov	r1, r5
   13e4c:	mov	r0, r4
   13e50:	ldr	r3, [r3, #16]
   13e54:	pop	{r4, r5, r6, lr}
   13e58:	b	13c58 <ftello64@plt+0x2588>
   13e5c:	bl	11568 <__errno_location@plt>
   13e60:	ldr	r3, [r4, #4]
   13e64:	ldr	r2, [pc, #16]	; 13e7c <ftello64@plt+0x27ac>
   13e68:	pop	{r4, r5, r6, lr}
   13e6c:	ldr	r1, [r0]
   13e70:	mov	r0, #1
   13e74:	b	114a8 <error@plt>
   13e78:	andeq	r8, r0, r1, lsr #18
   13e7c:	andeq	pc, r1, r4, lsl ip	; <UNPREDICTABLE>
   13e80:	push	{r4, r5, r6, lr}
   13e84:	mov	r4, r0
   13e88:	mov	r5, r1
   13e8c:	mov	r6, r2
   13e90:	ldr	r0, [r0, #8]
   13e94:	ldr	r2, [r4, #4]
   13e98:	ldr	r1, [pc, #64]	; 13ee0 <ftello64@plt+0x2810>
   13e9c:	bl	183f8 <argp_parse@@Base+0xfa0>
   13ea0:	cmp	r0, #0
   13ea4:	blt	13ec4 <ftello64@plt+0x27f4>
   13ea8:	ldr	r3, [r4, #4]
   13eac:	mov	r2, r6
   13eb0:	mov	r1, r5
   13eb4:	mov	r0, r4
   13eb8:	ldr	r3, [r3, #16]
   13ebc:	pop	{r4, r5, r6, lr}
   13ec0:	b	13c58 <ftello64@plt+0x2588>
   13ec4:	bl	11568 <__errno_location@plt>
   13ec8:	ldr	r3, [r4, #4]
   13ecc:	ldr	r2, [pc, #16]	; 13ee4 <ftello64@plt+0x2814>
   13ed0:	pop	{r4, r5, r6, lr}
   13ed4:	ldr	r1, [r0]
   13ed8:	mov	r0, #1
   13edc:	b	114a8 <error@plt>
   13ee0:	andeq	r8, r0, sp, lsl r9
   13ee4:	andeq	pc, r1, ip, lsr ip	; <UNPREDICTABLE>
   13ee8:	ldr	r3, [r0, #4]
   13eec:	ldrb	r3, [r3, #26]
   13ef0:	b	13c58 <ftello64@plt+0x2588>
   13ef4:	ldr	r3, [r0, #4]
   13ef8:	ldrh	r3, [r3, #24]
   13efc:	cmp	r3, #255	; 0xff
   13f00:	bhi	13f2c <ftello64@plt+0x285c>
   13f04:	push	{r4, r5, r6, lr}
   13f08:	mov	r1, #40	; 0x28
   13f0c:	ldr	r4, [pc, #28]	; 13f30 <ftello64@plt+0x2860>
   13f10:	mov	r5, r0
   13f14:	mov	r0, r5
   13f18:	bl	13a20 <ftello64@plt+0x2350>
   13f1c:	ldrb	r1, [r4, #1]!
   13f20:	cmp	r1, #0
   13f24:	bne	13f14 <ftello64@plt+0x2844>
   13f28:	pop	{r4, r5, r6, pc}
   13f2c:	b	13c58 <ftello64@plt+0x2588>
   13f30:	andeq	pc, r1, r4, ror #24
   13f34:	ldr	r3, [r0, #4]
   13f38:	ldrb	r3, [r3, #27]
   13f3c:	cmp	r3, #0
   13f40:	bne	13f6c <ftello64@plt+0x289c>
   13f44:	push	{r4, r5, r6, lr}
   13f48:	mov	r1, #40	; 0x28
   13f4c:	ldr	r4, [pc, #28]	; 13f70 <ftello64@plt+0x28a0>
   13f50:	mov	r5, r0
   13f54:	mov	r0, r5
   13f58:	bl	13a20 <ftello64@plt+0x2350>
   13f5c:	ldrb	r1, [r4, #1]!
   13f60:	cmp	r1, #0
   13f64:	bne	13f54 <ftello64@plt+0x2884>
   13f68:	pop	{r4, r5, r6, pc}
   13f6c:	b	13c58 <ftello64@plt+0x2588>
   13f70:	andeq	pc, r1, r4, ror #24
   13f74:	cmp	r1, #0
   13f78:	push	{r4, r5, r6, r7, r8, lr}
   13f7c:	mov	r7, r3
   13f80:	ble	13f98 <ftello64@plt+0x28c8>
   13f84:	ldr	r4, [r2]
   13f88:	mov	r6, r2
   13f8c:	ldrb	r3, [r4]
   13f90:	cmp	r3, #37	; 0x25
   13f94:	beq	13fc8 <ftello64@plt+0x28f8>
   13f98:	ldr	r0, [pc, #376]	; 14118 <ftello64@plt+0x2a48>
   13f9c:	mov	r1, r7
   13fa0:	bl	113b8 <printf@plt>
   13fa4:	ldr	r3, [pc, #368]	; 1411c <ftello64@plt+0x2a4c>
   13fa8:	ldr	r1, [pc, #368]	; 14120 <ftello64@plt+0x2a50>
   13fac:	mov	ip, #1
   13fb0:	ldr	r2, [r3]
   13fb4:	ldr	r3, [r2]
   13fb8:	add	r0, r3, r0
   13fbc:	str	r0, [r2]
   13fc0:	str	ip, [r1]
   13fc4:	pop	{r4, r5, r6, r7, r8, pc}
   13fc8:	bl	11520 <__ctype_b_loc@plt>
   13fcc:	add	ip, r4, #1
   13fd0:	ldr	r5, [r0]
   13fd4:	ldrb	r0, [ip]
   13fd8:	mov	lr, ip
   13fdc:	add	ip, ip, #1
   13fe0:	lsl	r4, r0, #1
   13fe4:	ldrh	r4, [r5, r4]
   13fe8:	tst	r4, #2048	; 0x800
   13fec:	bne	13fd4 <ftello64@plt+0x2904>
   13ff0:	cmp	r0, #35	; 0x23
   13ff4:	ldrbeq	r0, [lr, #1]
   13ff8:	moveq	lr, ip
   13ffc:	cmp	r0, #108	; 0x6c
   14000:	ldrbeq	r0, [lr, #1]
   14004:	addeq	lr, lr, #1
   14008:	sub	r0, r0, #72	; 0x48
   1400c:	cmp	r0, #48	; 0x30
   14010:	ldrls	pc, [pc, r0, lsl #2]
   14014:	b	1410c <ftello64@plt+0x2a3c>
   14018:	andeq	r4, r1, r0, lsl #2
   1401c:	andeq	r4, r1, ip, lsl #2
   14020:	andeq	r4, r1, ip, lsl #2
   14024:	andeq	r4, r1, ip, lsl #2
   14028:	andeq	r4, r1, ip, lsl #2
   1402c:	andeq	r4, r1, ip, lsl #2
   14030:	andeq	r4, r1, ip, lsl #2
   14034:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14038:	andeq	r4, r1, ip, lsl #2
   1403c:	andeq	r4, r1, ip, lsl #2
   14040:	andeq	r4, r1, ip, lsl #2
   14044:	andeq	r4, r1, ip, lsl #2
   14048:	andeq	r4, r1, ip, lsl #2
   1404c:	andeq	r4, r1, ip, lsl #2
   14050:	andeq	r4, r1, ip, lsl #2
   14054:	andeq	r4, r1, ip, lsl #2
   14058:	andeq	r4, r1, r0, lsl #2
   1405c:	andeq	r4, r1, ip, lsl #2
   14060:	andeq	r4, r1, ip, lsl #2
   14064:	andeq	r4, r1, ip, lsl #2
   14068:	andeq	r4, r1, ip, lsl #2
   1406c:	andeq	r4, r1, ip, lsl #2
   14070:	andeq	r4, r1, ip, lsl #2
   14074:	andeq	r4, r1, ip, lsl #2
   14078:	andeq	r4, r1, ip, lsl #2
   1407c:	andeq	r4, r1, ip, lsl #2
   14080:	andeq	r4, r1, ip, lsl #2
   14084:	andeq	r4, r1, ip, lsl #2
   14088:	andeq	r4, r1, ip, lsl #2
   1408c:	andeq	r4, r1, ip, lsl #2
   14090:	andeq	r4, r1, ip, lsl #2
   14094:	andeq	r4, r1, ip, lsl #2
   14098:	ldrdeq	r4, [r1], -ip
   1409c:	andeq	r4, r1, ip, lsl #2
   140a0:	andeq	r4, r1, ip, lsl #2
   140a4:	andeq	r4, r1, ip, lsl #2
   140a8:	andeq	r4, r1, ip, lsl #2
   140ac:	andeq	r4, r1, ip, lsl #2
   140b0:	andeq	r4, r1, ip, lsl #2
   140b4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140b8:	andeq	r4, r1, ip, lsl #2
   140bc:	andeq	r4, r1, ip, lsl #2
   140c0:	andeq	r4, r1, ip, lsl #2
   140c4:	andeq	r4, r1, ip, lsl #2
   140c8:	andeq	r4, r1, ip, lsl #2
   140cc:	andeq	r4, r1, ip, lsl #2
   140d0:	andeq	r4, r1, ip, lsl #2
   140d4:	andeq	r4, r1, ip, lsl #2
   140d8:	ldrdeq	r4, [r1], -ip
   140dc:	mov	r3, #120	; 0x78
   140e0:	strb	r3, [lr]
   140e4:	mov	r3, #0
   140e8:	strb	r3, [lr, #1]
   140ec:	ldr	r0, [r6]
   140f0:	b	13f9c <ftello64@plt+0x28cc>
   140f4:	mov	r3, #111	; 0x6f
   140f8:	strb	r3, [lr]
   140fc:	b	140e4 <ftello64@plt+0x2a14>
   14100:	mov	r3, #88	; 0x58
   14104:	strb	r3, [lr]
   14108:	b	140e4 <ftello64@plt+0x2a14>
   1410c:	mov	r3, #105	; 0x69
   14110:	strb	r3, [lr]
   14114:	b	140e4 <ftello64@plt+0x2a14>
   14118:	strheq	r0, [r2], -r8
   1411c:	andeq	r2, r3, r8, lsl r5
   14120:	andeq	r2, r3, r8, lsl #24
   14124:	ldr	r3, [r0, #4]
   14128:	ldr	r3, [r3, #16]
   1412c:	cmp	r3, #0
   14130:	bne	1415c <ftello64@plt+0x2a8c>
   14134:	push	{r4, r5, r6, lr}
   14138:	mov	r1, #40	; 0x28
   1413c:	ldr	r4, [pc, #28]	; 14160 <ftello64@plt+0x2a90>
   14140:	mov	r5, r0
   14144:	mov	r0, r5
   14148:	bl	13a20 <ftello64@plt+0x2350>
   1414c:	ldrb	r1, [r4, #1]!
   14150:	cmp	r1, #0
   14154:	bne	14144 <ftello64@plt+0x2a74>
   14158:	pop	{r4, r5, r6, pc}
   1415c:	b	13f74 <ftello64@plt+0x28a4>
   14160:	andeq	pc, r1, r4, ror #24
   14164:	ldr	r3, [r0, #4]
   14168:	ldr	r3, [r3, #20]
   1416c:	cmp	r3, #0
   14170:	bne	1419c <ftello64@plt+0x2acc>
   14174:	push	{r4, r5, r6, lr}
   14178:	mov	r1, #40	; 0x28
   1417c:	ldr	r4, [pc, #28]	; 141a0 <ftello64@plt+0x2ad0>
   14180:	mov	r5, r0
   14184:	mov	r0, r5
   14188:	bl	13a20 <ftello64@plt+0x2350>
   1418c:	ldrb	r1, [r4, #1]!
   14190:	cmp	r1, #0
   14194:	bne	14184 <ftello64@plt+0x2ab4>
   14198:	pop	{r4, r5, r6, pc}
   1419c:	b	13f74 <ftello64@plt+0x28a4>
   141a0:	andeq	pc, r1, r4, ror #24
   141a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141a8:	mov	r5, r0
   141ac:	sub	sp, sp, #16
   141b0:	ldr	r0, [r3, #4]
   141b4:	mov	sl, r3
   141b8:	mov	r8, r1
   141bc:	mov	r9, r2
   141c0:	bl	11424 <inet_ntoa@plt>
   141c4:	mov	r1, #46	; 0x2e
   141c8:	mov	r4, #0
   141cc:	mov	r6, r0
   141d0:	bl	11550 <strchr@plt>
   141d4:	mov	r2, r4
   141d8:	mov	r1, r4
   141dc:	mov	r7, r0
   141e0:	mov	r0, r6
   141e4:	strb	r4, [r7], #1
   141e8:	bl	113ac <strtol@plt>
   141ec:	mov	r1, #46	; 0x2e
   141f0:	str	r0, [sp]
   141f4:	mov	r0, r7
   141f8:	bl	11550 <strchr@plt>
   141fc:	mov	r2, r4
   14200:	mov	r1, r4
   14204:	mov	r6, r0
   14208:	mov	r0, r7
   1420c:	strb	r4, [r6], #1
   14210:	bl	113ac <strtol@plt>
   14214:	mov	r1, #46	; 0x2e
   14218:	str	r0, [sp, #4]
   1421c:	mov	r0, r6
   14220:	bl	11550 <strchr@plt>
   14224:	mov	r2, r4
   14228:	mov	r1, r4
   1422c:	mov	r7, r0
   14230:	mov	r0, r6
   14234:	strb	r4, [r7], #1
   14238:	bl	113ac <strtol@plt>
   1423c:	mov	r2, r4
   14240:	mov	r1, r4
   14244:	str	r0, [sp, #8]
   14248:	mov	r0, r7
   1424c:	bl	113ac <strtol@plt>
   14250:	str	r0, [sp, #12]
   14254:	ldr	r0, [sl, #4]
   14258:	bl	11424 <inet_ntoa@plt>
   1425c:	cmp	r8, r4
   14260:	ble	14284 <ftello64@plt+0x2bb4>
   14264:	mov	r2, r4
   14268:	mov	r1, r4
   1426c:	ldr	r0, [r9]
   14270:	bl	113ac <strtol@plt>
   14274:	cmp	r0, #3
   14278:	bls	142b0 <ftello64@plt+0x2be0>
   1427c:	add	sp, sp, #16
   14280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14284:	ldrb	r1, [r0]
   14288:	cmp	r1, r4
   1428c:	movne	r4, r0
   14290:	beq	1427c <ftello64@plt+0x2bac>
   14294:	mov	r0, r5
   14298:	bl	13a20 <ftello64@plt+0x2350>
   1429c:	ldrb	r1, [r4, #1]!
   142a0:	cmp	r1, #0
   142a4:	bne	14294 <ftello64@plt+0x2bc4>
   142a8:	add	sp, sp, #16
   142ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142b0:	add	r3, sp, #16
   142b4:	add	r0, r3, r0, lsl #2
   142b8:	add	r2, r9, #4
   142bc:	ldr	r3, [r0, #-16]
   142c0:	sub	r1, r8, #1
   142c4:	mov	r0, r5
   142c8:	add	sp, sp, #16
   142cc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   142d0:	b	13c58 <ftello64@plt+0x2588>
   142d4:	push	{r4, r5, r6, lr}
   142d8:	mov	r4, r0
   142dc:	mov	r5, r1
   142e0:	mov	r6, r2
   142e4:	ldr	r0, [r0, #8]
   142e8:	ldr	r2, [r4, #4]
   142ec:	ldr	r1, [pc, #64]	; 14334 <ftello64@plt+0x2c64>
   142f0:	bl	183f8 <argp_parse@@Base+0xfa0>
   142f4:	cmp	r0, #0
   142f8:	blt	14318 <ftello64@plt+0x2c48>
   142fc:	ldr	r3, [r4, #4]
   14300:	mov	r2, r6
   14304:	mov	r1, r5
   14308:	mov	r0, r4
   1430c:	add	r3, r3, #16
   14310:	pop	{r4, r5, r6, lr}
   14314:	b	141a4 <ftello64@plt+0x2ad4>
   14318:	bl	11568 <__errno_location@plt>
   1431c:	ldr	r3, [r4, #4]
   14320:	ldr	r2, [pc, #16]	; 14338 <ftello64@plt+0x2c68>
   14324:	pop	{r4, r5, r6, lr}
   14328:	ldr	r1, [r0]
   1432c:	mov	r0, #1
   14330:	b	114a8 <error@plt>
   14334:	andeq	r8, r0, r5, lsl r9
   14338:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1433c:	push	{r4, r5, r6, lr}
   14340:	mov	r4, r0
   14344:	mov	r5, r1
   14348:	mov	r6, r2
   1434c:	ldr	r0, [r0, #8]
   14350:	ldr	r2, [r4, #4]
   14354:	ldr	r1, [pc, #64]	; 1439c <ftello64@plt+0x2ccc>
   14358:	bl	183f8 <argp_parse@@Base+0xfa0>
   1435c:	cmp	r0, #0
   14360:	blt	14380 <ftello64@plt+0x2cb0>
   14364:	ldr	r3, [r4, #4]
   14368:	mov	r2, r6
   1436c:	mov	r1, r5
   14370:	mov	r0, r4
   14374:	add	r3, r3, #16
   14378:	pop	{r4, r5, r6, lr}
   1437c:	b	141a4 <ftello64@plt+0x2ad4>
   14380:	bl	11568 <__errno_location@plt>
   14384:	ldr	r3, [r4, #4]
   14388:	ldr	r2, [pc, #16]	; 143a0 <ftello64@plt+0x2cd0>
   1438c:	pop	{r4, r5, r6, lr}
   14390:	ldr	r1, [r0]
   14394:	mov	r0, #1
   14398:	b	114a8 <error@plt>
   1439c:	andeq	r8, r0, fp, lsl r9
   143a0:	muleq	r1, ip, ip
   143a4:	push	{r4, r5, r6, lr}
   143a8:	mov	r4, r0
   143ac:	mov	r5, r1
   143b0:	mov	r6, r2
   143b4:	ldr	r0, [r0, #8]
   143b8:	ldr	r2, [r4, #4]
   143bc:	ldr	r1, [pc, #64]	; 14404 <ftello64@plt+0x2d34>
   143c0:	bl	183f8 <argp_parse@@Base+0xfa0>
   143c4:	cmp	r0, #0
   143c8:	blt	143e8 <ftello64@plt+0x2d18>
   143cc:	ldr	r3, [r4, #4]
   143d0:	mov	r2, r6
   143d4:	mov	r1, r5
   143d8:	mov	r0, r4
   143dc:	add	r3, r3, #16
   143e0:	pop	{r4, r5, r6, lr}
   143e4:	b	141a4 <ftello64@plt+0x2ad4>
   143e8:	bl	11568 <__errno_location@plt>
   143ec:	ldr	r3, [r4, #4]
   143f0:	ldr	r2, [pc, #16]	; 14408 <ftello64@plt+0x2d38>
   143f4:	pop	{r4, r5, r6, lr}
   143f8:	ldr	r1, [r0]
   143fc:	mov	r0, #1
   14400:	b	114a8 <error@plt>
   14404:	andeq	r8, r0, r9, lsl r9
   14408:	andeq	pc, r1, r8, asr #25
   1440c:	push	{r4, r5, r6, lr}
   14410:	mov	r4, r0
   14414:	mov	r5, r1
   14418:	mov	r6, r2
   1441c:	ldr	r0, [r0, #8]
   14420:	ldr	r2, [r4, #4]
   14424:	ldr	r1, [pc, #64]	; 1446c <ftello64@plt+0x2d9c>
   14428:	bl	183f8 <argp_parse@@Base+0xfa0>
   1442c:	cmp	r0, #0
   14430:	blt	14450 <ftello64@plt+0x2d80>
   14434:	ldr	r3, [r4, #4]
   14438:	mov	r2, r6
   1443c:	mov	r1, r5
   14440:	mov	r0, r4
   14444:	add	r3, r3, #16
   14448:	pop	{r4, r5, r6, lr}
   1444c:	b	141a4 <ftello64@plt+0x2ad4>
   14450:	bl	11568 <__errno_location@plt>
   14454:	ldr	r3, [r4, #4]
   14458:	ldr	r2, [pc, #16]	; 14470 <ftello64@plt+0x2da0>
   1445c:	pop	{r4, r5, r6, lr}
   14460:	ldr	r1, [r0]
   14464:	mov	r0, #1
   14468:	b	114a8 <error@plt>
   1446c:	andeq	r8, r0, r7, lsl r9
   14470:	strdeq	pc, [r1], -r4
   14474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14478:	subs	r7, r3, #0
   1447c:	sub	sp, sp, #4
   14480:	beq	14594 <ftello64@plt+0x2ec4>
   14484:	mov	fp, #1
   14488:	mov	r6, r0
   1448c:	mov	r9, r1
   14490:	mov	sl, r2
   14494:	mov	r5, fp
   14498:	mov	r8, #0
   1449c:	b	144c0 <ftello64@plt+0x2df0>
   144a0:	lsls	r5, r5, #1
   144a4:	movne	r3, #1
   144a8:	moveq	r3, #0
   144ac:	cmp	r7, #0
   144b0:	moveq	r3, #0
   144b4:	andne	r3, r3, #1
   144b8:	cmp	r3, #0
   144bc:	beq	1453c <ftello64@plt+0x2e6c>
   144c0:	tst	r5, r7
   144c4:	beq	144a0 <ftello64@plt+0x2dd0>
   144c8:	mov	r1, r8
   144cc:	mov	r0, r5
   144d0:	bl	11bd8 <ftello64@plt+0x508>
   144d4:	subs	r4, r0, #0
   144d8:	beq	144a0 <ftello64@plt+0x2dd0>
   144dc:	cmp	fp, #0
   144e0:	bne	14510 <ftello64@plt+0x2e40>
   144e4:	cmp	r9, #0
   144e8:	ble	1459c <ftello64@plt+0x2ecc>
   144ec:	ldr	fp, [sl]
   144f0:	ldrb	r1, [fp]
   144f4:	cmp	r1, #0
   144f8:	beq	14510 <ftello64@plt+0x2e40>
   144fc:	mov	r0, r6
   14500:	bl	13a20 <ftello64@plt+0x2350>
   14504:	ldrb	r1, [fp, #1]!
   14508:	cmp	r1, #0
   1450c:	bne	144fc <ftello64@plt+0x2e2c>
   14510:	ldrb	r1, [r4]
   14514:	cmp	r1, #0
   14518:	beq	14530 <ftello64@plt+0x2e60>
   1451c:	mov	r0, r6
   14520:	bl	13a20 <ftello64@plt+0x2350>
   14524:	ldrb	r1, [r4, #1]!
   14528:	cmp	r1, #0
   1452c:	bne	1451c <ftello64@plt+0x2e4c>
   14530:	bic	r7, r7, r5
   14534:	mov	fp, r8
   14538:	b	144a0 <ftello64@plt+0x2dd0>
   1453c:	cmp	r7, #0
   14540:	beq	14594 <ftello64@plt+0x2ec4>
   14544:	cmp	fp, #0
   14548:	bne	14578 <ftello64@plt+0x2ea8>
   1454c:	cmp	r9, #0
   14550:	ble	145d0 <ftello64@plt+0x2f00>
   14554:	ldr	r4, [sl]
   14558:	ldrb	r1, [r4]
   1455c:	cmp	r1, #0
   14560:	beq	14578 <ftello64@plt+0x2ea8>
   14564:	mov	r0, r6
   14568:	bl	13a20 <ftello64@plt+0x2350>
   1456c:	ldrb	r1, [r4, #1]!
   14570:	cmp	r1, #0
   14574:	bne	14564 <ftello64@plt+0x2e94>
   14578:	mov	r3, r7
   1457c:	add	r2, sl, #4
   14580:	sub	r1, r9, #1
   14584:	mov	r0, r6
   14588:	add	sp, sp, #4
   1458c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14590:	b	13c58 <ftello64@plt+0x2588>
   14594:	add	sp, sp, #4
   14598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1459c:	ldr	r3, [pc, #96]	; 14604 <ftello64@plt+0x2f34>
   145a0:	mov	r0, #32
   145a4:	ldr	r2, [r3]
   145a8:	ldr	r3, [pc, #88]	; 14608 <ftello64@plt+0x2f38>
   145ac:	ldr	r1, [r3]
   145b0:	ldr	r3, [r2]
   145b4:	add	r3, r3, #1
   145b8:	str	r3, [r2]
   145bc:	bl	11628 <putc@plt>
   145c0:	ldr	r3, [pc, #68]	; 1460c <ftello64@plt+0x2f3c>
   145c4:	mov	r2, #1
   145c8:	str	r2, [r3]
   145cc:	b	14510 <ftello64@plt+0x2e40>
   145d0:	ldr	r2, [pc, #44]	; 14604 <ftello64@plt+0x2f34>
   145d4:	ldr	r3, [pc, #44]	; 14608 <ftello64@plt+0x2f38>
   145d8:	mov	r0, #32
   145dc:	ldr	r2, [r2]
   145e0:	ldr	r1, [r3]
   145e4:	ldr	r3, [r2]
   145e8:	add	r3, r3, #1
   145ec:	str	r3, [r2]
   145f0:	bl	11628 <putc@plt>
   145f4:	ldr	r3, [pc, #16]	; 1460c <ftello64@plt+0x2f3c>
   145f8:	mov	r2, #1
   145fc:	str	r2, [r3]
   14600:	b	14578 <ftello64@plt+0x2ea8>
   14604:	andeq	r2, r3, r8, lsl r5
   14608:	andeq	r2, r3, r4, lsl ip
   1460c:	andeq	r2, r3, r8, lsl #24
   14610:	push	{r4, r5, lr}
   14614:	sub	sp, sp, #20
   14618:	mov	r1, sp
   1461c:	mov	r5, r0
   14620:	mov	r2, #15
   14624:	mov	r0, r3
   14628:	bl	11d64 <ftello64@plt+0x694>
   1462c:	ldrb	r1, [sp]
   14630:	cmp	r1, #0
   14634:	beq	14650 <ftello64@plt+0x2f80>
   14638:	mov	r4, sp
   1463c:	mov	r0, r5
   14640:	bl	13a20 <ftello64@plt+0x2350>
   14644:	ldrb	r1, [r4, #1]!
   14648:	cmp	r1, #0
   1464c:	bne	1463c <ftello64@plt+0x2f6c>
   14650:	add	sp, sp, #20
   14654:	pop	{r4, r5, pc}
   14658:	push	{r4, r5, r6, r7, r8, lr}
   1465c:	mov	r4, r0
   14660:	mov	r6, r1
   14664:	mov	r7, r2
   14668:	ldr	r0, [r0, #8]
   1466c:	ldr	r2, [r4, #4]
   14670:	ldr	r1, [pc, #212]	; 1474c <ftello64@plt+0x307c>
   14674:	bl	183f8 <argp_parse@@Base+0xfa0>
   14678:	cmp	r0, #0
   1467c:	blt	14730 <ftello64@plt+0x3060>
   14680:	ldr	r3, [r4, #4]
   14684:	cmp	r6, #0
   14688:	ldrh	r8, [r3, #16]
   1468c:	ble	14718 <ftello64@plt+0x3048>
   14690:	ldr	r5, [r7]
   14694:	ldr	r1, [pc, #180]	; 14750 <ftello64@plt+0x3080>
   14698:	mov	r0, r5
   1469c:	bl	113a0 <strcmp@plt>
   146a0:	cmp	r0, #0
   146a4:	beq	14700 <ftello64@plt+0x3030>
   146a8:	ldr	r1, [pc, #164]	; 14754 <ftello64@plt+0x3084>
   146ac:	mov	r0, r5
   146b0:	bl	113a0 <strcmp@plt>
   146b4:	cmp	r0, #0
   146b8:	beq	146e8 <ftello64@plt+0x3018>
   146bc:	mov	r0, r5
   146c0:	ldr	r1, [pc, #144]	; 14758 <ftello64@plt+0x3088>
   146c4:	bl	113a0 <strcmp@plt>
   146c8:	cmp	r0, #0
   146cc:	popne	{r4, r5, r6, r7, r8, pc}
   146d0:	mov	r3, r8
   146d4:	add	r2, r7, #4
   146d8:	sub	r1, r6, #1
   146dc:	mov	r0, r4
   146e0:	pop	{r4, r5, r6, r7, r8, lr}
   146e4:	b	14474 <ftello64@plt+0x2da4>
   146e8:	mov	r3, r8
   146ec:	add	r2, r7, #4
   146f0:	sub	r1, r6, #1
   146f4:	mov	r0, r4
   146f8:	pop	{r4, r5, r6, r7, r8, lr}
   146fc:	b	14610 <ftello64@plt+0x2f40>
   14700:	mov	r3, r8
   14704:	add	r2, r7, #4
   14708:	sub	r1, r6, #1
   1470c:	mov	r0, r4
   14710:	pop	{r4, r5, r6, r7, r8, lr}
   14714:	b	13c58 <ftello64@plt+0x2588>
   14718:	mov	r3, r8
   1471c:	mov	r2, r7
   14720:	mov	r1, r6
   14724:	mov	r0, r4
   14728:	pop	{r4, r5, r6, r7, r8, lr}
   1472c:	b	14474 <ftello64@plt+0x2da4>
   14730:	bl	11568 <__errno_location@plt>
   14734:	ldr	r3, [r4, #4]
   14738:	ldr	r2, [pc, #28]	; 1475c <ftello64@plt+0x308c>
   1473c:	pop	{r4, r5, r6, r7, r8, lr}
   14740:	ldr	r1, [r0]
   14744:	mov	r0, #1
   14748:	b	114a8 <error@plt>
   1474c:	andeq	r8, r0, r3, lsl r9
   14750:	andeq	pc, r1, r8, asr #26
   14754:	andeq	lr, r1, r8, ror #20
   14758:	andeq	pc, r1, r0, asr sp	; <UNPREDICTABLE>
   1475c:	andeq	pc, r1, r0, lsr #26
   14760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14764:	mov	r4, r0
   14768:	ldr	r7, [pc, #184]	; 14828 <ftello64@plt+0x3158>
   1476c:	mov	r6, r1
   14770:	ldr	r0, [r7, #4]
   14774:	cmp	r0, #0
   14778:	beq	147c8 <ftello64@plt+0x30f8>
   1477c:	mov	r8, r2
   14780:	mov	r9, r3
   14784:	add	r5, r7, #4
   14788:	b	14798 <ftello64@plt+0x30c8>
   1478c:	ldr	r0, [r5, #8]!
   14790:	cmp	r0, #0
   14794:	beq	147c8 <ftello64@plt+0x30f8>
   14798:	mov	r1, r4
   1479c:	bl	113a0 <strcmp@plt>
   147a0:	cmp	r0, #0
   147a4:	bne	1478c <ftello64@plt+0x30bc>
   147a8:	ldr	r3, [r5, #4]
   147ac:	cmp	r3, #0
   147b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   147b4:	mov	r2, r9
   147b8:	mov	r1, r8
   147bc:	mov	r0, r6
   147c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   147c4:	bx	r3
   147c8:	ldr	r0, [pc, #92]	; 1482c <ftello64@plt+0x315c>
   147cc:	bl	113b8 <printf@plt>
   147d0:	ldr	r2, [r7]
   147d4:	ldr	r3, [r2]
   147d8:	add	r0, r3, r0
   147dc:	str	r0, [r2]
   147e0:	ldrb	r1, [r4]
   147e4:	cmp	r1, #0
   147e8:	beq	14800 <ftello64@plt+0x3130>
   147ec:	mov	r0, r6
   147f0:	bl	13a20 <ftello64@plt+0x2350>
   147f4:	ldrb	r1, [r4, #1]!
   147f8:	cmp	r1, #0
   147fc:	bne	147ec <ftello64@plt+0x311c>
   14800:	ldr	r0, [pc, #40]	; 14830 <ftello64@plt+0x3160>
   14804:	bl	113b8 <printf@plt>
   14808:	ldr	r2, [r7]
   1480c:	ldr	r1, [pc, #32]	; 14834 <ftello64@plt+0x3164>
   14810:	mov	ip, #1
   14814:	ldr	r3, [r2]
   14818:	add	r0, r3, r0
   1481c:	str	r0, [r2]
   14820:	str	ip, [r1]
   14824:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14828:	andeq	r2, r3, r8, lsl r5
   1482c:	andeq	pc, r1, r8, asr sp	; <UNPREDICTABLE>
   14830:	ldrdeq	r0, [r2], -r8
   14834:	andeq	r2, r3, r8, lsl #24
   14838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1483c:	mov	r6, r1
   14840:	add	fp, sp, #32
   14844:	sub	sp, sp, #20
   14848:	ldr	r1, [r0, #20]
   1484c:	ldr	r4, [r0, #16]
   14850:	add	r1, r1, #1
   14854:	str	r1, [r0, #20]
   14858:	ldrb	r3, [r4]
   1485c:	mov	r5, r0
   14860:	mov	sl, #1
   14864:	cmp	r3, #0
   14868:	beq	14924 <ftello64@plt+0x3254>
   1486c:	subs	r2, r3, #125	; 0x7d
   14870:	movne	r2, #1
   14874:	cmp	r1, #1
   14878:	orrle	r2, r2, #1
   1487c:	cmp	r2, #0
   14880:	beq	14924 <ftello64@plt+0x3254>
   14884:	cmp	r3, #36	; 0x24
   14888:	movne	r1, r3
   1488c:	bne	148c4 <ftello64@plt+0x31f4>
   14890:	b	148ec <ftello64@plt+0x321c>
   14894:	ldrb	r1, [r4, #1]!
   14898:	cmp	r1, #36	; 0x24
   1489c:	cmpne	r1, #0
   148a0:	beq	148e4 <ftello64@plt+0x3214>
   148a4:	ldr	r2, [r5, #20]
   148a8:	cmp	r2, #1
   148ac:	movgt	r3, #0
   148b0:	movle	r3, #1
   148b4:	cmp	r1, #125	; 0x7d
   148b8:	orrne	r3, r3, #1
   148bc:	cmp	r3, #0
   148c0:	beq	14920 <ftello64@plt+0x3250>
   148c4:	cmp	r6, #0
   148c8:	bne	14894 <ftello64@plt+0x31c4>
   148cc:	mov	r0, r5
   148d0:	bl	13a20 <ftello64@plt+0x2350>
   148d4:	ldrb	r1, [r4, #1]!
   148d8:	cmp	r1, #36	; 0x24
   148dc:	cmpne	r1, #0
   148e0:	bne	148a4 <ftello64@plt+0x31d4>
   148e4:	cmp	r1, #36	; 0x24
   148e8:	bne	14b4c <ftello64@plt+0x347c>
   148ec:	ldrb	r1, [r4, #1]
   148f0:	cmp	r1, #123	; 0x7b
   148f4:	beq	1494c <ftello64@plt+0x327c>
   148f8:	cmp	r1, #125	; 0x7d
   148fc:	beq	14938 <ftello64@plt+0x3268>
   14900:	cmp	r1, #36	; 0x24
   14904:	beq	14938 <ftello64@plt+0x3268>
   14908:	cmp	r6, #0
   1490c:	beq	14a20 <ftello64@plt+0x3350>
   14910:	ldrb	r3, [r4, #2]
   14914:	add	r4, r4, #2
   14918:	ldr	r1, [r5, #20]
   1491c:	b	14864 <ftello64@plt+0x3194>
   14920:	mov	r1, r2
   14924:	sub	r1, r1, #1
   14928:	str	r1, [r5, #20]
   1492c:	str	r4, [r5, #16]
   14930:	sub	sp, fp, #32
   14934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14938:	cmp	r6, #0
   1493c:	bne	14910 <ftello64@plt+0x3240>
   14940:	mov	r0, r5
   14944:	bl	13a20 <ftello64@plt+0x2350>
   14948:	b	14910 <ftello64@plt+0x3240>
   1494c:	add	r8, r4, #2
   14950:	mov	r0, r8
   14954:	mov	r1, #125	; 0x7d
   14958:	bl	11550 <strchr@plt>
   1495c:	subs	r7, r0, #0
   14960:	beq	149e4 <ftello64@plt+0x3314>
   14964:	sub	r4, r7, r8
   14968:	add	r3, r4, #15
   1496c:	bic	r3, r3, #7
   14970:	sub	sp, sp, r3
   14974:	mov	r3, sp
   14978:	mov	r1, r8
   1497c:	lsr	r8, r3, #3
   14980:	mov	r2, r4
   14984:	lsl	r3, r8, #3
   14988:	mov	r0, r3
   1498c:	str	r3, [fp, #-40]	; 0xffffffd8
   14990:	bl	1140c <memcpy@plt>
   14994:	mov	r3, #0
   14998:	cmp	r6, #0
   1499c:	strb	r3, [r4, r8, lsl #3]
   149a0:	add	r4, r7, #1
   149a4:	beq	14a5c <ftello64@plt+0x338c>
   149a8:	str	r4, [r5, #16]
   149ac:	ldrb	r3, [r4]
   149b0:	cmp	r3, #123	; 0x7b
   149b4:	add	r2, r4, #1
   149b8:	mov	r1, sl
   149bc:	mov	r0, r5
   149c0:	bne	14918 <ftello64@plt+0x3248>
   149c4:	str	r2, [r5, #16]
   149c8:	bl	14838 <ftello64@plt+0x3168>
   149cc:	ldr	r4, [r5, #16]
   149d0:	ldrb	r3, [r4]
   149d4:	cmp	r3, #125	; 0x7d
   149d8:	bne	149b0 <ftello64@plt+0x32e0>
   149dc:	add	r4, r4, #1
   149e0:	b	149a8 <ftello64@plt+0x32d8>
   149e4:	ldrb	r1, [r4]
   149e8:	cmp	r1, #0
   149ec:	movne	r7, r4
   149f0:	beq	14a08 <ftello64@plt+0x3338>
   149f4:	mov	r0, r5
   149f8:	bl	13a20 <ftello64@plt+0x2350>
   149fc:	ldrb	r1, [r7, #1]!
   14a00:	cmp	r1, #0
   14a04:	bne	149f4 <ftello64@plt+0x3324>
   14a08:	mov	r0, r4
   14a0c:	mov	r1, #0
   14a10:	bl	11550 <strchr@plt>
   14a14:	mov	r4, r0
   14a18:	ldrb	r3, [r0]
   14a1c:	b	14918 <ftello64@plt+0x3248>
   14a20:	ldr	r3, [pc, #300]	; 14b54 <ftello64@plt+0x3484>
   14a24:	mov	r0, #36	; 0x24
   14a28:	ldr	r2, [r3]
   14a2c:	ldr	r3, [pc, #292]	; 14b58 <ftello64@plt+0x3488>
   14a30:	ldr	r1, [r3]
   14a34:	ldr	r3, [r2]
   14a38:	add	r3, r3, #1
   14a3c:	str	r3, [r2]
   14a40:	bl	11628 <putc@plt>
   14a44:	ldr	r3, [pc, #272]	; 14b5c <ftello64@plt+0x348c>
   14a48:	mov	r0, r5
   14a4c:	str	sl, [r3]
   14a50:	ldrb	r1, [r4, #1]
   14a54:	bl	13a20 <ftello64@plt+0x2350>
   14a58:	b	14910 <ftello64@plt+0x3240>
   14a5c:	mov	r0, r7
   14a60:	bl	11544 <strlen@plt>
   14a64:	ldrb	r3, [r7, #1]
   14a68:	cmp	r3, #123	; 0x7b
   14a6c:	lsr	r3, r0, #1
   14a70:	add	r3, r3, #14
   14a74:	bic	r3, r3, #7
   14a78:	sub	sp, sp, r3
   14a7c:	str	sp, [fp, #-44]	; 0xffffffd4
   14a80:	bne	14b2c <ftello64@plt+0x345c>
   14a84:	sub	r3, sp, #4
   14a88:	mov	r7, r6
   14a8c:	mov	r9, r3
   14a90:	str	r6, [fp, #-48]	; 0xffffffd0
   14a94:	b	14a9c <ftello64@plt+0x33cc>
   14a98:	mov	r7, r2
   14a9c:	add	r6, r4, #1
   14aa0:	mov	r1, sl
   14aa4:	mov	r0, r5
   14aa8:	str	r6, [r5, #16]
   14aac:	bl	14838 <ftello64@plt+0x3168>
   14ab0:	ldr	r4, [r5, #16]
   14ab4:	sub	r8, r4, r6
   14ab8:	add	r0, r8, #1
   14abc:	bl	18f64 <_obstack_memory_used@@Base+0x824>
   14ac0:	mov	r2, r8
   14ac4:	mov	r1, r6
   14ac8:	str	r0, [r9, #4]!
   14acc:	bl	1140c <memcpy@plt>
   14ad0:	mov	r2, #0
   14ad4:	strb	r2, [r0, r8]
   14ad8:	ldrb	r3, [r4]
   14adc:	add	r2, r7, #1
   14ae0:	cmp	r3, #125	; 0x7d
   14ae4:	ldrbeq	r3, [r4, #1]
   14ae8:	addeq	r4, r4, #1
   14aec:	cmp	r3, #123	; 0x7b
   14af0:	beq	14a98 <ftello64@plt+0x33c8>
   14af4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14afc:	mov	r1, r5
   14b00:	ldr	r6, [fp, #-48]	; 0xffffffd0
   14b04:	add	r8, r3, r7, lsl #2
   14b08:	bl	14760 <ftello64@plt+0x3090>
   14b0c:	str	r4, [r5, #16]
   14b10:	sub	r7, r7, #1
   14b14:	ldr	r0, [r8], #-4
   14b18:	bl	182f0 <argp_parse@@Base+0xe98>
   14b1c:	cmn	r7, #1
   14b20:	bne	14b10 <ftello64@plt+0x3440>
   14b24:	ldrb	r3, [r4]
   14b28:	b	14918 <ftello64@plt+0x3248>
   14b2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b34:	mov	r2, #0
   14b38:	mov	r1, r5
   14b3c:	bl	14760 <ftello64@plt+0x3090>
   14b40:	str	r4, [r5, #16]
   14b44:	ldrb	r3, [r7, #1]
   14b48:	b	14918 <ftello64@plt+0x3248>
   14b4c:	ldr	r1, [r5, #20]
   14b50:	b	14924 <ftello64@plt+0x3254>
   14b54:	andeq	r2, r3, r8, lsl r5
   14b58:	andeq	r2, r3, r4, lsl ip
   14b5c:	andeq	r2, r3, r8, lsl #24
   14b60:	ldr	r3, [r1, r2, lsl #2]
   14b64:	mov	r1, #0
   14b68:	str	r3, [r0, #16]
   14b6c:	b	14838 <ftello64@plt+0x3168>
   14b70:	cmp	r3, r1
   14b74:	mov	r1, r2
   14b78:	bxge	lr
   14b7c:	mov	r2, r3
   14b80:	b	14b60 <ftello64@plt+0x3490>
   14b84:	push	{r4, r5, r6, lr}
   14b88:	subs	r5, r1, #0
   14b8c:	pople	{r4, r5, r6, pc}
   14b90:	mov	r6, r0
   14b94:	ldr	r0, [r2]
   14b98:	mov	r4, r2
   14b9c:	bl	129a8 <ftello64@plt+0x12d8>
   14ba0:	cmp	r0, #0
   14ba4:	movne	r2, #1
   14ba8:	moveq	r2, #2
   14bac:	cmp	r5, r2
   14bb0:	pople	{r4, r5, r6, pc}
   14bb4:	mov	r1, r4
   14bb8:	mov	r0, r6
   14bbc:	pop	{r4, r5, r6, lr}
   14bc0:	b	14b60 <ftello64@plt+0x3490>
   14bc4:	ldr	r3, [r0, #12]
   14bc8:	clz	r3, r3
   14bcc:	lsr	r3, r3, #5
   14bd0:	cmp	r3, r1
   14bd4:	mov	r1, r2
   14bd8:	bxge	lr
   14bdc:	mov	r2, r3
   14be0:	b	14b60 <ftello64@plt+0x3490>
   14be4:	ldr	r3, [pc, #160]	; 14c8c <ftello64@plt+0x35bc>
   14be8:	push	{r4, r5, r6, r7, lr}
   14bec:	mov	r5, r0
   14bf0:	ldr	r3, [r3]
   14bf4:	sub	sp, sp, #12
   14bf8:	cmp	r3, #0
   14bfc:	mov	r4, r1
   14c00:	mov	r6, r2
   14c04:	movne	r3, #0
   14c08:	bne	14c1c <ftello64@plt+0x354c>
   14c0c:	ldr	r2, [pc, #124]	; 14c90 <ftello64@plt+0x35c0>
   14c10:	ldr	r2, [r2]
   14c14:	cmp	r2, #0
   14c18:	beq	14c3c <ftello64@plt+0x356c>
   14c1c:	cmp	r4, r3
   14c20:	ble	14c34 <ftello64@plt+0x3564>
   14c24:	mov	r2, r3
   14c28:	mov	r1, r6
   14c2c:	mov	r0, r5
   14c30:	bl	14b60 <ftello64@plt+0x3490>
   14c34:	add	sp, sp, #12
   14c38:	pop	{r4, r5, r6, r7, pc}
   14c3c:	add	r1, sp, #8
   14c40:	ldr	r0, [pc, #76]	; 14c94 <ftello64@plt+0x35c4>
   14c44:	str	r3, [r1, #-4]!
   14c48:	bl	11d40 <ftello64@plt+0x670>
   14c4c:	subs	r7, r0, #0
   14c50:	bne	14c5c <ftello64@plt+0x358c>
   14c54:	mov	r3, #1
   14c58:	b	14c1c <ftello64@plt+0x354c>
   14c5c:	ldr	r2, [r5, #4]
   14c60:	ldr	r1, [pc, #48]	; 14c98 <ftello64@plt+0x35c8>
   14c64:	ldr	r0, [r5, #8]
   14c68:	bl	183f8 <argp_parse@@Base+0xfa0>
   14c6c:	cmp	r0, #0
   14c70:	bne	14c54 <ftello64@plt+0x3584>
   14c74:	ldr	r3, [r5, #4]
   14c78:	ldrh	r3, [r3, #16]
   14c7c:	tst	r3, r7
   14c80:	moveq	r3, #1
   14c84:	movne	r3, #0
   14c88:	b	14c1c <ftello64@plt+0x354c>
   14c8c:	strdeq	r2, [r3], -r8
   14c90:	strdeq	r2, [r3], -ip
   14c94:	strdeq	lr, [r1], -r8
   14c98:	andeq	r8, r0, r3, lsl r9
   14c9c:	ldr	r3, [pc, #28]	; 14cc0 <ftello64@plt+0x35f0>
   14ca0:	mov	ip, r2
   14ca4:	ldr	r2, [r3]
   14ca8:	clz	r2, r2
   14cac:	lsr	r2, r2, #5
   14cb0:	cmp	r2, r1
   14cb4:	bxge	lr
   14cb8:	mov	r1, ip
   14cbc:	b	14b60 <ftello64@plt+0x3490>
   14cc0:	andeq	r2, r3, r0, lsl #24
   14cc4:	push	{r4, r5, r6, r7, r8, lr}
   14cc8:	subs	r7, r1, #0
   14ccc:	pople	{r4, r5, r6, r7, r8, pc}
   14cd0:	ldr	r4, [pc, #100]	; 14d3c <ftello64@plt+0x366c>
   14cd4:	mov	r8, r0
   14cd8:	mov	r6, r2
   14cdc:	ldr	r0, [r4, #4]
   14ce0:	cmp	r0, #0
   14ce4:	beq	14d2c <ftello64@plt+0x365c>
   14ce8:	ldr	r5, [r2]
   14cec:	add	r4, r4, #4
   14cf0:	b	14d00 <ftello64@plt+0x3630>
   14cf4:	ldr	r0, [r4, #8]!
   14cf8:	cmp	r0, #0
   14cfc:	beq	14d2c <ftello64@plt+0x365c>
   14d00:	mov	r1, r5
   14d04:	bl	113a0 <strcmp@plt>
   14d08:	cmp	r0, #0
   14d0c:	bne	14cf4 <ftello64@plt+0x3624>
   14d10:	mov	r2, #1
   14d14:	cmp	r2, r7
   14d18:	popge	{r4, r5, r6, r7, r8, pc}
   14d1c:	mov	r1, r6
   14d20:	mov	r0, r8
   14d24:	pop	{r4, r5, r6, r7, r8, lr}
   14d28:	b	14b60 <ftello64@plt+0x3490>
   14d2c:	mov	r2, #2
   14d30:	cmp	r2, r7
   14d34:	popge	{r4, r5, r6, r7, r8, pc}
   14d38:	b	14d1c <ftello64@plt+0x364c>
   14d3c:	andeq	r2, r3, r8, lsl r5
   14d40:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d44:	subs	r5, r1, #0
   14d48:	ldr	r3, [pc, #84]	; 14da4 <ftello64@plt+0x36d4>
   14d4c:	ldr	r9, [pc, #84]	; 14da8 <ftello64@plt+0x36d8>
   14d50:	ldr	r8, [pc, #84]	; 14dac <ftello64@plt+0x36dc>
   14d54:	ldr	ip, [r3]
   14d58:	ldr	r3, [pc, #80]	; 14db0 <ftello64@plt+0x36e0>
   14d5c:	ldr	sl, [r9]
   14d60:	ldr	fp, [r8]
   14d64:	str	ip, [r9]
   14d68:	str	r3, [r8]
   14d6c:	movgt	r7, r2
   14d70:	movgt	r6, r0
   14d74:	movgt	r4, #0
   14d78:	ble	14d98 <ftello64@plt+0x36c8>
   14d7c:	mov	r2, r4
   14d80:	mov	r1, r7
   14d84:	add	r4, r4, #1
   14d88:	mov	r0, r6
   14d8c:	bl	14b60 <ftello64@plt+0x3490>
   14d90:	cmp	r5, r4
   14d94:	bne	14d7c <ftello64@plt+0x36ac>
   14d98:	str	sl, [r9]
   14d9c:	str	fp, [r8]
   14da0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da4:	andeq	r2, r3, r8, asr #22
   14da8:	andeq	r2, r3, r4, lsl ip
   14dac:	andeq	r2, r3, r8, lsl r5
   14db0:	andeq	r2, r3, ip, lsl #24
   14db4:	push	{r4, r5, r6, lr}
   14db8:	mov	r4, r0
   14dbc:	ldr	r0, [r0]
   14dc0:	mov	r5, r1
   14dc4:	mov	r6, r2
   14dc8:	bl	11694 <if_nametoindex@plt>
   14dcc:	clz	r2, r0
   14dd0:	lsr	r2, r2, #5
   14dd4:	cmp	r2, r5
   14dd8:	popge	{r4, r5, r6, pc}
   14ddc:	mov	r1, r6
   14de0:	mov	r0, r4
   14de4:	pop	{r4, r5, r6, lr}
   14de8:	b	14b60 <ftello64@plt+0x3490>
   14dec:	push	{r4, r5, r6, r7, lr}
   14df0:	sub	sp, sp, #12
   14df4:	mov	r4, r0
   14df8:	mov	r5, r1
   14dfc:	ldr	r0, [pc, #152]	; 14e9c <ftello64@plt+0x37cc>
   14e00:	add	r1, sp, #4
   14e04:	mov	r6, r2
   14e08:	bl	11d40 <ftello64@plt+0x670>
   14e0c:	subs	r7, r0, #0
   14e10:	bne	14e24 <ftello64@plt+0x3754>
   14e14:	cmp	r5, #1
   14e18:	bgt	14e68 <ftello64@plt+0x3798>
   14e1c:	add	sp, sp, #12
   14e20:	pop	{r4, r5, r6, r7, pc}
   14e24:	ldr	r2, [r4, #4]
   14e28:	ldr	r1, [pc, #112]	; 14ea0 <ftello64@plt+0x37d0>
   14e2c:	ldr	r0, [r4, #8]
   14e30:	bl	183f8 <argp_parse@@Base+0xfa0>
   14e34:	cmp	r0, #0
   14e38:	blt	14e14 <ftello64@plt+0x3744>
   14e3c:	ldr	r2, [r4, #4]
   14e40:	ldrh	r3, [r2, #16]
   14e44:	tst	r3, r7
   14e48:	beq	14e14 <ftello64@plt+0x3744>
   14e4c:	ldr	r1, [pc, #80]	; 14ea4 <ftello64@plt+0x37d4>
   14e50:	ldr	r0, [r4, #8]
   14e54:	bl	183f8 <argp_parse@@Base+0xfa0>
   14e58:	cmp	r0, #0
   14e5c:	bge	14e80 <ftello64@plt+0x37b0>
   14e60:	cmp	r5, #1
   14e64:	ble	14e1c <ftello64@plt+0x374c>
   14e68:	mov	r1, r6
   14e6c:	mov	r0, r4
   14e70:	mov	r2, #1
   14e74:	bl	14b60 <ftello64@plt+0x3490>
   14e78:	add	sp, sp, #12
   14e7c:	pop	{r4, r5, r6, r7, pc}
   14e80:	cmp	r5, #0
   14e84:	ble	14e1c <ftello64@plt+0x374c>
   14e88:	mov	r1, r6
   14e8c:	mov	r0, r4
   14e90:	mov	r2, #0
   14e94:	bl	14b60 <ftello64@plt+0x3490>
   14e98:	b	14e1c <ftello64@plt+0x374c>
   14e9c:	strdeq	lr, [r1], -ip
   14ea0:	andeq	r8, r0, r3, lsl r9
   14ea4:	andeq	r8, r0, r9, lsl r9
   14ea8:	push	{r4, r5, r6, r7, lr}
   14eac:	sub	sp, sp, #12
   14eb0:	mov	r4, r0
   14eb4:	mov	r5, r1
   14eb8:	ldr	r0, [pc, #152]	; 14f58 <ftello64@plt+0x3888>
   14ebc:	add	r1, sp, #4
   14ec0:	mov	r6, r2
   14ec4:	bl	11d40 <ftello64@plt+0x670>
   14ec8:	subs	r7, r0, #0
   14ecc:	bne	14ee0 <ftello64@plt+0x3810>
   14ed0:	cmp	r5, #1
   14ed4:	bgt	14f24 <ftello64@plt+0x3854>
   14ed8:	add	sp, sp, #12
   14edc:	pop	{r4, r5, r6, r7, pc}
   14ee0:	ldr	r2, [r4, #4]
   14ee4:	ldr	r1, [pc, #112]	; 14f5c <ftello64@plt+0x388c>
   14ee8:	ldr	r0, [r4, #8]
   14eec:	bl	183f8 <argp_parse@@Base+0xfa0>
   14ef0:	cmp	r0, #0
   14ef4:	blt	14ed0 <ftello64@plt+0x3800>
   14ef8:	ldr	r2, [r4, #4]
   14efc:	ldrh	r3, [r2, #16]
   14f00:	tst	r3, r7
   14f04:	beq	14ed0 <ftello64@plt+0x3800>
   14f08:	ldr	r1, [pc, #80]	; 14f60 <ftello64@plt+0x3890>
   14f0c:	ldr	r0, [r4, #8]
   14f10:	bl	183f8 <argp_parse@@Base+0xfa0>
   14f14:	cmp	r0, #0
   14f18:	bge	14f3c <ftello64@plt+0x386c>
   14f1c:	cmp	r5, #1
   14f20:	ble	14ed8 <ftello64@plt+0x3808>
   14f24:	mov	r1, r6
   14f28:	mov	r0, r4
   14f2c:	mov	r2, #1
   14f30:	bl	14b60 <ftello64@plt+0x3490>
   14f34:	add	sp, sp, #12
   14f38:	pop	{r4, r5, r6, r7, pc}
   14f3c:	cmp	r5, #0
   14f40:	ble	14ed8 <ftello64@plt+0x3808>
   14f44:	mov	r1, r6
   14f48:	mov	r0, r4
   14f4c:	mov	r2, #0
   14f50:	bl	14b60 <ftello64@plt+0x3490>
   14f54:	b	14ed8 <ftello64@plt+0x3808>
   14f58:	andeq	lr, r1, ip, lsl r2
   14f5c:	andeq	r8, r0, r3, lsl r9
   14f60:	andeq	r8, r0, r7, lsl r9
   14f64:	cmp	r1, #1
   14f68:	bxle	lr
   14f6c:	mov	r1, r2
   14f70:	mov	r2, #1
   14f74:	b	14b60 <ftello64@plt+0x3490>
   14f78:	b	14f64 <ftello64@plt+0x3894>
   14f7c:	cmp	r1, #1
   14f80:	bxle	lr
   14f84:	mov	r1, r2
   14f88:	mov	r2, #1
   14f8c:	b	14b60 <ftello64@plt+0x3490>
   14f90:	push	{r4, r5, r6, lr}
   14f94:	mov	r4, r0
   14f98:	mov	r5, r1
   14f9c:	mov	r6, r2
   14fa0:	ldr	r0, [r0, #8]
   14fa4:	ldr	r2, [r4, #4]
   14fa8:	ldr	r1, [pc, #56]	; 14fe8 <ftello64@plt+0x3918>
   14fac:	bl	183f8 <argp_parse@@Base+0xfa0>
   14fb0:	cmp	r0, #0
   14fb4:	blt	14fd4 <ftello64@plt+0x3904>
   14fb8:	cmp	r5, #0
   14fbc:	pople	{r4, r5, r6, pc}
   14fc0:	mov	r1, r6
   14fc4:	mov	r0, r4
   14fc8:	mov	r2, #0
   14fcc:	pop	{r4, r5, r6, lr}
   14fd0:	b	14b60 <ftello64@plt+0x3490>
   14fd4:	mov	r2, r6
   14fd8:	mov	r1, r5
   14fdc:	mov	r0, r4
   14fe0:	pop	{r4, r5, r6, lr}
   14fe4:	b	14f7c <ftello64@plt+0x38ac>
   14fe8:	andeq	r8, r0, r3, lsl r9
   14fec:	push	{r4, r5, r6, lr}
   14ff0:	mov	r4, r0
   14ff4:	mov	r5, r1
   14ff8:	mov	r6, r2
   14ffc:	ldr	r0, [r0, #8]
   15000:	ldr	r2, [r4, #4]
   15004:	ldr	r1, [pc, #72]	; 15054 <ftello64@plt+0x3984>
   15008:	bl	183f8 <argp_parse@@Base+0xfa0>
   1500c:	cmp	r0, #0
   15010:	blt	15040 <ftello64@plt+0x3970>
   15014:	ldr	r3, [r4, #4]
   15018:	ldr	r3, [r3, #16]
   1501c:	cmp	r3, #0
   15020:	ble	15040 <ftello64@plt+0x3970>
   15024:	cmp	r5, #0
   15028:	pople	{r4, r5, r6, pc}
   1502c:	mov	r1, r6
   15030:	mov	r0, r4
   15034:	mov	r2, #0
   15038:	pop	{r4, r5, r6, lr}
   1503c:	b	14b60 <ftello64@plt+0x3490>
   15040:	mov	r2, r6
   15044:	mov	r1, r5
   15048:	mov	r0, r4
   1504c:	pop	{r4, r5, r6, lr}
   15050:	b	14f7c <ftello64@plt+0x38ac>
   15054:	andeq	r8, r0, sp, lsl r9
   15058:	push	{r4, r5, r6, lr}
   1505c:	mov	r4, r0
   15060:	mov	r5, r1
   15064:	mov	r6, r2
   15068:	ldr	r0, [r0, #8]
   1506c:	ldr	r2, [r4, #4]
   15070:	ldr	r1, [pc, #56]	; 150b0 <ftello64@plt+0x39e0>
   15074:	bl	183f8 <argp_parse@@Base+0xfa0>
   15078:	cmp	r0, #0
   1507c:	blt	1509c <ftello64@plt+0x39cc>
   15080:	cmp	r5, #0
   15084:	pople	{r4, r5, r6, pc}
   15088:	mov	r1, r6
   1508c:	mov	r0, r4
   15090:	mov	r2, #0
   15094:	pop	{r4, r5, r6, lr}
   15098:	b	14b60 <ftello64@plt+0x3490>
   1509c:	mov	r2, r6
   150a0:	mov	r1, r5
   150a4:	mov	r0, r4
   150a8:	pop	{r4, r5, r6, lr}
   150ac:	b	14f7c <ftello64@plt+0x38ac>
   150b0:	andeq	r8, r0, r1, lsr #18
   150b4:	push	{r4, r5, r6, lr}
   150b8:	mov	r4, r0
   150bc:	mov	r5, r1
   150c0:	mov	r6, r2
   150c4:	ldr	r0, [r0, #8]
   150c8:	ldr	r2, [r4, #4]
   150cc:	ldr	r1, [pc, #56]	; 1510c <ftello64@plt+0x3a3c>
   150d0:	bl	183f8 <argp_parse@@Base+0xfa0>
   150d4:	cmp	r0, #0
   150d8:	blt	150f8 <ftello64@plt+0x3a28>
   150dc:	cmp	r5, #0
   150e0:	pople	{r4, r5, r6, pc}
   150e4:	mov	r1, r6
   150e8:	mov	r0, r4
   150ec:	mov	r2, #0
   150f0:	pop	{r4, r5, r6, lr}
   150f4:	b	14b60 <ftello64@plt+0x3490>
   150f8:	mov	r2, r6
   150fc:	mov	r1, r5
   15100:	mov	r0, r4
   15104:	pop	{r4, r5, r6, lr}
   15108:	b	14f7c <ftello64@plt+0x38ac>
   1510c:	andeq	r8, r0, fp, lsl r9
   15110:	push	{r4, r5, r6, lr}
   15114:	mov	r4, r0
   15118:	mov	r5, r1
   1511c:	mov	r6, r2
   15120:	ldr	r0, [r0, #8]
   15124:	ldr	r2, [r4, #4]
   15128:	ldr	r1, [pc, #56]	; 15168 <ftello64@plt+0x3a98>
   1512c:	bl	183f8 <argp_parse@@Base+0xfa0>
   15130:	cmp	r0, #0
   15134:	blt	15154 <ftello64@plt+0x3a84>
   15138:	cmp	r5, #0
   1513c:	pople	{r4, r5, r6, pc}
   15140:	mov	r1, r6
   15144:	mov	r0, r4
   15148:	mov	r2, #0
   1514c:	pop	{r4, r5, r6, lr}
   15150:	b	14b60 <ftello64@plt+0x3490>
   15154:	mov	r2, r6
   15158:	mov	r1, r5
   1515c:	mov	r0, r4
   15160:	pop	{r4, r5, r6, lr}
   15164:	b	14f7c <ftello64@plt+0x38ac>
   15168:	andeq	r8, r0, r5, lsl r9
   1516c:	push	{r4, r5, r6, lr}
   15170:	mov	r4, r0
   15174:	mov	r5, r1
   15178:	mov	r6, r2
   1517c:	ldr	r0, [r0, #8]
   15180:	ldr	r2, [r4, #4]
   15184:	ldr	r1, [pc, #56]	; 151c4 <ftello64@plt+0x3af4>
   15188:	bl	183f8 <argp_parse@@Base+0xfa0>
   1518c:	cmp	r0, #0
   15190:	blt	151b0 <ftello64@plt+0x3ae0>
   15194:	cmp	r5, #0
   15198:	pople	{r4, r5, r6, pc}
   1519c:	mov	r1, r6
   151a0:	mov	r0, r4
   151a4:	mov	r2, #0
   151a8:	pop	{r4, r5, r6, lr}
   151ac:	b	14b60 <ftello64@plt+0x3490>
   151b0:	mov	r2, r6
   151b4:	mov	r1, r5
   151b8:	mov	r0, r4
   151bc:	pop	{r4, r5, r6, lr}
   151c0:	b	14f7c <ftello64@plt+0x38ac>
   151c4:	andeq	r8, r0, r0, ror r9
   151c8:	cmp	r1, #0
   151cc:	bxle	lr
   151d0:	mov	r1, r2
   151d4:	mov	r2, #0
   151d8:	b	14b60 <ftello64@plt+0x3490>
   151dc:	ldr	r3, [r0, #4]
   151e0:	ldr	r3, [r3, #20]
   151e4:	cmp	r3, #0
   151e8:	beq	151f0 <ftello64@plt+0x3b20>
   151ec:	b	151c8 <ftello64@plt+0x3af8>
   151f0:	cmp	r1, #1
   151f4:	bxle	lr
   151f8:	push	{lr}		; (str lr, [sp, #-4]!)
   151fc:	mov	r1, r2
   15200:	pop	{lr}		; (ldr lr, [sp], #4)
   15204:	mov	r2, #1
   15208:	b	14b60 <ftello64@plt+0x3490>
   1520c:	ldr	r3, [r0, #4]
   15210:	ldr	r3, [r3, #16]
   15214:	cmp	r3, #0
   15218:	beq	15220 <ftello64@plt+0x3b50>
   1521c:	b	151c8 <ftello64@plt+0x3af8>
   15220:	cmp	r1, #1
   15224:	bxle	lr
   15228:	push	{lr}		; (str lr, [sp, #-4]!)
   1522c:	mov	r1, r2
   15230:	pop	{lr}		; (ldr lr, [sp], #4)
   15234:	mov	r2, #1
   15238:	b	14b60 <ftello64@plt+0x3490>
   1523c:	ldr	r3, [r0, #4]
   15240:	ldrh	r3, [r3, #24]
   15244:	cmp	r3, #255	; 0xff
   15248:	bls	15250 <ftello64@plt+0x3b80>
   1524c:	b	151c8 <ftello64@plt+0x3af8>
   15250:	cmp	r1, #1
   15254:	bxle	lr
   15258:	push	{lr}		; (str lr, [sp, #-4]!)
   1525c:	mov	r1, r2
   15260:	pop	{lr}		; (ldr lr, [sp], #4)
   15264:	mov	r2, #1
   15268:	b	14b60 <ftello64@plt+0x3490>
   1526c:	ldr	r3, [r0, #4]
   15270:	ldrb	r3, [r3, #26]
   15274:	cmp	r3, #0
   15278:	beq	15280 <ftello64@plt+0x3bb0>
   1527c:	b	151c8 <ftello64@plt+0x3af8>
   15280:	cmp	r1, #1
   15284:	bxle	lr
   15288:	push	{lr}		; (str lr, [sp, #-4]!)
   1528c:	mov	r1, r2
   15290:	pop	{lr}		; (ldr lr, [sp], #4)
   15294:	mov	r2, #1
   15298:	b	14b60 <ftello64@plt+0x3490>
   1529c:	ldr	r3, [r0, #4]
   152a0:	ldrb	r3, [r3, #27]
   152a4:	cmp	r3, #0
   152a8:	beq	152b0 <ftello64@plt+0x3be0>
   152ac:	b	151c8 <ftello64@plt+0x3af8>
   152b0:	cmp	r1, #1
   152b4:	bxle	lr
   152b8:	push	{lr}		; (str lr, [sp, #-4]!)
   152bc:	mov	r1, r2
   152c0:	pop	{lr}		; (ldr lr, [sp], #4)
   152c4:	mov	r2, #1
   152c8:	b	14b60 <ftello64@plt+0x3490>
   152cc:	cmp	r1, #0
   152d0:	bxeq	lr
   152d4:	push	{r4, r5, r6, r7, r8, lr}
   152d8:	mov	r6, r2
   152dc:	ldr	r5, [pc, #64]	; 15324 <ftello64@plt+0x3c54>
   152e0:	mov	r4, r0
   152e4:	ldr	r8, [r0]
   152e8:	ldr	r3, [r5]
   152ec:	cmp	r3, #0
   152f0:	movne	r7, #0
   152f4:	beq	1531c <ftello64@plt+0x3c4c>
   152f8:	str	r3, [r4]
   152fc:	ldr	r3, [r6]
   15300:	mov	r1, r7
   15304:	str	r3, [r4, #16]
   15308:	mov	r0, r4
   1530c:	bl	14838 <ftello64@plt+0x3168>
   15310:	ldr	r3, [r5, #12]!
   15314:	cmp	r3, #0
   15318:	bne	152f8 <ftello64@plt+0x3c28>
   1531c:	str	r8, [r4]
   15320:	pop	{r4, r5, r6, r7, r8, pc}
   15324:			; <UNDEFINED> instruction: 0x000322b4
   15328:	cmp	r1, #1
   1532c:	bxle	lr
   15330:	push	{r4, r5, r6, r7, lr}
   15334:	mov	r6, r2
   15338:	sub	sp, sp, #12
   1533c:	mov	r5, r0
   15340:	mov	r2, #10
   15344:	add	r1, sp, #4
   15348:	ldr	r0, [r6]
   1534c:	bl	11538 <strtoul@plt>
   15350:	ldr	r3, [sp, #4]
   15354:	ldrb	r3, [r3]
   15358:	cmp	r3, #0
   1535c:	mov	r4, r0
   15360:	bne	1539c <ftello64@plt+0x3ccc>
   15364:	cmp	r4, #0
   15368:	sub	r4, r4, #1
   1536c:	beq	15394 <ftello64@plt+0x3cc4>
   15370:	mov	r7, #0
   15374:	ldr	r3, [r6, #4]
   15378:	sub	r4, r4, #1
   1537c:	str	r3, [r5, #16]
   15380:	mov	r1, r7
   15384:	mov	r0, r5
   15388:	bl	14838 <ftello64@plt+0x3168>
   1538c:	cmn	r4, #1
   15390:	bne	15374 <ftello64@plt+0x3ca4>
   15394:	add	sp, sp, #12
   15398:	pop	{r4, r5, r6, r7, pc}
   1539c:	ldr	r2, [pc, #24]	; 153bc <ftello64@plt+0x3cec>
   153a0:	mov	r1, #0
   153a4:	mov	r0, #1
   153a8:	bl	114a8 <error@plt>
   153ac:	cmp	r4, #0
   153b0:	sub	r4, r4, #1
   153b4:	bne	15370 <ftello64@plt+0x3ca0>
   153b8:	b	15394 <ftello64@plt+0x3cc4>
   153bc:	andeq	pc, r1, ip, asr sp	; <UNPREDICTABLE>
   153c0:	cmp	r1, #1
   153c4:	bxle	lr
   153c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153cc:	mov	r3, #0
   153d0:	ldr	r7, [pc, #128]	; 15458 <ftello64@plt+0x3d88>
   153d4:	mov	sl, r2
   153d8:	mov	r4, r0
   153dc:	mov	r9, r1
   153e0:	mov	r5, #1
   153e4:	mov	r8, r3
   153e8:	mov	r6, r2
   153ec:	ldr	fp, [r7]
   153f0:	str	r3, [r7]
   153f4:	ldr	r3, [r6, #4]!
   153f8:	add	r5, r5, #1
   153fc:	str	r3, [r4, #16]
   15400:	mov	r1, r8
   15404:	mov	r0, r4
   15408:	bl	14838 <ftello64@plt+0x3168>
   1540c:	cmp	r9, r5
   15410:	beq	15450 <ftello64@plt+0x3d80>
   15414:	ldr	r3, [r7]
   15418:	cmp	r3, #0
   1541c:	beq	153f4 <ftello64@plt+0x3d24>
   15420:	ldr	fp, [sl]
   15424:	ldrb	r1, [fp]
   15428:	cmp	r1, #0
   1542c:	beq	15444 <ftello64@plt+0x3d74>
   15430:	mov	r0, r4
   15434:	bl	13a20 <ftello64@plt+0x2350>
   15438:	ldrb	r1, [fp, #1]!
   1543c:	cmp	r1, #0
   15440:	bne	15430 <ftello64@plt+0x3d60>
   15444:	str	r8, [r7]
   15448:	mov	fp, #1
   1544c:	b	153f4 <ftello64@plt+0x3d24>
   15450:	str	fp, [r7]
   15454:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15458:	andeq	r2, r3, r8, lsl #24
   1545c:	push	{r4, r5, r6, r7, r8, lr}
   15460:	subs	r6, r1, #0
   15464:	pople	{r4, r5, r6, r7, r8, pc}
   15468:	mov	r7, r0
   1546c:	sub	r5, r2, #4
   15470:	mov	r4, #0
   15474:	b	15480 <ftello64@plt+0x3db0>
   15478:	cmp	r6, r4
   1547c:	beq	154ac <ftello64@plt+0x3ddc>
   15480:	ldr	r0, [r5, #4]!
   15484:	bl	129a8 <ftello64@plt+0x12d8>
   15488:	add	r4, r4, #1
   1548c:	cmp	r0, #0
   15490:	beq	15478 <ftello64@plt+0x3da8>
   15494:	ldr	r3, [r0, #8]
   15498:	mov	r1, #0
   1549c:	mov	r0, r7
   154a0:	str	r3, [r7, #16]
   154a4:	pop	{r4, r5, r6, r7, r8, lr}
   154a8:	b	14838 <ftello64@plt+0x3168>
   154ac:	pop	{r4, r5, r6, r7, r8, pc}
   154b0:	ldr	ip, [pc, #108]	; 15524 <ftello64@plt+0x3e54>
   154b4:	push	{r4, lr}
   154b8:	mov	r4, r1
   154bc:	ldr	r1, [ip]
   154c0:	mov	lr, r0
   154c4:	cmp	r1, #0
   154c8:	sub	sp, sp, #24
   154cc:	ldreq	r1, [pc, #84]	; 15528 <ftello64@plt+0x3e58>
   154d0:	str	r4, [sp]
   154d4:	str	r2, [sp, #4]
   154d8:	ldreq	r1, [r1]
   154dc:	str	r3, [sp, #16]
   154e0:	streq	r1, [ip]
   154e4:	ldr	r1, [pc, #64]	; 1552c <ftello64@plt+0x3e5c>
   154e8:	mov	ip, #0
   154ec:	str	lr, [sp, #8]
   154f0:	ldr	r0, [r1]
   154f4:	str	ip, [sp, #20]
   154f8:	cmp	r0, #0
   154fc:	moveq	r0, #1
   15500:	movne	r1, #0
   15504:	streq	r0, [r1]
   15508:	streq	r0, [sp, #12]
   1550c:	strne	r1, [sp, #12]
   15510:	mov	r0, sp
   15514:	mov	r1, ip
   15518:	bl	14838 <ftello64@plt+0x3168>
   1551c:	add	sp, sp, #24
   15520:	pop	{r4, pc}
   15524:	andeq	r2, r3, r4, lsl ip
   15528:	andeq	r2, r3, ip, asr #22
   1552c:	andeq	r2, r3, ip, lsr #23
   15530:	push	{lr}		; (str lr, [sp, #-4]!)
   15534:	sub	sp, sp, #12
   15538:	ldrb	lr, [r1, #3]
   1553c:	ldrb	ip, [r1]
   15540:	ldrb	r3, [r1, #1]
   15544:	ldrb	r2, [r1, #2]
   15548:	ldr	r0, [pc, #48]	; 15580 <ftello64@plt+0x3eb0>
   1554c:	mov	r1, lr
   15550:	str	ip, [sp]
   15554:	bl	113b8 <printf@plt>
   15558:	ldr	r3, [pc, #36]	; 15584 <ftello64@plt+0x3eb4>
   1555c:	ldr	r1, [pc, #36]	; 15588 <ftello64@plt+0x3eb8>
   15560:	mov	ip, #1
   15564:	ldr	r2, [r3]
   15568:	ldr	r3, [r2]
   1556c:	add	r0, r3, r0
   15570:	str	r0, [r2]
   15574:	str	ip, [r1]
   15578:	add	sp, sp, #12
   1557c:	pop	{pc}		; (ldr pc, [sp], #4)
   15580:	andeq	r0, r2, r8, lsr #32
   15584:	andeq	r2, r3, r8, lsl r5
   15588:	andeq	r2, r3, r8, lsl #24
   1558c:	push	{r4, lr}
   15590:	sub	sp, sp, #8
   15594:	ldrb	lr, [r1, #4]
   15598:	ldrb	ip, [r1, #3]
   1559c:	ldrb	r4, [r1]
   155a0:	ldrb	r3, [r1, #2]
   155a4:	ldrb	r2, [r1, #1]
   155a8:	ldr	r0, [pc, #48]	; 155e0 <ftello64@plt+0x3f10>
   155ac:	mov	r1, r4
   155b0:	stm	sp, {ip, lr}
   155b4:	bl	113b8 <printf@plt>
   155b8:	ldr	r3, [pc, #36]	; 155e4 <ftello64@plt+0x3f14>
   155bc:	ldr	r1, [pc, #36]	; 155e8 <ftello64@plt+0x3f18>
   155c0:	mov	ip, #1
   155c4:	ldr	r2, [r3]
   155c8:	ldr	r3, [r2]
   155cc:	add	r0, r3, r0
   155d0:	str	r0, [r2]
   155d4:	str	ip, [r1]
   155d8:	add	sp, sp, #8
   155dc:	pop	{r4, pc}
   155e0:	andeq	r0, r2, ip, lsr r0
   155e4:	andeq	r2, r3, r8, lsl r5
   155e8:	andeq	r2, r3, r8, lsl #24
   155ec:	ldrsh	r1, [r1]
   155f0:	push	{r4, lr}
   155f4:	ldr	r0, [pc, #36]	; 15620 <ftello64@plt+0x3f50>
   155f8:	bl	113b8 <printf@plt>
   155fc:	ldr	r3, [pc, #32]	; 15624 <ftello64@plt+0x3f54>
   15600:	ldr	r1, [pc, #32]	; 15628 <ftello64@plt+0x3f58>
   15604:	mov	ip, #1
   15608:	ldr	r2, [r3]
   1560c:	ldr	r3, [r2]
   15610:	add	r0, r3, r0
   15614:	str	r0, [r2]
   15618:	str	ip, [r1]
   1561c:	pop	{r4, pc}
   15620:	andeq	pc, r1, ip, ror #23
   15624:	andeq	r2, r3, r8, lsl r5
   15628:	andeq	r2, r3, r8, lsl #24
   1562c:	push	{r4, lr}
   15630:	ldr	r0, [pc, #40]	; 15660 <ftello64@plt+0x3f90>
   15634:	ldrb	r1, [r1]
   15638:	bl	113b8 <printf@plt>
   1563c:	ldr	r3, [pc, #32]	; 15664 <ftello64@plt+0x3f94>
   15640:	ldr	r1, [pc, #32]	; 15668 <ftello64@plt+0x3f98>
   15644:	mov	ip, #1
   15648:	ldr	r2, [r3]
   1564c:	ldr	r3, [r2]
   15650:	add	r0, r3, r0
   15654:	str	r0, [r2]
   15658:	str	ip, [r1]
   1565c:	pop	{r4, pc}
   15660:	andeq	r0, r2, ip, asr #32
   15664:	andeq	r2, r3, r8, lsl r5
   15668:	andeq	r2, r3, r8, lsl #24
   1566c:	push	{r4, r5, lr}
   15670:	sub	sp, sp, #20
   15674:	ldrb	lr, [r1, #4]
   15678:	ldrb	ip, [r1, #3]
   1567c:	ldrb	r5, [r1]
   15680:	ldrb	r4, [r1, #5]
   15684:	ldrb	r3, [r1, #2]
   15688:	ldrb	r2, [r1, #1]
   1568c:	ldr	r0, [pc, #52]	; 156c8 <ftello64@plt+0x3ff8>
   15690:	mov	r1, r5
   15694:	stm	sp, {ip, lr}
   15698:	str	r4, [sp, #8]
   1569c:	bl	113b8 <printf@plt>
   156a0:	ldr	r3, [pc, #36]	; 156cc <ftello64@plt+0x3ffc>
   156a4:	ldr	r1, [pc, #36]	; 156d0 <ftello64@plt+0x4000>
   156a8:	mov	ip, #1
   156ac:	ldr	r2, [r3]
   156b0:	ldr	r3, [r2]
   156b4:	add	r0, r3, r0
   156b8:	str	r0, [r2]
   156bc:	str	ip, [r1]
   156c0:	add	sp, sp, #20
   156c4:	pop	{r4, r5, pc}
   156c8:	andeq	r0, r2, r4, asr r0
   156cc:	andeq	r2, r3, r8, lsl r5
   156d0:	andeq	r2, r3, r8, lsl #24
   156d4:	push	{r4, r5, r6, r7, r8, lr}
   156d8:	mov	r7, r1
   156dc:	mov	r5, r0
   156e0:	sub	r4, r1, #1
   156e4:	add	r6, r1, #5
   156e8:	ldrb	r3, [r4, #1]!
   156ec:	mov	r0, r5
   156f0:	lsr	r3, r3, #1
   156f4:	cmp	r3, #32
   156f8:	mov	r1, r3
   156fc:	beq	1570c <ftello64@plt+0x403c>
   15700:	bl	13a20 <ftello64@plt+0x2350>
   15704:	cmp	r6, r4
   15708:	bne	156e8 <ftello64@plt+0x4018>
   1570c:	ldrb	r1, [r7, #6]
   15710:	asr	r1, r1, #1
   15714:	ands	r1, r1, #15
   15718:	popeq	{r4, r5, r6, r7, r8, pc}
   1571c:	ldr	r0, [pc, #36]	; 15748 <ftello64@plt+0x4078>
   15720:	bl	113b8 <printf@plt>
   15724:	ldr	r3, [pc, #32]	; 1574c <ftello64@plt+0x407c>
   15728:	ldr	r1, [pc, #32]	; 15750 <ftello64@plt+0x4080>
   1572c:	mov	ip, #1
   15730:	ldr	r2, [r3]
   15734:	ldr	r3, [r2]
   15738:	add	r0, r3, r0
   1573c:	str	r0, [r2]
   15740:	str	ip, [r1]
   15744:	pop	{r4, r5, r6, r7, r8, pc}
   15748:	andeq	r0, r2, r4, ror r0
   1574c:	andeq	r2, r3, r8, lsl r5
   15750:	andeq	r2, r3, r8, lsl #24
   15754:	push	{r4, r5, lr}
   15758:	sub	sp, sp, #60	; 0x3c
   1575c:	add	r2, r1, #64	; 0x40
   15760:	add	r3, r1, #100	; 0x64
   15764:	add	lr, r1, #52	; 0x34
   15768:	add	ip, r1, #44	; 0x2c
   1576c:	str	r2, [sp, #52]	; 0x34
   15770:	add	r2, r1, #16
   15774:	add	r5, r1, #68	; 0x44
   15778:	add	r4, r1, #104	; 0x68
   1577c:	str	r3, [sp, #48]	; 0x30
   15780:	str	lr, [sp, #36]	; 0x24
   15784:	add	r3, r1, #32
   15788:	add	lr, r1, #84	; 0x54
   1578c:	str	ip, [sp, #32]
   15790:	str	r2, [sp, #28]
   15794:	add	ip, r1, #88	; 0x58
   15798:	add	r2, r1, #48	; 0x30
   1579c:	str	r5, [sp, #44]	; 0x2c
   157a0:	str	r4, [sp, #40]	; 0x28
   157a4:	add	r5, r1, #56	; 0x38
   157a8:	add	r4, r1, #60	; 0x3c
   157ac:	str	r3, [sp, #24]
   157b0:	add	r3, r1, #40	; 0x28
   157b4:	stmib	sp, {r2, ip, lr}
   157b8:	add	r2, r1, #24
   157bc:	str	r3, [sp]
   157c0:	str	r5, [sp, #20]
   157c4:	add	r3, r1, #8
   157c8:	str	r4, [sp, #16]
   157cc:	ldr	r1, [pc, #20]	; 157e8 <ftello64@plt+0x4118>
   157d0:	bl	1161c <sscanf@plt>
   157d4:	sub	r0, r0, #16
   157d8:	clz	r0, r0
   157dc:	lsr	r0, r0, #5
   157e0:	add	sp, sp, #60	; 0x3c
   157e4:	pop	{r4, r5, pc}
   157e8:	andeq	r0, r2, r8, ror r0
   157ec:	push	{r4, r5, lr}
   157f0:	mov	r4, r1
   157f4:	sub	sp, sp, #52	; 0x34
   157f8:	add	lr, r1, #100	; 0x64
   157fc:	add	ip, r1, #68	; 0x44
   15800:	add	r2, r4, #52	; 0x34
   15804:	add	r3, r4, #44	; 0x2c
   15808:	add	r1, r1, #104	; 0x68
   1580c:	str	lr, [sp, #40]	; 0x28
   15810:	str	ip, [sp, #36]	; 0x24
   15814:	add	lr, r4, #32
   15818:	add	ip, r4, #84	; 0x54
   1581c:	str	r1, [sp, #32]
   15820:	str	r2, [sp, #28]
   15824:	add	r1, r4, #88	; 0x58
   15828:	add	r2, r4, #48	; 0x30
   1582c:	str	r3, [sp, #24]
   15830:	add	r5, r4, #16
   15834:	add	r3, r4, #40	; 0x28
   15838:	str	r1, [sp, #8]
   1583c:	str	r2, [sp, #4]
   15840:	str	r3, [sp]
   15844:	str	r5, [sp, #20]
   15848:	add	r3, r4, #8
   1584c:	str	lr, [sp, #16]
   15850:	str	ip, [sp, #12]
   15854:	add	r2, r4, #24
   15858:	ldr	r1, [pc, #28]	; 1587c <ftello64@plt+0x41ac>
   1585c:	bl	1161c <sscanf@plt>
   15860:	mov	r3, #0
   15864:	str	r3, [r4, #56]	; 0x38
   15868:	sub	r0, r0, #13
   1586c:	clz	r0, r0
   15870:	lsr	r0, r0, #5
   15874:	add	sp, sp, #52	; 0x34
   15878:	pop	{r4, r5, pc}
   1587c:	strheq	r0, [r2], -ip
   15880:	push	{r4, r5, lr}
   15884:	mov	r4, r1
   15888:	sub	sp, sp, #44	; 0x2c
   1588c:	add	r2, r4, #68	; 0x44
   15890:	add	r3, r4, #104	; 0x68
   15894:	add	r1, r1, #100	; 0x64
   15898:	add	lr, r4, #44	; 0x2c
   1589c:	add	ip, r4, #16
   158a0:	str	r1, [sp, #32]
   158a4:	str	r2, [sp, #28]
   158a8:	add	r1, r4, #84	; 0x54
   158ac:	add	r2, r4, #88	; 0x58
   158b0:	str	r3, [sp, #24]
   158b4:	add	r5, r4, #52	; 0x34
   158b8:	add	r3, r4, #48	; 0x30
   158bc:	str	r1, [sp, #8]
   158c0:	str	r2, [sp, #4]
   158c4:	str	r3, [sp]
   158c8:	add	r2, r4, #8
   158cc:	add	r3, r4, #40	; 0x28
   158d0:	str	r5, [sp, #20]
   158d4:	str	lr, [sp, #16]
   158d8:	str	ip, [sp, #12]
   158dc:	ldr	r1, [pc, #44]	; 15910 <ftello64@plt+0x4240>
   158e0:	bl	1161c <sscanf@plt>
   158e4:	mov	r2, #0
   158e8:	mov	r3, #0
   158ec:	mov	r1, #0
   158f0:	str	r1, [r4, #56]	; 0x38
   158f4:	strd	r2, [r4, #24]
   158f8:	strd	r2, [r4, #32]
   158fc:	sub	r0, r0, #11
   15900:	clz	r0, r0
   15904:	lsr	r0, r0, #5
   15908:	add	sp, sp, #44	; 0x2c
   1590c:	pop	{r4, r5, pc}
   15910:	strdeq	r0, [r2], -r4
   15914:	mov	r1, #2
   15918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1591c:	mov	r0, r1
   15920:	sub	sp, sp, #52	; 0x34
   15924:	mov	r2, #0
   15928:	bl	11688 <socket@plt>
   1592c:	subs	r8, r0, #0
   15930:	blt	15abc <ftello64@plt+0x43ec>
   15934:	add	r2, sp, #12
   15938:	mov	r1, #0
   1593c:	ldr	r0, [pc, #432]	; 15af4 <ftello64@plt+0x4424>
   15940:	bl	18acc <_obstack_memory_used@@Base+0x38c>
   15944:	subs	r7, r0, #0
   15948:	beq	15abc <ftello64@plt+0x43ec>
   1594c:	ldr	r9, [sp, #12]
   15950:	mov	r5, #0
   15954:	mov	r6, #58	; 0x3a
   15958:	mov	r0, r7
   1595c:	sub	r2, r0, r7
   15960:	sub	r2, r9, r2
   15964:	add	r0, r0, #1
   15968:	mov	r1, r6
   1596c:	bl	115bc <memchr@plt>
   15970:	add	r5, r5, #1
   15974:	cmp	r0, #0
   15978:	bne	1595c <ftello64@plt+0x428c>
   1597c:	mov	r4, r0
   15980:	lsl	r0, r5, #3
   15984:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   15988:	subs	r3, r0, #0
   1598c:	str	r3, [sp, #4]
   15990:	beq	15ad0 <ftello64@plt+0x4400>
   15994:	ldr	r2, [sp, #12]
   15998:	mov	r1, #58	; 0x3a
   1599c:	mov	r0, r7
   159a0:	bl	115bc <memchr@plt>
   159a4:	subs	r9, r0, #0
   159a8:	beq	15a64 <ftello64@plt+0x4394>
   159ac:	ldr	r3, [sp, #4]
   159b0:	ldr	fp, [pc, #320]	; 15af8 <ftello64@plt+0x4428>
   159b4:	mov	sl, r4
   159b8:	mov	r5, r3
   159bc:	add	r6, r3, #4
   159c0:	ldrb	r3, [r9, #-1]
   159c4:	strb	sl, [r9]
   159c8:	sub	r0, r9, #1
   159cc:	cmp	r3, #10
   159d0:	cmpne	r3, #32
   159d4:	beq	159e8 <ftello64@plt+0x4318>
   159d8:	ldrb	r3, [r0, #-1]!
   159dc:	cmp	r3, #32
   159e0:	cmpne	r3, #10
   159e4:	bne	159d8 <ftello64@plt+0x4308>
   159e8:	add	r0, r0, #1
   159ec:	bl	1143c <strdup@plt>
   159f0:	add	r4, r4, #1
   159f4:	mov	r1, r0
   159f8:	str	r0, [r5, #4]
   159fc:	str	r4, [r6, #-4]
   15a00:	add	r0, sp, #16
   15a04:	bl	11490 <strcpy@plt>
   15a08:	mvn	r3, #0
   15a0c:	add	r2, sp, #16
   15a10:	mov	r1, fp
   15a14:	mov	r0, r8
   15a18:	str	r3, [sp, #32]
   15a1c:	bl	183f8 <argp_parse@@Base+0xfa0>
   15a20:	ldr	r2, [r5, #4]
   15a24:	cmp	r0, #0
   15a28:	ldrge	r3, [sp, #32]
   15a2c:	strge	r3, [r6, #-4]
   15a30:	cmp	r2, #0
   15a34:	beq	15a8c <ftello64@plt+0x43bc>
   15a38:	ldr	r2, [sp, #12]
   15a3c:	sub	r3, r9, r7
   15a40:	mov	r0, r9
   15a44:	sub	r2, r2, r3
   15a48:	mov	r1, #58	; 0x3a
   15a4c:	bl	115bc <memchr@plt>
   15a50:	add	r5, r5, #8
   15a54:	add	r6, r6, #8
   15a58:	subs	r9, r0, #0
   15a5c:	bne	159c0 <ftello64@plt+0x42f0>
   15a60:	lsl	r4, r4, #3
   15a64:	ldr	r1, [sp, #4]
   15a68:	mov	r3, #0
   15a6c:	add	r2, r1, r4
   15a70:	str	r3, [r1, r4]
   15a74:	mov	r0, r7
   15a78:	str	r3, [r2, #4]
   15a7c:	bl	182f0 <argp_parse@@Base+0xe98>
   15a80:	ldr	r0, [sp, #4]
   15a84:	add	sp, sp, #52	; 0x34
   15a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a8c:	str	r2, [sp, #4]
   15a90:	bl	11568 <__errno_location@plt>
   15a94:	mov	r4, r0
   15a98:	mov	r0, r8
   15a9c:	ldr	r5, [r4]
   15aa0:	bl	116b8 <close@plt>
   15aa4:	mov	r0, r7
   15aa8:	bl	182f0 <argp_parse@@Base+0xe98>
   15aac:	ldr	r0, [sp, #4]
   15ab0:	str	r5, [r4]
   15ab4:	add	sp, sp, #52	; 0x34
   15ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15abc:	mov	r3, #0
   15ac0:	str	r3, [sp, #4]
   15ac4:	ldr	r0, [sp, #4]
   15ac8:	add	sp, sp, #52	; 0x34
   15acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ad0:	bl	11568 <__errno_location@plt>
   15ad4:	mov	r4, r0
   15ad8:	mov	r0, r8
   15adc:	ldr	r5, [r4]
   15ae0:	bl	116b8 <close@plt>
   15ae4:	mov	r0, r7
   15ae8:	bl	182f0 <argp_parse@@Base+0xe98>
   15aec:	str	r5, [r4]
   15af0:	b	15a80 <ftello64@plt+0x43b0>
   15af4:	andeq	r0, r2, r4, lsr #2
   15af8:	andeq	r8, r0, r3, lsr r9
   15afc:	ldr	r3, [pc, #60]	; 15b40 <ftello64@plt+0x4470>
   15b00:	ldr	r2, [r3]
   15b04:	cmp	r2, #0
   15b08:	beq	15b34 <ftello64@plt+0x4464>
   15b0c:	ldr	r2, [r3, #8]
   15b10:	cmp	r0, r2
   15b14:	bne	15b28 <ftello64@plt+0x4458>
   15b18:	b	15b38 <ftello64@plt+0x4468>
   15b1c:	ldr	r2, [r3, #8]
   15b20:	cmp	r2, r0
   15b24:	beq	15b38 <ftello64@plt+0x4468>
   15b28:	ldr	r2, [r3, #16]!
   15b2c:	cmp	r2, #0
   15b30:	bne	15b1c <ftello64@plt+0x444c>
   15b34:	mov	r3, r2
   15b38:	mov	r0, r3
   15b3c:	bx	lr
   15b40:	andeq	r2, r3, r4, asr #15
   15b44:	ldr	r3, [pc, #688]	; 15dfc <ftello64@plt+0x472c>
   15b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b4c:	mov	r4, r0
   15b50:	ldr	r3, [r3]
   15b54:	sub	sp, sp, #28
   15b58:	cmp	r3, #0
   15b5c:	beq	15ba8 <ftello64@plt+0x44d8>
   15b60:	ldr	r3, [pc, #664]	; 15e00 <ftello64@plt+0x4730>
   15b64:	str	r3, [sp, #4]
   15b68:	ldr	r3, [sp, #4]
   15b6c:	ldr	r5, [r3]
   15b70:	cmp	r5, #0
   15b74:	bne	15b88 <ftello64@plt+0x44b8>
   15b78:	b	15b9c <ftello64@plt+0x44cc>
   15b7c:	ldr	r5, [r5]
   15b80:	cmp	r5, #0
   15b84:	beq	15b9c <ftello64@plt+0x44cc>
   15b88:	mov	r1, r4
   15b8c:	ldr	r0, [r5, #4]
   15b90:	bl	113a0 <strcmp@plt>
   15b94:	cmp	r0, #0
   15b98:	bne	15b7c <ftello64@plt+0x44ac>
   15b9c:	mov	r0, r5
   15ba0:	add	sp, sp, #28
   15ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba8:	ldr	r1, [pc, #596]	; 15e04 <ftello64@plt+0x4734>
   15bac:	ldr	r0, [pc, #596]	; 15e08 <ftello64@plt+0x4738>
   15bb0:	str	r3, [sp, #16]
   15bb4:	str	r3, [sp, #20]
   15bb8:	bl	1164c <fopen64@plt>
   15bbc:	subs	r3, r0, #0
   15bc0:	str	r3, [sp, #8]
   15bc4:	beq	15d6c <ftello64@plt+0x469c>
   15bc8:	add	r1, sp, #20
   15bcc:	add	r0, sp, #16
   15bd0:	ldr	r3, [sp, #8]
   15bd4:	mov	r2, #10
   15bd8:	bl	11388 <__getdelim@plt>
   15bdc:	cmp	r0, #0
   15be0:	blt	15d14 <ftello64@plt+0x4644>
   15be4:	ldr	r3, [sp, #8]
   15be8:	mov	r2, #10
   15bec:	add	r1, sp, #20
   15bf0:	add	r0, sp, #16
   15bf4:	bl	11388 <__getdelim@plt>
   15bf8:	cmp	r0, #0
   15bfc:	blt	15d14 <ftello64@plt+0x4644>
   15c00:	ldr	r5, [sp, #16]
   15c04:	ldr	r1, [pc, #512]	; 15e0c <ftello64@plt+0x473c>
   15c08:	mov	r0, r5
   15c0c:	bl	11364 <strstr@plt>
   15c10:	cmp	r0, #0
   15c14:	movne	sl, #2
   15c18:	beq	15de4 <ftello64@plt+0x4714>
   15c1c:	ldr	fp, [pc, #492]	; 15e10 <ftello64@plt+0x4740>
   15c20:	ldr	r9, [sp, #8]
   15c24:	ldr	r3, [pc, #468]	; 15e00 <ftello64@plt+0x4730>
   15c28:	mov	r8, #0
   15c2c:	str	r3, [sp, #4]
   15c30:	str	r4, [sp, #12]
   15c34:	mov	r3, r9
   15c38:	mov	r2, #10
   15c3c:	add	r1, sp, #20
   15c40:	add	r0, sp, #16
   15c44:	bl	11388 <__getdelim@plt>
   15c48:	cmp	r0, #0
   15c4c:	ble	15d54 <ftello64@plt+0x4684>
   15c50:	mov	r0, #120	; 0x78
   15c54:	bl	19394 <_obstack_memory_used@@Base+0xc54>
   15c58:	ldr	r4, [sp, #16]
   15c5c:	ldrb	r6, [r4]
   15c60:	cmp	r6, #0
   15c64:	mov	r5, r0
   15c68:	beq	15ca4 <ftello64@plt+0x45d4>
   15c6c:	tst	r6, #128	; 0x80
   15c70:	bne	15ca4 <ftello64@plt+0x45d4>
   15c74:	bl	11520 <__ctype_b_loc@plt>
   15c78:	ldr	r1, [r0]
   15c7c:	b	15c94 <ftello64@plt+0x45c4>
   15c80:	ldrb	r6, [r4, #1]!
   15c84:	cmp	r6, #0
   15c88:	beq	15ca4 <ftello64@plt+0x45d4>
   15c8c:	tst	r6, #128	; 0x80
   15c90:	bne	15ca4 <ftello64@plt+0x45d4>
   15c94:	lsl	r6, r6, #1
   15c98:	ldrh	r3, [r1, r6]
   15c9c:	tst	r3, #8192	; 0x2000
   15ca0:	bne	15c80 <ftello64@plt+0x45b0>
   15ca4:	mov	r1, #58	; 0x3a
   15ca8:	mov	r0, r4
   15cac:	bl	11550 <strchr@plt>
   15cb0:	subs	r7, r0, #0
   15cb4:	beq	15d90 <ftello64@plt+0x46c0>
   15cb8:	sub	r6, r7, r4
   15cbc:	add	r0, r6, #1
   15cc0:	bl	18f64 <_obstack_memory_used@@Base+0x824>
   15cc4:	mov	r1, r4
   15cc8:	mov	r2, r6
   15ccc:	str	r0, [r5, #4]
   15cd0:	bl	1140c <memcpy@plt>
   15cd4:	ldr	r3, [fp, sl, lsl #2]
   15cd8:	mov	r1, r5
   15cdc:	strb	r8, [r0, r6]
   15ce0:	add	r0, r7, #1
   15ce4:	blx	r3
   15ce8:	cmp	r0, #0
   15cec:	beq	15db8 <ftello64@plt+0x46e8>
   15cf0:	ldr	r3, [pc, #284]	; 15e14 <ftello64@plt+0x4744>
   15cf4:	str	r8, [r5]
   15cf8:	ldr	r3, [r3]
   15cfc:	cmp	r3, #0
   15d00:	ldreq	r3, [sp, #4]
   15d04:	str	r5, [r3]
   15d08:	ldr	r3, [pc, #260]	; 15e14 <ftello64@plt+0x4744>
   15d0c:	str	r5, [r3]
   15d10:	b	15c34 <ftello64@plt+0x4564>
   15d14:	bl	11568 <__errno_location@plt>
   15d18:	ldr	r1, [pc, #224]	; 15e00 <ftello64@plt+0x4730>
   15d1c:	ldr	r3, [pc, #228]	; 15e08 <ftello64@plt+0x4738>
   15d20:	ldr	r2, [pc, #240]	; 15e18 <ftello64@plt+0x4748>
   15d24:	str	r1, [sp, #4]
   15d28:	ldr	r1, [r0]
   15d2c:	mov	r0, #0
   15d30:	bl	114a8 <error@plt>
   15d34:	ldr	r0, [sp, #8]
   15d38:	bl	115c8 <fclose@plt>
   15d3c:	ldr	r0, [sp, #16]
   15d40:	bl	182f0 <argp_parse@@Base+0xe98>
   15d44:	ldr	r2, [pc, #176]	; 15dfc <ftello64@plt+0x472c>
   15d48:	mov	r3, #1
   15d4c:	str	r3, [r2]
   15d50:	b	15b68 <ftello64@plt+0x4498>
   15d54:	ldr	r4, [sp, #12]
   15d58:	ldr	r0, [sp, #8]
   15d5c:	bl	115c8 <fclose@plt>
   15d60:	ldr	r0, [sp, #16]
   15d64:	bl	182f0 <argp_parse@@Base+0xe98>
   15d68:	b	15d44 <ftello64@plt+0x4674>
   15d6c:	bl	11568 <__errno_location@plt>
   15d70:	ldr	r1, [pc, #136]	; 15e00 <ftello64@plt+0x4730>
   15d74:	ldr	r3, [pc, #140]	; 15e08 <ftello64@plt+0x4738>
   15d78:	str	r1, [sp, #4]
   15d7c:	ldr	r2, [pc, #152]	; 15e1c <ftello64@plt+0x474c>
   15d80:	ldr	r1, [r0]
   15d84:	ldr	r0, [sp, #8]
   15d88:	bl	114a8 <error@plt>
   15d8c:	b	15d44 <ftello64@plt+0x4674>
   15d90:	bl	11568 <__errno_location@plt>
   15d94:	ldr	r3, [pc, #108]	; 15e08 <ftello64@plt+0x4738>
   15d98:	ldr	r2, [pc, #120]	; 15e18 <ftello64@plt+0x4748>
   15d9c:	ldr	r4, [sp, #12]
   15da0:	ldr	r1, [r0]
   15da4:	mov	r0, r7
   15da8:	bl	114a8 <error@plt>
   15dac:	mov	r0, r5
   15db0:	bl	182f0 <argp_parse@@Base+0xe98>
   15db4:	b	15d58 <ftello64@plt+0x4688>
   15db8:	mov	r6, r0
   15dbc:	bl	11568 <__errno_location@plt>
   15dc0:	ldr	r3, [pc, #64]	; 15e08 <ftello64@plt+0x4738>
   15dc4:	ldr	r2, [pc, #76]	; 15e18 <ftello64@plt+0x4748>
   15dc8:	ldr	r4, [sp, #12]
   15dcc:	ldr	r1, [r0]
   15dd0:	mov	r0, r6
   15dd4:	bl	114a8 <error@plt>
   15dd8:	mov	r0, r5
   15ddc:	bl	182f0 <argp_parse@@Base+0xe98>
   15de0:	b	15d58 <ftello64@plt+0x4688>
   15de4:	mov	r0, r5
   15de8:	ldr	r1, [pc, #48]	; 15e20 <ftello64@plt+0x4750>
   15dec:	bl	11364 <strstr@plt>
   15df0:	adds	sl, r0, #0
   15df4:	movne	sl, #1
   15df8:	b	15c1c <ftello64@plt+0x454c>
   15dfc:			; <UNDEFINED> instruction: 0x00032bb0
   15e00:	andeq	r2, r3, ip, lsl ip
   15e04:	andeq	lr, r1, r4, lsr #13
   15e08:	andeq	r0, r2, r4, lsr #2
   15e0c:	andeq	r0, r2, r4, asr r1
   15e10:	andeq	r0, r2, ip, lsl r0
   15e14:	andeq	r2, r3, r8, lsl ip
   15e18:	andeq	r0, r2, r4, asr #2
   15e1c:	andeq	r0, r2, r4, lsr r1
   15e20:	andeq	r0, r2, r0, ror #2
   15e24:	push	{r4, r5, r6, lr}
   15e28:	mov	r4, r0
   15e2c:	ldr	r0, [r0, #4]
   15e30:	mov	r5, r1
   15e34:	mov	r6, r2
   15e38:	bl	15b44 <ftello64@plt+0x4474>
   15e3c:	mov	r2, r6
   15e40:	mov	r1, r5
   15e44:	clz	r3, r0
   15e48:	mov	r0, r4
   15e4c:	lsr	r3, r3, #5
   15e50:	pop	{r4, r5, r6, lr}
   15e54:	b	14b70 <ftello64@plt+0x34a0>
   15e58:	push	{r4, r5, r6, lr}
   15e5c:	mov	r4, r0
   15e60:	ldr	r0, [r0, #4]
   15e64:	mov	r5, r1
   15e68:	mov	r6, r2
   15e6c:	bl	15b44 <ftello64@plt+0x4474>
   15e70:	cmp	r0, #0
   15e74:	beq	15e90 <ftello64@plt+0x47c0>
   15e78:	ldr	r3, [r0, #8]
   15e7c:	mov	r2, r6
   15e80:	mov	r1, r5
   15e84:	mov	r0, r4
   15e88:	pop	{r4, r5, r6, lr}
   15e8c:	b	13f74 <ftello64@plt+0x28a4>
   15e90:	mov	r0, r4
   15e94:	ldr	r1, [pc, #4]	; 15ea0 <ftello64@plt+0x47d0>
   15e98:	pop	{r4, r5, r6, lr}
   15e9c:	b	13c28 <ftello64@plt+0x2558>
   15ea0:	andeq	r0, r2, r8, ror #2
   15ea4:	push	{r4, r5, r6, lr}
   15ea8:	mov	r4, r0
   15eac:	ldr	r0, [r0, #4]
   15eb0:	mov	r5, r1
   15eb4:	mov	r6, r2
   15eb8:	bl	15b44 <ftello64@plt+0x4474>
   15ebc:	cmp	r0, #0
   15ec0:	beq	15edc <ftello64@plt+0x480c>
   15ec4:	ldr	r3, [r0, #16]
   15ec8:	mov	r2, r6
   15ecc:	mov	r1, r5
   15ed0:	mov	r0, r4
   15ed4:	pop	{r4, r5, r6, lr}
   15ed8:	b	13f74 <ftello64@plt+0x28a4>
   15edc:	mov	r0, r4
   15ee0:	ldr	r1, [pc, #4]	; 15eec <ftello64@plt+0x481c>
   15ee4:	pop	{r4, r5, r6, lr}
   15ee8:	b	13c28 <ftello64@plt+0x2558>
   15eec:	andeq	r0, r2, r0, lsl #3
   15ef0:	push	{r4, r5, r6, lr}
   15ef4:	mov	r4, r0
   15ef8:	ldr	r0, [r0, #4]
   15efc:	mov	r5, r1
   15f00:	mov	r6, r2
   15f04:	bl	15b44 <ftello64@plt+0x4474>
   15f08:	cmp	r0, #0
   15f0c:	beq	15f28 <ftello64@plt+0x4858>
   15f10:	ldr	r3, [r0, #24]
   15f14:	mov	r2, r6
   15f18:	mov	r1, r5
   15f1c:	mov	r0, r4
   15f20:	pop	{r4, r5, r6, lr}
   15f24:	b	13f74 <ftello64@plt+0x28a4>
   15f28:	mov	r0, r4
   15f2c:	ldr	r1, [pc, #4]	; 15f38 <ftello64@plt+0x4868>
   15f30:	pop	{r4, r5, r6, lr}
   15f34:	b	13c28 <ftello64@plt+0x2558>
   15f38:	muleq	r2, r8, r1
   15f3c:	push	{r4, r5, r6, lr}
   15f40:	mov	r4, r0
   15f44:	ldr	r0, [r0, #4]
   15f48:	mov	r5, r1
   15f4c:	mov	r6, r2
   15f50:	bl	15b44 <ftello64@plt+0x4474>
   15f54:	cmp	r0, #0
   15f58:	beq	15f74 <ftello64@plt+0x48a4>
   15f5c:	ldr	r3, [r0, #32]
   15f60:	mov	r2, r6
   15f64:	mov	r1, r5
   15f68:	mov	r0, r4
   15f6c:	pop	{r4, r5, r6, lr}
   15f70:	b	13f74 <ftello64@plt+0x28a4>
   15f74:	mov	r0, r4
   15f78:	ldr	r1, [pc, #4]	; 15f84 <ftello64@plt+0x48b4>
   15f7c:	pop	{r4, r5, r6, lr}
   15f80:	b	13c28 <ftello64@plt+0x2558>
   15f84:	andeq	r0, r2, ip, lsr #3
   15f88:	push	{r4, r5, r6, lr}
   15f8c:	mov	r4, r0
   15f90:	ldr	r0, [r0, #4]
   15f94:	mov	r5, r1
   15f98:	mov	r6, r2
   15f9c:	bl	15b44 <ftello64@plt+0x4474>
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fc0 <ftello64@plt+0x48f0>
   15fa8:	ldr	r3, [r0, #40]	; 0x28
   15fac:	mov	r2, r6
   15fb0:	mov	r1, r5
   15fb4:	mov	r0, r4
   15fb8:	pop	{r4, r5, r6, lr}
   15fbc:	b	13f74 <ftello64@plt+0x28a4>
   15fc0:	mov	r0, r4
   15fc4:	ldr	r1, [pc, #4]	; 15fd0 <ftello64@plt+0x4900>
   15fc8:	pop	{r4, r5, r6, lr}
   15fcc:	b	13c28 <ftello64@plt+0x2558>
   15fd0:	andeq	r0, r2, r0, asr #3
   15fd4:	push	{r4, r5, r6, lr}
   15fd8:	mov	r4, r0
   15fdc:	ldr	r0, [r0, #4]
   15fe0:	mov	r5, r1
   15fe4:	mov	r6, r2
   15fe8:	bl	15b44 <ftello64@plt+0x4474>
   15fec:	cmp	r0, #0
   15ff0:	beq	1600c <ftello64@plt+0x493c>
   15ff4:	ldr	r3, [r0, #44]	; 0x2c
   15ff8:	mov	r2, r6
   15ffc:	mov	r1, r5
   16000:	mov	r0, r4
   16004:	pop	{r4, r5, r6, lr}
   16008:	b	13f74 <ftello64@plt+0x28a4>
   1600c:	mov	r0, r4
   16010:	ldr	r1, [pc, #4]	; 1601c <ftello64@plt+0x494c>
   16014:	pop	{r4, r5, r6, lr}
   16018:	b	13c28 <ftello64@plt+0x2558>
   1601c:	ldrdeq	r0, [r2], -r4
   16020:	push	{r4, r5, r6, lr}
   16024:	mov	r4, r0
   16028:	ldr	r0, [r0, #4]
   1602c:	mov	r5, r1
   16030:	mov	r6, r2
   16034:	bl	15b44 <ftello64@plt+0x4474>
   16038:	cmp	r0, #0
   1603c:	beq	16058 <ftello64@plt+0x4988>
   16040:	ldr	r3, [r0, #48]	; 0x30
   16044:	mov	r2, r6
   16048:	mov	r1, r5
   1604c:	mov	r0, r4
   16050:	pop	{r4, r5, r6, lr}
   16054:	b	13f74 <ftello64@plt+0x28a4>
   16058:	mov	r0, r4
   1605c:	ldr	r1, [pc, #4]	; 16068 <ftello64@plt+0x4998>
   16060:	pop	{r4, r5, r6, lr}
   16064:	b	13c28 <ftello64@plt+0x2558>
   16068:	andeq	r0, r2, r8, ror #3
   1606c:	push	{r4, r5, r6, lr}
   16070:	mov	r4, r0
   16074:	ldr	r0, [r0, #4]
   16078:	mov	r5, r1
   1607c:	mov	r6, r2
   16080:	bl	15b44 <ftello64@plt+0x4474>
   16084:	cmp	r0, #0
   16088:	beq	160a4 <ftello64@plt+0x49d4>
   1608c:	ldr	r3, [r0, #52]	; 0x34
   16090:	mov	r2, r6
   16094:	mov	r1, r5
   16098:	mov	r0, r4
   1609c:	pop	{r4, r5, r6, lr}
   160a0:	b	13f74 <ftello64@plt+0x28a4>
   160a4:	mov	r0, r4
   160a8:	ldr	r1, [pc, #4]	; 160b4 <ftello64@plt+0x49e4>
   160ac:	pop	{r4, r5, r6, lr}
   160b0:	b	13c28 <ftello64@plt+0x2558>
   160b4:	andeq	r0, r2, r0, lsl #4
   160b8:	push	{r4, r5, r6, lr}
   160bc:	mov	r4, r0
   160c0:	ldr	r0, [r0, #4]
   160c4:	mov	r5, r1
   160c8:	mov	r6, r2
   160cc:	bl	15b44 <ftello64@plt+0x4474>
   160d0:	cmp	r0, #0
   160d4:	beq	160f0 <ftello64@plt+0x4a20>
   160d8:	ldr	r3, [r0, #56]	; 0x38
   160dc:	mov	r2, r6
   160e0:	mov	r1, r5
   160e4:	mov	r0, r4
   160e8:	pop	{r4, r5, r6, lr}
   160ec:	b	13f74 <ftello64@plt+0x28a4>
   160f0:	mov	r0, r4
   160f4:	ldr	r1, [pc, #4]	; 16100 <ftello64@plt+0x4a30>
   160f8:	pop	{r4, r5, r6, lr}
   160fc:	b	13c28 <ftello64@plt+0x2558>
   16100:	andeq	r0, r2, r8, lsl r2
   16104:	push	{r4, r5, r6, lr}
   16108:	mov	r4, r0
   1610c:	ldr	r0, [r0, #4]
   16110:	mov	r5, r1
   16114:	mov	r6, r2
   16118:	bl	15b44 <ftello64@plt+0x4474>
   1611c:	cmp	r0, #0
   16120:	beq	1613c <ftello64@plt+0x4a6c>
   16124:	ldr	r3, [r0, #60]	; 0x3c
   16128:	mov	r2, r6
   1612c:	mov	r1, r5
   16130:	mov	r0, r4
   16134:	pop	{r4, r5, r6, lr}
   16138:	b	13f74 <ftello64@plt+0x28a4>
   1613c:	mov	r0, r4
   16140:	ldr	r1, [pc, #4]	; 1614c <ftello64@plt+0x4a7c>
   16144:	pop	{r4, r5, r6, lr}
   16148:	b	13c28 <ftello64@plt+0x2558>
   1614c:	andeq	r0, r2, r0, lsr r2
   16150:	push	{r4, r5, r6, lr}
   16154:	mov	r4, r0
   16158:	ldr	r0, [r0, #4]
   1615c:	mov	r5, r1
   16160:	mov	r6, r2
   16164:	bl	15b44 <ftello64@plt+0x4474>
   16168:	cmp	r0, #0
   1616c:	beq	16188 <ftello64@plt+0x4ab8>
   16170:	ldr	r3, [r0, #64]	; 0x40
   16174:	mov	r2, r6
   16178:	mov	r1, r5
   1617c:	mov	r0, r4
   16180:	pop	{r4, r5, r6, lr}
   16184:	b	13f74 <ftello64@plt+0x28a4>
   16188:	mov	r0, r4
   1618c:	ldr	r1, [pc, #4]	; 16198 <ftello64@plt+0x4ac8>
   16190:	pop	{r4, r5, r6, lr}
   16194:	b	13c28 <ftello64@plt+0x2558>
   16198:	andeq	r0, r2, r8, asr #4
   1619c:	push	{r4, r5, r6, lr}
   161a0:	mov	r4, r0
   161a4:	ldr	r0, [r0, #4]
   161a8:	mov	r5, r1
   161ac:	mov	r6, r2
   161b0:	bl	15b44 <ftello64@plt+0x4474>
   161b4:	cmp	r0, #0
   161b8:	beq	161d4 <ftello64@plt+0x4b04>
   161bc:	ldr	r3, [r0, #68]	; 0x44
   161c0:	mov	r2, r6
   161c4:	mov	r1, r5
   161c8:	mov	r0, r4
   161cc:	pop	{r4, r5, r6, lr}
   161d0:	b	13f74 <ftello64@plt+0x28a4>
   161d4:	mov	r0, r4
   161d8:	ldr	r1, [pc, #4]	; 161e4 <ftello64@plt+0x4b14>
   161dc:	pop	{r4, r5, r6, lr}
   161e0:	b	13c28 <ftello64@plt+0x2558>
   161e4:	andeq	r0, r2, r0, ror #4
   161e8:	push	{r4, r5, r6, lr}
   161ec:	mov	r4, r0
   161f0:	ldr	r0, [r0, #4]
   161f4:	mov	r5, r1
   161f8:	mov	r6, r2
   161fc:	bl	15b44 <ftello64@plt+0x4474>
   16200:	cmp	r0, #0
   16204:	beq	16220 <ftello64@plt+0x4b50>
   16208:	ldr	r3, [r0, #72]	; 0x48
   1620c:	mov	r2, r6
   16210:	mov	r1, r5
   16214:	mov	r0, r4
   16218:	pop	{r4, r5, r6, lr}
   1621c:	b	13f74 <ftello64@plt+0x28a4>
   16220:	mov	r0, r4
   16224:	ldr	r1, [pc, #4]	; 16230 <ftello64@plt+0x4b60>
   16228:	pop	{r4, r5, r6, lr}
   1622c:	b	13c28 <ftello64@plt+0x2558>
   16230:	andeq	r0, r2, r8, ror r2
   16234:	push	{r4, r5, r6, lr}
   16238:	mov	r4, r0
   1623c:	ldr	r0, [r0, #4]
   16240:	mov	r5, r1
   16244:	mov	r6, r2
   16248:	bl	15b44 <ftello64@plt+0x4474>
   1624c:	cmp	r0, #0
   16250:	beq	1626c <ftello64@plt+0x4b9c>
   16254:	ldr	r3, [r0, #76]	; 0x4c
   16258:	mov	r2, r6
   1625c:	mov	r1, r5
   16260:	mov	r0, r4
   16264:	pop	{r4, r5, r6, lr}
   16268:	b	13f74 <ftello64@plt+0x28a4>
   1626c:	mov	r0, r4
   16270:	ldr	r1, [pc, #4]	; 1627c <ftello64@plt+0x4bac>
   16274:	pop	{r4, r5, r6, lr}
   16278:	b	13c28 <ftello64@plt+0x2558>
   1627c:	muleq	r2, r4, r2
   16280:	push	{r4, r5, r6, lr}
   16284:	mov	r4, r0
   16288:	ldr	r0, [r0, #4]
   1628c:	mov	r5, r1
   16290:	mov	r6, r2
   16294:	bl	15b44 <ftello64@plt+0x4474>
   16298:	cmp	r0, #0
   1629c:	beq	162b8 <ftello64@plt+0x4be8>
   162a0:	ldr	r3, [r0, #80]	; 0x50
   162a4:	mov	r2, r6
   162a8:	mov	r1, r5
   162ac:	mov	r0, r4
   162b0:	pop	{r4, r5, r6, lr}
   162b4:	b	13f74 <ftello64@plt+0x28a4>
   162b8:	mov	r0, r4
   162bc:	ldr	r1, [pc, #4]	; 162c8 <ftello64@plt+0x4bf8>
   162c0:	pop	{r4, r5, r6, lr}
   162c4:	b	13c28 <ftello64@plt+0x2558>
   162c8:			; <UNDEFINED> instruction: 0x000202b0
   162cc:	push	{r4, r5, r6, lr}
   162d0:	mov	r4, r0
   162d4:	ldr	r0, [r0, #4]
   162d8:	mov	r5, r1
   162dc:	mov	r6, r2
   162e0:	bl	15b44 <ftello64@plt+0x4474>
   162e4:	cmp	r0, #0
   162e8:	beq	16304 <ftello64@plt+0x4c34>
   162ec:	ldr	r3, [r0, #84]	; 0x54
   162f0:	mov	r2, r6
   162f4:	mov	r1, r5
   162f8:	mov	r0, r4
   162fc:	pop	{r4, r5, r6, lr}
   16300:	b	13f74 <ftello64@plt+0x28a4>
   16304:	mov	r0, r4
   16308:	ldr	r1, [pc, #4]	; 16314 <ftello64@plt+0x4c44>
   1630c:	pop	{r4, r5, r6, lr}
   16310:	b	13c28 <ftello64@plt+0x2558>
   16314:	andeq	r0, r2, r8, asr #5
   16318:	push	{r4, r5, r6, lr}
   1631c:	mov	r4, r0
   16320:	ldr	r0, [r0, #4]
   16324:	mov	r5, r1
   16328:	mov	r6, r2
   1632c:	bl	15b44 <ftello64@plt+0x4474>
   16330:	cmp	r0, #0
   16334:	beq	16350 <ftello64@plt+0x4c80>
   16338:	ldr	r3, [r0, #88]	; 0x58
   1633c:	mov	r2, r6
   16340:	mov	r1, r5
   16344:	mov	r0, r4
   16348:	pop	{r4, r5, r6, lr}
   1634c:	b	13f74 <ftello64@plt+0x28a4>
   16350:	mov	r0, r4
   16354:	ldr	r1, [pc, #4]	; 16360 <ftello64@plt+0x4c90>
   16358:	pop	{r4, r5, r6, lr}
   1635c:	b	13c28 <ftello64@plt+0x2558>
   16360:	andeq	r0, r2, r4, ror #5
   16364:	push	{r4, r5, r6, lr}
   16368:	mov	r4, r0
   1636c:	ldr	r0, [r0, #4]
   16370:	mov	r5, r1
   16374:	mov	r6, r2
   16378:	bl	15b44 <ftello64@plt+0x4474>
   1637c:	cmp	r0, #0
   16380:	beq	1639c <ftello64@plt+0x4ccc>
   16384:	ldr	r3, [r0, #92]	; 0x5c
   16388:	mov	r2, r6
   1638c:	mov	r1, r5
   16390:	mov	r0, r4
   16394:	pop	{r4, r5, r6, lr}
   16398:	b	13f74 <ftello64@plt+0x28a4>
   1639c:	mov	r0, r4
   163a0:	ldr	r1, [pc, #4]	; 163ac <ftello64@plt+0x4cdc>
   163a4:	pop	{r4, r5, r6, lr}
   163a8:	b	13c28 <ftello64@plt+0x2558>
   163ac:	andeq	r0, r2, r0, lsl #6
   163b0:	push	{r4, r5, r6, lr}
   163b4:	mov	r4, r0
   163b8:	ldr	r0, [r0, #4]
   163bc:	mov	r5, r1
   163c0:	mov	r6, r2
   163c4:	bl	15b44 <ftello64@plt+0x4474>
   163c8:	cmp	r0, #0
   163cc:	beq	163e8 <ftello64@plt+0x4d18>
   163d0:	ldr	r3, [r0, #96]	; 0x60
   163d4:	mov	r2, r6
   163d8:	mov	r1, r5
   163dc:	mov	r0, r4
   163e0:	pop	{r4, r5, r6, lr}
   163e4:	b	13f74 <ftello64@plt+0x28a4>
   163e8:	mov	r0, r4
   163ec:	ldr	r1, [pc, #4]	; 163f8 <ftello64@plt+0x4d28>
   163f0:	pop	{r4, r5, r6, lr}
   163f4:	b	13c28 <ftello64@plt+0x2558>
   163f8:	andeq	r0, r2, ip, lsl r3
   163fc:	push	{r4, r5, r6, lr}
   16400:	mov	r4, r0
   16404:	ldr	r0, [r0, #4]
   16408:	mov	r5, r1
   1640c:	mov	r6, r2
   16410:	bl	15b44 <ftello64@plt+0x4474>
   16414:	cmp	r0, #0
   16418:	beq	16434 <ftello64@plt+0x4d64>
   1641c:	ldr	r3, [r0, #100]	; 0x64
   16420:	mov	r2, r6
   16424:	mov	r1, r5
   16428:	mov	r0, r4
   1642c:	pop	{r4, r5, r6, lr}
   16430:	b	13f74 <ftello64@plt+0x28a4>
   16434:	mov	r0, r4
   16438:	ldr	r1, [pc, #4]	; 16444 <ftello64@plt+0x4d74>
   1643c:	pop	{r4, r5, r6, lr}
   16440:	b	13c28 <ftello64@plt+0x2558>
   16444:	andeq	r0, r2, r8, lsr r3
   16448:	push	{r4, r5, r6, lr}
   1644c:	mov	r4, r0
   16450:	ldr	r0, [r0, #4]
   16454:	mov	r5, r1
   16458:	mov	r6, r2
   1645c:	bl	15b44 <ftello64@plt+0x4474>
   16460:	cmp	r0, #0
   16464:	beq	16480 <ftello64@plt+0x4db0>
   16468:	ldr	r3, [r0, #104]	; 0x68
   1646c:	mov	r2, r6
   16470:	mov	r1, r5
   16474:	mov	r0, r4
   16478:	pop	{r4, r5, r6, lr}
   1647c:	b	13f74 <ftello64@plt+0x28a4>
   16480:	mov	r0, r4
   16484:	ldr	r1, [pc, #4]	; 16490 <ftello64@plt+0x4dc0>
   16488:	pop	{r4, r5, r6, lr}
   1648c:	b	13c28 <ftello64@plt+0x2558>
   16490:	andeq	r0, r2, r4, asr r3
   16494:	push	{r4, r5, r6, lr}
   16498:	mov	r4, r0
   1649c:	ldr	r0, [r0, #4]
   164a0:	mov	r5, r1
   164a4:	mov	r6, r2
   164a8:	bl	15b44 <ftello64@plt+0x4474>
   164ac:	cmp	r0, #0
   164b0:	beq	164cc <ftello64@plt+0x4dfc>
   164b4:	ldr	r3, [r0, #108]	; 0x6c
   164b8:	mov	r2, r6
   164bc:	mov	r1, r5
   164c0:	mov	r0, r4
   164c4:	pop	{r4, r5, r6, lr}
   164c8:	b	13f74 <ftello64@plt+0x28a4>
   164cc:	mov	r0, r4
   164d0:	ldr	r1, [pc, #4]	; 164dc <ftello64@plt+0x4e0c>
   164d4:	pop	{r4, r5, r6, lr}
   164d8:	b	13c28 <ftello64@plt+0x2558>
   164dc:	andeq	r0, r2, r0, ror r3
   164e0:	push	{r4, r5, r6, lr}
   164e4:	mov	r4, r0
   164e8:	ldr	r0, [r0, #4]
   164ec:	mov	r5, r1
   164f0:	mov	r6, r2
   164f4:	bl	15b44 <ftello64@plt+0x4474>
   164f8:	cmp	r0, #0
   164fc:	beq	16518 <ftello64@plt+0x4e48>
   16500:	ldr	r3, [r0, #112]	; 0x70
   16504:	mov	r2, r6
   16508:	mov	r1, r5
   1650c:	mov	r0, r4
   16510:	pop	{r4, r5, r6, lr}
   16514:	b	13f74 <ftello64@plt+0x28a4>
   16518:	mov	r0, r4
   1651c:	ldr	r1, [pc, #4]	; 16528 <ftello64@plt+0x4e58>
   16520:	pop	{r4, r5, r6, lr}
   16524:	b	13c28 <ftello64@plt+0x2558>
   16528:	muleq	r2, r0, r3
   1652c:	push	{r4, r5, r6, lr}
   16530:	mov	r4, r0
   16534:	mov	r5, r1
   16538:	mov	r6, r2
   1653c:	ldr	r0, [r0, #8]
   16540:	ldr	r2, [r4, #4]
   16544:	ldr	r1, [pc, #124]	; 165c8 <ftello64@plt+0x4ef8>
   16548:	bl	183f8 <argp_parse@@Base+0xfa0>
   1654c:	cmp	r0, #0
   16550:	blt	165b0 <ftello64@plt+0x4ee0>
   16554:	ldr	r3, [pc, #112]	; 165cc <ftello64@plt+0x4efc>
   16558:	ldr	r1, [r4, #4]
   1655c:	ldr	r2, [r3]
   16560:	ldrh	r1, [r1, #16]
   16564:	cmp	r2, #0
   16568:	bne	1657c <ftello64@plt+0x4eac>
   1656c:	b	165a8 <ftello64@plt+0x4ed8>
   16570:	ldr	r2, [r3, #16]!
   16574:	cmp	r2, #0
   16578:	beq	165a8 <ftello64@plt+0x4ed8>
   1657c:	ldr	r2, [r3, #8]
   16580:	cmp	r1, r2
   16584:	bne	16570 <ftello64@plt+0x4ea0>
   16588:	ldr	r3, [r3, #12]
   1658c:	clz	r3, r3
   16590:	lsr	r3, r3, #5
   16594:	mov	r2, r6
   16598:	mov	r1, r5
   1659c:	mov	r0, r4
   165a0:	pop	{r4, r5, r6, lr}
   165a4:	b	14b70 <ftello64@plt+0x34a0>
   165a8:	mov	r3, #1
   165ac:	b	16594 <ftello64@plt+0x4ec4>
   165b0:	mov	r3, #1
   165b4:	mov	r2, r6
   165b8:	mov	r1, r5
   165bc:	mov	r0, r4
   165c0:	bl	14b70 <ftello64@plt+0x34a0>
   165c4:	b	16554 <ftello64@plt+0x4e84>
   165c8:	andeq	r8, r0, r7, lsr #18
   165cc:	andeq	r2, r3, r4, asr #15
   165d0:	push	{r4, lr}
   165d4:	mov	r4, r0
   165d8:	ldr	r2, [r0, #4]
   165dc:	ldr	r1, [pc, #136]	; 1666c <ftello64@plt+0x4f9c>
   165e0:	ldr	r0, [r0, #8]
   165e4:	bl	183f8 <argp_parse@@Base+0xfa0>
   165e8:	cmp	r0, #0
   165ec:	blt	16650 <ftello64@plt+0x4f80>
   165f0:	ldr	r3, [pc, #120]	; 16670 <ftello64@plt+0x4fa0>
   165f4:	ldr	r1, [r4, #4]
   165f8:	ldr	r2, [r3]
   165fc:	ldrh	r0, [r1, #16]
   16600:	cmp	r2, #0
   16604:	bne	16618 <ftello64@plt+0x4f48>
   16608:	b	16640 <ftello64@plt+0x4f70>
   1660c:	ldr	r2, [r3, #16]!
   16610:	cmp	r2, #0
   16614:	beq	16640 <ftello64@plt+0x4f70>
   16618:	ldr	r2, [r3, #8]
   1661c:	cmp	r0, r2
   16620:	bne	1660c <ftello64@plt+0x4f3c>
   16624:	ldr	r3, [r3, #12]
   16628:	cmp	r3, #0
   1662c:	beq	16640 <ftello64@plt+0x4f70>
   16630:	mov	r0, r4
   16634:	add	r1, r1, #18
   16638:	pop	{r4, lr}
   1663c:	bx	r3
   16640:	mov	r0, r4
   16644:	ldr	r1, [pc, #40]	; 16674 <ftello64@plt+0x4fa4>
   16648:	pop	{r4, lr}
   1664c:	b	13c28 <ftello64@plt+0x2558>
   16650:	bl	11568 <__errno_location@plt>
   16654:	ldr	r3, [r4, #4]
   16658:	ldr	r2, [pc, #24]	; 16678 <ftello64@plt+0x4fa8>
   1665c:	pop	{r4, lr}
   16660:	ldr	r1, [r0]
   16664:	mov	r0, #1
   16668:	b	114a8 <error@plt>
   1666c:	andeq	r8, r0, r7, lsr #18
   16670:	andeq	r2, r3, r4, asr #15
   16674:	ldrdeq	r0, [r2], -r4
   16678:	andeq	r0, r2, ip, lsr #7
   1667c:	push	{r4, r5, r6, lr}
   16680:	mov	r4, r0
   16684:	mov	r5, r1
   16688:	mov	r6, r2
   1668c:	ldr	r1, [pc, #52]	; 166c8 <ftello64@plt+0x4ff8>
   16690:	ldr	r2, [r4, #4]
   16694:	ldr	r0, [r0, #8]
   16698:	bl	183f8 <argp_parse@@Base+0xfa0>
   1669c:	mov	r2, r6
   166a0:	mov	r1, r5
   166a4:	cmp	r0, #0
   166a8:	mov	r0, r4
   166ac:	blt	166bc <ftello64@plt+0x4fec>
   166b0:	mov	r3, #0
   166b4:	pop	{r4, r5, r6, lr}
   166b8:	b	14b70 <ftello64@plt+0x34a0>
   166bc:	mov	r3, #1
   166c0:	pop	{r4, r5, r6, lr}
   166c4:	b	14b70 <ftello64@plt+0x34a0>
   166c8:	andeq	r8, r0, r7, lsr #18
   166cc:	push	{r4, lr}
   166d0:	mov	r4, r0
   166d4:	ldr	r2, [r0, #4]
   166d8:	ldr	r1, [pc, #124]	; 1675c <ftello64@plt+0x508c>
   166dc:	ldr	r0, [r0, #8]
   166e0:	bl	183f8 <argp_parse@@Base+0xfa0>
   166e4:	cmp	r0, #0
   166e8:	blt	16740 <ftello64@plt+0x5070>
   166ec:	ldr	r3, [pc, #108]	; 16760 <ftello64@plt+0x5090>
   166f0:	ldr	r1, [r4, #4]
   166f4:	ldr	r2, [r3]
   166f8:	ldrh	r1, [r1, #16]
   166fc:	cmp	r2, #0
   16700:	bne	16714 <ftello64@plt+0x5044>
   16704:	b	16730 <ftello64@plt+0x5060>
   16708:	ldr	r2, [r3, #16]!
   1670c:	cmp	r2, #0
   16710:	beq	16730 <ftello64@plt+0x5060>
   16714:	ldr	r2, [r3, #8]
   16718:	cmp	r1, r2
   1671c:	bne	16708 <ftello64@plt+0x5038>
   16720:	mov	r0, r4
   16724:	ldr	r1, [r3, #4]
   16728:	pop	{r4, lr}
   1672c:	b	13c28 <ftello64@plt+0x2558>
   16730:	mov	r0, r4
   16734:	ldr	r1, [pc, #40]	; 16764 <ftello64@plt+0x5094>
   16738:	pop	{r4, lr}
   1673c:	b	13c28 <ftello64@plt+0x2558>
   16740:	bl	11568 <__errno_location@plt>
   16744:	ldr	r3, [r4, #4]
   16748:	ldr	r2, [pc, #24]	; 16768 <ftello64@plt+0x5098>
   1674c:	pop	{r4, lr}
   16750:	ldr	r1, [r0]
   16754:	mov	r0, #1
   16758:	b	114a8 <error@plt>
   1675c:	andeq	r8, r0, r7, lsr #18
   16760:	andeq	r2, r3, r4, asr #15
   16764:	andeq	r0, r2, r8, ror #7
   16768:	andeq	r0, r2, ip, lsr #7
   1676c:	push	{r4, r5, r6, lr}
   16770:	mov	r4, r0
   16774:	mov	r5, r1
   16778:	mov	r6, r2
   1677c:	ldr	r1, [pc, #52]	; 167b8 <ftello64@plt+0x50e8>
   16780:	ldr	r2, [r4, #4]
   16784:	ldr	r0, [r0, #8]
   16788:	bl	183f8 <argp_parse@@Base+0xfa0>
   1678c:	mov	r2, r6
   16790:	mov	r1, r5
   16794:	cmp	r0, #0
   16798:	mov	r0, r4
   1679c:	blt	167ac <ftello64@plt+0x50dc>
   167a0:	mov	r3, #0
   167a4:	pop	{r4, r5, r6, lr}
   167a8:	b	14b70 <ftello64@plt+0x34a0>
   167ac:	mov	r3, #1
   167b0:	pop	{r4, r5, r6, lr}
   167b4:	b	14b70 <ftello64@plt+0x34a0>
   167b8:	andeq	r8, r0, sp, lsl r9
   167bc:	push	{r4, r5, r6, lr}
   167c0:	mov	r4, r0
   167c4:	mov	r5, r1
   167c8:	mov	r6, r2
   167cc:	ldr	r0, [r0, #8]
   167d0:	ldr	r2, [r4, #4]
   167d4:	ldr	r1, [pc, #72]	; 16824 <ftello64@plt+0x5154>
   167d8:	bl	183f8 <argp_parse@@Base+0xfa0>
   167dc:	cmp	r0, #0
   167e0:	blt	16808 <ftello64@plt+0x5138>
   167e4:	ldr	r3, [r4, #4]
   167e8:	mov	r2, r6
   167ec:	mov	r1, r5
   167f0:	ldr	r3, [r3, #16]
   167f4:	mov	r0, r4
   167f8:	cmp	r3, #0
   167fc:	moveq	r3, #1
   16800:	pop	{r4, r5, r6, lr}
   16804:	b	13c58 <ftello64@plt+0x2588>
   16808:	bl	11568 <__errno_location@plt>
   1680c:	ldr	r3, [r4, #4]
   16810:	ldr	r2, [pc, #16]	; 16828 <ftello64@plt+0x5158>
   16814:	pop	{r4, r5, r6, lr}
   16818:	ldr	r1, [r0]
   1681c:	mov	r0, #1
   16820:	b	114a8 <error@plt>
   16824:	andeq	r8, r0, sp, lsl r9
   16828:	andeq	pc, r1, ip, lsr ip	; <UNPREDICTABLE>
   1682c:	push	{r4, r5, r6, lr}
   16830:	mov	r4, r0
   16834:	mov	r5, r1
   16838:	mov	r6, r2
   1683c:	ldr	r0, [r0, #8]
   16840:	ldr	r2, [r4, #4]
   16844:	ldr	r1, [pc, #64]	; 1688c <ftello64@plt+0x51bc>
   16848:	bl	183f8 <argp_parse@@Base+0xfa0>
   1684c:	cmp	r0, #0
   16850:	blt	16874 <ftello64@plt+0x51a4>
   16854:	ldr	r3, [r4, #4]
   16858:	mov	r2, r6
   1685c:	mov	r1, r5
   16860:	ldr	r3, [r3, #16]
   16864:	mov	r0, r4
   16868:	pop	{r4, r5, r6, lr}
   1686c:	lsr	r3, r3, #31
   16870:	b	14b70 <ftello64@plt+0x34a0>
   16874:	mov	r2, r6
   16878:	mov	r1, r5
   1687c:	mov	r0, r4
   16880:	mov	r3, #1
   16884:	pop	{r4, r5, r6, lr}
   16888:	b	14b70 <ftello64@plt+0x34a0>
   1688c:	andeq	r8, r0, r2, asr #18
   16890:	push	{r4, r5, r6, lr}
   16894:	mov	r4, r0
   16898:	mov	r5, r1
   1689c:	mov	r6, r2
   168a0:	ldr	r0, [r0, #8]
   168a4:	ldr	r2, [r4, #4]
   168a8:	ldr	r1, [pc, #64]	; 168f0 <ftello64@plt+0x5220>
   168ac:	bl	183f8 <argp_parse@@Base+0xfa0>
   168b0:	cmp	r0, #0
   168b4:	blt	168d4 <ftello64@plt+0x5204>
   168b8:	ldr	r3, [r4, #4]
   168bc:	mov	r2, r6
   168c0:	mov	r1, r5
   168c4:	mov	r0, r4
   168c8:	ldr	r3, [r3, #16]
   168cc:	pop	{r4, r5, r6, lr}
   168d0:	b	13c58 <ftello64@plt+0x2588>
   168d4:	bl	11568 <__errno_location@plt>
   168d8:	ldr	r3, [r4, #4]
   168dc:	ldr	r2, [pc, #16]	; 168f4 <ftello64@plt+0x5224>
   168e0:	pop	{r4, r5, r6, lr}
   168e4:	ldr	r1, [r0]
   168e8:	mov	r0, #1
   168ec:	b	114a8 <error@plt>
   168f0:	andeq	r8, r0, r2, asr #18
   168f4:	strdeq	r0, [r2], -ip
   168f8:	push	{r4, r5, r6, lr}
   168fc:	subs	r4, r0, #0
   16900:	sub	sp, sp, #16
   16904:	mov	r6, r1
   16908:	beq	169d8 <ftello64@plt+0x5308>
   1690c:	ldr	r3, [r4, #4]
   16910:	tst	r3, #1
   16914:	beq	169a8 <ftello64@plt+0x52d8>
   16918:	ldr	r5, [r4, #8]
   1691c:	ldr	r3, [r5]
   16920:	tst	r3, #1
   16924:	bne	1698c <ftello64@plt+0x52bc>
   16928:	mov	r2, #0
   1692c:	add	r1, sp, #12
   16930:	mov	r0, r6
   16934:	bl	113ac <strtol@plt>
   16938:	str	r0, [r5, #4]
   1693c:	ldrb	r3, [r6]
   16940:	cmp	r3, #0
   16944:	beq	16958 <ftello64@plt+0x5288>
   16948:	ldr	r3, [sp, #12]
   1694c:	ldrb	r3, [r3]
   16950:	cmp	r3, #0
   16954:	beq	16974 <ftello64@plt+0x52a4>
   16958:	ldr	r2, [r4]
   1695c:	mov	r3, r6
   16960:	str	r2, [sp]
   16964:	mov	r1, #0
   16968:	ldr	r2, [pc, #156]	; 16a0c <ftello64@plt+0x533c>
   1696c:	mov	r0, #1
   16970:	bl	114a8 <error@plt>
   16974:	ldr	r2, [r4, #8]
   16978:	ldr	r3, [r2]
   1697c:	orr	r3, r3, #1
   16980:	str	r3, [r2]
   16984:	add	sp, sp, #16
   16988:	pop	{r4, r5, r6, pc}
   1698c:	ldr	r3, [r4]
   16990:	ldr	r2, [pc, #120]	; 16a10 <ftello64@plt+0x5340>
   16994:	mov	r1, #0
   16998:	mov	r0, #1
   1699c:	bl	114a8 <error@plt>
   169a0:	ldr	r5, [r4, #8]
   169a4:	b	16928 <ftello64@plt+0x5258>
   169a8:	mov	r0, #8
   169ac:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   169b0:	cmp	r0, #0
   169b4:	str	r0, [r4, #8]
   169b8:	movne	r5, r0
   169bc:	beq	169f0 <ftello64@plt+0x5320>
   169c0:	ldr	r3, [r4, #4]
   169c4:	mov	r2, #0
   169c8:	orr	r3, r3, #1
   169cc:	str	r2, [r5]
   169d0:	str	r3, [r4, #4]
   169d4:	b	16928 <ftello64@plt+0x5258>
   169d8:	mov	r3, r1
   169dc:	ldr	r2, [pc, #48]	; 16a14 <ftello64@plt+0x5344>
   169e0:	mov	r1, r4
   169e4:	mov	r0, #1
   169e8:	bl	114a8 <error@plt>
   169ec:	b	1690c <ftello64@plt+0x523c>
   169f0:	bl	11568 <__errno_location@plt>
   169f4:	ldr	r2, [pc, #28]	; 16a18 <ftello64@plt+0x5348>
   169f8:	ldr	r1, [r0]
   169fc:	mov	r0, #1
   16a00:	bl	114a8 <error@plt>
   16a04:	ldr	r5, [r4, #8]
   16a08:	b	169c0 <ftello64@plt+0x52f0>
   16a0c:	andeq	r0, r2, ip, lsr #9
   16a10:	andeq	r0, r2, r0, lsl #9
   16a14:	andeq	r0, r2, r4, lsr #8
   16a18:	andeq	r0, r2, ip, asr #8
   16a1c:	cmp	r0, #84	; 0x54
   16a20:	beq	16a2c <ftello64@plt+0x535c>
   16a24:	mov	r0, #7
   16a28:	bx	lr
   16a2c:	ldr	r3, [r2, #28]
   16a30:	push	{r4, lr}
   16a34:	ldr	r0, [r3]
   16a38:	bl	168f8 <ftello64@plt+0x5228>
   16a3c:	mov	r0, #0
   16a40:	pop	{r4, pc}
   16a44:	cmp	r1, #84	; 0x54
   16a48:	beq	16a54 <ftello64@plt+0x5384>
   16a4c:	mov	r0, #0
   16a50:	bx	lr
   16a54:	push	{r4, lr}
   16a58:	mov	r1, r2
   16a5c:	ldr	r0, [r0]
   16a60:	bl	168f8 <ftello64@plt+0x5228>
   16a64:	mov	r0, #1
   16a68:	pop	{r4, pc}
   16a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a70:	mov	r7, r0
   16a74:	sub	sp, sp, #12
   16a78:	ldr	r0, [r2]
   16a7c:	mov	r5, r1
   16a80:	mov	r6, r2
   16a84:	bl	12a00 <ftello64@plt+0x1330>
   16a88:	cmp	r5, #1
   16a8c:	str	r0, [r7]
   16a90:	ble	16b6c <ftello64@plt+0x549c>
   16a94:	ldr	r4, [r6, #4]
   16a98:	ldr	r1, [pc, #888]	; 16e18 <ftello64@plt+0x5748>
   16a9c:	mov	r0, r4
   16aa0:	bl	113a0 <strcmp@plt>
   16aa4:	cmp	r0, #0
   16aa8:	beq	16b98 <ftello64@plt+0x54c8>
   16aac:	mov	r0, r4
   16ab0:	ldr	r1, [pc, #868]	; 16e1c <ftello64@plt+0x574c>
   16ab4:	bl	113a0 <strcmp@plt>
   16ab8:	subs	r8, r0, #0
   16abc:	movne	r4, #1
   16ac0:	bne	16aec <ftello64@plt+0x541c>
   16ac4:	b	16ca0 <ftello64@plt+0x55d0>
   16ac8:	add	r4, r4, #1
   16acc:	cmp	r5, r4
   16ad0:	ble	16c30 <ftello64@plt+0x5560>
   16ad4:	ldr	r1, [r9, #4]
   16ad8:	ldr	r0, [r7]
   16adc:	bl	12c38 <ftello64@plt+0x1568>
   16ae0:	add	r4, r4, #1
   16ae4:	cmp	r5, r4
   16ae8:	ble	16b6c <ftello64@plt+0x549c>
   16aec:	ldr	sl, [r6, r4, lsl #2]
   16af0:	ldr	r1, [pc, #808]	; 16e20 <ftello64@plt+0x5750>
   16af4:	mov	r0, sl
   16af8:	bl	113a0 <strcmp@plt>
   16afc:	lsl	fp, r4, #2
   16b00:	add	r9, r6, fp
   16b04:	subs	r8, r0, #0
   16b08:	beq	16ac8 <ftello64@plt+0x53f8>
   16b0c:	ldr	r1, [pc, #784]	; 16e24 <ftello64@plt+0x5754>
   16b10:	mov	r0, sl
   16b14:	bl	113a0 <strcmp@plt>
   16b18:	cmp	r0, #0
   16b1c:	beq	16b7c <ftello64@plt+0x54ac>
   16b20:	ldr	r1, [pc, #768]	; 16e28 <ftello64@plt+0x5758>
   16b24:	mov	r0, sl
   16b28:	bl	113a0 <strcmp@plt>
   16b2c:	cmp	r0, #0
   16b30:	beq	16b7c <ftello64@plt+0x54ac>
   16b34:	ldr	r1, [pc, #752]	; 16e2c <ftello64@plt+0x575c>
   16b38:	mov	r0, sl
   16b3c:	bl	113a0 <strcmp@plt>
   16b40:	subs	r8, r0, #0
   16b44:	bne	16ba8 <ftello64@plt+0x54d8>
   16b48:	add	r4, r4, #1
   16b4c:	cmp	r5, r4
   16b50:	ble	16c48 <ftello64@plt+0x5578>
   16b54:	ldr	r1, [r9, #4]
   16b58:	ldr	r0, [r7]
   16b5c:	add	r4, r4, #1
   16b60:	bl	12b40 <ftello64@plt+0x1470>
   16b64:	cmp	r5, r4
   16b68:	bgt	16aec <ftello64@plt+0x541c>
   16b6c:	mov	r8, #1
   16b70:	mov	r0, r8
   16b74:	add	sp, sp, #12
   16b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b7c:	add	r4, r4, #1
   16b80:	cmp	r5, r4
   16b84:	ble	16c80 <ftello64@plt+0x55b0>
   16b88:	ldr	r1, [r6, r4, lsl #2]
   16b8c:	ldr	r0, [r7]
   16b90:	bl	130d0 <ftello64@plt+0x1a00>
   16b94:	b	16ae0 <ftello64@plt+0x5410>
   16b98:	cmp	r5, #2
   16b9c:	beq	16b6c <ftello64@plt+0x549c>
   16ba0:	mov	r4, #2
   16ba4:	b	16aec <ftello64@plt+0x541c>
   16ba8:	ldr	r1, [pc, #640]	; 16e30 <ftello64@plt+0x5760>
   16bac:	mov	r0, sl
   16bb0:	bl	113a0 <strcmp@plt>
   16bb4:	cmp	r0, #0
   16bb8:	bne	16bd8 <ftello64@plt+0x5508>
   16bbc:	add	r4, r4, #1
   16bc0:	cmp	r5, r4
   16bc4:	ble	16c60 <ftello64@plt+0x5590>
   16bc8:	ldr	r1, [r6, r4, lsl #2]
   16bcc:	ldr	r0, [r7]
   16bd0:	bl	12cb4 <ftello64@plt+0x15e4>
   16bd4:	b	16ae0 <ftello64@plt+0x5410>
   16bd8:	ldr	r1, [pc, #596]	; 16e34 <ftello64@plt+0x5764>
   16bdc:	mov	r0, sl
   16be0:	bl	113a0 <strcmp@plt>
   16be4:	cmp	r0, #0
   16be8:	beq	16bbc <ftello64@plt+0x54ec>
   16bec:	ldr	r1, [pc, #580]	; 16e38 <ftello64@plt+0x5768>
   16bf0:	mov	r0, sl
   16bf4:	bl	113a0 <strcmp@plt>
   16bf8:	cmp	r0, #0
   16bfc:	beq	16bbc <ftello64@plt+0x54ec>
   16c00:	ldr	r1, [pc, #564]	; 16e3c <ftello64@plt+0x576c>
   16c04:	mov	r0, sl
   16c08:	bl	113a0 <strcmp@plt>
   16c0c:	subs	r8, r0, #0
   16c10:	bne	16ccc <ftello64@plt+0x55fc>
   16c14:	add	r4, r4, #1
   16c18:	cmp	r5, r4
   16c1c:	ble	16cb4 <ftello64@plt+0x55e4>
   16c20:	ldr	r1, [r9, #4]
   16c24:	ldr	r0, [r7]
   16c28:	bl	12dfc <ftello64@plt+0x172c>
   16c2c:	b	16ae0 <ftello64@plt+0x5410>
   16c30:	ldr	r2, [pc, #520]	; 16e40 <ftello64@plt+0x5770>
   16c34:	mov	r1, r8
   16c38:	bl	114a8 <error@plt>
   16c3c:	mov	r0, r8
   16c40:	add	sp, sp, #12
   16c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c48:	ldr	r2, [pc, #500]	; 16e44 <ftello64@plt+0x5774>
   16c4c:	mov	r1, r8
   16c50:	bl	114a8 <error@plt>
   16c54:	mov	r0, r8
   16c58:	add	sp, sp, #12
   16c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c60:	mov	r1, #0
   16c64:	mov	r0, r1
   16c68:	ldr	r2, [pc, #472]	; 16e48 <ftello64@plt+0x5778>
   16c6c:	bl	114a8 <error@plt>
   16c70:	mov	r8, #0
   16c74:	mov	r0, r8
   16c78:	add	sp, sp, #12
   16c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c80:	mov	r1, #0
   16c84:	mov	r0, r1
   16c88:	ldr	r2, [pc, #444]	; 16e4c <ftello64@plt+0x577c>
   16c8c:	bl	114a8 <error@plt>
   16c90:	mov	r8, #0
   16c94:	mov	r0, r8
   16c98:	add	sp, sp, #12
   16c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ca0:	mov	r3, r4
   16ca4:	ldr	r2, [pc, #420]	; 16e50 <ftello64@plt+0x5780>
   16ca8:	mov	r1, r8
   16cac:	bl	114a8 <error@plt>
   16cb0:	b	16b70 <ftello64@plt+0x54a0>
   16cb4:	ldr	r2, [pc, #408]	; 16e54 <ftello64@plt+0x5784>
   16cb8:	mov	r1, r8
   16cbc:	bl	114a8 <error@plt>
   16cc0:	mov	r0, r8
   16cc4:	add	sp, sp, #12
   16cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ccc:	ldr	r1, [pc, #388]	; 16e58 <ftello64@plt+0x5788>
   16cd0:	mov	r0, sl
   16cd4:	bl	113a0 <strcmp@plt>
   16cd8:	subs	r8, r0, #0
   16cdc:	beq	16d2c <ftello64@plt+0x565c>
   16ce0:	ldr	r1, [pc, #372]	; 16e5c <ftello64@plt+0x578c>
   16ce4:	mov	r0, sl
   16ce8:	bl	113a0 <strcmp@plt>
   16cec:	subs	r8, r0, #0
   16cf0:	bne	16d64 <ftello64@plt+0x5694>
   16cf4:	add	r4, r4, #1
   16cf8:	cmp	r5, r4
   16cfc:	ble	16d10 <ftello64@plt+0x5640>
   16d00:	ldr	r1, [r9, #4]
   16d04:	ldr	r0, [r7]
   16d08:	bl	168f8 <ftello64@plt+0x5228>
   16d0c:	b	16ae0 <ftello64@plt+0x5410>
   16d10:	mov	r1, #0
   16d14:	mov	r0, r1
   16d18:	ldr	r2, [pc, #320]	; 16e60 <ftello64@plt+0x5790>
   16d1c:	bl	114a8 <error@plt>
   16d20:	mov	r0, r8
   16d24:	add	sp, sp, #12
   16d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d2c:	add	r4, r4, #1
   16d30:	cmp	r5, r4
   16d34:	ble	16d48 <ftello64@plt+0x5678>
   16d38:	ldr	r1, [r9, #4]
   16d3c:	ldr	r0, [r7]
   16d40:	bl	12d30 <ftello64@plt+0x1660>
   16d44:	b	16ae0 <ftello64@plt+0x5410>
   16d48:	mov	r1, #0
   16d4c:	mov	r0, r1
   16d50:	ldr	r2, [pc, #268]	; 16e64 <ftello64@plt+0x5794>
   16d54:	bl	114a8 <error@plt>
   16d58:	mov	r0, r8
   16d5c:	add	sp, sp, #12
   16d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d64:	ldr	r1, [pc, #252]	; 16e68 <ftello64@plt+0x5798>
   16d68:	mov	r0, sl
   16d6c:	bl	113a0 <strcmp@plt>
   16d70:	subs	r2, r0, #0
   16d74:	beq	16dac <ftello64@plt+0x56dc>
   16d78:	ldr	r1, [pc, #236]	; 16e6c <ftello64@plt+0x579c>
   16d7c:	mov	r0, sl
   16d80:	bl	113a0 <strcmp@plt>
   16d84:	cmp	r0, #0
   16d88:	bne	16dc8 <ftello64@plt+0x56f8>
   16d8c:	mov	r2, #1
   16d90:	add	r4, r4, r2
   16d94:	mov	r1, r2
   16d98:	ldr	r0, [r7]
   16d9c:	bl	12f4c <ftello64@plt+0x187c>
   16da0:	cmp	r5, r4
   16da4:	bgt	16aec <ftello64@plt+0x541c>
   16da8:	b	16b6c <ftello64@plt+0x549c>
   16dac:	add	r4, r4, #1
   16db0:	mov	r1, #65	; 0x41
   16db4:	ldr	r0, [r7]
   16db8:	bl	12f4c <ftello64@plt+0x187c>
   16dbc:	cmp	r5, r4
   16dc0:	bgt	16aec <ftello64@plt+0x541c>
   16dc4:	b	16b6c <ftello64@plt+0x549c>
   16dc8:	add	r1, sp, #4
   16dcc:	mov	r0, sl
   16dd0:	bl	11d40 <ftello64@plt+0x670>
   16dd4:	bics	r3, r0, #72	; 0x48
   16dd8:	mov	r1, r0
   16ddc:	beq	16dfc <ftello64@plt+0x572c>
   16de0:	add	r4, r4, #1
   16de4:	ldr	r2, [sp, #4]
   16de8:	ldr	r0, [r7]
   16dec:	bl	12f4c <ftello64@plt+0x187c>
   16df0:	cmp	r5, r4
   16df4:	bgt	16aec <ftello64@plt+0x541c>
   16df8:	b	16b6c <ftello64@plt+0x549c>
   16dfc:	ldr	r1, [r6, fp]
   16e00:	add	r4, r4, #1
   16e04:	ldr	r0, [r7]
   16e08:	bl	12ac4 <ftello64@plt+0x13f4>
   16e0c:	cmp	r5, r4
   16e10:	bgt	16aec <ftello64@plt+0x541c>
   16e14:	b	16b6c <ftello64@plt+0x549c>
   16e18:	andeq	lr, r1, r8, ror #13
   16e1c:	andeq	r0, r2, r4, ror #9
   16e20:	andeq	lr, r1, ip, lsr r9
   16e24:	andeq	lr, r1, r0, lsl #18
   16e28:	andeq	r0, r2, r4, lsl r5
   16e2c:	andeq	lr, r1, ip, lsl #12
   16e30:	andeq	r0, r2, r0, lsr #10
   16e34:	andeq	pc, r1, r4, lsl #27
   16e38:	andeq	r0, r2, r8, lsr #10
   16e3c:	andeq	lr, r1, r8, ror #18
   16e40:	andeq	r0, r2, ip, lsr r5
   16e44:	muleq	r2, ip, r5
   16e48:	andeq	r0, r2, r4, asr #11
   16e4c:	andeq	r0, r2, r4, ror #10
   16e50:	andeq	r0, r2, ip, ror #9
   16e54:	andeq	r0, r2, ip, ror #11
   16e58:	andeq	lr, r1, r8, asr #18
   16e5c:	andeq	r0, r2, r0, lsr r5
   16e60:	andeq	r0, r2, r8, lsr r6
   16e64:	andeq	r0, r2, r4, lsl r6
   16e68:	ldrdeq	lr, [r1], -r0
   16e6c:	andeq	lr, r1, ip, ror #19
   16e70:	ldr	r3, [r2]
   16e74:	tst	r3, #1
   16e78:	bne	16e84 <ftello64@plt+0x57b4>
   16e7c:	mov	r0, #0
   16e80:	bx	lr
   16e84:	ldr	r3, [r2, #4]
   16e88:	push	{r4, lr}
   16e8c:	mov	r2, r1
   16e90:	str	r3, [r1, #16]
   16e94:	mov	r4, r1
   16e98:	ldr	r1, [pc, #72]	; 16ee8 <ftello64@plt+0x5818>
   16e9c:	bl	183f8 <argp_parse@@Base+0xfa0>
   16ea0:	cmp	r0, #0
   16ea4:	blt	16ed0 <ftello64@plt+0x5800>
   16ea8:	ldr	r3, [pc, #60]	; 16eec <ftello64@plt+0x581c>
   16eac:	ldr	r3, [r3]
   16eb0:	cmp	r3, #0
   16eb4:	beq	16ec8 <ftello64@plt+0x57f8>
   16eb8:	ldr	r2, [r4, #16]
   16ebc:	mov	r1, r4
   16ec0:	ldr	r0, [pc, #40]	; 16ef0 <ftello64@plt+0x5820>
   16ec4:	bl	113b8 <printf@plt>
   16ec8:	mov	r0, #0
   16ecc:	pop	{r4, pc}
   16ed0:	bl	11568 <__errno_location@plt>
   16ed4:	ldr	r2, [pc, #24]	; 16ef4 <ftello64@plt+0x5824>
   16ed8:	ldr	r1, [r0]
   16edc:	mov	r0, #0
   16ee0:	bl	114a8 <error@plt>
   16ee4:	b	16ea8 <ftello64@plt+0x57d8>
   16ee8:	andeq	r8, r0, r3, asr #18
   16eec:	andeq	r2, r3, r0, lsl #24
   16ef0:	andeq	r0, r2, ip, ror r6
   16ef4:	andeq	r0, r2, r4, ror #12
   16ef8:	ldr	r3, [r0]
   16efc:	push	{r4, r5, r6, lr}
   16f00:	cmp	r3, #0
   16f04:	ldr	r5, [r0, #16]
   16f08:	beq	16f70 <ftello64@plt+0x58a0>
   16f0c:	ldr	r0, [r1, #8]
   16f10:	mov	r2, #0
   16f14:	add	r0, r0, #1
   16f18:	str	r0, [r1, #8]
   16f1c:	b	16f24 <ftello64@plt+0x5854>
   16f20:	add	r2, r2, #1
   16f24:	add	r3, r3, #24
   16f28:	ldr	r0, [r3, #-20]	; 0xffffffec
   16f2c:	cmp	r0, #0
   16f30:	bne	16f20 <ftello64@plt+0x5850>
   16f34:	ldr	r0, [r3, #-24]	; 0xffffffe8
   16f38:	cmp	r0, #0
   16f3c:	bne	16f20 <ftello64@plt+0x5850>
   16f40:	ldr	r0, [r3, #-8]
   16f44:	cmp	r0, #0
   16f48:	bne	16f20 <ftello64@plt+0x5850>
   16f4c:	ldr	r0, [r3, #-4]
   16f50:	cmp	r0, #0
   16f54:	bne	16f20 <ftello64@plt+0x5850>
   16f58:	ldm	r1, {r0, r3}
   16f5c:	add	ip, r2, r2, lsl #1
   16f60:	add	r0, r0, ip
   16f64:	add	r2, r3, r2
   16f68:	stm	r1, {r0, r2}
   16f6c:	b	16f84 <ftello64@plt+0x58b4>
   16f70:	ldr	r3, [r0, #4]
   16f74:	cmp	r3, #0
   16f78:	ldrne	r3, [r1, #8]
   16f7c:	addne	r3, r3, #1
   16f80:	strne	r3, [r1, #8]
   16f84:	cmp	r5, #0
   16f88:	popeq	{r4, r5, r6, pc}
   16f8c:	ldr	r0, [r5]
   16f90:	cmp	r0, #0
   16f94:	popeq	{r4, r5, r6, pc}
   16f98:	mov	r4, r1
   16f9c:	mov	r1, r4
   16fa0:	bl	16ef8 <ftello64@plt+0x5828>
   16fa4:	ldr	r3, [r4, #12]
   16fa8:	ldr	r0, [r5, #16]!
   16fac:	add	r3, r3, #1
   16fb0:	cmp	r0, #0
   16fb4:	str	r3, [r4, #12]
   16fb8:	bne	16f9c <ftello64@plt+0x58cc>
   16fbc:	pop	{r4, r5, r6, pc}
   16fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fc4:	sub	sp, sp, #36	; 0x24
   16fc8:	ldr	sl, [r0]
   16fcc:	str	r0, [sp, #12]
   16fd0:	cmp	sl, #0
   16fd4:	str	r1, [sp, #16]
   16fd8:	str	r2, [sp, #20]
   16fdc:	mov	r9, r3
   16fe0:	ldr	r8, [r0, #16]
   16fe4:	ldr	r7, [sp, #72]	; 0x48
   16fe8:	beq	171b4 <ftello64@plt+0x5ae4>
   16fec:	add	fp, sl, #24
   16ff0:	str	r8, [sp, #28]
   16ff4:	str	r3, [sp, #24]
   16ff8:	ldr	r4, [fp, #-20]	; 0xffffffec
   16ffc:	sub	r1, fp, #24
   17000:	cmp	r4, #0
   17004:	bne	17014 <ftello64@plt+0x5944>
   17008:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1700c:	cmp	r3, #0
   17010:	beq	17188 <ftello64@plt+0x5ab8>
   17014:	ldr	r3, [fp, #-12]
   17018:	tst	r3, #4
   1701c:	moveq	sl, r1
   17020:	moveq	r5, r3
   17024:	ldrne	r5, [sl, #12]
   17028:	ands	r5, r5, #8
   1702c:	bne	17170 <ftello64@plt+0x5aa0>
   17030:	tst	r3, #8
   17034:	bne	170b0 <ftello64@plt+0x59e0>
   17038:	sub	r3, r4, #1
   1703c:	cmp	r3, #254	; 0xfe
   17040:	bhi	170b0 <ftello64@plt+0x59e0>
   17044:	bl	11520 <__ctype_b_loc@plt>
   17048:	lsl	r3, r4, #1
   1704c:	ldr	r1, [r0]
   17050:	ldrh	r3, [r1, r3]
   17054:	tst	r3, #16384	; 0x4000
   17058:	beq	170b0 <ftello64@plt+0x59e0>
   1705c:	ldr	r3, [r7, #4]
   17060:	add	r1, r3, #1
   17064:	str	r1, [r7, #4]
   17068:	strb	r4, [r3]
   1706c:	ldr	r3, [sl, #8]
   17070:	cmp	r3, #0
   17074:	beq	170a4 <ftello64@plt+0x59d4>
   17078:	ldr	r3, [r7, #4]
   1707c:	mov	r2, #58	; 0x3a
   17080:	add	r1, r3, #1
   17084:	str	r1, [r7, #4]
   17088:	strb	r2, [r3]
   1708c:	ldr	r3, [sl, #12]
   17090:	tst	r3, #1
   17094:	ldrne	r3, [r7, #4]
   17098:	addne	r1, r3, #1
   1709c:	strne	r1, [r7, #4]
   170a0:	strbne	r2, [r3]
   170a4:	ldr	r3, [r7, #4]
   170a8:	mov	r2, #0
   170ac:	strb	r2, [r3]
   170b0:	ldr	r4, [fp, #-24]	; 0xffffffe8
   170b4:	cmp	r4, #0
   170b8:	beq	17170 <ftello64@plt+0x5aa0>
   170bc:	ldr	r8, [r7]
   170c0:	ldr	r6, [r8, #8]
   170c4:	ldr	r0, [r6]
   170c8:	cmp	r0, #0
   170cc:	beq	170f0 <ftello64@plt+0x5a20>
   170d0:	mov	r9, r6
   170d4:	mov	r1, r4
   170d8:	bl	113a0 <strcmp@plt>
   170dc:	cmp	r0, #0
   170e0:	beq	17178 <ftello64@plt+0x5aa8>
   170e4:	ldr	r0, [r9, #16]!
   170e8:	cmp	r0, #0
   170ec:	bne	170d4 <ftello64@plt+0x5a04>
   170f0:	ldr	r3, [sl, #8]
   170f4:	ldr	r1, [r7, #8]
   170f8:	cmp	r3, #0
   170fc:	str	r4, [r1]
   17100:	beq	17114 <ftello64@plt+0x5a44>
   17104:	ldr	r3, [sl, #12]
   17108:	tst	r3, #1
   1710c:	moveq	r5, #1
   17110:	movne	r5, #2
   17114:	str	r5, [r1, #4]
   17118:	ldr	ip, [fp, #-20]	; 0xffffffec
   1711c:	mov	r3, #0
   17120:	cmp	ip, r3
   17124:	str	r3, [r1, #8]
   17128:	ldr	r2, [sp, #24]
   1712c:	ldr	r3, [r8, #48]	; 0x30
   17130:	ldreq	ip, [sl, #4]
   17134:	sub	r3, r2, r3
   17138:	bic	ip, ip, #-16777216	; 0xff000000
   1713c:	asr	r3, r3, #2
   17140:	add	lr, r1, #16
   17144:	rsb	r0, r3, r3, lsl #3
   17148:	add	r0, r0, r0, lsl #6
   1714c:	add	r0, r3, r0, lsl #3
   17150:	rsb	r0, r0, r0, lsl #15
   17154:	add	r3, r3, r0, lsl #3
   17158:	add	r3, r3, #1
   1715c:	add	r3, ip, r3, lsl #24
   17160:	str	r3, [r1, #12]
   17164:	mov	r3, #0
   17168:	str	lr, [r7, #8]
   1716c:	str	r3, [r1, #16]
   17170:	add	fp, fp, #24
   17174:	b	16ff8 <ftello64@plt+0x5928>
   17178:	sub	r6, r9, r6
   1717c:	cmn	r6, #15
   17180:	bge	17170 <ftello64@plt+0x5aa0>
   17184:	b	170f0 <ftello64@plt+0x5a20>
   17188:	ldr	r3, [fp, #-8]
   1718c:	cmp	r3, #0
   17190:	bne	17014 <ftello64@plt+0x5944>
   17194:	ldr	r3, [fp, #-4]
   17198:	cmp	r3, #0
   1719c:	bne	17014 <ftello64@plt+0x5944>
   171a0:	ldr	r3, [sp, #12]
   171a4:	ldr	r8, [sp, #28]
   171a8:	ldr	r9, [sp, #24]
   171ac:	ldr	r3, [r3, #4]
   171b0:	b	171cc <ftello64@plt+0x5afc>
   171b4:	ldr	r3, [sp, #12]
   171b8:	ldr	r3, [r3, #4]
   171bc:	cmp	r3, #0
   171c0:	moveq	r0, r9
   171c4:	moveq	r9, r3
   171c8:	beq	1723c <ftello64@plt+0x5b6c>
   171cc:	ldr	r2, [r7, #4]
   171d0:	ldr	r1, [sp, #12]
   171d4:	str	r3, [r9]
   171d8:	cmp	r8, #0
   171dc:	stmib	r9, {r1, r2}
   171e0:	ldr	r2, [sp, #16]
   171e4:	mov	r3, #0
   171e8:	str	r2, [r9, #16]
   171ec:	ldr	r2, [sp, #20]
   171f0:	str	r3, [r9, #12]
   171f4:	str	r2, [r9, #20]
   171f8:	str	r3, [r9, #24]
   171fc:	str	r3, [r9, #32]
   17200:	str	r3, [r9, #28]
   17204:	beq	17238 <ftello64@plt+0x5b68>
   17208:	ldr	r2, [r8]
   1720c:	cmp	r2, r3
   17210:	beq	17284 <ftello64@plt+0x5bb4>
   17214:	add	r3, r3, #1
   17218:	ldr	r2, [r8, r3, lsl #4]
   1721c:	cmp	r2, #0
   17220:	bne	17214 <ftello64@plt+0x5b44>
   17224:	lsl	r3, r3, #2
   17228:	ldr	r2, [r7, #12]
   1722c:	add	r3, r2, r3
   17230:	str	r2, [r9, #28]
   17234:	str	r3, [r7, #12]
   17238:	add	r0, r9, #36	; 0x24
   1723c:	cmp	r8, #0
   17240:	beq	1727c <ftello64@plt+0x5bac>
   17244:	ldr	r1, [r8]
   17248:	cmp	r1, #0
   1724c:	beq	1727c <ftello64@plt+0x5bac>
   17250:	mov	r2, #0
   17254:	add	r4, r2, #1
   17258:	mov	r3, r0
   1725c:	str	r7, [sp]
   17260:	mov	r0, r1
   17264:	mov	r1, r9
   17268:	bl	16fc0 <ftello64@plt+0x58f0>
   1726c:	ldr	r1, [r8, r4, lsl #4]
   17270:	mov	r2, r4
   17274:	cmp	r1, #0
   17278:	bne	17254 <ftello64@plt+0x5b84>
   1727c:	add	sp, sp, #36	; 0x24
   17280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17284:	mov	r3, r2
   17288:	b	17228 <ftello64@plt+0x5b58>
   1728c:	cmp	r0, #86	; 0x56
   17290:	beq	1729c <ftello64@plt+0x5bcc>
   17294:	mov	r0, #7
   17298:	bx	lr
   1729c:	ldr	r3, [pc, #104]	; 1730c <ftello64@plt+0x5c3c>
   172a0:	push	{r4, lr}
   172a4:	mov	r4, r2
   172a8:	ldr	r3, [r3]
   172ac:	cmp	r3, #0
   172b0:	beq	172d4 <ftello64@plt+0x5c04>
   172b4:	mov	r1, r2
   172b8:	ldr	r0, [r2, #48]	; 0x30
   172bc:	blx	r3
   172c0:	ldr	r0, [r4, #16]
   172c4:	ands	r0, r0, #32
   172c8:	beq	17308 <ftello64@plt+0x5c38>
   172cc:	mov	r0, #0
   172d0:	pop	{r4, pc}
   172d4:	ldr	r3, [pc, #52]	; 17310 <ftello64@plt+0x5c40>
   172d8:	ldr	r2, [r3]
   172dc:	cmp	r2, #0
   172e0:	beq	172f4 <ftello64@plt+0x5c24>
   172e4:	ldr	r1, [pc, #40]	; 17314 <ftello64@plt+0x5c44>
   172e8:	ldr	r0, [r4, #48]	; 0x30
   172ec:	bl	1155c <fprintf@plt>
   172f0:	b	172c0 <ftello64@plt+0x5bf0>
   172f4:	ldr	r2, [pc, #28]	; 17318 <ftello64@plt+0x5c48>
   172f8:	ldr	r1, [pc, #28]	; 1731c <ftello64@plt+0x5c4c>
   172fc:	mov	r0, r4
   17300:	bl	1c7a4 <argp_error@@Base>
   17304:	b	172c0 <ftello64@plt+0x5bf0>
   17308:	bl	1152c <exit@plt>
   1730c:			; <UNDEFINED> instruction: 0x00032bb8
   17310:	andeq	r2, r3, r4, lsr #24
   17314:	strdeq	r0, [r2], -r4
   17318:	andeq	r0, r2, r0, asr ip
   1731c:	andeq	lr, r1, r0, lsl #15
   17320:	cmn	r0, #3
   17324:	push	{r4, r5, lr}
   17328:	mov	r4, r2
   1732c:	sub	sp, sp, #12
   17330:	beq	17414 <ftello64@plt+0x5d44>
   17334:	ble	173a4 <ftello64@plt+0x5cd4>
   17338:	cmn	r0, #2
   1733c:	beq	17364 <ftello64@plt+0x5c94>
   17340:	cmp	r0, #63	; 0x3f
   17344:	bne	17408 <ftello64@plt+0x5d38>
   17348:	mov	r0, r4
   1734c:	ldr	r2, [pc, #236]	; 17440 <ftello64@plt+0x5d70>
   17350:	ldr	r1, [r4, #48]	; 0x30
   17354:	bl	1c6f4 <argp_state_help@@Base>
   17358:	mov	r0, #0
   1735c:	add	sp, sp, #12
   17360:	pop	{r4, r5, pc}
   17364:	ldr	r3, [pc, #216]	; 17444 <ftello64@plt+0x5d74>
   17368:	mov	r0, r1
   1736c:	str	r1, [sp, #4]
   17370:	str	r1, [r3]
   17374:	bl	18244 <argp_parse@@Base+0xdec>
   17378:	ldr	r3, [r4, #16]
   1737c:	ldr	r2, [pc, #196]	; 17448 <ftello64@plt+0x5d78>
   17380:	and	r3, r3, #3
   17384:	cmp	r3, #1
   17388:	ldr	r1, [sp, #4]
   1738c:	str	r0, [r4, #40]	; 0x28
   17390:	str	r0, [r2]
   17394:	beq	17430 <ftello64@plt+0x5d60>
   17398:	mov	r0, #0
   1739c:	add	sp, sp, #12
   173a0:	pop	{r4, r5, pc}
   173a4:	cmn	r0, #4
   173a8:	bne	17408 <ftello64@plt+0x5d38>
   173ac:	cmp	r1, #0
   173b0:	ldr	r0, [pc, #148]	; 1744c <ftello64@plt+0x5d7c>
   173b4:	mov	r2, #10
   173b8:	movne	r0, r1
   173bc:	mov	r1, #0
   173c0:	bl	113ac <strtol@plt>
   173c4:	ldr	r4, [pc, #132]	; 17450 <ftello64@plt+0x5d80>
   173c8:	str	r0, [r4]
   173cc:	ldr	r3, [r4]
   173d0:	cmp	r3, #0
   173d4:	sub	r3, r3, #1
   173d8:	str	r3, [r4]
   173dc:	ble	17398 <ftello64@plt+0x5cc8>
   173e0:	mov	r5, #1
   173e4:	mov	r0, r5
   173e8:	bl	11430 <sleep@plt>
   173ec:	ldr	r3, [r4]
   173f0:	cmp	r3, #0
   173f4:	sub	r3, r3, #1
   173f8:	str	r3, [r4]
   173fc:	bgt	173e4 <ftello64@plt+0x5d14>
   17400:	mov	r0, #0
   17404:	b	1739c <ftello64@plt+0x5ccc>
   17408:	mov	r0, #7
   1740c:	add	sp, sp, #12
   17410:	pop	{r4, r5, pc}
   17414:	mov	r0, r4
   17418:	ldr	r2, [pc, #52]	; 17454 <ftello64@plt+0x5d84>
   1741c:	ldr	r1, [r4, #48]	; 0x30
   17420:	bl	1c6f4 <argp_state_help@@Base>
   17424:	mov	r0, #0
   17428:	add	sp, sp, #12
   1742c:	pop	{r4, r5, pc}
   17430:	ldr	r3, [r4, #8]
   17434:	mov	r0, #0
   17438:	str	r1, [r3]
   1743c:	b	1735c <ftello64@plt+0x5c8c>
   17440:	andeq	r0, r0, sl, ror r2
   17444:	andeq	r2, r3, r4, asr #22
   17448:	andeq	r2, r3, r0, asr #22
   1744c:	andeq	r0, r2, r4, ror ip
   17450:			; <UNDEFINED> instruction: 0x00032bb4
   17454:	andeq	r0, r0, r1, lsl #4

00017458 <argp_parse@@Base>:
   17458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1745c:	add	fp, sp, #32
   17460:	tst	r3, #1
   17464:	sub	sp, sp, #228	; 0xe4
   17468:	mov	r6, r3
   1746c:	mov	r7, r0
   17470:	str	r1, [fp, #-240]	; 0xffffff10
   17474:	str	r2, [fp, #-232]	; 0xffffff18
   17478:	bne	174a4 <argp_parse@@Base+0x4c>
   1747c:	ldr	r3, [pc, #3260]	; 18140 <argp_parse@@Base+0xce8>
   17480:	ldr	r4, [pc, #3260]	; 18144 <argp_parse@@Base+0xcec>
   17484:	ldr	r2, [r3]
   17488:	cmp	r2, #0
   1748c:	ldreq	r2, [fp, #-232]	; 0xffffff18
   17490:	ldreq	r2, [r2]
   17494:	streq	r2, [r3]
   17498:	ldr	r3, [r4]
   1749c:	cmp	r3, #0
   174a0:	beq	17b44 <argp_parse@@Base+0x6ec>
   174a4:	ands	r3, r6, #16
   174a8:	beq	17a4c <argp_parse@@Base+0x5f4>
   174ac:	sub	r4, fp, #196	; 0xc4
   174b0:	mov	r0, r4
   174b4:	mov	r2, #36	; 0x24
   174b8:	mov	r1, #0
   174bc:	bl	11598 <memset@plt>
   174c0:	ands	r3, r6, #4
   174c4:	str	r3, [fp, #-244]	; 0xffffff0c
   174c8:	mov	r3, #0
   174cc:	moveq	r0, #1
   174d0:	movne	r0, #0
   174d4:	cmp	r7, r3
   174d8:	str	r3, [fp, #-224]	; 0xffffff20
   174dc:	str	r3, [fp, #-220]	; 0xffffff24
   174e0:	str	r3, [fp, #-216]	; 0xffffff28
   174e4:	str	r0, [fp, #-228]	; 0xffffff1c
   174e8:	beq	17950 <argp_parse@@Base+0x4f8>
   174ec:	mov	r0, r7
   174f0:	sub	r1, fp, #228	; 0xe4
   174f4:	bl	16ef8 <ftello64@plt+0x5828>
   174f8:	ldr	r5, [fp, #-220]	; 0xffffff24
   174fc:	ldr	r9, [fp, #-216]	; 0xffffff28
   17500:	add	r5, r5, #1
   17504:	ldr	r3, [fp, #-224]	; 0xffffff20
   17508:	add	r5, r5, r5, lsl #3
   1750c:	lsl	r2, r9, #2
   17510:	lsl	r5, r5, #2
   17514:	add	r3, r3, #1
   17518:	add	sl, r2, r5
   1751c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   17520:	add	r9, sl, r3, lsl #4
   17524:	str	r2, [fp, #-236]	; 0xffffff14
   17528:	add	r0, r9, r0
   1752c:	add	r0, r0, #1
   17530:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   17534:	cmp	r0, #0
   17538:	mov	r8, r0
   1753c:	str	r0, [fp, #-40]	; 0xffffffd8
   17540:	moveq	r5, #12
   17544:	beq	17944 <argp_parse@@Base+0x4ec>
   17548:	mov	r3, #1
   1754c:	str	r3, [fp, #-196]	; 0xffffff3c
   17550:	str	r3, [fp, #-192]	; 0xffffff40
   17554:	ldm	r4!, {r0, r1, r2, r3}
   17558:	sub	ip, fp, #148	; 0x94
   1755c:	add	r5, r8, r5
   17560:	str	r5, [fp, #-104]	; 0xffffff98
   17564:	stmia	ip!, {r0, r1, r2, r3}
   17568:	add	r3, r8, sl
   1756c:	mov	lr, r3
   17570:	ldm	r4!, {r0, r1, r2, r3}
   17574:	add	sl, r8, r9
   17578:	str	lr, [fp, #-248]	; 0xffffff08
   1757c:	str	lr, [fp, #-152]	; 0xffffff68
   17580:	ldr	lr, [r4]
   17584:	stmia	ip!, {r0, r1, r2, r3}
   17588:	mov	r0, r5
   1758c:	ldr	r2, [fp, #-236]	; 0xffffff14
   17590:	mov	r1, #0
   17594:	str	lr, [ip]
   17598:	str	r8, [fp, #-112]	; 0xffffff90
   1759c:	str	sl, [fp, #-156]	; 0xffffff64
   175a0:	bl	11598 <memset@plt>
   175a4:	ldr	lr, [fp, #-248]	; 0xffffff08
   175a8:	sub	r4, fp, #160	; 0xa0
   175ac:	tst	r6, #8
   175b0:	str	lr, [fp, #-204]	; 0xffffff34
   175b4:	str	sl, [fp, #-208]	; 0xffffff30
   175b8:	str	r5, [fp, #-200]	; 0xffffff38
   175bc:	str	r4, [fp, #-212]	; 0xffffff2c
   175c0:	bne	17964 <argp_parse@@Base+0x50c>
   175c4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   175c8:	cmp	r3, #0
   175cc:	addne	r3, sl, #1
   175d0:	movne	r2, #43	; 0x2b
   175d4:	strbne	r2, [sl]
   175d8:	movne	sl, r3
   175dc:	strne	r3, [fp, #-208]	; 0xffffff30
   175e0:	mov	r2, #0
   175e4:	strb	r2, [sl]
   175e8:	ldr	r3, [fp, #-204]	; 0xffffff34
   175ec:	cmp	r7, r2
   175f0:	str	r2, [r3]
   175f4:	str	r7, [fp, #-160]	; 0xffffff60
   175f8:	beq	17b0c <argp_parse@@Base+0x6b4>
   175fc:	sub	r1, fp, #212	; 0xd4
   17600:	mov	r0, r7
   17604:	str	r1, [sp]
   17608:	ldr	r3, [fp, #-112]	; 0xffffff90
   1760c:	mov	r1, r2
   17610:	bl	16fc0 <ftello64@plt+0x58f0>
   17614:	ldr	r7, [fp, #-160]	; 0xffffff60
   17618:	ldr	r5, [fp, #-112]	; 0xffffff90
   1761c:	mov	r8, r0
   17620:	str	r0, [fp, #-108]	; 0xffffff94
   17624:	mov	r2, #56	; 0x38
   17628:	mov	r1, #0
   1762c:	sub	r0, fp, #96	; 0x60
   17630:	bl	11598 <memset@plt>
   17634:	ldr	r2, [pc, #2828]	; 18148 <argp_parse@@Base+0xcf0>
   17638:	ldr	r3, [pc, #2828]	; 1814c <argp_parse@@Base+0xcf4>
   1763c:	ldr	r0, [fp, #-240]	; 0xffffff10
   17640:	ldr	r1, [r2]
   17644:	str	r0, [fp, #-92]	; 0xffffffa4
   17648:	ldr	r2, [r3]
   1764c:	ldr	r0, [fp, #-232]	; 0xffffff18
   17650:	mov	r3, #1
   17654:	cmp	r5, r8
   17658:	str	r7, [fp, #-96]	; 0xffffffa0
   1765c:	str	r0, [fp, #-88]	; 0xffffffa8
   17660:	str	r6, [fp, #-80]	; 0xffffffb0
   17664:	str	r4, [fp, #-44]	; 0xffffffd4
   17668:	str	r1, [fp, #-52]	; 0xffffffcc
   1766c:	str	r2, [fp, #-48]	; 0xffffffd0
   17670:	str	r3, [fp, #-100]	; 0xffffff9c
   17674:	bcc	17978 <argp_parse@@Base+0x520>
   17678:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1767c:	tst	r3, #2
   17680:	bne	17b1c <argp_parse@@Base+0x6c4>
   17684:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17688:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1768c:	mov	r2, #1
   17690:	str	r2, [fp, #-144]	; 0xffffff70
   17694:	ldr	r2, [fp, #-232]	; 0xffffff18
   17698:	cmp	r2, r3
   1769c:	beq	1801c <argp_parse@@Base+0xbc4>
   176a0:	ldr	r3, [pc, #2716]	; 18144 <argp_parse@@Base+0xcec>
   176a4:	ldr	r3, [r3]
   176a8:	str	r3, [fp, #-56]	; 0xffffffc8
   176ac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   176b0:	ldr	r5, [fp, #-84]	; 0xffffffac
   176b4:	ldr	sl, [pc, #2708]	; 18150 <argp_parse@@Base+0xcf8>
   176b8:	mov	r0, r4
   176bc:	mov	r6, #0
   176c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   176c4:	cmp	r3, #0
   176c8:	beq	17b58 <argp_parse@@Base+0x700>
   176cc:	cmp	r3, r5
   176d0:	strgt	r6, [fp, #-72]	; 0xffffffb8
   176d4:	bgt	17b58 <argp_parse@@Base+0x700>
   176d8:	cmp	r5, r0
   176dc:	blt	17ef4 <argp_parse@@Base+0xa9c>
   176e0:	cmp	r5, r0
   176e4:	bne	17f00 <argp_parse@@Base+0xaa8>
   176e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   176ec:	ldr	ip, [fp, #-108]	; 0xffffff94
   176f0:	cmp	r3, ip
   176f4:	bcs	180e4 <argp_parse@@Base+0xc8c>
   176f8:	mov	r5, #0
   176fc:	add	r4, r3, #36	; 0x24
   17700:	mov	r7, r5
   17704:	ldr	r6, [pc, #2632]	; 18154 <argp_parse@@Base+0xcfc>
   17708:	mov	r0, r5
   1770c:	b	17754 <argp_parse@@Base+0x2fc>
   17710:	ldr	ip, [r4, #-4]
   17714:	str	ip, [fp, #-60]	; 0xffffffc4
   17718:	ldr	ip, [r4, #-12]
   1771c:	str	ip, [fp, #-68]	; 0xffffffbc
   17720:	ldr	ip, [r4, #-8]
   17724:	str	r3, [fp, #-76]	; 0xffffffb4
   17728:	str	ip, [fp, #-64]	; 0xffffffc0
   1772c:	blx	r5
   17730:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17734:	str	r3, [r4, #-4]
   17738:	ldr	ip, [fp, #-108]	; 0xffffff94
   1773c:	cmp	ip, r4
   17740:	bls	1808c <argp_parse@@Base+0xc34>
   17744:	cmp	r0, #7
   17748:	cmpne	r0, #0
   1774c:	bne	18068 <argp_parse@@Base+0xc10>
   17750:	add	r4, r4, #36	; 0x24
   17754:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17758:	cmp	r3, #0
   1775c:	bne	1773c <argp_parse@@Base+0x2e4>
   17760:	ldr	r5, [r4, #-36]	; 0xffffffdc
   17764:	sub	r2, fp, #96	; 0x60
   17768:	cmp	r5, #0
   1776c:	mov	r1, r7
   17770:	mov	r0, r6
   17774:	bne	17710 <argp_parse@@Base+0x2b8>
   17778:	cmp	ip, r4
   1777c:	mov	r0, #7
   17780:	bhi	17750 <argp_parse@@Base+0x2f8>
   17784:	ldr	r3, [fp, #-112]	; 0xffffff90
   17788:	sub	r4, ip, #36	; 0x24
   1778c:	cmp	r4, r3
   17790:	movcs	r5, #7
   17794:	bcc	1781c <argp_parse@@Base+0x3c4>
   17798:	cmp	r5, #7
   1779c:	cmpne	r5, #0
   177a0:	bne	1807c <argp_parse@@Base+0xc24>
   177a4:	sub	r4, r4, #36	; 0x24
   177a8:	mov	r7, #0
   177ac:	ldr	r6, [pc, #2468]	; 18158 <argp_parse@@Base+0xd00>
   177b0:	b	177fc <argp_parse@@Base+0x3a4>
   177b4:	ldr	r3, [r4, #68]	; 0x44
   177b8:	ldr	ip, [r4, #48]	; 0x30
   177bc:	str	r3, [fp, #-60]	; 0xffffffc4
   177c0:	ldr	r3, [r4, #60]	; 0x3c
   177c4:	str	r3, [fp, #-68]	; 0xffffffbc
   177c8:	ldr	r3, [r4, #64]	; 0x40
   177cc:	str	ip, [fp, #-76]	; 0xffffffb4
   177d0:	str	r3, [fp, #-64]	; 0xffffffc0
   177d4:	blx	r5
   177d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   177dc:	str	r3, [r4, #68]	; 0x44
   177e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   177e4:	cmp	r4, r3
   177e8:	bcc	180dc <argp_parse@@Base+0xc84>
   177ec:	cmp	r0, #7
   177f0:	cmpne	r0, #0
   177f4:	bne	1804c <argp_parse@@Base+0xbf4>
   177f8:	sub	r4, r4, #36	; 0x24
   177fc:	ldr	r5, [r4, #36]	; 0x24
   17800:	sub	r2, fp, #96	; 0x60
   17804:	cmp	r5, #0
   17808:	mov	r1, r7
   1780c:	mov	r0, r6
   17810:	bne	177b4 <argp_parse@@Base+0x35c>
   17814:	cmp	r4, r3
   17818:	bcs	177f8 <argp_parse@@Base+0x3a0>
   1781c:	ldr	r2, [fp, #4]
   17820:	cmp	r2, #0
   17824:	beq	17840 <argp_parse@@Base+0x3e8>
   17828:	mov	r5, #0
   1782c:	ldr	r1, [fp, #4]
   17830:	ldr	r2, [fp, #-84]	; 0xffffffac
   17834:	str	r2, [r1]
   17838:	cmp	r5, #0
   1783c:	bne	1805c <argp_parse@@Base+0xc04>
   17840:	ldr	ip, [fp, #-108]	; 0xffffff94
   17844:	b	17f18 <argp_parse@@Base+0xac0>
   17848:	ldr	r3, [fp, #-112]	; 0xffffff90
   1784c:	mov	r5, r0
   17850:	ldr	ip, [fp, #-108]	; 0xffffff94
   17854:	cmp	ip, r3
   17858:	bls	18014 <argp_parse@@Base+0xbbc>
   1785c:	ldr	r7, [pc, #2296]	; 1815c <argp_parse@@Base+0xd04>
   17860:	add	r4, r3, #36	; 0x24
   17864:	mov	r8, #0
   17868:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1786c:	sub	r2, fp, #96	; 0x60
   17870:	cmp	r3, #0
   17874:	mov	r1, r8
   17878:	mov	r0, r7
   1787c:	mov	r6, r4
   17880:	beq	178b4 <argp_parse@@Base+0x45c>
   17884:	ldr	ip, [r4, #-4]
   17888:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1788c:	str	ip, [fp, #-60]	; 0xffffffc4
   17890:	ldr	ip, [r4, #-12]
   17894:	str	ip, [fp, #-68]	; 0xffffffbc
   17898:	ldr	ip, [r4, #-8]
   1789c:	str	lr, [fp, #-76]	; 0xffffffb4
   178a0:	str	ip, [fp, #-64]	; 0xffffffc0
   178a4:	blx	r3
   178a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   178ac:	str	r3, [r4, #-4]
   178b0:	ldr	ip, [fp, #-108]	; 0xffffff94
   178b4:	cmp	ip, r6
   178b8:	add	r4, r4, #36	; 0x24
   178bc:	bhi	17868 <argp_parse@@Base+0x410>
   178c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   178c4:	sub	ip, ip, #36	; 0x24
   178c8:	cmp	r3, ip
   178cc:	bhi	17934 <argp_parse@@Base+0x4dc>
   178d0:	ldr	r8, [pc, #2184]	; 18160 <argp_parse@@Base+0xd08>
   178d4:	sub	r4, ip, #36	; 0x24
   178d8:	mov	r9, #0
   178dc:	ldr	r6, [r4, #36]	; 0x24
   178e0:	sub	r2, fp, #96	; 0x60
   178e4:	cmp	r6, #0
   178e8:	mov	r1, r9
   178ec:	mov	r0, r8
   178f0:	mov	r7, r4
   178f4:	beq	17928 <argp_parse@@Base+0x4d0>
   178f8:	ldr	r3, [r4, #68]	; 0x44
   178fc:	ldr	ip, [r4, #48]	; 0x30
   17900:	str	r3, [fp, #-60]	; 0xffffffc4
   17904:	ldr	r3, [r4, #60]	; 0x3c
   17908:	str	r3, [fp, #-68]	; 0xffffffbc
   1790c:	ldr	r3, [r4, #64]	; 0x40
   17910:	str	ip, [fp, #-76]	; 0xffffffb4
   17914:	str	r3, [fp, #-64]	; 0xffffffc0
   17918:	blx	r6
   1791c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17920:	str	r3, [r4, #68]	; 0x44
   17924:	ldr	r3, [fp, #-112]	; 0xffffff90
   17928:	cmp	r3, r7
   1792c:	sub	r4, r4, #36	; 0x24
   17930:	bls	178dc <argp_parse@@Base+0x484>
   17934:	cmp	r5, #7
   17938:	moveq	r5, #22
   1793c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17940:	bl	182f0 <argp_parse@@Base+0xe98>
   17944:	mov	r0, r5
   17948:	sub	sp, fp, #32
   1794c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17950:	mov	sl, #36	; 0x24
   17954:	mov	r5, sl
   17958:	mov	r9, #52	; 0x34
   1795c:	str	r7, [fp, #-236]	; 0xffffff14
   17960:	b	17528 <argp_parse@@Base+0xd0>
   17964:	add	sl, sl, #1
   17968:	mov	r3, #45	; 0x2d
   1796c:	str	sl, [fp, #-208]	; 0xffffff30
   17970:	strb	r3, [r8, r9]
   17974:	b	175e0 <argp_parse@@Base+0x188>
   17978:	ldr	r3, [fp, #8]
   1797c:	add	r4, r5, #36	; 0x24
   17980:	str	r3, [r5, #24]
   17984:	mov	r7, #0
   17988:	ldr	r6, [pc, #2004]	; 18164 <argp_parse@@Base+0xd0c>
   1798c:	b	179e4 <argp_parse@@Base+0x58c>
   17990:	ldr	r2, [r4, #-4]
   17994:	ldr	r0, [r4, #-24]	; 0xffffffe8
   17998:	str	r2, [fp, #-60]	; 0xffffffc4
   1799c:	ldr	r1, [r4, #-12]
   179a0:	sub	r2, fp, #96	; 0x60
   179a4:	str	r1, [fp, #-68]	; 0xffffffbc
   179a8:	ldr	ip, [r4, #-8]
   179ac:	mov	r1, r7
   179b0:	str	r0, [fp, #-76]	; 0xffffffb4
   179b4:	str	ip, [fp, #-64]	; 0xffffffc0
   179b8:	mov	r0, r6
   179bc:	blx	r3
   179c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   179c4:	str	r3, [r4, #-4]
   179c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   179cc:	cmp	r3, r4
   179d0:	bls	18100 <argp_parse@@Base+0xca8>
   179d4:	cmp	r0, #7
   179d8:	cmpne	r0, #0
   179dc:	bne	17afc <argp_parse@@Base+0x6a4>
   179e0:	add	r4, r4, #36	; 0x24
   179e4:	ldr	r3, [r4, #-20]	; 0xffffffec
   179e8:	cmp	r3, #0
   179ec:	ldrne	r3, [r3, #28]
   179f0:	ldrne	r2, [r4, #-16]
   179f4:	ldrne	r3, [r3, r2, lsl #2]
   179f8:	strne	r3, [r4, #-12]
   179fc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17a00:	cmp	r3, #0
   17a04:	bne	17990 <argp_parse@@Base+0x538>
   17a08:	ldr	r3, [r4, #-32]	; 0xffffffe0
   17a0c:	ldr	r3, [r3, #16]
   17a10:	cmp	r3, #0
   17a14:	beq	17a3c <argp_parse@@Base+0x5e4>
   17a18:	ldr	r3, [r3]
   17a1c:	cmp	r3, #0
   17a20:	beq	17a3c <argp_parse@@Base+0x5e4>
   17a24:	ldr	r3, [r4, #-8]
   17a28:	ldr	r2, [r4, #-12]
   17a2c:	str	r2, [r3]
   17a30:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17a34:	cmp	r3, #0
   17a38:	bne	17990 <argp_parse@@Base+0x538>
   17a3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17a40:	cmp	r3, r4
   17a44:	bhi	179e0 <argp_parse@@Base+0x588>
   17a48:	b	17678 <argp_parse@@Base+0x220>
   17a4c:	sub	sp, sp, #72	; 0x48
   17a50:	add	r4, sp, #8
   17a54:	sub	sp, sp, #40	; 0x28
   17a58:	add	r5, sp, #8
   17a5c:	mov	r1, r3
   17a60:	mov	r0, r4
   17a64:	mov	r2, #64	; 0x40
   17a68:	str	r3, [r5]
   17a6c:	str	r3, [r5, #4]
   17a70:	str	r3, [r5, #8]
   17a74:	str	r3, [r5, #12]
   17a78:	str	r3, [r5, #20]
   17a7c:	str	r3, [r5, #24]
   17a80:	str	r4, [r5, #16]
   17a84:	bl	11598 <memset@plt>
   17a88:	ldr	r3, [pc, #1752]	; 18168 <argp_parse@@Base+0xd10>
   17a8c:	cmp	r7, #0
   17a90:	strne	r7, [r4]
   17a94:	ldr	r3, [r3]
   17a98:	addne	r4, r4, #16
   17a9c:	ldr	r2, [pc, #1736]	; 1816c <argp_parse@@Base+0xd14>
   17aa0:	cmp	r3, #0
   17aa4:	str	r2, [r4]
   17aa8:	beq	18034 <argp_parse@@Base+0xbdc>
   17aac:	ldr	r2, [pc, #1724]	; 18170 <argp_parse@@Base+0xd18>
   17ab0:	add	r3, r4, #32
   17ab4:	str	r2, [r4, #16]
   17ab8:	mov	r8, #0
   17abc:	sub	r4, fp, #196	; 0xc4
   17ac0:	str	r8, [r3]
   17ac4:	mov	r1, r8
   17ac8:	mov	r0, r4
   17acc:	mov	r2, #36	; 0x24
   17ad0:	bl	11598 <memset@plt>
   17ad4:	ands	r3, r6, #4
   17ad8:	str	r3, [fp, #-244]	; 0xffffff0c
   17adc:	moveq	r3, #1
   17ae0:	movne	r3, r8
   17ae4:	mov	r7, r5
   17ae8:	str	r8, [fp, #-224]	; 0xffffff20
   17aec:	str	r8, [fp, #-220]	; 0xffffff24
   17af0:	str	r8, [fp, #-216]	; 0xffffff28
   17af4:	str	r3, [fp, #-228]	; 0xffffff1c
   17af8:	b	174ec <argp_parse@@Base+0x94>
   17afc:	mov	r5, r0
   17b00:	mov	r0, r5
   17b04:	sub	sp, fp, #32
   17b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b0c:	ldr	r5, [fp, #-112]	; 0xffffff90
   17b10:	mov	r8, r5
   17b14:	str	r5, [fp, #-108]	; 0xffffff94
   17b18:	b	17624 <argp_parse@@Base+0x1cc>
   17b1c:	tst	r3, #1
   17b20:	mov	r3, #0
   17b24:	str	r3, [fp, #-144]	; 0xffffff70
   17b28:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17b2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17b30:	subne	r3, r3, #4
   17b34:	addne	r4, r4, #1
   17b38:	strne	r3, [fp, #-88]	; 0xffffffa8
   17b3c:	strne	r4, [fp, #-92]	; 0xffffffa4
   17b40:	b	17694 <argp_parse@@Base+0x23c>
   17b44:	ldr	r3, [fp, #-232]	; 0xffffff18
   17b48:	ldr	r0, [r3]
   17b4c:	bl	18244 <argp_parse@@Base+0xdec>
   17b50:	str	r0, [r4]
   17b54:	b	174a4 <argp_parse@@Base+0x4c>
   17b58:	cmp	r2, #0
   17b5c:	beq	176d8 <argp_parse@@Base+0x280>
   17b60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17b64:	str	r5, [fp, #-148]	; 0xffffff6c
   17b68:	ands	ip, r3, #64	; 0x40
   17b6c:	mvn	r3, #0
   17b70:	str	r3, [fp, #-140]	; 0xffffff74
   17b74:	ldr	r2, [fp, #-156]	; 0xffffff64
   17b78:	ldr	r3, [fp, #-152]	; 0xffffff68
   17b7c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17b80:	beq	17ea0 <argp_parse@@Base+0xa48>
   17b84:	sub	ip, fp, #148	; 0x94
   17b88:	stm	sp, {r6, ip}
   17b8c:	bl	183c4 <argp_parse@@Base+0xf6c>
   17b90:	ldr	r5, [fp, #-148]	; 0xffffff6c
   17b94:	str	r5, [fp, #-84]	; 0xffffffac
   17b98:	mov	r7, r0
   17b9c:	cmn	r7, #1
   17ba0:	beq	17ec0 <argp_parse@@Base+0xa68>
   17ba4:	cmp	r7, #63	; 0x3f
   17ba8:	beq	17fc4 <argp_parse@@Base+0xb6c>
   17bac:	cmp	r7, #1
   17bb0:	beq	17d08 <argp_parse@@Base+0x8b0>
   17bb4:	asrs	r8, r7, #24
   17bb8:	bne	17c64 <argp_parse@@Base+0x80c>
   17bbc:	mov	r1, r7
   17bc0:	ldr	r0, [fp, #-156]	; 0xffffff64
   17bc4:	bl	11550 <strchr@plt>
   17bc8:	cmp	r0, #0
   17bcc:	beq	17cd4 <argp_parse@@Base+0x87c>
   17bd0:	ldr	r4, [fp, #-112]	; 0xffffff90
   17bd4:	ldr	r2, [fp, #-108]	; 0xffffff94
   17bd8:	cmp	r4, r2
   17bdc:	bcc	17bf0 <argp_parse@@Base+0x798>
   17be0:	b	17cd4 <argp_parse@@Base+0x87c>
   17be4:	add	r4, r4, #36	; 0x24
   17be8:	cmp	r4, r2
   17bec:	bcs	17cd4 <argp_parse@@Base+0x87c>
   17bf0:	ldr	r3, [r4, #8]
   17bf4:	cmp	r0, r3
   17bf8:	bcs	17be4 <argp_parse@@Base+0x78c>
   17bfc:	ldr	r3, [r4]
   17c00:	cmp	r3, #0
   17c04:	beq	17cd4 <argp_parse@@Base+0x87c>
   17c08:	ldr	r2, [r4, #32]
   17c0c:	ldr	r0, [r4, #28]
   17c10:	ldr	ip, [r4, #24]
   17c14:	str	r2, [fp, #-60]	; 0xffffffc4
   17c18:	ldr	r2, [r4, #12]
   17c1c:	ldr	r1, [fp, #-136]	; 0xffffff78
   17c20:	str	r0, [fp, #-64]	; 0xffffffc0
   17c24:	str	r2, [fp, #-76]	; 0xffffffb4
   17c28:	str	ip, [fp, #-68]	; 0xffffffbc
   17c2c:	sub	r2, fp, #96	; 0x60
   17c30:	mov	r0, r7
   17c34:	blx	r3
   17c38:	mov	r8, r6
   17c3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17c40:	str	r3, [r4, #32]
   17c44:	cmp	r0, #7
   17c48:	beq	17ccc <argp_parse@@Base+0x874>
   17c4c:	cmp	r0, #0
   17c50:	bne	17848 <argp_parse@@Base+0x3f0>
   17c54:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c58:	ldr	r5, [fp, #-84]	; 0xffffffac
   17c5c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17c60:	b	176c0 <argp_parse@@Base+0x268>
   17c64:	add	r3, r8, r8, lsl #3
   17c68:	ldr	r2, [fp, #-112]	; 0xffffff90
   17c6c:	lsl	r3, r3, #2
   17c70:	sub	r3, r3, #36	; 0x24
   17c74:	add	r4, r2, r3
   17c78:	ldr	r5, [r2, r3]
   17c7c:	ands	r3, r7, #8388608	; 0x800000
   17c80:	movne	r3, #-16777216	; 0xff000000
   17c84:	cmp	r5, #0
   17c88:	beq	17e58 <argp_parse@@Base+0xa00>
   17c8c:	ldr	r0, [r4, #32]
   17c90:	ldr	r2, [r4, #24]
   17c94:	str	r0, [fp, #-60]	; 0xffffffc4
   17c98:	ldr	r0, [r4, #28]
   17c9c:	str	r2, [fp, #-68]	; 0xffffffbc
   17ca0:	ldr	r2, [r4, #12]
   17ca4:	str	r0, [fp, #-64]	; 0xffffffc0
   17ca8:	bic	r0, r7, #-16777216	; 0xff000000
   17cac:	str	r2, [fp, #-76]	; 0xffffffb4
   17cb0:	orr	r0, r0, r3
   17cb4:	ldr	r1, [fp, #-136]	; 0xffffff78
   17cb8:	sub	r2, fp, #96	; 0x60
   17cbc:	blx	r5
   17cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17cc4:	str	r3, [r4, #32]
   17cc8:	b	17c44 <argp_parse@@Base+0x7ec>
   17ccc:	cmp	r8, #0
   17cd0:	bne	17e58 <argp_parse@@Base+0xa00>
   17cd4:	mov	r2, r7
   17cd8:	ldr	r3, [pc, #1172]	; 18174 <argp_parse@@Base+0xd1c>
   17cdc:	ldr	r1, [pc, #1172]	; 18178 <argp_parse@@Base+0xd20>
   17ce0:	sub	r0, fp, #96	; 0x60
   17ce4:	bl	1c7a4 <argp_error@@Base>
   17ce8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17cec:	mov	r2, #260	; 0x104
   17cf0:	sub	r0, fp, #96	; 0x60
   17cf4:	bl	1c6f4 <argp_state_help@@Base>
   17cf8:	mov	r5, #7
   17cfc:	ldr	r3, [fp, #-112]	; 0xffffff90
   17d00:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d04:	b	17854 <argp_parse@@Base+0x3fc>
   17d08:	ldr	r7, [fp, #-136]	; 0xffffff78
   17d0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17d10:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d14:	sub	r8, r5, #1
   17d18:	cmp	r3, ip
   17d1c:	str	r8, [fp, #-84]	; 0xffffffac
   17d20:	bcs	17e4c <argp_parse@@Base+0x9f4>
   17d24:	mov	lr, r8
   17d28:	add	r4, r3, #36	; 0x24
   17d2c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17d30:	add	r5, lr, #1
   17d34:	cmp	r3, #0
   17d38:	str	r5, [fp, #-84]	; 0xffffffac
   17d3c:	sub	r2, fp, #96	; 0x60
   17d40:	mov	r1, r7
   17d44:	mov	r0, r6
   17d48:	sub	r5, r4, #36	; 0x24
   17d4c:	mov	r9, r4
   17d50:	streq	lr, [fp, #-84]	; 0xffffffac
   17d54:	beq	17e40 <argp_parse@@Base+0x9e8>
   17d58:	ldr	ip, [r4, #-4]
   17d5c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17d60:	str	ip, [fp, #-60]	; 0xffffffc4
   17d64:	ldr	ip, [r4, #-12]
   17d68:	str	ip, [fp, #-68]	; 0xffffffbc
   17d6c:	ldr	ip, [r4, #-8]
   17d70:	str	lr, [fp, #-76]	; 0xffffffb4
   17d74:	str	ip, [fp, #-64]	; 0xffffffc0
   17d78:	blx	r3
   17d7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d80:	str	r3, [r4, #-4]
   17d84:	cmp	r0, #7
   17d88:	beq	17dc4 <argp_parse@@Base+0x96c>
   17d8c:	cmp	r0, #0
   17d90:	bne	17848 <argp_parse@@Base+0x3f0>
   17d94:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17d98:	ldr	r5, [fp, #-84]	; 0xffffffac
   17d9c:	cmp	r8, r5
   17da0:	sublt	r8, r5, r8
   17da4:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   17da8:	movge	r3, #1
   17dac:	addlt	r8, r3, r8
   17db0:	strlt	r8, [r4, #-24]	; 0xffffffe8
   17db4:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   17db8:	strge	r3, [fp, #-100]	; 0xffffff9c
   17dbc:	movge	r2, r3
   17dc0:	b	176c0 <argp_parse@@Base+0x268>
   17dc4:	ldr	lr, [fp, #-84]	; 0xffffffac
   17dc8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17dcc:	sub	lr, lr, #1
   17dd0:	cmp	r3, #0
   17dd4:	str	lr, [fp, #-84]	; 0xffffffac
   17dd8:	beq	17e3c <argp_parse@@Base+0x9e4>
   17ddc:	add	r0, r5, #24
   17de0:	ldr	r2, [r5, #12]
   17de4:	ldm	r0, {r0, r1, ip}
   17de8:	str	r2, [fp, #-76]	; 0xffffffb4
   17dec:	sub	r2, fp, #96	; 0x60
   17df0:	str	ip, [fp, #-60]	; 0xffffffc4
   17df4:	str	r0, [fp, #-68]	; 0xffffffbc
   17df8:	str	r1, [fp, #-64]	; 0xffffffc0
   17dfc:	mov	r0, sl
   17e00:	mov	r1, r6
   17e04:	blx	r3
   17e08:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17e10:	cmp	r4, ip
   17e14:	movcs	r1, #0
   17e18:	movcc	r1, #1
   17e1c:	mov	r3, r4
   17e20:	str	r2, [r5, #32]
   17e24:	cmp	r0, #7
   17e28:	movne	r1, #0
   17e2c:	cmp	r1, #0
   17e30:	beq	18118 <argp_parse@@Base+0xcc0>
   17e34:	ldr	lr, [fp, #-84]	; 0xffffffac
   17e38:	b	17d28 <argp_parse@@Base+0x8d0>
   17e3c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e40:	cmp	r9, ip
   17e44:	add	r4, r4, #36	; 0x24
   17e48:	bcc	17d2c <argp_parse@@Base+0x8d4>
   17e4c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17e50:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17e54:	b	176e0 <argp_parse@@Base+0x288>
   17e58:	ldr	r3, [fp, #-152]	; 0xffffff68
   17e5c:	ldr	r2, [r3, #12]
   17e60:	cmp	r2, r7
   17e64:	bne	17e7c <argp_parse@@Base+0xa24>
   17e68:	b	17fb0 <argp_parse@@Base+0xb58>
   17e6c:	add	r3, r3, #16
   17e70:	ldr	r2, [r3, #12]
   17e74:	cmp	r2, r7
   17e78:	beq	17fb0 <argp_parse@@Base+0xb58>
   17e7c:	ldr	r2, [r3]
   17e80:	cmp	r2, #0
   17e84:	bne	17e6c <argp_parse@@Base+0xa14>
   17e88:	ldr	r2, [pc, #748]	; 1817c <argp_parse@@Base+0xd24>
   17e8c:	ldr	r3, [pc, #736]	; 18174 <argp_parse@@Base+0xd1c>
   17e90:	ldr	r1, [pc, #744]	; 18180 <argp_parse@@Base+0xd28>
   17e94:	sub	r0, fp, #96	; 0x60
   17e98:	bl	1c7a4 <argp_error@@Base>
   17e9c:	b	17ce8 <argp_parse@@Base+0x890>
   17ea0:	sub	lr, fp, #148	; 0x94
   17ea4:	stm	sp, {ip, lr}
   17ea8:	bl	18370 <argp_parse@@Base+0xf18>
   17eac:	ldr	r5, [fp, #-148]	; 0xffffff6c
   17eb0:	str	r5, [fp, #-84]	; 0xffffffac
   17eb4:	mov	r7, r0
   17eb8:	cmn	r7, #1
   17ebc:	bne	17ba4 <argp_parse@@Base+0x74c>
   17ec0:	cmp	r5, #1
   17ec4:	str	r6, [fp, #-100]	; 0xffffff9c
   17ec8:	ble	17ee8 <argp_parse@@Base+0xa90>
   17ecc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17ed0:	sub	r3, r5, #-1073741823	; 0xc0000001
   17ed4:	ldr	r1, [pc, #680]	; 18184 <argp_parse@@Base+0xd2c>
   17ed8:	ldr	r0, [r2, r3, lsl #2]
   17edc:	bl	113a0 <strcmp@plt>
   17ee0:	cmp	r0, #0
   17ee4:	streq	r5, [fp, #-72]	; 0xffffffb8
   17ee8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17eec:	cmp	r5, r0
   17ef0:	bge	176e0 <argp_parse@@Base+0x288>
   17ef4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17ef8:	tst	r3, #4
   17efc:	beq	17fd4 <argp_parse@@Base+0xb7c>
   17f00:	ldr	r3, [fp, #4]
   17f04:	cmp	r3, #0
   17f08:	beq	180ac <argp_parse@@Base+0xc54>
   17f0c:	str	r5, [r3]
   17f10:	ldr	ip, [fp, #-108]	; 0xffffff94
   17f14:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f18:	sub	r2, ip, #36	; 0x24
   17f1c:	cmp	r3, r2
   17f20:	bhi	18008 <argp_parse@@Base+0xbb0>
   17f24:	ldr	r6, [pc, #604]	; 18188 <argp_parse@@Base+0xd30>
   17f28:	sub	r4, ip, #72	; 0x48
   17f2c:	mov	r7, #0
   17f30:	ldr	r5, [r4, #36]	; 0x24
   17f34:	sub	r2, fp, #96	; 0x60
   17f38:	cmp	r5, #0
   17f3c:	mov	r1, r7
   17f40:	mov	r0, r6
   17f44:	beq	17fa0 <argp_parse@@Base+0xb48>
   17f48:	ldr	r3, [r4, #68]	; 0x44
   17f4c:	ldr	ip, [r4, #48]	; 0x30
   17f50:	str	r3, [fp, #-60]	; 0xffffffc4
   17f54:	ldr	r3, [r4, #60]	; 0x3c
   17f58:	str	r3, [fp, #-68]	; 0xffffffbc
   17f5c:	ldr	r3, [r4, #64]	; 0x40
   17f60:	str	ip, [fp, #-76]	; 0xffffffb4
   17f64:	str	r3, [fp, #-64]	; 0xffffffc0
   17f68:	blx	r5
   17f6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17f70:	str	r3, [r4, #68]	; 0x44
   17f74:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f78:	cmp	r4, r3
   17f7c:	bcc	17fe8 <argp_parse@@Base+0xb90>
   17f80:	cmp	r0, #7
   17f84:	cmpne	r0, #0
   17f88:	sub	r4, r4, #36	; 0x24
   17f8c:	beq	17f30 <argp_parse@@Base+0xad8>
   17f90:	ldr	ip, [fp, #-108]	; 0xffffff94
   17f94:	mov	r5, r0
   17f98:	sub	ip, ip, #36	; 0x24
   17f9c:	b	178c8 <argp_parse@@Base+0x470>
   17fa0:	cmp	r4, r3
   17fa4:	bcc	17ff4 <argp_parse@@Base+0xb9c>
   17fa8:	sub	r4, r4, #36	; 0x24
   17fac:	b	17f30 <argp_parse@@Base+0xad8>
   17fb0:	ldr	r2, [r3]
   17fb4:	ldr	r3, [pc, #448]	; 1817c <argp_parse@@Base+0xd24>
   17fb8:	cmp	r2, #0
   17fbc:	moveq	r2, r3
   17fc0:	b	17e8c <argp_parse@@Base+0xa34>
   17fc4:	ldr	r3, [fp, #-140]	; 0xffffff74
   17fc8:	cmn	r3, #1
   17fcc:	bne	17ce8 <argp_parse@@Base+0x890>
   17fd0:	b	17bbc <argp_parse@@Base+0x764>
   17fd4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17fd8:	ldr	r7, [r3, r5, lsl #2]
   17fdc:	add	r5, r5, #1
   17fe0:	str	r7, [fp, #-136]	; 0xffffff78
   17fe4:	b	17d0c <argp_parse@@Base+0x8b4>
   17fe8:	cmp	r0, #7
   17fec:	mov	r5, r0
   17ff0:	bne	18010 <argp_parse@@Base+0xbb8>
   17ff4:	ldr	ip, [fp, #-108]	; 0xffffff94
   17ff8:	sub	ip, ip, #36	; 0x24
   17ffc:	cmp	ip, r3
   18000:	movcs	r5, #0
   18004:	bcs	178d0 <argp_parse@@Base+0x478>
   18008:	mov	r5, #0
   1800c:	b	1793c <argp_parse@@Base+0x4e4>
   18010:	ldr	ip, [fp, #-108]	; 0xffffff94
   18014:	sub	ip, ip, #36	; 0x24
   18018:	b	178c8 <argp_parse@@Base+0x470>
   1801c:	ldr	r0, [r2]
   18020:	cmp	r0, #0
   18024:	beq	176a0 <argp_parse@@Base+0x248>
   18028:	bl	18244 <argp_parse@@Base+0xdec>
   1802c:	str	r0, [fp, #-56]	; 0xffffffc8
   18030:	b	176ac <argp_parse@@Base+0x254>
   18034:	ldr	r3, [pc, #336]	; 1818c <argp_parse@@Base+0xd34>
   18038:	ldr	r3, [r3]
   1803c:	cmp	r3, #0
   18040:	addeq	r3, r4, #16
   18044:	bne	17aac <argp_parse@@Base+0x654>
   18048:	b	17ab8 <argp_parse@@Base+0x660>
   1804c:	mov	r5, r0
   18050:	ldr	r2, [fp, #4]
   18054:	cmp	r2, #0
   18058:	bne	1782c <argp_parse@@Base+0x3d4>
   1805c:	cmp	r5, #7
   18060:	bne	17850 <argp_parse@@Base+0x3f8>
   18064:	b	17ce8 <argp_parse@@Base+0x890>
   18068:	ldr	r3, [fp, #-112]	; 0xffffff90
   1806c:	sub	ip, ip, #36	; 0x24
   18070:	cmp	r3, ip
   18074:	mov	r5, r0
   18078:	bls	18050 <argp_parse@@Base+0xbf8>
   1807c:	ldr	r2, [fp, #4]
   18080:	cmp	r2, #0
   18084:	bne	1782c <argp_parse@@Base+0x3d4>
   18088:	b	17838 <argp_parse@@Base+0x3e0>
   1808c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18090:	sub	r4, ip, #36	; 0x24
   18094:	cmp	r4, r3
   18098:	mov	r5, r0
   1809c:	bcs	17798 <argp_parse@@Base+0x340>
   180a0:	cmp	r5, #7
   180a4:	beq	1781c <argp_parse@@Base+0x3c4>
   180a8:	b	1807c <argp_parse@@Base+0xc24>
   180ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   180b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   180b4:	tst	r3, #2
   180b8:	bne	17cec <argp_parse@@Base+0x894>
   180bc:	cmp	r1, #0
   180c0:	beq	17cec <argp_parse@@Base+0x894>
   180c4:	mov	r0, r1
   180c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   180cc:	ldr	r1, [pc, #188]	; 18190 <argp_parse@@Base+0xd38>
   180d0:	bl	1155c <fprintf@plt>
   180d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   180d8:	b	17cec <argp_parse@@Base+0x894>
   180dc:	mov	r5, r0
   180e0:	b	180a0 <argp_parse@@Base+0xc48>
   180e4:	sub	r4, ip, #36	; 0x24
   180e8:	cmp	r3, r4
   180ec:	bls	177a4 <argp_parse@@Base+0x34c>
   180f0:	ldr	r2, [fp, #4]
   180f4:	cmp	r2, #0
   180f8:	bne	17828 <argp_parse@@Base+0x3d0>
   180fc:	b	17f18 <argp_parse@@Base+0xac0>
   18100:	cmp	r0, #7
   18104:	mov	r5, r0
   18108:	beq	17678 <argp_parse@@Base+0x220>
   1810c:	cmp	r0, #0
   18110:	beq	17678 <argp_parse@@Base+0x220>
   18114:	b	17944 <argp_parse@@Base+0x4ec>
   18118:	cmp	r0, #0
   1811c:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   18120:	moveq	r5, r0
   18124:	streq	r0, [fp, #-84]	; 0xffffffac
   18128:	beq	17d9c <argp_parse@@Base+0x944>
   1812c:	cmp	r0, #7
   18130:	mov	r5, r0
   18134:	beq	17e4c <argp_parse@@Base+0x9f4>
   18138:	ldr	r3, [fp, #-112]	; 0xffffff90
   1813c:	b	17854 <argp_parse@@Base+0x3fc>
   18140:	andeq	r2, r3, r4, asr #22
   18144:	andeq	r2, r3, r0, asr #22
   18148:	andeq	r2, r3, r8, asr #22
   1814c:	andeq	r2, r3, ip, asr #22
   18150:	tsteq	r0, r6
   18154:	tsteq	r0, r2
   18158:	tsteq	r0, r1
   1815c:	tsteq	r0, r5
   18160:	tsteq	r0, r7
   18164:	tsteq	r0, r3
   18168:	andeq	r2, r3, r4, lsr #24
   1816c:	andeq	r0, r2, r8, lsr fp
   18170:	andeq	r0, r2, r4, asr fp
   18174:	andeq	r0, r2, r0, ror fp
   18178:	andeq	r0, r2, r4, lsl #25
   1817c:	andeq	r0, r2, ip, ror ip
   18180:	andeq	r0, r2, ip, lsl #25
   18184:	andeq	r0, r2, r0, lsl #25
   18188:	tsteq	r0, r4
   1818c:			; <UNDEFINED> instruction: 0x00032bb8
   18190:	muleq	r2, r8, ip
   18194:	cmp	r1, #0
   18198:	beq	181d8 <argp_parse@@Base+0xd80>
   1819c:	ldr	r2, [r1, #52]	; 0x34
   181a0:	ldr	r3, [r2, #48]	; 0x30
   181a4:	ldr	r1, [r2, #52]	; 0x34
   181a8:	cmp	r3, r1
   181ac:	bcs	181d8 <argp_parse@@Base+0xd80>
   181b0:	ldr	r2, [r3, #4]
   181b4:	cmp	r0, r2
   181b8:	bne	181cc <argp_parse@@Base+0xd74>
   181bc:	b	181e0 <argp_parse@@Base+0xd88>
   181c0:	ldr	r2, [r3, #4]
   181c4:	cmp	r2, r0
   181c8:	beq	181e0 <argp_parse@@Base+0xd88>
   181cc:	add	r3, r3, #36	; 0x24
   181d0:	cmp	r3, r1
   181d4:	bcc	181c0 <argp_parse@@Base+0xd68>
   181d8:	mov	r0, #0
   181dc:	bx	lr
   181e0:	ldr	r0, [r3, #24]
   181e4:	bx	lr
   181e8:	ldr	ip, [pc, #32]	; 18210 <argp_parse@@Base+0xdb8>
   181ec:	push	{lr}		; (str lr, [sp, #-4]!)
   181f0:	sub	sp, sp, #12
   181f4:	ldm	ip, {r1, ip}
   181f8:	ldr	r3, [pc, #20]	; 18214 <argp_parse@@Base+0xdbc>
   181fc:	ldr	r2, [pc, #20]	; 18218 <argp_parse@@Base+0xdc0>
   18200:	str	ip, [sp]
   18204:	bl	18e18 <_obstack_memory_used@@Base+0x6d8>
   18208:	add	sp, sp, #12
   1820c:	pop	{pc}		; (ldr pc, [sp], #4)
   18210:			; <UNDEFINED> instruction: 0x00032bbc
   18214:	andeq	r0, r2, r0, ror sp
   18218:	andeq	r0, r2, r0, lsl #27
   1821c:	ldr	r3, [pc, #20]	; 18238 <argp_parse@@Base+0xde0>
   18220:	ldr	r2, [pc, #20]	; 1823c <argp_parse@@Base+0xde4>
   18224:	ldr	ip, [pc, #20]	; 18240 <argp_parse@@Base+0xde8>
   18228:	str	r0, [r3]
   1822c:	str	ip, [r2]
   18230:	str	r1, [r3, #4]
   18234:	bx	lr
   18238:			; <UNDEFINED> instruction: 0x00032bbc
   1823c:			; <UNDEFINED> instruction: 0x00032bb8
   18240:	andeq	r8, r1, r8, ror #3
   18244:	ldrb	r3, [r0]
   18248:	cmp	r3, #47	; 0x2f
   1824c:	bne	1825c <argp_parse@@Base+0xe04>
   18250:	ldrb	r3, [r0, #1]!
   18254:	cmp	r3, #47	; 0x2f
   18258:	beq	18250 <argp_parse@@Base+0xdf8>
   1825c:	cmp	r3, #0
   18260:	bxeq	lr
   18264:	mov	r2, #0
   18268:	push	{lr}		; (str lr, [sp, #-4]!)
   1826c:	mov	ip, r2
   18270:	mov	r1, r0
   18274:	mov	lr, #1
   18278:	cmp	r3, #47	; 0x2f
   1827c:	moveq	r2, lr
   18280:	beq	18290 <argp_parse@@Base+0xe38>
   18284:	cmp	r2, #0
   18288:	movne	r0, r1
   1828c:	movne	r2, ip
   18290:	ldrb	r3, [r1, #1]!
   18294:	cmp	r3, #0
   18298:	bne	18278 <argp_parse@@Base+0xe20>
   1829c:	pop	{pc}		; (ldr pc, [sp], #4)
   182a0:	push	{r4, lr}
   182a4:	mov	r4, r0
   182a8:	bl	11544 <strlen@plt>
   182ac:	cmp	r0, #1
   182b0:	popls	{r4, pc}
   182b4:	sub	r3, r0, #1
   182b8:	add	r2, r4, r3
   182bc:	ldrb	r1, [r4, r3]
   182c0:	cmp	r1, #47	; 0x2f
   182c4:	popne	{r4, pc}
   182c8:	cmp	r3, #1
   182cc:	beq	182e0 <argp_parse@@Base+0xe88>
   182d0:	ldrb	r1, [r2, #-1]!
   182d4:	sub	r0, r3, #1
   182d8:	cmp	r1, #47	; 0x2f
   182dc:	beq	182e8 <argp_parse@@Base+0xe90>
   182e0:	mov	r0, r3
   182e4:	pop	{r4, pc}
   182e8:	mov	r3, r0
   182ec:	b	182c8 <argp_parse@@Base+0xe70>
   182f0:	push	{r4, r5, lr}
   182f4:	sub	sp, sp, #12
   182f8:	mov	r5, r0
   182fc:	bl	11568 <__errno_location@plt>
   18300:	mov	r2, #0
   18304:	mov	r4, r0
   18308:	ldr	r3, [r0]
   1830c:	str	r2, [r4]
   18310:	mov	r0, r5
   18314:	str	r3, [sp]
   18318:	str	r3, [sp, #4]
   1831c:	bl	113dc <free@plt>
   18320:	ldr	r3, [r4]
   18324:	add	r2, sp, #8
   18328:	cmp	r3, #0
   1832c:	moveq	r3, #4
   18330:	movne	r3, #0
   18334:	add	r3, r2, r3
   18338:	ldr	r3, [r3, #-8]
   1833c:	str	r3, [r4]
   18340:	add	sp, sp, #12
   18344:	pop	{r4, r5, pc}
   18348:	push	{lr}		; (str lr, [sp, #-4]!)
   1834c:	sub	sp, sp, #20
   18350:	mov	ip, #0
   18354:	ldr	lr, [sp, #24]
   18358:	str	ip, [sp, #8]
   1835c:	str	lr, [sp]
   18360:	str	ip, [sp, #4]
   18364:	bl	1d448 <argp_error@@Base+0xca4>
   18368:	add	sp, sp, #20
   1836c:	pop	{pc}		; (ldr pc, [sp], #4)
   18370:	push	{r4, lr}
   18374:	sub	sp, sp, #16
   18378:	mov	ip, #0
   1837c:	ldr	r4, [sp, #24]
   18380:	ldr	lr, [sp, #28]
   18384:	str	r4, [sp]
   18388:	str	lr, [sp, #8]
   1838c:	str	ip, [sp, #12]
   18390:	str	ip, [sp, #4]
   18394:	bl	1cee8 <argp_error@@Base+0x744>
   18398:	add	sp, sp, #16
   1839c:	pop	{r4, pc}
   183a0:	push	{r4, lr}
   183a4:	sub	sp, sp, #16
   183a8:	mov	lr, #0
   183ac:	ldr	r4, [sp, #24]
   183b0:	mov	ip, #1
   183b4:	stm	sp, {r4, ip, lr}
   183b8:	bl	1d448 <argp_error@@Base+0xca4>
   183bc:	add	sp, sp, #16
   183c0:	pop	{r4, pc}
   183c4:	push	{r4, r5, lr}
   183c8:	sub	sp, sp, #20
   183cc:	mov	lr, #0
   183d0:	ldr	r5, [sp, #32]
   183d4:	ldr	r4, [sp, #36]	; 0x24
   183d8:	mov	ip, #1
   183dc:	str	r5, [sp]
   183e0:	str	r4, [sp, #8]
   183e4:	str	lr, [sp, #12]
   183e8:	str	ip, [sp, #4]
   183ec:	bl	1cee8 <argp_error@@Base+0x744>
   183f0:	add	sp, sp, #20
   183f4:	pop	{r4, r5, pc}
   183f8:	push	{r1, r2, r3}
   183fc:	push	{lr}		; (str lr, [sp, #-4]!)
   18400:	sub	sp, sp, #8
   18404:	add	r3, sp, #16
   18408:	ldr	r2, [sp, #16]
   1840c:	ldr	r1, [sp, #12]
   18410:	str	r3, [sp, #4]
   18414:	bl	11484 <ioctl@plt>
   18418:	add	sp, sp, #8
   1841c:	pop	{lr}		; (ldr lr, [sp], #4)
   18420:	add	sp, sp, #12
   18424:	bx	lr
   18428:	ldr	r3, [pc, #28]	; 1844c <argp_parse@@Base+0xff4>
   1842c:	push	{r4, lr}
   18430:	ldr	r0, [r3]
   18434:	ldr	r2, [pc, #20]	; 18450 <argp_parse@@Base+0xff8>
   18438:	ldr	r1, [pc, #20]	; 18454 <argp_parse@@Base+0xffc>
   1843c:	bl	1155c <fprintf@plt>
   18440:	ldr	r3, [pc, #16]	; 18458 <argp_parse@@Base+0x1000>
   18444:	ldr	r0, [r3]
   18448:	bl	1152c <exit@plt>
   1844c:	andeq	r2, r3, r8, asr #22
   18450:	muleq	r2, r0, sp
   18454:	strdeq	r0, [r2], -r4
   18458:	andeq	r2, r3, r8, lsr #22
   1845c:	ldrb	r3, [r0, #40]	; 0x28
   18460:	tst	r3, #1
   18464:	ldr	r3, [r0, #28]
   18468:	bne	18474 <argp_parse@@Base+0x101c>
   1846c:	mov	r0, r1
   18470:	bx	r3
   18474:	ldr	r0, [r0, #36]	; 0x24
   18478:	bx	r3
   1847c:	ldrb	r3, [r0, #40]	; 0x28
   18480:	tst	r3, #1
   18484:	ldr	r3, [r0, #32]
   18488:	bne	18494 <argp_parse@@Base+0x103c>
   1848c:	mov	r0, r1
   18490:	bx	r3
   18494:	ldr	r0, [r0, #36]	; 0x24
   18498:	bx	r3
   1849c:	push	{r4, r5, r6, lr}
   184a0:	subs	r5, r2, #0
   184a4:	ldr	r3, [pc, #124]	; 18528 <argp_parse@@Base+0x10d0>
   184a8:	subne	r6, r5, #1
   184ac:	moveq	r6, #7
   184b0:	moveq	r5, #8
   184b4:	cmp	r1, #0
   184b8:	moveq	r1, r3
   184bc:	str	r6, [r0, #24]
   184c0:	str	r1, [r0]
   184c4:	mov	r4, r0
   184c8:	bl	1845c <argp_parse@@Base+0x1004>
   184cc:	cmp	r0, #0
   184d0:	str	r0, [r4, #4]
   184d4:	beq	1851c <argp_parse@@Base+0x10c4>
   184d8:	ldr	r3, [r4]
   184dc:	add	r2, r0, #8
   184e0:	rsb	r5, r5, #0
   184e4:	add	r2, r2, r6
   184e8:	add	r3, r0, r3
   184ec:	and	r2, r2, r5
   184f0:	mov	r1, #0
   184f4:	str	r2, [r4, #8]
   184f8:	str	r2, [r4, #12]
   184fc:	str	r3, [r0]
   18500:	str	r3, [r4, #16]
   18504:	str	r1, [r0, #4]
   18508:	ldrb	r3, [r4, #40]	; 0x28
   1850c:	mov	r0, #1
   18510:	and	r3, r3, #249	; 0xf9
   18514:	strb	r3, [r4, #40]	; 0x28
   18518:	pop	{r4, r5, r6, pc}
   1851c:	ldr	r3, [pc, #8]	; 1852c <argp_parse@@Base+0x10d4>
   18520:	ldr	r3, [r3]
   18524:	blx	r3
   18528:	andeq	r0, r0, r8, ror #31
   1852c:	strdeq	r2, [r3], -ip

00018530 <_obstack_begin@@Base>:
   18530:	push	{r4, lr}
   18534:	ldrb	lr, [r0, #40]	; 0x28
   18538:	ldr	r4, [sp, #8]
   1853c:	str	r3, [r0, #28]
   18540:	bic	lr, lr, #1
   18544:	str	r4, [r0, #32]
   18548:	strb	lr, [r0, #40]	; 0x28
   1854c:	pop	{r4, lr}
   18550:	b	1849c <argp_parse@@Base+0x1044>

00018554 <_obstack_begin_1@@Base>:
   18554:	push	{r4, r5, lr}
   18558:	ldrb	lr, [r0, #40]	; 0x28
   1855c:	ldr	r5, [sp, #12]
   18560:	ldr	r4, [sp, #16]
   18564:	orr	lr, lr, #1
   18568:	str	r3, [r0, #28]
   1856c:	str	r5, [r0, #32]
   18570:	str	r4, [r0, #36]	; 0x24
   18574:	strb	lr, [r0, #40]	; 0x28
   18578:	pop	{r4, r5, lr}
   1857c:	b	1849c <argp_parse@@Base+0x1044>

00018580 <_obstack_newchunk@@Base>:
   18580:	ldr	r2, [r0, #8]
   18584:	push	{r4, r5, r6, r7, r8, lr}
   18588:	ldr	r6, [r0, #12]
   1858c:	ldr	r3, [r0, #24]
   18590:	sub	r6, r6, r2
   18594:	add	r1, r6, r1
   18598:	adds	r3, r1, r3
   1859c:	movcc	r2, #1
   185a0:	movcs	r2, #0
   185a4:	cmp	r6, r1
   185a8:	movhi	r1, #0
   185ac:	andls	r1, r2, #1
   185b0:	cmp	r1, #0
   185b4:	bne	185c4 <_obstack_newchunk@@Base+0x44>
   185b8:	ldr	r3, [pc, #204]	; 1868c <_obstack_newchunk@@Base+0x10c>
   185bc:	ldr	r3, [r3]
   185c0:	blx	r3
   185c4:	ldr	r5, [r0]
   185c8:	add	r1, r3, r6, lsr #3
   185cc:	cmp	r3, r5
   185d0:	movcc	r3, r5
   185d4:	add	r1, r1, #100	; 0x64
   185d8:	cmp	r3, r1
   185dc:	movcs	r5, r3
   185e0:	movcc	r5, r1
   185e4:	mov	r1, r5
   185e8:	mov	r4, r0
   185ec:	ldr	r7, [r0, #4]
   185f0:	bl	1845c <argp_parse@@Base+0x1004>
   185f4:	subs	r8, r0, #0
   185f8:	beq	185b8 <_obstack_newchunk@@Base+0x38>
   185fc:	ldr	r2, [r4, #24]
   18600:	mov	r3, r8
   18604:	add	r1, r8, r5
   18608:	str	r8, [r4, #4]
   1860c:	str	r7, [r8, #4]
   18610:	str	r1, [r4, #16]
   18614:	str	r1, [r3], #8
   18618:	add	r3, r3, r2
   1861c:	bic	r5, r3, r2
   18620:	mov	r0, r5
   18624:	mov	r2, r6
   18628:	ldr	r1, [r4, #8]
   1862c:	bl	1140c <memcpy@plt>
   18630:	ldrb	r3, [r4, #40]	; 0x28
   18634:	tst	r3, #2
   18638:	bne	18658 <_obstack_newchunk@@Base+0xd8>
   1863c:	ldr	r2, [r4, #24]
   18640:	add	r3, r7, #8
   18644:	add	r3, r3, r2
   18648:	ldr	r1, [r4, #8]
   1864c:	bic	r3, r3, r2
   18650:	cmp	r1, r3
   18654:	beq	18674 <_obstack_newchunk@@Base+0xf4>
   18658:	ldrb	r3, [r4, #40]	; 0x28
   1865c:	add	r2, r5, r6
   18660:	str	r2, [r4, #12]
   18664:	bic	r3, r3, #2
   18668:	str	r5, [r4, #8]
   1866c:	strb	r3, [r4, #40]	; 0x28
   18670:	pop	{r4, r5, r6, r7, r8, pc}
   18674:	ldr	r3, [r7, #4]
   18678:	mov	r1, r7
   1867c:	str	r3, [r8, #4]
   18680:	mov	r0, r4
   18684:	bl	1847c <argp_parse@@Base+0x1024>
   18688:	b	18658 <_obstack_newchunk@@Base+0xd8>
   1868c:	strdeq	r2, [r3], -ip

00018690 <_obstack_allocated_p@@Base>:
   18690:	ldr	r0, [r0, #4]
   18694:	cmp	r0, #0
   18698:	bne	186ac <_obstack_allocated_p@@Base+0x1c>
   1869c:	b	186c8 <_obstack_allocated_p@@Base+0x38>
   186a0:	ldr	r0, [r0, #4]
   186a4:	cmp	r0, #0
   186a8:	bxeq	lr
   186ac:	cmp	r1, r0
   186b0:	bls	186a0 <_obstack_allocated_p@@Base+0x10>
   186b4:	ldr	r3, [r0]
   186b8:	cmp	r1, r3
   186bc:	bhi	186a0 <_obstack_allocated_p@@Base+0x10>
   186c0:	mov	r0, #1
   186c4:	bx	lr
   186c8:	bx	lr

000186cc <_obstack_free@@Base>:
   186cc:	push	{r4, r5, r6, lr}
   186d0:	mov	r6, r1
   186d4:	ldr	r4, [r0, #4]
   186d8:	cmp	r4, #0
   186dc:	movne	r5, r0
   186e0:	beq	1871c <_obstack_free@@Base+0x50>
   186e4:	cmp	r6, r4
   186e8:	bls	186f8 <_obstack_free@@Base+0x2c>
   186ec:	ldr	r2, [r4]
   186f0:	cmp	r6, r2
   186f4:	bls	18728 <_obstack_free@@Base+0x5c>
   186f8:	mov	r1, r4
   186fc:	mov	r0, r5
   18700:	ldr	r4, [r4, #4]
   18704:	bl	1847c <argp_parse@@Base+0x1024>
   18708:	ldrb	r2, [r5, #40]	; 0x28
   1870c:	cmp	r4, #0
   18710:	orr	r2, r2, #2
   18714:	strb	r2, [r5, #40]	; 0x28
   18718:	bne	186e4 <_obstack_free@@Base+0x18>
   1871c:	cmp	r6, #0
   18720:	bne	1873c <_obstack_free@@Base+0x70>
   18724:	pop	{r4, r5, r6, pc}
   18728:	str	r6, [r5, #12]
   1872c:	str	r6, [r5, #8]
   18730:	str	r2, [r5, #16]
   18734:	str	r4, [r5, #4]
   18738:	pop	{r4, r5, r6, pc}
   1873c:	bl	116ac <abort@plt>

00018740 <_obstack_memory_used@@Base>:
   18740:	ldr	r3, [r0, #4]
   18744:	cmp	r3, #0
   18748:	beq	1876c <_obstack_memory_used@@Base+0x2c>
   1874c:	mov	r0, #0
   18750:	ldr	r2, [r3]
   18754:	sub	r2, r2, r3
   18758:	ldr	r3, [r3, #4]
   1875c:	add	r0, r0, r2
   18760:	cmp	r3, #0
   18764:	bne	18750 <_obstack_memory_used@@Base+0x10>
   18768:	bx	lr
   1876c:	mov	r0, r3
   18770:	bx	lr
   18774:	push	{r4, r5, r6, lr}
   18778:	subs	r4, r0, #0
   1877c:	beq	187f0 <_obstack_memory_used@@Base+0xb0>
   18780:	mov	r1, #47	; 0x2f
   18784:	bl	115f8 <strrchr@plt>
   18788:	subs	r5, r0, #0
   1878c:	beq	187dc <_obstack_memory_used@@Base+0x9c>
   18790:	add	r6, r5, #1
   18794:	sub	r3, r6, r4
   18798:	cmp	r3, #6
   1879c:	ble	187dc <_obstack_memory_used@@Base+0x9c>
   187a0:	mov	r2, #7
   187a4:	ldr	r1, [pc, #96]	; 1880c <_obstack_memory_used@@Base+0xcc>
   187a8:	sub	r0, r5, #6
   187ac:	bl	116a0 <strncmp@plt>
   187b0:	cmp	r0, #0
   187b4:	bne	187dc <_obstack_memory_used@@Base+0x9c>
   187b8:	mov	r2, #3
   187bc:	ldr	r1, [pc, #76]	; 18810 <_obstack_memory_used@@Base+0xd0>
   187c0:	mov	r0, r6
   187c4:	bl	116a0 <strncmp@plt>
   187c8:	cmp	r0, #0
   187cc:	movne	r4, r6
   187d0:	ldreq	r3, [pc, #60]	; 18814 <_obstack_memory_used@@Base+0xd4>
   187d4:	addeq	r4, r5, #4
   187d8:	streq	r4, [r3]
   187dc:	ldr	r2, [pc, #52]	; 18818 <_obstack_memory_used@@Base+0xd8>
   187e0:	ldr	r3, [pc, #52]	; 1881c <_obstack_memory_used@@Base+0xdc>
   187e4:	str	r4, [r2]
   187e8:	str	r4, [r3]
   187ec:	pop	{r4, r5, r6, pc}
   187f0:	ldr	r3, [pc, #40]	; 18820 <_obstack_memory_used@@Base+0xe0>
   187f4:	mov	r2, #55	; 0x37
   187f8:	mov	r1, #1
   187fc:	ldr	r3, [r3]
   18800:	ldr	r0, [pc, #28]	; 18824 <_obstack_memory_used@@Base+0xe4>
   18804:	bl	11478 <fwrite@plt>
   18808:	bl	116ac <abort@plt>
   1880c:	ldrdeq	r0, [r2], -ip
   18810:	andeq	r0, r2, r4, ror #27
   18814:	andeq	r2, r3, r0, asr #22
   18818:	andeq	r2, r3, r4, asr #23
   1881c:	andeq	r2, r3, r4, asr #22
   18820:	andeq	r2, r3, r8, asr #22
   18824:	andeq	r0, r2, r4, lsr #27
   18828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1882c:	sub	sp, sp, #124	; 0x7c
   18830:	mov	r9, r0
   18834:	str	r1, [sp, #8]
   18838:	str	r2, [sp, #12]
   1883c:	bl	115b0 <fileno@plt>
   18840:	add	r2, sp, #16
   18844:	mov	r1, r0
   18848:	mov	r0, #3
   1884c:	bl	1146c <__fxstat64@plt>
   18850:	cmp	r0, #0
   18854:	blt	18868 <_obstack_memory_used@@Base+0x128>
   18858:	ldr	r3, [sp, #32]
   1885c:	and	r3, r3, #61440	; 0xf000
   18860:	cmp	r3, #32768	; 0x8000
   18864:	beq	18a38 <_obstack_memory_used@@Base+0x2f8>
   18868:	mov	r4, #8192	; 0x2000
   1886c:	mov	r0, r4
   18870:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   18874:	subs	r6, r0, #0
   18878:	beq	1894c <_obstack_memory_used@@Base+0x20c>
   1887c:	ldr	r3, [sp, #8]
   18880:	mov	r5, #0
   18884:	and	r3, r3, #2
   18888:	mov	sl, #1
   1888c:	mvn	r8, #-2147483648	; 0x80000000
   18890:	str	r3, [sp, #4]
   18894:	b	188cc <_obstack_memory_used@@Base+0x18c>
   18898:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1889c:	mov	r2, r4
   188a0:	mov	r1, r6
   188a4:	subs	r7, r0, #0
   188a8:	beq	18a1c <_obstack_memory_used@@Base+0x2dc>
   188ac:	bl	1140c <memcpy@plt>
   188b0:	mov	r0, r6
   188b4:	mov	r1, r4
   188b8:	bl	11664 <explicit_bzero@plt>
   188bc:	mov	r0, r6
   188c0:	bl	182f0 <argp_parse@@Base+0xe98>
   188c4:	mov	r4, fp
   188c8:	mov	r6, r7
   188cc:	sub	r7, r4, r5
   188d0:	mov	r2, r7
   188d4:	mov	r1, sl
   188d8:	add	r0, r6, r5
   188dc:	mov	r3, r9
   188e0:	bl	1149c <fread@plt>
   188e4:	lsr	r2, r4, #1
   188e8:	sub	r1, r8, r2
   188ec:	mov	fp, r8
   188f0:	cmp	r7, r0
   188f4:	add	r5, r5, r0
   188f8:	bne	18958 <_obstack_memory_used@@Base+0x218>
   188fc:	cmn	r4, #-2147483647	; 0x80000001
   18900:	beq	189e0 <_obstack_memory_used@@Base+0x2a0>
   18904:	ldr	r3, [sp, #4]
   18908:	cmp	r4, r1
   1890c:	addcc	fp, r4, r2
   18910:	cmp	r3, #0
   18914:	mov	r0, fp
   18918:	mov	r1, fp
   1891c:	bne	18898 <_obstack_memory_used@@Base+0x158>
   18920:	mov	r0, r6
   18924:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   18928:	subs	r7, r0, #0
   1892c:	bne	188c4 <_obstack_memory_used@@Base+0x184>
   18930:	bl	11568 <__errno_location@plt>
   18934:	ldr	r8, [r0]
   18938:	mov	r7, r0
   1893c:	mov	r0, r6
   18940:	mov	r6, #0
   18944:	bl	182f0 <argp_parse@@Base+0xe98>
   18948:	str	r8, [r7]
   1894c:	mov	r0, r6
   18950:	add	sp, sp, #124	; 0x7c
   18954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18958:	bl	11568 <__errno_location@plt>
   1895c:	mov	r7, r0
   18960:	mov	r0, r9
   18964:	ldr	r8, [r7]
   18968:	bl	113f4 <ferror@plt>
   1896c:	cmp	r0, #0
   18970:	bne	189ec <_obstack_memory_used@@Base+0x2ac>
   18974:	sub	r3, r4, #1
   18978:	cmp	r5, r3
   1897c:	bcs	18a14 <_obstack_memory_used@@Base+0x2d4>
   18980:	ldr	r3, [sp, #8]
   18984:	tst	r3, #2
   18988:	beq	18a90 <_obstack_memory_used@@Base+0x350>
   1898c:	add	r0, r5, #1
   18990:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   18994:	subs	r8, r0, #0
   18998:	beq	18ab8 <_obstack_memory_used@@Base+0x378>
   1899c:	mov	r2, r5
   189a0:	mov	r1, r6
   189a4:	bl	1140c <memcpy@plt>
   189a8:	mov	r0, r6
   189ac:	mov	r1, r4
   189b0:	bl	11664 <explicit_bzero@plt>
   189b4:	mov	r0, r6
   189b8:	bl	182f0 <argp_parse@@Base+0xe98>
   189bc:	add	r7, r8, r5
   189c0:	mov	r6, r8
   189c4:	mov	r3, #0
   189c8:	strb	r3, [r7]
   189cc:	ldr	r3, [sp, #12]
   189d0:	mov	r0, r6
   189d4:	str	r5, [r3]
   189d8:	add	sp, sp, #124	; 0x7c
   189dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189e0:	bl	11568 <__errno_location@plt>
   189e4:	mov	r8, #12
   189e8:	mov	r7, r0
   189ec:	ldr	r3, [sp, #8]
   189f0:	tst	r3, #2
   189f4:	bne	18ab0 <_obstack_memory_used@@Base+0x370>
   189f8:	mov	r0, r6
   189fc:	bl	182f0 <argp_parse@@Base+0xe98>
   18a00:	mov	r6, #0
   18a04:	mov	r0, r6
   18a08:	str	r8, [r7]
   18a0c:	add	sp, sp, #124	; 0x7c
   18a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a14:	add	r7, r6, r5
   18a18:	b	189c4 <_obstack_memory_used@@Base+0x284>
   18a1c:	bl	11568 <__errno_location@plt>
   18a20:	ldr	r8, [r0]
   18a24:	mov	r7, r0
   18a28:	mov	r1, fp
   18a2c:	mov	r0, r6
   18a30:	bl	11664 <explicit_bzero@plt>
   18a34:	b	189f8 <_obstack_memory_used@@Base+0x2b8>
   18a38:	mov	r0, r9
   18a3c:	bl	116d0 <ftello64@plt>
   18a40:	cmp	r0, #0
   18a44:	sbcs	r3, r1, #0
   18a48:	blt	18868 <_obstack_memory_used@@Base+0x128>
   18a4c:	ldrd	r2, [sp, #64]	; 0x40
   18a50:	cmp	r0, r2
   18a54:	sbcs	ip, r1, r3
   18a58:	bge	18868 <_obstack_memory_used@@Base+0x128>
   18a5c:	subs	r2, r2, r0
   18a60:	mvn	r0, #-2147483647	; 0x80000001
   18a64:	sbc	r3, r3, r1
   18a68:	mov	r1, #0
   18a6c:	cmp	r0, r2
   18a70:	sbcs	r1, r1, r3
   18a74:	addge	r4, r2, #1
   18a78:	bge	1886c <_obstack_memory_used@@Base+0x12c>
   18a7c:	bl	11568 <__errno_location@plt>
   18a80:	mov	r3, #12
   18a84:	mov	r6, #0
   18a88:	str	r3, [r0]
   18a8c:	b	1894c <_obstack_memory_used@@Base+0x20c>
   18a90:	add	r1, r5, #1
   18a94:	mov	r0, r6
   18a98:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   18a9c:	cmp	r0, #0
   18aa0:	beq	18a14 <_obstack_memory_used@@Base+0x2d4>
   18aa4:	add	r7, r0, r5
   18aa8:	mov	r6, r0
   18aac:	b	189c4 <_obstack_memory_used@@Base+0x284>
   18ab0:	mov	fp, r4
   18ab4:	b	18a28 <_obstack_memory_used@@Base+0x2e8>
   18ab8:	add	r7, r6, r5
   18abc:	sub	r1, r4, r5
   18ac0:	mov	r0, r7
   18ac4:	bl	11664 <explicit_bzero@plt>
   18ac8:	b	189c4 <_obstack_memory_used@@Base+0x284>
   18acc:	push	{r4, r5, r6, r7, r8, lr}
   18ad0:	mov	r4, r1
   18ad4:	ldr	r3, [pc, #140]	; 18b68 <_obstack_memory_used@@Base+0x428>
   18ad8:	tst	r4, #1
   18adc:	ldr	r1, [pc, #136]	; 18b6c <_obstack_memory_used@@Base+0x42c>
   18ae0:	moveq	r1, r3
   18ae4:	mov	r6, r2
   18ae8:	bl	1164c <fopen64@plt>
   18aec:	subs	r5, r0, #0
   18af0:	beq	18b38 <_obstack_memory_used@@Base+0x3f8>
   18af4:	ands	r7, r4, #2
   18af8:	bne	18b44 <_obstack_memory_used@@Base+0x404>
   18afc:	mov	r1, r4
   18b00:	mov	r2, r6
   18b04:	mov	r0, r5
   18b08:	bl	18828 <_obstack_memory_used@@Base+0xe8>
   18b0c:	mov	r4, r0
   18b10:	mov	r0, r5
   18b14:	bl	115c8 <fclose@plt>
   18b18:	cmp	r0, #0
   18b1c:	beq	18b3c <_obstack_memory_used@@Base+0x3fc>
   18b20:	cmp	r4, #0
   18b24:	beq	18b38 <_obstack_memory_used@@Base+0x3f8>
   18b28:	cmp	r7, #0
   18b2c:	bne	18b58 <_obstack_memory_used@@Base+0x418>
   18b30:	mov	r0, r4
   18b34:	bl	182f0 <argp_parse@@Base+0xe98>
   18b38:	mov	r4, #0
   18b3c:	mov	r0, r4
   18b40:	pop	{r4, r5, r6, r7, r8, pc}
   18b44:	mov	r3, #0
   18b48:	mov	r1, r3
   18b4c:	mov	r2, #2
   18b50:	bl	1158c <setvbuf@plt>
   18b54:	b	18afc <_obstack_memory_used@@Base+0x3bc>
   18b58:	ldr	r1, [r6]
   18b5c:	mov	r0, r4
   18b60:	bl	11664 <explicit_bzero@plt>
   18b64:	b	18b30 <_obstack_memory_used@@Base+0x3f0>
   18b68:	andeq	r0, r2, ip, ror #18
   18b6c:	andeq	r0, r2, r8, ror #27
   18b70:	push	{r4, r5, r6, r7, lr}
   18b74:	sub	sp, sp, #36	; 0x24
   18b78:	cmp	r1, #0
   18b7c:	mov	r4, r0
   18b80:	ldr	r5, [sp, #56]	; 0x38
   18b84:	ldr	r6, [sp, #60]	; 0x3c
   18b88:	beq	18dc8 <_obstack_memory_used@@Base+0x688>
   18b8c:	str	r3, [sp]
   18b90:	mov	r3, r2
   18b94:	mov	r2, r1
   18b98:	ldr	r1, [pc, #564]	; 18dd4 <_obstack_memory_used@@Base+0x694>
   18b9c:	bl	1155c <fprintf@plt>
   18ba0:	ldr	r3, [pc, #560]	; 18dd8 <_obstack_memory_used@@Base+0x698>
   18ba4:	ldr	r2, [pc, #560]	; 18ddc <_obstack_memory_used@@Base+0x69c>
   18ba8:	ldr	r1, [pc, #560]	; 18de0 <_obstack_memory_used@@Base+0x6a0>
   18bac:	mov	r0, r4
   18bb0:	bl	1155c <fprintf@plt>
   18bb4:	mov	r1, r4
   18bb8:	mov	r0, #10
   18bbc:	bl	11610 <fputc@plt>
   18bc0:	ldr	r1, [pc, #540]	; 18de4 <_obstack_memory_used@@Base+0x6a4>
   18bc4:	ldr	r2, [pc, #540]	; 18de8 <_obstack_memory_used@@Base+0x6a8>
   18bc8:	mov	r0, r4
   18bcc:	bl	1155c <fprintf@plt>
   18bd0:	mov	r1, r4
   18bd4:	mov	r0, #10
   18bd8:	bl	11610 <fputc@plt>
   18bdc:	cmp	r6, #9
   18be0:	ldrls	pc, [pc, r6, lsl #2]
   18be4:	b	18c10 <_obstack_memory_used@@Base+0x4d0>
   18be8:	andeq	r8, r1, r0, asr ip
   18bec:	muleq	r1, ip, ip
   18bf0:			; <UNDEFINED> instruction: 0x00018cb4
   18bf4:	andeq	r8, r1, ip, asr #25
   18bf8:	andeq	r8, r1, ip, ror #25
   18bfc:	andeq	r8, r1, r4, lsl sp
   18c00:	andeq	r8, r1, r4, lsr sp
   18c04:	andeq	r8, r1, ip, asr sp
   18c08:	andeq	r8, r1, ip, lsl #27
   18c0c:	andeq	r8, r1, r8, asr ip
   18c10:	ldr	ip, [r5, #32]
   18c14:	ldr	r1, [r5, #28]
   18c18:	ldm	r5, {r2, r3}
   18c1c:	ldr	r7, [r5, #24]
   18c20:	ldr	r6, [r5, #20]
   18c24:	str	ip, [sp, #24]
   18c28:	ldr	lr, [r5, #16]
   18c2c:	str	r1, [sp, #20]
   18c30:	ldr	r1, [r5, #8]
   18c34:	ldr	ip, [r5, #12]
   18c38:	mov	r0, r4
   18c3c:	str	r7, [sp, #16]
   18c40:	stm	sp, {r1, ip, lr}
   18c44:	str	r6, [sp, #12]
   18c48:	ldr	r1, [pc, #412]	; 18dec <_obstack_memory_used@@Base+0x6ac>
   18c4c:	bl	1155c <fprintf@plt>
   18c50:	add	sp, sp, #36	; 0x24
   18c54:	pop	{r4, r5, r6, r7, pc}
   18c58:	ldr	ip, [r5, #32]
   18c5c:	ldr	r1, [r5, #28]
   18c60:	ldm	r5, {r2, r3}
   18c64:	ldr	r7, [r5, #24]
   18c68:	ldr	r6, [r5, #20]
   18c6c:	str	ip, [sp, #24]
   18c70:	ldr	lr, [r5, #16]
   18c74:	str	r1, [sp, #20]
   18c78:	ldr	r1, [r5, #8]
   18c7c:	ldr	ip, [r5, #12]
   18c80:	mov	r0, r4
   18c84:	str	r7, [sp, #16]
   18c88:	stm	sp, {r1, ip, lr}
   18c8c:	str	r6, [sp, #12]
   18c90:	ldr	r1, [pc, #344]	; 18df0 <_obstack_memory_used@@Base+0x6b0>
   18c94:	bl	1155c <fprintf@plt>
   18c98:	b	18c50 <_obstack_memory_used@@Base+0x510>
   18c9c:	ldr	r2, [r5]
   18ca0:	mov	r0, r4
   18ca4:	ldr	r1, [pc, #328]	; 18df4 <_obstack_memory_used@@Base+0x6b4>
   18ca8:	add	sp, sp, #36	; 0x24
   18cac:	pop	{r4, r5, r6, r7, lr}
   18cb0:	b	1155c <fprintf@plt>
   18cb4:	mov	r0, r4
   18cb8:	ldm	r5, {r2, r3}
   18cbc:	ldr	r1, [pc, #308]	; 18df8 <_obstack_memory_used@@Base+0x6b8>
   18cc0:	add	sp, sp, #36	; 0x24
   18cc4:	pop	{r4, r5, r6, r7, lr}
   18cc8:	b	1155c <fprintf@plt>
   18ccc:	ldr	r1, [r5, #8]
   18cd0:	ldm	r5, {r2, r3}
   18cd4:	mov	r0, r4
   18cd8:	str	r1, [sp, #56]	; 0x38
   18cdc:	ldr	r1, [pc, #280]	; 18dfc <_obstack_memory_used@@Base+0x6bc>
   18ce0:	add	sp, sp, #36	; 0x24
   18ce4:	pop	{r4, r5, r6, r7, lr}
   18ce8:	b	1155c <fprintf@plt>
   18cec:	ldr	r1, [r5, #8]
   18cf0:	ldr	ip, [r5, #12]
   18cf4:	ldm	r5, {r2, r3}
   18cf8:	mov	r0, r4
   18cfc:	str	r1, [sp, #56]	; 0x38
   18d00:	str	ip, [sp, #60]	; 0x3c
   18d04:	ldr	r1, [pc, #244]	; 18e00 <_obstack_memory_used@@Base+0x6c0>
   18d08:	add	sp, sp, #36	; 0x24
   18d0c:	pop	{r4, r5, r6, r7, lr}
   18d10:	b	1155c <fprintf@plt>
   18d14:	add	r1, r5, #8
   18d18:	ldm	r5, {r2, r3}
   18d1c:	ldm	r1, {r1, ip, lr}
   18d20:	mov	r0, r4
   18d24:	stm	sp, {r1, ip, lr}
   18d28:	ldr	r1, [pc, #212]	; 18e04 <_obstack_memory_used@@Base+0x6c4>
   18d2c:	bl	1155c <fprintf@plt>
   18d30:	b	18c50 <_obstack_memory_used@@Base+0x510>
   18d34:	add	r1, r5, #8
   18d38:	ldr	r6, [r5, #20]
   18d3c:	ldm	r1, {r1, ip, lr}
   18d40:	mov	r0, r4
   18d44:	ldm	r5, {r2, r3}
   18d48:	str	r6, [sp, #12]
   18d4c:	stm	sp, {r1, ip, lr}
   18d50:	ldr	r1, [pc, #176]	; 18e08 <_obstack_memory_used@@Base+0x6c8>
   18d54:	bl	1155c <fprintf@plt>
   18d58:	b	18c50 <_obstack_memory_used@@Base+0x510>
   18d5c:	add	r1, r5, #8
   18d60:	ldr	r7, [r5, #24]
   18d64:	ldm	r1, {r1, ip, lr}
   18d68:	mov	r0, r4
   18d6c:	ldr	r6, [r5, #20]
   18d70:	ldm	r5, {r2, r3}
   18d74:	stm	sp, {r1, ip, lr}
   18d78:	str	r7, [sp, #16]
   18d7c:	str	r6, [sp, #12]
   18d80:	ldr	r1, [pc, #132]	; 18e0c <_obstack_memory_used@@Base+0x6cc>
   18d84:	bl	1155c <fprintf@plt>
   18d88:	b	18c50 <_obstack_memory_used@@Base+0x510>
   18d8c:	ldr	r1, [r5, #28]
   18d90:	ldm	r5, {r2, r3}
   18d94:	ldr	r7, [r5, #24]
   18d98:	ldr	r6, [r5, #20]
   18d9c:	ldr	lr, [r5, #16]
   18da0:	str	r1, [sp, #20]
   18da4:	ldr	r1, [r5, #8]
   18da8:	ldr	ip, [r5, #12]
   18dac:	mov	r0, r4
   18db0:	str	r7, [sp, #16]
   18db4:	stm	sp, {r1, ip, lr}
   18db8:	str	r6, [sp, #12]
   18dbc:	ldr	r1, [pc, #76]	; 18e10 <_obstack_memory_used@@Base+0x6d0>
   18dc0:	bl	1155c <fprintf@plt>
   18dc4:	b	18c50 <_obstack_memory_used@@Base+0x510>
   18dc8:	ldr	r1, [pc, #68]	; 18e14 <_obstack_memory_used@@Base+0x6d4>
   18dcc:	bl	1155c <fprintf@plt>
   18dd0:	b	18ba0 <_obstack_memory_used@@Base+0x460>
   18dd4:	andeq	r0, r2, ip, ror #27
   18dd8:	andeq	r0, r0, r6, ror #15
   18ddc:	andeq	r0, r2, r0, lsl #28
   18de0:	andeq	r1, r2, r0, lsl #2
   18de4:	andeq	r0, r2, r8, lsr #28
   18de8:	andeq	r0, r2, r4, lsl #28
   18dec:	andeq	r1, r2, r4, lsl r0
   18df0:	andeq	r0, r2, r0, ror #31
   18df4:	ldrdeq	r0, [r2], -r4
   18df8:	andeq	r0, r2, r4, ror #29
   18dfc:	strdeq	r0, [r2], -ip
   18e00:	andeq	r0, r2, r8, lsl pc
   18e04:	andeq	r0, r2, r8, lsr pc
   18e08:	andeq	r0, r2, ip, asr pc
   18e0c:	andeq	r0, r2, r4, lsl #31
   18e10:			; <UNDEFINED> instruction: 0x00020fb0
   18e14:	strdeq	r0, [r2], -r8
   18e18:	push	{r4, r5, lr}
   18e1c:	sub	sp, sp, #12
   18e20:	ldr	r5, [sp, #24]
   18e24:	ldr	ip, [r5]
   18e28:	cmp	ip, #0
   18e2c:	beq	18e48 <_obstack_memory_used@@Base+0x708>
   18e30:	mov	lr, r5
   18e34:	mov	ip, #0
   18e38:	ldr	r4, [lr, #4]!
   18e3c:	add	ip, ip, #1
   18e40:	cmp	r4, #0
   18e44:	bne	18e38 <_obstack_memory_used@@Base+0x6f8>
   18e48:	stm	sp, {r5, ip}
   18e4c:	bl	18b70 <_obstack_memory_used@@Base+0x430>
   18e50:	add	sp, sp, #12
   18e54:	pop	{r4, r5, pc}
   18e58:	push	{r4, r5, lr}
   18e5c:	sub	sp, sp, #52	; 0x34
   18e60:	add	r5, sp, #4
   18e64:	ldr	r4, [sp, #64]	; 0x40
   18e68:	mov	ip, #0
   18e6c:	sub	r4, r4, #4
   18e70:	ldr	lr, [r4, #4]!
   18e74:	cmp	lr, #0
   18e78:	str	lr, [r5, #4]!
   18e7c:	beq	18e8c <_obstack_memory_used@@Base+0x74c>
   18e80:	add	ip, ip, #1
   18e84:	cmp	ip, #10
   18e88:	bne	18e70 <_obstack_memory_used@@Base+0x730>
   18e8c:	add	lr, sp, #8
   18e90:	str	ip, [sp, #4]
   18e94:	str	lr, [sp]
   18e98:	bl	18b70 <_obstack_memory_used@@Base+0x430>
   18e9c:	add	sp, sp, #52	; 0x34
   18ea0:	pop	{r4, r5, pc}
   18ea4:	push	{r3}		; (str r3, [sp, #-4]!)
   18ea8:	push	{r4, lr}
   18eac:	sub	sp, sp, #60	; 0x3c
   18eb0:	add	lr, sp, #56	; 0x38
   18eb4:	add	r3, sp, #72	; 0x48
   18eb8:	str	r3, [lr, #-44]!	; 0xffffffd4
   18ebc:	add	r4, sp, #68	; 0x44
   18ec0:	mov	r3, #0
   18ec4:	ldr	ip, [r4, #4]!
   18ec8:	cmp	ip, #0
   18ecc:	str	ip, [lr, #4]!
   18ed0:	beq	18ee0 <_obstack_memory_used@@Base+0x7a0>
   18ed4:	add	r3, r3, #1
   18ed8:	cmp	r3, #10
   18edc:	bne	18ec4 <_obstack_memory_used@@Base+0x784>
   18ee0:	add	ip, sp, #16
   18ee4:	str	r3, [sp, #4]
   18ee8:	str	ip, [sp]
   18eec:	ldr	r3, [sp, #68]	; 0x44
   18ef0:	bl	18b70 <_obstack_memory_used@@Base+0x430>
   18ef4:	add	sp, sp, #60	; 0x3c
   18ef8:	pop	{r4, lr}
   18efc:	add	sp, sp, #4
   18f00:	bx	lr
   18f04:	ldr	r3, [pc, #56]	; 18f44 <_obstack_memory_used@@Base+0x804>
   18f08:	push	{r4, lr}
   18f0c:	mov	r0, #10
   18f10:	ldr	r1, [r3]
   18f14:	bl	11610 <fputc@plt>
   18f18:	ldr	r1, [pc, #40]	; 18f48 <_obstack_memory_used@@Base+0x808>
   18f1c:	ldr	r0, [pc, #40]	; 18f4c <_obstack_memory_used@@Base+0x80c>
   18f20:	bl	113b8 <printf@plt>
   18f24:	ldr	r1, [pc, #36]	; 18f50 <_obstack_memory_used@@Base+0x810>
   18f28:	ldr	r2, [pc, #36]	; 18f54 <_obstack_memory_used@@Base+0x814>
   18f2c:	ldr	r0, [pc, #36]	; 18f58 <_obstack_memory_used@@Base+0x818>
   18f30:	bl	113b8 <printf@plt>
   18f34:	ldr	r1, [pc, #32]	; 18f5c <_obstack_memory_used@@Base+0x81c>
   18f38:	ldr	r0, [pc, #32]	; 18f60 <_obstack_memory_used@@Base+0x820>
   18f3c:	pop	{r4, lr}
   18f40:	b	113b8 <printf@plt>
   18f44:	andeq	r2, r3, ip, asr #22
   18f48:	andeq	r1, r2, r0, asr r0
   18f4c:	andeq	r1, r2, r8, rrx
   18f50:	andeq	r0, r2, r0, lsl #27
   18f54:	andeq	r1, r2, ip, ror r0
   18f58:	andeq	r1, r2, r4, lsr #1
   18f5c:	strheq	r1, [r2], -r8
   18f60:	ldrdeq	r1, [r2], -r8
   18f64:	push	{r4, lr}
   18f68:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   18f6c:	cmp	r0, #0
   18f70:	popne	{r4, pc}
   18f74:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   18f78:	push	{r4, lr}
   18f7c:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   18f80:	cmp	r0, #0
   18f84:	popne	{r4, pc}
   18f88:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   18f8c:	push	{r4, lr}
   18f90:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   18f94:	cmp	r0, #0
   18f98:	popne	{r4, pc}
   18f9c:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   18fa0:	push	{r4, r5, r6, lr}
   18fa4:	mov	r5, r0
   18fa8:	mov	r4, r1
   18fac:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   18fb0:	cmp	r0, #0
   18fb4:	popne	{r4, r5, r6, pc}
   18fb8:	adds	r4, r4, #0
   18fbc:	movne	r4, #1
   18fc0:	cmp	r5, #0
   18fc4:	orreq	r4, r4, #1
   18fc8:	cmp	r4, #0
   18fcc:	popeq	{r4, r5, r6, pc}
   18fd0:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   18fd4:	push	{r4, lr}
   18fd8:	cmp	r1, #0
   18fdc:	orreq	r1, r1, #1
   18fe0:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   18fe4:	cmp	r0, #0
   18fe8:	popne	{r4, pc}
   18fec:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   18ff0:	push	{r4, r5, r6, lr}
   18ff4:	mov	r6, r0
   18ff8:	mov	r5, r1
   18ffc:	mov	r4, r2
   19000:	bl	1d4dc <argp_error@@Base+0xd38>
   19004:	cmp	r0, #0
   19008:	popne	{r4, r5, r6, pc}
   1900c:	cmp	r6, #0
   19010:	beq	19020 <_obstack_memory_used@@Base+0x8e0>
   19014:	cmp	r5, #0
   19018:	cmpne	r4, #0
   1901c:	popeq	{r4, r5, r6, pc}
   19020:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   19024:	b	18ff0 <_obstack_memory_used@@Base+0x8b0>
   19028:	cmp	r2, #0
   1902c:	cmpne	r1, #0
   19030:	moveq	r2, #1
   19034:	moveq	r1, r2
   19038:	push	{r4, lr}
   1903c:	bl	1d4dc <argp_error@@Base+0xd38>
   19040:	cmp	r0, #0
   19044:	popne	{r4, pc}
   19048:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   1904c:	mov	r2, r1
   19050:	mov	r1, r0
   19054:	mov	r0, #0
   19058:	b	18ff0 <_obstack_memory_used@@Base+0x8b0>
   1905c:	mov	r2, r1
   19060:	mov	r1, r0
   19064:	mov	r0, #0
   19068:	b	19028 <_obstack_memory_used@@Base+0x8e8>
   1906c:	push	{r4, r5, r6, lr}
   19070:	subs	r6, r0, #0
   19074:	sub	sp, sp, #8
   19078:	mov	r5, r1
   1907c:	ldr	r4, [r1]
   19080:	beq	190bc <_obstack_memory_used@@Base+0x97c>
   19084:	lsr	r1, r4, #1
   19088:	add	r3, r1, #1
   1908c:	mvn	r3, r3
   19090:	cmp	r4, r3
   19094:	bhi	190b8 <_obstack_memory_used@@Base+0x978>
   19098:	add	r4, r4, #1
   1909c:	add	r4, r4, r1
   190a0:	mov	r0, r6
   190a4:	mov	r1, r4
   190a8:	bl	18ff0 <_obstack_memory_used@@Base+0x8b0>
   190ac:	str	r4, [r5]
   190b0:	add	sp, sp, #8
   190b4:	pop	{r4, r5, r6, pc}
   190b8:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   190bc:	cmp	r4, #0
   190c0:	bne	190a0 <_obstack_memory_used@@Base+0x960>
   190c4:	mov	r1, r2
   190c8:	mov	r0, #64	; 0x40
   190cc:	str	r2, [sp, #4]
   190d0:	bl	1dcf0 <argp_error@@Base+0x154c>
   190d4:	ldr	r2, [sp, #4]
   190d8:	cmp	r0, #0
   190dc:	movne	r4, r0
   190e0:	addeq	r4, r0, #1
   190e4:	b	190a0 <_obstack_memory_used@@Base+0x960>
   190e8:	mov	r2, #1
   190ec:	b	1906c <_obstack_memory_used@@Base+0x92c>
   190f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190f4:	sub	sp, sp, #12
   190f8:	ldr	r6, [r1]
   190fc:	mov	sl, r1
   19100:	mov	r9, r0
   19104:	asrs	r4, r6, #1
   19108:	mov	r5, r2
   1910c:	mov	fp, r3
   19110:	ldr	r7, [sp, #48]	; 0x30
   19114:	bmi	19280 <_obstack_memory_used@@Base+0xb40>
   19118:	mvn	r3, #-2147483648	; 0x80000000
   1911c:	sub	r3, r3, r4
   19120:	cmp	r6, r3
   19124:	movle	r3, #0
   19128:	movgt	r3, #1
   1912c:	mvn	r8, fp
   19130:	cmp	r3, #0
   19134:	addeq	r4, r4, r6
   19138:	mvnne	r4, #-2147483648	; 0x80000000
   1913c:	lsr	r8, r8, #31
   19140:	cmp	fp, r4
   19144:	movge	r3, #0
   19148:	andlt	r3, r8, #1
   1914c:	cmp	r3, #0
   19150:	beq	19238 <_obstack_memory_used@@Base+0xaf8>
   19154:	cmp	r7, #0
   19158:	blt	19308 <_obstack_memory_used@@Base+0xbc8>
   1915c:	bne	19300 <_obstack_memory_used@@Base+0xbc0>
   19160:	mov	r2, #64	; 0x40
   19164:	mov	r1, r7
   19168:	mov	r0, r2
   1916c:	str	r2, [sp, #4]
   19170:	bl	1defc <argp_error@@Base+0x1758>
   19174:	ldr	r2, [sp, #4]
   19178:	mov	r1, r7
   1917c:	mov	r4, r0
   19180:	mov	r0, r2
   19184:	bl	1e11c <argp_error@@Base+0x1978>
   19188:	ldr	r2, [sp, #4]
   1918c:	sub	r1, r2, r1
   19190:	cmp	r9, #0
   19194:	sub	r3, r4, r6
   19198:	streq	r9, [sl]
   1919c:	cmp	r3, r5
   191a0:	bge	19224 <_obstack_memory_used@@Base+0xae4>
   191a4:	cmp	r5, #0
   191a8:	blt	19294 <_obstack_memory_used@@Base+0xb54>
   191ac:	cmp	r6, #0
   191b0:	blt	191d0 <_obstack_memory_used@@Base+0xa90>
   191b4:	mvn	r3, #-2147483648	; 0x80000000
   191b8:	sub	r3, r3, r5
   191bc:	cmp	r6, r3
   191c0:	movle	r3, #0
   191c4:	movgt	r3, #1
   191c8:	cmp	r3, #0
   191cc:	bne	19390 <_obstack_memory_used@@Base+0xc50>
   191d0:	add	r5, r6, r5
   191d4:	cmp	fp, r5
   191d8:	movge	r8, #0
   191dc:	andlt	r8, r8, #1
   191e0:	cmp	r8, #0
   191e4:	mov	r4, r5
   191e8:	bne	19390 <_obstack_memory_used@@Base+0xc50>
   191ec:	cmp	r7, #0
   191f0:	blt	192a8 <_obstack_memory_used@@Base+0xb68>
   191f4:	beq	19220 <_obstack_memory_used@@Base+0xae0>
   191f8:	cmp	r5, #0
   191fc:	blt	19350 <_obstack_memory_used@@Base+0xc10>
   19200:	mov	r1, r7
   19204:	mvn	r0, #-2147483648	; 0x80000000
   19208:	bl	1defc <argp_error@@Base+0x1758>
   1920c:	cmp	r5, r0
   19210:	movle	r0, #0
   19214:	movgt	r0, #1
   19218:	cmp	r0, #0
   1921c:	bne	19390 <_obstack_memory_used@@Base+0xc50>
   19220:	mul	r1, r5, r7
   19224:	mov	r0, r9
   19228:	bl	18fa0 <_obstack_memory_used@@Base+0x860>
   1922c:	str	r4, [sl]
   19230:	add	sp, sp, #12
   19234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19238:	cmp	r7, #0
   1923c:	blt	192d4 <_obstack_memory_used@@Base+0xb94>
   19240:	beq	19160 <_obstack_memory_used@@Base+0xa20>
   19244:	cmp	r4, #0
   19248:	blt	19310 <_obstack_memory_used@@Base+0xbd0>
   1924c:	mov	r1, r7
   19250:	mvn	r0, #-2147483648	; 0x80000000
   19254:	bl	1defc <argp_error@@Base+0x1758>
   19258:	cmp	r0, r4
   1925c:	movge	r0, #0
   19260:	movlt	r0, #1
   19264:	cmp	r0, #0
   19268:	mvnne	r2, #-2147483648	; 0x80000000
   1926c:	bne	19164 <_obstack_memory_used@@Base+0xa24>
   19270:	mul	r1, r7, r4
   19274:	cmp	r1, #63	; 0x3f
   19278:	bgt	19190 <_obstack_memory_used@@Base+0xa50>
   1927c:	b	19160 <_obstack_memory_used@@Base+0xa20>
   19280:	rsb	r3, r4, #-2147483648	; 0x80000000
   19284:	cmp	r6, r3
   19288:	movge	r3, #0
   1928c:	movlt	r3, #1
   19290:	b	1912c <_obstack_memory_used@@Base+0x9ec>
   19294:	rsb	r3, r5, #-2147483648	; 0x80000000
   19298:	cmp	r6, r3
   1929c:	movge	r3, #0
   192a0:	movlt	r3, #1
   192a4:	b	191c8 <_obstack_memory_used@@Base+0xa88>
   192a8:	cmp	r5, #0
   192ac:	blt	19334 <_obstack_memory_used@@Base+0xbf4>
   192b0:	cmn	r7, #1
   192b4:	beq	19220 <_obstack_memory_used@@Base+0xae0>
   192b8:	mov	r1, r7
   192bc:	mov	r0, #-2147483648	; 0x80000000
   192c0:	bl	1defc <argp_error@@Base+0x1758>
   192c4:	cmp	r5, r0
   192c8:	movle	r0, #0
   192cc:	movgt	r0, #1
   192d0:	b	19218 <_obstack_memory_used@@Base+0xad8>
   192d4:	cmp	r4, #0
   192d8:	blt	19374 <_obstack_memory_used@@Base+0xc34>
   192dc:	cmn	r7, #1
   192e0:	beq	19270 <_obstack_memory_used@@Base+0xb30>
   192e4:	mov	r1, r7
   192e8:	mov	r0, #-2147483648	; 0x80000000
   192ec:	bl	1defc <argp_error@@Base+0x1758>
   192f0:	cmp	r0, r4
   192f4:	movge	r0, #0
   192f8:	movlt	r0, #1
   192fc:	b	19264 <_obstack_memory_used@@Base+0xb24>
   19300:	mov	r4, fp
   19304:	b	1924c <_obstack_memory_used@@Base+0xb0c>
   19308:	mov	r4, fp
   1930c:	b	192dc <_obstack_memory_used@@Base+0xb9c>
   19310:	cmn	r4, #1
   19314:	beq	19270 <_obstack_memory_used@@Base+0xb30>
   19318:	mov	r1, r4
   1931c:	mov	r0, #-2147483648	; 0x80000000
   19320:	bl	1defc <argp_error@@Base+0x1758>
   19324:	cmp	r7, r0
   19328:	movle	r0, #0
   1932c:	movgt	r0, #1
   19330:	b	19264 <_obstack_memory_used@@Base+0xb24>
   19334:	mov	r1, r7
   19338:	mvn	r0, #-2147483648	; 0x80000000
   1933c:	bl	1defc <argp_error@@Base+0x1758>
   19340:	cmp	r5, r0
   19344:	movge	r0, #0
   19348:	movlt	r0, #1
   1934c:	b	19218 <_obstack_memory_used@@Base+0xad8>
   19350:	cmn	r5, #1
   19354:	beq	19220 <_obstack_memory_used@@Base+0xae0>
   19358:	mov	r1, r5
   1935c:	mov	r0, #-2147483648	; 0x80000000
   19360:	bl	1defc <argp_error@@Base+0x1758>
   19364:	cmp	r7, r0
   19368:	movle	r0, #0
   1936c:	movgt	r0, #1
   19370:	b	19218 <_obstack_memory_used@@Base+0xad8>
   19374:	mov	r1, r7
   19378:	mvn	r0, #-2147483648	; 0x80000000
   1937c:	bl	1defc <argp_error@@Base+0x1758>
   19380:	cmp	r0, r4
   19384:	movle	r0, #0
   19388:	movgt	r0, #1
   1938c:	b	19264 <_obstack_memory_used@@Base+0xb24>
   19390:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   19394:	push	{r4, lr}
   19398:	mov	r1, #1
   1939c:	bl	194d8 <_obstack_memory_used@@Base+0xd98>
   193a0:	cmp	r0, #0
   193a4:	popne	{r4, pc}
   193a8:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   193ac:	push	{r4, lr}
   193b0:	mov	r1, #1
   193b4:	bl	194d8 <_obstack_memory_used@@Base+0xd98>
   193b8:	cmp	r0, #0
   193bc:	popne	{r4, pc}
   193c0:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   193c4:	push	{r4, lr}
   193c8:	bl	194d8 <_obstack_memory_used@@Base+0xd98>
   193cc:	cmp	r0, #0
   193d0:	popne	{r4, pc}
   193d4:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   193d8:	push	{r4, lr}
   193dc:	bl	194d8 <_obstack_memory_used@@Base+0xd98>
   193e0:	cmp	r0, #0
   193e4:	popne	{r4, pc}
   193e8:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   193ec:	push	{r4, r5, r6, lr}
   193f0:	mov	r6, r0
   193f4:	mov	r0, r1
   193f8:	mov	r4, r1
   193fc:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   19400:	subs	r5, r0, #0
   19404:	beq	1941c <_obstack_memory_used@@Base+0xcdc>
   19408:	mov	r2, r4
   1940c:	mov	r1, r6
   19410:	bl	1140c <memcpy@plt>
   19414:	mov	r0, r5
   19418:	pop	{r4, r5, r6, pc}
   1941c:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   19420:	push	{r4, r5, r6, lr}
   19424:	mov	r6, r0
   19428:	mov	r0, r1
   1942c:	mov	r4, r1
   19430:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   19434:	subs	r5, r0, #0
   19438:	beq	19450 <_obstack_memory_used@@Base+0xd10>
   1943c:	mov	r2, r4
   19440:	mov	r1, r6
   19444:	bl	1140c <memcpy@plt>
   19448:	mov	r0, r5
   1944c:	pop	{r4, r5, r6, pc}
   19450:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   19454:	push	{r4, r5, r6, lr}
   19458:	mov	r6, r0
   1945c:	add	r0, r1, #1
   19460:	mov	r4, r1
   19464:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   19468:	subs	r5, r0, #0
   1946c:	beq	1948c <_obstack_memory_used@@Base+0xd4c>
   19470:	mov	r3, #0
   19474:	mov	r1, r6
   19478:	strb	r3, [r5, r4]
   1947c:	mov	r2, r4
   19480:	bl	1140c <memcpy@plt>
   19484:	mov	r0, r5
   19488:	pop	{r4, r5, r6, pc}
   1948c:	bl	194ac <_obstack_memory_used@@Base+0xd6c>
   19490:	push	{r4, lr}
   19494:	mov	r4, r0
   19498:	bl	11544 <strlen@plt>
   1949c:	add	r1, r0, #1
   194a0:	mov	r0, r4
   194a4:	pop	{r4, lr}
   194a8:	b	193ec <_obstack_memory_used@@Base+0xcac>
   194ac:	ldr	r1, [pc, #24]	; 194cc <_obstack_memory_used@@Base+0xd8c>
   194b0:	push	{r4, lr}
   194b4:	ldr	r0, [r1]
   194b8:	ldr	r3, [pc, #16]	; 194d0 <_obstack_memory_used@@Base+0xd90>
   194bc:	ldr	r2, [pc, #16]	; 194d4 <_obstack_memory_used@@Base+0xd94>
   194c0:	mov	r1, #0
   194c4:	bl	114a8 <error@plt>
   194c8:	bl	116ac <abort@plt>
   194cc:	andeq	r2, r3, r8, lsr #22
   194d0:	muleq	r2, r0, sp
   194d4:	andeq	lr, r1, r0, lsl #15
   194d8:	cmp	r1, #0
   194dc:	cmpne	r0, #0
   194e0:	moveq	r1, #1
   194e4:	moveq	r0, r1
   194e8:	umull	r2, r3, r0, r1
   194ec:	adds	r3, r3, #0
   194f0:	movne	r3, #1
   194f4:	cmp	r2, #0
   194f8:	blt	19508 <_obstack_memory_used@@Base+0xdc8>
   194fc:	cmp	r3, #0
   19500:	bne	19508 <_obstack_memory_used@@Base+0xdc8>
   19504:	b	1134c <calloc@plt>
   19508:	push	{r4, lr}
   1950c:	bl	11568 <__errno_location@plt>
   19510:	mov	r3, #12
   19514:	str	r3, [r0]
   19518:	mov	r0, #0
   1951c:	pop	{r4, pc}
   19520:	cmp	r0, #0
   19524:	moveq	r0, #1
   19528:	cmp	r0, #0
   1952c:	blt	19534 <_obstack_memory_used@@Base+0xdf4>
   19530:	b	114cc <malloc@plt>
   19534:	push	{r4, lr}
   19538:	bl	11568 <__errno_location@plt>
   1953c:	mov	r3, #12
   19540:	str	r3, [r0]
   19544:	mov	r0, #0
   19548:	pop	{r4, pc}
   1954c:	cmp	r0, #0
   19550:	beq	19574 <_obstack_memory_used@@Base+0xe34>
   19554:	cmp	r1, #0
   19558:	push	{lr}		; (str lr, [sp, #-4]!)
   1955c:	sub	sp, sp, #12
   19560:	beq	1957c <_obstack_memory_used@@Base+0xe3c>
   19564:	blt	19594 <_obstack_memory_used@@Base+0xe54>
   19568:	add	sp, sp, #12
   1956c:	pop	{lr}		; (ldr lr, [sp], #4)
   19570:	b	11448 <realloc@plt>
   19574:	mov	r0, r1
   19578:	b	19520 <_obstack_memory_used@@Base+0xde0>
   1957c:	str	r1, [sp, #4]
   19580:	bl	182f0 <argp_parse@@Base+0xe98>
   19584:	ldr	r3, [sp, #4]
   19588:	mov	r0, r3
   1958c:	add	sp, sp, #12
   19590:	pop	{pc}		; (ldr pc, [sp], #4)
   19594:	bl	11568 <__errno_location@plt>
   19598:	mov	r2, #12
   1959c:	mov	r3, #0
   195a0:	str	r2, [r0]
   195a4:	b	19588 <_obstack_memory_used@@Base+0xe48>
   195a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195ac:	sub	sp, sp, #20
   195b0:	ldr	r5, [r0, #4]
   195b4:	ldr	r4, [r0]
   195b8:	cmp	r5, #0
   195bc:	ldr	r7, [r0, #8]
   195c0:	beq	19698 <_obstack_memory_used@@Base+0xf58>
   195c4:	stmib	sp, {r1, r2, r3}
   195c8:	mov	r6, #1
   195cc:	str	r4, [sp]
   195d0:	mov	r8, #0
   195d4:	b	195f4 <_obstack_memory_used@@Base+0xeb4>
   195d8:	mov	r3, r6
   195dc:	subs	r5, r5, #1
   195e0:	moveq	r3, #0
   195e4:	andne	r3, r3, #1
   195e8:	cmp	r3, #0
   195ec:	add	r4, r4, #24
   195f0:	beq	19660 <_obstack_memory_used@@Base+0xf20>
   195f4:	ldr	fp, [r4, #12]
   195f8:	ands	r9, fp, #8
   195fc:	movne	r3, r6
   19600:	movne	r9, r8
   19604:	bne	195dc <_obstack_memory_used@@Base+0xe9c>
   19608:	ldr	sl, [r4, #4]
   1960c:	sub	r3, sl, #1
   19610:	cmp	r3, #254	; 0xfe
   19614:	bhi	195d8 <_obstack_memory_used@@Base+0xe98>
   19618:	bl	11520 <__ctype_b_loc@plt>
   1961c:	lsl	r3, sl, #1
   19620:	ldr	r1, [r0]
   19624:	ldrh	r3, [r1, r3]
   19628:	tst	r3, #16384	; 0x4000
   1962c:	beq	195d8 <_obstack_memory_used@@Base+0xe98>
   19630:	ldrb	r3, [r7]
   19634:	cmp	r3, sl
   19638:	bne	195d8 <_obstack_memory_used@@Base+0xe98>
   1963c:	ldr	r3, [sp]
   19640:	tst	fp, #4
   19644:	moveq	r3, r4
   19648:	tst	fp, #2
   1964c:	str	r3, [sp]
   19650:	movne	r3, r6
   19654:	beq	19670 <_obstack_memory_used@@Base+0xf30>
   19658:	add	r7, r7, #1
   1965c:	b	195dc <_obstack_memory_used@@Base+0xe9c>
   19660:	mov	sl, r9
   19664:	mov	r0, sl
   19668:	add	sp, sp, #20
   1966c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19670:	ldr	r3, [sp, #12]
   19674:	ldr	r2, [sp, #8]
   19678:	ldr	r1, [sp]
   1967c:	mov	r0, r4
   19680:	ldr	ip, [sp, #4]
   19684:	blx	ip
   19688:	clz	r3, r0
   1968c:	mov	r9, r0
   19690:	lsr	r3, r3, #5
   19694:	b	19658 <_obstack_memory_used@@Base+0xf18>
   19698:	mov	sl, r5
   1969c:	b	19664 <_obstack_memory_used@@Base+0xf24>
   196a0:	push	{r4, r5, r6, lr}
   196a4:	ldr	r4, [r0, #12]
   196a8:	ands	r4, r4, #8
   196ac:	movne	r4, #0
   196b0:	bne	196dc <_obstack_memory_used@@Base+0xf9c>
   196b4:	ldr	r5, [r0, #4]
   196b8:	sub	r3, r5, #1
   196bc:	cmp	r3, #254	; 0xfe
   196c0:	bhi	196dc <_obstack_memory_used@@Base+0xf9c>
   196c4:	bl	11520 <__ctype_b_loc@plt>
   196c8:	lsl	r3, r5, #1
   196cc:	ldr	r2, [r0]
   196d0:	ldrh	r3, [r2, r3]
   196d4:	tst	r3, #16384	; 0x4000
   196d8:	movne	r4, r5
   196dc:	mov	r0, r4
   196e0:	pop	{r4, r5, r6, pc}
   196e4:	push	{r4, lr}
   196e8:	mov	r4, r0
   196ec:	bl	11520 <__ctype_b_loc@plt>
   196f0:	ldr	r2, [r4]
   196f4:	ldr	lr, [r0]
   196f8:	b	19700 <_obstack_memory_used@@Base+0xfc0>
   196fc:	str	r2, [r4]
   19700:	ldrb	r1, [r2]
   19704:	mov	r3, r2
   19708:	add	r2, r2, #1
   1970c:	lsl	r0, r1, #1
   19710:	ldrh	ip, [lr, r0]
   19714:	tst	ip, #8192	; 0x2000
   19718:	bne	196fc <_obstack_memory_used@@Base+0xfbc>
   1971c:	subs	r0, r1, #45	; 0x2d
   19720:	movne	r0, #1
   19724:	cmp	r1, #0
   19728:	popeq	{r4, pc}
   1972c:	tst	ip, #8
   19730:	popne	{r4, pc}
   19734:	add	r3, r3, #1
   19738:	str	r3, [r4]
   1973c:	ldrb	r2, [r3]
   19740:	cmp	r2, #0
   19744:	lsl	r2, r2, #1
   19748:	popeq	{r4, pc}
   1974c:	ldrh	r2, [lr, r2]
   19750:	tst	r2, #8
   19754:	beq	19734 <_obstack_memory_used@@Base+0xff4>
   19758:	pop	{r4, pc}
   1975c:	push	{r4, r5, r6, lr}
   19760:	mov	r5, r0
   19764:	ldr	r0, [r0, #12]
   19768:	cmp	r0, #0
   1976c:	beq	19780 <_obstack_memory_used@@Base+0x1040>
   19770:	ldr	r4, [r0, #24]
   19774:	bl	182f0 <argp_parse@@Base+0xe98>
   19778:	subs	r0, r4, #0
   1977c:	bne	19770 <_obstack_memory_used@@Base+0x1030>
   19780:	ldr	r3, [r5, #4]
   19784:	cmp	r3, #0
   19788:	beq	1979c <_obstack_memory_used@@Base+0x105c>
   1978c:	ldr	r0, [r5]
   19790:	bl	182f0 <argp_parse@@Base+0xe98>
   19794:	ldr	r0, [r5, #8]
   19798:	bl	182f0 <argp_parse@@Base+0xe98>
   1979c:	mov	r0, r5
   197a0:	pop	{r4, r5, r6, lr}
   197a4:	b	182f0 <argp_parse@@Base+0xe98>
   197a8:	push	{r4, r5, r6, r7, r8, lr}
   197ac:	mov	r5, r1
   197b0:	ldr	r3, [r0, #28]
   197b4:	ldr	r1, [r0, #24]
   197b8:	ldr	r2, [r0, #16]
   197bc:	sub	r3, r3, r1
   197c0:	cmp	r3, r2
   197c4:	mov	r4, r0
   197c8:	bhi	19834 <_obstack_memory_used@@Base+0x10f4>
   197cc:	ldr	r1, [r4, #20]
   197d0:	mov	r6, #32
   197d4:	cmp	r1, #0
   197d8:	subge	r5, r5, r1
   197dc:	mov	r7, #1
   197e0:	cmp	r5, #0
   197e4:	sub	r5, r5, #1
   197e8:	ble	19814 <_obstack_memory_used@@Base+0x10d4>
   197ec:	ldr	r3, [r4, #28]
   197f0:	ldr	r2, [r4, #32]
   197f4:	cmp	r3, r2
   197f8:	bcs	19818 <_obstack_memory_used@@Base+0x10d8>
   197fc:	add	r2, r3, #1
   19800:	cmp	r5, #0
   19804:	str	r2, [r4, #28]
   19808:	sub	r5, r5, #1
   1980c:	strb	r6, [r3]
   19810:	bgt	197ec <_obstack_memory_used@@Base+0x10ac>
   19814:	pop	{r4, r5, r6, r7, r8, pc}
   19818:	mov	r1, r7
   1981c:	mov	r0, r4
   19820:	bl	1dc34 <argp_error@@Base+0x1490>
   19824:	cmp	r0, #0
   19828:	beq	197e0 <_obstack_memory_used@@Base+0x10a0>
   1982c:	ldr	r3, [r4, #28]
   19830:	b	197fc <_obstack_memory_used@@Base+0x10bc>
   19834:	bl	1d5a4 <argp_error@@Base+0xe00>
   19838:	b	197cc <_obstack_memory_used@@Base+0x108c>
   1983c:	push	{r4, r5, r6, lr}
   19840:	subs	r4, r2, #0
   19844:	popeq	{r4, r5, r6, pc}
   19848:	ldr	ip, [r4, #20]
   1984c:	cmp	ip, #0
   19850:	popeq	{r4, r5, r6, pc}
   19854:	mov	r6, r1
   19858:	mov	r5, r0
   1985c:	mov	r1, r3
   19860:	mov	r0, r4
   19864:	bl	18194 <argp_parse@@Base+0xd3c>
   19868:	ldr	r3, [r4, #20]
   1986c:	mov	r1, r5
   19870:	mov	r2, r0
   19874:	mov	r0, r6
   19878:	pop	{r4, r5, r6, lr}
   1987c:	bx	r3
   19880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19884:	mov	r5, r2
   19888:	sub	sp, sp, #12
   1988c:	mov	r2, r1
   19890:	ldr	r3, [r5, #16]
   19894:	ldr	r1, [pc, #488]	; 19a84 <_obstack_memory_used@@Base+0x1344>
   19898:	mov	r8, r0
   1989c:	bl	1983c <_obstack_memory_used@@Base+0x10fc>
   198a0:	subs	r6, r0, #0
   198a4:	beq	199b0 <_obstack_memory_used@@Base+0x1270>
   198a8:	ldrb	r3, [r6]
   198ac:	cmp	r3, #0
   198b0:	beq	199a4 <_obstack_memory_used@@Base+0x1264>
   198b4:	ldr	r3, [r5, #8]
   198b8:	ldr	r3, [r3]
   198bc:	cmp	r3, #0
   198c0:	beq	198e8 <_obstack_memory_used@@Base+0x11a8>
   198c4:	ldr	r4, [r5, #4]
   198c8:	ldr	r3, [r4, #28]
   198cc:	ldr	r2, [r4, #32]
   198d0:	cmp	r3, r2
   198d4:	bcs	19a68 <_obstack_memory_used@@Base+0x1328>
   198d8:	add	r1, r3, #1
   198dc:	mov	r2, #10
   198e0:	str	r1, [r4, #28]
   198e4:	strb	r2, [r3]
   198e8:	ldr	sl, [pc, #408]	; 19a88 <_obstack_memory_used@@Base+0x1348>
   198ec:	ldr	r0, [r5, #4]
   198f0:	ldr	r1, [sl, #24]
   198f4:	bl	197a8 <_obstack_memory_used@@Base+0x1068>
   198f8:	ldr	r4, [r5, #4]
   198fc:	ldr	r9, [sl, #24]
   19900:	ldr	r7, [r4, #28]
   19904:	ldr	r3, [r4, #24]
   19908:	ldr	r2, [r4, #16]
   1990c:	sub	r3, r7, r3
   19910:	cmp	r3, r2
   19914:	strls	r9, [r4, #4]
   19918:	movls	fp, r4
   1991c:	bhi	199ec <_obstack_memory_used@@Base+0x12ac>
   19920:	str	r9, [fp, #12]
   19924:	mov	r0, r6
   19928:	bl	11544 <strlen@plt>
   1992c:	subs	r9, r0, #0
   19930:	beq	19968 <_obstack_memory_used@@Base+0x1228>
   19934:	ldr	r2, [r4, #32]
   19938:	add	r3, r7, r9
   1993c:	cmp	r2, r3
   19940:	bcc	199d0 <_obstack_memory_used@@Base+0x1290>
   19944:	mov	r2, r9
   19948:	mov	r0, r7
   1994c:	mov	r1, r6
   19950:	bl	1140c <memcpy@plt>
   19954:	ldr	r3, [r4, #28]
   19958:	add	r9, r3, r9
   1995c:	str	r9, [r4, #28]
   19960:	ldr	r4, [r5, #4]
   19964:	ldr	r7, [r4, #28]
   19968:	ldr	r3, [r4, #24]
   1996c:	ldr	r2, [r4, #16]
   19970:	sub	r3, r7, r3
   19974:	cmp	r3, r2
   19978:	movls	r9, r4
   1997c:	bhi	19a38 <_obstack_memory_used@@Base+0x12f8>
   19980:	ldr	r2, [r9, #32]
   19984:	mov	r3, #0
   19988:	cmp	r2, r7
   1998c:	str	r3, [r4, #4]
   19990:	bls	19a4c <_obstack_memory_used@@Base+0x130c>
   19994:	add	r2, r7, #1
   19998:	mov	r3, #10
   1999c:	str	r2, [r9, #28]
   199a0:	strb	r3, [r7]
   199a4:	ldr	r3, [r5, #8]
   199a8:	mov	r2, #1
   199ac:	str	r2, [r3, #4]
   199b0:	cmp	r8, r6
   199b4:	beq	199c8 <_obstack_memory_used@@Base+0x1288>
   199b8:	mov	r0, r6
   199bc:	add	sp, sp, #12
   199c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199c4:	b	182f0 <argp_parse@@Base+0xe98>
   199c8:	add	sp, sp, #12
   199cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199d0:	mov	r1, r9
   199d4:	mov	r0, r4
   199d8:	bl	1dc34 <argp_error@@Base+0x1490>
   199dc:	cmp	r0, #0
   199e0:	beq	19960 <_obstack_memory_used@@Base+0x1220>
   199e4:	ldr	r7, [r4, #28]
   199e8:	b	19944 <_obstack_memory_used@@Base+0x1204>
   199ec:	mov	r0, r4
   199f0:	str	r9, [sp, #4]
   199f4:	bl	1d5a4 <argp_error@@Base+0xe00>
   199f8:	ldr	fp, [r5, #4]
   199fc:	ldr	r3, [sp, #4]
   19a00:	ldr	r9, [sl, #24]
   19a04:	ldr	r7, [fp, #28]
   19a08:	ldr	r2, [fp, #24]
   19a0c:	ldr	r1, [fp, #16]
   19a10:	sub	r2, r7, r2
   19a14:	cmp	r2, r1
   19a18:	str	r3, [r4, #4]
   19a1c:	movls	r4, fp
   19a20:	bls	19920 <_obstack_memory_used@@Base+0x11e0>
   19a24:	mov	r0, fp
   19a28:	bl	1d5a4 <argp_error@@Base+0xe00>
   19a2c:	ldr	r4, [r5, #4]
   19a30:	ldr	r7, [r4, #28]
   19a34:	b	19920 <_obstack_memory_used@@Base+0x11e0>
   19a38:	mov	r0, r4
   19a3c:	bl	1d5a4 <argp_error@@Base+0xe00>
   19a40:	ldr	r9, [r5, #4]
   19a44:	ldr	r7, [r9, #28]
   19a48:	b	19980 <_obstack_memory_used@@Base+0x1240>
   19a4c:	mov	r1, #1
   19a50:	mov	r0, r9
   19a54:	bl	1dc34 <argp_error@@Base+0x1490>
   19a58:	cmp	r0, #0
   19a5c:	beq	199a4 <_obstack_memory_used@@Base+0x1264>
   19a60:	ldr	r7, [r9, #28]
   19a64:	b	19994 <_obstack_memory_used@@Base+0x1254>
   19a68:	mov	r1, #1
   19a6c:	mov	r0, r4
   19a70:	bl	1dc34 <argp_error@@Base+0x1490>
   19a74:	cmp	r0, #0
   19a78:	beq	198e8 <_obstack_memory_used@@Base+0x11a8>
   19a7c:	ldr	r3, [r4, #28]
   19a80:	b	198d8 <_obstack_memory_used@@Base+0x1198>
   19a84:	andeq	r0, r0, #3
   19a88:	andeq	r2, r3, r0, lsl #22
   19a8c:	ldr	r3, [r1, #12]
   19a90:	push	{r4, r5, r6, r7, r8, lr}
   19a94:	cmp	r3, #0
   19a98:	mov	r4, r1
   19a9c:	mov	r6, r0
   19aa0:	beq	19b88 <_obstack_memory_used@@Base+0x1448>
   19aa4:	ldr	r3, [r1, #8]
   19aa8:	ldr	r2, [r1]
   19aac:	ldr	r7, [r3]
   19ab0:	ldr	r3, [r3, #4]
   19ab4:	ldr	r5, [r2, #16]
   19ab8:	cmp	r3, #0
   19abc:	cmpne	r7, #0
   19ac0:	beq	19af8 <_obstack_memory_used@@Base+0x13b8>
   19ac4:	ldr	r2, [r2, #12]
   19ac8:	ldr	r3, [r7, #12]
   19acc:	cmp	r2, r3
   19ad0:	beq	19af8 <_obstack_memory_used@@Base+0x13b8>
   19ad4:	ldr	r8, [r1, #4]
   19ad8:	ldr	r3, [r8, #28]
   19adc:	ldr	r2, [r8, #32]
   19ae0:	cmp	r3, r2
   19ae4:	bcs	19c18 <_obstack_memory_used@@Base+0x14d8>
   19ae8:	add	r1, r3, #1
   19aec:	mov	r2, #10
   19af0:	str	r1, [r8, #28]
   19af4:	strb	r2, [r3]
   19af8:	cmp	r5, #0
   19afc:	beq	19be4 <_obstack_memory_used@@Base+0x14a4>
   19b00:	ldr	r0, [r5]
   19b04:	cmp	r0, #0
   19b08:	beq	19be4 <_obstack_memory_used@@Base+0x14a4>
   19b0c:	ldrb	r3, [r0]
   19b10:	cmp	r3, #0
   19b14:	beq	19be4 <_obstack_memory_used@@Base+0x14a4>
   19b18:	cmp	r7, #0
   19b1c:	beq	19b4c <_obstack_memory_used@@Base+0x140c>
   19b20:	ldr	r3, [r7, #16]
   19b24:	cmp	r5, r3
   19b28:	beq	19be4 <_obstack_memory_used@@Base+0x14a4>
   19b2c:	cmp	r3, #0
   19b30:	beq	19b4c <_obstack_memory_used@@Base+0x140c>
   19b34:	ldr	r3, [r3, #12]
   19b38:	cmp	r3, #0
   19b3c:	cmpne	r5, r3
   19b40:	bne	19b34 <_obstack_memory_used@@Base+0x13f4>
   19b44:	cmp	r5, r3
   19b48:	beq	19be4 <_obstack_memory_used@@Base+0x14a4>
   19b4c:	ldr	r3, [r4, #4]
   19b50:	ldr	r1, [r5, #16]
   19b54:	mov	r2, r4
   19b58:	ldr	r7, [r3, #12]
   19b5c:	bl	19880 <_obstack_memory_used@@Base+0x1140>
   19b60:	ldr	r5, [r4, #4]
   19b64:	mov	r0, r5
   19b68:	ldr	r3, [r5, #28]
   19b6c:	ldr	r1, [r5, #24]
   19b70:	ldr	r2, [r5, #16]
   19b74:	sub	r3, r3, r1
   19b78:	cmp	r3, r2
   19b7c:	bhi	19c0c <_obstack_memory_used@@Base+0x14cc>
   19b80:	str	r7, [r5, #12]
   19b84:	b	19be8 <_obstack_memory_used@@Base+0x14a8>
   19b88:	ldr	r5, [r1, #4]
   19b8c:	ldr	r3, [r5, #28]
   19b90:	ldr	r1, [r5, #32]
   19b94:	add	r2, r3, #2
   19b98:	cmp	r1, r2
   19b9c:	bcc	19bc8 <_obstack_memory_used@@Base+0x1488>
   19ba0:	ldr	r2, [pc, #140]	; 19c34 <_obstack_memory_used@@Base+0x14f4>
   19ba4:	mov	r1, r6
   19ba8:	ldrh	r2, [r2]
   19bac:	strh	r2, [r3]
   19bb0:	ldr	r3, [r5, #28]
   19bb4:	ldr	r0, [r4, #4]
   19bb8:	add	r3, r3, #2
   19bbc:	str	r3, [r5, #28]
   19bc0:	pop	{r4, r5, r6, r7, r8, lr}
   19bc4:	b	197a8 <_obstack_memory_used@@Base+0x1068>
   19bc8:	mov	r1, #2
   19bcc:	mov	r0, r5
   19bd0:	bl	1dc34 <argp_error@@Base+0x1490>
   19bd4:	cmp	r0, #0
   19bd8:	beq	19bfc <_obstack_memory_used@@Base+0x14bc>
   19bdc:	ldr	r3, [r5, #28]
   19be0:	b	19ba0 <_obstack_memory_used@@Base+0x1460>
   19be4:	ldr	r0, [r4, #4]
   19be8:	mov	r3, #0
   19bec:	str	r3, [r4, #12]
   19bf0:	mov	r1, r6
   19bf4:	pop	{r4, r5, r6, r7, r8, lr}
   19bf8:	b	197a8 <_obstack_memory_used@@Base+0x1068>
   19bfc:	ldr	r0, [r4, #4]
   19c00:	mov	r1, r6
   19c04:	pop	{r4, r5, r6, r7, r8, lr}
   19c08:	b	197a8 <_obstack_memory_used@@Base+0x1068>
   19c0c:	bl	1d5a4 <argp_error@@Base+0xe00>
   19c10:	ldr	r0, [r4, #4]
   19c14:	b	19b80 <_obstack_memory_used@@Base+0x1440>
   19c18:	mov	r1, #1
   19c1c:	mov	r0, r8
   19c20:	bl	1dc34 <argp_error@@Base+0x1490>
   19c24:	cmp	r0, #0
   19c28:	beq	19af8 <_obstack_memory_used@@Base+0x13b8>
   19c2c:	ldr	r3, [r8, #28]
   19c30:	b	19ae8 <_obstack_memory_used@@Base+0x13a8>
   19c34:	ldrdeq	r1, [r2], -r8
   19c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c3c:	mov	r7, r3
   19c40:	ldr	sl, [r0, #12]
   19c44:	sub	sp, sp, #36	; 0x24
   19c48:	ldr	r3, [r0, #16]
   19c4c:	cmp	sl, #0
   19c50:	mov	fp, r0
   19c54:	mov	r6, r2
   19c58:	str	r3, [sp, #16]
   19c5c:	mov	r9, r1
   19c60:	ldr	r8, [sp, #72]	; 0x48
   19c64:	ldr	r5, [sp, #76]	; 0x4c
   19c68:	beq	1a038 <_obstack_memory_used@@Base+0x18f8>
   19c6c:	mov	r1, #11
   19c70:	mov	r0, sl
   19c74:	bl	11550 <strchr@plt>
   19c78:	cmp	r6, #0
   19c7c:	bne	19f54 <_obstack_memory_used@@Base+0x1814>
   19c80:	cmp	r0, #0
   19c84:	ldr	r3, [fp, #20]
   19c88:	beq	1a190 <_obstack_memory_used@@Base+0x1a50>
   19c8c:	cmp	r3, #0
   19c90:	sub	r4, r0, sl
   19c94:	beq	1a128 <_obstack_memory_used@@Base+0x19e8>
   19c98:	cmp	r4, #0
   19c9c:	beq	1a0c8 <_obstack_memory_used@@Base+0x1988>
   19ca0:	mov	r0, sl
   19ca4:	mov	r1, r4
   19ca8:	bl	11400 <strndup@plt>
   19cac:	mov	r3, #1
   19cb0:	str	r3, [sp, #24]
   19cb4:	mov	sl, r0
   19cb8:	adds	r3, r0, #0
   19cbc:	movne	r3, #1
   19cc0:	str	r3, [sp, #20]
   19cc4:	mov	r1, r9
   19cc8:	mov	r0, fp
   19ccc:	bl	18194 <argp_parse@@Base+0xd3c>
   19cd0:	ldr	r3, [fp, #20]
   19cd4:	str	r0, [sp, #12]
   19cd8:	ldr	r0, [pc, #1272]	; 1a1d8 <_obstack_memory_used@@Base+0x1a98>
   19cdc:	ldr	r2, [sp, #12]
   19ce0:	mov	r1, sl
   19ce4:	blx	r3
   19ce8:	subs	r3, r0, #0
   19cec:	beq	1a078 <_obstack_memory_used@@Base+0x1938>
   19cf0:	cmp	r7, #0
   19cf4:	beq	19d18 <_obstack_memory_used@@Base+0x15d8>
   19cf8:	ldr	r2, [r5, #28]
   19cfc:	ldr	r1, [r5, #32]
   19d00:	cmp	r2, r1
   19d04:	bcs	1a080 <_obstack_memory_used@@Base+0x1940>
   19d08:	add	r0, r2, #1
   19d0c:	mov	r1, #10
   19d10:	str	r0, [r5, #28]
   19d14:	strb	r1, [r2]
   19d18:	ldr	r2, [sp, #24]
   19d1c:	cmp	r3, sl
   19d20:	movne	r2, #0
   19d24:	andeq	r2, r2, #1
   19d28:	cmp	r2, #0
   19d2c:	beq	19f98 <_obstack_memory_used@@Base+0x1858>
   19d30:	ldr	r0, [r5, #28]
   19d34:	ldr	r1, [r5, #32]
   19d38:	add	r2, r0, r4
   19d3c:	cmp	r1, r2
   19d40:	bcs	19ff8 <_obstack_memory_used@@Base+0x18b8>
   19d44:	mov	r1, r4
   19d48:	mov	r0, r5
   19d4c:	str	r3, [sp, #24]
   19d50:	bl	1dc34 <argp_error@@Base+0x1490>
   19d54:	ldr	r3, [sp, #24]
   19d58:	cmp	r0, #0
   19d5c:	bne	19ff4 <_obstack_memory_used@@Base+0x18b4>
   19d60:	ldr	r4, [r5, #28]
   19d64:	ldr	r1, [r5, #24]
   19d68:	ldr	r2, [r5, #16]
   19d6c:	sub	r4, r4, r1
   19d70:	cmp	r4, r2
   19d74:	bhi	1a01c <_obstack_memory_used@@Base+0x18dc>
   19d78:	ldr	r2, [r5, #20]
   19d7c:	ldr	r1, [r5, #4]
   19d80:	bic	r2, r2, r2, asr #31
   19d84:	cmp	r1, r2
   19d88:	bcs	19dac <_obstack_memory_used@@Base+0x166c>
   19d8c:	ldr	r2, [r5, #28]
   19d90:	ldr	r1, [r5, #32]
   19d94:	cmp	r2, r1
   19d98:	bcs	1a0a4 <_obstack_memory_used@@Base+0x1964>
   19d9c:	add	r0, r2, #1
   19da0:	mov	r1, #10
   19da4:	str	r0, [r5, #28]
   19da8:	strb	r1, [r2]
   19dac:	cmp	r3, sl
   19db0:	moveq	r4, #1
   19db4:	beq	19dc4 <_obstack_memory_used@@Base+0x1684>
   19db8:	mov	r0, r3
   19dbc:	bl	182f0 <argp_parse@@Base+0xe98>
   19dc0:	mov	r4, #1
   19dc4:	ldr	r3, [sp, #20]
   19dc8:	cmp	r3, #0
   19dcc:	beq	19de4 <_obstack_memory_used@@Base+0x16a4>
   19dd0:	ldr	r3, [fp, #20]
   19dd4:	cmp	r3, #0
   19dd8:	beq	19ec8 <_obstack_memory_used@@Base+0x1788>
   19ddc:	mov	r0, sl
   19de0:	bl	182f0 <argp_parse@@Base+0xe98>
   19de4:	cmp	r6, #0
   19de8:	beq	19ec8 <_obstack_memory_used@@Base+0x1788>
   19dec:	ldr	r3, [fp, #20]
   19df0:	cmp	r3, #0
   19df4:	beq	19ec8 <_obstack_memory_used@@Base+0x1788>
   19df8:	ldr	r2, [sp, #12]
   19dfc:	mov	r1, #0
   19e00:	ldr	r0, [pc, #980]	; 1a1dc <_obstack_memory_used@@Base+0x1a9c>
   19e04:	blx	r3
   19e08:	subs	sl, r0, #0
   19e0c:	beq	19ec8 <_obstack_memory_used@@Base+0x1788>
   19e10:	orrs	r3, r7, r4
   19e14:	beq	19e38 <_obstack_memory_used@@Base+0x16f8>
   19e18:	ldr	r3, [r5, #28]
   19e1c:	ldr	r2, [r5, #32]
   19e20:	cmp	r3, r2
   19e24:	bcs	1a160 <_obstack_memory_used@@Base+0x1a20>
   19e28:	add	r1, r3, #1
   19e2c:	mov	r2, #10
   19e30:	str	r1, [r5, #28]
   19e34:	strb	r2, [r3]
   19e38:	mov	r0, sl
   19e3c:	bl	11544 <strlen@plt>
   19e40:	subs	r4, r0, #0
   19e44:	beq	19e70 <_obstack_memory_used@@Base+0x1730>
   19e48:	ldr	r0, [r5, #28]
   19e4c:	ldr	r2, [r5, #32]
   19e50:	add	r3, r0, r4
   19e54:	cmp	r2, r3
   19e58:	bcs	1a0d8 <_obstack_memory_used@@Base+0x1998>
   19e5c:	mov	r1, r4
   19e60:	mov	r0, r5
   19e64:	bl	1dc34 <argp_error@@Base+0x1490>
   19e68:	cmp	r0, #0
   19e6c:	bne	1a0d4 <_obstack_memory_used@@Base+0x1994>
   19e70:	mov	r0, sl
   19e74:	bl	182f0 <argp_parse@@Base+0xe98>
   19e78:	ldr	r3, [r5, #28]
   19e7c:	ldr	r1, [r5, #24]
   19e80:	ldr	r2, [r5, #16]
   19e84:	sub	r3, r3, r1
   19e88:	cmp	r3, r2
   19e8c:	bhi	1a0f4 <_obstack_memory_used@@Base+0x19b4>
   19e90:	ldr	r3, [r5, #20]
   19e94:	ldr	r2, [r5, #4]
   19e98:	bic	r3, r3, r3, asr #31
   19e9c:	cmp	r2, r3
   19ea0:	bcs	1a030 <_obstack_memory_used@@Base+0x18f0>
   19ea4:	ldr	r3, [r5, #28]
   19ea8:	ldr	r2, [r5, #32]
   19eac:	cmp	r3, r2
   19eb0:	bcs	1a144 <_obstack_memory_used@@Base+0x1a04>
   19eb4:	mov	r4, #1
   19eb8:	add	r2, r3, r4
   19ebc:	str	r2, [r5, #28]
   19ec0:	mov	r2, #10
   19ec4:	strb	r2, [r3]
   19ec8:	ldr	fp, [sp, #16]
   19ecc:	cmp	fp, #0
   19ed0:	beq	19f48 <_obstack_memory_used@@Base+0x1808>
   19ed4:	ldr	r3, [fp]
   19ed8:	cmp	r3, #0
   19edc:	beq	19f48 <_obstack_memory_used@@Base+0x1808>
   19ee0:	eor	r2, r4, #1
   19ee4:	and	r2, r2, #1
   19ee8:	clz	sl, r8
   19eec:	lsr	sl, sl, #5
   19ef0:	orrs	r2, sl, r2
   19ef4:	bne	19f10 <_obstack_memory_used@@Base+0x17d0>
   19ef8:	b	1a17c <_obstack_memory_used@@Base+0x1a3c>
   19efc:	cmp	r4, #0
   19f00:	movne	r2, sl
   19f04:	orreq	r2, sl, #1
   19f08:	cmp	r2, #0
   19f0c:	beq	19f48 <_obstack_memory_used@@Base+0x1808>
   19f10:	orrs	r2, r7, r4
   19f14:	mov	r0, r3
   19f18:	str	r5, [sp, #4]
   19f1c:	movne	r3, #1
   19f20:	moveq	r3, #0
   19f24:	str	r8, [sp]
   19f28:	mov	r2, r6
   19f2c:	mov	r1, r9
   19f30:	bl	19c38 <_obstack_memory_used@@Base+0x14f8>
   19f34:	ldr	r3, [fp, #16]
   19f38:	add	fp, fp, #16
   19f3c:	cmp	r3, #0
   19f40:	orr	r4, r4, r0
   19f44:	bne	19efc <_obstack_memory_used@@Base+0x17bc>
   19f48:	mov	r0, r4
   19f4c:	add	sp, sp, #36	; 0x24
   19f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f54:	cmp	r0, #0
   19f58:	addne	sl, r0, #1
   19f5c:	beq	1a120 <_obstack_memory_used@@Base+0x19e0>
   19f60:	ldr	r3, [fp, #20]
   19f64:	cmp	r3, #0
   19f68:	beq	1a100 <_obstack_memory_used@@Base+0x19c0>
   19f6c:	mov	r3, #0
   19f70:	mov	r1, r9
   19f74:	mov	r0, fp
   19f78:	mov	r4, r3
   19f7c:	str	r3, [sp, #20]
   19f80:	bl	18194 <argp_parse@@Base+0xd3c>
   19f84:	str	r4, [sp, #24]
   19f88:	ldr	r3, [fp, #20]
   19f8c:	str	r0, [sp, #12]
   19f90:	ldr	r0, [pc, #584]	; 1a1e0 <_obstack_memory_used@@Base+0x1aa0>
   19f94:	b	19cdc <_obstack_memory_used@@Base+0x159c>
   19f98:	mov	r0, r3
   19f9c:	str	r3, [sp, #24]
   19fa0:	bl	11544 <strlen@plt>
   19fa4:	ldr	r3, [sp, #24]
   19fa8:	subs	r4, r0, #0
   19fac:	beq	19d60 <_obstack_memory_used@@Base+0x1620>
   19fb0:	ldr	r0, [r5, #28]
   19fb4:	ldr	r1, [r5, #32]
   19fb8:	add	r2, r0, r4
   19fbc:	cmp	r1, r2
   19fc0:	bcs	19fe4 <_obstack_memory_used@@Base+0x18a4>
   19fc4:	mov	r1, r4
   19fc8:	mov	r0, r5
   19fcc:	str	r3, [sp, #24]
   19fd0:	bl	1dc34 <argp_error@@Base+0x1490>
   19fd4:	ldr	r3, [sp, #24]
   19fd8:	cmp	r0, #0
   19fdc:	beq	19d60 <_obstack_memory_used@@Base+0x1620>
   19fe0:	ldr	r0, [r5, #28]
   19fe4:	mov	r2, r4
   19fe8:	mov	r1, r3
   19fec:	str	r3, [sp, #24]
   19ff0:	b	1a004 <_obstack_memory_used@@Base+0x18c4>
   19ff4:	ldr	r0, [r5, #28]
   19ff8:	mov	r2, r4
   19ffc:	mov	r1, sl
   1a000:	str	r3, [sp, #24]
   1a004:	bl	1140c <memcpy@plt>
   1a008:	ldr	r2, [r5, #28]
   1a00c:	ldr	r3, [sp, #24]
   1a010:	add	r4, r2, r4
   1a014:	str	r4, [r5, #28]
   1a018:	b	19d64 <_obstack_memory_used@@Base+0x1624>
   1a01c:	mov	r0, r5
   1a020:	str	r3, [sp, #24]
   1a024:	bl	1d5a4 <argp_error@@Base+0xe00>
   1a028:	ldr	r3, [sp, #24]
   1a02c:	b	19d78 <_obstack_memory_used@@Base+0x1638>
   1a030:	mov	r4, #1
   1a034:	b	19ec8 <_obstack_memory_used@@Base+0x1788>
   1a038:	ldr	r4, [r0, #20]
   1a03c:	cmp	r4, #0
   1a040:	beq	1a188 <_obstack_memory_used@@Base+0x1a48>
   1a044:	bl	18194 <argp_parse@@Base+0xd3c>
   1a048:	cmp	r6, #0
   1a04c:	ldr	r3, [fp, #20]
   1a050:	strne	sl, [sp, #20]
   1a054:	strne	sl, [sp, #24]
   1a058:	movne	r4, sl
   1a05c:	streq	r6, [sp, #20]
   1a060:	streq	r6, [sp, #24]
   1a064:	moveq	r4, r6
   1a068:	str	r0, [sp, #12]
   1a06c:	ldrne	r0, [pc, #364]	; 1a1e0 <_obstack_memory_used@@Base+0x1aa0>
   1a070:	ldreq	r0, [pc, #352]	; 1a1d8 <_obstack_memory_used@@Base+0x1a98>
   1a074:	b	19cdc <_obstack_memory_used@@Base+0x159c>
   1a078:	mov	r4, r3
   1a07c:	b	19dc4 <_obstack_memory_used@@Base+0x1684>
   1a080:	mov	r1, #1
   1a084:	mov	r0, r5
   1a088:	str	r3, [sp, #28]
   1a08c:	bl	1dc34 <argp_error@@Base+0x1490>
   1a090:	ldr	r3, [sp, #28]
   1a094:	cmp	r0, #0
   1a098:	beq	19d18 <_obstack_memory_used@@Base+0x15d8>
   1a09c:	ldr	r2, [r5, #28]
   1a0a0:	b	19d08 <_obstack_memory_used@@Base+0x15c8>
   1a0a4:	mov	r1, #1
   1a0a8:	mov	r0, r5
   1a0ac:	str	r3, [sp, #24]
   1a0b0:	bl	1dc34 <argp_error@@Base+0x1490>
   1a0b4:	ldr	r3, [sp, #24]
   1a0b8:	cmp	r0, #0
   1a0bc:	beq	19dac <_obstack_memory_used@@Base+0x166c>
   1a0c0:	ldr	r2, [r5, #28]
   1a0c4:	b	19d9c <_obstack_memory_used@@Base+0x165c>
   1a0c8:	str	r4, [sp, #20]
   1a0cc:	str	r4, [sp, #24]
   1a0d0:	b	19cc4 <_obstack_memory_used@@Base+0x1584>
   1a0d4:	ldr	r0, [r5, #28]
   1a0d8:	mov	r2, r4
   1a0dc:	mov	r1, sl
   1a0e0:	bl	1140c <memcpy@plt>
   1a0e4:	ldr	r3, [r5, #28]
   1a0e8:	add	r4, r3, r4
   1a0ec:	str	r4, [r5, #28]
   1a0f0:	b	19e70 <_obstack_memory_used@@Base+0x1730>
   1a0f4:	mov	r0, r5
   1a0f8:	bl	1d5a4 <argp_error@@Base+0xe00>
   1a0fc:	b	19e90 <_obstack_memory_used@@Base+0x1750>
   1a100:	cmp	sl, #0
   1a104:	beq	1a184 <_obstack_memory_used@@Base+0x1a44>
   1a108:	str	r3, [sp, #20]
   1a10c:	str	r3, [sp, #24]
   1a110:	mov	r4, r3
   1a114:	str	r3, [sp, #12]
   1a118:	mov	r3, sl
   1a11c:	b	19cf0 <_obstack_memory_used@@Base+0x15b0>
   1a120:	mov	sl, r0
   1a124:	b	19f60 <_obstack_memory_used@@Base+0x1820>
   1a128:	adds	r3, r4, #0
   1a12c:	movne	r3, #1
   1a130:	str	r3, [sp, #24]
   1a134:	str	r3, [sp, #20]
   1a138:	str	r6, [sp, #12]
   1a13c:	mov	r3, sl
   1a140:	b	19cf0 <_obstack_memory_used@@Base+0x15b0>
   1a144:	mov	r1, #1
   1a148:	mov	r0, r5
   1a14c:	bl	1dc34 <argp_error@@Base+0x1490>
   1a150:	cmp	r0, #0
   1a154:	beq	1a030 <_obstack_memory_used@@Base+0x18f0>
   1a158:	ldr	r3, [r5, #28]
   1a15c:	b	19eb4 <_obstack_memory_used@@Base+0x1774>
   1a160:	mov	r1, #1
   1a164:	mov	r0, r5
   1a168:	bl	1dc34 <argp_error@@Base+0x1490>
   1a16c:	cmp	r0, #0
   1a170:	beq	19e38 <_obstack_memory_used@@Base+0x16f8>
   1a174:	ldr	r3, [r5, #28]
   1a178:	b	19e28 <_obstack_memory_used@@Base+0x16e8>
   1a17c:	mov	r4, #1
   1a180:	b	19f48 <_obstack_memory_used@@Base+0x1808>
   1a184:	mov	r4, sl
   1a188:	str	r4, [sp, #12]
   1a18c:	b	19de4 <_obstack_memory_used@@Base+0x16a4>
   1a190:	cmp	r3, #0
   1a194:	beq	1a1c0 <_obstack_memory_used@@Base+0x1a80>
   1a198:	mov	r1, r9
   1a19c:	mov	r0, fp
   1a1a0:	bl	18194 <argp_parse@@Base+0xd3c>
   1a1a4:	mov	r4, r6
   1a1a8:	ldr	r3, [fp, #20]
   1a1ac:	str	r6, [sp, #20]
   1a1b0:	str	r6, [sp, #24]
   1a1b4:	str	r0, [sp, #12]
   1a1b8:	ldr	r0, [pc, #24]	; 1a1d8 <_obstack_memory_used@@Base+0x1a98>
   1a1bc:	b	19cdc <_obstack_memory_used@@Base+0x159c>
   1a1c0:	mov	r3, sl
   1a1c4:	str	r6, [sp, #20]
   1a1c8:	str	r6, [sp, #24]
   1a1cc:	mov	r4, r6
   1a1d0:	str	r6, [sp, #12]
   1a1d4:	b	19cf0 <_obstack_memory_used@@Base+0x15b0>
   1a1d8:	andeq	r0, r0, #1
   1a1dc:	andeq	r0, r0, #4
   1a1e0:	andeq	r0, r0, #2
   1a1e4:	ldr	r3, [r0, #12]
   1a1e8:	ldr	r2, [r1, #12]
   1a1ec:	push	{r4, r5, r6, lr}
   1a1f0:	cmp	r3, r2
   1a1f4:	beq	1a244 <_obstack_memory_used@@Base+0x1b04>
   1a1f8:	mov	r5, r1
   1a1fc:	mov	r4, r0
   1a200:	mov	r1, r2
   1a204:	mov	r0, r3
   1a208:	bl	1a1e4 <_obstack_memory_used@@Base+0x1aa4>
   1a20c:	cmp	r0, #0
   1a210:	popne	{r4, r5, r6, pc}
   1a214:	ldr	r3, [r5, #8]
   1a218:	ldr	r0, [r4, #8]
   1a21c:	mvn	r2, r3
   1a220:	lsr	r2, r2, #31
   1a224:	cmp	r2, r0, lsr #31
   1a228:	subne	r0, r0, r3
   1a22c:	subeq	r0, r3, r0
   1a230:	cmp	r0, #0
   1a234:	ldreq	r3, [r5, #4]
   1a238:	ldreq	r0, [r4, #4]
   1a23c:	subeq	r0, r3, r0
   1a240:	pop	{r4, r5, r6, pc}
   1a244:	ldr	r3, [r1, #8]
   1a248:	ldr	r2, [r0, #8]
   1a24c:	mvn	ip, r3
   1a250:	ldr	lr, [r1, #4]
   1a254:	lsr	ip, ip, #31
   1a258:	cmp	ip, r2, lsr #31
   1a25c:	ldr	r1, [r0, #4]
   1a260:	subne	r0, r2, r3
   1a264:	subeq	r0, r3, r2
   1a268:	cmp	r0, #0
   1a26c:	subeq	r0, lr, r1
   1a270:	pop	{r4, r5, r6, pc}
   1a274:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a278:	sub	sp, sp, #12
   1a27c:	ldr	lr, [r0, #16]
   1a280:	cmp	lr, #0
   1a284:	movne	r2, lr
   1a288:	bne	1a294 <_obstack_memory_used@@Base+0x1b54>
   1a28c:	b	1a558 <_obstack_memory_used@@Base+0x1e18>
   1a290:	mov	r2, r3
   1a294:	ldr	r3, [r2, #12]
   1a298:	cmp	r3, #0
   1a29c:	bne	1a290 <_obstack_memory_used@@Base+0x1b50>
   1a2a0:	ldr	ip, [r1, #16]
   1a2a4:	ldr	r4, [r2, #8]
   1a2a8:	cmp	ip, #0
   1a2ac:	movne	r2, ip
   1a2b0:	bne	1a2bc <_obstack_memory_used@@Base+0x1b7c>
   1a2b4:	b	1a56c <_obstack_memory_used@@Base+0x1e2c>
   1a2b8:	mov	r2, r3
   1a2bc:	ldr	r3, [r2, #12]
   1a2c0:	cmp	r3, #0
   1a2c4:	bne	1a2b8 <_obstack_memory_used@@Base+0x1b78>
   1a2c8:	ldr	r3, [r2, #8]
   1a2cc:	mvn	r2, r3
   1a2d0:	lsr	r2, r2, #31
   1a2d4:	cmp	r2, r4, lsr #31
   1a2d8:	subne	r4, r4, r3
   1a2dc:	subeq	r4, r3, r4
   1a2e0:	cmp	r4, #0
   1a2e4:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a2e8:	adds	r4, ip, #0
   1a2ec:	movne	r4, #1
   1a2f0:	cmp	lr, #0
   1a2f4:	rsbeq	r4, r4, #0
   1a2f8:	rsbne	r4, r4, #1
   1a2fc:	cmp	r4, #0
   1a300:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a304:	cmp	lr, #0
   1a308:	mov	r5, r1
   1a30c:	mov	r6, r0
   1a310:	beq	1a368 <_obstack_memory_used@@Base+0x1c28>
   1a314:	ldr	r0, [lr, #20]
   1a318:	ldr	r2, [ip, #20]
   1a31c:	cmp	r0, r2
   1a320:	ble	1a52c <_obstack_memory_used@@Base+0x1dec>
   1a324:	mov	r0, lr
   1a328:	ldr	r0, [r0, #12]
   1a32c:	ldr	r3, [r0, #20]
   1a330:	cmp	r2, r3
   1a334:	blt	1a328 <_obstack_memory_used@@Base+0x1be8>
   1a338:	mov	r1, ip
   1a33c:	bl	1a1e4 <_obstack_memory_used@@Base+0x1aa4>
   1a340:	cmp	r0, #0
   1a344:	movne	r4, r0
   1a348:	moveq	r4, #1
   1a34c:	mov	r0, r4
   1a350:	add	sp, sp, #12
   1a354:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a358:	mov	r0, lr
   1a35c:	bl	1a1e4 <_obstack_memory_used@@Base+0x1aa4>
   1a360:	subs	r4, r0, #0
   1a364:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a368:	ldr	r4, [r5, #12]
   1a36c:	ldr	r3, [r6, #12]
   1a370:	mvn	r2, r4
   1a374:	lsr	r2, r2, #31
   1a378:	cmp	r2, r3, lsr #31
   1a37c:	subne	r4, r3, r4
   1a380:	subeq	r4, r4, r3
   1a384:	cmp	r4, #0
   1a388:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a38c:	ldr	r2, [r6, #4]
   1a390:	ldr	lr, [r6]
   1a394:	cmp	r2, #0
   1a398:	beq	1a3c4 <_obstack_memory_used@@Base+0x1c84>
   1a39c:	add	r3, lr, #24
   1a3a0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1a3a4:	cmp	r1, #0
   1a3a8:	beq	1a3b8 <_obstack_memory_used@@Base+0x1c78>
   1a3ac:	ldr	r0, [r3, #-12]
   1a3b0:	tst	r0, #2
   1a3b4:	beq	1a574 <_obstack_memory_used@@Base+0x1e34>
   1a3b8:	subs	r2, r2, #1
   1a3bc:	add	r3, r3, #24
   1a3c0:	bne	1a3a0 <_obstack_memory_used@@Base+0x1c60>
   1a3c4:	ldr	r2, [r5, #4]
   1a3c8:	mov	ip, #0
   1a3cc:	cmp	r2, ip
   1a3d0:	str	ip, [sp]
   1a3d4:	ldr	r3, [r5]
   1a3d8:	beq	1a5e4 <_obstack_memory_used@@Base+0x1ea4>
   1a3dc:	add	r3, r3, #24
   1a3e0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1a3e4:	cmp	r1, #0
   1a3e8:	beq	1a3f8 <_obstack_memory_used@@Base+0x1cb8>
   1a3ec:	ldr	r0, [r3, #-12]
   1a3f0:	tst	r0, #2
   1a3f4:	beq	1a408 <_obstack_memory_used@@Base+0x1cc8>
   1a3f8:	subs	r2, r2, #1
   1a3fc:	add	r3, r3, #24
   1a400:	bne	1a3e0 <_obstack_memory_used@@Base+0x1ca0>
   1a404:	mov	r1, r2
   1a408:	ldr	r3, [lr, #12]
   1a40c:	str	r1, [sp, #4]
   1a410:	ands	r3, ip, r3, lsr #3
   1a414:	beq	1a5dc <_obstack_memory_used@@Base+0x1e9c>
   1a418:	mov	r0, sp
   1a41c:	bl	196e4 <_obstack_memory_used@@Base+0xfa4>
   1a420:	ldr	r3, [r5]
   1a424:	cmp	r0, #0
   1a428:	bne	1a5c8 <_obstack_memory_used@@Base+0x1e88>
   1a42c:	ldr	r3, [r3, #12]
   1a430:	tst	r3, #8
   1a434:	beq	1a45c <_obstack_memory_used@@Base+0x1d1c>
   1a438:	ldr	r3, [sp, #4]
   1a43c:	cmp	r3, #0
   1a440:	beq	1a45c <_obstack_memory_used@@Base+0x1d1c>
   1a444:	add	r0, sp, #4
   1a448:	bl	196e4 <_obstack_memory_used@@Base+0xfa4>
   1a44c:	cmp	r0, #0
   1a450:	subne	r4, r4, #1
   1a454:	cmp	r4, #0
   1a458:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a45c:	ldr	r2, [r6, #20]
   1a460:	mov	r0, r6
   1a464:	mov	r3, #0
   1a468:	ldr	r2, [r2, #24]
   1a46c:	ldr	r1, [pc, #408]	; 1a60c <_obstack_memory_used@@Base+0x1ecc>
   1a470:	bl	195a8 <_obstack_memory_used@@Base+0xe68>
   1a474:	ldr	r2, [r5, #20]
   1a478:	mov	r3, #0
   1a47c:	ldr	r1, [pc, #392]	; 1a60c <_obstack_memory_used@@Base+0x1ecc>
   1a480:	ldr	r2, [r2, #24]
   1a484:	uxtb	r6, r0
   1a488:	mov	r0, r5
   1a48c:	bl	195a8 <_obstack_memory_used@@Base+0xe68>
   1a490:	cmp	r6, #0
   1a494:	lslne	r4, r6, #2
   1a498:	movne	r7, r6
   1a49c:	uxtb	r5, r0
   1a4a0:	beq	1a5ac <_obstack_memory_used@@Base+0x1e6c>
   1a4a4:	cmp	r5, #0
   1a4a8:	lslne	r9, r5, #2
   1a4ac:	movne	r8, r5
   1a4b0:	beq	1a590 <_obstack_memory_used@@Base+0x1e50>
   1a4b4:	bl	114f0 <__ctype_tolower_loc@plt>
   1a4b8:	ldr	r3, [r0]
   1a4bc:	ldr	r4, [r3, r4]
   1a4c0:	ldr	r3, [r3, r9]
   1a4c4:	subs	r4, r4, r3
   1a4c8:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a4cc:	subs	r4, r8, r7
   1a4d0:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a4d4:	adds	r4, r5, #0
   1a4d8:	movne	r4, #1
   1a4dc:	cmp	r6, #0
   1a4e0:	rsbeq	r4, r4, #0
   1a4e4:	rsbne	r4, r4, #1
   1a4e8:	cmp	r4, #0
   1a4ec:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a4f0:	cmp	r6, #0
   1a4f4:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a4f8:	ldm	sp, {r0, r1}
   1a4fc:	adds	r4, r1, #0
   1a500:	movne	r4, #1
   1a504:	cmp	r0, #0
   1a508:	rsbeq	r4, r4, #0
   1a50c:	rsbne	r4, r4, #1
   1a510:	cmp	r4, #0
   1a514:	bne	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a518:	cmp	r0, #0
   1a51c:	beq	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a520:	bl	11454 <strcasecmp@plt>
   1a524:	mov	r4, r0
   1a528:	b	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a52c:	mov	r1, ip
   1a530:	bge	1a358 <_obstack_memory_used@@Base+0x1c18>
   1a534:	ldr	r1, [r1, #12]
   1a538:	ldr	r3, [r1, #20]
   1a53c:	cmp	r0, r3
   1a540:	blt	1a534 <_obstack_memory_used@@Base+0x1df4>
   1a544:	mov	r0, lr
   1a548:	bl	1a1e4 <_obstack_memory_used@@Base+0x1aa4>
   1a54c:	subs	r4, r0, #0
   1a550:	mvneq	r4, #0
   1a554:	b	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a558:	ldr	ip, [r1, #16]
   1a55c:	ldr	r4, [r0, #12]
   1a560:	cmp	ip, #0
   1a564:	movne	r2, ip
   1a568:	bne	1a2bc <_obstack_memory_used@@Base+0x1b7c>
   1a56c:	ldr	r3, [r1, #12]
   1a570:	b	1a2cc <_obstack_memory_used@@Base+0x1b8c>
   1a574:	ldr	r2, [r5, #4]
   1a578:	str	r1, [sp]
   1a57c:	cmp	r2, #0
   1a580:	ldr	r3, [r5]
   1a584:	beq	1a5ec <_obstack_memory_used@@Base+0x1eac>
   1a588:	mov	ip, #1
   1a58c:	b	1a3dc <_obstack_memory_used@@Base+0x1c9c>
   1a590:	ldr	r3, [sp, #4]
   1a594:	cmp	r3, #0
   1a598:	moveq	r9, r5
   1a59c:	ldrbne	r8, [r3]
   1a5a0:	moveq	r8, r5
   1a5a4:	lslne	r9, r8, #2
   1a5a8:	b	1a4b4 <_obstack_memory_used@@Base+0x1d74>
   1a5ac:	ldr	r3, [sp]
   1a5b0:	cmp	r3, #0
   1a5b4:	moveq	r4, r6
   1a5b8:	ldrbne	r7, [r3]
   1a5bc:	moveq	r7, r6
   1a5c0:	lslne	r4, r7, #2
   1a5c4:	b	1a4a4 <_obstack_memory_used@@Base+0x1d64>
   1a5c8:	ldr	r3, [r3, #12]
   1a5cc:	tst	r3, #8
   1a5d0:	bne	1a5f8 <_obstack_memory_used@@Base+0x1eb8>
   1a5d4:	mov	r4, #1
   1a5d8:	b	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a5dc:	ldr	r3, [r5]
   1a5e0:	b	1a42c <_obstack_memory_used@@Base+0x1cec>
   1a5e4:	str	r2, [sp, #4]
   1a5e8:	b	1a45c <_obstack_memory_used@@Base+0x1d1c>
   1a5ec:	mov	r1, r2
   1a5f0:	mov	ip, #1
   1a5f4:	b	1a408 <_obstack_memory_used@@Base+0x1cc8>
   1a5f8:	ldr	r3, [sp, #4]
   1a5fc:	mov	r4, #1
   1a600:	cmp	r3, #0
   1a604:	bne	1a444 <_obstack_memory_used@@Base+0x1d04>
   1a608:	b	1a34c <_obstack_memory_used@@Base+0x1c0c>
   1a60c:	andeq	r9, r1, r0, lsr #13
   1a610:	ldr	r3, [r0, #28]
   1a614:	ldr	r2, [r0, #24]
   1a618:	push	{r4, r5, r6, lr}
   1a61c:	mov	r5, r1
   1a620:	ldr	r1, [r0, #16]
   1a624:	sub	r2, r3, r2
   1a628:	cmp	r2, r1
   1a62c:	mov	r4, r0
   1a630:	movls	r2, r3
   1a634:	bhi	1a690 <_obstack_memory_used@@Base+0x1f50>
   1a638:	ldr	r1, [r4, #20]
   1a63c:	ldr	r0, [r4, #8]
   1a640:	cmp	r1, #0
   1a644:	addge	r5, r5, r1
   1a648:	cmp	r5, r0
   1a64c:	bcc	1a670 <_obstack_memory_used@@Base+0x1f30>
   1a650:	ldr	r1, [r4, #32]
   1a654:	cmp	r1, r3
   1a658:	bls	1a6a0 <_obstack_memory_used@@Base+0x1f60>
   1a65c:	add	r1, r2, #1
   1a660:	mov	r3, #10
   1a664:	str	r1, [r4, #28]
   1a668:	strb	r3, [r2]
   1a66c:	pop	{r4, r5, r6, pc}
   1a670:	ldr	r2, [r4, #32]
   1a674:	cmp	r2, r3
   1a678:	bls	1a6bc <_obstack_memory_used@@Base+0x1f7c>
   1a67c:	add	r1, r3, #1
   1a680:	mov	r2, #32
   1a684:	str	r1, [r4, #28]
   1a688:	strb	r2, [r3]
   1a68c:	pop	{r4, r5, r6, pc}
   1a690:	bl	1d5a4 <argp_error@@Base+0xe00>
   1a694:	ldr	r3, [r4, #28]
   1a698:	mov	r2, r3
   1a69c:	b	1a638 <_obstack_memory_used@@Base+0x1ef8>
   1a6a0:	mov	r1, #1
   1a6a4:	mov	r0, r4
   1a6a8:	bl	1dc34 <argp_error@@Base+0x1490>
   1a6ac:	cmp	r0, #0
   1a6b0:	popeq	{r4, r5, r6, pc}
   1a6b4:	ldr	r2, [r4, #28]
   1a6b8:	b	1a65c <_obstack_memory_used@@Base+0x1f1c>
   1a6bc:	mov	r1, #1
   1a6c0:	mov	r0, r4
   1a6c4:	bl	1dc34 <argp_error@@Base+0x1490>
   1a6c8:	cmp	r0, #0
   1a6cc:	popeq	{r4, r5, r6, pc}
   1a6d0:	ldr	r3, [r4, #28]
   1a6d4:	b	1a67c <_obstack_memory_used@@Base+0x1f3c>
   1a6d8:	push	{r4, r5, r6, lr}
   1a6dc:	ldr	r5, [r0, #8]
   1a6e0:	ldr	r2, [r0, #12]
   1a6e4:	ldr	ip, [r1, #12]
   1a6e8:	cmp	r5, #0
   1a6ec:	orr	r2, r2, ip
   1a6f0:	beq	1a758 <_obstack_memory_used@@Base+0x2018>
   1a6f4:	tst	r2, #16
   1a6f8:	bne	1a734 <_obstack_memory_used@@Base+0x1ff4>
   1a6fc:	tst	r2, #1
   1a700:	mov	r6, r3
   1a704:	mov	r4, r0
   1a708:	bne	1a73c <_obstack_memory_used@@Base+0x1ffc>
   1a70c:	mov	r0, r5
   1a710:	bl	11544 <strlen@plt>
   1a714:	add	r1, r0, #6
   1a718:	mov	r0, r6
   1a71c:	bl	1a610 <_obstack_memory_used@@Base+0x1ed0>
   1a720:	mov	r3, r5
   1a724:	ldr	r2, [r4, #4]
   1a728:	mov	r0, r6
   1a72c:	ldr	r1, [pc, #56]	; 1a76c <_obstack_memory_used@@Base+0x202c>
   1a730:	bl	1dc54 <argp_error@@Base+0x14b0>
   1a734:	mov	r0, #0
   1a738:	pop	{r4, r5, r6, pc}
   1a73c:	ldr	r2, [r0, #4]
   1a740:	mov	r3, r5
   1a744:	mov	r0, r6
   1a748:	ldr	r1, [pc, #32]	; 1a770 <_obstack_memory_used@@Base+0x2030>
   1a74c:	bl	1dc54 <argp_error@@Base+0x14b0>
   1a750:	mov	r0, #0
   1a754:	pop	{r4, r5, r6, pc}
   1a758:	ldr	r5, [r1, #8]
   1a75c:	cmp	r5, #0
   1a760:	bne	1a6f4 <_obstack_memory_used@@Base+0x1fb4>
   1a764:	mov	r0, #0
   1a768:	pop	{r4, r5, r6, pc}
   1a76c:	andeq	r1, r2, r8, ror #3
   1a770:	ldrdeq	r1, [r2], -ip
   1a774:	mov	ip, r0
   1a778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a77c:	mov	r8, r2
   1a780:	sub	sp, sp, #28
   1a784:	mov	r2, ip
   1a788:	ldr	ip, [ip, #16]
   1a78c:	mov	r9, r1
   1a790:	ldr	r1, [r0, #8]
   1a794:	str	ip, [sp, #8]
   1a798:	ldr	ip, [r8]
   1a79c:	str	r1, [sp, #16]
   1a7a0:	mov	r0, r1
   1a7a4:	mov	r4, r3
   1a7a8:	ldr	r1, [pc, #456]	; 1a978 <_obstack_memory_used@@Base+0x2238>
   1a7ac:	mov	r3, r9
   1a7b0:	mov	r5, ip
   1a7b4:	str	ip, [sp, #20]
   1a7b8:	ldr	r6, [sp, #64]	; 0x40
   1a7bc:	bl	1983c <_obstack_memory_used@@Base+0x10fc>
   1a7c0:	subs	r3, r0, #0
   1a7c4:	str	r3, [sp, #12]
   1a7c8:	beq	1a924 <_obstack_memory_used@@Base+0x21e4>
   1a7cc:	mov	r1, #10
   1a7d0:	bl	113d0 <strchrnul@plt>
   1a7d4:	ldrb	sl, [r0]
   1a7d8:	mov	r7, r0
   1a7dc:	cmp	sl, #0
   1a7e0:	bne	1a8e0 <_obstack_memory_used@@Base+0x21a0>
   1a7e4:	ldr	r5, [sp, #12]
   1a7e8:	add	r1, r7, #1
   1a7ec:	sub	r1, r1, r5
   1a7f0:	mov	r0, r6
   1a7f4:	bl	1a610 <_obstack_memory_used@@Base+0x1ed0>
   1a7f8:	ldr	r0, [r6, #28]
   1a7fc:	sub	fp, r7, r5
   1a800:	ldr	r1, [r6, #32]
   1a804:	add	r2, r0, fp
   1a808:	cmp	r1, r2
   1a80c:	bcs	1a828 <_obstack_memory_used@@Base+0x20e8>
   1a810:	mov	r1, fp
   1a814:	mov	r0, r6
   1a818:	bl	1dc34 <argp_error@@Base+0x1490>
   1a81c:	cmp	r0, #0
   1a820:	beq	1a840 <_obstack_memory_used@@Base+0x2100>
   1a824:	ldr	r0, [r6, #28]
   1a828:	mov	r2, fp
   1a82c:	mov	r1, r5
   1a830:	bl	1140c <memcpy@plt>
   1a834:	ldr	r3, [r6, #28]
   1a838:	add	fp, r3, fp
   1a83c:	str	fp, [r6, #28]
   1a840:	ldr	r3, [sp, #16]
   1a844:	ldr	r2, [sp, #12]
   1a848:	cmp	r3, r2
   1a84c:	beq	1a858 <_obstack_memory_used@@Base+0x2118>
   1a850:	mov	r0, r2
   1a854:	bl	182f0 <argp_parse@@Base+0xe98>
   1a858:	ldr	r3, [sp, #8]
   1a85c:	cmp	r3, #0
   1a860:	beq	1a8a4 <_obstack_memory_used@@Base+0x2164>
   1a864:	ldr	r2, [r3]
   1a868:	cmp	r2, #0
   1a86c:	beq	1a8a4 <_obstack_memory_used@@Base+0x2164>
   1a870:	ldr	r5, [sp, #8]
   1a874:	mov	r3, r4
   1a878:	mov	r0, r2
   1a87c:	str	r6, [sp]
   1a880:	mov	r2, r8
   1a884:	mov	r1, r9
   1a888:	bl	1a774 <_obstack_memory_used@@Base+0x2034>
   1a88c:	ldr	r2, [r5, #16]!
   1a890:	cmp	r2, #0
   1a894:	clz	r3, r0
   1a898:	lsr	r3, r3, #5
   1a89c:	bne	1a878 <_obstack_memory_used@@Base+0x2138>
   1a8a0:	mov	r4, r3
   1a8a4:	cmp	r4, #0
   1a8a8:	moveq	sl, #0
   1a8ac:	andne	sl, sl, #1
   1a8b0:	cmp	sl, #0
   1a8b4:	beq	1a944 <_obstack_memory_used@@Base+0x2204>
   1a8b8:	ldrb	r0, [r7]
   1a8bc:	cmp	r0, #0
   1a8c0:	bne	1a954 <_obstack_memory_used@@Base+0x2214>
   1a8c4:	ldr	r3, [sp, #20]
   1a8c8:	ldrb	r4, [r3]
   1a8cc:	cmp	r4, #0
   1a8d0:	moveq	r0, r4
   1a8d4:	strbne	r0, [r3]
   1a8d8:	add	sp, sp, #28
   1a8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8e0:	ldrb	sl, [r5]
   1a8e4:	cmp	sl, #0
   1a8e8:	beq	1a970 <_obstack_memory_used@@Base+0x2230>
   1a8ec:	mov	fp, #0
   1a8f0:	add	r5, r0, #1
   1a8f4:	add	fp, fp, #1
   1a8f8:	mov	r0, r5
   1a8fc:	mov	r1, #10
   1a900:	bl	113d0 <strchrnul@plt>
   1a904:	cmp	fp, sl
   1a908:	bne	1a8f0 <_obstack_memory_used@@Base+0x21b0>
   1a90c:	mov	r7, r0
   1a910:	ldr	r2, [r8]
   1a914:	mov	sl, #1
   1a918:	add	r2, r2, sl
   1a91c:	str	r2, [r8]
   1a920:	b	1a7e8 <_obstack_memory_used@@Base+0x20a8>
   1a924:	ldr	r3, [sp, #8]
   1a928:	cmp	r3, #0
   1a92c:	beq	1a944 <_obstack_memory_used@@Base+0x2204>
   1a930:	ldr	r2, [r3]
   1a934:	cmp	r2, #0
   1a938:	ldrne	r7, [sp, #12]
   1a93c:	movne	sl, r7
   1a940:	bne	1a870 <_obstack_memory_used@@Base+0x2130>
   1a944:	clz	r0, r4
   1a948:	lsr	r0, r0, #5
   1a94c:	add	sp, sp, #28
   1a950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a954:	ldr	r2, [sp, #20]
   1a958:	mov	r0, #1
   1a95c:	ldrb	r3, [r2]
   1a960:	add	r3, r3, r0
   1a964:	strb	r3, [r2]
   1a968:	add	sp, sp, #28
   1a96c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a970:	ldr	r5, [sp, #12]
   1a974:	b	1a910 <_obstack_memory_used@@Base+0x21d0>
   1a978:	andeq	r0, r0, #6
   1a97c:	ldr	r2, [r0, #8]
   1a980:	cmp	r2, #0
   1a984:	beq	1a990 <_obstack_memory_used@@Base+0x2250>
   1a988:	mov	r0, #0
   1a98c:	bx	lr
   1a990:	ldr	r2, [r1, #8]
   1a994:	cmp	r2, #0
   1a998:	bne	1a988 <_obstack_memory_used@@Base+0x2248>
   1a99c:	ldr	r1, [r1, #12]
   1a9a0:	ldr	r2, [r0, #12]
   1a9a4:	orr	r2, r2, r1
   1a9a8:	tst	r2, #16
   1a9ac:	ldreq	r2, [r3]
   1a9b0:	ldreq	r1, [r0, #4]
   1a9b4:	addeq	r0, r2, #1
   1a9b8:	streq	r0, [r3]
   1a9bc:	strbeq	r1, [r2]
   1a9c0:	b	1a988 <_obstack_memory_used@@Base+0x2248>
   1a9c4:	mov	r3, r0
   1a9c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9cc:	sub	sp, sp, #52	; 0x34
   1a9d0:	ldr	r2, [r3, #16]
   1a9d4:	str	r0, [sp, #24]
   1a9d8:	mov	r0, #16
   1a9dc:	ldr	r4, [r3]
   1a9e0:	str	r1, [sp, #28]
   1a9e4:	str	r2, [sp, #8]
   1a9e8:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1a9ec:	subs	r3, r0, #0
   1a9f0:	str	r3, [sp, #20]
   1a9f4:	beq	1b058 <_obstack_memory_used@@Base+0x2918>
   1a9f8:	ldr	r2, [sp, #20]
   1a9fc:	mov	r3, #0
   1aa00:	cmp	r4, #0
   1aa04:	str	r3, [r2, #4]
   1aa08:	str	r3, [r2, #12]
   1aa0c:	beq	1ac10 <_obstack_memory_used@@Base+0x24d0>
   1aa10:	ldr	r5, [r4, #12]
   1aa14:	ands	r5, r5, #4
   1aa18:	bne	1b06c <_obstack_memory_used@@Base+0x292c>
   1aa1c:	add	r6, r4, #24
   1aa20:	mov	r9, r5
   1aa24:	mov	sl, r5
   1aa28:	mov	fp, r2
   1aa2c:	b	1aa70 <_obstack_memory_used@@Base+0x2330>
   1aa30:	ldr	r3, [r6, #-12]
   1aa34:	tst	r3, #4
   1aa38:	addeq	r9, r9, #1
   1aa3c:	streq	r9, [fp, #4]
   1aa40:	tst	r3, #8
   1aa44:	bne	1aa6c <_obstack_memory_used@@Base+0x232c>
   1aa48:	sub	r3, r8, #1
   1aa4c:	cmp	r3, #254	; 0xfe
   1aa50:	bhi	1aa6c <_obstack_memory_used@@Base+0x232c>
   1aa54:	bl	11520 <__ctype_b_loc@plt>
   1aa58:	lsl	r8, r8, #1
   1aa5c:	ldr	r3, [r0]
   1aa60:	ldrh	r3, [r3, r8]
   1aa64:	tst	r3, #16384	; 0x4000
   1aa68:	addne	sl, sl, #1
   1aa6c:	add	r6, r6, #24
   1aa70:	ldr	r8, [r6, #-20]	; 0xffffffec
   1aa74:	cmp	r8, #0
   1aa78:	bne	1aa30 <_obstack_memory_used@@Base+0x22f0>
   1aa7c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1aa80:	cmp	r3, #0
   1aa84:	bne	1aa30 <_obstack_memory_used@@Base+0x22f0>
   1aa88:	ldr	r3, [r6, #-8]
   1aa8c:	cmp	r3, #0
   1aa90:	bne	1aa30 <_obstack_memory_used@@Base+0x22f0>
   1aa94:	ldr	r7, [r6, #-4]
   1aa98:	cmp	r7, #0
   1aa9c:	bne	1aa30 <_obstack_memory_used@@Base+0x22f0>
   1aaa0:	rsb	r9, r9, r9, lsl #3
   1aaa4:	lsl	r0, r9, #2
   1aaa8:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1aaac:	ldr	r6, [sp, #20]
   1aab0:	str	r0, [r6]
   1aab4:	add	r0, sl, #1
   1aab8:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1aabc:	ldr	r8, [r6]
   1aac0:	mov	r3, r6
   1aac4:	cmp	r0, #0
   1aac8:	cmpne	r8, #0
   1aacc:	mov	sl, r0
   1aad0:	str	r0, [r3, #8]
   1aad4:	beq	1b01c <_obstack_memory_used@@Base+0x28dc>
   1aad8:	ldr	r2, [sp, #20]
   1aadc:	ldr	r3, [pc, #1436]	; 1b080 <_obstack_memory_used@@Base+0x2940>
   1aae0:	ldr	r2, [r2, #4]
   1aae4:	cmp	r2, r3
   1aae8:	bhi	1b008 <_obstack_memory_used@@Base+0x28c8>
   1aaec:	add	r8, r8, #28
   1aaf0:	mov	r2, r8
   1aaf4:	ldr	r3, [r4, #4]
   1aaf8:	mov	r8, sl
   1aafc:	mov	r9, r2
   1ab00:	cmp	r3, #0
   1ab04:	bne	1ab14 <_obstack_memory_used@@Base+0x23d4>
   1ab08:	ldr	r2, [r4]
   1ab0c:	cmp	r2, #0
   1ab10:	beq	1afc0 <_obstack_memory_used@@Base+0x2880>
   1ab14:	str	r7, [r9, #-24]	; 0xffffffe8
   1ab18:	ldr	r6, [r4, #20]
   1ab1c:	str	r4, [r9, #-28]	; 0xffffffe4
   1ab20:	cmp	r6, #0
   1ab24:	str	sl, [r9, #-20]	; 0xffffffec
   1ab28:	bne	1ab40 <_obstack_memory_used@@Base+0x2400>
   1ab2c:	ldr	r2, [r4]
   1ab30:	cmp	r2, #0
   1ab34:	cmpeq	r3, #0
   1ab38:	movne	r6, r5
   1ab3c:	beq	1afe4 <_obstack_memory_used@@Base+0x28a4>
   1ab40:	ldr	r1, [sp, #28]
   1ab44:	str	r6, [r9, #-16]
   1ab48:	mov	r5, r4
   1ab4c:	ldr	r2, [r4, #12]
   1ab50:	mov	r3, r7
   1ab54:	str	r1, [r9, #-12]
   1ab58:	ldr	r1, [sp, #24]
   1ab5c:	str	r1, [r9, #-8]
   1ab60:	add	r3, r3, #1
   1ab64:	tst	r2, #8
   1ab68:	str	r3, [r9, #-24]	; 0xffffffe8
   1ab6c:	bne	1abd8 <_obstack_memory_used@@Base+0x2498>
   1ab70:	ldr	fp, [r4, #4]
   1ab74:	sub	r3, fp, #1
   1ab78:	cmp	r3, #254	; 0xfe
   1ab7c:	bhi	1abd8 <_obstack_memory_used@@Base+0x2498>
   1ab80:	bl	11520 <__ctype_b_loc@plt>
   1ab84:	lsl	r3, fp, #1
   1ab88:	ldr	r2, [r0]
   1ab8c:	ldrh	r3, [r2, r3]
   1ab90:	tst	r3, #16384	; 0x4000
   1ab94:	beq	1abd8 <_obstack_memory_used@@Base+0x2498>
   1ab98:	cmp	r8, sl
   1ab9c:	uxtb	r1, fp
   1aba0:	bcs	1abd0 <_obstack_memory_used@@Base+0x2490>
   1aba4:	ldrb	r3, [r8]
   1aba8:	cmp	r3, r1
   1abac:	movne	r3, r8
   1abb0:	subne	r0, sl, #1
   1abb4:	bne	1abc8 <_obstack_memory_used@@Base+0x2488>
   1abb8:	b	1abd8 <_obstack_memory_used@@Base+0x2498>
   1abbc:	ldrb	r2, [r3, #1]!
   1abc0:	cmp	r2, r1
   1abc4:	beq	1abd8 <_obstack_memory_used@@Base+0x2498>
   1abc8:	cmp	r0, r3
   1abcc:	bne	1abbc <_obstack_memory_used@@Base+0x247c>
   1abd0:	strb	r1, [sl]
   1abd4:	add	sl, sl, #1
   1abd8:	ldr	r3, [r5, #28]
   1abdc:	add	r4, r4, #24
   1abe0:	cmp	r3, #0
   1abe4:	bne	1abf4 <_obstack_memory_used@@Base+0x24b4>
   1abe8:	ldr	r2, [r5, #24]
   1abec:	cmp	r2, #0
   1abf0:	beq	1af9c <_obstack_memory_used@@Base+0x285c>
   1abf4:	ldr	r2, [r5, #36]	; 0x24
   1abf8:	tst	r2, #4
   1abfc:	beq	1afb4 <_obstack_memory_used@@Base+0x2874>
   1ac00:	ldr	r3, [r9, #-24]	; 0xffffffe8
   1ac04:	mov	r5, r4
   1ac08:	b	1ab60 <_obstack_memory_used@@Base+0x2420>
   1ac0c:	strb	r3, [sl]
   1ac10:	ldr	r3, [sp, #8]
   1ac14:	cmp	r3, #0
   1ac18:	beq	1ad54 <_obstack_memory_used@@Base+0x2614>
   1ac1c:	ldr	r3, [r3]
   1ac20:	cmp	r3, #0
   1ac24:	beq	1ad54 <_obstack_memory_used@@Base+0x2614>
   1ac28:	ldr	r3, [sp, #20]
   1ac2c:	add	r3, r3, #12
   1ac30:	str	r3, [sp, #44]	; 0x2c
   1ac34:	ldr	r3, [sp, #8]
   1ac38:	ldr	r5, [r3, #12]
   1ac3c:	cmp	r5, #0
   1ac40:	ldrne	r6, [r3, #8]
   1ac44:	bne	1ac58 <_obstack_memory_used@@Base+0x2518>
   1ac48:	ldr	r3, [sp, #8]
   1ac4c:	ldr	r6, [r3, #8]
   1ac50:	cmp	r6, #0
   1ac54:	beq	1af7c <_obstack_memory_used@@Base+0x283c>
   1ac58:	ldr	r7, [sp, #24]
   1ac5c:	ldr	r2, [sp, #8]
   1ac60:	mov	r0, #28
   1ac64:	ldr	r3, [r7, #16]
   1ac68:	sub	r3, r2, r3
   1ac6c:	asr	r4, r3, #4
   1ac70:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1ac74:	subs	r1, r0, #0
   1ac78:	beq	1acb8 <_obstack_memory_used@@Base+0x2578>
   1ac7c:	ldr	r3, [sp, #28]
   1ac80:	ldr	r0, [sp, #20]
   1ac84:	cmp	r3, #0
   1ac88:	str	r3, [r1, #12]
   1ac8c:	ldrne	r3, [r3, #20]
   1ac90:	ldr	r2, [r0, #12]
   1ac94:	addne	r3, r3, #1
   1ac98:	moveq	r3, #0
   1ac9c:	str	r5, [r1, #8]
   1aca0:	str	r6, [r1]
   1aca4:	str	r4, [r1, #4]
   1aca8:	str	r7, [r1, #16]
   1acac:	str	r3, [r1, #20]
   1acb0:	str	r2, [r1, #24]
   1acb4:	str	r1, [r0, #12]
   1acb8:	ldr	r3, [sp, #8]
   1acbc:	ldr	r0, [r3]
   1acc0:	bl	1a9c4 <_obstack_memory_used@@Base+0x2284>
   1acc4:	ldr	r3, [sp, #20]
   1acc8:	ldr	r2, [r3, #12]
   1accc:	cmp	r2, #0
   1acd0:	str	r0, [sp, #16]
   1acd4:	bne	1ace0 <_obstack_memory_used@@Base+0x25a0>
   1acd8:	b	1af84 <_obstack_memory_used@@Base+0x2844>
   1acdc:	mov	r2, r3
   1ace0:	ldr	r3, [r2, #24]
   1ace4:	cmp	r3, #0
   1ace8:	bne	1acdc <_obstack_memory_used@@Base+0x259c>
   1acec:	add	r2, r2, #24
   1acf0:	ldr	r0, [sp, #16]
   1acf4:	mov	ip, r0
   1acf8:	ldr	r3, [r0, #4]
   1acfc:	ldr	r1, [r0, #12]
   1ad00:	cmp	r3, #0
   1ad04:	str	r1, [r2]
   1ad08:	mov	r2, #0
   1ad0c:	str	r2, [r0, #12]
   1ad10:	beq	1ad38 <_obstack_memory_used@@Base+0x25f8>
   1ad14:	ldr	lr, [sp, #20]
   1ad18:	ldr	r2, [lr, #4]
   1ad1c:	cmp	r2, #0
   1ad20:	bne	1ad60 <_obstack_memory_used@@Base+0x2620>
   1ad24:	ldr	r0, [r0]
   1ad28:	ldr	r1, [ip, #8]
   1ad2c:	stm	lr, {r0, r3}
   1ad30:	str	r1, [lr, #8]
   1ad34:	str	r2, [ip, #4]
   1ad38:	ldr	r0, [sp, #16]
   1ad3c:	bl	1975c <_obstack_memory_used@@Base+0x101c>
   1ad40:	ldr	r2, [sp, #8]
   1ad44:	ldr	r3, [r2, #16]!
   1ad48:	cmp	r3, #0
   1ad4c:	str	r2, [sp, #8]
   1ad50:	bne	1ac34 <_obstack_memory_used@@Base+0x24f4>
   1ad54:	ldr	r0, [sp, #20]
   1ad58:	add	sp, sp, #52	; 0x34
   1ad5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad60:	add	r3, r3, r2
   1ad64:	str	r3, [sp, #36]	; 0x24
   1ad68:	rsb	r0, r3, r3, lsl #3
   1ad6c:	lsl	r0, r0, #2
   1ad70:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1ad74:	ldr	r3, [sp, #20]
   1ad78:	mov	r4, r0
   1ad7c:	str	r0, [sp, #32]
   1ad80:	ldr	r0, [r3, #8]
   1ad84:	bl	11544 <strlen@plt>
   1ad88:	ldr	r3, [sp, #16]
   1ad8c:	mov	r8, r0
   1ad90:	ldr	r0, [r3, #8]
   1ad94:	bl	11544 <strlen@plt>
   1ad98:	add	r0, r8, r0
   1ad9c:	add	r0, r0, #1
   1ada0:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1ada4:	cmp	r4, #0
   1ada8:	cmpne	r0, #0
   1adac:	mov	r7, r0
   1adb0:	beq	1b030 <_obstack_memory_used@@Base+0x28f0>
   1adb4:	ldr	r3, [sp, #36]	; 0x24
   1adb8:	ldr	r2, [pc, #704]	; 1b080 <_obstack_memory_used@@Base+0x2940>
   1adbc:	cmp	r3, r2
   1adc0:	bhi	1b044 <_obstack_memory_used@@Base+0x2904>
   1adc4:	ldr	r5, [sp, #20]
   1adc8:	ldr	r9, [sp, #32]
   1adcc:	ldm	r5, {r3, r4}
   1add0:	mov	r0, r9
   1add4:	rsb	r6, r4, r4, lsl #3
   1add8:	mov	r1, r3
   1addc:	lsl	r6, r6, #2
   1ade0:	mov	r2, r6
   1ade4:	str	r3, [sp, #40]	; 0x28
   1ade8:	bl	11514 <mempcpy@plt>
   1adec:	ldr	r3, [sp, #16]
   1adf0:	ldr	r1, [r3, #4]
   1adf4:	mov	ip, r1
   1adf8:	str	r1, [sp, #4]
   1adfc:	rsb	r2, ip, ip, lsl #3
   1ae00:	ldr	r1, [r3]
   1ae04:	lsl	r2, r2, #2
   1ae08:	bl	1140c <memcpy@plt>
   1ae0c:	ldr	r5, [r5, #8]
   1ae10:	mov	r2, r8
   1ae14:	mov	r1, r5
   1ae18:	mov	r0, r7
   1ae1c:	bl	1140c <memcpy@plt>
   1ae20:	cmp	r4, #0
   1ae24:	beq	1af94 <_obstack_memory_used@@Base+0x2854>
   1ae28:	mov	r2, r9
   1ae2c:	ldr	r3, [r2, #8]
   1ae30:	subs	r4, r4, #1
   1ae34:	sub	r3, r3, r5
   1ae38:	add	r3, r7, r3
   1ae3c:	str	r3, [r2, #8]
   1ae40:	add	r2, r2, #28
   1ae44:	bne	1ae2c <_obstack_memory_used@@Base+0x26ec>
   1ae48:	ldr	r3, [sp, #32]
   1ae4c:	add	r1, r3, r6
   1ae50:	ldr	r3, [sp, #4]
   1ae54:	ldr	r2, [sp, #16]
   1ae58:	cmp	r3, #0
   1ae5c:	add	r3, r7, r8
   1ae60:	str	r3, [sp, #12]
   1ae64:	ldr	sl, [r2, #8]
   1ae68:	beq	1af8c <_obstack_memory_used@@Base+0x284c>
   1ae6c:	sub	r8, r3, #1
   1ae70:	add	fp, r1, #28
   1ae74:	mov	r9, r3
   1ae78:	mov	r3, r8
   1ae7c:	mov	r8, fp
   1ae80:	mov	fp, sl
   1ae84:	mov	sl, r3
   1ae88:	ldr	r5, [r8, #-24]	; 0xffffffe8
   1ae8c:	str	r9, [r8, #-20]	; 0xffffffec
   1ae90:	cmp	r5, #0
   1ae94:	ldr	r4, [r8, #-28]	; 0xffffffe4
   1ae98:	bne	1aeac <_obstack_memory_used@@Base+0x276c>
   1ae9c:	b	1af38 <_obstack_memory_used@@Base+0x27f8>
   1aea0:	subs	r5, r5, #1
   1aea4:	add	r4, r4, #24
   1aea8:	beq	1af38 <_obstack_memory_used@@Base+0x27f8>
   1aeac:	ldr	r3, [r4, #12]
   1aeb0:	tst	r3, #8
   1aeb4:	bne	1aea0 <_obstack_memory_used@@Base+0x2760>
   1aeb8:	ldr	r6, [r4, #4]
   1aebc:	sub	r3, r6, #1
   1aec0:	cmp	r3, #254	; 0xfe
   1aec4:	bhi	1aea0 <_obstack_memory_used@@Base+0x2760>
   1aec8:	bl	11520 <__ctype_b_loc@plt>
   1aecc:	lsl	r3, r6, #1
   1aed0:	ldr	r2, [r0]
   1aed4:	ldrh	r3, [r2, r3]
   1aed8:	tst	r3, #16384	; 0x4000
   1aedc:	beq	1aea0 <_obstack_memory_used@@Base+0x2760>
   1aee0:	ldrb	r1, [fp]
   1aee4:	cmp	r1, r6
   1aee8:	bne	1aea0 <_obstack_memory_used@@Base+0x2760>
   1aeec:	ldr	r3, [sp, #12]
   1aef0:	cmp	r7, r3
   1aef4:	bcs	1af20 <_obstack_memory_used@@Base+0x27e0>
   1aef8:	ldrb	r3, [r7]
   1aefc:	cmp	r3, r1
   1af00:	movne	r3, r7
   1af04:	bne	1af18 <_obstack_memory_used@@Base+0x27d8>
   1af08:	b	1af28 <_obstack_memory_used@@Base+0x27e8>
   1af0c:	ldrb	r2, [r3, #1]!
   1af10:	cmp	r2, r1
   1af14:	beq	1af28 <_obstack_memory_used@@Base+0x27e8>
   1af18:	cmp	sl, r3
   1af1c:	bne	1af0c <_obstack_memory_used@@Base+0x27cc>
   1af20:	strb	r1, [r9]
   1af24:	add	r9, r9, #1
   1af28:	subs	r5, r5, #1
   1af2c:	add	fp, fp, #1
   1af30:	add	r4, r4, #24
   1af34:	bne	1aeac <_obstack_memory_used@@Base+0x276c>
   1af38:	ldr	r3, [sp, #4]
   1af3c:	add	r8, r8, #28
   1af40:	subs	r3, r3, #1
   1af44:	str	r3, [sp, #4]
   1af48:	bne	1ae88 <_obstack_memory_used@@Base+0x2748>
   1af4c:	mov	r3, #0
   1af50:	strb	r3, [r9]
   1af54:	ldr	r0, [sp, #40]	; 0x28
   1af58:	bl	182f0 <argp_parse@@Base+0xe98>
   1af5c:	ldr	r4, [sp, #20]
   1af60:	ldr	r0, [r4, #8]
   1af64:	bl	182f0 <argp_parse@@Base+0xe98>
   1af68:	ldr	r2, [sp, #32]
   1af6c:	str	r2, [r4]
   1af70:	ldr	r2, [sp, #36]	; 0x24
   1af74:	stmib	r4, {r2, r7}
   1af78:	b	1ad38 <_obstack_memory_used@@Base+0x25f8>
   1af7c:	ldr	r1, [sp, #28]
   1af80:	b	1acb8 <_obstack_memory_used@@Base+0x2578>
   1af84:	ldr	r2, [sp, #44]	; 0x2c
   1af88:	b	1acf0 <_obstack_memory_used@@Base+0x25b0>
   1af8c:	ldr	r9, [sp, #12]
   1af90:	b	1af4c <_obstack_memory_used@@Base+0x280c>
   1af94:	ldr	r1, [sp, #32]
   1af98:	b	1ae50 <_obstack_memory_used@@Base+0x2710>
   1af9c:	ldr	r2, [r5, #40]	; 0x28
   1afa0:	cmp	r2, #0
   1afa4:	bne	1abf4 <_obstack_memory_used@@Base+0x24b4>
   1afa8:	ldr	r2, [r5, #44]	; 0x2c
   1afac:	cmp	r2, #0
   1afb0:	bne	1abf4 <_obstack_memory_used@@Base+0x24b4>
   1afb4:	add	r9, r9, #28
   1afb8:	mov	r5, r6
   1afbc:	b	1ab00 <_obstack_memory_used@@Base+0x23c0>
   1afc0:	ldr	r2, [r4, #16]
   1afc4:	cmp	r2, #0
   1afc8:	beq	1afec <_obstack_memory_used@@Base+0x28ac>
   1afcc:	str	r3, [r9, #-24]	; 0xffffffe8
   1afd0:	ldr	r6, [r4, #20]
   1afd4:	str	r4, [r9, #-28]	; 0xffffffe4
   1afd8:	cmp	r6, #0
   1afdc:	str	sl, [r9, #-20]	; 0xffffffec
   1afe0:	bne	1ab40 <_obstack_memory_used@@Base+0x2400>
   1afe4:	add	r6, r5, #1
   1afe8:	b	1ab40 <_obstack_memory_used@@Base+0x2400>
   1afec:	ldr	r6, [r4, #20]
   1aff0:	cmp	r6, #0
   1aff4:	beq	1ac0c <_obstack_memory_used@@Base+0x24cc>
   1aff8:	str	r4, [r9, #-28]	; 0xffffffe4
   1affc:	str	r3, [r9, #-24]	; 0xffffffe8
   1b000:	str	sl, [r9, #-20]	; 0xffffffec
   1b004:	b	1ab40 <_obstack_memory_used@@Base+0x2400>
   1b008:	ldr	r3, [pc, #116]	; 1b084 <_obstack_memory_used@@Base+0x2944>
   1b00c:	mov	r2, #476	; 0x1dc
   1b010:	ldr	r1, [pc, #112]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b014:	ldr	r0, [pc, #112]	; 1b08c <_obstack_memory_used@@Base+0x294c>
   1b018:	bl	116c4 <__assert_fail@plt>
   1b01c:	ldr	r3, [pc, #96]	; 1b084 <_obstack_memory_used@@Base+0x2944>
   1b020:	ldr	r2, [pc, #104]	; 1b090 <_obstack_memory_used@@Base+0x2950>
   1b024:	ldr	r1, [pc, #92]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b028:	ldr	r0, [pc, #100]	; 1b094 <_obstack_memory_used@@Base+0x2954>
   1b02c:	bl	116c4 <__assert_fail@plt>
   1b030:	ldr	r3, [pc, #96]	; 1b098 <_obstack_memory_used@@Base+0x2958>
   1b034:	ldr	r2, [pc, #96]	; 1b09c <_obstack_memory_used@@Base+0x295c>
   1b038:	ldr	r1, [pc, #72]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b03c:	ldr	r0, [pc, #92]	; 1b0a0 <_obstack_memory_used@@Base+0x2960>
   1b040:	bl	116c4 <__assert_fail@plt>
   1b044:	ldr	r3, [pc, #76]	; 1b098 <_obstack_memory_used@@Base+0x2958>
   1b048:	mov	r2, #972	; 0x3cc
   1b04c:	ldr	r1, [pc, #52]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b050:	ldr	r0, [pc, #76]	; 1b0a4 <_obstack_memory_used@@Base+0x2964>
   1b054:	bl	116c4 <__assert_fail@plt>
   1b058:	ldr	r3, [pc, #36]	; 1b084 <_obstack_memory_used@@Base+0x2944>
   1b05c:	ldr	r2, [pc, #68]	; 1b0a8 <_obstack_memory_used@@Base+0x2968>
   1b060:	ldr	r1, [pc, #32]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b064:	ldr	r0, [pc, #64]	; 1b0ac <_obstack_memory_used@@Base+0x296c>
   1b068:	bl	116c4 <__assert_fail@plt>
   1b06c:	ldr	r3, [pc, #16]	; 1b084 <_obstack_memory_used@@Base+0x2944>
   1b070:	mov	r2, #460	; 0x1cc
   1b074:	ldr	r1, [pc, #12]	; 1b088 <_obstack_memory_used@@Base+0x2948>
   1b078:	ldr	r0, [pc, #48]	; 1b0b0 <_obstack_memory_used@@Base+0x2970>
   1b07c:	bl	116c4 <__assert_fail@plt>
   1b080:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1b084:	andeq	r1, r2, r0, lsr r1
   1b088:	strdeq	r1, [r2], -r4
   1b08c:	andeq	r1, r2, r8, lsr r2
   1b090:	ldrdeq	r0, [r0], -sl
   1b094:	andeq	r1, r2, r4, lsl r2
   1b098:	andeq	r1, r2, ip, lsr r1
   1b09c:	andeq	r0, r0, sl, asr #7
   1b0a0:	andeq	r1, r2, r4, ror r2
   1b0a4:	muleq	r2, r0, r2
   1b0a8:	andeq	r0, r0, r2, asr #3
   1b0ac:	andeq	r1, r2, r0, lsl #4
   1b0b0:	andeq	r1, r2, r4, lsl #4
   1b0b4:	cmp	r1, #0
   1b0b8:	push	{r4, r5, r6, r7, r8, lr}
   1b0bc:	beq	1b134 <_obstack_memory_used@@Base+0x29f4>
   1b0c0:	sub	r7, r1, #1
   1b0c4:	mov	r8, r2
   1b0c8:	mov	r6, r0
   1b0cc:	ldm	r6, {r4, r5}
   1b0d0:	cmp	r5, #0
   1b0d4:	sub	r5, r5, #1
   1b0d8:	beq	1b118 <_obstack_memory_used@@Base+0x29d8>
   1b0dc:	add	r4, r4, #24
   1b0e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1b0e4:	mov	r1, r8
   1b0e8:	subs	r0, r3, #0
   1b0ec:	sub	r5, r5, #1
   1b0f0:	beq	1b10c <_obstack_memory_used@@Base+0x29cc>
   1b0f4:	ldr	r3, [r4, #-12]
   1b0f8:	tst	r3, #2
   1b0fc:	bne	1b10c <_obstack_memory_used@@Base+0x29cc>
   1b100:	bl	113a0 <strcmp@plt>
   1b104:	cmp	r0, #0
   1b108:	beq	1b12c <_obstack_memory_used@@Base+0x29ec>
   1b10c:	cmn	r5, #1
   1b110:	add	r4, r4, #24
   1b114:	bne	1b0e0 <_obstack_memory_used@@Base+0x29a0>
   1b118:	sub	r7, r7, #1
   1b11c:	cmn	r7, #1
   1b120:	add	r6, r6, #28
   1b124:	bne	1b0cc <_obstack_memory_used@@Base+0x298c>
   1b128:	mov	r6, #0
   1b12c:	mov	r0, r6
   1b130:	pop	{r4, r5, r6, r7, r8, pc}
   1b134:	mov	r6, r1
   1b138:	b	1b12c <_obstack_memory_used@@Base+0x29ec>
   1b13c:	push	{r4, r5, r6, lr}
   1b140:	subs	r4, r0, #0
   1b144:	mov	r5, r1
   1b148:	beq	1b15c <_obstack_memory_used@@Base+0x2a1c>
   1b14c:	mov	r1, #10
   1b150:	bl	11550 <strchr@plt>
   1b154:	adds	r4, r0, #0
   1b158:	movne	r4, #1
   1b15c:	cmp	r5, #0
   1b160:	beq	1b18c <_obstack_memory_used@@Base+0x2a4c>
   1b164:	ldr	r3, [r5]
   1b168:	cmp	r3, #0
   1b16c:	beq	1b18c <_obstack_memory_used@@Base+0x2a4c>
   1b170:	ldr	r1, [r3, #16]
   1b174:	ldr	r0, [r3, #8]
   1b178:	bl	1b13c <_obstack_memory_used@@Base+0x29fc>
   1b17c:	ldr	r3, [r5, #16]!
   1b180:	cmp	r3, #0
   1b184:	add	r4, r4, r0
   1b188:	bne	1b170 <_obstack_memory_used@@Base+0x2a30>
   1b18c:	mov	r0, r4
   1b190:	pop	{r4, r5, r6, pc}
   1b194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b198:	add	fp, sp, #32
   1b19c:	sub	sp, sp, #12
   1b1a0:	ldr	r5, [r0, #4]
   1b1a4:	cmp	r5, #0
   1b1a8:	bne	1b1b4 <_obstack_memory_used@@Base+0x2a74>
   1b1ac:	sub	sp, fp, #32
   1b1b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1b4:	mov	r6, r0
   1b1b8:	ldr	r0, [r0, #8]
   1b1bc:	mov	r9, r1
   1b1c0:	bl	11544 <strlen@plt>
   1b1c4:	ldr	r8, [pc, #360]	; 1b334 <_obstack_memory_used@@Base+0x2bf4>
   1b1c8:	ldr	r4, [r6]
   1b1cc:	sub	r7, fp, #36	; 0x24
   1b1d0:	add	r3, r0, #15
   1b1d4:	bic	r3, r3, #7
   1b1d8:	sub	sp, sp, r3
   1b1dc:	mov	sl, sp
   1b1e0:	str	sp, [r7, #-4]!
   1b1e4:	ldr	r2, [r4, #20]
   1b1e8:	mov	r0, r4
   1b1ec:	mov	r3, r7
   1b1f0:	mov	r1, r8
   1b1f4:	ldr	r2, [r2, #24]
   1b1f8:	bl	195a8 <_obstack_memory_used@@Base+0xe68>
   1b1fc:	subs	r5, r5, #1
   1b200:	add	r4, r4, #28
   1b204:	bne	1b1e4 <_obstack_memory_used@@Base+0x2aa4>
   1b208:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b20c:	cmp	sl, r3
   1b210:	bcc	1b314 <_obstack_memory_used@@Base+0x2bd4>
   1b214:	ldm	r6, {r4, r5}
   1b218:	cmp	r5, #0
   1b21c:	beq	1b1ac <_obstack_memory_used@@Base+0x2a6c>
   1b220:	ldr	r7, [pc, #272]	; 1b338 <_obstack_memory_used@@Base+0x2bf8>
   1b224:	ldr	r2, [r4, #20]
   1b228:	mov	r0, r4
   1b22c:	mov	r3, r9
   1b230:	mov	r1, r7
   1b234:	ldr	r2, [r2, #24]
   1b238:	bl	195a8 <_obstack_memory_used@@Base+0xe68>
   1b23c:	subs	r5, r5, #1
   1b240:	add	r4, r4, #28
   1b244:	bne	1b224 <_obstack_memory_used@@Base+0x2ae4>
   1b248:	ldm	r6, {r7, r8}
   1b24c:	cmp	r8, #0
   1b250:	beq	1b1ac <_obstack_memory_used@@Base+0x2a6c>
   1b254:	ldr	sl, [pc, #224]	; 1b33c <_obstack_memory_used@@Base+0x2bfc>
   1b258:	add	r7, r7, #28
   1b25c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1b260:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1b264:	cmp	r5, #0
   1b268:	movne	r6, r4
   1b26c:	bne	1b280 <_obstack_memory_used@@Base+0x2b40>
   1b270:	b	1b2dc <_obstack_memory_used@@Base+0x2b9c>
   1b274:	subs	r5, r5, #1
   1b278:	add	r4, r4, #24
   1b27c:	beq	1b2dc <_obstack_memory_used@@Base+0x2b9c>
   1b280:	ldr	r2, [r4]
   1b284:	cmp	r2, #0
   1b288:	beq	1b274 <_obstack_memory_used@@Base+0x2b34>
   1b28c:	ldr	r1, [r4, #12]
   1b290:	tst	r1, #4
   1b294:	moveq	r6, r4
   1b298:	tst	r1, #2
   1b29c:	bne	1b274 <_obstack_memory_used@@Base+0x2b34>
   1b2a0:	ldr	r3, [r4, #8]
   1b2a4:	ldr	r0, [r6, #12]
   1b2a8:	cmp	r3, #0
   1b2ac:	orr	r1, r1, r0
   1b2b0:	beq	1b2f0 <_obstack_memory_used@@Base+0x2bb0>
   1b2b4:	tst	r1, #16
   1b2b8:	bne	1b274 <_obstack_memory_used@@Base+0x2b34>
   1b2bc:	tst	r1, #1
   1b2c0:	moveq	r1, sl
   1b2c4:	ldrne	r1, [pc, #116]	; 1b340 <_obstack_memory_used@@Base+0x2c00>
   1b2c8:	mov	r0, r9
   1b2cc:	bl	1dc54 <argp_error@@Base+0x14b0>
   1b2d0:	subs	r5, r5, #1
   1b2d4:	add	r4, r4, #24
   1b2d8:	bne	1b280 <_obstack_memory_used@@Base+0x2b40>
   1b2dc:	subs	r8, r8, #1
   1b2e0:	add	r7, r7, #28
   1b2e4:	bne	1b25c <_obstack_memory_used@@Base+0x2b1c>
   1b2e8:	sub	sp, fp, #32
   1b2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2f0:	tst	r1, #16
   1b2f4:	bne	1b274 <_obstack_memory_used@@Base+0x2b34>
   1b2f8:	ldr	r3, [r6, #8]
   1b2fc:	cmp	r3, #0
   1b300:	bne	1b2bc <_obstack_memory_used@@Base+0x2b7c>
   1b304:	ldr	r1, [pc, #56]	; 1b344 <_obstack_memory_used@@Base+0x2c04>
   1b308:	mov	r0, r9
   1b30c:	bl	1dc54 <argp_error@@Base+0x14b0>
   1b310:	b	1b274 <_obstack_memory_used@@Base+0x2b34>
   1b314:	add	r1, r3, #1
   1b318:	str	r1, [fp, #-40]	; 0xffffffd8
   1b31c:	mov	r2, sl
   1b320:	ldr	r1, [pc, #32]	; 1b348 <_obstack_memory_used@@Base+0x2c08>
   1b324:	strb	r5, [r3]
   1b328:	mov	r0, r9
   1b32c:	bl	1dc54 <argp_error@@Base+0x14b0>
   1b330:	b	1b214 <_obstack_memory_used@@Base+0x2ad4>
   1b334:	andeq	sl, r1, ip, ror r9
   1b338:	ldrdeq	sl, [r1], -r8
   1b33c:	ldrdeq	r1, [r2], -ip
   1b340:	andeq	r1, r2, ip, asr #5
   1b344:	andeq	r1, r2, r8, ror #5
   1b348:	andeq	r1, r2, r4, asr #5

0001b34c <argp_failure@@Base>:
   1b34c:	push	{r3}		; (str r3, [sp, #-4]!)
   1b350:	push	{r4, r5, r6, r7, lr}
   1b354:	subs	r5, r0, #0
   1b358:	sub	sp, sp, #200	; 0xc8
   1b35c:	mov	r7, r1
   1b360:	mov	r6, r2
   1b364:	beq	1b4b4 <argp_failure@@Base+0x168>
   1b368:	ldr	r3, [r5, #16]
   1b36c:	tst	r3, #2
   1b370:	bne	1b4a4 <argp_failure@@Base+0x158>
   1b374:	ldr	r4, [r5, #44]	; 0x2c
   1b378:	cmp	r4, #0
   1b37c:	beq	1b4a4 <argp_failure@@Base+0x158>
   1b380:	mov	r0, r4
   1b384:	bl	11634 <flockfile@plt>
   1b388:	ldr	r0, [r5, #40]	; 0x28
   1b38c:	mov	r1, r4
   1b390:	bl	11358 <fputs_unlocked@plt>
   1b394:	ldr	r3, [sp, #220]	; 0xdc
   1b398:	cmp	r3, #0
   1b39c:	beq	1b3f8 <argp_failure@@Base+0xac>
   1b3a0:	ldr	r3, [r4, #20]
   1b3a4:	ldr	r1, [r4, #24]
   1b3a8:	add	r2, sp, #224	; 0xe0
   1b3ac:	cmp	r3, r1
   1b3b0:	str	r2, [sp]
   1b3b4:	addcc	r1, r3, #1
   1b3b8:	movcc	r2, #58	; 0x3a
   1b3bc:	strcc	r1, [r4, #20]
   1b3c0:	strbcc	r2, [r3]
   1b3c4:	bcs	1b500 <argp_failure@@Base+0x1b4>
   1b3c8:	ldr	r3, [r4, #20]
   1b3cc:	ldr	r2, [r4, #24]
   1b3d0:	cmp	r3, r2
   1b3d4:	addcc	r1, r3, #1
   1b3d8:	movcc	r2, #32
   1b3dc:	strcc	r1, [r4, #20]
   1b3e0:	strbcc	r2, [r3]
   1b3e4:	bcs	1b4f0 <argp_failure@@Base+0x1a4>
   1b3e8:	ldr	r2, [sp]
   1b3ec:	ldr	r1, [sp, #220]	; 0xdc
   1b3f0:	mov	r0, r4
   1b3f4:	bl	11604 <vfprintf@plt>
   1b3f8:	cmp	r6, #0
   1b3fc:	beq	1b460 <argp_failure@@Base+0x114>
   1b400:	ldr	r3, [r4, #20]
   1b404:	ldr	r2, [r4, #24]
   1b408:	cmp	r3, r2
   1b40c:	addcc	r1, r3, #1
   1b410:	movcc	r2, #58	; 0x3a
   1b414:	strcc	r1, [r4, #20]
   1b418:	strbcc	r2, [r3]
   1b41c:	bcs	1b520 <argp_failure@@Base+0x1d4>
   1b420:	ldr	r3, [r4, #20]
   1b424:	ldr	r2, [r4, #24]
   1b428:	cmp	r3, r2
   1b42c:	addcc	r1, r3, #1
   1b430:	movcc	r2, #32
   1b434:	strcc	r1, [r4, #20]
   1b438:	strbcc	r2, [r3]
   1b43c:	bcs	1b510 <argp_failure@@Base+0x1c4>
   1b440:	mov	r2, #200	; 0xc8
   1b444:	mov	r1, sp
   1b448:	mov	r0, r6
   1b44c:	bl	11580 <strerror_r@plt>
   1b450:	cmp	r0, #0
   1b454:	beq	1b530 <argp_failure@@Base+0x1e4>
   1b458:	mov	r1, r4
   1b45c:	bl	11358 <fputs_unlocked@plt>
   1b460:	ldr	r3, [r4, #20]
   1b464:	ldr	r2, [r4, #24]
   1b468:	cmp	r3, r2
   1b46c:	addcc	r1, r3, #1
   1b470:	movcc	r2, #10
   1b474:	strcc	r1, [r4, #20]
   1b478:	strbcc	r2, [r3]
   1b47c:	bcs	1b4d8 <argp_failure@@Base+0x18c>
   1b480:	mov	r0, r4
   1b484:	bl	11460 <funlockfile@plt>
   1b488:	cmp	r7, #0
   1b48c:	beq	1b4a4 <argp_failure@@Base+0x158>
   1b490:	cmp	r5, #0
   1b494:	beq	1b4e8 <argp_failure@@Base+0x19c>
   1b498:	ldr	r3, [r5, #16]
   1b49c:	tst	r3, #32
   1b4a0:	beq	1b4e8 <argp_failure@@Base+0x19c>
   1b4a4:	add	sp, sp, #200	; 0xc8
   1b4a8:	pop	{r4, r5, r6, r7, lr}
   1b4ac:	add	sp, sp, #4
   1b4b0:	bx	lr
   1b4b4:	ldr	r3, [pc, #140]	; 1b548 <argp_failure@@Base+0x1fc>
   1b4b8:	ldr	r4, [r3]
   1b4bc:	cmp	r4, #0
   1b4c0:	beq	1b4a4 <argp_failure@@Base+0x158>
   1b4c4:	mov	r0, r4
   1b4c8:	bl	11634 <flockfile@plt>
   1b4cc:	ldr	r3, [pc, #120]	; 1b54c <argp_failure@@Base+0x200>
   1b4d0:	ldr	r0, [r3]
   1b4d4:	b	1b38c <argp_failure@@Base+0x40>
   1b4d8:	mov	r1, #10
   1b4dc:	mov	r0, r4
   1b4e0:	bl	115e0 <__overflow@plt>
   1b4e4:	b	1b480 <argp_failure@@Base+0x134>
   1b4e8:	mov	r0, r7
   1b4ec:	bl	1152c <exit@plt>
   1b4f0:	mov	r1, #32
   1b4f4:	mov	r0, r4
   1b4f8:	bl	115e0 <__overflow@plt>
   1b4fc:	b	1b3e8 <argp_failure@@Base+0x9c>
   1b500:	mov	r1, #58	; 0x3a
   1b504:	mov	r0, r4
   1b508:	bl	115e0 <__overflow@plt>
   1b50c:	b	1b3c8 <argp_failure@@Base+0x7c>
   1b510:	mov	r1, #32
   1b514:	mov	r0, r4
   1b518:	bl	115e0 <__overflow@plt>
   1b51c:	b	1b440 <argp_failure@@Base+0xf4>
   1b520:	mov	r1, #58	; 0x3a
   1b524:	mov	r0, r4
   1b528:	bl	115e0 <__overflow@plt>
   1b52c:	b	1b420 <argp_failure@@Base+0xd4>
   1b530:	mov	r0, r6
   1b534:	bl	114e4 <strerror@plt>
   1b538:	ldr	r3, [pc, #16]	; 1b550 <argp_failure@@Base+0x204>
   1b53c:	cmp	r0, #0
   1b540:	moveq	r0, r3
   1b544:	b	1b458 <argp_failure@@Base+0x10c>
   1b548:	andeq	r2, r3, r8, asr #22
   1b54c:	andeq	r2, r3, r0, asr #22
   1b550:	strdeq	r1, [r2], -r0
   1b554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b558:	add	fp, sp, #32
   1b55c:	cmp	r2, #0
   1b560:	sub	sp, sp, #116	; 0x74
   1b564:	str	r2, [fp, #-132]	; 0xffffff7c
   1b568:	str	r0, [fp, #-112]	; 0xffffff90
   1b56c:	str	r1, [fp, #-104]	; 0xffffff98
   1b570:	str	r3, [fp, #-96]	; 0xffffffa0
   1b574:	beq	1b62c <argp_failure@@Base+0x2e0>
   1b578:	ldr	sl, [pc, #4064]	; 1c560 <argp_failure@@Base+0x1214>
   1b57c:	mov	r0, r2
   1b580:	bl	11634 <flockfile@plt>
   1b584:	ldr	r3, [sl, #36]	; 0x24
   1b588:	cmp	r3, #0
   1b58c:	str	r3, [fp, #-108]	; 0xffffff94
   1b590:	beq	1badc <argp_failure@@Base+0x790>
   1b594:	mov	r3, #0
   1b598:	mov	r1, r3
   1b59c:	ldr	r2, [sl, #32]
   1b5a0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b5a4:	bl	1d528 <argp_error@@Base+0xd84>
   1b5a8:	subs	r9, r0, #0
   1b5ac:	beq	1c620 <argp_failure@@Base+0x12d4>
   1b5b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5b4:	ands	r3, r3, #11
   1b5b8:	streq	r3, [fp, #-136]	; 0xffffff78
   1b5bc:	bne	1bf38 <argp_failure@@Base+0xbec>
   1b5c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5c4:	ands	r4, r3, #3
   1b5c8:	bne	1bd2c <argp_failure@@Base+0x9e0>
   1b5cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5d0:	tst	r3, #16
   1b5d4:	bne	1bd08 <argp_failure@@Base+0x9bc>
   1b5d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5dc:	tst	r3, #4
   1b5e0:	bne	1bcec <argp_failure@@Base+0x9a0>
   1b5e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5e8:	tst	r3, #8
   1b5ec:	bne	1b680 <argp_failure@@Base+0x334>
   1b5f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b5f4:	tst	r3, #32
   1b5f8:	bne	1bab4 <argp_failure@@Base+0x768>
   1b5fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b600:	tst	r3, #64	; 0x40
   1b604:	bne	1b634 <argp_failure@@Base+0x2e8>
   1b608:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b60c:	bl	11460 <funlockfile@plt>
   1b610:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b614:	cmp	r3, #0
   1b618:	beq	1b624 <argp_failure@@Base+0x2d8>
   1b61c:	mov	r0, r3
   1b620:	bl	1975c <_obstack_memory_used@@Base+0x101c>
   1b624:	mov	r0, r9
   1b628:	bl	1db14 <argp_error@@Base+0x1370>
   1b62c:	sub	sp, fp, #32
   1b630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b634:	ldr	r5, [pc, #3880]	; 1c564 <argp_failure@@Base+0x1218>
   1b638:	ldr	r2, [r5]
   1b63c:	cmp	r2, #0
   1b640:	beq	1b608 <argp_failure@@Base+0x2bc>
   1b644:	cmp	r4, #0
   1b648:	beq	1b670 <argp_failure@@Base+0x324>
   1b64c:	ldr	r3, [r9, #28]
   1b650:	ldr	r2, [r9, #32]
   1b654:	cmp	r3, r2
   1b658:	bcs	1c604 <argp_failure@@Base+0x12b8>
   1b65c:	add	r1, r3, #1
   1b660:	mov	r2, #10
   1b664:	str	r1, [r9, #28]
   1b668:	strb	r2, [r3]
   1b66c:	ldr	r2, [r5]
   1b670:	ldr	r1, [pc, #3824]	; 1c568 <argp_failure@@Base+0x121c>
   1b674:	mov	r0, r9
   1b678:	bl	1dc54 <argp_error@@Base+0x14b0>
   1b67c:	b	1b608 <argp_failure@@Base+0x2bc>
   1b680:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b684:	ldr	r3, [r3, #4]
   1b688:	cmp	r3, #0
   1b68c:	str	r3, [fp, #-108]	; 0xffffff94
   1b690:	beq	1b5f0 <argp_failure@@Base+0x2a4>
   1b694:	cmp	r4, #0
   1b698:	beq	1c4b4 <argp_failure@@Base+0x1168>
   1b69c:	ldr	r3, [r9, #28]
   1b6a0:	ldr	r2, [r9, #32]
   1b6a4:	cmp	r3, r2
   1b6a8:	bcs	1c658 <argp_failure@@Base+0x130c>
   1b6ac:	add	r1, r3, #1
   1b6b0:	mov	r2, #10
   1b6b4:	str	r1, [r9, #28]
   1b6b8:	strb	r2, [r3]
   1b6bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b6c0:	ldr	r2, [fp, #-136]	; 0xffffff78
   1b6c4:	ldr	r3, [r3, #4]
   1b6c8:	ldr	r8, [r2]
   1b6cc:	str	r3, [fp, #-108]	; 0xffffff94
   1b6d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b6d4:	cmp	r3, #0
   1b6d8:	mov	r3, #0
   1b6dc:	str	r3, [fp, #-88]	; 0xffffffa8
   1b6e0:	str	r3, [fp, #-84]	; 0xffffffac
   1b6e4:	str	r3, [fp, #-80]	; 0xffffffb0
   1b6e8:	beq	1baa4 <argp_failure@@Base+0x758>
   1b6ec:	str	sl, [fp, #-100]	; 0xffffff9c
   1b6f0:	ldr	lr, [r9, #28]
   1b6f4:	ldr	r3, [r9, #24]
   1b6f8:	ldr	r5, [r9, #16]
   1b6fc:	sub	lr, lr, r3
   1b700:	cmp	lr, r5
   1b704:	ldr	r6, [r8]
   1b708:	ldr	sl, [r8, #8]
   1b70c:	bhi	1c20c <argp_failure@@Base+0xec0>
   1b710:	ldr	r1, [r9, #4]
   1b714:	ldr	r7, [r6, #12]
   1b718:	str	r1, [fp, #-116]	; 0xffffff8c
   1b71c:	ldr	r1, [r9, #12]
   1b720:	mov	r3, #0
   1b724:	str	r1, [fp, #-120]	; 0xffffff88
   1b728:	sub	r1, fp, #88	; 0x58
   1b72c:	str	r3, [r9, #4]
   1b730:	and	r2, r7, #8
   1b734:	str	r1, [fp, #-68]	; 0xffffffbc
   1b738:	ldr	r1, [fp, #-104]	; 0xffffff98
   1b73c:	mov	r0, #1
   1b740:	cmp	r2, r3
   1b744:	mov	r4, r2
   1b748:	str	r0, [fp, #-64]	; 0xffffffc0
   1b74c:	str	r8, [fp, #-76]	; 0xffffffb4
   1b750:	str	r9, [fp, #-72]	; 0xffffffb8
   1b754:	str	r1, [fp, #-60]	; 0xffffffc4
   1b758:	bne	1c098 <argp_failure@@Base+0xd4c>
   1b75c:	ldr	ip, [r8, #4]
   1b760:	cmp	ip, r3
   1b764:	beq	1b790 <argp_failure@@Base+0x444>
   1b768:	add	r0, r6, #24
   1b76c:	ldr	r3, [r0, #-24]	; 0xffffffe8
   1b770:	cmp	r3, #0
   1b774:	beq	1b784 <argp_failure@@Base+0x438>
   1b778:	ldr	r3, [r0, #-12]
   1b77c:	tst	r3, #2
   1b780:	beq	1c094 <argp_failure@@Base+0xd48>
   1b784:	subs	ip, ip, #1
   1b788:	add	r0, r0, #24
   1b78c:	bne	1b76c <argp_failure@@Base+0x420>
   1b790:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b794:	cmp	lr, r5
   1b798:	str	r2, [fp, #-128]	; 0xffffff80
   1b79c:	ldr	r5, [r3, #8]
   1b7a0:	bhi	1c0ac <argp_failure@@Base+0xd60>
   1b7a4:	str	r5, [r9, #12]
   1b7a8:	ldr	r5, [r8, #4]
   1b7ac:	cmp	r5, #0
   1b7b0:	beq	1b834 <argp_failure@@Base+0x4e8>
   1b7b4:	mov	r4, r6
   1b7b8:	str	r8, [fp, #-124]	; 0xffffff84
   1b7bc:	b	1b7d4 <argp_failure@@Base+0x488>
   1b7c0:	subs	r5, r5, #1
   1b7c4:	add	r4, r4, #24
   1b7c8:	beq	1b828 <argp_failure@@Base+0x4dc>
   1b7cc:	ldr	r7, [r4, #12]
   1b7d0:	and	r2, r7, #8
   1b7d4:	cmp	r2, #0
   1b7d8:	bne	1b7c0 <argp_failure@@Base+0x474>
   1b7dc:	ldr	r8, [r4, #4]
   1b7e0:	sub	r2, r8, #1
   1b7e4:	cmp	r2, #254	; 0xfe
   1b7e8:	bhi	1b7c0 <argp_failure@@Base+0x474>
   1b7ec:	bl	11520 <__ctype_b_loc@plt>
   1b7f0:	lsl	r2, r8, #1
   1b7f4:	ldr	r1, [r0]
   1b7f8:	ldrh	r2, [r1, r2]
   1b7fc:	tst	r2, #16384	; 0x4000
   1b800:	beq	1b7c0 <argp_failure@@Base+0x474>
   1b804:	ldrb	r2, [sl]
   1b808:	cmp	r8, r2
   1b80c:	bne	1b7c0 <argp_failure@@Base+0x474>
   1b810:	tst	r7, #2
   1b814:	beq	1c158 <argp_failure@@Base+0xe0c>
   1b818:	subs	r5, r5, #1
   1b81c:	add	sl, sl, #1
   1b820:	add	r4, r4, #24
   1b824:	bne	1b7cc <argp_failure@@Base+0x480>
   1b828:	ldr	r4, [r6, #12]
   1b82c:	ldr	r8, [fp, #-124]	; 0xffffff84
   1b830:	and	r4, r4, #8
   1b834:	ldr	r3, [r9, #28]
   1b838:	ldr	r1, [r9, #24]
   1b83c:	cmp	r4, #0
   1b840:	ldr	r2, [r9, #16]
   1b844:	sub	r3, r3, r1
   1b848:	beq	1c0c4 <argp_failure@@Base+0xd78>
   1b84c:	cmp	r3, r2
   1b850:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b854:	ldr	r4, [r3, #16]
   1b858:	bhi	1c38c <argp_failure@@Base+0x1040>
   1b85c:	str	r4, [r9, #12]
   1b860:	ldr	r5, [r8, #4]
   1b864:	cmp	r5, #0
   1b868:	addne	r4, r6, #24
   1b86c:	bne	1b880 <argp_failure@@Base+0x534>
   1b870:	b	1b910 <argp_failure@@Base+0x5c4>
   1b874:	subs	r5, r5, #1
   1b878:	add	r4, r4, #24
   1b87c:	beq	1b910 <argp_failure@@Base+0x5c4>
   1b880:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1b884:	cmp	r3, #0
   1b888:	beq	1b874 <argp_failure@@Base+0x528>
   1b88c:	ldr	r3, [r4, #-12]
   1b890:	tst	r3, #2
   1b894:	bne	1b874 <argp_failure@@Base+0x528>
   1b898:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b89c:	sub	r1, fp, #76	; 0x4c
   1b8a0:	ldr	r0, [r3, #16]
   1b8a4:	bl	19a8c <_obstack_memory_used@@Base+0x134c>
   1b8a8:	ldr	sl, [r4, #-24]	; 0xffffffe8
   1b8ac:	mov	r0, sl
   1b8b0:	bl	11544 <strlen@plt>
   1b8b4:	subs	r7, r0, #0
   1b8b8:	beq	1b874 <argp_failure@@Base+0x528>
   1b8bc:	ldr	r2, [r9, #28]
   1b8c0:	ldr	lr, [r9, #32]
   1b8c4:	add	ip, r2, r7
   1b8c8:	cmp	lr, ip
   1b8cc:	mov	r1, r7
   1b8d0:	mov	r0, r9
   1b8d4:	bcs	1b8e8 <argp_failure@@Base+0x59c>
   1b8d8:	bl	1dc34 <argp_error@@Base+0x1490>
   1b8dc:	cmp	r0, #0
   1b8e0:	beq	1b874 <argp_failure@@Base+0x528>
   1b8e4:	ldr	r2, [r9, #28]
   1b8e8:	mov	r0, r2
   1b8ec:	mov	r1, sl
   1b8f0:	mov	r2, r7
   1b8f4:	bl	1140c <memcpy@plt>
   1b8f8:	ldr	r2, [r9, #28]
   1b8fc:	subs	r5, r5, #1
   1b900:	add	r3, r2, r7
   1b904:	str	r3, [r9, #28]
   1b908:	add	r4, r4, #24
   1b90c:	bne	1b880 <argp_failure@@Base+0x534>
   1b910:	ldr	r3, [r9, #28]
   1b914:	ldr	r1, [r9, #24]
   1b918:	ldr	r2, [r9, #16]
   1b91c:	sub	r3, r3, r1
   1b920:	cmp	r3, r2
   1b924:	bhi	1c340 <argp_failure@@Base+0xff4>
   1b928:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b92c:	mov	r3, #0
   1b930:	cmp	r2, r3
   1b934:	str	r3, [r9, #4]
   1b938:	beq	1c228 <argp_failure@@Base+0xedc>
   1b93c:	ldr	r3, [r6, #12]
   1b940:	tst	r3, #8
   1b944:	bne	1b970 <argp_failure@@Base+0x624>
   1b948:	ldr	r4, [r6, #4]
   1b94c:	sub	r3, r4, #1
   1b950:	cmp	r3, #254	; 0xfe
   1b954:	bhi	1b970 <argp_failure@@Base+0x624>
   1b958:	bl	11520 <__ctype_b_loc@plt>
   1b95c:	lsl	r4, r4, #1
   1b960:	ldr	r3, [r0]
   1b964:	ldrh	r3, [r3, r4]
   1b968:	tst	r3, #16384	; 0x4000
   1b96c:	bne	1b97c <argp_failure@@Base+0x630>
   1b970:	ldr	r3, [r6]
   1b974:	cmp	r3, #0
   1b978:	beq	1c5f0 <argp_failure@@Base+0x12a4>
   1b97c:	ldr	r3, [r9, #28]
   1b980:	ldr	r1, [r9, #24]
   1b984:	ldr	r2, [r9, #16]
   1b988:	sub	r3, r3, r1
   1b98c:	cmp	r3, r2
   1b990:	bhi	1c1d8 <argp_failure@@Base+0xe8c>
   1b994:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1b998:	str	r3, [r9, #4]
   1b99c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1b9a0:	add	r8, r8, #28
   1b9a4:	subs	r3, r3, #1
   1b9a8:	str	r3, [fp, #-108]	; 0xffffff94
   1b9ac:	ldr	r3, [fp, #-120]	; 0xffffff88
   1b9b0:	str	r3, [r9, #12]
   1b9b4:	bne	1b6f0 <argp_failure@@Base+0x3a4>
   1b9b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b9bc:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1b9c0:	cmp	r3, #0
   1b9c4:	beq	1baa4 <argp_failure@@Base+0x758>
   1b9c8:	ldr	r3, [sl, #4]
   1b9cc:	cmp	r3, #0
   1b9d0:	beq	1baa4 <argp_failure@@Base+0x758>
   1b9d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b9d8:	ldr	r1, [pc, #2956]	; 1c56c <argp_failure@@Base+0x1220>
   1b9dc:	cmp	r3, #0
   1b9e0:	ldr	r0, [pc, #2952]	; 1c570 <argp_failure@@Base+0x1224>
   1b9e4:	ldrne	r2, [r3]
   1b9e8:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1b9ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b9f0:	bl	1983c <_obstack_memory_used@@Base+0x10fc>
   1b9f4:	subs	r4, r0, #0
   1b9f8:	beq	1baa4 <argp_failure@@Base+0x758>
   1b9fc:	ldrb	r3, [r4]
   1ba00:	cmp	r3, #0
   1ba04:	beq	1ba98 <argp_failure@@Base+0x74c>
   1ba08:	ldr	r3, [r9, #28]
   1ba0c:	ldr	r2, [r9, #32]
   1ba10:	cmp	r3, r2
   1ba14:	bcs	1c6b4 <argp_failure@@Base+0x1368>
   1ba18:	add	r1, r3, #1
   1ba1c:	mov	r2, #10
   1ba20:	str	r1, [r9, #28]
   1ba24:	strb	r2, [r3]
   1ba28:	mov	r0, r4
   1ba2c:	bl	11544 <strlen@plt>
   1ba30:	subs	r5, r0, #0
   1ba34:	beq	1c690 <argp_failure@@Base+0x1344>
   1ba38:	ldr	r0, [r9, #28]
   1ba3c:	ldr	r2, [r9, #32]
   1ba40:	add	r3, r0, r5
   1ba44:	cmp	r2, r3
   1ba48:	bcs	1ba64 <argp_failure@@Base+0x718>
   1ba4c:	mov	r1, r5
   1ba50:	mov	r0, r9
   1ba54:	bl	1dc34 <argp_error@@Base+0x1490>
   1ba58:	cmp	r0, #0
   1ba5c:	beq	1c690 <argp_failure@@Base+0x1344>
   1ba60:	ldr	r0, [r9, #28]
   1ba64:	mov	r2, r5
   1ba68:	mov	r1, r4
   1ba6c:	bl	1140c <memcpy@plt>
   1ba70:	ldr	r3, [r9, #28]
   1ba74:	add	r3, r3, r5
   1ba78:	str	r3, [r9, #28]
   1ba7c:	ldr	r2, [r9, #32]
   1ba80:	cmp	r2, r3
   1ba84:	bls	1c698 <argp_failure@@Base+0x134c>
   1ba88:	add	r1, r3, #1
   1ba8c:	mov	r2, #10
   1ba90:	str	r1, [r9, #28]
   1ba94:	strb	r2, [r3]
   1ba98:	ldr	r3, [pc, #2768]	; 1c570 <argp_failure@@Base+0x1224>
   1ba9c:	cmp	r4, r3
   1baa0:	bne	1c5e4 <argp_failure@@Base+0x1298>
   1baa4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1baa8:	mov	r4, #1
   1baac:	tst	r3, #32
   1bab0:	beq	1b5fc <argp_failure@@Base+0x2b0>
   1bab4:	mov	r3, #0
   1bab8:	str	r3, [sp]
   1babc:	str	r9, [sp, #4]
   1bac0:	mov	r3, r4
   1bac4:	ldr	r1, [fp, #-104]	; 0xffffff98
   1bac8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1bacc:	mov	r2, #1
   1bad0:	bl	19c38 <_obstack_memory_used@@Base+0x14f8>
   1bad4:	orr	r4, r4, r0
   1bad8:	b	1b5fc <argp_failure@@Base+0x2b0>
   1badc:	ldr	r0, [pc, #2704]	; 1c574 <argp_failure@@Base+0x1228>
   1bae0:	bl	114b4 <getenv@plt>
   1bae4:	mov	lr, sl
   1bae8:	sub	r3, fp, #76	; 0x4c
   1baec:	mov	ip, r3
   1baf0:	str	r3, [fp, #-100]	; 0xffffff9c
   1baf4:	mov	r6, r0
   1baf8:	ldm	lr!, {r0, r1, r2, r3}
   1bafc:	cmp	r6, #0
   1bb00:	stmia	ip!, {r0, r1, r2, r3}
   1bb04:	ldm	lr!, {r0, r1, r2, r3}
   1bb08:	stmia	ip!, {r0, r1, r2, r3}
   1bb0c:	ldm	lr, {r0, r1}
   1bb10:	stm	ip, {r0, r1}
   1bb14:	beq	1b594 <argp_failure@@Base+0x248>
   1bb18:	ldrb	r9, [r6]
   1bb1c:	ldr	r8, [pc, #2644]	; 1c578 <argp_failure@@Base+0x122c>
   1bb20:	cmp	r9, #0
   1bb24:	beq	1bc78 <argp_failure@@Base+0x92c>
   1bb28:	bl	11520 <__ctype_b_loc@plt>
   1bb2c:	mov	r5, r0
   1bb30:	ldr	r1, [r0]
   1bb34:	b	1bb3c <argp_failure@@Base+0x7f0>
   1bb38:	ldrb	r9, [r6, #1]!
   1bb3c:	lsl	r3, r9, #1
   1bb40:	ldrh	r3, [r1, r3]
   1bb44:	tst	r3, #8192	; 0x2000
   1bb48:	bne	1bb38 <argp_failure@@Base+0x7ec>
   1bb4c:	ands	r2, r3, #1024	; 0x400
   1bb50:	beq	1bc70 <argp_failure@@Base+0x924>
   1bb54:	cmp	r9, #95	; 0x5f
   1bb58:	cmpne	r9, #45	; 0x2d
   1bb5c:	lsl	r3, r3, #28
   1bb60:	moveq	r7, #1
   1bb64:	movne	r7, #0
   1bb68:	orrs	r3, r7, r3, lsr #31
   1bb6c:	beq	1c42c <argp_failure@@Base+0x10e0>
   1bb70:	mov	r4, r6
   1bb74:	ldrb	r3, [r4, #1]!
   1bb78:	cmp	r3, #95	; 0x5f
   1bb7c:	cmpne	r3, #45	; 0x2d
   1bb80:	lsl	r2, r3, #1
   1bb84:	moveq	r0, #1
   1bb88:	ldrh	r2, [r1, r2]
   1bb8c:	movne	r0, #0
   1bb90:	lsl	ip, r2, #28
   1bb94:	orrs	r0, r0, ip, lsr #31
   1bb98:	bne	1bb74 <argp_failure@@Base+0x828>
   1bb9c:	tst	r2, #8192	; 0x2000
   1bba0:	sub	r7, r4, r6
   1bba4:	beq	1bbbc <argp_failure@@Base+0x870>
   1bba8:	ldrb	r3, [r4, #1]!
   1bbac:	lsl	r2, r3, #1
   1bbb0:	ldrh	r2, [r1, r2]
   1bbb4:	tst	r2, #8192	; 0x2000
   1bbb8:	bne	1bba8 <argp_failure@@Base+0x85c>
   1bbbc:	cmp	r3, #44	; 0x2c
   1bbc0:	cmpne	r3, #0
   1bbc4:	beq	1bcd8 <argp_failure@@Base+0x98c>
   1bbc8:	cmp	r3, #61	; 0x3d
   1bbcc:	beq	1c034 <argp_failure@@Base+0xce8>
   1bbd0:	ldrb	r3, [r4]
   1bbd4:	lsl	r3, r3, #1
   1bbd8:	ldrh	r3, [r1, r3]
   1bbdc:	tst	r3, #2048	; 0x800
   1bbe0:	bne	1bfd4 <argp_failure@@Base+0xc88>
   1bbe4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bbe8:	mov	r9, r3
   1bbec:	str	r3, [fp, #-116]	; 0xffffff8c
   1bbf0:	ldr	r5, [pc, #2436]	; 1c57c <argp_failure@@Base+0x1230>
   1bbf4:	b	1bc04 <argp_failure@@Base+0x8b8>
   1bbf8:	add	r5, r5, #16
   1bbfc:	cmp	r5, r8
   1bc00:	beq	1c494 <argp_failure@@Base+0x1148>
   1bc04:	mov	r0, r5
   1bc08:	bl	11544 <strlen@plt>
   1bc0c:	cmp	r0, r7
   1bc10:	bne	1bbf8 <argp_failure@@Base+0x8ac>
   1bc14:	mov	r2, r7
   1bc18:	mov	r1, r5
   1bc1c:	mov	r0, r6
   1bc20:	bl	116a0 <strncmp@plt>
   1bc24:	cmp	r0, #0
   1bc28:	bne	1bbf8 <argp_failure@@Base+0x8ac>
   1bc2c:	cmp	r9, #0
   1bc30:	beq	1bc40 <argp_failure@@Base+0x8f4>
   1bc34:	ldrb	r1, [r5, #14]
   1bc38:	cmp	r1, #0
   1bc3c:	beq	1c674 <argp_failure@@Base+0x1328>
   1bc40:	ldrb	r3, [r5, #15]
   1bc44:	sub	r2, fp, #36	; 0x24
   1bc48:	add	r3, r2, r3
   1bc4c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1bc50:	str	r2, [r3, #-40]	; 0xffffffd8
   1bc54:	cmp	r5, r8
   1bc58:	beq	1c494 <argp_failure@@Base+0x1148>
   1bc5c:	ldrb	r9, [r4]
   1bc60:	cmp	r9, #44	; 0x2c
   1bc64:	beq	1c374 <argp_failure@@Base+0x1028>
   1bc68:	mov	r6, r4
   1bc6c:	b	1bb20 <argp_failure@@Base+0x7d4>
   1bc70:	cmp	r9, #0
   1bc74:	bne	1c5cc <argp_failure@@Base+0x1280>
   1bc78:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1bc7c:	ldr	r1, [pc, #2296]	; 1c57c <argp_failure@@Base+0x1230>
   1bc80:	add	r3, r1, #16
   1bc84:	cmp	r3, r8
   1bc88:	mov	r1, r3
   1bc8c:	beq	1c3d0 <argp_failure@@Base+0x1084>
   1bc90:	ldrb	r2, [r3, #14]
   1bc94:	cmp	r2, #0
   1bc98:	bne	1bc80 <argp_failure@@Base+0x934>
   1bc9c:	ldrb	r0, [r3, #15]
   1bca0:	sub	ip, fp, #36	; 0x24
   1bca4:	cmp	r0, #32
   1bca8:	add	ip, ip, r0
   1bcac:	beq	1bc80 <argp_failure@@Base+0x934>
   1bcb0:	ldr	r0, [ip, #-40]	; 0xffffffd8
   1bcb4:	cmp	r0, lr
   1bcb8:	blt	1bc80 <argp_failure@@Base+0x934>
   1bcbc:	ldr	r1, [pc, #2236]	; 1c580 <argp_failure@@Base+0x1234>
   1bcc0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1bcc4:	stm	sp, {r1, r3}
   1bcc8:	ldr	r3, [pc, #2228]	; 1c584 <argp_failure@@Base+0x1238>
   1bccc:	mov	r1, r2
   1bcd0:	bl	1b34c <argp_failure@@Base>
   1bcd4:	b	1b594 <argp_failure@@Base+0x248>
   1bcd8:	cmp	r9, #110	; 0x6e
   1bcdc:	beq	1c064 <argp_failure@@Base+0xd18>
   1bce0:	mov	r9, #1
   1bce4:	str	r9, [fp, #-116]	; 0xffffff8c
   1bce8:	b	1bbf0 <argp_failure@@Base+0x8a4>
   1bcec:	ldr	r3, [fp, #4]
   1bcf0:	ldr	r1, [pc, #2192]	; 1c588 <argp_failure@@Base+0x123c>
   1bcf4:	mov	r2, r3
   1bcf8:	mov	r0, r9
   1bcfc:	bl	1dc54 <argp_error@@Base+0x14b0>
   1bd00:	mov	r4, #1
   1bd04:	b	1b5e4 <argp_failure@@Base+0x298>
   1bd08:	mov	r2, #1
   1bd0c:	mov	r3, #0
   1bd10:	stm	sp, {r2, r9}
   1bd14:	ldr	r1, [fp, #-104]	; 0xffffff98
   1bd18:	mov	r2, r3
   1bd1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1bd20:	bl	19c38 <_obstack_memory_used@@Base+0x14f8>
   1bd24:	orr	r4, r4, r0
   1bd28:	b	1b5d8 <argp_failure@@Base+0x28c>
   1bd2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bd30:	mov	r4, #1
   1bd34:	mov	r6, r4
   1bd38:	ldr	r1, [r3, #16]
   1bd3c:	ldr	r0, [r3, #8]
   1bd40:	bl	1b13c <_obstack_memory_used@@Base+0x29fc>
   1bd44:	mov	r1, #0
   1bd48:	add	r3, r0, #14
   1bd4c:	bic	r3, r3, #7
   1bd50:	sub	sp, sp, r3
   1bd54:	add	r7, sp, #8
   1bd58:	mov	r2, r0
   1bd5c:	mov	r0, r7
   1bd60:	bl	11598 <memset@plt>
   1bd64:	sub	r3, fp, #76	; 0x4c
   1bd68:	str	r3, [fp, #-100]	; 0xffffff9c
   1bd6c:	ldr	r8, [fp, #-136]	; 0xffffff78
   1bd70:	str	r7, [fp, #-108]	; 0xffffff94
   1bd74:	b	1be90 <argp_failure@@Base+0xb44>
   1bd78:	cmp	r4, #0
   1bd7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bd80:	ldr	r5, [r9, #12]
   1bd84:	ldrne	r2, [pc, #2048]	; 1c58c <argp_failure@@Base+0x1240>
   1bd88:	str	r7, [r9, #12]
   1bd8c:	ldreq	r2, [pc, #2044]	; 1c590 <argp_failure@@Base+0x1244>
   1bd90:	str	r3, [fp, #-76]	; 0xffffffb4
   1bd94:	ldr	r1, [pc, #2040]	; 1c594 <argp_failure@@Base+0x1248>
   1bd98:	ldr	r3, [fp, #4]
   1bd9c:	mov	r0, r9
   1bda0:	bl	1dc54 <argp_error@@Base+0x14b0>
   1bda4:	ldr	r3, [r9, #28]
   1bda8:	ldr	r1, [r9, #24]
   1bdac:	ldr	r2, [r9, #16]
   1bdb0:	sub	r3, r3, r1
   1bdb4:	cmp	r3, r2
   1bdb8:	ldr	r7, [sl, #28]
   1bdbc:	bhi	1bf24 <argp_failure@@Base+0xbd8>
   1bdc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bdc4:	ldr	r4, [r9, #4]
   1bdc8:	tst	r3, #2
   1bdcc:	str	r7, [r9, #4]
   1bdd0:	beq	1bf08 <argp_failure@@Base+0xbbc>
   1bdd4:	ldr	r3, [r8, #4]
   1bdd8:	cmp	r3, #0
   1bddc:	beq	1be2c <argp_failure@@Base+0xae0>
   1bde0:	ldr	ip, [r9, #28]
   1bde4:	ldr	r2, [r9, #32]
   1bde8:	add	r3, ip, #12
   1bdec:	cmp	r2, r3
   1bdf0:	bcs	1be0c <argp_failure@@Base+0xac0>
   1bdf4:	mov	r1, #12
   1bdf8:	mov	r0, r9
   1bdfc:	bl	1dc34 <argp_error@@Base+0x1490>
   1be00:	cmp	r0, #0
   1be04:	beq	1be2c <argp_failure@@Base+0xae0>
   1be08:	ldr	ip, [r9, #28]
   1be0c:	ldr	r3, [pc, #1924]	; 1c598 <argp_failure@@Base+0x124c>
   1be10:	ldm	r3!, {r0, r1, r2}
   1be14:	str	r0, [ip]
   1be18:	str	r1, [ip, #4]
   1be1c:	str	r2, [ip, #8]
   1be20:	ldr	r3, [r9, #28]
   1be24:	add	r3, r3, #12
   1be28:	str	r3, [r9, #28]
   1be2c:	mov	r3, r6
   1be30:	ldr	r1, [fp, #-104]	; 0xffffff98
   1be34:	str	r9, [sp]
   1be38:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1be3c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1be40:	bl	1a774 <_obstack_memory_used@@Base+0x2034>
   1be44:	ldr	r3, [r9, #28]
   1be48:	ldr	r1, [r9, #24]
   1be4c:	sub	r1, r3, r1
   1be50:	mov	r7, r0
   1be54:	ldr	r0, [r9, #16]
   1be58:	cmp	r1, r0
   1be5c:	strls	r5, [r9, #12]
   1be60:	bhi	1bed4 <argp_failure@@Base+0xb88>
   1be64:	ldr	r1, [r9, #32]
   1be68:	str	r4, [r9, #4]
   1be6c:	cmp	r1, r3
   1be70:	bls	1beb8 <argp_failure@@Base+0xb6c>
   1be74:	add	r1, r3, #1
   1be78:	mov	r2, #10
   1be7c:	str	r1, [r9, #28]
   1be80:	strb	r2, [r3]
   1be84:	cmp	r7, #0
   1be88:	mov	r4, #0
   1be8c:	beq	1bf30 <argp_failure@@Base+0xbe4>
   1be90:	ldr	r3, [r9, #28]
   1be94:	ldr	r1, [r9, #24]
   1be98:	ldr	r2, [r9, #16]
   1be9c:	sub	r3, r3, r1
   1bea0:	cmp	r3, r2
   1bea4:	ldr	r7, [sl, #28]
   1bea8:	bls	1bd78 <argp_failure@@Base+0xa2c>
   1beac:	mov	r0, r9
   1beb0:	bl	1d5a4 <argp_error@@Base+0xe00>
   1beb4:	b	1bd78 <argp_failure@@Base+0xa2c>
   1beb8:	mov	r1, r6
   1bebc:	mov	r0, r9
   1bec0:	bl	1dc34 <argp_error@@Base+0x1490>
   1bec4:	cmp	r0, #0
   1bec8:	beq	1be84 <argp_failure@@Base+0xb38>
   1becc:	ldr	r3, [r9, #28]
   1bed0:	b	1be74 <argp_failure@@Base+0xb28>
   1bed4:	mov	r0, r9
   1bed8:	bl	1d5a4 <argp_error@@Base+0xe00>
   1bedc:	ldr	r3, [r9, #28]
   1bee0:	ldr	r1, [r9, #24]
   1bee4:	ldr	r0, [r9, #16]
   1bee8:	sub	r1, r3, r1
   1beec:	cmp	r1, r0
   1bef0:	str	r5, [r9, #12]
   1bef4:	bls	1be64 <argp_failure@@Base+0xb18>
   1bef8:	mov	r0, r9
   1befc:	bl	1d5a4 <argp_error@@Base+0xe00>
   1bf00:	ldr	r3, [r9, #28]
   1bf04:	b	1be64 <argp_failure@@Base+0xb18>
   1bf08:	mov	r1, r9
   1bf0c:	mov	r0, r8
   1bf10:	bl	1b194 <_obstack_memory_used@@Base+0x2a54>
   1bf14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bf18:	orr	r3, r3, #2
   1bf1c:	str	r3, [fp, #-96]	; 0xffffffa0
   1bf20:	b	1be2c <argp_failure@@Base+0xae0>
   1bf24:	mov	r0, r9
   1bf28:	bl	1d5a4 <argp_error@@Base+0xe00>
   1bf2c:	b	1bdc0 <argp_failure@@Base+0xa74>
   1bf30:	mov	r4, #1
   1bf34:	b	1b5cc <argp_failure@@Base+0x280>
   1bf38:	mov	r1, #0
   1bf3c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1bf40:	bl	1a9c4 <_obstack_memory_used@@Base+0x2284>
   1bf44:	ldr	r2, [pc, #1616]	; 1c59c <argp_failure@@Base+0x1250>
   1bf48:	ldr	r4, [r0, #4]
   1bf4c:	ldr	r5, [r0]
   1bf50:	mov	r1, r4
   1bf54:	mov	r6, r0
   1bf58:	str	r0, [fp, #-136]	; 0xffffff78
   1bf5c:	mov	r0, r5
   1bf60:	bl	1b0b4 <_obstack_memory_used@@Base+0x2974>
   1bf64:	ldr	r2, [pc, #1588]	; 1c5a0 <argp_failure@@Base+0x1254>
   1bf68:	cmp	r0, #0
   1bf6c:	mvnne	r3, #0
   1bf70:	strne	r3, [r0, #12]
   1bf74:	movne	r3, r6
   1bf78:	mov	r0, r5
   1bf7c:	ldrne	r4, [r3, #4]
   1bf80:	mov	r1, r4
   1bf84:	bl	1b0b4 <_obstack_memory_used@@Base+0x2974>
   1bf88:	cmp	r0, #0
   1bf8c:	mvnne	r3, #0
   1bf90:	strne	r3, [r0, #12]
   1bf94:	ldrne	r3, [fp, #-136]	; 0xffffff78
   1bf98:	ldrne	r4, [r3, #4]
   1bf9c:	cmp	r4, #0
   1bfa0:	beq	1b5c0 <argp_failure@@Base+0x274>
   1bfa4:	mov	r3, r5
   1bfa8:	mov	r1, #0
   1bfac:	str	r1, [r3, #24]
   1bfb0:	add	r1, r1, #1
   1bfb4:	cmp	r1, r4
   1bfb8:	add	r3, r3, #28
   1bfbc:	bne	1bfac <argp_failure@@Base+0xc60>
   1bfc0:	mov	r0, r5
   1bfc4:	ldr	r3, [pc, #1496]	; 1c5a4 <argp_failure@@Base+0x1258>
   1bfc8:	mov	r2, #28
   1bfcc:	bl	11658 <qsort@plt>
   1bfd0:	b	1b5c0 <argp_failure@@Base+0x274>
   1bfd4:	mov	r2, #10
   1bfd8:	mov	r1, #0
   1bfdc:	mov	r0, r4
   1bfe0:	bl	113ac <strtol@plt>
   1bfe4:	ldrb	r3, [r4]
   1bfe8:	ldr	r2, [r5]
   1bfec:	lsl	r3, r3, #1
   1bff0:	ldrh	r3, [r2, r3]
   1bff4:	tst	r3, #2048	; 0x800
   1bff8:	str	r0, [fp, #-116]	; 0xffffff8c
   1bffc:	beq	1c024 <argp_failure@@Base+0xcd8>
   1c000:	ldrb	r3, [r4, #1]!
   1c004:	lsl	r3, r3, #1
   1c008:	ldrh	r3, [r2, r3]
   1c00c:	tst	r3, #2048	; 0x800
   1c010:	bne	1c000 <argp_failure@@Base+0xcb4>
   1c014:	b	1c024 <argp_failure@@Base+0xcd8>
   1c018:	ldrb	r3, [r4, #1]!
   1c01c:	lsl	r3, r3, #1
   1c020:	ldrh	r3, [r2, r3]
   1c024:	tst	r3, #8192	; 0x2000
   1c028:	bne	1c018 <argp_failure@@Base+0xccc>
   1c02c:	ldr	r9, [fp, #-108]	; 0xffffff94
   1c030:	b	1bbf0 <argp_failure@@Base+0x8a4>
   1c034:	ldrb	r3, [r4, #1]
   1c038:	add	r4, r4, #1
   1c03c:	lsl	r3, r3, #1
   1c040:	ldrh	r3, [r1, r3]
   1c044:	tst	r3, #8192	; 0x2000
   1c048:	beq	1bbdc <argp_failure@@Base+0x890>
   1c04c:	ldrb	r3, [r4, #1]!
   1c050:	lsl	r3, r3, #1
   1c054:	ldrh	r3, [r1, r3]
   1c058:	tst	r3, #8192	; 0x2000
   1c05c:	bne	1c04c <argp_failure@@Base+0xd00>
   1c060:	b	1bbdc <argp_failure@@Base+0x890>
   1c064:	ldrb	r3, [r6, #1]
   1c068:	cmp	r3, #111	; 0x6f
   1c06c:	bne	1bce0 <argp_failure@@Base+0x994>
   1c070:	ldrb	r3, [r6, #2]
   1c074:	cmp	r3, #45	; 0x2d
   1c078:	bne	1bce0 <argp_failure@@Base+0x994>
   1c07c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c080:	add	r6, r6, #3
   1c084:	sub	r7, r7, #3
   1c088:	str	r3, [fp, #-116]	; 0xffffff8c
   1c08c:	mov	r9, #1
   1c090:	b	1bbf0 <argp_failure@@Base+0x8a4>
   1c094:	mov	r3, #1
   1c098:	str	r3, [fp, #-128]	; 0xffffff80
   1c09c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c0a0:	cmp	lr, r5
   1c0a4:	ldr	r5, [r3, #8]
   1c0a8:	bls	1b7a4 <argp_failure@@Base+0x458>
   1c0ac:	mov	r0, r9
   1c0b0:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c0b4:	ldr	r7, [r6, #12]
   1c0b8:	and	r2, r7, #8
   1c0bc:	mov	r4, r2
   1c0c0:	b	1b7a4 <argp_failure@@Base+0x458>
   1c0c4:	cmp	r3, r2
   1c0c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c0cc:	ldr	r4, [r3, #12]
   1c0d0:	bhi	1c380 <argp_failure@@Base+0x1034>
   1c0d4:	str	r4, [r9, #12]
   1c0d8:	ldr	r5, [r8, #4]
   1c0dc:	cmp	r5, #0
   1c0e0:	beq	1b910 <argp_failure@@Base+0x5c4>
   1c0e4:	add	r4, r6, #24
   1c0e8:	ldr	r7, [fp, #-100]	; 0xffffff9c
   1c0ec:	b	1c0fc <argp_failure@@Base+0xdb0>
   1c0f0:	subs	r5, r5, #1
   1c0f4:	add	r4, r4, #24
   1c0f8:	beq	1b910 <argp_failure@@Base+0x5c4>
   1c0fc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1c100:	cmp	r3, #0
   1c104:	beq	1c0f0 <argp_failure@@Base+0xda4>
   1c108:	ldr	r3, [r4, #-12]
   1c10c:	tst	r3, #2
   1c110:	bne	1c0f0 <argp_failure@@Base+0xda4>
   1c114:	sub	r1, fp, #76	; 0x4c
   1c118:	ldr	r0, [r7, #12]
   1c11c:	bl	19a8c <_obstack_memory_used@@Base+0x134c>
   1c120:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1c124:	ldr	r1, [pc, #1148]	; 1c5a8 <argp_failure@@Base+0x125c>
   1c128:	mov	r0, r9
   1c12c:	bl	1dc54 <argp_error@@Base+0x14b0>
   1c130:	ldr	r3, [r6, #8]
   1c134:	ldr	r1, [pc, #1136]	; 1c5ac <argp_failure@@Base+0x1260>
   1c138:	subs	r2, r3, #0
   1c13c:	mov	r0, r9
   1c140:	beq	1c0f0 <argp_failure@@Base+0xda4>
   1c144:	ldr	ip, [r6, #12]
   1c148:	tst	ip, #1
   1c14c:	ldrne	r1, [pc, #1116]	; 1c5b0 <argp_failure@@Base+0x1264>
   1c150:	bl	1dc54 <argp_error@@Base+0x14b0>
   1c154:	b	1c0f0 <argp_failure@@Base+0xda4>
   1c158:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c15c:	sub	r1, fp, #76	; 0x4c
   1c160:	ldr	r0, [r3, #8]
   1c164:	bl	19a8c <_obstack_memory_used@@Base+0x134c>
   1c168:	ldr	r3, [r9, #28]
   1c16c:	ldr	r2, [r9, #32]
   1c170:	cmp	r3, r2
   1c174:	bcs	1c3b4 <argp_failure@@Base+0x1068>
   1c178:	add	r2, r3, #1
   1c17c:	str	r2, [r9, #28]
   1c180:	mov	r2, #45	; 0x2d
   1c184:	strb	r2, [r3]
   1c188:	ldr	r3, [r9, #28]
   1c18c:	ldr	r2, [r9, #32]
   1c190:	ldrb	r7, [sl]
   1c194:	cmp	r3, r2
   1c198:	bcs	1c398 <argp_failure@@Base+0x104c>
   1c19c:	add	r2, r3, #1
   1c1a0:	str	r2, [r9, #28]
   1c1a4:	strb	r7, [r3]
   1c1a8:	ldr	r3, [fp, #-128]	; 0xffffff80
   1c1ac:	cmp	r3, #0
   1c1b0:	beq	1c34c <argp_failure@@Base+0x1000>
   1c1b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c1b8:	ldr	r3, [r3]
   1c1bc:	cmp	r3, #0
   1c1c0:	bne	1c34c <argp_failure@@Base+0x1000>
   1c1c4:	ldr	r3, [r6, #8]
   1c1c8:	cmp	r3, #0
   1c1cc:	movne	r3, #1
   1c1d0:	strne	r3, [fp, #-80]	; 0xffffffb0
   1c1d4:	b	1b818 <argp_failure@@Base+0x4cc>
   1c1d8:	mov	r0, r9
   1c1dc:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c1e0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c1e4:	ldr	r3, [r9, #28]
   1c1e8:	ldr	r1, [r9, #24]
   1c1ec:	str	r2, [r9, #4]
   1c1f0:	ldr	r2, [r9, #16]
   1c1f4:	sub	r3, r3, r1
   1c1f8:	cmp	r3, r2
   1c1fc:	bls	1b99c <argp_failure@@Base+0x650>
   1c200:	mov	r0, r9
   1c204:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c208:	b	1b99c <argp_failure@@Base+0x650>
   1c20c:	mov	r0, r9
   1c210:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c214:	ldr	lr, [r9, #28]
   1c218:	ldr	r2, [r9, #24]
   1c21c:	ldr	r5, [r9, #16]
   1c220:	sub	lr, lr, r2
   1c224:	b	1b710 <argp_failure@@Base+0x3c4>
   1c228:	ldr	r4, [r6, #16]
   1c22c:	ldr	r1, [r6, #4]
   1c230:	mov	r0, r4
   1c234:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c238:	ldr	r2, [r8, #20]
   1c23c:	bl	1983c <_obstack_memory_used@@Base+0x10fc>
   1c240:	subs	r5, r0, #0
   1c244:	beq	1c2fc <argp_failure@@Base+0xfb0>
   1c248:	ldrb	r3, [r5]
   1c24c:	cmp	r3, #0
   1c250:	beq	1c2ec <argp_failure@@Base+0xfa0>
   1c254:	ldr	r3, [r9, #28]
   1c258:	ldr	r1, [r9, #24]
   1c25c:	ldr	r2, [r9, #16]
   1c260:	sub	r3, r3, r1
   1c264:	cmp	r3, r2
   1c268:	bhi	1c4ec <argp_failure@@Base+0x11a0>
   1c26c:	ldr	r7, [r9, #20]
   1c270:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c274:	bic	r7, r7, r7, asr #31
   1c278:	ldr	r6, [r3, #20]
   1c27c:	mov	r3, r6
   1c280:	str	r6, [r9, #4]
   1c284:	add	r2, r6, #3
   1c288:	cmp	r2, r7
   1c28c:	str	r3, [r9, #12]
   1c290:	bcs	1c43c <argp_failure@@Base+0x10f0>
   1c294:	ldr	r3, [r9, #28]
   1c298:	ldr	r2, [r9, #32]
   1c29c:	cmp	r3, r2
   1c2a0:	bcs	1c63c <argp_failure@@Base+0x12f0>
   1c2a4:	add	r1, r3, #1
   1c2a8:	mov	r2, #10
   1c2ac:	str	r1, [r9, #28]
   1c2b0:	strb	r2, [r3]
   1c2b4:	mov	r0, r5
   1c2b8:	bl	11544 <strlen@plt>
   1c2bc:	subs	r6, r0, #0
   1c2c0:	beq	1c2ec <argp_failure@@Base+0xfa0>
   1c2c4:	ldr	r0, [r9, #28]
   1c2c8:	ldr	r2, [r9, #32]
   1c2cc:	add	r3, r0, r6
   1c2d0:	cmp	r2, r3
   1c2d4:	bcs	1c4d0 <argp_failure@@Base+0x1184>
   1c2d8:	mov	r1, r6
   1c2dc:	mov	r0, r9
   1c2e0:	bl	1dc34 <argp_error@@Base+0x1490>
   1c2e4:	cmp	r0, #0
   1c2e8:	bne	1c4cc <argp_failure@@Base+0x1180>
   1c2ec:	cmp	r4, r5
   1c2f0:	beq	1c2fc <argp_failure@@Base+0xfb0>
   1c2f4:	mov	r0, r5
   1c2f8:	bl	182f0 <argp_parse@@Base+0xe98>
   1c2fc:	ldr	r3, [r9, #28]
   1c300:	ldr	r2, [r9, #24]
   1c304:	ldr	r1, [r9, #16]
   1c308:	sub	r2, r3, r2
   1c30c:	cmp	r2, r1
   1c310:	bhi	1c41c <argp_failure@@Base+0x10d0>
   1c314:	ldr	r1, [r9, #32]
   1c318:	mov	r2, #0
   1c31c:	cmp	r1, r3
   1c320:	str	r2, [r9, #4]
   1c324:	bls	1c400 <argp_failure@@Base+0x10b4>
   1c328:	add	r1, r3, #1
   1c32c:	mov	r2, #10
   1c330:	str	r1, [r9, #28]
   1c334:	strb	r2, [r3]
   1c338:	str	r8, [fp, #-88]	; 0xffffffa8
   1c33c:	b	1b97c <argp_failure@@Base+0x630>
   1c340:	mov	r0, r9
   1c344:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c348:	b	1b928 <argp_failure@@Base+0x5dc>
   1c34c:	ldr	r2, [r6, #8]
   1c350:	cmp	r2, #0
   1c354:	beq	1b818 <argp_failure@@Base+0x4cc>
   1c358:	ldr	r3, [r6, #12]
   1c35c:	mov	r0, r9
   1c360:	tst	r3, #1
   1c364:	ldrne	r1, [pc, #584]	; 1c5b4 <argp_failure@@Base+0x1268>
   1c368:	ldreq	r1, [pc, #584]	; 1c5b8 <argp_failure@@Base+0x126c>
   1c36c:	bl	1dc54 <argp_error@@Base+0x14b0>
   1c370:	b	1b818 <argp_failure@@Base+0x4cc>
   1c374:	ldrb	r9, [r4, #1]
   1c378:	add	r4, r4, #1
   1c37c:	b	1bc68 <argp_failure@@Base+0x91c>
   1c380:	mov	r0, r9
   1c384:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c388:	b	1c0d4 <argp_failure@@Base+0xd88>
   1c38c:	mov	r0, r9
   1c390:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c394:	b	1b85c <argp_failure@@Base+0x510>
   1c398:	mov	r1, #1
   1c39c:	mov	r0, r9
   1c3a0:	bl	1dc34 <argp_error@@Base+0x1490>
   1c3a4:	cmp	r0, #0
   1c3a8:	beq	1c1a8 <argp_failure@@Base+0xe5c>
   1c3ac:	ldr	r3, [r9, #28]
   1c3b0:	b	1c19c <argp_failure@@Base+0xe50>
   1c3b4:	mov	r1, #1
   1c3b8:	mov	r0, r9
   1c3bc:	bl	1dc34 <argp_error@@Base+0x1490>
   1c3c0:	cmp	r0, #0
   1c3c4:	beq	1c188 <argp_failure@@Base+0xe3c>
   1c3c8:	ldr	r3, [r9, #28]
   1c3cc:	b	1c178 <argp_failure@@Base+0xe2c>
   1c3d0:	ldr	lr, [fp, #-100]	; 0xffffff9c
   1c3d4:	ldr	sl, [pc, #388]	; 1c560 <argp_failure@@Base+0x1214>
   1c3d8:	mov	r4, #1
   1c3dc:	ldm	lr!, {r0, r1, r2, r3}
   1c3e0:	mov	ip, sl
   1c3e4:	stmia	ip!, {r0, r1, r2, r3}
   1c3e8:	ldm	lr!, {r0, r1, r2, r3}
   1c3ec:	stmia	ip!, {r0, r1, r2, r3}
   1c3f0:	ldm	lr, {r0, r1}
   1c3f4:	stm	ip, {r0, r1}
   1c3f8:	str	r4, [sl, #36]	; 0x24
   1c3fc:	b	1b594 <argp_failure@@Base+0x248>
   1c400:	mov	r1, #1
   1c404:	mov	r0, r9
   1c408:	bl	1dc34 <argp_error@@Base+0x1490>
   1c40c:	cmp	r0, #0
   1c410:	beq	1c338 <argp_failure@@Base+0xfec>
   1c414:	ldr	r3, [r9, #28]
   1c418:	b	1c328 <argp_failure@@Base+0xfdc>
   1c41c:	mov	r0, r9
   1c420:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c424:	ldr	r3, [r9, #28]
   1c428:	b	1c314 <argp_failure@@Base+0xfc8>
   1c42c:	mov	r7, r3
   1c430:	mov	r4, r6
   1c434:	mov	r3, r9
   1c438:	b	1bbbc <argp_failure@@Base+0x870>
   1c43c:	cmp	r6, r7
   1c440:	bhi	1c62c <argp_failure@@Base+0x12e0>
   1c444:	ldr	r3, [r9, #28]
   1c448:	ldr	r1, [r9, #32]
   1c44c:	add	r2, r3, #3
   1c450:	cmp	r1, r2
   1c454:	bcs	1c470 <argp_failure@@Base+0x1124>
   1c458:	mov	r1, #3
   1c45c:	mov	r0, r9
   1c460:	bl	1dc34 <argp_error@@Base+0x1490>
   1c464:	cmp	r0, #0
   1c468:	beq	1c2b4 <argp_failure@@Base+0xf68>
   1c46c:	ldr	r3, [r9, #28]
   1c470:	ldr	r2, [pc, #324]	; 1c5bc <argp_failure@@Base+0x1270>
   1c474:	ldrh	r1, [r2]
   1c478:	ldrb	r2, [r2, #2]
   1c47c:	strh	r1, [r3]
   1c480:	strb	r2, [r3, #2]
   1c484:	ldr	r3, [r9, #28]
   1c488:	add	r3, r3, #3
   1c48c:	str	r3, [r9, #28]
   1c490:	b	1c2b4 <argp_failure@@Base+0xf68>
   1c494:	mov	r2, #0
   1c498:	str	r6, [sp, #4]
   1c49c:	str	r7, [sp]
   1c4a0:	ldr	r3, [pc, #280]	; 1c5c0 <argp_failure@@Base+0x1274>
   1c4a4:	mov	r1, r2
   1c4a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c4ac:	bl	1b34c <argp_failure@@Base>
   1c4b0:	b	1bc5c <argp_failure@@Base+0x910>
   1c4b4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1c4b8:	ldr	r8, [r3]
   1c4bc:	str	r4, [fp, #-88]	; 0xffffffa8
   1c4c0:	str	r4, [fp, #-84]	; 0xffffffac
   1c4c4:	str	r4, [fp, #-80]	; 0xffffffb0
   1c4c8:	b	1b6ec <argp_failure@@Base+0x3a0>
   1c4cc:	ldr	r0, [r9, #28]
   1c4d0:	mov	r2, r6
   1c4d4:	mov	r1, r5
   1c4d8:	bl	1140c <memcpy@plt>
   1c4dc:	ldr	r3, [r9, #28]
   1c4e0:	add	r6, r3, r6
   1c4e4:	str	r6, [r9, #28]
   1c4e8:	b	1c2ec <argp_failure@@Base+0xfa0>
   1c4ec:	mov	r0, r9
   1c4f0:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c4f4:	ldr	r3, [r9, #28]
   1c4f8:	ldr	r1, [r9, #24]
   1c4fc:	ldr	r2, [r9, #16]
   1c500:	ldr	r7, [r9, #20]
   1c504:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1c508:	sub	r3, r3, r1
   1c50c:	cmp	r3, r2
   1c510:	ldr	r6, [sl, #20]
   1c514:	bic	r7, r7, r7, asr #31
   1c518:	bls	1c27c <argp_failure@@Base+0xf30>
   1c51c:	mov	r0, r9
   1c520:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c524:	ldr	r3, [r9, #28]
   1c528:	ldr	r1, [r9, #24]
   1c52c:	ldr	r2, [r9, #16]
   1c530:	sub	r3, r3, r1
   1c534:	cmp	r3, r2
   1c538:	ldr	r3, [sl, #20]
   1c53c:	str	r6, [r9, #4]
   1c540:	movls	r6, r3
   1c544:	bls	1c284 <argp_failure@@Base+0xf38>
   1c548:	mov	r0, r9
   1c54c:	str	r3, [fp, #-124]	; 0xffffff84
   1c550:	bl	1d5a4 <argp_error@@Base+0xe00>
   1c554:	ldr	r6, [sl, #20]
   1c558:	ldr	r3, [fp, #-124]	; 0xffffff84
   1c55c:	b	1c284 <argp_failure@@Base+0xf38>
   1c560:	andeq	r2, r3, r0, lsl #22
   1c564:	andeq	r2, r3, r0, lsr #24
   1c568:	andeq	r1, r2, r0, asr #9
   1c56c:	andeq	r0, r0, #5
   1c570:	andeq	r1, r2, ip, asr #8
   1c574:	andeq	r1, r2, r8, lsl #6
   1c578:	ldrdeq	r1, [r2], -r8
   1c57c:	andeq	r1, r2, r8, asr #2
   1c580:	andeq	r1, r2, r4, asr #7
   1c584:	muleq	r2, r0, r3
   1c588:	strdeq	r1, [r2], -r4
   1c58c:	andeq	r1, r2, ip, asr #7
   1c590:	ldrdeq	r1, [r2], -ip
   1c594:	ldrdeq	r1, [r2], -r4
   1c598:	andeq	r1, r2, r4, ror #7
   1c59c:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   1c5a0:			; <UNDEFINED> instruction: 0x00020cb8
   1c5a4:	andeq	sl, r1, r4, ror r2
   1c5a8:	andeq	r1, r2, r4, lsr r4
   1c5ac:	andeq	r1, r2, r4, asr #8
   1c5b0:	andeq	r1, r2, ip, lsr r4
   1c5b4:	andeq	r1, r2, ip, lsr #8
   1c5b8:			; <UNDEFINED> instruction: 0x0001e2b4
   1c5bc:	andeq	r1, r2, r8, asr #8
   1c5c0:	andeq	r1, r2, r8, asr #6
   1c5c4:	andeq	r1, r2, r0, ror r3
   1c5c8:	andeq	r1, r2, r8, lsl r3
   1c5cc:	str	r6, [sp]
   1c5d0:	ldr	r3, [pc, #-20]	; 1c5c4 <argp_failure@@Base+0x1278>
   1c5d4:	mov	r1, r2
   1c5d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c5dc:	bl	1b34c <argp_failure@@Base>
   1c5e0:	b	1bc78 <argp_failure@@Base+0x92c>
   1c5e4:	mov	r0, r4
   1c5e8:	bl	182f0 <argp_parse@@Base+0xe98>
   1c5ec:	b	1baa4 <argp_failure@@Base+0x758>
   1c5f0:	ldr	r0, [r6, #16]
   1c5f4:	sub	r2, fp, #76	; 0x4c
   1c5f8:	ldr	r1, [r8, #20]
   1c5fc:	bl	19880 <_obstack_memory_used@@Base+0x1140>
   1c600:	b	1c338 <argp_failure@@Base+0xfec>
   1c604:	mov	r1, #1
   1c608:	mov	r0, r9
   1c60c:	bl	1dc34 <argp_error@@Base+0x1490>
   1c610:	cmp	r0, #0
   1c614:	beq	1b66c <argp_failure@@Base+0x320>
   1c618:	ldr	r3, [r9, #28]
   1c61c:	b	1b65c <argp_failure@@Base+0x310>
   1c620:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1c624:	bl	11460 <funlockfile@plt>
   1c628:	b	1b62c <argp_failure@@Base+0x2e0>
   1c62c:	mov	r1, r6
   1c630:	mov	r0, r9
   1c634:	bl	197a8 <_obstack_memory_used@@Base+0x1068>
   1c638:	b	1c2b4 <argp_failure@@Base+0xf68>
   1c63c:	mov	r1, #1
   1c640:	mov	r0, r9
   1c644:	bl	1dc34 <argp_error@@Base+0x1490>
   1c648:	cmp	r0, #0
   1c64c:	beq	1c2b4 <argp_failure@@Base+0xf68>
   1c650:	ldr	r3, [r9, #28]
   1c654:	b	1c2a4 <argp_failure@@Base+0xf58>
   1c658:	mov	r1, #1
   1c65c:	mov	r0, r9
   1c660:	bl	1dc34 <argp_error@@Base+0x1490>
   1c664:	cmp	r0, #0
   1c668:	beq	1b6bc <argp_failure@@Base+0x370>
   1c66c:	ldr	r3, [r9, #28]
   1c670:	b	1b6ac <argp_failure@@Base+0x360>
   1c674:	str	r6, [sp, #4]
   1c678:	str	r7, [sp]
   1c67c:	ldr	r3, [pc, #-188]	; 1c5c8 <argp_failure@@Base+0x127c>
   1c680:	mov	r2, #0
   1c684:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c688:	bl	1b34c <argp_failure@@Base>
   1c68c:	b	1bc54 <argp_failure@@Base+0x908>
   1c690:	ldr	r3, [r9, #28]
   1c694:	b	1ba7c <argp_failure@@Base+0x730>
   1c698:	mov	r1, #1
   1c69c:	mov	r0, r9
   1c6a0:	bl	1dc34 <argp_error@@Base+0x1490>
   1c6a4:	cmp	r0, #0
   1c6a8:	beq	1ba98 <argp_failure@@Base+0x74c>
   1c6ac:	ldr	r3, [r9, #28]
   1c6b0:	b	1ba88 <argp_failure@@Base+0x73c>
   1c6b4:	mov	r1, #1
   1c6b8:	mov	r0, r9
   1c6bc:	bl	1dc34 <argp_error@@Base+0x1490>
   1c6c0:	cmp	r0, #0
   1c6c4:	beq	1ba28 <argp_failure@@Base+0x6dc>
   1c6c8:	ldr	r3, [r9, #28]
   1c6cc:	b	1ba18 <argp_failure@@Base+0x6cc>

0001c6d0 <argp_help@@Base>:
   1c6d0:	push	{lr}		; (str lr, [sp, #-4]!)
   1c6d4:	sub	sp, sp, #12
   1c6d8:	str	r3, [sp]
   1c6dc:	mov	r3, r2
   1c6e0:	mov	r2, r1
   1c6e4:	mov	r1, #0
   1c6e8:	bl	1b554 <argp_failure@@Base+0x208>
   1c6ec:	add	sp, sp, #12
   1c6f0:	pop	{pc}		; (ldr pc, [sp], #4)

0001c6f4 <argp_state_help@@Base>:
   1c6f4:	push	{r4, r5, lr}
   1c6f8:	subs	r4, r0, #0
   1c6fc:	sub	sp, sp, #12
   1c700:	mov	r5, r2
   1c704:	beq	1c764 <argp_state_help@@Base+0x70>
   1c708:	ldr	r3, [r4, #16]
   1c70c:	tst	r3, #2
   1c710:	bne	1c75c <argp_state_help@@Base+0x68>
   1c714:	cmp	r1, #0
   1c718:	beq	1c75c <argp_state_help@@Base+0x68>
   1c71c:	tst	r3, #64	; 0x40
   1c720:	ldr	r3, [r4, #40]	; 0x28
   1c724:	orrne	r5, r5, #128	; 0x80
   1c728:	ldr	r0, [r4]
   1c72c:	mov	r2, r1
   1c730:	str	r3, [sp]
   1c734:	mov	r1, r4
   1c738:	mov	r3, r5
   1c73c:	bl	1b554 <argp_failure@@Base+0x208>
   1c740:	ldr	r3, [r4, #16]
   1c744:	tst	r3, #32
   1c748:	bne	1c75c <argp_state_help@@Base+0x68>
   1c74c:	ands	r0, r5, #256	; 0x100
   1c750:	bne	1c790 <argp_state_help@@Base+0x9c>
   1c754:	tst	r5, #512	; 0x200
   1c758:	bne	1c78c <argp_state_help@@Base+0x98>
   1c75c:	add	sp, sp, #12
   1c760:	pop	{r4, r5, pc}
   1c764:	cmp	r1, #0
   1c768:	beq	1c75c <argp_state_help@@Base+0x68>
   1c76c:	ldr	r3, [pc, #40]	; 1c79c <argp_state_help@@Base+0xa8>
   1c770:	mov	r2, r1
   1c774:	mov	r1, r4
   1c778:	ldr	ip, [r3]
   1c77c:	mov	r3, r5
   1c780:	str	ip, [sp]
   1c784:	bl	1b554 <argp_failure@@Base+0x208>
   1c788:	b	1c74c <argp_state_help@@Base+0x58>
   1c78c:	bl	1152c <exit@plt>
   1c790:	ldr	r3, [pc, #8]	; 1c7a0 <argp_state_help@@Base+0xac>
   1c794:	ldr	r0, [r3]
   1c798:	bl	1152c <exit@plt>
   1c79c:	andeq	r2, r3, r0, asr #22
   1c7a0:	andeq	r2, r3, r8, lsr fp

0001c7a4 <argp_error@@Base>:
   1c7a4:	push	{r1, r2, r3}
   1c7a8:	push	{r4, r5, lr}
   1c7ac:	subs	r5, r0, #0
   1c7b0:	sub	sp, sp, #8
   1c7b4:	beq	1c884 <argp_error@@Base+0xe0>
   1c7b8:	ldr	r3, [r5, #16]
   1c7bc:	tst	r3, #2
   1c7c0:	bne	1c874 <argp_error@@Base+0xd0>
   1c7c4:	ldr	r4, [r5, #44]	; 0x2c
   1c7c8:	cmp	r4, #0
   1c7cc:	beq	1c874 <argp_error@@Base+0xd0>
   1c7d0:	mov	r0, r4
   1c7d4:	bl	11634 <flockfile@plt>
   1c7d8:	ldr	r0, [r5, #40]	; 0x28
   1c7dc:	add	r3, sp, #24
   1c7e0:	str	r3, [sp, #4]
   1c7e4:	mov	r1, r4
   1c7e8:	bl	11358 <fputs_unlocked@plt>
   1c7ec:	ldr	r3, [r4, #20]
   1c7f0:	ldr	r2, [r4, #24]
   1c7f4:	cmp	r3, r2
   1c7f8:	addcc	r1, r3, #1
   1c7fc:	movcc	r2, #58	; 0x3a
   1c800:	strcc	r1, [r4, #20]
   1c804:	strbcc	r2, [r3]
   1c808:	bcs	1c8d0 <argp_error@@Base+0x12c>
   1c80c:	ldr	r3, [r4, #20]
   1c810:	ldr	r2, [r4, #24]
   1c814:	cmp	r3, r2
   1c818:	addcc	r1, r3, #1
   1c81c:	movcc	r2, #32
   1c820:	strcc	r1, [r4, #20]
   1c824:	strbcc	r2, [r3]
   1c828:	bcs	1c8c0 <argp_error@@Base+0x11c>
   1c82c:	ldr	r1, [sp, #20]
   1c830:	ldr	r2, [sp, #4]
   1c834:	mov	r0, r4
   1c838:	bl	11604 <vfprintf@plt>
   1c83c:	ldr	r3, [r4, #20]
   1c840:	ldr	r2, [r4, #24]
   1c844:	cmp	r3, r2
   1c848:	addcc	r1, r3, #1
   1c84c:	movcc	r2, #10
   1c850:	strcc	r1, [r4, #20]
   1c854:	strbcc	r2, [r3]
   1c858:	bcs	1c8b0 <argp_error@@Base+0x10c>
   1c85c:	mov	r0, r5
   1c860:	mov	r2, #260	; 0x104
   1c864:	mov	r1, r4
   1c868:	bl	1c6f4 <argp_state_help@@Base>
   1c86c:	mov	r0, r4
   1c870:	bl	11460 <funlockfile@plt>
   1c874:	add	sp, sp, #8
   1c878:	pop	{r4, r5, lr}
   1c87c:	add	sp, sp, #12
   1c880:	bx	lr
   1c884:	ldr	r3, [pc, #84]	; 1c8e0 <argp_error@@Base+0x13c>
   1c888:	ldr	r4, [r3]
   1c88c:	cmp	r4, #0
   1c890:	beq	1c874 <argp_error@@Base+0xd0>
   1c894:	mov	r0, r4
   1c898:	bl	11634 <flockfile@plt>
   1c89c:	ldr	r2, [pc, #64]	; 1c8e4 <argp_error@@Base+0x140>
   1c8a0:	add	r3, sp, #24
   1c8a4:	str	r3, [sp, #4]
   1c8a8:	ldr	r0, [r2]
   1c8ac:	b	1c7e4 <argp_error@@Base+0x40>
   1c8b0:	mov	r1, #10
   1c8b4:	mov	r0, r4
   1c8b8:	bl	115e0 <__overflow@plt>
   1c8bc:	b	1c85c <argp_error@@Base+0xb8>
   1c8c0:	mov	r1, #32
   1c8c4:	mov	r0, r4
   1c8c8:	bl	115e0 <__overflow@plt>
   1c8cc:	b	1c82c <argp_error@@Base+0x88>
   1c8d0:	mov	r1, #58	; 0x3a
   1c8d4:	mov	r0, r4
   1c8d8:	bl	115e0 <__overflow@plt>
   1c8dc:	b	1c80c <argp_error@@Base+0x68>
   1c8e0:	andeq	r2, r3, r8, asr #22
   1c8e4:	andeq	r2, r3, r0, asr #22
   1c8e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c8ec:	ldr	r4, [r1, #32]
   1c8f0:	ldr	r8, [r1, #28]
   1c8f4:	ldr	r7, [r1]
   1c8f8:	add	r6, r0, r4, lsl #2
   1c8fc:	mov	r2, r8
   1c900:	mov	r5, r7
   1c904:	cmp	r5, r4
   1c908:	movle	r3, #0
   1c90c:	movgt	r3, #1
   1c910:	cmp	r2, r4
   1c914:	movge	r3, #0
   1c918:	cmp	r3, #0
   1c91c:	beq	1c990 <argp_error@@Base+0x1ec>
   1c920:	sub	r3, r5, r4
   1c924:	sub	sl, r4, r2
   1c928:	cmp	r3, sl
   1c92c:	ble	1c960 <argp_error@@Base+0x1bc>
   1c930:	sub	r5, r5, sl
   1c934:	add	sl, sl, r2
   1c938:	add	ip, r0, r5, lsl #2
   1c93c:	add	sl, r0, sl, lsl #2
   1c940:	add	r3, r0, r2, lsl #2
   1c944:	ldr	r9, [ip]
   1c948:	ldr	lr, [r3]
   1c94c:	str	r9, [r3], #4
   1c950:	cmp	sl, r3
   1c954:	str	lr, [ip], #4
   1c958:	bne	1c944 <argp_error@@Base+0x1a0>
   1c95c:	b	1c904 <argp_error@@Base+0x160>
   1c960:	add	sl, r3, r2
   1c964:	add	r3, r0, r2, lsl #2
   1c968:	add	r9, r0, sl, lsl #2
   1c96c:	mov	r2, r6
   1c970:	ldr	lr, [r2]
   1c974:	ldr	ip, [r3]
   1c978:	str	lr, [r3], #4
   1c97c:	cmp	r3, r9
   1c980:	str	ip, [r2], #4
   1c984:	bne	1c970 <argp_error@@Base+0x1cc>
   1c988:	mov	r2, sl
   1c98c:	b	1c904 <argp_error@@Base+0x160>
   1c990:	sub	r4, r7, r4
   1c994:	add	r8, r4, r8
   1c998:	str	r8, [r1, #28]
   1c99c:	str	r7, [r1, #32]
   1c9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c9a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9a8:	sub	sp, sp, #44	; 0x2c
   1c9ac:	str	r1, [sp, #20]
   1c9b0:	ldr	r1, [sp, #88]	; 0x58
   1c9b4:	str	r0, [sp, #24]
   1c9b8:	str	r2, [sp, #28]
   1c9bc:	ldr	r8, [r1, #20]
   1c9c0:	str	r3, [sp, #12]
   1c9c4:	mov	r7, r8
   1c9c8:	ldrb	r5, [r8]
   1c9cc:	cmp	r5, #61	; 0x3d
   1c9d0:	cmpne	r5, #0
   1c9d4:	movne	r5, #1
   1c9d8:	moveq	r5, #0
   1c9dc:	beq	1c9f4 <argp_error@@Base+0x250>
   1c9e0:	ldrb	r3, [r7, #1]!
   1c9e4:	cmp	r3, #0
   1c9e8:	cmpne	r3, #61	; 0x3d
   1c9ec:	bne	1c9e0 <argp_error@@Base+0x23c>
   1c9f0:	sub	r5, r7, r8
   1c9f4:	ldr	r3, [sp, #12]
   1c9f8:	ldr	sl, [r3]
   1c9fc:	cmp	sl, #0
   1ca00:	beq	1ccb4 <argp_error@@Base+0x510>
   1ca04:	mov	fp, r3
   1ca08:	mov	r4, sl
   1ca0c:	mov	r6, #0
   1ca10:	mov	r2, r5
   1ca14:	mov	r1, r8
   1ca18:	mov	r0, r4
   1ca1c:	bl	116a0 <strncmp@plt>
   1ca20:	mov	r9, fp
   1ca24:	cmp	r0, #0
   1ca28:	mov	r0, r4
   1ca2c:	bne	1ca3c <argp_error@@Base+0x298>
   1ca30:	bl	11544 <strlen@plt>
   1ca34:	cmp	r0, r5
   1ca38:	beq	1cac8 <argp_error@@Base+0x324>
   1ca3c:	ldr	r4, [fp, #16]!
   1ca40:	add	r6, r6, #1
   1ca44:	cmp	r4, #0
   1ca48:	bne	1ca10 <argp_error@@Base+0x26c>
   1ca4c:	ldr	r3, [sp, #12]
   1ca50:	ldr	fp, [sp, #88]	; 0x58
   1ca54:	mov	r0, sl
   1ca58:	mov	r1, r8
   1ca5c:	mov	r9, r4
   1ca60:	mov	sl, r4
   1ca64:	mov	r8, r3
   1ca68:	mvn	r2, #0
   1ca6c:	str	r4, [sp, #36]	; 0x24
   1ca70:	str	r4, [sp, #16]
   1ca74:	str	r2, [sp, #32]
   1ca78:	mov	r2, r5
   1ca7c:	bl	116a0 <strncmp@plt>
   1ca80:	cmp	r0, #0
   1ca84:	bne	1caa4 <argp_error@@Base+0x300>
   1ca88:	cmp	r9, #0
   1ca8c:	beq	1cd24 <argp_error@@Base+0x580>
   1ca90:	ldr	r3, [sp, #84]	; 0x54
   1ca94:	cmp	r3, #0
   1ca98:	beq	1cb6c <argp_error@@Base+0x3c8>
   1ca9c:	cmp	r4, #0
   1caa0:	beq	1cba0 <argp_error@@Base+0x3fc>
   1caa4:	ldr	r0, [r8, #16]!
   1caa8:	add	sl, sl, #1
   1caac:	cmp	r0, #0
   1cab0:	beq	1cbd4 <argp_error@@Base+0x430>
   1cab4:	ldr	r1, [fp, #20]
   1cab8:	b	1ca78 <argp_error@@Base+0x2d4>
   1cabc:	cmp	r9, #0
   1cac0:	beq	1ccb4 <argp_error@@Base+0x510>
   1cac4:	ldr	r6, [sp, #32]
   1cac8:	ldr	r3, [sp, #88]	; 0x58
   1cacc:	ldr	r0, [sp, #88]	; 0x58
   1cad0:	mov	r1, #0
   1cad4:	ldr	r2, [r3]
   1cad8:	str	r1, [r0, #20]
   1cadc:	add	r3, r2, #1
   1cae0:	str	r3, [r0]
   1cae4:	ldrb	r1, [r7]
   1cae8:	cmp	r1, #0
   1caec:	bne	1cb2c <argp_error@@Base+0x388>
   1caf0:	ldr	r1, [r9, #4]
   1caf4:	cmp	r1, #1
   1caf8:	beq	1cd30 <argp_error@@Base+0x58c>
   1cafc:	ldr	r3, [sp, #80]	; 0x50
   1cb00:	ldr	r2, [r9, #8]
   1cb04:	cmp	r3, #0
   1cb08:	strne	r6, [r3]
   1cb0c:	cmp	r2, #0
   1cb10:	movne	r3, #0
   1cb14:	ldreq	r3, [r9, #12]
   1cb18:	ldrne	r1, [r9, #12]
   1cb1c:	strne	r1, [r2]
   1cb20:	mov	r0, r3
   1cb24:	add	sp, sp, #44	; 0x2c
   1cb28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb2c:	ldr	r3, [r9, #4]
   1cb30:	cmp	r3, #0
   1cb34:	movne	r3, r0
   1cb38:	addne	r7, r7, #1
   1cb3c:	strne	r7, [r3, #12]
   1cb40:	bne	1cafc <argp_error@@Base+0x358>
   1cb44:	ldr	r3, [sp, #92]	; 0x5c
   1cb48:	cmp	r3, #0
   1cb4c:	bne	1cc7c <argp_error@@Base+0x4d8>
   1cb50:	ldr	r1, [sp, #88]	; 0x58
   1cb54:	ldr	r2, [r9, #12]
   1cb58:	mov	r3, #63	; 0x3f
   1cb5c:	str	r2, [r1, #8]
   1cb60:	mov	r0, r3
   1cb64:	add	sp, sp, #44	; 0x2c
   1cb68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb6c:	ldr	r2, [r9, #4]
   1cb70:	ldr	r3, [r8, #4]
   1cb74:	cmp	r2, r3
   1cb78:	bne	1ca9c <argp_error@@Base+0x2f8>
   1cb7c:	ldr	r2, [r9, #8]
   1cb80:	ldr	r3, [r8, #8]
   1cb84:	cmp	r2, r3
   1cb88:	bne	1ca9c <argp_error@@Base+0x2f8>
   1cb8c:	ldr	r2, [r9, #12]
   1cb90:	ldr	r3, [r8, #12]
   1cb94:	cmp	r2, r3
   1cb98:	bne	1ca9c <argp_error@@Base+0x2f8>
   1cb9c:	b	1caa4 <argp_error@@Base+0x300>
   1cba0:	ldr	r3, [sp, #92]	; 0x5c
   1cba4:	cmp	r3, #0
   1cba8:	ldr	r3, [sp, #16]
   1cbac:	beq	1cc6c <argp_error@@Base+0x4c8>
   1cbb0:	cmp	r3, #0
   1cbb4:	beq	1ce88 <argp_error@@Base+0x6e4>
   1cbb8:	ldr	r3, [sp, #16]
   1cbbc:	ldr	r0, [r8, #16]!
   1cbc0:	mov	r2, #1
   1cbc4:	cmp	r0, #0
   1cbc8:	strb	r2, [r3, sl]
   1cbcc:	add	sl, sl, #1
   1cbd0:	bne	1cab4 <argp_error@@Base+0x310>
   1cbd4:	ldr	r3, [sp, #16]
   1cbd8:	cmp	r3, #0
   1cbdc:	cmpeq	r4, #0
   1cbe0:	beq	1cabc <argp_error@@Base+0x318>
   1cbe4:	ldr	r3, [sp, #92]	; 0x5c
   1cbe8:	cmp	r3, #0
   1cbec:	beq	1cd6c <argp_error@@Base+0x5c8>
   1cbf0:	cmp	r4, #0
   1cbf4:	bne	1cdf4 <argp_error@@Base+0x650>
   1cbf8:	ldr	r5, [pc, #716]	; 1cecc <argp_error@@Base+0x728>
   1cbfc:	ldr	r8, [sp, #16]
   1cc00:	ldr	r7, [pc, #712]	; 1ced0 <argp_error@@Base+0x72c>
   1cc04:	ldr	r0, [r5]
   1cc08:	bl	11634 <flockfile@plt>
   1cc0c:	ldr	r3, [sp, #20]
   1cc10:	ldr	r0, [r5]
   1cc14:	ldr	r1, [pc, #696]	; 1ced4 <argp_error@@Base+0x730>
   1cc18:	ldr	r2, [r3]
   1cc1c:	ldr	r3, [sp, #88]	; 0x58
   1cc20:	add	r6, r8, r6
   1cc24:	ldr	r3, [r3, #20]
   1cc28:	str	r3, [sp]
   1cc2c:	ldr	r3, [sp, #96]	; 0x60
   1cc30:	bl	1155c <fprintf@plt>
   1cc34:	ldr	r9, [sp, #12]
   1cc38:	b	1cc48 <argp_error@@Base+0x4a4>
   1cc3c:	cmp	r8, r6
   1cc40:	add	r4, r4, #1
   1cc44:	beq	1cd58 <argp_error@@Base+0x5b4>
   1cc48:	ldrb	r3, [r8], #1
   1cc4c:	cmp	r3, #0
   1cc50:	beq	1cc3c <argp_error@@Base+0x498>
   1cc54:	ldr	r3, [r9, r4, lsl #4]
   1cc58:	ldr	r2, [sp, #96]	; 0x60
   1cc5c:	mov	r1, r7
   1cc60:	ldr	r0, [r5]
   1cc64:	bl	1155c <fprintf@plt>
   1cc68:	b	1cc3c <argp_error@@Base+0x498>
   1cc6c:	cmp	r3, #0
   1cc70:	mov	r4, #1
   1cc74:	bne	1cbb8 <argp_error@@Base+0x414>
   1cc78:	b	1caa4 <argp_error@@Base+0x300>
   1cc7c:	ldr	r3, [sp, #20]
   1cc80:	ldr	r1, [pc, #580]	; 1cecc <argp_error@@Base+0x728>
   1cc84:	ldr	r2, [r3]
   1cc88:	ldr	r3, [r9]
   1cc8c:	ldr	r0, [r1]
   1cc90:	str	r3, [sp]
   1cc94:	ldr	r1, [pc, #572]	; 1ced8 <argp_error@@Base+0x734>
   1cc98:	ldr	r3, [sp, #96]	; 0x60
   1cc9c:	bl	1155c <fprintf@plt>
   1cca0:	ldr	r1, [sp, #88]	; 0x58
   1cca4:	ldr	r2, [r9, #12]
   1cca8:	mov	r3, #63	; 0x3f
   1ccac:	str	r2, [r1, #8]
   1ccb0:	b	1cb60 <argp_error@@Base+0x3bc>
   1ccb4:	ldr	r3, [sp, #84]	; 0x54
   1ccb8:	cmp	r3, #0
   1ccbc:	bne	1ce48 <argp_error@@Base+0x6a4>
   1ccc0:	ldr	r3, [sp, #92]	; 0x5c
   1ccc4:	cmp	r3, #0
   1ccc8:	beq	1ccf4 <argp_error@@Base+0x550>
   1cccc:	ldr	r3, [sp, #20]
   1ccd0:	ldr	r1, [pc, #500]	; 1cecc <argp_error@@Base+0x728>
   1ccd4:	ldr	r2, [r3]
   1ccd8:	ldr	r3, [sp, #88]	; 0x58
   1ccdc:	ldr	r0, [r1]
   1cce0:	ldr	r1, [pc, #500]	; 1cedc <argp_error@@Base+0x738>
   1cce4:	ldr	r3, [r3, #20]
   1cce8:	str	r3, [sp]
   1ccec:	ldr	r3, [sp, #96]	; 0x60
   1ccf0:	bl	1155c <fprintf@plt>
   1ccf4:	ldr	r3, [sp, #88]	; 0x58
   1ccf8:	ldr	r1, [sp, #88]	; 0x58
   1ccfc:	mov	r2, #0
   1cd00:	ldr	r3, [r3]
   1cd04:	str	r2, [r1, #20]
   1cd08:	add	r3, r3, #1
   1cd0c:	str	r3, [r1]
   1cd10:	mov	r3, #63	; 0x3f
   1cd14:	mov	r0, r3
   1cd18:	str	r2, [r1, #8]
   1cd1c:	add	sp, sp, #44	; 0x2c
   1cd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd24:	str	sl, [sp, #32]
   1cd28:	mov	r9, r8
   1cd2c:	b	1caa4 <argp_error@@Base+0x300>
   1cd30:	ldr	r1, [sp, #24]
   1cd34:	cmp	r3, r1
   1cd38:	bge	1cdc4 <argp_error@@Base+0x620>
   1cd3c:	ldr	r1, [sp, #20]
   1cd40:	add	r2, r2, #2
   1cd44:	ldr	r3, [r1, r3, lsl #2]
   1cd48:	ldr	r1, [sp, #88]	; 0x58
   1cd4c:	str	r3, [r1, #12]
   1cd50:	str	r2, [r1]
   1cd54:	b	1cafc <argp_error@@Base+0x358>
   1cd58:	ldr	r1, [r5]
   1cd5c:	mov	r0, #10
   1cd60:	bl	11610 <fputc@plt>
   1cd64:	ldr	r0, [r5]
   1cd68:	bl	11460 <funlockfile@plt>
   1cd6c:	ldr	r3, [sp, #36]	; 0x24
   1cd70:	cmp	r3, #0
   1cd74:	beq	1cd80 <argp_error@@Base+0x5dc>
   1cd78:	ldr	r0, [sp, #16]
   1cd7c:	bl	182f0 <argp_parse@@Base+0xe98>
   1cd80:	ldr	r3, [sp, #88]	; 0x58
   1cd84:	ldr	r4, [r3, #20]
   1cd88:	mov	r0, r4
   1cd8c:	bl	11544 <strlen@plt>
   1cd90:	ldr	r3, [sp, #88]	; 0x58
   1cd94:	ldr	r1, [sp, #88]	; 0x58
   1cd98:	mov	r2, #0
   1cd9c:	ldr	r3, [r3]
   1cda0:	str	r2, [r1, #8]
   1cda4:	add	r3, r3, #1
   1cda8:	str	r3, [r1]
   1cdac:	mov	r3, #63	; 0x3f
   1cdb0:	add	r0, r4, r0
   1cdb4:	str	r0, [r1, #20]
   1cdb8:	mov	r0, r3
   1cdbc:	add	sp, sp, #44	; 0x2c
   1cdc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cdc4:	ldr	r3, [sp, #92]	; 0x5c
   1cdc8:	cmp	r3, #0
   1cdcc:	bne	1ce20 <argp_error@@Base+0x67c>
   1cdd0:	ldr	r2, [sp, #88]	; 0x58
   1cdd4:	ldr	r3, [r9, #12]
   1cdd8:	str	r3, [r2, #8]
   1cddc:	ldr	r3, [sp, #28]
   1cde0:	ldrb	r3, [r3]
   1cde4:	cmp	r3, #58	; 0x3a
   1cde8:	movne	r3, #63	; 0x3f
   1cdec:	moveq	r3, #58	; 0x3a
   1cdf0:	b	1cb20 <argp_error@@Base+0x37c>
   1cdf4:	ldr	r3, [sp, #20]
   1cdf8:	ldr	r1, [pc, #204]	; 1cecc <argp_error@@Base+0x728>
   1cdfc:	ldr	r2, [r3]
   1ce00:	ldr	r3, [sp, #88]	; 0x58
   1ce04:	ldr	r0, [r1]
   1ce08:	ldr	r1, [pc, #208]	; 1cee0 <argp_error@@Base+0x73c>
   1ce0c:	ldr	r3, [r3, #20]
   1ce10:	str	r3, [sp]
   1ce14:	ldr	r3, [sp, #96]	; 0x60
   1ce18:	bl	1155c <fprintf@plt>
   1ce1c:	b	1cd6c <argp_error@@Base+0x5c8>
   1ce20:	ldr	r3, [sp, #20]
   1ce24:	ldr	r1, [pc, #160]	; 1cecc <argp_error@@Base+0x728>
   1ce28:	ldr	r2, [r3]
   1ce2c:	ldr	r3, [r9]
   1ce30:	ldr	r0, [r1]
   1ce34:	str	r3, [sp]
   1ce38:	ldr	r1, [pc, #164]	; 1cee4 <argp_error@@Base+0x740>
   1ce3c:	ldr	r3, [sp, #96]	; 0x60
   1ce40:	bl	1155c <fprintf@plt>
   1ce44:	b	1cdd0 <argp_error@@Base+0x62c>
   1ce48:	ldr	r3, [sp, #88]	; 0x58
   1ce4c:	ldr	r2, [sp, #20]
   1ce50:	ldr	r3, [r3]
   1ce54:	ldr	r3, [r2, r3, lsl #2]
   1ce58:	ldrb	r3, [r3, #1]
   1ce5c:	cmp	r3, #45	; 0x2d
   1ce60:	beq	1ccc0 <argp_error@@Base+0x51c>
   1ce64:	ldr	r3, [sp, #88]	; 0x58
   1ce68:	ldr	r0, [sp, #28]
   1ce6c:	ldr	r3, [r3, #20]
   1ce70:	ldrb	r1, [r3]
   1ce74:	bl	11550 <strchr@plt>
   1ce78:	cmp	r0, #0
   1ce7c:	beq	1ccc0 <argp_error@@Base+0x51c>
   1ce80:	mvn	r3, #0
   1ce84:	b	1cb20 <argp_error@@Base+0x37c>
   1ce88:	mov	r0, r6
   1ce8c:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1ce90:	subs	r3, r0, #0
   1ce94:	str	r3, [sp, #16]
   1ce98:	beq	1cec4 <argp_error@@Base+0x720>
   1ce9c:	mov	r2, r6
   1cea0:	mov	r1, #0
   1cea4:	bl	11598 <memset@plt>
   1cea8:	mov	r3, #1
   1ceac:	str	r3, [sp, #36]	; 0x24
   1ceb0:	ldr	r2, [sp, #32]
   1ceb4:	ldr	r3, [sp, #16]
   1ceb8:	mov	r1, #1
   1cebc:	strb	r1, [r3, r2]
   1cec0:	b	1cbb8 <argp_error@@Base+0x414>
   1cec4:	mov	r4, #1
   1cec8:	b	1caa4 <argp_error@@Base+0x300>
   1cecc:	andeq	r2, r3, r8, asr #22
   1ced0:	andeq	r1, r2, r4, lsr #10
   1ced4:	strdeq	r1, [r2], -r4
   1ced8:	andeq	r1, r2, ip, asr #10
   1cedc:	andeq	r1, r2, ip, lsr #10
   1cee0:	ldrdeq	r1, [r2], -r4
   1cee4:	andeq	r1, r2, ip, ror r5
   1cee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ceec:	sub	sp, sp, #36	; 0x24
   1cef0:	subs	r6, r0, #0
   1cef4:	ldr	r4, [sp, #80]	; 0x50
   1cef8:	ldr	r8, [r4, #4]
   1cefc:	ble	1d0d8 <argp_error@@Base+0x934>
   1cf00:	mov	sl, r3
   1cf04:	ldr	r3, [r4]
   1cf08:	mov	r7, r2
   1cf0c:	mov	r2, #0
   1cf10:	cmp	r3, r2
   1cf14:	mov	r9, r1
   1cf18:	str	r2, [r4, #12]
   1cf1c:	beq	1d160 <argp_error@@Base+0x9bc>
   1cf20:	ldr	r2, [r4, #16]
   1cf24:	cmp	r2, #0
   1cf28:	bne	1d0e4 <argp_error@@Base+0x940>
   1cf2c:	mov	r5, #0
   1cf30:	str	r3, [r4, #32]
   1cf34:	str	r3, [r4, #28]
   1cf38:	str	r5, [r4, #20]
   1cf3c:	ldrb	r3, [r7]
   1cf40:	cmp	r3, #45	; 0x2d
   1cf44:	moveq	r3, #2
   1cf48:	addeq	r7, r7, #1
   1cf4c:	streq	r3, [r4, #24]
   1cf50:	beq	1cf78 <argp_error@@Base+0x7d4>
   1cf54:	cmp	r3, #43	; 0x2b
   1cf58:	streq	r5, [r4, #24]
   1cf5c:	addeq	r7, r7, #1
   1cf60:	beq	1cf78 <argp_error@@Base+0x7d4>
   1cf64:	ldr	r3, [sp, #84]	; 0x54
   1cf68:	cmp	r3, #0
   1cf6c:	beq	1d200 <argp_error@@Base+0xa5c>
   1cf70:	mov	r3, #0
   1cf74:	str	r3, [r4, #24]
   1cf78:	mov	r3, #1
   1cf7c:	str	r3, [r4, #16]
   1cf80:	ldrb	r3, [r7]
   1cf84:	cmp	r3, #58	; 0x3a
   1cf88:	moveq	r8, #0
   1cf8c:	cmp	r5, #0
   1cf90:	beq	1d044 <argp_error@@Base+0x8a0>
   1cf94:	ldrb	r3, [r5]
   1cf98:	cmp	r3, #0
   1cf9c:	beq	1d044 <argp_error@@Base+0x8a0>
   1cfa0:	add	r3, r5, #1
   1cfa4:	str	r3, [r4, #20]
   1cfa8:	ldrb	fp, [r5]
   1cfac:	mov	r0, r7
   1cfb0:	str	r3, [sp, #28]
   1cfb4:	mov	r1, fp
   1cfb8:	bl	11550 <strchr@plt>
   1cfbc:	ldrb	r1, [r5, #1]
   1cfc0:	ldr	r3, [sp, #28]
   1cfc4:	cmp	r1, #0
   1cfc8:	ldreq	r1, [r4]
   1cfcc:	addeq	r1, r1, #1
   1cfd0:	streq	r1, [r4]
   1cfd4:	sub	r1, fp, #58	; 0x3a
   1cfd8:	mov	r2, r0
   1cfdc:	cmp	r2, #0
   1cfe0:	cmpne	r1, #1
   1cfe4:	mov	r0, fp
   1cfe8:	bls	1d130 <argp_error@@Base+0x98c>
   1cfec:	ldrb	r1, [r2]
   1cff0:	cmp	r1, #87	; 0x57
   1cff4:	ldrb	r1, [r2, #1]
   1cff8:	beq	1d284 <argp_error@@Base+0xae0>
   1cffc:	cmp	r1, #58	; 0x3a
   1d000:	bne	1d128 <argp_error@@Base+0x984>
   1d004:	ldrb	r2, [r2, #2]
   1d008:	cmp	r2, #58	; 0x3a
   1d00c:	ldrb	r2, [r5, #1]
   1d010:	beq	1d30c <argp_error@@Base+0xb68>
   1d014:	cmp	r2, #0
   1d018:	bne	1d318 <argp_error@@Base+0xb74>
   1d01c:	ldr	r3, [r4]
   1d020:	cmp	r6, r3
   1d024:	beq	1d3b8 <argp_error@@Base+0xc14>
   1d028:	ldr	r2, [r9, r3, lsl #2]
   1d02c:	add	r3, r3, #1
   1d030:	str	r2, [r4, #12]
   1d034:	str	r3, [r4]
   1d038:	mov	r3, #0
   1d03c:	str	r3, [r4, #20]
   1d040:	b	1d128 <argp_error@@Base+0x984>
   1d044:	ldr	fp, [r4]
   1d048:	ldr	r3, [r4, #32]
   1d04c:	cmp	r3, fp
   1d050:	ldr	r3, [r4, #28]
   1d054:	strgt	fp, [r4, #32]
   1d058:	cmp	fp, r3
   1d05c:	ldr	r3, [r4, #24]
   1d060:	strlt	fp, [r4, #28]
   1d064:	cmp	r3, #1
   1d068:	beq	1d170 <argp_error@@Base+0x9cc>
   1d06c:	cmp	r6, fp
   1d070:	beq	1d1e8 <argp_error@@Base+0xa44>
   1d074:	ldr	r3, [pc, #944]	; 1d42c <argp_error@@Base+0xc88>
   1d078:	ldr	r5, [r9, fp, lsl #2]
   1d07c:	mov	r1, r3
   1d080:	mov	r0, r5
   1d084:	str	r3, [sp, #28]
   1d088:	bl	113a0 <strcmp@plt>
   1d08c:	ldr	r3, [sp, #28]
   1d090:	cmp	r0, #0
   1d094:	bne	1d100 <argp_error@@Base+0x95c>
   1d098:	ldr	r3, [r4, #28]
   1d09c:	ldr	r2, [r4, #32]
   1d0a0:	add	fp, fp, #1
   1d0a4:	cmp	r3, r2
   1d0a8:	str	fp, [r4]
   1d0ac:	beq	1d278 <argp_error@@Base+0xad4>
   1d0b0:	cmp	fp, r2
   1d0b4:	beq	1d0c8 <argp_error@@Base+0x924>
   1d0b8:	mov	r0, r9
   1d0bc:	mov	r1, r4
   1d0c0:	bl	1c8e8 <argp_error@@Base+0x144>
   1d0c4:	ldr	r3, [r4, #28]
   1d0c8:	cmp	r3, r6
   1d0cc:	str	r6, [r4]
   1d0d0:	str	r6, [r4, #32]
   1d0d4:	strne	r3, [r4]
   1d0d8:	mvn	r0, #0
   1d0dc:	add	sp, sp, #36	; 0x24
   1d0e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0e4:	ldrb	r3, [r7]
   1d0e8:	ldr	r5, [r4, #20]
   1d0ec:	sub	r2, r3, #43	; 0x2b
   1d0f0:	tst	r2, #253	; 0xfd
   1d0f4:	ldrbeq	r3, [r7, #1]
   1d0f8:	addeq	r7, r7, #1
   1d0fc:	b	1cf84 <argp_error@@Base+0x7e0>
   1d100:	ldrb	r2, [r5]
   1d104:	cmp	r2, #45	; 0x2d
   1d108:	beq	1d22c <argp_error@@Base+0xa88>
   1d10c:	ldr	r3, [r4, #24]
   1d110:	cmp	r3, #0
   1d114:	beq	1d0d8 <argp_error@@Base+0x934>
   1d118:	mov	r0, #1
   1d11c:	add	fp, fp, #1
   1d120:	str	fp, [r4]
   1d124:	str	r5, [r4, #12]
   1d128:	add	sp, sp, #36	; 0x24
   1d12c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d130:	cmp	r8, #0
   1d134:	beq	1d150 <argp_error@@Base+0x9ac>
   1d138:	ldr	r1, [pc, #752]	; 1d430 <argp_error@@Base+0xc8c>
   1d13c:	ldr	r2, [r9]
   1d140:	mov	r3, fp
   1d144:	ldr	r0, [r1]
   1d148:	ldr	r1, [pc, #740]	; 1d434 <argp_error@@Base+0xc90>
   1d14c:	bl	1155c <fprintf@plt>
   1d150:	mov	r0, #63	; 0x3f
   1d154:	str	fp, [r4, #8]
   1d158:	add	sp, sp, #36	; 0x24
   1d15c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d160:	mov	r2, #1
   1d164:	mov	r3, r2
   1d168:	str	r2, [r4]
   1d16c:	b	1cf2c <argp_error@@Base+0x788>
   1d170:	ldr	r2, [r4, #28]
   1d174:	ldr	r3, [r4, #32]
   1d178:	cmp	r2, r3
   1d17c:	beq	1d2fc <argp_error@@Base+0xb58>
   1d180:	cmp	fp, r3
   1d184:	beq	1d198 <argp_error@@Base+0x9f4>
   1d188:	mov	r1, r4
   1d18c:	mov	r0, r9
   1d190:	bl	1c8e8 <argp_error@@Base+0x144>
   1d194:	ldr	r3, [r4]
   1d198:	cmp	r6, r3
   1d19c:	movle	fp, r3
   1d1a0:	ble	1d1dc <argp_error@@Base+0xa38>
   1d1a4:	add	r1, r9, r3, lsl #2
   1d1a8:	b	1d1bc <argp_error@@Base+0xa18>
   1d1ac:	add	r3, r3, #1
   1d1b0:	cmp	r6, r3
   1d1b4:	str	r3, [r4]
   1d1b8:	beq	1d220 <argp_error@@Base+0xa7c>
   1d1bc:	ldr	r2, [r1], #4
   1d1c0:	ldrb	r0, [r2]
   1d1c4:	cmp	r0, #45	; 0x2d
   1d1c8:	bne	1d1ac <argp_error@@Base+0xa08>
   1d1cc:	ldrb	r2, [r2, #1]
   1d1d0:	cmp	r2, #0
   1d1d4:	beq	1d1ac <argp_error@@Base+0xa08>
   1d1d8:	ldr	fp, [r4]
   1d1dc:	str	r3, [r4, #32]
   1d1e0:	cmp	r6, fp
   1d1e4:	bne	1d074 <argp_error@@Base+0x8d0>
   1d1e8:	ldr	r3, [r4, #28]
   1d1ec:	ldr	r6, [r4, #32]
   1d1f0:	mvn	r0, #0
   1d1f4:	cmp	r3, r6
   1d1f8:	strne	r3, [r4]
   1d1fc:	b	1d0dc <argp_error@@Base+0x938>
   1d200:	ldr	r0, [pc, #560]	; 1d438 <argp_error@@Base+0xc94>
   1d204:	bl	114b4 <getenv@plt>
   1d208:	ldr	r5, [r4, #20]
   1d20c:	cmp	r0, #0
   1d210:	bne	1cf70 <argp_error@@Base+0x7cc>
   1d214:	mov	r3, #1
   1d218:	str	r3, [r4, #24]
   1d21c:	b	1cf78 <argp_error@@Base+0x7d4>
   1d220:	mov	fp, r6
   1d224:	str	r3, [r4, #32]
   1d228:	b	1d1e0 <argp_error@@Base+0xa3c>
   1d22c:	ldrb	r1, [r5, #1]
   1d230:	cmp	r1, #0
   1d234:	beq	1d10c <argp_error@@Base+0x968>
   1d238:	cmp	sl, #0
   1d23c:	beq	1d270 <argp_error@@Base+0xacc>
   1d240:	cmp	r1, #45	; 0x2d
   1d244:	beq	1d37c <argp_error@@Base+0xbd8>
   1d248:	ldr	r3, [sp, #76]	; 0x4c
   1d24c:	cmp	r3, #0
   1d250:	beq	1d270 <argp_error@@Base+0xacc>
   1d254:	ldrb	r3, [r5, #2]
   1d258:	cmp	r3, #0
   1d25c:	bne	1d32c <argp_error@@Base+0xb88>
   1d260:	mov	r0, r7
   1d264:	bl	11550 <strchr@plt>
   1d268:	cmp	r0, #0
   1d26c:	beq	1d32c <argp_error@@Base+0xb88>
   1d270:	add	r5, r5, #1
   1d274:	b	1cfa0 <argp_error@@Base+0x7fc>
   1d278:	mov	r3, fp
   1d27c:	str	fp, [r4, #28]
   1d280:	b	1d0c8 <argp_error@@Base+0x924>
   1d284:	cmp	sl, #0
   1d288:	sub	ip, r1, #59	; 0x3b
   1d28c:	clz	ip, ip
   1d290:	lsr	ip, ip, #5
   1d294:	moveq	ip, #0
   1d298:	cmp	ip, #0
   1d29c:	beq	1cffc <argp_error@@Base+0x858>
   1d2a0:	ldrb	r2, [r5, #1]
   1d2a4:	cmp	r2, #0
   1d2a8:	bne	1d2bc <argp_error@@Base+0xb18>
   1d2ac:	ldr	r3, [r4]
   1d2b0:	cmp	r6, r3
   1d2b4:	ldrne	r3, [r9, r3, lsl #2]
   1d2b8:	beq	1d3d8 <argp_error@@Base+0xc34>
   1d2bc:	str	r3, [r4, #20]
   1d2c0:	ldr	lr, [pc, #372]	; 1d43c <argp_error@@Base+0xc98>
   1d2c4:	ldr	r3, [sp, #72]	; 0x48
   1d2c8:	mov	ip, #0
   1d2cc:	str	r3, [sp]
   1d2d0:	str	r8, [sp, #12]
   1d2d4:	str	r4, [sp, #8]
   1d2d8:	str	lr, [sp, #16]
   1d2dc:	mov	r3, sl
   1d2e0:	str	ip, [r4, #12]
   1d2e4:	mov	r2, r7
   1d2e8:	mov	r1, r9
   1d2ec:	mov	r0, r6
   1d2f0:	str	ip, [sp, #4]
   1d2f4:	bl	1c9a4 <argp_error@@Base+0x200>
   1d2f8:	b	1d128 <argp_error@@Base+0x984>
   1d2fc:	cmp	fp, r3
   1d300:	movne	r3, fp
   1d304:	strne	fp, [r4, #28]
   1d308:	b	1d198 <argp_error@@Base+0x9f4>
   1d30c:	cmp	r2, #0
   1d310:	streq	r2, [r4, #12]
   1d314:	beq	1d038 <argp_error@@Base+0x894>
   1d318:	ldr	r2, [r4]
   1d31c:	str	r3, [r4, #12]
   1d320:	add	r3, r2, #1
   1d324:	str	r3, [r4]
   1d328:	b	1d038 <argp_error@@Base+0x894>
   1d32c:	ldr	r2, [sp, #76]	; 0x4c
   1d330:	add	r5, r5, #1
   1d334:	str	r5, [r4, #20]
   1d338:	ldr	r3, [pc, #256]	; 1d440 <argp_error@@Base+0xc9c>
   1d33c:	str	r2, [sp, #4]
   1d340:	ldr	r2, [sp, #72]	; 0x48
   1d344:	str	r3, [sp, #16]
   1d348:	str	r2, [sp]
   1d34c:	str	r8, [sp, #12]
   1d350:	str	r4, [sp, #8]
   1d354:	mov	r3, sl
   1d358:	mov	r2, r7
   1d35c:	mov	r1, r9
   1d360:	mov	r0, r6
   1d364:	bl	1c9a4 <argp_error@@Base+0x200>
   1d368:	cmn	r0, #1
   1d36c:	bne	1d128 <argp_error@@Base+0x984>
   1d370:	ldr	r3, [r4]
   1d374:	ldr	r5, [r9, r3, lsl #2]
   1d378:	b	1d270 <argp_error@@Base+0xacc>
   1d37c:	add	r5, r5, #2
   1d380:	str	r5, [r4, #20]
   1d384:	str	r3, [sp, #16]
   1d388:	ldr	r3, [sp, #76]	; 0x4c
   1d38c:	str	r8, [sp, #12]
   1d390:	str	r3, [sp, #4]
   1d394:	ldr	r3, [sp, #72]	; 0x48
   1d398:	str	r4, [sp, #8]
   1d39c:	str	r3, [sp]
   1d3a0:	mov	r2, r7
   1d3a4:	mov	r3, sl
   1d3a8:	mov	r1, r9
   1d3ac:	mov	r0, r6
   1d3b0:	bl	1c9a4 <argp_error@@Base+0x200>
   1d3b4:	b	1d128 <argp_error@@Base+0x984>
   1d3b8:	cmp	r8, #0
   1d3bc:	bne	1d410 <argp_error@@Base+0xc6c>
   1d3c0:	str	fp, [r4, #8]
   1d3c4:	ldrb	r0, [r7]
   1d3c8:	cmp	r0, #58	; 0x3a
   1d3cc:	movne	r0, #63	; 0x3f
   1d3d0:	moveq	r0, #58	; 0x3a
   1d3d4:	b	1d038 <argp_error@@Base+0x894>
   1d3d8:	cmp	r8, #0
   1d3dc:	beq	1d3f8 <argp_error@@Base+0xc54>
   1d3e0:	ldr	r1, [pc, #72]	; 1d430 <argp_error@@Base+0xc8c>
   1d3e4:	ldr	r2, [r9]
   1d3e8:	mov	r3, fp
   1d3ec:	ldr	r0, [r1]
   1d3f0:	ldr	r1, [pc, #76]	; 1d444 <argp_error@@Base+0xca0>
   1d3f4:	bl	1155c <fprintf@plt>
   1d3f8:	str	fp, [r4, #8]
   1d3fc:	ldrb	r0, [r7]
   1d400:	cmp	r0, #58	; 0x3a
   1d404:	movne	r0, #63	; 0x3f
   1d408:	moveq	r0, #58	; 0x3a
   1d40c:	b	1d128 <argp_error@@Base+0x984>
   1d410:	ldr	r1, [pc, #24]	; 1d430 <argp_error@@Base+0xc8c>
   1d414:	ldr	r2, [r9]
   1d418:	mov	r3, fp
   1d41c:	ldr	r0, [r1]
   1d420:	ldr	r1, [pc, #28]	; 1d444 <argp_error@@Base+0xca0>
   1d424:	bl	1155c <fprintf@plt>
   1d428:	b	1d3c0 <argp_error@@Base+0xc1c>
   1d42c:	andeq	r0, r2, r0, lsl #25
   1d430:	andeq	r2, r3, r8, asr #22
   1d434:			; <UNDEFINED> instruction: 0x000215b8
   1d438:	andeq	r1, r2, r4, lsr #11
   1d43c:	andeq	r1, r2, r0, lsl #12
   1d440:			; <UNDEFINED> instruction: 0x000215b4
   1d444:	ldrdeq	r1, [r2], -r4
   1d448:	push	{r4, r5, r6, lr}
   1d44c:	sub	sp, sp, #16
   1d450:	ldr	r5, [pc, #84]	; 1d4ac <argp_error@@Base+0xd08>
   1d454:	ldr	ip, [sp, #32]
   1d458:	ldr	r4, [pc, #80]	; 1d4b0 <argp_error@@Base+0xd0c>
   1d45c:	str	ip, [sp]
   1d460:	ldr	ip, [sp, #40]	; 0x28
   1d464:	ldr	r6, [sp, #36]	; 0x24
   1d468:	ldr	lr, [r5]
   1d46c:	str	ip, [sp, #12]
   1d470:	ldr	ip, [r5, #4]
   1d474:	str	r4, [sp, #8]
   1d478:	str	r6, [sp, #4]
   1d47c:	str	ip, [r4, #4]
   1d480:	str	lr, [r4]
   1d484:	bl	1cee8 <argp_error@@Base+0x744>
   1d488:	ldr	r3, [pc, #36]	; 1d4b4 <argp_error@@Base+0xd10>
   1d48c:	ldr	ip, [r4]
   1d490:	ldr	r1, [r4, #8]
   1d494:	ldr	r2, [r4, #12]
   1d498:	str	ip, [r5]
   1d49c:	str	r1, [r5, #8]
   1d4a0:	str	r2, [r3]
   1d4a4:	add	sp, sp, #16
   1d4a8:	pop	{r4, r5, r6, pc}
   1d4ac:	andeq	r2, r3, ip, lsr #22
   1d4b0:	andeq	r2, r3, r8, asr #23
   1d4b4:	andeq	r2, r3, r8, lsr #24
   1d4b8:	push	{lr}		; (str lr, [sp, #-4]!)
   1d4bc:	mov	r3, #0
   1d4c0:	sub	sp, sp, #20
   1d4c4:	mov	ip, #1
   1d4c8:	str	r3, [sp]
   1d4cc:	stmib	sp, {r3, ip}
   1d4d0:	bl	1d448 <argp_error@@Base+0xca4>
   1d4d4:	add	sp, sp, #20
   1d4d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4dc:	push	{r4, r5, r6, lr}
   1d4e0:	subs	r4, r2, #0
   1d4e4:	mov	r6, r0
   1d4e8:	mov	r5, r1
   1d4ec:	beq	1d518 <argp_error@@Base+0xd74>
   1d4f0:	mov	r1, r4
   1d4f4:	mvn	r0, #0
   1d4f8:	bl	1dcf0 <argp_error@@Base+0x154c>
   1d4fc:	cmp	r0, r5
   1d500:	bcs	1d518 <argp_error@@Base+0xd74>
   1d504:	bl	11568 <__errno_location@plt>
   1d508:	mov	r3, #12
   1d50c:	str	r3, [r0]
   1d510:	mov	r0, #0
   1d514:	pop	{r4, r5, r6, pc}
   1d518:	mul	r1, r5, r4
   1d51c:	mov	r0, r6
   1d520:	pop	{r4, r5, r6, lr}
   1d524:	b	1954c <_obstack_memory_used@@Base+0xe0c>
   1d528:	push	{r4, r5, r6, r7, r8, lr}
   1d52c:	mov	r8, r0
   1d530:	mov	r0, #36	; 0x24
   1d534:	mov	r7, r1
   1d538:	mov	r6, r2
   1d53c:	mov	r5, r3
   1d540:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1d544:	subs	r4, r0, #0
   1d548:	beq	1d58c <argp_error@@Base+0xde8>
   1d54c:	mov	r0, #0
   1d550:	str	r5, [r4, #12]
   1d554:	str	r0, [r4, #20]
   1d558:	str	r0, [r4, #16]
   1d55c:	str	r8, [r4]
   1d560:	str	r7, [r4, #4]
   1d564:	str	r6, [r4, #8]
   1d568:	mov	r0, #200	; 0xc8
   1d56c:	bl	19520 <_obstack_memory_used@@Base+0xde0>
   1d570:	cmp	r0, #0
   1d574:	addne	r3, r0, #200	; 0xc8
   1d578:	mov	r5, r0
   1d57c:	str	r0, [r4, #24]
   1d580:	strne	r0, [r4, #28]
   1d584:	strne	r3, [r4, #32]
   1d588:	beq	1d594 <argp_error@@Base+0xdf0>
   1d58c:	mov	r0, r4
   1d590:	pop	{r4, r5, r6, r7, r8, pc}
   1d594:	mov	r0, r4
   1d598:	bl	182f0 <argp_parse@@Base+0xe98>
   1d59c:	mov	r4, r5
   1d5a0:	b	1d58c <argp_error@@Base+0xde8>
   1d5a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5a8:	mov	r7, r0
   1d5ac:	ldr	r6, [r0, #24]
   1d5b0:	ldr	r3, [r0, #16]
   1d5b4:	ldr	fp, [r0, #28]
   1d5b8:	sub	sp, sp, #12
   1d5bc:	add	r6, r6, r3
   1d5c0:	mov	r9, #32
   1d5c4:	cmp	r6, fp
   1d5c8:	bcs	1d6a4 <argp_error@@Base+0xf00>
   1d5cc:	ldr	r8, [r7, #20]
   1d5d0:	cmp	r8, #0
   1d5d4:	bne	1d644 <argp_error@@Base+0xea0>
   1d5d8:	ldr	r4, [r7, #4]
   1d5dc:	cmp	r4, #0
   1d5e0:	beq	1d8e8 <argp_error@@Base+0x1144>
   1d5e4:	ldr	r2, [r7, #32]
   1d5e8:	add	r3, fp, r4
   1d5ec:	cmp	r2, r3
   1d5f0:	bls	1d604 <argp_error@@Base+0xe60>
   1d5f4:	b	1da30 <argp_error@@Base+0x128c>
   1d5f8:	add	r8, r8, #1
   1d5fc:	cmp	r4, r8
   1d600:	beq	1d638 <argp_error@@Base+0xe94>
   1d604:	ldr	r0, [r7]
   1d608:	ldr	r3, [r0, #20]
   1d60c:	ldr	r2, [r0, #24]
   1d610:	add	r1, r3, #1
   1d614:	cmp	r3, r2
   1d618:	strcc	r1, [r0, #20]
   1d61c:	strbcc	r9, [r3]
   1d620:	bcc	1d5f8 <argp_error@@Base+0xe54>
   1d624:	mov	r1, r9
   1d628:	add	r8, r8, #1
   1d62c:	bl	115e0 <__overflow@plt>
   1d630:	cmp	r4, r8
   1d634:	bne	1d604 <argp_error@@Base+0xe60>
   1d638:	ldr	fp, [r7, #28]
   1d63c:	mov	r8, r4
   1d640:	str	r4, [r7, #20]
   1d644:	sub	sl, fp, r6
   1d648:	mov	r2, sl
   1d64c:	mov	r1, #10
   1d650:	mov	r0, r6
   1d654:	bl	115bc <memchr@plt>
   1d658:	cmp	r8, #0
   1d65c:	movlt	r8, #0
   1d660:	movlt	r3, r8
   1d664:	str	r6, [sp]
   1d668:	mov	r4, r0
   1d66c:	strlt	r3, [r7, #20]
   1d670:	cmp	r4, #0
   1d674:	beq	1d90c <argp_error@@Base+0x1168>
   1d678:	sub	r2, r4, r6
   1d67c:	ldr	r3, [r7, #8]
   1d680:	add	r2, r2, r8
   1d684:	cmp	r2, r3
   1d688:	bge	1d6b8 <argp_error@@Base+0xf14>
   1d68c:	ldr	fp, [r7, #28]
   1d690:	add	r6, r4, #1
   1d694:	mov	r3, #0
   1d698:	cmp	r6, fp
   1d69c:	str	r3, [r7, #20]
   1d6a0:	bcc	1d5cc <argp_error@@Base+0xe28>
   1d6a4:	ldr	r3, [r7, #24]
   1d6a8:	sub	r3, fp, r3
   1d6ac:	str	r3, [r7, #16]
   1d6b0:	add	sp, sp, #12
   1d6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6b8:	ldr	r2, [r7, #12]
   1d6bc:	sub	r5, r3, #1
   1d6c0:	cmp	r2, #0
   1d6c4:	str	r2, [sp, #4]
   1d6c8:	blt	1d9c4 <argp_error@@Base+0x1220>
   1d6cc:	add	r5, r5, #1
   1d6d0:	sub	r8, r5, r8
   1d6d4:	adds	r8, r6, r8
   1d6d8:	bcs	1d944 <argp_error@@Base+0x11a0>
   1d6dc:	bl	11520 <__ctype_b_loc@plt>
   1d6e0:	mov	r3, r8
   1d6e4:	ldr	r0, [r0]
   1d6e8:	b	1d6f4 <argp_error@@Base+0xf50>
   1d6ec:	cmp	r3, r6
   1d6f0:	bcc	1d948 <argp_error@@Base+0x11a4>
   1d6f4:	mov	r1, r3
   1d6f8:	sub	r3, r3, #1
   1d6fc:	ldrb	r2, [r1]
   1d700:	mov	r5, r3
   1d704:	lsl	r2, r2, #1
   1d708:	ldrh	r2, [r0, r2]
   1d70c:	tst	r2, #1
   1d710:	beq	1d6ec <argp_error@@Base+0xf48>
   1d714:	add	r5, r1, #1
   1d718:	cmp	r5, r6
   1d71c:	bls	1d95c <argp_error@@Base+0x11b8>
   1d720:	cmp	r1, r6
   1d724:	bcc	1d954 <argp_error@@Base+0x11b0>
   1d728:	mov	r1, r3
   1d72c:	sub	r8, r6, #1
   1d730:	b	1d74c <argp_error@@Base+0xfa8>
   1d734:	ldrb	r3, [r1]
   1d738:	sub	r1, r1, #1
   1d73c:	lsl	r3, r3, #1
   1d740:	ldrh	r3, [r0, r3]
   1d744:	tst	r3, #1
   1d748:	beq	1da74 <argp_error@@Base+0x12d0>
   1d74c:	cmp	r8, r1
   1d750:	mov	r2, r1
   1d754:	bne	1d734 <argp_error@@Base+0xf90>
   1d758:	add	r8, r8, #1
   1d75c:	add	r3, sl, #1
   1d760:	add	r3, r6, r3
   1d764:	cmp	r5, r3
   1d768:	beq	1d850 <argp_error@@Base+0x10ac>
   1d76c:	add	r3, r8, #1
   1d770:	ldr	r1, [sp, #4]
   1d774:	sub	r2, r5, r3
   1d778:	cmp	r2, r1
   1d77c:	bge	1d86c <argp_error@@Base+0x10c8>
   1d780:	cmp	r5, fp
   1d784:	bcs	1d864 <argp_error@@Base+0x10c0>
   1d788:	ldr	r3, [r7, #32]
   1d78c:	ldr	r2, [sp, #4]
   1d790:	sub	r3, r3, fp
   1d794:	add	r0, r2, #1
   1d798:	cmp	r3, r0
   1d79c:	bgt	1daa4 <argp_error@@Base+0x1300>
   1d7a0:	ldr	r0, [r7, #24]
   1d7a4:	cmp	r8, r0
   1d7a8:	bls	1d7bc <argp_error@@Base+0x1018>
   1d7ac:	sub	r2, r8, r0
   1d7b0:	ldr	r3, [r7]
   1d7b4:	mov	r1, #1
   1d7b8:	bl	11418 <fwrite_unlocked@plt>
   1d7bc:	ldr	r0, [r7]
   1d7c0:	ldr	r2, [r0, #24]
   1d7c4:	ldr	r3, [r0, #20]
   1d7c8:	cmp	r3, r2
   1d7cc:	addcc	r2, r3, #1
   1d7d0:	strcc	r2, [r0, #20]
   1d7d4:	movcc	r2, #10
   1d7d8:	strbcc	r2, [r3]
   1d7dc:	bcs	1dae4 <argp_error@@Base+0x1340>
   1d7e0:	ldr	r6, [r7, #24]
   1d7e4:	ldr	r3, [sp]
   1d7e8:	sub	r2, r5, r6
   1d7ec:	sub	r3, r3, r6
   1d7f0:	add	sl, sl, r3
   1d7f4:	mov	fp, r2
   1d7f8:	mov	r4, r6
   1d7fc:	ldr	r3, [r7, #12]
   1d800:	cmp	r3, r2
   1d804:	bgt	1d88c <argp_error@@Base+0x10e8>
   1d808:	cmp	r3, #0
   1d80c:	movgt	r2, r6
   1d810:	ble	1d82c <argp_error@@Base+0x1088>
   1d814:	strb	r9, [r2], #1
   1d818:	ldr	r3, [r7, #12]
   1d81c:	sub	r1, r2, r6
   1d820:	cmp	r3, r1
   1d824:	bgt	1d814 <argp_error@@Base+0x1070>
   1d828:	mov	r6, r2
   1d82c:	cmp	r6, r5
   1d830:	bcc	1da14 <argp_error@@Base+0x1270>
   1d834:	sub	fp, sl, fp
   1d838:	cmp	r3, #0
   1d83c:	add	fp, r6, fp
   1d840:	mvneq	r3, #0
   1d844:	str	fp, [r7, #28]
   1d848:	str	r3, [r7, #20]
   1d84c:	b	1d5c4 <argp_error@@Base+0xe20>
   1d850:	ldr	r3, [r7, #32]
   1d854:	ldr	r2, [sp, #4]
   1d858:	sub	r3, r3, r8
   1d85c:	cmp	r3, r2
   1d860:	ble	1d780 <argp_error@@Base+0xfdc>
   1d864:	add	r3, r8, #1
   1d868:	sub	r2, r5, r3
   1d86c:	sub	fp, r5, r6
   1d870:	mov	r4, r6
   1d874:	mov	r6, r3
   1d878:	mov	r3, #10
   1d87c:	strb	r3, [r8]
   1d880:	ldr	r3, [r7, #12]
   1d884:	cmp	r3, r2
   1d888:	ble	1d808 <argp_error@@Base+0x1064>
   1d88c:	add	r2, sl, #1
   1d890:	add	r2, r4, r2
   1d894:	cmp	r5, r2
   1d898:	beq	1da90 <argp_error@@Base+0x12ec>
   1d89c:	cmp	r3, #0
   1d8a0:	movgt	r8, #0
   1d8a4:	bgt	1d8bc <argp_error@@Base+0x1118>
   1d8a8:	b	1d82c <argp_error@@Base+0x1088>
   1d8ac:	ldr	r3, [r7, #12]
   1d8b0:	add	r8, r8, #1
   1d8b4:	cmp	r3, r8
   1d8b8:	ble	1d82c <argp_error@@Base+0x1088>
   1d8bc:	ldr	r0, [r7]
   1d8c0:	ldr	r3, [r0, #20]
   1d8c4:	ldr	r2, [r0, #24]
   1d8c8:	add	r1, r3, #1
   1d8cc:	cmp	r3, r2
   1d8d0:	strcc	r1, [r0, #20]
   1d8d4:	strbcc	r9, [r3]
   1d8d8:	bcc	1d8ac <argp_error@@Base+0x1108>
   1d8dc:	mov	r1, r9
   1d8e0:	bl	115e0 <__overflow@plt>
   1d8e4:	b	1d8ac <argp_error@@Base+0x1108>
   1d8e8:	sub	sl, fp, r6
   1d8ec:	mov	r2, sl
   1d8f0:	mov	r1, #10
   1d8f4:	mov	r0, r6
   1d8f8:	bl	115bc <memchr@plt>
   1d8fc:	str	r6, [sp]
   1d900:	mov	r4, r0
   1d904:	cmp	r4, #0
   1d908:	bne	1d678 <argp_error@@Base+0xed4>
   1d90c:	ldr	r5, [r7, #8]
   1d910:	add	r3, r8, sl
   1d914:	cmp	r3, r5
   1d918:	bcc	1db08 <argp_error@@Base+0x1364>
   1d91c:	ldr	r2, [r7, #12]
   1d920:	sub	r5, r5, #1
   1d924:	cmp	r2, #0
   1d928:	str	r2, [sp, #4]
   1d92c:	blt	1daf4 <argp_error@@Base+0x1350>
   1d930:	add	r5, r5, #1
   1d934:	sub	r8, r5, r8
   1d938:	adds	r8, r6, r8
   1d93c:	mov	r4, fp
   1d940:	bcc	1d6dc <argp_error@@Base+0xf38>
   1d944:	mov	r5, r8
   1d948:	add	r5, r5, #1
   1d94c:	cmp	r5, r6
   1d950:	bls	1d95c <argp_error@@Base+0x11b8>
   1d954:	mov	r8, r5
   1d958:	b	1d75c <argp_error@@Base+0xfb8>
   1d95c:	cmp	r8, r4
   1d960:	bcs	1d998 <argp_error@@Base+0x11f4>
   1d964:	add	r5, r8, #1
   1d968:	b	1d98c <argp_error@@Base+0x11e8>
   1d96c:	bl	11520 <__ctype_b_loc@plt>
   1d970:	ldrb	r3, [r5]
   1d974:	add	r5, r5, #1
   1d978:	lsl	r3, r3, #1
   1d97c:	ldr	r2, [r0]
   1d980:	ldrh	r3, [r2, r3]
   1d984:	tst	r3, #1
   1d988:	bne	1d9a8 <argp_error@@Base+0x1204>
   1d98c:	cmp	r5, r4
   1d990:	mov	r8, r5
   1d994:	bne	1d96c <argp_error@@Base+0x11c8>
   1d998:	cmp	r8, r4
   1d99c:	beq	1da7c <argp_error@@Base+0x12d8>
   1d9a0:	bl	11520 <__ctype_b_loc@plt>
   1d9a4:	ldr	r2, [r0]
   1d9a8:	mov	r5, r8
   1d9ac:	ldrb	r3, [r5, #1]!
   1d9b0:	lsl	r3, r3, #1
   1d9b4:	ldrh	r3, [r2, r3]
   1d9b8:	tst	r3, #1
   1d9bc:	bne	1d9ac <argp_error@@Base+0x1208>
   1d9c0:	b	1d75c <argp_error@@Base+0xfb8>
   1d9c4:	cmp	r4, fp
   1d9c8:	str	r3, [sp]
   1d9cc:	bcs	1daf0 <argp_error@@Base+0x134c>
   1d9d0:	sub	r0, r5, r8
   1d9d4:	sub	r2, fp, r4
   1d9d8:	add	r0, r6, r0
   1d9dc:	mov	r1, r4
   1d9e0:	bl	113c4 <memmove@plt>
   1d9e4:	ldr	r2, [r7, #20]
   1d9e8:	ldr	fp, [r7, #28]
   1d9ec:	sub	r5, r5, r2
   1d9f0:	add	r5, r6, r5
   1d9f4:	mov	r3, #0
   1d9f8:	sub	r4, r5, r4
   1d9fc:	str	r3, [r7, #20]
   1da00:	ldr	r3, [sp]
   1da04:	sub	fp, fp, r4
   1da08:	add	r6, r6, r3
   1da0c:	str	fp, [r7, #28]
   1da10:	b	1d5c4 <argp_error@@Base+0xe20>
   1da14:	add	r2, r4, sl
   1da18:	sub	r2, r2, r5
   1da1c:	mov	r1, r5
   1da20:	mov	r0, r6
   1da24:	bl	113c4 <memmove@plt>
   1da28:	ldr	r3, [r7, #12]
   1da2c:	b	1d834 <argp_error@@Base+0x1090>
   1da30:	add	r5, r6, r4
   1da34:	sub	r2, fp, r6
   1da38:	mov	r1, r6
   1da3c:	mov	r0, r5
   1da40:	bl	113c4 <memmove@plt>
   1da44:	ldr	r3, [r7, #28]
   1da48:	mov	r0, r6
   1da4c:	add	r3, r3, r4
   1da50:	str	r3, [r7, #28]
   1da54:	mov	r2, r4
   1da58:	mov	r1, r9
   1da5c:	bl	11598 <memset@plt>
   1da60:	mov	r6, r5
   1da64:	ldr	fp, [r7, #28]
   1da68:	mov	r8, r4
   1da6c:	str	r4, [r7, #20]
   1da70:	b	1d644 <argp_error@@Base+0xea0>
   1da74:	add	r8, r2, #1
   1da78:	b	1d75c <argp_error@@Base+0xfb8>
   1da7c:	mov	r3, #0
   1da80:	str	r3, [r7, #20]
   1da84:	add	r6, r8, #1
   1da88:	ldr	fp, [r7, #28]
   1da8c:	b	1d5c4 <argp_error@@Base+0xe20>
   1da90:	ldr	r2, [r7, #32]
   1da94:	sub	r2, r2, r5
   1da98:	cmp	r3, r2
   1da9c:	ble	1d808 <argp_error@@Base+0x1064>
   1daa0:	b	1d89c <argp_error@@Base+0x10f8>
   1daa4:	sub	fp, fp, r5
   1daa8:	mov	r2, fp
   1daac:	mov	r1, r5
   1dab0:	add	r0, r8, r0
   1dab4:	bl	113c4 <memmove@plt>
   1dab8:	ldr	r2, [r7, #12]
   1dabc:	mov	r3, #10
   1dac0:	add	r5, r2, #1
   1dac4:	add	r5, r8, r5
   1dac8:	add	fp, r5, fp
   1dacc:	sub	sl, fp, r6
   1dad0:	mov	r4, r6
   1dad4:	sub	fp, r5, r6
   1dad8:	strb	r3, [r8]
   1dadc:	add	r6, r8, #1
   1dae0:	b	1d7fc <argp_error@@Base+0x1058>
   1dae4:	mov	r1, #10
   1dae8:	bl	115e0 <__overflow@plt>
   1daec:	b	1d7e0 <argp_error@@Base+0x103c>
   1daf0:	add	r3, r8, sl
   1daf4:	sub	r5, r5, r3
   1daf8:	add	fp, fp, r5
   1dafc:	str	fp, [r7, #28]
   1db00:	str	r3, [r7, #20]
   1db04:	b	1d6a4 <argp_error@@Base+0xf00>
   1db08:	str	r3, [r7, #20]
   1db0c:	ldr	fp, [r7, #28]
   1db10:	b	1d6a4 <argp_error@@Base+0xf00>
   1db14:	push	{r4, lr}
   1db18:	mov	r4, r0
   1db1c:	bl	1d5a4 <argp_error@@Base+0xe00>
   1db20:	ldr	r2, [r4, #28]
   1db24:	ldr	r0, [r4, #24]
   1db28:	cmp	r2, r0
   1db2c:	bls	1db44 <argp_error@@Base+0x13a0>
   1db30:	sub	r2, r2, r0
   1db34:	ldr	r3, [r4]
   1db38:	mov	r1, #1
   1db3c:	bl	11418 <fwrite_unlocked@plt>
   1db40:	ldr	r0, [r4, #24]
   1db44:	bl	182f0 <argp_parse@@Base+0xe98>
   1db48:	mov	r0, r4
   1db4c:	pop	{r4, lr}
   1db50:	b	182f0 <argp_parse@@Base+0xe98>
   1db54:	push	{r4, r5, r6, lr}
   1db58:	mov	r4, r0
   1db5c:	mov	r5, r1
   1db60:	bl	1d5a4 <argp_error@@Base+0xe00>
   1db64:	ldr	r3, [r4, #24]
   1db68:	ldr	r2, [r4, #28]
   1db6c:	mov	r0, r3
   1db70:	sub	r2, r2, r3
   1db74:	mov	r1, #1
   1db78:	ldr	r3, [r4]
   1db7c:	bl	11418 <fwrite_unlocked@plt>
   1db80:	ldr	r2, [r4, #28]
   1db84:	ldr	r3, [r4, #24]
   1db88:	sub	r1, r2, r3
   1db8c:	cmp	r0, r1
   1db90:	bne	1dbd4 <argp_error@@Base+0x1430>
   1db94:	ldr	r1, [r4, #32]
   1db98:	mov	r2, #0
   1db9c:	sub	r1, r1, r3
   1dba0:	cmp	r1, r5
   1dba4:	str	r3, [r4, #28]
   1dba8:	str	r2, [r4, #16]
   1dbac:	movcs	r3, #1
   1dbb0:	bcs	1dbcc <argp_error@@Base+0x1428>
   1dbb4:	adds	r5, r1, r5
   1dbb8:	bcc	1dc04 <argp_error@@Base+0x1460>
   1dbbc:	bl	11568 <__errno_location@plt>
   1dbc0:	mov	r3, #0
   1dbc4:	mov	r2, #12
   1dbc8:	str	r2, [r0]
   1dbcc:	mov	r0, r3
   1dbd0:	pop	{r4, r5, r6, pc}
   1dbd4:	ldr	r1, [r4, #16]
   1dbd8:	sub	r2, r2, r0
   1dbdc:	sub	r1, r1, r0
   1dbe0:	str	r2, [r4, #28]
   1dbe4:	str	r1, [r4, #16]
   1dbe8:	sub	r2, r2, r3
   1dbec:	add	r1, r3, r0
   1dbf0:	mov	r0, r3
   1dbf4:	bl	113c4 <memmove@plt>
   1dbf8:	mov	r3, #0
   1dbfc:	mov	r0, r3
   1dc00:	pop	{r4, r5, r6, pc}
   1dc04:	mov	r0, r3
   1dc08:	mov	r1, r5
   1dc0c:	bl	1954c <_obstack_memory_used@@Base+0xe0c>
   1dc10:	cmp	r0, #0
   1dc14:	beq	1dbbc <argp_error@@Base+0x1418>
   1dc18:	add	r1, r0, r5
   1dc1c:	mov	r3, #1
   1dc20:	str	r0, [r4, #24]
   1dc24:	str	r0, [r4, #28]
   1dc28:	str	r1, [r4, #32]
   1dc2c:	mov	r0, r3
   1dc30:	pop	{r4, r5, r6, pc}
   1dc34:	ldr	r3, [r0, #32]
   1dc38:	ldr	r2, [r0, #28]
   1dc3c:	sub	r3, r3, r2
   1dc40:	cmp	r3, r1
   1dc44:	bcc	1dc50 <argp_error@@Base+0x14ac>
   1dc48:	mov	r0, #1
   1dc4c:	bx	lr
   1dc50:	b	1db54 <argp_error@@Base+0x13b0>
   1dc54:	push	{r1, r2, r3}
   1dc58:	mov	r1, #150	; 0x96
   1dc5c:	push	{r4, r5, r6, r7, lr}
   1dc60:	sub	sp, sp, #8
   1dc64:	mov	r5, r0
   1dc68:	ldr	r7, [sp, #28]
   1dc6c:	add	r6, sp, #32
   1dc70:	ldr	r3, [r5, #32]
   1dc74:	ldr	r0, [r5, #28]
   1dc78:	sub	r2, r3, r0
   1dc7c:	cmp	r1, r2
   1dc80:	bhi	1dcc4 <argp_error@@Base+0x1520>
   1dc84:	sub	r4, r3, r0
   1dc88:	mov	r1, r4
   1dc8c:	mov	r3, r6
   1dc90:	mov	r2, r7
   1dc94:	str	r6, [sp, #4]
   1dc98:	bl	11640 <vsnprintf@plt>
   1dc9c:	cmp	r4, r0
   1dca0:	addls	r1, r0, #1
   1dca4:	bls	1dc70 <argp_error@@Base+0x14cc>
   1dca8:	ldr	r3, [r5, #28]
   1dcac:	add	r3, r3, r0
   1dcb0:	str	r3, [r5, #28]
   1dcb4:	add	sp, sp, #8
   1dcb8:	pop	{r4, r5, r6, r7, lr}
   1dcbc:	add	sp, sp, #12
   1dcc0:	bx	lr
   1dcc4:	mov	r0, r5
   1dcc8:	bl	1db54 <argp_error@@Base+0x13b0>
   1dccc:	cmp	r0, #0
   1dcd0:	ldrne	r3, [r5, #32]
   1dcd4:	ldrne	r0, [r5, #28]
   1dcd8:	bne	1dc84 <argp_error@@Base+0x14e0>
   1dcdc:	mvn	r0, #0
   1dce0:	add	sp, sp, #8
   1dce4:	pop	{r4, r5, r6, r7, lr}
   1dce8:	add	sp, sp, #12
   1dcec:	bx	lr
   1dcf0:	subs	r2, r1, #1
   1dcf4:	bxeq	lr
   1dcf8:	bcc	1ded0 <argp_error@@Base+0x172c>
   1dcfc:	cmp	r0, r1
   1dd00:	bls	1deb4 <argp_error@@Base+0x1710>
   1dd04:	tst	r1, r2
   1dd08:	beq	1dec0 <argp_error@@Base+0x171c>
   1dd0c:	clz	r3, r0
   1dd10:	clz	r2, r1
   1dd14:	sub	r3, r2, r3
   1dd18:	rsbs	r3, r3, #31
   1dd1c:	addne	r3, r3, r3, lsl #1
   1dd20:	mov	r2, #0
   1dd24:	addne	pc, pc, r3, lsl #2
   1dd28:	nop			; (mov r0, r0)
   1dd2c:	cmp	r0, r1, lsl #31
   1dd30:	adc	r2, r2, r2
   1dd34:	subcs	r0, r0, r1, lsl #31
   1dd38:	cmp	r0, r1, lsl #30
   1dd3c:	adc	r2, r2, r2
   1dd40:	subcs	r0, r0, r1, lsl #30
   1dd44:	cmp	r0, r1, lsl #29
   1dd48:	adc	r2, r2, r2
   1dd4c:	subcs	r0, r0, r1, lsl #29
   1dd50:	cmp	r0, r1, lsl #28
   1dd54:	adc	r2, r2, r2
   1dd58:	subcs	r0, r0, r1, lsl #28
   1dd5c:	cmp	r0, r1, lsl #27
   1dd60:	adc	r2, r2, r2
   1dd64:	subcs	r0, r0, r1, lsl #27
   1dd68:	cmp	r0, r1, lsl #26
   1dd6c:	adc	r2, r2, r2
   1dd70:	subcs	r0, r0, r1, lsl #26
   1dd74:	cmp	r0, r1, lsl #25
   1dd78:	adc	r2, r2, r2
   1dd7c:	subcs	r0, r0, r1, lsl #25
   1dd80:	cmp	r0, r1, lsl #24
   1dd84:	adc	r2, r2, r2
   1dd88:	subcs	r0, r0, r1, lsl #24
   1dd8c:	cmp	r0, r1, lsl #23
   1dd90:	adc	r2, r2, r2
   1dd94:	subcs	r0, r0, r1, lsl #23
   1dd98:	cmp	r0, r1, lsl #22
   1dd9c:	adc	r2, r2, r2
   1dda0:	subcs	r0, r0, r1, lsl #22
   1dda4:	cmp	r0, r1, lsl #21
   1dda8:	adc	r2, r2, r2
   1ddac:	subcs	r0, r0, r1, lsl #21
   1ddb0:	cmp	r0, r1, lsl #20
   1ddb4:	adc	r2, r2, r2
   1ddb8:	subcs	r0, r0, r1, lsl #20
   1ddbc:	cmp	r0, r1, lsl #19
   1ddc0:	adc	r2, r2, r2
   1ddc4:	subcs	r0, r0, r1, lsl #19
   1ddc8:	cmp	r0, r1, lsl #18
   1ddcc:	adc	r2, r2, r2
   1ddd0:	subcs	r0, r0, r1, lsl #18
   1ddd4:	cmp	r0, r1, lsl #17
   1ddd8:	adc	r2, r2, r2
   1dddc:	subcs	r0, r0, r1, lsl #17
   1dde0:	cmp	r0, r1, lsl #16
   1dde4:	adc	r2, r2, r2
   1dde8:	subcs	r0, r0, r1, lsl #16
   1ddec:	cmp	r0, r1, lsl #15
   1ddf0:	adc	r2, r2, r2
   1ddf4:	subcs	r0, r0, r1, lsl #15
   1ddf8:	cmp	r0, r1, lsl #14
   1ddfc:	adc	r2, r2, r2
   1de00:	subcs	r0, r0, r1, lsl #14
   1de04:	cmp	r0, r1, lsl #13
   1de08:	adc	r2, r2, r2
   1de0c:	subcs	r0, r0, r1, lsl #13
   1de10:	cmp	r0, r1, lsl #12
   1de14:	adc	r2, r2, r2
   1de18:	subcs	r0, r0, r1, lsl #12
   1de1c:	cmp	r0, r1, lsl #11
   1de20:	adc	r2, r2, r2
   1de24:	subcs	r0, r0, r1, lsl #11
   1de28:	cmp	r0, r1, lsl #10
   1de2c:	adc	r2, r2, r2
   1de30:	subcs	r0, r0, r1, lsl #10
   1de34:	cmp	r0, r1, lsl #9
   1de38:	adc	r2, r2, r2
   1de3c:	subcs	r0, r0, r1, lsl #9
   1de40:	cmp	r0, r1, lsl #8
   1de44:	adc	r2, r2, r2
   1de48:	subcs	r0, r0, r1, lsl #8
   1de4c:	cmp	r0, r1, lsl #7
   1de50:	adc	r2, r2, r2
   1de54:	subcs	r0, r0, r1, lsl #7
   1de58:	cmp	r0, r1, lsl #6
   1de5c:	adc	r2, r2, r2
   1de60:	subcs	r0, r0, r1, lsl #6
   1de64:	cmp	r0, r1, lsl #5
   1de68:	adc	r2, r2, r2
   1de6c:	subcs	r0, r0, r1, lsl #5
   1de70:	cmp	r0, r1, lsl #4
   1de74:	adc	r2, r2, r2
   1de78:	subcs	r0, r0, r1, lsl #4
   1de7c:	cmp	r0, r1, lsl #3
   1de80:	adc	r2, r2, r2
   1de84:	subcs	r0, r0, r1, lsl #3
   1de88:	cmp	r0, r1, lsl #2
   1de8c:	adc	r2, r2, r2
   1de90:	subcs	r0, r0, r1, lsl #2
   1de94:	cmp	r0, r1, lsl #1
   1de98:	adc	r2, r2, r2
   1de9c:	subcs	r0, r0, r1, lsl #1
   1dea0:	cmp	r0, r1
   1dea4:	adc	r2, r2, r2
   1dea8:	subcs	r0, r0, r1
   1deac:	mov	r0, r2
   1deb0:	bx	lr
   1deb4:	moveq	r0, #1
   1deb8:	movne	r0, #0
   1debc:	bx	lr
   1dec0:	clz	r2, r1
   1dec4:	rsb	r2, r2, #31
   1dec8:	lsr	r0, r0, r2
   1decc:	bx	lr
   1ded0:	cmp	r0, #0
   1ded4:	mvnne	r0, #0
   1ded8:	b	1e13c <argp_error@@Base+0x1998>
   1dedc:	cmp	r1, #0
   1dee0:	beq	1ded0 <argp_error@@Base+0x172c>
   1dee4:	push	{r0, r1, lr}
   1dee8:	bl	1dcf0 <argp_error@@Base+0x154c>
   1deec:	pop	{r1, r2, lr}
   1def0:	mul	r3, r2, r0
   1def4:	sub	r1, r1, r3
   1def8:	bx	lr
   1defc:	cmp	r1, #0
   1df00:	beq	1e10c <argp_error@@Base+0x1968>
   1df04:	eor	ip, r0, r1
   1df08:	rsbmi	r1, r1, #0
   1df0c:	subs	r2, r1, #1
   1df10:	beq	1e0d8 <argp_error@@Base+0x1934>
   1df14:	movs	r3, r0
   1df18:	rsbmi	r3, r0, #0
   1df1c:	cmp	r3, r1
   1df20:	bls	1e0e4 <argp_error@@Base+0x1940>
   1df24:	tst	r1, r2
   1df28:	beq	1e0f4 <argp_error@@Base+0x1950>
   1df2c:	clz	r2, r3
   1df30:	clz	r0, r1
   1df34:	sub	r2, r0, r2
   1df38:	rsbs	r2, r2, #31
   1df3c:	addne	r2, r2, r2, lsl #1
   1df40:	mov	r0, #0
   1df44:	addne	pc, pc, r2, lsl #2
   1df48:	nop			; (mov r0, r0)
   1df4c:	cmp	r3, r1, lsl #31
   1df50:	adc	r0, r0, r0
   1df54:	subcs	r3, r3, r1, lsl #31
   1df58:	cmp	r3, r1, lsl #30
   1df5c:	adc	r0, r0, r0
   1df60:	subcs	r3, r3, r1, lsl #30
   1df64:	cmp	r3, r1, lsl #29
   1df68:	adc	r0, r0, r0
   1df6c:	subcs	r3, r3, r1, lsl #29
   1df70:	cmp	r3, r1, lsl #28
   1df74:	adc	r0, r0, r0
   1df78:	subcs	r3, r3, r1, lsl #28
   1df7c:	cmp	r3, r1, lsl #27
   1df80:	adc	r0, r0, r0
   1df84:	subcs	r3, r3, r1, lsl #27
   1df88:	cmp	r3, r1, lsl #26
   1df8c:	adc	r0, r0, r0
   1df90:	subcs	r3, r3, r1, lsl #26
   1df94:	cmp	r3, r1, lsl #25
   1df98:	adc	r0, r0, r0
   1df9c:	subcs	r3, r3, r1, lsl #25
   1dfa0:	cmp	r3, r1, lsl #24
   1dfa4:	adc	r0, r0, r0
   1dfa8:	subcs	r3, r3, r1, lsl #24
   1dfac:	cmp	r3, r1, lsl #23
   1dfb0:	adc	r0, r0, r0
   1dfb4:	subcs	r3, r3, r1, lsl #23
   1dfb8:	cmp	r3, r1, lsl #22
   1dfbc:	adc	r0, r0, r0
   1dfc0:	subcs	r3, r3, r1, lsl #22
   1dfc4:	cmp	r3, r1, lsl #21
   1dfc8:	adc	r0, r0, r0
   1dfcc:	subcs	r3, r3, r1, lsl #21
   1dfd0:	cmp	r3, r1, lsl #20
   1dfd4:	adc	r0, r0, r0
   1dfd8:	subcs	r3, r3, r1, lsl #20
   1dfdc:	cmp	r3, r1, lsl #19
   1dfe0:	adc	r0, r0, r0
   1dfe4:	subcs	r3, r3, r1, lsl #19
   1dfe8:	cmp	r3, r1, lsl #18
   1dfec:	adc	r0, r0, r0
   1dff0:	subcs	r3, r3, r1, lsl #18
   1dff4:	cmp	r3, r1, lsl #17
   1dff8:	adc	r0, r0, r0
   1dffc:	subcs	r3, r3, r1, lsl #17
   1e000:	cmp	r3, r1, lsl #16
   1e004:	adc	r0, r0, r0
   1e008:	subcs	r3, r3, r1, lsl #16
   1e00c:	cmp	r3, r1, lsl #15
   1e010:	adc	r0, r0, r0
   1e014:	subcs	r3, r3, r1, lsl #15
   1e018:	cmp	r3, r1, lsl #14
   1e01c:	adc	r0, r0, r0
   1e020:	subcs	r3, r3, r1, lsl #14
   1e024:	cmp	r3, r1, lsl #13
   1e028:	adc	r0, r0, r0
   1e02c:	subcs	r3, r3, r1, lsl #13
   1e030:	cmp	r3, r1, lsl #12
   1e034:	adc	r0, r0, r0
   1e038:	subcs	r3, r3, r1, lsl #12
   1e03c:	cmp	r3, r1, lsl #11
   1e040:	adc	r0, r0, r0
   1e044:	subcs	r3, r3, r1, lsl #11
   1e048:	cmp	r3, r1, lsl #10
   1e04c:	adc	r0, r0, r0
   1e050:	subcs	r3, r3, r1, lsl #10
   1e054:	cmp	r3, r1, lsl #9
   1e058:	adc	r0, r0, r0
   1e05c:	subcs	r3, r3, r1, lsl #9
   1e060:	cmp	r3, r1, lsl #8
   1e064:	adc	r0, r0, r0
   1e068:	subcs	r3, r3, r1, lsl #8
   1e06c:	cmp	r3, r1, lsl #7
   1e070:	adc	r0, r0, r0
   1e074:	subcs	r3, r3, r1, lsl #7
   1e078:	cmp	r3, r1, lsl #6
   1e07c:	adc	r0, r0, r0
   1e080:	subcs	r3, r3, r1, lsl #6
   1e084:	cmp	r3, r1, lsl #5
   1e088:	adc	r0, r0, r0
   1e08c:	subcs	r3, r3, r1, lsl #5
   1e090:	cmp	r3, r1, lsl #4
   1e094:	adc	r0, r0, r0
   1e098:	subcs	r3, r3, r1, lsl #4
   1e09c:	cmp	r3, r1, lsl #3
   1e0a0:	adc	r0, r0, r0
   1e0a4:	subcs	r3, r3, r1, lsl #3
   1e0a8:	cmp	r3, r1, lsl #2
   1e0ac:	adc	r0, r0, r0
   1e0b0:	subcs	r3, r3, r1, lsl #2
   1e0b4:	cmp	r3, r1, lsl #1
   1e0b8:	adc	r0, r0, r0
   1e0bc:	subcs	r3, r3, r1, lsl #1
   1e0c0:	cmp	r3, r1
   1e0c4:	adc	r0, r0, r0
   1e0c8:	subcs	r3, r3, r1
   1e0cc:	cmp	ip, #0
   1e0d0:	rsbmi	r0, r0, #0
   1e0d4:	bx	lr
   1e0d8:	teq	ip, r0
   1e0dc:	rsbmi	r0, r0, #0
   1e0e0:	bx	lr
   1e0e4:	movcc	r0, #0
   1e0e8:	asreq	r0, ip, #31
   1e0ec:	orreq	r0, r0, #1
   1e0f0:	bx	lr
   1e0f4:	clz	r2, r1
   1e0f8:	rsb	r2, r2, #31
   1e0fc:	cmp	ip, #0
   1e100:	lsr	r0, r3, r2
   1e104:	rsbmi	r0, r0, #0
   1e108:	bx	lr
   1e10c:	cmp	r0, #0
   1e110:	mvngt	r0, #-2147483648	; 0x80000000
   1e114:	movlt	r0, #-2147483648	; 0x80000000
   1e118:	b	1e13c <argp_error@@Base+0x1998>
   1e11c:	cmp	r1, #0
   1e120:	beq	1e10c <argp_error@@Base+0x1968>
   1e124:	push	{r0, r1, lr}
   1e128:	bl	1df04 <argp_error@@Base+0x1760>
   1e12c:	pop	{r1, r2, lr}
   1e130:	mul	r3, r2, r0
   1e134:	sub	r1, r1, r3
   1e138:	bx	lr
   1e13c:	push	{r1, lr}
   1e140:	mov	r0, #8
   1e144:	bl	1137c <raise@plt>
   1e148:	pop	{r1, pc}
   1e14c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e150:	mov	r7, r0
   1e154:	ldr	r6, [pc, #72]	; 1e1a4 <argp_error@@Base+0x1a00>
   1e158:	ldr	r5, [pc, #72]	; 1e1a8 <argp_error@@Base+0x1a04>
   1e15c:	add	r6, pc, r6
   1e160:	add	r5, pc, r5
   1e164:	sub	r6, r6, r5
   1e168:	mov	r8, r1
   1e16c:	mov	r9, r2
   1e170:	bl	1132c <calloc@plt-0x20>
   1e174:	asrs	r6, r6, #2
   1e178:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e17c:	mov	r4, #0
   1e180:	add	r4, r4, #1
   1e184:	ldr	r3, [r5], #4
   1e188:	mov	r2, r9
   1e18c:	mov	r1, r8
   1e190:	mov	r0, r7
   1e194:	blx	r3
   1e198:	cmp	r6, r4
   1e19c:	bne	1e180 <argp_error@@Base+0x19dc>
   1e1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e1a4:	andeq	r3, r1, ip, lsr #27
   1e1a8:	andeq	r3, r1, r4, lsr #27
   1e1ac:	bx	lr

Disassembly of section .fini:

0001e1b0 <.fini>:
   1e1b0:	push	{r3, lr}
   1e1b4:	pop	{r3, pc}
