
../repos/coreutils/src/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

000113ec <.init>:
   113ec:	push	{r3, lr}
   113f0:	bl	11c88 <__assert_fail@plt+0x45c>
   113f4:	pop	{r3, pc}

Disassembly of section .plt:

000113f8 <fstatfs64@plt-0x14>:
   113f8:	push	{lr}		; (str lr, [sp, #-4]!)
   113fc:	ldr	lr, [pc, #4]	; 11408 <fstatfs64@plt-0x4>
   11400:	add	lr, pc, lr
   11404:	ldr	pc, [lr, #8]!
   11408:	strdeq	sp, [r1], -r8

0001140c <fstatfs64@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #118784	; 0x1d000
   11414:	ldr	pc, [ip, #3064]!	; 0xbf8

00011418 <selabel_lookup@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #118784	; 0x1d000
   11420:	ldr	pc, [ip, #3056]!	; 0xbf0

00011424 <calloc@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #118784	; 0x1d000
   1142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011430 <fputs_unlocked@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #118784	; 0x1d000
   11438:	ldr	pc, [ip, #3040]!	; 0xbe0

0001143c <raise@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #118784	; 0x1d000
   11444:	ldr	pc, [ip, #3032]!	; 0xbd8

00011448 <is_selinux_enabled@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #118784	; 0x1d000
   11450:	ldr	pc, [ip, #3024]!	; 0xbd0

00011454 <strcmp@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #118784	; 0x1d000
   1145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011460 <context_type_get@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #118784	; 0x1d000
   11468:	ldr	pc, [ip, #3008]!	; 0xbc0

0001146c <fflush@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #118784	; 0x1d000
   11474:	ldr	pc, [ip, #3000]!	; 0xbb8

00011478 <lsetfilecon@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #118784	; 0x1d000
   11480:	ldr	pc, [ip, #2992]!	; 0xbb0

00011484 <memmove@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #118784	; 0x1d000
   1148c:	ldr	pc, [ip, #2984]!	; 0xba8

00011490 <free@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #118784	; 0x1d000
   11498:	ldr	pc, [ip, #2976]!	; 0xba0

0001149c <faccessat@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #118784	; 0x1d000
   114a4:	ldr	pc, [ip, #2968]!	; 0xb98

000114a8 <_exit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #118784	; 0x1d000
   114b0:	ldr	pc, [ip, #2960]!	; 0xb90

000114b4 <memcpy@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #118784	; 0x1d000
   114bc:	ldr	pc, [ip, #2952]!	; 0xb88

000114c0 <mbsinit@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #118784	; 0x1d000
   114c8:	ldr	pc, [ip, #2944]!	; 0xb80

000114cc <context_new@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #118784	; 0x1d000
   114d4:	ldr	pc, [ip, #2936]!	; 0xb78

000114d8 <memcmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #118784	; 0x1d000
   114e0:	ldr	pc, [ip, #2928]!	; 0xb70

000114e4 <fputc_unlocked@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #118784	; 0x1d000
   114ec:	ldr	pc, [ip, #2920]!	; 0xb68

000114f0 <dcgettext@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #118784	; 0x1d000
   114f8:	ldr	pc, [ip, #2912]!	; 0xb60

000114fc <context_type_set@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #118784	; 0x1d000
   11504:	ldr	pc, [ip, #2904]!	; 0xb58

00011508 <realloc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #118784	; 0x1d000
   11510:	ldr	pc, [ip, #2896]!	; 0xb50

00011514 <fgetfilecon@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #118784	; 0x1d000
   1151c:	ldr	pc, [ip, #2888]!	; 0xb48

00011520 <textdomain@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #118784	; 0x1d000
   11528:	ldr	pc, [ip, #2880]!	; 0xb40

0001152c <rawmemchr@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #118784	; 0x1d000
   11534:	ldr	pc, [ip, #2872]!	; 0xb38

00011538 <__fxstatat64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #118784	; 0x1d000
   11540:	ldr	pc, [ip, #2864]!	; 0xb30

00011544 <iswprint@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #118784	; 0x1d000
   1154c:	ldr	pc, [ip, #2856]!	; 0xb28

00011550 <__fxstat64@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #118784	; 0x1d000
   11558:	ldr	pc, [ip, #2848]!	; 0xb20

0001155c <readlink@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #118784	; 0x1d000
   11564:	ldr	pc, [ip, #2840]!	; 0xb18

00011568 <fwrite@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #118784	; 0x1d000
   11570:	ldr	pc, [ip, #2832]!	; 0xb10

00011574 <lseek64@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #118784	; 0x1d000
   1157c:	ldr	pc, [ip, #2824]!	; 0xb08

00011580 <__ctype_get_mb_cur_max@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #118784	; 0x1d000
   11588:	ldr	pc, [ip, #2816]!	; 0xb00

0001158c <getcon@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #118784	; 0x1d000
   11594:	ldr	pc, [ip, #2808]!	; 0xaf8

00011598 <__fpending@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #118784	; 0x1d000
   115a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115a4 <mbrtowc@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #118784	; 0x1d000
   115ac:	ldr	pc, [ip, #2792]!	; 0xae8

000115b0 <error@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #118784	; 0x1d000
   115b8:	ldr	pc, [ip, #2784]!	; 0xae0

000115bc <open64@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #118784	; 0x1d000
   115c4:	ldr	pc, [ip, #2776]!	; 0xad8

000115c8 <lgetfilecon@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #118784	; 0x1d000
   115d0:	ldr	pc, [ip, #2768]!	; 0xad0

000115d4 <malloc@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #118784	; 0x1d000
   115dc:	ldr	pc, [ip, #2760]!	; 0xac8

000115e0 <__libc_start_main@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #118784	; 0x1d000
   115e8:	ldr	pc, [ip, #2752]!	; 0xac0

000115ec <__freading@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #118784	; 0x1d000
   115f4:	ldr	pc, [ip, #2744]!	; 0xab8

000115f8 <__gmon_start__@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #118784	; 0x1d000
   11600:	ldr	pc, [ip, #2736]!	; 0xab0

00011604 <context_free@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #118784	; 0x1d000
   1160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011610 <mempcpy@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #118784	; 0x1d000
   11618:	ldr	pc, [ip, #2720]!	; 0xaa0

0001161c <getopt_long@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #118784	; 0x1d000
   11624:	ldr	pc, [ip, #2712]!	; 0xa98

00011628 <__ctype_b_loc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #118784	; 0x1d000
   11630:	ldr	pc, [ip, #2704]!	; 0xa90

00011634 <getcwd@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #118784	; 0x1d000
   1163c:	ldr	pc, [ip, #2696]!	; 0xa88

00011640 <exit@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #118784	; 0x1d000
   11648:	ldr	pc, [ip, #2688]!	; 0xa80

0001164c <getfilecon@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #118784	; 0x1d000
   11654:	ldr	pc, [ip, #2680]!	; 0xa78

00011658 <strlen@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #118784	; 0x1d000
   11660:	ldr	pc, [ip, #2672]!	; 0xa70

00011664 <selabel_open@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #118784	; 0x1d000
   1166c:	ldr	pc, [ip, #2664]!	; 0xa68

00011670 <openat64@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #118784	; 0x1d000
   11678:	ldr	pc, [ip, #2656]!	; 0xa60

0001167c <setfscreatecon@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #118784	; 0x1d000
   11684:	ldr	pc, [ip, #2648]!	; 0xa58

00011688 <__errno_location@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #118784	; 0x1d000
   11690:	ldr	pc, [ip, #2640]!	; 0xa50

00011694 <__sprintf_chk@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #118784	; 0x1d000
   1169c:	ldr	pc, [ip, #2632]!	; 0xa48

000116a0 <__cxa_atexit@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #118784	; 0x1d000
   116a8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ac <memset@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #118784	; 0x1d000
   116b4:	ldr	pc, [ip, #2616]!	; 0xa38

000116b8 <__printf_chk@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #118784	; 0x1d000
   116c0:	ldr	pc, [ip, #2608]!	; 0xa30

000116c4 <fileno@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #118784	; 0x1d000
   116cc:	ldr	pc, [ip, #2600]!	; 0xa28

000116d0 <__fprintf_chk@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #118784	; 0x1d000
   116d8:	ldr	pc, [ip, #2592]!	; 0xa20

000116dc <fclose@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #118784	; 0x1d000
   116e4:	ldr	pc, [ip, #2584]!	; 0xa18

000116e8 <fseeko64@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #118784	; 0x1d000
   116f0:	ldr	pc, [ip, #2576]!	; 0xa10

000116f4 <fcntl64@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #118784	; 0x1d000
   116fc:	ldr	pc, [ip, #2568]!	; 0xa08

00011700 <setlocale@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #118784	; 0x1d000
   11708:	ldr	pc, [ip, #2560]!	; 0xa00

0001170c <fsetfilecon@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #118784	; 0x1d000
   11714:	ldr	pc, [ip, #2552]!	; 0x9f8

00011718 <strrchr@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #118784	; 0x1d000
   11720:	ldr	pc, [ip, #2544]!	; 0x9f0

00011724 <nl_langinfo@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #118784	; 0x1d000
   1172c:	ldr	pc, [ip, #2536]!	; 0x9e8

00011730 <readdir64@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #118784	; 0x1d000
   11738:	ldr	pc, [ip, #2528]!	; 0x9e0

0001173c <fdopendir@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #118784	; 0x1d000
   11744:	ldr	pc, [ip, #2520]!	; 0x9d8

00011748 <security_compute_create@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #118784	; 0x1d000
   11750:	ldr	pc, [ip, #2512]!	; 0x9d0

00011754 <dirfd@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #118784	; 0x1d000
   1175c:	ldr	pc, [ip, #2504]!	; 0x9c8

00011760 <fchdir@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #118784	; 0x1d000
   11768:	ldr	pc, [ip, #2496]!	; 0x9c0

0001176c <qsort@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #118784	; 0x1d000
   11774:	ldr	pc, [ip, #2488]!	; 0x9b8

00011778 <freecon@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #118784	; 0x1d000
   11780:	ldr	pc, [ip, #2480]!	; 0x9b0

00011784 <bindtextdomain@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #118784	; 0x1d000
   1178c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011790 <getfscreatecon@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #118784	; 0x1d000
   11798:	ldr	pc, [ip, #2464]!	; 0x9a0

0001179c <umask@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #118784	; 0x1d000
   117a4:	ldr	pc, [ip, #2456]!	; 0x998

000117a8 <context_str@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #118784	; 0x1d000
   117b0:	ldr	pc, [ip, #2448]!	; 0x990

000117b4 <chmod@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #118784	; 0x1d000
   117bc:	ldr	pc, [ip, #2440]!	; 0x988

000117c0 <__xstat64@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #118784	; 0x1d000
   117c8:	ldr	pc, [ip, #2432]!	; 0x980

000117cc <strncmp@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #118784	; 0x1d000
   117d4:	ldr	pc, [ip, #2424]!	; 0x978

000117d8 <abort@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #118784	; 0x1d000
   117e0:	ldr	pc, [ip, #2416]!	; 0x970

000117e4 <close@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #118784	; 0x1d000
   117ec:	ldr	pc, [ip, #2408]!	; 0x968

000117f0 <__lxstat64@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #118784	; 0x1d000
   117f8:	ldr	pc, [ip, #2400]!	; 0x960

000117fc <mkfifo@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #118784	; 0x1d000
   11804:	ldr	pc, [ip, #2392]!	; 0x958

00011808 <mode_to_security_class@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #118784	; 0x1d000
   11810:	ldr	pc, [ip, #2384]!	; 0x950

00011814 <closedir@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #118784	; 0x1d000
   1181c:	ldr	pc, [ip, #2376]!	; 0x948

00011820 <strspn@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #118784	; 0x1d000
   11828:	ldr	pc, [ip, #2368]!	; 0x940

0001182c <__assert_fail@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #118784	; 0x1d000
   11834:	ldr	pc, [ip, #2360]!	; 0x938

Disassembly of section .text:

00011838 <lchmod@@Base-0x5994>:
   11838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1183c:	mov	r7, r0
   11840:	sub	sp, sp, #20
   11844:	ldr	r0, [r1]
   11848:	mov	r5, r1
   1184c:	bl	17890 <lchmod@@Base+0x6c4>
   11850:	ldr	r1, [pc, #924]	; 11bf4 <__assert_fail@plt+0x3c8>
   11854:	mov	r0, #6
   11858:	bl	11700 <setlocale@plt>
   1185c:	mov	r4, #0
   11860:	ldr	r1, [pc, #912]	; 11bf8 <__assert_fail@plt+0x3cc>
   11864:	ldr	r0, [pc, #912]	; 11bfc <__assert_fail@plt+0x3d0>
   11868:	ldr	r9, [pc, #912]	; 11c00 <__assert_fail@plt+0x3d4>
   1186c:	ldr	r8, [pc, #912]	; 11c04 <__assert_fail@plt+0x3d8>
   11870:	ldr	sl, [pc, #912]	; 11c08 <__assert_fail@plt+0x3dc>
   11874:	bl	11784 <bindtextdomain@plt>
   11878:	mov	fp, r4
   1187c:	ldr	r0, [pc, #888]	; 11bfc <__assert_fail@plt+0x3d0>
   11880:	mov	r6, r4
   11884:	bl	11520 <textdomain@plt>
   11888:	ldr	r0, [pc, #892]	; 11c0c <__assert_fail@plt+0x3e0>
   1188c:	bl	1dbdc <lchmod@@Base+0x6a10>
   11890:	str	r4, [sp, #8]
   11894:	str	r6, [sp]
   11898:	mov	r3, r9
   1189c:	mov	r2, r8
   118a0:	mov	r1, r5
   118a4:	mov	r0, r7
   118a8:	bl	1161c <getopt_long@plt>
   118ac:	cmn	r0, #1
   118b0:	beq	119d4 <__assert_fail@plt+0x1a8>
   118b4:	cmn	r0, #2
   118b8:	beq	1199c <__assert_fail@plt+0x170>
   118bc:	ble	1193c <__assert_fail@plt+0x110>
   118c0:	cmp	r0, #90	; 0x5a
   118c4:	beq	118d8 <__assert_fail@plt+0xac>
   118c8:	cmp	r0, #109	; 0x6d
   118cc:	bne	11994 <__assert_fail@plt+0x168>
   118d0:	ldr	fp, [sl]
   118d4:	b	11894 <__assert_fail@plt+0x68>
   118d8:	bl	11448 <is_selinux_enabled@plt>
   118dc:	cmp	r0, #0
   118e0:	ble	119a4 <__assert_fail@plt+0x178>
   118e4:	ldr	r1, [sl]
   118e8:	cmp	r1, #0
   118ec:	strne	r1, [sp, #8]
   118f0:	bne	11894 <__assert_fail@plt+0x68>
   118f4:	mov	r2, r6
   118f8:	mov	r0, r1
   118fc:	bl	11664 <selabel_open@plt>
   11900:	subs	r4, r0, #0
   11904:	bne	11894 <__assert_fail@plt+0x68>
   11908:	bl	11688 <__errno_location@plt>
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #760]	; 11c10 <__assert_fail@plt+0x3e4>
   11914:	ldr	r3, [r0]
   11918:	mov	r0, r6
   1191c:	str	r3, [sp, #12]
   11920:	bl	114f0 <dcgettext@plt>
   11924:	ldr	r3, [sp, #12]
   11928:	mov	r1, r3
   1192c:	mov	r2, r0
   11930:	mov	r0, r6
   11934:	bl	115b0 <error@plt>
   11938:	b	11894 <__assert_fail@plt+0x68>
   1193c:	cmn	r0, #3
   11940:	bne	11994 <__assert_fail@plt+0x168>
   11944:	ldr	r1, [pc, #712]	; 11c14 <__assert_fail@plt+0x3e8>
   11948:	ldr	r3, [pc, #712]	; 11c18 <__assert_fail@plt+0x3ec>
   1194c:	ldr	r2, [pc, #712]	; 11c1c <__assert_fail@plt+0x3f0>
   11950:	str	r6, [sp, #4]
   11954:	ldr	r0, [r1]
   11958:	ldr	r3, [r3]
   1195c:	ldr	r1, [pc, #700]	; 11c20 <__assert_fail@plt+0x3f4>
   11960:	str	r2, [sp]
   11964:	ldr	r2, [pc, #696]	; 11c24 <__assert_fail@plt+0x3f8>
   11968:	bl	1c424 <lchmod@@Base+0x5258>
   1196c:	mov	r0, #0
   11970:	bl	11640 <exit@plt>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #680]	; 11c28 <__assert_fail@plt+0x3fc>
   1197c:	mov	r0, #0
   11980:	bl	114f0 <dcgettext@plt>
   11984:	mov	r1, #0
   11988:	mov	r2, r0
   1198c:	mov	r0, r1
   11990:	bl	115b0 <error@plt>
   11994:	mov	r0, #1
   11998:	bl	11d74 <__assert_fail@plt+0x548>
   1199c:	mov	r0, #0
   119a0:	bl	11d74 <__assert_fail@plt+0x548>
   119a4:	ldr	r3, [sl]
   119a8:	cmp	r3, #0
   119ac:	beq	11894 <__assert_fail@plt+0x68>
   119b0:	mov	r2, #5
   119b4:	ldr	r1, [pc, #624]	; 11c2c <__assert_fail@plt+0x400>
   119b8:	mov	r0, r6
   119bc:	bl	114f0 <dcgettext@plt>
   119c0:	mov	r1, r6
   119c4:	mov	r2, r0
   119c8:	mov	r0, #0
   119cc:	bl	115b0 <error@plt>
   119d0:	b	11894 <__assert_fail@plt+0x68>
   119d4:	ldr	r6, [pc, #596]	; 11c30 <__assert_fail@plt+0x404>
   119d8:	ldr	r3, [r6]
   119dc:	cmp	r7, r3
   119e0:	beq	11974 <__assert_fail@plt+0x148>
   119e4:	ldr	r3, [sp, #8]
   119e8:	cmp	r3, #0
   119ec:	beq	11a00 <__assert_fail@plt+0x1d4>
   119f0:	mov	r0, r3
   119f4:	bl	1167c <setfscreatecon@plt>
   119f8:	cmp	r0, #0
   119fc:	blt	11bbc <__assert_fail@plt+0x390>
   11a00:	cmp	fp, #0
   11a04:	beq	11b78 <__assert_fail@plt+0x34c>
   11a08:	mov	r0, fp
   11a0c:	bl	172d8 <lchmod@@Base+0x10c>
   11a10:	subs	sl, r0, #0
   11a14:	beq	11ba0 <__assert_fail@plt+0x374>
   11a18:	mov	r0, #0
   11a1c:	bl	1179c <umask@plt>
   11a20:	mov	r9, #0
   11a24:	mov	r8, r0
   11a28:	bl	1179c <umask@plt>
   11a2c:	mov	r2, r8
   11a30:	mov	r3, sl
   11a34:	mov	r1, r9
   11a38:	str	r9, [sp]
   11a3c:	ldr	r0, [pc, #496]	; 11c34 <__assert_fail@plt+0x408>
   11a40:	bl	176c8 <lchmod@@Base+0x4fc>
   11a44:	mov	r8, r0
   11a48:	mov	r0, sl
   11a4c:	bl	1309c <__assert_fail@plt+0x1870>
   11a50:	bic	r3, r8, #508	; 0x1fc
   11a54:	bic	r3, r3, #3
   11a58:	cmp	r3, r9
   11a5c:	bne	11b80 <__assert_fail@plt+0x354>
   11a60:	mov	r3, #0
   11a64:	str	r3, [sp, #8]
   11a68:	b	11a98 <__assert_fail@plt+0x26c>
   11a6c:	cmp	fp, #0
   11a70:	beq	11a8c <__assert_fail@plt+0x260>
   11a74:	ldr	r3, [r6]
   11a78:	mov	r1, r8
   11a7c:	ldr	r0, [r5, r3, lsl #2]
   11a80:	bl	171cc <lchmod@@Base>
   11a84:	cmp	r0, #0
   11a88:	bne	11b20 <__assert_fail@plt+0x2f4>
   11a8c:	ldr	r3, [r6]
   11a90:	add	r3, r3, #1
   11a94:	str	r3, [r6]
   11a98:	ldr	r3, [r6]
   11a9c:	cmp	r7, r3
   11aa0:	ble	11b6c <__assert_fail@plt+0x340>
   11aa4:	cmp	r4, #0
   11aa8:	beq	11abc <__assert_fail@plt+0x290>
   11aac:	ldr	r1, [r5, r3, lsl #2]
   11ab0:	mov	r2, #4096	; 0x1000
   11ab4:	mov	r0, r4
   11ab8:	bl	12328 <__assert_fail@plt+0xafc>
   11abc:	ldr	r3, [r6]
   11ac0:	mov	r1, r8
   11ac4:	ldr	r0, [r5, r3, lsl #2]
   11ac8:	bl	117fc <mkfifo@plt>
   11acc:	subs	r9, r0, #0
   11ad0:	beq	11a6c <__assert_fail@plt+0x240>
   11ad4:	bl	11688 <__errno_location@plt>
   11ad8:	mov	r2, #5
   11adc:	mov	r3, #1
   11ae0:	ldr	r1, [pc, #336]	; 11c38 <__assert_fail@plt+0x40c>
   11ae4:	str	r3, [sp, #8]
   11ae8:	ldr	r9, [r0]
   11aec:	mov	r0, #0
   11af0:	bl	114f0 <dcgettext@plt>
   11af4:	ldr	r3, [r6]
   11af8:	ldr	r1, [r5, r3, lsl #2]
   11afc:	mov	sl, r0
   11b00:	mov	r0, #4
   11b04:	bl	19dec <lchmod@@Base+0x2c20>
   11b08:	mov	r2, sl
   11b0c:	mov	r1, r9
   11b10:	mov	r3, r0
   11b14:	mov	r0, #0
   11b18:	bl	115b0 <error@plt>
   11b1c:	b	11a8c <__assert_fail@plt+0x260>
   11b20:	bl	11688 <__errno_location@plt>
   11b24:	mov	r2, #5
   11b28:	mov	r3, #1
   11b2c:	ldr	r1, [pc, #264]	; 11c3c <__assert_fail@plt+0x410>
   11b30:	str	r3, [sp, #8]
   11b34:	ldr	sl, [r0]
   11b38:	mov	r0, r9
   11b3c:	bl	114f0 <dcgettext@plt>
   11b40:	ldr	r3, [r6]
   11b44:	ldr	r1, [r5, r3, lsl #2]
   11b48:	str	r0, [sp, #12]
   11b4c:	mov	r0, #4
   11b50:	bl	19dec <lchmod@@Base+0x2c20>
   11b54:	ldr	r2, [sp, #12]
   11b58:	mov	r1, sl
   11b5c:	mov	r3, r0
   11b60:	mov	r0, r9
   11b64:	bl	115b0 <error@plt>
   11b68:	b	11a8c <__assert_fail@plt+0x260>
   11b6c:	ldr	r0, [sp, #8]
   11b70:	add	sp, sp, #20
   11b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b78:	ldr	r8, [pc, #180]	; 11c34 <__assert_fail@plt+0x408>
   11b7c:	b	11a60 <__assert_fail@plt+0x234>
   11b80:	mov	r2, #5
   11b84:	ldr	r1, [pc, #180]	; 11c40 <__assert_fail@plt+0x414>
   11b88:	mov	r0, r9
   11b8c:	bl	114f0 <dcgettext@plt>
   11b90:	mov	r1, r9
   11b94:	mov	r2, r0
   11b98:	mov	r0, #1
   11b9c:	bl	115b0 <error@plt>
   11ba0:	mov	r2, #5
   11ba4:	ldr	r1, [pc, #152]	; 11c44 <__assert_fail@plt+0x418>
   11ba8:	bl	114f0 <dcgettext@plt>
   11bac:	mov	r1, sl
   11bb0:	mov	r2, r0
   11bb4:	mov	r0, #1
   11bb8:	bl	115b0 <error@plt>
   11bbc:	bl	11688 <__errno_location@plt>
   11bc0:	mov	r2, #5
   11bc4:	ldr	r1, [pc, #124]	; 11c48 <__assert_fail@plt+0x41c>
   11bc8:	ldr	r4, [r0]
   11bcc:	mov	r0, #0
   11bd0:	bl	114f0 <dcgettext@plt>
   11bd4:	mov	r5, r0
   11bd8:	ldr	r0, [sp, #8]
   11bdc:	bl	1b75c <lchmod@@Base+0x4590>
   11be0:	mov	r2, r5
   11be4:	mov	r1, r4
   11be8:	mov	r3, r0
   11bec:	mov	r0, #1
   11bf0:	bl	115b0 <error@plt>
   11bf4:	andeq	lr, r1, r4, asr r2
   11bf8:	andeq	sp, r1, r8, asr #31
   11bfc:	andeq	sp, r1, r0, lsr #30
   11c00:	andeq	sp, r1, r8, lsr ip
   11c04:	andeq	lr, r1, r8, asr r0
   11c08:	andeq	pc, r2, r0, ror #3
   11c0c:	muleq	r1, r4, sp
   11c10:	andeq	sp, r1, r0, ror #31
   11c14:	ldrdeq	pc, [r2], -ip
   11c18:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   11c1c:	andeq	lr, r1, r8, asr #32
   11c20:	andeq	sp, r1, r8, lsl #25
   11c24:	andeq	sp, r1, ip, lsl pc
   11c28:	andeq	lr, r1, ip, asr r0
   11c2c:	strdeq	sp, [r1], -ip
   11c30:	ldrdeq	pc, [r2], -r0
   11c34:			; <UNDEFINED> instruction: 0x000001b6
   11c38:	ldrdeq	lr, [r1], -ip
   11c3c:	strdeq	lr, [r1], -r4
   11c40:	strheq	lr, [r1], -r0
   11c44:	andeq	lr, r1, r0, lsr #1
   11c48:	andeq	lr, r1, ip, rrx
   11c4c:	mov	fp, #0
   11c50:	mov	lr, #0
   11c54:	pop	{r1}		; (ldr r1, [sp], #4)
   11c58:	mov	r2, sp
   11c5c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c60:	push	{r0}		; (str r0, [sp, #-4]!)
   11c64:	ldr	ip, [pc, #16]	; 11c7c <__assert_fail@plt+0x450>
   11c68:	push	{ip}		; (str ip, [sp, #-4]!)
   11c6c:	ldr	r0, [pc, #12]	; 11c80 <__assert_fail@plt+0x454>
   11c70:	ldr	r3, [pc, #12]	; 11c84 <__assert_fail@plt+0x458>
   11c74:	bl	115e0 <__libc_start_main@plt>
   11c78:	bl	117d8 <abort@plt>
   11c7c:	ldrdeq	sp, [r1], -r8
   11c80:	andeq	r1, r1, r8, lsr r8
   11c84:	andeq	sp, r1, r8, ror fp
   11c88:	ldr	r3, [pc, #20]	; 11ca4 <__assert_fail@plt+0x478>
   11c8c:	ldr	r2, [pc, #20]	; 11ca8 <__assert_fail@plt+0x47c>
   11c90:	add	r3, pc, r3
   11c94:	ldr	r2, [r3, r2]
   11c98:	cmp	r2, #0
   11c9c:	bxeq	lr
   11ca0:	b	115f8 <__gmon_start__@plt>
   11ca4:	andeq	sp, r1, r8, ror #6
   11ca8:	andeq	r0, r0, r0, ror r1
   11cac:	ldr	r3, [pc, #28]	; 11cd0 <__assert_fail@plt+0x4a4>
   11cb0:	ldr	r0, [pc, #28]	; 11cd4 <__assert_fail@plt+0x4a8>
   11cb4:	sub	r3, r3, r0
   11cb8:	cmp	r3, #6
   11cbc:	bxls	lr
   11cc0:	ldr	r3, [pc, #16]	; 11cd8 <__assert_fail@plt+0x4ac>
   11cc4:	cmp	r3, #0
   11cc8:	bxeq	lr
   11ccc:	bx	r3
   11cd0:	andeq	pc, r2, r7, asr #3
   11cd4:	andeq	pc, r2, r4, asr #3
   11cd8:	andeq	r0, r0, r0
   11cdc:	ldr	r1, [pc, #36]	; 11d08 <__assert_fail@plt+0x4dc>
   11ce0:	ldr	r0, [pc, #36]	; 11d0c <__assert_fail@plt+0x4e0>
   11ce4:	sub	r1, r1, r0
   11ce8:	asr	r1, r1, #2
   11cec:	add	r1, r1, r1, lsr #31
   11cf0:	asrs	r1, r1, #1
   11cf4:	bxeq	lr
   11cf8:	ldr	r3, [pc, #16]	; 11d10 <__assert_fail@plt+0x4e4>
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	bx	r3
   11d08:	andeq	pc, r2, r4, asr #3
   11d0c:	andeq	pc, r2, r4, asr #3
   11d10:	andeq	r0, r0, r0
   11d14:	push	{r4, lr}
   11d18:	ldr	r4, [pc, #24]	; 11d38 <__assert_fail@plt+0x50c>
   11d1c:	ldrb	r3, [r4]
   11d20:	cmp	r3, #0
   11d24:	popne	{r4, pc}
   11d28:	bl	11cac <__assert_fail@plt+0x480>
   11d2c:	mov	r3, #1
   11d30:	strb	r3, [r4]
   11d34:	pop	{r4, pc}
   11d38:	andeq	pc, r2, r4, ror #3
   11d3c:	ldr	r0, [pc, #40]	; 11d6c <__assert_fail@plt+0x540>
   11d40:	ldr	r3, [r0]
   11d44:	cmp	r3, #0
   11d48:	bne	11d50 <__assert_fail@plt+0x524>
   11d4c:	b	11cdc <__assert_fail@plt+0x4b0>
   11d50:	ldr	r3, [pc, #24]	; 11d70 <__assert_fail@plt+0x544>
   11d54:	cmp	r3, #0
   11d58:	beq	11d4c <__assert_fail@plt+0x520>
   11d5c:	push	{r4, lr}
   11d60:	blx	r3
   11d64:	pop	{r4, lr}
   11d68:	b	11cdc <__assert_fail@plt+0x4b0>
   11d6c:	andeq	lr, r2, ip, lsl #30
   11d70:	andeq	r0, r0, r0
   11d74:	subs	r6, r0, #0
   11d78:	push	{r7, lr}
   11d7c:	sub	sp, sp, #56	; 0x38
   11d80:	beq	11dbc <__assert_fail@plt+0x590>
   11d84:	ldr	r3, [pc, #684]	; 12038 <__assert_fail@plt+0x80c>
   11d88:	mov	r2, #5
   11d8c:	ldr	r1, [pc, #680]	; 1203c <__assert_fail@plt+0x810>
   11d90:	mov	r0, #0
   11d94:	ldr	r4, [r3]
   11d98:	bl	114f0 <dcgettext@plt>
   11d9c:	ldr	r3, [pc, #668]	; 12040 <__assert_fail@plt+0x814>
   11da0:	mov	r1, #1
   11da4:	ldr	r3, [r3]
   11da8:	mov	r2, r0
   11dac:	mov	r0, r4
   11db0:	bl	116d0 <__fprintf_chk@plt>
   11db4:	mov	r0, r6
   11db8:	bl	11640 <exit@plt>
   11dbc:	mov	r2, #5
   11dc0:	ldr	r1, [pc, #636]	; 12044 <__assert_fail@plt+0x818>
   11dc4:	bl	114f0 <dcgettext@plt>
   11dc8:	ldr	r3, [pc, #624]	; 12040 <__assert_fail@plt+0x814>
   11dcc:	ldr	r7, [pc, #628]	; 12048 <__assert_fail@plt+0x81c>
   11dd0:	ldr	r4, [pc, #628]	; 1204c <__assert_fail@plt+0x820>
   11dd4:	ldr	r2, [r3]
   11dd8:	mov	r1, r0
   11ddc:	mov	r0, #1
   11de0:	bl	116b8 <__printf_chk@plt>
   11de4:	mov	r2, #5
   11de8:	ldr	r1, [pc, #608]	; 12050 <__assert_fail@plt+0x824>
   11dec:	mov	r0, r6
   11df0:	bl	114f0 <dcgettext@plt>
   11df4:	ldr	r1, [r7]
   11df8:	bl	11430 <fputs_unlocked@plt>
   11dfc:	mov	r2, #5
   11e00:	ldr	r1, [pc, #588]	; 12054 <__assert_fail@plt+0x828>
   11e04:	mov	r0, r6
   11e08:	bl	114f0 <dcgettext@plt>
   11e0c:	ldr	r1, [r7]
   11e10:	bl	11430 <fputs_unlocked@plt>
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #568]	; 12058 <__assert_fail@plt+0x82c>
   11e1c:	mov	r0, r6
   11e20:	bl	114f0 <dcgettext@plt>
   11e24:	ldr	r1, [r7]
   11e28:	bl	11430 <fputs_unlocked@plt>
   11e2c:	mov	r2, #5
   11e30:	ldr	r1, [pc, #548]	; 1205c <__assert_fail@plt+0x830>
   11e34:	mov	r0, r6
   11e38:	bl	114f0 <dcgettext@plt>
   11e3c:	ldr	r1, [r7]
   11e40:	bl	11430 <fputs_unlocked@plt>
   11e44:	mov	r2, #5
   11e48:	ldr	r1, [pc, #528]	; 12060 <__assert_fail@plt+0x834>
   11e4c:	mov	r0, r6
   11e50:	bl	114f0 <dcgettext@plt>
   11e54:	ldr	r1, [r7]
   11e58:	bl	11430 <fputs_unlocked@plt>
   11e5c:	mov	r2, #5
   11e60:	ldr	r1, [pc, #508]	; 12064 <__assert_fail@plt+0x838>
   11e64:	mov	r0, r6
   11e68:	bl	114f0 <dcgettext@plt>
   11e6c:	ldr	r1, [r7]
   11e70:	bl	11430 <fputs_unlocked@plt>
   11e74:	ldm	r4!, {r0, r1, r2, r3}
   11e78:	mov	lr, sp
   11e7c:	stmia	lr!, {r0, r1, r2, r3}
   11e80:	ldm	r4!, {r0, r1, r2, r3}
   11e84:	ldr	ip, [sp]
   11e88:	stmia	lr!, {r0, r1, r2, r3}
   11e8c:	cmp	ip, #0
   11e90:	ldm	r4!, {r0, r1, r2, r3}
   11e94:	stmia	lr!, {r0, r1, r2, r3}
   11e98:	ldm	r4, {r0, r1}
   11e9c:	moveq	r4, sp
   11ea0:	stm	lr, {r0, r1}
   11ea4:	beq	11ed4 <__assert_fail@plt+0x6a8>
   11ea8:	ldr	r5, [pc, #440]	; 12068 <__assert_fail@plt+0x83c>
   11eac:	mov	r4, sp
   11eb0:	b	11ec0 <__assert_fail@plt+0x694>
   11eb4:	ldr	ip, [r4, #8]!
   11eb8:	cmp	ip, #0
   11ebc:	beq	11ed4 <__assert_fail@plt+0x6a8>
   11ec0:	mov	r1, ip
   11ec4:	mov	r0, r5
   11ec8:	bl	11454 <strcmp@plt>
   11ecc:	cmp	r0, #0
   11ed0:	bne	11eb4 <__assert_fail@plt+0x688>
   11ed4:	ldr	r4, [r4, #4]
   11ed8:	mov	r2, #5
   11edc:	cmp	r4, #0
   11ee0:	ldr	r1, [pc, #388]	; 1206c <__assert_fail@plt+0x840>
   11ee4:	beq	11f8c <__assert_fail@plt+0x760>
   11ee8:	mov	r0, #0
   11eec:	bl	114f0 <dcgettext@plt>
   11ef0:	ldr	r3, [pc, #376]	; 12070 <__assert_fail@plt+0x844>
   11ef4:	ldr	r2, [pc, #376]	; 12074 <__assert_fail@plt+0x848>
   11ef8:	mov	r1, r0
   11efc:	mov	r0, #1
   11f00:	bl	116b8 <__printf_chk@plt>
   11f04:	mov	r1, #0
   11f08:	mov	r0, #5
   11f0c:	bl	11700 <setlocale@plt>
   11f10:	cmp	r0, #0
   11f14:	ldreq	r5, [pc, #332]	; 12068 <__assert_fail@plt+0x83c>
   11f18:	beq	11f34 <__assert_fail@plt+0x708>
   11f1c:	mov	r2, #3
   11f20:	ldr	r1, [pc, #336]	; 12078 <__assert_fail@plt+0x84c>
   11f24:	bl	117cc <strncmp@plt>
   11f28:	ldr	r5, [pc, #312]	; 12068 <__assert_fail@plt+0x83c>
   11f2c:	cmp	r0, #0
   11f30:	bne	1201c <__assert_fail@plt+0x7f0>
   11f34:	mov	r2, #5
   11f38:	ldr	r1, [pc, #316]	; 1207c <__assert_fail@plt+0x850>
   11f3c:	mov	r0, #0
   11f40:	bl	114f0 <dcgettext@plt>
   11f44:	ldr	r3, [pc, #284]	; 12068 <__assert_fail@plt+0x83c>
   11f48:	ldr	r2, [pc, #288]	; 12070 <__assert_fail@plt+0x844>
   11f4c:	mov	r1, r0
   11f50:	mov	r0, #1
   11f54:	bl	116b8 <__printf_chk@plt>
   11f58:	mov	r2, #5
   11f5c:	ldr	r1, [pc, #284]	; 12080 <__assert_fail@plt+0x854>
   11f60:	mov	r0, #0
   11f64:	bl	114f0 <dcgettext@plt>
   11f68:	ldr	r2, [pc, #276]	; 12084 <__assert_fail@plt+0x858>
   11f6c:	cmp	r4, r5
   11f70:	ldr	r3, [pc, #272]	; 12088 <__assert_fail@plt+0x85c>
   11f74:	movne	r3, r2
   11f78:	mov	r1, r0
   11f7c:	mov	r2, r4
   11f80:	mov	r0, #1
   11f84:	bl	116b8 <__printf_chk@plt>
   11f88:	b	11db4 <__assert_fail@plt+0x588>
   11f8c:	mov	r0, r4
   11f90:	bl	114f0 <dcgettext@plt>
   11f94:	ldr	r3, [pc, #212]	; 12070 <__assert_fail@plt+0x844>
   11f98:	ldr	r2, [pc, #212]	; 12074 <__assert_fail@plt+0x848>
   11f9c:	mov	r1, r0
   11fa0:	mov	r0, #1
   11fa4:	bl	116b8 <__printf_chk@plt>
   11fa8:	mov	r1, r4
   11fac:	mov	r0, #5
   11fb0:	bl	11700 <setlocale@plt>
   11fb4:	cmp	r0, #0
   11fb8:	beq	11fd0 <__assert_fail@plt+0x7a4>
   11fbc:	mov	r2, #3
   11fc0:	ldr	r1, [pc, #176]	; 12078 <__assert_fail@plt+0x84c>
   11fc4:	bl	117cc <strncmp@plt>
   11fc8:	cmp	r0, #0
   11fcc:	bne	12014 <__assert_fail@plt+0x7e8>
   11fd0:	mov	r2, #5
   11fd4:	ldr	r1, [pc, #160]	; 1207c <__assert_fail@plt+0x850>
   11fd8:	mov	r0, #0
   11fdc:	bl	114f0 <dcgettext@plt>
   11fe0:	ldr	r3, [pc, #128]	; 12068 <__assert_fail@plt+0x83c>
   11fe4:	ldr	r2, [pc, #132]	; 12070 <__assert_fail@plt+0x844>
   11fe8:	mov	r4, r3
   11fec:	mov	r1, r0
   11ff0:	mov	r0, #1
   11ff4:	bl	116b8 <__printf_chk@plt>
   11ff8:	ldr	r1, [pc, #128]	; 12080 <__assert_fail@plt+0x854>
   11ffc:	mov	r2, #5
   12000:	mov	r0, #0
   12004:	bl	114f0 <dcgettext@plt>
   12008:	ldr	r3, [pc, #120]	; 12088 <__assert_fail@plt+0x85c>
   1200c:	mov	r1, r0
   12010:	b	11f7c <__assert_fail@plt+0x750>
   12014:	ldr	r5, [pc, #76]	; 12068 <__assert_fail@plt+0x83c>
   12018:	mov	r4, r5
   1201c:	mov	r2, #5
   12020:	ldr	r1, [pc, #100]	; 1208c <__assert_fail@plt+0x860>
   12024:	mov	r0, #0
   12028:	bl	114f0 <dcgettext@plt>
   1202c:	ldr	r1, [r7]
   12030:	bl	11430 <fputs_unlocked@plt>
   12034:	b	11f34 <__assert_fail@plt+0x708>
   12038:	ldrdeq	pc, [r2], -r8
   1203c:	muleq	r1, r0, ip
   12040:	strdeq	pc, [r2], -r0
   12044:			; <UNDEFINED> instruction: 0x0001dcb8
   12048:	ldrdeq	pc, [r2], -ip
   1204c:	andeq	sp, r1, r0, lsl #24
   12050:	ldrdeq	sp, [r1], -r8
   12054:	andeq	sp, r1, ip, lsl #26
   12058:	andeq	sp, r1, r8, asr sp
   1205c:	andeq	sp, r1, r4, lsr #27
   12060:	andeq	sp, r1, r4, ror lr
   12064:	andeq	sp, r1, r4, lsr #29
   12068:	andeq	sp, r1, r8, lsl #25
   1206c:	ldrdeq	sp, [r1], -ip
   12070:	strdeq	sp, [r1], -r4
   12074:	andeq	sp, r1, ip, lsl pc
   12078:	andeq	sp, r1, ip, lsr #30
   1207c:	andeq	sp, r1, r8, ror pc
   12080:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12084:	andeq	lr, r1, r4, asr r2
   12088:	andeq	lr, r1, ip, lsl r1
   1208c:	andeq	sp, r1, r0, lsr pc
   12090:	push	{r4, r5, r6, r7, r8, r9, lr}
   12094:	sub	sp, sp, #116	; 0x74
   12098:	mov	r4, #0
   1209c:	subs	r9, r0, #0
   120a0:	mov	r6, r1
   120a4:	str	r4, [sp]
   120a8:	str	r4, [sp, #4]
   120ac:	beq	12254 <__assert_fail@plt+0xa28>
   120b0:	mov	r1, #32768	; 0x8000
   120b4:	mov	r0, r6
   120b8:	bl	115bc <open64@plt>
   120bc:	cmn	r0, #1
   120c0:	mov	r5, r0
   120c4:	beq	1217c <__assert_fail@plt+0x950>
   120c8:	mov	r1, r0
   120cc:	add	r2, sp, #8
   120d0:	mov	r0, #3
   120d4:	bl	11550 <__fxstat64@plt>
   120d8:	cmp	r0, #0
   120dc:	blt	121ec <__assert_fail@plt+0x9c0>
   120e0:	bl	11688 <__errno_location@plt>
   120e4:	mov	r7, r0
   120e8:	mov	r0, r9
   120ec:	ldr	r3, [sp, #24]
   120f0:	mov	r2, r6
   120f4:	mov	r1, sp
   120f8:	bl	11418 <selabel_lookup@plt>
   120fc:	cmp	r0, #0
   12100:	blt	121c8 <__assert_fail@plt+0x99c>
   12104:	ldr	r0, [sp]
   12108:	bl	114cc <context_new@plt>
   1210c:	subs	r9, r0, #0
   12110:	beq	122b8 <__assert_fail@plt+0xa8c>
   12114:	cmn	r5, #1
   12118:	add	r1, sp, #4
   1211c:	beq	12228 <__assert_fail@plt+0x9fc>
   12120:	mov	r0, r5
   12124:	bl	1bb20 <lchmod@@Base+0x4954>
   12128:	cmp	r0, #0
   1212c:	blt	122ac <__assert_fail@plt+0xa80>
   12130:	ldr	r0, [sp, #4]
   12134:	bl	114cc <context_new@plt>
   12138:	subs	r4, r0, #0
   1213c:	beq	12300 <__assert_fail@plt+0xad4>
   12140:	mov	r0, r9
   12144:	bl	11460 <context_type_get@plt>
   12148:	subs	r1, r0, #0
   1214c:	beq	12160 <__assert_fail@plt+0x934>
   12150:	mov	r0, r4
   12154:	bl	114fc <context_type_set@plt>
   12158:	cmp	r0, #0
   1215c:	beq	122c4 <__assert_fail@plt+0xa98>
   12160:	ldr	r8, [r7]
   12164:	cmn	r5, #1
   12168:	beq	12194 <__assert_fail@plt+0x968>
   1216c:	mvn	r6, #0
   12170:	mov	r0, r5
   12174:	bl	117e4 <close@plt>
   12178:	b	12198 <__assert_fail@plt+0x96c>
   1217c:	bl	11688 <__errno_location@plt>
   12180:	ldr	r8, [r0]
   12184:	mov	r7, r0
   12188:	cmp	r8, #40	; 0x28
   1218c:	movne	r9, r4
   12190:	beq	12204 <__assert_fail@plt+0x9d8>
   12194:	mov	r6, r5
   12198:	mov	r0, r9
   1219c:	bl	11604 <context_free@plt>
   121a0:	mov	r0, r4
   121a4:	bl	11604 <context_free@plt>
   121a8:	ldr	r0, [sp]
   121ac:	bl	11778 <freecon@plt>
   121b0:	ldr	r0, [sp, #4]
   121b4:	bl	11778 <freecon@plt>
   121b8:	str	r8, [r7]
   121bc:	mov	r0, r6
   121c0:	add	sp, sp, #116	; 0x74
   121c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   121c8:	ldr	r8, [r7]
   121cc:	cmp	r8, #2
   121d0:	movne	r4, #0
   121d4:	movne	r9, r4
   121d8:	moveq	r8, #61	; 0x3d
   121dc:	moveq	r4, #0
   121e0:	streq	r8, [r7]
   121e4:	moveq	r9, r4
   121e8:	b	12164 <__assert_fail@plt+0x938>
   121ec:	bl	11688 <__errno_location@plt>
   121f0:	mov	r9, r4
   121f4:	mvn	r6, #0
   121f8:	mov	r7, r0
   121fc:	ldr	r8, [r7]
   12200:	b	12170 <__assert_fail@plt+0x944>
   12204:	add	r2, sp, #8
   12208:	mov	r1, r6
   1220c:	mov	r0, #3
   12210:	bl	117f0 <__lxstat64@plt>
   12214:	cmp	r0, #0
   12218:	bge	120e8 <__assert_fail@plt+0x8bc>
   1221c:	mov	r9, r4
   12220:	ldr	r8, [r7]
   12224:	b	12194 <__assert_fail@plt+0x968>
   12228:	mov	r0, r6
   1222c:	bl	1baac <lchmod@@Base+0x48e0>
   12230:	cmp	r0, #0
   12234:	blt	122a0 <__assert_fail@plt+0xa74>
   12238:	ldr	r0, [sp, #4]
   1223c:	bl	114cc <context_new@plt>
   12240:	subs	r4, r0, #0
   12244:	moveq	r6, r5
   12248:	ldreq	r8, [r7]
   1224c:	beq	12198 <__assert_fail@plt+0x96c>
   12250:	b	12140 <__assert_fail@plt+0x914>
   12254:	add	r0, sp, #4
   12258:	bl	11790 <getfscreatecon@plt>
   1225c:	cmp	r0, r4
   12260:	blt	12320 <__assert_fail@plt+0xaf4>
   12264:	ldr	r1, [sp, #4]
   12268:	cmp	r1, r4
   1226c:	beq	1230c <__assert_fail@plt+0xae0>
   12270:	mov	r0, r6
   12274:	bl	11478 <lsetfilecon@plt>
   12278:	mov	r6, r0
   1227c:	bl	11688 <__errno_location@plt>
   12280:	mov	r4, r0
   12284:	ldr	r0, [sp, #4]
   12288:	ldr	r5, [r4]
   1228c:	bl	11778 <freecon@plt>
   12290:	mov	r0, r6
   12294:	str	r5, [r4]
   12298:	add	sp, sp, #116	; 0x74
   1229c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   122a0:	ldr	r8, [r7]
   122a4:	mov	r4, #0
   122a8:	b	12194 <__assert_fail@plt+0x968>
   122ac:	mov	r4, #0
   122b0:	mvn	r6, #0
   122b4:	b	121fc <__assert_fail@plt+0x9d0>
   122b8:	ldr	r8, [r7]
   122bc:	mov	r4, r9
   122c0:	b	12164 <__assert_fail@plt+0x938>
   122c4:	mov	r0, r4
   122c8:	bl	117a8 <context_str@plt>
   122cc:	subs	r1, r0, #0
   122d0:	beq	12160 <__assert_fail@plt+0x934>
   122d4:	cmn	r5, #1
   122d8:	beq	122ec <__assert_fail@plt+0xac0>
   122dc:	mov	r0, r5
   122e0:	bl	1170c <fsetfilecon@plt>
   122e4:	mov	r6, r0
   122e8:	b	121fc <__assert_fail@plt+0x9d0>
   122ec:	mov	r0, r6
   122f0:	bl	11478 <lsetfilecon@plt>
   122f4:	ldr	r8, [r7]
   122f8:	mov	r5, r0
   122fc:	b	12194 <__assert_fail@plt+0x968>
   12300:	ldr	r8, [r7]
   12304:	mvn	r6, #0
   12308:	b	12170 <__assert_fail@plt+0x944>
   1230c:	bl	11688 <__errno_location@plt>
   12310:	mov	r3, #61	; 0x3d
   12314:	mvn	r6, #0
   12318:	str	r3, [r0]
   1231c:	b	121bc <__assert_fail@plt+0x990>
   12320:	mvn	r6, #0
   12324:	b	121bc <__assert_fail@plt+0x990>
   12328:	push	{r4, r5, r6, r7, r8, r9, lr}
   1232c:	mov	r4, r1
   12330:	ldrb	r1, [r1]
   12334:	sub	sp, sp, #20
   12338:	mov	r3, #0
   1233c:	cmp	r1, #47	; 0x2f
   12340:	mov	r7, r0
   12344:	mov	r5, r2
   12348:	str	r3, [sp]
   1234c:	str	r3, [sp, #4]
   12350:	beq	124ec <__assert_fail@plt+0xcc0>
   12354:	mov	r0, r4
   12358:	mov	r1, #2
   1235c:	bl	12678 <__assert_fail@plt+0xe4c>
   12360:	subs	r6, r0, #0
   12364:	movne	r4, r6
   12368:	beq	12548 <__assert_fail@plt+0xd1c>
   1236c:	mov	r0, r7
   12370:	mov	r3, r5
   12374:	mov	r2, r4
   12378:	mov	r1, sp
   1237c:	bl	11418 <selabel_lookup@plt>
   12380:	cmp	r0, #0
   12384:	blt	124b4 <__assert_fail@plt+0xc88>
   12388:	mov	r0, r4
   1238c:	mov	r4, #0
   12390:	str	r4, [sp, #8]
   12394:	str	r4, [sp, #12]
   12398:	bl	12e78 <__assert_fail@plt+0x164c>
   1239c:	mov	r7, r0
   123a0:	add	r0, sp, #8
   123a4:	bl	1158c <getcon@plt>
   123a8:	cmp	r0, r4
   123ac:	blt	124f4 <__assert_fail@plt+0xcc8>
   123b0:	add	r1, sp, #12
   123b4:	mov	r0, r7
   123b8:	bl	1ba38 <lchmod@@Base+0x486c>
   123bc:	cmp	r0, #0
   123c0:	blt	124f4 <__assert_fail@plt+0xcc8>
   123c4:	mov	r0, r5
   123c8:	bl	11808 <mode_to_security_class@plt>
   123cc:	subs	r2, r0, #0
   123d0:	beq	124f4 <__assert_fail@plt+0xcc8>
   123d4:	add	r3, sp, #4
   123d8:	ldr	r1, [sp, #12]
   123dc:	ldr	r0, [sp, #8]
   123e0:	bl	11748 <security_compute_create@plt>
   123e4:	mov	r8, r0
   123e8:	bl	11688 <__errno_location@plt>
   123ec:	mov	r9, r0
   123f0:	mov	r0, r7
   123f4:	ldr	r5, [r9]
   123f8:	bl	1309c <__assert_fail@plt+0x1870>
   123fc:	ldr	r0, [sp, #8]
   12400:	bl	11778 <freecon@plt>
   12404:	ldr	r0, [sp, #12]
   12408:	bl	11778 <freecon@plt>
   1240c:	cmp	r8, #0
   12410:	str	r5, [r9]
   12414:	movlt	r7, r4
   12418:	mvnlt	r8, #0
   1241c:	blt	1247c <__assert_fail@plt+0xc50>
   12420:	ldr	r0, [sp]
   12424:	bl	114cc <context_new@plt>
   12428:	subs	r7, r0, #0
   1242c:	beq	12538 <__assert_fail@plt+0xd0c>
   12430:	ldr	r0, [sp, #4]
   12434:	bl	114cc <context_new@plt>
   12438:	subs	r4, r0, #0
   1243c:	beq	1252c <__assert_fail@plt+0xd00>
   12440:	mov	r0, r7
   12444:	bl	11460 <context_type_get@plt>
   12448:	subs	r1, r0, #0
   1244c:	beq	1252c <__assert_fail@plt+0xd00>
   12450:	mov	r0, r4
   12454:	bl	114fc <context_type_set@plt>
   12458:	cmp	r0, #0
   1245c:	bne	1252c <__assert_fail@plt+0xd00>
   12460:	mov	r0, r4
   12464:	bl	117a8 <context_str@plt>
   12468:	cmp	r0, #0
   1246c:	beq	1252c <__assert_fail@plt+0xd00>
   12470:	bl	1167c <setfscreatecon@plt>
   12474:	ldr	r5, [r9]
   12478:	mov	r8, r0
   1247c:	mov	r0, r7
   12480:	bl	11604 <context_free@plt>
   12484:	mov	r0, r4
   12488:	bl	11604 <context_free@plt>
   1248c:	ldr	r0, [sp]
   12490:	bl	11778 <freecon@plt>
   12494:	ldr	r0, [sp, #4]
   12498:	bl	11778 <freecon@plt>
   1249c:	mov	r0, r6
   124a0:	bl	1309c <__assert_fail@plt+0x1870>
   124a4:	mov	r0, r8
   124a8:	str	r5, [r9]
   124ac:	add	sp, sp, #20
   124b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124b4:	bl	11688 <__errno_location@plt>
   124b8:	ldr	r5, [r0]
   124bc:	mov	r9, r0
   124c0:	cmp	r5, #2
   124c4:	movne	r4, #0
   124c8:	movne	r7, r4
   124cc:	mvnne	r8, #0
   124d0:	bne	1247c <__assert_fail@plt+0xc50>
   124d4:	mov	r5, #61	; 0x3d
   124d8:	mov	r4, #0
   124dc:	str	r5, [r0]
   124e0:	mov	r7, r4
   124e4:	mvn	r8, #0
   124e8:	b	1247c <__assert_fail@plt+0xc50>
   124ec:	mov	r6, r3
   124f0:	b	1236c <__assert_fail@plt+0xb40>
   124f4:	bl	11688 <__errno_location@plt>
   124f8:	mov	r4, #0
   124fc:	mvn	r8, #0
   12500:	mov	r9, r0
   12504:	mov	r0, r7
   12508:	ldr	r5, [r9]
   1250c:	bl	1309c <__assert_fail@plt+0x1870>
   12510:	ldr	r0, [sp, #8]
   12514:	bl	11778 <freecon@plt>
   12518:	ldr	r0, [sp, #12]
   1251c:	bl	11778 <freecon@plt>
   12520:	mov	r7, r4
   12524:	str	r5, [r9]
   12528:	b	1247c <__assert_fail@plt+0xc50>
   1252c:	ldr	r5, [r9]
   12530:	mvn	r8, #0
   12534:	b	1247c <__assert_fail@plt+0xc50>
   12538:	ldr	r5, [r9]
   1253c:	mov	r4, r7
   12540:	mvn	r8, #0
   12544:	b	1247c <__assert_fail@plt+0xc50>
   12548:	bl	11688 <__errno_location@plt>
   1254c:	mov	r4, r6
   12550:	mov	r7, r6
   12554:	mvn	r8, #0
   12558:	mov	r9, r0
   1255c:	ldr	r5, [r0]
   12560:	b	1247c <__assert_fail@plt+0xc50>
   12564:	push	{r4, r5, r6, r7, r8, lr}
   12568:	mov	r3, r1
   1256c:	ldrb	r1, [r1]
   12570:	sub	sp, sp, #8
   12574:	mov	r5, r0
   12578:	cmp	r1, #47	; 0x2f
   1257c:	mov	r4, r2
   12580:	beq	1262c <__assert_fail@plt+0xe00>
   12584:	mov	r0, r3
   12588:	mov	r1, #2
   1258c:	bl	12678 <__assert_fail@plt+0xe4c>
   12590:	subs	r8, r0, #0
   12594:	beq	12670 <__assert_fail@plt+0xe44>
   12598:	cmp	r4, #0
   1259c:	mov	r3, r8
   125a0:	beq	12638 <__assert_fail@plt+0xe0c>
   125a4:	mov	r2, #0
   125a8:	mov	r1, #16
   125ac:	mov	r0, sp
   125b0:	str	r3, [sp]
   125b4:	str	r2, [sp, #4]
   125b8:	mov	r7, r2
   125bc:	bl	1cc94 <lchmod@@Base+0x5ac8>
   125c0:	mov	r4, r0
   125c4:	bl	11688 <__errno_location@plt>
   125c8:	mov	r6, r0
   125cc:	b	125e0 <__assert_fail@plt+0xdb4>
   125d0:	ldr	r1, [r4, #24]
   125d4:	bl	12090 <__assert_fail@plt+0x864>
   125d8:	cmp	r0, #0
   125dc:	ldrlt	r7, [r6]
   125e0:	mov	r0, r4
   125e4:	bl	14c5c <__assert_fail@plt+0x3430>
   125e8:	cmp	r0, #0
   125ec:	mov	r0, r5
   125f0:	bne	125d0 <__assert_fail@plt+0xda4>
   125f4:	mov	r0, r4
   125f8:	ldr	r4, [r6]
   125fc:	bl	14a94 <__assert_fail@plt+0x3268>
   12600:	cmp	r4, #0
   12604:	moveq	r4, r7
   12608:	cmp	r0, #0
   1260c:	mov	r0, r8
   12610:	ldrne	r4, [r6]
   12614:	bl	1309c <__assert_fail@plt+0x1870>
   12618:	clz	r4, r4
   1261c:	lsr	r4, r4, #5
   12620:	mov	r0, r4
   12624:	add	sp, sp, #8
   12628:	pop	{r4, r5, r6, r7, r8, pc}
   1262c:	cmp	r4, #0
   12630:	mov	r8, #0
   12634:	bne	125a4 <__assert_fail@plt+0xd78>
   12638:	mov	r1, r3
   1263c:	mov	r0, r5
   12640:	bl	12090 <__assert_fail@plt+0x864>
   12644:	adds	r4, r0, #1
   12648:	movne	r4, #1
   1264c:	bl	11688 <__errno_location@plt>
   12650:	mov	r5, r0
   12654:	mov	r0, r8
   12658:	ldr	r6, [r5]
   1265c:	bl	1309c <__assert_fail@plt+0x1870>
   12660:	mov	r0, r4
   12664:	str	r6, [r5]
   12668:	add	sp, sp, #8
   1266c:	pop	{r4, r5, r6, r7, r8, pc}
   12670:	mov	r4, r8
   12674:	b	12620 <__assert_fail@plt+0xdf4>
   12678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1267c:	and	r9, r1, #3
   12680:	sub	r3, r9, #1
   12684:	sub	sp, sp, #3232	; 0xca0
   12688:	tst	r3, r9
   1268c:	sub	sp, sp, #12
   12690:	bne	12874 <__assert_fail@plt+0x1048>
   12694:	cmp	r0, #0
   12698:	mov	r8, r0
   1269c:	beq	12874 <__assert_fail@plt+0x1048>
   126a0:	ldrb	r6, [r0]
   126a4:	cmp	r6, #0
   126a8:	beq	128b0 <__assert_fail@plt+0x1084>
   126ac:	add	fp, sp, #2208	; 0x8a0
   126b0:	mov	r5, r1
   126b4:	add	r3, sp, #1184	; 0x4a0
   126b8:	mov	r1, #1024	; 0x400
   126bc:	add	fp, fp, #8
   126c0:	add	sl, sp, #152	; 0x98
   126c4:	cmp	r6, #47	; 0x2f
   126c8:	str	r3, [sp, #1176]	; 0x498
   126cc:	str	r1, [sp, #1180]	; 0x49c
   126d0:	str	r1, [sp, #2212]	; 0x8a4
   126d4:	str	r1, [sp, #148]	; 0x94
   126d8:	str	fp, [sp, #2208]	; 0x8a0
   126dc:	str	sl, [sp, #144]	; 0x90
   126e0:	beq	1278c <__assert_fail@plt+0xf60>
   126e4:	mov	r4, sl
   126e8:	sub	r6, sl, #8
   126ec:	mov	r0, r4
   126f0:	bl	11634 <getcwd@plt>
   126f4:	cmp	r0, #0
   126f8:	bne	12a2c <__assert_fail@plt+0x1200>
   126fc:	bl	11688 <__errno_location@plt>
   12700:	ldr	r3, [r0]
   12704:	cmp	r3, #12
   12708:	beq	12870 <__assert_fail@plt+0x1044>
   1270c:	cmp	r3, #34	; 0x22
   12710:	beq	12770 <__assert_fail@plt+0xf44>
   12714:	mov	r5, r4
   12718:	mov	r6, #1
   1271c:	ldr	r0, [sp, #1176]	; 0x498
   12720:	add	r3, sp, #1184	; 0x4a0
   12724:	cmp	r0, r3
   12728:	beq	12730 <__assert_fail@plt+0xf04>
   1272c:	bl	1309c <__assert_fail@plt+0x1870>
   12730:	ldr	r0, [sp, #2208]	; 0x8a0
   12734:	cmp	r0, fp
   12738:	beq	12740 <__assert_fail@plt+0xf14>
   1273c:	bl	1309c <__assert_fail@plt+0x1870>
   12740:	cmp	r6, #0
   12744:	beq	12894 <__assert_fail@plt+0x1068>
   12748:	ldr	r0, [sp, #144]	; 0x90
   1274c:	cmp	r0, sl
   12750:	moveq	r6, #0
   12754:	beq	12760 <__assert_fail@plt+0xf34>
   12758:	bl	1309c <__assert_fail@plt+0x1870>
   1275c:	mov	r6, #0
   12760:	mov	r0, r6
   12764:	add	sp, sp, #3232	; 0xca0
   12768:	add	sp, sp, #12
   1276c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12770:	mov	r0, r6
   12774:	bl	1b92c <lchmod@@Base+0x4760>
   12778:	cmp	r0, #0
   1277c:	beq	12870 <__assert_fail@plt+0x1044>
   12780:	ldr	r4, [sp, #144]	; 0x90
   12784:	ldr	r1, [sp, #148]	; 0x94
   12788:	b	126ec <__assert_fail@plt+0xec0>
   1278c:	mov	r4, sl
   12790:	add	r0, sl, #1
   12794:	strb	r6, [sp, #152]	; 0x98
   12798:	mov	r3, #0
   1279c:	and	r2, r5, #4
   127a0:	str	r3, [sp, #24]
   127a4:	str	r2, [sp, #8]
   127a8:	str	r3, [sp, #12]
   127ac:	str	r3, [sp, #16]
   127b0:	str	r9, [sp, #20]
   127b4:	cmp	r6, #0
   127b8:	beq	12b90 <__assert_fail@plt+0x1364>
   127bc:	cmp	r6, #47	; 0x2f
   127c0:	movne	r3, r6
   127c4:	bne	127dc <__assert_fail@plt+0xfb0>
   127c8:	ldrb	r3, [r8, #1]!
   127cc:	cmp	r3, #47	; 0x2f
   127d0:	beq	127c8 <__assert_fail@plt+0xf9c>
   127d4:	cmp	r3, #0
   127d8:	beq	12b90 <__assert_fail@plt+0x1364>
   127dc:	mov	r5, r8
   127e0:	ldrb	r6, [r5, #1]!
   127e4:	cmp	r6, #0
   127e8:	cmpne	r6, #47	; 0x2f
   127ec:	bne	127e0 <__assert_fail@plt+0xfb4>
   127f0:	subs	r7, r5, r8
   127f4:	beq	12b90 <__assert_fail@plt+0x1364>
   127f8:	cmp	r7, #1
   127fc:	beq	1297c <__assert_fail@plt+0x1150>
   12800:	cmp	r7, #2
   12804:	cmpeq	r3, #46	; 0x2e
   12808:	beq	128c0 <__assert_fail@plt+0x1094>
   1280c:	ldrb	r3, [r0, #-1]
   12810:	add	r6, r7, #2
   12814:	cmp	r3, #47	; 0x2f
   12818:	movne	r3, #47	; 0x2f
   1281c:	strbne	r3, [r0]
   12820:	ldr	r3, [sp, #148]	; 0x94
   12824:	addne	r0, r0, #1
   12828:	add	r3, r4, r3
   1282c:	sub	r3, r3, r0
   12830:	cmp	r3, r6
   12834:	bcs	12914 <__assert_fail@plt+0x10e8>
   12838:	mov	r9, r0
   1283c:	b	1285c <__assert_fail@plt+0x1030>
   12840:	ldr	r3, [sp, #148]	; 0x94
   12844:	ldr	r4, [sp, #144]	; 0x90
   12848:	sub	r3, r3, r9
   1284c:	cmp	r3, r6
   12850:	add	r9, r4, r9
   12854:	mov	r0, r9
   12858:	bcs	12914 <__assert_fail@plt+0x10e8>
   1285c:	add	r0, sp, #144	; 0x90
   12860:	bl	1b9a4 <lchmod@@Base+0x47d8>
   12864:	sub	r9, r9, r4
   12868:	cmp	r0, #0
   1286c:	bne	12840 <__assert_fail@plt+0x1014>
   12870:	bl	1cc54 <lchmod@@Base+0x5a88>
   12874:	bl	11688 <__errno_location@plt>
   12878:	mov	r6, #0
   1287c:	mov	r3, #22
   12880:	str	r3, [r0]
   12884:	mov	r0, r6
   12888:	add	sp, sp, #3232	; 0xca0
   1288c:	add	sp, sp, #12
   12890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12894:	strb	r6, [r4], #1
   12898:	sub	r0, sl, #8
   1289c:	sub	r1, r4, r5
   128a0:	bl	1b8dc <lchmod@@Base+0x4710>
   128a4:	subs	r6, r0, #0
   128a8:	bne	12760 <__assert_fail@plt+0xf34>
   128ac:	b	12870 <__assert_fail@plt+0x1044>
   128b0:	bl	11688 <__errno_location@plt>
   128b4:	mov	r3, #2
   128b8:	str	r3, [r0]
   128bc:	b	12760 <__assert_fail@plt+0xf34>
   128c0:	ldrb	r3, [r8, #1]
   128c4:	cmp	r3, #46	; 0x2e
   128c8:	bne	1280c <__assert_fail@plt+0xfe0>
   128cc:	add	r3, r4, #1
   128d0:	cmp	r0, r3
   128d4:	bls	1290c <__assert_fail@plt+0x10e0>
   128d8:	sub	r3, r0, #1
   128dc:	cmp	r4, r3
   128e0:	bcs	12d58 <__assert_fail@plt+0x152c>
   128e4:	ldrb	r2, [r0, #-2]
   128e8:	cmp	r2, #47	; 0x2f
   128ec:	beq	12d58 <__assert_fail@plt+0x152c>
   128f0:	sub	r3, r0, #2
   128f4:	cmp	r3, r4
   128f8:	mov	r0, r3
   128fc:	beq	1290c <__assert_fail@plt+0x10e0>
   12900:	ldrb	r2, [r3, #-1]!
   12904:	cmp	r2, #47	; 0x2f
   12908:	bne	128f4 <__assert_fail@plt+0x10c8>
   1290c:	mov	r8, r5
   12910:	b	127b4 <__assert_fail@plt+0xf88>
   12914:	mov	r2, r7
   12918:	mov	r1, r8
   1291c:	bl	11610 <mempcpy@plt>
   12920:	ldr	r3, [sp, #8]
   12924:	cmp	r3, #0
   12928:	mov	r3, #0
   1292c:	str	r0, [sp, #28]
   12930:	strb	r3, [r0]
   12934:	bne	12988 <__assert_fail@plt+0x115c>
   12938:	sub	r3, fp, #8
   1293c:	mov	r9, r3
   12940:	str	r5, [sp, #32]
   12944:	ldr	r6, [sp, #2212]	; 0x8a4
   12948:	ldr	r5, [sp, #2208]	; 0x8a0
   1294c:	sub	r6, r6, #1
   12950:	mov	r2, r6
   12954:	mov	r1, r5
   12958:	mov	r0, r4
   1295c:	bl	1155c <readlink@plt>
   12960:	cmp	r6, r0
   12964:	bgt	12a40 <__assert_fail@plt+0x1214>
   12968:	mov	r0, r9
   1296c:	bl	1b92c <lchmod@@Base+0x4760>
   12970:	cmp	r0, #0
   12974:	bne	12944 <__assert_fail@plt+0x1118>
   12978:	b	12870 <__assert_fail@plt+0x1044>
   1297c:	cmp	r3, #46	; 0x2e
   12980:	bne	1280c <__assert_fail@plt+0xfe0>
   12984:	b	1290c <__assert_fail@plt+0x10e0>
   12988:	ldr	r3, [sp, #20]
   1298c:	cmp	r3, #2
   12990:	beq	12c28 <__assert_fail@plt+0x13fc>
   12994:	ldrb	r2, [r5]
   12998:	mov	r3, r5
   1299c:	mov	r1, r2
   129a0:	cmp	r1, #47	; 0x2f
   129a4:	beq	129b0 <__assert_fail@plt+0x1184>
   129a8:	b	129f8 <__assert_fail@plt+0x11cc>
   129ac:	mov	r3, r0
   129b0:	ldrb	r1, [r3, #1]
   129b4:	add	r0, r3, #1
   129b8:	cmp	r1, #47	; 0x2f
   129bc:	beq	129ac <__assert_fail@plt+0x1180>
   129c0:	cmp	r1, #0
   129c4:	add	r3, r3, #2
   129c8:	beq	12c44 <__assert_fail@plt+0x1418>
   129cc:	cmp	r1, #46	; 0x2e
   129d0:	bne	129f8 <__assert_fail@plt+0x11cc>
   129d4:	ldrb	r1, [r0, #1]
   129d8:	cmp	r1, #0
   129dc:	beq	12c44 <__assert_fail@plt+0x1418>
   129e0:	cmp	r1, #46	; 0x2e
   129e4:	bne	129a0 <__assert_fail@plt+0x1174>
   129e8:	ldrb	r3, [r0, #2]
   129ec:	cmp	r3, #47	; 0x2f
   129f0:	cmpne	r3, #0
   129f4:	beq	12c44 <__assert_fail@plt+0x1418>
   129f8:	ldr	r3, [sp, #8]
   129fc:	cmp	r3, #0
   12a00:	bne	12d04 <__assert_fail@plt+0x14d8>
   12a04:	bl	11688 <__errno_location@plt>
   12a08:	ldr	r6, [r0]
   12a0c:	subs	r6, r6, #22
   12a10:	movne	r6, #1
   12a14:	cmp	r6, #0
   12a18:	bne	12c74 <__assert_fail@plt+0x1448>
   12a1c:	ldrb	r2, [r5]
   12a20:	mov	r6, r2
   12a24:	ldr	r0, [sp, #28]
   12a28:	b	1290c <__assert_fail@plt+0x10e0>
   12a2c:	mov	r1, #0
   12a30:	mov	r0, r4
   12a34:	bl	1152c <rawmemchr@plt>
   12a38:	ldrb	r6, [r8]
   12a3c:	b	12798 <__assert_fail@plt+0xf6c>
   12a40:	cmp	r0, #0
   12a44:	mov	r9, r5
   12a48:	mov	r6, r0
   12a4c:	ldr	r5, [sp, #32]
   12a50:	blt	12988 <__assert_fail@plt+0x115c>
   12a54:	ldr	r3, [sp, #16]
   12a58:	cmp	r3, #19
   12a5c:	addle	r3, r3, #1
   12a60:	strle	r3, [sp, #16]
   12a64:	ble	12b28 <__assert_fail@plt+0x12fc>
   12a68:	ldrb	r3, [r8]
   12a6c:	cmp	r3, #0
   12a70:	beq	12b28 <__assert_fail@plt+0x12fc>
   12a74:	ldr	r2, [sp, #28]
   12a78:	rsb	r7, r7, #0
   12a7c:	mov	r3, #0
   12a80:	strb	r3, [r2, r7]
   12a84:	ldrb	r1, [r4]
   12a88:	add	r3, sp, #40	; 0x28
   12a8c:	mov	r2, r3
   12a90:	cmp	r1, #0
   12a94:	ldr	r3, [pc, #708]	; 12d60 <__assert_fail@plt+0x1534>
   12a98:	movne	r3, r4
   12a9c:	mov	r1, r3
   12aa0:	mov	r0, #3
   12aa4:	bl	117c0 <__xstat64@plt>
   12aa8:	cmp	r0, #0
   12aac:	bne	12af8 <__assert_fail@plt+0x12cc>
   12ab0:	ldrb	r3, [r8]
   12ab4:	ldr	r1, [sp, #24]
   12ab8:	ldr	r2, [sp, #28]
   12abc:	cmp	r1, #0
   12ac0:	strb	r3, [r2, r7]
   12ac4:	beq	12d14 <__assert_fail@plt+0x14e8>
   12ac8:	add	r2, sp, #40	; 0x28
   12acc:	mov	r1, r8
   12ad0:	ldr	r0, [sp, #24]
   12ad4:	bl	13054 <__assert_fail@plt+0x1828>
   12ad8:	cmp	r0, #0
   12adc:	beq	12b18 <__assert_fail@plt+0x12ec>
   12ae0:	ldr	r3, [sp, #20]
   12ae4:	cmp	r3, #2
   12ae8:	beq	12c28 <__assert_fail@plt+0x13fc>
   12aec:	bl	11688 <__errno_location@plt>
   12af0:	mov	r3, #40	; 0x28
   12af4:	str	r3, [r0]
   12af8:	mov	r5, r4
   12afc:	ldr	r4, [sp, #28]
   12b00:	mov	r6, #1
   12b04:	ldr	r0, [sp, #24]
   12b08:	cmp	r0, #0
   12b0c:	beq	1271c <__assert_fail@plt+0xef0>
   12b10:	bl	16250 <__assert_fail@plt+0x4a24>
   12b14:	b	1271c <__assert_fail@plt+0xef0>
   12b18:	add	r2, sp, #40	; 0x28
   12b1c:	mov	r1, r8
   12b20:	ldr	r0, [sp, #24]
   12b24:	bl	12fec <__assert_fail@plt+0x17c0>
   12b28:	mov	r3, #0
   12b2c:	strb	r3, [r9, r6]
   12b30:	ldr	r2, [sp, #12]
   12b34:	ldr	r8, [sp, #1176]	; 0x498
   12b38:	cmp	r2, r3
   12b3c:	subne	r3, r5, r8
   12b40:	moveq	r3, r2
   12b44:	mov	r0, r5
   12b48:	str	r3, [sp, #36]	; 0x24
   12b4c:	bl	11658 <strlen@plt>
   12b50:	adds	r7, r6, r0
   12b54:	str	r0, [sp, #32]
   12b58:	bcs	12870 <__assert_fail@plt+0x1044>
   12b5c:	ldr	r3, [sp, #1180]	; 0x49c
   12b60:	cmp	r3, r7
   12b64:	bls	12b78 <__assert_fail@plt+0x134c>
   12b68:	b	12bbc <__assert_fail@plt+0x1390>
   12b6c:	ldr	r3, [sp, #1180]	; 0x49c
   12b70:	cmp	r7, r3
   12b74:	bcc	12bb8 <__assert_fail@plt+0x138c>
   12b78:	add	r0, sp, #1168	; 0x490
   12b7c:	add	r0, r0, #8
   12b80:	bl	1b9a4 <lchmod@@Base+0x47d8>
   12b84:	cmp	r0, #0
   12b88:	bne	12b6c <__assert_fail@plt+0x1340>
   12b8c:	b	12870 <__assert_fail@plt+0x1044>
   12b90:	add	r3, r4, #1
   12b94:	cmp	r0, r3
   12b98:	bls	12c34 <__assert_fail@plt+0x1408>
   12b9c:	ldrb	r3, [r0, #-1]
   12ba0:	mov	r5, r4
   12ba4:	mov	r6, #0
   12ba8:	cmp	r3, #47	; 0x2f
   12bac:	subeq	r4, r0, #1
   12bb0:	movne	r4, r0
   12bb4:	b	12b04 <__assert_fail@plt+0x12d8>
   12bb8:	ldr	r8, [sp, #1176]	; 0x498
   12bbc:	ldr	r3, [sp, #12]
   12bc0:	add	r0, r8, r6
   12bc4:	cmp	r3, #0
   12bc8:	ldrne	r3, [sp, #36]	; 0x24
   12bcc:	addne	r5, r8, r3
   12bd0:	ldr	r3, [sp, #32]
   12bd4:	mov	r1, r5
   12bd8:	add	r2, r3, #1
   12bdc:	bl	11484 <memmove@plt>
   12be0:	mov	r2, r6
   12be4:	mov	r1, r9
   12be8:	mov	r0, r8
   12bec:	bl	114b4 <memcpy@plt>
   12bf0:	ldrb	r2, [r9]
   12bf4:	cmp	r2, #47	; 0x2f
   12bf8:	mov	r3, r0
   12bfc:	beq	12d3c <__assert_fail@plt+0x1510>
   12c00:	ldr	r1, [sp, #28]
   12c04:	add	r2, r4, #1
   12c08:	cmp	r1, r2
   12c0c:	bhi	12cb4 <__assert_fail@plt+0x1488>
   12c10:	ldrb	r6, [r3]
   12c14:	mov	r5, r3
   12c18:	mov	r3, #1
   12c1c:	mov	r0, r1
   12c20:	str	r3, [sp, #12]
   12c24:	b	1290c <__assert_fail@plt+0x10e0>
   12c28:	ldr	r0, [sp, #28]
   12c2c:	ldrb	r6, [r5]
   12c30:	b	1290c <__assert_fail@plt+0x10e0>
   12c34:	mov	r5, r4
   12c38:	mov	r6, #0
   12c3c:	mov	r4, r0
   12c40:	b	12b04 <__assert_fail@plt+0x12d8>
   12c44:	ldr	r3, [pc, #280]	; 12d64 <__assert_fail@plt+0x1538>
   12c48:	ldr	r0, [sp, #28]
   12c4c:	mov	r2, #0
   12c50:	ldrh	r1, [r3]
   12c54:	mov	r3, #512	; 0x200
   12c58:	strh	r1, [r0]
   12c5c:	mov	r1, r4
   12c60:	mvn	r0, #99	; 0x63
   12c64:	bl	1149c <faccessat@plt>
   12c68:	adds	r6, r0, #0
   12c6c:	movne	r6, #1
   12c70:	b	12a14 <__assert_fail@plt+0x11e8>
   12c74:	ldr	r3, [sp, #20]
   12c78:	cmp	r3, #1
   12c7c:	bne	12ca8 <__assert_fail@plt+0x147c>
   12c80:	bl	11688 <__errno_location@plt>
   12c84:	ldr	r3, [r0]
   12c88:	cmp	r3, #2
   12c8c:	bne	12ca8 <__assert_fail@plt+0x147c>
   12c90:	ldr	r1, [pc, #204]	; 12d64 <__assert_fail@plt+0x1538>
   12c94:	mov	r0, r5
   12c98:	bl	11820 <strspn@plt>
   12c9c:	ldrb	r3, [r5, r0]
   12ca0:	cmp	r3, #0
   12ca4:	beq	12c28 <__assert_fail@plt+0x13fc>
   12ca8:	mov	r5, r4
   12cac:	ldr	r4, [sp, #28]
   12cb0:	b	12b04 <__assert_fail@plt+0x12d8>
   12cb4:	sub	r0, r1, #1
   12cb8:	cmp	r0, r4
   12cbc:	bls	12cf0 <__assert_fail@plt+0x14c4>
   12cc0:	ldrb	r2, [r1, #-2]
   12cc4:	cmp	r2, #47	; 0x2f
   12cc8:	beq	12cf0 <__assert_fail@plt+0x14c4>
   12ccc:	ldr	r2, [sp, #28]
   12cd0:	sub	r2, r2, #2
   12cd4:	cmp	r4, r2
   12cd8:	mov	r0, r2
   12cdc:	beq	12cf0 <__assert_fail@plt+0x14c4>
   12ce0:	ldrb	r1, [r2, #-1]
   12ce4:	sub	r2, r2, #1
   12ce8:	cmp	r1, #47	; 0x2f
   12cec:	bne	12cd4 <__assert_fail@plt+0x14a8>
   12cf0:	ldrb	r6, [r3]
   12cf4:	mov	r5, r3
   12cf8:	mov	r3, #1
   12cfc:	str	r3, [sp, #12]
   12d00:	b	1290c <__assert_fail@plt+0x10e0>
   12d04:	cmp	r2, #0
   12d08:	bne	12a20 <__assert_fail@plt+0x11f4>
   12d0c:	mov	r3, #512	; 0x200
   12d10:	b	12c5c <__assert_fail@plt+0x1430>
   12d14:	ldr	r3, [pc, #76]	; 12d68 <__assert_fail@plt+0x153c>
   12d18:	ldr	r2, [pc, #76]	; 12d6c <__assert_fail@plt+0x1540>
   12d1c:	str	r3, [sp]
   12d20:	mov	r0, #7
   12d24:	ldr	r3, [pc, #68]	; 12d70 <__assert_fail@plt+0x1544>
   12d28:	bl	15f60 <__assert_fail@plt+0x4734>
   12d2c:	subs	r3, r0, #0
   12d30:	str	r3, [sp, #24]
   12d34:	bne	12ac8 <__assert_fail@plt+0x129c>
   12d38:	b	12870 <__assert_fail@plt+0x1044>
   12d3c:	mov	r3, #1
   12d40:	strb	r2, [r4]
   12d44:	mov	r5, r0
   12d48:	ldrb	r6, [r0]
   12d4c:	str	r3, [sp, #12]
   12d50:	add	r0, r4, #1
   12d54:	b	1290c <__assert_fail@plt+0x10e0>
   12d58:	mov	r0, r3
   12d5c:	b	1290c <__assert_fail@plt+0x10e0>
   12d60:	andeq	lr, r1, r0, lsr #3
   12d64:	andeq	lr, r1, r4, lsr #3
   12d68:	strdeq	r7, [r1], -r0
   12d6c:	andeq	r7, r1, ip, rrx
   12d70:	andeq	r7, r1, r4, lsr #1
   12d74:	ldr	r3, [pc, #4]	; 12d80 <__assert_fail@plt+0x1554>
   12d78:	str	r0, [r3]
   12d7c:	bx	lr
   12d80:	andeq	pc, r2, r8, ror #3
   12d84:	ldr	r3, [pc, #4]	; 12d90 <__assert_fail@plt+0x1564>
   12d88:	strb	r0, [r3, #4]
   12d8c:	bx	lr
   12d90:	andeq	pc, r2, r8, ror #3
   12d94:	ldr	r3, [pc, #192]	; 12e5c <__assert_fail@plt+0x1630>
   12d98:	push	{r4, r5, r6, lr}
   12d9c:	sub	sp, sp, #8
   12da0:	ldr	r0, [r3]
   12da4:	bl	1ce90 <lchmod@@Base+0x5cc4>
   12da8:	cmp	r0, #0
   12dac:	beq	12dd0 <__assert_fail@plt+0x15a4>
   12db0:	ldr	r4, [pc, #168]	; 12e60 <__assert_fail@plt+0x1634>
   12db4:	ldrb	r3, [r4, #4]
   12db8:	cmp	r3, #0
   12dbc:	beq	12dec <__assert_fail@plt+0x15c0>
   12dc0:	bl	11688 <__errno_location@plt>
   12dc4:	ldr	r3, [r0]
   12dc8:	cmp	r3, #32
   12dcc:	bne	12dec <__assert_fail@plt+0x15c0>
   12dd0:	ldr	r3, [pc, #140]	; 12e64 <__assert_fail@plt+0x1638>
   12dd4:	ldr	r0, [r3]
   12dd8:	bl	1ce90 <lchmod@@Base+0x5cc4>
   12ddc:	cmp	r0, #0
   12de0:	bne	12e34 <__assert_fail@plt+0x1608>
   12de4:	add	sp, sp, #8
   12de8:	pop	{r4, r5, r6, pc}
   12dec:	mov	r2, #5
   12df0:	ldr	r1, [pc, #112]	; 12e68 <__assert_fail@plt+0x163c>
   12df4:	mov	r0, #0
   12df8:	bl	114f0 <dcgettext@plt>
   12dfc:	ldr	r4, [r4]
   12e00:	cmp	r4, #0
   12e04:	mov	r5, r0
   12e08:	beq	12e40 <__assert_fail@plt+0x1614>
   12e0c:	bl	11688 <__errno_location@plt>
   12e10:	ldr	r6, [r0]
   12e14:	mov	r0, r4
   12e18:	bl	1a4fc <lchmod@@Base+0x3330>
   12e1c:	mov	r1, r6
   12e20:	str	r5, [sp]
   12e24:	ldr	r2, [pc, #64]	; 12e6c <__assert_fail@plt+0x1640>
   12e28:	mov	r3, r0
   12e2c:	mov	r0, #0
   12e30:	bl	115b0 <error@plt>
   12e34:	ldr	r3, [pc, #52]	; 12e70 <__assert_fail@plt+0x1644>
   12e38:	ldr	r0, [r3]
   12e3c:	bl	114a8 <_exit@plt>
   12e40:	bl	11688 <__errno_location@plt>
   12e44:	mov	r3, r5
   12e48:	ldr	r2, [pc, #36]	; 12e74 <__assert_fail@plt+0x1648>
   12e4c:	ldr	r1, [r0]
   12e50:	mov	r0, r4
   12e54:	bl	115b0 <error@plt>
   12e58:	b	12e34 <__assert_fail@plt+0x1608>
   12e5c:	ldrdeq	pc, [r2], -ip
   12e60:	andeq	pc, r2, r8, ror #3
   12e64:	ldrdeq	pc, [r2], -r8
   12e68:	andeq	lr, r1, r8, lsr #3
   12e6c:			; <UNDEFINED> instruction: 0x0001e1b4
   12e70:	andeq	pc, r2, r0, lsl #3
   12e74:			; <UNDEFINED> instruction: 0x0001e1b8
   12e78:	push	{r4, lr}
   12e7c:	bl	12f04 <__assert_fail@plt+0x16d8>
   12e80:	cmp	r0, #0
   12e84:	popne	{r4, pc}
   12e88:	bl	1cc54 <lchmod@@Base+0x5a88>
   12e8c:	push	{r4, r5, r6, lr}
   12e90:	mov	r5, r0
   12e94:	ldrb	r4, [r0]
   12e98:	bl	1cde4 <lchmod@@Base+0x5c18>
   12e9c:	sub	r4, r4, #47	; 0x2f
   12ea0:	clz	r4, r4
   12ea4:	lsr	r4, r4, #5
   12ea8:	sub	r0, r0, r5
   12eac:	cmp	r0, r4
   12eb0:	bls	12efc <__assert_fail@plt+0x16d0>
   12eb4:	sub	r3, r0, #1
   12eb8:	add	r2, r5, r3
   12ebc:	ldrb	r1, [r5, r3]
   12ec0:	cmp	r1, #47	; 0x2f
   12ec4:	beq	12ee0 <__assert_fail@plt+0x16b4>
   12ec8:	b	12efc <__assert_fail@plt+0x16d0>
   12ecc:	ldrb	r1, [r2, #-1]!
   12ed0:	sub	r0, r3, #1
   12ed4:	cmp	r1, #47	; 0x2f
   12ed8:	bne	12ef0 <__assert_fail@plt+0x16c4>
   12edc:	mov	r3, r0
   12ee0:	cmp	r4, r3
   12ee4:	bne	12ecc <__assert_fail@plt+0x16a0>
   12ee8:	mov	r0, r4
   12eec:	pop	{r4, r5, r6, pc}
   12ef0:	mov	r4, r3
   12ef4:	mov	r0, r4
   12ef8:	pop	{r4, r5, r6, pc}
   12efc:	mov	r4, r0
   12f00:	b	12ee8 <__assert_fail@plt+0x16bc>
   12f04:	push	{r4, r5, r6, r7, r8, lr}
   12f08:	mov	r6, r0
   12f0c:	ldrb	r4, [r0]
   12f10:	bl	1cde4 <lchmod@@Base+0x5c18>
   12f14:	sub	r4, r4, #47	; 0x2f
   12f18:	clz	r4, r4
   12f1c:	lsr	r4, r4, #5
   12f20:	sub	r5, r0, r6
   12f24:	cmp	r5, r4
   12f28:	bls	12fe4 <__assert_fail@plt+0x17b8>
   12f2c:	sub	r3, r5, #1
   12f30:	add	r2, r6, r3
   12f34:	ldrb	r1, [r6, r3]
   12f38:	cmp	r1, #47	; 0x2f
   12f3c:	beq	12f58 <__assert_fail@plt+0x172c>
   12f40:	b	12fb4 <__assert_fail@plt+0x1788>
   12f44:	ldrb	r0, [r2, #-1]!
   12f48:	sub	ip, r3, #1
   12f4c:	cmp	r0, #47	; 0x2f
   12f50:	bne	12fb0 <__assert_fail@plt+0x1784>
   12f54:	mov	r3, ip
   12f58:	cmp	r4, r3
   12f5c:	bne	12f44 <__assert_fail@plt+0x1718>
   12f60:	eor	r3, r4, #1
   12f64:	and	r3, r3, #1
   12f68:	add	r0, r4, #1
   12f6c:	add	r0, r0, r3
   12f70:	uxtb	r5, r3
   12f74:	bl	1cd5c <lchmod@@Base+0x5b90>
   12f78:	subs	r7, r0, #0
   12f7c:	beq	12fdc <__assert_fail@plt+0x17b0>
   12f80:	mov	r1, r6
   12f84:	mov	r2, r4
   12f88:	bl	114b4 <memcpy@plt>
   12f8c:	cmp	r5, #0
   12f90:	movne	r5, #1
   12f94:	moveq	r5, r4
   12f98:	movne	r3, #46	; 0x2e
   12f9c:	strbne	r3, [r7]
   12fa0:	mov	r3, #0
   12fa4:	strb	r3, [r7, r5]
   12fa8:	mov	r0, r7
   12fac:	pop	{r4, r5, r6, r7, r8, pc}
   12fb0:	mov	r5, r3
   12fb4:	add	r0, r5, #1
   12fb8:	cmp	r5, #0
   12fbc:	addeq	r0, r0, #1
   12fc0:	bl	1cd5c <lchmod@@Base+0x5b90>
   12fc4:	subs	r7, r0, #0
   12fc8:	beq	12fdc <__assert_fail@plt+0x17b0>
   12fcc:	mov	r1, r6
   12fd0:	mov	r2, r5
   12fd4:	bl	114b4 <memcpy@plt>
   12fd8:	b	12fa0 <__assert_fail@plt+0x1774>
   12fdc:	mov	r7, #0
   12fe0:	b	12fa8 <__assert_fail@plt+0x177c>
   12fe4:	mov	r4, r5
   12fe8:	b	12f60 <__assert_fail@plt+0x1734>
   12fec:	push	{r4, r5, r6, r7, r8, lr}
   12ff0:	subs	r8, r0, #0
   12ff4:	popeq	{r4, r5, r6, r7, r8, pc}
   12ff8:	mov	r0, #24
   12ffc:	mov	r4, r1
   13000:	mov	r7, r2
   13004:	bl	1c60c <lchmod@@Base+0x5440>
   13008:	mov	r6, r0
   1300c:	mov	r0, r4
   13010:	bl	1cc1c <lchmod@@Base+0x5a50>
   13014:	ldrd	r4, [r7, #96]	; 0x60
   13018:	ldrd	r2, [r7]
   1301c:	mov	r1, r6
   13020:	strd	r4, [r6, #8]
   13024:	strd	r2, [r6, #16]
   13028:	str	r0, [r6]
   1302c:	mov	r0, r8
   13030:	bl	168c8 <__assert_fail@plt+0x509c>
   13034:	cmp	r0, #0
   13038:	beq	13050 <__assert_fail@plt+0x1824>
   1303c:	cmp	r6, r0
   13040:	popeq	{r4, r5, r6, r7, r8, pc}
   13044:	mov	r0, r6
   13048:	pop	{r4, r5, r6, r7, r8, lr}
   1304c:	b	170f0 <__assert_fail@plt+0x58c4>
   13050:	bl	1cc54 <lchmod@@Base+0x5a88>
   13054:	subs	r3, r0, #0
   13058:	beq	13094 <__assert_fail@plt+0x1868>
   1305c:	push	{r4, r5, lr}
   13060:	sub	sp, sp, #28
   13064:	ldrd	r4, [r2, #96]	; 0x60
   13068:	ldrd	r2, [r2]
   1306c:	mov	ip, r1
   13070:	mov	r1, sp
   13074:	str	ip, [sp]
   13078:	strd	r4, [sp, #8]
   1307c:	strd	r2, [sp, #16]
   13080:	bl	15c80 <__assert_fail@plt+0x4454>
   13084:	adds	r0, r0, #0
   13088:	movne	r0, #1
   1308c:	add	sp, sp, #28
   13090:	pop	{r4, r5, pc}
   13094:	mov	r0, r3
   13098:	bx	lr
   1309c:	push	{r4, r5, lr}
   130a0:	sub	sp, sp, #12
   130a4:	mov	r5, r0
   130a8:	bl	11688 <__errno_location@plt>
   130ac:	mov	r2, #0
   130b0:	mov	r4, r0
   130b4:	ldr	r3, [r0]
   130b8:	str	r2, [r4]
   130bc:	mov	r0, r5
   130c0:	str	r3, [sp]
   130c4:	str	r3, [sp, #4]
   130c8:	bl	11490 <free@plt>
   130cc:	ldr	r3, [r4]
   130d0:	add	r2, sp, #8
   130d4:	cmp	r3, #0
   130d8:	moveq	r3, #4
   130dc:	movne	r3, #0
   130e0:	add	r3, r2, r3
   130e4:	ldr	r3, [r3, #-8]
   130e8:	str	r3, [r4]
   130ec:	add	sp, sp, #12
   130f0:	pop	{r4, r5, pc}
   130f4:	ldrd	r2, [r1, #8]
   130f8:	push	{r4, r5}
   130fc:	ldrd	r4, [r0, #8]
   13100:	cmp	r5, r3
   13104:	cmpeq	r4, r2
   13108:	movne	r0, #0
   1310c:	beq	13118 <__assert_fail@plt+0x18ec>
   13110:	pop	{r4, r5}
   13114:	bx	lr
   13118:	ldrd	r4, [r0]
   1311c:	ldrd	r2, [r1]
   13120:	cmp	r5, r3
   13124:	cmpeq	r4, r2
   13128:	moveq	r0, #1
   1312c:	movne	r0, #0
   13130:	pop	{r4, r5}
   13134:	bx	lr
   13138:	push	{r4, lr}
   1313c:	mov	r2, r1
   13140:	mov	r3, #0
   13144:	ldrd	r0, [r0, #8]
   13148:	bl	1da04 <lchmod@@Base+0x6838>
   1314c:	mov	r0, r2
   13150:	pop	{r4, pc}
   13154:	push	{r4, lr}
   13158:	mov	r2, r1
   1315c:	mov	r3, #0
   13160:	ldrd	r0, [r0]
   13164:	bl	1da04 <lchmod@@Base+0x6838>
   13168:	mov	r0, r2
   1316c:	pop	{r4, pc}
   13170:	push	{r4, r5}
   13174:	ldrd	r2, [r1]
   13178:	ldrd	r4, [r0]
   1317c:	cmp	r5, r3
   13180:	cmpeq	r4, r2
   13184:	moveq	r0, #1
   13188:	movne	r0, #0
   1318c:	pop	{r4, r5}
   13190:	bx	lr
   13194:	ldr	r2, [r0]
   13198:	ldr	r3, [r1]
   1319c:	ldrd	r0, [r2, #160]	; 0xa0
   131a0:	ldrd	r2, [r3, #160]	; 0xa0
   131a4:	cmp	r1, r3
   131a8:	cmpeq	r0, r2
   131ac:	movhi	r0, #1
   131b0:	movls	r0, #0
   131b4:	movcc	r3, #1
   131b8:	movcs	r3, #0
   131bc:	sub	r0, r0, r3
   131c0:	bx	lr
   131c4:	push	{r4, r5, r6, r7, lr}
   131c8:	sub	sp, sp, #100	; 0x64
   131cc:	ldr	r4, [r0, #44]	; 0x2c
   131d0:	ldr	r3, [r4, #48]	; 0x30
   131d4:	tst	r3, #512	; 0x200
   131d8:	beq	1324c <__assert_fail@plt+0x1a20>
   131dc:	ldr	r6, [r4, #52]	; 0x34
   131e0:	mov	r7, r1
   131e4:	cmp	r6, #0
   131e8:	mov	r5, r0
   131ec:	beq	13218 <__assert_fail@plt+0x19ec>
   131f0:	ldrd	r2, [r5, #64]	; 0x40
   131f4:	add	r1, sp, #96	; 0x60
   131f8:	mov	r0, r6
   131fc:	strd	r2, [r1, #-88]!	; 0xffffffa8
   13200:	bl	15c80 <__assert_fail@plt+0x4454>
   13204:	cmp	r0, #0
   13208:	beq	13244 <__assert_fail@plt+0x1a18>
   1320c:	ldr	r0, [r0, #8]
   13210:	add	sp, sp, #100	; 0x64
   13214:	pop	{r4, r5, r6, r7, pc}
   13218:	ldr	r3, [pc, #168]	; 132c8 <__assert_fail@plt+0x1a9c>
   1321c:	mov	r1, r6
   13220:	str	r3, [sp]
   13224:	ldr	r2, [pc, #160]	; 132cc <__assert_fail@plt+0x1aa0>
   13228:	ldr	r3, [pc, #160]	; 132d0 <__assert_fail@plt+0x1aa4>
   1322c:	mov	r0, #13
   13230:	bl	15f60 <__assert_fail@plt+0x4734>
   13234:	cmp	r0, #0
   13238:	mov	r6, r0
   1323c:	str	r0, [r4, #52]	; 0x34
   13240:	bne	131f0 <__assert_fail@plt+0x19c4>
   13244:	cmp	r7, #0
   13248:	bge	13258 <__assert_fail@plt+0x1a2c>
   1324c:	mov	r0, #0
   13250:	add	sp, sp, #100	; 0x64
   13254:	pop	{r4, r5, r6, r7, pc}
   13258:	mov	r0, r7
   1325c:	add	r1, sp, #8
   13260:	bl	1140c <fstatfs64@plt>
   13264:	cmp	r0, #0
   13268:	bne	1324c <__assert_fail@plt+0x1a20>
   1326c:	cmp	r6, #0
   13270:	beq	132bc <__assert_fail@plt+0x1a90>
   13274:	mov	r0, #16
   13278:	bl	1cd5c <lchmod@@Base+0x5b90>
   1327c:	subs	r4, r0, #0
   13280:	beq	132bc <__assert_fail@plt+0x1a90>
   13284:	ldrd	r2, [r5, #64]	; 0x40
   13288:	ldr	r1, [sp, #8]
   1328c:	mov	r0, r6
   13290:	str	r1, [r4, #8]
   13294:	strd	r2, [r4]
   13298:	mov	r1, r4
   1329c:	bl	168c8 <__assert_fail@plt+0x509c>
   132a0:	cmp	r0, #0
   132a4:	beq	132b4 <__assert_fail@plt+0x1a88>
   132a8:	cmp	r4, r0
   132ac:	beq	132bc <__assert_fail@plt+0x1a90>
   132b0:	bl	117d8 <abort@plt>
   132b4:	mov	r0, r4
   132b8:	bl	1309c <__assert_fail@plt+0x1870>
   132bc:	ldr	r0, [sp, #8]
   132c0:	add	sp, sp, #100	; 0x64
   132c4:	pop	{r4, r5, r6, r7, pc}
   132c8:	muleq	r1, ip, r0
   132cc:	andeq	r3, r1, r4, asr r1
   132d0:	andeq	r3, r1, r0, ror r1
   132d4:	push	{r4, r5, r6, lr}
   132d8:	mov	r4, r2
   132dc:	ldr	r2, [r2, #48]	; 0x30
   132e0:	sub	sp, sp, #8
   132e4:	cmp	r2, #0
   132e8:	add	r5, r4, #64	; 0x40
   132ec:	bne	13344 <__assert_fail@plt+0x1b18>
   132f0:	tst	r1, #1
   132f4:	beq	13344 <__assert_fail@plt+0x1b18>
   132f8:	mov	r2, r5
   132fc:	ldr	r1, [r4, #24]
   13300:	mov	r0, #3
   13304:	bl	117c0 <__xstat64@plt>
   13308:	cmp	r0, #0
   1330c:	beq	13380 <__assert_fail@plt+0x1b54>
   13310:	bl	11688 <__errno_location@plt>
   13314:	ldr	r3, [r0]
   13318:	mov	r6, r0
   1331c:	cmp	r3, #2
   13320:	beq	133f8 <__assert_fail@plt+0x1bcc>
   13324:	str	r3, [r4, #32]
   13328:	mov	r0, r5
   1332c:	mov	r2, #104	; 0x68
   13330:	mov	r1, #0
   13334:	bl	116ac <memset@plt>
   13338:	mov	r0, #10
   1333c:	add	sp, sp, #8
   13340:	pop	{r4, r5, r6, pc}
   13344:	lsl	r1, r1, #30
   13348:	orrs	r3, r3, r1, lsr #31
   1334c:	bne	132f8 <__assert_fail@plt+0x1acc>
   13350:	mov	r3, #256	; 0x100
   13354:	ldr	r2, [r4, #24]
   13358:	mov	r1, r0
   1335c:	str	r3, [sp]
   13360:	mov	r0, #3
   13364:	mov	r3, r5
   13368:	bl	11538 <__fxstatat64@plt>
   1336c:	cmp	r0, #0
   13370:	beq	13380 <__assert_fail@plt+0x1b54>
   13374:	bl	11688 <__errno_location@plt>
   13378:	ldr	r3, [r0]
   1337c:	b	13324 <__assert_fail@plt+0x1af8>
   13380:	ldr	r0, [r4, #80]	; 0x50
   13384:	and	r0, r0, #61440	; 0xf000
   13388:	cmp	r0, #16384	; 0x4000
   1338c:	beq	133b0 <__assert_fail@plt+0x1b84>
   13390:	cmp	r0, #40960	; 0xa000
   13394:	moveq	r0, #12
   13398:	beq	1333c <__assert_fail@plt+0x1b10>
   1339c:	cmp	r0, #32768	; 0x8000
   133a0:	movne	r0, #3
   133a4:	moveq	r0, #8
   133a8:	add	sp, sp, #8
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	ldrb	r3, [r4, #168]	; 0xa8
   133b4:	cmp	r3, #46	; 0x2e
   133b8:	beq	133c4 <__assert_fail@plt+0x1b98>
   133bc:	mov	r0, #1
   133c0:	b	1333c <__assert_fail@plt+0x1b10>
   133c4:	ldrb	r3, [r4, #169]	; 0xa9
   133c8:	cmp	r3, #0
   133cc:	beq	133e4 <__assert_fail@plt+0x1bb8>
   133d0:	ldr	r3, [r4, #168]	; 0xa8
   133d4:	bic	r3, r3, #-16777216	; 0xff000000
   133d8:	bic	r3, r3, #255	; 0xff
   133dc:	cmp	r3, #11776	; 0x2e00
   133e0:	bne	133bc <__assert_fail@plt+0x1b90>
   133e4:	ldr	r0, [r4, #48]	; 0x30
   133e8:	cmp	r0, #0
   133ec:	movne	r0, #5
   133f0:	moveq	r0, #1
   133f4:	b	1333c <__assert_fail@plt+0x1b10>
   133f8:	mov	r2, r5
   133fc:	ldr	r1, [r4, #24]
   13400:	mov	r0, #3
   13404:	bl	117f0 <__lxstat64@plt>
   13408:	cmp	r0, #0
   1340c:	streq	r0, [r6]
   13410:	moveq	r0, #13
   13414:	beq	1333c <__assert_fail@plt+0x1b10>
   13418:	ldr	r3, [r6]
   1341c:	b	13324 <__assert_fail@plt+0x1af8>
   13420:	ldr	r3, [pc, #172]	; 134d4 <__assert_fail@plt+0x1ca8>
   13424:	push	{r4, r5, lr}
   13428:	and	r3, r3, r0
   1342c:	cmp	r3, #0
   13430:	sub	sp, sp, #28
   13434:	bne	1347c <__assert_fail@plt+0x1c50>
   13438:	ldr	r3, [r2, #4]
   1343c:	cmp	r3, #0
   13440:	beq	13474 <__assert_fail@plt+0x1c48>
   13444:	ldr	r0, [r3, #48]	; 0x30
   13448:	cmp	r0, #0
   1344c:	blt	13474 <__assert_fail@plt+0x1c48>
   13450:	ldr	ip, [r1]
   13454:	ldrd	r0, [ip, #16]
   13458:	orrs	r1, r0, r1
   1345c:	beq	134d0 <__assert_fail@plt+0x1ca4>
   13460:	ldrd	r4, [ip]
   13464:	ldrd	r0, [r2, #160]	; 0xa0
   13468:	cmp	r5, r1
   1346c:	cmpeq	r4, r0
   13470:	beq	134ac <__assert_fail@plt+0x1c80>
   13474:	add	sp, sp, #28
   13478:	pop	{r4, r5, pc}
   1347c:	ldrd	r4, [r2, #64]	; 0x40
   13480:	ldrd	r2, [r2, #160]	; 0xa0
   13484:	ldr	r0, [r1]
   13488:	mov	r1, sp
   1348c:	strd	r4, [sp]
   13490:	strd	r2, [sp, #8]
   13494:	bl	16b8c <__assert_fail@plt+0x5360>
   13498:	cmp	r0, #0
   1349c:	beq	134d0 <__assert_fail@plt+0x1ca4>
   134a0:	bl	1309c <__assert_fail@plt+0x1870>
   134a4:	add	sp, sp, #28
   134a8:	pop	{r4, r5, pc}
   134ac:	ldrd	r0, [ip, #8]
   134b0:	ldrd	r4, [r2, #64]	; 0x40
   134b4:	cmp	r1, r5
   134b8:	cmpeq	r0, r4
   134bc:	ldrdeq	r0, [r3, #64]	; 0x40
   134c0:	ldrdeq	r2, [r3, #160]	; 0xa0
   134c4:	strdeq	r0, [ip, #8]
   134c8:	strdeq	r2, [ip]
   134cc:	b	13474 <__assert_fail@plt+0x1c48>
   134d0:	bl	117d8 <abort@plt>
   134d4:	andeq	r0, r0, r2, lsl #2
   134d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134dc:	subs	sl, r3, #0
   134e0:	sub	sp, sp, #104	; 0x68
   134e4:	mov	r5, r0
   134e8:	mov	r6, r1
   134ec:	mov	r4, r2
   134f0:	ldr	r9, [r0, #48]	; 0x30
   134f4:	beq	13570 <__assert_fail@plt+0x1d44>
   134f8:	ldr	r1, [pc, #612]	; 13764 <__assert_fail@plt+0x1f38>
   134fc:	mov	r0, sl
   13500:	bl	11454 <strcmp@plt>
   13504:	cmp	r0, #0
   13508:	bne	13570 <__assert_fail@plt+0x1d44>
   1350c:	tst	r9, #4
   13510:	bne	13578 <__assert_fail@plt+0x1d4c>
   13514:	cmp	r4, #0
   13518:	bge	13750 <__assert_fail@plt+0x1f24>
   1351c:	tst	r9, #512	; 0x200
   13520:	beq	13664 <__assert_fail@plt+0x1e38>
   13524:	add	r7, r5, #60	; 0x3c
   13528:	mov	r0, r7
   1352c:	bl	17138 <__assert_fail@plt+0x590c>
   13530:	cmp	r0, #0
   13534:	beq	136e0 <__assert_fail@plt+0x1eb4>
   13538:	ldr	r2, [pc, #552]	; 13768 <__assert_fail@plt+0x1f3c>
   1353c:	tst	r9, #16
   13540:	ldr	r1, [pc, #548]	; 1376c <__assert_fail@plt+0x1f40>
   13544:	mov	r8, #1
   13548:	movne	r1, r2
   1354c:	mov	r2, r1
   13550:	ldr	r0, [r5, #32]
   13554:	mov	r1, sl
   13558:	bl	17804 <lchmod@@Base+0x638>
   1355c:	mov	r7, r0
   13560:	cmp	r7, #0
   13564:	blt	13724 <__assert_fail@plt+0x1ef8>
   13568:	ldr	r9, [r5, #48]	; 0x30
   1356c:	b	135ac <__assert_fail@plt+0x1d80>
   13570:	ands	r8, r9, #4
   13574:	beq	135a0 <__assert_fail@plt+0x1d74>
   13578:	mvn	r3, r4
   1357c:	lsr	r3, r3, #31
   13580:	ands	r9, r3, r9, lsr #9
   13584:	beq	13594 <__assert_fail@plt+0x1d68>
   13588:	mov	r0, r4
   1358c:	bl	117e4 <close@plt>
   13590:	mov	r9, #0
   13594:	mov	r0, r9
   13598:	add	sp, sp, #104	; 0x68
   1359c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135a0:	cmp	r4, #0
   135a4:	movge	r7, r4
   135a8:	blt	13730 <__assert_fail@plt+0x1f04>
   135ac:	tst	r9, #2
   135b0:	bne	135d0 <__assert_fail@plt+0x1da4>
   135b4:	cmp	sl, #0
   135b8:	beq	13628 <__assert_fail@plt+0x1dfc>
   135bc:	mov	r0, sl
   135c0:	ldr	r1, [pc, #412]	; 13764 <__assert_fail@plt+0x1f38>
   135c4:	bl	11454 <strcmp@plt>
   135c8:	cmp	r0, #0
   135cc:	bne	13628 <__assert_fail@plt+0x1dfc>
   135d0:	mov	r2, sp
   135d4:	mov	r1, r7
   135d8:	mov	r0, #3
   135dc:	bl	11550 <__fxstat64@plt>
   135e0:	cmp	r0, #0
   135e4:	beq	13640 <__assert_fail@plt+0x1e14>
   135e8:	mvn	r9, #0
   135ec:	cmp	r4, #0
   135f0:	bge	13594 <__assert_fail@plt+0x1d68>
   135f4:	bl	11688 <__errno_location@plt>
   135f8:	mov	r4, r0
   135fc:	mov	r0, r7
   13600:	ldr	r5, [r4]
   13604:	bl	117e4 <close@plt>
   13608:	str	r5, [r4]
   1360c:	b	13594 <__assert_fail@plt+0x1d68>
   13610:	ldrd	r0, [r6, #160]	; 0xa0
   13614:	ldrd	r2, [sp, #96]	; 0x60
   13618:	cmp	r1, r3
   1361c:	cmpeq	r0, r2
   13620:	bne	13654 <__assert_fail@plt+0x1e28>
   13624:	ldr	r9, [r5, #48]	; 0x30
   13628:	tst	r9, #512	; 0x200
   1362c:	bne	13688 <__assert_fail@plt+0x1e5c>
   13630:	mov	r0, r7
   13634:	bl	11760 <fchdir@plt>
   13638:	mov	r9, r0
   1363c:	b	135ec <__assert_fail@plt+0x1dc0>
   13640:	ldrd	r0, [r6, #64]	; 0x40
   13644:	ldrd	r2, [sp]
   13648:	cmp	r1, r3
   1364c:	cmpeq	r0, r2
   13650:	beq	13610 <__assert_fail@plt+0x1de4>
   13654:	bl	11688 <__errno_location@plt>
   13658:	mov	r3, #2
   1365c:	str	r3, [r0]
   13660:	b	135e8 <__assert_fail@plt+0x1dbc>
   13664:	ldr	r2, [pc, #252]	; 13768 <__assert_fail@plt+0x1f3c>
   13668:	tst	r9, #16
   1366c:	ldr	r1, [pc, #248]	; 1376c <__assert_fail@plt+0x1f40>
   13670:	mov	r8, #1
   13674:	movne	r1, r2
   13678:	mov	r0, sl
   1367c:	bl	1d270 <lchmod@@Base+0x60a4>
   13680:	mov	r7, r0
   13684:	b	13560 <__assert_fail@plt+0x1d34>
   13688:	ldr	r1, [r5, #32]
   1368c:	cmn	r1, #100	; 0x64
   13690:	sub	r3, r7, r1
   13694:	clz	r3, r3
   13698:	lsr	r3, r3, #5
   1369c:	moveq	r3, #0
   136a0:	cmp	r3, #0
   136a4:	bne	1372c <__assert_fail@plt+0x1f00>
   136a8:	cmp	r8, #0
   136ac:	beq	13710 <__assert_fail@plt+0x1ee4>
   136b0:	lsr	r3, r9, #2
   136b4:	eor	r3, r3, #1
   136b8:	cmp	r1, #0
   136bc:	movlt	r3, #0
   136c0:	andge	r3, r3, #1
   136c4:	cmp	r3, #0
   136c8:	beq	136d4 <__assert_fail@plt+0x1ea8>
   136cc:	mov	r0, r1
   136d0:	bl	117e4 <close@plt>
   136d4:	str	r7, [r5, #32]
   136d8:	mov	r9, #0
   136dc:	b	13594 <__assert_fail@plt+0x1d68>
   136e0:	mov	r0, r7
   136e4:	bl	17184 <__assert_fail@plt+0x5958>
   136e8:	ldr	r9, [r5, #48]	; 0x30
   136ec:	subs	r7, r0, #0
   136f0:	movlt	r8, #1
   136f4:	andlt	r3, r9, #512	; 0x200
   136f8:	blt	13734 <__assert_fail@plt+0x1f08>
   136fc:	tst	r9, #2
   13700:	mov	r4, r7
   13704:	mov	r8, #1
   13708:	beq	13628 <__assert_fail@plt+0x1dfc>
   1370c:	b	135d0 <__assert_fail@plt+0x1da4>
   13710:	add	r0, r5, #60	; 0x3c
   13714:	bl	17140 <__assert_fail@plt+0x5914>
   13718:	cmp	r0, #0
   1371c:	bge	136d0 <__assert_fail@plt+0x1ea4>
   13720:	b	136d4 <__assert_fail@plt+0x1ea8>
   13724:	mvn	r9, #0
   13728:	b	13594 <__assert_fail@plt+0x1d68>
   1372c:	bl	117d8 <abort@plt>
   13730:	and	r3, r9, #512	; 0x200
   13734:	ldr	r2, [pc, #48]	; 1376c <__assert_fail@plt+0x1f40>
   13738:	tst	r9, #16
   1373c:	ldr	r1, [pc, #36]	; 13768 <__assert_fail@plt+0x1f3c>
   13740:	moveq	r1, r2
   13744:	cmp	r3, #0
   13748:	bne	1354c <__assert_fail@plt+0x1d20>
   1374c:	b	13678 <__assert_fail@plt+0x1e4c>
   13750:	tst	r9, #2
   13754:	mov	r7, r4
   13758:	mov	r8, #1
   1375c:	beq	135bc <__assert_fail@plt+0x1d90>
   13760:	b	135d0 <__assert_fail@plt+0x1da4>
   13764:	andeq	lr, r1, ip, ror #3
   13768:	andeq	ip, r8, r0, lsl #18
   1376c:	andeq	r4, r8, r0, lsl #18
   13770:	ldr	r3, [r0]
   13774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13778:	sub	sp, sp, #68	; 0x44
   1377c:	mov	r6, r0
   13780:	str	r3, [sp, #8]
   13784:	ldr	r3, [r3, #12]
   13788:	str	r1, [sp, #40]	; 0x28
   1378c:	cmp	r3, #0
   13790:	str	r3, [sp, #44]	; 0x2c
   13794:	beq	13d7c <__assert_fail@plt+0x2550>
   13798:	mov	r0, r3
   1379c:	bl	11754 <dirfd@plt>
   137a0:	cmp	r0, #0
   137a4:	str	r0, [sp, #60]	; 0x3c
   137a8:	blt	141b8 <__assert_fail@plt+0x298c>
   137ac:	ldr	r3, [r6, #44]	; 0x2c
   137b0:	cmp	r3, #0
   137b4:	beq	1443c <__assert_fail@plt+0x2c10>
   137b8:	mvn	r3, #0
   137bc:	str	r3, [sp, #24]
   137c0:	ldr	r0, [r6, #48]	; 0x30
   137c4:	ldr	r2, [sp, #8]
   137c8:	mov	r3, #1
   137cc:	str	r3, [sp, #52]	; 0x34
   137d0:	ldr	r3, [r2, #40]	; 0x28
   137d4:	ldr	r1, [r2, #28]
   137d8:	sub	r2, r3, #1
   137dc:	ldrb	r1, [r1, r2]
   137e0:	cmp	r1, #47	; 0x2f
   137e4:	moveq	r3, r2
   137e8:	ands	r0, r0, #4
   137ec:	movne	r0, #47	; 0x2f
   137f0:	ldrne	r2, [r6, #24]
   137f4:	streq	r0, [sp, #32]
   137f8:	addne	r1, r2, r3
   137fc:	strbne	r0, [r2, r3]
   13800:	addne	r2, r1, #1
   13804:	strne	r2, [sp, #32]
   13808:	ldr	r2, [sp, #8]
   1380c:	add	r3, r3, #1
   13810:	ldr	r1, [r6, #36]	; 0x24
   13814:	ldr	r2, [r2, #48]	; 0x30
   13818:	mov	r0, r3
   1381c:	str	r3, [sp, #12]
   13820:	sub	r1, r1, r0
   13824:	mov	r3, #0
   13828:	add	r2, r2, #1
   1382c:	mov	r7, r3
   13830:	str	r3, [sp, #48]	; 0x30
   13834:	str	r1, [sp, #20]
   13838:	str	r2, [sp, #28]
   1383c:	str	r3, [sp, #36]	; 0x24
   13840:	str	r3, [sp]
   13844:	mov	sl, r3
   13848:	str	r3, [sp, #16]
   1384c:	b	138d0 <__assert_fail@plt+0x20a4>
   13850:	tst	r3, #251	; 0xfb
   13854:	beq	139e4 <__assert_fail@plt+0x21b8>
   13858:	lsr	r2, r1, #4
   1385c:	cmp	r3, #10
   13860:	orrne	r2, r2, #1
   13864:	tst	r2, #1
   13868:	beq	13ea8 <__assert_fail@plt+0x267c>
   1386c:	sub	r3, r3, #1
   13870:	mov	r2, #11
   13874:	cmp	r3, #11
   13878:	strh	r2, [r4, #56]	; 0x38
   1387c:	bhi	14458 <__assert_fail@plt+0x2c2c>
   13880:	ldr	r2, [pc, #3040]	; 14468 <__assert_fail@plt+0x2c3c>
   13884:	ldr	r1, [r2, r3, lsl #2]
   13888:	mov	r2, #1
   1388c:	mov	r3, #0
   13890:	str	r1, [r4, #80]	; 0x50
   13894:	strd	r2, [r4, #112]	; 0x70
   13898:	ldr	r3, [sp, #16]
   1389c:	str	r7, [r4, #8]
   138a0:	cmp	r3, #0
   138a4:	streq	r4, [sp, #16]
   138a8:	ldrne	r3, [sp]
   138ac:	strne	r4, [r3, #8]
   138b0:	ldr	r3, [pc, #2996]	; 1446c <__assert_fail@plt+0x2c40>
   138b4:	cmp	sl, r3
   138b8:	beq	13b34 <__assert_fail@plt+0x2308>
   138bc:	ldr	r3, [sp, #24]
   138c0:	add	sl, sl, #1
   138c4:	cmp	r3, sl
   138c8:	bls	13c4c <__assert_fail@plt+0x2420>
   138cc:	str	r4, [sp]
   138d0:	ldr	r3, [sp, #8]
   138d4:	ldr	r4, [r3, #12]
   138d8:	cmp	r4, #0
   138dc:	beq	13c4c <__assert_fail@plt+0x2420>
   138e0:	bl	11688 <__errno_location@plt>
   138e4:	mov	fp, r0
   138e8:	mov	r0, r4
   138ec:	str	r7, [fp]
   138f0:	bl	11730 <readdir64@plt>
   138f4:	subs	r8, r0, #0
   138f8:	beq	14048 <__assert_fail@plt+0x281c>
   138fc:	ldr	r3, [r6, #48]	; 0x30
   13900:	tst	r3, #32
   13904:	bne	13914 <__assert_fail@plt+0x20e8>
   13908:	ldrb	r3, [r8, #19]
   1390c:	cmp	r3, #46	; 0x2e
   13910:	beq	13b98 <__assert_fail@plt+0x236c>
   13914:	add	r1, r8, #19
   13918:	mov	r0, r1
   1391c:	str	r1, [sp, #4]
   13920:	bl	11658 <strlen@plt>
   13924:	mov	r5, r0
   13928:	add	r0, r0, #176	; 0xb0
   1392c:	bic	r0, r0, #7
   13930:	bl	1cd5c <lchmod@@Base+0x5b90>
   13934:	subs	r4, r0, #0
   13938:	beq	13c40 <__assert_fail@plt+0x2414>
   1393c:	add	r9, r4, #168	; 0xa8
   13940:	ldr	r1, [sp, #4]
   13944:	mov	r2, r5
   13948:	mov	r0, r9
   1394c:	bl	114b4 <memcpy@plt>
   13950:	ldr	r3, [sp, #20]
   13954:	add	r1, r4, r5
   13958:	ldr	r2, [r6, #24]
   1395c:	mov	r0, #196608	; 0x30000
   13960:	cmp	r3, r5
   13964:	strb	r7, [r1, #168]	; 0xa8
   13968:	str	r5, [r4, #52]	; 0x34
   1396c:	str	r6, [r4, #44]	; 0x2c
   13970:	str	r7, [r4, #32]
   13974:	str	r7, [r4, #12]
   13978:	str	r7, [r4, #16]
   1397c:	str	r7, [r4, #20]
   13980:	str	r2, [r4, #28]
   13984:	str	r0, [r4, #58]	; 0x3a
   13988:	bls	13a1c <__assert_fail@plt+0x21f0>
   1398c:	ldr	r3, [sp, #12]
   13990:	adds	r5, r3, r5
   13994:	bcs	13a9c <__assert_fail@plt+0x2270>
   13998:	ldrd	r2, [r8]
   1399c:	ldr	r1, [r6, #48]	; 0x30
   139a0:	ldr	r0, [sp, #28]
   139a4:	strd	r2, [r4, #160]	; 0xa0
   139a8:	ldr	r3, [r6]
   139ac:	tst	r1, #4
   139b0:	str	r0, [r4, #48]	; 0x30
   139b4:	str	r5, [r4, #40]	; 0x28
   139b8:	str	r3, [r4, #4]
   139bc:	streq	r9, [r4, #24]
   139c0:	bne	13b10 <__assert_fail@plt+0x22e4>
   139c4:	ldr	r3, [r6, #44]	; 0x2c
   139c8:	cmp	r3, #0
   139cc:	beq	139d8 <__assert_fail@plt+0x21ac>
   139d0:	tst	r1, #1024	; 0x400
   139d4:	beq	13b80 <__assert_fail@plt+0x2354>
   139d8:	tst	r1, #8
   139dc:	ldrb	r3, [r8, #18]
   139e0:	bne	13850 <__assert_fail@plt+0x2024>
   139e4:	sub	r3, r3, #1
   139e8:	cmp	r3, #11
   139ec:	mov	r2, #11
   139f0:	strh	r2, [r4, #56]	; 0x38
   139f4:	strhi	r7, [r4, #80]	; 0x50
   139f8:	movhi	r2, #2
   139fc:	movhi	r3, #0
   13a00:	bhi	13894 <__assert_fail@plt+0x2068>
   13a04:	ldr	r2, [pc, #2652]	; 14468 <__assert_fail@plt+0x2c3c>
   13a08:	ldr	r1, [r2, r3, lsl #2]
   13a0c:	mov	r2, #2
   13a10:	mov	r3, #0
   13a14:	str	r1, [r4, #80]	; 0x50
   13a18:	b	13894 <__assert_fail@plt+0x2068>
   13a1c:	ldr	r0, [r6, #36]	; 0x24
   13a20:	ldr	r3, [sp, #12]
   13a24:	add	r1, r0, #256	; 0x100
   13a28:	add	r1, r1, #1
   13a2c:	add	r1, r1, r3
   13a30:	add	r1, r1, r5
   13a34:	cmp	r0, r1
   13a38:	bhi	13bb8 <__assert_fail@plt+0x238c>
   13a3c:	mov	r0, r2
   13a40:	str	r1, [r6, #36]	; 0x24
   13a44:	str	r2, [sp, #4]
   13a48:	bl	1cd88 <lchmod@@Base+0x5bbc>
   13a4c:	ldr	r2, [sp, #4]
   13a50:	cmp	r0, #0
   13a54:	beq	14234 <__assert_fail@plt+0x2a08>
   13a58:	cmp	r2, r0
   13a5c:	str	r0, [r6, #24]
   13a60:	beq	13a80 <__assert_fail@plt+0x2254>
   13a64:	ldr	r2, [r6, #48]	; 0x30
   13a68:	tst	r2, #4
   13a6c:	ldrne	r3, [sp, #12]
   13a70:	addne	r3, r0, r3
   13a74:	strne	r3, [sp, #32]
   13a78:	mov	r3, #1
   13a7c:	str	r3, [sp, #36]	; 0x24
   13a80:	ldr	r2, [r6, #36]	; 0x24
   13a84:	ldr	r3, [sp, #12]
   13a88:	sub	r3, r2, r3
   13a8c:	str	r3, [sp, #20]
   13a90:	ldr	r3, [sp, #12]
   13a94:	adds	r5, r3, r5
   13a98:	bcc	13998 <__assert_fail@plt+0x216c>
   13a9c:	ldr	r8, [sp, #16]
   13aa0:	mov	r0, r4
   13aa4:	bl	1309c <__assert_fail@plt+0x1870>
   13aa8:	cmp	r8, #0
   13aac:	beq	13ad4 <__assert_fail@plt+0x22a8>
   13ab0:	ldr	r3, [r8, #12]
   13ab4:	ldr	r4, [r8, #8]
   13ab8:	subs	r0, r3, #0
   13abc:	beq	13ac4 <__assert_fail@plt+0x2298>
   13ac0:	bl	11814 <closedir@plt>
   13ac4:	mov	r0, r8
   13ac8:	bl	1309c <__assert_fail@plt+0x1870>
   13acc:	subs	r8, r4, #0
   13ad0:	bne	13ab0 <__assert_fail@plt+0x2284>
   13ad4:	ldr	r4, [sp, #8]
   13ad8:	mov	r8, #0
   13adc:	ldr	r0, [r4, #12]
   13ae0:	bl	11814 <closedir@plt>
   13ae4:	ldr	r3, [r6, #48]	; 0x30
   13ae8:	mov	r1, #7
   13aec:	orr	r3, r3, #8192	; 0x2000
   13af0:	mov	r2, #36	; 0x24
   13af4:	str	r8, [r4, #12]
   13af8:	strh	r1, [r4, #56]	; 0x38
   13afc:	str	r3, [r6, #48]	; 0x30
   13b00:	str	r2, [fp]
   13b04:	mov	r0, r8
   13b08:	add	sp, sp, #68	; 0x44
   13b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b10:	ldr	r0, [r4, #28]
   13b14:	ldr	r2, [r4, #52]	; 0x34
   13b18:	mov	r1, r9
   13b1c:	str	r0, [r4, #24]
   13b20:	add	r2, r2, #1
   13b24:	ldr	r0, [sp, #32]
   13b28:	bl	11484 <memmove@plt>
   13b2c:	ldr	r1, [r6, #48]	; 0x30
   13b30:	b	139c4 <__assert_fail@plt+0x2198>
   13b34:	ldr	r3, [r6, #44]	; 0x2c
   13b38:	cmp	r3, #0
   13b3c:	bne	138bc <__assert_fail@plt+0x2090>
   13b40:	ldr	r1, [sp, #60]	; 0x3c
   13b44:	ldr	r0, [sp, #8]
   13b48:	bl	131c4 <__assert_fail@plt+0x1998>
   13b4c:	ldr	r3, [pc, #2332]	; 14470 <__assert_fail@plt+0x2c44>
   13b50:	cmp	r0, r3
   13b54:	beq	13b78 <__assert_fail@plt+0x234c>
   13b58:	ldr	r3, [pc, #2324]	; 14474 <__assert_fail@plt+0x2c48>
   13b5c:	cmp	r0, r3
   13b60:	beq	13b78 <__assert_fail@plt+0x234c>
   13b64:	ldr	r3, [pc, #2316]	; 14478 <__assert_fail@plt+0x2c4c>
   13b68:	cmp	r0, r3
   13b6c:	movne	r3, #1
   13b70:	strne	r3, [sp, #48]	; 0x30
   13b74:	bne	138bc <__assert_fail@plt+0x2090>
   13b78:	str	r7, [sp, #48]	; 0x30
   13b7c:	b	138bc <__assert_fail@plt+0x2090>
   13b80:	mov	r3, r7
   13b84:	mov	r2, r4
   13b88:	ldr	r0, [r6, #32]
   13b8c:	bl	132d4 <__assert_fail@plt+0x1aa8>
   13b90:	strh	r0, [r4, #56]	; 0x38
   13b94:	b	13898 <__assert_fail@plt+0x206c>
   13b98:	ldrb	r3, [r8, #20]
   13b9c:	cmp	r3, #0
   13ba0:	beq	13bb0 <__assert_fail@plt+0x2384>
   13ba4:	ldrh	r3, [r8, #20]
   13ba8:	cmp	r3, #46	; 0x2e
   13bac:	bne	13914 <__assert_fail@plt+0x20e8>
   13bb0:	ldr	r4, [sp]
   13bb4:	b	138cc <__assert_fail@plt+0x20a0>
   13bb8:	mov	r0, r2
   13bbc:	ldr	r8, [sp, #16]
   13bc0:	bl	1309c <__assert_fail@plt+0x1870>
   13bc4:	mov	r3, #36	; 0x24
   13bc8:	mov	r5, r3
   13bcc:	str	r7, [r6, #24]
   13bd0:	str	r3, [fp]
   13bd4:	mov	r0, r4
   13bd8:	bl	1309c <__assert_fail@plt+0x1870>
   13bdc:	cmp	r8, #0
   13be0:	beq	13c08 <__assert_fail@plt+0x23dc>
   13be4:	ldr	r3, [r8, #12]
   13be8:	ldr	r4, [r8, #8]
   13bec:	subs	r0, r3, #0
   13bf0:	beq	13bf8 <__assert_fail@plt+0x23cc>
   13bf4:	bl	11814 <closedir@plt>
   13bf8:	mov	r0, r8
   13bfc:	bl	1309c <__assert_fail@plt+0x1870>
   13c00:	subs	r8, r4, #0
   13c04:	bne	13be4 <__assert_fail@plt+0x23b8>
   13c08:	ldr	r4, [sp, #8]
   13c0c:	mov	r8, #0
   13c10:	ldr	r0, [r4, #12]
   13c14:	bl	11814 <closedir@plt>
   13c18:	ldr	r3, [r6, #48]	; 0x30
   13c1c:	mov	r2, #7
   13c20:	orr	r3, r3, #8192	; 0x2000
   13c24:	str	r8, [r4, #12]
   13c28:	strh	r2, [r4, #56]	; 0x38
   13c2c:	mov	r0, r8
   13c30:	str	r3, [r6, #48]	; 0x30
   13c34:	str	r5, [fp]
   13c38:	add	sp, sp, #68	; 0x44
   13c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c40:	ldr	r8, [sp, #16]
   13c44:	ldr	r5, [fp]
   13c48:	b	13bd4 <__assert_fail@plt+0x23a8>
   13c4c:	ldr	r8, [sp, #16]
   13c50:	ldr	r3, [sp, #36]	; 0x24
   13c54:	cmp	r3, #0
   13c58:	bne	140a0 <__assert_fail@plt+0x2874>
   13c5c:	ldr	r3, [r6, #48]	; 0x30
   13c60:	tst	r3, #4
   13c64:	beq	13c90 <__assert_fail@plt+0x2464>
   13c68:	ldr	r3, [r6, #36]	; 0x24
   13c6c:	ldr	r2, [sp, #12]
   13c70:	cmp	sl, #0
   13c74:	cmpne	r3, r2
   13c78:	ldreq	r3, [sp, #32]
   13c7c:	subeq	r3, r3, #1
   13c80:	streq	r3, [sp, #32]
   13c84:	ldr	r2, [sp, #32]
   13c88:	mov	r3, #0
   13c8c:	strb	r3, [r2]
   13c90:	ldr	r3, [sp, #52]	; 0x34
   13c94:	ldr	r2, [sp, #44]	; 0x2c
   13c98:	cmp	r2, #0
   13c9c:	movne	r3, #0
   13ca0:	andeq	r3, r3, #1
   13ca4:	cmp	r3, #0
   13ca8:	beq	13d38 <__assert_fail@plt+0x250c>
   13cac:	ldr	r3, [sp, #40]	; 0x28
   13cb0:	cmp	sl, #0
   13cb4:	cmpne	r3, #1
   13cb8:	beq	13f44 <__assert_fail@plt+0x2718>
   13cbc:	ldr	r3, [sp, #48]	; 0x30
   13cc0:	cmp	r3, #0
   13cc4:	bne	14124 <__assert_fail@plt+0x28f8>
   13cc8:	ldr	r4, [r6, #44]	; 0x2c
   13ccc:	cmp	r4, #0
   13cd0:	cmpne	sl, #1
   13cd4:	bls	13b04 <__assert_fail@plt+0x22d8>
   13cd8:	ldr	r3, [r6, #40]	; 0x28
   13cdc:	cmp	sl, r3
   13ce0:	bls	13ed8 <__assert_fail@plt+0x26ac>
   13ce4:	add	r1, sl, #40	; 0x28
   13ce8:	cmn	r1, #-1073741823	; 0xc0000001
   13cec:	str	r1, [r6, #40]	; 0x28
   13cf0:	bhi	1421c <__assert_fail@plt+0x29f0>
   13cf4:	lsl	r1, r1, #2
   13cf8:	ldr	r0, [r6, #8]
   13cfc:	bl	1cd88 <lchmod@@Base+0x5bbc>
   13d00:	cmp	r0, #0
   13d04:	beq	1421c <__assert_fail@plt+0x29f0>
   13d08:	str	r0, [r6, #8]
   13d0c:	b	13edc <__assert_fail@plt+0x26b0>
   13d10:	ldr	r1, [sp, #8]
   13d14:	ldr	r3, [pc, #1888]	; 1447c <__assert_fail@plt+0x2c50>
   13d18:	mvn	r2, #0
   13d1c:	ldr	r1, [r1, #4]
   13d20:	mov	r0, r6
   13d24:	bl	134d8 <__assert_fail@plt+0x1cac>
   13d28:	adds	r5, r0, #0
   13d2c:	movne	r5, #1
   13d30:	cmp	r5, #0
   13d34:	bne	142e0 <__assert_fail@plt+0x2ab4>
   13d38:	cmp	sl, #0
   13d3c:	bne	13cbc <__assert_fail@plt+0x2490>
   13d40:	ldr	r3, [sp, #40]	; 0x28
   13d44:	cmp	r3, #3
   13d48:	beq	142a8 <__assert_fail@plt+0x2a7c>
   13d4c:	cmp	r8, #0
   13d50:	beq	141d8 <__assert_fail@plt+0x29ac>
   13d54:	ldr	r3, [r8, #12]
   13d58:	ldr	r4, [r8, #8]
   13d5c:	subs	r0, r3, #0
   13d60:	beq	13d68 <__assert_fail@plt+0x253c>
   13d64:	bl	11814 <closedir@plt>
   13d68:	mov	r0, r8
   13d6c:	bl	1309c <__assert_fail@plt+0x1870>
   13d70:	subs	r8, r4, #0
   13d74:	bne	13d54 <__assert_fail@plt+0x2528>
   13d78:	b	141d8 <__assert_fail@plt+0x29ac>
   13d7c:	ldr	r3, [r0, #48]	; 0x30
   13d80:	ldr	ip, [sp, #8]
   13d84:	and	r2, r3, #516	; 0x204
   13d88:	cmp	r2, #512	; 0x200
   13d8c:	mvnne	r0, #99	; 0x63
   13d90:	ldreq	r0, [r0, #32]
   13d94:	ands	r2, r3, #16
   13d98:	ldr	r1, [ip, #24]
   13d9c:	bne	13eb8 <__assert_fail@plt+0x268c>
   13da0:	add	r3, sp, #60	; 0x3c
   13da4:	bl	1783c <lchmod@@Base+0x670>
   13da8:	ldr	r3, [sp, #8]
   13dac:	cmp	r0, #0
   13db0:	mov	r8, r0
   13db4:	str	r0, [r3, #12]
   13db8:	beq	14328 <__assert_fail@plt+0x2afc>
   13dbc:	ldrh	r3, [r3, #56]	; 0x38
   13dc0:	cmp	r3, #11
   13dc4:	beq	14350 <__assert_fail@plt+0x2b24>
   13dc8:	ldr	r0, [r6, #48]	; 0x30
   13dcc:	tst	r0, #256	; 0x100
   13dd0:	bne	13fac <__assert_fail@plt+0x2780>
   13dd4:	ldr	r2, [r6, #44]	; 0x2c
   13dd8:	ldr	r3, [pc, #1696]	; 14480 <__assert_fail@plt+0x2c54>
   13ddc:	cmp	r2, #0
   13de0:	mvnne	r3, #0
   13de4:	str	r3, [sp, #24]
   13de8:	ldr	r3, [sp, #40]	; 0x28
   13dec:	cmp	r3, #2
   13df0:	beq	14254 <__assert_fail@plt+0x2a28>
   13df4:	ldr	r3, [r6, #48]	; 0x30
   13df8:	and	r3, r3, #56	; 0x38
   13dfc:	cmp	r3, #24
   13e00:	beq	14370 <__assert_fail@plt+0x2b44>
   13e04:	ldr	r3, [sp, #40]	; 0x28
   13e08:	mov	r4, #1
   13e0c:	sub	r5, r3, #3
   13e10:	clz	r5, r5
   13e14:	lsr	r5, r5, #5
   13e18:	ldr	r3, [r6, #48]	; 0x30
   13e1c:	tst	r3, #512	; 0x200
   13e20:	bne	142c4 <__assert_fail@plt+0x2a98>
   13e24:	ldr	r2, [sp, #60]	; 0x3c
   13e28:	cmp	r2, #0
   13e2c:	blt	13e48 <__assert_fail@plt+0x261c>
   13e30:	mov	r3, #0
   13e34:	ldr	r1, [sp, #8]
   13e38:	mov	r0, r6
   13e3c:	bl	134d8 <__assert_fail@plt+0x1cac>
   13e40:	cmp	r0, #0
   13e44:	beq	137c0 <__assert_fail@plt+0x1f94>
   13e48:	tst	r4, r5
   13e4c:	bne	143c8 <__assert_fail@plt+0x2b9c>
   13e50:	ldr	r4, [sp, #8]
   13e54:	ldrh	r3, [r4, #58]	; 0x3a
   13e58:	ldr	r0, [r4, #12]
   13e5c:	orr	r3, r3, #1
   13e60:	strh	r3, [r4, #58]	; 0x3a
   13e64:	bl	11814 <closedir@plt>
   13e68:	ldr	r0, [r6, #48]	; 0x30
   13e6c:	mov	r3, #0
   13e70:	tst	r0, #512	; 0x200
   13e74:	str	r3, [r4, #12]
   13e78:	beq	13e94 <__assert_fail@plt+0x2668>
   13e7c:	ldr	r3, [sp, #60]	; 0x3c
   13e80:	cmp	r3, #0
   13e84:	blt	13e94 <__assert_fail@plt+0x2668>
   13e88:	mov	r0, r3
   13e8c:	bl	117e4 <close@plt>
   13e90:	ldr	r0, [r6, #48]	; 0x30
   13e94:	ldr	r2, [sp, #8]
   13e98:	mov	r3, #0
   13e9c:	str	r3, [sp, #52]	; 0x34
   13ea0:	str	r3, [r2, #12]
   13ea4:	b	137d0 <__assert_fail@plt+0x1fa4>
   13ea8:	mov	r3, #11
   13eac:	strh	r3, [r4, #56]	; 0x38
   13eb0:	mov	r3, #9
   13eb4:	b	13a04 <__assert_fail@plt+0x21d8>
   13eb8:	tst	r3, #1
   13ebc:	moveq	r2, #32768	; 0x8000
   13ec0:	beq	13da0 <__assert_fail@plt+0x2574>
   13ec4:	ldr	r2, [ip, #48]	; 0x30
   13ec8:	cmp	r2, #0
   13ecc:	movne	r2, #32768	; 0x8000
   13ed0:	moveq	r2, #0
   13ed4:	b	13da0 <__assert_fail@plt+0x2574>
   13ed8:	ldr	r0, [r6, #8]
   13edc:	cmp	r8, #0
   13ee0:	movne	r2, r0
   13ee4:	beq	13ef8 <__assert_fail@plt+0x26cc>
   13ee8:	str	r8, [r2], #4
   13eec:	ldr	r8, [r8, #8]
   13ef0:	cmp	r8, #0
   13ef4:	bne	13ee8 <__assert_fail@plt+0x26bc>
   13ef8:	mov	r3, r4
   13efc:	mov	r2, #4
   13f00:	mov	r1, sl
   13f04:	bl	1176c <qsort@plt>
   13f08:	ldr	ip, [r6, #8]
   13f0c:	sub	r3, sl, #1
   13f10:	mov	r2, ip
   13f14:	ldr	r8, [ip]
   13f18:	ldr	r1, [r2]
   13f1c:	ldr	r0, [r2, #4]!
   13f20:	subs	r3, r3, #1
   13f24:	str	r0, [r1, #8]
   13f28:	bne	13f18 <__assert_fail@plt+0x26ec>
   13f2c:	add	sl, ip, sl, lsl #2
   13f30:	mov	r0, r8
   13f34:	ldr	r2, [sl, #-4]
   13f38:	str	r3, [r2, #8]
   13f3c:	add	sp, sp, #68	; 0x44
   13f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f44:	ldr	r3, [sp, #8]
   13f48:	ldr	r3, [r3, #48]	; 0x30
   13f4c:	cmp	r3, #0
   13f50:	bne	13d10 <__assert_fail@plt+0x24e4>
   13f54:	ldr	r2, [r6, #48]	; 0x30
   13f58:	tst	r2, #4
   13f5c:	movne	r5, r3
   13f60:	addne	r4, r6, #60	; 0x3c
   13f64:	bne	13f94 <__assert_fail@plt+0x2768>
   13f68:	tst	r2, #512	; 0x200
   13f6c:	bne	143e0 <__assert_fail@plt+0x2bb4>
   13f70:	ldr	r0, [r6, #28]
   13f74:	bl	11760 <fchdir@plt>
   13f78:	add	r4, r6, #60	; 0x3c
   13f7c:	adds	r5, r0, #0
   13f80:	movne	r5, #1
   13f84:	b	13f94 <__assert_fail@plt+0x2768>
   13f88:	bl	17184 <__assert_fail@plt+0x5958>
   13f8c:	cmp	r0, #0
   13f90:	bge	14214 <__assert_fail@plt+0x29e8>
   13f94:	mov	r0, r4
   13f98:	bl	17138 <__assert_fail@plt+0x590c>
   13f9c:	cmp	r0, #0
   13fa0:	mov	r0, r4
   13fa4:	beq	13f88 <__assert_fail@plt+0x275c>
   13fa8:	b	13d30 <__assert_fail@plt+0x2504>
   13fac:	ldr	r5, [sp, #8]
   13fb0:	add	r1, r6, #56	; 0x38
   13fb4:	mov	r2, r5
   13fb8:	bl	13420 <__assert_fail@plt+0x1bf4>
   13fbc:	mov	r3, #0
   13fc0:	mov	r2, r5
   13fc4:	ldr	r1, [r6, #48]	; 0x30
   13fc8:	ldr	r0, [r6, #32]
   13fcc:	bl	132d4 <__assert_fail@plt+0x1aa8>
   13fd0:	ldr	r2, [r6, #48]	; 0x30
   13fd4:	ldr	r3, [pc, #1192]	; 14484 <__assert_fail@plt+0x2c58>
   13fd8:	mov	r7, r5
   13fdc:	and	r3, r3, r2
   13fe0:	cmp	r3, #0
   13fe4:	beq	14268 <__assert_fail@plt+0x2a3c>
   13fe8:	mov	r0, #24
   13fec:	bl	1cd5c <lchmod@@Base+0x5b90>
   13ff0:	subs	r4, r0, #0
   13ff4:	beq	1440c <__assert_fail@plt+0x2be0>
   13ff8:	ldrd	r0, [r5, #160]	; 0xa0
   13ffc:	ldrd	r2, [r5, #64]	; 0x40
   14000:	str	r5, [r4, #16]
   14004:	strd	r0, [r4, #8]
   14008:	strd	r2, [r4]
   1400c:	mov	r1, r4
   14010:	ldr	r0, [r6, #56]	; 0x38
   14014:	bl	168c8 <__assert_fail@plt+0x509c>
   14018:	cmp	r4, r0
   1401c:	mov	r5, r0
   14020:	beq	13dd4 <__assert_fail@plt+0x25a8>
   14024:	mov	r0, r4
   14028:	bl	1309c <__assert_fail@plt+0x1870>
   1402c:	cmp	r5, #0
   14030:	beq	1440c <__assert_fail@plt+0x2be0>
   14034:	ldr	r2, [r5, #16]
   14038:	mov	r3, #2
   1403c:	str	r2, [r7]
   14040:	strh	r3, [r7, #56]	; 0x38
   14044:	b	13dd4 <__assert_fail@plt+0x25a8>
   14048:	ldr	r3, [fp]
   1404c:	ldr	r8, [sp, #16]
   14050:	cmp	r3, #0
   14054:	beq	14078 <__assert_fail@plt+0x284c>
   14058:	ldr	r2, [sp, #44]	; 0x2c
   1405c:	ldr	r1, [sp, #8]
   14060:	cmp	sl, #0
   14064:	cmpeq	r2, #0
   14068:	moveq	r2, #4
   1406c:	movne	r2, #7
   14070:	str	r3, [r1, #32]
   14074:	strh	r2, [r1, #56]	; 0x38
   14078:	ldr	r4, [sp, #8]
   1407c:	ldr	r0, [r4, #12]
   14080:	cmp	r0, #0
   14084:	beq	13c50 <__assert_fail@plt+0x2424>
   14088:	bl	11814 <closedir@plt>
   1408c:	mov	r3, #0
   14090:	str	r3, [r4, #12]
   14094:	ldr	r3, [sp, #36]	; 0x24
   14098:	cmp	r3, #0
   1409c:	beq	13c5c <__assert_fail@plt+0x2430>
   140a0:	ldr	r1, [r6, #4]
   140a4:	ldr	r0, [r6, #24]
   140a8:	cmp	r1, #0
   140ac:	beq	140dc <__assert_fail@plt+0x28b0>
   140b0:	ldr	r3, [r1, #24]
   140b4:	add	r2, r1, #168	; 0xa8
   140b8:	cmp	r3, r2
   140bc:	ldrne	r2, [r1, #28]
   140c0:	str	r0, [r1, #28]
   140c4:	subne	r3, r3, r2
   140c8:	addne	r3, r0, r3
   140cc:	strne	r3, [r1, #24]
   140d0:	ldr	r1, [r1, #8]
   140d4:	cmp	r1, #0
   140d8:	bne	140b0 <__assert_fail@plt+0x2884>
   140dc:	mov	r3, r8
   140e0:	b	14110 <__assert_fail@plt+0x28e4>
   140e4:	ldr	r2, [r3, #24]
   140e8:	cmp	r2, r1
   140ec:	ldrne	r1, [r3, #28]
   140f0:	str	r0, [r3, #28]
   140f4:	subne	r2, r2, r1
   140f8:	addne	r2, r0, r2
   140fc:	strne	r2, [r3, #24]
   14100:	ldr	r2, [r3, #8]
   14104:	cmp	r2, #0
   14108:	ldreq	r2, [r3, #4]
   1410c:	mov	r3, r2
   14110:	ldr	r2, [r3, #48]	; 0x30
   14114:	add	r1, r3, #168	; 0xa8
   14118:	cmp	r2, #0
   1411c:	bge	140e4 <__assert_fail@plt+0x28b8>
   14120:	b	13c5c <__assert_fail@plt+0x2430>
   14124:	ldr	r2, [r6, #40]	; 0x28
   14128:	ldr	r3, [pc, #856]	; 14488 <__assert_fail@plt+0x2c5c>
   1412c:	cmp	sl, r2
   14130:	str	r3, [r6, #44]	; 0x2c
   14134:	bhi	141e8 <__assert_fail@plt+0x29bc>
   14138:	ldr	r0, [r6, #8]
   1413c:	cmp	r8, #0
   14140:	movne	r3, r0
   14144:	beq	14158 <__assert_fail@plt+0x292c>
   14148:	str	r8, [r3], #4
   1414c:	ldr	r8, [r8, #8]
   14150:	cmp	r8, #0
   14154:	bne	14148 <__assert_fail@plt+0x291c>
   14158:	ldr	r3, [pc, #808]	; 14488 <__assert_fail@plt+0x2c5c>
   1415c:	mov	r2, #4
   14160:	mov	r1, sl
   14164:	bl	1176c <qsort@plt>
   14168:	ldr	ip, [r6, #8]
   1416c:	subs	r3, sl, #1
   14170:	ldr	r8, [ip]
   14174:	moveq	r3, r8
   14178:	beq	1419c <__assert_fail@plt+0x2970>
   1417c:	mov	r2, ip
   14180:	ldr	r1, [r2]
   14184:	ldr	r0, [r2, #4]!
   14188:	subs	r3, r3, #1
   1418c:	str	r0, [r1, #8]
   14190:	bne	14180 <__assert_fail@plt+0x2954>
   14194:	add	ip, ip, sl, lsl #2
   14198:	ldr	r3, [ip, #-4]
   1419c:	mov	r2, #0
   141a0:	str	r2, [r3, #8]
   141a4:	mov	r3, #0
   141a8:	mov	r0, r8
   141ac:	str	r3, [r6, #44]	; 0x2c
   141b0:	add	sp, sp, #68	; 0x44
   141b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141b8:	ldr	r4, [sp, #8]
   141bc:	mov	r8, #0
   141c0:	ldr	r0, [r4, #12]
   141c4:	bl	11814 <closedir@plt>
   141c8:	ldr	r3, [sp, #40]	; 0x28
   141cc:	str	r8, [r4, #12]
   141d0:	cmp	r3, #3
   141d4:	beq	14334 <__assert_fail@plt+0x2b08>
   141d8:	mov	r8, #0
   141dc:	mov	r0, r8
   141e0:	add	sp, sp, #68	; 0x44
   141e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141e8:	add	r1, sl, #40	; 0x28
   141ec:	cmn	r1, #-1073741823	; 0xc0000001
   141f0:	str	r1, [r6, #40]	; 0x28
   141f4:	bhi	14290 <__assert_fail@plt+0x2a64>
   141f8:	lsl	r1, r1, #2
   141fc:	ldr	r0, [r6, #8]
   14200:	bl	1cd88 <lchmod@@Base+0x5bbc>
   14204:	cmp	r0, #0
   14208:	beq	14290 <__assert_fail@plt+0x2a64>
   1420c:	str	r0, [r6, #8]
   14210:	b	1413c <__assert_fail@plt+0x2910>
   14214:	bl	117e4 <close@plt>
   14218:	b	13f94 <__assert_fail@plt+0x2768>
   1421c:	ldr	r0, [r6, #8]
   14220:	bl	1309c <__assert_fail@plt+0x1870>
   14224:	mov	r3, #0
   14228:	str	r3, [r6, #8]
   1422c:	str	r3, [r6, #40]	; 0x28
   14230:	b	13b04 <__assert_fail@plt+0x22d8>
   14234:	str	r0, [sp]
   14238:	ldr	r0, [r6, #24]
   1423c:	ldr	r8, [sp, #16]
   14240:	bl	1309c <__assert_fail@plt+0x1870>
   14244:	ldr	r1, [sp]
   14248:	ldr	r5, [fp]
   1424c:	str	r1, [r6, #24]
   14250:	b	13bd4 <__assert_fail@plt+0x23a8>
   14254:	mov	r3, #0
   14258:	str	r3, [sp, #52]	; 0x34
   1425c:	ldr	r0, [r6, #48]	; 0x30
   14260:	ldr	r2, [sp, #8]
   14264:	b	137d0 <__assert_fail@plt+0x1fa4>
   14268:	ldr	r4, [sp, #8]
   1426c:	ldr	r0, [r6, #56]	; 0x38
   14270:	add	r1, r4, #64	; 0x40
   14274:	bl	1cf30 <lchmod@@Base+0x5d64>
   14278:	cmp	r0, #0
   1427c:	movne	r2, r4
   14280:	movne	r3, #2
   14284:	strne	r4, [r2]
   14288:	strhne	r3, [r4, #56]	; 0x38
   1428c:	b	13dd4 <__assert_fail@plt+0x25a8>
   14290:	ldr	r0, [r6, #8]
   14294:	bl	1309c <__assert_fail@plt+0x1870>
   14298:	mov	r3, #0
   1429c:	str	r3, [r6, #8]
   142a0:	str	r3, [r6, #40]	; 0x28
   142a4:	b	141a4 <__assert_fail@plt+0x2978>
   142a8:	ldr	r2, [sp, #8]
   142ac:	ldrh	r3, [r2, #56]	; 0x38
   142b0:	cmp	r3, #7
   142b4:	cmpne	r3, #4
   142b8:	movne	r3, #6
   142bc:	strhne	r3, [r2, #56]	; 0x38
   142c0:	b	13d4c <__assert_fail@plt+0x2520>
   142c4:	mov	r2, #3
   142c8:	ldr	r1, [pc, #444]	; 1448c <__assert_fail@plt+0x2c60>
   142cc:	ldr	r0, [sp, #60]	; 0x3c
   142d0:	bl	1d09c <lchmod@@Base+0x5ed0>
   142d4:	mov	r2, r0
   142d8:	str	r0, [sp, #60]	; 0x3c
   142dc:	b	13e28 <__assert_fail@plt+0x25fc>
   142e0:	ldr	r3, [r6, #48]	; 0x30
   142e4:	ldr	r1, [sp, #8]
   142e8:	orr	r3, r3, #8192	; 0x2000
   142ec:	mov	r2, #7
   142f0:	cmp	r8, #0
   142f4:	strh	r2, [r1, #56]	; 0x38
   142f8:	str	r3, [r6, #48]	; 0x30
   142fc:	beq	141d8 <__assert_fail@plt+0x29ac>
   14300:	ldr	r3, [r8, #12]
   14304:	ldr	r4, [r8, #8]
   14308:	subs	r0, r3, #0
   1430c:	beq	14314 <__assert_fail@plt+0x2ae8>
   14310:	bl	11814 <closedir@plt>
   14314:	mov	r0, r8
   14318:	bl	1309c <__assert_fail@plt+0x1870>
   1431c:	subs	r8, r4, #0
   14320:	bne	14300 <__assert_fail@plt+0x2ad4>
   14324:	b	141d8 <__assert_fail@plt+0x29ac>
   14328:	ldr	r3, [sp, #40]	; 0x28
   1432c:	cmp	r3, #3
   14330:	bne	141d8 <__assert_fail@plt+0x29ac>
   14334:	ldr	r4, [sp, #8]
   14338:	mov	r3, #4
   1433c:	strh	r3, [r4, #56]	; 0x38
   14340:	bl	11688 <__errno_location@plt>
   14344:	ldr	r3, [r0]
   14348:	str	r3, [r4, #32]
   1434c:	b	13b04 <__assert_fail@plt+0x22d8>
   14350:	ldr	r4, [sp, #8]
   14354:	mov	r3, #0
   14358:	mov	r2, r4
   1435c:	ldr	r1, [r6, #48]	; 0x30
   14360:	ldr	r0, [r6, #32]
   14364:	bl	132d4 <__assert_fail@plt+0x1aa8>
   14368:	strh	r0, [r4, #56]	; 0x38
   1436c:	b	13dd4 <__assert_fail@plt+0x25a8>
   14370:	ldr	r3, [sp, #8]
   14374:	ldr	r3, [r3, #84]	; 0x54
   14378:	cmp	r3, #2
   1437c:	bne	13e04 <__assert_fail@plt+0x25d8>
   14380:	ldr	r1, [sp, #60]	; 0x3c
   14384:	ldr	r0, [sp, #8]
   14388:	bl	131c4 <__assert_fail@plt+0x1998>
   1438c:	ldr	r3, [pc, #220]	; 14470 <__assert_fail@plt+0x2c44>
   14390:	cmp	r0, r3
   14394:	beq	13e04 <__assert_fail@plt+0x25d8>
   14398:	bgt	14420 <__assert_fail@plt+0x2bf4>
   1439c:	ldr	r3, [pc, #212]	; 14478 <__assert_fail@plt+0x2c4c>
   143a0:	cmp	r0, r3
   143a4:	beq	13e04 <__assert_fail@plt+0x25d8>
   143a8:	cmp	r0, #0
   143ac:	beq	13e04 <__assert_fail@plt+0x25d8>
   143b0:	ldr	r3, [sp, #40]	; 0x28
   143b4:	cmp	r3, #3
   143b8:	bne	14254 <__assert_fail@plt+0x2a28>
   143bc:	mov	r5, #1
   143c0:	mov	r4, #0
   143c4:	b	13e18 <__assert_fail@plt+0x25ec>
   143c8:	bl	11688 <__errno_location@plt>
   143cc:	ldr	r2, [sp, #8]
   143d0:	mov	r4, r2
   143d4:	ldr	r3, [r0]
   143d8:	str	r3, [r2, #32]
   143dc:	b	13e54 <__assert_fail@plt+0x2628>
   143e0:	add	r4, r6, #60	; 0x3c
   143e4:	mov	r0, r4
   143e8:	ldr	r1, [r6, #32]
   143ec:	bl	17140 <__assert_fail@plt+0x5914>
   143f0:	cmp	r0, #0
   143f4:	blt	143fc <__assert_fail@plt+0x2bd0>
   143f8:	bl	117e4 <close@plt>
   143fc:	mvn	r3, #99	; 0x63
   14400:	str	r3, [r6, #32]
   14404:	mov	r5, #0
   14408:	b	13f94 <__assert_fail@plt+0x2768>
   1440c:	bl	11688 <__errno_location@plt>
   14410:	mov	r3, #12
   14414:	mov	r8, #0
   14418:	str	r3, [r0]
   1441c:	b	13b04 <__assert_fail@plt+0x22d8>
   14420:	ldr	r3, [pc, #104]	; 14490 <__assert_fail@plt+0x2c64>
   14424:	cmp	r0, r3
   14428:	beq	13e04 <__assert_fail@plt+0x25d8>
   1442c:	ldr	r3, [pc, #96]	; 14494 <__assert_fail@plt+0x2c68>
   14430:	cmp	r0, r3
   14434:	bne	143b0 <__assert_fail@plt+0x2b84>
   14438:	b	13e04 <__assert_fail@plt+0x25d8>
   1443c:	ldr	r3, [pc, #60]	; 14480 <__assert_fail@plt+0x2c54>
   14440:	ldr	r0, [r6, #48]	; 0x30
   14444:	str	r3, [sp, #24]
   14448:	mov	r3, #1
   1444c:	str	r3, [sp, #52]	; 0x34
   14450:	ldr	r2, [sp, #8]
   14454:	b	137d0 <__assert_fail@plt+0x1fa4>
   14458:	str	r7, [r4, #80]	; 0x50
   1445c:	mov	r2, #1
   14460:	mov	r3, #0
   14464:	b	13894 <__assert_fail@plt+0x2068>
   14468:			; <UNDEFINED> instruction: 0x0001e1bc
   1446c:	andeq	r2, r0, r0, lsl r7
   14470:	andeq	r6, r0, r9, ror #18
   14474:			; <UNDEFINED> instruction: 0x01021994
   14478:			; <UNDEFINED> instruction: 0xff534d42
   1447c:	andeq	lr, r1, ip, ror #3
   14480:	andeq	r8, r1, r0, lsr #13
   14484:	andeq	r0, r0, r2, lsl #2
   14488:	muleq	r1, r4, r1
   1448c:	andeq	r0, r0, r6, lsl #8
   14490:	andeq	r9, r0, r0, lsr #31
   14494:	movtpl	r4, #24911	; 0x614f
   14498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1449c:	bic	r8, r1, #4080	; 0xff0
   144a0:	sub	sp, sp, #36	; 0x24
   144a4:	bic	r8, r8, #15
   144a8:	cmp	r8, #0
   144ac:	str	r2, [sp, #12]
   144b0:	bne	14958 <__assert_fail@plt+0x312c>
   144b4:	and	r3, r1, #516	; 0x204
   144b8:	cmp	r3, #516	; 0x204
   144bc:	mov	r5, r1
   144c0:	beq	148bc <__assert_fail@plt+0x3090>
   144c4:	ands	r8, r1, #18
   144c8:	beq	148bc <__assert_fail@plt+0x3090>
   144cc:	mov	r9, r0
   144d0:	mov	r1, #96	; 0x60
   144d4:	mov	r0, #1
   144d8:	bl	1cd14 <lchmod@@Base+0x5b48>
   144dc:	subs	r8, r0, #0
   144e0:	beq	14814 <__assert_fail@plt+0x2fe8>
   144e4:	ldr	r3, [sp, #12]
   144e8:	tst	r5, #2
   144ec:	str	r3, [r8, #44]	; 0x2c
   144f0:	bicne	r3, r5, #512	; 0x200
   144f4:	orrne	r3, r3, #4
   144f8:	strne	r3, [r8, #48]	; 0x30
   144fc:	ldr	r3, [r9]
   14500:	streq	r5, [r8, #48]	; 0x30
   14504:	mvn	r2, #99	; 0x63
   14508:	cmp	r3, #0
   1450c:	str	r2, [r8, #32]
   14510:	beq	149bc <__assert_fail@plt+0x3190>
   14514:	mov	r6, r9
   14518:	mov	r4, #0
   1451c:	mov	r0, r3
   14520:	bl	11658 <strlen@plt>
   14524:	ldr	r3, [r6, #4]!
   14528:	cmp	r4, r0
   1452c:	movcc	r4, r0
   14530:	cmp	r3, #0
   14534:	bne	1451c <__assert_fail@plt+0x2cf0>
   14538:	add	r4, r4, #1
   1453c:	cmp	r4, #4096	; 0x1000
   14540:	movcc	r4, #4096	; 0x1000
   14544:	ldr	r3, [r8, #36]	; 0x24
   14548:	add	r1, r3, #256	; 0x100
   1454c:	add	r1, r1, r4
   14550:	cmp	r3, r1
   14554:	bhi	14888 <__assert_fail@plt+0x305c>
   14558:	str	r1, [r8, #36]	; 0x24
   1455c:	ldr	r0, [r8, #24]
   14560:	bl	1cd88 <lchmod@@Base+0x5bbc>
   14564:	subs	r4, r0, #0
   14568:	beq	14a58 <__assert_fail@plt+0x322c>
   1456c:	ldr	fp, [r9]
   14570:	str	r4, [r8, #24]
   14574:	cmp	fp, #0
   14578:	beq	1493c <__assert_fail@plt+0x3110>
   1457c:	mov	r0, #176	; 0xb0
   14580:	bl	1cd5c <lchmod@@Base+0x5b90>
   14584:	subs	r3, r0, #0
   14588:	mov	r0, r3
   1458c:	str	r3, [sp, #16]
   14590:	beq	1487c <__assert_fail@plt+0x3050>
   14594:	ldr	r2, [r8, #24]
   14598:	ldr	r3, [sp, #12]
   1459c:	mov	r1, #196608	; 0x30000
   145a0:	cmp	r3, #0
   145a4:	str	r2, [r0, #28]
   145a8:	mov	r3, #0
   145ac:	mvn	r2, #0
   145b0:	str	r8, [r0, #44]	; 0x2c
   145b4:	strb	r3, [r0, #168]	; 0xa8
   145b8:	str	r3, [r0, #52]	; 0x34
   145bc:	str	r3, [r0, #32]
   145c0:	str	r3, [r0, #12]
   145c4:	str	r3, [r0, #16]
   145c8:	str	r3, [r0, #20]
   145cc:	str	r1, [r0, #58]	; 0x3a
   145d0:	str	r2, [r0, #48]	; 0x30
   145d4:	ldr	fp, [r9]
   145d8:	beq	149b0 <__assert_fail@plt+0x3184>
   145dc:	ldr	r3, [r8, #48]	; 0x30
   145e0:	lsr	r3, r3, #10
   145e4:	and	r3, r3, #1
   145e8:	str	r3, [sp, #24]
   145ec:	cmp	fp, #0
   145f0:	beq	14a70 <__assert_fail@plt+0x3244>
   145f4:	lsr	r5, r5, #11
   145f8:	mov	r3, #0
   145fc:	eor	r5, r5, #1
   14600:	mov	r6, r3
   14604:	str	r3, [sp, #28]
   14608:	and	r3, r5, #1
   1460c:	str	r3, [sp, #20]
   14610:	mov	sl, r6
   14614:	mov	r7, r6
   14618:	b	14658 <__assert_fail@plt+0x2e2c>
   1461c:	mov	r3, #11
   14620:	strh	r3, [r4, #56]	; 0x38
   14624:	mov	r2, #2
   14628:	mov	r3, #0
   1462c:	strd	r2, [r4, #112]	; 0x70
   14630:	ldr	r3, [sp, #12]
   14634:	cmp	r3, #0
   14638:	beq	14738 <__assert_fail@plt+0x2f0c>
   1463c:	ldr	fp, [r9, #4]!
   14640:	str	r7, [r4, #8]
   14644:	cmp	fp, #0
   14648:	mov	r7, r4
   1464c:	add	r4, sl, #1
   14650:	beq	14764 <__assert_fail@plt+0x2f38>
   14654:	mov	sl, r4
   14658:	mov	r0, fp
   1465c:	bl	11658 <strlen@plt>
   14660:	ldr	r3, [sp, #20]
   14664:	cmp	r0, #2
   14668:	movls	r3, #0
   1466c:	andhi	r3, r3, #1
   14670:	cmp	r3, #0
   14674:	mov	r5, r0
   14678:	beq	14690 <__assert_fail@plt+0x2e64>
   1467c:	sub	r2, r0, #1
   14680:	add	r3, fp, r2
   14684:	ldrb	r2, [fp, r2]
   14688:	cmp	r2, #47	; 0x2f
   1468c:	beq	14820 <__assert_fail@plt+0x2ff4>
   14690:	add	r0, r5, #176	; 0xb0
   14694:	bic	r0, r0, #7
   14698:	bl	1cd5c <lchmod@@Base+0x5b90>
   1469c:	subs	r4, r0, #0
   146a0:	beq	14848 <__assert_fail@plt+0x301c>
   146a4:	add	r3, r4, #168	; 0xa8
   146a8:	mov	r1, fp
   146ac:	mov	r0, r3
   146b0:	mov	r2, r5
   146b4:	bl	114b4 <memcpy@plt>
   146b8:	add	r1, r4, r5
   146bc:	ldr	r2, [r8, #24]
   146c0:	strb	r6, [r1, #168]	; 0xa8
   146c4:	str	r5, [r4, #52]	; 0x34
   146c8:	str	r8, [r4, #44]	; 0x2c
   146cc:	str	r6, [r4, #32]
   146d0:	str	r6, [r4, #12]
   146d4:	str	r6, [r4, #16]
   146d8:	str	r6, [r4, #20]
   146dc:	str	r6, [r4, #48]	; 0x30
   146e0:	str	r2, [r4, #28]
   146e4:	mov	r3, r0
   146e8:	ldr	r0, [sp, #24]
   146ec:	str	r3, [r4, #24]
   146f0:	mov	r3, #196608	; 0x30000
   146f4:	cmp	r7, #0
   146f8:	moveq	r0, #0
   146fc:	andne	r0, r0, #1
   14700:	str	r3, [r4, #58]	; 0x3a
   14704:	ldr	r3, [sp, #16]
   14708:	cmp	r0, #0
   1470c:	str	r3, [r4, #4]
   14710:	bne	1461c <__assert_fail@plt+0x2df0>
   14714:	mov	r3, r6
   14718:	mov	r2, r4
   1471c:	ldr	r1, [r8, #48]	; 0x30
   14720:	ldr	r0, [r8, #32]
   14724:	bl	132d4 <__assert_fail@plt+0x1aa8>
   14728:	ldr	r3, [sp, #12]
   1472c:	cmp	r3, #0
   14730:	strh	r0, [r4, #56]	; 0x38
   14734:	bne	1463c <__assert_fail@plt+0x2e10>
   14738:	cmp	r7, #0
   1473c:	str	r3, [r4, #8]
   14740:	ldrne	r3, [sp, #28]
   14744:	ldr	fp, [r9, #4]!
   14748:	strne	r4, [sp, #28]
   1474c:	strne	r4, [r3, #8]
   14750:	streq	r4, [sp, #28]
   14754:	moveq	r7, r4
   14758:	cmp	fp, #0
   1475c:	add	r4, sl, #1
   14760:	bne	14654 <__assert_fail@plt+0x2e28>
   14764:	ldr	r3, [sp, #12]
   14768:	cmp	r3, #0
   1476c:	cmpne	r4, #1
   14770:	bhi	14974 <__assert_fail@plt+0x3148>
   14774:	mov	r0, #176	; 0xb0
   14778:	bl	1cd5c <lchmod@@Base+0x5b90>
   1477c:	cmp	r0, #0
   14780:	beq	14a68 <__assert_fail@plt+0x323c>
   14784:	ldr	r2, [r8, #48]	; 0x30
   14788:	ldr	r3, [pc, #744]	; 14a78 <__assert_fail@plt+0x324c>
   1478c:	ldr	lr, [r8, #24]
   14790:	and	r3, r3, r2
   14794:	mov	r1, #0
   14798:	cmp	r3, #0
   1479c:	mov	ip, #3
   147a0:	mov	r2, #9
   147a4:	mov	r3, #1
   147a8:	str	r8, [r0, #44]	; 0x2c
   147ac:	str	r0, [r8]
   147b0:	str	r7, [r0, #8]
   147b4:	str	lr, [r0, #28]
   147b8:	strb	r1, [r0, #168]	; 0xa8
   147bc:	str	r1, [r0, #52]	; 0x34
   147c0:	str	r1, [r0, #32]
   147c4:	str	r1, [r0, #12]
   147c8:	strh	r1, [r0, #58]	; 0x3a
   147cc:	str	r1, [r0, #16]
   147d0:	str	r1, [r0, #20]
   147d4:	strh	ip, [r0, #60]	; 0x3c
   147d8:	strh	r2, [r0, #56]	; 0x38
   147dc:	str	r3, [r0, #48]	; 0x30
   147e0:	bne	148d4 <__assert_fail@plt+0x30a8>
   147e4:	mov	r0, #32
   147e8:	bl	1cd5c <lchmod@@Base+0x5b90>
   147ec:	cmp	r0, #0
   147f0:	str	r0, [r8, #56]	; 0x38
   147f4:	beq	14848 <__assert_fail@plt+0x301c>
   147f8:	bl	1cf0c <lchmod@@Base+0x5d40>
   147fc:	ldr	r3, [r8, #48]	; 0x30
   14800:	tst	r3, #516	; 0x204
   14804:	beq	14904 <__assert_fail@plt+0x30d8>
   14808:	mvn	r1, #0
   1480c:	add	r0, r8, #60	; 0x3c
   14810:	bl	1710c <__assert_fail@plt+0x58e0>
   14814:	mov	r0, r8
   14818:	add	sp, sp, #36	; 0x24
   1481c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14820:	ldrb	r2, [r3, #-1]!
   14824:	cmp	r2, #47	; 0x2f
   14828:	bne	14690 <__assert_fail@plt+0x2e64>
   1482c:	sub	r5, r5, #1
   14830:	cmp	r5, #1
   14834:	bne	14820 <__assert_fail@plt+0x2ff4>
   14838:	mov	r0, #176	; 0xb0
   1483c:	bl	1cd5c <lchmod@@Base+0x5b90>
   14840:	subs	r4, r0, #0
   14844:	bne	146a4 <__assert_fail@plt+0x2e78>
   14848:	cmp	r7, #0
   1484c:	beq	14874 <__assert_fail@plt+0x3048>
   14850:	ldr	r3, [r7, #12]
   14854:	ldr	r4, [r7, #8]
   14858:	subs	r0, r3, #0
   1485c:	beq	14864 <__assert_fail@plt+0x3038>
   14860:	bl	11814 <closedir@plt>
   14864:	mov	r0, r7
   14868:	bl	1309c <__assert_fail@plt+0x1870>
   1486c:	subs	r7, r4, #0
   14870:	bne	14850 <__assert_fail@plt+0x3024>
   14874:	ldr	r0, [sp, #16]
   14878:	bl	1309c <__assert_fail@plt+0x1870>
   1487c:	ldr	r0, [r8, #24]
   14880:	bl	1309c <__assert_fail@plt+0x1870>
   14884:	b	148a4 <__assert_fail@plt+0x3078>
   14888:	ldr	r0, [r8, #24]
   1488c:	bl	1309c <__assert_fail@plt+0x1870>
   14890:	mov	r3, #0
   14894:	str	r3, [r8, #24]
   14898:	bl	11688 <__errno_location@plt>
   1489c:	mov	r3, #36	; 0x24
   148a0:	str	r3, [r0]
   148a4:	mov	r0, r8
   148a8:	bl	1309c <__assert_fail@plt+0x1870>
   148ac:	mov	r8, #0
   148b0:	mov	r0, r8
   148b4:	add	sp, sp, #36	; 0x24
   148b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148bc:	bl	11688 <__errno_location@plt>
   148c0:	mov	r3, #22
   148c4:	str	r3, [r0]
   148c8:	mov	r0, r8
   148cc:	add	sp, sp, #36	; 0x24
   148d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148d4:	ldr	r3, [pc, #416]	; 14a7c <__assert_fail@plt+0x3250>
   148d8:	ldr	r2, [pc, #416]	; 14a80 <__assert_fail@plt+0x3254>
   148dc:	str	r3, [sp]
   148e0:	mov	r0, #31
   148e4:	ldr	r3, [pc, #408]	; 14a84 <__assert_fail@plt+0x3258>
   148e8:	bl	15f60 <__assert_fail@plt+0x4734>
   148ec:	cmp	r0, #0
   148f0:	str	r0, [r8, #56]	; 0x38
   148f4:	beq	14848 <__assert_fail@plt+0x301c>
   148f8:	ldr	r3, [r8, #48]	; 0x30
   148fc:	tst	r3, #516	; 0x204
   14900:	bne	14808 <__assert_fail@plt+0x2fdc>
   14904:	ldr	r2, [pc, #380]	; 14a88 <__assert_fail@plt+0x325c>
   14908:	tst	r3, #16
   1490c:	ldr	r1, [pc, #376]	; 14a8c <__assert_fail@plt+0x3260>
   14910:	moveq	r1, r2
   14914:	tst	r3, #512	; 0x200
   14918:	bne	14a2c <__assert_fail@plt+0x3200>
   1491c:	ldr	r0, [pc, #364]	; 14a90 <__assert_fail@plt+0x3264>
   14920:	bl	1d270 <lchmod@@Base+0x60a4>
   14924:	cmp	r0, #0
   14928:	str	r0, [r8, #28]
   1492c:	ldrlt	r3, [r8, #48]	; 0x30
   14930:	orrlt	r3, r3, #4
   14934:	strlt	r3, [r8, #48]	; 0x30
   14938:	b	14808 <__assert_fail@plt+0x2fdc>
   1493c:	ldr	r3, [sp, #12]
   14940:	cmp	r3, #0
   14944:	strne	fp, [sp, #16]
   14948:	bne	145dc <__assert_fail@plt+0x2db0>
   1494c:	str	r3, [sp, #16]
   14950:	mov	r7, r3
   14954:	b	14774 <__assert_fail@plt+0x2f48>
   14958:	bl	11688 <__errno_location@plt>
   1495c:	mov	r8, #0
   14960:	mov	r3, #22
   14964:	str	r3, [r0]
   14968:	mov	r0, r8
   1496c:	add	sp, sp, #36	; 0x24
   14970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14974:	ldr	r2, [r8, #40]	; 0x28
   14978:	ldr	r5, [r8, #44]	; 0x2c
   1497c:	cmp	r4, r2
   14980:	bls	149c4 <__assert_fail@plt+0x3198>
   14984:	add	r1, sl, #41	; 0x29
   14988:	cmn	r1, #-1073741823	; 0xc0000001
   1498c:	str	r1, [r8, #40]	; 0x28
   14990:	bhi	14a40 <__assert_fail@plt+0x3214>
   14994:	lsl	r1, r1, #2
   14998:	ldr	r0, [r8, #8]
   1499c:	bl	1cd88 <lchmod@@Base+0x5bbc>
   149a0:	cmp	r0, #0
   149a4:	beq	14a40 <__assert_fail@plt+0x3214>
   149a8:	str	r0, [r8, #8]
   149ac:	b	149c8 <__assert_fail@plt+0x319c>
   149b0:	mov	r3, #1
   149b4:	str	r3, [sp, #24]
   149b8:	b	145ec <__assert_fail@plt+0x2dc0>
   149bc:	mov	r4, #4096	; 0x1000
   149c0:	b	14544 <__assert_fail@plt+0x2d18>
   149c4:	ldr	r0, [r8, #8]
   149c8:	mov	r2, r0
   149cc:	str	r7, [r2], #4
   149d0:	ldr	r7, [r7, #8]
   149d4:	cmp	r7, #0
   149d8:	bne	149cc <__assert_fail@plt+0x31a0>
   149dc:	mov	r3, r5
   149e0:	mov	r1, r4
   149e4:	mov	r2, #4
   149e8:	bl	1176c <qsort@plt>
   149ec:	ldr	ip, [r8, #8]
   149f0:	cmp	sl, #0
   149f4:	ldr	r7, [ip]
   149f8:	moveq	r3, r7
   149fc:	beq	14a20 <__assert_fail@plt+0x31f4>
   14a00:	mov	r2, sl
   14a04:	mov	r3, ip
   14a08:	ldr	r1, [r3]
   14a0c:	ldr	r0, [r3, #4]!
   14a10:	subs	r2, r2, #1
   14a14:	str	r0, [r1, #8]
   14a18:	bne	14a08 <__assert_fail@plt+0x31dc>
   14a1c:	ldr	r3, [ip, sl, lsl #2]
   14a20:	mov	r2, #0
   14a24:	str	r2, [r3, #8]
   14a28:	b	14774 <__assert_fail@plt+0x2f48>
   14a2c:	mov	r2, r1
   14a30:	ldr	r0, [r8, #32]
   14a34:	ldr	r1, [pc, #84]	; 14a90 <__assert_fail@plt+0x3264>
   14a38:	bl	17804 <lchmod@@Base+0x638>
   14a3c:	b	14924 <__assert_fail@plt+0x30f8>
   14a40:	ldr	r0, [r8, #8]
   14a44:	bl	1309c <__assert_fail@plt+0x1870>
   14a48:	mov	r3, #0
   14a4c:	str	r3, [r8, #8]
   14a50:	str	r3, [r8, #40]	; 0x28
   14a54:	b	14774 <__assert_fail@plt+0x2f48>
   14a58:	ldr	r0, [r8, #24]
   14a5c:	bl	1309c <__assert_fail@plt+0x1870>
   14a60:	str	r4, [r8, #24]
   14a64:	b	148a4 <__assert_fail@plt+0x3078>
   14a68:	str	r0, [r8]
   14a6c:	b	14848 <__assert_fail@plt+0x301c>
   14a70:	mov	r7, fp
   14a74:	b	14774 <__assert_fail@plt+0x2f48>
   14a78:	andeq	r0, r0, r2, lsl #2
   14a7c:	muleq	r1, ip, r0
   14a80:	andeq	r3, r1, r8, lsr r1
   14a84:	strdeq	r3, [r1], -r4
   14a88:	andeq	r4, r8, r0, lsl #18
   14a8c:	andeq	ip, r8, r0, lsl #18
   14a90:	andeq	lr, r1, r0, lsr #3
   14a94:	ldr	r3, [r0]
   14a98:	push	{r4, r5, r6, lr}
   14a9c:	cmp	r3, #0
   14aa0:	mov	r6, r0
   14aa4:	beq	14ae0 <__assert_fail@plt+0x32b4>
   14aa8:	ldr	r2, [r3, #48]	; 0x30
   14aac:	cmp	r2, #0
   14ab0:	blt	14c20 <__assert_fail@plt+0x33f4>
   14ab4:	ldr	r4, [r3, #8]
   14ab8:	mov	r0, r3
   14abc:	cmp	r4, #0
   14ac0:	ldreq	r4, [r3, #4]
   14ac4:	bl	1309c <__assert_fail@plt+0x1870>
   14ac8:	mov	r3, r4
   14acc:	ldr	r2, [r4, #48]	; 0x30
   14ad0:	cmp	r2, #0
   14ad4:	bge	14ab4 <__assert_fail@plt+0x3288>
   14ad8:	mov	r0, r4
   14adc:	bl	1309c <__assert_fail@plt+0x1870>
   14ae0:	ldr	r4, [r6, #4]
   14ae4:	cmp	r4, #0
   14ae8:	beq	14b10 <__assert_fail@plt+0x32e4>
   14aec:	ldr	r3, [r4, #12]
   14af0:	ldr	r5, [r4, #8]
   14af4:	subs	r0, r3, #0
   14af8:	beq	14b00 <__assert_fail@plt+0x32d4>
   14afc:	bl	11814 <closedir@plt>
   14b00:	mov	r0, r4
   14b04:	bl	1309c <__assert_fail@plt+0x1870>
   14b08:	subs	r4, r5, #0
   14b0c:	bne	14aec <__assert_fail@plt+0x32c0>
   14b10:	ldr	r0, [r6, #8]
   14b14:	bl	1309c <__assert_fail@plt+0x1870>
   14b18:	ldr	r0, [r6, #24]
   14b1c:	bl	1309c <__assert_fail@plt+0x1870>
   14b20:	ldr	r3, [r6, #48]	; 0x30
   14b24:	tst	r3, #512	; 0x200
   14b28:	beq	14bc4 <__assert_fail@plt+0x3398>
   14b2c:	ldr	r0, [r6, #32]
   14b30:	cmp	r0, #0
   14b34:	blt	14b44 <__assert_fail@plt+0x3318>
   14b38:	bl	117e4 <close@plt>
   14b3c:	cmp	r0, #0
   14b40:	bne	14c14 <__assert_fail@plt+0x33e8>
   14b44:	mov	r5, #0
   14b48:	add	r4, r6, #60	; 0x3c
   14b4c:	b	14b5c <__assert_fail@plt+0x3330>
   14b50:	bl	17184 <__assert_fail@plt+0x5958>
   14b54:	cmp	r0, #0
   14b58:	bge	14bbc <__assert_fail@plt+0x3390>
   14b5c:	mov	r0, r4
   14b60:	bl	17138 <__assert_fail@plt+0x590c>
   14b64:	cmp	r0, #0
   14b68:	mov	r0, r4
   14b6c:	beq	14b50 <__assert_fail@plt+0x3324>
   14b70:	ldr	r0, [r6, #52]	; 0x34
   14b74:	cmp	r0, #0
   14b78:	beq	14b80 <__assert_fail@plt+0x3354>
   14b7c:	bl	16250 <__assert_fail@plt+0x4a24>
   14b80:	ldr	r2, [r6, #48]	; 0x30
   14b84:	ldr	r3, [pc, #204]	; 14c58 <__assert_fail@plt+0x342c>
   14b88:	ldr	r0, [r6, #56]	; 0x38
   14b8c:	and	r3, r3, r2
   14b90:	cmp	r3, #0
   14b94:	beq	14c0c <__assert_fail@plt+0x33e0>
   14b98:	cmp	r0, #0
   14b9c:	beq	14ba4 <__assert_fail@plt+0x3378>
   14ba0:	bl	16250 <__assert_fail@plt+0x4a24>
   14ba4:	mov	r0, r6
   14ba8:	bl	1309c <__assert_fail@plt+0x1870>
   14bac:	cmp	r5, #0
   14bb0:	bne	14c48 <__assert_fail@plt+0x341c>
   14bb4:	mov	r0, r5
   14bb8:	pop	{r4, r5, r6, pc}
   14bbc:	bl	117e4 <close@plt>
   14bc0:	b	14b5c <__assert_fail@plt+0x3330>
   14bc4:	tst	r3, #4
   14bc8:	bne	14b44 <__assert_fail@plt+0x3318>
   14bcc:	ldr	r0, [r6, #28]
   14bd0:	bl	11760 <fchdir@plt>
   14bd4:	cmp	r0, #0
   14bd8:	beq	14c28 <__assert_fail@plt+0x33fc>
   14bdc:	bl	11688 <__errno_location@plt>
   14be0:	mov	r4, r0
   14be4:	ldr	r0, [r6, #28]
   14be8:	ldr	r5, [r4]
   14bec:	bl	117e4 <close@plt>
   14bf0:	adds	r0, r0, #0
   14bf4:	movne	r0, #1
   14bf8:	cmp	r5, #0
   14bfc:	movne	r0, #0
   14c00:	cmp	r0, #0
   14c04:	beq	14b48 <__assert_fail@plt+0x331c>
   14c08:	b	14c40 <__assert_fail@plt+0x3414>
   14c0c:	bl	1309c <__assert_fail@plt+0x1870>
   14c10:	b	14ba4 <__assert_fail@plt+0x3378>
   14c14:	bl	11688 <__errno_location@plt>
   14c18:	ldr	r5, [r0]
   14c1c:	b	14b48 <__assert_fail@plt+0x331c>
   14c20:	mov	r4, r3
   14c24:	b	14ad8 <__assert_fail@plt+0x32ac>
   14c28:	ldr	r0, [r6, #28]
   14c2c:	bl	117e4 <close@plt>
   14c30:	cmp	r0, #0
   14c34:	beq	14b44 <__assert_fail@plt+0x3318>
   14c38:	bl	11688 <__errno_location@plt>
   14c3c:	mov	r4, r0
   14c40:	ldr	r5, [r4]
   14c44:	b	14b48 <__assert_fail@plt+0x331c>
   14c48:	bl	11688 <__errno_location@plt>
   14c4c:	str	r5, [r0]
   14c50:	mvn	r5, #0
   14c54:	b	14bb4 <__assert_fail@plt+0x3388>
   14c58:	andeq	r0, r0, r2, lsl #2
   14c5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14c60:	sub	sp, sp, #12
   14c64:	ldr	r4, [r0]
   14c68:	cmp	r4, #0
   14c6c:	beq	14da0 <__assert_fail@plt+0x3574>
   14c70:	ldr	r1, [r0, #48]	; 0x30
   14c74:	ands	r5, r1, #8192	; 0x2000
   14c78:	bne	14da0 <__assert_fail@plt+0x3574>
   14c7c:	ldrh	r3, [r4, #60]	; 0x3c
   14c80:	mov	r2, #3
   14c84:	mov	r7, r0
   14c88:	cmp	r3, #1
   14c8c:	strh	r2, [r4, #60]	; 0x3c
   14c90:	beq	15118 <__assert_fail@plt+0x38ec>
   14c94:	cmp	r3, #2
   14c98:	beq	14db0 <__assert_fail@plt+0x3584>
   14c9c:	ldrh	r2, [r4, #56]	; 0x38
   14ca0:	cmp	r2, #1
   14ca4:	bne	14cdc <__assert_fail@plt+0x34b0>
   14ca8:	cmp	r3, #4
   14cac:	bne	14dc8 <__assert_fail@plt+0x359c>
   14cb0:	b	14de4 <__assert_fail@plt+0x35b8>
   14cb4:	str	r6, [r7]
   14cb8:	mov	r0, r4
   14cbc:	bl	1309c <__assert_fail@plt+0x1870>
   14cc0:	ldr	r3, [r6, #48]	; 0x30
   14cc4:	cmp	r3, #0
   14cc8:	beq	14e50 <__assert_fail@plt+0x3624>
   14ccc:	ldrh	r3, [r6, #60]	; 0x3c
   14cd0:	mov	r4, r6
   14cd4:	cmp	r3, #4
   14cd8:	bne	15004 <__assert_fail@plt+0x37d8>
   14cdc:	ldr	r6, [r4, #8]
   14ce0:	cmp	r6, #0
   14ce4:	bne	14cb4 <__assert_fail@plt+0x3488>
   14ce8:	ldr	r6, [r4, #4]
   14cec:	ldr	r3, [r6, #12]
   14cf0:	cmp	r3, #0
   14cf4:	bne	153a8 <__assert_fail@plt+0x3b7c>
   14cf8:	str	r6, [r7]
   14cfc:	mov	r0, r4
   14d00:	bl	1309c <__assert_fail@plt+0x1870>
   14d04:	ldr	r3, [r6, #48]	; 0x30
   14d08:	cmn	r3, #1
   14d0c:	beq	15298 <__assert_fail@plt+0x3a6c>
   14d10:	ldrh	r3, [r6, #56]	; 0x38
   14d14:	cmp	r3, #11
   14d18:	beq	15078 <__assert_fail@plt+0x384c>
   14d1c:	ldr	r3, [r6, #40]	; 0x28
   14d20:	ldr	r2, [r7, #24]
   14d24:	mov	r1, #0
   14d28:	strb	r1, [r2, r3]
   14d2c:	ldr	r3, [r6, #48]	; 0x30
   14d30:	cmp	r3, r1
   14d34:	beq	15194 <__assert_fail@plt+0x3968>
   14d38:	ldrh	r3, [r6, #58]	; 0x3a
   14d3c:	tst	r3, #2
   14d40:	beq	15154 <__assert_fail@plt+0x3928>
   14d44:	ldr	r3, [r7, #48]	; 0x30
   14d48:	tst	r3, #4
   14d4c:	beq	15208 <__assert_fail@plt+0x39dc>
   14d50:	ldr	r0, [r6, #36]	; 0x24
   14d54:	bl	117e4 <close@plt>
   14d58:	ldr	r3, [r7, #48]	; 0x30
   14d5c:	ldrh	r2, [r6, #56]	; 0x38
   14d60:	cmp	r2, #2
   14d64:	beq	14d98 <__assert_fail@plt+0x356c>
   14d68:	ldr	r2, [r6, #32]
   14d6c:	cmp	r2, #0
   14d70:	movne	r2, #7
   14d74:	strhne	r2, [r6, #56]	; 0x38
   14d78:	bne	14d98 <__assert_fail@plt+0x356c>
   14d7c:	mov	r2, #6
   14d80:	mov	r0, r3
   14d84:	strh	r2, [r6, #56]	; 0x38
   14d88:	add	r1, r7, #56	; 0x38
   14d8c:	mov	r2, r6
   14d90:	bl	13420 <__assert_fail@plt+0x1bf4>
   14d94:	ldr	r3, [r7, #48]	; 0x30
   14d98:	tst	r3, #8192	; 0x2000
   14d9c:	beq	14e44 <__assert_fail@plt+0x3618>
   14da0:	mov	r6, #0
   14da4:	mov	r0, r6
   14da8:	add	sp, sp, #12
   14dac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14db0:	ldrh	r3, [r4, #56]	; 0x38
   14db4:	sub	r2, r3, #12
   14db8:	cmp	r2, #1
   14dbc:	bls	15250 <__assert_fail@plt+0x3a24>
   14dc0:	cmp	r3, #1
   14dc4:	bne	14cdc <__assert_fail@plt+0x34b0>
   14dc8:	tst	r1, #64	; 0x40
   14dcc:	beq	15084 <__assert_fail@plt+0x3858>
   14dd0:	ldrd	r8, [r4, #64]	; 0x40
   14dd4:	ldrd	r2, [r7, #16]
   14dd8:	cmp	r9, r3
   14ddc:	cmpeq	r8, r2
   14de0:	beq	15084 <__assert_fail@plt+0x3858>
   14de4:	ldrh	r3, [r4, #58]	; 0x3a
   14de8:	tst	r3, #2
   14dec:	bne	1539c <__assert_fail@plt+0x3b70>
   14df0:	ldr	r5, [r7, #4]
   14df4:	cmp	r5, #0
   14df8:	beq	14e28 <__assert_fail@plt+0x35fc>
   14dfc:	ldr	r0, [r5, #12]
   14e00:	ldr	r6, [r5, #8]
   14e04:	cmp	r0, #0
   14e08:	beq	14e10 <__assert_fail@plt+0x35e4>
   14e0c:	bl	11814 <closedir@plt>
   14e10:	mov	r0, r5
   14e14:	bl	1309c <__assert_fail@plt+0x1870>
   14e18:	cmp	r6, #0
   14e1c:	mov	r5, r6
   14e20:	bne	14dfc <__assert_fail@plt+0x35d0>
   14e24:	str	r6, [r7, #4]
   14e28:	mov	r3, #6
   14e2c:	strh	r3, [r4, #56]	; 0x38
   14e30:	mov	r2, r4
   14e34:	add	r1, r7, #56	; 0x38
   14e38:	ldr	r0, [r7, #48]	; 0x30
   14e3c:	mov	r6, r4
   14e40:	bl	13420 <__assert_fail@plt+0x1bf4>
   14e44:	mov	r0, r6
   14e48:	add	sp, sp, #12
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14e50:	ldr	r3, [r7, #48]	; 0x30
   14e54:	ands	r8, r3, #4
   14e58:	addne	r4, r7, #60	; 0x3c
   14e5c:	bne	14e90 <__assert_fail@plt+0x3664>
   14e60:	tst	r3, #512	; 0x200
   14e64:	bne	152b8 <__assert_fail@plt+0x3a8c>
   14e68:	ldr	r0, [r7, #28]
   14e6c:	bl	11760 <fchdir@plt>
   14e70:	add	r4, r7, #60	; 0x3c
   14e74:	adds	r5, r0, #0
   14e78:	movne	r5, #1
   14e7c:	b	14e90 <__assert_fail@plt+0x3664>
   14e80:	mov	r0, r4
   14e84:	bl	17184 <__assert_fail@plt+0x5958>
   14e88:	cmp	r0, #0
   14e8c:	bge	1507c <__assert_fail@plt+0x3850>
   14e90:	mov	r0, r4
   14e94:	bl	17138 <__assert_fail@plt+0x590c>
   14e98:	cmp	r0, #0
   14e9c:	beq	14e80 <__assert_fail@plt+0x3654>
   14ea0:	cmp	r5, #0
   14ea4:	bne	15378 <__assert_fail@plt+0x3b4c>
   14ea8:	ldr	r2, [r7, #48]	; 0x30
   14eac:	ldr	r3, [pc, #1760]	; 15594 <__assert_fail@plt+0x3d68>
   14eb0:	ldr	r0, [r7, #56]	; 0x38
   14eb4:	and	r3, r3, r2
   14eb8:	cmp	r3, #0
   14ebc:	beq	15370 <__assert_fail@plt+0x3b44>
   14ec0:	cmp	r0, #0
   14ec4:	beq	14ecc <__assert_fail@plt+0x36a0>
   14ec8:	bl	16250 <__assert_fail@plt+0x4a24>
   14ecc:	ldr	r2, [r6, #52]	; 0x34
   14ed0:	add	r5, r6, #168	; 0xa8
   14ed4:	str	r2, [r6, #40]	; 0x28
   14ed8:	mov	r1, r5
   14edc:	add	r2, r2, #1
   14ee0:	ldr	r0, [r7, #24]
   14ee4:	bl	11484 <memmove@plt>
   14ee8:	mov	r0, r5
   14eec:	mov	r1, #47	; 0x2f
   14ef0:	bl	11718 <strrchr@plt>
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f28 <__assert_fail@plt+0x36fc>
   14efc:	cmp	r5, r0
   14f00:	beq	1538c <__assert_fail@plt+0x3b60>
   14f04:	add	r4, r0, #1
   14f08:	mov	r0, r4
   14f0c:	bl	11658 <strlen@plt>
   14f10:	mov	r1, r4
   14f14:	mov	r8, r0
   14f18:	add	r2, r8, #1
   14f1c:	mov	r0, r5
   14f20:	bl	11484 <memmove@plt>
   14f24:	str	r8, [r6, #52]	; 0x34
   14f28:	ldr	r1, [r7, #48]	; 0x30
   14f2c:	ldr	r3, [pc, #1632]	; 15594 <__assert_fail@plt+0x3d68>
   14f30:	ldr	r2, [r7, #24]
   14f34:	and	r3, r3, r1
   14f38:	cmp	r3, #0
   14f3c:	str	r2, [r6, #28]
   14f40:	str	r2, [r6, #24]
   14f44:	beq	15134 <__assert_fail@plt+0x3908>
   14f48:	ldr	r2, [pc, #1608]	; 15598 <__assert_fail@plt+0x3d6c>
   14f4c:	ldr	r3, [pc, #1608]	; 1559c <__assert_fail@plt+0x3d70>
   14f50:	str	r2, [sp]
   14f54:	mov	r1, #0
   14f58:	ldr	r2, [pc, #1600]	; 155a0 <__assert_fail@plt+0x3d74>
   14f5c:	mov	r0, #31
   14f60:	bl	15f60 <__assert_fail@plt+0x4734>
   14f64:	ldrh	r3, [r6, #56]	; 0x38
   14f68:	str	r0, [r7, #56]	; 0x38
   14f6c:	cmp	r3, #11
   14f70:	str	r6, [r7]
   14f74:	beq	1505c <__assert_fail@plt+0x3830>
   14f78:	cmp	r3, #1
   14f7c:	bne	14e44 <__assert_fail@plt+0x3618>
   14f80:	ldr	r3, [r6, #48]	; 0x30
   14f84:	cmp	r3, #0
   14f88:	ldrdeq	r2, [r6, #64]	; 0x40
   14f8c:	strdeq	r2, [r7, #16]
   14f90:	ldr	r2, [r7, #48]	; 0x30
   14f94:	ldr	r3, [pc, #1528]	; 15594 <__assert_fail@plt+0x3d68>
   14f98:	and	r3, r3, r2
   14f9c:	cmp	r3, #0
   14fa0:	beq	150f8 <__assert_fail@plt+0x38cc>
   14fa4:	mov	r0, #24
   14fa8:	bl	1cd5c <lchmod@@Base+0x5b90>
   14fac:	subs	r8, r0, #0
   14fb0:	beq	15284 <__assert_fail@plt+0x3a58>
   14fb4:	ldrd	r4, [r6, #64]	; 0x40
   14fb8:	ldrd	r2, [r6, #160]	; 0xa0
   14fbc:	ldr	r0, [r7, #56]	; 0x38
   14fc0:	strd	r4, [r8]
   14fc4:	strd	r2, [r8, #8]
   14fc8:	str	r6, [r8, #16]
   14fcc:	mov	r1, r8
   14fd0:	bl	168c8 <__assert_fail@plt+0x509c>
   14fd4:	cmp	r8, r0
   14fd8:	mov	r4, r0
   14fdc:	beq	14e44 <__assert_fail@plt+0x3618>
   14fe0:	mov	r0, r8
   14fe4:	bl	1309c <__assert_fail@plt+0x1870>
   14fe8:	cmp	r4, #0
   14fec:	beq	15284 <__assert_fail@plt+0x3a58>
   14ff0:	ldr	r2, [r4, #16]
   14ff4:	mov	r3, #2
   14ff8:	str	r2, [r6]
   14ffc:	strh	r3, [r6, #56]	; 0x38
   15000:	b	14e44 <__assert_fail@plt+0x3618>
   15004:	cmp	r3, #2
   15008:	beq	153dc <__assert_fail@plt+0x3bb0>
   1500c:	ldr	r3, [r6, #4]
   15010:	mov	ip, #47	; 0x2f
   15014:	ldr	r2, [r7, #24]
   15018:	ldr	r0, [r3, #40]	; 0x28
   1501c:	ldr	lr, [r3, #28]
   15020:	sub	r3, r0, #1
   15024:	add	r1, r6, #168	; 0xa8
   15028:	ldrb	lr, [lr, r3]
   1502c:	cmp	lr, ip
   15030:	movne	r3, r0
   15034:	add	r0, r2, r3
   15038:	strb	ip, [r2, r3]
   1503c:	ldr	r2, [r6, #52]	; 0x34
   15040:	add	r0, r0, #1
   15044:	add	r2, r2, #1
   15048:	bl	11484 <memmove@plt>
   1504c:	ldrh	r3, [r6, #56]	; 0x38
   15050:	str	r6, [r7]
   15054:	cmp	r3, #11
   15058:	bne	14f78 <__assert_fail@plt+0x374c>
   1505c:	ldrd	r2, [r6, #112]	; 0x70
   15060:	cmp	r3, #0
   15064:	cmpeq	r2, #2
   15068:	beq	15408 <__assert_fail@plt+0x3bdc>
   1506c:	cmp	r3, #0
   15070:	cmpeq	r2, #1
   15074:	beq	14e44 <__assert_fail@plt+0x3618>
   15078:	bl	117d8 <abort@plt>
   1507c:	bl	117e4 <close@plt>
   15080:	b	14e90 <__assert_fail@plt+0x3664>
   15084:	ldr	r5, [r7, #4]
   15088:	cmp	r5, #0
   1508c:	beq	15318 <__assert_fail@plt+0x3aec>
   15090:	tst	r1, #4096	; 0x1000
   15094:	bne	152e4 <__assert_fail@plt+0x3ab8>
   15098:	ldr	r3, [r4, #24]
   1509c:	mvn	r2, #0
   150a0:	mov	r1, r4
   150a4:	mov	r0, r7
   150a8:	bl	134d8 <__assert_fail@plt+0x1cac>
   150ac:	cmp	r0, #0
   150b0:	beq	151f8 <__assert_fail@plt+0x39cc>
   150b4:	bl	11688 <__errno_location@plt>
   150b8:	ldrh	r3, [r4, #58]	; 0x3a
   150bc:	ldr	r6, [r7, #4]
   150c0:	orr	r3, r3, #1
   150c4:	cmp	r6, #0
   150c8:	ldr	r2, [r0]
   150cc:	strh	r3, [r4, #58]	; 0x3a
   150d0:	str	r2, [r4, #32]
   150d4:	beq	151fc <__assert_fail@plt+0x39d0>
   150d8:	mov	r3, r6
   150dc:	ldr	r2, [r3, #4]
   150e0:	ldr	r2, [r2, #24]
   150e4:	str	r2, [r3, #24]
   150e8:	ldr	r3, [r3, #8]
   150ec:	cmp	r3, #0
   150f0:	bne	150dc <__assert_fail@plt+0x38b0>
   150f4:	b	151fc <__assert_fail@plt+0x39d0>
   150f8:	ldr	r0, [r7, #56]	; 0x38
   150fc:	add	r1, r6, #64	; 0x40
   15100:	bl	1cf30 <lchmod@@Base+0x5d64>
   15104:	cmp	r0, #0
   15108:	movne	r3, #2
   1510c:	strne	r6, [r6]
   15110:	strhne	r3, [r6, #56]	; 0x38
   15114:	b	14e44 <__assert_fail@plt+0x3618>
   15118:	mov	r3, r5
   1511c:	ldr	r0, [r0, #32]
   15120:	mov	r2, r4
   15124:	bl	132d4 <__assert_fail@plt+0x1aa8>
   15128:	mov	r6, r4
   1512c:	strh	r0, [r4, #56]	; 0x38
   15130:	b	14e44 <__assert_fail@plt+0x3618>
   15134:	mov	r0, #32
   15138:	bl	1cd5c <lchmod@@Base+0x5b90>
   1513c:	cmp	r0, #0
   15140:	str	r0, [r7, #56]	; 0x38
   15144:	beq	1504c <__assert_fail@plt+0x3820>
   15148:	bl	1cf0c <lchmod@@Base+0x5d40>
   1514c:	ldrh	r3, [r6, #56]	; 0x38
   15150:	b	14f6c <__assert_fail@plt+0x3740>
   15154:	tst	r3, #1
   15158:	bne	14d58 <__assert_fail@plt+0x352c>
   1515c:	ldr	r3, [pc, #1088]	; 155a4 <__assert_fail@plt+0x3d78>
   15160:	mvn	r2, #0
   15164:	ldr	r1, [r6, #4]
   15168:	mov	r0, r7
   1516c:	bl	134d8 <__assert_fail@plt+0x1cac>
   15170:	cmp	r0, #0
   15174:	beq	14d58 <__assert_fail@plt+0x352c>
   15178:	bl	11688 <__errno_location@plt>
   1517c:	ldr	r3, [r7, #48]	; 0x30
   15180:	orr	r3, r3, #8192	; 0x2000
   15184:	ldr	r2, [r0]
   15188:	str	r2, [r6, #32]
   1518c:	str	r3, [r7, #48]	; 0x30
   15190:	b	14d5c <__assert_fail@plt+0x3530>
   15194:	ldr	r3, [r7, #48]	; 0x30
   15198:	ands	r8, r3, #4
   1519c:	addne	r4, r7, #60	; 0x3c
   151a0:	bne	151d4 <__assert_fail@plt+0x39a8>
   151a4:	tst	r3, #512	; 0x200
   151a8:	bne	15454 <__assert_fail@plt+0x3c28>
   151ac:	ldr	r0, [r7, #28]
   151b0:	bl	11760 <fchdir@plt>
   151b4:	add	r4, r7, #60	; 0x3c
   151b8:	adds	r5, r0, #0
   151bc:	movne	r5, #1
   151c0:	b	151d4 <__assert_fail@plt+0x39a8>
   151c4:	mov	r0, r4
   151c8:	bl	17184 <__assert_fail@plt+0x5958>
   151cc:	cmp	r0, #0
   151d0:	bge	151f0 <__assert_fail@plt+0x39c4>
   151d4:	mov	r0, r4
   151d8:	bl	17138 <__assert_fail@plt+0x590c>
   151dc:	cmp	r0, #0
   151e0:	beq	151c4 <__assert_fail@plt+0x3998>
   151e4:	cmp	r5, #0
   151e8:	bne	15178 <__assert_fail@plt+0x394c>
   151ec:	b	14d58 <__assert_fail@plt+0x352c>
   151f0:	bl	117e4 <close@plt>
   151f4:	b	151d4 <__assert_fail@plt+0x39a8>
   151f8:	ldr	r6, [r7, #4]
   151fc:	mov	r3, #0
   15200:	str	r3, [r7, #4]
   15204:	b	1500c <__assert_fail@plt+0x37e0>
   15208:	tst	r3, #512	; 0x200
   1520c:	beq	15428 <__assert_fail@plt+0x3bfc>
   15210:	ldr	r1, [r7, #32]
   15214:	ldr	r4, [r6, #36]	; 0x24
   15218:	cmn	r1, #100	; 0x64
   1521c:	sub	r3, r4, r1
   15220:	clz	r3, r3
   15224:	lsr	r3, r3, #5
   15228:	moveq	r3, #0
   1522c:	cmp	r3, #0
   15230:	bne	15078 <__assert_fail@plt+0x384c>
   15234:	add	r0, r7, #60	; 0x3c
   15238:	bl	17140 <__assert_fail@plt+0x5914>
   1523c:	cmp	r0, #0
   15240:	blt	15248 <__assert_fail@plt+0x3a1c>
   15244:	bl	117e4 <close@plt>
   15248:	str	r4, [r7, #32]
   1524c:	b	14d50 <__assert_fail@plt+0x3524>
   15250:	mov	r3, #1
   15254:	mov	r2, r4
   15258:	ldr	r0, [r0, #32]
   1525c:	bl	132d4 <__assert_fail@plt+0x1aa8>
   15260:	cmp	r0, #1
   15264:	strh	r0, [r4, #56]	; 0x38
   15268:	mov	r3, r0
   1526c:	beq	15494 <__assert_fail@plt+0x3c68>
   15270:	cmp	r0, #11
   15274:	mov	r6, r4
   15278:	str	r4, [r7]
   1527c:	bne	14e44 <__assert_fail@plt+0x3618>
   15280:	b	1505c <__assert_fail@plt+0x3830>
   15284:	bl	11688 <__errno_location@plt>
   15288:	mov	r3, #12
   1528c:	mov	r6, #0
   15290:	str	r3, [r0]
   15294:	b	14e44 <__assert_fail@plt+0x3618>
   15298:	mov	r0, r6
   1529c:	bl	1309c <__assert_fail@plt+0x1870>
   152a0:	bl	11688 <__errno_location@plt>
   152a4:	mov	r3, #0
   152a8:	mov	r6, r3
   152ac:	str	r3, [r0]
   152b0:	str	r3, [r7]
   152b4:	b	14e44 <__assert_fail@plt+0x3618>
   152b8:	add	r4, r7, #60	; 0x3c
   152bc:	mov	r0, r4
   152c0:	ldr	r1, [r7, #32]
   152c4:	bl	17140 <__assert_fail@plt+0x5914>
   152c8:	cmp	r0, #0
   152cc:	blt	152d4 <__assert_fail@plt+0x3aa8>
   152d0:	bl	117e4 <close@plt>
   152d4:	mvn	r3, #99	; 0x63
   152d8:	mov	r5, r8
   152dc:	str	r3, [r7, #32]
   152e0:	b	14e90 <__assert_fail@plt+0x3664>
   152e4:	bic	ip, r1, #4096	; 0x1000
   152e8:	str	ip, [r7, #48]	; 0x30
   152ec:	ldr	r0, [r5, #12]
   152f0:	ldr	r6, [r5, #8]
   152f4:	cmp	r0, #0
   152f8:	beq	15300 <__assert_fail@plt+0x3ad4>
   152fc:	bl	11814 <closedir@plt>
   15300:	mov	r0, r5
   15304:	bl	1309c <__assert_fail@plt+0x1870>
   15308:	cmp	r6, #0
   1530c:	mov	r5, r6
   15310:	bne	152ec <__assert_fail@plt+0x3ac0>
   15314:	str	r6, [r7, #4]
   15318:	mov	r1, #3
   1531c:	mov	r0, r7
   15320:	bl	13770 <__assert_fail@plt+0x1f44>
   15324:	cmp	r0, #0
   15328:	mov	r6, r0
   1532c:	str	r0, [r7, #4]
   15330:	bne	151fc <__assert_fail@plt+0x39d0>
   15334:	ldr	r0, [r7, #48]	; 0x30
   15338:	tst	r0, #8192	; 0x2000
   1533c:	bne	14da0 <__assert_fail@plt+0x3574>
   15340:	ldr	r3, [r4, #32]
   15344:	cmp	r3, #0
   15348:	beq	1535c <__assert_fail@plt+0x3b30>
   1534c:	ldrh	r3, [r4, #56]	; 0x38
   15350:	cmp	r3, #4
   15354:	movne	r3, #7
   15358:	strhne	r3, [r4, #56]	; 0x38
   1535c:	add	r1, r7, #56	; 0x38
   15360:	mov	r2, r4
   15364:	bl	13420 <__assert_fail@plt+0x1bf4>
   15368:	mov	r6, r4
   1536c:	b	14e44 <__assert_fail@plt+0x3618>
   15370:	bl	1309c <__assert_fail@plt+0x1870>
   15374:	b	14ecc <__assert_fail@plt+0x36a0>
   15378:	ldr	r3, [r7, #48]	; 0x30
   1537c:	mov	r6, #0
   15380:	orr	r3, r3, #8192	; 0x2000
   15384:	str	r3, [r7, #48]	; 0x30
   15388:	b	14e44 <__assert_fail@plt+0x3618>
   1538c:	ldrb	r3, [r6, #169]	; 0xa9
   15390:	cmp	r3, #0
   15394:	bne	14f04 <__assert_fail@plt+0x36d8>
   15398:	b	14f28 <__assert_fail@plt+0x36fc>
   1539c:	ldr	r0, [r4, #36]	; 0x24
   153a0:	bl	117e4 <close@plt>
   153a4:	b	14df0 <__assert_fail@plt+0x35c4>
   153a8:	ldr	r3, [r6, #40]	; 0x28
   153ac:	ldr	r2, [r7, #24]
   153b0:	mov	r0, #0
   153b4:	str	r6, [r7]
   153b8:	mov	r1, #3
   153bc:	strb	r0, [r2, r3]
   153c0:	mov	r0, r7
   153c4:	bl	13770 <__assert_fail@plt+0x1f44>
   153c8:	subs	r6, r0, #0
   153cc:	beq	15480 <__assert_fail@plt+0x3c54>
   153d0:	mov	r0, r4
   153d4:	bl	1309c <__assert_fail@plt+0x1870>
   153d8:	b	1500c <__assert_fail@plt+0x37e0>
   153dc:	mov	r3, #1
   153e0:	mov	r2, r6
   153e4:	ldr	r1, [r7, #48]	; 0x30
   153e8:	ldr	r0, [r7, #32]
   153ec:	bl	132d4 <__assert_fail@plt+0x1aa8>
   153f0:	cmp	r0, #1
   153f4:	strh	r0, [r6, #56]	; 0x38
   153f8:	beq	154ac <__assert_fail@plt+0x3c80>
   153fc:	mov	r3, #3
   15400:	strh	r3, [r6, #60]	; 0x3c
   15404:	b	1500c <__assert_fail@plt+0x37e0>
   15408:	mov	r3, #0
   1540c:	mov	r2, r6
   15410:	ldr	r1, [r7, #48]	; 0x30
   15414:	ldr	r0, [r7, #32]
   15418:	bl	132d4 <__assert_fail@plt+0x1aa8>
   1541c:	mov	r3, r0
   15420:	strh	r0, [r6, #56]	; 0x38
   15424:	b	14f78 <__assert_fail@plt+0x374c>
   15428:	ldr	r0, [r6, #36]	; 0x24
   1542c:	bl	11760 <fchdir@plt>
   15430:	cmp	r0, #0
   15434:	beq	14d50 <__assert_fail@plt+0x3524>
   15438:	bl	11688 <__errno_location@plt>
   1543c:	ldr	r3, [r7, #48]	; 0x30
   15440:	orr	r3, r3, #8192	; 0x2000
   15444:	ldr	r2, [r0]
   15448:	str	r2, [r6, #32]
   1544c:	str	r3, [r7, #48]	; 0x30
   15450:	b	14d50 <__assert_fail@plt+0x3524>
   15454:	add	r4, r7, #60	; 0x3c
   15458:	mov	r0, r4
   1545c:	ldr	r1, [r7, #32]
   15460:	bl	17140 <__assert_fail@plt+0x5914>
   15464:	cmp	r0, #0
   15468:	blt	15470 <__assert_fail@plt+0x3c44>
   1546c:	bl	117e4 <close@plt>
   15470:	mvn	r3, #99	; 0x63
   15474:	mov	r5, r8
   15478:	str	r3, [r7, #32]
   1547c:	b	151d4 <__assert_fail@plt+0x39a8>
   15480:	ldr	r3, [r7, #48]	; 0x30
   15484:	tst	r3, #8192	; 0x2000
   15488:	bne	14da0 <__assert_fail@plt+0x3574>
   1548c:	ldr	r6, [r4, #4]
   15490:	b	14cf8 <__assert_fail@plt+0x34cc>
   15494:	ldr	r1, [r7, #48]	; 0x30
   15498:	tst	r1, #4
   1549c:	beq	154f8 <__assert_fail@plt+0x3ccc>
   154a0:	str	r4, [r7]
   154a4:	mov	r6, r4
   154a8:	b	14f78 <__assert_fail@plt+0x374c>
   154ac:	ldr	r3, [r7, #48]	; 0x30
   154b0:	tst	r3, #4
   154b4:	bne	153fc <__assert_fail@plt+0x3bd0>
   154b8:	ldr	r1, [pc, #232]	; 155a8 <__assert_fail@plt+0x3d7c>
   154bc:	tst	r3, #16
   154c0:	ldr	r2, [pc, #228]	; 155ac <__assert_fail@plt+0x3d80>
   154c4:	movne	r2, r1
   154c8:	tst	r3, #512	; 0x200
   154cc:	bne	15558 <__assert_fail@plt+0x3d2c>
   154d0:	mov	r1, r2
   154d4:	ldr	r0, [pc, #212]	; 155b0 <__assert_fail@plt+0x3d84>
   154d8:	bl	1d270 <lchmod@@Base+0x60a4>
   154dc:	cmp	r0, #0
   154e0:	str	r0, [r6, #36]	; 0x24
   154e4:	blt	15540 <__assert_fail@plt+0x3d14>
   154e8:	ldrh	r3, [r6, #58]	; 0x3a
   154ec:	orr	r3, r3, #2
   154f0:	strh	r3, [r6, #58]	; 0x3a
   154f4:	b	153fc <__assert_fail@plt+0x3bd0>
   154f8:	ldr	r3, [pc, #168]	; 155a8 <__assert_fail@plt+0x3d7c>
   154fc:	tst	r1, #16
   15500:	ldr	r2, [pc, #164]	; 155ac <__assert_fail@plt+0x3d80>
   15504:	movne	r2, r3
   15508:	tst	r1, #512	; 0x200
   1550c:	bne	15584 <__assert_fail@plt+0x3d58>
   15510:	mov	r1, r2
   15514:	ldr	r0, [pc, #148]	; 155b0 <__assert_fail@plt+0x3d84>
   15518:	bl	1d270 <lchmod@@Base+0x60a4>
   1551c:	cmp	r0, #0
   15520:	str	r0, [r4, #36]	; 0x24
   15524:	blt	15568 <__assert_fail@plt+0x3d3c>
   15528:	ldrh	r2, [r4, #58]	; 0x3a
   1552c:	ldrh	r3, [r4, #56]	; 0x38
   15530:	mov	r6, r4
   15534:	orr	r2, r2, #2
   15538:	strh	r2, [r4, #58]	; 0x3a
   1553c:	b	14f6c <__assert_fail@plt+0x3740>
   15540:	bl	11688 <__errno_location@plt>
   15544:	mov	r2, #7
   15548:	ldr	r3, [r0]
   1554c:	strh	r2, [r6, #56]	; 0x38
   15550:	str	r3, [r6, #32]
   15554:	b	153fc <__assert_fail@plt+0x3bd0>
   15558:	ldr	r1, [pc, #80]	; 155b0 <__assert_fail@plt+0x3d84>
   1555c:	ldr	r0, [r7, #32]
   15560:	bl	17804 <lchmod@@Base+0x638>
   15564:	b	154dc <__assert_fail@plt+0x3cb0>
   15568:	bl	11688 <__errno_location@plt>
   1556c:	mov	r2, #7
   15570:	mov	r3, r2
   15574:	ldr	r1, [r0]
   15578:	strh	r2, [r4, #56]	; 0x38
   1557c:	str	r1, [r4, #32]
   15580:	b	154a0 <__assert_fail@plt+0x3c74>
   15584:	ldr	r1, [pc, #36]	; 155b0 <__assert_fail@plt+0x3d84>
   15588:	ldr	r0, [r7, #32]
   1558c:	bl	17804 <lchmod@@Base+0x638>
   15590:	b	1551c <__assert_fail@plt+0x3cf0>
   15594:	andeq	r0, r0, r2, lsl #2
   15598:	muleq	r1, ip, r0
   1559c:	strdeq	r3, [r1], -r4
   155a0:	andeq	r3, r1, r8, lsr r1
   155a4:	andeq	lr, r1, ip, ror #3
   155a8:	andeq	ip, r8, r0, lsl #18
   155ac:	andeq	r4, r8, r0, lsl #18
   155b0:	andeq	lr, r1, r0, lsr #3
   155b4:	cmp	r2, #4
   155b8:	bhi	155cc <__assert_fail@plt+0x3da0>
   155bc:	mov	r3, #0
   155c0:	strh	r2, [r1, #60]	; 0x3c
   155c4:	mov	r0, r3
   155c8:	bx	lr
   155cc:	push	{r4, lr}
   155d0:	bl	11688 <__errno_location@plt>
   155d4:	mov	r2, #22
   155d8:	mov	r3, #1
   155dc:	str	r2, [r0]
   155e0:	mov	r0, r3
   155e4:	pop	{r4, pc}
   155e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   155ec:	bics	r4, r1, #4096	; 0x1000
   155f0:	bne	15764 <__assert_fail@plt+0x3f38>
   155f4:	mov	r6, r0
   155f8:	mov	r7, r1
   155fc:	bl	11688 <__errno_location@plt>
   15600:	ldr	r8, [r6]
   15604:	str	r4, [r0]
   15608:	ldr	r3, [r6, #48]	; 0x30
   1560c:	mov	r9, r0
   15610:	ands	r3, r3, #8192	; 0x2000
   15614:	bne	1577c <__assert_fail@plt+0x3f50>
   15618:	ldrh	r2, [r8, #56]	; 0x38
   1561c:	cmp	r2, #9
   15620:	ldreq	r3, [r8, #8]
   15624:	beq	156a8 <__assert_fail@plt+0x3e7c>
   15628:	cmp	r2, #1
   1562c:	bne	156a8 <__assert_fail@plt+0x3e7c>
   15630:	ldr	r4, [r6, #4]
   15634:	cmp	r4, #0
   15638:	beq	15660 <__assert_fail@plt+0x3e34>
   1563c:	ldr	r0, [r4, #12]
   15640:	ldr	r5, [r4, #8]
   15644:	cmp	r0, #0
   15648:	beq	15650 <__assert_fail@plt+0x3e24>
   1564c:	bl	11814 <closedir@plt>
   15650:	mov	r0, r4
   15654:	bl	1309c <__assert_fail@plt+0x1870>
   15658:	subs	r4, r5, #0
   1565c:	bne	1563c <__assert_fail@plt+0x3e10>
   15660:	cmp	r7, #4096	; 0x1000
   15664:	movne	r4, #1
   15668:	beq	156b0 <__assert_fail@plt+0x3e84>
   1566c:	ldr	r3, [r8, #48]	; 0x30
   15670:	cmp	r3, #0
   15674:	bne	15694 <__assert_fail@plt+0x3e68>
   15678:	ldr	r3, [r8, #24]
   1567c:	ldrb	r3, [r3]
   15680:	cmp	r3, #47	; 0x2f
   15684:	beq	15694 <__assert_fail@plt+0x3e68>
   15688:	ldr	r3, [r6, #48]	; 0x30
   1568c:	tst	r3, #4
   15690:	beq	156d0 <__assert_fail@plt+0x3ea4>
   15694:	mov	r1, r4
   15698:	mov	r0, r6
   1569c:	bl	13770 <__assert_fail@plt+0x1f44>
   156a0:	mov	r3, r0
   156a4:	str	r0, [r6, #4]
   156a8:	mov	r0, r3
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b0:	ldr	r3, [r6, #48]	; 0x30
   156b4:	mov	r4, #2
   156b8:	orr	r3, r3, #4096	; 0x1000
   156bc:	str	r3, [r6, #48]	; 0x30
   156c0:	ldr	r3, [r8, #48]	; 0x30
   156c4:	cmp	r3, #0
   156c8:	beq	15678 <__assert_fail@plt+0x3e4c>
   156cc:	b	15694 <__assert_fail@plt+0x3e68>
   156d0:	ldr	r2, [pc, #252]	; 157d4 <__assert_fail@plt+0x3fa8>
   156d4:	tst	r3, #16
   156d8:	ldr	r1, [pc, #248]	; 157d8 <__assert_fail@plt+0x3fac>
   156dc:	moveq	r1, r2
   156e0:	tst	r3, #512	; 0x200
   156e4:	bne	157a0 <__assert_fail@plt+0x3f74>
   156e8:	ldr	r0, [pc, #236]	; 157dc <__assert_fail@plt+0x3fb0>
   156ec:	bl	1d270 <lchmod@@Base+0x60a4>
   156f0:	mov	r5, r0
   156f4:	cmp	r5, #0
   156f8:	movlt	r3, #0
   156fc:	strlt	r3, [r6, #4]
   15700:	blt	156a8 <__assert_fail@plt+0x3e7c>
   15704:	mov	r1, r4
   15708:	mov	r0, r6
   1570c:	bl	13770 <__assert_fail@plt+0x1f44>
   15710:	ldr	r3, [r6, #48]	; 0x30
   15714:	ands	r4, r3, #512	; 0x200
   15718:	str	r0, [r6, #4]
   1571c:	beq	15784 <__assert_fail@plt+0x3f58>
   15720:	ldr	r1, [r6, #32]
   15724:	cmn	r1, #100	; 0x64
   15728:	sub	r3, r5, r1
   1572c:	clz	r3, r3
   15730:	lsr	r3, r3, #5
   15734:	moveq	r3, #0
   15738:	cmp	r3, #0
   1573c:	bne	157d0 <__assert_fail@plt+0x3fa4>
   15740:	add	r0, r6, #60	; 0x3c
   15744:	bl	17140 <__assert_fail@plt+0x5914>
   15748:	cmp	r0, #0
   1574c:	blt	15754 <__assert_fail@plt+0x3f28>
   15750:	bl	117e4 <close@plt>
   15754:	str	r5, [r6, #32]
   15758:	ldr	r3, [r6, #4]
   1575c:	mov	r0, r3
   15760:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15764:	bl	11688 <__errno_location@plt>
   15768:	mov	r2, #22
   1576c:	mov	r3, #0
   15770:	str	r2, [r0]
   15774:	mov	r0, r3
   15778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1577c:	mov	r3, r4
   15780:	b	156a8 <__assert_fail@plt+0x3e7c>
   15784:	mov	r0, r5
   15788:	bl	11760 <fchdir@plt>
   1578c:	cmp	r0, #0
   15790:	bne	157b8 <__assert_fail@plt+0x3f8c>
   15794:	mov	r0, r5
   15798:	bl	117e4 <close@plt>
   1579c:	b	15758 <__assert_fail@plt+0x3f2c>
   157a0:	mov	r2, r1
   157a4:	ldr	r0, [r6, #32]
   157a8:	ldr	r1, [pc, #44]	; 157dc <__assert_fail@plt+0x3fb0>
   157ac:	bl	17804 <lchmod@@Base+0x638>
   157b0:	mov	r5, r0
   157b4:	b	156f4 <__assert_fail@plt+0x3ec8>
   157b8:	ldr	r6, [r9]
   157bc:	mov	r0, r5
   157c0:	bl	117e4 <close@plt>
   157c4:	str	r6, [r9]
   157c8:	mov	r3, r4
   157cc:	b	156a8 <__assert_fail@plt+0x3e7c>
   157d0:	bl	117d8 <abort@plt>
   157d4:	andeq	r4, r8, r0, lsl #18
   157d8:	andeq	ip, r8, r0, lsl #18
   157dc:	andeq	lr, r1, r0, lsr #3
   157e0:	push	{r4, lr}
   157e4:	ror	r0, r0, #3
   157e8:	bl	1d7a4 <lchmod@@Base+0x65d8>
   157ec:	mov	r0, r1
   157f0:	pop	{r4, pc}
   157f4:	sub	r0, r1, r0
   157f8:	clz	r0, r0
   157fc:	lsr	r0, r0, #5
   15800:	bx	lr
   15804:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15808:	mov	r5, r1
   1580c:	mov	r6, r0
   15810:	ldr	r4, [r0, #24]
   15814:	ldr	r1, [r0, #8]
   15818:	mov	r0, r5
   1581c:	mov	r8, r3
   15820:	mov	sl, r2
   15824:	blx	r4
   15828:	ldr	r3, [r6, #8]
   1582c:	cmp	r0, r3
   15830:	bcs	15920 <__assert_fail@plt+0x40f4>
   15834:	ldr	r9, [r6]
   15838:	mov	r7, r0
   1583c:	add	r4, r9, r0, lsl #3
   15840:	str	r4, [sl]
   15844:	ldr	r3, [r9, r0, lsl #3]
   15848:	cmp	r3, #0
   1584c:	beq	158e0 <__assert_fail@plt+0x40b4>
   15850:	cmp	r5, r3
   15854:	beq	15874 <__assert_fail@plt+0x4048>
   15858:	mov	r1, r3
   1585c:	mov	r0, r5
   15860:	ldr	r3, [r6, #28]
   15864:	blx	r3
   15868:	cmp	r0, #0
   1586c:	beq	158d4 <__assert_fail@plt+0x40a8>
   15870:	ldr	r3, [r9, r7, lsl #3]
   15874:	cmp	r8, #0
   15878:	beq	158a4 <__assert_fail@plt+0x4078>
   1587c:	ldr	r2, [r4, #4]
   15880:	cmp	r2, #0
   15884:	movne	ip, #0
   15888:	ldmne	r2, {r0, r1}
   1588c:	streq	r2, [r9, r7, lsl #3]
   15890:	stmne	r4, {r0, r1}
   15894:	strne	ip, [r2]
   15898:	ldrne	r1, [r6, #36]	; 0x24
   1589c:	strne	r1, [r2, #4]
   158a0:	strne	r2, [r6, #36]	; 0x24
   158a4:	mov	r0, r3
   158a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158ac:	ldr	r3, [r2]
   158b0:	cmp	r5, r3
   158b4:	beq	158f4 <__assert_fail@plt+0x40c8>
   158b8:	mov	r1, r3
   158bc:	mov	r0, r5
   158c0:	ldr	r3, [r6, #28]
   158c4:	blx	r3
   158c8:	cmp	r0, #0
   158cc:	bne	158ec <__assert_fail@plt+0x40c0>
   158d0:	ldr	r4, [r4, #4]
   158d4:	ldr	r2, [r4, #4]
   158d8:	cmp	r2, #0
   158dc:	bne	158ac <__assert_fail@plt+0x4080>
   158e0:	mov	r3, #0
   158e4:	mov	r0, r3
   158e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158ec:	ldr	r2, [r4, #4]
   158f0:	ldr	r3, [r2]
   158f4:	cmp	r8, #0
   158f8:	beq	158a4 <__assert_fail@plt+0x4078>
   158fc:	ldr	r0, [r2, #4]
   15900:	mov	r1, #0
   15904:	str	r0, [r4, #4]
   15908:	str	r1, [r2]
   1590c:	ldr	r1, [r6, #36]	; 0x24
   15910:	mov	r0, r3
   15914:	str	r1, [r2, #4]
   15918:	str	r2, [r6, #36]	; 0x24
   1591c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15920:	bl	117d8 <abort@plt>
   15924:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15928:	ldr	r6, [r1]
   1592c:	ldr	r3, [r1, #4]
   15930:	cmp	r6, r3
   15934:	bcs	15a04 <__assert_fail@plt+0x41d8>
   15938:	mov	r9, r2
   1593c:	mov	r5, r0
   15940:	mov	r8, r1
   15944:	add	r6, r6, #8
   15948:	mov	sl, #0
   1594c:	ldr	fp, [r6, #-8]
   15950:	mov	r7, r6
   15954:	cmp	fp, #0
   15958:	beq	159f8 <__assert_fail@plt+0x41cc>
   1595c:	ldr	r4, [r6, #-4]
   15960:	cmp	r4, #0
   15964:	beq	159e8 <__assert_fail@plt+0x41bc>
   15968:	ldr	r1, [r5, #8]
   1596c:	b	15988 <__assert_fail@plt+0x415c>
   15970:	ldr	r3, [ip, #4]
   15974:	cmp	r2, #0
   15978:	str	r3, [r4, #4]
   1597c:	str	r4, [ip, #4]
   15980:	beq	159e4 <__assert_fail@plt+0x41b8>
   15984:	mov	r4, r2
   15988:	ldr	fp, [r4]
   1598c:	ldr	r3, [r5, #24]
   15990:	mov	r0, fp
   15994:	blx	r3
   15998:	ldr	r1, [r5, #8]
   1599c:	cmp	r0, r1
   159a0:	bcs	15aa4 <__assert_fail@plt+0x4278>
   159a4:	ldr	r3, [r5]
   159a8:	ldr	r2, [r4, #4]
   159ac:	add	ip, r3, r0, lsl #3
   159b0:	ldr	lr, [r3, r0, lsl #3]
   159b4:	cmp	lr, #0
   159b8:	bne	15970 <__assert_fail@plt+0x4144>
   159bc:	ldr	ip, [r5, #12]
   159c0:	str	fp, [r3, r0, lsl #3]
   159c4:	add	r3, ip, #1
   159c8:	str	r3, [r5, #12]
   159cc:	str	lr, [r4]
   159d0:	ldr	r3, [r5, #36]	; 0x24
   159d4:	cmp	r2, #0
   159d8:	str	r3, [r4, #4]
   159dc:	str	r4, [r5, #36]	; 0x24
   159e0:	bne	15984 <__assert_fail@plt+0x4158>
   159e4:	ldr	fp, [r6, #-8]
   159e8:	cmp	r9, #0
   159ec:	str	sl, [r6, #-4]
   159f0:	beq	15a0c <__assert_fail@plt+0x41e0>
   159f4:	ldr	r3, [r8, #4]
   159f8:	cmp	r3, r7
   159fc:	add	r6, r6, #8
   15a00:	bhi	1594c <__assert_fail@plt+0x4120>
   15a04:	mov	r0, #1
   15a08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a0c:	ldr	r3, [r5, #24]
   15a10:	ldr	r1, [r5, #8]
   15a14:	mov	r0, fp
   15a18:	blx	r3
   15a1c:	ldr	r3, [r5, #8]
   15a20:	cmp	r0, r3
   15a24:	bcs	15aa4 <__assert_fail@plt+0x4278>
   15a28:	ldr	r3, [r5]
   15a2c:	add	r4, r3, r0, lsl #3
   15a30:	ldr	r2, [r3, r0, lsl #3]
   15a34:	cmp	r2, #0
   15a38:	beq	15a78 <__assert_fail@plt+0x424c>
   15a3c:	ldr	r0, [r5, #36]	; 0x24
   15a40:	cmp	r0, #0
   15a44:	beq	15a8c <__assert_fail@plt+0x4260>
   15a48:	ldr	r3, [r0, #4]
   15a4c:	str	r3, [r5, #36]	; 0x24
   15a50:	ldr	r3, [r4, #4]
   15a54:	str	fp, [r0]
   15a58:	str	r3, [r0, #4]
   15a5c:	str	r0, [r4, #4]
   15a60:	ldr	r2, [r8, #12]
   15a64:	str	sl, [r6, #-8]
   15a68:	sub	r2, r2, #1
   15a6c:	ldr	r3, [r8, #4]
   15a70:	str	r2, [r8, #12]
   15a74:	b	159f8 <__assert_fail@plt+0x41cc>
   15a78:	ldr	r2, [r5, #12]
   15a7c:	str	fp, [r3, r0, lsl #3]
   15a80:	add	r3, r2, #1
   15a84:	str	r3, [r5, #12]
   15a88:	b	15a60 <__assert_fail@plt+0x4234>
   15a8c:	mov	r0, #8
   15a90:	bl	1cd5c <lchmod@@Base+0x5b90>
   15a94:	cmp	r0, #0
   15a98:	bne	15a50 <__assert_fail@plt+0x4224>
   15a9c:	mov	r0, r9
   15aa0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15aa4:	bl	117d8 <abort@plt>
   15aa8:	ldr	r0, [r0, #8]
   15aac:	bx	lr
   15ab0:	ldr	r0, [r0, #12]
   15ab4:	bx	lr
   15ab8:	ldr	r0, [r0, #16]
   15abc:	bx	lr
   15ac0:	ldm	r0, {r1, ip}
   15ac4:	mov	r0, #0
   15ac8:	cmp	r1, ip
   15acc:	bcs	15b14 <__assert_fail@plt+0x42e8>
   15ad0:	ldr	r3, [r1]
   15ad4:	cmp	r3, #0
   15ad8:	beq	15b04 <__assert_fail@plt+0x42d8>
   15adc:	ldr	r3, [r1, #4]
   15ae0:	mov	r2, #1
   15ae4:	cmp	r3, #0
   15ae8:	beq	15afc <__assert_fail@plt+0x42d0>
   15aec:	ldr	r3, [r3, #4]
   15af0:	add	r2, r2, #1
   15af4:	cmp	r3, #0
   15af8:	bne	15aec <__assert_fail@plt+0x42c0>
   15afc:	cmp	r0, r2
   15b00:	movcc	r0, r2
   15b04:	add	r1, r1, #8
   15b08:	cmp	r1, ip
   15b0c:	bcc	15ad0 <__assert_fail@plt+0x42a4>
   15b10:	bx	lr
   15b14:	bx	lr
   15b18:	push	{lr}		; (str lr, [sp, #-4]!)
   15b1c:	mov	r2, #0
   15b20:	ldm	r0, {r1, lr}
   15b24:	mov	ip, r2
   15b28:	cmp	r1, lr
   15b2c:	bcs	15b6c <__assert_fail@plt+0x4340>
   15b30:	ldr	r3, [r1]
   15b34:	cmp	r3, #0
   15b38:	beq	15b60 <__assert_fail@plt+0x4334>
   15b3c:	ldr	r3, [r1, #4]
   15b40:	add	ip, ip, #1
   15b44:	cmp	r3, #0
   15b48:	add	r2, r2, #1
   15b4c:	beq	15b60 <__assert_fail@plt+0x4334>
   15b50:	ldr	r3, [r3, #4]
   15b54:	add	r2, r2, #1
   15b58:	cmp	r3, #0
   15b5c:	bne	15b50 <__assert_fail@plt+0x4324>
   15b60:	add	r1, r1, #8
   15b64:	cmp	r1, lr
   15b68:	bcc	15b30 <__assert_fail@plt+0x4304>
   15b6c:	ldr	r3, [r0, #12]
   15b70:	cmp	r3, ip
   15b74:	ldreq	r0, [r0, #16]
   15b78:	subeq	r0, r0, r2
   15b7c:	clzeq	r0, r0
   15b80:	lsreq	r0, r0, #5
   15b84:	movne	r0, #0
   15b88:	pop	{pc}		; (ldr pc, [sp], #4)
   15b8c:	push	{r4, r5, r6, r7, lr}
   15b90:	mov	r5, r1
   15b94:	ldm	r0, {ip, lr}
   15b98:	sub	sp, sp, #12
   15b9c:	ldr	r3, [r0, #16]
   15ba0:	cmp	ip, lr
   15ba4:	mov	r4, #0
   15ba8:	ldr	r6, [r0, #8]
   15bac:	ldr	r7, [r0, #12]
   15bb0:	bcs	15bf4 <__assert_fail@plt+0x43c8>
   15bb4:	ldr	r2, [ip]
   15bb8:	cmp	r2, #0
   15bbc:	beq	15be8 <__assert_fail@plt+0x43bc>
   15bc0:	ldr	r2, [ip, #4]
   15bc4:	mov	r1, #1
   15bc8:	cmp	r2, #0
   15bcc:	beq	15be0 <__assert_fail@plt+0x43b4>
   15bd0:	ldr	r2, [r2, #4]
   15bd4:	add	r1, r1, #1
   15bd8:	cmp	r2, #0
   15bdc:	bne	15bd0 <__assert_fail@plt+0x43a4>
   15be0:	cmp	r4, r1
   15be4:	movcc	r4, r1
   15be8:	add	ip, ip, #8
   15bec:	cmp	ip, lr
   15bf0:	bcc	15bb4 <__assert_fail@plt+0x4388>
   15bf4:	ldr	r2, [pc, #116]	; 15c70 <__assert_fail@plt+0x4444>
   15bf8:	mov	r1, #1
   15bfc:	mov	r0, r5
   15c00:	bl	116d0 <__fprintf_chk@plt>
   15c04:	mov	r3, r6
   15c08:	ldr	r2, [pc, #100]	; 15c74 <__assert_fail@plt+0x4448>
   15c0c:	mov	r1, #1
   15c10:	mov	r0, r5
   15c14:	bl	116d0 <__fprintf_chk@plt>
   15c18:	vmov	s15, r7
   15c1c:	vldr	d5, [pc, #68]	; 15c68 <__assert_fail@plt+0x443c>
   15c20:	mov	r3, r7
   15c24:	ldr	r2, [pc, #76]	; 15c78 <__assert_fail@plt+0x444c>
   15c28:	vcvt.f64.u32	d6, s15
   15c2c:	vmov	s15, r6
   15c30:	mov	r1, #1
   15c34:	mov	r0, r5
   15c38:	vcvt.f64.u32	d7, s15
   15c3c:	vmul.f64	d6, d6, d5
   15c40:	vdiv.f64	d5, d6, d7
   15c44:	vstr	d5, [sp]
   15c48:	bl	116d0 <__fprintf_chk@plt>
   15c4c:	mov	r3, r4
   15c50:	mov	r0, r5
   15c54:	ldr	r2, [pc, #32]	; 15c7c <__assert_fail@plt+0x4450>
   15c58:	mov	r1, #1
   15c5c:	add	sp, sp, #12
   15c60:	pop	{r4, r5, r6, r7, lr}
   15c64:	b	116d0 <__fprintf_chk@plt>
   15c68:	andeq	r0, r0, r0
   15c6c:	subsmi	r0, r9, r0
   15c70:	andeq	lr, r1, r4, lsl #4
   15c74:	andeq	lr, r1, ip, lsl r2
   15c78:	andeq	lr, r1, r4, lsr r2
   15c7c:	andeq	lr, r1, r8, asr r2
   15c80:	push	{r4, r5, r6, lr}
   15c84:	mov	r5, r1
   15c88:	ldr	r3, [r0, #24]
   15c8c:	mov	r6, r0
   15c90:	ldr	r1, [r0, #8]
   15c94:	mov	r0, r5
   15c98:	blx	r3
   15c9c:	ldr	r3, [r6, #8]
   15ca0:	cmp	r0, r3
   15ca4:	bcs	15d04 <__assert_fail@plt+0x44d8>
   15ca8:	ldr	r3, [r6]
   15cac:	add	r4, r3, r0, lsl #3
   15cb0:	ldr	r1, [r3, r0, lsl #3]
   15cb4:	cmp	r1, #0
   15cb8:	bne	15cc4 <__assert_fail@plt+0x4498>
   15cbc:	b	15cec <__assert_fail@plt+0x44c0>
   15cc0:	ldr	r1, [r4]
   15cc4:	cmp	r5, r1
   15cc8:	beq	15cf4 <__assert_fail@plt+0x44c8>
   15ccc:	ldr	r3, [r6, #28]
   15cd0:	mov	r0, r5
   15cd4:	blx	r3
   15cd8:	cmp	r0, #0
   15cdc:	bne	15cfc <__assert_fail@plt+0x44d0>
   15ce0:	ldr	r4, [r4, #4]
   15ce4:	cmp	r4, #0
   15ce8:	bne	15cc0 <__assert_fail@plt+0x4494>
   15cec:	mov	r0, #0
   15cf0:	pop	{r4, r5, r6, pc}
   15cf4:	mov	r0, r5
   15cf8:	pop	{r4, r5, r6, pc}
   15cfc:	ldr	r0, [r4]
   15d00:	pop	{r4, r5, r6, pc}
   15d04:	bl	117d8 <abort@plt>
   15d08:	ldr	r3, [r0, #16]
   15d0c:	cmp	r3, #0
   15d10:	beq	15d44 <__assert_fail@plt+0x4518>
   15d14:	ldr	r3, [r0]
   15d18:	ldr	r2, [r0, #4]
   15d1c:	cmp	r3, r2
   15d20:	bcc	15d34 <__assert_fail@plt+0x4508>
   15d24:	b	15d4c <__assert_fail@plt+0x4520>
   15d28:	add	r3, r3, #8
   15d2c:	cmp	r3, r2
   15d30:	bcs	15d4c <__assert_fail@plt+0x4520>
   15d34:	ldr	r0, [r3]
   15d38:	cmp	r0, #0
   15d3c:	beq	15d28 <__assert_fail@plt+0x44fc>
   15d40:	bx	lr
   15d44:	mov	r0, r3
   15d48:	bx	lr
   15d4c:	push	{r4, lr}
   15d50:	bl	117d8 <abort@plt>
   15d54:	push	{r4, r5, r6, lr}
   15d58:	mov	r4, r1
   15d5c:	ldr	r3, [r0, #24]
   15d60:	mov	r5, r0
   15d64:	ldr	r1, [r0, #8]
   15d68:	mov	r0, r4
   15d6c:	blx	r3
   15d70:	ldr	r3, [r5, #8]
   15d74:	cmp	r0, r3
   15d78:	bcs	15ddc <__assert_fail@plt+0x45b0>
   15d7c:	ldr	r3, [r5]
   15d80:	add	r0, r3, r0, lsl #3
   15d84:	mov	r3, r0
   15d88:	b	15d94 <__assert_fail@plt+0x4568>
   15d8c:	cmp	r3, #0
   15d90:	beq	15da8 <__assert_fail@plt+0x457c>
   15d94:	ldm	r3, {r2, r3}
   15d98:	cmp	r4, r2
   15d9c:	bne	15d8c <__assert_fail@plt+0x4560>
   15da0:	cmp	r3, #0
   15da4:	bne	15dd4 <__assert_fail@plt+0x45a8>
   15da8:	ldr	r2, [r5, #4]
   15dac:	mov	r3, r0
   15db0:	b	15dc0 <__assert_fail@plt+0x4594>
   15db4:	ldr	r0, [r3]
   15db8:	cmp	r0, #0
   15dbc:	popne	{r4, r5, r6, pc}
   15dc0:	add	r3, r3, #8
   15dc4:	cmp	r3, r2
   15dc8:	bcc	15db4 <__assert_fail@plt+0x4588>
   15dcc:	mov	r0, #0
   15dd0:	pop	{r4, r5, r6, pc}
   15dd4:	ldr	r0, [r3]
   15dd8:	pop	{r4, r5, r6, pc}
   15ddc:	bl	117d8 <abort@plt>
   15de0:	push	{r4, r5, r6, lr}
   15de4:	mov	r5, r0
   15de8:	ldr	r4, [r0]
   15dec:	ldr	r0, [r0, #4]
   15df0:	cmp	r4, r0
   15df4:	bcs	15e70 <__assert_fail@plt+0x4644>
   15df8:	add	r4, r4, #8
   15dfc:	mov	ip, #0
   15e00:	ldr	r3, [r4, #-8]
   15e04:	mov	r6, r4
   15e08:	cmp	r3, #0
   15e0c:	beq	15e58 <__assert_fail@plt+0x462c>
   15e10:	cmp	r2, ip
   15e14:	bls	15e64 <__assert_fail@plt+0x4638>
   15e18:	str	r3, [r1, ip, lsl #2]
   15e1c:	ldr	r3, [r4, #-4]
   15e20:	add	r0, ip, #1
   15e24:	cmp	r3, #0
   15e28:	add	ip, r1, ip, lsl #2
   15e2c:	beq	15e50 <__assert_fail@plt+0x4624>
   15e30:	cmp	r2, r0
   15e34:	beq	15e6c <__assert_fail@plt+0x4640>
   15e38:	ldr	lr, [r3]
   15e3c:	add	r0, r0, #1
   15e40:	str	lr, [ip, #4]!
   15e44:	ldr	r3, [r3, #4]
   15e48:	cmp	r3, #0
   15e4c:	bne	15e30 <__assert_fail@plt+0x4604>
   15e50:	mov	ip, r0
   15e54:	ldr	r0, [r5, #4]
   15e58:	cmp	r0, r6
   15e5c:	add	r4, r4, #8
   15e60:	bhi	15e00 <__assert_fail@plt+0x45d4>
   15e64:	mov	r0, ip
   15e68:	pop	{r4, r5, r6, pc}
   15e6c:	pop	{r4, r5, r6, pc}
   15e70:	mov	r0, #0
   15e74:	pop	{r4, r5, r6, pc}
   15e78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e7c:	ldr	r3, [r0, #4]
   15e80:	ldr	r8, [r0]
   15e84:	cmp	r8, r3
   15e88:	bcs	15eec <__assert_fail@plt+0x46c0>
   15e8c:	mov	r7, r2
   15e90:	mov	r6, r1
   15e94:	mov	r9, r0
   15e98:	mov	r5, #0
   15e9c:	ldr	r0, [r8]
   15ea0:	cmp	r0, #0
   15ea4:	beq	15ed8 <__assert_fail@plt+0x46ac>
   15ea8:	mov	r4, r8
   15eac:	b	15eb4 <__assert_fail@plt+0x4688>
   15eb0:	ldr	r0, [r4]
   15eb4:	mov	r1, r7
   15eb8:	blx	r6
   15ebc:	cmp	r0, #0
   15ec0:	beq	15ee4 <__assert_fail@plt+0x46b8>
   15ec4:	ldr	r4, [r4, #4]
   15ec8:	add	r5, r5, #1
   15ecc:	cmp	r4, #0
   15ed0:	bne	15eb0 <__assert_fail@plt+0x4684>
   15ed4:	ldr	r3, [r9, #4]
   15ed8:	add	r8, r8, #8
   15edc:	cmp	r3, r8
   15ee0:	bhi	15e9c <__assert_fail@plt+0x4670>
   15ee4:	mov	r0, r5
   15ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15eec:	mov	r5, #0
   15ef0:	b	15ee4 <__assert_fail@plt+0x46b8>
   15ef4:	push	{r4, r5, r6, lr}
   15ef8:	mov	r4, r0
   15efc:	ldrb	r0, [r0]
   15f00:	cmp	r0, #0
   15f04:	beq	15f34 <__assert_fail@plt+0x4708>
   15f08:	mov	r5, r1
   15f0c:	mov	r1, #0
   15f10:	rsb	r1, r1, r1, lsl #5
   15f14:	add	r0, r1, r0
   15f18:	mov	r1, r5
   15f1c:	bl	1d7a4 <lchmod@@Base+0x65d8>
   15f20:	ldrb	r0, [r4, #1]!
   15f24:	cmp	r0, #0
   15f28:	bne	15f10 <__assert_fail@plt+0x46e4>
   15f2c:	mov	r0, r1
   15f30:	pop	{r4, r5, r6, pc}
   15f34:	mov	r1, r0
   15f38:	b	15f2c <__assert_fail@plt+0x4700>
   15f3c:	push	{lr}		; (str lr, [sp, #-4]!)
   15f40:	mov	ip, r0
   15f44:	ldr	lr, [pc, #16]	; 15f5c <__assert_fail@plt+0x4730>
   15f48:	ldm	lr!, {r0, r1, r2, r3}
   15f4c:	ldr	lr, [lr]
   15f50:	stmia	ip!, {r0, r1, r2, r3}
   15f54:	str	lr, [ip]
   15f58:	pop	{pc}		; (ldr pc, [sp], #4)
   15f5c:	strdeq	lr, [r1], -r0
   15f60:	cmp	r2, #0
   15f64:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f68:	mov	r4, r0
   15f6c:	ldr	sl, [pc, #548]	; 16198 <__assert_fail@plt+0x496c>
   15f70:	mov	r0, #40	; 0x28
   15f74:	movne	sl, r2
   15f78:	cmp	r3, #0
   15f7c:	ldr	fp, [pc, #536]	; 1619c <__assert_fail@plt+0x4970>
   15f80:	mov	r5, r1
   15f84:	movne	fp, r3
   15f88:	bl	1cd5c <lchmod@@Base+0x5b90>
   15f8c:	subs	r8, r0, #0
   15f90:	beq	16028 <__assert_fail@plt+0x47fc>
   15f94:	cmp	r5, #0
   15f98:	ldr	r3, [pc, #512]	; 161a0 <__assert_fail@plt+0x4974>
   15f9c:	beq	16030 <__assert_fail@plt+0x4804>
   15fa0:	cmp	r5, r3
   15fa4:	str	r5, [r8, #20]
   15fa8:	beq	16034 <__assert_fail@plt+0x4808>
   15fac:	vldr	s15, [r5, #8]
   15fb0:	vldr	s14, [pc, #456]	; 16180 <__assert_fail@plt+0x4954>
   15fb4:	vcmpe.f32	s15, s14
   15fb8:	vmrs	APSR_nzcv, fpscr
   15fbc:	ble	16018 <__assert_fail@plt+0x47ec>
   15fc0:	vldr	s13, [pc, #444]	; 16184 <__assert_fail@plt+0x4958>
   15fc4:	vcmpe.f32	s15, s13
   15fc8:	vmrs	APSR_nzcv, fpscr
   15fcc:	bpl	16018 <__assert_fail@plt+0x47ec>
   15fd0:	vldr	s13, [pc, #432]	; 16188 <__assert_fail@plt+0x495c>
   15fd4:	vldr	s12, [r5, #12]
   15fd8:	vcmpe.f32	s12, s13
   15fdc:	vmrs	APSR_nzcv, fpscr
   15fe0:	ble	16018 <__assert_fail@plt+0x47ec>
   15fe4:	vldr	s13, [r5]
   15fe8:	vcmpe.f32	s13, #0.0
   15fec:	vmrs	APSR_nzcv, fpscr
   15ff0:	blt	16018 <__assert_fail@plt+0x47ec>
   15ff4:	vadd.f32	s14, s13, s14
   15ff8:	vldr	s13, [r5, #4]
   15ffc:	vcmpe.f32	s14, s13
   16000:	vmrs	APSR_nzcv, fpscr
   16004:	bpl	16018 <__assert_fail@plt+0x47ec>
   16008:	vldr	s12, [pc, #380]	; 1618c <__assert_fail@plt+0x4960>
   1600c:	vcmpe.f32	s13, s12
   16010:	vmrs	APSR_nzcv, fpscr
   16014:	bls	16164 <__assert_fail@plt+0x4938>
   16018:	str	r3, [r8, #20]
   1601c:	mov	r0, r8
   16020:	bl	1309c <__assert_fail@plt+0x1870>
   16024:	mov	r8, #0
   16028:	mov	r0, r8
   1602c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16030:	str	r3, [r8, #20]
   16034:	vldr	s15, [pc, #340]	; 16190 <__assert_fail@plt+0x4964>
   16038:	vmov	s14, r4
   1603c:	vldr	s13, [pc, #336]	; 16194 <__assert_fail@plt+0x4968>
   16040:	vcvt.f32.u32	s12, s14
   16044:	vdiv.f32	s14, s12, s15
   16048:	vcmpe.f32	s14, s13
   1604c:	vmrs	APSR_nzcv, fpscr
   16050:	bge	16150 <__assert_fail@plt+0x4924>
   16054:	vcvt.u32.f32	s15, s14
   16058:	vmov	r4, s15
   1605c:	cmp	r4, #10
   16060:	movcc	r4, #10
   16064:	orr	r7, r4, #1
   16068:	cmn	r7, #1
   1606c:	ldrne	r9, [pc, #304]	; 161a4 <__assert_fail@plt+0x4978>
   16070:	beq	160e8 <__assert_fail@plt+0x48bc>
   16074:	cmp	r7, #9
   16078:	bls	1615c <__assert_fail@plt+0x4930>
   1607c:	umull	r2, r3, r9, r7
   16080:	lsr	r3, r3, #1
   16084:	add	r3, r3, r3, lsl #1
   16088:	cmp	r7, r3
   1608c:	beq	160dc <__assert_fail@plt+0x48b0>
   16090:	mov	r6, #16
   16094:	mov	r5, #9
   16098:	mov	r4, #3
   1609c:	b	160b0 <__assert_fail@plt+0x4884>
   160a0:	bl	1d7a4 <lchmod@@Base+0x65d8>
   160a4:	add	r6, r6, #8
   160a8:	cmp	r1, #0
   160ac:	beq	160dc <__assert_fail@plt+0x48b0>
   160b0:	add	r5, r5, r6
   160b4:	add	r4, r4, #2
   160b8:	cmp	r5, r7
   160bc:	mov	r0, r7
   160c0:	mov	r1, r4
   160c4:	bcc	160a0 <__assert_fail@plt+0x4874>
   160c8:	mov	r1, r4
   160cc:	mov	r0, r7
   160d0:	bl	1d7a4 <lchmod@@Base+0x65d8>
   160d4:	cmp	r1, #0
   160d8:	bne	160e8 <__assert_fail@plt+0x48bc>
   160dc:	add	r7, r7, #2
   160e0:	cmn	r7, #1
   160e4:	bne	16074 <__assert_fail@plt+0x4848>
   160e8:	lsrs	r3, r7, #30
   160ec:	movne	r4, #1
   160f0:	moveq	r4, #0
   160f4:	tst	r7, #536870912	; 0x20000000
   160f8:	bne	16150 <__assert_fail@plt+0x4924>
   160fc:	cmp	r4, #0
   16100:	bne	16150 <__assert_fail@plt+0x4924>
   16104:	str	r7, [r8, #8]
   16108:	mov	r0, r7
   1610c:	mov	r1, #8
   16110:	bl	1cd14 <lchmod@@Base+0x5b48>
   16114:	cmp	r0, #0
   16118:	str	r0, [r8]
   1611c:	beq	1601c <__assert_fail@plt+0x47f0>
   16120:	ldr	r3, [r8, #8]
   16124:	str	r4, [r8, #12]
   16128:	str	r4, [r8, #16]
   1612c:	add	r0, r0, r3, lsl #3
   16130:	ldr	r3, [sp, #40]	; 0x28
   16134:	str	r0, [r8, #4]
   16138:	str	sl, [r8, #24]
   1613c:	str	fp, [r8, #28]
   16140:	str	r3, [r8, #32]
   16144:	str	r4, [r8, #36]	; 0x24
   16148:	mov	r0, r8
   1614c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16150:	mov	r3, #0
   16154:	str	r3, [r8, #8]
   16158:	b	1601c <__assert_fail@plt+0x47f0>
   1615c:	mov	r4, #3
   16160:	b	160c8 <__assert_fail@plt+0x489c>
   16164:	vcmpe.f32	s15, s14
   16168:	vmrs	APSR_nzcv, fpscr
   1616c:	ble	16018 <__assert_fail@plt+0x47ec>
   16170:	ldrb	r3, [r5, #16]
   16174:	cmp	r3, #0
   16178:	bne	1605c <__assert_fail@plt+0x4830>
   1617c:	b	16038 <__assert_fail@plt+0x480c>
   16180:	stclcc	12, cr12, [ip, #820]	; 0x334
   16184:	svccc	0x00666666
   16188:	svccc	0x008ccccd
   1618c:	svccc	0x00800000
   16190:	svccc	0x004ccccd
   16194:	svcmi	0x00800000
   16198:	andeq	r5, r1, r0, ror #15
   1619c:	strdeq	r5, [r1], -r4
   161a0:	strdeq	lr, [r1], -r0
   161a4:	bge	feac0c58 <optarg@@GLIBC_2.4+0xfea91a78>
   161a8:	push	{r4, r5, r6, r7, r8, lr}
   161ac:	mov	r5, r0
   161b0:	ldr	r7, [r0]
   161b4:	ldr	r3, [r0, #4]
   161b8:	cmp	r7, r3
   161bc:	addcc	r7, r7, #8
   161c0:	movcc	r6, #0
   161c4:	bcs	16240 <__assert_fail@plt+0x4a14>
   161c8:	ldr	r2, [r7, #-8]
   161cc:	mov	r8, r7
   161d0:	cmp	r2, #0
   161d4:	beq	16234 <__assert_fail@plt+0x4a08>
   161d8:	ldr	r4, [r7, #-4]
   161dc:	ldr	r2, [r5, #32]
   161e0:	cmp	r4, #0
   161e4:	beq	16218 <__assert_fail@plt+0x49ec>
   161e8:	cmp	r2, #0
   161ec:	beq	161fc <__assert_fail@plt+0x49d0>
   161f0:	ldr	r0, [r4]
   161f4:	blx	r2
   161f8:	ldr	r2, [r5, #32]
   161fc:	ldr	r3, [r4, #4]
   16200:	ldr	r1, [r5, #36]	; 0x24
   16204:	str	r6, [r4]
   16208:	str	r1, [r4, #4]
   1620c:	str	r4, [r5, #36]	; 0x24
   16210:	subs	r4, r3, #0
   16214:	bne	161e8 <__assert_fail@plt+0x49bc>
   16218:	cmp	r2, #0
   1621c:	beq	16228 <__assert_fail@plt+0x49fc>
   16220:	ldr	r0, [r7, #-8]
   16224:	blx	r2
   16228:	str	r6, [r7, #-8]
   1622c:	str	r6, [r7, #-4]
   16230:	ldr	r3, [r5, #4]
   16234:	cmp	r3, r8
   16238:	add	r7, r7, #8
   1623c:	bhi	161c8 <__assert_fail@plt+0x499c>
   16240:	mov	r3, #0
   16244:	str	r3, [r5, #12]
   16248:	str	r3, [r5, #16]
   1624c:	pop	{r4, r5, r6, r7, r8, pc}
   16250:	ldr	r3, [r0, #32]
   16254:	push	{r4, r5, r6, lr}
   16258:	cmp	r3, #0
   1625c:	mov	r5, r0
   16260:	beq	162c0 <__assert_fail@plt+0x4a94>
   16264:	ldr	r3, [r0, #16]
   16268:	cmp	r3, #0
   1626c:	beq	162c0 <__assert_fail@plt+0x4a94>
   16270:	ldr	r6, [r0]
   16274:	ldr	r3, [r0, #4]
   16278:	cmp	r6, r3
   1627c:	bcs	162fc <__assert_fail@plt+0x4ad0>
   16280:	ldr	r0, [r6]
   16284:	cmp	r0, #0
   16288:	beq	162b0 <__assert_fail@plt+0x4a84>
   1628c:	mov	r4, r6
   16290:	b	16298 <__assert_fail@plt+0x4a6c>
   16294:	ldr	r0, [r4]
   16298:	ldr	r3, [r5, #32]
   1629c:	blx	r3
   162a0:	ldr	r4, [r4, #4]
   162a4:	cmp	r4, #0
   162a8:	bne	16294 <__assert_fail@plt+0x4a68>
   162ac:	ldr	r3, [r5, #4]
   162b0:	add	r6, r6, #8
   162b4:	cmp	r3, r6
   162b8:	bhi	16280 <__assert_fail@plt+0x4a54>
   162bc:	b	162c4 <__assert_fail@plt+0x4a98>
   162c0:	ldr	r3, [r5, #4]
   162c4:	ldr	r6, [r5]
   162c8:	cmp	r6, r3
   162cc:	bcs	162fc <__assert_fail@plt+0x4ad0>
   162d0:	ldr	r0, [r6, #4]
   162d4:	cmp	r0, #0
   162d8:	beq	162f0 <__assert_fail@plt+0x4ac4>
   162dc:	ldr	r4, [r0, #4]
   162e0:	bl	1309c <__assert_fail@plt+0x1870>
   162e4:	subs	r0, r4, #0
   162e8:	bne	162dc <__assert_fail@plt+0x4ab0>
   162ec:	ldr	r3, [r5, #4]
   162f0:	add	r6, r6, #8
   162f4:	cmp	r3, r6
   162f8:	bhi	162d0 <__assert_fail@plt+0x4aa4>
   162fc:	ldr	r0, [r5, #36]	; 0x24
   16300:	cmp	r0, #0
   16304:	beq	16318 <__assert_fail@plt+0x4aec>
   16308:	ldr	r4, [r0, #4]
   1630c:	bl	1309c <__assert_fail@plt+0x1870>
   16310:	subs	r0, r4, #0
   16314:	bne	16308 <__assert_fail@plt+0x4adc>
   16318:	ldr	r0, [r5]
   1631c:	bl	1309c <__assert_fail@plt+0x1870>
   16320:	mov	r0, r5
   16324:	pop	{r4, r5, r6, lr}
   16328:	b	1309c <__assert_fail@plt+0x1870>
   1632c:	ldr	r3, [r0, #20]
   16330:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16334:	mov	r8, r0
   16338:	ldrb	r2, [r3, #16]
   1633c:	sub	sp, sp, #40	; 0x28
   16340:	cmp	r2, #0
   16344:	bne	16370 <__assert_fail@plt+0x4b44>
   16348:	vmov	s15, r1
   1634c:	vldr	s13, [r3, #8]
   16350:	vldr	s14, [pc, #648]	; 165e0 <__assert_fail@plt+0x4db4>
   16354:	vcvt.f32.u32	s12, s15
   16358:	vdiv.f32	s15, s12, s13
   1635c:	vcmpe.f32	s15, s14
   16360:	vmrs	APSR_nzcv, fpscr
   16364:	bge	16598 <__assert_fail@plt+0x4d6c>
   16368:	vcvt.u32.f32	s15, s15
   1636c:	vmov	r1, s15
   16370:	cmp	r1, #10
   16374:	movcc	r1, #10
   16378:	orr	r7, r1, #1
   1637c:	cmn	r7, #1
   16380:	ldrne	r9, [pc, #604]	; 165e4 <__assert_fail@plt+0x4db8>
   16384:	beq	163fc <__assert_fail@plt+0x4bd0>
   16388:	cmp	r7, #9
   1638c:	bls	165a8 <__assert_fail@plt+0x4d7c>
   16390:	umull	r2, r3, r9, r7
   16394:	lsr	r3, r3, #1
   16398:	add	r3, r3, r3, lsl #1
   1639c:	cmp	r7, r3
   163a0:	beq	163f0 <__assert_fail@plt+0x4bc4>
   163a4:	mov	r6, #16
   163a8:	mov	r5, #9
   163ac:	mov	r4, #3
   163b0:	b	163cc <__assert_fail@plt+0x4ba0>
   163b4:	mov	r1, r4
   163b8:	mov	r0, r7
   163bc:	bl	1d7a4 <lchmod@@Base+0x65d8>
   163c0:	add	r6, r6, #8
   163c4:	cmp	r1, #0
   163c8:	beq	163f0 <__assert_fail@plt+0x4bc4>
   163cc:	add	r5, r5, r6
   163d0:	cmp	r5, r7
   163d4:	add	r4, r4, #2
   163d8:	bcc	163b4 <__assert_fail@plt+0x4b88>
   163dc:	mov	r1, r4
   163e0:	mov	r0, r7
   163e4:	bl	1d7a4 <lchmod@@Base+0x65d8>
   163e8:	cmp	r1, #0
   163ec:	bne	163fc <__assert_fail@plt+0x4bd0>
   163f0:	add	r7, r7, #2
   163f4:	cmn	r7, #1
   163f8:	bne	16388 <__assert_fail@plt+0x4b5c>
   163fc:	lsrs	r3, r7, #30
   16400:	movne	r4, #1
   16404:	moveq	r4, #0
   16408:	tst	r7, #536870912	; 0x20000000
   1640c:	bne	16598 <__assert_fail@plt+0x4d6c>
   16410:	cmp	r4, #0
   16414:	bne	16598 <__assert_fail@plt+0x4d6c>
   16418:	ldr	r3, [r8, #8]
   1641c:	cmp	r3, r7
   16420:	beq	16588 <__assert_fail@plt+0x4d5c>
   16424:	mov	r1, #8
   16428:	mov	r0, r7
   1642c:	bl	1cd14 <lchmod@@Base+0x5b48>
   16430:	cmp	r0, #0
   16434:	str	r0, [sp]
   16438:	beq	16598 <__assert_fail@plt+0x4d6c>
   1643c:	ldr	r1, [r8, #24]
   16440:	ldr	r5, [r8, #20]
   16444:	ldr	lr, [r8, #28]
   16448:	ldr	ip, [r8, #32]
   1644c:	add	r0, r0, r7, lsl #3
   16450:	ldr	r3, [r8, #36]	; 0x24
   16454:	str	r0, [sp, #4]
   16458:	str	r1, [sp, #24]
   1645c:	mov	r2, r4
   16460:	mov	r0, sp
   16464:	mov	r1, r8
   16468:	str	r7, [sp, #8]
   1646c:	str	r4, [sp, #12]
   16470:	str	r4, [sp, #16]
   16474:	str	r5, [sp, #20]
   16478:	str	lr, [sp, #28]
   1647c:	str	ip, [sp, #32]
   16480:	str	r3, [sp, #36]	; 0x24
   16484:	bl	15924 <__assert_fail@plt+0x40f8>
   16488:	subs	r9, r0, #0
   1648c:	bne	165b0 <__assert_fail@plt+0x4d84>
   16490:	ldr	r5, [sp]
   16494:	ldr	r2, [sp, #4]
   16498:	ldr	r3, [sp, #36]	; 0x24
   1649c:	cmp	r5, r2
   164a0:	str	r3, [r8, #36]	; 0x24
   164a4:	addcc	r5, r5, #8
   164a8:	movcc	r7, r9
   164ac:	bcs	1655c <__assert_fail@plt+0x4d30>
   164b0:	ldr	r3, [r5, #-8]
   164b4:	mov	r6, r5
   164b8:	cmp	r3, #0
   164bc:	beq	16550 <__assert_fail@plt+0x4d24>
   164c0:	ldr	r4, [r5, #-4]
   164c4:	cmp	r4, #0
   164c8:	beq	1654c <__assert_fail@plt+0x4d20>
   164cc:	ldr	r1, [r8, #8]
   164d0:	b	164ec <__assert_fail@plt+0x4cc0>
   164d4:	ldr	r3, [ip, #4]
   164d8:	cmp	r2, #0
   164dc:	str	r3, [r4, #4]
   164e0:	str	r4, [ip, #4]
   164e4:	beq	16548 <__assert_fail@plt+0x4d1c>
   164e8:	mov	r4, r2
   164ec:	ldr	sl, [r4]
   164f0:	ldr	r3, [r8, #24]
   164f4:	mov	r0, sl
   164f8:	blx	r3
   164fc:	ldr	r1, [r8, #8]
   16500:	cmp	r0, r1
   16504:	bcs	165dc <__assert_fail@plt+0x4db0>
   16508:	ldr	r3, [r8]
   1650c:	ldr	r2, [r4, #4]
   16510:	add	ip, r3, r0, lsl #3
   16514:	ldr	lr, [r3, r0, lsl #3]
   16518:	cmp	lr, #0
   1651c:	bne	164d4 <__assert_fail@plt+0x4ca8>
   16520:	ldr	ip, [r8, #12]
   16524:	str	sl, [r3, r0, lsl #3]
   16528:	add	r3, ip, #1
   1652c:	str	r3, [r8, #12]
   16530:	str	lr, [r4]
   16534:	ldr	r3, [r8, #36]	; 0x24
   16538:	cmp	r2, #0
   1653c:	str	r3, [r4, #4]
   16540:	str	r4, [r8, #36]	; 0x24
   16544:	bne	164e8 <__assert_fail@plt+0x4cbc>
   16548:	ldr	r2, [sp, #4]
   1654c:	str	r7, [r5, #-4]
   16550:	cmp	r6, r2
   16554:	add	r5, r5, #8
   16558:	bcc	164b0 <__assert_fail@plt+0x4c84>
   1655c:	mov	r1, sp
   16560:	mov	r0, r8
   16564:	mov	r2, #0
   16568:	bl	15924 <__assert_fail@plt+0x40f8>
   1656c:	cmp	r0, #0
   16570:	beq	165dc <__assert_fail@plt+0x4db0>
   16574:	ldr	r0, [sp]
   16578:	bl	1309c <__assert_fail@plt+0x1870>
   1657c:	mov	r0, r9
   16580:	add	sp, sp, #40	; 0x28
   16584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16588:	mov	r9, #1
   1658c:	mov	r0, r9
   16590:	add	sp, sp, #40	; 0x28
   16594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16598:	mov	r9, #0
   1659c:	mov	r0, r9
   165a0:	add	sp, sp, #40	; 0x28
   165a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   165a8:	mov	r4, #3
   165ac:	b	163dc <__assert_fail@plt+0x4bb0>
   165b0:	ldr	r0, [r8]
   165b4:	bl	1309c <__assert_fail@plt+0x1870>
   165b8:	ldmib	sp, {r0, r1, r2}
   165bc:	ldr	ip, [sp]
   165c0:	ldr	r3, [sp, #36]	; 0x24
   165c4:	stmib	r8, {r0, r1, r2}
   165c8:	mov	r0, r9
   165cc:	str	ip, [r8]
   165d0:	str	r3, [r8, #36]	; 0x24
   165d4:	add	sp, sp, #40	; 0x28
   165d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   165dc:	bl	117d8 <abort@plt>
   165e0:	svcmi	0x00800000
   165e4:	bge	feac1098 <optarg@@GLIBC_2.4+0xfea91eb8>
   165e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   165ec:	subs	r5, r1, #0
   165f0:	sub	sp, sp, #12
   165f4:	beq	16810 <__assert_fail@plt+0x4fe4>
   165f8:	ldr	r3, [r0, #24]
   165fc:	mov	r6, r0
   16600:	ldr	r1, [r0, #8]
   16604:	mov	r0, r5
   16608:	mov	r7, r2
   1660c:	blx	r3
   16610:	ldr	r3, [r6, #8]
   16614:	cmp	r0, r3
   16618:	mov	r8, r0
   1661c:	bcs	16810 <__assert_fail@plt+0x4fe4>
   16620:	ldr	r9, [r6]
   16624:	add	r4, r9, r0, lsl #3
   16628:	ldr	r1, [r9, r0, lsl #3]
   1662c:	str	r4, [sp, #4]
   16630:	cmp	r1, #0
   16634:	beq	16814 <__assert_fail@plt+0x4fe8>
   16638:	cmp	r5, r1
   1663c:	beq	16694 <__assert_fail@plt+0x4e68>
   16640:	ldr	r3, [r6, #28]
   16644:	mov	r0, r5
   16648:	blx	r3
   1664c:	cmp	r0, #0
   16650:	bne	166a8 <__assert_fail@plt+0x4e7c>
   16654:	ldr	r3, [r4, #4]
   16658:	cmp	r3, #0
   1665c:	bne	16688 <__assert_fail@plt+0x4e5c>
   16660:	b	166b4 <__assert_fail@plt+0x4e88>
   16664:	ldr	r3, [r6, #28]
   16668:	mov	r0, r5
   1666c:	blx	r3
   16670:	cmp	r0, #0
   16674:	bne	16728 <__assert_fail@plt+0x4efc>
   16678:	ldr	r4, [r4, #4]
   1667c:	ldr	r3, [r4, #4]
   16680:	cmp	r3, #0
   16684:	beq	166b4 <__assert_fail@plt+0x4e88>
   16688:	ldr	r1, [r3]
   1668c:	cmp	r5, r1
   16690:	bne	16664 <__assert_fail@plt+0x4e38>
   16694:	mov	r0, #0
   16698:	cmp	r7, #0
   1669c:	strne	r1, [r7]
   166a0:	add	sp, sp, #12
   166a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   166a8:	ldr	r1, [r9, r8, lsl #3]
   166ac:	cmp	r1, #0
   166b0:	bne	16694 <__assert_fail@plt+0x4e68>
   166b4:	vldr	s15, [r6, #8]
   166b8:	ldr	r3, [r6, #20]
   166bc:	vldr	s14, [r6, #12]
   166c0:	vcvt.f32.u32	s15, s15
   166c4:	vldr	s13, [r3, #8]
   166c8:	vcvt.f32.u32	s14, s14
   166cc:	vmul.f32	s12, s13, s15
   166d0:	vcmpe.f32	s14, s12
   166d4:	vmrs	APSR_nzcv, fpscr
   166d8:	bgt	16734 <__assert_fail@plt+0x4f08>
   166dc:	ldr	r4, [sp, #4]
   166e0:	ldr	r3, [r4]
   166e4:	cmp	r3, #0
   166e8:	beq	16878 <__assert_fail@plt+0x504c>
   166ec:	ldr	r3, [r6, #36]	; 0x24
   166f0:	cmp	r3, #0
   166f4:	beq	16860 <__assert_fail@plt+0x5034>
   166f8:	ldr	r2, [r3, #4]
   166fc:	str	r2, [r6, #36]	; 0x24
   16700:	ldr	r2, [r6, #16]
   16704:	ldr	r1, [r4, #4]
   16708:	add	r2, r2, #1
   1670c:	str	r5, [r3]
   16710:	str	r1, [r3, #4]
   16714:	mov	r0, #1
   16718:	str	r3, [r4, #4]
   1671c:	str	r2, [r6, #16]
   16720:	add	sp, sp, #12
   16724:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16728:	ldr	r3, [r4, #4]
   1672c:	ldr	r1, [r3]
   16730:	b	166ac <__assert_fail@plt+0x4e80>
   16734:	ldr	r2, [pc, #392]	; 168c4 <__assert_fail@plt+0x5098>
   16738:	cmp	r3, r2
   1673c:	beq	167c0 <__assert_fail@plt+0x4f94>
   16740:	vldr	s12, [pc, #352]	; 168a8 <__assert_fail@plt+0x507c>
   16744:	vcmpe.f32	s13, s12
   16748:	vmrs	APSR_nzcv, fpscr
   1674c:	ble	167a8 <__assert_fail@plt+0x4f7c>
   16750:	vldr	s11, [pc, #340]	; 168ac <__assert_fail@plt+0x5080>
   16754:	vcmpe.f32	s13, s11
   16758:	vmrs	APSR_nzcv, fpscr
   1675c:	bpl	167a8 <__assert_fail@plt+0x4f7c>
   16760:	vldr	s11, [r3, #12]
   16764:	vldr	s10, [pc, #324]	; 168b0 <__assert_fail@plt+0x5084>
   16768:	vcmpe.f32	s11, s10
   1676c:	vmrs	APSR_nzcv, fpscr
   16770:	ble	167a8 <__assert_fail@plt+0x4f7c>
   16774:	vldr	s10, [r3]
   16778:	vcmpe.f32	s10, #0.0
   1677c:	vmrs	APSR_nzcv, fpscr
   16780:	blt	167a8 <__assert_fail@plt+0x4f7c>
   16784:	vadd.f32	s12, s10, s12
   16788:	vldr	s10, [r3, #4]
   1678c:	vcmpe.f32	s12, s10
   16790:	vmrs	APSR_nzcv, fpscr
   16794:	bpl	167a8 <__assert_fail@plt+0x4f7c>
   16798:	vldr	s9, [pc, #276]	; 168b4 <__assert_fail@plt+0x5088>
   1679c:	vcmpe.f32	s10, s9
   167a0:	vmrs	APSR_nzcv, fpscr
   167a4:	bls	16888 <__assert_fail@plt+0x505c>
   167a8:	vldr	s13, [pc, #264]	; 168b8 <__assert_fail@plt+0x508c>
   167ac:	str	r2, [r6, #20]
   167b0:	vmul.f32	s12, s15, s13
   167b4:	vcmpe.f32	s12, s14
   167b8:	vmrs	APSR_nzcv, fpscr
   167bc:	bpl	166dc <__assert_fail@plt+0x4eb0>
   167c0:	vldr	s11, [pc, #244]	; 168bc <__assert_fail@plt+0x5090>
   167c4:	vmul.f32	s15, s15, s11
   167c8:	vmul.f32	s15, s15, s13
   167cc:	vldr	s14, [pc, #236]	; 168c0 <__assert_fail@plt+0x5094>
   167d0:	vcmpe.f32	s15, s14
   167d4:	vmrs	APSR_nzcv, fpscr
   167d8:	bge	16880 <__assert_fail@plt+0x5054>
   167dc:	vcvt.u32.f32	s15, s15
   167e0:	mov	r0, r6
   167e4:	vmov	r1, s15
   167e8:	bl	1632c <__assert_fail@plt+0x4b00>
   167ec:	cmp	r0, #0
   167f0:	beq	16880 <__assert_fail@plt+0x5054>
   167f4:	mov	r3, #0
   167f8:	add	r2, sp, #4
   167fc:	mov	r1, r5
   16800:	mov	r0, r6
   16804:	bl	15804 <__assert_fail@plt+0x3fd8>
   16808:	cmp	r0, #0
   1680c:	beq	166dc <__assert_fail@plt+0x4eb0>
   16810:	bl	117d8 <abort@plt>
   16814:	vmov	s15, r3
   16818:	ldr	r2, [r6, #12]
   1681c:	ldr	r3, [r6, #20]
   16820:	vcvt.f32.u32	s15, s15
   16824:	vldr	s13, [r3, #8]
   16828:	vmov	s14, r2
   1682c:	vcvt.f32.u32	s14, s14
   16830:	vmul.f32	s12, s13, s15
   16834:	vcmpe.f32	s14, s12
   16838:	vmrs	APSR_nzcv, fpscr
   1683c:	bgt	16734 <__assert_fail@plt+0x4f08>
   16840:	ldr	r3, [r6, #16]
   16844:	add	r2, r2, #1
   16848:	add	r3, r3, #1
   1684c:	str	r5, [r4]
   16850:	mov	r0, #1
   16854:	str	r2, [r6, #12]
   16858:	str	r3, [r6, #16]
   1685c:	b	166a0 <__assert_fail@plt+0x4e74>
   16860:	mov	r0, #8
   16864:	bl	1cd5c <lchmod@@Base+0x5b90>
   16868:	subs	r3, r0, #0
   1686c:	beq	16880 <__assert_fail@plt+0x5054>
   16870:	ldr	r4, [sp, #4]
   16874:	b	16700 <__assert_fail@plt+0x4ed4>
   16878:	ldr	r2, [r6, #12]
   1687c:	b	16840 <__assert_fail@plt+0x5014>
   16880:	mvn	r0, #0
   16884:	b	166a0 <__assert_fail@plt+0x4e74>
   16888:	vcmpe.f32	s12, s13
   1688c:	vmrs	APSR_nzcv, fpscr
   16890:	bpl	167a8 <__assert_fail@plt+0x4f7c>
   16894:	ldrb	r3, [r3, #16]
   16898:	cmp	r3, #0
   1689c:	vmulne.f32	s15, s11, s15
   168a0:	bne	167cc <__assert_fail@plt+0x4fa0>
   168a4:	b	167c4 <__assert_fail@plt+0x4f98>
   168a8:	stclcc	12, cr12, [ip, #820]	; 0x334
   168ac:	svccc	0x00666666
   168b0:	svccc	0x008ccccd
   168b4:	svccc	0x00800000
   168b8:	svccc	0x004ccccd
   168bc:	svccc	0x00b4fdf4
   168c0:	svcmi	0x00800000
   168c4:	strdeq	lr, [r1], -r0
   168c8:	push	{r4, r5, r6, r7, r8, lr}
   168cc:	subs	r5, r1, #0
   168d0:	sub	sp, sp, #8
   168d4:	beq	16ad8 <__assert_fail@plt+0x52ac>
   168d8:	ldr	r3, [r0, #24]
   168dc:	mov	r6, r0
   168e0:	ldr	r1, [r0, #8]
   168e4:	mov	r0, r5
   168e8:	blx	r3
   168ec:	ldr	r3, [r6, #8]
   168f0:	cmp	r0, r3
   168f4:	mov	r7, r0
   168f8:	bcs	16ad8 <__assert_fail@plt+0x52ac>
   168fc:	ldr	r8, [r6]
   16900:	add	r4, r8, r0, lsl #3
   16904:	ldr	r1, [r8, r0, lsl #3]
   16908:	str	r4, [sp, #4]
   1690c:	cmp	r1, #0
   16910:	beq	16adc <__assert_fail@plt+0x52b0>
   16914:	cmp	r5, r1
   16918:	beq	1693c <__assert_fail@plt+0x5110>
   1691c:	ldr	r3, [r6, #28]
   16920:	mov	r0, r5
   16924:	blx	r3
   16928:	cmp	r0, #0
   1692c:	beq	1696c <__assert_fail@plt+0x5140>
   16930:	ldr	r1, [r8, r7, lsl #3]
   16934:	cmp	r1, #0
   16938:	beq	16978 <__assert_fail@plt+0x514c>
   1693c:	mov	r0, r1
   16940:	add	sp, sp, #8
   16944:	pop	{r4, r5, r6, r7, r8, pc}
   16948:	ldr	r1, [r3]
   1694c:	cmp	r5, r1
   16950:	beq	1693c <__assert_fail@plt+0x5110>
   16954:	ldr	r3, [r6, #28]
   16958:	mov	r0, r5
   1695c:	blx	r3
   16960:	cmp	r0, #0
   16964:	bne	169f0 <__assert_fail@plt+0x51c4>
   16968:	ldr	r4, [r4, #4]
   1696c:	ldr	r3, [r4, #4]
   16970:	cmp	r3, #0
   16974:	bne	16948 <__assert_fail@plt+0x511c>
   16978:	vldr	s15, [r6, #8]
   1697c:	ldr	r3, [r6, #20]
   16980:	vldr	s14, [r6, #12]
   16984:	vcvt.f32.u32	s15, s15
   16988:	vldr	s13, [r3, #8]
   1698c:	vcvt.f32.u32	s14, s14
   16990:	vmul.f32	s12, s13, s15
   16994:	vcmpe.f32	s14, s12
   16998:	vmrs	APSR_nzcv, fpscr
   1699c:	bgt	169fc <__assert_fail@plt+0x51d0>
   169a0:	ldr	r4, [sp, #4]
   169a4:	ldr	r3, [r4]
   169a8:	cmp	r3, #0
   169ac:	beq	16b3c <__assert_fail@plt+0x5310>
   169b0:	ldr	r0, [r6, #36]	; 0x24
   169b4:	cmp	r0, #0
   169b8:	beq	16b24 <__assert_fail@plt+0x52f8>
   169bc:	ldr	r3, [r0, #4]
   169c0:	str	r3, [r6, #36]	; 0x24
   169c4:	ldr	r3, [r6, #16]
   169c8:	ldr	r2, [r4, #4]
   169cc:	add	r3, r3, #1
   169d0:	str	r5, [r0]
   169d4:	str	r2, [r0, #4]
   169d8:	str	r0, [r4, #4]
   169dc:	str	r3, [r6, #16]
   169e0:	mov	r1, r5
   169e4:	mov	r0, r1
   169e8:	add	sp, sp, #8
   169ec:	pop	{r4, r5, r6, r7, r8, pc}
   169f0:	ldr	r3, [r4, #4]
   169f4:	ldr	r1, [r3]
   169f8:	b	16934 <__assert_fail@plt+0x5108>
   169fc:	ldr	r2, [pc, #388]	; 16b88 <__assert_fail@plt+0x535c>
   16a00:	cmp	r3, r2
   16a04:	beq	16a88 <__assert_fail@plt+0x525c>
   16a08:	vldr	s12, [pc, #348]	; 16b6c <__assert_fail@plt+0x5340>
   16a0c:	vcmpe.f32	s13, s12
   16a10:	vmrs	APSR_nzcv, fpscr
   16a14:	ble	16a70 <__assert_fail@plt+0x5244>
   16a18:	vldr	s11, [pc, #336]	; 16b70 <__assert_fail@plt+0x5344>
   16a1c:	vcmpe.f32	s13, s11
   16a20:	vmrs	APSR_nzcv, fpscr
   16a24:	bpl	16a70 <__assert_fail@plt+0x5244>
   16a28:	vldr	s11, [r3, #12]
   16a2c:	vldr	s10, [pc, #320]	; 16b74 <__assert_fail@plt+0x5348>
   16a30:	vcmpe.f32	s11, s10
   16a34:	vmrs	APSR_nzcv, fpscr
   16a38:	ble	16a70 <__assert_fail@plt+0x5244>
   16a3c:	vldr	s10, [r3]
   16a40:	vcmpe.f32	s10, #0.0
   16a44:	vmrs	APSR_nzcv, fpscr
   16a48:	blt	16a70 <__assert_fail@plt+0x5244>
   16a4c:	vadd.f32	s12, s10, s12
   16a50:	vldr	s10, [r3, #4]
   16a54:	vcmpe.f32	s12, s10
   16a58:	vmrs	APSR_nzcv, fpscr
   16a5c:	bpl	16a70 <__assert_fail@plt+0x5244>
   16a60:	vldr	s9, [pc, #272]	; 16b78 <__assert_fail@plt+0x534c>
   16a64:	vcmpe.f32	s10, s9
   16a68:	vmrs	APSR_nzcv, fpscr
   16a6c:	bls	16b4c <__assert_fail@plt+0x5320>
   16a70:	vldr	s13, [pc, #260]	; 16b7c <__assert_fail@plt+0x5350>
   16a74:	str	r2, [r6, #20]
   16a78:	vmul.f32	s12, s15, s13
   16a7c:	vcmpe.f32	s12, s14
   16a80:	vmrs	APSR_nzcv, fpscr
   16a84:	bpl	169a0 <__assert_fail@plt+0x5174>
   16a88:	vldr	s11, [pc, #240]	; 16b80 <__assert_fail@plt+0x5354>
   16a8c:	vmul.f32	s15, s15, s11
   16a90:	vmul.f32	s15, s15, s13
   16a94:	vldr	s14, [pc, #232]	; 16b84 <__assert_fail@plt+0x5358>
   16a98:	vcmpe.f32	s15, s14
   16a9c:	vmrs	APSR_nzcv, fpscr
   16aa0:	bge	16b44 <__assert_fail@plt+0x5318>
   16aa4:	vcvt.u32.f32	s15, s15
   16aa8:	mov	r0, r6
   16aac:	vmov	r1, s15
   16ab0:	bl	1632c <__assert_fail@plt+0x4b00>
   16ab4:	cmp	r0, #0
   16ab8:	beq	16b44 <__assert_fail@plt+0x5318>
   16abc:	mov	r3, #0
   16ac0:	add	r2, sp, #4
   16ac4:	mov	r1, r5
   16ac8:	mov	r0, r6
   16acc:	bl	15804 <__assert_fail@plt+0x3fd8>
   16ad0:	cmp	r0, #0
   16ad4:	beq	169a0 <__assert_fail@plt+0x5174>
   16ad8:	bl	117d8 <abort@plt>
   16adc:	vmov	s15, r3
   16ae0:	ldr	r2, [r6, #12]
   16ae4:	ldr	r3, [r6, #20]
   16ae8:	vcvt.f32.u32	s15, s15
   16aec:	vldr	s13, [r3, #8]
   16af0:	vmov	s14, r2
   16af4:	vcvt.f32.u32	s14, s14
   16af8:	vmul.f32	s12, s15, s13
   16afc:	vcmpe.f32	s12, s14
   16b00:	vmrs	APSR_nzcv, fpscr
   16b04:	bmi	169fc <__assert_fail@plt+0x51d0>
   16b08:	ldr	r3, [r6, #16]
   16b0c:	add	r2, r2, #1
   16b10:	add	r3, r3, #1
   16b14:	str	r5, [r4]
   16b18:	str	r2, [r6, #12]
   16b1c:	str	r3, [r6, #16]
   16b20:	b	169e0 <__assert_fail@plt+0x51b4>
   16b24:	mov	r0, #8
   16b28:	bl	1cd5c <lchmod@@Base+0x5b90>
   16b2c:	cmp	r0, #0
   16b30:	beq	16b44 <__assert_fail@plt+0x5318>
   16b34:	ldr	r4, [sp, #4]
   16b38:	b	169c4 <__assert_fail@plt+0x5198>
   16b3c:	ldr	r2, [r6, #12]
   16b40:	b	16b08 <__assert_fail@plt+0x52dc>
   16b44:	mov	r1, #0
   16b48:	b	1693c <__assert_fail@plt+0x5110>
   16b4c:	vcmpe.f32	s12, s13
   16b50:	vmrs	APSR_nzcv, fpscr
   16b54:	bpl	16a70 <__assert_fail@plt+0x5244>
   16b58:	ldrb	r3, [r3, #16]
   16b5c:	cmp	r3, #0
   16b60:	vmulne.f32	s15, s11, s15
   16b64:	bne	16a94 <__assert_fail@plt+0x5268>
   16b68:	b	16a8c <__assert_fail@plt+0x5260>
   16b6c:	stclcc	12, cr12, [ip, #820]	; 0x334
   16b70:	svccc	0x00666666
   16b74:	svccc	0x008ccccd
   16b78:	svccc	0x00800000
   16b7c:	svccc	0x004ccccd
   16b80:	svccc	0x00b4fdf4
   16b84:	svcmi	0x00800000
   16b88:	strdeq	lr, [r1], -r0
   16b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16b90:	mov	r7, r1
   16b94:	ldr	r3, [r0, #24]
   16b98:	mov	r6, r0
   16b9c:	ldr	r1, [r0, #8]
   16ba0:	mov	r0, r7
   16ba4:	blx	r3
   16ba8:	ldr	r3, [r6, #8]
   16bac:	cmp	r0, r3
   16bb0:	bcs	16ddc <__assert_fail@plt+0x55b0>
   16bb4:	ldr	r9, [r6]
   16bb8:	mov	r8, r0
   16bbc:	add	r5, r9, r0, lsl #3
   16bc0:	ldr	r4, [r9, r0, lsl #3]
   16bc4:	cmp	r4, #0
   16bc8:	beq	16c74 <__assert_fail@plt+0x5448>
   16bcc:	cmp	r7, r4
   16bd0:	beq	16bf0 <__assert_fail@plt+0x53c4>
   16bd4:	mov	r1, r4
   16bd8:	ldr	r3, [r6, #28]
   16bdc:	mov	r0, r7
   16be0:	blx	r3
   16be4:	cmp	r0, #0
   16be8:	beq	16c68 <__assert_fail@plt+0x543c>
   16bec:	ldr	r4, [r9, r8, lsl #3]
   16bf0:	ldr	r3, [r5, #4]
   16bf4:	cmp	r3, #0
   16bf8:	movne	r2, #0
   16bfc:	ldmne	r3, {r0, r1}
   16c00:	streq	r3, [r9, r8, lsl #3]
   16c04:	stmne	r5, {r0, r1}
   16c08:	strne	r2, [r3]
   16c0c:	ldrne	r2, [r6, #36]	; 0x24
   16c10:	strne	r2, [r3, #4]
   16c14:	strne	r3, [r6, #36]	; 0x24
   16c18:	cmp	r4, #0
   16c1c:	beq	16c74 <__assert_fail@plt+0x5448>
   16c20:	ldr	r2, [r9, r8, lsl #3]
   16c24:	ldr	r3, [r6, #16]
   16c28:	cmp	r2, #0
   16c2c:	sub	r3, r3, #1
   16c30:	str	r3, [r6, #16]
   16c34:	beq	16ca8 <__assert_fail@plt+0x547c>
   16c38:	mov	r0, r4
   16c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c40:	ldr	r4, [r3]
   16c44:	cmp	r7, r4
   16c48:	beq	16c88 <__assert_fail@plt+0x545c>
   16c4c:	mov	r1, r4
   16c50:	ldr	r3, [r6, #28]
   16c54:	mov	r0, r7
   16c58:	blx	r3
   16c5c:	cmp	r0, #0
   16c60:	bne	16c80 <__assert_fail@plt+0x5454>
   16c64:	ldr	r5, [r5, #4]
   16c68:	ldr	r3, [r5, #4]
   16c6c:	cmp	r3, #0
   16c70:	bne	16c40 <__assert_fail@plt+0x5414>
   16c74:	mov	r4, #0
   16c78:	mov	r0, r4
   16c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c80:	ldr	r3, [r5, #4]
   16c84:	ldr	r4, [r3]
   16c88:	ldr	r1, [r3, #4]
   16c8c:	mov	r2, #0
   16c90:	str	r1, [r5, #4]
   16c94:	str	r2, [r3]
   16c98:	ldr	r2, [r6, #36]	; 0x24
   16c9c:	str	r2, [r3, #4]
   16ca0:	str	r3, [r6, #36]	; 0x24
   16ca4:	b	16c18 <__assert_fail@plt+0x53ec>
   16ca8:	vldr	s15, [r6, #8]
   16cac:	ldr	r3, [r6, #12]
   16cb0:	ldr	r2, [r6, #20]
   16cb4:	sub	r3, r3, #1
   16cb8:	vcvt.f32.u32	s14, s15
   16cbc:	vldr	s13, [r2]
   16cc0:	vmov	s15, r3
   16cc4:	str	r3, [r6, #12]
   16cc8:	vcvt.f32.u32	s15, s15
   16ccc:	vmul.f32	s12, s13, s14
   16cd0:	vcmpe.f32	s15, s12
   16cd4:	vmrs	APSR_nzcv, fpscr
   16cd8:	bpl	16c38 <__assert_fail@plt+0x540c>
   16cdc:	ldr	r3, [pc, #276]	; 16df8 <__assert_fail@plt+0x55cc>
   16ce0:	cmp	r2, r3
   16ce4:	beq	16dc4 <__assert_fail@plt+0x5598>
   16ce8:	vldr	s12, [r2, #8]
   16cec:	vldr	s11, [pc, #236]	; 16de0 <__assert_fail@plt+0x55b4>
   16cf0:	vcmpe.f32	s12, s11
   16cf4:	vmrs	APSR_nzcv, fpscr
   16cf8:	ble	16dac <__assert_fail@plt+0x5580>
   16cfc:	vldr	s10, [pc, #224]	; 16de4 <__assert_fail@plt+0x55b8>
   16d00:	vcmpe.f32	s12, s10
   16d04:	vmrs	APSR_nzcv, fpscr
   16d08:	bpl	16dac <__assert_fail@plt+0x5580>
   16d0c:	vldr	s10, [pc, #212]	; 16de8 <__assert_fail@plt+0x55bc>
   16d10:	vldr	s9, [r2, #12]
   16d14:	vcmpe.f32	s9, s10
   16d18:	vmrs	APSR_nzcv, fpscr
   16d1c:	ble	16dac <__assert_fail@plt+0x5580>
   16d20:	vcmpe.f32	s13, #0.0
   16d24:	vmrs	APSR_nzcv, fpscr
   16d28:	blt	16dac <__assert_fail@plt+0x5580>
   16d2c:	vadd.f32	s13, s13, s11
   16d30:	vldr	s11, [r2, #4]
   16d34:	vcmpe.f32	s13, s11
   16d38:	vmrs	APSR_nzcv, fpscr
   16d3c:	bpl	16dac <__assert_fail@plt+0x5580>
   16d40:	vldr	s10, [pc, #164]	; 16dec <__assert_fail@plt+0x55c0>
   16d44:	vcmpe.f32	s11, s10
   16d48:	vmrs	APSR_nzcv, fpscr
   16d4c:	bhi	16dac <__assert_fail@plt+0x5580>
   16d50:	vcmpe.f32	s12, s13
   16d54:	vmrs	APSR_nzcv, fpscr
   16d58:	ble	16dac <__assert_fail@plt+0x5580>
   16d5c:	ldrb	r3, [r2, #16]
   16d60:	cmp	r3, #0
   16d64:	beq	16dcc <__assert_fail@plt+0x55a0>
   16d68:	vmul.f32	s15, s14, s11
   16d6c:	vcvt.u32.f32	s15, s15
   16d70:	vmov	r1, s15
   16d74:	mov	r0, r6
   16d78:	bl	1632c <__assert_fail@plt+0x4b00>
   16d7c:	cmp	r0, #0
   16d80:	bne	16c38 <__assert_fail@plt+0x540c>
   16d84:	ldr	r0, [r6, #36]	; 0x24
   16d88:	cmp	r0, #0
   16d8c:	beq	16da0 <__assert_fail@plt+0x5574>
   16d90:	ldr	r5, [r0, #4]
   16d94:	bl	1309c <__assert_fail@plt+0x1870>
   16d98:	subs	r0, r5, #0
   16d9c:	bne	16d90 <__assert_fail@plt+0x5564>
   16da0:	mov	r3, #0
   16da4:	str	r3, [r6, #36]	; 0x24
   16da8:	b	16c38 <__assert_fail@plt+0x540c>
   16dac:	vldr	s13, [pc, #60]	; 16df0 <__assert_fail@plt+0x55c4>
   16db0:	str	r3, [r6, #20]
   16db4:	vmul.f32	s13, s14, s13
   16db8:	vcmpe.f32	s15, s13
   16dbc:	vmrs	APSR_nzcv, fpscr
   16dc0:	bpl	16c38 <__assert_fail@plt+0x540c>
   16dc4:	vldr	s12, [pc, #40]	; 16df4 <__assert_fail@plt+0x55c8>
   16dc8:	vldr	s11, [pc, #28]	; 16dec <__assert_fail@plt+0x55c0>
   16dcc:	vmul.f32	s15, s14, s11
   16dd0:	vmul.f32	s15, s15, s12
   16dd4:	vcvt.u32.f32	s15, s15
   16dd8:	b	16d70 <__assert_fail@plt+0x5544>
   16ddc:	bl	117d8 <abort@plt>
   16de0:	stclcc	12, cr12, [ip, #820]	; 0x334
   16de4:	svccc	0x00666666
   16de8:	svccc	0x008ccccd
   16dec:	svccc	0x00800000
   16df0:	andeq	r0, r0, r0
   16df4:	svccc	0x004ccccd
   16df8:	strdeq	lr, [r1], -r0
   16dfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e00:	mov	r7, r1
   16e04:	ldr	r3, [r0, #24]
   16e08:	mov	r6, r0
   16e0c:	ldr	r1, [r0, #8]
   16e10:	mov	r0, r7
   16e14:	blx	r3
   16e18:	ldr	r3, [r6, #8]
   16e1c:	cmp	r0, r3
   16e20:	bcs	1704c <__assert_fail@plt+0x5820>
   16e24:	ldr	r9, [r6]
   16e28:	mov	r8, r0
   16e2c:	add	r5, r9, r0, lsl #3
   16e30:	ldr	r4, [r9, r0, lsl #3]
   16e34:	cmp	r4, #0
   16e38:	beq	16ee4 <__assert_fail@plt+0x56b8>
   16e3c:	cmp	r7, r4
   16e40:	beq	16e60 <__assert_fail@plt+0x5634>
   16e44:	mov	r1, r4
   16e48:	ldr	r3, [r6, #28]
   16e4c:	mov	r0, r7
   16e50:	blx	r3
   16e54:	cmp	r0, #0
   16e58:	beq	16ed8 <__assert_fail@plt+0x56ac>
   16e5c:	ldr	r4, [r9, r8, lsl #3]
   16e60:	ldr	r3, [r5, #4]
   16e64:	cmp	r3, #0
   16e68:	movne	r2, #0
   16e6c:	ldmne	r3, {r0, r1}
   16e70:	streq	r3, [r9, r8, lsl #3]
   16e74:	stmne	r5, {r0, r1}
   16e78:	strne	r2, [r3]
   16e7c:	ldrne	r2, [r6, #36]	; 0x24
   16e80:	strne	r2, [r3, #4]
   16e84:	strne	r3, [r6, #36]	; 0x24
   16e88:	cmp	r4, #0
   16e8c:	beq	16ee4 <__assert_fail@plt+0x56b8>
   16e90:	ldr	r2, [r9, r8, lsl #3]
   16e94:	ldr	r3, [r6, #16]
   16e98:	cmp	r2, #0
   16e9c:	sub	r3, r3, #1
   16ea0:	str	r3, [r6, #16]
   16ea4:	beq	16f18 <__assert_fail@plt+0x56ec>
   16ea8:	mov	r0, r4
   16eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16eb0:	ldr	r4, [r3]
   16eb4:	cmp	r7, r4
   16eb8:	beq	16ef8 <__assert_fail@plt+0x56cc>
   16ebc:	mov	r1, r4
   16ec0:	ldr	r3, [r6, #28]
   16ec4:	mov	r0, r7
   16ec8:	blx	r3
   16ecc:	cmp	r0, #0
   16ed0:	bne	16ef0 <__assert_fail@plt+0x56c4>
   16ed4:	ldr	r5, [r5, #4]
   16ed8:	ldr	r3, [r5, #4]
   16edc:	cmp	r3, #0
   16ee0:	bne	16eb0 <__assert_fail@plt+0x5684>
   16ee4:	mov	r4, #0
   16ee8:	mov	r0, r4
   16eec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ef0:	ldr	r3, [r5, #4]
   16ef4:	ldr	r4, [r3]
   16ef8:	ldr	r1, [r3, #4]
   16efc:	mov	r2, #0
   16f00:	str	r1, [r5, #4]
   16f04:	str	r2, [r3]
   16f08:	ldr	r2, [r6, #36]	; 0x24
   16f0c:	str	r2, [r3, #4]
   16f10:	str	r3, [r6, #36]	; 0x24
   16f14:	b	16e88 <__assert_fail@plt+0x565c>
   16f18:	vldr	s15, [r6, #8]
   16f1c:	ldr	r3, [r6, #12]
   16f20:	ldr	r2, [r6, #20]
   16f24:	sub	r3, r3, #1
   16f28:	vcvt.f32.u32	s14, s15
   16f2c:	vldr	s13, [r2]
   16f30:	vmov	s15, r3
   16f34:	str	r3, [r6, #12]
   16f38:	vcvt.f32.u32	s15, s15
   16f3c:	vmul.f32	s12, s13, s14
   16f40:	vcmpe.f32	s15, s12
   16f44:	vmrs	APSR_nzcv, fpscr
   16f48:	bpl	16ea8 <__assert_fail@plt+0x567c>
   16f4c:	ldr	r3, [pc, #276]	; 17068 <__assert_fail@plt+0x583c>
   16f50:	cmp	r2, r3
   16f54:	beq	17034 <__assert_fail@plt+0x5808>
   16f58:	vldr	s12, [r2, #8]
   16f5c:	vldr	s11, [pc, #236]	; 17050 <__assert_fail@plt+0x5824>
   16f60:	vcmpe.f32	s12, s11
   16f64:	vmrs	APSR_nzcv, fpscr
   16f68:	ble	1701c <__assert_fail@plt+0x57f0>
   16f6c:	vldr	s10, [pc, #224]	; 17054 <__assert_fail@plt+0x5828>
   16f70:	vcmpe.f32	s12, s10
   16f74:	vmrs	APSR_nzcv, fpscr
   16f78:	bpl	1701c <__assert_fail@plt+0x57f0>
   16f7c:	vldr	s10, [pc, #212]	; 17058 <__assert_fail@plt+0x582c>
   16f80:	vldr	s9, [r2, #12]
   16f84:	vcmpe.f32	s9, s10
   16f88:	vmrs	APSR_nzcv, fpscr
   16f8c:	ble	1701c <__assert_fail@plt+0x57f0>
   16f90:	vcmpe.f32	s13, #0.0
   16f94:	vmrs	APSR_nzcv, fpscr
   16f98:	blt	1701c <__assert_fail@plt+0x57f0>
   16f9c:	vadd.f32	s13, s13, s11
   16fa0:	vldr	s11, [r2, #4]
   16fa4:	vcmpe.f32	s13, s11
   16fa8:	vmrs	APSR_nzcv, fpscr
   16fac:	bpl	1701c <__assert_fail@plt+0x57f0>
   16fb0:	vldr	s10, [pc, #164]	; 1705c <__assert_fail@plt+0x5830>
   16fb4:	vcmpe.f32	s11, s10
   16fb8:	vmrs	APSR_nzcv, fpscr
   16fbc:	bhi	1701c <__assert_fail@plt+0x57f0>
   16fc0:	vcmpe.f32	s12, s13
   16fc4:	vmrs	APSR_nzcv, fpscr
   16fc8:	ble	1701c <__assert_fail@plt+0x57f0>
   16fcc:	ldrb	r3, [r2, #16]
   16fd0:	cmp	r3, #0
   16fd4:	beq	1703c <__assert_fail@plt+0x5810>
   16fd8:	vmul.f32	s15, s14, s11
   16fdc:	vcvt.u32.f32	s15, s15
   16fe0:	vmov	r1, s15
   16fe4:	mov	r0, r6
   16fe8:	bl	1632c <__assert_fail@plt+0x4b00>
   16fec:	cmp	r0, #0
   16ff0:	bne	16ea8 <__assert_fail@plt+0x567c>
   16ff4:	ldr	r0, [r6, #36]	; 0x24
   16ff8:	cmp	r0, #0
   16ffc:	beq	17010 <__assert_fail@plt+0x57e4>
   17000:	ldr	r5, [r0, #4]
   17004:	bl	1309c <__assert_fail@plt+0x1870>
   17008:	subs	r0, r5, #0
   1700c:	bne	17000 <__assert_fail@plt+0x57d4>
   17010:	mov	r3, #0
   17014:	str	r3, [r6, #36]	; 0x24
   17018:	b	16ea8 <__assert_fail@plt+0x567c>
   1701c:	vldr	s13, [pc, #60]	; 17060 <__assert_fail@plt+0x5834>
   17020:	str	r3, [r6, #20]
   17024:	vmul.f32	s13, s14, s13
   17028:	vcmpe.f32	s15, s13
   1702c:	vmrs	APSR_nzcv, fpscr
   17030:	bpl	16ea8 <__assert_fail@plt+0x567c>
   17034:	vldr	s12, [pc, #40]	; 17064 <__assert_fail@plt+0x5838>
   17038:	vldr	s11, [pc, #28]	; 1705c <__assert_fail@plt+0x5830>
   1703c:	vmul.f32	s15, s14, s11
   17040:	vmul.f32	s15, s15, s12
   17044:	vcvt.u32.f32	s15, s15
   17048:	b	16fe0 <__assert_fail@plt+0x57b4>
   1704c:	bl	117d8 <abort@plt>
   17050:	stclcc	12, cr12, [ip, #820]	; 0x334
   17054:	svccc	0x00666666
   17058:	svccc	0x008ccccd
   1705c:	svccc	0x00800000
   17060:	andeq	r0, r0, r0
   17064:	svccc	0x004ccccd
   17068:	strdeq	lr, [r1], -r0
   1706c:	push	{r4, r5, r6, lr}
   17070:	mov	r4, r0
   17074:	ldr	r0, [r0]
   17078:	mov	r6, r1
   1707c:	bl	1d3a8 <lchmod@@Base+0x61dc>
   17080:	ldrd	r4, [r4, #8]
   17084:	mov	r2, r6
   17088:	mov	r3, #0
   1708c:	eor	r4, r4, r0
   17090:	mov	r0, r4
   17094:	mov	r1, r5
   17098:	bl	1da04 <lchmod@@Base+0x6838>
   1709c:	mov	r0, r2
   170a0:	pop	{r4, r5, r6, pc}
   170a4:	ldrd	r2, [r1, #8]
   170a8:	push	{r4, r5, r6, lr}
   170ac:	ldrd	r4, [r0, #8]
   170b0:	cmp	r5, r3
   170b4:	cmpeq	r4, r2
   170b8:	beq	170c4 <__assert_fail@plt+0x5898>
   170bc:	mov	r0, #0
   170c0:	pop	{r4, r5, r6, pc}
   170c4:	ldrd	r4, [r0, #16]
   170c8:	ldrd	r2, [r1, #16]
   170cc:	cmp	r5, r3
   170d0:	cmpeq	r4, r2
   170d4:	bne	170bc <__assert_fail@plt+0x5890>
   170d8:	ldr	r1, [r1]
   170dc:	ldr	r0, [r0]
   170e0:	bl	11454 <strcmp@plt>
   170e4:	clz	r0, r0
   170e8:	lsr	r0, r0, #5
   170ec:	pop	{r4, r5, r6, pc}
   170f0:	push	{r4, lr}
   170f4:	mov	r4, r0
   170f8:	ldr	r0, [r0]
   170fc:	bl	1309c <__assert_fail@plt+0x1870>
   17100:	mov	r0, r4
   17104:	pop	{r4, lr}
   17108:	b	1309c <__assert_fail@plt+0x1870>
   1710c:	mov	r3, #0
   17110:	mov	r2, #1
   17114:	str	r1, [r0]
   17118:	str	r1, [r0, #4]
   1711c:	str	r1, [r0, #8]
   17120:	str	r1, [r0, #12]
   17124:	str	r1, [r0, #16]
   17128:	strb	r2, [r0, #28]
   1712c:	str	r3, [r0, #20]
   17130:	str	r3, [r0, #24]
   17134:	bx	lr
   17138:	ldrb	r0, [r0, #28]
   1713c:	bx	lr
   17140:	ldrb	ip, [r0, #28]
   17144:	ldr	r3, [r0, #20]
   17148:	mov	r2, r0
   1714c:	eor	ip, ip, #1
   17150:	add	r3, ip, r3
   17154:	and	r3, r3, #3
   17158:	ldr	r0, [r0, r3, lsl #2]
   1715c:	str	r1, [r2, r3, lsl #2]
   17160:	ldr	r1, [r2, #24]
   17164:	str	r3, [r2, #20]
   17168:	cmp	r3, r1
   1716c:	addeq	r3, ip, r3
   17170:	andeq	r3, r3, #3
   17174:	streq	r3, [r2, #24]
   17178:	mov	r3, #0
   1717c:	strb	r3, [r2, #28]
   17180:	bx	lr
   17184:	ldrb	r3, [r0, #28]
   17188:	cmp	r3, #0
   1718c:	bne	171c4 <__assert_fail@plt+0x5998>
   17190:	ldr	r3, [r0, #20]
   17194:	ldr	r1, [r0, #16]
   17198:	ldr	r2, [r0, r3, lsl #2]
   1719c:	str	r1, [r0, r3, lsl #2]
   171a0:	ldr	r1, [r0, #24]
   171a4:	cmp	r3, r1
   171a8:	addne	r3, r3, #3
   171ac:	moveq	r3, #1
   171b0:	andne	r3, r3, #3
   171b4:	strbeq	r3, [r0, #28]
   171b8:	strne	r3, [r0, #20]
   171bc:	mov	r0, r2
   171c0:	bx	lr
   171c4:	push	{r4, lr}
   171c8:	bl	117d8 <abort@plt>

000171cc <lchmod@@Base>:
   171cc:	push	{r4, r5, r6, r7, r8, lr}
   171d0:	mov	r6, r1
   171d4:	sub	sp, sp, #144	; 0x90
   171d8:	mov	r1, #2654208	; 0x288000
   171dc:	mov	r8, r0
   171e0:	bl	115bc <open64@plt>
   171e4:	subs	r4, r0, #0
   171e8:	movlt	r5, r4
   171ec:	blt	17274 <lchmod@@Base+0xa8>
   171f0:	mov	r3, #4096	; 0x1000
   171f4:	str	r3, [sp]
   171f8:	ldr	r2, [pc, #208]	; 172d0 <lchmod@@Base+0x104>
   171fc:	add	r3, sp, #40	; 0x28
   17200:	mov	r1, r4
   17204:	mov	r0, #3
   17208:	bl	11538 <__fxstatat64@plt>
   1720c:	cmp	r0, #0
   17210:	bne	17294 <lchmod@@Base+0xc8>
   17214:	ldr	r3, [sp, #56]	; 0x38
   17218:	and	r3, r3, #61440	; 0xf000
   1721c:	cmp	r3, #40960	; 0xa000
   17220:	beq	172b4 <lchmod@@Base+0xe8>
   17224:	ldr	r3, [pc, #168]	; 172d4 <lchmod@@Base+0x108>
   17228:	mov	r2, #26
   1722c:	str	r4, [sp]
   17230:	mov	r1, #1
   17234:	add	r0, sp, #12
   17238:	bl	11694 <__sprintf_chk@plt>
   1723c:	mov	r1, r6
   17240:	add	r0, sp, #12
   17244:	bl	117b4 <chmod@plt>
   17248:	mov	r5, r0
   1724c:	bl	11688 <__errno_location@plt>
   17250:	mov	r7, r0
   17254:	mov	r0, r4
   17258:	ldr	r4, [r7]
   1725c:	bl	117e4 <close@plt>
   17260:	cmp	r5, #0
   17264:	beq	17274 <lchmod@@Base+0xa8>
   17268:	cmp	r4, #2
   1726c:	strne	r4, [r7]
   17270:	beq	17280 <lchmod@@Base+0xb4>
   17274:	mov	r0, r5
   17278:	add	sp, sp, #144	; 0x90
   1727c:	pop	{r4, r5, r6, r7, r8, pc}
   17280:	mov	r1, r6
   17284:	mov	r0, r8
   17288:	bl	117b4 <chmod@plt>
   1728c:	mov	r5, r0
   17290:	b	17274 <lchmod@@Base+0xa8>
   17294:	bl	11688 <__errno_location@plt>
   17298:	mvn	r5, #0
   1729c:	mov	r6, r0
   172a0:	mov	r0, r4
   172a4:	ldr	r4, [r6]
   172a8:	bl	117e4 <close@plt>
   172ac:	str	r4, [r6]
   172b0:	b	17274 <lchmod@@Base+0xa8>
   172b4:	mov	r0, r4
   172b8:	bl	117e4 <close@plt>
   172bc:	bl	11688 <__errno_location@plt>
   172c0:	mov	r3, #95	; 0x5f
   172c4:	mvn	r5, #0
   172c8:	str	r3, [r0]
   172cc:	b	17274 <lchmod@@Base+0xa8>
   172d0:	andeq	lr, r1, r4, asr r2
   172d4:	andeq	lr, r1, r0, ror r2
   172d8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172dc:	mov	r4, r0
   172e0:	ldrb	r3, [r0]
   172e4:	sub	r2, r3, #48	; 0x30
   172e8:	cmp	r2, #7
   172ec:	bls	17384 <lchmod@@Base+0x1b8>
   172f0:	cmp	r3, #0
   172f4:	moveq	r0, #1
   172f8:	beq	17328 <lchmod@@Base+0x15c>
   172fc:	mov	r1, r4
   17300:	mov	r0, #1
   17304:	and	r2, r3, #239	; 0xef
   17308:	cmp	r3, #43	; 0x2b
   1730c:	cmpne	r2, #45	; 0x2d
   17310:	ldrb	r3, [r1, #1]!
   17314:	moveq	r2, #1
   17318:	movne	r2, #0
   1731c:	cmp	r3, #0
   17320:	add	r0, r0, r2
   17324:	bne	17304 <lchmod@@Base+0x138>
   17328:	mov	r1, #16
   1732c:	ldr	r6, [pc, #816]	; 17664 <lchmod@@Base+0x498>
   17330:	bl	1c6f0 <lchmod@@Base+0x5524>
   17334:	mov	r9, #3
   17338:	mov	r2, #0
   1733c:	mov	sl, #1
   17340:	mov	fp, #2
   17344:	mov	lr, #0
   17348:	ldrb	ip, [r4]
   1734c:	mov	r3, r4
   17350:	add	r4, r4, #1
   17354:	cmp	ip, #97	; 0x61
   17358:	beq	175cc <lchmod@@Base+0x400>
   1735c:	bls	173cc <lchmod@@Base+0x200>
   17360:	cmp	ip, #111	; 0x6f
   17364:	beq	175d4 <lchmod@@Base+0x408>
   17368:	cmp	ip, #117	; 0x75
   1736c:	beq	173c4 <lchmod@@Base+0x1f8>
   17370:	cmp	ip, #103	; 0x67
   17374:	beq	175e0 <lchmod@@Base+0x414>
   17378:	bl	1309c <__assert_fail@plt+0x1870>
   1737c:	mov	r0, #0
   17380:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17384:	ldr	r0, [pc, #728]	; 17664 <lchmod@@Base+0x498>
   17388:	mov	r3, r4
   1738c:	mov	r5, #0
   17390:	b	173a4 <lchmod@@Base+0x1d8>
   17394:	ldrb	r2, [r3]
   17398:	sub	r1, r2, #48	; 0x30
   1739c:	cmp	r1, #7
   173a0:	bhi	175ec <lchmod@@Base+0x420>
   173a4:	ldrb	r2, [r3], #1
   173a8:	lsl	r5, r5, #3
   173ac:	sub	r5, r5, #48	; 0x30
   173b0:	add	r5, r2, r5
   173b4:	cmp	r5, r0
   173b8:	bls	17394 <lchmod@@Base+0x1c8>
   173bc:	mov	r0, #0
   173c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173c4:	orr	lr, lr, #2496	; 0x9c0
   173c8:	b	17348 <lchmod@@Base+0x17c>
   173cc:	cmp	ip, #45	; 0x2d
   173d0:	beq	173e4 <lchmod@@Base+0x218>
   173d4:	cmp	ip, #61	; 0x3d
   173d8:	beq	173e4 <lchmod@@Base+0x218>
   173dc:	cmp	ip, #43	; 0x2b
   173e0:	bne	17378 <lchmod@@Base+0x1ac>
   173e4:	add	r7, r2, #1
   173e8:	add	r2, r0, r2, lsl #4
   173ec:	b	1744c <lchmod@@Base+0x280>
   173f0:	cmp	r4, #111	; 0x6f
   173f4:	beq	175b8 <lchmod@@Base+0x3ec>
   173f8:	cmp	r4, #117	; 0x75
   173fc:	bne	174e4 <lchmod@@Base+0x318>
   17400:	ldrb	r4, [r3, #2]
   17404:	mov	r8, r9
   17408:	add	r3, r3, #2
   1740c:	mov	r1, #448	; 0x1c0
   17410:	cmp	lr, #0
   17414:	strb	ip, [r2]
   17418:	str	r1, [r2, #8]
   1741c:	mov	ip, r4
   17420:	andne	r1, r1, lr
   17424:	strb	r8, [r2, #1]
   17428:	str	lr, [r2, #4]
   1742c:	and	r4, ip, #239	; 0xef
   17430:	cmp	ip, #43	; 0x2b
   17434:	cmpne	r4, #45	; 0x2d
   17438:	str	r1, [r2, #12]
   1743c:	add	r1, r7, #1
   17440:	add	r2, r2, #16
   17444:	bne	17640 <lchmod@@Base+0x474>
   17448:	mov	r7, r1
   1744c:	ldrb	r4, [r3, #1]
   17450:	add	r1, r3, #1
   17454:	cmp	r4, #103	; 0x67
   17458:	beq	174d0 <lchmod@@Base+0x304>
   1745c:	bhi	173f0 <lchmod@@Base+0x224>
   17460:	sub	r3, r4, #48	; 0x30
   17464:	cmp	r3, #7
   17468:	movls	r3, #0
   1746c:	bhi	174e4 <lchmod@@Base+0x318>
   17470:	ldrb	r4, [r1], #1
   17474:	lsl	r3, r3, #3
   17478:	sub	r3, r3, #48	; 0x30
   1747c:	add	r3, r4, r3
   17480:	cmp	r3, r6
   17484:	bhi	17378 <lchmod@@Base+0x1ac>
   17488:	ldrb	r4, [r1]
   1748c:	sub	r5, r4, #48	; 0x30
   17490:	cmp	r5, #7
   17494:	bls	17470 <lchmod@@Base+0x2a4>
   17498:	cmp	lr, #0
   1749c:	bne	17378 <lchmod@@Base+0x1ac>
   174a0:	cmp	r4, #0
   174a4:	cmpne	r4, #44	; 0x2c
   174a8:	bne	17378 <lchmod@@Base+0x1ac>
   174ac:	ldr	lr, [pc, #432]	; 17664 <lchmod@@Base+0x498>
   174b0:	strb	ip, [r2]
   174b4:	str	r3, [r2, #8]
   174b8:	strb	sl, [r2, #1]
   174bc:	mov	r3, r1
   174c0:	str	r6, [r2, #4]
   174c4:	mov	ip, r4
   174c8:	mov	r1, lr
   174cc:	b	1742c <lchmod@@Base+0x260>
   174d0:	ldrb	r4, [r3, #2]
   174d4:	mov	r8, r9
   174d8:	add	r3, r3, #2
   174dc:	mov	r1, #56	; 0x38
   174e0:	b	17410 <lchmod@@Base+0x244>
   174e4:	mov	r3, r1
   174e8:	mov	r8, sl
   174ec:	mov	r1, #0
   174f0:	sub	r5, r4, #88	; 0x58
   174f4:	cmp	r5, #32
   174f8:	ldrls	pc, [pc, r5, lsl #2]
   174fc:	b	17410 <lchmod@@Base+0x244>
   17500:	andeq	r7, r1, r4, lsl #11
   17504:	andeq	r7, r1, r0, lsl r4
   17508:	andeq	r7, r1, r0, lsl r4
   1750c:	andeq	r7, r1, r0, lsl r4
   17510:	andeq	r7, r1, r0, lsl r4
   17514:	andeq	r7, r1, r0, lsl r4
   17518:	andeq	r7, r1, r0, lsl r4
   1751c:	andeq	r7, r1, r0, lsl r4
   17520:	andeq	r7, r1, r0, lsl r4
   17524:	andeq	r7, r1, r0, lsl r4
   17528:	andeq	r7, r1, r0, lsl r4
   1752c:	andeq	r7, r1, r0, lsl r4
   17530:	andeq	r7, r1, r0, lsl r4
   17534:	andeq	r7, r1, r0, lsl r4
   17538:	andeq	r7, r1, r0, lsl r4
   1753c:	andeq	r7, r1, r0, lsl r4
   17540:	andeq	r7, r1, r0, lsl r4
   17544:	andeq	r7, r1, r0, lsl r4
   17548:	andeq	r7, r1, r0, lsl r4
   1754c:	andeq	r7, r1, r0, lsl r4
   17550:	andeq	r7, r1, r0, lsl r4
   17554:	andeq	r7, r1, r0, lsl r4
   17558:	andeq	r7, r1, r0, lsl r4
   1755c:	andeq	r7, r1, r0, lsl r4
   17560:	andeq	r7, r1, r0, lsl r4
   17564:	andeq	r7, r1, r0, lsl r4
   17568:			; <UNDEFINED> instruction: 0x000175b0
   1756c:	andeq	r7, r1, r8, lsr #11
   17570:	andeq	r7, r1, r0, lsr #11
   17574:	andeq	r7, r1, r0, lsl r4
   17578:	andeq	r7, r1, r0, lsl r4
   1757c:	muleq	r1, r8, r5
   17580:	muleq	r1, r0, r5
   17584:	mov	r8, fp
   17588:	ldrb	r4, [r3, #1]!
   1758c:	b	174f0 <lchmod@@Base+0x324>
   17590:	orr	r1, r1, #73	; 0x49
   17594:	b	17588 <lchmod@@Base+0x3bc>
   17598:	orr	r1, r1, #146	; 0x92
   1759c:	b	17588 <lchmod@@Base+0x3bc>
   175a0:	orr	r1, r1, #512	; 0x200
   175a4:	b	17588 <lchmod@@Base+0x3bc>
   175a8:	orr	r1, r1, #3072	; 0xc00
   175ac:	b	17588 <lchmod@@Base+0x3bc>
   175b0:	orr	r1, r1, #292	; 0x124
   175b4:	b	17588 <lchmod@@Base+0x3bc>
   175b8:	ldrb	r4, [r3, #2]
   175bc:	mov	r8, r9
   175c0:	add	r3, r3, #2
   175c4:	mov	r1, #7
   175c8:	b	17410 <lchmod@@Base+0x244>
   175cc:	ldr	lr, [pc, #144]	; 17664 <lchmod@@Base+0x498>
   175d0:	b	17348 <lchmod@@Base+0x17c>
   175d4:	orr	lr, lr, #516	; 0x204
   175d8:	orr	lr, lr, #3
   175dc:	b	17348 <lchmod@@Base+0x17c>
   175e0:	orr	lr, lr, #1072	; 0x430
   175e4:	orr	lr, lr, #8
   175e8:	b	17348 <lchmod@@Base+0x17c>
   175ec:	cmp	r2, #0
   175f0:	bne	173bc <lchmod@@Base+0x1f0>
   175f4:	sub	r3, r3, r4
   175f8:	cmp	r3, #4
   175fc:	andle	r4, r5, #3072	; 0xc00
   17600:	mov	r0, #32
   17604:	mvnle	r4, r4, lsr #10
   17608:	ldrgt	r4, [pc, #84]	; 17664 <lchmod@@Base+0x498>
   1760c:	mvnle	r4, r4, lsl #10
   17610:	bl	1c60c <lchmod@@Base+0x5440>
   17614:	ldr	r2, [pc, #72]	; 17664 <lchmod@@Base+0x498>
   17618:	mov	ip, #61	; 0x3d
   1761c:	mov	r1, #1
   17620:	mov	r3, #0
   17624:	str	r5, [r0, #8]
   17628:	str	r4, [r0, #12]
   1762c:	strb	ip, [r0]
   17630:	strb	r1, [r0, #1]
   17634:	str	r2, [r0, #4]
   17638:	strb	r3, [r0, #17]
   1763c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17640:	cmp	ip, #44	; 0x2c
   17644:	addeq	r4, r3, #1
   17648:	moveq	r2, r7
   1764c:	beq	17344 <lchmod@@Base+0x178>
   17650:	cmp	ip, #0
   17654:	bne	17378 <lchmod@@Base+0x1ac>
   17658:	add	r7, r0, r7, lsl #4
   1765c:	strb	ip, [r7, #1]
   17660:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17664:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17668:	push	{r4, r5, lr}
   1766c:	sub	sp, sp, #108	; 0x6c
   17670:	mov	r1, r0
   17674:	mov	r2, sp
   17678:	mov	r0, #3
   1767c:	bl	117c0 <__xstat64@plt>
   17680:	subs	r4, r0, #0
   17684:	movne	r0, #0
   17688:	bne	176bc <lchmod@@Base+0x4f0>
   1768c:	mov	r0, #32
   17690:	ldr	r5, [sp, #16]
   17694:	bl	1c60c <lchmod@@Base+0x5440>
   17698:	ldr	r3, [pc, #36]	; 176c4 <lchmod@@Base+0x4f8>
   1769c:	mov	r1, #61	; 0x3d
   176a0:	mov	r2, #1
   176a4:	str	r5, [r0, #8]
   176a8:	strb	r4, [r0, #17]
   176ac:	strb	r1, [r0]
   176b0:	strb	r2, [r0, #1]
   176b4:	str	r3, [r0, #4]
   176b8:	str	r3, [r0, #12]
   176bc:	add	sp, sp, #108	; 0x6c
   176c0:	pop	{r4, r5, pc}
   176c4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   176c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176cc:	ldrb	r4, [r3, #1]
   176d0:	ldr	r7, [pc, #292]	; 177fc <lchmod@@Base+0x630>
   176d4:	ldr	r9, [sp, #36]	; 0x24
   176d8:	cmp	r4, #0
   176dc:	and	r0, r0, r7
   176e0:	beq	177f4 <lchmod@@Base+0x628>
   176e4:	cmp	r1, #0
   176e8:	ldr	r8, [pc, #272]	; 17800 <lchmod@@Base+0x634>
   176ec:	add	r3, r3, #16
   176f0:	mvn	r2, r2
   176f4:	movne	r6, #3072	; 0xc00
   176f8:	moveq	r6, #0
   176fc:	mov	r5, #0
   17700:	b	17788 <lchmod@@Base+0x5bc>
   17704:	cmp	r4, #3
   17708:	bne	17744 <lchmod@@Base+0x578>
   1770c:	and	r4, ip, r0
   17710:	and	ip, r4, #292	; 0x124
   17714:	cmp	ip, #0
   17718:	moveq	ip, #146	; 0x92
   1771c:	movne	ip, r8
   17720:	moveq	fp, #0
   17724:	movne	fp, #292	; 0x124
   17728:	tst	r4, #146	; 0x92
   1772c:	movne	fp, ip
   17730:	tst	r4, #73	; 0x49
   17734:	moveq	ip, #0
   17738:	movne	ip, #73	; 0x49
   1773c:	orr	ip, ip, fp
   17740:	orr	ip, ip, r4
   17744:	ldrb	r4, [r3, #-16]
   17748:	cmp	lr, #0
   1774c:	movne	fp, lr
   17750:	moveq	fp, r2
   17754:	bic	ip, ip, sl
   17758:	cmp	r4, #45	; 0x2d
   1775c:	and	ip, ip, fp
   17760:	beq	177e8 <lchmod@@Base+0x61c>
   17764:	cmp	r4, #61	; 0x3d
   17768:	beq	177b0 <lchmod@@Base+0x5e4>
   1776c:	cmp	r4, #43	; 0x2b
   17770:	orreq	r5, r5, ip
   17774:	orreq	r0, r0, ip
   17778:	add	r3, r3, #16
   1777c:	ldrb	r4, [r3, #-15]
   17780:	cmp	r4, #0
   17784:	beq	177dc <lchmod@@Base+0x610>
   17788:	ldr	lr, [r3, #-4]
   1778c:	cmp	r4, #2
   17790:	bic	sl, r6, lr
   17794:	ldr	ip, [r3, #-8]
   17798:	ldr	lr, [r3, #-12]
   1779c:	bne	17704 <lchmod@@Base+0x538>
   177a0:	and	r4, r0, #73	; 0x49
   177a4:	orrs	r4, r4, r1
   177a8:	orrne	ip, ip, #73	; 0x49
   177ac:	b	17744 <lchmod@@Base+0x578>
   177b0:	add	r3, r3, #16
   177b4:	cmp	lr, #0
   177b8:	ldrb	r4, [r3, #-15]
   177bc:	mvnne	lr, lr
   177c0:	orr	lr, lr, sl
   177c4:	and	r0, r0, lr
   177c8:	cmp	r4, #0
   177cc:	bic	lr, r7, lr
   177d0:	orr	r0, ip, r0
   177d4:	orr	r5, r5, lr
   177d8:	bne	17788 <lchmod@@Base+0x5bc>
   177dc:	cmp	r9, #0
   177e0:	strne	r5, [r9]
   177e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177e8:	orr	r5, r5, ip
   177ec:	bic	r0, r0, ip
   177f0:	b	17778 <lchmod@@Base+0x5ac>
   177f4:	mov	r5, r4
   177f8:	b	177dc <lchmod@@Base+0x610>
   177fc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17800:			; <UNDEFINED> instruction: 0x000001b6
   17804:	push	{r2, r3}
   17808:	push	{lr}		; (str lr, [sp, #-4]!)
   1780c:	sub	sp, sp, #12
   17810:	ldr	r2, [sp, #16]
   17814:	ands	r3, r2, #64	; 0x40
   17818:	addne	r3, sp, #20
   1781c:	strne	r3, [sp, #4]
   17820:	ldrne	r3, [sp, #20]
   17824:	bl	11670 <openat64@plt>
   17828:	bl	1bb94 <lchmod@@Base+0x49c8>
   1782c:	add	sp, sp, #12
   17830:	pop	{lr}		; (ldr lr, [sp], #4)
   17834:	add	sp, sp, #8
   17838:	bx	lr
   1783c:	orr	r2, r2, #540672	; 0x84000
   17840:	push	{r4, r5, r6, lr}
   17844:	orr	r2, r2, #2304	; 0x900
   17848:	mov	r6, r3
   1784c:	bl	17804 <lchmod@@Base+0x638>
   17850:	subs	r5, r0, #0
   17854:	blt	17888 <lchmod@@Base+0x6bc>
   17858:	bl	1173c <fdopendir@plt>
   1785c:	subs	r4, r0, #0
   17860:	beq	17870 <lchmod@@Base+0x6a4>
   17864:	str	r5, [r6]
   17868:	mov	r0, r4
   1786c:	pop	{r4, r5, r6, pc}
   17870:	bl	11688 <__errno_location@plt>
   17874:	mov	r6, r0
   17878:	mov	r0, r5
   1787c:	ldr	r5, [r6]
   17880:	bl	117e4 <close@plt>
   17884:	b	17864 <lchmod@@Base+0x698>
   17888:	mov	r4, #0
   1788c:	b	17868 <lchmod@@Base+0x69c>
   17890:	push	{r4, r5, r6, lr}
   17894:	subs	r4, r0, #0
   17898:	beq	1790c <lchmod@@Base+0x740>
   1789c:	mov	r1, #47	; 0x2f
   178a0:	bl	11718 <strrchr@plt>
   178a4:	subs	r5, r0, #0
   178a8:	beq	178f8 <lchmod@@Base+0x72c>
   178ac:	add	r6, r5, #1
   178b0:	sub	r3, r6, r4
   178b4:	cmp	r3, #6
   178b8:	ble	178f8 <lchmod@@Base+0x72c>
   178bc:	mov	r2, #7
   178c0:	ldr	r1, [pc, #96]	; 17928 <lchmod@@Base+0x75c>
   178c4:	sub	r0, r5, #6
   178c8:	bl	117cc <strncmp@plt>
   178cc:	cmp	r0, #0
   178d0:	bne	178f8 <lchmod@@Base+0x72c>
   178d4:	mov	r2, #3
   178d8:	ldr	r1, [pc, #76]	; 1792c <lchmod@@Base+0x760>
   178dc:	mov	r0, r6
   178e0:	bl	117cc <strncmp@plt>
   178e4:	cmp	r0, #0
   178e8:	movne	r4, r6
   178ec:	ldreq	r3, [pc, #60]	; 17930 <lchmod@@Base+0x764>
   178f0:	addeq	r4, r5, #4
   178f4:	streq	r4, [r3]
   178f8:	ldr	r2, [pc, #52]	; 17934 <lchmod@@Base+0x768>
   178fc:	ldr	r3, [pc, #52]	; 17938 <lchmod@@Base+0x76c>
   17900:	str	r4, [r2]
   17904:	str	r4, [r3]
   17908:	pop	{r4, r5, r6, pc}
   1790c:	ldr	r3, [pc, #40]	; 1793c <lchmod@@Base+0x770>
   17910:	mov	r2, #55	; 0x37
   17914:	mov	r1, #1
   17918:	ldr	r3, [r3]
   1791c:	ldr	r0, [pc, #28]	; 17940 <lchmod@@Base+0x774>
   17920:	bl	11568 <fwrite@plt>
   17924:	bl	117d8 <abort@plt>
   17928:			; <UNDEFINED> instruction: 0x0001e2bc
   1792c:	andeq	lr, r1, r4, asr #5
   17930:	andeq	pc, r2, r8, asr #3
   17934:	strdeq	pc, [r2], -r0
   17938:	andeq	pc, r2, ip, asr #3
   1793c:	ldrdeq	pc, [r2], -r8
   17940:	andeq	lr, r1, r4, lsl #5
   17944:	push	{r4, r5, r6, lr}
   17948:	mov	r4, r0
   1794c:	mov	r5, r1
   17950:	bl	1d3e4 <lchmod@@Base+0x6218>
   17954:	ldrb	r3, [r0]
   17958:	bic	r3, r3, #32
   1795c:	cmp	r3, #85	; 0x55
   17960:	bne	179c0 <lchmod@@Base+0x7f4>
   17964:	ldrb	r3, [r0, #1]
   17968:	bic	r3, r3, #32
   1796c:	cmp	r3, #84	; 0x54
   17970:	bne	179fc <lchmod@@Base+0x830>
   17974:	ldrb	r3, [r0, #2]
   17978:	bic	r3, r3, #32
   1797c:	cmp	r3, #70	; 0x46
   17980:	bne	179fc <lchmod@@Base+0x830>
   17984:	ldrb	r3, [r0, #3]
   17988:	cmp	r3, #45	; 0x2d
   1798c:	bne	179fc <lchmod@@Base+0x830>
   17990:	ldrb	r3, [r0, #4]
   17994:	cmp	r3, #56	; 0x38
   17998:	bne	179fc <lchmod@@Base+0x830>
   1799c:	ldrb	r3, [r0, #5]
   179a0:	cmp	r3, #0
   179a4:	bne	179fc <lchmod@@Base+0x830>
   179a8:	ldrb	r2, [r4]
   179ac:	ldr	r3, [pc, #152]	; 17a4c <lchmod@@Base+0x880>
   179b0:	ldr	r0, [pc, #152]	; 17a50 <lchmod@@Base+0x884>
   179b4:	cmp	r2, #96	; 0x60
   179b8:	movne	r0, r3
   179bc:	pop	{r4, r5, r6, pc}
   179c0:	cmp	r3, #71	; 0x47
   179c4:	bne	179fc <lchmod@@Base+0x830>
   179c8:	ldrb	r3, [r0, #1]
   179cc:	bic	r3, r3, #32
   179d0:	cmp	r3, #66	; 0x42
   179d4:	bne	179fc <lchmod@@Base+0x830>
   179d8:	ldrb	r3, [r0, #2]
   179dc:	cmp	r3, #49	; 0x31
   179e0:	bne	179fc <lchmod@@Base+0x830>
   179e4:	ldrb	r3, [r0, #3]
   179e8:	cmp	r3, #56	; 0x38
   179ec:	bne	179fc <lchmod@@Base+0x830>
   179f0:	ldrb	r3, [r0, #4]
   179f4:	cmp	r3, #48	; 0x30
   179f8:	beq	17a10 <lchmod@@Base+0x844>
   179fc:	ldr	r3, [pc, #80]	; 17a54 <lchmod@@Base+0x888>
   17a00:	cmp	r5, #9
   17a04:	ldr	r0, [pc, #76]	; 17a58 <lchmod@@Base+0x88c>
   17a08:	movne	r0, r3
   17a0c:	pop	{r4, r5, r6, pc}
   17a10:	ldrb	r3, [r0, #5]
   17a14:	cmp	r3, #51	; 0x33
   17a18:	bne	179fc <lchmod@@Base+0x830>
   17a1c:	ldrb	r3, [r0, #6]
   17a20:	cmp	r3, #48	; 0x30
   17a24:	bne	179fc <lchmod@@Base+0x830>
   17a28:	ldrb	r3, [r0, #7]
   17a2c:	cmp	r3, #0
   17a30:	bne	179fc <lchmod@@Base+0x830>
   17a34:	ldrb	r2, [r4]
   17a38:	ldr	r3, [pc, #28]	; 17a5c <lchmod@@Base+0x890>
   17a3c:	ldr	r0, [pc, #28]	; 17a60 <lchmod@@Base+0x894>
   17a40:	cmp	r2, #96	; 0x60
   17a44:	movne	r0, r3
   17a48:	pop	{r4, r5, r6, pc}
   17a4c:	andeq	lr, r1, r0, lsr #6
   17a50:	andeq	lr, r1, ip, lsl r3
   17a54:	andeq	lr, r1, r0, lsr r3
   17a58:	andeq	lr, r1, ip, lsr #6
   17a5c:	andeq	lr, r1, r8, lsr #6
   17a60:	andeq	lr, r1, r4, lsr #6
   17a64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a68:	sub	sp, sp, #140	; 0x8c
   17a6c:	mov	r9, r1
   17a70:	str	r3, [sp, #24]
   17a74:	mov	r3, #1
   17a78:	mov	sl, r0
   17a7c:	str	r2, [sp, #44]	; 0x2c
   17a80:	str	r3, [sp, #28]
   17a84:	bl	11580 <__ctype_get_mb_cur_max@plt>
   17a88:	ldr	r3, [sp, #180]	; 0xb4
   17a8c:	mov	fp, r9
   17a90:	mov	r9, sl
   17a94:	lsr	r3, r3, #1
   17a98:	and	r3, r3, #1
   17a9c:	str	r3, [sp, #40]	; 0x28
   17aa0:	ldr	r3, [sp, #180]	; 0xb4
   17aa4:	mov	r2, #0
   17aa8:	and	r3, r3, #4
   17aac:	str	r3, [sp, #100]	; 0x64
   17ab0:	ldr	r3, [sp, #180]	; 0xb4
   17ab4:	str	r2, [sp, #76]	; 0x4c
   17ab8:	and	r3, r3, #1
   17abc:	str	r3, [sp, #96]	; 0x60
   17ac0:	str	r2, [sp, #36]	; 0x24
   17ac4:	str	r2, [sp, #56]	; 0x38
   17ac8:	str	r2, [sp, #68]	; 0x44
   17acc:	str	r2, [sp, #72]	; 0x48
   17ad0:	str	r2, [sp, #84]	; 0x54
   17ad4:	str	r0, [sp, #80]	; 0x50
   17ad8:	ldr	r3, [sp, #176]	; 0xb0
   17adc:	cmp	r3, #10
   17ae0:	ldrls	pc, [pc, r3, lsl #2]
   17ae4:	b	18cbc <lchmod@@Base+0x1af0>
   17ae8:	andeq	r7, r1, r4, lsl fp
   17aec:	andeq	r7, r1, r4, lsr lr
   17af0:	andeq	r7, r1, ip, lsl #31
   17af4:	andeq	r7, r1, r8, ror #28
   17af8:	andeq	r7, r1, r0, ror #31
   17afc:	andeq	r7, r1, r0, asr #31
   17b00:	andeq	r7, r1, r8, lsl #29
   17b04:	andeq	r7, r1, ip, lsr #29
   17b08:	ldrdeq	r7, [r1], -r4
   17b0c:	ldrdeq	r7, [r1], -r4
   17b10:	ldrdeq	r7, [r1], -r4
   17b14:	mov	r3, #0
   17b18:	ldr	r1, [sp, #56]	; 0x38
   17b1c:	ldr	r2, [sp, #176]	; 0xb0
   17b20:	ldr	lr, [sp, #176]	; 0xb0
   17b24:	mov	r8, r3
   17b28:	mov	ip, r3
   17b2c:	str	r3, [sp, #40]	; 0x28
   17b30:	mov	r3, r1
   17b34:	cmp	r2, #2
   17b38:	moveq	r3, #0
   17b3c:	andne	r3, r3, #1
   17b40:	mov	r0, r3
   17b44:	str	r3, [sp, #92]	; 0x5c
   17b48:	ldr	r3, [sp, #68]	; 0x44
   17b4c:	sub	lr, lr, #2
   17b50:	adds	r2, r3, #0
   17b54:	movne	r2, #1
   17b58:	and	r3, r1, ip
   17b5c:	and	r3, r2, r3
   17b60:	clz	lr, lr
   17b64:	str	r3, [sp, #88]	; 0x58
   17b68:	lsr	lr, lr, #5
   17b6c:	mov	r3, ip
   17b70:	and	r3, r3, lr
   17b74:	mov	sl, #0
   17b78:	and	r0, r2, r0
   17b7c:	str	r3, [sp, #64]	; 0x40
   17b80:	eor	r3, r1, #1
   17b84:	str	lr, [sp, #52]	; 0x34
   17b88:	str	r0, [sp, #48]	; 0x30
   17b8c:	str	r3, [sp, #60]	; 0x3c
   17b90:	ldr	r3, [sp, #24]
   17b94:	cmn	r3, #1
   17b98:	beq	180c8 <lchmod@@Base+0xefc>
   17b9c:	subs	r7, r3, sl
   17ba0:	movne	r7, #1
   17ba4:	cmp	r7, #0
   17ba8:	beq	180e0 <lchmod@@Base+0xf14>
   17bac:	ldr	r3, [sp, #48]	; 0x30
   17bb0:	cmp	r3, #0
   17bb4:	beq	1844c <lchmod@@Base+0x1280>
   17bb8:	ldr	r2, [sp, #68]	; 0x44
   17bbc:	ldr	r1, [sp, #24]
   17bc0:	cmp	r2, #1
   17bc4:	mov	r3, r2
   17bc8:	movls	r3, #0
   17bcc:	movhi	r3, #1
   17bd0:	cmn	r1, #1
   17bd4:	movne	r3, #0
   17bd8:	cmp	r3, #0
   17bdc:	add	r4, sl, r2
   17be0:	beq	17bf0 <lchmod@@Base+0xa24>
   17be4:	ldr	r0, [sp, #44]	; 0x2c
   17be8:	bl	11658 <strlen@plt>
   17bec:	str	r0, [sp, #24]
   17bf0:	ldr	r3, [sp, #24]
   17bf4:	cmp	r3, r4
   17bf8:	ldr	r3, [sp, #44]	; 0x2c
   17bfc:	add	r5, r3, sl
   17c00:	bcc	18454 <lchmod@@Base+0x1288>
   17c04:	mov	r0, r5
   17c08:	ldr	r2, [sp, #68]	; 0x44
   17c0c:	ldr	r1, [sp, #72]	; 0x48
   17c10:	bl	114d8 <memcmp@plt>
   17c14:	cmp	r0, #0
   17c18:	bne	18454 <lchmod@@Base+0x1288>
   17c1c:	ldr	r3, [sp, #40]	; 0x28
   17c20:	cmp	r3, #0
   17c24:	bne	18e10 <lchmod@@Base+0x1c44>
   17c28:	ldrb	r4, [r5]
   17c2c:	cmp	r4, #126	; 0x7e
   17c30:	ldrls	pc, [pc, r4, lsl #2]
   17c34:	b	18d4c <lchmod@@Base+0x1b80>
   17c38:	andeq	r8, r1, ip, lsl #6
   17c3c:	andeq	r8, r1, ip, asr #26
   17c40:	andeq	r8, r1, ip, asr #26
   17c44:	andeq	r8, r1, ip, asr #26
   17c48:	andeq	r8, r1, ip, asr #26
   17c4c:	andeq	r8, r1, ip, asr #26
   17c50:	andeq	r8, r1, ip, asr #26
   17c54:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17c58:	andeq	r8, r1, r4, ror #5
   17c5c:	andeq	r8, r1, r0, asr #5
   17c60:	andeq	r8, r1, r0, lsr #5
   17c64:	ldrdeq	r8, [r1], -r0
   17c68:	andeq	r8, r1, r8, lsl #4
   17c6c:	andeq	r8, r1, ip, lsr r4
   17c70:	andeq	r8, r1, ip, asr #26
   17c74:	andeq	r8, r1, ip, asr #26
   17c78:	andeq	r8, r1, ip, asr #26
   17c7c:	andeq	r8, r1, ip, asr #26
   17c80:	andeq	r8, r1, ip, asr #26
   17c84:	andeq	r8, r1, ip, asr #26
   17c88:	andeq	r8, r1, ip, asr #26
   17c8c:	andeq	r8, r1, ip, asr #26
   17c90:	andeq	r8, r1, ip, asr #26
   17c94:	andeq	r8, r1, ip, asr #26
   17c98:	andeq	r8, r1, ip, asr #26
   17c9c:	andeq	r8, r1, ip, asr #26
   17ca0:	andeq	r8, r1, ip, asr #26
   17ca4:	andeq	r8, r1, ip, asr #26
   17ca8:	andeq	r8, r1, ip, asr #26
   17cac:	andeq	r8, r1, ip, asr #26
   17cb0:	andeq	r8, r1, ip, asr #26
   17cb4:	andeq	r8, r1, ip, asr #26
   17cb8:	andeq	r8, r1, ip, lsr #8
   17cbc:	andeq	r8, r1, ip, lsl #8
   17cc0:	andeq	r8, r1, ip, lsl #8
   17cc4:	andeq	r8, r1, ip, ror #7
   17cc8:	andeq	r8, r1, ip, lsl #8
   17ccc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cd0:	andeq	r8, r1, ip, lsl #8
   17cd4:	ldrdeq	r8, [r1], -r4
   17cd8:	andeq	r8, r1, ip, lsl #8
   17cdc:	andeq	r8, r1, ip, lsl #8
   17ce0:	andeq	r8, r1, ip, lsl #8
   17ce4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17ce8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cec:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cf0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cf4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cf8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cfc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d00:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d04:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d08:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d0c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d10:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d14:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d18:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d1c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d20:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d24:	andeq	r8, r1, ip, lsl #8
   17d28:	andeq	r8, r1, ip, lsl #8
   17d2c:	andeq	r8, r1, ip, lsl #8
   17d30:	andeq	r8, r1, ip, lsl #8
   17d34:	andeq	r8, r1, r4, lsl #3
   17d38:	andeq	r8, r1, ip, asr #26
   17d3c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d40:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d44:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d48:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d4c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d50:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d54:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d58:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d5c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d60:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d64:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d68:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d6c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d70:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d74:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d78:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d7c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d80:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d84:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d88:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d8c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d90:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d94:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d98:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d9c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17da0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17da4:	andeq	r8, r1, ip, lsl #8
   17da8:	andeq	r8, r1, r0, asr r1
   17dac:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17db0:	andeq	r8, r1, ip, lsl #8
   17db4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17db8:	andeq	r8, r1, ip, lsl #8
   17dbc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dc0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dc4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dc8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dcc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dd0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dd4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dd8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17ddc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17de0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17de4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17de8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dec:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17df0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17df4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17df8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dfc:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e00:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e04:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e08:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e0c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e10:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e14:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e18:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e1c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e20:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e24:	andeq	r8, r1, r8
   17e28:	andeq	r8, r1, ip, lsl #8
   17e2c:	andeq	r8, r1, r8
   17e30:	andeq	r8, r1, ip, ror #7
   17e34:	mov	r3, #1
   17e38:	str	r3, [sp, #40]	; 0x28
   17e3c:	str	r3, [sp, #68]	; 0x44
   17e40:	mov	r8, #0
   17e44:	ldr	r3, [pc, #4056]	; 18e24 <lchmod@@Base+0x1c58>
   17e48:	str	r3, [sp, #72]	; 0x48
   17e4c:	mov	r3, #2
   17e50:	str	r3, [sp, #176]	; 0xb0
   17e54:	ldr	r1, [sp, #56]	; 0x38
   17e58:	mov	r2, r3
   17e5c:	ldr	ip, [sp, #40]	; 0x28
   17e60:	mov	lr, r3
   17e64:	b	17b30 <lchmod@@Base+0x964>
   17e68:	mov	r3, #1
   17e6c:	str	r3, [sp, #56]	; 0x38
   17e70:	str	r3, [sp, #68]	; 0x44
   17e74:	str	r3, [sp, #40]	; 0x28
   17e78:	ldr	r3, [pc, #4004]	; 18e24 <lchmod@@Base+0x1c58>
   17e7c:	mov	r8, #0
   17e80:	str	r3, [sp, #72]	; 0x48
   17e84:	b	17e4c <lchmod@@Base+0xc80>
   17e88:	mov	r3, #1
   17e8c:	str	r3, [sp, #56]	; 0x38
   17e90:	str	r3, [sp, #68]	; 0x44
   17e94:	str	r3, [sp, #40]	; 0x28
   17e98:	ldr	r3, [pc, #3976]	; 18e28 <lchmod@@Base+0x1c5c>
   17e9c:	mov	r8, #0
   17ea0:	str	r3, [sp, #72]	; 0x48
   17ea4:	mov	r3, #5
   17ea8:	b	17e50 <lchmod@@Base+0xc84>
   17eac:	mov	r3, #0
   17eb0:	str	r3, [sp, #40]	; 0x28
   17eb4:	mov	r3, #1
   17eb8:	str	r3, [sp, #56]	; 0x38
   17ebc:	mov	r8, #0
   17ec0:	mov	r1, r3
   17ec4:	ldr	r2, [sp, #176]	; 0xb0
   17ec8:	ldr	ip, [sp, #40]	; 0x28
   17ecc:	ldr	lr, [sp, #176]	; 0xb0
   17ed0:	b	17b30 <lchmod@@Base+0x964>
   17ed4:	ldr	r3, [sp, #176]	; 0xb0
   17ed8:	cmp	r3, #10
   17edc:	beq	17f20 <lchmod@@Base+0xd54>
   17ee0:	mov	r2, #5
   17ee4:	ldr	r1, [pc, #3904]	; 18e2c <lchmod@@Base+0x1c60>
   17ee8:	mov	r0, #0
   17eec:	bl	114f0 <dcgettext@plt>
   17ef0:	ldr	r2, [pc, #3892]	; 18e2c <lchmod@@Base+0x1c60>
   17ef4:	cmp	r0, r2
   17ef8:	str	r0, [sp, #188]	; 0xbc
   17efc:	beq	18fb8 <lchmod@@Base+0x1dec>
   17f00:	mov	r2, #5
   17f04:	ldr	r1, [pc, #3864]	; 18e24 <lchmod@@Base+0x1c58>
   17f08:	mov	r0, #0
   17f0c:	bl	114f0 <dcgettext@plt>
   17f10:	ldr	r2, [pc, #3852]	; 18e24 <lchmod@@Base+0x1c58>
   17f14:	cmp	r0, r2
   17f18:	str	r0, [sp, #192]	; 0xc0
   17f1c:	beq	18fa8 <lchmod@@Base+0x1ddc>
   17f20:	ldr	r8, [sp, #40]	; 0x28
   17f24:	cmp	r8, #0
   17f28:	movne	r8, #0
   17f2c:	bne	17f5c <lchmod@@Base+0xd90>
   17f30:	ldr	r3, [sp, #188]	; 0xbc
   17f34:	ldrb	r3, [r3]
   17f38:	cmp	r3, #0
   17f3c:	beq	17f5c <lchmod@@Base+0xd90>
   17f40:	ldr	r2, [sp, #188]	; 0xbc
   17f44:	cmp	fp, r8
   17f48:	strbhi	r3, [r9, r8]
   17f4c:	ldrb	r3, [r2, #1]!
   17f50:	add	r8, r8, #1
   17f54:	cmp	r3, #0
   17f58:	bne	17f44 <lchmod@@Base+0xd78>
   17f5c:	ldr	r0, [sp, #192]	; 0xc0
   17f60:	bl	11658 <strlen@plt>
   17f64:	ldr	r3, [sp, #192]	; 0xc0
   17f68:	ldr	r2, [sp, #176]	; 0xb0
   17f6c:	str	r3, [sp, #72]	; 0x48
   17f70:	mov	r3, #1
   17f74:	str	r3, [sp, #56]	; 0x38
   17f78:	mov	r1, r3
   17f7c:	ldr	ip, [sp, #40]	; 0x28
   17f80:	ldr	lr, [sp, #176]	; 0xb0
   17f84:	str	r0, [sp, #68]	; 0x44
   17f88:	b	17b30 <lchmod@@Base+0x964>
   17f8c:	ldr	r3, [sp, #40]	; 0x28
   17f90:	cmp	r3, #0
   17f94:	beq	18c3c <lchmod@@Base+0x1a70>
   17f98:	mov	r3, #1
   17f9c:	str	r3, [sp, #68]	; 0x44
   17fa0:	ldr	r3, [pc, #3708]	; 18e24 <lchmod@@Base+0x1c58>
   17fa4:	str	r3, [sp, #72]	; 0x48
   17fa8:	mov	r8, #0
   17fac:	ldr	r1, [sp, #56]	; 0x38
   17fb0:	ldr	r2, [sp, #176]	; 0xb0
   17fb4:	ldr	ip, [sp, #40]	; 0x28
   17fb8:	ldr	lr, [sp, #176]	; 0xb0
   17fbc:	b	17b30 <lchmod@@Base+0x964>
   17fc0:	ldr	r3, [sp, #40]	; 0x28
   17fc4:	cmp	r3, #0
   17fc8:	beq	18cc0 <lchmod@@Base+0x1af4>
   17fcc:	str	r3, [sp, #56]	; 0x38
   17fd0:	mov	r3, #1
   17fd4:	str	r3, [sp, #68]	; 0x44
   17fd8:	ldr	r3, [pc, #3656]	; 18e28 <lchmod@@Base+0x1c5c>
   17fdc:	b	17fa4 <lchmod@@Base+0xdd8>
   17fe0:	ldr	r3, [sp, #40]	; 0x28
   17fe4:	cmp	r3, #0
   17fe8:	mov	r3, #1
   17fec:	streq	r3, [sp, #56]	; 0x38
   17ff0:	beq	18c3c <lchmod@@Base+0x1a70>
   17ff4:	str	r3, [sp, #68]	; 0x44
   17ff8:	ldr	r3, [pc, #3620]	; 18e24 <lchmod@@Base+0x1c58>
   17ffc:	mov	r8, #0
   18000:	str	r3, [sp, #72]	; 0x48
   18004:	b	17e4c <lchmod@@Base+0xc80>
   18008:	ldr	r3, [sp, #24]
   1800c:	ldr	r6, [sp, #48]	; 0x30
   18010:	cmn	r3, #1
   18014:	beq	18670 <lchmod@@Base+0x14a4>
   18018:	subs	r3, r3, #1
   1801c:	movne	r3, #1
   18020:	cmp	r3, #0
   18024:	beq	183f0 <lchmod@@Base+0x1224>
   18028:	ldr	r1, [sp, #52]	; 0x34
   1802c:	mov	r7, r3
   18030:	mov	r3, #0
   18034:	str	r3, [sp, #32]
   18038:	ldr	r3, [sp, #60]	; 0x3c
   1803c:	orr	r2, r1, r3
   18040:	ldr	r3, [sp, #40]	; 0x28
   18044:	eor	r2, r2, #1
   18048:	orr	r2, r3, r2
   1804c:	tst	r2, #255	; 0xff
   18050:	bne	18974 <lchmod@@Base+0x17a8>
   18054:	cmp	r6, #0
   18058:	bne	18234 <lchmod@@Base+0x1068>
   1805c:	ldr	r3, [sp, #36]	; 0x24
   18060:	add	sl, sl, #1
   18064:	and	r3, r3, r7
   18068:	uxtb	r6, r3
   1806c:	cmp	r6, #0
   18070:	beq	1809c <lchmod@@Base+0xed0>
   18074:	cmp	fp, r8
   18078:	movhi	r3, #39	; 0x27
   1807c:	strbhi	r3, [r9, r8]
   18080:	add	r3, r8, #1
   18084:	cmp	fp, r3
   18088:	movhi	r2, #39	; 0x27
   1808c:	add	r8, r8, #2
   18090:	strbhi	r2, [r9, r3]
   18094:	mov	r3, #0
   18098:	str	r3, [sp, #36]	; 0x24
   1809c:	ldr	r2, [sp, #32]
   180a0:	cmp	r8, fp
   180a4:	ldr	r3, [sp, #28]
   180a8:	strbcc	r4, [r9, r8]
   180ac:	cmp	r2, #0
   180b0:	moveq	r3, #0
   180b4:	str	r3, [sp, #28]
   180b8:	ldr	r3, [sp, #24]
   180bc:	add	r8, r8, #1
   180c0:	cmn	r3, #1
   180c4:	bne	17b9c <lchmod@@Base+0x9d0>
   180c8:	ldr	r3, [sp, #44]	; 0x2c
   180cc:	ldrb	r3, [r3, sl]
   180d0:	adds	r7, r3, #0
   180d4:	movne	r7, #1
   180d8:	cmp	r7, #0
   180dc:	bne	17bac <lchmod@@Base+0x9e0>
   180e0:	ldr	r3, [sp, #64]	; 0x40
   180e4:	cmp	r8, #0
   180e8:	movne	r3, #0
   180ec:	andeq	r3, r3, #1
   180f0:	cmp	r3, #0
   180f4:	str	r3, [sp, #64]	; 0x40
   180f8:	bne	18b9c <lchmod@@Base+0x19d0>
   180fc:	ldr	r3, [sp, #40]	; 0x28
   18100:	ldr	r2, [sp, #52]	; 0x34
   18104:	eor	r3, r3, #1
   18108:	ands	r2, r2, r3
   1810c:	beq	18fc8 <lchmod@@Base+0x1dfc>
   18110:	ldr	r3, [sp, #76]	; 0x4c
   18114:	cmp	r3, #0
   18118:	beq	18f98 <lchmod@@Base+0x1dcc>
   1811c:	ldr	r3, [sp, #28]
   18120:	cmp	r3, #0
   18124:	bne	18f54 <lchmod@@Base+0x1d88>
   18128:	ldr	r2, [sp, #84]	; 0x54
   1812c:	clz	r3, fp
   18130:	cmp	r2, #0
   18134:	lsr	r3, r3, #5
   18138:	moveq	r3, #0
   1813c:	cmp	r3, #0
   18140:	beq	18ef4 <lchmod@@Base+0x1d28>
   18144:	mov	fp, r2
   18148:	str	r3, [sp, #76]	; 0x4c
   1814c:	b	17ad8 <lchmod@@Base+0x90c>
   18150:	ldr	r3, [sp, #176]	; 0xb0
   18154:	ldr	r6, [sp, #48]	; 0x30
   18158:	cmp	r3, #2
   1815c:	beq	18694 <lchmod@@Base+0x14c8>
   18160:	ldr	r3, [sp, #88]	; 0x58
   18164:	cmp	r3, #0
   18168:	beq	18c18 <lchmod@@Base+0x1a4c>
   1816c:	mov	r3, #0
   18170:	add	sl, sl, #1
   18174:	ldr	r6, [sp, #36]	; 0x24
   18178:	str	r3, [sp, #32]
   1817c:	mov	r4, #92	; 0x5c
   18180:	b	1806c <lchmod@@Base+0xea0>
   18184:	ldr	r3, [sp, #176]	; 0xb0
   18188:	ldr	r6, [sp, #48]	; 0x30
   1818c:	cmp	r3, #2
   18190:	beq	186c4 <lchmod@@Base+0x14f8>
   18194:	cmp	r3, #5
   18198:	bne	18c28 <lchmod@@Base+0x1a5c>
   1819c:	ldr	r3, [sp, #100]	; 0x64
   181a0:	cmp	r3, #0
   181a4:	beq	18c8c <lchmod@@Base+0x1ac0>
   181a8:	ldr	r2, [sp, #24]
   181ac:	add	r3, sl, #2
   181b0:	cmp	r2, r3
   181b4:	bls	181c4 <lchmod@@Base+0xff8>
   181b8:	ldrb	r4, [r5, #1]
   181bc:	cmp	r4, #63	; 0x3f
   181c0:	beq	18e34 <lchmod@@Base+0x1c68>
   181c4:	mov	r1, #0
   181c8:	str	r1, [sp, #32]
   181cc:	mov	r4, #63	; 0x3f
   181d0:	b	18038 <lchmod@@Base+0xe6c>
   181d4:	ldr	r3, [sp, #176]	; 0xb0
   181d8:	ldr	r6, [sp, #48]	; 0x30
   181dc:	cmp	r3, #2
   181e0:	beq	186f0 <lchmod@@Base+0x1524>
   181e4:	str	r7, [sp, #32]
   181e8:	str	r7, [sp, #76]	; 0x4c
   181ec:	mov	r1, #0
   181f0:	mov	r4, #39	; 0x27
   181f4:	b	18038 <lchmod@@Base+0xe6c>
   181f8:	ldr	r6, [sp, #48]	; 0x30
   181fc:	ldr	r1, [sp, #52]	; 0x34
   18200:	str	r7, [sp, #32]
   18204:	b	18038 <lchmod@@Base+0xe6c>
   18208:	ldr	r6, [sp, #48]	; 0x30
   1820c:	ldr	r1, [sp, #52]	; 0x34
   18210:	mov	r4, #12
   18214:	mov	r3, #102	; 0x66
   18218:	ldr	r2, [sp, #56]	; 0x38
   1821c:	cmp	r2, #0
   18220:	streq	r2, [sp, #32]
   18224:	beq	18038 <lchmod@@Base+0xe6c>
   18228:	mov	r4, r3
   1822c:	mov	r3, #0
   18230:	str	r3, [sp, #32]
   18234:	ldr	r3, [sp, #40]	; 0x28
   18238:	cmp	r3, #0
   1823c:	bne	189ac <lchmod@@Base+0x17e0>
   18240:	ldr	r3, [sp, #36]	; 0x24
   18244:	eor	r3, r3, #1
   18248:	and	r3, r3, r1
   1824c:	ands	r3, r3, #255	; 0xff
   18250:	beq	18288 <lchmod@@Base+0x10bc>
   18254:	cmp	fp, r8
   18258:	movhi	r2, #39	; 0x27
   1825c:	strbhi	r2, [r9, r8]
   18260:	add	r2, r8, #1
   18264:	cmp	fp, r2
   18268:	movhi	r1, #36	; 0x24
   1826c:	strbhi	r1, [r9, r2]
   18270:	add	r2, r8, #2
   18274:	cmp	fp, r2
   18278:	add	r8, r8, #3
   1827c:	movhi	r1, #39	; 0x27
   18280:	strbhi	r1, [r9, r2]
   18284:	str	r3, [sp, #36]	; 0x24
   18288:	cmp	fp, r8
   1828c:	movhi	r3, #92	; 0x5c
   18290:	strbhi	r3, [r9, r8]
   18294:	add	sl, sl, #1
   18298:	add	r8, r8, #1
   1829c:	b	1809c <lchmod@@Base+0xed0>
   182a0:	ldr	r6, [sp, #48]	; 0x30
   182a4:	mov	r4, #10
   182a8:	mov	r3, #110	; 0x6e
   182ac:	ldr	r2, [sp, #64]	; 0x40
   182b0:	cmp	r2, #0
   182b4:	bne	18d34 <lchmod@@Base+0x1b68>
   182b8:	ldr	r1, [sp, #52]	; 0x34
   182bc:	b	18218 <lchmod@@Base+0x104c>
   182c0:	ldr	r6, [sp, #48]	; 0x30
   182c4:	ldr	r1, [sp, #52]	; 0x34
   182c8:	mov	r3, #116	; 0x74
   182cc:	b	18218 <lchmod@@Base+0x104c>
   182d0:	ldr	r6, [sp, #48]	; 0x30
   182d4:	ldr	r1, [sp, #52]	; 0x34
   182d8:	mov	r4, #11
   182dc:	mov	r3, #118	; 0x76
   182e0:	b	18218 <lchmod@@Base+0x104c>
   182e4:	ldr	r6, [sp, #48]	; 0x30
   182e8:	ldr	r1, [sp, #52]	; 0x34
   182ec:	mov	r4, #8
   182f0:	mov	r3, #98	; 0x62
   182f4:	b	18218 <lchmod@@Base+0x104c>
   182f8:	ldr	r6, [sp, #48]	; 0x30
   182fc:	ldr	r1, [sp, #52]	; 0x34
   18300:	mov	r4, #7
   18304:	mov	r3, #97	; 0x61
   18308:	b	18218 <lchmod@@Base+0x104c>
   1830c:	ldr	r3, [sp, #56]	; 0x38
   18310:	ldr	r6, [sp, #48]	; 0x30
   18314:	cmp	r3, #0
   18318:	beq	187dc <lchmod@@Base+0x1610>
   1831c:	ldr	r3, [sp, #40]	; 0x28
   18320:	cmp	r3, #0
   18324:	bne	18e10 <lchmod@@Base+0x1c44>
   18328:	ldr	r3, [sp, #36]	; 0x24
   1832c:	ldr	r2, [sp, #52]	; 0x34
   18330:	eor	r3, r3, #1
   18334:	ands	r3, r2, r3
   18338:	moveq	r2, r8
   1833c:	beq	18374 <lchmod@@Base+0x11a8>
   18340:	cmp	fp, r8
   18344:	movhi	r2, #39	; 0x27
   18348:	strbhi	r2, [r9, r8]
   1834c:	add	r2, r8, #1
   18350:	cmp	fp, r2
   18354:	movhi	r1, #36	; 0x24
   18358:	strbhi	r1, [r9, r2]
   1835c:	add	r2, r8, #2
   18360:	cmp	fp, r2
   18364:	movhi	r1, #39	; 0x27
   18368:	strbhi	r1, [r9, r2]
   1836c:	add	r2, r8, #3
   18370:	str	r3, [sp, #36]	; 0x24
   18374:	cmp	fp, r2
   18378:	movhi	r3, #92	; 0x5c
   1837c:	strbhi	r3, [r9, r2]
   18380:	ldr	r3, [sp, #92]	; 0x5c
   18384:	add	r8, r2, #1
   18388:	cmp	r3, #0
   1838c:	beq	18d10 <lchmod@@Base+0x1b44>
   18390:	ldr	r1, [sp, #24]
   18394:	add	r3, sl, #1
   18398:	cmp	r1, r3
   1839c:	bls	183d4 <lchmod@@Base+0x1208>
   183a0:	ldr	r1, [sp, #44]	; 0x2c
   183a4:	ldrb	r3, [r1, r3]
   183a8:	sub	r3, r3, #48	; 0x30
   183ac:	cmp	r3, #9
   183b0:	bhi	183d4 <lchmod@@Base+0x1208>
   183b4:	cmp	fp, r8
   183b8:	movhi	r3, #48	; 0x30
   183bc:	strbhi	r3, [r9, r8]
   183c0:	add	r3, r2, #2
   183c4:	cmp	fp, r3
   183c8:	add	r8, r2, #3
   183cc:	movhi	r1, #48	; 0x30
   183d0:	strbhi	r1, [r9, r3]
   183d4:	ldr	r3, [sp, #40]	; 0x28
   183d8:	ldr	r1, [sp, #52]	; 0x34
   183dc:	mov	r7, r3
   183e0:	str	r3, [sp, #32]
   183e4:	mov	r4, #48	; 0x30
   183e8:	b	18038 <lchmod@@Base+0xe6c>
   183ec:	ldr	r6, [sp, #48]	; 0x30
   183f0:	cmp	sl, #0
   183f4:	streq	r7, [sp, #32]
   183f8:	beq	18418 <lchmod@@Base+0x124c>
   183fc:	mov	r3, #0
   18400:	ldr	r1, [sp, #52]	; 0x34
   18404:	str	r3, [sp, #32]
   18408:	b	18038 <lchmod@@Base+0xe6c>
   1840c:	ldr	r6, [sp, #48]	; 0x30
   18410:	mov	r3, #0
   18414:	str	r3, [sp, #32]
   18418:	ldr	r3, [sp, #64]	; 0x40
   1841c:	cmp	r3, #0
   18420:	bne	18b9c <lchmod@@Base+0x19d0>
   18424:	ldr	r1, [sp, #52]	; 0x34
   18428:	b	18038 <lchmod@@Base+0xe6c>
   1842c:	ldr	r3, [sp, #48]	; 0x30
   18430:	mov	r6, r3
   18434:	str	r3, [sp, #32]
   18438:	b	18418 <lchmod@@Base+0x124c>
   1843c:	ldr	r6, [sp, #48]	; 0x30
   18440:	mov	r4, #13
   18444:	mov	r3, #114	; 0x72
   18448:	b	182ac <lchmod@@Base+0x10e0>
   1844c:	ldr	r3, [sp, #44]	; 0x2c
   18450:	add	r5, r3, sl
   18454:	ldrb	r4, [r5]
   18458:	cmp	r4, #126	; 0x7e
   1845c:	ldrls	pc, [pc, r4, lsl #2]
   18460:	b	187fc <lchmod@@Base+0x1630>
   18464:	andeq	r8, r1, ip, asr #15
   18468:	strdeq	r8, [r1], -ip
   1846c:	strdeq	r8, [r1], -ip
   18470:	strdeq	r8, [r1], -ip
   18474:	strdeq	r8, [r1], -ip
   18478:	strdeq	r8, [r1], -ip
   1847c:	strdeq	r8, [r1], -ip
   18480:	andeq	r8, r1, r4, asr #15
   18484:			; <UNDEFINED> instruction: 0x000187bc
   18488:			; <UNDEFINED> instruction: 0x000187b0
   1848c:	andeq	r8, r1, r8, lsr #15
   18490:	andeq	r8, r1, r0, lsr #15
   18494:	muleq	r1, r8, r7
   18498:	muleq	r1, r0, r7
   1849c:	strdeq	r8, [r1], -ip
   184a0:	strdeq	r8, [r1], -ip
   184a4:	strdeq	r8, [r1], -ip
   184a8:	strdeq	r8, [r1], -ip
   184ac:	strdeq	r8, [r1], -ip
   184b0:	strdeq	r8, [r1], -ip
   184b4:	strdeq	r8, [r1], -ip
   184b8:	strdeq	r8, [r1], -ip
   184bc:	strdeq	r8, [r1], -ip
   184c0:	strdeq	r8, [r1], -ip
   184c4:	strdeq	r8, [r1], -ip
   184c8:	strdeq	r8, [r1], -ip
   184cc:	strdeq	r8, [r1], -ip
   184d0:	strdeq	r8, [r1], -ip
   184d4:	strdeq	r8, [r1], -ip
   184d8:	strdeq	r8, [r1], -ip
   184dc:	strdeq	r8, [r1], -ip
   184e0:	strdeq	r8, [r1], -ip
   184e4:	andeq	r8, r1, r4, lsl #15
   184e8:	andeq	r8, r1, ip, ror r7
   184ec:	andeq	r8, r1, ip, ror r7
   184f0:	andeq	r8, r1, r4, ror r7
   184f4:	andeq	r8, r1, ip, ror r7
   184f8:	andeq	r8, r1, ip, ror #14
   184fc:	andeq	r8, r1, ip, ror r7
   18500:	andeq	r8, r1, r0, ror #13
   18504:	andeq	r8, r1, ip, ror r7
   18508:	andeq	r8, r1, ip, ror r7
   1850c:	andeq	r8, r1, ip, ror r7
   18510:	andeq	r8, r1, ip, ror #14
   18514:	andeq	r8, r1, ip, ror #14
   18518:	andeq	r8, r1, ip, ror #14
   1851c:	andeq	r8, r1, ip, ror #14
   18520:	andeq	r8, r1, ip, ror #14
   18524:	andeq	r8, r1, ip, ror #14
   18528:	andeq	r8, r1, ip, ror #14
   1852c:	andeq	r8, r1, ip, ror #14
   18530:	andeq	r8, r1, ip, ror #14
   18534:	andeq	r8, r1, ip, ror #14
   18538:	andeq	r8, r1, ip, ror #14
   1853c:	andeq	r8, r1, ip, ror #14
   18540:	andeq	r8, r1, ip, ror #14
   18544:	andeq	r8, r1, ip, ror #14
   18548:	andeq	r8, r1, ip, ror #14
   1854c:	andeq	r8, r1, ip, ror #14
   18550:	andeq	r8, r1, ip, ror r7
   18554:	andeq	r8, r1, ip, ror r7
   18558:	andeq	r8, r1, ip, ror r7
   1855c:	andeq	r8, r1, ip, ror r7
   18560:			; <UNDEFINED> instruction: 0x000186b4
   18564:	strdeq	r8, [r1], -ip
   18568:	andeq	r8, r1, ip, ror #14
   1856c:	andeq	r8, r1, ip, ror #14
   18570:	andeq	r8, r1, ip, ror #14
   18574:	andeq	r8, r1, ip, ror #14
   18578:	andeq	r8, r1, ip, ror #14
   1857c:	andeq	r8, r1, ip, ror #14
   18580:	andeq	r8, r1, ip, ror #14
   18584:	andeq	r8, r1, ip, ror #14
   18588:	andeq	r8, r1, ip, ror #14
   1858c:	andeq	r8, r1, ip, ror #14
   18590:	andeq	r8, r1, ip, ror #14
   18594:	andeq	r8, r1, ip, ror #14
   18598:	andeq	r8, r1, ip, ror #14
   1859c:	andeq	r8, r1, ip, ror #14
   185a0:	andeq	r8, r1, ip, ror #14
   185a4:	andeq	r8, r1, ip, ror #14
   185a8:	andeq	r8, r1, ip, ror #14
   185ac:	andeq	r8, r1, ip, ror #14
   185b0:	andeq	r8, r1, ip, ror #14
   185b4:	andeq	r8, r1, ip, ror #14
   185b8:	andeq	r8, r1, ip, ror #14
   185bc:	andeq	r8, r1, ip, ror #14
   185c0:	andeq	r8, r1, ip, ror #14
   185c4:	andeq	r8, r1, ip, ror #14
   185c8:	andeq	r8, r1, ip, ror #14
   185cc:	andeq	r8, r1, ip, ror #14
   185d0:	andeq	r8, r1, ip, ror r7
   185d4:	andeq	r8, r1, r4, lsl #13
   185d8:	andeq	r8, r1, ip, ror #14
   185dc:	andeq	r8, r1, ip, ror r7
   185e0:	andeq	r8, r1, ip, ror #14
   185e4:	andeq	r8, r1, ip, ror r7
   185e8:	andeq	r8, r1, ip, ror #14
   185ec:	andeq	r8, r1, ip, ror #14
   185f0:	andeq	r8, r1, ip, ror #14
   185f4:	andeq	r8, r1, ip, ror #14
   185f8:	andeq	r8, r1, ip, ror #14
   185fc:	andeq	r8, r1, ip, ror #14
   18600:	andeq	r8, r1, ip, ror #14
   18604:	andeq	r8, r1, ip, ror #14
   18608:	andeq	r8, r1, ip, ror #14
   1860c:	andeq	r8, r1, ip, ror #14
   18610:	andeq	r8, r1, ip, ror #14
   18614:	andeq	r8, r1, ip, ror #14
   18618:	andeq	r8, r1, ip, ror #14
   1861c:	andeq	r8, r1, ip, ror #14
   18620:	andeq	r8, r1, ip, ror #14
   18624:	andeq	r8, r1, ip, ror #14
   18628:	andeq	r8, r1, ip, ror #14
   1862c:	andeq	r8, r1, ip, ror #14
   18630:	andeq	r8, r1, ip, ror #14
   18634:	andeq	r8, r1, ip, ror #14
   18638:	andeq	r8, r1, ip, ror #14
   1863c:	andeq	r8, r1, ip, ror #14
   18640:	andeq	r8, r1, ip, ror #14
   18644:	andeq	r8, r1, ip, ror #14
   18648:	andeq	r8, r1, ip, ror #14
   1864c:	andeq	r8, r1, ip, ror #14
   18650:	andeq	r8, r1, r0, ror #12
   18654:	andeq	r8, r1, ip, ror r7
   18658:	andeq	r8, r1, r0, ror #12
   1865c:	andeq	r8, r1, r4, ror r7
   18660:	ldr	r3, [sp, #24]
   18664:	mov	r6, #0
   18668:	cmn	r3, #1
   1866c:	bne	18018 <lchmod@@Base+0xe4c>
   18670:	ldr	r3, [sp, #44]	; 0x2c
   18674:	ldrb	r3, [r3, #1]
   18678:	adds	r3, r3, #0
   1867c:	movne	r3, #1
   18680:	b	18020 <lchmod@@Base+0xe54>
   18684:	ldr	r3, [sp, #176]	; 0xb0
   18688:	mov	r6, #0
   1868c:	cmp	r3, #2
   18690:	bne	18160 <lchmod@@Base+0xf94>
   18694:	ldr	r3, [sp, #64]	; 0x40
   18698:	cmp	r3, #0
   1869c:	bne	18ed4 <lchmod@@Base+0x1d08>
   186a0:	add	sl, sl, #1
   186a4:	ldr	r6, [sp, #36]	; 0x24
   186a8:	str	r3, [sp, #32]
   186ac:	mov	r4, #92	; 0x5c
   186b0:	b	1806c <lchmod@@Base+0xea0>
   186b4:	ldr	r3, [sp, #176]	; 0xb0
   186b8:	mov	r6, #0
   186bc:	cmp	r3, #2
   186c0:	bne	18194 <lchmod@@Base+0xfc8>
   186c4:	ldr	r3, [sp, #40]	; 0x28
   186c8:	cmp	r3, #0
   186cc:	bne	189b0 <lchmod@@Base+0x17e4>
   186d0:	mov	r1, r7
   186d4:	str	r3, [sp, #32]
   186d8:	mov	r4, #63	; 0x3f
   186dc:	b	18038 <lchmod@@Base+0xe6c>
   186e0:	ldr	r3, [sp, #176]	; 0xb0
   186e4:	mov	r6, #0
   186e8:	cmp	r3, #2
   186ec:	bne	181e4 <lchmod@@Base+0x1018>
   186f0:	ldr	r3, [sp, #64]	; 0x40
   186f4:	cmp	r3, #0
   186f8:	bne	18ed4 <lchmod@@Base+0x1d08>
   186fc:	ldr	r2, [sp, #84]	; 0x54
   18700:	adds	r3, fp, #0
   18704:	movne	r3, #1
   18708:	cmp	r2, #0
   1870c:	movne	r3, #0
   18710:	cmp	r3, #0
   18714:	strne	fp, [sp, #84]	; 0x54
   18718:	movne	fp, #0
   1871c:	bne	1874c <lchmod@@Base+0x1580>
   18720:	cmp	fp, r8
   18724:	movhi	r3, #39	; 0x27
   18728:	strbhi	r3, [r9, r8]
   1872c:	add	r3, r8, #1
   18730:	cmp	fp, r3
   18734:	movhi	r2, #92	; 0x5c
   18738:	strbhi	r2, [r9, r3]
   1873c:	add	r3, r8, #2
   18740:	cmp	fp, r3
   18744:	movhi	r2, #39	; 0x27
   18748:	strbhi	r2, [r9, r3]
   1874c:	ldr	r3, [sp, #64]	; 0x40
   18750:	add	r8, r8, #3
   18754:	mov	r1, r7
   18758:	str	r7, [sp, #32]
   1875c:	str	r7, [sp, #76]	; 0x4c
   18760:	str	r3, [sp, #36]	; 0x24
   18764:	mov	r4, #39	; 0x27
   18768:	b	18038 <lchmod@@Base+0xe6c>
   1876c:	mov	r6, #0
   18770:	b	181fc <lchmod@@Base+0x1030>
   18774:	mov	r6, #0
   18778:	b	183f0 <lchmod@@Base+0x1224>
   1877c:	mov	r6, #0
   18780:	b	18410 <lchmod@@Base+0x1244>
   18784:	str	r7, [sp, #32]
   18788:	mov	r6, #0
   1878c:	b	18418 <lchmod@@Base+0x124c>
   18790:	mov	r6, #0
   18794:	b	18440 <lchmod@@Base+0x1274>
   18798:	mov	r6, #0
   1879c:	b	1820c <lchmod@@Base+0x1040>
   187a0:	mov	r6, #0
   187a4:	b	182d4 <lchmod@@Base+0x1108>
   187a8:	mov	r6, #0
   187ac:	b	182a4 <lchmod@@Base+0x10d8>
   187b0:	mov	r6, #0
   187b4:	mov	r3, #116	; 0x74
   187b8:	b	182ac <lchmod@@Base+0x10e0>
   187bc:	mov	r6, #0
   187c0:	b	182e8 <lchmod@@Base+0x111c>
   187c4:	mov	r6, #0
   187c8:	b	182fc <lchmod@@Base+0x1130>
   187cc:	ldr	r3, [sp, #56]	; 0x38
   187d0:	mov	r6, #0
   187d4:	cmp	r3, #0
   187d8:	bne	1831c <lchmod@@Base+0x1150>
   187dc:	ldr	r3, [sp, #96]	; 0x60
   187e0:	cmp	r3, #0
   187e4:	addne	sl, sl, #1
   187e8:	bne	17b90 <lchmod@@Base+0x9c4>
   187ec:	ldr	r1, [sp, #52]	; 0x34
   187f0:	str	r3, [sp, #32]
   187f4:	mov	r4, r3
   187f8:	b	18038 <lchmod@@Base+0xe6c>
   187fc:	mov	r6, #0
   18800:	ldr	r3, [sp, #80]	; 0x50
   18804:	cmp	r3, #1
   18808:	bne	189f8 <lchmod@@Base+0x182c>
   1880c:	bl	11628 <__ctype_b_loc@plt>
   18810:	ldr	r2, [sp, #80]	; 0x50
   18814:	sxth	r3, r4
   18818:	mov	r1, r2
   1881c:	lsl	r3, r3, #1
   18820:	ldr	r2, [r0]
   18824:	ldrh	r3, [r2, r3]
   18828:	and	r3, r3, #16384	; 0x4000
   1882c:	cmp	r3, #0
   18830:	movne	r3, #1
   18834:	moveq	r3, #0
   18838:	str	r3, [sp, #32]
   1883c:	moveq	r3, #1
   18840:	movne	r3, #0
   18844:	ldr	r2, [sp, #56]	; 0x38
   18848:	and	r3, r3, r2
   1884c:	ands	r3, r3, #255	; 0xff
   18850:	beq	18424 <lchmod@@Base+0x1258>
   18854:	add	r1, sl, r1
   18858:	mov	r0, #0
   1885c:	ldr	r7, [sp, #40]	; 0x28
   18860:	ldr	r2, [sp, #36]	; 0x24
   18864:	ldr	lr, [sp, #52]	; 0x34
   18868:	b	18918 <lchmod@@Base+0x174c>
   1886c:	cmp	r7, #0
   18870:	bne	18c6c <lchmod@@Base+0x1aa0>
   18874:	eor	r0, r2, #1
   18878:	ands	r0, lr, r0
   1887c:	beq	188b4 <lchmod@@Base+0x16e8>
   18880:	cmp	fp, r8
   18884:	movhi	r2, #39	; 0x27
   18888:	strbhi	r2, [r9, r8]
   1888c:	add	r2, r8, #1
   18890:	cmp	fp, r2
   18894:	movhi	ip, #36	; 0x24
   18898:	strbhi	ip, [r9, r2]
   1889c:	add	r2, r8, #2
   188a0:	cmp	fp, r2
   188a4:	movhi	ip, #39	; 0x27
   188a8:	strbhi	ip, [r9, r2]
   188ac:	add	r8, r8, #3
   188b0:	mov	r2, r0
   188b4:	cmp	fp, r8
   188b8:	movhi	r0, #92	; 0x5c
   188bc:	strbhi	r0, [r9, r8]
   188c0:	add	r0, r8, #1
   188c4:	cmp	fp, r0
   188c8:	lsrhi	ip, r4, #6
   188cc:	addhi	ip, ip, #48	; 0x30
   188d0:	strbhi	ip, [r9, r0]
   188d4:	add	ip, r8, #2
   188d8:	cmp	fp, ip
   188dc:	lsrhi	r0, r4, #3
   188e0:	andhi	r0, r0, #7
   188e4:	addhi	r0, r0, #48	; 0x30
   188e8:	add	sl, sl, #1
   188ec:	strbhi	r0, [r9, ip]
   188f0:	and	r4, r4, #7
   188f4:	cmp	sl, r1
   188f8:	add	r4, r4, #48	; 0x30
   188fc:	add	r8, r8, #3
   18900:	bcs	18c84 <lchmod@@Base+0x1ab8>
   18904:	mov	r0, r3
   18908:	cmp	fp, r8
   1890c:	strbhi	r4, [r9, r8]
   18910:	ldrb	r4, [r5, #1]!
   18914:	add	r8, r8, #1
   18918:	cmp	r3, #0
   1891c:	bne	1886c <lchmod@@Base+0x16a0>
   18920:	cmp	r6, #0
   18924:	bne	189c8 <lchmod@@Base+0x17fc>
   18928:	eor	r6, r0, #1
   1892c:	and	r6, r6, r2
   18930:	add	sl, sl, #1
   18934:	cmp	r1, sl
   18938:	uxtb	r6, r6
   1893c:	bls	189f0 <lchmod@@Base+0x1824>
   18940:	cmp	r6, #0
   18944:	beq	18908 <lchmod@@Base+0x173c>
   18948:	cmp	fp, r8
   1894c:	movhi	r2, #39	; 0x27
   18950:	strbhi	r2, [r9, r8]
   18954:	add	r2, r8, #1
   18958:	cmp	fp, r2
   1895c:	movhi	ip, #39	; 0x27
   18960:	strbhi	ip, [r9, r2]
   18964:	add	r8, r8, #2
   18968:	mov	r6, r3
   1896c:	mov	r2, r3
   18970:	b	18908 <lchmod@@Base+0x173c>
   18974:	ldr	r3, [sp, #184]	; 0xb8
   18978:	cmp	r3, #0
   1897c:	beq	18054 <lchmod@@Base+0xe88>
   18980:	lsr	r2, r4, #5
   18984:	mov	r0, r3
   18988:	uxtb	r2, r2
   1898c:	and	r3, r4, #31
   18990:	ldr	r2, [r0, r2, lsl #2]
   18994:	lsr	r3, r2, r3
   18998:	tst	r3, #1
   1899c:	beq	18054 <lchmod@@Base+0xe88>
   189a0:	ldr	r3, [sp, #40]	; 0x28
   189a4:	cmp	r3, #0
   189a8:	beq	18240 <lchmod@@Base+0x1074>
   189ac:	mov	r3, r1
   189b0:	str	r3, [sp, #64]	; 0x40
   189b4:	mov	sl, r9
   189b8:	ldr	r3, [sp, #56]	; 0x38
   189bc:	mov	r9, fp
   189c0:	ldr	r2, [sp, #64]	; 0x40
   189c4:	b	18bb4 <lchmod@@Base+0x19e8>
   189c8:	cmp	fp, r8
   189cc:	eor	r6, r0, #1
   189d0:	movhi	ip, #92	; 0x5c
   189d4:	and	r6, r6, r2
   189d8:	add	sl, sl, #1
   189dc:	strbhi	ip, [r9, r8]
   189e0:	cmp	r1, sl
   189e4:	add	r8, r8, #1
   189e8:	uxtb	r6, r6
   189ec:	bhi	18940 <lchmod@@Base+0x1774>
   189f0:	str	r2, [sp, #36]	; 0x24
   189f4:	b	1806c <lchmod@@Base+0xea0>
   189f8:	ldr	r3, [sp, #24]
   189fc:	cmn	r3, #1
   18a00:	mov	r3, #0
   18a04:	str	r3, [sp, #128]	; 0x80
   18a08:	str	r3, [sp, #132]	; 0x84
   18a0c:	beq	18d00 <lchmod@@Base+0x1b34>
   18a10:	mov	r2, r7
   18a14:	mov	r3, #0
   18a18:	str	r7, [sp, #104]	; 0x68
   18a1c:	str	r5, [sp, #116]	; 0x74
   18a20:	mov	r7, r3
   18a24:	mov	r5, r2
   18a28:	str	r4, [sp, #32]
   18a2c:	str	r6, [sp, #108]	; 0x6c
   18a30:	str	r8, [sp, #112]	; 0x70
   18a34:	ldr	r3, [sp, #44]	; 0x2c
   18a38:	add	r6, sl, r7
   18a3c:	add	r4, r3, r6
   18a40:	ldr	r3, [sp, #24]
   18a44:	mov	r1, r4
   18a48:	sub	r2, r3, r6
   18a4c:	add	r0, sp, #124	; 0x7c
   18a50:	add	r3, sp, #128	; 0x80
   18a54:	bl	1d418 <lchmod@@Base+0x624c>
   18a58:	subs	r8, r0, #0
   18a5c:	beq	18de4 <lchmod@@Base+0x1c18>
   18a60:	cmn	r8, #1
   18a64:	beq	18dbc <lchmod@@Base+0x1bf0>
   18a68:	cmn	r8, #2
   18a6c:	beq	18d54 <lchmod@@Base+0x1b88>
   18a70:	ldr	r3, [sp, #64]	; 0x40
   18a74:	cmp	r3, #0
   18a78:	beq	18b38 <lchmod@@Base+0x196c>
   18a7c:	cmp	r8, #1
   18a80:	beq	18b38 <lchmod@@Base+0x196c>
   18a84:	sub	r3, r8, #1
   18a88:	add	r6, r3, r6
   18a8c:	ldr	r3, [sp, #44]	; 0x2c
   18a90:	add	r6, r3, r6
   18a94:	ldrb	r3, [r4, #1]!
   18a98:	sub	r3, r3, #91	; 0x5b
   18a9c:	cmp	r3, #33	; 0x21
   18aa0:	ldrls	pc, [pc, r3, lsl #2]
   18aa4:	b	18b30 <lchmod@@Base+0x1964>
   18aa8:	muleq	r1, ip, fp
   18aac:	muleq	r1, ip, fp
   18ab0:	andeq	r8, r1, r0, lsr fp
   18ab4:	muleq	r1, ip, fp
   18ab8:	andeq	r8, r1, r0, lsr fp
   18abc:	muleq	r1, ip, fp
   18ac0:	andeq	r8, r1, r0, lsr fp
   18ac4:	andeq	r8, r1, r0, lsr fp
   18ac8:	andeq	r8, r1, r0, lsr fp
   18acc:	andeq	r8, r1, r0, lsr fp
   18ad0:	andeq	r8, r1, r0, lsr fp
   18ad4:	andeq	r8, r1, r0, lsr fp
   18ad8:	andeq	r8, r1, r0, lsr fp
   18adc:	andeq	r8, r1, r0, lsr fp
   18ae0:	andeq	r8, r1, r0, lsr fp
   18ae4:	andeq	r8, r1, r0, lsr fp
   18ae8:	andeq	r8, r1, r0, lsr fp
   18aec:	andeq	r8, r1, r0, lsr fp
   18af0:	andeq	r8, r1, r0, lsr fp
   18af4:	andeq	r8, r1, r0, lsr fp
   18af8:	andeq	r8, r1, r0, lsr fp
   18afc:	andeq	r8, r1, r0, lsr fp
   18b00:	andeq	r8, r1, r0, lsr fp
   18b04:	andeq	r8, r1, r0, lsr fp
   18b08:	andeq	r8, r1, r0, lsr fp
   18b0c:	andeq	r8, r1, r0, lsr fp
   18b10:	andeq	r8, r1, r0, lsr fp
   18b14:	andeq	r8, r1, r0, lsr fp
   18b18:	andeq	r8, r1, r0, lsr fp
   18b1c:	andeq	r8, r1, r0, lsr fp
   18b20:	andeq	r8, r1, r0, lsr fp
   18b24:	andeq	r8, r1, r0, lsr fp
   18b28:	andeq	r8, r1, r0, lsr fp
   18b2c:	muleq	r1, ip, fp
   18b30:	cmp	r6, r4
   18b34:	bne	18a94 <lchmod@@Base+0x18c8>
   18b38:	ldr	r0, [sp, #124]	; 0x7c
   18b3c:	bl	11544 <iswprint@plt>
   18b40:	add	r7, r7, r8
   18b44:	cmp	r0, #0
   18b48:	add	r0, sp, #128	; 0x80
   18b4c:	moveq	r5, #0
   18b50:	bl	114c0 <mbsinit@plt>
   18b54:	cmp	r0, #0
   18b58:	beq	18a34 <lchmod@@Base+0x1868>
   18b5c:	ldr	r4, [sp, #32]
   18b60:	str	r5, [sp, #32]
   18b64:	ldr	r3, [sp, #32]
   18b68:	mov	r1, r7
   18b6c:	eor	r3, r3, #1
   18b70:	ldr	r7, [sp, #104]	; 0x68
   18b74:	ldr	r6, [sp, #108]	; 0x6c
   18b78:	ldr	r8, [sp, #112]	; 0x70
   18b7c:	ldr	r5, [sp, #116]	; 0x74
   18b80:	uxtb	r3, r3
   18b84:	cmp	r1, #1
   18b88:	bls	18844 <lchmod@@Base+0x1678>
   18b8c:	ldr	r2, [sp, #56]	; 0x38
   18b90:	and	r3, r3, r2
   18b94:	uxtb	r3, r3
   18b98:	b	18854 <lchmod@@Base+0x1688>
   18b9c:	mov	r3, #2
   18ba0:	str	r3, [sp, #176]	; 0xb0
   18ba4:	ldr	r2, [sp, #64]	; 0x40
   18ba8:	ldr	r3, [sp, #56]	; 0x38
   18bac:	mov	sl, r9
   18bb0:	mov	r9, fp
   18bb4:	and	r3, r3, r2
   18bb8:	tst	r3, #255	; 0xff
   18bbc:	ldr	r3, [sp, #176]	; 0xb0
   18bc0:	movne	r3, #4
   18bc4:	str	r3, [sp, #176]	; 0xb0
   18bc8:	ldr	r3, [sp, #180]	; 0xb4
   18bcc:	mov	ip, #0
   18bd0:	bic	r3, r3, #2
   18bd4:	str	r3, [sp, #4]
   18bd8:	ldr	r3, [sp, #192]	; 0xc0
   18bdc:	ldr	r2, [sp, #44]	; 0x2c
   18be0:	str	r3, [sp, #16]
   18be4:	ldr	r3, [sp, #188]	; 0xbc
   18be8:	mov	r1, r9
   18bec:	str	r3, [sp, #12]
   18bf0:	ldr	r3, [sp, #176]	; 0xb0
   18bf4:	mov	r0, sl
   18bf8:	str	r3, [sp]
   18bfc:	str	ip, [sp, #8]
   18c00:	ldr	r3, [sp, #24]
   18c04:	bl	17a64 <lchmod@@Base+0x898>
   18c08:	mov	fp, r0
   18c0c:	mov	r0, fp
   18c10:	add	sp, sp, #140	; 0x8c
   18c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c18:	mov	r4, #92	; 0x5c
   18c1c:	mov	r1, #0
   18c20:	mov	r3, r4
   18c24:	b	18218 <lchmod@@Base+0x104c>
   18c28:	mov	r3, #0
   18c2c:	ldr	r1, [sp, #52]	; 0x34
   18c30:	str	r3, [sp, #32]
   18c34:	mov	r4, #63	; 0x3f
   18c38:	b	18038 <lchmod@@Base+0xe6c>
   18c3c:	cmp	fp, #0
   18c40:	beq	18c9c <lchmod@@Base+0x1ad0>
   18c44:	mov	r3, #39	; 0x27
   18c48:	strb	r3, [r9]
   18c4c:	mov	r3, #0
   18c50:	str	r3, [sp, #40]	; 0x28
   18c54:	mov	r3, #1
   18c58:	str	r3, [sp, #68]	; 0x44
   18c5c:	ldr	r3, [pc, #448]	; 18e24 <lchmod@@Base+0x1c58>
   18c60:	mov	r8, #1
   18c64:	str	r3, [sp, #72]	; 0x48
   18c68:	b	17e4c <lchmod@@Base+0xc80>
   18c6c:	ldr	r3, [sp, #40]	; 0x28
   18c70:	mov	sl, r9
   18c74:	str	r3, [sp, #56]	; 0x38
   18c78:	mov	r9, fp
   18c7c:	ldr	r2, [sp, #64]	; 0x40
   18c80:	b	18bb4 <lchmod@@Base+0x19e8>
   18c84:	str	r2, [sp, #36]	; 0x24
   18c88:	b	1809c <lchmod@@Base+0xed0>
   18c8c:	mov	r1, #0
   18c90:	str	r3, [sp, #32]
   18c94:	mov	r4, #63	; 0x3f
   18c98:	b	18038 <lchmod@@Base+0xe6c>
   18c9c:	ldr	r3, [pc, #384]	; 18e24 <lchmod@@Base+0x1c58>
   18ca0:	str	r3, [sp, #72]	; 0x48
   18ca4:	mov	r3, #0
   18ca8:	str	r3, [sp, #40]	; 0x28
   18cac:	mov	r3, #1
   18cb0:	str	r3, [sp, #68]	; 0x44
   18cb4:	mov	r8, r3
   18cb8:	b	17e4c <lchmod@@Base+0xc80>
   18cbc:	bl	117d8 <abort@plt>
   18cc0:	cmp	fp, #0
   18cc4:	beq	18d24 <lchmod@@Base+0x1b58>
   18cc8:	mov	r2, #1
   18ccc:	mov	r3, #34	; 0x22
   18cd0:	strb	r3, [r9]
   18cd4:	mov	r8, r2
   18cd8:	mov	r3, r2
   18cdc:	str	r2, [sp, #68]	; 0x44
   18ce0:	str	r3, [sp, #56]	; 0x38
   18ce4:	ldr	r3, [pc, #316]	; 18e28 <lchmod@@Base+0x1c5c>
   18ce8:	ldr	r1, [sp, #56]	; 0x38
   18cec:	str	r3, [sp, #72]	; 0x48
   18cf0:	ldr	r2, [sp, #176]	; 0xb0
   18cf4:	ldr	ip, [sp, #40]	; 0x28
   18cf8:	ldr	lr, [sp, #176]	; 0xb0
   18cfc:	b	17b30 <lchmod@@Base+0x964>
   18d00:	ldr	r0, [sp, #44]	; 0x2c
   18d04:	bl	11658 <strlen@plt>
   18d08:	str	r0, [sp, #24]
   18d0c:	b	18a10 <lchmod@@Base+0x1844>
   18d10:	mov	r7, #0
   18d14:	ldr	r1, [sp, #52]	; 0x34
   18d18:	str	r3, [sp, #32]
   18d1c:	mov	r4, #48	; 0x30
   18d20:	b	18038 <lchmod@@Base+0xe6c>
   18d24:	mov	r3, #1
   18d28:	str	r3, [sp, #68]	; 0x44
   18d2c:	mov	r8, r3
   18d30:	b	18ce0 <lchmod@@Base+0x1b14>
   18d34:	mov	r3, #2
   18d38:	mov	sl, r9
   18d3c:	str	r3, [sp, #176]	; 0xb0
   18d40:	mov	r9, fp
   18d44:	ldr	r3, [sp, #56]	; 0x38
   18d48:	b	18bb4 <lchmod@@Base+0x19e8>
   18d4c:	ldr	r6, [sp, #48]	; 0x30
   18d50:	b	18800 <lchmod@@Base+0x1634>
   18d54:	ldr	r0, [sp, #24]
   18d58:	mov	ip, r6
   18d5c:	cmp	r0, ip
   18d60:	mov	r1, r7
   18d64:	mov	r2, r4
   18d68:	ldr	r7, [sp, #104]	; 0x68
   18d6c:	ldr	r4, [sp, #32]
   18d70:	ldr	r6, [sp, #108]	; 0x6c
   18d74:	ldr	r8, [sp, #112]	; 0x70
   18d78:	ldr	r5, [sp, #116]	; 0x74
   18d7c:	bls	18dac <lchmod@@Base+0x1be0>
   18d80:	ldrb	r3, [r2]
   18d84:	cmp	r3, #0
   18d88:	bne	18d9c <lchmod@@Base+0x1bd0>
   18d8c:	b	18ebc <lchmod@@Base+0x1cf0>
   18d90:	ldrb	r3, [r2, #1]!
   18d94:	cmp	r3, #0
   18d98:	beq	18ebc <lchmod@@Base+0x1cf0>
   18d9c:	add	r1, r1, #1
   18da0:	add	r3, sl, r1
   18da4:	cmp	r0, r3
   18da8:	bhi	18d90 <lchmod@@Base+0x1bc4>
   18dac:	mov	r2, #0
   18db0:	mov	r3, r7
   18db4:	str	r2, [sp, #32]
   18db8:	b	18b84 <lchmod@@Base+0x19b8>
   18dbc:	mov	r1, r7
   18dc0:	ldr	r7, [sp, #104]	; 0x68
   18dc4:	mov	r2, #0
   18dc8:	ldr	r4, [sp, #32]
   18dcc:	ldr	r6, [sp, #108]	; 0x6c
   18dd0:	ldr	r8, [sp, #112]	; 0x70
   18dd4:	ldr	r5, [sp, #116]	; 0x74
   18dd8:	mov	r3, r7
   18ddc:	str	r2, [sp, #32]
   18de0:	b	18b84 <lchmod@@Base+0x19b8>
   18de4:	mov	r3, r5
   18de8:	eor	r3, r3, #1
   18dec:	ldr	r4, [sp, #32]
   18df0:	mov	r1, r7
   18df4:	str	r5, [sp, #32]
   18df8:	ldr	r7, [sp, #104]	; 0x68
   18dfc:	ldr	r6, [sp, #108]	; 0x6c
   18e00:	ldr	r8, [sp, #112]	; 0x70
   18e04:	ldr	r5, [sp, #116]	; 0x74
   18e08:	uxtb	r3, r3
   18e0c:	b	18b84 <lchmod@@Base+0x19b8>
   18e10:	mov	sl, r9
   18e14:	str	r3, [sp, #56]	; 0x38
   18e18:	mov	r9, fp
   18e1c:	ldr	r2, [sp, #64]	; 0x40
   18e20:	b	18bb4 <lchmod@@Base+0x19e8>
   18e24:	andeq	lr, r1, r0, lsr r3
   18e28:	andeq	lr, r1, ip, lsr #6
   18e2c:	andeq	lr, r1, r4, lsr r3
   18e30:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   18e34:	ldr	r2, [sp, #44]	; 0x2c
   18e38:	ldrb	r1, [r2, r3]
   18e3c:	sub	r2, r1, #33	; 0x21
   18e40:	uxtb	r2, r2
   18e44:	cmp	r2, #29
   18e48:	bhi	18ec8 <lchmod@@Base+0x1cfc>
   18e4c:	ldr	r0, [pc, #-36]	; 18e30 <lchmod@@Base+0x1c64>
   18e50:	mov	ip, #1
   18e54:	ands	r2, r0, ip, lsl r2
   18e58:	beq	18ee8 <lchmod@@Base+0x1d1c>
   18e5c:	ldr	r2, [sp, #40]	; 0x28
   18e60:	cmp	r2, #0
   18e64:	bne	18fdc <lchmod@@Base+0x1e10>
   18e68:	add	r2, r8, #1
   18e6c:	cmp	fp, r8
   18e70:	strbhi	r4, [r9, r8]
   18e74:	cmp	fp, r2
   18e78:	movhi	r0, #34	; 0x22
   18e7c:	strbhi	r0, [r9, r2]
   18e80:	add	r2, r8, #2
   18e84:	cmp	fp, r2
   18e88:	movhi	r0, #34	; 0x22
   18e8c:	strbhi	r0, [r9, r2]
   18e90:	add	r2, r8, #3
   18e94:	cmp	fp, r2
   18e98:	mov	sl, r3
   18e9c:	ldr	r3, [sp, #40]	; 0x28
   18ea0:	movhi	r0, #63	; 0x3f
   18ea4:	mov	r4, r1
   18ea8:	strbhi	r0, [r9, r2]
   18eac:	add	r8, r8, #4
   18eb0:	mov	r1, r3
   18eb4:	str	r3, [sp, #32]
   18eb8:	b	18038 <lchmod@@Base+0xe6c>
   18ebc:	str	r3, [sp, #32]
   18ec0:	mov	r3, r7
   18ec4:	b	18b84 <lchmod@@Base+0x19b8>
   18ec8:	mov	r1, #0
   18ecc:	str	r1, [sp, #32]
   18ed0:	b	18038 <lchmod@@Base+0xe6c>
   18ed4:	mov	sl, r9
   18ed8:	ldr	r3, [sp, #56]	; 0x38
   18edc:	mov	r9, fp
   18ee0:	ldr	r2, [sp, #64]	; 0x40
   18ee4:	b	18bb4 <lchmod@@Base+0x19e8>
   18ee8:	str	r2, [sp, #32]
   18eec:	mov	r1, #0
   18ef0:	b	18038 <lchmod@@Base+0xe6c>
   18ef4:	ldr	r2, [sp, #76]	; 0x4c
   18ef8:	mov	sl, r9
   18efc:	mov	r9, fp
   18f00:	mov	fp, r8
   18f04:	ldr	r1, [sp, #72]	; 0x48
   18f08:	cmp	r1, #0
   18f0c:	moveq	r3, #0
   18f10:	andne	r3, r2, #1
   18f14:	cmp	r3, #0
   18f18:	beq	18f44 <lchmod@@Base+0x1d78>
   18f1c:	ldrb	r3, [r1]
   18f20:	cmp	r3, #0
   18f24:	beq	18f44 <lchmod@@Base+0x1d78>
   18f28:	mov	r2, r1
   18f2c:	cmp	r9, fp
   18f30:	strbhi	r3, [sl, fp]
   18f34:	ldrb	r3, [r2, #1]!
   18f38:	add	fp, fp, #1
   18f3c:	cmp	r3, #0
   18f40:	bne	18f2c <lchmod@@Base+0x1d60>
   18f44:	cmp	r9, fp
   18f48:	movhi	r3, #0
   18f4c:	strbhi	r3, [sl, fp]
   18f50:	b	18c0c <lchmod@@Base+0x1a40>
   18f54:	ldr	r3, [sp, #192]	; 0xc0
   18f58:	mov	ip, #5
   18f5c:	str	r3, [sp, #16]
   18f60:	ldr	r3, [sp, #188]	; 0xbc
   18f64:	ldr	r2, [sp, #44]	; 0x2c
   18f68:	str	r3, [sp, #12]
   18f6c:	ldr	r3, [sp, #184]	; 0xb8
   18f70:	ldr	r1, [sp, #84]	; 0x54
   18f74:	str	r3, [sp, #8]
   18f78:	ldr	r3, [sp, #180]	; 0xb4
   18f7c:	mov	r0, r9
   18f80:	str	r3, [sp, #4]
   18f84:	str	ip, [sp]
   18f88:	ldr	r3, [sp, #24]
   18f8c:	bl	17a64 <lchmod@@Base+0x898>
   18f90:	mov	fp, r0
   18f94:	b	18c0c <lchmod@@Base+0x1a40>
   18f98:	mov	sl, r9
   18f9c:	mov	r9, fp
   18fa0:	mov	fp, r8
   18fa4:	b	18f04 <lchmod@@Base+0x1d38>
   18fa8:	ldr	r1, [sp, #176]	; 0xb0
   18fac:	bl	17944 <lchmod@@Base+0x778>
   18fb0:	str	r0, [sp, #192]	; 0xc0
   18fb4:	b	17f20 <lchmod@@Base+0xd54>
   18fb8:	ldr	r1, [sp, #176]	; 0xb0
   18fbc:	bl	17944 <lchmod@@Base+0x778>
   18fc0:	str	r0, [sp, #188]	; 0xbc
   18fc4:	b	17f00 <lchmod@@Base+0xd34>
   18fc8:	mov	sl, r9
   18fcc:	mov	r2, r3
   18fd0:	mov	r9, fp
   18fd4:	mov	fp, r8
   18fd8:	b	18f04 <lchmod@@Base+0x1d38>
   18fdc:	mov	sl, r9
   18fe0:	mov	r9, fp
   18fe4:	b	18bc8 <lchmod@@Base+0x19fc>
   18fe8:	push	{r4, r5, r6, lr}
   18fec:	mov	r5, r0
   18ff0:	bl	11688 <__errno_location@plt>
   18ff4:	cmp	r5, #0
   18ff8:	mov	r1, #48	; 0x30
   18ffc:	mov	r4, r0
   19000:	ldr	r0, [pc, #16]	; 19018 <lchmod@@Base+0x1e4c>
   19004:	ldr	r6, [r4]
   19008:	movne	r0, r5
   1900c:	bl	1cb78 <lchmod@@Base+0x59ac>
   19010:	str	r6, [r4]
   19014:	pop	{r4, r5, r6, pc}
   19018:	strdeq	pc, [r2], -r4
   1901c:	ldr	r3, [pc, #12]	; 19030 <lchmod@@Base+0x1e64>
   19020:	cmp	r0, #0
   19024:	moveq	r0, r3
   19028:	ldr	r0, [r0]
   1902c:	bx	lr
   19030:	strdeq	pc, [r2], -r4
   19034:	ldr	r3, [pc, #12]	; 19048 <lchmod@@Base+0x1e7c>
   19038:	cmp	r0, #0
   1903c:	moveq	r0, r3
   19040:	str	r1, [r0]
   19044:	bx	lr
   19048:	strdeq	pc, [r2], -r4
   1904c:	ldr	r3, [pc, #52]	; 19088 <lchmod@@Base+0x1ebc>
   19050:	cmp	r0, #0
   19054:	moveq	r0, r3
   19058:	add	r3, r0, #8
   1905c:	push	{lr}		; (str lr, [sp, #-4]!)
   19060:	lsr	lr, r1, #5
   19064:	and	r1, r1, #31
   19068:	ldr	ip, [r3, lr, lsl #2]
   1906c:	lsr	r0, ip, r1
   19070:	eor	r2, r2, r0
   19074:	and	r2, r2, #1
   19078:	and	r0, r0, #1
   1907c:	eor	r1, ip, r2, lsl r1
   19080:	str	r1, [r3, lr, lsl #2]
   19084:	pop	{pc}		; (ldr pc, [sp], #4)
   19088:	strdeq	pc, [r2], -r4
   1908c:	ldr	r3, [pc, #16]	; 190a4 <lchmod@@Base+0x1ed8>
   19090:	cmp	r0, #0
   19094:	movne	r3, r0
   19098:	ldr	r0, [r3, #4]
   1909c:	str	r1, [r3, #4]
   190a0:	bx	lr
   190a4:	strdeq	pc, [r2], -r4
   190a8:	ldr	r3, [pc, #44]	; 190dc <lchmod@@Base+0x1f10>
   190ac:	cmp	r0, #0
   190b0:	moveq	r0, r3
   190b4:	mov	ip, #10
   190b8:	cmp	r2, #0
   190bc:	cmpne	r1, #0
   190c0:	str	ip, [r0]
   190c4:	beq	190d4 <lchmod@@Base+0x1f08>
   190c8:	str	r1, [r0, #40]	; 0x28
   190cc:	str	r2, [r0, #44]	; 0x2c
   190d0:	bx	lr
   190d4:	push	{r4, lr}
   190d8:	bl	117d8 <abort@plt>
   190dc:	strdeq	pc, [r2], -r4
   190e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   190e4:	sub	sp, sp, #24
   190e8:	ldr	ip, [pc, #108]	; 1915c <lchmod@@Base+0x1f90>
   190ec:	ldr	r4, [sp, #56]	; 0x38
   190f0:	mov	r9, r2
   190f4:	cmp	r4, #0
   190f8:	moveq	r4, ip
   190fc:	mov	sl, r3
   19100:	mov	r7, r0
   19104:	mov	r8, r1
   19108:	bl	11688 <__errno_location@plt>
   1910c:	ldr	r3, [r4, #44]	; 0x2c
   19110:	mov	r1, r8
   19114:	ldr	r6, [r0]
   19118:	str	r3, [sp, #16]
   1911c:	ldr	r2, [r4, #40]	; 0x28
   19120:	add	r3, r4, #8
   19124:	str	r3, [sp, #8]
   19128:	str	r2, [sp, #12]
   1912c:	ldr	r2, [r4, #4]
   19130:	mov	r5, r0
   19134:	str	r2, [sp, #4]
   19138:	ldr	ip, [r4]
   1913c:	mov	r3, sl
   19140:	mov	r2, r9
   19144:	mov	r0, r7
   19148:	str	ip, [sp]
   1914c:	bl	17a64 <lchmod@@Base+0x898>
   19150:	str	r6, [r5]
   19154:	add	sp, sp, #24
   19158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1915c:	strdeq	pc, [r2], -r4
   19160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19164:	cmp	r2, #0
   19168:	sub	sp, sp, #36	; 0x24
   1916c:	ldr	r4, [pc, #164]	; 19218 <lchmod@@Base+0x204c>
   19170:	mov	r8, r1
   19174:	movne	r4, r2
   19178:	mov	r7, r0
   1917c:	bl	11688 <__errno_location@plt>
   19180:	ldr	r3, [r4, #44]	; 0x2c
   19184:	ldr	r5, [r4, #4]
   19188:	add	r9, r4, #8
   1918c:	orr	r5, r5, #1
   19190:	mov	r1, #0
   19194:	mov	r2, r7
   19198:	ldr	fp, [r0]
   1919c:	str	r3, [sp, #16]
   191a0:	ldr	r3, [r4, #40]	; 0x28
   191a4:	stmib	sp, {r5, r9}
   191a8:	str	r3, [sp, #12]
   191ac:	ldr	r3, [r4]
   191b0:	mov	r6, r0
   191b4:	str	r3, [sp]
   191b8:	mov	r0, r1
   191bc:	mov	r3, r8
   191c0:	bl	17a64 <lchmod@@Base+0x898>
   191c4:	add	r1, r0, #1
   191c8:	mov	r0, r1
   191cc:	str	r1, [sp, #28]
   191d0:	bl	1c634 <lchmod@@Base+0x5468>
   191d4:	ldr	r3, [r4, #44]	; 0x2c
   191d8:	ldr	r1, [sp, #28]
   191dc:	str	r3, [sp, #16]
   191e0:	ldr	r3, [r4, #40]	; 0x28
   191e4:	str	r5, [sp, #4]
   191e8:	str	r3, [sp, #12]
   191ec:	str	r9, [sp, #8]
   191f0:	ldr	ip, [r4]
   191f4:	mov	r3, r8
   191f8:	mov	r2, r7
   191fc:	str	ip, [sp]
   19200:	mov	sl, r0
   19204:	bl	17a64 <lchmod@@Base+0x898>
   19208:	mov	r0, sl
   1920c:	str	fp, [r6]
   19210:	add	sp, sp, #36	; 0x24
   19214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19218:	strdeq	pc, [r2], -r4
   1921c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19220:	cmp	r3, #0
   19224:	sub	sp, sp, #44	; 0x2c
   19228:	ldr	r4, [pc, #192]	; 192f0 <lchmod@@Base+0x2124>
   1922c:	mov	r6, r2
   19230:	movne	r4, r3
   19234:	mov	r9, r1
   19238:	mov	r8, r0
   1923c:	bl	11688 <__errno_location@plt>
   19240:	ldr	r3, [r4, #44]	; 0x2c
   19244:	ldr	r5, [r4, #4]
   19248:	add	sl, r4, #8
   1924c:	cmp	r6, #0
   19250:	orreq	r5, r5, #1
   19254:	mov	r1, #0
   19258:	ldr	r2, [r0]
   1925c:	str	r3, [sp, #16]
   19260:	ldr	r3, [r4, #40]	; 0x28
   19264:	stmib	sp, {r5, sl}
   19268:	str	r3, [sp, #12]
   1926c:	ldr	r3, [r4]
   19270:	mov	r7, r0
   19274:	str	r2, [sp, #28]
   19278:	str	r3, [sp]
   1927c:	mov	r2, r8
   19280:	mov	r3, r9
   19284:	mov	r0, r1
   19288:	bl	17a64 <lchmod@@Base+0x898>
   1928c:	add	r1, r0, #1
   19290:	mov	fp, r0
   19294:	mov	r0, r1
   19298:	str	r1, [sp, #36]	; 0x24
   1929c:	bl	1c634 <lchmod@@Base+0x5468>
   192a0:	ldr	r3, [r4, #44]	; 0x2c
   192a4:	mov	r2, r8
   192a8:	str	r3, [sp, #16]
   192ac:	ldr	r3, [r4, #40]	; 0x28
   192b0:	str	r5, [sp, #4]
   192b4:	str	r3, [sp, #12]
   192b8:	str	sl, [sp, #8]
   192bc:	ldr	ip, [r4]
   192c0:	ldr	r1, [sp, #36]	; 0x24
   192c4:	mov	r3, r9
   192c8:	str	ip, [sp]
   192cc:	str	r0, [sp, #32]
   192d0:	bl	17a64 <lchmod@@Base+0x898>
   192d4:	ldr	r2, [sp, #28]
   192d8:	cmp	r6, #0
   192dc:	str	r2, [r7]
   192e0:	ldr	r0, [sp, #32]
   192e4:	strne	fp, [r6]
   192e8:	add	sp, sp, #44	; 0x2c
   192ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192f0:	strdeq	pc, [r2], -r4
   192f4:	push	{r4, r5, r6, r7, r8, lr}
   192f8:	ldr	r6, [pc, #116]	; 19374 <lchmod@@Base+0x21a8>
   192fc:	ldr	r3, [r6, #4]
   19300:	ldr	r7, [r6]
   19304:	cmp	r3, #1
   19308:	movgt	r5, r7
   1930c:	movgt	r4, #1
   19310:	ble	19330 <lchmod@@Base+0x2164>
   19314:	ldr	r0, [r5, #12]
   19318:	bl	1309c <__assert_fail@plt+0x1870>
   1931c:	ldr	r3, [r6, #4]
   19320:	add	r4, r4, #1
   19324:	cmp	r3, r4
   19328:	add	r5, r5, #8
   1932c:	bgt	19314 <lchmod@@Base+0x2148>
   19330:	ldr	r0, [r7, #4]
   19334:	ldr	r4, [pc, #60]	; 19378 <lchmod@@Base+0x21ac>
   19338:	cmp	r0, r4
   1933c:	beq	19350 <lchmod@@Base+0x2184>
   19340:	bl	1309c <__assert_fail@plt+0x1870>
   19344:	mov	r3, #256	; 0x100
   19348:	str	r4, [r6, #12]
   1934c:	str	r3, [r6, #8]
   19350:	ldr	r4, [pc, #36]	; 1937c <lchmod@@Base+0x21b0>
   19354:	cmp	r7, r4
   19358:	beq	19368 <lchmod@@Base+0x219c>
   1935c:	mov	r0, r7
   19360:	bl	1309c <__assert_fail@plt+0x1870>
   19364:	str	r4, [r6]
   19368:	mov	r3, #1
   1936c:	str	r3, [r6, #4]
   19370:	pop	{r4, r5, r6, r7, r8, pc}
   19374:	andeq	pc, r2, r4, lsl #3
   19378:	andeq	pc, r2, r4, lsr #4
   1937c:	andeq	pc, r2, ip, lsl #3
   19380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19384:	sub	sp, sp, #44	; 0x2c
   19388:	mov	r5, r0
   1938c:	mov	sl, r1
   19390:	bl	11688 <__errno_location@plt>
   19394:	ldr	r4, [pc, #400]	; 1952c <lchmod@@Base+0x2360>
   19398:	cmn	r5, #-2147483647	; 0x80000001
   1939c:	ldr	r6, [r4]
   193a0:	mov	r8, r0
   193a4:	movne	r0, #0
   193a8:	moveq	r0, #1
   193ac:	ldr	r3, [r8]
   193b0:	orrs	r0, r0, r5, lsr #31
   193b4:	str	r3, [sp, #24]
   193b8:	bne	19528 <lchmod@@Base+0x235c>
   193bc:	ldr	r2, [r4, #4]
   193c0:	cmp	r5, r2
   193c4:	blt	19424 <lchmod@@Base+0x2258>
   193c8:	add	r7, r4, #8
   193cc:	cmp	r6, r7
   193d0:	str	r2, [sp, #36]	; 0x24
   193d4:	beq	194f8 <lchmod@@Base+0x232c>
   193d8:	mov	r3, #8
   193dc:	sub	r2, r5, r2
   193e0:	mov	r0, r6
   193e4:	str	r3, [sp]
   193e8:	add	r2, r2, #1
   193ec:	mvn	r3, #-2147483648	; 0x80000000
   193f0:	add	r1, sp, #36	; 0x24
   193f4:	bl	1c850 <lchmod@@Base+0x5684>
   193f8:	mov	r6, r0
   193fc:	str	r0, [r4]
   19400:	ldr	r0, [r4, #4]
   19404:	ldr	r2, [sp, #36]	; 0x24
   19408:	mov	r1, #0
   1940c:	sub	r2, r2, r0
   19410:	add	r0, r6, r0, lsl #3
   19414:	lsl	r2, r2, #3
   19418:	bl	116ac <memset@plt>
   1941c:	ldr	r3, [sp, #36]	; 0x24
   19420:	str	r3, [r4, #4]
   19424:	ldr	r4, [pc, #260]	; 19530 <lchmod@@Base+0x2364>
   19428:	add	fp, r6, r5, lsl #3
   1942c:	ldr	r9, [r6, r5, lsl #3]
   19430:	ldr	r0, [r4, #4]
   19434:	ldr	r3, [r4]
   19438:	ldr	r7, [fp, #4]
   1943c:	ldr	r1, [r4, #44]	; 0x2c
   19440:	ldr	r2, [r4, #40]	; 0x28
   19444:	orr	r0, r0, #1
   19448:	str	r3, [sp]
   1944c:	add	r3, r4, #8
   19450:	str	r0, [sp, #28]
   19454:	str	r0, [sp, #4]
   19458:	str	r1, [sp, #16]
   1945c:	str	r2, [sp, #12]
   19460:	str	r3, [sp, #8]
   19464:	mov	r0, r7
   19468:	mov	r1, r9
   1946c:	mvn	r3, #0
   19470:	mov	r2, sl
   19474:	bl	17a64 <lchmod@@Base+0x898>
   19478:	cmp	r9, r0
   1947c:	bhi	194e4 <lchmod@@Base+0x2318>
   19480:	add	r3, r4, #48	; 0x30
   19484:	add	r9, r0, #1
   19488:	cmp	r7, r3
   1948c:	str	r9, [r6, r5, lsl #3]
   19490:	beq	1949c <lchmod@@Base+0x22d0>
   19494:	mov	r0, r7
   19498:	bl	1309c <__assert_fail@plt+0x1870>
   1949c:	mov	r0, r9
   194a0:	bl	1c634 <lchmod@@Base+0x5468>
   194a4:	ldr	ip, [r4, #44]	; 0x2c
   194a8:	ldr	r3, [r4]
   194ac:	ldr	lr, [r4, #40]	; 0x28
   194b0:	ldr	r4, [pc, #124]	; 19534 <lchmod@@Base+0x2368>
   194b4:	mov	r2, sl
   194b8:	mov	r1, r9
   194bc:	str	r0, [fp, #4]
   194c0:	str	r4, [sp, #8]
   194c4:	ldr	r4, [sp, #28]
   194c8:	str	r3, [sp]
   194cc:	str	r4, [sp, #4]
   194d0:	str	ip, [sp, #16]
   194d4:	str	lr, [sp, #12]
   194d8:	mvn	r3, #0
   194dc:	mov	r7, r0
   194e0:	bl	17a64 <lchmod@@Base+0x898>
   194e4:	ldr	r3, [sp, #24]
   194e8:	mov	r0, r7
   194ec:	str	r3, [r8]
   194f0:	add	sp, sp, #44	; 0x2c
   194f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194f8:	mov	r3, #8
   194fc:	sub	r2, r5, r2
   19500:	str	r3, [sp]
   19504:	add	r1, sp, #36	; 0x24
   19508:	add	r2, r2, #1
   1950c:	mvn	r3, #-2147483648	; 0x80000000
   19510:	bl	1c850 <lchmod@@Base+0x5684>
   19514:	mov	r6, r0
   19518:	ldm	r7, {r0, r1}
   1951c:	str	r6, [r4]
   19520:	stm	r6, {r0, r1}
   19524:	b	19400 <lchmod@@Base+0x2234>
   19528:	bl	117d8 <abort@plt>
   1952c:	andeq	pc, r2, r4, lsl #3
   19530:	strdeq	pc, [r2], -r4
   19534:	strdeq	pc, [r2], -ip
   19538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1953c:	sub	sp, sp, #52	; 0x34
   19540:	mov	r5, r0
   19544:	mov	sl, r1
   19548:	mov	fp, r2
   1954c:	bl	11688 <__errno_location@plt>
   19550:	ldr	r4, [pc, #408]	; 196f0 <lchmod@@Base+0x2524>
   19554:	cmn	r5, #-2147483647	; 0x80000001
   19558:	ldr	r6, [r4]
   1955c:	mov	r8, r0
   19560:	movne	r0, #0
   19564:	moveq	r0, #1
   19568:	ldr	r3, [r8]
   1956c:	orrs	r0, r0, r5, lsr #31
   19570:	str	r3, [sp, #28]
   19574:	bne	196ec <lchmod@@Base+0x2520>
   19578:	ldr	r2, [r4, #4]
   1957c:	cmp	r5, r2
   19580:	blt	195e0 <lchmod@@Base+0x2414>
   19584:	add	r7, r4, #8
   19588:	cmp	r6, r7
   1958c:	str	r2, [sp, #44]	; 0x2c
   19590:	beq	196bc <lchmod@@Base+0x24f0>
   19594:	mov	r3, #8
   19598:	sub	r2, r5, r2
   1959c:	mov	r0, r6
   195a0:	str	r3, [sp]
   195a4:	add	r2, r2, #1
   195a8:	mvn	r3, #-2147483648	; 0x80000000
   195ac:	add	r1, sp, #44	; 0x2c
   195b0:	bl	1c850 <lchmod@@Base+0x5684>
   195b4:	mov	r6, r0
   195b8:	str	r0, [r4]
   195bc:	ldr	r0, [r4, #4]
   195c0:	ldr	r2, [sp, #44]	; 0x2c
   195c4:	mov	r1, #0
   195c8:	sub	r2, r2, r0
   195cc:	add	r0, r6, r0, lsl #3
   195d0:	lsl	r2, r2, #3
   195d4:	bl	116ac <memset@plt>
   195d8:	ldr	r3, [sp, #44]	; 0x2c
   195dc:	str	r3, [r4, #4]
   195e0:	ldr	r4, [pc, #268]	; 196f4 <lchmod@@Base+0x2528>
   195e4:	add	r3, r6, r5, lsl #3
   195e8:	str	r3, [sp, #32]
   195ec:	ldr	r7, [r3, #4]
   195f0:	ldr	r0, [r4, #4]
   195f4:	ldr	r3, [r4]
   195f8:	ldr	r9, [r6, r5, lsl #3]
   195fc:	ldr	r1, [r4, #44]	; 0x2c
   19600:	ldr	r2, [r4, #40]	; 0x28
   19604:	orr	r0, r0, #1
   19608:	str	r3, [sp]
   1960c:	add	r3, r4, #8
   19610:	str	r0, [sp, #36]	; 0x24
   19614:	str	r0, [sp, #4]
   19618:	str	r1, [sp, #16]
   1961c:	str	r2, [sp, #12]
   19620:	str	r3, [sp, #8]
   19624:	mov	r0, r7
   19628:	mov	r1, r9
   1962c:	mov	r3, fp
   19630:	mov	r2, sl
   19634:	bl	17a64 <lchmod@@Base+0x898>
   19638:	cmp	r9, r0
   1963c:	bhi	196a8 <lchmod@@Base+0x24dc>
   19640:	add	r3, r4, #48	; 0x30
   19644:	add	r9, r0, #1
   19648:	cmp	r7, r3
   1964c:	str	r9, [r6, r5, lsl #3]
   19650:	beq	1965c <lchmod@@Base+0x2490>
   19654:	mov	r0, r7
   19658:	bl	1309c <__assert_fail@plt+0x1870>
   1965c:	mov	r0, r9
   19660:	bl	1c634 <lchmod@@Base+0x5468>
   19664:	ldr	ip, [sp, #32]
   19668:	ldr	lr, [r4, #44]	; 0x2c
   1966c:	ldr	r5, [r4, #40]	; 0x28
   19670:	mov	r3, fp
   19674:	mov	r2, sl
   19678:	mov	r1, r9
   1967c:	str	r0, [ip, #4]
   19680:	ldr	ip, [r4]
   19684:	ldr	r4, [pc, #108]	; 196f8 <lchmod@@Base+0x252c>
   19688:	str	lr, [sp, #16]
   1968c:	str	r4, [sp, #8]
   19690:	ldr	r4, [sp, #36]	; 0x24
   19694:	str	r5, [sp, #12]
   19698:	str	r4, [sp, #4]
   1969c:	str	ip, [sp]
   196a0:	mov	r7, r0
   196a4:	bl	17a64 <lchmod@@Base+0x898>
   196a8:	ldr	r3, [sp, #28]
   196ac:	mov	r0, r7
   196b0:	str	r3, [r8]
   196b4:	add	sp, sp, #52	; 0x34
   196b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196bc:	mov	r3, #8
   196c0:	sub	r2, r5, r2
   196c4:	str	r3, [sp]
   196c8:	add	r1, sp, #44	; 0x2c
   196cc:	add	r2, r2, #1
   196d0:	mvn	r3, #-2147483648	; 0x80000000
   196d4:	bl	1c850 <lchmod@@Base+0x5684>
   196d8:	mov	r6, r0
   196dc:	ldm	r7, {r0, r1}
   196e0:	str	r6, [r4]
   196e4:	stm	r6, {r0, r1}
   196e8:	b	195bc <lchmod@@Base+0x23f0>
   196ec:	bl	117d8 <abort@plt>
   196f0:	andeq	pc, r2, r4, lsl #3
   196f4:	strdeq	pc, [r2], -r4
   196f8:	strdeq	pc, [r2], -ip
   196fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19700:	sub	sp, sp, #44	; 0x2c
   19704:	mov	sl, r0
   19708:	bl	11688 <__errno_location@plt>
   1970c:	ldr	r4, [pc, #352]	; 19874 <lchmod@@Base+0x26a8>
   19710:	ldr	r2, [r4, #4]
   19714:	ldr	r5, [r4]
   19718:	cmp	r2, #0
   1971c:	ldr	r3, [r0]
   19720:	mov	r8, r0
   19724:	str	r3, [sp, #28]
   19728:	bgt	19784 <lchmod@@Base+0x25b8>
   1972c:	add	r6, r4, #8
   19730:	cmp	r5, r6
   19734:	str	r2, [sp, #36]	; 0x24
   19738:	beq	19844 <lchmod@@Base+0x2678>
   1973c:	mov	r3, #8
   19740:	mov	r0, r5
   19744:	str	r3, [sp]
   19748:	rsb	r2, r2, #1
   1974c:	mvn	r3, #-2147483648	; 0x80000000
   19750:	add	r1, sp, #36	; 0x24
   19754:	bl	1c850 <lchmod@@Base+0x5684>
   19758:	mov	r5, r0
   1975c:	str	r0, [r4]
   19760:	ldr	r0, [r4, #4]
   19764:	ldr	r2, [sp, #36]	; 0x24
   19768:	mov	r1, #0
   1976c:	sub	r2, r2, r0
   19770:	add	r0, r5, r0, lsl #3
   19774:	lsl	r2, r2, #3
   19778:	bl	116ac <memset@plt>
   1977c:	ldr	r3, [sp, #36]	; 0x24
   19780:	str	r3, [r4, #4]
   19784:	ldr	r4, [pc, #236]	; 19878 <lchmod@@Base+0x26ac>
   19788:	ldr	r9, [r5]
   1978c:	ldr	r6, [r5, #4]
   19790:	ldr	r7, [r4, #4]
   19794:	ldr	r1, [r4, #44]	; 0x2c
   19798:	ldr	r2, [r4, #40]	; 0x28
   1979c:	ldr	r3, [r4]
   197a0:	orr	r7, r7, #1
   197a4:	add	fp, r4, #8
   197a8:	str	r1, [sp, #16]
   197ac:	str	r2, [sp, #12]
   197b0:	str	r3, [sp]
   197b4:	str	r7, [sp, #4]
   197b8:	str	fp, [sp, #8]
   197bc:	mov	r1, r9
   197c0:	mov	r0, r6
   197c4:	mvn	r3, #0
   197c8:	mov	r2, sl
   197cc:	bl	17a64 <lchmod@@Base+0x898>
   197d0:	cmp	r9, r0
   197d4:	bhi	19830 <lchmod@@Base+0x2664>
   197d8:	add	r3, r4, #48	; 0x30
   197dc:	add	r9, r0, #1
   197e0:	cmp	r6, r3
   197e4:	str	r9, [r5]
   197e8:	beq	197f4 <lchmod@@Base+0x2628>
   197ec:	mov	r0, r6
   197f0:	bl	1309c <__assert_fail@plt+0x1870>
   197f4:	mov	r0, r9
   197f8:	bl	1c634 <lchmod@@Base+0x5468>
   197fc:	ldr	ip, [r4, #44]	; 0x2c
   19800:	ldr	r3, [r4]
   19804:	ldr	lr, [r4, #40]	; 0x28
   19808:	mov	r2, sl
   1980c:	mov	r1, r9
   19810:	str	r0, [r5, #4]
   19814:	str	r3, [sp]
   19818:	stmib	sp, {r7, fp}
   1981c:	str	ip, [sp, #16]
   19820:	str	lr, [sp, #12]
   19824:	mvn	r3, #0
   19828:	mov	r6, r0
   1982c:	bl	17a64 <lchmod@@Base+0x898>
   19830:	ldr	r3, [sp, #28]
   19834:	mov	r0, r6
   19838:	str	r3, [r8]
   1983c:	add	sp, sp, #44	; 0x2c
   19840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19844:	mov	r3, #8
   19848:	str	r3, [sp]
   1984c:	add	r1, sp, #36	; 0x24
   19850:	rsb	r2, r2, #1
   19854:	mvn	r3, #-2147483648	; 0x80000000
   19858:	mov	r0, #0
   1985c:	bl	1c850 <lchmod@@Base+0x5684>
   19860:	mov	r5, r0
   19864:	ldm	r6, {r0, r1}
   19868:	str	r5, [r4]
   1986c:	stm	r5, {r0, r1}
   19870:	b	19760 <lchmod@@Base+0x2594>
   19874:	andeq	pc, r2, r4, lsl #3
   19878:	strdeq	pc, [r2], -r4
   1987c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19880:	sub	sp, sp, #44	; 0x2c
   19884:	mov	r9, r0
   19888:	mov	sl, r1
   1988c:	bl	11688 <__errno_location@plt>
   19890:	ldr	r4, [pc, #364]	; 19a04 <lchmod@@Base+0x2838>
   19894:	ldr	r2, [r4, #4]
   19898:	ldr	r5, [r4]
   1989c:	cmp	r2, #0
   198a0:	ldr	r3, [r0]
   198a4:	mov	r7, r0
   198a8:	str	r3, [sp, #24]
   198ac:	bgt	19908 <lchmod@@Base+0x273c>
   198b0:	add	r6, r4, #8
   198b4:	cmp	r5, r6
   198b8:	str	r2, [sp, #36]	; 0x24
   198bc:	beq	199d4 <lchmod@@Base+0x2808>
   198c0:	mov	r3, #8
   198c4:	mov	r0, r5
   198c8:	str	r3, [sp]
   198cc:	rsb	r2, r2, #1
   198d0:	mvn	r3, #-2147483648	; 0x80000000
   198d4:	add	r1, sp, #36	; 0x24
   198d8:	bl	1c850 <lchmod@@Base+0x5684>
   198dc:	mov	r5, r0
   198e0:	str	r0, [r4]
   198e4:	ldr	r0, [r4, #4]
   198e8:	ldr	r2, [sp, #36]	; 0x24
   198ec:	mov	r1, #0
   198f0:	sub	r2, r2, r0
   198f4:	add	r0, r5, r0, lsl #3
   198f8:	lsl	r2, r2, #3
   198fc:	bl	116ac <memset@plt>
   19900:	ldr	r3, [sp, #36]	; 0x24
   19904:	str	r3, [r4, #4]
   19908:	ldr	r4, [pc, #248]	; 19a08 <lchmod@@Base+0x283c>
   1990c:	ldr	r8, [r5]
   19910:	ldr	r6, [r5, #4]
   19914:	ldr	r0, [r4, #4]
   19918:	ldr	r1, [r4, #44]	; 0x2c
   1991c:	ldr	r2, [r4, #40]	; 0x28
   19920:	ldr	r3, [r4]
   19924:	orr	r0, r0, #1
   19928:	add	fp, r4, #8
   1992c:	str	r0, [sp, #28]
   19930:	str	r0, [sp, #4]
   19934:	str	r1, [sp, #16]
   19938:	str	r2, [sp, #12]
   1993c:	str	r3, [sp]
   19940:	str	fp, [sp, #8]
   19944:	mov	r1, r8
   19948:	mov	r0, r6
   1994c:	mov	r3, sl
   19950:	mov	r2, r9
   19954:	bl	17a64 <lchmod@@Base+0x898>
   19958:	cmp	r8, r0
   1995c:	bhi	199c0 <lchmod@@Base+0x27f4>
   19960:	add	r3, r4, #48	; 0x30
   19964:	add	r8, r0, #1
   19968:	cmp	r6, r3
   1996c:	str	r8, [r5]
   19970:	beq	1997c <lchmod@@Base+0x27b0>
   19974:	mov	r0, r6
   19978:	bl	1309c <__assert_fail@plt+0x1870>
   1997c:	mov	r0, r8
   19980:	bl	1c634 <lchmod@@Base+0x5468>
   19984:	ldr	lr, [r4, #44]	; 0x2c
   19988:	ldr	ip, [r4]
   1998c:	mov	r3, sl
   19990:	mov	r2, r9
   19994:	mov	r1, r8
   19998:	str	r0, [r5, #4]
   1999c:	ldr	r5, [r4, #40]	; 0x28
   199a0:	ldr	r4, [sp, #28]
   199a4:	str	fp, [sp, #8]
   199a8:	str	r4, [sp, #4]
   199ac:	str	lr, [sp, #16]
   199b0:	str	r5, [sp, #12]
   199b4:	str	ip, [sp]
   199b8:	mov	r6, r0
   199bc:	bl	17a64 <lchmod@@Base+0x898>
   199c0:	ldr	r3, [sp, #24]
   199c4:	mov	r0, r6
   199c8:	str	r3, [r7]
   199cc:	add	sp, sp, #44	; 0x2c
   199d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199d4:	mov	r3, #8
   199d8:	str	r3, [sp]
   199dc:	add	r1, sp, #36	; 0x24
   199e0:	rsb	r2, r2, #1
   199e4:	mvn	r3, #-2147483648	; 0x80000000
   199e8:	mov	r0, #0
   199ec:	bl	1c850 <lchmod@@Base+0x5684>
   199f0:	mov	r5, r0
   199f4:	ldm	r6, {r0, r1}
   199f8:	str	r5, [r4]
   199fc:	stm	r5, {r0, r1}
   19a00:	b	198e4 <lchmod@@Base+0x2718>
   19a04:	andeq	pc, r2, r4, lsl #3
   19a08:	strdeq	pc, [r2], -r4
   19a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a10:	sub	sp, sp, #132	; 0x84
   19a14:	mov	r5, r1
   19a18:	mov	r4, r0
   19a1c:	mov	r9, r2
   19a20:	add	r0, sp, #80	; 0x50
   19a24:	mov	r2, #48	; 0x30
   19a28:	mov	r1, #0
   19a2c:	bl	116ac <memset@plt>
   19a30:	cmp	r5, #10
   19a34:	beq	19bec <lchmod@@Base+0x2a20>
   19a38:	add	lr, sp, #80	; 0x50
   19a3c:	str	r5, [sp, #80]	; 0x50
   19a40:	ldm	lr!, {r0, r1, r2, r3}
   19a44:	add	ip, sp, #32
   19a48:	ldr	r6, [pc, #416]	; 19bf0 <lchmod@@Base+0x2a24>
   19a4c:	stmia	ip!, {r0, r1, r2, r3}
   19a50:	ldm	lr!, {r0, r1, r2, r3}
   19a54:	stmia	ip!, {r0, r1, r2, r3}
   19a58:	ldm	lr, {r0, r1, r2, r3}
   19a5c:	stm	ip, {r0, r1, r2, r3}
   19a60:	bl	11688 <__errno_location@plt>
   19a64:	cmn	r4, #-2147483647	; 0x80000001
   19a68:	ldr	r5, [r6]
   19a6c:	mov	r7, r0
   19a70:	movne	r0, #0
   19a74:	moveq	r0, #1
   19a78:	ldr	r3, [r7]
   19a7c:	orrs	r0, r0, r4, lsr #31
   19a80:	str	r3, [sp, #24]
   19a84:	bne	19bec <lchmod@@Base+0x2a20>
   19a88:	ldr	r2, [r6, #4]
   19a8c:	cmp	r4, r2
   19a90:	blt	19af0 <lchmod@@Base+0x2924>
   19a94:	add	r8, r6, #8
   19a98:	cmp	r5, r8
   19a9c:	str	r2, [sp, #80]	; 0x50
   19aa0:	beq	19bbc <lchmod@@Base+0x29f0>
   19aa4:	mov	r3, #8
   19aa8:	sub	r2, r4, r2
   19aac:	mov	r0, r5
   19ab0:	str	r3, [sp]
   19ab4:	add	r2, r2, #1
   19ab8:	add	r1, sp, #80	; 0x50
   19abc:	mvn	r3, #-2147483648	; 0x80000000
   19ac0:	bl	1c850 <lchmod@@Base+0x5684>
   19ac4:	mov	r5, r0
   19ac8:	str	r0, [r6]
   19acc:	ldr	r0, [r6, #4]
   19ad0:	ldr	r2, [sp, #80]	; 0x50
   19ad4:	mov	r1, #0
   19ad8:	sub	r2, r2, r0
   19adc:	add	r0, r5, r0, lsl #3
   19ae0:	lsl	r2, r2, #3
   19ae4:	bl	116ac <memset@plt>
   19ae8:	ldr	r3, [sp, #80]	; 0x50
   19aec:	str	r3, [r6, #4]
   19af0:	add	fp, r5, r4, lsl #3
   19af4:	ldr	r1, [sp, #36]	; 0x24
   19af8:	ldr	r8, [r5, r4, lsl #3]
   19afc:	ldr	r6, [fp, #4]
   19b00:	ldr	r2, [sp, #72]	; 0x48
   19b04:	ldr	r3, [sp, #32]
   19b08:	ldr	ip, [sp, #76]	; 0x4c
   19b0c:	orr	r1, r1, #1
   19b10:	add	sl, sp, #40	; 0x28
   19b14:	str	r1, [sp, #28]
   19b18:	str	r1, [sp, #4]
   19b1c:	str	r2, [sp, #12]
   19b20:	str	r3, [sp]
   19b24:	mov	r0, r6
   19b28:	mov	r1, r8
   19b2c:	str	ip, [sp, #16]
   19b30:	str	sl, [sp, #8]
   19b34:	mvn	r3, #0
   19b38:	mov	r2, r9
   19b3c:	bl	17a64 <lchmod@@Base+0x898>
   19b40:	cmp	r8, r0
   19b44:	bhi	19ba8 <lchmod@@Base+0x29dc>
   19b48:	ldr	r3, [pc, #164]	; 19bf4 <lchmod@@Base+0x2a28>
   19b4c:	add	r8, r0, #1
   19b50:	cmp	r6, r3
   19b54:	str	r8, [r5, r4, lsl #3]
   19b58:	beq	19b64 <lchmod@@Base+0x2998>
   19b5c:	mov	r0, r6
   19b60:	bl	1309c <__assert_fail@plt+0x1870>
   19b64:	mov	r0, r8
   19b68:	bl	1c634 <lchmod@@Base+0x5468>
   19b6c:	ldr	lr, [sp, #76]	; 0x4c
   19b70:	ldr	r3, [sp, #32]
   19b74:	ldr	ip, [sp, #72]	; 0x48
   19b78:	ldr	r4, [sp, #28]
   19b7c:	mov	r2, r9
   19b80:	mov	r1, r8
   19b84:	str	r0, [fp, #4]
   19b88:	str	r3, [sp]
   19b8c:	str	sl, [sp, #8]
   19b90:	str	r4, [sp, #4]
   19b94:	str	lr, [sp, #16]
   19b98:	str	ip, [sp, #12]
   19b9c:	mvn	r3, #0
   19ba0:	mov	r6, r0
   19ba4:	bl	17a64 <lchmod@@Base+0x898>
   19ba8:	ldr	r3, [sp, #24]
   19bac:	mov	r0, r6
   19bb0:	str	r3, [r7]
   19bb4:	add	sp, sp, #132	; 0x84
   19bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bbc:	mov	r3, #8
   19bc0:	sub	r2, r4, r2
   19bc4:	add	r1, sp, #80	; 0x50
   19bc8:	str	r3, [sp]
   19bcc:	add	r2, r2, #1
   19bd0:	mvn	r3, #-2147483648	; 0x80000000
   19bd4:	bl	1c850 <lchmod@@Base+0x5684>
   19bd8:	mov	r5, r0
   19bdc:	ldm	r8, {r0, r1}
   19be0:	str	r5, [r6]
   19be4:	stm	r5, {r0, r1}
   19be8:	b	19acc <lchmod@@Base+0x2900>
   19bec:	bl	117d8 <abort@plt>
   19bf0:	andeq	pc, r2, r4, lsl #3
   19bf4:	andeq	pc, r2, r4, lsr #4
   19bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19bfc:	sub	sp, sp, #132	; 0x84
   19c00:	mov	r5, r1
   19c04:	mov	r4, r0
   19c08:	mov	r9, r2
   19c0c:	add	r0, sp, #80	; 0x50
   19c10:	mov	r2, #48	; 0x30
   19c14:	mov	r1, #0
   19c18:	mov	sl, r3
   19c1c:	bl	116ac <memset@plt>
   19c20:	cmp	r5, #10
   19c24:	beq	19de0 <lchmod@@Base+0x2c14>
   19c28:	add	lr, sp, #80	; 0x50
   19c2c:	str	r5, [sp, #80]	; 0x50
   19c30:	ldm	lr!, {r0, r1, r2, r3}
   19c34:	add	ip, sp, #32
   19c38:	ldr	r6, [pc, #420]	; 19de4 <lchmod@@Base+0x2c18>
   19c3c:	stmia	ip!, {r0, r1, r2, r3}
   19c40:	ldm	lr!, {r0, r1, r2, r3}
   19c44:	stmia	ip!, {r0, r1, r2, r3}
   19c48:	ldm	lr, {r0, r1, r2, r3}
   19c4c:	stm	ip, {r0, r1, r2, r3}
   19c50:	bl	11688 <__errno_location@plt>
   19c54:	cmn	r4, #-2147483647	; 0x80000001
   19c58:	ldr	r5, [r6]
   19c5c:	mov	r7, r0
   19c60:	movne	r0, #0
   19c64:	moveq	r0, #1
   19c68:	ldr	r3, [r7]
   19c6c:	orrs	r0, r0, r4, lsr #31
   19c70:	str	r3, [sp, #24]
   19c74:	bne	19de0 <lchmod@@Base+0x2c14>
   19c78:	ldr	r2, [r6, #4]
   19c7c:	cmp	r4, r2
   19c80:	blt	19ce0 <lchmod@@Base+0x2b14>
   19c84:	add	r8, r6, #8
   19c88:	cmp	r5, r8
   19c8c:	str	r2, [sp, #80]	; 0x50
   19c90:	beq	19db0 <lchmod@@Base+0x2be4>
   19c94:	mov	r3, #8
   19c98:	sub	r2, r4, r2
   19c9c:	mov	r0, r5
   19ca0:	str	r3, [sp]
   19ca4:	add	r2, r2, #1
   19ca8:	add	r1, sp, #80	; 0x50
   19cac:	mvn	r3, #-2147483648	; 0x80000000
   19cb0:	bl	1c850 <lchmod@@Base+0x5684>
   19cb4:	mov	r5, r0
   19cb8:	str	r0, [r6]
   19cbc:	ldr	r0, [r6, #4]
   19cc0:	ldr	r2, [sp, #80]	; 0x50
   19cc4:	mov	r1, #0
   19cc8:	sub	r2, r2, r0
   19ccc:	add	r0, r5, r0, lsl #3
   19cd0:	lsl	r2, r2, #3
   19cd4:	bl	116ac <memset@plt>
   19cd8:	ldr	r3, [sp, #80]	; 0x50
   19cdc:	str	r3, [r6, #4]
   19ce0:	add	fp, r5, r4, lsl #3
   19ce4:	ldr	r3, [sp, #32]
   19ce8:	ldr	r1, [sp, #36]	; 0x24
   19cec:	ldr	r8, [r5, r4, lsl #3]
   19cf0:	ldr	r6, [fp, #4]
   19cf4:	ldr	r2, [sp, #72]	; 0x48
   19cf8:	ldr	ip, [sp, #76]	; 0x4c
   19cfc:	orr	r1, r1, #1
   19d00:	str	r3, [sp]
   19d04:	add	r3, sp, #40	; 0x28
   19d08:	str	r1, [sp, #28]
   19d0c:	str	r1, [sp, #4]
   19d10:	str	r2, [sp, #12]
   19d14:	str	r3, [sp, #8]
   19d18:	mov	r0, r6
   19d1c:	mov	r1, r8
   19d20:	str	ip, [sp, #16]
   19d24:	mov	r3, sl
   19d28:	mov	r2, r9
   19d2c:	bl	17a64 <lchmod@@Base+0x898>
   19d30:	cmp	r8, r0
   19d34:	bhi	19d9c <lchmod@@Base+0x2bd0>
   19d38:	ldr	r3, [pc, #168]	; 19de8 <lchmod@@Base+0x2c1c>
   19d3c:	add	r8, r0, #1
   19d40:	cmp	r6, r3
   19d44:	str	r8, [r5, r4, lsl #3]
   19d48:	beq	19d54 <lchmod@@Base+0x2b88>
   19d4c:	mov	r0, r6
   19d50:	bl	1309c <__assert_fail@plt+0x1870>
   19d54:	mov	r0, r8
   19d58:	bl	1c634 <lchmod@@Base+0x5468>
   19d5c:	add	lr, sp, #40	; 0x28
   19d60:	ldr	ip, [sp, #76]	; 0x4c
   19d64:	ldr	r4, [sp, #72]	; 0x48
   19d68:	ldr	r5, [sp, #28]
   19d6c:	mov	r3, sl
   19d70:	mov	r2, r9
   19d74:	mov	r1, r8
   19d78:	str	r0, [fp, #4]
   19d7c:	str	lr, [sp, #8]
   19d80:	ldr	lr, [sp, #32]
   19d84:	str	r5, [sp, #4]
   19d88:	str	ip, [sp, #16]
   19d8c:	str	r4, [sp, #12]
   19d90:	str	lr, [sp]
   19d94:	mov	r6, r0
   19d98:	bl	17a64 <lchmod@@Base+0x898>
   19d9c:	ldr	r3, [sp, #24]
   19da0:	mov	r0, r6
   19da4:	str	r3, [r7]
   19da8:	add	sp, sp, #132	; 0x84
   19dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19db0:	mov	r3, #8
   19db4:	sub	r2, r4, r2
   19db8:	add	r1, sp, #80	; 0x50
   19dbc:	str	r3, [sp]
   19dc0:	add	r2, r2, #1
   19dc4:	mvn	r3, #-2147483648	; 0x80000000
   19dc8:	bl	1c850 <lchmod@@Base+0x5684>
   19dcc:	mov	r5, r0
   19dd0:	ldm	r8, {r0, r1}
   19dd4:	str	r5, [r6]
   19dd8:	stm	r5, {r0, r1}
   19ddc:	b	19cbc <lchmod@@Base+0x2af0>
   19de0:	bl	117d8 <abort@plt>
   19de4:	andeq	pc, r2, r4, lsl #3
   19de8:	andeq	pc, r2, r4, lsr #4
   19dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19df0:	sub	sp, sp, #124	; 0x7c
   19df4:	mov	r4, r0
   19df8:	mov	r9, r1
   19dfc:	add	r0, sp, #72	; 0x48
   19e00:	mov	r2, #48	; 0x30
   19e04:	mov	r1, #0
   19e08:	bl	116ac <memset@plt>
   19e0c:	cmp	r4, #10
   19e10:	beq	19f9c <lchmod@@Base+0x2dd0>
   19e14:	add	lr, sp, #72	; 0x48
   19e18:	str	r4, [sp, #72]	; 0x48
   19e1c:	ldm	lr!, {r0, r1, r2, r3}
   19e20:	add	ip, sp, #24
   19e24:	ldr	r5, [pc, #372]	; 19fa0 <lchmod@@Base+0x2dd4>
   19e28:	stmia	ip!, {r0, r1, r2, r3}
   19e2c:	ldm	lr!, {r0, r1, r2, r3}
   19e30:	stmia	ip!, {r0, r1, r2, r3}
   19e34:	ldm	lr, {r0, r1, r2, r3}
   19e38:	stm	ip, {r0, r1, r2, r3}
   19e3c:	bl	11688 <__errno_location@plt>
   19e40:	ldr	r2, [r5, #4]
   19e44:	ldr	r4, [r5]
   19e48:	cmp	r2, #0
   19e4c:	mov	r7, r0
   19e50:	ldr	fp, [r0]
   19e54:	bgt	19eb0 <lchmod@@Base+0x2ce4>
   19e58:	add	r6, r5, #8
   19e5c:	cmp	r4, r6
   19e60:	str	r2, [sp, #72]	; 0x48
   19e64:	beq	19f6c <lchmod@@Base+0x2da0>
   19e68:	mov	r3, #8
   19e6c:	mov	r0, r4
   19e70:	str	r3, [sp]
   19e74:	rsb	r2, r2, #1
   19e78:	add	r1, sp, #72	; 0x48
   19e7c:	mvn	r3, #-2147483648	; 0x80000000
   19e80:	bl	1c850 <lchmod@@Base+0x5684>
   19e84:	mov	r4, r0
   19e88:	str	r0, [r5]
   19e8c:	ldr	r0, [r5, #4]
   19e90:	ldr	r2, [sp, #72]	; 0x48
   19e94:	mov	r1, #0
   19e98:	sub	r2, r2, r0
   19e9c:	add	r0, r4, r0, lsl #3
   19ea0:	lsl	r2, r2, #3
   19ea4:	bl	116ac <memset@plt>
   19ea8:	ldr	r3, [sp, #72]	; 0x48
   19eac:	str	r3, [r5, #4]
   19eb0:	ldr	r6, [sp, #28]
   19eb4:	ldr	r8, [r4]
   19eb8:	ldr	r5, [r4, #4]
   19ebc:	ldr	r2, [sp, #64]	; 0x40
   19ec0:	ldr	r3, [sp, #24]
   19ec4:	ldr	ip, [sp, #68]	; 0x44
   19ec8:	orr	r6, r6, #1
   19ecc:	add	sl, sp, #32
   19ed0:	str	r2, [sp, #12]
   19ed4:	str	r3, [sp]
   19ed8:	str	r6, [sp, #4]
   19edc:	mov	r1, r8
   19ee0:	mov	r0, r5
   19ee4:	str	ip, [sp, #16]
   19ee8:	str	sl, [sp, #8]
   19eec:	mvn	r3, #0
   19ef0:	mov	r2, r9
   19ef4:	bl	17a64 <lchmod@@Base+0x898>
   19ef8:	cmp	r8, r0
   19efc:	bhi	19f5c <lchmod@@Base+0x2d90>
   19f00:	ldr	r3, [pc, #156]	; 19fa4 <lchmod@@Base+0x2dd8>
   19f04:	add	r8, r0, #1
   19f08:	cmp	r5, r3
   19f0c:	str	r8, [r4]
   19f10:	beq	19f1c <lchmod@@Base+0x2d50>
   19f14:	mov	r0, r5
   19f18:	bl	1309c <__assert_fail@plt+0x1870>
   19f1c:	mov	r0, r8
   19f20:	bl	1c634 <lchmod@@Base+0x5468>
   19f24:	ldr	lr, [sp, #68]	; 0x44
   19f28:	ldr	r3, [sp, #24]
   19f2c:	ldr	ip, [sp, #64]	; 0x40
   19f30:	mov	r2, r9
   19f34:	mov	r1, r8
   19f38:	str	r0, [r4, #4]
   19f3c:	str	r3, [sp]
   19f40:	str	sl, [sp, #8]
   19f44:	str	r6, [sp, #4]
   19f48:	str	lr, [sp, #16]
   19f4c:	str	ip, [sp, #12]
   19f50:	mvn	r3, #0
   19f54:	mov	r5, r0
   19f58:	bl	17a64 <lchmod@@Base+0x898>
   19f5c:	mov	r0, r5
   19f60:	str	fp, [r7]
   19f64:	add	sp, sp, #124	; 0x7c
   19f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f6c:	mov	r3, #8
   19f70:	add	r1, sp, #72	; 0x48
   19f74:	str	r3, [sp]
   19f78:	rsb	r2, r2, #1
   19f7c:	mvn	r3, #-2147483648	; 0x80000000
   19f80:	mov	r0, #0
   19f84:	bl	1c850 <lchmod@@Base+0x5684>
   19f88:	mov	r4, r0
   19f8c:	ldm	r6, {r0, r1}
   19f90:	str	r4, [r5]
   19f94:	stm	r4, {r0, r1}
   19f98:	b	19e8c <lchmod@@Base+0x2cc0>
   19f9c:	bl	117d8 <abort@plt>
   19fa0:	andeq	pc, r2, r4, lsl #3
   19fa4:	andeq	pc, r2, r4, lsr #4
   19fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fac:	sub	sp, sp, #132	; 0x84
   19fb0:	mov	r4, r0
   19fb4:	mov	r9, r1
   19fb8:	mov	sl, r2
   19fbc:	add	r0, sp, #80	; 0x50
   19fc0:	mov	r2, #48	; 0x30
   19fc4:	mov	r1, #0
   19fc8:	bl	116ac <memset@plt>
   19fcc:	cmp	r4, #10
   19fd0:	beq	1a164 <lchmod@@Base+0x2f98>
   19fd4:	add	lr, sp, #80	; 0x50
   19fd8:	str	r4, [sp, #80]	; 0x50
   19fdc:	ldm	lr!, {r0, r1, r2, r3}
   19fe0:	add	ip, sp, #32
   19fe4:	ldr	r5, [pc, #380]	; 1a168 <lchmod@@Base+0x2f9c>
   19fe8:	stmia	ip!, {r0, r1, r2, r3}
   19fec:	ldm	lr!, {r0, r1, r2, r3}
   19ff0:	stmia	ip!, {r0, r1, r2, r3}
   19ff4:	ldm	lr, {r0, r1, r2, r3}
   19ff8:	stm	ip, {r0, r1, r2, r3}
   19ffc:	bl	11688 <__errno_location@plt>
   1a000:	ldr	r2, [r5, #4]
   1a004:	ldr	r4, [r5]
   1a008:	cmp	r2, #0
   1a00c:	ldr	r3, [r0]
   1a010:	mov	r7, r0
   1a014:	str	r3, [sp, #28]
   1a018:	bgt	1a074 <lchmod@@Base+0x2ea8>
   1a01c:	add	r6, r5, #8
   1a020:	cmp	r4, r6
   1a024:	str	r2, [sp, #80]	; 0x50
   1a028:	beq	1a134 <lchmod@@Base+0x2f68>
   1a02c:	mov	r3, #8
   1a030:	mov	r0, r4
   1a034:	str	r3, [sp]
   1a038:	rsb	r2, r2, #1
   1a03c:	add	r1, sp, #80	; 0x50
   1a040:	mvn	r3, #-2147483648	; 0x80000000
   1a044:	bl	1c850 <lchmod@@Base+0x5684>
   1a048:	mov	r4, r0
   1a04c:	str	r0, [r5]
   1a050:	ldr	r0, [r5, #4]
   1a054:	ldr	r2, [sp, #80]	; 0x50
   1a058:	mov	r1, #0
   1a05c:	sub	r2, r2, r0
   1a060:	add	r0, r4, r0, lsl #3
   1a064:	lsl	r2, r2, #3
   1a068:	bl	116ac <memset@plt>
   1a06c:	ldr	r3, [sp, #80]	; 0x50
   1a070:	str	r3, [r5, #4]
   1a074:	ldr	r6, [sp, #36]	; 0x24
   1a078:	ldr	r8, [r4]
   1a07c:	ldr	r5, [r4, #4]
   1a080:	ldr	r2, [sp, #72]	; 0x48
   1a084:	ldr	r3, [sp, #32]
   1a088:	ldr	ip, [sp, #76]	; 0x4c
   1a08c:	orr	r6, r6, #1
   1a090:	add	fp, sp, #40	; 0x28
   1a094:	str	r2, [sp, #12]
   1a098:	str	r3, [sp]
   1a09c:	str	r6, [sp, #4]
   1a0a0:	mov	r1, r8
   1a0a4:	mov	r0, r5
   1a0a8:	str	ip, [sp, #16]
   1a0ac:	str	fp, [sp, #8]
   1a0b0:	mov	r3, sl
   1a0b4:	mov	r2, r9
   1a0b8:	bl	17a64 <lchmod@@Base+0x898>
   1a0bc:	cmp	r8, r0
   1a0c0:	bhi	1a120 <lchmod@@Base+0x2f54>
   1a0c4:	ldr	r3, [pc, #160]	; 1a16c <lchmod@@Base+0x2fa0>
   1a0c8:	add	r8, r0, #1
   1a0cc:	cmp	r5, r3
   1a0d0:	str	r8, [r4]
   1a0d4:	beq	1a0e0 <lchmod@@Base+0x2f14>
   1a0d8:	mov	r0, r5
   1a0dc:	bl	1309c <__assert_fail@plt+0x1870>
   1a0e0:	mov	r0, r8
   1a0e4:	bl	1c634 <lchmod@@Base+0x5468>
   1a0e8:	ldr	ip, [sp, #76]	; 0x4c
   1a0ec:	ldr	lr, [sp, #32]
   1a0f0:	mov	r3, sl
   1a0f4:	mov	r2, r9
   1a0f8:	mov	r1, r8
   1a0fc:	str	r0, [r4, #4]
   1a100:	ldr	r4, [sp, #72]	; 0x48
   1a104:	str	fp, [sp, #8]
   1a108:	str	r6, [sp, #4]
   1a10c:	str	ip, [sp, #16]
   1a110:	str	r4, [sp, #12]
   1a114:	str	lr, [sp]
   1a118:	mov	r5, r0
   1a11c:	bl	17a64 <lchmod@@Base+0x898>
   1a120:	ldr	r3, [sp, #28]
   1a124:	mov	r0, r5
   1a128:	str	r3, [r7]
   1a12c:	add	sp, sp, #132	; 0x84
   1a130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a134:	mov	r3, #8
   1a138:	add	r1, sp, #80	; 0x50
   1a13c:	str	r3, [sp]
   1a140:	rsb	r2, r2, #1
   1a144:	mvn	r3, #-2147483648	; 0x80000000
   1a148:	mov	r0, #0
   1a14c:	bl	1c850 <lchmod@@Base+0x5684>
   1a150:	mov	r4, r0
   1a154:	ldm	r6, {r0, r1}
   1a158:	str	r4, [r5]
   1a15c:	stm	r4, {r0, r1}
   1a160:	b	1a050 <lchmod@@Base+0x2e84>
   1a164:	bl	117d8 <abort@plt>
   1a168:	andeq	pc, r2, r4, lsl #3
   1a16c:	andeq	pc, r2, r4, lsr #4
   1a170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a174:	mov	r4, r2
   1a178:	ldr	lr, [pc, #432]	; 1a330 <lchmod@@Base+0x3164>
   1a17c:	mov	sl, r0
   1a180:	mov	fp, r1
   1a184:	ldm	lr!, {r0, r1, r2, r3}
   1a188:	sub	sp, sp, #92	; 0x5c
   1a18c:	add	ip, sp, #40	; 0x28
   1a190:	lsr	r7, r4, #5
   1a194:	stmia	ip!, {r0, r1, r2, r3}
   1a198:	add	r6, sp, #48	; 0x30
   1a19c:	ldm	lr!, {r0, r1, r2, r3}
   1a1a0:	and	r4, r4, #31
   1a1a4:	ldr	r5, [pc, #392]	; 1a334 <lchmod@@Base+0x3168>
   1a1a8:	stmia	ip!, {r0, r1, r2, r3}
   1a1ac:	ldm	lr, {r0, r1, r2, r3}
   1a1b0:	stm	ip, {r0, r1, r2, r3}
   1a1b4:	ldr	r2, [r6, r7, lsl #2]
   1a1b8:	lsr	r3, r2, r4
   1a1bc:	eor	r3, r3, #1
   1a1c0:	and	r3, r3, #1
   1a1c4:	eor	r4, r2, r3, lsl r4
   1a1c8:	str	r4, [r6, r7, lsl #2]
   1a1cc:	bl	11688 <__errno_location@plt>
   1a1d0:	ldr	r2, [r5, #4]
   1a1d4:	ldr	r4, [r5]
   1a1d8:	cmp	r2, #0
   1a1dc:	ldr	r3, [r0]
   1a1e0:	mov	r8, r0
   1a1e4:	str	r3, [sp, #28]
   1a1e8:	bgt	1a244 <lchmod@@Base+0x3078>
   1a1ec:	add	r7, r5, #8
   1a1f0:	cmp	r4, r7
   1a1f4:	str	r2, [sp, #36]	; 0x24
   1a1f8:	beq	1a300 <lchmod@@Base+0x3134>
   1a1fc:	mov	r3, #8
   1a200:	mov	r0, r4
   1a204:	str	r3, [sp]
   1a208:	rsb	r2, r2, #1
   1a20c:	mvn	r3, #-2147483648	; 0x80000000
   1a210:	add	r1, sp, #36	; 0x24
   1a214:	bl	1c850 <lchmod@@Base+0x5684>
   1a218:	mov	r4, r0
   1a21c:	str	r0, [r5]
   1a220:	ldr	r0, [r5, #4]
   1a224:	ldr	r2, [sp, #36]	; 0x24
   1a228:	mov	r1, #0
   1a22c:	sub	r2, r2, r0
   1a230:	add	r0, r4, r0, lsl #3
   1a234:	lsl	r2, r2, #3
   1a238:	bl	116ac <memset@plt>
   1a23c:	ldr	r3, [sp, #36]	; 0x24
   1a240:	str	r3, [r5, #4]
   1a244:	ldr	r7, [sp, #44]	; 0x2c
   1a248:	ldr	r9, [r4]
   1a24c:	ldr	r5, [r4, #4]
   1a250:	ldr	r2, [sp, #80]	; 0x50
   1a254:	ldr	r3, [sp, #40]	; 0x28
   1a258:	ldr	ip, [sp, #84]	; 0x54
   1a25c:	orr	r7, r7, #1
   1a260:	str	r2, [sp, #12]
   1a264:	str	r3, [sp]
   1a268:	str	r7, [sp, #4]
   1a26c:	str	r6, [sp, #8]
   1a270:	mov	r1, r9
   1a274:	mov	r0, r5
   1a278:	str	ip, [sp, #16]
   1a27c:	mov	r3, fp
   1a280:	mov	r2, sl
   1a284:	bl	17a64 <lchmod@@Base+0x898>
   1a288:	cmp	r9, r0
   1a28c:	bhi	1a2ec <lchmod@@Base+0x3120>
   1a290:	ldr	r3, [pc, #160]	; 1a338 <lchmod@@Base+0x316c>
   1a294:	add	r9, r0, #1
   1a298:	cmp	r5, r3
   1a29c:	str	r9, [r4]
   1a2a0:	beq	1a2ac <lchmod@@Base+0x30e0>
   1a2a4:	mov	r0, r5
   1a2a8:	bl	1309c <__assert_fail@plt+0x1870>
   1a2ac:	mov	r0, r9
   1a2b0:	bl	1c634 <lchmod@@Base+0x5468>
   1a2b4:	ldr	ip, [sp, #84]	; 0x54
   1a2b8:	ldr	lr, [sp, #40]	; 0x28
   1a2bc:	mov	r3, fp
   1a2c0:	mov	r2, sl
   1a2c4:	mov	r1, r9
   1a2c8:	str	r0, [r4, #4]
   1a2cc:	ldr	r4, [sp, #80]	; 0x50
   1a2d0:	str	r6, [sp, #8]
   1a2d4:	str	r7, [sp, #4]
   1a2d8:	str	ip, [sp, #16]
   1a2dc:	str	r4, [sp, #12]
   1a2e0:	str	lr, [sp]
   1a2e4:	mov	r5, r0
   1a2e8:	bl	17a64 <lchmod@@Base+0x898>
   1a2ec:	ldr	r3, [sp, #28]
   1a2f0:	mov	r0, r5
   1a2f4:	str	r3, [r8]
   1a2f8:	add	sp, sp, #92	; 0x5c
   1a2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a300:	mov	r3, #8
   1a304:	str	r3, [sp]
   1a308:	add	r1, sp, #36	; 0x24
   1a30c:	rsb	r2, r2, #1
   1a310:	mvn	r3, #-2147483648	; 0x80000000
   1a314:	mov	r0, #0
   1a318:	bl	1c850 <lchmod@@Base+0x5684>
   1a31c:	mov	r4, r0
   1a320:	ldm	r7, {r0, r1}
   1a324:	str	r4, [r5]
   1a328:	stm	r4, {r0, r1}
   1a32c:	b	1a220 <lchmod@@Base+0x3054>
   1a330:	strdeq	pc, [r2], -r4
   1a334:	andeq	pc, r2, r4, lsl #3
   1a338:	andeq	pc, r2, r4, lsr #4
   1a33c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a340:	mov	r4, r1
   1a344:	ldr	lr, [pc, #420]	; 1a4f0 <lchmod@@Base+0x3324>
   1a348:	mov	r6, r0
   1a34c:	sub	sp, sp, #84	; 0x54
   1a350:	ldm	lr!, {r0, r1, r2, r3}
   1a354:	add	ip, sp, #32
   1a358:	lsr	r8, r4, #5
   1a35c:	add	r5, sp, #40	; 0x28
   1a360:	stmia	ip!, {r0, r1, r2, r3}
   1a364:	and	r4, r4, #31
   1a368:	ldm	lr!, {r0, r1, r2, r3}
   1a36c:	ldr	r7, [pc, #384]	; 1a4f4 <lchmod@@Base+0x3328>
   1a370:	stmia	ip!, {r0, r1, r2, r3}
   1a374:	ldm	lr, {r0, r1, r2, r3}
   1a378:	stm	ip, {r0, r1, r2, r3}
   1a37c:	ldr	r2, [r5, r8, lsl #2]
   1a380:	lsr	r3, r2, r4
   1a384:	eor	r3, r3, #1
   1a388:	and	r3, r3, #1
   1a38c:	eor	r4, r2, r3, lsl r4
   1a390:	str	r4, [r5, r8, lsl #2]
   1a394:	bl	11688 <__errno_location@plt>
   1a398:	ldr	r2, [r7, #4]
   1a39c:	ldr	r4, [r7]
   1a3a0:	cmp	r2, #0
   1a3a4:	mov	r9, r0
   1a3a8:	ldr	sl, [r0]
   1a3ac:	bgt	1a408 <lchmod@@Base+0x323c>
   1a3b0:	add	r8, r7, #8
   1a3b4:	cmp	r4, r8
   1a3b8:	str	r2, [sp, #28]
   1a3bc:	beq	1a4c0 <lchmod@@Base+0x32f4>
   1a3c0:	mov	r3, #8
   1a3c4:	mov	r0, r4
   1a3c8:	str	r3, [sp]
   1a3cc:	rsb	r2, r2, #1
   1a3d0:	mvn	r3, #-2147483648	; 0x80000000
   1a3d4:	add	r1, sp, #28
   1a3d8:	bl	1c850 <lchmod@@Base+0x5684>
   1a3dc:	mov	r4, r0
   1a3e0:	str	r0, [r7]
   1a3e4:	ldr	r0, [r7, #4]
   1a3e8:	ldr	r2, [sp, #28]
   1a3ec:	mov	r1, #0
   1a3f0:	sub	r2, r2, r0
   1a3f4:	add	r0, r4, r0, lsl #3
   1a3f8:	lsl	r2, r2, #3
   1a3fc:	bl	116ac <memset@plt>
   1a400:	ldr	r3, [sp, #28]
   1a404:	str	r3, [r7, #4]
   1a408:	ldr	r8, [sp, #36]	; 0x24
   1a40c:	ldr	fp, [r4]
   1a410:	ldr	r7, [r4, #4]
   1a414:	ldr	r2, [sp, #72]	; 0x48
   1a418:	ldr	r3, [sp, #32]
   1a41c:	ldr	ip, [sp, #76]	; 0x4c
   1a420:	orr	r8, r8, #1
   1a424:	str	r2, [sp, #12]
   1a428:	str	r3, [sp]
   1a42c:	str	r8, [sp, #4]
   1a430:	str	r5, [sp, #8]
   1a434:	mov	r1, fp
   1a438:	mov	r0, r7
   1a43c:	str	ip, [sp, #16]
   1a440:	mvn	r3, #0
   1a444:	mov	r2, r6
   1a448:	bl	17a64 <lchmod@@Base+0x898>
   1a44c:	cmp	fp, r0
   1a450:	bhi	1a4b0 <lchmod@@Base+0x32e4>
   1a454:	ldr	r3, [pc, #156]	; 1a4f8 <lchmod@@Base+0x332c>
   1a458:	add	fp, r0, #1
   1a45c:	cmp	r7, r3
   1a460:	str	fp, [r4]
   1a464:	beq	1a470 <lchmod@@Base+0x32a4>
   1a468:	mov	r0, r7
   1a46c:	bl	1309c <__assert_fail@plt+0x1870>
   1a470:	mov	r0, fp
   1a474:	bl	1c634 <lchmod@@Base+0x5468>
   1a478:	ldr	lr, [sp, #76]	; 0x4c
   1a47c:	ldr	r3, [sp, #32]
   1a480:	ldr	ip, [sp, #72]	; 0x48
   1a484:	mov	r2, r6
   1a488:	mov	r1, fp
   1a48c:	str	r0, [r4, #4]
   1a490:	str	r3, [sp]
   1a494:	str	r5, [sp, #8]
   1a498:	str	r8, [sp, #4]
   1a49c:	str	lr, [sp, #16]
   1a4a0:	str	ip, [sp, #12]
   1a4a4:	mvn	r3, #0
   1a4a8:	mov	r7, r0
   1a4ac:	bl	17a64 <lchmod@@Base+0x898>
   1a4b0:	mov	r0, r7
   1a4b4:	str	sl, [r9]
   1a4b8:	add	sp, sp, #84	; 0x54
   1a4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4c0:	mov	r3, #8
   1a4c4:	str	r3, [sp]
   1a4c8:	add	r1, sp, #28
   1a4cc:	rsb	r2, r2, #1
   1a4d0:	mvn	r3, #-2147483648	; 0x80000000
   1a4d4:	mov	r0, #0
   1a4d8:	bl	1c850 <lchmod@@Base+0x5684>
   1a4dc:	mov	r4, r0
   1a4e0:	ldm	r8, {r0, r1}
   1a4e4:	str	r4, [r7]
   1a4e8:	stm	r4, {r0, r1}
   1a4ec:	b	1a3e4 <lchmod@@Base+0x3218>
   1a4f0:	strdeq	pc, [r2], -r4
   1a4f4:	andeq	pc, r2, r4, lsl #3
   1a4f8:	andeq	pc, r2, r4, lsr #4
   1a4fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a500:	mov	r6, r0
   1a504:	ldr	lr, [pc, #404]	; 1a6a0 <lchmod@@Base+0x34d4>
   1a508:	sub	sp, sp, #84	; 0x54
   1a50c:	add	ip, sp, #32
   1a510:	ldm	lr!, {r0, r1, r2, r3}
   1a514:	ldr	r5, [pc, #392]	; 1a6a4 <lchmod@@Base+0x34d8>
   1a518:	stmia	ip!, {r0, r1, r2, r3}
   1a51c:	ldm	lr!, {r0, r1, r2, r3}
   1a520:	ldr	r4, [sp, #44]	; 0x2c
   1a524:	stmia	ip!, {r0, r1, r2, r3}
   1a528:	ldm	lr, {r0, r1, r2, r3}
   1a52c:	mvn	lr, r4
   1a530:	and	lr, lr, #67108864	; 0x4000000
   1a534:	eor	lr, lr, r4
   1a538:	stm	ip, {r0, r1, r2, r3}
   1a53c:	str	lr, [sp, #44]	; 0x2c
   1a540:	bl	11688 <__errno_location@plt>
   1a544:	ldr	r2, [r5, #4]
   1a548:	ldr	r4, [r5]
   1a54c:	cmp	r2, #0
   1a550:	mov	r8, r0
   1a554:	ldr	sl, [r0]
   1a558:	bgt	1a5b4 <lchmod@@Base+0x33e8>
   1a55c:	add	r7, r5, #8
   1a560:	cmp	r4, r7
   1a564:	str	r2, [sp, #28]
   1a568:	beq	1a670 <lchmod@@Base+0x34a4>
   1a56c:	mov	r3, #8
   1a570:	mov	r0, r4
   1a574:	str	r3, [sp]
   1a578:	rsb	r2, r2, #1
   1a57c:	mvn	r3, #-2147483648	; 0x80000000
   1a580:	add	r1, sp, #28
   1a584:	bl	1c850 <lchmod@@Base+0x5684>
   1a588:	mov	r4, r0
   1a58c:	str	r0, [r5]
   1a590:	ldr	r0, [r5, #4]
   1a594:	ldr	r2, [sp, #28]
   1a598:	mov	r1, #0
   1a59c:	sub	r2, r2, r0
   1a5a0:	add	r0, r4, r0, lsl #3
   1a5a4:	lsl	r2, r2, #3
   1a5a8:	bl	116ac <memset@plt>
   1a5ac:	ldr	r3, [sp, #28]
   1a5b0:	str	r3, [r5, #4]
   1a5b4:	ldr	r7, [sp, #36]	; 0x24
   1a5b8:	ldr	r9, [r4]
   1a5bc:	ldr	r5, [r4, #4]
   1a5c0:	ldr	r2, [sp, #72]	; 0x48
   1a5c4:	ldr	r3, [sp, #32]
   1a5c8:	ldr	ip, [sp, #76]	; 0x4c
   1a5cc:	orr	r7, r7, #1
   1a5d0:	add	fp, sp, #40	; 0x28
   1a5d4:	str	r2, [sp, #12]
   1a5d8:	str	r3, [sp]
   1a5dc:	str	r7, [sp, #4]
   1a5e0:	mov	r1, r9
   1a5e4:	mov	r0, r5
   1a5e8:	str	ip, [sp, #16]
   1a5ec:	str	fp, [sp, #8]
   1a5f0:	mvn	r3, #0
   1a5f4:	mov	r2, r6
   1a5f8:	bl	17a64 <lchmod@@Base+0x898>
   1a5fc:	cmp	r9, r0
   1a600:	bhi	1a660 <lchmod@@Base+0x3494>
   1a604:	ldr	r3, [pc, #156]	; 1a6a8 <lchmod@@Base+0x34dc>
   1a608:	add	r9, r0, #1
   1a60c:	cmp	r5, r3
   1a610:	str	r9, [r4]
   1a614:	beq	1a620 <lchmod@@Base+0x3454>
   1a618:	mov	r0, r5
   1a61c:	bl	1309c <__assert_fail@plt+0x1870>
   1a620:	mov	r0, r9
   1a624:	bl	1c634 <lchmod@@Base+0x5468>
   1a628:	ldr	lr, [sp, #76]	; 0x4c
   1a62c:	ldr	r3, [sp, #32]
   1a630:	ldr	ip, [sp, #72]	; 0x48
   1a634:	mov	r2, r6
   1a638:	mov	r1, r9
   1a63c:	str	r0, [r4, #4]
   1a640:	str	r3, [sp]
   1a644:	str	fp, [sp, #8]
   1a648:	str	r7, [sp, #4]
   1a64c:	str	lr, [sp, #16]
   1a650:	str	ip, [sp, #12]
   1a654:	mvn	r3, #0
   1a658:	mov	r5, r0
   1a65c:	bl	17a64 <lchmod@@Base+0x898>
   1a660:	mov	r0, r5
   1a664:	str	sl, [r8]
   1a668:	add	sp, sp, #84	; 0x54
   1a66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a670:	mov	r3, #8
   1a674:	str	r3, [sp]
   1a678:	add	r1, sp, #28
   1a67c:	rsb	r2, r2, #1
   1a680:	mvn	r3, #-2147483648	; 0x80000000
   1a684:	mov	r0, #0
   1a688:	bl	1c850 <lchmod@@Base+0x5684>
   1a68c:	mov	r4, r0
   1a690:	ldm	r7, {r0, r1}
   1a694:	str	r4, [r5]
   1a698:	stm	r4, {r0, r1}
   1a69c:	b	1a590 <lchmod@@Base+0x33c4>
   1a6a0:	strdeq	pc, [r2], -r4
   1a6a4:	andeq	pc, r2, r4, lsl #3
   1a6a8:	andeq	pc, r2, r4, lsr #4
   1a6ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6b0:	mov	r9, r0
   1a6b4:	ldr	lr, [pc, #416]	; 1a85c <lchmod@@Base+0x3690>
   1a6b8:	mov	sl, r1
   1a6bc:	sub	sp, sp, #92	; 0x5c
   1a6c0:	ldm	lr!, {r0, r1, r2, r3}
   1a6c4:	add	ip, sp, #40	; 0x28
   1a6c8:	ldr	r5, [pc, #400]	; 1a860 <lchmod@@Base+0x3694>
   1a6cc:	stmia	ip!, {r0, r1, r2, r3}
   1a6d0:	ldm	lr!, {r0, r1, r2, r3}
   1a6d4:	ldr	r4, [sp, #52]	; 0x34
   1a6d8:	stmia	ip!, {r0, r1, r2, r3}
   1a6dc:	ldm	lr, {r0, r1, r2, r3}
   1a6e0:	mvn	lr, r4
   1a6e4:	and	lr, lr, #67108864	; 0x4000000
   1a6e8:	eor	lr, lr, r4
   1a6ec:	stm	ip, {r0, r1, r2, r3}
   1a6f0:	str	lr, [sp, #52]	; 0x34
   1a6f4:	bl	11688 <__errno_location@plt>
   1a6f8:	ldr	r2, [r5, #4]
   1a6fc:	ldr	r4, [r5]
   1a700:	cmp	r2, #0
   1a704:	ldr	r3, [r0]
   1a708:	mov	r7, r0
   1a70c:	str	r3, [sp, #28]
   1a710:	bgt	1a76c <lchmod@@Base+0x35a0>
   1a714:	add	r6, r5, #8
   1a718:	cmp	r4, r6
   1a71c:	str	r2, [sp, #36]	; 0x24
   1a720:	beq	1a82c <lchmod@@Base+0x3660>
   1a724:	mov	r3, #8
   1a728:	mov	r0, r4
   1a72c:	str	r3, [sp]
   1a730:	rsb	r2, r2, #1
   1a734:	mvn	r3, #-2147483648	; 0x80000000
   1a738:	add	r1, sp, #36	; 0x24
   1a73c:	bl	1c850 <lchmod@@Base+0x5684>
   1a740:	mov	r4, r0
   1a744:	str	r0, [r5]
   1a748:	ldr	r0, [r5, #4]
   1a74c:	ldr	r2, [sp, #36]	; 0x24
   1a750:	mov	r1, #0
   1a754:	sub	r2, r2, r0
   1a758:	add	r0, r4, r0, lsl #3
   1a75c:	lsl	r2, r2, #3
   1a760:	bl	116ac <memset@plt>
   1a764:	ldr	r3, [sp, #36]	; 0x24
   1a768:	str	r3, [r5, #4]
   1a76c:	ldr	r6, [sp, #44]	; 0x2c
   1a770:	ldr	r8, [r4]
   1a774:	ldr	r5, [r4, #4]
   1a778:	ldr	r2, [sp, #80]	; 0x50
   1a77c:	ldr	r3, [sp, #40]	; 0x28
   1a780:	ldr	ip, [sp, #84]	; 0x54
   1a784:	orr	r6, r6, #1
   1a788:	add	fp, sp, #48	; 0x30
   1a78c:	str	r2, [sp, #12]
   1a790:	str	r3, [sp]
   1a794:	str	r6, [sp, #4]
   1a798:	mov	r1, r8
   1a79c:	mov	r0, r5
   1a7a0:	str	ip, [sp, #16]
   1a7a4:	str	fp, [sp, #8]
   1a7a8:	mov	r3, sl
   1a7ac:	mov	r2, r9
   1a7b0:	bl	17a64 <lchmod@@Base+0x898>
   1a7b4:	cmp	r8, r0
   1a7b8:	bhi	1a818 <lchmod@@Base+0x364c>
   1a7bc:	ldr	r3, [pc, #160]	; 1a864 <lchmod@@Base+0x3698>
   1a7c0:	add	r8, r0, #1
   1a7c4:	cmp	r5, r3
   1a7c8:	str	r8, [r4]
   1a7cc:	beq	1a7d8 <lchmod@@Base+0x360c>
   1a7d0:	mov	r0, r5
   1a7d4:	bl	1309c <__assert_fail@plt+0x1870>
   1a7d8:	mov	r0, r8
   1a7dc:	bl	1c634 <lchmod@@Base+0x5468>
   1a7e0:	ldr	ip, [sp, #84]	; 0x54
   1a7e4:	ldr	lr, [sp, #40]	; 0x28
   1a7e8:	mov	r3, sl
   1a7ec:	mov	r2, r9
   1a7f0:	mov	r1, r8
   1a7f4:	str	r0, [r4, #4]
   1a7f8:	ldr	r4, [sp, #80]	; 0x50
   1a7fc:	str	fp, [sp, #8]
   1a800:	str	r6, [sp, #4]
   1a804:	str	ip, [sp, #16]
   1a808:	str	r4, [sp, #12]
   1a80c:	str	lr, [sp]
   1a810:	mov	r5, r0
   1a814:	bl	17a64 <lchmod@@Base+0x898>
   1a818:	ldr	r3, [sp, #28]
   1a81c:	mov	r0, r5
   1a820:	str	r3, [r7]
   1a824:	add	sp, sp, #92	; 0x5c
   1a828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a82c:	mov	r3, #8
   1a830:	str	r3, [sp]
   1a834:	add	r1, sp, #36	; 0x24
   1a838:	rsb	r2, r2, #1
   1a83c:	mvn	r3, #-2147483648	; 0x80000000
   1a840:	mov	r0, #0
   1a844:	bl	1c850 <lchmod@@Base+0x5684>
   1a848:	mov	r4, r0
   1a84c:	ldm	r6, {r0, r1}
   1a850:	str	r4, [r5]
   1a854:	stm	r4, {r0, r1}
   1a858:	b	1a748 <lchmod@@Base+0x357c>
   1a85c:	strdeq	pc, [r2], -r4
   1a860:	andeq	pc, r2, r4, lsl #3
   1a864:	andeq	pc, r2, r4, lsr #4
   1a868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a86c:	sub	sp, sp, #180	; 0xb4
   1a870:	mov	r6, r1
   1a874:	mov	r4, r0
   1a878:	mov	r9, r2
   1a87c:	add	r0, sp, #80	; 0x50
   1a880:	mov	r2, #48	; 0x30
   1a884:	mov	r1, #0
   1a888:	bl	116ac <memset@plt>
   1a88c:	cmp	r6, #10
   1a890:	beq	1aa70 <lchmod@@Base+0x38a4>
   1a894:	add	r5, sp, #80	; 0x50
   1a898:	str	r6, [sp, #80]	; 0x50
   1a89c:	ldm	r5!, {r0, r1, r2, r3}
   1a8a0:	add	ip, sp, #128	; 0x80
   1a8a4:	mov	r7, ip
   1a8a8:	add	lr, sp, #32
   1a8ac:	stmia	ip!, {r0, r1, r2, r3}
   1a8b0:	mov	r8, #67108864	; 0x4000000
   1a8b4:	ldm	r5!, {r0, r1, r2, r3}
   1a8b8:	ldr	r6, [pc, #436]	; 1aa74 <lchmod@@Base+0x38a8>
   1a8bc:	stmia	ip!, {r0, r1, r2, r3}
   1a8c0:	ldm	r5, {r0, r1, r2, r3}
   1a8c4:	stm	ip, {r0, r1, r2, r3}
   1a8c8:	ldm	r7!, {r0, r1, r2, r3}
   1a8cc:	stmia	lr!, {r0, r1, r2, r3}
   1a8d0:	ldm	r7!, {r0, r1, r2, r3}
   1a8d4:	str	r8, [sp, #44]	; 0x2c
   1a8d8:	stmia	lr!, {r0, r1, r2, r3}
   1a8dc:	ldm	ip, {r0, r1, r2, r3}
   1a8e0:	stm	lr, {r0, r1, r2, r3}
   1a8e4:	bl	11688 <__errno_location@plt>
   1a8e8:	cmn	r4, #-2147483647	; 0x80000001
   1a8ec:	ldr	r5, [r6]
   1a8f0:	mov	r7, r0
   1a8f4:	movne	r0, #0
   1a8f8:	moveq	r0, #1
   1a8fc:	ldr	r3, [r7]
   1a900:	orrs	r0, r0, r4, lsr #31
   1a904:	str	r3, [sp, #24]
   1a908:	bne	1aa70 <lchmod@@Base+0x38a4>
   1a90c:	ldr	r2, [r6, #4]
   1a910:	cmp	r4, r2
   1a914:	blt	1a974 <lchmod@@Base+0x37a8>
   1a918:	add	r8, r6, #8
   1a91c:	cmp	r5, r8
   1a920:	str	r2, [sp, #80]	; 0x50
   1a924:	beq	1aa40 <lchmod@@Base+0x3874>
   1a928:	mov	r3, #8
   1a92c:	sub	r2, r4, r2
   1a930:	mov	r0, r5
   1a934:	str	r3, [sp]
   1a938:	add	r2, r2, #1
   1a93c:	add	r1, sp, #80	; 0x50
   1a940:	mvn	r3, #-2147483648	; 0x80000000
   1a944:	bl	1c850 <lchmod@@Base+0x5684>
   1a948:	mov	r5, r0
   1a94c:	str	r0, [r6]
   1a950:	ldr	r0, [r6, #4]
   1a954:	ldr	r2, [sp, #80]	; 0x50
   1a958:	mov	r1, #0
   1a95c:	sub	r2, r2, r0
   1a960:	add	r0, r5, r0, lsl #3
   1a964:	lsl	r2, r2, #3
   1a968:	bl	116ac <memset@plt>
   1a96c:	ldr	r3, [sp, #80]	; 0x50
   1a970:	str	r3, [r6, #4]
   1a974:	add	fp, r5, r4, lsl #3
   1a978:	ldr	r1, [sp, #36]	; 0x24
   1a97c:	ldr	r8, [r5, r4, lsl #3]
   1a980:	ldr	r6, [fp, #4]
   1a984:	ldr	r2, [sp, #72]	; 0x48
   1a988:	ldr	r3, [sp, #32]
   1a98c:	ldr	ip, [sp, #76]	; 0x4c
   1a990:	orr	r1, r1, #1
   1a994:	add	sl, sp, #40	; 0x28
   1a998:	str	r1, [sp, #28]
   1a99c:	str	r1, [sp, #4]
   1a9a0:	str	r2, [sp, #12]
   1a9a4:	str	r3, [sp]
   1a9a8:	mov	r0, r6
   1a9ac:	mov	r1, r8
   1a9b0:	str	ip, [sp, #16]
   1a9b4:	str	sl, [sp, #8]
   1a9b8:	mvn	r3, #0
   1a9bc:	mov	r2, r9
   1a9c0:	bl	17a64 <lchmod@@Base+0x898>
   1a9c4:	cmp	r8, r0
   1a9c8:	bhi	1aa2c <lchmod@@Base+0x3860>
   1a9cc:	ldr	r3, [pc, #164]	; 1aa78 <lchmod@@Base+0x38ac>
   1a9d0:	add	r8, r0, #1
   1a9d4:	cmp	r6, r3
   1a9d8:	str	r8, [r5, r4, lsl #3]
   1a9dc:	beq	1a9e8 <lchmod@@Base+0x381c>
   1a9e0:	mov	r0, r6
   1a9e4:	bl	1309c <__assert_fail@plt+0x1870>
   1a9e8:	mov	r0, r8
   1a9ec:	bl	1c634 <lchmod@@Base+0x5468>
   1a9f0:	ldr	lr, [sp, #76]	; 0x4c
   1a9f4:	ldr	r3, [sp, #32]
   1a9f8:	ldr	ip, [sp, #72]	; 0x48
   1a9fc:	ldr	r4, [sp, #28]
   1aa00:	mov	r2, r9
   1aa04:	mov	r1, r8
   1aa08:	str	r0, [fp, #4]
   1aa0c:	str	r3, [sp]
   1aa10:	str	sl, [sp, #8]
   1aa14:	str	r4, [sp, #4]
   1aa18:	str	lr, [sp, #16]
   1aa1c:	str	ip, [sp, #12]
   1aa20:	mvn	r3, #0
   1aa24:	mov	r6, r0
   1aa28:	bl	17a64 <lchmod@@Base+0x898>
   1aa2c:	ldr	r3, [sp, #24]
   1aa30:	mov	r0, r6
   1aa34:	str	r3, [r7]
   1aa38:	add	sp, sp, #180	; 0xb4
   1aa3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa40:	mov	r3, #8
   1aa44:	sub	r2, r4, r2
   1aa48:	add	r1, sp, #80	; 0x50
   1aa4c:	str	r3, [sp]
   1aa50:	add	r2, r2, #1
   1aa54:	mvn	r3, #-2147483648	; 0x80000000
   1aa58:	bl	1c850 <lchmod@@Base+0x5684>
   1aa5c:	mov	r5, r0
   1aa60:	ldm	r8, {r0, r1}
   1aa64:	str	r5, [r6]
   1aa68:	stm	r5, {r0, r1}
   1aa6c:	b	1a950 <lchmod@@Base+0x3784>
   1aa70:	bl	117d8 <abort@plt>
   1aa74:	andeq	pc, r2, r4, lsl #3
   1aa78:	andeq	pc, r2, r4, lsr #4
   1aa7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa80:	mov	r7, r1
   1aa84:	ldr	lr, [pc, #492]	; 1ac78 <lchmod@@Base+0x3aac>
   1aa88:	mov	r8, r2
   1aa8c:	mov	r4, r0
   1aa90:	mov	fp, r3
   1aa94:	ldm	lr!, {r0, r1, r2, r3}
   1aa98:	sub	sp, sp, #100	; 0x64
   1aa9c:	add	ip, sp, #48	; 0x30
   1aaa0:	mov	sl, #10
   1aaa4:	stmia	ip!, {r0, r1, r2, r3}
   1aaa8:	cmp	r8, #0
   1aaac:	cmpne	r7, #0
   1aab0:	ldm	lr!, {r0, r1, r2, r3}
   1aab4:	str	sl, [sp, #48]	; 0x30
   1aab8:	stmia	ip!, {r0, r1, r2, r3}
   1aabc:	ldm	lr, {r0, r1, r2, r3}
   1aac0:	stm	ip, {r0, r1, r2, r3}
   1aac4:	beq	1ac74 <lchmod@@Base+0x3aa8>
   1aac8:	str	r7, [sp, #88]	; 0x58
   1aacc:	str	r8, [sp, #92]	; 0x5c
   1aad0:	bl	11688 <__errno_location@plt>
   1aad4:	ldr	r6, [pc, #416]	; 1ac7c <lchmod@@Base+0x3ab0>
   1aad8:	cmn	r4, #-2147483647	; 0x80000001
   1aadc:	ldr	r5, [r6]
   1aae0:	mov	r9, r0
   1aae4:	movne	r0, #0
   1aae8:	moveq	r0, #1
   1aaec:	ldr	r3, [r9]
   1aaf0:	orrs	r0, r0, r4, lsr #31
   1aaf4:	str	r3, [sp, #28]
   1aaf8:	bne	1ac74 <lchmod@@Base+0x3aa8>
   1aafc:	ldr	r2, [r6, #4]
   1ab00:	cmp	r4, r2
   1ab04:	movlt	r3, sl
   1ab08:	blt	1ab74 <lchmod@@Base+0x39a8>
   1ab0c:	add	r7, r6, #8
   1ab10:	cmp	r5, r7
   1ab14:	str	r2, [sp, #44]	; 0x2c
   1ab18:	beq	1ac44 <lchmod@@Base+0x3a78>
   1ab1c:	mov	r3, #8
   1ab20:	sub	r2, r4, r2
   1ab24:	mov	r0, r5
   1ab28:	str	r3, [sp]
   1ab2c:	add	r2, r2, #1
   1ab30:	mvn	r3, #-2147483648	; 0x80000000
   1ab34:	add	r1, sp, #44	; 0x2c
   1ab38:	bl	1c850 <lchmod@@Base+0x5684>
   1ab3c:	mov	r5, r0
   1ab40:	str	r0, [r6]
   1ab44:	ldr	r0, [r6, #4]
   1ab48:	ldr	r2, [sp, #44]	; 0x2c
   1ab4c:	mov	r1, #0
   1ab50:	sub	r2, r2, r0
   1ab54:	add	r0, r5, r0, lsl #3
   1ab58:	lsl	r2, r2, #3
   1ab5c:	bl	116ac <memset@plt>
   1ab60:	ldr	r3, [sp, #48]	; 0x30
   1ab64:	ldr	r7, [sp, #88]	; 0x58
   1ab68:	ldr	r8, [sp, #92]	; 0x5c
   1ab6c:	ldr	r2, [sp, #44]	; 0x2c
   1ab70:	str	r2, [r6, #4]
   1ab74:	add	r2, r5, r4, lsl #3
   1ab78:	mov	r1, r2
   1ab7c:	str	r2, [sp, #32]
   1ab80:	ldr	r2, [sp, #52]	; 0x34
   1ab84:	ldr	r6, [r1, #4]
   1ab88:	ldr	sl, [r5, r4, lsl #3]
   1ab8c:	orr	r2, r2, #1
   1ab90:	str	r3, [sp]
   1ab94:	add	r3, sp, #56	; 0x38
   1ab98:	str	r2, [sp, #36]	; 0x24
   1ab9c:	str	r2, [sp, #4]
   1aba0:	str	r3, [sp, #8]
   1aba4:	mov	r0, r6
   1aba8:	str	r8, [sp, #16]
   1abac:	str	r7, [sp, #12]
   1abb0:	mov	r1, sl
   1abb4:	mvn	r3, #0
   1abb8:	mov	r2, fp
   1abbc:	bl	17a64 <lchmod@@Base+0x898>
   1abc0:	cmp	sl, r0
   1abc4:	bhi	1ac30 <lchmod@@Base+0x3a64>
   1abc8:	ldr	r3, [pc, #176]	; 1ac80 <lchmod@@Base+0x3ab4>
   1abcc:	add	r7, r0, #1
   1abd0:	cmp	r6, r3
   1abd4:	str	r7, [r5, r4, lsl #3]
   1abd8:	beq	1abe4 <lchmod@@Base+0x3a18>
   1abdc:	mov	r0, r6
   1abe0:	bl	1309c <__assert_fail@plt+0x1870>
   1abe4:	mov	r0, r7
   1abe8:	bl	1c634 <lchmod@@Base+0x5468>
   1abec:	ldr	r3, [sp, #32]
   1abf0:	ldr	lr, [sp, #92]	; 0x5c
   1abf4:	ldr	ip, [sp, #88]	; 0x58
   1abf8:	ldr	r4, [sp, #36]	; 0x24
   1abfc:	mov	r2, fp
   1ac00:	mov	r1, r7
   1ac04:	str	r0, [r3, #4]
   1ac08:	add	r3, sp, #56	; 0x38
   1ac0c:	str	r3, [sp, #8]
   1ac10:	ldr	r3, [sp, #48]	; 0x30
   1ac14:	str	r4, [sp, #4]
   1ac18:	str	r3, [sp]
   1ac1c:	str	lr, [sp, #16]
   1ac20:	str	ip, [sp, #12]
   1ac24:	mvn	r3, #0
   1ac28:	mov	r6, r0
   1ac2c:	bl	17a64 <lchmod@@Base+0x898>
   1ac30:	ldr	r3, [sp, #28]
   1ac34:	mov	r0, r6
   1ac38:	str	r3, [r9]
   1ac3c:	add	sp, sp, #100	; 0x64
   1ac40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac44:	mov	r3, #8
   1ac48:	sub	r2, r4, r2
   1ac4c:	str	r3, [sp]
   1ac50:	add	r1, sp, #44	; 0x2c
   1ac54:	add	r2, r2, #1
   1ac58:	mvn	r3, #-2147483648	; 0x80000000
   1ac5c:	bl	1c850 <lchmod@@Base+0x5684>
   1ac60:	mov	r5, r0
   1ac64:	ldm	r7, {r0, r1}
   1ac68:	str	r5, [r6]
   1ac6c:	stm	r5, {r0, r1}
   1ac70:	b	1ab44 <lchmod@@Base+0x3978>
   1ac74:	bl	117d8 <abort@plt>
   1ac78:	strdeq	pc, [r2], -r4
   1ac7c:	andeq	pc, r2, r4, lsl #3
   1ac80:	andeq	pc, r2, r4, lsr #4
   1ac84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac88:	mov	r7, r1
   1ac8c:	ldr	lr, [pc, #492]	; 1ae80 <lchmod@@Base+0x3cb4>
   1ac90:	mov	r8, r2
   1ac94:	mov	r4, r0
   1ac98:	mov	fp, r3
   1ac9c:	ldm	lr!, {r0, r1, r2, r3}
   1aca0:	sub	sp, sp, #100	; 0x64
   1aca4:	add	ip, sp, #48	; 0x30
   1aca8:	mov	sl, #10
   1acac:	stmia	ip!, {r0, r1, r2, r3}
   1acb0:	cmp	r8, #0
   1acb4:	cmpne	r7, #0
   1acb8:	ldm	lr!, {r0, r1, r2, r3}
   1acbc:	str	sl, [sp, #48]	; 0x30
   1acc0:	stmia	ip!, {r0, r1, r2, r3}
   1acc4:	ldm	lr, {r0, r1, r2, r3}
   1acc8:	stm	ip, {r0, r1, r2, r3}
   1accc:	beq	1ae7c <lchmod@@Base+0x3cb0>
   1acd0:	str	r7, [sp, #88]	; 0x58
   1acd4:	str	r8, [sp, #92]	; 0x5c
   1acd8:	bl	11688 <__errno_location@plt>
   1acdc:	ldr	r6, [pc, #416]	; 1ae84 <lchmod@@Base+0x3cb8>
   1ace0:	cmn	r4, #-2147483647	; 0x80000001
   1ace4:	ldr	r5, [r6]
   1ace8:	mov	r9, r0
   1acec:	movne	r0, #0
   1acf0:	moveq	r0, #1
   1acf4:	ldr	r3, [r9]
   1acf8:	orrs	r0, r0, r4, lsr #31
   1acfc:	str	r3, [sp, #28]
   1ad00:	bne	1ae7c <lchmod@@Base+0x3cb0>
   1ad04:	ldr	r2, [r6, #4]
   1ad08:	cmp	r4, r2
   1ad0c:	movlt	r3, sl
   1ad10:	blt	1ad7c <lchmod@@Base+0x3bb0>
   1ad14:	add	r7, r6, #8
   1ad18:	cmp	r5, r7
   1ad1c:	str	r2, [sp, #44]	; 0x2c
   1ad20:	beq	1ae4c <lchmod@@Base+0x3c80>
   1ad24:	mov	r3, #8
   1ad28:	sub	r2, r4, r2
   1ad2c:	mov	r0, r5
   1ad30:	str	r3, [sp]
   1ad34:	add	r2, r2, #1
   1ad38:	mvn	r3, #-2147483648	; 0x80000000
   1ad3c:	add	r1, sp, #44	; 0x2c
   1ad40:	bl	1c850 <lchmod@@Base+0x5684>
   1ad44:	mov	r5, r0
   1ad48:	str	r0, [r6]
   1ad4c:	ldr	r0, [r6, #4]
   1ad50:	ldr	r2, [sp, #44]	; 0x2c
   1ad54:	mov	r1, #0
   1ad58:	sub	r2, r2, r0
   1ad5c:	add	r0, r5, r0, lsl #3
   1ad60:	lsl	r2, r2, #3
   1ad64:	bl	116ac <memset@plt>
   1ad68:	ldr	r3, [sp, #48]	; 0x30
   1ad6c:	ldr	r7, [sp, #88]	; 0x58
   1ad70:	ldr	r8, [sp, #92]	; 0x5c
   1ad74:	ldr	r2, [sp, #44]	; 0x2c
   1ad78:	str	r2, [r6, #4]
   1ad7c:	add	r2, r5, r4, lsl #3
   1ad80:	mov	r1, r2
   1ad84:	str	r2, [sp, #32]
   1ad88:	ldr	r2, [sp, #52]	; 0x34
   1ad8c:	ldr	r6, [r1, #4]
   1ad90:	ldr	sl, [r5, r4, lsl #3]
   1ad94:	orr	r2, r2, #1
   1ad98:	str	r3, [sp]
   1ad9c:	add	r3, sp, #56	; 0x38
   1ada0:	str	r2, [sp, #36]	; 0x24
   1ada4:	str	r2, [sp, #4]
   1ada8:	str	r3, [sp, #8]
   1adac:	mov	r0, r6
   1adb0:	str	r8, [sp, #16]
   1adb4:	str	r7, [sp, #12]
   1adb8:	mov	r1, sl
   1adbc:	ldr	r3, [sp, #136]	; 0x88
   1adc0:	mov	r2, fp
   1adc4:	bl	17a64 <lchmod@@Base+0x898>
   1adc8:	cmp	sl, r0
   1adcc:	bhi	1ae38 <lchmod@@Base+0x3c6c>
   1add0:	ldr	r3, [pc, #176]	; 1ae88 <lchmod@@Base+0x3cbc>
   1add4:	add	r7, r0, #1
   1add8:	cmp	r6, r3
   1addc:	str	r7, [r5, r4, lsl #3]
   1ade0:	beq	1adec <lchmod@@Base+0x3c20>
   1ade4:	mov	r0, r6
   1ade8:	bl	1309c <__assert_fail@plt+0x1870>
   1adec:	mov	r0, r7
   1adf0:	bl	1c634 <lchmod@@Base+0x5468>
   1adf4:	ldr	r3, [sp, #32]
   1adf8:	ldr	lr, [sp, #92]	; 0x5c
   1adfc:	ldr	ip, [sp, #88]	; 0x58
   1ae00:	ldr	r4, [sp, #36]	; 0x24
   1ae04:	mov	r2, fp
   1ae08:	mov	r1, r7
   1ae0c:	str	r0, [r3, #4]
   1ae10:	add	r3, sp, #56	; 0x38
   1ae14:	str	r3, [sp, #8]
   1ae18:	ldr	r3, [sp, #48]	; 0x30
   1ae1c:	str	r4, [sp, #4]
   1ae20:	str	r3, [sp]
   1ae24:	str	lr, [sp, #16]
   1ae28:	str	ip, [sp, #12]
   1ae2c:	ldr	r3, [sp, #136]	; 0x88
   1ae30:	mov	r6, r0
   1ae34:	bl	17a64 <lchmod@@Base+0x898>
   1ae38:	ldr	r3, [sp, #28]
   1ae3c:	mov	r0, r6
   1ae40:	str	r3, [r9]
   1ae44:	add	sp, sp, #100	; 0x64
   1ae48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae4c:	mov	r3, #8
   1ae50:	sub	r2, r4, r2
   1ae54:	str	r3, [sp]
   1ae58:	add	r1, sp, #44	; 0x2c
   1ae5c:	add	r2, r2, #1
   1ae60:	mvn	r3, #-2147483648	; 0x80000000
   1ae64:	bl	1c850 <lchmod@@Base+0x5684>
   1ae68:	mov	r5, r0
   1ae6c:	ldm	r7, {r0, r1}
   1ae70:	str	r5, [r6]
   1ae74:	stm	r5, {r0, r1}
   1ae78:	b	1ad4c <lchmod@@Base+0x3b80>
   1ae7c:	bl	117d8 <abort@plt>
   1ae80:	strdeq	pc, [r2], -r4
   1ae84:	andeq	pc, r2, r4, lsl #3
   1ae88:	andeq	pc, r2, r4, lsr #4
   1ae8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae90:	mov	r5, r0
   1ae94:	ldr	lr, [pc, #452]	; 1b060 <lchmod@@Base+0x3e94>
   1ae98:	mov	r6, r1
   1ae9c:	mov	sl, r2
   1aea0:	ldm	lr!, {r0, r1, r2, r3}
   1aea4:	sub	sp, sp, #92	; 0x5c
   1aea8:	add	ip, sp, #40	; 0x28
   1aeac:	cmp	r6, #0
   1aeb0:	cmpne	r5, #0
   1aeb4:	stmia	ip!, {r0, r1, r2, r3}
   1aeb8:	mov	r9, #10
   1aebc:	ldm	lr!, {r0, r1, r2, r3}
   1aec0:	moveq	fp, #1
   1aec4:	movne	fp, #0
   1aec8:	str	r9, [sp, #40]	; 0x28
   1aecc:	stmia	ip!, {r0, r1, r2, r3}
   1aed0:	ldm	lr, {r0, r1, r2, r3}
   1aed4:	stm	ip, {r0, r1, r2, r3}
   1aed8:	beq	1b05c <lchmod@@Base+0x3e90>
   1aedc:	str	r5, [sp, #80]	; 0x50
   1aee0:	str	r6, [sp, #84]	; 0x54
   1aee4:	bl	11688 <__errno_location@plt>
   1aee8:	ldr	r7, [pc, #372]	; 1b064 <lchmod@@Base+0x3e98>
   1aeec:	ldr	r2, [r7, #4]
   1aef0:	ldr	r4, [r7]
   1aef4:	cmp	r2, #0
   1aef8:	ldr	r3, [r0]
   1aefc:	mov	r8, r0
   1af00:	str	r3, [sp, #24]
   1af04:	movgt	r3, r9
   1af08:	bgt	1af70 <lchmod@@Base+0x3da4>
   1af0c:	add	r5, r7, #8
   1af10:	cmp	r4, r5
   1af14:	str	r2, [sp, #36]	; 0x24
   1af18:	beq	1b02c <lchmod@@Base+0x3e60>
   1af1c:	mov	r3, #8
   1af20:	mov	r0, r4
   1af24:	str	r3, [sp]
   1af28:	rsb	r2, r2, #1
   1af2c:	mvn	r3, #-2147483648	; 0x80000000
   1af30:	add	r1, sp, #36	; 0x24
   1af34:	bl	1c850 <lchmod@@Base+0x5684>
   1af38:	mov	r4, r0
   1af3c:	str	r0, [r7]
   1af40:	ldr	r0, [r7, #4]
   1af44:	ldr	r2, [sp, #36]	; 0x24
   1af48:	mov	r1, #0
   1af4c:	sub	r2, r2, r0
   1af50:	add	r0, r4, r0, lsl #3
   1af54:	lsl	r2, r2, #3
   1af58:	bl	116ac <memset@plt>
   1af5c:	ldr	r3, [sp, #40]	; 0x28
   1af60:	ldr	r5, [sp, #80]	; 0x50
   1af64:	ldr	r6, [sp, #84]	; 0x54
   1af68:	ldr	r2, [sp, #36]	; 0x24
   1af6c:	str	r2, [r7, #4]
   1af70:	ldr	r2, [sp, #44]	; 0x2c
   1af74:	ldr	r9, [r4]
   1af78:	ldr	r7, [r4, #4]
   1af7c:	orr	r2, r2, #1
   1af80:	add	fp, sp, #48	; 0x30
   1af84:	str	r2, [sp, #28]
   1af88:	str	r2, [sp, #4]
   1af8c:	str	r3, [sp]
   1af90:	str	r6, [sp, #16]
   1af94:	str	r5, [sp, #12]
   1af98:	mov	r1, r9
   1af9c:	mov	r0, r7
   1afa0:	str	fp, [sp, #8]
   1afa4:	mvn	r3, #0
   1afa8:	mov	r2, sl
   1afac:	bl	17a64 <lchmod@@Base+0x898>
   1afb0:	cmp	r9, r0
   1afb4:	bhi	1b018 <lchmod@@Base+0x3e4c>
   1afb8:	ldr	r3, [pc, #168]	; 1b068 <lchmod@@Base+0x3e9c>
   1afbc:	add	r5, r0, #1
   1afc0:	cmp	r7, r3
   1afc4:	str	r5, [r4]
   1afc8:	beq	1afd4 <lchmod@@Base+0x3e08>
   1afcc:	mov	r0, r7
   1afd0:	bl	1309c <__assert_fail@plt+0x1870>
   1afd4:	mov	r0, r5
   1afd8:	bl	1c634 <lchmod@@Base+0x5468>
   1afdc:	ldr	lr, [sp, #84]	; 0x54
   1afe0:	ldr	r3, [sp, #40]	; 0x28
   1afe4:	ldr	ip, [sp, #80]	; 0x50
   1afe8:	mov	r2, sl
   1afec:	mov	r1, r5
   1aff0:	str	r0, [r4, #4]
   1aff4:	ldr	r4, [sp, #28]
   1aff8:	str	r3, [sp]
   1affc:	str	fp, [sp, #8]
   1b000:	str	r4, [sp, #4]
   1b004:	str	lr, [sp, #16]
   1b008:	str	ip, [sp, #12]
   1b00c:	mvn	r3, #0
   1b010:	mov	r7, r0
   1b014:	bl	17a64 <lchmod@@Base+0x898>
   1b018:	ldr	r3, [sp, #24]
   1b01c:	mov	r0, r7
   1b020:	str	r3, [r8]
   1b024:	add	sp, sp, #92	; 0x5c
   1b028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b02c:	mov	r3, #8
   1b030:	str	r3, [sp]
   1b034:	add	r1, sp, #36	; 0x24
   1b038:	rsb	r2, r2, #1
   1b03c:	mov	r0, fp
   1b040:	mvn	r3, #-2147483648	; 0x80000000
   1b044:	bl	1c850 <lchmod@@Base+0x5684>
   1b048:	mov	r4, r0
   1b04c:	ldm	r5, {r0, r1}
   1b050:	str	r4, [r7]
   1b054:	stm	r4, {r0, r1}
   1b058:	b	1af40 <lchmod@@Base+0x3d74>
   1b05c:	bl	117d8 <abort@plt>
   1b060:	strdeq	pc, [r2], -r4
   1b064:	andeq	pc, r2, r4, lsl #3
   1b068:	andeq	pc, r2, r4, lsr #4
   1b06c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b070:	mov	r5, r0
   1b074:	ldr	lr, [pc, #464]	; 1b24c <lchmod@@Base+0x4080>
   1b078:	mov	r6, r1
   1b07c:	mov	sl, r2
   1b080:	mov	fp, r3
   1b084:	ldm	lr!, {r0, r1, r2, r3}
   1b088:	sub	sp, sp, #92	; 0x5c
   1b08c:	add	ip, sp, #40	; 0x28
   1b090:	cmp	r6, #0
   1b094:	cmpne	r5, #0
   1b098:	stmia	ip!, {r0, r1, r2, r3}
   1b09c:	moveq	r4, #1
   1b0a0:	ldm	lr!, {r0, r1, r2, r3}
   1b0a4:	movne	r4, #0
   1b0a8:	mov	r9, #10
   1b0ac:	str	r4, [sp, #28]
   1b0b0:	stmia	ip!, {r0, r1, r2, r3}
   1b0b4:	ldm	lr, {r0, r1, r2, r3}
   1b0b8:	str	r9, [sp, #40]	; 0x28
   1b0bc:	stm	ip, {r0, r1, r2, r3}
   1b0c0:	beq	1b248 <lchmod@@Base+0x407c>
   1b0c4:	str	r5, [sp, #80]	; 0x50
   1b0c8:	str	r6, [sp, #84]	; 0x54
   1b0cc:	bl	11688 <__errno_location@plt>
   1b0d0:	ldr	r7, [pc, #376]	; 1b250 <lchmod@@Base+0x4084>
   1b0d4:	ldr	r2, [r7, #4]
   1b0d8:	ldr	r4, [r7]
   1b0dc:	cmp	r2, #0
   1b0e0:	ldr	r3, [r0]
   1b0e4:	mov	r8, r0
   1b0e8:	str	r3, [sp, #24]
   1b0ec:	movgt	r3, r9
   1b0f0:	bgt	1b158 <lchmod@@Base+0x3f8c>
   1b0f4:	add	r5, r7, #8
   1b0f8:	cmp	r4, r5
   1b0fc:	str	r2, [sp, #36]	; 0x24
   1b100:	beq	1b218 <lchmod@@Base+0x404c>
   1b104:	mov	r3, #8
   1b108:	mov	r0, r4
   1b10c:	str	r3, [sp]
   1b110:	rsb	r2, r2, #1
   1b114:	mvn	r3, #-2147483648	; 0x80000000
   1b118:	add	r1, sp, #36	; 0x24
   1b11c:	bl	1c850 <lchmod@@Base+0x5684>
   1b120:	mov	r4, r0
   1b124:	str	r0, [r7]
   1b128:	ldr	r0, [r7, #4]
   1b12c:	ldr	r2, [sp, #36]	; 0x24
   1b130:	mov	r1, #0
   1b134:	sub	r2, r2, r0
   1b138:	add	r0, r4, r0, lsl #3
   1b13c:	lsl	r2, r2, #3
   1b140:	bl	116ac <memset@plt>
   1b144:	ldr	r3, [sp, #40]	; 0x28
   1b148:	ldr	r5, [sp, #80]	; 0x50
   1b14c:	ldr	r6, [sp, #84]	; 0x54
   1b150:	ldr	r2, [sp, #36]	; 0x24
   1b154:	str	r2, [r7, #4]
   1b158:	ldr	r2, [sp, #44]	; 0x2c
   1b15c:	ldr	r9, [r4]
   1b160:	ldr	r7, [r4, #4]
   1b164:	orr	r2, r2, #1
   1b168:	str	r3, [sp]
   1b16c:	add	r3, sp, #48	; 0x30
   1b170:	str	r2, [sp, #28]
   1b174:	str	r2, [sp, #4]
   1b178:	str	r3, [sp, #8]
   1b17c:	str	r6, [sp, #16]
   1b180:	str	r5, [sp, #12]
   1b184:	mov	r1, r9
   1b188:	mov	r0, r7
   1b18c:	mov	r3, fp
   1b190:	mov	r2, sl
   1b194:	bl	17a64 <lchmod@@Base+0x898>
   1b198:	cmp	r9, r0
   1b19c:	bhi	1b204 <lchmod@@Base+0x4038>
   1b1a0:	ldr	r3, [pc, #172]	; 1b254 <lchmod@@Base+0x4088>
   1b1a4:	add	r5, r0, #1
   1b1a8:	cmp	r7, r3
   1b1ac:	str	r5, [r4]
   1b1b0:	beq	1b1bc <lchmod@@Base+0x3ff0>
   1b1b4:	mov	r0, r7
   1b1b8:	bl	1309c <__assert_fail@plt+0x1870>
   1b1bc:	mov	r0, r5
   1b1c0:	bl	1c634 <lchmod@@Base+0x5468>
   1b1c4:	add	lr, sp, #48	; 0x30
   1b1c8:	ldr	ip, [sp, #84]	; 0x54
   1b1cc:	mov	r1, r5
   1b1d0:	ldr	r5, [sp, #28]
   1b1d4:	mov	r3, fp
   1b1d8:	mov	r2, sl
   1b1dc:	str	r0, [r4, #4]
   1b1e0:	ldr	r4, [sp, #80]	; 0x50
   1b1e4:	str	lr, [sp, #8]
   1b1e8:	ldr	lr, [sp, #40]	; 0x28
   1b1ec:	str	r5, [sp, #4]
   1b1f0:	str	ip, [sp, #16]
   1b1f4:	str	r4, [sp, #12]
   1b1f8:	str	lr, [sp]
   1b1fc:	mov	r7, r0
   1b200:	bl	17a64 <lchmod@@Base+0x898>
   1b204:	ldr	r3, [sp, #24]
   1b208:	mov	r0, r7
   1b20c:	str	r3, [r8]
   1b210:	add	sp, sp, #92	; 0x5c
   1b214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b218:	mov	r3, #8
   1b21c:	str	r3, [sp]
   1b220:	add	r1, sp, #36	; 0x24
   1b224:	rsb	r2, r2, #1
   1b228:	ldr	r0, [sp, #28]
   1b22c:	mvn	r3, #-2147483648	; 0x80000000
   1b230:	bl	1c850 <lchmod@@Base+0x5684>
   1b234:	mov	r4, r0
   1b238:	ldm	r5, {r0, r1}
   1b23c:	str	r4, [r7]
   1b240:	stm	r4, {r0, r1}
   1b244:	b	1b128 <lchmod@@Base+0x3f5c>
   1b248:	bl	117d8 <abort@plt>
   1b24c:	strdeq	pc, [r2], -r4
   1b250:	andeq	pc, r2, r4, lsl #3
   1b254:	andeq	pc, r2, r4, lsr #4
   1b258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b25c:	sub	sp, sp, #52	; 0x34
   1b260:	mov	r5, r0
   1b264:	mov	sl, r1
   1b268:	mov	fp, r2
   1b26c:	bl	11688 <__errno_location@plt>
   1b270:	ldr	r4, [pc, #404]	; 1b40c <lchmod@@Base+0x4240>
   1b274:	cmn	r5, #-2147483647	; 0x80000001
   1b278:	ldr	r6, [r4]
   1b27c:	mov	r8, r0
   1b280:	movne	r0, #0
   1b284:	moveq	r0, #1
   1b288:	ldr	r3, [r8]
   1b28c:	orrs	r0, r0, r5, lsr #31
   1b290:	str	r3, [sp, #28]
   1b294:	bne	1b408 <lchmod@@Base+0x423c>
   1b298:	ldr	r2, [r4, #4]
   1b29c:	cmp	r5, r2
   1b2a0:	blt	1b300 <lchmod@@Base+0x4134>
   1b2a4:	add	r7, r4, #8
   1b2a8:	cmp	r6, r7
   1b2ac:	str	r2, [sp, #44]	; 0x2c
   1b2b0:	beq	1b3d8 <lchmod@@Base+0x420c>
   1b2b4:	mov	r3, #8
   1b2b8:	sub	r2, r5, r2
   1b2bc:	mov	r0, r6
   1b2c0:	str	r3, [sp]
   1b2c4:	add	r2, r2, #1
   1b2c8:	mvn	r3, #-2147483648	; 0x80000000
   1b2cc:	add	r1, sp, #44	; 0x2c
   1b2d0:	bl	1c850 <lchmod@@Base+0x5684>
   1b2d4:	mov	r6, r0
   1b2d8:	str	r0, [r4]
   1b2dc:	ldr	r0, [r4, #4]
   1b2e0:	ldr	r2, [sp, #44]	; 0x2c
   1b2e4:	mov	r1, #0
   1b2e8:	sub	r2, r2, r0
   1b2ec:	add	r0, r6, r0, lsl #3
   1b2f0:	lsl	r2, r2, #3
   1b2f4:	bl	116ac <memset@plt>
   1b2f8:	ldr	r3, [sp, #44]	; 0x2c
   1b2fc:	str	r3, [r4, #4]
   1b300:	ldr	r2, [r4, #56]	; 0x38
   1b304:	add	r3, r6, r5, lsl #3
   1b308:	ldr	r1, [r4, #20]
   1b30c:	ldr	r7, [r3, #4]
   1b310:	ldr	r9, [r6, r5, lsl #3]
   1b314:	ldr	ip, [r4, #60]	; 0x3c
   1b318:	str	r3, [sp, #32]
   1b31c:	ldr	r3, [r4, #16]
   1b320:	str	r2, [sp, #12]
   1b324:	ldr	r2, [pc, #228]	; 1b410 <lchmod@@Base+0x4244>
   1b328:	orr	r1, r1, #1
   1b32c:	str	r1, [sp, #36]	; 0x24
   1b330:	str	r1, [sp, #4]
   1b334:	str	r2, [sp, #8]
   1b338:	str	r3, [sp]
   1b33c:	mov	r0, r7
   1b340:	mov	r1, r9
   1b344:	str	ip, [sp, #16]
   1b348:	mov	r3, fp
   1b34c:	mov	r2, sl
   1b350:	bl	17a64 <lchmod@@Base+0x898>
   1b354:	cmp	r9, r0
   1b358:	bhi	1b3c4 <lchmod@@Base+0x41f8>
   1b35c:	ldr	r3, [pc, #176]	; 1b414 <lchmod@@Base+0x4248>
   1b360:	add	r9, r0, #1
   1b364:	cmp	r7, r3
   1b368:	str	r9, [r6, r5, lsl #3]
   1b36c:	beq	1b378 <lchmod@@Base+0x41ac>
   1b370:	mov	r0, r7
   1b374:	bl	1309c <__assert_fail@plt+0x1870>
   1b378:	mov	r0, r9
   1b37c:	bl	1c634 <lchmod@@Base+0x5468>
   1b380:	ldr	ip, [sp, #32]
   1b384:	ldr	lr, [r4, #60]	; 0x3c
   1b388:	ldr	r5, [r4, #56]	; 0x38
   1b38c:	mov	r3, fp
   1b390:	mov	r2, sl
   1b394:	mov	r1, r9
   1b398:	str	r0, [ip, #4]
   1b39c:	ldr	ip, [r4, #16]
   1b3a0:	ldr	r4, [pc, #104]	; 1b410 <lchmod@@Base+0x4244>
   1b3a4:	str	lr, [sp, #16]
   1b3a8:	str	r4, [sp, #8]
   1b3ac:	ldr	r4, [sp, #36]	; 0x24
   1b3b0:	str	r5, [sp, #12]
   1b3b4:	str	r4, [sp, #4]
   1b3b8:	str	ip, [sp]
   1b3bc:	mov	r7, r0
   1b3c0:	bl	17a64 <lchmod@@Base+0x898>
   1b3c4:	ldr	r3, [sp, #28]
   1b3c8:	mov	r0, r7
   1b3cc:	str	r3, [r8]
   1b3d0:	add	sp, sp, #52	; 0x34
   1b3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3d8:	mov	r3, #8
   1b3dc:	sub	r2, r5, r2
   1b3e0:	str	r3, [sp]
   1b3e4:	add	r1, sp, #44	; 0x2c
   1b3e8:	add	r2, r2, #1
   1b3ec:	mvn	r3, #-2147483648	; 0x80000000
   1b3f0:	bl	1c850 <lchmod@@Base+0x5684>
   1b3f4:	mov	r6, r0
   1b3f8:	ldm	r7, {r0, r1}
   1b3fc:	str	r6, [r4]
   1b400:	stm	r6, {r0, r1}
   1b404:	b	1b2dc <lchmod@@Base+0x4110>
   1b408:	bl	117d8 <abort@plt>
   1b40c:	andeq	pc, r2, r4, lsl #3
   1b410:	muleq	r2, ip, r1
   1b414:	andeq	pc, r2, r4, lsr #4
   1b418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b41c:	sub	sp, sp, #44	; 0x2c
   1b420:	mov	r9, r0
   1b424:	mov	sl, r1
   1b428:	bl	11688 <__errno_location@plt>
   1b42c:	ldr	r4, [pc, #360]	; 1b59c <lchmod@@Base+0x43d0>
   1b430:	ldr	r2, [r4, #4]
   1b434:	ldr	r5, [r4]
   1b438:	cmp	r2, #0
   1b43c:	ldr	r3, [r0]
   1b440:	mov	r7, r0
   1b444:	str	r3, [sp, #24]
   1b448:	bgt	1b4a4 <lchmod@@Base+0x42d8>
   1b44c:	add	r6, r4, #8
   1b450:	cmp	r5, r6
   1b454:	str	r2, [sp, #36]	; 0x24
   1b458:	beq	1b56c <lchmod@@Base+0x43a0>
   1b45c:	mov	r3, #8
   1b460:	mov	r0, r5
   1b464:	str	r3, [sp]
   1b468:	rsb	r2, r2, #1
   1b46c:	mvn	r3, #-2147483648	; 0x80000000
   1b470:	add	r1, sp, #36	; 0x24
   1b474:	bl	1c850 <lchmod@@Base+0x5684>
   1b478:	mov	r5, r0
   1b47c:	str	r0, [r4]
   1b480:	ldr	r0, [r4, #4]
   1b484:	ldr	r2, [sp, #36]	; 0x24
   1b488:	mov	r1, #0
   1b48c:	sub	r2, r2, r0
   1b490:	add	r0, r5, r0, lsl #3
   1b494:	lsl	r2, r2, #3
   1b498:	bl	116ac <memset@plt>
   1b49c:	ldr	r3, [sp, #36]	; 0x24
   1b4a0:	str	r3, [r4, #4]
   1b4a4:	ldr	r1, [r4, #20]
   1b4a8:	ldr	r8, [r5]
   1b4ac:	ldr	r6, [r5, #4]
   1b4b0:	ldr	r2, [r4, #56]	; 0x38
   1b4b4:	ldr	r3, [r4, #16]
   1b4b8:	ldr	ip, [r4, #60]	; 0x3c
   1b4bc:	ldr	fp, [pc, #220]	; 1b5a0 <lchmod@@Base+0x43d4>
   1b4c0:	orr	r1, r1, #1
   1b4c4:	str	r1, [sp, #28]
   1b4c8:	str	r1, [sp, #4]
   1b4cc:	str	r2, [sp, #12]
   1b4d0:	str	r3, [sp]
   1b4d4:	mov	r1, r8
   1b4d8:	mov	r0, r6
   1b4dc:	str	ip, [sp, #16]
   1b4e0:	str	fp, [sp, #8]
   1b4e4:	mov	r3, sl
   1b4e8:	mov	r2, r9
   1b4ec:	bl	17a64 <lchmod@@Base+0x898>
   1b4f0:	cmp	r8, r0
   1b4f4:	bhi	1b558 <lchmod@@Base+0x438c>
   1b4f8:	ldr	r3, [pc, #164]	; 1b5a4 <lchmod@@Base+0x43d8>
   1b4fc:	add	r8, r0, #1
   1b500:	cmp	r6, r3
   1b504:	str	r8, [r5]
   1b508:	beq	1b514 <lchmod@@Base+0x4348>
   1b50c:	mov	r0, r6
   1b510:	bl	1309c <__assert_fail@plt+0x1870>
   1b514:	mov	r0, r8
   1b518:	bl	1c634 <lchmod@@Base+0x5468>
   1b51c:	ldr	lr, [r4, #60]	; 0x3c
   1b520:	ldr	ip, [r4, #16]
   1b524:	mov	r3, sl
   1b528:	mov	r2, r9
   1b52c:	mov	r1, r8
   1b530:	str	r0, [r5, #4]
   1b534:	ldr	r5, [r4, #56]	; 0x38
   1b538:	ldr	r4, [sp, #28]
   1b53c:	str	fp, [sp, #8]
   1b540:	str	r4, [sp, #4]
   1b544:	str	lr, [sp, #16]
   1b548:	str	r5, [sp, #12]
   1b54c:	str	ip, [sp]
   1b550:	mov	r6, r0
   1b554:	bl	17a64 <lchmod@@Base+0x898>
   1b558:	ldr	r3, [sp, #24]
   1b55c:	mov	r0, r6
   1b560:	str	r3, [r7]
   1b564:	add	sp, sp, #44	; 0x2c
   1b568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b56c:	mov	r3, #8
   1b570:	str	r3, [sp]
   1b574:	add	r1, sp, #36	; 0x24
   1b578:	rsb	r2, r2, #1
   1b57c:	mvn	r3, #-2147483648	; 0x80000000
   1b580:	mov	r0, #0
   1b584:	bl	1c850 <lchmod@@Base+0x5684>
   1b588:	mov	r5, r0
   1b58c:	ldm	r6, {r0, r1}
   1b590:	str	r5, [r4]
   1b594:	stm	r5, {r0, r1}
   1b598:	b	1b480 <lchmod@@Base+0x42b4>
   1b59c:	andeq	pc, r2, r4, lsl #3
   1b5a0:	muleq	r2, ip, r1
   1b5a4:	andeq	pc, r2, r4, lsr #4
   1b5a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5ac:	sub	sp, sp, #44	; 0x2c
   1b5b0:	mov	r5, r0
   1b5b4:	mov	sl, r1
   1b5b8:	bl	11688 <__errno_location@plt>
   1b5bc:	ldr	r4, [pc, #396]	; 1b750 <lchmod@@Base+0x4584>
   1b5c0:	cmn	r5, #-2147483647	; 0x80000001
   1b5c4:	ldr	r6, [r4]
   1b5c8:	mov	r8, r0
   1b5cc:	movne	r0, #0
   1b5d0:	moveq	r0, #1
   1b5d4:	ldr	r3, [r8]
   1b5d8:	orrs	r0, r0, r5, lsr #31
   1b5dc:	str	r3, [sp, #24]
   1b5e0:	bne	1b74c <lchmod@@Base+0x4580>
   1b5e4:	ldr	r2, [r4, #4]
   1b5e8:	cmp	r5, r2
   1b5ec:	blt	1b64c <lchmod@@Base+0x4480>
   1b5f0:	add	r7, r4, #8
   1b5f4:	cmp	r6, r7
   1b5f8:	str	r2, [sp, #36]	; 0x24
   1b5fc:	beq	1b71c <lchmod@@Base+0x4550>
   1b600:	mov	r3, #8
   1b604:	sub	r2, r5, r2
   1b608:	mov	r0, r6
   1b60c:	str	r3, [sp]
   1b610:	add	r2, r2, #1
   1b614:	mvn	r3, #-2147483648	; 0x80000000
   1b618:	add	r1, sp, #36	; 0x24
   1b61c:	bl	1c850 <lchmod@@Base+0x5684>
   1b620:	mov	r6, r0
   1b624:	str	r0, [r4]
   1b628:	ldr	r0, [r4, #4]
   1b62c:	ldr	r2, [sp, #36]	; 0x24
   1b630:	mov	r1, #0
   1b634:	sub	r2, r2, r0
   1b638:	add	r0, r6, r0, lsl #3
   1b63c:	lsl	r2, r2, #3
   1b640:	bl	116ac <memset@plt>
   1b644:	ldr	r3, [sp, #36]	; 0x24
   1b648:	str	r3, [r4, #4]
   1b64c:	ldr	r2, [r4, #56]	; 0x38
   1b650:	add	fp, r6, r5, lsl #3
   1b654:	ldr	r1, [r4, #20]
   1b658:	ldr	r9, [r6, r5, lsl #3]
   1b65c:	ldr	r7, [fp, #4]
   1b660:	ldr	r3, [r4, #16]
   1b664:	ldr	ip, [r4, #60]	; 0x3c
   1b668:	str	r2, [sp, #12]
   1b66c:	ldr	r2, [pc, #224]	; 1b754 <lchmod@@Base+0x4588>
   1b670:	orr	r1, r1, #1
   1b674:	str	r1, [sp, #28]
   1b678:	str	r1, [sp, #4]
   1b67c:	str	r2, [sp, #8]
   1b680:	str	r3, [sp]
   1b684:	mov	r0, r7
   1b688:	mov	r1, r9
   1b68c:	str	ip, [sp, #16]
   1b690:	mvn	r3, #0
   1b694:	mov	r2, sl
   1b698:	bl	17a64 <lchmod@@Base+0x898>
   1b69c:	cmp	r9, r0
   1b6a0:	bhi	1b708 <lchmod@@Base+0x453c>
   1b6a4:	ldr	r3, [pc, #172]	; 1b758 <lchmod@@Base+0x458c>
   1b6a8:	add	r9, r0, #1
   1b6ac:	cmp	r7, r3
   1b6b0:	str	r9, [r6, r5, lsl #3]
   1b6b4:	beq	1b6c0 <lchmod@@Base+0x44f4>
   1b6b8:	mov	r0, r7
   1b6bc:	bl	1309c <__assert_fail@plt+0x1870>
   1b6c0:	mov	r0, r9
   1b6c4:	bl	1c634 <lchmod@@Base+0x5468>
   1b6c8:	ldr	ip, [r4, #60]	; 0x3c
   1b6cc:	ldr	r3, [r4, #16]
   1b6d0:	ldr	lr, [r4, #56]	; 0x38
   1b6d4:	ldr	r4, [pc, #120]	; 1b754 <lchmod@@Base+0x4588>
   1b6d8:	mov	r2, sl
   1b6dc:	mov	r1, r9
   1b6e0:	str	r0, [fp, #4]
   1b6e4:	str	r4, [sp, #8]
   1b6e8:	ldr	r4, [sp, #28]
   1b6ec:	str	r3, [sp]
   1b6f0:	str	r4, [sp, #4]
   1b6f4:	str	ip, [sp, #16]
   1b6f8:	str	lr, [sp, #12]
   1b6fc:	mvn	r3, #0
   1b700:	mov	r7, r0
   1b704:	bl	17a64 <lchmod@@Base+0x898>
   1b708:	ldr	r3, [sp, #24]
   1b70c:	mov	r0, r7
   1b710:	str	r3, [r8]
   1b714:	add	sp, sp, #44	; 0x2c
   1b718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b71c:	mov	r3, #8
   1b720:	sub	r2, r5, r2
   1b724:	str	r3, [sp]
   1b728:	add	r1, sp, #36	; 0x24
   1b72c:	add	r2, r2, #1
   1b730:	mvn	r3, #-2147483648	; 0x80000000
   1b734:	bl	1c850 <lchmod@@Base+0x5684>
   1b738:	mov	r6, r0
   1b73c:	ldm	r7, {r0, r1}
   1b740:	str	r6, [r4]
   1b744:	stm	r6, {r0, r1}
   1b748:	b	1b628 <lchmod@@Base+0x445c>
   1b74c:	bl	117d8 <abort@plt>
   1b750:	andeq	pc, r2, r4, lsl #3
   1b754:	muleq	r2, ip, r1
   1b758:	andeq	pc, r2, r4, lsr #4
   1b75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b760:	sub	sp, sp, #44	; 0x2c
   1b764:	mov	sl, r0
   1b768:	bl	11688 <__errno_location@plt>
   1b76c:	ldr	r4, [pc, #348]	; 1b8d0 <lchmod@@Base+0x4704>
   1b770:	ldr	r2, [r4, #4]
   1b774:	ldr	r5, [r4]
   1b778:	cmp	r2, #0
   1b77c:	ldr	r3, [r0]
   1b780:	mov	r8, r0
   1b784:	str	r3, [sp, #28]
   1b788:	bgt	1b7e4 <lchmod@@Base+0x4618>
   1b78c:	add	r6, r4, #8
   1b790:	cmp	r5, r6
   1b794:	str	r2, [sp, #36]	; 0x24
   1b798:	beq	1b8a0 <lchmod@@Base+0x46d4>
   1b79c:	mov	r3, #8
   1b7a0:	mov	r0, r5
   1b7a4:	str	r3, [sp]
   1b7a8:	rsb	r2, r2, #1
   1b7ac:	mvn	r3, #-2147483648	; 0x80000000
   1b7b0:	add	r1, sp, #36	; 0x24
   1b7b4:	bl	1c850 <lchmod@@Base+0x5684>
   1b7b8:	mov	r5, r0
   1b7bc:	str	r0, [r4]
   1b7c0:	ldr	r0, [r4, #4]
   1b7c4:	ldr	r2, [sp, #36]	; 0x24
   1b7c8:	mov	r1, #0
   1b7cc:	sub	r2, r2, r0
   1b7d0:	add	r0, r5, r0, lsl #3
   1b7d4:	lsl	r2, r2, #3
   1b7d8:	bl	116ac <memset@plt>
   1b7dc:	ldr	r3, [sp, #36]	; 0x24
   1b7e0:	str	r3, [r4, #4]
   1b7e4:	ldr	r7, [r4, #20]
   1b7e8:	ldr	r9, [r5]
   1b7ec:	ldr	r6, [r5, #4]
   1b7f0:	ldr	r2, [r4, #56]	; 0x38
   1b7f4:	ldr	r3, [r4, #16]
   1b7f8:	ldr	ip, [r4, #60]	; 0x3c
   1b7fc:	ldr	fp, [pc, #208]	; 1b8d4 <lchmod@@Base+0x4708>
   1b800:	orr	r7, r7, #1
   1b804:	str	r2, [sp, #12]
   1b808:	str	r3, [sp]
   1b80c:	str	r7, [sp, #4]
   1b810:	mov	r1, r9
   1b814:	mov	r0, r6
   1b818:	str	ip, [sp, #16]
   1b81c:	str	fp, [sp, #8]
   1b820:	mvn	r3, #0
   1b824:	mov	r2, sl
   1b828:	bl	17a64 <lchmod@@Base+0x898>
   1b82c:	cmp	r9, r0
   1b830:	bhi	1b88c <lchmod@@Base+0x46c0>
   1b834:	ldr	r3, [pc, #156]	; 1b8d8 <lchmod@@Base+0x470c>
   1b838:	add	r9, r0, #1
   1b83c:	cmp	r6, r3
   1b840:	str	r9, [r5]
   1b844:	beq	1b850 <lchmod@@Base+0x4684>
   1b848:	mov	r0, r6
   1b84c:	bl	1309c <__assert_fail@plt+0x1870>
   1b850:	mov	r0, r9
   1b854:	bl	1c634 <lchmod@@Base+0x5468>
   1b858:	ldr	ip, [r4, #60]	; 0x3c
   1b85c:	ldr	r3, [r4, #16]
   1b860:	ldr	lr, [r4, #56]	; 0x38
   1b864:	mov	r2, sl
   1b868:	mov	r1, r9
   1b86c:	str	r0, [r5, #4]
   1b870:	str	r3, [sp]
   1b874:	stmib	sp, {r7, fp}
   1b878:	str	ip, [sp, #16]
   1b87c:	str	lr, [sp, #12]
   1b880:	mvn	r3, #0
   1b884:	mov	r6, r0
   1b888:	bl	17a64 <lchmod@@Base+0x898>
   1b88c:	ldr	r3, [sp, #28]
   1b890:	mov	r0, r6
   1b894:	str	r3, [r8]
   1b898:	add	sp, sp, #44	; 0x2c
   1b89c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8a0:	mov	r3, #8
   1b8a4:	str	r3, [sp]
   1b8a8:	add	r1, sp, #36	; 0x24
   1b8ac:	rsb	r2, r2, #1
   1b8b0:	mvn	r3, #-2147483648	; 0x80000000
   1b8b4:	mov	r0, #0
   1b8b8:	bl	1c850 <lchmod@@Base+0x5684>
   1b8bc:	mov	r5, r0
   1b8c0:	ldm	r6, {r0, r1}
   1b8c4:	str	r5, [r4]
   1b8c8:	stm	r5, {r0, r1}
   1b8cc:	b	1b7c0 <lchmod@@Base+0x45f4>
   1b8d0:	andeq	pc, r2, r4, lsl #3
   1b8d4:	muleq	r2, ip, r1
   1b8d8:	andeq	pc, r2, r4, lsr #4
   1b8dc:	push	{r4, r5, r6, lr}
   1b8e0:	ldr	r4, [r0], #8
   1b8e4:	cmp	r4, r0
   1b8e8:	beq	1b908 <lchmod@@Base+0x473c>
   1b8ec:	mov	r0, r4
   1b8f0:	bl	1cd88 <lchmod@@Base+0x5bbc>
   1b8f4:	cmp	r0, #0
   1b8f8:	movne	r3, r0
   1b8fc:	moveq	r3, r4
   1b900:	mov	r0, r3
   1b904:	pop	{r4, r5, r6, pc}
   1b908:	mov	r0, r1
   1b90c:	mov	r5, r1
   1b910:	bl	1cd5c <lchmod@@Base+0x5b90>
   1b914:	subs	r3, r0, #0
   1b918:	beq	1b900 <lchmod@@Base+0x4734>
   1b91c:	mov	r2, r5
   1b920:	mov	r1, r4
   1b924:	pop	{r4, r5, r6, lr}
   1b928:	b	114b4 <memcpy@plt>
   1b92c:	push	{r4, r5, r6, lr}
   1b930:	mov	r5, r0
   1b934:	ldr	r3, [r0, #4]
   1b938:	mov	r4, r0
   1b93c:	ldr	r0, [r5], #8
   1b940:	lsl	r6, r3, #1
   1b944:	cmp	r0, r5
   1b948:	beq	1b954 <lchmod@@Base+0x4788>
   1b94c:	bl	1309c <__assert_fail@plt+0x1870>
   1b950:	ldr	r3, [r4, #4]
   1b954:	cmp	r6, r3
   1b958:	bcc	1b988 <lchmod@@Base+0x47bc>
   1b95c:	mov	r0, r6
   1b960:	bl	1cd5c <lchmod@@Base+0x5b90>
   1b964:	cmp	r0, #0
   1b968:	mov	r3, r0
   1b96c:	mov	r2, r0
   1b970:	moveq	r3, r5
   1b974:	moveq	r6, #1024	; 0x400
   1b978:	movne	r2, #1
   1b97c:	stm	r4, {r3, r6}
   1b980:	mov	r0, r2
   1b984:	pop	{r4, r5, r6, pc}
   1b988:	bl	11688 <__errno_location@plt>
   1b98c:	mov	r1, #12
   1b990:	mov	r3, r5
   1b994:	mov	r6, #1024	; 0x400
   1b998:	mov	r2, #0
   1b99c:	str	r1, [r0]
   1b9a0:	b	1b97c <lchmod@@Base+0x47b0>
   1b9a4:	push	{r4, r5, r6, r7, r8, lr}
   1b9a8:	mov	r5, r0
   1b9ac:	ldr	r3, [r0, #4]
   1b9b0:	ldr	r8, [r5], #8
   1b9b4:	mov	r4, r0
   1b9b8:	cmp	r8, r5
   1b9bc:	lsl	r7, r3, #1
   1b9c0:	beq	1ba18 <lchmod@@Base+0x484c>
   1b9c4:	cmp	r3, r7
   1b9c8:	bhi	1b9f0 <lchmod@@Base+0x4824>
   1b9cc:	mov	r0, r8
   1b9d0:	mov	r1, r7
   1b9d4:	bl	1cd88 <lchmod@@Base+0x5bbc>
   1b9d8:	subs	r6, r0, #0
   1b9dc:	ldreq	r8, [r4]
   1b9e0:	beq	1b9fc <lchmod@@Base+0x4830>
   1b9e4:	stm	r4, {r6, r7}
   1b9e8:	mov	r0, #1
   1b9ec:	pop	{r4, r5, r6, r7, r8, pc}
   1b9f0:	bl	11688 <__errno_location@plt>
   1b9f4:	mov	r3, #12
   1b9f8:	str	r3, [r0]
   1b9fc:	mov	r0, r8
   1ba00:	bl	1309c <__assert_fail@plt+0x1870>
   1ba04:	mov	r3, #1024	; 0x400
   1ba08:	str	r5, [r4]
   1ba0c:	str	r3, [r4, #4]
   1ba10:	mov	r0, #0
   1ba14:	pop	{r4, r5, r6, r7, r8, pc}
   1ba18:	mov	r0, r7
   1ba1c:	bl	1cd5c <lchmod@@Base+0x5b90>
   1ba20:	subs	r6, r0, #0
   1ba24:	beq	1ba10 <lchmod@@Base+0x4844>
   1ba28:	mov	r1, r8
   1ba2c:	ldr	r2, [r4, #4]
   1ba30:	bl	114b4 <memcpy@plt>
   1ba34:	b	1b9e4 <lchmod@@Base+0x4818>
   1ba38:	push	{r4, r5, r6, r7, r8, lr}
   1ba3c:	mov	r5, r1
   1ba40:	bl	1164c <getfilecon@plt>
   1ba44:	subs	r4, r0, #0
   1ba48:	beq	1ba94 <lchmod@@Base+0x48c8>
   1ba4c:	cmp	r4, #10
   1ba50:	beq	1ba5c <lchmod@@Base+0x4890>
   1ba54:	mov	r0, r4
   1ba58:	pop	{r4, r5, r6, r7, r8, pc}
   1ba5c:	ldr	r6, [r5]
   1ba60:	ldr	r1, [pc, #64]	; 1baa8 <lchmod@@Base+0x48dc>
   1ba64:	mov	r0, r6
   1ba68:	bl	11454 <strcmp@plt>
   1ba6c:	subs	r7, r0, #0
   1ba70:	bne	1ba54 <lchmod@@Base+0x4888>
   1ba74:	mov	r0, r6
   1ba78:	bl	11778 <freecon@plt>
   1ba7c:	str	r7, [r5]
   1ba80:	bl	11688 <__errno_location@plt>
   1ba84:	mov	r3, #61	; 0x3d
   1ba88:	mvn	r4, #0
   1ba8c:	str	r3, [r0]
   1ba90:	b	1ba54 <lchmod@@Base+0x4888>
   1ba94:	bl	11688 <__errno_location@plt>
   1ba98:	mov	r3, #95	; 0x5f
   1ba9c:	mvn	r4, #0
   1baa0:	str	r3, [r0]
   1baa4:	b	1ba54 <lchmod@@Base+0x4888>
   1baa8:	muleq	r1, ip, r3
   1baac:	push	{r4, r5, r6, r7, r8, lr}
   1bab0:	mov	r5, r1
   1bab4:	bl	115c8 <lgetfilecon@plt>
   1bab8:	subs	r4, r0, #0
   1babc:	beq	1bb08 <lchmod@@Base+0x493c>
   1bac0:	cmp	r4, #10
   1bac4:	beq	1bad0 <lchmod@@Base+0x4904>
   1bac8:	mov	r0, r4
   1bacc:	pop	{r4, r5, r6, r7, r8, pc}
   1bad0:	ldr	r6, [r5]
   1bad4:	ldr	r1, [pc, #64]	; 1bb1c <lchmod@@Base+0x4950>
   1bad8:	mov	r0, r6
   1badc:	bl	11454 <strcmp@plt>
   1bae0:	subs	r7, r0, #0
   1bae4:	bne	1bac8 <lchmod@@Base+0x48fc>
   1bae8:	mov	r0, r6
   1baec:	bl	11778 <freecon@plt>
   1baf0:	str	r7, [r5]
   1baf4:	bl	11688 <__errno_location@plt>
   1baf8:	mov	r3, #61	; 0x3d
   1bafc:	mvn	r4, #0
   1bb00:	str	r3, [r0]
   1bb04:	b	1bac8 <lchmod@@Base+0x48fc>
   1bb08:	bl	11688 <__errno_location@plt>
   1bb0c:	mov	r3, #95	; 0x5f
   1bb10:	mvn	r4, #0
   1bb14:	str	r3, [r0]
   1bb18:	b	1bac8 <lchmod@@Base+0x48fc>
   1bb1c:	muleq	r1, ip, r3
   1bb20:	push	{r4, r5, r6, r7, r8, lr}
   1bb24:	mov	r5, r1
   1bb28:	bl	11514 <fgetfilecon@plt>
   1bb2c:	subs	r4, r0, #0
   1bb30:	beq	1bb7c <lchmod@@Base+0x49b0>
   1bb34:	cmp	r4, #10
   1bb38:	beq	1bb44 <lchmod@@Base+0x4978>
   1bb3c:	mov	r0, r4
   1bb40:	pop	{r4, r5, r6, r7, r8, pc}
   1bb44:	ldr	r6, [r5]
   1bb48:	ldr	r1, [pc, #64]	; 1bb90 <lchmod@@Base+0x49c4>
   1bb4c:	mov	r0, r6
   1bb50:	bl	11454 <strcmp@plt>
   1bb54:	subs	r7, r0, #0
   1bb58:	bne	1bb3c <lchmod@@Base+0x4970>
   1bb5c:	mov	r0, r6
   1bb60:	bl	11778 <freecon@plt>
   1bb64:	str	r7, [r5]
   1bb68:	bl	11688 <__errno_location@plt>
   1bb6c:	mov	r3, #61	; 0x3d
   1bb70:	mvn	r4, #0
   1bb74:	str	r3, [r0]
   1bb78:	b	1bb3c <lchmod@@Base+0x4970>
   1bb7c:	bl	11688 <__errno_location@plt>
   1bb80:	mov	r3, #95	; 0x5f
   1bb84:	mvn	r4, #0
   1bb88:	str	r3, [r0]
   1bb8c:	b	1bb3c <lchmod@@Base+0x4970>
   1bb90:	muleq	r1, ip, r3
   1bb94:	cmp	r0, #2
   1bb98:	push	{r4, r5, r6, r7, r8, lr}
   1bb9c:	mov	r4, r0
   1bba0:	bhi	1bbc8 <lchmod@@Base+0x49fc>
   1bba4:	bl	1d4b8 <lchmod@@Base+0x62ec>
   1bba8:	mov	r7, r0
   1bbac:	bl	11688 <__errno_location@plt>
   1bbb0:	mov	r5, r0
   1bbb4:	mov	r0, r4
   1bbb8:	ldr	r6, [r5]
   1bbbc:	mov	r4, r7
   1bbc0:	bl	117e4 <close@plt>
   1bbc4:	str	r6, [r5]
   1bbc8:	mov	r0, r4
   1bbcc:	pop	{r4, r5, r6, r7, r8, pc}
   1bbd0:	push	{r4, r5, r6, lr}
   1bbd4:	sub	sp, sp, #32
   1bbd8:	cmp	r1, #0
   1bbdc:	mov	r4, r0
   1bbe0:	ldr	r5, [sp, #48]	; 0x30
   1bbe4:	ldr	r6, [sp, #52]	; 0x34
   1bbe8:	beq	1bf00 <lchmod@@Base+0x4d34>
   1bbec:	stm	sp, {r2, r3}
   1bbf0:	mov	r3, r1
   1bbf4:	ldr	r2, [pc, #808]	; 1bf24 <lchmod@@Base+0x4d58>
   1bbf8:	mov	r1, #1
   1bbfc:	bl	116d0 <__fprintf_chk@plt>
   1bc00:	mov	r2, #5
   1bc04:	ldr	r1, [pc, #796]	; 1bf28 <lchmod@@Base+0x4d5c>
   1bc08:	mov	r0, #0
   1bc0c:	bl	114f0 <dcgettext@plt>
   1bc10:	ldr	r3, [pc, #788]	; 1bf2c <lchmod@@Base+0x4d60>
   1bc14:	ldr	r2, [pc, #788]	; 1bf30 <lchmod@@Base+0x4d64>
   1bc18:	str	r3, [sp]
   1bc1c:	mov	r1, #1
   1bc20:	mov	r3, r0
   1bc24:	mov	r0, r4
   1bc28:	bl	116d0 <__fprintf_chk@plt>
   1bc2c:	mov	r1, r4
   1bc30:	mov	r0, #10
   1bc34:	bl	114e4 <fputc_unlocked@plt>
   1bc38:	mov	r2, #5
   1bc3c:	ldr	r1, [pc, #752]	; 1bf34 <lchmod@@Base+0x4d68>
   1bc40:	mov	r0, #0
   1bc44:	bl	114f0 <dcgettext@plt>
   1bc48:	mov	r1, #1
   1bc4c:	ldr	r3, [pc, #740]	; 1bf38 <lchmod@@Base+0x4d6c>
   1bc50:	mov	r2, r0
   1bc54:	mov	r0, r4
   1bc58:	bl	116d0 <__fprintf_chk@plt>
   1bc5c:	mov	r1, r4
   1bc60:	mov	r0, #10
   1bc64:	bl	114e4 <fputc_unlocked@plt>
   1bc68:	cmp	r6, #9
   1bc6c:	ldrls	pc, [pc, r6, lsl #2]
   1bc70:	b	1bf18 <lchmod@@Base+0x4d4c>
   1bc74:	strdeq	fp, [r1], -r8
   1bc78:	andeq	fp, r1, r0, lsl #26
   1bc7c:	andeq	fp, r1, ip, lsr #26
   1bc80:	andeq	fp, r1, r0, ror #26
   1bc84:	muleq	r1, ip, sp
   1bc88:	ldrdeq	fp, [r1], -r8
   1bc8c:	andeq	fp, r1, r4, lsl lr
   1bc90:	andeq	fp, r1, r8, asr lr
   1bc94:	andeq	fp, r1, r8, lsr #29
   1bc98:	muleq	r1, ip, ip
   1bc9c:	ldr	r1, [pc, #664]	; 1bf3c <lchmod@@Base+0x4d70>
   1bca0:	mov	r2, #5
   1bca4:	mov	r0, #0
   1bca8:	bl	114f0 <dcgettext@plt>
   1bcac:	ldr	ip, [r5, #32]
   1bcb0:	ldr	r1, [r5, #28]
   1bcb4:	ldr	r2, [r5, #24]
   1bcb8:	ldr	r3, [r5]
   1bcbc:	ldr	r6, [r5, #20]
   1bcc0:	str	ip, [sp, #28]
   1bcc4:	ldr	lr, [r5, #16]
   1bcc8:	str	r1, [sp, #24]
   1bccc:	ldr	ip, [r5, #12]
   1bcd0:	str	r2, [sp, #20]
   1bcd4:	ldr	r1, [r5, #8]
   1bcd8:	ldr	r2, [r5, #4]
   1bcdc:	str	r6, [sp, #16]
   1bce0:	stmib	sp, {r1, ip, lr}
   1bce4:	mov	r1, #1
   1bce8:	str	r2, [sp]
   1bcec:	mov	r2, r0
   1bcf0:	mov	r0, r4
   1bcf4:	bl	116d0 <__fprintf_chk@plt>
   1bcf8:	add	sp, sp, #32
   1bcfc:	pop	{r4, r5, r6, pc}
   1bd00:	mov	r2, #5
   1bd04:	ldr	r1, [pc, #564]	; 1bf40 <lchmod@@Base+0x4d74>
   1bd08:	mov	r0, #0
   1bd0c:	bl	114f0 <dcgettext@plt>
   1bd10:	ldr	r3, [r5]
   1bd14:	mov	r1, #1
   1bd18:	mov	r2, r0
   1bd1c:	mov	r0, r4
   1bd20:	add	sp, sp, #32
   1bd24:	pop	{r4, r5, r6, lr}
   1bd28:	b	116d0 <__fprintf_chk@plt>
   1bd2c:	mov	r2, #5
   1bd30:	ldr	r1, [pc, #524]	; 1bf44 <lchmod@@Base+0x4d78>
   1bd34:	mov	r0, #0
   1bd38:	bl	114f0 <dcgettext@plt>
   1bd3c:	ldr	r2, [r5, #4]
   1bd40:	ldr	r3, [r5]
   1bd44:	mov	r1, #1
   1bd48:	str	r2, [sp, #48]	; 0x30
   1bd4c:	mov	r2, r0
   1bd50:	mov	r0, r4
   1bd54:	add	sp, sp, #32
   1bd58:	pop	{r4, r5, r6, lr}
   1bd5c:	b	116d0 <__fprintf_chk@plt>
   1bd60:	mov	r2, #5
   1bd64:	ldr	r1, [pc, #476]	; 1bf48 <lchmod@@Base+0x4d7c>
   1bd68:	mov	r0, #0
   1bd6c:	bl	114f0 <dcgettext@plt>
   1bd70:	ldr	r1, [r5, #8]
   1bd74:	ldr	r2, [r5, #4]
   1bd78:	ldr	r3, [r5]
   1bd7c:	str	r1, [sp, #52]	; 0x34
   1bd80:	str	r2, [sp, #48]	; 0x30
   1bd84:	mov	r1, #1
   1bd88:	mov	r2, r0
   1bd8c:	mov	r0, r4
   1bd90:	add	sp, sp, #32
   1bd94:	pop	{r4, r5, r6, lr}
   1bd98:	b	116d0 <__fprintf_chk@plt>
   1bd9c:	mov	r2, #5
   1bda0:	ldr	r1, [pc, #420]	; 1bf4c <lchmod@@Base+0x4d80>
   1bda4:	mov	r0, #0
   1bda8:	bl	114f0 <dcgettext@plt>
   1bdac:	ldr	r1, [r5, #8]
   1bdb0:	ldr	ip, [r5, #12]
   1bdb4:	ldr	r2, [r5, #4]
   1bdb8:	ldr	r3, [r5]
   1bdbc:	stmib	sp, {r1, ip}
   1bdc0:	str	r2, [sp]
   1bdc4:	mov	r1, #1
   1bdc8:	mov	r2, r0
   1bdcc:	mov	r0, r4
   1bdd0:	bl	116d0 <__fprintf_chk@plt>
   1bdd4:	b	1bcf8 <lchmod@@Base+0x4b2c>
   1bdd8:	mov	r2, #5
   1bddc:	ldr	r1, [pc, #364]	; 1bf50 <lchmod@@Base+0x4d84>
   1bde0:	mov	r0, #0
   1bde4:	bl	114f0 <dcgettext@plt>
   1bde8:	add	r1, r5, #8
   1bdec:	ldr	r2, [r5, #4]
   1bdf0:	ldm	r1, {r1, ip, lr}
   1bdf4:	ldr	r3, [r5]
   1bdf8:	str	r2, [sp]
   1bdfc:	stmib	sp, {r1, ip, lr}
   1be00:	mov	r1, #1
   1be04:	mov	r2, r0
   1be08:	mov	r0, r4
   1be0c:	bl	116d0 <__fprintf_chk@plt>
   1be10:	b	1bcf8 <lchmod@@Base+0x4b2c>
   1be14:	mov	r2, #5
   1be18:	ldr	r1, [pc, #308]	; 1bf54 <lchmod@@Base+0x4d88>
   1be1c:	mov	r0, #0
   1be20:	bl	114f0 <dcgettext@plt>
   1be24:	add	r1, r5, #8
   1be28:	ldr	r2, [r5, #4]
   1be2c:	ldm	r1, {r1, ip, lr}
   1be30:	ldr	r6, [r5, #20]
   1be34:	ldr	r3, [r5]
   1be38:	stmib	sp, {r1, ip, lr}
   1be3c:	mov	r1, #1
   1be40:	str	r2, [sp]
   1be44:	str	r6, [sp, #16]
   1be48:	mov	r2, r0
   1be4c:	mov	r0, r4
   1be50:	bl	116d0 <__fprintf_chk@plt>
   1be54:	b	1bcf8 <lchmod@@Base+0x4b2c>
   1be58:	mov	r2, #5
   1be5c:	ldr	r1, [pc, #244]	; 1bf58 <lchmod@@Base+0x4d8c>
   1be60:	mov	r0, #0
   1be64:	bl	114f0 <dcgettext@plt>
   1be68:	ldr	r2, [r5, #24]
   1be6c:	ldr	r3, [r5]
   1be70:	ldr	r6, [r5, #20]
   1be74:	ldr	lr, [r5, #16]
   1be78:	ldr	ip, [r5, #12]
   1be7c:	str	r2, [sp, #20]
   1be80:	ldr	r1, [r5, #8]
   1be84:	ldr	r2, [r5, #4]
   1be88:	str	r6, [sp, #16]
   1be8c:	stmib	sp, {r1, ip, lr}
   1be90:	mov	r1, #1
   1be94:	str	r2, [sp]
   1be98:	mov	r2, r0
   1be9c:	mov	r0, r4
   1bea0:	bl	116d0 <__fprintf_chk@plt>
   1bea4:	b	1bcf8 <lchmod@@Base+0x4b2c>
   1bea8:	mov	r2, #5
   1beac:	ldr	r1, [pc, #168]	; 1bf5c <lchmod@@Base+0x4d90>
   1beb0:	mov	r0, #0
   1beb4:	bl	114f0 <dcgettext@plt>
   1beb8:	ldr	r1, [r5, #28]
   1bebc:	ldr	r2, [r5, #24]
   1bec0:	ldr	r3, [r5]
   1bec4:	ldr	r6, [r5, #20]
   1bec8:	ldr	lr, [r5, #16]
   1becc:	str	r1, [sp, #24]
   1bed0:	ldr	ip, [r5, #12]
   1bed4:	str	r2, [sp, #20]
   1bed8:	ldr	r1, [r5, #8]
   1bedc:	ldr	r2, [r5, #4]
   1bee0:	str	r6, [sp, #16]
   1bee4:	stmib	sp, {r1, ip, lr}
   1bee8:	mov	r1, #1
   1beec:	str	r2, [sp]
   1bef0:	mov	r2, r0
   1bef4:	mov	r0, r4
   1bef8:	bl	116d0 <__fprintf_chk@plt>
   1befc:	b	1bcf8 <lchmod@@Base+0x4b2c>
   1bf00:	str	r3, [sp]
   1bf04:	mov	r1, #1
   1bf08:	mov	r3, r2
   1bf0c:	ldr	r2, [pc, #76]	; 1bf60 <lchmod@@Base+0x4d94>
   1bf10:	bl	116d0 <__fprintf_chk@plt>
   1bf14:	b	1bc00 <lchmod@@Base+0x4a34>
   1bf18:	mov	r2, #5
   1bf1c:	ldr	r1, [pc, #64]	; 1bf64 <lchmod@@Base+0x4d98>
   1bf20:	b	1bca4 <lchmod@@Base+0x4ad8>
   1bf24:	andeq	lr, r1, r8, lsr #7
   1bf28:			; <UNDEFINED> instruction: 0x0001e3bc
   1bf2c:	andeq	r0, r0, r6, ror #15
   1bf30:	muleq	r1, r4, r6
   1bf34:	andeq	lr, r1, r0, asr #7
   1bf38:	andeq	lr, r1, ip, ror #8
   1bf3c:	muleq	r1, ip, r5
   1bf40:	muleq	r1, r0, r4
   1bf44:	andeq	lr, r1, r0, lsr #9
   1bf48:			; <UNDEFINED> instruction: 0x0001e4b8
   1bf4c:	ldrdeq	lr, [r1], -r4
   1bf50:	strdeq	lr, [r1], -r4
   1bf54:	andeq	lr, r1, r8, lsl r5
   1bf58:	andeq	lr, r1, r0, asr #10
   1bf5c:	andeq	lr, r1, ip, ror #10
   1bf60:			; <UNDEFINED> instruction: 0x0001e3b4
   1bf64:	ldrdeq	lr, [r1], -r0
   1bf68:	push	{r4, r5, lr}
   1bf6c:	sub	sp, sp, #12
   1bf70:	ldr	r5, [sp, #24]
   1bf74:	ldr	ip, [r5]
   1bf78:	cmp	ip, #0
   1bf7c:	beq	1bf98 <lchmod@@Base+0x4dcc>
   1bf80:	mov	lr, r5
   1bf84:	mov	ip, #0
   1bf88:	ldr	r4, [lr, #4]!
   1bf8c:	add	ip, ip, #1
   1bf90:	cmp	r4, #0
   1bf94:	bne	1bf88 <lchmod@@Base+0x4dbc>
   1bf98:	stm	sp, {r5, ip}
   1bf9c:	bl	1bbd0 <lchmod@@Base+0x4a04>
   1bfa0:	add	sp, sp, #12
   1bfa4:	pop	{r4, r5, pc}
   1bfa8:	push	{r4, r5, lr}
   1bfac:	sub	sp, sp, #76	; 0x4c
   1bfb0:	mov	r5, r0
   1bfb4:	ldr	ip, [sp, #88]	; 0x58
   1bfb8:	ldr	r0, [ip]
   1bfbc:	cmp	r0, #0
   1bfc0:	str	r0, [sp, #32]
   1bfc4:	beq	1c398 <lchmod@@Base+0x51cc>
   1bfc8:	ldr	r0, [ip, #4]
   1bfcc:	cmp	r0, #0
   1bfd0:	str	r0, [sp, #36]	; 0x24
   1bfd4:	beq	1c3a0 <lchmod@@Base+0x51d4>
   1bfd8:	ldr	r0, [ip, #8]
   1bfdc:	cmp	r0, #0
   1bfe0:	str	r0, [sp, #40]	; 0x28
   1bfe4:	beq	1c3a8 <lchmod@@Base+0x51dc>
   1bfe8:	ldr	r0, [ip, #12]
   1bfec:	cmp	r0, #0
   1bff0:	str	r0, [sp, #44]	; 0x2c
   1bff4:	beq	1c3b0 <lchmod@@Base+0x51e4>
   1bff8:	ldr	r0, [ip, #16]
   1bffc:	cmp	r0, #0
   1c000:	str	r0, [sp, #48]	; 0x30
   1c004:	beq	1c3b8 <lchmod@@Base+0x51ec>
   1c008:	ldr	r0, [ip, #20]
   1c00c:	cmp	r0, #0
   1c010:	str	r0, [sp, #52]	; 0x34
   1c014:	beq	1c3c0 <lchmod@@Base+0x51f4>
   1c018:	ldr	r0, [ip, #24]
   1c01c:	cmp	r0, #0
   1c020:	str	r0, [sp, #56]	; 0x38
   1c024:	beq	1c3c8 <lchmod@@Base+0x51fc>
   1c028:	ldr	r0, [ip, #28]
   1c02c:	cmp	r0, #0
   1c030:	str	r0, [sp, #60]	; 0x3c
   1c034:	beq	1c3d0 <lchmod@@Base+0x5204>
   1c038:	ldr	r0, [ip, #32]
   1c03c:	cmp	r0, #0
   1c040:	str	r0, [sp, #64]	; 0x40
   1c044:	beq	1c3d8 <lchmod@@Base+0x520c>
   1c048:	ldr	r0, [ip, #36]	; 0x24
   1c04c:	cmp	r0, #0
   1c050:	movne	r4, #10
   1c054:	moveq	r4, #9
   1c058:	cmp	r1, #0
   1c05c:	beq	1c370 <lchmod@@Base+0x51a4>
   1c060:	stm	sp, {r2, r3}
   1c064:	mov	r0, r5
   1c068:	mov	r3, r1
   1c06c:	ldr	r2, [pc, #876]	; 1c3e0 <lchmod@@Base+0x5214>
   1c070:	mov	r1, #1
   1c074:	bl	116d0 <__fprintf_chk@plt>
   1c078:	mov	r2, #5
   1c07c:	ldr	r1, [pc, #864]	; 1c3e4 <lchmod@@Base+0x5218>
   1c080:	mov	r0, #0
   1c084:	bl	114f0 <dcgettext@plt>
   1c088:	ldr	r3, [pc, #856]	; 1c3e8 <lchmod@@Base+0x521c>
   1c08c:	ldr	r2, [pc, #856]	; 1c3ec <lchmod@@Base+0x5220>
   1c090:	str	r3, [sp]
   1c094:	mov	r1, #1
   1c098:	mov	r3, r0
   1c09c:	mov	r0, r5
   1c0a0:	bl	116d0 <__fprintf_chk@plt>
   1c0a4:	mov	r1, r5
   1c0a8:	mov	r0, #10
   1c0ac:	bl	114e4 <fputc_unlocked@plt>
   1c0b0:	mov	r2, #5
   1c0b4:	ldr	r1, [pc, #820]	; 1c3f0 <lchmod@@Base+0x5224>
   1c0b8:	mov	r0, #0
   1c0bc:	bl	114f0 <dcgettext@plt>
   1c0c0:	mov	r1, #1
   1c0c4:	ldr	r3, [pc, #808]	; 1c3f4 <lchmod@@Base+0x5228>
   1c0c8:	mov	r2, r0
   1c0cc:	mov	r0, r5
   1c0d0:	bl	116d0 <__fprintf_chk@plt>
   1c0d4:	mov	r1, r5
   1c0d8:	mov	r0, #10
   1c0dc:	bl	114e4 <fputc_unlocked@plt>
   1c0e0:	cmp	r4, #9
   1c0e4:	ldrls	pc, [pc, r4, lsl #2]
   1c0e8:	b	1c38c <lchmod@@Base+0x51c0>
   1c0ec:	andeq	ip, r1, r0, ror r1
   1c0f0:	andeq	ip, r1, r8, ror r1
   1c0f4:	andeq	ip, r1, r4, lsr #3
   1c0f8:	ldrdeq	ip, [r1], -r8
   1c0fc:	andeq	ip, r1, r0, lsl r2
   1c100:	andeq	ip, r1, ip, asr #4
   1c104:	andeq	ip, r1, r8, lsl #5
   1c108:	andeq	ip, r1, ip, asr #5
   1c10c:	andeq	ip, r1, r8, lsl r3
   1c110:	andeq	ip, r1, r4, lsl r1
   1c114:	ldr	r1, [pc, #732]	; 1c3f8 <lchmod@@Base+0x522c>
   1c118:	mov	r2, #5
   1c11c:	mov	r0, #0
   1c120:	bl	114f0 <dcgettext@plt>
   1c124:	ldr	ip, [sp, #64]	; 0x40
   1c128:	ldr	r1, [sp, #60]	; 0x3c
   1c12c:	ldr	r2, [sp, #56]	; 0x38
   1c130:	ldr	lr, [sp, #48]	; 0x30
   1c134:	str	ip, [sp, #28]
   1c138:	str	r1, [sp, #24]
   1c13c:	ldr	ip, [sp, #44]	; 0x2c
   1c140:	ldr	r1, [sp, #40]	; 0x28
   1c144:	ldr	r4, [sp, #52]	; 0x34
   1c148:	str	r2, [sp, #20]
   1c14c:	ldr	r2, [sp, #36]	; 0x24
   1c150:	stmib	sp, {r1, ip, lr}
   1c154:	mov	r1, #1
   1c158:	str	r2, [sp]
   1c15c:	ldr	r3, [sp, #32]
   1c160:	str	r4, [sp, #16]
   1c164:	mov	r2, r0
   1c168:	mov	r0, r5
   1c16c:	bl	116d0 <__fprintf_chk@plt>
   1c170:	add	sp, sp, #76	; 0x4c
   1c174:	pop	{r4, r5, pc}
   1c178:	mov	r2, #5
   1c17c:	ldr	r1, [pc, #632]	; 1c3fc <lchmod@@Base+0x5230>
   1c180:	mov	r0, #0
   1c184:	bl	114f0 <dcgettext@plt>
   1c188:	ldr	r3, [sp, #32]
   1c18c:	mov	r1, #1
   1c190:	mov	r2, r0
   1c194:	mov	r0, r5
   1c198:	add	sp, sp, #76	; 0x4c
   1c19c:	pop	{r4, r5, lr}
   1c1a0:	b	116d0 <__fprintf_chk@plt>
   1c1a4:	mov	r2, #5
   1c1a8:	ldr	r1, [pc, #592]	; 1c400 <lchmod@@Base+0x5234>
   1c1ac:	mov	r0, #0
   1c1b0:	bl	114f0 <dcgettext@plt>
   1c1b4:	ldr	r2, [sp, #36]	; 0x24
   1c1b8:	ldr	r3, [sp, #32]
   1c1bc:	str	r2, [sp, #88]	; 0x58
   1c1c0:	mov	r1, #1
   1c1c4:	mov	r2, r0
   1c1c8:	mov	r0, r5
   1c1cc:	add	sp, sp, #76	; 0x4c
   1c1d0:	pop	{r4, r5, lr}
   1c1d4:	b	116d0 <__fprintf_chk@plt>
   1c1d8:	mov	r2, #5
   1c1dc:	ldr	r1, [pc, #544]	; 1c404 <lchmod@@Base+0x5238>
   1c1e0:	mov	r0, #0
   1c1e4:	bl	114f0 <dcgettext@plt>
   1c1e8:	ldr	r1, [sp, #40]	; 0x28
   1c1ec:	ldr	r2, [sp, #36]	; 0x24
   1c1f0:	str	r1, [sp, #4]
   1c1f4:	str	r2, [sp]
   1c1f8:	ldr	r3, [sp, #32]
   1c1fc:	mov	r1, #1
   1c200:	mov	r2, r0
   1c204:	mov	r0, r5
   1c208:	bl	116d0 <__fprintf_chk@plt>
   1c20c:	b	1c170 <lchmod@@Base+0x4fa4>
   1c210:	mov	r2, #5
   1c214:	ldr	r1, [pc, #492]	; 1c408 <lchmod@@Base+0x523c>
   1c218:	mov	r0, #0
   1c21c:	bl	114f0 <dcgettext@plt>
   1c220:	ldr	r1, [sp, #40]	; 0x28
   1c224:	ldr	ip, [sp, #44]	; 0x2c
   1c228:	ldr	r2, [sp, #36]	; 0x24
   1c22c:	ldr	r3, [sp, #32]
   1c230:	stmib	sp, {r1, ip}
   1c234:	str	r2, [sp]
   1c238:	mov	r1, #1
   1c23c:	mov	r2, r0
   1c240:	mov	r0, r5
   1c244:	bl	116d0 <__fprintf_chk@plt>
   1c248:	b	1c170 <lchmod@@Base+0x4fa4>
   1c24c:	mov	r2, #5
   1c250:	ldr	r1, [pc, #436]	; 1c40c <lchmod@@Base+0x5240>
   1c254:	mov	r0, #0
   1c258:	bl	114f0 <dcgettext@plt>
   1c25c:	add	r1, sp, #40	; 0x28
   1c260:	ldr	r2, [sp, #36]	; 0x24
   1c264:	ldm	r1, {r1, ip, lr}
   1c268:	ldr	r3, [sp, #32]
   1c26c:	str	r2, [sp]
   1c270:	stmib	sp, {r1, ip, lr}
   1c274:	mov	r1, #1
   1c278:	mov	r2, r0
   1c27c:	mov	r0, r5
   1c280:	bl	116d0 <__fprintf_chk@plt>
   1c284:	b	1c170 <lchmod@@Base+0x4fa4>
   1c288:	mov	r2, #5
   1c28c:	ldr	r1, [pc, #380]	; 1c410 <lchmod@@Base+0x5244>
   1c290:	mov	r0, #0
   1c294:	bl	114f0 <dcgettext@plt>
   1c298:	add	r1, sp, #40	; 0x28
   1c29c:	ldr	r2, [sp, #36]	; 0x24
   1c2a0:	ldm	r1, {r1, ip, lr}
   1c2a4:	ldr	r4, [sp, #52]	; 0x34
   1c2a8:	str	r2, [sp]
   1c2ac:	stmib	sp, {r1, ip, lr}
   1c2b0:	mov	r1, #1
   1c2b4:	ldr	r3, [sp, #32]
   1c2b8:	str	r4, [sp, #16]
   1c2bc:	mov	r2, r0
   1c2c0:	mov	r0, r5
   1c2c4:	bl	116d0 <__fprintf_chk@plt>
   1c2c8:	b	1c170 <lchmod@@Base+0x4fa4>
   1c2cc:	mov	r2, #5
   1c2d0:	ldr	r1, [pc, #316]	; 1c414 <lchmod@@Base+0x5248>
   1c2d4:	mov	r0, #0
   1c2d8:	bl	114f0 <dcgettext@plt>
   1c2dc:	add	r1, sp, #40	; 0x28
   1c2e0:	ldr	r2, [sp, #56]	; 0x38
   1c2e4:	ldm	r1, {r1, ip, lr}
   1c2e8:	ldr	r4, [sp, #52]	; 0x34
   1c2ec:	str	r2, [sp, #20]
   1c2f0:	ldr	r2, [sp, #36]	; 0x24
   1c2f4:	stmib	sp, {r1, ip, lr}
   1c2f8:	mov	r1, #1
   1c2fc:	str	r2, [sp]
   1c300:	ldr	r3, [sp, #32]
   1c304:	str	r4, [sp, #16]
   1c308:	mov	r2, r0
   1c30c:	mov	r0, r5
   1c310:	bl	116d0 <__fprintf_chk@plt>
   1c314:	b	1c170 <lchmod@@Base+0x4fa4>
   1c318:	mov	r2, #5
   1c31c:	ldr	r1, [pc, #244]	; 1c418 <lchmod@@Base+0x524c>
   1c320:	mov	r0, #0
   1c324:	bl	114f0 <dcgettext@plt>
   1c328:	ldr	r1, [sp, #60]	; 0x3c
   1c32c:	ldr	r2, [sp, #56]	; 0x38
   1c330:	ldr	lr, [sp, #48]	; 0x30
   1c334:	ldr	ip, [sp, #44]	; 0x2c
   1c338:	str	r1, [sp, #24]
   1c33c:	ldr	r1, [sp, #40]	; 0x28
   1c340:	ldr	r4, [sp, #52]	; 0x34
   1c344:	str	r2, [sp, #20]
   1c348:	ldr	r2, [sp, #36]	; 0x24
   1c34c:	stmib	sp, {r1, ip, lr}
   1c350:	mov	r1, #1
   1c354:	str	r2, [sp]
   1c358:	ldr	r3, [sp, #32]
   1c35c:	str	r4, [sp, #16]
   1c360:	mov	r2, r0
   1c364:	mov	r0, r5
   1c368:	bl	116d0 <__fprintf_chk@plt>
   1c36c:	b	1c170 <lchmod@@Base+0x4fa4>
   1c370:	str	r3, [sp]
   1c374:	mov	r1, #1
   1c378:	mov	r3, r2
   1c37c:	mov	r0, r5
   1c380:	ldr	r2, [pc, #148]	; 1c41c <lchmod@@Base+0x5250>
   1c384:	bl	116d0 <__fprintf_chk@plt>
   1c388:	b	1c078 <lchmod@@Base+0x4eac>
   1c38c:	mov	r2, #5
   1c390:	ldr	r1, [pc, #136]	; 1c420 <lchmod@@Base+0x5254>
   1c394:	b	1c11c <lchmod@@Base+0x4f50>
   1c398:	mov	r4, r0
   1c39c:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3a0:	mov	r4, #1
   1c3a4:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3a8:	mov	r4, #2
   1c3ac:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3b0:	mov	r4, #3
   1c3b4:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3b8:	mov	r4, #4
   1c3bc:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3c0:	mov	r4, #5
   1c3c4:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3c8:	mov	r4, #6
   1c3cc:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3d0:	mov	r4, #7
   1c3d4:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3d8:	mov	r4, #8
   1c3dc:	b	1c058 <lchmod@@Base+0x4e8c>
   1c3e0:	andeq	lr, r1, r8, lsr #7
   1c3e4:			; <UNDEFINED> instruction: 0x0001e3bc
   1c3e8:	andeq	r0, r0, r6, ror #15
   1c3ec:	muleq	r1, r4, r6
   1c3f0:	andeq	lr, r1, r0, asr #7
   1c3f4:	andeq	lr, r1, ip, ror #8
   1c3f8:	muleq	r1, ip, r5
   1c3fc:	muleq	r1, r0, r4
   1c400:	andeq	lr, r1, r0, lsr #9
   1c404:			; <UNDEFINED> instruction: 0x0001e4b8
   1c408:	ldrdeq	lr, [r1], -r4
   1c40c:	strdeq	lr, [r1], -r4
   1c410:	andeq	lr, r1, r8, lsl r5
   1c414:	andeq	lr, r1, r0, asr #10
   1c418:	andeq	lr, r1, ip, ror #10
   1c41c:			; <UNDEFINED> instruction: 0x0001e3b4
   1c420:	ldrdeq	lr, [r1], -r0
   1c424:	push	{r3}		; (str r3, [sp, #-4]!)
   1c428:	push	{lr}		; (str lr, [sp, #-4]!)
   1c42c:	sub	sp, sp, #56	; 0x38
   1c430:	add	r3, sp, #64	; 0x40
   1c434:	ldr	ip, [sp, #64]	; 0x40
   1c438:	str	r3, [sp, #12]
   1c43c:	cmp	ip, #0
   1c440:	str	ip, [sp, #16]
   1c444:	beq	1c4dc <lchmod@@Base+0x5310>
   1c448:	ldr	ip, [sp, #68]	; 0x44
   1c44c:	cmp	ip, #0
   1c450:	str	ip, [sp, #20]
   1c454:	beq	1c4fc <lchmod@@Base+0x5330>
   1c458:	ldr	ip, [sp, #72]	; 0x48
   1c45c:	cmp	ip, #0
   1c460:	str	ip, [sp, #24]
   1c464:	beq	1c504 <lchmod@@Base+0x5338>
   1c468:	ldr	ip, [sp, #76]	; 0x4c
   1c46c:	cmp	ip, #0
   1c470:	str	ip, [sp, #28]
   1c474:	beq	1c50c <lchmod@@Base+0x5340>
   1c478:	ldr	ip, [sp, #80]	; 0x50
   1c47c:	cmp	ip, #0
   1c480:	str	ip, [sp, #32]
   1c484:	beq	1c514 <lchmod@@Base+0x5348>
   1c488:	ldr	ip, [sp, #84]	; 0x54
   1c48c:	cmp	ip, #0
   1c490:	str	ip, [sp, #36]	; 0x24
   1c494:	beq	1c51c <lchmod@@Base+0x5350>
   1c498:	ldr	ip, [sp, #88]	; 0x58
   1c49c:	cmp	ip, #0
   1c4a0:	str	ip, [sp, #40]	; 0x28
   1c4a4:	beq	1c524 <lchmod@@Base+0x5358>
   1c4a8:	ldr	ip, [sp, #92]	; 0x5c
   1c4ac:	cmp	ip, #0
   1c4b0:	str	ip, [sp, #44]	; 0x2c
   1c4b4:	beq	1c52c <lchmod@@Base+0x5360>
   1c4b8:	ldr	ip, [sp, #96]	; 0x60
   1c4bc:	cmp	ip, #0
   1c4c0:	str	ip, [sp, #48]	; 0x30
   1c4c4:	beq	1c534 <lchmod@@Base+0x5368>
   1c4c8:	ldr	ip, [sp, #100]	; 0x64
   1c4cc:	cmp	ip, #0
   1c4d0:	str	ip, [sp, #52]	; 0x34
   1c4d4:	movne	ip, #10
   1c4d8:	moveq	ip, #9
   1c4dc:	add	r3, sp, #16
   1c4e0:	stm	sp, {r3, ip}
   1c4e4:	ldr	r3, [sp, #60]	; 0x3c
   1c4e8:	bl	1bbd0 <lchmod@@Base+0x4a04>
   1c4ec:	add	sp, sp, #56	; 0x38
   1c4f0:	pop	{lr}		; (ldr lr, [sp], #4)
   1c4f4:	add	sp, sp, #4
   1c4f8:	bx	lr
   1c4fc:	mov	ip, #1
   1c500:	b	1c4dc <lchmod@@Base+0x5310>
   1c504:	mov	ip, #2
   1c508:	b	1c4dc <lchmod@@Base+0x5310>
   1c50c:	mov	ip, #3
   1c510:	b	1c4dc <lchmod@@Base+0x5310>
   1c514:	mov	ip, #4
   1c518:	b	1c4dc <lchmod@@Base+0x5310>
   1c51c:	mov	ip, #5
   1c520:	b	1c4dc <lchmod@@Base+0x5310>
   1c524:	mov	ip, #6
   1c528:	b	1c4dc <lchmod@@Base+0x5310>
   1c52c:	mov	ip, #7
   1c530:	b	1c4dc <lchmod@@Base+0x5310>
   1c534:	mov	ip, #8
   1c538:	b	1c4dc <lchmod@@Base+0x5310>
   1c53c:	ldr	r3, [pc, #116]	; 1c5b8 <lchmod@@Base+0x53ec>
   1c540:	push	{r4, lr}
   1c544:	mov	r0, #10
   1c548:	ldr	r1, [r3]
   1c54c:	bl	114e4 <fputc_unlocked@plt>
   1c550:	mov	r2, #5
   1c554:	ldr	r1, [pc, #96]	; 1c5bc <lchmod@@Base+0x53f0>
   1c558:	mov	r0, #0
   1c55c:	bl	114f0 <dcgettext@plt>
   1c560:	ldr	r2, [pc, #88]	; 1c5c0 <lchmod@@Base+0x53f4>
   1c564:	mov	r1, r0
   1c568:	mov	r0, #1
   1c56c:	bl	116b8 <__printf_chk@plt>
   1c570:	mov	r2, #5
   1c574:	ldr	r1, [pc, #72]	; 1c5c4 <lchmod@@Base+0x53f8>
   1c578:	mov	r0, #0
   1c57c:	bl	114f0 <dcgettext@plt>
   1c580:	ldr	r3, [pc, #64]	; 1c5c8 <lchmod@@Base+0x53fc>
   1c584:	ldr	r2, [pc, #64]	; 1c5cc <lchmod@@Base+0x5400>
   1c588:	mov	r1, r0
   1c58c:	mov	r0, #1
   1c590:	bl	116b8 <__printf_chk@plt>
   1c594:	mov	r2, #5
   1c598:	ldr	r1, [pc, #48]	; 1c5d0 <lchmod@@Base+0x5404>
   1c59c:	mov	r0, #0
   1c5a0:	bl	114f0 <dcgettext@plt>
   1c5a4:	ldr	r2, [pc, #40]	; 1c5d4 <lchmod@@Base+0x5408>
   1c5a8:	pop	{r4, lr}
   1c5ac:	mov	r1, r0
   1c5b0:	mov	r0, #1
   1c5b4:	b	116b8 <__printf_chk@plt>
   1c5b8:	ldrdeq	pc, [r2], -ip
   1c5bc:	andeq	lr, r1, ip, lsl #12
   1c5c0:	andeq	lr, r1, r0, lsr #12
   1c5c4:	andeq	lr, r1, r8, lsr r6
   1c5c8:	strdeq	sp, [r1], -r4
   1c5cc:	andeq	sp, r1, ip, lsl pc
   1c5d0:	andeq	lr, r1, ip, asr #12
   1c5d4:	andeq	lr, r1, r4, ror r6
   1c5d8:	push	{r4, r5, r6, lr}
   1c5dc:	mov	r6, r0
   1c5e0:	mov	r5, r1
   1c5e4:	mov	r4, r2
   1c5e8:	bl	1d46c <lchmod@@Base+0x62a0>
   1c5ec:	cmp	r0, #0
   1c5f0:	popne	{r4, r5, r6, pc}
   1c5f4:	cmp	r6, #0
   1c5f8:	beq	1c608 <lchmod@@Base+0x543c>
   1c5fc:	cmp	r5, #0
   1c600:	cmpne	r4, #0
   1c604:	popeq	{r4, r5, r6, pc}
   1c608:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c60c:	push	{r4, lr}
   1c610:	bl	1cd5c <lchmod@@Base+0x5b90>
   1c614:	cmp	r0, #0
   1c618:	popne	{r4, pc}
   1c61c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c620:	push	{r4, lr}
   1c624:	bl	1cd5c <lchmod@@Base+0x5b90>
   1c628:	cmp	r0, #0
   1c62c:	popne	{r4, pc}
   1c630:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c634:	push	{r4, lr}
   1c638:	bl	1cd5c <lchmod@@Base+0x5b90>
   1c63c:	cmp	r0, #0
   1c640:	popne	{r4, pc}
   1c644:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c648:	push	{r4, r5, r6, lr}
   1c64c:	mov	r5, r0
   1c650:	mov	r4, r1
   1c654:	bl	1cd88 <lchmod@@Base+0x5bbc>
   1c658:	cmp	r0, #0
   1c65c:	popne	{r4, r5, r6, pc}
   1c660:	adds	r4, r4, #0
   1c664:	movne	r4, #1
   1c668:	cmp	r5, #0
   1c66c:	orreq	r4, r4, #1
   1c670:	cmp	r4, #0
   1c674:	popeq	{r4, r5, r6, pc}
   1c678:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c67c:	push	{r4, lr}
   1c680:	cmp	r1, #0
   1c684:	orreq	r1, r1, #1
   1c688:	bl	1cd88 <lchmod@@Base+0x5bbc>
   1c68c:	cmp	r0, #0
   1c690:	popne	{r4, pc}
   1c694:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c698:	push	{r4, r5, r6, lr}
   1c69c:	mov	r6, r0
   1c6a0:	mov	r5, r1
   1c6a4:	mov	r4, r2
   1c6a8:	bl	1d46c <lchmod@@Base+0x62a0>
   1c6ac:	cmp	r0, #0
   1c6b0:	popne	{r4, r5, r6, pc}
   1c6b4:	cmp	r6, #0
   1c6b8:	beq	1c6c8 <lchmod@@Base+0x54fc>
   1c6bc:	cmp	r5, #0
   1c6c0:	cmpne	r4, #0
   1c6c4:	popeq	{r4, r5, r6, pc}
   1c6c8:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c6cc:	cmp	r2, #0
   1c6d0:	cmpne	r1, #0
   1c6d4:	moveq	r2, #1
   1c6d8:	moveq	r1, r2
   1c6dc:	push	{r4, lr}
   1c6e0:	bl	1d46c <lchmod@@Base+0x62a0>
   1c6e4:	cmp	r0, #0
   1c6e8:	popne	{r4, pc}
   1c6ec:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c6f0:	push	{r4, lr}
   1c6f4:	mov	r2, r1
   1c6f8:	mov	r1, r0
   1c6fc:	mov	r0, #0
   1c700:	bl	1d46c <lchmod@@Base+0x62a0>
   1c704:	cmp	r0, #0
   1c708:	popne	{r4, pc}
   1c70c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c710:	cmp	r1, #0
   1c714:	cmpne	r0, #0
   1c718:	moveq	r2, #1
   1c71c:	movne	r2, r1
   1c720:	moveq	r1, r2
   1c724:	movne	r1, r0
   1c728:	push	{r4, lr}
   1c72c:	mov	r0, #0
   1c730:	bl	1d46c <lchmod@@Base+0x62a0>
   1c734:	cmp	r0, #0
   1c738:	popne	{r4, pc}
   1c73c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c740:	cmp	r0, #0
   1c744:	push	{r4, r5, r6, lr}
   1c748:	mov	r5, r1
   1c74c:	ldr	r4, [r1]
   1c750:	beq	1c78c <lchmod@@Base+0x55c0>
   1c754:	lsr	r2, r4, #1
   1c758:	add	r3, r2, #1
   1c75c:	mvn	r3, r3
   1c760:	cmp	r4, r3
   1c764:	bhi	1c7a8 <lchmod@@Base+0x55dc>
   1c768:	add	r4, r4, #1
   1c76c:	add	r4, r4, r2
   1c770:	mov	r1, r4
   1c774:	mov	r2, #1
   1c778:	bl	1d46c <lchmod@@Base+0x62a0>
   1c77c:	cmp	r0, #0
   1c780:	beq	1c7ac <lchmod@@Base+0x55e0>
   1c784:	str	r4, [r5]
   1c788:	pop	{r4, r5, r6, pc}
   1c78c:	cmp	r4, #0
   1c790:	moveq	r4, #64	; 0x40
   1c794:	mov	r1, r4
   1c798:	mov	r2, #1
   1c79c:	bl	1d46c <lchmod@@Base+0x62a0>
   1c7a0:	cmp	r0, #0
   1c7a4:	bne	1c784 <lchmod@@Base+0x55b8>
   1c7a8:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c7ac:	cmp	r4, #0
   1c7b0:	bne	1c7a8 <lchmod@@Base+0x55dc>
   1c7b4:	str	r4, [r5]
   1c7b8:	pop	{r4, r5, r6, pc}
   1c7bc:	cmp	r0, #0
   1c7c0:	push	{r4, r5, r6, lr}
   1c7c4:	mov	r5, r1
   1c7c8:	ldr	r4, [r1]
   1c7cc:	mov	r6, r2
   1c7d0:	beq	1c814 <lchmod@@Base+0x5648>
   1c7d4:	lsr	r1, r4, #1
   1c7d8:	add	r3, r1, #1
   1c7dc:	mvn	r3, r3
   1c7e0:	cmp	r4, r3
   1c7e4:	bhi	1c84c <lchmod@@Base+0x5680>
   1c7e8:	add	r4, r4, #1
   1c7ec:	add	r4, r4, r1
   1c7f0:	mov	r1, r4
   1c7f4:	bl	1d46c <lchmod@@Base+0x62a0>
   1c7f8:	cmp	r0, #0
   1c7fc:	bne	1c80c <lchmod@@Base+0x5640>
   1c800:	cmp	r4, #0
   1c804:	cmpne	r6, #0
   1c808:	bne	1c84c <lchmod@@Base+0x5680>
   1c80c:	str	r4, [r5]
   1c810:	pop	{r4, r5, r6, pc}
   1c814:	cmp	r4, #0
   1c818:	bne	1c834 <lchmod@@Base+0x5668>
   1c81c:	mov	r1, r2
   1c820:	mov	r0, #64	; 0x40
   1c824:	bl	1d5b8 <lchmod@@Base+0x63ec>
   1c828:	cmp	r0, #0
   1c82c:	movne	r4, r0
   1c830:	addeq	r4, r0, #1
   1c834:	mov	r2, r6
   1c838:	mov	r1, r4
   1c83c:	mov	r0, #0
   1c840:	bl	1d46c <lchmod@@Base+0x62a0>
   1c844:	cmp	r0, #0
   1c848:	bne	1c80c <lchmod@@Base+0x5640>
   1c84c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1c850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c854:	sub	sp, sp, #12
   1c858:	ldr	r6, [r1]
   1c85c:	mov	r8, r1
   1c860:	mov	r9, r0
   1c864:	asrs	r4, r6, #1
   1c868:	mov	sl, r2
   1c86c:	mov	fp, r3
   1c870:	ldr	r7, [sp, #48]	; 0x30
   1c874:	bmi	1c9f0 <lchmod@@Base+0x5824>
   1c878:	mvn	r1, #-2147483648	; 0x80000000
   1c87c:	sub	r1, r1, r4
   1c880:	cmp	r6, r1
   1c884:	movle	r1, #0
   1c888:	movgt	r1, #1
   1c88c:	mvn	r3, fp
   1c890:	cmp	r1, #0
   1c894:	addeq	r4, r4, r6
   1c898:	mvnne	r4, #-2147483648	; 0x80000000
   1c89c:	lsr	r3, r3, #31
   1c8a0:	cmp	fp, r4
   1c8a4:	movge	r2, #0
   1c8a8:	andlt	r2, r3, #1
   1c8ac:	cmp	r2, #0
   1c8b0:	beq	1c9a0 <lchmod@@Base+0x57d4>
   1c8b4:	cmp	r7, #0
   1c8b8:	blt	1ca88 <lchmod@@Base+0x58bc>
   1c8bc:	bne	1ca80 <lchmod@@Base+0x58b4>
   1c8c0:	mov	r5, #64	; 0x40
   1c8c4:	mov	r1, r7
   1c8c8:	mov	r0, r5
   1c8cc:	str	r3, [sp, #4]
   1c8d0:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1c8d4:	mov	r1, r7
   1c8d8:	mov	r4, r0
   1c8dc:	mov	r0, r5
   1c8e0:	bl	1d9e4 <lchmod@@Base+0x6818>
   1c8e4:	ldr	r3, [sp, #4]
   1c8e8:	sub	r5, r5, r1
   1c8ec:	cmp	r9, #0
   1c8f0:	sub	r2, r4, r6
   1c8f4:	streq	r9, [r8]
   1c8f8:	cmp	r2, sl
   1c8fc:	bge	1c980 <lchmod@@Base+0x57b4>
   1c900:	cmp	sl, #0
   1c904:	blt	1ca20 <lchmod@@Base+0x5854>
   1c908:	cmp	r6, #0
   1c90c:	blt	1c92c <lchmod@@Base+0x5760>
   1c910:	mvn	r2, #-2147483648	; 0x80000000
   1c914:	sub	r2, r2, sl
   1c918:	cmp	r6, r2
   1c91c:	movle	r2, #0
   1c920:	movgt	r2, #1
   1c924:	cmp	r2, #0
   1c928:	bne	1ca1c <lchmod@@Base+0x5850>
   1c92c:	add	r6, r6, sl
   1c930:	cmp	fp, r6
   1c934:	movge	r3, #0
   1c938:	andlt	r3, r3, #1
   1c93c:	cmp	r3, #0
   1c940:	mov	r4, r6
   1c944:	bne	1ca1c <lchmod@@Base+0x5850>
   1c948:	cmp	r7, #0
   1c94c:	blt	1ca34 <lchmod@@Base+0x5868>
   1c950:	beq	1c97c <lchmod@@Base+0x57b0>
   1c954:	cmp	r6, #0
   1c958:	blt	1cad8 <lchmod@@Base+0x590c>
   1c95c:	mov	r1, r7
   1c960:	mvn	r0, #-2147483648	; 0x80000000
   1c964:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1c968:	cmp	r6, r0
   1c96c:	movle	r0, #0
   1c970:	movgt	r0, #1
   1c974:	cmp	r0, #0
   1c978:	bne	1ca1c <lchmod@@Base+0x5850>
   1c97c:	mul	r5, r6, r7
   1c980:	mov	r1, r5
   1c984:	mov	r0, r9
   1c988:	bl	1cd88 <lchmod@@Base+0x5bbc>
   1c98c:	cmp	r0, #0
   1c990:	beq	1ca04 <lchmod@@Base+0x5838>
   1c994:	str	r4, [r8]
   1c998:	add	sp, sp, #12
   1c99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9a0:	cmp	r7, #0
   1c9a4:	blt	1ca60 <lchmod@@Base+0x5894>
   1c9a8:	beq	1c8c0 <lchmod@@Base+0x56f4>
   1c9ac:	cmp	r4, #0
   1c9b0:	blt	1ca90 <lchmod@@Base+0x58c4>
   1c9b4:	mov	r1, r7
   1c9b8:	mvn	r0, #-2147483648	; 0x80000000
   1c9bc:	str	r3, [sp, #4]
   1c9c0:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1c9c4:	ldr	r3, [sp, #4]
   1c9c8:	cmp	r0, r4
   1c9cc:	movge	r0, #0
   1c9d0:	movlt	r0, #1
   1c9d4:	cmp	r0, #0
   1c9d8:	mvnne	r5, #-2147483648	; 0x80000000
   1c9dc:	bne	1c8c4 <lchmod@@Base+0x56f8>
   1c9e0:	mul	r5, r7, r4
   1c9e4:	cmp	r5, #63	; 0x3f
   1c9e8:	bgt	1c8ec <lchmod@@Base+0x5720>
   1c9ec:	b	1c8c0 <lchmod@@Base+0x56f4>
   1c9f0:	rsb	r1, r4, #-2147483648	; 0x80000000
   1c9f4:	cmp	r6, r1
   1c9f8:	movge	r1, #0
   1c9fc:	movlt	r1, #1
   1ca00:	b	1c88c <lchmod@@Base+0x56c0>
   1ca04:	adds	r5, r5, #0
   1ca08:	movne	r5, #1
   1ca0c:	cmp	r9, #0
   1ca10:	orreq	r5, r5, #1
   1ca14:	cmp	r5, #0
   1ca18:	beq	1c994 <lchmod@@Base+0x57c8>
   1ca1c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1ca20:	rsb	r2, sl, #-2147483648	; 0x80000000
   1ca24:	cmp	r6, r2
   1ca28:	movge	r2, #0
   1ca2c:	movlt	r2, #1
   1ca30:	b	1c924 <lchmod@@Base+0x5758>
   1ca34:	cmp	r6, #0
   1ca38:	blt	1cabc <lchmod@@Base+0x58f0>
   1ca3c:	cmn	r7, #1
   1ca40:	beq	1c97c <lchmod@@Base+0x57b0>
   1ca44:	mov	r1, r7
   1ca48:	mov	r0, #-2147483648	; 0x80000000
   1ca4c:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1ca50:	cmp	r6, r0
   1ca54:	movle	r0, #0
   1ca58:	movgt	r0, #1
   1ca5c:	b	1c974 <lchmod@@Base+0x57a8>
   1ca60:	cmp	r4, #0
   1ca64:	blt	1cafc <lchmod@@Base+0x5930>
   1ca68:	cmn	r7, #1
   1ca6c:	beq	1c9e0 <lchmod@@Base+0x5814>
   1ca70:	str	r3, [sp, #4]
   1ca74:	mov	r1, r7
   1ca78:	mov	r0, #-2147483648	; 0x80000000
   1ca7c:	b	1c9c0 <lchmod@@Base+0x57f4>
   1ca80:	mov	r4, fp
   1ca84:	b	1c9b4 <lchmod@@Base+0x57e8>
   1ca88:	mov	r4, fp
   1ca8c:	b	1ca68 <lchmod@@Base+0x589c>
   1ca90:	cmn	r4, #1
   1ca94:	beq	1c9e0 <lchmod@@Base+0x5814>
   1ca98:	mov	r1, r4
   1ca9c:	mov	r0, #-2147483648	; 0x80000000
   1caa0:	str	r3, [sp, #4]
   1caa4:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1caa8:	ldr	r3, [sp, #4]
   1caac:	cmp	r7, r0
   1cab0:	movle	r0, #0
   1cab4:	movgt	r0, #1
   1cab8:	b	1c9d4 <lchmod@@Base+0x5808>
   1cabc:	mov	r1, r7
   1cac0:	mvn	r0, #-2147483648	; 0x80000000
   1cac4:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1cac8:	cmp	r6, r0
   1cacc:	movge	r0, #0
   1cad0:	movlt	r0, #1
   1cad4:	b	1c974 <lchmod@@Base+0x57a8>
   1cad8:	cmn	r6, #1
   1cadc:	beq	1c97c <lchmod@@Base+0x57b0>
   1cae0:	mov	r1, r6
   1cae4:	mov	r0, #-2147483648	; 0x80000000
   1cae8:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1caec:	cmp	r7, r0
   1caf0:	movle	r0, #0
   1caf4:	movgt	r0, #1
   1caf8:	b	1c974 <lchmod@@Base+0x57a8>
   1cafc:	mov	r1, r7
   1cb00:	mvn	r0, #-2147483648	; 0x80000000
   1cb04:	str	r3, [sp, #4]
   1cb08:	bl	1d7c4 <lchmod@@Base+0x65f8>
   1cb0c:	ldr	r3, [sp, #4]
   1cb10:	cmp	r0, r4
   1cb14:	movle	r0, #0
   1cb18:	movgt	r0, #1
   1cb1c:	b	1c9d4 <lchmod@@Base+0x5808>
   1cb20:	push	{r4, lr}
   1cb24:	mov	r1, #1
   1cb28:	bl	1cd14 <lchmod@@Base+0x5b48>
   1cb2c:	cmp	r0, #0
   1cb30:	popne	{r4, pc}
   1cb34:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cb38:	push	{r4, lr}
   1cb3c:	mov	r1, #1
   1cb40:	bl	1cd14 <lchmod@@Base+0x5b48>
   1cb44:	cmp	r0, #0
   1cb48:	popne	{r4, pc}
   1cb4c:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cb50:	push	{r4, lr}
   1cb54:	bl	1cd14 <lchmod@@Base+0x5b48>
   1cb58:	cmp	r0, #0
   1cb5c:	popne	{r4, pc}
   1cb60:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cb64:	push	{r4, lr}
   1cb68:	bl	1cd14 <lchmod@@Base+0x5b48>
   1cb6c:	cmp	r0, #0
   1cb70:	popne	{r4, pc}
   1cb74:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cb78:	push	{r4, r5, r6, lr}
   1cb7c:	mov	r6, r0
   1cb80:	mov	r0, r1
   1cb84:	mov	r4, r1
   1cb88:	bl	1cd5c <lchmod@@Base+0x5b90>
   1cb8c:	subs	r5, r0, #0
   1cb90:	beq	1cba8 <lchmod@@Base+0x59dc>
   1cb94:	mov	r2, r4
   1cb98:	mov	r1, r6
   1cb9c:	bl	114b4 <memcpy@plt>
   1cba0:	mov	r0, r5
   1cba4:	pop	{r4, r5, r6, pc}
   1cba8:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cbac:	push	{r4, r5, r6, lr}
   1cbb0:	mov	r6, r0
   1cbb4:	mov	r0, r1
   1cbb8:	mov	r4, r1
   1cbbc:	bl	1cd5c <lchmod@@Base+0x5b90>
   1cbc0:	subs	r5, r0, #0
   1cbc4:	beq	1cbdc <lchmod@@Base+0x5a10>
   1cbc8:	mov	r2, r4
   1cbcc:	mov	r1, r6
   1cbd0:	bl	114b4 <memcpy@plt>
   1cbd4:	mov	r0, r5
   1cbd8:	pop	{r4, r5, r6, pc}
   1cbdc:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cbe0:	push	{r4, r5, r6, lr}
   1cbe4:	mov	r6, r0
   1cbe8:	add	r0, r1, #1
   1cbec:	mov	r4, r1
   1cbf0:	bl	1cd5c <lchmod@@Base+0x5b90>
   1cbf4:	subs	r5, r0, #0
   1cbf8:	beq	1cc18 <lchmod@@Base+0x5a4c>
   1cbfc:	mov	r3, #0
   1cc00:	mov	r1, r6
   1cc04:	strb	r3, [r5, r4]
   1cc08:	mov	r2, r4
   1cc0c:	bl	114b4 <memcpy@plt>
   1cc10:	mov	r0, r5
   1cc14:	pop	{r4, r5, r6, pc}
   1cc18:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cc1c:	push	{r4, r5, r6, lr}
   1cc20:	mov	r6, r0
   1cc24:	bl	11658 <strlen@plt>
   1cc28:	add	r4, r0, #1
   1cc2c:	mov	r0, r4
   1cc30:	bl	1cd5c <lchmod@@Base+0x5b90>
   1cc34:	subs	r5, r0, #0
   1cc38:	beq	1cc50 <lchmod@@Base+0x5a84>
   1cc3c:	mov	r2, r4
   1cc40:	mov	r1, r6
   1cc44:	bl	114b4 <memcpy@plt>
   1cc48:	mov	r0, r5
   1cc4c:	pop	{r4, r5, r6, pc}
   1cc50:	bl	1cc54 <lchmod@@Base+0x5a88>
   1cc54:	ldr	r3, [pc, #44]	; 1cc88 <lchmod@@Base+0x5abc>
   1cc58:	push	{r4, lr}
   1cc5c:	mov	r2, #5
   1cc60:	ldr	r1, [pc, #36]	; 1cc8c <lchmod@@Base+0x5ac0>
   1cc64:	mov	r0, #0
   1cc68:	ldr	r4, [r3]
   1cc6c:	bl	114f0 <dcgettext@plt>
   1cc70:	ldr	r2, [pc, #24]	; 1cc90 <lchmod@@Base+0x5ac4>
   1cc74:	mov	r1, #0
   1cc78:	mov	r3, r0
   1cc7c:	mov	r0, r4
   1cc80:	bl	115b0 <error@plt>
   1cc84:	bl	117d8 <abort@plt>
   1cc88:	andeq	pc, r2, r0, lsl #3
   1cc8c:	andeq	lr, r1, r4, asr #13
   1cc90:			; <UNDEFINED> instruction: 0x0001e1b8
   1cc94:	push	{r4, lr}
   1cc98:	orr	r1, r1, #512	; 0x200
   1cc9c:	bl	14498 <__assert_fail@plt+0x2c6c>
   1cca0:	cmp	r0, #0
   1cca4:	popne	{r4, pc}
   1cca8:	bl	11688 <__errno_location@plt>
   1ccac:	ldr	r3, [r0]
   1ccb0:	cmp	r3, #22
   1ccb4:	beq	1ccbc <lchmod@@Base+0x5af0>
   1ccb8:	bl	1cc54 <lchmod@@Base+0x5a88>
   1ccbc:	ldr	r3, [pc, #12]	; 1ccd0 <lchmod@@Base+0x5b04>
   1ccc0:	mov	r2, #41	; 0x29
   1ccc4:	ldr	r1, [pc, #8]	; 1ccd4 <lchmod@@Base+0x5b08>
   1ccc8:	ldr	r0, [pc, #8]	; 1ccd8 <lchmod@@Base+0x5b0c>
   1cccc:	bl	1182c <__assert_fail@plt>
   1ccd0:	ldrdeq	lr, [r1], -r8
   1ccd4:	andeq	lr, r1, r4, ror #13
   1ccd8:	strdeq	lr, [r1], -r0
   1ccdc:	ldr	r3, [r0, #48]	; 0x30
   1cce0:	and	r3, r3, #17
   1cce4:	cmp	r3, #16
   1cce8:	beq	1cd0c <lchmod@@Base+0x5b40>
   1ccec:	cmp	r3, #17
   1ccf0:	beq	1ccfc <lchmod@@Base+0x5b30>
   1ccf4:	mov	r0, #0
   1ccf8:	bx	lr
   1ccfc:	ldr	r0, [r1, #48]	; 0x30
   1cd00:	adds	r0, r0, #0
   1cd04:	movne	r0, #1
   1cd08:	bx	lr
   1cd0c:	mov	r0, #1
   1cd10:	bx	lr
   1cd14:	cmp	r1, #0
   1cd18:	cmpne	r0, #0
   1cd1c:	moveq	r1, #1
   1cd20:	moveq	r0, r1
   1cd24:	umull	r2, r3, r0, r1
   1cd28:	adds	r3, r3, #0
   1cd2c:	movne	r3, #1
   1cd30:	cmp	r2, #0
   1cd34:	blt	1cd44 <lchmod@@Base+0x5b78>
   1cd38:	cmp	r3, #0
   1cd3c:	bne	1cd44 <lchmod@@Base+0x5b78>
   1cd40:	b	11424 <calloc@plt>
   1cd44:	push	{r4, lr}
   1cd48:	bl	11688 <__errno_location@plt>
   1cd4c:	mov	r3, #12
   1cd50:	str	r3, [r0]
   1cd54:	mov	r0, #0
   1cd58:	pop	{r4, pc}
   1cd5c:	cmp	r0, #0
   1cd60:	moveq	r0, #1
   1cd64:	cmp	r0, #0
   1cd68:	blt	1cd70 <lchmod@@Base+0x5ba4>
   1cd6c:	b	115d4 <malloc@plt>
   1cd70:	push	{r4, lr}
   1cd74:	bl	11688 <__errno_location@plt>
   1cd78:	mov	r3, #12
   1cd7c:	str	r3, [r0]
   1cd80:	mov	r0, #0
   1cd84:	pop	{r4, pc}
   1cd88:	cmp	r0, #0
   1cd8c:	beq	1cdb0 <lchmod@@Base+0x5be4>
   1cd90:	cmp	r1, #0
   1cd94:	push	{lr}		; (str lr, [sp, #-4]!)
   1cd98:	sub	sp, sp, #12
   1cd9c:	beq	1cdb8 <lchmod@@Base+0x5bec>
   1cda0:	blt	1cdd0 <lchmod@@Base+0x5c04>
   1cda4:	add	sp, sp, #12
   1cda8:	pop	{lr}		; (ldr lr, [sp], #4)
   1cdac:	b	11508 <realloc@plt>
   1cdb0:	mov	r0, r1
   1cdb4:	b	1cd5c <lchmod@@Base+0x5b90>
   1cdb8:	str	r1, [sp, #4]
   1cdbc:	bl	1309c <__assert_fail@plt+0x1870>
   1cdc0:	ldr	r3, [sp, #4]
   1cdc4:	mov	r0, r3
   1cdc8:	add	sp, sp, #12
   1cdcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdd0:	bl	11688 <__errno_location@plt>
   1cdd4:	mov	r2, #12
   1cdd8:	mov	r3, #0
   1cddc:	str	r2, [r0]
   1cde0:	b	1cdc4 <lchmod@@Base+0x5bf8>
   1cde4:	ldrb	r3, [r0]
   1cde8:	cmp	r3, #47	; 0x2f
   1cdec:	bne	1cdfc <lchmod@@Base+0x5c30>
   1cdf0:	ldrb	r3, [r0, #1]!
   1cdf4:	cmp	r3, #47	; 0x2f
   1cdf8:	beq	1cdf0 <lchmod@@Base+0x5c24>
   1cdfc:	cmp	r3, #0
   1ce00:	bxeq	lr
   1ce04:	mov	r2, #0
   1ce08:	push	{lr}		; (str lr, [sp, #-4]!)
   1ce0c:	mov	ip, r2
   1ce10:	mov	r1, r0
   1ce14:	mov	lr, #1
   1ce18:	cmp	r3, #47	; 0x2f
   1ce1c:	moveq	r2, lr
   1ce20:	beq	1ce30 <lchmod@@Base+0x5c64>
   1ce24:	cmp	r2, #0
   1ce28:	movne	r0, r1
   1ce2c:	movne	r2, ip
   1ce30:	ldrb	r3, [r1, #1]!
   1ce34:	cmp	r3, #0
   1ce38:	bne	1ce18 <lchmod@@Base+0x5c4c>
   1ce3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce40:	push	{r4, lr}
   1ce44:	mov	r4, r0
   1ce48:	bl	11658 <strlen@plt>
   1ce4c:	cmp	r0, #1
   1ce50:	popls	{r4, pc}
   1ce54:	sub	r3, r0, #1
   1ce58:	add	r2, r4, r3
   1ce5c:	ldrb	r1, [r4, r3]
   1ce60:	cmp	r1, #47	; 0x2f
   1ce64:	popne	{r4, pc}
   1ce68:	cmp	r3, #1
   1ce6c:	beq	1ce80 <lchmod@@Base+0x5cb4>
   1ce70:	ldrb	r1, [r2, #-1]!
   1ce74:	sub	r0, r3, #1
   1ce78:	cmp	r1, #47	; 0x2f
   1ce7c:	beq	1ce88 <lchmod@@Base+0x5cbc>
   1ce80:	mov	r0, r3
   1ce84:	pop	{r4, pc}
   1ce88:	mov	r3, r0
   1ce8c:	b	1ce68 <lchmod@@Base+0x5c9c>
   1ce90:	push	{r4, r5, r6, lr}
   1ce94:	mov	r4, r0
   1ce98:	bl	11598 <__fpending@plt>
   1ce9c:	ldr	r5, [r4]
   1cea0:	and	r5, r5, #32
   1cea4:	mov	r6, r0
   1cea8:	mov	r0, r4
   1ceac:	bl	1cffc <lchmod@@Base+0x5e30>
   1ceb0:	cmp	r5, #0
   1ceb4:	mov	r4, r0
   1ceb8:	bne	1ced8 <lchmod@@Base+0x5d0c>
   1cebc:	cmp	r0, #0
   1cec0:	beq	1ced0 <lchmod@@Base+0x5d04>
   1cec4:	cmp	r6, #0
   1cec8:	beq	1cef4 <lchmod@@Base+0x5d28>
   1cecc:	mvn	r4, #0
   1ced0:	mov	r0, r4
   1ced4:	pop	{r4, r5, r6, pc}
   1ced8:	cmp	r0, #0
   1cedc:	bne	1cecc <lchmod@@Base+0x5d00>
   1cee0:	bl	11688 <__errno_location@plt>
   1cee4:	str	r4, [r0]
   1cee8:	mvn	r4, #0
   1ceec:	mov	r0, r4
   1cef0:	pop	{r4, r5, r6, pc}
   1cef4:	bl	11688 <__errno_location@plt>
   1cef8:	ldr	r4, [r0]
   1cefc:	subs	r4, r4, #9
   1cf00:	mvnne	r4, #0
   1cf04:	mov	r0, r4
   1cf08:	pop	{r4, r5, r6, pc}
   1cf0c:	push	{r4, r5}
   1cf10:	mov	r4, #0
   1cf14:	mov	r5, #0
   1cf18:	ldr	r3, [pc, #12]	; 1cf2c <lchmod@@Base+0x5d60>
   1cf1c:	strd	r4, [r0, #16]
   1cf20:	str	r3, [r0, #24]
   1cf24:	pop	{r4, r5}
   1cf28:	bx	lr
   1cf2c:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1cf30:	ldr	r3, [pc, #180]	; 1cfec <lchmod@@Base+0x5e20>
   1cf34:	ldr	r2, [r0, #24]
   1cf38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cf3c:	cmp	r2, r3
   1cf40:	bne	1cfd8 <lchmod@@Base+0x5e0c>
   1cf44:	ldrd	r6, [r0, #16]
   1cf48:	orrs	r3, r6, r7
   1cf4c:	bne	1cf78 <lchmod@@Base+0x5dac>
   1cf50:	mov	r2, #1
   1cf54:	mov	r3, #0
   1cf58:	ldrd	r8, [r1, #96]	; 0x60
   1cf5c:	strd	r2, [r0, #16]
   1cf60:	ldrd	r2, [r1]
   1cf64:	mov	r1, #0
   1cf68:	strd	r8, [r0]
   1cf6c:	strd	r2, [r0, #8]
   1cf70:	mov	r0, r1
   1cf74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cf78:	ldrd	r8, [r1, #96]	; 0x60
   1cf7c:	ldrd	r2, [r0]
   1cf80:	cmp	r9, r3
   1cf84:	cmpeq	r8, r2
   1cf88:	beq	1cfc0 <lchmod@@Base+0x5df4>
   1cf8c:	adds	r2, r6, #1
   1cf90:	adc	r3, r7, #0
   1cf94:	and	r6, r6, r2
   1cf98:	and	r7, r7, r3
   1cf9c:	orrs	ip, r6, r7
   1cfa0:	strd	r2, [r0, #16]
   1cfa4:	movne	r1, #0
   1cfa8:	bne	1cf70 <lchmod@@Base+0x5da4>
   1cfac:	orrs	r3, r2, r3
   1cfb0:	bne	1cf60 <lchmod@@Base+0x5d94>
   1cfb4:	mov	r1, #1
   1cfb8:	mov	r0, r1
   1cfbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cfc0:	ldrd	r4, [r1]
   1cfc4:	ldrd	r2, [r0, #8]
   1cfc8:	cmp	r5, r3
   1cfcc:	cmpeq	r4, r2
   1cfd0:	bne	1cf8c <lchmod@@Base+0x5dc0>
   1cfd4:	b	1cfb4 <lchmod@@Base+0x5de8>
   1cfd8:	ldr	r3, [pc, #16]	; 1cff0 <lchmod@@Base+0x5e24>
   1cfdc:	mov	r2, #60	; 0x3c
   1cfe0:	ldr	r1, [pc, #12]	; 1cff4 <lchmod@@Base+0x5e28>
   1cfe4:	ldr	r0, [pc, #12]	; 1cff8 <lchmod@@Base+0x5e2c>
   1cfe8:	bl	1182c <__assert_fail@plt>
   1cfec:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   1cff0:	andeq	lr, r1, r0, lsl #14
   1cff4:	andeq	lr, r1, ip, lsl #14
   1cff8:	andeq	lr, r1, r0, lsr #14
   1cffc:	push	{r4, r5, lr}
   1d000:	sub	sp, sp, #12
   1d004:	mov	r4, r0
   1d008:	bl	116c4 <fileno@plt>
   1d00c:	cmp	r0, #0
   1d010:	mov	r0, r4
   1d014:	blt	1d090 <lchmod@@Base+0x5ec4>
   1d018:	bl	115ec <__freading@plt>
   1d01c:	cmp	r0, #0
   1d020:	bne	1d05c <lchmod@@Base+0x5e90>
   1d024:	mov	r0, r4
   1d028:	bl	1d2a8 <lchmod@@Base+0x60dc>
   1d02c:	cmp	r0, #0
   1d030:	beq	1d08c <lchmod@@Base+0x5ec0>
   1d034:	bl	11688 <__errno_location@plt>
   1d038:	mov	r5, r0
   1d03c:	mov	r0, r4
   1d040:	ldr	r4, [r5]
   1d044:	bl	116dc <fclose@plt>
   1d048:	cmp	r4, #0
   1d04c:	mvnne	r0, #0
   1d050:	strne	r4, [r5]
   1d054:	add	sp, sp, #12
   1d058:	pop	{r4, r5, pc}
   1d05c:	mov	r0, r4
   1d060:	bl	116c4 <fileno@plt>
   1d064:	mov	r3, #1
   1d068:	str	r3, [sp]
   1d06c:	mov	r2, #0
   1d070:	mov	r3, #0
   1d074:	bl	11574 <lseek64@plt>
   1d078:	mvn	r3, #0
   1d07c:	mvn	r2, #0
   1d080:	cmp	r1, r3
   1d084:	cmpeq	r0, r2
   1d088:	bne	1d024 <lchmod@@Base+0x5e58>
   1d08c:	mov	r0, r4
   1d090:	add	sp, sp, #12
   1d094:	pop	{r4, r5, lr}
   1d098:	b	116dc <fclose@plt>
   1d09c:	push	{r1, r2, r3}
   1d0a0:	push	{r4, r5, r6, r7, lr}
   1d0a4:	sub	sp, sp, #8
   1d0a8:	add	r3, sp, #32
   1d0ac:	ldr	r1, [sp, #28]
   1d0b0:	str	r3, [sp, #4]
   1d0b4:	cmp	r1, #0
   1d0b8:	beq	1d150 <lchmod@@Base+0x5f84>
   1d0bc:	ldr	r2, [pc, #412]	; 1d260 <lchmod@@Base+0x6094>
   1d0c0:	mov	r5, r0
   1d0c4:	cmp	r1, r2
   1d0c8:	bne	1d114 <lchmod@@Base+0x5f48>
   1d0cc:	ldr	r6, [pc, #400]	; 1d264 <lchmod@@Base+0x6098>
   1d0d0:	ldr	r7, [r3]
   1d0d4:	add	r2, sp, #36	; 0x24
   1d0d8:	ldr	r3, [r6]
   1d0dc:	str	r2, [sp, #4]
   1d0e0:	cmp	r3, #0
   1d0e4:	mov	r2, r7
   1d0e8:	blt	1d214 <lchmod@@Base+0x6048>
   1d0ec:	bl	116f4 <fcntl64@plt>
   1d0f0:	subs	r4, r0, #0
   1d0f4:	blt	1d198 <lchmod@@Base+0x5fcc>
   1d0f8:	mov	r3, #1
   1d0fc:	str	r3, [r6]
   1d100:	mov	r0, r4
   1d104:	add	sp, sp, #8
   1d108:	pop	{r4, r5, r6, r7, lr}
   1d10c:	add	sp, sp, #12
   1d110:	bx	lr
   1d114:	cmp	r1, #11
   1d118:	beq	1d140 <lchmod@@Base+0x5f74>
   1d11c:	bgt	1d160 <lchmod@@Base+0x5f94>
   1d120:	cmp	r1, #3
   1d124:	beq	1d140 <lchmod@@Base+0x5f74>
   1d128:	ble	1d254 <lchmod@@Base+0x6088>
   1d12c:	cmp	r1, #8
   1d130:	beq	1d180 <lchmod@@Base+0x5fb4>
   1d134:	ble	1d180 <lchmod@@Base+0x5fb4>
   1d138:	cmp	r1, #9
   1d13c:	bne	1d180 <lchmod@@Base+0x5fb4>
   1d140:	mov	r0, r5
   1d144:	bl	116f4 <fcntl64@plt>
   1d148:	mov	r4, r0
   1d14c:	b	1d100 <lchmod@@Base+0x5f34>
   1d150:	ldr	r2, [sp, #32]
   1d154:	bl	116f4 <fcntl64@plt>
   1d158:	mov	r4, r0
   1d15c:	b	1d100 <lchmod@@Base+0x5f34>
   1d160:	ldr	r3, [pc, #256]	; 1d268 <lchmod@@Base+0x609c>
   1d164:	cmp	r1, r3
   1d168:	bgt	1d234 <lchmod@@Base+0x6068>
   1d16c:	cmp	r1, r2
   1d170:	bge	1d180 <lchmod@@Base+0x5fb4>
   1d174:	sub	r3, r3, #6
   1d178:	cmp	r1, r3
   1d17c:	beq	1d140 <lchmod@@Base+0x5f74>
   1d180:	ldr	r3, [sp, #4]
   1d184:	mov	r0, r5
   1d188:	ldr	r2, [r3]
   1d18c:	bl	116f4 <fcntl64@plt>
   1d190:	mov	r4, r0
   1d194:	b	1d100 <lchmod@@Base+0x5f34>
   1d198:	bl	11688 <__errno_location@plt>
   1d19c:	ldr	r3, [r0]
   1d1a0:	cmp	r3, #22
   1d1a4:	bne	1d0f8 <lchmod@@Base+0x5f2c>
   1d1a8:	mov	r2, r7
   1d1ac:	mov	r0, r5
   1d1b0:	mov	r1, #0
   1d1b4:	bl	116f4 <fcntl64@plt>
   1d1b8:	subs	r4, r0, #0
   1d1bc:	blt	1d100 <lchmod@@Base+0x5f34>
   1d1c0:	mvn	r3, #0
   1d1c4:	str	r3, [r6]
   1d1c8:	mov	r1, #1
   1d1cc:	mov	r0, r4
   1d1d0:	bl	116f4 <fcntl64@plt>
   1d1d4:	subs	r2, r0, #0
   1d1d8:	blt	1d1f4 <lchmod@@Base+0x6028>
   1d1dc:	orr	r2, r2, #1
   1d1e0:	mov	r1, #2
   1d1e4:	mov	r0, r4
   1d1e8:	bl	116f4 <fcntl64@plt>
   1d1ec:	cmn	r0, #1
   1d1f0:	bne	1d100 <lchmod@@Base+0x5f34>
   1d1f4:	bl	11688 <__errno_location@plt>
   1d1f8:	mov	r5, r0
   1d1fc:	mov	r0, r4
   1d200:	ldr	r6, [r5]
   1d204:	mvn	r4, #0
   1d208:	bl	117e4 <close@plt>
   1d20c:	str	r6, [r5]
   1d210:	b	1d100 <lchmod@@Base+0x5f34>
   1d214:	mov	r1, #0
   1d218:	bl	116f4 <fcntl64@plt>
   1d21c:	subs	r4, r0, #0
   1d220:	blt	1d100 <lchmod@@Base+0x5f34>
   1d224:	ldr	r3, [r6]
   1d228:	cmn	r3, #1
   1d22c:	beq	1d1c8 <lchmod@@Base+0x5ffc>
   1d230:	b	1d100 <lchmod@@Base+0x5f34>
   1d234:	ldr	r3, [pc, #48]	; 1d26c <lchmod@@Base+0x60a0>
   1d238:	cmp	r1, r3
   1d23c:	beq	1d180 <lchmod@@Base+0x5fb4>
   1d240:	blt	1d140 <lchmod@@Base+0x5f74>
   1d244:	add	r3, r3, #1
   1d248:	cmp	r1, r3
   1d24c:	bne	1d180 <lchmod@@Base+0x5fb4>
   1d250:	b	1d140 <lchmod@@Base+0x5f74>
   1d254:	cmp	r1, #1
   1d258:	bne	1d180 <lchmod@@Base+0x5fb4>
   1d25c:	b	1d140 <lchmod@@Base+0x5f74>
   1d260:	andeq	r0, r0, r6, lsl #8
   1d264:	andeq	pc, r2, r4, lsr #6
   1d268:	andeq	r0, r0, r7, lsl #8
   1d26c:	andeq	r0, r0, r9, lsl #8
   1d270:	push	{r1, r2, r3}
   1d274:	push	{lr}		; (str lr, [sp, #-4]!)
   1d278:	sub	sp, sp, #8
   1d27c:	ldr	r1, [sp, #12]
   1d280:	ands	r2, r1, #64	; 0x40
   1d284:	addne	r3, sp, #16
   1d288:	ldrne	r2, [sp, #16]
   1d28c:	strne	r3, [sp, #4]
   1d290:	bl	115bc <open64@plt>
   1d294:	bl	1bb94 <lchmod@@Base+0x49c8>
   1d298:	add	sp, sp, #8
   1d29c:	pop	{lr}		; (ldr lr, [sp], #4)
   1d2a0:	add	sp, sp, #12
   1d2a4:	bx	lr
   1d2a8:	push	{r4, lr}
   1d2ac:	subs	r4, r0, #0
   1d2b0:	sub	sp, sp, #8
   1d2b4:	beq	1d2d0 <lchmod@@Base+0x6104>
   1d2b8:	bl	115ec <__freading@plt>
   1d2bc:	cmp	r0, #0
   1d2c0:	beq	1d2d0 <lchmod@@Base+0x6104>
   1d2c4:	ldr	r3, [r4]
   1d2c8:	tst	r3, #256	; 0x100
   1d2cc:	bne	1d2e0 <lchmod@@Base+0x6114>
   1d2d0:	mov	r0, r4
   1d2d4:	add	sp, sp, #8
   1d2d8:	pop	{r4, lr}
   1d2dc:	b	1146c <fflush@plt>
   1d2e0:	mov	r3, #1
   1d2e4:	str	r3, [sp]
   1d2e8:	mov	r2, #0
   1d2ec:	mov	r3, #0
   1d2f0:	mov	r0, r4
   1d2f4:	bl	1d308 <lchmod@@Base+0x613c>
   1d2f8:	mov	r0, r4
   1d2fc:	add	sp, sp, #8
   1d300:	pop	{r4, lr}
   1d304:	b	1146c <fflush@plt>
   1d308:	push	{r4, r5, r6, r7, r8, lr}
   1d30c:	sub	sp, sp, #8
   1d310:	ldmib	r0, {ip, lr}
   1d314:	mov	r4, r0
   1d318:	ldr	r5, [sp, #32]
   1d31c:	cmp	lr, ip
   1d320:	beq	1d338 <lchmod@@Base+0x616c>
   1d324:	str	r5, [sp, #32]
   1d328:	mov	r0, r4
   1d32c:	add	sp, sp, #8
   1d330:	pop	{r4, r5, r6, r7, r8, lr}
   1d334:	b	116e8 <fseeko64@plt>
   1d338:	ldr	lr, [r0, #20]
   1d33c:	ldr	ip, [r0, #16]
   1d340:	cmp	lr, ip
   1d344:	bne	1d324 <lchmod@@Base+0x6158>
   1d348:	ldr	r8, [r0, #36]	; 0x24
   1d34c:	cmp	r8, #0
   1d350:	bne	1d324 <lchmod@@Base+0x6158>
   1d354:	mov	r6, r2
   1d358:	mov	r7, r3
   1d35c:	bl	116c4 <fileno@plt>
   1d360:	mov	r2, r6
   1d364:	mov	r3, r7
   1d368:	str	r5, [sp]
   1d36c:	bl	11574 <lseek64@plt>
   1d370:	mvn	r3, #0
   1d374:	mvn	r2, #0
   1d378:	cmp	r1, r3
   1d37c:	cmpeq	r0, r2
   1d380:	beq	1d3a0 <lchmod@@Base+0x61d4>
   1d384:	ldr	r3, [r4]
   1d388:	strd	r0, [r4, #80]	; 0x50
   1d38c:	mov	r0, r8
   1d390:	bic	r3, r3, #16
   1d394:	str	r3, [r4]
   1d398:	add	sp, sp, #8
   1d39c:	pop	{r4, r5, r6, r7, r8, pc}
   1d3a0:	mvn	r0, #0
   1d3a4:	b	1d398 <lchmod@@Base+0x61cc>
   1d3a8:	ldrb	r3, [r0]
   1d3ac:	cmp	r3, #0
   1d3b0:	beq	1d3dc <lchmod@@Base+0x6210>
   1d3b4:	mov	r2, r0
   1d3b8:	mov	r0, #0
   1d3bc:	push	{r4, lr}
   1d3c0:	add	r0, r3, r0, ror #23
   1d3c4:	ldrb	r3, [r2, #1]!
   1d3c8:	cmp	r3, #0
   1d3cc:	bne	1d3c0 <lchmod@@Base+0x61f4>
   1d3d0:	bl	1d7a4 <lchmod@@Base+0x65d8>
   1d3d4:	mov	r0, r1
   1d3d8:	pop	{r4, pc}
   1d3dc:	mov	r0, r3
   1d3e0:	bx	lr
   1d3e4:	push	{r4, lr}
   1d3e8:	mov	r0, #14
   1d3ec:	bl	11724 <nl_langinfo@plt>
   1d3f0:	cmp	r0, #0
   1d3f4:	beq	1d40c <lchmod@@Base+0x6240>
   1d3f8:	ldrb	r2, [r0]
   1d3fc:	ldr	r3, [pc, #16]	; 1d414 <lchmod@@Base+0x6248>
   1d400:	cmp	r2, #0
   1d404:	moveq	r0, r3
   1d408:	pop	{r4, pc}
   1d40c:	ldr	r0, [pc]	; 1d414 <lchmod@@Base+0x6248>
   1d410:	pop	{r4, pc}
   1d414:	andeq	lr, r1, r8, lsr r7
   1d418:	push	{r4, r5, r6, r7, lr}
   1d41c:	subs	r6, r0, #0
   1d420:	sub	sp, sp, #12
   1d424:	addeq	r6, sp, #4
   1d428:	mov	r0, r6
   1d42c:	mov	r5, r2
   1d430:	mov	r7, r1
   1d434:	bl	115a4 <mbrtowc@plt>
   1d438:	cmp	r5, #0
   1d43c:	cmnne	r0, #3
   1d440:	mov	r4, r0
   1d444:	bls	1d460 <lchmod@@Base+0x6294>
   1d448:	mov	r0, #0
   1d44c:	bl	1d4c4 <lchmod@@Base+0x62f8>
   1d450:	cmp	r0, #0
   1d454:	moveq	r4, #1
   1d458:	ldrbeq	r3, [r7]
   1d45c:	streq	r3, [r6]
   1d460:	mov	r0, r4
   1d464:	add	sp, sp, #12
   1d468:	pop	{r4, r5, r6, r7, pc}
   1d46c:	push	{r4, r5, r6, lr}
   1d470:	subs	r4, r2, #0
   1d474:	mov	r6, r0
   1d478:	mov	r5, r1
   1d47c:	beq	1d4a8 <lchmod@@Base+0x62dc>
   1d480:	mov	r1, r4
   1d484:	mvn	r0, #0
   1d488:	bl	1d5b8 <lchmod@@Base+0x63ec>
   1d48c:	cmp	r0, r5
   1d490:	bcs	1d4a8 <lchmod@@Base+0x62dc>
   1d494:	bl	11688 <__errno_location@plt>
   1d498:	mov	r3, #12
   1d49c:	str	r3, [r0]
   1d4a0:	mov	r0, #0
   1d4a4:	pop	{r4, r5, r6, pc}
   1d4a8:	mul	r1, r5, r4
   1d4ac:	mov	r0, r6
   1d4b0:	pop	{r4, r5, r6, lr}
   1d4b4:	b	1cd88 <lchmod@@Base+0x5bbc>
   1d4b8:	mov	r2, #3
   1d4bc:	mov	r1, #0
   1d4c0:	b	1d09c <lchmod@@Base+0x5ed0>
   1d4c4:	push	{lr}		; (str lr, [sp, #-4]!)
   1d4c8:	sub	sp, sp, #268	; 0x10c
   1d4cc:	add	r1, sp, #4
   1d4d0:	ldr	r2, [pc, #60]	; 1d514 <lchmod@@Base+0x6348>
   1d4d4:	bl	1d520 <lchmod@@Base+0x6354>
   1d4d8:	cmp	r0, #0
   1d4dc:	movne	r0, #0
   1d4e0:	bne	1d50c <lchmod@@Base+0x6340>
   1d4e4:	ldr	r1, [pc, #44]	; 1d518 <lchmod@@Base+0x634c>
   1d4e8:	add	r0, sp, #4
   1d4ec:	bl	11454 <strcmp@plt>
   1d4f0:	cmp	r0, #0
   1d4f4:	beq	1d50c <lchmod@@Base+0x6340>
   1d4f8:	add	r0, sp, #4
   1d4fc:	ldr	r1, [pc, #24]	; 1d51c <lchmod@@Base+0x6350>
   1d500:	bl	11454 <strcmp@plt>
   1d504:	adds	r0, r0, #0
   1d508:	movne	r0, #1
   1d50c:	add	sp, sp, #268	; 0x10c
   1d510:	pop	{pc}		; (ldr pc, [sp], #4)
   1d514:	andeq	r0, r0, r1, lsl #2
   1d518:	andeq	lr, r1, r0, asr #14
   1d51c:	andeq	lr, r1, r4, asr #14
   1d520:	push	{r4, r5, r6, lr}
   1d524:	mov	r5, r1
   1d528:	mov	r1, #0
   1d52c:	mov	r4, r2
   1d530:	bl	11700 <setlocale@plt>
   1d534:	subs	r6, r0, #0
   1d538:	beq	1d594 <lchmod@@Base+0x63c8>
   1d53c:	bl	11658 <strlen@plt>
   1d540:	cmp	r4, r0
   1d544:	bhi	1d57c <lchmod@@Base+0x63b0>
   1d548:	cmp	r4, #0
   1d54c:	bne	1d558 <lchmod@@Base+0x638c>
   1d550:	mov	r0, #34	; 0x22
   1d554:	pop	{r4, r5, r6, pc}
   1d558:	sub	r4, r4, #1
   1d55c:	mov	r1, r6
   1d560:	mov	r2, r4
   1d564:	mov	r0, r5
   1d568:	bl	114b4 <memcpy@plt>
   1d56c:	mov	r3, #0
   1d570:	strb	r3, [r5, r4]
   1d574:	mov	r0, #34	; 0x22
   1d578:	pop	{r4, r5, r6, pc}
   1d57c:	add	r2, r0, #1
   1d580:	mov	r1, r6
   1d584:	mov	r0, r5
   1d588:	bl	114b4 <memcpy@plt>
   1d58c:	mov	r0, #0
   1d590:	pop	{r4, r5, r6, pc}
   1d594:	cmp	r4, #0
   1d598:	beq	1d5a8 <lchmod@@Base+0x63dc>
   1d59c:	strb	r6, [r5]
   1d5a0:	mov	r0, #22
   1d5a4:	pop	{r4, r5, r6, pc}
   1d5a8:	mov	r0, #22
   1d5ac:	pop	{r4, r5, r6, pc}
   1d5b0:	mov	r1, #0
   1d5b4:	b	11700 <setlocale@plt>
   1d5b8:	subs	r2, r1, #1
   1d5bc:	bxeq	lr
   1d5c0:	bcc	1d798 <lchmod@@Base+0x65cc>
   1d5c4:	cmp	r0, r1
   1d5c8:	bls	1d77c <lchmod@@Base+0x65b0>
   1d5cc:	tst	r1, r2
   1d5d0:	beq	1d788 <lchmod@@Base+0x65bc>
   1d5d4:	clz	r3, r0
   1d5d8:	clz	r2, r1
   1d5dc:	sub	r3, r2, r3
   1d5e0:	rsbs	r3, r3, #31
   1d5e4:	addne	r3, r3, r3, lsl #1
   1d5e8:	mov	r2, #0
   1d5ec:	addne	pc, pc, r3, lsl #2
   1d5f0:	nop			; (mov r0, r0)
   1d5f4:	cmp	r0, r1, lsl #31
   1d5f8:	adc	r2, r2, r2
   1d5fc:	subcs	r0, r0, r1, lsl #31
   1d600:	cmp	r0, r1, lsl #30
   1d604:	adc	r2, r2, r2
   1d608:	subcs	r0, r0, r1, lsl #30
   1d60c:	cmp	r0, r1, lsl #29
   1d610:	adc	r2, r2, r2
   1d614:	subcs	r0, r0, r1, lsl #29
   1d618:	cmp	r0, r1, lsl #28
   1d61c:	adc	r2, r2, r2
   1d620:	subcs	r0, r0, r1, lsl #28
   1d624:	cmp	r0, r1, lsl #27
   1d628:	adc	r2, r2, r2
   1d62c:	subcs	r0, r0, r1, lsl #27
   1d630:	cmp	r0, r1, lsl #26
   1d634:	adc	r2, r2, r2
   1d638:	subcs	r0, r0, r1, lsl #26
   1d63c:	cmp	r0, r1, lsl #25
   1d640:	adc	r2, r2, r2
   1d644:	subcs	r0, r0, r1, lsl #25
   1d648:	cmp	r0, r1, lsl #24
   1d64c:	adc	r2, r2, r2
   1d650:	subcs	r0, r0, r1, lsl #24
   1d654:	cmp	r0, r1, lsl #23
   1d658:	adc	r2, r2, r2
   1d65c:	subcs	r0, r0, r1, lsl #23
   1d660:	cmp	r0, r1, lsl #22
   1d664:	adc	r2, r2, r2
   1d668:	subcs	r0, r0, r1, lsl #22
   1d66c:	cmp	r0, r1, lsl #21
   1d670:	adc	r2, r2, r2
   1d674:	subcs	r0, r0, r1, lsl #21
   1d678:	cmp	r0, r1, lsl #20
   1d67c:	adc	r2, r2, r2
   1d680:	subcs	r0, r0, r1, lsl #20
   1d684:	cmp	r0, r1, lsl #19
   1d688:	adc	r2, r2, r2
   1d68c:	subcs	r0, r0, r1, lsl #19
   1d690:	cmp	r0, r1, lsl #18
   1d694:	adc	r2, r2, r2
   1d698:	subcs	r0, r0, r1, lsl #18
   1d69c:	cmp	r0, r1, lsl #17
   1d6a0:	adc	r2, r2, r2
   1d6a4:	subcs	r0, r0, r1, lsl #17
   1d6a8:	cmp	r0, r1, lsl #16
   1d6ac:	adc	r2, r2, r2
   1d6b0:	subcs	r0, r0, r1, lsl #16
   1d6b4:	cmp	r0, r1, lsl #15
   1d6b8:	adc	r2, r2, r2
   1d6bc:	subcs	r0, r0, r1, lsl #15
   1d6c0:	cmp	r0, r1, lsl #14
   1d6c4:	adc	r2, r2, r2
   1d6c8:	subcs	r0, r0, r1, lsl #14
   1d6cc:	cmp	r0, r1, lsl #13
   1d6d0:	adc	r2, r2, r2
   1d6d4:	subcs	r0, r0, r1, lsl #13
   1d6d8:	cmp	r0, r1, lsl #12
   1d6dc:	adc	r2, r2, r2
   1d6e0:	subcs	r0, r0, r1, lsl #12
   1d6e4:	cmp	r0, r1, lsl #11
   1d6e8:	adc	r2, r2, r2
   1d6ec:	subcs	r0, r0, r1, lsl #11
   1d6f0:	cmp	r0, r1, lsl #10
   1d6f4:	adc	r2, r2, r2
   1d6f8:	subcs	r0, r0, r1, lsl #10
   1d6fc:	cmp	r0, r1, lsl #9
   1d700:	adc	r2, r2, r2
   1d704:	subcs	r0, r0, r1, lsl #9
   1d708:	cmp	r0, r1, lsl #8
   1d70c:	adc	r2, r2, r2
   1d710:	subcs	r0, r0, r1, lsl #8
   1d714:	cmp	r0, r1, lsl #7
   1d718:	adc	r2, r2, r2
   1d71c:	subcs	r0, r0, r1, lsl #7
   1d720:	cmp	r0, r1, lsl #6
   1d724:	adc	r2, r2, r2
   1d728:	subcs	r0, r0, r1, lsl #6
   1d72c:	cmp	r0, r1, lsl #5
   1d730:	adc	r2, r2, r2
   1d734:	subcs	r0, r0, r1, lsl #5
   1d738:	cmp	r0, r1, lsl #4
   1d73c:	adc	r2, r2, r2
   1d740:	subcs	r0, r0, r1, lsl #4
   1d744:	cmp	r0, r1, lsl #3
   1d748:	adc	r2, r2, r2
   1d74c:	subcs	r0, r0, r1, lsl #3
   1d750:	cmp	r0, r1, lsl #2
   1d754:	adc	r2, r2, r2
   1d758:	subcs	r0, r0, r1, lsl #2
   1d75c:	cmp	r0, r1, lsl #1
   1d760:	adc	r2, r2, r2
   1d764:	subcs	r0, r0, r1, lsl #1
   1d768:	cmp	r0, r1
   1d76c:	adc	r2, r2, r2
   1d770:	subcs	r0, r0, r1
   1d774:	mov	r0, r2
   1d778:	bx	lr
   1d77c:	moveq	r0, #1
   1d780:	movne	r0, #0
   1d784:	bx	lr
   1d788:	clz	r2, r1
   1d78c:	rsb	r2, r2, #31
   1d790:	lsr	r0, r0, r2
   1d794:	bx	lr
   1d798:	cmp	r0, #0
   1d79c:	mvnne	r0, #0
   1d7a0:	b	1da40 <lchmod@@Base+0x6874>
   1d7a4:	cmp	r1, #0
   1d7a8:	beq	1d798 <lchmod@@Base+0x65cc>
   1d7ac:	push	{r0, r1, lr}
   1d7b0:	bl	1d5b8 <lchmod@@Base+0x63ec>
   1d7b4:	pop	{r1, r2, lr}
   1d7b8:	mul	r3, r2, r0
   1d7bc:	sub	r1, r1, r3
   1d7c0:	bx	lr
   1d7c4:	cmp	r1, #0
   1d7c8:	beq	1d9d4 <lchmod@@Base+0x6808>
   1d7cc:	eor	ip, r0, r1
   1d7d0:	rsbmi	r1, r1, #0
   1d7d4:	subs	r2, r1, #1
   1d7d8:	beq	1d9a0 <lchmod@@Base+0x67d4>
   1d7dc:	movs	r3, r0
   1d7e0:	rsbmi	r3, r0, #0
   1d7e4:	cmp	r3, r1
   1d7e8:	bls	1d9ac <lchmod@@Base+0x67e0>
   1d7ec:	tst	r1, r2
   1d7f0:	beq	1d9bc <lchmod@@Base+0x67f0>
   1d7f4:	clz	r2, r3
   1d7f8:	clz	r0, r1
   1d7fc:	sub	r2, r0, r2
   1d800:	rsbs	r2, r2, #31
   1d804:	addne	r2, r2, r2, lsl #1
   1d808:	mov	r0, #0
   1d80c:	addne	pc, pc, r2, lsl #2
   1d810:	nop			; (mov r0, r0)
   1d814:	cmp	r3, r1, lsl #31
   1d818:	adc	r0, r0, r0
   1d81c:	subcs	r3, r3, r1, lsl #31
   1d820:	cmp	r3, r1, lsl #30
   1d824:	adc	r0, r0, r0
   1d828:	subcs	r3, r3, r1, lsl #30
   1d82c:	cmp	r3, r1, lsl #29
   1d830:	adc	r0, r0, r0
   1d834:	subcs	r3, r3, r1, lsl #29
   1d838:	cmp	r3, r1, lsl #28
   1d83c:	adc	r0, r0, r0
   1d840:	subcs	r3, r3, r1, lsl #28
   1d844:	cmp	r3, r1, lsl #27
   1d848:	adc	r0, r0, r0
   1d84c:	subcs	r3, r3, r1, lsl #27
   1d850:	cmp	r3, r1, lsl #26
   1d854:	adc	r0, r0, r0
   1d858:	subcs	r3, r3, r1, lsl #26
   1d85c:	cmp	r3, r1, lsl #25
   1d860:	adc	r0, r0, r0
   1d864:	subcs	r3, r3, r1, lsl #25
   1d868:	cmp	r3, r1, lsl #24
   1d86c:	adc	r0, r0, r0
   1d870:	subcs	r3, r3, r1, lsl #24
   1d874:	cmp	r3, r1, lsl #23
   1d878:	adc	r0, r0, r0
   1d87c:	subcs	r3, r3, r1, lsl #23
   1d880:	cmp	r3, r1, lsl #22
   1d884:	adc	r0, r0, r0
   1d888:	subcs	r3, r3, r1, lsl #22
   1d88c:	cmp	r3, r1, lsl #21
   1d890:	adc	r0, r0, r0
   1d894:	subcs	r3, r3, r1, lsl #21
   1d898:	cmp	r3, r1, lsl #20
   1d89c:	adc	r0, r0, r0
   1d8a0:	subcs	r3, r3, r1, lsl #20
   1d8a4:	cmp	r3, r1, lsl #19
   1d8a8:	adc	r0, r0, r0
   1d8ac:	subcs	r3, r3, r1, lsl #19
   1d8b0:	cmp	r3, r1, lsl #18
   1d8b4:	adc	r0, r0, r0
   1d8b8:	subcs	r3, r3, r1, lsl #18
   1d8bc:	cmp	r3, r1, lsl #17
   1d8c0:	adc	r0, r0, r0
   1d8c4:	subcs	r3, r3, r1, lsl #17
   1d8c8:	cmp	r3, r1, lsl #16
   1d8cc:	adc	r0, r0, r0
   1d8d0:	subcs	r3, r3, r1, lsl #16
   1d8d4:	cmp	r3, r1, lsl #15
   1d8d8:	adc	r0, r0, r0
   1d8dc:	subcs	r3, r3, r1, lsl #15
   1d8e0:	cmp	r3, r1, lsl #14
   1d8e4:	adc	r0, r0, r0
   1d8e8:	subcs	r3, r3, r1, lsl #14
   1d8ec:	cmp	r3, r1, lsl #13
   1d8f0:	adc	r0, r0, r0
   1d8f4:	subcs	r3, r3, r1, lsl #13
   1d8f8:	cmp	r3, r1, lsl #12
   1d8fc:	adc	r0, r0, r0
   1d900:	subcs	r3, r3, r1, lsl #12
   1d904:	cmp	r3, r1, lsl #11
   1d908:	adc	r0, r0, r0
   1d90c:	subcs	r3, r3, r1, lsl #11
   1d910:	cmp	r3, r1, lsl #10
   1d914:	adc	r0, r0, r0
   1d918:	subcs	r3, r3, r1, lsl #10
   1d91c:	cmp	r3, r1, lsl #9
   1d920:	adc	r0, r0, r0
   1d924:	subcs	r3, r3, r1, lsl #9
   1d928:	cmp	r3, r1, lsl #8
   1d92c:	adc	r0, r0, r0
   1d930:	subcs	r3, r3, r1, lsl #8
   1d934:	cmp	r3, r1, lsl #7
   1d938:	adc	r0, r0, r0
   1d93c:	subcs	r3, r3, r1, lsl #7
   1d940:	cmp	r3, r1, lsl #6
   1d944:	adc	r0, r0, r0
   1d948:	subcs	r3, r3, r1, lsl #6
   1d94c:	cmp	r3, r1, lsl #5
   1d950:	adc	r0, r0, r0
   1d954:	subcs	r3, r3, r1, lsl #5
   1d958:	cmp	r3, r1, lsl #4
   1d95c:	adc	r0, r0, r0
   1d960:	subcs	r3, r3, r1, lsl #4
   1d964:	cmp	r3, r1, lsl #3
   1d968:	adc	r0, r0, r0
   1d96c:	subcs	r3, r3, r1, lsl #3
   1d970:	cmp	r3, r1, lsl #2
   1d974:	adc	r0, r0, r0
   1d978:	subcs	r3, r3, r1, lsl #2
   1d97c:	cmp	r3, r1, lsl #1
   1d980:	adc	r0, r0, r0
   1d984:	subcs	r3, r3, r1, lsl #1
   1d988:	cmp	r3, r1
   1d98c:	adc	r0, r0, r0
   1d990:	subcs	r3, r3, r1
   1d994:	cmp	ip, #0
   1d998:	rsbmi	r0, r0, #0
   1d99c:	bx	lr
   1d9a0:	teq	ip, r0
   1d9a4:	rsbmi	r0, r0, #0
   1d9a8:	bx	lr
   1d9ac:	movcc	r0, #0
   1d9b0:	asreq	r0, ip, #31
   1d9b4:	orreq	r0, r0, #1
   1d9b8:	bx	lr
   1d9bc:	clz	r2, r1
   1d9c0:	rsb	r2, r2, #31
   1d9c4:	cmp	ip, #0
   1d9c8:	lsr	r0, r3, r2
   1d9cc:	rsbmi	r0, r0, #0
   1d9d0:	bx	lr
   1d9d4:	cmp	r0, #0
   1d9d8:	mvngt	r0, #-2147483648	; 0x80000000
   1d9dc:	movlt	r0, #-2147483648	; 0x80000000
   1d9e0:	b	1da40 <lchmod@@Base+0x6874>
   1d9e4:	cmp	r1, #0
   1d9e8:	beq	1d9d4 <lchmod@@Base+0x6808>
   1d9ec:	push	{r0, r1, lr}
   1d9f0:	bl	1d7cc <lchmod@@Base+0x6600>
   1d9f4:	pop	{r1, r2, lr}
   1d9f8:	mul	r3, r2, r0
   1d9fc:	sub	r1, r1, r3
   1da00:	bx	lr
   1da04:	cmp	r3, #0
   1da08:	cmpeq	r2, #0
   1da0c:	bne	1da24 <lchmod@@Base+0x6858>
   1da10:	cmp	r1, #0
   1da14:	cmpeq	r0, #0
   1da18:	mvnne	r1, #0
   1da1c:	mvnne	r0, #0
   1da20:	b	1da40 <lchmod@@Base+0x6874>
   1da24:	sub	sp, sp, #8
   1da28:	push	{sp, lr}
   1da2c:	bl	1da50 <lchmod@@Base+0x6884>
   1da30:	ldr	lr, [sp, #4]
   1da34:	add	sp, sp, #8
   1da38:	pop	{r2, r3}
   1da3c:	bx	lr
   1da40:	push	{r1, lr}
   1da44:	mov	r0, #8
   1da48:	bl	1143c <raise@plt>
   1da4c:	pop	{r1, pc}
   1da50:	cmp	r1, r3
   1da54:	push	{r4, r5, r6, r7, r8, r9, lr}
   1da58:	cmpeq	r0, r2
   1da5c:	mov	r4, r0
   1da60:	mov	r5, r1
   1da64:	ldr	r9, [sp, #28]
   1da68:	movcc	r0, #0
   1da6c:	movcc	r1, #0
   1da70:	bcc	1db68 <lchmod@@Base+0x699c>
   1da74:	cmp	r3, #0
   1da78:	clzeq	ip, r2
   1da7c:	clzne	ip, r3
   1da80:	addeq	ip, ip, #32
   1da84:	cmp	r5, #0
   1da88:	clzeq	r1, r4
   1da8c:	addeq	r1, r1, #32
   1da90:	clzne	r1, r5
   1da94:	sub	ip, ip, r1
   1da98:	sub	lr, ip, #32
   1da9c:	lsl	r7, r3, ip
   1daa0:	rsb	r8, ip, #32
   1daa4:	orr	r7, r7, r2, lsl lr
   1daa8:	orr	r7, r7, r2, lsr r8
   1daac:	lsl	r6, r2, ip
   1dab0:	cmp	r5, r7
   1dab4:	cmpeq	r4, r6
   1dab8:	movcc	r0, #0
   1dabc:	movcc	r1, #0
   1dac0:	bcc	1dadc <lchmod@@Base+0x6910>
   1dac4:	mov	r3, #1
   1dac8:	subs	r4, r4, r6
   1dacc:	lsl	r1, r3, lr
   1dad0:	lsl	r0, r3, ip
   1dad4:	orr	r1, r1, r3, lsr r8
   1dad8:	sbc	r5, r5, r7
   1dadc:	cmp	ip, #0
   1dae0:	beq	1db68 <lchmod@@Base+0x699c>
   1dae4:	lsrs	r3, r7, #1
   1dae8:	rrx	r2, r6
   1daec:	mov	r6, ip
   1daf0:	b	1db14 <lchmod@@Base+0x6948>
   1daf4:	subs	r4, r4, r2
   1daf8:	sbc	r5, r5, r3
   1dafc:	adds	r4, r4, r4
   1db00:	adc	r5, r5, r5
   1db04:	adds	r4, r4, #1
   1db08:	adc	r5, r5, #0
   1db0c:	subs	r6, r6, #1
   1db10:	beq	1db30 <lchmod@@Base+0x6964>
   1db14:	cmp	r5, r3
   1db18:	cmpeq	r4, r2
   1db1c:	bcs	1daf4 <lchmod@@Base+0x6928>
   1db20:	adds	r4, r4, r4
   1db24:	adc	r5, r5, r5
   1db28:	subs	r6, r6, #1
   1db2c:	bne	1db14 <lchmod@@Base+0x6948>
   1db30:	lsr	r6, r4, ip
   1db34:	lsr	r7, r5, ip
   1db38:	orr	r6, r6, r5, lsl r8
   1db3c:	adds	r2, r0, r4
   1db40:	orr	r6, r6, r5, lsr lr
   1db44:	adc	r3, r1, r5
   1db48:	lsl	r1, r7, ip
   1db4c:	orr	r1, r1, r6, lsl lr
   1db50:	lsl	r0, r6, ip
   1db54:	orr	r1, r1, r6, lsr r8
   1db58:	subs	r0, r2, r0
   1db5c:	mov	r4, r6
   1db60:	mov	r5, r7
   1db64:	sbc	r1, r3, r1
   1db68:	cmp	r9, #0
   1db6c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1db70:	strd	r4, [r9]
   1db74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1db78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1db7c:	mov	r7, r0
   1db80:	ldr	r6, [pc, #72]	; 1dbd0 <lchmod@@Base+0x6a04>
   1db84:	ldr	r5, [pc, #72]	; 1dbd4 <lchmod@@Base+0x6a08>
   1db88:	add	r6, pc, r6
   1db8c:	add	r5, pc, r5
   1db90:	sub	r6, r6, r5
   1db94:	mov	r8, r1
   1db98:	mov	r9, r2
   1db9c:	bl	113ec <fstatfs64@plt-0x20>
   1dba0:	asrs	r6, r6, #2
   1dba4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dba8:	mov	r4, #0
   1dbac:	add	r4, r4, #1
   1dbb0:	ldr	r3, [r5], #4
   1dbb4:	mov	r2, r9
   1dbb8:	mov	r1, r8
   1dbbc:	mov	r0, r7
   1dbc0:	blx	r3
   1dbc4:	cmp	r6, r4
   1dbc8:	bne	1dbac <lchmod@@Base+0x69e0>
   1dbcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dbd0:	andeq	r1, r1, r8, ror r3
   1dbd4:	andeq	r1, r1, r0, ror r3
   1dbd8:	bx	lr
   1dbdc:	ldr	r3, [pc, #12]	; 1dbf0 <lchmod@@Base+0x6a24>
   1dbe0:	mov	r1, #0
   1dbe4:	add	r3, pc, r3
   1dbe8:	ldr	r2, [r3]
   1dbec:	b	116a0 <__cxa_atexit@plt>
   1dbf0:	andeq	r1, r1, ip, lsl #11

Disassembly of section .fini:

0001dbf4 <.fini>:
   1dbf4:	push	{r3, lr}
   1dbf8:	pop	{r3, pc}
