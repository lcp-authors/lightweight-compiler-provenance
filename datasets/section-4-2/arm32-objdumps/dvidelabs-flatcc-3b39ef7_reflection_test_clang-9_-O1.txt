
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

0001084c <.init>:
   1084c:	push	{r3, lr}
   10850:	bl	10974 <_start@@Base+0x3c>
   10854:	pop	{r3, pc}

Disassembly of section .plt:

00010858 <strcmp@plt-0x14>:
   10858:	push	{lr}		; (str lr, [sp, #-4]!)
   1085c:	ldr	lr, [pc, #4]	; 10868 <strcmp@plt-0x4>
   10860:	add	lr, pc, lr
   10864:	ldr	pc, [lr, #8]!
   10868:	muleq	r1, r8, r7

0001086c <strcmp@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #1944]!	; 0x798

00010878 <printf@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #1936]!	; 0x790

00010884 <fopen@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1928]!	; 0x788

00010890 <free@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1920]!	; 0x780

0001089c <ftell@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1912]!	; 0x778

000108a8 <rewind@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1904]!	; 0x770

000108b4 <fwrite@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1896]!	; 0x768

000108c0 <puts@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1888]!	; 0x760

000108cc <malloc@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1880]!	; 0x758

000108d8 <__libc_start_main@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1872]!	; 0x750

000108e4 <__gmon_start__@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1864]!	; 0x748

000108f0 <exit@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1856]!	; 0x740

000108fc <fclose@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1848]!	; 0x738

00010908 <fread_unlocked@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1840]!	; 0x730

00010914 <fseek@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1832]!	; 0x728

00010920 <abort@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1824]!	; 0x720

0001092c <__assert_fail@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

00010938 <_start@@Base>:
   10938:	mov	fp, #0
   1093c:	mov	lr, #0
   10940:	pop	{r1}		; (ldr r1, [sp], #4)
   10944:	mov	r2, sp
   10948:	push	{r2}		; (str r2, [sp, #-4]!)
   1094c:	push	{r0}		; (str r0, [sp, #-4]!)
   10950:	ldr	ip, [pc, #16]	; 10968 <_start@@Base+0x30>
   10954:	push	{ip}		; (str ip, [sp, #-4]!)
   10958:	ldr	r0, [pc, #12]	; 1096c <_start@@Base+0x34>
   1095c:	ldr	r3, [pc, #12]	; 10970 <_start@@Base+0x38>
   10960:	bl	108d8 <__libc_start_main@plt>
   10964:	bl	10920 <abort@plt>
   10968:	muleq	r1, ip, r5
   1096c:	andeq	r1, r1, r0, lsl #6
   10970:	andeq	r1, r1, ip, lsr r5
   10974:	ldr	r3, [pc, #20]	; 10990 <_start@@Base+0x58>
   10978:	ldr	r2, [pc, #20]	; 10994 <_start@@Base+0x5c>
   1097c:	add	r3, pc, r3
   10980:	ldr	r2, [r3, r2]
   10984:	cmp	r2, #0
   10988:	bxeq	lr
   1098c:	b	108e4 <__gmon_start__@plt>
   10990:	andeq	r1, r1, ip, ror r6
   10994:	andeq	r0, r0, r0, asr r0
   10998:	ldr	r0, [pc, #24]	; 109b8 <_start@@Base+0x80>
   1099c:	ldr	r3, [pc, #24]	; 109bc <_start@@Base+0x84>
   109a0:	cmp	r3, r0
   109a4:	bxeq	lr
   109a8:	ldr	r3, [pc, #16]	; 109c0 <_start@@Base+0x88>
   109ac:	cmp	r3, #0
   109b0:	bxeq	lr
   109b4:	bx	r3
   109b8:	andeq	r2, r2, r0, rrx
   109bc:	andeq	r2, r2, r0, rrx
   109c0:	andeq	r0, r0, r0
   109c4:	ldr	r0, [pc, #36]	; 109f0 <_start@@Base+0xb8>
   109c8:	ldr	r1, [pc, #36]	; 109f4 <_start@@Base+0xbc>
   109cc:	sub	r1, r1, r0
   109d0:	asr	r1, r1, #2
   109d4:	add	r1, r1, r1, lsr #31
   109d8:	asrs	r1, r1, #1
   109dc:	bxeq	lr
   109e0:	ldr	r3, [pc, #16]	; 109f8 <_start@@Base+0xc0>
   109e4:	cmp	r3, #0
   109e8:	bxeq	lr
   109ec:	bx	r3
   109f0:	andeq	r2, r2, r0, rrx
   109f4:	andeq	r2, r2, r0, rrx
   109f8:	andeq	r0, r0, r0
   109fc:	push	{r4, lr}
   10a00:	ldr	r4, [pc, #24]	; 10a20 <_start@@Base+0xe8>
   10a04:	ldrb	r3, [r4]
   10a08:	cmp	r3, #0
   10a0c:	popne	{r4, pc}
   10a10:	bl	10998 <_start@@Base+0x60>
   10a14:	mov	r3, #1
   10a18:	strb	r3, [r4]
   10a1c:	pop	{r4, pc}
   10a20:	andeq	r2, r2, r4, rrx
   10a24:	b	109c4 <_start@@Base+0x8c>

00010a28 <test_schema@@Base>:
   10a28:	push	{r4, r5, r6, r7, fp, lr}
   10a2c:	add	fp, sp, #16
   10a30:	sub	sp, sp, #8
   10a34:	add	r1, sp, #4
   10a38:	bl	10cd0 <test_schema@@Base+0x2a8>
   10a3c:	cmp	r0, #0
   10a40:	beq	10ae8 <test_schema@@Base+0xc0>
   10a44:	mov	r4, r0
   10a48:	bl	10dcc <test_schema@@Base+0x3a4>
   10a4c:	bl	10e04 <test_schema@@Base+0x3dc>
   10a50:	mov	r6, r0
   10a54:	bl	10e84 <test_schema@@Base+0x45c>
   10a58:	cmp	r0, #0
   10a5c:	beq	10aa0 <test_schema@@Base+0x78>
   10a60:	mov	r5, #0
   10a64:	movw	r7, #5548	; 0x15ac
   10a68:	movt	r7, #1
   10a6c:	mov	r0, r6
   10a70:	mov	r1, r5
   10a74:	bl	10f18 <test_schema@@Base+0x4f0>
   10a78:	bl	10e98 <test_schema@@Base+0x470>
   10a7c:	mov	r2, r0
   10a80:	mov	r0, r7
   10a84:	mov	r1, r5
   10a88:	bl	10878 <printf@plt>
   10a8c:	add	r5, r5, #1
   10a90:	mov	r0, r6
   10a94:	bl	10e84 <test_schema@@Base+0x45c>
   10a98:	cmp	r5, r0
   10a9c:	bcc	10a6c <test_schema@@Base+0x44>
   10aa0:	mov	r0, r6
   10aa4:	bl	10f68 <test_schema@@Base+0x540>
   10aa8:	cmn	r0, #1
   10aac:	beq	10afc <test_schema@@Base+0xd4>
   10ab0:	mov	r5, r0
   10ab4:	mov	r0, r6
   10ab8:	mov	r1, r5
   10abc:	bl	10f18 <test_schema@@Base+0x4f0>
   10ac0:	mov	r6, r0
   10ac4:	bl	10e98 <test_schema@@Base+0x470>
   10ac8:	movw	r1, #5567	; 0x15bf
   10acc:	movt	r1, #1
   10ad0:	bl	1086c <strcmp@plt>
   10ad4:	cmp	r0, #0
   10ad8:	beq	10b28 <test_schema@@Base+0x100>
   10adc:	movw	r0, #7112	; 0x1bc8
   10ae0:	movt	r0, #1
   10ae4:	b	10b04 <test_schema@@Base+0xdc>
   10ae8:	movw	r0, #6762	; 0x1a6a
   10aec:	movt	r0, #1
   10af0:	bl	108c0 <puts@plt>
   10af4:	mvn	r6, #0
   10af8:	b	10b1c <test_schema@@Base+0xf4>
   10afc:	movw	r0, #7141	; 0x1be5
   10b00:	movt	r0, #1
   10b04:	bl	108c0 <puts@plt>
   10b08:	mvn	r6, #0
   10b0c:	cmp	r4, #0
   10b10:	beq	10b1c <test_schema@@Base+0xf4>
   10b14:	mov	r0, r4
   10b18:	bl	10890 <free@plt>
   10b1c:	mov	r0, r6
   10b20:	sub	sp, fp, #16
   10b24:	pop	{r4, r5, r6, r7, fp, pc}
   10b28:	mov	r0, r6
   10b2c:	bl	10f6c <test_schema@@Base+0x544>
   10b30:	mov	r6, r0
   10b34:	movw	r1, #5590	; 0x15d6
   10b38:	movt	r1, #1
   10b3c:	bl	10fec <test_schema@@Base+0x5c4>
   10b40:	cmn	r0, #1
   10b44:	beq	10c2c <test_schema@@Base+0x204>
   10b48:	mov	r1, r0
   10b4c:	mov	r0, r6
   10b50:	bl	10ff0 <test_schema@@Base+0x5c8>
   10b54:	mov	r7, r0
   10b58:	bl	11040 <test_schema@@Base+0x618>
   10b5c:	eor	r0, r0, #150	; 0x96
   10b60:	orrs	r0, r0, r1
   10b64:	bne	10c38 <test_schema@@Base+0x210>
   10b68:	mov	r0, r7
   10b6c:	bl	11134 <test_schema@@Base+0x70c>
   10b70:	bl	111b0 <test_schema@@Base+0x788>
   10b74:	cmp	r0, #5
   10b78:	bne	10c7c <test_schema@@Base+0x254>
   10b7c:	movw	r1, #5617	; 0x15f1
   10b80:	movt	r1, #1
   10b84:	mov	r0, r6
   10b88:	bl	10fec <test_schema@@Base+0x5c4>
   10b8c:	cmn	r0, #1
   10b90:	beq	10c88 <test_schema@@Base+0x260>
   10b94:	mov	r1, r0
   10b98:	mov	r0, r6
   10b9c:	bl	10ff0 <test_schema@@Base+0x5c8>
   10ba0:	bl	11134 <test_schema@@Base+0x70c>
   10ba4:	mov	r7, r0
   10ba8:	bl	111b0 <test_schema@@Base+0x788>
   10bac:	cmp	r0, #15
   10bb0:	bne	10c94 <test_schema@@Base+0x26c>
   10bb4:	mov	r0, r7
   10bb8:	bl	11220 <test_schema@@Base+0x7f8>
   10bbc:	cmp	r0, r5
   10bc0:	bne	10ca0 <test_schema@@Base+0x278>
   10bc4:	movw	r1, #5623	; 0x15f7
   10bc8:	movt	r1, #1
   10bcc:	mov	r0, r6
   10bd0:	bl	10fec <test_schema@@Base+0x5c4>
   10bd4:	cmn	r0, #1
   10bd8:	beq	10cac <test_schema@@Base+0x284>
   10bdc:	mov	r1, r0
   10be0:	mov	r0, r6
   10be4:	bl	10ff0 <test_schema@@Base+0x5c8>
   10be8:	bl	11134 <test_schema@@Base+0x70c>
   10bec:	mov	r6, r0
   10bf0:	bl	111b0 <test_schema@@Base+0x788>
   10bf4:	cmp	r0, #14
   10bf8:	bne	10cb8 <test_schema@@Base+0x290>
   10bfc:	mov	r0, r6
   10c00:	bl	11290 <test_schema@@Base+0x868>
   10c04:	cmp	r0, #15
   10c08:	bne	10cc4 <test_schema@@Base+0x29c>
   10c0c:	mov	r0, r6
   10c10:	bl	11220 <test_schema@@Base+0x7f8>
   10c14:	mov	r6, #0
   10c18:	cmp	r0, r5
   10c1c:	beq	10b0c <test_schema@@Base+0xe4>
   10c20:	movw	r0, #6791	; 0x1a87
   10c24:	movt	r0, #1
   10c28:	b	10b04 <test_schema@@Base+0xdc>
   10c2c:	movw	r0, #7070	; 0x1b9e
   10c30:	movt	r0, #1
   10c34:	b	10b04 <test_schema@@Base+0xdc>
   10c38:	movw	r0, #7035	; 0x1b7b
   10c3c:	movt	r0, #1
   10c40:	bl	108c0 <puts@plt>
   10c44:	mov	r0, r7
   10c48:	bl	110b4 <test_schema@@Base+0x68c>
   10c4c:	mov	r1, r0
   10c50:	movw	r0, #5595	; 0x15db
   10c54:	movt	r0, #1
   10c58:	bl	10878 <printf@plt>
   10c5c:	mov	r0, r7
   10c60:	bl	11040 <test_schema@@Base+0x618>
   10c64:	mov	r2, r0
   10c68:	movw	r0, #5611	; 0x15eb
   10c6c:	movt	r0, #1
   10c70:	mov	r3, r1
   10c74:	bl	10878 <printf@plt>
   10c78:	b	10b08 <test_schema@@Base+0xe0>
   10c7c:	movw	r0, #7009	; 0x1b61
   10c80:	movt	r0, #1
   10c84:	b	10b04 <test_schema@@Base+0xdc>
   10c88:	movw	r0, #6987	; 0x1b4b
   10c8c:	movt	r0, #1
   10c90:	b	10b04 <test_schema@@Base+0xdc>
   10c94:	movw	r0, #6964	; 0x1b34
   10c98:	movt	r0, #1
   10c9c:	b	10b04 <test_schema@@Base+0xdc>
   10ca0:	movw	r0, #6941	; 0x1b1d
   10ca4:	movt	r0, #1
   10ca8:	b	10b04 <test_schema@@Base+0xdc>
   10cac:	movw	r0, #6915	; 0x1b03
   10cb0:	movt	r0, #1
   10cb4:	b	10b04 <test_schema@@Base+0xdc>
   10cb8:	movw	r0, #6877	; 0x1add
   10cbc:	movt	r0, #1
   10cc0:	b	10b04 <test_schema@@Base+0xdc>
   10cc4:	movw	r0, #6831	; 0x1aaf
   10cc8:	movt	r0, #1
   10ccc:	b	10b04 <test_schema@@Base+0xdc>
   10cd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10cd4:	add	fp, sp, #24
   10cd8:	sub	sp, sp, #8
   10cdc:	add	r9, sp, #4
   10ce0:	cmp	r1, #0
   10ce4:	movne	r9, r1
   10ce8:	movw	r1, #5734	; 0x1666
   10cec:	movt	r1, #1
   10cf0:	bl	10884 <fopen@plt>
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d90 <test_schema@@Base+0x368>
   10cfc:	mov	r6, r0
   10d00:	mov	r8, #0
   10d04:	mov	r1, #0
   10d08:	mov	r2, #2
   10d0c:	bl	10914 <fseek@plt>
   10d10:	mov	r0, r6
   10d14:	bl	1089c <ftell@plt>
   10d18:	mov	r5, r0
   10d1c:	str	r0, [r9]
   10d20:	movw	r0, #10000	; 0x2710
   10d24:	cmp	r5, r0
   10d28:	bhi	10da0 <test_schema@@Base+0x378>
   10d2c:	mov	r0, r6
   10d30:	bl	108a8 <rewind@plt>
   10d34:	cmp	r5, #0
   10d38:	mov	r0, r5
   10d3c:	movweq	r0, #1
   10d40:	bl	108cc <malloc@plt>
   10d44:	cmp	r0, #0
   10d48:	beq	10da0 <test_schema@@Base+0x378>
   10d4c:	mov	r7, r0
   10d50:	mov	r8, r0
   10d54:	mov	r1, #0
   10d58:	mov	r4, r1
   10d5c:	add	r0, r7, r1
   10d60:	sub	r2, r5, r1
   10d64:	mov	r1, #1
   10d68:	mov	r3, r6
   10d6c:	bl	10908 <fread_unlocked@plt>
   10d70:	add	r1, r0, r4
   10d74:	cmp	r0, #0
   10d78:	bne	10d58 <test_schema@@Base+0x330>
   10d7c:	cmp	r5, r4
   10d80:	bne	10d98 <test_schema@@Base+0x370>
   10d84:	mov	r0, r6
   10d88:	bl	108fc <fclose@plt>
   10d8c:	b	10dbc <test_schema@@Base+0x394>
   10d90:	mov	r5, #0
   10d94:	b	10db8 <test_schema@@Base+0x390>
   10d98:	cmp	r6, #0
   10d9c:	beq	10da8 <test_schema@@Base+0x380>
   10da0:	mov	r0, r6
   10da4:	bl	108fc <fclose@plt>
   10da8:	cmp	r8, #0
   10dac:	beq	10db8 <test_schema@@Base+0x390>
   10db0:	mov	r0, r8
   10db4:	bl	10890 <free@plt>
   10db8:	mov	r8, #0
   10dbc:	str	r5, [r9]
   10dc0:	mov	r0, r8
   10dc4:	sub	sp, fp, #24
   10dc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10dcc:	push	{r4, r5, fp, lr}
   10dd0:	add	fp, sp, #8
   10dd4:	mov	r5, #0
   10dd8:	cmp	r0, #0
   10ddc:	beq	10dfc <test_schema@@Base+0x3d4>
   10de0:	mov	r4, r0
   10de4:	bl	1135c <main@@Base+0x5c>
   10de8:	cmp	r0, #0
   10dec:	beq	10dfc <test_schema@@Base+0x3d4>
   10df0:	mov	r0, r4
   10df4:	bl	11384 <main@@Base+0x84>
   10df8:	add	r5, r4, r0
   10dfc:	mov	r0, r5
   10e00:	pop	{r4, r5, fp, pc}
   10e04:	push	{r4, r5, fp, lr}
   10e08:	add	fp, sp, #8
   10e0c:	cmp	r0, #0
   10e10:	beq	10e64 <test_schema@@Base+0x43c>
   10e14:	mov	r4, r0
   10e18:	bl	1139c <main@@Base+0x9c>
   10e1c:	sub	r5, r4, r0
   10e20:	mov	r0, r5
   10e24:	bl	113a4 <main@@Base+0xa4>
   10e28:	cmp	r0, #6
   10e2c:	bcc	10e58 <test_schema@@Base+0x430>
   10e30:	add	r0, r5, #4
   10e34:	bl	113a4 <main@@Base+0xa4>
   10e38:	cmp	r0, #0
   10e3c:	beq	10e58 <test_schema@@Base+0x430>
   10e40:	add	r4, r4, r0
   10e44:	mov	r0, r4
   10e48:	bl	11384 <main@@Base+0x84>
   10e4c:	add	r0, r4, r0
   10e50:	add	r0, r0, #4
   10e54:	pop	{r4, r5, fp, pc}
   10e58:	movw	r0, #5946	; 0x173a
   10e5c:	movt	r0, #1
   10e60:	b	10e6c <test_schema@@Base+0x444>
   10e64:	movw	r0, #5737	; 0x1669
   10e68:	movt	r0, #1
   10e6c:	movw	r1, #5775	; 0x168f
   10e70:	movt	r1, #1
   10e74:	movw	r3, #5869	; 0x16ed
   10e78:	movt	r3, #1
   10e7c:	mov	r2, #237	; 0xed
   10e80:	bl	1092c <__assert_fail@plt>
   10e84:	cmp	r0, #0
   10e88:	moveq	r0, #0
   10e8c:	bxeq	lr
   10e90:	sub	r0, r0, #4
   10e94:	b	11384 <main@@Base+0x84>
   10e98:	push	{r4, r5, fp, lr}
   10e9c:	add	fp, sp, #8
   10ea0:	cmp	r0, #0
   10ea4:	beq	10ef8 <test_schema@@Base+0x4d0>
   10ea8:	mov	r4, r0
   10eac:	bl	1139c <main@@Base+0x9c>
   10eb0:	sub	r5, r4, r0
   10eb4:	mov	r0, r5
   10eb8:	bl	113a4 <main@@Base+0xa4>
   10ebc:	cmp	r0, #6
   10ec0:	bcc	10eec <test_schema@@Base+0x4c4>
   10ec4:	add	r0, r5, #4
   10ec8:	bl	113a4 <main@@Base+0xa4>
   10ecc:	cmp	r0, #0
   10ed0:	beq	10eec <test_schema@@Base+0x4c4>
   10ed4:	add	r4, r4, r0
   10ed8:	mov	r0, r4
   10edc:	bl	11384 <main@@Base+0x84>
   10ee0:	add	r0, r4, r0
   10ee4:	add	r0, r0, #4
   10ee8:	pop	{r4, r5, fp, pc}
   10eec:	movw	r0, #5946	; 0x173a
   10ef0:	movt	r0, #1
   10ef4:	b	10f00 <test_schema@@Base+0x4d8>
   10ef8:	movw	r0, #5737	; 0x1669
   10efc:	movt	r0, #1
   10f00:	movw	r1, #5775	; 0x168f
   10f04:	movt	r1, #1
   10f08:	movw	r3, #5979	; 0x175b
   10f0c:	movt	r3, #1
   10f10:	mov	r2, #218	; 0xda
   10f14:	bl	1092c <__assert_fail@plt>
   10f18:	push	{r4, r5, fp, lr}
   10f1c:	add	fp, sp, #8
   10f20:	mov	r4, r1
   10f24:	mov	r5, r0
   10f28:	bl	113b4 <main@@Base+0xb4>
   10f2c:	cmp	r0, r4
   10f30:	bls	10f48 <test_schema@@Base+0x520>
   10f34:	add	r4, r5, r4, lsl #2
   10f38:	mov	r0, r4
   10f3c:	bl	11384 <main@@Base+0x84>
   10f40:	add	r0, r4, r0
   10f44:	pop	{r4, r5, fp, pc}
   10f48:	movw	r0, #6050	; 0x17a2
   10f4c:	movt	r0, #1
   10f50:	movw	r1, #5775	; 0x168f
   10f54:	movt	r1, #1
   10f58:	movw	r3, #6105	; 0x17d9
   10f5c:	movt	r3, #1
   10f60:	mov	r2, #215	; 0xd7
   10f64:	bl	1092c <__assert_fail@plt>
   10f68:	b	113c8 <main@@Base+0xc8>
   10f6c:	push	{r4, r5, fp, lr}
   10f70:	add	fp, sp, #8
   10f74:	cmp	r0, #0
   10f78:	beq	10fcc <test_schema@@Base+0x5a4>
   10f7c:	mov	r4, r0
   10f80:	bl	1139c <main@@Base+0x9c>
   10f84:	sub	r5, r4, r0
   10f88:	mov	r0, r5
   10f8c:	bl	113a4 <main@@Base+0xa4>
   10f90:	cmp	r0, #8
   10f94:	bcc	10fc0 <test_schema@@Base+0x598>
   10f98:	add	r0, r5, #6
   10f9c:	bl	113a4 <main@@Base+0xa4>
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fc0 <test_schema@@Base+0x598>
   10fa8:	add	r4, r4, r0
   10fac:	mov	r0, r4
   10fb0:	bl	11384 <main@@Base+0x84>
   10fb4:	add	r0, r4, r0
   10fb8:	add	r0, r0, #4
   10fbc:	pop	{r4, r5, fp, pc}
   10fc0:	movw	r0, #5946	; 0x173a
   10fc4:	movt	r0, #1
   10fc8:	b	10fd4 <test_schema@@Base+0x5ac>
   10fcc:	movw	r0, #5737	; 0x1669
   10fd0:	movt	r0, #1
   10fd4:	movw	r1, #5775	; 0x168f
   10fd8:	movt	r1, #1
   10fdc:	movw	r3, #6189	; 0x182d
   10fe0:	movt	r3, #1
   10fe4:	mov	r2, #224	; 0xe0
   10fe8:	bl	1092c <__assert_fail@plt>
   10fec:	b	1146c <main@@Base+0x16c>
   10ff0:	push	{r4, r5, fp, lr}
   10ff4:	add	fp, sp, #8
   10ff8:	mov	r4, r1
   10ffc:	mov	r5, r0
   11000:	bl	113b4 <main@@Base+0xb4>
   11004:	cmp	r0, r4
   11008:	bls	11020 <test_schema@@Base+0x5f8>
   1100c:	add	r4, r5, r4, lsl #2
   11010:	mov	r0, r4
   11014:	bl	11384 <main@@Base+0x84>
   11018:	add	r0, r4, r0
   1101c:	pop	{r4, r5, fp, pc}
   11020:	movw	r0, #6050	; 0x17a2
   11024:	movt	r0, #1
   11028:	movw	r1, #5775	; 0x168f
   1102c:	movt	r1, #1
   11030:	movw	r3, #6264	; 0x1878
   11034:	movt	r3, #1
   11038:	mov	r2, #192	; 0xc0
   1103c:	bl	1092c <__assert_fail@plt>
   11040:	push	{r4, r5, fp, lr}
   11044:	add	fp, sp, #8
   11048:	cmp	r0, #0
   1104c:	beq	11094 <test_schema@@Base+0x66c>
   11050:	mov	r4, r0
   11054:	bl	1139c <main@@Base+0x9c>
   11058:	sub	r5, r4, r0
   1105c:	mov	r0, r5
   11060:	bl	113a4 <main@@Base+0xa4>
   11064:	cmp	r0, #14
   11068:	bcc	11088 <test_schema@@Base+0x660>
   1106c:	add	r0, r5, #12
   11070:	bl	113a4 <main@@Base+0xa4>
   11074:	cmp	r0, #0
   11078:	beq	11088 <test_schema@@Base+0x660>
   1107c:	add	r0, r4, r0
   11080:	pop	{r4, r5, fp, lr}
   11084:	b	11518 <main@@Base+0x218>
   11088:	mov	r0, #0
   1108c:	mov	r1, #0
   11090:	pop	{r4, r5, fp, pc}
   11094:	movw	r0, #5737	; 0x1669
   11098:	movt	r0, #1
   1109c:	movw	r1, #5775	; 0x168f
   110a0:	movt	r1, #1
   110a4:	movw	r3, #6345	; 0x18c9
   110a8:	movt	r3, #1
   110ac:	mov	r2, #204	; 0xcc
   110b0:	bl	1092c <__assert_fail@plt>
   110b4:	push	{r4, r5, fp, lr}
   110b8:	add	fp, sp, #8
   110bc:	cmp	r0, #0
   110c0:	beq	11114 <test_schema@@Base+0x6ec>
   110c4:	mov	r4, r0
   110c8:	bl	1139c <main@@Base+0x9c>
   110cc:	sub	r5, r4, r0
   110d0:	mov	r0, r5
   110d4:	bl	113a4 <main@@Base+0xa4>
   110d8:	cmp	r0, #6
   110dc:	bcc	11108 <test_schema@@Base+0x6e0>
   110e0:	add	r0, r5, #4
   110e4:	bl	113a4 <main@@Base+0xa4>
   110e8:	cmp	r0, #0
   110ec:	beq	11108 <test_schema@@Base+0x6e0>
   110f0:	add	r4, r4, r0
   110f4:	mov	r0, r4
   110f8:	bl	11384 <main@@Base+0x84>
   110fc:	add	r0, r4, r0
   11100:	add	r0, r0, #4
   11104:	pop	{r4, r5, fp, pc}
   11108:	movw	r0, #5946	; 0x173a
   1110c:	movt	r0, #1
   11110:	b	1111c <test_schema@@Base+0x6f4>
   11114:	movw	r0, #5737	; 0x1669
   11118:	movt	r0, #1
   1111c:	movw	r1, #5775	; 0x168f
   11120:	movt	r1, #1
   11124:	movw	r3, #6412	; 0x190c
   11128:	movt	r3, #1
   1112c:	mov	r2, #195	; 0xc3
   11130:	bl	1092c <__assert_fail@plt>
   11134:	push	{r4, r5, fp, lr}
   11138:	add	fp, sp, #8
   1113c:	cmp	r0, #0
   11140:	beq	11190 <test_schema@@Base+0x768>
   11144:	mov	r4, r0
   11148:	bl	1139c <main@@Base+0x9c>
   1114c:	sub	r5, r4, r0
   11150:	mov	r0, r5
   11154:	bl	113a4 <main@@Base+0xa4>
   11158:	cmp	r0, #8
   1115c:	bcc	11184 <test_schema@@Base+0x75c>
   11160:	add	r0, r5, #6
   11164:	bl	113a4 <main@@Base+0xa4>
   11168:	cmp	r0, #0
   1116c:	beq	11184 <test_schema@@Base+0x75c>
   11170:	add	r4, r4, r0
   11174:	mov	r0, r4
   11178:	bl	11384 <main@@Base+0x84>
   1117c:	add	r0, r4, r0
   11180:	pop	{r4, r5, fp, pc}
   11184:	movw	r0, #5946	; 0x173a
   11188:	movt	r0, #1
   1118c:	b	11198 <test_schema@@Base+0x770>
   11190:	movw	r0, #5737	; 0x1669
   11194:	movt	r0, #1
   11198:	movw	r1, #5775	; 0x168f
   1119c:	movt	r1, #1
   111a0:	movw	r3, #6481	; 0x1951
   111a4:	movt	r3, #1
   111a8:	mov	r2, #201	; 0xc9
   111ac:	bl	1092c <__assert_fail@plt>
   111b0:	push	{r4, r5, fp, lr}
   111b4:	add	fp, sp, #8
   111b8:	cmp	r0, #0
   111bc:	beq	11200 <test_schema@@Base+0x7d8>
   111c0:	mov	r4, r0
   111c4:	bl	1139c <main@@Base+0x9c>
   111c8:	sub	r5, r4, r0
   111cc:	mov	r0, r5
   111d0:	bl	113a4 <main@@Base+0xa4>
   111d4:	cmp	r0, #6
   111d8:	bcc	111f8 <test_schema@@Base+0x7d0>
   111dc:	add	r0, r5, #4
   111e0:	bl	113a4 <main@@Base+0xa4>
   111e4:	cmp	r0, #0
   111e8:	beq	111f8 <test_schema@@Base+0x7d0>
   111ec:	add	r0, r4, r0
   111f0:	pop	{r4, r5, fp, lr}
   111f4:	b	11524 <main@@Base+0x224>
   111f8:	mov	r0, #0
   111fc:	pop	{r4, r5, fp, pc}
   11200:	movw	r0, #5737	; 0x1669
   11204:	movt	r0, #1
   11208:	movw	r1, #5775	; 0x168f
   1120c:	movt	r1, #1
   11210:	movw	r3, #6553	; 0x1999
   11214:	movt	r3, #1
   11218:	mov	r2, #147	; 0x93
   1121c:	bl	1092c <__assert_fail@plt>
   11220:	push	{r4, r5, fp, lr}
   11224:	add	fp, sp, #8
   11228:	cmp	r0, #0
   1122c:	beq	11270 <test_schema@@Base+0x848>
   11230:	mov	r4, r0
   11234:	bl	1139c <main@@Base+0x9c>
   11238:	sub	r5, r4, r0
   1123c:	mov	r0, r5
   11240:	bl	113a4 <main@@Base+0xa4>
   11244:	cmp	r0, #10
   11248:	bcc	11268 <test_schema@@Base+0x840>
   1124c:	add	r0, r5, #8
   11250:	bl	113a4 <main@@Base+0xa4>
   11254:	cmp	r0, #0
   11258:	beq	11268 <test_schema@@Base+0x840>
   1125c:	add	r0, r4, r0
   11260:	pop	{r4, r5, fp, lr}
   11264:	b	11530 <main@@Base+0x230>
   11268:	mvn	r0, #0
   1126c:	pop	{r4, r5, fp, pc}
   11270:	movw	r0, #5737	; 0x1669
   11274:	movt	r0, #1
   11278:	movw	r1, #5775	; 0x168f
   1127c:	movt	r1, #1
   11280:	movw	r3, #6631	; 0x19e7
   11284:	movt	r3, #1
   11288:	mov	r2, #149	; 0x95
   1128c:	bl	1092c <__assert_fail@plt>
   11290:	push	{r4, r5, fp, lr}
   11294:	add	fp, sp, #8
   11298:	cmp	r0, #0
   1129c:	beq	112e0 <test_schema@@Base+0x8b8>
   112a0:	mov	r4, r0
   112a4:	bl	1139c <main@@Base+0x9c>
   112a8:	sub	r5, r4, r0
   112ac:	mov	r0, r5
   112b0:	bl	113a4 <main@@Base+0xa4>
   112b4:	cmp	r0, #8
   112b8:	bcc	112d8 <test_schema@@Base+0x8b0>
   112bc:	add	r0, r5, #6
   112c0:	bl	113a4 <main@@Base+0xa4>
   112c4:	cmp	r0, #0
   112c8:	beq	112d8 <test_schema@@Base+0x8b0>
   112cc:	add	r0, r4, r0
   112d0:	pop	{r4, r5, fp, lr}
   112d4:	b	11524 <main@@Base+0x224>
   112d8:	mov	r0, #0
   112dc:	pop	{r4, r5, fp, pc}
   112e0:	movw	r0, #5737	; 0x1669
   112e4:	movt	r0, #1
   112e8:	movw	r1, #5775	; 0x168f
   112ec:	movt	r1, #1
   112f0:	movw	r3, #6686	; 0x1a1e
   112f4:	movt	r3, #1
   112f8:	mov	r2, #148	; 0x94
   112fc:	bl	1092c <__assert_fail@plt>

00011300 <main@@Base>:
   11300:	push	{fp, lr}
   11304:	mov	fp, sp
   11308:	sub	r2, r0, #1
   1130c:	cmp	r2, #2
   11310:	bcs	11334 <main@@Base+0x34>
   11314:	cmp	r0, #2
   11318:	movw	r0, #8284	; 0x205c
   1131c:	movt	r0, #2
   11320:	ldreq	r1, [r1, #4]
   11324:	streq	r1, [r0]
   11328:	ldr	r0, [r0]
   1132c:	pop	{fp, lr}
   11330:	b	10a28 <test_schema@@Base>
   11334:	movw	r0, #8288	; 0x2060
   11338:	movt	r0, #2
   1133c:	ldr	r3, [r0]
   11340:	movw	r0, #5669	; 0x1625
   11344:	movt	r0, #1
   11348:	mov	r1, #64	; 0x40
   1134c:	mov	r2, #1
   11350:	bl	108b4 <fwrite@plt>
   11354:	mov	r0, #1
   11358:	bl	108f0 <exit@plt>
   1135c:	push	{fp, lr}
   11360:	mov	fp, sp
   11364:	add	r0, r0, #4
   11368:	bl	1138c <main@@Base+0x8c>
   1136c:	movw	r1, #47550	; 0xb9be
   11370:	movt	r1, #44221	; 0xacbd
   11374:	add	r0, r0, r1
   11378:	clz	r0, r0
   1137c:	lsr	r0, r0, #5
   11380:	pop	{fp, pc}
   11384:	ldr	r0, [r0]
   11388:	b	11398 <main@@Base+0x98>
   1138c:	ldr	r0, [r0]
   11390:	b	11394 <main@@Base+0x94>
   11394:	bx	lr
   11398:	bx	lr
   1139c:	ldr	r0, [r0]
   113a0:	b	113ac <main@@Base+0xac>
   113a4:	ldrh	r0, [r0]
   113a8:	b	113b0 <main@@Base+0xb0>
   113ac:	bx	lr
   113b0:	bx	lr
   113b4:	cmp	r0, #0
   113b8:	moveq	r0, #0
   113bc:	bxeq	lr
   113c0:	sub	r0, r0, #4
   113c4:	b	11384 <main@@Base+0x84>
   113c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   113cc:	add	fp, sp, #24
   113d0:	mov	r5, r0
   113d4:	bl	10e84 <test_schema@@Base+0x45c>
   113d8:	mvn	r4, #0
   113dc:	cmp	r0, #0
   113e0:	beq	11454 <main@@Base+0x154>
   113e4:	mov	r4, #0
   113e8:	subs	r6, r0, #1
   113ec:	beq	11430 <main@@Base+0x130>
   113f0:	movw	r8, #5567	; 0x15bf
   113f4:	movt	r8, #1
   113f8:	sub	r0, r6, r4
   113fc:	add	r7, r4, r0, lsr #1
   11400:	mov	r0, r5
   11404:	mov	r1, r7
   11408:	bl	10f18 <test_schema@@Base+0x4f0>
   1140c:	bl	10e98 <test_schema@@Base+0x470>
   11410:	mov	r1, r8
   11414:	bl	11468 <main@@Base+0x168>
   11418:	cmp	r0, #0
   1141c:	movpl	r6, r7
   11420:	addmi	r4, r7, #1
   11424:	cmp	r6, r4
   11428:	bhi	113f8 <main@@Base+0xf8>
   1142c:	bne	1145c <main@@Base+0x15c>
   11430:	mov	r0, r5
   11434:	mov	r1, r4
   11438:	bl	10f18 <test_schema@@Base+0x4f0>
   1143c:	bl	10e98 <test_schema@@Base+0x470>
   11440:	movw	r1, #5567	; 0x15bf
   11444:	movt	r1, #1
   11448:	bl	11468 <main@@Base+0x168>
   1144c:	cmp	r0, #0
   11450:	mvnne	r4, #0
   11454:	mov	r0, r4
   11458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1145c:	mvn	r4, #0
   11460:	mov	r0, r4
   11464:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11468:	b	1086c <strcmp@plt>
   1146c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11470:	add	fp, sp, #24
   11474:	mov	r8, r1
   11478:	mov	r6, r0
   1147c:	bl	11504 <main@@Base+0x204>
   11480:	mvn	r4, #0
   11484:	cmp	r0, #0
   11488:	beq	114f0 <main@@Base+0x1f0>
   1148c:	mov	r4, #0
   11490:	subs	r5, r0, #1
   11494:	beq	114d0 <main@@Base+0x1d0>
   11498:	sub	r0, r5, r4
   1149c:	add	r7, r4, r0, lsr #1
   114a0:	mov	r0, r6
   114a4:	mov	r1, r7
   114a8:	bl	10ff0 <test_schema@@Base+0x5c8>
   114ac:	bl	110b4 <test_schema@@Base+0x68c>
   114b0:	mov	r1, r8
   114b4:	bl	11468 <main@@Base+0x168>
   114b8:	cmp	r0, #0
   114bc:	movpl	r5, r7
   114c0:	addmi	r4, r7, #1
   114c4:	cmp	r5, r4
   114c8:	bhi	11498 <main@@Base+0x198>
   114cc:	bne	114f8 <main@@Base+0x1f8>
   114d0:	mov	r0, r6
   114d4:	mov	r1, r4
   114d8:	bl	10ff0 <test_schema@@Base+0x5c8>
   114dc:	bl	110b4 <test_schema@@Base+0x68c>
   114e0:	mov	r1, r8
   114e4:	bl	11468 <main@@Base+0x168>
   114e8:	cmp	r0, #0
   114ec:	mvnne	r4, #0
   114f0:	mov	r0, r4
   114f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   114f8:	mvn	r4, #0
   114fc:	mov	r0, r4
   11500:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11504:	cmp	r0, #0
   11508:	moveq	r0, #0
   1150c:	bxeq	lr
   11510:	sub	r0, r0, #4
   11514:	b	11384 <main@@Base+0x84>
   11518:	ldrd	r0, [r0]
   1151c:	b	11520 <main@@Base+0x220>
   11520:	bx	lr
   11524:	ldrsb	r0, [r0]
   11528:	b	1152c <main@@Base+0x22c>
   1152c:	bx	lr
   11530:	ldr	r0, [r0]
   11534:	b	11538 <main@@Base+0x238>
   11538:	bx	lr

0001153c <__libc_csu_init@@Base>:
   1153c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11540:	mov	r7, r0
   11544:	ldr	r6, [pc, #72]	; 11594 <__libc_csu_init@@Base+0x58>
   11548:	ldr	r5, [pc, #72]	; 11598 <__libc_csu_init@@Base+0x5c>
   1154c:	add	r6, pc, r6
   11550:	add	r5, pc, r5
   11554:	sub	r6, r6, r5
   11558:	mov	r8, r1
   1155c:	mov	r9, r2
   11560:	bl	1084c <strcmp@plt-0x20>
   11564:	asrs	r6, r6, #2
   11568:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1156c:	mov	r4, #0
   11570:	add	r4, r4, #1
   11574:	ldr	r3, [r5], #4
   11578:	mov	r2, r9
   1157c:	mov	r1, r8
   11580:	mov	r0, r7
   11584:	blx	r3
   11588:	cmp	r6, r4
   1158c:	bne	11570 <__libc_csu_init@@Base+0x34>
   11590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11594:			; <UNDEFINED> instruction: 0x000109b8
   11598:			; <UNDEFINED> instruction: 0x000109b0

0001159c <__libc_csu_fini@@Base>:
   1159c:	bx	lr

Disassembly of section .fini:

000115a0 <.fini>:
   115a0:	push	{r3, lr}
   115a4:	pop	{r3, pc}
