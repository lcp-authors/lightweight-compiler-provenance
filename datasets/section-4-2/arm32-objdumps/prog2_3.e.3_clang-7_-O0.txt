
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

00010704 <.init>:
   10704:	push	{r3, lr}
   10708:	bl	107cc <_start@@Base+0x3c>
   1070c:	pop	{r3, pc}

Disassembly of section .plt:

00010710 <__isoc99_fscanf@plt-0x14>:
   10710:	push	{lr}		; (str lr, [sp, #-4]!)
   10714:	ldr	lr, [pc, #4]	; 10720 <__isoc99_fscanf@plt-0x4>
   10718:	add	lr, pc, lr
   1071c:	ldr	pc, [lr, #8]!
   10720:	andeq	r0, r1, r0, ror #17

00010724 <__isoc99_fscanf@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2272]!	; 0x8e0

00010730 <fopen@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001073c <realloc@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2256]!	; 0x8d0

00010748 <malloc@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2248]!	; 0x8c8

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001076c <fprintf@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2224]!	; 0x8b0

00010778 <fclose@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2216]!	; 0x8a8

00010784 <abort@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2208]!	; 0x8a0

Disassembly of section .text:

00010790 <_start@@Base>:
   10790:	mov	fp, #0
   10794:	mov	lr, #0
   10798:	pop	{r1}		; (ldr r1, [sp], #4)
   1079c:	mov	r2, sp
   107a0:	push	{r2}		; (str r2, [sp, #-4]!)
   107a4:	push	{r0}		; (str r0, [sp, #-4]!)
   107a8:	ldr	ip, [pc, #16]	; 107c0 <_start@@Base+0x30>
   107ac:	push	{ip}		; (str ip, [sp, #-4]!)
   107b0:	ldr	r0, [pc, #12]	; 107c4 <_start@@Base+0x34>
   107b4:	ldr	r3, [pc, #12]	; 107c8 <_start@@Base+0x38>
   107b8:	bl	10754 <__libc_start_main@plt>
   107bc:	bl	10784 <abort@plt>
   107c0:	andeq	r0, r1, ip, asr #22
   107c4:	muleq	r1, r4, sl
   107c8:	andeq	r0, r1, ip, ror #21
   107cc:	ldr	r3, [pc, #20]	; 107e8 <_start@@Base+0x58>
   107d0:	ldr	r2, [pc, #20]	; 107ec <_start@@Base+0x5c>
   107d4:	add	r3, pc, r3
   107d8:	ldr	r2, [r3, r2]
   107dc:	cmp	r2, #0
   107e0:	bxeq	lr
   107e4:	b	10760 <__gmon_start__@plt>
   107e8:	andeq	r0, r1, r4, lsr #16
   107ec:	andeq	r0, r0, r0, lsr r0
   107f0:	ldr	r0, [pc, #24]	; 10810 <_start@@Base+0x80>
   107f4:	ldr	r3, [pc, #24]	; 10814 <_start@@Base+0x84>
   107f8:	cmp	r3, r0
   107fc:	bxeq	lr
   10800:	ldr	r3, [pc, #16]	; 10818 <_start@@Base+0x88>
   10804:	cmp	r3, #0
   10808:	bxeq	lr
   1080c:	bx	r3
   10810:	andeq	r1, r2, ip, lsr r0
   10814:	andeq	r1, r2, ip, lsr r0
   10818:	andeq	r0, r0, r0
   1081c:	ldr	r0, [pc, #36]	; 10848 <_start@@Base+0xb8>
   10820:	ldr	r1, [pc, #36]	; 1084c <_start@@Base+0xbc>
   10824:	sub	r1, r1, r0
   10828:	asr	r1, r1, #2
   1082c:	add	r1, r1, r1, lsr #31
   10830:	asrs	r1, r1, #1
   10834:	bxeq	lr
   10838:	ldr	r3, [pc, #16]	; 10850 <_start@@Base+0xc0>
   1083c:	cmp	r3, #0
   10840:	bxeq	lr
   10844:	bx	r3
   10848:	andeq	r1, r2, ip, lsr r0
   1084c:	andeq	r1, r2, ip, lsr r0
   10850:	andeq	r0, r0, r0
   10854:	push	{r4, lr}
   10858:	ldr	r4, [pc, #24]	; 10878 <_start@@Base+0xe8>
   1085c:	ldrb	r3, [r4]
   10860:	cmp	r3, #0
   10864:	popne	{r4, pc}
   10868:	bl	107f0 <_start@@Base+0x60>
   1086c:	mov	r3, #1
   10870:	strb	r3, [r4]
   10874:	pop	{r4, pc}
   10878:	andeq	r1, r2, ip, lsr r0
   1087c:	b	1081c <_start@@Base+0x8c>

00010880 <analisarFicheiro@@Base>:
   10880:	push	{r4, sl, fp, lr}
   10884:	add	fp, sp, #8
   10888:	sub	sp, sp, #24
   1088c:	ldr	r2, [pc, #224]	; 10974 <analisarFicheiro@@Base+0xf4>
   10890:	add	r2, pc, r2
   10894:	ldr	r3, [pc, #220]	; 10978 <analisarFicheiro@@Base+0xf8>
   10898:	add	r3, pc, r3
   1089c:	str	r0, [fp, #-12]
   108a0:	str	r1, [sp, #16]
   108a4:	mov	r0, r2
   108a8:	mov	r1, r3
   108ac:	bl	10730 <fopen@plt>
   108b0:	str	r0, [fp, #-12]
   108b4:	movw	r0, #0
   108b8:	str	r0, [sp, #12]
   108bc:	movw	r0, #104	; 0x68
   108c0:	bl	10748 <malloc@plt>
   108c4:	str	r0, [sp, #8]
   108c8:	ldr	r0, [pc, #172]	; 1097c <analisarFicheiro@@Base+0xfc>
   108cc:	add	r1, pc, r0
   108d0:	ldr	r0, [fp, #-12]
   108d4:	ldr	r2, [sp, #8]
   108d8:	ldr	r3, [sp, #12]
   108dc:	movw	ip, #104	; 0x68
   108e0:	mul	r3, r3, ip
   108e4:	add	r2, r2, r3
   108e8:	ldr	r3, [sp, #8]
   108ec:	ldr	lr, [sp, #12]
   108f0:	mul	lr, lr, ip
   108f4:	add	r3, r3, lr
   108f8:	add	r3, r3, #50	; 0x32
   108fc:	ldr	lr, [sp, #8]
   10900:	ldr	r4, [sp, #12]
   10904:	mul	ip, r4, ip
   10908:	add	ip, lr, ip
   1090c:	add	ip, ip, #100	; 0x64
   10910:	str	ip, [sp]
   10914:	bl	10724 <__isoc99_fscanf@plt>
   10918:	cmp	r0, #3
   1091c:	bne	1094c <analisarFicheiro@@Base+0xcc>
   10920:	ldr	r0, [sp, #8]
   10924:	ldr	r1, [sp, #12]
   10928:	add	r1, r1, #1
   1092c:	movw	r2, #104	; 0x68
   10930:	mul	r1, r1, r2
   10934:	bl	1073c <realloc@plt>
   10938:	str	r0, [sp, #8]
   1093c:	ldr	r0, [sp, #12]
   10940:	add	r0, r0, #1
   10944:	str	r0, [sp, #12]
   10948:	b	108c8 <analisarFicheiro@@Base+0x48>
   1094c:	ldr	r0, [sp, #12]
   10950:	ldr	r1, [sp, #16]
   10954:	str	r0, [r1]
   10958:	ldr	r0, [fp, #-12]
   1095c:	bl	10778 <fclose@plt>
   10960:	ldr	r1, [sp, #8]
   10964:	str	r0, [sp, #4]
   10968:	mov	r0, r1
   1096c:	sub	sp, fp, #8
   10970:	pop	{r4, sl, fp, pc}
   10974:	andeq	r0, r0, r4, asr #5
   10978:	andeq	r0, r0, r9, asr #5
   1097c:	muleq	r0, r7, r2

00010980 <gerarRelatorio@@Base>:
   10980:	push	{r4, r5, fp, lr}
   10984:	add	fp, sp, #8
   10988:	sub	sp, sp, #40	; 0x28
   1098c:	ldr	r3, [pc, #248]	; 10a8c <gerarRelatorio@@Base+0x10c>
   10990:	add	r3, pc, r3
   10994:	str	r0, [fp, #-12]
   10998:	str	r1, [fp, #-16]
   1099c:	str	r2, [fp, #-20]	; 0xffffffec
   109a0:	ldr	r0, [fp, #-12]
   109a4:	mov	r1, r3
   109a8:	bl	10730 <fopen@plt>
   109ac:	ldr	r1, [pc, #212]	; 10a88 <gerarRelatorio@@Base+0x108>
   109b0:	add	r1, pc, r1
   109b4:	str	r0, [sp, #20]
   109b8:	ldr	r0, [sp, #20]
   109bc:	bl	1076c <fprintf@plt>
   109c0:	movw	r1, #104	; 0x68
   109c4:	str	r0, [sp, #16]
   109c8:	mov	r0, r1
   109cc:	bl	10748 <malloc@plt>
   109d0:	str	r0, [fp, #-16]
   109d4:	movw	r0, #0
   109d8:	str	r0, [sp, #24]
   109dc:	ldr	r0, [sp, #24]
   109e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   109e4:	cmp	r0, r1
   109e8:	bge	10a74 <gerarRelatorio@@Base+0xf4>
   109ec:	ldr	r0, [fp, #-16]
   109f0:	ldr	r1, [sp, #24]
   109f4:	add	r1, r1, #1
   109f8:	movw	r2, #104	; 0x68
   109fc:	mul	r1, r1, r2
   10a00:	bl	1073c <realloc@plt>
   10a04:	ldr	r1, [pc, #132]	; 10a90 <gerarRelatorio@@Base+0x110>
   10a08:	add	r1, pc, r1
   10a0c:	str	r0, [fp, #-16]
   10a10:	ldr	r0, [sp, #20]
   10a14:	ldr	r2, [sp, #24]
   10a18:	ldr	lr, [fp, #-16]
   10a1c:	ldr	r3, [sp, #24]
   10a20:	movw	ip, #104	; 0x68
   10a24:	mul	r3, r3, ip
   10a28:	add	r3, lr, r3
   10a2c:	add	r3, r3, #50	; 0x32
   10a30:	ldr	lr, [fp, #-16]
   10a34:	ldr	r4, [sp, #24]
   10a38:	mul	r4, r4, ip
   10a3c:	add	lr, lr, r4
   10a40:	ldr	r4, [fp, #-16]
   10a44:	ldr	r5, [sp, #24]
   10a48:	mul	ip, r5, ip
   10a4c:	add	ip, r4, ip
   10a50:	ldr	ip, [ip, #100]	; 0x64
   10a54:	str	lr, [sp]
   10a58:	str	ip, [sp, #4]
   10a5c:	bl	1076c <fprintf@plt>
   10a60:	str	r0, [sp, #12]
   10a64:	ldr	r0, [sp, #24]
   10a68:	add	r0, r0, #1
   10a6c:	str	r0, [sp, #24]
   10a70:	b	109dc <gerarRelatorio@@Base+0x5c>
   10a74:	ldr	r0, [sp, #20]
   10a78:	bl	10778 <fclose@plt>
   10a7c:	str	r0, [sp, #8]
   10a80:	sub	sp, fp, #8
   10a84:	pop	{r4, r5, fp, pc}
   10a88:			; <UNDEFINED> instruction: 0x000001be
   10a8c:	ldrdeq	r0, [r0], -ip
   10a90:	andeq	r0, r0, r1, ror r1

00010a94 <main@@Base>:
   10a94:	push	{fp, lr}
   10a98:	mov	fp, sp
   10a9c:	sub	sp, sp, #24
   10aa0:	movw	r0, #0
   10aa4:	str	r0, [fp, #-4]
   10aa8:	str	r0, [fp, #-8]
   10aac:	ldr	r0, [sp, #8]
   10ab0:	sub	r1, fp, #8
   10ab4:	bl	10880 <analisarFicheiro@@Base>
   10ab8:	ldr	r1, [pc, #40]	; 10ae8 <main@@Base+0x54>
   10abc:	add	r1, pc, r1
   10ac0:	str	r0, [sp, #12]
   10ac4:	ldr	r0, [sp, #12]
   10ac8:	ldr	r2, [fp, #-8]
   10acc:	str	r0, [sp, #4]
   10ad0:	mov	r0, r1
   10ad4:	ldr	r1, [sp, #4]
   10ad8:	bl	10980 <gerarRelatorio@@Base>
   10adc:	movw	r0, #0
   10ae0:	mov	sp, fp
   10ae4:	pop	{fp, pc}
   10ae8:	andeq	r0, r0, pc, asr #1

00010aec <__libc_csu_init@@Base>:
   10aec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10af0:	mov	r7, r0
   10af4:	ldr	r6, [pc, #72]	; 10b44 <__libc_csu_init@@Base+0x58>
   10af8:	ldr	r5, [pc, #72]	; 10b48 <__libc_csu_init@@Base+0x5c>
   10afc:	add	r6, pc, r6
   10b00:	add	r5, pc, r5
   10b04:	sub	r6, r6, r5
   10b08:	mov	r8, r1
   10b0c:	mov	r9, r2
   10b10:	bl	10704 <__isoc99_fscanf@plt-0x20>
   10b14:	asrs	r6, r6, #2
   10b18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b1c:	mov	r4, #0
   10b20:	add	r4, r4, #1
   10b24:	ldr	r3, [r5], #4
   10b28:	mov	r2, r9
   10b2c:	mov	r1, r8
   10b30:	mov	r0, r7
   10b34:	blx	r3
   10b38:	cmp	r6, r4
   10b3c:	bne	10b20 <__libc_csu_init@@Base+0x34>
   10b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b44:	andeq	r0, r1, r8, lsl #8
   10b48:	andeq	r0, r1, r0, lsl #8

00010b4c <__libc_csu_fini@@Base>:
   10b4c:	bx	lr

Disassembly of section .fini:

00010b50 <.fini>:
   10b50:	push	{r3, lr}
   10b54:	pop	{r3, pc}
