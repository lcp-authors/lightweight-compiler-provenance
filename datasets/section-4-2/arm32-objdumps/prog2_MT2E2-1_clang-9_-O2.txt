
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

000110c0 <.init>:
   110c0:	push	{r3, lr}
   110c4:	bl	111e8 <_start@@Base+0x3c>
   110c8:	pop	{r3, pc}

Disassembly of section .plt:

000110cc <calloc@plt-0x14>:
   110cc:	push	{lr}		; (str lr, [sp, #-4]!)
   110d0:	ldr	lr, [pc, #4]	; 110dc <calloc@plt-0x4>
   110d4:	add	lr, pc, lr
   110d8:	ldr	pc, [lr, #8]!
   110dc:	andeq	r2, r1, r4, lsr #30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #73728	; 0x12000
   110e8:	ldr	pc, [ip, #3876]!	; 0xf24

000110ec <strcmp@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #73728	; 0x12000
   110f4:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #73728	; 0x12000
   11100:	ldr	pc, [ip, #3860]!	; 0xf14

00011104 <__isoc99_fscanf@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #73728	; 0x12000
   1110c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011110 <fopen@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #73728	; 0x12000
   11118:	ldr	pc, [ip, #3844]!	; 0xf04

0001111c <free@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #73728	; 0x12000
   11124:	ldr	pc, [ip, #3836]!	; 0xefc

00011128 <memcpy@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #73728	; 0x12000
   11130:	ldr	pc, [ip, #3828]!	; 0xef4

00011134 <realloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #73728	; 0x12000
   1113c:	ldr	pc, [ip, #3820]!	; 0xeec

00011140 <strcpy@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #73728	; 0x12000
   11148:	ldr	pc, [ip, #3812]!	; 0xee4

0001114c <puts@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #73728	; 0x12000
   11154:	ldr	pc, [ip, #3804]!	; 0xedc

00011158 <malloc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #73728	; 0x12000
   11160:	ldr	pc, [ip, #3796]!	; 0xed4

00011164 <__libc_start_main@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #73728	; 0x12000
   1116c:	ldr	pc, [ip, #3788]!	; 0xecc

00011170 <__gmon_start__@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #73728	; 0x12000
   11178:	ldr	pc, [ip, #3780]!	; 0xec4

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #73728	; 0x12000
   11184:	ldr	pc, [ip, #3772]!	; 0xebc

00011188 <putchar@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #73728	; 0x12000
   11190:	ldr	pc, [ip, #3764]!	; 0xeb4

00011194 <fclose@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #73728	; 0x12000
   1119c:	ldr	pc, [ip, #3756]!	; 0xeac

000111a0 <abort@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #73728	; 0x12000
   111a8:	ldr	pc, [ip, #3748]!	; 0xea4

Disassembly of section .text:

000111ac <_start@@Base>:
   111ac:	mov	fp, #0
   111b0:	mov	lr, #0
   111b4:	pop	{r1}		; (ldr r1, [sp], #4)
   111b8:	mov	r2, sp
   111bc:	push	{r2}		; (str r2, [sp, #-4]!)
   111c0:	push	{r0}		; (str r0, [sp, #-4]!)
   111c4:	ldr	ip, [pc, #16]	; 111dc <_start@@Base+0x30>
   111c8:	push	{ip}		; (str ip, [sp, #-4]!)
   111cc:	ldr	r0, [pc, #12]	; 111e0 <_start@@Base+0x34>
   111d0:	ldr	r3, [pc, #12]	; 111e4 <_start@@Base+0x38>
   111d4:	bl	11164 <__libc_start_main@plt>
   111d8:	bl	111a0 <abort@plt>
   111dc:	andeq	r2, r1, r0, lsl #29
   111e0:	andeq	r1, r1, r4, ror #8
   111e4:	andeq	r2, r1, r0, lsr #28
   111e8:	ldr	r3, [pc, #20]	; 11204 <_start@@Base+0x58>
   111ec:	ldr	r2, [pc, #20]	; 11208 <_start@@Base+0x5c>
   111f0:	add	r3, pc, r3
   111f4:	ldr	r2, [r3, r2]
   111f8:	cmp	r2, #0
   111fc:	bxeq	lr
   11200:	b	11170 <__gmon_start__@plt>
   11204:	andeq	r2, r1, r8, lsl #28
   11208:	andeq	r0, r0, r4, asr r0
   1120c:	ldr	r0, [pc, #24]	; 1122c <_start@@Base+0x80>
   11210:	ldr	r3, [pc, #24]	; 11230 <_start@@Base+0x84>
   11214:	cmp	r3, r0
   11218:	bxeq	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <_start@@Base+0x88>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r4, r2, r0, rrx
   11230:	andeq	r4, r2, r0, rrx
   11234:	andeq	r0, r0, r0
   11238:	ldr	r0, [pc, #36]	; 11264 <_start@@Base+0xb8>
   1123c:	ldr	r1, [pc, #36]	; 11268 <_start@@Base+0xbc>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <_start@@Base+0xc0>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r4, r2, r0, rrx
   11268:	andeq	r4, r2, r0, rrx
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <_start@@Base+0xe8>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	1120c <_start@@Base+0x60>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r4, r2, r0, rrx
   11298:	b	11238 <_start@@Base+0x8c>

0001129c <crescente@@Base>:
   1129c:	push	{r4, r5, fp, lr}
   112a0:	add	fp, sp, #8
   112a4:	cmp	r0, #0
   112a8:	popeq	{r4, r5, fp, pc}
   112ac:	ldr	r5, [pc, #40]	; 112dc <crescente@@Base+0x40>
   112b0:	mov	r4, r0
   112b4:	add	r5, pc, r5
   112b8:	ldr	r0, [r4, #4]
   112bc:	bl	1129c <crescente@@Base>
   112c0:	ldr	r1, [r4]
   112c4:	mov	r0, r5
   112c8:	bl	110f8 <printf@plt>
   112cc:	ldr	r4, [r4, #8]
   112d0:	cmp	r4, #0
   112d4:	bne	112b8 <crescente@@Base+0x1c>
   112d8:	pop	{r4, r5, fp, pc}
   112dc:	ldrdeq	r1, [r0], -r8

000112e0 <decrescente@@Base>:
   112e0:	push	{r4, r5, fp, lr}
   112e4:	add	fp, sp, #8
   112e8:	cmp	r0, #0
   112ec:	popeq	{r4, r5, fp, pc}
   112f0:	ldr	r5, [pc, #40]	; 11320 <decrescente@@Base+0x40>
   112f4:	mov	r4, r0
   112f8:	add	r5, pc, r5
   112fc:	ldr	r0, [r4, #8]
   11300:	bl	112e0 <decrescente@@Base>
   11304:	ldr	r1, [r4]
   11308:	mov	r0, r5
   1130c:	bl	110f8 <printf@plt>
   11310:	ldr	r4, [r4, #4]
   11314:	cmp	r4, #0
   11318:	bne	112fc <decrescente@@Base+0x1c>
   1131c:	pop	{r4, r5, fp, pc}
   11320:	muleq	r0, r4, fp

00011324 <avl_imprime_ord@@Base>:
   11324:	ldr	r0, [r0]
   11328:	cmp	r1, #0
   1132c:	bmi	11334 <avl_imprime_ord@@Base+0x10>
   11330:	b	1129c <crescente@@Base>
   11334:	b	112e0 <decrescente@@Base>

00011338 <valida_passwds@@Base>:
   11338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1133c:	add	fp, sp, #28
   11340:	sub	sp, sp, #52	; 0x34
   11344:	mov	r8, r1
   11348:	ldr	r1, [pc, #252]	; 1144c <valida_passwds@@Base+0x114>
   1134c:	mov	r7, r0
   11350:	mov	r0, #10
   11354:	mov	r9, r2
   11358:	ldr	r1, [pc, r1]
   1135c:	bl	12708 <tabela_nova@@Base>
   11360:	ldr	r1, [pc, #232]	; 11450 <valida_passwds@@Base+0x118>
   11364:	mov	r4, r0
   11368:	add	r2, sp, #27
   1136c:	add	r3, sp, #2
   11370:	mov	r0, r7
   11374:	add	r1, pc, r1
   11378:	bl	11104 <__isoc99_fscanf@plt>
   1137c:	cmp	r0, #2
   11380:	bne	113c0 <valida_passwds@@Base+0x88>
   11384:	ldr	sl, [pc, #200]	; 11454 <valida_passwds@@Base+0x11c>
   11388:	add	r5, sp, #27
   1138c:	add	r6, sp, #2
   11390:	add	sl, pc, sl
   11394:	mov	r0, r4
   11398:	mov	r1, r5
   1139c:	mov	r2, r6
   113a0:	bl	127f4 <tabela_adiciona@@Base>
   113a4:	mov	r0, r7
   113a8:	mov	r1, sl
   113ac:	mov	r2, r5
   113b0:	mov	r3, r6
   113b4:	bl	11104 <__isoc99_fscanf@plt>
   113b8:	cmp	r0, #2
   113bc:	beq	11394 <valida_passwds@@Base+0x5c>
   113c0:	ldr	r6, [r9]
   113c4:	cmp	r6, #0
   113c8:	ldrne	r7, [r8]
   113cc:	cmpne	r7, #0
   113d0:	beq	11434 <valida_passwds@@Base+0xfc>
   113d4:	ldr	r8, [pc, #124]	; 11458 <valida_passwds@@Base+0x120>
   113d8:	ldr	r9, [pc, #124]	; 1145c <valida_passwds@@Base+0x124>
   113dc:	ldr	r5, [pc, #124]	; 11460 <valida_passwds@@Base+0x128>
   113e0:	add	r8, pc, r8
   113e4:	add	r9, pc, r9
   113e8:	add	r5, pc, r5
   113ec:	ldr	r2, [r6]
   113f0:	ldr	r1, [r7]
   113f4:	mov	r0, r8
   113f8:	bl	110f8 <printf@plt>
   113fc:	ldr	r1, [r7]
   11400:	mov	r0, r4
   11404:	bl	12a30 <tabela_valor@@Base>
   11408:	ldr	r1, [r6]
   1140c:	bl	110ec <strcmp@plt>
   11410:	cmp	r0, #0
   11414:	mov	r0, r5
   11418:	moveq	r0, r9
   1141c:	bl	1114c <puts@plt>
   11420:	ldr	r6, [r6, #4]
   11424:	cmp	r6, #0
   11428:	ldrne	r7, [r7, #4]
   1142c:	cmpne	r7, #0
   11430:	bne	113ec <valida_passwds@@Base+0xb4>
   11434:	mov	r0, r4
   11438:	bl	12aa4 <tabela_esvazia@@Base>
   1143c:	mov	r0, r4
   11440:	bl	1111c <free@plt>
   11444:	sub	sp, fp, #28
   11448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1144c:	strdeq	r2, [r1], -r0
   11450:	andeq	r1, r0, ip, lsl fp
   11454:	andeq	r1, r0, r0, lsl #22
   11458:			; <UNDEFINED> instruction: 0x00001ab6
   1145c:	andeq	r1, r0, pc, lsl fp
   11460:	andeq	r1, r0, r5, lsl #22

00011464 <main@@Base>:
   11464:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11468:	add	fp, sp, #24
   1146c:	sub	sp, sp, #384	; 0x180
   11470:	ldr	r0, [pc, #560]	; 116a8 <main@@Base+0x244>
   11474:	add	r4, sp, #80	; 0x50
   11478:	add	r8, r4, #32
   1147c:	add	r7, r4, #16
   11480:	mov	r6, r4
   11484:	add	r0, pc, r0
   11488:	add	r2, r0, #32
   1148c:	add	r1, r0, #16
   11490:	vld1.64	{d16-d17}, [r2]
   11494:	mov	r2, #48	; 0x30
   11498:	vld1.64	{d18-d19}, [r1]
   1149c:	vld1.64	{d20-d21}, [r0], r2
   114a0:	ldr	r0, [r0]
   114a4:	vst1.64	{d16-d17}, [r8]
   114a8:	vst1.64	{d18-d19}, [r7]
   114ac:	str	r0, [sp, #128]	; 0x80
   114b0:	mov	r0, #44	; 0x2c
   114b4:	vst1.64	{d20-d21}, [r6], r0
   114b8:	ldr	r0, [pc, #492]	; 116ac <main@@Base+0x248>
   114bc:	add	r0, pc, r0
   114c0:	bl	1114c <puts@plt>
   114c4:	bl	116d4 <avl_nova@@Base>
   114c8:	mov	r1, r4
   114cc:	mov	r5, r0
   114d0:	bl	11c40 <avl_insere@@Base>
   114d4:	orr	r1, r4, #4
   114d8:	mov	r0, r5
   114dc:	bl	11c40 <avl_insere@@Base>
   114e0:	add	r1, r4, #8
   114e4:	mov	r0, r5
   114e8:	bl	11c40 <avl_insere@@Base>
   114ec:	add	r1, r4, #12
   114f0:	mov	r0, r5
   114f4:	bl	11c40 <avl_insere@@Base>
   114f8:	mov	r0, r5
   114fc:	mov	r1, r7
   11500:	bl	11c40 <avl_insere@@Base>
   11504:	add	r1, r4, #20
   11508:	mov	r0, r5
   1150c:	bl	11c40 <avl_insere@@Base>
   11510:	add	r1, r4, #24
   11514:	mov	r0, r5
   11518:	bl	11c40 <avl_insere@@Base>
   1151c:	add	r1, r4, #28
   11520:	mov	r0, r5
   11524:	bl	11c40 <avl_insere@@Base>
   11528:	mov	r0, r5
   1152c:	mov	r1, r8
   11530:	bl	11c40 <avl_insere@@Base>
   11534:	add	r1, r4, #36	; 0x24
   11538:	mov	r0, r5
   1153c:	bl	11c40 <avl_insere@@Base>
   11540:	add	r1, r4, #40	; 0x28
   11544:	mov	r0, r5
   11548:	bl	11c40 <avl_insere@@Base>
   1154c:	mov	r0, r5
   11550:	mov	r1, r6
   11554:	bl	11c40 <avl_insere@@Base>
   11558:	add	r1, r4, #48	; 0x30
   1155c:	mov	r0, r5
   11560:	bl	11c40 <avl_insere@@Base>
   11564:	ldr	r0, [pc, #324]	; 116b0 <main@@Base+0x24c>
   11568:	add	r0, pc, r0
   1156c:	bl	110f8 <printf@plt>
   11570:	ldr	r0, [r5]
   11574:	bl	120d4 <avl_imprime@@Base>
   11578:	ldr	r0, [pc, #308]	; 116b4 <main@@Base+0x250>
   1157c:	add	r0, pc, r0
   11580:	bl	110f8 <printf@plt>
   11584:	ldr	r0, [r5]
   11588:	bl	1129c <crescente@@Base>
   1158c:	ldr	r0, [pc, #292]	; 116b8 <main@@Base+0x254>
   11590:	add	r0, pc, r0
   11594:	bl	1114c <puts@plt>
   11598:	ldr	r1, [pc, #284]	; 116bc <main@@Base+0x258>
   1159c:	add	r7, sp, #80	; 0x50
   115a0:	mov	r2, #300	; 0x12c
   115a4:	mov	r0, r7
   115a8:	add	r1, pc, r1
   115ac:	bl	11128 <memcpy@plt>
   115b0:	ldr	r1, [pc, #264]	; 116c0 <main@@Base+0x25c>
   115b4:	mov	r8, sp
   115b8:	mov	r2, #75	; 0x4b
   115bc:	mov	r0, r8
   115c0:	add	r1, pc, r1
   115c4:	bl	11128 <memcpy@plt>
   115c8:	ldr	r0, [pc, #244]	; 116c4 <main@@Base+0x260>
   115cc:	add	r0, pc, r0
   115d0:	bl	1114c <puts@plt>
   115d4:	ldr	r0, [pc, #236]	; 116c8 <main@@Base+0x264>
   115d8:	ldr	r1, [pc, #236]	; 116cc <main@@Base+0x268>
   115dc:	add	r0, pc, r0
   115e0:	add	r1, pc, r1
   115e4:	bl	11110 <fopen@plt>
   115e8:	cmp	r0, #0
   115ec:	beq	1168c <main@@Base+0x228>
   115f0:	mov	r4, r0
   115f4:	bl	12324 <lista_nova@@Base>
   115f8:	mov	r1, r7
   115fc:	mov	r2, #0
   11600:	mov	r5, r0
   11604:	mov	r6, #0
   11608:	bl	123c8 <lista_insere@@Base>
   1160c:	add	r1, r7, #100	; 0x64
   11610:	mov	r0, r5
   11614:	mov	r2, #0
   11618:	bl	123c8 <lista_insere@@Base>
   1161c:	add	r1, r7, #200	; 0xc8
   11620:	mov	r0, r5
   11624:	mov	r2, #0
   11628:	bl	123c8 <lista_insere@@Base>
   1162c:	bl	12324 <lista_nova@@Base>
   11630:	mov	r1, r8
   11634:	mov	r2, #0
   11638:	mov	r7, r0
   1163c:	bl	123c8 <lista_insere@@Base>
   11640:	add	r1, r8, #25
   11644:	mov	r0, r7
   11648:	mov	r2, #0
   1164c:	bl	123c8 <lista_insere@@Base>
   11650:	add	r1, r8, #50	; 0x32
   11654:	mov	r0, r7
   11658:	mov	r2, #0
   1165c:	bl	123c8 <lista_insere@@Base>
   11660:	mov	r0, r4
   11664:	mov	r1, r5
   11668:	mov	r2, r7
   1166c:	bl	11338 <valida_passwds@@Base>
   11670:	mov	r0, r5
   11674:	bl	12350 <lista_apaga@@Base>
   11678:	mov	r0, r7
   1167c:	bl	12350 <lista_apaga@@Base>
   11680:	mov	r0, r4
   11684:	bl	11194 <fclose@plt>
   11688:	b	1169c <main@@Base+0x238>
   1168c:	ldr	r0, [pc, #60]	; 116d0 <main@@Base+0x26c>
   11690:	add	r0, pc, r0
   11694:	bl	1114c <puts@plt>
   11698:	mvn	r6, #0
   1169c:	mov	r0, r6
   116a0:	sub	sp, fp, #24
   116a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116a8:	ldrdeq	r1, [r0], -ip
   116ac:	andeq	r1, r0, r0, ror #20
   116b0:	andeq	r1, r0, r6, asr #18
   116b4:	andeq	r1, r0, r4, asr #18
   116b8:	andeq	r1, r0, r5, lsr #23
   116bc:	strdeq	r1, [r0], -r0
   116c0:	andeq	r1, r0, r8, lsl #22
   116c4:	andeq	r1, r0, r1, ror #18
   116c8:	andeq	r1, r0, r1, lsl #18
   116cc:	andeq	r1, r0, fp, lsl #18
   116d0:	andeq	r1, r0, lr, lsr #17

000116d4 <avl_nova@@Base>:
   116d4:	push	{fp, lr}
   116d8:	mov	fp, sp
   116dc:	mov	r0, #4
   116e0:	bl	11158 <malloc@plt>
   116e4:	cmp	r0, #0
   116e8:	moveq	r0, #0
   116ec:	movne	r1, #0
   116f0:	strne	r1, [r0]
   116f4:	pop	{fp, pc}

000116f8 <avl_apaga@@Base>:
   116f8:	cmp	r0, #0
   116fc:	bxeq	lr
   11700:	push	{r4, sl, fp, lr}
   11704:	add	fp, sp, #8
   11708:	mov	r4, r0
   1170c:	ldr	r0, [r0]
   11710:	cmp	r0, #0
   11714:	beq	1172c <avl_apaga@@Base+0x34>
   11718:	ldr	r1, [r0]
   1171c:	bl	11738 <avl_remove_impl@@Base>
   11720:	str	r0, [r4]
   11724:	cmp	r0, #0
   11728:	bne	11718 <avl_apaga@@Base+0x20>
   1172c:	mov	r0, r4
   11730:	pop	{r4, sl, fp, lr}
   11734:	b	1111c <free@plt>

00011738 <avl_remove_impl@@Base>:
   11738:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1173c:	add	fp, sp, #24
   11740:	mov	r8, #0
   11744:	cmp	r0, #0
   11748:	beq	11b78 <avl_remove_impl@@Base+0x440>
   1174c:	ldr	r6, [r0]
   11750:	mov	r5, r0
   11754:	mov	r7, r1
   11758:	mov	r0, r1
   1175c:	mov	r1, r6
   11760:	bl	110ec <strcmp@plt>
   11764:	mov	r4, r5
   11768:	cmn	r0, #1
   1176c:	bgt	11778 <avl_remove_impl@@Base+0x40>
   11770:	ldr	r0, [r4, #4]!
   11774:	b	11784 <avl_remove_impl@@Base+0x4c>
   11778:	cmp	r0, #0
   1177c:	beq	119dc <avl_remove_impl@@Base+0x2a4>
   11780:	ldr	r0, [r4, #8]!
   11784:	mov	r1, r7
   11788:	bl	11738 <avl_remove_impl@@Base>
   1178c:	str	r0, [r4]
   11790:	ldr	r1, [r5, #4]
   11794:	cmp	r1, #0
   11798:	beq	117a4 <avl_remove_impl@@Base+0x6c>
   1179c:	ldr	r0, [r1, #12]
   117a0:	b	117a8 <avl_remove_impl@@Base+0x70>
   117a4:	mvn	r0, #0
   117a8:	ldr	r2, [r5, #8]
   117ac:	cmp	r2, #0
   117b0:	beq	117e0 <avl_remove_impl@@Base+0xa8>
   117b4:	ldr	r3, [r2, #12]
   117b8:	cmp	r0, r3
   117bc:	movgt	r3, r0
   117c0:	mov	r0, r5
   117c4:	add	r3, r3, #1
   117c8:	str	r3, [r0, #12]!
   117cc:	ldr	r3, [r2, #12]
   117d0:	cmp	r1, #0
   117d4:	beq	117fc <avl_remove_impl@@Base+0xc4>
   117d8:	ldr	r7, [r1, #12]
   117dc:	b	11800 <avl_remove_impl@@Base+0xc8>
   117e0:	orr	r0, r0, r0, asr #31
   117e4:	add	r3, r0, #1
   117e8:	mov	r0, r5
   117ec:	str	r3, [r0, #12]!
   117f0:	mvn	r3, #0
   117f4:	cmp	r1, #0
   117f8:	bne	117d8 <avl_remove_impl@@Base+0xa0>
   117fc:	mvn	r7, #0
   11800:	sub	r3, r3, r7
   11804:	cmp	r3, #2
   11808:	blt	118e8 <avl_remove_impl@@Base+0x1b0>
   1180c:	cmp	r2, #0
   11810:	beq	11a30 <avl_remove_impl@@Base+0x2f8>
   11814:	ldr	r7, [r2, #8]
   11818:	ldr	r8, [r2, #4]
   1181c:	mvn	r3, #0
   11820:	mvn	r1, #0
   11824:	cmp	r7, #0
   11828:	ldrne	r3, [r7, #12]
   1182c:	cmp	r8, #0
   11830:	ldrne	r1, [r8, #12]
   11834:	cmp	r3, r1
   11838:	bge	11a38 <avl_remove_impl@@Base+0x300>
   1183c:	ldr	r7, [r8, #8]
   11840:	str	r2, [r8, #8]
   11844:	mvn	r3, #0
   11848:	mvn	r1, #0
   1184c:	str	r7, [r2, #4]
   11850:	cmp	r7, #0
   11854:	ldrne	r3, [r7, #12]
   11858:	ldr	r7, [r2, #8]
   1185c:	cmp	r7, #0
   11860:	ldrne	r1, [r7, #12]
   11864:	mvn	r7, #0
   11868:	cmp	r3, r1
   1186c:	movgt	r1, r3
   11870:	add	r3, r1, #1
   11874:	mvn	r1, #0
   11878:	str	r3, [r2, #12]
   1187c:	ldr	r2, [r8, #4]
   11880:	cmp	r2, #0
   11884:	ldrne	r7, [r2, #12]
   11888:	str	r5, [r8, #4]
   1188c:	cmp	r7, r3
   11890:	movgt	r3, r7
   11894:	mvn	r7, #0
   11898:	add	r3, r3, #1
   1189c:	str	r3, [r8, #12]
   118a0:	str	r2, [r5, #8]
   118a4:	ldr	r3, [r5, #4]
   118a8:	cmp	r3, #0
   118ac:	ldrne	r1, [r3, #12]
   118b0:	cmp	r2, #0
   118b4:	mvn	r3, #0
   118b8:	ldrne	r7, [r2, #12]
   118bc:	cmp	r1, r7
   118c0:	movgt	r7, r1
   118c4:	add	r1, r7, #1
   118c8:	str	r1, [r0]
   118cc:	ldr	r0, [r8, #8]
   118d0:	cmp	r0, #0
   118d4:	ldrne	r3, [r0, #12]
   118d8:	cmp	r1, r3
   118dc:	movgt	r3, r1
   118e0:	add	r0, r3, #1
   118e4:	b	119c8 <avl_remove_impl@@Base+0x290>
   118e8:	cmn	r3, #2
   118ec:	bgt	119d4 <avl_remove_impl@@Base+0x29c>
   118f0:	cmp	r1, #0
   118f4:	beq	11a9c <avl_remove_impl@@Base+0x364>
   118f8:	ldr	r8, [r1, #8]
   118fc:	ldr	r7, [r1, #4]
   11900:	mvn	r3, #0
   11904:	mvn	r2, #0
   11908:	cmp	r8, #0
   1190c:	ldrne	r3, [r8, #12]
   11910:	cmp	r7, #0
   11914:	ldrne	r2, [r7, #12]
   11918:	cmp	r3, r2
   1191c:	ble	11aa4 <avl_remove_impl@@Base+0x36c>
   11920:	ldr	r3, [r8, #4]
   11924:	str	r1, [r8, #4]
   11928:	mvn	r7, #0
   1192c:	mvn	r2, #0
   11930:	str	r3, [r1, #8]
   11934:	ldr	r6, [r1, #4]
   11938:	cmp	r6, #0
   1193c:	ldrne	r7, [r6, #12]
   11940:	cmp	r3, #0
   11944:	ldrne	r2, [r3, #12]
   11948:	cmp	r7, r2
   1194c:	movgt	r2, r7
   11950:	mvn	r7, #0
   11954:	add	r3, r2, #1
   11958:	str	r3, [r1, #12]
   1195c:	mvn	r1, #0
   11960:	ldr	r2, [r8, #8]
   11964:	cmp	r2, #0
   11968:	ldrne	r7, [r2, #12]
   1196c:	str	r5, [r8, #8]
   11970:	cmp	r3, r7
   11974:	movgt	r7, r3
   11978:	cmp	r2, #0
   1197c:	add	r3, r7, #1
   11980:	str	r3, [r8, #12]
   11984:	str	r2, [r5, #4]
   11988:	mvn	r3, #0
   1198c:	ldr	r7, [r5, #8]
   11990:	ldrne	r1, [r2, #12]
   11994:	mvn	r2, #0
   11998:	cmp	r7, #0
   1199c:	ldrne	r3, [r7, #12]
   119a0:	cmp	r1, r3
   119a4:	movgt	r3, r1
   119a8:	add	r1, r3, #1
   119ac:	str	r1, [r0]
   119b0:	ldr	r0, [r8, #4]
   119b4:	cmp	r0, #0
   119b8:	ldrne	r2, [r0, #12]
   119bc:	cmp	r2, r1
   119c0:	movgt	r1, r2
   119c4:	add	r0, r1, #1
   119c8:	str	r0, [r8, #12]
   119cc:	mov	r0, r8
   119d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119d4:	mov	r0, r5
   119d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119dc:	ldr	r0, [r4, #8]!
   119e0:	ldr	r7, [r4, #-4]
   119e4:	cmp	r7, #0
   119e8:	beq	11aec <avl_remove_impl@@Base+0x3b4>
   119ec:	cmp	r0, #0
   119f0:	beq	11af8 <avl_remove_impl@@Base+0x3c0>
   119f4:	mov	r7, r0
   119f8:	ldr	r0, [r0, #4]
   119fc:	cmp	r0, #0
   11a00:	bne	119f4 <avl_remove_impl@@Base+0x2bc>
   11a04:	ldr	r0, [r7]
   11a08:	bl	1117c <strlen@plt>
   11a0c:	add	r1, r0, #1
   11a10:	mov	r0, r6
   11a14:	bl	11134 <realloc@plt>
   11a18:	str	r0, [r5]
   11a1c:	ldr	r1, [r7]
   11a20:	bl	11140 <strcpy@plt>
   11a24:	ldr	r1, [r7]
   11a28:	ldr	r0, [r5, #8]
   11a2c:	b	11788 <avl_remove_impl@@Base+0x50>
   11a30:	mov	r1, #4
   11a34:	ldr	r8, [r1]
   11a38:	str	r5, [r2, #4]
   11a3c:	str	r8, [r5, #8]
   11a40:	mvn	r3, #0
   11a44:	mvn	r1, #0
   11a48:	ldr	r7, [r5, #4]
   11a4c:	cmp	r7, #0
   11a50:	ldrne	r3, [r7, #12]
   11a54:	cmp	r8, #0
   11a58:	ldrne	r1, [r8, #12]
   11a5c:	cmp	r3, r1
   11a60:	movgt	r1, r3
   11a64:	add	r1, r1, #1
   11a68:	str	r1, [r0]
   11a6c:	ldr	r0, [r2, #8]
   11a70:	cmp	r0, #0
   11a74:	beq	11a80 <avl_remove_impl@@Base+0x348>
   11a78:	ldr	r0, [r0, #12]
   11a7c:	b	11a84 <avl_remove_impl@@Base+0x34c>
   11a80:	mvn	r0, #0
   11a84:	cmp	r1, r0
   11a88:	movgt	r0, r1
   11a8c:	add	r0, r0, #1
   11a90:	str	r0, [r2, #12]
   11a94:	mov	r0, r2
   11a98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a9c:	mov	r2, #8
   11aa0:	ldr	r8, [r2]
   11aa4:	str	r5, [r1, #8]
   11aa8:	str	r8, [r5, #4]
   11aac:	cmp	r8, #0
   11ab0:	mvn	r3, #0
   11ab4:	mvn	r2, #0
   11ab8:	ldr	r7, [r5, #8]
   11abc:	ldrne	r3, [r8, #12]
   11ac0:	cmp	r7, #0
   11ac4:	ldrne	r2, [r7, #12]
   11ac8:	cmp	r3, r2
   11acc:	movgt	r2, r3
   11ad0:	add	r2, r2, #1
   11ad4:	str	r2, [r0]
   11ad8:	ldr	r0, [r1, #4]
   11adc:	cmp	r0, #0
   11ae0:	beq	11b38 <avl_remove_impl@@Base+0x400>
   11ae4:	ldr	r0, [r0, #12]
   11ae8:	b	11b3c <avl_remove_impl@@Base+0x404>
   11aec:	cmp	r0, #0
   11af0:	mov	r7, r0
   11af4:	beq	11b58 <avl_remove_impl@@Base+0x420>
   11af8:	ldr	r0, [r7]
   11afc:	bl	1117c <strlen@plt>
   11b00:	add	r1, r0, #1
   11b04:	mov	r0, r6
   11b08:	bl	11134 <realloc@plt>
   11b0c:	str	r0, [r5]
   11b10:	ldr	r1, [r7]
   11b14:	bl	11140 <strcpy@plt>
   11b18:	ldr	r0, [r7, #4]
   11b1c:	str	r0, [r5, #4]
   11b20:	ldr	r0, [r7, #8]
   11b24:	str	r0, [r5, #8]
   11b28:	ldr	r0, [r7, #12]
   11b2c:	str	r0, [r5, #12]
   11b30:	ldr	r6, [r7]
   11b34:	b	11b60 <avl_remove_impl@@Base+0x428>
   11b38:	mvn	r0, #0
   11b3c:	cmp	r0, r2
   11b40:	mov	r8, r1
   11b44:	movgt	r2, r0
   11b48:	add	r0, r2, #1
   11b4c:	str	r0, [r1, #12]
   11b50:	mov	r0, r8
   11b54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b58:	mov	r7, r5
   11b5c:	mov	r5, #0
   11b60:	mov	r0, r6
   11b64:	bl	1111c <free@plt>
   11b68:	mov	r0, r7
   11b6c:	bl	1111c <free@plt>
   11b70:	cmp	r5, #0
   11b74:	bne	11790 <avl_remove_impl@@Base+0x58>
   11b78:	mov	r0, r8
   11b7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011b80 <avl_pesquisa@@Base>:
   11b80:	push	{r4, r5, r6, sl, fp, lr}
   11b84:	add	fp, sp, #16
   11b88:	cmp	r0, #0
   11b8c:	mov	r4, #0
   11b90:	movne	r5, r1
   11b94:	cmpne	r1, #0
   11b98:	beq	11bd8 <avl_pesquisa@@Base+0x58>
   11b9c:	b	11ba4 <avl_pesquisa@@Base+0x24>
   11ba0:	add	r0, r6, #4
   11ba4:	ldr	r6, [r0]
   11ba8:	cmp	r6, #0
   11bac:	beq	11bd8 <avl_pesquisa@@Base+0x58>
   11bb0:	ldr	r1, [r6]
   11bb4:	mov	r0, r5
   11bb8:	bl	110ec <strcmp@plt>
   11bbc:	cmn	r0, #1
   11bc0:	ble	11ba0 <avl_pesquisa@@Base+0x20>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11bd4 <avl_pesquisa@@Base+0x54>
   11bcc:	add	r0, r6, #8
   11bd0:	b	11ba4 <avl_pesquisa@@Base+0x24>
   11bd4:	mov	r4, r6
   11bd8:	mov	r0, r4
   11bdc:	pop	{r4, r5, r6, sl, fp, pc}

00011be0 <avl_pesquisa_impl@@Base>:
   11be0:	push	{r4, r5, r6, sl, fp, lr}
   11be4:	add	fp, sp, #16
   11be8:	mov	r4, #0
   11bec:	cmp	r0, #0
   11bf0:	beq	11c38 <avl_pesquisa_impl@@Base+0x58>
   11bf4:	mov	r5, r1
   11bf8:	mov	r6, r0
   11bfc:	b	11c10 <avl_pesquisa_impl@@Base+0x30>
   11c00:	add	r0, r6, #4
   11c04:	ldr	r6, [r0]
   11c08:	cmp	r6, #0
   11c0c:	beq	11c38 <avl_pesquisa_impl@@Base+0x58>
   11c10:	ldr	r1, [r6]
   11c14:	mov	r0, r5
   11c18:	bl	110ec <strcmp@plt>
   11c1c:	cmn	r0, #1
   11c20:	ble	11c00 <avl_pesquisa_impl@@Base+0x20>
   11c24:	cmp	r0, #0
   11c28:	beq	11c34 <avl_pesquisa_impl@@Base+0x54>
   11c2c:	add	r0, r6, #8
   11c30:	b	11c04 <avl_pesquisa_impl@@Base+0x24>
   11c34:	mov	r4, r6
   11c38:	mov	r0, r4
   11c3c:	pop	{r4, r5, r6, sl, fp, pc}

00011c40 <avl_insere@@Base>:
   11c40:	push	{r4, sl, fp, lr}
   11c44:	add	fp, sp, #8
   11c48:	mov	r4, r0
   11c4c:	mvn	r0, #0
   11c50:	cmp	r4, #0
   11c54:	cmpne	r1, #0
   11c58:	bne	11c60 <avl_insere@@Base+0x20>
   11c5c:	pop	{r4, sl, fp, pc}
   11c60:	ldr	r0, [r4]
   11c64:	bl	11c74 <avl_insere_impl@@Base>
   11c68:	str	r0, [r4]
   11c6c:	mov	r0, #0
   11c70:	pop	{r4, sl, fp, pc}

00011c74 <avl_insere_impl@@Base>:
   11c74:	push	{r4, r5, r6, sl, fp, lr}
   11c78:	add	fp, sp, #16
   11c7c:	mov	r6, r1
   11c80:	cmp	r0, #0
   11c84:	beq	11cc0 <avl_insere_impl@@Base+0x4c>
   11c88:	ldr	r1, [r0]
   11c8c:	mov	r4, r0
   11c90:	mov	r0, r6
   11c94:	bl	110ec <strcmp@plt>
   11c98:	cmn	r0, #1
   11c9c:	bgt	11d00 <avl_insere_impl@@Base+0x8c>
   11ca0:	ldr	r0, [r4, #4]
   11ca4:	mov	r1, r6
   11ca8:	bl	11c74 <avl_insere_impl@@Base>
   11cac:	str	r0, [r4, #4]
   11cb0:	cmp	r0, #0
   11cb4:	beq	11d24 <avl_insere_impl@@Base+0xb0>
   11cb8:	ldr	r1, [r0, #12]
   11cbc:	b	11d28 <avl_insere_impl@@Base+0xb4>
   11cc0:	mov	r0, #16
   11cc4:	bl	11158 <malloc@plt>
   11cc8:	mov	r5, r0
   11ccc:	mov	r0, r6
   11cd0:	bl	1117c <strlen@plt>
   11cd4:	add	r0, r0, #1
   11cd8:	bl	11158 <malloc@plt>
   11cdc:	mov	r1, r6
   11ce0:	str	r0, [r5]
   11ce4:	bl	11140 <strcpy@plt>
   11ce8:	mov	r0, #0
   11cec:	str	r0, [r5, #4]
   11cf0:	str	r0, [r5, #8]
   11cf4:	str	r0, [r5, #12]
   11cf8:	mov	r0, r5
   11cfc:	pop	{r4, r5, r6, sl, fp, pc}
   11d00:	cmp	r0, #0
   11d04:	beq	11f4c <avl_insere_impl@@Base+0x2d8>
   11d08:	ldr	r0, [r4, #8]
   11d0c:	mov	r1, r6
   11d10:	bl	11c74 <avl_insere_impl@@Base>
   11d14:	str	r0, [r4, #8]
   11d18:	ldr	r0, [r4, #4]
   11d1c:	cmp	r0, #0
   11d20:	bne	11cb8 <avl_insere_impl@@Base+0x44>
   11d24:	mvn	r1, #0
   11d28:	ldr	r2, [r4, #8]
   11d2c:	cmp	r2, #0
   11d30:	beq	11d60 <avl_insere_impl@@Base+0xec>
   11d34:	ldr	r3, [r2, #12]
   11d38:	cmp	r1, r3
   11d3c:	movgt	r3, r1
   11d40:	mov	r1, r4
   11d44:	add	r3, r3, #1
   11d48:	str	r3, [r1, #12]!
   11d4c:	ldr	r3, [r2, #12]
   11d50:	cmp	r0, #0
   11d54:	beq	11d7c <avl_insere_impl@@Base+0x108>
   11d58:	ldr	r6, [r0, #12]
   11d5c:	b	11d80 <avl_insere_impl@@Base+0x10c>
   11d60:	orr	r1, r1, r1, asr #31
   11d64:	add	r3, r1, #1
   11d68:	mov	r1, r4
   11d6c:	str	r3, [r1, #12]!
   11d70:	mvn	r3, #0
   11d74:	cmp	r0, #0
   11d78:	bne	11d58 <avl_insere_impl@@Base+0xe4>
   11d7c:	mvn	r6, #0
   11d80:	sub	r3, r3, r6
   11d84:	cmp	r3, #2
   11d88:	blt	11e68 <avl_insere_impl@@Base+0x1f4>
   11d8c:	cmp	r2, #0
   11d90:	beq	11f54 <avl_insere_impl@@Base+0x2e0>
   11d94:	ldr	r6, [r2, #8]
   11d98:	ldr	r5, [r2, #4]
   11d9c:	mvn	r3, #0
   11da0:	mvn	r0, #0
   11da4:	cmp	r6, #0
   11da8:	ldrne	r3, [r6, #12]
   11dac:	cmp	r5, #0
   11db0:	ldrne	r0, [r5, #12]
   11db4:	cmp	r3, r0
   11db8:	bge	11f5c <avl_insere_impl@@Base+0x2e8>
   11dbc:	ldr	r6, [r5, #8]
   11dc0:	str	r2, [r5, #8]
   11dc4:	mvn	r3, #0
   11dc8:	mvn	r0, #0
   11dcc:	str	r6, [r2, #4]
   11dd0:	cmp	r6, #0
   11dd4:	ldrne	r3, [r6, #12]
   11dd8:	ldr	r6, [r2, #8]
   11ddc:	cmp	r6, #0
   11de0:	ldrne	r0, [r6, #12]
   11de4:	mvn	r6, #0
   11de8:	cmp	r3, r0
   11dec:	movgt	r0, r3
   11df0:	add	r3, r0, #1
   11df4:	mvn	r0, #0
   11df8:	str	r3, [r2, #12]
   11dfc:	ldr	r2, [r5, #4]
   11e00:	cmp	r2, #0
   11e04:	ldrne	r6, [r2, #12]
   11e08:	str	r4, [r5, #4]
   11e0c:	cmp	r6, r3
   11e10:	movgt	r3, r6
   11e14:	mvn	r6, #0
   11e18:	add	r3, r3, #1
   11e1c:	str	r3, [r5, #12]
   11e20:	str	r2, [r4, #8]
   11e24:	ldr	r3, [r4, #4]
   11e28:	cmp	r3, #0
   11e2c:	ldrne	r0, [r3, #12]
   11e30:	cmp	r2, #0
   11e34:	mvn	r3, #0
   11e38:	ldrne	r6, [r2, #12]
   11e3c:	cmp	r0, r6
   11e40:	movgt	r6, r0
   11e44:	add	r0, r6, #1
   11e48:	str	r0, [r1]
   11e4c:	ldr	r1, [r5, #8]
   11e50:	cmp	r1, #0
   11e54:	ldrne	r3, [r1, #12]
   11e58:	cmp	r0, r3
   11e5c:	movgt	r3, r0
   11e60:	add	r0, r3, #1
   11e64:	b	11cf4 <avl_insere_impl@@Base+0x80>
   11e68:	cmn	r3, #2
   11e6c:	bgt	11f4c <avl_insere_impl@@Base+0x2d8>
   11e70:	cmp	r0, #0
   11e74:	beq	11fc0 <avl_insere_impl@@Base+0x34c>
   11e78:	ldr	r5, [r0, #8]
   11e7c:	ldr	r6, [r0, #4]
   11e80:	mvn	r3, #0
   11e84:	mvn	r2, #0
   11e88:	cmp	r5, #0
   11e8c:	ldrne	r3, [r5, #12]
   11e90:	cmp	r6, #0
   11e94:	ldrne	r2, [r6, #12]
   11e98:	cmp	r3, r2
   11e9c:	ble	11fc8 <avl_insere_impl@@Base+0x354>
   11ea0:	ldr	r3, [r5, #4]
   11ea4:	str	r0, [r5, #4]
   11ea8:	mvn	r6, #0
   11eac:	mvn	r2, #0
   11eb0:	str	r3, [r0, #8]
   11eb4:	ldr	ip, [r0, #4]
   11eb8:	cmp	ip, #0
   11ebc:	ldrne	r6, [ip, #12]
   11ec0:	cmp	r3, #0
   11ec4:	ldrne	r2, [r3, #12]
   11ec8:	cmp	r6, r2
   11ecc:	movgt	r2, r6
   11ed0:	mvn	r6, #0
   11ed4:	add	r3, r2, #1
   11ed8:	str	r3, [r0, #12]
   11edc:	mvn	r0, #0
   11ee0:	ldr	r2, [r5, #8]
   11ee4:	cmp	r2, #0
   11ee8:	ldrne	r6, [r2, #12]
   11eec:	str	r4, [r5, #8]
   11ef0:	cmp	r3, r6
   11ef4:	movgt	r6, r3
   11ef8:	cmp	r2, #0
   11efc:	add	r3, r6, #1
   11f00:	str	r3, [r5, #12]
   11f04:	str	r2, [r4, #4]
   11f08:	mvn	r3, #0
   11f0c:	ldr	r6, [r4, #8]
   11f10:	ldrne	r0, [r2, #12]
   11f14:	mvn	r2, #0
   11f18:	cmp	r6, #0
   11f1c:	ldrne	r3, [r6, #12]
   11f20:	cmp	r0, r3
   11f24:	movgt	r3, r0
   11f28:	add	r0, r3, #1
   11f2c:	str	r0, [r1]
   11f30:	ldr	r1, [r5, #4]
   11f34:	cmp	r1, #0
   11f38:	ldrne	r2, [r1, #12]
   11f3c:	cmp	r2, r0
   11f40:	movgt	r0, r2
   11f44:	add	r0, r0, #1
   11f48:	b	11cf4 <avl_insere_impl@@Base+0x80>
   11f4c:	mov	r0, r4
   11f50:	pop	{r4, r5, r6, sl, fp, pc}
   11f54:	mov	r0, #4
   11f58:	ldr	r5, [r0]
   11f5c:	str	r4, [r2, #4]
   11f60:	str	r5, [r4, #8]
   11f64:	mvn	r3, #0
   11f68:	mvn	r0, #0
   11f6c:	ldr	r6, [r4, #4]
   11f70:	cmp	r6, #0
   11f74:	ldrne	r3, [r6, #12]
   11f78:	cmp	r5, #0
   11f7c:	ldrne	r0, [r5, #12]
   11f80:	cmp	r3, r0
   11f84:	movgt	r0, r3
   11f88:	add	r0, r0, #1
   11f8c:	str	r0, [r1]
   11f90:	ldr	r1, [r2, #8]
   11f94:	cmp	r1, #0
   11f98:	beq	11fa4 <avl_insere_impl@@Base+0x330>
   11f9c:	ldr	r1, [r1, #12]
   11fa0:	b	11fa8 <avl_insere_impl@@Base+0x334>
   11fa4:	mvn	r1, #0
   11fa8:	cmp	r0, r1
   11fac:	movgt	r1, r0
   11fb0:	add	r0, r1, #1
   11fb4:	str	r0, [r2, #12]
   11fb8:	mov	r0, r2
   11fbc:	pop	{r4, r5, r6, sl, fp, pc}
   11fc0:	mov	r2, #8
   11fc4:	ldr	r5, [r2]
   11fc8:	str	r4, [r0, #8]
   11fcc:	str	r5, [r4, #4]
   11fd0:	cmp	r5, #0
   11fd4:	mvn	r3, #0
   11fd8:	mvn	r2, #0
   11fdc:	ldr	r6, [r4, #8]
   11fe0:	ldrne	r3, [r5, #12]
   11fe4:	cmp	r6, #0
   11fe8:	ldrne	r2, [r6, #12]
   11fec:	cmp	r3, r2
   11ff0:	movgt	r2, r3
   11ff4:	add	r2, r2, #1
   11ff8:	str	r2, [r1]
   11ffc:	ldr	r1, [r0, #4]
   12000:	cmp	r1, #0
   12004:	beq	12010 <avl_insere_impl@@Base+0x39c>
   12008:	ldr	r1, [r1, #12]
   1200c:	b	12014 <avl_insere_impl@@Base+0x3a0>
   12010:	mvn	r1, #0
   12014:	cmp	r1, r2
   12018:	movgt	r2, r1
   1201c:	add	r1, r2, #1
   12020:	str	r1, [r0, #12]
   12024:	pop	{r4, r5, r6, sl, fp, pc}

00012028 <avl_remove@@Base>:
   12028:	push	{r4, sl, fp, lr}
   1202c:	add	fp, sp, #8
   12030:	mov	r4, r0
   12034:	mvn	r0, #0
   12038:	cmp	r4, #0
   1203c:	cmpne	r1, #0
   12040:	bne	12048 <avl_remove@@Base+0x20>
   12044:	pop	{r4, sl, fp, pc}
   12048:	ldr	r0, [r4]
   1204c:	bl	11738 <avl_remove_impl@@Base>
   12050:	str	r0, [r4]
   12054:	mov	r0, #0
   12058:	pop	{r4, sl, fp, pc}

0001205c <avl_min@@Base>:
   1205c:	cmp	r0, #0
   12060:	moveq	r0, #0
   12064:	bxeq	lr
   12068:	mov	r1, r0
   1206c:	ldr	r0, [r0, #4]
   12070:	cmp	r0, #0
   12074:	bne	12068 <avl_min@@Base+0xc>
   12078:	ldr	r0, [r1]
   1207c:	bx	lr

00012080 <avl_no_valormin@@Base>:
   12080:	mov	r1, r0
   12084:	ldr	r0, [r0, #4]
   12088:	cmp	r0, #0
   1208c:	bne	12080 <avl_no_valormin@@Base>
   12090:	mov	r0, r1
   12094:	bx	lr

00012098 <avl_max@@Base>:
   12098:	cmp	r0, #0
   1209c:	moveq	r0, #0
   120a0:	bxeq	lr
   120a4:	mov	r1, r0
   120a8:	ldr	r0, [r0, #8]
   120ac:	cmp	r0, #0
   120b0:	bne	120a4 <avl_max@@Base+0xc>
   120b4:	ldr	r0, [r1]
   120b8:	bx	lr

000120bc <avl_no_valormax@@Base>:
   120bc:	mov	r1, r0
   120c0:	ldr	r0, [r0, #8]
   120c4:	cmp	r0, #0
   120c8:	bne	120bc <avl_no_valormax@@Base>
   120cc:	mov	r0, r1
   120d0:	bx	lr

000120d4 <avl_imprime@@Base>:
   120d4:	cmp	r0, #0
   120d8:	bxeq	lr
   120dc:	push	{fp, lr}
   120e0:	mov	fp, sp
   120e4:	bl	120f4 <avl_preordem_impl@@Base>
   120e8:	mov	r0, #10
   120ec:	pop	{fp, lr}
   120f0:	b	11188 <putchar@plt>

000120f4 <avl_preordem_impl@@Base>:
   120f4:	push	{r4, r5, fp, lr}
   120f8:	add	fp, sp, #8
   120fc:	cmp	r0, #0
   12100:	popeq	{r4, r5, fp, pc}
   12104:	ldr	r5, [pc, #40]	; 12134 <avl_preordem_impl@@Base+0x40>
   12108:	mov	r4, r0
   1210c:	add	r5, pc, r5
   12110:	ldr	r1, [r4]
   12114:	mov	r0, r5
   12118:	bl	110f8 <printf@plt>
   1211c:	ldr	r0, [r4, #4]
   12120:	bl	120f4 <avl_preordem_impl@@Base>
   12124:	ldr	r4, [r4, #8]
   12128:	cmp	r4, #0
   1212c:	bne	12110 <avl_preordem_impl@@Base+0x1c>
   12130:	pop	{r4, r5, fp, pc}
   12134:	andeq	r0, r0, r0, lsl #27

00012138 <avl_altura@@Base>:
   12138:	cmp	r0, #0
   1213c:	ldrne	r0, [r0, #12]
   12140:	mvneq	r0, #0
   12144:	bx	lr

00012148 <max@@Base>:
   12148:	cmp	r0, r1
   1214c:	movle	r0, r1
   12150:	bx	lr

00012154 <avl_novo_no@@Base>:
   12154:	push	{r4, r5, fp, lr}
   12158:	add	fp, sp, #8
   1215c:	mov	r4, r0
   12160:	mov	r0, #16
   12164:	bl	11158 <malloc@plt>
   12168:	mov	r5, r0
   1216c:	mov	r0, r4
   12170:	bl	1117c <strlen@plt>
   12174:	add	r0, r0, #1
   12178:	bl	11158 <malloc@plt>
   1217c:	mov	r1, r4
   12180:	str	r0, [r5]
   12184:	bl	11140 <strcpy@plt>
   12188:	mov	r0, #0
   1218c:	str	r0, [r5, #4]
   12190:	str	r0, [r5, #8]
   12194:	str	r0, [r5, #12]
   12198:	mov	r0, r5
   1219c:	pop	{r4, r5, fp, pc}

000121a0 <roda_direita@@Base>:
   121a0:	mov	r1, r0
   121a4:	ldr	r0, [r0, #4]
   121a8:	mvn	ip, #0
   121ac:	mvn	r2, #0
   121b0:	ldr	r3, [r0, #8]
   121b4:	str	r1, [r0, #8]
   121b8:	str	r3, [r1, #4]
   121bc:	cmp	r3, #0
   121c0:	ldrne	ip, [r3, #12]
   121c4:	ldr	r3, [r1, #8]
   121c8:	cmp	r3, #0
   121cc:	ldrne	r2, [r3, #12]
   121d0:	cmp	ip, r2
   121d4:	movgt	r2, ip
   121d8:	add	r2, r2, #1
   121dc:	str	r2, [r1, #12]
   121e0:	ldr	r1, [r0, #4]
   121e4:	cmp	r1, #0
   121e8:	beq	121f4 <roda_direita@@Base+0x54>
   121ec:	ldr	r1, [r1, #12]
   121f0:	b	121f8 <roda_direita@@Base+0x58>
   121f4:	mvn	r1, #0
   121f8:	cmp	r1, r2
   121fc:	movgt	r2, r1
   12200:	add	r1, r2, #1
   12204:	str	r1, [r0, #12]
   12208:	bx	lr

0001220c <roda_esquerda@@Base>:
   1220c:	push	{fp, lr}
   12210:	mov	fp, sp
   12214:	mov	r1, r0
   12218:	ldr	r0, [r0, #8]
   1221c:	mvn	r3, #0
   12220:	mvn	r2, #0
   12224:	ldr	ip, [r0, #4]
   12228:	str	r1, [r0, #4]
   1222c:	str	ip, [r1, #8]
   12230:	ldr	lr, [r1, #4]
   12234:	cmp	lr, #0
   12238:	ldrne	r3, [lr, #12]
   1223c:	cmp	ip, #0
   12240:	ldrne	r2, [ip, #12]
   12244:	cmp	r3, r2
   12248:	movgt	r2, r3
   1224c:	add	r2, r2, #1
   12250:	str	r2, [r1, #12]
   12254:	ldr	r1, [r0, #8]
   12258:	cmp	r1, #0
   1225c:	beq	12268 <roda_esquerda@@Base+0x5c>
   12260:	ldr	r1, [r1, #12]
   12264:	b	1226c <roda_esquerda@@Base+0x60>
   12268:	mvn	r1, #0
   1226c:	cmp	r2, r1
   12270:	movgt	r1, r2
   12274:	add	r1, r1, #1
   12278:	str	r1, [r0, #12]
   1227c:	pop	{fp, pc}

00012280 <calc_balanceamento@@Base>:
   12280:	cmp	r0, #0
   12284:	moveq	r0, #0
   12288:	bxeq	lr
   1228c:	ldr	r3, [r0, #8]
   12290:	ldr	r0, [r0, #4]
   12294:	mvn	r2, #0
   12298:	mvn	r1, #0
   1229c:	cmp	r3, #0
   122a0:	ldrne	r2, [r3, #12]
   122a4:	cmp	r0, #0
   122a8:	ldrne	r1, [r0, #12]
   122ac:	sub	r0, r2, r1
   122b0:	bx	lr

000122b4 <novo_str@@Base>:
   122b4:	push	{r4, r5, r6, sl, fp, lr}
   122b8:	add	fp, sp, #16
   122bc:	mov	r6, r0
   122c0:	mov	r0, #12
   122c4:	bl	11158 <malloc@plt>
   122c8:	mov	r5, #0
   122cc:	cmp	r0, #0
   122d0:	beq	1230c <novo_str@@Base+0x58>
   122d4:	mov	r4, r0
   122d8:	mov	r0, r6
   122dc:	bl	1117c <strlen@plt>
   122e0:	add	r0, r0, #1
   122e4:	bl	11158 <malloc@plt>
   122e8:	cmp	r0, #0
   122ec:	str	r0, [r4]
   122f0:	beq	12314 <novo_str@@Base+0x60>
   122f4:	mov	r1, r6
   122f8:	bl	11140 <strcpy@plt>
   122fc:	mov	r0, #0
   12300:	mov	r5, r4
   12304:	str	r0, [r4, #4]
   12308:	str	r0, [r4, #8]
   1230c:	mov	r0, r5
   12310:	pop	{r4, r5, r6, sl, fp, pc}
   12314:	mov	r0, r4
   12318:	bl	1111c <free@plt>
   1231c:	mov	r0, r5
   12320:	pop	{r4, r5, r6, sl, fp, pc}

00012324 <lista_nova@@Base>:
   12324:	push	{fp, lr}
   12328:	mov	fp, sp
   1232c:	mov	r0, #12
   12330:	bl	11158 <malloc@plt>
   12334:	cmp	r0, #0
   12338:	moveq	r0, #0
   1233c:	movne	r1, #0
   12340:	strne	r1, [r0]
   12344:	strne	r1, [r0, #4]
   12348:	strne	r1, [r0, #8]
   1234c:	pop	{fp, pc}

00012350 <lista_apaga@@Base>:
   12350:	cmp	r0, #0
   12354:	bxeq	lr
   12358:	push	{r4, r5, fp, lr}
   1235c:	add	fp, sp, #8
   12360:	mov	r4, r0
   12364:	ldr	r5, [r4]
   12368:	cmp	r5, #0
   1236c:	beq	1238c <lista_apaga@@Base+0x3c>
   12370:	ldr	r0, [r5, #4]
   12374:	str	r0, [r4]
   12378:	ldr	r0, [r5]
   1237c:	bl	1111c <free@plt>
   12380:	mov	r0, r5
   12384:	bl	1111c <free@plt>
   12388:	b	12364 <lista_apaga@@Base+0x14>
   1238c:	mov	r0, r4
   12390:	pop	{r4, r5, fp, lr}
   12394:	b	1111c <free@plt>

00012398 <lista_tamanho@@Base>:
   12398:	cmp	r0, #0
   1239c:	ldrne	r0, [r0, #8]
   123a0:	mvneq	r0, #0
   123a4:	bx	lr

000123a8 <lista_inicio@@Base>:
   123a8:	cmp	r0, #0
   123ac:	ldrne	r0, [r0]
   123b0:	moveq	r0, #0
   123b4:	bx	lr

000123b8 <lista_fim@@Base>:
   123b8:	cmp	r0, #0
   123bc:	ldrne	r0, [r0, #4]
   123c0:	moveq	r0, #0
   123c4:	bx	lr

000123c8 <lista_insere@@Base>:
   123c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   123cc:	add	fp, sp, #24
   123d0:	cmp	r0, #0
   123d4:	mov	r7, #0
   123d8:	movne	r6, r1
   123dc:	cmpne	r1, #0
   123e0:	bne	123ec <lista_insere@@Base+0x24>
   123e4:	mov	r0, r7
   123e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   123ec:	mov	r5, r0
   123f0:	mov	r0, #12
   123f4:	mov	r8, r2
   123f8:	bl	11158 <malloc@plt>
   123fc:	cmp	r0, #0
   12400:	beq	123e4 <lista_insere@@Base+0x1c>
   12404:	mov	r4, r0
   12408:	mov	r0, r6
   1240c:	bl	1117c <strlen@plt>
   12410:	add	r0, r0, #1
   12414:	bl	11158 <malloc@plt>
   12418:	cmp	r0, #0
   1241c:	str	r0, [r4]
   12420:	beq	12470 <lista_insere@@Base+0xa8>
   12424:	mov	r1, r6
   12428:	bl	11140 <strcpy@plt>
   1242c:	mov	r0, #0
   12430:	cmp	r8, #0
   12434:	str	r0, [r4, #4]
   12438:	str	r0, [r4, #8]
   1243c:	ldr	r1, [r5, #8]
   12440:	ldr	r0, [r5]
   12444:	add	r1, r1, #1
   12448:	str	r1, [r5, #8]
   1244c:	beq	12480 <lista_insere@@Base+0xb8>
   12450:	cmp	r0, r8
   12454:	beq	12498 <lista_insere@@Base+0xd0>
   12458:	ldr	r0, [r8, #8]
   1245c:	str	r8, [r4, #4]
   12460:	str	r0, [r4, #8]
   12464:	str	r4, [r0, #4]
   12468:	str	r4, [r8, #8]
   1246c:	b	124b0 <lista_insere@@Base+0xe8>
   12470:	mov	r0, r4
   12474:	bl	1111c <free@plt>
   12478:	mov	r0, r7
   1247c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12480:	cmp	r0, #0
   12484:	beq	124a8 <lista_insere@@Base+0xe0>
   12488:	ldr	r0, [r5, #4]
   1248c:	str	r0, [r4, #8]
   12490:	str	r4, [r0, #4]
   12494:	b	124ac <lista_insere@@Base+0xe4>
   12498:	str	r8, [r4, #4]
   1249c:	str	r4, [r8, #8]
   124a0:	str	r4, [r5]
   124a4:	b	124b0 <lista_insere@@Base+0xe8>
   124a8:	str	r4, [r5]
   124ac:	str	r4, [r5, #4]
   124b0:	mov	r7, r4
   124b4:	mov	r0, r7
   124b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000124bc <lista_remove@@Base>:
   124bc:	push	{r4, r5, fp, lr}
   124c0:	add	fp, sp, #8
   124c4:	cmp	r0, #0
   124c8:	mov	r4, #0
   124cc:	movne	r5, r1
   124d0:	cmpne	r1, #0
   124d4:	bne	124e0 <lista_remove@@Base+0x24>
   124d8:	mov	r0, r4
   124dc:	pop	{r4, r5, fp, pc}
   124e0:	ldr	r1, [r0, #8]
   124e4:	sub	r1, r1, #1
   124e8:	str	r1, [r0, #8]
   124ec:	ldr	r1, [r5, #8]
   124f0:	ldr	r4, [r5, #4]
   124f4:	cmp	r1, #0
   124f8:	beq	12508 <lista_remove@@Base+0x4c>
   124fc:	str	r4, [r1, #4]
   12500:	ldr	r4, [r5, #4]
   12504:	b	1250c <lista_remove@@Base+0x50>
   12508:	str	r4, [r0]
   1250c:	cmp	r4, #0
   12510:	add	r2, r4, #8
   12514:	addeq	r2, r0, #4
   12518:	str	r1, [r2]
   1251c:	ldr	r0, [r5]
   12520:	bl	1111c <free@plt>
   12524:	mov	r0, r5
   12528:	bl	1111c <free@plt>
   1252c:	mov	r0, r4
   12530:	pop	{r4, r5, fp, pc}

00012534 <lista_pesquisa@@Base>:
   12534:	push	{r4, r5, r6, sl, fp, lr}
   12538:	add	fp, sp, #16
   1253c:	cmp	r0, #0
   12540:	mov	r4, #0
   12544:	movne	r5, r1
   12548:	cmpne	r1, #0
   1254c:	bne	12558 <lista_pesquisa@@Base+0x24>
   12550:	mov	r0, r4
   12554:	pop	{r4, r5, r6, sl, fp, pc}
   12558:	cmp	r2, #1
   1255c:	bhi	12550 <lista_pesquisa@@Base+0x1c>
   12560:	cmp	r2, #0
   12564:	beq	12598 <lista_pesquisa@@Base+0x64>
   12568:	ldr	r6, [r0, #4]
   1256c:	cmp	r6, #0
   12570:	beq	12550 <lista_pesquisa@@Base+0x1c>
   12574:	ldr	r0, [r6]
   12578:	mov	r1, r5
   1257c:	bl	110ec <strcmp@plt>
   12580:	cmp	r0, #0
   12584:	beq	125c8 <lista_pesquisa@@Base+0x94>
   12588:	ldr	r6, [r6, #8]
   1258c:	cmp	r6, #0
   12590:	bne	12574 <lista_pesquisa@@Base+0x40>
   12594:	b	12550 <lista_pesquisa@@Base+0x1c>
   12598:	ldr	r6, [r0]
   1259c:	cmp	r6, #0
   125a0:	beq	12550 <lista_pesquisa@@Base+0x1c>
   125a4:	ldr	r0, [r6]
   125a8:	mov	r1, r5
   125ac:	bl	110ec <strcmp@plt>
   125b0:	cmp	r0, #0
   125b4:	beq	125c8 <lista_pesquisa@@Base+0x94>
   125b8:	ldr	r6, [r6, #4]
   125bc:	cmp	r6, #0
   125c0:	bne	125a4 <lista_pesquisa@@Base+0x70>
   125c4:	b	12550 <lista_pesquisa@@Base+0x1c>
   125c8:	mov	r4, r6
   125cc:	mov	r0, r4
   125d0:	pop	{r4, r5, r6, sl, fp, pc}

000125d4 <lista_ordena@@Base>:
   125d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125d8:	add	fp, sp, #24
   125dc:	cmp	r0, #0
   125e0:	beq	12658 <lista_ordena@@Base+0x84>
   125e4:	ldr	r1, [r0, #8]
   125e8:	mov	r8, #0
   125ec:	cmp	r1, #0
   125f0:	beq	1265c <lista_ordena@@Base+0x88>
   125f4:	ldr	r0, [r0]
   125f8:	mov	r5, r0
   125fc:	ldr	r4, [r5, #4]!
   12600:	cmp	r4, #0
   12604:	beq	1265c <lista_ordena@@Base+0x88>
   12608:	mov	r9, r0
   1260c:	mov	r7, r0
   12610:	mov	r6, r4
   12614:	ldr	r1, [r7]
   12618:	ldr	r0, [r6]
   1261c:	bl	110ec <strcmp@plt>
   12620:	cmp	r0, #0
   12624:	movmi	r7, r6
   12628:	ldr	r6, [r6, #4]
   1262c:	cmp	r6, #0
   12630:	bne	12614 <lista_ordena@@Base+0x40>
   12634:	cmp	r7, r9
   12638:	mov	r0, r4
   1263c:	beq	125f8 <lista_ordena@@Base+0x24>
   12640:	ldr	r0, [r9]
   12644:	ldr	r1, [r7]
   12648:	str	r1, [r9]
   1264c:	str	r0, [r7]
   12650:	ldr	r0, [r5]
   12654:	b	125f8 <lista_ordena@@Base+0x24>
   12658:	mvn	r8, #0
   1265c:	mov	r0, r8
   12660:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012664 <lista_inverte@@Base>:
   12664:	push	{fp, lr}
   12668:	mov	fp, sp
   1266c:	cmp	r0, #0
   12670:	beq	126cc <lista_inverte@@Base+0x68>
   12674:	ldr	r2, [r0, #8]
   12678:	mov	r1, #0
   1267c:	cmp	r2, #2
   12680:	blt	12700 <lista_inverte@@Base+0x9c>
   12684:	sub	r1, r2, #2
   12688:	cmp	r1, #0
   1268c:	ble	126d8 <lista_inverte@@Base+0x74>
   12690:	ldr	ip, [r0]
   12694:	ldr	r3, [ip, #4]
   12698:	mov	r2, r3
   1269c:	ldr	r3, [r3, #4]
   126a0:	subs	r1, r1, #1
   126a4:	ldr	lr, [r2, #8]
   126a8:	str	r3, [lr, #4]
   126ac:	ldr	r3, [r2, #4]
   126b0:	str	lr, [r3, #8]
   126b4:	str	ip, [r2, #4]
   126b8:	str	r2, [ip, #8]
   126bc:	mov	ip, r2
   126c0:	bne	12698 <lista_inverte@@Base+0x34>
   126c4:	str	r2, [r0]
   126c8:	b	126dc <lista_inverte@@Base+0x78>
   126cc:	mvn	r1, #0
   126d0:	mov	r0, r1
   126d4:	pop	{fp, pc}
   126d8:	ldr	r2, [r0]
   126dc:	ldr	r3, [r0, #4]
   126e0:	mov	r1, #0
   126e4:	ldr	ip, [r3, #8]
   126e8:	str	ip, [r0, #4]
   126ec:	str	r1, [ip, #4]
   126f0:	str	r2, [r3, #4]
   126f4:	str	r1, [r3, #8]
   126f8:	str	r3, [r2, #8]
   126fc:	str	r3, [r0]
   12700:	mov	r0, r1
   12704:	pop	{fp, pc}

00012708 <tabela_nova@@Base>:
   12708:	push	{r4, r5, r6, r7, fp, lr}
   1270c:	add	fp, sp, #16
   12710:	mov	r4, #0
   12714:	cmp	r0, #1
   12718:	blt	12764 <tabela_nova@@Base+0x5c>
   1271c:	mov	r6, r1
   12720:	cmp	r1, #0
   12724:	beq	12764 <tabela_nova@@Base+0x5c>
   12728:	mov	r5, r0
   1272c:	mov	r0, #12
   12730:	bl	11158 <malloc@plt>
   12734:	cmp	r0, #0
   12738:	beq	12764 <tabela_nova@@Base+0x5c>
   1273c:	mov	r7, r0
   12740:	mov	r0, r5
   12744:	mov	r1, #4
   12748:	bl	110e0 <calloc@plt>
   1274c:	cmp	r0, #0
   12750:	str	r0, [r7, #4]
   12754:	beq	1276c <tabela_nova@@Base+0x64>
   12758:	mov	r4, r7
   1275c:	str	r6, [r7]
   12760:	str	r5, [r7, #8]
   12764:	mov	r0, r4
   12768:	pop	{r4, r5, r6, r7, fp, pc}
   1276c:	mov	r0, r7
   12770:	bl	1111c <free@plt>
   12774:	mov	r0, r4
   12778:	pop	{r4, r5, r6, r7, fp, pc}

0001277c <tabela_apaga@@Base>:
   1277c:	cmp	r0, #0
   12780:	bxeq	lr
   12784:	push	{r4, r5, r6, r7, fp, lr}
   12788:	add	fp, sp, #16
   1278c:	mov	r4, r0
   12790:	ldr	r0, [r0, #4]
   12794:	ldr	r1, [r4, #8]
   12798:	cmp	r1, #1
   1279c:	blt	127e4 <tabela_apaga@@Base+0x68>
   127a0:	mov	r6, #0
   127a4:	b	127b4 <tabela_apaga@@Base+0x38>
   127a8:	add	r6, r6, #1
   127ac:	cmp	r6, r1
   127b0:	bge	127e4 <tabela_apaga@@Base+0x68>
   127b4:	ldr	r5, [r0, r6, lsl #2]
   127b8:	cmp	r5, #0
   127bc:	beq	127a8 <tabela_apaga@@Base+0x2c>
   127c0:	ldm	r5, {r0, r7}
   127c4:	bl	1111c <free@plt>
   127c8:	mov	r0, r5
   127cc:	bl	1111c <free@plt>
   127d0:	cmp	r7, #0
   127d4:	mov	r5, r7
   127d8:	bne	127c0 <tabela_apaga@@Base+0x44>
   127dc:	ldmib	r4, {r0, r1}
   127e0:	b	127a8 <tabela_apaga@@Base+0x2c>
   127e4:	bl	1111c <free@plt>
   127e8:	mov	r0, r4
   127ec:	pop	{r4, r5, r6, r7, fp, lr}
   127f0:	b	1111c <free@plt>

000127f4 <tabela_adiciona@@Base>:
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f8:	add	fp, sp, #28
   127fc:	sub	sp, sp, #4
   12800:	mvn	sl, #1
   12804:	cmp	r0, #0
   12808:	beq	12820 <tabela_adiciona@@Base+0x2c>
   1280c:	cmp	r1, #0
   12810:	mov	r7, r1
   12814:	movne	r9, r2
   12818:	cmpne	r2, #0
   1281c:	bne	1282c <tabela_adiciona@@Base+0x38>
   12820:	mov	r0, sl
   12824:	sub	sp, fp, #28
   12828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1282c:	ldr	r2, [r0]
   12830:	ldr	r1, [r0, #8]
   12834:	mov	r6, r0
   12838:	mov	r0, r7
   1283c:	blx	r2
   12840:	mov	r8, r0
   12844:	ldr	r0, [r6, #4]
   12848:	ldr	r4, [r0, r8, lsl #2]
   1284c:	cmp	r4, #0
   12850:	beq	12878 <tabela_adiciona@@Base+0x84>
   12854:	ldr	r5, [r4]
   12858:	mov	r1, r7
   1285c:	mov	r0, r5
   12860:	bl	110ec <strcmp@plt>
   12864:	cmp	r0, #0
   12868:	beq	128c8 <tabela_adiciona@@Base+0xd4>
   1286c:	ldr	r4, [r4, #4]
   12870:	cmp	r4, #0
   12874:	bne	12854 <tabela_adiciona@@Base+0x60>
   12878:	mov	r0, #8
   1287c:	bl	11158 <malloc@plt>
   12880:	cmp	r0, #0
   12884:	beq	12820 <tabela_adiciona@@Base+0x2c>
   12888:	mov	r5, r0
   1288c:	mov	r0, #125	; 0x7d
   12890:	bl	11158 <malloc@plt>
   12894:	cmp	r0, #0
   12898:	str	r0, [r5]
   1289c:	beq	12820 <tabela_adiciona@@Base+0x2c>
   128a0:	mov	r1, r7
   128a4:	bl	11140 <strcpy@plt>
   128a8:	add	r0, r0, #25
   128ac:	mov	r1, r9
   128b0:	bl	11140 <strcpy@plt>
   128b4:	ldr	r0, [r6, #4]
   128b8:	ldr	r1, [r0, r8, lsl #2]
   128bc:	str	r1, [r5, #4]
   128c0:	str	r5, [r0, r8, lsl #2]
   128c4:	b	128d4 <tabela_adiciona@@Base+0xe0>
   128c8:	add	r0, r5, #25
   128cc:	mov	r1, r9
   128d0:	bl	11140 <strcpy@plt>
   128d4:	mov	sl, #0
   128d8:	b	12820 <tabela_adiciona@@Base+0x2c>

000128dc <tabela_remove@@Base>:
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128e0:	add	fp, sp, #28
   128e4:	sub	sp, sp, #4
   128e8:	cmp	r0, #0
   128ec:	beq	1296c <tabela_remove@@Base+0x90>
   128f0:	mov	r6, r1
   128f4:	ldr	r2, [r0]
   128f8:	ldr	r1, [r0, #8]
   128fc:	mov	r4, r0
   12900:	mov	r0, r6
   12904:	blx	r2
   12908:	ldr	r9, [r4, #4]
   1290c:	mvn	sl, #2
   12910:	ldr	r7, [r9, r0, lsl #2]
   12914:	cmp	r7, #0
   12918:	beq	129a8 <tabela_remove@@Base+0xcc>
   1291c:	ldr	r5, [r7]
   12920:	mov	r8, r0
   12924:	mov	r1, r6
   12928:	mov	r0, r5
   1292c:	bl	110ec <strcmp@plt>
   12930:	cmp	r0, #0
   12934:	beq	12974 <tabela_remove@@Base+0x98>
   12938:	mov	r4, r7
   1293c:	ldr	r7, [r4, #4]
   12940:	cmp	r7, #0
   12944:	beq	129a8 <tabela_remove@@Base+0xcc>
   12948:	ldr	r5, [r7]
   1294c:	mov	r1, r6
   12950:	mov	r0, r5
   12954:	bl	110ec <strcmp@plt>
   12958:	cmp	r0, #0
   1295c:	mov	r0, r4
   12960:	mov	r4, r7
   12964:	bne	1293c <tabela_remove@@Base+0x60>
   12968:	b	12978 <tabela_remove@@Base+0x9c>
   1296c:	mvn	sl, #1
   12970:	b	129a8 <tabela_remove@@Base+0xcc>
   12974:	mov	r0, #0
   12978:	ldr	r1, [r7, #4]
   1297c:	cmp	r0, #0
   12980:	beq	1298c <tabela_remove@@Base+0xb0>
   12984:	str	r1, [r0, #4]
   12988:	b	12994 <tabela_remove@@Base+0xb8>
   1298c:	str	r1, [r9, r8, lsl #2]
   12990:	ldr	r5, [r7]
   12994:	mov	r0, r5
   12998:	bl	1111c <free@plt>
   1299c:	mov	r0, r7
   129a0:	bl	1111c <free@plt>
   129a4:	mov	sl, #0
   129a8:	mov	r0, sl
   129ac:	sub	sp, fp, #28
   129b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000129b4 <tabela_existe@@Base>:
   129b4:	push	{r4, r5, r6, sl, fp, lr}
   129b8:	add	fp, sp, #16
   129bc:	cmp	r0, #0
   129c0:	mvn	r5, #1
   129c4:	movne	r4, r1
   129c8:	cmpne	r1, #0
   129cc:	bne	129d8 <tabela_existe@@Base+0x24>
   129d0:	mov	r0, r5
   129d4:	pop	{r4, r5, r6, sl, fp, pc}
   129d8:	ldr	r2, [r0]
   129dc:	ldr	r1, [r0, #8]
   129e0:	mov	r6, r0
   129e4:	mov	r0, r4
   129e8:	blx	r2
   129ec:	ldr	r1, [r6, #4]
   129f0:	mvn	r5, #2
   129f4:	ldr	r6, [r1, r0, lsl #2]
   129f8:	cmp	r6, #0
   129fc:	beq	129d0 <tabela_existe@@Base+0x1c>
   12a00:	ldr	r0, [r6]
   12a04:	mov	r1, r4
   12a08:	bl	110ec <strcmp@plt>
   12a0c:	cmp	r0, #0
   12a10:	beq	12a24 <tabela_existe@@Base+0x70>
   12a14:	ldr	r6, [r6, #4]
   12a18:	cmp	r6, #0
   12a1c:	bne	12a00 <tabela_existe@@Base+0x4c>
   12a20:	b	129d0 <tabela_existe@@Base+0x1c>
   12a24:	mov	r5, #1
   12a28:	mov	r0, r5
   12a2c:	pop	{r4, r5, r6, sl, fp, pc}

00012a30 <tabela_valor@@Base>:
   12a30:	push	{r4, r5, r6, r7, fp, lr}
   12a34:	add	fp, sp, #16
   12a38:	mov	r4, #0
   12a3c:	cmp	r0, #0
   12a40:	beq	12a90 <tabela_valor@@Base+0x60>
   12a44:	mov	r5, r1
   12a48:	ldr	r2, [r0]
   12a4c:	ldr	r1, [r0, #8]
   12a50:	mov	r6, r0
   12a54:	mov	r0, r5
   12a58:	blx	r2
   12a5c:	ldr	r1, [r6, #4]
   12a60:	ldr	r7, [r1, r0, lsl #2]
   12a64:	cmp	r7, #0
   12a68:	beq	12a90 <tabela_valor@@Base+0x60>
   12a6c:	ldr	r6, [r7]
   12a70:	mov	r1, r5
   12a74:	mov	r0, r6
   12a78:	bl	110ec <strcmp@plt>
   12a7c:	cmp	r0, #0
   12a80:	beq	12a98 <tabela_valor@@Base+0x68>
   12a84:	ldr	r7, [r7, #4]
   12a88:	cmp	r7, #0
   12a8c:	bne	12a6c <tabela_valor@@Base+0x3c>
   12a90:	mov	r0, r4
   12a94:	pop	{r4, r5, r6, r7, fp, pc}
   12a98:	add	r4, r6, #25
   12a9c:	mov	r0, r4
   12aa0:	pop	{r4, r5, r6, r7, fp, pc}

00012aa4 <tabela_esvazia@@Base>:
   12aa4:	push	{r4, r5, r6, r7, fp, lr}
   12aa8:	add	fp, sp, #16
   12aac:	cmp	r0, #0
   12ab0:	beq	12b1c <tabela_esvazia@@Base+0x78>
   12ab4:	ldr	r1, [r0, #8]
   12ab8:	mov	r4, r0
   12abc:	cmp	r1, #1
   12ac0:	blt	12b24 <tabela_esvazia@@Base+0x80>
   12ac4:	mov	r6, #0
   12ac8:	b	12ae0 <tabela_esvazia@@Base+0x3c>
   12acc:	mov	r0, #0
   12ad0:	str	r0, [r2, r6, lsl #2]
   12ad4:	add	r6, r6, #1
   12ad8:	cmp	r6, r1
   12adc:	bge	12b18 <tabela_esvazia@@Base+0x74>
   12ae0:	ldr	r2, [r4, #4]
   12ae4:	ldr	r5, [r2, r6, lsl #2]
   12ae8:	cmp	r5, #0
   12aec:	beq	12acc <tabela_esvazia@@Base+0x28>
   12af0:	ldm	r5, {r0, r7}
   12af4:	bl	1111c <free@plt>
   12af8:	mov	r0, r5
   12afc:	bl	1111c <free@plt>
   12b00:	cmp	r7, #0
   12b04:	mov	r5, r7
   12b08:	bne	12af0 <tabela_esvazia@@Base+0x4c>
   12b0c:	ldr	r2, [r4, #4]
   12b10:	ldr	r1, [r4, #8]
   12b14:	b	12acc <tabela_esvazia@@Base+0x28>
   12b18:	pop	{r4, r5, r6, r7, fp, pc}
   12b1c:	mvn	r0, #1
   12b20:	pop	{r4, r5, r6, r7, fp, pc}
   12b24:	mov	r0, #0
   12b28:	pop	{r4, r5, r6, r7, fp, pc}

00012b2c <tabela_numelementos@@Base>:
   12b2c:	cmp	r0, #0
   12b30:	mvneq	r0, #1
   12b34:	bxeq	lr
   12b38:	ldr	r1, [r0, #8]
   12b3c:	cmp	r1, #1
   12b40:	movlt	r0, #0
   12b44:	bxlt	lr
   12b48:	ldr	ip, [r0, #4]
   12b4c:	mov	r0, #0
   12b50:	mov	r3, #0
   12b54:	b	12b64 <tabela_numelementos@@Base+0x38>
   12b58:	add	r3, r3, #1
   12b5c:	cmp	r3, r1
   12b60:	bxge	lr
   12b64:	ldr	r2, [ip, r3, lsl #2]
   12b68:	cmp	r2, #0
   12b6c:	beq	12b58 <tabela_numelementos@@Base+0x2c>
   12b70:	ldr	r2, [r2, #4]
   12b74:	add	r0, r0, #1
   12b78:	cmp	r2, #0
   12b7c:	bne	12b70 <tabela_numelementos@@Base+0x44>
   12b80:	b	12b58 <tabela_numelementos@@Base+0x2c>

00012b84 <tabela_elementos@@Base>:
   12b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b88:	add	fp, sp, #28
   12b8c:	sub	sp, sp, #4
   12b90:	cmp	r0, #0
   12b94:	beq	12c6c <tabela_elementos@@Base+0xe8>
   12b98:	ldr	r2, [r0, #8]
   12b9c:	mov	r5, r0
   12ba0:	cmp	r2, #1
   12ba4:	blt	12c74 <tabela_elementos@@Base+0xf0>
   12ba8:	ldr	r7, [r5, #4]
   12bac:	mov	r0, #0
   12bb0:	mov	r3, #0
   12bb4:	b	12bc4 <tabela_elementos@@Base+0x40>
   12bb8:	add	r3, r3, #1
   12bbc:	cmp	r3, r2
   12bc0:	beq	12be4 <tabela_elementos@@Base+0x60>
   12bc4:	ldr	r6, [r7, r3, lsl #2]
   12bc8:	cmp	r6, #0
   12bcc:	beq	12bb8 <tabela_elementos@@Base+0x34>
   12bd0:	ldr	r6, [r6, #4]
   12bd4:	add	r0, r0, #1
   12bd8:	cmp	r6, #0
   12bdc:	bne	12bd0 <tabela_elementos@@Base+0x4c>
   12be0:	b	12bb8 <tabela_elementos@@Base+0x34>
   12be4:	mov	r6, #0
   12be8:	cmp	r0, #1
   12bec:	str	r0, [r1]
   12bf0:	blt	12c80 <tabela_elementos@@Base+0xfc>
   12bf4:	mov	r1, #125	; 0x7d
   12bf8:	mul	r0, r0, r1
   12bfc:	bl	11158 <malloc@plt>
   12c00:	cmp	r0, #0
   12c04:	beq	12c80 <tabela_elementos@@Base+0xfc>
   12c08:	ldr	sl, [r5, #8]
   12c0c:	mov	r8, r0
   12c10:	cmp	sl, #1
   12c14:	blt	12c8c <tabela_elementos@@Base+0x108>
   12c18:	mov	r4, #0
   12c1c:	mov	r6, #0
   12c20:	b	12c30 <tabela_elementos@@Base+0xac>
   12c24:	add	r6, r6, #1
   12c28:	cmp	r6, sl
   12c2c:	bge	12c8c <tabela_elementos@@Base+0x108>
   12c30:	ldr	r9, [r7, r6, lsl #2]
   12c34:	cmp	r9, #0
   12c38:	beq	12c24 <tabela_elementos@@Base+0xa0>
   12c3c:	mov	r0, #125	; 0x7d
   12c40:	mla	r5, r4, r0, r8
   12c44:	ldr	r1, [r9]
   12c48:	mov	r0, r5
   12c4c:	mov	r2, #125	; 0x7d
   12c50:	bl	11128 <memcpy@plt>
   12c54:	ldr	r9, [r9, #4]
   12c58:	add	r5, r5, #125	; 0x7d
   12c5c:	add	r4, r4, #1
   12c60:	cmp	r9, #0
   12c64:	bne	12c44 <tabela_elementos@@Base+0xc0>
   12c68:	b	12c24 <tabela_elementos@@Base+0xa0>
   12c6c:	mvn	r0, #1
   12c70:	b	12c78 <tabela_elementos@@Base+0xf4>
   12c74:	mov	r0, #0
   12c78:	str	r0, [r1]
   12c7c:	mov	r6, #0
   12c80:	mov	r0, r6
   12c84:	sub	sp, fp, #28
   12c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c8c:	mov	r6, r8
   12c90:	b	12c80 <tabela_elementos@@Base+0xfc>

00012c94 <hash_krm@@Base>:
   12c94:	ldrb	r2, [r0]
   12c98:	cmp	r2, #0
   12c9c:	beq	12cbc <hash_krm@@Base+0x28>
   12ca0:	add	r3, r0, #1
   12ca4:	mov	r0, #7
   12ca8:	uxtab	r0, r0, r2
   12cac:	ldrb	r2, [r3], #1
   12cb0:	cmp	r2, #0
   12cb4:	bne	12ca8 <hash_krm@@Base+0x14>
   12cb8:	b	12cc0 <hash_krm@@Base+0x2c>
   12cbc:	mov	r0, #7
   12cc0:	udiv	r2, r0, r1
   12cc4:	mls	r0, r2, r1, r0
   12cc8:	bx	lr

00012ccc <hash_djbm@@Base>:
   12ccc:	ldrb	r2, [r0]
   12cd0:	cmp	r2, #0
   12cd4:	beq	12cfc <hash_djbm@@Base+0x30>
   12cd8:	add	r3, r0, #1
   12cdc:	movw	r0, #5347	; 0x14e3
   12ce0:	uxtb	r2, r2
   12ce4:	rsb	r0, r0, r0, lsl #5
   12ce8:	eor	r0, r0, r2
   12cec:	ldrb	r2, [r3], #1
   12cf0:	cmp	r2, #0
   12cf4:	bne	12ce0 <hash_djbm@@Base+0x14>
   12cf8:	b	12d00 <hash_djbm@@Base+0x34>
   12cfc:	movw	r0, #5347	; 0x14e3
   12d00:	udiv	r2, r0, r1
   12d04:	mls	r0, r2, r1, r0
   12d08:	bx	lr

00012d0c <mostraTabela@@Base>:
   12d0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d10:	add	fp, sp, #24
   12d14:	mov	r4, r0
   12d18:	cmp	r0, #0
   12d1c:	beq	12d68 <mostraTabela@@Base+0x5c>
   12d20:	ldr	r0, [r4, #8]
   12d24:	cmp	r0, #1
   12d28:	blt	12d70 <mostraTabela@@Base+0x64>
   12d2c:	ldr	r2, [r4, #4]
   12d30:	mov	r1, #0
   12d34:	mov	r3, #0
   12d38:	b	12d48 <mostraTabela@@Base+0x3c>
   12d3c:	add	r3, r3, #1
   12d40:	cmp	r3, r0
   12d44:	beq	12d74 <mostraTabela@@Base+0x68>
   12d48:	ldr	r7, [r2, r3, lsl #2]
   12d4c:	cmp	r7, #0
   12d50:	beq	12d3c <mostraTabela@@Base+0x30>
   12d54:	ldr	r7, [r7, #4]
   12d58:	add	r1, r1, #1
   12d5c:	cmp	r7, #0
   12d60:	bne	12d54 <mostraTabela@@Base+0x48>
   12d64:	b	12d3c <mostraTabela@@Base+0x30>
   12d68:	mvn	r1, #1
   12d6c:	b	12d74 <mostraTabela@@Base+0x68>
   12d70:	mov	r1, #0
   12d74:	ldr	r0, [pc, #152]	; 12e14 <mostraTabela@@Base+0x108>
   12d78:	add	r0, pc, r0
   12d7c:	bl	110f8 <printf@plt>
   12d80:	ldr	r0, [r4, #8]
   12d84:	cmp	r0, #1
   12d88:	blt	12e08 <mostraTabela@@Base+0xfc>
   12d8c:	ldr	r8, [pc, #132]	; 12e18 <mostraTabela@@Base+0x10c>
   12d90:	ldr	r7, [pc, #132]	; 12e1c <mostraTabela@@Base+0x110>
   12d94:	mov	r5, #0
   12d98:	add	r8, pc, r8
   12d9c:	add	r7, pc, r7
   12da0:	b	12dbc <mostraTabela@@Base+0xb0>
   12da4:	mov	r0, #10
   12da8:	bl	11188 <putchar@plt>
   12dac:	ldr	r0, [r4, #8]
   12db0:	add	r5, r5, #1
   12db4:	cmp	r5, r0
   12db8:	bge	12e08 <mostraTabela@@Base+0xfc>
   12dbc:	ldr	r1, [r4, #4]
   12dc0:	ldr	r1, [r1, r5, lsl #2]
   12dc4:	cmp	r1, #0
   12dc8:	beq	12db0 <mostraTabela@@Base+0xa4>
   12dcc:	mov	r0, r8
   12dd0:	mov	r1, r5
   12dd4:	bl	110f8 <printf@plt>
   12dd8:	ldr	r0, [r4, #4]
   12ddc:	ldr	r6, [r0, r5, lsl #2]
   12de0:	cmp	r6, #0
   12de4:	beq	12da4 <mostraTabela@@Base+0x98>
   12de8:	ldr	r1, [r6]
   12dec:	mov	r0, r7
   12df0:	add	r2, r1, #25
   12df4:	bl	110f8 <printf@plt>
   12df8:	ldr	r6, [r6, #4]
   12dfc:	cmp	r6, #0
   12e00:	bne	12de8 <mostraTabela@@Base+0xdc>
   12e04:	b	12da4 <mostraTabela@@Base+0x98>
   12e08:	mov	r0, #10
   12e0c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e10:	b	11188 <putchar@plt>
   12e14:	muleq	r0, fp, r3
   12e18:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   12e1c:	andeq	r0, r0, r2, lsr #7

00012e20 <__libc_csu_init@@Base>:
   12e20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e24:	mov	r7, r0
   12e28:	ldr	r6, [pc, #72]	; 12e78 <__libc_csu_init@@Base+0x58>
   12e2c:	ldr	r5, [pc, #72]	; 12e7c <__libc_csu_init@@Base+0x5c>
   12e30:	add	r6, pc, r6
   12e34:	add	r5, pc, r5
   12e38:	sub	r6, r6, r5
   12e3c:	mov	r8, r1
   12e40:	mov	r9, r2
   12e44:	bl	110c0 <calloc@plt-0x20>
   12e48:	asrs	r6, r6, #2
   12e4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e50:	mov	r4, #0
   12e54:	add	r4, r4, #1
   12e58:	ldr	r3, [r5], #4
   12e5c:	mov	r2, r9
   12e60:	mov	r1, r8
   12e64:	mov	r0, r7
   12e68:	blx	r3
   12e6c:	cmp	r6, r4
   12e70:	bne	12e54 <__libc_csu_init@@Base+0x34>
   12e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e78:	ldrdeq	r1, [r1], -r4
   12e7c:	andeq	r1, r1, ip, asr #1

00012e80 <__libc_csu_fini@@Base>:
   12e80:	bx	lr

Disassembly of section .fini:

00012e84 <.fini>:
   12e84:	push	{r3, lr}
   12e88:	pop	{r3, pc}
