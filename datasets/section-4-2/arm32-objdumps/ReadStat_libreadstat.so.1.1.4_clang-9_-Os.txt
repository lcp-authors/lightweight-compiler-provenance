
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

0000474c <_init>:
    474c:	push	{r3, lr}
    4750:	bl	4f28 <call_weak_fn>
    4754:	pop	{r3, pc}

Disassembly of section .plt:

00004758 <.plt>:
    4758:	push	{lr}		; (str lr, [sp, #-4]!)
    475c:	ldr	lr, [pc, #4]	; 4768 <.plt+0x10>
    4760:	add	lr, pc, lr
    4764:	ldr	pc, [lr, #8]!
    4768:	.word	0x0003f898

0000476c <sas_validate_name@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #258048	; 0x3f000
    4774:	ldr	pc, [ip, #2200]!	; 0x898

00004778 <calloc@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #258048	; 0x3f000
    4780:	ldr	pc, [ip, #2192]!	; 0x890

00004784 <readstat_set_seek_handler@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #258048	; 0x3f000
    478c:	ldr	pc, [ip, #2184]!	; 0x888

00004790 <readstat_set_open_handler@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #258048	; 0x3f000
    4798:	ldr	pc, [ip, #2176]!	; 0x880

0000479c <byteswap8@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #258048	; 0x3f000
    47a4:	ldr	pc, [ip, #2168]!	; 0x878

000047a8 <raise@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #258048	; 0x3f000
    47b0:	ldr	pc, [ip, #2160]!	; 0x870

000047b4 <byteswap4@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #258048	; 0x3f000
    47bc:	ldr	pc, [ip, #2152]!	; 0x868

000047c0 <readstat_sort_label_set@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #258048	; 0x3f000
    47c8:	ldr	pc, [ip, #2144]!	; 0x860

000047cc <por_ctx_free@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #258048	; 0x3f000
    47d4:	ldr	pc, [ip, #2136]!	; 0x858

000047d8 <iconv_close@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #258048	; 0x3f000
    47e0:	ldr	pc, [ip, #2128]!	; 0x850

000047e4 <readstat_write_spaces@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #258048	; 0x3f000
    47ec:	ldr	pc, [ip, #2120]!	; 0x848

000047f0 <iconv@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #258048	; 0x3f000
    47f8:	ldr	pc, [ip, #2112]!	; 0x840

000047fc <sav_parse_timestamp@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #258048	; 0x3f000
    4804:	ldr	pc, [ip, #2104]!	; 0x838

00004808 <strcmp@plt>:
    4808:	add	ip, pc, #0, 12
    480c:	add	ip, ip, #258048	; 0x3f000
    4810:	ldr	pc, [ip, #2096]!	; 0x830

00004814 <__cxa_finalize@plt>:
    4814:	add	ip, pc, #0, 12
    4818:	add	ip, ip, #258048	; 0x3f000
    481c:	ldr	pc, [ip, #2088]!	; 0x828

00004820 <readstat_type_class@plt>:
    4820:	add	ip, pc, #0, 12
    4824:	add	ip, ip, #258048	; 0x3f000
    4828:	ldr	pc, [ip, #2080]!	; 0x820

0000482c <strtol@plt>:
    482c:	add	ip, pc, #0, 12
    4830:	add	ip, ip, #258048	; 0x3f000
    4834:	ldr	pc, [ip, #2072]!	; 0x818

00004838 <read@plt>:
    4838:	add	ip, pc, #0, 12
    483c:	add	ip, ip, #258048	; 0x3f000
    4840:	ldr	pc, [ip, #2064]!	; 0x810

00004844 <readstat_error_message@plt>:
    4844:	add	ip, pc, #0, 12
    4848:	add	ip, ip, #258048	; 0x3f000
    484c:	ldr	pc, [ip, #2056]!	; 0x808

00004850 <mktime@plt>:
    4850:	add	ip, pc, #0, 12
    4854:	add	ip, ip, #258048	; 0x3f000
    4858:	ldr	pc, [ip, #2048]!	; 0x800

0000485c <spss_alignment_from_readstat_alignment@plt>:
    485c:	add	ip, pc, #0, 12
    4860:	add	ip, ip, #258048	; 0x3f000
    4864:	ldr	pc, [ip, #2040]!	; 0x7f8

00004868 <readstat_copy@plt>:
    4868:	add	ip, pc, #0, 12
    486c:	add	ip, ip, #258048	; 0x3f000
    4870:	ldr	pc, [ip, #2032]!	; 0x7f0

00004874 <dta_ctx_free@plt>:
    4874:	add	ip, pc, #0, 12
    4878:	add	ip, ip, #258048	; 0x3f000
    487c:	ldr	pc, [ip, #2024]!	; 0x7e8

00004880 <deflateBound@plt>:
    4880:	add	ip, pc, #0, 12
    4884:	add	ip, ip, #258048	; 0x3f000
    4888:	ldr	pc, [ip, #2016]!	; 0x7e0

0000488c <readstat_set_update_handler@plt>:
    488c:	add	ip, pc, #0, 12
    4890:	add	ip, ip, #258048	; 0x3f000
    4894:	ldr	pc, [ip, #2008]!	; 0x7d8

00004898 <memmove@plt>:
    4898:	add	ip, pc, #0, 12
    489c:	add	ip, ip, #258048	; 0x3f000
    48a0:	ldr	pc, [ip, #2000]!	; 0x7d0

000048a4 <byteswap2@plt>:
    48a4:	add	ip, pc, #0, 12
    48a8:	add	ip, ip, #258048	; 0x3f000
    48ac:	ldr	pc, [ip, #1992]!	; 0x7c8

000048b0 <machine_is_little_endian@plt>:
    48b0:	add	ip, pc, #0, 12
    48b4:	add	ip, ip, #258048	; 0x3f000
    48b8:	ldr	pc, [ip, #1984]!	; 0x7c0

000048bc <free@plt>:
    48bc:	add	ip, pc, #0, 12
    48c0:	add	ip, ip, #258048	; 0x3f000
    48c4:	ldr	pc, [ip, #1976]!	; 0x7b8

000048c8 <__isnanf@plt>:
    48c8:	add	ip, pc, #0, 12
    48cc:	add	ip, ip, #258048	; 0x3f000
    48d0:	ldr	pc, [ip, #1968]!	; 0x7b0

000048d4 <sav_parse_time@plt>:
    48d4:	add	ip, pc, #0, 12
    48d8:	add	ip, ip, #258048	; 0x3f000
    48dc:	ldr	pc, [ip, #1960]!	; 0x7a8

000048e0 <readstat_variable_get_format@plt>:
    48e0:	add	ip, pc, #0, 12
    48e4:	add	ip, ip, #258048	; 0x3f000
    48e8:	ldr	pc, [ip, #1952]!	; 0x7a0

000048ec <ones_to_twos_complement4@plt>:
    48ec:	add	ip, pc, #0, 12
    48f0:	add	ip, ip, #258048	; 0x3f000
    48f4:	ldr	pc, [ip, #1944]!	; 0x798

000048f8 <ones_to_twos_complement2@plt>:
    48f8:	add	ip, pc, #0, 12
    48fc:	add	ip, ip, #258048	; 0x3f000
    4900:	ldr	pc, [ip, #1936]!	; 0x790

00004904 <sav_ctx_free@plt>:
    4904:	add	ip, pc, #0, 12
    4908:	add	ip, ip, #258048	; 0x3f000
    490c:	ldr	pc, [ip, #1928]!	; 0x788

00004910 <memcpy@plt>:
    4910:	add	ip, pc, #0, 12
    4914:	add	ip, ip, #258048	; 0x3f000
    4918:	ldr	pc, [ip, #1920]!	; 0x780

0000491c <spss_parse_format@plt>:
    491c:	add	ip, pc, #0, 12
    4920:	add	ip, ip, #258048	; 0x3f000
    4924:	ldr	pc, [ip, #1912]!	; 0x778

00004928 <submit_columns@plt>:
    4928:	add	ip, pc, #0, 12
    492c:	add	ip, ip, #258048	; 0x3f000
    4930:	ldr	pc, [ip, #1904]!	; 0x770

00004934 <readstat_variable_get_missing_range_lo@plt>:
    4934:	add	ip, pc, #0, 12
    4938:	add	ip, ip, #258048	; 0x3f000
    493c:	ldr	pc, [ip, #1896]!	; 0x768

00004940 <time@plt>:
    4940:	add	ip, pc, #0, 12
    4944:	add	ip, ip, #258048	; 0x3f000
    4948:	ldr	pc, [ip, #1888]!	; 0x760

0000494c <readstat_begin_writing_file@plt>:
    494c:	add	ip, pc, #0, 12
    4950:	add	ip, ip, #258048	; 0x3f000
    4954:	ldr	pc, [ip, #1880]!	; 0x758

00004958 <lseek@plt>:
    4958:	add	ip, pc, #0, 12
    495c:	add	ip, ip, #258048	; 0x3f000
    4960:	ldr	pc, [ip, #1872]!	; 0x750

00004964 <unistd_io_init@plt>:
    4964:	add	ip, pc, #0, 12
    4968:	add	ip, ip, #258048	; 0x3f000
    496c:	ldr	pc, [ip, #1864]!	; 0x748

00004970 <pow@plt>:
    4970:	add	ip, pc, #0, 12
    4974:	add	ip, ip, #258048	; 0x3f000
    4978:	ldr	pc, [ip, #1856]!	; 0x740

0000497c <uncompress@plt>:
    497c:	add	ip, pc, #0, 12
    4980:	add	ip, ip, #258048	; 0x3f000
    4984:	ldr	pc, [ip, #1848]!	; 0x738

00004988 <readstat_string_value@plt>:
    4988:	add	ip, pc, #0, 12
    498c:	add	ip, ip, #258048	; 0x3f000
    4990:	ldr	pc, [ip, #1840]!	; 0x730

00004994 <readstat_schema_free@plt>:
    4994:	add	ip, pc, #0, 12
    4998:	add	ip, ip, #258048	; 0x3f000
    499c:	ldr	pc, [ip, #1832]!	; 0x728

000049a0 <readstat_calloc@plt>:
    49a0:	add	ip, pc, #0, 12
    49a4:	add	ip, ip, #258048	; 0x3f000
    49a8:	ldr	pc, [ip, #1824]!	; 0x720

000049ac <ck_str_hash_lookup@plt>:
    49ac:	add	ip, pc, #0, 12
    49b0:	add	ip, ip, #258048	; 0x3f000
    49b4:	ldr	pc, [ip, #1816]!	; 0x718

000049b8 <sav_compressed_row_bound@plt>:
    49b8:	add	ip, pc, #0, 12
    49bc:	add	ip, ip, #258048	; 0x3f000
    49c0:	ldr	pc, [ip, #1808]!	; 0x710

000049c4 <ck_hash_table_grow@plt>:
    49c4:	add	ip, pc, #0, 12
    49c8:	add	ip, ip, #258048	; 0x3f000
    49cc:	ldr	pc, [ip, #1800]!	; 0x708

000049d0 <__isinf@plt>:
    49d0:	add	ip, pc, #0, 12
    49d4:	add	ip, ip, #258048	; 0x3f000
    49d8:	ldr	pc, [ip, #1792]!	; 0x700

000049dc <realloc@plt>:
    49dc:	add	ip, pc, #0, 12
    49e0:	add	ip, ip, #258048	; 0x3f000
    49e4:	ldr	pc, [ip, #1784]!	; 0x6f8

000049e8 <cnxptiee@plt>:
    49e8:	add	ip, pc, #0, 12
    49ec:	add	ip, ip, #258048	; 0x3f000
    49f0:	ldr	pc, [ip, #1776]!	; 0x6f0

000049f4 <read_version_and_timestamp@plt>:
    49f4:	add	ip, pc, #0, 12
    49f8:	add	ip, ip, #258048	; 0x3f000
    49fc:	ldr	pc, [ip, #1768]!	; 0x6e8

00004a00 <readstat_write_zeros@plt>:
    4a00:	add	ip, pc, #0, 12
    4a04:	add	ip, ip, #258048	; 0x3f000
    4a08:	ldr	pc, [ip, #1760]!	; 0x6e0

00004a0c <strcasecmp@plt>:
    4a0c:	add	ip, pc, #0, 12
    4a10:	add	ip, ip, #258048	; 0x3f000
    4a14:	ldr	pc, [ip, #1752]!	; 0x6d8

00004a18 <readstat_copy_quoted@plt>:
    4a18:	add	ip, pc, #0, 12
    4a1c:	add	ip, ip, #258048	; 0x3f000
    4a20:	ldr	pc, [ip, #1744]!	; 0x6d0

00004a24 <deflate@plt>:
    4a24:	add	ip, pc, #0, 12
    4a28:	add	ip, ip, #258048	; 0x3f000
    4a2c:	ldr	pc, [ip, #1736]!	; 0x6c8

00004a30 <submit_value_label@plt>:
    4a30:	add	ip, pc, #0, 12
    4a34:	add	ip, ip, #258048	; 0x3f000
    4a38:	ldr	pc, [ip, #1728]!	; 0x6c0

00004a3c <sav_ctx_init@plt>:
    4a3c:	add	ip, pc, #0, 12
    4a40:	add	ip, ip, #258048	; 0x3f000
    4a44:	ldr	pc, [ip, #1720]!	; 0x6b8

00004a48 <ck_str_n_hash_lookup@plt>:
    4a48:	add	ip, pc, #0, 12
    4a4c:	add	ip, ip, #258048	; 0x3f000
    4a50:	ldr	pc, [ip, #1712]!	; 0x6b0

00004a54 <spss_measure_from_readstat_measure@plt>:
    4a54:	add	ip, pc, #0, 12
    4a58:	add	ip, ip, #258048	; 0x3f000
    4a5c:	ldr	pc, [ip, #1704]!	; 0x6a8

00004a60 <sas_rle_decompress@plt>:
    4a60:	add	ip, pc, #0, 12
    4a64:	add	ip, ip, #258048	; 0x3f000
    4a68:	ldr	pc, [ip, #1696]!	; 0x6a0

00004a6c <sav_parse_date@plt>:
    4a6c:	add	ip, pc, #0, 12
    4a70:	add	ip, ip, #258048	; 0x3f000
    4a74:	ldr	pc, [ip, #1688]!	; 0x698

00004a78 <xport_namestr_bswap@plt>:
    4a78:	add	ip, pc, #0, 12
    4a7c:	add	ip, ip, #258048	; 0x3f000
    4a80:	ldr	pc, [ip, #1680]!	; 0x690

00004a84 <strcpy@plt>:
    4a84:	add	ip, pc, #0, 12
    4a88:	add	ip, ip, #258048	; 0x3f000
    4a8c:	ldr	pc, [ip, #1672]!	; 0x688

00004a90 <zsav_ctx_init@plt>:
    4a90:	add	ip, pc, #0, 12
    4a94:	add	ip, ip, #258048	; 0x3f000
    4a98:	ldr	pc, [ip, #1664]!	; 0x680

00004a9c <sas_write_header@plt>:
    4a9c:	add	ip, pc, #0, 12
    4aa0:	add	ip, ip, #258048	; 0x3f000
    4aa4:	ldr	pc, [ip, #1656]!	; 0x678

00004aa8 <strtof@plt>:
    4aa8:	add	ip, pc, #0, 12
    4aac:	add	ip, ip, #258048	; 0x3f000
    4ab0:	ldr	pc, [ip, #1648]!	; 0x670

00004ab4 <readstat_schema_find_or_create_entry@plt>:
    4ab4:	add	ip, pc, #0, 12
    4ab8:	add	ip, ip, #258048	; 0x3f000
    4abc:	ldr	pc, [ip, #1640]!	; 0x668

00004ac0 <readstat_set_io_ctx@plt>:
    4ac0:	add	ip, pc, #0, 12
    4ac4:	add	ip, ip, #258048	; 0x3f000
    4ac8:	ldr	pc, [ip, #1632]!	; 0x660

00004acc <spss_format_for_variable@plt>:
    4acc:	add	ip, pc, #0, 12
    4ad0:	add	ip, ip, #258048	; 0x3f000
    4ad4:	ldr	pc, [ip, #1624]!	; 0x658

00004ad8 <readstat_parser_free@plt>:
    4ad8:	add	ip, pc, #0, 12
    4adc:	add	ip, ip, #258048	; 0x3f000
    4ae0:	ldr	pc, [ip, #1616]!	; 0x650

00004ae4 <malloc@plt>:
    4ae4:	add	ip, pc, #0, 12
    4ae8:	add	ip, ip, #258048	; 0x3f000
    4aec:	ldr	pc, [ip, #1608]!	; 0x648

00004af0 <zsav_add_block@plt>:
    4af0:	add	ip, pc, #0, 12
    4af4:	add	ip, ip, #258048	; 0x3f000
    4af8:	ldr	pc, [ip, #1600]!	; 0x640

00004afc <deflateInit_@plt>:
    4afc:	add	ip, pc, #0, 12
    4b00:	add	ip, ip, #258048	; 0x3f000
    4b04:	ldr	pc, [ip, #1592]!	; 0x638

00004b08 <iconv_open@plt>:
    4b08:	add	ip, pc, #0, 12
    4b0c:	add	ip, ip, #258048	; 0x3f000
    4b10:	ldr	pc, [ip, #1584]!	; 0x630

00004b14 <strerror@plt>:
    4b14:	add	ip, pc, #0, 12
    4b18:	add	ip, ip, #258048	; 0x3f000
    4b1c:	ldr	pc, [ip, #1576]!	; 0x628

00004b20 <sas_validate_tag@plt>:
    4b20:	add	ip, pc, #0, 12
    4b24:	add	ip, ip, #258048	; 0x3f000
    4b28:	ldr	pc, [ip, #1568]!	; 0x620

00004b2c <readstat_write_string@plt>:
    4b2c:	add	ip, pc, #0, 12
    4b30:	add	ip, ip, #258048	; 0x3f000
    4b34:	ldr	pc, [ip, #1560]!	; 0x618

00004b38 <localtime@plt>:
    4b38:	add	ip, pc, #0, 12
    4b3c:	add	ip, ip, #258048	; 0x3f000
    4b40:	ldr	pc, [ip, #1552]!	; 0x610

00004b44 <__ctype_tolower_loc@plt>:
    4b44:	add	ip, pc, #0, 12
    4b48:	add	ip, ip, #258048	; 0x3f000
    4b4c:	ldr	pc, [ip, #1544]!	; 0x608

00004b50 <modf@plt>:
    4b50:	add	ip, pc, #0, 12
    4b54:	add	ip, ip, #258048	; 0x3f000
    4b58:	ldr	pc, [ip, #1536]!	; 0x600

00004b5c <__ctype_toupper_loc@plt>:
    4b5c:	add	ip, pc, #0, 12
    4b60:	add	ip, ip, #258048	; 0x3f000
    4b64:	ldr	pc, [ip, #1528]!	; 0x5f8

00004b68 <ck_hash_table_init@plt>:
    4b68:	add	ip, pc, #0, 12
    4b6c:	add	ip, ip, #258048	; 0x3f000
    4b70:	ldr	pc, [ip, #1520]!	; 0x5f0

00004b74 <__gmon_start__@plt>:
    4b74:	add	ip, pc, #0, 12
    4b78:	add	ip, ip, #258048	; 0x3f000
    4b7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00004b80 <open@plt>:
    4b80:	add	ip, pc, #0, 12
    4b84:	add	ip, ip, #258048	; 0x3f000
    4b88:	ldr	pc, [ip, #1504]!	; 0x5e0

00004b8c <readstat_double_value@plt>:
    4b8c:	add	ip, pc, #0, 12
    4b90:	add	ip, ip, #258048	; 0x3f000
    4b94:	ldr	pc, [ip, #1496]!	; 0x5d8

00004b98 <dta_ctx_init@plt>:
    4b98:	add	ip, pc, #0, 12
    4b9c:	add	ip, ip, #258048	; 0x3f000
    4ba0:	ldr	pc, [ip, #1488]!	; 0x5d0

00004ba4 <readstat_variable_get_type@plt>:
    4ba4:	add	ip, pc, #0, 12
    4ba8:	add	ip, ip, #258048	; 0x3f000
    4bac:	ldr	pc, [ip, #1480]!	; 0x5c8

00004bb0 <dta_type_info@plt>:
    4bb0:	add	ip, pc, #0, 12
    4bb4:	add	ip, ip, #258048	; 0x3f000
    4bb8:	ldr	pc, [ip, #1472]!	; 0x5c0

00004bbc <bcmp@plt>:
    4bbc:	add	ip, pc, #0, 12
    4bc0:	add	ip, ip, #258048	; 0x3f000
    4bc4:	ldr	pc, [ip, #1464]!	; 0x5b8

00004bc8 <sav_parse_long_variable_names_record@plt>:
    4bc8:	add	ip, pc, #0, 12
    4bcc:	add	ip, ip, #258048	; 0x3f000
    4bd0:	ldr	pc, [ip, #1456]!	; 0x5b0

00004bd4 <strlen@plt>:
    4bd4:	add	ip, pc, #0, 12
    4bd8:	add	ip, ip, #258048	; 0x3f000
    4bdc:	ldr	pc, [ip, #1448]!	; 0x5a8

00004be0 <sav_decompress_row@plt>:
    4be0:	add	ip, pc, #0, 12
    4be4:	add	ip, ip, #258048	; 0x3f000
    4be8:	ldr	pc, [ip, #1440]!	; 0x5a0

00004bec <readstat_variable_get_display_width@plt>:
    4bec:	add	ip, pc, #0, 12
    4bf0:	add	ip, ip, #258048	; 0x3f000
    4bf4:	ldr	pc, [ip, #1432]!	; 0x598

00004bf8 <readstat_malloc@plt>:
    4bf8:	add	ip, pc, #0, 12
    4bfc:	add	ip, ip, #258048	; 0x3f000
    4c00:	ldr	pc, [ip, #1424]!	; 0x590

00004c04 <readstat_convert@plt>:
    4c04:	add	ip, pc, #0, 12
    4c08:	add	ip, ip, #258048	; 0x3f000
    4c0c:	ldr	pc, [ip, #1416]!	; 0x588

00004c10 <ck_hash_table_free@plt>:
    4c10:	add	ip, pc, #0, 12
    4c14:	add	ip, ip, #258048	; 0x3f000
    4c18:	ldr	pc, [ip, #1408]!	; 0x580

00004c1c <readstat_por_parse_double@plt>:
    4c1c:	add	ip, pc, #0, 12
    4c20:	add	ip, ip, #258048	; 0x3f000
    4c24:	ldr	pc, [ip, #1400]!	; 0x578

00004c28 <por_utf8_encode@plt>:
    4c28:	add	ip, pc, #0, 12
    4c2c:	add	ip, ip, #258048	; 0x3f000
    4c30:	ldr	pc, [ip, #1392]!	; 0x570

00004c34 <__errno_location@plt>:
    4c34:	add	ip, pc, #0, 12
    4c38:	add	ip, ip, #258048	; 0x3f000
    4c3c:	ldr	pc, [ip, #1384]!	; 0x568

00004c40 <spss_init_variable_for_info@plt>:
    4c40:	add	ip, pc, #0, 12
    4c44:	add	ip, ip, #258048	; 0x3f000
    4c48:	ldr	pc, [ip, #1376]!	; 0x560

00004c4c <snprintf@plt>:
    4c4c:	add	ip, pc, #0, 12
    4c50:	add	ip, ip, #258048	; 0x3f000
    4c54:	ldr	pc, [ip, #1368]!	; 0x558

00004c58 <__isoc99_sscanf@plt>:
    4c58:	add	ip, pc, #0, 12
    4c5c:	add	ip, ip, #258048	; 0x3f000
    4c60:	ldr	pc, [ip, #1360]!	; 0x550

00004c64 <ck_str_n_hash_insert@plt>:
    4c64:	add	ip, pc, #0, 12
    4c68:	add	ip, ip, #258048	; 0x3f000
    4c6c:	ldr	pc, [ip, #1352]!	; 0x548

00004c70 <memset@plt>:
    4c70:	add	ip, pc, #0, 12
    4c74:	add	ip, ip, #258048	; 0x3f000
    4c78:	ldr	pc, [ip, #1344]!	; 0x540

00004c7c <bsearch@plt>:
    4c7c:	add	ip, pc, #0, 12
    4c80:	add	ip, ip, #258048	; 0x3f000
    4c84:	ldr	pc, [ip, #1336]!	; 0x538

00004c88 <spss_64bit_value@plt>:
    4c88:	add	ip, pc, #0, 12
    4c8c:	add	ip, ip, #258048	; 0x3f000
    4c90:	ldr	pc, [ip, #1328]!	; 0x530

00004c94 <strncpy@plt>:
    4c94:	add	ip, pc, #0, 12
    4c98:	add	ip, ip, #258048	; 0x3f000
    4c9c:	ldr	pc, [ip, #1320]!	; 0x528

00004ca0 <readstat_variable_get_storage_width@plt>:
    4ca0:	add	ip, pc, #0, 12
    4ca4:	add	ip, ip, #258048	; 0x3f000
    4ca8:	ldr	pc, [ip, #1312]!	; 0x520

00004cac <sav_parse_very_long_string_record@plt>:
    4cac:	add	ip, pc, #0, 12
    4cb0:	add	ip, ip, #258048	; 0x3f000
    4cb4:	ldr	pc, [ip, #1304]!	; 0x518

00004cb8 <readstat_realloc@plt>:
    4cb8:	add	ip, pc, #0, 12
    4cbc:	add	ip, ip, #258048	; 0x3f000
    4cc0:	ldr	pc, [ip, #1296]!	; 0x510

00004cc4 <dta_parse_timestamp@plt>:
    4cc4:	add	ip, pc, #0, 12
    4cc8:	add	ip, ip, #258048	; 0x3f000
    4ccc:	ldr	pc, [ip, #1288]!	; 0x508

00004cd0 <strtod@plt>:
    4cd0:	add	ip, pc, #0, 12
    4cd4:	add	ip, ip, #258048	; 0x3f000
    4cd8:	ldr	pc, [ip, #1280]!	; 0x500

00004cdc <readstat_variable_get_missing_ranges_count@plt>:
    4cdc:	add	ip, pc, #0, 12
    4ce0:	add	ip, ip, #258048	; 0x3f000
    4ce4:	ldr	pc, [ip, #1272]!	; 0x4f8

00004ce8 <deflateEnd@plt>:
    4ce8:	add	ip, pc, #0, 12
    4cec:	add	ip, ip, #258048	; 0x3f000
    4cf0:	ldr	pc, [ip, #1264]!	; 0x4f0

00004cf4 <readstat_variable_get_measure@plt>:
    4cf4:	add	ip, pc, #0, 12
    4cf8:	add	ip, ip, #258048	; 0x3f000
    4cfc:	ldr	pc, [ip, #1256]!	; 0x4e8

00004d00 <__isnan@plt>:
    4d00:	add	ip, pc, #0, 12
    4d04:	add	ip, ip, #258048	; 0x3f000
    4d08:	ldr	pc, [ip, #1248]!	; 0x4e0

00004d0c <readstat_variable_get_missing_range_hi@plt>:
    4d0c:	add	ip, pc, #0, 12
    4d10:	add	ip, ip, #258048	; 0x3f000
    4d14:	ldr	pc, [ip, #1240]!	; 0x4d8

00004d18 <readstat_set_read_handler@plt>:
    4d18:	add	ip, pc, #0, 12
    4d1c:	add	ip, ip, #258048	; 0x3f000
    4d20:	ldr	pc, [ip, #1232]!	; 0x4d0

00004d24 <sas_header_info_init@plt>:
    4d24:	add	ip, pc, #0, 12
    4d28:	add	ip, ip, #258048	; 0x3f000
    4d2c:	ldr	pc, [ip, #1224]!	; 0x4c8

00004d30 <readstat_variable_get_name@plt>:
    4d30:	add	ip, pc, #0, 12
    4d34:	add	ip, ip, #258048	; 0x3f000
    4d38:	ldr	pc, [ip, #1216]!	; 0x4c0

00004d3c <ones_to_twos_complement1@plt>:
    4d3c:	add	ip, pc, #0, 12
    4d40:	add	ip, ip, #258048	; 0x3f000
    4d44:	ldr	pc, [ip, #1208]!	; 0x4b8

00004d48 <readstat_get_variable@plt>:
    4d48:	add	ip, pc, #0, 12
    4d4c:	add	ip, ip, #258048	; 0x3f000
    4d50:	ldr	pc, [ip, #1200]!	; 0x4b0

00004d54 <spss_alignment_to_readstat_alignment@plt>:
    4d54:	add	ip, pc, #0, 12
    4d58:	add	ip, ip, #258048	; 0x3f000
    4d5c:	ldr	pc, [ip, #1192]!	; 0x4a8

00004d60 <por_utf8_decode@plt>:
    4d60:	add	ip, pc, #0, 12
    4d64:	add	ip, ip, #258048	; 0x3f000
    4d68:	ldr	pc, [ip, #1184]!	; 0x4a0

00004d6c <sas_read_header@plt>:
    4d6c:	add	ip, pc, #0, 12
    4d70:	add	ip, ip, #258048	; 0x3f000
    4d74:	ldr	pc, [ip, #1176]!	; 0x498

00004d78 <spss_measure_to_readstat_measure@plt>:
    4d78:	add	ip, pc, #0, 12
    4d7c:	add	ip, ip, #258048	; 0x3f000
    4d80:	ldr	pc, [ip, #1168]!	; 0x490

00004d84 <sas_subheader_remainder@plt>:
    4d84:	add	ip, pc, #0, 12
    4d88:	add	ip, ip, #258048	; 0x3f000
    4d8c:	ldr	pc, [ip, #1160]!	; 0x488

00004d90 <sas_read8@plt>:
    4d90:	add	ip, pc, #0, 12
    4d94:	add	ip, ip, #258048	; 0x3f000
    4d98:	ldr	pc, [ip, #1152]!	; 0x480

00004d9c <sas_read2@plt>:
    4d9c:	add	ip, pc, #0, 12
    4da0:	add	ip, ip, #258048	; 0x3f000
    4da4:	ldr	pc, [ip, #1144]!	; 0x478

00004da8 <readstat_copy_lower@plt>:
    4da8:	add	ip, pc, #0, 12
    4dac:	add	ip, ip, #258048	; 0x3f000
    4db0:	ldr	pc, [ip, #1136]!	; 0x470

00004db4 <sprintf@plt>:
    4db4:	add	ip, pc, #0, 12
    4db8:	add	ip, ip, #258048	; 0x3f000
    4dbc:	ldr	pc, [ip, #1128]!	; 0x468

00004dc0 <sas_read4@plt>:
    4dc0:	add	ip, pc, #0, 12
    4dc4:	add	ip, ip, #258048	; 0x3f000
    4dc8:	ldr	pc, [ip, #1120]!	; 0x460

00004dcc <readstat_variable_get_label@plt>:
    4dcc:	add	ip, pc, #0, 12
    4dd0:	add	ip, ip, #258048	; 0x3f000
    4dd4:	ldr	pc, [ip, #1112]!	; 0x458

00004dd8 <spss_format@plt>:
    4dd8:	add	ip, pc, #0, 12
    4ddc:	add	ip, ip, #258048	; 0x3f000
    4de0:	ldr	pc, [ip, #1104]!	; 0x450

00004de4 <spss_varinfo_free@plt>:
    4de4:	add	ip, pc, #0, 12
    4de8:	add	ip, ip, #258048	; 0x3f000
    4dec:	ldr	pc, [ip, #1096]!	; 0x448

00004df0 <readstat_get_label_set@plt>:
    4df0:	add	ip, pc, #0, 12
    4df4:	add	ip, ip, #258048	; 0x3f000
    4df8:	ldr	pc, [ip, #1088]!	; 0x440

00004dfc <readstat_variable_get_alignment@plt>:
    4dfc:	add	ip, pc, #0, 12
    4e00:	add	ip, ip, #258048	; 0x3f000
    4e04:	ldr	pc, [ip, #1080]!	; 0x438

00004e08 <qsort@plt>:
    4e08:	add	ip, pc, #0, 12
    4e0c:	add	ip, ip, #258048	; 0x3f000
    4e10:	ldr	pc, [ip, #1072]!	; 0x430

00004e14 <readstat_get_label_set_variable@plt>:
    4e14:	add	ip, pc, #0, 12
    4e18:	add	ip, ip, #258048	; 0x3f000
    4e1c:	ldr	pc, [ip, #1064]!	; 0x428

00004e20 <readstat_write_bytes@plt>:
    4e20:	add	ip, pc, #0, 12
    4e24:	add	ip, ip, #258048	; 0x3f000
    4e28:	ldr	pc, [ip, #1056]!	; 0x420

00004e2c <sav_compress_row@plt>:
    4e2c:	add	ip, pc, #0, 12
    4e30:	add	ip, ip, #258048	; 0x3f000
    4e34:	ldr	pc, [ip, #1048]!	; 0x418

00004e38 <readstat_set_close_handler@plt>:
    4e38:	add	ip, pc, #0, 12
    4e3c:	add	ip, ip, #258048	; 0x3f000
    4e40:	ldr	pc, [ip, #1040]!	; 0x410

00004e44 <sas_fill_page@plt>:
    4e44:	add	ip, pc, #0, 12
    4e48:	add	ip, ip, #258048	; 0x3f000
    4e4c:	ldr	pc, [ip, #1032]!	; 0x408

00004e50 <sas_rle_compressed_len@plt>:
    4e50:	add	ip, pc, #0, 12
    4e54:	add	ip, ip, #258048	; 0x3f000
    4e58:	ldr	pc, [ip, #1024]!	; 0x400

00004e5c <por_ctx_init@plt>:
    4e5c:	add	ip, pc, #0, 12
    4e60:	add	ip, ip, #258048	; 0x3f000
    4e64:	ldr	pc, [ip, #1016]!	; 0x3f8

00004e68 <sas_assign_tag@plt>:
    4e68:	add	ip, pc, #0, 12
    4e6c:	add	ip, ip, #258048	; 0x3f000
    4e70:	ldr	pc, [ip, #1008]!	; 0x3f0

00004e74 <zsav_compress_row@plt>:
    4e74:	add	ip, pc, #0, 12
    4e78:	add	ip, ip, #258048	; 0x3f000
    4e7c:	ldr	pc, [ip, #1000]!	; 0x3e8

00004e80 <zsav_read_compressed_data@plt>:
    4e80:	add	ip, pc, #0, 12
    4e84:	add	ip, ip, #258048	; 0x3f000
    4e88:	ldr	pc, [ip, #992]!	; 0x3e0

00004e8c <readstat_get_value_label@plt>:
    4e8c:	add	ip, pc, #0, 12
    4e90:	add	ip, ip, #258048	; 0x3f000
    4e94:	ldr	pc, [ip, #984]!	; 0x3d8

00004e98 <sas_rle_compress@plt>:
    4e98:	add	ip, pc, #0, 12
    4e9c:	add	ip, ip, #258048	; 0x3f000
    4ea0:	ldr	pc, [ip, #976]!	; 0x3d0

00004ea4 <readstat_write_line_padding@plt>:
    4ea4:	add	ip, pc, #0, 12
    4ea8:	add	ip, ip, #258048	; 0x3f000
    4eac:	ldr	pc, [ip, #968]!	; 0x3c8

00004eb0 <ck_str_hash_insert@plt>:
    4eb0:	add	ip, pc, #0, 12
    4eb4:	add	ip, ip, #258048	; 0x3f000
    4eb8:	ldr	pc, [ip, #960]!	; 0x3c0

00004ebc <strncmp@plt>:
    4ebc:	add	ip, pc, #0, 12
    4ec0:	add	ip, ip, #258048	; 0x3f000
    4ec4:	ldr	pc, [ip, #952]!	; 0x3b8

00004ec8 <byteswap_double@plt>:
    4ec8:	add	ip, pc, #0, 12
    4ecc:	add	ip, ip, #258048	; 0x3f000
    4ed0:	ldr	pc, [ip, #944]!	; 0x3b0

00004ed4 <close@plt>:
    4ed4:	add	ip, pc, #0, 12
    4ed8:	add	ip, ip, #258048	; 0x3f000
    4edc:	ldr	pc, [ip, #936]!	; 0x3a8

00004ee0 <readstat_write_bytes_as_lines@plt>:
    4ee0:	add	ip, pc, #0, 12
    4ee4:	add	ip, ip, #258048	; 0x3f000
    4ee8:	ldr	pc, [ip, #928]!	; 0x3a0

00004eec <spss_missingness_for_info@plt>:
    4eec:	add	ip, pc, #0, 12
    4ef0:	add	ip, ip, #258048	; 0x3f000
    4ef4:	ldr	pc, [ip, #920]!	; 0x398

00004ef8 <handle_variables@plt>:
    4ef8:	add	ip, pc, #0, 12
    4efc:	add	ip, ip, #258048	; 0x3f000
    4f00:	ldr	pc, [ip, #912]!	; 0x390

00004f04 <readstat_variable_get_type_class@plt>:
    4f04:	add	ip, pc, #0, 12
    4f08:	add	ip, ip, #258048	; 0x3f000
    4f0c:	ldr	pc, [ip, #904]!	; 0x388

00004f10 <readstat_write_space_padded_string@plt>:
    4f10:	add	ip, pc, #0, 12
    4f14:	add	ip, ip, #258048	; 0x3f000
    4f18:	ldr	pc, [ip, #896]!	; 0x380

00004f1c <dta_ctx_alloc@plt>:
    4f1c:	add	ip, pc, #0, 12
    4f20:	add	ip, ip, #258048	; 0x3f000
    4f24:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00004f28 <call_weak_fn>:
    4f28:	ldr	r3, [pc, #20]	; 4f44 <call_weak_fn+0x1c>
    4f2c:	ldr	r2, [pc, #20]	; 4f48 <call_weak_fn+0x20>
    4f30:	add	r3, pc, r3
    4f34:	ldr	r2, [r3, r2]
    4f38:	cmp	r2, #0
    4f3c:	bxeq	lr
    4f40:	b	4b74 <__gmon_start__@plt>
    4f44:	.word	0x0003f0c8
    4f48:	.word	0x000002c4

00004f4c <deregister_tm_clones>:
    4f4c:	ldr	r0, [pc, #44]	; 4f80 <deregister_tm_clones+0x34>
    4f50:	ldr	r3, [pc, #44]	; 4f84 <deregister_tm_clones+0x38>
    4f54:	add	r0, pc, r0
    4f58:	add	r3, pc, r3
    4f5c:	cmp	r3, r0
    4f60:	ldr	r3, [pc, #32]	; 4f88 <deregister_tm_clones+0x3c>
    4f64:	add	r3, pc, r3
    4f68:	bxeq	lr
    4f6c:	ldr	r2, [pc, #24]	; 4f8c <deregister_tm_clones+0x40>
    4f70:	ldr	r3, [r3, r2]
    4f74:	cmp	r3, #0
    4f78:	bxeq	lr
    4f7c:	bx	r3
    4f80:	.word	0x00040da8
    4f84:	.word	0x00040da4
    4f88:	.word	0x0003f094
    4f8c:	.word	0x000002ac

00004f90 <register_tm_clones>:
    4f90:	ldr	r0, [pc, #56]	; 4fd0 <register_tm_clones+0x40>
    4f94:	ldr	r3, [pc, #56]	; 4fd4 <register_tm_clones+0x44>
    4f98:	add	r0, pc, r0
    4f9c:	add	r3, pc, r3
    4fa0:	sub	r1, r3, r0
    4fa4:	ldr	r3, [pc, #44]	; 4fd8 <register_tm_clones+0x48>
    4fa8:	asr	r1, r1, #2
    4fac:	add	r3, pc, r3
    4fb0:	add	r1, r1, r1, lsr #31
    4fb4:	asrs	r1, r1, #1
    4fb8:	bxeq	lr
    4fbc:	ldr	r2, [pc, #24]	; 4fdc <register_tm_clones+0x4c>
    4fc0:	ldr	r3, [r3, r2]
    4fc4:	cmp	r3, #0
    4fc8:	bxeq	lr
    4fcc:	bx	r3
    4fd0:	.word	0x00040d64
    4fd4:	.word	0x00040d60
    4fd8:	.word	0x0003f04c
    4fdc:	.word	0x000002f0

00004fe0 <__do_global_dtors_aux>:
    4fe0:	ldr	r3, [pc, #76]	; 5034 <__do_global_dtors_aux+0x54>
    4fe4:	ldr	r2, [pc, #76]	; 5038 <__do_global_dtors_aux+0x58>
    4fe8:	add	r3, pc, r3
    4fec:	add	r2, pc, r2
    4ff0:	ldrb	r3, [r3]
    4ff4:	cmp	r3, #0
    4ff8:	bxne	lr
    4ffc:	ldr	r3, [pc, #56]	; 503c <__do_global_dtors_aux+0x5c>
    5000:	push	{r4, lr}
    5004:	ldr	r3, [r2, r3]
    5008:	cmp	r3, #0
    500c:	beq	501c <__do_global_dtors_aux+0x3c>
    5010:	ldr	r3, [pc, #40]	; 5040 <__do_global_dtors_aux+0x60>
    5014:	ldr	r0, [pc, r3]
    5018:	bl	4814 <__cxa_finalize@plt>
    501c:	bl	4f4c <deregister_tm_clones>
    5020:	ldr	r3, [pc, #28]	; 5044 <__do_global_dtors_aux+0x64>
    5024:	mov	r2, #1
    5028:	add	r3, pc, r3
    502c:	strb	r2, [r3]
    5030:	pop	{r4, pc}
    5034:	.word	0x00040d14
    5038:	.word	0x0003f00c
    503c:	.word	0x000002a8
    5040:	.word	0x0003f2dc
    5044:	.word	0x00040cd4

00005048 <frame_dummy>:
    5048:	b	4f90 <register_tm_clones>

0000504c <ck_hash_str>:
    504c:	push	{fp, lr}
    5050:	mov	fp, sp
    5054:	ldrb	r3, [r0]
    5058:	cmp	r3, #0
    505c:	beq	5090 <ck_hash_str+0x44>
    5060:	add	r2, r0, #1
    5064:	mov	r1, #0
    5068:	movw	lr, #5381	; 0x1505
    506c:	mov	ip, #33	; 0x21
    5070:	uxtb	r0, r3
    5074:	add	r1, r1, r1, lsl #5
    5078:	ldrb	r3, [r2], #1
    507c:	umlal	r0, r1, lr, ip
    5080:	cmp	r3, #0
    5084:	mov	lr, r0
    5088:	bne	5070 <ck_hash_str+0x24>
    508c:	pop	{fp, pc}
    5090:	mov	r1, #0
    5094:	movw	r0, #5381	; 0x1505
    5098:	pop	{fp, pc}

0000509c <ck_float_hash_lookup>:
    509c:	push	{fp, lr}
    50a0:	mov	fp, sp
    50a4:	sub	sp, sp, #8
    50a8:	mov	lr, r0
    50ac:	mov	r0, #0
    50b0:	mov	ip, #8
    50b4:	strb	r0, [sp, #7]
    50b8:	vmov	r0, s0
    50bc:	orr	r3, ip, r0, lsr #24
    50c0:	strb	r3, [sp, #5]
    50c4:	mov	r3, #4
    50c8:	orr	r1, r3, r0, lsr #16
    50cc:	strb	r1, [sp, #4]
    50d0:	mov	r1, #2
    50d4:	orr	r2, r1, r0, lsr #8
    50d8:	and	r1, r1, r0, lsr #8
    50dc:	strb	r2, [sp, #3]
    50e0:	orr	r2, r0, #1
    50e4:	strb	r2, [sp, #2]
    50e8:	and	r2, r3, r0, lsr #16
    50ec:	and	r3, r0, #1
    50f0:	and	r0, ip, r0, lsr #24
    50f4:	orr	r1, r3, r1
    50f8:	orr	r1, r1, r2
    50fc:	mov	r2, lr
    5100:	orr	r0, r1, r0
    5104:	mov	r1, #5
    5108:	orr	r0, r0, #240	; 0xf0
    510c:	strb	r0, [sp, #6]
    5110:	add	r0, sp, #2
    5114:	bl	4a48 <ck_str_n_hash_lookup@plt>
    5118:	mov	sp, fp
    511c:	pop	{fp, pc}

00005120 <ck_str_n_hash_lookup>:
    5120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5124:	add	fp, sp, #28
    5128:	sub	sp, sp, #20
    512c:	mov	r4, r2
    5130:	sub	r2, r1, #1
    5134:	mov	r5, #0
    5138:	cmp	r2, #126	; 0x7e
    513c:	bhi	5264 <ck_str_n_hash_lookup+0x144>
    5140:	ldrd	r2, [r4, #8]
    5144:	orrs	r2, r2, r3
    5148:	beq	5264 <ck_str_n_hash_lookup+0x144>
    514c:	ldrb	r3, [r0]
    5150:	mov	r5, #0
    5154:	str	r0, [sp, #16]
    5158:	str	r1, [sp, #4]
    515c:	cmp	r3, #0
    5160:	beq	5194 <ck_str_n_hash_lookup+0x74>
    5164:	add	r2, r0, #1
    5168:	mov	r1, #0
    516c:	movw	r6, #5381	; 0x1505
    5170:	mov	r7, #33	; 0x21
    5174:	uxtb	r0, r3
    5178:	add	r1, r1, r1, lsl #5
    517c:	ldrb	r3, [r2], #1
    5180:	umlal	r0, r1, r6, r7
    5184:	cmp	r3, #0
    5188:	mov	r6, r0
    518c:	bne	5174 <ck_str_n_hash_lookup+0x54>
    5190:	b	519c <ck_str_n_hash_lookup+0x7c>
    5194:	movw	r0, #5381	; 0x1505
    5198:	mov	r1, #0
    519c:	ldr	sl, [r4]
    51a0:	ldr	r9, [r4, #4]
    51a4:	str	r4, [sp]
    51a8:	mov	r2, sl
    51ac:	mov	r3, r9
    51b0:	bl	23698 <__aeabi_uldivmod>
    51b4:	subs	r0, r2, #1
    51b8:	mov	r4, r2
    51bc:	mov	r7, r3
    51c0:	mov	r2, sl
    51c4:	sbc	r1, r3, #0
    51c8:	mov	r3, r9
    51cc:	bl	23698 <__aeabi_uldivmod>
    51d0:	eor	r0, r7, r3
    51d4:	eor	r1, r4, r2
    51d8:	orrs	r0, r1, r0
    51dc:	beq	5264 <ck_str_n_hash_lookup+0x144>
    51e0:	ldr	r0, [sp, #4]
    51e4:	str	r9, [sp, #8]
    51e8:	mov	r6, r2
    51ec:	mov	r8, r3
    51f0:	str	sl, [sp, #12]
    51f4:	add	r5, r0, #1
    51f8:	ldr	r0, [sp]
    51fc:	ldr	r9, [r0, #16]
    5200:	add	sl, r4, r4, lsl #5
    5204:	mov	r0, r9
    5208:	ldrb	r1, [r0, sl, lsl #2]!
    520c:	cmp	r1, #0
    5210:	beq	5254 <ck_str_n_hash_lookup+0x134>
    5214:	ldr	r1, [sp, #16]
    5218:	mov	r2, r5
    521c:	bl	4ebc <strncmp@plt>
    5220:	cmp	r0, #0
    5224:	beq	525c <ck_str_n_hash_lookup+0x13c>
    5228:	ldr	r2, [sp, #12]
    522c:	ldr	r3, [sp, #8]
    5230:	adds	r0, r4, #1
    5234:	adc	r1, r7, #0
    5238:	bl	23698 <__aeabi_uldivmod>
    523c:	eor	r0, r3, r8
    5240:	eor	r1, r2, r6
    5244:	mov	r4, r2
    5248:	mov	r7, r3
    524c:	orrs	r0, r1, r0
    5250:	bne	5200 <ck_str_n_hash_lookup+0xe0>
    5254:	mov	r5, #0
    5258:	b	5264 <ck_str_n_hash_lookup+0x144>
    525c:	add	r0, r9, sl, lsl #2
    5260:	ldr	r5, [r0, #128]	; 0x80
    5264:	mov	r0, r5
    5268:	sub	sp, fp, #28
    526c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005270 <ck_float_hash_insert>:
    5270:	push	{r4, sl, fp, lr}
    5274:	add	fp, sp, #8
    5278:	sub	sp, sp, #8
    527c:	mov	r2, r0
    5280:	mov	r0, #0
    5284:	mov	lr, #8
    5288:	mov	ip, r1
    528c:	strb	r0, [sp, #7]
    5290:	vmov	r0, s0
    5294:	orr	r3, lr, r0, lsr #24
    5298:	strb	r3, [sp, #5]
    529c:	mov	r3, #4
    52a0:	orr	r1, r3, r0, lsr #16
    52a4:	and	r3, r3, r0, lsr #16
    52a8:	strb	r1, [sp, #4]
    52ac:	mov	r1, #2
    52b0:	orr	r4, r1, r0, lsr #8
    52b4:	and	r1, r1, r0, lsr #8
    52b8:	strb	r4, [sp, #3]
    52bc:	orr	r4, r0, #1
    52c0:	strb	r4, [sp, #2]
    52c4:	and	r4, r0, #1
    52c8:	and	r0, lr, r0, lsr #24
    52cc:	orr	r1, r4, r1
    52d0:	orr	r1, r1, r3
    52d4:	mov	r3, ip
    52d8:	orr	r0, r1, r0
    52dc:	mov	r1, #5
    52e0:	orr	r0, r0, #240	; 0xf0
    52e4:	strb	r0, [sp, #6]
    52e8:	add	r0, sp, #2
    52ec:	bl	4c64 <ck_str_n_hash_insert@plt>
    52f0:	sub	sp, fp, #8
    52f4:	pop	{r4, sl, fp, pc}

000052f8 <ck_str_n_hash_insert>:
    52f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    52fc:	add	fp, sp, #28
    5300:	sub	sp, sp, #36	; 0x24
    5304:	mov	r9, r1
    5308:	sub	r1, r1, #1
    530c:	mov	r4, #0
    5310:	cmp	r1, #126	; 0x7e
    5314:	bhi	5514 <ck_str_n_hash_insert+0x21c>
    5318:	ldrd	r6, [r3]
    531c:	mov	sl, r3
    5320:	orrs	r1, r6, r7
    5324:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5328:	mov	r1, sl
    532c:	str	r0, [sp, #32]
    5330:	mov	r8, r2
    5334:	ldr	r0, [r1, #8]!
    5338:	str	r1, [sp, #16]
    533c:	ldr	r1, [r1, #4]
    5340:	bl	23550 <__aeabi_ul2d>
    5344:	mov	r4, r0
    5348:	mov	r5, r1
    534c:	mov	r0, r6
    5350:	mov	r1, r7
    5354:	bl	23550 <__aeabi_ul2d>
    5358:	vmov	d17, r0, r1
    535c:	vmov.f64	d16, #104	; 0x3f400000  0.750
    5360:	vmul.f64	d16, d17, d16
    5364:	vmov	d17, r4, r5
    5368:	mov	r4, #0
    536c:	vcmpe.f64	d16, d17
    5370:	vmrs	APSR_nzcv, fpscr
    5374:	bhi	5388 <ck_str_n_hash_insert+0x90>
    5378:	mov	r0, sl
    537c:	bl	49c4 <ck_hash_table_grow@plt>
    5380:	cmn	r0, #1
    5384:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5388:	ldr	r0, [sp, #32]
    538c:	ldrb	r3, [r0]
    5390:	cmp	r3, #0
    5394:	beq	53c8 <ck_str_n_hash_insert+0xd0>
    5398:	add	r2, r0, #1
    539c:	mov	r1, #0
    53a0:	movw	r6, #5381	; 0x1505
    53a4:	mov	r7, #33	; 0x21
    53a8:	uxtb	r0, r3
    53ac:	add	r1, r1, r1, lsl #5
    53b0:	ldrb	r3, [r2], #1
    53b4:	umlal	r0, r1, r6, r7
    53b8:	cmp	r3, #0
    53bc:	mov	r6, r0
    53c0:	bne	53a8 <ck_str_n_hash_insert+0xb0>
    53c4:	b	53d0 <ck_str_n_hash_insert+0xd8>
    53c8:	mov	r1, #0
    53cc:	movw	r0, #5381	; 0x1505
    53d0:	str	r9, [sp, #12]
    53d4:	ldm	sl, {r7, r9}
    53d8:	mov	r3, r9
    53dc:	mov	r2, r7
    53e0:	bl	23698 <__aeabi_uldivmod>
    53e4:	mov	r6, r2
    53e8:	mov	r5, r3
    53ec:	orrs	r0, r2, r3
    53f0:	beq	540c <ck_str_n_hash_insert+0x114>
    53f4:	subs	r0, r6, #1
    53f8:	mov	r2, r7
    53fc:	mov	r3, r9
    5400:	sbc	r1, r5, #0
    5404:	bl	23698 <__aeabi_uldivmod>
    5408:	b	5414 <ck_str_n_hash_insert+0x11c>
    540c:	subs	r2, r7, #1
    5410:	sbc	r3, r9, #0
    5414:	eor	r0, r6, r2
    5418:	eor	r1, r5, r3
    541c:	mov	r4, #0
    5420:	orrs	r0, r0, r1
    5424:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5428:	ldr	r1, [sp, #12]
    542c:	str	r7, [sp, #24]
    5430:	ldr	r7, [sl, #16]
    5434:	str	r9, [sp, #20]
    5438:	str	r8, [sp, #8]
    543c:	str	sl, [sp, #4]
    5440:	add	r1, r1, #1
    5444:	str	r1, [sp, #28]
    5448:	add	r8, r6, r6, lsl #5
    544c:	mov	r4, r7
    5450:	mov	sl, r3
    5454:	mov	r9, r2
    5458:	ldrb	r0, [r4, r8, lsl #2]!
    545c:	cmp	r0, #0
    5460:	bne	5484 <ck_str_n_hash_insert+0x18c>
    5464:	ldr	r2, [sp, #16]
    5468:	ldrd	r0, [r2]
    546c:	adds	r0, r0, #1
    5470:	adc	r1, r1, #0
    5474:	strd	r0, [r2]
    5478:	ldrb	r0, [r4]
    547c:	cmp	r0, #0
    5480:	beq	54d8 <ck_str_n_hash_insert+0x1e0>
    5484:	ldr	r1, [sp, #32]
    5488:	ldr	r2, [sp, #28]
    548c:	mov	r0, r4
    5490:	bl	4ebc <strncmp@plt>
    5494:	cmp	r0, #0
    5498:	beq	54d8 <ck_str_n_hash_insert+0x1e0>
    549c:	ldr	r2, [sp, #24]
    54a0:	ldr	r3, [sp, #20]
    54a4:	adds	r0, r6, #1
    54a8:	adc	r1, r5, #0
    54ac:	bl	23698 <__aeabi_uldivmod>
    54b0:	mov	r6, r2
    54b4:	mov	r5, r3
    54b8:	mov	r3, sl
    54bc:	mov	r2, r9
    54c0:	eor	r0, r5, sl
    54c4:	eor	r1, r6, r9
    54c8:	orrs	r0, r1, r0
    54cc:	bne	5448 <ck_str_n_hash_insert+0x150>
    54d0:	mov	r4, #0
    54d4:	b	5514 <ck_str_n_hash_insert+0x21c>
    54d8:	mov	r0, r4
    54dc:	ldr	r4, [sp, #12]
    54e0:	ldr	r1, [sp, #32]
    54e4:	mov	r2, r4
    54e8:	bl	4910 <memcpy@plt>
    54ec:	ldr	r2, [sp, #4]
    54f0:	mov	r1, #0
    54f4:	ldr	r0, [r2, #16]
    54f8:	add	r0, r0, r8, lsl #2
    54fc:	strb	r1, [r0, r4]
    5500:	ldr	r1, [sp, #8]
    5504:	mov	r4, #1
    5508:	ldr	r0, [r2, #16]
    550c:	add	r0, r0, r8, lsl #2
    5510:	str	r1, [r0, #128]	; 0x80
    5514:	mov	r0, r4
    5518:	sub	sp, fp, #28
    551c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005520 <ck_double_hash_lookup>:
    5520:	push	{r4, r5, r6, r7, fp, lr}
    5524:	add	fp, sp, #16
    5528:	sub	sp, sp, #16
    552c:	mov	ip, r0
    5530:	mov	r0, #0
    5534:	mov	lr, #8
    5538:	strb	r0, [sp, #15]
    553c:	vmov	r0, r1, d0
    5540:	orr	r2, lr, r1, lsr #24
    5544:	orr	r3, r0, #1
    5548:	strb	r3, [sp, #5]
    554c:	strb	r2, [sp, #12]
    5550:	mov	r2, #4
    5554:	orr	r3, r2, r1, lsr #16
    5558:	and	r2, r2, r1, lsr #16
    555c:	strb	r3, [sp, #11]
    5560:	mov	r3, #2
    5564:	orr	r4, r3, r1, lsr #8
    5568:	and	r3, r3, r1, lsr #8
    556c:	strb	r4, [sp, #10]
    5570:	orr	r4, r1, #1
    5574:	strb	r4, [sp, #9]
    5578:	lsr	r4, r0, #24
    557c:	orr	r4, r4, r1, lsl #8
    5580:	orr	r5, r4, #8
    5584:	strb	r5, [sp, #8]
    5588:	lsr	r5, r0, #16
    558c:	orr	r5, r5, r1, lsl #16
    5590:	orr	r6, r5, #4
    5594:	strb	r6, [sp, #7]
    5598:	lsr	r6, r0, #8
    559c:	and	r0, r0, #1
    55a0:	orr	r6, r6, r1, lsl #24
    55a4:	orr	r7, r6, #2
    55a8:	strb	r7, [sp, #6]
    55ac:	and	r7, r1, #1
    55b0:	and	r1, lr, r1, lsr #24
    55b4:	orr	r3, r3, r7
    55b8:	orr	r2, r3, r2
    55bc:	orr	r1, r2, r1
    55c0:	mov	r2, ip
    55c4:	orr	r1, r1, #240	; 0xf0
    55c8:	strb	r1, [sp, #14]
    55cc:	and	r1, r6, #2
    55d0:	orr	r0, r0, r1
    55d4:	and	r1, r5, #4
    55d8:	orr	r0, r0, r1
    55dc:	and	r1, r4, #8
    55e0:	orr	r0, r0, r1
    55e4:	mov	r1, #10
    55e8:	orr	r0, r0, #240	; 0xf0
    55ec:	strb	r0, [sp, #13]
    55f0:	add	r0, sp, #5
    55f4:	bl	4a48 <ck_str_n_hash_lookup@plt>
    55f8:	sub	sp, fp, #16
    55fc:	pop	{r4, r5, r6, r7, fp, pc}

00005600 <ck_double_hash_insert>:
    5600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    5604:	add	fp, sp, #24
    5608:	sub	sp, sp, #16
    560c:	mov	lr, r0
    5610:	mov	r0, #0
    5614:	mov	ip, r1
    5618:	mov	r8, #8
    561c:	strb	r0, [sp, #15]
    5620:	vmov	r0, r1, d0
    5624:	orr	r2, r8, r1, lsr #24
    5628:	orr	r3, r0, #1
    562c:	strb	r3, [sp, #5]
    5630:	strb	r2, [sp, #12]
    5634:	mov	r2, #4
    5638:	orr	r4, r2, r1, lsr #16
    563c:	and	r2, r2, r1, lsr #16
    5640:	strb	r4, [sp, #11]
    5644:	mov	r4, #2
    5648:	orr	r5, r4, r1, lsr #8
    564c:	strb	r5, [sp, #10]
    5650:	orr	r5, r1, #1
    5654:	strb	r5, [sp, #9]
    5658:	lsr	r5, r0, #24
    565c:	orr	r5, r5, r1, lsl #8
    5660:	orr	r6, r5, #8
    5664:	strb	r6, [sp, #8]
    5668:	lsr	r6, r0, #16
    566c:	orr	r6, r6, r1, lsl #16
    5670:	orr	r7, r6, #4
    5674:	strb	r7, [sp, #7]
    5678:	lsr	r7, r0, #8
    567c:	and	r0, r0, #1
    5680:	orr	r7, r7, r1, lsl #24
    5684:	orr	r3, r7, #2
    5688:	strb	r3, [sp, #6]
    568c:	and	r3, r4, r1, lsr #8
    5690:	and	r4, r1, #1
    5694:	and	r1, r8, r1, lsr #24
    5698:	orr	r3, r3, r4
    569c:	orr	r2, r3, r2
    56a0:	mov	r3, ip
    56a4:	orr	r1, r2, r1
    56a8:	mov	r2, lr
    56ac:	orr	r1, r1, #240	; 0xf0
    56b0:	strb	r1, [sp, #14]
    56b4:	and	r1, r7, #2
    56b8:	orr	r0, r0, r1
    56bc:	and	r1, r6, #4
    56c0:	orr	r0, r0, r1
    56c4:	and	r1, r5, #8
    56c8:	orr	r0, r0, r1
    56cc:	mov	r1, #10
    56d0:	orr	r0, r0, #240	; 0xf0
    56d4:	strb	r0, [sp, #13]
    56d8:	add	r0, sp, #5
    56dc:	bl	4c64 <ck_str_n_hash_insert@plt>
    56e0:	sub	sp, fp, #24
    56e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000056e8 <ck_str_hash_lookup>:
    56e8:	push	{r4, r5, fp, lr}
    56ec:	add	fp, sp, #8
    56f0:	mov	r4, r1
    56f4:	mov	r5, r0
    56f8:	bl	4bd4 <strlen@plt>
    56fc:	cmp	r0, #127	; 0x7f
    5700:	mov	r1, r0
    5704:	mov	r0, r5
    5708:	mov	r2, r4
    570c:	movcs	r1, #127	; 0x7f
    5710:	pop	{r4, r5, fp, lr}
    5714:	b	5120 <ck_str_n_hash_lookup>

00005718 <ck_str_hash_insert>:
    5718:	push	{r4, r5, r6, sl, fp, lr}
    571c:	add	fp, sp, #16
    5720:	mov	r4, r2
    5724:	mov	r5, r1
    5728:	mov	r6, r0
    572c:	bl	4bd4 <strlen@plt>
    5730:	cmp	r0, #127	; 0x7f
    5734:	mov	r1, r0
    5738:	mov	r0, r6
    573c:	mov	r2, r5
    5740:	mov	r3, r4
    5744:	movcs	r1, #127	; 0x7f
    5748:	pop	{r4, r5, r6, sl, fp, lr}
    574c:	b	52f8 <ck_str_n_hash_insert>

00005750 <ck_hash_table_grow>:
    5750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5754:	add	fp, sp, #28
    5758:	sub	sp, sp, #4
    575c:	ldm	r0, {r6, sl}
    5760:	mov	r5, r0
    5764:	ldr	r0, [r0, #16]
    5768:	mov	r1, #132	; 0x84
    576c:	lsl	r7, r6, #1
    5770:	str	r0, [sp]
    5774:	mov	r0, r7
    5778:	bl	4778 <calloc@plt>
    577c:	cmp	r0, #0
    5780:	str	r0, [r5, #16]
    5784:	beq	5810 <ck_hash_table_grow+0xc0>
    5788:	lsl	r0, sl, #1
    578c:	mov	r9, #0
    5790:	str	r7, [r5]
    5794:	orr	r0, r0, r6, lsr #31
    5798:	stmib	r5, {r0, r9}
    579c:	orrs	r0, r6, sl
    57a0:	str	r9, [r5, #12]
    57a4:	beq	5804 <ck_hash_table_grow+0xb4>
    57a8:	ldr	r7, [sp]
    57ac:	mov	r8, #1
    57b0:	ldrb	r0, [r7]
    57b4:	cmp	r0, #0
    57b8:	beq	57ec <ck_hash_table_grow+0x9c>
    57bc:	ldr	r4, [r7, #128]	; 0x80
    57c0:	mov	r0, r7
    57c4:	bl	4bd4 <strlen@plt>
    57c8:	cmp	r0, #127	; 0x7f
    57cc:	mov	r1, r0
    57d0:	mov	r0, r7
    57d4:	mov	r2, r4
    57d8:	mov	r3, r5
    57dc:	movcs	r1, #127	; 0x7f
    57e0:	bl	4c64 <ck_str_n_hash_insert@plt>
    57e4:	cmp	r0, #0
    57e8:	beq	5810 <ck_hash_table_grow+0xc0>
    57ec:	subs	r1, r8, r6
    57f0:	add	r0, r8, #1
    57f4:	add	r7, r7, #132	; 0x84
    57f8:	rscs	r1, sl, #0
    57fc:	mov	r8, r0
    5800:	bcc	57b0 <ck_hash_table_grow+0x60>
    5804:	ldr	r0, [sp]
    5808:	bl	48bc <free@plt>
    580c:	b	5814 <ck_hash_table_grow+0xc4>
    5810:	mvn	r9, #0
    5814:	mov	r0, r9
    5818:	sub	sp, fp, #28
    581c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005820 <ck_hash_table_init>:
    5820:	push	{r4, r5, r6, r7, fp, lr}
    5824:	add	fp, sp, #16
    5828:	mov	r6, r0
    582c:	mov	r0, #24
    5830:	bl	4ae4 <malloc@plt>
    5834:	mov	r5, #0
    5838:	cmp	r0, #0
    583c:	beq	5894 <ck_hash_table_init+0x74>
    5840:	mov	r4, r0
    5844:	add	r0, r6, r6, lsl #5
    5848:	lsl	r7, r0, #3
    584c:	mov	r0, r7
    5850:	bl	4ae4 <malloc@plt>
    5854:	cmp	r0, #0
    5858:	str	r0, [r4, #16]
    585c:	beq	588c <ck_hash_table_init+0x6c>
    5860:	mov	r1, #0
    5864:	lsl	r2, r6, #1
    5868:	str	r2, [r4]
    586c:	str	r1, [r4, #4]
    5870:	str	r1, [r4, #8]
    5874:	str	r1, [r4, #12]
    5878:	mov	r1, #0
    587c:	mov	r2, r7
    5880:	bl	4c70 <memset@plt>
    5884:	mov	r5, r4
    5888:	b	5894 <ck_hash_table_init+0x74>
    588c:	mov	r0, r4
    5890:	bl	48bc <free@plt>
    5894:	mov	r0, r5
    5898:	pop	{r4, r5, r6, r7, fp, pc}

0000589c <ck_hash_table_wipe>:
    589c:	ldr	r1, [r0]
    58a0:	ldr	r0, [r0, #16]
    58a4:	add	r1, r1, r1, lsl #5
    58a8:	lsl	r2, r1, #2
    58ac:	mov	r1, #0
    58b0:	b	4c70 <memset@plt>

000058b4 <ck_hash_table_free>:
    58b4:	push	{r4, sl, fp, lr}
    58b8:	add	fp, sp, #8
    58bc:	mov	r4, r0
    58c0:	ldr	r0, [r0, #16]
    58c4:	bl	48bc <free@plt>
    58c8:	mov	r0, r4
    58cc:	pop	{r4, sl, fp, lr}
    58d0:	b	48bc <free@plt>

000058d4 <machine_is_little_endian>:
    58d4:	mov	r0, #1
    58d8:	bx	lr

000058dc <ones_to_twos_complement1>:
    58dc:	bx	lr

000058e0 <ones_to_twos_complement2>:
    58e0:	uxth	r1, r0
    58e4:	add	r0, r0, r1, lsr #15
    58e8:	sxth	r0, r0
    58ec:	bx	lr

000058f0 <ones_to_twos_complement4>:
    58f0:	add	r0, r0, r0, lsr #31
    58f4:	bx	lr

000058f8 <twos_to_ones_complement1>:
    58f8:	bx	lr

000058fc <twos_to_ones_complement2>:
    58fc:	add	r0, r0, r0, lsr #15
    5900:	sxth	r0, r0
    5904:	bx	lr

00005908 <twos_to_ones_complement4>:
    5908:	add	r0, r0, r0, asr #31
    590c:	bx	lr

00005910 <byteswap2>:
    5910:	rev16	r0, r0
    5914:	bx	lr

00005918 <byteswap4>:
    5918:	rev	r0, r0
    591c:	bx	lr

00005920 <byteswap8>:
    5920:	rev	r2, r1
    5924:	rev	r1, r0
    5928:	mov	r0, r2
    592c:	bx	lr

00005930 <byteswap_float>:
    5930:	vmov	r0, s0
    5934:	rev	r0, r0
    5938:	vmov	s0, r0
    593c:	bx	lr

00005940 <byteswap_double>:
    5940:	vmov	r0, r1, d0
    5944:	rev	r0, r0
    5948:	rev	r1, r1
    594c:	vmov	d0, r1, r0
    5950:	bx	lr

00005954 <readstat_convert>:
    5954:	push	{r4, r5, r6, sl, fp, lr}
    5958:	add	fp, sp, #16
    595c:	sub	sp, sp, #24
    5960:	ldr	ip, [fp, #8]
    5964:	mov	r4, r0
    5968:	mov	r5, r1
    596c:	sub	r0, r2, #1
    5970:	str	r2, [sp, #20]
    5974:	mov	r6, r3
    5978:	cmp	r3, #0
    597c:	beq	5990 <readstat_convert+0x3c>
    5980:	ldrb	r1, [r0, r6]
    5984:	sub	r3, r6, #1
    5988:	cmp	r1, #32
    598c:	beq	5974 <readstat_convert+0x20>
    5990:	mov	r0, #19
    5994:	cmp	r5, #0
    5998:	str	r6, [sp, #16]
    599c:	beq	5a44 <readstat_convert+0xf0>
    59a0:	cmp	ip, #0
    59a4:	beq	59f0 <readstat_convert+0x9c>
    59a8:	sub	r0, r5, #1
    59ac:	add	r1, sp, #20
    59b0:	add	r2, sp, #16
    59b4:	add	r3, sp, #8
    59b8:	str	r4, [sp, #8]
    59bc:	str	r0, [sp, #12]
    59c0:	add	r0, sp, #12
    59c4:	str	r0, [sp]
    59c8:	mov	r0, ip
    59cc:	bl	47f0 <iconv@plt>
    59d0:	cmn	r0, #1
    59d4:	beq	5a18 <readstat_convert+0xc4>
    59d8:	ldr	r0, [sp, #12]
    59dc:	mvn	r0, r0
    59e0:	add	r1, r0, r5
    59e4:	mov	r0, #0
    59e8:	strb	r0, [r4, r1]
    59ec:	b	5a44 <readstat_convert+0xf0>
    59f0:	add	r1, r6, #1
    59f4:	cmp	r1, r5
    59f8:	bhi	5a44 <readstat_convert+0xf0>
    59fc:	mov	r1, r2
    5a00:	mov	r0, r4
    5a04:	mov	r2, r6
    5a08:	bl	4910 <memcpy@plt>
    5a0c:	mov	r0, #0
    5a10:	strb	r0, [r4, r6]
    5a14:	b	5a44 <readstat_convert+0xf0>
    5a18:	bl	4c34 <__errno_location@plt>
    5a1c:	ldr	r0, [r0]
    5a20:	cmp	r0, #7
    5a24:	beq	5a40 <readstat_convert+0xec>
    5a28:	cmp	r0, #22
    5a2c:	beq	59d8 <readstat_convert+0x84>
    5a30:	cmp	r0, #84	; 0x54
    5a34:	movne	r0, #16
    5a38:	moveq	r0, #17
    5a3c:	b	5a44 <readstat_convert+0xf0>
    5a40:	mov	r0, #19
    5a44:	sub	sp, fp, #16
    5a48:	pop	{r4, r5, r6, sl, fp, pc}

00005a4c <readstat_error_message>:
    5a4c:	cmp	r0, #39	; 0x27
    5a50:	bhi	5a64 <readstat_error_message+0x18>
    5a54:	ldr	r1, [pc, #20]	; 5a70 <readstat_error_message+0x24>
    5a58:	add	r1, pc, r1
    5a5c:	ldr	r0, [r1, r0, lsl #2]
    5a60:	bx	lr
    5a64:	ldr	r0, [pc, #8]	; 5a74 <readstat_error_message+0x28>
    5a68:	add	r0, pc, r0
    5a6c:	bx	lr
    5a70:	.word	0x0003e400
    5a74:	.word	0x0001e620

00005a78 <unistd_open_handler>:
    5a78:	push	{r4, sl, fp, lr}
    5a7c:	add	fp, sp, #8
    5a80:	mov	r4, r1
    5a84:	mov	r1, #0
    5a88:	bl	4b80 <open@plt>
    5a8c:	str	r0, [r4]
    5a90:	pop	{r4, sl, fp, pc}

00005a94 <unistd_close_handler>:
    5a94:	ldr	r0, [r0]
    5a98:	cmn	r0, #1
    5a9c:	moveq	r0, #0
    5aa0:	bxeq	lr
    5aa4:	b	4ed4 <close@plt>

00005aa8 <unistd_seek_handler>:
    5aa8:	cmp	r1, #2
    5aac:	mov	r3, r1
    5ab0:	mvnhi	r0, #0
    5ab4:	bxhi	lr
    5ab8:	mov	r1, r0
    5abc:	ldr	r0, [r2]
    5ac0:	mov	r2, r3
    5ac4:	b	4958 <lseek@plt>

00005ac8 <unistd_read_handler>:
    5ac8:	mov	r3, r1
    5acc:	mov	r1, r0
    5ad0:	ldr	r0, [r2]
    5ad4:	mov	r2, r3
    5ad8:	b	4838 <read@plt>

00005adc <unistd_update_handler>:
    5adc:	push	{r4, r5, r6, sl, fp, lr}
    5ae0:	add	fp, sp, #16
    5ae4:	cmp	r1, #0
    5ae8:	beq	5b3c <unistd_update_handler+0x60>
    5aec:	mov	r6, r0
    5af0:	ldr	r0, [r3]
    5af4:	mov	r5, r2
    5af8:	mov	r4, r1
    5afc:	mov	r1, #0
    5b00:	mov	r2, #1
    5b04:	bl	4958 <lseek@plt>
    5b08:	cmn	r0, #1
    5b0c:	beq	5b44 <unistd_update_handler+0x68>
    5b10:	vmov	s0, r6
    5b14:	vmov	s2, r0
    5b18:	mov	r0, r5
    5b1c:	vcvt.f64.s32	d16, s0
    5b20:	vcvt.f64.s32	d17, s2
    5b24:	vdiv.f64	d0, d17, d16
    5b28:	blx	r4
    5b2c:	cmp	r0, #0
    5b30:	movwne	r0, #1
    5b34:	lsl	r0, r0, #2
    5b38:	pop	{r4, r5, r6, sl, fp, pc}
    5b3c:	mov	r0, #0
    5b40:	pop	{r4, r5, r6, sl, fp, pc}
    5b44:	mov	r0, #15
    5b48:	pop	{r4, r5, r6, sl, fp, pc}

00005b4c <unistd_io_init>:
    5b4c:	push	{r4, r5, fp, lr}
    5b50:	add	fp, sp, #8
    5b54:	ldr	r1, [pc, #168]	; 5c04 <unistd_io_init+0xb8>
    5b58:	mov	r4, r0
    5b5c:	ldr	r1, [pc, r1]
    5b60:	bl	4790 <readstat_set_open_handler@plt>
    5b64:	cmp	r0, #0
    5b68:	bne	5c00 <unistd_io_init+0xb4>
    5b6c:	ldr	r1, [pc, #148]	; 5c08 <unistd_io_init+0xbc>
    5b70:	mov	r0, r4
    5b74:	ldr	r1, [pc, r1]
    5b78:	bl	4e38 <readstat_set_close_handler@plt>
    5b7c:	cmp	r0, #0
    5b80:	bne	5c00 <unistd_io_init+0xb4>
    5b84:	ldr	r1, [pc, #128]	; 5c0c <unistd_io_init+0xc0>
    5b88:	mov	r0, r4
    5b8c:	ldr	r1, [pc, r1]
    5b90:	bl	4784 <readstat_set_seek_handler@plt>
    5b94:	cmp	r0, #0
    5b98:	bne	5c00 <unistd_io_init+0xb4>
    5b9c:	ldr	r1, [pc, #108]	; 5c10 <unistd_io_init+0xc4>
    5ba0:	mov	r0, r4
    5ba4:	ldr	r1, [pc, r1]
    5ba8:	bl	4d18 <readstat_set_read_handler@plt>
    5bac:	cmp	r0, #0
    5bb0:	bne	5c00 <unistd_io_init+0xb4>
    5bb4:	ldr	r1, [pc, #88]	; 5c14 <unistd_io_init+0xc8>
    5bb8:	mov	r0, r4
    5bbc:	ldr	r1, [pc, r1]
    5bc0:	bl	488c <readstat_set_update_handler@plt>
    5bc4:	mov	r1, r0
    5bc8:	mov	r0, #0
    5bcc:	cmp	r1, #0
    5bd0:	popne	{r4, r5, fp, pc}
    5bd4:	mov	r0, #1
    5bd8:	mov	r1, #4
    5bdc:	mov	r5, #1
    5be0:	bl	4778 <calloc@plt>
    5be4:	mov	r1, r0
    5be8:	mvn	r0, #0
    5bec:	str	r0, [r1]
    5bf0:	mov	r0, r4
    5bf4:	bl	4ac0 <readstat_set_io_ctx@plt>
    5bf8:	ldr	r1, [r4, #32]
    5bfc:	str	r5, [r1, #24]
    5c00:	pop	{r4, r5, fp, pc}
    5c04:	.word	0x0003e758
    5c08:	.word	0x0003e770
    5c0c:	.word	0x0003e754
    5c10:	.word	0x0003e6f4
    5c14:	.word	0x0003e718

00005c18 <readstat_malloc>:
    5c18:	movw	r2, #61439	; 0xefff
    5c1c:	sub	r1, r0, #1
    5c20:	movt	r2, #255	; 0xff
    5c24:	cmp	r1, r2
    5c28:	movhi	r0, #0
    5c2c:	bxhi	lr
    5c30:	b	4ae4 <malloc@plt>

00005c34 <readstat_calloc>:
    5c34:	movw	r2, #61440	; 0xf000
    5c38:	movt	r2, #255	; 0xff
    5c3c:	cmp	r0, r2
    5c40:	bhi	5c54 <readstat_calloc+0x20>
    5c44:	cmp	r1, r2
    5c48:	mulls	r3, r1, r0
    5c4c:	cmpls	r3, r2
    5c50:	bls	5c5c <readstat_calloc+0x28>
    5c54:	mov	r0, #0
    5c58:	bx	lr
    5c5c:	cmp	r0, #0
    5c60:	cmpne	r1, #0
    5c64:	beq	5c54 <readstat_calloc+0x20>
    5c68:	b	4778 <calloc@plt>

00005c6c <readstat_realloc>:
    5c6c:	movw	r3, #61440	; 0xf000
    5c70:	sub	r2, r1, #1
    5c74:	movt	r3, #255	; 0xff
    5c78:	cmp	r2, r3
    5c7c:	bcc	5ca0 <readstat_realloc+0x34>
    5c80:	cmp	r0, #0
    5c84:	beq	5c98 <readstat_realloc+0x2c>
    5c88:	push	{fp, lr}
    5c8c:	mov	fp, sp
    5c90:	bl	48bc <free@plt>
    5c94:	pop	{fp, lr}
    5c98:	mov	r0, #0
    5c9c:	bx	lr
    5ca0:	b	49dc <realloc@plt>

00005ca4 <readstat_get_row_count>:
    5ca4:	ldr	r0, [r0]
    5ca8:	bx	lr

00005cac <readstat_get_var_count>:
    5cac:	ldr	r0, [r0, #8]
    5cb0:	bx	lr

00005cb4 <readstat_get_creation_time>:
    5cb4:	ldr	r0, [r0, #16]
    5cb8:	bx	lr

00005cbc <readstat_get_modified_time>:
    5cbc:	ldr	r0, [r0, #20]
    5cc0:	bx	lr

00005cc4 <readstat_get_file_format_version>:
    5cc4:	ldr	r0, [r0, #24]
    5cc8:	bx	lr

00005ccc <readstat_get_file_format_is_64bit>:
    5ccc:	ldrb	r0, [r0, #52]	; 0x34
    5cd0:	and	r0, r0, #1
    5cd4:	bx	lr

00005cd8 <readstat_get_compression>:
    5cd8:	ldr	r0, [r0, #32]
    5cdc:	bx	lr

00005ce0 <readstat_get_endianness>:
    5ce0:	ldr	r0, [r0, #36]	; 0x24
    5ce4:	bx	lr

00005ce8 <readstat_get_file_label>:
    5ce8:	ldr	r0, [r0, #44]	; 0x2c
    5cec:	bx	lr

00005cf0 <readstat_get_file_encoding>:
    5cf0:	ldr	r0, [r0, #48]	; 0x30
    5cf4:	bx	lr

00005cf8 <readstat_get_table_name>:
    5cf8:	ldr	r0, [r0, #40]	; 0x28
    5cfc:	bx	lr

00005d00 <readstat_parser_init>:
    5d00:	push	{r4, sl, fp, lr}
    5d04:	add	fp, sp, #8
    5d08:	mov	r0, #1
    5d0c:	mov	r1, #52	; 0x34
    5d10:	bl	4778 <calloc@plt>
    5d14:	mov	r4, r0
    5d18:	mov	r0, #1
    5d1c:	mov	r1, #28
    5d20:	bl	4778 <calloc@plt>
    5d24:	str	r0, [r4, #32]
    5d28:	mov	r0, r4
    5d2c:	bl	4964 <unistd_io_init@plt>
    5d30:	cmp	r0, #0
    5d34:	beq	5d48 <readstat_parser_init+0x48>
    5d38:	mov	r0, r4
    5d3c:	bl	4ad8 <readstat_parser_free@plt>
    5d40:	mov	r4, #0
    5d44:	b	5d54 <readstat_parser_init+0x54>
    5d48:	ldr	r0, [pc, #12]	; 5d5c <readstat_parser_init+0x5c>
    5d4c:	add	r0, pc, r0
    5d50:	str	r0, [r4, #40]	; 0x28
    5d54:	mov	r0, r4
    5d58:	pop	{r4, sl, fp, pc}
    5d5c:	.word	0x0001e34a

00005d60 <readstat_parser_free>:
    5d60:	cmp	r0, #0
    5d64:	bxeq	lr
    5d68:	push	{r4, sl, fp, lr}
    5d6c:	add	fp, sp, #8
    5d70:	mov	r4, r0
    5d74:	ldr	r0, [r0, #32]
    5d78:	cmp	r0, #0
    5d7c:	beq	5da8 <readstat_parser_free+0x48>
    5d80:	ldr	r1, [r0, #24]
    5d84:	cmp	r1, #0
    5d88:	beq	5d98 <readstat_parser_free+0x38>
    5d8c:	ldr	r0, [r0, #20]
    5d90:	bl	48bc <free@plt>
    5d94:	ldr	r0, [r4, #32]
    5d98:	mov	r1, #0
    5d9c:	str	r1, [r0, #20]
    5da0:	str	r1, [r0, #24]
    5da4:	bl	48bc <free@plt>
    5da8:	mov	r0, r4
    5dac:	pop	{r4, sl, fp, lr}
    5db0:	b	48bc <free@plt>

00005db4 <readstat_set_io_ctx>:
    5db4:	push	{r4, r5, fp, lr}
    5db8:	add	fp, sp, #8
    5dbc:	mov	r5, r0
    5dc0:	ldr	r0, [r0, #32]
    5dc4:	mov	r4, r1
    5dc8:	ldr	r1, [r0, #24]
    5dcc:	cmp	r1, #0
    5dd0:	beq	5de0 <readstat_set_io_ctx+0x2c>
    5dd4:	ldr	r0, [r0, #20]
    5dd8:	bl	48bc <free@plt>
    5ddc:	ldr	r0, [r5, #32]
    5de0:	mov	r1, #0
    5de4:	str	r4, [r0, #20]
    5de8:	str	r1, [r0, #24]
    5dec:	mov	r0, #0
    5df0:	pop	{r4, r5, fp, pc}

00005df4 <readstat_set_metadata_handler>:
    5df4:	str	r1, [r0]
    5df8:	mov	r0, #0
    5dfc:	bx	lr

00005e00 <readstat_set_note_handler>:
    5e00:	str	r1, [r0, #4]
    5e04:	mov	r0, #0
    5e08:	bx	lr

00005e0c <readstat_set_variable_handler>:
    5e0c:	str	r1, [r0, #8]
    5e10:	mov	r0, #0
    5e14:	bx	lr

00005e18 <readstat_set_value_handler>:
    5e18:	str	r1, [r0, #16]
    5e1c:	mov	r0, #0
    5e20:	bx	lr

00005e24 <readstat_set_value_label_handler>:
    5e24:	str	r1, [r0, #20]
    5e28:	mov	r0, #0
    5e2c:	bx	lr

00005e30 <readstat_set_error_handler>:
    5e30:	str	r1, [r0, #24]
    5e34:	mov	r0, #0
    5e38:	bx	lr

00005e3c <readstat_set_progress_handler>:
    5e3c:	str	r1, [r0, #28]
    5e40:	mov	r0, #0
    5e44:	bx	lr

00005e48 <readstat_set_fweight_handler>:
    5e48:	str	r1, [r0, #12]
    5e4c:	mov	r0, #0
    5e50:	bx	lr

00005e54 <readstat_set_open_handler>:
    5e54:	ldr	r0, [r0, #32]
    5e58:	str	r1, [r0]
    5e5c:	mov	r0, #0
    5e60:	bx	lr

00005e64 <readstat_set_close_handler>:
    5e64:	ldr	r0, [r0, #32]
    5e68:	str	r1, [r0, #4]
    5e6c:	mov	r0, #0
    5e70:	bx	lr

00005e74 <readstat_set_seek_handler>:
    5e74:	ldr	r0, [r0, #32]
    5e78:	str	r1, [r0, #8]
    5e7c:	mov	r0, #0
    5e80:	bx	lr

00005e84 <readstat_set_read_handler>:
    5e84:	ldr	r0, [r0, #32]
    5e88:	str	r1, [r0, #12]
    5e8c:	mov	r0, #0
    5e90:	bx	lr

00005e94 <readstat_set_update_handler>:
    5e94:	ldr	r0, [r0, #32]
    5e98:	str	r1, [r0, #16]
    5e9c:	mov	r0, #0
    5ea0:	bx	lr

00005ea4 <readstat_set_file_character_encoding>:
    5ea4:	str	r1, [r0, #36]	; 0x24
    5ea8:	mov	r0, #0
    5eac:	bx	lr

00005eb0 <readstat_set_handler_character_encoding>:
    5eb0:	str	r1, [r0, #40]	; 0x28
    5eb4:	mov	r0, #0
    5eb8:	bx	lr

00005ebc <readstat_set_row_limit>:
    5ebc:	str	r1, [r0, #44]	; 0x2c
    5ec0:	mov	r0, #0
    5ec4:	bx	lr

00005ec8 <readstat_set_row_offset>:
    5ec8:	str	r1, [r0, #48]	; 0x30
    5ecc:	mov	r0, #0
    5ed0:	bx	lr
    5ed4:	andeq	r0, r0, r0

00005ed8 <readstat_type_class>:
    5ed8:	mov	r1, r0
    5edc:	mov	r0, #0
    5ee0:	cmp	r1, #0
    5ee4:	cmpne	r1, #6
    5ee8:	movne	r0, #1
    5eec:	bx	lr

00005ef0 <readstat_value_type>:
    5ef0:	mov	r0, r2
    5ef4:	bx	lr

00005ef8 <readstat_value_type_class>:
    5ef8:	cmp	r2, #0
    5efc:	mov	r0, #0
    5f00:	cmpne	r2, #6
    5f04:	movne	r0, #1
    5f08:	bx	lr

00005f0c <readstat_value_tag>:
    5f0c:	uxtb	r0, r3
    5f10:	bx	lr

00005f14 <readstat_value_is_missing>:
    5f14:	mov	ip, #1
    5f18:	tst	r3, #768	; 0x300
    5f1c:	beq	5f28 <readstat_value_is_missing+0x14>
    5f20:	mov	r0, ip
    5f24:	bx	lr
    5f28:	ldr	ip, [sp]
    5f2c:	cmp	ip, #0
    5f30:	beq	5f38 <readstat_value_is_missing+0x24>
    5f34:	b	5f40 <readstat_value_is_defined_missing>
    5f38:	mov	ip, #0
    5f3c:	b	5f20 <readstat_value_is_missing+0xc>

00005f40 <readstat_value_is_defined_missing>:
    5f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5f44:	add	fp, sp, #28
    5f48:	sub	sp, sp, #4
    5f4c:	vpush	{d8-d9}
    5f50:	sub	sp, sp, #48	; 0x30
    5f54:	ldr	sl, [fp, #8]
    5f58:	mov	r8, r3
    5f5c:	mov	r6, r2
    5f60:	mov	r9, r1
    5f64:	mov	r7, #0
    5f68:	cmp	r2, #0
    5f6c:	mov	r4, #0
    5f70:	str	r0, [sp, #12]
    5f74:	beq	5f84 <readstat_value_is_defined_missing+0x44>
    5f78:	cmp	r6, #6
    5f7c:	mov	r4, #0
    5f80:	movne	r4, #1
    5f84:	mov	r0, sl
    5f88:	bl	4f04 <readstat_variable_get_type_class@plt>
    5f8c:	cmp	r4, r0
    5f90:	bne	6130 <readstat_value_is_defined_missing+0x1f0>
    5f94:	cmp	r6, #6
    5f98:	cmpne	r6, #0
    5f9c:	bne	607c <readstat_value_is_defined_missing+0x13c>
    5fa0:	ldr	r0, [sp, #12]
    5fa4:	mov	r7, #0
    5fa8:	cmp	r0, #0
    5fac:	beq	6130 <readstat_value_is_defined_missing+0x1f0>
    5fb0:	cmp	r6, #0
    5fb4:	bne	6130 <readstat_value_is_defined_missing+0x1f0>
    5fb8:	mov	r0, sl
    5fbc:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
    5fc0:	cmp	r0, #1
    5fc4:	str	r0, [sp, #8]
    5fc8:	blt	6130 <readstat_value_is_defined_missing+0x1f0>
    5fcc:	add	r0, sp, #16
    5fd0:	mov	r9, #0
    5fd4:	mov	r7, #0
    5fd8:	add	r0, r0, #8
    5fdc:	str	r0, [sp, #4]
    5fe0:	add	r0, sp, #32
    5fe4:	add	sl, r0, #8
    5fe8:	ldr	r4, [fp, #8]
    5fec:	add	r0, sp, #32
    5ff0:	mov	r2, r7
    5ff4:	mov	r1, r4
    5ff8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
    5ffc:	ldr	r6, [sl]
    6000:	ldr	r5, [sp, #32]
    6004:	add	r0, sp, #16
    6008:	mov	r1, r4
    600c:	mov	r2, r7
    6010:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
    6014:	ldr	r0, [sp, #4]
    6018:	cmp	r6, #0
    601c:	ldr	r8, [sp, #16]
    6020:	movne	r5, r9
    6024:	ldr	r0, [r0]
    6028:	cmp	r0, #0
    602c:	movne	r8, r9
    6030:	cmp	r5, #0
    6034:	cmpne	r8, #0
    6038:	bne	6050 <readstat_value_is_defined_missing+0x110>
    603c:	ldr	r0, [sp, #8]
    6040:	add	r7, r7, #1
    6044:	cmp	r0, r7
    6048:	bne	5fe8 <readstat_value_is_defined_missing+0xa8>
    604c:	b	6124 <readstat_value_is_defined_missing+0x1e4>
    6050:	ldr	r0, [sp, #12]
    6054:	mov	r1, r5
    6058:	bl	4808 <strcmp@plt>
    605c:	cmp	r0, #0
    6060:	bmi	603c <readstat_value_is_defined_missing+0xfc>
    6064:	ldr	r0, [sp, #12]
    6068:	mov	r1, r8
    606c:	bl	4808 <strcmp@plt>
    6070:	cmp	r0, #1
    6074:	bge	603c <readstat_value_is_defined_missing+0xfc>
    6078:	b	612c <readstat_value_is_defined_missing+0x1ec>
    607c:	ldr	r0, [sp, #12]
    6080:	mov	r1, r9
    6084:	mov	r2, r6
    6088:	mov	r3, r8
    608c:	bl	4b8c <readstat_double_value@plt>
    6090:	mov	r0, sl
    6094:	vmov.f64	d8, d0
    6098:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
    609c:	cmp	r0, #1
    60a0:	blt	6124 <readstat_value_is_defined_missing+0x1e4>
    60a4:	add	r8, sp, #16
    60a8:	add	r9, sp, #32
    60ac:	mov	r5, r0
    60b0:	mov	r6, #0
    60b4:	add	r4, r8, #8
    60b8:	add	r7, r9, #8
    60bc:	mov	r0, r9
    60c0:	mov	r1, sl
    60c4:	mov	r2, r6
    60c8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
    60cc:	ldrd	r2, [r7]
    60d0:	ldr	r0, [sp, #32]
    60d4:	ldr	r1, [sp, #36]	; 0x24
    60d8:	bl	4b8c <readstat_double_value@plt>
    60dc:	mov	r0, r8
    60e0:	mov	r1, sl
    60e4:	mov	r2, r6
    60e8:	vmov.f64	d9, d0
    60ec:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
    60f0:	ldrd	r2, [r4]
    60f4:	ldr	r0, [sp, #16]
    60f8:	ldr	r1, [sp, #20]
    60fc:	bl	4b8c <readstat_double_value@plt>
    6100:	vcmpe.f64	d9, d8
    6104:	vmrs	APSR_nzcv, fpscr
    6108:	bhi	6118 <readstat_value_is_defined_missing+0x1d8>
    610c:	vcmpe.f64	d0, d8
    6110:	vmrs	APSR_nzcv, fpscr
    6114:	bge	612c <readstat_value_is_defined_missing+0x1ec>
    6118:	add	r6, r6, #1
    611c:	cmp	r5, r6
    6120:	bne	60bc <readstat_value_is_defined_missing+0x17c>
    6124:	mov	r7, #0
    6128:	b	6130 <readstat_value_is_defined_missing+0x1f0>
    612c:	mov	r7, #1
    6130:	mov	r0, r7
    6134:	sub	sp, fp, #48	; 0x30
    6138:	vpop	{d8-d9}
    613c:	add	sp, sp, #4
    6140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006144 <readstat_value_is_system_missing>:
    6144:	ubfx	r0, r3, #8, #1
    6148:	bx	lr

0000614c <readstat_value_is_tagged_missing>:
    614c:	ubfx	r0, r3, #9, #1
    6150:	bx	lr

00006154 <readstat_string_value>:
    6154:	cmp	r2, #0
    6158:	movne	r0, #0
    615c:	bx	lr

00006160 <readstat_double_value>:
    6160:	vldr	d0, [pc, #96]	; 61c8 <readstat_double_value+0x68>
    6164:	tst	r3, #256	; 0x100
    6168:	bne	61ac <readstat_double_value+0x4c>
    616c:	sub	r2, r2, #1
    6170:	cmp	r2, #4
    6174:	bxhi	lr
    6178:	add	r3, pc, #4
    617c:	ldr	r2, [r3, r2, lsl #2]
    6180:	add	pc, r3, r2
    6184:	.word	0x00000014
    6188:	.word	0x0000001c
    618c:	.word	0x00000020
    6190:	.word	0x0000002c
    6194:	.word	0x00000038
    6198:	sxtb	r0, r0
    619c:	b	61a4 <readstat_double_value+0x44>
    61a0:	sxth	r0, r0
    61a4:	vmov	s0, r0
    61a8:	vcvt.f64.s32	d0, s0
    61ac:	bx	lr
    61b0:	vmov	s0, r0
    61b4:	vcvt.f64.f32	d0, s0
    61b8:	bx	lr
    61bc:	vmov	d0, r0, r1
    61c0:	bx	lr
    61c4:	nop	{0}
    61c8:	.word	0x00000000
    61cc:	.word	0x7ff80000

000061d0 <readstat_int8_value>:
    61d0:	tst	r3, #256	; 0x100
    61d4:	bne	6200 <readstat_int8_value+0x30>
    61d8:	sub	r3, r2, #1
    61dc:	cmp	r3, #3
    61e0:	bcc	6214 <readstat_int8_value+0x44>
    61e4:	cmp	r2, #4
    61e8:	beq	6208 <readstat_int8_value+0x38>
    61ec:	cmp	r2, #5
    61f0:	bne	6200 <readstat_int8_value+0x30>
    61f4:	vmov	d16, r0, r1
    61f8:	vcvt.u32.f64	s0, d16
    61fc:	b	6210 <readstat_int8_value+0x40>
    6200:	mov	r0, #0
    6204:	b	6214 <readstat_int8_value+0x44>
    6208:	vmov	s0, r0
    620c:	vcvt.u32.f32	s0, s0
    6210:	vmov	r0, s0
    6214:	uxtb	r0, r0
    6218:	bx	lr

0000621c <readstat_int16_value>:
    621c:	tst	r3, #256	; 0x100
    6220:	bne	6258 <readstat_int16_value+0x3c>
    6224:	sub	r2, r2, #1
    6228:	cmp	r2, #4
    622c:	bhi	6258 <readstat_int16_value+0x3c>
    6230:	add	r3, pc, #4
    6234:	ldr	r2, [r3, r2, lsl #2]
    6238:	add	pc, r3, r2
    623c:	.word	0x00000014
    6240:	.word	0x0000003c
    6244:	.word	0x0000003c
    6248:	.word	0x00000024
    624c:	.word	0x00000030
    6250:	sxtb	r0, r0
    6254:	b	6278 <readstat_int16_value+0x5c>
    6258:	mov	r0, #0
    625c:	b	6278 <readstat_int16_value+0x5c>
    6260:	vmov	s0, r0
    6264:	vcvt.s32.f32	s0, s0
    6268:	b	6274 <readstat_int16_value+0x58>
    626c:	vmov	d16, r0, r1
    6270:	vcvt.s32.f64	s0, d16
    6274:	vmov	r0, s0
    6278:	sxth	r0, r0
    627c:	bx	lr

00006280 <readstat_int32_value>:
    6280:	tst	r3, #256	; 0x100
    6284:	bne	62bc <readstat_int32_value+0x3c>
    6288:	sub	r2, r2, #1
    628c:	cmp	r2, #4
    6290:	bhi	62bc <readstat_int32_value+0x3c>
    6294:	add	r3, pc, #4
    6298:	ldr	r2, [r3, r2, lsl #2]
    629c:	add	pc, r3, r2
    62a0:	.word	0x00000014
    62a4:	.word	0x00000024
    62a8:	.word	0x00000020
    62ac:	.word	0x0000002c
    62b0:	.word	0x00000038
    62b4:	sxtb	r0, r0
    62b8:	bx	lr
    62bc:	mov	r0, #0
    62c0:	bx	lr
    62c4:	sxth	r0, r0
    62c8:	bx	lr
    62cc:	vmov	s0, r0
    62d0:	vcvt.s32.f32	s0, s0
    62d4:	b	62e0 <readstat_int32_value+0x60>
    62d8:	vmov	d16, r0, r1
    62dc:	vcvt.s32.f64	s0, d16
    62e0:	vmov	r0, s0
    62e4:	bx	lr

000062e8 <readstat_float_value>:
    62e8:	tst	r3, #256	; 0x100
    62ec:	bne	6324 <readstat_float_value+0x3c>
    62f0:	sub	r2, r2, #1
    62f4:	cmp	r2, #4
    62f8:	bhi	632c <readstat_float_value+0x44>
    62fc:	add	r3, pc, #4
    6300:	ldr	r2, [r3, r2, lsl #2]
    6304:	add	pc, r3, r2
    6308:	.word	0x00000014
    630c:	.word	0x0000002c
    6310:	.word	0x00000030
    6314:	.word	0x00000024
    6318:	.word	0x0000003c
    631c:	sxtb	r0, r0
    6320:	b	6338 <readstat_float_value+0x50>
    6324:	vldr	s0, [pc, #36]	; 6350 <readstat_float_value+0x68>
    6328:	bx	lr
    632c:	vmov	s0, r0
    6330:	bx	lr
    6334:	sxth	r0, r0
    6338:	vmov	s0, r0
    633c:	vcvt.f32.s32	s0, s0
    6340:	bx	lr
    6344:	vmov	d16, r0, r1
    6348:	vcvt.f32.f64	s0, d16
    634c:	bx	lr
    6350:	.word	0x7fc00000

00006354 <readstat_variable_get_name>:
    6354:	ldrb	r1, [r0, #8]!
    6358:	cmp	r1, #0
    635c:	moveq	r0, r1
    6360:	bx	lr

00006364 <readstat_variable_get_label>:
    6364:	ldrb	r1, [r0, #564]!	; 0x234
    6368:	cmp	r1, #0
    636c:	moveq	r0, r1
    6370:	bx	lr

00006374 <readstat_variable_get_format>:
    6374:	ldrb	r1, [r0, #308]!	; 0x134
    6378:	cmp	r1, #0
    637c:	moveq	r0, r1
    6380:	bx	lr

00006384 <readstat_variable_get_type>:
    6384:	ldr	r0, [r0]
    6388:	bx	lr

0000638c <readstat_variable_get_type_class>:
    638c:	ldr	r0, [r0]
    6390:	b	4820 <readstat_type_class@plt>

00006394 <readstat_variable_get_index>:
    6394:	ldr	r0, [r0, #4]
    6398:	bx	lr

0000639c <readstat_variable_get_index_after_skipping>:
    639c:	ldr	r0, [r0, #2148]	; 0x864
    63a0:	bx	lr

000063a4 <readstat_variable_get_storage_width>:
    63a4:	ldr	r0, [r0, #1596]	; 0x63c
    63a8:	bx	lr

000063ac <readstat_variable_get_measure>:
    63ac:	ldr	r0, [r0, #2128]	; 0x850
    63b0:	bx	lr

000063b4 <readstat_variable_get_alignment>:
    63b4:	ldr	r0, [r0, #2132]	; 0x854
    63b8:	bx	lr

000063bc <readstat_variable_get_display_width>:
    63bc:	ldr	r0, [r0, #2136]	; 0x858
    63c0:	bx	lr

000063c4 <readstat_variable_get_missing_ranges_count>:
    63c4:	ldr	r0, [r0, #2120]	; 0x848
    63c8:	bx	lr

000063cc <readstat_variable_get_missing_range_lo>:
    63cc:	ldr	r3, [r1, #2120]	; 0x848
    63d0:	cmp	r3, r2
    63d4:	ble	63f4 <readstat_variable_get_missing_range_lo+0x28>
    63d8:	lsl	r2, r2, #1
    63dc:	cmp	r2, #31
    63e0:	bhi	63f4 <readstat_variable_get_missing_range_lo+0x28>
    63e4:	add	r1, r1, r2, lsl #4
    63e8:	movw	r2, #1608	; 0x648
    63ec:	add	r1, r1, r2
    63f0:	b	63fc <readstat_variable_get_missing_range_lo+0x30>
    63f4:	ldr	r1, [pc, #12]	; 6408 <readstat_variable_get_missing_range_lo+0x3c>
    63f8:	add	r1, pc, r1
    63fc:	vld1.64	{d16-d17}, [r1]
    6400:	vst1.64	{d16-d17}, [r0]
    6404:	bx	lr
    6408:	.word	0x0001dca8

0000640c <readstat_variable_get_missing_range_hi>:
    640c:	ldr	r3, [r1, #2120]	; 0x848
    6410:	cmp	r3, r2
    6414:	ble	6438 <readstat_variable_get_missing_range_hi+0x2c>
    6418:	mov	r3, #1
    641c:	orr	r2, r3, r2, lsl #1
    6420:	cmp	r2, #31
    6424:	bhi	6438 <readstat_variable_get_missing_range_hi+0x2c>
    6428:	add	r1, r1, r2, lsl #4
    642c:	movw	r2, #1608	; 0x648
    6430:	add	r1, r1, r2
    6434:	b	6440 <readstat_variable_get_missing_range_hi+0x34>
    6438:	ldr	r1, [pc, #12]	; 644c <readstat_variable_get_missing_range_hi+0x40>
    643c:	add	r1, pc, r1
    6440:	vld1.64	{d16-d17}, [r1]
    6444:	vst1.64	{d16-d17}, [r0]
    6448:	bx	lr
    644c:	.word	0x0001dc64

00006450 <readstat_variable_add_missing_double_range>:
    6450:	push	{fp, lr}
    6454:	mov	fp, sp
    6458:	sub	sp, sp, #24
    645c:	vmov	r3, r1, d1
    6460:	mov	r2, #5
    6464:	mov	ip, #0
    6468:	stm	sp, {r2, ip}
    646c:	str	r3, [sp, #8]
    6470:	add	r3, sp, #12
    6474:	stm	r3, {r1, r2, ip}
    6478:	vmov	r2, r3, d0
    647c:	bl	6488 <readstat_variable_add_missing_value_range>
    6480:	mov	sp, fp
    6484:	pop	{fp, pc}

00006488 <readstat_variable_add_missing_value_range>:
    6488:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    648c:	add	fp, sp, #24
    6490:	ldr	r1, [r0, #2120]	; 0x848
    6494:	lsl	ip, r1, #1
    6498:	mov	r1, #31
    649c:	cmp	ip, #31
    64a0:	bhi	64f8 <readstat_variable_add_missing_value_range+0x70>
    64a4:	movw	r1, #1608	; 0x648
    64a8:	ldr	r6, [fp, #12]
    64ac:	ldr	r5, [fp, #16]
    64b0:	ldr	lr, [fp, #28]
    64b4:	ldr	r8, [fp, #24]
    64b8:	ldr	r9, [fp, #20]
    64bc:	ldr	r7, [fp, #8]
    64c0:	add	r4, r0, r1
    64c4:	mov	r1, r4
    64c8:	str	r2, [r1, ip, lsl #4]!
    64cc:	stmib	r1, {r3, r7}
    64d0:	str	r6, [r1, #12]
    64d4:	orr	r1, ip, #1
    64d8:	str	r5, [r4, r1, lsl #4]!
    64dc:	str	r9, [r4, #4]
    64e0:	str	r8, [r4, #8]
    64e4:	str	lr, [r4, #12]
    64e8:	ldr	r1, [r0, #2120]	; 0x848
    64ec:	add	r1, r1, #1
    64f0:	str	r1, [r0, #2120]	; 0x848
    64f4:	mov	r1, #0
    64f8:	mov	r0, r1
    64fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006500 <readstat_variable_add_missing_double_value>:
    6500:	push	{fp, lr}
    6504:	mov	fp, sp
    6508:	sub	sp, sp, #24
    650c:	vmov	r2, r3, d0
    6510:	mov	ip, #0
    6514:	mov	r1, #5
    6518:	stm	sp, {r1, ip}
    651c:	str	r1, [sp, #16]
    6520:	str	ip, [sp, #20]
    6524:	str	r2, [sp, #8]
    6528:	str	r3, [sp, #12]
    652c:	bl	6488 <readstat_variable_add_missing_value_range>
    6530:	mov	sp, fp
    6534:	pop	{fp, pc}

00006538 <readstat_variable_add_missing_string_range>:
    6538:	push	{fp, lr}
    653c:	mov	fp, sp
    6540:	sub	sp, sp, #24
    6544:	mov	r3, #0
    6548:	str	r2, [sp, #8]
    654c:	mov	r2, r1
    6550:	str	r3, [sp]
    6554:	str	r3, [sp, #4]
    6558:	str	r3, [sp, #12]
    655c:	str	r3, [sp, #16]
    6560:	str	r3, [sp, #20]
    6564:	mov	r3, #0
    6568:	bl	6488 <readstat_variable_add_missing_value_range>
    656c:	mov	sp, fp
    6570:	pop	{fp, pc}

00006574 <readstat_variable_add_missing_string_value>:
    6574:	push	{fp, lr}
    6578:	mov	fp, sp
    657c:	sub	sp, sp, #24
    6580:	mov	r2, #0
    6584:	mov	r3, #0
    6588:	str	r1, [sp, #8]
    658c:	str	r2, [sp]
    6590:	str	r2, [sp, #4]
    6594:	str	r2, [sp, #12]
    6598:	str	r2, [sp, #16]
    659c:	str	r2, [sp, #20]
    65a0:	mov	r2, r1
    65a4:	bl	6488 <readstat_variable_add_missing_value_range>
    65a8:	mov	sp, fp
    65ac:	pop	{fp, pc}

000065b0 <readstat_string_ref_init>:
    65b0:	push	{r4, r5, r6, sl, fp, lr}
    65b4:	add	fp, sp, #16
    65b8:	mov	r4, r0
    65bc:	bl	4bd4 <strlen@plt>
    65c0:	mov	r5, r0
    65c4:	add	r1, r0, #25
    65c8:	mov	r0, #1
    65cc:	bl	4778 <calloc@plt>
    65d0:	mov	r6, r0
    65d4:	mvn	r0, #0
    65d8:	add	r2, r5, #1
    65dc:	mov	r1, r4
    65e0:	str	r0, [r6]
    65e4:	str	r0, [r6, #4]
    65e8:	str	r0, [r6, #8]
    65ec:	str	r0, [r6, #12]
    65f0:	add	r0, r6, #20
    65f4:	str	r2, [r6, #16]
    65f8:	bl	4910 <memcpy@plt>
    65fc:	mov	r0, r6
    6600:	pop	{r4, r5, r6, sl, fp, pc}

00006604 <readstat_writer_init>:
    6604:	push	{r4, r5, r6, sl, fp, lr}
    6608:	add	fp, sp, #16
    660c:	mov	r0, #1
    6610:	mov	r1, #312	; 0x138
    6614:	mov	r5, #1
    6618:	bl	4778 <calloc@plt>
    661c:	mov	r4, r0
    6620:	mov	r0, #50	; 0x32
    6624:	mov	r1, #4
    6628:	mov	r6, #50	; 0x32
    662c:	bl	4778 <calloc@plt>
    6630:	str	r6, [r4, #32]
    6634:	str	r0, [r4, #24]
    6638:	mov	r0, #50	; 0x32
    663c:	mov	r1, #4
    6640:	bl	4778 <calloc@plt>
    6644:	str	r6, [r4, #44]	; 0x2c
    6648:	str	r0, [r4, #36]	; 0x24
    664c:	mov	r0, #50	; 0x32
    6650:	mov	r1, #4
    6654:	bl	4778 <calloc@plt>
    6658:	str	r6, [r4, #56]	; 0x38
    665c:	str	r0, [r4, #48]	; 0x30
    6660:	mov	r0, #100	; 0x64
    6664:	mov	r1, #4
    6668:	mov	r6, #100	; 0x64
    666c:	bl	4778 <calloc@plt>
    6670:	str	r6, [r4, #68]	; 0x44
    6674:	str	r0, [r4, #60]	; 0x3c
    6678:	mov	r0, #0
    667c:	bl	4940 <time@plt>
    6680:	str	r0, [r4, #20]
    6684:	ldr	r0, [pc, #16]	; 669c <readstat_writer_init+0x98>
    6688:	add	r0, pc, r0
    668c:	str	r0, [r4, #280]	; 0x118
    6690:	mov	r0, r4
    6694:	str	r5, [r4, #12]
    6698:	pop	{r4, r5, r6, sl, fp, pc}
    669c:	.word	0x00000010

000066a0 <readstat_write_row_default_callback>:
    66a0:	push	{r4, r5, fp, lr}
    66a4:	add	fp, sp, #8
    66a8:	mov	r5, r2
    66ac:	ldr	r3, [r0]
    66b0:	ldr	r2, [r0, #304]	; 0x130
    66b4:	mov	r4, r0
    66b8:	mov	r0, r1
    66bc:	mov	r1, r5
    66c0:	blx	r3
    66c4:	mov	r1, r0
    66c8:	mov	r0, #13
    66cc:	cmp	r1, r5
    66d0:	popcc	{r4, r5, fp, pc}
    66d4:	ldr	r0, [r4, #4]
    66d8:	add	r0, r0, r1
    66dc:	str	r0, [r4, #4]
    66e0:	mov	r0, #0
    66e4:	pop	{r4, r5, fp, pc}

000066e8 <readstat_validate_variable>:
    66e8:	ldr	r2, [r0, #308]	; 0x134
    66ec:	cmp	r2, #0
    66f0:	moveq	r0, #14
    66f4:	bxeq	lr
    66f8:	ldr	r2, [r0, #232]	; 0xe8
    66fc:	cmp	r2, #0
    6700:	moveq	r0, #0
    6704:	bxeq	lr
    6708:	mov	r0, r1
    670c:	bx	r2

00006710 <readstat_validate_metadata>:
    6710:	ldr	r1, [r0, #308]	; 0x134
    6714:	cmp	r1, #0
    6718:	moveq	r0, #14
    671c:	bxeq	lr
    6720:	ldr	r1, [r0, #292]	; 0x124
    6724:	cmp	r1, #0
    6728:	moveq	r0, #0
    672c:	bxeq	lr
    6730:	bx	r1

00006734 <readstat_writer_free>:
    6734:	cmp	r0, #0
    6738:	bxeq	lr
    673c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6740:	add	fp, sp, #24
    6744:	ldr	r1, [r0, #288]	; 0x120
    6748:	mov	r8, r0
    674c:	cmp	r1, #0
    6750:	beq	6764 <readstat_writer_free+0x30>
    6754:	ldr	r0, [r8, #300]	; 0x12c
    6758:	cmp	r0, #0
    675c:	beq	6764 <readstat_writer_free+0x30>
    6760:	blx	r1
    6764:	ldr	r0, [r8, #24]
    6768:	cmp	r0, #0
    676c:	beq	67a0 <readstat_writer_free+0x6c>
    6770:	ldr	r1, [r8, #28]
    6774:	cmp	r1, #1
    6778:	blt	679c <readstat_writer_free+0x68>
    677c:	mov	r5, #0
    6780:	ldr	r0, [r0, r5, lsl #2]
    6784:	bl	48bc <free@plt>
    6788:	ldr	r1, [r8, #28]
    678c:	ldr	r0, [r8, #24]
    6790:	add	r5, r5, #1
    6794:	cmp	r5, r1
    6798:	blt	6780 <readstat_writer_free+0x4c>
    679c:	bl	48bc <free@plt>
    67a0:	ldr	r0, [r8, #36]	; 0x24
    67a4:	cmp	r0, #0
    67a8:	beq	6838 <readstat_writer_free+0x104>
    67ac:	ldr	r1, [r8, #40]	; 0x28
    67b0:	cmp	r1, #1
    67b4:	blt	6834 <readstat_writer_free+0x100>
    67b8:	mov	r6, #0
    67bc:	ldr	r5, [r0, r6, lsl #2]
    67c0:	ldr	r0, [r5, #264]	; 0x108
    67c4:	cmp	r0, #1
    67c8:	blt	6808 <readstat_writer_free+0xd4>
    67cc:	mov	r7, #0
    67d0:	ldr	r0, [r5, #260]	; 0x104
    67d4:	add	r4, r0, r7, lsl #5
    67d8:	ldr	r0, [r4, #24]
    67dc:	cmp	r0, #0
    67e0:	beq	67e8 <readstat_writer_free+0xb4>
    67e4:	bl	48bc <free@plt>
    67e8:	ldr	r0, [r4, #16]
    67ec:	cmp	r0, #0
    67f0:	beq	67f8 <readstat_writer_free+0xc4>
    67f4:	bl	48bc <free@plt>
    67f8:	ldr	r0, [r5, #264]	; 0x108
    67fc:	add	r7, r7, #1
    6800:	cmp	r7, r0
    6804:	blt	67d0 <readstat_writer_free+0x9c>
    6808:	ldr	r0, [r5, #260]	; 0x104
    680c:	bl	48bc <free@plt>
    6810:	ldr	r0, [r5, #272]	; 0x110
    6814:	bl	48bc <free@plt>
    6818:	mov	r0, r5
    681c:	bl	48bc <free@plt>
    6820:	ldr	r1, [r8, #40]	; 0x28
    6824:	ldr	r0, [r8, #36]	; 0x24
    6828:	add	r6, r6, #1
    682c:	cmp	r6, r1
    6830:	blt	67bc <readstat_writer_free+0x88>
    6834:	bl	48bc <free@plt>
    6838:	ldr	r0, [r8, #48]	; 0x30
    683c:	cmp	r0, #0
    6840:	beq	6874 <readstat_writer_free+0x140>
    6844:	ldr	r1, [r8, #52]	; 0x34
    6848:	cmp	r1, #1
    684c:	blt	6870 <readstat_writer_free+0x13c>
    6850:	mov	r5, #0
    6854:	ldr	r0, [r0, r5, lsl #2]
    6858:	bl	48bc <free@plt>
    685c:	ldr	r1, [r8, #52]	; 0x34
    6860:	ldr	r0, [r8, #48]	; 0x30
    6864:	add	r5, r5, #1
    6868:	cmp	r5, r1
    686c:	blt	6854 <readstat_writer_free+0x120>
    6870:	bl	48bc <free@plt>
    6874:	ldr	r0, [r8, #60]	; 0x3c
    6878:	cmp	r0, #0
    687c:	beq	68b0 <readstat_writer_free+0x17c>
    6880:	ldr	r1, [r8, #64]	; 0x40
    6884:	cmp	r1, #1
    6888:	blt	68ac <readstat_writer_free+0x178>
    688c:	mov	r5, #0
    6890:	ldr	r0, [r0, r5, lsl #2]
    6894:	bl	48bc <free@plt>
    6898:	ldr	r1, [r8, #64]	; 0x40
    689c:	ldr	r0, [r8, #60]	; 0x3c
    68a0:	add	r5, r5, #1
    68a4:	cmp	r5, r1
    68a8:	blt	6890 <readstat_writer_free+0x15c>
    68ac:	bl	48bc <free@plt>
    68b0:	ldr	r0, [r8, #72]	; 0x48
    68b4:	cmp	r0, #0
    68b8:	beq	68c0 <readstat_writer_free+0x18c>
    68bc:	bl	48bc <free@plt>
    68c0:	mov	r0, r8
    68c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    68c8:	b	48bc <free@plt>

000068cc <readstat_set_data_writer>:
    68cc:	str	r1, [r0]
    68d0:	mov	r0, #0
    68d4:	bx	lr

000068d8 <readstat_write_bytes>:
    68d8:	push	{r4, r5, fp, lr}
    68dc:	add	fp, sp, #8
    68e0:	mov	r5, r2
    68e4:	ldr	r3, [r0]
    68e8:	ldr	r2, [r0, #304]	; 0x130
    68ec:	mov	r4, r0
    68f0:	mov	r0, r1
    68f4:	mov	r1, r5
    68f8:	blx	r3
    68fc:	mov	r1, r0
    6900:	mov	r0, #13
    6904:	cmp	r1, r5
    6908:	popcc	{r4, r5, fp, pc}
    690c:	ldr	r0, [r4, #4]
    6910:	add	r0, r0, r1
    6914:	str	r0, [r4, #4]
    6918:	mov	r0, #0
    691c:	pop	{r4, r5, fp, pc}

00006920 <readstat_write_bytes_as_lines>:
    6920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6924:	add	fp, sp, #28
    6928:	sub	sp, sp, #12
    692c:	mov	r7, r0
    6930:	ldr	r0, [fp, #8]
    6934:	mov	r4, r3
    6938:	mov	sl, r2
    693c:	str	r1, [sp, #8]
    6940:	bl	4bd4 <strlen@plt>
    6944:	cmp	sl, #0
    6948:	beq	6a08 <readstat_write_bytes_as_lines+0xe8>
    694c:	ldr	r1, [r7, #4]
    6950:	add	r9, r0, r4
    6954:	mov	r5, #0
    6958:	str	r0, [sp, #4]
    695c:	udiv	r2, r1, r9
    6960:	ldr	r0, [sp, #8]
    6964:	ldr	r3, [r7]
    6968:	sub	r8, sl, r5
    696c:	add	r0, r0, r5
    6970:	mul	r2, r2, r9
    6974:	sub	r1, r2, r1
    6978:	ldr	r2, [r7, #304]	; 0x130
    697c:	add	r6, r4, r1
    6980:	cmp	r8, r6
    6984:	bcs	69a4 <readstat_write_bytes_as_lines+0x84>
    6988:	mov	r1, r8
    698c:	blx	r3
    6990:	cmp	r0, r8
    6994:	bcc	6a10 <readstat_write_bytes_as_lines+0xf0>
    6998:	ldr	r1, [r7, #4]
    699c:	mov	r5, sl
    69a0:	b	69bc <readstat_write_bytes_as_lines+0x9c>
    69a4:	mov	r1, r6
    69a8:	blx	r3
    69ac:	cmp	r0, r6
    69b0:	bcc	6a10 <readstat_write_bytes_as_lines+0xf0>
    69b4:	ldr	r1, [r7, #4]
    69b8:	add	r5, r6, r5
    69bc:	add	r1, r1, r0
    69c0:	str	r1, [r7, #4]
    69c4:	udiv	r0, r1, r9
    69c8:	mls	r0, r0, r9, r1
    69cc:	cmp	r0, r4
    69d0:	bne	6a00 <readstat_write_bytes_as_lines+0xe0>
    69d4:	ldr	r6, [sp, #4]
    69d8:	ldr	r3, [r7]
    69dc:	ldr	r2, [r7, #304]	; 0x130
    69e0:	ldr	r0, [fp, #8]
    69e4:	mov	r1, r6
    69e8:	blx	r3
    69ec:	cmp	r0, r6
    69f0:	bcc	6a10 <readstat_write_bytes_as_lines+0xf0>
    69f4:	ldr	r1, [r7, #4]
    69f8:	add	r1, r1, r0
    69fc:	str	r1, [r7, #4]
    6a00:	cmp	r5, sl
    6a04:	bcc	695c <readstat_write_bytes_as_lines+0x3c>
    6a08:	mov	r0, #0
    6a0c:	b	6a14 <readstat_write_bytes_as_lines+0xf4>
    6a10:	mov	r0, #13
    6a14:	sub	sp, fp, #28
    6a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006a1c <readstat_write_line_padding>:
    6a1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6a20:	add	fp, sp, #24
    6a24:	mov	r4, r0
    6a28:	mov	r0, r3
    6a2c:	mov	r8, r3
    6a30:	mov	r7, r2
    6a34:	mov	r9, r1
    6a38:	bl	4bd4 <strlen@plt>
    6a3c:	ldr	r1, [r4, #4]
    6a40:	mov	r6, r0
    6a44:	add	r0, r0, r7
    6a48:	udiv	r2, r1, r0
    6a4c:	mls	r0, r2, r0, r1
    6a50:	cmp	r0, #0
    6a54:	beq	6ad4 <readstat_write_line_padding+0xb8>
    6a58:	sub	r5, r7, r0
    6a5c:	mov	r0, r5
    6a60:	bl	4ae4 <malloc@plt>
    6a64:	mov	r1, r9
    6a68:	mov	r2, r5
    6a6c:	mov	r7, r0
    6a70:	bl	4c70 <memset@plt>
    6a74:	ldr	r3, [r4]
    6a78:	ldr	r2, [r4, #304]	; 0x130
    6a7c:	mov	r0, r7
    6a80:	mov	r1, r5
    6a84:	blx	r3
    6a88:	cmp	r0, r5
    6a8c:	bcc	6ac4 <readstat_write_line_padding+0xa8>
    6a90:	ldr	r1, [r4, #4]
    6a94:	ldr	r3, [r4]
    6a98:	ldr	r2, [r4, #304]	; 0x130
    6a9c:	add	r0, r1, r0
    6aa0:	mov	r1, r6
    6aa4:	str	r0, [r4, #4]
    6aa8:	mov	r0, r8
    6aac:	blx	r3
    6ab0:	cmp	r0, r6
    6ab4:	bcc	6ac4 <readstat_write_line_padding+0xa8>
    6ab8:	ldr	r1, [r4, #4]
    6abc:	add	r0, r1, r0
    6ac0:	str	r0, [r4, #4]
    6ac4:	cmp	r7, #0
    6ac8:	beq	6ad4 <readstat_write_line_padding+0xb8>
    6acc:	mov	r0, r7
    6ad0:	bl	48bc <free@plt>
    6ad4:	mov	r0, #0
    6ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006adc <readstat_write_string>:
    6adc:	push	{r4, r5, r6, sl, fp, lr}
    6ae0:	add	fp, sp, #16
    6ae4:	mov	r4, r0
    6ae8:	mov	r0, r1
    6aec:	mov	r5, r1
    6af0:	bl	4bd4 <strlen@plt>
    6af4:	ldr	r3, [r4]
    6af8:	ldr	r2, [r4, #304]	; 0x130
    6afc:	mov	r6, r0
    6b00:	mov	r0, r5
    6b04:	mov	r1, r6
    6b08:	blx	r3
    6b0c:	mov	r1, r0
    6b10:	mov	r0, #13
    6b14:	cmp	r1, r6
    6b18:	bcc	6b2c <readstat_write_string+0x50>
    6b1c:	ldr	r0, [r4, #4]
    6b20:	add	r0, r0, r1
    6b24:	str	r0, [r4, #4]
    6b28:	mov	r0, #0
    6b2c:	pop	{r4, r5, r6, sl, fp, pc}

00006b30 <readstat_write_zeros>:
    6b30:	mov	r2, r1
    6b34:	mov	r1, #0
    6b38:	b	6b3c <readstat_write_repeated_byte>

00006b3c <readstat_write_repeated_byte>:
    6b3c:	cmp	r2, #0
    6b40:	moveq	r0, #0
    6b44:	bxeq	lr
    6b48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6b4c:	add	fp, sp, #24
    6b50:	mov	r4, r0
    6b54:	add	r0, r2, #7
    6b58:	mov	r7, sp
    6b5c:	mov	r5, r2
    6b60:	bic	r0, r0, #7
    6b64:	sub	r6, sp, r0
    6b68:	mov	sp, r6
    6b6c:	mov	r0, r6
    6b70:	bl	4c70 <memset@plt>
    6b74:	ldr	r3, [r4]
    6b78:	ldr	r2, [r4, #304]	; 0x130
    6b7c:	mov	r0, r6
    6b80:	mov	r1, r5
    6b84:	blx	r3
    6b88:	mov	r1, r0
    6b8c:	mov	r0, #13
    6b90:	cmp	r1, r5
    6b94:	bcc	6ba8 <readstat_write_repeated_byte+0x6c>
    6b98:	ldr	r0, [r4, #4]
    6b9c:	add	r0, r0, r1
    6ba0:	str	r0, [r4, #4]
    6ba4:	mov	r0, #0
    6ba8:	mov	sp, r7
    6bac:	sub	sp, fp, #24
    6bb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006bb4 <readstat_write_spaces>:
    6bb4:	mov	r2, r1
    6bb8:	mov	r1, #32
    6bbc:	b	6b3c <readstat_write_repeated_byte>

00006bc0 <readstat_write_space_padded_string>:
    6bc0:	push	{r4, r5, r6, r7, fp, lr}
    6bc4:	add	fp, sp, #16
    6bc8:	mov	r4, r2
    6bcc:	mov	r5, r0
    6bd0:	cmp	r1, #0
    6bd4:	beq	6c20 <readstat_write_space_padded_string+0x60>
    6bd8:	ldrb	r0, [r1]
    6bdc:	mov	r6, r1
    6be0:	cmp	r0, #0
    6be4:	beq	6c20 <readstat_write_space_padded_string+0x60>
    6be8:	mov	r0, r6
    6bec:	bl	4bd4 <strlen@plt>
    6bf0:	ldr	r3, [r5]
    6bf4:	ldr	r2, [r5, #304]	; 0x130
    6bf8:	cmp	r0, r4
    6bfc:	mov	r7, r0
    6c00:	mov	r0, r6
    6c04:	movhi	r7, r4
    6c08:	mov	r1, r7
    6c0c:	blx	r3
    6c10:	cmp	r0, r7
    6c14:	bcs	6c30 <readstat_write_space_padded_string+0x70>
    6c18:	mov	r0, #13
    6c1c:	pop	{r4, r5, r6, r7, fp, pc}
    6c20:	mov	r0, r5
    6c24:	mov	r1, #32
    6c28:	mov	r2, r4
    6c2c:	b	6c48 <readstat_write_space_padded_string+0x88>
    6c30:	ldr	r1, [r5, #4]
    6c34:	sub	r2, r4, r7
    6c38:	add	r0, r1, r0
    6c3c:	mov	r1, #32
    6c40:	str	r0, [r5, #4]
    6c44:	mov	r0, r5
    6c48:	pop	{r4, r5, r6, r7, fp, lr}
    6c4c:	b	6b3c <readstat_write_repeated_byte>

00006c50 <readstat_add_label_set>:
    6c50:	push	{r4, r5, r6, r7, fp, lr}
    6c54:	add	fp, sp, #16
    6c58:	mov	r6, r1
    6c5c:	mov	r7, r0
    6c60:	ldr	r1, [r0, #40]	; 0x28
    6c64:	ldr	r0, [r0, #44]	; 0x2c
    6c68:	mov	r4, r2
    6c6c:	cmp	r1, r0
    6c70:	bne	6c8c <readstat_add_label_set+0x3c>
    6c74:	lsl	r0, r1, #1
    6c78:	lsl	r1, r1, #3
    6c7c:	str	r0, [r7, #44]	; 0x2c
    6c80:	ldr	r0, [r7, #36]	; 0x24
    6c84:	bl	49dc <realloc@plt>
    6c88:	str	r0, [r7, #36]	; 0x24
    6c8c:	mov	r0, #1
    6c90:	mov	r1, #284	; 0x11c
    6c94:	bl	4778 <calloc@plt>
    6c98:	ldr	r1, [r7, #40]	; 0x28
    6c9c:	mov	r5, r0
    6ca0:	ldr	r0, [r7, #36]	; 0x24
    6ca4:	mov	r3, r4
    6ca8:	add	r2, r1, #1
    6cac:	str	r2, [r7, #40]	; 0x28
    6cb0:	str	r5, [r0, r1, lsl #2]
    6cb4:	str	r6, [r5]
    6cb8:	add	r0, r5, #4
    6cbc:	mov	r1, #256	; 0x100
    6cc0:	ldr	r2, [pc, #60]	; 6d04 <readstat_add_label_set+0xb4>
    6cc4:	add	r2, pc, r2
    6cc8:	bl	4c4c <snprintf@plt>
    6ccc:	mov	r0, #10
    6cd0:	mov	r1, #32
    6cd4:	mov	r4, #10
    6cd8:	bl	4778 <calloc@plt>
    6cdc:	str	r4, [r5, #268]	; 0x10c
    6ce0:	str	r0, [r5, #260]	; 0x104
    6ce4:	mov	r0, #2
    6ce8:	mov	r1, #4
    6cec:	mov	r4, #2
    6cf0:	bl	4778 <calloc@plt>
    6cf4:	str	r4, [r5, #280]	; 0x118
    6cf8:	str	r0, [r5, #272]	; 0x110
    6cfc:	mov	r0, r5
    6d00:	pop	{r4, r5, r6, r7, fp, pc}
    6d04:	.word	0x0001e418

00006d08 <readstat_get_label_set>:
    6d08:	ldr	r3, [r0, #40]	; 0x28
    6d0c:	mov	r2, r0
    6d10:	mov	r0, #0
    6d14:	cmp	r3, r1
    6d18:	bxle	lr
    6d1c:	ldr	r0, [r2, #36]	; 0x24
    6d20:	ldr	r0, [r0, r1, lsl #2]
    6d24:	bx	lr

00006d28 <readstat_sort_label_set>:
    6d28:	ldr	r2, [r0, #260]	; 0x104
    6d2c:	mov	r3, r1
    6d30:	ldr	r1, [r0, #264]	; 0x108
    6d34:	mov	r0, r2
    6d38:	mov	r2, #32
    6d3c:	b	4e08 <qsort@plt>

00006d40 <readstat_get_value_label>:
    6d40:	ldr	r3, [r0, #264]	; 0x108
    6d44:	mov	r2, r0
    6d48:	mov	r0, #0
    6d4c:	cmp	r3, r1
    6d50:	bxle	lr
    6d54:	ldr	r0, [r2, #260]	; 0x104
    6d58:	add	r0, r0, r1, lsl #5
    6d5c:	bx	lr

00006d60 <readstat_get_label_set_variable>:
    6d60:	ldr	r3, [r0, #276]	; 0x114
    6d64:	mov	r2, r0
    6d68:	mov	r0, #0
    6d6c:	cmp	r3, r1
    6d70:	bxle	lr
    6d74:	ldr	r0, [r2, #272]	; 0x110
    6d78:	ldr	r0, [r0, r1, lsl #2]
    6d7c:	bx	lr

00006d80 <readstat_label_double_value>:
    6d80:	push	{fp, lr}
    6d84:	mov	fp, sp
    6d88:	vpush	{d8}
    6d8c:	vmov.f64	d8, d0
    6d90:	bl	6da8 <readstat_add_value_label>
    6d94:	vcvt.s32.f64	s0, d8
    6d98:	vstr	d8, [r0]
    6d9c:	vstr	s0, [r0, #8]
    6da0:	vpop	{d8}
    6da4:	pop	{fp, pc}

00006da8 <readstat_add_value_label>:
    6da8:	push	{r4, r5, r6, sl, fp, lr}
    6dac:	add	fp, sp, #16
    6db0:	mov	r4, r1
    6db4:	mov	r5, r0
    6db8:	ldr	r1, [r0, #264]	; 0x108
    6dbc:	ldr	r0, [r0, #268]	; 0x10c
    6dc0:	cmp	r1, r0
    6dc4:	bne	6de8 <readstat_add_value_label+0x40>
    6dc8:	lsl	r0, r1, #1
    6dcc:	lsl	r1, r1, #6
    6dd0:	str	r0, [r5, #268]	; 0x10c
    6dd4:	ldr	r0, [r5, #260]	; 0x104
    6dd8:	bl	49dc <realloc@plt>
    6ddc:	str	r0, [r5, #260]	; 0x104
    6de0:	ldr	r1, [r5, #264]	; 0x108
    6de4:	b	6dec <readstat_add_value_label+0x44>
    6de8:	ldr	r0, [r5, #260]	; 0x104
    6dec:	add	r2, r1, #1
    6df0:	vmov.i32	q8, #0	; 0x00000000
    6df4:	cmp	r4, #0
    6df8:	str	r2, [r5, #264]	; 0x108
    6dfc:	add	r5, r0, r1, lsl #5
    6e00:	mov	r0, r5
    6e04:	vst1.64	{d16-d17}, [r0]!
    6e08:	vst1.64	{d16-d17}, [r0]
    6e0c:	beq	6e3c <readstat_add_value_label+0x94>
    6e10:	mov	r0, r4
    6e14:	bl	4bd4 <strlen@plt>
    6e18:	cmp	r0, #0
    6e1c:	beq	6e3c <readstat_add_value_label+0x94>
    6e20:	mov	r6, r0
    6e24:	str	r0, [r5, #28]
    6e28:	bl	4ae4 <malloc@plt>
    6e2c:	mov	r1, r4
    6e30:	mov	r2, r6
    6e34:	str	r0, [r5, #24]
    6e38:	bl	4910 <memcpy@plt>
    6e3c:	mov	r0, r5
    6e40:	pop	{r4, r5, r6, sl, fp, pc}

00006e44 <readstat_label_int32_value>:
    6e44:	push	{r4, sl, fp, lr}
    6e48:	add	fp, sp, #8
    6e4c:	mov	r4, r1
    6e50:	mov	r1, r2
    6e54:	bl	6da8 <readstat_add_value_label>
    6e58:	vmov	s0, r4
    6e5c:	vcvt.f64.s32	d16, s0
    6e60:	str	r4, [r0, #8]
    6e64:	vstr	d16, [r0]
    6e68:	pop	{r4, sl, fp, pc}

00006e6c <readstat_label_string_value>:
    6e6c:	push	{r4, r5, fp, lr}
    6e70:	add	fp, sp, #8
    6e74:	mov	r4, r1
    6e78:	mov	r1, r2
    6e7c:	bl	6da8 <readstat_add_value_label>
    6e80:	cmp	r4, #0
    6e84:	popeq	{r4, r5, fp, pc}
    6e88:	mov	r5, r0
    6e8c:	mov	r0, r4
    6e90:	bl	4bd4 <strlen@plt>
    6e94:	cmp	r0, #0
    6e98:	beq	6eb8 <readstat_label_string_value+0x4c>
    6e9c:	str	r0, [r5, #20]
    6ea0:	bl	4ae4 <malloc@plt>
    6ea4:	str	r0, [r5, #16]
    6ea8:	mov	r1, r4
    6eac:	ldr	r2, [r5, #20]
    6eb0:	pop	{r4, r5, fp, lr}
    6eb4:	b	4910 <memcpy@plt>
    6eb8:	pop	{r4, r5, fp, pc}

00006ebc <readstat_label_tagged_value>:
    6ebc:	push	{r4, sl, fp, lr}
    6ec0:	add	fp, sp, #8
    6ec4:	mov	r4, r1
    6ec8:	mov	r1, r2
    6ecc:	bl	6da8 <readstat_add_value_label>
    6ed0:	strb	r4, [r0, #12]
    6ed4:	pop	{r4, sl, fp, pc}

00006ed8 <readstat_add_variable>:
    6ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6edc:	add	fp, sp, #24
    6ee0:	mov	r8, r1
    6ee4:	mov	r4, r0
    6ee8:	ldr	r1, [r0, #28]
    6eec:	ldr	r0, [r0, #32]
    6ef0:	mov	r6, r3
    6ef4:	mov	r7, r2
    6ef8:	cmp	r1, r0
    6efc:	bne	6f18 <readstat_add_variable+0x40>
    6f00:	lsl	r0, r1, #1
    6f04:	lsl	r1, r1, #3
    6f08:	str	r0, [r4, #32]
    6f0c:	ldr	r0, [r4, #24]
    6f10:	bl	49dc <realloc@plt>
    6f14:	str	r0, [r4, #24]
    6f18:	mov	r0, #1
    6f1c:	movw	r1, #2152	; 0x868
    6f20:	bl	4778 <calloc@plt>
    6f24:	mov	r5, r0
    6f28:	ldr	r0, [r4, #28]
    6f2c:	add	r1, r0, #1
    6f30:	str	r1, [r4, #28]
    6f34:	str	r0, [r5, #4]
    6f38:	ldr	r1, [r4, #24]
    6f3c:	str	r5, [r1, r0, lsl #2]
    6f40:	mov	r0, r5
    6f44:	str	r7, [r5]
    6f48:	str	r6, [r5, #1600]	; 0x640
    6f4c:	bl	4f04 <readstat_variable_get_type_class@plt>
    6f50:	cmp	r0, #0
    6f54:	mov	r2, #3
    6f58:	mov	r1, #0
    6f5c:	movweq	r2, #1
    6f60:	cmp	r8, #0
    6f64:	str	r1, [r5, #2128]	; 0x850
    6f68:	str	r2, [r5, #2132]	; 0x854
    6f6c:	beq	6f88 <readstat_add_variable+0xb0>
    6f70:	ldr	r2, [pc, #24]	; 6f90 <readstat_add_variable+0xb8>
    6f74:	add	r0, r5, #8
    6f78:	mov	r1, #300	; 0x12c
    6f7c:	mov	r3, r8
    6f80:	add	r2, pc, r2
    6f84:	bl	4c4c <snprintf@plt>
    6f88:	mov	r0, r5
    6f8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6f90:	.word	0x0001e15c

00006f94 <readstat_add_string_ref>:
    6f94:	push	{r4, r5, r6, r7, fp, lr}
    6f98:	add	fp, sp, #16
    6f9c:	mov	r4, r0
    6fa0:	mov	r0, r1
    6fa4:	mov	r6, r1
    6fa8:	bl	4bd4 <strlen@plt>
    6fac:	mov	r7, r0
    6fb0:	add	r1, r0, #25
    6fb4:	mov	r0, #1
    6fb8:	bl	4778 <calloc@plt>
    6fbc:	mov	r5, r0
    6fc0:	mvn	r0, #0
    6fc4:	add	r2, r7, #1
    6fc8:	mov	r1, r6
    6fcc:	str	r0, [r5]
    6fd0:	str	r0, [r5, #4]
    6fd4:	str	r0, [r5, #8]
    6fd8:	str	r0, [r5, #12]
    6fdc:	add	r0, r5, #20
    6fe0:	str	r2, [r5, #16]
    6fe4:	bl	4910 <memcpy@plt>
    6fe8:	ldr	r1, [r4, #64]	; 0x40
    6fec:	ldr	r0, [r4, #68]	; 0x44
    6ff0:	cmp	r1, r0
    6ff4:	bne	7018 <readstat_add_string_ref+0x84>
    6ff8:	lsl	r0, r1, #1
    6ffc:	lsl	r1, r1, #3
    7000:	str	r0, [r4, #68]	; 0x44
    7004:	ldr	r0, [r4, #60]	; 0x3c
    7008:	bl	49dc <realloc@plt>
    700c:	str	r0, [r4, #60]	; 0x3c
    7010:	ldr	r1, [r4, #64]	; 0x40
    7014:	b	701c <readstat_add_string_ref+0x88>
    7018:	ldr	r0, [r4, #60]	; 0x3c
    701c:	add	r2, r1, #1
    7020:	str	r2, [r4, #64]	; 0x40
    7024:	str	r5, [r0, r1, lsl #2]
    7028:	mov	r0, r5
    702c:	pop	{r4, r5, r6, r7, fp, pc}

00007030 <readstat_add_note>:
    7030:	push	{r4, r5, fp, lr}
    7034:	add	fp, sp, #8
    7038:	mov	r5, r1
    703c:	mov	r4, r0
    7040:	ldr	r1, [r0, #52]	; 0x34
    7044:	ldr	r0, [r0, #56]	; 0x38
    7048:	cmp	r1, r0
    704c:	bne	7068 <readstat_add_note+0x38>
    7050:	lsl	r0, r1, #1
    7054:	lsl	r1, r1, #3
    7058:	str	r0, [r4, #56]	; 0x38
    705c:	ldr	r0, [r4, #48]	; 0x30
    7060:	bl	49dc <realloc@plt>
    7064:	str	r0, [r4, #48]	; 0x30
    7068:	mov	r0, r5
    706c:	bl	4bd4 <strlen@plt>
    7070:	add	r0, r0, #1
    7074:	bl	4ae4 <malloc@plt>
    7078:	mov	r1, r5
    707c:	bl	4a84 <strcpy@plt>
    7080:	ldr	r2, [r4, #52]	; 0x34
    7084:	ldr	r1, [r4, #48]	; 0x30
    7088:	add	r3, r2, #1
    708c:	str	r3, [r4, #52]	; 0x34
    7090:	str	r0, [r1, r2, lsl #2]
    7094:	pop	{r4, r5, fp, pc}

00007098 <readstat_variable_set_label>:
    7098:	add	r0, r0, #564	; 0x234
    709c:	cmp	r1, #0
    70a0:	beq	70b8 <readstat_variable_set_label+0x20>
    70a4:	ldr	r2, [pc, #24]	; 70c4 <readstat_variable_set_label+0x2c>
    70a8:	mov	r3, r1
    70ac:	mov	r1, #1024	; 0x400
    70b0:	add	r2, pc, r2
    70b4:	b	4c4c <snprintf@plt>
    70b8:	mov	r1, #0
    70bc:	mov	r2, #1024	; 0x400
    70c0:	b	4c70 <memset@plt>
    70c4:	.word	0x0001e02c

000070c8 <readstat_variable_set_format>:
    70c8:	add	r0, r0, #308	; 0x134
    70cc:	cmp	r1, #0
    70d0:	beq	70e8 <readstat_variable_set_format+0x20>
    70d4:	ldr	r2, [pc, #24]	; 70f4 <readstat_variable_set_format+0x2c>
    70d8:	mov	r3, r1
    70dc:	mov	r1, #256	; 0x100
    70e0:	add	r2, pc, r2
    70e4:	b	4c4c <snprintf@plt>
    70e8:	mov	r1, #0
    70ec:	mov	r2, #256	; 0x100
    70f0:	b	4c70 <memset@plt>
    70f4:	.word	0x0001dffc

000070f8 <readstat_variable_set_measure>:
    70f8:	str	r1, [r0, #2128]	; 0x850
    70fc:	bx	lr

00007100 <readstat_variable_set_alignment>:
    7100:	str	r1, [r0, #2132]	; 0x854
    7104:	bx	lr

00007108 <readstat_variable_set_display_width>:
    7108:	str	r1, [r0, #2136]	; 0x858
    710c:	bx	lr

00007110 <readstat_variable_set_label_set>:
    7110:	push	{r4, r5, fp, lr}
    7114:	add	fp, sp, #8
    7118:	cmp	r1, #0
    711c:	str	r1, [r0, #1588]	; 0x634
    7120:	popeq	{r4, r5, fp, pc}
    7124:	mov	r5, r1
    7128:	mov	r4, r0
    712c:	ldr	r1, [r1, #276]	; 0x114
    7130:	ldr	r0, [r5, #280]	; 0x118
    7134:	cmp	r1, r0
    7138:	bne	715c <readstat_variable_set_label_set+0x4c>
    713c:	lsl	r0, r1, #1
    7140:	lsl	r1, r1, #3
    7144:	str	r0, [r5, #280]	; 0x118
    7148:	ldr	r0, [r5, #272]	; 0x110
    714c:	bl	49dc <realloc@plt>
    7150:	str	r0, [r5, #272]	; 0x110
    7154:	ldr	r1, [r5, #276]	; 0x114
    7158:	b	7160 <readstat_variable_set_label_set+0x50>
    715c:	ldr	r0, [r5, #272]	; 0x110
    7160:	add	r2, r1, #1
    7164:	str	r2, [r5, #276]	; 0x114
    7168:	str	r4, [r0, r1, lsl #2]
    716c:	pop	{r4, r5, fp, pc}

00007170 <readstat_get_variable>:
    7170:	ldr	r3, [r0, #28]
    7174:	mov	r2, r0
    7178:	mov	r0, #0
    717c:	cmp	r3, r1
    7180:	bxle	lr
    7184:	ldr	r0, [r2, #24]
    7188:	ldr	r0, [r0, r1, lsl #2]
    718c:	bx	lr

00007190 <readstat_get_string_ref>:
    7190:	ldr	r3, [r0, #64]	; 0x40
    7194:	mov	r2, r0
    7198:	mov	r0, #0
    719c:	cmp	r3, r1
    71a0:	bxle	lr
    71a4:	ldr	r0, [r2, #60]	; 0x3c
    71a8:	ldr	r0, [r0, r1, lsl #2]
    71ac:	bx	lr

000071b0 <readstat_writer_set_file_label>:
    71b0:	push	{fp, lr}
    71b4:	mov	fp, sp
    71b8:	ldr	r2, [pc, #24]	; 71d8 <readstat_writer_set_file_label+0x28>
    71bc:	mov	r3, r1
    71c0:	add	r0, r0, #88	; 0x58
    71c4:	mov	r1, #100	; 0x64
    71c8:	add	r2, pc, r2
    71cc:	bl	4c4c <snprintf@plt>
    71d0:	mov	r0, #0
    71d4:	pop	{fp, pc}
    71d8:	.word	0x0001df14

000071dc <readstat_writer_set_file_timestamp>:
    71dc:	str	r1, [r0, #20]
    71e0:	mov	r0, #0
    71e4:	bx	lr

000071e8 <readstat_writer_set_table_name>:
    71e8:	push	{fp, lr}
    71ec:	mov	fp, sp
    71f0:	ldr	r2, [pc, #24]	; 7210 <readstat_writer_set_table_name+0x28>
    71f4:	mov	r3, r1
    71f8:	add	r0, r0, #188	; 0xbc
    71fc:	mov	r1, #33	; 0x21
    7200:	add	r2, pc, r2
    7204:	bl	4c4c <snprintf@plt>
    7208:	mov	r0, #0
    720c:	pop	{fp, pc}
    7210:	.word	0x0001dedc

00007214 <readstat_writer_set_fweight_variable>:
    7214:	push	{r4, r5, fp, lr}
    7218:	add	fp, sp, #8
    721c:	mov	r5, r0
    7220:	mov	r0, r1
    7224:	mov	r4, r1
    7228:	bl	4f04 <readstat_variable_get_type_class@plt>
    722c:	cmp	r0, #0
    7230:	moveq	r0, #30
    7234:	movne	r0, #0
    7238:	strne	r4, [r5, #224]	; 0xe0
    723c:	pop	{r4, r5, fp, pc}

00007240 <readstat_writer_set_file_format_version>:
    7240:	str	r1, [r0, #8]
    7244:	mov	r0, #0
    7248:	bx	lr

0000724c <readstat_writer_set_file_format_is_64bit>:
    724c:	str	r1, [r0, #12]
    7250:	mov	r0, #0
    7254:	bx	lr

00007258 <readstat_writer_set_compression>:
    7258:	str	r1, [r0, #16]
    725c:	mov	r0, #0
    7260:	bx	lr

00007264 <readstat_writer_set_error_handler>:
    7264:	str	r1, [r0, #296]	; 0x128
    7268:	mov	r0, #0
    726c:	bx	lr

00007270 <readstat_begin_writing_file>:
    7270:	mov	r3, #1
    7274:	str	r1, [r0, #304]	; 0x130
    7278:	str	r3, [r0, #308]	; 0x134
    727c:	str	r2, [r0, #80]	; 0x50
    7280:	ldr	r1, [r0, #292]	; 0x124
    7284:	cmp	r1, #0
    7288:	moveq	r0, #0
    728c:	bxeq	lr
    7290:	bx	r1

00007294 <readstat_begin_row>:
    7294:	push	{r4, r5, fp, lr}
    7298:	add	fp, sp, #8
    729c:	mov	r5, r0
    72a0:	ldr	r0, [r0, #308]	; 0x134
    72a4:	cmp	r0, #0
    72a8:	beq	72dc <readstat_begin_row+0x48>
    72ac:	ldr	r0, [r5, #84]	; 0x54
    72b0:	mov	r4, #0
    72b4:	cmp	r0, #0
    72b8:	bne	72c8 <readstat_begin_row+0x34>
    72bc:	mov	r0, r5
    72c0:	bl	72e8 <readstat_begin_writing_data>
    72c4:	mov	r4, r0
    72c8:	ldr	r0, [r5, #72]	; 0x48
    72cc:	ldr	r2, [r5, #76]	; 0x4c
    72d0:	mov	r1, #0
    72d4:	bl	4c70 <memset@plt>
    72d8:	b	72e0 <readstat_begin_row+0x4c>
    72dc:	mov	r4, #14
    72e0:	mov	r0, r4
    72e4:	pop	{r4, r5, fp, pc}

000072e8 <readstat_begin_writing_data>:
    72e8:	push	{r4, r5, r6, r7, fp, lr}
    72ec:	add	fp, sp, #16
    72f0:	mov	r4, r0
    72f4:	ldr	r0, [r0, #308]	; 0x134
    72f8:	cmp	r0, #0
    72fc:	beq	73e8 <readstat_begin_writing_data+0x100>
    7300:	ldr	r1, [r4, #292]	; 0x124
    7304:	cmp	r1, #0
    7308:	beq	731c <readstat_begin_writing_data+0x34>
    730c:	mov	r0, r4
    7310:	blx	r1
    7314:	cmp	r0, #0
    7318:	popne	{r4, r5, r6, r7, fp, pc}
    731c:	ldr	r0, [r4, #28]
    7320:	cmp	r0, #1
    7324:	blt	7368 <readstat_begin_writing_data+0x80>
    7328:	mov	r6, #0
    732c:	mov	r5, #0
    7330:	ldr	r0, [r4, #24]
    7334:	ldr	r2, [r4, #228]	; 0xe4
    7338:	ldr	r7, [r0, r6, lsl #2]
    733c:	ldr	r1, [r7, #1600]	; 0x640
    7340:	ldr	r0, [r7]
    7344:	blx	r2
    7348:	str	r5, [r7, #1592]	; 0x638
    734c:	str	r0, [r7, #1596]	; 0x63c
    7350:	add	r5, r0, r5
    7354:	add	r6, r6, #1
    7358:	ldr	r0, [r4, #28]
    735c:	cmp	r6, r0
    7360:	blt	7330 <readstat_begin_writing_data+0x48>
    7364:	b	736c <readstat_begin_writing_data+0x84>
    7368:	mov	r5, #0
    736c:	ldr	r1, [r4, #232]	; 0xe8
    7370:	cmp	r1, #0
    7374:	beq	73c0 <readstat_begin_writing_data+0xd8>
    7378:	cmp	r0, #1
    737c:	blt	73c0 <readstat_begin_writing_data+0xd8>
    7380:	mov	r6, #0
    7384:	ldr	r1, [r4, #308]	; 0x134
    7388:	cmp	r1, #0
    738c:	beq	73e8 <readstat_begin_writing_data+0x100>
    7390:	ldr	r1, [r4, #232]	; 0xe8
    7394:	cmp	r1, #0
    7398:	beq	73b4 <readstat_begin_writing_data+0xcc>
    739c:	ldr	r0, [r4, #24]
    73a0:	ldr	r0, [r0, r6, lsl #2]
    73a4:	blx	r1
    73a8:	cmp	r0, #0
    73ac:	bne	73f4 <readstat_begin_writing_data+0x10c>
    73b0:	ldr	r0, [r4, #28]
    73b4:	add	r6, r6, #1
    73b8:	cmp	r6, r0
    73bc:	blt	7384 <readstat_begin_writing_data+0x9c>
    73c0:	mov	r0, r5
    73c4:	str	r5, [r4, #76]	; 0x4c
    73c8:	bl	4ae4 <malloc@plt>
    73cc:	str	r0, [r4, #72]	; 0x48
    73d0:	ldr	r1, [r4, #276]	; 0x114
    73d4:	cmp	r1, #0
    73d8:	beq	73f0 <readstat_begin_writing_data+0x108>
    73dc:	mov	r0, r4
    73e0:	pop	{r4, r5, r6, r7, fp, lr}
    73e4:	bx	r1
    73e8:	mov	r0, #14
    73ec:	pop	{r4, r5, r6, r7, fp, pc}
    73f0:	mov	r0, #0
    73f4:	pop	{r4, r5, r6, r7, fp, pc}

000073f8 <readstat_insert_int8_value>:
    73f8:	push	{fp, lr}
    73fc:	mov	fp, sp
    7400:	ldr	r3, [r0, #308]	; 0x134
    7404:	cmp	r3, #0
    7408:	beq	7438 <readstat_insert_int8_value+0x40>
    740c:	ldr	ip, [r1]
    7410:	mov	r3, #12
    7414:	cmp	ip, #1
    7418:	bne	743c <readstat_insert_int8_value+0x44>
    741c:	ldr	ip, [r1, #1592]	; 0x638
    7420:	ldr	r3, [r0, #72]	; 0x48
    7424:	ldr	lr, [r0, #236]	; 0xec
    7428:	add	r0, r3, ip
    742c:	mov	r3, lr
    7430:	pop	{fp, lr}
    7434:	bx	r3
    7438:	mov	r3, #14
    743c:	mov	r0, r3
    7440:	pop	{fp, pc}

00007444 <readstat_insert_int16_value>:
    7444:	push	{fp, lr}
    7448:	mov	fp, sp
    744c:	ldr	r3, [r0, #308]	; 0x134
    7450:	cmp	r3, #0
    7454:	beq	7484 <readstat_insert_int16_value+0x40>
    7458:	ldr	ip, [r1]
    745c:	mov	r3, #12
    7460:	cmp	ip, #2
    7464:	bne	7488 <readstat_insert_int16_value+0x44>
    7468:	ldr	ip, [r1, #1592]	; 0x638
    746c:	ldr	r3, [r0, #72]	; 0x48
    7470:	ldr	lr, [r0, #240]	; 0xf0
    7474:	add	r0, r3, ip
    7478:	mov	r3, lr
    747c:	pop	{fp, lr}
    7480:	bx	r3
    7484:	mov	r3, #14
    7488:	mov	r0, r3
    748c:	pop	{fp, pc}

00007490 <readstat_insert_int32_value>:
    7490:	push	{fp, lr}
    7494:	mov	fp, sp
    7498:	ldr	r3, [r0, #308]	; 0x134
    749c:	cmp	r3, #0
    74a0:	beq	74d0 <readstat_insert_int32_value+0x40>
    74a4:	ldr	ip, [r1]
    74a8:	mov	r3, #12
    74ac:	cmp	ip, #3
    74b0:	bne	74d4 <readstat_insert_int32_value+0x44>
    74b4:	ldr	ip, [r1, #1592]	; 0x638
    74b8:	ldr	r3, [r0, #72]	; 0x48
    74bc:	ldr	lr, [r0, #244]	; 0xf4
    74c0:	add	r0, r3, ip
    74c4:	mov	r3, lr
    74c8:	pop	{fp, lr}
    74cc:	bx	r3
    74d0:	mov	r3, #14
    74d4:	mov	r0, r3
    74d8:	pop	{fp, pc}

000074dc <readstat_insert_float_value>:
    74dc:	ldr	r2, [r0, #308]	; 0x134
    74e0:	cmp	r2, #0
    74e4:	beq	750c <readstat_insert_float_value+0x30>
    74e8:	ldr	r3, [r1]
    74ec:	mov	r2, #12
    74f0:	cmp	r3, #4
    74f4:	bne	7510 <readstat_insert_float_value+0x34>
    74f8:	ldr	r2, [r1, #1592]	; 0x638
    74fc:	ldr	r3, [r0, #72]	; 0x48
    7500:	ldr	ip, [r0, #248]	; 0xf8
    7504:	add	r0, r3, r2
    7508:	bx	ip
    750c:	mov	r2, #14
    7510:	mov	r0, r2
    7514:	bx	lr

00007518 <readstat_insert_double_value>:
    7518:	ldr	r2, [r0, #308]	; 0x134
    751c:	cmp	r2, #0
    7520:	beq	7548 <readstat_insert_double_value+0x30>
    7524:	ldr	r3, [r1]
    7528:	mov	r2, #12
    752c:	cmp	r3, #5
    7530:	bne	754c <readstat_insert_double_value+0x34>
    7534:	ldr	r2, [r1, #1592]	; 0x638
    7538:	ldr	r3, [r0, #72]	; 0x48
    753c:	ldr	ip, [r0, #252]	; 0xfc
    7540:	add	r0, r3, r2
    7544:	bx	ip
    7548:	mov	r2, #14
    754c:	mov	r0, r2
    7550:	bx	lr

00007554 <readstat_insert_string_value>:
    7554:	push	{fp, lr}
    7558:	mov	fp, sp
    755c:	ldr	r3, [r0, #308]	; 0x134
    7560:	cmp	r3, #0
    7564:	beq	7594 <readstat_insert_string_value+0x40>
    7568:	ldr	ip, [r1]
    756c:	mov	r3, #12
    7570:	cmp	ip, #0
    7574:	bne	7598 <readstat_insert_string_value+0x44>
    7578:	ldr	ip, [r1, #1592]	; 0x638
    757c:	ldr	r3, [r0, #72]	; 0x48
    7580:	ldr	lr, [r0, #256]	; 0x100
    7584:	add	r0, r3, ip
    7588:	mov	r3, lr
    758c:	pop	{fp, lr}
    7590:	bx	r3
    7594:	mov	r3, #14
    7598:	mov	r0, r3
    759c:	pop	{fp, pc}

000075a0 <readstat_insert_string_ref>:
    75a0:	push	{r4, r5, r6, r7, fp, lr}
    75a4:	add	fp, sp, #16
    75a8:	ldr	r3, [r0, #308]	; 0x134
    75ac:	cmp	r3, #0
    75b0:	beq	7634 <readstat_insert_string_ref+0x94>
    75b4:	ldr	ip, [r1]
    75b8:	mov	r3, #12
    75bc:	cmp	ip, #6
    75c0:	bne	7640 <readstat_insert_string_ref+0xa0>
    75c4:	ldr	r3, [r0, #260]	; 0x104
    75c8:	cmp	r3, #0
    75cc:	beq	763c <readstat_insert_string_ref+0x9c>
    75d0:	cmp	r2, #0
    75d4:	beq	7620 <readstat_insert_string_ref+0x80>
    75d8:	mov	ip, r2
    75dc:	ldr	lr, [ip, #8]!
    75e0:	ldr	r4, [ip, #4]
    75e4:	and	r4, lr, r4
    75e8:	cmn	r4, #1
    75ec:	bne	7620 <readstat_insert_string_ref+0x80>
    75f0:	ldrd	r6, [r2]
    75f4:	mvn	r4, #0
    75f8:	eor	r7, r7, r4
    75fc:	eor	r6, r6, r4
    7600:	orrs	r7, r6, r7
    7604:	bne	7620 <readstat_insert_string_ref+0x80>
    7608:	ldr	r4, [r0, #84]	; 0x54
    760c:	asr	r5, r4, #31
    7610:	strd	r4, [ip]
    7614:	ldr	r4, [r1, #4]
    7618:	asr	r5, r4, #31
    761c:	strd	r4, [r2]
    7620:	ldr	r7, [r1, #1592]	; 0x638
    7624:	ldr	r0, [r0, #72]	; 0x48
    7628:	add	r0, r0, r7
    762c:	pop	{r4, r5, r6, r7, fp, lr}
    7630:	bx	r3
    7634:	mov	r3, #14
    7638:	b	7640 <readstat_insert_string_ref+0xa0>
    763c:	mov	r3, #33	; 0x21
    7640:	mov	r0, r3
    7644:	pop	{r4, r5, r6, r7, fp, pc}

00007648 <readstat_insert_missing_value>:
    7648:	ldr	r2, [r0, #308]	; 0x134
    764c:	cmp	r2, #0
    7650:	moveq	r0, #14
    7654:	bxeq	lr
    7658:	ldr	r2, [r1]
    765c:	cmp	r2, #6
    7660:	beq	767c <readstat_insert_missing_value+0x34>
    7664:	cmp	r2, #0
    7668:	bne	76a0 <readstat_insert_missing_value+0x58>
    766c:	ldr	r2, [r1, #1592]	; 0x638
    7670:	ldr	r3, [r0, #72]	; 0x48
    7674:	ldr	ip, [r0, #264]	; 0x108
    7678:	b	76ac <readstat_insert_missing_value+0x64>
    767c:	ldr	r3, [r0, #260]	; 0x104
    7680:	cmp	r3, #0
    7684:	moveq	r0, #33	; 0x21
    7688:	bxeq	lr
    768c:	ldr	r2, [r1, #1592]	; 0x638
    7690:	ldr	r0, [r0, #72]	; 0x48
    7694:	add	r0, r0, r2
    7698:	mov	r2, #0
    769c:	bx	r3
    76a0:	ldr	r2, [r1, #1592]	; 0x638
    76a4:	ldr	r3, [r0, #72]	; 0x48
    76a8:	ldr	ip, [r0, #268]	; 0x10c
    76ac:	add	r0, r3, r2
    76b0:	bx	ip

000076b4 <readstat_insert_tagged_missing_value>:
    76b4:	push	{fp, lr}
    76b8:	mov	fp, sp
    76bc:	ldr	r3, [r0, #308]	; 0x134
    76c0:	cmp	r3, #0
    76c4:	beq	76e8 <readstat_insert_tagged_missing_value+0x34>
    76c8:	ldr	r3, [r0, #272]	; 0x110
    76cc:	cmp	r3, #0
    76d0:	beq	76f0 <readstat_insert_tagged_missing_value+0x3c>
    76d4:	ldr	ip, [r1, #1592]	; 0x638
    76d8:	ldr	r0, [r0, #72]	; 0x48
    76dc:	add	r0, r0, ip
    76e0:	pop	{fp, lr}
    76e4:	bx	r3
    76e8:	mov	r0, #14
    76ec:	pop	{fp, pc}
    76f0:	ldr	r2, [r1, #1592]	; 0x638
    76f4:	ldr	r3, [r0, #72]	; 0x48
    76f8:	ldr	ip, [r0, #268]	; 0x10c
    76fc:	add	r0, r3, r2
    7700:	blx	ip
    7704:	mov	r0, #23
    7708:	pop	{fp, pc}

0000770c <readstat_end_row>:
    770c:	push	{r4, sl, fp, lr}
    7710:	add	fp, sp, #8
    7714:	mov	r4, r0
    7718:	ldr	r0, [r0, #308]	; 0x134
    771c:	cmp	r0, #0
    7720:	beq	7754 <readstat_end_row+0x48>
    7724:	ldr	r1, [r4, #72]	; 0x48
    7728:	ldr	r2, [r4, #76]	; 0x4c
    772c:	ldr	r3, [r4, #280]	; 0x118
    7730:	mov	r0, r4
    7734:	blx	r3
    7738:	cmp	r0, #0
    773c:	popne	{r4, sl, fp, pc}
    7740:	ldr	r0, [r4, #84]	; 0x54
    7744:	add	r0, r0, #1
    7748:	str	r0, [r4, #84]	; 0x54
    774c:	mov	r0, #0
    7750:	pop	{r4, sl, fp, pc}
    7754:	mov	r0, #14
    7758:	pop	{r4, sl, fp, pc}

0000775c <readstat_end_writing>:
    775c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7760:	add	fp, sp, #28
    7764:	sub	sp, sp, #4
    7768:	mov	sl, r0
    776c:	ldr	r0, [r0, #308]	; 0x134
    7770:	cmp	r0, #0
    7774:	beq	7800 <readstat_end_writing+0xa4>
    7778:	ldr	r2, [sl, #80]	; 0x50
    777c:	ldr	r1, [sl, #84]	; 0x54
    7780:	mov	r0, #9
    7784:	cmp	r1, r2
    7788:	bne	7804 <readstat_end_writing+0xa8>
    778c:	cmp	r1, #0
    7790:	beq	780c <readstat_end_writing+0xb0>
    7794:	ldr	r1, [sl, #64]	; 0x40
    7798:	cmp	r1, #2
    779c:	blt	7830 <readstat_end_writing+0xd4>
    77a0:	ldr	r0, [sl, #60]	; 0x3c
    77a4:	mov	r2, #1
    77a8:	ldr	r3, [r0]
    77ac:	ldm	r3, {r6, r9}
    77b0:	ldr	r4, [r0, r2, lsl #2]
    77b4:	ldm	r4, {r8, ip}
    77b8:	eor	r5, r9, ip
    77bc:	eor	r7, r6, r8
    77c0:	orrs	r7, r7, r5
    77c4:	bne	77d8 <readstat_end_writing+0x7c>
    77c8:	ldr	r7, [r4, #8]
    77cc:	ldr	r3, [r3, #8]
    77d0:	subs	r3, r3, r7
    77d4:	b	77dc <readstat_end_writing+0x80>
    77d8:	subs	r3, r6, r8
    77dc:	cmp	r3, #1
    77e0:	bge	7820 <readstat_end_writing+0xc4>
    77e4:	add	r2, r2, #1
    77e8:	mov	r6, r8
    77ec:	mov	r9, ip
    77f0:	mov	r3, r4
    77f4:	cmp	r2, r1
    77f8:	blt	77b0 <readstat_end_writing+0x54>
    77fc:	b	7830 <readstat_end_writing+0xd4>
    7800:	mov	r0, #14
    7804:	sub	sp, fp, #28
    7808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    780c:	mov	r0, sl
    7810:	bl	72e8 <readstat_begin_writing_data>
    7814:	cmp	r0, #0
    7818:	bne	7804 <readstat_end_writing+0xa8>
    781c:	b	7794 <readstat_end_writing+0x38>
    7820:	ldr	r3, [pc, #44]	; 7854 <readstat_end_writing+0xf8>
    7824:	mov	r2, #4
    7828:	add	r3, pc, r3
    782c:	bl	4e08 <qsort@plt>
    7830:	ldr	r1, [sl, #284]	; 0x11c
    7834:	cmp	r1, #0
    7838:	beq	784c <readstat_end_writing+0xf0>
    783c:	mov	r0, sl
    7840:	sub	sp, fp, #28
    7844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7848:	bx	r1
    784c:	mov	r0, #0
    7850:	b	7804 <readstat_end_writing+0xa8>
    7854:	.word	0x00000028

00007858 <readstat_compare_string_refs>:
    7858:	push	{r4, r5, fp, lr}
    785c:	add	fp, sp, #8
    7860:	ldr	r1, [r1]
    7864:	ldr	r0, [r0]
    7868:	ldrd	r2, [r1]
    786c:	ldrd	r4, [r0]
    7870:	eor	r3, r5, r3
    7874:	eor	r5, r4, r2
    7878:	orrs	r3, r5, r3
    787c:	bne	7890 <readstat_compare_string_refs+0x38>
    7880:	ldr	r1, [r1, #8]
    7884:	ldr	r0, [r0, #8]
    7888:	subs	r0, r0, r1
    788c:	pop	{r4, r5, fp, pc}
    7890:	subs	r0, r4, r2
    7894:	pop	{r4, r5, fp, pc}

00007898 <memreverse>:
    7898:	push	{r4, r5, fp, lr}
    789c:	add	fp, sp, #8
    78a0:	mov	r5, r1
    78a4:	mov	r4, r0
    78a8:	bl	48b0 <machine_is_little_endian@plt>
    78ac:	cmp	r0, #0
    78b0:	beq	78e4 <memreverse+0x4c>
    78b4:	cmp	r5, #2
    78b8:	poplt	{r4, r5, fp, pc}
    78bc:	add	r0, r5, r5, lsr #31
    78c0:	add	r1, r5, r4
    78c4:	sub	r1, r1, #1
    78c8:	asr	r0, r0, #1
    78cc:	ldrb	r2, [r4]
    78d0:	ldrb	r3, [r1]
    78d4:	subs	r0, r0, #1
    78d8:	strb	r3, [r4], #1
    78dc:	strb	r2, [r1], #-1
    78e0:	bne	78cc <memreverse+0x34>
    78e4:	pop	{r4, r5, fp, pc}

000078e8 <cnxptiee>:
    78e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    78ec:	add	fp, sp, #28
    78f0:	sub	sp, sp, #52	; 0x34
    78f4:	mov	r5, r3
    78f8:	mov	r8, r2
    78fc:	mov	r7, r1
    7900:	mov	r9, r0
    7904:	cmp	r1, #0
    7908:	bne	7948 <cnxptiee+0x60>
    790c:	ldr	r4, [pc, #1316]	; 7e38 <cnxptiee+0x550>
    7910:	ldr	r6, [pc, #1316]	; 7e3c <cnxptiee+0x554>
    7914:	mov	r7, #0
    7918:	add	r4, pc, r4
    791c:	add	r6, pc, r6
    7920:	cmp	r7, #3
    7924:	beq	79f0 <cnxptiee+0x108>
    7928:	mov	r0, r6
    792c:	mov	r1, r4
    7930:	mov	r2, #8
    7934:	bl	4bbc <bcmp@plt>
    7938:	add	r4, r4, #8
    793c:	add	r7, r7, #1
    7940:	cmp	r0, #0
    7944:	bne	7920 <cnxptiee+0x38>
    7948:	sub	r0, r7, #1
    794c:	cmp	r0, #2
    7950:	bcc	797c <cnxptiee+0x94>
    7954:	mvn	r0, #0
    7958:	cmp	r7, #3
    795c:	bne	7d6c <cnxptiee+0x484>
    7960:	cmp	r5, #3
    7964:	beq	79d8 <cnxptiee+0xf0>
    7968:	vld1.8	{d16}, [r9]
    796c:	mov	r7, #2
    7970:	add	r9, sp, #16
    7974:	vrev64.8	d16, d16
    7978:	vstr	d16, [sp, #16]
    797c:	cmp	r5, #0
    7980:	bne	79c0 <cnxptiee+0xd8>
    7984:	ldr	r4, [pc, #1204]	; 7e40 <cnxptiee+0x558>
    7988:	ldr	r6, [pc, #1204]	; 7e44 <cnxptiee+0x55c>
    798c:	mov	r5, #0
    7990:	add	r4, pc, r4
    7994:	add	r6, pc, r6
    7998:	cmp	r5, #3
    799c:	beq	7b20 <cnxptiee+0x238>
    79a0:	mov	r0, r6
    79a4:	mov	r1, r4
    79a8:	mov	r2, #8
    79ac:	bl	4bbc <bcmp@plt>
    79b0:	add	r4, r4, #8
    79b4:	add	r5, r5, #1
    79b8:	cmp	r0, #0
    79bc:	bne	7998 <cnxptiee+0xb0>
    79c0:	sub	r1, r5, #1
    79c4:	mvn	r0, #1
    79c8:	cmp	r1, #2
    79cc:	bhi	7d6c <cnxptiee+0x484>
    79d0:	cmp	r7, r5
    79d4:	bne	79f8 <cnxptiee+0x110>
    79d8:	ldr	r0, [r9]
    79dc:	ldr	r1, [r9, #4]
    79e0:	str	r1, [r8, #4]
    79e4:	str	r0, [r8]
    79e8:	mov	r0, #0
    79ec:	b	7d6c <cnxptiee+0x484>
    79f0:	mvn	r0, #0
    79f4:	b	7d6c <cnxptiee+0x484>
    79f8:	cmp	r7, #1
    79fc:	beq	7b28 <cnxptiee+0x240>
    7a00:	cmp	r7, #2
    7a04:	bne	7d44 <cnxptiee+0x45c>
    7a08:	cmp	r5, #1
    7a0c:	bne	7c80 <cnxptiee+0x398>
    7a10:	mov	r0, #0
    7a14:	str	r0, [sp, #28]
    7a18:	ldrb	r5, [r9]
    7a1c:	ldrb	r6, [r9, #1]
    7a20:	ldrb	r4, [r9, #2]
    7a24:	ldrb	r7, [r9, #3]
    7a28:	ldr	sl, [r9, #4]
    7a2c:	strb	r7, [sp, #35]	; 0x23
    7a30:	strb	r4, [sp, #34]	; 0x22
    7a34:	strb	r6, [sp, #33]	; 0x21
    7a38:	strb	r5, [sp, #32]
    7a3c:	bl	48b0 <machine_is_little_endian@plt>
    7a40:	cmp	r0, #0
    7a44:	str	sl, [sp, #28]
    7a48:	strbne	r5, [sp, #35]	; 0x23
    7a4c:	strbne	r7, [sp, #32]
    7a50:	strbne	r6, [sp, #34]	; 0x22
    7a54:	strbne	r4, [sp, #33]	; 0x21
    7a58:	bl	48b0 <machine_is_little_endian@plt>
    7a5c:	cmp	r0, #0
    7a60:	mov	r9, #0
    7a64:	revne	r0, sl
    7a68:	strne	r0, [sp, #28]
    7a6c:	and	r0, r6, r5
    7a70:	str	r9, [r8, #4]
    7a74:	str	r9, [r8]
    7a78:	cmp	r0, #255	; 0xff
    7a7c:	beq	7d74 <cnxptiee+0x48c>
    7a80:	ldr	r7, [sp, #32]
    7a84:	ldr	r4, [sp, #28]
    7a88:	mov	r5, r7
    7a8c:	orrs	r0, r4, r7
    7a90:	lsr	ip, r4, #16
    7a94:	lsr	r6, r4, #8
    7a98:	lsr	r3, r4, #24
    7a9c:	str	r4, [sp, #36]	; 0x24
    7aa0:	bfc	r5, #20, #12
    7aa4:	str	r5, [sp, #40]	; 0x28
    7aa8:	beq	7d84 <cnxptiee+0x49c>
    7aac:	orr	r5, r5, #1048576	; 0x100000
    7ab0:	movw	r1, #1023	; 0x3ff
    7ab4:	str	r5, [sp, #40]	; 0x28
    7ab8:	ubfx	r0, r7, #20, #11
    7abc:	sub	r0, r0, r1
    7ac0:	ands	r1, r0, #3
    7ac4:	beq	7af0 <cnxptiee+0x208>
    7ac8:	rsb	r2, r1, #8
    7acc:	and	r3, r3, #224	; 0xe0
    7ad0:	lsl	r4, r4, r1
    7ad4:	lsr	r2, r3, r2
    7ad8:	lsr	ip, r4, #16
    7adc:	lsr	r6, r4, #8
    7ae0:	lsr	r3, r4, #24
    7ae4:	str	r4, [sp, #36]	; 0x24
    7ae8:	orr	r5, r2, r5, lsl r1
    7aec:	str	r5, [sp, #40]	; 0x28
    7af0:	mov	r1, #-16777216	; 0xff000000
    7af4:	and	r2, r7, #-2147483648	; 0x80000000
    7af8:	cmn	r0, #260	; 0x104
    7afc:	and	r1, r1, r0, lsl #22
    7b00:	add	r1, r1, #1090519040	; 0x41000000
    7b04:	orr	r1, r1, r2
    7b08:	orr	sl, r1, r5
    7b0c:	str	sl, [sp, #40]	; 0x28
    7b10:	bge	7d98 <cnxptiee+0x4b0>
    7b14:	mov	r0, #0
    7b18:	str	r0, [r8, #4]
    7b1c:	b	79e4 <cnxptiee+0xfc>
    7b20:	mvn	r0, #1
    7b24:	b	7d6c <cnxptiee+0x484>
    7b28:	mov	r0, #0
    7b2c:	str	r0, [sp, #28]
    7b30:	str	r0, [sp, #24]
    7b34:	ldr	r6, [r9]
    7b38:	ldr	r4, [r9, #4]
    7b3c:	tst	r6, #255	; 0xff
    7b40:	str	r4, [sp, #44]	; 0x2c
    7b44:	str	r6, [sp, #40]	; 0x28
    7b48:	str	r0, [r8, #4]
    7b4c:	str	r0, [r8]
    7b50:	beq	7b70 <cnxptiee+0x288>
    7b54:	add	r0, sp, #40	; 0x28
    7b58:	mov	r1, r8
    7b5c:	mov	r2, #7
    7b60:	orr	r0, r0, #1
    7b64:	bl	4bbc <bcmp@plt>
    7b68:	cmp	r0, #0
    7b6c:	beq	7d34 <cnxptiee+0x44c>
    7b70:	str	r6, [sp, #28]
    7b74:	bl	48b0 <machine_is_little_endian@plt>
    7b78:	cmp	r0, #0
    7b7c:	beq	7b9c <cnxptiee+0x2b4>
    7b80:	lsr	r0, r6, #24
    7b84:	strb	r6, [sp, #31]
    7b88:	strb	r0, [sp, #28]
    7b8c:	lsr	r0, r6, #8
    7b90:	strb	r0, [sp, #30]
    7b94:	lsr	r0, r6, #16
    7b98:	strb	r0, [sp, #29]
    7b9c:	str	r4, [sp, #24]
    7ba0:	bl	48b0 <machine_is_little_endian@plt>
    7ba4:	cmp	r0, #0
    7ba8:	beq	7bcc <cnxptiee+0x2e4>
    7bac:	lsr	r0, r4, #24
    7bb0:	strb	r4, [sp, #27]
    7bb4:	strb	r0, [sp, #24]
    7bb8:	lsr	r0, r4, #8
    7bbc:	strb	r0, [sp, #26]
    7bc0:	lsr	r0, r4, #16
    7bc4:	strb	r0, [sp, #25]
    7bc8:	ldr	r4, [sp, #24]
    7bcc:	ldr	r0, [sp, #28]
    7bd0:	cmn	r4, #1
    7bd4:	biceq	r1, r0, #-2147483648	; 0x80000000
    7bd8:	cmneq	r1, #-2147483647	; 0x80000001
    7bdc:	beq	7c94 <cnxptiee+0x3ac>
    7be0:	bic	r7, r0, #-16777216	; 0xff000000
    7be4:	orrs	r1, r0, r4
    7be8:	str	r4, [sp, #32]
    7bec:	str	r7, [sp, #36]	; 0x24
    7bf0:	beq	7d44 <cnxptiee+0x45c>
    7bf4:	mov	r1, #3
    7bf8:	tst	r0, #8388608	; 0x800000
    7bfc:	bne	7c14 <cnxptiee+0x32c>
    7c00:	tst	r0, #4194304	; 0x400000
    7c04:	mov	r1, #2
    7c08:	moveq	r1, #1
    7c0c:	tsteq	r0, #2097152	; 0x200000
    7c10:	beq	7e30 <cnxptiee+0x548>
    7c14:	rsb	r2, r1, #32
    7c18:	and	r3, r0, #7
    7c1c:	lsr	r7, r7, r1
    7c20:	lsl	r2, r3, r2
    7c24:	str	r7, [sp, #36]	; 0x24
    7c28:	orr	r4, r2, r4, lsr r1
    7c2c:	str	r4, [sp, #32]
    7c30:	and	r0, r0, #-2147483648	; 0x80000000
    7c34:	bic	r2, r7, #1048576	; 0x100000
    7c38:	orr	r0, r2, r0
    7c3c:	and	r2, r6, #127	; 0x7f
    7c40:	lsr	r6, r7, #8
    7c44:	orr	r1, r1, r2, lsl #2
    7c48:	movw	r2, #0
    7c4c:	movt	r2, #61376	; 0xefc0
    7c50:	add	r1, r2, r1, lsl #20
    7c54:	add	r1, r1, #267386880	; 0xff00000
    7c58:	add	r1, r1, #805306368	; 0x30000000
    7c5c:	orr	r9, r0, r1
    7c60:	lsr	r0, r4, #16
    7c64:	str	r0, [sp, #12]
    7c68:	lsr	r0, r4, #8
    7c6c:	lsr	sl, r9, #16
    7c70:	str	r9, [sp, #36]	; 0x24
    7c74:	str	r0, [sp, #8]
    7c78:	lsr	r0, r4, #24
    7c7c:	b	7cd4 <cnxptiee+0x3ec>
    7c80:	ldr	r0, [r9]
    7c84:	ldr	r1, [r9, #4]
    7c88:	str	r1, [r8, #4]
    7c8c:	str	r0, [r8]
    7c90:	b	7d44 <cnxptiee+0x45c>
    7c94:	mov	r1, #0
    7c98:	mov	r2, #0
    7c9c:	mov	sl, #240	; 0xf0
    7ca0:	mov	r6, #0
    7ca4:	mov	r4, #0
    7ca8:	mov	r7, #0
    7cac:	str	r1, [sp, #12]
    7cb0:	movw	r1, #0
    7cb4:	str	r2, [sp, #32]
    7cb8:	movt	r1, #16368	; 0x3ff0
    7cbc:	bfi	r0, r1, #0, #31
    7cc0:	orr	r9, r0, #1073741824	; 0x40000000
    7cc4:	mov	r0, #0
    7cc8:	str	r0, [sp, #8]
    7ccc:	mov	r0, #0
    7cd0:	str	r9, [sp, #36]	; 0x24
    7cd4:	str	r0, [sp, #4]
    7cd8:	bl	48b0 <machine_is_little_endian@plt>
    7cdc:	cmp	r0, #0
    7ce0:	beq	7cfc <cnxptiee+0x414>
    7ce4:	lsr	r0, r9, #24
    7ce8:	strb	r7, [sp, #39]	; 0x27
    7cec:	strb	r6, [sp, #38]	; 0x26
    7cf0:	strb	sl, [sp, #37]	; 0x25
    7cf4:	strb	r0, [sp, #36]	; 0x24
    7cf8:	ldr	r9, [sp, #36]	; 0x24
    7cfc:	str	r9, [r8]
    7d00:	bl	48b0 <machine_is_little_endian@plt>
    7d04:	cmp	r0, #0
    7d08:	beq	7d2c <cnxptiee+0x444>
    7d0c:	ldr	r0, [sp, #4]
    7d10:	strb	r4, [sp, #35]	; 0x23
    7d14:	strb	r0, [sp, #32]
    7d18:	ldr	r0, [sp, #8]
    7d1c:	strb	r0, [sp, #34]	; 0x22
    7d20:	ldr	r0, [sp, #12]
    7d24:	strb	r0, [sp, #33]	; 0x21
    7d28:	ldr	r4, [sp, #32]
    7d2c:	str	r4, [r8, #4]
    7d30:	b	7d44 <cnxptiee+0x45c>
    7d34:	movw	r0, #65535	; 0xffff
    7d38:	strh	r0, [r8]
    7d3c:	mvn	r0, r6
    7d40:	strb	r0, [r8, #2]
    7d44:	mov	r0, #0
    7d48:	cmp	r5, #3
    7d4c:	bne	7d6c <cnxptiee+0x484>
    7d50:	ldr	r1, [r8]
    7d54:	ldr	r2, [r8, #4]
    7d58:	str	r2, [sp, #20]
    7d5c:	str	r1, [sp, #16]
    7d60:	vldr	d16, [sp, #16]
    7d64:	vrev64.8	d16, d16
    7d68:	vst1.8	{d16}, [r8]
    7d6c:	sub	sp, fp, #28
    7d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d74:	cmp	r4, #45	; 0x2d
    7d78:	mvn	r0, r4
    7d7c:	movweq	r0, #109	; 0x6d
    7d80:	b	7db4 <cnxptiee+0x4cc>
    7d84:	stmib	sp, {r3, r6}
    7d88:	mov	r3, ip
    7d8c:	str	ip, [sp, #12]
    7d90:	mov	sl, r5
    7d94:	b	7dd0 <cnxptiee+0x4e8>
    7d98:	cmp	r0, #249	; 0xf9
    7d9c:	blt	7dbc <cnxptiee+0x4d4>
    7da0:	mvn	r0, #0
    7da4:	str	r0, [r8, #4]
    7da8:	str	r0, [r8, #1]
    7dac:	mov	r0, #127	; 0x7f
    7db0:	orr	r0, r0, r7, lsr #24
    7db4:	strb	r0, [r8]
    7db8:	b	79e8 <cnxptiee+0x100>
    7dbc:	lsr	r9, sl, #24
    7dc0:	mov	r7, r5
    7dc4:	stmib	sp, {r3, r6}
    7dc8:	mov	r3, ip
    7dcc:	str	ip, [sp, #12]
    7dd0:	bl	48b0 <machine_is_little_endian@plt>
    7dd4:	cmp	r0, #0
    7dd8:	beq	7df8 <cnxptiee+0x510>
    7ddc:	lsr	r0, r7, #8
    7de0:	strb	r7, [sp, #43]	; 0x2b
    7de4:	strb	r9, [sp, #40]	; 0x28
    7de8:	strb	r0, [sp, #42]	; 0x2a
    7dec:	lsr	r0, r5, #16
    7df0:	strb	r0, [sp, #41]	; 0x29
    7df4:	ldr	sl, [sp, #40]	; 0x28
    7df8:	str	sl, [r8]
    7dfc:	bl	48b0 <machine_is_little_endian@plt>
    7e00:	cmp	r0, #0
    7e04:	beq	7e28 <cnxptiee+0x540>
    7e08:	ldr	r0, [sp, #4]
    7e0c:	strb	r4, [sp, #39]	; 0x27
    7e10:	strb	r0, [sp, #36]	; 0x24
    7e14:	ldr	r0, [sp, #8]
    7e18:	strb	r0, [sp, #38]	; 0x26
    7e1c:	ldr	r0, [sp, #12]
    7e20:	strb	r0, [sp, #37]	; 0x25
    7e24:	ldr	r4, [sp, #36]	; 0x24
    7e28:	str	r4, [r8, #4]
    7e2c:	b	79e8 <cnxptiee+0x100>
    7e30:	mov	r1, #0
    7e34:	b	7c30 <cnxptiee+0x348>
    7e38:	.word	0x0003c9e0
    7e3c:	.word	0x0003c9f4
    7e40:	.word	0x0003c968
    7e44:	.word	0x0003c97c

00007e48 <get_native>:
    7e48:	push	{r4, r5, r6, sl, fp, lr}
    7e4c:	add	fp, sp, #16
    7e50:	ldr	r5, [pc, #68]	; 7e9c <get_native+0x54>
    7e54:	ldr	r6, [pc, #68]	; 7ea0 <get_native+0x58>
    7e58:	mov	r4, #0
    7e5c:	add	r5, pc, r5
    7e60:	add	r6, pc, r6
    7e64:	cmp	r4, #3
    7e68:	beq	7e90 <get_native+0x48>
    7e6c:	mov	r0, r6
    7e70:	mov	r1, r5
    7e74:	mov	r2, #8
    7e78:	bl	4bbc <bcmp@plt>
    7e7c:	add	r5, r5, #8
    7e80:	add	r4, r4, #1
    7e84:	cmp	r0, #0
    7e88:	bne	7e64 <get_native+0x1c>
    7e8c:	b	7e94 <get_native+0x4c>
    7e90:	mvn	r4, #0
    7e94:	mov	r0, r4
    7e98:	pop	{r4, r5, r6, sl, fp, pc}
    7e9c:	.word	0x0003c49c
    7ea0:	.word	0x0003c4b0
    7ea4:	.word	0x00000000

00007ea8 <sas_read8>:
    7ea8:	mov	r2, r1
    7eac:	mov	r1, r0
    7eb0:	ldr	r0, [r0]
    7eb4:	ldr	r1, [r1, #4]
    7eb8:	cmp	r2, #0
    7ebc:	bxeq	lr
    7ec0:	b	479c <byteswap8@plt>

00007ec4 <sas_read4>:
    7ec4:	ldr	r0, [r0]
    7ec8:	cmp	r1, #0
    7ecc:	bxeq	lr
    7ed0:	b	47b4 <byteswap4@plt>

00007ed4 <sas_read2>:
    7ed4:	ldrh	r0, [r0]
    7ed8:	cmp	r1, #0
    7edc:	bxeq	lr
    7ee0:	b	48a4 <byteswap2@plt>

00007ee4 <sas_subheader_remainder>:
    7ee4:	sub	r0, r0, r1, lsl #1
    7ee8:	sub	r0, r0, #4
    7eec:	bx	lr

00007ef0 <sas_read_header>:
    7ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ef4:	add	fp, sp, #28
    7ef8:	sub	sp, sp, #4
    7efc:	vpush	{d8-d9}
    7f00:	sub	sp, sp, #408	; 0x198
    7f04:	sub	sp, sp, #1024	; 0x400
    7f08:	vmov.i32	q8, #0	; 0x00000000
    7f0c:	mov	r6, r0
    7f10:	add	r0, sp, #72	; 0x48
    7f14:	mov	sl, r1
    7f18:	mov	r5, r2
    7f1c:	mov	r4, r3
    7f20:	add	r1, r0, #16
    7f24:	mov	r2, r0
    7f28:	vst1.64	{d16-d17}, [r1]
    7f2c:	add	r1, r0, #28
    7f30:	vst1.32	{d16-d17}, [r1]
    7f34:	mov	r1, #20
    7f38:	vst1.64	{d16-d17}, [r2], r1
    7f3c:	mov	r1, #60	; 0x3c
    7f40:	str	r1, [r2]
    7f44:	mov	r1, #1
    7f48:	str	r1, [sp, #84]	; 0x54
    7f4c:	bl	4850 <mktime@plt>
    7f50:	ldr	r3, [r6, #12]
    7f54:	ldr	r2, [r6, #20]
    7f58:	mov	r7, r0
    7f5c:	sub	r0, fp, #216	; 0xd8
    7f60:	mov	r1, #164	; 0xa4
    7f64:	blx	r3
    7f68:	cmp	r0, #164	; 0xa4
    7f6c:	bcs	7f78 <sas_read_header+0x88>
    7f70:	mov	r9, #2
    7f74:	b	848c <sas_read_header+0x59c>
    7f78:	str	r5, [sp, #32]
    7f7c:	sub	r0, fp, #216	; 0xd8
    7f80:	mov	r2, #32
    7f84:	ldr	r1, [pc, #1348]	; 84d0 <sas_read_header+0x5e0>
    7f88:	ldr	r1, [pc, r1]
    7f8c:	bl	4bbc <bcmp@plt>
    7f90:	cmp	r0, #0
    7f94:	beq	7fb8 <sas_read_header+0xc8>
    7f98:	ldr	r1, [pc, #1332]	; 84d4 <sas_read_header+0x5e4>
    7f9c:	sub	r0, fp, #216	; 0xd8
    7fa0:	mov	r2, #32
    7fa4:	ldr	r1, [pc, r1]
    7fa8:	bl	4bbc <bcmp@plt>
    7fac:	mov	r9, #5
    7fb0:	cmp	r0, #0
    7fb4:	bne	848c <sas_read_header+0x59c>
    7fb8:	ldrb	r0, [fp, #-181]	; 0xffffff4b
    7fbc:	mov	r9, #5
    7fc0:	cmp	r0, #51	; 0x33
    7fc4:	moveq	r0, #4
    7fc8:	streq	r0, [sl, #24]
    7fcc:	ldrb	r0, [fp, #-184]	; 0xffffff48
    7fd0:	cmp	r0, #51	; 0x33
    7fd4:	moveq	r0, #1
    7fd8:	streq	r0, [sl, #4]
    7fdc:	ldrb	r0, [fp, #-179]	; 0xffffff4d
    7fe0:	cmp	r0, #1
    7fe4:	beq	8000 <sas_read_header+0x110>
    7fe8:	cmp	r0, #0
    7fec:	bne	848c <sas_read_header+0x59c>
    7ff0:	str	r7, [sp, #24]
    7ff4:	mov	r8, #0
    7ff8:	bl	48b0 <machine_is_little_endian@plt>
    7ffc:	b	8014 <sas_read_header+0x124>
    8000:	str	r7, [sp, #24]
    8004:	bl	48b0 <machine_is_little_endian@plt>
    8008:	clz	r0, r0
    800c:	mov	r8, #1
    8010:	lsr	r0, r0, #5
    8014:	str	r0, [sp, #28]
    8018:	str	r8, [sl]
    801c:	add	lr, sl, #32
    8020:	add	ip, sl, #40	; 0x28
    8024:	add	r7, sl, #56	; 0x38
    8028:	add	r5, sl, #64	; 0x40
    802c:	mov	r1, #62	; 0x3e
    8030:	ldr	r0, [pc, #1184]	; 84d8 <sas_read_header+0x5e8>
    8034:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    8038:	add	r0, pc, r0
    803c:	add	r0, r0, #4
    8040:	ldr	r2, [r0, #-4]
    8044:	cmp	r2, r3
    8048:	beq	80a0 <sas_read_header+0x1b0>
    804c:	subs	r1, r1, #1
    8050:	add	r0, r0, #36	; 0x24
    8054:	bne	8040 <sas_read_header+0x150>
    8058:	ldr	r0, [sl, #144]	; 0x90
    805c:	cmp	r0, #0
    8060:	bne	80a4 <sas_read_header+0x1b4>
    8064:	ldr	r6, [sp, #32]
    8068:	mov	r9, #7
    806c:	cmp	r6, #0
    8070:	beq	848c <sas_read_header+0x59c>
    8074:	ldr	r2, [pc, #1120]	; 84dc <sas_read_header+0x5ec>
    8078:	mov	r5, r4
    807c:	add	r4, sp, #120	; 0x78
    8080:	mov	r1, #1024	; 0x400
    8084:	mov	r0, r4
    8088:	add	r2, pc, r2
    808c:	bl	4c4c <snprintf@plt>
    8090:	mov	r0, r4
    8094:	mov	r1, r5
    8098:	blx	r6
    809c:	b	848c <sas_read_header+0x59c>
    80a0:	str	r0, [sl, #144]	; 0x90
    80a4:	sub	r1, fp, #216	; 0xd8
    80a8:	add	r0, sl, #80	; 0x50
    80ac:	mov	r2, #64	; 0x40
    80b0:	str	lr, [sp, #16]
    80b4:	mov	r8, ip
    80b8:	str	r5, [sp, #20]
    80bc:	add	r1, r1, #92	; 0x5c
    80c0:	bl	4910 <memcpy@plt>
    80c4:	ldr	r0, [sl, #24]
    80c8:	ldr	r3, [r6, #8]
    80cc:	ldr	r2, [r6, #20]
    80d0:	mov	r1, #1
    80d4:	blx	r3
    80d8:	cmn	r0, #1
    80dc:	beq	8488 <sas_read_header+0x598>
    80e0:	ldr	r3, [r6, #12]
    80e4:	ldr	r2, [r6, #20]
    80e8:	add	r0, sp, #64	; 0x40
    80ec:	mov	r1, #8
    80f0:	blx	r3
    80f4:	cmp	r0, #8
    80f8:	bcc	7f70 <sas_read_header+0x80>
    80fc:	ldr	r5, [sp, #28]
    8100:	cmp	r5, #0
    8104:	beq	8114 <sas_read_header+0x224>
    8108:	vldr	d0, [sp, #64]	; 0x40
    810c:	bl	4ec8 <byteswap_double@plt>
    8110:	vstr	d0, [sp, #64]	; 0x40
    8114:	ldr	r3, [r6, #12]
    8118:	ldr	r2, [r6, #20]
    811c:	add	r0, sp, #56	; 0x38
    8120:	mov	r1, #8
    8124:	blx	r3
    8128:	cmp	r0, #8
    812c:	bcc	7f70 <sas_read_header+0x80>
    8130:	cmp	r5, #0
    8134:	str	r4, [sp, #12]
    8138:	beq	8148 <sas_read_header+0x258>
    813c:	vldr	d0, [sp, #56]	; 0x38
    8140:	bl	4ec8 <byteswap_double@plt>
    8144:	vstr	d0, [sp, #56]	; 0x38
    8148:	ldr	r0, [sp, #24]
    814c:	vldr	d16, [sp, #64]	; 0x40
    8150:	vmov	s0, r0
    8154:	vcvt.f64.s32	d9, s0
    8158:	vadd.f64	d8, d16, d9
    815c:	vmov.f64	d0, d8
    8160:	bl	4d00 <__isnan@plt>
    8164:	cmp	r0, #0
    8168:	mov	r4, #0
    816c:	mov	r0, #0
    8170:	bne	81a4 <sas_read_header+0x2b4>
    8174:	vldr	d16, [pc, #804]	; 84a0 <sas_read_header+0x5b0>
    8178:	mvn	r0, #-2147483648	; 0x80000000
    817c:	vcmpe.f64	d8, d16
    8180:	vmrs	APSR_nzcv, fpscr
    8184:	bgt	81a4 <sas_read_header+0x2b4>
    8188:	vldr	d16, [pc, #792]	; 84a8 <sas_read_header+0x5b8>
    818c:	mov	r0, #-2147483648	; 0x80000000
    8190:	vcmpe.f64	d8, d16
    8194:	vmrs	APSR_nzcv, fpscr
    8198:	bmi	81a4 <sas_read_header+0x2b4>
    819c:	vcvt.s32.f64	s0, d8
    81a0:	vmov	r0, s0
    81a4:	str	r0, [sl, #72]	; 0x48
    81a8:	vldr	d16, [sp, #56]	; 0x38
    81ac:	vadd.f64	d8, d16, d9
    81b0:	vmov.f64	d0, d8
    81b4:	bl	4d00 <__isnan@plt>
    81b8:	cmp	r0, #0
    81bc:	bne	81f0 <sas_read_header+0x300>
    81c0:	vldr	d16, [pc, #728]	; 84a0 <sas_read_header+0x5b0>
    81c4:	mvn	r4, #-2147483648	; 0x80000000
    81c8:	vcmpe.f64	d8, d16
    81cc:	vmrs	APSR_nzcv, fpscr
    81d0:	bgt	81f0 <sas_read_header+0x300>
    81d4:	vldr	d16, [pc, #716]	; 84a8 <sas_read_header+0x5b8>
    81d8:	mov	r4, #-2147483648	; 0x80000000
    81dc:	vcmpe.f64	d8, d16
    81e0:	vmrs	APSR_nzcv, fpscr
    81e4:	bmi	81f0 <sas_read_header+0x300>
    81e8:	vcvt.s32.f64	s0, d8
    81ec:	vmov	r4, s0
    81f0:	str	r4, [sl, #76]	; 0x4c
    81f4:	mov	r0, #16
    81f8:	mov	r1, #1
    81fc:	ldr	r3, [r6, #8]
    8200:	ldr	r2, [r6, #20]
    8204:	blx	r3
    8208:	cmn	r0, #1
    820c:	beq	8488 <sas_read_header+0x598>
    8210:	ldr	r3, [r6, #12]
    8214:	ldr	r2, [r6, #20]
    8218:	add	r0, sp, #52	; 0x34
    821c:	mov	r1, #4
    8220:	blx	r3
    8224:	cmp	r0, #4
    8228:	bcc	7f70 <sas_read_header+0x80>
    822c:	ldr	r3, [r6, #12]
    8230:	ldr	r2, [r6, #20]
    8234:	add	r0, sp, #48	; 0x30
    8238:	mov	r1, #4
    823c:	blx	r3
    8240:	cmp	r0, #4
    8244:	bcc	7f70 <sas_read_header+0x80>
    8248:	ldr	r0, [sp, #52]	; 0x34
    824c:	cmp	r5, #0
    8250:	beq	8278 <sas_read_header+0x388>
    8254:	bl	47b4 <byteswap4@plt>
    8258:	ldr	r4, [sp, #20]
    825c:	mov	r1, #0
    8260:	strd	r0, [r4]
    8264:	ldr	r0, [sp, #48]	; 0x30
    8268:	bl	47b4 <byteswap4@plt>
    826c:	mov	r2, r0
    8270:	ldrd	r0, [r4]
    8274:	b	8288 <sas_read_header+0x398>
    8278:	ldr	r2, [sp, #20]
    827c:	mov	r1, #0
    8280:	strd	r0, [r2]
    8284:	ldr	r2, [sp, #48]	; 0x30
    8288:	ldr	r4, [sp, #16]
    828c:	mov	r3, #0
    8290:	cmp	r2, #1024	; 0x400
    8294:	strd	r2, [r4]
    8298:	bcc	848c <sas_read_header+0x59c>
    829c:	subs	r3, r0, #1024	; 0x400
    82a0:	sbcs	r3, r1, #0
    82a4:	blt	848c <sas_read_header+0x59c>
    82a8:	cmp	r2, #16777216	; 0x1000000
    82ac:	bhi	848c <sas_read_header+0x59c>
    82b0:	rsbs	r0, r0, #1048576	; 0x100000
    82b4:	rscs	r0, r1, #0
    82b8:	blt	848c <sas_read_header+0x59c>
    82bc:	ldr	r0, [sl, #4]
    82c0:	cmp	r0, #0
    82c4:	beq	8308 <sas_read_header+0x418>
    82c8:	add	r0, pc, #480	; 0x1e0
    82cc:	mov	r1, #8
    82d0:	vld1.64	{d16-d17}, [r0]
    82d4:	add	r0, sp, #120	; 0x78
    82d8:	vst1.64	{d16-d17}, [r8]
    82dc:	ldr	r3, [r6, #12]
    82e0:	ldr	r2, [r6, #20]
    82e4:	blx	r3
    82e8:	cmp	r0, #8
    82ec:	bcc	7f70 <sas_read_header+0x80>
    82f0:	ldr	r0, [sp, #120]	; 0x78
    82f4:	ldr	r1, [sp, #124]	; 0x7c
    82f8:	cmp	r5, #0
    82fc:	beq	8344 <sas_read_header+0x454>
    8300:	bl	479c <byteswap8@plt>
    8304:	b	8344 <sas_read_header+0x454>
    8308:	add	r0, pc, #432	; 0x1b0
    830c:	mov	r1, #4
    8310:	vld1.64	{d16-d17}, [r0]
    8314:	add	r0, sp, #120	; 0x78
    8318:	vst1.64	{d16-d17}, [r8]
    831c:	ldr	r3, [r6, #12]
    8320:	ldr	r2, [r6, #20]
    8324:	blx	r3
    8328:	cmp	r0, #4
    832c:	bcc	7f70 <sas_read_header+0x80>
    8330:	ldr	r0, [sp, #120]	; 0x78
    8334:	cmp	r5, #0
    8338:	beq	8340 <sas_read_header+0x450>
    833c:	bl	47b4 <byteswap4@plt>
    8340:	mov	r1, #0
    8344:	strd	r0, [r7]
    8348:	rsbs	r0, r0, #16777216	; 0x1000000
    834c:	rscs	r0, r1, #0
    8350:	blt	848c <sas_read_header+0x59c>
    8354:	ldr	r3, [r6, #8]
    8358:	ldr	r2, [r6, #20]
    835c:	mov	r0, #8
    8360:	mov	r1, #1
    8364:	blx	r3
    8368:	cmn	r0, #1
    836c:	beq	8454 <sas_read_header+0x564>
    8370:	ldr	r3, [r6, #12]
    8374:	ldr	r2, [r6, #20]
    8378:	sub	r0, fp, #336	; 0x150
    837c:	mov	r1, #120	; 0x78
    8380:	blx	r3
    8384:	cmp	r0, #120	; 0x78
    8388:	mov	r9, #2
    838c:	bcc	848c <sas_read_header+0x59c>
    8390:	add	r0, sp, #36	; 0x24
    8394:	add	r2, sp, #44	; 0x2c
    8398:	add	r3, sp, #40	; 0x28
    839c:	str	r0, [sp]
    83a0:	sub	r0, fp, #336	; 0x150
    83a4:	ldr	r1, [pc, #312]	; 84e4 <sas_read_header+0x5f4>
    83a8:	add	r1, pc, r1
    83ac:	bl	4c58 <__isoc99_sscanf@plt>
    83b0:	cmp	r0, #3
    83b4:	mov	r9, #5
    83b8:	bne	848c <sas_read_header+0x59c>
    83bc:	ldr	r0, [sp, #44]	; 0x2c
    83c0:	ldr	r1, [sp, #40]	; 0x28
    83c4:	ldr	r2, [sp, #36]	; 0x24
    83c8:	mov	r9, #0
    83cc:	orr	r5, r0, #1
    83d0:	orr	r3, r2, r1
    83d4:	eor	r5, r5, #9
    83d8:	orrs	r3, r5, r3
    83dc:	movwne	r3, #1
    83e0:	str	r3, [sl, #8]
    83e4:	add	r3, sl, #12
    83e8:	stm	r3, {r0, r1, r2}
    83ec:	mov	r1, #0
    83f0:	ldr	r0, [sp, #20]
    83f4:	ldr	r3, [r6, #8]
    83f8:	ldr	r2, [r6, #20]
    83fc:	ldr	r0, [r0]
    8400:	blx	r3
    8404:	cmn	r0, #1
    8408:	bne	848c <sas_read_header+0x59c>
    840c:	ldr	r0, [sp, #32]
    8410:	ldr	r8, [sp, #12]
    8414:	cmp	r0, #0
    8418:	beq	8488 <sas_read_header+0x598>
    841c:	ldr	r0, [sp, #20]
    8420:	add	r4, sp, #120	; 0x78
    8424:	ldrd	r0, [r0]
    8428:	stm	sp, {r0, r1}
    842c:	mov	r0, r4
    8430:	mov	r1, #1024	; 0x400
    8434:	ldr	r2, [pc, #172]	; 84e8 <sas_read_header+0x5f8>
    8438:	add	r2, pc, r2
    843c:	bl	4c4c <snprintf@plt>
    8440:	ldr	r2, [sp, #32]
    8444:	mov	r0, r4
    8448:	mov	r1, r8
    844c:	blx	r2
    8450:	b	8488 <sas_read_header+0x598>
    8454:	ldr	r5, [sp, #32]
    8458:	cmp	r5, #0
    845c:	beq	8488 <sas_read_header+0x598>
    8460:	ldr	r2, [pc, #120]	; 84e0 <sas_read_header+0x5f0>
    8464:	add	r4, sp, #120	; 0x78
    8468:	mov	r1, #1024	; 0x400
    846c:	mov	r3, #8
    8470:	mov	r0, r4
    8474:	add	r2, pc, r2
    8478:	bl	4c4c <snprintf@plt>
    847c:	ldr	r1, [sp, #12]
    8480:	mov	r0, r4
    8484:	blx	r5
    8488:	mov	r9, #15
    848c:	mov	r0, r9
    8490:	sub	sp, fp, #48	; 0x30
    8494:	vpop	{d8-d9}
    8498:	add	sp, sp, #4
    849c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    84a0:	.word	0xffc00000
    84a4:	.word	0x41dfffff
    84a8:	.word	0x00000000
    84ac:	.word	0xc1e00000
    84b0:	.word	0x00000028
    84b4:	.word	0x00000000
    84b8:	.word	0x00000018
    84bc:	.word	0x00000000
    84c0:	.word	0x00000018
    84c4:	.word	0x00000000
    84c8:	.word	0x0000000c
    84cc:	.word	0x00000000
    84d0:	.word	0x0003c344
    84d4:	.word	0x0003c2f8
    84d8:	.word	0x0003c320
    84dc:	.word	0x0001c028
    84e0:	.word	0x0001bc5f
    84e4:	.word	0x0001bd52
    84e8:	.word	0x0001bccf

000084ec <sas_write_header>:
    84ec:	sub	sp, sp, #8
    84f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    84f4:	add	fp, sp, #28
    84f8:	sub	sp, sp, #228	; 0xe4
    84fc:	vmov.i32	q8, #0	; 0x00000000
    8500:	mov	sl, r0
    8504:	sub	r0, fp, #80	; 0x50
    8508:	mov	r8, r1
    850c:	str	r2, [fp, #8]
    8510:	str	r3, [fp, #12]
    8514:	add	r1, r0, #16
    8518:	mov	r2, r0
    851c:	vst1.64	{d16-d17}, [r1]
    8520:	add	r1, r0, #28
    8524:	vst1.32	{d16-d17}, [r1]
    8528:	mov	r1, #20
    852c:	vst1.64	{d16-d17}, [r2], r1
    8530:	mov	r1, #60	; 0x3c
    8534:	str	r1, [r2]
    8538:	mov	r1, #1
    853c:	str	r1, [fp, #-68]	; 0xffffffbc
    8540:	bl	4850 <mktime@plt>
    8544:	add	r7, fp, #8
    8548:	mov	r9, r0
    854c:	mov	r1, #32
    8550:	mov	r2, #64	; 0x40
    8554:	mov	r6, #64	; 0x40
    8558:	add	r5, r7, #92	; 0x5c
    855c:	mov	r0, r5
    8560:	bl	4c70 <memset@plt>
    8564:	add	r4, sl, #88	; 0x58
    8568:	mov	r0, r4
    856c:	bl	4bd4 <strlen@plt>
    8570:	cmp	r0, #64	; 0x40
    8574:	movcc	r6, r0
    8578:	cmp	r6, #0
    857c:	beq	8594 <sas_write_header+0xa8>
    8580:	mov	r0, r5
    8584:	mov	r1, r4
    8588:	mov	r2, r6
    858c:	bl	4910 <memcpy@plt>
    8590:	b	85ac <sas_write_header+0xc0>
    8594:	movw	r0, #21313	; 0x5341
    8598:	movt	r0, #21573	; 0x5445
    859c:	str	r0, [r5, #3]
    85a0:	movw	r0, #16708	; 0x4144
    85a4:	movt	r0, #16724	; 0x4154
    85a8:	str	r0, [r5]
    85ac:	mov	r0, sl
    85b0:	mov	r1, r7
    85b4:	mov	r2, #164	; 0xa4
    85b8:	bl	4e20 <readstat_write_bytes@plt>
    85bc:	cmp	r0, #0
    85c0:	bne	8784 <sas_write_header+0x298>
    85c4:	ldr	r1, [r8, #24]
    85c8:	mov	r0, sl
    85cc:	bl	4a00 <readstat_write_zeros@plt>
    85d0:	cmp	r0, #0
    85d4:	bne	8784 <sas_write_header+0x298>
    85d8:	ldr	r0, [r8, #72]	; 0x48
    85dc:	sub	r1, fp, #88	; 0x58
    85e0:	mov	r2, #8
    85e4:	sub	r0, r0, r9
    85e8:	vmov	s0, r0
    85ec:	mov	r0, sl
    85f0:	vcvt.f64.s32	d16, s0
    85f4:	vstr	d16, [fp, #-88]	; 0xffffffa8
    85f8:	bl	4e20 <readstat_write_bytes@plt>
    85fc:	cmp	r0, #0
    8600:	bne	8784 <sas_write_header+0x298>
    8604:	ldr	r0, [r8, #76]	; 0x4c
    8608:	sub	r1, fp, #96	; 0x60
    860c:	mov	r2, #8
    8610:	sub	r0, r0, r9
    8614:	vmov	s0, r0
    8618:	mov	r0, sl
    861c:	vcvt.f64.s32	d16, s0
    8620:	vstr	d16, [fp, #-96]	; 0xffffffa0
    8624:	bl	4e20 <readstat_write_bytes@plt>
    8628:	cmp	r0, #0
    862c:	bne	8784 <sas_write_header+0x298>
    8630:	mov	r0, sl
    8634:	mov	r1, #16
    8638:	bl	4a00 <readstat_write_zeros@plt>
    863c:	cmp	r0, #0
    8640:	bne	8784 <sas_write_header+0x298>
    8644:	add	r4, r8, #64	; 0x40
    8648:	add	r0, r8, #32
    864c:	mov	r2, #4
    8650:	ldr	r1, [r4]
    8654:	str	r1, [fp, #-100]	; 0xffffff9c
    8658:	sub	r1, fp, #100	; 0x64
    865c:	ldr	r0, [r0]
    8660:	str	r0, [fp, #-104]	; 0xffffff98
    8664:	mov	r0, sl
    8668:	bl	4e20 <readstat_write_bytes@plt>
    866c:	cmp	r0, #0
    8670:	bne	8784 <sas_write_header+0x298>
    8674:	sub	r1, fp, #104	; 0x68
    8678:	mov	r0, sl
    867c:	mov	r2, #4
    8680:	bl	4e20 <readstat_write_bytes@plt>
    8684:	cmp	r0, #0
    8688:	bne	8784 <sas_write_header+0x298>
    868c:	ldr	r1, [r8, #4]
    8690:	add	r0, r8, #56	; 0x38
    8694:	cmp	r1, #0
    8698:	beq	86b4 <sas_write_header+0x1c8>
    869c:	ldrd	r0, [r0]
    86a0:	mov	r2, #8
    86a4:	str	r1, [fp, #-108]	; 0xffffff94
    86a8:	str	r0, [fp, #-112]	; 0xffffff90
    86ac:	sub	r1, fp, #112	; 0x70
    86b0:	b	86c4 <sas_write_header+0x1d8>
    86b4:	ldr	r0, [r0]
    86b8:	sub	r1, fp, #112	; 0x70
    86bc:	mov	r2, #4
    86c0:	str	r0, [fp, #-112]	; 0xffffff90
    86c4:	mov	r0, sl
    86c8:	bl	4e20 <readstat_write_bytes@plt>
    86cc:	cmp	r0, #0
    86d0:	bne	8784 <sas_write_header+0x298>
    86d4:	mov	r0, sl
    86d8:	mov	r1, #8
    86dc:	bl	4a00 <readstat_write_zeros@plt>
    86e0:	cmp	r0, #0
    86e4:	bne	8784 <sas_write_header+0x298>
    86e8:	ldr	r1, [pc, #164]	; 8794 <sas_write_header+0x2a8>
    86ec:	add	r5, sp, #24
    86f0:	mov	r2, #120	; 0x78
    86f4:	mov	r0, r5
    86f8:	add	r1, pc, r1
    86fc:	bl	4910 <memcpy@plt>
    8700:	mov	r0, #0
    8704:	mov	r1, #101	; 0x65
    8708:	str	r0, [sp, #12]
    870c:	str	r0, [sp, #8]
    8710:	strb	r0, [sp, #16]
    8714:	ldr	r0, [sl, #8]
    8718:	str	r1, [sp]
    871c:	movw	r1, #52429	; 0xcccd
    8720:	movt	r1, #52428	; 0xcccc
    8724:	umull	r1, r2, r0, r1
    8728:	lsr	r1, r2, #3
    872c:	ldr	r2, [pc, #100]	; 8798 <sas_write_header+0x2ac>
    8730:	add	r1, r1, r1, lsl #2
    8734:	sub	r3, r0, r1, lsl #1
    8738:	add	r0, sp, #8
    873c:	mov	r1, #9
    8740:	add	r2, pc, r2
    8744:	bl	4c4c <snprintf@plt>
    8748:	ldr	r0, [sp, #8]
    874c:	ldr	r1, [sp, #12]
    8750:	mov	r2, #120	; 0x78
    8754:	str	r1, [sp, #28]
    8758:	str	r0, [sp, #24]
    875c:	mov	r0, sl
    8760:	mov	r1, r5
    8764:	bl	4e20 <readstat_write_bytes@plt>
    8768:	cmp	r0, #0
    876c:	bne	8784 <sas_write_header+0x298>
    8770:	ldr	r0, [sl, #4]
    8774:	ldr	r1, [r4]
    8778:	sub	r1, r1, r0
    877c:	mov	r0, sl
    8780:	bl	4a00 <readstat_write_zeros@plt>
    8784:	sub	sp, fp, #28
    8788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    878c:	add	sp, sp, #8
    8790:	bx	lr
    8794:	.word	0x0001ba78
    8798:	.word	0x0001b9f1
    879c:	.word	0xe320f000

000087a0 <sas_header_info_init>:
    87a0:	push	{r4, r5, r6, r7, fp, lr}
    87a4:	add	fp, sp, #16
    87a8:	mov	r4, r1
    87ac:	mov	r5, r0
    87b0:	mov	r0, #1
    87b4:	mov	r1, #152	; 0x98
    87b8:	bl	4778 <calloc@plt>
    87bc:	cmp	r4, #0
    87c0:	mov	r1, r4
    87c4:	ldr	r2, [r5, #20]
    87c8:	add	r3, pc, #88	; 0x58
    87cc:	add	r5, pc, #100	; 0x64
    87d0:	mov	r7, #0
    87d4:	mov	r6, #4096	; 0x1000
    87d8:	movwne	r1, #1
    87dc:	vld1.64	{d20-d21}, [r3]
    87e0:	vld1.64	{d18-d19}, [r5]
    87e4:	cmp	r4, #0
    87e8:	mov	r3, #1024	; 0x400
    87ec:	str	r7, [r0, #68]	; 0x44
    87f0:	vdup.32	d16, r1
    87f4:	movwne	r3, #8192	; 0x2000
    87f8:	str	r3, [r0, #64]	; 0x40
    87fc:	strd	r6, [r0, #32]
    8800:	str	r1, [r0, #4]
    8804:	add	r1, r0, #40	; 0x28
    8808:	str	r2, [r0, #72]	; 0x48
    880c:	str	r2, [r0, #76]	; 0x4c
    8810:	vmovl.u32	q8, d16
    8814:	vshl.s64	q8, q8, #63	; 0x3f
    8818:	vshr.s64	q8, q8, #63
    881c:	vbsl	q8, q10, q9
    8820:	vst1.64	{d16-d17}, [r1]
    8824:	pop	{r4, r5, r6, r7, fp, pc}
    8828:	.word	0x00000028
    882c:	.word	0x00000000
    8830:	.word	0x00000018
    8834:	.word	0x00000000
    8838:	.word	0x00000018
    883c:	.word	0x00000000
    8840:	.word	0x0000000c
    8844:	.word	0x00000000

00008848 <sas_fill_page>:
    8848:	push	{r4, r6, r7, sl, fp, lr}
    884c:	add	fp, sp, #16
    8850:	mov	r4, r0
    8854:	ldrd	r6, [r1, #32]
    8858:	ldrd	r0, [r1, #64]	; 0x40
    885c:	ldr	r2, [r4, #4]
    8860:	mov	r3, r7
    8864:	subs	r0, r2, r0
    8868:	mov	r2, r6
    886c:	rsc	r1, r1, #0
    8870:	bl	235c4 <__aeabi_ldivmod>
    8874:	orrs	r0, r2, r3
    8878:	beq	888c <sas_fill_page+0x44>
    887c:	sub	r1, r6, r2
    8880:	mov	r0, r4
    8884:	pop	{r4, r6, r7, sl, fp, lr}
    8888:	b	4a00 <readstat_write_zeros@plt>
    888c:	mov	r0, #0
    8890:	pop	{r4, r6, r7, sl, fp, pc}

00008894 <sas_validate_name>:
    8894:	push	{r4, r5, r6, sl, fp, lr}
    8898:	add	fp, sp, #16
    889c:	mov	r4, r1
    88a0:	mov	r5, r0
    88a4:	ldrb	r1, [r0]
    88a8:	cmp	r1, #95	; 0x5f
    88ac:	beq	88dc <sas_validate_name+0x48>
    88b0:	cmp	r1, #0
    88b4:	beq	88e4 <sas_validate_name+0x50>
    88b8:	sub	r2, r1, #48	; 0x30
    88bc:	uxtb	r2, r2
    88c0:	cmp	r2, #10
    88c4:	bcc	88dc <sas_validate_name+0x48>
    88c8:	and	r1, r1, #223	; 0xdf
    88cc:	sub	r1, r1, #65	; 0x41
    88d0:	uxtb	r1, r1
    88d4:	cmp	r1, #25
    88d8:	bhi	89a4 <sas_validate_name+0x110>
    88dc:	add	r0, r0, #1
    88e0:	b	88a4 <sas_validate_name+0x10>
    88e4:	ldrb	r0, [r5]
    88e8:	cmp	r0, #0
    88ec:	beq	89ac <sas_validate_name+0x118>
    88f0:	cmp	r0, #95	; 0x5f
    88f4:	beq	8910 <sas_validate_name+0x7c>
    88f8:	and	r0, r0, #223	; 0xdf
    88fc:	mov	r6, #25
    8900:	sub	r0, r0, #65	; 0x41
    8904:	uxtb	r0, r0
    8908:	cmp	r0, #25
    890c:	bhi	89b0 <sas_validate_name+0x11c>
    8910:	ldr	r1, [pc, #160]	; 89b8 <sas_validate_name+0x124>
    8914:	mov	r0, r5
    8918:	add	r1, pc, r1
    891c:	bl	4808 <strcmp@plt>
    8920:	mov	r6, #27
    8924:	cmp	r0, #0
    8928:	beq	89b0 <sas_validate_name+0x11c>
    892c:	ldr	r1, [pc, #136]	; 89bc <sas_validate_name+0x128>
    8930:	mov	r0, r5
    8934:	add	r1, pc, r1
    8938:	bl	4808 <strcmp@plt>
    893c:	cmp	r0, #0
    8940:	beq	89b0 <sas_validate_name+0x11c>
    8944:	ldr	r1, [pc, #116]	; 89c0 <sas_validate_name+0x12c>
    8948:	mov	r0, r5
    894c:	add	r1, pc, r1
    8950:	bl	4808 <strcmp@plt>
    8954:	cmp	r0, #0
    8958:	beq	89b0 <sas_validate_name+0x11c>
    895c:	ldr	r1, [pc, #96]	; 89c4 <sas_validate_name+0x130>
    8960:	mov	r0, r5
    8964:	add	r1, pc, r1
    8968:	bl	4808 <strcmp@plt>
    896c:	cmp	r0, #0
    8970:	beq	89b0 <sas_validate_name+0x11c>
    8974:	ldr	r1, [pc, #76]	; 89c8 <sas_validate_name+0x134>
    8978:	mov	r0, r5
    897c:	add	r1, pc, r1
    8980:	bl	4808 <strcmp@plt>
    8984:	cmp	r0, #0
    8988:	beq	89b0 <sas_validate_name+0x11c>
    898c:	mov	r0, r5
    8990:	bl	4bd4 <strlen@plt>
    8994:	cmp	r0, r4
    8998:	mov	r6, #0
    899c:	movwhi	r6, #28
    89a0:	b	89b0 <sas_validate_name+0x11c>
    89a4:	mov	r6, #26
    89a8:	b	89b0 <sas_validate_name+0x11c>
    89ac:	mov	r6, #38	; 0x26
    89b0:	mov	r0, r6
    89b4:	pop	{r4, r5, r6, sl, fp, pc}
    89b8:	.word	0x0001b824
    89bc:	.word	0x0001b80c
    89c0:	.word	0x0001b7fc
    89c4:	.word	0x0001b7ee
    89c8:	.word	0x0001b7e2

000089cc <sas_validate_variable>:
    89cc:	push	{fp, lr}
    89d0:	mov	fp, sp
    89d4:	bl	4d30 <readstat_variable_get_name@plt>
    89d8:	mov	r1, #32
    89dc:	pop	{fp, lr}
    89e0:	b	8894 <sas_validate_name>

000089e4 <sas_validate_tag>:
    89e4:	cmp	r0, #95	; 0x5f
    89e8:	moveq	r0, #0
    89ec:	bxeq	lr
    89f0:	sub	r0, r0, #65	; 0x41
    89f4:	uxtb	r1, r0
    89f8:	mov	r0, #21
    89fc:	cmp	r1, #26
    8a00:	movwcc	r0, #0
    8a04:	bx	lr

00008a08 <sas_assign_tag>:
    8a08:	mov	r2, #2
    8a0c:	cmp	r1, #0
    8a10:	beq	8a30 <sas_assign_tag+0x28>
    8a14:	cmp	r1, #1
    8a18:	beq	8a48 <sas_assign_tag+0x40>
    8a1c:	cmp	r1, #28
    8a20:	addcc	r1, r1, #63	; 0x3f
    8a24:	uxtb	r3, r1
    8a28:	cmp	r3, #95	; 0x5f
    8a2c:	bne	8a38 <sas_assign_tag+0x30>
    8a30:	mov	r1, #95	; 0x5f
    8a34:	b	8a50 <sas_assign_tag+0x48>
    8a38:	sub	r3, r1, #65	; 0x41
    8a3c:	uxtb	r3, r3
    8a40:	cmp	r3, #26
    8a44:	bcc	8a50 <sas_assign_tag+0x48>
    8a48:	mov	r2, #1
    8a4c:	mov	r1, #0
    8a50:	strb	r1, [r0, #12]
    8a54:	ldrb	r1, [r0, #13]
    8a58:	orr	r1, r1, r2
    8a5c:	strb	r1, [r0, #13]
    8a60:	bx	lr
    8a64:	andeq	r0, r0, r0

00008a68 <readstat_parse_sas7bcat>:
    8a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8a6c:	add	fp, sp, #28
    8a70:	sub	sp, sp, #404	; 0x194
    8a74:	ldr	sl, [r0, #32]
    8a78:	mov	r6, r1
    8a7c:	mov	r7, r0
    8a80:	mov	r0, #1
    8a84:	mov	r1, #104	; 0x68
    8a88:	mov	r4, r2
    8a8c:	mov	r9, #1
    8a90:	bl	4778 <calloc@plt>
    8a94:	mov	r8, r0
    8a98:	mov	r0, #1
    8a9c:	mov	r1, #152	; 0x98
    8aa0:	bl	4778 <calloc@plt>
    8aa4:	mov	r5, r0
    8aa8:	mov	r0, #200	; 0xc8
    8aac:	str	r0, [r8, #88]	; 0x58
    8ab0:	mov	r0, #1600	; 0x640
    8ab4:	bl	4ae4 <malloc@plt>
    8ab8:	str	r0, [r8, #80]	; 0x50
    8abc:	ldr	r0, [r7, #20]
    8ac0:	ldr	r1, [r7]
    8ac4:	ldr	r2, [r7, #36]	; 0x24
    8ac8:	ldr	r3, [r7, #40]	; 0x28
    8acc:	str	r1, [r8]
    8ad0:	stmib	r8, {r0, r4, sl}
    8ad4:	str	r2, [r8, #92]	; 0x5c
    8ad8:	str	r3, [r8, #96]	; 0x60
    8adc:	mov	r0, r6
    8ae0:	ldr	r2, [sl]
    8ae4:	ldr	r1, [sl, #20]
    8ae8:	blx	r2
    8aec:	mov	r6, #0
    8af0:	cmn	r0, #1
    8af4:	beq	8b18 <readstat_parse_sas7bcat+0xb0>
    8af8:	ldr	r2, [r7, #24]
    8afc:	mov	r0, sl
    8b00:	mov	r1, r5
    8b04:	mov	r3, r4
    8b08:	bl	4d6c <sas_read_header@plt>
    8b0c:	cmp	r0, #0
    8b10:	beq	8b94 <readstat_parse_sas7bcat+0x12c>
    8b14:	mov	r9, r0
    8b18:	mov	r7, #0
    8b1c:	ldr	r1, [sl, #4]
    8b20:	ldr	r0, [sl, #20]
    8b24:	blx	r1
    8b28:	cmp	r7, #0
    8b2c:	beq	8b38 <readstat_parse_sas7bcat+0xd0>
    8b30:	mov	r0, r7
    8b34:	bl	48bc <free@plt>
    8b38:	cmp	r6, #0
    8b3c:	beq	8b48 <readstat_parse_sas7bcat+0xe0>
    8b40:	mov	r0, r6
    8b44:	bl	48bc <free@plt>
    8b48:	cmp	r8, #0
    8b4c:	beq	8b78 <readstat_parse_sas7bcat+0x110>
    8b50:	ldr	r0, [r8, #100]	; 0x64
    8b54:	cmp	r0, #0
    8b58:	beq	8b60 <readstat_parse_sas7bcat+0xf8>
    8b5c:	bl	47d8 <iconv_close@plt>
    8b60:	ldr	r0, [r8, #80]	; 0x50
    8b64:	cmp	r0, #0
    8b68:	beq	8b70 <readstat_parse_sas7bcat+0x108>
    8b6c:	bl	48bc <free@plt>
    8b70:	mov	r0, r8
    8b74:	bl	48bc <free@plt>
    8b78:	cmp	r5, #0
    8b7c:	beq	8b88 <readstat_parse_sas7bcat+0x120>
    8b80:	mov	r0, r5
    8b84:	bl	48bc <free@plt>
    8b88:	mov	r0, r9
    8b8c:	sub	sp, fp, #28
    8b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b94:	ldr	r0, [r5, #4]
    8b98:	ldr	r1, [r5, #24]
    8b9c:	add	r4, r8, #32
    8ba0:	add	r6, r5, #32
    8ba4:	strd	r0, [r8, #16]
    8ba8:	bl	48b0 <machine_is_little_endian@plt>
    8bac:	ldr	r1, [r5]
    8bb0:	add	r3, r6, #24
    8bb4:	eor	r0, r1, r0
    8bb8:	str	r0, [r8, #24]
    8bbc:	ldm	r3, {r0, r1, r2, r3}
    8bc0:	str	r3, [r4, #44]	; 0x2c
    8bc4:	mov	r3, r4
    8bc8:	str	r2, [r3, #40]!	; 0x28
    8bcc:	str	r1, [r4, #28]
    8bd0:	mov	r1, r4
    8bd4:	mov	r2, r4
    8bd8:	str	r3, [sp, #68]	; 0x44
    8bdc:	str	r0, [r1, #24]!
    8be0:	str	r1, [sp, #64]	; 0x40
    8be4:	ldrd	r0, [r6]
    8be8:	str	r0, [r2, #32]!
    8bec:	str	r1, [r2, #4]
    8bf0:	str	r2, [sp, #72]	; 0x48
    8bf4:	ldr	r9, [r8, #92]	; 0x5c
    8bf8:	cmp	r9, #0
    8bfc:	bne	8c08 <readstat_parse_sas7bcat+0x1a0>
    8c00:	ldr	r9, [r5, #144]	; 0x90
    8c04:	str	r9, [r8, #92]	; 0x5c
    8c08:	ldr	r1, [r8, #20]
    8c0c:	mov	r3, #856	; 0x358
    8c10:	mov	r6, r4
    8c14:	str	r5, [sp, #76]	; 0x4c
    8c18:	add	r7, r3, r1, lsl #1
    8c1c:	add	r2, r1, #212	; 0xd4
    8c20:	add	r0, r1, #50	; 0x32
    8c24:	mov	r3, r4
    8c28:	asr	ip, r0, #31
    8c2c:	asr	lr, r2, #31
    8c30:	str	r2, [r4]
    8c34:	asr	r1, r7, #31
    8c38:	str	ip, [r4, #20]
    8c3c:	str	r1, [r4, #12]
    8c40:	str	lr, [r4, #4]
    8c44:	str	r0, [r3, #16]!
    8c48:	str	r7, [r6, #8]!
    8c4c:	ldr	r5, [r8, #16]
    8c50:	cmp	r5, #0
    8c54:	beq	8c84 <readstat_parse_sas7bcat+0x21c>
    8c58:	adds	r7, r7, #144	; 0x90
    8c5c:	adc	r1, r1, #0
    8c60:	adds	r2, r2, #72	; 0x48
    8c64:	str	r7, [r6]
    8c68:	str	r1, [r6, #4]
    8c6c:	adc	r1, lr, #0
    8c70:	adds	r0, r0, #24
    8c74:	str	r2, [r4]
    8c78:	str	r1, [r4, #4]
    8c7c:	adc	r1, ip, #0
    8c80:	strd	r0, [r3]
    8c84:	ldr	r5, [sp, #76]	; 0x4c
    8c88:	cmp	r9, #0
    8c8c:	str	r6, [sp, #60]	; 0x3c
    8c90:	beq	8ccc <readstat_parse_sas7bcat+0x264>
    8c94:	ldr	r4, [r8, #96]	; 0x60
    8c98:	cmp	r4, #0
    8c9c:	beq	8ccc <readstat_parse_sas7bcat+0x264>
    8ca0:	mov	r0, r9
    8ca4:	mov	r1, r4
    8ca8:	bl	4808 <strcmp@plt>
    8cac:	cmp	r0, #0
    8cb0:	beq	8ccc <readstat_parse_sas7bcat+0x264>
    8cb4:	mov	r0, r4
    8cb8:	mov	r1, r9
    8cbc:	bl	4b08 <iconv_open@plt>
    8cc0:	cmn	r0, #1
    8cc4:	beq	8e00 <readstat_parse_sas7bcat+0x398>
    8cc8:	str	r0, [r8, #100]	; 0x64
    8ccc:	ldr	r0, [r8]
    8cd0:	cmp	r0, #0
    8cd4:	beq	8d8c <readstat_parse_sas7bcat+0x324>
    8cd8:	vmov.i32	q8, #0	; 0x00000000
    8cdc:	mov	r0, #52	; 0x34
    8ce0:	add	r1, sp, #80	; 0x50
    8ce4:	ldr	r3, [r5, #76]	; 0x4c
    8ce8:	mov	r6, #0
    8cec:	mov	r2, #1
    8cf0:	add	r4, sp, #143	; 0x8f
    8cf4:	vst1.64	{d16-d17}, [r1], r0
    8cf8:	ldr	r0, [r5, #72]	; 0x48
    8cfc:	str	r0, [sp, #96]	; 0x60
    8d00:	ldr	r0, [r5, #12]
    8d04:	str	r3, [sp, #100]	; 0x64
    8d08:	str	r6, [sp, #112]	; 0x70
    8d0c:	mov	r3, #64	; 0x40
    8d10:	str	r0, [sp, #104]	; 0x68
    8d14:	asr	r0, r0, #31
    8d18:	str	r0, [sp, #108]	; 0x6c
    8d1c:	ldr	r0, [r5]
    8d20:	str	r6, [sp, #124]	; 0x7c
    8d24:	str	r6, [sp, #120]	; 0x78
    8d28:	cmp	r0, #0
    8d2c:	ldr	r0, [r8, #92]	; 0x5c
    8d30:	movweq	r2, #2
    8d34:	str	r2, [sp, #116]	; 0x74
    8d38:	add	r2, r5, #80	; 0x50
    8d3c:	str	r0, [sp, #128]	; 0x80
    8d40:	ldrb	r0, [r8, #16]
    8d44:	and	r0, r0, #1
    8d48:	strb	r0, [r1]
    8d4c:	ldr	r0, [r8, #100]	; 0x64
    8d50:	movw	r1, #257	; 0x101
    8d54:	str	r0, [sp]
    8d58:	mov	r0, r4
    8d5c:	bl	4c04 <readstat_convert@plt>
    8d60:	mov	r9, r0
    8d64:	cmp	r0, #0
    8d68:	bne	8b18 <readstat_parse_sas7bcat+0xb0>
    8d6c:	ldr	r2, [r8]
    8d70:	ldr	r1, [r8, #8]
    8d74:	add	r0, sp, #80	; 0x50
    8d78:	str	r4, [sp, #124]	; 0x7c
    8d7c:	blx	r2
    8d80:	mov	r9, #4
    8d84:	cmp	r0, #0
    8d88:	bne	8b18 <readstat_parse_sas7bcat+0xb0>
    8d8c:	ldr	r4, [sp, #72]	; 0x48
    8d90:	ldr	r0, [r4]
    8d94:	bl	4bf8 <readstat_malloc@plt>
    8d98:	mov	r9, #3
    8d9c:	cmp	r0, #0
    8da0:	beq	8e04 <readstat_parse_sas7bcat+0x39c>
    8da4:	mov	r7, r0
    8da8:	ldr	r0, [sp, #68]	; 0x44
    8dac:	ldr	r1, [r4]
    8db0:	ldr	r3, [sl, #8]
    8db4:	ldr	r2, [sl, #20]
    8db8:	mov	r6, #0
    8dbc:	ldr	r0, [r0]
    8dc0:	add	r0, r1, r0
    8dc4:	mov	r1, #0
    8dc8:	blx	r3
    8dcc:	cmn	r0, #1
    8dd0:	beq	9494 <readstat_parse_sas7bcat+0xa2c>
    8dd4:	ldr	r1, [r4]
    8dd8:	ldr	r3, [sl, #12]
    8ddc:	ldr	r2, [sl, #20]
    8de0:	mov	r0, r7
    8de4:	blx	r3
    8de8:	ldrd	r2, [r4]
    8dec:	subs	r1, r0, r2
    8df0:	rscs	r0, r3, r0, asr #31
    8df4:	bge	8e0c <readstat_parse_sas7bcat+0x3a4>
    8df8:	mov	r9, #2
    8dfc:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    8e00:	mov	r9, #7
    8e04:	mov	r6, #0
    8e08:	b	8b18 <readstat_parse_sas7bcat+0xb0>
    8e0c:	ldr	r0, [sp, #60]	; 0x3c
    8e10:	ldr	r1, [r0]
    8e14:	add	r0, r7, r1
    8e18:	sub	r1, r2, r1
    8e1c:	mov	r2, r8
    8e20:	bl	94dc <sas7bcat_augment_index>
    8e24:	cmp	r0, #0
    8e28:	beq	8e34 <readstat_parse_sas7bcat+0x3cc>
    8e2c:	mov	r9, r0
    8e30:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    8e34:	ldr	r0, [sp, #64]	; 0x40
    8e38:	str	r7, [sp, #56]	; 0x38
    8e3c:	ldrd	r0, [r0]
    8e40:	subs	r0, r0, #4
    8e44:	sbcs	r0, r1, #0
    8e48:	blt	8f08 <readstat_parse_sas7bcat+0x4a0>
    8e4c:	ldr	r0, [sp, #56]	; 0x38
    8e50:	mov	r6, #0
    8e54:	mov	r7, #3
    8e58:	mov	r5, #0
    8e5c:	add	r0, r0, #16
    8e60:	str	r0, [sp, #60]	; 0x3c
    8e64:	ldr	r0, [sp, #68]	; 0x44
    8e68:	ldr	r1, [r4]
    8e6c:	ldr	r3, [sl, #8]
    8e70:	ldr	r2, [sl, #20]
    8e74:	ldr	r0, [r0]
    8e78:	mla	r0, r1, r7, r0
    8e7c:	mov	r1, #0
    8e80:	blx	r3
    8e84:	cmn	r0, #1
    8e88:	beq	9480 <readstat_parse_sas7bcat+0xa18>
    8e8c:	ldr	r1, [r4]
    8e90:	ldr	r3, [sl, #12]
    8e94:	ldr	r2, [sl, #20]
    8e98:	ldr	r0, [sp, #56]	; 0x38
    8e9c:	blx	r3
    8ea0:	ldr	r1, [r4, #4]
    8ea4:	ldr	r4, [r4]
    8ea8:	subs	r2, r0, r4
    8eac:	rscs	r0, r1, r0, asr #31
    8eb0:	blt	9488 <readstat_parse_sas7bcat+0xa20>
    8eb4:	ldr	r0, [sp, #60]	; 0x3c
    8eb8:	ldr	r1, [pc, #1556]	; 94d4 <readstat_parse_sas7bcat+0xa6c>
    8ebc:	mov	r2, #4
    8ec0:	add	r1, pc, r1
    8ec4:	bl	4bbc <bcmp@plt>
    8ec8:	cmp	r0, #0
    8ecc:	bne	8ee8 <readstat_parse_sas7bcat+0x480>
    8ed0:	ldr	r0, [sp, #60]	; 0x3c
    8ed4:	sub	r1, r4, #16
    8ed8:	mov	r2, r8
    8edc:	bl	94dc <sas7bcat_augment_index>
    8ee0:	cmp	r0, #0
    8ee4:	bne	949c <readstat_parse_sas7bcat+0xa34>
    8ee8:	ldr	r0, [sp, #64]	; 0x40
    8eec:	ldr	r4, [sp, #72]	; 0x48
    8ef0:	adds	r7, r7, #1
    8ef4:	adc	r5, r5, #0
    8ef8:	ldrd	r0, [r0]
    8efc:	subs	r0, r7, r0
    8f00:	sbcs	r0, r5, r1
    8f04:	blt	8e64 <readstat_parse_sas7bcat+0x3fc>
    8f08:	ldr	r1, [r8, #84]	; 0x54
    8f0c:	cmp	r1, #2
    8f10:	blt	8f54 <readstat_parse_sas7bcat+0x4ec>
    8f14:	ldr	r0, [r8, #80]	; 0x50
    8f18:	ldr	r7, [sp, #56]	; 0x38
    8f1c:	mov	r6, #1
    8f20:	ldm	r0, {r4, r9}
    8f24:	add	r5, r0, #8
    8f28:	ldrd	r2, [r5]
    8f2c:	subs	r4, r2, r4
    8f30:	sbcs	r4, r3, r9
    8f34:	bcc	8f5c <readstat_parse_sas7bcat+0x4f4>
    8f38:	add	r6, r6, #1
    8f3c:	add	r5, r5, #8
    8f40:	mov	r4, r2
    8f44:	mov	r9, r3
    8f48:	cmp	r1, r6
    8f4c:	bne	8f28 <readstat_parse_sas7bcat+0x4c0>
    8f50:	b	8f70 <readstat_parse_sas7bcat+0x508>
    8f54:	ldr	r7, [sp, #56]	; 0x38
    8f58:	b	8f70 <readstat_parse_sas7bcat+0x508>
    8f5c:	ldr	r3, [pc, #1396]	; 94d8 <readstat_parse_sas7bcat+0xa70>
    8f60:	mov	r2, #8
    8f64:	add	r3, pc, r3
    8f68:	bl	4e08 <qsort@plt>
    8f6c:	ldr	r1, [r8, #84]	; 0x54
    8f70:	ldr	r5, [sp, #76]	; 0x4c
    8f74:	cmp	r1, #0
    8f78:	beq	8fe4 <readstat_parse_sas7bcat+0x57c>
    8f7c:	cmp	r1, #1
    8f80:	ble	8ff0 <readstat_parse_sas7bcat+0x588>
    8f84:	ldr	ip, [r8, #80]	; 0x50
    8f88:	mov	lr, #1
    8f8c:	mov	r6, #1
    8f90:	mov	r3, ip
    8f94:	ldr	r5, [r3]
    8f98:	ldr	r2, [r3, #12]
    8f9c:	ldmib	r3, {r0, r4}
    8fa0:	eor	r0, r2, r0
    8fa4:	eor	r5, r4, r5
    8fa8:	orrs	r0, r5, r0
    8fac:	beq	8fc4 <readstat_parse_sas7bcat+0x55c>
    8fb0:	cmp	r6, lr
    8fb4:	movne	r0, ip
    8fb8:	strne	r4, [r0, lr, lsl #3]!
    8fbc:	add	lr, lr, #1
    8fc0:	strne	r2, [r0, #4]
    8fc4:	ldr	r5, [sp, #76]	; 0x4c
    8fc8:	add	r6, r6, #1
    8fcc:	add	r3, r3, #8
    8fd0:	cmp	r1, r6
    8fd4:	bne	8f94 <readstat_parse_sas7bcat+0x52c>
    8fd8:	cmp	lr, #1
    8fdc:	str	lr, [r8, #84]	; 0x54
    8fe0:	bge	8ff8 <readstat_parse_sas7bcat+0x590>
    8fe4:	mov	r9, #0
    8fe8:	mov	r6, #0
    8fec:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    8ff0:	mov	r0, #1
    8ff4:	str	r0, [r8, #84]	; 0x54
    8ff8:	add	r0, sp, #143	; 0x8f
    8ffc:	mov	r2, #0
    9000:	mov	r3, #0
    9004:	mov	r6, #0
    9008:	add	r1, r0, #6
    900c:	str	r1, [sp, #44]	; 0x2c
    9010:	add	r1, r0, #4
    9014:	str	r1, [sp, #40]	; 0x28
    9018:	add	r1, r0, #10
    901c:	add	r0, r0, #8
    9020:	str	r1, [sp, #36]	; 0x24
    9024:	str	r0, [sp, #32]
    9028:	ldr	r0, [r8, #80]	; 0x50
    902c:	lsl	r1, r2, #3
    9030:	ldrh	r9, [r0, r1]!
    9034:	ldr	r4, [r0, #4]
    9038:	ldr	r0, [r8, #16]
    903c:	cmp	r0, #0
    9040:	mov	r0, #32
    9044:	movweq	r0, #16
    9048:	cmp	r4, #1
    904c:	str	r0, [sp, #48]	; 0x30
    9050:	blt	9418 <readstat_parse_sas7bcat+0x9b0>
    9054:	cmp	r9, #0
    9058:	beq	9418 <readstat_parse_sas7bcat+0x9b0>
    905c:	ldr	r0, [r8, #12]
    9060:	mov	r1, #0
    9064:	mov	r7, #0
    9068:	str	r3, [sp, #16]
    906c:	str	r2, [sp, #8]
    9070:	str	r9, [sp, #20]
    9074:	str	r4, [sp, #24]
    9078:	str	r0, [sp, #28]
    907c:	ldr	r0, [sp, #64]	; 0x40
    9080:	ldm	r0, {r0, r3}
    9084:	subs	r2, r0, r4
    9088:	sbcs	r2, r3, r4, asr #31
    908c:	blt	9178 <readstat_parse_sas7bcat+0x710>
    9090:	subs	r0, r7, r0
    9094:	rscs	r0, r3, #0
    9098:	bge	9178 <readstat_parse_sas7bcat+0x710>
    909c:	ldr	r0, [sp, #68]	; 0x44
    90a0:	str	r1, [sp, #60]	; 0x3c
    90a4:	ldr	r1, [sp, #72]	; 0x48
    90a8:	sub	r2, r4, #1
    90ac:	ldr	r4, [sp, #28]
    90b0:	str	r7, [sp, #52]	; 0x34
    90b4:	ldr	r0, [r0]
    90b8:	ldr	r1, [r1]
    90bc:	ldr	r3, [r4, #8]
    90c0:	mla	r0, r1, r2, r0
    90c4:	ldr	r2, [r4, #20]
    90c8:	mov	r1, #0
    90cc:	add	r0, r9, r0
    90d0:	blx	r3
    90d4:	cmn	r0, #1
    90d8:	beq	9490 <readstat_parse_sas7bcat+0xa28>
    90dc:	ldr	r3, [r4, #12]
    90e0:	ldr	r2, [r4, #20]
    90e4:	ldr	r4, [sp, #48]	; 0x30
    90e8:	add	r9, sp, #143	; 0x8f
    90ec:	mov	r0, r9
    90f0:	mov	r1, r4
    90f4:	blx	r3
    90f8:	ldr	r7, [sp, #56]	; 0x38
    90fc:	cmp	r0, r4
    9100:	blt	8df8 <readstat_parse_sas7bcat+0x390>
    9104:	ldr	r1, [r8, #24]
    9108:	ldr	r5, [r8, #16]
    910c:	mov	r0, r9
    9110:	bl	4dc0 <sas_read4@plt>
    9114:	ldr	r1, [sp, #40]	; 0x28
    9118:	cmp	r5, #0
    911c:	mov	r4, r0
    9120:	ldr	r0, [sp, #32]
    9124:	moveq	r0, r1
    9128:	ldr	r1, [r8, #24]
    912c:	bl	4d9c <sas_read2@plt>
    9130:	ldr	r1, [sp, #44]	; 0x2c
    9134:	cmp	r5, #0
    9138:	mov	r9, r0
    913c:	ldr	r0, [sp, #36]	; 0x24
    9140:	moveq	r0, r1
    9144:	ldr	r1, [r8, #24]
    9148:	bl	4d9c <sas_read2@plt>
    914c:	ldr	r1, [sp, #60]	; 0x3c
    9150:	cmp	r4, #1
    9154:	add	r1, r1, r0
    9158:	blt	9174 <readstat_parse_sas7bcat+0x70c>
    915c:	ldr	r7, [sp, #52]	; 0x34
    9160:	ldr	r5, [sp, #76]	; 0x4c
    9164:	cmp	r9, #0
    9168:	add	r7, r7, #1
    916c:	bne	907c <readstat_parse_sas7bcat+0x614>
    9170:	b	9178 <readstat_parse_sas7bcat+0x710>
    9174:	ldr	r5, [sp, #76]	; 0x4c
    9178:	ldr	r3, [sp, #16]
    917c:	cmp	r1, #0
    9180:	beq	9318 <readstat_parse_sas7bcat+0x8b0>
    9184:	ldr	r7, [sp, #56]	; 0x38
    9188:	cmn	r1, #1
    918c:	beq	94b8 <readstat_parse_sas7bcat+0xa50>
    9190:	mov	r0, r6
    9194:	str	r1, [sp, #60]	; 0x3c
    9198:	bl	4cb8 <readstat_realloc@plt>
    919c:	ldr	ip, [sp, #72]	; 0x48
    91a0:	ldr	r4, [sp, #24]
    91a4:	cmp	r0, #0
    91a8:	beq	94c0 <readstat_parse_sas7bcat+0xa58>
    91ac:	mov	r6, r0
    91b0:	ldr	r0, [r8, #12]
    91b4:	mov	lr, #0
    91b8:	str	r0, [sp, #48]	; 0x30
    91bc:	ldr	r0, [r8, #16]
    91c0:	cmp	r0, #0
    91c4:	mov	r0, #32
    91c8:	movweq	r0, #16
    91cc:	str	r0, [sp, #12]
    91d0:	mov	r0, #0
    91d4:	str	r0, [sp, #52]	; 0x34
    91d8:	ldr	r3, [sp, #20]
    91dc:	cmp	r4, #1
    91e0:	blt	9324 <readstat_parse_sas7bcat+0x8bc>
    91e4:	cmp	r3, #0
    91e8:	beq	9324 <readstat_parse_sas7bcat+0x8bc>
    91ec:	ldr	r0, [sp, #64]	; 0x40
    91f0:	ldrd	r0, [r0]
    91f4:	subs	r2, r0, r4
    91f8:	sbcs	r2, r1, r4, asr #31
    91fc:	blt	9324 <readstat_parse_sas7bcat+0x8bc>
    9200:	ldr	r2, [sp, #52]	; 0x34
    9204:	subs	r0, r2, r0
    9208:	rscs	r0, r1, #0
    920c:	bge	9324 <readstat_parse_sas7bcat+0x8bc>
    9210:	ldr	r0, [sp, #68]	; 0x44
    9214:	ldr	r1, [ip]
    9218:	sub	r2, r4, #1
    921c:	ldr	r9, [sp, #48]	; 0x30
    9220:	str	lr, [sp, #28]
    9224:	ldr	r0, [r0]
    9228:	mla	r0, r1, r2, r0
    922c:	ldr	r2, [r9, #20]
    9230:	mov	r1, #0
    9234:	add	r0, r3, r0
    9238:	ldr	r3, [r9, #8]
    923c:	blx	r3
    9240:	cmn	r0, #1
    9244:	add	r4, sp, #143	; 0x8f
    9248:	beq	9494 <readstat_parse_sas7bcat+0xa2c>
    924c:	ldr	r3, [r9, #12]
    9250:	ldr	r2, [r9, #20]
    9254:	mov	r9, r4
    9258:	mov	r0, r4
    925c:	ldr	r4, [sp, #12]
    9260:	mov	r1, r4
    9264:	blx	r3
    9268:	mov	r2, r9
    926c:	mov	r9, #2
    9270:	cmp	r0, r4
    9274:	blt	8b1c <readstat_parse_sas7bcat+0xb4>
    9278:	ldr	r1, [r8, #24]
    927c:	ldr	r4, [r8, #16]
    9280:	mov	r0, r2
    9284:	bl	4dc0 <sas_read4@plt>
    9288:	ldr	r1, [sp, #40]	; 0x28
    928c:	cmp	r4, #0
    9290:	str	r0, [sp, #24]
    9294:	ldr	r0, [sp, #32]
    9298:	moveq	r0, r1
    929c:	ldr	r1, [r8, #24]
    92a0:	bl	4d9c <sas_read2@plt>
    92a4:	ldr	r1, [sp, #44]	; 0x2c
    92a8:	cmp	r4, #0
    92ac:	str	r0, [sp, #20]
    92b0:	ldr	r0, [sp, #36]	; 0x24
    92b4:	moveq	r0, r1
    92b8:	ldr	r1, [r8, #24]
    92bc:	bl	4d9c <sas_read2@plt>
    92c0:	ldr	r1, [sp, #28]
    92c4:	mov	r4, r0
    92c8:	add	r5, r1, r0
    92cc:	ldr	r0, [sp, #60]	; 0x3c
    92d0:	cmp	r5, r0
    92d4:	bhi	94ac <readstat_parse_sas7bcat+0xa44>
    92d8:	ldr	r0, [sp, #52]	; 0x34
    92dc:	add	r0, r0, #1
    92e0:	str	r0, [sp, #52]	; 0x34
    92e4:	add	r0, r6, r1
    92e8:	ldr	r1, [sp, #48]	; 0x30
    92ec:	ldr	r3, [r1, #12]
    92f0:	ldr	r2, [r1, #20]
    92f4:	mov	r1, r4
    92f8:	blx	r3
    92fc:	cmp	r0, r4
    9300:	mov	lr, r5
    9304:	ldr	r5, [sp, #76]	; 0x4c
    9308:	ldr	ip, [sp, #72]	; 0x48
    930c:	ldr	r4, [sp, #24]
    9310:	bge	91d8 <readstat_parse_sas7bcat+0x770>
    9314:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    9318:	ldr	r2, [sp, #8]
    931c:	ldr	r7, [sp, #56]	; 0x38
    9320:	b	9418 <readstat_parse_sas7bcat+0x9b0>
    9324:	ldr	r0, [sp, #60]	; 0x3c
    9328:	add	r9, sp, #143	; 0x8f
    932c:	cmp	r0, #106	; 0x6a
    9330:	bcc	940c <readstat_parse_sas7bcat+0x9a4>
    9334:	ldrb	r0, [r6, #2]
    9338:	ldr	r4, [r8, #16]
    933c:	ldr	r1, [r8, #24]
    9340:	mov	r2, #38	; 0x26
    9344:	and	r5, r0, #8
    9348:	mov	r0, #42	; 0x2a
    934c:	cmp	r4, #0
    9350:	orr	r0, r0, r5, lsr #1
    9354:	addeq	r0, r2, r5, lsr #1
    9358:	add	r0, r6, r0
    935c:	bl	4dc0 <sas_read4@plt>
    9360:	cmp	r4, #0
    9364:	str	r0, [sp, #52]	; 0x34
    9368:	mov	r0, #50	; 0x32
    936c:	ldr	r1, [r8, #24]
    9370:	movweq	r0, #42	; 0x2a
    9374:	orr	r0, r0, r5, lsr #1
    9378:	add	r0, r6, r0
    937c:	bl	4dc0 <sas_read4@plt>
    9380:	str	r0, [sp, #48]	; 0x30
    9384:	ldr	r0, [r8, #100]	; 0x64
    9388:	add	r2, r6, #8
    938c:	mov	r1, #129	; 0x81
    9390:	mov	r3, #8
    9394:	str	r0, [sp]
    9398:	mov	r0, r9
    939c:	bl	4c04 <readstat_convert@plt>
    93a0:	cmp	r4, #0
    93a4:	mov	r4, #138	; 0x8a
    93a8:	movweq	r4, #106	; 0x6a
    93ac:	cmp	r0, #0
    93b0:	bne	949c <readstat_parse_sas7bcat+0xa34>
    93b4:	lsr	r0, r5, #1
    93b8:	orr	r5, r0, r5, lsl #1
    93bc:	ldrsb	r0, [r6, #2]
    93c0:	cmn	r0, #1
    93c4:	bgt	93d4 <readstat_parse_sas7bcat+0x96c>
    93c8:	ldr	r0, [r8, #16]
    93cc:	cmp	r0, #0
    93d0:	beq	9438 <readstat_parse_sas7bcat+0x9d0>
    93d4:	ldr	r2, [sp, #60]	; 0x3c
    93d8:	add	r1, sp, #143	; 0x8f
    93dc:	add	r0, r5, r4
    93e0:	cmp	r0, r2
    93e4:	bhi	940c <readstat_parse_sas7bcat+0x9a4>
    93e8:	stm	sp, {r1, r8}
    93ec:	sub	r1, r2, r4
    93f0:	ldr	r2, [sp, #48]	; 0x30
    93f4:	ldr	r3, [sp, #52]	; 0x34
    93f8:	add	r0, r6, r0
    93fc:	sub	r1, r1, r5
    9400:	bl	9620 <sas7bcat_parse_value_labels>
    9404:	cmp	r0, #0
    9408:	bne	94cc <readstat_parse_sas7bcat+0xa64>
    940c:	ldr	r5, [sp, #76]	; 0x4c
    9410:	ldr	r2, [sp, #8]
    9414:	ldr	r3, [sp, #16]
    9418:	ldr	r0, [r8, #84]	; 0x54
    941c:	adds	r2, r2, #1
    9420:	mov	r9, #0
    9424:	adc	r3, r3, #0
    9428:	subs	r1, r2, r0
    942c:	sbcs	r0, r3, r0, asr #31
    9430:	blt	9028 <readstat_parse_sas7bcat+0x5c0>
    9434:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    9438:	ldr	r0, [sp, #60]	; 0x3c
    943c:	orr	r2, r4, r5
    9440:	add	r1, r2, #32
    9444:	cmp	r1, r0
    9448:	add	r0, sp, #143	; 0x8f
    944c:	bhi	940c <readstat_parse_sas7bcat+0x9a4>
    9450:	ldr	r1, [r8, #100]	; 0x64
    9454:	add	r2, r6, r2
    9458:	mov	r3, #32
    945c:	str	r1, [sp]
    9460:	mov	r1, #129	; 0x81
    9464:	bl	4c04 <readstat_convert@plt>
    9468:	cmp	r0, #0
    946c:	bne	949c <readstat_parse_sas7bcat+0xa34>
    9470:	ldr	r2, [sp, #60]	; 0x3c
    9474:	ldr	r7, [sp, #56]	; 0x38
    9478:	orr	r5, r5, #32
    947c:	b	93d8 <readstat_parse_sas7bcat+0x970>
    9480:	mov	r9, #15
    9484:	b	94a0 <readstat_parse_sas7bcat+0xa38>
    9488:	mov	r9, #2
    948c:	b	94a0 <readstat_parse_sas7bcat+0xa38>
    9490:	ldr	r7, [sp, #56]	; 0x38
    9494:	mov	r9, #15
    9498:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    949c:	mov	r9, r0
    94a0:	ldr	r5, [sp, #76]	; 0x4c
    94a4:	ldr	r7, [sp, #56]	; 0x38
    94a8:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    94ac:	mov	r9, #5
    94b0:	ldr	r5, [sp, #76]	; 0x4c
    94b4:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    94b8:	mov	r9, #0
    94bc:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    94c0:	mov	r6, #0
    94c4:	mov	r9, #3
    94c8:	b	8b1c <readstat_parse_sas7bcat+0xb4>
    94cc:	mov	r9, r0
    94d0:	b	94b0 <readstat_parse_sas7bcat+0xa48>
    94d4:	.word	0x0001b328
    94d8:	.word	0x000006a4

000094dc <sas7bcat_augment_index>:
    94dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94e0:	add	fp, sp, #28
    94e4:	sub	sp, sp, #4
    94e8:	mov	r7, r2
    94ec:	mov	r5, r2
    94f0:	mov	r6, r0
    94f4:	mov	r0, #0
    94f8:	ldr	r2, [r7, #32]!
    94fc:	cmp	r2, r1
    9500:	bgt	9604 <sas7bcat_augment_index+0x128>
    9504:	ldr	r9, [pc, #256]	; 960c <sas7bcat_augment_index+0x130>
    9508:	add	sl, r6, r1
    950c:	add	r8, r7, #16
    9510:	add	r9, pc, r9
    9514:	mov	r0, r6
    9518:	mov	r1, r9
    951c:	mov	r2, #4
    9520:	bl	4bbc <bcmp@plt>
    9524:	cmp	r0, #0
    9528:	mov	r1, r9
    952c:	mov	r2, #4
    9530:	addne	r6, r6, #8
    9534:	mov	r0, r6
    9538:	bl	4bbc <bcmp@plt>
    953c:	cmp	r0, #0
    9540:	bne	95f8 <sas7bcat_augment_index+0x11c>
    9544:	ldr	r0, [r8]
    9548:	ldrb	r0, [r6, r0]
    954c:	cmp	r0, #79	; 0x4f
    9550:	bne	9580 <sas7bcat_augment_index+0xa4>
    9554:	ldr	r0, [r5, #16]
    9558:	cmp	r0, #0
    955c:	beq	9588 <sas7bcat_augment_index+0xac>
    9560:	ldr	r1, [r5, #24]
    9564:	add	r0, r6, #8
    9568:	bl	4dc0 <sas_read4@plt>
    956c:	ldr	r1, [r5, #24]
    9570:	mov	r4, r0
    9574:	add	r0, r6, #16
    9578:	bl	4dc0 <sas_read4@plt>
    957c:	b	95a4 <sas7bcat_augment_index+0xc8>
    9580:	ldr	r1, [r5, #84]	; 0x54
    9584:	b	95b8 <sas7bcat_augment_index+0xdc>
    9588:	ldr	r1, [r5, #24]
    958c:	add	r0, r6, #4
    9590:	bl	4d9c <sas_read2@plt>
    9594:	ldr	r1, [r5, #24]
    9598:	mov	r4, r0
    959c:	add	r0, r6, #8
    95a0:	bl	4d9c <sas_read2@plt>
    95a4:	ldrd	r2, [r5, #80]	; 0x50
    95a8:	add	r1, r3, #1
    95ac:	str	r1, [r5, #84]	; 0x54
    95b0:	str	r0, [r2, r3, lsl #3]!
    95b4:	str	r4, [r2, #4]
    95b8:	ldr	r0, [r5, #88]	; 0x58
    95bc:	cmp	r1, r0
    95c0:	bne	95e4 <sas7bcat_augment_index+0x108>
    95c4:	lsl	r0, r1, #1
    95c8:	lsl	r1, r1, #4
    95cc:	str	r0, [r5, #88]	; 0x58
    95d0:	ldr	r0, [r5, #80]	; 0x50
    95d4:	bl	4cb8 <readstat_realloc@plt>
    95d8:	cmp	r0, #0
    95dc:	str	r0, [r5, #80]	; 0x50
    95e0:	beq	9600 <sas7bcat_augment_index+0x124>
    95e4:	ldr	r0, [r7]
    95e8:	add	r6, r6, r0
    95ec:	add	r0, r6, r0
    95f0:	cmp	r0, sl
    95f4:	bls	9514 <sas7bcat_augment_index+0x38>
    95f8:	mov	r0, #0
    95fc:	b	9604 <sas7bcat_augment_index+0x128>
    9600:	mov	r0, #3
    9604:	sub	sp, fp, #28
    9608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    960c:	.word	0x0001acd8

00009610 <compare_block_pointers>:
    9610:	ldr	r1, [r1]
    9614:	ldr	r0, [r0]
    9618:	sub	r0, r0, r1
    961c:	bx	lr

00009620 <sas7bcat_parse_value_labels>:
    9620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9624:	add	fp, sp, #28
    9628:	sub	sp, sp, #4
    962c:	vpush	{d8}
    9630:	sub	sp, sp, #128	; 0x80
    9634:	str	r1, [fp, #-136]	; 0xffffff78
    9638:	mov	r8, r0
    963c:	mov	r0, r2
    9640:	mov	r1, #4
    9644:	mov	r5, r3
    9648:	mov	sl, r2
    964c:	bl	49a0 <readstat_calloc@plt>
    9650:	mov	r9, r0
    9654:	bl	48b0 <machine_is_little_endian@plt>
    9658:	cmp	r9, #0
    965c:	beq	9908 <sas7bcat_parse_value_labels+0x2e8>
    9660:	cmp	r5, #1
    9664:	str	r9, [fp, #-140]	; 0xffffff74
    9668:	blt	9918 <sas7bcat_parse_value_labels+0x2f8>
    966c:	str	r0, [fp, #-156]	; 0xffffff64
    9670:	ldr	r0, [fp, #8]
    9674:	ldr	r3, [fp, #12]
    9678:	ldr	r2, [fp, #-136]	; 0xffffff78
    967c:	mov	r7, #0
    9680:	mov	r4, r8
    9684:	ldrb	r0, [r0]
    9688:	str	r0, [fp, #-144]	; 0xffffff70
    968c:	sub	r6, r4, r8
    9690:	add	r0, r6, #3
    9694:	cmp	r0, r2
    9698:	bhi	9910 <sas7bcat_parse_value_labels+0x2f0>
    969c:	cmp	r7, sl
    96a0:	bge	96dc <sas7bcat_parse_value_labels+0xbc>
    96a4:	ldr	r0, [r3, #20]
    96a8:	add	r0, r0, r4
    96ac:	sub	r1, r0, r8
    96b0:	add	r1, r1, #14
    96b4:	cmp	r1, r2
    96b8:	bhi	9910 <sas7bcat_parse_value_labels+0x2f0>
    96bc:	ldr	r1, [r3, #24]
    96c0:	add	r0, r0, #10
    96c4:	bl	4dc0 <sas_read4@plt>
    96c8:	cmp	r0, sl
    96cc:	bcs	9910 <sas7bcat_parse_value_labels+0x2f0>
    96d0:	ldr	r2, [fp, #-136]	; 0xffffff78
    96d4:	ldr	r3, [fp, #12]
    96d8:	str	r6, [r9, r0, lsl #2]
    96dc:	ldrb	r0, [r4, #2]
    96e0:	add	r7, r7, #1
    96e4:	cmp	r5, r7
    96e8:	add	r0, r0, r4
    96ec:	add	r4, r0, #6
    96f0:	bne	968c <sas7bcat_parse_value_labels+0x6c>
    96f4:	str	r5, [fp, #-160]	; 0xffffff60
    96f8:	cmp	sl, #1
    96fc:	mov	r9, #0
    9700:	ldrge	r0, [fp, #-160]	; 0xffffff60
    9704:	cmpge	r0, #1
    9708:	blt	991c <sas7bcat_parse_value_labels+0x2fc>
    970c:	ldr	r0, [fp, #-144]	; 0xffffff70
    9710:	vldr	d8, [pc, #576]	; 9958 <sas7bcat_parse_value_labels+0x338>
    9714:	sub	r5, fp, #129	; 0x81
    9718:	mov	r6, #0
    971c:	subs	r7, r0, #36	; 0x24
    9720:	sub	r0, fp, #64	; 0x40
    9724:	movwne	r7, #5
    9728:	add	r0, r0, #8
    972c:	str	r0, [fp, #-168]	; 0xffffff58
    9730:	str	r7, [fp, #-152]	; 0xffffff68
    9734:	ldr	r0, [fp, #-140]	; 0xffffff74
    9738:	ldr	r0, [r0, r6, lsl #2]
    973c:	add	r1, r0, #30
    9740:	cmp	r1, r2
    9744:	addls	r9, r4, #10
    9748:	subls	r1, r9, r8
    974c:	cmpls	r1, r2
    9750:	bhi	9910 <sas7bcat_parse_value_labels+0x2f0>
    9754:	mov	r1, #0
    9758:	add	r0, r8, r0
    975c:	str	r6, [fp, #-148]	; 0xffffff6c
    9760:	str	r1, [fp, #-60]	; 0xffffffc4
    9764:	str	r1, [fp, #-64]	; 0xffffffc0
    9768:	strb	r1, [fp, #-52]	; 0xffffffcc
    976c:	str	r7, [fp, #-56]	; 0xffffffc8
    9770:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    9774:	and	r1, r1, #252	; 0xfc
    9778:	strb	r1, [fp, #-51]	; 0xffffffcd
    977c:	ldr	r1, [fp, #-144]	; 0xffffff70
    9780:	cmp	r1, #36	; 0x24
    9784:	bne	97d0 <sas7bcat_parse_value_labels+0x1b0>
    9788:	ldrb	r1, [r0, #2]
    978c:	ldr	r2, [r3, #100]	; 0x64
    9790:	mov	r7, r9
    9794:	sub	sp, sp, #8
    9798:	add	r0, r1, r0
    979c:	str	r2, [sp]
    97a0:	mov	r1, #65	; 0x41
    97a4:	mov	r3, #16
    97a8:	sub	r2, r0, #10
    97ac:	mov	r0, r5
    97b0:	bl	4c04 <readstat_convert@plt>
    97b4:	add	sp, sp, #8
    97b8:	cmp	r0, #0
    97bc:	bne	994c <sas7bcat_parse_value_labels+0x32c>
    97c0:	ldr	r2, [fp, #12]
    97c4:	str	r5, [fp, #-64]	; 0xffffffc0
    97c8:	mov	r9, r7
    97cc:	b	9818 <sas7bcat_parse_value_labels+0x1f8>
    97d0:	ldr	r1, [fp, #-156]	; 0xffffff64
    97d4:	add	r0, r0, #22
    97d8:	bl	4d90 <sas_read8@plt>
    97dc:	orr	r2, r1, #65280	; 0xff00
    97e0:	movw	r3, #65535	; 0xffff
    97e4:	eor	r2, r2, r3
    97e8:	mvn	r3, r0
    97ec:	orrs	r2, r3, r2
    97f0:	bne	9808 <sas7bcat_parse_value_labels+0x1e8>
    97f4:	ubfx	r1, r1, #8, #8
    97f8:	sub	r0, fp, #64	; 0x40
    97fc:	bl	4e68 <sas_assign_tag@plt>
    9800:	vorr	d16, d8, d8
    9804:	b	9810 <sas7bcat_parse_value_labels+0x1f0>
    9808:	eor	r1, r1, #-2147483648	; 0x80000000
    980c:	vmov	d16, r0, r1
    9810:	ldr	r2, [fp, #12]
    9814:	vstr	d16, [fp, #-64]	; 0xffffffc0
    9818:	ldr	r1, [r2, #24]
    981c:	add	r0, r4, #8
    9820:	mov	r6, r2
    9824:	bl	4d9c <sas_read2@plt>
    9828:	ldr	r2, [fp, #-136]	; 0xffffff78
    982c:	mov	r5, r0
    9830:	add	r0, r9, r0
    9834:	sub	r0, r0, r8
    9838:	cmp	r0, r2
    983c:	bhi	9910 <sas7bcat_parse_value_labels+0x2f0>
    9840:	ldr	r0, [r6, #4]
    9844:	ldr	r7, [fp, #-152]	; 0xffffff68
    9848:	mov	r3, r6
    984c:	cmp	r0, #0
    9850:	beq	98d8 <sas7bcat_parse_value_labels+0x2b8>
    9854:	mov	r0, #1
    9858:	str	sp, [fp, #-164]	; 0xffffff5c
    985c:	orr	r1, r0, r5, lsl #2
    9860:	add	r0, r1, #7
    9864:	bic	r0, r0, #4
    9868:	sub	r6, sp, r0
    986c:	mov	sp, r6
    9870:	ldr	r0, [r3, #100]	; 0x64
    9874:	sub	sp, sp, #8
    9878:	str	r0, [sp]
    987c:	mov	r7, r3
    9880:	mov	r0, r6
    9884:	mov	r2, r9
    9888:	mov	r3, r5
    988c:	bl	4c04 <readstat_convert@plt>
    9890:	add	sp, sp, #8
    9894:	cmp	r0, #0
    9898:	bne	9938 <sas7bcat_parse_value_labels+0x318>
    989c:	ldr	r0, [fp, #-168]	; 0xffffff58
    98a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    98a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    98a8:	ldmib	r7, {ip, lr}
    98ac:	ldrd	r0, [r0]
    98b0:	push	{r0, r1, r6, lr}
    98b4:	ldr	r0, [fp, #8]
    98b8:	blx	ip
    98bc:	add	sp, sp, #16
    98c0:	cmp	r0, #0
    98c4:	bne	9940 <sas7bcat_parse_value_labels+0x320>
    98c8:	ldr	sp, [fp, #-164]	; 0xffffff5c
    98cc:	ldr	r2, [fp, #-136]	; 0xffffff78
    98d0:	ldr	r3, [fp, #12]
    98d4:	ldr	r7, [fp, #-152]	; 0xffffff68
    98d8:	ldr	r6, [fp, #-148]	; 0xffffff6c
    98dc:	mov	r9, #0
    98e0:	add	r6, r6, #1
    98e4:	cmp	r6, sl
    98e8:	bge	991c <sas7bcat_parse_value_labels+0x2fc>
    98ec:	add	r0, r5, r4
    98f0:	sub	r5, fp, #129	; 0x81
    98f4:	add	r4, r0, #11
    98f8:	ldr	r0, [fp, #-160]	; 0xffffff60
    98fc:	cmp	r6, r0
    9900:	blt	9734 <sas7bcat_parse_value_labels+0x114>
    9904:	b	991c <sas7bcat_parse_value_labels+0x2fc>
    9908:	mov	r9, #3
    990c:	b	9924 <sas7bcat_parse_value_labels+0x304>
    9910:	mov	r9, #5
    9914:	b	991c <sas7bcat_parse_value_labels+0x2fc>
    9918:	mov	r9, #0
    991c:	ldr	r0, [fp, #-140]	; 0xffffff74
    9920:	bl	48bc <free@plt>
    9924:	mov	r0, r9
    9928:	sub	sp, fp, #40	; 0x28
    992c:	vpop	{d8}
    9930:	add	sp, sp, #4
    9934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9938:	mov	r9, r0
    993c:	b	9944 <sas7bcat_parse_value_labels+0x324>
    9940:	mov	r9, #4
    9944:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9948:	b	991c <sas7bcat_parse_value_labels+0x2fc>
    994c:	mov	r9, r0
    9950:	b	991c <sas7bcat_parse_value_labels+0x2fc>
    9954:	nop	{0}
    9958:	.word	0x00000000
    995c:	.word	0x7ff80000

00009960 <readstat_begin_writing_sas7bcat>:
    9960:	ldr	r2, [r0, #8]
    9964:	cmp	r2, #0
    9968:	moveq	r2, #9
    996c:	streq	r2, [r0, #8]
    9970:	ldr	r2, [pc, #12]	; 9984 <readstat_begin_writing_sas7bcat+0x24>
    9974:	add	r2, pc, r2
    9978:	str	r2, [r0, #276]	; 0x114
    997c:	mov	r2, #0
    9980:	b	494c <readstat_begin_writing_file@plt>
    9984:	.word	0x0000000c

00009988 <sas7bcat_begin_data>:
    9988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    998c:	add	fp, sp, #28
    9990:	sub	sp, sp, #364	; 0x16c
    9994:	mov	r1, #0
    9998:	mov	sl, r0
    999c:	bl	4d24 <sas_header_info_init@plt>
    99a0:	ldr	r4, [sl, #40]	; 0x28
    99a4:	mov	r6, r0
    99a8:	add	r0, r0, #56	; 0x38
    99ac:	str	r0, [sp, #160]	; 0xa0
    99b0:	lsl	r0, r4, #3
    99b4:	bl	4ae4 <malloc@plt>
    99b8:	mov	r5, r0
    99bc:	str	r6, [sp, #168]	; 0xa8
    99c0:	ldr	r0, [r6, #32]!
    99c4:	str	r6, [sp, #156]	; 0x9c
    99c8:	bl	4ae4 <malloc@plt>
    99cc:	str	r0, [sp, #172]	; 0xac
    99d0:	add	r0, sp, #192	; 0xc0
    99d4:	cmp	r4, #1
    99d8:	add	r0, r0, #84	; 0x54
    99dc:	str	r0, [sp, #164]	; 0xa4
    99e0:	blt	9c24 <sas7bcat_begin_data+0x29c>
    99e4:	add	r6, sp, #192	; 0xc0
    99e8:	mov	r9, #0
    99ec:	str	sl, [sp, #176]	; 0xb0
    99f0:	str	r5, [sp, #180]	; 0xb4
    99f4:	ldr	r0, [sl, #36]	; 0x24
    99f8:	ldr	sl, [r0, r9, lsl #2]
    99fc:	add	r7, sl, #4
    9a00:	mov	r0, r7
    9a04:	bl	4bd4 <strlen@plt>
    9a08:	cmp	r0, #32
    9a0c:	mov	r8, #32
    9a10:	mov	r4, r0
    9a14:	mov	r1, r7
    9a18:	movcc	r8, r0
    9a1c:	cmp	r0, #8
    9a20:	movls	r8, r0
    9a24:	mov	r0, r6
    9a28:	mov	r2, r8
    9a2c:	bl	4910 <memcpy@plt>
    9a30:	cmp	r4, #8
    9a34:	ldr	r4, [sl, #264]	; 0x108
    9a38:	mov	r5, #106	; 0x6a
    9a3c:	movwhi	r5, #138	; 0x8a
    9a40:	cmp	r4, #1
    9a44:	blt	9a74 <sas7bcat_begin_data+0xec>
    9a48:	mov	r7, #0
    9a4c:	mov	r0, sl
    9a50:	mov	r1, r7
    9a54:	bl	4e8c <readstat_get_value_label@plt>
    9a58:	ldr	r0, [r0, #28]
    9a5c:	ldr	r4, [sl, #264]	; 0x108
    9a60:	add	r7, r7, #1
    9a64:	add	r0, r5, r0
    9a68:	cmp	r7, r4
    9a6c:	add	r5, r0, #41	; 0x29
    9a70:	blt	9a4c <sas7bcat_begin_data+0xc4>
    9a74:	add	r1, r5, #8
    9a78:	mov	r0, #1
    9a7c:	bl	4778 <calloc@plt>
    9a80:	mov	r2, r0
    9a84:	cmp	r8, #9
    9a88:	str	r4, [r0, #46]	; 0x2e
    9a8c:	str	r4, [r0, #42]	; 0x2a
    9a90:	str	r5, [r0]
    9a94:	str	r0, [sp, #188]	; 0xbc
    9a98:	str	r9, [sp, #184]	; 0xb8
    9a9c:	bcc	9aec <sas7bcat_begin_data+0x164>
    9aa0:	mov	r0, #128	; 0x80
    9aa4:	ldr	r1, [sp, #196]	; 0xc4
    9aa8:	add	r7, r2, #110	; 0x6e
    9aac:	cmp	r8, #31
    9ab0:	strb	r0, [r2, #6]
    9ab4:	ldr	r0, [sp, #192]	; 0xc0
    9ab8:	str	r1, [r2, #16]
    9abc:	mov	r1, #32
    9ac0:	str	r0, [r2, #12]
    9ac4:	rsb	r2, r8, #32
    9ac8:	add	r0, r7, r8
    9acc:	movwhi	r2, #0
    9ad0:	bl	4c70 <memset@plt>
    9ad4:	mov	r0, r7
    9ad8:	mov	r1, r6
    9adc:	mov	r2, r8
    9ae0:	bl	4910 <memcpy@plt>
    9ae4:	mov	r0, #138	; 0x8a
    9ae8:	b	9b10 <sas7bcat_begin_data+0x188>
    9aec:	movw	r1, #8224	; 0x2020
    9af0:	movt	r1, #8224	; 0x2020
    9af4:	str	r1, [r2, #12]!
    9af8:	str	r1, [r2, #4]
    9afc:	mov	r0, r2
    9b00:	mov	r1, r6
    9b04:	mov	r2, r8
    9b08:	bl	4910 <memcpy@plt>
    9b0c:	mov	r0, #106	; 0x6a
    9b10:	cmp	r4, #1
    9b14:	blt	9bfc <sas7bcat_begin_data+0x274>
    9b18:	ldr	r3, [sp, #188]	; 0xbc
    9b1c:	rsb	r2, r4, r4, lsl #4
    9b20:	mov	r9, #0
    9b24:	add	r2, r0, r2, lsl #1
    9b28:	add	r1, r3, #4
    9b2c:	add	r0, r3, r0
    9b30:	add	r4, r1, r2
    9b34:	add	r8, r0, #14
    9b38:	mov	r0, sl
    9b3c:	mov	r1, r9
    9b40:	bl	4e8c <readstat_get_value_label@plt>
    9b44:	mov	r5, r0
    9b48:	mov	r0, #24
    9b4c:	str	r9, [r8]
    9b50:	strb	r0, [r8, #-8]
    9b54:	ldr	r0, [sl]
    9b58:	cmp	r0, #0
    9b5c:	beq	9b94 <sas7bcat_begin_data+0x20c>
    9b60:	ldrd	r6, [r5]
    9b64:	eor	r7, r7, #-2147483648	; 0x80000000
    9b68:	bl	48b0 <machine_is_little_endian@plt>
    9b6c:	cmp	r0, #0
    9b70:	beq	9b88 <sas7bcat_begin_data+0x200>
    9b74:	mov	r0, r6
    9b78:	mov	r1, r7
    9b7c:	bl	479c <byteswap8@plt>
    9b80:	mov	r6, r0
    9b84:	mov	r7, r1
    9b88:	str	r6, [r8, #12]
    9b8c:	str	r7, [r8, #16]
    9b90:	b	9bc4 <sas7bcat_begin_data+0x23c>
    9b94:	movw	r1, #8224	; 0x2020
    9b98:	mov	r0, r8
    9b9c:	ldr	r2, [r5, #20]
    9ba0:	movt	r1, #8224	; 0x2020
    9ba4:	str	r1, [r0, #4]!
    9ba8:	str	r1, [r0, #12]
    9bac:	str	r1, [r0, #8]
    9bb0:	str	r1, [r0, #4]
    9bb4:	cmp	r2, #16
    9bb8:	ldr	r1, [r5, #16]
    9bbc:	movcs	r2, #16
    9bc0:	bl	4910 <memcpy@plt>
    9bc4:	ldr	r2, [r5, #28]
    9bc8:	add	r0, r4, #10
    9bcc:	strh	r2, [r4, #8]
    9bd0:	sxth	r2, r2
    9bd4:	ldr	r1, [r5, #24]
    9bd8:	bl	4910 <memcpy@plt>
    9bdc:	ldr	r0, [r5, #28]
    9be0:	add	r9, r9, #1
    9be4:	add	r8, r8, #30
    9be8:	add	r0, r0, r4
    9bec:	add	r4, r0, #11
    9bf0:	ldr	r0, [sl, #264]	; 0x108
    9bf4:	cmp	r9, r0
    9bf8:	blt	9b38 <sas7bcat_begin_data+0x1b0>
    9bfc:	ldr	r5, [sp, #180]	; 0xb4
    9c00:	ldr	r9, [sp, #184]	; 0xb8
    9c04:	ldr	r0, [sp, #188]	; 0xbc
    9c08:	ldr	sl, [sp, #176]	; 0xb0
    9c0c:	add	r6, sp, #192	; 0xc0
    9c10:	str	r0, [r5, r9, lsl #2]
    9c14:	add	r9, r9, #1
    9c18:	ldr	r0, [sl, #40]	; 0x28
    9c1c:	cmp	r9, r0
    9c20:	blt	99f4 <sas7bcat_begin_data+0x6c>
    9c24:	ldr	r2, [sp, #160]	; 0xa0
    9c28:	mov	r0, #4
    9c2c:	mov	r1, #0
    9c30:	add	r4, sp, #192	; 0xc0
    9c34:	strd	r0, [r2]
    9c38:	mov	r0, r4
    9c3c:	mov	r1, #0
    9c40:	mov	r2, #156	; 0x9c
    9c44:	bl	4c70 <memset@plt>
    9c48:	ldr	r8, [sp, #168]	; 0xa8
    9c4c:	mov	r1, #34	; 0x22
    9c50:	ldr	r0, [r8, #4]
    9c54:	strb	r1, [sp, #227]	; 0xe3
    9c58:	mov	r1, #51	; 0x33
    9c5c:	cmp	r0, #0
    9c60:	movweq	r1, #34	; 0x22
    9c64:	strb	r1, [sp, #224]	; 0xe0
    9c68:	bl	48b0 <machine_is_little_endian@plt>
    9c6c:	cmp	r0, #0
    9c70:	mov	r1, #20
    9c74:	ldr	r2, [sp, #164]	; 0xa4
    9c78:	strb	r1, [sp, #262]	; 0x106
    9c7c:	mov	r1, #49	; 0x31
    9c80:	movwne	r0, #1
    9c84:	strb	r1, [sp, #231]	; 0xe7
    9c88:	movw	r1, #16723	; 0x4153
    9c8c:	strb	r0, [sp, #229]	; 0xe5
    9c90:	movw	r0, #18758	; 0x4946
    9c94:	movt	r0, #17740	; 0x454c
    9c98:	movt	r1, #8275	; 0x2053
    9c9c:	str	r1, [r2]
    9ca0:	movw	r1, #16707	; 0x4143
    9ca4:	str	r0, [r2, #4]
    9ca8:	movw	r0, #20300	; 0x4f4c
    9cac:	movt	r0, #8263	; 0x2047
    9cb0:	movt	r1, #16724	; 0x4154
    9cb4:	str	r1, [r2, #72]	; 0x48
    9cb8:	str	r0, [r2, #76]	; 0x4c
    9cbc:	mov	r1, sp
    9cc0:	ldr	r0, [pc, #568]	; 9f00 <sas7bcat_begin_data+0x578>
    9cc4:	ldr	r0, [pc, r0]
    9cc8:	vld1.8	{d16-d17}, [r0]!
    9ccc:	vld1.8	{d18-d19}, [r0]
    9cd0:	add	r0, r4, #16
    9cd4:	vst1.64	{d18-d19}, [r0]
    9cd8:	mov	r0, #8
    9cdc:	vst1.64	{d16-d17}, [r4], r0
    9ce0:	movw	r0, #156	; 0x9c
    9ce4:	ldr	r2, [r4], #4
    9ce8:	subs	r0, r0, #4
    9cec:	str	r2, [r1], #4
    9cf0:	bne	9ce4 <sas7bcat_begin_data+0x35c>
    9cf4:	ldr	r2, [sp, #192]	; 0xc0
    9cf8:	ldr	r3, [sp, #196]	; 0xc4
    9cfc:	mov	r0, sl
    9d00:	mov	r1, r8
    9d04:	bl	4a9c <sas_write_header@plt>
    9d08:	ldr	r9, [sp, #172]	; 0xac
    9d0c:	mov	r6, r0
    9d10:	cmp	r0, #0
    9d14:	bne	9eb4 <sas7bcat_begin_data+0x52c>
    9d18:	ldr	r0, [sp, #156]	; 0x9c
    9d1c:	ldr	r1, [r0]
    9d20:	mov	r0, sl
    9d24:	bl	4a00 <readstat_write_zeros@plt>
    9d28:	mov	r6, r0
    9d2c:	cmp	r0, #0
    9d30:	bne	9eb4 <sas7bcat_begin_data+0x52c>
    9d34:	ldr	r6, [sp, #156]	; 0x9c
    9d38:	mov	r0, r9
    9d3c:	mov	r1, #0
    9d40:	mov	r4, #0
    9d44:	ldr	r2, [r6]
    9d48:	bl	4c70 <memset@plt>
    9d4c:	ldr	r0, [sl, #40]	; 0x28
    9d50:	mov	r2, r6
    9d54:	cmp	r0, #1
    9d58:	blt	9db8 <sas7bcat_begin_data+0x430>
    9d5c:	movw	r3, #19544	; 0x4c58
    9d60:	add	r7, r9, #856	; 0x358
    9d64:	mov	r0, #16
    9d68:	mov	ip, #79	; 0x4f
    9d6c:	mov	lr, #4
    9d70:	movt	r3, #21075	; 0x5253
    9d74:	ldr	r6, [r2]
    9d78:	add	r1, r9, r6
    9d7c:	add	r6, r7, #212	; 0xd4
    9d80:	cmp	r6, r1
    9d84:	bhi	9db8 <sas7bcat_begin_data+0x430>
    9d88:	strb	ip, [r7, #50]	; 0x32
    9d8c:	strh	r0, [r7, #8]
    9d90:	strh	lr, [r7, #4]
    9d94:	str	r3, [r7]
    9d98:	ldr	r7, [r5, r4, lsl #2]
    9d9c:	add	r4, r4, #1
    9da0:	ldrh	r7, [r7]
    9da4:	add	r0, r0, r7
    9da8:	ldr	r7, [sl, #40]	; 0x28
    9dac:	cmp	r4, r7
    9db0:	mov	r7, r6
    9db4:	blt	9d74 <sas7bcat_begin_data+0x3ec>
    9db8:	ldr	r2, [r2]
    9dbc:	mov	r0, sl
    9dc0:	mov	r1, r9
    9dc4:	bl	4e20 <readstat_write_bytes@plt>
    9dc8:	mov	r6, r0
    9dcc:	cmp	r0, #0
    9dd0:	bne	9eb4 <sas7bcat_begin_data+0x52c>
    9dd4:	ldr	r0, [sp, #156]	; 0x9c
    9dd8:	ldr	r1, [r0]
    9ddc:	mov	r0, sl
    9de0:	bl	4a00 <readstat_write_zeros@plt>
    9de4:	mov	r6, r0
    9de8:	cmp	r0, #0
    9dec:	bne	9eb4 <sas7bcat_begin_data+0x52c>
    9df0:	str	r5, [sp, #180]	; 0xb4
    9df4:	ldr	r5, [sp, #156]	; 0x9c
    9df8:	mov	r0, r9
    9dfc:	mov	r1, #0
    9e00:	mov	r8, #0
    9e04:	ldr	r2, [r5]
    9e08:	bl	4c70 <memset@plt>
    9e0c:	ldr	r0, [sl, #40]	; 0x28
    9e10:	cmp	r0, #1
    9e14:	str	r0, [sp, #188]	; 0xbc
    9e18:	blt	9e94 <sas7bcat_begin_data+0x50c>
    9e1c:	mov	r0, #16
    9e20:	mov	r6, #0
    9e24:	ldr	r1, [sp, #180]	; 0xb4
    9e28:	sxth	r0, r0
    9e2c:	ldm	r5, {r3, r9}
    9e30:	add	r4, r0, #16
    9e34:	ldr	r7, [r1, r6, lsl #2]
    9e38:	ldr	r1, [r7]
    9e3c:	add	r2, r1, r4
    9e40:	subs	r2, r3, r2
    9e44:	sbcs	r2, r9, #0
    9e48:	blt	9e94 <sas7bcat_begin_data+0x50c>
    9e4c:	ldr	r3, [sp, #172]	; 0xac
    9e50:	mov	r2, r3
    9e54:	str	r8, [r2, r0]!
    9e58:	sxtah	r0, r3, r4
    9e5c:	str	r8, [r2, #12]
    9e60:	str	r8, [r2, #8]
    9e64:	strh	r1, [r2, #6]
    9e68:	strh	r8, [r2, #4]
    9e6c:	mov	r1, r7
    9e70:	ldr	r2, [r1], #4
    9e74:	bl	4910 <memcpy@plt>
    9e78:	ldr	r0, [r7]
    9e7c:	ldr	r1, [sp, #188]	; 0xbc
    9e80:	ldr	r5, [sp, #156]	; 0x9c
    9e84:	add	r6, r6, #1
    9e88:	sxtah	r0, r0, r4
    9e8c:	cmp	r6, r1
    9e90:	blt	9e24 <sas7bcat_begin_data+0x49c>
    9e94:	ldr	r9, [sp, #172]	; 0xac
    9e98:	ldr	r2, [r5]
    9e9c:	mov	r0, sl
    9ea0:	mov	r1, r9
    9ea4:	bl	4e20 <readstat_write_bytes@plt>
    9ea8:	ldr	r8, [sp, #168]	; 0xa8
    9eac:	ldr	r5, [sp, #180]	; 0xb4
    9eb0:	mov	r6, r0
    9eb4:	ldr	r0, [sl, #40]	; 0x28
    9eb8:	cmp	r0, #1
    9ebc:	blt	9edc <sas7bcat_begin_data+0x554>
    9ec0:	mov	r4, #0
    9ec4:	ldr	r0, [r5, r4, lsl #2]
    9ec8:	bl	48bc <free@plt>
    9ecc:	ldr	r0, [sl, #40]	; 0x28
    9ed0:	add	r4, r4, #1
    9ed4:	cmp	r4, r0
    9ed8:	blt	9ec4 <sas7bcat_begin_data+0x53c>
    9edc:	mov	r0, r5
    9ee0:	bl	48bc <free@plt>
    9ee4:	mov	r0, r8
    9ee8:	bl	48bc <free@plt>
    9eec:	mov	r0, r9
    9ef0:	bl	48bc <free@plt>
    9ef4:	mov	r0, r6
    9ef8:	sub	sp, fp, #28
    9efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9f00:	.word	0x0003a5d8

00009f04 <readstat_parse_sas7bdat>:
    9f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f08:	add	fp, sp, #28
    9f0c:	sub	sp, sp, #4
    9f10:	vpush	{d8-d9}
    9f14:	sub	sp, sp, #152	; 0x98
    9f18:	ldr	sl, [r0, #32]
    9f1c:	mov	r4, r1
    9f20:	mov	r7, r0
    9f24:	mov	r0, #1
    9f28:	movw	r1, #2536	; 0x9e8
    9f2c:	mov	r6, r2
    9f30:	mov	r9, #1
    9f34:	bl	4778 <calloc@plt>
    9f38:	mov	r5, r0
    9f3c:	mov	r0, #1
    9f40:	mov	r1, #152	; 0x98
    9f44:	bl	4778 <calloc@plt>
    9f48:	mov	r8, r0
    9f4c:	add	r0, r7, #16
    9f50:	mov	r2, r7
    9f54:	mov	r1, #48	; 0x30
    9f58:	add	r7, r7, #36	; 0x24
    9f5c:	vld1.32	{d16-d17}, [r0]
    9f60:	vld1.32	{d18-d19}, [r2], r1
    9f64:	add	r0, r5, #16
    9f68:	mov	r1, r5
    9f6c:	vst1.32	{d16-d17}, [r0]
    9f70:	mov	r0, #84	; 0x54
    9f74:	vst1.32	{d18-d19}, [r1], r0
    9f78:	ldm	r7, {r0, r3, r7}
    9f7c:	str	r6, [r5, #52]	; 0x34
    9f80:	str	sl, [r5, #56]	; 0x38
    9f84:	str	r0, [r5, #200]	; 0xc8
    9f88:	str	r3, [r5, #204]	; 0xcc
    9f8c:	str	r7, [r1]
    9f90:	ldr	r0, [r2]
    9f94:	cmp	r0, #1
    9f98:	strge	r0, [r5, #88]	; 0x58
    9f9c:	mov	r0, r4
    9fa0:	ldr	r2, [sl]
    9fa4:	ldr	r1, [sl, #20]
    9fa8:	blx	r2
    9fac:	cmn	r0, #1
    9fb0:	beq	a0b4 <readstat_parse_sas7bdat+0x1b0>
    9fb4:	ldr	r3, [sl, #8]
    9fb8:	ldr	r2, [sl, #20]
    9fbc:	mov	r0, #0
    9fc0:	mov	r1, #2
    9fc4:	add	r7, r5, #32
    9fc8:	blx	r3
    9fcc:	asr	r1, r0, #31
    9fd0:	cmn	r0, #1
    9fd4:	strd	r0, [r7]
    9fd8:	beq	a044 <readstat_parse_sas7bdat+0x140>
    9fdc:	ldr	r3, [sl, #8]
    9fe0:	ldr	r2, [sl, #20]
    9fe4:	mov	r0, #0
    9fe8:	mov	r1, #0
    9fec:	blx	r3
    9ff0:	ldr	r4, [r5, #24]
    9ff4:	cmn	r0, #1
    9ff8:	beq	a080 <readstat_parse_sas7bdat+0x17c>
    9ffc:	mov	r0, sl
    a000:	mov	r1, r8
    a004:	mov	r2, r4
    a008:	mov	r3, r6
    a00c:	bl	4d6c <sas_read_header@plt>
    a010:	mov	r9, r0
    a014:	cmp	r0, #0
    a018:	beq	a22c <readstat_parse_sas7bdat+0x328>
    a01c:	ldr	r1, [sl, #4]
    a020:	ldr	r0, [sl, #20]
    a024:	blx	r1
    a028:	cmp	r9, #15
    a02c:	bhi	a124 <readstat_parse_sas7bdat+0x220>
    a030:	mov	r0, #1
    a034:	movw	r1, #32774	; 0x8006
    a038:	tst	r1, r0, lsl r9
    a03c:	bne	a0c0 <readstat_parse_sas7bdat+0x1bc>
    a040:	b	a124 <readstat_parse_sas7bdat+0x220>
    a044:	ldr	r7, [r5, #24]
    a048:	mov	r9, #15
    a04c:	cmp	r7, #0
    a050:	beq	a0b4 <readstat_parse_sas7bdat+0x1b0>
    a054:	ldr	r1, [pc, #4084]	; b050 <readstat_parse_sas7bdat+0x114c>
    a058:	movw	r0, #481	; 0x1e1
    a05c:	mov	r2, #40	; 0x28
    a060:	add	r4, r5, r0
    a064:	mov	r0, r4
    a068:	add	r1, pc, r1
    a06c:	bl	4910 <memcpy@plt>
    a070:	ldr	r1, [r5, #52]	; 0x34
    a074:	mov	r0, r4
    a078:	blx	r7
    a07c:	b	a0b4 <readstat_parse_sas7bdat+0x1b0>
    a080:	mov	r9, #15
    a084:	cmp	r4, #0
    a088:	beq	a0b4 <readstat_parse_sas7bdat+0x1b0>
    a08c:	ldr	r1, [pc, #4060]	; b070 <readstat_parse_sas7bdat+0x116c>
    a090:	movw	r0, #481	; 0x1e1
    a094:	mov	r2, #46	; 0x2e
    a098:	add	r7, r5, r0
    a09c:	mov	r0, r7
    a0a0:	add	r1, pc, r1
    a0a4:	bl	4910 <memcpy@plt>
    a0a8:	ldr	r1, [r5, #52]	; 0x34
    a0ac:	mov	r0, r7
    a0b0:	blx	r4
    a0b4:	ldr	r1, [sl, #4]
    a0b8:	ldr	r0, [sl, #20]
    a0bc:	blx	r1
    a0c0:	ldr	r0, [r5, #24]
    a0c4:	cmp	r0, #0
    a0c8:	beq	a124 <readstat_parse_sas7bdat+0x220>
    a0cc:	mov	r0, r9
    a0d0:	bl	4844 <readstat_error_message@plt>
    a0d4:	mov	r4, r0
    a0d8:	bl	4c34 <__errno_location@plt>
    a0dc:	mov	r7, r0
    a0e0:	ldr	r0, [r0]
    a0e4:	bl	4b14 <strerror@plt>
    a0e8:	ldr	r1, [r7]
    a0ec:	str	r9, [sp]
    a0f0:	stmib	sp, {r0, r1}
    a0f4:	movw	r0, #481	; 0x1e1
    a0f8:	mov	r1, #2048	; 0x800
    a0fc:	mov	r3, r4
    a100:	ldr	r2, [pc, #4028]	; b0c4 <readstat_parse_sas7bdat+0x11c0>
    a104:	add	r7, r5, r0
    a108:	mov	r0, r7
    a10c:	add	r2, pc, r2
    a110:	bl	4c4c <snprintf@plt>
    a114:	ldr	r2, [r5, #24]
    a118:	mov	r0, r7
    a11c:	mov	r1, r6
    a120:	blx	r2
    a124:	ldr	r0, [r5, #160]	; 0xa0
    a128:	cmp	r0, #0
    a12c:	beq	a168 <readstat_parse_sas7bdat+0x264>
    a130:	ldr	r1, [r5, #152]	; 0x98
    a134:	cmp	r1, #1
    a138:	blt	a15c <readstat_parse_sas7bdat+0x258>
    a13c:	mov	r4, #0
    a140:	ldr	r0, [r0, r4, lsl #2]
    a144:	bl	48bc <free@plt>
    a148:	ldr	r1, [r5, #152]	; 0x98
    a14c:	ldr	r0, [r5, #160]	; 0xa0
    a150:	add	r4, r4, #1
    a154:	cmp	r4, r1
    a158:	blt	a140 <readstat_parse_sas7bdat+0x23c>
    a15c:	bl	48bc <free@plt>
    a160:	ldr	r0, [r5, #156]	; 0x9c
    a164:	bl	48bc <free@plt>
    a168:	ldr	r0, [r5, #196]	; 0xc4
    a16c:	cmp	r0, #0
    a170:	beq	a1b0 <readstat_parse_sas7bdat+0x2ac>
    a174:	ldr	r2, [r5, #80]	; 0x50
    a178:	cmp	r2, #0
    a17c:	beq	a1ac <readstat_parse_sas7bdat+0x2a8>
    a180:	mov	r4, #0
    a184:	ldr	r1, [r0, r4, lsl #2]
    a188:	cmp	r1, #0
    a18c:	beq	a1a0 <readstat_parse_sas7bdat+0x29c>
    a190:	mov	r0, r1
    a194:	bl	48bc <free@plt>
    a198:	ldr	r2, [r5, #80]	; 0x50
    a19c:	ldr	r0, [r5, #196]	; 0xc4
    a1a0:	add	r4, r4, #1
    a1a4:	cmp	r4, r2
    a1a8:	bcc	a184 <readstat_parse_sas7bdat+0x280>
    a1ac:	bl	48bc <free@plt>
    a1b0:	ldr	r0, [r5, #192]	; 0xc0
    a1b4:	cmp	r0, #0
    a1b8:	beq	a1c0 <readstat_parse_sas7bdat+0x2bc>
    a1bc:	bl	48bc <free@plt>
    a1c0:	ldr	r0, [r5, #180]	; 0xb4
    a1c4:	cmp	r0, #0
    a1c8:	beq	a1d0 <readstat_parse_sas7bdat+0x2cc>
    a1cc:	bl	48bc <free@plt>
    a1d0:	ldr	r0, [r5, #120]	; 0x78
    a1d4:	cmp	r0, #0
    a1d8:	beq	a1e0 <readstat_parse_sas7bdat+0x2dc>
    a1dc:	bl	48bc <free@plt>
    a1e0:	ldr	r0, [r5, #124]	; 0x7c
    a1e4:	cmp	r0, #0
    a1e8:	beq	a1f0 <readstat_parse_sas7bdat+0x2ec>
    a1ec:	bl	48bc <free@plt>
    a1f0:	ldr	r0, [r5, #208]	; 0xd0
    a1f4:	cmp	r0, #0
    a1f8:	beq	a200 <readstat_parse_sas7bdat+0x2fc>
    a1fc:	bl	47d8 <iconv_close@plt>
    a200:	mov	r0, r5
    a204:	bl	48bc <free@plt>
    a208:	cmp	r8, #0
    a20c:	beq	a218 <readstat_parse_sas7bdat+0x314>
    a210:	mov	r0, r8
    a214:	bl	48bc <free@plt>
    a218:	mov	r0, r9
    a21c:	sub	sp, fp, #48	; 0x30
    a220:	vpop	{d8-d9}
    a224:	add	sp, sp, #4
    a228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a22c:	ldm	r8, {r0, r1, r2}
    a230:	add	r3, r5, #40	; 0x28
    a234:	add	r4, r8, #32
    a238:	stm	r3, {r0, r1, r2}
    a23c:	bl	48b0 <machine_is_little_endian@plt>
    a240:	ldr	r1, [r8]
    a244:	add	lr, r4, #12
    a248:	ldr	r2, [r4, #24]
    a24c:	str	r7, [fp, #-76]	; 0xffffffb4
    a250:	ldm	lr, {r3, r9, lr}
    a254:	eor	r0, r1, r0
    a258:	str	r0, [r5, #60]	; 0x3c
    a25c:	ldrd	r0, [r4, #32]
    a260:	str	r1, [r7, #68]	; 0x44
    a264:	mov	r1, r7
    a268:	str	r0, [r1, #64]!	; 0x40
    a26c:	str	r1, [fp, #-84]	; 0xffffffac
    a270:	ldm	r4, {r0, r1, ip}
    a274:	ldr	r4, [r4, #28]
    a278:	str	r4, [r7, #76]	; 0x4c
    a27c:	mov	r4, r7
    a280:	str	r2, [r4, #72]!	; 0x48
    a284:	str	r1, [r7, #84]	; 0x54
    a288:	mov	r1, r7
    a28c:	mov	r2, #8
    a290:	str	r4, [fp, #-92]	; 0xffffffa4
    a294:	mov	r4, r7
    a298:	str	r0, [r4, #80]!	; 0x50
    a29c:	str	r3, [r7, #100]	; 0x64
    a2a0:	str	ip, [r1, #96]!	; 0x60
    a2a4:	str	r9, [r7, #112]!	; 0x70
    a2a8:	mov	r3, #0
    a2ac:	str	lr, [r7, #4]
    a2b0:	str	r1, [sp, #92]	; 0x5c
    a2b4:	ldr	r1, [r5, #44]	; 0x2c
    a2b8:	cmp	r1, #0
    a2bc:	ldr	r1, [r8, #12]
    a2c0:	movweq	r2, #4
    a2c4:	strd	r2, [r7, #-8]
    a2c8:	ldrd	r2, [r8, #72]	; 0x48
    a2cc:	str	r2, [r5, #212]	; 0xd4
    a2d0:	str	r3, [r5, #216]	; 0xd8
    a2d4:	str	r1, [r5, #220]	; 0xdc
    a2d8:	ldr	r1, [r5, #200]	; 0xc8
    a2dc:	cmp	r1, #0
    a2e0:	bne	a2ec <readstat_parse_sas7bdat+0x3e8>
    a2e4:	ldr	r1, [r8, #144]	; 0x90
    a2e8:	str	r1, [r5, #200]	; 0xc8
    a2ec:	bl	4bf8 <readstat_malloc@plt>
    a2f0:	cmp	r0, #0
    a2f4:	str	r0, [r5, #120]	; 0x78
    a2f8:	beq	a4ac <readstat_parse_sas7bdat+0x5a8>
    a2fc:	str	r7, [sp, #80]	; 0x50
    a300:	ldr	r7, [r5, #200]	; 0xc8
    a304:	cmp	r7, #0
    a308:	beq	a344 <readstat_parse_sas7bdat+0x440>
    a30c:	ldr	r9, [r5, #204]	; 0xcc
    a310:	cmp	r9, #0
    a314:	beq	a344 <readstat_parse_sas7bdat+0x440>
    a318:	mov	r0, r7
    a31c:	mov	r1, r9
    a320:	bl	4808 <strcmp@plt>
    a324:	cmp	r0, #0
    a328:	beq	a344 <readstat_parse_sas7bdat+0x440>
    a32c:	mov	r0, r9
    a330:	mov	r1, r7
    a334:	bl	4b08 <iconv_open@plt>
    a338:	cmn	r0, #1
    a33c:	beq	a4dc <readstat_parse_sas7bdat+0x5d8>
    a340:	str	r0, [r5, #208]	; 0xd0
    a344:	ldr	r0, [r5, #208]	; 0xd0
    a348:	add	r2, r8, #80	; 0x50
    a34c:	movw	r1, #257	; 0x101
    a350:	mov	r3, #64	; 0x40
    a354:	str	r4, [fp, #-80]	; 0xffffffb0
    a358:	str	r0, [sp]
    a35c:	add	r0, r5, #224	; 0xe0
    a360:	bl	4c04 <readstat_convert@plt>
    a364:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a368:	mov	r9, r0
    a36c:	cmp	r0, #0
    a370:	bne	a01c <readstat_parse_sas7bdat+0x118>
    a374:	ldr	r0, [fp, #-92]	; 0xffffffa4
    a378:	str	r6, [sp, #64]	; 0x40
    a37c:	ldr	r6, [r5, #56]	; 0x38
    a380:	str	r8, [sp, #68]	; 0x44
    a384:	str	sl, [sp, #72]	; 0x48
    a388:	ldrd	r0, [r0]
    a38c:	orrs	r0, r0, r1
    a390:	beq	a4c0 <readstat_parse_sas7bdat+0x5bc>
    a394:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a398:	ldr	r4, [fp, #-84]	; 0xffffffac
    a39c:	mov	r8, #0
    a3a0:	mov	r7, #0
    a3a4:	str	r6, [fp, #-96]	; 0xffffffa0
    a3a8:	ldr	r0, [r4]
    a3ac:	ldr	r1, [r9]
    a3b0:	ldr	r3, [r6, #8]
    a3b4:	ldr	r2, [r6, #20]
    a3b8:	str	r7, [fp, #-88]	; 0xffffffa8
    a3bc:	mla	r0, r1, r8, r0
    a3c0:	mov	r1, #0
    a3c4:	blx	r3
    a3c8:	cmn	r0, #1
    a3cc:	beq	a4e4 <readstat_parse_sas7bdat+0x5e0>
    a3d0:	ldr	r1, [r5, #44]	; 0x2c
    a3d4:	ldr	r0, [r5, #120]	; 0x78
    a3d8:	ldr	r3, [r6, #12]
    a3dc:	ldr	r2, [r6, #20]
    a3e0:	mov	sl, r8
    a3e4:	mov	r8, #32
    a3e8:	ldr	r7, [r9]
    a3ec:	cmp	r1, #0
    a3f0:	movweq	r8, #16
    a3f4:	orr	r4, r8, #2
    a3f8:	mov	r1, r4
    a3fc:	blx	r3
    a400:	mov	r9, #2
    a404:	cmp	r0, r4
    a408:	bcc	af28 <readstat_parse_sas7bdat+0x1024>
    a40c:	ldr	r0, [r5, #120]	; 0x78
    a410:	ldr	r1, [r5, #60]	; 0x3c
    a414:	add	r0, r0, r8
    a418:	bl	4d9c <sas_read2@plt>
    a41c:	and	r1, r0, #3840	; 0xf00
    a420:	cmp	r1, #256	; 0x100
    a424:	beq	a538 <readstat_parse_sas7bdat+0x634>
    a428:	tst	r0, #36864	; 0x9000
    a42c:	mov	r8, sl
    a430:	bne	a478 <readstat_parse_sas7bdat+0x574>
    a434:	ldr	r1, [fp, #-96]	; 0xffffffa0
    a438:	ldr	r0, [r5, #120]	; 0x78
    a43c:	sub	r7, r7, r4
    a440:	ldr	r3, [r1, #12]
    a444:	ldr	r2, [r1, #20]
    a448:	add	r0, r0, r4
    a44c:	mov	r1, r7
    a450:	blx	r3
    a454:	cmp	r0, r7
    a458:	bcc	af28 <readstat_parse_sas7bdat+0x1024>
    a45c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a460:	mov	r2, r5
    a464:	ldr	r1, [r0]
    a468:	ldr	r0, [r5, #120]	; 0x78
    a46c:	bl	b4f0 <sas7bdat_parse_page_pass1>
    a470:	cmp	r0, #0
    a474:	bne	af44 <readstat_parse_sas7bdat+0x1040>
    a478:	ldr	r0, [fp, #-92]	; 0xffffffa4
    a47c:	ldr	r7, [fp, #-88]	; 0xffffffa8
    a480:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a484:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a488:	ldr	r4, [fp, #-84]	; 0xffffffac
    a48c:	ldr	r6, [fp, #-96]	; 0xffffffa0
    a490:	adds	r8, r8, #1
    a494:	ldrd	r0, [r0]
    a498:	adc	r7, r7, #0
    a49c:	subs	r2, r8, r0
    a4a0:	sbcs	r2, r7, r1
    a4a4:	bcc	a3a8 <readstat_parse_sas7bdat+0x4a4>
    a4a8:	b	a554 <readstat_parse_sas7bdat+0x650>
    a4ac:	mov	r9, #3
    a4b0:	ldr	r1, [sl, #4]
    a4b4:	ldr	r0, [sl, #20]
    a4b8:	blx	r1
    a4bc:	b	a124 <readstat_parse_sas7bdat+0x220>
    a4c0:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a4c4:	ldr	r4, [fp, #-84]	; 0xffffffac
    a4c8:	mov	r0, #0
    a4cc:	mov	r1, #0
    a4d0:	mov	r8, #0
    a4d4:	mov	r7, #0
    a4d8:	b	a55c <readstat_parse_sas7bdat+0x658>
    a4dc:	mov	r9, #7
    a4e0:	b	a4b0 <readstat_parse_sas7bdat+0x5ac>
    a4e4:	ldr	r0, [r5, #24]
    a4e8:	mov	r9, #15
    a4ec:	cmp	r0, #0
    a4f0:	beq	af28 <readstat_parse_sas7bdat+0x1024>
    a4f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    a4f8:	ldr	r6, [fp, #-88]	; 0xffffffa8
    a4fc:	ldrd	r0, [r4]
    a500:	add	ip, sp, #8
    a504:	ldrd	r2, [r2]
    a508:	umull	r7, r4, r2, r8
    a50c:	mla	r4, r2, r6, r4
    a510:	mla	r4, r3, r8, r4
    a514:	adds	r7, r7, r0
    a518:	str	r7, [sp]
    a51c:	adc	r4, r4, r1
    a520:	str	r4, [sp, #4]
    a524:	stm	ip, {r0, r1, r8}
    a528:	str	r6, [sp, #20]
    a52c:	str	r2, [sp, #24]
    a530:	str	r3, [sp, #28]
    a534:	b	aefc <readstat_parse_sas7bdat+0xff8>
    a538:	ldr	r0, [fp, #-92]	; 0xffffffa4
    a53c:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a540:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a544:	ldr	r4, [fp, #-84]	; 0xffffffac
    a548:	ldr	r7, [fp, #-88]	; 0xffffffa8
    a54c:	mov	r8, sl
    a550:	ldrd	r0, [r0]
    a554:	ldr	r6, [r5, #56]	; 0x38
    a558:	ldr	sl, [sp, #72]	; 0x48
    a55c:	subs	r2, r0, #1
    a560:	sbc	r1, r1, #0
    a564:	subs	r0, r8, r2
    a568:	sbcs	r0, r7, r1
    a56c:	str	r1, [sp, #96]	; 0x60
    a570:	bcs	a70c <readstat_parse_sas7bdat+0x808>
    a574:	mov	r0, #0
    a578:	str	r8, [sp, #76]	; 0x4c
    a57c:	str	r7, [fp, #-88]	; 0xffffffa8
    a580:	str	r6, [fp, #-96]	; 0xffffffa0
    a584:	str	r0, [sp, #88]	; 0x58
    a588:	mov	r0, #0
    a58c:	str	r0, [sp, #84]	; 0x54
    a590:	ldr	r0, [r4]
    a594:	ldr	r1, [r9]
    a598:	str	r2, [sp, #100]	; 0x64
    a59c:	ldr	r3, [r6, #8]
    a5a0:	mla	r0, r1, r2, r0
    a5a4:	ldr	r2, [r6, #20]
    a5a8:	mov	r1, #0
    a5ac:	blx	r3
    a5b0:	cmn	r0, #1
    a5b4:	beq	aeac <readstat_parse_sas7bdat+0xfa8>
    a5b8:	ldr	r1, [r5, #44]	; 0x2c
    a5bc:	ldr	r0, [r5, #120]	; 0x78
    a5c0:	ldr	r3, [r6, #12]
    a5c4:	ldr	r2, [r6, #20]
    a5c8:	mov	r7, #32
    a5cc:	ldr	r8, [r9]
    a5d0:	cmp	r1, #0
    a5d4:	movweq	r7, #16
    a5d8:	orr	r4, r7, #2
    a5dc:	mov	r1, r4
    a5e0:	blx	r3
    a5e4:	mov	r9, #2
    a5e8:	cmp	r0, r4
    a5ec:	bcc	af28 <readstat_parse_sas7bdat+0x1024>
    a5f0:	ldr	r0, [r5, #120]	; 0x78
    a5f4:	ldr	r1, [r5, #60]	; 0x3c
    a5f8:	add	r0, r0, r7
    a5fc:	bl	4d9c <sas_read2@plt>
    a600:	and	r1, r0, #3840	; 0xf00
    a604:	cmp	r1, #256	; 0x100
    a608:	bne	a64c <readstat_parse_sas7bdat+0x748>
    a60c:	ldr	r0, [sp, #88]	; 0x58
    a610:	ldr	r1, [sp, #84]	; 0x54
    a614:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a618:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a61c:	ldr	r4, [fp, #-84]	; 0xffffffac
    a620:	ldr	r8, [sp, #76]	; 0x4c
    a624:	ldr	r7, [fp, #-88]	; 0xffffffa8
    a628:	ldr	r6, [fp, #-96]	; 0xffffffa0
    a62c:	ldr	r2, [sp, #100]	; 0x64
    a630:	orrs	r0, r0, r1
    a634:	mov	r0, #0
    a638:	str	r0, [sp, #88]	; 0x58
    a63c:	mov	r0, #0
    a640:	str	r0, [sp, #84]	; 0x54
    a644:	beq	a6f0 <readstat_parse_sas7bdat+0x7ec>
    a648:	b	a70c <readstat_parse_sas7bdat+0x808>
    a64c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a650:	ldr	r2, [sp, #100]	; 0x64
    a654:	tst	r0, #36864	; 0x9000
    a658:	beq	a674 <readstat_parse_sas7bdat+0x770>
    a65c:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a660:	ldr	r4, [fp, #-84]	; 0xffffffac
    a664:	ldr	r8, [sp, #76]	; 0x4c
    a668:	ldr	r7, [fp, #-88]	; 0xffffffa8
    a66c:	ldr	r6, [fp, #-96]	; 0xffffffa0
    a670:	b	a6f0 <readstat_parse_sas7bdat+0x7ec>
    a674:	ldr	r1, [fp, #-96]	; 0xffffffa0
    a678:	ldr	r0, [r5, #120]	; 0x78
    a67c:	sub	r6, r8, r4
    a680:	ldr	r3, [r1, #12]
    a684:	ldr	r2, [r1, #20]
    a688:	add	r0, r0, r4
    a68c:	mov	r1, r6
    a690:	blx	r3
    a694:	ldr	r8, [sp, #76]	; 0x4c
    a698:	cmp	r0, r6
    a69c:	bcc	af28 <readstat_parse_sas7bdat+0x1024>
    a6a0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a6a4:	mov	r2, r5
    a6a8:	ldr	r1, [r0]
    a6ac:	ldr	r0, [r5, #120]	; 0x78
    a6b0:	bl	b4f0 <sas7bdat_parse_page_pass1>
    a6b4:	ldr	r4, [fp, #-84]	; 0xffffffac
    a6b8:	cmp	r0, #0
    a6bc:	bne	afe8 <readstat_parse_sas7bdat+0x10e4>
    a6c0:	ldr	r0, [sp, #88]	; 0x58
    a6c4:	ldr	r9, [fp, #-80]	; 0xffffffb0
    a6c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a6cc:	ldr	sl, [sp, #72]	; 0x48
    a6d0:	ldr	r7, [fp, #-88]	; 0xffffffa8
    a6d4:	ldr	r6, [fp, #-96]	; 0xffffffa0
    a6d8:	ldr	r2, [sp, #100]	; 0x64
    a6dc:	adds	r0, r0, #1
    a6e0:	str	r0, [sp, #88]	; 0x58
    a6e4:	ldr	r0, [sp, #84]	; 0x54
    a6e8:	adc	r0, r0, #0
    a6ec:	str	r0, [sp, #84]	; 0x54
    a6f0:	ldr	r1, [sp, #96]	; 0x60
    a6f4:	subs	r2, r2, #1
    a6f8:	sbc	r1, r1, #0
    a6fc:	subs	r0, r8, r2
    a700:	sbcs	r0, r7, r1
    a704:	str	r1, [sp, #96]	; 0x60
    a708:	bcc	a590 <readstat_parse_sas7bdat+0x68c>
    a70c:	mov	r7, r3
    a710:	ldr	r0, [r4]
    a714:	ldr	r3, [sl, #8]
    a718:	ldr	r2, [sl, #20]
    a71c:	mov	r1, #0
    a720:	blx	r3
    a724:	cmn	r0, #1
    a728:	beq	ae00 <readstat_parse_sas7bdat+0xefc>
    a72c:	ldr	r0, [fp, #-92]	; 0xffffffa4
    a730:	ldr	r8, [sp, #68]	; 0x44
    a734:	ldr	r6, [sp, #64]	; 0x40
    a738:	ldrd	r0, [r0]
    a73c:	orrs	r0, r0, r1
    a740:	beq	ae50 <readstat_parse_sas7bdat+0xf4c>
    a744:	ldr	r3, [r5, #56]	; 0x38
    a748:	ldr	r0, [r7]
    a74c:	ldr	r2, [r5, #52]	; 0x34
    a750:	ldr	r1, [r5, #28]
    a754:	ldr	r7, [r3, #16]
    a758:	str	r3, [sp, #100]	; 0x64
    a75c:	ldr	r3, [r3, #20]
    a760:	blx	r7
    a764:	mov	r9, r0
    a768:	cmp	r0, #0
    a76c:	bne	a01c <readstat_parse_sas7bdat+0x118>
    a770:	sub	r0, fp, #72	; 0x48
    a774:	vmov.i32	q4, #0	; 0x00000000
    a778:	add	r0, r0, #8
    a77c:	str	r0, [sp, #84]	; 0x54
    a780:	mov	r0, #0
    a784:	str	r0, [fp, #-88]	; 0xffffffa8
    a788:	mov	r0, #0
    a78c:	str	r0, [fp, #-96]	; 0xffffffa0
    a790:	ldr	r4, [fp, #-80]	; 0xffffffb0
    a794:	ldr	r2, [sp, #100]	; 0x64
    a798:	ldr	r0, [r5, #120]	; 0x78
    a79c:	ldr	r3, [r2, #12]
    a7a0:	ldr	r1, [r4]
    a7a4:	ldr	r2, [r2, #20]
    a7a8:	blx	r3
    a7ac:	ldr	r6, [r4]
    a7b0:	ldr	r1, [r4, #4]
    a7b4:	subs	r2, r0, r6
    a7b8:	rscs	r0, r1, r0, asr #31
    a7bc:	bcc	b068 <readstat_parse_sas7bdat+0x1164>
    a7c0:	ldr	r4, [sp, #92]	; 0x5c
    a7c4:	ldr	r7, [r5, #120]	; 0x78
    a7c8:	ldr	r1, [r5, #60]	; 0x3c
    a7cc:	ldr	r0, [r4]
    a7d0:	add	r0, r0, r7
    a7d4:	sub	r0, r0, #8
    a7d8:	bl	4d9c <sas_read2@plt>
    a7dc:	and	r8, r0, #3840	; 0xf00
    a7e0:	str	r7, [sp, #96]	; 0x60
    a7e4:	cmp	r8, #256	; 0x100
    a7e8:	bne	a8a4 <readstat_parse_sas7bdat+0x9a0>
    a7ec:	ldr	r0, [r4]
    a7f0:	ldr	r1, [r5, #60]	; 0x3c
    a7f4:	add	r0, r0, r7
    a7f8:	sub	r0, r0, #6
    a7fc:	bl	4d9c <sas_read2@plt>
    a800:	str	r0, [r5, #72]	; 0x48
    a804:	ldr	r0, [r4]
    a808:	add	r8, r7, r0
    a80c:	cmp	r8, #0
    a810:	beq	a8ac <readstat_parse_sas7bdat+0x9a8>
    a814:	mov	r0, r5
    a818:	mov	r1, #0
    a81c:	bl	b1c8 <sas7bdat_submit_columns_if_needed>
    a820:	cmp	r0, #0
    a824:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    a828:	ldr	r0, [r5, #16]
    a82c:	cmp	r0, #0
    a830:	beq	a8ac <readstat_parse_sas7bdat+0x9a8>
    a834:	ldr	r0, [r5, #72]	; 0x48
    a838:	cmp	r0, #0
    a83c:	beq	a8ac <readstat_parse_sas7bdat+0x9a8>
    a840:	ldr	r0, [sp, #96]	; 0x60
    a844:	mov	r7, #0
    a848:	mov	r4, #0
    a84c:	add	r0, r0, r6
    a850:	sub	r6, r0, r8
    a854:	ldr	r0, [r5, #76]	; 0x4c
    a858:	ldr	r1, [r5, #84]	; 0x54
    a85c:	cmp	r0, r1
    a860:	bcs	a8ac <readstat_parse_sas7bdat+0x9a8>
    a864:	ldr	r0, [r5, #68]	; 0x44
    a868:	add	r0, r0, r7
    a86c:	cmp	r0, r6
    a870:	bhi	b060 <readstat_parse_sas7bdat+0x115c>
    a874:	add	r0, r8, r7
    a878:	mov	r1, r5
    a87c:	bl	beb8 <sas7bdat_parse_single_row>
    a880:	cmp	r0, #0
    a884:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    a888:	ldr	r0, [r5, #68]	; 0x44
    a88c:	ldr	r1, [r5, #72]	; 0x48
    a890:	add	r4, r4, #1
    a894:	add	r7, r0, r7
    a898:	cmp	r4, r1
    a89c:	bcc	a854 <readstat_parse_sas7bdat+0x950>
    a8a0:	b	a8ac <readstat_parse_sas7bdat+0x9a8>
    a8a4:	tst	r0, #36864	; 0x9000
    a8a8:	beq	a920 <readstat_parse_sas7bdat+0xa1c>
    a8ac:	ldr	r0, [r5, #76]	; 0x4c
    a8b0:	ldr	r1, [r5, #84]	; 0x54
    a8b4:	ldr	r8, [sp, #68]	; 0x44
    a8b8:	ldr	r6, [sp, #64]	; 0x40
    a8bc:	ldr	r7, [fp, #-76]	; 0xffffffb4
    a8c0:	cmp	r0, r1
    a8c4:	beq	ae50 <readstat_parse_sas7bdat+0xf4c>
    a8c8:	ldr	r0, [fp, #-92]	; 0xffffffa4
    a8cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    a8d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    a8d4:	ldrd	r0, [r0]
    a8d8:	adds	r2, r2, #1
    a8dc:	adc	r3, r3, #0
    a8e0:	str	r2, [fp, #-88]	; 0xffffffa8
    a8e4:	str	r3, [fp, #-96]	; 0xffffffa0
    a8e8:	subs	r0, r2, r0
    a8ec:	sbcs	r0, r3, r1
    a8f0:	bcs	ae50 <readstat_parse_sas7bdat+0xf4c>
    a8f4:	ldr	r3, [r5, #56]	; 0x38
    a8f8:	ldr	r0, [r7]
    a8fc:	ldr	r1, [r5, #28]
    a900:	ldr	r2, [r5, #52]	; 0x34
    a904:	ldr	r7, [r3, #16]
    a908:	ldr	r3, [r3, #20]
    a90c:	blx	r7
    a910:	mov	r9, r0
    a914:	cmp	r0, #0
    a918:	beq	a790 <readstat_parse_sas7bdat+0x88c>
    a91c:	b	a01c <readstat_parse_sas7bdat+0x118>
    a920:	ldr	r4, [sp, #92]	; 0x5c
    a924:	ldr	r7, [sp, #96]	; 0x60
    a928:	ldr	r1, [r5, #60]	; 0x3c
    a92c:	ldr	r0, [r4]
    a930:	add	r0, r0, r7
    a934:	sub	r0, r0, #4
    a938:	bl	4d9c <sas_read2@plt>
    a93c:	mov	r3, r0
    a940:	ldr	r0, [sp, #80]	; 0x50
    a944:	ldr	r0, [r0]
    a948:	str	r0, [sp, #60]	; 0x3c
    a94c:	mul	r1, r0, r3
    a950:	ldm	r4, {r0, r9}
    a954:	adds	r2, r0, r1
    a958:	adc	r1, r9, r1, asr #31
    a95c:	subs	r2, r6, r2
    a960:	rscs	r1, r1, #0
    a964:	bcc	b0c8 <readstat_parse_sas7bdat+0x11c4>
    a968:	str	r8, [sp, #40]	; 0x28
    a96c:	add	r8, r7, r0
    a970:	cmp	r3, #0
    a974:	str	r6, [sp, #52]	; 0x34
    a978:	beq	ada0 <readstat_parse_sas7bdat+0xe9c>
    a97c:	add	r0, r7, r6
    a980:	mov	r4, #0
    a984:	str	r3, [sp, #88]	; 0x58
    a988:	str	r0, [sp, #76]	; 0x4c
    a98c:	add	r0, r7, #4
    a990:	str	r0, [sp, #36]	; 0x24
    a994:	sub	r2, fp, #72	; 0x48
    a998:	mov	r1, #20
    a99c:	mov	r3, r5
    a9a0:	mov	r0, r2
    a9a4:	vst1.64	{d8-d9}, [r0], r1
    a9a8:	mov	r1, #0
    a9ac:	str	r1, [r0]
    a9b0:	ldr	r0, [sp, #76]	; 0x4c
    a9b4:	str	r1, [fp, #-56]	; 0xffffffc8
    a9b8:	sub	r1, r0, r8
    a9bc:	mov	r0, r8
    a9c0:	bl	b6ac <sas7bdat_parse_subheader_pointer>
    a9c4:	cmp	r0, #0
    a9c8:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    a9cc:	ldr	r0, [sp, #84]	; 0x54
    a9d0:	str	r4, [fp, #-84]	; 0xffffffac
    a9d4:	ldm	r0, {r4, r6}
    a9d8:	orrs	r0, r4, r6
    a9dc:	beq	ad84 <readstat_parse_sas7bdat+0xe80>
    a9e0:	ldrb	r7, [fp, #-56]	; 0xffffffc8
    a9e4:	cmp	r7, #1
    a9e8:	beq	ad84 <readstat_parse_sas7bdat+0xe80>
    a9ec:	ldr	r1, [sp, #52]	; 0x34
    a9f0:	ldr	r2, [sp, #88]	; 0x58
    a9f4:	sub	r0, fp, #72	; 0x48
    a9f8:	mov	r3, r5
    a9fc:	bl	b754 <sas7bdat_validate_subheader_pointer>
    aa00:	cmp	r0, #0
    aa04:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    aa08:	cmp	r7, #4
    aa0c:	beq	aa80 <readstat_parse_sas7bdat+0xb7c>
    aa10:	cmp	r7, #0
    aa14:	bne	b0bc <readstat_parse_sas7bdat+0x11b8>
    aa18:	ldr	r7, [fp, #-72]	; 0xffffffb8
    aa1c:	ldr	r0, [sp, #96]	; 0x60
    aa20:	ldr	r1, [r5, #60]	; 0x3c
    aa24:	add	r9, r0, r7
    aa28:	mov	r0, r9
    aa2c:	bl	4dc0 <sas_read4@plt>
    aa30:	cmn	r0, #1
    aa34:	ldreq	r1, [r5, #40]	; 0x28
    aa38:	cmpeq	r1, #0
    aa3c:	beq	ab38 <readstat_parse_sas7bdat+0xc34>
    aa40:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    aa44:	cmp	r1, #0
    aa48:	beq	abac <readstat_parse_sas7bdat+0xca8>
    aa4c:	movw	r1, #64509	; 0xfbfd
    aa50:	movt	r1, #65535	; 0xffff
    aa54:	cmp	r0, r1
    aa58:	bgt	ab58 <readstat_parse_sas7bdat+0xc54>
    aa5c:	movw	r1, #63222	; 0xf6f6
    aa60:	movt	r1, #63222	; 0xf6f6
    aa64:	cmp	r0, r1
    aa68:	beq	abb4 <readstat_parse_sas7bdat+0xcb0>
    aa6c:	movw	r1, #63479	; 0xf7f7
    aa70:	movt	r1, #63479	; 0xf7f7
    aa74:	cmp	r0, r1
    aa78:	beq	abb4 <readstat_parse_sas7bdat+0xcb0>
    aa7c:	b	ab6c <readstat_parse_sas7bdat+0xc68>
    aa80:	mov	r0, r5
    aa84:	mov	r1, #1
    aa88:	bl	b1c8 <sas7bdat_submit_columns_if_needed>
    aa8c:	cmp	r0, #0
    aa90:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    aa94:	ldr	r0, [fp, #-72]	; 0xffffffb8
    aa98:	ldr	r1, [sp, #96]	; 0x60
    aa9c:	add	r6, r1, r0
    aaa0:	ldrb	r0, [r5, #2529]	; 0x9e1
    aaa4:	tst	r0, #1
    aaa8:	bne	aaf0 <readstat_parse_sas7bdat+0xbec>
    aaac:	ldr	r0, [r5, #76]	; 0x4c
    aab0:	ldr	r1, [r5, #84]	; 0x54
    aab4:	cmp	r1, r0
    aab8:	beq	ad84 <readstat_parse_sas7bdat+0xe80>
    aabc:	ldr	r1, [r5, #68]	; 0x44
    aac0:	ldr	r0, [r5, #124]	; 0x7c
    aac4:	mov	r2, r6
    aac8:	mov	r3, r4
    aacc:	bl	4a60 <sas_rle_decompress@plt>
    aad0:	ldr	r1, [r5, #68]	; 0x44
    aad4:	cmp	r0, r1
    aad8:	bne	b168 <readstat_parse_sas7bdat+0x1264>
    aadc:	ldr	r0, [r5, #124]	; 0x7c
    aae0:	mov	r1, r5
    aae4:	bl	beb8 <sas7bdat_parse_single_row>
    aae8:	mov	r9, r0
    aaec:	b	ad7c <readstat_parse_sas7bdat+0xe78>
    aaf0:	ldr	r7, [r5, #68]	; 0x44
    aaf4:	mov	r0, r7
    aaf8:	bl	4ae4 <malloc@plt>
    aafc:	mov	ip, r0
    ab00:	cmp	r4, #1
    ab04:	str	r0, [sp, #48]	; 0x30
    ab08:	bgt	abd0 <readstat_parse_sas7bdat+0xccc>
    ab0c:	mov	r0, ip
    ab10:	sub	r0, r0, ip
    ab14:	mov	r9, #10
    ab18:	cmp	r0, r7
    ab1c:	bne	ad74 <readstat_parse_sas7bdat+0xe70>
    ab20:	mov	r0, ip
    ab24:	mov	r1, r5
    ab28:	bl	beb8 <sas7bdat_parse_single_row>
    ab2c:	ldr	ip, [sp, #48]	; 0x30
    ab30:	mov	r9, r0
    ab34:	b	ad74 <readstat_parse_sas7bdat+0xe70>
    ab38:	ldr	r0, [r5, #44]	; 0x2c
    ab3c:	cmp	r0, #0
    ab40:	beq	ad64 <readstat_parse_sas7bdat+0xe60>
    ab44:	ldr	r0, [sp, #36]	; 0x24
    ab48:	ldr	r1, [r5, #60]	; 0x3c
    ab4c:	add	r0, r0, r7
    ab50:	bl	4dc0 <sas_read4@plt>
    ab54:	b	aa40 <readstat_parse_sas7bdat+0xb3c>
    ab58:	movw	r1, #64510	; 0xfbfe
    ab5c:	movt	r1, #65535	; 0xffff
    ab60:	cmp	r0, r1
    ab64:	cmnne	r0, #1024	; 0x400
    ab68:	beq	abb4 <readstat_parse_sas7bdat+0xcb0>
    ab6c:	cmn	r0, #9
    ab70:	bhi	abac <readstat_parse_sas7bdat+0xca8>
    ab74:	ldr	r0, [r5, #68]	; 0x44
    ab78:	eor	r0, r4, r0
    ab7c:	orrs	r0, r0, r6
    ab80:	bne	b060 <readstat_parse_sas7bdat+0x115c>
    ab84:	mov	r0, r5
    ab88:	mov	r1, #1
    ab8c:	mov	r7, r9
    ab90:	bl	b1c8 <sas7bdat_submit_columns_if_needed>
    ab94:	cmp	r0, #0
    ab98:	bne	afe0 <readstat_parse_sas7bdat+0x10dc>
    ab9c:	mov	r0, r7
    aba0:	mov	r1, r5
    aba4:	bl	beb8 <sas7bdat_parse_single_row>
    aba8:	b	abc4 <readstat_parse_sas7bdat+0xcc0>
    abac:	cmn	r0, #3
    abb0:	beq	ad84 <readstat_parse_sas7bdat+0xe80>
    abb4:	mov	r1, r9
    abb8:	mov	r2, r4
    abbc:	mov	r3, r5
    abc0:	bl	b804 <sas7bdat_parse_subheader>
    abc4:	cmp	r0, #0
    abc8:	beq	ad84 <readstat_parse_sas7bdat+0xe80>
    abcc:	b	afe0 <readstat_parse_sas7bdat+0x10dc>
    abd0:	add	lr, r6, r4
    abd4:	add	r1, r6, #2
    abd8:	mov	r0, ip
    abdc:	str	lr, [sp, #44]	; 0x2c
    abe0:	ldrb	r2, [r6]
    abe4:	ldrb	r3, [r6, #1]
    abe8:	mov	r7, #15
    abec:	mov	r6, r1
    abf0:	orr	r2, r3, r2, lsl #8
    abf4:	str	r2, [sp, #56]	; 0x38
    abf8:	ldr	r2, [sp, #56]	; 0x38
    abfc:	mov	r1, #1
    ac00:	tst	r2, r1, lsl r7
    ac04:	beq	ac30 <readstat_parse_sas7bdat+0xd2c>
    ac08:	add	r4, r6, #2
    ac0c:	mov	r9, #5
    ac10:	cmp	r4, lr
    ac14:	bhi	ad74 <readstat_parse_sas7bdat+0xe70>
    ac18:	ldrb	r3, [r6]
    ac1c:	ldrb	r1, [r6, #1]
    ac20:	cmp	r3, #15
    ac24:	bhi	ac64 <readstat_parse_sas7bdat+0xd60>
    ac28:	add	r2, r3, #3
    ac2c:	b	ac9c <readstat_parse_sas7bdat+0xd98>
    ac30:	add	r1, r6, #1
    ac34:	cmp	r1, lr
    ac38:	bhi	ad50 <readstat_parse_sas7bdat+0xe4c>
    ac3c:	ldr	r2, [r5, #68]	; 0x44
    ac40:	add	r3, ip, r2
    ac44:	add	r2, r0, #1
    ac48:	cmp	r2, r3
    ac4c:	bhi	ad70 <readstat_parse_sas7bdat+0xe6c>
    ac50:	ldrb	r3, [r6]
    ac54:	mov	r6, r1
    ac58:	strb	r3, [r0]
    ac5c:	mov	r0, r2
    ac60:	b	ad38 <readstat_parse_sas7bdat+0xe34>
    ac64:	mov	r2, #2
    ac68:	cmp	r2, r3, lsr #4
    ac6c:	beq	acc0 <readstat_parse_sas7bdat+0xdbc>
    ac70:	lsr	r2, r3, #4
    ac74:	cmp	r2, #1
    ac78:	bne	ace4 <readstat_parse_sas7bdat+0xde0>
    ac7c:	add	r6, r6, #3
    ac80:	cmp	r6, lr
    ac84:	bhi	ad74 <readstat_parse_sas7bdat+0xe70>
    ac88:	and	r2, r3, #15
    ac8c:	orr	r1, r2, r1, lsl #4
    ac90:	add	r2, r1, #19
    ac94:	ldrb	r1, [r4]
    ac98:	mov	r4, r6
    ac9c:	ldr	r3, [r5, #68]	; 0x44
    aca0:	add	r6, r0, r2
    aca4:	add	r3, ip, r3
    aca8:	cmp	r6, r3
    acac:	bhi	ad6c <readstat_parse_sas7bdat+0xe68>
    acb0:	bl	4c70 <memset@plt>
    acb4:	mov	r0, r6
    acb8:	mov	r6, r4
    acbc:	b	ad30 <readstat_parse_sas7bdat+0xe2c>
    acc0:	add	r6, r6, #3
    acc4:	cmp	r6, lr
    acc8:	bhi	ad74 <readstat_parse_sas7bdat+0xe70>
    accc:	and	r2, r3, #15
    acd0:	orr	r1, r2, r1, lsl #4
    acd4:	ldrb	r2, [r4]
    acd8:	add	r1, r1, #3
    acdc:	add	r2, r2, #16
    ace0:	b	acfc <readstat_parse_sas7bdat+0xdf8>
    ace4:	cmp	r2, #0
    ace8:	beq	ad48 <readstat_parse_sas7bdat+0xe44>
    acec:	and	r3, r3, #15
    acf0:	mov	r6, r4
    acf4:	orr	r1, r3, r1, lsl #4
    acf8:	add	r1, r1, #3
    acfc:	sub	r3, r0, ip
    ad00:	cmp	r3, r1
    ad04:	bcc	ad74 <readstat_parse_sas7bdat+0xe70>
    ad08:	cmp	r2, r1
    ad0c:	bhi	ad74 <readstat_parse_sas7bdat+0xe70>
    ad10:	ldr	r3, [r5, #68]	; 0x44
    ad14:	add	r4, r0, r2
    ad18:	add	r3, ip, r3
    ad1c:	cmp	r4, r3
    ad20:	bhi	ad6c <readstat_parse_sas7bdat+0xe68>
    ad24:	sub	r1, r0, r1
    ad28:	bl	4910 <memcpy@plt>
    ad2c:	mov	r0, r4
    ad30:	ldr	ip, [sp, #48]	; 0x30
    ad34:	ldr	lr, [sp, #44]	; 0x2c
    ad38:	sub	r7, r7, #1
    ad3c:	cmn	r7, #1
    ad40:	bne	abf8 <readstat_parse_sas7bdat+0xcf4>
    ad44:	b	ad50 <readstat_parse_sas7bdat+0xe4c>
    ad48:	mov	r6, r4
    ad4c:	b	ad38 <readstat_parse_sas7bdat+0xe34>
    ad50:	add	r1, r6, #2
    ad54:	cmp	r1, lr
    ad58:	bls	abe0 <readstat_parse_sas7bdat+0xcdc>
    ad5c:	ldr	r7, [r5, #68]	; 0x44
    ad60:	b	ab10 <readstat_parse_sas7bdat+0xc0c>
    ad64:	mvn	r0, #0
    ad68:	b	aa40 <readstat_parse_sas7bdat+0xb3c>
    ad6c:	ldr	ip, [sp, #48]	; 0x30
    ad70:	mov	r9, #10
    ad74:	mov	r0, ip
    ad78:	bl	48bc <free@plt>
    ad7c:	cmp	r9, #0
    ad80:	bne	b0cc <readstat_parse_sas7bdat+0x11c8>
    ad84:	ldr	r4, [fp, #-84]	; 0xffffffac
    ad88:	ldr	r0, [sp, #60]	; 0x3c
    ad8c:	ldr	r3, [sp, #88]	; 0x58
    ad90:	add	r4, r4, #1
    ad94:	add	r8, r8, r0
    ad98:	cmp	r4, r3
    ad9c:	bne	a994 <readstat_parse_sas7bdat+0xa90>
    ada0:	ldr	r0, [sp, #40]	; 0x28
    ada4:	ldr	r6, [sp, #52]	; 0x34
    ada8:	cmp	r0, #512	; 0x200
    adac:	bne	a8ac <readstat_parse_sas7bdat+0x9a8>
    adb0:	ldr	r0, [sp, #96]	; 0x60
    adb4:	sub	r0, r8, r0
    adb8:	asr	r1, r0, #31
    adbc:	add	r1, r0, r1, lsr #29
    adc0:	bic	r1, r1, #7
    adc4:	sub	r0, r0, r1
    adc8:	cmp	r0, #4
    adcc:	bne	a80c <readstat_parse_sas7bdat+0x908>
    add0:	ldr	r0, [r8]
    add4:	cmp	r0, #0
    add8:	movwne	r1, #8224	; 0x2020
    addc:	movtne	r1, #8224	; 0x2020
    ade0:	cmpne	r0, r1
    ade4:	bne	adf0 <readstat_parse_sas7bdat+0xeec>
    ade8:	add	r8, r8, #4
    adec:	b	a814 <readstat_parse_sas7bdat+0x910>
    adf0:	ldr	r0, [r5, #48]	; 0x30
    adf4:	cmp	r0, #0
    adf8:	addne	r8, r8, #4
    adfc:	b	a814 <readstat_parse_sas7bdat+0x910>
    ae00:	ldr	r0, [r5, #24]
    ae04:	ldr	r8, [sp, #68]	; 0x44
    ae08:	ldr	r6, [sp, #64]	; 0x40
    ae0c:	mov	r9, #15
    ae10:	cmp	r0, #0
    ae14:	beq	a0b4 <readstat_parse_sas7bdat+0x1b0>
    ae18:	ldrd	r0, [r4]
    ae1c:	stm	sp, {r0, r1}
    ae20:	movw	r0, #481	; 0x1e1
    ae24:	mov	r1, #2048	; 0x800
    ae28:	ldr	r2, [pc, #904]	; b1b8 <readstat_parse_sas7bdat+0x12b4>
    ae2c:	add	r4, r5, r0
    ae30:	mov	r0, r4
    ae34:	add	r2, pc, r2
    ae38:	bl	4c4c <snprintf@plt>
    ae3c:	ldr	r2, [r5, #24]
    ae40:	ldr	r1, [r5, #52]	; 0x34
    ae44:	mov	r0, r4
    ae48:	blx	r2
    ae4c:	b	a0b4 <readstat_parse_sas7bdat+0x1b0>
    ae50:	mov	r0, r5
    ae54:	mov	r1, #0
    ae58:	bl	b1c8 <sas7bdat_submit_columns_if_needed>
    ae5c:	mov	r9, r0
    ae60:	cmp	r0, #0
    ae64:	bne	a01c <readstat_parse_sas7bdat+0x118>
    ae68:	ldr	r0, [r5, #16]
    ae6c:	mov	r1, r7
    ae70:	cmp	r0, #0
    ae74:	beq	ae88 <readstat_parse_sas7bdat+0xf84>
    ae78:	ldr	r0, [r5, #76]	; 0x4c
    ae7c:	ldr	r3, [r5, #84]	; 0x54
    ae80:	cmp	r0, r3
    ae84:	bne	b00c <readstat_parse_sas7bdat+0x1108>
    ae88:	ldr	r3, [r5, #56]	; 0x38
    ae8c:	ldr	r0, [r1]
    ae90:	ldr	r1, [r5, #28]
    ae94:	ldr	r2, [r5, #52]	; 0x34
    ae98:	ldr	r7, [r3, #16]
    ae9c:	ldr	r3, [r3, #20]
    aea0:	blx	r7
    aea4:	mov	r9, r0
    aea8:	b	a01c <readstat_parse_sas7bdat+0x118>
    aeac:	ldr	r0, [r5, #24]
    aeb0:	mov	r9, #15
    aeb4:	cmp	r0, #0
    aeb8:	beq	af28 <readstat_parse_sas7bdat+0x1024>
    aebc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    aec0:	ldr	r3, [sp, #100]	; 0x64
    aec4:	ldr	r6, [sp, #96]	; 0x60
    aec8:	ldrd	r0, [r4]
    aecc:	add	lr, sp, #8
    aed0:	ldm	r2, {r2, ip}
    aed4:	umull	r7, r4, r2, r3
    aed8:	mla	r4, r2, r6, r4
    aedc:	mla	r4, ip, r3, r4
    aee0:	adds	r7, r7, r0
    aee4:	str	r7, [sp]
    aee8:	adc	r4, r4, r1
    aeec:	str	r4, [sp, #4]
    aef0:	stm	lr, {r0, r1, r3, r6}
    aef4:	str	r2, [sp, #24]
    aef8:	str	ip, [sp, #28]
    aefc:	ldr	r2, [pc, #684]	; b1b0 <readstat_parse_sas7bdat+0x12ac>
    af00:	movw	r0, #481	; 0x1e1
    af04:	mov	r1, #2048	; 0x800
    af08:	add	r4, r5, r0
    af0c:	mov	r0, r4
    af10:	add	r2, pc, r2
    af14:	bl	4c4c <snprintf@plt>
    af18:	ldr	r2, [r5, #24]
    af1c:	ldr	r1, [r5, #52]	; 0x34
    af20:	mov	r0, r4
    af24:	blx	r2
    af28:	ldr	r0, [sp, #72]	; 0x48
    af2c:	ldr	r1, [r0, #4]
    af30:	ldr	r0, [r0, #20]
    af34:	blx	r1
    af38:	ldr	r8, [sp, #68]	; 0x44
    af3c:	ldr	r6, [sp, #64]	; 0x40
    af40:	b	a0c0 <readstat_parse_sas7bdat+0x1bc>
    af44:	mov	r9, r0
    af48:	cmp	r0, #4
    af4c:	beq	b054 <readstat_parse_sas7bdat+0x1150>
    af50:	ldr	r0, [r5, #24]
    af54:	ldr	sl, [sp, #72]	; 0x48
    af58:	cmp	r0, #0
    af5c:	beq	b000 <readstat_parse_sas7bdat+0x10fc>
    af60:	ldr	r0, [fp, #-96]	; 0xffffffa0
    af64:	mov	r1, #1
    af68:	ldr	r3, [r0, #8]
    af6c:	ldr	r2, [r0, #20]
    af70:	mov	r0, #0
    af74:	blx	r3
    af78:	ldr	r3, [fp, #-80]	; 0xffffffb0
    af7c:	asr	r1, r0, #31
    af80:	subs	r2, r0, #1
    af84:	str	r8, [sp]
    af88:	sbc	r1, r1, #0
    af8c:	ldr	r4, [r3]
    af90:	ldr	r3, [r3, #4]
    af94:	subs	r7, r0, r4
    af98:	rsc	r0, r3, r0, asr #31
    af9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    afa0:	stmib	sp, {r3, r7}
    afa4:	str	r0, [sp, #12]
    afa8:	str	r1, [sp, #20]
    afac:	str	r2, [sp, #16]
    afb0:	movw	r0, #481	; 0x1e1
    afb4:	mov	r1, #2048	; 0x800
    afb8:	ldr	r2, [pc, #500]	; b1b4 <readstat_parse_sas7bdat+0x12b0>
    afbc:	add	r4, r5, r0
    afc0:	mov	r0, r4
    afc4:	add	r2, pc, r2
    afc8:	bl	4c4c <snprintf@plt>
    afcc:	ldr	r2, [r5, #24]
    afd0:	ldr	r1, [r5, #52]	; 0x34
    afd4:	mov	r0, r4
    afd8:	blx	r2
    afdc:	b	b000 <readstat_parse_sas7bdat+0x10fc>
    afe0:	mov	r9, r0
    afe4:	b	b0cc <readstat_parse_sas7bdat+0x11c8>
    afe8:	cmp	r0, #4
    afec:	mov	r9, r0
    aff0:	ldr	sl, [sp, #72]	; 0x48
    aff4:	ldrne	r0, [r5, #24]
    aff8:	cmpne	r0, #0
    affc:	bne	b074 <readstat_parse_sas7bdat+0x1170>
    b000:	ldr	r8, [sp, #68]	; 0x44
    b004:	ldr	r6, [sp, #64]	; 0x40
    b008:	b	a01c <readstat_parse_sas7bdat+0x118>
    b00c:	ldr	r1, [r5, #24]
    b010:	mov	r9, #9
    b014:	cmp	r1, #0
    b018:	beq	a4b0 <readstat_parse_sas7bdat+0x5ac>
    b01c:	str	r0, [sp]
    b020:	movw	r0, #481	; 0x1e1
    b024:	mov	r1, #2048	; 0x800
    b028:	ldr	r2, [pc, #404]	; b1c4 <readstat_parse_sas7bdat+0x12c0>
    b02c:	add	r4, r5, r0
    b030:	mov	r0, r4
    b034:	add	r2, pc, r2
    b038:	bl	4c4c <snprintf@plt>
    b03c:	ldr	r2, [r5, #24]
    b040:	ldr	r1, [r5, #52]	; 0x34
    b044:	mov	r0, r4
    b048:	blx	r2
    b04c:	b	a4b0 <readstat_parse_sas7bdat+0x5ac>
    b050:	.word	0x0001a188
    b054:	add	sl, sp, #64	; 0x40
    b058:	ldm	sl, {r6, r8, sl}
    b05c:	b	a01c <readstat_parse_sas7bdat+0x118>
    b060:	mov	r9, #10
    b064:	b	b0cc <readstat_parse_sas7bdat+0x11c8>
    b068:	mov	r9, #2
    b06c:	b	af28 <readstat_parse_sas7bdat+0x1024>
    b070:	.word	0x0001a178
    b074:	ldr	r0, [fp, #-96]	; 0xffffffa0
    b078:	mov	r1, #1
    b07c:	ldr	r3, [r0, #8]
    b080:	ldr	r2, [r0, #20]
    b084:	mov	r0, #0
    b088:	blx	r3
    b08c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    b090:	asr	r1, r0, #31
    b094:	subs	r2, r0, #1
    b098:	sbc	r1, r1, #0
    b09c:	ldr	r4, [r3]
    b0a0:	ldr	r3, [r3, #4]
    b0a4:	subs	r7, r0, r4
    b0a8:	rsc	r0, r3, r0, asr #31
    b0ac:	ldr	r3, [sp, #100]	; 0x64
    b0b0:	str	r3, [sp]
    b0b4:	ldr	r3, [sp, #96]	; 0x60
    b0b8:	b	afa0 <readstat_parse_sas7bdat+0x109c>
    b0bc:	mov	r9, #6
    b0c0:	b	b0cc <readstat_parse_sas7bdat+0x11c8>
    b0c4:	.word	0x0001a167
    b0c8:	mov	r9, #5
    b0cc:	cmp	r9, #4
    b0d0:	ldr	r8, [sp, #68]	; 0x44
    b0d4:	ldr	r6, [sp, #64]	; 0x40
    b0d8:	ldrne	r0, [r5, #24]
    b0dc:	cmpne	r0, #0
    b0e0:	beq	a01c <readstat_parse_sas7bdat+0x118>
    b0e4:	ldr	r0, [sp, #100]	; 0x64
    b0e8:	mov	r1, #1
    b0ec:	ldr	r3, [r0, #8]
    b0f0:	ldr	r2, [r0, #20]
    b0f4:	mov	r0, #0
    b0f8:	blx	r3
    b0fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
    b100:	asr	r1, r0, #31
    b104:	subs	r2, r0, #1
    b108:	sbc	r1, r1, #0
    b10c:	ldr	r4, [r3]
    b110:	ldr	r3, [r3, #4]
    b114:	subs	r7, r0, r4
    b118:	rsc	r0, r3, r0, asr #31
    b11c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    b120:	str	r3, [sp]
    b124:	ldr	r3, [fp, #-96]	; 0xffffffa0
    b128:	stmib	sp, {r3, r7}
    b12c:	str	r0, [sp, #12]
    b130:	str	r1, [sp, #20]
    b134:	str	r2, [sp, #16]
    b138:	movw	r0, #481	; 0x1e1
    b13c:	mov	r1, #2048	; 0x800
    b140:	ldr	r2, [pc, #116]	; b1bc <readstat_parse_sas7bdat+0x12b8>
    b144:	add	r4, r5, r0
    b148:	mov	r0, r4
    b14c:	add	r2, pc, r2
    b150:	bl	4c4c <snprintf@plt>
    b154:	ldr	r2, [r5, #24]
    b158:	ldr	r1, [r5, #52]	; 0x34
    b15c:	mov	r0, r4
    b160:	blx	r2
    b164:	b	a01c <readstat_parse_sas7bdat+0x118>
    b168:	ldr	r2, [r5, #24]
    b16c:	mov	r9, #10
    b170:	cmp	r2, #0
    b174:	beq	b0cc <readstat_parse_sas7bdat+0x11c8>
    b178:	stm	sp, {r0, r1}
    b17c:	ldr	r3, [r5, #76]	; 0x4c
    b180:	movw	r0, #481	; 0x1e1
    b184:	mov	r1, #2048	; 0x800
    b188:	ldr	r2, [pc, #48]	; b1c0 <readstat_parse_sas7bdat+0x12bc>
    b18c:	add	r4, r5, r0
    b190:	mov	r0, r4
    b194:	add	r2, pc, r2
    b198:	bl	4c4c <snprintf@plt>
    b19c:	ldr	r2, [r5, #24]
    b1a0:	ldr	r1, [r5, #52]	; 0x34
    b1a4:	mov	r0, r4
    b1a8:	blx	r2
    b1ac:	b	b0cc <readstat_parse_sas7bdat+0x11c8>
    b1b0:	.word	0x0001938f
    b1b4:	.word	0x0001931a
    b1b8:	.word	0x000192d3
    b1bc:	.word	0x00019192
    b1c0:	.word	0x000191d5
    b1c4:	.word	0x00019212

0000b1c8 <sas7bdat_submit_columns_if_needed>:
    b1c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b1cc:	add	fp, sp, #28
    b1d0:	sub	sp, sp, #84	; 0x54
    b1d4:	mov	r4, r0
    b1d8:	ldr	r0, [r0, #64]	; 0x40
    b1dc:	mov	r8, #0
    b1e0:	cmp	r0, #0
    b1e4:	beq	b1f4 <sas7bdat_submit_columns_if_needed+0x2c>
    b1e8:	mov	r0, r8
    b1ec:	sub	sp, fp, #28
    b1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1f4:	ldr	r2, [r4]
    b1f8:	cmp	r2, #0
    b1fc:	beq	b2a8 <sas7bdat_submit_columns_if_needed+0xe0>
    b200:	ldr	r6, [r4, #80]	; 0x50
    b204:	ldr	r5, [r4, #84]	; 0x54
    b208:	add	r0, sp, #24
    b20c:	mov	r7, #0
    b210:	add	r8, r4, #212	; 0xd4
    b214:	add	r3, r0, #8
    b218:	str	r7, [sp, #28]
    b21c:	add	r0, r0, #24
    b220:	str	r5, [sp, #24]
    b224:	strd	r6, [r3]
    b228:	ldm	r8, {r3, r6, r8}
    b22c:	asr	r9, r8, #31
    b230:	str	r3, [sp, #40]	; 0x28
    b234:	str	r6, [sp, #44]	; 0x2c
    b238:	strd	r8, [r0]
    b23c:	str	r7, [sp, #56]	; 0x38
    b240:	add	r3, r4, #224	; 0xe0
    b244:	ldr	r0, [r4, #40]	; 0x28
    b248:	str	r3, [sp, #68]	; 0x44
    b24c:	mov	r3, #1
    b250:	str	r7, [sp, #64]	; 0x40
    b254:	cmp	r0, #0
    b258:	movweq	r3, #2
    b25c:	cmp	r1, #0
    b260:	str	r3, [sp, #60]	; 0x3c
    b264:	ldr	r0, [r4, #200]	; 0xc8
    b268:	str	r0, [sp, #72]	; 0x48
    b26c:	ldrb	r0, [r4, #44]	; 0x2c
    b270:	and	r0, r0, #1
    b274:	strb	r0, [sp, #76]	; 0x4c
    b278:	beq	b290 <sas7bdat_submit_columns_if_needed+0xc8>
    b27c:	ldrb	r0, [r4, #2529]	; 0x9e1
    b280:	mov	r1, #2
    b284:	tst	r0, #1
    b288:	movweq	r1, #1
    b28c:	str	r1, [sp, #56]	; 0x38
    b290:	ldr	r1, [r4, #52]	; 0x34
    b294:	add	r0, sp, #24
    b298:	blx	r2
    b29c:	mov	r8, #4
    b2a0:	cmp	r0, #0
    b2a4:	bne	b1e8 <sas7bdat_submit_columns_if_needed+0x20>
    b2a8:	ldr	r0, [r4, #80]	; 0x50
    b2ac:	cmp	r0, #0
    b2b0:	beq	b4cc <sas7bdat_submit_columns_if_needed+0x304>
    b2b4:	mov	r1, #4
    b2b8:	bl	49a0 <readstat_calloc@plt>
    b2bc:	cmp	r0, #0
    b2c0:	str	r0, [r4, #196]	; 0xc4
    b2c4:	beq	b4dc <sas7bdat_submit_columns_if_needed+0x314>
    b2c8:	ldr	r0, [r4, #80]	; 0x50
    b2cc:	cmp	r0, #0
    b2d0:	beq	b4cc <sas7bdat_submit_columns_if_needed+0x304>
    b2d4:	movw	r0, #481	; 0x1e1
    b2d8:	mov	r9, #0
    b2dc:	mov	sl, #0
    b2e0:	mov	r7, #0
    b2e4:	mov	r8, #0
    b2e8:	add	r0, r4, r0
    b2ec:	str	r0, [sp, #16]
    b2f0:	mov	r0, #1
    b2f4:	movw	r1, #2152	; 0x868
    b2f8:	bl	49a0 <readstat_calloc@plt>
    b2fc:	str	sl, [r0, #2148]	; 0x864
    b300:	str	r7, [r0, #4]
    b304:	mov	r5, r0
    b308:	ldr	r0, [r4, #192]	; 0xc0
    b30c:	add	r1, r0, r9
    b310:	ldr	r2, [r1, #36]	; 0x24
    b314:	str	r2, [r5]
    b318:	cmp	r2, #0
    b31c:	ldr	r1, [r1, #32]
    b320:	str	r1, [r5, #1596]	; 0x63c
    b324:	beq	b424 <sas7bdat_submit_columns_if_needed+0x25c>
    b328:	cmp	r2, #5
    b32c:	bne	b33c <sas7bdat_submit_columns_if_needed+0x174>
    b330:	sub	r1, r1, #3
    b334:	cmp	r1, #5
    b338:	bhi	b434 <sas7bdat_submit_columns_if_needed+0x26c>
    b33c:	ldr	r2, [r0, r9]!
    b340:	str	sl, [sp, #20]
    b344:	add	sl, r5, #8
    b348:	mov	r1, #300	; 0x12c
    b34c:	ldrh	r3, [r0, #4]
    b350:	mov	r0, sl
    b354:	str	r4, [sp]
    b358:	bl	c1d4 <sas7bdat_copy_text_ref>
    b35c:	mov	r6, r0
    b360:	cmp	r0, #0
    b364:	bne	b3c0 <sas7bdat_submit_columns_if_needed+0x1f8>
    b368:	ldr	r0, [r4, #192]	; 0xc0
    b36c:	mov	r1, #256	; 0x100
    b370:	add	r0, r0, r9
    b374:	ldrh	r3, [r0, #10]
    b378:	ldr	r2, [r0, #6]
    b37c:	add	r0, r5, #308	; 0x134
    b380:	str	r4, [sp]
    b384:	bl	c1d4 <sas7bdat_copy_text_ref>
    b388:	mov	r6, r0
    b38c:	cmp	r0, #0
    b390:	bne	b3c0 <sas7bdat_submit_columns_if_needed+0x1f8>
    b394:	ldr	r0, [r4, #192]	; 0xc0
    b398:	mov	r1, #1024	; 0x400
    b39c:	add	r0, r0, r9
    b3a0:	ldrh	r3, [r0, #16]
    b3a4:	ldr	r2, [r0, #12]
    b3a8:	add	r0, r5, #564	; 0x234
    b3ac:	str	r4, [sp]
    b3b0:	bl	c1d4 <sas7bdat_copy_text_ref>
    b3b4:	mov	r6, r0
    b3b8:	cmp	r0, #0
    b3bc:	beq	b450 <sas7bdat_submit_columns_if_needed+0x288>
    b3c0:	mov	r0, r5
    b3c4:	bl	48bc <free@plt>
    b3c8:	cmp	r6, #17
    b3cc:	bne	b448 <sas7bdat_submit_columns_if_needed+0x280>
    b3d0:	ldr	r0, [r4, #24]
    b3d4:	mov	r8, #17
    b3d8:	cmp	r0, #0
    b3dc:	beq	b44c <sas7bdat_submit_columns_if_needed+0x284>
    b3e0:	add	r0, r5, #564	; 0x234
    b3e4:	add	r1, r5, #308	; 0x134
    b3e8:	str	sl, [sp]
    b3ec:	ldr	r5, [sp, #16]
    b3f0:	mov	r3, r7
    b3f4:	str	r1, [sp, #4]
    b3f8:	str	r0, [sp, #8]
    b3fc:	mov	r1, #2048	; 0x800
    b400:	ldr	r2, [pc, #228]	; b4ec <sas7bdat_submit_columns_if_needed+0x324>
    b404:	mov	r0, r5
    b408:	add	r2, pc, r2
    b40c:	bl	4c4c <snprintf@plt>
    b410:	ldr	r2, [r4, #24]
    b414:	ldr	r1, [r4, #52]	; 0x34
    b418:	mov	r0, r5
    b41c:	blx	r2
    b420:	b	b44c <sas7bdat_submit_columns_if_needed+0x284>
    b424:	sub	r1, r1, #1
    b428:	movw	r2, #32766	; 0x7ffe
    b42c:	cmp	r1, r2
    b430:	bls	b33c <sas7bdat_submit_columns_if_needed+0x174>
    b434:	mov	r0, r5
    b438:	bl	48bc <free@plt>
    b43c:	mov	r5, #0
    b440:	mov	r8, #5
    b444:	b	b454 <sas7bdat_submit_columns_if_needed+0x28c>
    b448:	mov	r8, r6
    b44c:	mov	r5, #0
    b450:	ldr	sl, [sp, #20]
    b454:	ldr	r0, [r4, #196]	; 0xc4
    b458:	str	r5, [r0, r7, lsl #2]
    b45c:	ldr	r0, [r4, #196]	; 0xc4
    b460:	ldr	r1, [r0, r7, lsl #2]
    b464:	cmp	r1, #0
    b468:	beq	b4c4 <sas7bdat_submit_columns_if_needed+0x2fc>
    b46c:	ldr	r6, [r4, #8]
    b470:	cmp	r6, #0
    b474:	beq	b498 <sas7bdat_submit_columns_if_needed+0x2d0>
    b478:	ldr	r3, [r4, #52]	; 0x34
    b47c:	add	r2, r1, #308	; 0x134
    b480:	mov	r0, r7
    b484:	blx	r6
    b488:	cmp	r0, #2
    b48c:	beq	b4a0 <sas7bdat_submit_columns_if_needed+0x2d8>
    b490:	cmp	r0, #1
    b494:	beq	b4e4 <sas7bdat_submit_columns_if_needed+0x31c>
    b498:	add	sl, sl, #1
    b49c:	b	b4b0 <sas7bdat_submit_columns_if_needed+0x2e8>
    b4a0:	ldr	r0, [r4, #196]	; 0xc4
    b4a4:	mov	r1, #1
    b4a8:	ldr	r0, [r0, r7, lsl #2]
    b4ac:	str	r1, [r0, #2144]	; 0x860
    b4b0:	ldr	r0, [r4, #80]	; 0x50
    b4b4:	add	r7, r7, #1
    b4b8:	add	r9, r9, #40	; 0x28
    b4bc:	cmp	r7, r0
    b4c0:	bcc	b2f0 <sas7bdat_submit_columns_if_needed+0x128>
    b4c4:	cmp	r8, #0
    b4c8:	bne	b1e8 <sas7bdat_submit_columns_if_needed+0x20>
    b4cc:	mov	r0, #1
    b4d0:	mov	r8, #0
    b4d4:	str	r0, [r4, #64]	; 0x40
    b4d8:	b	b1e8 <sas7bdat_submit_columns_if_needed+0x20>
    b4dc:	mov	r8, #3
    b4e0:	b	b1e8 <sas7bdat_submit_columns_if_needed+0x20>
    b4e4:	mov	r8, #4
    b4e8:	b	b1e8 <sas7bdat_submit_columns_if_needed+0x20>
    b4ec:	.word	0x00018fa1

0000b4f0 <sas7bdat_parse_page_pass1>:
    b4f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4f4:	add	fp, sp, #28
    b4f8:	sub	sp, sp, #4
    b4fc:	vpush	{d8-d9}
    b500:	sub	sp, sp, #56	; 0x38
    b504:	mov	r6, r0
    b508:	ldr	r0, [r2, #128]	; 0x80
    b50c:	mov	r4, r1
    b510:	ldr	r1, [r2, #60]	; 0x3c
    b514:	mov	r9, r2
    b518:	add	r0, r0, r6
    b51c:	sub	r0, r0, #4
    b520:	bl	4d9c <sas_read2@plt>
    b524:	ldr	sl, [r9, #144]	; 0x90
    b528:	ldrd	r2, [r9, #128]	; 0x80
    b52c:	mov	r7, r0
    b530:	str	r4, [sp, #16]
    b534:	mul	r0, sl, r0
    b538:	adds	r1, r2, r0
    b53c:	adc	r3, r3, r0, asr #31
    b540:	subs	r1, r4, r1
    b544:	mov	r0, #5
    b548:	rscs	r1, r3, #0
    b54c:	bcc	b694 <sas7bdat_parse_page_pass1+0x1a4>
    b550:	cmp	r7, #0
    b554:	beq	b690 <sas7bdat_parse_page_pass1+0x1a0>
    b558:	add	r0, r9, #136	; 0x88
    b55c:	vmov.i32	q4, #0	; 0x00000000
    b560:	add	r5, r6, r2
    b564:	str	r6, [sp, #8]
    b568:	str	r7, [sp, #12]
    b56c:	str	r0, [sp, #28]
    b570:	ldr	r0, [sp, #16]
    b574:	add	r0, r6, r0
    b578:	str	r0, [sp, #24]
    b57c:	add	r0, r6, #4
    b580:	str	r0, [sp]
    b584:	add	r0, sp, #32
    b588:	add	r0, r0, #8
    b58c:	str	r0, [sp, #20]
    b590:	add	r2, sp, #32
    b594:	mov	r1, #20
    b598:	mov	r3, r9
    b59c:	mov	r0, r2
    b5a0:	vst1.64	{d8-d9}, [r0], r1
    b5a4:	mov	r1, #0
    b5a8:	str	r1, [r0]
    b5ac:	ldr	r0, [sp, #24]
    b5b0:	str	r1, [sp, #48]	; 0x30
    b5b4:	sub	r1, r0, r5
    b5b8:	ldr	r0, [sp, #28]
    b5bc:	ldr	r8, [r0]
    b5c0:	mov	r0, r5
    b5c4:	bl	b6ac <sas7bdat_parse_subheader_pointer>
    b5c8:	cmp	r0, #0
    b5cc:	bne	b694 <sas7bdat_parse_page_pass1+0x1a4>
    b5d0:	ldr	r0, [sp, #20]
    b5d4:	ldr	r4, [r0]
    b5d8:	ldr	r1, [r0, #4]
    b5dc:	orrs	r0, r4, r1
    b5e0:	beq	b684 <sas7bdat_parse_page_pass1+0x194>
    b5e4:	ldrb	r6, [sp, #48]	; 0x30
    b5e8:	cmp	r6, #1
    b5ec:	beq	b684 <sas7bdat_parse_page_pass1+0x194>
    b5f0:	ldr	r1, [sp, #16]
    b5f4:	ldr	r2, [sp, #12]
    b5f8:	add	r0, sp, #32
    b5fc:	mov	r3, r9
    b600:	bl	b754 <sas7bdat_validate_subheader_pointer>
    b604:	cmp	r0, #0
    b608:	bne	b694 <sas7bdat_parse_page_pass1+0x1a4>
    b60c:	cmp	r6, #4
    b610:	beq	b684 <sas7bdat_parse_page_pass1+0x194>
    b614:	cmp	r6, #0
    b618:	bne	b6a4 <sas7bdat_parse_page_pass1+0x1b4>
    b61c:	ldr	r1, [sp, #32]
    b620:	ldr	r0, [sp, #8]
    b624:	add	r6, r0, r1
    b628:	str	r1, [sp, #4]
    b62c:	ldr	r1, [r9, #60]	; 0x3c
    b630:	mov	r0, r6
    b634:	bl	4dc0 <sas_read4@plt>
    b638:	cmp	r8, #8
    b63c:	bne	b660 <sas7bdat_parse_page_pass1+0x170>
    b640:	cmn	r0, #1
    b644:	ldreq	r1, [r9, #40]	; 0x28
    b648:	cmpeq	r1, #0
    b64c:	bne	b660 <sas7bdat_parse_page_pass1+0x170>
    b650:	ldm	sp, {r0, r1}
    b654:	add	r0, r0, r1
    b658:	ldr	r1, [r9, #60]	; 0x3c
    b65c:	bl	4dc0 <sas_read4@plt>
    b660:	cmn	r0, #3
    b664:	bne	b684 <sas7bdat_parse_page_pass1+0x194>
    b668:	mvn	r0, #2
    b66c:	mov	r1, r6
    b670:	mov	r2, r4
    b674:	mov	r3, r9
    b678:	bl	b804 <sas7bdat_parse_subheader>
    b67c:	cmp	r0, #0
    b680:	bne	b694 <sas7bdat_parse_page_pass1+0x1a4>
    b684:	add	r5, r5, sl
    b688:	subs	r7, r7, #1
    b68c:	bne	b590 <sas7bdat_parse_page_pass1+0xa0>
    b690:	mov	r0, #0
    b694:	sub	sp, fp, #48	; 0x30
    b698:	vpop	{d8-d9}
    b69c:	add	sp, sp, #4
    b6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b6a4:	mov	r0, #6
    b6a8:	b	b694 <sas7bdat_parse_page_pass1+0x1a4>

0000b6ac <sas7bdat_parse_subheader_pointer>:
    b6ac:	push	{r4, r5, r6, r7, fp, lr}
    b6b0:	add	fp, sp, #16
    b6b4:	mov	r5, r0
    b6b8:	ldr	r0, [r3, #44]	; 0x2c
    b6bc:	mov	r6, r3
    b6c0:	mov	r4, r2
    b6c4:	mov	r7, #5
    b6c8:	cmp	r0, #0
    b6cc:	beq	b70c <sas7bdat_parse_subheader_pointer+0x60>
    b6d0:	cmp	r1, #18
    b6d4:	bcc	b74c <sas7bdat_parse_subheader_pointer+0xa0>
    b6d8:	ldr	r1, [r6, #60]	; 0x3c
    b6dc:	mov	r0, r5
    b6e0:	bl	4d90 <sas_read8@plt>
    b6e4:	strd	r0, [r4]
    b6e8:	add	r0, r5, #8
    b6ec:	ldr	r1, [r6, #60]	; 0x3c
    b6f0:	bl	4d90 <sas_read8@plt>
    b6f4:	strd	r0, [r4, #8]
    b6f8:	mov	r7, #0
    b6fc:	ldrb	r0, [r5, #16]
    b700:	strb	r0, [r4, #16]
    b704:	ldrb	r0, [r5, #17]
    b708:	b	b748 <sas7bdat_parse_subheader_pointer+0x9c>
    b70c:	cmp	r1, #10
    b710:	bcc	b74c <sas7bdat_parse_subheader_pointer+0xa0>
    b714:	ldr	r1, [r6, #60]	; 0x3c
    b718:	mov	r0, r5
    b71c:	bl	4dc0 <sas_read4@plt>
    b720:	mov	r7, #0
    b724:	stm	r4, {r0, r7}
    b728:	add	r0, r5, #4
    b72c:	ldr	r1, [r6, #60]	; 0x3c
    b730:	bl	4dc0 <sas_read4@plt>
    b734:	mov	r6, r0
    b738:	strd	r6, [r4, #8]
    b73c:	ldrb	r0, [r5, #8]
    b740:	strb	r0, [r4, #16]
    b744:	ldrb	r0, [r5, #9]
    b748:	strb	r0, [r4, #17]
    b74c:	mov	r0, r7
    b750:	pop	{r4, r5, r6, r7, fp, pc}

0000b754 <sas7bdat_validate_subheader_pointer>:
    b754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b758:	add	fp, sp, #28
    b75c:	ldrd	r4, [r0]
    b760:	mov	ip, r0
    b764:	mov	r0, #5
    b768:	subs	r7, r1, r4
    b76c:	rscs	r7, r5, #0
    b770:	bcc	b800 <sas7bdat_validate_subheader_pointer+0xac>
    b774:	ldrd	r8, [ip, #8]
    b778:	adds	r7, r8, r4
    b77c:	adc	lr, r9, r5
    b780:	subs	r6, r1, r8
    b784:	rscs	r6, r9, #0
    b788:	bcc	b800 <sas7bdat_validate_subheader_pointer+0xac>
    b78c:	subs	r6, r1, r7
    b790:	rscs	r7, lr, #0
    b794:	bcc	b800 <sas7bdat_validate_subheader_pointer+0xac>
    b798:	add	r6, r3, #144	; 0x90
    b79c:	add	lr, r3, #128	; 0x80
    b7a0:	ldrd	r6, [r6]
    b7a4:	umull	sl, r6, r6, r2
    b7a8:	mla	r2, r7, r2, r6
    b7ac:	ldrd	r6, [lr]
    b7b0:	adds	r6, sl, r6
    b7b4:	adc	r2, r2, r7
    b7b8:	subs	r7, r4, r6
    b7bc:	sbcs	r2, r5, r2
    b7c0:	bcc	b800 <sas7bdat_validate_subheader_pointer+0xac>
    b7c4:	ldrb	r2, [ip, #16]
    b7c8:	cmp	r2, #0
    b7cc:	beq	b7d8 <sas7bdat_validate_subheader_pointer+0x84>
    b7d0:	mov	r0, #0
    b7d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b7d8:	add	r2, r3, #136	; 0x88
    b7dc:	ldrd	r6, [r2]
    b7e0:	adds	r2, r6, r4
    b7e4:	adc	r3, r7, r5
    b7e8:	subs	r6, r8, r6
    b7ec:	sbcs	r7, r9, r7
    b7f0:	bcc	b800 <sas7bdat_validate_subheader_pointer+0xac>
    b7f4:	subs	r1, r1, r2
    b7f8:	rscs	r1, r3, #0
    b7fc:	movcs	r0, #0
    b800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b804 <sas7bdat_parse_subheader>:
    b804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b808:	add	fp, sp, #28
    b80c:	sub	sp, sp, #12
    b810:	ldrd	r8, [r3, #136]	; 0x88
    b814:	mov	r5, r1
    b818:	mov	r6, r2
    b81c:	mov	r7, #5
    b820:	adds	r1, r8, #2
    b824:	adc	r2, r9, #0
    b828:	subs	r1, r6, r1
    b82c:	rscs	r1, r2, #0
    b830:	bcs	b840 <sas7bdat_parse_subheader+0x3c>
    b834:	mov	r0, r7
    b838:	sub	sp, fp, #28
    b83c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b840:	mov	sl, r3
    b844:	cmn	r0, #1024	; 0x400
    b848:	bge	b938 <sas7bdat_parse_subheader+0x134>
    b84c:	movw	r1, #63222	; 0xf6f6
    b850:	movt	r1, #63222	; 0xf6f6
    b854:	cmp	r0, r1
    b858:	beq	b97c <sas7bdat_parse_subheader+0x178>
    b85c:	movw	r1, #63479	; 0xf7f7
    b860:	movt	r1, #63479	; 0xf7f7
    b864:	cmp	r0, r1
    b868:	beq	b9c8 <sas7bdat_parse_subheader+0x1c4>
    b86c:	movw	r1, #64510	; 0xfbfe
    b870:	movt	r1, #65535	; 0xffff
    b874:	cmp	r0, r1
    b878:	bne	ba30 <sas7bdat_parse_subheader+0x22c>
    b87c:	ldr	r0, [sl, #44]	; 0x2c
    b880:	mov	r1, #58	; 0x3a
    b884:	cmp	r0, #0
    b888:	movweq	r1, #46	; 0x2e
    b88c:	cmp	r1, r6
    b890:	bhi	b834 <sas7bdat_parse_subheader+0x30>
    b894:	ldr	r0, [sl, #172]	; 0xac
    b898:	add	r1, r0, #1
    b89c:	mov	r0, sl
    b8a0:	str	r1, [sl, #172]	; 0xac
    b8a4:	bl	be00 <sas7bdat_realloc_col_info>
    b8a8:	mov	r7, r0
    b8ac:	cmp	r0, #0
    b8b0:	bne	b834 <sas7bdat_parse_subheader+0x30>
    b8b4:	ldr	r0, [sl, #44]	; 0x2c
    b8b8:	ldr	r4, [sl, #172]	; 0xac
    b8bc:	ldr	r6, [sl, #192]	; 0xc0
    b8c0:	mov	r1, #46	; 0x2e
    b8c4:	mov	r2, sl
    b8c8:	cmp	r0, #0
    b8cc:	add	r0, sp, #4
    b8d0:	movweq	r1, #34	; 0x22
    b8d4:	add	r1, r5, r1
    b8d8:	bl	be70 <sas7bdat_parse_text_ref>
    b8dc:	add	r0, r4, r4, lsl #2
    b8e0:	ldrh	r1, [sp, #8]
    b8e4:	mov	r2, sl
    b8e8:	add	r0, r6, r0, lsl #3
    b8ec:	strh	r1, [r0, #-30]	; 0xffffffe2
    b8f0:	ldr	r1, [sp, #4]
    b8f4:	str	r1, [r0, #-34]	; 0xffffffde
    b8f8:	mov	r1, #52	; 0x34
    b8fc:	ldr	r0, [sl, #44]	; 0x2c
    b900:	ldr	r4, [sl, #172]	; 0xac
    b904:	ldr	r6, [sl, #192]	; 0xc0
    b908:	cmp	r0, #0
    b90c:	add	r0, sp, #4
    b910:	movweq	r1, #40	; 0x28
    b914:	add	r1, r5, r1
    b918:	bl	be70 <sas7bdat_parse_text_ref>
    b91c:	add	r0, r4, r4, lsl #2
    b920:	ldrh	r1, [sp, #8]
    b924:	add	r0, r6, r0, lsl #3
    b928:	strh	r1, [r0, #-24]	; 0xffffffe8
    b92c:	ldr	r1, [sp, #4]
    b930:	str	r1, [r0, #-28]	; 0xffffffe4
    b934:	b	bd24 <sas7bdat_parse_subheader+0x520>
    b938:	add	r1, r0, #4
    b93c:	cmp	r1, #3
    b940:	bhi	ba24 <sas7bdat_parse_subheader+0x220>
    b944:	add	r0, pc, #8
    b948:	mov	r7, #0
    b94c:	ldr	r1, [r0, r1, lsl #2]
    b950:	add	pc, r0, r1
    b954:	.word	0x00000010
    b958:	.word	0x000000f0
    b95c:	.word	0xfffffee0
    b960:	.word	0x000001d8
    b964:	ldr	r0, [sl, #44]	; 0x2c
    b968:	cmp	r0, #0
    b96c:	beq	bbf8 <sas7bdat_parse_subheader+0x3f4>
    b970:	sub	r0, r6, #28
    b974:	lsr	r9, r0, #4
    b978:	b	bc0c <sas7bdat_parse_subheader+0x408>
    b97c:	ldr	r0, [sl, #80]	; 0x50
    b980:	cmp	r0, #0
    b984:	bne	b834 <sas7bdat_parse_subheader+0x30>
    b988:	ldr	r0, [sl, #64]	; 0x40
    b98c:	cmp	r0, #0
    b990:	bne	b834 <sas7bdat_parse_subheader+0x30>
    b994:	ldr	r0, [sl, #44]	; 0x2c
    b998:	mov	r1, #8
    b99c:	mov	r7, #5
    b9a0:	cmp	r0, #0
    b9a4:	movwne	r1, #16
    b9a8:	cmp	r1, r6
    b9ac:	bhi	b834 <sas7bdat_parse_subheader+0x30>
    b9b0:	cmp	r0, #0
    b9b4:	beq	bdd8 <sas7bdat_parse_subheader+0x5d4>
    b9b8:	ldr	r1, [sl, #60]	; 0x3c
    b9bc:	add	r0, r5, #8
    b9c0:	bl	4d90 <sas_read8@plt>
    b9c4:	b	bde4 <sas7bdat_parse_subheader+0x5e0>
    b9c8:	ldr	r0, [sl, #44]	; 0x2c
    b9cc:	mov	r1, #64	; 0x40
    b9d0:	mov	r7, #5
    b9d4:	cmp	r0, #0
    b9d8:	movwne	r1, #128	; 0x80
    b9dc:	cmp	r1, r6
    b9e0:	bhi	b834 <sas7bdat_parse_subheader+0x30>
    b9e4:	cmp	r0, #0
    b9e8:	beq	bd2c <sas7bdat_parse_subheader+0x528>
    b9ec:	ldr	r1, [sl, #60]	; 0x3c
    b9f0:	add	r0, r5, #40	; 0x28
    b9f4:	bl	4d90 <sas_read8@plt>
    b9f8:	ldr	r1, [sl, #60]	; 0x3c
    b9fc:	mov	r7, r0
    ba00:	add	r0, r5, #48	; 0x30
    ba04:	bl	4d90 <sas_read8@plt>
    ba08:	mov	r8, r1
    ba0c:	ldr	r1, [sl, #60]	; 0x3c
    ba10:	mov	r6, r0
    ba14:	add	r0, r5, #120	; 0x78
    ba18:	bl	4d90 <sas_read8@plt>
    ba1c:	mov	r5, r0
    ba20:	b	bd60 <sas7bdat_parse_subheader+0x55c>
    ba24:	cmn	r0, #1024	; 0x400
    ba28:	mov	r7, #0
    ba2c:	beq	b834 <sas7bdat_parse_subheader+0x30>
    ba30:	cmn	r0, #9
    ba34:	mov	r1, #5
    ba38:	movwhi	r1, #0
    ba3c:	mov	r0, r1
    ba40:	b	b838 <sas7bdat_parse_subheader+0x34>
    ba44:	ldr	r1, [sl, #60]	; 0x3c
    ba48:	add	r5, r5, r8
    ba4c:	mov	r0, r5
    ba50:	bl	4d9c <sas_read2@plt>
    ba54:	mov	r7, r0
    ba58:	mov	r0, r6
    ba5c:	mov	r1, r8
    ba60:	bl	4d84 <sas_subheader_remainder@plt>
    ba64:	cmp	r0, r7
    ba68:	mov	r7, #5
    ba6c:	bne	b834 <sas7bdat_parse_subheader+0x30>
    ba70:	ldr	r1, [sl, #152]	; 0x98
    ba74:	ldr	r0, [sl, #160]	; 0xa0
    ba78:	add	r1, r1, #1
    ba7c:	str	r1, [sl, #152]	; 0x98
    ba80:	lsl	r1, r1, #2
    ba84:	bl	4cb8 <readstat_realloc@plt>
    ba88:	str	r0, [sl, #160]	; 0xa0
    ba8c:	ldr	r0, [sl, #152]	; 0x98
    ba90:	ldr	r3, [sl, #156]	; 0x9c
    ba94:	lsl	r1, r0, #2
    ba98:	mov	r0, r3
    ba9c:	bl	4cb8 <readstat_realloc@plt>
    baa0:	str	r0, [sl, #156]	; 0x9c
    baa4:	cmp	r0, #0
    baa8:	mov	r7, #3
    baac:	ldrne	r0, [sl, #160]	; 0xa0
    bab0:	cmpne	r0, #0
    bab4:	beq	b834 <sas7bdat_parse_subheader+0x30>
    bab8:	sub	r6, r6, r8
    babc:	mov	r0, r6
    bac0:	bl	4bf8 <readstat_malloc@plt>
    bac4:	cmp	r0, #0
    bac8:	beq	b834 <sas7bdat_parse_subheader+0x30>
    bacc:	mov	r1, r5
    bad0:	mov	r2, r6
    bad4:	mov	r8, r0
    bad8:	bl	4910 <memcpy@plt>
    badc:	ldrd	r0, [sl, #152]	; 0x98
    bae0:	cmp	r6, #21
    bae4:	add	r0, r1, r0, lsl #2
    bae8:	str	r6, [r0, #-4]
    baec:	ldr	r0, [sl, #152]	; 0x98
    baf0:	ldr	r1, [sl, #160]	; 0xa0
    baf4:	add	r0, r1, r0, lsl #2
    baf8:	str	r8, [r0, #-4]
    bafc:	bcc	bd24 <sas7bdat_parse_subheader+0x520>
    bb00:	ldr	r1, [pc, #756]	; bdfc <sas7bdat_parse_subheader+0x5f8>
    bb04:	add	r0, r8, #12
    bb08:	mov	r2, #8
    bb0c:	add	r1, pc, r1
    bb10:	bl	4ebc <strncmp@plt>
    bb14:	cmp	r0, #0
    bb18:	bne	bd24 <sas7bdat_parse_subheader+0x520>
    bb1c:	ldrb	r0, [sl, #2529]	; 0x9e1
    bb20:	orr	r0, r0, #1
    bb24:	strb	r0, [sl, #2529]	; 0x9e1
    bb28:	b	bd24 <sas7bdat_parse_subheader+0x520>
    bb2c:	ldr	r0, [sl, #44]	; 0x2c
    bb30:	ldr	r1, [sl, #60]	; 0x3c
    bb34:	add	r9, r5, r8
    bb38:	mvn	r5, #27
    bb3c:	cmp	r0, #0
    bb40:	mov	r0, r9
    bb44:	mvneq	r5, #19
    bb48:	bl	4d9c <sas_read2@plt>
    bb4c:	mov	r7, r0
    bb50:	mov	r0, r6
    bb54:	mov	r1, r8
    bb58:	bl	4d84 <sas_subheader_remainder@plt>
    bb5c:	cmp	r0, r7
    bb60:	mov	r7, #5
    bb64:	bne	b834 <sas7bdat_parse_subheader+0x30>
    bb68:	add	r0, r5, r6
    bb6c:	lsr	r6, r0, #3
    bb70:	ldr	r0, [sl, #164]	; 0xa4
    bb74:	add	r1, r0, r6
    bb78:	mov	r0, sl
    bb7c:	str	r1, [sl, #164]	; 0xa4
    bb80:	bl	be00 <sas7bdat_realloc_col_info>
    bb84:	mov	r7, r0
    bb88:	cmp	r0, #0
    bb8c:	bne	b834 <sas7bdat_parse_subheader+0x30>
    bb90:	cmp	r6, #0
    bb94:	beq	bd24 <sas7bdat_parse_subheader+0x520>
    bb98:	ldr	r0, [sl, #164]	; 0xa4
    bb9c:	add	r1, r6, r6, lsl #2
    bba0:	add	r5, r9, #8
    bba4:	add	r8, sp, #4
    bba8:	sub	r7, r0, r6
    bbac:	add	r0, r0, r0, lsl #2
    bbb0:	lsl	r0, r0, #3
    bbb4:	sub	r6, r0, r1, lsl #3
    bbb8:	ldr	r4, [sl, #192]	; 0xc0
    bbbc:	mov	r0, r8
    bbc0:	mov	r1, r5
    bbc4:	mov	r2, sl
    bbc8:	bl	be70 <sas7bdat_parse_text_ref>
    bbcc:	ldr	r0, [sp, #4]
    bbd0:	add	r7, r7, #1
    bbd4:	add	r5, r5, #8
    bbd8:	str	r0, [r4, r6]!
    bbdc:	add	r6, r6, #40	; 0x28
    bbe0:	ldrh	r0, [sp, #8]
    bbe4:	strh	r0, [r4, #4]
    bbe8:	ldr	r0, [sl, #164]	; 0xa4
    bbec:	cmp	r7, r0
    bbf0:	blt	bbb8 <sas7bdat_parse_subheader+0x3b4>
    bbf4:	b	bd24 <sas7bdat_parse_subheader+0x520>
    bbf8:	movw	r1, #43691	; 0xaaab
    bbfc:	sub	r0, r6, #20
    bc00:	movt	r1, #43690	; 0xaaaa
    bc04:	umull	r0, r1, r0, r1
    bc08:	lsr	r9, r1, #3
    bc0c:	ldr	r1, [sl, #60]	; 0x3c
    bc10:	add	r5, r5, r8
    bc14:	mov	r0, r5
    bc18:	bl	4d9c <sas_read2@plt>
    bc1c:	mov	r7, r0
    bc20:	mov	r0, r6
    bc24:	mov	r1, r8
    bc28:	bl	4d84 <sas_subheader_remainder@plt>
    bc2c:	cmp	r0, r7
    bc30:	mov	r7, #5
    bc34:	bne	b834 <sas7bdat_parse_subheader+0x30>
    bc38:	ldr	r0, [sl, #168]	; 0xa8
    bc3c:	add	r1, r0, r9
    bc40:	mov	r0, sl
    bc44:	str	r1, [sl, #168]	; 0xa8
    bc48:	bl	be00 <sas7bdat_realloc_col_info>
    bc4c:	mov	r7, r0
    bc50:	cmp	r0, #0
    bc54:	bne	b834 <sas7bdat_parse_subheader+0x30>
    bc58:	cmp	r9, #0
    bc5c:	beq	bd24 <sas7bdat_parse_subheader+0x520>
    bc60:	ldr	r0, [sl, #168]	; 0xa8
    bc64:	add	r1, r9, r9, lsl #2
    bc68:	add	r5, r5, #8
    bc6c:	sub	r8, r0, r9
    bc70:	add	r0, r0, r0, lsl #2
    bc74:	lsl	r0, r0, #3
    bc78:	sub	r6, r0, r1, lsl #3
    bc7c:	ldr	r0, [sl, #44]	; 0x2c
    bc80:	ldr	r1, [sl, #60]	; 0x3c
    bc84:	cmp	r0, #0
    bc88:	beq	bc98 <sas7bdat_parse_subheader+0x494>
    bc8c:	mov	r0, r5
    bc90:	bl	4d90 <sas_read8@plt>
    bc94:	b	bca4 <sas7bdat_parse_subheader+0x4a0>
    bc98:	mov	r0, r5
    bc9c:	bl	4dc0 <sas_read4@plt>
    bca0:	mov	r1, #0
    bca4:	ldr	r2, [sl, #192]	; 0xc0
    bca8:	add	r2, r2, r6
    bcac:	strd	r0, [r2, #24]
    bcb0:	ldr	r0, [sl, #44]	; 0x2c
    bcb4:	ldr	r1, [sl, #60]	; 0x3c
    bcb8:	cmp	r0, #0
    bcbc:	mov	r0, #8
    bcc0:	movweq	r0, #4
    bcc4:	add	r5, r5, r0
    bcc8:	mov	r0, r5
    bccc:	bl	4dc0 <sas_read4@plt>
    bcd0:	ldr	r1, [sl, #192]	; 0xc0
    bcd4:	mov	r7, #5
    bcd8:	add	r1, r1, r6
    bcdc:	str	r0, [r1, #32]
    bce0:	ldr	r2, [sl, #176]	; 0xb0
    bce4:	cmp	r0, r2
    bce8:	strhi	r0, [sl, #176]	; 0xb0
    bcec:	ldrb	r0, [r5, #6]
    bcf0:	cmp	r0, #1
    bcf4:	beq	bd04 <sas7bdat_parse_subheader+0x500>
    bcf8:	cmp	r0, #2
    bcfc:	bne	b834 <sas7bdat_parse_subheader+0x30>
    bd00:	mov	r7, #0
    bd04:	str	r8, [r1, #20]
    bd08:	str	r7, [r1, #36]	; 0x24
    bd0c:	add	r8, r8, #1
    bd10:	add	r5, r5, #8
    bd14:	add	r6, r6, #40	; 0x28
    bd18:	ldr	r0, [sl, #168]	; 0xa8
    bd1c:	cmp	r8, r0
    bd20:	blt	bc7c <sas7bdat_parse_subheader+0x478>
    bd24:	mov	r7, #0
    bd28:	b	b834 <sas7bdat_parse_subheader+0x30>
    bd2c:	ldr	r1, [sl, #60]	; 0x3c
    bd30:	add	r0, r5, #20
    bd34:	bl	4dc0 <sas_read4@plt>
    bd38:	ldr	r1, [sl, #60]	; 0x3c
    bd3c:	mov	r7, r0
    bd40:	add	r0, r5, #24
    bd44:	bl	4dc0 <sas_read4@plt>
    bd48:	ldr	r1, [sl, #60]	; 0x3c
    bd4c:	mov	r6, r0
    bd50:	add	r0, r5, #60	; 0x3c
    bd54:	bl	4dc0 <sas_read4@plt>
    bd58:	mov	r5, r0
    bd5c:	mov	r8, #0
    bd60:	str	r7, [sl, #68]	; 0x44
    bd64:	mov	r1, r7
    bd68:	ldr	r0, [sl, #124]	; 0x7c
    bd6c:	bl	4cb8 <readstat_realloc@plt>
    bd70:	cmp	r0, #0
    bd74:	str	r0, [sl, #124]	; 0x7c
    bd78:	beq	bd9c <sas7bdat_parse_subheader+0x598>
    bd7c:	str	r5, [sl, #72]	; 0x48
    bd80:	ldr	r0, [sl, #88]	; 0x58
    bd84:	subs	r1, r0, r6
    bd88:	rscs	r1, r8, #0
    bd8c:	bcs	bda4 <sas7bdat_parse_subheader+0x5a0>
    bd90:	subs	r0, r6, r0
    bd94:	sbc	r1, r8, #0
    bd98:	b	bdb0 <sas7bdat_parse_subheader+0x5ac>
    bd9c:	mov	r7, #3
    bda0:	b	b834 <sas7bdat_parse_subheader+0x30>
    bda4:	mov	r0, #0
    bda8:	mov	r1, #0
    bdac:	str	r6, [sl, #88]	; 0x58
    bdb0:	ldr	r2, [sl, #84]	; 0x54
    bdb4:	mov	r7, #0
    bdb8:	cmp	r2, #0
    bdbc:	beq	bdd0 <sas7bdat_parse_subheader+0x5cc>
    bdc0:	subs	r2, r0, r2
    bdc4:	sbcs	r1, r1, #0
    bdc8:	strcc	r0, [sl, #84]	; 0x54
    bdcc:	b	b834 <sas7bdat_parse_subheader+0x30>
    bdd0:	str	r0, [sl, #84]	; 0x54
    bdd4:	b	b834 <sas7bdat_parse_subheader+0x30>
    bdd8:	ldr	r1, [sl, #60]	; 0x3c
    bddc:	add	r0, r5, #4
    bde0:	bl	4dc0 <sas_read4@plt>
    bde4:	mov	r1, r0
    bde8:	str	r0, [sl, #80]	; 0x50
    bdec:	mov	r0, sl
    bdf0:	sub	sp, fp, #28
    bdf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bdf8:	b	be00 <sas7bdat_realloc_col_info>
    bdfc:	.word	0x00018805

0000be00 <sas7bdat_realloc_col_info>:
    be00:	push	{r4, r5, r6, r7, fp, lr}
    be04:	add	fp, sp, #16
    be08:	ldr	r7, [r0, #188]	; 0xbc
    be0c:	mov	r6, #0
    be10:	cmp	r7, r1
    be14:	bcs	be68 <sas7bdat_realloc_col_info+0x68>
    be18:	str	r1, [r0, #188]	; 0xbc
    be1c:	mov	r5, r0
    be20:	mov	r4, r1
    be24:	add	r1, r1, r1, lsl #2
    be28:	ldr	r0, [r0, #192]	; 0xc0
    be2c:	lsl	r1, r1, #3
    be30:	bl	4cb8 <readstat_realloc@plt>
    be34:	cmp	r0, #0
    be38:	str	r0, [r5, #192]	; 0xc0
    be3c:	beq	be64 <sas7bdat_realloc_col_info+0x64>
    be40:	add	r1, r7, r7, lsl #2
    be44:	mov	r6, #0
    be48:	add	r0, r0, r1, lsl #3
    be4c:	sub	r1, r4, r7
    be50:	add	r1, r1, r1, lsl #2
    be54:	lsl	r2, r1, #3
    be58:	mov	r1, #0
    be5c:	bl	4c70 <memset@plt>
    be60:	b	be68 <sas7bdat_realloc_col_info+0x68>
    be64:	mov	r6, #3
    be68:	mov	r0, r6
    be6c:	pop	{r4, r5, r6, r7, fp, pc}

0000be70 <sas7bdat_parse_text_ref>:
    be70:	push	{r4, r5, r6, sl, fp, lr}
    be74:	add	fp, sp, #16
    be78:	mov	r5, r1
    be7c:	ldr	r1, [r2, #60]	; 0x3c
    be80:	mov	r6, r0
    be84:	mov	r4, r2
    be88:	mov	r0, r5
    be8c:	bl	4d9c <sas_read2@plt>
    be90:	strh	r0, [r6]
    be94:	add	r0, r5, #2
    be98:	ldr	r1, [r4, #60]	; 0x3c
    be9c:	bl	4d9c <sas_read2@plt>
    bea0:	strh	r0, [r6, #2]
    bea4:	add	r0, r5, #4
    bea8:	ldr	r1, [r4, #60]	; 0x3c
    beac:	bl	4d9c <sas_read2@plt>
    beb0:	strh	r0, [r6, #4]
    beb4:	pop	{r4, r5, r6, sl, fp, pc}

0000beb8 <sas7bdat_parse_single_row>:
    beb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bebc:	add	fp, sp, #28
    bec0:	sub	sp, sp, #4
    bec4:	vpush	{d8-d9}
    bec8:	sub	sp, sp, #40	; 0x28
    becc:	str	r0, [sp, #20]
    bed0:	mov	r4, r1
    bed4:	ldr	r0, [r1, #76]	; 0x4c
    bed8:	ldr	r1, [r1, #84]	; 0x54
    bedc:	mov	r6, #0
    bee0:	cmp	r0, r1
    bee4:	beq	c15c <sas7bdat_parse_single_row+0x2a4>
    bee8:	ldr	r0, [r4, #88]	; 0x58
    beec:	cmp	r0, #0
    bef0:	beq	bf00 <sas7bdat_parse_single_row+0x48>
    bef4:	sub	r0, r0, #1
    bef8:	str	r0, [r4, #88]	; 0x58
    befc:	b	c15c <sas7bdat_parse_single_row+0x2a4>
    bf00:	ldr	r0, [r4, #16]
    bf04:	cmp	r0, #0
    bf08:	beq	c144 <sas7bdat_parse_single_row+0x28c>
    bf0c:	ldr	r0, [r4, #176]	; 0xb0
    bf10:	ldr	r3, [r4, #180]	; 0xb4
    bf14:	mov	r1, #1
    bf18:	orr	r1, r1, r0, lsl #2
    bf1c:	mov	r0, r3
    bf20:	str	r1, [r4, #184]	; 0xb8
    bf24:	bl	4cb8 <readstat_realloc@plt>
    bf28:	cmp	r0, #0
    bf2c:	str	r0, [r4, #180]	; 0xb4
    bf30:	beq	c158 <sas7bdat_parse_single_row+0x2a0>
    bf34:	ldr	r0, [r4, #80]	; 0x50
    bf38:	cmp	r0, #0
    bf3c:	beq	c144 <sas7bdat_parse_single_row+0x28c>
    bf40:	ldr	r1, [sp, #20]
    bf44:	vmov.i32	q4, #0	; 0x00000000
    bf48:	mov	r8, #0
    bf4c:	sub	r1, r1, #1
    bf50:	str	r1, [sp, #12]
    bf54:	add	r1, sp, #24
    bf58:	add	r1, r1, #8
    bf5c:	str	r1, [sp, #16]
    bf60:	ldr	r1, [r4, #196]	; 0xc4
    bf64:	ldr	r7, [r1, r8, lsl #2]
    bf68:	ldr	r1, [r7, #2144]	; 0x860
    bf6c:	cmp	r1, #0
    bf70:	bne	c138 <sas7bdat_parse_single_row+0x280>
    bf74:	ldr	r0, [r4, #192]	; 0xc0
    bf78:	add	r1, r8, r8, lsl #2
    bf7c:	mov	r6, #5
    bf80:	add	r9, r0, r1, lsl #3
    bf84:	ldr	r0, [r4, #68]	; 0x44
    bf88:	ldrd	r2, [r9, #24]
    bf8c:	subs	r1, r0, r2
    bf90:	rscs	r1, r3, #0
    bf94:	bcc	c15c <sas7bdat_parse_single_row+0x2a4>
    bf98:	mov	sl, r9
    bf9c:	ldr	r1, [sl, #32]!
    bfa0:	adds	r1, r2, r1
    bfa4:	adc	r3, r3, #0
    bfa8:	subs	r0, r0, r1
    bfac:	rscs	r0, r3, #0
    bfb0:	bcc	c15c <sas7bdat_parse_single_row+0x2a4>
    bfb4:	add	r1, sp, #24
    bfb8:	mov	r0, #8
    bfbc:	vst1.64	{d8-d9}, [r1], r0
    bfc0:	ldr	r0, [r9, #36]	; 0x24
    bfc4:	str	r0, [r1]
    bfc8:	ldr	r1, [sp, #20]
    bfcc:	cmp	r0, #5
    bfd0:	add	r5, r1, r2
    bfd4:	beq	c010 <sas7bdat_parse_single_row+0x158>
    bfd8:	cmp	r0, #0
    bfdc:	bne	c0fc <sas7bdat_parse_single_row+0x244>
    bfe0:	ldr	r2, [r4, #208]	; 0xd0
    bfe4:	ldr	r3, [sl]
    bfe8:	ldr	r0, [r4, #180]	; 0xb4
    bfec:	ldr	r1, [r4, #184]	; 0xb8
    bff0:	str	r2, [sp]
    bff4:	mov	r2, r5
    bff8:	bl	4c04 <readstat_convert@plt>
    bffc:	cmp	r0, #0
    c000:	bne	c178 <sas7bdat_parse_single_row+0x2c0>
    c004:	ldr	r0, [r4, #180]	; 0xb4
    c008:	str	r0, [sp, #24]
    c00c:	b	c0fc <sas7bdat_parse_single_row+0x244>
    c010:	ldr	r0, [r4, #40]	; 0x28
    c014:	ldr	r6, [sl]
    c018:	cmp	r0, #0
    c01c:	beq	c058 <sas7bdat_parse_single_row+0x1a0>
    c020:	cmp	r6, #0
    c024:	beq	c088 <sas7bdat_parse_single_row+0x1d0>
    c028:	ldr	r0, [sp, #12]
    c02c:	mov	r1, #0
    c030:	add	r3, r0, r2
    c034:	mov	r0, r6
    c038:	mov	r2, #0
    c03c:	ldrb	r5, [r3, r0]
    c040:	lsl	r2, r2, #8
    c044:	subs	r0, r0, #1
    c048:	orr	r2, r2, r1, lsr #24
    c04c:	orr	r1, r5, r1, lsl #8
    c050:	bne	c03c <sas7bdat_parse_single_row+0x184>
    c054:	b	c090 <sas7bdat_parse_single_row+0x1d8>
    c058:	cmp	r6, #0
    c05c:	beq	c088 <sas7bdat_parse_single_row+0x1d0>
    c060:	mov	r1, #0
    c064:	mov	r3, r6
    c068:	mov	r2, #0
    c06c:	lsl	r0, r2, #8
    c070:	subs	r3, r3, #1
    c074:	orr	r2, r0, r1, lsr #24
    c078:	ldrb	r0, [r5], #1
    c07c:	orr	r1, r0, r1, lsl #8
    c080:	bne	c06c <sas7bdat_parse_single_row+0x1b4>
    c084:	b	c090 <sas7bdat_parse_single_row+0x1d8>
    c088:	mov	r1, #0
    c08c:	mov	r2, #0
    c090:	mov	r0, #64	; 0x40
    c094:	sub	r0, r0, r6, lsl #3
    c098:	rsb	r3, r0, #32
    c09c:	lsr	r3, r1, r3
    c0a0:	orr	r5, r3, r2, lsl r0
    c0a4:	mov	r2, #32
    c0a8:	sub	r2, r2, r6, lsl #3
    c0ac:	lsl	r6, r1, r0
    c0b0:	cmp	r2, #0
    c0b4:	lslpl	r5, r1, r2
    c0b8:	movwpl	r6, #0
    c0bc:	vmov	d0, r6, r5
    c0c0:	bl	4d00 <__isnan@plt>
    c0c4:	cmp	r0, #0
    c0c8:	beq	c0f4 <sas7bdat_parse_single_row+0x23c>
    c0cc:	movw	r0, #0
    c0d0:	movt	r0, #32760	; 0x7ff8
    c0d4:	str	r0, [sp, #28]
    c0d8:	mov	r0, #0
    c0dc:	str	r0, [sp, #24]
    c0e0:	mvn	r0, r5, lsr #8
    c0e4:	uxtb	r1, r0
    c0e8:	add	r0, sp, #24
    c0ec:	bl	4e68 <sas_assign_tag@plt>
    c0f0:	b	c0fc <sas7bdat_parse_single_row+0x244>
    c0f4:	str	r6, [sp, #24]
    c0f8:	str	r5, [sp, #28]
    c0fc:	ldr	r0, [sp, #16]
    c100:	ldr	ip, [r4, #16]
    c104:	ldr	r2, [sp, #24]
    c108:	ldr	r3, [sp, #28]
    c10c:	ldr	r5, [r4, #52]	; 0x34
    c110:	ldr	r6, [r0]
    c114:	ldr	r1, [r0, #4]
    c118:	ldr	r0, [r4, #76]	; 0x4c
    c11c:	str	r6, [sp]
    c120:	stmib	sp, {r1, r5}
    c124:	mov	r1, r7
    c128:	blx	ip
    c12c:	cmp	r0, #0
    c130:	bne	c170 <sas7bdat_parse_single_row+0x2b8>
    c134:	ldr	r0, [r4, #80]	; 0x50
    c138:	add	r8, r8, #1
    c13c:	cmp	r8, r0
    c140:	bcc	bf60 <sas7bdat_parse_single_row+0xa8>
    c144:	ldr	r0, [r4, #76]	; 0x4c
    c148:	mov	r6, #0
    c14c:	add	r0, r0, #1
    c150:	str	r0, [r4, #76]	; 0x4c
    c154:	b	c15c <sas7bdat_parse_single_row+0x2a4>
    c158:	mov	r6, #3
    c15c:	mov	r0, r6
    c160:	sub	sp, fp, #48	; 0x30
    c164:	vpop	{d8-d9}
    c168:	add	sp, sp, #4
    c16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c170:	mov	r6, #4
    c174:	b	c15c <sas7bdat_parse_single_row+0x2a4>
    c178:	mov	r6, r0
    c17c:	ldr	r0, [r4, #24]
    c180:	cmp	r0, #0
    c184:	beq	c15c <sas7bdat_parse_single_row+0x2a4>
    c188:	ldr	r0, [r9, #20]
    c18c:	ldr	r1, [r4, #76]	; 0x4c
    c190:	ldr	r2, [sl]
    c194:	add	r0, r0, #1
    c198:	add	r3, r1, #1
    c19c:	mov	r1, #2048	; 0x800
    c1a0:	stm	sp, {r0, r2, r5}
    c1a4:	movw	r0, #481	; 0x1e1
    c1a8:	ldr	r2, [pc, #32]	; c1d0 <sas7bdat_parse_single_row+0x318>
    c1ac:	add	r5, r4, r0
    c1b0:	mov	r0, r5
    c1b4:	add	r2, pc, r2
    c1b8:	bl	4c4c <snprintf@plt>
    c1bc:	ldr	r2, [r4, #24]
    c1c0:	ldr	r1, [r4, #52]	; 0x34
    c1c4:	mov	r0, r5
    c1c8:	blx	r2
    c1cc:	b	c15c <sas7bdat_parse_single_row+0x2a4>
    c1d0:	.word	0x00018166

0000c1d4 <sas7bdat_copy_text_ref>:
    c1d4:	push	{r4, r5, r6, sl, fp, lr}
    c1d8:	add	fp, sp, #16
    c1dc:	sub	sp, sp, #8
    c1e0:	ldr	r4, [fp, #8]
    c1e4:	uxth	lr, r2
    c1e8:	mov	ip, #5
    c1ec:	ldr	r5, [r4, #152]	; 0x98
    c1f0:	cmp	lr, r5
    c1f4:	bge	c240 <sas7bdat_copy_text_ref+0x6c>
    c1f8:	uxth	r3, r3
    c1fc:	cmp	r3, #0
    c200:	beq	c238 <sas7bdat_copy_text_ref+0x64>
    c204:	ldr	r5, [r4, #156]	; 0x9c
    c208:	lsr	r2, r2, #16
    c20c:	add	r6, r2, r3
    c210:	ldr	r5, [r5, lr, lsl #2]
    c214:	cmp	r6, r5
    c218:	bhi	c240 <sas7bdat_copy_text_ref+0x6c>
    c21c:	ldr	r6, [r4, #160]	; 0xa0
    c220:	ldr	r5, [r4, #208]	; 0xd0
    c224:	ldr	r6, [r6, lr, lsl #2]
    c228:	str	r5, [sp]
    c22c:	add	r2, r6, r2
    c230:	bl	4c04 <readstat_convert@plt>
    c234:	b	c244 <sas7bdat_copy_text_ref+0x70>
    c238:	mov	ip, #0
    c23c:	strb	ip, [r0]
    c240:	mov	r0, ip
    c244:	sub	sp, fp, #16
    c248:	pop	{r4, r5, r6, sl, fp, pc}

0000c24c <readstat_begin_writing_sas7bdat>:
    c24c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c250:	add	fp, sp, #28
    c254:	ldr	r3, [r0, #8]
    c258:	mov	r8, r2
    c25c:	cmp	r3, #0
    c260:	moveq	r3, #9
    c264:	streq	r3, [r0, #8]
    c268:	ldr	r5, [pc, #184]	; c328 <readstat_begin_writing_sas7bdat+0xdc>
    c26c:	ldr	r4, [pc, #184]	; c32c <readstat_begin_writing_sas7bdat+0xe0>
    c270:	ldr	lr, [pc, #184]	; c330 <readstat_begin_writing_sas7bdat+0xe4>
    c274:	ldr	r7, [pc, #184]	; c334 <readstat_begin_writing_sas7bdat+0xe8>
    c278:	ldr	r6, [pc, #184]	; c338 <readstat_begin_writing_sas7bdat+0xec>
    c27c:	ldr	r3, [pc, #184]	; c33c <readstat_begin_writing_sas7bdat+0xf0>
    c280:	ldr	r2, [pc, #184]	; c340 <readstat_begin_writing_sas7bdat+0xf4>
    c284:	ldr	r9, [pc, #184]	; c344 <readstat_begin_writing_sas7bdat+0xf8>
    c288:	ldr	ip, [pc, #184]	; c348 <readstat_begin_writing_sas7bdat+0xfc>
    c28c:	ldr	sl, [pc, #184]	; c34c <readstat_begin_writing_sas7bdat+0x100>
    c290:	add	lr, pc, lr
    c294:	add	r4, pc, r4
    c298:	add	r5, pc, r5
    c29c:	add	r2, pc, r2
    c2a0:	add	r9, pc, r9
    c2a4:	add	sl, pc, sl
    c2a8:	add	r6, pc, r6
    c2ac:	add	r3, pc, r3
    c2b0:	add	r7, pc, r7
    c2b4:	add	ip, pc, ip
    c2b8:	str	lr, [r0, #264]	; 0x108
    c2bc:	add	lr, r0, #268	; 0x10c
    c2c0:	stm	lr, {r4, r5, r9, sl}
    c2c4:	add	lr, r0, #284	; 0x11c
    c2c8:	stm	lr, {r2, r3, r6}
    c2cc:	ldr	r2, [pc, #124]	; c350 <readstat_begin_writing_sas7bdat+0x104>
    c2d0:	ldr	r2, [pc, r2]
    c2d4:	str	ip, [r0, #228]	; 0xe4
    c2d8:	str	r2, [r0, #232]	; 0xe8
    c2dc:	str	r7, [r0, #236]	; 0xec
    c2e0:	ldr	r2, [pc, #108]	; c354 <readstat_begin_writing_sas7bdat+0x108>
    c2e4:	add	r2, pc, r2
    c2e8:	str	r2, [r0, #240]	; 0xf0
    c2ec:	ldr	r2, [pc, #100]	; c358 <readstat_begin_writing_sas7bdat+0x10c>
    c2f0:	add	r2, pc, r2
    c2f4:	str	r2, [r0, #244]	; 0xf4
    c2f8:	ldr	r2, [pc, #92]	; c35c <readstat_begin_writing_sas7bdat+0x110>
    c2fc:	add	r2, pc, r2
    c300:	str	r2, [r0, #248]	; 0xf8
    c304:	ldr	r2, [pc, #84]	; c360 <readstat_begin_writing_sas7bdat+0x114>
    c308:	add	r2, pc, r2
    c30c:	str	r2, [r0, #252]	; 0xfc
    c310:	ldr	r2, [pc, #76]	; c364 <readstat_begin_writing_sas7bdat+0x118>
    c314:	add	r2, pc, r2
    c318:	str	r2, [r0, #256]	; 0x100
    c31c:	mov	r2, r8
    c320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c324:	b	494c <readstat_begin_writing_file@plt>
    c328:	.word	0x000001f4
    c32c:	.word	0x000001dc
    c330:	.word	0x000001b4
    c334:	.word	0x000000c4
    c338:	.word	0x000000b8
    c33c:	.word	0x00000b38
    c340:	.word	0x00000b2c
    c344:	.word	0x0000023c
    c348:	.word	0x00000218
    c34c:	.word	0x00000b44
    c350:	.word	0x00037ff4
    c354:	.word	0x000000a4
    c358:	.word	0x000000ac
    c35c:	.word	0x000000b4
    c360:	.word	0x000000b8
    c364:	.word	0x000000b8

0000c368 <sas7bdat_metadata_ok>:
    c368:	ldr	r1, [r0, #16]
    c36c:	mov	r0, #6
    c370:	cmp	r1, #2
    c374:	movwcc	r0, #0
    c378:	bx	lr

0000c37c <sas7bdat_write_int8>:
    c37c:	vmov	s0, r2
    c380:	vcvt.f64.s32	d16, s0
    c384:	vst1.8	{d16}, [r0]
    c388:	mov	r0, #0
    c38c:	bx	lr

0000c390 <sas7bdat_write_int16>:
    c390:	vmov	s0, r2
    c394:	vcvt.f64.s32	d16, s0
    c398:	vst1.8	{d16}, [r0]
    c39c:	mov	r0, #0
    c3a0:	bx	lr

0000c3a4 <sas7bdat_write_int32>:
    c3a4:	vmov	s0, r2
    c3a8:	vcvt.f64.s32	d16, s0
    c3ac:	vst1.8	{d16}, [r0]
    c3b0:	mov	r0, #0
    c3b4:	bx	lr

0000c3b8 <sas7bdat_write_float>:
    c3b8:	vcvt.f64.f32	d16, s0
    c3bc:	vst1.8	{d16}, [r0]
    c3c0:	mov	r0, #0
    c3c4:	bx	lr

0000c3c8 <sas7bdat_write_double>:
    c3c8:	vst1.8	{d0}, [r0]
    c3cc:	mov	r0, #0
    c3d0:	bx	lr

0000c3d4 <sas7bdat_write_string>:
    c3d4:	push	{r4, r5, r6, r7, fp, lr}
    c3d8:	add	fp, sp, #16
    c3dc:	mov	r4, r0
    c3e0:	mov	r0, r1
    c3e4:	mov	r5, r2
    c3e8:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c3ec:	mov	r6, r0
    c3f0:	cmp	r5, #0
    c3f4:	beq	c430 <sas7bdat_write_string+0x5c>
    c3f8:	ldrb	r0, [r5]
    c3fc:	cmp	r0, #0
    c400:	beq	c430 <sas7bdat_write_string+0x5c>
    c404:	mov	r0, r5
    c408:	bl	4bd4 <strlen@plt>
    c40c:	mov	r7, #22
    c410:	cmp	r0, r6
    c414:	bhi	c444 <sas7bdat_write_string+0x70>
    c418:	mov	r0, r4
    c41c:	mov	r1, r5
    c420:	mov	r2, r6
    c424:	bl	4c94 <strncpy@plt>
    c428:	mov	r7, #0
    c42c:	b	c444 <sas7bdat_write_string+0x70>
    c430:	mov	r0, r4
    c434:	mov	r1, #0
    c438:	mov	r2, r6
    c43c:	mov	r7, #0
    c440:	bl	4c70 <memset@plt>
    c444:	mov	r0, r7
    c448:	pop	{r4, r5, r6, r7, fp, pc}

0000c44c <sas7bdat_write_missing_string>:
    c44c:	push	{r4, sl, fp, lr}
    c450:	add	fp, sp, #8
    c454:	mov	r4, r0
    c458:	mov	r0, r1
    c45c:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c460:	mov	r2, r0
    c464:	mov	r0, r4
    c468:	mov	r1, #0
    c46c:	bl	4c70 <memset@plt>
    c470:	mov	r0, #0
    c474:	pop	{r4, sl, fp, pc}

0000c478 <sas7bdat_write_missing_numeric>:
    c478:	movw	r1, #53504	; 0xd100
    c47c:	movt	r1, #32760	; 0x7ff8
    c480:	str	r1, [r0, #4]
    c484:	mov	r1, #0
    c488:	str	r1, [r0]
    c48c:	mov	r0, #0
    c490:	bx	lr

0000c494 <sas7bdat_write_missing_tagged>:
    c494:	push	{r4, r5, fp, lr}
    c498:	add	fp, sp, #8
    c49c:	mov	r4, r0
    c4a0:	mov	r0, r2
    c4a4:	mov	r5, r2
    c4a8:	bl	4b20 <sas_validate_tag@plt>
    c4ac:	cmp	r0, #0
    c4b0:	popne	{r4, r5, fp, pc}
    c4b4:	movw	r2, #0
    c4b8:	mov	r1, #0
    c4bc:	movt	r2, #32760	; 0x7ff8
    c4c0:	str	r1, [r4]
    c4c4:	eor	r1, r5, #255	; 0xff
    c4c8:	orr	r1, r2, r1, lsl #8
    c4cc:	str	r1, [r4, #4]
    c4d0:	pop	{r4, r5, fp, pc}

0000c4d4 <sas7bdat_variable_width>:
    c4d4:	cmp	r0, #0
    c4d8:	movne	r1, #8
    c4dc:	mov	r0, r1
    c4e0:	bx	lr

0000c4e4 <sas7bdat_begin_data>:
    c4e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4e8:	add	fp, sp, #28
    c4ec:	sub	sp, sp, #68	; 0x44
    c4f0:	mov	r7, r0
    c4f4:	mov	r0, #1
    c4f8:	mov	r1, #8
    c4fc:	bl	4778 <calloc@plt>
    c500:	ldr	r1, [r7, #12]
    c504:	str	r0, [sp, #24]
    c508:	mov	r0, r7
    c50c:	bl	4d24 <sas_header_info_init@plt>
    c510:	mov	r4, r0
    c514:	add	r0, r0, #48	; 0x30
    c518:	str	r0, [sp, #40]	; 0x28
    c51c:	mov	r0, r7
    c520:	bl	d418 <sas7bdat_row_length>
    c524:	mov	r1, r4
    c528:	ldr	lr, [r7, #16]
    c52c:	ldr	r3, [r4, #36]	; 0x24
    c530:	ldr	sl, [r4, #40]	; 0x28
    c534:	str	r4, [fp, #-44]	; 0xffffffd4
    c538:	str	r7, [sp, #48]	; 0x30
    c53c:	ldr	r4, [r1, #32]!
    c540:	str	r1, [sp, #36]	; 0x24
    c544:	subs	r6, r4, sl
    c548:	mov	r5, r4
    c54c:	cmp	lr, #0
    c550:	bne	c55c <sas7bdat_begin_data+0x78>
    c554:	cmp	r0, r6
    c558:	bhi	c630 <sas7bdat_begin_data+0x14c>
    c55c:	cmp	lr, #1
    c560:	bne	c590 <sas7bdat_begin_data+0xac>
    c564:	ldr	r2, [sp, #40]	; 0x28
    c568:	ldm	r2, {r4, r9}
    c56c:	mov	r2, #0
    c570:	str	r2, [fp, #-40]	; 0xffffffd8
    c574:	adds	r7, r4, r0
    c578:	adc	ip, r9, #0
    c57c:	subs	r7, r6, r7
    c580:	ldr	r7, [sp, #48]	; 0x30
    c584:	rscs	r2, ip, #0
    c588:	bge	c5a0 <sas7bdat_begin_data+0xbc>
    c58c:	b	c630 <sas7bdat_begin_data+0x14c>
    c590:	ldr	r2, [sp, #40]	; 0x28
    c594:	ldm	r2, {r4, r9}
    c598:	mov	r2, #0
    c59c:	str	r2, [fp, #-40]	; 0xffffffd8
    c5a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    c5a4:	mov	r8, lr
    c5a8:	mov	lr, r7
    c5ac:	ldr	r7, [r7, #28]
    c5b0:	mov	r1, sl
    c5b4:	ldr	ip, [r2, #4]
    c5b8:	mov	r2, #28
    c5bc:	str	r7, [sp, #44]	; 0x2c
    c5c0:	cmp	ip, #0
    c5c4:	movweq	r2, #20
    c5c8:	add	r2, r2, r7, lsl #3
    c5cc:	mov	r7, lr
    c5d0:	mov	lr, r8
    c5d4:	adds	r2, r4, r2
    c5d8:	adc	sl, r9, #0
    c5dc:	subs	r2, r6, r2
    c5e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c5e4:	sbcs	r2, r2, sl
    c5e8:	mov	sl, r1
    c5ec:	ldr	r1, [sp, #36]	; 0x24
    c5f0:	blt	c630 <sas7bdat_begin_data+0x14c>
    c5f4:	ldr	r7, [sp, #44]	; 0x2c
    c5f8:	mov	r2, #28
    c5fc:	mov	r8, r4
    c600:	cmp	ip, #0
    c604:	add	r4, r7, r7, lsl #1
    c608:	add	r2, r2, r7, lsl #4
    c60c:	mov	r7, #20
    c610:	addeq	r2, r7, r4, lsl #2
    c614:	adds	r2, r8, r2
    c618:	adc	r7, r9, #0
    c61c:	subs	r2, r6, r2
    c620:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c624:	sbcs	r2, r2, r7
    c628:	ldr	r7, [sp, #48]	; 0x30
    c62c:	bge	c648 <sas7bdat_begin_data+0x164>
    c630:	lsl	r2, r3, #1
    c634:	lsl	r4, r5, #1
    c638:	orr	r3, r2, r5, lsr #31
    c63c:	str	r4, [r1]
    c640:	str	r3, [r1, #4]
    c644:	b	c544 <sas7bdat_begin_data+0x60>
    c648:	ldr	r9, [sp, #44]	; 0x2c
    c64c:	ldr	r7, [fp, #-44]	; 0xffffffd4
    c650:	mov	r1, #16
    c654:	mov	r5, #1
    c658:	lsl	r0, r9, #3
    c65c:	str	r0, [fp, #-40]	; 0xffffffd8
    c660:	ldr	r0, [sp, #24]
    c664:	str	r7, [r0]
    c668:	mov	r0, #1
    c66c:	bl	4778 <calloc@plt>
    c670:	mov	sl, r0
    c674:	mov	r0, #4
    c678:	mov	r4, #0
    c67c:	str	r5, [sl]
    c680:	str	r4, [sl, #4]
    c684:	bl	4ae4 <malloc@plt>
    c688:	str	r0, [sl, #8]
    c68c:	mov	r5, r0
    c690:	sub	r0, r6, r8
    c694:	mov	r1, #36	; 0x24
    c698:	ldr	r8, [r7, #4]
    c69c:	cmp	r8, #0
    c6a0:	movweq	r1, #32
    c6a4:	sub	r7, r0, r1
    c6a8:	mov	r0, #1
    c6ac:	mov	r1, #24
    c6b0:	bl	4778 <calloc@plt>
    c6b4:	mov	r6, r0
    c6b8:	mov	r0, r7
    c6bc:	bl	4ae4 <malloc@plt>
    c6c0:	stm	r6, {r0, r7}
    c6c4:	mov	r0, #1
    c6c8:	mov	r1, #24
    c6cc:	str	r6, [r5]
    c6d0:	bl	4778 <calloc@plt>
    c6d4:	mov	r5, r0
    c6d8:	add	r0, r9, #4
    c6dc:	asr	r1, r0, #31
    c6e0:	strd	r0, [r5]
    c6e4:	mov	r1, #4
    c6e8:	bl	4778 <calloc@plt>
    c6ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c6f0:	cmp	r8, #0
    c6f4:	str	r0, [sp, #44]	; 0x2c
    c6f8:	str	r0, [r5, #16]
    c6fc:	mov	r0, #28
    c700:	str	r5, [sp, #28]
    c704:	mov	r5, #8
    c708:	mov	r9, #8
    c70c:	movweq	r0, #20
    c710:	movweq	r5, #4
    c714:	add	r6, r0, r1
    c718:	mov	r1, r5
    c71c:	mov	r0, r6
    c720:	bl	4d84 <sas_subheader_remainder@plt>
    c724:	mov	r7, r0
    c728:	mov	r0, #1
    c72c:	mov	r1, #20
    c730:	bl	4778 <calloc@plt>
    c734:	mov	r8, r0
    c738:	mvn	r0, #0
    c73c:	mov	r1, r6
    c740:	str	r0, [r8]
    c744:	mov	r0, #1
    c748:	str	r6, [r8, #8]
    c74c:	bl	4778 <calloc@plt>
    c750:	add	r1, r0, r5
    c754:	str	r0, [r8, #4]
    c758:	str	r8, [sp, #8]
    c75c:	strh	r7, [r1]
    c760:	ldr	r7, [sp, #48]	; 0x30
    c764:	ldr	r0, [r7, #28]
    c768:	cmp	r0, #1
    c76c:	blt	c7c4 <sas7bdat_begin_data+0x2e0>
    c770:	add	r6, r1, #8
    c774:	sub	r5, fp, #36	; 0x24
    c778:	mov	r0, r7
    c77c:	mov	r1, r4
    c780:	bl	4d48 <readstat_get_variable@plt>
    c784:	bl	4d30 <readstat_variable_get_name@plt>
    c788:	mov	r2, r0
    c78c:	mov	r0, r5
    c790:	mov	r1, sl
    c794:	bl	d484 <sas7bdat_make_text_ref>
    c798:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    c79c:	add	r4, r4, #1
    c7a0:	strh	r0, [r6]
    c7a4:	ldrh	r0, [fp, #-34]	; 0xffffffde
    c7a8:	strh	r0, [r6, #2]
    c7ac:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    c7b0:	strh	r0, [r6, #4]
    c7b4:	add	r6, r6, #8
    c7b8:	ldr	r0, [r7, #28]
    c7bc:	cmp	r4, r0
    c7c0:	blt	c778 <sas7bdat_begin_data+0x294>
    c7c4:	mov	r1, #28
    c7c8:	str	sl, [fp, #-40]	; 0xffffffd8
    c7cc:	add	r5, r1, r0, lsl #4
    c7d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c7d4:	add	r0, r0, r0, lsl #1
    c7d8:	ldr	r1, [r1, #4]
    c7dc:	cmp	r1, #0
    c7e0:	mov	r1, #20
    c7e4:	addeq	r5, r1, r0, lsl #2
    c7e8:	movweq	r9, #4
    c7ec:	mov	r1, r9
    c7f0:	mov	r0, r5
    c7f4:	bl	4d84 <sas_subheader_remainder@plt>
    c7f8:	mov	r6, r0
    c7fc:	mov	r0, #1
    c800:	mov	r1, #20
    c804:	bl	4778 <calloc@plt>
    c808:	mov	r4, r0
    c80c:	str	r5, [r0, #8]
    c810:	mvn	r0, #3
    c814:	mov	r1, r5
    c818:	str	r0, [r4]
    c81c:	mov	r0, #1
    c820:	bl	4778 <calloc@plt>
    c824:	str	r0, [r4, #4]
    c828:	add	r0, r0, r9
    c82c:	str	r4, [sp, #20]
    c830:	strh	r6, [r0]
    c834:	ldr	r1, [r7, #28]
    c838:	cmp	r1, #1
    c83c:	blt	c8fc <sas7bdat_begin_data+0x418>
    c840:	add	sl, r0, #8
    c844:	mov	r6, #0
    c848:	mov	r8, #0
    c84c:	mov	r5, #0
    c850:	mov	r0, r7
    c854:	mov	r1, r5
    c858:	bl	4d48 <readstat_get_variable@plt>
    c85c:	mov	r9, r0
    c860:	bl	4d30 <readstat_variable_get_name@plt>
    c864:	mov	r4, r0
    c868:	mov	r0, r9
    c86c:	bl	4ba4 <readstat_variable_get_type@plt>
    c870:	mov	r7, r0
    c874:	mov	r0, r4
    c878:	bl	4bd4 <strlen@plt>
    c87c:	cmp	r0, #9
    c880:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c884:	mov	r4, #2048	; 0x800
    c888:	mov	r1, r7
    c88c:	movwcc	r4, #4
    c890:	ldr	r0, [r0, #4]
    c894:	str	r6, [sl]
    c898:	cmp	r0, #0
    c89c:	moveq	r0, #4
    c8a0:	movne	r0, #8
    c8a4:	strne	r8, [sl, #4]
    c8a8:	cmp	r1, #0
    c8ac:	add	r7, sl, r0
    c8b0:	beq	c8c4 <sas7bdat_begin_data+0x3e0>
    c8b4:	mov	r0, #1
    c8b8:	strb	r0, [r7, #6]
    c8bc:	mov	r0, #8
    c8c0:	b	c8d4 <sas7bdat_begin_data+0x3f0>
    c8c4:	mov	r0, #2
    c8c8:	strb	r0, [r7, #6]
    c8cc:	mov	r0, r9
    c8d0:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c8d4:	strh	r4, [r7, #4]
    c8d8:	str	r0, [r7]
    c8dc:	add	sl, r7, #8
    c8e0:	ldr	r7, [sp, #48]	; 0x30
    c8e4:	adds	r6, r6, r0
    c8e8:	add	r5, r5, #1
    c8ec:	adc	r8, r8, #0
    c8f0:	ldr	r0, [r7, #28]
    c8f4:	cmp	r5, r0
    c8f8:	blt	c850 <sas7bdat_begin_data+0x36c>
    c8fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c900:	mov	r1, #20
    c904:	ldr	r5, [r0, #4]
    c908:	mov	r0, #1
    c90c:	bl	4778 <calloc@plt>
    c910:	mov	r9, r0
    c914:	movw	r0, #63479	; 0xf7f7
    c918:	cmp	r5, #0
    c91c:	mov	r1, #808	; 0x328
    c920:	movt	r0, #63479	; 0xf7f7
    c924:	movweq	r1, #480	; 0x1e0
    c928:	str	r0, [r9]
    c92c:	mov	r0, #1
    c930:	str	r1, [r9, #8]
    c934:	bl	4778 <calloc@plt>
    c938:	mov	r6, r7
    c93c:	mov	r7, r0
    c940:	str	r0, [r9, #4]
    c944:	add	r4, r0, #40	; 0x28
    c948:	mov	r0, r6
    c94c:	bl	d418 <sas7bdat_row_length>
    c950:	cmp	r5, #0
    c954:	beq	c9ac <sas7bdat_begin_data+0x4c8>
    c958:	ldr	r2, [sp, #36]	; 0x24
    c95c:	ldr	r5, [r6, #28]
    c960:	ldr	r1, [r6, #80]	; 0x50
    c964:	ldrd	r2, [r2]
    c968:	str	r0, [r4]
    c96c:	mov	r0, #0
    c970:	str	r0, [r4, #4]
    c974:	asr	r0, r5, #31
    c978:	str	r2, [r4, #64]	; 0x40
    c97c:	str	r3, [r4, #68]	; 0x44
    c980:	str	r5, [r4, #32]
    c984:	str	r1, [r4, #8]
    c988:	str	r0, [r4, #36]	; 0x24
    c98c:	asr	r0, r1, #31
    c990:	str	r0, [r4, #12]
    c994:	mvn	r0, #0
    c998:	str	r0, [r7, #140]	; 0x8c
    c99c:	str	r0, [r7, #136]	; 0x88
    c9a0:	str	r0, [r7, #132]	; 0x84
    c9a4:	str	r0, [r7, #128]	; 0x80
    c9a8:	b	c9d8 <sas7bdat_begin_data+0x4f4>
    c9ac:	ldr	r2, [sp, #36]	; 0x24
    c9b0:	ldr	r5, [r6, #28]
    c9b4:	ldr	r1, [r6, #80]	; 0x50
    c9b8:	ldr	r2, [r2]
    c9bc:	str	r0, [r7, #20]
    c9c0:	mvn	r0, #0
    c9c4:	str	r2, [r7, #52]	; 0x34
    c9c8:	str	r5, [r7, #36]	; 0x24
    c9cc:	str	r1, [r7, #24]
    c9d0:	str	r0, [r4, #28]
    c9d4:	str	r0, [r4, #24]
    c9d8:	ldr	r0, [sp, #44]	; 0x2c
    c9dc:	ldr	r6, [sp, #28]
    c9e0:	mov	r1, #20
    c9e4:	str	r9, [r0]
    c9e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c9ec:	ldr	r4, [r0, #4]
    c9f0:	mov	r0, #1
    c9f4:	bl	4778 <calloc@plt>
    c9f8:	mov	r7, r0
    c9fc:	movw	r0, #63222	; 0xf6f6
    ca00:	cmp	r4, #0
    ca04:	mov	r1, #24
    ca08:	movt	r0, #63222	; 0xf6f6
    ca0c:	movweq	r1, #12
    ca10:	str	r0, [r7]
    ca14:	mov	r0, #1
    ca18:	str	r1, [r7, #8]
    ca1c:	bl	4778 <calloc@plt>
    ca20:	cmp	r4, #0
    ca24:	str	r0, [r7, #4]
    ca28:	asrne	r1, r5, #31
    ca2c:	streq	r5, [r0, #4]
    ca30:	strne	r5, [r0, #8]
    ca34:	strne	r1, [r0, #12]
    ca38:	ldr	r0, [r6, #16]
    ca3c:	mov	r1, #4
    ca40:	str	r0, [sp, #44]	; 0x2c
    ca44:	str	r7, [r0, #4]
    ca48:	mov	r0, r5
    ca4c:	bl	4778 <calloc@plt>
    ca50:	ldr	r4, [sp, #48]	; 0x30
    ca54:	mov	r7, r0
    ca58:	cmp	r5, #1
    ca5c:	str	r0, [sp, #40]	; 0x28
    ca60:	blt	cb78 <sas7bdat_begin_data+0x694>
    ca64:	mov	r5, #0
    ca68:	mov	r0, r4
    ca6c:	mov	r1, r5
    ca70:	bl	4d48 <readstat_get_variable@plt>
    ca74:	ldr	r7, [fp, #-44]	; 0xffffffd4
    ca78:	mov	r4, r0
    ca7c:	mov	r0, #1
    ca80:	mov	r1, #20
    ca84:	ldr	r6, [r7, #4]
    ca88:	bl	4778 <calloc@plt>
    ca8c:	mov	sl, r0
    ca90:	movw	r0, #64510	; 0xfbfe
    ca94:	cmp	r6, #0
    ca98:	mov	r1, #64	; 0x40
    ca9c:	movt	r0, #65535	; 0xffff
    caa0:	movweq	r1, #52	; 0x34
    caa4:	str	r0, [sl]
    caa8:	mov	r0, #1
    caac:	str	r1, [sl, #8]
    cab0:	bl	4778 <calloc@plt>
    cab4:	mov	r9, r0
    cab8:	str	r0, [sl, #4]
    cabc:	mov	r0, r4
    cac0:	bl	48e0 <readstat_variable_get_format@plt>
    cac4:	mov	r6, r0
    cac8:	mov	r0, r4
    cacc:	bl	4dcc <readstat_variable_get_label@plt>
    cad0:	mov	r8, r0
    cad4:	ldr	r0, [r7, #4]
    cad8:	mov	r4, #40	; 0x28
    cadc:	mov	r7, #34	; 0x22
    cae0:	cmp	r0, #0
    cae4:	movwne	r4, #52	; 0x34
    cae8:	movwne	r7, #46	; 0x2e
    caec:	cmp	r6, #0
    caf0:	beq	cb20 <sas7bdat_begin_data+0x63c>
    caf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    caf8:	sub	r0, fp, #36	; 0x24
    cafc:	mov	r2, r6
    cb00:	bl	d484 <sas7bdat_make_text_ref>
    cb04:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    cb08:	mov	r1, r9
    cb0c:	strh	r0, [r1, r7]!
    cb10:	ldrh	r0, [fp, #-34]	; 0xffffffde
    cb14:	strh	r0, [r1, #2]
    cb18:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    cb1c:	strh	r0, [r1, #4]
    cb20:	cmp	r8, #0
    cb24:	beq	cb5c <sas7bdat_begin_data+0x678>
    cb28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cb2c:	sub	r0, fp, #36	; 0x24
    cb30:	mov	r2, r8
    cb34:	bl	d484 <sas7bdat_make_text_ref>
    cb38:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    cb3c:	mov	r1, r9
    cb40:	strh	r0, [r1, r4]!
    cb44:	ldrh	r2, [fp, #-34]	; 0xffffffde
    cb48:	orr	r0, r4, #2
    cb4c:	add	r0, r9, r0
    cb50:	strh	r2, [r0]
    cb54:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    cb58:	strh	r0, [r1, #4]
    cb5c:	ldr	r7, [sp, #40]	; 0x28
    cb60:	ldr	r4, [sp, #48]	; 0x30
    cb64:	str	sl, [r7, r5, lsl #2]
    cb68:	add	r5, r5, #1
    cb6c:	ldr	r0, [r4, #28]
    cb70:	cmp	r5, r0
    cb74:	blt	ca68 <sas7bdat_begin_data+0x584>
    cb78:	ldr	r5, [fp, #-40]	; 0xffffffd8
    cb7c:	ldr	r9, [sp, #28]
    cb80:	ldr	sl, [r5]
    cb84:	ldrd	r0, [r9]
    cb88:	ldr	r8, [r5, #4]
    cb8c:	adds	r6, r0, sl
    cb90:	adc	r0, r1, r8
    cb94:	str	r6, [r9]
    cb98:	lsl	r1, r6, #2
    cb9c:	str	r0, [sp, #12]
    cba0:	str	r0, [r9, #4]
    cba4:	ldr	r0, [sp, #44]	; 0x2c
    cba8:	bl	49dc <realloc@plt>
    cbac:	ldr	r1, [r5, #8]
    cbb0:	str	r0, [r9, #16]
    cbb4:	str	r6, [sp, #16]
    cbb8:	str	r1, [sp, #44]	; 0x2c
    cbbc:	subs	r1, sl, #1
    cbc0:	sbcs	r1, r8, #0
    cbc4:	blt	cce0 <sas7bdat_begin_data+0x7fc>
    cbc8:	mov	r5, r8
    cbcc:	str	r0, [sp, #4]
    cbd0:	add	r0, r0, #8
    cbd4:	mov	r8, #0
    cbd8:	str	r0, [sp, #32]
    cbdc:	str	r5, [sp, #36]	; 0x24
    cbe0:	ldr	r0, [sp, #44]	; 0x2c
    cbe4:	mov	r7, #8
    cbe8:	mov	r6, #0
    cbec:	mov	r1, #20
    cbf0:	ldr	r9, [r0, r8, lsl #2]
    cbf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    cbf8:	ldr	r4, [r0, #4]
    cbfc:	mov	r0, #1
    cc00:	cmp	r4, #0
    cc04:	movweq	r7, #4
    cc08:	cmp	r9, #0
    cc0c:	ldrne	r6, [r9, #8]
    cc10:	bl	4778 <calloc@plt>
    cc14:	mov	r5, r0
    cc18:	mvn	r0, #2
    cc1c:	cmp	r4, #0
    cc20:	str	r0, [r5]
    cc24:	mov	r0, #36	; 0x24
    cc28:	movweq	r0, #32
    cc2c:	add	r4, r6, r0
    cc30:	mov	r0, #1
    cc34:	mov	r1, r4
    cc38:	str	r4, [r5, #8]
    cc3c:	bl	4778 <calloc@plt>
    cc40:	mov	r6, r0
    cc44:	str	r0, [r5, #4]
    cc48:	mov	r0, r4
    cc4c:	mov	r1, r7
    cc50:	bl	4d84 <sas_subheader_remainder@plt>
    cc54:	strh	r0, [r6, r7]!
    cc58:	movw	r0, #8224	; 0x2020
    cc5c:	movt	r0, #8224	; 0x2020
    cc60:	str	r0, [r6, #16]
    cc64:	str	r0, [r6, #12]
    cc68:	add	r0, r6, #28
    cc6c:	ldr	r1, [r9]
    cc70:	ldr	r2, [r9, #8]
    cc74:	bl	4910 <memcpy@plt>
    cc78:	ldr	r0, [sp, #32]
    cc7c:	str	r5, [r0, r8, lsl #2]
    cc80:	ldr	r5, [sp, #36]	; 0x24
    cc84:	add	r8, r8, #1
    cc88:	subs	r0, r8, sl
    cc8c:	rscs	r0, r5, #0
    cc90:	blt	cbe0 <sas7bdat_begin_data+0x6fc>
    cc94:	add	r0, r8, #2
    cc98:	ldr	r8, [sp, #44]	; 0x2c
    cc9c:	mov	r6, #0
    cca0:	str	r0, [fp, #-44]	; 0xffffffd4
    cca4:	ldr	r4, [r8, r6, lsl #2]
    cca8:	ldr	r0, [r4]
    ccac:	bl	48bc <free@plt>
    ccb0:	mov	r0, r4
    ccb4:	bl	48bc <free@plt>
    ccb8:	add	r6, r6, #1
    ccbc:	subs	r0, r6, sl
    ccc0:	rscs	r0, r5, #0
    ccc4:	blt	cca4 <sas7bdat_begin_data+0x7c0>
    ccc8:	ldr	r4, [sp, #48]	; 0x30
    cccc:	ldr	r9, [sp, #28]
    ccd0:	ldr	r7, [sp, #40]	; 0x28
    ccd4:	ldr	r6, [fp, #-44]	; 0xffffffd4
    ccd8:	ldmib	sp, {r5, sl}
    ccdc:	b	ccf0 <sas7bdat_begin_data+0x80c>
    cce0:	ldr	sl, [sp, #8]
    cce4:	ldr	r8, [sp, #44]	; 0x2c
    cce8:	mov	r6, #2
    ccec:	mov	r5, r0
    ccf0:	mov	r0, r8
    ccf4:	bl	48bc <free@plt>
    ccf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ccfc:	bl	48bc <free@plt>
    cd00:	mov	r0, r5
    cd04:	str	sl, [r0, r6, lsl #2]!
    cd08:	ldr	r1, [sp, #20]
    cd0c:	str	r1, [r0, #4]
    cd10:	ldr	r1, [r4, #28]
    cd14:	cmp	r1, #1
    cd18:	blt	cd30 <sas7bdat_begin_data+0x84c>
    cd1c:	add	r0, r5, r6, lsl #2
    cd20:	lsl	r2, r1, #2
    cd24:	mov	r1, r7
    cd28:	add	r0, r0, #8
    cd2c:	bl	4910 <memcpy@plt>
    cd30:	mov	r0, r7
    cd34:	bl	48bc <free@plt>
    cd38:	ldr	r2, [sp, #16]
    cd3c:	ldr	r3, [sp, #12]
    cd40:	mov	r0, r9
    cd44:	str	r2, [r0, #8]!
    cd48:	str	r3, [r0, #4]
    cd4c:	ldr	r1, [r4, #16]
    cd50:	cmp	r1, #1
    cd54:	bne	cd7c <sas7bdat_begin_data+0x898>
    cd58:	ldr	r1, [r4, #80]	; 0x50
    cd5c:	adds	r2, r2, r1
    cd60:	adc	r3, r3, r1, asr #31
    cd64:	lsl	r1, r2, #2
    cd68:	strd	r2, [r0]
    cd6c:	mov	r0, r5
    cd70:	bl	49dc <realloc@plt>
    cd74:	str	r0, [r9, #16]
    cd78:	ldr	r1, [r4, #16]
    cd7c:	ldr	r0, [sp, #24]
    cd80:	mov	r5, #0
    cd84:	cmp	r1, #0
    cd88:	str	r9, [r0, #4]
    cd8c:	str	r0, [r4, #300]	; 0x12c
    cd90:	bne	cdc4 <sas7bdat_begin_data+0x8e0>
    cd94:	mov	r0, r4
    cd98:	bl	cef8 <sas7bdat_emit_header_and_meta_pages>
    cd9c:	cmp	r0, #0
    cda0:	beq	cdc4 <sas7bdat_begin_data+0x8e0>
    cda4:	mov	r6, r0
    cda8:	ldr	r0, [r4, #300]	; 0x12c
    cdac:	cmp	r0, #0
    cdb0:	beq	cdc0 <sas7bdat_begin_data+0x8dc>
    cdb4:	bl	d3b0 <sas7bdat_write_ctx_free>
    cdb8:	mov	r0, #0
    cdbc:	str	r0, [r4, #300]	; 0x12c
    cdc0:	mov	r5, r6
    cdc4:	mov	r0, r5
    cdc8:	sub	sp, fp, #28
    cdcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cdd0 <sas7bdat_end_data>:
    cdd0:	ldr	r1, [r0, #16]
    cdd4:	cmp	r1, #1
    cdd8:	bne	cde0 <sas7bdat_end_data+0x10>
    cddc:	b	cef8 <sas7bdat_emit_header_and_meta_pages>
    cde0:	ldr	r1, [r0, #300]	; 0x12c
    cde4:	ldr	r1, [r1]
    cde8:	b	4e44 <sas_fill_page@plt>

0000cdec <sas7bdat_module_ctx_free>:
    cdec:	b	d3b0 <sas7bdat_write_ctx_free>

0000cdf0 <sas7bdat_write_row>:
    cdf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cdf4:	add	fp, sp, #28
    cdf8:	sub	sp, sp, #4
    cdfc:	mov	r7, r1
    ce00:	ldr	r1, [r0, #16]
    ce04:	ldr	r8, [r0, #300]	; 0x12c
    ce08:	mov	r6, r2
    ce0c:	mov	r9, #0
    ce10:	cmp	r1, #1
    ce14:	beq	ce38 <sas7bdat_write_row+0x48>
    ce18:	cmp	r1, #0
    ce1c:	bne	ceec <sas7bdat_write_row+0xfc>
    ce20:	mov	r1, r8
    ce24:	mov	r2, r7
    ce28:	mov	r3, r6
    ce2c:	sub	sp, fp, #28
    ce30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce34:	b	d5b8 <sas7bdat_write_row_uncompressed>
    ce38:	mov	r0, r7
    ce3c:	mov	r1, r6
    ce40:	bl	4e50 <sas_rle_compressed_len@plt>
    ce44:	mov	r4, r0
    ce48:	mov	r0, #1
    ce4c:	mov	r1, #20
    ce50:	mov	sl, #1
    ce54:	bl	4778 <calloc@plt>
    ce58:	mov	r5, r0
    ce5c:	cmp	r4, r6
    ce60:	bcs	cea8 <sas7bdat_write_row+0xb8>
    ce64:	mov	r0, #1
    ce68:	mov	r1, r4
    ce6c:	str	r4, [r5, #8]
    ce70:	bl	4778 <calloc@plt>
    ce74:	mov	r1, r4
    ce78:	mov	r2, r7
    ce7c:	mov	r3, r6
    ce80:	str	sl, [r5, #12]
    ce84:	str	sl, [r5, #16]
    ce88:	str	r0, [r5, #4]
    ce8c:	bl	4e98 <sas_rle_compress@plt>
    ce90:	cmp	r0, r4
    ce94:	beq	cecc <sas7bdat_write_row+0xdc>
    ce98:	mov	r0, r5
    ce9c:	bl	d588 <sas7bdat_subheader_free>
    cea0:	mov	r9, #10
    cea4:	b	ceec <sas7bdat_write_row+0xfc>
    cea8:	mov	r0, #1
    ceac:	mov	r1, r6
    ceb0:	str	r6, [r5, #8]
    ceb4:	bl	4778 <calloc@plt>
    ceb8:	mov	r1, r7
    cebc:	mov	r2, r6
    cec0:	str	sl, [r5, #12]
    cec4:	str	r0, [r5, #4]
    cec8:	bl	4910 <memcpy@plt>
    cecc:	ldr	r0, [r8, #4]
    ced0:	ldrd	r2, [r0]
    ced4:	ldr	r1, [r0, #16]
    ced8:	adds	r4, r2, #1
    cedc:	adc	r3, r3, #0
    cee0:	str	r4, [r0]
    cee4:	str	r3, [r0, #4]
    cee8:	str	r5, [r1, r2, lsl #2]
    ceec:	mov	r0, r9
    cef0:	sub	sp, fp, #28
    cef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cef8 <sas7bdat_emit_header_and_meta_pages>:
    cef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cefc:	add	fp, sp, #28
    cf00:	sub	sp, sp, #356	; 0x164
    cf04:	ldr	r8, [r0, #300]	; 0x12c
    cf08:	mov	r5, r0
    cf0c:	bl	d418 <sas7bdat_row_length>
    cf10:	cmp	r0, #0
    cf14:	beq	cfbc <sas7bdat_emit_header_and_meta_pages+0xc4>
    cf18:	ldr	r0, [r5, #16]
    cf1c:	cmp	r0, #0
    cf20:	bne	cf54 <sas7bdat_emit_header_and_meta_pages+0x5c>
    cf24:	ldr	r4, [r8]
    cf28:	mov	r0, r5
    cf2c:	bl	d418 <sas7bdat_row_length>
    cf30:	add	r7, r4, #32
    cf34:	mov	r2, r0
    cf38:	ldm	r7, {r0, r1, r3, r7}
    cf3c:	subs	r0, r0, r3
    cf40:	mov	r3, #0
    cf44:	sbc	r1, r1, r7
    cf48:	bl	235c4 <__aeabi_ldivmod>
    cf4c:	cmp	r0, #0
    cf50:	beq	d384 <sas7bdat_emit_header_and_meta_pages+0x48c>
    cf54:	ldr	r1, [r5, #300]	; 0x12c
    cf58:	add	sl, sp, #184	; 0xb8
    cf5c:	ldr	r2, [r1, #4]
    cf60:	ldr	r0, [r2]
    cf64:	subs	r3, r0, #1
    cf68:	bmi	cfc4 <sas7bdat_emit_header_and_meta_pages+0xcc>
    cf6c:	ldr	r1, [r1]
    cf70:	ldr	r2, [r2, #16]
    cf74:	mov	r4, #1
    cf78:	ldr	r3, [r1, #32]
    cf7c:	ldr	r7, [r1, #40]	; 0x28
    cf80:	ldr	r1, [r1, #48]	; 0x30
    cf84:	sub	r7, r3, r7
    cf88:	sub	r3, r2, #4
    cf8c:	mov	r2, r7
    cf90:	ldr	r6, [r3, r0, lsl #2]
    cf94:	sub	r0, r0, #1
    cf98:	ldr	r6, [r6, #8]
    cf9c:	add	r6, r6, r1
    cfa0:	cmp	r6, r2
    cfa4:	movhi	r2, r7
    cfa8:	addhi	r4, r4, #1
    cfac:	cmp	r0, #0
    cfb0:	sub	r2, r2, r6
    cfb4:	bgt	cf90 <sas7bdat_emit_header_and_meta_pages+0x98>
    cfb8:	b	cfc8 <sas7bdat_emit_header_and_meta_pages+0xd0>
    cfbc:	mov	r6, #36	; 0x24
    cfc0:	b	d3a0 <sas7bdat_emit_header_and_meta_pages+0x4a8>
    cfc4:	mov	r4, #1
    cfc8:	ldr	r1, [r5, #16]
    cfcc:	ldr	r6, [r8]
    cfd0:	add	r7, sl, #84	; 0x54
    cfd4:	mov	r0, #0
    cfd8:	cmp	r1, #1
    cfdc:	beq	d024 <sas7bdat_emit_header_and_meta_pages+0x12c>
    cfe0:	mov	r0, r5
    cfe4:	add	r9, r6, #32
    cfe8:	add	r6, r6, #40	; 0x28
    cfec:	bl	d418 <sas7bdat_row_length>
    cff0:	mov	r2, r0
    cff4:	ldrd	r0, [r6]
    cff8:	ldr	r6, [r9]
    cffc:	ldr	r3, [r9, #4]
    d000:	subs	r0, r6, r0
    d004:	sbc	r1, r3, r1
    d008:	mov	r3, #0
    d00c:	bl	235c4 <__aeabi_ldivmod>
    d010:	ldr	r1, [r5, #80]	; 0x50
    d014:	ldr	r6, [r8]
    d018:	add	r1, r0, r1
    d01c:	sub	r1, r1, #1
    d020:	sdiv	r0, r1, r0
    d024:	add	r0, r0, r4
    d028:	mov	r2, #156	; 0x9c
    d02c:	asr	r1, r0, #31
    d030:	strd	r0, [r6, #56]	; 0x38
    d034:	mov	r0, sl
    d038:	mov	r1, #0
    d03c:	bl	4c70 <memset@plt>
    d040:	ldr	r0, [r6, #4]
    d044:	mov	r1, #34	; 0x22
    d048:	strb	r1, [sp, #219]	; 0xdb
    d04c:	mov	r1, #51	; 0x33
    d050:	cmp	r0, #0
    d054:	movweq	r1, #34	; 0x22
    d058:	strb	r1, [sp, #216]	; 0xd8
    d05c:	bl	48b0 <machine_is_little_endian@plt>
    d060:	cmp	r0, #0
    d064:	mov	r1, #20
    d068:	strb	r1, [sp, #254]	; 0xfe
    d06c:	mov	r1, #49	; 0x31
    d070:	movwne	r0, #1
    d074:	strb	r1, [sp, #223]	; 0xdf
    d078:	movw	r1, #16723	; 0x4153
    d07c:	strb	r0, [sp, #221]	; 0xdd
    d080:	movw	r0, #18758	; 0x4946
    d084:	movt	r0, #17740	; 0x454c
    d088:	movt	r1, #8275	; 0x2053
    d08c:	str	r1, [r7]
    d090:	movw	r1, #16708	; 0x4144
    d094:	str	r0, [r7, #4]
    d098:	movw	r0, #32288	; 0x7e20
    d09c:	movt	r0, #32288	; 0x7e20
    d0a0:	movt	r1, #16724	; 0x4154
    d0a4:	str	r1, [r7, #72]	; 0x48
    d0a8:	str	r0, [r7, #76]	; 0x4c
    d0ac:	mov	r1, sp
    d0b0:	ldr	r0, [pc, #756]	; d3ac <sas7bdat_emit_header_and_meta_pages+0x4b4>
    d0b4:	ldr	r0, [pc, r0]
    d0b8:	vld1.8	{d16-d17}, [r0]!
    d0bc:	vld1.8	{d18-d19}, [r0]
    d0c0:	add	r0, sl, #16
    d0c4:	vst1.64	{d18-d19}, [r0]
    d0c8:	mov	r0, #8
    d0cc:	vst1.64	{d16-d17}, [sl], r0
    d0d0:	movw	r0, #156	; 0x9c
    d0d4:	ldr	r2, [sl], #4
    d0d8:	subs	r0, r0, #4
    d0dc:	str	r2, [r1], #4
    d0e0:	bne	d0d4 <sas7bdat_emit_header_and_meta_pages+0x1dc>
    d0e4:	ldr	r2, [sp, #184]	; 0xb8
    d0e8:	ldr	r3, [sp, #188]	; 0xbc
    d0ec:	mov	r0, r5
    d0f0:	mov	r1, r6
    d0f4:	bl	4a9c <sas_write_header@plt>
    d0f8:	mov	r6, r0
    d0fc:	cmp	r0, #0
    d100:	bne	d3a0 <sas7bdat_emit_header_and_meta_pages+0x4a8>
    d104:	ldr	r0, [r5, #300]	; 0x12c
    d108:	ldm	r0, {r1, r7}
    d10c:	mov	r2, r1
    d110:	str	r1, [sp, #176]	; 0xb0
    d114:	ldr	r0, [r2, #32]!
    d118:	str	r2, [sp, #168]	; 0xa8
    d11c:	add	r2, r1, #40	; 0x28
    d120:	add	r1, r1, #48	; 0x30
    d124:	str	r2, [sp, #164]	; 0xa4
    d128:	str	r1, [sp, #160]	; 0xa0
    d12c:	bl	4ae4 <malloc@plt>
    d130:	mov	r8, #0
    d134:	mov	r9, #0
    d138:	str	r0, [sp, #180]	; 0xb4
    d13c:	str	r5, [sp, #156]	; 0x9c
    d140:	ldrd	r0, [r7]
    d144:	subs	r0, r8, r0
    d148:	sbcs	r0, r9, r1
    d14c:	bge	d38c <sas7bdat_emit_header_and_meta_pages+0x494>
    d150:	ldr	r5, [sp, #168]	; 0xa8
    d154:	ldr	r4, [sp, #180]	; 0xb4
    d158:	mov	r1, #0
    d15c:	ldr	r2, [r5]
    d160:	mov	r0, r4
    d164:	bl	4c70 <memset@plt>
    d168:	ldr	r0, [sp, #164]	; 0xa4
    d16c:	ldr	r5, [r5]
    d170:	ldr	r1, [r0]
    d174:	ldr	r0, [sp, #160]	; 0xa0
    d178:	ldr	r6, [r0]
    d17c:	add	sl, r1, r4
    d180:	mov	r0, #0
    d184:	sub	r3, r5, r1
    d188:	strh	r0, [sl, #-8]
    d18c:	ldr	r0, [r7, #16]
    d190:	str	r6, [sp, #172]	; 0xac
    d194:	ldr	r0, [r0, r8, lsl #2]
    d198:	ldr	r2, [r0, #8]
    d19c:	add	r6, r2, r6
    d1a0:	cmp	r6, r3
    d1a4:	bhi	d394 <sas7bdat_emit_header_and_meta_pages+0x49c>
    d1a8:	ldr	r4, [r7]
    d1ac:	ldr	r3, [r7, #4]
    d1b0:	mov	r6, #0
    d1b4:	subs	r4, r8, r4
    d1b8:	sbcs	r3, r9, r3
    d1bc:	bge	d330 <sas7bdat_emit_header_and_meta_pages+0x438>
    d1c0:	rsb	r4, r1, #0
    d1c4:	mov	r6, #0
    d1c8:	mov	lr, r7
    d1cc:	ldr	r7, [sp, #176]	; 0xb0
    d1d0:	ldr	r1, [r0]
    d1d4:	sub	r3, r5, r2
    d1d8:	ldr	r7, [r7, #4]
    d1dc:	cmp	r7, #0
    d1e0:	beq	d224 <sas7bdat_emit_header_and_meta_pages+0x32c>
    d1e4:	mov	r7, #0
    d1e8:	str	r2, [sl, #8]
    d1ec:	str	r7, [sl, #12]
    d1f0:	str	r7, [sl, #4]
    d1f4:	str	r3, [sl]
    d1f8:	ldr	r2, [r0, #12]
    d1fc:	cmp	r2, #0
    d200:	beq	d258 <sas7bdat_emit_header_and_meta_pages+0x360>
    d204:	ldr	r1, [r0, #16]
    d208:	mov	r2, #1
    d20c:	strb	r2, [sl, #17]
    d210:	cmp	r1, #0
    d214:	movwne	r1, #1
    d218:	lsl	r1, r1, #2
    d21c:	strb	r1, [sl, #16]
    d220:	b	d2d4 <sas7bdat_emit_header_and_meta_pages+0x3dc>
    d224:	str	r2, [sl, #4]
    d228:	str	r3, [sl]
    d22c:	ldr	r2, [r0, #12]
    d230:	cmp	r2, #0
    d234:	beq	d2a0 <sas7bdat_emit_header_and_meta_pages+0x3a8>
    d238:	ldr	r1, [r0, #16]
    d23c:	mov	r2, #1
    d240:	strb	r2, [sl, #9]
    d244:	cmp	r1, #0
    d248:	movwne	r1, #1
    d24c:	lsl	r1, r1, #2
    d250:	strb	r1, [sl, #8]
    d254:	b	d2d4 <sas7bdat_emit_header_and_meta_pages+0x3dc>
    d258:	ldr	ip, [r0]
    d25c:	add	r2, ip, #4
    d260:	cmp	r2, #3
    d264:	bhi	d274 <sas7bdat_emit_header_and_meta_pages+0x37c>
    d268:	mov	r3, #1
    d26c:	cmp	r2, #2
    d270:	bne	d280 <sas7bdat_emit_header_and_meta_pages+0x388>
    d274:	add	r2, ip, #2
    d278:	clz	r2, r2
    d27c:	lsr	r3, r2, #5
    d280:	strb	r3, [sl, #17]
    d284:	cmp	r1, #-16777216	; 0xff000000
    d288:	mov	r7, lr
    d28c:	ldr	r2, [r0, #4]
    d290:	asrcs	r3, r1, #31
    d294:	strcs	r3, [r2, #4]
    d298:	str	r1, [r2]
    d29c:	b	d2d8 <sas7bdat_emit_header_and_meta_pages+0x3e0>
    d2a0:	ldr	ip, [r0]
    d2a4:	add	r2, ip, #4
    d2a8:	cmp	r2, #3
    d2ac:	bhi	d2bc <sas7bdat_emit_header_and_meta_pages+0x3c4>
    d2b0:	mov	r3, #1
    d2b4:	cmp	r2, #2
    d2b8:	bne	d2c8 <sas7bdat_emit_header_and_meta_pages+0x3d0>
    d2bc:	add	r2, ip, #2
    d2c0:	clz	r2, r2
    d2c4:	lsr	r3, r2, #5
    d2c8:	strb	r3, [sl, #9]
    d2cc:	ldr	r2, [r0, #4]
    d2d0:	str	r1, [r2]
    d2d4:	mov	r7, lr
    d2d8:	ldmib	r0, {r1, r2}
    d2dc:	ldr	r0, [sp, #180]	; 0xb4
    d2e0:	sub	r5, r5, r2
    d2e4:	add	r0, r0, r5
    d2e8:	bl	4910 <memcpy@plt>
    d2ec:	ldrd	r0, [r7]
    d2f0:	adds	r8, r8, #1
    d2f4:	add	r6, r6, #1
    d2f8:	adc	r9, r9, #0
    d2fc:	subs	r0, r8, r0
    d300:	sbcs	r0, r9, r1
    d304:	bge	d330 <sas7bdat_emit_header_and_meta_pages+0x438>
    d308:	ldr	r0, [r7, #16]
    d30c:	ldr	r3, [sp, #172]	; 0xac
    d310:	ldr	r0, [r0, r8, lsl #2]
    d314:	sub	r4, r4, r3
    d318:	add	sl, sl, r3
    d31c:	add	r1, r4, r5
    d320:	ldr	r2, [r0, #8]
    d324:	add	r3, r2, r3
    d328:	cmp	r3, r1
    d32c:	bls	d1c8 <sas7bdat_emit_header_and_meta_pages+0x2d0>
    d330:	ldr	r0, [sp, #176]	; 0xb0
    d334:	ldr	r1, [sp, #180]	; 0xb4
    d338:	ldr	r5, [sp, #156]	; 0x9c
    d33c:	ldr	r0, [r0, #4]
    d340:	cmp	r0, #0
    d344:	mov	r0, #34	; 0x22
    d348:	movweq	r0, #18
    d34c:	add	r0, r1, r0
    d350:	strh	r6, [r0]
    d354:	mov	r0, #36	; 0x24
    d358:	movweq	r0, #20
    d35c:	add	r0, r1, r0
    d360:	strh	r6, [r0]
    d364:	ldr	r0, [sp, #168]	; 0xa8
    d368:	ldr	r2, [r0]
    d36c:	mov	r0, r5
    d370:	bl	4e20 <readstat_write_bytes@plt>
    d374:	cmp	r0, #0
    d378:	beq	d140 <sas7bdat_emit_header_and_meta_pages+0x248>
    d37c:	mov	r6, r0
    d380:	b	d398 <sas7bdat_emit_header_and_meta_pages+0x4a0>
    d384:	mov	r6, #35	; 0x23
    d388:	b	d3a0 <sas7bdat_emit_header_and_meta_pages+0x4a8>
    d38c:	mov	r6, #0
    d390:	b	d398 <sas7bdat_emit_header_and_meta_pages+0x4a0>
    d394:	mov	r6, #35	; 0x23
    d398:	ldr	r0, [sp, #180]	; 0xb4
    d39c:	bl	48bc <free@plt>
    d3a0:	mov	r0, r6
    d3a4:	sub	sp, fp, #28
    d3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d3ac:	.word	0x00037218

0000d3b0 <sas7bdat_write_ctx_free>:
    d3b0:	push	{r4, r5, r6, sl, fp, lr}
    d3b4:	add	fp, sp, #16
    d3b8:	mov	r4, r0
    d3bc:	ldr	r0, [r0]
    d3c0:	bl	48bc <free@plt>
    d3c4:	ldr	r5, [r4, #4]
    d3c8:	ldrd	r2, [r5]
    d3cc:	ldr	r0, [r5, #16]
    d3d0:	subs	r1, r2, #1
    d3d4:	sbcs	r1, r3, #0
    d3d8:	blt	d400 <sas7bdat_write_ctx_free+0x50>
    d3dc:	mov	r6, #0
    d3e0:	ldr	r0, [r0, r6, lsl #2]
    d3e4:	bl	d588 <sas7bdat_subheader_free>
    d3e8:	ldrd	r2, [r5]
    d3ec:	ldr	r0, [r5, #16]
    d3f0:	add	r6, r6, #1
    d3f4:	subs	r1, r6, r2
    d3f8:	rscs	r1, r3, #0
    d3fc:	blt	d3e0 <sas7bdat_write_ctx_free+0x30>
    d400:	bl	48bc <free@plt>
    d404:	mov	r0, r5
    d408:	bl	48bc <free@plt>
    d40c:	mov	r0, r4
    d410:	pop	{r4, r5, r6, sl, fp, lr}
    d414:	b	48bc <free@plt>

0000d418 <sas7bdat_row_length>:
    d418:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d41c:	add	fp, sp, #24
    d420:	mov	r8, r0
    d424:	ldr	r0, [r0, #28]
    d428:	cmp	r0, #1
    d42c:	blt	d478 <sas7bdat_row_length+0x60>
    d430:	mov	r6, #0
    d434:	mov	r5, #0
    d438:	mov	r0, r8
    d43c:	mov	r1, r6
    d440:	bl	4d48 <readstat_get_variable@plt>
    d444:	mov	r7, r0
    d448:	bl	4ba4 <readstat_variable_get_type@plt>
    d44c:	mov	r4, r0
    d450:	mov	r0, r7
    d454:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    d458:	cmp	r4, #0
    d45c:	add	r6, r6, #1
    d460:	movne	r0, #8
    d464:	add	r5, r0, r5
    d468:	ldr	r0, [r8, #28]
    d46c:	cmp	r6, r0
    d470:	blt	d438 <sas7bdat_row_length+0x20>
    d474:	b	d47c <sas7bdat_row_length+0x64>
    d478:	mov	r5, #0
    d47c:	mov	r0, r5
    d480:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000d484 <sas7bdat_make_text_ref>:
    d484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d488:	add	fp, sp, #28
    d48c:	sub	sp, sp, #12
    d490:	mov	r8, r0
    d494:	mov	r0, r2
    d498:	mov	sl, r2
    d49c:	mov	r4, r1
    d4a0:	bl	4bd4 <strlen@plt>
    d4a4:	mov	r9, r0
    d4a8:	ldr	r2, [r4]
    d4ac:	ldr	r0, [r4, #8]
    d4b0:	add	r6, r9, #3
    d4b4:	bic	r6, r6, #3
    d4b8:	add	r1, r0, r2, lsl #2
    d4bc:	ldr	r7, [r1, #-4]
    d4c0:	ldr	r1, [r7, #8]
    d4c4:	ldr	r3, [r7, #4]
    d4c8:	add	r5, r1, r6
    d4cc:	cmp	r5, r3
    d4d0:	bls	d54c <sas7bdat_make_text_ref+0xc8>
    d4d4:	ldr	r1, [r4, #4]
    d4d8:	adds	r2, r2, #1
    d4dc:	adc	r3, r1, #0
    d4e0:	lsl	r1, r2, #2
    d4e4:	strd	r2, [r4]
    d4e8:	bl	49dc <realloc@plt>
    d4ec:	str	sl, [sp, #8]
    d4f0:	str	r0, [r4, #8]
    d4f4:	mov	sl, r0
    d4f8:	mov	r1, #24
    d4fc:	ldrd	r4, [r4]
    d500:	subs	r0, r4, #1
    d504:	str	r0, [sp, #4]
    d508:	sbc	r0, r5, #0
    d50c:	ldr	r5, [r7, #4]
    d510:	str	r0, [sp]
    d514:	mov	r0, #1
    d518:	bl	4778 <calloc@plt>
    d51c:	mov	r7, r0
    d520:	mov	r0, r5
    d524:	bl	4ae4 <malloc@plt>
    d528:	ldr	r1, [sp, #4]
    d52c:	ldr	r2, [sp]
    d530:	str	r1, [r7, #16]
    d534:	str	r2, [r7, #20]
    d538:	stm	r7, {r0, r5}
    d53c:	add	r0, sl, r4, lsl #2
    d540:	ldr	sl, [sp, #8]
    d544:	mov	r1, #0
    d548:	str	r7, [r0, #-4]
    d54c:	ldrh	r0, [r7, #16]
    d550:	add	r2, r1, #28
    d554:	strh	r9, [r8, #4]
    d558:	strh	r2, [r8, #2]
    d55c:	mov	r2, r6
    d560:	strh	r0, [r8]
    d564:	ldr	r0, [r7]
    d568:	add	r0, r0, r1
    d56c:	mov	r1, sl
    d570:	bl	4c94 <strncpy@plt>
    d574:	ldr	r0, [r7, #8]
    d578:	add	r0, r0, r6
    d57c:	str	r0, [r7, #8]
    d580:	sub	sp, fp, #28
    d584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d588 <sas7bdat_subheader_free>:
    d588:	cmp	r0, #0
    d58c:	bxeq	lr
    d590:	push	{r4, sl, fp, lr}
    d594:	add	fp, sp, #8
    d598:	mov	r4, r0
    d59c:	ldr	r0, [r0, #4]
    d5a0:	cmp	r0, #0
    d5a4:	beq	d5ac <sas7bdat_subheader_free+0x24>
    d5a8:	bl	48bc <free@plt>
    d5ac:	mov	r0, r4
    d5b0:	pop	{r4, sl, fp, lr}
    d5b4:	b	48bc <free@plt>

0000d5b8 <sas7bdat_write_row_uncompressed>:
    d5b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d5bc:	add	fp, sp, #28
    d5c0:	sub	sp, sp, #12
    d5c4:	ldr	r5, [r1]
    d5c8:	mov	r8, r3
    d5cc:	mov	r9, r2
    d5d0:	mov	r4, r1
    d5d4:	mov	r6, r0
    d5d8:	bl	d418 <sas7bdat_row_length>
    d5dc:	mov	r2, r0
    d5e0:	ldr	r0, [r5, #40]!	; 0x28
    d5e4:	ldr	r1, [r5, #-8]
    d5e8:	ldr	r3, [r5, #-4]
    d5ec:	ldr	r7, [r5, #4]
    d5f0:	subs	r0, r1, r0
    d5f4:	sbc	r1, r3, r7
    d5f8:	mov	r3, #0
    d5fc:	bl	235c4 <__aeabi_ldivmod>
    d600:	mov	r7, r0
    d604:	ldr	r0, [r6, #84]	; 0x54
    d608:	sdiv	r1, r0, r7
    d60c:	mls	r0, r1, r7, r0
    d610:	cmp	r0, #0
    d614:	beq	d62c <sas7bdat_write_row_uncompressed+0x74>
    d618:	mov	r0, r6
    d61c:	mov	r1, r9
    d620:	mov	r2, r8
    d624:	bl	4e20 <readstat_write_bytes@plt>
    d628:	b	d6b8 <sas7bdat_write_row_uncompressed+0x100>
    d62c:	ldr	r1, [r4]
    d630:	mov	r0, r6
    d634:	bl	4e44 <sas_fill_page@plt>
    d638:	cmp	r0, #0
    d63c:	bne	d6b8 <sas7bdat_write_row_uncompressed+0x100>
    d640:	ldr	r0, [r6, #80]	; 0x50
    d644:	ldr	r2, [r5]
    d648:	ldr	sl, [r6, #84]	; 0x54
    d64c:	str	sp, [fp, #-36]	; 0xffffffdc
    d650:	str	r0, [fp, #-40]	; 0xffffffd8
    d654:	add	r0, r2, #7
    d658:	bic	r0, r0, #7
    d65c:	sub	r4, sp, r0
    d660:	mov	sp, r4
    d664:	mov	r0, r4
    d668:	mov	r1, #0
    d66c:	bl	4c70 <memset@plt>
    d670:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d674:	mov	r1, #256	; 0x100
    d678:	sub	r0, r0, sl
    d67c:	cmp	r0, r7
    d680:	movlt	r7, r0
    d684:	ldr	r0, [r5]
    d688:	add	r0, r0, r4
    d68c:	strh	r7, [r0, #-6]
    d690:	ldr	r0, [r5]
    d694:	add	r0, r0, r4
    d698:	strh	r1, [r0, #-8]
    d69c:	mov	r0, r6
    d6a0:	mov	r1, r4
    d6a4:	ldr	r2, [r5]
    d6a8:	bl	4e20 <readstat_write_bytes@plt>
    d6ac:	ldr	sp, [fp, #-36]	; 0xffffffdc
    d6b0:	cmp	r0, #0
    d6b4:	beq	d618 <sas7bdat_write_row_uncompressed+0x60>
    d6b8:	sub	sp, fp, #28
    d6bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d6c0 <sas_rle_decompressed_len>:
    d6c0:	mov	r3, r1
    d6c4:	mov	r2, r0
    d6c8:	mov	r0, #0
    d6cc:	mov	r1, #0
    d6d0:	b	d6d4 <sas_rle_decompress>

0000d6d4 <sas_rle_decompress>:
    d6d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6d8:	add	fp, sp, #28
    d6dc:	push	{r1}		; (str r1, [sp, #-4]!)
    d6e0:	cmp	r3, #1
    d6e4:	blt	d8b8 <sas_rle_decompress+0x1e4>
    d6e8:	ldr	r5, [pc, #468]	; d8c4 <sas_rle_decompress+0x1f0>
    d6ec:	add	r7, r2, r3
    d6f0:	mov	sl, r2
    d6f4:	mov	r8, r0
    d6f8:	mov	r3, #0
    d6fc:	add	r5, pc, r5
    d700:	mov	r6, sl
    d704:	ldrb	r1, [sl], #1
    d708:	lsr	r2, r1, #4
    d70c:	ldr	r0, [r5, r2, lsl #2]
    d710:	add	r4, sl, r0
    d714:	mvn	r0, #0
    d718:	cmp	r4, r7
    d71c:	bhi	d8bc <sas_rle_decompress+0x1e8>
    d720:	cmp	r2, #15
    d724:	bhi	d8a8 <sas_rle_decompress+0x1d4>
    d728:	add	r4, pc, #8
    d72c:	and	r1, r1, #15
    d730:	ldr	r2, [r4, r2, lsl #2]
    d734:	add	pc, r4, r2
    d738:	.word	0x00000040
    d73c:	.word	0x00000170
    d740:	.word	0x00000170
    d744:	.word	0x00000170
    d748:	.word	0x00000058
    d74c:	.word	0x00000074
    d750:	.word	0x0000008c
    d754:	.word	0x000000a4
    d758:	.word	0x000000bc
    d75c:	.word	0x000000c4
    d760:	.word	0x000000cc
    d764:	.word	0x000000d4
    d768:	.word	0x00000114
    d76c:	.word	0x00000124
    d770:	.word	0x00000130
    d774:	.word	0x0000013c
    d778:	mov	r2, #64	; 0x40
    d77c:	add	sl, r6, #2
    d780:	orr	r1, r2, r1, lsl #8
    d784:	ldrb	r2, [r6, #1]
    d788:	add	r2, r1, r2
    d78c:	b	d810 <sas_rle_decompress+0x13c>
    d790:	mov	r2, #18
    d794:	ldrb	r4, [r6, #1]
    d798:	add	sl, r6, #3
    d79c:	orr	r2, r2, r1, lsl #8
    d7a0:	ldrb	r1, [r6, #2]
    d7a4:	add	r2, r2, r4
    d7a8:	b	d87c <sas_rle_decompress+0x1a8>
    d7ac:	mov	r2, #17
    d7b0:	add	sl, r6, #2
    d7b4:	orr	r1, r2, r1, lsl #8
    d7b8:	ldrb	r2, [r6, #1]
    d7bc:	add	r2, r1, r2
    d7c0:	b	d860 <sas_rle_decompress+0x18c>
    d7c4:	mov	r2, #17
    d7c8:	add	sl, r6, #2
    d7cc:	orr	r1, r2, r1, lsl #8
    d7d0:	ldrb	r2, [r6, #1]
    d7d4:	add	r2, r1, r2
    d7d8:	b	d86c <sas_rle_decompress+0x198>
    d7dc:	mov	r2, #17
    d7e0:	add	sl, r6, #2
    d7e4:	orr	r1, r2, r1, lsl #8
    d7e8:	ldrb	r2, [r6, #1]
    d7ec:	add	r2, r1, r2
    d7f0:	b	d878 <sas_rle_decompress+0x1a4>
    d7f4:	add	r2, r1, #1
    d7f8:	b	d810 <sas_rle_decompress+0x13c>
    d7fc:	add	r2, r1, #17
    d800:	b	d810 <sas_rle_decompress+0x13c>
    d804:	add	r2, r1, #33	; 0x21
    d808:	b	d810 <sas_rle_decompress+0x13c>
    d80c:	add	r2, r1, #49	; 0x31
    d810:	ldr	r1, [sp]
    d814:	add	r6, r2, r3
    d818:	cmp	r6, r1
    d81c:	addls	r9, sl, r2
    d820:	cmpls	r9, r7
    d824:	bhi	d8bc <sas_rle_decompress+0x1e8>
    d828:	cmp	r8, #0
    d82c:	beq	d844 <sas_rle_decompress+0x170>
    d830:	add	r0, r8, r3
    d834:	mov	r1, sl
    d838:	bl	4910 <memcpy@plt>
    d83c:	ldr	r5, [pc, #132]	; d8c8 <sas_rle_decompress+0x1f4>
    d840:	add	r5, pc, r5
    d844:	mov	sl, r9
    d848:	b	d8a4 <sas_rle_decompress+0x1d0>
    d84c:	add	r2, r1, #3
    d850:	ldrb	r1, [r6, #1]
    d854:	add	sl, r6, #2
    d858:	b	d87c <sas_rle_decompress+0x1a8>
    d85c:	add	r2, r1, #2
    d860:	mov	r1, #64	; 0x40
    d864:	b	d87c <sas_rle_decompress+0x1a8>
    d868:	add	r2, r1, #2
    d86c:	mov	r1, #32
    d870:	b	d87c <sas_rle_decompress+0x1a8>
    d874:	add	r2, r1, #2
    d878:	mov	r1, #0
    d87c:	ldr	r4, [sp]
    d880:	add	r6, r2, r3
    d884:	cmp	r6, r4
    d888:	bhi	d8bc <sas_rle_decompress+0x1e8>
    d88c:	cmp	r8, #0
    d890:	beq	d8a4 <sas_rle_decompress+0x1d0>
    d894:	add	r0, r8, r3
    d898:	bl	4c70 <memset@plt>
    d89c:	ldr	r5, [pc, #40]	; d8cc <sas_rle_decompress+0x1f8>
    d8a0:	add	r5, pc, r5
    d8a4:	mov	r3, r6
    d8a8:	cmp	sl, r7
    d8ac:	mov	r0, r3
    d8b0:	bcc	d700 <sas_rle_decompress+0x2c>
    d8b4:	b	d8bc <sas_rle_decompress+0x1e8>
    d8b8:	mov	r0, #0
    d8bc:	sub	sp, fp, #28
    d8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8c4:	.word	0x00016cfc
    d8c8:	.word	0x00016bb8
    d8cc:	.word	0x00016b58

0000d8d0 <sas_rle_compressed_len>:
    d8d0:	mov	r2, r0
    d8d4:	mov	r0, #0
    d8d8:	mov	r3, r1
    d8dc:	b	d8e0 <sas_rle_compress>

0000d8e0 <sas_rle_compress>:
    d8e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d8e4:	add	fp, sp, #28
    d8e8:	sub	sp, sp, #4
    d8ec:	mov	r7, r2
    d8f0:	cmp	r3, #1
    d8f4:	str	r0, [sp]
    d8f8:	blt	d9f0 <sas_rle_compress+0x110>
    d8fc:	ldr	r8, [sp]
    d900:	add	sl, r7, r3
    d904:	mov	r6, #0
    d908:	movw	lr, #4111	; 0x100f
    d90c:	mov	r9, #0
    d910:	mov	r3, #0
    d914:	mov	r4, #0
    d918:	mov	r2, r7
    d91c:	mov	r0, r6
    d920:	ldrb	r6, [r7]
    d924:	cmp	r4, #0
    d928:	beq	d9c4 <sas_rle_compress+0xe4>
    d92c:	cmp	r4, lr
    d930:	bhi	d948 <sas_rle_compress+0x68>
    d934:	uxtb	r1, r0
    d938:	cmp	r6, r1
    d93c:	bne	d948 <sas_rle_compress+0x68>
    d940:	add	r4, r4, #1
    d944:	b	d9c8 <sas_rle_compress+0xe8>
    d948:	uxtb	r5, r0
    d94c:	cmp	r5, #64	; 0x40
    d950:	cmpne	r5, #32
    d954:	bne	d968 <sas_rle_compress+0x88>
    d958:	cmp	r4, #1
    d95c:	bhi	d990 <sas_rle_compress+0xb0>
    d960:	add	r3, r3, r4
    d964:	b	d9c4 <sas_rle_compress+0xe4>
    d968:	cmp	r4, #1
    d96c:	mov	ip, #0
    d970:	mov	r1, #0
    d974:	movwhi	ip, #1
    d978:	cmp	r4, #2
    d97c:	movwhi	r1, #1
    d980:	tst	r0, #255	; 0xff
    d984:	moveq	r1, ip
    d988:	cmp	r1, #1
    d98c:	bne	d960 <sas_rle_compress+0x80>
    d990:	mov	r0, r8
    d994:	mov	r1, r9
    d998:	bl	da78 <sas_rle_copy_run>
    d99c:	add	r9, r0, r9
    d9a0:	mov	r0, r8
    d9a4:	mov	r2, r5
    d9a8:	mov	r3, r4
    d9ac:	mov	r1, r9
    d9b0:	bl	db9c <sas_rle_insert_run>
    d9b4:	movw	lr, #4111	; 0x100f
    d9b8:	add	r9, r9, r0
    d9bc:	mov	r3, #0
    d9c0:	mov	r2, r7
    d9c4:	mov	r4, #1
    d9c8:	add	r7, r7, #1
    d9cc:	cmp	r7, sl
    d9d0:	bcc	d91c <sas_rle_compress+0x3c>
    d9d4:	cmp	r6, #0
    d9d8:	beq	da00 <sas_rle_compress+0x120>
    d9dc:	cmp	r6, #64	; 0x40
    d9e0:	cmpne	r6, #32
    d9e4:	bne	da18 <sas_rle_compress+0x138>
    d9e8:	mov	r0, #1
    d9ec:	b	da08 <sas_rle_compress+0x128>
    d9f0:	mov	r0, #0
    d9f4:	mov	r3, #0
    d9f8:	mov	r9, #0
    d9fc:	b	da58 <sas_rle_compress+0x178>
    da00:	mov	r0, #1
    da04:	mov	r6, #0
    da08:	cmp	r4, #1
    da0c:	bhi	da20 <sas_rle_compress+0x140>
    da10:	mov	r7, r2
    da14:	b	da58 <sas_rle_compress+0x178>
    da18:	cmp	r4, #3
    da1c:	bcc	da50 <sas_rle_compress+0x170>
    da20:	ldr	r7, [sp]
    da24:	mov	r1, r9
    da28:	mov	r0, r7
    da2c:	bl	da78 <sas_rle_copy_run>
    da30:	add	r5, r0, r9
    da34:	mov	r0, r7
    da38:	mov	r2, r6
    da3c:	mov	r3, r4
    da40:	mov	r1, r5
    da44:	bl	db9c <sas_rle_insert_run>
    da48:	add	r0, r5, r0
    da4c:	b	da70 <sas_rle_compress+0x190>
    da50:	mov	r7, r2
    da54:	mov	r0, r4
    da58:	add	r3, r3, r0
    da5c:	ldr	r0, [sp]
    da60:	mov	r1, r9
    da64:	mov	r2, r7
    da68:	bl	da78 <sas_rle_copy_run>
    da6c:	add	r0, r0, r9
    da70:	sub	sp, fp, #28
    da74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000da78 <sas_rle_copy_run>:
    da78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da7c:	add	fp, sp, #28
    da80:	sub	sp, sp, #4
    da84:	mov	r4, r3
    da88:	cmp	r0, #0
    da8c:	beq	db00 <sas_rle_copy_run+0x88>
    da90:	movw	r7, #4159	; 0x103f
    da94:	add	r6, r0, r1
    da98:	mov	r5, r2
    da9c:	cmp	r4, r7
    daa0:	str	r6, [sp]
    daa4:	bcc	dae0 <sas_rle_copy_run+0x68>
    daa8:	movw	r9, #4161	; 0x1041
    daac:	movw	sl, #65295	; 0xff0f
    dab0:	movw	r8, #4158	; 0x103e
    dab4:	mov	r0, r6
    dab8:	add	r0, r0, #2
    dabc:	mov	r1, r5
    dac0:	movw	r2, #4159	; 0x103f
    dac4:	strh	sl, [r6], r9
    dac8:	bl	4910 <memcpy@plt>
    dacc:	sub	r4, r4, r7
    dad0:	add	r5, r5, r7
    dad4:	mov	r0, r6
    dad8:	cmp	r4, r8
    dadc:	bhi	dab8 <sas_rle_copy_run+0x40>
    dae0:	cmp	r4, #65	; 0x41
    dae4:	bcc	db50 <sas_rle_copy_run+0xd8>
    dae8:	sub	r0, r4, #64	; 0x40
    daec:	strb	r0, [r6, #1]
    daf0:	ubfx	r0, r0, #8, #4
    daf4:	strb	r0, [r6]
    daf8:	add	r6, r6, #2
    dafc:	b	db6c <sas_rle_copy_run+0xf4>
    db00:	movw	r1, #4159	; 0x103f
    db04:	mov	r0, #0
    db08:	cmp	r4, r1
    db0c:	bcc	db38 <sas_rle_copy_run+0xc0>
    db10:	sub	r0, r4, r1
    db14:	movw	r1, #17633	; 0x44e1
    db18:	movt	r1, #64543	; 0xfc1f
    db1c:	umull	r1, r2, r0, r1
    db20:	lsr	r1, r2, #12
    db24:	movw	r2, #61377	; 0xefc1
    db28:	movt	r2, #65535	; 0xffff
    db2c:	mla	r4, r1, r2, r0
    db30:	movw	r0, #4161	; 0x1041
    db34:	mla	r0, r1, r0, r0
    db38:	add	r0, r0, r4
    db3c:	cmp	r4, #64	; 0x40
    db40:	addhi	r0, r0, #1
    db44:	cmp	r4, #0
    db48:	addne	r0, r0, #1
    db4c:	b	db88 <sas_rle_copy_run+0x110>
    db50:	cmp	r4, #49	; 0x31
    db54:	bcs	db64 <sas_rle_copy_run+0xec>
    db58:	cmp	r4, #33	; 0x21
    db5c:	cmpcc	r4, #17
    db60:	bcc	db90 <sas_rle_copy_run+0x118>
    db64:	add	r0, r4, #127	; 0x7f
    db68:	strb	r0, [r6], #1
    db6c:	mov	r0, r6
    db70:	mov	r1, r5
    db74:	mov	r2, r4
    db78:	bl	4910 <memcpy@plt>
    db7c:	ldr	r1, [sp]
    db80:	add	r0, r6, r4
    db84:	sub	r0, r0, r1
    db88:	sub	sp, fp, #28
    db8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db90:	cmp	r4, #0
    db94:	bne	db64 <sas_rle_copy_run+0xec>
    db98:	b	db6c <sas_rle_copy_run+0xf4>

0000db9c <sas_rle_insert_run>:
    db9c:	cmp	r0, #0
    dba0:	beq	dbe4 <sas_rle_insert_run+0x48>
    dba4:	cmp	r2, #0
    dba8:	add	r0, r0, r1
    dbac:	cmpne	r2, #64	; 0x40
    dbb0:	bne	dc30 <sas_rle_insert_run+0x94>
    dbb4:	cmp	r3, #18
    dbb8:	bcc	dc00 <sas_rle_insert_run+0x64>
    dbbc:	sub	r3, r3, #17
    dbc0:	cmp	r2, #0
    dbc4:	beq	dc88 <sas_rle_insert_run+0xec>
    dbc8:	cmp	r2, #64	; 0x40
    dbcc:	beq	dc90 <sas_rle_insert_run+0xf4>
    dbd0:	cmp	r2, #32
    dbd4:	mov	r1, r0
    dbd8:	bne	dca8 <sas_rle_insert_run+0x10c>
    dbdc:	mov	r1, #96	; 0x60
    dbe0:	b	dc94 <sas_rle_insert_run+0xf8>
    dbe4:	cmp	r2, #64	; 0x40
    dbe8:	cmpne	r2, #32
    dbec:	bne	dc64 <sas_rle_insert_run+0xc8>
    dbf0:	cmp	r3, #17
    dbf4:	mov	r0, #1
    dbf8:	movwhi	r0, #2
    dbfc:	bx	lr
    dc00:	cmp	r3, #2
    dc04:	mov	r1, r0
    dc08:	bcc	dce0 <sas_rle_insert_run+0x144>
    dc0c:	cmp	r2, #0
    dc10:	beq	dccc <sas_rle_insert_run+0x130>
    dc14:	cmp	r2, #32
    dc18:	beq	dcd4 <sas_rle_insert_run+0x138>
    dc1c:	cmp	r2, #64	; 0x40
    dc20:	mov	r1, r0
    dc24:	bne	dce0 <sas_rle_insert_run+0x144>
    dc28:	sub	r2, r3, #50	; 0x32
    dc2c:	b	dcd8 <sas_rle_insert_run+0x13c>
    dc30:	cmp	r2, #32
    dc34:	beq	dbb4 <sas_rle_insert_run+0x18>
    dc38:	cmp	r3, #19
    dc3c:	bcc	dcb0 <sas_rle_insert_run+0x114>
    dc40:	sub	r1, r3, #18
    dc44:	strb	r2, [r0, #2]
    dc48:	mov	r2, #4
    dc4c:	strb	r1, [r0, #1]
    dc50:	lsr	r1, r1, #8
    dc54:	bfi	r1, r2, #4, #28
    dc58:	strb	r1, [r0]
    dc5c:	add	r1, r0, #3
    dc60:	b	dce0 <sas_rle_insert_run+0x144>
    dc64:	cmp	r3, #17
    dc68:	mov	r1, #1
    dc6c:	mov	r0, #2
    dc70:	movwhi	r1, #2
    dc74:	cmp	r3, #18
    dc78:	movwhi	r0, #3
    dc7c:	cmp	r2, #0
    dc80:	moveq	r0, r1
    dc84:	bx	lr
    dc88:	mov	r1, #112	; 0x70
    dc8c:	b	dc94 <sas_rle_insert_run+0xf8>
    dc90:	mov	r1, #80	; 0x50
    dc94:	lsr	r2, r3, #8
    dc98:	and	r2, r2, #15
    dc9c:	orr	r2, r2, r1
    dca0:	mov	r1, r0
    dca4:	strb	r2, [r1], #1
    dca8:	strb	r3, [r1], #1
    dcac:	b	dce0 <sas_rle_insert_run+0x144>
    dcb0:	cmp	r3, #3
    dcb4:	mov	r1, r0
    dcb8:	subcs	r1, r3, #67	; 0x43
    dcbc:	strbcs	r2, [r0, #1]
    dcc0:	strbcs	r1, [r0]
    dcc4:	addcs	r1, r0, #2
    dcc8:	b	dce0 <sas_rle_insert_run+0x144>
    dccc:	sub	r2, r3, #18
    dcd0:	b	dcd8 <sas_rle_insert_run+0x13c>
    dcd4:	sub	r2, r3, #34	; 0x22
    dcd8:	mov	r1, r0
    dcdc:	strb	r2, [r1], #1
    dce0:	sub	r0, r1, r0
    dce4:	bx	lr

0000dce8 <xport_namestr_bswap>:
    dce8:	push	{r4, sl, fp, lr}
    dcec:	add	fp, sp, #8
    dcf0:	mov	r4, r0
    dcf4:	bl	48b0 <machine_is_little_endian@plt>
    dcf8:	cmp	r0, #0
    dcfc:	popeq	{r4, sl, fp, pc}
    dd00:	ldrh	r0, [r4]
    dd04:	bl	48a4 <byteswap2@plt>
    dd08:	strh	r0, [r4]
    dd0c:	ldrh	r0, [r4, #2]
    dd10:	bl	48a4 <byteswap2@plt>
    dd14:	strh	r0, [r4, #2]
    dd18:	ldrh	r0, [r4, #4]
    dd1c:	bl	48a4 <byteswap2@plt>
    dd20:	strh	r0, [r4, #4]
    dd24:	ldrh	r0, [r4, #6]
    dd28:	bl	48a4 <byteswap2@plt>
    dd2c:	strh	r0, [r4, #6]
    dd30:	ldrh	r0, [r4, #64]	; 0x40
    dd34:	bl	48a4 <byteswap2@plt>
    dd38:	strh	r0, [r4, #64]	; 0x40
    dd3c:	ldrh	r0, [r4, #66]	; 0x42
    dd40:	bl	48a4 <byteswap2@plt>
    dd44:	strh	r0, [r4, #66]	; 0x42
    dd48:	ldrh	r0, [r4, #68]	; 0x44
    dd4c:	bl	48a4 <byteswap2@plt>
    dd50:	strh	r0, [r4, #68]	; 0x44
    dd54:	ldrh	r0, [r4, #80]	; 0x50
    dd58:	bl	48a4 <byteswap2@plt>
    dd5c:	strh	r0, [r4, #80]	; 0x50
    dd60:	ldrh	r0, [r4, #82]	; 0x52
    dd64:	bl	48a4 <byteswap2@plt>
    dd68:	strh	r0, [r4, #82]	; 0x52
    dd6c:	ldr	r0, [r4, #84]	; 0x54
    dd70:	bl	47b4 <byteswap4@plt>
    dd74:	str	r0, [r4, #84]	; 0x54
    dd78:	ldrh	r0, [r4, #120]	; 0x78
    dd7c:	bl	48a4 <byteswap2@plt>
    dd80:	strh	r0, [r4, #120]	; 0x78
    dd84:	pop	{r4, sl, fp, pc}

0000dd88 <readstat_parse_xport>:
    dd88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd8c:	add	fp, sp, #28
    dd90:	sub	sp, sp, #228	; 0xe4
    dd94:	ldr	r8, [r0, #32]
    dd98:	mov	r6, r1
    dd9c:	mov	r5, r0
    dda0:	mov	r0, #1
    dda4:	mov	r1, #384	; 0x180
    dda8:	mov	r7, r2
    ddac:	mov	sl, #1
    ddb0:	bl	4778 <calloc@plt>
    ddb4:	mov	r4, r0
    ddb8:	add	r0, r5, #16
    ddbc:	mov	r1, #48	; 0x30
    ddc0:	vld1.32	{d16-d17}, [r0]
    ddc4:	mov	r0, r5
    ddc8:	mov	r2, r4
    ddcc:	add	r5, r5, #36	; 0x24
    ddd0:	vld1.32	{d18-d19}, [r0], r1
    ddd4:	add	r1, r4, #16
    ddd8:	vst1.32	{d16-d17}, [r1]
    dddc:	mov	r1, #68	; 0x44
    dde0:	vst1.32	{d18-d19}, [r2], r1
    dde4:	ldm	r5, {r1, r3, r5}
    dde8:	str	r8, [r4, #52]	; 0x34
    ddec:	str	r7, [r4, #36]	; 0x24
    ddf0:	str	r1, [r4, #40]	; 0x28
    ddf4:	str	r3, [r4, #44]	; 0x2c
    ddf8:	str	r5, [r2]
    ddfc:	ldr	r0, [r0]
    de00:	cmp	r0, #1
    de04:	strge	r0, [r4, #72]	; 0x48
    de08:	mov	r0, r6
    de0c:	ldr	r2, [r8]
    de10:	ldr	r1, [r8, #20]
    de14:	blx	r2
    de18:	cmn	r0, #1
    de1c:	beq	debc <readstat_parse_xport+0x134>
    de20:	ldr	r3, [r8, #8]
    de24:	ldr	r2, [r8, #20]
    de28:	mov	r0, #0
    de2c:	mov	r1, #2
    de30:	blx	r3
    de34:	mov	sl, #15
    de38:	cmn	r0, #1
    de3c:	str	r0, [r4, #32]
    de40:	beq	debc <readstat_parse_xport+0x134>
    de44:	ldr	r3, [r8, #8]
    de48:	ldr	r2, [r8, #20]
    de4c:	mov	r0, #0
    de50:	mov	r1, #0
    de54:	blx	r3
    de58:	cmn	r0, #1
    de5c:	beq	debc <readstat_parse_xport+0x134>
    de60:	ldr	r6, [r4, #40]	; 0x28
    de64:	cmp	r6, #0
    de68:	beq	dea4 <readstat_parse_xport+0x11c>
    de6c:	ldr	r7, [r4, #44]	; 0x2c
    de70:	cmp	r7, #0
    de74:	beq	dea4 <readstat_parse_xport+0x11c>
    de78:	mov	r0, r6
    de7c:	mov	r1, r7
    de80:	bl	4808 <strcmp@plt>
    de84:	cmp	r0, #0
    de88:	beq	dea4 <readstat_parse_xport+0x11c>
    de8c:	mov	r0, r7
    de90:	mov	r1, r6
    de94:	bl	4b08 <iconv_open@plt>
    de98:	cmn	r0, #1
    de9c:	beq	e064 <readstat_parse_xport+0x2dc>
    dea0:	str	r0, [r4, #48]	; 0x30
    dea4:	add	r1, sp, #80	; 0x50
    dea8:	mov	r0, r4
    deac:	bl	e790 <xport_read_header_record>
    deb0:	cmp	r0, #0
    deb4:	beq	df34 <readstat_parse_xport+0x1ac>
    deb8:	mov	sl, r0
    debc:	ldr	r1, [r8, #4]
    dec0:	ldr	r0, [r8, #20]
    dec4:	blx	r1
    dec8:	ldr	r0, [r4, #376]	; 0x178
    decc:	cmp	r0, #0
    ded0:	beq	df10 <readstat_parse_xport+0x188>
    ded4:	ldr	r2, [r4, #64]	; 0x40
    ded8:	cmp	r2, #1
    dedc:	blt	df0c <readstat_parse_xport+0x184>
    dee0:	mov	r5, #0
    dee4:	ldr	r1, [r0, r5, lsl #2]
    dee8:	cmp	r1, #0
    deec:	beq	df00 <readstat_parse_xport+0x178>
    def0:	mov	r0, r1
    def4:	bl	48bc <free@plt>
    def8:	ldr	r2, [r4, #64]	; 0x40
    defc:	ldr	r0, [r4, #376]	; 0x178
    df00:	add	r5, r5, #1
    df04:	cmp	r5, r2
    df08:	blt	dee4 <readstat_parse_xport+0x15c>
    df0c:	bl	48bc <free@plt>
    df10:	ldr	r0, [r4, #48]	; 0x30
    df14:	cmp	r0, #0
    df18:	beq	df20 <readstat_parse_xport+0x198>
    df1c:	bl	47d8 <iconv_close@plt>
    df20:	mov	r0, r4
    df24:	bl	48bc <free@plt>
    df28:	mov	r0, sl
    df2c:	sub	sp, fp, #28
    df30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df34:	ldr	r1, [pc, #1968]	; e6ec <readstat_parse_xport+0x964>
    df38:	add	r0, sp, #80	; 0x50
    df3c:	mov	r2, #8
    df40:	mov	r5, #8
    df44:	add	r1, pc, r1
    df48:	bl	4bbc <bcmp@plt>
    df4c:	cmp	r0, #0
    df50:	beq	df7c <readstat_parse_xport+0x1f4>
    df54:	ldr	r1, [pc, #1948]	; e6f8 <readstat_parse_xport+0x970>
    df58:	add	r0, sp, #80	; 0x50
    df5c:	mov	r2, #6
    df60:	add	r1, pc, r1
    df64:	bl	4bbc <bcmp@plt>
    df68:	mov	r1, r0
    df6c:	mov	r0, #24
    df70:	cmp	r1, #0
    df74:	bne	deb8 <readstat_parse_xport+0x130>
    df78:	b	df80 <readstat_parse_xport+0x1f8>
    df7c:	mov	r5, #5
    df80:	str	r5, [r4, #380]	; 0x17c
    df84:	mov	r1, #1
    df88:	ldr	r0, [r4, #52]	; 0x34
    df8c:	ldr	r3, [r0, #8]
    df90:	ldr	r2, [r0, #20]
    df94:	mov	r0, #80	; 0x50
    df98:	blx	r3
    df9c:	cmn	r0, #1
    dfa0:	beq	debc <readstat_parse_xport+0x134>
    dfa4:	vmov.i32	q8, #0	; 0x00000000
    dfa8:	add	r5, sp, #32
    dfac:	add	r0, r5, #28
    dfb0:	mov	r1, r5
    dfb4:	vst1.32	{d16-d17}, [r0]
    dfb8:	add	r0, r5, #16
    dfbc:	vst1.64	{d16-d17}, [r0]
    dfc0:	mov	r0, #32
    dfc4:	vst1.64	{d16-d17}, [r1], r0
    dfc8:	mvn	r0, #0
    dfcc:	str	r0, [r1]
    dfd0:	ldr	r0, [r4, #52]	; 0x34
    dfd4:	mov	r1, #80	; 0x50
    dfd8:	ldr	r3, [r0, #12]
    dfdc:	ldr	r2, [r0, #20]
    dfe0:	add	r0, sp, #80	; 0x50
    dfe4:	blx	r3
    dfe8:	mov	sl, #2
    dfec:	cmp	r0, #80	; 0x50
    dff0:	blt	e090 <readstat_parse_xport+0x308>
    dff4:	mov	r7, #0
    dff8:	orr	r0, r5, #4
    dffc:	add	r1, r5, #8
    e000:	add	r2, r5, #20
    e004:	str	r5, [sp, #12]
    e008:	str	r2, [sp]
    e00c:	str	r0, [sp, #8]
    e010:	strb	r7, [sp, #160]	; 0xa0
    e014:	str	r1, [sp, #4]
    e018:	add	r2, r5, #12
    e01c:	add	r5, sp, #28
    e020:	add	r0, sp, #80	; 0x50
    e024:	ldr	r1, [pc, #1732]	; e6f0 <readstat_parse_xport+0x968>
    e028:	mov	r3, r5
    e02c:	add	r1, pc, r1
    e030:	bl	4c58 <__isoc99_sscanf@plt>
    e034:	ldr	r6, [pc, #1720]	; e6f4 <readstat_parse_xport+0x96c>
    e038:	ldr	r6, [pc, r6]
    e03c:	mov	r0, r5
    e040:	mov	r1, r6
    e044:	bl	4808 <strcmp@plt>
    e048:	cmp	r0, #0
    e04c:	beq	e06c <readstat_parse_xport+0x2e4>
    e050:	add	r7, r7, #1
    e054:	add	r6, r6, #4
    e058:	cmp	r7, #12
    e05c:	bne	e03c <readstat_parse_xport+0x2b4>
    e060:	b	e070 <readstat_parse_xport+0x2e8>
    e064:	mov	sl, #7
    e068:	b	debc <readstat_parse_xport+0x134>
    e06c:	str	r7, [sp, #48]	; 0x30
    e070:	ldr	r0, [sp, #52]	; 0x34
    e074:	cmp	r0, #59	; 0x3b
    e078:	addle	r0, r0, #100	; 0x64
    e07c:	strle	r0, [sp, #52]	; 0x34
    e080:	add	r0, sp, #32
    e084:	bl	4850 <mktime@plt>
    e088:	mov	sl, #0
    e08c:	str	r0, [r4, #56]	; 0x38
    e090:	cmp	sl, #0
    e094:	bne	debc <readstat_parse_xport+0x134>
    e098:	ldr	r1, [pc, #1628]	; e6fc <readstat_parse_xport+0x974>
    e09c:	ldr	r2, [pc, #1628]	; e700 <readstat_parse_xport+0x978>
    e0a0:	mov	r0, r4
    e0a4:	add	r1, pc, r1
    e0a8:	add	r2, pc, r2
    e0ac:	bl	e728 <xport_expect_header_record>
    e0b0:	mov	sl, r0
    e0b4:	cmp	r0, #0
    e0b8:	bne	debc <readstat_parse_xport+0x134>
    e0bc:	ldr	r1, [pc, #1600]	; e704 <readstat_parse_xport+0x97c>
    e0c0:	ldr	r2, [pc, #1600]	; e708 <readstat_parse_xport+0x980>
    e0c4:	mov	r0, r4
    e0c8:	add	r1, pc, r1
    e0cc:	add	r2, pc, r2
    e0d0:	bl	e728 <xport_expect_header_record>
    e0d4:	mov	sl, r0
    e0d8:	cmp	r0, #0
    e0dc:	bne	debc <readstat_parse_xport+0x134>
    e0e0:	ldr	r0, [r4, #52]	; 0x34
    e0e4:	add	r5, sp, #80	; 0x50
    e0e8:	mov	r1, #80	; 0x50
    e0ec:	ldr	r3, [r0, #12]
    e0f0:	ldr	r2, [r0, #20]
    e0f4:	mov	r0, r5
    e0f8:	blx	r3
    e0fc:	cmp	r0, #79	; 0x4f
    e100:	bgt	e10c <readstat_parse_xport+0x384>
    e104:	mov	sl, #2
    e108:	b	debc <readstat_parse_xport+0x134>
    e10c:	mov	r0, #0
    e110:	ldr	r1, [r4, #380]	; 0x17c
    e114:	add	r7, r4, #245	; 0xf5
    e118:	mov	r3, #32
    e11c:	add	r2, r5, #8
    e120:	strb	r0, [sp, #160]	; 0xa0
    e124:	ldr	r0, [r4, #48]	; 0x30
    e128:	cmp	r1, #5
    e12c:	mov	r1, #129	; 0x81
    e130:	str	r0, [sp]
    e134:	movweq	r3, #8
    e138:	mov	r0, r7
    e13c:	bl	4c04 <readstat_convert@plt>
    e140:	mov	sl, r0
    e144:	cmp	r0, #0
    e148:	bne	debc <readstat_parse_xport+0x134>
    e14c:	ldr	r0, [r4, #52]	; 0x34
    e150:	add	r9, sp, #80	; 0x50
    e154:	mov	r1, #80	; 0x50
    e158:	ldr	r3, [r0, #12]
    e15c:	ldr	r2, [r0, #20]
    e160:	mov	r0, r9
    e164:	blx	r3
    e168:	cmp	r0, #79	; 0x4f
    e16c:	ble	e104 <readstat_parse_xport+0x37c>
    e170:	mov	r0, #0
    e174:	add	r6, r4, #84	; 0x54
    e178:	add	r2, r9, #32
    e17c:	mov	r1, #161	; 0xa1
    e180:	mov	r3, #40	; 0x28
    e184:	strb	r0, [sp, #160]	; 0xa0
    e188:	ldr	r0, [r4, #48]	; 0x30
    e18c:	str	r0, [sp]
    e190:	mov	r0, r6
    e194:	bl	4c04 <readstat_convert@plt>
    e198:	mov	sl, r0
    e19c:	cmp	r0, #0
    e1a0:	bne	debc <readstat_parse_xport+0x134>
    e1a4:	add	r1, sp, #32
    e1a8:	mov	r0, r4
    e1ac:	bl	e790 <xport_read_header_record>
    e1b0:	mov	sl, r0
    e1b4:	cmp	r0, #0
    e1b8:	bne	debc <readstat_parse_xport+0x134>
    e1bc:	ldr	r0, [r4, #380]	; 0x17c
    e1c0:	cmp	r0, #8
    e1c4:	beq	e1e0 <readstat_parse_xport+0x458>
    e1c8:	cmp	r0, #5
    e1cc:	bne	e200 <readstat_parse_xport+0x478>
    e1d0:	ldr	r1, [pc, #1332]	; e70c <readstat_parse_xport+0x984>
    e1d4:	add	r0, sp, #32
    e1d8:	add	r1, pc, r1
    e1dc:	b	e1ec <readstat_parse_xport+0x464>
    e1e0:	ldr	r1, [pc, #1320]	; e710 <readstat_parse_xport+0x988>
    e1e4:	add	r0, sp, #32
    e1e8:	add	r1, pc, r1
    e1ec:	mov	r2, #8
    e1f0:	bl	4bbc <bcmp@plt>
    e1f4:	mov	sl, #5
    e1f8:	cmp	r0, #0
    e1fc:	bne	debc <readstat_parse_xport+0x134>
    e200:	ldr	r0, [sp, #48]	; 0x30
    e204:	mov	r1, #4
    e208:	str	r0, [r4, #64]	; 0x40
    e20c:	bl	49a0 <readstat_calloc@plt>
    e210:	cmp	r0, #0
    e214:	str	r0, [r4, #376]	; 0x178
    e218:	beq	e428 <readstat_parse_xport+0x6a0>
    e21c:	ldr	r2, [r4]
    e220:	cmp	r2, #0
    e224:	beq	e298 <readstat_parse_xport+0x510>
    e228:	mvn	r3, #0
    e22c:	add	r0, sp, #80	; 0x50
    e230:	str	r3, [sp, #84]	; 0x54
    e234:	str	r3, [sp, #80]	; 0x50
    e238:	ldr	r3, [r4, #64]	; 0x40
    e23c:	add	r1, r0, #8
    e240:	add	r0, r0, #24
    e244:	asr	r5, r3, #31
    e248:	stm	r1, {r3, r5}
    e24c:	ldr	r1, [r4, #56]	; 0x38
    e250:	str	r1, [sp, #100]	; 0x64
    e254:	str	r1, [sp, #96]	; 0x60
    e258:	ldr	r1, [r4, #380]	; 0x17c
    e25c:	asr	r3, r1, #31
    e260:	stm	r0, {r1, r3}
    e264:	ldr	r1, [r4, #36]	; 0x24
    e268:	mov	r0, #0
    e26c:	strb	r0, [sp, #132]	; 0x84
    e270:	str	r0, [sp, #128]	; 0x80
    e274:	str	r6, [sp, #124]	; 0x7c
    e278:	str	r7, [sp, #120]	; 0x78
    e27c:	str	r0, [sp, #116]	; 0x74
    e280:	str	r0, [sp, #112]	; 0x70
    e284:	add	r0, sp, #80	; 0x50
    e288:	blx	r2
    e28c:	mov	sl, #4
    e290:	cmp	r0, #0
    e294:	bne	debc <readstat_parse_xport+0x134>
    e298:	ldr	r0, [r4, #64]	; 0x40
    e29c:	cmp	r0, #1
    e2a0:	blt	e3e0 <readstat_parse_xport+0x658>
    e2a4:	add	r0, r9, #56	; 0x38
    e2a8:	add	r7, r9, #16
    e2ac:	mov	r5, #0
    e2b0:	str	r0, [sp, #24]
    e2b4:	add	r0, r9, #8
    e2b8:	str	r0, [sp, #20]
    e2bc:	add	r0, r9, #88	; 0x58
    e2c0:	str	r0, [sp, #16]
    e2c4:	ldr	r0, [r4, #52]	; 0x34
    e2c8:	mov	r1, #140	; 0x8c
    e2cc:	ldr	r3, [r0, #12]
    e2d0:	ldr	r2, [r0, #20]
    e2d4:	mov	r0, r9
    e2d8:	blx	r3
    e2dc:	cmp	r0, #140	; 0x8c
    e2e0:	bcc	e104 <readstat_parse_xport+0x37c>
    e2e4:	mov	r0, r9
    e2e8:	bl	4a78 <xport_namestr_bswap@plt>
    e2ec:	mov	r0, #1
    e2f0:	movw	r1, #2152	; 0x868
    e2f4:	bl	4778 <calloc@plt>
    e2f8:	mov	r6, r0
    e2fc:	ldrh	r0, [sp, #80]	; 0x50
    e300:	ldrh	r2, [sp, #148]	; 0x94
    e304:	ldrh	r1, [sp, #146]	; 0x92
    e308:	subs	r0, r0, #2
    e30c:	movwne	r0, #5
    e310:	cmp	r2, #0
    e314:	mov	r2, #3
    e318:	stm	r6, {r0, r5}
    e31c:	ldrh	r0, [sp, #84]	; 0x54
    e320:	movweq	r2, #1
    e324:	str	r0, [r6, #1596]	; 0x63c
    e328:	ldrh	r0, [sp, #144]	; 0x90
    e32c:	str	r2, [r6, #2132]	; 0x854
    e330:	ldr	r2, [r4, #380]	; 0x17c
    e334:	str	r0, [r6, #2136]	; 0x858
    e338:	str	r1, [r6, #2140]	; 0x85c
    e33c:	ldr	r1, [r4, #48]	; 0x30
    e340:	add	r0, r6, #8
    e344:	cmp	r2, #5
    e348:	bne	e360 <readstat_parse_xport+0x5d8>
    e34c:	ldr	r2, [sp, #20]
    e350:	str	r1, [sp]
    e354:	mov	r1, #300	; 0x12c
    e358:	mov	r3, #8
    e35c:	b	e370 <readstat_parse_xport+0x5e8>
    e360:	ldr	r2, [sp, #16]
    e364:	str	r1, [sp]
    e368:	mov	r1, #300	; 0x12c
    e36c:	mov	r3, #32
    e370:	bl	4c04 <readstat_convert@plt>
    e374:	mov	sl, r0
    e378:	cmp	r0, #0
    e37c:	bne	debc <readstat_parse_xport+0x134>
    e380:	ldr	r0, [r4, #48]	; 0x30
    e384:	mov	r1, #1024	; 0x400
    e388:	mov	r2, r7
    e38c:	mov	r3, #40	; 0x28
    e390:	str	r0, [sp]
    e394:	add	r0, r6, #564	; 0x234
    e398:	bl	4c04 <readstat_convert@plt>
    e39c:	cmp	r0, #0
    e3a0:	bne	deb8 <readstat_parse_xport+0x130>
    e3a4:	ldr	r0, [r6, #2140]	; 0x85c
    e3a8:	ldr	r3, [r6, #2136]	; 0x858
    e3ac:	ldr	r1, [sp, #24]
    e3b0:	mov	r2, #8
    e3b4:	str	r0, [sp]
    e3b8:	add	r0, r6, #308	; 0x134
    e3bc:	bl	e830 <xport_construct_format>
    e3c0:	cmp	r0, #0
    e3c4:	bne	deb8 <readstat_parse_xport+0x130>
    e3c8:	ldr	r0, [r4, #376]	; 0x178
    e3cc:	str	r6, [r0, r5, lsl #2]
    e3d0:	add	r5, r5, #1
    e3d4:	ldr	r0, [r4, #64]	; 0x40
    e3d8:	cmp	r5, r0
    e3dc:	blt	e2c4 <readstat_parse_xport+0x53c>
    e3e0:	mov	r0, r4
    e3e4:	bl	e920 <xport_skip_rest_of_record>
    e3e8:	mov	sl, r0
    e3ec:	cmp	r0, #0
    e3f0:	bne	debc <readstat_parse_xport+0x134>
    e3f4:	ldr	r0, [r4, #380]	; 0x17c
    e3f8:	cmp	r0, #5
    e3fc:	bne	e430 <readstat_parse_xport+0x6a8>
    e400:	ldr	r1, [pc, #780]	; e714 <readstat_parse_xport+0x98c>
    e404:	ldr	r2, [pc, #780]	; e718 <readstat_parse_xport+0x990>
    e408:	mov	r0, r4
    e40c:	add	r1, pc, r1
    e410:	add	r2, pc, r2
    e414:	bl	e728 <xport_expect_header_record>
    e418:	mov	sl, r0
    e41c:	cmp	r0, #0
    e420:	bne	debc <readstat_parse_xport+0x134>
    e424:	b	e49c <readstat_parse_xport+0x714>
    e428:	mov	sl, #3
    e42c:	b	debc <readstat_parse_xport+0x134>
    e430:	add	r1, sp, #80	; 0x50
    e434:	mov	r0, r4
    e438:	bl	e790 <xport_read_header_record>
    e43c:	mov	sl, r0
    e440:	cmp	r0, #0
    e444:	bne	debc <readstat_parse_xport+0x134>
    e448:	ldr	r1, [pc, #716]	; e71c <readstat_parse_xport+0x994>
    e44c:	add	r0, sp, #80	; 0x50
    e450:	mov	r2, #6
    e454:	add	r1, pc, r1
    e458:	bl	4bbc <bcmp@plt>
    e45c:	cmp	r0, #0
    e460:	beq	e49c <readstat_parse_xport+0x714>
    e464:	ldr	r1, [pc, #692]	; e720 <readstat_parse_xport+0x998>
    e468:	add	r0, sp, #80	; 0x50
    e46c:	mov	r2, #8
    e470:	add	r1, pc, r1
    e474:	bl	4bbc <bcmp@plt>
    e478:	cmp	r0, #0
    e47c:	beq	e58c <readstat_parse_xport+0x804>
    e480:	ldr	r1, [pc, #668]	; e724 <readstat_parse_xport+0x99c>
    e484:	add	r0, sp, #80	; 0x50
    e488:	mov	r2, #8
    e48c:	add	r1, pc, r1
    e490:	bl	4bbc <bcmp@plt>
    e494:	cmp	r0, #0
    e498:	beq	e59c <readstat_parse_xport+0x814>
    e49c:	mov	sl, #0
    e4a0:	str	sl, [r4, #76]	; 0x4c
    e4a4:	ldr	r0, [r4, #64]	; 0x40
    e4a8:	cmp	r0, #1
    e4ac:	blt	debc <readstat_parse_xport+0x134>
    e4b0:	mov	sl, #0
    e4b4:	mov	r9, #1
    e4b8:	mov	r5, #0
    e4bc:	ldr	r0, [r4, #376]	; 0x178
    e4c0:	ldr	r6, [r0, r5, lsl #2]
    e4c4:	str	sl, [r6, #2148]	; 0x864
    e4c8:	ldr	r7, [r4, #8]
    e4cc:	cmp	r7, #0
    e4d0:	beq	e4f8 <readstat_parse_xport+0x770>
    e4d4:	ldr	r3, [r4, #36]	; 0x24
    e4d8:	add	r2, r6, #308	; 0x134
    e4dc:	mov	r0, r5
    e4e0:	mov	r1, r6
    e4e4:	blx	r7
    e4e8:	cmp	r0, #2
    e4ec:	beq	e500 <readstat_parse_xport+0x778>
    e4f0:	cmp	r0, #1
    e4f4:	beq	e584 <readstat_parse_xport+0x7fc>
    e4f8:	add	sl, sl, #1
    e4fc:	b	e504 <readstat_parse_xport+0x77c>
    e500:	str	r9, [r6, #2144]	; 0x860
    e504:	ldr	r0, [r6, #1596]	; 0x63c
    e508:	ldr	r2, [r4, #76]	; 0x4c
    e50c:	ldr	r1, [r4, #64]	; 0x40
    e510:	add	r5, r5, #1
    e514:	add	r0, r2, r0
    e518:	cmp	r5, r1
    e51c:	str	r0, [r4, #76]	; 0x4c
    e520:	blt	e4bc <readstat_parse_xport+0x734>
    e524:	mov	sl, #0
    e528:	cmp	r0, #0
    e52c:	beq	debc <readstat_parse_xport+0x134>
    e530:	ldr	r1, [r4, #16]
    e534:	cmp	r1, #0
    e538:	beq	debc <readstat_parse_xport+0x134>
    e53c:	bl	4bf8 <readstat_malloc@plt>
    e540:	mov	r7, r0
    e544:	ldr	r0, [r4, #76]	; 0x4c
    e548:	bl	4bf8 <readstat_malloc@plt>
    e54c:	mov	r6, r0
    e550:	cmp	r7, #0
    e554:	mov	sl, #3
    e558:	cmpne	r6, #0
    e55c:	bne	e5ac <readstat_parse_xport+0x824>
    e560:	cmp	r7, #0
    e564:	beq	e570 <readstat_parse_xport+0x7e8>
    e568:	mov	r0, r7
    e56c:	bl	48bc <free@plt>
    e570:	cmp	r6, #0
    e574:	beq	debc <readstat_parse_xport+0x134>
    e578:	mov	r0, r6
    e57c:	bl	48bc <free@plt>
    e580:	b	debc <readstat_parse_xport+0x134>
    e584:	mov	sl, #4
    e588:	b	debc <readstat_parse_xport+0x134>
    e58c:	ldr	r1, [sp, #92]	; 0x5c
    e590:	mov	r0, r4
    e594:	bl	e99c <xport_read_labels_v8>
    e598:	b	e418 <readstat_parse_xport+0x690>
    e59c:	ldr	r1, [sp, #92]	; 0x5c
    e5a0:	mov	r0, r4
    e5a4:	bl	eb7c <xport_read_labels_v9>
    e5a8:	b	e418 <readstat_parse_xport+0x690>
    e5ac:	ldr	r2, [r4, #76]	; 0x4c
    e5b0:	mov	r0, r6
    e5b4:	mov	r1, #32
    e5b8:	bl	4c70 <memset@plt>
    e5bc:	ldr	r0, [r4, #52]	; 0x34
    e5c0:	ldr	r1, [r4, #76]	; 0x4c
    e5c4:	ldr	r3, [r0, #12]
    e5c8:	ldr	r2, [r0, #20]
    e5cc:	mov	r0, r7
    e5d0:	blx	r3
    e5d4:	cmn	r0, #1
    e5d8:	beq	e6d4 <readstat_parse_xport+0x94c>
    e5dc:	mov	sl, #0
    e5e0:	ldr	r1, [r4, #76]	; 0x4c
    e5e4:	cmp	r0, r1
    e5e8:	bcc	e6e4 <readstat_parse_xport+0x95c>
    e5ec:	cmp	r1, #0
    e5f0:	beq	e610 <readstat_parse_xport+0x888>
    e5f4:	mov	r0, #0
    e5f8:	ldrb	r2, [r7, r0]
    e5fc:	cmp	r2, #32
    e600:	bne	e638 <readstat_parse_xport+0x8b0>
    e604:	add	r0, r0, #1
    e608:	cmp	r1, r0
    e60c:	bne	e5f8 <readstat_parse_xport+0x870>
    e610:	add	sl, sl, #1
    e614:	ldr	r0, [r4, #52]	; 0x34
    e618:	ldr	r1, [r4, #76]	; 0x4c
    e61c:	ldr	r3, [r0, #12]
    e620:	ldr	r2, [r0, #20]
    e624:	mov	r0, r7
    e628:	blx	r3
    e62c:	cmn	r0, #1
    e630:	bne	e5e0 <readstat_parse_xport+0x858>
    e634:	b	e6d4 <readstat_parse_xport+0x94c>
    e638:	cmp	sl, #0
    e63c:	beq	e674 <readstat_parse_xport+0x8ec>
    e640:	mov	r0, r4
    e644:	mov	r1, r6
    e648:	bl	ee3c <xport_process_row>
    e64c:	cmp	r0, #0
    e650:	bne	e6dc <readstat_parse_xport+0x954>
    e654:	ldr	r0, [r4, #68]	; 0x44
    e658:	cmp	r0, #1
    e65c:	blt	e66c <readstat_parse_xport+0x8e4>
    e660:	ldr	r1, [r4, #80]	; 0x50
    e664:	cmp	r1, r0
    e668:	beq	e6e4 <readstat_parse_xport+0x95c>
    e66c:	subs	sl, sl, #1
    e670:	bne	e640 <readstat_parse_xport+0x8b8>
    e674:	mov	r0, r4
    e678:	mov	r1, r7
    e67c:	bl	ee3c <xport_process_row>
    e680:	cmp	r0, #0
    e684:	bne	e6dc <readstat_parse_xport+0x954>
    e688:	ldr	r3, [r4, #52]	; 0x34
    e68c:	ldr	r1, [r4, #28]
    e690:	ldr	r0, [r4, #32]
    e694:	ldr	r2, [r4, #36]	; 0x24
    e698:	ldr	r5, [r3, #16]
    e69c:	ldr	r3, [r3, #20]
    e6a0:	blx	r5
    e6a4:	cmp	r0, #0
    e6a8:	bne	e6dc <readstat_parse_xport+0x954>
    e6ac:	ldr	r0, [r4, #68]	; 0x44
    e6b0:	cmp	r0, #1
    e6b4:	blt	e6cc <readstat_parse_xport+0x944>
    e6b8:	ldr	r1, [r4, #80]	; 0x50
    e6bc:	mov	sl, #0
    e6c0:	cmp	r1, r0
    e6c4:	bne	e614 <readstat_parse_xport+0x88c>
    e6c8:	b	e560 <readstat_parse_xport+0x7d8>
    e6cc:	mov	sl, #0
    e6d0:	b	e614 <readstat_parse_xport+0x88c>
    e6d4:	mov	sl, #2
    e6d8:	b	e560 <readstat_parse_xport+0x7d8>
    e6dc:	mov	sl, r0
    e6e0:	b	e560 <readstat_parse_xport+0x7d8>
    e6e4:	mov	sl, #0
    e6e8:	b	e560 <readstat_parse_xport+0x7d8>
    e6ec:	.word	0x00016512
    e6f0:	.word	0x0001647d
    e6f4:	.word	0x00036278
    e6f8:	.word	0x000164fe
    e6fc:	.word	0x00016394
    e700:	.word	0x00016397
    e704:	.word	0x0001637e
    e708:	.word	0x00016382
    e70c:	.word	0x000162ec
    e710:	.word	0x000162e4
    e714:	.word	0x000160eb
    e718:	.word	0x000160c4
    e71c:	.word	0x00016080
    e720:	.word	0x0001606a
    e724:	.word	0x00016056

0000e728 <xport_expect_header_record>:
    e728:	push	{r4, r5, r6, sl, fp, lr}
    e72c:	add	fp, sp, #16
    e730:	sub	sp, sp, #40	; 0x28
    e734:	mov	r4, r1
    e738:	add	r1, sp, #4
    e73c:	mov	r5, r2
    e740:	mov	r6, r0
    e744:	bl	e790 <xport_read_header_record>
    e748:	cmp	r0, #0
    e74c:	bne	e788 <xport_expect_header_record+0x60>
    e750:	ldr	r1, [r6, #380]	; 0x17c
    e754:	cmp	r1, #8
    e758:	beq	e774 <xport_expect_header_record+0x4c>
    e75c:	mov	r0, #0
    e760:	cmp	r1, #5
    e764:	bne	e788 <xport_expect_header_record+0x60>
    e768:	add	r0, sp, #4
    e76c:	mov	r1, r4
    e770:	b	e77c <xport_expect_header_record+0x54>
    e774:	add	r0, sp, #4
    e778:	mov	r1, r5
    e77c:	bl	4808 <strcmp@plt>
    e780:	cmp	r0, #0
    e784:	movwne	r0, #5
    e788:	sub	sp, fp, #16
    e78c:	pop	{r4, r5, r6, sl, fp, pc}

0000e790 <xport_read_header_record>:
    e790:	push	{r4, r5, fp, lr}
    e794:	add	fp, sp, #8
    e798:	sub	sp, sp, #104	; 0x68
    e79c:	ldr	r0, [r0, #52]	; 0x34
    e7a0:	mov	r4, r1
    e7a4:	mov	r1, #80	; 0x50
    e7a8:	ldr	r3, [r0, #12]
    e7ac:	ldr	r2, [r0, #20]
    e7b0:	add	r0, sp, #23
    e7b4:	blx	r3
    e7b8:	mov	r5, #2
    e7bc:	cmp	r0, #80	; 0x50
    e7c0:	blt	e820 <xport_read_header_record+0x90>
    e7c4:	vmov.i32	q8, #0	; 0x00000000
    e7c8:	mov	r5, #0
    e7cc:	mov	r1, #28
    e7d0:	mov	r2, r4
    e7d4:	add	r0, r4, #16
    e7d8:	add	ip, r4, #24
    e7dc:	add	r3, r4, #20
    e7e0:	strb	r5, [sp, #103]	; 0x67
    e7e4:	vst1.32	{d16-d17}, [r2], r1
    e7e8:	mov	r1, r4
    e7ec:	vst1.32	{d16-d17}, [r0]
    e7f0:	str	r5, [r1, #32]!
    e7f4:	stm	sp, {r0, r3, ip}
    e7f8:	str	r2, [sp, #12]
    e7fc:	add	r3, r4, #12
    e800:	add	r0, sp, #23
    e804:	mov	r2, r4
    e808:	str	r1, [sp, #16]
    e80c:	ldr	r1, [pc, #24]	; e82c <xport_read_header_record+0x9c>
    e810:	add	r1, pc, r1
    e814:	bl	4c58 <__isoc99_sscanf@plt>
    e818:	cmp	r0, #2
    e81c:	movwlt	r5, #5
    e820:	mov	r0, r5
    e824:	sub	sp, fp, #8
    e828:	pop	{r4, r5, fp, pc}
    e82c:	.word	0x00015c54

0000e830 <xport_construct_format>:
    e830:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e834:	add	fp, sp, #24
    e838:	mov	r7, r3
    e83c:	mov	r3, r2
    e840:	mov	r5, r0
    e844:	mov	r0, #1
    e848:	mov	r2, r1
    e84c:	orr	r1, r0, r3, lsl #2
    e850:	add	r0, r1, #7
    e854:	bic	r0, r0, #4
    e858:	sub	r6, sp, r0
    e85c:	mov	sp, r6
    e860:	sub	sp, sp, #8
    e864:	mov	r0, #0
    e868:	str	r0, [sp]
    e86c:	mov	r0, r6
    e870:	bl	4c04 <readstat_convert@plt>
    e874:	add	sp, sp, #8
    e878:	mov	r4, r0
    e87c:	cmp	r0, #0
    e880:	bne	e8ec <xport_construct_format+0xbc>
    e884:	ldrb	r0, [r6]
    e888:	cmp	r0, #0
    e88c:	beq	e8b4 <xport_construct_format+0x84>
    e890:	ldr	r0, [fp, #8]
    e894:	cmp	r0, #0
    e898:	beq	e8c0 <xport_construct_format+0x90>
    e89c:	sub	sp, sp, #8
    e8a0:	str	r7, [sp]
    e8a4:	str	r0, [sp, #4]
    e8a8:	ldr	r2, [pc, #100]	; e914 <xport_construct_format+0xe4>
    e8ac:	add	r2, pc, r2
    e8b0:	b	e8d8 <xport_construct_format+0xa8>
    e8b4:	mov	r0, #0
    e8b8:	strb	r0, [r5]
    e8bc:	b	e8ec <xport_construct_format+0xbc>
    e8c0:	cmp	r7, #0
    e8c4:	beq	e8f8 <xport_construct_format+0xc8>
    e8c8:	sub	sp, sp, #8
    e8cc:	str	r7, [sp]
    e8d0:	ldr	r2, [pc, #64]	; e918 <xport_construct_format+0xe8>
    e8d4:	add	r2, pc, r2
    e8d8:	mov	r0, r5
    e8dc:	mov	r1, #256	; 0x100
    e8e0:	mov	r3, r6
    e8e4:	bl	4c4c <snprintf@plt>
    e8e8:	add	sp, sp, #8
    e8ec:	mov	r0, r4
    e8f0:	sub	sp, fp, #24
    e8f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e8f8:	ldr	r2, [pc, #28]	; e91c <xport_construct_format+0xec>
    e8fc:	mov	r0, r5
    e900:	mov	r1, #256	; 0x100
    e904:	mov	r3, r6
    e908:	add	r2, pc, r2
    e90c:	bl	4c4c <snprintf@plt>
    e910:	b	e8ec <xport_construct_format+0xbc>
    e914:	.word	0x00015c3e
    e918:	.word	0x00015c1e
    e91c:	.word	0x000167d4

0000e920 <xport_skip_rest_of_record>:
    e920:	push	{r4, r5, fp, lr}
    e924:	add	fp, sp, #8
    e928:	ldr	r5, [r0, #52]	; 0x34
    e92c:	mov	r0, #0
    e930:	mov	r1, #1
    e934:	ldr	r3, [r5, #8]
    e938:	ldr	r2, [r5, #20]
    e93c:	blx	r3
    e940:	mov	r4, #15
    e944:	cmn	r0, #1
    e948:	beq	e994 <xport_skip_rest_of_record+0x74>
    e94c:	movw	r1, #26215	; 0x6667
    e950:	movt	r1, #26214	; 0x6666
    e954:	smmul	r1, r0, r1
    e958:	asr	r2, r1, #5
    e95c:	add	r1, r2, r1, lsr #31
    e960:	add	r1, r1, r1, lsl #2
    e964:	sub	r0, r0, r1, lsl #4
    e968:	cmp	r0, #0
    e96c:	beq	e990 <xport_skip_rest_of_record+0x70>
    e970:	ldr	r3, [r5, #8]
    e974:	ldr	r2, [r5, #20]
    e978:	rsb	r0, r0, #80	; 0x50
    e97c:	mov	r1, #1
    e980:	blx	r3
    e984:	cmn	r0, #1
    e988:	movne	r4, #0
    e98c:	b	e994 <xport_skip_rest_of_record+0x74>
    e990:	mov	r4, #0
    e994:	mov	r0, r4
    e998:	pop	{r4, r5, fp, pc}

0000e99c <xport_read_labels_v8>:
    e99c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e9a0:	add	fp, sp, #28
    e9a4:	sub	sp, sp, #28
    e9a8:	mov	r6, r0
    e9ac:	cmp	r1, #1
    e9b0:	blt	eb24 <xport_read_labels_v8+0x188>
    e9b4:	mov	r7, r1
    e9b8:	ldr	r0, [r6, #52]	; 0x34
    e9bc:	mov	r1, #6
    e9c0:	ldr	r3, [r0, #12]
    e9c4:	ldr	r2, [r0, #20]
    e9c8:	sub	r0, fp, #38	; 0x26
    e9cc:	blx	r3
    e9d0:	cmp	r0, #6
    e9d4:	bne	eb64 <xport_read_labels_v8+0x1c8>
    e9d8:	bl	48b0 <machine_is_little_endian@plt>
    e9dc:	ldrh	r8, [fp, #-38]	; 0xffffffda
    e9e0:	cmp	r0, #0
    e9e4:	beq	ea10 <xport_read_labels_v8+0x74>
    e9e8:	mov	r0, r8
    e9ec:	bl	48a4 <byteswap2@plt>
    e9f0:	mov	r8, r0
    e9f4:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    e9f8:	bl	48a4 <byteswap2@plt>
    e9fc:	mov	r4, r0
    ea00:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ea04:	bl	48a4 <byteswap2@plt>
    ea08:	mov	sl, r0
    ea0c:	b	ea18 <xport_read_labels_v8+0x7c>
    ea10:	ldrh	sl, [fp, #-34]	; 0xffffffde
    ea14:	ldrh	r4, [fp, #-36]	; 0xffffffdc
    ea18:	mov	r5, #5
    ea1c:	cmp	r8, #0
    ea20:	beq	eb68 <xport_read_labels_v8+0x1cc>
    ea24:	ldr	r1, [r6, #64]	; 0x40
    ea28:	cmp	r1, r8
    ea2c:	blt	eb68 <xport_read_labels_v8+0x1cc>
    ea30:	add	r1, r4, #8
    ea34:	str	r7, [fp, #-52]	; 0xffffffcc
    ea38:	str	sp, [fp, #-44]	; 0xffffffd4
    ea3c:	bic	r1, r1, #7
    ea40:	sub	r9, sp, r1
    ea44:	mov	sp, r9
    ea48:	add	r1, sl, #8
    ea4c:	mov	r7, r4
    ea50:	bic	r1, r1, #7
    ea54:	sub	r4, sp, r1
    ea58:	mov	sp, r4
    ea5c:	ldr	r1, [r6, #376]	; 0x178
    ea60:	ldr	r0, [r6, #52]	; 0x34
    ea64:	add	r1, r1, r8, lsl #2
    ea68:	ldr	r3, [r0, #12]
    ea6c:	ldr	r2, [r0, #20]
    ea70:	mov	r0, r9
    ea74:	ldr	r1, [r1, #-4]
    ea78:	str	r1, [fp, #-48]	; 0xffffffd0
    ea7c:	mov	r1, r7
    ea80:	blx	r3
    ea84:	mov	r5, #2
    ea88:	cmp	r0, r7
    ea8c:	bne	eb5c <xport_read_labels_v8+0x1c0>
    ea90:	ldr	r0, [r6, #52]	; 0x34
    ea94:	mov	r1, sl
    ea98:	mov	r8, r7
    ea9c:	ldr	r3, [r0, #12]
    eaa0:	ldr	r2, [r0, #20]
    eaa4:	mov	r0, r4
    eaa8:	blx	r3
    eaac:	cmp	r0, sl
    eab0:	str	sl, [fp, #-56]	; 0xffffffc8
    eab4:	bne	eb5c <xport_read_labels_v8+0x1c0>
    eab8:	ldr	r0, [r6, #48]	; 0x30
    eabc:	sub	sp, sp, #8
    eac0:	ldr	r7, [fp, #-48]	; 0xffffffd0
    eac4:	str	r0, [sp]
    eac8:	mov	r1, #300	; 0x12c
    eacc:	mov	r2, r9
    ead0:	mov	r3, r8
    ead4:	add	r0, r7, #8
    ead8:	bl	4c04 <readstat_convert@plt>
    eadc:	add	sp, sp, #8
    eae0:	cmp	r0, #0
    eae4:	bne	eb58 <xport_read_labels_v8+0x1bc>
    eae8:	ldr	r0, [r6, #48]	; 0x30
    eaec:	sub	sp, sp, #8
    eaf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    eaf4:	str	r0, [sp]
    eaf8:	add	r0, r7, #564	; 0x234
    eafc:	mov	r1, #1024	; 0x400
    eb00:	mov	r2, r4
    eb04:	bl	4c04 <readstat_convert@plt>
    eb08:	add	sp, sp, #8
    eb0c:	cmp	r0, #0
    eb10:	bne	eb58 <xport_read_labels_v8+0x1bc>
    eb14:	ldr	r7, [fp, #-52]	; 0xffffffcc
    eb18:	subs	r7, r7, #1
    eb1c:	ldr	sp, [fp, #-44]	; 0xffffffd4
    eb20:	bne	e9b8 <xport_read_labels_v8+0x1c>
    eb24:	mov	r0, r6
    eb28:	bl	e920 <xport_skip_rest_of_record>
    eb2c:	mov	r5, r0
    eb30:	cmp	r0, #0
    eb34:	bne	eb68 <xport_read_labels_v8+0x1cc>
    eb38:	ldr	r1, [pc, #52]	; eb74 <xport_read_labels_v8+0x1d8>
    eb3c:	ldr	r2, [pc, #52]	; eb78 <xport_read_labels_v8+0x1dc>
    eb40:	mov	r0, r6
    eb44:	add	r1, pc, r1
    eb48:	add	r2, pc, r2
    eb4c:	bl	e728 <xport_expect_header_record>
    eb50:	mov	r5, r0
    eb54:	b	eb68 <xport_read_labels_v8+0x1cc>
    eb58:	mov	r5, r0
    eb5c:	ldr	sp, [fp, #-44]	; 0xffffffd4
    eb60:	b	eb68 <xport_read_labels_v8+0x1cc>
    eb64:	mov	r5, #2
    eb68:	mov	r0, r5
    eb6c:	sub	sp, fp, #28
    eb70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb74:	.word	0x000159b3
    eb78:	.word	0x0001598c

0000eb7c <xport_read_labels_v9>:
    eb7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eb80:	add	fp, sp, #28
    eb84:	sub	sp, sp, #52	; 0x34
    eb88:	mov	r7, r0
    eb8c:	cmp	r1, #1
    eb90:	blt	eddc <xport_read_labels_v9+0x260>
    eb94:	mov	r4, r1
    eb98:	ldr	r0, [r7, #52]	; 0x34
    eb9c:	mov	r1, #10
    eba0:	ldr	r3, [r0, #12]
    eba4:	ldr	r2, [r0, #20]
    eba8:	sub	r0, fp, #42	; 0x2a
    ebac:	blx	r3
    ebb0:	cmp	r0, #10
    ebb4:	bne	ee2c <xport_read_labels_v9+0x2b0>
    ebb8:	bl	48b0 <machine_is_little_endian@plt>
    ebbc:	ldrh	r2, [fp, #-42]	; 0xffffffd6
    ebc0:	cmp	r0, #0
    ebc4:	beq	ec08 <xport_read_labels_v9+0x8c>
    ebc8:	mov	r0, r2
    ebcc:	bl	48a4 <byteswap2@plt>
    ebd0:	mov	r8, r0
    ebd4:	ldrh	r0, [fp, #-40]	; 0xffffffd8
    ebd8:	bl	48a4 <byteswap2@plt>
    ebdc:	mov	r6, r0
    ebe0:	ldrh	r0, [fp, #-38]	; 0xffffffda
    ebe4:	bl	48a4 <byteswap2@plt>
    ebe8:	mov	sl, r0
    ebec:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    ebf0:	bl	48a4 <byteswap2@plt>
    ebf4:	mov	r5, r0
    ebf8:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ebfc:	bl	48a4 <byteswap2@plt>
    ec00:	mov	r2, r8
    ec04:	b	ec18 <xport_read_labels_v9+0x9c>
    ec08:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ec0c:	ldrh	r5, [fp, #-36]	; 0xffffffdc
    ec10:	ldrh	sl, [fp, #-38]	; 0xffffffda
    ec14:	ldrh	r6, [fp, #-40]	; 0xffffffd8
    ec18:	mov	r9, #5
    ec1c:	cmp	r2, #0
    ec20:	beq	ee20 <xport_read_labels_v9+0x2a4>
    ec24:	ldr	r1, [r7, #64]	; 0x40
    ec28:	cmp	r1, r2
    ec2c:	blt	ee20 <xport_read_labels_v9+0x2a4>
    ec30:	add	r1, r6, #8
    ec34:	str	r4, [fp, #-76]	; 0xffffffb4
    ec38:	mov	r3, sl
    ec3c:	str	sp, [fp, #-52]	; 0xffffffcc
    ec40:	mov	sl, r6
    ec44:	bic	r1, r1, #7
    ec48:	sub	r4, sp, r1
    ec4c:	mov	sp, r4
    ec50:	add	r1, r3, #8
    ec54:	bic	r1, r1, #7
    ec58:	sub	r6, sp, r1
    ec5c:	mov	sp, r6
    ec60:	add	r1, r5, #8
    ec64:	str	r5, [fp, #-56]	; 0xffffffc8
    ec68:	bic	r1, r1, #7
    ec6c:	sub	r8, sp, r1
    ec70:	mov	sp, r8
    ec74:	str	r0, [fp, #-48]	; 0xffffffd0
    ec78:	add	r0, r0, #8
    ec7c:	mov	r5, r3
    ec80:	bic	r0, r0, #7
    ec84:	sub	r0, sp, r0
    ec88:	str	r0, [fp, #-60]	; 0xffffffc4
    ec8c:	mov	sp, r0
    ec90:	ldr	r1, [r7, #376]	; 0x178
    ec94:	ldr	r0, [r7, #52]	; 0x34
    ec98:	str	r4, [fp, #-68]	; 0xffffffbc
    ec9c:	add	r1, r1, r2, lsl #2
    eca0:	ldr	r3, [r0, #12]
    eca4:	ldr	r2, [r0, #20]
    eca8:	mov	r0, r4
    ecac:	ldr	r1, [r1, #-4]
    ecb0:	str	r1, [fp, #-72]	; 0xffffffb8
    ecb4:	mov	r1, sl
    ecb8:	blx	r3
    ecbc:	mov	r9, #2
    ecc0:	cmp	r0, sl
    ecc4:	str	sl, [fp, #-64]	; 0xffffffc0
    ecc8:	bne	ee10 <xport_read_labels_v9+0x294>
    eccc:	ldr	r0, [r7, #52]	; 0x34
    ecd0:	mov	r1, r5
    ecd4:	ldr	r3, [r0, #12]
    ecd8:	ldr	r2, [r0, #20]
    ecdc:	mov	r0, r6
    ece0:	blx	r3
    ece4:	cmp	r0, r5
    ece8:	str	r5, [fp, #-80]	; 0xffffffb0
    ecec:	bne	ee10 <xport_read_labels_v9+0x294>
    ecf0:	ldr	r0, [r7, #52]	; 0x34
    ecf4:	ldr	r5, [fp, #-56]	; 0xffffffc8
    ecf8:	mov	sl, r6
    ecfc:	ldr	r3, [r0, #12]
    ed00:	ldr	r2, [r0, #20]
    ed04:	mov	r0, r8
    ed08:	mov	r1, r5
    ed0c:	blx	r3
    ed10:	cmp	r0, r5
    ed14:	bne	ee10 <xport_read_labels_v9+0x294>
    ed18:	ldr	r0, [r7, #52]	; 0x34
    ed1c:	ldr	r5, [fp, #-48]	; 0xffffffd0
    ed20:	ldr	r6, [fp, #-60]	; 0xffffffc4
    ed24:	ldr	r3, [r0, #12]
    ed28:	ldr	r2, [r0, #20]
    ed2c:	mov	r0, r6
    ed30:	mov	r1, r5
    ed34:	blx	r3
    ed38:	cmp	r0, r5
    ed3c:	ldr	r5, [fp, #-52]	; 0xffffffcc
    ed40:	bne	ee1c <xport_read_labels_v9+0x2a0>
    ed44:	ldr	r0, [r7, #48]	; 0x30
    ed48:	sub	sp, sp, #8
    ed4c:	ldr	r4, [fp, #-72]	; 0xffffffb8
    ed50:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ed54:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ed58:	str	r0, [sp]
    ed5c:	mov	r1, #300	; 0x12c
    ed60:	add	r0, r4, #8
    ed64:	bl	4c04 <readstat_convert@plt>
    ed68:	add	sp, sp, #8
    ed6c:	cmp	r0, #0
    ed70:	bne	ee18 <xport_read_labels_v9+0x29c>
    ed74:	ldr	r0, [r7, #48]	; 0x30
    ed78:	sub	sp, sp, #8
    ed7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ed80:	str	r0, [sp]
    ed84:	add	r0, r4, #564	; 0x234
    ed88:	mov	r1, #1024	; 0x400
    ed8c:	mov	r2, r6
    ed90:	bl	4c04 <readstat_convert@plt>
    ed94:	add	sp, sp, #8
    ed98:	cmp	r0, #0
    ed9c:	bne	ee18 <xport_read_labels_v9+0x29c>
    eda0:	ldr	r0, [r4, #2140]	; 0x85c
    eda4:	ldr	r3, [r4, #2136]	; 0x858
    eda8:	sub	sp, sp, #8
    edac:	ldr	r2, [fp, #-80]	; 0xffffffb0
    edb0:	str	r0, [sp]
    edb4:	add	r0, r4, #308	; 0x134
    edb8:	mov	r1, sl
    edbc:	bl	e830 <xport_construct_format>
    edc0:	add	sp, sp, #8
    edc4:	cmp	r0, #0
    edc8:	bne	ee18 <xport_read_labels_v9+0x29c>
    edcc:	ldr	r4, [fp, #-76]	; 0xffffffb4
    edd0:	subs	r4, r4, #1
    edd4:	mov	sp, r5
    edd8:	bne	eb98 <xport_read_labels_v9+0x1c>
    eddc:	mov	r0, r7
    ede0:	bl	e920 <xport_skip_rest_of_record>
    ede4:	mov	r9, r0
    ede8:	cmp	r0, #0
    edec:	bne	ee20 <xport_read_labels_v9+0x2a4>
    edf0:	ldr	r1, [pc, #60]	; ee34 <xport_read_labels_v9+0x2b8>
    edf4:	ldr	r2, [pc, #60]	; ee38 <xport_read_labels_v9+0x2bc>
    edf8:	mov	r0, r7
    edfc:	add	r1, pc, r1
    ee00:	add	r2, pc, r2
    ee04:	bl	e728 <xport_expect_header_record>
    ee08:	mov	r9, r0
    ee0c:	b	ee20 <xport_read_labels_v9+0x2a4>
    ee10:	ldr	r5, [fp, #-52]	; 0xffffffcc
    ee14:	b	ee1c <xport_read_labels_v9+0x2a0>
    ee18:	mov	r9, r0
    ee1c:	mov	sp, r5
    ee20:	mov	r0, r9
    ee24:	sub	sp, fp, #28
    ee28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ee2c:	mov	r9, #2
    ee30:	b	ee20 <xport_read_labels_v9+0x2a4>
    ee34:	.word	0x000156fb
    ee38:	.word	0x000156d4

0000ee3c <xport_process_row>:
    ee3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee40:	add	fp, sp, #28
    ee44:	sub	sp, sp, #60	; 0x3c
    ee48:	str	r1, [sp, #28]
    ee4c:	mov	r1, r0
    ee50:	ldr	r0, [r0, #64]	; 0x40
    ee54:	cmp	r0, #1
    ee58:	blt	f094 <xport_process_row+0x258>
    ee5c:	add	r0, sp, #40	; 0x28
    ee60:	movw	ip, #0
    ee64:	mov	r5, #1
    ee68:	mov	sl, #0
    ee6c:	mov	r8, #0
    ee70:	str	r1, [sp, #36]	; 0x24
    ee74:	orr	r0, r0, #1
    ee78:	movt	ip, #32760	; 0x7ff8
    ee7c:	str	r0, [sp, #12]
    ee80:	mov	r0, #0
    ee84:	str	r0, [sp, #24]
    ee88:	ldr	r0, [r1, #376]	; 0x178
    ee8c:	and	r3, r9, #64512	; 0xfc00
    ee90:	bfc	r9, #0, #16
    ee94:	orr	r4, r9, r3
    ee98:	ldr	r7, [r0, r8, lsl #2]
    ee9c:	ldr	r6, [r7]
    eea0:	cmp	r6, #0
    eea4:	str	r6, [sp, #32]
    eea8:	beq	ef34 <xport_process_row+0xf8>
    eeac:	mov	r2, #0
    eeb0:	str	ip, [fp, #-36]	; 0xffffffdc
    eeb4:	str	r2, [fp, #-40]	; 0xffffffd8
    eeb8:	ldr	r6, [r7, #1596]	; 0x63c
    eebc:	sub	r0, r6, #3
    eec0:	cmp	r0, #5
    eec4:	bhi	efa4 <xport_process_row+0x168>
    eec8:	mov	r0, #0
    eecc:	str	r4, [sp, #20]
    eed0:	sub	r2, r6, #1
    eed4:	str	r3, [sp, #16]
    eed8:	str	r0, [sp, #44]	; 0x2c
    eedc:	str	r0, [sp, #40]	; 0x28
    eee0:	ldr	r0, [sp, #28]
    eee4:	add	r4, sl, r0
    eee8:	ldr	r0, [sp, #12]
    eeec:	add	r1, r4, #1
    eef0:	bl	4bbc <bcmp@plt>
    eef4:	cmp	r0, #0
    eef8:	beq	efac <xport_process_row+0x170>
    eefc:	mov	r1, r4
    ef00:	add	r4, sp, #40	; 0x28
    ef04:	mov	r2, r6
    ef08:	mov	r0, r4
    ef0c:	bl	4910 <memcpy@plt>
    ef10:	mov	r0, r4
    ef14:	mov	r1, #1
    ef18:	sub	r2, fp, #40	; 0x28
    ef1c:	mov	r3, #0
    ef20:	bl	49e8 <cnxptiee@plt>
    ef24:	ldr	r4, [sp, #20]
    ef28:	cmp	r0, #0
    ef2c:	beq	efc8 <xport_process_row+0x18c>
    ef30:	b	f0f0 <xport_process_row+0x2b4>
    ef34:	ldr	r0, [r7, #1596]	; 0x63c
    ef38:	mov	r9, r4
    ef3c:	orr	r1, r5, r0, lsl #2
    ef40:	ldr	r0, [sp, #24]
    ef44:	bl	4cb8 <readstat_realloc@plt>
    ef48:	cmp	r0, #0
    ef4c:	beq	f0dc <xport_process_row+0x2a0>
    ef50:	mov	r4, r0
    ef54:	ldr	r0, [sp, #36]	; 0x24
    ef58:	ldr	r3, [r7, #1596]	; 0x63c
    ef5c:	mov	r6, r7
    ef60:	ldr	r0, [r0, #48]	; 0x30
    ef64:	orr	r1, r5, r3, lsl #2
    ef68:	str	r0, [sp]
    ef6c:	ldr	r0, [sp, #28]
    ef70:	add	r2, r0, sl
    ef74:	mov	r0, r4
    ef78:	bl	4c04 <readstat_convert@plt>
    ef7c:	mov	r3, #0
    ef80:	cmp	r0, #0
    ef84:	bne	f0e8 <xport_process_row+0x2ac>
    ef88:	ldr	r1, [sp, #36]	; 0x24
    ef8c:	movw	ip, #0
    ef90:	str	r4, [sp, #24]
    ef94:	mov	r2, r4
    ef98:	mov	r7, r6
    ef9c:	movt	ip, #32760	; 0x7ff8
    efa0:	b	efe0 <xport_process_row+0x1a4>
    efa4:	mov	r3, ip
    efa8:	b	efdc <xport_process_row+0x1a0>
    efac:	ldr	r0, [sp, #28]
    efb0:	ldrb	r0, [r0, sl]
    efb4:	cmp	r0, #46	; 0x2e
    efb8:	bne	f058 <xport_process_row+0x21c>
    efbc:	ldr	r0, [sp, #16]
    efc0:	orr	r0, r5, r0, lsr #8
    efc4:	orr	r4, r9, r0, lsl #8
    efc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    efcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    efd0:	ldr	r1, [sp, #36]	; 0x24
    efd4:	movw	ip, #0
    efd8:	movt	ip, #32760	; 0x7ff8
    efdc:	mov	r9, r4
    efe0:	ldr	r5, [r1, #16]
    efe4:	ldr	r6, [r7, #1596]	; 0x63c
    efe8:	cmp	r5, #0
    efec:	beq	f03c <xport_process_row+0x200>
    eff0:	ldr	r0, [r1, #376]	; 0x178
    eff4:	ldr	r0, [r0, r8, lsl #2]
    eff8:	ldr	r0, [r0, #2144]	; 0x860
    effc:	cmp	r0, #0
    f000:	bne	f03c <xport_process_row+0x200>
    f004:	ldr	r0, [r1, #72]	; 0x48
    f008:	cmp	r0, #0
    f00c:	bne	f03c <xport_process_row+0x200>
    f010:	ldr	ip, [r1, #36]	; 0x24
    f014:	ldr	r0, [r1, #80]	; 0x50
    f018:	ldr	r1, [sp, #32]
    f01c:	stm	sp, {r1, r9, ip}
    f020:	mov	r1, r7
    f024:	blx	r5
    f028:	ldr	r1, [sp, #36]	; 0x24
    f02c:	movw	ip, #0
    f030:	cmp	r0, #0
    f034:	movt	ip, #32760	; 0x7ff8
    f038:	bne	f0f8 <xport_process_row+0x2bc>
    f03c:	ldr	r0, [r1, #64]	; 0x40
    f040:	add	r8, r8, #1
    f044:	add	sl, r6, sl
    f048:	mov	r5, #1
    f04c:	cmp	r8, r0
    f050:	blt	ee88 <xport_process_row+0x4c>
    f054:	b	f09c <xport_process_row+0x260>
    f058:	bl	4b20 <sas_validate_tag@plt>
    f05c:	cmp	r0, #0
    f060:	beq	f06c <xport_process_row+0x230>
    f064:	ldr	r6, [r7, #1596]	; 0x63c
    f068:	b	eefc <xport_process_row+0xc0>
    f06c:	ldr	r0, [sp, #28]
    f070:	ldrb	r0, [r0, sl]
    f074:	cmp	r0, #46	; 0x2e
    f078:	beq	efbc <xport_process_row+0x180>
    f07c:	ldr	r2, [sp, #16]
    f080:	mov	r1, #2
    f084:	orr	r1, r1, r2, lsr #8
    f088:	orr	r1, r9, r1, lsl #8
    f08c:	orr	r4, r1, r0
    f090:	b	efc8 <xport_process_row+0x18c>
    f094:	mov	r0, #0
    f098:	str	r0, [sp, #24]
    f09c:	ldr	r0, [r1, #72]	; 0x48
    f0a0:	cmp	r0, #0
    f0a4:	beq	f0b4 <xport_process_row+0x278>
    f0a8:	sub	r0, r0, #1
    f0ac:	str	r0, [r1, #72]	; 0x48
    f0b0:	b	f0c0 <xport_process_row+0x284>
    f0b4:	ldr	r0, [r1, #80]	; 0x50
    f0b8:	add	r0, r0, #1
    f0bc:	str	r0, [r1, #80]	; 0x50
    f0c0:	mov	r5, #0
    f0c4:	ldr	r4, [sp, #24]
    f0c8:	mov	r0, r4
    f0cc:	bl	48bc <free@plt>
    f0d0:	mov	r0, r5
    f0d4:	sub	sp, fp, #28
    f0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f0dc:	mov	r5, #3
    f0e0:	mov	r4, #0
    f0e4:	b	f0c8 <xport_process_row+0x28c>
    f0e8:	mov	r5, r0
    f0ec:	b	f0c8 <xport_process_row+0x28c>
    f0f0:	mov	r5, #16
    f0f4:	b	f0c4 <xport_process_row+0x288>
    f0f8:	mov	r5, #4
    f0fc:	b	f0c4 <xport_process_row+0x288>

0000f100 <readstat_begin_writing_xport>:
    f100:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f104:	add	fp, sp, #24
    f108:	ldr	r3, [r0, #8]
    f10c:	cmp	r3, #0
    f110:	moveq	r3, #8
    f114:	streq	r3, [r0, #8]
    f118:	ldr	r3, [pc, #176]	; f1d0 <readstat_begin_writing_xport+0xd0>
    f11c:	add	r3, pc, r3
    f120:	str	r3, [r0, #272]	; 0x110
    f124:	ldr	r3, [pc, #168]	; f1d4 <readstat_begin_writing_xport+0xd4>
    f128:	add	r3, pc, r3
    f12c:	str	r3, [r0, #268]	; 0x10c
    f130:	ldr	r3, [pc, #160]	; f1d8 <readstat_begin_writing_xport+0xd8>
    f134:	add	r3, pc, r3
    f138:	str	r3, [r0, #264]	; 0x108
    f13c:	ldr	ip, [pc, #152]	; f1dc <readstat_begin_writing_xport+0xdc>
    f140:	ldr	lr, [pc, #152]	; f1e0 <readstat_begin_writing_xport+0xe0>
    f144:	ldr	r8, [pc, #152]	; f1e4 <readstat_begin_writing_xport+0xe4>
    f148:	ldr	r4, [pc, #152]	; f1e8 <readstat_begin_writing_xport+0xe8>
    f14c:	ldr	r5, [pc, #152]	; f1ec <readstat_begin_writing_xport+0xec>
    f150:	ldr	r6, [pc, #152]	; f1f0 <readstat_begin_writing_xport+0xf0>
    f154:	ldr	r7, [pc, #152]	; f1f4 <readstat_begin_writing_xport+0xf4>
    f158:	add	r7, pc, r7
    f15c:	add	ip, pc, ip
    f160:	add	r4, pc, r4
    f164:	add	r5, pc, r5
    f168:	add	r6, pc, r6
    f16c:	add	lr, pc, lr
    f170:	add	r8, pc, r8
    f174:	str	r7, [r0, #292]	; 0x124
    f178:	ldr	r7, [pc, #120]	; f1f8 <readstat_begin_writing_xport+0xf8>
    f17c:	add	r7, pc, r7
    f180:	str	r7, [r0, #284]	; 0x11c
    f184:	ldr	r7, [pc, #112]	; f1fc <readstat_begin_writing_xport+0xfc>
    f188:	add	r7, pc, r7
    f18c:	str	r7, [r0, #276]	; 0x114
    f190:	ldr	r7, [pc, #104]	; f200 <readstat_begin_writing_xport+0x100>
    f194:	ldr	r3, [pc, #104]	; f204 <readstat_begin_writing_xport+0x104>
    f198:	add	r3, pc, r3
    f19c:	add	r7, pc, r7
    f1a0:	str	r3, [r0, #280]	; 0x118
    f1a4:	ldr	r3, [pc, #92]	; f208 <readstat_begin_writing_xport+0x108>
    f1a8:	ldr	r3, [pc, r3]
    f1ac:	str	r7, [r0, #228]	; 0xe4
    f1b0:	str	r3, [r0, #232]	; 0xe8
    f1b4:	add	r3, r0, #244	; 0xf4
    f1b8:	str	r6, [r0, #236]	; 0xec
    f1bc:	str	r5, [r0, #240]	; 0xf0
    f1c0:	stm	r3, {r4, r8, lr}
    f1c4:	str	ip, [r0, #256]	; 0x100
    f1c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    f1cc:	b	494c <readstat_begin_writing_file@plt>
    f1d0:	.word	0x0000039c
    f1d4:	.word	0x00000380
    f1d8:	.word	0x00000358
    f1dc:	.word	0x000002c8
    f1e0:	.word	0x00000260
    f1e4:	.word	0x00000200
    f1e8:	.word	0x000001b0
    f1ec:	.word	0x0000014c
    f1f0:	.word	0x000000e8
    f1f4:	.word	0x000000ac
    f1f8:	.word	0x00000e6c
    f1fc:	.word	0x0000037c
    f200:	.word	0x00000340
    f204:	.word	0x00000e68
    f208:	.word	0x0003511c

0000f20c <xport_metadata_ok>:
    f20c:	ldr	r2, [r0, #8]
    f210:	cmp	r2, #8
    f214:	movne	r1, #24
    f218:	cmpne	r2, #5
    f21c:	bne	f248 <xport_metadata_ok+0x3c>
    f220:	ldrb	r3, [r0, #188]!	; 0xbc
    f224:	mov	r1, #0
    f228:	cmp	r3, #0
    f22c:	beq	f248 <xport_metadata_ok+0x3c>
    f230:	cmp	r2, #5
    f234:	beq	f250 <xport_metadata_ok+0x44>
    f238:	cmp	r2, #8
    f23c:	bne	f248 <xport_metadata_ok+0x3c>
    f240:	mov	r1, #32
    f244:	b	476c <sas_validate_name@plt>
    f248:	mov	r0, r1
    f24c:	bx	lr
    f250:	mov	r1, #8
    f254:	b	476c <sas_validate_name@plt>

0000f258 <xport_write_int8>:
    f258:	push	{r4, r5, fp, lr}
    f25c:	add	fp, sp, #8
    f260:	sub	sp, sp, #16
    f264:	vmov	s0, r2
    f268:	mov	r5, r1
    f26c:	mov	r4, r0
    f270:	add	r0, sp, #8
    f274:	mov	r2, sp
    f278:	mov	r1, #0
    f27c:	mov	r3, #1
    f280:	vcvt.f64.s32	d16, s0
    f284:	vstr	d16, [sp, #8]
    f288:	bl	49e8 <cnxptiee@plt>
    f28c:	mov	r1, r0
    f290:	mov	r0, #16
    f294:	cmp	r1, #0
    f298:	bne	f2b0 <xport_write_int8+0x58>
    f29c:	ldr	r2, [r5, #1596]	; 0x63c
    f2a0:	mov	r1, sp
    f2a4:	mov	r0, r4
    f2a8:	bl	4910 <memcpy@plt>
    f2ac:	mov	r0, #0
    f2b0:	sub	sp, fp, #8
    f2b4:	pop	{r4, r5, fp, pc}

0000f2b8 <xport_write_int16>:
    f2b8:	push	{r4, r5, fp, lr}
    f2bc:	add	fp, sp, #8
    f2c0:	sub	sp, sp, #16
    f2c4:	vmov	s0, r2
    f2c8:	mov	r5, r1
    f2cc:	mov	r4, r0
    f2d0:	add	r0, sp, #8
    f2d4:	mov	r2, sp
    f2d8:	mov	r1, #0
    f2dc:	mov	r3, #1
    f2e0:	vcvt.f64.s32	d16, s0
    f2e4:	vstr	d16, [sp, #8]
    f2e8:	bl	49e8 <cnxptiee@plt>
    f2ec:	mov	r1, r0
    f2f0:	mov	r0, #16
    f2f4:	cmp	r1, #0
    f2f8:	bne	f310 <xport_write_int16+0x58>
    f2fc:	ldr	r2, [r5, #1596]	; 0x63c
    f300:	mov	r1, sp
    f304:	mov	r0, r4
    f308:	bl	4910 <memcpy@plt>
    f30c:	mov	r0, #0
    f310:	sub	sp, fp, #8
    f314:	pop	{r4, r5, fp, pc}

0000f318 <xport_write_int32>:
    f318:	push	{r4, r5, fp, lr}
    f31c:	add	fp, sp, #8
    f320:	sub	sp, sp, #16
    f324:	vmov	s0, r2
    f328:	mov	r5, r1
    f32c:	mov	r4, r0
    f330:	add	r0, sp, #8
    f334:	mov	r2, sp
    f338:	mov	r1, #0
    f33c:	mov	r3, #1
    f340:	vcvt.f64.s32	d16, s0
    f344:	vstr	d16, [sp, #8]
    f348:	bl	49e8 <cnxptiee@plt>
    f34c:	mov	r1, r0
    f350:	mov	r0, #16
    f354:	cmp	r1, #0
    f358:	bne	f370 <xport_write_int32+0x58>
    f35c:	ldr	r2, [r5, #1596]	; 0x63c
    f360:	mov	r1, sp
    f364:	mov	r0, r4
    f368:	bl	4910 <memcpy@plt>
    f36c:	mov	r0, #0
    f370:	sub	sp, fp, #8
    f374:	pop	{r4, r5, fp, pc}

0000f378 <xport_write_float>:
    f378:	push	{r4, r5, fp, lr}
    f37c:	add	fp, sp, #8
    f380:	sub	sp, sp, #16
    f384:	vcvt.f64.f32	d16, s0
    f388:	mov	r5, r1
    f38c:	mov	r4, r0
    f390:	add	r0, sp, #8
    f394:	mov	r2, sp
    f398:	mov	r1, #0
    f39c:	mov	r3, #1
    f3a0:	vstr	d16, [sp, #8]
    f3a4:	bl	49e8 <cnxptiee@plt>
    f3a8:	mov	r1, r0
    f3ac:	mov	r0, #16
    f3b0:	cmp	r1, #0
    f3b4:	bne	f3cc <xport_write_float+0x54>
    f3b8:	ldr	r2, [r5, #1596]	; 0x63c
    f3bc:	mov	r1, sp
    f3c0:	mov	r0, r4
    f3c4:	bl	4910 <memcpy@plt>
    f3c8:	mov	r0, #0
    f3cc:	sub	sp, fp, #8
    f3d0:	pop	{r4, r5, fp, pc}

0000f3d4 <xport_write_double>:
    f3d4:	push	{r4, r5, fp, lr}
    f3d8:	add	fp, sp, #8
    f3dc:	sub	sp, sp, #16
    f3e0:	mov	r5, r1
    f3e4:	mov	r4, r0
    f3e8:	add	r0, sp, #8
    f3ec:	mov	r2, sp
    f3f0:	mov	r1, #0
    f3f4:	mov	r3, #1
    f3f8:	vstr	d0, [sp, #8]
    f3fc:	bl	49e8 <cnxptiee@plt>
    f400:	mov	r1, r0
    f404:	mov	r0, #16
    f408:	cmp	r1, #0
    f40c:	bne	f424 <xport_write_double+0x50>
    f410:	ldr	r2, [r5, #1596]	; 0x63c
    f414:	mov	r1, sp
    f418:	mov	r0, r4
    f41c:	bl	4910 <memcpy@plt>
    f420:	mov	r0, #0
    f424:	sub	sp, fp, #8
    f428:	pop	{r4, r5, fp, pc}

0000f42c <xport_write_string>:
    f42c:	push	{r4, r5, r6, sl, fp, lr}
    f430:	add	fp, sp, #16
    f434:	mov	r4, r2
    f438:	ldr	r2, [r1, #1596]	; 0x63c
    f43c:	mov	r6, r1
    f440:	mov	r1, #32
    f444:	mov	r5, r0
    f448:	bl	4c70 <memset@plt>
    f44c:	mov	r0, #0
    f450:	cmp	r4, #0
    f454:	beq	f490 <xport_write_string+0x64>
    f458:	ldrb	r1, [r4]
    f45c:	cmp	r1, #0
    f460:	beq	f490 <xport_write_string+0x64>
    f464:	mov	r0, r4
    f468:	bl	4bd4 <strlen@plt>
    f46c:	ldr	r1, [r6, #1596]	; 0x63c
    f470:	mov	r2, r0
    f474:	mov	r0, #22
    f478:	cmp	r2, r1
    f47c:	bhi	f490 <xport_write_string+0x64>
    f480:	mov	r0, r5
    f484:	mov	r1, r4
    f488:	bl	4910 <memcpy@plt>
    f48c:	mov	r0, #0
    f490:	pop	{r4, r5, r6, sl, fp, pc}

0000f494 <xport_write_missing_string>:
    f494:	push	{fp, lr}
    f498:	mov	fp, sp
    f49c:	ldr	r2, [r1, #1596]	; 0x63c
    f4a0:	mov	r1, #32
    f4a4:	bl	4c70 <memset@plt>
    f4a8:	mov	r0, #0
    f4ac:	pop	{fp, pc}

0000f4b0 <xport_write_missing_numeric>:
    f4b0:	mov	r1, #46	; 0x2e
    f4b4:	strb	r1, [r0]
    f4b8:	mov	r0, #0
    f4bc:	bx	lr

0000f4c0 <xport_write_missing_tagged>:
    f4c0:	push	{r4, r5, fp, lr}
    f4c4:	add	fp, sp, #8
    f4c8:	mov	r5, r0
    f4cc:	mov	r0, r2
    f4d0:	mov	r4, r2
    f4d4:	bl	4b20 <sas_validate_tag@plt>
    f4d8:	cmp	r0, #0
    f4dc:	strbeq	r4, [r5]
    f4e0:	pop	{r4, r5, fp, pc}

0000f4e4 <xport_variable_width>:
    f4e4:	cmp	r0, #0
    f4e8:	beq	f504 <xport_variable_width+0x20>
    f4ec:	sub	r2, r1, #1
    f4f0:	mov	r0, #8
    f4f4:	cmp	r2, #6
    f4f8:	bxhi	lr
    f4fc:	cmp	r1, #3
    f500:	movls	r1, #3
    f504:	mov	r0, r1
    f508:	bx	lr

0000f50c <xport_begin_data>:
    f50c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f510:	add	fp, sp, #28
    f514:	sub	sp, sp, #4
    f518:	vpush	{d8-d9}
    f51c:	sub	sp, sp, #296	; 0x128
    f520:	mov	sl, r0
    f524:	ldr	r0, [r0, #20]
    f528:	add	r5, sp, #152	; 0x98
    f52c:	str	r0, [sp, #152]	; 0x98
    f530:	mov	r0, r5
    f534:	bl	4b38 <localtime@plt>
    f538:	cmp	r0, #0
    f53c:	beq	f788 <xport_begin_data+0x27c>
    f540:	ldm	r0, {r1, r2, r3, ip}
    f544:	ldr	r6, [r0, #16]
    f548:	ldr	r0, [r0, #20]
    f54c:	ldr	r4, [pc, #2604]	; ff80 <xport_begin_data+0xa74>
    f550:	ldr	r4, [pc, r4]
    f554:	add	r6, r4, r6, lsl #2
    f558:	str	r6, [sp]
    f55c:	movw	r6, #34079	; 0x851f
    f560:	movt	r6, #20971	; 0x51eb
    f564:	umull	r4, r7, r1, r6
    f568:	mov	r4, #100	; 0x64
    f56c:	lsr	r7, r7, #5
    f570:	mls	r1, r7, r4, r1
    f574:	str	r1, [sp, #16]
    f578:	umull	r1, r7, r2, r6
    f57c:	lsr	r1, r7, #5
    f580:	mls	r1, r1, r4, r2
    f584:	str	r1, [sp, #12]
    f588:	umull	r1, r2, r3, r6
    f58c:	lsr	r1, r2, #5
    f590:	mls	r1, r1, r4, r3
    f594:	str	r1, [sp, #8]
    f598:	umull	r1, r2, r0, r6
    f59c:	lsr	r1, r2, #5
    f5a0:	mls	r0, r1, r4, r0
    f5a4:	str	r0, [sp, #4]
    f5a8:	umull	r0, r1, ip, r6
    f5ac:	add	r6, sp, #83	; 0x53
    f5b0:	ldr	r2, [pc, #2508]	; ff84 <xport_begin_data+0xa78>
    f5b4:	lsr	r0, r1, #5
    f5b8:	mov	r1, #17
    f5bc:	mls	r3, r0, r4, ip
    f5c0:	add	r2, pc, r2
    f5c4:	mov	r0, r6
    f5c8:	bl	4c4c <snprintf@plt>
    f5cc:	ldr	r0, [pc, #2484]	; ff88 <xport_begin_data+0xa7c>
    f5d0:	add	r0, pc, r0
    f5d4:	ldm	r0!, {r1, r2, r3, r7}
    f5d8:	stmia	r5!, {r1, r2, r3, r7}
    f5dc:	ldm	r0, {r1, r2, r3, r4, r7}
    f5e0:	stm	r5, {r1, r2, r3, r4, r7}
    f5e4:	ldr	r0, [sl, #8]
    f5e8:	cmp	r0, #8
    f5ec:	bne	f604 <xport_begin_data+0xf8>
    f5f0:	mov	r0, #56	; 0x38
    f5f4:	strh	r0, [sp, #156]	; 0x9c
    f5f8:	movw	r0, #18764	; 0x494c
    f5fc:	movt	r0, #22082	; 0x5642
    f600:	str	r0, [sp, #152]	; 0x98
    f604:	add	r1, sp, #152	; 0x98
    f608:	mov	r0, sl
    f60c:	bl	100a4 <xport_write_header_record>
    f610:	cmp	r0, #0
    f614:	bne	f78c <xport_begin_data+0x280>
    f618:	ldr	r1, [pc, #2412]	; ff8c <xport_begin_data+0xa80>
    f61c:	ldr	r8, [pc, #2412]	; ff90 <xport_begin_data+0xa84>
    f620:	ldr	r5, [pc, #2412]	; ff94 <xport_begin_data+0xa88>
    f624:	ldr	r0, [pc, #2412]	; ff98 <xport_begin_data+0xa8c>
    f628:	ldr	r3, [pc, #2412]	; ff9c <xport_begin_data+0xa90>
    f62c:	add	r3, pc, r3
    f630:	add	r1, pc, r1
    f634:	add	r0, pc, r0
    f638:	add	r8, pc, r8
    f63c:	add	r5, pc, r5
    f640:	str	r3, [sp]
    f644:	stmib	sp, {r0, r5, r8}
    f648:	str	r1, [sp, #16]
    f64c:	str	r6, [sp, #20]
    f650:	add	r6, sp, #152	; 0x98
    f654:	mov	r1, #81	; 0x51
    f658:	ldr	r2, [pc, #2368]	; ffa0 <xport_begin_data+0xa94>
    f65c:	mov	r0, r6
    f660:	add	r2, pc, r2
    f664:	bl	4c4c <snprintf@plt>
    f668:	mov	r0, sl
    f66c:	mov	r1, r6
    f670:	bl	10034 <xport_write_record>
    f674:	cmp	r0, #0
    f678:	bne	f78c <xport_begin_data+0x280>
    f67c:	add	r9, sp, #83	; 0x53
    f680:	mov	r0, sl
    f684:	mov	r1, r9
    f688:	bl	10034 <xport_write_record>
    f68c:	cmp	r0, #0
    f690:	bne	f78c <xport_begin_data+0x280>
    f694:	ldr	r0, [pc, #2312]	; ffa4 <xport_begin_data+0xa98>
    f698:	add	r0, pc, r0
    f69c:	ldm	r0!, {r1, r2, r3, r4}
    f6a0:	stmia	r6!, {r1, r2, r3, r4}
    f6a4:	ldm	r0, {r1, r2, r3, r4, r7}
    f6a8:	stm	r6, {r1, r2, r3, r4, r7}
    f6ac:	ldr	r0, [sl, #8]
    f6b0:	cmp	r0, #8
    f6b4:	bne	f6d0 <xport_begin_data+0x1c4>
    f6b8:	movw	r0, #22082	; 0x5642
    f6bc:	movt	r0, #56	; 0x38
    f6c0:	str	r0, [sp, #155]	; 0x9b
    f6c4:	movw	r0, #17741	; 0x454d
    f6c8:	movt	r0, #16973	; 0x424d
    f6cc:	str	r0, [sp, #152]	; 0x98
    f6d0:	add	r6, sp, #152	; 0x98
    f6d4:	mov	r0, sl
    f6d8:	mov	r1, r6
    f6dc:	bl	100a4 <xport_write_header_record>
    f6e0:	cmp	r0, #0
    f6e4:	bne	f78c <xport_begin_data+0x280>
    f6e8:	ldr	r0, [pc, #2232]	; ffa8 <xport_begin_data+0xa9c>
    f6ec:	add	r0, pc, r0
    f6f0:	ldm	r0!, {r1, r2, r3, r7}
    f6f4:	stmia	r6!, {r1, r2, r3, r7}
    f6f8:	ldm	r0, {r1, r2, r3, r4, r7}
    f6fc:	stm	r6, {r1, r2, r3, r4, r7}
    f700:	ldr	r0, [sl, #8]
    f704:	cmp	r0, #8
    f708:	bne	f724 <xport_begin_data+0x218>
    f70c:	movw	r0, #22100	; 0x5654
    f710:	movt	r0, #56	; 0x38
    f714:	str	r0, [sp, #156]	; 0x9c
    f718:	movw	r0, #21316	; 0x5344
    f71c:	movt	r0, #20547	; 0x5043
    f720:	str	r0, [sp, #152]	; 0x98
    f724:	add	r6, sp, #152	; 0x98
    f728:	mov	r0, sl
    f72c:	mov	r1, r6
    f730:	bl	100a4 <xport_write_header_record>
    f734:	ldr	r4, [pc, #2160]	; ffac <xport_begin_data+0xaa0>
    f738:	cmp	r0, #0
    f73c:	add	r4, pc, r4
    f740:	bne	f78c <xport_begin_data+0x280>
    f744:	ldr	r0, [sl, #8]
    f748:	cmp	r0, #8
    f74c:	bne	f79c <xport_begin_data+0x290>
    f750:	mov	r0, sl
    f754:	add	r6, sp, #152	; 0x98
    f758:	ldrb	r1, [r0, #188]!	; 0xbc
    f75c:	ldr	r2, [pc, #2124]	; ffb0 <xport_begin_data+0xaa4>
    f760:	ldr	r3, [pc, #2124]	; ffb4 <xport_begin_data+0xaa8>
    f764:	cmp	r1, #0
    f768:	add	r3, pc, r3
    f76c:	add	r2, pc, r2
    f770:	movne	r3, r0
    f774:	str	r3, [sp]
    f778:	stmib	sp, {r2, r5, r8, r9}
    f77c:	ldr	r2, [pc, #2100]	; ffb8 <xport_begin_data+0xaac>
    f780:	add	r2, pc, r2
    f784:	b	f7d4 <xport_begin_data+0x2c8>
    f788:	mov	r0, #39	; 0x27
    f78c:	sub	sp, fp, #48	; 0x30
    f790:	vpop	{d8-d9}
    f794:	add	sp, sp, #4
    f798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f79c:	mov	r0, sl
    f7a0:	ldrb	r1, [r0, #188]!	; 0xbc
    f7a4:	ldr	r2, [pc, #2064]	; ffbc <xport_begin_data+0xab0>
    f7a8:	ldr	r3, [pc, #2064]	; ffc0 <xport_begin_data+0xab4>
    f7ac:	cmp	r1, #0
    f7b0:	add	r3, pc, r3
    f7b4:	add	r2, pc, r2
    f7b8:	movne	r3, r0
    f7bc:	str	r3, [sp]
    f7c0:	stmib	sp, {r2, r5, r8}
    f7c4:	str	r4, [sp, #16]
    f7c8:	str	r9, [sp, #20]
    f7cc:	ldr	r2, [pc, #2032]	; ffc4 <xport_begin_data+0xab8>
    f7d0:	add	r2, pc, r2
    f7d4:	ldr	r3, [pc, #2028]	; ffc8 <xport_begin_data+0xabc>
    f7d8:	mov	r0, r6
    f7dc:	mov	r1, #81	; 0x51
    f7e0:	add	r3, pc, r3
    f7e4:	bl	4c4c <snprintf@plt>
    f7e8:	mov	r0, sl
    f7ec:	mov	r1, r6
    f7f0:	bl	10034 <xport_write_record>
    f7f4:	cmp	r0, #0
    f7f8:	bne	f78c <xport_begin_data+0x280>
    f7fc:	add	r0, sl, #88	; 0x58
    f800:	str	r4, [sp]
    f804:	add	r5, sp, #152	; 0x98
    f808:	add	r3, sp, #83	; 0x53
    f80c:	mov	r1, #81	; 0x51
    f810:	stmib	sp, {r0, r4}
    f814:	mov	r0, r5
    f818:	ldr	r2, [pc, #1964]	; ffcc <xport_begin_data+0xac0>
    f81c:	add	r2, pc, r2
    f820:	bl	4c4c <snprintf@plt>
    f824:	mov	r0, sl
    f828:	mov	r1, r5
    f82c:	bl	10034 <xport_write_record>
    f830:	cmp	r0, #0
    f834:	bne	f78c <xport_begin_data+0x280>
    f838:	ldr	r1, [pc, #1936]	; ffd0 <xport_begin_data+0xac4>
    f83c:	mov	r0, #0
    f840:	strb	r0, [sp, #160]	; 0xa0
    f844:	str	r0, [sp, #164]	; 0xa4
    f848:	add	r1, pc, r1
    f84c:	vldr	d16, [r1]
    f850:	add	r1, r5, #20
    f854:	vstr	d16, [sp, #152]	; 0x98
    f858:	vmov.i32	q8, #0	; 0x00000000
    f85c:	ldr	r0, [sl, #28]
    f860:	vst1.32	{d16-d17}, [r1]
    f864:	str	r0, [sp, #168]	; 0xa8
    f868:	ldr	r0, [sl, #8]
    f86c:	cmp	r0, #8
    f870:	bne	f88c <xport_begin_data+0x380>
    f874:	movw	r0, #22100	; 0x5654
    f878:	movt	r0, #56	; 0x38
    f87c:	str	r0, [sp, #156]	; 0x9c
    f880:	movw	r0, #16718	; 0x414e
    f884:	movt	r0, #21325	; 0x534d
    f888:	str	r0, [sp, #152]	; 0x98
    f88c:	add	r4, sp, #152	; 0x98
    f890:	mov	r0, sl
    f894:	mov	r1, r4
    f898:	bl	100a4 <xport_write_header_record>
    f89c:	cmp	r0, #0
    f8a0:	bne	f78c <xport_begin_data+0x280>
    f8a4:	add	r0, sp, #152	; 0x98
    f8a8:	add	r5, r4, #120	; 0x78
    f8ac:	add	r3, r4, #64	; 0x40
    f8b0:	add	r2, r4, #56	; 0x38
    f8b4:	add	r7, r4, #16
    f8b8:	mov	r8, #0
    f8bc:	mov	r6, #0
    f8c0:	add	r1, r0, #56	; 0x38
    f8c4:	add	r0, r0, #72	; 0x48
    f8c8:	str	r5, [sp, #32]
    f8cc:	str	r3, [sp, #36]	; 0x24
    f8d0:	str	r2, [sp, #52]	; 0x34
    f8d4:	str	r0, [sp, #56]	; 0x38
    f8d8:	add	r0, r4, #88	; 0x58
    f8dc:	str	r1, [sp, #60]	; 0x3c
    f8e0:	mov	r1, #0
    f8e4:	str	r0, [sp, #28]
    f8e8:	add	r0, r4, #80	; 0x50
    f8ec:	str	r0, [sp, #44]	; 0x2c
    f8f0:	mov	r0, #0
    f8f4:	str	r0, [sp, #48]	; 0x30
    f8f8:	ldr	r0, [sl, #28]
    f8fc:	cmp	r1, r0
    f900:	bge	fc48 <xport_begin_data+0x73c>
    f904:	mov	r0, sl
    f908:	str	r1, [sp, #76]	; 0x4c
    f90c:	bl	4d48 <readstat_get_variable@plt>
    f910:	mov	r9, r0
    f914:	ldr	r0, [r0, #1600]	; 0x640
    f918:	str	r8, [sp, #68]	; 0x44
    f91c:	ldr	r1, [r9]
    f920:	cmp	r1, #0
    f924:	beq	f948 <xport_begin_data+0x43c>
    f928:	ldr	r5, [sp, #44]	; 0x2c
    f92c:	sub	r1, r0, #1
    f930:	mov	r8, #8
    f934:	cmp	r1, #6
    f938:	bhi	f950 <xport_begin_data+0x444>
    f93c:	cmp	r0, #3
    f940:	movls	r0, #3
    f944:	b	f94c <xport_begin_data+0x440>
    f948:	ldr	r5, [sp, #44]	; 0x2c
    f94c:	mov	r8, r0
    f950:	mov	r0, r4
    f954:	mov	r1, #0
    f958:	mov	r2, #140	; 0x8c
    f95c:	bl	4c70 <memset@plt>
    f960:	ldr	r0, [sp, #76]	; 0x4c
    f964:	movw	r1, #8224	; 0x2020
    f968:	str	r6, [sp, #64]	; 0x40
    f96c:	movt	r1, #8224	; 0x2020
    f970:	add	r0, r0, #1
    f974:	strh	r0, [sp, #158]	; 0x9e
    f978:	str	r0, [sp, #76]	; 0x4c
    f97c:	ldr	r0, [sp, #60]	; 0x3c
    f980:	strh	r8, [sp, #156]	; 0x9c
    f984:	str	r1, [r0, #4]
    f988:	str	r1, [r0]
    f98c:	ldr	r0, [sp, #56]	; 0x38
    f990:	str	r1, [r0, #4]
    f994:	str	r1, [r0]
    f998:	mov	r0, r9
    f99c:	str	r6, [sp, #236]	; 0xec
    f9a0:	bl	4f04 <readstat_variable_get_type_class@plt>
    f9a4:	ldr	r2, [sp, #52]	; 0x34
    f9a8:	cmp	r0, #0
    f9ac:	mov	r0, #1
    f9b0:	add	r6, r9, #8
    f9b4:	mov	r1, #8
    f9b8:	movweq	r0, #2
    f9bc:	strh	r0, [sp, #152]	; 0x98
    f9c0:	ldrb	r0, [r9, r1]
    f9c4:	cmp	r0, #0
    f9c8:	beq	f9e4 <xport_begin_data+0x4d8>
    f9cc:	strb	r0, [r4, r1]
    f9d0:	add	r1, r1, #1
    f9d4:	add	r0, r4, r1
    f9d8:	cmp	r0, r7
    f9dc:	bcc	f9c0 <xport_begin_data+0x4b4>
    f9e0:	b	f9e8 <xport_begin_data+0x4dc>
    f9e4:	add	r0, r4, r1
    f9e8:	cmp	r0, r7
    f9ec:	bcs	fa04 <xport_begin_data+0x4f8>
    f9f0:	sub	r1, r4, r0
    f9f4:	add	r2, r1, #16
    f9f8:	mov	r1, #32
    f9fc:	bl	4c70 <memset@plt>
    fa00:	ldr	r2, [sp, #52]	; 0x34
    fa04:	add	r4, r9, #564	; 0x234
    fa08:	mov	r1, #0
    fa0c:	ldrb	r0, [r4, r1]
    fa10:	cmp	r0, #0
    fa14:	beq	fa30 <xport_begin_data+0x524>
    fa18:	strb	r0, [r7, r1]
    fa1c:	add	r1, r1, #1
    fa20:	add	r0, r7, r1
    fa24:	cmp	r0, r2
    fa28:	bcc	fa0c <xport_begin_data+0x500>
    fa2c:	b	fa34 <xport_begin_data+0x528>
    fa30:	add	r0, r7, r1
    fa34:	cmp	r0, r2
    fa38:	bcs	fa50 <xport_begin_data+0x544>
    fa3c:	add	r1, sp, #152	; 0x98
    fa40:	sub	r1, r1, r0
    fa44:	add	r2, r1, #56	; 0x38
    fa48:	mov	r1, #32
    fa4c:	bl	4c70 <memset@plt>
    fa50:	mov	r0, r9
    fa54:	str	r8, [sp, #72]	; 0x48
    fa58:	ldrb	r1, [r0, #308]!	; 0x134
    fa5c:	cmp	r1, #0
    fa60:	beq	fb54 <xport_begin_data+0x648>
    fa64:	mov	r1, #0
    fa68:	add	r8, sp, #112	; 0x70
    fa6c:	add	r3, sp, #148	; 0x94
    fa70:	str	r1, [sp, #100]	; 0x64
    fa74:	str	r1, [sp, #148]	; 0x94
    fa78:	add	r1, sp, #100	; 0x64
    fa7c:	mov	r2, r8
    fa80:	str	r1, [sp]
    fa84:	ldr	r1, [pc, #1352]	; ffd4 <xport_begin_data+0xac8>
    fa88:	add	r1, pc, r1
    fa8c:	bl	4c58 <__isoc99_sscanf@plt>
    fa90:	ldr	r0, [sp, #60]	; 0x3c
    fa94:	ldr	r3, [sp, #36]	; 0x24
    fa98:	ldrb	r2, [r8]
    fa9c:	cmp	r2, #0
    faa0:	beq	fab4 <xport_begin_data+0x5a8>
    faa4:	strb	r2, [r0], #1
    faa8:	add	r8, r8, #1
    faac:	cmp	r0, r3
    fab0:	bcc	fa98 <xport_begin_data+0x58c>
    fab4:	cmp	r0, r3
    fab8:	bcs	fad0 <xport_begin_data+0x5c4>
    fabc:	add	r1, sp, #152	; 0x98
    fac0:	sub	r1, r1, r0
    fac4:	add	r2, r1, #64	; 0x40
    fac8:	mov	r1, #32
    facc:	bl	4c70 <memset@plt>
    fad0:	ldr	r0, [sp, #148]	; 0x94
    fad4:	add	r1, sp, #112	; 0x70
    fad8:	strh	r0, [sp, #216]	; 0xd8
    fadc:	ldr	r0, [sp, #100]	; 0x64
    fae0:	strh	r0, [sp, #218]	; 0xda
    fae4:	ldr	r0, [sp, #56]	; 0x38
    fae8:	ldrb	r2, [r1]
    faec:	cmp	r2, #0
    faf0:	beq	fb04 <xport_begin_data+0x5f8>
    faf4:	strb	r2, [r0], #1
    faf8:	add	r1, r1, #1
    fafc:	cmp	r0, r5
    fb00:	bcc	fae8 <xport_begin_data+0x5dc>
    fb04:	cmp	r0, r5
    fb08:	bcs	fb20 <xport_begin_data+0x614>
    fb0c:	add	r1, sp, #152	; 0x98
    fb10:	sub	r1, r1, r0
    fb14:	add	r2, r1, #80	; 0x50
    fb18:	mov	r1, #32
    fb1c:	bl	4c70 <memset@plt>
    fb20:	ldr	r0, [sp, #148]	; 0x94
    fb24:	strh	r0, [sp, #232]	; 0xe8
    fb28:	ldr	r0, [sp, #100]	; 0x64
    fb2c:	strh	r0, [sp, #234]	; 0xea
    fb30:	add	r0, sp, #112	; 0x70
    fb34:	bl	4bd4 <strlen@plt>
    fb38:	cmp	r0, #8
    fb3c:	ldr	r0, [sp, #48]	; 0x30
    fb40:	mov	r1, #0
    fb44:	movwhi	r0, #1
    fb48:	movwhi	r1, #1
    fb4c:	str	r0, [sp, #48]	; 0x30
    fb50:	b	fb64 <xport_begin_data+0x658>
    fb54:	ldr	r0, [r9, #2136]	; 0x858
    fb58:	mov	r1, #0
    fb5c:	cmp	r0, #0
    fb60:	strhne	r0, [sp, #216]	; 0xd8
    fb64:	ldr	r0, [r9, #2132]	; 0x854
    fb68:	sub	r0, r0, #3
    fb6c:	clz	r0, r0
    fb70:	lsr	r0, r0, #5
    fb74:	strh	r0, [sp, #220]	; 0xdc
    fb78:	ldr	r0, [sl, #8]
    fb7c:	cmp	r0, #8
    fb80:	bne	fbf0 <xport_begin_data+0x6e4>
    fb84:	ldr	r0, [sp, #28]
    fb88:	ldr	r5, [sp, #32]
    fb8c:	str	r1, [sp, #40]	; 0x28
    fb90:	ldrb	r1, [r6]
    fb94:	cmp	r1, #0
    fb98:	beq	fbac <xport_begin_data+0x6a0>
    fb9c:	strb	r1, [r0], #1
    fba0:	add	r6, r6, #1
    fba4:	cmp	r0, r5
    fba8:	bcc	fb90 <xport_begin_data+0x684>
    fbac:	ldr	r8, [sp, #68]	; 0x44
    fbb0:	ldr	r6, [sp, #64]	; 0x40
    fbb4:	cmp	r0, r5
    fbb8:	bcs	fbd0 <xport_begin_data+0x6c4>
    fbbc:	add	r1, sp, #152	; 0x98
    fbc0:	sub	r1, r1, r0
    fbc4:	add	r2, r1, #120	; 0x78
    fbc8:	mov	r1, #32
    fbcc:	bl	4c70 <memset@plt>
    fbd0:	mov	r0, r4
    fbd4:	bl	4bd4 <strlen@plt>
    fbd8:	cmp	r0, #40	; 0x28
    fbdc:	ldr	r9, [sp, #40]	; 0x28
    fbe0:	add	lr, sp, #256	; 0x100
    fbe4:	movwhi	r9, #1
    fbe8:	strh	r0, [lr, #16]
    fbec:	b	fbfc <xport_begin_data+0x6f0>
    fbf0:	ldr	r8, [sp, #68]	; 0x44
    fbf4:	ldr	r6, [sp, #64]	; 0x40
    fbf8:	mov	r9, r1
    fbfc:	add	r0, sp, #152	; 0x98
    fc00:	bl	4a78 <xport_namestr_bswap@plt>
    fc04:	ldr	r0, [pc, #972]	; ffd8 <xport_begin_data+0xacc>
    fc08:	add	r4, sp, #152	; 0x98
    fc0c:	mov	r2, #140	; 0x8c
    fc10:	mov	r3, #80	; 0x50
    fc14:	mov	r1, r4
    fc18:	add	r0, pc, r0
    fc1c:	str	r0, [sp]
    fc20:	mov	r0, sl
    fc24:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
    fc28:	ldr	r1, [sp, #72]	; 0x48
    fc2c:	cmp	r9, #0
    fc30:	addne	r8, r8, #1
    fc34:	cmp	r0, #0
    fc38:	add	r6, r1, r6
    fc3c:	ldr	r1, [sp, #76]	; 0x4c
    fc40:	beq	f8f8 <xport_begin_data+0x3ec>
    fc44:	b	f78c <xport_begin_data+0x280>
    fc48:	ldr	r3, [pc, #908]	; ffdc <xport_begin_data+0xad0>
    fc4c:	mov	r0, sl
    fc50:	mov	r1, #32
    fc54:	mov	r2, #80	; 0x50
    fc58:	add	r3, pc, r3
    fc5c:	bl	4ea4 <readstat_write_line_padding@plt>
    fc60:	cmp	r0, #0
    fc64:	bne	f78c <xport_begin_data+0x280>
    fc68:	ldr	r0, [sl, #8]
    fc6c:	cmp	r8, #0
    fc70:	beq	ff20 <xport_begin_data+0xa14>
    fc74:	cmp	r0, #8
    fc78:	bne	ff20 <xport_begin_data+0xa14>
    fc7c:	ldr	r1, [pc, #860]	; ffe0 <xport_begin_data+0xad4>
    fc80:	vmov.i32	q8, #0	; 0x00000000
    fc84:	add	r0, sp, #112	; 0x70
    fc88:	mov	r2, r8
    fc8c:	add	r0, r0, #16
    fc90:	vst1.64	{d16-d17}, [r0]
    fc94:	mov	r0, #0
    fc98:	add	r1, pc, r1
    fc9c:	strb	r0, [sp, #120]	; 0x78
    fca0:	str	r8, [sp, #124]	; 0x7c
    fca4:	str	r0, [sp, #144]	; 0x90
    fca8:	ldr	r0, [sp, #48]	; 0x30
    fcac:	vldr	d18, [r1]
    fcb0:	cmp	r0, #0
    fcb4:	vstr	d18, [sp, #112]	; 0x70
    fcb8:	beq	fcd4 <xport_begin_data+0x7c8>
    fcbc:	movw	r0, #22092	; 0x564c
    fcc0:	movt	r0, #57	; 0x39
    fcc4:	str	r0, [sp, #116]	; 0x74
    fcc8:	movw	r0, #16716	; 0x414c
    fccc:	movt	r0, #17730	; 0x4542
    fcd0:	str	r0, [sp, #112]	; 0x70
    fcd4:	str	r2, [sp]
    fcd8:	add	r4, sp, #152	; 0x98
    fcdc:	add	r3, sp, #112	; 0x70
    fce0:	mov	r1, #81	; 0x51
    fce4:	ldr	r2, [pc, #760]	; ffe4 <xport_begin_data+0xad8>
    fce8:	mov	r0, r4
    fcec:	add	r2, pc, r2
    fcf0:	bl	4c4c <snprintf@plt>
    fcf4:	mov	r0, sl
    fcf8:	mov	r1, r4
    fcfc:	bl	10034 <xport_write_record>
    fd00:	cmp	r0, #0
    fd04:	bne	f78c <xport_begin_data+0x280>
    fd08:	ldr	r0, [sl, #28]
    fd0c:	cmp	r0, #1
    fd10:	blt	fefc <xport_begin_data+0x9f0>
    fd14:	vmov.i32	q4, #0	; 0x00000000
    fd18:	mov	r8, #0
    fd1c:	mov	r0, sl
    fd20:	mov	r1, r8
    fd24:	bl	4d48 <readstat_get_variable@plt>
    fd28:	mov	r6, r0
    fd2c:	add	r0, r0, #564	; 0x234
    fd30:	str	r0, [sp, #76]	; 0x4c
    fd34:	bl	4bd4 <strlen@plt>
    fd38:	mov	r9, r0
    fd3c:	add	r0, r6, #8
    fd40:	mov	r5, r0
    fd44:	bl	4bd4 <strlen@plt>
    fd48:	mov	r4, r0
    fd4c:	add	r0, sp, #152	; 0x98
    fd50:	mov	r1, #20
    fd54:	vst1.64	{d8-d9}, [r0], r1
    fd58:	mov	r1, #0
    fd5c:	str	r1, [r0]
    fd60:	str	r1, [sp, #168]	; 0xa8
    fd64:	ldrb	r0, [r6, #308]!	; 0x134
    fd68:	cmp	r0, #0
    fd6c:	beq	fdb8 <xport_begin_data+0x8ac>
    fd70:	mov	r0, #2
    fd74:	add	r2, sp, #152	; 0x98
    fd78:	add	r3, sp, #148	; 0x94
    fd7c:	str	r0, [sp, #100]	; 0x64
    fd80:	mov	r0, #8
    fd84:	str	r0, [sp, #148]	; 0x94
    fd88:	add	r0, sp, #100	; 0x64
    fd8c:	str	r0, [sp]
    fd90:	mov	r0, r6
    fd94:	ldr	r1, [pc, #588]	; ffe8 <xport_begin_data+0xadc>
    fd98:	add	r1, pc, r1
    fd9c:	bl	4c58 <__isoc99_sscanf@plt>
    fda0:	cmp	r0, #0
    fda4:	ble	ff78 <xport_begin_data+0xa6c>
    fda8:	add	r0, sp, #152	; 0x98
    fdac:	bl	4bd4 <strlen@plt>
    fdb0:	cmp	r0, #9
    fdb4:	bge	fe24 <xport_begin_data+0x918>
    fdb8:	cmp	r9, #41	; 0x29
    fdbc:	bcc	feec <xport_begin_data+0x9e0>
    fdc0:	add	r0, r8, #1
    fdc4:	strh	r9, [sp, #104]	; 0x68
    fdc8:	strh	r4, [sp, #102]	; 0x66
    fdcc:	strh	r0, [sp, #100]	; 0x64
    fdd0:	bl	48b0 <machine_is_little_endian@plt>
    fdd4:	cmp	r0, #0
    fdd8:	beq	fe00 <xport_begin_data+0x8f4>
    fddc:	ldrh	r0, [sp, #100]	; 0x64
    fde0:	bl	48a4 <byteswap2@plt>
    fde4:	strh	r0, [sp, #100]	; 0x64
    fde8:	ldrh	r0, [sp, #102]	; 0x66
    fdec:	bl	48a4 <byteswap2@plt>
    fdf0:	strh	r0, [sp, #102]	; 0x66
    fdf4:	ldrh	r0, [sp, #104]	; 0x68
    fdf8:	bl	48a4 <byteswap2@plt>
    fdfc:	strh	r0, [sp, #104]	; 0x68
    fe00:	mov	r0, sl
    fe04:	add	r1, sp, #100	; 0x64
    fe08:	mov	r2, #6
    fe0c:	bl	4e20 <readstat_write_bytes@plt>
    fe10:	cmp	r0, #0
    fe14:	bne	f78c <xport_begin_data+0x280>
    fe18:	mov	r0, sl
    fe1c:	mov	r1, r5
    fe20:	b	fecc <xport_begin_data+0x9c0>
    fe24:	strh	r9, [sp, #108]	; 0x6c
    fe28:	strh	r0, [sp, #106]	; 0x6a
    fe2c:	strh	r0, [sp, #104]	; 0x68
    fe30:	add	r0, r8, #1
    fe34:	strh	r4, [sp, #102]	; 0x66
    fe38:	strh	r0, [sp, #100]	; 0x64
    fe3c:	bl	48b0 <machine_is_little_endian@plt>
    fe40:	cmp	r0, #0
    fe44:	beq	fe84 <xport_begin_data+0x978>
    fe48:	ldrh	r0, [sp, #100]	; 0x64
    fe4c:	bl	48a4 <byteswap2@plt>
    fe50:	strh	r0, [sp, #100]	; 0x64
    fe54:	ldrh	r0, [sp, #102]	; 0x66
    fe58:	bl	48a4 <byteswap2@plt>
    fe5c:	strh	r0, [sp, #102]	; 0x66
    fe60:	ldrh	r0, [sp, #104]	; 0x68
    fe64:	bl	48a4 <byteswap2@plt>
    fe68:	strh	r0, [sp, #104]	; 0x68
    fe6c:	ldrh	r0, [sp, #106]	; 0x6a
    fe70:	bl	48a4 <byteswap2@plt>
    fe74:	strh	r0, [sp, #106]	; 0x6a
    fe78:	ldrh	r0, [sp, #108]	; 0x6c
    fe7c:	bl	48a4 <byteswap2@plt>
    fe80:	strh	r0, [sp, #108]	; 0x6c
    fe84:	mov	r0, sl
    fe88:	add	r1, sp, #100	; 0x64
    fe8c:	mov	r2, #10
    fe90:	bl	4e20 <readstat_write_bytes@plt>
    fe94:	cmp	r0, #0
    fe98:	bne	f78c <xport_begin_data+0x280>
    fe9c:	mov	r0, sl
    fea0:	mov	r1, r5
    fea4:	bl	4b2c <readstat_write_string@plt>
    fea8:	cmp	r0, #0
    feac:	bne	f78c <xport_begin_data+0x280>
    feb0:	mov	r0, sl
    feb4:	add	r1, sp, #152	; 0x98
    feb8:	bl	4b2c <readstat_write_string@plt>
    febc:	cmp	r0, #0
    fec0:	bne	f78c <xport_begin_data+0x280>
    fec4:	mov	r0, sl
    fec8:	add	r1, sp, #152	; 0x98
    fecc:	bl	4b2c <readstat_write_string@plt>
    fed0:	cmp	r0, #0
    fed4:	bne	f78c <xport_begin_data+0x280>
    fed8:	ldr	r1, [sp, #76]	; 0x4c
    fedc:	mov	r0, sl
    fee0:	bl	4b2c <readstat_write_string@plt>
    fee4:	cmp	r0, #0
    fee8:	bne	f78c <xport_begin_data+0x280>
    feec:	ldr	r0, [sl, #28]
    fef0:	add	r8, r8, #1
    fef4:	cmp	r8, r0
    fef8:	blt	fd1c <xport_begin_data+0x810>
    fefc:	ldr	r3, [pc, #232]	; ffec <xport_begin_data+0xae0>
    ff00:	mov	r0, sl
    ff04:	mov	r1, #32
    ff08:	mov	r2, #80	; 0x50
    ff0c:	add	r3, pc, r3
    ff10:	bl	4ea4 <readstat_write_line_padding@plt>
    ff14:	cmp	r0, #0
    ff18:	bne	f78c <xport_begin_data+0x280>
    ff1c:	ldr	r0, [sl, #8]
    ff20:	vmov.i32	q8, #0	; 0x00000000
    ff24:	mov	r1, #32
    ff28:	add	r2, sp, #152	; 0x98
    ff2c:	cmp	r0, #8
    ff30:	vst1.64	{d16-d17}, [r2], r1
    ff34:	mov	r1, #0
    ff38:	vst1.64	{d16-d17}, [r7]
    ff3c:	str	r1, [r2]
    ff40:	mov	r1, #83	; 0x53
    ff44:	strb	r1, [sp, #154]	; 0x9a
    ff48:	movw	r1, #16975	; 0x424f
    ff4c:	strh	r1, [sp, #152]	; 0x98
    ff50:	bne	ff68 <xport_begin_data+0xa5c>
    ff54:	mov	r0, #56	; 0x38
    ff58:	strh	r0, [sp, #156]	; 0x9c
    ff5c:	movw	r0, #16975	; 0x424f
    ff60:	movt	r0, #22099	; 0x5653
    ff64:	str	r0, [sp, #152]	; 0x98
    ff68:	add	r1, sp, #152	; 0x98
    ff6c:	mov	r0, sl
    ff70:	bl	100a4 <xport_write_header_record>
    ff74:	b	f78c <xport_begin_data+0x280>
    ff78:	mov	r0, #11
    ff7c:	b	f78c <xport_begin_data+0x280>
    ff80:	.word	0x00034d60
    ff84:	.word	0x00014f3b
    ff88:	.word	0x00015060
    ff8c:	.word	0x000152a6
    ff90:	.word	0x00014f63
    ff94:	.word	0x00014f5a
    ff98:	.word	0x00014f5b
    ff9c:	.word	0x00014f5f
    ffa0:	.word	0x00014efd
    ffa4:	.word	0x00014fc0
    ffa8:	.word	0x00014f94
    ffac:	.word	0x0001519a
    ffb0:	.word	0x00014e3e
    ffb4:	.word	0x00014e3a
    ffb8:	.word	0x00014e32
    ffbc:	.word	0x00014df6
    ffc0:	.word	0x00014df2
    ffc4:	.word	0x00014d8d
    ffc8:	.word	0x00014dab
    ffcc:	.word	0x00014dbe
    ffd0:	.word	0x00014e60
    ffd4:	.word	0x00014a62
    ffd8:	.word	0x00014cbe
    ffdc:	.word	0x00014c7e
    ffe0:	.word	0x00014a20
    ffe4:	.word	0x0001490b
    ffe8:	.word	0x00014752
    ffec:	.word	0x000149ca

0000fff0 <xport_end_data>:
    fff0:	ldr	r3, [pc, #12]	; 10004 <xport_end_data+0x14>
    fff4:	mov	r1, #32
    fff8:	mov	r2, #80	; 0x50
    fffc:	add	r3, pc, r3
   10000:	b	4ea4 <readstat_write_line_padding@plt>
   10004:	.word	0x000148da

00010008 <xport_write_row>:
   10008:	push	{fp, lr}
   1000c:	mov	fp, sp
   10010:	sub	sp, sp, #8
   10014:	ldr	r3, [pc, #20]	; 10030 <xport_write_row+0x28>
   10018:	add	r3, pc, r3
   1001c:	str	r3, [sp]
   10020:	mov	r3, #80	; 0x50
   10024:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   10028:	mov	sp, fp
   1002c:	pop	{fp, pc}
   10030:	.word	0x000148be

00010034 <xport_write_record>:
   10034:	push	{r4, r5, fp, lr}
   10038:	add	fp, sp, #8
   1003c:	sub	sp, sp, #8
   10040:	mov	r4, r0
   10044:	mov	r0, r1
   10048:	mov	r5, r1
   1004c:	bl	4bd4 <strlen@plt>
   10050:	mov	r2, r0
   10054:	ldr	r0, [pc, #64]	; 1009c <xport_write_record+0x68>
   10058:	mov	r1, r5
   1005c:	mov	r3, #80	; 0x50
   10060:	add	r0, pc, r0
   10064:	str	r0, [sp]
   10068:	mov	r0, r4
   1006c:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   10070:	cmp	r0, #0
   10074:	subne	sp, fp, #8
   10078:	popne	{r4, r5, fp, pc}
   1007c:	ldr	r3, [pc, #28]	; 100a0 <xport_write_record+0x6c>
   10080:	mov	r0, r4
   10084:	mov	r1, #32
   10088:	mov	r2, #80	; 0x50
   1008c:	add	r3, pc, r3
   10090:	sub	sp, fp, #8
   10094:	pop	{r4, r5, fp, lr}
   10098:	b	4ea4 <readstat_write_line_padding@plt>
   1009c:	.word	0x00014876
   100a0:	.word	0x0001484a

000100a4 <xport_write_header_record>:
   100a4:	push	{r4, r5, r6, r7, fp, lr}
   100a8:	add	fp, sp, #16
   100ac:	sub	sp, sp, #112	; 0x70
   100b0:	mov	r3, r1
   100b4:	mov	r7, r0
   100b8:	ldr	r0, [r1, #12]
   100bc:	ldr	r1, [r1, #16]
   100c0:	ldr	r4, [r3, #28]
   100c4:	ldr	r6, [r3, #32]
   100c8:	ldr	r2, [r3, #20]
   100cc:	ldr	r5, [r3, #24]
   100d0:	stm	sp, {r0, r1, r2, r5}
   100d4:	add	r5, sp, #31
   100d8:	mov	r1, #81	; 0x51
   100dc:	str	r4, [sp, #16]
   100e0:	str	r6, [sp, #20]
   100e4:	mov	r0, r5
   100e8:	ldr	r2, [pc, #24]	; 10108 <xport_write_header_record+0x64>
   100ec:	add	r2, pc, r2
   100f0:	bl	4c4c <snprintf@plt>
   100f4:	mov	r0, r7
   100f8:	mov	r1, r5
   100fc:	bl	10034 <xport_write_record>
   10100:	sub	sp, fp, #16
   10104:	pop	{r4, r5, r6, r7, fp, pc}
   10108:	.word	0x0001442c

0001010c <por_ctx_init>:
   1010c:	push	{r4, sl, fp, lr}
   10110:	add	fp, sp, #8
   10114:	mov	r0, #1
   10118:	mov	r1, #660	; 0x294
   1011c:	bl	4778 <calloc@plt>
   10120:	mov	r4, r0
   10124:	mov	r0, #20
   10128:	str	r0, [r4, #608]	; 0x260
   1012c:	mov	r0, #32
   10130:	strb	r0, [r4, #48]	; 0x30
   10134:	mov	r0, #1024	; 0x400
   10138:	bl	4b68 <ck_hash_table_init@plt>
   1013c:	str	r0, [r4, #656]	; 0x290
   10140:	mov	r0, r4
   10144:	pop	{r4, sl, fp, pc}

00010148 <por_ctx_free>:
   10148:	push	{r4, r5, r6, sl, fp, lr}
   1014c:	add	fp, sp, #16
   10150:	mov	r4, r0
   10154:	ldr	r0, [r0, #616]	; 0x268
   10158:	cmp	r0, #0
   1015c:	beq	10164 <por_ctx_free+0x1c>
   10160:	bl	48bc <free@plt>
   10164:	ldr	r0, [r4, #652]	; 0x28c
   10168:	cmp	r0, #0
   1016c:	beq	101b4 <por_ctx_free+0x6c>
   10170:	ldr	r2, [r4, #632]	; 0x278
   10174:	cmp	r2, #1
   10178:	blt	101b0 <por_ctx_free+0x68>
   1017c:	mov	r5, #0
   10180:	mov	r6, #264	; 0x108
   10184:	ldr	r1, [r0, r6]
   10188:	cmp	r1, #0
   1018c:	beq	101a0 <por_ctx_free+0x58>
   10190:	mov	r0, r1
   10194:	bl	48bc <free@plt>
   10198:	ldr	r2, [r4, #632]	; 0x278
   1019c:	ldr	r0, [r4, #652]	; 0x28c
   101a0:	add	r5, r5, #1
   101a4:	add	r6, r6, #280	; 0x118
   101a8:	cmp	r5, r2
   101ac:	blt	10184 <por_ctx_free+0x3c>
   101b0:	bl	48bc <free@plt>
   101b4:	ldr	r0, [r4, #648]	; 0x288
   101b8:	cmp	r0, #0
   101bc:	beq	101fc <por_ctx_free+0xb4>
   101c0:	ldr	r2, [r4, #632]	; 0x278
   101c4:	cmp	r2, #1
   101c8:	blt	101f8 <por_ctx_free+0xb0>
   101cc:	mov	r5, #0
   101d0:	ldr	r1, [r0, r5, lsl #2]
   101d4:	cmp	r1, #0
   101d8:	beq	101ec <por_ctx_free+0xa4>
   101dc:	mov	r0, r1
   101e0:	bl	48bc <free@plt>
   101e4:	ldr	r2, [r4, #632]	; 0x278
   101e8:	ldr	r0, [r4, #648]	; 0x288
   101ec:	add	r5, r5, #1
   101f0:	cmp	r5, r2
   101f4:	blt	101d0 <por_ctx_free+0x88>
   101f8:	bl	48bc <free@plt>
   101fc:	ldr	r0, [r4, #656]	; 0x290
   10200:	cmp	r0, #0
   10204:	beq	1020c <por_ctx_free+0xc4>
   10208:	bl	4c10 <ck_hash_table_free@plt>
   1020c:	ldr	r0, [r4, #612]	; 0x264
   10210:	cmp	r0, #0
   10214:	beq	1021c <por_ctx_free+0xd4>
   10218:	bl	47d8 <iconv_close@plt>
   1021c:	mov	r0, r4
   10220:	pop	{r4, r5, r6, sl, fp, lr}
   10224:	b	48bc <free@plt>

00010228 <por_utf8_encode>:
   10228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1022c:	add	fp, sp, #28
   10230:	sub	sp, sp, #4
   10234:	cmp	r1, #0
   10238:	beq	102e4 <por_utf8_encode+0xbc>
   1023c:	ldr	r9, [fp, #8]
   10240:	mov	sl, r3
   10244:	mov	r8, r2
   10248:	mov	r7, r1
   1024c:	mov	r6, r0
   10250:	mov	r4, #0
   10254:	ldrb	r0, [r6]
   10258:	add	r0, r9, r0, lsl #1
   1025c:	ldrh	r0, [r0]
   10260:	cmp	r0, #0
   10264:	mvneq	r0, #2
   10268:	uxth	r2, r0
   1026c:	cmp	r2, #32
   10270:	bcc	102ec <por_utf8_encode+0xc4>
   10274:	cmp	r2, #127	; 0x7f
   10278:	bhi	10294 <por_utf8_encode+0x6c>
   1027c:	add	r1, r4, #1
   10280:	cmp	r1, sl
   10284:	bhi	102f0 <por_utf8_encode+0xc8>
   10288:	strb	r0, [r8, r4]
   1028c:	mov	r4, r1
   10290:	b	102d4 <por_utf8_encode+0xac>
   10294:	mov	r0, #0
   10298:	cmp	r0, r2, lsr #11
   1029c:	addne	r0, r4, #3
   102a0:	addeq	r0, r4, #2
   102a4:	cmp	r0, sl
   102a8:	bhi	102f0 <por_utf8_encode+0xc8>
   102ac:	ldr	r1, [pc, #72]	; 102fc <por_utf8_encode+0xd4>
   102b0:	add	r5, r8, r4
   102b4:	mov	r0, r5
   102b8:	add	r1, pc, r1
   102bc:	bl	4db4 <sprintf@plt>
   102c0:	cmp	r0, #0
   102c4:	movle	r0, #32
   102c8:	strble	r0, [r5]
   102cc:	movle	r0, #1
   102d0:	add	r4, r0, r4
   102d4:	add	r6, r6, #1
   102d8:	subs	r7, r7, #1
   102dc:	bne	10254 <por_utf8_encode+0x2c>
   102e0:	b	102f0 <por_utf8_encode+0xc8>
   102e4:	mov	r4, #0
   102e8:	b	102f0 <por_utf8_encode+0xc8>
   102ec:	mvn	r4, #0
   102f0:	mov	r0, r4
   102f4:	sub	sp, fp, #28
   102f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   102fc:	.word	0x00014409

00010300 <por_utf8_decode>:
   10300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10304:	add	fp, sp, #28
   10308:	sub	sp, sp, #12
   1030c:	mov	r6, r0
   10310:	mov	r0, #0
   10314:	cmp	r3, #0
   10318:	str	r0, [sp, #8]
   1031c:	str	r0, [sp, #4]
   10320:	beq	103d4 <por_utf8_decode+0xd4>
   10324:	ldr	sl, [fp, #8]
   10328:	mov	r4, r3
   1032c:	mov	r5, r2
   10330:	mov	r8, #0
   10334:	add	r7, sp, #4
   10338:	mov	r9, #0
   1033c:	ldrb	r0, [r6]
   10340:	sub	r1, r0, #32
   10344:	uxtb	r1, r1
   10348:	cmp	r1, #94	; 0x5e
   1034c:	bhi	10368 <por_utf8_decode+0x68>
   10350:	ldrb	r0, [sl, r0]
   10354:	cmp	r0, #0
   10358:	beq	103d0 <por_utf8_decode+0xd0>
   1035c:	strb	r0, [r5, r9]
   10360:	mov	r0, #1
   10364:	b	103b4 <por_utf8_decode+0xb4>
   10368:	ldr	r1, [pc, #108]	; 103dc <por_utf8_decode+0xdc>
   1036c:	mov	r0, r6
   10370:	add	r2, sp, #8
   10374:	mov	r3, r7
   10378:	add	r1, pc, r1
   1037c:	bl	4c58 <__isoc99_sscanf@plt>
   10380:	mov	r1, r0
   10384:	mvn	r0, #0
   10388:	cmp	r1, #0
   1038c:	beq	103d4 <por_utf8_decode+0xd4>
   10390:	ldr	r1, [sp, #8]
   10394:	ldr	r2, [fp, #12]
   10398:	cmp	r1, r2
   1039c:	bcs	103d4 <por_utf8_decode+0xd4>
   103a0:	ldrb	r1, [sl, r1]
   103a4:	cmp	r1, #0
   103a8:	beq	103d4 <por_utf8_decode+0xd4>
   103ac:	strb	r1, [r5, r9]
   103b0:	ldr	r0, [sp, #4]
   103b4:	add	r9, r9, #1
   103b8:	add	r6, r6, r0
   103bc:	str	r8, [sp, #4]
   103c0:	cmp	r4, r9
   103c4:	mov	r0, r9
   103c8:	bne	1033c <por_utf8_decode+0x3c>
   103cc:	b	103d4 <por_utf8_decode+0xd4>
   103d0:	mvn	r0, #0
   103d4:	sub	sp, fp, #28
   103d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   103dc:	.word	0x0001434d

000103e0 <readstat_por_parse_double>:
   103e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   103e4:	add	fp, sp, #28
   103e8:	sub	sp, sp, #4
   103ec:	vpush	{d8-d11}
   103f0:	sub	sp, sp, #40	; 0x28
   103f4:	sub	sp, sp, #1024	; 0x400
   103f8:	mov	r9, r0
   103fc:	cmp	r1, #0
   10400:	str	r3, [sp, #16]
   10404:	str	r2, [sp, #20]
   10408:	str	r0, [sp, #24]
   1040c:	str	r1, [sp, #12]
   10410:	beq	10708 <readstat_por_parse_double+0x328>
   10414:	add	r1, r9, r1
   10418:	vmov.f64	d16, #62	; 0x41f00000  30.0
   1041c:	vldr	d17, [pc, #988]	; 10800 <readstat_por_parse_double+0x420>
   10420:	vmov.i32	d9, #0	; 0x00000000
   10424:	vmov.i32	d10, #0	; 0x00000000
   10428:	vmov.i32	d11, #0	; 0x00000000
   1042c:	vmov.i32	d19, #0	; 0x00000000
   10430:	vmov.i32	d8, #0	; 0x00000000
   10434:	mov	ip, #0
   10438:	mov	r6, #1
   1043c:	mvn	lr, #1
   10440:	mov	r8, #1
   10444:	mov	r0, #0
   10448:	str	r1, [sp, #28]
   1044c:	ldr	r7, [pc, #948]	; 10808 <readstat_por_parse_double+0x428>
   10450:	str	r0, [sp, #32]
   10454:	vmov.f64	d18, d16
   10458:	add	r7, pc, r7
   1045c:	ldr	r0, [pc, #936]	; 1080c <readstat_por_parse_double+0x42c>
   10460:	add	r0, pc, r0
   10464:	ldrb	r2, [r0, r8]
   10468:	ldr	r0, [pc, #928]	; 10810 <readstat_por_parse_double+0x430>
   1046c:	ldr	r1, [pc, #928]	; 10814 <readstat_por_parse_double+0x434>
   10470:	add	r0, pc, r0
   10474:	add	r1, pc, r1
   10478:	ldrb	r0, [r0, r8]
   1047c:	add	r4, r1, r0
   10480:	movw	r0, #2414	; 0x96e
   10484:	tst	r6, r0, lsr r8
   10488:	bne	10494 <readstat_por_parse_double+0xb4>
   1048c:	mov	r5, r4
   10490:	b	104f4 <readstat_por_parse_double+0x114>
   10494:	ldr	r0, [pc, #892]	; 10818 <readstat_por_parse_double+0x438>
   10498:	add	r0, pc, r0
   1049c:	ldrb	sl, [r0, r8]
   104a0:	add	r5, r4, sl
   104a4:	sub	r1, r5, #1
   104a8:	cmp	r1, r4
   104ac:	bcc	104e4 <readstat_por_parse_double+0x104>
   104b0:	ldrb	r6, [r9]
   104b4:	mov	r3, r4
   104b8:	sub	r0, r1, r3
   104bc:	mov	r7, r3
   104c0:	ldrb	r0, [r7, r0, asr #1]!
   104c4:	cmp	r6, r0
   104c8:	bcs	104d4 <readstat_por_parse_double+0xf4>
   104cc:	sub	r1, r7, #1
   104d0:	b	104dc <readstat_por_parse_double+0xfc>
   104d4:	bls	10560 <readstat_por_parse_double+0x180>
   104d8:	add	r3, r7, #1
   104dc:	cmp	r1, r3
   104e0:	bcs	104b8 <readstat_por_parse_double+0xd8>
   104e4:	ldr	r7, [pc, #816]	; 1081c <readstat_por_parse_double+0x43c>
   104e8:	add	r2, sl, r2
   104ec:	mov	r6, #1
   104f0:	add	r7, pc, r7
   104f4:	movw	r0, #4090	; 0xffa
   104f8:	tst	r6, r0, lsr r8
   104fc:	beq	10588 <readstat_por_parse_double+0x1a8>
   10500:	ldr	r0, [pc, #792]	; 10820 <readstat_por_parse_double+0x440>
   10504:	add	r0, pc, r0
   10508:	ldrb	r7, [r0, r8]
   1050c:	add	r0, r5, r7, lsl #1
   10510:	sub	r0, r0, #2
   10514:	cmp	r0, r5
   10518:	bcc	1057c <readstat_por_parse_double+0x19c>
   1051c:	ldrb	r1, [r9]
   10520:	mov	r6, r5
   10524:	sub	r3, r0, r6
   10528:	and	r4, lr, r3, asr #1
   1052c:	mov	r3, r6
   10530:	ldrb	r4, [r3, r4]!
   10534:	cmp	r1, r4
   10538:	bcs	10544 <readstat_por_parse_double+0x164>
   1053c:	sub	r0, r3, #2
   10540:	b	10554 <readstat_por_parse_double+0x174>
   10544:	ldrb	r4, [r3, #1]
   10548:	cmp	r1, r4
   1054c:	bls	10570 <readstat_por_parse_double+0x190>
   10550:	add	r6, r3, #2
   10554:	cmp	r0, r6
   10558:	bcs	10524 <readstat_por_parse_double+0x144>
   1055c:	b	10578 <readstat_por_parse_double+0x198>
   10560:	sub	r0, r2, r4
   10564:	mov	r6, #1
   10568:	add	r2, r0, r7
   1056c:	b	10580 <readstat_por_parse_double+0x1a0>
   10570:	sub	r0, r3, r5
   10574:	asr	r7, r0, #1
   10578:	mov	r6, #1
   1057c:	add	r2, r7, r2
   10580:	ldr	r7, [pc, #668]	; 10824 <readstat_por_parse_double+0x444>
   10584:	add	r7, pc, r7
   10588:	ldr	r0, [pc, #664]	; 10828 <readstat_por_parse_double+0x448>
   1058c:	ldr	r1, [pc, #664]	; 1082c <readstat_por_parse_double+0x44c>
   10590:	add	r0, pc, r0
   10594:	add	r1, pc, r1
   10598:	ldrb	r0, [r0, r2]
   1059c:	ldrb	r8, [r1, r2]
   105a0:	cmp	r0, #0
   105a4:	beq	106d0 <readstat_por_parse_double+0x2f0>
   105a8:	ldrb	r2, [r7, r0]
   105ac:	cmp	r2, #0
   105b0:	beq	106d0 <readstat_por_parse_double+0x2f0>
   105b4:	add	r0, r7, r0
   105b8:	add	r3, r0, #1
   105bc:	ldrb	r0, [r3]
   105c0:	cmp	r0, #10
   105c4:	bhi	106c4 <readstat_por_parse_double+0x2e4>
   105c8:	add	r1, pc, #4
   105cc:	ldr	r0, [r1, r0, lsl #2]
   105d0:	add	pc, r1, r0
   105d4:	.word	0x00000034
   105d8:	.word	0x00000050
   105dc:	.word	0x0000006c
   105e0:	.word	0x00000074
   105e4:	.word	0x0000002c
   105e8:	.word	0x0000007c
   105ec:	.word	0x00000084
   105f0:	.word	0x00000090
   105f4:	.word	0x0000002c
   105f8:	.word	0x00000098
   105fc:	.word	0x00000124
   10600:	mov	ip, #1
   10604:	b	106c4 <readstat_por_parse_double+0x2e4>
   10608:	ldrb	r0, [r9]
   1060c:	sub	r1, r0, #48	; 0x30
   10610:	uxtb	r4, r1
   10614:	cmp	r4, #9
   10618:	bhi	10674 <readstat_por_parse_double+0x294>
   1061c:	vmov	s0, r1
   10620:	b	1068c <readstat_por_parse_double+0x2ac>
   10624:	ldrb	r0, [r9]
   10628:	sub	r1, r0, #48	; 0x30
   1062c:	uxtb	r4, r1
   10630:	cmp	r4, #9
   10634:	bhi	1069c <readstat_por_parse_double+0x2bc>
   10638:	vmov	s0, r1
   1063c:	b	106b4 <readstat_por_parse_double+0x2d4>
   10640:	vmov.i32	d19, #0	; 0x00000000
   10644:	b	106c4 <readstat_por_parse_double+0x2e4>
   10648:	vmov.i32	d9, #0	; 0x00000000
   1064c:	b	106c4 <readstat_por_parse_double+0x2e4>
   10650:	vorr	d10, d19, d19
   10654:	b	106c4 <readstat_por_parse_double+0x2e4>
   10658:	mov	r0, #1
   1065c:	str	r0, [sp, #32]
   10660:	b	106c4 <readstat_por_parse_double+0x2e4>
   10664:	vorr	d11, d19, d19
   10668:	b	106c4 <readstat_por_parse_double+0x2e4>
   1066c:	vorr	d8, d17, d17
   10670:	b	106c4 <readstat_por_parse_double+0x2e4>
   10674:	sub	r1, r0, #65	; 0x41
   10678:	uxtb	r1, r1
   1067c:	cmp	r1, #19
   10680:	bhi	106c4 <readstat_por_parse_double+0x2e4>
   10684:	sub	r0, r0, #55	; 0x37
   10688:	vmov	s0, r0
   1068c:	vcvt.f64.s32	d20, s0
   10690:	vmla.f64	d20, d19, d16
   10694:	vmov.f64	d19, d20
   10698:	b	106c4 <readstat_por_parse_double+0x2e4>
   1069c:	sub	r1, r0, #65	; 0x41
   106a0:	uxtb	r1, r1
   106a4:	cmp	r1, #19
   106a8:	bhi	106c0 <readstat_por_parse_double+0x2e0>
   106ac:	sub	r0, r0, #55	; 0x37
   106b0:	vmov	s0, r0
   106b4:	vcvt.f64.s32	d20, s0
   106b8:	vdiv.f64	d20, d20, d18
   106bc:	vadd.f64	d9, d9, d20
   106c0:	vmul.f64	d18, d18, d16
   106c4:	subs	r2, r2, #1
   106c8:	add	r3, r3, #1
   106cc:	bne	105bc <readstat_por_parse_double+0x1dc>
   106d0:	mov	sl, #0
   106d4:	cmp	r8, #0
   106d8:	beq	107f4 <readstat_por_parse_double+0x414>
   106dc:	ldr	r0, [sp, #28]
   106e0:	add	r9, r9, #1
   106e4:	cmp	r9, r0
   106e8:	bne	1045c <readstat_por_parse_double+0x7c>
   106ec:	ldr	r9, [sp, #28]
   106f0:	mov	r4, ip
   106f4:	b	1072c <readstat_por_parse_double+0x34c>
   106f8:	mov	r4, ip
   106fc:	add	r9, r9, #1
   10700:	mov	sl, #1
   10704:	b	1072c <readstat_por_parse_double+0x34c>
   10708:	mov	r0, #0
   1070c:	vmov.i32	d9, #0	; 0x00000000
   10710:	mov	r4, #0
   10714:	mov	r8, #1
   10718:	vmov.i32	d10, #0	; 0x00000000
   1071c:	vmov.i32	d11, #0	; 0x00000000
   10720:	mov	sl, #0
   10724:	vmov.i32	d8, #0	; 0x00000000
   10728:	str	r0, [sp, #32]
   1072c:	vorr	d0, d8, d8
   10730:	bl	4d00 <__isnan@plt>
   10734:	cmp	r0, #0
   10738:	bne	10774 <readstat_por_parse_double+0x394>
   1073c:	ldr	r0, [sp, #32]
   10740:	vneg.f64	d16, d11
   10744:	vadd.f64	d8, d9, d10
   10748:	cmp	r0, #0
   1074c:	vseleq.f64	d1, d11, d16
   10750:	vcmp.f64	d1, #0.0
   10754:	vmrs	APSR_nzcv, fpscr
   10758:	beq	10768 <readstat_por_parse_double+0x388>
   1075c:	vmov.f64	d0, #62	; 0x41f00000  30.0
   10760:	bl	4970 <pow@plt>
   10764:	vmul.f64	d8, d8, d0
   10768:	vneg.f64	d16, d8
   1076c:	cmp	r4, #0
   10770:	vseleq.f64	d8, d8, d16
   10774:	cmp	sl, #0
   10778:	beq	10794 <readstat_por_parse_double+0x3b4>
   1077c:	ldr	r0, [sp, #20]
   10780:	cmp	r0, #0
   10784:	vstrne	d8, [r0]
   10788:	ldr	r0, [sp, #24]
   1078c:	sub	r7, r9, r0
   10790:	b	107e0 <readstat_por_parse_double+0x400>
   10794:	ldr	r6, [sp, #16]
   10798:	mvn	r7, #0
   1079c:	cmp	r6, #0
   107a0:	beq	107e0 <readstat_por_parse_double+0x400>
   107a4:	ldr	r0, [sp, #12]
   107a8:	ldr	r4, [fp, #8]
   107ac:	add	r5, sp, #36	; 0x24
   107b0:	mov	r1, #1024	; 0x400
   107b4:	str	r0, [sp]
   107b8:	ldr	r0, [sp, #24]
   107bc:	stmib	sp, {r0, r8}
   107c0:	sub	r3, r9, r0
   107c4:	mov	r0, r5
   107c8:	ldr	r2, [pc, #96]	; 10830 <readstat_por_parse_double+0x450>
   107cc:	add	r2, pc, r2
   107d0:	bl	4c4c <snprintf@plt>
   107d4:	mov	r0, r5
   107d8:	mov	r1, r4
   107dc:	blx	r6
   107e0:	mov	r0, r7
   107e4:	sub	sp, fp, #64	; 0x40
   107e8:	vpop	{d8-d11}
   107ec:	add	sp, sp, #4
   107f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107f4:	mov	r4, ip
   107f8:	mov	r8, #0
   107fc:	b	1072c <readstat_por_parse_double+0x34c>
   10800:	.word	0x00000000
   10804:	.word	0x7ff80000
   10808:	.word	0x0001433f
   1080c:	.word	0x000142b0
   10810:	.word	0x00014293
   10814:	.word	0x00014257
   10818:	.word	0x00014285
   1081c:	.word	0x000142a7
   10820:	.word	0x00014226
   10824:	.word	0x00014213
   10828:	.word	0x000141d7
   1082c:	.word	0x000141a3
   10830:	.word	0x00013fec
   10834:	.word	0x00000000

00010838 <read_version_and_timestamp>:
   10838:	push	{r4, r5, r6, sl, fp, lr}
   1083c:	add	fp, sp, #16
   10840:	sub	sp, sp, #312	; 0x138
   10844:	vmov.i32	q8, #0	; 0x00000000
   10848:	add	r6, sp, #8
   1084c:	mov	r4, r0
   10850:	mov	r2, #1
   10854:	add	r0, r6, #28
   10858:	mov	r1, r6
   1085c:	add	r5, r6, #16
   10860:	vst1.32	{d16-d17}, [r0]
   10864:	mov	r0, #32
   10868:	vst1.64	{d16-d17}, [r5]
   1086c:	vst1.64	{d16-d17}, [r1], r0
   10870:	mvn	r0, #0
   10874:	str	r0, [r1]
   10878:	add	r1, sp, #7
   1087c:	mov	r0, r4
   10880:	bl	109bc <read_bytes>
   10884:	mov	r1, r0
   10888:	mov	r0, #2
   1088c:	cmp	r1, #1
   10890:	bne	109ac <read_version_and_timestamp+0x174>
   10894:	mov	r0, #0
   10898:	add	r1, sp, #52	; 0x34
   1089c:	sub	r3, fp, #20
   108a0:	mov	r2, #256	; 0x100
   108a4:	str	r0, [fp, #-20]	; 0xffffffec
   108a8:	mov	r0, r4
   108ac:	bl	11c60 <maybe_read_string>
   108b0:	mov	r1, r0
   108b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   108b8:	cmp	r0, #0
   108bc:	mov	r0, r1
   108c0:	movwne	r0, #5
   108c4:	cmp	r1, #0
   108c8:	movne	r0, r1
   108cc:	cmp	r0, #0
   108d0:	bne	109ac <read_version_and_timestamp+0x174>
   108d4:	add	r0, r6, #12
   108d8:	add	r2, r6, #20
   108dc:	mov	r3, r5
   108e0:	str	r0, [sp]
   108e4:	add	r0, sp, #52	; 0x34
   108e8:	ldr	r1, [pc, #196]	; 109b4 <read_version_and_timestamp+0x17c>
   108ec:	add	r1, pc, r1
   108f0:	bl	4c58 <__isoc99_sscanf@plt>
   108f4:	mov	r1, r0
   108f8:	mov	r0, #29
   108fc:	cmp	r1, #3
   10900:	bne	109ac <read_version_and_timestamp+0x174>
   10904:	mov	r0, #0
   10908:	add	r1, sp, #52	; 0x34
   1090c:	sub	r3, fp, #20
   10910:	mov	r2, #256	; 0x100
   10914:	str	r0, [fp, #-20]	; 0xffffffec
   10918:	mov	r0, r4
   1091c:	bl	11c60 <maybe_read_string>
   10920:	mov	r1, r0
   10924:	ldr	r0, [fp, #-20]	; 0xffffffec
   10928:	cmp	r0, #0
   1092c:	mov	r0, r1
   10930:	movwne	r0, #5
   10934:	cmp	r1, #0
   10938:	movne	r0, r1
   1093c:	cmp	r0, #0
   10940:	bne	109ac <read_version_and_timestamp+0x174>
   10944:	str	r6, [sp]
   10948:	add	r2, r6, #8
   1094c:	orr	r3, r6, #4
   10950:	add	r0, sp, #52	; 0x34
   10954:	ldr	r1, [pc, #92]	; 109b8 <read_version_and_timestamp+0x180>
   10958:	add	r1, pc, r1
   1095c:	bl	4c58 <__isoc99_sscanf@plt>
   10960:	cmp	r0, #3
   10964:	mov	r0, #29
   10968:	bne	109ac <read_version_and_timestamp+0x174>
   1096c:	ldr	r0, [sp, #24]
   10970:	ldr	r1, [sp, #28]
   10974:	movw	r2, #1900	; 0x76c
   10978:	sub	r1, r1, r2
   1097c:	sub	r0, r0, #1
   10980:	str	r1, [sp, #28]
   10984:	str	r0, [sp, #24]
   10988:	add	r0, sp, #8
   1098c:	bl	4850 <mktime@plt>
   10990:	ldrb	r1, [sp, #7]
   10994:	add	r1, r4, r1, lsl #1
   10998:	ldrh	r1, [r1, #94]	; 0x5e
   1099c:	str	r0, [r4, #56]	; 0x38
   109a0:	mov	r0, #0
   109a4:	sub	r1, r1, #65	; 0x41
   109a8:	str	r1, [r4, #60]	; 0x3c
   109ac:	sub	sp, fp, #16
   109b0:	pop	{r4, r5, r6, sl, fp, pc}
   109b4:	.word	0x00013efd
   109b8:	.word	0x00013e9e

000109bc <read_bytes>:
   109bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109c0:	add	fp, sp, #28
   109c4:	sub	sp, sp, #4
   109c8:	mov	r9, r1
   109cc:	cmp	r2, #1
   109d0:	mov	r7, r1
   109d4:	blt	10ab4 <read_bytes+0xf8>
   109d8:	ldr	r4, [r0, #44]	; 0x2c
   109dc:	mov	r5, r0
   109e0:	add	r6, r9, r2
   109e4:	add	r8, sp, #3
   109e8:	mov	sl, #0
   109ec:	mov	r7, r9
   109f0:	ldr	r0, [r5, #52]	; 0x34
   109f4:	cmp	r0, #0
   109f8:	beq	10a10 <read_bytes+0x54>
   109fc:	ldrb	r0, [r5, #48]	; 0x30
   10a00:	strb	r0, [r7], #1
   10a04:	ldr	r0, [r5, #52]	; 0x34
   10a08:	sub	r0, r0, #1
   10a0c:	b	10a84 <read_bytes+0xc8>
   10a10:	ldr	r3, [r4, #12]
   10a14:	ldr	r2, [r4, #20]
   10a18:	mov	r0, r8
   10a1c:	mov	r1, #1
   10a20:	blx	r3
   10a24:	cmn	r0, #1
   10a28:	beq	10ab8 <read_bytes+0xfc>
   10a2c:	cmp	r0, #0
   10a30:	beq	10ab4 <read_bytes+0xf8>
   10a34:	ldrb	r0, [sp, #3]
   10a38:	cmp	r0, #10
   10a3c:	beq	10a78 <read_bytes+0xbc>
   10a40:	cmp	r0, #13
   10a44:	bne	10a94 <read_bytes+0xd8>
   10a48:	ldr	r3, [r4, #12]
   10a4c:	ldr	r2, [r4, #20]
   10a50:	mov	r0, r8
   10a54:	mov	r1, #1
   10a58:	blx	r3
   10a5c:	add	r1, r0, #1
   10a60:	mvn	r0, #0
   10a64:	cmp	r1, #2
   10a68:	bcc	10ab8 <read_bytes+0xfc>
   10a6c:	ldrb	r1, [sp, #3]
   10a70:	cmp	r1, #10
   10a74:	bne	10ab8 <read_bytes+0xfc>
   10a78:	ldr	r0, [r5, #40]	; 0x28
   10a7c:	str	sl, [r5, #40]	; 0x28
   10a80:	rsb	r0, r0, #80	; 0x50
   10a84:	str	r0, [r5, #52]	; 0x34
   10a88:	cmp	r7, r6
   10a8c:	bcc	109f0 <read_bytes+0x34>
   10a90:	b	10ab4 <read_bytes+0xf8>
   10a94:	ldr	r1, [r5, #40]	; 0x28
   10a98:	cmp	r1, #80	; 0x50
   10a9c:	beq	10ac0 <read_bytes+0x104>
   10aa0:	strb	r0, [r7], #1
   10aa4:	ldr	r0, [r5, #40]	; 0x28
   10aa8:	add	r0, r0, #1
   10aac:	str	r0, [r5, #40]	; 0x28
   10ab0:	b	10a88 <read_bytes+0xcc>
   10ab4:	sub	r0, r7, r9
   10ab8:	sub	sp, fp, #28
   10abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac0:	mvn	r0, #0
   10ac4:	b	10ab8 <read_bytes+0xfc>

00010ac8 <handle_variables>:
   10ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10acc:	add	fp, sp, #28
   10ad0:	sub	sp, sp, #260	; 0x104
   10ad4:	ldr	r8, [r0, #632]	; 0x278
   10ad8:	mov	r9, r0
   10adc:	cmp	r8, #1
   10ae0:	blt	10b9c <handle_variables+0xd4>
   10ae4:	mov	r7, #0
   10ae8:	mov	sl, #0
   10aec:	mov	r6, #0
   10af0:	ldr	r0, [r9, #652]	; 0x28c
   10af4:	mov	r1, sl
   10af8:	add	r5, r0, r7
   10afc:	str	r6, [r5, #8]
   10b00:	mov	r0, r5
   10b04:	ldr	r2, [r9, #612]	; 0x264
   10b08:	bl	4c40 <spss_init_variable_for_info@plt>
   10b0c:	ldr	r1, [r9, #648]	; 0x288
   10b10:	str	r0, [r1, r6, lsl #2]
   10b14:	mov	r0, sp
   10b18:	mov	r1, #256	; 0x100
   10b1c:	ldr	r3, [r5, #4]
   10b20:	ldr	r2, [pc, #256]	; 10c28 <handle_variables+0x160>
   10b24:	add	r2, pc, r2
   10b28:	bl	4c4c <snprintf@plt>
   10b2c:	ldr	r4, [r9, #8]
   10b30:	cmp	r4, #0
   10b34:	beq	10b70 <handle_variables+0xa8>
   10b38:	ldr	r0, [r5, #4]
   10b3c:	mvn	r1, #0
   10b40:	ldr	r3, [r9, #36]	; 0x24
   10b44:	subs	r2, r0, r1
   10b48:	mov	r0, sp
   10b4c:	movne	r2, r0
   10b50:	ldr	r0, [r9, #648]	; 0x288
   10b54:	ldr	r1, [r0, r6, lsl #2]
   10b58:	mov	r0, r6
   10b5c:	blx	r4
   10b60:	cmp	r0, #2
   10b64:	beq	10b78 <handle_variables+0xb0>
   10b68:	cmp	r0, #1
   10b6c:	beq	10bfc <handle_variables+0x134>
   10b70:	add	sl, sl, #1
   10b74:	b	10b88 <handle_variables+0xc0>
   10b78:	ldr	r0, [r9, #648]	; 0x288
   10b7c:	mov	r1, #1
   10b80:	ldr	r0, [r0, r6, lsl #2]
   10b84:	str	r1, [r0, #2144]	; 0x860
   10b88:	ldr	r8, [r9, #632]	; 0x278
   10b8c:	add	r6, r6, #1
   10b90:	add	r7, r7, #280	; 0x118
   10b94:	cmp	r6, r8
   10b98:	blt	10af0 <handle_variables+0x28>
   10b9c:	ldr	r4, [r9, #12]
   10ba0:	mov	r0, #0
   10ba4:	cmp	r4, #0
   10ba8:	beq	10c20 <handle_variables+0x158>
   10bac:	mov	r5, r9
   10bb0:	ldrb	r1, [r5, #64]!	; 0x40
   10bb4:	cmp	r1, #0
   10bb8:	beq	10c20 <handle_variables+0x158>
   10bbc:	cmp	r8, #1
   10bc0:	blt	10c20 <handle_variables+0x158>
   10bc4:	ldr	r0, [r9, #652]	; 0x28c
   10bc8:	mov	r7, #0
   10bcc:	add	r6, r0, #187	; 0xbb
   10bd0:	mov	r0, r6
   10bd4:	mov	r1, r5
   10bd8:	bl	4808 <strcmp@plt>
   10bdc:	cmp	r0, #0
   10be0:	beq	10c04 <handle_variables+0x13c>
   10be4:	add	r7, r7, #1
   10be8:	add	r6, r6, #280	; 0x118
   10bec:	cmp	r7, r8
   10bf0:	blt	10bd0 <handle_variables+0x108>
   10bf4:	mov	r0, #0
   10bf8:	b	10c20 <handle_variables+0x158>
   10bfc:	mov	r0, #4
   10c00:	b	10c20 <handle_variables+0x158>
   10c04:	ldr	r0, [r9, #648]	; 0x288
   10c08:	ldr	r1, [r9, #36]	; 0x24
   10c0c:	ldr	r0, [r0, r7, lsl #2]
   10c10:	blx	r4
   10c14:	cmp	r0, #0
   10c18:	movwne	r0, #1
   10c1c:	lsl	r0, r0, #2
   10c20:	sub	sp, fp, #28
   10c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c28:	.word	0x00013cdf

00010c2c <readstat_parse_por>:
   10c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c30:	add	fp, sp, #28
   10c34:	sub	sp, sp, #44	; 0x2c
   10c38:	sub	sp, sp, #3072	; 0xc00
   10c3c:	ldr	sl, [r0, #32]
   10c40:	mov	r7, r2
   10c44:	mov	r5, r1
   10c48:	mov	r6, r0
   10c4c:	add	r4, r0, #16
   10c50:	bl	4e5c <por_ctx_init@plt>
   10c54:	mov	r8, r0
   10c58:	mov	r0, #48	; 0x30
   10c5c:	mov	r1, r6
   10c60:	vld1.32	{d18-d19}, [r4]
   10c64:	vld1.32	{d16-d17}, [r1], r0
   10c68:	add	r0, r8, #16
   10c6c:	str	sl, [r8, #44]	; 0x2c
   10c70:	str	r7, [r8, #36]	; 0x24
   10c74:	mov	r2, r8
   10c78:	vst1.32	{d18-d19}, [r0]
   10c7c:	mov	r0, #640	; 0x280
   10c80:	vst1.32	{d16-d17}, [r2], r0
   10c84:	ldr	r0, [r6, #44]	; 0x2c
   10c88:	str	r0, [r2]
   10c8c:	ldr	r0, [r1]
   10c90:	cmp	r0, #1
   10c94:	strge	r0, [r8, #644]	; 0x284
   10c98:	ldr	r6, [r6, #40]	; 0x28
   10c9c:	cmp	r6, #0
   10ca0:	beq	10ce0 <readstat_parse_por+0xb4>
   10ca4:	ldr	r1, [pc, #3980]	; 11c38 <readstat_parse_por+0x100c>
   10ca8:	mov	r0, r6
   10cac:	add	r1, pc, r1
   10cb0:	bl	4808 <strcmp@plt>
   10cb4:	cmp	r0, #0
   10cb8:	beq	10cd4 <readstat_parse_por+0xa8>
   10cbc:	ldr	r1, [pc, #3960]	; 11c3c <readstat_parse_por+0x1010>
   10cc0:	mov	r0, r6
   10cc4:	add	r1, pc, r1
   10cc8:	bl	4b08 <iconv_open@plt>
   10ccc:	str	r0, [r8, #612]	; 0x264
   10cd0:	b	10cd8 <readstat_parse_por+0xac>
   10cd4:	ldr	r0, [r8, #612]	; 0x264
   10cd8:	cmn	r0, #1
   10cdc:	beq	10e90 <readstat_parse_por+0x264>
   10ce0:	ldr	r2, [sl]
   10ce4:	ldr	r1, [sl, #20]
   10ce8:	mov	r0, r5
   10cec:	blx	r2
   10cf0:	cmn	r0, #1
   10cf4:	beq	10e88 <readstat_parse_por+0x25c>
   10cf8:	ldr	r3, [sl, #8]
   10cfc:	ldr	r2, [sl, #20]
   10d00:	mov	r0, #0
   10d04:	mov	r1, #2
   10d08:	blx	r3
   10d0c:	mov	r9, #15
   10d10:	cmn	r0, #1
   10d14:	str	r0, [r8, #32]
   10d18:	beq	10ea4 <readstat_parse_por+0x278>
   10d1c:	ldr	r3, [sl, #8]
   10d20:	ldr	r2, [sl, #20]
   10d24:	mov	r0, #0
   10d28:	mov	r1, #0
   10d2c:	blx	r3
   10d30:	cmn	r0, #1
   10d34:	beq	10ea4 <readstat_parse_por+0x278>
   10d38:	add	r5, sp, #312	; 0x138
   10d3c:	mov	r0, r8
   10d40:	mov	r2, #200	; 0xc8
   10d44:	mov	r1, r5
   10d48:	bl	109bc <read_bytes>
   10d4c:	cmp	r0, #200	; 0xc8
   10d50:	bne	10ea0 <readstat_parse_por+0x274>
   10d54:	mov	r0, #0
   10d58:	add	r7, r8, #73	; 0x49
   10d5c:	add	r2, r5, #60	; 0x3c
   10d60:	mov	r1, #21
   10d64:	mov	r3, #20
   10d68:	str	r0, [sp]
   10d6c:	mov	r0, r7
   10d70:	bl	4c04 <readstat_convert@plt>
   10d74:	mov	r9, r0
   10d78:	cmp	r0, #0
   10d7c:	bne	10ea4 <readstat_parse_por+0x278>
   10d80:	add	r5, sp, #512	; 0x200
   10d84:	mov	r0, r8
   10d88:	mov	r2, #256	; 0x100
   10d8c:	mov	r1, r5
   10d90:	bl	109bc <read_bytes>
   10d94:	cmp	r0, #256	; 0x100
   10d98:	bne	10ea0 <readstat_parse_por+0x274>
   10d9c:	sub	lr, fp, #1024	; 0x400
   10da0:	sub	r0, lr, #40	; 0x28
   10da4:	add	r1, r0, #8
   10da8:	add	r4, r0, #24
   10dac:	ldrb	r0, [sp, #638]	; 0x27e
   10db0:	str	r1, [sp, #36]	; 0x24
   10db4:	strb	r0, [r8, #48]	; 0x30
   10db8:	mov	r0, #0
   10dbc:	ldr	r1, [pc, #3708]	; 11c40 <readstat_parse_por+0x1014>
   10dc0:	ldr	r1, [pc, r1]
   10dc4:	ldr	r2, [pc, #3704]	; 11c44 <readstat_parse_por+0x1018>
   10dc8:	ldr	r2, [pc, r2]
   10dcc:	ldrb	r3, [r2, r0]
   10dd0:	cmp	r3, #0
   10dd4:	beq	10de0 <readstat_parse_por+0x1b4>
   10dd8:	sxtb	r3, r3
   10ddc:	b	10dec <readstat_parse_por+0x1c0>
   10de0:	ldrh	r3, [r1]
   10de4:	cmp	r3, #0
   10de8:	beq	10df8 <readstat_parse_por+0x1cc>
   10dec:	ldrb	r6, [r5, r0]
   10df0:	add	r6, r8, r6, lsl #1
   10df4:	strh	r3, [r6, #94]	; 0x5e
   10df8:	add	r0, r0, #1
   10dfc:	add	r1, r1, #2
   10e00:	cmp	r0, #256	; 0x100
   10e04:	bne	10dcc <readstat_parse_por+0x1a0>
   10e08:	ldrb	r0, [sp, #576]	; 0x240
   10e0c:	ldr	r1, [pc, #3636]	; 11c48 <readstat_parse_por+0x101c>
   10e10:	mov	r2, #8
   10e14:	ldr	r1, [pc, r1]
   10e18:	add	r0, r8, r0, lsl #1
   10e1c:	ldrh	r1, [r1, #128]	; 0x80
   10e20:	strh	r1, [r0, #94]	; 0x5e
   10e24:	add	r1, sp, #304	; 0x130
   10e28:	mov	r0, r8
   10e2c:	bl	109bc <read_bytes>
   10e30:	cmp	r0, #8
   10e34:	mov	r9, #2
   10e38:	bne	10ea4 <readstat_parse_por+0x278>
   10e3c:	add	r0, r8, #94	; 0x5e
   10e40:	add	r5, sp, #304	; 0x130
   10e44:	add	r2, sp, #296	; 0x128
   10e48:	mov	r1, #8
   10e4c:	mov	r3, #8
   10e50:	str	r0, [sp]
   10e54:	mov	r0, r5
   10e58:	bl	4c28 <por_utf8_encode@plt>
   10e5c:	cmn	r0, #1
   10e60:	beq	10ec4 <readstat_parse_por+0x298>
   10e64:	mov	r2, r0
   10e68:	ldr	r0, [pc, #3552]	; 11c50 <readstat_parse_por+0x1024>
   10e6c:	add	r1, sp, #296	; 0x128
   10e70:	add	r0, pc, r0
   10e74:	bl	4ebc <strncmp@plt>
   10e78:	cmp	r0, #0
   10e7c:	beq	10f0c <readstat_parse_por+0x2e0>
   10e80:	mov	r9, #5
   10e84:	b	10ea4 <readstat_parse_por+0x278>
   10e88:	mov	r9, #1
   10e8c:	b	10ea4 <readstat_parse_por+0x278>
   10e90:	mov	r0, #0
   10e94:	mov	r9, #7
   10e98:	str	r0, [r8, #612]	; 0x264
   10e9c:	b	10ea4 <readstat_parse_por+0x278>
   10ea0:	mov	r9, #2
   10ea4:	ldr	r1, [sl, #4]
   10ea8:	ldr	r0, [sl, #20]
   10eac:	blx	r1
   10eb0:	mov	r0, r8
   10eb4:	bl	47cc <por_ctx_free@plt>
   10eb8:	mov	r0, r9
   10ebc:	sub	sp, fp, #28
   10ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ec4:	ldr	r0, [r8, #24]
   10ec8:	mov	r9, #16
   10ecc:	cmp	r0, #0
   10ed0:	beq	10ea4 <readstat_parse_por+0x278>
   10ed4:	str	r5, [sp]
   10ed8:	sub	lr, fp, #1024	; 0x400
   10edc:	mov	r1, #1024	; 0x400
   10ee0:	mov	r3, #8
   10ee4:	ldr	r2, [pc, #3424]	; 11c4c <readstat_parse_por+0x1020>
   10ee8:	sub	r5, lr, #40	; 0x28
   10eec:	mov	r0, r5
   10ef0:	add	r2, pc, r2
   10ef4:	bl	4c4c <snprintf@plt>
   10ef8:	ldr	r2, [r8, #24]
   10efc:	ldr	r1, [r8, #36]	; 0x24
   10f00:	mov	r0, r5
   10f04:	blx	r2
   10f08:	b	10ea4 <readstat_parse_por+0x278>
   10f0c:	mvn	r0, #0
   10f10:	str	r0, [r8, #636]	; 0x27c
   10f14:	mov	r0, r8
   10f18:	bl	49f4 <read_version_and_timestamp@plt>
   10f1c:	mov	r9, r0
   10f20:	cmp	r0, #0
   10f24:	bne	10ea4 <readstat_parse_por+0x278>
   10f28:	sub	lr, fp, #1024	; 0x400
   10f2c:	mov	r0, r8
   10f30:	mov	r2, #1
   10f34:	sub	r6, lr, #40	; 0x28
   10f38:	mov	r1, r6
   10f3c:	bl	109bc <read_bytes>
   10f40:	cmp	r0, #1
   10f44:	bne	10e80 <readstat_parse_por+0x254>
   10f48:	add	r0, r6, #4
   10f4c:	str	r0, [sp, #24]
   10f50:	add	r0, r8, #64	; 0x40
   10f54:	str	r0, [sp, #28]
   10f58:	ldrb	r0, [fp, #-1064]	; 0xfffffbd8
   10f5c:	add	r0, r8, r0, lsl #1
   10f60:	ldrh	r0, [r0, #94]	; 0x5e
   10f64:	sub	r0, r0, #49	; 0x31
   10f68:	cmp	r0, #21
   10f6c:	bhi	10e80 <readstat_parse_por+0x254>
   10f70:	add	r1, pc, #8
   10f74:	mov	r9, #5
   10f78:	ldr	r0, [r1, r0, lsl #2]
   10f7c:	add	pc, r1, r0
   10f80:	.word	0x00000058
   10f84:	.word	0x00000058
   10f88:	.word	0x00000058
   10f8c:	.word	0x00000068
   10f90:	.word	0x00000160
   10f94:	.word	0x00000190
   10f98:	.word	0x000001c8
   10f9c:	.word	0x00000334
   10fa0:	.word	0x0000038c
   10fa4:	.word	0xffffff24
   10fa8:	.word	0xffffff24
   10fac:	.word	0xffffff24
   10fb0:	.word	0xffffff24
   10fb4:	.word	0xffffff24
   10fb8:	.word	0xffffff24
   10fbc:	.word	0xffffff24
   10fc0:	.word	0x000003f0
   10fc4:	.word	0x00000460
   10fc8:	.word	0x000004d0
   10fcc:	.word	0x00000590
   10fd0:	.word	0x00000664
   10fd4:	.word	0x000009fc
   10fd8:	mov	r0, #0
   10fdc:	add	r1, sp, #40	; 0x28
   10fe0:	mov	r2, #256	; 0x100
   10fe4:	b	1111c <readstat_parse_por+0x4f0>
   10fe8:	ldr	r0, [r8, #632]	; 0x278
   10fec:	mov	r9, #5
   10ff0:	cmp	r0, #0
   10ff4:	bne	11950 <readstat_parse_por+0xd24>
   10ff8:	movw	r1, #16960	; 0x4240
   10ffc:	mov	r0, r8
   11000:	add	r2, sp, #1056	; 0x420
   11004:	movt	r1, #15
   11008:	bl	12048 <read_integer_in_range>
   1100c:	mov	r9, r0
   11010:	cmp	r0, #0
   11014:	bne	11950 <readstat_parse_por+0xd24>
   11018:	ldr	r0, [sp, #1056]	; 0x420
   1101c:	mov	r1, #4
   11020:	str	r0, [r8, #632]	; 0x278
   11024:	bl	49a0 <readstat_calloc@plt>
   11028:	str	r0, [r8, #648]	; 0x288
   1102c:	mov	r1, #280	; 0x118
   11030:	ldr	r0, [r8, #632]	; 0x278
   11034:	bl	49a0 <readstat_calloc@plt>
   11038:	mov	r9, #3
   1103c:	cmp	r0, #0
   11040:	str	r0, [r8, #652]	; 0x28c
   11044:	beq	11948 <readstat_parse_por+0xd1c>
   11048:	ldr	r0, [r8, #648]	; 0x288
   1104c:	sub	lr, fp, #1024	; 0x400
   11050:	sub	r6, lr, #40	; 0x28
   11054:	cmp	r0, #0
   11058:	beq	11950 <readstat_parse_por+0xd24>
   1105c:	ldr	r2, [r8]
   11060:	cmp	r2, #0
   11064:	beq	11944 <readstat_parse_por+0xd18>
   11068:	mvn	r0, #0
   1106c:	ldr	r3, [sp, #36]	; 0x24
   11070:	sub	lr, fp, #1024	; 0x400
   11074:	str	r0, [fp, #-1060]	; 0xfffffbdc
   11078:	str	r0, [fp, #-1064]	; 0xfffffbd8
   1107c:	ldr	r0, [r8, #632]	; 0x278
   11080:	asr	r1, r0, #31
   11084:	strd	r0, [r3]
   11088:	ldr	r6, [r8, #60]	; 0x3c
   1108c:	ldr	r0, [r8, #56]	; 0x38
   11090:	str	r0, [fp, #-1044]	; 0xfffffbec
   11094:	str	r0, [fp, #-1048]	; 0xfffffbe8
   11098:	asr	r1, r6, #31
   1109c:	mov	r0, #0
   110a0:	str	r6, [r4]
   110a4:	sub	r6, lr, #40	; 0x28
   110a8:	str	r1, [r4, #4]
   110ac:	strb	r0, [fp, #-1012]	; 0xfffffc0c
   110b0:	str	r0, [fp, #-1016]	; 0xfffffc08
   110b4:	str	r7, [fp, #-1020]	; 0xfffffc04
   110b8:	str	r0, [fp, #-1024]	; 0xfffffc00
   110bc:	str	r0, [fp, #-1028]	; 0xfffffbfc
   110c0:	str	r0, [fp, #-1032]	; 0xfffffbf8
   110c4:	mov	r0, r6
   110c8:	ldr	r1, [r8, #36]	; 0x24
   110cc:	blx	r2
   110d0:	cmp	r0, #0
   110d4:	movwne	r0, #1
   110d8:	lsl	r9, r0, #2
   110dc:	b	11950 <readstat_parse_por+0xd24>
   110e0:	mov	r0, #0
   110e4:	mov	r1, #100	; 0x64
   110e8:	mov	r2, r6
   110ec:	str	r0, [fp, #-1064]	; 0xfffffbd8
   110f0:	mov	r0, r8
   110f4:	bl	12048 <read_integer_in_range>
   110f8:	mov	r9, r0
   110fc:	cmp	r0, #0
   11100:	bne	11950 <readstat_parse_por+0xd24>
   11104:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11108:	str	r0, [r8, #608]	; 0x260
   1110c:	b	11950 <readstat_parse_por+0xd24>
   11110:	ldr	r1, [sp, #28]
   11114:	mov	r0, #0
   11118:	mov	r2, #9
   1111c:	str	r0, [fp, #-1064]	; 0xfffffbd8
   11120:	mov	r0, r8
   11124:	mov	r3, r6
   11128:	bl	11c60 <maybe_read_string>
   1112c:	mov	r9, r0
   11130:	cmp	r0, #0
   11134:	bne	11950 <readstat_parse_por+0xd24>
   11138:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   1113c:	cmp	r0, #0
   11140:	beq	11950 <readstat_parse_por+0xd24>
   11144:	b	10e80 <readstat_parse_por+0x254>
   11148:	ldr	r0, [r8, #636]	; 0x27c
   1114c:	ldr	r1, [r8, #632]	; 0x278
   11150:	mov	r9, #5
   11154:	add	r0, r0, #1
   11158:	cmp	r0, r1
   1115c:	str	r0, [r8, #636]	; 0x27c
   11160:	beq	11948 <readstat_parse_por+0xd1c>
   11164:	ldr	r1, [r8, #652]	; 0x28c
   11168:	mov	r2, #280	; 0x118
   1116c:	mla	r6, r0, r2, r1
   11170:	movw	r1, #16960	; 0x4240
   11174:	add	r2, sp, #768	; 0x300
   11178:	movt	r1, #15
   1117c:	add	r0, r6, #36	; 0x24
   11180:	add	r5, r6, #24
   11184:	str	r0, [fp, #-1060]	; 0xfffffbdc
   11188:	mvn	r0, #0
   1118c:	str	r5, [fp, #-1064]	; 0xfffffbd8
   11190:	str	r0, [r6, #4]
   11194:	mov	r0, r8
   11198:	bl	12048 <read_integer_in_range>
   1119c:	mov	r9, r0
   111a0:	cmp	r0, #0
   111a4:	bne	11948 <readstat_parse_por+0xd1c>
   111a8:	ldr	r0, [sp, #768]	; 0x300
   111ac:	add	r1, r6, #187	; 0xbb
   111b0:	mov	r2, #9
   111b4:	add	r3, sp, #1056	; 0x420
   111b8:	str	r1, [sp, #32]
   111bc:	cmp	r0, #0
   111c0:	str	r0, [r6, #16]
   111c4:	mov	r0, #0
   111c8:	movweq	r0, #5
   111cc:	str	r0, [r6]
   111d0:	mov	r0, #0
   111d4:	str	r0, [sp, #1056]	; 0x420
   111d8:	mov	r0, r8
   111dc:	bl	11c60 <maybe_read_string>
   111e0:	ldr	r1, [sp, #1056]	; 0x420
   111e4:	mov	r9, r0
   111e8:	cmp	r1, #0
   111ec:	movwne	r9, #5
   111f0:	cmp	r0, #0
   111f4:	movne	r9, r0
   111f8:	cmp	r9, #0
   111fc:	bne	11948 <readstat_parse_por+0xd1c>
   11200:	ldr	r2, [r8, #656]	; 0x290
   11204:	ldr	r0, [sp, #32]
   11208:	mov	r1, r6
   1120c:	bl	4eb0 <ck_str_hash_insert@plt>
   11210:	mov	r0, r8
   11214:	mov	r1, #120	; 0x78
   11218:	add	r2, sp, #768	; 0x300
   1121c:	bl	12048 <read_integer_in_range>
   11220:	mov	r9, r0
   11224:	cmp	r0, #0
   11228:	bne	11948 <readstat_parse_por+0xd1c>
   1122c:	mov	r6, #0
   11230:	ldr	r0, [sp, #768]	; 0x300
   11234:	movw	r1, #20000	; 0x4e20
   11238:	add	r2, sp, #768	; 0x300
   1123c:	str	r0, [r5]
   11240:	mov	r0, r8
   11244:	bl	12048 <read_integer_in_range>
   11248:	cmp	r0, #0
   1124c:	bne	11508 <readstat_parse_por+0x8dc>
   11250:	ldr	r0, [sp, #768]	; 0x300
   11254:	mov	r1, #100	; 0x64
   11258:	add	r2, sp, #768	; 0x300
   1125c:	str	r0, [r5, #4]
   11260:	mov	r0, r8
   11264:	bl	12048 <read_integer_in_range>
   11268:	cmp	r0, #0
   1126c:	bne	11508 <readstat_parse_por+0x8dc>
   11270:	ldr	r0, [sp, #768]	; 0x300
   11274:	cmp	r6, #1
   11278:	str	r0, [r5, #8]
   1127c:	beq	11944 <readstat_parse_por+0xd18>
   11280:	add	r0, r6, #1
   11284:	mov	r1, #120	; 0x78
   11288:	add	r2, sp, #768	; 0x300
   1128c:	str	r0, [sp, #32]
   11290:	ldr	r0, [sp, #24]
   11294:	ldr	r5, [r0, r6, lsl #2]
   11298:	mov	r0, r8
   1129c:	bl	12048 <read_integer_in_range>
   112a0:	ldr	r6, [sp, #32]
   112a4:	mov	r9, r0
   112a8:	cmp	r0, #0
   112ac:	beq	11230 <readstat_parse_por+0x604>
   112b0:	b	11948 <readstat_parse_por+0xd1c>
   112b4:	ldr	r0, [r8, #636]	; 0x27c
   112b8:	cmp	r0, #0
   112bc:	bmi	10e80 <readstat_parse_por+0x254>
   112c0:	ldr	r1, [r8, #632]	; 0x278
   112c4:	mov	ip, #280	; 0x118
   112c8:	cmp	r0, r1
   112cc:	bge	10e80 <readstat_parse_por+0x254>
   112d0:	ldr	r1, [r8, #652]	; 0x28c
   112d4:	mul	r2, r0, ip
   112d8:	mov	r5, r1
   112dc:	ldr	r3, [r5, r2]!
   112e0:	ldr	r2, [r5, #52]!	; 0x34
   112e4:	cmp	r3, #5
   112e8:	bne	11694 <readstat_parse_por+0xa68>
   112ec:	mla	r0, r0, ip, r1
   112f0:	add	r0, r0, r2, lsl #3
   112f4:	add	r1, r0, #64	; 0x40
   112f8:	mov	r0, r8
   112fc:	bl	120dc <read_double>
   11300:	cmp	r0, #0
   11304:	beq	116dc <readstat_parse_por+0xab0>
   11308:	b	11bd4 <readstat_parse_por+0xfa8>
   1130c:	ldr	r0, [r8, #636]	; 0x27c
   11310:	cmp	r0, #0
   11314:	bmi	10e80 <readstat_parse_por+0x254>
   11318:	ldr	r1, [r8, #632]	; 0x278
   1131c:	mov	ip, #280	; 0x118
   11320:	cmp	r0, r1
   11324:	beq	10e80 <readstat_parse_por+0x254>
   11328:	ldr	r1, [r8, #652]	; 0x28c
   1132c:	mul	r2, r0, ip
   11330:	mov	r5, #2
   11334:	mov	r3, r1
   11338:	mla	r0, r0, ip, r1
   1133c:	mov	r1, #0
   11340:	ldr	r2, [r3, r2]!
   11344:	str	r5, [r3, #52]	; 0x34
   11348:	mov	r5, #1
   1134c:	str	r5, [r3, #56]	; 0x38
   11350:	cmp	r2, #5
   11354:	bne	116f4 <readstat_parse_por+0xac8>
   11358:	movw	r2, #0
   1135c:	str	r1, [r0, #64]	; 0x40
   11360:	add	r1, r0, #72	; 0x48
   11364:	movt	r2, #65520	; 0xfff0
   11368:	str	r2, [r0, #68]	; 0x44
   1136c:	b	11440 <readstat_parse_por+0x814>
   11370:	ldr	r0, [r8, #636]	; 0x27c
   11374:	cmp	r0, #0
   11378:	bmi	10e80 <readstat_parse_por+0x254>
   1137c:	ldr	r1, [r8, #632]	; 0x278
   11380:	mov	ip, #280	; 0x118
   11384:	cmp	r0, r1
   11388:	beq	10e80 <readstat_parse_por+0x254>
   1138c:	ldr	r1, [r8, #652]	; 0x28c
   11390:	mul	r2, r0, ip
   11394:	mov	r5, #2
   11398:	mov	r3, r1
   1139c:	ldr	r2, [r3, r2]!
   113a0:	str	r5, [r3, #52]	; 0x34
   113a4:	mov	r5, #1
   113a8:	str	r5, [r3, #56]	; 0x38
   113ac:	cmp	r2, #5
   113b0:	bne	11704 <readstat_parse_por+0xad8>
   113b4:	mla	r5, r0, ip, r1
   113b8:	mov	r0, r8
   113bc:	add	r1, r5, #64	; 0x40
   113c0:	bl	120dc <read_double>
   113c4:	cmp	r0, #0
   113c8:	bne	11bd4 <readstat_parse_por+0xfa8>
   113cc:	movw	r1, #0
   113d0:	mov	r0, #0
   113d4:	movt	r1, #32752	; 0x7ff0
   113d8:	strd	r0, [r5, #72]	; 0x48
   113dc:	b	11958 <readstat_parse_por+0xd2c>
   113e0:	ldr	r0, [r8, #636]	; 0x27c
   113e4:	cmp	r0, #0
   113e8:	bmi	10e80 <readstat_parse_por+0x254>
   113ec:	ldr	r1, [r8, #632]	; 0x278
   113f0:	mov	ip, #280	; 0x118
   113f4:	cmp	r0, r1
   113f8:	beq	10e80 <readstat_parse_por+0x254>
   113fc:	ldr	r1, [r8, #652]	; 0x28c
   11400:	mul	r2, r0, ip
   11404:	mov	r5, #2
   11408:	mov	r3, r1
   1140c:	ldr	r2, [r3, r2]!
   11410:	str	r5, [r3, #52]	; 0x34
   11414:	mov	r5, #1
   11418:	str	r5, [r3, #56]	; 0x38
   1141c:	cmp	r2, #5
   11420:	bne	11750 <readstat_parse_por+0xb24>
   11424:	mla	r5, r0, ip, r1
   11428:	mov	r0, r8
   1142c:	add	r1, r5, #64	; 0x40
   11430:	bl	120dc <read_double>
   11434:	cmp	r0, #0
   11438:	bne	11bd4 <readstat_parse_por+0xfa8>
   1143c:	add	r1, r5, #72	; 0x48
   11440:	mov	r0, r8
   11444:	bl	120dc <read_double>
   11448:	mov	r9, r0
   1144c:	b	11950 <readstat_parse_por+0xd24>
   11450:	ldr	r5, [r8, #636]	; 0x27c
   11454:	mov	r9, #5
   11458:	cmp	r5, #0
   1145c:	bmi	11948 <readstat_parse_por+0xd1c>
   11460:	ldr	r0, [r8, #632]	; 0x278
   11464:	cmp	r5, r0
   11468:	beq	11948 <readstat_parse_por+0xd1c>
   1146c:	ldr	r6, [r8, #652]	; 0x28c
   11470:	mov	r0, #0
   11474:	sub	lr, fp, #1024	; 0x400
   11478:	add	r1, sp, #768	; 0x300
   1147c:	mov	r2, #256	; 0x100
   11480:	str	r0, [fp, #-1064]	; 0xfffffbd8
   11484:	mov	r0, r8
   11488:	sub	r3, lr, #40	; 0x28
   1148c:	bl	11c60 <maybe_read_string>
   11490:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11494:	mov	r9, r0
   11498:	cmp	r1, #0
   1149c:	movwne	r9, #5
   114a0:	cmp	r0, #0
   114a4:	movne	r9, r0
   114a8:	cmp	r9, #0
   114ac:	bne	11948 <readstat_parse_por+0xd1c>
   114b0:	mov	r0, #280	; 0x118
   114b4:	add	r9, sp, #768	; 0x300
   114b8:	mla	r5, r5, r0, r6
   114bc:	mov	r0, r9
   114c0:	ldr	r6, [r5, #264]	; 0x108
   114c4:	bl	4bd4 <strlen@plt>
   114c8:	mov	r1, #1
   114cc:	orr	r1, r1, r0, lsl #2
   114d0:	mov	r0, r6
   114d4:	bl	49dc <realloc@plt>
   114d8:	mov	r6, r0
   114dc:	str	r0, [r5, #264]	; 0x108
   114e0:	mov	r0, r9
   114e4:	bl	4bd4 <strlen@plt>
   114e8:	mov	r3, r0
   114ec:	ldr	r0, [r8, #612]	; 0x264
   114f0:	mov	r2, r9
   114f4:	str	r0, [sp]
   114f8:	mov	r0, #1
   114fc:	orr	r1, r0, r3, lsl #2
   11500:	mov	r0, r6
   11504:	bl	4c04 <readstat_convert@plt>
   11508:	mov	r9, r0
   1150c:	b	11948 <readstat_parse_por+0xd1c>
   11510:	mov	r0, #0
   11514:	mov	r1, #256	; 0x100
   11518:	str	r0, [sp, #1028]	; 0x404
   1151c:	str	r0, [sp, #1024]	; 0x400
   11520:	mov	r0, r6
   11524:	ldr	r3, [r8, #624]	; 0x270
   11528:	ldr	r2, [pc, #1828]	; 11c54 <readstat_parse_por+0x1028>
   1152c:	add	r2, pc, r2
   11530:	bl	4c4c <snprintf@plt>
   11534:	movw	r1, #16960	; 0x4240
   11538:	add	lr, sp, #1024	; 0x400
   1153c:	mov	r0, r8
   11540:	movt	r1, #15
   11544:	add	r2, lr, #4
   11548:	bl	12048 <read_integer_in_range>
   1154c:	mov	r9, r0
   11550:	cmp	r0, #0
   11554:	bne	11948 <readstat_parse_por+0xd1c>
   11558:	ldr	r0, [sp, #1028]	; 0x404
   1155c:	cmp	r0, #1
   11560:	blt	117a8 <readstat_parse_por+0xb7c>
   11564:	mov	r5, #0
   11568:	mov	r0, #5
   1156c:	str	r0, [sp, #32]
   11570:	mov	r0, #0
   11574:	add	r1, sp, #768	; 0x300
   11578:	mov	r2, #256	; 0x100
   1157c:	add	r3, sp, #1056	; 0x420
   11580:	str	r0, [sp, #1056]	; 0x420
   11584:	mov	r0, r8
   11588:	bl	11c60 <maybe_read_string>
   1158c:	ldr	r1, [sp, #1056]	; 0x420
   11590:	mov	r9, r0
   11594:	cmp	r1, #0
   11598:	movwne	r9, #5
   1159c:	cmp	r0, #0
   115a0:	movne	r9, r0
   115a4:	cmp	r9, #0
   115a8:	bne	11948 <readstat_parse_por+0xd1c>
   115ac:	ldr	r1, [r8, #656]	; 0x290
   115b0:	add	r0, sp, #768	; 0x300
   115b4:	bl	49ac <ck_str_hash_lookup@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	115d0 <readstat_parse_por+0x9a4>
   115c0:	ldr	r1, [r8, #624]	; 0x270
   115c4:	str	r1, [r0, #4]
   115c8:	ldr	r0, [r0]
   115cc:	str	r0, [sp, #32]
   115d0:	ldr	r0, [sp, #1028]	; 0x404
   115d4:	add	r5, r5, #1
   115d8:	cmp	r5, r0
   115dc:	blt	11570 <readstat_parse_por+0x944>
   115e0:	b	117b0 <readstat_parse_por+0xb84>
   115e4:	movw	r1, #16960	; 0x4240
   115e8:	mov	r0, #0
   115ec:	add	r2, sp, #1056	; 0x420
   115f0:	movt	r1, #15
   115f4:	str	r0, [sp, #1056]	; 0x420
   115f8:	mov	r0, r8
   115fc:	bl	12048 <read_integer_in_range>
   11600:	mov	r9, r0
   11604:	cmp	r0, #0
   11608:	bne	11948 <readstat_parse_por+0xd1c>
   1160c:	ldr	r0, [sp, #1056]	; 0x420
   11610:	cmp	r0, #1
   11614:	blt	11944 <readstat_parse_por+0xd18>
   11618:	mov	r6, #0
   1161c:	mov	r0, #0
   11620:	sub	lr, fp, #1024	; 0x400
   11624:	add	r1, sp, #768	; 0x300
   11628:	mov	r2, #256	; 0x100
   1162c:	str	r0, [fp, #-1064]	; 0xfffffbd8
   11630:	mov	r0, r8
   11634:	sub	r3, lr, #40	; 0x28
   11638:	bl	11c60 <maybe_read_string>
   1163c:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11640:	mov	r9, r0
   11644:	cmp	r1, #0
   11648:	movwne	r9, #5
   1164c:	cmp	r0, #0
   11650:	movne	r9, r0
   11654:	cmp	r9, #0
   11658:	bne	11948 <readstat_parse_por+0xd1c>
   1165c:	ldr	r3, [r8, #4]
   11660:	cmp	r3, #0
   11664:	beq	11680 <readstat_parse_por+0xa54>
   11668:	ldr	r2, [r8, #36]	; 0x24
   1166c:	mov	r0, r6
   11670:	add	r1, sp, #768	; 0x300
   11674:	blx	r3
   11678:	cmp	r0, #0
   1167c:	bne	11974 <readstat_parse_por+0xd48>
   11680:	ldr	r0, [sp, #1056]	; 0x420
   11684:	add	r6, r6, #1
   11688:	cmp	r6, r0
   1168c:	blt	1161c <readstat_parse_por+0x9f0>
   11690:	b	11944 <readstat_parse_por+0xd18>
   11694:	mla	r0, r0, ip, r1
   11698:	add	r1, r2, r2, lsl #5
   1169c:	mov	r3, #0
   116a0:	mov	r2, #33	; 0x21
   116a4:	str	r3, [fp, #-1064]	; 0xfffffbd8
   116a8:	mov	r3, r6
   116ac:	add	r0, r0, r1
   116b0:	add	r1, r0, #88	; 0x58
   116b4:	mov	r0, r8
   116b8:	bl	11c60 <maybe_read_string>
   116bc:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   116c0:	mov	r9, r0
   116c4:	cmp	r1, #0
   116c8:	movwne	r9, #5
   116cc:	cmp	r0, #0
   116d0:	movne	r9, r0
   116d4:	cmp	r9, #0
   116d8:	bne	10ea4 <readstat_parse_por+0x278>
   116dc:	ldr	r0, [r5]
   116e0:	cmp	r0, #2
   116e4:	bgt	10e80 <readstat_parse_por+0x254>
   116e8:	add	r0, r0, #1
   116ec:	str	r0, [r5]
   116f0:	b	11958 <readstat_parse_por+0xd2c>
   116f4:	strb	r1, [r0, #88]	; 0x58
   116f8:	str	r1, [fp, #-1064]	; 0xfffffbd8
   116fc:	add	r1, r0, #121	; 0x79
   11700:	b	1179c <readstat_parse_por+0xb70>
   11704:	mla	r5, r0, ip, r1
   11708:	mov	r2, #0
   1170c:	mov	r0, r8
   11710:	mov	r3, r6
   11714:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11718:	mov	r2, #33	; 0x21
   1171c:	add	r1, r5, #88	; 0x58
   11720:	bl	11c60 <maybe_read_string>
   11724:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11728:	mov	r9, r0
   1172c:	cmp	r1, #0
   11730:	movwne	r9, #5
   11734:	cmp	r0, #0
   11738:	movne	r9, r0
   1173c:	cmp	r9, #0
   11740:	bne	10ea4 <readstat_parse_por+0x278>
   11744:	mov	r0, #0
   11748:	strb	r0, [r5, #121]	; 0x79
   1174c:	b	11958 <readstat_parse_por+0xd2c>
   11750:	mla	r5, r0, ip, r1
   11754:	mov	r2, #0
   11758:	mov	r0, r8
   1175c:	mov	r3, r6
   11760:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11764:	mov	r2, #33	; 0x21
   11768:	add	r1, r5, #88	; 0x58
   1176c:	bl	11c60 <maybe_read_string>
   11770:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11774:	mov	r9, r0
   11778:	cmp	r1, #0
   1177c:	movwne	r9, #5
   11780:	cmp	r0, #0
   11784:	movne	r9, r0
   11788:	cmp	r9, #0
   1178c:	bne	10ea4 <readstat_parse_por+0x278>
   11790:	mov	r0, #0
   11794:	add	r1, r5, #121	; 0x79
   11798:	str	r0, [fp, #-1064]	; 0xfffffbd8
   1179c:	mov	r0, r8
   117a0:	mov	r2, #33	; 0x21
   117a4:	b	11124 <readstat_parse_por+0x4f8>
   117a8:	mov	r0, #5
   117ac:	str	r0, [sp, #32]
   117b0:	movw	r1, #16960	; 0x4240
   117b4:	mov	r0, r8
   117b8:	add	r2, sp, #1024	; 0x400
   117bc:	movt	r1, #15
   117c0:	bl	12048 <read_integer_in_range>
   117c4:	mov	r9, r0
   117c8:	cmp	r0, #0
   117cc:	bne	11948 <readstat_parse_por+0xd1c>
   117d0:	ldr	r0, [sp, #1024]	; 0x400
   117d4:	cmp	r0, #1
   117d8:	blt	11938 <readstat_parse_por+0xd0c>
   117dc:	mov	r5, #0
   117e0:	ldr	r0, [sp, #32]
   117e4:	cmp	r0, #0
   117e8:	beq	11854 <readstat_parse_por+0xc28>
   117ec:	add	lr, sp, #1024	; 0x400
   117f0:	mov	r0, r8
   117f4:	add	r1, lr, #8
   117f8:	bl	120dc <read_double>
   117fc:	cmp	r0, #0
   11800:	bne	11508 <readstat_parse_por+0x8dc>
   11804:	mov	r0, #0
   11808:	add	lr, sp, #1024	; 0x400
   1180c:	add	r1, sp, #1056	; 0x420
   11810:	mov	r2, #256	; 0x100
   11814:	str	r0, [sp, #1052]	; 0x41c
   11818:	mov	r0, r8
   1181c:	add	r3, lr, #28
   11820:	bl	11c60 <maybe_read_string>
   11824:	ldr	r1, [sp, #1052]	; 0x41c
   11828:	mov	r9, r0
   1182c:	cmp	r1, #0
   11830:	movwne	r9, #5
   11834:	cmp	r0, #0
   11838:	movne	r9, r0
   1183c:	cmp	r9, #0
   11840:	bne	11948 <readstat_parse_por+0xd1c>
   11844:	ldr	r2, [sp, #1032]	; 0x408
   11848:	ldr	r0, [sp, #1036]	; 0x40c
   1184c:	str	r0, [sp, #16]
   11850:	b	118e0 <readstat_parse_por+0xcb4>
   11854:	mov	r0, #0
   11858:	add	lr, sp, #1024	; 0x400
   1185c:	add	r1, sp, #768	; 0x300
   11860:	mov	r2, #256	; 0x100
   11864:	str	r0, [sp, #1052]	; 0x41c
   11868:	mov	r0, r8
   1186c:	add	r3, lr, #28
   11870:	bl	11c60 <maybe_read_string>
   11874:	ldr	r1, [sp, #1052]	; 0x41c
   11878:	mov	r9, r0
   1187c:	cmp	r1, #0
   11880:	movwne	r9, #5
   11884:	cmp	r0, #0
   11888:	movne	r9, r0
   1188c:	cmp	r9, #0
   11890:	bne	11948 <readstat_parse_por+0xd1c>
   11894:	mov	r1, #0
   11898:	mov	r0, #0
   1189c:	add	lr, sp, #1024	; 0x400
   118a0:	mov	r2, #256	; 0x100
   118a4:	str	r0, [sp, #16]
   118a8:	str	r1, [sp, #1052]	; 0x41c
   118ac:	mov	r0, r8
   118b0:	add	r1, sp, #1056	; 0x420
   118b4:	add	r3, lr, #28
   118b8:	bl	11c60 <maybe_read_string>
   118bc:	ldr	r1, [sp, #1052]	; 0x41c
   118c0:	mov	r9, r0
   118c4:	add	r2, sp, #768	; 0x300
   118c8:	cmp	r1, #0
   118cc:	movwne	r9, #5
   118d0:	cmp	r0, #0
   118d4:	movne	r9, r0
   118d8:	cmp	r9, #0
   118dc:	bne	11948 <readstat_parse_por+0xd1c>
   118e0:	ldr	r6, [sp, #20]
   118e4:	ldr	r1, [r8, #20]
   118e8:	bfc	r6, #0, #10
   118ec:	cmp	r1, #0
   118f0:	beq	11924 <readstat_parse_por+0xcf8>
   118f4:	ldr	r3, [sp, #32]
   118f8:	ldr	r0, [r8, #36]	; 0x24
   118fc:	sub	lr, fp, #1024	; 0x400
   11900:	stm	sp, {r3, r6}
   11904:	add	r3, sp, #1056	; 0x420
   11908:	str	r0, [sp, #12]
   1190c:	sub	r0, lr, #40	; 0x28
   11910:	str	r3, [sp, #8]
   11914:	ldr	r3, [sp, #16]
   11918:	blx	r1
   1191c:	cmp	r0, #0
   11920:	bne	11974 <readstat_parse_por+0xd48>
   11924:	ldr	r0, [sp, #1024]	; 0x400
   11928:	add	r5, r5, #1
   1192c:	str	r6, [sp, #20]
   11930:	cmp	r5, r0
   11934:	blt	117e0 <readstat_parse_por+0xbb4>
   11938:	ldr	r0, [r8, #624]	; 0x270
   1193c:	add	r0, r0, #1
   11940:	str	r0, [r8, #624]	; 0x270
   11944:	mov	r9, #0
   11948:	sub	lr, fp, #1024	; 0x400
   1194c:	sub	r6, lr, #40	; 0x28
   11950:	cmp	r9, #0
   11954:	bne	10ea4 <readstat_parse_por+0x278>
   11958:	mov	r0, r8
   1195c:	mov	r1, r6
   11960:	mov	r2, #1
   11964:	bl	109bc <read_bytes>
   11968:	cmp	r0, #1
   1196c:	beq	10f58 <readstat_parse_por+0x32c>
   11970:	b	10e80 <readstat_parse_por+0x254>
   11974:	mov	r9, #4
   11978:	b	11948 <readstat_parse_por+0xd1c>
   1197c:	ldr	r0, [r8, #632]	; 0x278
   11980:	ldr	r1, [r8, #636]	; 0x27c
   11984:	mov	r9, #8
   11988:	sub	r0, r0, #1
   1198c:	cmp	r1, r0
   11990:	bne	10ea4 <readstat_parse_por+0x278>
   11994:	mov	r0, r8
   11998:	bl	4ef8 <handle_variables@plt>
   1199c:	mov	r9, r0
   119a0:	cmp	r0, #0
   119a4:	bne	10ea4 <readstat_parse_por+0x278>
   119a8:	ldr	r0, [r8, #16]
   119ac:	cmp	r0, #0
   119b0:	beq	11bdc <readstat_parse_por+0xfb0>
   119b4:	ldr	r0, [r8, #632]	; 0x278
   119b8:	cmp	r0, #0
   119bc:	beq	11bdc <readstat_parse_por+0xfb0>
   119c0:	add	r1, r8, #628	; 0x274
   119c4:	add	lr, sp, #1024	; 0x400
   119c8:	mov	r6, #0
   119cc:	str	r1, [sp, #28]
   119d0:	add	r1, r8, #644	; 0x284
   119d4:	str	r1, [sp, #36]	; 0x24
   119d8:	add	r1, lr, #8
   119dc:	add	r1, r1, #8
   119e0:	str	r1, [sp, #32]
   119e4:	cmp	r0, #1
   119e8:	str	r6, [sp, #1052]	; 0x41c
   119ec:	blt	11b60 <readstat_parse_por+0xf34>
   119f0:	mov	r5, #0
   119f4:	mov	r4, #0
   119f8:	ldr	r7, [r8, #652]	; 0x28c
   119fc:	str	r6, [sp, #1036]	; 0x40c
   11a00:	str	r6, [sp, #1032]	; 0x408
   11a04:	ldr	r0, [r7, -r5]
   11a08:	strb	r6, [sp, #1044]	; 0x414
   11a0c:	str	r0, [sp, #1040]	; 0x410
   11a10:	ldrb	r0, [sp, #1045]	; 0x415
   11a14:	and	r0, r0, #252	; 0xfc
   11a18:	strb	r0, [sp, #1045]	; 0x415
   11a1c:	ldr	r0, [r7, -r5]
   11a20:	cmp	r0, #5
   11a24:	beq	11aa0 <readstat_parse_por+0xe74>
   11a28:	cmp	r0, #0
   11a2c:	bne	11aec <readstat_parse_por+0xec0>
   11a30:	add	lr, sp, #1024	; 0x400
   11a34:	mov	r0, r8
   11a38:	add	r1, sp, #768	; 0x300
   11a3c:	mov	r2, #256	; 0x100
   11a40:	add	r3, lr, #28
   11a44:	bl	11c60 <maybe_read_string>
   11a48:	cmp	r0, #0
   11a4c:	bne	11be4 <readstat_parse_por+0xfb8>
   11a50:	ldr	r0, [sp, #1052]	; 0x41c
   11a54:	cmp	r0, #0
   11a58:	bne	11c20 <readstat_parse_por+0xff4>
   11a5c:	add	r7, sp, #768	; 0x300
   11a60:	mov	r0, r7
   11a64:	bl	4bd4 <strlen@plt>
   11a68:	mov	r3, r0
   11a6c:	ldr	r0, [r8, #612]	; 0x264
   11a70:	sub	lr, fp, #1024	; 0x400
   11a74:	movw	r1, #1025	; 0x401
   11a78:	mov	r2, r7
   11a7c:	str	r0, [sp]
   11a80:	sub	r0, lr, #40	; 0x28
   11a84:	bl	4c04 <readstat_convert@plt>
   11a88:	cmp	r0, #0
   11a8c:	bne	11bd4 <readstat_parse_por+0xfa8>
   11a90:	sub	lr, fp, #1024	; 0x400
   11a94:	sub	r0, lr, #40	; 0x28
   11a98:	str	r0, [sp, #1032]	; 0x408
   11a9c:	b	11aec <readstat_parse_por+0xec0>
   11aa0:	add	lr, sp, #1024	; 0x400
   11aa4:	mov	r0, r8
   11aa8:	add	r1, lr, #8
   11aac:	add	lr, sp, #1024	; 0x400
   11ab0:	add	r2, lr, #28
   11ab4:	bl	11dec <maybe_read_double>
   11ab8:	cmp	r0, #0
   11abc:	bne	11be4 <readstat_parse_por+0xfb8>
   11ac0:	ldr	r0, [sp, #1052]	; 0x41c
   11ac4:	cmp	r0, #0
   11ac8:	bne	11c20 <readstat_parse_por+0xff4>
   11acc:	add	lr, sp, #1024	; 0x400
   11ad0:	vldr	d0, [lr, #8]
   11ad4:	bl	4d00 <__isnan@plt>
   11ad8:	ldrb	r1, [sp, #1045]	; 0x415
   11adc:	and	r0, r0, #1
   11ae0:	and	r1, r1, #254	; 0xfe
   11ae4:	orr	r0, r1, r0
   11ae8:	strb	r0, [sp, #1045]	; 0x415
   11aec:	ldr	r7, [r8, #16]
   11af0:	cmp	r7, #0
   11af4:	beq	11b4c <readstat_parse_por+0xf20>
   11af8:	ldr	r0, [r8, #648]	; 0x288
   11afc:	ldr	r1, [r0, r4, lsl #2]
   11b00:	ldr	r0, [r1, #2144]	; 0x860
   11b04:	cmp	r0, #0
   11b08:	bne	11b4c <readstat_parse_por+0xf20>
   11b0c:	ldr	r0, [sp, #36]	; 0x24
   11b10:	ldr	r0, [r0]
   11b14:	cmp	r0, #0
   11b18:	bne	11b4c <readstat_parse_por+0xf20>
   11b1c:	ldr	r2, [sp, #32]
   11b20:	ldr	r0, [r8, #628]	; 0x274
   11b24:	ldr	r3, [sp, #1036]	; 0x40c
   11b28:	ldr	lr, [r8, #36]	; 0x24
   11b2c:	ldr	ip, [r2]
   11b30:	ldr	r9, [r2, #4]
   11b34:	ldr	r2, [sp, #1032]	; 0x408
   11b38:	str	ip, [sp]
   11b3c:	stmib	sp, {r9, lr}
   11b40:	blx	r7
   11b44:	cmp	r0, #0
   11b48:	bne	11c30 <readstat_parse_por+0x1004>
   11b4c:	ldr	r0, [r8, #632]	; 0x278
   11b50:	add	r4, r4, #1
   11b54:	sub	r5, r5, #280	; 0x118
   11b58:	cmp	r4, r0
   11b5c:	blt	119f8 <readstat_parse_por+0xdcc>
   11b60:	ldr	r0, [sp, #36]	; 0x24
   11b64:	ldr	r0, [r0]
   11b68:	cmp	r0, #0
   11b6c:	beq	11b7c <readstat_parse_por+0xf50>
   11b70:	ldr	r1, [sp, #36]	; 0x24
   11b74:	sub	r0, r0, #1
   11b78:	b	11b88 <readstat_parse_por+0xf5c>
   11b7c:	ldr	r1, [sp, #28]
   11b80:	ldr	r0, [r1]
   11b84:	add	r0, r0, #1
   11b88:	str	r0, [r1]
   11b8c:	ldr	r3, [r8, #44]	; 0x2c
   11b90:	ldr	r1, [r8, #28]
   11b94:	ldr	r0, [r8, #32]
   11b98:	ldr	r2, [r8, #36]	; 0x24
   11b9c:	ldr	r7, [r3, #16]
   11ba0:	ldr	r3, [r3, #20]
   11ba4:	blx	r7
   11ba8:	cmp	r0, #0
   11bac:	bne	11bd4 <readstat_parse_por+0xfa8>
   11bb0:	ldr	r0, [r8, #640]	; 0x280
   11bb4:	cmp	r0, #1
   11bb8:	blt	11bcc <readstat_parse_por+0xfa0>
   11bbc:	ldr	r1, [sp, #28]
   11bc0:	ldr	r1, [r1]
   11bc4:	cmp	r1, r0
   11bc8:	beq	11bdc <readstat_parse_por+0xfb0>
   11bcc:	ldr	r0, [r8, #632]	; 0x278
   11bd0:	b	119e4 <readstat_parse_por+0xdb8>
   11bd4:	mov	r9, r0
   11bd8:	b	10ea4 <readstat_parse_por+0x278>
   11bdc:	mov	r9, #0
   11be0:	b	10ea4 <readstat_parse_por+0x278>
   11be4:	mov	r9, r0
   11be8:	ldr	r0, [r8, #24]
   11bec:	cmp	r0, #0
   11bf0:	beq	10ea4 <readstat_parse_por+0x278>
   11bf4:	ldr	r0, [r8, #628]	; 0x274
   11bf8:	mov	r1, #1024	; 0x400
   11bfc:	add	r0, r0, #1
   11c00:	str	r0, [sp]
   11c04:	sub	r0, r7, r5
   11c08:	add	r5, sp, #1056	; 0x420
   11c0c:	ldr	r2, [pc, #68]	; 11c58 <readstat_parse_por+0x102c>
   11c10:	add	r3, r0, #187	; 0xbb
   11c14:	mov	r0, r5
   11c18:	add	r2, pc, r2
   11c1c:	b	10ef4 <readstat_parse_por+0x2c8>
   11c20:	cmp	r4, #0
   11c24:	movwne	r4, #5
   11c28:	mov	r9, r4
   11c2c:	b	10ea4 <readstat_parse_por+0x278>
   11c30:	mov	r9, #4
   11c34:	b	10ea4 <readstat_parse_por+0x278>
   11c38:	.word	0x000133ea
   11c3c:	.word	0x000133d2
   11c40:	.word	0x00033510
   11c44:	.word	0x00033514
   11c48:	.word	0x000334bc
   11c4c:	.word	0x0001391c
   11c50:	.word	0x000139c0
   11c54:	.word	0x000132d7
   11c58:	.word	0x00012ca7
   11c5c:	.word	0xe320f000

00011c60 <maybe_read_string>:
   11c60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c64:	add	fp, sp, #24
   11c68:	vpush	{d8}
   11c6c:	sub	sp, sp, #24
   11c70:	sub	sp, sp, #1024	; 0x400
   11c74:	mov	r4, r0
   11c78:	mov	r0, #0
   11c7c:	mov	r7, r2
   11c80:	mov	r8, r1
   11c84:	sub	r1, fp, #48	; 0x30
   11c88:	sub	r2, fp, #52	; 0x34
   11c8c:	mov	r5, r3
   11c90:	str	r0, [fp, #-52]	; 0xffffffcc
   11c94:	mov	r0, r4
   11c98:	bl	11dec <maybe_read_double>
   11c9c:	mov	r6, r0
   11ca0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11ca4:	orrs	r1, r0, r6
   11ca8:	beq	11cc4 <maybe_read_string+0x64>
   11cac:	cmp	r5, #0
   11cb0:	strne	r0, [r5]
   11cb4:	mov	r0, r6
   11cb8:	sub	sp, fp, #32
   11cbc:	vpop	{d8}
   11cc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11cc4:	vldr	d8, [fp, #-48]	; 0xffffffd0
   11cc8:	mov	r6, #5
   11ccc:	vcmpe.f64	d8, #0.0
   11cd0:	vmrs	APSR_nzcv, fpscr
   11cd4:	bmi	11cb4 <maybe_read_string+0x54>
   11cd8:	vldr	d16, [pc, #256]	; 11de0 <maybe_read_string+0x180>
   11cdc:	vcmpe.f64	d8, d16
   11ce0:	vmrs	APSR_nzcv, fpscr
   11ce4:	bgt	11cb4 <maybe_read_string+0x54>
   11ce8:	vmov.f64	d0, d8
   11cec:	bl	4d00 <__isnan@plt>
   11cf0:	cmp	r0, #0
   11cf4:	bne	11cb4 <maybe_read_string+0x54>
   11cf8:	ldr	r0, [r4, #620]	; 0x26c
   11cfc:	vcvt.u32.f64	s0, d8
   11d00:	vmov	r9, s0
   11d04:	cmp	r0, r9
   11d08:	bcs	11d34 <maybe_read_string+0xd4>
   11d0c:	str	r9, [r4, #620]	; 0x26c
   11d10:	mov	r1, r9
   11d14:	ldr	r0, [r4, #616]	; 0x268
   11d18:	bl	49dc <realloc@plt>
   11d1c:	str	r0, [r4, #616]	; 0x268
   11d20:	mov	r1, #0
   11d24:	mov	r6, r0
   11d28:	ldr	r2, [r4, #620]	; 0x26c
   11d2c:	bl	4c70 <memset@plt>
   11d30:	b	11d38 <maybe_read_string+0xd8>
   11d34:	ldr	r6, [r4, #616]	; 0x268
   11d38:	mov	r0, r4
   11d3c:	mov	r1, r6
   11d40:	mov	r2, r9
   11d44:	bl	109bc <read_bytes>
   11d48:	cmn	r0, #1
   11d4c:	beq	11d8c <maybe_read_string+0x12c>
   11d50:	ldr	r0, [r4, #616]	; 0x268
   11d54:	add	r1, r4, #94	; 0x5e
   11d58:	sub	r3, r7, #1
   11d5c:	mov	r2, r8
   11d60:	str	r1, [sp]
   11d64:	mov	r1, r9
   11d68:	bl	4c28 <por_utf8_encode@plt>
   11d6c:	cmn	r0, #1
   11d70:	beq	11d94 <maybe_read_string+0x134>
   11d74:	mov	r6, #0
   11d78:	cmp	r5, #0
   11d7c:	strb	r6, [r8, r0]
   11d80:	movne	r6, #0
   11d84:	strne	r6, [r5]
   11d88:	b	11cb4 <maybe_read_string+0x54>
   11d8c:	mov	r6, #2
   11d90:	b	11cb4 <maybe_read_string+0x54>
   11d94:	ldr	r0, [r4, #24]
   11d98:	mov	r6, #16
   11d9c:	cmp	r0, #0
   11da0:	beq	11cb4 <maybe_read_string+0x54>
   11da4:	ldr	r0, [r4, #616]	; 0x268
   11da8:	add	r5, sp, #4
   11dac:	mov	r1, #1024	; 0x400
   11db0:	mov	r3, r9
   11db4:	str	r0, [sp]
   11db8:	mov	r0, r5
   11dbc:	ldr	r2, [pc, #36]	; 11de8 <maybe_read_string+0x188>
   11dc0:	add	r2, pc, r2
   11dc4:	bl	4c4c <snprintf@plt>
   11dc8:	ldr	r2, [r4, #24]
   11dcc:	ldr	r1, [r4, #36]	; 0x24
   11dd0:	mov	r0, r5
   11dd4:	blx	r2
   11dd8:	b	11cb4 <maybe_read_string+0x54>
   11ddc:	nop	{0}
   11de0:	.word	0x00000000
   11de4:	.word	0x40d38800
   11de8:	.word	0x00012a79

00011dec <maybe_read_double>:
   11dec:	push	{r4, r5, r6, sl, fp, lr}
   11df0:	add	fp, sp, #16
   11df4:	sub	sp, sp, #8
   11df8:	mov	r4, r2
   11dfc:	mov	r5, r1
   11e00:	add	r1, sp, #7
   11e04:	mov	r2, #1
   11e08:	mov	r6, r0
   11e0c:	bl	109bc <read_bytes>
   11e10:	mov	r1, r0
   11e14:	mov	r0, #5
   11e18:	cmp	r1, #1
   11e1c:	bne	11e74 <maybe_read_double+0x88>
   11e20:	ldrb	r2, [sp, #7]
   11e24:	add	r0, r6, r2, lsl #1
   11e28:	ldrh	r0, [r0, #94]	; 0x5e
   11e2c:	cmp	r0, #90	; 0x5a
   11e30:	bne	11e5c <maybe_read_double+0x70>
   11e34:	cmp	r5, #0
   11e38:	movwne	r1, #0
   11e3c:	movne	r0, #0
   11e40:	movtne	r1, #32760	; 0x7ff8
   11e44:	strdne	r0, [r5]
   11e48:	cmp	r4, #0
   11e4c:	mov	r0, #0
   11e50:	movne	r1, #1
   11e54:	strne	r1, [r4]
   11e58:	b	11e74 <maybe_read_double+0x88>
   11e5c:	cmp	r4, #0
   11e60:	mov	r1, r5
   11e64:	movne	r0, #0
   11e68:	strne	r0, [r4]
   11e6c:	mov	r0, r6
   11e70:	bl	11e7c <read_double_with_peek>
   11e74:	sub	sp, fp, #16
   11e78:	pop	{r4, r5, r6, sl, fp, pc}

00011e7c <read_double_with_peek>:
   11e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e80:	add	fp, sp, #28
   11e84:	sub	sp, sp, #436	; 0x1b4
   11e88:	sub	sp, sp, #1024	; 0x400
   11e8c:	movw	r7, #0
   11e90:	mov	r5, r0
   11e94:	mov	r0, #0
   11e98:	sub	r4, fp, #140	; 0x8c
   11e9c:	mov	r9, r1
   11ea0:	strb	r2, [fp, #-140]	; 0xffffff74
   11ea4:	mov	r2, #1
   11ea8:	movt	r7, #32760	; 0x7ff8
   11eac:	str	r0, [fp, #-40]	; 0xffffffd8
   11eb0:	add	r1, r4, #1
   11eb4:	mov	r0, r5
   11eb8:	str	r7, [fp, #-36]	; 0xffffffdc
   11ebc:	bl	109bc <read_bytes>
   11ec0:	mov	r8, #5
   11ec4:	cmp	r0, #1
   11ec8:	bne	12034 <read_double_with_peek+0x1b8>
   11ecc:	ldrb	r0, [fp, #-140]	; 0xffffff74
   11ed0:	add	r0, r5, r0, lsl #1
   11ed4:	ldrh	r0, [r0, #94]	; 0x5e
   11ed8:	cmp	r0, #42	; 0x2a
   11edc:	bne	11f08 <read_double_with_peek+0x8c>
   11ee0:	ldrb	r0, [fp, #-139]	; 0xffffff75
   11ee4:	add	r0, r5, r0, lsl #1
   11ee8:	ldrh	r0, [r0, #94]	; 0x5e
   11eec:	cmp	r0, #46	; 0x2e
   11ef0:	bne	11f08 <read_double_with_peek+0x8c>
   11ef4:	mov	r8, #0
   11ef8:	cmp	r9, #0
   11efc:	strne	r8, [r9]
   11f00:	strne	r7, [r9, #4]
   11f04:	b	12034 <read_double_with_peek+0x1b8>
   11f08:	mov	r7, #0
   11f0c:	mov	r6, #2
   11f10:	add	r1, r6, r4
   11f14:	ldrb	r0, [r1, #-1]
   11f18:	add	r0, r5, r0, lsl #1
   11f1c:	ldrh	r0, [r0, #94]	; 0x5e
   11f20:	cmp	r0, #47	; 0x2f
   11f24:	beq	11f5c <read_double_with_peek+0xe0>
   11f28:	mov	r0, r5
   11f2c:	mov	r2, #1
   11f30:	bl	109bc <read_bytes>
   11f34:	cmp	r0, #1
   11f38:	bne	12034 <read_double_with_peek+0x1b8>
   11f3c:	adds	r6, r6, #1
   11f40:	adc	r7, r7, #0
   11f44:	subs	r0, r6, #100	; 0x64
   11f48:	sbcs	r0, r7, #0
   11f4c:	bcc	11f10 <read_double_with_peek+0x94>
   11f50:	eor	r0, r6, #100	; 0x64
   11f54:	orrs	r0, r0, r7
   11f58:	beq	12034 <read_double_with_peek+0x1b8>
   11f5c:	add	r0, r5, #94	; 0x5e
   11f60:	sub	r4, fp, #140	; 0x8c
   11f64:	sub	r2, fp, #440	; 0x1b8
   11f68:	mov	r1, r6
   11f6c:	mov	r3, #300	; 0x12c
   11f70:	str	r0, [sp]
   11f74:	mov	r0, r4
   11f78:	bl	4c28 <por_utf8_encode@plt>
   11f7c:	ldr	r3, [r5, #24]
   11f80:	cmn	r0, #1
   11f84:	beq	11fe8 <read_double_with_peek+0x16c>
   11f88:	mov	sl, r0
   11f8c:	ldr	r0, [r5, #36]	; 0x24
   11f90:	sub	r6, fp, #440	; 0x1b8
   11f94:	sub	r2, fp, #40	; 0x28
   11f98:	mov	r1, sl
   11f9c:	str	r0, [sp]
   11fa0:	mov	r0, r6
   11fa4:	bl	4c1c <readstat_por_parse_double@plt>
   11fa8:	mov	r8, #0
   11fac:	cmn	r0, #1
   11fb0:	bne	12028 <read_double_with_peek+0x1ac>
   11fb4:	ldr	r0, [r5, #24]
   11fb8:	mov	r8, #5
   11fbc:	cmp	r0, #0
   11fc0:	beq	12028 <read_double_with_peek+0x1ac>
   11fc4:	asr	r0, sl, #31
   11fc8:	str	sl, [sp]
   11fcc:	stmib	sp, {r0, sl}
   11fd0:	str	r6, [sp, #12]
   11fd4:	str	r4, [sp, #16]
   11fd8:	add	r6, sp, #24
   11fdc:	ldr	r2, [pc, #96]	; 12044 <read_double_with_peek+0x1c8>
   11fe0:	add	r2, pc, r2
   11fe4:	b	1200c <read_double_with_peek+0x190>
   11fe8:	mov	r8, #16
   11fec:	cmp	r3, #0
   11ff0:	beq	12028 <read_double_with_peek+0x1ac>
   11ff4:	stm	sp, {r6, r7}
   11ff8:	str	r6, [sp, #8]
   11ffc:	str	r4, [sp, #12]
   12000:	add	r6, sp, #24
   12004:	ldr	r2, [pc, #52]	; 12040 <read_double_with_peek+0x1c4>
   12008:	add	r2, pc, r2
   1200c:	mov	r0, r6
   12010:	mov	r1, #1024	; 0x400
   12014:	bl	4c4c <snprintf@plt>
   12018:	ldr	r2, [r5, #24]
   1201c:	ldr	r1, [r5, #36]	; 0x24
   12020:	mov	r0, r6
   12024:	blx	r2
   12028:	cmp	r9, #0
   1202c:	vldrne	d16, [fp, #-40]	; 0xffffffd8
   12030:	vstrne	d16, [r9]
   12034:	mov	r0, r8
   12038:	sub	sp, fp, #28
   1203c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12040:	.word	0x0001284f
   12044:	.word	0x000128aa

00012048 <read_integer_in_range>:
   12048:	push	{r4, r5, fp, lr}
   1204c:	add	fp, sp, #8
   12050:	vpush	{d8}
   12054:	sub	sp, sp, #8
   12058:	mov	r5, r1
   1205c:	movw	r1, #0
   12060:	mov	r4, r2
   12064:	movt	r1, #32760	; 0x7ff8
   12068:	str	r1, [sp, #4]
   1206c:	mov	r1, #0
   12070:	str	r1, [sp]
   12074:	mov	r1, sp
   12078:	bl	120dc <read_double>
   1207c:	cmp	r0, #0
   12080:	bne	120d0 <read_integer_in_range+0x88>
   12084:	vldr	d8, [sp]
   12088:	vorr	d0, d8, d8
   1208c:	bl	4d00 <__isnan@plt>
   12090:	vmov	s0, r5
   12094:	mov	r1, r0
   12098:	mov	r0, #5
   1209c:	vcvt.f64.s32	d16, s0
   120a0:	vcmpe.f64	d8, d16
   120a4:	vmrs	APSR_nzcv, fpscr
   120a8:	bgt	120d0 <read_integer_in_range+0x88>
   120ac:	vcmpe.f64	d8, #0.0
   120b0:	vmrs	APSR_nzcv, fpscr
   120b4:	bmi	120d0 <read_integer_in_range+0x88>
   120b8:	cmp	r1, #0
   120bc:	bne	120d0 <read_integer_in_range+0x88>
   120c0:	cmp	r4, #0
   120c4:	mov	r0, #0
   120c8:	vcvtne.s32.f64	s0, d8
   120cc:	vstrne	s0, [r4]
   120d0:	sub	sp, fp, #16
   120d4:	vpop	{d8}
   120d8:	pop	{r4, r5, fp, pc}

000120dc <read_double>:
   120dc:	push	{r4, r5, fp, lr}
   120e0:	add	fp, sp, #8
   120e4:	sub	sp, sp, #8
   120e8:	mov	r4, r1
   120ec:	add	r1, sp, #7
   120f0:	mov	r2, #1
   120f4:	mov	r5, r0
   120f8:	bl	109bc <read_bytes>
   120fc:	mov	r1, r0
   12100:	mov	r0, #5
   12104:	cmp	r1, #1
   12108:	bne	1211c <read_double+0x40>
   1210c:	ldrb	r2, [sp, #7]
   12110:	mov	r0, r5
   12114:	mov	r1, r4
   12118:	bl	11e7c <read_double_with_peek>
   1211c:	sub	sp, fp, #8
   12120:	pop	{r4, r5, fp, pc}
   12124:	andeq	r0, r0, r0

00012128 <readstat_begin_writing_por>:
   12128:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1212c:	add	fp, sp, #24
   12130:	ldr	ip, [pc, #164]	; 121dc <readstat_begin_writing_por+0xb4>
   12134:	ldr	lr, [pc, #164]	; 121e0 <readstat_begin_writing_por+0xb8>
   12138:	ldr	r3, [pc, #164]	; 121e4 <readstat_begin_writing_por+0xbc>
   1213c:	add	r3, pc, r3
   12140:	add	ip, pc, ip
   12144:	add	lr, pc, lr
   12148:	str	r3, [r0, #276]	; 0x114
   1214c:	str	lr, [r0, #280]	; 0x118
   12150:	str	ip, [r0, #284]	; 0x11c
   12154:	ldr	ip, [pc, #140]	; 121e8 <readstat_begin_writing_por+0xc0>
   12158:	ldr	r3, [pc, #140]	; 121ec <readstat_begin_writing_por+0xc4>
   1215c:	add	r3, pc, r3
   12160:	add	ip, pc, ip
   12164:	str	r3, [r0, #264]	; 0x108
   12168:	str	ip, [r0, #268]	; 0x10c
   1216c:	ldr	ip, [pc, #124]	; 121f0 <readstat_begin_writing_por+0xc8>
   12170:	ldr	lr, [pc, #124]	; 121f4 <readstat_begin_writing_por+0xcc>
   12174:	ldr	r8, [pc, #124]	; 121f8 <readstat_begin_writing_por+0xd0>
   12178:	ldr	r4, [pc, #124]	; 121fc <readstat_begin_writing_por+0xd4>
   1217c:	ldr	r5, [pc, #124]	; 12200 <readstat_begin_writing_por+0xd8>
   12180:	ldr	r6, [pc, #124]	; 12204 <readstat_begin_writing_por+0xdc>
   12184:	ldr	r7, [pc, #124]	; 12208 <readstat_begin_writing_por+0xe0>
   12188:	ldr	r3, [pc, #124]	; 1220c <readstat_begin_writing_por+0xe4>
   1218c:	add	r3, pc, r3
   12190:	add	ip, pc, ip
   12194:	add	r4, pc, r4
   12198:	add	r5, pc, r5
   1219c:	add	r6, pc, r6
   121a0:	add	r7, pc, r7
   121a4:	add	lr, pc, lr
   121a8:	add	r8, pc, r8
   121ac:	str	r3, [r0, #228]	; 0xe4
   121b0:	add	r3, r0, #244	; 0xf4
   121b4:	str	r7, [r0, #232]	; 0xe8
   121b8:	str	r6, [r0, #236]	; 0xec
   121bc:	str	r5, [r0, #240]	; 0xf0
   121c0:	stm	r3, {r4, r8, lr}
   121c4:	str	ip, [r0, #256]	; 0x100
   121c8:	ldr	r3, [pc, #64]	; 12210 <readstat_begin_writing_por+0xe8>
   121cc:	add	r3, pc, r3
   121d0:	str	r3, [r0, #292]	; 0x124
   121d4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   121d8:	b	494c <readstat_begin_writing_file@plt>
   121dc:	.word	0x000010f4
   121e0:	.word	0x000010a0
   121e4:	.word	0x00000364
   121e8:	.word	0x00000310
   121ec:	.word	0x000002e8
   121f0:	.word	0x00000228
   121f4:	.word	0x000001f0
   121f8:	.word	0x000001c4
   121fc:	.word	0x000001ac
   12200:	.word	0x0000017c
   12204:	.word	0x0000014c
   12208:	.word	0x00000090
   1220c:	.word	0x00000090
   12210:	.word	0x00000040

00012214 <por_metadata_ok>:
   12214:	ldr	r0, [r0, #16]
   12218:	cmp	r0, #0
   1221c:	movwne	r0, #6
   12220:	bx	lr

00012224 <por_variable_width>:
   12224:	cmp	r0, #0
   12228:	mov	r2, #54	; 0x36
   1222c:	addeq	r2, r1, #54	; 0x36
   12230:	mov	r0, r2
   12234:	bx	lr

00012238 <por_variable_ok>:
   12238:	push	{r4, sl, fp, lr}
   1223c:	add	fp, sp, #8
   12240:	bl	4d30 <readstat_variable_get_name@plt>
   12244:	mov	r4, r0
   12248:	bl	4bd4 <strlen@plt>
   1224c:	sub	r1, r0, #1
   12250:	mov	r0, #28
   12254:	cmp	r1, #7
   12258:	pophi	{r4, sl, fp, pc}
   1225c:	ldrb	r3, [r4]
   12260:	cmp	r3, #0
   12264:	beq	122c8 <por_variable_ok+0x90>
   12268:	movw	lr, #2051	; 0x803
   1226c:	add	r1, r4, #1
   12270:	mvn	r2, #34	; 0x22
   12274:	mov	ip, #1
   12278:	mov	r0, r3
   1227c:	movt	lr, #8192	; 0x2000
   12280:	sub	r4, r0, #65	; 0x41
   12284:	uxtb	r4, r4
   12288:	cmp	r4, #26
   1228c:	subcs	r4, r0, #48	; 0x30
   12290:	uxtbcs	r4, r4
   12294:	cmpcs	r4, #10
   12298:	bcc	122bc <por_variable_ok+0x84>
   1229c:	uxtab	r4, r2, r0
   122a0:	cmp	r4, #29
   122a4:	bhi	122b0 <por_variable_ok+0x78>
   122a8:	tst	lr, ip, lsl r4
   122ac:	bne	122bc <por_variable_ok+0x84>
   122b0:	uxtb	r0, r0
   122b4:	cmp	r0, #95	; 0x5f
   122b8:	bne	122e8 <por_variable_ok+0xb0>
   122bc:	ldrb	r0, [r1], #1
   122c0:	cmp	r0, #0
   122c4:	bne	12280 <por_variable_ok+0x48>
   122c8:	sub	r0, r3, #65	; 0x41
   122cc:	mov	r1, #25
   122d0:	uxtb	r0, r0
   122d4:	cmp	r0, #26
   122d8:	movwcc	r1, #0
   122dc:	subs	r0, r3, #64	; 0x40
   122e0:	movne	r0, r1
   122e4:	pop	{r4, sl, fp, pc}
   122e8:	mov	r0, #26
   122ec:	pop	{r4, sl, fp, pc}

000122f0 <por_write_int8_value>:
   122f0:	push	{fp, lr}
   122f4:	mov	fp, sp
   122f8:	vmov	s0, r2
   122fc:	mov	r1, #54	; 0x36
   12300:	vcvt.f64.s32	d0, s0
   12304:	bl	132a8 <por_write_double_to_buffer>
   12308:	cmn	r0, #1
   1230c:	mov	r1, #0
   12310:	movweq	r1, #13
   12314:	mov	r0, r1
   12318:	pop	{fp, pc}

0001231c <por_write_int16_value>:
   1231c:	push	{fp, lr}
   12320:	mov	fp, sp
   12324:	vmov	s0, r2
   12328:	mov	r1, #54	; 0x36
   1232c:	vcvt.f64.s32	d0, s0
   12330:	bl	132a8 <por_write_double_to_buffer>
   12334:	cmn	r0, #1
   12338:	mov	r1, #0
   1233c:	movweq	r1, #13
   12340:	mov	r0, r1
   12344:	pop	{fp, pc}

00012348 <por_write_int32_value>:
   12348:	push	{fp, lr}
   1234c:	mov	fp, sp
   12350:	vmov	s0, r2
   12354:	mov	r1, #54	; 0x36
   12358:	vcvt.f64.s32	d0, s0
   1235c:	bl	132a8 <por_write_double_to_buffer>
   12360:	cmn	r0, #1
   12364:	mov	r1, #0
   12368:	movweq	r1, #13
   1236c:	mov	r0, r1
   12370:	pop	{fp, pc}

00012374 <por_write_float_value>:
   12374:	push	{fp, lr}
   12378:	mov	fp, sp
   1237c:	vcvt.f64.f32	d0, s0
   12380:	mov	r1, #54	; 0x36
   12384:	bl	132a8 <por_write_double_to_buffer>
   12388:	cmn	r0, #1
   1238c:	mov	r1, #0
   12390:	movweq	r1, #13
   12394:	mov	r0, r1
   12398:	pop	{fp, pc}

0001239c <por_write_double_value>:
   1239c:	push	{fp, lr}
   123a0:	mov	fp, sp
   123a4:	mov	r1, #54	; 0x36
   123a8:	bl	132a8 <por_write_double_to_buffer>
   123ac:	cmn	r0, #1
   123b0:	mov	r1, #0
   123b4:	movweq	r1, #13
   123b8:	mov	r0, r1
   123bc:	pop	{fp, pc}

000123c0 <por_write_string_value>:
   123c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   123c4:	add	fp, sp, #24
   123c8:	mov	r8, r0
   123cc:	mov	r0, r2
   123d0:	mov	r4, r2
   123d4:	mov	r5, r1
   123d8:	bl	4bd4 <strlen@plt>
   123dc:	mov	r7, r0
   123e0:	cmp	r0, #0
   123e4:	mov	r6, r0
   123e8:	mov	r0, r5
   123ec:	movweq	r6, #1
   123f0:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   123f4:	cmp	r6, r0
   123f8:	mov	r1, #54	; 0x36
   123fc:	movhi	r6, r0
   12400:	mov	r0, r8
   12404:	vmov	s0, r6
   12408:	vcvt.f64.u32	d0, s0
   1240c:	bl	132a8 <por_write_double_to_buffer>
   12410:	cmn	r0, #1
   12414:	beq	12440 <por_write_string_value+0x80>
   12418:	ldr	r1, [pc, #40]	; 12448 <por_write_string_value+0x88>
   1241c:	cmp	r7, #0
   12420:	add	r0, r8, r0
   12424:	mov	r2, r6
   12428:	add	r1, pc, r1
   1242c:	moveq	r4, r1
   12430:	mov	r1, r4
   12434:	bl	4c94 <strncpy@plt>
   12438:	mov	r0, #0
   1243c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12440:	mov	r0, #13
   12444:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12448:	.word	0x00012546

0001244c <por_write_missing_string>:
   1244c:	push	{fp, lr}
   12450:	mov	fp, sp
   12454:	vmov.i32	d0, #0	; 0x00000000
   12458:	mov	r1, #54	; 0x36
   1245c:	bl	132a8 <por_write_double_to_buffer>
   12460:	cmn	r0, #1
   12464:	mov	r1, #0
   12468:	movweq	r1, #13
   1246c:	mov	r0, r1
   12470:	pop	{fp, pc}
   12474:	nop	{0}

00012478 <por_write_missing_number>:
   12478:	push	{fp, lr}
   1247c:	mov	fp, sp
   12480:	vldr	d0, [pc, #24]	; 124a0 <por_write_missing_number+0x28>
   12484:	mov	r1, #54	; 0x36
   12488:	bl	132a8 <por_write_double_to_buffer>
   1248c:	cmn	r0, #1
   12490:	mov	r1, #0
   12494:	movweq	r1, #13
   12498:	mov	r0, r1
   1249c:	pop	{fp, pc}
   124a0:	.word	0x00000000
   124a4:	.word	0x7ff80000

000124a8 <por_begin_data>:
   124a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124ac:	add	fp, sp, #28
   124b0:	sub	sp, sp, #4
   124b4:	vpush	{d8-d9}
   124b8:	sub	sp, sp, #520	; 0x208
   124bc:	mov	r9, r0
   124c0:	mov	r0, #1
   124c4:	mov	r1, #8
   124c8:	bl	4778 <calloc@plt>
   124cc:	ldr	r4, [pc, #3316]	; 131c8 <por_begin_data+0xd20>
   124d0:	vmov.i32	q8, #0	; 0x00000000
   124d4:	mov	sl, r0
   124d8:	mov	r0, #0
   124dc:	ldr	r4, [pc, r4]
   124e0:	add	r1, r4, r0
   124e4:	add	r0, r0, #16
   124e8:	vld1.16	{d18-d19}, [r1]
   124ec:	cmp	r0, #512	; 0x200
   124f0:	vmax.u16	q8, q9, q8
   124f4:	bne	124e0 <por_begin_data+0x38>
   124f8:	vext.8	q9, q8, q8, #8
   124fc:	vmax.u16	q8, q8, q9
   12500:	vext.8	q9, q8, q8, #4
   12504:	vmax.u16	q8, q8, q9
   12508:	vdup.16	q9, d16[1]
   1250c:	vmax.u16	q8, q8, q9
   12510:	vmov.u16	r0, d16[0]
   12514:	add	r6, r0, #1
   12518:	mov	r0, r6
   1251c:	bl	4ae4 <malloc@plt>
   12520:	stm	sl, {r0, r6}
   12524:	mov	r1, #0
   12528:	ldr	r5, [pc, #3228]	; 131cc <por_begin_data+0xd24>
   1252c:	ldr	r5, [pc, r5]
   12530:	add	r2, r5, r1
   12534:	ldrh	r7, [r4]
   12538:	add	r1, r1, #1
   1253c:	add	r4, r4, #2
   12540:	ldrsb	r2, [r2]
   12544:	cmp	r7, #0
   12548:	uxtb	r3, r2
   1254c:	strbne	r3, [r0, r7]
   12550:	cmp	r3, #0
   12554:	strbne	r3, [r0, r2]
   12558:	cmp	r1, #256	; 0x100
   1255c:	bne	12530 <por_begin_data+0x88>
   12560:	add	r7, r9, #88	; 0x58
   12564:	mov	r0, r7
   12568:	bl	4bd4 <strlen@plt>
   1256c:	sub	r4, fp, #272	; 0x110
   12570:	mov	r6, r0
   12574:	mov	r1, #48	; 0x30
   12578:	mov	r2, #200	; 0xc8
   1257c:	mov	r0, r4
   12580:	bl	4c70 <memset@plt>
   12584:	ldr	r0, [pc, #3140]	; 131d0 <por_begin_data+0xd28>
   12588:	mov	r1, r7
   1258c:	mov	r2, #20
   12590:	add	r0, pc, r0
   12594:	vld1.64	{d16-d17}, [r0]
   12598:	add	r0, r4, #40	; 0x28
   1259c:	vst1.64	{d16-d17}, [r0]
   125a0:	movw	r0, #18758	; 0x4946
   125a4:	movt	r0, #17740	; 0x454c
   125a8:	str	r0, [fp, #-216]	; 0xffffff28
   125ac:	add	r0, r4, #60	; 0x3c
   125b0:	bl	4c94 <strncpy@plt>
   125b4:	cmp	r6, #19
   125b8:	bhi	125cc <por_begin_data+0x124>
   125bc:	add	r0, r0, r6
   125c0:	rsb	r2, r6, #20
   125c4:	mov	r1, #32
   125c8:	bl	4c70 <memset@plt>
   125cc:	ldr	r4, [pc, #3072]	; 131d4 <por_begin_data+0xd2c>
   125d0:	sub	r1, fp, #272	; 0x110
   125d4:	mov	r0, r9
   125d8:	mov	r2, #200	; 0xc8
   125dc:	mov	r3, #80	; 0x50
   125e0:	add	r4, pc, r4
   125e4:	str	r4, [sp]
   125e8:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   125ec:	add	r6, sp, #40	; 0x28
   125f0:	mov	r1, #48	; 0x30
   125f4:	mov	r2, #256	; 0x100
   125f8:	mov	r0, r6
   125fc:	bl	4c70 <memset@plt>
   12600:	mov	r0, #0
   12604:	ldrb	r1, [r5, r0]
   12608:	cmp	r1, #0
   1260c:	strbne	r1, [r6, r0]
   12610:	add	r0, r0, #1
   12614:	cmp	r0, #256	; 0x100
   12618:	bne	12604 <por_begin_data+0x15c>
   1261c:	add	r1, sp, #40	; 0x28
   12620:	mov	r0, r9
   12624:	mov	r2, #256	; 0x100
   12628:	mov	r3, #80	; 0x50
   1262c:	str	r4, [sp]
   12630:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   12634:	cmp	r0, #0
   12638:	beq	12644 <por_begin_data+0x19c>
   1263c:	mov	r8, r0
   12640:	b	12668 <por_begin_data+0x1c0>
   12644:	ldr	r2, [pc, #2956]	; 131d8 <por_begin_data+0xd30>
   12648:	mov	r0, r9
   1264c:	mov	r1, sl
   12650:	mov	r3, #8
   12654:	add	r2, pc, r2
   12658:	bl	13620 <por_write_string_n>
   1265c:	mov	r8, r0
   12660:	cmp	r0, #0
   12664:	beq	12684 <por_begin_data+0x1dc>
   12668:	mov	r0, sl
   1266c:	bl	135f8 <por_write_ctx_free>
   12670:	mov	r0, r8
   12674:	sub	sp, fp, #48	; 0x30
   12678:	vpop	{d8-d9}
   1267c:	add	sp, sp, #4
   12680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12684:	add	r0, r9, #20
   12688:	bl	4b38 <localtime@plt>
   1268c:	cmp	r0, #0
   12690:	beq	131b0 <por_begin_data+0xd08>
   12694:	mov	r7, r0
   12698:	mov	r0, #65	; 0x41
   1269c:	sub	r2, fp, #66	; 0x42
   126a0:	mov	r1, sl
   126a4:	mov	r3, #1
   126a8:	strh	r0, [fp, #-66]	; 0xffffffbe
   126ac:	mov	r0, r9
   126b0:	bl	13620 <por_write_string_n>
   126b4:	mov	r8, r0
   126b8:	cmp	r0, #0
   126bc:	bne	12668 <por_begin_data+0x1c0>
   126c0:	add	r2, r7, #12
   126c4:	movw	r4, #34079	; 0x851f
   126c8:	mov	r5, #100	; 0x64
   126cc:	ldm	r2, {r0, r1, r2}
   126d0:	movt	r4, #20971	; 0x51eb
   126d4:	add	r1, r1, #1
   126d8:	umull	r3, r6, r0, r4
   126dc:	lsr	r3, r6, #5
   126e0:	mls	r0, r3, r5, r0
   126e4:	umull	r3, r6, r1, r4
   126e8:	str	r0, [sp, #4]
   126ec:	movw	r0, #1900	; 0x76c
   126f0:	lsr	r3, r6, #5
   126f4:	add	r0, r2, r0
   126f8:	add	r6, sp, #40	; 0x28
   126fc:	mls	r1, r3, r5, r1
   12700:	str	r1, [sp]
   12704:	movw	r1, #5977	; 0x1759
   12708:	movt	r1, #53687	; 0xd1b7
   1270c:	umull	r1, r2, r0, r1
   12710:	lsr	r1, r2, #13
   12714:	movw	r2, #10000	; 0x2710
   12718:	mls	r3, r1, r2, r0
   1271c:	ldr	r2, [pc, #2744]	; 131dc <por_begin_data+0xd34>
   12720:	mov	r0, r6
   12724:	mov	r1, #9
   12728:	add	r2, pc, r2
   1272c:	bl	4c4c <snprintf@plt>
   12730:	mov	r0, r6
   12734:	bl	4bd4 <strlen@plt>
   12738:	mov	r3, r0
   1273c:	mov	r0, r9
   12740:	mov	r1, sl
   12744:	mov	r2, r6
   12748:	bl	13700 <por_write_string_field_n>
   1274c:	mov	r8, r0
   12750:	cmp	r0, #0
   12754:	bne	12668 <por_begin_data+0x1c0>
   12758:	ldm	r7, {r0, r1, r2}
   1275c:	umull	r3, r7, r0, r4
   12760:	lsr	r3, r7, #5
   12764:	mls	r0, r3, r5, r0
   12768:	umull	r3, r7, r1, r4
   1276c:	str	r0, [sp, #4]
   12770:	lsr	r3, r7, #5
   12774:	sub	r7, fp, #272	; 0x110
   12778:	mls	r1, r3, r5, r1
   1277c:	str	r1, [sp]
   12780:	umull	r0, r1, r2, r4
   12784:	lsr	r0, r1, #5
   12788:	mov	r1, #7
   1278c:	mls	r3, r0, r5, r2
   12790:	ldr	r2, [pc, #2632]	; 131e0 <por_begin_data+0xd38>
   12794:	mov	r0, r7
   12798:	add	r2, pc, r2
   1279c:	bl	4c4c <snprintf@plt>
   127a0:	mov	r0, r7
   127a4:	bl	4bd4 <strlen@plt>
   127a8:	mov	r3, r0
   127ac:	mov	r0, r9
   127b0:	mov	r1, sl
   127b4:	mov	r2, r7
   127b8:	bl	13700 <por_write_string_field_n>
   127bc:	mov	r8, r0
   127c0:	cmp	r0, #0
   127c4:	bne	12668 <por_begin_data+0x1c0>
   127c8:	mov	r0, #49	; 0x31
   127cc:	sub	r2, fp, #66	; 0x42
   127d0:	mov	r1, sl
   127d4:	mov	r3, #1
   127d8:	strh	r0, [fp, #-66]	; 0xffffffbe
   127dc:	mov	r0, r9
   127e0:	bl	13620 <por_write_string_n>
   127e4:	mov	r8, r0
   127e8:	cmp	r0, #0
   127ec:	bne	12668 <por_begin_data+0x1c0>
   127f0:	ldr	r2, [pc, #2540]	; 131e4 <por_begin_data+0xd3c>
   127f4:	mov	r0, r9
   127f8:	mov	r1, sl
   127fc:	mov	r3, #8
   12800:	add	r2, pc, r2
   12804:	bl	13700 <por_write_string_field_n>
   12808:	mov	r8, r0
   1280c:	cmp	r0, #0
   12810:	bne	12668 <por_begin_data+0x1c0>
   12814:	mov	r0, #51	; 0x33
   12818:	sub	r2, fp, #66	; 0x42
   1281c:	mov	r1, sl
   12820:	mov	r3, #1
   12824:	strh	r0, [fp, #-66]	; 0xffffffbe
   12828:	mov	r0, r9
   1282c:	bl	13620 <por_write_string_n>
   12830:	mov	r8, r0
   12834:	cmp	r0, #0
   12838:	bne	12668 <por_begin_data+0x1c0>
   1283c:	ldr	r2, [pc, #2468]	; 131e8 <por_begin_data+0xd40>
   12840:	mov	r0, r9
   12844:	mov	r1, sl
   12848:	mov	r3, #37	; 0x25
   1284c:	add	r2, pc, r2
   12850:	bl	13700 <por_write_string_field_n>
   12854:	mov	r8, r0
   12858:	cmp	r0, #0
   1285c:	bne	12668 <por_begin_data+0x1c0>
   12860:	mov	r0, #52	; 0x34
   12864:	sub	r2, fp, #66	; 0x42
   12868:	mov	r1, sl
   1286c:	mov	r3, #1
   12870:	strh	r0, [fp, #-66]	; 0xffffffbe
   12874:	mov	r0, r9
   12878:	bl	13620 <por_write_string_n>
   1287c:	mov	r8, r0
   12880:	cmp	r0, #0
   12884:	bne	12668 <por_begin_data+0x1c0>
   12888:	vldr	s0, [r9, #28]
   1288c:	mov	r0, r9
   12890:	mov	r1, sl
   12894:	vcvt.f64.s32	d0, s0
   12898:	bl	13744 <por_write_double>
   1289c:	mov	r8, r0
   128a0:	cmp	r0, #0
   128a4:	bne	12668 <por_begin_data+0x1c0>
   128a8:	mov	r0, #53	; 0x35
   128ac:	sub	r2, fp, #66	; 0x42
   128b0:	mov	r1, sl
   128b4:	mov	r3, #1
   128b8:	strh	r0, [fp, #-66]	; 0xffffffbe
   128bc:	mov	r0, r9
   128c0:	bl	13620 <por_write_string_n>
   128c4:	mov	r8, r0
   128c8:	cmp	r0, #0
   128cc:	bne	12668 <por_begin_data+0x1c0>
   128d0:	vldr	d0, [pc, #896]	; 12c58 <por_begin_data+0x7b0>
   128d4:	mov	r0, r9
   128d8:	mov	r1, sl
   128dc:	bl	13744 <por_write_double>
   128e0:	mov	r8, r0
   128e4:	cmp	r0, #0
   128e8:	bne	12668 <por_begin_data+0x1c0>
   128ec:	ldr	r0, [r9, #224]	; 0xe0
   128f0:	cmp	r0, #0
   128f4:	beq	12950 <por_begin_data+0x4a8>
   128f8:	mov	r0, #54	; 0x36
   128fc:	sub	r2, fp, #66	; 0x42
   12900:	mov	r1, sl
   12904:	mov	r3, #1
   12908:	strh	r0, [fp, #-66]	; 0xffffffbe
   1290c:	mov	r0, r9
   12910:	bl	13620 <por_write_string_n>
   12914:	mov	r8, r0
   12918:	cmp	r0, #0
   1291c:	bne	12668 <por_begin_data+0x1c0>
   12920:	ldr	r0, [r9, #224]	; 0xe0
   12924:	bl	4d30 <readstat_variable_get_name@plt>
   12928:	mov	r4, r0
   1292c:	bl	4bd4 <strlen@plt>
   12930:	mov	r3, r0
   12934:	mov	r0, r9
   12938:	mov	r1, sl
   1293c:	mov	r2, r4
   12940:	bl	13700 <por_write_string_field_n>
   12944:	mov	r8, r0
   12948:	cmp	r0, #0
   1294c:	bne	12668 <por_begin_data+0x1c0>
   12950:	ldr	r0, [r9, #28]
   12954:	cmp	r0, #1
   12958:	blt	12f38 <por_begin_data+0xa90>
   1295c:	add	r0, r7, #8
   12960:	str	r0, [sp, #28]
   12964:	add	r0, r6, #8
   12968:	str	r0, [sp, #24]
   1296c:	mov	r0, #0
   12970:	str	r0, [sp, #12]
   12974:	ldr	r1, [sp, #12]
   12978:	mov	r0, r9
   1297c:	bl	4d48 <readstat_get_variable@plt>
   12980:	str	r0, [sp, #36]	; 0x24
   12984:	bl	4d30 <readstat_variable_get_name@plt>
   12988:	mov	r4, r0
   1298c:	mov	r0, #55	; 0x37
   12990:	mov	r1, sl
   12994:	sub	r2, fp, #66	; 0x42
   12998:	mov	r3, #1
   1299c:	strh	r0, [fp, #-66]	; 0xffffffbe
   129a0:	mov	r0, r9
   129a4:	bl	13620 <por_write_string_n>
   129a8:	cmp	r0, #0
   129ac:	bne	1263c <por_begin_data+0x194>
   129b0:	ldr	r0, [sp, #36]	; 0x24
   129b4:	ldr	r1, [r0]
   129b8:	mov	r0, #0
   129bc:	cmp	r1, #0
   129c0:	bne	129cc <por_begin_data+0x524>
   129c4:	ldr	r0, [sp, #36]	; 0x24
   129c8:	ldr	r0, [r0, #1600]	; 0x640
   129cc:	vmov	s0, r0
   129d0:	mov	r0, r9
   129d4:	mov	r1, sl
   129d8:	vcvt.f64.u32	d0, s0
   129dc:	bl	13744 <por_write_double>
   129e0:	cmp	r0, #0
   129e4:	bne	1263c <por_begin_data+0x194>
   129e8:	mov	r0, r4
   129ec:	bl	4bd4 <strlen@plt>
   129f0:	mov	r3, r0
   129f4:	mov	r0, r9
   129f8:	mov	r1, sl
   129fc:	mov	r2, r4
   12a00:	bl	13700 <por_write_string_field_n>
   12a04:	cmp	r0, #0
   12a08:	bne	1263c <por_begin_data+0x194>
   12a0c:	ldr	r0, [sp, #36]	; 0x24
   12a10:	sub	r1, fp, #64	; 0x40
   12a14:	bl	4acc <spss_format_for_variable@plt>
   12a18:	cmp	r0, #0
   12a1c:	bne	1263c <por_begin_data+0x194>
   12a20:	mov	r0, r9
   12a24:	mov	r1, sl
   12a28:	sub	r2, fp, #64	; 0x40
   12a2c:	bl	137e4 <por_emit_format>
   12a30:	cmp	r0, #0
   12a34:	bne	1263c <por_begin_data+0x194>
   12a38:	mov	r0, r9
   12a3c:	mov	r1, sl
   12a40:	sub	r2, fp, #64	; 0x40
   12a44:	bl	137e4 <por_emit_format>
   12a48:	cmp	r0, #0
   12a4c:	bne	1263c <por_begin_data+0x194>
   12a50:	ldr	r0, [sp, #36]	; 0x24
   12a54:	ldr	r4, [r0]
   12a58:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   12a5c:	cmp	r4, #5
   12a60:	str	r0, [sp, #32]
   12a64:	bne	12bc8 <por_begin_data+0x720>
   12a68:	ldr	r0, [sp, #32]
   12a6c:	cmp	r0, #1
   12a70:	blt	12ec4 <por_begin_data+0xa1c>
   12a74:	mov	r0, #0
   12a78:	mov	r5, #0
   12a7c:	str	r0, [sp, #20]
   12a80:	ldr	r4, [sp, #36]	; 0x24
   12a84:	mov	r0, r6
   12a88:	mov	r2, r5
   12a8c:	mov	r1, r4
   12a90:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12a94:	mov	r0, r7
   12a98:	mov	r1, r4
   12a9c:	mov	r2, r5
   12aa0:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12aa4:	ldr	r0, [sp, #24]
   12aa8:	ldr	r1, [sp, #44]	; 0x2c
   12aac:	ldrd	r2, [r0]
   12ab0:	ldr	r0, [sp, #40]	; 0x28
   12ab4:	bl	4b8c <readstat_double_value@plt>
   12ab8:	ldr	r0, [sp, #28]
   12abc:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12ac0:	vmov.f64	d8, d0
   12ac4:	ldrd	r2, [r0]
   12ac8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12acc:	bl	4b8c <readstat_double_value@plt>
   12ad0:	vmov.f64	d9, d0
   12ad4:	vmov.f64	d0, d8
   12ad8:	bl	49d0 <__isinf@plt>
   12adc:	cmp	r0, #0
   12ae0:	beq	12b18 <por_begin_data+0x670>
   12ae4:	mov	r0, #57	; 0x39
   12ae8:	mov	r1, sl
   12aec:	sub	r2, fp, #66	; 0x42
   12af0:	mov	r3, #1
   12af4:	strh	r0, [fp, #-66]	; 0xffffffbe
   12af8:	mov	r0, r9
   12afc:	bl	13620 <por_write_string_n>
   12b00:	cmp	r0, #0
   12b04:	bne	1263c <por_begin_data+0x194>
   12b08:	vmov.f64	d0, d9
   12b0c:	mov	r0, r9
   12b10:	mov	r1, sl
   12b14:	b	12b58 <por_begin_data+0x6b0>
   12b18:	vmov.f64	d0, d9
   12b1c:	bl	49d0 <__isinf@plt>
   12b20:	cmp	r0, #0
   12b24:	beq	12b84 <por_begin_data+0x6dc>
   12b28:	mov	r0, #65	; 0x41
   12b2c:	mov	r1, sl
   12b30:	sub	r2, fp, #66	; 0x42
   12b34:	mov	r3, #1
   12b38:	strh	r0, [fp, #-66]	; 0xffffffbe
   12b3c:	mov	r0, r9
   12b40:	bl	13620 <por_write_string_n>
   12b44:	cmp	r0, #0
   12b48:	bne	1263c <por_begin_data+0x194>
   12b4c:	mov	r0, r9
   12b50:	mov	r1, sl
   12b54:	vmov.f64	d0, d8
   12b58:	bl	13744 <por_write_double>
   12b5c:	cmp	r0, #0
   12b60:	bne	1263c <por_begin_data+0x194>
   12b64:	ldr	r0, [sp, #20]
   12b68:	add	r0, r0, #2
   12b6c:	str	r0, [sp, #20]
   12b70:	ldr	r0, [sp, #32]
   12b74:	add	r5, r5, #1
   12b78:	cmp	r0, r5
   12b7c:	bne	12a80 <por_begin_data+0x5d8>
   12b80:	b	12ddc <por_begin_data+0x934>
   12b84:	vcmp.f64	d8, d9
   12b88:	vmrs	APSR_nzcv, fpscr
   12b8c:	beq	12b70 <por_begin_data+0x6c8>
   12b90:	mov	r0, #66	; 0x42
   12b94:	mov	r1, sl
   12b98:	sub	r2, fp, #66	; 0x42
   12b9c:	mov	r3, #1
   12ba0:	strh	r0, [fp, #-66]	; 0xffffffbe
   12ba4:	mov	r0, r9
   12ba8:	bl	13620 <por_write_string_n>
   12bac:	cmp	r0, #0
   12bb0:	bne	1263c <por_begin_data+0x194>
   12bb4:	vmov.f64	d0, d8
   12bb8:	mov	r0, r9
   12bbc:	mov	r1, sl
   12bc0:	bl	13744 <por_write_double>
   12bc4:	b	12b00 <por_begin_data+0x658>
   12bc8:	ldr	r0, [sp, #32]
   12bcc:	cmp	r0, #1
   12bd0:	blt	12ec4 <por_begin_data+0xa1c>
   12bd4:	mov	r0, #0
   12bd8:	mov	r5, #0
   12bdc:	str	r0, [sp, #16]
   12be0:	ldr	r4, [sp, #36]	; 0x24
   12be4:	mov	r0, r6
   12be8:	mov	r2, r5
   12bec:	mov	r1, r4
   12bf0:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12bf4:	mov	r0, r7
   12bf8:	mov	r1, r4
   12bfc:	mov	r2, r5
   12c00:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12c04:	ldr	r0, [sp, #24]
   12c08:	ldr	r1, [sp, #44]	; 0x2c
   12c0c:	ldrd	r2, [r0]
   12c10:	ldr	r0, [sp, #40]	; 0x28
   12c14:	bl	4988 <readstat_string_value@plt>
   12c18:	mov	r4, r0
   12c1c:	ldr	r0, [sp, #28]
   12c20:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12c24:	ldrd	r2, [r0]
   12c28:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12c2c:	bl	4988 <readstat_string_value@plt>
   12c30:	str	r0, [sp, #20]
   12c34:	cmp	r4, #0
   12c38:	ldrne	r0, [sp, #20]
   12c3c:	cmpne	r0, #0
   12c40:	bne	12c60 <por_begin_data+0x7b8>
   12c44:	ldr	r0, [sp, #32]
   12c48:	add	r5, r5, #1
   12c4c:	cmp	r0, r5
   12c50:	bne	12be0 <por_begin_data+0x738>
   12c54:	b	12cf4 <por_begin_data+0x84c>
   12c58:	.word	0x00000000
   12c5c:	.word	0x40490000
   12c60:	ldr	r1, [sp, #20]
   12c64:	mov	r0, r4
   12c68:	bl	4808 <strcmp@plt>
   12c6c:	cmp	r0, #0
   12c70:	beq	12c44 <por_begin_data+0x79c>
   12c74:	mov	r0, #66	; 0x42
   12c78:	mov	r1, sl
   12c7c:	sub	r2, fp, #66	; 0x42
   12c80:	mov	r3, #1
   12c84:	strh	r0, [fp, #-66]	; 0xffffffbe
   12c88:	mov	r0, r9
   12c8c:	bl	13620 <por_write_string_n>
   12c90:	cmp	r0, #0
   12c94:	bne	1263c <por_begin_data+0x194>
   12c98:	mov	r0, r4
   12c9c:	bl	4bd4 <strlen@plt>
   12ca0:	mov	r3, r0
   12ca4:	mov	r0, r9
   12ca8:	mov	r1, sl
   12cac:	mov	r2, r4
   12cb0:	bl	13700 <por_write_string_field_n>
   12cb4:	cmp	r0, #0
   12cb8:	bne	1263c <por_begin_data+0x194>
   12cbc:	ldr	r4, [sp, #20]
   12cc0:	mov	r0, r4
   12cc4:	bl	4bd4 <strlen@plt>
   12cc8:	mov	r3, r0
   12ccc:	mov	r0, r9
   12cd0:	mov	r1, sl
   12cd4:	mov	r2, r4
   12cd8:	bl	13700 <por_write_string_field_n>
   12cdc:	cmp	r0, #0
   12ce0:	bne	1263c <por_begin_data+0x194>
   12ce4:	ldr	r0, [sp, #16]
   12ce8:	add	r0, r0, #2
   12cec:	str	r0, [sp, #16]
   12cf0:	b	12c44 <por_begin_data+0x79c>
   12cf4:	mov	r5, #0
   12cf8:	ldr	r4, [sp, #36]	; 0x24
   12cfc:	mov	r0, r6
   12d00:	mov	r2, r5
   12d04:	mov	r1, r4
   12d08:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12d0c:	mov	r0, r7
   12d10:	mov	r1, r4
   12d14:	mov	r2, r5
   12d18:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12d1c:	ldr	r0, [sp, #24]
   12d20:	ldr	r1, [sp, #44]	; 0x2c
   12d24:	ldrd	r2, [r0]
   12d28:	ldr	r0, [sp, #40]	; 0x28
   12d2c:	bl	4988 <readstat_string_value@plt>
   12d30:	mov	r4, r0
   12d34:	ldr	r0, [sp, #28]
   12d38:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12d3c:	ldrd	r2, [r0]
   12d40:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12d44:	bl	4988 <readstat_string_value@plt>
   12d48:	cmp	r4, #0
   12d4c:	movne	r1, r0
   12d50:	cmpne	r0, #0
   12d54:	bne	12d6c <por_begin_data+0x8c4>
   12d58:	ldr	r0, [sp, #32]
   12d5c:	add	r5, r5, #1
   12d60:	cmp	r0, r5
   12d64:	bne	12cf8 <por_begin_data+0x850>
   12d68:	b	12dd4 <por_begin_data+0x92c>
   12d6c:	mov	r0, r4
   12d70:	bl	4808 <strcmp@plt>
   12d74:	cmp	r0, #0
   12d78:	bne	12d58 <por_begin_data+0x8b0>
   12d7c:	mov	r0, #56	; 0x38
   12d80:	mov	r1, sl
   12d84:	sub	r2, fp, #66	; 0x42
   12d88:	mov	r3, #1
   12d8c:	strh	r0, [fp, #-66]	; 0xffffffbe
   12d90:	mov	r0, r9
   12d94:	bl	13620 <por_write_string_n>
   12d98:	cmp	r0, #0
   12d9c:	bne	1263c <por_begin_data+0x194>
   12da0:	mov	r0, r4
   12da4:	bl	4bd4 <strlen@plt>
   12da8:	mov	r3, r0
   12dac:	mov	r0, r9
   12db0:	mov	r1, sl
   12db4:	mov	r2, r4
   12db8:	bl	13700 <por_write_string_field_n>
   12dbc:	cmp	r0, #0
   12dc0:	bne	1263c <por_begin_data+0x194>
   12dc4:	ldr	r0, [sp, #16]
   12dc8:	add	r0, r0, #1
   12dcc:	str	r0, [sp, #16]
   12dd0:	b	12d58 <por_begin_data+0x8b0>
   12dd4:	ldr	r0, [sp, #16]
   12dd8:	b	12ebc <por_begin_data+0xa14>
   12ddc:	mov	r5, #0
   12de0:	ldr	r4, [sp, #36]	; 0x24
   12de4:	mov	r0, r6
   12de8:	mov	r2, r5
   12dec:	mov	r1, r4
   12df0:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12df4:	mov	r0, r7
   12df8:	mov	r1, r4
   12dfc:	mov	r2, r5
   12e00:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12e04:	ldr	r0, [sp, #24]
   12e08:	ldr	r1, [sp, #44]	; 0x2c
   12e0c:	ldrd	r2, [r0]
   12e10:	ldr	r0, [sp, #40]	; 0x28
   12e14:	bl	4b8c <readstat_double_value@plt>
   12e18:	ldr	r0, [sp, #28]
   12e1c:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12e20:	vmov.f64	d8, d0
   12e24:	ldrd	r2, [r0]
   12e28:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12e2c:	bl	4b8c <readstat_double_value@plt>
   12e30:	vcmp.f64	d8, d0
   12e34:	vmrs	APSR_nzcv, fpscr
   12e38:	bne	12ea8 <por_begin_data+0xa00>
   12e3c:	vmov.f64	d9, d0
   12e40:	vmov.f64	d0, d8
   12e44:	bl	49d0 <__isinf@plt>
   12e48:	cmp	r0, #0
   12e4c:	bne	12ea8 <por_begin_data+0xa00>
   12e50:	vmov.f64	d0, d9
   12e54:	bl	49d0 <__isinf@plt>
   12e58:	cmp	r0, #0
   12e5c:	bne	12ea8 <por_begin_data+0xa00>
   12e60:	mov	r0, #56	; 0x38
   12e64:	mov	r1, sl
   12e68:	sub	r2, fp, #66	; 0x42
   12e6c:	mov	r3, #1
   12e70:	strh	r0, [fp, #-66]	; 0xffffffbe
   12e74:	mov	r0, r9
   12e78:	bl	13620 <por_write_string_n>
   12e7c:	cmp	r0, #0
   12e80:	bne	1263c <por_begin_data+0x194>
   12e84:	vmov.f64	d0, d8
   12e88:	mov	r0, r9
   12e8c:	mov	r1, sl
   12e90:	bl	13744 <por_write_double>
   12e94:	cmp	r0, #0
   12e98:	bne	1263c <por_begin_data+0x194>
   12e9c:	ldr	r0, [sp, #20]
   12ea0:	add	r0, r0, #1
   12ea4:	str	r0, [sp, #20]
   12ea8:	ldr	r0, [sp, #32]
   12eac:	add	r5, r5, #1
   12eb0:	cmp	r0, r5
   12eb4:	bne	12de0 <por_begin_data+0x938>
   12eb8:	ldr	r0, [sp, #20]
   12ebc:	cmp	r0, #3
   12ec0:	bgt	131b8 <por_begin_data+0xd10>
   12ec4:	ldr	r0, [sp, #36]	; 0x24
   12ec8:	bl	4dcc <readstat_variable_get_label@plt>
   12ecc:	cmp	r0, #0
   12ed0:	beq	12f20 <por_begin_data+0xa78>
   12ed4:	mov	r4, r0
   12ed8:	mov	r0, #67	; 0x43
   12edc:	mov	r1, sl
   12ee0:	sub	r2, fp, #66	; 0x42
   12ee4:	mov	r3, #1
   12ee8:	strh	r0, [fp, #-66]	; 0xffffffbe
   12eec:	mov	r0, r9
   12ef0:	bl	13620 <por_write_string_n>
   12ef4:	cmp	r0, #0
   12ef8:	bne	1263c <por_begin_data+0x194>
   12efc:	mov	r0, r4
   12f00:	bl	4bd4 <strlen@plt>
   12f04:	mov	r3, r0
   12f08:	mov	r0, r9
   12f0c:	mov	r1, sl
   12f10:	mov	r2, r4
   12f14:	bl	13700 <por_write_string_field_n>
   12f18:	cmp	r0, #0
   12f1c:	bne	1263c <por_begin_data+0x194>
   12f20:	ldr	r1, [sp, #12]
   12f24:	ldr	r0, [r9, #28]
   12f28:	add	r1, r1, #1
   12f2c:	cmp	r1, r0
   12f30:	str	r1, [sp, #12]
   12f34:	blt	12974 <por_begin_data+0x4cc>
   12f38:	ldr	r0, [r9, #40]	; 0x28
   12f3c:	cmp	r0, #1
   12f40:	blt	130e0 <por_begin_data+0xc38>
   12f44:	mov	r5, #0
   12f48:	mov	r0, r9
   12f4c:	mov	r1, r5
   12f50:	bl	4df0 <readstat_get_label_set@plt>
   12f54:	mov	r7, r0
   12f58:	ldr	r0, [r0, #264]	; 0x108
   12f5c:	cmp	r0, #0
   12f60:	beq	130d0 <por_begin_data+0xc28>
   12f64:	ldr	r0, [r7, #276]	; 0x114
   12f68:	cmp	r0, #0
   12f6c:	beq	130d0 <por_begin_data+0xc28>
   12f70:	ldr	r0, [r7]
   12f74:	mov	r1, sl
   12f78:	sub	r2, fp, #66	; 0x42
   12f7c:	mov	r3, #1
   12f80:	str	r0, [sp, #36]	; 0x24
   12f84:	mov	r0, #68	; 0x44
   12f88:	strh	r0, [fp, #-66]	; 0xffffffbe
   12f8c:	mov	r0, r9
   12f90:	bl	13620 <por_write_string_n>
   12f94:	cmp	r0, #0
   12f98:	bne	1263c <por_begin_data+0x194>
   12f9c:	vldr	s0, [r7, #276]	; 0x114
   12fa0:	mov	r0, r9
   12fa4:	mov	r1, sl
   12fa8:	vcvt.f64.s32	d0, s0
   12fac:	bl	13744 <por_write_double>
   12fb0:	cmp	r0, #0
   12fb4:	bne	1263c <por_begin_data+0x194>
   12fb8:	ldr	r0, [r7, #276]	; 0x114
   12fbc:	cmp	r0, #1
   12fc0:	blt	1300c <por_begin_data+0xb64>
   12fc4:	mov	r6, #0
   12fc8:	mov	r0, r7
   12fcc:	mov	r1, r6
   12fd0:	bl	4e14 <readstat_get_label_set_variable@plt>
   12fd4:	bl	4d30 <readstat_variable_get_name@plt>
   12fd8:	mov	r4, r0
   12fdc:	bl	4bd4 <strlen@plt>
   12fe0:	mov	r3, r0
   12fe4:	mov	r0, r9
   12fe8:	mov	r1, sl
   12fec:	mov	r2, r4
   12ff0:	bl	13700 <por_write_string_field_n>
   12ff4:	cmp	r0, #0
   12ff8:	bne	1263c <por_begin_data+0x194>
   12ffc:	ldr	r0, [r7, #276]	; 0x114
   13000:	add	r6, r6, #1
   13004:	cmp	r6, r0
   13008:	blt	12fc8 <por_begin_data+0xb20>
   1300c:	vldr	s0, [r7, #264]	; 0x108
   13010:	mov	r0, r9
   13014:	mov	r1, sl
   13018:	vcvt.f64.s32	d0, s0
   1301c:	bl	13744 <por_write_double>
   13020:	cmp	r0, #0
   13024:	bne	1263c <por_begin_data+0x194>
   13028:	ldr	r0, [r7, #264]	; 0x108
   1302c:	cmp	r0, #1
   13030:	blt	130d0 <por_begin_data+0xc28>
   13034:	mov	r6, #0
   13038:	mov	r0, r7
   1303c:	mov	r1, r6
   13040:	bl	4e8c <readstat_get_value_label@plt>
   13044:	mov	r4, r0
   13048:	ldr	r0, [sp, #36]	; 0x24
   1304c:	cmp	r0, #5
   13050:	beq	13080 <por_begin_data+0xbd8>
   13054:	ldr	r0, [sp, #36]	; 0x24
   13058:	cmp	r0, #3
   1305c:	beq	13088 <por_begin_data+0xbe0>
   13060:	ldr	r0, [sp, #36]	; 0x24
   13064:	cmp	r0, #0
   13068:	bne	130a8 <por_begin_data+0xc00>
   1306c:	ldrd	r2, [r4, #16]
   13070:	mov	r0, r9
   13074:	mov	r1, sl
   13078:	bl	13700 <por_write_string_field_n>
   1307c:	b	1309c <por_begin_data+0xbf4>
   13080:	vldr	d0, [r4]
   13084:	b	13090 <por_begin_data+0xbe8>
   13088:	vldr	s0, [r4, #8]
   1308c:	vcvt.f64.s32	d0, s0
   13090:	mov	r0, r9
   13094:	mov	r1, sl
   13098:	bl	13744 <por_write_double>
   1309c:	mov	r8, r0
   130a0:	cmp	r0, #0
   130a4:	bne	12668 <por_begin_data+0x1c0>
   130a8:	ldrd	r2, [r4, #24]
   130ac:	mov	r0, r9
   130b0:	mov	r1, sl
   130b4:	bl	13700 <por_write_string_field_n>
   130b8:	cmp	r0, #0
   130bc:	bne	1263c <por_begin_data+0x194>
   130c0:	ldr	r0, [r7, #264]	; 0x108
   130c4:	add	r6, r6, #1
   130c8:	cmp	r6, r0
   130cc:	blt	13038 <por_begin_data+0xb90>
   130d0:	ldr	r0, [r9, #40]	; 0x28
   130d4:	add	r5, r5, #1
   130d8:	cmp	r5, r0
   130dc:	blt	12f48 <por_begin_data+0xaa0>
   130e0:	mov	r0, #69	; 0x45
   130e4:	sub	r2, fp, #66	; 0x42
   130e8:	mov	r1, sl
   130ec:	mov	r3, #1
   130f0:	strh	r0, [fp, #-66]	; 0xffffffbe
   130f4:	mov	r0, r9
   130f8:	bl	13620 <por_write_string_n>
   130fc:	mov	r8, r0
   13100:	cmp	r0, #0
   13104:	bne	12668 <por_begin_data+0x1c0>
   13108:	vldr	s0, [r9, #52]	; 0x34
   1310c:	mov	r0, r9
   13110:	mov	r1, sl
   13114:	vcvt.f64.s32	d0, s0
   13118:	bl	13744 <por_write_double>
   1311c:	mov	r8, r0
   13120:	cmp	r0, #0
   13124:	bne	12668 <por_begin_data+0x1c0>
   13128:	ldr	r0, [r9, #52]	; 0x34
   1312c:	cmp	r0, #1
   13130:	blt	1317c <por_begin_data+0xcd4>
   13134:	mov	r4, #0
   13138:	ldr	r0, [r9, #48]	; 0x30
   1313c:	ldr	r6, [r0, r4, lsl #2]
   13140:	mov	r0, r6
   13144:	bl	4bd4 <strlen@plt>
   13148:	cmp	r0, #80	; 0x50
   1314c:	bhi	131c0 <por_begin_data+0xd18>
   13150:	mov	r3, r0
   13154:	mov	r0, r9
   13158:	mov	r1, sl
   1315c:	mov	r2, r6
   13160:	bl	13700 <por_write_string_field_n>
   13164:	cmp	r0, #0
   13168:	bne	1263c <por_begin_data+0x194>
   1316c:	ldr	r0, [r9, #52]	; 0x34
   13170:	add	r4, r4, #1
   13174:	cmp	r4, r0
   13178:	blt	13138 <por_begin_data+0xc90>
   1317c:	mov	r0, #70	; 0x46
   13180:	sub	r2, fp, #66	; 0x42
   13184:	mov	r1, sl
   13188:	mov	r3, #1
   1318c:	strh	r0, [fp, #-66]	; 0xffffffbe
   13190:	mov	r0, r9
   13194:	bl	13620 <por_write_string_n>
   13198:	mov	r8, r0
   1319c:	cmp	r0, #0
   131a0:	bne	12668 <por_begin_data+0x1c0>
   131a4:	mov	r8, #0
   131a8:	str	sl, [r9, #300]	; 0x12c
   131ac:	b	12670 <por_begin_data+0x1c8>
   131b0:	mov	r8, #39	; 0x27
   131b4:	b	12668 <por_begin_data+0x1c0>
   131b8:	mov	r8, #31
   131bc:	b	12668 <por_begin_data+0x1c0>
   131c0:	mov	r8, #32
   131c4:	b	12668 <por_begin_data+0x1c0>
   131c8:	.word	0x00031df4
   131cc:	.word	0x00031db0
   131d0:	.word	0x000123b8
   131d4:	.word	0x000122f4
   131d8:	.word	0x000121dc
   131dc:	.word	0x000120c1
   131e0:	.word	0x0001205e
   131e4:	.word	0x0001213d
   131e8:	.word	0x000120d4

000131ec <por_write_row>:
   131ec:	push	{fp, lr}
   131f0:	mov	fp, sp
   131f4:	mov	ip, r1
   131f8:	mov	r3, #0
   131fc:	cmp	r2, #0
   13200:	beq	1322c <por_write_row+0x40>
   13204:	mov	r1, #0
   13208:	ldrb	lr, [ip, r1]
   1320c:	cmp	lr, #0
   13210:	beq	13220 <por_write_row+0x34>
   13214:	cmp	r1, r3
   13218:	strbne	lr, [ip, r3]
   1321c:	add	r3, r3, #1
   13220:	add	r1, r1, #1
   13224:	cmp	r2, r1
   13228:	bne	13208 <por_write_row+0x1c>
   1322c:	ldr	r1, [r0, #300]	; 0x12c
   13230:	mov	r2, ip
   13234:	pop	{fp, lr}
   13238:	b	13620 <por_write_string_n>

0001323c <por_end_data>:
   1323c:	push	{r4, r5, fp, lr}
   13240:	add	fp, sp, #8
   13244:	sub	sp, sp, #8
   13248:	ldr	r1, [r0, #300]	; 0x12c
   1324c:	mov	r4, r0
   13250:	mov	r0, #90	; 0x5a
   13254:	add	r2, sp, #6
   13258:	mov	r3, #1
   1325c:	strh	r0, [sp, #6]
   13260:	mov	r0, r4
   13264:	bl	13620 <por_write_string_n>
   13268:	mov	r5, r0
   1326c:	cmp	r0, #0
   13270:	bne	13290 <por_end_data+0x54>
   13274:	ldr	r3, [pc, #40]	; 132a4 <por_end_data+0x68>
   13278:	mov	r0, r4
   1327c:	mov	r1, #90	; 0x5a
   13280:	mov	r2, #80	; 0x50
   13284:	add	r3, pc, r3
   13288:	bl	4ea4 <readstat_write_line_padding@plt>
   1328c:	mov	r5, r0
   13290:	ldr	r0, [r4, #300]	; 0x12c
   13294:	bl	135f8 <por_write_ctx_free>
   13298:	mov	r0, r5
   1329c:	sub	sp, fp, #8
   132a0:	pop	{r4, r5, fp, pc}
   132a4:	.word	0x00011650

000132a8 <por_write_double_to_buffer>:
   132a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132ac:	add	fp, sp, #28
   132b0:	sub	sp, sp, #4
   132b4:	vpush	{d8-d9}
   132b8:	sub	sp, sp, #16
   132bc:	vmov.f64	d9, d0
   132c0:	mov	r8, r0
   132c4:	bl	4d00 <__isnan@plt>
   132c8:	cmp	r0, #0
   132cc:	beq	132e0 <por_write_double_to_buffer+0x38>
   132d0:	movw	r0, #11818	; 0x2e2a
   132d4:	strh	r0, [r8]
   132d8:	mov	r0, #2
   132dc:	b	13514 <por_write_double_to_buffer+0x26c>
   132e0:	vmov.f64	d0, d9
   132e4:	bl	49d0 <__isinf@plt>
   132e8:	cmp	r0, #0
   132ec:	beq	13334 <por_write_double_to_buffer+0x8c>
   132f0:	vcmpe.f64	d9, #0.0
   132f4:	mov	r0, #0
   132f8:	movw	r2, #11057	; 0x2b31
   132fc:	vmrs	APSR_nzcv, fpscr
   13300:	movmi	r0, #45	; 0x2d
   13304:	strbmi	r0, [r8]
   13308:	movmi	r0, #1
   1330c:	add	r1, r8, r0
   13310:	orr	r0, r0, #2
   13314:	strh	r2, [r1]
   13318:	movw	r1, #21588	; 0x5454
   1331c:	mov	r2, r8
   13320:	strh	r1, [r2, r0]!
   13324:	mov	r1, #47	; 0x2f
   13328:	add	r0, r0, #3
   1332c:	strb	r1, [r2, #2]
   13330:	b	13514 <por_write_double_to_buffer+0x26c>
   13334:	vabs.f64	d0, d9
   13338:	add	r0, sp, #8
   1333c:	bl	4b50 <modf@plt>
   13340:	ldr	r0, [sp, #8]
   13344:	ldr	r1, [sp, #12]
   13348:	vmov.f64	d8, d0
   1334c:	bl	236e4 <__aeabi_d2lz>
   13350:	vcmpe.f64	d9, #0.0
   13354:	mov	r5, r0
   13358:	mov	r6, r1
   1335c:	mov	r4, #0
   13360:	vmrs	APSR_nzcv, fpscr
   13364:	movmi	r0, #45	; 0x2d
   13368:	movmi	r4, #1
   1336c:	strbmi	r0, [r8]
   13370:	orrs	r0, r5, r6
   13374:	beq	133b4 <por_write_double_to_buffer+0x10c>
   13378:	mov	r0, r5
   1337c:	mov	r1, r6
   13380:	mov	r2, #30
   13384:	mov	r3, #0
   13388:	mov	r9, #0
   1338c:	bl	235c4 <__aeabi_ldivmod>
   13390:	vcmp.f64	d8, #0.0
   13394:	str	r4, [sp, #4]
   13398:	vmrs	APSR_nzcv, fpscr
   1339c:	orrseq	r0, r2, r3
   133a0:	beq	133d0 <por_write_double_to_buffer+0x128>
   133a4:	mov	r4, r5
   133a8:	mov	r7, r6
   133ac:	mov	sl, #0
   133b0:	b	1342c <por_write_double_to_buffer+0x184>
   133b4:	mov	r0, #48	; 0x30
   133b8:	add	r5, r4, #1
   133bc:	mov	r9, #0
   133c0:	mov	sl, #0
   133c4:	strb	r0, [r8, r4]
   133c8:	mov	r0, #0
   133cc:	b	13444 <por_write_double_to_buffer+0x19c>
   133d0:	mov	r9, #0
   133d4:	mov	sl, #0
   133d8:	mov	r0, r5
   133dc:	mov	r1, r6
   133e0:	mov	r2, #30
   133e4:	mov	r3, #0
   133e8:	bl	235c4 <__aeabi_ldivmod>
   133ec:	mov	r2, #30
   133f0:	mov	r3, #0
   133f4:	mov	r4, r0
   133f8:	mov	r7, r1
   133fc:	bl	235c4 <__aeabi_ldivmod>
   13400:	adds	r9, r9, #1
   13404:	adc	sl, sl, #0
   13408:	adds	r0, r5, #29
   1340c:	adc	r1, r6, #0
   13410:	subs	r0, r0, #59	; 0x3b
   13414:	sbcs	r0, r1, #0
   13418:	bcc	1342c <por_write_double_to_buffer+0x184>
   1341c:	orrs	r0, r2, r3
   13420:	mov	r5, r4
   13424:	mov	r6, r7
   13428:	beq	133d8 <por_write_double_to_buffer+0x130>
   1342c:	ldr	r5, [sp, #4]
   13430:	mov	r2, r4
   13434:	mov	r3, r7
   13438:	add	r0, r8, r5
   1343c:	bl	13534 <por_write_base30_integer>
   13440:	add	r5, r0, r5
   13444:	vcmp.f64	d8, #0.0
   13448:	vmrs	APSR_nzcv, fpscr
   1344c:	beq	134e0 <por_write_double_to_buffer+0x238>
   13450:	mov	r1, #46	; 0x2e
   13454:	cmp	r0, #49	; 0x31
   13458:	strb	r1, [r8, r5]
   1345c:	add	r5, r5, #1
   13460:	bgt	134e0 <por_write_double_to_buffer+0x238>
   13464:	vcmp.f64	d8, #0.0
   13468:	vmrs	APSR_nzcv, fpscr
   1346c:	beq	134e0 <por_write_double_to_buffer+0x238>
   13470:	vmov.f64	d9, #62	; 0x41f00000  30.0
   13474:	add	r6, r0, #1
   13478:	add	r4, sp, #8
   1347c:	vmul.f64	d0, d8, d9
   13480:	mov	r0, r4
   13484:	bl	4b50 <modf@plt>
   13488:	ldr	r0, [sp, #8]
   1348c:	ldr	r1, [sp, #12]
   13490:	vmov.f64	d8, d0
   13494:	bl	236e4 <__aeabi_d2lz>
   13498:	cmp	r1, #0
   1349c:	bmi	1352c <por_write_double_to_buffer+0x284>
   134a0:	subs	r2, r0, #10
   134a4:	sbcs	r1, r1, #0
   134a8:	mov	r1, #0
   134ac:	movwcc	r1, #1
   134b0:	cmp	r1, #0
   134b4:	mov	r1, #55	; 0x37
   134b8:	movwne	r1, #48	; 0x30
   134bc:	cmp	r6, #49	; 0x31
   134c0:	add	r0, r1, r0
   134c4:	strb	r0, [r8, r5]
   134c8:	add	r5, r5, #1
   134cc:	bgt	134e0 <por_write_double_to_buffer+0x238>
   134d0:	vcmp.f64	d8, #0.0
   134d4:	add	r6, r6, #1
   134d8:	vmrs	APSR_nzcv, fpscr
   134dc:	bne	1347c <por_write_double_to_buffer+0x1d4>
   134e0:	orrs	r0, r9, sl
   134e4:	beq	13508 <por_write_double_to_buffer+0x260>
   134e8:	mov	r0, #43	; 0x2b
   134ec:	add	r4, r5, #1
   134f0:	mov	r2, r9
   134f4:	mov	r3, sl
   134f8:	strb	r0, [r8, r5]
   134fc:	add	r0, r8, r4
   13500:	bl	13534 <por_write_base30_integer>
   13504:	add	r5, r0, r4
   13508:	mov	r0, #47	; 0x2f
   1350c:	strb	r0, [r8, r5]
   13510:	add	r0, r5, #1
   13514:	mov	r1, #0
   13518:	strb	r1, [r8, r0]
   1351c:	sub	sp, fp, #48	; 0x30
   13520:	vpop	{d8-d9}
   13524:	add	sp, sp, #4
   13528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1352c:	mvn	r0, #0
   13530:	b	1351c <por_write_double_to_buffer+0x274>

00013534 <por_write_base30_integer>:
   13534:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13538:	add	fp, sp, #24
   1353c:	mov	r9, r0
   13540:	orrs	r0, r2, r3
   13544:	beq	135ec <por_write_base30_integer+0xb8>
   13548:	mov	r6, r3
   1354c:	mov	r7, r2
   13550:	mov	r4, #0
   13554:	mov	r8, #30
   13558:	mov	r0, r7
   1355c:	mov	r1, r6
   13560:	mov	r2, #30
   13564:	mov	r3, #0
   13568:	bl	23698 <__aeabi_uldivmod>
   1356c:	umull	r2, r3, r0, r8
   13570:	rsb	r5, r1, r1, lsl #4
   13574:	add	r3, r3, r5, lsl #1
   13578:	subs	r2, r7, r2
   1357c:	sbc	r3, r6, r3
   13580:	subs	r5, r2, #10
   13584:	sbcs	r3, r3, #0
   13588:	mov	r3, #0
   1358c:	movwcc	r3, #1
   13590:	cmp	r3, #0
   13594:	mov	r3, #55	; 0x37
   13598:	movwne	r3, #48	; 0x30
   1359c:	add	r2, r3, r2
   135a0:	strb	r2, [r9, r4]
   135a4:	subs	r2, r7, #30
   135a8:	add	r4, r4, #1
   135ac:	mov	r7, r0
   135b0:	sbcs	r2, r6, #0
   135b4:	mov	r6, r1
   135b8:	bcs	13558 <por_write_base30_integer+0x24>
   135bc:	subs	r0, r4, #1
   135c0:	beq	135f0 <por_write_base30_integer+0xbc>
   135c4:	mov	r1, #0
   135c8:	ldrb	r2, [r9, r1]
   135cc:	ldrb	r3, [r9, r0]
   135d0:	strb	r3, [r9, r1]
   135d4:	strb	r2, [r9, r0]
   135d8:	sub	r0, r0, #1
   135dc:	add	r1, r1, #1
   135e0:	cmp	r0, r1
   135e4:	bgt	135c8 <por_write_base30_integer+0x94>
   135e8:	b	135f0 <por_write_base30_integer+0xbc>
   135ec:	mov	r4, #0
   135f0:	mov	r0, r4
   135f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000135f8 <por_write_ctx_free>:
   135f8:	push	{r4, sl, fp, lr}
   135fc:	add	fp, sp, #8
   13600:	mov	r4, r0
   13604:	ldr	r0, [r0]
   13608:	cmp	r0, #0
   1360c:	beq	13614 <por_write_ctx_free+0x1c>
   13610:	bl	48bc <free@plt>
   13614:	mov	r0, r4
   13618:	pop	{r4, sl, fp, lr}
   1361c:	b	48bc <free@plt>

00013620 <por_write_string_n>:
   13620:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13624:	add	fp, sp, #24
   13628:	sub	sp, sp, #24
   1362c:	sub	sp, sp, #1024	; 0x400
   13630:	mov	r9, r0
   13634:	mov	r0, r3
   13638:	mov	r6, r3
   1363c:	mov	r7, r2
   13640:	mov	r5, r1
   13644:	bl	4ae4 <malloc@plt>
   13648:	mov	r4, r0
   1364c:	ldm	r5, {r0, r1}
   13650:	mov	r3, r6
   13654:	mov	r2, r4
   13658:	stm	sp, {r0, r1}
   1365c:	mov	r0, r7
   13660:	mov	r1, r6
   13664:	bl	4d60 <por_utf8_decode@plt>
   13668:	cmn	r0, #1
   1366c:	beq	13698 <por_write_string_n+0x78>
   13670:	mov	r2, r0
   13674:	ldr	r0, [pc, #128]	; 136fc <por_write_string_n+0xdc>
   13678:	mov	r1, r4
   1367c:	mov	r3, #80	; 0x50
   13680:	add	r0, pc, r0
   13684:	str	r0, [sp]
   13688:	mov	r0, r9
   1368c:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   13690:	mov	r8, r0
   13694:	b	136dc <por_write_string_n+0xbc>
   13698:	ldr	r0, [r9, #296]	; 0x128
   1369c:	mov	r8, #16
   136a0:	cmp	r0, #0
   136a4:	beq	136dc <por_write_string_n+0xbc>
   136a8:	mov	r0, #0
   136ac:	str	r6, [sp]
   136b0:	add	r5, sp, #20
   136b4:	mov	r1, #1024	; 0x400
   136b8:	stmib	sp, {r0, r6, r7}
   136bc:	mov	r0, r5
   136c0:	ldr	r2, [pc, #48]	; 136f8 <por_write_string_n+0xd8>
   136c4:	add	r2, pc, r2
   136c8:	bl	4c4c <snprintf@plt>
   136cc:	ldr	r2, [r9, #296]	; 0x128
   136d0:	ldr	r1, [r9, #304]	; 0x130
   136d4:	mov	r0, r5
   136d8:	blx	r2
   136dc:	cmp	r4, #0
   136e0:	beq	136ec <por_write_string_n+0xcc>
   136e4:	mov	r0, r4
   136e8:	bl	48bc <free@plt>
   136ec:	mov	r0, r8
   136f0:	sub	sp, fp, #24
   136f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   136f8:	.word	0x00011213
   136fc:	.word	0x00011254

00013700 <por_write_string_field_n>:
   13700:	push	{r4, r5, r6, r7, fp, lr}
   13704:	add	fp, sp, #16
   13708:	mov	r4, r3
   1370c:	mov	r5, r2
   13710:	mov	r6, r1
   13714:	mov	r7, r0
   13718:	vmov	s0, r4
   1371c:	vcvt.f64.u32	d0, s0
   13720:	bl	13744 <por_write_double>
   13724:	cmp	r0, #0
   13728:	popne	{r4, r5, r6, r7, fp, pc}
   1372c:	mov	r0, r7
   13730:	mov	r1, r6
   13734:	mov	r2, r5
   13738:	mov	r3, r4
   1373c:	pop	{r4, r5, r6, r7, fp, lr}
   13740:	b	13620 <por_write_string_n>

00013744 <por_write_double>:
   13744:	push	{r4, r5, r6, sl, fp, lr}
   13748:	add	fp, sp, #16
   1374c:	vpush	{d8}
   13750:	sub	sp, sp, #264	; 0x108
   13754:	sub	sp, sp, #1024	; 0x400
   13758:	mov	r5, r1
   1375c:	mov	r4, r0
   13760:	add	r0, sp, #8
   13764:	mov	r1, #256	; 0x100
   13768:	vorr	d8, d0, d0
   1376c:	bl	132a8 <por_write_double_to_buffer>
   13770:	cmn	r0, #1
   13774:	beq	13794 <por_write_double+0x50>
   13778:	mov	r3, r0
   1377c:	add	r2, sp, #8
   13780:	mov	r0, r4
   13784:	mov	r1, r5
   13788:	bl	13620 <por_write_string_n>
   1378c:	mov	r5, r0
   13790:	b	137d0 <por_write_double+0x8c>
   13794:	ldr	r0, [r4, #296]	; 0x128
   13798:	mov	r5, #13
   1379c:	cmp	r0, #0
   137a0:	beq	137d0 <por_write_double+0x8c>
   137a4:	vstr	d8, [sp]
   137a8:	add	r6, sp, #264	; 0x108
   137ac:	mov	r1, #1024	; 0x400
   137b0:	ldr	r2, [pc, #40]	; 137e0 <por_write_double+0x9c>
   137b4:	mov	r0, r6
   137b8:	add	r2, pc, r2
   137bc:	bl	4c4c <snprintf@plt>
   137c0:	ldr	r2, [r4, #296]	; 0x128
   137c4:	ldr	r1, [r4, #304]	; 0x130
   137c8:	mov	r0, r6
   137cc:	blx	r2
   137d0:	mov	r0, r5
   137d4:	sub	sp, fp, #24
   137d8:	vpop	{d8}
   137dc:	pop	{r4, r5, r6, sl, fp, pc}
   137e0:	.word	0x0001114b

000137e4 <por_emit_format>:
   137e4:	push	{r4, r5, r6, sl, fp, lr}
   137e8:	add	fp, sp, #16
   137ec:	vldr	s0, [r2]
   137f0:	mov	r6, r2
   137f4:	mov	r4, r1
   137f8:	mov	r5, r0
   137fc:	vcvt.f64.s32	d0, s0
   13800:	bl	13744 <por_write_double>
   13804:	cmp	r0, #0
   13808:	popne	{r4, r5, r6, sl, fp, pc}
   1380c:	vldr	s0, [r6, #4]
   13810:	mov	r0, r5
   13814:	mov	r1, r4
   13818:	vcvt.f64.s32	d0, s0
   1381c:	bl	13744 <por_write_double>
   13820:	cmp	r0, #0
   13824:	beq	1382c <por_emit_format+0x48>
   13828:	pop	{r4, r5, r6, sl, fp, pc}
   1382c:	vldr	s0, [r6, #8]
   13830:	mov	r0, r5
   13834:	mov	r1, r4
   13838:	vcvt.f64.s32	d0, s0
   1383c:	pop	{r4, r5, r6, sl, fp, lr}
   13840:	b	13744 <por_write_double>
   13844:	andeq	r0, r0, r0

00013848 <sav_ctx_init>:
   13848:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1384c:	add	fp, sp, #24
   13850:	mov	r8, r1
   13854:	mov	r7, r0
   13858:	mov	r0, #1
   1385c:	mov	r1, #440	; 0x1b8
   13860:	bl	49a0 <readstat_calloc@plt>
   13864:	mov	r4, #0
   13868:	cmp	r0, #0
   1386c:	beq	139e4 <sav_ctx_init+0x19c>
   13870:	ldr	r1, [pc, #408]	; 13a10 <sav_ctx_init+0x1c8>
   13874:	mov	r6, r0
   13878:	mov	r0, r7
   1387c:	mov	r2, #4
   13880:	add	r1, pc, r1
   13884:	bl	4bbc <bcmp@plt>
   13888:	cmp	r0, #0
   1388c:	beq	138b4 <sav_ctx_init+0x6c>
   13890:	ldr	r1, [pc, #380]	; 13a14 <sav_ctx_init+0x1cc>
   13894:	mov	r0, r7
   13898:	mov	r2, #4
   1389c:	add	r1, pc, r1
   138a0:	bl	4bbc <bcmp@plt>
   138a4:	cmp	r0, #0
   138a8:	bne	139dc <sav_ctx_init+0x194>
   138ac:	mov	r0, #3
   138b0:	b	138b8 <sav_ctx_init+0x70>
   138b4:	mov	r0, #2
   138b8:	str	r0, [r6, #424]	; 0x1a8
   138bc:	ldr	r0, [r7, #64]	; 0x40
   138c0:	ldrb	r1, [r6, #436]	; 0x1b4
   138c4:	orr	r0, r0, #1
   138c8:	and	r1, r1, #254	; 0xfe
   138cc:	subs	r0, r0, #3
   138d0:	movwne	r0, #1
   138d4:	orr	r0, r1, r0
   138d8:	strb	r0, [r6, #436]	; 0x1b4
   138dc:	bl	48b0 <machine_is_little_endian@plt>
   138e0:	ldrb	r1, [r6, #436]	; 0x1b4
   138e4:	mov	r5, #1
   138e8:	and	r1, r1, #1
   138ec:	cmp	r0, r1
   138f0:	mov	r0, #1
   138f4:	movweq	r0, #2
   138f8:	str	r0, [r6, #432]	; 0x1b0
   138fc:	ldr	r0, [r7, #72]	; 0x48
   13900:	cmp	r0, #1
   13904:	beq	13924 <sav_ctx_init+0xdc>
   13908:	bl	47b4 <byteswap4@plt>
   1390c:	cmp	r0, #1
   13910:	beq	13924 <sav_ctx_init+0xdc>
   13914:	ldr	r0, [r7, #72]	; 0x48
   13918:	mov	r5, #2
   1391c:	cmp	r0, #2
   13920:	bne	139ec <sav_ctx_init+0x1a4>
   13924:	str	r5, [r6, #428]	; 0x1ac
   13928:	ldrb	r1, [r6, #436]	; 0x1b4
   1392c:	ldr	r0, [r7, #80]	; 0x50
   13930:	add	r5, r6, #392	; 0x188
   13934:	tst	r1, #1
   13938:	bne	1394c <sav_ctx_init+0x104>
   1393c:	str	r0, [r6, #352]	; 0x160
   13940:	mov	r1, #1
   13944:	ldr	r0, [r7, #76]	; 0x4c
   13948:	b	13978 <sav_ctx_init+0x130>
   1394c:	bl	47b4 <byteswap4@plt>
   13950:	str	r0, [r6, #352]	; 0x160
   13954:	mov	r1, #1
   13958:	ldrb	r2, [r6, #436]	; 0x1b4
   1395c:	ldr	r0, [r7, #76]	; 0x4c
   13960:	tst	r2, #1
   13964:	beq	13978 <sav_ctx_init+0x130>
   13968:	bl	47b4 <byteswap4@plt>
   1396c:	ldrb	r1, [r6, #436]	; 0x1b4
   13970:	mov	r2, #1
   13974:	bic	r1, r2, r1
   13978:	add	r2, pc, #128	; 0x80
   1397c:	movw	r3, #65535	; 0xffff
   13980:	str	r0, [r6, #372]	; 0x174
   13984:	add	r0, r7, #84	; 0x54
   13988:	cmp	r1, #0
   1398c:	vld1.64	{d16-d17}, [r2]
   13990:	movt	r3, #32751	; 0x7fef
   13994:	mvn	r2, #0
   13998:	vst1.64	{d16-d17}, [r5]!
   1399c:	strd	r2, [r5]
   139a0:	vld1.8	{d0}, [r0]
   139a4:	bne	139ac <sav_ctx_init+0x164>
   139a8:	bl	4ec8 <byteswap_double@plt>
   139ac:	mov	r0, #512	; 0x200
   139b0:	mov	r1, #4
   139b4:	str	r0, [r6, #48]	; 0x30
   139b8:	mov	r0, #512	; 0x200
   139bc:	vstr	d0, [r6, #416]	; 0x1a0
   139c0:	bl	49a0 <readstat_calloc@plt>
   139c4:	cmp	r0, #0
   139c8:	str	r0, [r6, #44]	; 0x2c
   139cc:	beq	139dc <sav_ctx_init+0x194>
   139d0:	mov	r4, r6
   139d4:	str	r8, [r6, #36]	; 0x24
   139d8:	b	139e4 <sav_ctx_init+0x19c>
   139dc:	mov	r0, r6
   139e0:	bl	4904 <sav_ctx_free@plt>
   139e4:	mov	r0, r4
   139e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139ec:	bl	47b4 <byteswap4@plt>
   139f0:	cmp	r0, #2
   139f4:	streq	r5, [r6, #428]	; 0x1ac
   139f8:	b	13928 <sav_ctx_init+0xe0>
   139fc:	nop	{0}
   13a00:	.word	0xffffffff
   13a04:	.word	0xffefffff
   13a08:	.word	0xfffffffe
   13a0c:	.word	0xffefffff
   13a10:	.word	0x000110dd
   13a14:	.word	0x000110c6

00013a18 <sav_ctx_free>:
   13a18:	push	{r4, r5, fp, lr}
   13a1c:	add	fp, sp, #8
   13a20:	mov	r4, r0
   13a24:	ldr	r0, [r0, #44]	; 0x2c
   13a28:	cmp	r0, #0
   13a2c:	beq	13a60 <sav_ctx_free+0x48>
   13a30:	ldr	r1, [r4, #340]	; 0x154
   13a34:	cmp	r1, #1
   13a38:	blt	13a5c <sav_ctx_free+0x44>
   13a3c:	mov	r5, #0
   13a40:	ldr	r0, [r0, r5, lsl #2]
   13a44:	bl	4de4 <spss_varinfo_free@plt>
   13a48:	ldr	r1, [r4, #340]	; 0x154
   13a4c:	ldr	r0, [r4, #44]	; 0x2c
   13a50:	add	r5, r5, #1
   13a54:	cmp	r5, r1
   13a58:	blt	13a40 <sav_ctx_free+0x28>
   13a5c:	bl	48bc <free@plt>
   13a60:	ldr	r0, [r4, #52]	; 0x34
   13a64:	cmp	r0, #0
   13a68:	beq	13aa8 <sav_ctx_free+0x90>
   13a6c:	ldr	r2, [r4, #348]	; 0x15c
   13a70:	cmp	r2, #1
   13a74:	blt	13aa4 <sav_ctx_free+0x8c>
   13a78:	mov	r5, #0
   13a7c:	ldr	r1, [r0, r5, lsl #2]
   13a80:	cmp	r1, #0
   13a84:	beq	13a98 <sav_ctx_free+0x80>
   13a88:	mov	r0, r1
   13a8c:	bl	48bc <free@plt>
   13a90:	ldr	r0, [r4, #52]	; 0x34
   13a94:	ldr	r2, [r4, #348]	; 0x15c
   13a98:	add	r5, r5, #1
   13a9c:	cmp	r5, r2
   13aa0:	blt	13a7c <sav_ctx_free+0x64>
   13aa4:	bl	48bc <free@plt>
   13aa8:	ldr	r0, [r4, #376]	; 0x178
   13aac:	cmp	r0, #0
   13ab0:	beq	13ab8 <sav_ctx_free+0xa0>
   13ab4:	bl	48bc <free@plt>
   13ab8:	ldr	r0, [r4, #384]	; 0x180
   13abc:	cmp	r0, #0
   13ac0:	beq	13ac8 <sav_ctx_free+0xb0>
   13ac4:	bl	48bc <free@plt>
   13ac8:	ldr	r0, [r4, #336]	; 0x150
   13acc:	cmp	r0, #0
   13ad0:	beq	13ad8 <sav_ctx_free+0xc0>
   13ad4:	bl	47d8 <iconv_close@plt>
   13ad8:	ldr	r0, [r4, #328]	; 0x148
   13adc:	cmp	r0, #0
   13ae0:	beq	13ae8 <sav_ctx_free+0xd0>
   13ae4:	bl	48bc <free@plt>
   13ae8:	mov	r0, r4
   13aec:	pop	{r4, r5, fp, lr}
   13af0:	b	48bc <free@plt>
   13af4:	andeq	r0, r0, r0

00013af8 <sav_compressed_row_bound>:
   13af8:	mov	r1, #8
   13afc:	add	r1, r1, r0, lsr #3
   13b00:	bic	r1, r1, #7
   13b04:	add	r0, r1, r0
   13b08:	bx	lr
   13b0c:	nop	{0}

00013b10 <sav_compress_row>:
   13b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b14:	add	fp, sp, #28
   13b18:	sub	sp, sp, #4
   13b1c:	vpush	{d8-d9}
   13b20:	sub	sp, sp, #8
   13b24:	mov	r6, #0
   13b28:	mov	r4, r0
   13b2c:	str	r6, [r0, #4]
   13b30:	str	r6, [r0]
   13b34:	ldr	r0, [r3, #28]
   13b38:	cmp	r0, #1
   13b3c:	blt	13ce0 <sav_compress_row+0x1d0>
   13b40:	vldr	d8, [pc, #456]	; 13d10 <sav_compress_row+0x200>
   13b44:	vldr	d9, [pc, #460]	; 13d18 <sav_compress_row+0x208>
   13b48:	mov	r7, r1
   13b4c:	mov	sl, #8
   13b50:	mov	r8, #0
   13b54:	mov	r6, #0
   13b58:	mov	r5, #0
   13b5c:	str	r3, [sp, #4]
   13b60:	mov	r0, r3
   13b64:	mov	r1, r5
   13b68:	bl	4d48 <readstat_get_variable@plt>
   13b6c:	ldr	r1, [r0]
   13b70:	cmp	r1, #0
   13b74:	beq	13ba0 <sav_compress_row+0x90>
   13b78:	mov	r1, r7
   13b7c:	mvn	r2, #1048576	; 0x100000
   13b80:	ldr	r0, [r1, r8]!
   13b84:	ldr	r1, [r1, #4]
   13b88:	mvn	r3, r0
   13b8c:	eor	r2, r1, r2
   13b90:	orrs	r2, r3, r2
   13b94:	bne	13c38 <sav_compress_row+0x128>
   13b98:	mov	r0, #255	; 0xff
   13b9c:	b	13c70 <sav_compress_row+0x160>
   13ba0:	ldr	r9, [r0, #1596]	; 0x63c
   13ba4:	cmp	r9, #0
   13ba8:	beq	13cc8 <sav_compress_row+0x1b8>
   13bac:	ldr	r1, [pc, #364]	; 13d20 <sav_compress_row+0x210>
   13bb0:	add	r0, r7, r8
   13bb4:	mov	r2, #8
   13bb8:	add	r1, pc, r1
   13bbc:	bl	4bbc <bcmp@plt>
   13bc0:	add	r1, r6, #1
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bf4 <sav_compress_row+0xe4>
   13bcc:	mov	r0, #253	; 0xfd
   13bd0:	mov	r3, r4
   13bd4:	strb	r0, [r4, r6]
   13bd8:	mov	r0, r7
   13bdc:	ldr	r2, [r0, r8]!
   13be0:	ldr	r0, [r0, #4]
   13be4:	str	r2, [r3, sl]!
   13be8:	add	sl, sl, #8
   13bec:	str	r0, [r3, #4]
   13bf0:	b	13bfc <sav_compress_row+0xec>
   13bf4:	mov	r0, #254	; 0xfe
   13bf8:	strb	r0, [r4, r6]
   13bfc:	tst	r1, #7
   13c00:	beq	13c0c <sav_compress_row+0xfc>
   13c04:	mov	r6, r1
   13c08:	b	13c28 <sav_compress_row+0x118>
   13c0c:	mov	r0, r4
   13c10:	mov	r1, #0
   13c14:	mov	r6, sl
   13c18:	str	r1, [r0, sl]!
   13c1c:	str	r1, [r0, #4]
   13c20:	add	r0, sl, #8
   13c24:	mov	sl, r0
   13c28:	subs	r9, r9, #8
   13c2c:	add	r8, r8, #8
   13c30:	bne	13bac <sav_compress_row+0x9c>
   13c34:	b	13cc8 <sav_compress_row+0x1b8>
   13c38:	vmov	d16, r0, r1
   13c3c:	vcmpe.f64	d16, d8
   13c40:	vmrs	APSR_nzcv, fpscr
   13c44:	ble	13c78 <sav_compress_row+0x168>
   13c48:	vcmpe.f64	d16, d9
   13c4c:	vmrs	APSR_nzcv, fpscr
   13c50:	bpl	13c78 <sav_compress_row+0x168>
   13c54:	vcvt.s32.f64	s0, d16
   13c58:	vcvt.f64.s32	d17, s0
   13c5c:	vcmp.f64	d16, d17
   13c60:	vmrs	APSR_nzcv, fpscr
   13c64:	bne	13c78 <sav_compress_row+0x168>
   13c68:	vmov	r0, s0
   13c6c:	add	r0, r0, #100	; 0x64
   13c70:	strb	r0, [r4, r6]
   13c74:	b	13c9c <sav_compress_row+0x18c>
   13c78:	mov	r0, #253	; 0xfd
   13c7c:	mov	r2, r4
   13c80:	strb	r0, [r4, r6]
   13c84:	mov	r0, r7
   13c88:	ldr	r1, [r0, r8]!
   13c8c:	ldr	r0, [r0, #4]
   13c90:	str	r1, [r2, sl]!
   13c94:	add	sl, sl, #8
   13c98:	str	r0, [r2, #4]
   13c9c:	add	r6, r6, #1
   13ca0:	tst	r6, #7
   13ca4:	bne	13cc4 <sav_compress_row+0x1b4>
   13ca8:	mov	r0, r4
   13cac:	mov	r1, #0
   13cb0:	mov	r6, sl
   13cb4:	str	r1, [r0, sl]!
   13cb8:	str	r1, [r0, #4]
   13cbc:	add	r0, sl, #8
   13cc0:	mov	sl, r0
   13cc4:	add	r8, r8, #8
   13cc8:	ldr	r3, [sp, #4]
   13ccc:	add	r5, r5, #1
   13cd0:	ldr	r0, [r3, #28]
   13cd4:	cmp	r5, r0
   13cd8:	blt	13b60 <sav_compress_row+0x50>
   13cdc:	b	13ce4 <sav_compress_row+0x1d4>
   13ce0:	mov	sl, #8
   13ce4:	ldr	r1, [r3, #84]	; 0x54
   13ce8:	ldr	r0, [r3, #80]	; 0x50
   13cec:	add	r1, r1, #1
   13cf0:	cmp	r1, r0
   13cf4:	moveq	r0, #252	; 0xfc
   13cf8:	strbeq	r0, [r4, r6]
   13cfc:	mov	r0, sl
   13d00:	sub	sp, fp, #48	; 0x30
   13d04:	vpop	{d8-d9}
   13d08:	add	sp, sp, #4
   13d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d10:	.word	0x00000000
   13d14:	.word	0xc0590000
   13d18:	.word	0x00000000
   13d1c:	.word	0x40630000
   13d20:	.word	0x00010daf

00013d24 <sav_decompress_row>:
   13d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d28:	add	fp, sp, #28
   13d2c:	sub	sp, sp, #4
   13d30:	mov	r7, r0
   13d34:	mov	r4, r0
   13d38:	ldr	r8, [r7, #16]!
   13d3c:	ldr	r0, [r7, #28]
   13d40:	ldr	r9, [r7, #4]
   13d44:	cmp	r0, #0
   13d48:	beq	13d60 <sav_decompress_row+0x3c>
   13d4c:	mov	r0, r8
   13d50:	mov	r1, r9
   13d54:	bl	479c <byteswap8@plt>
   13d58:	mov	r8, r0
   13d5c:	mov	r9, r1
   13d60:	add	r0, r7, #16
   13d64:	movw	sl, #8224	; 0x2020
   13d68:	add	r5, r4, #32
   13d6c:	str	r0, [sp]
   13d70:	ldr	r0, [r4, #40]	; 0x28
   13d74:	movt	sl, #8224	; 0x2020
   13d78:	rsb	r7, r0, #8
   13d7c:	cmp	r7, #8
   13d80:	bne	13db4 <sav_decompress_row+0x90>
   13d84:	ldr	r0, [r4, #4]
   13d88:	cmp	r0, #8
   13d8c:	bcc	13ec8 <sav_decompress_row+0x1a4>
   13d90:	ldr	r1, [r4]
   13d94:	ldr	r7, [sp]
   13d98:	ldr	r2, [r1]
   13d9c:	ldr	r3, [r1, #4]
   13da0:	strd	r2, [r7]
   13da4:	mov	r7, #0
   13da8:	sub	r3, r0, #8
   13dac:	add	r2, r1, #8
   13db0:	strd	r2, [r4]
   13db4:	cmp	r7, #7
   13db8:	bgt	13d7c <sav_decompress_row+0x58>
   13dbc:	ldrb	r0, [r5, r7]
   13dc0:	sub	r1, r0, #252	; 0xfc
   13dc4:	cmp	r1, #3
   13dc8:	bhi	13e34 <sav_decompress_row+0x110>
   13dcc:	add	r0, pc, #4
   13dd0:	ldr	r1, [r0, r1, lsl #2]
   13dd4:	add	pc, r0, r1
   13dd8:	.word	0x000000d8
   13ddc:	.word	0x00000010
   13de0:	.word	0x0000006c
   13de4:	.word	0x0000007c
   13de8:	ldr	r0, [r4, #4]
   13dec:	cmp	r0, #8
   13df0:	bcc	13ecc <sav_decompress_row+0x1a8>
   13df4:	ldr	r0, [r4]
   13df8:	ldr	r1, [r4, #8]
   13dfc:	ldr	r2, [r0]
   13e00:	ldr	r0, [r0, #4]
   13e04:	str	r0, [r1, #4]
   13e08:	str	r2, [r1]
   13e0c:	ldr	r1, [r4, #8]
   13e10:	ldr	r3, [r4, #12]
   13e14:	ldm	r4, {r0, r2}
   13e18:	sub	r2, r2, #8
   13e1c:	add	r0, r0, #8
   13e20:	add	r6, r1, #8
   13e24:	sub	r1, r3, #8
   13e28:	stm	r4, {r0, r2, r6}
   13e2c:	str	r1, [r4, #12]
   13e30:	b	13e9c <sav_decompress_row+0x178>
   13e34:	cmp	r0, #0
   13e38:	bne	13e64 <sav_decompress_row+0x140>
   13e3c:	ldr	r1, [r4, #12]
   13e40:	b	13e9c <sav_decompress_row+0x178>
   13e44:	ldr	r0, [r4, #8]
   13e48:	str	sl, [r0, #4]
   13e4c:	str	sl, [r0]
   13e50:	b	13e8c <sav_decompress_row+0x168>
   13e54:	ldr	r0, [r4, #8]
   13e58:	str	r9, [r0, #4]
   13e5c:	str	r8, [r0]
   13e60:	b	13e8c <sav_decompress_row+0x168>
   13e64:	vmov	s0, r0
   13e68:	ldr	r1, [r4, #44]	; 0x2c
   13e6c:	vldr	d16, [r4, #24]
   13e70:	cmp	r1, #0
   13e74:	vcvt.f64.u32	d17, s0
   13e78:	vsub.f64	d0, d17, d16
   13e7c:	beq	13e84 <sav_decompress_row+0x160>
   13e80:	bl	4ec8 <byteswap_double@plt>
   13e84:	ldr	r0, [r4, #8]
   13e88:	vst1.8	{d0}, [r0]
   13e8c:	ldrd	r0, [r4, #8]
   13e90:	sub	r1, r1, #8
   13e94:	add	r0, r0, #8
   13e98:	strd	r0, [r4, #8]
   13e9c:	add	r7, r7, #1
   13ea0:	cmp	r1, #8
   13ea4:	bcs	13db4 <sav_decompress_row+0x90>
   13ea8:	mov	r0, #2
   13eac:	b	13eb4 <sav_decompress_row+0x190>
   13eb0:	mov	r0, #3
   13eb4:	str	r0, [r4, #48]	; 0x30
   13eb8:	rsb	r0, r7, #8
   13ebc:	str	r0, [r4, #40]	; 0x28
   13ec0:	sub	sp, fp, #28
   13ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ec8:	mov	r7, #8
   13ecc:	mov	r0, #0
   13ed0:	b	13eb4 <sav_decompress_row+0x190>

00013ed4 <sav_parse_long_variable_names_record>:
   13ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ed8:	add	fp, sp, #28
   13edc:	sub	sp, sp, #140	; 0x8c
   13ee0:	sub	sp, sp, #8192	; 0x2000
   13ee4:	mov	r9, r0
   13ee8:	add	r0, r0, r1
   13eec:	mov	r4, r2
   13ef0:	mov	r5, r1
   13ef4:	str	r0, [sp, #24]
   13ef8:	mov	r0, r2
   13efc:	bl	143ec <count_vars>
   13f00:	mov	r1, r4
   13f04:	str	r0, [sp, #28]
   13f08:	str	r4, [sp, #36]	; 0x24
   13f0c:	bl	14458 <build_lookup_table>
   13f10:	cmp	r5, #0
   13f14:	mov	sl, #1
   13f18:	str	r0, [sp, #32]
   13f1c:	str	r5, [sp, #20]
   13f20:	str	r9, [sp, #16]
   13f24:	beq	141e0 <sav_parse_long_variable_names_record+0x30c>
   13f28:	mov	r0, #0
   13f2c:	mvn	r2, #1
   13f30:	str	r0, [sp, #40]	; 0x28
   13f34:	mov	r0, #0
   13f38:	str	r0, [sp, #44]	; 0x2c
   13f3c:	ldr	r0, [pc, #1128]	; 143ac <sav_parse_long_variable_names_record+0x4d8>
   13f40:	add	r0, pc, r0
   13f44:	ldrb	r4, [r0, sl]
   13f48:	ldr	r0, [pc, #1120]	; 143b0 <sav_parse_long_variable_names_record+0x4dc>
   13f4c:	ldr	r1, [pc, #1120]	; 143b4 <sav_parse_long_variable_names_record+0x4e0>
   13f50:	add	r0, pc, r0
   13f54:	add	r1, pc, r1
   13f58:	cmp	r4, #0
   13f5c:	add	r0, r0, sl, lsl #1
   13f60:	ldrsh	r0, [r0]
   13f64:	add	lr, r1, r0
   13f68:	ldr	r0, [pc, #1096]	; 143b8 <sav_parse_long_variable_names_record+0x4e4>
   13f6c:	add	r0, pc, r0
   13f70:	add	r0, r0, sl, lsl #1
   13f74:	ldrsh	r0, [r0]
   13f78:	beq	13fc8 <sav_parse_long_variable_names_record+0xf4>
   13f7c:	add	ip, lr, r4
   13f80:	sub	r6, ip, #1
   13f84:	cmp	r6, lr
   13f88:	bcc	13fc0 <sav_parse_long_variable_names_record+0xec>
   13f8c:	ldrb	r5, [r9]
   13f90:	mov	r3, lr
   13f94:	sub	r7, r6, r3
   13f98:	mov	r1, r3
   13f9c:	ldrb	r7, [r1, r7, asr #1]!
   13fa0:	cmp	r5, r7
   13fa4:	bcs	13fb0 <sav_parse_long_variable_names_record+0xdc>
   13fa8:	sub	r6, r1, #1
   13fac:	b	13fb8 <sav_parse_long_variable_names_record+0xe4>
   13fb0:	bls	14040 <sav_parse_long_variable_names_record+0x16c>
   13fb4:	add	r3, r1, #1
   13fb8:	cmp	r6, r3
   13fbc:	bcs	13f94 <sav_parse_long_variable_names_record+0xc0>
   13fc0:	add	r0, r4, r0
   13fc4:	b	13fcc <sav_parse_long_variable_names_record+0xf8>
   13fc8:	mov	ip, lr
   13fcc:	ldr	r1, [pc, #1000]	; 143bc <sav_parse_long_variable_names_record+0x4e8>
   13fd0:	add	r1, pc, r1
   13fd4:	ldrb	r5, [r1, sl]
   13fd8:	cmp	r5, #0
   13fdc:	beq	14048 <sav_parse_long_variable_names_record+0x174>
   13fe0:	add	r1, ip, r5, lsl #1
   13fe4:	sub	r3, r1, #2
   13fe8:	cmp	r3, ip
   13fec:	bcs	13ff8 <sav_parse_long_variable_names_record+0x124>
   13ff0:	ldr	sl, [sp, #36]	; 0x24
   13ff4:	b	14058 <sav_parse_long_variable_names_record+0x184>
   13ff8:	ldrb	r6, [r9]
   13ffc:	ldr	sl, [sp, #36]	; 0x24
   14000:	mov	r4, ip
   14004:	sub	r1, r3, r4
   14008:	and	r7, r2, r1, asr #1
   1400c:	mov	r1, r4
   14010:	ldrb	r7, [r1, r7]!
   14014:	cmp	r6, r7
   14018:	bcs	14024 <sav_parse_long_variable_names_record+0x150>
   1401c:	sub	r3, r1, #2
   14020:	b	14034 <sav_parse_long_variable_names_record+0x160>
   14024:	ldrb	r7, [r1, #1]
   14028:	cmp	r6, r7
   1402c:	bls	14050 <sav_parse_long_variable_names_record+0x17c>
   14030:	add	r4, r1, #2
   14034:	cmp	r3, r4
   14038:	bcs	14004 <sav_parse_long_variable_names_record+0x130>
   1403c:	b	14058 <sav_parse_long_variable_names_record+0x184>
   14040:	sub	r0, r0, lr
   14044:	add	r0, r0, r1
   14048:	ldr	sl, [sp, #36]	; 0x24
   1404c:	b	1405c <sav_parse_long_variable_names_record+0x188>
   14050:	sub	r1, r1, ip
   14054:	asr	r5, r1, #1
   14058:	add	r0, r5, r0
   1405c:	ldr	r1, [pc, #860]	; 143c0 <sav_parse_long_variable_names_record+0x4ec>
   14060:	add	r1, pc, r1
   14064:	ldrb	r5, [r1, r0]
   14068:	ldr	r0, [pc, #852]	; 143c4 <sav_parse_long_variable_names_record+0x4f0>
   1406c:	add	r0, pc, r0
   14070:	ldrb	r0, [r0, r5]
   14074:	cmp	r0, #0
   14078:	cmpne	r0, #11
   1407c:	bne	140ac <sav_parse_long_variable_names_record+0x1d8>
   14080:	cmp	r5, #1
   14084:	beq	1433c <sav_parse_long_variable_names_record+0x468>
   14088:	ldr	r0, [pc, #836]	; 143d4 <sav_parse_long_variable_names_record+0x500>
   1408c:	add	r9, r9, #1
   14090:	mvn	r2, #1
   14094:	add	r0, pc, r0
   14098:	ldrb	sl, [r0, r5]
   1409c:	ldr	r0, [sp, #24]
   140a0:	cmp	r9, r0
   140a4:	bne	13f3c <sav_parse_long_variable_names_record+0x68>
   140a8:	b	141f4 <sav_parse_long_variable_names_record+0x320>
   140ac:	ldr	r1, [pc, #788]	; 143c8 <sav_parse_long_variable_names_record+0x4f4>
   140b0:	add	r1, pc, r1
   140b4:	ldrb	r8, [r1, r0]!
   140b8:	add	r6, r1, #1
   140bc:	ldrb	r0, [r6]
   140c0:	sub	r8, r8, #1
   140c4:	cmp	r0, #6
   140c8:	bhi	14194 <sav_parse_long_variable_names_record+0x2c0>
   140cc:	add	r1, pc, #4
   140d0:	ldr	r0, [r1, r0, lsl #2]
   140d4:	add	pc, r1, r0
   140d8:	.word	0x00000038
   140dc:	.word	0x00000094
   140e0:	.word	0x0000009c
   140e4:	.word	0x0000001c
   140e8:	.word	0x00000028
   140ec:	.word	0x0000001c
   140f0:	.word	0x00000028
   140f4:	mov	r0, r9
   140f8:	str	r9, [sp, #44]	; 0x2c
   140fc:	b	14194 <sav_parse_long_variable_names_record+0x2c0>
   14100:	ldr	r0, [sp, #44]	; 0x2c
   14104:	sub	r0, r9, r0
   14108:	str	r0, [sp, #40]	; 0x28
   1410c:	b	14194 <sav_parse_long_variable_names_record+0x2c0>
   14110:	ldr	r0, [pc, #692]	; 143cc <sav_parse_long_variable_names_record+0x4f8>
   14114:	ldr	r1, [sp, #32]
   14118:	ldr	r2, [sp, #28]
   1411c:	mov	r3, #40	; 0x28
   14120:	add	r0, pc, r0
   14124:	str	r0, [sp]
   14128:	sub	r0, fp, #48	; 0x30
   1412c:	bl	4c7c <bsearch@plt>
   14130:	cmp	r0, #0
   14134:	beq	141a4 <sav_parse_long_variable_names_record+0x2d0>
   14138:	ldr	r0, [r0, #36]	; 0x24
   1413c:	ldr	r1, [sl, #44]	; 0x2c
   14140:	ldr	r7, [sp, #40]	; 0x28
   14144:	ldr	r0, [r1, r0, lsl #2]
   14148:	sub	r1, fp, #120	; 0x78
   1414c:	mov	r2, r7
   14150:	add	sl, r0, #196	; 0xc4
   14154:	mov	r0, sl
   14158:	bl	4910 <memcpy@plt>
   1415c:	mov	r0, #0
   14160:	strb	r0, [sl, r7]
   14164:	ldr	sl, [sp, #36]	; 0x24
   14168:	b	14194 <sav_parse_long_variable_names_record+0x2c0>
   1416c:	sub	r4, fp, #48	; 0x30
   14170:	b	14178 <sav_parse_long_variable_names_record+0x2a4>
   14174:	sub	r4, fp, #120	; 0x78
   14178:	ldr	r7, [sp, #40]	; 0x28
   1417c:	ldr	r1, [sp, #44]	; 0x2c
   14180:	mov	r0, r4
   14184:	mov	r2, r7
   14188:	bl	4910 <memcpy@plt>
   1418c:	mov	r0, #0
   14190:	strb	r0, [r4, r7]
   14194:	add	r6, r6, #1
   14198:	cmp	r8, #0
   1419c:	bne	140bc <sav_parse_long_variable_names_record+0x1e8>
   141a0:	b	14080 <sav_parse_long_variable_names_record+0x1ac>
   141a4:	ldr	r0, [sl, #24]
   141a8:	cmp	r0, #0
   141ac:	beq	14194 <sav_parse_long_variable_names_record+0x2c0>
   141b0:	ldr	r2, [pc, #536]	; 143d0 <sav_parse_long_variable_names_record+0x4fc>
   141b4:	add	r7, sp, #48	; 0x30
   141b8:	mov	r1, #8192	; 0x2000
   141bc:	sub	r3, fp, #48	; 0x30
   141c0:	mov	r0, r7
   141c4:	add	r2, pc, r2
   141c8:	bl	4c4c <snprintf@plt>
   141cc:	ldr	r2, [sl, #24]
   141d0:	ldr	r1, [sl, #40]	; 0x28
   141d4:	mov	r0, r7
   141d8:	blx	r2
   141dc:	b	14194 <sav_parse_long_variable_names_record+0x2c0>
   141e0:	mov	r0, #0
   141e4:	str	r0, [sp, #44]	; 0x2c
   141e8:	mov	r0, #0
   141ec:	str	r0, [sp, #40]	; 0x28
   141f0:	b	141f8 <sav_parse_long_variable_names_record+0x324>
   141f4:	ldr	r9, [sp, #24]
   141f8:	ldr	r0, [pc, #472]	; 143d8 <sav_parse_long_variable_names_record+0x504>
   141fc:	add	r0, pc, r0
   14200:	ldrb	r0, [r0, sl]
   14204:	cmp	r0, #0
   14208:	beq	14330 <sav_parse_long_variable_names_record+0x45c>
   1420c:	ldr	r1, [sp, #44]	; 0x2c
   14210:	ldr	r2, [sp, #24]
   14214:	sub	r7, fp, #120	; 0x78
   14218:	sub	r4, fp, #48	; 0x30
   1421c:	sub	r1, r2, r1
   14220:	str	r1, [sp, #24]
   14224:	ldr	r1, [pc, #432]	; 143dc <sav_parse_long_variable_names_record+0x508>
   14228:	add	r1, pc, r1
   1422c:	ldrb	r5, [r1, r0]!
   14230:	add	r8, r1, #1
   14234:	ldrb	r0, [r8]
   14238:	sub	r5, r5, #1
   1423c:	cmp	r0, #6
   14240:	beq	142bc <sav_parse_long_variable_names_record+0x3e8>
   14244:	cmp	r0, #2
   14248:	beq	142c8 <sav_parse_long_variable_names_record+0x3f4>
   1424c:	cmp	r0, #0
   14250:	bne	142e4 <sav_parse_long_variable_names_record+0x410>
   14254:	ldr	r0, [pc, #388]	; 143e0 <sav_parse_long_variable_names_record+0x50c>
   14258:	ldr	r1, [sp, #32]
   1425c:	ldr	r2, [sp, #28]
   14260:	mov	r3, #40	; 0x28
   14264:	add	r0, pc, r0
   14268:	str	r0, [sp]
   1426c:	mov	r0, r4
   14270:	bl	4c7c <bsearch@plt>
   14274:	cmp	r0, #0
   14278:	beq	142f4 <sav_parse_long_variable_names_record+0x420>
   1427c:	ldr	r1, [sp, #36]	; 0x24
   14280:	ldr	r0, [r0, #36]	; 0x24
   14284:	mov	r4, r7
   14288:	ldr	r1, [r1, #44]	; 0x2c
   1428c:	ldr	r0, [r1, r0, lsl #2]
   14290:	mov	r1, r7
   14294:	ldr	r7, [sp, #40]	; 0x28
   14298:	add	r6, r0, #196	; 0xc4
   1429c:	mov	r2, r7
   142a0:	mov	r0, r6
   142a4:	bl	4910 <memcpy@plt>
   142a8:	mov	r0, #0
   142ac:	strb	r0, [r6, r7]
   142b0:	mov	r7, r4
   142b4:	sub	r4, fp, #48	; 0x30
   142b8:	b	142e4 <sav_parse_long_variable_names_record+0x410>
   142bc:	ldr	r0, [sp, #24]
   142c0:	str	r0, [sp, #40]	; 0x28
   142c4:	b	142e4 <sav_parse_long_variable_names_record+0x410>
   142c8:	ldr	r6, [sp, #40]	; 0x28
   142cc:	ldr	r1, [sp, #44]	; 0x2c
   142d0:	mov	r0, r7
   142d4:	mov	r2, r6
   142d8:	bl	4910 <memcpy@plt>
   142dc:	mov	r0, #0
   142e0:	strb	r0, [r7, r6]
   142e4:	add	r8, r8, #1
   142e8:	cmp	r5, #0
   142ec:	bne	14234 <sav_parse_long_variable_names_record+0x360>
   142f0:	b	14330 <sav_parse_long_variable_names_record+0x45c>
   142f4:	ldr	r6, [sp, #36]	; 0x24
   142f8:	ldr	r0, [r6, #24]
   142fc:	cmp	r0, #0
   14300:	beq	142e4 <sav_parse_long_variable_names_record+0x410>
   14304:	ldr	r2, [pc, #216]	; 143e4 <sav_parse_long_variable_names_record+0x510>
   14308:	add	r0, sp, #48	; 0x30
   1430c:	mov	r1, #8192	; 0x2000
   14310:	mov	r3, r4
   14314:	add	r2, pc, r2
   14318:	bl	4c4c <snprintf@plt>
   1431c:	ldr	r2, [r6, #24]
   14320:	ldr	r1, [r6, #40]	; 0x28
   14324:	add	r0, sp, #48	; 0x30
   14328:	blx	r2
   1432c:	b	142e4 <sav_parse_long_variable_names_record+0x410>
   14330:	mov	r4, #0
   14334:	cmp	sl, #10
   14338:	bhi	14390 <sav_parse_long_variable_names_record+0x4bc>
   1433c:	ldr	r5, [sp, #36]	; 0x24
   14340:	mov	r4, #5
   14344:	ldr	r0, [r5, #24]
   14348:	cmp	r0, #0
   1434c:	beq	14390 <sav_parse_long_variable_names_record+0x4bc>
   14350:	ldr	r1, [sp, #16]
   14354:	ldr	r3, [sp, #20]
   14358:	add	r6, sp, #48	; 0x30
   1435c:	ldrb	r0, [r9], -r1
   14360:	stm	sp, {r1, r9}
   14364:	str	r3, [sp, #8]
   14368:	mov	r1, #8192	; 0x2000
   1436c:	str	r0, [sp, #12]
   14370:	mov	r0, r6
   14374:	ldr	r2, [pc, #108]	; 143e8 <sav_parse_long_variable_names_record+0x514>
   14378:	add	r2, pc, r2
   1437c:	bl	4c4c <snprintf@plt>
   14380:	ldr	r2, [r5, #24]
   14384:	ldr	r1, [r5, #40]	; 0x28
   14388:	mov	r0, r6
   1438c:	blx	r2
   14390:	ldr	r0, [sp, #32]
   14394:	cmp	r0, #0
   14398:	beq	143a0 <sav_parse_long_variable_names_record+0x4cc>
   1439c:	bl	48bc <free@plt>
   143a0:	mov	r0, r4
   143a4:	sub	sp, fp, #28
   143a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143ac:	.word	0x00010d50
   143b0:	.word	0x00010c10
   143b4:	.word	0x00010a1c
   143b8:	.word	0x00010c8c
   143bc:	.word	0x00010d0c
   143c0:	.word	0x00010cc8
   143c4:	.word	0x00011016
   143c8:	.word	0x00010e4e
   143cc:	.word	0x000003f4
   143d0:	.word	0x00010f09
   143d4:	.word	0x00010e1f
   143d8:	.word	0x00010d0e
   143dc:	.word	0x00010cd6
   143e0:	.word	0x000002b0
   143e4:	.word	0x00010db9
   143e8:	.word	0x00010d67

000143ec <count_vars>:
   143ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143f0:	add	fp, sp, #24
   143f4:	ldr	r5, [r0, #340]	; 0x154
   143f8:	cmp	r5, #1
   143fc:	blt	1444c <count_vars+0x60>
   14400:	ldr	r8, [r0, #44]	; 0x2c
   14404:	mov	r7, #0
   14408:	mov	r4, #0
   1440c:	mov	r1, #0
   14410:	ldr	r6, [r8, r7, lsl #2]
   14414:	cmp	r1, #0
   14418:	beq	14434 <count_vars+0x48>
   1441c:	add	r0, r6, #187	; 0xbb
   14420:	add	r1, r1, #187	; 0xbb
   14424:	bl	4808 <strcmp@plt>
   14428:	cmp	r0, #0
   1442c:	addne	r4, r4, #1
   14430:	b	14438 <count_vars+0x4c>
   14434:	add	r4, r4, #1
   14438:	add	r7, r7, #1
   1443c:	mov	r1, r6
   14440:	cmp	r7, r5
   14444:	blt	14410 <count_vars+0x24>
   14448:	b	14450 <count_vars+0x64>
   1444c:	mov	r4, #0
   14450:	mov	r0, r4
   14454:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014458 <build_lookup_table>:
   14458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1445c:	add	fp, sp, #28
   14460:	sub	sp, sp, #4
   14464:	mov	r8, r0
   14468:	add	r0, r0, r0, lsl #2
   1446c:	mov	sl, r1
   14470:	lsl	r0, r0, #3
   14474:	bl	4bf8 <readstat_malloc@plt>
   14478:	ldr	r5, [sl, #340]	; 0x154
   1447c:	mov	r9, r0
   14480:	cmp	r5, #1
   14484:	blt	144f4 <build_lookup_table+0x9c>
   14488:	mov	r7, #0
   1448c:	mov	r4, #0
   14490:	mov	r1, #0
   14494:	ldr	r0, [sl, #44]	; 0x2c
   14498:	cmp	r1, #0
   1449c:	ldr	r6, [r0, r4, lsl #2]
   144a0:	beq	144b8 <build_lookup_table+0x60>
   144a4:	add	r0, r6, #187	; 0xbb
   144a8:	add	r1, r1, #187	; 0xbb
   144ac:	bl	4808 <strcmp@plt>
   144b0:	cmp	r0, #0
   144b4:	beq	144e4 <build_lookup_table+0x8c>
   144b8:	add	r1, r6, #187	; 0xbb
   144bc:	add	r0, r7, r7, lsl #2
   144c0:	add	r7, r7, #1
   144c4:	vld1.8	{d16}, [r1]
   144c8:	ldrb	r1, [r1, #8]
   144cc:	add	r0, r9, r0, lsl #3
   144d0:	strb	r1, [r0, #8]
   144d4:	vst1.8	{d16}, [r0]
   144d8:	ldr	r1, [r6, #8]
   144dc:	str	r1, [r0, #36]	; 0x24
   144e0:	ldr	r5, [sl, #340]	; 0x154
   144e4:	add	r4, r4, #1
   144e8:	mov	r1, r6
   144ec:	cmp	r4, r5
   144f0:	blt	14494 <build_lookup_table+0x3c>
   144f4:	ldr	r3, [pc, #28]	; 14518 <build_lookup_table+0xc0>
   144f8:	mov	r0, r9
   144fc:	mov	r1, r8
   14500:	mov	r2, #40	; 0x28
   14504:	add	r3, pc, r3
   14508:	bl	4e08 <qsort@plt>
   1450c:	mov	r0, r9
   14510:	sub	sp, fp, #28
   14514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14518:	.word	0x00000430

0001451c <compare_key_varlookup>:
   1451c:	b	4808 <strcmp@plt>

00014520 <sav_parse_very_long_string_record>:
   14520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14524:	add	fp, sp, #28
   14528:	sub	sp, sp, #92	; 0x5c
   1452c:	mov	r6, r0
   14530:	add	r0, r0, r1
   14534:	mov	r5, r2
   14538:	mov	r7, r1
   1453c:	str	r0, [sp, #32]
   14540:	mov	r0, r2
   14544:	bl	143ec <count_vars>
   14548:	mov	r4, r0
   1454c:	add	r0, r7, #1024	; 0x400
   14550:	str	r0, [sp, #24]
   14554:	bl	4bf8 <readstat_malloc@plt>
   14558:	mov	r9, r0
   1455c:	mov	r0, r4
   14560:	mov	r1, r5
   14564:	str	r4, [sp, #36]	; 0x24
   14568:	str	r5, [sp, #28]
   1456c:	bl	14458 <build_lookup_table>
   14570:	cmp	r7, #0
   14574:	mov	sl, r6
   14578:	str	r0, [sp, #40]	; 0x28
   1457c:	beq	14894 <sav_parse_very_long_string_record+0x374>
   14580:	mov	r0, #0
   14584:	str	r9, [sp, #20]
   14588:	mov	r9, #1
   1458c:	mov	sl, r6
   14590:	mov	r2, #1
   14594:	mov	r8, #0
   14598:	str	r7, [sp, #12]
   1459c:	str	r6, [sp, #16]
   145a0:	str	r0, [sp, #48]	; 0x30
   145a4:	mov	r0, #0
   145a8:	str	r0, [sp, #52]	; 0x34
   145ac:	ldr	r0, [pc, #860]	; 14910 <sav_parse_very_long_string_record+0x3f0>
   145b0:	ldr	r1, [pc, #860]	; 14914 <sav_parse_very_long_string_record+0x3f4>
   145b4:	ldr	r3, [pc, #860]	; 14918 <sav_parse_very_long_string_record+0x3f8>
   145b8:	add	r1, pc, r1
   145bc:	add	r0, pc, r0
   145c0:	add	r3, pc, r3
   145c4:	ldrb	r1, [r1, r2]
   145c8:	ldrb	r0, [r0, r2]
   145cc:	add	r5, r3, r1
   145d0:	movw	r1, #7164	; 0x1bfc
   145d4:	tst	r9, r1, lsr r2
   145d8:	bne	145e4 <sav_parse_very_long_string_record+0xc4>
   145dc:	mov	ip, r5
   145e0:	b	14638 <sav_parse_very_long_string_record+0x118>
   145e4:	ldr	r1, [pc, #816]	; 1491c <sav_parse_very_long_string_record+0x3fc>
   145e8:	add	r1, pc, r1
   145ec:	ldrb	lr, [r1, r2]
   145f0:	add	ip, r5, lr
   145f4:	sub	r6, ip, #1
   145f8:	cmp	r6, r5
   145fc:	bcc	14634 <sav_parse_very_long_string_record+0x114>
   14600:	ldrb	r4, [sl]
   14604:	mov	r3, r5
   14608:	sub	r7, r6, r3
   1460c:	mov	r1, r3
   14610:	ldrb	r7, [r1, r7, asr #1]!
   14614:	cmp	r4, r7
   14618:	bcs	14624 <sav_parse_very_long_string_record+0x104>
   1461c:	sub	r6, r1, #1
   14620:	b	1462c <sav_parse_very_long_string_record+0x10c>
   14624:	bls	146ac <sav_parse_very_long_string_record+0x18c>
   14628:	add	r3, r1, #1
   1462c:	cmp	r6, r3
   14630:	bcs	14608 <sav_parse_very_long_string_record+0xe8>
   14634:	add	r0, lr, r0
   14638:	ldr	r4, [sp, #40]	; 0x28
   1463c:	movw	r1, #11774	; 0x2dfe
   14640:	tst	r9, r1, lsr r2
   14644:	beq	146cc <sav_parse_very_long_string_record+0x1ac>
   14648:	ldr	r1, [pc, #720]	; 14920 <sav_parse_very_long_string_record+0x400>
   1464c:	add	r1, pc, r1
   14650:	ldrb	r2, [r1, r2]
   14654:	add	r1, ip, r2, lsl #1
   14658:	sub	r3, r1, #2
   1465c:	cmp	r3, ip
   14660:	bcc	146c8 <sav_parse_very_long_string_record+0x1a8>
   14664:	ldrb	r7, [sl]
   14668:	mov	r5, ip
   1466c:	sub	r1, r3, r5
   14670:	mvn	r6, #1
   14674:	and	r6, r6, r1, asr #1
   14678:	mov	r1, r5
   1467c:	ldrb	r6, [r1, r6]!
   14680:	cmp	r7, r6
   14684:	bcs	14690 <sav_parse_very_long_string_record+0x170>
   14688:	sub	r3, r1, #2
   1468c:	b	146a0 <sav_parse_very_long_string_record+0x180>
   14690:	ldrb	r6, [r1, #1]
   14694:	cmp	r7, r6
   14698:	bls	146bc <sav_parse_very_long_string_record+0x19c>
   1469c:	add	r5, r1, #2
   146a0:	cmp	r3, r5
   146a4:	bcs	1466c <sav_parse_very_long_string_record+0x14c>
   146a8:	b	146c4 <sav_parse_very_long_string_record+0x1a4>
   146ac:	ldr	r4, [sp, #40]	; 0x28
   146b0:	sub	r0, r0, r5
   146b4:	add	r0, r0, r1
   146b8:	b	146cc <sav_parse_very_long_string_record+0x1ac>
   146bc:	sub	r1, r1, ip
   146c0:	asr	r2, r1, #1
   146c4:	ldr	r4, [sp, #40]	; 0x28
   146c8:	add	r0, r2, r0
   146cc:	ldr	r1, [pc, #592]	; 14924 <sav_parse_very_long_string_record+0x404>
   146d0:	add	r1, pc, r1
   146d4:	ldrb	r1, [r1, r0]
   146d8:	movw	r0, #25590	; 0x63f6
   146dc:	tst	r9, r0, lsr r1
   146e0:	str	r1, [sp, #44]	; 0x2c
   146e4:	bne	1481c <sav_parse_very_long_string_record+0x2fc>
   146e8:	ldr	r0, [pc, #568]	; 14928 <sav_parse_very_long_string_record+0x408>
   146ec:	add	r0, pc, r0
   146f0:	ldrb	r0, [r0, r1]
   146f4:	tst	r0, #253	; 0xfd
   146f8:	beq	1481c <sav_parse_very_long_string_record+0x2fc>
   146fc:	ldr	r1, [pc, #552]	; 1492c <sav_parse_very_long_string_record+0x40c>
   14700:	add	r1, pc, r1
   14704:	ldrb	r9, [r1, r0]!
   14708:	add	r6, r1, #1
   1470c:	ldrb	r0, [r6]
   14710:	cmp	r0, #5
   14714:	bhi	14810 <sav_parse_very_long_string_record+0x2f0>
   14718:	add	r1, pc, #4
   1471c:	ldr	r0, [r1, r0, lsl #2]
   14720:	add	pc, r1, r0
   14724:	.word	0x00000018
   14728:	.word	0x00000058
   1472c:	.word	0x0000008c
   14730:	.word	0x000000cc
   14734:	.word	0x000000d8
   14738:	.word	0x000000e8
   1473c:	ldr	r0, [pc, #492]	; 14930 <sav_parse_very_long_string_record+0x410>
   14740:	ldr	r2, [sp, #36]	; 0x24
   14744:	mov	r1, r4
   14748:	mov	r3, #40	; 0x28
   1474c:	add	r0, pc, r0
   14750:	str	r0, [sp]
   14754:	add	r0, sp, #56	; 0x38
   14758:	bl	4c7c <bsearch@plt>
   1475c:	cmp	r0, #0
   14760:	beq	14810 <sav_parse_very_long_string_record+0x2f0>
   14764:	ldr	r1, [sp, #28]
   14768:	ldr	r0, [r0, #36]	; 0x24
   1476c:	ldr	r1, [r1, #44]	; 0x2c
   14770:	ldr	r0, [r1, r0, lsl #2]
   14774:	str	r8, [r0, #20]
   14778:	b	14810 <sav_parse_very_long_string_record+0x2f0>
   1477c:	ldr	r5, [sp, #48]	; 0x30
   14780:	ldr	r1, [sp, #52]	; 0x34
   14784:	mov	r7, r8
   14788:	mov	r8, r4
   1478c:	add	r4, sp, #56	; 0x38
   14790:	mov	r0, r4
   14794:	mov	r2, r5
   14798:	bl	4910 <memcpy@plt>
   1479c:	mov	r0, #0
   147a0:	strb	r0, [r4, r5]
   147a4:	mov	r4, r8
   147a8:	mov	r8, r7
   147ac:	b	14810 <sav_parse_very_long_string_record+0x2f0>
   147b0:	ldrb	r0, [sl]
   147b4:	cmp	r0, #0
   147b8:	beq	14810 <sav_parse_very_long_string_record+0x2f0>
   147bc:	sub	r0, r0, #48	; 0x30
   147c0:	mvn	r2, #1
   147c4:	uxtb	r1, r0
   147c8:	eor	r1, r1, r2
   147cc:	movw	r2, #52429	; 0xcccd
   147d0:	movt	r2, #52428	; 0xcccc
   147d4:	umull	r1, r2, r1, r2
   147d8:	cmp	r8, r2, lsr #3
   147dc:	bhi	14860 <sav_parse_very_long_string_record+0x340>
   147e0:	add	r1, r8, r8, lsl #2
   147e4:	lsl	r1, r1, #1
   147e8:	uxtab	r8, r1, r0
   147ec:	b	14810 <sav_parse_very_long_string_record+0x2f0>
   147f0:	mov	r0, sl
   147f4:	str	sl, [sp, #52]	; 0x34
   147f8:	b	14810 <sav_parse_very_long_string_record+0x2f0>
   147fc:	ldr	r0, [sp, #52]	; 0x34
   14800:	sub	r0, sl, r0
   14804:	str	r0, [sp, #48]	; 0x30
   14808:	b	14810 <sav_parse_very_long_string_record+0x2f0>
   1480c:	mov	r8, #0
   14810:	subs	r9, r9, #1
   14814:	add	r6, r6, #1
   14818:	bne	1470c <sav_parse_very_long_string_record+0x1ec>
   1481c:	ldr	r3, [sp, #44]	; 0x2c
   14820:	cmp	r3, #1
   14824:	beq	14850 <sav_parse_very_long_string_record+0x330>
   14828:	ldr	r0, [pc, #260]	; 14934 <sav_parse_very_long_string_record+0x414>
   1482c:	add	sl, sl, #1
   14830:	mov	r9, #1
   14834:	add	r0, pc, r0
   14838:	ldrb	r2, [r0, r3]
   1483c:	ldr	r0, [sp, #32]
   14840:	cmp	sl, r0
   14844:	bne	145ac <sav_parse_very_long_string_record+0x8c>
   14848:	ldr	sl, [sp, #32]
   1484c:	b	14868 <sav_parse_very_long_string_record+0x348>
   14850:	ldr	r9, [sp, #20]
   14854:	ldr	r6, [sp, #16]
   14858:	ldr	r7, [sp, #12]
   1485c:	b	14894 <sav_parse_very_long_string_record+0x374>
   14860:	ldr	r3, [sp, #44]	; 0x2c
   14864:	add	sl, sl, #1
   14868:	ldr	r9, [sp, #20]
   1486c:	ldr	r6, [sp, #16]
   14870:	ldr	r7, [sp, #12]
   14874:	mov	r0, #26624	; 0x6800
   14878:	mov	r1, #1
   1487c:	tst	r1, r0, lsr r3
   14880:	beq	14894 <sav_parse_very_long_string_record+0x374>
   14884:	ldr	r0, [sp, #32]
   14888:	mov	r8, #0
   1488c:	cmp	sl, r0
   14890:	beq	148e4 <sav_parse_very_long_string_record+0x3c4>
   14894:	ldr	r5, [sp, #28]
   14898:	mov	r8, #5
   1489c:	ldr	r0, [r5, #24]
   148a0:	cmp	r0, #0
   148a4:	beq	148e0 <sav_parse_very_long_string_record+0x3c0>
   148a8:	ldr	r0, [sp, #32]
   148ac:	str	r7, [sp]
   148b0:	sub	r3, sl, r6
   148b4:	sub	r0, r0, sl
   148b8:	stmib	sp, {r0, sl}
   148bc:	mov	r0, r9
   148c0:	ldr	r2, [pc, #112]	; 14938 <sav_parse_very_long_string_record+0x418>
   148c4:	ldr	r1, [sp, #24]
   148c8:	add	r2, pc, r2
   148cc:	bl	4c4c <snprintf@plt>
   148d0:	ldr	r2, [r5, #24]
   148d4:	ldr	r1, [r5, #40]	; 0x28
   148d8:	mov	r0, r9
   148dc:	blx	r2
   148e0:	ldr	r4, [sp, #40]	; 0x28
   148e4:	cmp	r4, #0
   148e8:	beq	148f4 <sav_parse_very_long_string_record+0x3d4>
   148ec:	mov	r0, r4
   148f0:	bl	48bc <free@plt>
   148f4:	cmp	r9, #0
   148f8:	beq	14904 <sav_parse_very_long_string_record+0x3e4>
   148fc:	mov	r0, r9
   14900:	bl	48bc <free@plt>
   14904:	mov	r0, r8
   14908:	sub	sp, fp, #28
   1490c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14910:	.word	0x00010a1f
   14914:	.word	0x00010a15
   14918:	.word	0x00010996
   1491c:	.word	0x00010a01
   14920:	.word	0x000109ab
   14924:	.word	0x00010935
   14928:	.word	0x0001097a
   1492c:	.word	0x00010975
   14930:	.word	0xfffffdc8
   14934:	.word	0x00010823
   14938:	.word	0x00010855

0001493c <compare_varlookups>:
   1493c:	b	4808 <strcmp@plt>

00014940 <sav_parse_time>:
   14940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14944:	add	fp, sp, #28
   14948:	sub	sp, sp, #36	; 0x24
   1494c:	sub	sp, sp, #8192	; 0x2000
   14950:	mov	r9, r2
   14954:	mov	r7, #1
   14958:	cmp	r1, #0
   1495c:	str	r3, [sp, #20]
   14960:	str	r1, [sp, #16]
   14964:	str	r0, [sp, #12]
   14968:	beq	14ba0 <sav_parse_time+0x260>
   1496c:	add	r5, r0, r1
   14970:	mov	r1, #0
   14974:	mov	r4, #1
   14978:	mov	sl, #1
   1497c:	mov	r8, r0
   14980:	str	r9, [sp, #28]
   14984:	str	r5, [sp, #24]
   14988:	ldr	r0, [pc, #700]	; 14c4c <sav_parse_time+0x30c>
   1498c:	add	r0, pc, r0
   14990:	ldrb	ip, [r0, sl]
   14994:	ldr	r0, [pc, #692]	; 14c50 <sav_parse_time+0x310>
   14998:	ldr	r3, [pc, #692]	; 14c54 <sav_parse_time+0x314>
   1499c:	add	r0, pc, r0
   149a0:	add	r3, pc, r3
   149a4:	ldrb	r0, [r0, sl]
   149a8:	add	r7, r3, r0
   149ac:	mov	r0, #218	; 0xda
   149b0:	tst	r4, r0, lsr sl
   149b4:	bne	149c0 <sav_parse_time+0x80>
   149b8:	mov	r2, r7
   149bc:	b	14a1c <sav_parse_time+0xdc>
   149c0:	ldr	r0, [pc, #656]	; 14c58 <sav_parse_time+0x318>
   149c4:	add	r0, pc, r0
   149c8:	ldrb	r5, [r0, sl]
   149cc:	add	r2, r7, r5
   149d0:	sub	r0, r2, #1
   149d4:	cmp	r0, r7
   149d8:	bcc	14a10 <sav_parse_time+0xd0>
   149dc:	ldrb	r9, [r8]
   149e0:	mov	r3, r7
   149e4:	sub	lr, r0, r3
   149e8:	mov	r6, r3
   149ec:	ldrb	r4, [r6, lr, asr #1]!
   149f0:	cmp	r9, r4
   149f4:	bcs	14a00 <sav_parse_time+0xc0>
   149f8:	sub	r0, r6, #1
   149fc:	b	14a08 <sav_parse_time+0xc8>
   14a00:	bls	14aa4 <sav_parse_time+0x164>
   14a04:	add	r3, r6, #1
   14a08:	cmp	r0, r3
   14a0c:	bcs	149e4 <sav_parse_time+0xa4>
   14a10:	add	ip, r5, ip
   14a14:	ldr	r9, [sp, #28]
   14a18:	ldr	r5, [sp, #24]
   14a1c:	mov	r0, #1
   14a20:	movw	r3, #4022	; 0xfb6
   14a24:	tst	r0, r3, lsr sl
   14a28:	bne	14a34 <sav_parse_time+0xf4>
   14a2c:	mov	r4, #1
   14a30:	b	14acc <sav_parse_time+0x18c>
   14a34:	ldr	r0, [pc, #544]	; 14c5c <sav_parse_time+0x31c>
   14a38:	add	r0, pc, r0
   14a3c:	ldrb	lr, [r0, sl]
   14a40:	add	r0, r2, lr, lsl #1
   14a44:	sub	r4, r0, #2
   14a48:	cmp	r4, r2
   14a4c:	bcs	14a58 <sav_parse_time+0x118>
   14a50:	mov	r4, #1
   14a54:	b	14ac8 <sav_parse_time+0x188>
   14a58:	ldrb	r0, [r8]
   14a5c:	mov	sl, r5
   14a60:	mov	r6, r2
   14a64:	mvn	r5, #1
   14a68:	sub	r3, r4, r6
   14a6c:	and	r7, r5, r3, asr #1
   14a70:	mov	r3, r6
   14a74:	ldrb	r7, [r3, r7]!
   14a78:	cmp	r0, r7
   14a7c:	bcs	14a88 <sav_parse_time+0x148>
   14a80:	sub	r4, r3, #2
   14a84:	b	14a98 <sav_parse_time+0x158>
   14a88:	ldrb	r6, [r3, #1]
   14a8c:	cmp	r0, r6
   14a90:	bls	14ab8 <sav_parse_time+0x178>
   14a94:	add	r6, r3, #2
   14a98:	cmp	r4, r6
   14a9c:	bcs	14a68 <sav_parse_time+0x128>
   14aa0:	b	14ac0 <sav_parse_time+0x180>
   14aa4:	ldr	r9, [sp, #28]
   14aa8:	ldr	r5, [sp, #24]
   14aac:	sub	r0, ip, r7
   14ab0:	add	ip, r0, r6
   14ab4:	b	14a2c <sav_parse_time+0xec>
   14ab8:	sub	r0, r3, r2
   14abc:	asr	lr, r0, #1
   14ac0:	mov	r4, #1
   14ac4:	mov	r5, sl
   14ac8:	add	ip, lr, ip
   14acc:	movw	r0, #27349	; 0x6ad5
   14ad0:	movt	r0, #1877	; 0x755
   14ad4:	tst	r4, r0, lsr ip
   14ad8:	bne	14b70 <sav_parse_time+0x230>
   14adc:	ldr	r0, [pc, #380]	; 14c60 <sav_parse_time+0x320>
   14ae0:	movw	r2, #8197	; 0x2005
   14ae4:	add	r0, pc, r0
   14ae8:	ldrb	r0, [r0, ip]
   14aec:	tst	r4, r2, lsr r0
   14af0:	bne	14b70 <sav_parse_time+0x230>
   14af4:	ldr	r7, [pc, #360]	; 14c64 <sav_parse_time+0x324>
   14af8:	add	r7, pc, r7
   14afc:	ldrb	r3, [r7, r0]!
   14b00:	add	r7, r7, #1
   14b04:	ldrb	r0, [r7]
   14b08:	sub	r3, r3, #1
   14b0c:	cmp	r0, #4
   14b10:	bhi	14b64 <sav_parse_time+0x224>
   14b14:	add	r6, pc, #4
   14b18:	ldr	r0, [r6, r0, lsl #2]
   14b1c:	add	pc, r6, r0
   14b20:	.word	0x00000014
   14b24:	.word	0x00000024
   14b28:	.word	0x0000002c
   14b2c:	.word	0x00000038
   14b30:	.word	0x00000040
   14b34:	ldrb	r0, [r8]
   14b38:	add	r1, r1, r1, lsl #2
   14b3c:	add	r0, r0, r1, lsl #1
   14b40:	b	14b50 <sav_parse_time+0x210>
   14b44:	mov	r1, #0
   14b48:	b	14b64 <sav_parse_time+0x224>
   14b4c:	ldrb	r0, [r8]
   14b50:	sub	r1, r0, #48	; 0x30
   14b54:	b	14b64 <sav_parse_time+0x224>
   14b58:	str	r1, [r9, #8]
   14b5c:	b	14b64 <sav_parse_time+0x224>
   14b60:	str	r1, [r9, #4]
   14b64:	add	r7, r7, #1
   14b68:	cmp	r3, #0
   14b6c:	bne	14b04 <sav_parse_time+0x1c4>
   14b70:	movw	r0, #10836	; 0x2a54
   14b74:	movt	r0, #1877	; 0x755
   14b78:	tst	r4, r0, lsr ip
   14b7c:	bne	14bf8 <sav_parse_time+0x2b8>
   14b80:	ldr	r0, [pc, #224]	; 14c68 <sav_parse_time+0x328>
   14b84:	add	r8, r8, #1
   14b88:	cmp	r8, r5
   14b8c:	add	r0, pc, r0
   14b90:	ldrb	sl, [r0, ip]
   14b94:	bne	14988 <sav_parse_time+0x48>
   14b98:	mov	r7, #1
   14b9c:	b	14ba8 <sav_parse_time+0x268>
   14ba0:	mov	r1, #0
   14ba4:	mov	sl, #1
   14ba8:	ldr	r0, [pc, #188]	; 14c6c <sav_parse_time+0x32c>
   14bac:	movw	r3, #8197	; 0x2005
   14bb0:	add	r0, pc, r0
   14bb4:	ldrb	r0, [r0, sl]
   14bb8:	tst	r7, r3, lsr r0
   14bbc:	bne	14bec <sav_parse_time+0x2ac>
   14bc0:	ldr	r3, [pc, #168]	; 14c70 <sav_parse_time+0x330>
   14bc4:	add	r3, pc, r3
   14bc8:	ldrb	r0, [r3, r0]!
   14bcc:	add	r3, r3, #1
   14bd0:	ldrb	r7, [r3]
   14bd4:	sub	r0, r0, #1
   14bd8:	add	r3, r3, #1
   14bdc:	cmp	r7, #5
   14be0:	streq	r1, [r9]
   14be4:	cmp	r0, #0
   14be8:	bne	14bd0 <sav_parse_time+0x290>
   14bec:	mov	r5, #0
   14bf0:	cmp	sl, #11
   14bf4:	bhi	14c40 <sav_parse_time+0x300>
   14bf8:	ldr	r4, [sp, #20]
   14bfc:	mov	r5, #29
   14c00:	cmp	r4, #0
   14c04:	beq	14c40 <sav_parse_time+0x300>
   14c08:	ldr	r3, [sp, #16]
   14c0c:	ldr	r0, [sp, #12]
   14c10:	ldr	r6, [fp, #8]
   14c14:	add	r7, sp, #32
   14c18:	mov	r1, #8192	; 0x2000
   14c1c:	str	r0, [sp, #4]
   14c20:	str	r3, [sp]
   14c24:	mov	r0, r7
   14c28:	ldr	r2, [pc, #68]	; 14c74 <sav_parse_time+0x334>
   14c2c:	add	r2, pc, r2
   14c30:	bl	4c4c <snprintf@plt>
   14c34:	mov	r0, r7
   14c38:	mov	r1, r6
   14c3c:	blx	r4
   14c40:	mov	r0, r5
   14c44:	sub	sp, fp, #28
   14c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c4c:	.word	0x000107e5
   14c50:	.word	0x000107c8
   14c54:	.word	0x000107ac
   14c58:	.word	0x000107ba
   14c5c:	.word	0x00010753
   14c60:	.word	0x000106cf
   14c64:	.word	0x000106d6
   14c68:	.word	0x0001060c
   14c6c:	.word	0x0001062c
   14c70:	.word	0x0001060a
   14c74:	.word	0x00010824

00014c78 <sav_parse_date>:
   14c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c7c:	add	fp, sp, #28
   14c80:	sub	sp, sp, #36	; 0x24
   14c84:	sub	sp, sp, #8192	; 0x2000
   14c88:	str	r3, [sp, #20]
   14c8c:	cmp	r1, #0
   14c90:	ldr	ip, [pc, #852]	; 14fec <sav_parse_date+0x374>
   14c94:	str	r1, [sp, #16]
   14c98:	str	r0, [sp, #12]
   14c9c:	add	ip, pc, ip
   14ca0:	beq	14f40 <sav_parse_date+0x2c8>
   14ca4:	add	r9, r0, r1
   14ca8:	mov	lr, #0
   14cac:	mov	r4, #1
   14cb0:	mov	sl, r0
   14cb4:	str	r9, [sp, #24]
   14cb8:	ldr	r0, [pc, #816]	; 14ff0 <sav_parse_date+0x378>
   14cbc:	add	r0, pc, r0
   14cc0:	ldrb	r8, [r0, r4]
   14cc4:	ldr	r0, [pc, #808]	; 14ff4 <sav_parse_date+0x37c>
   14cc8:	add	r0, pc, r0
   14ccc:	ldrb	r1, [r0, r4]
   14cd0:	ldr	r0, [pc, #800]	; 14ff8 <sav_parse_date+0x380>
   14cd4:	add	r0, pc, r0
   14cd8:	add	r5, r0, r1
   14cdc:	uxtb	r1, r4
   14ce0:	cmp	r1, #0
   14ce4:	cmpne	r1, #47	; 0x2f
   14ce8:	bne	14cf4 <sav_parse_date+0x7c>
   14cec:	mov	r6, r5
   14cf0:	b	14d5c <sav_parse_date+0xe4>
   14cf4:	str	lr, [sp, #28]
   14cf8:	ldr	r0, [pc, #764]	; 14ffc <sav_parse_date+0x384>
   14cfc:	add	r0, pc, r0
   14d00:	ldrb	r0, [r0, r4]
   14d04:	add	r6, r5, r0
   14d08:	sub	lr, r6, #1
   14d0c:	cmp	lr, r5
   14d10:	bcc	14d48 <sav_parse_date+0xd0>
   14d14:	ldrb	r9, [sl]
   14d18:	mov	r3, r5
   14d1c:	sub	ip, lr, r3
   14d20:	mov	r1, r3
   14d24:	ldrb	r7, [r1, ip, asr #1]!
   14d28:	cmp	r9, r7
   14d2c:	bcs	14d38 <sav_parse_date+0xc0>
   14d30:	sub	lr, r1, #1
   14d34:	b	14d40 <sav_parse_date+0xc8>
   14d38:	bls	14f24 <sav_parse_date+0x2ac>
   14d3c:	add	r3, r1, #1
   14d40:	cmp	lr, r3
   14d44:	bcs	14d1c <sav_parse_date+0xa4>
   14d48:	ldr	ip, [pc, #688]	; 15000 <sav_parse_date+0x388>
   14d4c:	ldr	lr, [sp, #28]
   14d50:	ldr	r9, [sp, #24]
   14d54:	add	r8, r0, r8
   14d58:	add	ip, pc, ip
   14d5c:	ldr	r0, [pc, #672]	; 15004 <sav_parse_date+0x38c>
   14d60:	add	r0, pc, r0
   14d64:	ldrb	r0, [r0, r4]
   14d68:	cmp	r0, #0
   14d6c:	beq	14dd4 <sav_parse_date+0x15c>
   14d70:	add	r1, r6, r0, lsl #1
   14d74:	sub	r4, r1, #2
   14d78:	cmp	r4, r6
   14d7c:	bcc	14dd0 <sav_parse_date+0x158>
   14d80:	ldrb	r5, [sl]
   14d84:	mov	r1, r6
   14d88:	sub	r3, r4, r1
   14d8c:	mvn	r7, #1
   14d90:	and	r7, r7, r3, asr #1
   14d94:	mov	r3, r1
   14d98:	ldrb	r7, [r3, r7]!
   14d9c:	cmp	r5, r7
   14da0:	bcs	14dac <sav_parse_date+0x134>
   14da4:	sub	r4, r3, #2
   14da8:	b	14dbc <sav_parse_date+0x144>
   14dac:	ldrb	r1, [r3, #1]
   14db0:	cmp	r5, r1
   14db4:	bls	14dc8 <sav_parse_date+0x150>
   14db8:	add	r1, r3, #2
   14dbc:	cmp	r4, r1
   14dc0:	bcs	14d88 <sav_parse_date+0x110>
   14dc4:	b	14dd0 <sav_parse_date+0x158>
   14dc8:	sub	r0, r3, r6
   14dcc:	asr	r0, r0, #1
   14dd0:	add	r8, r0, r8
   14dd4:	ldr	r0, [pc, #556]	; 15008 <sav_parse_date+0x390>
   14dd8:	ldr	r1, [pc, #556]	; 1500c <sav_parse_date+0x394>
   14ddc:	add	r0, pc, r0
   14de0:	add	r1, pc, r1
   14de4:	ldrb	r0, [r0, r8]
   14de8:	ldrb	r1, [r1, r0]
   14dec:	cmp	r1, #0
   14df0:	beq	14f00 <sav_parse_date+0x288>
   14df4:	ldrb	r3, [ip, r1]
   14df8:	cmp	r3, #0
   14dfc:	beq	14f00 <sav_parse_date+0x288>
   14e00:	add	r1, ip, r1
   14e04:	add	r5, r1, #1
   14e08:	ldrb	r1, [r5]
   14e0c:	sub	r3, r3, #1
   14e10:	cmp	r1, #15
   14e14:	bhi	14ef4 <sav_parse_date+0x27c>
   14e18:	add	r7, pc, #4
   14e1c:	ldr	r1, [r7, r1, lsl #2]
   14e20:	add	pc, r7, r1
   14e24:	.word	0x00000040
   14e28:	.word	0x000000d0
   14e2c:	.word	0x00000060
   14e30:	.word	0x00000068
   14e34:	.word	0x00000070
   14e38:	.word	0x00000078
   14e3c:	.word	0x00000080
   14e40:	.word	0x00000088
   14e44:	.word	0x00000090
   14e48:	.word	0x00000098
   14e4c:	.word	0x000000a0
   14e50:	.word	0x000000a8
   14e54:	.word	0x000000b0
   14e58:	.word	0x000000b8
   14e5c:	.word	0x000000c0
   14e60:	.word	0x000000c8
   14e64:	ldrb	r7, [sl]
   14e68:	add	r1, lr, lr, lsl #2
   14e6c:	lsl	r1, r1, #1
   14e70:	sub	r7, r7, #48	; 0x30
   14e74:	uxtb	r6, r7
   14e78:	cmp	r6, #10
   14e7c:	uxtabcc	lr, r1, r7
   14e80:	b	14ef4 <sav_parse_date+0x27c>
   14e84:	mov	lr, #0
   14e88:	b	14ef4 <sav_parse_date+0x27c>
   14e8c:	str	lr, [r2, #12]
   14e90:	b	14ef4 <sav_parse_date+0x27c>
   14e94:	mov	r1, #0
   14e98:	b	14ef0 <sav_parse_date+0x278>
   14e9c:	mov	r1, #1
   14ea0:	b	14ef0 <sav_parse_date+0x278>
   14ea4:	mov	r1, #2
   14ea8:	b	14ef0 <sav_parse_date+0x278>
   14eac:	mov	r1, #3
   14eb0:	b	14ef0 <sav_parse_date+0x278>
   14eb4:	mov	r1, #4
   14eb8:	b	14ef0 <sav_parse_date+0x278>
   14ebc:	mov	r1, #5
   14ec0:	b	14ef0 <sav_parse_date+0x278>
   14ec4:	mov	r1, #6
   14ec8:	b	14ef0 <sav_parse_date+0x278>
   14ecc:	mov	r1, #7
   14ed0:	b	14ef0 <sav_parse_date+0x278>
   14ed4:	mov	r1, #8
   14ed8:	b	14ef0 <sav_parse_date+0x278>
   14edc:	mov	r1, #9
   14ee0:	b	14ef0 <sav_parse_date+0x278>
   14ee4:	mov	r1, #10
   14ee8:	b	14ef0 <sav_parse_date+0x278>
   14eec:	mov	r1, #11
   14ef0:	str	r1, [r2, #16]
   14ef4:	add	r5, r5, #1
   14ef8:	cmp	r3, #0
   14efc:	bne	14e08 <sav_parse_date+0x190>
   14f00:	cmp	r0, #1
   14f04:	beq	14f98 <sav_parse_date+0x320>
   14f08:	ldr	r1, [pc, #256]	; 15010 <sav_parse_date+0x398>
   14f0c:	add	sl, sl, #1
   14f10:	cmp	sl, r9
   14f14:	add	r1, pc, r1
   14f18:	ldrb	r4, [r1, r0]
   14f1c:	bne	14cb8 <sav_parse_date+0x40>
   14f20:	b	14f48 <sav_parse_date+0x2d0>
   14f24:	ldr	ip, [pc, #240]	; 1501c <sav_parse_date+0x3a4>
   14f28:	ldr	lr, [sp, #28]
   14f2c:	ldr	r9, [sp, #24]
   14f30:	sub	r0, r8, r5
   14f34:	add	r8, r0, r1
   14f38:	add	ip, pc, ip
   14f3c:	b	14dd4 <sav_parse_date+0x15c>
   14f40:	mov	lr, #0
   14f44:	mov	r4, #1
   14f48:	ldr	r1, [pc, #196]	; 15014 <sav_parse_date+0x39c>
   14f4c:	add	r1, pc, r1
   14f50:	ldrb	r1, [r1, r4]
   14f54:	ldrb	r3, [ip, r1]
   14f58:	cmp	r3, #0
   14f5c:	beq	14f8c <sav_parse_date+0x314>
   14f60:	cmp	lr, #70	; 0x46
   14f64:	add	r1, r1, ip
   14f68:	addlt	lr, lr, #100	; 0x64
   14f6c:	add	r1, r1, #1
   14f70:	ldrb	r7, [r1]
   14f74:	sub	r3, r3, #1
   14f78:	add	r1, r1, #1
   14f7c:	cmp	r7, #1
   14f80:	streq	lr, [r2, #20]
   14f84:	cmp	r3, #0
   14f88:	bne	14f70 <sav_parse_date+0x2f8>
   14f8c:	mov	r5, #0
   14f90:	cmp	r4, #46	; 0x2e
   14f94:	bhi	14fe0 <sav_parse_date+0x368>
   14f98:	ldr	r4, [sp, #20]
   14f9c:	mov	r5, #29
   14fa0:	cmp	r4, #0
   14fa4:	beq	14fe0 <sav_parse_date+0x368>
   14fa8:	ldr	r3, [sp, #16]
   14fac:	ldr	r0, [sp, #12]
   14fb0:	ldr	r6, [fp, #8]
   14fb4:	add	r7, sp, #32
   14fb8:	mov	r1, #8192	; 0x2000
   14fbc:	str	r0, [sp, #4]
   14fc0:	str	r3, [sp]
   14fc4:	mov	r0, r7
   14fc8:	ldr	r2, [pc, #72]	; 15018 <sav_parse_date+0x3a0>
   14fcc:	add	r2, pc, r2
   14fd0:	bl	4c4c <snprintf@plt>
   14fd4:	mov	r0, r7
   14fd8:	mov	r1, r6
   14fdc:	blx	r4
   14fe0:	mov	r0, r5
   14fe4:	sub	sp, fp, #28
   14fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fec:	.word	0x00010732
   14ff0:	.word	0x000105b8
   14ff4:	.word	0x0001057c
   14ff8:	.word	0x00010515
   14ffc:	.word	0x000105a8
   15000:	.word	0x00010676
   15004:	.word	0x000106c0
   15008:	.word	0x000104f8
   1500c:	.word	0x000105b4
   15010:	.word	0x00010446
   15014:	.word	0x000104a4
   15018:	.word	0x000104aa
   1501c:	.word	0x00010496

00015020 <sav_parse_timestamp>:
   15020:	push	{r4, r5, fp, lr}
   15024:	add	fp, sp, #8
   15028:	sub	sp, sp, #56	; 0x38
   1502c:	vmov.i32	q8, #0	; 0x00000000
   15030:	add	r2, sp, #8
   15034:	mov	r4, r0
   15038:	mov	r5, r1
   1503c:	add	r0, r2, #28
   15040:	mov	r1, r2
   15044:	vst1.32	{d16-d17}, [r0]
   15048:	add	r0, r2, #16
   1504c:	vst1.64	{d16-d17}, [r0]
   15050:	mov	r0, #32
   15054:	vst1.64	{d16-d17}, [r1], r0
   15058:	mvn	r0, #0
   1505c:	str	r0, [r1]
   15060:	mov	r1, #8
   15064:	ldr	r0, [r4, #40]	; 0x28
   15068:	ldr	r3, [r4, #24]
   1506c:	str	r0, [sp]
   15070:	add	r0, r5, #101	; 0x65
   15074:	bl	48d4 <sav_parse_time@plt>
   15078:	cmp	r0, #0
   1507c:	bne	150b4 <sav_parse_timestamp+0x94>
   15080:	ldr	r0, [r4, #40]	; 0x28
   15084:	ldr	r3, [r4, #24]
   15088:	add	r2, sp, #8
   1508c:	mov	r1, #9
   15090:	str	r0, [sp]
   15094:	add	r0, r5, #92	; 0x5c
   15098:	bl	4a6c <sav_parse_date@plt>
   1509c:	cmp	r0, #0
   150a0:	bne	150b4 <sav_parse_timestamp+0x94>
   150a4:	add	r0, sp, #8
   150a8:	bl	4850 <mktime@plt>
   150ac:	str	r0, [r4, #324]	; 0x144
   150b0:	mov	r0, #0
   150b4:	sub	sp, fp, #8
   150b8:	pop	{r4, r5, fp, pc}

000150bc <readstat_parse_sav>:
   150bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150c0:	add	fp, sp, #28
   150c4:	sub	sp, sp, #4
   150c8:	vpush	{d8-d9}
   150cc:	sub	sp, sp, #296	; 0x128
   150d0:	sub	sp, sp, #66560	; 0x10400
   150d4:	ldr	r4, [r0, #32]
   150d8:	mov	r7, r2
   150dc:	mov	r2, r1
   150e0:	mov	r6, r0
   150e4:	mov	r0, r2
   150e8:	ldr	r3, [r4]
   150ec:	ldr	r1, [r4, #20]
   150f0:	blx	r3
   150f4:	cmn	r0, #1
   150f8:	beq	15208 <readstat_parse_sav+0x14c>
   150fc:	ldr	r3, [r4, #8]
   15100:	ldr	r2, [r4, #20]
   15104:	mov	r0, #0
   15108:	mov	r1, #2
   1510c:	mov	r8, #0
   15110:	blx	r3
   15114:	cmn	r0, #1
   15118:	beq	15864 <readstat_parse_sav+0x7a8>
   1511c:	ldr	r3, [r4, #8]
   15120:	ldr	r2, [r4, #20]
   15124:	mov	r5, r0
   15128:	mov	r0, #0
   1512c:	mov	r1, #0
   15130:	mov	r8, #0
   15134:	blx	r3
   15138:	cmn	r0, #1
   1513c:	beq	15864 <readstat_parse_sav+0x7a8>
   15140:	ldr	r3, [r4, #12]
   15144:	ldr	r2, [r4, #20]
   15148:	add	r0, sp, #84	; 0x54
   1514c:	mov	r1, #176	; 0xb0
   15150:	blx	r3
   15154:	mov	sl, #2
   15158:	cmp	r0, #176	; 0xb0
   1515c:	bcc	15868 <readstat_parse_sav+0x7ac>
   15160:	add	r0, sp, #84	; 0x54
   15164:	mov	r1, r4
   15168:	bl	4a3c <sav_ctx_init@plt>
   1516c:	cmp	r0, #0
   15170:	beq	15210 <readstat_parse_sav+0x154>
   15174:	mov	r8, r0
   15178:	add	r0, r6, #16
   1517c:	mov	r1, r6
   15180:	vld1.32	{d16-d17}, [r0]
   15184:	mov	r0, #48	; 0x30
   15188:	mov	r2, r8
   1518c:	vld1.32	{d18-d19}, [r1], r0
   15190:	add	r0, r8, #16
   15194:	vst1.32	{d16-d17}, [r0]
   15198:	mov	r0, #32
   1519c:	vst1.32	{d18-d19}, [r2], r0
   151a0:	ldr	r0, [r6, #36]	; 0x24
   151a4:	str	r0, [r8, #56]	; 0x38
   151a8:	ldr	r0, [r6, #40]	; 0x28
   151ac:	str	r7, [r8, #40]	; 0x28
   151b0:	str	r5, [r2]
   151b4:	str	r0, [r8, #60]	; 0x3c
   151b8:	ldr	r0, [r1]
   151bc:	cmp	r0, #1
   151c0:	strge	r0, [r8, #360]	; 0x168
   151c4:	ldr	r1, [r8, #352]	; 0x160
   151c8:	cmn	r1, #1
   151cc:	beq	1521c <readstat_parse_sav+0x160>
   151d0:	ldr	r0, [r8, #360]	; 0x168
   151d4:	sub	r0, r1, r0
   151d8:	cmn	r0, #1
   151dc:	movle	r0, #0
   151e0:	strle	r1, [r8, #360]	; 0x168
   151e4:	str	r0, [r8, #356]	; 0x164
   151e8:	mov	r2, r0
   151ec:	ldr	r1, [r6, #44]	; 0x2c
   151f0:	cmp	r1, r0
   151f4:	movlt	r2, r1
   151f8:	cmp	r1, #0
   151fc:	movle	r2, r0
   15200:	str	r2, [r8, #356]	; 0x164
   15204:	b	15228 <readstat_parse_sav+0x16c>
   15208:	mov	sl, #1
   1520c:	b	15884 <readstat_parse_sav+0x7c8>
   15210:	mov	sl, #5
   15214:	mov	r8, #0
   15218:	b	15868 <readstat_parse_sav+0x7ac>
   1521c:	ldr	r0, [r6, #44]	; 0x2c
   15220:	cmp	r0, #1
   15224:	strge	r0, [r8, #356]	; 0x164
   15228:	add	r1, sp, #84	; 0x54
   1522c:	mov	r0, r8
   15230:	bl	47fc <sav_parse_timestamp@plt>
   15234:	cmp	r0, #0
   15238:	beq	15244 <readstat_parse_sav+0x188>
   1523c:	mov	sl, r0
   15240:	b	15868 <readstat_parse_sav+0x7ac>
   15244:	ldr	r6, [r8, #36]	; 0x24
   15248:	add	lr, sp, #1024	; 0x400
   1524c:	mov	r1, #4
   15250:	add	r0, lr, #276	; 0x114
   15254:	ldr	r3, [r6, #12]
   15258:	ldr	r2, [r6, #20]
   1525c:	blx	r3
   15260:	cmp	r0, #4
   15264:	bcs	15270 <readstat_parse_sav+0x1b4>
   15268:	mov	sl, #2
   1526c:	b	15868 <readstat_parse_sav+0x7ac>
   15270:	add	r0, sp, #1312	; 0x520
   15274:	add	r1, sp, #272	; 0x110
   15278:	add	lr, sp, #1024	; 0x400
   1527c:	add	r9, sp, #1312	; 0x520
   15280:	add	r2, r0, #8
   15284:	add	r0, r0, #24
   15288:	add	r7, lr, #276	; 0x114
   1528c:	str	r0, [sp, #64]	; 0x40
   15290:	add	r0, r1, #16
   15294:	str	r2, [sp, #60]	; 0x3c
   15298:	str	r0, [sp, #56]	; 0x38
   1529c:	add	r0, r8, #392	; 0x188
   152a0:	str	r0, [sp, #68]	; 0x44
   152a4:	add	r0, r8, #400	; 0x190
   152a8:	str	r0, [sp, #76]	; 0x4c
   152ac:	add	r0, r8, #408	; 0x198
   152b0:	str	r0, [sp, #72]	; 0x48
   152b4:	add	r0, r8, #436	; 0x1b4
   152b8:	str	r0, [sp, #80]	; 0x50
   152bc:	ldr	r0, [sp, #80]	; 0x50
   152c0:	ldrb	r1, [r0]
   152c4:	ldr	r0, [sp, #1300]	; 0x514
   152c8:	tst	r1, #1
   152cc:	beq	152d8 <readstat_parse_sav+0x21c>
   152d0:	bl	47b4 <byteswap4@plt>
   152d4:	str	r0, [sp, #1300]	; 0x514
   152d8:	sub	r1, r0, #2
   152dc:	mov	sl, #5
   152e0:	cmp	r1, #5
   152e4:	bhi	1571c <readstat_parse_sav+0x660>
   152e8:	add	r0, pc, #4
   152ec:	ldr	r1, [r0, r1, lsl #2]
   152f0:	add	pc, r0, r1
   152f4:	.word	0x00000018
   152f8:	.word	0x000000e8
   152fc:	.word	0x00000574
   15300:	.word	0x00000574
   15304:	.word	0x00000110
   15308:	.word	0x00000124
   1530c:	ldr	r5, [r8, #36]	; 0x24
   15310:	add	r0, sp, #272	; 0x110
   15314:	mov	r1, #28
   15318:	ldr	r3, [r5, #12]
   1531c:	ldr	r2, [r5, #20]
   15320:	blx	r3
   15324:	cmp	r0, #28
   15328:	bcc	15268 <readstat_parse_sav+0x1ac>
   1532c:	ldr	r0, [sp, #276]	; 0x114
   15330:	cmp	r0, #0
   15334:	beq	15394 <readstat_parse_sav+0x2d8>
   15338:	ldr	r3, [r5, #12]
   1533c:	ldr	r2, [r5, #20]
   15340:	add	lr, sp, #1024	; 0x400
   15344:	mov	r1, #4
   15348:	add	r0, lr, #284	; 0x11c
   1534c:	blx	r3
   15350:	cmp	r0, #4
   15354:	bcc	15268 <readstat_parse_sav+0x1ac>
   15358:	ldr	r0, [sp, #80]	; 0x50
   1535c:	ldrb	r1, [r0]
   15360:	ldr	r0, [sp, #1308]	; 0x51c
   15364:	tst	r1, #1
   15368:	beq	15370 <readstat_parse_sav+0x2b4>
   1536c:	bl	47b4 <byteswap4@plt>
   15370:	str	r0, [sp, #1308]	; 0x51c
   15374:	add	r0, r0, #3
   15378:	mov	r1, #1
   1537c:	ldr	r3, [r5, #8]
   15380:	ldr	r2, [r5, #20]
   15384:	bic	r0, r0, #3
   15388:	blx	r3
   1538c:	cmn	r0, #1
   15390:	beq	15864 <readstat_parse_sav+0x7a8>
   15394:	ldr	r0, [sp, #280]	; 0x118
   15398:	cmp	r0, #0
   1539c:	beq	156fc <readstat_parse_sav+0x640>
   153a0:	ldr	r1, [sp, #80]	; 0x50
   153a4:	ldrb	r1, [r1]
   153a8:	tst	r1, #1
   153ac:	beq	153b4 <readstat_parse_sav+0x2f8>
   153b0:	bl	47b4 <byteswap4@plt>
   153b4:	ldr	r3, [r5, #8]
   153b8:	ldr	r2, [r5, #20]
   153bc:	cmp	r0, #0
   153c0:	mov	r1, #1
   153c4:	rsbmi	r0, r0, #0
   153c8:	lsl	r0, r0, #3
   153cc:	blx	r3
   153d0:	cmn	r0, #1
   153d4:	bne	156fc <readstat_parse_sav+0x640>
   153d8:	b	15864 <readstat_parse_sav+0x7a8>
   153dc:	ldr	r5, [r8, #36]	; 0x24
   153e0:	add	r0, sp, #272	; 0x110
   153e4:	mov	r1, #4
   153e8:	ldr	r3, [r5, #12]
   153ec:	ldr	r2, [r5, #20]
   153f0:	blx	r3
   153f4:	cmp	r0, #4
   153f8:	bcs	1550c <readstat_parse_sav+0x450>
   153fc:	mov	sl, #2
   15400:	b	156f4 <readstat_parse_sav+0x638>
   15404:	mov	r0, r8
   15408:	bl	17274 <sav_skip_document_record>
   1540c:	cmp	r0, #0
   15410:	beq	156fc <readstat_parse_sav+0x640>
   15414:	b	1523c <readstat_parse_sav+0x180>
   15418:	ldr	r3, [r6, #12]
   1541c:	ldr	r2, [r6, #20]
   15420:	add	r0, sp, #260	; 0x104
   15424:	mov	r1, #12
   15428:	blx	r3
   1542c:	cmp	r0, #12
   15430:	bcc	15268 <readstat_parse_sav+0x1ac>
   15434:	ldr	r0, [sp, #80]	; 0x50
   15438:	mov	r7, r9
   1543c:	add	r9, sp, #260	; 0x104
   15440:	ldrb	r0, [r0]
   15444:	tst	r0, #1
   15448:	beq	15468 <readstat_parse_sav+0x3ac>
   1544c:	mov	r5, #0
   15450:	ldr	r0, [r9, -r5, lsl #2]
   15454:	bl	47b4 <byteswap4@plt>
   15458:	str	r0, [r9, -r5, lsl #2]
   1545c:	sub	r5, r5, #1
   15460:	cmn	r5, #3
   15464:	bne	15450 <readstat_parse_sav+0x394>
   15468:	add	r2, sp, #260	; 0x104
   1546c:	ldm	r2, {r0, r1, r2}
   15470:	mul	r5, r2, r1
   15474:	cmp	r0, #3
   15478:	bne	155e4 <readstat_parse_sav+0x528>
   1547c:	cmp	r5, #4096	; 0x1000
   15480:	bhi	15868 <readstat_parse_sav+0x7ac>
   15484:	ldr	r3, [r6, #12]
   15488:	ldr	r2, [r6, #20]
   1548c:	mov	r0, r7
   15490:	mov	r1, r5
   15494:	mov	r9, r7
   15498:	blx	r3
   1549c:	cmp	r5, #32
   154a0:	bne	15868 <readstat_parse_sav+0x7ac>
   154a4:	add	lr, sp, #1024	; 0x400
   154a8:	cmp	r0, r5
   154ac:	add	r7, lr, #276	; 0x114
   154b0:	bcc	15868 <readstat_parse_sav+0x7ac>
   154b4:	ldrb	r0, [r8, #436]	; 0x1b4
   154b8:	ldr	r5, [r8, #60]	; 0x3c
   154bc:	ldr	r3, [sp, #1340]	; 0x53c
   154c0:	tst	r0, #1
   154c4:	beq	154d4 <readstat_parse_sav+0x418>
   154c8:	mov	r0, r3
   154cc:	bl	47b4 <byteswap4@plt>
   154d0:	mov	r3, r0
   154d4:	ldr	r1, [r8, #56]	; 0x38
   154d8:	cmp	r1, #0
   154dc:	bne	156ac <readstat_parse_sav+0x5f0>
   154e0:	movw	r0, #62692	; 0xf4e4
   154e4:	movt	r0, #65535	; 0xffff
   154e8:	ldr	r1, [pc, #4040]	; 164b8 <readstat_parse_sav+0x13fc>
   154ec:	add	r1, pc, r1
   154f0:	add	r1, r1, r0
   154f4:	ldr	r2, [r1, #2844]	; 0xb1c
   154f8:	cmp	r3, r2
   154fc:	beq	156a4 <readstat_parse_sav+0x5e8>
   15500:	adds	r0, r0, #36	; 0x24
   15504:	bne	154e8 <readstat_parse_sav+0x42c>
   15508:	b	15898 <readstat_parse_sav+0x7dc>
   1550c:	ldr	r0, [sp, #80]	; 0x50
   15510:	mov	r7, r9
   15514:	ldrb	r1, [r0]
   15518:	ldr	r0, [sp, #272]	; 0x110
   1551c:	tst	r1, #1
   15520:	beq	1552c <readstat_parse_sav+0x470>
   15524:	bl	47b4 <byteswap4@plt>
   15528:	str	r0, [sp, #272]	; 0x110
   1552c:	cmp	r0, #0
   15530:	beq	155b8 <readstat_parse_sav+0x4fc>
   15534:	mov	r9, #0
   15538:	mov	r0, #0
   1553c:	mov	r1, #1
   15540:	strb	r0, [sp, #1308]	; 0x51c
   15544:	mov	r0, #8
   15548:	ldr	r3, [r5, #8]
   1554c:	ldr	r2, [r5, #20]
   15550:	blx	r3
   15554:	mov	sl, #15
   15558:	cmn	r0, #1
   1555c:	beq	156e8 <readstat_parse_sav+0x62c>
   15560:	ldr	r3, [r5, #12]
   15564:	ldr	r2, [r5, #20]
   15568:	add	lr, sp, #1024	; 0x400
   1556c:	mov	r1, #1
   15570:	add	r0, lr, #284	; 0x11c
   15574:	blx	r3
   15578:	cmp	r0, #1
   1557c:	blt	156e4 <readstat_parse_sav+0x628>
   15580:	ldrb	r0, [sp, #1308]	; 0x51c
   15584:	ldr	r3, [r5, #8]
   15588:	ldr	r2, [r5, #20]
   1558c:	mov	r1, #1
   15590:	add	r0, r0, #8
   15594:	bic	r0, r0, #7
   15598:	sub	r0, r0, #1
   1559c:	blx	r3
   155a0:	cmn	r0, #1
   155a4:	beq	156e8 <readstat_parse_sav+0x62c>
   155a8:	ldr	r0, [sp, #272]	; 0x110
   155ac:	add	r9, r9, #1
   155b0:	cmp	r9, r0
   155b4:	bcc	15538 <readstat_parse_sav+0x47c>
   155b8:	ldr	r3, [r5, #12]
   155bc:	ldr	r2, [r5, #20]
   155c0:	add	lr, sp, #1024	; 0x400
   155c4:	mov	r1, #4
   155c8:	add	r0, lr, #284	; 0x11c
   155cc:	blx	r3
   155d0:	cmp	r0, #4
   155d4:	mov	r9, r7
   155d8:	bcs	15610 <readstat_parse_sav+0x554>
   155dc:	mov	sl, #2
   155e0:	b	156ec <readstat_parse_sav+0x630>
   155e4:	ldr	r3, [r6, #8]
   155e8:	ldr	r2, [r6, #20]
   155ec:	mov	r0, r5
   155f0:	mov	r1, #1
   155f4:	blx	r3
   155f8:	add	lr, sp, #1024	; 0x400
   155fc:	mov	r9, r7
   15600:	cmn	r0, #1
   15604:	add	r7, lr, #276	; 0x114
   15608:	bne	156fc <readstat_parse_sav+0x640>
   1560c:	b	15864 <readstat_parse_sav+0x7a8>
   15610:	ldr	r0, [sp, #80]	; 0x50
   15614:	ldrb	r1, [r0]
   15618:	ldr	r0, [sp, #1308]	; 0x51c
   1561c:	tst	r1, #1
   15620:	beq	1562c <readstat_parse_sav+0x570>
   15624:	bl	47b4 <byteswap4@plt>
   15628:	str	r0, [sp, #1308]	; 0x51c
   1562c:	add	lr, sp, #1024	; 0x400
   15630:	mov	sl, #5
   15634:	cmp	r0, #4
   15638:	add	r7, lr, #276	; 0x114
   1563c:	bne	156f4 <readstat_parse_sav+0x638>
   15640:	ldr	r3, [r5, #12]
   15644:	ldr	r2, [r5, #20]
   15648:	add	lr, sp, #1024	; 0x400
   1564c:	mov	r1, #4
   15650:	add	r0, lr, #280	; 0x118
   15654:	blx	r3
   15658:	cmp	r0, #4
   1565c:	mov	sl, #2
   15660:	bcc	156f4 <readstat_parse_sav+0x638>
   15664:	ldr	r0, [sp, #80]	; 0x50
   15668:	ldrb	r1, [r0]
   1566c:	ldr	r0, [sp, #1304]	; 0x518
   15670:	tst	r1, #1
   15674:	beq	15680 <readstat_parse_sav+0x5c4>
   15678:	bl	47b4 <byteswap4@plt>
   1567c:	str	r0, [sp, #1304]	; 0x518
   15680:	ldr	r3, [r5, #8]
   15684:	ldr	r2, [r5, #20]
   15688:	lsl	r0, r0, #2
   1568c:	mov	r1, #1
   15690:	blx	r3
   15694:	cmn	r0, #1
   15698:	mov	sl, #0
   1569c:	movweq	sl, #15
   156a0:	b	156f4 <readstat_parse_sav+0x638>
   156a4:	add	r1, r1, #2848	; 0xb20
   156a8:	str	r1, [r8, #56]	; 0x38
   156ac:	cmp	r5, #0
   156b0:	cmpne	r1, #0
   156b4:	beq	156fc <readstat_parse_sav+0x640>
   156b8:	mov	r0, r5
   156bc:	bl	4b08 <iconv_open@plt>
   156c0:	cmn	r0, #1
   156c4:	beq	158d4 <readstat_parse_sav+0x818>
   156c8:	mov	r5, r0
   156cc:	ldr	r0, [r8, #336]	; 0x150
   156d0:	cmp	r0, #0
   156d4:	beq	156dc <readstat_parse_sav+0x620>
   156d8:	bl	47d8 <iconv_close@plt>
   156dc:	str	r5, [r8, #336]	; 0x150
   156e0:	b	156fc <readstat_parse_sav+0x640>
   156e4:	mov	sl, #2
   156e8:	mov	r9, r7
   156ec:	add	lr, sp, #1024	; 0x400
   156f0:	add	r7, lr, #276	; 0x114
   156f4:	cmp	sl, #0
   156f8:	bne	15868 <readstat_parse_sav+0x7ac>
   156fc:	ldr	r3, [r6, #12]
   15700:	ldr	r2, [r6, #20]
   15704:	mov	r0, r7
   15708:	mov	r1, #4
   1570c:	blx	r3
   15710:	cmp	r0, #3
   15714:	bhi	152bc <readstat_parse_sav+0x200>
   15718:	b	15268 <readstat_parse_sav+0x1ac>
   1571c:	movw	r1, #999	; 0x3e7
   15720:	cmp	r0, r1
   15724:	bne	15868 <readstat_parse_sav+0x7ac>
   15728:	ldr	r3, [r4, #8]
   1572c:	ldr	r2, [r4, #20]
   15730:	mov	r0, #176	; 0xb0
   15734:	mov	r1, #0
   15738:	blx	r3
   1573c:	cmn	r0, #1
   15740:	beq	15864 <readstat_parse_sav+0x7a8>
   15744:	ldr	r3, [r8, #36]	; 0x24
   15748:	ldr	r1, [r8, #28]
   1574c:	ldr	r0, [r8, #32]
   15750:	ldr	r2, [r8, #40]	; 0x28
   15754:	ldr	r6, [r3, #16]
   15758:	ldr	r3, [r3, #20]
   1575c:	blx	r6
   15760:	cmp	r0, #0
   15764:	bne	1523c <readstat_parse_sav+0x180>
   15768:	ldr	r5, [r8, #36]	; 0x24
   1576c:	mov	r0, #4096	; 0x1000
   15770:	bl	4bf8 <readstat_malloc@plt>
   15774:	cmp	r0, #0
   15778:	str	r0, [sp, #52]	; 0x34
   1577c:	beq	16ec0 <readstat_parse_sav+0x1e04>
   15780:	ldr	r3, [r5, #12]
   15784:	ldr	r2, [r5, #20]
   15788:	add	r0, sp, #1296	; 0x510
   1578c:	mov	r1, #4
   15790:	blx	r3
   15794:	cmp	r0, #4
   15798:	bcs	158dc <readstat_parse_sav+0x820>
   1579c:	mov	r2, #2
   157a0:	mov	sl, r2
   157a4:	ldr	r0, [sp, #52]	; 0x34
   157a8:	cmp	r0, #0
   157ac:	beq	157b4 <readstat_parse_sav+0x6f8>
   157b0:	bl	48bc <free@plt>
   157b4:	cmp	sl, #0
   157b8:	bne	15868 <readstat_parse_sav+0x7ac>
   157bc:	mov	r0, #0
   157c0:	str	r0, [r8, #348]	; 0x15c
   157c4:	ldr	r1, [r8, #340]	; 0x154
   157c8:	cmp	r1, #1
   157cc:	blt	15828 <readstat_parse_sav+0x76c>
   157d0:	ldr	r2, [r8, #44]	; 0x2c
   157d4:	movw	ip, #2081	; 0x821
   157d8:	mov	r0, #0
   157dc:	mov	r7, #0
   157e0:	movt	ip, #8322	; 0x2082
   157e4:	ldr	r6, [r2, r7, lsl #2]
   157e8:	ldr	r5, [r6, #20]
   157ec:	cmp	r5, #0
   157f0:	beq	1580c <readstat_parse_sav+0x750>
   157f4:	add	r5, r5, #251	; 0xfb
   157f8:	lsr	r5, r5, #2
   157fc:	umull	r5, r3, r5, ip
   15800:	lsr	r5, r3, #3
   15804:	str	r5, [r6, #48]	; 0x30
   15808:	b	15810 <readstat_parse_sav+0x754>
   1580c:	ldr	r5, [r6, #48]	; 0x30
   15810:	add	r7, r5, r7
   15814:	str	r0, [r6, #8]
   15818:	add	r0, r0, #1
   1581c:	cmp	r7, r1
   15820:	blt	157e4 <readstat_parse_sav+0x728>
   15824:	str	r0, [r8, #348]	; 0x15c
   15828:	mov	r1, #4
   1582c:	bl	49a0 <readstat_calloc@plt>
   15830:	str	r0, [r8, #52]	; 0x34
   15834:	ldr	r0, [r8, #348]	; 0x15c
   15838:	cmp	r0, #0
   1583c:	beq	16ca8 <readstat_parse_sav+0x1bec>
   15840:	ldr	r1, [r8]
   15844:	cmp	r1, #0
   15848:	beq	16c0c <readstat_parse_sav+0x1b50>
   1584c:	ldr	r1, [r8, #352]	; 0x160
   15850:	cmn	r1, #1
   15854:	beq	16b58 <readstat_parse_sav+0x1a9c>
   15858:	ldr	r1, [r8, #356]	; 0x164
   1585c:	asr	r2, r1, #31
   15860:	b	16b60 <readstat_parse_sav+0x1aa4>
   15864:	mov	sl, #15
   15868:	ldr	r1, [r4, #4]
   1586c:	ldr	r0, [r4, #20]
   15870:	blx	r1
   15874:	cmp	r8, #0
   15878:	beq	15884 <readstat_parse_sav+0x7c8>
   1587c:	mov	r0, r8
   15880:	bl	4904 <sav_ctx_free@plt>
   15884:	mov	r0, sl
   15888:	sub	sp, fp, #48	; 0x30
   1588c:	vpop	{d8-d9}
   15890:	add	sp, sp, #4
   15894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15898:	ldr	r0, [r8, #24]
   1589c:	mov	sl, #7
   158a0:	cmp	r0, #0
   158a4:	beq	15868 <readstat_parse_sav+0x7ac>
   158a8:	ldr	r2, [pc, #3864]	; 167c8 <readstat_parse_sav+0x170c>
   158ac:	add	r5, sp, #272	; 0x110
   158b0:	mov	r1, #1024	; 0x400
   158b4:	mov	r0, r5
   158b8:	add	r2, pc, r2
   158bc:	bl	4c4c <snprintf@plt>
   158c0:	ldr	r2, [r8, #24]
   158c4:	ldr	r1, [r8, #40]	; 0x28
   158c8:	mov	r0, r5
   158cc:	blx	r2
   158d0:	b	15868 <readstat_parse_sav+0x7ac>
   158d4:	mov	sl, #7
   158d8:	b	15868 <readstat_parse_sav+0x7ac>
   158dc:	add	r0, r9, #20
   158e0:	vmov.i32	q4, #0	; 0x00000000
   158e4:	str	r5, [sp, #48]	; 0x30
   158e8:	str	r0, [sp, #28]
   158ec:	add	r0, r8, #344	; 0x158
   158f0:	str	r0, [sp, #24]
   158f4:	mov	r0, #4096	; 0x1000
   158f8:	str	r0, [sp, #36]	; 0x24
   158fc:	ldr	r0, [sp, #80]	; 0x50
   15900:	ldrb	r1, [r0]
   15904:	ldr	r0, [sp, #1296]	; 0x510
   15908:	tst	r1, #1
   1590c:	beq	15918 <readstat_parse_sav+0x85c>
   15910:	bl	47b4 <byteswap4@plt>
   15914:	str	r0, [sp, #1296]	; 0x510
   15918:	sub	r1, r0, #2
   1591c:	mov	r2, #5
   15920:	cmp	r1, #5
   15924:	bhi	16b18 <readstat_parse_sav+0x1a5c>
   15928:	add	r0, pc, #4
   1592c:	ldr	r1, [r0, r1, lsl #2]
   15930:	add	pc, r0, r1
   15934:	.word	0x00000018
   15938:	.word	0x00000098
   1593c:	.word	0xfffffe6c
   15940:	.word	0xfffffe6c
   15944:	.word	0x000001d8
   15948:	.word	0x00000214
   1594c:	mov	r0, r9
   15950:	mov	r1, #12
   15954:	ldr	r5, [r8, #36]	; 0x24
   15958:	vst1.64	{d8-d9}, [r0], r1
   1595c:	vst1.32	{d8-d9}, [r0]
   15960:	ldr	r0, [r8, #48]	; 0x30
   15964:	ldr	r1, [r8, #340]	; 0x154
   15968:	cmp	r1, r0
   1596c:	bne	15990 <readstat_parse_sav+0x8d4>
   15970:	lsl	r0, r1, #1
   15974:	lsl	r1, r1, #3
   15978:	str	r0, [r8, #48]	; 0x30
   1597c:	ldr	r0, [r8, #44]	; 0x2c
   15980:	bl	4cb8 <readstat_realloc@plt>
   15984:	cmp	r0, #0
   15988:	str	r0, [r8, #44]	; 0x2c
   1598c:	beq	16ddc <readstat_parse_sav+0x1d20>
   15990:	ldr	r3, [r5, #12]
   15994:	ldr	r2, [r5, #20]
   15998:	mov	r0, r9
   1599c:	mov	r1, #28
   159a0:	blx	r3
   159a4:	mov	r6, #2
   159a8:	mov	sl, #0
   159ac:	cmp	r0, #28
   159b0:	bcc	171d0 <readstat_parse_sav+0x2114>
   159b4:	ldr	r0, [sp, #80]	; 0x50
   159b8:	ldrb	r0, [r0]
   159bc:	tst	r0, #1
   159c0:	bne	15cb8 <readstat_parse_sav+0xbfc>
   159c4:	ldr	r0, [sp, #1328]	; 0x530
   159c8:	b	15cd8 <readstat_parse_sav+0xc1c>
   159cc:	ldr	r0, [r8, #36]	; 0x24
   159d0:	add	lr, sp, #1024	; 0x400
   159d4:	mov	r1, #4
   159d8:	ldr	r3, [r0, #12]
   159dc:	ldr	r2, [r0, #20]
   159e0:	str	r0, [sp, #44]	; 0x2c
   159e4:	add	r0, lr, #284	; 0x11c
   159e8:	blx	r3
   159ec:	mov	r2, #2
   159f0:	cmp	r0, #4
   159f4:	bcc	16af0 <readstat_parse_sav+0x1a34>
   159f8:	ldr	r0, [sp, #80]	; 0x50
   159fc:	ldrb	r1, [r0]
   15a00:	ldr	r0, [sp, #1308]	; 0x51c
   15a04:	tst	r1, #1
   15a08:	beq	15a14 <readstat_parse_sav+0x958>
   15a0c:	bl	47b4 <byteswap4@plt>
   15a10:	str	r0, [sp, #1308]	; 0x51c
   15a14:	cmp	r0, #0
   15a18:	beq	1603c <readstat_parse_sav+0xf80>
   15a1c:	mov	r1, #72	; 0x48
   15a20:	bl	49a0 <readstat_calloc@plt>
   15a24:	cmp	r0, #0
   15a28:	str	r0, [sp, #40]	; 0x28
   15a2c:	beq	16570 <readstat_parse_sav+0x14b4>
   15a30:	ldr	r0, [sp, #1308]	; 0x51c
   15a34:	cmp	r0, #0
   15a38:	beq	16044 <readstat_parse_sav+0xf88>
   15a3c:	ldr	sl, [sp, #40]	; 0x28
   15a40:	mov	r9, #0
   15a44:	ldr	r5, [sp, #44]	; 0x2c
   15a48:	mov	r0, #0
   15a4c:	mov	r1, #8
   15a50:	strb	r0, [sp, #272]	; 0x110
   15a54:	mov	r0, sl
   15a58:	ldr	r3, [r5, #12]
   15a5c:	ldr	r2, [r5, #20]
   15a60:	blx	r3
   15a64:	mov	r7, #2
   15a68:	cmp	r0, #8
   15a6c:	blt	16a94 <readstat_parse_sav+0x19d8>
   15a70:	ldr	r3, [r5, #12]
   15a74:	ldr	r2, [r5, #20]
   15a78:	add	r0, sp, #272	; 0x110
   15a7c:	mov	r1, #1
   15a80:	blx	r3
   15a84:	cmp	r0, #1
   15a88:	blt	16a94 <readstat_parse_sav+0x19d8>
   15a8c:	ldrb	r0, [sp, #272]	; 0x110
   15a90:	ldr	r3, [r5, #12]
   15a94:	ldr	r2, [r5, #20]
   15a98:	add	r0, r0, #8
   15a9c:	bic	r0, r0, #7
   15aa0:	sub	r5, r0, #1
   15aa4:	add	r0, sp, #1312	; 0x520
   15aa8:	mov	r1, r5
   15aac:	blx	r3
   15ab0:	cmp	r0, r5
   15ab4:	bcc	16a94 <readstat_parse_sav+0x19d8>
   15ab8:	mov	r0, #1
   15abc:	orr	r6, r0, r5, lsl #2
   15ac0:	mov	r0, r6
   15ac4:	bl	4bf8 <readstat_malloc@plt>
   15ac8:	cmp	r0, #0
   15acc:	str	r0, [sl, #64]	; 0x40
   15ad0:	beq	1677c <readstat_parse_sav+0x16c0>
   15ad4:	ldr	r1, [r8, #336]	; 0x150
   15ad8:	add	r2, sp, #1312	; 0x520
   15adc:	mov	r3, r5
   15ae0:	str	r1, [sp]
   15ae4:	mov	r1, r6
   15ae8:	bl	4c04 <readstat_convert@plt>
   15aec:	cmp	r0, #0
   15af0:	bne	167b8 <readstat_parse_sav+0x16fc>
   15af4:	ldr	r0, [sp, #1308]	; 0x51c
   15af8:	add	r9, r9, #1
   15afc:	add	sl, sl, #72	; 0x48
   15b00:	cmp	r9, r0
   15b04:	bcc	15a44 <readstat_parse_sav+0x988>
   15b08:	b	16044 <readstat_parse_sav+0xf88>
   15b0c:	ldr	r0, [r8, #4]
   15b10:	mov	sl, r9
   15b14:	cmp	r0, #0
   15b18:	beq	15ee0 <readstat_parse_sav+0xe24>
   15b1c:	ldr	r6, [r8, #36]	; 0x24
   15b20:	add	lr, sp, #1024	; 0x400
   15b24:	mov	r1, #4
   15b28:	add	r0, lr, #284	; 0x11c
   15b2c:	ldr	r3, [r6, #12]
   15b30:	ldr	r2, [r6, #20]
   15b34:	blx	r3
   15b38:	cmp	r0, #4
   15b3c:	bcs	15f1c <readstat_parse_sav+0xe60>
   15b40:	mov	r2, #2
   15b44:	b	16738 <readstat_parse_sav+0x167c>
   15b48:	ldr	r3, [r5, #12]
   15b4c:	ldr	r2, [r5, #20]
   15b50:	add	r6, sp, #260	; 0x104
   15b54:	mov	r1, #12
   15b58:	mov	r0, r6
   15b5c:	blx	r3
   15b60:	cmp	r0, #12
   15b64:	bcc	1579c <readstat_parse_sav+0x6e0>
   15b68:	ldr	r0, [sp, #80]	; 0x50
   15b6c:	ldrb	r0, [r0]
   15b70:	tst	r0, #1
   15b74:	beq	15b94 <readstat_parse_sav+0xad8>
   15b78:	mov	r5, #0
   15b7c:	ldr	r0, [r6, -r5, lsl #2]
   15b80:	bl	47b4 <byteswap4@plt>
   15b84:	str	r0, [r6, -r5, lsl #2]
   15b88:	sub	r5, r5, #1
   15b8c:	cmn	r5, #3
   15b90:	bne	15b7c <readstat_parse_sav+0xac0>
   15b94:	ldr	r9, [sp, #264]	; 0x108
   15b98:	ldr	r6, [sp, #268]	; 0x10c
   15b9c:	ldr	r0, [sp, #36]	; 0x24
   15ba0:	ldr	sl, [sp, #260]	; 0x104
   15ba4:	mul	r5, r6, r9
   15ba8:	cmp	r0, r5
   15bac:	bcs	15bcc <readstat_parse_sav+0xb10>
   15bb0:	ldr	r0, [sp, #52]	; 0x34
   15bb4:	mov	r1, r5
   15bb8:	bl	4cb8 <readstat_realloc@plt>
   15bbc:	cmp	r0, #0
   15bc0:	str	r5, [sp, #36]	; 0x24
   15bc4:	bne	15bd8 <readstat_parse_sav+0xb1c>
   15bc8:	b	16e04 <readstat_parse_sav+0x1d48>
   15bcc:	ldr	r0, [sp, #52]	; 0x34
   15bd0:	cmp	r5, #0
   15bd4:	beq	16b50 <readstat_parse_sav+0x1a94>
   15bd8:	ldr	r1, [sp, #48]	; 0x30
   15bdc:	str	r0, [sp, #52]	; 0x34
   15be0:	ldr	r3, [r1, #12]
   15be4:	ldr	r2, [r1, #20]
   15be8:	mov	r1, r5
   15bec:	blx	r3
   15bf0:	cmp	r0, r5
   15bf4:	bcc	16b50 <readstat_parse_sav+0x1a94>
   15bf8:	sub	r0, sl, #11
   15bfc:	cmp	r0, #11
   15c00:	bhi	15fec <readstat_parse_sav+0xf30>
   15c04:	add	r1, pc, #4
   15c08:	ldr	r0, [r1, r0, lsl #2]
   15c0c:	add	pc, r1, r0
   15c10:	.word	0x00000030
   15c14:	.word	0x00000b10
   15c18:	.word	0x000004ec
   15c1c:	.word	0x00000500
   15c20:	.word	0x00000b10
   15c24:	.word	0x00000b10
   15c28:	.word	0x00000b10
   15c2c:	.word	0x00000b10
   15c30:	.word	0x00000b10
   15c34:	.word	0x00000b10
   15c38:	.word	0x0000051c
   15c3c:	.word	0x000007c8
   15c40:	cmp	r9, #4
   15c44:	bne	16b50 <readstat_parse_sav+0x1a94>
   15c48:	ldr	r0, [r8, #328]	; 0x148
   15c4c:	lsl	r1, r6, #2
   15c50:	bl	4cb8 <readstat_realloc@plt>
   15c54:	cmp	r6, #0
   15c58:	str	r0, [r8, #328]	; 0x148
   15c5c:	beq	15c68 <readstat_parse_sav+0xbac>
   15c60:	cmp	r0, #0
   15c64:	beq	16e0c <readstat_parse_sav+0x1d50>
   15c68:	cmp	r6, #0
   15c6c:	str	r6, [r8, #332]	; 0x14c
   15c70:	beq	16720 <readstat_parse_sav+0x1664>
   15c74:	ldr	r3, [sp, #52]	; 0x34
   15c78:	mov	r5, #0
   15c7c:	ldr	r2, [sp, #80]	; 0x50
   15c80:	ldr	r1, [r3, r5, lsl #2]
   15c84:	ldrb	r2, [r2]
   15c88:	tst	r2, #1
   15c8c:	beq	15ca4 <readstat_parse_sav+0xbe8>
   15c90:	mov	r0, r1
   15c94:	bl	47b4 <byteswap4@plt>
   15c98:	mov	r1, r0
   15c9c:	ldr	r3, [sp, #52]	; 0x34
   15ca0:	ldr	r0, [r8, #328]	; 0x148
   15ca4:	str	r1, [r0, r5, lsl #2]
   15ca8:	add	r5, r5, #1
   15cac:	cmp	r6, r5
   15cb0:	bne	15c7c <readstat_parse_sav+0xbc0>
   15cb4:	b	16720 <readstat_parse_sav+0x1664>
   15cb8:	ldr	r0, [sp, #1324]	; 0x52c
   15cbc:	bl	47b4 <byteswap4@plt>
   15cc0:	ldr	r1, [sp, #80]	; 0x50
   15cc4:	ldrb	r1, [r1]
   15cc8:	str	r0, [sp, #1324]	; 0x52c
   15ccc:	ldr	r0, [sp, #1328]	; 0x530
   15cd0:	tst	r1, #1
   15cd4:	bne	15fc0 <readstat_parse_sav+0xf04>
   15cd8:	str	r0, [sp, #1328]	; 0x530
   15cdc:	ldr	r9, [sp, #1312]	; 0x520
   15ce0:	cmn	r9, #1
   15ce4:	ble	15ef0 <readstat_parse_sav+0xe34>
   15ce8:	mov	r0, #1
   15cec:	mov	r1, #280	; 0x118
   15cf0:	bl	49a0 <readstat_calloc@plt>
   15cf4:	cmp	r0, #0
   15cf8:	beq	16ddc <readstat_parse_sav+0x1d20>
   15cfc:	mov	sl, r0
   15d00:	mov	r0, #1
   15d04:	ldr	r5, [sp, #28]
   15d08:	mvn	r1, #0
   15d0c:	mov	r7, #0
   15d10:	mov	r3, #8
   15d14:	str	r0, [sl, #48]	; 0x30
   15d18:	str	r0, [sl, #16]
   15d1c:	ldr	r0, [r8, #340]	; 0x154
   15d20:	mov	r2, r5
   15d24:	str	r0, [sl, #8]
   15d28:	ldr	r0, [r8, #344]	; 0x158
   15d2c:	str	r1, [sl, #4]
   15d30:	mov	r1, #9
   15d34:	str	r0, [sl, #12]
   15d38:	add	r0, sl, #187	; 0xbb
   15d3c:	str	r7, [sp]
   15d40:	bl	4c04 <readstat_convert@plt>
   15d44:	cmp	r0, #0
   15d48:	bne	16dcc <readstat_parse_sav+0x1d10>
   15d4c:	add	r0, sl, #196	; 0xc4
   15d50:	mov	r1, #65	; 0x41
   15d54:	mov	r2, r5
   15d58:	mov	r3, #8
   15d5c:	str	r7, [sp]
   15d60:	bl	4c04 <readstat_convert@plt>
   15d64:	cmp	r0, #0
   15d68:	bne	16dcc <readstat_parse_sav+0x1d10>
   15d6c:	ldr	r0, [sp, #1324]	; 0x52c
   15d70:	cmp	r9, #0
   15d74:	ubfx	r1, r0, #8, #8
   15d78:	str	r1, [sl, #28]
   15d7c:	uxtb	r1, r0
   15d80:	str	r1, [sl, #32]
   15d84:	ubfx	r0, r0, #16, #8
   15d88:	str	r0, [sl, #24]
   15d8c:	ldr	r1, [sp, #1328]	; 0x530
   15d90:	ubfx	r2, r1, #8, #8
   15d94:	str	r2, [sl, #40]	; 0x28
   15d98:	uxtb	r2, r1
   15d9c:	str	r2, [sl, #44]	; 0x2c
   15da0:	ubfx	r2, r1, #16, #8
   15da4:	mov	r1, #0
   15da8:	str	r2, [sl, #36]	; 0x24
   15dac:	bgt	15dc0 <readstat_parse_sav+0xd04>
   15db0:	subs	r2, r2, #1
   15db4:	movwne	r2, #5
   15db8:	subs	r1, r0, #1
   15dbc:	movne	r1, r2
   15dc0:	str	r1, [sl]
   15dc4:	ldr	r0, [sp, #1316]	; 0x524
   15dc8:	cmp	r0, #0
   15dcc:	beq	15e9c <readstat_parse_sav+0xde0>
   15dd0:	ldr	r6, [r8, #36]	; 0x24
   15dd4:	add	r0, sp, #272	; 0x110
   15dd8:	mov	r1, #4
   15ddc:	ldr	r3, [r6, #12]
   15de0:	ldr	r2, [r6, #20]
   15de4:	blx	r3
   15de8:	cmp	r0, #4
   15dec:	bcc	170a4 <readstat_parse_sav+0x1fe8>
   15df0:	ldr	r0, [sp, #80]	; 0x50
   15df4:	ldrb	r1, [r0]
   15df8:	ldr	r0, [sp, #272]	; 0x110
   15dfc:	tst	r1, #1
   15e00:	beq	15e08 <readstat_parse_sav+0xd4c>
   15e04:	bl	47b4 <byteswap4@plt>
   15e08:	cmp	r0, #0
   15e0c:	str	r0, [sp, #272]	; 0x110
   15e10:	beq	15e9c <readstat_parse_sav+0xde0>
   15e14:	add	r0, r0, #3
   15e18:	bic	r5, r0, #3
   15e1c:	mov	r0, r5
   15e20:	bl	4bf8 <readstat_malloc@plt>
   15e24:	cmp	r0, #0
   15e28:	beq	170bc <readstat_parse_sav+0x2000>
   15e2c:	mov	r7, r0
   15e30:	ldr	r0, [sp, #272]	; 0x110
   15e34:	mov	r1, #1
   15e38:	orr	r9, r1, r0, lsl #2
   15e3c:	mov	r0, r9
   15e40:	bl	4bf8 <readstat_malloc@plt>
   15e44:	cmp	r0, #0
   15e48:	str	r0, [sl, #264]	; 0x108
   15e4c:	beq	170c4 <readstat_parse_sav+0x2008>
   15e50:	ldr	r3, [r6, #12]
   15e54:	ldr	r2, [r6, #20]
   15e58:	mov	r0, r7
   15e5c:	mov	r1, r5
   15e60:	blx	r3
   15e64:	cmp	r0, r5
   15e68:	bcc	171a4 <readstat_parse_sav+0x20e8>
   15e6c:	ldr	r1, [r8, #336]	; 0x150
   15e70:	ldr	r0, [sl, #264]	; 0x108
   15e74:	ldr	r3, [sp, #272]	; 0x110
   15e78:	mov	r2, r7
   15e7c:	str	r1, [sp]
   15e80:	mov	r1, r9
   15e84:	bl	4c04 <readstat_convert@plt>
   15e88:	mov	r5, r0
   15e8c:	mov	r0, r7
   15e90:	bl	48bc <free@plt>
   15e94:	cmp	r5, #0
   15e98:	bne	171b4 <readstat_parse_sav+0x20f8>
   15e9c:	ldr	r0, [sp, #1320]	; 0x528
   15ea0:	cmp	r0, #0
   15ea4:	beq	166fc <readstat_parse_sav+0x1640>
   15ea8:	ldr	r1, [sp, #80]	; 0x50
   15eac:	mov	r5, #0
   15eb0:	ldrb	r1, [r1]
   15eb4:	tst	r1, #1
   15eb8:	beq	15ec0 <readstat_parse_sav+0xe04>
   15ebc:	bl	47b4 <byteswap4@plt>
   15ec0:	add	r1, r0, #3
   15ec4:	str	r0, [sl, #52]	; 0x34
   15ec8:	cmp	r1, #6
   15ecc:	bhi	170ac <readstat_parse_sav+0x1ff0>
   15ed0:	cmn	r0, #1
   15ed4:	ble	16580 <readstat_parse_sav+0x14c4>
   15ed8:	str	r5, [sl, #56]	; 0x38
   15edc:	b	16590 <readstat_parse_sav+0x14d4>
   15ee0:	mov	r0, r8
   15ee4:	bl	17274 <sav_skip_document_record>
   15ee8:	mov	r2, r0
   15eec:	b	16738 <readstat_parse_sav+0x167c>
   15ef0:	ldr	r0, [r8, #340]	; 0x154
   15ef4:	cmp	r0, #0
   15ef8:	beq	1709c <readstat_parse_sav+0x1fe0>
   15efc:	ldr	r2, [r8, #344]	; 0x158
   15f00:	ldr	r1, [r8, #44]	; 0x2c
   15f04:	add	r2, r2, #1
   15f08:	add	r0, r1, r0, lsl #2
   15f0c:	str	r2, [r8, #344]	; 0x158
   15f10:	ldr	r0, [r0, #-4]
   15f14:	add	r0, r0, #16
   15f18:	b	16714 <readstat_parse_sav+0x1658>
   15f1c:	ldr	r0, [sp, #80]	; 0x50
   15f20:	ldrb	r1, [r0]
   15f24:	ldr	r0, [sp, #1308]	; 0x51c
   15f28:	tst	r1, #1
   15f2c:	beq	15f38 <readstat_parse_sav+0xe7c>
   15f30:	bl	47b4 <byteswap4@plt>
   15f34:	str	r0, [sp, #1308]	; 0x51c
   15f38:	cmp	r0, #0
   15f3c:	beq	15fb8 <readstat_parse_sav+0xefc>
   15f40:	mov	r5, #0
   15f44:	mov	r9, sl
   15f48:	ldr	r3, [r6, #12]
   15f4c:	ldr	r2, [r6, #20]
   15f50:	add	r7, sp, #272	; 0x110
   15f54:	mov	r1, #80	; 0x50
   15f58:	mov	r0, r7
   15f5c:	blx	r3
   15f60:	cmp	r0, #80	; 0x50
   15f64:	blt	15b40 <readstat_parse_sav+0xa84>
   15f68:	ldr	r0, [r8, #336]	; 0x150
   15f6c:	movw	r1, #321	; 0x141
   15f70:	mov	r2, r7
   15f74:	mov	r3, #80	; 0x50
   15f78:	str	r0, [sp]
   15f7c:	mov	r0, r9
   15f80:	bl	4c04 <readstat_convert@plt>
   15f84:	cmp	r0, #0
   15f88:	bne	15ee8 <readstat_parse_sav+0xe2c>
   15f8c:	ldr	r3, [r8, #4]
   15f90:	ldr	r2, [r8, #40]	; 0x28
   15f94:	mov	r0, r5
   15f98:	mov	r1, r9
   15f9c:	blx	r3
   15fa0:	cmp	r0, #0
   15fa4:	bne	16734 <readstat_parse_sav+0x1678>
   15fa8:	ldr	r0, [sp, #1308]	; 0x51c
   15fac:	add	r5, r5, #1
   15fb0:	cmp	r5, r0
   15fb4:	bcc	15f48 <readstat_parse_sav+0xe8c>
   15fb8:	mov	r2, #0
   15fbc:	b	16738 <readstat_parse_sav+0x167c>
   15fc0:	bl	47b4 <byteswap4@plt>
   15fc4:	ldr	r1, [sp, #80]	; 0x50
   15fc8:	ldrb	r1, [r1]
   15fcc:	str	r0, [sp, #1328]	; 0x530
   15fd0:	ldr	r9, [sp, #1312]	; 0x520
   15fd4:	tst	r1, #1
   15fd8:	beq	15ce0 <readstat_parse_sav+0xc24>
   15fdc:	mov	r0, r9
   15fe0:	bl	47b4 <byteswap4@plt>
   15fe4:	mov	r9, r0
   15fe8:	b	15ce0 <readstat_parse_sav+0xc24>
   15fec:	cmp	sl, #4
   15ff0:	bne	16720 <readstat_parse_sav+0x1664>
   15ff4:	cmp	r9, #8
   15ff8:	cmpeq	r6, #3
   15ffc:	bne	16b50 <readstat_parse_sav+0x1a94>
   16000:	ldr	r2, [sp, #80]	; 0x50
   16004:	ldr	r1, [sp, #52]	; 0x34
   16008:	add	r0, r1, #8
   1600c:	ldrb	r2, [r2]
   16010:	ldr	r6, [r0]
   16014:	ldr	r5, [r0, #4]
   16018:	ldr	r9, [r0, #8]
   1601c:	ldr	sl, [r0, #12]
   16020:	ldr	r0, [r1]
   16024:	ldr	r1, [r1, #4]
   16028:	tst	r2, #1
   1602c:	bne	16784 <readstat_parse_sav+0x16c8>
   16030:	ldr	r2, [sp, #68]	; 0x44
   16034:	strd	r0, [r2]
   16038:	b	167a0 <readstat_parse_sav+0x16e4>
   1603c:	mov	r0, #0
   16040:	str	r0, [sp, #40]	; 0x28
   16044:	ldr	r0, [sp, #44]	; 0x2c
   16048:	add	lr, sp, #1024	; 0x400
   1604c:	mov	r1, #4
   16050:	ldr	r3, [r0, #12]
   16054:	ldr	r2, [r0, #20]
   16058:	add	r0, lr, #276	; 0x114
   1605c:	blx	r3
   16060:	mov	r7, #2
   16064:	cmp	r0, #4
   16068:	bcc	16a94 <readstat_parse_sav+0x19d8>
   1606c:	ldr	r0, [sp, #80]	; 0x50
   16070:	ldrb	r1, [r0]
   16074:	ldr	r0, [sp, #1300]	; 0x514
   16078:	tst	r1, #1
   1607c:	beq	16088 <readstat_parse_sav+0xfcc>
   16080:	bl	47b4 <byteswap4@plt>
   16084:	str	r0, [sp, #1300]	; 0x514
   16088:	cmp	r0, #4
   1608c:	bne	1672c <readstat_parse_sav+0x1670>
   16090:	ldr	r0, [sp, #44]	; 0x2c
   16094:	add	lr, sp, #1024	; 0x400
   16098:	mov	r1, #4
   1609c:	ldr	r3, [r0, #12]
   160a0:	ldr	r2, [r0, #20]
   160a4:	add	r0, lr, #280	; 0x118
   160a8:	blx	r3
   160ac:	cmp	r0, #4
   160b0:	bcc	16a94 <readstat_parse_sav+0x19d8>
   160b4:	ldr	r0, [sp, #80]	; 0x50
   160b8:	ldrb	r1, [r0]
   160bc:	ldr	r0, [sp, #1304]	; 0x518
   160c0:	tst	r1, #1
   160c4:	beq	160d0 <readstat_parse_sav+0x1014>
   160c8:	bl	47b4 <byteswap4@plt>
   160cc:	str	r0, [sp, #1304]	; 0x518
   160d0:	cmp	r0, #0
   160d4:	beq	167cc <readstat_parse_sav+0x1710>
   160d8:	lsl	r0, r0, #2
   160dc:	bl	4bf8 <readstat_malloc@plt>
   160e0:	cmp	r0, #0
   160e4:	str	r0, [sp, #20]
   160e8:	beq	1677c <readstat_parse_sav+0x16c0>
   160ec:	ldr	r0, [sp, #1304]	; 0x518
   160f0:	lsl	r1, r0, #2
   160f4:	ldr	r0, [sp, #20]
   160f8:	b	167dc <readstat_parse_sav+0x1720>
   160fc:	ldr	r0, [sp, #52]	; 0x34
   16100:	mov	r1, r6
   16104:	mov	r2, r8
   16108:	bl	4bc8 <sav_parse_long_variable_names_record@plt>
   1610c:	b	16120 <readstat_parse_sav+0x1064>
   16110:	ldr	r0, [sp, #52]	; 0x34
   16114:	mov	r1, r6
   16118:	mov	r2, r8
   1611c:	bl	4cac <sav_parse_very_long_string_record@plt>
   16120:	cmp	r0, #0
   16124:	beq	16720 <readstat_parse_sav+0x1664>
   16128:	b	170b4 <readstat_parse_sav+0x1ff8>
   1612c:	ldr	r0, [r8, #20]
   16130:	cmp	r0, #0
   16134:	beq	16720 <readstat_parse_sav+0x1664>
   16138:	cmp	r9, #1
   1613c:	bne	16b50 <readstat_parse_sav+0x1a94>
   16140:	ldr	r0, [sp, #52]	; 0x34
   16144:	cmp	r6, #1
   16148:	str	r0, [sp, #1308]	; 0x51c
   1614c:	add	r0, r0, r6
   16150:	str	r0, [sp, #44]	; 0x2c
   16154:	mov	r0, #0
   16158:	blt	1674c <readstat_parse_sav+0x1690>
   1615c:	ldr	r7, [sp, #52]	; 0x34
   16160:	str	r0, [sp, #20]
   16164:	mov	r0, #0
   16168:	str	r0, [sp, #40]	; 0x28
   1616c:	add	r0, sp, #272	; 0x110
   16170:	mov	r1, #0
   16174:	mov	r2, #256	; 0x100
   16178:	bl	4c70 <memset@plt>
   1617c:	ldr	r0, [sp, #44]	; 0x2c
   16180:	add	lr, sp, #1024	; 0x400
   16184:	mov	r3, r8
   16188:	add	r1, lr, #284	; 0x11c
   1618c:	sub	r2, r0, r7
   16190:	add	r0, sp, #1312	; 0x520
   16194:	bl	1738c <sav_read_pascal_string>
   16198:	cmp	r0, #0
   1619c:	str	r0, [sp, #32]
   161a0:	bne	1676c <readstat_parse_sav+0x16b0>
   161a4:	ldr	r9, [r8, #340]	; 0x154
   161a8:	cmp	r9, #0
   161ac:	beq	16208 <readstat_parse_sav+0x114c>
   161b0:	ldr	sl, [r8, #44]	; 0x2c
   161b4:	mov	r5, #0
   161b8:	ldr	r6, [sl, r5, lsl #2]
   161bc:	add	r0, sp, #1312	; 0x520
   161c0:	add	r1, r6, #196	; 0xc4
   161c4:	bl	4808 <strcmp@plt>
   161c8:	cmp	r0, #0
   161cc:	beq	161e4 <readstat_parse_sav+0x1128>
   161d0:	ldr	r0, [r6, #48]	; 0x30
   161d4:	add	r5, r0, r5
   161d8:	cmp	r5, r9
   161dc:	bcc	161b8 <readstat_parse_sav+0x10fc>
   161e0:	b	16208 <readstat_parse_sav+0x114c>
   161e4:	ldr	r3, [r8, #368]	; 0x170
   161e8:	mov	r1, #256	; 0x100
   161ec:	add	r0, r3, #1
   161f0:	str	r0, [r8, #368]	; 0x170
   161f4:	str	r3, [r6, #4]
   161f8:	add	r0, sp, #272	; 0x110
   161fc:	ldr	r2, [pc, #4076]	; 171f0 <readstat_parse_sav+0x2134>
   16200:	add	r2, pc, r2
   16204:	bl	4c4c <snprintf@plt>
   16208:	mov	r0, #5
   1620c:	str	r0, [sp, #32]
   16210:	ldrb	r0, [sp, #272]	; 0x110
   16214:	cmp	r0, #0
   16218:	beq	1676c <readstat_parse_sav+0x16b0>
   1621c:	ldr	r1, [sp, #1308]	; 0x51c
   16220:	add	r0, r1, #4
   16224:	add	r2, r1, #8
   16228:	ldr	r1, [sp, #44]	; 0x2c
   1622c:	str	r0, [sp, #1308]	; 0x51c
   16230:	cmp	r2, r1
   16234:	bhi	1676c <readstat_parse_sav+0x16b0>
   16238:	ldr	r0, [r0]
   1623c:	mov	r7, r2
   16240:	str	r0, [sp, #16]
   16244:	ldr	r0, [sp, #80]	; 0x50
   16248:	ldrb	r0, [r0]
   1624c:	tst	r0, #1
   16250:	beq	16260 <readstat_parse_sav+0x11a4>
   16254:	ldr	r0, [sp, #16]
   16258:	bl	47b4 <byteswap4@plt>
   1625c:	str	r0, [sp, #16]
   16260:	ldr	r0, [sp, #16]
   16264:	str	r7, [sp, #1308]	; 0x51c
   16268:	cmp	r0, #0
   1626c:	beq	163c8 <readstat_parse_sav+0x130c>
   16270:	ldr	r0, [sp, #44]	; 0x2c
   16274:	add	r9, r7, #4
   16278:	cmp	r9, r0
   1627c:	bhi	16964 <readstat_parse_sav+0x18a8>
   16280:	ldr	r0, [sp, #80]	; 0x50
   16284:	ldr	r5, [r7]
   16288:	ldrb	r0, [r0]
   1628c:	tst	r0, #1
   16290:	beq	162a0 <readstat_parse_sav+0x11e4>
   16294:	mov	r0, r5
   16298:	bl	47b4 <byteswap4@plt>
   1629c:	mov	r5, r0
   162a0:	mov	r0, #1
   162a4:	orr	sl, r0, r5, lsl #2
   162a8:	ldr	r0, [sp, #40]	; 0x28
   162ac:	mov	r1, sl
   162b0:	bl	4cb8 <readstat_realloc@plt>
   162b4:	cmp	r0, #0
   162b8:	str	r0, [sp, #40]	; 0x28
   162bc:	beq	1696c <readstat_parse_sav+0x18b0>
   162c0:	ldr	r0, [sp, #44]	; 0x2c
   162c4:	add	r6, r9, r5
   162c8:	cmp	r6, r0
   162cc:	bhi	1697c <readstat_parse_sav+0x18c0>
   162d0:	ldr	r0, [r8, #336]	; 0x150
   162d4:	mov	r1, sl
   162d8:	mov	r2, r9
   162dc:	mov	r3, r5
   162e0:	str	r0, [sp]
   162e4:	ldr	r0, [sp, #40]	; 0x28
   162e8:	bl	4c04 <readstat_convert@plt>
   162ec:	cmp	r0, #0
   162f0:	bne	16984 <readstat_parse_sav+0x18c8>
   162f4:	ldr	r0, [sp, #44]	; 0x2c
   162f8:	add	sl, r6, #4
   162fc:	cmp	sl, r0
   16300:	bhi	1698c <readstat_parse_sav+0x18d0>
   16304:	ldr	r0, [sp, #80]	; 0x50
   16308:	ldr	r5, [r6]
   1630c:	ldrb	r0, [r0]
   16310:	tst	r0, #1
   16314:	beq	16324 <readstat_parse_sav+0x1268>
   16318:	mov	r0, r5
   1631c:	bl	47b4 <byteswap4@plt>
   16320:	mov	r5, r0
   16324:	mov	r0, #1
   16328:	orr	r6, r0, r5, lsl #2
   1632c:	ldr	r0, [sp, #20]
   16330:	mov	r1, r6
   16334:	bl	4cb8 <readstat_realloc@plt>
   16338:	cmp	r0, #0
   1633c:	str	r0, [sp, #20]
   16340:	beq	16994 <readstat_parse_sav+0x18d8>
   16344:	ldr	r0, [sp, #44]	; 0x2c
   16348:	add	r1, sl, r5
   1634c:	cmp	r1, r0
   16350:	bhi	169a8 <readstat_parse_sav+0x18ec>
   16354:	ldr	r0, [r8, #336]	; 0x150
   16358:	mov	r7, r1
   1635c:	mov	r1, r6
   16360:	mov	r2, sl
   16364:	mov	r3, r5
   16368:	str	r0, [sp]
   1636c:	ldr	r0, [sp, #20]
   16370:	bl	4c04 <readstat_convert@plt>
   16374:	cmp	r0, #0
   16378:	bne	169b4 <readstat_parse_sav+0x18f8>
   1637c:	mov	r2, #0
   16380:	ldr	r1, [r8, #20]
   16384:	ldr	r0, [r8, #40]	; 0x28
   16388:	mov	r3, #0
   1638c:	str	r2, [sp]
   16390:	str	r2, [sp, #4]
   16394:	ldr	r2, [sp, #20]
   16398:	str	r0, [sp, #12]
   1639c:	add	r0, sp, #272	; 0x110
   163a0:	str	r2, [sp, #8]
   163a4:	ldr	r2, [sp, #40]	; 0x28
   163a8:	blx	r1
   163ac:	cmp	r0, #0
   163b0:	bne	169bc <readstat_parse_sav+0x1900>
   163b4:	ldr	r0, [sp, #16]
   163b8:	subs	r0, r0, #1
   163bc:	str	r0, [sp, #16]
   163c0:	bne	16270 <readstat_parse_sav+0x11b4>
   163c4:	str	r7, [sp, #1308]	; 0x51c
   163c8:	ldr	r0, [sp, #44]	; 0x2c
   163cc:	cmp	r7, r0
   163d0:	bcc	1616c <readstat_parse_sav+0x10b0>
   163d4:	b	1675c <readstat_parse_sav+0x16a0>
   163d8:	cmp	r9, #1
   163dc:	bne	16b50 <readstat_parse_sav+0x1a94>
   163e0:	ldr	r0, [sp, #52]	; 0x34
   163e4:	add	r1, r0, r6
   163e8:	str	r0, [sp, #272]	; 0x110
   163ec:	str	r0, [sp, #44]	; 0x2c
   163f0:	str	r1, [sp, #40]	; 0x28
   163f4:	ldr	r0, [sp, #40]	; 0x28
   163f8:	ldr	r1, [sp, #44]	; 0x2c
   163fc:	cmp	r1, r0
   16400:	bcs	167c0 <readstat_parse_sav+0x1704>
   16404:	ldr	r0, [sp, #40]	; 0x28
   16408:	ldr	r1, [sp, #44]	; 0x2c
   1640c:	mov	r3, r8
   16410:	sub	r2, r0, r1
   16414:	add	r0, sp, #1312	; 0x520
   16418:	add	r1, sp, #272	; 0x110
   1641c:	bl	1738c <sav_read_pascal_string>
   16420:	cmp	r0, #0
   16424:	str	r0, [sp, #32]
   16428:	bne	16df4 <readstat_parse_sav+0x1d38>
   1642c:	mov	r0, #5
   16430:	ldr	r1, [sp, #272]	; 0x110
   16434:	str	r0, [sp, #32]
   16438:	ldr	r0, [sp, #40]	; 0x28
   1643c:	str	r1, [sp, #20]
   16440:	cmp	r1, r0
   16444:	beq	16df4 <readstat_parse_sav+0x1d38>
   16448:	ldr	r1, [sp, #20]
   1644c:	add	r0, r1, #1
   16450:	str	r0, [sp, #272]	; 0x110
   16454:	str	r0, [sp, #44]	; 0x2c
   16458:	ldrb	r0, [r1]
   1645c:	mov	r7, r0
   16460:	sub	r0, r0, #1
   16464:	uxtb	r0, r0
   16468:	cmp	r0, #2
   1646c:	bhi	16df4 <readstat_parse_sav+0x1d38>
   16470:	ldr	r9, [r8, #340]	; 0x154
   16474:	cmp	r9, #0
   16478:	beq	164b0 <readstat_parse_sav+0x13f4>
   1647c:	ldr	r6, [r8, #44]	; 0x2c
   16480:	mov	sl, #0
   16484:	ldr	r5, [r6, sl, lsl #2]
   16488:	add	r0, sp, #1312	; 0x520
   1648c:	add	r1, r5, #196	; 0xc4
   16490:	bl	4808 <strcmp@plt>
   16494:	cmp	r0, #0
   16498:	beq	164bc <readstat_parse_sav+0x1400>
   1649c:	ldr	r0, [r5, #48]	; 0x30
   164a0:	add	sl, r0, sl
   164a4:	cmp	sl, r9
   164a8:	bcc	16484 <readstat_parse_sav+0x13c8>
   164ac:	b	16560 <readstat_parse_sav+0x14a4>
   164b0:	mov	sl, #0
   164b4:	b	16560 <readstat_parse_sav+0x14a4>
   164b8:	.word	0x0002fa54
   164bc:	ldr	r0, [sp, #20]
   164c0:	str	r7, [r5, #52]	; 0x34
   164c4:	add	r6, r0, #5
   164c8:	ldr	r0, [sp, #40]	; 0x28
   164cc:	cmp	r6, r0
   164d0:	bhi	16df4 <readstat_parse_sav+0x1d38>
   164d4:	ldr	r0, [sp, #44]	; 0x2c
   164d8:	ldr	r9, [r0]
   164dc:	ldr	r0, [sp, #80]	; 0x50
   164e0:	ldrb	r0, [r0]
   164e4:	tst	r0, #1
   164e8:	beq	164f8 <readstat_parse_sav+0x143c>
   164ec:	mov	r0, r9
   164f0:	bl	47b4 <byteswap4@plt>
   164f4:	mov	r9, r0
   164f8:	cmp	r7, #0
   164fc:	str	r6, [sp, #272]	; 0x110
   16500:	beq	1655c <readstat_parse_sav+0x14a0>
   16504:	add	r5, r5, #88	; 0x58
   16508:	ldr	r0, [sp, #40]	; 0x28
   1650c:	add	r1, r6, r9
   16510:	str	r1, [sp, #44]	; 0x2c
   16514:	cmp	r1, r0
   16518:	bhi	16de8 <readstat_parse_sav+0x1d2c>
   1651c:	ldr	r0, [r8, #336]	; 0x150
   16520:	mov	r1, #33	; 0x21
   16524:	mov	r2, r6
   16528:	mov	r3, r9
   1652c:	str	r0, [sp]
   16530:	mov	r0, r5
   16534:	bl	4c04 <readstat_convert@plt>
   16538:	cmp	r0, #0
   1653c:	bne	16dec <readstat_parse_sav+0x1d30>
   16540:	ldr	r6, [sp, #44]	; 0x2c
   16544:	add	r5, r5, #33	; 0x21
   16548:	subs	r7, r7, #1
   1654c:	bne	16508 <readstat_parse_sav+0x144c>
   16550:	ldr	r0, [sp, #44]	; 0x2c
   16554:	str	r0, [sp, #272]	; 0x110
   16558:	b	16560 <readstat_parse_sav+0x14a4>
   1655c:	str	r6, [sp, #44]	; 0x2c
   16560:	ldr	r0, [r8, #340]	; 0x154
   16564:	cmp	sl, r0
   16568:	bne	163f4 <readstat_parse_sav+0x1338>
   1656c:	b	16df4 <readstat_parse_sav+0x1d38>
   16570:	ldr	r5, [sp, #48]	; 0x30
   16574:	mov	r2, #3
   16578:	add	r9, sp, #1312	; 0x520
   1657c:	b	16af0 <readstat_parse_sav+0x1a34>
   16580:	rsb	r0, r0, #0
   16584:	mov	r1, #1
   16588:	str	r0, [sl, #52]	; 0x34
   1658c:	str	r1, [sl, #56]	; 0x38
   16590:	ldr	r1, [sl]
   16594:	ldr	r9, [r8, #36]	; 0x24
   16598:	cmp	r1, #5
   1659c:	bne	16694 <readstat_parse_sav+0x15d8>
   165a0:	ldr	r3, [r9, #12]
   165a4:	ldr	r2, [r9, #20]
   165a8:	add	r9, sl, #64	; 0x40
   165ac:	lsl	r1, r0, #3
   165b0:	mov	r0, r9
   165b4:	blx	r3
   165b8:	ldr	r1, [sl, #52]	; 0x34
   165bc:	cmp	r0, r1, lsl #3
   165c0:	bcc	16dd4 <readstat_parse_sav+0x1d18>
   165c4:	ldr	ip, [sp, #68]	; 0x44
   165c8:	cmp	r1, #1
   165cc:	mov	r7, #0
   165d0:	blt	166fc <readstat_parse_sav+0x1640>
   165d4:	mov	r5, #0
   165d8:	ldr	r0, [sp, #80]	; 0x50
   165dc:	add	r6, r9, r5, lsl #3
   165e0:	ldrb	r0, [r0]
   165e4:	tst	r0, #1
   165e8:	bne	165fc <readstat_parse_sav+0x1540>
   165ec:	mov	r1, r9
   165f0:	ldr	r0, [r1, r5, lsl #3]!
   165f4:	ldr	r1, [r1, #4]
   165f8:	b	16618 <readstat_parse_sav+0x155c>
   165fc:	vldr	d0, [r6]
   16600:	mov	r7, ip
   16604:	bl	4ec8 <byteswap_double@plt>
   16608:	vmov	r0, r1, d0
   1660c:	mov	ip, r7
   16610:	mov	r7, #0
   16614:	vstr	d0, [r6]
   16618:	ldrd	r2, [ip]
   1661c:	add	r5, r5, #1
   16620:	eor	r3, r1, r3
   16624:	eor	r2, r0, r2
   16628:	orrs	r2, r2, r3
   1662c:	movweq	r2, #0
   16630:	streq	r7, [r6]
   16634:	movteq	r2, #32760	; 0x7ff8
   16638:	streq	r2, [r6, #4]
   1663c:	ldr	r2, [sp, #76]	; 0x4c
   16640:	ldrd	r2, [r2]
   16644:	eor	r3, r1, r3
   16648:	eor	r2, r0, r2
   1664c:	orrs	r2, r2, r3
   16650:	movweq	r2, #0
   16654:	streq	r7, [r6]
   16658:	movteq	r2, #65520	; 0xfff0
   1665c:	streq	r2, [r6, #4]
   16660:	ldr	r2, [sp, #72]	; 0x48
   16664:	ldrd	r2, [r2]
   16668:	eor	r1, r1, r3
   1666c:	eor	r0, r0, r2
   16670:	orrs	r0, r0, r1
   16674:	movweq	r0, #0
   16678:	streq	r7, [r6]
   1667c:	movteq	r0, #32752	; 0x7ff0
   16680:	streq	r0, [r6, #4]
   16684:	ldr	r0, [sl, #52]	; 0x34
   16688:	cmp	r5, r0
   1668c:	blt	165d8 <readstat_parse_sav+0x151c>
   16690:	b	166fc <readstat_parse_sav+0x1640>
   16694:	cmp	r0, #1
   16698:	blt	166fc <readstat_parse_sav+0x1640>
   1669c:	add	r5, sl, #88	; 0x58
   166a0:	mov	r6, #0
   166a4:	ldr	r3, [r9, #12]
   166a8:	ldr	r2, [r9, #20]
   166ac:	add	r7, sp, #272	; 0x110
   166b0:	mov	r1, #8
   166b4:	mov	r0, r7
   166b8:	blx	r3
   166bc:	cmp	r0, #8
   166c0:	bcc	16dd4 <readstat_parse_sav+0x1d18>
   166c4:	ldr	r0, [r8, #336]	; 0x150
   166c8:	mov	r1, #33	; 0x21
   166cc:	mov	r2, r7
   166d0:	mov	r3, #8
   166d4:	str	r0, [sp]
   166d8:	mov	r0, r5
   166dc:	bl	4c04 <readstat_convert@plt>
   166e0:	cmp	r0, #0
   166e4:	bne	16dcc <readstat_parse_sav+0x1d10>
   166e8:	ldr	r0, [sl, #52]	; 0x34
   166ec:	add	r6, r6, #1
   166f0:	add	r5, r5, #33	; 0x21
   166f4:	cmp	r6, r0
   166f8:	blt	166a4 <readstat_parse_sav+0x15e8>
   166fc:	ldr	r0, [r8, #44]	; 0x2c
   16700:	ldr	r1, [r8, #340]	; 0x154
   16704:	str	sl, [r0, r1, lsl #2]
   16708:	add	r0, r1, #1
   1670c:	str	r0, [r8, #340]	; 0x154
   16710:	ldr	r0, [sp, #24]
   16714:	ldr	r1, [r0]
   16718:	add	r1, r1, #1
   1671c:	str	r1, [r0]
   16720:	ldr	r5, [sp, #48]	; 0x30
   16724:	add	r9, sp, #1312	; 0x520
   16728:	b	16af8 <readstat_parse_sav+0x1a3c>
   1672c:	mov	r7, #5
   16730:	b	16a94 <readstat_parse_sav+0x19d8>
   16734:	mov	r2, #4
   16738:	cmp	r2, #0
   1673c:	mov	r9, sl
   16740:	ldr	r5, [sp, #48]	; 0x30
   16744:	beq	16af8 <readstat_parse_sav+0x1a3c>
   16748:	b	157a0 <readstat_parse_sav+0x6e4>
   1674c:	ldr	r7, [sp, #52]	; 0x34
   16750:	str	r0, [sp, #40]	; 0x28
   16754:	mov	r0, #0
   16758:	str	r0, [sp, #20]
   1675c:	ldr	r0, [sp, #44]	; 0x2c
   16760:	subs	r0, r7, r0
   16764:	movwne	r0, #5
   16768:	str	r0, [sp, #32]
   1676c:	ldr	r0, [sp, #40]	; 0x28
   16770:	cmp	r0, #0
   16774:	bne	169c8 <readstat_parse_sav+0x190c>
   16778:	b	169d0 <readstat_parse_sav+0x1914>
   1677c:	mov	r7, #3
   16780:	b	16a94 <readstat_parse_sav+0x19d8>
   16784:	bl	479c <byteswap8@plt>
   16788:	ldr	r2, [sp, #80]	; 0x50
   1678c:	ldr	r3, [sp, #68]	; 0x44
   16790:	ldrb	r2, [r2]
   16794:	strd	r0, [r3]
   16798:	tst	r2, #1
   1679c:	bne	16928 <readstat_parse_sav+0x186c>
   167a0:	ldr	r0, [sp, #72]	; 0x48
   167a4:	str	r6, [r0]
   167a8:	str	r5, [r0, #4]
   167ac:	ldr	r0, [sp, #76]	; 0x4c
   167b0:	stm	r0, {r9, sl}
   167b4:	b	16720 <readstat_parse_sav+0x1664>
   167b8:	mov	r7, r0
   167bc:	b	16a94 <readstat_parse_sav+0x19d8>
   167c0:	beq	16720 <readstat_parse_sav+0x1664>
   167c4:	b	17208 <readstat_parse_sav+0x214c>
   167c8:	.word	0x0000fbe4
   167cc:	mov	r0, #0
   167d0:	mov	r1, #0
   167d4:	str	r0, [sp, #20]
   167d8:	mov	r0, #0
   167dc:	str	r0, [sp, #32]
   167e0:	ldr	r0, [sp, #44]	; 0x2c
   167e4:	ldr	r3, [r0, #12]
   167e8:	ldr	r2, [r0, #20]
   167ec:	ldr	r0, [sp, #20]
   167f0:	blx	r3
   167f4:	ldr	r1, [sp, #1304]	; 0x518
   167f8:	mov	r7, #2
   167fc:	cmp	r0, r1, lsl #2
   16800:	bcc	16a80 <readstat_parse_sav+0x19c4>
   16804:	mov	r7, #0
   16808:	cmp	r1, #0
   1680c:	mov	sl, #0
   16810:	beq	16890 <readstat_parse_sav+0x17d4>
   16814:	mov	sl, #0
   16818:	mov	r5, #0
   1681c:	ldr	r0, [sp, #32]
   16820:	ldr	r1, [sp, #80]	; 0x50
   16824:	ldr	r0, [r0, r5, lsl #2]
   16828:	str	r0, [sp, #272]	; 0x110
   1682c:	ldrb	r1, [r1]
   16830:	tst	r1, #1
   16834:	beq	16840 <readstat_parse_sav+0x1784>
   16838:	bl	47b4 <byteswap4@plt>
   1683c:	str	r0, [sp, #272]	; 0x110
   16840:	sub	r0, r0, #1
   16844:	mov	r3, #4
   16848:	str	r0, [sp, #272]	; 0x110
   1684c:	ldr	r1, [r8, #44]	; 0x2c
   16850:	ldr	r2, [r8, #340]	; 0x154
   16854:	ldr	r0, [pc, #2568]	; 17264 <readstat_parse_sav+0x21a8>
   16858:	ldr	r0, [pc, r0]
   1685c:	str	r0, [sp]
   16860:	add	r0, sp, #272	; 0x110
   16864:	bl	4c7c <bsearch@plt>
   16868:	cmp	r0, #0
   1686c:	beq	16880 <readstat_parse_sav+0x17c4>
   16870:	ldr	r0, [r0]
   16874:	ldr	r1, [r8, #368]	; 0x170
   16878:	str	r1, [r0, #4]
   1687c:	ldr	sl, [r0]
   16880:	ldr	r0, [sp, #1304]	; 0x518
   16884:	add	r5, r5, #1
   16888:	cmp	r5, r0
   1688c:	bcc	1681c <readstat_parse_sav+0x1760>
   16890:	ldr	r0, [sp, #1308]	; 0x51c
   16894:	cmp	r0, #0
   16898:	beq	169f8 <readstat_parse_sav+0x193c>
   1689c:	ldr	r0, [sp, #40]	; 0x28
   168a0:	mov	r5, #0
   168a4:	add	r6, r0, #48	; 0x30
   168a8:	cmp	sl, #5
   168ac:	str	sl, [r6, #8]
   168b0:	bne	168e0 <readstat_parse_sav+0x1824>
   168b4:	ldr	r0, [sp, #80]	; 0x50
   168b8:	vldr	d0, [r6, #-48]	; 0xffffffd0
   168bc:	ldrb	r0, [r0]
   168c0:	tst	r0, #1
   168c4:	beq	168cc <readstat_parse_sav+0x1810>
   168c8:	bl	4ec8 <byteswap_double@plt>
   168cc:	mov	r0, r6
   168d0:	mov	r1, r8
   168d4:	vstr	d0, [r6]
   168d8:	bl	172f4 <sav_tag_missing_double>
   168dc:	b	1690c <readstat_parse_sav+0x1850>
   168e0:	ldr	r0, [r8, #336]	; 0x150
   168e4:	sub	r9, r6, #40	; 0x28
   168e8:	sub	r2, r6, #48	; 0x30
   168ec:	mov	r1, #33	; 0x21
   168f0:	mov	r3, #8
   168f4:	str	r0, [sp]
   168f8:	mov	r0, r9
   168fc:	bl	4c04 <readstat_convert@plt>
   16900:	cmp	r0, #0
   16904:	bne	169f4 <readstat_parse_sav+0x1938>
   16908:	str	r9, [r6]
   1690c:	ldr	r0, [sp, #1308]	; 0x51c
   16910:	add	r5, r5, #1
   16914:	add	r6, r6, #72	; 0x48
   16918:	cmp	r5, r0
   1691c:	bcc	168a8 <readstat_parse_sav+0x17ec>
   16920:	mov	r7, #0
   16924:	b	169f8 <readstat_parse_sav+0x193c>
   16928:	mov	r0, r6
   1692c:	mov	r1, r5
   16930:	bl	479c <byteswap8@plt>
   16934:	ldr	r2, [sp, #80]	; 0x50
   16938:	ldr	r3, [sp, #72]	; 0x48
   1693c:	ldrb	r2, [r2]
   16940:	strd	r0, [r3]
   16944:	tst	r2, #1
   16948:	beq	167ac <readstat_parse_sav+0x16f0>
   1694c:	mov	r0, r9
   16950:	mov	r1, sl
   16954:	bl	479c <byteswap8@plt>
   16958:	mov	r9, r0
   1695c:	mov	sl, r1
   16960:	b	167ac <readstat_parse_sav+0x16f0>
   16964:	str	r7, [sp, #1308]	; 0x51c
   16968:	b	1676c <readstat_parse_sav+0x16b0>
   1696c:	mov	r0, #3
   16970:	str	r9, [sp, #1308]	; 0x51c
   16974:	str	r0, [sp, #32]
   16978:	b	169d0 <readstat_parse_sav+0x1914>
   1697c:	str	r9, [sp, #1308]	; 0x51c
   16980:	b	169ac <readstat_parse_sav+0x18f0>
   16984:	str	r9, [sp, #1308]	; 0x51c
   16988:	b	169c4 <readstat_parse_sav+0x1908>
   1698c:	str	r6, [sp, #1308]	; 0x51c
   16990:	b	169ac <readstat_parse_sav+0x18f0>
   16994:	mov	r0, #0
   16998:	str	sl, [sp, #1308]	; 0x51c
   1699c:	str	r0, [sp, #20]
   169a0:	mov	r0, #3
   169a4:	b	169c4 <readstat_parse_sav+0x1908>
   169a8:	str	sl, [sp, #1308]	; 0x51c
   169ac:	mov	r0, #5
   169b0:	b	169c4 <readstat_parse_sav+0x1908>
   169b4:	str	sl, [sp, #1308]	; 0x51c
   169b8:	b	169c4 <readstat_parse_sav+0x1908>
   169bc:	str	r7, [sp, #1308]	; 0x51c
   169c0:	mov	r0, #4
   169c4:	str	r0, [sp, #32]
   169c8:	ldr	r0, [sp, #40]	; 0x28
   169cc:	bl	48bc <free@plt>
   169d0:	ldr	r0, [sp, #20]
   169d4:	cmp	r0, #0
   169d8:	beq	169e4 <readstat_parse_sav+0x1928>
   169dc:	ldr	r0, [sp, #20]
   169e0:	bl	48bc <free@plt>
   169e4:	ldr	r2, [sp, #32]
   169e8:	add	r9, sp, #1312	; 0x520
   169ec:	cmp	r2, #0
   169f0:	b	16740 <readstat_parse_sav+0x1684>
   169f4:	mov	r7, r0
   169f8:	ldr	r0, [r8, #20]
   169fc:	cmp	r0, #0
   16a00:	beq	16a74 <readstat_parse_sav+0x19b8>
   16a04:	ldr	r9, [sp, #1308]	; 0x51c
   16a08:	ldr	r3, [r8, #368]	; 0x170
   16a0c:	ldr	r2, [pc, #2132]	; 17268 <readstat_parse_sav+0x21ac>
   16a10:	add	r0, sp, #272	; 0x110
   16a14:	mov	r1, #256	; 0x100
   16a18:	add	r2, pc, r2
   16a1c:	bl	4c4c <snprintf@plt>
   16a20:	cmp	r9, #1
   16a24:	blt	16a74 <readstat_parse_sav+0x19b8>
   16a28:	ldr	r0, [sp, #40]	; 0x28
   16a2c:	mov	r5, #1
   16a30:	add	r6, r0, #64	; 0x40
   16a34:	sub	sl, r6, #16
   16a38:	ldr	r0, [r8, #40]	; 0x28
   16a3c:	ldmda	r6, {r1, ip}
   16a40:	ldr	lr, [r8, #20]
   16a44:	ldm	sl, {r2, r3, sl}
   16a48:	str	sl, [sp]
   16a4c:	stmib	sp, {r1, ip}
   16a50:	str	r0, [sp, #12]
   16a54:	add	r0, sp, #272	; 0x110
   16a58:	blx	lr
   16a5c:	cmp	r5, r9
   16a60:	bge	16a74 <readstat_parse_sav+0x19b8>
   16a64:	add	r6, r6, #72	; 0x48
   16a68:	add	r5, r5, #1
   16a6c:	cmp	r0, #0
   16a70:	beq	16a34 <readstat_parse_sav+0x1978>
   16a74:	ldr	r0, [r8, #368]	; 0x170
   16a78:	add	r0, r0, #1
   16a7c:	str	r0, [r8, #368]	; 0x170
   16a80:	ldr	r0, [sp, #32]
   16a84:	cmp	r0, #0
   16a88:	beq	16a94 <readstat_parse_sav+0x19d8>
   16a8c:	ldr	r0, [sp, #20]
   16a90:	bl	48bc <free@plt>
   16a94:	ldr	r0, [sp, #40]	; 0x28
   16a98:	cmp	r0, #0
   16a9c:	beq	16ae4 <readstat_parse_sav+0x1a28>
   16aa0:	ldr	r1, [sp, #1308]	; 0x51c
   16aa4:	cmp	r1, #0
   16aa8:	beq	16adc <readstat_parse_sav+0x1a20>
   16aac:	ldr	r0, [sp, #40]	; 0x28
   16ab0:	mov	r6, #0
   16ab4:	add	r5, r0, #64	; 0x40
   16ab8:	ldr	r0, [r5]
   16abc:	cmp	r0, #0
   16ac0:	beq	16acc <readstat_parse_sav+0x1a10>
   16ac4:	bl	48bc <free@plt>
   16ac8:	ldr	r1, [sp, #1308]	; 0x51c
   16acc:	add	r6, r6, #1
   16ad0:	add	r5, r5, #72	; 0x48
   16ad4:	cmp	r6, r1
   16ad8:	bcc	16ab8 <readstat_parse_sav+0x19fc>
   16adc:	ldr	r0, [sp, #40]	; 0x28
   16ae0:	bl	48bc <free@plt>
   16ae4:	ldr	r5, [sp, #48]	; 0x30
   16ae8:	add	r9, sp, #1312	; 0x520
   16aec:	mov	r2, r7
   16af0:	cmp	r2, #0
   16af4:	bne	157a0 <readstat_parse_sav+0x6e4>
   16af8:	ldr	r3, [r5, #12]
   16afc:	ldr	r2, [r5, #20]
   16b00:	add	r0, sp, #1296	; 0x510
   16b04:	mov	r1, #4
   16b08:	blx	r3
   16b0c:	cmp	r0, #4
   16b10:	bcs	158fc <readstat_parse_sav+0x840>
   16b14:	b	1579c <readstat_parse_sav+0x6e0>
   16b18:	movw	r1, #999	; 0x3e7
   16b1c:	cmp	r0, r1
   16b20:	bne	16b50 <readstat_parse_sav+0x1a94>
   16b24:	ldr	r0, [r8, #36]	; 0x24
   16b28:	mov	r1, #4
   16b2c:	ldr	r3, [r0, #12]
   16b30:	ldr	r2, [r0, #20]
   16b34:	add	r0, sp, #1312	; 0x520
   16b38:	blx	r3
   16b3c:	cmp	r0, #3
   16b40:	mov	r2, #2
   16b44:	mov	sl, #0
   16b48:	movls	sl, r2
   16b4c:	b	157a4 <readstat_parse_sav+0x6e8>
   16b50:	mov	r2, #5
   16b54:	b	157a0 <readstat_parse_sav+0x6e4>
   16b58:	mvn	r1, #0
   16b5c:	mvn	r2, #0
   16b60:	str	r2, [sp, #1316]	; 0x524
   16b64:	ldr	r2, [sp, #60]	; 0x3c
   16b68:	str	r1, [sp, #1312]	; 0x520
   16b6c:	asr	r1, r0, #31
   16b70:	ldr	r7, [sp, #64]	; 0x40
   16b74:	add	r5, r8, #64	; 0x40
   16b78:	strd	r0, [r2]
   16b7c:	add	r2, r8, #424	; 0x1a8
   16b80:	ldr	r0, [r8, #324]	; 0x144
   16b84:	str	r0, [sp, #1332]	; 0x534
   16b88:	str	r0, [sp, #1328]	; 0x530
   16b8c:	ldm	r2, {r0, r1, r2}
   16b90:	asr	r3, r0, #31
   16b94:	stm	r7, {r0, r3}
   16b98:	mov	r0, #0
   16b9c:	str	r1, [sp, #1344]	; 0x540
   16ba0:	mov	r3, #64	; 0x40
   16ba4:	str	r0, [sp, #1356]	; 0x54c
   16ba8:	str	r0, [sp, #1352]	; 0x548
   16bac:	str	r2, [sp, #1348]	; 0x544
   16bb0:	ldrb	r1, [sp, #1364]	; 0x554
   16bb4:	ldr	r0, [r8, #56]	; 0x38
   16bb8:	and	r1, r1, #254	; 0xfe
   16bbc:	strb	r1, [sp, #1364]	; 0x554
   16bc0:	str	r0, [sp, #1360]	; 0x550
   16bc4:	movw	r1, #257	; 0x101
   16bc8:	ldr	r0, [r8, #336]	; 0x150
   16bcc:	str	r0, [sp]
   16bd0:	add	r0, sp, #84	; 0x54
   16bd4:	add	r2, r0, #109	; 0x6d
   16bd8:	mov	r0, r5
   16bdc:	bl	4c04 <readstat_convert@plt>
   16be0:	mov	sl, r0
   16be4:	cmp	r0, #0
   16be8:	bne	15868 <readstat_parse_sav+0x7ac>
   16bec:	str	r5, [sp, #1356]	; 0x54c
   16bf0:	add	r0, sp, #1312	; 0x520
   16bf4:	ldr	r2, [r8]
   16bf8:	ldr	r1, [r8, #40]	; 0x28
   16bfc:	blx	r2
   16c00:	mov	sl, #4
   16c04:	cmp	r0, #0
   16c08:	bne	15868 <readstat_parse_sav+0x7ac>
   16c0c:	ldr	r0, [r8, #328]	; 0x148
   16c10:	cmp	r0, #0
   16c14:	beq	16cb0 <readstat_parse_sav+0x1bf4>
   16c18:	ldr	r1, [r8, #332]	; 0x14c
   16c1c:	ldr	r2, [r8, #340]	; 0x154
   16c20:	cmp	r1, r2, lsl #1
   16c24:	addne	r3, r2, r2, lsl #1
   16c28:	cmpne	r1, r3
   16c2c:	bne	16ca8 <readstat_parse_sav+0x1bec>
   16c30:	cmp	r2, #1
   16c34:	blt	16cb0 <readstat_parse_sav+0x1bf4>
   16c38:	sdiv	r9, r1, r2
   16c3c:	mov	r7, #0
   16c40:	cmp	r9, #3
   16c44:	mov	sl, r9
   16c48:	movwne	sl, #2
   16c4c:	ldr	r1, [r8, #44]	; 0x2c
   16c50:	mul	r6, r7, sl
   16c54:	ldr	r0, [r0, r6, lsl #2]
   16c58:	ldr	r5, [r1, r7, lsl #2]
   16c5c:	bl	4d78 <spss_measure_to_readstat_measure@plt>
   16c60:	str	r0, [r5, #268]	; 0x10c
   16c64:	add	r1, r6, #1
   16c68:	cmp	r9, #3
   16c6c:	ldr	r0, [r8, #328]	; 0x148
   16c70:	bne	16c80 <readstat_parse_sav+0x1bc4>
   16c74:	ldr	r1, [r0, r1, lsl #2]
   16c78:	str	r1, [r5, #276]	; 0x114
   16c7c:	add	r1, r6, #2
   16c80:	ldr	r0, [r0, r1, lsl #2]
   16c84:	bl	4d54 <spss_alignment_to_readstat_alignment@plt>
   16c88:	str	r0, [r5, #272]	; 0x110
   16c8c:	ldr	r0, [r5, #48]	; 0x30
   16c90:	add	r7, r0, r7
   16c94:	ldr	r0, [r8, #340]	; 0x154
   16c98:	cmp	r7, r0
   16c9c:	bge	16cb0 <readstat_parse_sav+0x1bf4>
   16ca0:	ldr	r0, [r8, #328]	; 0x148
   16ca4:	b	16c4c <readstat_parse_sav+0x1b90>
   16ca8:	mov	sl, #5
   16cac:	b	15868 <readstat_parse_sav+0x7ac>
   16cb0:	ldr	r0, [r8, #8]
   16cb4:	cmp	r0, #0
   16cb8:	beq	16d78 <readstat_parse_sav+0x1cbc>
   16cbc:	ldr	r0, [r8, #340]	; 0x154
   16cc0:	cmp	r0, #1
   16cc4:	blt	16d78 <readstat_parse_sav+0x1cbc>
   16cc8:	mov	r6, #0
   16ccc:	mvn	sl, #0
   16cd0:	mov	r9, #0
   16cd4:	ldr	r0, [r8, #44]	; 0x2c
   16cd8:	ldr	r2, [r8, #336]	; 0x150
   16cdc:	mov	r1, r9
   16ce0:	ldr	r5, [r0, r6, lsl #2]
   16ce4:	mov	r0, r5
   16ce8:	bl	4c40 <spss_init_variable_for_info@plt>
   16cec:	ldr	r1, [r5, #8]
   16cf0:	ldr	r2, [r8, #52]	; 0x34
   16cf4:	add	r7, sp, #272	; 0x110
   16cf8:	str	r0, [r2, r1, lsl #2]
   16cfc:	mov	r0, r7
   16d00:	mov	r1, #256	; 0x100
   16d04:	ldr	r3, [r5, #4]
   16d08:	ldr	r2, [pc, #1372]	; 1726c <readstat_parse_sav+0x21b0>
   16d0c:	add	r2, pc, r2
   16d10:	bl	4c4c <snprintf@plt>
   16d14:	ldr	r1, [r5, #4]
   16d18:	ldr	r0, [r5, #8]
   16d1c:	ldr	r3, [r8, #40]	; 0x28
   16d20:	subs	r2, r1, sl
   16d24:	ldr	r1, [r8, #52]	; 0x34
   16d28:	movne	r2, r7
   16d2c:	ldr	r7, [r8, #8]
   16d30:	ldr	r1, [r1, r0, lsl #2]
   16d34:	blx	r7
   16d38:	cmp	r0, #2
   16d3c:	beq	16d50 <readstat_parse_sav+0x1c94>
   16d40:	cmp	r0, #1
   16d44:	beq	16dfc <readstat_parse_sav+0x1d40>
   16d48:	add	r9, r9, #1
   16d4c:	b	16d64 <readstat_parse_sav+0x1ca8>
   16d50:	ldr	r0, [r5, #8]
   16d54:	ldr	r1, [r8, #52]	; 0x34
   16d58:	ldr	r0, [r1, r0, lsl #2]
   16d5c:	mov	r1, #1
   16d60:	str	r1, [r0, #2144]	; 0x860
   16d64:	ldr	r0, [r5, #48]	; 0x30
   16d68:	add	r6, r0, r6
   16d6c:	ldr	r0, [r8, #340]	; 0x154
   16d70:	cmp	r6, r0
   16d74:	blt	16cd4 <readstat_parse_sav+0x1c18>
   16d78:	ldr	r2, [r8, #12]
   16d7c:	cmp	r2, #0
   16d80:	beq	16e34 <readstat_parse_sav+0x1d78>
   16d84:	ldr	r1, [r8, #372]	; 0x174
   16d88:	cmp	r1, #0
   16d8c:	bmi	16e34 <readstat_parse_sav+0x1d78>
   16d90:	ldr	r0, [r8, #340]	; 0x154
   16d94:	cmp	r0, #1
   16d98:	blt	16e34 <readstat_parse_sav+0x1d78>
   16d9c:	ldr	r3, [r8, #44]	; 0x2c
   16da0:	sub	r1, r1, #1
   16da4:	mov	r7, #0
   16da8:	ldr	r6, [r3, r7, lsl #2]
   16dac:	ldr	r5, [r6, #12]
   16db0:	cmp	r5, r1
   16db4:	beq	16e14 <readstat_parse_sav+0x1d58>
   16db8:	ldr	r6, [r6, #48]	; 0x30
   16dbc:	add	r7, r6, r7
   16dc0:	cmp	r7, r0
   16dc4:	blt	16da8 <readstat_parse_sav+0x1cec>
   16dc8:	b	16e34 <readstat_parse_sav+0x1d78>
   16dcc:	mov	r6, r0
   16dd0:	b	171d0 <readstat_parse_sav+0x2114>
   16dd4:	mov	r6, #2
   16dd8:	b	171d0 <readstat_parse_sav+0x2114>
   16ddc:	mov	r6, #3
   16de0:	mov	sl, #0
   16de4:	b	171d0 <readstat_parse_sav+0x2114>
   16de8:	mov	r0, #5
   16dec:	str	r0, [sp, #32]
   16df0:	str	r6, [sp, #272]	; 0x110
   16df4:	ldr	r2, [sp, #32]
   16df8:	b	157a0 <readstat_parse_sav+0x6e4>
   16dfc:	mov	sl, #4
   16e00:	b	15868 <readstat_parse_sav+0x7ac>
   16e04:	mov	r0, #0
   16e08:	str	r0, [sp, #52]	; 0x34
   16e0c:	mov	r2, #3
   16e10:	b	157a0 <readstat_parse_sav+0x6e4>
   16e14:	ldr	r0, [r6, #8]
   16e18:	ldr	r3, [r8, #52]	; 0x34
   16e1c:	ldr	r1, [r8, #40]	; 0x28
   16e20:	ldr	r0, [r3, r0, lsl #2]
   16e24:	blx	r2
   16e28:	mov	sl, #4
   16e2c:	cmp	r0, #0
   16e30:	bne	15868 <readstat_parse_sav+0x7ac>
   16e34:	ldr	r0, [r8, #16]
   16e38:	mov	sl, #0
   16e3c:	cmp	r0, #0
   16e40:	beq	15868 <readstat_parse_sav+0x7ac>
   16e44:	ldr	r0, [r8, #340]	; 0x154
   16e48:	cmp	r0, #1
   16e4c:	blt	16e80 <readstat_parse_sav+0x1dc4>
   16e50:	ldr	r2, [r8, #44]	; 0x2c
   16e54:	mov	r1, #256	; 0x100
   16e58:	mov	r3, #0
   16e5c:	ldr	r7, [r2, r3, lsl #2]
   16e60:	ldr	r6, [r7, #20]
   16e64:	ldr	r7, [r7, #48]	; 0x30
   16e68:	cmp	r6, r1
   16e6c:	add	r3, r7, r3
   16e70:	movhi	r1, r6
   16e74:	cmp	r3, r0
   16e78:	blt	16e5c <readstat_parse_sav+0x1da0>
   16e7c:	b	16e84 <readstat_parse_sav+0x1dc8>
   16e80:	mov	r1, #256	; 0x100
   16e84:	add	r0, r1, #7
   16e88:	mov	r2, #1
   16e8c:	str	r0, [r8, #380]	; 0x17c
   16e90:	orr	r5, r2, r1, lsl #2
   16e94:	bl	4bf8 <readstat_malloc@plt>
   16e98:	add	r1, r5, #7
   16e9c:	str	r1, [r8, #388]	; 0x184
   16ea0:	str	r0, [r8, #376]	; 0x178
   16ea4:	mov	r0, r1
   16ea8:	bl	4bf8 <readstat_malloc@plt>
   16eac:	str	r0, [r8, #384]	; 0x180
   16eb0:	cmp	r0, #0
   16eb4:	ldrne	r0, [r8, #376]	; 0x178
   16eb8:	cmpne	r0, #0
   16ebc:	bne	16ec8 <readstat_parse_sav+0x1e0c>
   16ec0:	mov	sl, #3
   16ec4:	b	15868 <readstat_parse_sav+0x7ac>
   16ec8:	ldr	r0, [r8, #428]	; 0x1ac
   16ecc:	cmp	r0, #2
   16ed0:	beq	170cc <readstat_parse_sav+0x2010>
   16ed4:	cmp	r0, #1
   16ed8:	bne	170e4 <readstat_parse_sav+0x2028>
   16edc:	vmov.i32	q8, #0	; 0x00000000
   16ee0:	add	r2, sp, #272	; 0x110
   16ee4:	mov	r1, #48	; 0x30
   16ee8:	ldr	r0, [r8, #344]	; 0x158
   16eec:	ldr	r6, [r8, #36]	; 0x24
   16ef0:	mov	r7, r2
   16ef4:	vst1.64	{d16-d17}, [r7], r1
   16ef8:	ldr	r1, [sp, #68]	; 0x44
   16efc:	cmp	r0, #0
   16f00:	ldrd	r2, [r1]
   16f04:	ldr	r1, [sp, #56]	; 0x38
   16f08:	str	r6, [sp, #72]	; 0x48
   16f0c:	strd	r2, [r1]
   16f10:	mov	r3, #0
   16f14:	mov	r2, #0
   16f18:	vldr	d16, [r8, #416]	; 0x1a0
   16f1c:	str	r2, [sp, #76]	; 0x4c
   16f20:	vstr	d16, [sp, #296]	; 0x128
   16f24:	str	r3, [r1, #16]
   16f28:	str	r3, [r1, #20]
   16f2c:	str	r3, [sp, #312]	; 0x138
   16f30:	ldrb	r1, [r8, #436]	; 0x1b4
   16f34:	str	r3, [r7]
   16f38:	mov	r3, r6
   16f3c:	and	r1, r1, #1
   16f40:	str	r1, [sp, #316]	; 0x13c
   16f44:	lsl	r1, r0, #3
   16f48:	str	r1, [sp, #80]	; 0x50
   16f4c:	beq	16f68 <readstat_parse_sav+0x1eac>
   16f50:	ldr	r0, [sp, #80]	; 0x50
   16f54:	bl	4bf8 <readstat_malloc@plt>
   16f58:	cmp	r0, #0
   16f5c:	str	r0, [sp, #76]	; 0x4c
   16f60:	beq	171e8 <readstat_parse_sav+0x212c>
   16f64:	ldr	r3, [r8, #36]	; 0x24
   16f68:	ldr	r7, [r3, #16]
   16f6c:	ldr	r1, [r8, #28]
   16f70:	ldr	r0, [r8, #32]
   16f74:	ldr	r2, [r8, #40]	; 0x28
   16f78:	ldr	r3, [r3, #20]
   16f7c:	blx	r7
   16f80:	mov	r7, r0
   16f84:	cmp	r0, #0
   16f88:	bne	17218 <readstat_parse_sav+0x215c>
   16f8c:	mov	r9, #0
   16f90:	ldr	r0, [sp, #72]	; 0x48
   16f94:	mov	r1, #65536	; 0x10000
   16f98:	ldr	r3, [r0, #12]
   16f9c:	ldr	r2, [r0, #20]
   16fa0:	add	r0, sp, #1312	; 0x520
   16fa4:	blx	r3
   16fa8:	mov	r5, r0
   16fac:	add	r0, r0, #1
   16fb0:	cmp	r0, #2
   16fb4:	bcc	1725c <readstat_parse_sav+0x21a0>
   16fb8:	ands	r0, r5, #7
   16fbc:	bne	1725c <readstat_parse_sav+0x21a0>
   16fc0:	mov	r0, #1
   16fc4:	mov	r1, #0
   16fc8:	str	r0, [sp, #320]	; 0x140
   16fcc:	ldr	r0, [sp, #80]	; 0x50
   16fd0:	sub	r0, r0, r9
   16fd4:	str	r0, [sp, #284]	; 0x11c
   16fd8:	ldr	r0, [sp, #76]	; 0x4c
   16fdc:	add	r0, r0, r9
   16fe0:	str	r0, [sp, #280]	; 0x118
   16fe4:	sub	r0, r5, r1
   16fe8:	str	r0, [sp, #276]	; 0x114
   16fec:	add	r0, sp, #1312	; 0x520
   16ff0:	add	r0, r0, r1
   16ff4:	str	r0, [sp, #272]	; 0x110
   16ff8:	add	r0, sp, #272	; 0x110
   16ffc:	bl	4be0 <sav_decompress_row@plt>
   17000:	ldr	r0, [sp, #320]	; 0x140
   17004:	ldr	r6, [sp, #276]	; 0x114
   17008:	cmp	r0, #2
   1700c:	bne	17034 <readstat_parse_sav+0x1f78>
   17010:	ldr	r0, [sp, #76]	; 0x4c
   17014:	ldr	r1, [sp, #80]	; 0x50
   17018:	mov	r2, r8
   1701c:	bl	17420 <sav_process_row>
   17020:	cmp	r0, #0
   17024:	bne	17214 <readstat_parse_sav+0x2158>
   17028:	ldr	r0, [sp, #320]	; 0x140
   1702c:	mov	r9, #0
   17030:	b	17040 <readstat_parse_sav+0x1f84>
   17034:	ldr	r1, [sp, #284]	; 0x11c
   17038:	ldr	r2, [sp, #80]	; 0x50
   1703c:	sub	r9, r2, r1
   17040:	mov	r7, #0
   17044:	cmp	r0, #3
   17048:	beq	17218 <readstat_parse_sav+0x215c>
   1704c:	ldr	r1, [r8, #356]	; 0x164
   17050:	cmp	r1, #1
   17054:	blt	17064 <readstat_parse_sav+0x1fa8>
   17058:	ldr	r2, [r8, #364]	; 0x16c
   1705c:	cmp	r2, r1
   17060:	beq	17218 <readstat_parse_sav+0x215c>
   17064:	sub	r1, r5, r6
   17068:	cmp	r0, #0
   1706c:	bne	16fcc <readstat_parse_sav+0x1f10>
   17070:	ldr	r3, [r8, #36]	; 0x24
   17074:	ldr	r1, [r8, #28]
   17078:	ldr	r0, [r8, #32]
   1707c:	ldr	r2, [r8, #40]	; 0x28
   17080:	ldr	r7, [r3, #16]
   17084:	ldr	r3, [r3, #20]
   17088:	blx	r7
   1708c:	mov	r7, r0
   17090:	cmp	r0, #0
   17094:	beq	16f90 <readstat_parse_sav+0x1ed4>
   17098:	b	17218 <readstat_parse_sav+0x215c>
   1709c:	mov	r6, #5
   170a0:	b	171d8 <readstat_parse_sav+0x211c>
   170a4:	mov	r6, #2
   170a8:	b	171b8 <readstat_parse_sav+0x20fc>
   170ac:	mov	r6, #5
   170b0:	b	171d0 <readstat_parse_sav+0x2114>
   170b4:	mov	r2, r0
   170b8:	b	157a0 <readstat_parse_sav+0x6e4>
   170bc:	mov	r6, #3
   170c0:	b	171b8 <readstat_parse_sav+0x20fc>
   170c4:	mov	r6, #3
   170c8:	b	171a8 <readstat_parse_sav+0x20ec>
   170cc:	ldr	r1, [pc, #412]	; 17270 <readstat_parse_sav+0x21b4>
   170d0:	mov	r0, r8
   170d4:	add	r1, pc, r1
   170d8:	bl	4e80 <zsav_read_compressed_data@plt>
   170dc:	mov	r7, r0
   170e0:	b	1722c <readstat_parse_sav+0x2170>
   170e4:	ldr	r0, [r8, #344]	; 0x158
   170e8:	ldr	r5, [r8, #36]	; 0x24
   170ec:	lsl	r6, r0, #3
   170f0:	mov	r0, r6
   170f4:	bl	4bf8 <readstat_malloc@plt>
   170f8:	mov	r9, r0
   170fc:	ldr	r0, [r8, #360]	; 0x168
   17100:	cmp	r0, #0
   17104:	beq	1712c <readstat_parse_sav+0x2070>
   17108:	ldr	r3, [r5, #8]
   1710c:	ldr	r2, [r5, #20]
   17110:	mul	r0, r0, r6
   17114:	mov	r1, #1
   17118:	blx	r3
   1711c:	cmn	r0, #1
   17120:	beq	171f4 <readstat_parse_sav+0x2138>
   17124:	mov	r0, #0
   17128:	str	r0, [r8, #360]	; 0x168
   1712c:	ldr	r0, [r8, #356]	; 0x164
   17130:	cmn	r0, #1
   17134:	beq	17144 <readstat_parse_sav+0x2088>
   17138:	ldr	r1, [r8, #364]	; 0x16c
   1713c:	cmp	r1, r0
   17140:	bge	171e0 <readstat_parse_sav+0x2124>
   17144:	ldr	r3, [r8, #36]	; 0x24
   17148:	ldr	r1, [r8, #28]
   1714c:	ldr	r0, [r8, #32]
   17150:	ldr	r2, [r8, #40]	; 0x28
   17154:	ldr	r7, [r3, #16]
   17158:	ldr	r3, [r3, #20]
   1715c:	blx	r7
   17160:	cmp	r0, #0
   17164:	bne	1719c <readstat_parse_sav+0x20e0>
   17168:	ldr	r3, [r5, #12]
   1716c:	ldr	r2, [r5, #20]
   17170:	mov	r0, r9
   17174:	mov	r1, r6
   17178:	blx	r3
   1717c:	cmp	r0, r6
   17180:	bne	171e0 <readstat_parse_sav+0x2124>
   17184:	mov	r0, r9
   17188:	mov	r1, r6
   1718c:	mov	r2, r8
   17190:	bl	17420 <sav_process_row>
   17194:	cmp	r0, #0
   17198:	beq	1712c <readstat_parse_sav+0x2070>
   1719c:	mov	r7, r0
   171a0:	b	171f8 <readstat_parse_sav+0x213c>
   171a4:	mov	r6, #2
   171a8:	mov	r0, r7
   171ac:	bl	48bc <free@plt>
   171b0:	b	171b8 <readstat_parse_sav+0x20fc>
   171b4:	mov	r6, r5
   171b8:	ldr	r0, [sl, #264]	; 0x108
   171bc:	cmp	r0, #0
   171c0:	beq	171d0 <readstat_parse_sav+0x2114>
   171c4:	bl	48bc <free@plt>
   171c8:	mov	r0, #0
   171cc:	str	r0, [sl, #264]	; 0x108
   171d0:	mov	r0, sl
   171d4:	bl	4de4 <spss_varinfo_free@plt>
   171d8:	mov	r2, r6
   171dc:	b	157a0 <readstat_parse_sav+0x6e4>
   171e0:	mov	r7, #0
   171e4:	b	171f8 <readstat_parse_sav+0x213c>
   171e8:	mov	r7, #3
   171ec:	b	1722c <readstat_parse_sav+0x2170>
   171f0:	.word	0x0000e603
   171f4:	mov	r7, #15
   171f8:	cmp	r9, #0
   171fc:	beq	1722c <readstat_parse_sav+0x2170>
   17200:	mov	r0, r9
   17204:	b	17228 <readstat_parse_sav+0x216c>
   17208:	mov	r0, #5
   1720c:	str	r0, [sp, #32]
   17210:	b	16df4 <readstat_parse_sav+0x1d38>
   17214:	mov	r7, r0
   17218:	ldr	r0, [sp, #76]	; 0x4c
   1721c:	cmp	r0, #0
   17220:	beq	1722c <readstat_parse_sav+0x2170>
   17224:	ldr	r0, [sp, #76]	; 0x4c
   17228:	bl	48bc <free@plt>
   1722c:	cmp	r7, #0
   17230:	beq	1723c <readstat_parse_sav+0x2180>
   17234:	mov	sl, r7
   17238:	b	15868 <readstat_parse_sav+0x7ac>
   1723c:	ldr	r0, [r8, #352]	; 0x160
   17240:	cmn	r0, #1
   17244:	beq	15868 <readstat_parse_sav+0x7ac>
   17248:	ldr	r0, [r8, #356]	; 0x164
   1724c:	ldr	r1, [r8, #364]	; 0x16c
   17250:	subs	sl, r1, r0
   17254:	movwne	sl, #9
   17258:	b	15868 <readstat_parse_sav+0x7ac>
   1725c:	mov	r7, #0
   17260:	b	17218 <readstat_parse_sav+0x215c>
   17264:	.word	0x0002da70
   17268:	.word	0x0000ddeb
   1726c:	.word	0x0000daf7
   17270:	.word	0x00000344

00017274 <sav_skip_document_record>:
   17274:	push	{r4, r5, fp, lr}
   17278:	add	fp, sp, #8
   1727c:	sub	sp, sp, #8
   17280:	ldr	r5, [r0, #36]	; 0x24
   17284:	mov	r4, r0
   17288:	add	r0, sp, #4
   1728c:	mov	r1, #4
   17290:	ldr	r3, [r5, #12]
   17294:	ldr	r2, [r5, #20]
   17298:	blx	r3
   1729c:	mov	r1, r0
   172a0:	mov	r0, #2
   172a4:	cmp	r1, #4
   172a8:	bcc	172ec <sav_skip_document_record+0x78>
   172ac:	ldrb	r1, [r4, #436]	; 0x1b4
   172b0:	ldr	r0, [sp, #4]
   172b4:	tst	r1, #1
   172b8:	beq	172c4 <sav_skip_document_record+0x50>
   172bc:	bl	47b4 <byteswap4@plt>
   172c0:	str	r0, [sp, #4]
   172c4:	ldr	r3, [r5, #8]
   172c8:	ldr	r2, [r5, #20]
   172cc:	add	r0, r0, r0, lsl #2
   172d0:	mov	r1, #1
   172d4:	lsl	r0, r0, #4
   172d8:	blx	r3
   172dc:	mov	r1, r0
   172e0:	mov	r0, #0
   172e4:	cmn	r1, #1
   172e8:	movweq	r0, #15
   172ec:	sub	sp, fp, #8
   172f0:	pop	{r4, r5, fp, pc}

000172f4 <sav_tag_missing_double>:
   172f4:	push	{r4, r6, r7, sl, fp, lr}
   172f8:	add	fp, sp, #16
   172fc:	vldr	d0, [r0]
   17300:	mov	r4, r0
   17304:	ldr	ip, [r1, #392]	; 0x188
   17308:	ldr	r3, [r1, #396]	; 0x18c
   1730c:	vmov	r0, r2, d0
   17310:	eor	lr, r3, r2
   17314:	eor	r3, ip, r0
   17318:	add	ip, r1, #400	; 0x190
   1731c:	orrs	r3, r3, lr
   17320:	bne	17330 <sav_tag_missing_double+0x3c>
   17324:	ldrb	r3, [r4, #13]
   17328:	orr	r3, r3, #1
   1732c:	strb	r3, [r4, #13]
   17330:	ldrd	r6, [ip]
   17334:	add	r1, r1, #408	; 0x198
   17338:	eor	r3, r7, r2
   1733c:	eor	r7, r6, r0
   17340:	orrs	r3, r7, r3
   17344:	bne	17354 <sav_tag_missing_double+0x60>
   17348:	ldrb	r3, [r4, #13]
   1734c:	orr	r3, r3, #1
   17350:	strb	r3, [r4, #13]
   17354:	ldrd	r6, [r1]
   17358:	eor	r1, r7, r2
   1735c:	eor	r0, r6, r0
   17360:	orrs	r0, r0, r1
   17364:	bne	17374 <sav_tag_missing_double+0x80>
   17368:	ldrb	r0, [r4, #13]
   1736c:	orr	r0, r0, #1
   17370:	strb	r0, [r4, #13]
   17374:	bl	4d00 <__isnan@plt>
   17378:	cmp	r0, #0
   1737c:	ldrbne	r0, [r4, #13]
   17380:	orrne	r0, r0, #1
   17384:	strbne	r0, [r4, #13]
   17388:	pop	{r4, r6, r7, sl, fp, pc}

0001738c <sav_read_pascal_string>:
   1738c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17390:	add	fp, sp, #28
   17394:	sub	sp, sp, #4
   17398:	ldr	r6, [r1]
   1739c:	mov	r4, r1
   173a0:	mov	r5, #5
   173a4:	cmp	r2, #4
   173a8:	blt	17410 <sav_read_pascal_string+0x84>
   173ac:	mov	r8, r0
   173b0:	ldrb	r0, [r3, #436]	; 0x1b4
   173b4:	ldr	r7, [r6]
   173b8:	add	sl, r6, r2
   173bc:	add	r9, r6, #4
   173c0:	tst	r0, #1
   173c4:	beq	173d4 <sav_read_pascal_string+0x48>
   173c8:	mov	r0, r7
   173cc:	bl	47b4 <byteswap4@plt>
   173d0:	mov	r7, r0
   173d4:	add	r6, r9, r7
   173d8:	cmp	r6, sl
   173dc:	bls	173e8 <sav_read_pascal_string+0x5c>
   173e0:	mov	r6, r9
   173e4:	b	17410 <sav_read_pascal_string+0x84>
   173e8:	mov	r0, #0
   173ec:	movw	r1, #257	; 0x101
   173f0:	mov	r2, r9
   173f4:	mov	r3, r7
   173f8:	str	r0, [sp]
   173fc:	mov	r0, r8
   17400:	bl	4c04 <readstat_convert@plt>
   17404:	cmp	r0, #0
   17408:	mov	r5, r0
   1740c:	movne	r6, r9
   17410:	str	r6, [r4]
   17414:	mov	r0, r5
   17418:	sub	sp, fp, #28
   1741c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017420 <sav_process_row>:
   17420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17424:	add	fp, sp, #28
   17428:	sub	sp, sp, #60	; 0x3c
   1742c:	str	r0, [sp, #36]	; 0x24
   17430:	ldr	r0, [r2, #360]	; 0x168
   17434:	mov	r4, r2
   17438:	cmp	r0, #0
   1743c:	beq	1744c <sav_process_row+0x2c>
   17440:	sub	r0, r0, #1
   17444:	str	r0, [r4, #360]	; 0x168
   17448:	b	176ec <sav_process_row+0x2cc>
   1744c:	cmp	r1, #0
   17450:	beq	176e0 <sav_process_row+0x2c0>
   17454:	add	r0, sp, #40	; 0x28
   17458:	mov	r6, #0
   1745c:	mov	sl, #0
   17460:	mov	r8, #0
   17464:	mov	ip, #0
   17468:	mov	r7, #0
   1746c:	mov	r9, #0
   17470:	mov	lr, #0
   17474:	str	r1, [sp, #12]
   17478:	add	r0, r0, #8
   1747c:	str	r0, [sp, #16]
   17480:	ldr	r0, [r4, #340]	; 0x154
   17484:	cmp	sl, r0
   17488:	cmplt	r8, r0
   1748c:	bge	176e0 <sav_process_row+0x2c0>
   17490:	ldr	r2, [r4, #44]	; 0x2c
   17494:	cmp	lr, #31
   17498:	ldr	r5, [r2, r8, lsl #2]
   1749c:	ldr	r0, [r2, sl, lsl #2]
   174a0:	str	r6, [sp, #44]	; 0x2c
   174a4:	str	r6, [sp, #40]	; 0x28
   174a8:	ldr	r3, [r5]
   174ac:	strb	r6, [sp, #52]	; 0x34
   174b0:	str	r3, [sp, #48]	; 0x30
   174b4:	ldrb	r2, [sp, #53]	; 0x35
   174b8:	and	r2, r2, #252	; 0xfc
   174bc:	strb	r2, [sp, #53]	; 0x35
   174c0:	bgt	176f8 <sav_process_row+0x2d8>
   174c4:	cmp	r3, #5
   174c8:	beq	174ec <sav_process_row+0xcc>
   174cc:	cmp	r3, #0
   174d0:	bne	176d4 <sav_process_row+0x2b4>
   174d4:	ldr	r2, [r4, #380]	; 0x17c
   174d8:	add	r3, r7, #8
   174dc:	cmp	r3, r2
   174e0:	bls	175a4 <sav_process_row+0x184>
   174e4:	mov	r3, r7
   174e8:	b	175f4 <sav_process_row+0x1d4>
   174ec:	ldr	r0, [r5, #8]
   174f0:	ldr	r2, [r4, #52]	; 0x34
   174f4:	ldr	r0, [r2, r0, lsl #2]
   174f8:	ldr	r0, [r0, #2144]	; 0x860
   174fc:	cmp	r0, #0
   17500:	bne	17594 <sav_process_row+0x174>
   17504:	ldr	r0, [sp, #36]	; 0x24
   17508:	str	ip, [sp, #32]
   1750c:	str	lr, [sp, #24]
   17510:	str	r7, [sp, #28]
   17514:	add	r0, r0, r9
   17518:	vld1.8	{d0}, [r0]
   1751c:	ldrb	r0, [r4, #436]	; 0x1b4
   17520:	tst	r0, #1
   17524:	beq	1752c <sav_process_row+0x10c>
   17528:	bl	4ec8 <byteswap_double@plt>
   1752c:	add	r0, sp, #40	; 0x28
   17530:	mov	r1, r4
   17534:	vstr	d0, [sp, #40]	; 0x28
   17538:	bl	172f4 <sav_tag_missing_double>
   1753c:	ldr	r1, [r5, #8]
   17540:	ldr	r2, [r4, #52]	; 0x34
   17544:	ldr	r6, [r4, #16]
   17548:	ldr	r0, [r4, #364]	; 0x16c
   1754c:	ldr	r3, [sp, #44]	; 0x2c
   17550:	ldr	lr, [r4, #40]	; 0x28
   17554:	ldr	ip, [r2, r1, lsl #2]
   17558:	ldr	r1, [sp, #16]
   1755c:	ldr	r2, [sp, #40]	; 0x28
   17560:	ldr	r7, [r1]
   17564:	ldr	r1, [r1, #4]
   17568:	str	r7, [sp]
   1756c:	stmib	sp, {r1, lr}
   17570:	mov	r1, ip
   17574:	blx	r6
   17578:	ldr	r1, [sp, #12]
   1757c:	ldr	lr, [sp, #24]
   17580:	ldr	ip, [sp, #32]
   17584:	ldr	r7, [sp, #28]
   17588:	cmp	r0, #0
   1758c:	mov	r6, #0
   17590:	bne	17700 <sav_process_row+0x2e0>
   17594:	ldr	r0, [r5, #48]	; 0x30
   17598:	add	sl, sl, #1
   1759c:	add	r8, r0, r8
   175a0:	b	176d4 <sav_process_row+0x2b4>
   175a4:	str	r7, [sp, #28]
   175a8:	ldr	r7, [sp, #36]	; 0x24
   175ac:	str	ip, [sp, #32]
   175b0:	ldr	r2, [r7, r9]!
   175b4:	str	r2, [sp, #24]
   175b8:	ldr	r2, [r7, #4]
   175bc:	ldr	r7, [r4, #376]	; 0x178
   175c0:	ldr	ip, [sp, #24]
   175c4:	str	r2, [sp, #20]
   175c8:	mov	r2, r1
   175cc:	mov	r1, sl
   175d0:	mov	sl, r8
   175d4:	ldr	r8, [sp, #28]
   175d8:	str	ip, [r7, r8]!
   175dc:	mov	r8, sl
   175e0:	mov	sl, r1
   175e4:	mov	r1, r2
   175e8:	ldr	r2, [sp, #20]
   175ec:	ldr	ip, [sp, #32]
   175f0:	str	r2, [r7, #4]
   175f4:	ldr	r0, [r0, #16]
   175f8:	add	lr, lr, #1
   175fc:	cmp	lr, r0
   17600:	bne	17620 <sav_process_row+0x200>
   17604:	ldr	r0, [r5, #48]	; 0x30
   17608:	add	ip, ip, #1
   1760c:	add	sl, sl, #1
   17610:	mov	lr, #0
   17614:	cmp	ip, r0
   17618:	sublt	r3, r3, #1
   1761c:	b	17624 <sav_process_row+0x204>
   17620:	ldr	r0, [r5, #48]	; 0x30
   17624:	cmp	ip, r0
   17628:	bne	176d0 <sav_process_row+0x2b0>
   1762c:	ldr	r7, [r5, #8]
   17630:	ldr	r2, [r4, #52]	; 0x34
   17634:	ldr	r2, [r2, r7, lsl #2]
   17638:	ldr	r2, [r2, #2144]	; 0x860
   1763c:	cmp	r2, #0
   17640:	bne	176c0 <sav_process_row+0x2a0>
   17644:	ldr	r7, [r4, #336]	; 0x150
   17648:	ldr	r2, [r4, #376]	; 0x178
   1764c:	ldr	r0, [r4, #384]	; 0x180
   17650:	ldr	r1, [r4, #388]	; 0x184
   17654:	str	lr, [sp, #24]
   17658:	str	r7, [sp]
   1765c:	bl	4c04 <readstat_convert@plt>
   17660:	cmp	r0, #0
   17664:	bne	176f0 <sav_process_row+0x2d0>
   17668:	ldr	r2, [r4, #384]	; 0x180
   1766c:	str	r2, [sp, #40]	; 0x28
   17670:	ldr	r1, [r5, #8]
   17674:	ldr	r3, [r4, #52]	; 0x34
   17678:	ldr	r6, [r4, #16]
   1767c:	ldr	r0, [r4, #364]	; 0x16c
   17680:	ldr	lr, [r4, #40]	; 0x28
   17684:	ldr	ip, [r3, r1, lsl #2]
   17688:	ldr	r1, [sp, #16]
   1768c:	ldr	r3, [sp, #44]	; 0x2c
   17690:	ldr	r7, [r1]
   17694:	ldr	r1, [r1, #4]
   17698:	str	r7, [sp]
   1769c:	stmib	sp, {r1, lr}
   176a0:	mov	r1, ip
   176a4:	blx	r6
   176a8:	cmp	r0, #0
   176ac:	bne	17700 <sav_process_row+0x2e0>
   176b0:	ldr	r0, [r5, #48]	; 0x30
   176b4:	ldr	r1, [sp, #12]
   176b8:	ldr	lr, [sp, #24]
   176bc:	mov	r6, #0
   176c0:	add	r8, r0, r8
   176c4:	mov	r7, #0
   176c8:	mov	ip, #0
   176cc:	b	176d4 <sav_process_row+0x2b4>
   176d0:	mov	r7, r3
   176d4:	add	r9, r9, #8
   176d8:	cmp	r9, r1
   176dc:	bcc	17480 <sav_process_row+0x60>
   176e0:	ldr	r0, [r4, #364]	; 0x16c
   176e4:	add	r0, r0, #1
   176e8:	str	r0, [r4, #364]	; 0x16c
   176ec:	mov	r0, #0
   176f0:	sub	sp, fp, #28
   176f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176f8:	mov	r0, #5
   176fc:	b	176f0 <sav_process_row+0x2d0>
   17700:	mov	r0, #4
   17704:	b	176f0 <sav_process_row+0x2d0>

00017708 <readstat_begin_writing_sav>:
   17708:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1770c:	add	fp, sp, #24
   17710:	ldr	r3, [pc, #292]	; 1783c <readstat_begin_writing_sav+0x134>
   17714:	add	r3, pc, r3
   17718:	str	r3, [r0, #276]	; 0x114
   1771c:	ldr	ip, [pc, #284]	; 17840 <readstat_begin_writing_sav+0x138>
   17720:	ldr	r3, [pc, #284]	; 17844 <readstat_begin_writing_sav+0x13c>
   17724:	add	r3, pc, r3
   17728:	add	ip, pc, ip
   1772c:	str	r3, [r0, #264]	; 0x108
   17730:	str	ip, [r0, #268]	; 0x10c
   17734:	ldr	ip, [pc, #268]	; 17848 <readstat_begin_writing_sav+0x140>
   17738:	ldr	lr, [pc, #268]	; 1784c <readstat_begin_writing_sav+0x144>
   1773c:	ldr	r8, [pc, #268]	; 17850 <readstat_begin_writing_sav+0x148>
   17740:	ldr	r4, [pc, #268]	; 17854 <readstat_begin_writing_sav+0x14c>
   17744:	ldr	r5, [pc, #268]	; 17858 <readstat_begin_writing_sav+0x150>
   17748:	ldr	r6, [pc, #268]	; 1785c <readstat_begin_writing_sav+0x154>
   1774c:	ldr	r7, [pc, #268]	; 17860 <readstat_begin_writing_sav+0x158>
   17750:	ldr	r3, [pc, #268]	; 17864 <readstat_begin_writing_sav+0x15c>
   17754:	add	r3, pc, r3
   17758:	add	ip, pc, ip
   1775c:	add	r4, pc, r4
   17760:	add	r5, pc, r5
   17764:	add	r6, pc, r6
   17768:	add	r7, pc, r7
   1776c:	add	lr, pc, lr
   17770:	add	r8, pc, r8
   17774:	str	r3, [r0, #228]	; 0xe4
   17778:	add	r3, r0, #244	; 0xf4
   1777c:	str	r7, [r0, #232]	; 0xe8
   17780:	str	r6, [r0, #236]	; 0xec
   17784:	str	r5, [r0, #240]	; 0xf0
   17788:	stm	r3, {r4, r8, lr}
   1778c:	str	ip, [r0, #256]	; 0x100
   17790:	ldr	r3, [pc, #208]	; 17868 <readstat_begin_writing_sav+0x160>
   17794:	add	r3, pc, r3
   17798:	str	r3, [r0, #292]	; 0x124
   1779c:	ldr	r3, [r0, #8]
   177a0:	cmp	r3, #0
   177a4:	beq	177bc <readstat_begin_writing_sav+0xb4>
   177a8:	cmp	r3, #3
   177ac:	bne	177d4 <readstat_begin_writing_sav+0xcc>
   177b0:	mov	r3, #2
   177b4:	str	r3, [r0, #16]
   177b8:	b	17808 <readstat_begin_writing_sav+0x100>
   177bc:	ldr	r3, [r0, #16]
   177c0:	mov	r7, #2
   177c4:	cmp	r3, #2
   177c8:	movweq	r7, #3
   177cc:	str	r7, [r0, #8]
   177d0:	b	177d8 <readstat_begin_writing_sav+0xd0>
   177d4:	ldr	r3, [r0, #16]
   177d8:	cmp	r3, #0
   177dc:	beq	1782c <readstat_begin_writing_sav+0x124>
   177e0:	cmp	r3, #2
   177e4:	beq	17808 <readstat_begin_writing_sav+0x100>
   177e8:	cmp	r3, #1
   177ec:	bne	17834 <readstat_begin_writing_sav+0x12c>
   177f0:	ldr	r3, [pc, #116]	; 1786c <readstat_begin_writing_sav+0x164>
   177f4:	add	r3, pc, r3
   177f8:	str	r3, [r0, #280]	; 0x118
   177fc:	ldr	r3, [pc, #108]	; 17870 <readstat_begin_writing_sav+0x168>
   17800:	ldr	r3, [pc, r3]
   17804:	b	17828 <readstat_begin_writing_sav+0x120>
   17808:	ldr	r3, [pc, #100]	; 17874 <readstat_begin_writing_sav+0x16c>
   1780c:	ldr	r3, [pc, r3]
   17810:	ldr	r7, [pc, #96]	; 17878 <readstat_begin_writing_sav+0x170>
   17814:	ldr	r7, [pc, r7]
   17818:	str	r7, [r0, #280]	; 0x118
   1781c:	str	r3, [r0, #284]	; 0x11c
   17820:	ldr	r3, [pc, #84]	; 1787c <readstat_begin_writing_sav+0x174>
   17824:	ldr	r3, [pc, r3]
   17828:	str	r3, [r0, #288]	; 0x120
   1782c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17830:	b	494c <readstat_begin_writing_file@plt>
   17834:	mov	r0, #6
   17838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1783c:	.word	0x00000564
   17840:	.word	0x00000538
   17844:	.word	0x00000520
   17848:	.word	0x00000454
   1784c:	.word	0x00000434
   17850:	.word	0x00000420
   17854:	.word	0x00000420
   17858:	.word	0x00000408
   1785c:	.word	0x000003f0
   17860:	.word	0x00000198
   17864:	.word	0x00000150
   17868:	.word	0x000000e4
   1786c:	.word	0x00002430
   17870:	.word	0x0002caac
   17874:	.word	0x0002cab4
   17878:	.word	0x0002caa4
   1787c:	.word	0x0002ca84

00017880 <sav_metadata_ok>:
   17880:	ldr	r1, [r0, #8]
   17884:	cmp	r1, #2
   17888:	bne	1789c <sav_metadata_ok+0x1c>
   1788c:	ldr	r0, [r0, #16]
   17890:	cmp	r0, #2
   17894:	moveq	r0, #6
   17898:	bxeq	lr
   1789c:	bic	r0, r1, #1
   178a0:	subs	r0, r0, #2
   178a4:	movwne	r0, #24
   178a8:	bx	lr

000178ac <sav_variable_width>:
   178ac:	mov	r2, r0
   178b0:	mov	r0, #8
   178b4:	cmp	r2, #0
   178b8:	bxne	lr
   178bc:	cmp	r1, #256	; 0x100
   178c0:	bcc	178f8 <sav_variable_width+0x4c>
   178c4:	movw	r2, #2081	; 0x821
   178c8:	add	r0, r1, #251	; 0xfb
   178cc:	movt	r2, #8322	; 0x2082
   178d0:	lsr	r0, r0, #2
   178d4:	umull	r0, r2, r0, r2
   178d8:	mvn	r0, #0
   178dc:	add	r0, r0, r2, lsr #3
   178e0:	sub	r2, r0, r0, lsl #6
   178e4:	add	r1, r1, r2, lsl #2
   178e8:	add	r1, r1, #7
   178ec:	bic	r1, r1, #7
   178f0:	add	r0, r1, r0, lsl #8
   178f4:	bx	lr
   178f8:	cmp	r1, #0
   178fc:	addne	r0, r1, #7
   17900:	bicne	r0, r0, #7
   17904:	bx	lr

00017908 <sav_variable_ok>:
   17908:	push	{r4, r5, fp, lr}
   1790c:	add	fp, sp, #8
   17910:	add	r5, r0, #8
   17914:	mov	r0, r5
   17918:	bl	4bd4 <strlen@plt>
   1791c:	cmp	r0, #0
   17920:	mov	r4, #0
   17924:	movweq	r4, #38	; 0x26
   17928:	cmp	r0, #64	; 0x40
   1792c:	movwhi	r4, #28
   17930:	cmp	r4, #0
   17934:	beq	17940 <sav_variable_ok+0x38>
   17938:	mov	r0, r4
   1793c:	pop	{r4, r5, fp, pc}
   17940:	ldr	r1, [pc, #480]	; 17b28 <sav_variable_ok+0x220>
   17944:	mov	r0, r5
   17948:	add	r1, pc, r1
   1794c:	bl	4808 <strcmp@plt>
   17950:	mov	r4, #27
   17954:	cmp	r0, #0
   17958:	beq	17938 <sav_variable_ok+0x30>
   1795c:	ldr	r1, [pc, #456]	; 17b2c <sav_variable_ok+0x224>
   17960:	mov	r0, r5
   17964:	add	r1, pc, r1
   17968:	bl	4808 <strcmp@plt>
   1796c:	cmp	r0, #0
   17970:	beq	17938 <sav_variable_ok+0x30>
   17974:	ldr	r1, [pc, #436]	; 17b30 <sav_variable_ok+0x228>
   17978:	mov	r0, r5
   1797c:	add	r1, pc, r1
   17980:	bl	4808 <strcmp@plt>
   17984:	cmp	r0, #0
   17988:	beq	17938 <sav_variable_ok+0x30>
   1798c:	ldr	r1, [pc, #416]	; 17b34 <sav_variable_ok+0x22c>
   17990:	mov	r0, r5
   17994:	add	r1, pc, r1
   17998:	bl	4808 <strcmp@plt>
   1799c:	cmp	r0, #0
   179a0:	beq	17938 <sav_variable_ok+0x30>
   179a4:	ldr	r1, [pc, #396]	; 17b38 <sav_variable_ok+0x230>
   179a8:	mov	r0, r5
   179ac:	add	r1, pc, r1
   179b0:	bl	4808 <strcmp@plt>
   179b4:	cmp	r0, #0
   179b8:	beq	17938 <sav_variable_ok+0x30>
   179bc:	ldr	r1, [pc, #376]	; 17b3c <sav_variable_ok+0x234>
   179c0:	mov	r0, r5
   179c4:	add	r1, pc, r1
   179c8:	bl	4808 <strcmp@plt>
   179cc:	cmp	r0, #0
   179d0:	beq	17938 <sav_variable_ok+0x30>
   179d4:	ldr	r1, [pc, #356]	; 17b40 <sav_variable_ok+0x238>
   179d8:	mov	r0, r5
   179dc:	add	r1, pc, r1
   179e0:	bl	4808 <strcmp@plt>
   179e4:	cmp	r0, #0
   179e8:	beq	17938 <sav_variable_ok+0x30>
   179ec:	ldr	r1, [pc, #336]	; 17b44 <sav_variable_ok+0x23c>
   179f0:	mov	r0, r5
   179f4:	add	r1, pc, r1
   179f8:	bl	4808 <strcmp@plt>
   179fc:	cmp	r0, #0
   17a00:	beq	17938 <sav_variable_ok+0x30>
   17a04:	ldr	r1, [pc, #316]	; 17b48 <sav_variable_ok+0x240>
   17a08:	mov	r0, r5
   17a0c:	add	r1, pc, r1
   17a10:	bl	4808 <strcmp@plt>
   17a14:	cmp	r0, #0
   17a18:	beq	17938 <sav_variable_ok+0x30>
   17a1c:	ldr	r1, [pc, #296]	; 17b4c <sav_variable_ok+0x244>
   17a20:	mov	r0, r5
   17a24:	add	r1, pc, r1
   17a28:	bl	4808 <strcmp@plt>
   17a2c:	cmp	r0, #0
   17a30:	beq	17938 <sav_variable_ok+0x30>
   17a34:	ldr	r1, [pc, #276]	; 17b50 <sav_variable_ok+0x248>
   17a38:	mov	r0, r5
   17a3c:	add	r1, pc, r1
   17a40:	bl	4808 <strcmp@plt>
   17a44:	cmp	r0, #0
   17a48:	beq	17938 <sav_variable_ok+0x30>
   17a4c:	ldr	r1, [pc, #256]	; 17b54 <sav_variable_ok+0x24c>
   17a50:	mov	r0, r5
   17a54:	add	r1, pc, r1
   17a58:	bl	4808 <strcmp@plt>
   17a5c:	cmp	r0, #0
   17a60:	beq	17938 <sav_variable_ok+0x30>
   17a64:	ldr	r1, [pc, #236]	; 17b58 <sav_variable_ok+0x250>
   17a68:	mov	r0, r5
   17a6c:	add	r1, pc, r1
   17a70:	bl	4808 <strcmp@plt>
   17a74:	cmp	r0, #0
   17a78:	beq	17938 <sav_variable_ok+0x30>
   17a7c:	mov	r0, r5
   17a80:	mov	r4, #26
   17a84:	ldrb	r1, [r0]
   17a88:	cmp	r1, #45	; 0x2d
   17a8c:	ble	17aa8 <sav_variable_ok+0x1a0>
   17a90:	cmp	r1, #46	; 0x2e
   17a94:	beq	17ab4 <sav_variable_ok+0x1ac>
   17a98:	cmp	r1, #64	; 0x40
   17a9c:	cmpne	r1, #95	; 0x5f
   17aa0:	beq	17ab4 <sav_variable_ok+0x1ac>
   17aa4:	b	17acc <sav_variable_ok+0x1c4>
   17aa8:	sub	r2, r1, #35	; 0x23
   17aac:	cmp	r2, #2
   17ab0:	bcs	17abc <sav_variable_ok+0x1b4>
   17ab4:	add	r0, r0, #1
   17ab8:	b	17a84 <sav_variable_ok+0x17c>
   17abc:	cmp	r1, #0
   17ac0:	beq	17af4 <sav_variable_ok+0x1ec>
   17ac4:	cmp	r1, #32
   17ac8:	beq	17938 <sav_variable_ok+0x30>
   17acc:	sub	r2, r1, #48	; 0x30
   17ad0:	uxtb	r2, r2
   17ad4:	cmp	r2, #10
   17ad8:	bcc	17ab4 <sav_variable_ok+0x1ac>
   17adc:	and	r1, r1, #223	; 0xdf
   17ae0:	sub	r1, r1, #65	; 0x41
   17ae4:	uxtb	r1, r1
   17ae8:	cmp	r1, #25
   17aec:	bls	17ab4 <sav_variable_ok+0x1ac>
   17af0:	b	17938 <sav_variable_ok+0x30>
   17af4:	ldrb	r0, [r5]
   17af8:	orr	r1, r0, #64	; 0x40
   17afc:	cmp	r1, #64	; 0x40
   17b00:	bne	17b0c <sav_variable_ok+0x204>
   17b04:	mov	r4, #0
   17b08:	b	17938 <sav_variable_ok+0x30>
   17b0c:	and	r0, r0, #223	; 0xdf
   17b10:	mov	r4, #25
   17b14:	sub	r0, r0, #65	; 0x41
   17b18:	uxtb	r0, r0
   17b1c:	cmp	r0, #25
   17b20:	movls	r4, #0
   17b24:	b	17938 <sav_variable_ok+0x30>
   17b28:	.word	0x0000db73
   17b2c:	.word	0x0000db5b
   17b30:	.word	0x0000db47
   17b34:	.word	0x0000db32
   17b38:	.word	0x0000db1d
   17b3c:	.word	0x0000db08
   17b40:	.word	0x0000daf3
   17b44:	.word	0x0000dade
   17b48:	.word	0x0000dac9
   17b4c:	.word	0x0000dab4
   17b50:	.word	0x0000daa0
   17b54:	.word	0x0000da8b
   17b58:	.word	0x0000da76

00017b5c <sav_write_int8>:
   17b5c:	vmov	s0, r2
   17b60:	vcvt.f64.s32	d16, s0
   17b64:	vst1.8	{d16}, [r0]
   17b68:	mov	r0, #0
   17b6c:	bx	lr

00017b70 <sav_write_int16>:
   17b70:	vmov	s0, r2
   17b74:	vcvt.f64.s32	d16, s0
   17b78:	vst1.8	{d16}, [r0]
   17b7c:	mov	r0, #0
   17b80:	bx	lr

00017b84 <sav_write_int32>:
   17b84:	vmov	s0, r2
   17b88:	vcvt.f64.s32	d16, s0
   17b8c:	vst1.8	{d16}, [r0]
   17b90:	mov	r0, #0
   17b94:	bx	lr

00017b98 <sav_write_float>:
   17b98:	vcvt.f64.f32	d16, s0
   17b9c:	vst1.8	{d16}, [r0]
   17ba0:	mov	r0, #0
   17ba4:	bx	lr

00017ba8 <sav_write_double>:
   17ba8:	vst1.8	{d0}, [r0]
   17bac:	mov	r0, #0
   17bb0:	bx	lr

00017bb4 <sav_write_string>:
   17bb4:	push	{r4, r5, r6, r7, fp, lr}
   17bb8:	add	fp, sp, #16
   17bbc:	mov	r4, r2
   17bc0:	ldr	r2, [r1, #1596]	; 0x63c
   17bc4:	mov	r7, r1
   17bc8:	mov	r1, #32
   17bcc:	mov	r5, r0
   17bd0:	bl	4c70 <memset@plt>
   17bd4:	mov	r0, #0
   17bd8:	cmp	r4, #0
   17bdc:	beq	17c48 <sav_write_string+0x94>
   17be0:	ldrb	r1, [r4]
   17be4:	cmp	r1, #0
   17be8:	beq	17c48 <sav_write_string+0x94>
   17bec:	mov	r0, r4
   17bf0:	bl	4bd4 <strlen@plt>
   17bf4:	ldr	r1, [r7, #1596]	; 0x63c
   17bf8:	mov	r6, r0
   17bfc:	mov	r0, #22
   17c00:	cmp	r6, r1
   17c04:	bhi	17c48 <sav_write_string+0x94>
   17c08:	cmp	r6, #256	; 0x100
   17c0c:	bcc	17c34 <sav_write_string+0x80>
   17c10:	mov	r0, r5
   17c14:	mov	r1, r4
   17c18:	mov	r2, #255	; 0xff
   17c1c:	bl	4910 <memcpy@plt>
   17c20:	sub	r6, r6, #255	; 0xff
   17c24:	add	r5, r5, #256	; 0x100
   17c28:	add	r4, r4, #255	; 0xff
   17c2c:	cmp	r6, #255	; 0xff
   17c30:	bhi	17c10 <sav_write_string+0x5c>
   17c34:	mov	r0, r5
   17c38:	mov	r1, r4
   17c3c:	mov	r2, r6
   17c40:	bl	4910 <memcpy@plt>
   17c44:	mov	r0, #0
   17c48:	pop	{r4, r5, r6, r7, fp, pc}

00017c4c <sav_write_missing_string>:
   17c4c:	push	{fp, lr}
   17c50:	mov	fp, sp
   17c54:	ldr	r2, [r1, #1596]	; 0x63c
   17c58:	mov	r1, #32
   17c5c:	bl	4c70 <memset@plt>
   17c60:	mov	r0, #0
   17c64:	pop	{fp, pc}

00017c68 <sav_write_missing_number>:
   17c68:	mvn	r1, #1048576	; 0x100000
   17c6c:	str	r1, [r0, #4]
   17c70:	mvn	r1, #0
   17c74:	str	r1, [r0]
   17c78:	mov	r0, #0
   17c7c:	bx	lr

00017c80 <sav_begin_data>:
   17c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c84:	add	fp, sp, #28
   17c88:	sub	sp, sp, #4
   17c8c:	vpush	{d8-d9}
   17c90:	sub	sp, sp, #424	; 0x1a8
   17c94:	mov	r7, r0
   17c98:	ldr	r0, [r0, #308]	; 0x134
   17c9c:	cmp	r0, #0
   17ca0:	beq	17eb4 <sav_begin_data+0x234>
   17ca4:	ldr	r4, [r7, #28]
   17ca8:	mov	r1, #15
   17cac:	mov	r0, r4
   17cb0:	bl	4778 <calloc@plt>
   17cb4:	str	r0, [sp, #48]	; 0x30
   17cb8:	mov	r0, r4
   17cbc:	bl	4b68 <ck_hash_table_init@plt>
   17cc0:	mov	r4, r0
   17cc4:	ldr	r0, [r7, #28]
   17cc8:	str	r7, [sp, #52]	; 0x34
   17ccc:	cmp	r0, #1
   17cd0:	blt	17dc4 <sav_begin_data+0x144>
   17cd4:	ldr	r0, [sp, #48]	; 0x30
   17cd8:	mov	r6, #0
   17cdc:	add	sl, r0, #1
   17ce0:	mov	r0, r7
   17ce4:	mov	r1, r6
   17ce8:	bl	4d48 <readstat_get_variable@plt>
   17cec:	ldr	r1, [sp, #48]	; 0x30
   17cf0:	ldr	r2, [pc, #3580]	; 18af4 <sav_begin_data+0xe74>
   17cf4:	mov	r8, r0
   17cf8:	rsb	r0, r6, r6, lsl #4
   17cfc:	add	r3, r8, #8
   17d00:	add	r5, r1, r0
   17d04:	mov	r1, #9
   17d08:	add	r2, pc, r2
   17d0c:	mov	r0, r5
   17d10:	bl	4c4c <snprintf@plt>
   17d14:	mov	r9, r5
   17d18:	ldrb	r7, [r9], #9
   17d1c:	cmp	r7, #0
   17d20:	beq	17d4c <sav_begin_data+0xcc>
   17d24:	bl	4b5c <__ctype_toupper_loc@plt>
   17d28:	mov	r1, sl
   17d2c:	ldr	r2, [r0]
   17d30:	uxtb	r3, r7
   17d34:	ldr	r2, [r2, r3, lsl #2]
   17d38:	strb	r2, [r1, #-1]
   17d3c:	ldrb	r7, [r1]
   17d40:	add	r1, r1, #1
   17d44:	cmp	r7, #0
   17d48:	bne	17d2c <sav_begin_data+0xac>
   17d4c:	mov	r0, r5
   17d50:	mov	r1, r4
   17d54:	bl	49ac <ck_str_hash_lookup@plt>
   17d58:	cmp	r0, #0
   17d5c:	beq	17d78 <sav_begin_data+0xf8>
   17d60:	ldr	r2, [pc, #3472]	; 18af8 <sav_begin_data+0xe78>
   17d64:	add	r3, r6, #1
   17d68:	mov	r0, r5
   17d6c:	mov	r1, #9
   17d70:	add	r2, pc, r2
   17d74:	bl	4c4c <snprintf@plt>
   17d78:	mov	r0, r5
   17d7c:	mov	r1, r8
   17d80:	mov	r2, r4
   17d84:	bl	4eb0 <ck_str_hash_insert@plt>
   17d88:	ldr	r0, [r8, #1600]	; 0x640
   17d8c:	ldr	r7, [sp, #52]	; 0x34
   17d90:	cmp	r0, #256	; 0x100
   17d94:	bcc	17db0 <sav_begin_data+0x130>
   17d98:	ldr	r2, [pc, #3420]	; 18afc <sav_begin_data+0xe7c>
   17d9c:	mov	r0, r9
   17da0:	mov	r1, #6
   17da4:	mov	r3, r5
   17da8:	add	r2, pc, r2
   17dac:	bl	4c4c <snprintf@plt>
   17db0:	ldr	r0, [r7, #28]
   17db4:	add	r6, r6, #1
   17db8:	add	sl, sl, #15
   17dbc:	cmp	r6, r0
   17dc0:	blt	17ce0 <sav_begin_data+0x60>
   17dc4:	mov	r0, r4
   17dc8:	bl	4c10 <ck_hash_table_free@plt>
   17dcc:	add	r0, sp, #128	; 0x80
   17dd0:	mov	r1, #0
   17dd4:	mov	r2, #176	; 0xb0
   17dd8:	mov	r9, #0
   17ddc:	bl	4c70 <memset@plt>
   17de0:	ldr	r0, [r7, #20]
   17de4:	str	r0, [fp, #-80]	; 0xffffffb0
   17de8:	sub	r0, fp, #80	; 0x50
   17dec:	bl	4b38 <localtime@plt>
   17df0:	mov	r8, r0
   17df4:	ldr	r0, [pc, #4008]	; 18da4 <sav_begin_data+0x1124>
   17df8:	mov	ip, r7
   17dfc:	add	lr, sp, #72	; 0x48
   17e00:	mov	r1, lr
   17e04:	cmp	r8, #0
   17e08:	add	r0, pc, r0
   17e0c:	ldm	r0!, {r2, r3, r4, r5, r6, r7}
   17e10:	stmia	r1!, {r2, r3, r4, r5, r6, r7}
   17e14:	ldm	r0, {r2, r3, r4, r5, r6, r7}
   17e18:	stm	r1, {r2, r3, r4, r5, r6, r7}
   17e1c:	str	r9, [fp, #-68]	; 0xffffffbc
   17e20:	str	r9, [fp, #-72]	; 0xffffffb8
   17e24:	strh	r9, [fp, #-64]	; 0xffffffc0
   17e28:	str	r9, [sp, #60]	; 0x3c
   17e2c:	str	r9, [sp, #56]	; 0x38
   17e30:	strb	r9, [sp, #64]	; 0x40
   17e34:	beq	17ebc <sav_begin_data+0x23c>
   17e38:	movw	r0, #17956	; 0x4624
   17e3c:	movt	r0, #12876	; 0x324c
   17e40:	str	r0, [sp, #128]	; 0x80
   17e44:	ldr	r0, [ip, #16]
   17e48:	cmp	r0, #2
   17e4c:	bne	17ec4 <sav_begin_data+0x244>
   17e50:	mov	r0, #32
   17e54:	add	r4, sp, #128	; 0x80
   17e58:	strb	r0, [sp, #191]	; 0xbf
   17e5c:	mov	r0, #51	; 0x33
   17e60:	strb	r0, [sp, #131]	; 0x83
   17e64:	orr	r0, r4, #4
   17e68:	ldr	r1, [pc, #3896]	; 18da8 <sav_begin_data+0x1128>
   17e6c:	add	r1, pc, r1
   17e70:	ldm	r1!, {r2, r3, r6, r7}
   17e74:	stmia	r0!, {r2, r3, r6, r7}
   17e78:	ldm	r1!, {r2, r3, r5, r6, r7}
   17e7c:	stmia	r0!, {r2, r3, r5, r6, r7}
   17e80:	ldm	r1!, {r2, r3, r5, r6, r7}
   17e84:	stmia	r0!, {r2, r3, r5, r6, r7}
   17e88:	ldrh	r2, [r1]
   17e8c:	ldrb	r1, [r1, #2]
   17e90:	strb	r1, [r0, #2]
   17e94:	mov	r1, #2
   17e98:	strh	r2, [r0]
   17e9c:	str	r1, [sp, #192]	; 0xc0
   17ea0:	ldr	r0, [ip, #76]	; 0x4c
   17ea4:	lsr	r0, r0, #3
   17ea8:	str	r0, [sp, #196]	; 0xc4
   17eac:	str	r1, [sp, #200]	; 0xc8
   17eb0:	b	17f2c <sav_begin_data+0x2ac>
   17eb4:	mov	r6, #14
   17eb8:	b	1808c <sav_begin_data+0x40c>
   17ebc:	mov	r6, #39	; 0x27
   17ec0:	b	1807c <sav_begin_data+0x3fc>
   17ec4:	mov	r1, #32
   17ec8:	cmp	r0, #1
   17ecc:	strb	r1, [sp, #191]	; 0xbf
   17ed0:	add	r1, sp, #128	; 0x80
   17ed4:	ldr	r2, [pc, #4064]	; 18ebc <sav_begin_data+0x123c>
   17ed8:	mov	r9, r1
   17edc:	orr	r1, r1, #4
   17ee0:	add	r2, pc, r2
   17ee4:	ldm	r2!, {r3, r5, r6, r7}
   17ee8:	stmia	r1!, {r3, r5, r6, r7}
   17eec:	ldm	r2!, {r3, r4, r5, r6, r7}
   17ef0:	stmia	r1!, {r3, r4, r5, r6, r7}
   17ef4:	ldm	r2!, {r3, r4, r5, r6, r7}
   17ef8:	stmia	r1!, {r3, r4, r5, r6, r7}
   17efc:	ldrh	r3, [r2]
   17f00:	ldrb	r2, [r2, #2]
   17f04:	mov	r4, r9
   17f08:	strb	r2, [r1, #2]
   17f0c:	strh	r3, [r1]
   17f10:	mov	r1, #2
   17f14:	str	r1, [sp, #192]	; 0xc0
   17f18:	ldr	r1, [ip, #76]	; 0x4c
   17f1c:	lsr	r1, r1, #3
   17f20:	str	r1, [sp, #196]	; 0xc4
   17f24:	mov	r1, #1
   17f28:	streq	r1, [sp, #200]	; 0xc8
   17f2c:	ldr	r1, [ip, #224]	; 0xe0
   17f30:	mov	r0, #0
   17f34:	mov	r2, #0
   17f38:	cmp	r1, #0
   17f3c:	beq	17f54 <sav_begin_data+0x2d4>
   17f40:	ldr	r1, [r1, #1592]	; 0x638
   17f44:	asr	r2, r1, #31
   17f48:	add	r1, r1, r2, lsr #29
   17f4c:	mov	r2, #1
   17f50:	add	r2, r2, r1, asr #3
   17f54:	str	r2, [sp, #204]	; 0xcc
   17f58:	movw	r2, #0
   17f5c:	movw	r5, #34079	; 0x851f
   17f60:	mov	r6, #100	; 0x64
   17f64:	ldr	r1, [ip, #80]	; 0x50
   17f68:	movt	r2, #16473	; 0x4059
   17f6c:	movt	r5, #20971	; 0x51eb
   17f70:	str	r0, [sp, #212]	; 0xd4
   17f74:	str	r2, [sp, #216]	; 0xd8
   17f78:	add	r2, r8, #12
   17f7c:	str	r1, [sp, #208]	; 0xd0
   17f80:	ldm	r2, {r0, r1, r2}
   17f84:	umull	r3, r7, r2, r5
   17f88:	add	r1, lr, r1, lsl #2
   17f8c:	lsr	r3, r7, #5
   17f90:	mls	r2, r3, r6, r2
   17f94:	stm	sp, {r1, r2}
   17f98:	umull	r1, r2, r0, r5
   17f9c:	lsr	r1, r2, #5
   17fa0:	ldr	r2, [pc, #3864]	; 18ec0 <sav_begin_data+0x1240>
   17fa4:	mls	r3, r1, r6, r0
   17fa8:	sub	r0, fp, #72	; 0x48
   17fac:	mov	r1, #10
   17fb0:	add	r2, pc, r2
   17fb4:	bl	4c4c <snprintf@plt>
   17fb8:	vldr	d16, [fp, #-72]	; 0xffffffb8
   17fbc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   17fc0:	strb	r0, [sp, #228]	; 0xe4
   17fc4:	vstr	d16, [sp, #220]	; 0xdc
   17fc8:	ldm	r8, {r0, r1, r2}
   17fcc:	umull	r3, r7, r0, r5
   17fd0:	lsr	r3, r7, #5
   17fd4:	mls	r0, r3, r6, r0
   17fd8:	umull	r3, r7, r1, r5
   17fdc:	str	r0, [sp, #4]
   17fe0:	lsr	r3, r7, #5
   17fe4:	ldr	r7, [sp, #52]	; 0x34
   17fe8:	mls	r1, r3, r6, r1
   17fec:	str	r1, [sp]
   17ff0:	umull	r0, r1, r2, r5
   17ff4:	lsr	r0, r1, #5
   17ff8:	mov	r1, #9
   17ffc:	mls	r3, r0, r6, r2
   18000:	ldr	r2, [pc, #4064]	; 18fe8 <sav_begin_data+0x1368>
   18004:	add	r0, sp, #56	; 0x38
   18008:	add	r2, pc, r2
   1800c:	bl	4c4c <snprintf@plt>
   18010:	ldr	r0, [sp, #56]	; 0x38
   18014:	ldr	r1, [sp, #60]	; 0x3c
   18018:	add	r4, r4, #109	; 0x6d
   1801c:	mov	r2, #64	; 0x40
   18020:	mov	r5, #64	; 0x40
   18024:	str	r1, [sp, #233]	; 0xe9
   18028:	str	r0, [sp, #229]	; 0xe5
   1802c:	mov	r0, r4
   18030:	mov	r1, #32
   18034:	bl	4c70 <memset@plt>
   18038:	add	r6, r7, #88	; 0x58
   1803c:	mov	r0, r6
   18040:	bl	4bd4 <strlen@plt>
   18044:	ldrb	r1, [r7, #88]	; 0x58
   18048:	cmp	r1, #0
   1804c:	beq	18068 <sav_begin_data+0x3e8>
   18050:	cmp	r0, #64	; 0x40
   18054:	mov	r1, r6
   18058:	movcc	r5, r0
   1805c:	mov	r0, r4
   18060:	mov	r2, r5
   18064:	bl	4910 <memcpy@plt>
   18068:	add	r1, sp, #128	; 0x80
   1806c:	mov	r0, r7
   18070:	mov	r2, #176	; 0xb0
   18074:	bl	4e20 <readstat_write_bytes@plt>
   18078:	mov	r6, r0
   1807c:	cmp	r6, #0
   18080:	beq	180a0 <sav_begin_data+0x420>
   18084:	ldr	r0, [sp, #48]	; 0x30
   18088:	bl	48bc <free@plt>
   1808c:	mov	r0, r6
   18090:	sub	sp, fp, #48	; 0x30
   18094:	vpop	{d8-d9}
   18098:	add	sp, sp, #4
   1809c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180a0:	ldr	r8, [sp, #52]	; 0x34
   180a4:	ldr	r0, [r8, #28]
   180a8:	cmp	r0, #1
   180ac:	blt	189f8 <sav_begin_data+0xd78>
   180b0:	add	r0, sp, #128	; 0x80
   180b4:	vmov.i32	q4, #0	; 0x00000000
   180b8:	mov	r5, #0
   180bc:	add	r1, r0, #20
   180c0:	add	r0, r0, #8
   180c4:	str	r1, [sp, #24]
   180c8:	sub	r1, fp, #72	; 0x48
   180cc:	str	r0, [sp, #36]	; 0x24
   180d0:	add	r0, sp, #72	; 0x48
   180d4:	add	r1, r1, #8
   180d8:	add	r0, r0, #20
   180dc:	str	r1, [sp, #40]	; 0x28
   180e0:	str	r0, [sp, #20]
   180e4:	mov	r0, r8
   180e8:	mov	r1, r5
   180ec:	bl	4d48 <readstat_get_variable@plt>
   180f0:	mov	r9, r0
   180f4:	mov	r0, #2
   180f8:	str	r5, [sp, #28]
   180fc:	ldr	r1, [sp, #48]	; 0x30
   18100:	str	r0, [sp, #124]	; 0x7c
   18104:	rsb	r0, r5, r5, lsl #4
   18108:	add	r5, sp, #56	; 0x38
   1810c:	ldr	r2, [pc, #3800]	; 18fec <sav_begin_data+0x136c>
   18110:	add	r3, r1, r0
   18114:	mov	r0, r5
   18118:	mov	r1, #9
   1811c:	str	r3, [sp, #32]
   18120:	add	r2, pc, r2
   18124:	bl	4c4c <snprintf@plt>
   18128:	mov	r0, r5
   1812c:	bl	4bd4 <strlen@plt>
   18130:	mov	r5, r0
   18134:	mov	r0, r8
   18138:	add	r1, sp, #124	; 0x7c
   1813c:	mov	r2, #4
   18140:	bl	4e20 <readstat_write_bytes@plt>
   18144:	mov	r6, r0
   18148:	cmp	r0, #0
   1814c:	str	r9, [sp, #44]	; 0x2c
   18150:	bne	183f4 <sav_begin_data+0x774>
   18154:	add	r0, sp, #72	; 0x48
   18158:	mov	r1, #12
   1815c:	vst1.64	{d8-d9}, [r0], r1
   18160:	vst1.32	{d8-d9}, [r0]
   18164:	ldr	r0, [r9]
   18168:	cmp	r0, #0
   1816c:	beq	18244 <sav_begin_data+0x5c4>
   18170:	mov	r7, r9
   18174:	add	r4, sp, #128	; 0x80
   18178:	ldrb	r1, [r7, #564]!	; 0x234
   1817c:	cmp	r1, #0
   18180:	movwne	r1, #1
   18184:	cmp	r0, #5
   18188:	str	r1, [sp, #76]	; 0x4c
   1818c:	bne	1826c <sav_begin_data+0x5ec>
   18190:	mov	r0, r9
   18194:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18198:	mov	sl, r0
   1819c:	cmp	r0, #1
   181a0:	blt	18344 <sav_begin_data+0x6c4>
   181a4:	str	r7, [sp, #16]
   181a8:	mov	r6, #0
   181ac:	mov	r4, #0
   181b0:	mov	r7, sl
   181b4:	str	r5, [sp, #12]
   181b8:	add	r0, sp, #128	; 0x80
   181bc:	mov	r1, r9
   181c0:	mov	r2, r6
   181c4:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   181c8:	sub	r0, fp, #72	; 0x48
   181cc:	mov	r1, r9
   181d0:	mov	r2, r6
   181d4:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   181d8:	ldr	r0, [sp, #36]	; 0x24
   181dc:	ldr	r1, [sp, #132]	; 0x84
   181e0:	ldrd	r2, [r0]
   181e4:	ldr	r0, [sp, #128]	; 0x80
   181e8:	bl	4c88 <spss_64bit_value@plt>
   181ec:	mov	r5, r0
   181f0:	ldr	r0, [sp, #40]	; 0x28
   181f4:	mov	r8, r1
   181f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   181fc:	ldrd	r2, [r0]
   18200:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18204:	bl	4c88 <spss_64bit_value@plt>
   18208:	eor	r1, r8, r1
   1820c:	eor	r0, r5, r0
   18210:	mov	r2, #1
   18214:	add	r6, r6, #1
   18218:	orrs	r0, r0, r1
   1821c:	movwne	r0, #1
   18220:	movne	r4, r2
   18224:	cmp	sl, r6
   18228:	add	r7, r7, r0
   1822c:	bne	181b8 <sav_begin_data+0x538>
   18230:	ldr	r9, [sp, #44]	; 0x2c
   18234:	cmp	r4, #0
   18238:	rsbne	sl, r7, #0
   1823c:	moveq	sl, r7
   18240:	b	1833c <sav_begin_data+0x6bc>
   18244:	ldr	r0, [r9, #1600]	; 0x640
   18248:	mov	r7, r9
   1824c:	add	r4, sp, #128	; 0x80
   18250:	cmp	r0, #255	; 0xff
   18254:	movcs	r0, #255	; 0xff
   18258:	str	r0, [sp, #72]	; 0x48
   1825c:	ldrb	r0, [r7, #564]!	; 0x234
   18260:	cmp	r0, #0
   18264:	movwne	r0, #1
   18268:	str	r0, [sp, #76]	; 0x4c
   1826c:	mov	r0, r9
   18270:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   18274:	mov	sl, #0
   18278:	cmp	r0, #8
   1827c:	bhi	1835c <sav_begin_data+0x6dc>
   18280:	mov	r0, r9
   18284:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18288:	mov	sl, r0
   1828c:	cmp	r0, #1
   18290:	blt	18344 <sav_begin_data+0x6c4>
   18294:	str	r7, [sp, #16]
   18298:	mov	r7, #0
   1829c:	mov	r8, sl
   182a0:	mov	r6, #0
   182a4:	str	r5, [sp, #12]
   182a8:	mov	r0, r4
   182ac:	mov	r1, r9
   182b0:	mov	r2, r6
   182b4:	mov	r5, r9
   182b8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   182bc:	sub	r0, fp, #72	; 0x48
   182c0:	mov	r1, r9
   182c4:	mov	r2, r6
   182c8:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   182cc:	ldr	r0, [sp, #36]	; 0x24
   182d0:	ldr	r1, [sp, #132]	; 0x84
   182d4:	ldrd	r2, [r0]
   182d8:	ldr	r0, [sp, #128]	; 0x80
   182dc:	bl	4988 <readstat_string_value@plt>
   182e0:	mov	r5, r0
   182e4:	ldr	r0, [sp, #40]	; 0x28
   182e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   182ec:	ldrd	r2, [r0]
   182f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   182f4:	bl	4988 <readstat_string_value@plt>
   182f8:	cmp	r5, #0
   182fc:	movne	r1, r0
   18300:	cmpne	r0, #0
   18304:	beq	18324 <sav_begin_data+0x6a4>
   18308:	mov	r0, r5
   1830c:	bl	4808 <strcmp@plt>
   18310:	cmp	r0, #0
   18314:	mov	r1, #1
   18318:	movwne	r0, #1
   1831c:	movne	r7, r1
   18320:	add	r8, r8, r0
   18324:	add	r6, r6, #1
   18328:	cmp	sl, r6
   1832c:	bne	182a8 <sav_begin_data+0x628>
   18330:	cmp	r7, #0
   18334:	rsbne	sl, r8, #0
   18338:	moveq	sl, r8
   1833c:	ldr	r7, [sp, #16]
   18340:	ldr	r5, [sp, #12]
   18344:	cmp	sl, #0
   18348:	mov	r0, sl
   1834c:	mov	r6, #31
   18350:	rsbmi	r0, sl, #0
   18354:	cmp	r0, #3
   18358:	bgt	183f4 <sav_begin_data+0x774>
   1835c:	mov	r0, r9
   18360:	add	r1, sp, #128	; 0x80
   18364:	str	sl, [sp, #80]	; 0x50
   18368:	bl	4acc <spss_format_for_variable@plt>
   1836c:	cmp	r0, #0
   18370:	beq	1837c <sav_begin_data+0x6fc>
   18374:	mov	r6, r0
   18378:	b	183f4 <sav_begin_data+0x774>
   1837c:	add	r2, sp, #128	; 0x80
   18380:	add	r4, sp, #72	; 0x48
   18384:	ldm	r2, {r0, r1, r2}
   18388:	lsl	r3, r1, #8
   1838c:	cmp	r1, #255	; 0xff
   18390:	movw	r1, #8224	; 0x2020
   18394:	uxth	r3, r3
   18398:	movwgt	r3, #65280	; 0xff00
   1839c:	movt	r1, #8224	; 0x2020
   183a0:	orr	r0, r2, r0, lsl #16
   183a4:	orr	r0, r0, r3
   183a8:	str	r0, [sp, #84]	; 0x54
   183ac:	str	r0, [sp, #88]	; 0x58
   183b0:	ldr	r0, [sp, #20]
   183b4:	str	r1, [r0]
   183b8:	str	r1, [r0, #4]
   183bc:	sub	r0, r5, #1
   183c0:	cmp	r0, #7
   183c4:	bhi	183d8 <sav_begin_data+0x758>
   183c8:	ldr	r0, [sp, #20]
   183cc:	add	r1, sp, #56	; 0x38
   183d0:	mov	r2, r5
   183d4:	bl	4910 <memcpy@plt>
   183d8:	ldr	r0, [sp, #52]	; 0x34
   183dc:	mov	r1, r4
   183e0:	mov	r2, #28
   183e4:	bl	4e20 <readstat_write_bytes@plt>
   183e8:	mov	r6, r0
   183ec:	cmp	r0, #0
   183f0:	beq	185e4 <sav_begin_data+0x964>
   183f4:	cmp	r6, #0
   183f8:	bne	18084 <sav_begin_data+0x404>
   183fc:	ldr	r0, [sp, #44]	; 0x2c
   18400:	ldr	r0, [r0]
   18404:	cmp	r0, #0
   18408:	bne	18424 <sav_begin_data+0x7a4>
   1840c:	ldr	r0, [sp, #44]	; 0x2c
   18410:	ldr	r0, [r0, #1600]	; 0x640
   18414:	cmp	r0, #256	; 0x100
   18418:	addcs	r0, r0, #251	; 0xfb
   1841c:	cmpcs	r0, #504	; 0x1f8
   18420:	bcs	18440 <sav_begin_data+0x7c0>
   18424:	ldr	r8, [sp, #52]	; 0x34
   18428:	ldr	r5, [sp, #28]
   1842c:	ldr	r0, [r8, #28]
   18430:	add	r5, r5, #1
   18434:	cmp	r5, r0
   18438:	blt	180e4 <sav_begin_data+0x464>
   1843c:	b	189f8 <sav_begin_data+0xd78>
   18440:	movw	r1, #2081	; 0x821
   18444:	lsr	r0, r0, #2
   18448:	mov	sl, #1
   1844c:	movt	r1, #8322	; 0x2082
   18450:	umull	r0, r1, r0, r1
   18454:	lsr	r0, r1, #3
   18458:	ldr	r1, [sp, #32]
   1845c:	sub	r7, r0, #1
   18460:	sub	r0, r7, r7, lsl #6
   18464:	lsl	r0, r0, #2
   18468:	add	r9, r1, #9
   1846c:	str	r0, [sp, #32]
   18470:	movw	r0, #36409	; 0x8e39
   18474:	mov	r8, #255	; 0xff
   18478:	cmp	r7, #1
   1847c:	movt	r0, #14563	; 0x38e3
   18480:	umull	r0, r1, sl, r0
   18484:	lsr	r0, r1, #3
   18488:	add	r0, r0, r0, lsl #3
   1848c:	sub	r5, sl, r0, lsl #2
   18490:	bne	184a4 <sav_begin_data+0x824>
   18494:	ldr	r0, [sp, #44]	; 0x2c
   18498:	ldr	r1, [sp, #32]
   1849c:	ldr	r0, [r0, #1600]	; 0x640
   184a0:	add	r8, r0, r1
   184a4:	mov	r0, #2
   184a8:	mov	r1, #12
   184ac:	add	r4, sp, #56	; 0x38
   184b0:	mov	r3, r9
   184b4:	str	r0, [fp, #-72]	; 0xffffffb8
   184b8:	add	r0, sp, #128	; 0x80
   184bc:	vst1.64	{d8-d9}, [r0], r1
   184c0:	mov	r1, #9
   184c4:	vst1.32	{d8-d9}, [r0]
   184c8:	mov	r0, r4
   184cc:	ldr	r2, [pc, #3452]	; 19250 <sav_begin_data+0x15d0>
   184d0:	add	r2, pc, r2
   184d4:	bl	4c4c <snprintf@plt>
   184d8:	cmp	r5, #10
   184dc:	mov	r0, #55	; 0x37
   184e0:	movwcc	r0, #48	; 0x30
   184e4:	add	r6, r0, r5
   184e8:	mov	r0, r4
   184ec:	bl	4bd4 <strlen@plt>
   184f0:	mov	r5, r0
   184f4:	strb	r6, [r4, r0]
   184f8:	ldr	r0, [sp, #52]	; 0x34
   184fc:	sub	r1, fp, #72	; 0x48
   18500:	mov	r2, #4
   18504:	bl	4e20 <readstat_write_bytes@plt>
   18508:	mov	r6, r0
   1850c:	cmp	r0, #0
   18510:	bne	185a8 <sav_begin_data+0x928>
   18514:	ldr	r0, [sp, #44]	; 0x2c
   18518:	add	r1, sp, #72	; 0x48
   1851c:	str	r8, [sp, #128]	; 0x80
   18520:	bl	4acc <spss_format_for_variable@plt>
   18524:	cmp	r0, #0
   18528:	str	r8, [sp, #76]	; 0x4c
   1852c:	beq	18538 <sav_begin_data+0x8b8>
   18530:	mov	r6, r0
   18534:	b	185a8 <sav_begin_data+0x928>
   18538:	ldr	r1, [sp, #72]	; 0x48
   1853c:	lsl	r0, r8, #8
   18540:	cmp	r8, #255	; 0xff
   18544:	ldr	r2, [sp, #80]	; 0x50
   18548:	uxth	r0, r0
   1854c:	movwgt	r0, #65280	; 0xff00
   18550:	cmp	r5, #7
   18554:	orr	r0, r0, r1, lsl #16
   18558:	movw	r1, #8224	; 0x2020
   1855c:	movt	r1, #8224	; 0x2020
   18560:	orr	r0, r0, r2
   18564:	str	r0, [sp, #140]	; 0x8c
   18568:	str	r0, [sp, #144]	; 0x90
   1856c:	ldr	r0, [sp, #24]
   18570:	str	r1, [r0]
   18574:	str	r1, [r0, #4]
   18578:	bhi	1858c <sav_begin_data+0x90c>
   1857c:	ldr	r0, [sp, #24]
   18580:	add	r2, r5, #1
   18584:	add	r1, sp, #56	; 0x38
   18588:	bl	4910 <memcpy@plt>
   1858c:	ldr	r0, [sp, #52]	; 0x34
   18590:	add	r1, sp, #128	; 0x80
   18594:	mov	r2, #28
   18598:	bl	4e20 <readstat_write_bytes@plt>
   1859c:	mov	r6, r0
   185a0:	cmp	r0, #0
   185a4:	beq	185c0 <sav_begin_data+0x940>
   185a8:	cmp	r6, #0
   185ac:	bne	18084 <sav_begin_data+0x404>
   185b0:	add	sl, sl, #1
   185b4:	subs	r7, r7, #1
   185b8:	bne	18470 <sav_begin_data+0x7f0>
   185bc:	b	18424 <sav_begin_data+0x7a4>
   185c0:	add	r0, r8, #7
   185c4:	lsr	r1, r0, #3
   185c8:	cmp	r1, #32
   185cc:	mov	r1, #32
   185d0:	lsrcc	r1, r0, #3
   185d4:	ldr	r0, [sp, #52]	; 0x34
   185d8:	sub	r1, r1, #1
   185dc:	bl	19c5c <sav_emit_blank_variable_records>
   185e0:	b	18530 <sav_begin_data+0x8b0>
   185e4:	mov	r0, r7
   185e8:	bl	4bd4 <strlen@plt>
   185ec:	cmp	r0, #0
   185f0:	beq	1865c <sav_begin_data+0x9dc>
   185f4:	ldr	r4, [sp, #52]	; 0x34
   185f8:	cmp	r0, #256	; 0x100
   185fc:	sub	r1, fp, #72	; 0x48
   18600:	mov	r2, #4
   18604:	movcs	r0, #256	; 0x100
   18608:	str	r0, [fp, #-72]	; 0xffffffb8
   1860c:	mov	r0, r4
   18610:	bl	4e20 <readstat_write_bytes@plt>
   18614:	cmp	r0, #0
   18618:	bne	18374 <sav_begin_data+0x6f4>
   1861c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18620:	add	r5, sp, #128	; 0x80
   18624:	mov	r1, r7
   18628:	add	r0, r0, #3
   1862c:	bic	r2, r0, #3
   18630:	mov	r0, r5
   18634:	bl	4c94 <strncpy@plt>
   18638:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1863c:	mov	r1, r5
   18640:	add	r0, r0, #3
   18644:	bic	r2, r0, #3
   18648:	mov	r0, r4
   1864c:	bl	4e20 <readstat_write_bytes@plt>
   18650:	mov	r6, r0
   18654:	cmp	r0, #0
   18658:	bne	183f4 <sav_begin_data+0x774>
   1865c:	ldr	r0, [r9]
   18660:	cmp	r0, #5
   18664:	bne	187bc <sav_begin_data+0xb3c>
   18668:	mov	r0, r9
   1866c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18670:	cmp	r0, #1
   18674:	str	r0, [sp, #16]
   18678:	blt	18920 <sav_begin_data+0xca0>
   1867c:	ldr	r8, [sp, #52]	; 0x34
   18680:	ldr	r9, [sp, #40]	; 0x28
   18684:	ldr	r7, [sp, #36]	; 0x24
   18688:	mov	r4, #0
   1868c:	sub	sl, fp, #72	; 0x48
   18690:	ldr	r5, [sp, #44]	; 0x2c
   18694:	add	r0, sp, #128	; 0x80
   18698:	mov	r2, r4
   1869c:	mov	r1, r5
   186a0:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   186a4:	mov	r0, sl
   186a8:	mov	r1, r5
   186ac:	mov	r2, r4
   186b0:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   186b4:	ldrd	r2, [r7]
   186b8:	ldr	r0, [sp, #128]	; 0x80
   186bc:	ldr	r1, [sp, #132]	; 0x84
   186c0:	bl	4c88 <spss_64bit_value@plt>
   186c4:	mov	r5, r0
   186c8:	mov	r6, r1
   186cc:	ldrd	r2, [r9]
   186d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   186d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   186d8:	bl	4c88 <spss_64bit_value@plt>
   186dc:	eor	r1, r6, r1
   186e0:	eor	r0, r5, r0
   186e4:	orrs	r0, r0, r1
   186e8:	bne	18944 <sav_begin_data+0xcc4>
   186ec:	ldr	r0, [sp, #16]
   186f0:	add	r4, r4, #1
   186f4:	cmp	r0, r4
   186f8:	bne	18690 <sav_begin_data+0xa10>
   186fc:	mov	r8, #0
   18700:	ldr	r9, [sp, #44]	; 0x2c
   18704:	mov	r4, #0
   18708:	add	r0, sp, #128	; 0x80
   1870c:	mov	r1, r9
   18710:	mov	r2, r4
   18714:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18718:	sub	r0, fp, #72	; 0x48
   1871c:	mov	r1, r9
   18720:	mov	r2, r4
   18724:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18728:	ldr	r7, [sp, #36]	; 0x24
   1872c:	ldr	r0, [sp, #128]	; 0x80
   18730:	ldr	r1, [sp, #132]	; 0x84
   18734:	ldrd	r2, [r7]
   18738:	bl	4c88 <spss_64bit_value@plt>
   1873c:	mov	r5, r0
   18740:	ldr	r0, [sp, #40]	; 0x28
   18744:	mov	r6, r1
   18748:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1874c:	ldrd	r2, [r0]
   18750:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18754:	bl	4c88 <spss_64bit_value@plt>
   18758:	eor	r1, r6, r1
   1875c:	eor	r0, r5, r0
   18760:	orrs	r0, r0, r1
   18764:	bne	187a8 <sav_begin_data+0xb28>
   18768:	ldrd	r2, [r7]
   1876c:	ldr	r0, [sp, #128]	; 0x80
   18770:	ldr	r1, [sp, #132]	; 0x84
   18774:	bl	4c88 <spss_64bit_value@plt>
   18778:	str	r0, [fp, #-80]	; 0xffffffb0
   1877c:	ldr	r0, [sp, #52]	; 0x34
   18780:	str	r1, [fp, #-76]	; 0xffffffb4
   18784:	sub	r1, fp, #80	; 0x50
   18788:	mov	r2, #8
   1878c:	bl	4e20 <readstat_write_bytes@plt>
   18790:	mov	r6, r0
   18794:	cmp	r0, #0
   18798:	bne	18918 <sav_begin_data+0xc98>
   1879c:	add	r8, r8, #1
   187a0:	cmp	r8, #3
   187a4:	beq	18918 <sav_begin_data+0xc98>
   187a8:	ldr	r0, [sp, #16]
   187ac:	add	r4, r4, #1
   187b0:	cmp	r0, r4
   187b4:	bne	18708 <sav_begin_data+0xa88>
   187b8:	b	18920 <sav_begin_data+0xca0>
   187bc:	mov	r0, r9
   187c0:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   187c4:	cmp	r0, #8
   187c8:	bhi	18920 <sav_begin_data+0xca0>
   187cc:	mov	r0, r9
   187d0:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   187d4:	cmp	r0, #1
   187d8:	blt	18920 <sav_begin_data+0xca0>
   187dc:	ldr	r9, [sp, #40]	; 0x28
   187e0:	ldr	r7, [sp, #36]	; 0x24
   187e4:	mov	r8, r0
   187e8:	mov	r4, #0
   187ec:	sub	sl, fp, #72	; 0x48
   187f0:	ldr	r5, [sp, #44]	; 0x2c
   187f4:	add	r0, sp, #128	; 0x80
   187f8:	mov	r2, r4
   187fc:	mov	r1, r5
   18800:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18804:	mov	r0, sl
   18808:	mov	r1, r5
   1880c:	mov	r2, r4
   18810:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18814:	ldrd	r2, [r7]
   18818:	ldr	r0, [sp, #128]	; 0x80
   1881c:	ldr	r1, [sp, #132]	; 0x84
   18820:	bl	4988 <readstat_string_value@plt>
   18824:	mov	r6, r0
   18828:	ldrd	r2, [r9]
   1882c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18830:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18834:	bl	4988 <readstat_string_value@plt>
   18838:	cmp	r6, #0
   1883c:	movne	r5, r0
   18840:	cmpne	r0, #0
   18844:	beq	1885c <sav_begin_data+0xbdc>
   18848:	mov	r0, r6
   1884c:	mov	r1, r5
   18850:	bl	4808 <strcmp@plt>
   18854:	cmp	r0, #0
   18858:	bne	189b4 <sav_begin_data+0xd34>
   1885c:	add	r4, r4, #1
   18860:	cmp	r8, r4
   18864:	bne	187f0 <sav_begin_data+0xb70>
   18868:	mov	r7, #0
   1886c:	ldr	r9, [sp, #44]	; 0x2c
   18870:	mov	r4, #0
   18874:	add	r0, sp, #128	; 0x80
   18878:	mov	r1, r9
   1887c:	mov	r2, r4
   18880:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18884:	sub	r0, fp, #72	; 0x48
   18888:	mov	r1, r9
   1888c:	mov	r2, r4
   18890:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18894:	ldr	r0, [sp, #36]	; 0x24
   18898:	ldr	r1, [sp, #132]	; 0x84
   1889c:	ldrd	r2, [r0]
   188a0:	ldr	r0, [sp, #128]	; 0x80
   188a4:	bl	4988 <readstat_string_value@plt>
   188a8:	mov	r5, r0
   188ac:	ldr	r0, [sp, #40]	; 0x28
   188b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   188b4:	ldrd	r2, [r0]
   188b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   188bc:	bl	4988 <readstat_string_value@plt>
   188c0:	cmp	r5, #0
   188c4:	movne	r1, r0
   188c8:	cmpne	r0, #0
   188cc:	bne	188e0 <sav_begin_data+0xc60>
   188d0:	add	r4, r4, #1
   188d4:	cmp	r8, r4
   188d8:	bne	18874 <sav_begin_data+0xbf4>
   188dc:	b	18920 <sav_begin_data+0xca0>
   188e0:	mov	r0, r5
   188e4:	bl	4808 <strcmp@plt>
   188e8:	cmp	r0, #0
   188ec:	bne	188d0 <sav_begin_data+0xc50>
   188f0:	ldr	r0, [sp, #52]	; 0x34
   188f4:	mov	r1, r5
   188f8:	mov	r2, #8
   188fc:	bl	4f10 <readstat_write_space_padded_string@plt>
   18900:	mov	r6, r0
   18904:	cmp	r0, #0
   18908:	bne	18918 <sav_begin_data+0xc98>
   1890c:	add	r7, r7, #1
   18910:	cmp	r7, #3
   18914:	bne	188d0 <sav_begin_data+0xc50>
   18918:	cmp	r6, #0
   1891c:	bne	183f4 <sav_begin_data+0x774>
   18920:	ldr	r0, [r9, #1596]	; 0x63c
   18924:	lsr	r1, r0, #3
   18928:	cmp	r1, #32
   1892c:	mov	r1, #32
   18930:	lsrcc	r1, r0, #3
   18934:	ldr	r0, [sp, #52]	; 0x34
   18938:	sub	r1, r1, #1
   1893c:	bl	19c5c <sav_emit_blank_variable_records>
   18940:	b	18374 <sav_begin_data+0x6f4>
   18944:	ldrd	r2, [r7]
   18948:	ldr	r0, [sp, #128]	; 0x80
   1894c:	ldr	r1, [sp, #132]	; 0x84
   18950:	bl	4c88 <spss_64bit_value@plt>
   18954:	str	r1, [fp, #-76]	; 0xffffffb4
   18958:	str	r0, [fp, #-80]	; 0xffffffb0
   1895c:	mov	r0, r8
   18960:	sub	r1, fp, #80	; 0x50
   18964:	mov	r2, #8
   18968:	bl	4e20 <readstat_write_bytes@plt>
   1896c:	mov	r6, r0
   18970:	cmp	r0, #0
   18974:	bne	183f4 <sav_begin_data+0x774>
   18978:	ldrd	r2, [r9]
   1897c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18980:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18984:	bl	4c88 <spss_64bit_value@plt>
   18988:	str	r1, [fp, #-84]	; 0xffffffac
   1898c:	str	r0, [fp, #-88]	; 0xffffffa8
   18990:	mov	r0, r8
   18994:	sub	r1, fp, #88	; 0x58
   18998:	mov	r2, #8
   1899c:	bl	4e20 <readstat_write_bytes@plt>
   189a0:	mov	r6, r0
   189a4:	cmp	r0, #0
   189a8:	bne	183f4 <sav_begin_data+0x774>
   189ac:	mov	r8, #2
   189b0:	b	18700 <sav_begin_data+0xa80>
   189b4:	ldr	r4, [sp, #52]	; 0x34
   189b8:	mov	r1, r6
   189bc:	mov	r2, #8
   189c0:	mov	r0, r4
   189c4:	bl	4f10 <readstat_write_space_padded_string@plt>
   189c8:	mov	r6, r0
   189cc:	cmp	r0, #0
   189d0:	bne	183f4 <sav_begin_data+0x774>
   189d4:	mov	r0, r4
   189d8:	mov	r1, r5
   189dc:	mov	r2, #8
   189e0:	bl	4f10 <readstat_write_space_padded_string@plt>
   189e4:	mov	r6, r0
   189e8:	cmp	r0, #0
   189ec:	bne	183f4 <sav_begin_data+0x774>
   189f0:	mov	r7, #2
   189f4:	b	1886c <sav_begin_data+0xbec>
   189f8:	ldr	r0, [r8, #40]	; 0x28
   189fc:	cmp	r0, #1
   18a00:	blt	18c78 <sav_begin_data+0xff8>
   18a04:	mov	r5, #0
   18a08:	mov	r6, #3
   18a0c:	mov	r7, #0
   18a10:	mov	r0, r8
   18a14:	mov	r1, r7
   18a18:	bl	4df0 <readstat_get_label_set@plt>
   18a1c:	mov	sl, r0
   18a20:	bl	19d00 <readstat_label_set_number_short_variables>
   18a24:	cmp	r0, #1
   18a28:	blt	18c68 <sav_begin_data+0xfe8>
   18a2c:	ldr	r0, [sl, #264]	; 0x108
   18a30:	str	r7, [sp, #44]	; 0x2c
   18a34:	ldr	r7, [sl]
   18a38:	str	r5, [sp, #56]	; 0x38
   18a3c:	cmp	r0, #0
   18a40:	str	r0, [fp, #-72]	; 0xffffffb8
   18a44:	beq	18c60 <sav_begin_data+0xfe0>
   18a48:	ldr	r4, [sp, #52]	; 0x34
   18a4c:	add	r1, sp, #56	; 0x38
   18a50:	mov	r2, #4
   18a54:	str	r6, [sp, #56]	; 0x38
   18a58:	mov	r0, r4
   18a5c:	bl	4e20 <readstat_write_bytes@plt>
   18a60:	cmp	r0, #0
   18a64:	bne	18d9c <sav_begin_data+0x111c>
   18a68:	mov	r0, r4
   18a6c:	sub	r1, fp, #72	; 0x48
   18a70:	mov	r2, #4
   18a74:	bl	4e20 <readstat_write_bytes@plt>
   18a78:	cmp	r0, #0
   18a7c:	bne	18d9c <sav_begin_data+0x111c>
   18a80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18a84:	cmp	r0, #1
   18a88:	blt	18ba8 <sav_begin_data+0xf28>
   18a8c:	mov	r4, #0
   18a90:	mov	r0, sl
   18a94:	mov	r1, r4
   18a98:	bl	4e8c <readstat_get_value_label@plt>
   18a9c:	mov	r6, r0
   18aa0:	cmp	r7, #5
   18aa4:	beq	18aec <sav_begin_data+0xe6c>
   18aa8:	cmp	r7, #3
   18aac:	beq	18b00 <sav_begin_data+0xe80>
   18ab0:	cmp	r7, #0
   18ab4:	bne	18b0c <sav_begin_data+0xe8c>
   18ab8:	ldrd	r2, [r6, #16]
   18abc:	movw	r0, #8224	; 0x2020
   18ac0:	movt	r0, #8224	; 0x2020
   18ac4:	str	r0, [sp, #76]	; 0x4c
   18ac8:	str	r0, [sp, #72]	; 0x48
   18acc:	mov	r0, #8
   18ad0:	cmp	r3, #8
   18ad4:	mov	r1, r2
   18ad8:	movcs	r3, r0
   18adc:	add	r0, sp, #72	; 0x48
   18ae0:	mov	r2, r3
   18ae4:	bl	4910 <memcpy@plt>
   18ae8:	b	18b0c <sav_begin_data+0xe8c>
   18aec:	vldr	d16, [r6]
   18af0:	b	18b08 <sav_begin_data+0xe88>
   18af4:	.word	0x0000d7df
   18af8:	.word	0x0000d77c
   18afc:	.word	0x0000d74a
   18b00:	vldr	s0, [r6, #8]
   18b04:	vcvt.f64.s32	d16, s0
   18b08:	vstr	d16, [sp, #72]	; 0x48
   18b0c:	ldr	r0, [sp, #52]	; 0x34
   18b10:	add	r1, sp, #72	; 0x48
   18b14:	mov	r2, #8
   18b18:	bl	4e20 <readstat_write_bytes@plt>
   18b1c:	ldr	r1, [r6, #28]
   18b20:	ldr	r5, [sp, #52]	; 0x34
   18b24:	ldr	r8, [r6, #24]
   18b28:	mov	r0, #120	; 0x78
   18b2c:	mov	r2, #1
   18b30:	strb	r0, [fp, #-80]	; 0xffffffb0
   18b34:	cmp	r1, #119	; 0x77
   18b38:	mov	r0, r5
   18b3c:	strbls	r1, [fp, #-80]	; 0xffffffb0
   18b40:	sub	r1, fp, #80	; 0x50
   18b44:	bl	4e20 <readstat_write_bytes@plt>
   18b48:	cmp	r0, #0
   18b4c:	bne	18d9c <sav_begin_data+0x111c>
   18b50:	add	r9, sp, #128	; 0x80
   18b54:	mov	r1, #32
   18b58:	mov	r2, #128	; 0x80
   18b5c:	mov	r0, r9
   18b60:	bl	4c70 <memset@plt>
   18b64:	ldrb	r6, [fp, #-80]	; 0xffffffb0
   18b68:	mov	r0, r9
   18b6c:	mov	r1, r8
   18b70:	mov	r2, r6
   18b74:	bl	4910 <memcpy@plt>
   18b78:	add	r0, r6, #8
   18b7c:	mov	r1, r9
   18b80:	bic	r0, r0, #7
   18b84:	sub	r2, r0, #1
   18b88:	mov	r0, r5
   18b8c:	bl	4e20 <readstat_write_bytes@plt>
   18b90:	cmp	r0, #0
   18b94:	bne	18d9c <sav_begin_data+0x111c>
   18b98:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18b9c:	add	r4, r4, #1
   18ba0:	cmp	r4, r0
   18ba4:	blt	18a90 <sav_begin_data+0xe10>
   18ba8:	mov	r0, #4
   18bac:	str	r0, [sp, #56]	; 0x38
   18bb0:	mov	r0, sl
   18bb4:	bl	19d00 <readstat_label_set_number_short_variables>
   18bb8:	ldr	r7, [sp, #52]	; 0x34
   18bbc:	str	r0, [sp, #128]	; 0x80
   18bc0:	add	r1, sp, #56	; 0x38
   18bc4:	mov	r2, #4
   18bc8:	mov	r0, r7
   18bcc:	bl	4e20 <readstat_write_bytes@plt>
   18bd0:	cmp	r0, #0
   18bd4:	bne	18d9c <sav_begin_data+0x111c>
   18bd8:	mov	r0, r7
   18bdc:	add	r1, sp, #128	; 0x80
   18be0:	mov	r2, #4
   18be4:	bl	4e20 <readstat_write_bytes@plt>
   18be8:	cmp	r0, #0
   18bec:	bne	18d9c <sav_begin_data+0x111c>
   18bf0:	ldr	r0, [sl, #276]	; 0x114
   18bf4:	cmp	r0, #1
   18bf8:	blt	18c58 <sav_begin_data+0xfd8>
   18bfc:	mov	r4, #0
   18c00:	mov	r0, sl
   18c04:	mov	r1, r4
   18c08:	bl	4e14 <readstat_get_label_set_variable@plt>
   18c0c:	ldr	r1, [r0, #1596]	; 0x63c
   18c10:	cmp	r1, #8
   18c14:	bhi	18c48 <sav_begin_data+0xfc8>
   18c18:	ldr	r0, [r0, #1592]	; 0x638
   18c1c:	mov	r2, #4
   18c20:	asr	r1, r0, #31
   18c24:	add	r0, r0, r1, lsr #29
   18c28:	mov	r1, #1
   18c2c:	add	r0, r1, r0, asr #3
   18c30:	add	r1, sp, #72	; 0x48
   18c34:	str	r0, [sp, #72]	; 0x48
   18c38:	mov	r0, r7
   18c3c:	bl	4e20 <readstat_write_bytes@plt>
   18c40:	cmp	r0, #0
   18c44:	bne	18d9c <sav_begin_data+0x111c>
   18c48:	ldr	r0, [sl, #276]	; 0x114
   18c4c:	add	r4, r4, #1
   18c50:	cmp	r4, r0
   18c54:	blt	18c00 <sav_begin_data+0xf80>
   18c58:	mov	r5, #0
   18c5c:	mov	r6, #3
   18c60:	ldr	r8, [sp, #52]	; 0x34
   18c64:	ldr	r7, [sp, #44]	; 0x2c
   18c68:	ldr	r0, [r8, #40]	; 0x28
   18c6c:	add	r7, r7, #1
   18c70:	cmp	r7, r0
   18c74:	blt	18a10 <sav_begin_data+0xd90>
   18c78:	mov	r0, #6
   18c7c:	add	r9, sp, #72	; 0x48
   18c80:	str	r0, [sp, #128]	; 0x80
   18c84:	ldr	r0, [r8, #52]	; 0x34
   18c88:	cmp	r0, #0
   18c8c:	str	r0, [sp, #72]	; 0x48
   18c90:	beq	18d34 <sav_begin_data+0x10b4>
   18c94:	add	r1, sp, #128	; 0x80
   18c98:	mov	r0, r8
   18c9c:	mov	r2, #4
   18ca0:	bl	4e20 <readstat_write_bytes@plt>
   18ca4:	mov	r6, r0
   18ca8:	cmp	r0, #0
   18cac:	bne	18084 <sav_begin_data+0x404>
   18cb0:	add	r1, sp, #72	; 0x48
   18cb4:	mov	r0, r8
   18cb8:	mov	r2, #4
   18cbc:	bl	4e20 <readstat_write_bytes@plt>
   18cc0:	mov	r6, r0
   18cc4:	cmp	r0, #0
   18cc8:	bne	18084 <sav_begin_data+0x404>
   18ccc:	ldr	r0, [r8, #52]	; 0x34
   18cd0:	cmp	r0, #1
   18cd4:	blt	18d34 <sav_begin_data+0x10b4>
   18cd8:	mov	r7, #0
   18cdc:	ldr	r0, [r8, #48]	; 0x30
   18ce0:	ldr	r5, [r0, r7, lsl #2]
   18ce4:	mov	r0, r5
   18ce8:	bl	4bd4 <strlen@plt>
   18cec:	cmp	r0, #80	; 0x50
   18cf0:	bhi	18eb4 <sav_begin_data+0x1234>
   18cf4:	mov	r4, r0
   18cf8:	mov	r0, r8
   18cfc:	mov	r1, r5
   18d00:	mov	r2, r4
   18d04:	bl	4e20 <readstat_write_bytes@plt>
   18d08:	cmp	r0, #0
   18d0c:	bne	18d9c <sav_begin_data+0x111c>
   18d10:	rsb	r1, r4, #80	; 0x50
   18d14:	mov	r0, r8
   18d18:	bl	47e4 <readstat_write_spaces@plt>
   18d1c:	cmp	r0, #0
   18d20:	bne	18d9c <sav_begin_data+0x111c>
   18d24:	ldr	r0, [r8, #52]	; 0x34
   18d28:	add	r7, r7, #1
   18d2c:	cmp	r7, r0
   18d30:	blt	18cdc <sav_begin_data+0x105c>
   18d34:	ldr	r0, [pc, #3764]	; 19bf0 <sav_begin_data+0x1f70>
   18d38:	add	r0, pc, r0
   18d3c:	vld1.64	{d16-d17}, [r0]
   18d40:	mov	r0, #1
   18d44:	vst1.64	{d16-d17}, [r9]
   18d48:	add	r1, pc, #672	; 0x2a0
   18d4c:	str	r0, [sp, #148]	; 0x94
   18d50:	str	r0, [sp, #144]	; 0x90
   18d54:	mov	r0, #28
   18d58:	vld1.64	{d16-d17}, [r1]
   18d5c:	add	r1, sp, #128	; 0x80
   18d60:	mov	r4, r1
   18d64:	vst1.32	{d16-d17}, [r4], r0
   18d68:	bl	48b0 <machine_is_little_endian@plt>
   18d6c:	movw	r1, #65001	; 0xfde9
   18d70:	cmp	r0, #0
   18d74:	mov	r0, r8
   18d78:	mov	r2, #16
   18d7c:	str	r1, [r4]
   18d80:	mov	r1, #2
   18d84:	movweq	r1, #1
   18d88:	str	r1, [sp, #152]	; 0x98
   18d8c:	mov	r1, r9
   18d90:	bl	4e20 <readstat_write_bytes@plt>
   18d94:	cmp	r0, #0
   18d98:	beq	18dac <sav_begin_data+0x112c>
   18d9c:	mov	r6, r0
   18da0:	b	18084 <sav_begin_data+0x404>
   18da4:	.word	0x0000d708
   18da8:	.word	0x0000d6d4
   18dac:	add	r4, sp, #128	; 0x80
   18db0:	mov	r0, r8
   18db4:	mov	r2, #32
   18db8:	mov	r1, r4
   18dbc:	bl	4e20 <readstat_write_bytes@plt>
   18dc0:	mov	r6, r0
   18dc4:	cmp	r0, #0
   18dc8:	bne	18084 <sav_begin_data+0x404>
   18dcc:	ldr	r0, [pc, #3616]	; 19bf4 <sav_begin_data+0x1f74>
   18dd0:	ldr	r5, [sp, #52]	; 0x34
   18dd4:	add	r1, sp, #72	; 0x48
   18dd8:	mov	r2, #16
   18ddc:	add	r0, pc, r0
   18de0:	vld1.64	{d16-d17}, [r0]
   18de4:	mov	r0, r5
   18de8:	vst1.64	{d16-d17}, [r1]
   18dec:	bl	4e20 <readstat_write_bytes@plt>
   18df0:	cmp	r0, #0
   18df4:	bne	18d9c <sav_begin_data+0x111c>
   18df8:	add	r0, pc, #512	; 0x200
   18dfc:	mvn	r1, #1048576	; 0x100000
   18e00:	mvn	r2, #1
   18e04:	vld1.64	{d16-d17}, [r0]
   18e08:	mov	r0, r4
   18e0c:	vst1.64	{d16-d17}, [r0]!
   18e10:	str	r2, [r0]
   18e14:	str	r1, [r0, #4]
   18e18:	mov	r0, r5
   18e1c:	mov	r1, r4
   18e20:	mov	r2, #24
   18e24:	bl	4e20 <readstat_write_bytes@plt>
   18e28:	mov	r6, r0
   18e2c:	cmp	r0, #0
   18e30:	bne	18084 <sav_begin_data+0x404>
   18e34:	ldr	r0, [pc, #3516]	; 19bf8 <sav_begin_data+0x1f78>
   18e38:	ldr	r7, [sp, #52]	; 0x34
   18e3c:	add	r0, pc, r0
   18e40:	vld1.64	{d16-d17}, [r0]
   18e44:	vst1.64	{d16-d17}, [r4]
   18e48:	ldr	r0, [r7, #28]
   18e4c:	cmp	r0, #1
   18e50:	blt	18ec4 <sav_begin_data+0x1244>
   18e54:	movw	r5, #2081	; 0x821
   18e58:	mov	r4, #0
   18e5c:	mov	r6, #0
   18e60:	movt	r5, #8322	; 0x2082
   18e64:	mov	r0, r7
   18e68:	mov	r1, r4
   18e6c:	bl	4d48 <readstat_get_variable@plt>
   18e70:	ldr	r2, [r0]
   18e74:	mov	r1, #1
   18e78:	cmp	r2, #0
   18e7c:	bne	18e98 <sav_begin_data+0x1218>
   18e80:	ldr	r0, [r0, #1600]	; 0x640
   18e84:	cmp	r0, #256	; 0x100
   18e88:	addcs	r0, r0, #251	; 0xfb
   18e8c:	lsrcs	r0, r0, #2
   18e90:	umullcs	r0, r1, r0, r5
   18e94:	lsrcs	r1, r1, #3
   18e98:	ldr	r0, [r7, #28]
   18e9c:	add	r4, r4, #1
   18ea0:	add	r6, r1, r6
   18ea4:	cmp	r4, r0
   18ea8:	blt	18e64 <sav_begin_data+0x11e4>
   18eac:	add	r0, r6, r6, lsl #1
   18eb0:	b	18ec8 <sav_begin_data+0x1248>
   18eb4:	mov	r6, #32
   18eb8:	b	18084 <sav_begin_data+0x404>
   18ebc:	.word	0x0000d660
   18ec0:	.word	0x0000d547
   18ec4:	mov	r0, #0
   18ec8:	add	r4, sp, #128	; 0x80
   18ecc:	str	r0, [sp, #140]	; 0x8c
   18ed0:	mov	r0, r7
   18ed4:	mov	r2, #16
   18ed8:	mov	r1, r4
   18edc:	bl	4e20 <readstat_write_bytes@plt>
   18ee0:	cmp	r0, #0
   18ee4:	bne	18d9c <sav_begin_data+0x111c>
   18ee8:	ldr	r2, [r7, #28]
   18eec:	cmp	r2, #0
   18ef0:	ble	19254 <sav_begin_data+0x15d4>
   18ef4:	ldr	r0, [sp, #52]	; 0x34
   18ef8:	ldr	r9, [sp, #52]	; 0x34
   18efc:	mov	r6, #0
   18f00:	add	r4, sp, #72	; 0x48
   18f04:	sub	sl, fp, #72	; 0x48
   18f08:	mov	r7, #0
   18f0c:	mov	r1, r7
   18f10:	bl	4d48 <readstat_get_variable@plt>
   18f14:	mov	r5, r0
   18f18:	bl	4cf4 <readstat_variable_get_measure@plt>
   18f1c:	bl	4a54 <spss_measure_from_readstat_measure@plt>
   18f20:	str	r0, [sp, #72]	; 0x48
   18f24:	mov	r0, r5
   18f28:	bl	4bec <readstat_variable_get_display_width@plt>
   18f2c:	cmp	r0, #1
   18f30:	movwlt	r0, #8
   18f34:	str	r0, [fp, #-72]	; 0xffffffb8
   18f38:	mov	r0, r5
   18f3c:	bl	4dfc <readstat_variable_get_alignment@plt>
   18f40:	bl	485c <spss_alignment_from_readstat_alignment@plt>
   18f44:	str	r0, [sp, #56]	; 0x38
   18f48:	mov	r8, #1
   18f4c:	ldr	r0, [r5]
   18f50:	cmp	r0, #0
   18f54:	bne	18f88 <sav_begin_data+0x1308>
   18f58:	ldr	r0, [r5, #1600]	; 0x640
   18f5c:	cmp	r0, #256	; 0x100
   18f60:	bcc	18f88 <sav_begin_data+0x1308>
   18f64:	movw	r2, #2081	; 0x821
   18f68:	add	r1, r0, #251	; 0xfb
   18f6c:	mov	r5, #1
   18f70:	movt	r2, #8322	; 0x2082
   18f74:	lsr	r0, r1, #2
   18f78:	cmp	r1, #252	; 0xfc
   18f7c:	umull	r2, r0, r0, r2
   18f80:	bcc	19014 <sav_begin_data+0x1394>
   18f84:	lsr	r8, r0, #3
   18f88:	mov	r0, r9
   18f8c:	mov	r1, r4
   18f90:	mov	r2, #4
   18f94:	bl	4e20 <readstat_write_bytes@plt>
   18f98:	mov	r5, #0
   18f9c:	cmp	r0, #0
   18fa0:	bne	19010 <sav_begin_data+0x1390>
   18fa4:	mov	r0, r9
   18fa8:	mov	r1, sl
   18fac:	mov	r2, #4
   18fb0:	bl	4e20 <readstat_write_bytes@plt>
   18fb4:	cmp	r0, #0
   18fb8:	bne	19010 <sav_begin_data+0x1390>
   18fbc:	mov	r0, r9
   18fc0:	add	r1, sp, #56	; 0x38
   18fc4:	mov	r2, #4
   18fc8:	bl	4e20 <readstat_write_bytes@plt>
   18fcc:	cmp	r0, #0
   18fd0:	bne	19010 <sav_begin_data+0x1390>
   18fd4:	subs	r8, r8, #1
   18fd8:	bne	18f88 <sav_begin_data+0x1308>
   18fdc:	mov	r5, #1
   18fe0:	mov	r6, #0
   18fe4:	b	19014 <sav_begin_data+0x1394>
   18fe8:	.word	0x0000c4ad
   18fec:	.word	0x0000cfbc
   18ff0:	.word	0x00000014
	...
   18ffc:	.word	0xffffffff
   19000:	.word	0xffffffff
   19004:	.word	0xffefffff
   19008:	.word	0xffffffff
   1900c:	.word	0x7fefffff
   19010:	mov	r6, r0
   19014:	ldr	r0, [sp, #52]	; 0x34
   19018:	cmp	r5, #0
   1901c:	beq	19030 <sav_begin_data+0x13b0>
   19020:	ldr	r1, [r0, #28]
   19024:	add	r7, r7, #1
   19028:	cmp	r7, r1
   1902c:	blt	18f0c <sav_begin_data+0x128c>
   19030:	cmp	r6, #0
   19034:	bne	18084 <sav_begin_data+0x404>
   19038:	ldr	r0, [sp, #52]	; 0x34
   1903c:	ldr	r2, [r0, #28]
   19040:	ldr	r1, [pc, #3000]	; 19c00 <sav_begin_data+0x1f80>
   19044:	add	r0, sp, #128	; 0x80
   19048:	add	r1, pc, r1
   1904c:	cmp	r2, #1
   19050:	vld1.64	{d16-d17}, [r1]
   19054:	vst1.64	{d16-d17}, [r0]
   19058:	blt	19264 <sav_begin_data+0x15e4>
   1905c:	ldr	r8, [pc, #2976]	; 19c04 <sav_begin_data+0x1f84>
   19060:	ldr	r7, [sp, #48]	; 0x30
   19064:	ldr	r0, [sp, #52]	; 0x34
   19068:	mov	r4, #0
   1906c:	add	r9, sp, #56	; 0x38
   19070:	add	r8, pc, r8
   19074:	mov	r1, r4
   19078:	bl	4d48 <readstat_get_variable@plt>
   1907c:	mov	r5, r0
   19080:	mov	r0, r9
   19084:	mov	r1, #9
   19088:	mov	r2, r8
   1908c:	mov	r3, r7
   19090:	bl	4c4c <snprintf@plt>
   19094:	mov	r0, r9
   19098:	bl	4bd4 <strlen@plt>
   1909c:	mov	r6, r0
   190a0:	add	r0, r5, #8
   190a4:	bl	4bd4 <strlen@plt>
   190a8:	cmp	r6, #0
   190ac:	cmpne	r0, #0
   190b0:	beq	190d0 <sav_begin_data+0x1450>
   190b4:	ldr	r1, [sp, #140]	; 0x8c
   190b8:	cmp	r0, #64	; 0x40
   190bc:	movcs	r0, #64	; 0x40
   190c0:	add	r0, r6, r0
   190c4:	add	r0, r0, r1
   190c8:	add	r0, r0, #2
   190cc:	str	r0, [sp, #140]	; 0x8c
   190d0:	ldr	r0, [sp, #52]	; 0x34
   190d4:	add	r4, r4, #1
   190d8:	add	r7, r7, #15
   190dc:	ldr	r2, [r0, #28]
   190e0:	cmp	r4, r2
   190e4:	blt	19074 <sav_begin_data+0x13f4>
   190e8:	ldr	r1, [sp, #140]	; 0x8c
   190ec:	cmp	r1, #1
   190f0:	blt	19264 <sav_begin_data+0x15e4>
   190f4:	sub	r0, r1, #1
   190f8:	add	r1, sp, #128	; 0x80
   190fc:	mov	r2, #16
   19100:	str	r0, [sp, #140]	; 0x8c
   19104:	ldr	r0, [sp, #52]	; 0x34
   19108:	bl	4e20 <readstat_write_bytes@plt>
   1910c:	cmp	r0, #0
   19110:	bne	18d9c <sav_begin_data+0x111c>
   19114:	ldr	r0, [sp, #52]	; 0x34
   19118:	ldr	r2, [r0, #28]
   1911c:	cmp	r2, #1
   19120:	blt	19264 <sav_begin_data+0x15e4>
   19124:	ldr	sl, [sp, #48]	; 0x30
   19128:	ldr	r0, [sp, #52]	; 0x34
   1912c:	mov	r8, #1
   19130:	mov	r6, #0
   19134:	mov	r9, #0
   19138:	mov	r1, r9
   1913c:	bl	4d48 <readstat_get_variable@plt>
   19140:	ldr	r2, [pc, #2752]	; 19c08 <sav_begin_data+0x1f88>
   19144:	mov	r5, r0
   19148:	sub	r0, fp, #72	; 0x48
   1914c:	mov	r1, #9
   19150:	mov	r3, sl
   19154:	add	r2, pc, r2
   19158:	bl	4c4c <snprintf@plt>
   1915c:	add	r5, r5, #8
   19160:	mov	r0, r5
   19164:	bl	4bd4 <strlen@plt>
   19168:	mov	r7, r0
   1916c:	mov	r0, #61	; 0x3d
   19170:	strb	r0, [sp, #72]	; 0x48
   19174:	mov	r0, #9
   19178:	cmp	r7, #0
   1917c:	strb	r0, [sp, #56]	; 0x38
   19180:	beq	19218 <sav_begin_data+0x1598>
   19184:	cmp	r7, #64	; 0x40
   19188:	movcs	r7, #64	; 0x40
   1918c:	cmp	r8, #0
   19190:	beq	191e8 <sav_begin_data+0x1568>
   19194:	ldr	r0, [sp, #52]	; 0x34
   19198:	sub	r1, fp, #72	; 0x48
   1919c:	bl	4b2c <readstat_write_string@plt>
   191a0:	mov	r4, #0
   191a4:	cmp	r0, #0
   191a8:	bne	191e0 <sav_begin_data+0x1560>
   191ac:	ldr	r0, [sp, #52]	; 0x34
   191b0:	add	r1, sp, #72	; 0x48
   191b4:	mov	r2, #1
   191b8:	bl	4e20 <readstat_write_bytes@plt>
   191bc:	cmp	r0, #0
   191c0:	bne	191e0 <sav_begin_data+0x1560>
   191c4:	ldr	r0, [sp, #52]	; 0x34
   191c8:	mov	r1, r5
   191cc:	mov	r2, r7
   191d0:	bl	4e20 <readstat_write_bytes@plt>
   191d4:	mov	r4, #0
   191d8:	cmp	r0, #0
   191dc:	beq	19210 <sav_begin_data+0x1590>
   191e0:	mov	r6, r0
   191e4:	b	1921c <sav_begin_data+0x159c>
   191e8:	ldr	r0, [sp, #52]	; 0x34
   191ec:	add	r1, sp, #56	; 0x38
   191f0:	mov	r2, #1
   191f4:	bl	4e20 <readstat_write_bytes@plt>
   191f8:	cmp	r0, #0
   191fc:	beq	19194 <sav_begin_data+0x1514>
   19200:	mov	r6, r0
   19204:	mov	r8, #0
   19208:	mov	r4, #0
   1920c:	b	1921c <sav_begin_data+0x159c>
   19210:	mov	r8, #0
   19214:	mov	r6, #0
   19218:	mov	r4, #1
   1921c:	ldr	r0, [sp, #52]	; 0x34
   19220:	cmp	r4, #0
   19224:	beq	1923c <sav_begin_data+0x15bc>
   19228:	ldr	r1, [r0, #28]
   1922c:	add	r9, r9, #1
   19230:	add	sl, sl, #15
   19234:	cmp	r9, r1
   19238:	blt	19138 <sav_begin_data+0x14b8>
   1923c:	cmp	r6, #0
   19240:	bne	18084 <sav_begin_data+0x404>
   19244:	ldr	r0, [sp, #52]	; 0x34
   19248:	ldr	r2, [r0, #28]
   1924c:	b	19264 <sav_begin_data+0x15e4>
   19250:	.word	0x0000cc0c
   19254:	ldr	r1, [pc, #2464]	; 19bfc <sav_begin_data+0x1f7c>
   19258:	add	r1, pc, r1
   1925c:	vld1.64	{d16-d17}, [r1]
   19260:	vst1.64	{d16-d17}, [r4]
   19264:	mov	r1, #2304	; 0x900
   19268:	cmp	r2, #1
   1926c:	add	r0, sp, #128	; 0x80
   19270:	strh	r1, [fp, #-80]	; 0xffffffb0
   19274:	ldr	r1, [pc, #2448]	; 19c0c <sav_begin_data+0x1f8c>
   19278:	add	r1, pc, r1
   1927c:	vld1.64	{d16-d17}, [r1]
   19280:	vst1.64	{d16-d17}, [r0]
   19284:	blt	19448 <sav_begin_data+0x17c8>
   19288:	ldr	r9, [pc, #2432]	; 19c10 <sav_begin_data+0x1f90>
   1928c:	ldr	r6, [sp, #48]	; 0x30
   19290:	ldr	r0, [sp, #52]	; 0x34
   19294:	mov	r4, #0
   19298:	add	sl, sp, #56	; 0x38
   1929c:	movw	r8, #3125	; 0xc35
   192a0:	add	r7, sp, #72	; 0x48
   192a4:	add	r9, pc, r9
   192a8:	mov	r1, r4
   192ac:	bl	4d48 <readstat_get_variable@plt>
   192b0:	mov	r5, r0
   192b4:	ldr	r0, [r0, #1600]	; 0x640
   192b8:	cmp	r0, #256	; 0x100
   192bc:	bcc	19328 <sav_begin_data+0x16a8>
   192c0:	ldr	r2, [pc, #2380]	; 19c14 <sav_begin_data+0x1f94>
   192c4:	mov	r0, sl
   192c8:	mov	r1, #9
   192cc:	mov	r3, r6
   192d0:	add	r2, pc, r2
   192d4:	bl	4c4c <snprintf@plt>
   192d8:	ldr	r0, [r5, #1600]	; 0x640
   192dc:	movw	r2, #23237	; 0x5ac5
   192e0:	mov	r3, sl
   192e4:	movt	r2, #2684	; 0xa7c
   192e8:	lsr	r1, r0, #5
   192ec:	umull	r1, r2, r1, r2
   192f0:	lsr	r1, r2, #7
   192f4:	mov	r2, r9
   192f8:	mul	r1, r1, r8
   192fc:	sub	r0, r0, r1, lsl #5
   19300:	mov	r1, #15
   19304:	str	r0, [sp]
   19308:	mov	r0, r7
   1930c:	bl	4c4c <snprintf@plt>
   19310:	mov	r0, r7
   19314:	bl	4bd4 <strlen@plt>
   19318:	ldr	r1, [sp, #140]	; 0x8c
   1931c:	add	r0, r0, r1
   19320:	add	r0, r0, #2
   19324:	str	r0, [sp, #140]	; 0x8c
   19328:	ldr	r0, [sp, #52]	; 0x34
   1932c:	add	r4, r4, #1
   19330:	add	r6, r6, #15
   19334:	ldr	r1, [r0, #28]
   19338:	cmp	r4, r1
   1933c:	blt	192a8 <sav_begin_data+0x1628>
   19340:	ldr	r0, [sp, #140]	; 0x8c
   19344:	cmp	r0, #0
   19348:	beq	19448 <sav_begin_data+0x17c8>
   1934c:	ldr	r0, [sp, #52]	; 0x34
   19350:	add	r1, sp, #128	; 0x80
   19354:	mov	r2, #16
   19358:	bl	4e20 <readstat_write_bytes@plt>
   1935c:	mov	r6, r0
   19360:	cmp	r0, #0
   19364:	bne	18084 <sav_begin_data+0x404>
   19368:	ldr	r0, [sp, #52]	; 0x34
   1936c:	ldr	r0, [r0, #28]
   19370:	cmp	r0, #1
   19374:	blt	19448 <sav_begin_data+0x17c8>
   19378:	ldr	sl, [pc, #2200]	; 19c18 <sav_begin_data+0x1f98>
   1937c:	ldr	r9, [sp, #48]	; 0x30
   19380:	mov	r4, #0
   19384:	sub	r5, fp, #72	; 0x48
   19388:	add	r7, sp, #72	; 0x48
   1938c:	add	sl, pc, sl
   19390:	ldr	r8, [sp, #52]	; 0x34
   19394:	mov	r1, r4
   19398:	mov	r0, r8
   1939c:	bl	4d48 <readstat_get_variable@plt>
   193a0:	mov	r6, r0
   193a4:	ldr	r0, [r0, #1600]	; 0x640
   193a8:	cmp	r0, #256	; 0x100
   193ac:	bcc	19434 <sav_begin_data+0x17b4>
   193b0:	ldr	r2, [pc, #2148]	; 19c1c <sav_begin_data+0x1f9c>
   193b4:	mov	r0, r5
   193b8:	mov	r1, #9
   193bc:	mov	r3, r9
   193c0:	add	r2, pc, r2
   193c4:	bl	4c4c <snprintf@plt>
   193c8:	ldr	r0, [r6, #1600]	; 0x640
   193cc:	movw	r2, #23237	; 0x5ac5
   193d0:	mov	r3, r5
   193d4:	movt	r2, #2684	; 0xa7c
   193d8:	lsr	r1, r0, #5
   193dc:	umull	r1, r2, r1, r2
   193e0:	lsr	r1, r2, #7
   193e4:	movw	r2, #3125	; 0xc35
   193e8:	mul	r1, r1, r2
   193ec:	mov	r2, sl
   193f0:	sub	r0, r0, r1, lsl #5
   193f4:	mov	r1, #15
   193f8:	str	r0, [sp]
   193fc:	mov	r0, r7
   19400:	bl	4c4c <snprintf@plt>
   19404:	mov	r0, r8
   19408:	mov	r1, r7
   1940c:	bl	4b2c <readstat_write_string@plt>
   19410:	cmp	r0, #0
   19414:	bne	18d9c <sav_begin_data+0x111c>
   19418:	ldr	r0, [sp, #52]	; 0x34
   1941c:	sub	r1, fp, #80	; 0x50
   19420:	mov	r2, #2
   19424:	bl	4e20 <readstat_write_bytes@plt>
   19428:	cmp	r0, #0
   1942c:	bne	18d9c <sav_begin_data+0x111c>
   19430:	ldr	r8, [sp, #52]	; 0x34
   19434:	ldr	r0, [r8, #28]
   19438:	add	r4, r4, #1
   1943c:	add	r9, r9, #15
   19440:	cmp	r4, r0
   19444:	blt	19390 <sav_begin_data+0x1710>
   19448:	ldr	r0, [pc, #2000]	; 19c20 <sav_begin_data+0x1fa0>
   1944c:	add	r0, pc, r0
   19450:	vld1.64	{d16-d17}, [r0]
   19454:	add	r0, sp, #128	; 0x80
   19458:	vst1.64	{d16-d17}, [r0]
   1945c:	ldr	r0, [sp, #52]	; 0x34
   19460:	ldr	r0, [r0, #40]	; 0x28
   19464:	cmp	r0, #1
   19468:	blt	1977c <sav_begin_data+0x1afc>
   1946c:	ldr	r0, [sp, #52]	; 0x34
   19470:	mov	r5, #0
   19474:	mov	r1, #0
   19478:	str	r1, [sp, #44]	; 0x2c
   1947c:	bl	4df0 <readstat_get_label_set@plt>
   19480:	mov	r6, r0
   19484:	bl	19d00 <readstat_label_set_number_short_variables>
   19488:	ldr	sl, [r6, #276]	; 0x114
   1948c:	cmp	r0, sl
   19490:	bge	19528 <sav_begin_data+0x18a8>
   19494:	cmp	sl, #1
   19498:	blt	19528 <sav_begin_data+0x18a8>
   1949c:	ldr	r8, [r6, #264]	; 0x108
   194a0:	mov	r9, #0
   194a4:	mov	r0, r6
   194a8:	mov	r1, r9
   194ac:	bl	4e14 <readstat_get_label_set_variable@plt>
   194b0:	mov	r4, r0
   194b4:	add	r0, r0, #8
   194b8:	bl	4bd4 <strlen@plt>
   194bc:	mov	r7, r0
   194c0:	mov	r0, r4
   194c4:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   194c8:	cmp	r0, #9
   194cc:	blt	1951c <sav_begin_data+0x189c>
   194d0:	add	r1, r5, r7
   194d4:	cmp	r8, #1
   194d8:	add	r5, r1, #12
   194dc:	str	r5, [sp, #140]	; 0x8c
   194e0:	blt	1951c <sav_begin_data+0x189c>
   194e4:	add	r4, r0, #8
   194e8:	mov	r7, #0
   194ec:	mov	r0, r6
   194f0:	mov	r1, r7
   194f4:	bl	4e8c <readstat_get_value_label@plt>
   194f8:	ldr	r0, [r0, #28]
   194fc:	add	r1, r4, r5
   19500:	add	r7, r7, #1
   19504:	cmp	r0, #120	; 0x78
   19508:	movge	r0, #120	; 0x78
   1950c:	cmp	r8, r7
   19510:	add	r5, r1, r0
   19514:	bne	194ec <sav_begin_data+0x186c>
   19518:	str	r5, [sp, #140]	; 0x8c
   1951c:	add	r9, r9, #1
   19520:	cmp	r9, sl
   19524:	bne	194a4 <sav_begin_data+0x1824>
   19528:	ldr	r0, [sp, #52]	; 0x34
   1952c:	ldr	r1, [sp, #44]	; 0x2c
   19530:	ldr	r2, [r0, #40]	; 0x28
   19534:	add	r1, r1, #1
   19538:	cmp	r1, r2
   1953c:	blt	19478 <sav_begin_data+0x17f8>
   19540:	cmp	r5, #0
   19544:	beq	1977c <sav_begin_data+0x1afc>
   19548:	ldr	r0, [sp, #52]	; 0x34
   1954c:	add	r1, sp, #128	; 0x80
   19550:	mov	r2, #16
   19554:	bl	4e20 <readstat_write_bytes@plt>
   19558:	cmp	r0, #0
   1955c:	bne	18d9c <sav_begin_data+0x111c>
   19560:	ldr	r0, [sp, #52]	; 0x34
   19564:	ldr	r0, [r0, #40]	; 0x28
   19568:	cmp	r0, #1
   1956c:	blt	1977c <sav_begin_data+0x1afc>
   19570:	mov	r8, #0
   19574:	mov	r0, #0
   19578:	str	r0, [sp, #44]	; 0x2c
   1957c:	ldr	r0, [sp, #52]	; 0x34
   19580:	mov	r1, r8
   19584:	bl	4df0 <readstat_get_label_set@plt>
   19588:	mov	r4, r0
   1958c:	bl	19d00 <readstat_label_set_number_short_variables>
   19590:	ldr	r1, [r4, #276]	; 0x114
   19594:	cmp	r0, r1
   19598:	str	r1, [sp, #40]	; 0x28
   1959c:	bge	19740 <sav_begin_data+0x1ac0>
   195a0:	ldr	r0, [r4, #264]	; 0x108
   195a4:	str	r0, [sp, #72]	; 0x48
   195a8:	ldr	r0, [sp, #40]	; 0x28
   195ac:	cmp	r0, #1
   195b0:	blt	19740 <sav_begin_data+0x1ac0>
   195b4:	mov	sl, #0
   195b8:	mov	r0, r4
   195bc:	mov	r1, sl
   195c0:	bl	4e14 <readstat_get_label_set_variable@plt>
   195c4:	add	r5, r0, #8
   195c8:	mov	r6, r0
   195cc:	mov	r0, r5
   195d0:	bl	4bd4 <strlen@plt>
   195d4:	str	r0, [fp, #-72]	; 0xffffffb8
   195d8:	mov	r0, r6
   195dc:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   195e0:	cmp	r0, #9
   195e4:	str	r0, [sp, #56]	; 0x38
   195e8:	blt	19730 <sav_begin_data+0x1ab0>
   195ec:	mov	r1, r0
   195f0:	ldr	r0, [sp, #44]	; 0x2c
   195f4:	bl	49dc <realloc@plt>
   195f8:	ldr	r2, [sp, #56]	; 0x38
   195fc:	mov	r1, #32
   19600:	str	r0, [sp, #44]	; 0x2c
   19604:	bl	4c70 <memset@plt>
   19608:	ldr	r0, [sp, #52]	; 0x34
   1960c:	sub	r1, fp, #72	; 0x48
   19610:	mov	r2, #4
   19614:	bl	4e20 <readstat_write_bytes@plt>
   19618:	cmp	r0, #0
   1961c:	bne	1975c <sav_begin_data+0x1adc>
   19620:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19624:	ldr	r0, [sp, #52]	; 0x34
   19628:	mov	r1, r5
   1962c:	bl	4e20 <readstat_write_bytes@plt>
   19630:	cmp	r0, #0
   19634:	bne	1975c <sav_begin_data+0x1adc>
   19638:	ldr	r0, [sp, #52]	; 0x34
   1963c:	add	r1, sp, #56	; 0x38
   19640:	mov	r2, #4
   19644:	bl	4e20 <readstat_write_bytes@plt>
   19648:	cmp	r0, #0
   1964c:	bne	1975c <sav_begin_data+0x1adc>
   19650:	ldr	r0, [sp, #52]	; 0x34
   19654:	add	r1, sp, #72	; 0x48
   19658:	mov	r2, #4
   1965c:	bl	4e20 <readstat_write_bytes@plt>
   19660:	cmp	r0, #0
   19664:	bne	1975c <sav_begin_data+0x1adc>
   19668:	ldr	r0, [sp, #72]	; 0x48
   1966c:	cmp	r0, #1
   19670:	blt	19730 <sav_begin_data+0x1ab0>
   19674:	mov	r9, #0
   19678:	mov	r0, r4
   1967c:	mov	r1, r9
   19680:	bl	4e8c <readstat_get_value_label@plt>
   19684:	mov	r5, r0
   19688:	ldr	r7, [r0, #20]
   1968c:	ldr	r0, [r0, #28]
   19690:	add	r1, sp, #56	; 0x38
   19694:	mov	r2, #4
   19698:	cmp	r0, #120	; 0x78
   1969c:	movge	r0, #120	; 0x78
   196a0:	str	r0, [fp, #-80]	; 0xffffffb0
   196a4:	ldr	r0, [sp, #52]	; 0x34
   196a8:	bl	4e20 <readstat_write_bytes@plt>
   196ac:	cmp	r0, #0
   196b0:	bne	1975c <sav_begin_data+0x1adc>
   196b4:	ldr	r1, [r5, #16]
   196b8:	ldr	r0, [sp, #52]	; 0x34
   196bc:	mov	r2, r7
   196c0:	bl	4e20 <readstat_write_bytes@plt>
   196c4:	cmp	r0, #0
   196c8:	bne	1975c <sav_begin_data+0x1adc>
   196cc:	ldr	r0, [sp, #56]	; 0x38
   196d0:	cmp	r0, r7
   196d4:	ble	196f0 <sav_begin_data+0x1a70>
   196d8:	sub	r2, r0, r7
   196dc:	ldr	r0, [sp, #52]	; 0x34
   196e0:	ldr	r1, [sp, #44]	; 0x2c
   196e4:	bl	4e20 <readstat_write_bytes@plt>
   196e8:	cmp	r0, #0
   196ec:	bne	1975c <sav_begin_data+0x1adc>
   196f0:	ldr	r0, [sp, #52]	; 0x34
   196f4:	sub	r1, fp, #80	; 0x50
   196f8:	mov	r2, #4
   196fc:	bl	4e20 <readstat_write_bytes@plt>
   19700:	cmp	r0, #0
   19704:	bne	1975c <sav_begin_data+0x1adc>
   19708:	ldr	r1, [r5, #24]
   1970c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19710:	ldr	r0, [sp, #52]	; 0x34
   19714:	bl	4e20 <readstat_write_bytes@plt>
   19718:	cmp	r0, #0
   1971c:	bne	1975c <sav_begin_data+0x1adc>
   19720:	ldr	r0, [sp, #72]	; 0x48
   19724:	add	r9, r9, #1
   19728:	cmp	r9, r0
   1972c:	blt	19678 <sav_begin_data+0x19f8>
   19730:	ldr	r0, [sp, #40]	; 0x28
   19734:	add	sl, sl, #1
   19738:	cmp	sl, r0
   1973c:	bne	195b8 <sav_begin_data+0x1938>
   19740:	ldr	r0, [sp, #52]	; 0x34
   19744:	add	r8, r8, #1
   19748:	ldr	r0, [r0, #40]	; 0x28
   1974c:	cmp	r8, r0
   19750:	blt	1957c <sav_begin_data+0x18fc>
   19754:	mov	r6, #0
   19758:	b	19760 <sav_begin_data+0x1ae0>
   1975c:	mov	r6, r0
   19760:	ldr	r0, [sp, #44]	; 0x2c
   19764:	cmp	r0, #0
   19768:	beq	19774 <sav_begin_data+0x1af4>
   1976c:	ldr	r0, [sp, #44]	; 0x2c
   19770:	bl	48bc <free@plt>
   19774:	cmp	r6, #0
   19778:	bne	18084 <sav_begin_data+0x404>
   1977c:	ldr	r0, [pc, #1184]	; 19c24 <sav_begin_data+0x1fa4>
   19780:	add	r0, pc, r0
   19784:	vld1.64	{d16-d17}, [r0]
   19788:	add	r0, sp, #128	; 0x80
   1978c:	vst1.64	{d16-d17}, [r0]
   19790:	ldr	r0, [sp, #52]	; 0x34
   19794:	ldr	r0, [r0, #28]
   19798:	cmp	r0, #1
   1979c:	str	r0, [sp, #40]	; 0x28
   197a0:	blt	19ae8 <sav_begin_data+0x1e68>
   197a4:	ldr	r5, [sp, #52]	; 0x34
   197a8:	sub	r0, fp, #72	; 0x48
   197ac:	mov	r4, #0
   197b0:	add	sl, r0, #8
   197b4:	add	r0, sp, #72	; 0x48
   197b8:	add	r8, r0, #8
   197bc:	mov	r0, r5
   197c0:	mov	r1, r4
   197c4:	bl	4d48 <readstat_get_variable@plt>
   197c8:	mov	r6, r0
   197cc:	add	r0, r0, #8
   197d0:	bl	4bd4 <strlen@plt>
   197d4:	str	r0, [sp, #44]	; 0x2c
   197d8:	mov	r0, r6
   197dc:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   197e0:	cmp	r0, #9
   197e4:	blt	198a4 <sav_begin_data+0x1c24>
   197e8:	mov	r0, r6
   197ec:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   197f0:	cmp	r0, #1
   197f4:	blt	198a4 <sav_begin_data+0x1c24>
   197f8:	mov	r5, #0
   197fc:	mov	r9, #0
   19800:	add	r0, sp, #72	; 0x48
   19804:	mov	r1, r6
   19808:	mov	r2, r5
   1980c:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   19810:	sub	r0, fp, #72	; 0x48
   19814:	mov	r1, r6
   19818:	mov	r2, r5
   1981c:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   19820:	ldrd	r2, [r8]
   19824:	ldr	r0, [sp, #72]	; 0x48
   19828:	ldr	r1, [sp, #76]	; 0x4c
   1982c:	bl	4988 <readstat_string_value@plt>
   19830:	mov	r7, r0
   19834:	ldrd	r2, [sl]
   19838:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1983c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19840:	bl	4988 <readstat_string_value@plt>
   19844:	cmp	r7, #0
   19848:	movne	r1, r0
   1984c:	cmpne	r0, #0
   19850:	beq	19864 <sav_begin_data+0x1be4>
   19854:	mov	r0, r7
   19858:	bl	4808 <strcmp@plt>
   1985c:	cmp	r0, #0
   19860:	addeq	r9, r9, #1
   19864:	mov	r0, r6
   19868:	add	r5, r5, #1
   1986c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19870:	cmp	r5, r0
   19874:	blt	19800 <sav_begin_data+0x1b80>
   19878:	ldr	r5, [sp, #52]	; 0x34
   1987c:	cmp	r9, #0
   19880:	beq	198a4 <sav_begin_data+0x1c24>
   19884:	ldr	r1, [sp, #44]	; 0x2c
   19888:	mov	r0, #4
   1988c:	orr	r0, r0, r9, lsl #3
   19890:	add	r0, r1, r0
   19894:	ldr	r1, [sp, #140]	; 0x8c
   19898:	add	r0, r0, r1
   1989c:	add	r0, r0, #5
   198a0:	str	r0, [sp, #140]	; 0x8c
   198a4:	ldr	r0, [sp, #40]	; 0x28
   198a8:	add	r4, r4, #1
   198ac:	cmp	r4, r0
   198b0:	bne	197bc <sav_begin_data+0x1b3c>
   198b4:	ldr	r0, [sp, #140]	; 0x8c
   198b8:	cmp	r0, #0
   198bc:	beq	19ae8 <sav_begin_data+0x1e68>
   198c0:	ldr	r0, [sp, #52]	; 0x34
   198c4:	add	r1, sp, #128	; 0x80
   198c8:	mov	r2, #16
   198cc:	bl	4e20 <readstat_write_bytes@plt>
   198d0:	mov	r6, r0
   198d4:	cmp	r0, #0
   198d8:	bne	18084 <sav_begin_data+0x404>
   198dc:	mov	r7, #0
   198e0:	ldr	r0, [sp, #52]	; 0x34
   198e4:	mov	r1, r7
   198e8:	bl	4d48 <readstat_get_variable@plt>
   198ec:	add	r4, r0, #8
   198f0:	mov	r9, r0
   198f4:	mov	r0, r4
   198f8:	bl	4bd4 <strlen@plt>
   198fc:	str	r0, [sp, #56]	; 0x38
   19900:	mov	r0, #0
   19904:	strb	r0, [fp, #-88]	; 0xffffffa8
   19908:	mov	r0, r9
   1990c:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   19910:	cmp	r0, #9
   19914:	blt	19ad8 <sav_begin_data+0x1e58>
   19918:	mov	r0, r9
   1991c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19920:	cmp	r0, #1
   19924:	blt	199b8 <sav_begin_data+0x1d38>
   19928:	mov	r5, #0
   1992c:	add	r0, sp, #72	; 0x48
   19930:	mov	r1, r9
   19934:	mov	r2, r5
   19938:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   1993c:	sub	r0, fp, #72	; 0x48
   19940:	mov	r1, r9
   19944:	mov	r2, r5
   19948:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   1994c:	ldrd	r2, [r8]
   19950:	ldr	r0, [sp, #72]	; 0x48
   19954:	ldr	r1, [sp, #76]	; 0x4c
   19958:	bl	4988 <readstat_string_value@plt>
   1995c:	mov	r6, r0
   19960:	ldrd	r2, [sl]
   19964:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19968:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1996c:	bl	4988 <readstat_string_value@plt>
   19970:	cmp	r6, #0
   19974:	movne	r1, r0
   19978:	cmpne	r0, #0
   1997c:	bne	19998 <sav_begin_data+0x1d18>
   19980:	mov	r0, r9
   19984:	add	r5, r5, #1
   19988:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   1998c:	cmp	r5, r0
   19990:	blt	1992c <sav_begin_data+0x1cac>
   19994:	b	199b8 <sav_begin_data+0x1d38>
   19998:	mov	r0, r6
   1999c:	bl	4808 <strcmp@plt>
   199a0:	cmp	r0, #0
   199a4:	bne	19980 <sav_begin_data+0x1d00>
   199a8:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   199ac:	add	r0, r0, #1
   199b0:	strb	r0, [fp, #-88]	; 0xffffffa8
   199b4:	b	19980 <sav_begin_data+0x1d00>
   199b8:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   199bc:	cmp	r0, #0
   199c0:	beq	19ad8 <sav_begin_data+0x1e58>
   199c4:	ldr	r0, [sp, #52]	; 0x34
   199c8:	add	r1, sp, #56	; 0x38
   199cc:	mov	r2, #4
   199d0:	bl	4e20 <readstat_write_bytes@plt>
   199d4:	cmp	r0, #0
   199d8:	bne	18d9c <sav_begin_data+0x111c>
   199dc:	ldr	r2, [sp, #56]	; 0x38
   199e0:	ldr	r0, [sp, #52]	; 0x34
   199e4:	mov	r1, r4
   199e8:	bl	4e20 <readstat_write_bytes@plt>
   199ec:	cmp	r0, #0
   199f0:	bne	18d9c <sav_begin_data+0x111c>
   199f4:	ldr	r0, [sp, #52]	; 0x34
   199f8:	sub	r1, fp, #88	; 0x58
   199fc:	mov	r2, #1
   19a00:	bl	4e20 <readstat_write_bytes@plt>
   19a04:	cmp	r0, #0
   19a08:	bne	18d9c <sav_begin_data+0x111c>
   19a0c:	mov	r0, #8
   19a10:	sub	r1, fp, #80	; 0x50
   19a14:	mov	r2, #4
   19a18:	str	r0, [fp, #-80]	; 0xffffffb0
   19a1c:	ldr	r0, [sp, #52]	; 0x34
   19a20:	bl	4e20 <readstat_write_bytes@plt>
   19a24:	cmp	r0, #0
   19a28:	bne	18d9c <sav_begin_data+0x111c>
   19a2c:	mov	r0, r9
   19a30:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19a34:	cmp	r0, #1
   19a38:	blt	19ad8 <sav_begin_data+0x1e58>
   19a3c:	mov	r4, #0
   19a40:	add	r0, sp, #72	; 0x48
   19a44:	mov	r1, r9
   19a48:	mov	r2, r4
   19a4c:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   19a50:	sub	r0, fp, #72	; 0x48
   19a54:	mov	r1, r9
   19a58:	mov	r2, r4
   19a5c:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   19a60:	ldrd	r2, [r8]
   19a64:	ldr	r0, [sp, #72]	; 0x48
   19a68:	ldr	r1, [sp, #76]	; 0x4c
   19a6c:	bl	4988 <readstat_string_value@plt>
   19a70:	mov	r5, r0
   19a74:	ldrd	r2, [sl]
   19a78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19a7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19a80:	bl	4988 <readstat_string_value@plt>
   19a84:	cmp	r5, #0
   19a88:	movne	r1, r0
   19a8c:	cmpne	r0, #0
   19a90:	bne	19aac <sav_begin_data+0x1e2c>
   19a94:	mov	r0, r9
   19a98:	add	r4, r4, #1
   19a9c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19aa0:	cmp	r4, r0
   19aa4:	blt	19a40 <sav_begin_data+0x1dc0>
   19aa8:	b	19ad8 <sav_begin_data+0x1e58>
   19aac:	mov	r0, r5
   19ab0:	bl	4808 <strcmp@plt>
   19ab4:	cmp	r0, #0
   19ab8:	bne	19a94 <sav_begin_data+0x1e14>
   19abc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19ac0:	ldr	r0, [sp, #52]	; 0x34
   19ac4:	mov	r1, r5
   19ac8:	bl	4f10 <readstat_write_space_padded_string@plt>
   19acc:	cmp	r0, #0
   19ad0:	beq	19a94 <sav_begin_data+0x1e14>
   19ad4:	b	18d9c <sav_begin_data+0x111c>
   19ad8:	ldr	r0, [sp, #40]	; 0x28
   19adc:	add	r7, r7, #1
   19ae0:	cmp	r7, r0
   19ae4:	bne	198e0 <sav_begin_data+0x1c60>
   19ae8:	ldr	r0, [pc, #312]	; 19c28 <sav_begin_data+0x1fa8>
   19aec:	add	r1, sp, #128	; 0x80
   19af0:	add	r0, pc, r0
   19af4:	vld1.64	{d16-d17}, [r0]
   19af8:	mov	r0, #0
   19afc:	str	r0, [sp, #76]	; 0x4c
   19b00:	mov	r0, #1
   19b04:	str	r0, [sp, #72]	; 0x48
   19b08:	ldr	r0, [sp, #52]	; 0x34
   19b0c:	vst1.64	{d16-d17}, [r1]
   19b10:	ldr	r2, [r0, #80]	; 0x50
   19b14:	str	r2, [fp, #-72]	; 0xffffffb8
   19b18:	asr	r2, r2, #31
   19b1c:	str	r2, [fp, #-68]	; 0xffffffbc
   19b20:	mov	r2, #16
   19b24:	bl	4e20 <readstat_write_bytes@plt>
   19b28:	mov	r6, r0
   19b2c:	cmp	r0, #0
   19b30:	bne	19b64 <sav_begin_data+0x1ee4>
   19b34:	ldr	r0, [sp, #52]	; 0x34
   19b38:	add	r1, sp, #72	; 0x48
   19b3c:	mov	r2, #8
   19b40:	bl	4e20 <readstat_write_bytes@plt>
   19b44:	mov	r6, r0
   19b48:	cmp	r0, #0
   19b4c:	bne	19b64 <sav_begin_data+0x1ee4>
   19b50:	ldr	r0, [sp, #52]	; 0x34
   19b54:	sub	r1, fp, #72	; 0x48
   19b58:	mov	r2, #8
   19b5c:	bl	4e20 <readstat_write_bytes@plt>
   19b60:	mov	r6, r0
   19b64:	cmp	r6, #0
   19b68:	bne	18084 <sav_begin_data+0x404>
   19b6c:	mov	r0, #0
   19b70:	add	r1, sp, #128	; 0x80
   19b74:	mov	r2, #8
   19b78:	str	r0, [sp, #132]	; 0x84
   19b7c:	movw	r0, #999	; 0x3e7
   19b80:	str	r0, [sp, #128]	; 0x80
   19b84:	ldr	r0, [sp, #52]	; 0x34
   19b88:	bl	4e20 <readstat_write_bytes@plt>
   19b8c:	mov	r6, r0
   19b90:	ldr	r0, [sp, #48]	; 0x30
   19b94:	bl	48bc <free@plt>
   19b98:	cmp	r6, #0
   19b9c:	bne	1808c <sav_begin_data+0x40c>
   19ba0:	ldr	r4, [sp, #52]	; 0x34
   19ba4:	ldr	r0, [r4, #76]	; 0x4c
   19ba8:	bl	49b8 <sav_compressed_row_bound@plt>
   19bac:	ldr	r1, [r4, #16]
   19bb0:	cmp	r1, #2
   19bb4:	beq	19bd4 <sav_begin_data+0x1f54>
   19bb8:	cmp	r1, #1
   19bbc:	bne	19bcc <sav_begin_data+0x1f4c>
   19bc0:	bl	4bf8 <readstat_malloc@plt>
   19bc4:	ldr	r1, [sp, #52]	; 0x34
   19bc8:	str	r0, [r1, #300]	; 0x12c
   19bcc:	mov	r6, #0
   19bd0:	b	1808c <sav_begin_data+0x40c>
   19bd4:	ldr	r4, [sp, #52]	; 0x34
   19bd8:	mov	r3, #0
   19bdc:	mov	r6, #0
   19be0:	ldr	r2, [r4, #4]
   19be4:	bl	4a90 <zsav_ctx_init@plt>
   19be8:	str	r0, [r4, #300]	; 0x12c
   19bec:	b	1808c <sav_begin_data+0x40c>
   19bf0:	.word	0x0000c848
   19bf4:	.word	0x0000c7b4
   19bf8:	.word	0x0000c764
   19bfc:	.word	0x0000c358
   19c00:	.word	0x0000c568
   19c04:	.word	0x0000c06c
   19c08:	.word	0x0000bf88
   19c0c:	.word	0x0000c348
   19c10:	.word	0x0000c263
   19c14:	.word	0x0000be0c
   19c18:	.word	0x0000c17b
   19c1c:	.word	0x0000bd1c
   19c20:	.word	0x0000c184
   19c24:	.word	0x0000be60
   19c28:	.word	0x0000bb00

00019c2c <sav_write_compressed_row>:
   19c2c:	push	{r4, r5, fp, lr}
   19c30:	add	fp, sp, #8
   19c34:	ldr	r5, [r0, #300]	; 0x12c
   19c38:	mov	r4, r0
   19c3c:	mov	r3, r4
   19c40:	mov	r0, r5
   19c44:	bl	4e2c <sav_compress_row@plt>
   19c48:	mov	r2, r0
   19c4c:	mov	r0, r4
   19c50:	mov	r1, r5
   19c54:	pop	{r4, r5, fp, lr}
   19c58:	b	4e20 <readstat_write_bytes@plt>

00019c5c <sav_emit_blank_variable_records>:
   19c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c60:	add	fp, sp, #28
   19c64:	sub	sp, sp, #36	; 0x24
   19c68:	movw	sl, #7425	; 0x1d01
   19c6c:	movw	r9, #8224	; 0x2020
   19c70:	mov	r4, r0
   19c74:	mov	r0, #2
   19c78:	add	r7, r1, #1
   19c7c:	mov	r8, #0
   19c80:	str	r0, [sp, #32]
   19c84:	add	r0, sp, #4
   19c88:	movt	sl, #1
   19c8c:	movt	r9, #8224	; 0x2020
   19c90:	add	r6, r0, #20
   19c94:	add	r5, r0, #4
   19c98:	subs	r7, r7, #1
   19c9c:	beq	19cf4 <sav_emit_blank_variable_records+0x98>
   19ca0:	mov	r0, r4
   19ca4:	add	r1, sp, #32
   19ca8:	mov	r2, #4
   19cac:	bl	4e20 <readstat_write_bytes@plt>
   19cb0:	cmp	r0, #0
   19cb4:	bne	19cf8 <sav_emit_blank_variable_records+0x9c>
   19cb8:	mvn	r0, #0
   19cbc:	str	r8, [r5]
   19cc0:	str	r8, [r5, #4]
   19cc4:	str	r9, [r6]
   19cc8:	str	r9, [r6, #4]
   19ccc:	str	sl, [sp, #20]
   19cd0:	add	r1, sp, #4
   19cd4:	mov	r2, #28
   19cd8:	str	r0, [sp, #4]
   19cdc:	mov	r0, r4
   19ce0:	str	sl, [sp, #16]
   19ce4:	bl	4e20 <readstat_write_bytes@plt>
   19ce8:	cmp	r0, #0
   19cec:	beq	19c98 <sav_emit_blank_variable_records+0x3c>
   19cf0:	b	19cf8 <sav_emit_blank_variable_records+0x9c>
   19cf4:	mov	r0, #0
   19cf8:	sub	sp, fp, #28
   19cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019d00 <readstat_label_set_number_short_variables>:
   19d00:	push	{r4, r5, r6, sl, fp, lr}
   19d04:	add	fp, sp, #16
   19d08:	mov	r4, r0
   19d0c:	ldr	r0, [r0, #276]	; 0x114
   19d10:	mov	r5, #0
   19d14:	cmp	r0, #1
   19d18:	blt	19d48 <readstat_label_set_number_short_variables+0x48>
   19d1c:	mov	r6, #0
   19d20:	mov	r0, r4
   19d24:	mov	r1, r6
   19d28:	bl	4e14 <readstat_get_label_set_variable@plt>
   19d2c:	ldr	r0, [r0, #1596]	; 0x63c
   19d30:	add	r6, r6, #1
   19d34:	cmp	r0, #9
   19d38:	ldr	r0, [r4, #276]	; 0x114
   19d3c:	addcc	r5, r5, #1
   19d40:	cmp	r6, r0
   19d44:	blt	19d20 <readstat_label_set_number_short_variables+0x20>
   19d48:	mov	r0, r5
   19d4c:	pop	{r4, r5, r6, sl, fp, pc}

00019d50 <spss_format>:
   19d50:	push	{r4, sl, fp, lr}
   19d54:	add	fp, sp, #8
   19d58:	sub	sp, sp, #8
   19d5c:	ldr	lr, [r2]
   19d60:	mov	ip, #0
   19d64:	cmp	lr, #41	; 0x29
   19d68:	bhi	19dd4 <spss_format+0x84>
   19d6c:	ldr	r3, [pc, #108]	; 19de0 <spss_format+0x90>
   19d70:	add	r3, pc, r3
   19d74:	ldrb	r4, [r3, lr, lsl #4]!
   19d78:	cmp	r4, #0
   19d7c:	beq	19dd4 <spss_format+0x84>
   19d80:	ldr	ip, [r2, #4]
   19d84:	ldr	r2, [r2, #8]
   19d88:	cmp	lr, #5
   19d8c:	beq	19db0 <spss_format+0x60>
   19d90:	cmp	r2, #0
   19d94:	bne	19db0 <spss_format+0x60>
   19d98:	cmp	ip, #0
   19d9c:	beq	19dc4 <spss_format+0x74>
   19da0:	str	ip, [sp]
   19da4:	ldr	r2, [pc, #60]	; 19de8 <spss_format+0x98>
   19da8:	add	r2, pc, r2
   19dac:	b	19dcc <spss_format+0x7c>
   19db0:	str	ip, [sp]
   19db4:	str	r2, [sp, #4]
   19db8:	ldr	r2, [pc, #36]	; 19de4 <spss_format+0x94>
   19dbc:	add	r2, pc, r2
   19dc0:	b	19dcc <spss_format+0x7c>
   19dc4:	ldr	r2, [pc, #32]	; 19dec <spss_format+0x9c>
   19dc8:	add	r2, pc, r2
   19dcc:	bl	4c4c <snprintf@plt>
   19dd0:	mov	ip, #1
   19dd4:	mov	r0, ip
   19dd8:	sub	sp, fp, #8
   19ddc:	pop	{r4, sl, fp, pc}
   19de0:	.word	0x0002bcec
   19de4:	.word	0x0000a72e
   19de8:	.word	0x0000a74a
   19dec:	.word	0x0000b314

00019df0 <spss_varinfo_compare>:
   19df0:	ldr	r2, [r0]
   19df4:	ldr	r0, [r1]
   19df8:	ldr	r1, [r0, #12]
   19dfc:	mov	r0, #0
   19e00:	cmp	r2, r1
   19e04:	movwgt	r0, #1
   19e08:	mvnlt	r0, #0
   19e0c:	bx	lr

00019e10 <spss_varinfo_free>:
   19e10:	cmp	r0, #0
   19e14:	bxeq	lr
   19e18:	push	{r4, sl, fp, lr}
   19e1c:	add	fp, sp, #8
   19e20:	mov	r4, r0
   19e24:	ldr	r0, [r0, #264]	; 0x108
   19e28:	cmp	r0, #0
   19e2c:	beq	19e34 <spss_varinfo_free+0x24>
   19e30:	bl	48bc <free@plt>
   19e34:	mov	r0, r4
   19e38:	pop	{r4, sl, fp, lr}
   19e3c:	b	48bc <free@plt>

00019e40 <spss_64bit_value>:
   19e40:	push	{r4, r5, r6, r7, fp, lr}
   19e44:	add	fp, sp, #16
   19e48:	vpush	{d8}
   19e4c:	bl	4b8c <readstat_double_value@plt>
   19e50:	vmov.f64	d8, d0
   19e54:	bl	49d0 <__isinf@plt>
   19e58:	mov	r1, r0
   19e5c:	mvn	r2, #1048576	; 0x100000
   19e60:	mvn	r0, #1
   19e64:	cmp	r1, #0
   19e68:	beq	19e8c <spss_64bit_value+0x4c>
   19e6c:	vcmpe.f64	d8, #0.0
   19e70:	movw	r1, #65535	; 0xffff
   19e74:	movt	r1, #32751	; 0x7fef
   19e78:	vmrs	APSR_nzcv, fpscr
   19e7c:	mvnpl	r0, #0
   19e80:	movmi	r1, r2
   19e84:	vpop	{d8}
   19e88:	pop	{r4, r5, r6, r7, fp, pc}
   19e8c:	vmov.f64	d0, d8
   19e90:	adds	r6, r0, #1
   19e94:	vmov	r4, r5, d8
   19e98:	adc	r7, r2, #0
   19e9c:	bl	4d00 <__isnan@plt>
   19ea0:	cmp	r0, #0
   19ea4:	movne	r4, r6
   19ea8:	movne	r5, r7
   19eac:	mov	r0, r4
   19eb0:	mov	r1, r5
   19eb4:	vpop	{d8}
   19eb8:	pop	{r4, r5, r6, r7, fp, pc}

00019ebc <spss_missingness_for_info>:
   19ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ec0:	add	fp, sp, #28
   19ec4:	sub	sp, sp, #4
   19ec8:	vpush	{d8}
   19ecc:	sub	sp, sp, #8
   19ed0:	mov	r8, r1
   19ed4:	mov	r1, #0
   19ed8:	mov	r2, #520	; 0x208
   19edc:	mov	sl, r0
   19ee0:	bl	4c70 <memset@plt>
   19ee4:	ldr	r0, [r8, #56]	; 0x38
   19ee8:	cmp	r0, #0
   19eec:	beq	19f20 <spss_missingness_for_info+0x64>
   19ef0:	mov	r0, #1
   19ef4:	str	r0, [sl, #512]	; 0x200
   19ef8:	ldr	r6, [r8]
   19efc:	cmp	r6, #5
   19f00:	bne	19fb8 <spss_missingness_for_info+0xfc>
   19f04:	vldr	d8, [r8, #64]	; 0x40
   19f08:	vorr	d0, d8, d8
   19f0c:	vstr	d8, [sp]
   19f10:	bl	4d00 <__isnan@plt>
   19f14:	and	r0, r0, #1
   19f18:	mov	r1, #5
   19f1c:	b	19fcc <spss_missingness_for_info+0x110>
   19f20:	ldr	r6, [r8, #52]	; 0x34
   19f24:	cmp	r6, #1
   19f28:	blt	1a098 <spss_missingness_for_info+0x1dc>
   19f2c:	str	r6, [sl, #512]	; 0x200
   19f30:	mov	r7, r8
   19f34:	mov	r2, #0
   19f38:	mov	r4, #0
   19f3c:	ldr	r5, [r7], #88	; 0x58
   19f40:	cmp	r5, #5
   19f44:	bne	19f74 <spss_missingness_for_info+0xb8>
   19f48:	add	r0, r8, r4
   19f4c:	vldr	d8, [r0, #64]	; 0x40
   19f50:	vorr	d0, d8, d8
   19f54:	vstr	d8, [sp]
   19f58:	bl	4d00 <__isnan@plt>
   19f5c:	and	r0, r0, #1
   19f60:	bic	r1, r9, #3
   19f64:	mov	r2, #0
   19f68:	orr	r9, r0, r1
   19f6c:	mov	r0, #5
   19f70:	b	19f84 <spss_missingness_for_info+0xc8>
   19f74:	str	r7, [sp]
   19f78:	and	r9, r9, #252	; 0xfc
   19f7c:	mov	r0, #0
   19f80:	vldr	d8, [sp]
   19f84:	add	r1, sl, r4, lsl #2
   19f88:	add	r7, r7, #33	; 0x21
   19f8c:	add	r4, r4, #8
   19f90:	subs	r6, r6, #1
   19f94:	strb	r9, [r1, #29]
   19f98:	strb	r2, [r1, #28]
   19f9c:	str	r0, [r1, #24]
   19fa0:	vstr	d8, [r1, #16]
   19fa4:	add	r0, r1, #16
   19fa8:	vld1.64	{d16-d17}, [r0]
   19fac:	vst1.64	{d16-d17}, [r1]
   19fb0:	bne	19f40 <spss_missingness_for_info+0x84>
   19fb4:	b	1a098 <spss_missingness_for_info+0x1dc>
   19fb8:	add	r0, r8, #88	; 0x58
   19fbc:	mov	r1, #0
   19fc0:	str	r0, [sp]
   19fc4:	mov	r0, #0
   19fc8:	vldr	d8, [sp]
   19fcc:	strb	r0, [sl, #13]
   19fd0:	mov	r0, #0
   19fd4:	cmp	r6, #5
   19fd8:	strb	r0, [sl, #12]
   19fdc:	str	r1, [sl, #8]
   19fe0:	vstr	d8, [sl]
   19fe4:	bne	1a004 <spss_missingness_for_info+0x148>
   19fe8:	vldr	d8, [r8, #72]	; 0x48
   19fec:	vorr	d0, d8, d8
   19ff0:	vstr	d8, [sp]
   19ff4:	bl	4d00 <__isnan@plt>
   19ff8:	and	r0, r0, #1
   19ffc:	mov	r1, #5
   1a000:	b	1a014 <spss_missingness_for_info+0x158>
   1a004:	add	r1, r8, #121	; 0x79
   1a008:	str	r1, [sp]
   1a00c:	mov	r1, #0
   1a010:	vldr	d8, [sp]
   1a014:	strb	r0, [sl, #29]
   1a018:	mov	r0, #0
   1a01c:	strb	r0, [sl, #28]
   1a020:	str	r1, [sl, #24]
   1a024:	vstr	d8, [sl, #16]
   1a028:	ldr	r0, [r8, #52]	; 0x34
   1a02c:	cmp	r0, #3
   1a030:	bne	1a098 <spss_missingness_for_info+0x1dc>
   1a034:	mov	r0, #2
   1a038:	add	r5, sl, #48	; 0x30
   1a03c:	add	r4, sl, #32
   1a040:	cmp	r6, #5
   1a044:	str	r0, [sl, #512]	; 0x200
   1a048:	bne	1a068 <spss_missingness_for_info+0x1ac>
   1a04c:	vldr	d8, [r8, #80]	; 0x50
   1a050:	vorr	d0, d8, d8
   1a054:	vstr	d8, [sp]
   1a058:	bl	4d00 <__isnan@plt>
   1a05c:	and	r0, r0, #1
   1a060:	mov	r1, #5
   1a064:	b	1a07c <spss_missingness_for_info+0x1c0>
   1a068:	add	r0, r8, #154	; 0x9a
   1a06c:	mov	r1, #0
   1a070:	str	r0, [sp]
   1a074:	mov	r0, #0
   1a078:	vldr	d8, [sp]
   1a07c:	strb	r0, [sl, #61]	; 0x3d
   1a080:	mov	r0, #0
   1a084:	strb	r0, [sl, #60]	; 0x3c
   1a088:	str	r1, [sl, #56]	; 0x38
   1a08c:	vstr	d8, [sl, #48]	; 0x30
   1a090:	vld1.64	{d16-d17}, [r5]
   1a094:	vst1.64	{d16-d17}, [r4]
   1a098:	sub	sp, fp, #40	; 0x28
   1a09c:	vpop	{d8}
   1a0a0:	add	sp, sp, #4
   1a0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a0a8 <spss_init_variable_for_info>:
   1a0a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a0ac:	add	fp, sp, #24
   1a0b0:	sub	sp, sp, #528	; 0x210
   1a0b4:	mov	r7, r1
   1a0b8:	mov	r4, r0
   1a0bc:	mov	r0, #1
   1a0c0:	movw	r1, #2152	; 0x868
   1a0c4:	mov	r6, r2
   1a0c8:	bl	4778 <calloc@plt>
   1a0cc:	ldr	r1, [r4, #8]
   1a0d0:	str	r7, [r0, #2148]	; 0x864
   1a0d4:	mov	r5, r0
   1a0d8:	ldr	r0, [r4]
   1a0dc:	strd	r0, [r5]
   1a0e0:	ldr	r0, [r4, #20]
   1a0e4:	cmp	r0, #0
   1a0e8:	bne	1a0f4 <spss_init_variable_for_info+0x4c>
   1a0ec:	ldr	r0, [r4, #16]
   1a0f0:	lsl	r0, r0, #3
   1a0f4:	str	r0, [r5, #1596]	; 0x63c
   1a0f8:	mov	r2, r4
   1a0fc:	add	r0, r5, #8
   1a100:	ldrb	r1, [r2, #196]!	; 0xc4
   1a104:	cmp	r1, #0
   1a108:	beq	1a11c <spss_init_variable_for_info+0x74>
   1a10c:	str	r6, [sp]
   1a110:	mov	r1, #300	; 0x12c
   1a114:	mov	r3, #65	; 0x41
   1a118:	b	1a12c <spss_init_variable_for_info+0x84>
   1a11c:	add	r2, r4, #187	; 0xbb
   1a120:	mov	r1, #300	; 0x12c
   1a124:	mov	r3, #9
   1a128:	str	r6, [sp]
   1a12c:	bl	4c04 <readstat_convert@plt>
   1a130:	ldr	r3, [r4, #264]	; 0x108
   1a134:	cmp	r3, #0
   1a138:	beq	1a150 <spss_init_variable_for_info+0xa8>
   1a13c:	ldr	r2, [pc, #100]	; 1a1a8 <spss_init_variable_for_info+0x100>
   1a140:	add	r0, r5, #564	; 0x234
   1a144:	mov	r1, #1024	; 0x400
   1a148:	add	r2, pc, r2
   1a14c:	bl	4c4c <snprintf@plt>
   1a150:	add	r0, r5, #308	; 0x134
   1a154:	add	r2, r4, #24
   1a158:	mov	r1, #256	; 0x100
   1a15c:	bl	4dd8 <spss_format@plt>
   1a160:	add	r6, sp, #8
   1a164:	mov	r1, r4
   1a168:	mov	r0, r6
   1a16c:	bl	4eec <spss_missingness_for_info@plt>
   1a170:	movw	r0, #1608	; 0x648
   1a174:	mov	r1, r6
   1a178:	mov	r2, #520	; 0x208
   1a17c:	add	r0, r5, r0
   1a180:	bl	4910 <memcpy@plt>
   1a184:	ldr	r0, [r4, #268]	; 0x10c
   1a188:	str	r0, [r5, #2128]	; 0x850
   1a18c:	ldr	r0, [r4, #276]	; 0x114
   1a190:	cmp	r0, #0
   1a194:	ldreq	r0, [r4, #28]
   1a198:	str	r0, [r5, #2136]	; 0x858
   1a19c:	mov	r0, r5
   1a1a0:	sub	sp, fp, #24
   1a1a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a1a8:	.word	0x0000af94

0001a1ac <spss_measure_from_readstat_measure>:
   1a1ac:	sub	r1, r0, #1
   1a1b0:	cmp	r1, #3
   1a1b4:	movcs	r0, #0
   1a1b8:	bx	lr

0001a1bc <spss_measure_to_readstat_measure>:
   1a1bc:	sub	r1, r0, #1
   1a1c0:	cmp	r1, #3
   1a1c4:	movcs	r0, #0
   1a1c8:	bx	lr

0001a1cc <spss_alignment_from_readstat_alignment>:
   1a1cc:	sub	r1, r0, #2
   1a1d0:	cmp	r0, #3
   1a1d4:	clz	r1, r1
   1a1d8:	lsr	r1, r1, #5
   1a1dc:	lsl	r1, r1, #1
   1a1e0:	movweq	r1, #1
   1a1e4:	mov	r0, r1
   1a1e8:	bx	lr

0001a1ec <spss_alignment_to_readstat_alignment>:
   1a1ec:	cmp	r0, #2
   1a1f0:	movhi	r0, #0
   1a1f4:	bxhi	lr
   1a1f8:	ldr	r1, [pc, #8]	; 1a208 <spss_alignment_to_readstat_alignment+0x1c>
   1a1fc:	add	r1, pc, r1
   1a200:	ldr	r0, [r1, r0, lsl #2]
   1a204:	bx	lr
   1a208:	.word	0x0000b404

0001a20c <spss_format_for_variable>:
   1a20c:	push	{r4, r5, fp, lr}
   1a210:	add	fp, sp, #8
   1a214:	mov	r5, r0
   1a218:	mov	r0, #0
   1a21c:	mov	r4, r1
   1a220:	str	r0, [r1]
   1a224:	str	r0, [r1, #4]
   1a228:	str	r0, [r1, #8]
   1a22c:	ldr	r0, [r5]
   1a230:	cmp	r0, #0
   1a234:	beq	1a264 <spss_format_for_variable+0x58>
   1a238:	mov	r1, #5
   1a23c:	bic	r0, r0, #1
   1a240:	str	r1, [r4]
   1a244:	ldr	r1, [r5, #2136]	; 0x858
   1a248:	cmp	r1, #0
   1a24c:	movweq	r1, #8
   1a250:	cmp	r0, #4
   1a254:	moveq	r0, #2
   1a258:	str	r1, [r4, #4]
   1a25c:	streq	r0, [r4, #8]
   1a260:	b	1a28c <spss_format_for_variable+0x80>
   1a264:	mov	r0, #1
   1a268:	str	r0, [r4]
   1a26c:	ldr	r0, [r5, #2136]	; 0x858
   1a270:	cmp	r0, #0
   1a274:	bne	1a288 <spss_format_for_variable+0x7c>
   1a278:	ldr	r0, [r5, #1600]	; 0x640
   1a27c:	cmp	r0, #0
   1a280:	bne	1a288 <spss_format_for_variable+0x7c>
   1a284:	ldr	r0, [r5, #1596]	; 0x63c
   1a288:	str	r0, [r4, #4]
   1a28c:	ldrb	r0, [r5, #308]!	; 0x134
   1a290:	cmp	r0, #0
   1a294:	beq	1a2c4 <spss_format_for_variable+0xb8>
   1a298:	mov	r0, #0
   1a29c:	str	r0, [r4, #8]
   1a2a0:	mov	r0, r5
   1a2a4:	bl	4bd4 <strlen@plt>
   1a2a8:	mov	r1, r0
   1a2ac:	mov	r0, r5
   1a2b0:	mov	r2, r4
   1a2b4:	bl	491c <spss_parse_format@plt>
   1a2b8:	cmp	r0, #0
   1a2bc:	movwne	r0, #11
   1a2c0:	pop	{r4, r5, fp, pc}
   1a2c4:	mov	r0, #0
   1a2c8:	pop	{r4, r5, fp, pc}

0001a2cc <spss_parse_format>:
   1a2cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2d0:	add	fp, sp, #28
   1a2d4:	sub	sp, sp, #8
   1a2d8:	ldr	ip, [pc, #1712]	; 1a990 <spss_parse_format+0x6c4>
   1a2dc:	add	r7, r0, r1
   1a2e0:	cmp	r1, #0
   1a2e4:	add	ip, pc, ip
   1a2e8:	beq	1a704 <spss_parse_format+0x438>
   1a2ec:	mov	r9, #0
   1a2f0:	mov	r4, #1
   1a2f4:	ldr	r1, [pc, #1688]	; 1a994 <spss_parse_format+0x6c8>
   1a2f8:	add	r1, pc, r1
   1a2fc:	ldrb	r6, [r1, r4]
   1a300:	ldr	r1, [pc, #1680]	; 1a998 <spss_parse_format+0x6cc>
   1a304:	ldr	r3, [pc, #1680]	; 1a99c <spss_parse_format+0x6d0>
   1a308:	add	r1, pc, r1
   1a30c:	add	r3, pc, r3
   1a310:	cmp	r6, #0
   1a314:	add	r1, r1, r4, lsl #1
   1a318:	ldrsh	r1, [r1]
   1a31c:	add	r5, r3, r1
   1a320:	ldr	r1, [pc, #1656]	; 1a9a0 <spss_parse_format+0x6d4>
   1a324:	add	r1, pc, r1
   1a328:	add	r1, r1, r4, lsl #1
   1a32c:	ldrsh	sl, [r1]
   1a330:	beq	1a3ac <spss_parse_format+0xe0>
   1a334:	add	lr, r5, r6
   1a338:	str	r9, [sp, #4]
   1a33c:	mov	r8, r0
   1a340:	mov	r0, r7
   1a344:	str	r4, [sp]
   1a348:	sub	r9, lr, #1
   1a34c:	cmp	r9, r5
   1a350:	bcc	1a388 <spss_parse_format+0xbc>
   1a354:	ldrb	r3, [r8]
   1a358:	mov	r1, r5
   1a35c:	sub	ip, r9, r1
   1a360:	mov	r7, r1
   1a364:	ldrb	r4, [r7, ip, asr #1]!
   1a368:	cmp	r3, r4
   1a36c:	bcs	1a378 <spss_parse_format+0xac>
   1a370:	sub	r9, r7, #1
   1a374:	b	1a380 <spss_parse_format+0xb4>
   1a378:	bls	1a428 <spss_parse_format+0x15c>
   1a37c:	add	r1, r7, #1
   1a380:	cmp	r9, r1
   1a384:	bcs	1a35c <spss_parse_format+0x90>
   1a388:	mov	r7, r0
   1a38c:	ldr	r9, [sp, #4]
   1a390:	ldr	r0, [pc, #1548]	; 1a9a4 <spss_parse_format+0x6d8>
   1a394:	ldr	r4, [sp]
   1a398:	add	sl, r6, sl
   1a39c:	add	r0, pc, r0
   1a3a0:	mov	ip, r0
   1a3a4:	mov	r0, r8
   1a3a8:	b	1a3b0 <spss_parse_format+0xe4>
   1a3ac:	mov	lr, r5
   1a3b0:	ldr	r1, [pc, #1520]	; 1a9a8 <spss_parse_format+0x6dc>
   1a3b4:	add	r1, pc, r1
   1a3b8:	ldrb	r6, [r1, r4]
   1a3bc:	cmp	r6, #0
   1a3c0:	beq	1a46c <spss_parse_format+0x1a0>
   1a3c4:	add	r1, lr, r6, lsl #1
   1a3c8:	sub	r5, r1, #2
   1a3cc:	cmp	r5, lr
   1a3d0:	bcc	1a468 <spss_parse_format+0x19c>
   1a3d4:	ldrb	r3, [r0]
   1a3d8:	mov	ip, r9
   1a3dc:	mov	r9, r7
   1a3e0:	mov	r8, r0
   1a3e4:	mov	r7, lr
   1a3e8:	mvn	r0, #1
   1a3ec:	sub	r1, r5, r7
   1a3f0:	and	r4, r0, r1, asr #1
   1a3f4:	mov	r1, r7
   1a3f8:	ldrb	r4, [r1, r4]!
   1a3fc:	cmp	r3, r4
   1a400:	bcs	1a40c <spss_parse_format+0x140>
   1a404:	sub	r5, r1, #2
   1a408:	b	1a41c <spss_parse_format+0x150>
   1a40c:	ldrb	r7, [r1, #1]
   1a410:	cmp	r3, r7
   1a414:	bls	1a44c <spss_parse_format+0x180>
   1a418:	add	r7, r1, #2
   1a41c:	cmp	r5, r7
   1a420:	bcs	1a3ec <spss_parse_format+0x120>
   1a424:	b	1a454 <spss_parse_format+0x188>
   1a428:	sub	r1, sl, r5
   1a42c:	ldr	r9, [sp, #4]
   1a430:	add	sl, r1, r7
   1a434:	mov	r7, r0
   1a438:	ldr	r0, [pc, #1412]	; 1a9c4 <spss_parse_format+0x6f8>
   1a43c:	add	r0, pc, r0
   1a440:	mov	ip, r0
   1a444:	mov	r0, r8
   1a448:	b	1a46c <spss_parse_format+0x1a0>
   1a44c:	sub	r1, r1, lr
   1a450:	asr	r6, r1, #1
   1a454:	mov	r7, r9
   1a458:	mov	r9, ip
   1a45c:	ldr	ip, [pc, #1352]	; 1a9ac <spss_parse_format+0x6e0>
   1a460:	mov	r0, r8
   1a464:	add	ip, pc, ip
   1a468:	add	sl, r6, sl
   1a46c:	ldr	r1, [pc, #1340]	; 1a9b0 <spss_parse_format+0x6e4>
   1a470:	add	r1, pc, r1
   1a474:	ldrb	r6, [r1, sl]
   1a478:	ldr	r1, [pc, #1332]	; 1a9b4 <spss_parse_format+0x6e8>
   1a47c:	add	r1, pc, r1
   1a480:	ldrb	r1, [r1, r6]
   1a484:	cmp	r1, #0
   1a488:	beq	1a6e0 <spss_parse_format+0x414>
   1a48c:	ldrb	r4, [ip, r1]
   1a490:	cmp	r4, #0
   1a494:	beq	1a6e0 <spss_parse_format+0x414>
   1a498:	add	r1, ip, r1
   1a49c:	add	r5, r1, #1
   1a4a0:	ldrb	r1, [r5]
   1a4a4:	sub	r4, r4, #1
   1a4a8:	cmp	r1, #40	; 0x28
   1a4ac:	bhi	1a6d4 <spss_parse_format+0x408>
   1a4b0:	add	r3, pc, #4
   1a4b4:	ldr	r1, [r3, r1, lsl #2]
   1a4b8:	add	pc, r3, r1
   1a4bc:	.word	0x000000a4
   1a4c0:	.word	0x000000ac
   1a4c4:	.word	0x000000c0
   1a4c8:	.word	0x00000218
   1a4cc:	.word	0x000000c8
   1a4d0:	.word	0x000000d0
   1a4d4:	.word	0x000000d8
   1a4d8:	.word	0x000000e0
   1a4dc:	.word	0x000000e8
   1a4e0:	.word	0x000000f0
   1a4e4:	.word	0x000000f8
   1a4e8:	.word	0x00000100
   1a4ec:	.word	0x00000108
   1a4f0:	.word	0x00000110
   1a4f4:	.word	0x00000118
   1a4f8:	.word	0x00000120
   1a4fc:	.word	0x00000128
   1a500:	.word	0x00000130
   1a504:	.word	0x00000138
   1a508:	.word	0x00000140
   1a50c:	.word	0x0000014c
   1a510:	.word	0x00000154
   1a514:	.word	0x00000160
   1a518:	.word	0x0000016c
   1a51c:	.word	0x00000178
   1a520:	.word	0x00000180
   1a524:	.word	0x0000018c
   1a528:	.word	0x00000194
   1a52c:	.word	0x0000019c
   1a530:	.word	0x000001a4
   1a534:	.word	0x000001ac
   1a538:	.word	0x000001b4
   1a53c:	.word	0x000001c0
   1a540:	.word	0x000001c8
   1a544:	.word	0x000001d0
   1a548:	.word	0x000001d8
   1a54c:	.word	0x000001e0
   1a550:	.word	0x000001e8
   1a554:	.word	0x000001f0
   1a558:	.word	0x000001fc
   1a55c:	.word	0x00000208
   1a560:	mov	r9, #0
   1a564:	b	1a6d4 <spss_parse_format+0x408>
   1a568:	ldrb	r1, [r0]
   1a56c:	add	r3, r9, r9, lsl #2
   1a570:	add	r1, r1, r3, lsl #1
   1a574:	sub	r9, r1, #48	; 0x30
   1a578:	b	1a6d4 <spss_parse_format+0x408>
   1a57c:	str	r9, [r2, #4]
   1a580:	b	1a6d4 <spss_parse_format+0x408>
   1a584:	mov	r1, #1
   1a588:	b	1a6b0 <spss_parse_format+0x3e4>
   1a58c:	mov	r1, #2
   1a590:	b	1a6b0 <spss_parse_format+0x3e4>
   1a594:	mov	r1, #3
   1a598:	b	1a6b0 <spss_parse_format+0x3e4>
   1a59c:	mov	r1, #4
   1a5a0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5a4:	mov	r1, #5
   1a5a8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5ac:	mov	r1, #6
   1a5b0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5b4:	mov	r1, #7
   1a5b8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5bc:	mov	r1, #8
   1a5c0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5c4:	mov	r1, #9
   1a5c8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5cc:	mov	r1, #10
   1a5d0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5d4:	mov	r1, #11
   1a5d8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5dc:	mov	r1, #12
   1a5e0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5e4:	mov	r1, #15
   1a5e8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5ec:	mov	r1, #16
   1a5f0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5f4:	mov	r1, #17
   1a5f8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a5fc:	mov	r1, #11
   1a600:	mov	r3, #20
   1a604:	b	1a6cc <spss_parse_format+0x400>
   1a608:	mov	r1, #21
   1a60c:	b	1a6b0 <spss_parse_format+0x3e4>
   1a610:	mov	r1, #20
   1a614:	mov	r3, #22
   1a618:	b	1a6cc <spss_parse_format+0x400>
   1a61c:	mov	r1, #19
   1a620:	mov	r3, #41	; 0x29
   1a624:	b	1a6cc <spss_parse_format+0x400>
   1a628:	mov	r1, #10
   1a62c:	mov	r3, #23
   1a630:	b	1a6cc <spss_parse_format+0x400>
   1a634:	mov	r1, #24
   1a638:	b	1a6b0 <spss_parse_format+0x3e4>
   1a63c:	mov	r1, #23
   1a640:	mov	r3, #25
   1a644:	b	1a6cc <spss_parse_format+0x400>
   1a648:	mov	r1, #40	; 0x28
   1a64c:	b	1a6b0 <spss_parse_format+0x3e4>
   1a650:	mov	r1, #26
   1a654:	b	1a6b0 <spss_parse_format+0x3e4>
   1a658:	mov	r1, #27
   1a65c:	b	1a6b0 <spss_parse_format+0x3e4>
   1a660:	mov	r1, #28
   1a664:	b	1a6b0 <spss_parse_format+0x3e4>
   1a668:	mov	r1, #29
   1a66c:	b	1a6b0 <spss_parse_format+0x3e4>
   1a670:	mov	r1, #10
   1a674:	mov	r3, #30
   1a678:	b	1a6cc <spss_parse_format+0x400>
   1a67c:	mov	r1, #31
   1a680:	b	1a6b0 <spss_parse_format+0x3e4>
   1a684:	mov	r1, #32
   1a688:	b	1a6b0 <spss_parse_format+0x3e4>
   1a68c:	mov	r1, #33	; 0x21
   1a690:	b	1a6b0 <spss_parse_format+0x3e4>
   1a694:	mov	r1, #34	; 0x22
   1a698:	b	1a6b0 <spss_parse_format+0x3e4>
   1a69c:	mov	r1, #35	; 0x23
   1a6a0:	b	1a6b0 <spss_parse_format+0x3e4>
   1a6a4:	mov	r1, #36	; 0x24
   1a6a8:	b	1a6b0 <spss_parse_format+0x3e4>
   1a6ac:	mov	r1, #37	; 0x25
   1a6b0:	str	r1, [r2]
   1a6b4:	b	1a6d4 <spss_parse_format+0x408>
   1a6b8:	mov	r1, #10
   1a6bc:	mov	r3, #38	; 0x26
   1a6c0:	b	1a6cc <spss_parse_format+0x400>
   1a6c4:	mov	r1, #10
   1a6c8:	mov	r3, #39	; 0x27
   1a6cc:	str	r3, [r2]
   1a6d0:	str	r1, [r2, #4]
   1a6d4:	add	r5, r5, #1
   1a6d8:	cmp	r4, #0
   1a6dc:	bne	1a4a0 <spss_parse_format+0x1d4>
   1a6e0:	cmp	r6, #1
   1a6e4:	beq	1a96c <spss_parse_format+0x6a0>
   1a6e8:	ldr	r1, [pc, #712]	; 1a9b8 <spss_parse_format+0x6ec>
   1a6ec:	add	r0, r0, #1
   1a6f0:	cmp	r0, r7
   1a6f4:	add	r1, pc, r1
   1a6f8:	ldrb	r4, [r1, r6]
   1a6fc:	bne	1a2f4 <spss_parse_format+0x28>
   1a700:	b	1a70c <spss_parse_format+0x440>
   1a704:	mov	r4, #1
   1a708:	mov	r9, #0
   1a70c:	ldr	r0, [pc, #680]	; 1a9bc <spss_parse_format+0x6f0>
   1a710:	ldr	r3, [pc, #680]	; 1a9c0 <spss_parse_format+0x6f4>
   1a714:	add	r0, pc, r0
   1a718:	add	r3, pc, r3
   1a71c:	ldrb	r1, [r0, r4]
   1a720:	ldrb	r0, [r3, r1]
   1a724:	cmp	r0, #0
   1a728:	beq	1a974 <spss_parse_format+0x6a8>
   1a72c:	add	r1, r1, r3
   1a730:	mov	r6, r7
   1a734:	add	r7, r1, #1
   1a738:	ldrb	r1, [r7]
   1a73c:	sub	r0, r0, #1
   1a740:	sub	r1, r1, #2
   1a744:	cmp	r1, #38	; 0x26
   1a748:	bhi	1a954 <spss_parse_format+0x688>
   1a74c:	add	r3, pc, #4
   1a750:	ldr	r1, [r3, r1, lsl #2]
   1a754:	add	pc, r3, r1
   1a758:	.word	0x0000009c
   1a75c:	.word	0x000000a4
   1a760:	.word	0x000000ac
   1a764:	.word	0x000000b4
   1a768:	.word	0x000000bc
   1a76c:	.word	0x000000c4
   1a770:	.word	0x000000cc
   1a774:	.word	0x000000d4
   1a778:	.word	0x000000dc
   1a77c:	.word	0x000000e4
   1a780:	.word	0x000000ec
   1a784:	.word	0x000000f4
   1a788:	.word	0x000000fc
   1a78c:	.word	0x00000104
   1a790:	.word	0x0000010c
   1a794:	.word	0x00000114
   1a798:	.word	0x0000011c
   1a79c:	.word	0x00000124
   1a7a0:	.word	0x00000130
   1a7a4:	.word	0x00000138
   1a7a8:	.word	0x00000144
   1a7ac:	.word	0x00000150
   1a7b0:	.word	0x0000015c
   1a7b4:	.word	0x00000164
   1a7b8:	.word	0x00000170
   1a7bc:	.word	0x00000178
   1a7c0:	.word	0x00000180
   1a7c4:	.word	0x00000188
   1a7c8:	.word	0x00000190
   1a7cc:	.word	0x00000198
   1a7d0:	.word	0x000001a4
   1a7d4:	.word	0x000001ac
   1a7d8:	.word	0x000001b4
   1a7dc:	.word	0x000001bc
   1a7e0:	.word	0x000001c4
   1a7e4:	.word	0x000001cc
   1a7e8:	.word	0x000001d4
   1a7ec:	.word	0x000001e0
   1a7f0:	.word	0x000001ec
   1a7f4:	str	r9, [r2, #4]
   1a7f8:	b	1a954 <spss_parse_format+0x688>
   1a7fc:	str	r9, [r2, #8]
   1a800:	b	1a954 <spss_parse_format+0x688>
   1a804:	mov	r1, #1
   1a808:	b	1a930 <spss_parse_format+0x664>
   1a80c:	mov	r1, #2
   1a810:	b	1a930 <spss_parse_format+0x664>
   1a814:	mov	r1, #3
   1a818:	b	1a930 <spss_parse_format+0x664>
   1a81c:	mov	r1, #4
   1a820:	b	1a930 <spss_parse_format+0x664>
   1a824:	mov	r1, #5
   1a828:	b	1a930 <spss_parse_format+0x664>
   1a82c:	mov	r1, #6
   1a830:	b	1a930 <spss_parse_format+0x664>
   1a834:	mov	r1, #7
   1a838:	b	1a930 <spss_parse_format+0x664>
   1a83c:	mov	r1, #8
   1a840:	b	1a930 <spss_parse_format+0x664>
   1a844:	mov	r1, #9
   1a848:	b	1a930 <spss_parse_format+0x664>
   1a84c:	mov	r1, #10
   1a850:	b	1a930 <spss_parse_format+0x664>
   1a854:	mov	r1, #11
   1a858:	b	1a930 <spss_parse_format+0x664>
   1a85c:	mov	r1, #12
   1a860:	b	1a930 <spss_parse_format+0x664>
   1a864:	mov	r1, #15
   1a868:	b	1a930 <spss_parse_format+0x664>
   1a86c:	mov	r1, #16
   1a870:	b	1a930 <spss_parse_format+0x664>
   1a874:	mov	r1, #17
   1a878:	b	1a930 <spss_parse_format+0x664>
   1a87c:	mov	r1, #11
   1a880:	mov	r3, #20
   1a884:	b	1a94c <spss_parse_format+0x680>
   1a888:	mov	r1, #21
   1a88c:	b	1a930 <spss_parse_format+0x664>
   1a890:	mov	r1, #20
   1a894:	mov	r3, #22
   1a898:	b	1a94c <spss_parse_format+0x680>
   1a89c:	mov	r1, #19
   1a8a0:	mov	r3, #41	; 0x29
   1a8a4:	b	1a94c <spss_parse_format+0x680>
   1a8a8:	mov	r1, #10
   1a8ac:	mov	r3, #23
   1a8b0:	b	1a94c <spss_parse_format+0x680>
   1a8b4:	mov	r1, #24
   1a8b8:	b	1a930 <spss_parse_format+0x664>
   1a8bc:	mov	r1, #23
   1a8c0:	mov	r3, #25
   1a8c4:	b	1a94c <spss_parse_format+0x680>
   1a8c8:	mov	r1, #40	; 0x28
   1a8cc:	b	1a930 <spss_parse_format+0x664>
   1a8d0:	mov	r1, #26
   1a8d4:	b	1a930 <spss_parse_format+0x664>
   1a8d8:	mov	r1, #27
   1a8dc:	b	1a930 <spss_parse_format+0x664>
   1a8e0:	mov	r1, #28
   1a8e4:	b	1a930 <spss_parse_format+0x664>
   1a8e8:	mov	r1, #29
   1a8ec:	b	1a930 <spss_parse_format+0x664>
   1a8f0:	mov	r1, #10
   1a8f4:	mov	r3, #30
   1a8f8:	b	1a94c <spss_parse_format+0x680>
   1a8fc:	mov	r1, #31
   1a900:	b	1a930 <spss_parse_format+0x664>
   1a904:	mov	r1, #32
   1a908:	b	1a930 <spss_parse_format+0x664>
   1a90c:	mov	r1, #33	; 0x21
   1a910:	b	1a930 <spss_parse_format+0x664>
   1a914:	mov	r1, #34	; 0x22
   1a918:	b	1a930 <spss_parse_format+0x664>
   1a91c:	mov	r1, #35	; 0x23
   1a920:	b	1a930 <spss_parse_format+0x664>
   1a924:	mov	r1, #36	; 0x24
   1a928:	b	1a930 <spss_parse_format+0x664>
   1a92c:	mov	r1, #37	; 0x25
   1a930:	str	r1, [r2]
   1a934:	b	1a954 <spss_parse_format+0x688>
   1a938:	mov	r1, #10
   1a93c:	mov	r3, #38	; 0x26
   1a940:	b	1a94c <spss_parse_format+0x680>
   1a944:	mov	r1, #10
   1a948:	mov	r3, #39	; 0x27
   1a94c:	str	r3, [r2]
   1a950:	str	r1, [r2, #4]
   1a954:	add	r7, r7, #1
   1a958:	cmp	r0, #0
   1a95c:	bne	1a738 <spss_parse_format+0x46c>
   1a960:	mov	r7, r6
   1a964:	mov	r0, r6
   1a968:	b	1a978 <spss_parse_format+0x6ac>
   1a96c:	mov	r4, #0
   1a970:	b	1a978 <spss_parse_format+0x6ac>
   1a974:	mov	r0, r7
   1a978:	subs	r0, r0, r7
   1a97c:	movwne	r0, #5
   1a980:	cmp	r4, #67	; 0x43
   1a984:	movle	r0, #5
   1a988:	sub	sp, fp, #28
   1a98c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a990:	.word	0x0000b948
   1a994:	.word	0x0000b5de
   1a998:	.word	0x0000b422
   1a99c:	.word	0x0000b300
   1a9a0:	.word	0x0000b4dc
   1a9a4:	.word	0x0000b890
   1a9a8:	.word	0x0000b58d
   1a9ac:	.word	0x0000b7c8
   1a9b0:	.word	0x0000b53c
   1a9b4:	.word	0x0000b720
   1a9b8:	.word	0x0000b418
   1a9bc:	.word	0x0000b600
   1a9c0:	.word	0x0000b514
   1a9c4:	.word	0x0000b7f0

0001a9c8 <dta_ctx_alloc>:
   1a9c8:	push	{r4, sl, fp, lr}
   1a9cc:	add	fp, sp, #8
   1a9d0:	mov	r4, r0
   1a9d4:	mov	r0, #1
   1a9d8:	mov	r1, #544	; 0x220
   1a9dc:	bl	4778 <calloc@plt>
   1a9e0:	cmp	r0, #0
   1a9e4:	strne	r4, [r0, #280]	; 0x118
   1a9e8:	moveq	r0, #0
   1a9ec:	pop	{r4, sl, fp, pc}

0001a9f0 <dta_ctx_init>:
   1a9f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9f4:	add	fp, sp, #28
   1a9f8:	sub	sp, sp, #4
   1a9fc:	mov	r4, r0
   1aa00:	ldr	r0, [fp, #12]
   1aa04:	mov	r5, #24
   1aa08:	sub	r0, r0, #104	; 0x68
   1aa0c:	uxtb	r0, r0
   1aa10:	cmp	r0, #15
   1aa14:	bls	1aa24 <dta_ctx_init+0x34>
   1aa18:	mov	r0, r5
   1aa1c:	sub	sp, fp, #28
   1aa20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa24:	ldr	r0, [fp, #8]
   1aa28:	mov	r9, r3
   1aa2c:	mov	r8, r2
   1aa30:	mov	r7, r1
   1aa34:	add	r5, r4, #152	; 0x98
   1aa38:	mov	sl, #2
   1aa3c:	mov	r6, #2
   1aa40:	cmp	r0, #2
   1aa44:	movweq	r6, #1
   1aa48:	bl	48b0 <machine_is_little_endian@plt>
   1aa4c:	str	r6, [r4, #232]	; 0xe8
   1aa50:	ldr	r6, [fp, #12]
   1aa54:	cmp	r0, #0
   1aa58:	ldr	r0, [fp, #8]
   1aa5c:	movweq	sl, #1
   1aa60:	strd	r6, [r4, #144]	; 0x90
   1aa64:	subs	r0, sl, r0
   1aa68:	ldrb	r1, [r4, #192]	; 0xc0
   1aa6c:	movwne	r0, #1
   1aa70:	cmp	r7, #0
   1aa74:	bic	r1, r1, #1
   1aa78:	orr	r1, r1, r0
   1aa7c:	strb	r1, [r4, #192]	; 0xc0
   1aa80:	strd	r8, [r5]
   1aa84:	beq	1aaa4 <dta_ctx_init+0xb4>
   1aa88:	mov	r0, r7
   1aa8c:	mov	r1, #4
   1aa90:	bl	49a0 <readstat_calloc@plt>
   1aa94:	cmp	r0, #0
   1aa98:	str	r0, [r4, #228]	; 0xe4
   1aa9c:	beq	1ab24 <dta_ctx_init+0x134>
   1aaa0:	ldrb	r1, [r4, #192]	; 0xc0
   1aaa4:	ldr	r8, [fp, #20]
   1aaa8:	and	r2, r1, #253	; 0xfd
   1aaac:	add	r0, r4, #208	; 0xd0
   1aab0:	cmp	r6, #105	; 0x69
   1aab4:	strb	r2, [r4, #192]	; 0xc0
   1aab8:	bcs	1aaf4 <dta_ctx_init+0x104>
   1aabc:	mov	r3, #0
   1aac0:	str	r3, [r4, #92]	; 0x5c
   1aac4:	strb	r3, [r4, #20]
   1aac8:	mov	r3, #7
   1aacc:	str	r3, [r4, #80]	; 0x50
   1aad0:	mov	r3, #9
   1aad4:	cmp	r6, #107	; 0x6b
   1aad8:	str	r3, [r4, #96]	; 0x60
   1aadc:	str	r3, [r4, #76]	; 0x4c
   1aae0:	str	r3, [r4, #84]	; 0x54
   1aae4:	add	r3, r4, #88	; 0x58
   1aae8:	bhi	1ab80 <dta_ctx_init+0x190>
   1aaec:	mov	r7, #32
   1aaf0:	b	1ab84 <dta_ctx_init+0x194>
   1aaf4:	cmp	r6, #114	; 0x72
   1aaf8:	bcs	1ab2c <dta_ctx_init+0x13c>
   1aafc:	mov	r3, #12
   1ab00:	cmp	r6, #110	; 0x6e
   1ab04:	str	r3, [r4, #80]	; 0x50
   1ab08:	bhi	1ab5c <dta_ctx_init+0x16c>
   1ab0c:	mov	r3, #0
   1ab10:	strb	r3, [r4, #20]
   1ab14:	beq	1ab64 <dta_ctx_init+0x174>
   1ab18:	mov	r3, #2
   1ab1c:	str	r3, [r4, #92]	; 0x5c
   1ab20:	b	1aad0 <dta_ctx_init+0xe0>
   1ab24:	mov	r5, #3
   1ab28:	b	1aa18 <dta_ctx_init+0x28>
   1ab2c:	cmp	r6, #117	; 0x75
   1ab30:	bhi	1abc4 <dta_ctx_init+0x1d4>
   1ab34:	mov	r3, #49	; 0x31
   1ab38:	str	r3, [r4, #80]	; 0x50
   1ab3c:	bne	1ab5c <dta_ctx_init+0x16c>
   1ab40:	mov	r3, #4
   1ab44:	str	r3, [r4, #112]	; 0x70
   1ab48:	str	r3, [r4, #116]	; 0x74
   1ab4c:	mov	r3, #1
   1ab50:	str	r3, [r4, #8]
   1ab54:	mov	r3, #117	; 0x75
   1ab58:	b	1ab60 <dta_ctx_init+0x170>
   1ab5c:	mov	r3, #111	; 0x6f
   1ab60:	strb	r3, [r4, #20]
   1ab64:	mov	r3, #33	; 0x21
   1ab68:	mov	r7, #4
   1ab6c:	str	r3, [r4, #84]	; 0x54
   1ab70:	str	r7, [r4, #92]	; 0x5c
   1ab74:	str	r3, [r4, #96]	; 0x60
   1ab78:	str	r3, [r4, #76]	; 0x4c
   1ab7c:	add	r3, r4, #88	; 0x58
   1ab80:	mov	r7, #81	; 0x51
   1ab84:	cmp	r6, #104	; 0x68
   1ab88:	str	r7, [r3]
   1ab8c:	str	r7, [r4, #4]
   1ab90:	bhi	1ac04 <dta_ctx_init+0x214>
   1ab94:	mov	r2, #2
   1ab98:	mov	r3, #12
   1ab9c:	and	r1, r1, #249	; 0xf9
   1aba0:	str	r2, [r4, #100]	; 0x64
   1aba4:	str	r3, [r4, #104]	; 0x68
   1aba8:	str	r2, [r4, #108]	; 0x6c
   1abac:	mov	r2, #0
   1abb0:	str	r2, [r4, #16]
   1abb4:	mov	r2, #1
   1abb8:	str	r2, [r4, #24]
   1abbc:	strb	r1, [r4, #192]	; 0xc0
   1abc0:	b	1ac54 <dta_ctx_init+0x264>
   1abc4:	add	r6, pc, #604	; 0x25c
   1abc8:	mov	r7, #6
   1abcc:	add	r3, r4, #76	; 0x4c
   1abd0:	vld1.64	{d16-d17}, [r6]
   1abd4:	mov	r6, #2
   1abd8:	strd	r6, [r4, #112]	; 0x70
   1abdc:	mov	r7, #117	; 0x75
   1abe0:	str	r6, [r4, #8]
   1abe4:	mov	r6, #4
   1abe8:	strb	r7, [r4, #20]
   1abec:	mov	r7, #129	; 0x81
   1abf0:	str	r6, [r4, #92]	; 0x5c
   1abf4:	str	r7, [r4, #96]	; 0x60
   1abf8:	vst1.32	{d16-d17}, [r3]
   1abfc:	movw	r3, #321	; 0x141
   1ac00:	str	r3, [r4, #4]
   1ac04:	ldr	r5, [fp, #12]
   1ac08:	mov	r6, #18
   1ac0c:	mov	r7, #4
   1ac10:	mov	r3, #3
   1ac14:	str	r6, [r4, #16]
   1ac18:	mov	r6, #129	; 0x81
   1ac1c:	str	r7, [r4, #100]	; 0x64
   1ac20:	cmp	r5, #118	; 0x76
   1ac24:	movwcc	r6, #33	; 0x21
   1ac28:	str	r6, [r4, #104]	; 0x68
   1ac2c:	ldr	r6, [fp, #12]
   1ac30:	str	r3, [r4, #108]	; 0x6c
   1ac34:	cmp	r6, #117	; 0x75
   1ac38:	bcs	1ac8c <dta_ctx_init+0x29c>
   1ac3c:	mov	r2, #1
   1ac40:	and	r1, r1, #249	; 0xf9
   1ac44:	cmp	r6, #112	; 0x70
   1ac48:	str	r2, [r4, #24]
   1ac4c:	strb	r1, [r4, #192]	; 0xc0
   1ac50:	bhi	1ac9c <dta_ctx_init+0x2ac>
   1ac54:	mvn	r2, #-2147483647	; 0x80000001
   1ac58:	mvn	r1, #-2130706432	; 0x81000000
   1ac5c:	str	r2, [r4, #196]	; 0xc4
   1ac60:	str	r1, [r4, #200]	; 0xc8
   1ac64:	movw	r1, #32766	; 0x7ffe
   1ac68:	mvn	r2, #0
   1ac6c:	strh	r1, [r4, #194]	; 0xc2
   1ac70:	mov	r1, #126	; 0x7e
   1ac74:	strb	r1, [r4, #193]	; 0xc1
   1ac78:	movw	r1, #65535	; 0xffff
   1ac7c:	str	r2, [r0]
   1ac80:	movt	r1, #32735	; 0x7fdf
   1ac84:	str	r1, [r0, #4]
   1ac88:	b	1acd4 <dta_ctx_init+0x2e4>
   1ac8c:	mov	r1, #2
   1ac90:	str	r1, [r4, #24]
   1ac94:	orr	r1, r2, #4
   1ac98:	strb	r1, [r4, #192]	; 0xc0
   1ac9c:	mvn	r3, #-2147483621	; 0x8000001b
   1aca0:	mvn	r2, #-2130706432	; 0x81000000
   1aca4:	str	r3, [r4, #196]	; 0xc4
   1aca8:	movw	r3, #65535	; 0xffff
   1acac:	str	r2, [r4, #200]	; 0xc8
   1acb0:	movw	r2, #32740	; 0x7fe4
   1acb4:	strh	r2, [r4, #194]	; 0xc2
   1acb8:	mov	r2, #100	; 0x64
   1acbc:	movt	r3, #32735	; 0x7fdf
   1acc0:	strb	r2, [r4, #193]	; 0xc1
   1acc4:	mvn	r2, #0
   1acc8:	strd	r2, [r0]
   1accc:	orr	r0, r1, #8
   1acd0:	strb	r0, [r4, #192]	; 0xc0
   1acd4:	cmp	r8, #0
   1acd8:	beq	1ad30 <dta_ctx_init+0x340>
   1acdc:	ldr	r1, [fp, #16]
   1ace0:	cmp	r1, #0
   1ace4:	bne	1ad1c <dta_ctx_init+0x32c>
   1ace8:	cmp	r6, #117	; 0x75
   1acec:	bhi	1acfc <dta_ctx_init+0x30c>
   1acf0:	ldr	r1, [pc, #320]	; 1ae38 <dta_ctx_init+0x448>
   1acf4:	add	r1, pc, r1
   1acf8:	b	1ad1c <dta_ctx_init+0x32c>
   1acfc:	ldr	r1, [pc, #312]	; 1ae3c <dta_ctx_init+0x44c>
   1ad00:	mov	r0, r8
   1ad04:	add	r1, pc, r1
   1ad08:	bl	4808 <strcmp@plt>
   1ad0c:	cmp	r0, #0
   1ad10:	beq	1ae20 <dta_ctx_init+0x430>
   1ad14:	ldr	r1, [pc, #292]	; 1ae40 <dta_ctx_init+0x450>
   1ad18:	add	r1, pc, r1
   1ad1c:	mov	r0, r8
   1ad20:	bl	4b08 <iconv_open@plt>
   1ad24:	str	r0, [r4, #236]	; 0xec
   1ad28:	cmn	r0, #1
   1ad2c:	beq	1ae10 <dta_ctx_init+0x420>
   1ad30:	ldr	r1, [r4, #148]	; 0x94
   1ad34:	cmp	r6, #119	; 0x77
   1ad38:	mov	r0, #2
   1ad3c:	movwcc	r0, #1
   1ad40:	add	r1, r1, #1
   1ad44:	lsl	r0, r1, r0
   1ad48:	str	r0, [r4, #48]	; 0x30
   1ad4c:	bl	4bf8 <readstat_malloc@plt>
   1ad50:	mov	r5, #3
   1ad54:	cmp	r0, #0
   1ad58:	str	r0, [r4, #44]	; 0x2c
   1ad5c:	beq	1aa18 <dta_ctx_init+0x28>
   1ad60:	ldr	r1, [r4, #148]	; 0x94
   1ad64:	cmp	r1, #1
   1ad68:	blt	1ae00 <dta_ctx_init+0x410>
   1ad6c:	lsl	r0, r1, #1
   1ad70:	add	r7, r4, #76	; 0x4c
   1ad74:	str	r0, [r4, #32]
   1ad78:	ldm	r7, {r2, r3, r7}
   1ad7c:	ldr	r6, [r4, #88]	; 0x58
   1ad80:	mul	r2, r2, r1
   1ad84:	str	r2, [r4, #40]	; 0x28
   1ad88:	mul	r2, r3, r1
   1ad8c:	str	r2, [r4, #56]	; 0x38
   1ad90:	mul	r2, r7, r1
   1ad94:	mul	r1, r6, r1
   1ad98:	str	r2, [r4, #64]	; 0x40
   1ad9c:	str	r1, [r4, #72]	; 0x48
   1ada0:	bl	4bf8 <readstat_malloc@plt>
   1ada4:	cmp	r0, #0
   1ada8:	str	r0, [r4, #28]
   1adac:	beq	1aa18 <dta_ctx_init+0x28>
   1adb0:	ldr	r0, [r4, #40]	; 0x28
   1adb4:	bl	4bf8 <readstat_malloc@plt>
   1adb8:	cmp	r0, #0
   1adbc:	str	r0, [r4, #36]	; 0x24
   1adc0:	beq	1aa18 <dta_ctx_init+0x28>
   1adc4:	ldr	r0, [r4, #56]	; 0x38
   1adc8:	bl	4bf8 <readstat_malloc@plt>
   1adcc:	cmp	r0, #0
   1add0:	str	r0, [r4, #52]	; 0x34
   1add4:	beq	1aa18 <dta_ctx_init+0x28>
   1add8:	ldr	r0, [r4, #64]	; 0x40
   1addc:	bl	4bf8 <readstat_malloc@plt>
   1ade0:	cmp	r0, #0
   1ade4:	str	r0, [r4, #60]	; 0x3c
   1ade8:	beq	1aa18 <dta_ctx_init+0x28>
   1adec:	ldr	r0, [r4, #72]	; 0x48
   1adf0:	bl	4bf8 <readstat_malloc@plt>
   1adf4:	cmp	r0, #0
   1adf8:	str	r0, [r4, #68]	; 0x44
   1adfc:	beq	1aa18 <dta_ctx_init+0x28>
   1ae00:	mov	r0, #1
   1ae04:	mov	r5, #0
   1ae08:	str	r0, [r4, #284]	; 0x11c
   1ae0c:	b	1aa18 <dta_ctx_init+0x28>
   1ae10:	mov	r0, #0
   1ae14:	mov	r5, #7
   1ae18:	str	r0, [r4, #236]	; 0xec
   1ae1c:	b	1aa18 <dta_ctx_init+0x28>
   1ae20:	ldr	r0, [r4, #236]	; 0xec
   1ae24:	b	1ad28 <dta_ctx_init+0x338>
   1ae28:	.word	0x00000081
   1ae2c:	.word	0x00000039
   1ae30:	.word	0x00000081
   1ae34:	.word	0x00000141
   1ae38:	.word	0x0000b08b
   1ae3c:	.word	0x00009392
   1ae40:	.word	0x0000937e

0001ae44 <dta_ctx_free>:
   1ae44:	push	{r4, r5, fp, lr}
   1ae48:	add	fp, sp, #8
   1ae4c:	mov	r4, r0
   1ae50:	ldr	r0, [r0, #28]
   1ae54:	cmp	r0, #0
   1ae58:	beq	1ae60 <dta_ctx_free+0x1c>
   1ae5c:	bl	48bc <free@plt>
   1ae60:	ldr	r0, [r4, #36]	; 0x24
   1ae64:	cmp	r0, #0
   1ae68:	beq	1ae70 <dta_ctx_free+0x2c>
   1ae6c:	bl	48bc <free@plt>
   1ae70:	ldr	r0, [r4, #44]	; 0x2c
   1ae74:	cmp	r0, #0
   1ae78:	beq	1ae80 <dta_ctx_free+0x3c>
   1ae7c:	bl	48bc <free@plt>
   1ae80:	ldr	r0, [r4, #52]	; 0x34
   1ae84:	cmp	r0, #0
   1ae88:	beq	1ae90 <dta_ctx_free+0x4c>
   1ae8c:	bl	48bc <free@plt>
   1ae90:	ldr	r0, [r4, #60]	; 0x3c
   1ae94:	cmp	r0, #0
   1ae98:	beq	1aea0 <dta_ctx_free+0x5c>
   1ae9c:	bl	48bc <free@plt>
   1aea0:	ldr	r0, [r4, #68]	; 0x44
   1aea4:	cmp	r0, #0
   1aea8:	beq	1aeb0 <dta_ctx_free+0x6c>
   1aeac:	bl	48bc <free@plt>
   1aeb0:	ldr	r0, [r4, #236]	; 0xec
   1aeb4:	cmp	r0, #0
   1aeb8:	beq	1aec0 <dta_ctx_free+0x7c>
   1aebc:	bl	47d8 <iconv_close@plt>
   1aec0:	ldr	r0, [r4]
   1aec4:	cmp	r0, #0
   1aec8:	beq	1aed0 <dta_ctx_free+0x8c>
   1aecc:	bl	48bc <free@plt>
   1aed0:	ldr	r0, [r4, #228]	; 0xe4
   1aed4:	cmp	r0, #0
   1aed8:	beq	1af18 <dta_ctx_free+0xd4>
   1aedc:	ldr	r2, [r4, #148]	; 0x94
   1aee0:	cmp	r2, #1
   1aee4:	blt	1af14 <dta_ctx_free+0xd0>
   1aee8:	mov	r5, #0
   1aeec:	ldr	r1, [r0, r5, lsl #2]
   1aef0:	cmp	r1, #0
   1aef4:	beq	1af08 <dta_ctx_free+0xc4>
   1aef8:	mov	r0, r1
   1aefc:	bl	48bc <free@plt>
   1af00:	ldr	r2, [r4, #148]	; 0x94
   1af04:	ldr	r0, [r4, #228]	; 0xe4
   1af08:	add	r5, r5, #1
   1af0c:	cmp	r5, r2
   1af10:	blt	1aeec <dta_ctx_free+0xa8>
   1af14:	bl	48bc <free@plt>
   1af18:	ldr	r0, [r4, #216]	; 0xd8
   1af1c:	cmp	r0, #0
   1af20:	beq	1af50 <dta_ctx_free+0x10c>
   1af24:	ldr	r1, [r4, #220]	; 0xdc
   1af28:	cmp	r1, #0
   1af2c:	beq	1af4c <dta_ctx_free+0x108>
   1af30:	mov	r5, #0
   1af34:	ldr	r0, [r0, r5, lsl #2]
   1af38:	bl	48bc <free@plt>
   1af3c:	ldrd	r0, [r4, #216]	; 0xd8
   1af40:	add	r5, r5, #1
   1af44:	cmp	r5, r1
   1af48:	bcc	1af34 <dta_ctx_free+0xf0>
   1af4c:	bl	48bc <free@plt>
   1af50:	mov	r0, r4
   1af54:	pop	{r4, r5, fp, lr}
   1af58:	b	48bc <free@plt>

0001af5c <dta_type_info>:
   1af5c:	push	{r4, sl, fp, lr}
   1af60:	add	fp, sp, #8
   1af64:	ldrb	r1, [r1, #20]
   1af68:	cmp	r1, #111	; 0x6f
   1af6c:	bne	1afa0 <dta_type_info+0x44>
   1af70:	sub	ip, r0, #251	; 0xfb
   1af74:	uxth	r1, ip
   1af78:	cmp	r1, #5
   1af7c:	bcs	1b04c <dta_type_info+0xf0>
   1af80:	ldr	r1, [pc, #276]	; 1b09c <dta_type_info+0x140>
   1af84:	mov	r0, #1
   1af88:	uxtah	lr, r0, ip
   1af8c:	sxth	r0, ip
   1af90:	mov	ip, #0
   1af94:	add	r1, pc, r1
   1af98:	ldr	r0, [r1, r0, lsl #2]
   1af9c:	b	1b054 <dta_type_info+0xf8>
   1afa0:	cmp	r1, #117	; 0x75
   1afa4:	bne	1afec <dta_type_info+0x90>
   1afa8:	movw	r1, #65526	; 0xfff6
   1afac:	mov	ip, #0
   1afb0:	sub	r1, r0, r1
   1afb4:	cmp	r1, #4
   1afb8:	bhi	1b038 <dta_type_info+0xdc>
   1afbc:	add	r4, pc, #12
   1afc0:	mov	r0, #1
   1afc4:	mov	lr, #1
   1afc8:	ldr	r1, [r4, r1, lsl #2]
   1afcc:	add	pc, r4, r1
   1afd0:	.word	0x00000014
   1afd4:	.word	0x000000a8
   1afd8:	.word	0x000000b4
   1afdc:	.word	0x000000c0
   1afe0:	.word	0x00000084
   1afe4:	mov	lr, #5
   1afe8:	b	1b044 <dta_type_info+0xe8>
   1afec:	cmp	r0, #126	; 0x7e
   1aff0:	bhi	1b030 <dta_type_info+0xd4>
   1aff4:	sub	r0, r0, #98	; 0x62
   1aff8:	uxth	r1, r0
   1affc:	cmp	r1, #11
   1b000:	bcs	1b06c <dta_type_info+0x110>
   1b004:	sxth	r1, r0
   1b008:	ldr	r0, [pc, #144]	; 1b0a0 <dta_type_info+0x144>
   1b00c:	add	r0, pc, r0
   1b010:	ldr	lr, [r0, r1, lsl #2]
   1b014:	ldr	r0, [pc, #136]	; 1b0a4 <dta_type_info+0x148>
   1b018:	ldr	r4, [pc, #136]	; 1b0a8 <dta_type_info+0x14c>
   1b01c:	add	r0, pc, r0
   1b020:	add	r4, pc, r4
   1b024:	ldr	r0, [r0, r1, lsl #2]
   1b028:	ldr	ip, [r4, r1, lsl #2]
   1b02c:	b	1b054 <dta_type_info+0xf8>
   1b030:	sub	r0, r0, #127	; 0x7f
   1b034:	b	1b04c <dta_type_info+0xf0>
   1b038:	cmp	r0, #32768	; 0x8000
   1b03c:	bne	1b04c <dta_type_info+0xf0>
   1b040:	mov	lr, #6
   1b044:	mov	r0, #8
   1b048:	b	1b054 <dta_type_info+0xf8>
   1b04c:	mov	ip, #0
   1b050:	mov	lr, #0
   1b054:	cmp	r2, #0
   1b058:	strne	r0, [r2]
   1b05c:	cmp	r3, #0
   1b060:	mov	r0, ip
   1b064:	strne	lr, [r3]
   1b068:	pop	{r4, sl, fp, pc}
   1b06c:	mov	r0, #0
   1b070:	mov	ip, #5
   1b074:	b	1b050 <dta_type_info+0xf4>
   1b078:	mov	r0, #4
   1b07c:	mov	lr, #4
   1b080:	b	1b054 <dta_type_info+0xf8>
   1b084:	mov	lr, #3
   1b088:	mov	r0, #4
   1b08c:	b	1b054 <dta_type_info+0xf8>
   1b090:	mov	r0, #2
   1b094:	mov	lr, #2
   1b098:	b	1b054 <dta_type_info+0xf8>
   1b09c:	.word	0x0000adf8
   1b0a0:	.word	0x0000adec
   1b0a4:	.word	0x0000adb0
   1b0a8:	.word	0x0000ad80

0001b0ac <dta_parse_timestamp>:
   1b0ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0b0:	add	fp, sp, #28
   1b0b4:	sub	sp, sp, #36	; 0x24
   1b0b8:	sub	sp, sp, #1024	; 0x400
   1b0bc:	ldr	ip, [pc, #864]	; 1b424 <dta_parse_timestamp+0x378>
   1b0c0:	add	lr, sp, #12
   1b0c4:	cmp	r1, #0
   1b0c8:	stm	lr, {r0, r1, r3}
   1b0cc:	add	ip, pc, ip
   1b0d0:	beq	1b380 <dta_parse_timestamp+0x2d4>
   1b0d4:	add	r1, r0, r1
   1b0d8:	mov	r4, #1
   1b0dc:	mov	lr, #0
   1b0e0:	mov	r8, r0
   1b0e4:	str	r1, [sp, #24]
   1b0e8:	ldr	r0, [pc, #824]	; 1b428 <dta_parse_timestamp+0x37c>
   1b0ec:	add	r0, pc, r0
   1b0f0:	ldrb	sl, [r0, r4]
   1b0f4:	ldr	r0, [pc, #816]	; 1b42c <dta_parse_timestamp+0x380>
   1b0f8:	add	r0, pc, r0
   1b0fc:	cmp	sl, #0
   1b100:	ldrb	r9, [r0, r4]
   1b104:	ldr	r0, [pc, #804]	; 1b430 <dta_parse_timestamp+0x384>
   1b108:	ldr	r1, [pc, #804]	; 1b434 <dta_parse_timestamp+0x388>
   1b10c:	add	r0, pc, r0
   1b110:	add	r1, pc, r1
   1b114:	ldrb	r0, [r0, r4]
   1b118:	add	r7, r1, r0
   1b11c:	beq	1b184 <dta_parse_timestamp+0xd8>
   1b120:	add	r0, r7, sl
   1b124:	str	lr, [sp, #28]
   1b128:	sub	lr, r0, #1
   1b12c:	mov	r5, r0
   1b130:	cmp	lr, r7
   1b134:	bcc	1b16c <dta_parse_timestamp+0xc0>
   1b138:	ldrb	r0, [r8]
   1b13c:	mov	r3, r7
   1b140:	sub	ip, lr, r3
   1b144:	mov	r1, r3
   1b148:	ldrb	r6, [r1, ip, asr #1]!
   1b14c:	cmp	r0, r6
   1b150:	bcs	1b15c <dta_parse_timestamp+0xb0>
   1b154:	sub	lr, r1, #1
   1b158:	b	1b164 <dta_parse_timestamp+0xb8>
   1b15c:	bls	1b1f4 <dta_parse_timestamp+0x148>
   1b160:	add	r3, r1, #1
   1b164:	cmp	lr, r3
   1b168:	bcs	1b140 <dta_parse_timestamp+0x94>
   1b16c:	ldr	ip, [pc, #708]	; 1b438 <dta_parse_timestamp+0x38c>
   1b170:	ldr	lr, [sp, #28]
   1b174:	add	r9, sl, r9
   1b178:	mov	sl, r5
   1b17c:	add	ip, pc, ip
   1b180:	b	1b188 <dta_parse_timestamp+0xdc>
   1b184:	mov	sl, r7
   1b188:	ldr	r0, [pc, #684]	; 1b43c <dta_parse_timestamp+0x390>
   1b18c:	mvn	r5, #1
   1b190:	add	r0, pc, r0
   1b194:	ldrb	r4, [r0, r4]
   1b198:	cmp	r4, #0
   1b19c:	beq	1b218 <dta_parse_timestamp+0x16c>
   1b1a0:	add	r0, sl, r4, lsl #1
   1b1a4:	sub	r7, r0, #2
   1b1a8:	cmp	r7, sl
   1b1ac:	bcc	1b214 <dta_parse_timestamp+0x168>
   1b1b0:	ldrb	r0, [r8]
   1b1b4:	mov	r1, sl
   1b1b8:	sub	r3, r7, r1
   1b1bc:	and	r6, r5, r3, asr #1
   1b1c0:	mov	r3, r1
   1b1c4:	ldrb	r6, [r3, r6]!
   1b1c8:	cmp	r0, r6
   1b1cc:	bcs	1b1d8 <dta_parse_timestamp+0x12c>
   1b1d0:	sub	r7, r3, #2
   1b1d4:	b	1b1e8 <dta_parse_timestamp+0x13c>
   1b1d8:	ldrb	r1, [r3, #1]
   1b1dc:	cmp	r0, r1
   1b1e0:	bls	1b20c <dta_parse_timestamp+0x160>
   1b1e4:	add	r1, r3, #2
   1b1e8:	cmp	r7, r1
   1b1ec:	bcs	1b1b8 <dta_parse_timestamp+0x10c>
   1b1f0:	b	1b214 <dta_parse_timestamp+0x168>
   1b1f4:	ldr	ip, [pc, #600]	; 1b454 <dta_parse_timestamp+0x3a8>
   1b1f8:	ldr	lr, [sp, #28]
   1b1fc:	sub	r0, r9, r7
   1b200:	add	r9, r0, r1
   1b204:	add	ip, pc, ip
   1b208:	b	1b218 <dta_parse_timestamp+0x16c>
   1b20c:	sub	r0, r3, sl
   1b210:	asr	r4, r0, #1
   1b214:	add	r9, r4, r9
   1b218:	ldr	r0, [pc, #544]	; 1b440 <dta_parse_timestamp+0x394>
   1b21c:	add	r0, pc, r0
   1b220:	ldrb	r4, [r0, r9]
   1b224:	ldr	r0, [pc, #536]	; 1b444 <dta_parse_timestamp+0x398>
   1b228:	add	r0, pc, r0
   1b22c:	ldrb	r0, [r0, r4]
   1b230:	cmp	r0, #0
   1b234:	beq	1b358 <dta_parse_timestamp+0x2ac>
   1b238:	ldrb	r7, [ip, r0]
   1b23c:	cmp	r7, #0
   1b240:	beq	1b358 <dta_parse_timestamp+0x2ac>
   1b244:	add	r0, ip, r0
   1b248:	add	r3, r0, #1
   1b24c:	ldrb	r0, [r3]
   1b250:	sub	r7, r7, #1
   1b254:	cmp	r0, #16
   1b258:	bhi	1b330 <dta_parse_timestamp+0x284>
   1b25c:	add	r1, pc, #4
   1b260:	ldr	r0, [r1, r0, lsl #2]
   1b264:	add	pc, r1, r0
   1b268:	.word	0x00000044
   1b26c:	.word	0x00000058
   1b270:	.word	0x00000060
   1b274:	.word	0x00000068
   1b278:	.word	0x00000070
   1b27c:	.word	0x00000078
   1b280:	.word	0x00000080
   1b284:	.word	0x00000088
   1b288:	.word	0x00000090
   1b28c:	.word	0x00000098
   1b290:	.word	0x000000a0
   1b294:	.word	0x000000a8
   1b298:	.word	0x000000b0
   1b29c:	.word	0x000000b8
   1b2a0:	.word	0x000000c0
   1b2a4:	.word	0x000000d8
   1b2a8:	.word	0x000000e8
   1b2ac:	ldrb	r0, [r8]
   1b2b0:	add	r1, lr, lr, lsl #2
   1b2b4:	add	r0, r0, r1, lsl #1
   1b2b8:	sub	lr, r0, #48	; 0x30
   1b2bc:	b	1b330 <dta_parse_timestamp+0x284>
   1b2c0:	mov	lr, #0
   1b2c4:	b	1b330 <dta_parse_timestamp+0x284>
   1b2c8:	str	lr, [r2, #12]
   1b2cc:	b	1b330 <dta_parse_timestamp+0x284>
   1b2d0:	mov	r0, #0
   1b2d4:	b	1b32c <dta_parse_timestamp+0x280>
   1b2d8:	mov	r0, #1
   1b2dc:	b	1b32c <dta_parse_timestamp+0x280>
   1b2e0:	mov	r0, #2
   1b2e4:	b	1b32c <dta_parse_timestamp+0x280>
   1b2e8:	mov	r0, #3
   1b2ec:	b	1b32c <dta_parse_timestamp+0x280>
   1b2f0:	mov	r0, #4
   1b2f4:	b	1b32c <dta_parse_timestamp+0x280>
   1b2f8:	mov	r0, #5
   1b2fc:	b	1b32c <dta_parse_timestamp+0x280>
   1b300:	mov	r0, #6
   1b304:	b	1b32c <dta_parse_timestamp+0x280>
   1b308:	mov	r0, #7
   1b30c:	b	1b32c <dta_parse_timestamp+0x280>
   1b310:	mov	r0, #8
   1b314:	b	1b32c <dta_parse_timestamp+0x280>
   1b318:	mov	r0, #9
   1b31c:	b	1b32c <dta_parse_timestamp+0x280>
   1b320:	mov	r0, #10
   1b324:	b	1b32c <dta_parse_timestamp+0x280>
   1b328:	mov	r0, #11
   1b32c:	str	r0, [r2, #16]
   1b330:	add	r3, r3, #1
   1b334:	cmp	r7, #0
   1b338:	bne	1b24c <dta_parse_timestamp+0x1a0>
   1b33c:	b	1b358 <dta_parse_timestamp+0x2ac>
   1b340:	movw	r0, #1900	; 0x76c
   1b344:	sub	r0, lr, r0
   1b348:	str	r0, [r2, #20]
   1b34c:	b	1b330 <dta_parse_timestamp+0x284>
   1b350:	str	lr, [r2, #8]
   1b354:	b	1b330 <dta_parse_timestamp+0x284>
   1b358:	cmp	r4, #1
   1b35c:	beq	1b3d0 <dta_parse_timestamp+0x324>
   1b360:	ldr	r0, [pc, #224]	; 1b448 <dta_parse_timestamp+0x39c>
   1b364:	add	r8, r8, #1
   1b368:	add	r0, pc, r0
   1b36c:	ldrb	r4, [r0, r4]
   1b370:	ldr	r0, [sp, #24]
   1b374:	cmp	r8, r0
   1b378:	bne	1b0e8 <dta_parse_timestamp+0x3c>
   1b37c:	b	1b388 <dta_parse_timestamp+0x2dc>
   1b380:	mov	r4, #1
   1b384:	mov	lr, #0
   1b388:	ldr	r0, [pc, #188]	; 1b44c <dta_parse_timestamp+0x3a0>
   1b38c:	add	r0, pc, r0
   1b390:	ldrb	r1, [r0, r4]
   1b394:	ldrb	r0, [ip, r1]
   1b398:	cmp	r0, #0
   1b39c:	beq	1b3c4 <dta_parse_timestamp+0x318>
   1b3a0:	add	r1, r1, ip
   1b3a4:	add	r1, r1, #1
   1b3a8:	ldrb	r3, [r1]
   1b3ac:	sub	r0, r0, #1
   1b3b0:	add	r1, r1, #1
   1b3b4:	cmp	r3, #17
   1b3b8:	streq	lr, [r2, #4]
   1b3bc:	cmp	r0, #0
   1b3c0:	bne	1b3a8 <dta_parse_timestamp+0x2fc>
   1b3c4:	mov	r1, #0
   1b3c8:	cmp	r4, #43	; 0x2b
   1b3cc:	bhi	1b418 <dta_parse_timestamp+0x36c>
   1b3d0:	ldr	r4, [sp, #20]
   1b3d4:	cmp	r4, #0
   1b3d8:	beq	1b414 <dta_parse_timestamp+0x368>
   1b3dc:	ldr	r3, [sp, #16]
   1b3e0:	ldr	r0, [sp, #12]
   1b3e4:	ldr	r5, [fp, #8]
   1b3e8:	add	r6, sp, #32
   1b3ec:	mov	r1, #1024	; 0x400
   1b3f0:	str	r0, [sp, #4]
   1b3f4:	str	r3, [sp]
   1b3f8:	mov	r0, r6
   1b3fc:	ldr	r2, [pc, #76]	; 1b450 <dta_parse_timestamp+0x3a4>
   1b400:	add	r2, pc, r2
   1b404:	bl	4c4c <snprintf@plt>
   1b408:	mov	r0, r6
   1b40c:	mov	r1, r5
   1b410:	blx	r4
   1b414:	mov	r1, #29
   1b418:	mov	r0, r1
   1b41c:	sub	sp, fp, #28
   1b420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b424:	.word	0x0000af93
   1b428:	.word	0x0000ae08
   1b42c:	.word	0x0000adcf
   1b430:	.word	0x0000ad8e
   1b434:	.word	0x0000ad14
   1b438:	.word	0x0000aee3
   1b43c:	.word	0x0000ad91
   1b440:	.word	0x0000ad32
   1b444:	.word	0x0000adfb
   1b448:	.word	0x0000ac7f
   1b44c:	.word	0x0000acf9
   1b450:	.word	0x0000acb2
   1b454:	.word	0x0000ae5b

0001b458 <readstat_parse_dta>:
   1b458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b45c:	add	fp, sp, #28
   1b460:	sub	sp, sp, #4
   1b464:	vpush	{d8-d9}
   1b468:	sub	sp, sp, #152	; 0x98
   1b46c:	sub	sp, sp, #2048	; 0x800
   1b470:	ldr	r5, [r0, #32]
   1b474:	mov	r4, r0
   1b478:	mov	sl, r2
   1b47c:	mov	r6, r1
   1b480:	mov	r0, r5
   1b484:	bl	4f1c <dta_ctx_alloc@plt>
   1b488:	ldr	r2, [r5]
   1b48c:	ldr	r1, [r5, #20]
   1b490:	mov	r9, r0
   1b494:	mov	r0, r6
   1b498:	blx	r2
   1b49c:	cmn	r0, #1
   1b4a0:	beq	1b560 <readstat_parse_dta+0x108>
   1b4a4:	ldr	r3, [r5, #12]
   1b4a8:	ldr	r2, [r5, #20]
   1b4ac:	add	r0, sp, #84	; 0x54
   1b4b0:	mov	r1, #4
   1b4b4:	blx	r3
   1b4b8:	mov	r6, #2
   1b4bc:	cmp	r0, #4
   1b4c0:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b4c4:	ldr	r3, [r5, #8]
   1b4c8:	ldr	r2, [r5, #20]
   1b4cc:	mov	r0, #0
   1b4d0:	mov	r1, #2
   1b4d4:	blx	r3
   1b4d8:	cmn	r0, #1
   1b4dc:	beq	1b568 <readstat_parse_dta+0x110>
   1b4e0:	ldr	r3, [r5, #8]
   1b4e4:	ldr	r2, [r5, #20]
   1b4e8:	mov	r8, r0
   1b4ec:	mov	r0, #0
   1b4f0:	mov	r1, #0
   1b4f4:	blx	r3
   1b4f8:	cmn	r0, #1
   1b4fc:	beq	1b59c <readstat_parse_dta+0x144>
   1b500:	ldr	r1, [pc, #3952]	; 1c478 <readstat_parse_dta+0x1020>
   1b504:	add	r0, sp, #84	; 0x54
   1b508:	mov	r2, #4
   1b50c:	add	r1, pc, r1
   1b510:	bl	4bbc <bcmp@plt>
   1b514:	cmp	r0, #0
   1b518:	beq	1b5d8 <readstat_parse_dta+0x180>
   1b51c:	ldr	r0, [r9, #280]	; 0x118
   1b520:	mov	r1, #10
   1b524:	ldr	r3, [r0, #12]
   1b528:	ldr	r2, [r0, #20]
   1b52c:	add	r0, sp, #112	; 0x70
   1b530:	blx	r3
   1b534:	cmp	r0, #10
   1b538:	bne	1bbb0 <readstat_parse_dta+0x758>
   1b53c:	ldrb	r0, [sp, #113]	; 0x71
   1b540:	sub	r0, r0, #2
   1b544:	clz	r0, r0
   1b548:	lsr	r6, r0, #5
   1b54c:	bl	48b0 <machine_is_little_endian@plt>
   1b550:	cmp	r0, r6
   1b554:	bne	1b6d0 <readstat_parse_dta+0x278>
   1b558:	ldr	r2, [sp, #118]	; 0x76
   1b55c:	b	1b6e8 <readstat_parse_dta+0x290>
   1b560:	mov	r6, #1
   1b564:	b	1bbb4 <readstat_parse_dta+0x75c>
   1b568:	ldr	r2, [r9, #264]	; 0x108
   1b56c:	mov	r6, #15
   1b570:	cmp	r2, #0
   1b574:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1b578:	ldr	r1, [pc, #4032]	; 1c540 <readstat_parse_dta+0x10e8>
   1b57c:	mov	r0, #14
   1b580:	add	r1, pc, r1
   1b584:	vld1.64	{d16-d17}, [r1], r0
   1b588:	add	r0, r9, #288	; 0x120
   1b58c:	vld1.16	{d18-d19}, [r1]
   1b590:	movw	r1, #302	; 0x12e
   1b594:	add	r1, r9, r1
   1b598:	b	1b5c4 <readstat_parse_dta+0x16c>
   1b59c:	ldr	r2, [r9, #264]	; 0x108
   1b5a0:	mov	r6, #15
   1b5a4:	cmp	r2, #0
   1b5a8:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1b5ac:	ldr	r1, [pc, #3984]	; 1c544 <readstat_parse_dta+0x10ec>
   1b5b0:	add	r0, r9, #288	; 0x120
   1b5b4:	add	r1, pc, r1
   1b5b8:	vld1.64	{d16-d17}, [r1]!
   1b5bc:	vld1.64	{d18-d19}, [r1]
   1b5c0:	add	r1, r9, #304	; 0x130
   1b5c4:	vst1.8	{d16-d17}, [r0]
   1b5c8:	vst1.8	{d18-d19}, [r1]
   1b5cc:	ldr	r1, [r9, #276]	; 0x114
   1b5d0:	blx	r2
   1b5d4:	b	1bbb4 <readstat_parse_dta+0x75c>
   1b5d8:	ldr	r1, [pc, #3944]	; 1c548 <readstat_parse_dta+0x10f0>
   1b5dc:	mov	r0, r9
   1b5e0:	add	r1, pc, r1
   1b5e4:	bl	1d8d0 <dta_read_tag>
   1b5e8:	mov	r6, r0
   1b5ec:	cmp	r0, #0
   1b5f0:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b5f4:	ldr	r1, [pc, #4092]	; 1c5f8 <readstat_parse_dta+0x11a0>
   1b5f8:	mov	r0, r9
   1b5fc:	add	r1, pc, r1
   1b600:	bl	1d8d0 <dta_read_tag>
   1b604:	mov	r6, r0
   1b608:	cmp	r0, #0
   1b60c:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b610:	ldr	r0, [pc, #4068]	; 1c5fc <readstat_parse_dta+0x11a4>
   1b614:	add	r2, sp, #88	; 0x58
   1b618:	mov	r3, #3
   1b61c:	add	r0, pc, r0
   1b620:	str	r0, [sp]
   1b624:	mov	r0, r9
   1b628:	ldr	r1, [pc, #4088]	; 1c628 <readstat_parse_dta+0x11d0>
   1b62c:	add	r1, pc, r1
   1b630:	bl	1d954 <dta_read_chunk>
   1b634:	mov	r6, r0
   1b638:	cmp	r0, #0
   1b63c:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b640:	ldrb	r0, [sp, #89]	; 0x59
   1b644:	ldrb	r7, [sp, #88]	; 0x58
   1b648:	add	r2, sp, #108	; 0x6c
   1b64c:	mov	r3, #3
   1b650:	str	r0, [sp, #76]	; 0x4c
   1b654:	ldrb	r0, [sp, #90]	; 0x5a
   1b658:	str	r0, [sp, #80]	; 0x50
   1b65c:	ldr	r0, [pc, #4084]	; 1c658 <readstat_parse_dta+0x1200>
   1b660:	add	r0, pc, r0
   1b664:	str	r0, [sp]
   1b668:	mov	r0, r9
   1b66c:	ldr	r1, [pc, #4072]	; 1c65c <readstat_parse_dta+0x1204>
   1b670:	add	r1, pc, r1
   1b674:	bl	1d954 <dta_read_chunk>
   1b678:	mov	r6, r0
   1b67c:	cmp	r0, #0
   1b680:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b684:	ldr	r1, [pc, #4052]	; 1c660 <readstat_parse_dta+0x1208>
   1b688:	add	r0, sp, #108	; 0x6c
   1b68c:	mov	r2, #3
   1b690:	add	r1, pc, r1
   1b694:	bl	4bbc <bcmp@plt>
   1b698:	cmp	r0, #0
   1b69c:	beq	1bc08 <readstat_parse_dta+0x7b0>
   1b6a0:	ldr	r1, [pc, #4088]	; 1c6a0 <readstat_parse_dta+0x1248>
   1b6a4:	add	r0, sp, #108	; 0x6c
   1b6a8:	mov	r2, #3
   1b6ac:	add	r1, pc, r1
   1b6b0:	bl	4bbc <bcmp@plt>
   1b6b4:	mov	r6, #5
   1b6b8:	cmp	r0, #0
   1b6bc:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b6c0:	mov	r0, #1
   1b6c4:	str	r0, [sp, #72]	; 0x48
   1b6c8:	mov	r0, #2
   1b6cc:	b	1bc14 <readstat_parse_dta+0x7bc>
   1b6d0:	ldrh	r0, [sp, #116]	; 0x74
   1b6d4:	bl	48a4 <byteswap2@plt>
   1b6d8:	strh	r0, [sp, #116]	; 0x74
   1b6dc:	ldr	r0, [sp, #118]	; 0x76
   1b6e0:	bl	47b4 <byteswap4@plt>
   1b6e4:	mov	r2, r0
   1b6e8:	str	r2, [sp, #118]	; 0x76
   1b6ec:	ldr	r0, [r4, #36]	; 0x24
   1b6f0:	ldr	r3, [r4, #40]	; 0x28
   1b6f4:	ldrb	r6, [sp, #112]	; 0x70
   1b6f8:	ldrb	r7, [sp, #113]	; 0x71
   1b6fc:	ldrh	r1, [sp, #116]	; 0x74
   1b700:	str	r0, [sp, #8]
   1b704:	str	r3, [sp, #12]
   1b708:	str	r7, [sp]
   1b70c:	str	r6, [sp, #4]
   1b710:	mov	r0, r9
   1b714:	mov	r3, #0
   1b718:	bl	4b98 <dta_ctx_init@plt>
   1b71c:	mov	r6, r0
   1b720:	cmp	r0, #0
   1b724:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b728:	str	r8, [r9, #272]	; 0x110
   1b72c:	str	sl, [r9, #276]	; 0x114
   1b730:	add	r0, r4, #16
   1b734:	mov	r1, #48	; 0x30
   1b738:	mov	r2, r4
   1b73c:	add	r3, r9, #152	; 0x98
   1b740:	add	ip, r9, #176	; 0xb0
   1b744:	vld1.32	{d16-d17}, [r0]
   1b748:	vld1.32	{d18-d19}, [r2], r1
   1b74c:	add	r0, r9, #256	; 0x100
   1b750:	vst1.32	{d16-d17}, [r0]
   1b754:	add	r0, r9, #240	; 0xf0
   1b758:	vst1.32	{d18-d19}, [r0]
   1b75c:	str	r0, [sp, #80]	; 0x50
   1b760:	ldr	r0, [r2]
   1b764:	cmp	r0, #0
   1b768:	ble	1b778 <readstat_parse_dta+0x320>
   1b76c:	asr	r1, r0, #31
   1b770:	strd	r0, [ip]
   1b774:	b	1b77c <readstat_parse_dta+0x324>
   1b778:	ldrd	r0, [ip]
   1b77c:	str	r3, [sp, #72]	; 0x48
   1b780:	add	r7, r9, #168	; 0xa8
   1b784:	add	r6, r9, #184	; 0xb8
   1b788:	ldrd	r2, [r3]
   1b78c:	subs	r0, r2, r0
   1b790:	sbc	r1, r3, r1
   1b794:	cmn	r1, #1
   1b798:	movle	r0, #0
   1b79c:	movle	r1, #0
   1b7a0:	strdle	r2, [ip]
   1b7a4:	strd	r0, [r7]
   1b7a8:	str	ip, [sp, #64]	; 0x40
   1b7ac:	str	r7, [sp, #76]	; 0x4c
   1b7b0:	str	r6, [sp, #68]	; 0x44
   1b7b4:	ldr	r2, [r4, #44]	; 0x2c
   1b7b8:	cmp	r2, #1
   1b7bc:	blt	1b7e0 <readstat_parse_dta+0x388>
   1b7c0:	subs	r3, r2, r0
   1b7c4:	rscs	r3, r1, r2, asr #31
   1b7c8:	bge	1b7e0 <readstat_parse_dta+0x388>
   1b7cc:	asr	r1, r2, #31
   1b7d0:	mov	r0, r2
   1b7d4:	str	r2, [r7]
   1b7d8:	str	r1, [r7, #4]
   1b7dc:	b	1b7ec <readstat_parse_dta+0x394>
   1b7e0:	subs	r2, r0, #1
   1b7e4:	sbcs	r2, r1, #0
   1b7e8:	blt	1b810 <readstat_parse_dta+0x3b8>
   1b7ec:	bl	23564 <__aeabi_l2d>
   1b7f0:	ldrd	r2, [r6]
   1b7f4:	vmov	d8, r0, r1
   1b7f8:	mov	r0, r2
   1b7fc:	mov	r1, r3
   1b800:	bl	23564 <__aeabi_l2d>
   1b804:	vmov	d16, r0, r1
   1b808:	vdiv.f64	d0, d16, d8
   1b80c:	b	1b814 <readstat_parse_dta+0x3bc>
   1b810:	vmov.i32	d0, #0	; 0x00000000
   1b814:	ldr	r1, [r9, #268]	; 0x10c
   1b818:	cmp	r1, #0
   1b81c:	beq	1b834 <readstat_parse_dta+0x3dc>
   1b820:	mov	r0, sl
   1b824:	blx	r1
   1b828:	mov	r6, #4
   1b82c:	cmp	r0, #0
   1b830:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1b834:	vmov.i32	q8, #0	; 0x00000000
   1b838:	add	r1, sp, #112	; 0x70
   1b83c:	mov	r0, #0
   1b840:	ldr	r8, [r9, #280]	; 0x118
   1b844:	strh	r0, [fp, #-88]	; 0xffffffa8
   1b848:	strb	r0, [sp, #88]	; 0x58
   1b84c:	add	r0, r1, #28
   1b850:	vst1.32	{d16-d17}, [r0]
   1b854:	add	r0, r1, #16
   1b858:	vst1.64	{d16-d17}, [r0]
   1b85c:	mov	r0, #32
   1b860:	vst1.64	{d16-d17}, [r1], r0
   1b864:	mvn	r0, #0
   1b868:	str	r0, [r1]
   1b86c:	mov	r1, r9
   1b870:	ldrb	r0, [r1, #192]!	; 0xc0
   1b874:	str	r1, [sp, #60]	; 0x3c
   1b878:	tst	r0, #4
   1b87c:	bne	1ba10 <readstat_parse_dta+0x5b8>
   1b880:	ldr	r0, [r9, #4]
   1b884:	strh	r0, [fp, #-88]	; 0xffffffa8
   1b888:	mov	r1, #1
   1b88c:	uxtah	r0, r1, r0
   1b890:	bl	4bf8 <readstat_malloc@plt>
   1b894:	cmp	r0, #0
   1b898:	beq	1ba80 <readstat_parse_dta+0x628>
   1b89c:	ldr	r3, [r8, #12]
   1b8a0:	ldr	r2, [r8, #20]
   1b8a4:	ldrh	r1, [fp, #-88]	; 0xffffffa8
   1b8a8:	mov	r4, r0
   1b8ac:	blx	r3
   1b8b0:	ldrh	r1, [fp, #-88]	; 0xffffffa8
   1b8b4:	mov	r6, #2
   1b8b8:	cmp	r0, r1
   1b8bc:	bne	1ba8c <readstat_parse_dta+0x634>
   1b8c0:	ldr	r1, [sp, #60]	; 0x3c
   1b8c4:	mov	r7, #0
   1b8c8:	ldrb	r1, [r1]
   1b8cc:	tst	r1, #4
   1b8d0:	bne	1b8f4 <readstat_parse_dta+0x49c>
   1b8d4:	mov	r1, #0
   1b8d8:	mov	r2, r4
   1b8dc:	strb	r1, [r2, r0]!
   1b8e0:	mov	r0, r4
   1b8e4:	ldrb	r7, [r2, #-1]
   1b8e8:	bl	4bd4 <strlen@plt>
   1b8ec:	strh	r0, [fp, #-88]	; 0xffffffa8
   1b8f0:	uxth	r0, r0
   1b8f4:	mov	r6, #1
   1b8f8:	orr	r0, r6, r0, lsl #2
   1b8fc:	bl	4bf8 <readstat_malloc@plt>
   1b900:	cmp	r0, #0
   1b904:	str	r0, [r9]
   1b908:	beq	1ba88 <readstat_parse_dta+0x630>
   1b90c:	ldr	r1, [r9, #236]	; 0xec
   1b910:	ldrh	r3, [fp, #-88]	; 0xffffffa8
   1b914:	mov	r2, r4
   1b918:	str	r1, [sp]
   1b91c:	orr	r1, r6, r3, lsl #2
   1b920:	bl	4c04 <readstat_convert@plt>
   1b924:	mov	r6, r0
   1b928:	cmp	r0, #0
   1b92c:	bne	1ba8c <readstat_parse_dta+0x634>
   1b930:	ldr	r0, [sp, #60]	; 0x3c
   1b934:	ldrb	r0, [r0]
   1b938:	tst	r0, #4
   1b93c:	bne	1bd44 <readstat_parse_dta+0x8ec>
   1b940:	ldr	r0, [r9, #16]
   1b944:	strb	r0, [sp, #88]	; 0x58
   1b948:	tst	r0, #255	; 0xff
   1b94c:	beq	1bdd8 <readstat_parse_dta+0x980>
   1b950:	uxtb	r0, r0
   1b954:	bl	4bf8 <readstat_malloc@plt>
   1b958:	ldr	r3, [r8, #12]
   1b95c:	ldr	r2, [r8, #20]
   1b960:	ldrb	r1, [sp, #88]	; 0x58
   1b964:	mov	r8, r0
   1b968:	blx	r3
   1b96c:	ldrb	r2, [sp, #88]	; 0x58
   1b970:	mov	r6, #2
   1b974:	cmp	r0, r2
   1b978:	bne	1c688 <readstat_parse_dta+0x1230>
   1b97c:	ldr	r0, [sp, #60]	; 0x3c
   1b980:	str	r8, [sp, #56]	; 0x38
   1b984:	ldrb	r0, [r0]
   1b988:	tst	r0, #4
   1b98c:	subeq	r2, r2, #1
   1b990:	strbeq	r2, [sp, #88]	; 0x58
   1b994:	ldrb	r0, [r8]
   1b998:	cmp	r0, #0
   1b99c:	beq	1c670 <readstat_parse_dta+0x1218>
   1b9a0:	uxtb	r1, r2
   1b9a4:	cmp	r7, #0
   1b9a8:	beq	1b9dc <readstat_parse_dta+0x584>
   1b9ac:	mvn	r0, #0
   1b9b0:	uxtab	r2, r0, r2
   1b9b4:	ldr	r0, [sp, #56]	; 0x38
   1b9b8:	ldrb	r0, [r0, r2]
   1b9bc:	cmp	r0, #0
   1b9c0:	bne	1b9dc <readstat_parse_dta+0x584>
   1b9c4:	ldr	r6, [sp, #56]	; 0x38
   1b9c8:	add	r0, r6, #1
   1b9cc:	mov	r1, r6
   1b9d0:	bl	4898 <memmove@plt>
   1b9d4:	strb	r7, [r6]
   1b9d8:	ldrb	r1, [sp, #88]	; 0x58
   1b9dc:	ldr	r0, [r9, #276]	; 0x114
   1b9e0:	ldr	r3, [r9, #264]	; 0x108
   1b9e4:	add	r2, sp, #112	; 0x70
   1b9e8:	str	r0, [sp]
   1b9ec:	ldr	r0, [sp, #56]	; 0x38
   1b9f0:	bl	4cc4 <dta_parse_timestamp@plt>
   1b9f4:	cmp	r0, #0
   1b9f8:	beq	1c664 <readstat_parse_dta+0x120c>
   1b9fc:	mov	r6, r0
   1ba00:	mov	r0, r4
   1ba04:	bl	48bc <free@plt>
   1ba08:	ldr	r8, [sp, #56]	; 0x38
   1ba0c:	b	1c698 <readstat_parse_dta+0x1240>
   1ba10:	ldr	r1, [pc, #3952]	; 1c988 <readstat_parse_dta+0x1530>
   1ba14:	mov	r0, r9
   1ba18:	add	r1, pc, r1
   1ba1c:	bl	1d8d0 <dta_read_tag>
   1ba20:	mov	r6, r0
   1ba24:	cmp	r0, #0
   1ba28:	bne	1ba94 <readstat_parse_dta+0x63c>
   1ba2c:	ldr	r1, [r9, #8]
   1ba30:	cmp	r1, #1
   1ba34:	beq	1bbe4 <readstat_parse_dta+0x78c>
   1ba38:	mov	r0, #0
   1ba3c:	cmp	r1, #2
   1ba40:	bne	1b888 <readstat_parse_dta+0x430>
   1ba44:	ldr	r3, [r8, #12]
   1ba48:	ldr	r2, [r8, #20]
   1ba4c:	sub	r0, fp, #88	; 0x58
   1ba50:	mov	r1, #2
   1ba54:	mov	r6, #2
   1ba58:	blx	r3
   1ba5c:	cmp	r0, #2
   1ba60:	bne	1ba94 <readstat_parse_dta+0x63c>
   1ba64:	ldr	r0, [sp, #60]	; 0x3c
   1ba68:	ldrb	r1, [r0]
   1ba6c:	ldrh	r0, [fp, #-88]	; 0xffffffa8
   1ba70:	tst	r1, #1
   1ba74:	beq	1b884 <readstat_parse_dta+0x42c>
   1ba78:	bl	48a4 <byteswap2@plt>
   1ba7c:	b	1b884 <readstat_parse_dta+0x42c>
   1ba80:	mov	r6, #3
   1ba84:	b	1ba94 <readstat_parse_dta+0x63c>
   1ba88:	mov	r6, #3
   1ba8c:	mov	r0, r4
   1ba90:	bl	48bc <free@plt>
   1ba94:	cmp	r6, #0
   1ba98:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1ba9c:	ldr	r1, [pc, #3816]	; 1c98c <readstat_parse_dta+0x1534>
   1baa0:	mov	r0, r9
   1baa4:	add	r1, pc, r1
   1baa8:	bl	1d8d0 <dta_read_tag>
   1baac:	mov	r6, r0
   1bab0:	cmp	r0, #0
   1bab4:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1bab8:	ldr	r0, [sp, #80]	; 0x50
   1babc:	ldr	r2, [r0]
   1bac0:	cmp	r2, #0
   1bac4:	beq	1bb68 <readstat_parse_dta+0x710>
   1bac8:	ldr	r3, [sp, #76]	; 0x4c
   1bacc:	add	r0, sp, #112	; 0x70
   1bad0:	mov	r1, r0
   1bad4:	add	r0, r0, #8
   1bad8:	add	r1, r1, #24
   1badc:	ldr	r4, [r3]
   1bae0:	ldr	r3, [r3, #4]
   1bae4:	str	r3, [sp, #116]	; 0x74
   1bae8:	str	r4, [sp, #112]	; 0x70
   1baec:	ldr	r4, [r9, #148]	; 0x94
   1baf0:	ldr	r6, [r9, #144]	; 0x90
   1baf4:	asr	r3, r4, #31
   1baf8:	str	r4, [r0]
   1bafc:	asr	r7, r6, #31
   1bb00:	str	r3, [r0, #4]
   1bb04:	rsbs	r3, r6, #117	; 0x75
   1bb08:	ldr	r0, [r9, #12]
   1bb0c:	str	r0, [sp, #132]	; 0x84
   1bb10:	str	r0, [sp, #128]	; 0x80
   1bb14:	mov	r0, #0
   1bb18:	strd	r6, [r1]
   1bb1c:	str	r0, [sp, #144]	; 0x90
   1bb20:	sbcs	r3, r0, r6, asr #31
   1bb24:	ldr	r1, [r9, #232]	; 0xe8
   1bb28:	str	r0, [sp, #152]	; 0x98
   1bb2c:	str	r1, [sp, #148]	; 0x94
   1bb30:	ldr	r1, [r9]
   1bb34:	str	r0, [sp, #160]	; 0xa0
   1bb38:	movwlt	r0, #1
   1bb3c:	ldrb	r3, [sp, #164]	; 0xa4
   1bb40:	and	r3, r3, #254	; 0xfe
   1bb44:	orr	r0, r3, r0
   1bb48:	strb	r0, [sp, #164]	; 0xa4
   1bb4c:	str	r1, [sp, #156]	; 0x9c
   1bb50:	add	r0, sp, #112	; 0x70
   1bb54:	mov	r1, sl
   1bb58:	blx	r2
   1bb5c:	mov	r6, #4
   1bb60:	cmp	r0, #0
   1bb64:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1bb68:	ldr	r0, [sp, #60]	; 0x3c
   1bb6c:	add	r8, r9, #120	; 0x78
   1bb70:	add	r7, r9, #128	; 0x80
   1bb74:	add	sl, r9, #136	; 0x88
   1bb78:	ldrb	r0, [r0]
   1bb7c:	tst	r0, #4
   1bb80:	beq	1be8c <readstat_parse_dta+0xa34>
   1bb84:	ldr	r0, [pc, #4044]	; 1cb58 <readstat_parse_dta+0x1700>
   1bb88:	add	r2, sp, #112	; 0x70
   1bb8c:	mov	r3, #112	; 0x70
   1bb90:	add	r0, pc, r0
   1bb94:	str	r0, [sp]
   1bb98:	mov	r0, r9
   1bb9c:	ldr	r1, [pc, #4092]	; 1cba0 <readstat_parse_dta+0x1748>
   1bba0:	add	r1, pc, r1
   1bba4:	bl	1d954 <dta_read_chunk>
   1bba8:	cmp	r0, #0
   1bbac:	beq	1bda4 <readstat_parse_dta+0x94c>
   1bbb0:	mov	r6, #2
   1bbb4:	ldr	r1, [r5, #4]
   1bbb8:	ldr	r0, [r5, #20]
   1bbbc:	blx	r1
   1bbc0:	cmp	r9, #0
   1bbc4:	beq	1bbd0 <readstat_parse_dta+0x778>
   1bbc8:	mov	r0, r9
   1bbcc:	bl	4874 <dta_ctx_free@plt>
   1bbd0:	mov	r0, r6
   1bbd4:	sub	sp, fp, #48	; 0x30
   1bbd8:	vpop	{d8-d9}
   1bbdc:	add	sp, sp, #4
   1bbe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbe4:	ldr	r3, [r8, #12]
   1bbe8:	ldr	r2, [r8, #20]
   1bbec:	add	r0, sp, #108	; 0x6c
   1bbf0:	mov	r1, #1
   1bbf4:	blx	r3
   1bbf8:	cmp	r0, #1
   1bbfc:	bne	1bd3c <readstat_parse_dta+0x8e4>
   1bc00:	ldrb	r0, [sp, #108]	; 0x6c
   1bc04:	b	1b884 <readstat_parse_dta+0x42c>
   1bc08:	mov	r0, #0
   1bc0c:	str	r0, [sp, #72]	; 0x48
   1bc10:	mov	r0, #1
   1bc14:	ldr	r1, [sp, #76]	; 0x4c
   1bc18:	str	r0, [sp, #68]	; 0x44
   1bc1c:	mov	r0, #100	; 0x64
   1bc20:	mul	r0, r7, r0
   1bc24:	add	r1, r1, r1, lsl #2
   1bc28:	add	r0, r0, r1, lsl #1
   1bc2c:	ldr	r1, [sp, #80]	; 0x50
   1bc30:	add	r0, r0, r1
   1bc34:	add	r6, r0, #48	; 0x30
   1bc38:	bl	48b0 <machine_is_little_endian@plt>
   1bc3c:	ldr	r1, [sp, #72]	; 0x48
   1bc40:	uxtb	r7, r6
   1bc44:	cmp	r7, #119	; 0x77
   1bc48:	eor	r0, r0, r1
   1bc4c:	str	r0, [sp, #80]	; 0x50
   1bc50:	ldr	r0, [pc, #4056]	; 1cc30 <readstat_parse_dta+0x17d8>
   1bc54:	add	r0, pc, r0
   1bc58:	bcc	1bc9c <readstat_parse_dta+0x844>
   1bc5c:	str	r0, [sp]
   1bc60:	add	r2, sp, #112	; 0x70
   1bc64:	mov	r0, r9
   1bc68:	mov	r3, #4
   1bc6c:	ldr	r1, [pc, #4032]	; 1cc34 <readstat_parse_dta+0x17dc>
   1bc70:	add	r1, pc, r1
   1bc74:	bl	1d954 <dta_read_chunk>
   1bc78:	cmp	r0, #0
   1bc7c:	bne	1c62c <readstat_parse_dta+0x11d4>
   1bc80:	ldr	r1, [sp, #80]	; 0x50
   1bc84:	ldr	r0, [sp, #112]	; 0x70
   1bc88:	cmp	r1, #0
   1bc8c:	beq	1bc94 <readstat_parse_dta+0x83c>
   1bc90:	bl	47b4 <byteswap4@plt>
   1bc94:	str	r0, [sp, #76]	; 0x4c
   1bc98:	b	1bce0 <readstat_parse_dta+0x888>
   1bc9c:	str	r0, [sp]
   1bca0:	add	r2, sp, #112	; 0x70
   1bca4:	mov	r0, r9
   1bca8:	mov	r3, #2
   1bcac:	ldr	r1, [pc, #3972]	; 1cc38 <readstat_parse_dta+0x17e0>
   1bcb0:	add	r1, pc, r1
   1bcb4:	bl	1d954 <dta_read_chunk>
   1bcb8:	cmp	r0, #0
   1bcbc:	bne	1c62c <readstat_parse_dta+0x11d4>
   1bcc0:	ldr	r1, [sp, #80]	; 0x50
   1bcc4:	ldrh	r0, [sp, #112]	; 0x70
   1bcc8:	cmp	r1, #0
   1bccc:	beq	1bcd4 <readstat_parse_dta+0x87c>
   1bcd0:	bl	48a4 <byteswap2@plt>
   1bcd4:	cmp	r7, #118	; 0x76
   1bcd8:	str	r0, [sp, #76]	; 0x4c
   1bcdc:	bcc	1be0c <readstat_parse_dta+0x9b4>
   1bce0:	ldr	r0, [pc, #3924]	; 1cc3c <readstat_parse_dta+0x17e4>
   1bce4:	add	r2, sp, #112	; 0x70
   1bce8:	mov	r3, #8
   1bcec:	add	r0, pc, r0
   1bcf0:	str	r0, [sp]
   1bcf4:	mov	r0, r9
   1bcf8:	ldr	r1, [pc, #3904]	; 1cc40 <readstat_parse_dta+0x17e8>
   1bcfc:	add	r1, pc, r1
   1bd00:	bl	1d954 <dta_read_chunk>
   1bd04:	mov	r6, r0
   1bd08:	cmp	r0, #0
   1bd0c:	bne	1be3c <readstat_parse_dta+0x9e4>
   1bd10:	ldr	r0, [sp, #80]	; 0x50
   1bd14:	ldr	r2, [sp, #112]	; 0x70
   1bd18:	ldr	r3, [sp, #116]	; 0x74
   1bd1c:	cmp	r0, #0
   1bd20:	beq	1be3c <readstat_parse_dta+0x9e4>
   1bd24:	mov	r0, r2
   1bd28:	mov	r1, r3
   1bd2c:	bl	479c <byteswap8@plt>
   1bd30:	mov	r2, r0
   1bd34:	mov	r3, r1
   1bd38:	b	1be3c <readstat_parse_dta+0x9e4>
   1bd3c:	mov	r6, #2
   1bd40:	b	1ba94 <readstat_parse_dta+0x63c>
   1bd44:	ldr	r1, [pc, #3832]	; 1cc44 <readstat_parse_dta+0x17ec>
   1bd48:	mov	r0, r9
   1bd4c:	add	r1, pc, r1
   1bd50:	bl	1d8d0 <dta_read_tag>
   1bd54:	mov	r6, r0
   1bd58:	cmp	r0, #0
   1bd5c:	bne	1ba8c <readstat_parse_dta+0x634>
   1bd60:	ldr	r1, [pc, #3808]	; 1cc48 <readstat_parse_dta+0x17f0>
   1bd64:	mov	r0, r9
   1bd68:	add	r1, pc, r1
   1bd6c:	bl	1d8d0 <dta_read_tag>
   1bd70:	mov	r6, r0
   1bd74:	cmp	r0, #0
   1bd78:	bne	1ba8c <readstat_parse_dta+0x634>
   1bd7c:	ldr	r3, [r8, #12]
   1bd80:	ldr	r2, [r8, #20]
   1bd84:	add	r0, sp, #88	; 0x58
   1bd88:	mov	r1, #1
   1bd8c:	blx	r3
   1bd90:	cmp	r0, #1
   1bd94:	mov	r6, #2
   1bd98:	bne	1ba8c <readstat_parse_dta+0x634>
   1bd9c:	ldrb	r0, [sp, #88]	; 0x58
   1bda0:	b	1b948 <readstat_parse_dta+0x4f0>
   1bda4:	ldr	r2, [sp, #60]	; 0x3c
   1bda8:	add	r0, sp, #112	; 0x70
   1bdac:	mov	r1, r0
   1bdb0:	add	r0, r0, #72	; 0x48
   1bdb4:	add	r6, r1, #80	; 0x50
   1bdb8:	add	r4, r1, #88	; 0x58
   1bdbc:	ldrd	r0, [r0]
   1bdc0:	ldrb	r2, [r2]
   1bdc4:	tst	r2, #1
   1bdc8:	bne	1bde0 <readstat_parse_dta+0x988>
   1bdcc:	strd	r0, [r8]
   1bdd0:	ldrd	r0, [r6]
   1bdd4:	b	1be00 <readstat_parse_dta+0x9a8>
   1bdd8:	mov	r8, #0
   1bddc:	b	1c674 <readstat_parse_dta+0x121c>
   1bde0:	bl	479c <byteswap8@plt>
   1bde4:	ldrb	r2, [r9, #192]	; 0xc0
   1bde8:	str	r8, [sp, #56]	; 0x38
   1bdec:	strd	r0, [r8]
   1bdf0:	ldrd	r0, [r6]
   1bdf4:	tst	r2, #1
   1bdf8:	bne	1be68 <readstat_parse_dta+0xa10>
   1bdfc:	ldr	r8, [sp, #56]	; 0x38
   1be00:	strd	r0, [r7]
   1be04:	ldrd	r0, [r4]
   1be08:	b	1be88 <readstat_parse_dta+0xa30>
   1be0c:	ldr	r0, [pc, #4064]	; 1cdf4 <readstat_parse_dta+0x199c>
   1be10:	add	r2, sp, #112	; 0x70
   1be14:	mov	r3, #4
   1be18:	add	r0, pc, r0
   1be1c:	str	r0, [sp]
   1be20:	mov	r0, r9
   1be24:	ldr	r1, [pc, #4044]	; 1cdf8 <readstat_parse_dta+0x19a0>
   1be28:	add	r1, pc, r1
   1be2c:	bl	1d954 <dta_read_chunk>
   1be30:	mov	r6, r0
   1be34:	cmp	r0, #0
   1be38:	beq	1c634 <readstat_parse_dta+0x11dc>
   1be3c:	cmp	r6, #0
   1be40:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1be44:	ldr	r1, [r4, #40]	; 0x28
   1be48:	ldr	r6, [sp, #68]	; 0x44
   1be4c:	ldr	r0, [r4, #36]	; 0x24
   1be50:	stm	sp, {r6, r7}
   1be54:	str	r1, [sp, #12]
   1be58:	ldr	r1, [sp, #76]	; 0x4c
   1be5c:	str	r0, [sp, #8]
   1be60:	mov	r0, r9
   1be64:	b	1b718 <readstat_parse_dta+0x2c0>
   1be68:	bl	479c <byteswap8@plt>
   1be6c:	ldrb	r2, [r9, #192]	; 0xc0
   1be70:	strd	r0, [r7]
   1be74:	ldrd	r0, [r4]
   1be78:	tst	r2, #1
   1be7c:	beq	1be84 <readstat_parse_dta+0xa2c>
   1be80:	bl	479c <byteswap8@plt>
   1be84:	ldr	r8, [sp, #56]	; 0x38
   1be88:	strd	r0, [sl]
   1be8c:	ldr	r1, [r9, #148]	; 0x94
   1be90:	ldr	r0, [r9, #24]
   1be94:	str	r7, [sp, #52]	; 0x34
   1be98:	mul	r7, r0, r1
   1be9c:	cmp	r1, #0
   1bea0:	beq	1bec0 <readstat_parse_dta+0xa68>
   1bea4:	mov	r0, r7
   1bea8:	bl	4bf8 <readstat_malloc@plt>
   1beac:	mov	r4, r0
   1beb0:	cmp	r0, #0
   1beb4:	bne	1bec4 <readstat_parse_dta+0xa6c>
   1beb8:	mov	r6, #3
   1bebc:	b	1bbb4 <readstat_parse_dta+0x75c>
   1bec0:	mov	r4, #0
   1bec4:	ldr	r0, [pc, #4032]	; 1ce8c <readstat_parse_dta+0x1a34>
   1bec8:	mov	r2, r4
   1becc:	mov	r3, r7
   1bed0:	add	r0, pc, r0
   1bed4:	str	r0, [sp]
   1bed8:	mov	r0, r9
   1bedc:	ldr	r1, [pc, #4012]	; 1ce90 <readstat_parse_dta+0x1a38>
   1bee0:	add	r1, pc, r1
   1bee4:	bl	1d954 <dta_read_chunk>
   1bee8:	mov	r6, r0
   1beec:	cmp	r0, #0
   1bef0:	bne	1c078 <readstat_parse_dta+0xc20>
   1bef4:	ldr	r0, [r9, #24]
   1bef8:	cmp	r0, #2
   1befc:	beq	1bf30 <readstat_parse_dta+0xad8>
   1bf00:	cmp	r0, #1
   1bf04:	bne	1bf90 <readstat_parse_dta+0xb38>
   1bf08:	ldr	r0, [r9, #148]	; 0x94
   1bf0c:	cmp	r0, #1
   1bf10:	blt	1bf90 <readstat_parse_dta+0xb38>
   1bf14:	ldr	r1, [r9, #28]
   1bf18:	mov	r2, r4
   1bf1c:	ldrb	r3, [r2], #1
   1bf20:	subs	r0, r0, #1
   1bf24:	strh	r3, [r1], #2
   1bf28:	bne	1bf1c <readstat_parse_dta+0xac4>
   1bf2c:	b	1bf90 <readstat_parse_dta+0xb38>
   1bf30:	ldr	r0, [r9, #28]
   1bf34:	mov	r1, r4
   1bf38:	mov	r2, r7
   1bf3c:	bl	4910 <memcpy@plt>
   1bf40:	ldrb	r0, [r9, #192]	; 0xc0
   1bf44:	tst	r0, #1
   1bf48:	beq	1bf90 <readstat_parse_dta+0xb38>
   1bf4c:	ldr	r0, [r9, #148]	; 0x94
   1bf50:	cmp	r0, #1
   1bf54:	blt	1bf90 <readstat_parse_dta+0xb38>
   1bf58:	ldr	r1, [r9, #28]
   1bf5c:	mov	r6, #0
   1bf60:	mov	r7, #0
   1bf64:	add	r0, r1, r6
   1bf68:	ldrh	r0, [r0]
   1bf6c:	bl	48a4 <byteswap2@plt>
   1bf70:	ldr	r1, [r9, #28]
   1bf74:	add	r7, r7, #1
   1bf78:	add	r2, r1, r6
   1bf7c:	add	r6, r6, #2
   1bf80:	strh	r0, [r2]
   1bf84:	ldr	r0, [r9, #148]	; 0x94
   1bf88:	cmp	r7, r0
   1bf8c:	blt	1bf64 <readstat_parse_dta+0xb0c>
   1bf90:	ldr	r2, [r9, #36]	; 0x24
   1bf94:	ldr	r3, [r9, #40]	; 0x28
   1bf98:	ldr	r0, [pc, #3992]	; 1cf38 <readstat_parse_dta+0x1ae0>
   1bf9c:	add	r0, pc, r0
   1bfa0:	str	r0, [sp]
   1bfa4:	mov	r0, r9
   1bfa8:	ldr	r1, [pc, #3980]	; 1cf3c <readstat_parse_dta+0x1ae4>
   1bfac:	add	r1, pc, r1
   1bfb0:	bl	1d954 <dta_read_chunk>
   1bfb4:	mov	r6, r0
   1bfb8:	cmp	r0, #0
   1bfbc:	bne	1c078 <readstat_parse_dta+0xc20>
   1bfc0:	ldr	r2, [r9, #44]	; 0x2c
   1bfc4:	ldr	r3, [r9, #48]	; 0x30
   1bfc8:	ldr	r0, [pc, #4072]	; 1cfb8 <readstat_parse_dta+0x1b60>
   1bfcc:	add	r0, pc, r0
   1bfd0:	str	r0, [sp]
   1bfd4:	mov	r0, r9
   1bfd8:	ldr	r1, [pc, #4060]	; 1cfbc <readstat_parse_dta+0x1b64>
   1bfdc:	add	r1, pc, r1
   1bfe0:	bl	1d954 <dta_read_chunk>
   1bfe4:	mov	r6, r0
   1bfe8:	cmp	r0, #0
   1bfec:	bne	1c078 <readstat_parse_dta+0xc20>
   1bff0:	ldr	r2, [r9, #52]	; 0x34
   1bff4:	ldr	r3, [r9, #56]	; 0x38
   1bff8:	ldr	r0, [pc, #4032]	; 1cfc0 <readstat_parse_dta+0x1b68>
   1bffc:	add	r0, pc, r0
   1c000:	str	r0, [sp]
   1c004:	mov	r0, r9
   1c008:	ldr	r1, [pc, #4020]	; 1cfc4 <readstat_parse_dta+0x1b6c>
   1c00c:	add	r1, pc, r1
   1c010:	bl	1d954 <dta_read_chunk>
   1c014:	mov	r6, r0
   1c018:	cmp	r0, #0
   1c01c:	bne	1c078 <readstat_parse_dta+0xc20>
   1c020:	ldr	r2, [r9, #60]	; 0x3c
   1c024:	ldr	r3, [r9, #64]	; 0x40
   1c028:	ldr	r0, [pc, #3992]	; 1cfc8 <readstat_parse_dta+0x1b70>
   1c02c:	add	r0, pc, r0
   1c030:	str	r0, [sp]
   1c034:	mov	r0, r9
   1c038:	ldr	r1, [pc, #3980]	; 1cfcc <readstat_parse_dta+0x1b74>
   1c03c:	add	r1, pc, r1
   1c040:	bl	1d954 <dta_read_chunk>
   1c044:	mov	r6, r0
   1c048:	cmp	r0, #0
   1c04c:	bne	1c078 <readstat_parse_dta+0xc20>
   1c050:	ldr	r2, [r9, #68]	; 0x44
   1c054:	ldr	r3, [r9, #72]	; 0x48
   1c058:	ldr	r0, [pc, #4076]	; 1d04c <readstat_parse_dta+0x1bf4>
   1c05c:	add	r0, pc, r0
   1c060:	str	r0, [sp]
   1c064:	mov	r0, r9
   1c068:	ldr	r1, [pc, #4064]	; 1d050 <readstat_parse_dta+0x1bf8>
   1c06c:	add	r1, pc, r1
   1c070:	bl	1d954 <dta_read_chunk>
   1c074:	mov	r6, r0
   1c078:	cmp	r4, #0
   1c07c:	str	r8, [sp, #56]	; 0x38
   1c080:	beq	1c08c <readstat_parse_dta+0xc34>
   1c084:	mov	r0, r4
   1c088:	bl	48bc <free@plt>
   1c08c:	cmp	r6, #0
   1c090:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c094:	ldr	r0, [r9, #148]	; 0x94
   1c098:	cmp	r0, #1
   1c09c:	blt	1c100 <readstat_parse_dta+0xca8>
   1c0a0:	mov	r7, #0
   1c0a4:	add	r8, sp, #112	; 0x70
   1c0a8:	mov	r4, #0
   1c0ac:	ldr	r0, [r9, #28]
   1c0b0:	mov	r1, r9
   1c0b4:	mov	r2, r8
   1c0b8:	mov	r3, #0
   1c0bc:	add	r0, r0, r7
   1c0c0:	ldrh	r0, [r0]
   1c0c4:	bl	4bb0 <dta_type_info@plt>
   1c0c8:	cmp	r0, #0
   1c0cc:	bne	1c62c <readstat_parse_dta+0x11d4>
   1c0d0:	ldr	r0, [r9, #160]	; 0xa0
   1c0d4:	ldr	r1, [sp, #112]	; 0x70
   1c0d8:	add	r4, r4, #1
   1c0dc:	add	r7, r7, #2
   1c0e0:	add	r0, r0, r1
   1c0e4:	str	r0, [r9, #160]	; 0xa0
   1c0e8:	ldr	r1, [r9, #148]	; 0x94
   1c0ec:	cmp	r4, r1
   1c0f0:	blt	1c0ac <readstat_parse_dta+0xc54>
   1c0f4:	mov	r0, #1
   1c0f8:	cmp	r1, #0
   1c0fc:	bgt	1c118 <readstat_parse_dta+0xcc0>
   1c100:	ldr	r0, [sp, #72]	; 0x48
   1c104:	ldrd	r2, [r0]
   1c108:	mov	r0, #0
   1c10c:	subs	r1, r2, #1
   1c110:	sbcs	r1, r3, #0
   1c114:	blt	1c124 <readstat_parse_dta+0xccc>
   1c118:	ldr	r1, [r9, #160]	; 0xa0
   1c11c:	cmp	r1, #0
   1c120:	beq	1c404 <readstat_parse_dta+0xfac>
   1c124:	ldr	r1, [r9, #248]	; 0xf8
   1c128:	str	sl, [sp, #48]	; 0x30
   1c12c:	cmp	r1, #0
   1c130:	cmpne	r0, #0
   1c134:	bne	1c40c <readstat_parse_dta+0xfb4>
   1c138:	ldr	r0, [r9, #92]	; 0x5c
   1c13c:	cmp	r0, #0
   1c140:	beq	1c72c <readstat_parse_dta+0x12d4>
   1c144:	ldr	r0, [sp, #60]	; 0x3c
   1c148:	ldr	r8, [r9, #280]	; 0x118
   1c14c:	ldrb	r0, [r0]
   1c150:	tst	r0, #4
   1c154:	beq	1c164 <readstat_parse_dta+0xd0c>
   1c158:	ldr	r0, [r9, #244]	; 0xf4
   1c15c:	cmp	r0, #0
   1c160:	beq	1c6ac <readstat_parse_dta+0x1254>
   1c164:	ldr	r1, [pc, #4072]	; 1d154 <readstat_parse_dta+0x1cfc>
   1c168:	mov	r0, r9
   1c16c:	add	r1, pc, r1
   1c170:	bl	1d8d0 <dta_read_tag>
   1c174:	mov	r6, r0
   1c178:	cmp	r0, #0
   1c17c:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c180:	mov	r4, #0
   1c184:	mov	r0, #0
   1c188:	str	r0, [sp, #80]	; 0x50
   1c18c:	ldr	r0, [sp, #60]	; 0x3c
   1c190:	ldrb	r0, [r0]
   1c194:	tst	r0, #4
   1c198:	bne	1c200 <readstat_parse_dta+0xda8>
   1c19c:	ldr	r3, [r8, #12]
   1c1a0:	ldr	r2, [r8, #20]
   1c1a4:	sub	r0, fp, #88	; 0x58
   1c1a8:	mov	r1, #1
   1c1ac:	blx	r3
   1c1b0:	cmp	r0, #1
   1c1b4:	bne	1c6d0 <readstat_parse_dta+0x1278>
   1c1b8:	ldr	r0, [r9, #92]	; 0x5c
   1c1bc:	cmp	r0, #2
   1c1c0:	bne	1c268 <readstat_parse_dta+0xe10>
   1c1c4:	ldr	r3, [r8, #12]
   1c1c8:	ldr	r2, [r8, #20]
   1c1cc:	add	r0, sp, #112	; 0x70
   1c1d0:	mov	r1, #2
   1c1d4:	blx	r3
   1c1d8:	cmp	r0, #2
   1c1dc:	bne	1c6d0 <readstat_parse_dta+0x1278>
   1c1e0:	ldr	r0, [sp, #60]	; 0x3c
   1c1e4:	ldrh	sl, [sp, #112]	; 0x70
   1c1e8:	ldrb	r0, [r0]
   1c1ec:	tst	r0, #1
   1c1f0:	beq	1c2a4 <readstat_parse_dta+0xe4c>
   1c1f4:	mov	r0, sl
   1c1f8:	bl	48a4 <byteswap2@plt>
   1c1fc:	b	1c2a0 <readstat_parse_dta+0xe48>
   1c200:	ldr	r3, [r8, #12]
   1c204:	ldr	r2, [r8, #20]
   1c208:	add	r0, sp, #112	; 0x70
   1c20c:	mov	r1, #4
   1c210:	blx	r3
   1c214:	mov	r7, #2
   1c218:	cmp	r0, #4
   1c21c:	bne	1c300 <readstat_parse_dta+0xea8>
   1c220:	ldr	r1, [pc, #4000]	; 1d1c8 <readstat_parse_dta+0x1d70>
   1c224:	add	r0, sp, #112	; 0x70
   1c228:	mov	r2, #4
   1c22c:	add	r1, pc, r1
   1c230:	bl	4bbc <bcmp@plt>
   1c234:	cmp	r0, #0
   1c238:	beq	1c3e0 <readstat_parse_dta+0xf88>
   1c23c:	ldr	r1, [pc, #3976]	; 1d1cc <readstat_parse_dta+0x1d74>
   1c240:	add	r0, sp, #112	; 0x70
   1c244:	mov	r2, #4
   1c248:	add	r1, pc, r1
   1c24c:	bl	4bbc <bcmp@plt>
   1c250:	mov	r6, #5
   1c254:	cmp	r0, #0
   1c258:	bne	1c3d0 <readstat_parse_dta+0xf78>
   1c25c:	mov	r0, #1
   1c260:	strb	r0, [fp, #-88]	; 0xffffffa8
   1c264:	b	1c1b8 <readstat_parse_dta+0xd60>
   1c268:	ldr	r3, [r8, #12]
   1c26c:	ldr	r2, [r8, #20]
   1c270:	add	r0, sp, #112	; 0x70
   1c274:	mov	r1, #4
   1c278:	blx	r3
   1c27c:	cmp	r0, #4
   1c280:	bne	1c6d0 <readstat_parse_dta+0x1278>
   1c284:	ldr	r0, [sp, #60]	; 0x3c
   1c288:	ldr	sl, [sp, #112]	; 0x70
   1c28c:	ldrb	r0, [r0]
   1c290:	tst	r0, #1
   1c294:	beq	1c2a4 <readstat_parse_dta+0xe4c>
   1c298:	mov	r0, sl
   1c29c:	bl	47b4 <byteswap4@plt>
   1c2a0:	mov	sl, r0
   1c2a4:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   1c2a8:	cmp	sl, #0
   1c2ac:	cmpeq	r0, #0
   1c2b0:	beq	1c6ec <readstat_parse_dta+0x1294>
   1c2b4:	mov	r6, #32
   1c2b8:	cmp	sl, #1048576	; 0x100000
   1c2bc:	bhi	1c710 <readstat_parse_dta+0x12b8>
   1c2c0:	cmp	r0, #1
   1c2c4:	bne	1c710 <readstat_parse_dta+0x12b8>
   1c2c8:	ldr	r0, [r9, #244]	; 0xf4
   1c2cc:	cmp	r0, #0
   1c2d0:	beq	1c2e0 <readstat_parse_dta+0xe88>
   1c2d4:	ldr	r0, [r9, #96]	; 0x60
   1c2d8:	cmp	sl, r0, lsl #1
   1c2dc:	bcs	1c308 <readstat_parse_dta+0xeb0>
   1c2e0:	ldr	r3, [r8, #8]
   1c2e4:	ldr	r2, [r8, #20]
   1c2e8:	mov	r0, sl
   1c2ec:	mov	r1, #1
   1c2f0:	blx	r3
   1c2f4:	cmn	r0, #1
   1c2f8:	bne	1c3b0 <readstat_parse_dta+0xf58>
   1c2fc:	b	1c6fc <readstat_parse_dta+0x12a4>
   1c300:	mov	r6, #2
   1c304:	b	1c3d0 <readstat_parse_dta+0xf78>
   1c308:	ldr	r0, [sp, #80]	; 0x50
   1c30c:	add	r1, sl, #1
   1c310:	bl	4cb8 <readstat_realloc@plt>
   1c314:	cmp	r0, #0
   1c318:	str	r0, [sp, #80]	; 0x50
   1c31c:	beq	1c704 <readstat_parse_dta+0x12ac>
   1c320:	ldr	r0, [sp, #80]	; 0x50
   1c324:	mov	r1, #0
   1c328:	strb	r1, [r0, sl]
   1c32c:	mov	r1, sl
   1c330:	ldr	r3, [r8, #12]
   1c334:	ldr	r2, [r8, #20]
   1c338:	blx	r3
   1c33c:	cmp	r0, sl
   1c340:	bne	1c6d0 <readstat_parse_dta+0x1278>
   1c344:	mov	r0, #0
   1c348:	mov	r2, #4
   1c34c:	str	r0, [sp, #112]	; 0x70
   1c350:	ldr	r0, [sp, #80]	; 0x50
   1c354:	ldr	r1, [pc, #3992]	; 1d2f4 <readstat_parse_dta+0x1e9c>
   1c358:	add	r1, pc, r1
   1c35c:	bl	4ebc <strncmp@plt>
   1c360:	cmp	r0, #0
   1c364:	bne	1c3b0 <readstat_parse_dta+0xf58>
   1c368:	ldr	r0, [r9, #96]	; 0x60
   1c36c:	ldr	r1, [sp, #80]	; 0x50
   1c370:	add	r2, sp, #112	; 0x70
   1c374:	add	r0, r1, r0
   1c378:	ldr	r1, [pc, #3960]	; 1d2f8 <readstat_parse_dta+0x1ea0>
   1c37c:	add	r1, pc, r1
   1c380:	bl	4c58 <__isoc99_sscanf@plt>
   1c384:	cmp	r0, #1
   1c388:	bne	1c3b0 <readstat_parse_dta+0xf58>
   1c38c:	ldr	r0, [r9, #96]	; 0x60
   1c390:	ldr	r1, [sp, #80]	; 0x50
   1c394:	ldr	r3, [r9, #244]	; 0xf4
   1c398:	ldr	r2, [r9, #276]	; 0x114
   1c39c:	add	r1, r1, r0, lsl #1
   1c3a0:	ldr	r0, [sp, #112]	; 0x70
   1c3a4:	blx	r3
   1c3a8:	cmp	r0, #0
   1c3ac:	bne	1d3a8 <readstat_parse_dta+0x1f50>
   1c3b0:	ldr	r1, [pc, #4088]	; 1d3b0 <readstat_parse_dta+0x1f58>
   1c3b4:	mov	r0, r9
   1c3b8:	add	r1, pc, r1
   1c3bc:	bl	1d8d0 <dta_read_tag>
   1c3c0:	mov	r6, #0
   1c3c4:	cmp	r0, #0
   1c3c8:	bne	1c6f4 <readstat_parse_dta+0x129c>
   1c3cc:	mov	r7, #0
   1c3d0:	cmp	r7, #0
   1c3d4:	mov	r4, r6
   1c3d8:	beq	1c18c <readstat_parse_dta+0xd34>
   1c3dc:	b	1c6d8 <readstat_parse_dta+0x1280>
   1c3e0:	ldr	r1, [pc, #4060]	; 1d3c4 <readstat_parse_dta+0x1f6c>
   1c3e4:	mov	r0, r9
   1c3e8:	add	r1, pc, r1
   1c3ec:	bl	1d8d0 <dta_read_tag>
   1c3f0:	cmp	r0, #0
   1c3f4:	mov	r7, #2
   1c3f8:	mov	r6, r0
   1c3fc:	movweq	r7, #4
   1c400:	b	1c3d0 <readstat_parse_dta+0xf78>
   1c404:	mov	r6, #5
   1c408:	b	1bbb4 <readstat_parse_dta+0x75c>
   1c40c:	mov	r0, #0
   1c410:	mov	sl, #0
   1c414:	mov	r7, #0
   1c418:	str	r0, [sp, #80]	; 0x50
   1c41c:	ldr	r0, [r9, #28]
   1c420:	mov	r1, r9
   1c424:	sub	r2, fp, #88	; 0x58
   1c428:	add	r3, sp, #88	; 0x58
   1c42c:	add	r0, r0, sl
   1c430:	ldrh	r0, [r0]
   1c434:	bl	4bb0 <dta_type_info@plt>
   1c438:	cmp	r0, #0
   1c43c:	bne	1c62c <readstat_parse_dta+0x11d4>
   1c440:	ldr	r6, [sp, #88]	; 0x58
   1c444:	cmp	r6, #0
   1c448:	beq	1c464 <readstat_parse_dta+0x100c>
   1c44c:	cmp	r6, #6
   1c450:	bne	1c47c <readstat_parse_dta+0x1024>
   1c454:	mov	r4, #0
   1c458:	str	r4, [fp, #-88]	; 0xffffffa8
   1c45c:	str	r4, [sp, #88]	; 0x58
   1c460:	b	1c470 <readstat_parse_dta+0x1018>
   1c464:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1c468:	add	r4, r0, #1
   1c46c:	str	r4, [fp, #-88]	; 0xffffffa8
   1c470:	mov	r6, #0
   1c474:	b	1c480 <readstat_parse_dta+0x1028>
   1c478:	.word	0x0000ac14
   1c47c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1c480:	mov	r0, #1
   1c484:	movw	r1, #2152	; 0x868
   1c488:	bl	4778 <calloc@plt>
   1c48c:	mov	r8, r0
   1c490:	ldr	r0, [sp, #80]	; 0x50
   1c494:	str	r0, [r8, #2148]	; 0x864
   1c498:	strd	r6, [r8]
   1c49c:	str	r4, [r8, #1596]	; 0x63c
   1c4a0:	ldr	r0, [r9, #36]	; 0x24
   1c4a4:	ldr	r3, [r9, #76]	; 0x4c
   1c4a8:	ldr	r1, [r9, #236]	; 0xec
   1c4ac:	mla	r2, r3, r7, r0
   1c4b0:	str	r1, [sp]
   1c4b4:	add	r0, r8, #8
   1c4b8:	mov	r1, #300	; 0x12c
   1c4bc:	bl	4c04 <readstat_convert@plt>
   1c4c0:	ldr	r3, [r9, #88]	; 0x58
   1c4c4:	ldr	r2, [r9, #68]	; 0x44
   1c4c8:	mul	r0, r3, r7
   1c4cc:	ldrb	r0, [r2, r0]!
   1c4d0:	cmp	r0, #0
   1c4d4:	beq	1c4ec <readstat_parse_dta+0x1094>
   1c4d8:	ldr	r0, [r9, #236]	; 0xec
   1c4dc:	mov	r1, #1024	; 0x400
   1c4e0:	str	r0, [sp]
   1c4e4:	add	r0, r8, #564	; 0x234
   1c4e8:	bl	4c04 <readstat_convert@plt>
   1c4ec:	ldr	r3, [r9, #80]	; 0x50
   1c4f0:	ldr	r2, [r9, #52]	; 0x34
   1c4f4:	mul	r0, r3, r7
   1c4f8:	ldrb	r0, [r2, r0]!
   1c4fc:	cmp	r0, #0
   1c500:	beq	1c5a0 <readstat_parse_dta+0x1148>
   1c504:	ldr	r0, [r9, #236]	; 0xec
   1c508:	mov	r4, sl
   1c50c:	add	sl, r8, #308	; 0x134
   1c510:	mov	r1, #256	; 0x100
   1c514:	str	r0, [sp]
   1c518:	mov	r0, sl
   1c51c:	bl	4c04 <readstat_convert@plt>
   1c520:	ldrb	r0, [r8, #308]	; 0x134
   1c524:	cmp	r0, #37	; 0x25
   1c528:	bne	1c55c <readstat_parse_dta+0x1104>
   1c52c:	ldrb	r0, [r8, #309]	; 0x135
   1c530:	cmp	r0, #45	; 0x2d
   1c534:	bne	1c54c <readstat_parse_dta+0x10f4>
   1c538:	mov	r0, #1
   1c53c:	b	1c558 <readstat_parse_dta+0x1100>
   1c540:	.word	0x0000ab60
   1c544:	.word	0x0000ab4c
   1c548:	.word	0x0000ab4f
   1c54c:	cmp	r0, #126	; 0x7e
   1c550:	movne	r0, #3
   1c554:	moveq	r0, #2
   1c558:	str	r0, [r8, #2132]	; 0x854
   1c55c:	ldr	r1, [pc, #3928]	; 1d4bc <readstat_parse_dta+0x2064>
   1c560:	mov	r0, sl
   1c564:	add	r2, sp, #112	; 0x70
   1c568:	add	r1, pc, r1
   1c56c:	bl	4c58 <__isoc99_sscanf@plt>
   1c570:	cmp	r0, #1
   1c574:	beq	1c594 <readstat_parse_dta+0x113c>
   1c578:	ldr	r1, [pc, #3904]	; 1d4c0 <readstat_parse_dta+0x2068>
   1c57c:	mov	r0, sl
   1c580:	add	r2, sp, #112	; 0x70
   1c584:	add	r1, pc, r1
   1c588:	bl	4c58 <__isoc99_sscanf@plt>
   1c58c:	cmp	r0, #1
   1c590:	bne	1c59c <readstat_parse_dta+0x1144>
   1c594:	ldr	r0, [sp, #112]	; 0x70
   1c598:	str	r0, [r8, #2136]	; 0x858
   1c59c:	mov	sl, r4
   1c5a0:	ldr	r0, [r9, #228]	; 0xe4
   1c5a4:	str	r8, [r0, r7, lsl #2]
   1c5a8:	ldr	r0, [r9, #84]	; 0x54
   1c5ac:	ldr	r2, [r9, #60]	; 0x3c
   1c5b0:	ldr	r1, [r9, #228]	; 0xe4
   1c5b4:	ldr	r6, [r9, #248]	; 0xf8
   1c5b8:	ldr	r3, [r9, #276]	; 0x114
   1c5bc:	mul	r0, r0, r7
   1c5c0:	ldr	r1, [r1, r7, lsl #2]
   1c5c4:	ldrb	r0, [r2, r0]!
   1c5c8:	cmp	r0, #0
   1c5cc:	moveq	r2, r0
   1c5d0:	mov	r0, r7
   1c5d4:	blx	r6
   1c5d8:	cmp	r0, #2
   1c5dc:	beq	1c600 <readstat_parse_dta+0x11a8>
   1c5e0:	cmp	r0, #1
   1c5e4:	beq	1c6a4 <readstat_parse_dta+0x124c>
   1c5e8:	ldr	r0, [sp, #80]	; 0x50
   1c5ec:	add	r0, r0, #1
   1c5f0:	str	r0, [sp, #80]	; 0x50
   1c5f4:	b	1c610 <readstat_parse_dta+0x11b8>
   1c5f8:	.word	0x0000ab3f
   1c5fc:	.word	0x0000adfd
   1c600:	ldr	r0, [r9, #228]	; 0xe4
   1c604:	mov	r1, #1
   1c608:	ldr	r0, [r0, r7, lsl #2]
   1c60c:	str	r1, [r0, #2144]	; 0x860
   1c610:	ldr	r0, [r9, #148]	; 0x94
   1c614:	add	r7, r7, #1
   1c618:	add	sl, sl, #2
   1c61c:	cmp	r7, r0
   1c620:	blt	1c41c <readstat_parse_dta+0xfc4>
   1c624:	b	1c138 <readstat_parse_dta+0xce0>
   1c628:	.word	0x0000ab18
   1c62c:	mov	r6, r0
   1c630:	b	1bbb4 <readstat_parse_dta+0x75c>
   1c634:	ldr	r0, [sp, #80]	; 0x50
   1c638:	ldr	r2, [sp, #112]	; 0x70
   1c63c:	cmp	r0, #0
   1c640:	beq	1c650 <readstat_parse_dta+0x11f8>
   1c644:	mov	r0, r2
   1c648:	bl	47b4 <byteswap4@plt>
   1c64c:	mov	r2, r0
   1c650:	mov	r3, #0
   1c654:	b	1be3c <readstat_parse_dta+0x9e4>
   1c658:	.word	0x0000aafa
   1c65c:	.word	0x0000aade
   1c660:	.word	0x0000aad7
   1c664:	add	r0, sp, #112	; 0x70
   1c668:	bl	4850 <mktime@plt>
   1c66c:	str	r0, [r9, #12]
   1c670:	ldr	r8, [sp, #56]	; 0x38
   1c674:	ldr	r1, [pc, #4032]	; 1d63c <readstat_parse_dta+0x21e4>
   1c678:	mov	r0, r9
   1c67c:	add	r1, pc, r1
   1c680:	bl	1d8d0 <dta_read_tag>
   1c684:	mov	r6, r0
   1c688:	mov	r0, r4
   1c68c:	bl	48bc <free@plt>
   1c690:	cmp	r8, #0
   1c694:	beq	1ba94 <readstat_parse_dta+0x63c>
   1c698:	mov	r0, r8
   1c69c:	b	1ba90 <readstat_parse_dta+0x638>
   1c6a0:	.word	0x0000aabf
   1c6a4:	mov	r6, #4
   1c6a8:	b	1bbb4 <readstat_parse_dta+0x75c>
   1c6ac:	ldr	r0, [sp, #56]	; 0x38
   1c6b0:	ldr	r3, [r8, #8]
   1c6b4:	ldr	r2, [r8, #20]
   1c6b8:	mov	r1, #0
   1c6bc:	ldr	r0, [r0]
   1c6c0:	blx	r3
   1c6c4:	cmn	r0, #1
   1c6c8:	bne	1c72c <readstat_parse_dta+0x12d4>
   1c6cc:	b	1cb5c <readstat_parse_dta+0x1704>
   1c6d0:	mov	r6, #2
   1c6d4:	b	1c710 <readstat_parse_dta+0x12b8>
   1c6d8:	cmp	r7, #4
   1c6dc:	beq	1c710 <readstat_parse_dta+0x12b8>
   1c6e0:	cmp	r7, #2
   1c6e4:	beq	1c710 <readstat_parse_dta+0x12b8>
   1c6e8:	b	1c72c <readstat_parse_dta+0x12d4>
   1c6ec:	mov	r6, r4
   1c6f0:	b	1c710 <readstat_parse_dta+0x12b8>
   1c6f4:	mov	r6, r0
   1c6f8:	b	1c710 <readstat_parse_dta+0x12b8>
   1c6fc:	mov	r6, #15
   1c700:	b	1c710 <readstat_parse_dta+0x12b8>
   1c704:	mov	r0, #0
   1c708:	mov	r6, #3
   1c70c:	str	r0, [sp, #80]	; 0x50
   1c710:	ldr	r0, [sp, #80]	; 0x50
   1c714:	cmp	r0, #0
   1c718:	beq	1c724 <readstat_parse_dta+0x12cc>
   1c71c:	ldr	r0, [sp, #80]	; 0x50
   1c720:	bl	48bc <free@plt>
   1c724:	cmp	r6, #0
   1c728:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c72c:	ldr	r0, [sp, #60]	; 0x3c
   1c730:	ldrb	r0, [r0]
   1c734:	tst	r0, #4
   1c738:	bne	1c81c <readstat_parse_dta+0x13c4>
   1c73c:	ldr	r3, [r5, #8]
   1c740:	ldr	r2, [r5, #20]
   1c744:	mov	r0, #0
   1c748:	mov	r1, #1
   1c74c:	blx	r3
   1c750:	ldr	r2, [sp, #56]	; 0x38
   1c754:	asr	r1, r0, #31
   1c758:	cmn	r0, #1
   1c75c:	strd	r0, [r2]
   1c760:	beq	1cb50 <readstat_parse_dta+0x16f8>
   1c764:	ldr	r2, [sp, #72]	; 0x48
   1c768:	ldr	r1, [r9, #160]	; 0xa0
   1c76c:	ldrd	r2, [r2]
   1c770:	umull	r2, r7, r2, r1
   1c774:	mla	r1, r3, r1, r7
   1c778:	adds	r2, r2, r0
   1c77c:	adc	r3, r1, r0, asr #31
   1c780:	ldr	r0, [sp, #48]	; 0x30
   1c784:	strd	r2, [r0]
   1c788:	ldrb	r0, [r9, #192]	; 0xc0
   1c78c:	tst	r0, #4
   1c790:	bne	1c81c <readstat_parse_dta+0x13c4>
   1c794:	ldr	r0, [r9, #256]	; 0x100
   1c798:	ldr	sl, [r9, #280]	; 0x118
   1c79c:	cmp	r0, #0
   1c7a0:	beq	1d408 <readstat_parse_dta+0x1fb0>
   1c7a4:	ldr	r0, [sp, #56]	; 0x38
   1c7a8:	ldr	r3, [sl, #8]
   1c7ac:	ldr	r2, [sl, #20]
   1c7b0:	mov	r1, #0
   1c7b4:	ldr	r0, [r0]
   1c7b8:	blx	r3
   1c7bc:	cmn	r0, #1
   1c7c0:	beq	1cb5c <readstat_parse_dta+0x1704>
   1c7c4:	ldr	r1, [pc, #3700]	; 1d640 <readstat_parse_dta+0x21e8>
   1c7c8:	mov	r0, r9
   1c7cc:	add	r1, pc, r1
   1c7d0:	bl	1d8d0 <dta_read_tag>
   1c7d4:	mov	r6, r0
   1c7d8:	cmp	r0, #0
   1c7dc:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c7e0:	ldr	r0, [sp, #76]	; 0x4c
   1c7e4:	ldrd	r0, [r0]
   1c7e8:	subs	r2, r0, #1
   1c7ec:	sbcs	r2, r1, #0
   1c7f0:	blt	1cbe4 <readstat_parse_dta+0x178c>
   1c7f4:	bl	23564 <__aeabi_l2d>
   1c7f8:	ldr	r2, [sp, #68]	; 0x44
   1c7fc:	vmov	d8, r0, r1
   1c800:	ldrd	r2, [r2]
   1c804:	mov	r0, r2
   1c808:	mov	r1, r3
   1c80c:	bl	23564 <__aeabi_l2d>
   1c810:	vmov	d16, r0, r1
   1c814:	vdiv.f64	d0, d16, d8
   1c818:	b	1cbe8 <readstat_parse_dta+0x1790>
   1c81c:	ldr	r0, [sp, #52]	; 0x34
   1c820:	ldr	r4, [r9, #280]	; 0x118
   1c824:	mov	r1, #0
   1c828:	ldr	r0, [r0]
   1c82c:	ldr	r3, [r4, #8]
   1c830:	ldr	r2, [r4, #20]
   1c834:	blx	r3
   1c838:	cmn	r0, #1
   1c83c:	beq	1cb24 <readstat_parse_dta+0x16cc>
   1c840:	ldr	r1, [pc, #4064]	; 1d828 <readstat_parse_dta+0x23d0>
   1c844:	mov	r0, r9
   1c848:	add	r1, pc, r1
   1c84c:	bl	1d8d0 <dta_read_tag>
   1c850:	mov	r6, r0
   1c854:	cmp	r0, #0
   1c858:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c85c:	mov	r0, #100	; 0x64
   1c860:	str	r0, [r9, #224]	; 0xe0
   1c864:	mov	r0, #400	; 0x190
   1c868:	bl	4bf8 <readstat_malloc@plt>
   1c86c:	str	r0, [r9, #216]	; 0xd8
   1c870:	add	r0, sp, #88	; 0x58
   1c874:	mov	r1, #3
   1c878:	ldr	r3, [r4, #12]
   1c87c:	ldr	r2, [r4, #20]
   1c880:	blx	r3
   1c884:	cmp	r0, #3
   1c888:	bne	1bbb0 <readstat_parse_dta+0x758>
   1c88c:	add	r0, sp, #112	; 0x70
   1c890:	add	r8, r0, #4
   1c894:	ldr	r1, [pc, #4080]	; 1d88c <readstat_parse_dta+0x2434>
   1c898:	add	r0, sp, #88	; 0x58
   1c89c:	mov	r2, #3
   1c8a0:	add	r1, pc, r1
   1c8a4:	bl	4bbc <bcmp@plt>
   1c8a8:	cmp	r0, #0
   1c8ac:	bne	1cba4 <readstat_parse_dta+0x174c>
   1c8b0:	ldr	r1, [r9, #116]	; 0x74
   1c8b4:	ldr	r0, [r9, #280]	; 0x118
   1c8b8:	cmp	r1, #5
   1c8bc:	bcc	1c90c <readstat_parse_dta+0x14b4>
   1c8c0:	ldr	r3, [r0, #12]
   1c8c4:	ldr	r2, [r0, #20]
   1c8c8:	add	r0, sp, #112	; 0x70
   1c8cc:	mov	r1, #17
   1c8d0:	blx	r3
   1c8d4:	mov	r6, #2
   1c8d8:	cmp	r0, #17
   1c8dc:	bne	1c9c8 <readstat_parse_dta+0x1570>
   1c8e0:	ldr	r0, [sp, #60]	; 0x3c
   1c8e4:	ldr	r1, [sp, #112]	; 0x70
   1c8e8:	ldrb	r0, [r0]
   1c8ec:	str	r1, [sp, #80]	; 0x50
   1c8f0:	tst	r0, #1
   1c8f4:	bne	1c950 <readstat_parse_dta+0x14f8>
   1c8f8:	ldr	r0, [r8]
   1c8fc:	str	r0, [sp, #52]	; 0x34
   1c900:	ldr	r0, [r8, #4]
   1c904:	str	r0, [sp, #44]	; 0x2c
   1c908:	b	1c97c <readstat_parse_dta+0x1524>
   1c90c:	ldr	r3, [r0, #12]
   1c910:	ldr	r2, [r0, #20]
   1c914:	add	r0, sp, #112	; 0x70
   1c918:	mov	r1, #13
   1c91c:	blx	r3
   1c920:	mov	r6, #2
   1c924:	cmp	r0, #13
   1c928:	bne	1c9c8 <readstat_parse_dta+0x1570>
   1c92c:	ldr	r0, [sp, #60]	; 0x3c
   1c930:	ldr	r1, [sp, #112]	; 0x70
   1c934:	ldrb	r0, [r0]
   1c938:	str	r1, [sp, #80]	; 0x50
   1c93c:	tst	r0, #1
   1c940:	bne	1c990 <readstat_parse_dta+0x1538>
   1c944:	ldr	r0, [sp, #116]	; 0x74
   1c948:	str	r0, [sp, #52]	; 0x34
   1c94c:	b	1c9b4 <readstat_parse_dta+0x155c>
   1c950:	ldr	r0, [sp, #80]	; 0x50
   1c954:	bl	47b4 <byteswap4@plt>
   1c958:	str	r0, [sp, #80]	; 0x50
   1c95c:	ldr	r0, [r8]
   1c960:	str	r0, [sp, #52]	; 0x34
   1c964:	ldr	r0, [r8, #4]
   1c968:	str	r0, [sp, #44]	; 0x2c
   1c96c:	ldr	r0, [sp, #60]	; 0x3c
   1c970:	ldrb	r0, [r0]
   1c974:	tst	r0, #1
   1c978:	bne	1cab0 <readstat_parse_dta+0x1658>
   1c97c:	ldr	sl, [sp, #125]	; 0x7d
   1c980:	ldrb	r7, [sp, #124]	; 0x7c
   1c984:	b	1c9c4 <readstat_parse_dta+0x156c>
   1c988:	.word	0x0000a769
   1c98c:	.word	0x0000a681
   1c990:	ldr	r0, [sp, #80]	; 0x50
   1c994:	bl	47b4 <byteswap4@plt>
   1c998:	str	r0, [sp, #80]	; 0x50
   1c99c:	ldr	r0, [sp, #60]	; 0x3c
   1c9a0:	ldr	r1, [sp, #116]	; 0x74
   1c9a4:	ldrb	r0, [r0]
   1c9a8:	str	r1, [sp, #52]	; 0x34
   1c9ac:	tst	r0, #1
   1c9b0:	bne	1caf0 <readstat_parse_dta+0x1698>
   1c9b4:	ldr	sl, [sp, #121]	; 0x79
   1c9b8:	ldrb	r7, [sp, #120]	; 0x78
   1c9bc:	mov	r0, #0
   1c9c0:	str	r0, [sp, #44]	; 0x2c
   1c9c4:	mov	r6, #0
   1c9c8:	cmp	r6, #0
   1c9cc:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1c9d0:	uxtb	r0, r7
   1c9d4:	cmp	r0, #130	; 0x82
   1c9d8:	bne	1ca90 <readstat_parse_dta+0x1638>
   1c9dc:	ldr	r1, [r9, #220]	; 0xdc
   1c9e0:	ldr	r0, [r9, #224]	; 0xe0
   1c9e4:	cmp	r1, r0
   1c9e8:	bne	1ca0c <readstat_parse_dta+0x15b4>
   1c9ec:	lsl	r0, r1, #1
   1c9f0:	lsl	r1, r1, #3
   1c9f4:	str	r0, [r9, #224]	; 0xe0
   1c9f8:	ldr	r0, [r9, #216]	; 0xd8
   1c9fc:	bl	4cb8 <readstat_realloc@plt>
   1ca00:	cmp	r0, #0
   1ca04:	str	r0, [r9, #216]	; 0xd8
   1ca08:	beq	1beb8 <readstat_parse_dta+0xa60>
   1ca0c:	add	r0, sl, #32
   1ca10:	bl	4bf8 <readstat_malloc@plt>
   1ca14:	cmp	r0, #0
   1ca18:	beq	1beb8 <readstat_parse_dta+0xa60>
   1ca1c:	mov	r6, r0
   1ca20:	ldr	r0, [sp, #80]	; 0x50
   1ca24:	ldr	r2, [sp, #52]	; 0x34
   1ca28:	ldr	r3, [sp, #44]	; 0x2c
   1ca2c:	strh	r0, [r6]
   1ca30:	ldrh	r0, [fp, #-84]	; 0xffffffac
   1ca34:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1ca38:	strd	r2, [r6, #8]
   1ca3c:	mov	r2, #130	; 0x82
   1ca40:	strb	r2, [r6, #16]
   1ca44:	str	r1, [r6, #2]
   1ca48:	strh	r0, [r6, #6]
   1ca4c:	ldrb	r0, [sp, #110]	; 0x6e
   1ca50:	ldrh	r1, [sp, #108]	; 0x6c
   1ca54:	str	sl, [r6, #20]
   1ca58:	strh	r1, [r6, #17]
   1ca5c:	strb	r0, [r6, #19]
   1ca60:	ldrd	r0, [r9, #216]	; 0xd8
   1ca64:	add	r2, r1, #1
   1ca68:	str	r2, [r9, #220]	; 0xdc
   1ca6c:	str	r6, [r0, r1, lsl #2]
   1ca70:	add	r0, r6, #24
   1ca74:	mov	r1, sl
   1ca78:	ldr	r3, [r4, #12]
   1ca7c:	ldr	r2, [r4, #20]
   1ca80:	blx	r3
   1ca84:	ldr	r1, [r6, #20]
   1ca88:	cmp	r0, r1
   1ca8c:	bne	1bbb0 <readstat_parse_dta+0x758>
   1ca90:	ldr	r3, [r4, #12]
   1ca94:	ldr	r2, [r4, #20]
   1ca98:	add	r0, sp, #88	; 0x58
   1ca9c:	mov	r1, #3
   1caa0:	blx	r3
   1caa4:	cmp	r0, #3
   1caa8:	beq	1c894 <readstat_parse_dta+0x143c>
   1caac:	b	1bbb0 <readstat_parse_dta+0x758>
   1cab0:	ldr	r0, [sp, #52]	; 0x34
   1cab4:	ldr	r1, [sp, #44]	; 0x2c
   1cab8:	bl	479c <byteswap8@plt>
   1cabc:	str	r0, [sp, #52]	; 0x34
   1cac0:	ldr	r0, [sp, #60]	; 0x3c
   1cac4:	ldr	sl, [sp, #125]	; 0x7d
   1cac8:	ldrb	r7, [sp, #124]	; 0x7c
   1cacc:	mov	r6, #0
   1cad0:	str	r1, [sp, #44]	; 0x2c
   1cad4:	ldrb	r0, [r0]
   1cad8:	tst	r0, #1
   1cadc:	beq	1c9c8 <readstat_parse_dta+0x1570>
   1cae0:	mov	r0, sl
   1cae4:	bl	47b4 <byteswap4@plt>
   1cae8:	mov	sl, r0
   1caec:	b	1c9c8 <readstat_parse_dta+0x1570>
   1caf0:	ldr	r0, [sp, #52]	; 0x34
   1caf4:	bl	47b4 <byteswap4@plt>
   1caf8:	str	r0, [sp, #52]	; 0x34
   1cafc:	ldr	r0, [sp, #60]	; 0x3c
   1cb00:	ldr	sl, [sp, #121]	; 0x79
   1cb04:	ldrb	r7, [sp, #120]	; 0x78
   1cb08:	ldrb	r0, [r0]
   1cb0c:	tst	r0, #1
   1cb10:	beq	1c9bc <readstat_parse_dta+0x1564>
   1cb14:	mov	r0, sl
   1cb18:	bl	47b4 <byteswap4@plt>
   1cb1c:	mov	sl, r0
   1cb20:	b	1c9bc <readstat_parse_dta+0x1564>
   1cb24:	ldr	r0, [r9, #264]	; 0x108
   1cb28:	mov	r6, #15
   1cb2c:	cmp	r0, #0
   1cb30:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1cb34:	ldr	r0, [sp, #52]	; 0x34
   1cb38:	add	r4, r9, #288	; 0x120
   1cb3c:	ldrd	r0, [r0]
   1cb40:	stm	sp, {r0, r1}
   1cb44:	ldr	r2, [pc, #3416]	; 1d8a4 <readstat_parse_dta+0x244c>
   1cb48:	add	r2, pc, r2
   1cb4c:	b	1cb84 <readstat_parse_dta+0x172c>
   1cb50:	mov	r6, #15
   1cb54:	b	1bbb4 <readstat_parse_dta+0x75c>
   1cb58:	.word	0x0000a621
   1cb5c:	ldr	r0, [r9, #264]	; 0x108
   1cb60:	mov	r6, #15
   1cb64:	cmp	r0, #0
   1cb68:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1cb6c:	ldr	r0, [sp, #56]	; 0x38
   1cb70:	add	r4, r9, #288	; 0x120
   1cb74:	ldrd	r0, [r0]
   1cb78:	stm	sp, {r0, r1}
   1cb7c:	ldr	r2, [pc, #3356]	; 1d8a0 <readstat_parse_dta+0x2448>
   1cb80:	add	r2, pc, r2
   1cb84:	mov	r0, r4
   1cb88:	mov	r1, #256	; 0x100
   1cb8c:	bl	4c4c <snprintf@plt>
   1cb90:	ldr	r2, [r9, #264]	; 0x108
   1cb94:	ldr	r1, [r9, #276]	; 0x114
   1cb98:	mov	r0, r4
   1cb9c:	b	1b5d0 <readstat_parse_dta+0x178>
   1cba0:	.word	0x0000a60b
   1cba4:	ldr	r1, [pc, #3324]	; 1d8a8 <readstat_parse_dta+0x2450>
   1cba8:	add	r0, sp, #88	; 0x58
   1cbac:	mov	r2, #3
   1cbb0:	add	r1, pc, r1
   1cbb4:	bl	4bbc <bcmp@plt>
   1cbb8:	mov	r6, #5
   1cbbc:	cmp	r0, #0
   1cbc0:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1cbc4:	ldr	r1, [pc, #3296]	; 1d8ac <readstat_parse_dta+0x2454>
   1cbc8:	mov	r0, r9
   1cbcc:	add	r1, pc, r1
   1cbd0:	bl	1d8d0 <dta_read_tag>
   1cbd4:	mov	r6, r0
   1cbd8:	cmp	r0, #0
   1cbdc:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1cbe0:	b	1c794 <readstat_parse_dta+0x133c>
   1cbe4:	vmov.i32	d0, #0	; 0x00000000
   1cbe8:	ldr	r1, [r9, #268]	; 0x10c
   1cbec:	cmp	r1, #0
   1cbf0:	beq	1cc08 <readstat_parse_dta+0x17b0>
   1cbf4:	ldr	r0, [r9, #276]	; 0x114
   1cbf8:	blx	r1
   1cbfc:	mov	r6, #4
   1cc00:	cmp	r0, #0
   1cc04:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1cc08:	ldr	r0, [r9, #160]	; 0xa0
   1cc0c:	ldr	r1, [r9, #280]	; 0x118
   1cc10:	cmp	r0, #0
   1cc14:	str	r1, [sp, #44]	; 0x2c
   1cc18:	beq	1cc4c <readstat_parse_dta+0x17f4>
   1cc1c:	bl	4bf8 <readstat_malloc@plt>
   1cc20:	cmp	r0, #0
   1cc24:	str	r0, [sp, #52]	; 0x34
   1cc28:	bne	1cc54 <readstat_parse_dta+0x17fc>
   1cc2c:	b	1beb8 <readstat_parse_dta+0xa60>
   1cc30:	.word	0x0000a51f
   1cc34:	.word	0x0000a4ff
   1cc38:	.word	0x0000a4bf
   1cc3c:	.word	0x0000a490
   1cc40:	.word	0x0000a47c
   1cc44:	.word	0x0000a43d
   1cc48:	.word	0x0000a42a
   1cc4c:	mov	r0, #0
   1cc50:	str	r0, [sp, #52]	; 0x34
   1cc54:	ldr	r0, [sp, #64]	; 0x40
   1cc58:	ldrd	r0, [r0]
   1cc5c:	orrs	r1, r0, r1
   1cc60:	beq	1cc88 <readstat_parse_dta+0x1830>
   1cc64:	ldr	r1, [r9, #160]	; 0xa0
   1cc68:	mul	r0, r1, r0
   1cc6c:	ldr	r1, [sp, #44]	; 0x2c
   1cc70:	ldr	r3, [r1, #8]
   1cc74:	ldr	r2, [r1, #20]
   1cc78:	mov	r1, #1
   1cc7c:	blx	r3
   1cc80:	cmn	r0, #1
   1cc84:	beq	1d3a0 <readstat_parse_dta+0x1f48>
   1cc88:	ldr	r0, [sp, #76]	; 0x4c
   1cc8c:	ldr	r8, [r0]
   1cc90:	ldr	r7, [r0, #4]
   1cc94:	subs	r0, r8, #1
   1cc98:	sbcs	r0, r7, #0
   1cc9c:	blt	1d340 <readstat_parse_dta+0x1ee8>
   1cca0:	add	r0, r9, #208	; 0xd0
   1cca4:	vmov.i32	q4, #0	; 0x00000000
   1cca8:	str	r0, [sp, #20]
   1ccac:	sub	r0, fp, #88	; 0x58
   1ccb0:	add	r0, r0, #8
   1ccb4:	str	r0, [sp, #16]
   1ccb8:	add	r0, sp, #88	; 0x58
   1ccbc:	orr	r1, r0, #1
   1ccc0:	str	r1, [sp, #36]	; 0x24
   1ccc4:	orr	r1, r0, #2
   1ccc8:	str	r1, [sp, #32]
   1cccc:	orr	r1, r0, #4
   1ccd0:	add	r0, r0, #8
   1ccd4:	str	r1, [sp, #28]
   1ccd8:	str	r0, [sp, #56]	; 0x38
   1ccdc:	ldr	r0, [pc, #3020]	; 1d8b0 <readstat_parse_dta+0x2458>
   1cce0:	add	r0, pc, r0
   1cce4:	add	r0, r0, #2
   1cce8:	str	r0, [sp, #24]
   1ccec:	mov	r0, #0
   1ccf0:	str	r0, [sp, #40]	; 0x28
   1ccf4:	ldr	r0, [sp, #44]	; 0x2c
   1ccf8:	ldr	r1, [r9, #160]	; 0xa0
   1ccfc:	ldr	r3, [r0, #12]
   1cd00:	ldr	r2, [r0, #20]
   1cd04:	ldr	r0, [sp, #52]	; 0x34
   1cd08:	blx	r3
   1cd0c:	ldr	r1, [r9, #160]	; 0xa0
   1cd10:	cmp	r0, r1
   1cd14:	bne	1d3c8 <readstat_parse_dta+0x1f70>
   1cd18:	ldr	r0, [r9, #148]	; 0x94
   1cd1c:	cmp	r0, #1
   1cd20:	blt	1d2a0 <readstat_parse_dta+0x1e48>
   1cd24:	mov	r0, #0
   1cd28:	mov	sl, #0
   1cd2c:	str	r0, [sp, #80]	; 0x50
   1cd30:	add	r0, sp, #88	; 0x58
   1cd34:	ldr	r3, [sp, #56]	; 0x38
   1cd38:	mov	r1, r9
   1cd3c:	add	r2, sp, #108	; 0x6c
   1cd40:	vst1.64	{d8-d9}, [r0]
   1cd44:	ldr	r0, [r9, #28]
   1cd48:	add	r0, r0, sl, lsl #1
   1cd4c:	ldrh	r0, [r0]
   1cd50:	bl	4bb0 <dta_type_info@plt>
   1cd54:	cmp	r0, #0
   1cd58:	bne	1d398 <readstat_parse_dta+0x1f40>
   1cd5c:	ldr	r2, [r9, #228]	; 0xe4
   1cd60:	ldr	r0, [sp, #108]	; 0x6c
   1cd64:	ldr	r1, [sp, #80]	; 0x50
   1cd68:	ldr	r2, [r2, sl, lsl #2]
   1cd6c:	add	r1, r0, r1
   1cd70:	ldr	r2, [r2, #2144]	; 0x860
   1cd74:	cmp	r2, #0
   1cd78:	bne	1d28c <readstat_parse_dta+0x1e34>
   1cd7c:	ldr	r2, [r9, #160]	; 0xa0
   1cd80:	cmp	r1, r2
   1cd84:	bhi	1d3bc <readstat_parse_dta+0x1f64>
   1cd88:	ldr	r1, [sp, #96]	; 0x60
   1cd8c:	cmp	r1, #6
   1cd90:	bhi	1d23c <readstat_parse_dta+0x1de4>
   1cd94:	add	r2, pc, #4
   1cd98:	ldr	r1, [r2, r1, lsl #2]
   1cd9c:	add	pc, r2, r1
   1cda0:	.word	0x0000001c
   1cda4:	.word	0x0000005c
   1cda8:	.word	0x000000f4
   1cdac:	.word	0x0000016c
   1cdb0:	.word	0x000001a0
   1cdb4:	.word	0x00000230
   1cdb8:	.word	0x000002b4
   1cdbc:	cmp	r0, #0
   1cdc0:	beq	1d11c <readstat_parse_dta+0x1cc4>
   1cdc4:	ldr	r1, [sp, #52]	; 0x34
   1cdc8:	ldr	r2, [sp, #80]	; 0x50
   1cdcc:	mov	r3, #0
   1cdd0:	add	r1, r1, r2
   1cdd4:	ldrb	r2, [r1, r3]
   1cdd8:	cmp	r2, #0
   1cddc:	beq	1d120 <readstat_parse_dta+0x1cc8>
   1cde0:	add	r3, r3, #1
   1cde4:	cmp	r0, r3
   1cde8:	bne	1cdd4 <readstat_parse_dta+0x197c>
   1cdec:	mov	r3, r0
   1cdf0:	b	1d120 <readstat_parse_dta+0x1cc8>
   1cdf4:	.word	0x0000a364
   1cdf8:	.word	0x0000a350
   1cdfc:	ldr	r0, [sp, #52]	; 0x34
   1ce00:	ldr	r1, [sp, #80]	; 0x50
   1ce04:	ldrb	r0, [r0, r1]
   1ce08:	ldr	r1, [sp, #60]	; 0x3c
   1ce0c:	ldrb	r1, [r1]
   1ce10:	tst	r1, #2
   1ce14:	beq	1ce1c <readstat_parse_dta+0x19c4>
   1ce18:	bl	4d3c <ones_to_twos_complement1@plt>
   1ce1c:	ldrsb	r2, [r9, #193]	; 0xc1
   1ce20:	sxtb	r3, r0
   1ce24:	mov	r1, #0
   1ce28:	cmp	r3, r2
   1ce2c:	mov	r2, #0
   1ce30:	ble	1ce60 <readstat_parse_dta+0x1a08>
   1ce34:	ldr	r2, [sp, #60]	; 0x3c
   1ce38:	cmp	r3, #101	; 0x65
   1ce3c:	mov	r1, #0
   1ce40:	movwgt	r1, #1
   1ce44:	ldrb	r2, [r2]
   1ce48:	and	r2, r2, #8
   1ce4c:	and	r1, r1, r2, lsr #3
   1ce50:	mov	r2, #1
   1ce54:	cmp	r1, #0
   1ce58:	movwne	r2, #2
   1ce5c:	subne	r1, r0, #5
   1ce60:	ldr	r3, [pc, #2640]	; 1d8b8 <readstat_parse_dta+0x2460>
   1ce64:	strb	r0, [sp, #88]	; 0x58
   1ce68:	ldr	r0, [sp, #36]	; 0x24
   1ce6c:	add	r3, pc, r3
   1ce70:	mov	r7, r3
   1ce74:	ldr	r3, [r3, #8]
   1ce78:	add	r7, r7, #1
   1ce7c:	vld1.8	{d16}, [r7]
   1ce80:	str	r3, [r0, #7]
   1ce84:	vst1.8	{d16}, [r0]
   1ce88:	b	1d0d4 <readstat_parse_dta+0x1c7c>
   1ce8c:	.word	0x0000a2f9
   1ce90:	.word	0x0000a2d8
   1ce94:	ldr	r0, [sp, #52]	; 0x34
   1ce98:	ldr	r1, [sp, #80]	; 0x50
   1ce9c:	add	r0, r0, r1
   1cea0:	ldr	r1, [sp, #60]	; 0x3c
   1cea4:	ldrh	r0, [r0]
   1cea8:	ldrb	r1, [r1]
   1ceac:	tst	r1, #1
   1ceb0:	beq	1cec0 <readstat_parse_dta+0x1a68>
   1ceb4:	bl	48a4 <byteswap2@plt>
   1ceb8:	ldr	r1, [sp, #60]	; 0x3c
   1cebc:	ldrb	r1, [r1]
   1cec0:	tst	r1, #2
   1cec4:	beq	1ced0 <readstat_parse_dta+0x1a78>
   1cec8:	sxth	r0, r0
   1cecc:	bl	48f8 <ones_to_twos_complement2@plt>
   1ced0:	ldrsh	r2, [r9, #194]	; 0xc2
   1ced4:	sxth	r3, r0
   1ced8:	mov	r1, #0
   1cedc:	cmp	r3, r2
   1cee0:	ble	1d0b4 <readstat_parse_dta+0x1c5c>
   1cee4:	movw	r7, #32742	; 0x7fe6
   1cee8:	mov	r2, #1
   1ceec:	cmp	r3, r7
   1cef0:	blt	1d0b8 <readstat_parse_dta+0x1c60>
   1cef4:	ldr	r3, [sp, #60]	; 0x3c
   1cef8:	ldrb	r3, [r3]
   1cefc:	ands	r3, r3, #8
   1cf00:	addne	r1, r0, #123	; 0x7b
   1cf04:	movne	r2, #2
   1cf08:	b	1d0b8 <readstat_parse_dta+0x1c60>
   1cf0c:	ldr	r0, [sp, #52]	; 0x34
   1cf10:	ldr	r1, [sp, #80]	; 0x50
   1cf14:	sub	r4, fp, #88	; 0x58
   1cf18:	add	r2, r0, r1
   1cf1c:	mov	r0, r4
   1cf20:	mov	r1, r9
   1cf24:	bl	1d9dc <dta_interpret_int32_bytes>
   1cf28:	vld1.64	{d16-d17}, [r4]
   1cf2c:	add	r0, sp, #88	; 0x58
   1cf30:	vst1.64	{d16-d17}, [r0]
   1cf34:	b	1d23c <readstat_parse_dta+0x1de4>
   1cf38:	.word	0x0000a24a
   1cf3c:	.word	0x0000a22f
   1cf40:	ldr	r0, [sp, #52]	; 0x34
   1cf44:	ldr	r1, [sp, #80]	; 0x50
   1cf48:	ldr	r0, [r0, r1]
   1cf4c:	ldr	r1, [sp, #60]	; 0x3c
   1cf50:	ldrb	r1, [r1]
   1cf54:	tst	r1, #1
   1cf58:	beq	1cf60 <readstat_parse_dta+0x1b08>
   1cf5c:	bl	47b4 <byteswap4@plt>
   1cf60:	ldr	r2, [r9, #200]	; 0xc8
   1cf64:	mov	r1, #0
   1cf68:	cmp	r0, r2
   1cf6c:	ble	1d0e0 <readstat_parse_dta+0x1c88>
   1cf70:	mov	r2, #1
   1cf74:	cmp	r0, #2130706432	; 0x7f000000
   1cf78:	ble	1cfac <readstat_parse_dta+0x1b54>
   1cf7c:	ldr	r3, [sp, #60]	; 0x3c
   1cf80:	ldrb	r3, [r3]
   1cf84:	ands	r3, r3, #8
   1cf88:	movw	r3, #0
   1cf8c:	movt	r3, #32704	; 0x7fc0
   1cf90:	beq	1d0e8 <readstat_parse_dta+0x1c90>
   1cf94:	movw	r1, #63488	; 0xf800
   1cf98:	mov	r2, #2
   1cf9c:	movt	r1, #7
   1cfa0:	add	r0, r0, r1
   1cfa4:	mov	r1, #97	; 0x61
   1cfa8:	add	r1, r1, r0, lsr #11
   1cfac:	movw	r3, #0
   1cfb0:	movt	r3, #32704	; 0x7fc0
   1cfb4:	b	1d0e8 <readstat_parse_dta+0x1c90>
   1cfb8:	.word	0x0000a231
   1cfbc:	.word	0x0000a216
   1cfc0:	.word	0x0000a217
   1cfc4:	.word	0x0000a1fd
   1cfc8:	.word	0x0000a206
   1cfcc:	.word	0x0000a1e2
   1cfd0:	ldr	r1, [sp, #52]	; 0x34
   1cfd4:	ldr	r0, [sp, #80]	; 0x50
   1cfd8:	ldr	r2, [sp, #60]	; 0x3c
   1cfdc:	ldr	r0, [r1, r0]!
   1cfe0:	ldrb	r2, [r2]
   1cfe4:	ldr	r1, [r1, #4]
   1cfe8:	tst	r2, #1
   1cfec:	beq	1cff4 <readstat_parse_dta+0x1b9c>
   1cff0:	bl	479c <byteswap8@plt>
   1cff4:	ldr	r2, [sp, #20]
   1cff8:	ldrd	r6, [r2]
   1cffc:	mov	r2, #0
   1d000:	subs	r3, r6, r0
   1d004:	sbcs	r3, r7, r1
   1d008:	bge	1d110 <readstat_parse_dta+0x1cb8>
   1d00c:	subs	r0, r0, #1
   1d010:	movw	r0, #0
   1d014:	mov	r3, #0
   1d018:	mov	r2, #1
   1d01c:	movt	r0, #32736	; 0x7fe0
   1d020:	sbcs	r0, r1, r0
   1d024:	blt	1d178 <readstat_parse_dta+0x1d20>
   1d028:	ldr	r0, [sp, #60]	; 0x3c
   1d02c:	ldrb	r0, [r0]
   1d030:	ands	r0, r0, #8
   1d034:	beq	1d178 <readstat_parse_dta+0x1d20>
   1d038:	add	r0, r1, #65280	; 0xff00
   1d03c:	mov	r1, #97	; 0x61
   1d040:	mov	r2, #2
   1d044:	add	r7, r1, r0, lsr #8
   1d048:	b	1d17c <readstat_parse_dta+0x1d24>
   1d04c:	.word	0x0000a1fd
   1d050:	.word	0x0000a1db
   1d054:	sub	r0, fp, #88	; 0x58
   1d058:	ldr	r1, [sp, #80]	; 0x50
   1d05c:	vst1.64	{d8-d9}, [r0]!
   1d060:	vst1.64	{d8-d9}, [r0]
   1d064:	ldr	r0, [sp, #52]	; 0x34
   1d068:	add	r1, r0, r1
   1d06c:	ldr	r0, [r9, #112]	; 0x70
   1d070:	cmp	r0, #4
   1d074:	beq	1d158 <readstat_parse_dta+0x1d00>
   1d078:	cmp	r0, #2
   1d07c:	bne	1d200 <readstat_parse_dta+0x1da8>
   1d080:	ldr	r2, [r9, #232]	; 0xe8
   1d084:	ldrb	r0, [r1]
   1d088:	cmp	r2, #2
   1d08c:	bne	1d1a8 <readstat_parse_dta+0x1d50>
   1d090:	ldrb	r2, [r1, #1]
   1d094:	orr	r0, r2, r0, lsl #8
   1d098:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d09c:	ldrb	r0, [r1, #2]
   1d0a0:	ldrb	r2, [r1, #3]
   1d0a4:	orr	r7, r2, r0, lsl #8
   1d0a8:	ldr	r0, [r1, #4]
   1d0ac:	rev	r6, r0
   1d0b0:	b	1d1f8 <readstat_parse_dta+0x1da0>
   1d0b4:	mov	r2, #0
   1d0b8:	ldr	r7, [sp, #24]
   1d0bc:	strh	r0, [sp, #88]	; 0x58
   1d0c0:	ldr	r0, [sp, #32]
   1d0c4:	vld1.16	{d16}, [r7]
   1d0c8:	ldrh	r3, [r7, #8]
   1d0cc:	strh	r3, [r0, #8]
   1d0d0:	vst1.16	{d16}, [r0]
   1d0d4:	mov	r0, #0
   1d0d8:	strh	r0, [sp, #102]	; 0x66
   1d0dc:	b	1d104 <readstat_parse_dta+0x1cac>
   1d0e0:	mov	r2, #0
   1d0e4:	mov	r3, r0
   1d0e8:	ldr	r0, [sp, #28]
   1d0ec:	str	r3, [sp, #88]	; 0x58
   1d0f0:	mov	r3, #0
   1d0f4:	mov	r7, #4
   1d0f8:	str	r3, [r0]
   1d0fc:	str	r7, [r0, #4]
   1d100:	strh	r3, [sp, #102]	; 0x66
   1d104:	strb	r2, [sp, #101]	; 0x65
   1d108:	strb	r1, [sp, #100]	; 0x64
   1d10c:	b	1d23c <readstat_parse_dta+0x1de4>
   1d110:	mov	r7, #0
   1d114:	mov	r3, r0
   1d118:	b	1d184 <readstat_parse_dta+0x1d2c>
   1d11c:	mov	r3, #0
   1d120:	ldr	r0, [r9, #236]	; 0xec
   1d124:	ldr	r1, [sp, #80]	; 0x50
   1d128:	str	r0, [sp]
   1d12c:	ldr	r0, [sp, #52]	; 0x34
   1d130:	add	r2, r0, r1
   1d134:	add	r0, sp, #112	; 0x70
   1d138:	mov	r1, #2048	; 0x800
   1d13c:	bl	4c04 <readstat_convert@plt>
   1d140:	cmp	r0, #0
   1d144:	bne	1d398 <readstat_parse_dta+0x1f40>
   1d148:	add	r0, sp, #112	; 0x70
   1d14c:	str	r0, [sp, #88]	; 0x58
   1d150:	b	1d23c <readstat_parse_dta+0x1de4>
   1d154:	.word	0x0000a13a
   1d158:	ldr	r0, [r1]
   1d15c:	ldr	r6, [r1, #4]
   1d160:	ldr	r1, [sp, #60]	; 0x3c
   1d164:	ldrb	r1, [r1]
   1d168:	tst	r1, #1
   1d16c:	bne	1d1d0 <readstat_parse_dta+0x1d78>
   1d170:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d174:	b	1d1f4 <readstat_parse_dta+0x1d9c>
   1d178:	mov	r7, #0
   1d17c:	movw	r1, #0
   1d180:	movt	r1, #32760	; 0x7ff8
   1d184:	mov	r0, #0
   1d188:	str	r3, [sp, #88]	; 0x58
   1d18c:	strh	r0, [sp, #102]	; 0x66
   1d190:	mov	r0, #5
   1d194:	strb	r2, [sp, #101]	; 0x65
   1d198:	strb	r7, [sp, #100]	; 0x64
   1d19c:	str	r0, [sp, #96]	; 0x60
   1d1a0:	str	r1, [sp, #92]	; 0x5c
   1d1a4:	b	1d23c <readstat_parse_dta+0x1de4>
   1d1a8:	ldrb	r2, [r1, #1]
   1d1ac:	orr	r0, r0, r2, lsl #8
   1d1b0:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d1b4:	ldrb	r0, [r1, #7]
   1d1b8:	ldrb	r2, [r1, #6]
   1d1bc:	ldr	r6, [r1, #2]
   1d1c0:	orr	r7, r2, r0, lsl #8
   1d1c4:	b	1d1f8 <readstat_parse_dta+0x1da0>
   1d1c8:	.word	0x0000a08c
   1d1cc:	.word	0x0000a075
   1d1d0:	bl	47b4 <byteswap4@plt>
   1d1d4:	ldr	r1, [sp, #60]	; 0x3c
   1d1d8:	ldrb	r1, [r1]
   1d1dc:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d1e0:	tst	r1, #1
   1d1e4:	beq	1d1f4 <readstat_parse_dta+0x1d9c>
   1d1e8:	mov	r0, r6
   1d1ec:	bl	47b4 <byteswap4@plt>
   1d1f0:	mov	r6, r0
   1d1f4:	mov	r7, #0
   1d1f8:	ldr	r0, [sp, #16]
   1d1fc:	strd	r6, [r0]
   1d200:	ldrd	r2, [r9, #216]	; 0xd8
   1d204:	ldr	r0, [pc, #1704]	; 1d8b4 <readstat_parse_dta+0x245c>
   1d208:	add	r0, pc, r0
   1d20c:	mov	r1, r2
   1d210:	mov	r2, r3
   1d214:	mov	r3, #4
   1d218:	str	r0, [sp]
   1d21c:	sub	r0, fp, #88	; 0x58
   1d220:	bl	4c7c <bsearch@plt>
   1d224:	cmp	r0, #0
   1d228:	ldrne	r0, [r0]
   1d22c:	addne	r0, r0, #24
   1d230:	strne	r0, [sp, #88]	; 0x58
   1d234:	mov	r0, #0
   1d238:	str	r0, [sp, #96]	; 0x60
   1d23c:	ldr	r0, [r9, #228]	; 0xe4
   1d240:	ldr	r2, [sp, #56]	; 0x38
   1d244:	ldr	r4, [r9, #256]	; 0x100
   1d248:	ldr	r6, [r9, #276]	; 0x114
   1d24c:	ldr	r3, [sp, #92]	; 0x5c
   1d250:	ldr	r1, [r0, sl, lsl #2]
   1d254:	ldr	r0, [sp, #68]	; 0x44
   1d258:	ldr	r8, [r2]
   1d25c:	ldr	r7, [r2, #4]
   1d260:	ldr	r2, [sp, #88]	; 0x58
   1d264:	ldr	r0, [r0]
   1d268:	str	r8, [sp]
   1d26c:	str	r7, [sp, #4]
   1d270:	str	r6, [sp, #8]
   1d274:	blx	r4
   1d278:	cmp	r0, #0
   1d27c:	bne	1d3b4 <readstat_parse_dta+0x1f5c>
   1d280:	ldr	r0, [sp, #108]	; 0x6c
   1d284:	ldr	r1, [sp, #80]	; 0x50
   1d288:	add	r1, r0, r1
   1d28c:	ldr	r0, [r9, #148]	; 0x94
   1d290:	add	sl, sl, #1
   1d294:	str	r1, [sp, #80]	; 0x50
   1d298:	cmp	sl, r0
   1d29c:	blt	1cd30 <readstat_parse_dta+0x18d8>
   1d2a0:	ldr	r2, [sp, #68]	; 0x44
   1d2a4:	ldrd	r0, [r2]
   1d2a8:	adds	r0, r0, #1
   1d2ac:	adc	r1, r1, #0
   1d2b0:	strd	r0, [r2]
   1d2b4:	ldr	r2, [sp, #76]	; 0x4c
   1d2b8:	ldr	r8, [r2]
   1d2bc:	ldr	r7, [r2, #4]
   1d2c0:	subs	r2, r8, #1
   1d2c4:	sbcs	r2, r7, #0
   1d2c8:	blt	1d2fc <readstat_parse_dta+0x1ea4>
   1d2cc:	bl	23564 <__aeabi_l2d>
   1d2d0:	mov	r6, r0
   1d2d4:	mov	r4, r1
   1d2d8:	mov	r0, r8
   1d2dc:	mov	r1, r7
   1d2e0:	bl	23564 <__aeabi_l2d>
   1d2e4:	vmov	d16, r0, r1
   1d2e8:	vmov	d17, r6, r4
   1d2ec:	vdiv.f64	d0, d17, d16
   1d2f0:	b	1d300 <readstat_parse_dta+0x1ea8>
   1d2f4:	.word	0x00009f6a
   1d2f8:	.word	0x00009f4b
   1d2fc:	vmov.i32	d0, #0	; 0x00000000
   1d300:	ldr	r1, [r9, #268]	; 0x10c
   1d304:	cmp	r1, #0
   1d308:	beq	1d328 <readstat_parse_dta+0x1ed0>
   1d30c:	ldr	r0, [r9, #276]	; 0x114
   1d310:	blx	r1
   1d314:	cmp	r0, #0
   1d318:	bne	1d3b4 <readstat_parse_dta+0x1f5c>
   1d31c:	ldr	r0, [sp, #76]	; 0x4c
   1d320:	ldr	r8, [r0]
   1d324:	ldr	r7, [r0, #4]
   1d328:	ldr	r0, [sp, #40]	; 0x28
   1d32c:	add	r0, r0, #1
   1d330:	str	r0, [sp, #40]	; 0x28
   1d334:	subs	r0, r0, r8
   1d338:	rscs	r0, r7, #0
   1d33c:	blt	1ccf4 <readstat_parse_dta+0x189c>
   1d340:	ldr	r0, [sp, #64]	; 0x40
   1d344:	ldr	r2, [sp, #72]	; 0x48
   1d348:	mov	r6, #0
   1d34c:	ldrd	r0, [r0]
   1d350:	ldrd	r2, [r2]
   1d354:	subs	r0, r2, r0
   1d358:	sbc	r1, r3, r1
   1d35c:	subs	r2, r8, r0
   1d360:	sbcs	r1, r7, r1
   1d364:	bge	1d3cc <readstat_parse_dta+0x1f74>
   1d368:	ldr	r1, [r9, #160]	; 0xa0
   1d36c:	sub	r0, r0, r8
   1d370:	mul	r0, r1, r0
   1d374:	ldr	r1, [sp, #44]	; 0x2c
   1d378:	ldr	r3, [r1, #8]
   1d37c:	ldr	r2, [r1, #20]
   1d380:	mov	r1, #1
   1d384:	blx	r3
   1d388:	cmn	r0, #1
   1d38c:	mov	r6, #0
   1d390:	movweq	r6, #15
   1d394:	b	1d3cc <readstat_parse_dta+0x1f74>
   1d398:	mov	r6, r0
   1d39c:	b	1d3cc <readstat_parse_dta+0x1f74>
   1d3a0:	mov	r6, #15
   1d3a4:	b	1d3cc <readstat_parse_dta+0x1f74>
   1d3a8:	mov	r6, #4
   1d3ac:	b	1c710 <readstat_parse_dta+0x12b8>
   1d3b0:	.word	0x00009f16
   1d3b4:	mov	r6, #4
   1d3b8:	b	1d3cc <readstat_parse_dta+0x1f74>
   1d3bc:	mov	r6, #5
   1d3c0:	b	1d3cc <readstat_parse_dta+0x1f74>
   1d3c4:	.word	0x0000a065
   1d3c8:	mov	r6, #2
   1d3cc:	ldr	r0, [sp, #52]	; 0x34
   1d3d0:	cmp	r0, #0
   1d3d4:	beq	1d3e0 <readstat_parse_dta+0x1f88>
   1d3d8:	ldr	r0, [sp, #52]	; 0x34
   1d3dc:	bl	48bc <free@plt>
   1d3e0:	cmp	r6, #0
   1d3e4:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1d3e8:	ldr	r1, [pc, #1228]	; 1d8bc <readstat_parse_dta+0x2464>
   1d3ec:	mov	r0, r9
   1d3f0:	add	r1, pc, r1
   1d3f4:	bl	1d8d0 <dta_read_tag>
   1d3f8:	mov	r6, r0
   1d3fc:	cmp	r0, #0
   1d400:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1d404:	ldr	sl, [r9, #280]	; 0x118
   1d408:	ldr	r0, [sp, #48]	; 0x30
   1d40c:	ldr	r3, [sl, #8]
   1d410:	ldr	r2, [sl, #20]
   1d414:	mov	r1, #0
   1d418:	ldr	r0, [r0]
   1d41c:	blx	r3
   1d420:	cmn	r0, #1
   1d424:	beq	1d7ec <readstat_parse_dta+0x2394>
   1d428:	ldr	r1, [pc, #1172]	; 1d8c4 <readstat_parse_dta+0x246c>
   1d42c:	mov	r0, r9
   1d430:	add	r1, pc, r1
   1d434:	bl	1d8d0 <dta_read_tag>
   1d438:	mov	r6, r0
   1d43c:	cmp	r0, #0
   1d440:	bne	1bbb4 <readstat_parse_dta+0x75c>
   1d444:	ldr	r0, [r9, #260]	; 0x104
   1d448:	cmp	r0, #0
   1d44c:	beq	1d818 <readstat_parse_dta+0x23c0>
   1d450:	sub	r0, fp, #88	; 0x58
   1d454:	add	r0, r0, #8
   1d458:	str	r0, [sp, #64]	; 0x40
   1d45c:	mov	r0, #0
   1d460:	str	r0, [sp, #72]	; 0x48
   1d464:	mov	r0, #0
   1d468:	str	r0, [sp, #76]	; 0x4c
   1d46c:	ldr	r0, [r9, #100]	; 0x64
   1d470:	cmp	r0, #2
   1d474:	bne	1d4c4 <readstat_parse_dta+0x206c>
   1d478:	ldr	r3, [sl, #12]
   1d47c:	ldr	r2, [sl, #20]
   1d480:	sub	r0, fp, #88	; 0x58
   1d484:	mov	r1, #2
   1d488:	blx	r3
   1d48c:	cmp	r0, #2
   1d490:	bcc	1d884 <readstat_parse_dta+0x242c>
   1d494:	ldr	r0, [sp, #60]	; 0x3c
   1d498:	ldrsh	r4, [fp, #-88]	; 0xffffffa8
   1d49c:	ldrb	r0, [r0]
   1d4a0:	tst	r0, #1
   1d4a4:	beq	1d4b4 <readstat_parse_dta+0x205c>
   1d4a8:	uxth	r0, r4
   1d4ac:	bl	48a4 <byteswap2@plt>
   1d4b0:	mov	r4, r0
   1d4b4:	lsr	r8, r4, #3
   1d4b8:	b	1d520 <readstat_parse_dta+0x20c8>
   1d4bc:	.word	0x00009d04
   1d4c0:	.word	0x00009cee
   1d4c4:	ldr	r1, [pc, #1020]	; 1d8c8 <readstat_parse_dta+0x2470>
   1d4c8:	mov	r0, r9
   1d4cc:	add	r1, pc, r1
   1d4d0:	bl	1d8d0 <dta_read_tag>
   1d4d4:	mov	r6, #0
   1d4d8:	cmp	r0, #0
   1d4dc:	bne	1d830 <readstat_parse_dta+0x23d8>
   1d4e0:	ldr	r3, [sl, #12]
   1d4e4:	ldr	r2, [sl, #20]
   1d4e8:	sub	r0, fp, #88	; 0x58
   1d4ec:	mov	r1, #4
   1d4f0:	blx	r3
   1d4f4:	cmp	r0, #4
   1d4f8:	bcc	1d830 <readstat_parse_dta+0x23d8>
   1d4fc:	ldr	r0, [sp, #60]	; 0x3c
   1d500:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1d504:	ldrb	r0, [r0]
   1d508:	tst	r0, #1
   1d50c:	beq	1d51c <readstat_parse_dta+0x20c4>
   1d510:	mov	r0, r4
   1d514:	bl	47b4 <byteswap4@plt>
   1d518:	mov	r4, r0
   1d51c:	mov	r8, #0
   1d520:	ldr	r1, [r9, #104]	; 0x68
   1d524:	ldr	r3, [sl, #12]
   1d528:	ldr	r2, [sl, #20]
   1d52c:	add	r0, sp, #112	; 0x70
   1d530:	blx	r3
   1d534:	ldr	r1, [r9, #104]	; 0x68
   1d538:	mov	r6, #0
   1d53c:	cmp	r0, r1
   1d540:	bcc	1d830 <readstat_parse_dta+0x23d8>
   1d544:	ldr	r0, [r9, #108]	; 0x6c
   1d548:	ldr	r3, [sl, #8]
   1d54c:	ldr	r2, [sl, #20]
   1d550:	mov	r1, #1
   1d554:	blx	r3
   1d558:	cmn	r0, #1
   1d55c:	beq	1d830 <readstat_parse_dta+0x23d8>
   1d560:	ldr	r0, [sp, #76]	; 0x4c
   1d564:	mov	r1, r4
   1d568:	bl	4cb8 <readstat_realloc@plt>
   1d56c:	cmp	r0, #0
   1d570:	str	r0, [sp, #76]	; 0x4c
   1d574:	beq	1d87c <readstat_parse_dta+0x2424>
   1d578:	ldr	r3, [sl, #12]
   1d57c:	ldr	r2, [sl, #20]
   1d580:	ldr	r0, [sp, #76]	; 0x4c
   1d584:	mov	r1, r4
   1d588:	blx	r3
   1d58c:	cmp	r0, r4
   1d590:	bcc	1d85c <readstat_parse_dta+0x2404>
   1d594:	ldr	r0, [r9, #100]	; 0x64
   1d598:	cmp	r0, #2
   1d59c:	bne	1d644 <readstat_parse_dta+0x21ec>
   1d5a0:	cmp	r8, #0
   1d5a4:	beq	1d46c <readstat_parse_dta+0x2014>
   1d5a8:	ldr	r7, [sp, #76]	; 0x4c
   1d5ac:	mov	r4, #0
   1d5b0:	ldr	r0, [r9, #236]	; 0xec
   1d5b4:	mov	r1, #33	; 0x21
   1d5b8:	mov	r2, r7
   1d5bc:	mov	r3, #8
   1d5c0:	str	r0, [sp]
   1d5c4:	sub	r0, fp, #88	; 0x58
   1d5c8:	bl	4c04 <readstat_convert@plt>
   1d5cc:	cmp	r0, #0
   1d5d0:	bne	1d820 <readstat_parse_dta+0x23c8>
   1d5d4:	ldr	r0, [sp, #80]	; 0x50
   1d5d8:	bfc	r0, #0, #10
   1d5dc:	str	r0, [sp, #80]	; 0x50
   1d5e0:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   1d5e4:	cmp	r0, #0
   1d5e8:	beq	1d628 <readstat_parse_dta+0x21d0>
   1d5ec:	mov	r2, #3
   1d5f0:	ldr	r1, [r9, #260]	; 0x104
   1d5f4:	ldr	r0, [r9, #276]	; 0x114
   1d5f8:	mov	r3, #0
   1d5fc:	str	r2, [sp]
   1d600:	ldr	r2, [sp, #80]	; 0x50
   1d604:	str	r0, [sp, #12]
   1d608:	add	r0, sp, #112	; 0x70
   1d60c:	str	r2, [sp, #4]
   1d610:	sub	r2, fp, #88	; 0x58
   1d614:	str	r2, [sp, #8]
   1d618:	mov	r2, r4
   1d61c:	blx	r1
   1d620:	cmp	r0, #0
   1d624:	bne	1d82c <readstat_parse_dta+0x23d4>
   1d628:	add	r4, r4, #1
   1d62c:	add	r7, r7, #8
   1d630:	cmp	r8, r4
   1d634:	bne	1d5b0 <readstat_parse_dta+0x2158>
   1d638:	b	1d46c <readstat_parse_dta+0x2014>
   1d63c:	.word	0x00009b22
   1d640:	.word	0x00009b46
   1d644:	cmp	r4, #9
   1d648:	bcc	1d46c <readstat_parse_dta+0x2014>
   1d64c:	ldr	r1, [pc, #632]	; 1d8cc <readstat_parse_dta+0x2474>
   1d650:	mov	r0, r9
   1d654:	add	r1, pc, r1
   1d658:	bl	1d8d0 <dta_read_tag>
   1d65c:	cmp	r0, #0
   1d660:	bne	1d864 <readstat_parse_dta+0x240c>
   1d664:	ldr	r0, [sp, #76]	; 0x4c
   1d668:	ldr	r8, [r0]
   1d66c:	ldr	r0, [r0, #4]
   1d670:	str	r0, [sp, #68]	; 0x44
   1d674:	ldr	r0, [sp, #60]	; 0x3c
   1d678:	ldrb	r0, [r0]
   1d67c:	tst	r0, #1
   1d680:	beq	1d69c <readstat_parse_dta+0x2244>
   1d684:	mov	r0, r8
   1d688:	bl	47b4 <byteswap4@plt>
   1d68c:	mov	r8, r0
   1d690:	ldr	r0, [sp, #68]	; 0x44
   1d694:	bl	47b4 <byteswap4@plt>
   1d698:	str	r0, [sp, #68]	; 0x44
   1d69c:	ldr	r1, [sp, #68]	; 0x44
   1d6a0:	sub	r0, r4, #8
   1d6a4:	cmp	r0, r1
   1d6a8:	bcc	1d85c <readstat_parse_dta+0x2404>
   1d6ac:	ldr	r1, [sp, #68]	; 0x44
   1d6b0:	sub	r0, r0, r1
   1d6b4:	cmp	r8, r0, lsr #3
   1d6b8:	bhi	1d85c <readstat_parse_dta+0x2404>
   1d6bc:	ldr	r2, [sp, #68]	; 0x44
   1d6c0:	mov	r0, #1
   1d6c4:	orr	r1, r0, r2, lsl #2
   1d6c8:	movw	r0, #32001	; 0x7d01
   1d6cc:	cmp	r2, r0
   1d6d0:	ldr	r0, [sp, #72]	; 0x48
   1d6d4:	movwhi	r1, #62465	; 0xf401
   1d6d8:	movthi	r1, #1
   1d6dc:	str	r1, [sp, #56]	; 0x38
   1d6e0:	bl	49dc <realloc@plt>
   1d6e4:	cmp	r0, #0
   1d6e8:	str	r0, [sp, #72]	; 0x48
   1d6ec:	beq	1d890 <readstat_parse_dta+0x2438>
   1d6f0:	ldr	r0, [sp, #76]	; 0x4c
   1d6f4:	cmp	r8, #0
   1d6f8:	add	r4, r0, #8
   1d6fc:	ldrne	r0, [sp, #60]	; 0x3c
   1d700:	ldrbne	r0, [r0]
   1d704:	andsne	r0, r0, #1
   1d708:	beq	1d728 <readstat_parse_dta+0x22d0>
   1d70c:	mov	r6, r4
   1d710:	mov	r7, r8
   1d714:	ldr	r0, [r6]
   1d718:	bl	47b4 <byteswap4@plt>
   1d71c:	str	r0, [r6], #4
   1d720:	subs	r7, r7, #1
   1d724:	bne	1d714 <readstat_parse_dta+0x22bc>
   1d728:	cmp	r8, #0
   1d72c:	beq	1d46c <readstat_parse_dta+0x2014>
   1d730:	ldr	r0, [sp, #76]	; 0x4c
   1d734:	add	r0, r0, r8, lsl #3
   1d738:	add	r0, r0, #8
   1d73c:	str	r0, [sp, #52]	; 0x34
   1d740:	lsl	r0, r8, #2
   1d744:	str	r0, [sp, #48]	; 0x30
   1d748:	ldr	r0, [r4]
   1d74c:	ldr	r1, [sp, #68]	; 0x44
   1d750:	cmp	r0, r1
   1d754:	bcs	1d86c <readstat_parse_dta+0x2414>
   1d758:	ldr	r0, [sp, #48]	; 0x30
   1d75c:	mov	r1, r9
   1d760:	add	r2, r4, r0
   1d764:	sub	r0, fp, #88	; 0x58
   1d768:	bl	1d9dc <dta_interpret_int32_bytes>
   1d76c:	ldr	r1, [r9, #236]	; 0xec
   1d770:	ldr	r0, [r4]
   1d774:	str	r1, [sp]
   1d778:	ldr	r1, [sp, #52]	; 0x34
   1d77c:	add	r2, r1, r0
   1d780:	ldr	r1, [sp, #68]	; 0x44
   1d784:	sub	r3, r1, r0
   1d788:	ldr	r0, [sp, #72]	; 0x48
   1d78c:	ldr	r1, [sp, #56]	; 0x38
   1d790:	cmp	r3, #32000	; 0x7d00
   1d794:	movcs	r3, #32000	; 0x7d00
   1d798:	bl	4c04 <readstat_convert@plt>
   1d79c:	cmp	r0, #0
   1d7a0:	bne	1d864 <readstat_parse_dta+0x240c>
   1d7a4:	ldr	r0, [sp, #64]	; 0x40
   1d7a8:	ldr	r7, [r9, #260]	; 0x104
   1d7ac:	ldr	r6, [r9, #276]	; 0x114
   1d7b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d7b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d7b8:	ldrd	r0, [r0]
   1d7bc:	stm	sp, {r0, r1}
   1d7c0:	ldr	r0, [sp, #72]	; 0x48
   1d7c4:	str	r6, [sp, #12]
   1d7c8:	str	r0, [sp, #8]
   1d7cc:	add	r0, sp, #112	; 0x70
   1d7d0:	blx	r7
   1d7d4:	cmp	r0, #0
   1d7d8:	bne	1d874 <readstat_parse_dta+0x241c>
   1d7dc:	add	r4, r4, #4
   1d7e0:	subs	r8, r8, #1
   1d7e4:	bne	1d748 <readstat_parse_dta+0x22f0>
   1d7e8:	b	1d46c <readstat_parse_dta+0x2014>
   1d7ec:	ldr	r0, [r9, #264]	; 0x108
   1d7f0:	mov	r6, #15
   1d7f4:	cmp	r0, #0
   1d7f8:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1d7fc:	ldr	r0, [sp, #48]	; 0x30
   1d800:	add	r4, r9, #288	; 0x120
   1d804:	ldrd	r0, [r0]
   1d808:	stm	sp, {r0, r1}
   1d80c:	ldr	r2, [pc, #172]	; 1d8c0 <readstat_parse_dta+0x2468>
   1d810:	add	r2, pc, r2
   1d814:	b	1cb84 <readstat_parse_dta+0x172c>
   1d818:	mov	r6, #0
   1d81c:	b	1bbb4 <readstat_parse_dta+0x75c>
   1d820:	mov	r6, r0
   1d824:	b	1d830 <readstat_parse_dta+0x23d8>
   1d828:	.word	0x00009aba
   1d82c:	mov	r6, #4
   1d830:	ldr	r0, [sp, #76]	; 0x4c
   1d834:	cmp	r0, #0
   1d838:	beq	1d844 <readstat_parse_dta+0x23ec>
   1d83c:	ldr	r0, [sp, #76]	; 0x4c
   1d840:	bl	48bc <free@plt>
   1d844:	ldr	r0, [sp, #72]	; 0x48
   1d848:	cmp	r0, #0
   1d84c:	beq	1bbb4 <readstat_parse_dta+0x75c>
   1d850:	ldr	r0, [sp, #72]	; 0x48
   1d854:	bl	48bc <free@plt>
   1d858:	b	1bbb4 <readstat_parse_dta+0x75c>
   1d85c:	mov	r6, #0
   1d860:	b	1d83c <readstat_parse_dta+0x23e4>
   1d864:	mov	r6, r0
   1d868:	b	1d83c <readstat_parse_dta+0x23e4>
   1d86c:	mov	r6, #5
   1d870:	b	1d83c <readstat_parse_dta+0x23e4>
   1d874:	mov	r6, #4
   1d878:	b	1d83c <readstat_parse_dta+0x23e4>
   1d87c:	mov	r6, #3
   1d880:	b	1d844 <readstat_parse_dta+0x23ec>
   1d884:	mov	r6, #0
   1d888:	b	1d830 <readstat_parse_dta+0x23d8>
   1d88c:	.word	0x00009a6a
   1d890:	mov	r0, #0
   1d894:	mov	r6, #3
   1d898:	str	r0, [sp, #72]	; 0x48
   1d89c:	b	1d83c <readstat_parse_dta+0x23e4>
   1d8a0:	.word	0x000096f9
   1d8a4:	.word	0x0000978c
   1d8a8:	.word	0x0000975e
   1d8ac:	.word	0x00009893
   1d8b0:	.word	0x000096a8
   1d8b4:	.word	0x000007a4
   1d8b8:	.word	0x0000950c
   1d8bc:	.word	0x00008f29
   1d8c0:	.word	0x00008b11
   1d8c4:	.word	0x00008f26
   1d8c8:	.word	0x00008e99
   1d8cc:	.word	0x00008d17

0001d8d0 <dta_read_tag>:
   1d8d0:	push	{r4, r5, r6, sl, fp, lr}
   1d8d4:	add	fp, sp, #16
   1d8d8:	sub	sp, sp, #256	; 0x100
   1d8dc:	mov	r6, r0
   1d8e0:	ldr	r0, [r0, #284]	; 0x11c
   1d8e4:	mov	r4, r1
   1d8e8:	cmp	r0, #0
   1d8ec:	beq	1d900 <dta_read_tag+0x30>
   1d8f0:	ldrb	r1, [r6, #192]	; 0xc0
   1d8f4:	mov	r0, #0
   1d8f8:	tst	r1, #4
   1d8fc:	beq	1d94c <dta_read_tag+0x7c>
   1d900:	mov	r0, r4
   1d904:	bl	4bd4 <strlen@plt>
   1d908:	mov	r5, r0
   1d90c:	ldr	r0, [r6, #280]	; 0x118
   1d910:	mov	r1, r5
   1d914:	ldr	r3, [r0, #12]
   1d918:	ldr	r2, [r0, #20]
   1d91c:	mov	r0, sp
   1d920:	blx	r3
   1d924:	mov	r1, r0
   1d928:	mov	r0, #2
   1d92c:	cmp	r1, r5
   1d930:	bne	1d94c <dta_read_tag+0x7c>
   1d934:	mov	r0, sp
   1d938:	mov	r1, r4
   1d93c:	mov	r2, r5
   1d940:	bl	4ebc <strncmp@plt>
   1d944:	cmp	r0, #0
   1d948:	movwne	r0, #5
   1d94c:	sub	sp, fp, #16
   1d950:	pop	{r4, r5, r6, sl, fp, pc}

0001d954 <dta_read_chunk>:
   1d954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d958:	add	fp, sp, #24
   1d95c:	ldr	r7, [r0, #280]	; 0x118
   1d960:	mov	r5, r3
   1d964:	mov	r6, r2
   1d968:	mov	r4, r0
   1d96c:	bl	1d8d0 <dta_read_tag>
   1d970:	cmp	r0, #0
   1d974:	bne	1d9b0 <dta_read_chunk+0x5c>
   1d978:	ldr	r3, [r7, #12]
   1d97c:	ldr	r2, [r7, #20]
   1d980:	ldr	r8, [fp, #8]
   1d984:	mov	r0, r6
   1d988:	mov	r1, r5
   1d98c:	blx	r3
   1d990:	mov	r1, r0
   1d994:	mov	r0, #2
   1d998:	cmp	r1, r5
   1d99c:	bne	1d9b0 <dta_read_chunk+0x5c>
   1d9a0:	mov	r0, r4
   1d9a4:	mov	r1, r8
   1d9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d9ac:	b	1d8d0 <dta_read_tag>
   1d9b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d9b4 <dta_compare_strls>:
   1d9b4:	ldr	r1, [r1]
   1d9b8:	ldrh	r2, [r0]
   1d9bc:	ldrh	r3, [r1]
   1d9c0:	cmp	r2, r3
   1d9c4:	subne	r0, r2, r3
   1d9c8:	bxne	lr
   1d9cc:	ldr	r1, [r1, #8]
   1d9d0:	ldr	r0, [r0, #8]
   1d9d4:	sub	r0, r0, r1
   1d9d8:	bx	lr

0001d9dc <dta_interpret_int32_bytes>:
   1d9dc:	push	{r4, r5, fp, lr}
   1d9e0:	add	fp, sp, #8
   1d9e4:	mov	r4, r0
   1d9e8:	ldr	r0, [pc, #104]	; 1da58 <dta_interpret_int32_bytes+0x7c>
   1d9ec:	mov	r5, r1
   1d9f0:	add	r0, pc, r0
   1d9f4:	vld1.64	{d16-d17}, [r0]
   1d9f8:	vst1.64	{d16-d17}, [r4]
   1d9fc:	ldrb	r1, [r1, #192]	; 0xc0
   1da00:	ldr	r0, [r2]
   1da04:	tst	r1, #1
   1da08:	beq	1da14 <dta_interpret_int32_bytes+0x38>
   1da0c:	bl	47b4 <byteswap4@plt>
   1da10:	ldrb	r1, [r5, #192]	; 0xc0
   1da14:	tst	r1, #2
   1da18:	beq	1da20 <dta_interpret_int32_bytes+0x44>
   1da1c:	bl	48ec <ones_to_twos_complement4@plt>
   1da20:	ldr	r1, [r5, #196]	; 0xc4
   1da24:	cmp	r0, r1
   1da28:	ble	1da50 <dta_interpret_int32_bytes+0x74>
   1da2c:	mov	r1, #1
   1da30:	cmn	r0, #-2147483622	; 0x8000001a
   1da34:	blt	1da4c <dta_interpret_int32_bytes+0x70>
   1da38:	ldrb	r2, [r5, #192]	; 0xc0
   1da3c:	ands	r2, r2, #8
   1da40:	addne	r1, r0, #123	; 0x7b
   1da44:	strbne	r1, [r4, #12]
   1da48:	movne	r1, #2
   1da4c:	strb	r1, [r4, #13]
   1da50:	str	r0, [r4]
   1da54:	pop	{r4, r5, fp, pc}
   1da58:	.word	0x000089a8
   1da5c:	.word	0x00000000

0001da60 <dta_metadata_ok>:
   1da60:	ldr	r1, [r0, #16]
   1da64:	cmp	r1, #0
   1da68:	movne	r0, #6
   1da6c:	bxne	lr
   1da70:	ldr	r0, [r0, #8]
   1da74:	sub	r1, r0, #104	; 0x68
   1da78:	mov	r0, #0
   1da7c:	cmp	r1, #15
   1da80:	movwhi	r0, #24
   1da84:	bx	lr

0001da88 <readstat_begin_writing_dta>:
   1da88:	push	{r4, sl, fp, lr}
   1da8c:	add	fp, sp, #8
   1da90:	ldr	ip, [r0, #8]
   1da94:	cmp	ip, #0
   1da98:	beq	1dad8 <readstat_begin_writing_dta+0x50>
   1da9c:	ldr	r3, [pc, #396]	; 1dc30 <readstat_begin_writing_dta+0x1a8>
   1daa0:	cmp	ip, #116	; 0x74
   1daa4:	ldr	r3, [pc, r3]
   1daa8:	str	r3, [r0, #292]	; 0x124
   1daac:	ble	1db44 <readstat_begin_writing_dta+0xbc>
   1dab0:	ldr	r3, [pc, #392]	; 1dc40 <readstat_begin_writing_dta+0x1b8>
   1dab4:	cmp	ip, #117	; 0x75
   1dab8:	add	r3, pc, r3
   1dabc:	str	r3, [r0, #228]	; 0xe4
   1dac0:	bne	1daf8 <readstat_begin_writing_dta+0x70>
   1dac4:	ldr	ip, [pc, #376]	; 1dc44 <readstat_begin_writing_dta+0x1bc>
   1dac8:	ldr	r3, [pc, #376]	; 1dc48 <readstat_begin_writing_dta+0x1c0>
   1dacc:	add	ip, pc, ip
   1dad0:	add	r3, pc, r3
   1dad4:	b	1db08 <readstat_begin_writing_dta+0x80>
   1dad8:	mov	r3, #118	; 0x76
   1dadc:	str	r3, [r0, #8]
   1dae0:	ldr	r3, [pc, #312]	; 1dc20 <readstat_begin_writing_dta+0x198>
   1dae4:	add	r3, pc, r3
   1dae8:	str	r3, [r0, #228]	; 0xe4
   1daec:	ldr	r3, [pc, #304]	; 1dc24 <readstat_begin_writing_dta+0x19c>
   1daf0:	ldr	r3, [pc, r3]
   1daf4:	str	r3, [r0, #292]	; 0x124
   1daf8:	ldr	ip, [pc, #296]	; 1dc28 <readstat_begin_writing_dta+0x1a0>
   1dafc:	ldr	r3, [pc, #296]	; 1dc2c <readstat_begin_writing_dta+0x1a4>
   1db00:	add	ip, pc, ip
   1db04:	add	r3, pc, r3
   1db08:	str	ip, [r0, #260]	; 0x104
   1db0c:	str	r3, [r0, #232]	; 0xe8
   1db10:	ldr	r3, [pc, #308]	; 1dc4c <readstat_begin_writing_dta+0x1c4>
   1db14:	ldr	r4, [pc, #308]	; 1dc50 <readstat_begin_writing_dta+0x1c8>
   1db18:	add	r4, pc, r4
   1db1c:	add	r3, pc, r3
   1db20:	str	r4, [r0, #268]	; 0x10c
   1db24:	str	r3, [r0, #272]	; 0x110
   1db28:	ldr	ip, [pc, #292]	; 1dc54 <readstat_begin_writing_dta+0x1cc>
   1db2c:	ldr	r4, [pc, #292]	; 1dc58 <readstat_begin_writing_dta+0x1d0>
   1db30:	ldr	r3, [pc, #292]	; 1dc5c <readstat_begin_writing_dta+0x1d4>
   1db34:	add	ip, pc, ip
   1db38:	add	r4, pc, r4
   1db3c:	add	r3, pc, r3
   1db40:	b	1dbbc <readstat_begin_writing_dta+0x134>
   1db44:	cmp	ip, #110	; 0x6e
   1db48:	ble	1db70 <readstat_begin_writing_dta+0xe8>
   1db4c:	ldr	r3, [pc, #268]	; 1dc60 <readstat_begin_writing_dta+0x1d8>
   1db50:	ldr	r4, [pc, #268]	; 1dc64 <readstat_begin_writing_dta+0x1dc>
   1db54:	cmp	ip, #112	; 0x70
   1db58:	add	r4, pc, r4
   1db5c:	add	r3, pc, r3
   1db60:	str	r4, [r0, #228]	; 0xe4
   1db64:	str	r3, [r0, #232]	; 0xe8
   1db68:	bgt	1db10 <readstat_begin_writing_dta+0x88>
   1db6c:	b	1db98 <readstat_begin_writing_dta+0x110>
   1db70:	ldr	lr, [pc, #188]	; 1dc34 <readstat_begin_writing_dta+0x1ac>
   1db74:	ldr	r3, [pc, #188]	; 1dc38 <readstat_begin_writing_dta+0x1b0>
   1db78:	ldr	r4, [pc, #188]	; 1dc3c <readstat_begin_writing_dta+0x1b4>
   1db7c:	cmp	ip, #110	; 0x6e
   1db80:	add	r3, pc, r3
   1db84:	add	r4, pc, r4
   1db88:	add	lr, pc, lr
   1db8c:	moveq	r4, r3
   1db90:	str	lr, [r0, #228]	; 0xe4
   1db94:	str	r4, [r0, #232]	; 0xe8
   1db98:	ldr	r3, [pc, #200]	; 1dc68 <readstat_begin_writing_dta+0x1e0>
   1db9c:	add	r3, pc, r3
   1dba0:	str	r3, [r0, #268]	; 0x10c
   1dba4:	ldr	ip, [pc, #192]	; 1dc6c <readstat_begin_writing_dta+0x1e4>
   1dba8:	ldr	r4, [pc, #192]	; 1dc70 <readstat_begin_writing_dta+0x1e8>
   1dbac:	ldr	r3, [pc, #192]	; 1dc74 <readstat_begin_writing_dta+0x1ec>
   1dbb0:	add	ip, pc, ip
   1dbb4:	add	r4, pc, r4
   1dbb8:	add	r3, pc, r3
   1dbbc:	str	r3, [r0, #236]	; 0xec
   1dbc0:	str	r4, [r0, #240]	; 0xf0
   1dbc4:	str	ip, [r0, #244]	; 0xf4
   1dbc8:	add	lr, r0, #248	; 0xf8
   1dbcc:	ldr	r3, [pc, #164]	; 1dc78 <readstat_begin_writing_dta+0x1f0>
   1dbd0:	ldr	r4, [pc, #164]	; 1dc7c <readstat_begin_writing_dta+0x1f4>
   1dbd4:	add	r4, pc, r4
   1dbd8:	add	r3, pc, r3
   1dbdc:	str	r4, [r0, #284]	; 0x11c
   1dbe0:	str	r3, [r0, #288]	; 0x120
   1dbe4:	ldr	r3, [pc, #148]	; 1dc80 <readstat_begin_writing_dta+0x1f8>
   1dbe8:	add	r3, pc, r3
   1dbec:	str	r3, [r0, #276]	; 0x114
   1dbf0:	ldr	r3, [pc, #140]	; 1dc84 <readstat_begin_writing_dta+0x1fc>
   1dbf4:	add	r3, pc, r3
   1dbf8:	str	r3, [r0, #264]	; 0x108
   1dbfc:	ldr	ip, [pc, #132]	; 1dc88 <readstat_begin_writing_dta+0x200>
   1dc00:	ldr	r4, [pc, #132]	; 1dc8c <readstat_begin_writing_dta+0x204>
   1dc04:	ldr	r3, [pc, #132]	; 1dc90 <readstat_begin_writing_dta+0x208>
   1dc08:	add	r3, pc, r3
   1dc0c:	add	ip, pc, ip
   1dc10:	add	r4, pc, r4
   1dc14:	stm	lr, {r3, r4, ip}
   1dc18:	pop	{r4, sl, fp, lr}
   1dc1c:	b	494c <readstat_begin_writing_file@plt>
   1dc20:	.word	0x000001a8
   1dc24:	.word	0x000267e8
   1dc28:	.word	0x00000308
   1dc2c:	.word	0x000002b0
   1dc30:	.word	0x00026834
   1dc34:	.word	0x000001cc
   1dc38:	.word	0x00000250
   1dc3c:	.word	0x00000268
   1dc40:	.word	0x000001d4
   1dc44:	.word	0x00000384
   1dc48:	.word	0x00000300
   1dc4c:	.word	0x00000418
   1dc50:	.word	0x000003a8
   1dc54:	.word	0x00000374
   1dc58:	.word	0x00000354
   1dc5c:	.word	0x00000338
   1dc60:	.word	0x00000274
   1dc64:	.word	0x0000019c
   1dc68:	.word	0x000004a0
   1dc6c:	.word	0x00000474
   1dc70:	.word	0x00000454
   1dc74:	.word	0x00000438
   1dc78:	.word	0x00001b48
   1dc7c:	.word	0x000013f0
   1dc80:	.word	0x000006ec
   1dc84:	.word	0x000006c4
   1dc88:	.word	0x0000063c
   1dc8c:	.word	0x00000570
   1dc90:	.word	0x000004a8

0001dc94 <dta_117_variable_width>:
   1dc94:	cmp	r0, #6
   1dc98:	bhi	1dcd4 <dta_117_variable_width+0x40>
   1dc9c:	mov	ip, r0
   1dca0:	add	r3, pc, #8
   1dca4:	mov	r0, #8
   1dca8:	ldr	r2, [r3, ip, lsl #2]
   1dcac:	add	pc, r3, r2
   1dcb0:	.word	0x0000002c
   1dcb4:	.word	0x0000001c
   1dcb8:	.word	0x0000001c
   1dcbc:	.word	0x00000044
   1dcc0:	.word	0x0000001c
   1dcc4:	.word	0x00000028
   1dcc8:	.word	0x00000028
   1dccc:	mov	r0, ip
   1dcd0:	bx	lr
   1dcd4:	mov	r0, #0
   1dcd8:	bx	lr
   1dcdc:	sub	r0, r1, #1
   1dce0:	movw	r2, #2044	; 0x7fc
   1dce4:	cmp	r0, r2
   1dce8:	movwhi	r1, #2045	; 0x7fd
   1dcec:	mov	r0, r1
   1dcf0:	bx	lr
   1dcf4:	mov	r0, #4
   1dcf8:	bx	lr

0001dcfc <dta_111_variable_width>:
   1dcfc:	cmp	r0, #5
   1dd00:	bhi	1dd38 <dta_111_variable_width+0x3c>
   1dd04:	mov	ip, r0
   1dd08:	add	r3, pc, #8
   1dd0c:	mov	r0, #8
   1dd10:	ldr	r2, [r3, ip, lsl #2]
   1dd14:	add	pc, r3, r2
   1dd18:	.word	0x00000028
   1dd1c:	.word	0x00000018
   1dd20:	.word	0x00000018
   1dd24:	.word	0x0000003c
   1dd28:	.word	0x00000018
   1dd2c:	.word	0x00000024
   1dd30:	mov	r0, ip
   1dd34:	bx	lr
   1dd38:	mov	r0, #0
   1dd3c:	bx	lr
   1dd40:	sub	r0, r1, #1
   1dd44:	cmp	r0, #243	; 0xf3
   1dd48:	movwhi	r1, #244	; 0xf4
   1dd4c:	mov	r0, r1
   1dd50:	bx	lr
   1dd54:	mov	r0, #4
   1dd58:	bx	lr

0001dd5c <dta_old_variable_width>:
   1dd5c:	cmp	r0, #5
   1dd60:	bhi	1dd98 <dta_old_variable_width+0x3c>
   1dd64:	mov	ip, r0
   1dd68:	add	r3, pc, #8
   1dd6c:	mov	r0, #8
   1dd70:	ldr	r2, [r3, ip, lsl #2]
   1dd74:	add	pc, r3, r2
   1dd78:	.word	0x00000028
   1dd7c:	.word	0x00000018
   1dd80:	.word	0x00000018
   1dd84:	.word	0x0000003c
   1dd88:	.word	0x00000018
   1dd8c:	.word	0x00000024
   1dd90:	mov	r0, ip
   1dd94:	bx	lr
   1dd98:	mov	r0, #0
   1dd9c:	bx	lr
   1dda0:	sub	r0, r1, #1
   1dda4:	cmp	r0, #127	; 0x7f
   1dda8:	movwhi	r1, #128	; 0x80
   1ddac:	mov	r0, r1
   1ddb0:	bx	lr
   1ddb4:	mov	r0, #4
   1ddb8:	bx	lr

0001ddbc <dta_118_variable_ok>:
   1ddbc:	push	{fp, lr}
   1ddc0:	mov	fp, sp
   1ddc4:	bl	4d30 <readstat_variable_get_name@plt>
   1ddc8:	mov	r1, #1
   1ddcc:	mov	r2, #129	; 0x81
   1ddd0:	pop	{fp, lr}
   1ddd4:	b	1f72c <dta_validate_name>

0001ddd8 <dta_110_variable_ok>:
   1ddd8:	push	{fp, lr}
   1dddc:	mov	fp, sp
   1dde0:	bl	4d30 <readstat_variable_get_name@plt>
   1dde4:	mov	r1, #0
   1dde8:	mov	r2, #33	; 0x21
   1ddec:	pop	{fp, lr}
   1ddf0:	b	1f72c <dta_validate_name>

0001ddf4 <dta_old_variable_ok>:
   1ddf4:	push	{fp, lr}
   1ddf8:	mov	fp, sp
   1ddfc:	bl	4d30 <readstat_variable_get_name@plt>
   1de00:	mov	r1, #0
   1de04:	mov	r2, #9
   1de08:	pop	{fp, lr}
   1de0c:	b	1f72c <dta_validate_name>

0001de10 <dta_118_write_string_ref>:
   1de10:	cmp	r2, #0
   1de14:	moveq	r0, #34	; 0x22
   1de18:	bxeq	lr
   1de1c:	push	{r4, r5, r6, sl, fp, lr}
   1de20:	add	fp, sp, #16
   1de24:	mov	r4, r0
   1de28:	ldrh	r0, [r2]
   1de2c:	ldr	r6, [r2, #8]
   1de30:	ldr	r5, [r2, #12]
   1de34:	strh	r0, [r4]
   1de38:	bl	48b0 <machine_is_little_endian@plt>
   1de3c:	cmp	r0, #0
   1de40:	mov	r0, #0
   1de44:	lsreq	r5, r6, #16
   1de48:	lsleq	r6, r6, #16
   1de4c:	strh	r5, [r4, #6]
   1de50:	str	r6, [r4, #2]
   1de54:	pop	{r4, r5, r6, sl, fp, pc}

0001de58 <dta_117_write_string_ref>:
   1de58:	cmp	r2, #0
   1de5c:	moveq	r0, #34	; 0x22
   1de60:	bxeq	lr
   1de64:	ldr	r1, [r2]
   1de68:	ldr	r2, [r2, #8]
   1de6c:	str	r2, [r0, #4]
   1de70:	str	r1, [r0]
   1de74:	mov	r0, #0
   1de78:	bx	lr

0001de7c <dta_113_write_int8>:
   1de7c:	cmp	r2, #100	; 0x64
   1de80:	mov	r1, r0
   1de84:	mov	r0, #20
   1de88:	movle	r0, #0
   1de8c:	strble	r2, [r1]
   1de90:	bx	lr

0001de94 <dta_113_write_int16>:
   1de94:	movw	r3, #32740	; 0x7fe4
   1de98:	mov	r1, r0
   1de9c:	mov	r0, #20
   1dea0:	cmp	r2, r3
   1dea4:	movle	r0, #0
   1dea8:	strhle	r2, [r1]
   1deac:	bx	lr

0001deb0 <dta_113_write_int32>:
   1deb0:	cmn	r2, #-2147483620	; 0x8000001c
   1deb4:	mov	r1, r0
   1deb8:	mov	r0, #20
   1debc:	movle	r0, #0
   1dec0:	strle	r2, [r1]
   1dec4:	bx	lr

0001dec8 <dta_113_write_missing_numeric>:
   1dec8:	ldr	r1, [r1]
   1decc:	sub	r1, r1, #1
   1ded0:	cmp	r1, #4
   1ded4:	bhi	1df34 <dta_113_write_missing_numeric+0x6c>
   1ded8:	add	r2, pc, #4
   1dedc:	ldr	r1, [r2, r1, lsl #2]
   1dee0:	add	pc, r2, r1
   1dee4:	.word	0x00000014
   1dee8:	.word	0x00000020
   1deec:	.word	0x0000002c
   1def0:	.word	0x00000034
   1def4:	.word	0x0000003c
   1def8:	mov	r1, #101	; 0x65
   1defc:	strb	r1, [r0]
   1df00:	b	1df34 <dta_113_write_missing_numeric+0x6c>
   1df04:	movw	r1, #32741	; 0x7fe5
   1df08:	strh	r1, [r0]
   1df0c:	b	1df34 <dta_113_write_missing_numeric+0x6c>
   1df10:	mvn	r1, #-2147483622	; 0x8000001a
   1df14:	b	1df30 <dta_113_write_missing_numeric+0x68>
   1df18:	mov	r1, #2130706432	; 0x7f000000
   1df1c:	b	1df30 <dta_113_write_missing_numeric+0x68>
   1df20:	movw	r1, #0
   1df24:	movt	r1, #32736	; 0x7fe0
   1df28:	str	r1, [r0, #4]
   1df2c:	mov	r1, #0
   1df30:	str	r1, [r0]
   1df34:	mov	r0, #0
   1df38:	bx	lr

0001df3c <dta_113_write_missing_tagged>:
   1df3c:	sub	r3, r2, #97	; 0x61
   1df40:	mov	ip, #21
   1df44:	uxtb	r3, r3
   1df48:	cmp	r3, #25
   1df4c:	bhi	1dff0 <dta_113_write_missing_tagged+0xb4>
   1df50:	ldr	r1, [r1]
   1df54:	sub	r1, r1, #1
   1df58:	cmp	r1, #4
   1df5c:	bhi	1df90 <dta_113_write_missing_tagged+0x54>
   1df60:	add	r3, pc, #4
   1df64:	ldr	r1, [r3, r1, lsl #2]
   1df68:	add	pc, r3, r1
   1df6c:	.word	0x00000014
   1df70:	.word	0x0000002c
   1df74:	.word	0x00000040
   1df78:	.word	0x0000004c
   1df7c:	.word	0x00000064
   1df80:	add	r1, r2, #5
   1df84:	mov	ip, #0
   1df88:	strb	r1, [r0]
   1df8c:	b	1dff0 <dta_113_write_missing_tagged+0xb4>
   1df90:	mov	ip, #23
   1df94:	b	1dff0 <dta_113_write_missing_tagged+0xb4>
   1df98:	movw	r1, #32645	; 0x7f85
   1df9c:	mov	ip, #0
   1dfa0:	add	r1, r2, r1
   1dfa4:	strh	r1, [r0]
   1dfa8:	b	1dff0 <dta_113_write_missing_tagged+0xb4>
   1dfac:	sub	r1, r2, #123	; 0x7b
   1dfb0:	sub	r1, r1, #-2147483648	; 0x80000000
   1dfb4:	b	1dfc4 <dta_113_write_missing_tagged+0x88>
   1dfb8:	movw	r1, #0
   1dfbc:	movt	r1, #32509	; 0x7efd
   1dfc0:	add	r1, r1, r2, lsl #11
   1dfc4:	str	r1, [r0]
   1dfc8:	mov	ip, #0
   1dfcc:	b	1dff0 <dta_113_write_missing_tagged+0xb4>
   1dfd0:	sub	r1, r2, #97	; 0x61
   1dfd4:	movw	r2, #256	; 0x100
   1dfd8:	mov	ip, #0
   1dfdc:	movt	r2, #32736	; 0x7fe0
   1dfe0:	sub	r1, r1, #-16777216	; 0xff000000
   1dfe4:	str	ip, [r0]
   1dfe8:	add	r1, r2, r1, lsl #8
   1dfec:	str	r1, [r0, #4]
   1dff0:	mov	r0, ip
   1dff4:	bx	lr

0001dff8 <dta_old_write_int8>:
   1dff8:	cmp	r2, #127	; 0x7f
   1dffc:	mov	r1, r0
   1e000:	mov	r0, #20
   1e004:	movne	r0, #0
   1e008:	strbne	r2, [r1]
   1e00c:	bx	lr

0001e010 <dta_old_write_int16>:
   1e010:	movw	r3, #32767	; 0x7fff
   1e014:	mov	r1, r0
   1e018:	mov	r0, #20
   1e01c:	cmp	r2, r3
   1e020:	movne	r0, #0
   1e024:	strhne	r2, [r1]
   1e028:	bx	lr

0001e02c <dta_old_write_int32>:
   1e02c:	cmn	r2, #-2147483647	; 0x80000001
   1e030:	mov	r1, r0
   1e034:	mov	r0, #20
   1e038:	movne	r0, #0
   1e03c:	strne	r2, [r1]
   1e040:	bx	lr

0001e044 <dta_old_write_missing_numeric>:
   1e044:	ldr	r1, [r1]
   1e048:	sub	r1, r1, #1
   1e04c:	cmp	r1, #4
   1e050:	bhi	1e0b0 <dta_old_write_missing_numeric+0x6c>
   1e054:	add	r2, pc, #4
   1e058:	ldr	r1, [r2, r1, lsl #2]
   1e05c:	add	pc, r2, r1
   1e060:	.word	0x00000014
   1e064:	.word	0x00000020
   1e068:	.word	0x0000002c
   1e06c:	.word	0x00000034
   1e070:	.word	0x0000003c
   1e074:	mov	r1, #127	; 0x7f
   1e078:	strb	r1, [r0]
   1e07c:	b	1e0b0 <dta_old_write_missing_numeric+0x6c>
   1e080:	movw	r1, #32767	; 0x7fff
   1e084:	strh	r1, [r0]
   1e088:	b	1e0b0 <dta_old_write_missing_numeric+0x6c>
   1e08c:	mvn	r1, #-2147483648	; 0x80000000
   1e090:	b	1e0ac <dta_old_write_missing_numeric+0x68>
   1e094:	mov	r1, #2130706432	; 0x7f000000
   1e098:	b	1e0ac <dta_old_write_missing_numeric+0x68>
   1e09c:	movw	r1, #0
   1e0a0:	movt	r1, #32736	; 0x7fe0
   1e0a4:	str	r1, [r0, #4]
   1e0a8:	mov	r1, #0
   1e0ac:	str	r1, [r0]
   1e0b0:	mov	r0, #0
   1e0b4:	bx	lr

0001e0b8 <dta_write_float>:
   1e0b8:	push	{r4, r5, fp, lr}
   1e0bc:	add	fp, sp, #8
   1e0c0:	vpush	{d8}
   1e0c4:	vmov.f32	s16, s0
   1e0c8:	vldr	s0, [pc, #176]	; 1e180 <dta_write_float+0xc8>
   1e0cc:	mov	r4, r0
   1e0d0:	mov	r0, #20
   1e0d4:	vcmpe.f32	s16, s0
   1e0d8:	vmrs	APSR_nzcv, fpscr
   1e0dc:	bgt	1e178 <dta_write_float+0xc0>
   1e0e0:	vmov.f32	s0, s16
   1e0e4:	mov	r5, r1
   1e0e8:	bl	48c8 <__isnanf@plt>
   1e0ec:	cmp	r0, #0
   1e0f0:	beq	1e134 <dta_write_float+0x7c>
   1e0f4:	ldr	r0, [r5]
   1e0f8:	sub	r1, r0, #1
   1e0fc:	mov	r0, #0
   1e100:	cmp	r1, #4
   1e104:	bhi	1e178 <dta_write_float+0xc0>
   1e108:	add	r2, pc, #4
   1e10c:	ldr	r1, [r2, r1, lsl #2]
   1e110:	add	pc, r2, r1
   1e114:	.word	0x00000014
   1e118:	.word	0x00000030
   1e11c:	.word	0x0000003c
   1e120:	.word	0x00000044
   1e124:	.word	0x00000050
   1e128:	mov	r1, #101	; 0x65
   1e12c:	strb	r1, [r4]
   1e130:	b	1e178 <dta_write_float+0xc0>
   1e134:	vmov	r0, s16
   1e138:	str	r0, [r4]
   1e13c:	mov	r0, #0
   1e140:	b	1e178 <dta_write_float+0xc0>
   1e144:	movw	r1, #32741	; 0x7fe5
   1e148:	strh	r1, [r4]
   1e14c:	b	1e178 <dta_write_float+0xc0>
   1e150:	mvn	r1, #-2147483622	; 0x8000001a
   1e154:	b	1e15c <dta_write_float+0xa4>
   1e158:	mov	r1, #2130706432	; 0x7f000000
   1e15c:	str	r1, [r4]
   1e160:	b	1e178 <dta_write_float+0xc0>
   1e164:	movw	r0, #0
   1e168:	movt	r0, #32736	; 0x7fe0
   1e16c:	str	r0, [r4, #4]
   1e170:	mov	r0, #0
   1e174:	str	r0, [r4]
   1e178:	vpop	{d8}
   1e17c:	pop	{r4, r5, fp, pc}
   1e180:	.word	0x7effffff
   1e184:	.word	0xe320f000

0001e188 <dta_write_double>:
   1e188:	push	{r4, r5, fp, lr}
   1e18c:	add	fp, sp, #8
   1e190:	vpush	{d8}
   1e194:	vldr	d16, [pc, #172]	; 1e248 <dta_write_double+0xc0>
   1e198:	mov	r4, r0
   1e19c:	mov	r0, #20
   1e1a0:	vcmpe.f64	d0, d16
   1e1a4:	vmrs	APSR_nzcv, fpscr
   1e1a8:	bgt	1e240 <dta_write_double+0xb8>
   1e1ac:	vmov.f64	d8, d0
   1e1b0:	mov	r5, r1
   1e1b4:	bl	4d00 <__isnan@plt>
   1e1b8:	cmp	r0, #0
   1e1bc:	beq	1e200 <dta_write_double+0x78>
   1e1c0:	ldr	r0, [r5]
   1e1c4:	sub	r1, r0, #1
   1e1c8:	mov	r0, #0
   1e1cc:	cmp	r1, #4
   1e1d0:	bhi	1e240 <dta_write_double+0xb8>
   1e1d4:	add	r2, pc, #4
   1e1d8:	ldr	r1, [r2, r1, lsl #2]
   1e1dc:	add	pc, r2, r1
   1e1e0:	.word	0x00000014
   1e1e4:	.word	0x0000002c
   1e1e8:	.word	0x00000038
   1e1ec:	.word	0x00000040
   1e1f0:	.word	0x0000004c
   1e1f4:	mov	r1, #101	; 0x65
   1e1f8:	strb	r1, [r4]
   1e1fc:	b	1e240 <dta_write_double+0xb8>
   1e200:	mov	r0, #0
   1e204:	vst1.8	{d8}, [r4]
   1e208:	b	1e240 <dta_write_double+0xb8>
   1e20c:	movw	r1, #32741	; 0x7fe5
   1e210:	strh	r1, [r4]
   1e214:	b	1e240 <dta_write_double+0xb8>
   1e218:	mvn	r1, #-2147483622	; 0x8000001a
   1e21c:	b	1e224 <dta_write_double+0x9c>
   1e220:	mov	r1, #2130706432	; 0x7f000000
   1e224:	str	r1, [r4]
   1e228:	b	1e240 <dta_write_double+0xb8>
   1e22c:	movw	r0, #0
   1e230:	movt	r0, #32736	; 0x7fe0
   1e234:	str	r0, [r4, #4]
   1e238:	mov	r0, #0
   1e23c:	str	r0, [r4]
   1e240:	vpop	{d8}
   1e244:	pop	{r4, r5, fp, pc}
   1e248:	.word	0xffffffff
   1e24c:	.word	0x7fdfffff

0001e250 <dta_write_string>:
   1e250:	push	{r4, r5, r6, r7, fp, lr}
   1e254:	add	fp, sp, #16
   1e258:	ldr	r4, [r1, #1596]	; 0x63c
   1e25c:	mov	r5, r0
   1e260:	cmp	r2, #0
   1e264:	beq	1e2a4 <dta_write_string+0x54>
   1e268:	ldrb	r0, [r2]
   1e26c:	mov	r6, r2
   1e270:	cmp	r0, #0
   1e274:	beq	1e2a4 <dta_write_string+0x54>
   1e278:	mov	r0, r6
   1e27c:	bl	4bd4 <strlen@plt>
   1e280:	mov	r7, #22
   1e284:	cmp	r0, r4
   1e288:	bhi	1e2b8 <dta_write_string+0x68>
   1e28c:	mov	r0, r5
   1e290:	mov	r1, r6
   1e294:	mov	r2, r4
   1e298:	bl	4c94 <strncpy@plt>
   1e29c:	mov	r7, #0
   1e2a0:	b	1e2b8 <dta_write_string+0x68>
   1e2a4:	mov	r0, r5
   1e2a8:	mov	r1, #0
   1e2ac:	mov	r2, r4
   1e2b0:	mov	r7, #0
   1e2b4:	bl	4c70 <memset@plt>
   1e2b8:	mov	r0, r7
   1e2bc:	pop	{r4, r5, r6, r7, fp, pc}

0001e2c0 <dta_write_missing_string>:
   1e2c0:	push	{fp, lr}
   1e2c4:	mov	fp, sp
   1e2c8:	ldr	r2, [r1, #1596]	; 0x63c
   1e2cc:	mov	r1, #0
   1e2d0:	bl	4c70 <memset@plt>
   1e2d4:	mov	r0, #0
   1e2d8:	pop	{fp, pc}

0001e2dc <dta_begin_data>:
   1e2dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2e0:	add	fp, sp, #28
   1e2e4:	sub	sp, sp, #180	; 0xb4
   1e2e8:	ldr	r1, [r0, #308]	; 0x134
   1e2ec:	cmp	r1, #0
   1e2f0:	beq	1e360 <dta_begin_data+0x84>
   1e2f4:	mov	r7, r0
   1e2f8:	mov	r0, #0
   1e2fc:	mov	r4, #0
   1e300:	bl	4f1c <dta_ctx_alloc@plt>
   1e304:	ldr	r5, [r7, #28]
   1e308:	ldr	r6, [r7, #80]	; 0x50
   1e30c:	mov	r8, r0
   1e310:	bl	48b0 <machine_is_little_endian@plt>
   1e314:	ldrb	r1, [r7, #8]
   1e318:	cmp	r0, #0
   1e31c:	mov	r2, #2
   1e320:	asr	r3, r6, #31
   1e324:	mov	r0, r8
   1e328:	str	r7, [sp, #36]	; 0x24
   1e32c:	movweq	r2, #1
   1e330:	str	r2, [sp]
   1e334:	mov	r2, r6
   1e338:	stmib	sp, {r1, r4}
   1e33c:	mov	r1, r5
   1e340:	str	r4, [sp, #12]
   1e344:	bl	4b98 <dta_ctx_init@plt>
   1e348:	mov	r6, r0
   1e34c:	cmp	r0, #0
   1e350:	beq	1e370 <dta_begin_data+0x94>
   1e354:	mov	r0, r8
   1e358:	bl	4874 <dta_ctx_free@plt>
   1e35c:	b	1e364 <dta_begin_data+0x88>
   1e360:	mov	r6, #14
   1e364:	mov	r0, r6
   1e368:	sub	sp, fp, #28
   1e36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e370:	ldrb	r0, [r8, #192]	; 0xc0
   1e374:	tst	r0, #4
   1e378:	bne	1e80c <dta_begin_data+0x530>
   1e37c:	ldr	r4, [sp, #36]	; 0x24
   1e380:	ldr	r0, [r4, #8]
   1e384:	strb	r0, [sp, #48]	; 0x30
   1e388:	bl	48b0 <machine_is_little_endian@plt>
   1e38c:	mov	r1, #1
   1e390:	cmp	r0, #0
   1e394:	strh	r1, [sp, #50]	; 0x32
   1e398:	mov	r1, #2
   1e39c:	movweq	r1, #1
   1e3a0:	strb	r1, [sp, #49]	; 0x31
   1e3a4:	ldr	r0, [r4, #28]
   1e3a8:	strh	r0, [sp, #52]	; 0x34
   1e3ac:	cmp	r0, #32768	; 0x8000
   1e3b0:	ldr	r1, [r4, #80]	; 0x50
   1e3b4:	str	r1, [sp, #54]	; 0x36
   1e3b8:	bge	1e3f4 <dta_begin_data+0x118>
   1e3bc:	add	r1, sp, #48	; 0x30
   1e3c0:	mov	r0, r4
   1e3c4:	mov	r2, #10
   1e3c8:	bl	4e20 <readstat_write_bytes@plt>
   1e3cc:	cmp	r0, #0
   1e3d0:	bne	1e3f4 <dta_begin_data+0x118>
   1e3d4:	mov	r0, r4
   1e3d8:	mov	r1, r8
   1e3dc:	bl	1fc80 <dta_emit_header_data_label>
   1e3e0:	cmp	r0, #0
   1e3e4:	bne	1e3f4 <dta_begin_data+0x118>
   1e3e8:	mov	r0, r4
   1e3ec:	mov	r1, r8
   1e3f0:	bl	1fdc0 <dta_emit_header_time_stamp>
   1e3f4:	ldrb	r0, [r8, #192]	; 0xc0
   1e3f8:	ands	sl, r0, #4
   1e3fc:	bne	1e8fc <dta_begin_data+0x620>
   1e400:	ldr	r0, [r8, #148]	; 0x94
   1e404:	ldr	r4, [sp, #36]	; 0x24
   1e408:	cmp	r0, #1
   1e40c:	blt	1e4ec <dta_begin_data+0x210>
   1e410:	mov	r9, #0
   1e414:	add	sl, sp, #48	; 0x30
   1e418:	mov	r5, #0
   1e41c:	mov	r7, #0
   1e420:	mov	r0, r4
   1e424:	mov	r1, r7
   1e428:	bl	4d48 <readstat_get_variable@plt>
   1e42c:	strh	r9, [sp, #48]	; 0x30
   1e430:	mov	r2, sl
   1e434:	ldrb	r1, [r8, #20]
   1e438:	bl	1fff0 <dta_typecode_for_variable>
   1e43c:	cmp	r0, #0
   1e440:	bne	1ea34 <dta_begin_data+0x758>
   1e444:	ldr	r0, [r8, #28]
   1e448:	ldrh	r1, [sp, #48]	; 0x30
   1e44c:	add	r7, r7, #1
   1e450:	add	r0, r0, r5
   1e454:	add	r5, r5, #2
   1e458:	strh	r1, [r0]
   1e45c:	ldr	r0, [r8, #148]	; 0x94
   1e460:	cmp	r7, r0
   1e464:	blt	1e420 <dta_begin_data+0x144>
   1e468:	cmp	r0, #1
   1e46c:	blt	1e4ec <dta_begin_data+0x210>
   1e470:	mov	r5, #0
   1e474:	add	r9, sp, #48	; 0x30
   1e478:	mov	r7, #0
   1e47c:	ldr	r1, [r8, #24]
   1e480:	cmp	r1, #2
   1e484:	beq	1e4a8 <dta_begin_data+0x1cc>
   1e488:	cmp	r1, #1
   1e48c:	bne	1e4dc <dta_begin_data+0x200>
   1e490:	ldr	r0, [r8, #28]
   1e494:	mov	r1, r9
   1e498:	mov	r2, #1
   1e49c:	ldrb	r0, [r0, r5]
   1e4a0:	strb	r0, [sp, #48]	; 0x30
   1e4a4:	b	1e4c0 <dta_begin_data+0x1e4>
   1e4a8:	ldr	r0, [r8, #28]
   1e4ac:	mov	r1, r9
   1e4b0:	mov	r2, #2
   1e4b4:	add	r0, r0, r5
   1e4b8:	ldrh	r0, [r0]
   1e4bc:	strh	r0, [sp, #48]	; 0x30
   1e4c0:	mov	r0, r4
   1e4c4:	bl	4e20 <readstat_write_bytes@plt>
   1e4c8:	mov	r6, r0
   1e4cc:	cmp	r0, #0
   1e4d0:	bne	1e354 <dta_begin_data+0x78>
   1e4d4:	ldr	r0, [r8, #148]	; 0x94
   1e4d8:	ldr	r4, [sp, #36]	; 0x24
   1e4dc:	add	r7, r7, #1
   1e4e0:	add	r5, r5, #2
   1e4e4:	cmp	r7, r0
   1e4e8:	blt	1e47c <dta_begin_data+0x1a0>
   1e4ec:	ldrb	r0, [r8, #192]	; 0xc0
   1e4f0:	tst	r0, #4
   1e4f4:	bne	1ea3c <dta_begin_data+0x760>
   1e4f8:	ldr	r0, [r8, #148]	; 0x94
   1e4fc:	ldr	r4, [sp, #36]	; 0x24
   1e500:	cmp	r0, #1
   1e504:	blt	1e540 <dta_begin_data+0x264>
   1e508:	mov	r5, #0
   1e50c:	mov	r0, r4
   1e510:	mov	r1, r5
   1e514:	bl	4d48 <readstat_get_variable@plt>
   1e518:	ldr	r1, [r8, #36]	; 0x24
   1e51c:	ldr	r2, [r8, #76]	; 0x4c
   1e520:	mla	r3, r2, r5, r1
   1e524:	add	r1, r0, #8
   1e528:	mov	r0, r3
   1e52c:	bl	4c94 <strncpy@plt>
   1e530:	ldr	r0, [r8, #148]	; 0x94
   1e534:	add	r5, r5, #1
   1e538:	cmp	r5, r0
   1e53c:	blt	1e50c <dta_begin_data+0x230>
   1e540:	ldr	r1, [r8, #36]	; 0x24
   1e544:	ldr	r2, [r8, #40]	; 0x28
   1e548:	mov	r0, r4
   1e54c:	bl	4e20 <readstat_write_bytes@plt>
   1e550:	mov	r6, r0
   1e554:	cmp	r0, #0
   1e558:	bne	1e354 <dta_begin_data+0x78>
   1e55c:	ldrb	r0, [r8, #192]	; 0xc0
   1e560:	tst	r0, #4
   1e564:	bne	1ed1c <dta_begin_data+0xa40>
   1e568:	ldr	r0, [r8, #44]	; 0x2c
   1e56c:	ldr	r2, [r8, #48]	; 0x30
   1e570:	mov	r1, #0
   1e574:	bl	4c70 <memset@plt>
   1e578:	ldr	r1, [r8, #44]	; 0x2c
   1e57c:	ldr	r2, [r8, #48]	; 0x30
   1e580:	ldr	r0, [sp, #36]	; 0x24
   1e584:	bl	4e20 <readstat_write_bytes@plt>
   1e588:	mov	r6, r0
   1e58c:	cmp	r0, #0
   1e590:	bne	1e354 <dta_begin_data+0x78>
   1e594:	ldrb	r0, [r8, #192]	; 0xc0
   1e598:	tst	r0, #4
   1e59c:	bne	1edd0 <dta_begin_data+0xaf4>
   1e5a0:	ldr	r0, [r8, #148]	; 0x94
   1e5a4:	ldr	r4, [sp, #36]	; 0x24
   1e5a8:	cmp	r0, #1
   1e5ac:	blt	1e680 <dta_begin_data+0x3a4>
   1e5b0:	ldr	sl, [pc, #2536]	; 1efa0 <dta_begin_data+0xcc4>
   1e5b4:	mov	r6, #0
   1e5b8:	add	r9, sp, #48	; 0x30
   1e5bc:	add	sl, pc, sl
   1e5c0:	mov	r0, r4
   1e5c4:	mov	r1, r6
   1e5c8:	bl	4d48 <readstat_get_variable@plt>
   1e5cc:	mov	r1, r0
   1e5d0:	mov	r5, r0
   1e5d4:	ldrb	r0, [r1, #308]!	; 0x134
   1e5d8:	cmp	r0, #0
   1e5dc:	beq	1e5ec <dta_begin_data+0x310>
   1e5e0:	ldr	r0, [r8, #52]	; 0x34
   1e5e4:	ldr	r2, [r8, #80]	; 0x50
   1e5e8:	b	1e668 <dta_begin_data+0x38c>
   1e5ec:	ldr	r0, [r5]
   1e5f0:	ldr	r7, [r5, #2136]	; 0x858
   1e5f4:	bl	4820 <readstat_type_class@plt>
   1e5f8:	cmp	r7, #0
   1e5fc:	bne	1e620 <dta_begin_data+0x344>
   1e600:	ldr	r1, [r5]
   1e604:	mov	r7, #9
   1e608:	sub	r1, r1, #1
   1e60c:	cmp	r1, #4
   1e610:	bhi	1e620 <dta_begin_data+0x344>
   1e614:	ldr	r2, [pc, #2440]	; 1efa4 <dta_begin_data+0xcc8>
   1e618:	add	r2, pc, r2
   1e61c:	ldr	r7, [r2, r1, lsl #2]
   1e620:	ldr	r1, [pc, #2432]	; 1efa8 <dta_begin_data+0xccc>
   1e624:	cmp	r0, #0
   1e628:	ldr	r0, [pc, #2428]	; 1efac <dta_begin_data+0xcd0>
   1e62c:	mov	r2, sl
   1e630:	mov	r3, r7
   1e634:	add	r0, pc, r0
   1e638:	add	r1, pc, r1
   1e63c:	moveq	r1, r0
   1e640:	ldr	r0, [r5, #2132]	; 0x854
   1e644:	cmp	r0, #1
   1e648:	ldr	r0, [pc, #2400]	; 1efb0 <dta_begin_data+0xcd4>
   1e64c:	add	r0, pc, r0
   1e650:	moveq	r2, r0
   1e654:	mov	r0, r9
   1e658:	bl	4db4 <sprintf@plt>
   1e65c:	ldr	r0, [r8, #52]	; 0x34
   1e660:	ldr	r2, [r8, #80]	; 0x50
   1e664:	mov	r1, r9
   1e668:	mla	r0, r2, r6, r0
   1e66c:	bl	4c94 <strncpy@plt>
   1e670:	ldr	r0, [r8, #148]	; 0x94
   1e674:	add	r6, r6, #1
   1e678:	cmp	r6, r0
   1e67c:	blt	1e5c0 <dta_begin_data+0x2e4>
   1e680:	ldr	r1, [r8, #52]	; 0x34
   1e684:	ldr	r2, [r8, #56]	; 0x38
   1e688:	mov	r0, r4
   1e68c:	bl	4e20 <readstat_write_bytes@plt>
   1e690:	mov	r6, r0
   1e694:	cmp	r0, #0
   1e698:	bne	1e354 <dta_begin_data+0x78>
   1e69c:	ldrb	r0, [r8, #192]	; 0xc0
   1e6a0:	tst	r0, #4
   1e6a4:	bne	1eeb4 <dta_begin_data+0xbd8>
   1e6a8:	ldr	r0, [r8, #148]	; 0x94
   1e6ac:	ldr	r4, [sp, #36]	; 0x24
   1e6b0:	cmp	r0, #1
   1e6b4:	blt	1e708 <dta_begin_data+0x42c>
   1e6b8:	mov	r5, #0
   1e6bc:	mov	r0, r4
   1e6c0:	mov	r1, r5
   1e6c4:	bl	4d48 <readstat_get_variable@plt>
   1e6c8:	mov	r1, r0
   1e6cc:	ldr	r0, [r8, #60]	; 0x3c
   1e6d0:	ldr	r2, [r8, #84]	; 0x54
   1e6d4:	ldr	r1, [r1, #1588]	; 0x634
   1e6d8:	mla	r0, r2, r5, r0
   1e6dc:	cmp	r1, #0
   1e6e0:	beq	1e6f0 <dta_begin_data+0x414>
   1e6e4:	add	r1, r1, #4
   1e6e8:	bl	4c94 <strncpy@plt>
   1e6ec:	b	1e6f8 <dta_begin_data+0x41c>
   1e6f0:	mov	r1, #0
   1e6f4:	bl	4c70 <memset@plt>
   1e6f8:	ldr	r0, [r8, #148]	; 0x94
   1e6fc:	add	r5, r5, #1
   1e700:	cmp	r5, r0
   1e704:	blt	1e6bc <dta_begin_data+0x3e0>
   1e708:	ldr	r1, [r8, #60]	; 0x3c
   1e70c:	ldr	r2, [r8, #64]	; 0x40
   1e710:	mov	r0, r4
   1e714:	bl	4e20 <readstat_write_bytes@plt>
   1e718:	mov	r6, r0
   1e71c:	cmp	r0, #0
   1e720:	bne	1e354 <dta_begin_data+0x78>
   1e724:	ldrb	r0, [r8, #192]	; 0xc0
   1e728:	tst	r0, #4
   1e72c:	bne	1eefc <dta_begin_data+0xc20>
   1e730:	ldr	r0, [r8, #148]	; 0x94
   1e734:	ldr	r4, [sp, #36]	; 0x24
   1e738:	cmp	r0, #1
   1e73c:	blt	1e778 <dta_begin_data+0x49c>
   1e740:	mov	r5, #0
   1e744:	mov	r0, r4
   1e748:	mov	r1, r5
   1e74c:	bl	4d48 <readstat_get_variable@plt>
   1e750:	ldr	r1, [r8, #68]	; 0x44
   1e754:	ldr	r2, [r8, #88]	; 0x58
   1e758:	mla	r3, r2, r5, r1
   1e75c:	add	r1, r0, #564	; 0x234
   1e760:	mov	r0, r3
   1e764:	bl	4c94 <strncpy@plt>
   1e768:	ldr	r0, [r8, #148]	; 0x94
   1e76c:	add	r5, r5, #1
   1e770:	cmp	r5, r0
   1e774:	blt	1e744 <dta_begin_data+0x468>
   1e778:	ldr	r1, [r8, #68]	; 0x44
   1e77c:	ldr	r2, [r8, #72]	; 0x48
   1e780:	mov	r0, r4
   1e784:	bl	4e20 <readstat_write_bytes@plt>
   1e788:	mov	r6, r0
   1e78c:	cmp	r0, #0
   1e790:	bne	1e354 <dta_begin_data+0x78>
   1e794:	ldrb	r0, [r8, #192]	; 0xc0
   1e798:	tst	r0, #4
   1e79c:	beq	1e7bc <dta_begin_data+0x4e0>
   1e7a0:	ldr	r1, [pc, #2076]	; 1efc4 <dta_begin_data+0xce8>
   1e7a4:	ldr	r0, [sp, #36]	; 0x24
   1e7a8:	add	r1, pc, r1
   1e7ac:	bl	4b2c <readstat_write_string@plt>
   1e7b0:	mov	r6, r0
   1e7b4:	cmp	r0, #0
   1e7b8:	bne	1e354 <dta_begin_data+0x78>
   1e7bc:	ldr	r0, [sp, #36]	; 0x24
   1e7c0:	mov	r1, r8
   1e7c4:	bl	1fa50 <dta_emit_characteristics>
   1e7c8:	mov	r6, r0
   1e7cc:	cmp	r0, #0
   1e7d0:	bne	1e354 <dta_begin_data+0x78>
   1e7d4:	ldrb	r0, [r8, #192]	; 0xc0
   1e7d8:	tst	r0, #4
   1e7dc:	beq	1e7fc <dta_begin_data+0x520>
   1e7e0:	ldr	r1, [pc, #2016]	; 1efc8 <dta_begin_data+0xcec>
   1e7e4:	ldr	r0, [sp, #36]	; 0x24
   1e7e8:	add	r1, pc, r1
   1e7ec:	bl	4b2c <readstat_write_string@plt>
   1e7f0:	mov	r6, r0
   1e7f4:	cmp	r0, #0
   1e7f8:	bne	1e354 <dta_begin_data+0x78>
   1e7fc:	ldr	r0, [sp, #36]	; 0x24
   1e800:	mov	r6, #0
   1e804:	str	r8, [r0, #300]	; 0x12c
   1e808:	b	1e364 <dta_begin_data+0x88>
   1e80c:	ldr	r1, [pc, #1840]	; 1ef44 <dta_begin_data+0xc68>
   1e810:	ldr	r4, [sp, #36]	; 0x24
   1e814:	add	r1, pc, r1
   1e818:	mov	r0, r4
   1e81c:	bl	4b2c <readstat_write_string@plt>
   1e820:	mov	r6, r0
   1e824:	cmp	r0, #0
   1e828:	bne	1e354 <dta_begin_data+0x78>
   1e82c:	ldrb	r0, [r8, #192]	; 0xc0
   1e830:	tst	r0, #4
   1e834:	beq	1e854 <dta_begin_data+0x578>
   1e838:	ldr	r1, [pc, #1800]	; 1ef48 <dta_begin_data+0xc6c>
   1e83c:	mov	r0, r4
   1e840:	add	r1, pc, r1
   1e844:	bl	4b2c <readstat_write_string@plt>
   1e848:	mov	r6, r0
   1e84c:	cmp	r0, #0
   1e850:	bne	1e354 <dta_begin_data+0x78>
   1e854:	ldr	r3, [r4, #8]
   1e858:	ldr	r2, [pc, #1772]	; 1ef4c <dta_begin_data+0xc70>
   1e85c:	add	r5, sp, #48	; 0x30
   1e860:	mov	r1, #128	; 0x80
   1e864:	mov	r0, r5
   1e868:	add	r2, pc, r2
   1e86c:	bl	4c4c <snprintf@plt>
   1e870:	mov	r0, r4
   1e874:	mov	r1, r5
   1e878:	bl	4b2c <readstat_write_string@plt>
   1e87c:	mov	r6, r0
   1e880:	cmp	r0, #0
   1e884:	bne	1e354 <dta_begin_data+0x78>
   1e888:	bl	48b0 <machine_is_little_endian@plt>
   1e88c:	ldr	r1, [pc, #1724]	; 1ef50 <dta_begin_data+0xc74>
   1e890:	mov	r2, #3
   1e894:	cmp	r0, #0
   1e898:	mov	r0, r4
   1e89c:	str	r2, [sp]
   1e8a0:	add	r1, pc, r1
   1e8a4:	str	r1, [sp, #4]
   1e8a8:	ldr	r1, [pc, #1700]	; 1ef54 <dta_begin_data+0xc78>
   1e8ac:	ldr	r3, [pc, #1700]	; 1ef58 <dta_begin_data+0xc7c>
   1e8b0:	ldr	r2, [pc, #1700]	; 1ef5c <dta_begin_data+0xc80>
   1e8b4:	add	r1, pc, r1
   1e8b8:	add	r3, pc, r3
   1e8bc:	add	r2, pc, r2
   1e8c0:	moveq	r3, r1
   1e8c4:	mov	r1, r8
   1e8c8:	bl	1ff78 <dta_write_chunk>
   1e8cc:	mov	r6, r0
   1e8d0:	cmp	r0, #0
   1e8d4:	bne	1e354 <dta_begin_data+0x78>
   1e8d8:	ldr	r0, [r4, #8]
   1e8dc:	cmp	r0, #119	; 0x77
   1e8e0:	blt	1ed64 <dta_begin_data+0xa88>
   1e8e4:	ldr	r0, [r4, #28]
   1e8e8:	mov	r1, #4
   1e8ec:	str	r0, [sp, #40]	; 0x28
   1e8f0:	ldr	r0, [pc, #1640]	; 1ef60 <dta_begin_data+0xc84>
   1e8f4:	add	r0, pc, r0
   1e8f8:	b	1ed78 <dta_begin_data+0xa9c>
   1e8fc:	add	r1, sp, #48	; 0x30
   1e900:	mov	r5, r8
   1e904:	add	r2, r1, #64	; 0x40
   1e908:	add	r7, r1, #8
   1e90c:	add	r6, r1, #16
   1e910:	add	r4, r1, #24
   1e914:	add	r0, r1, #32
   1e918:	add	r3, r1, #40	; 0x28
   1e91c:	add	ip, r1, #48	; 0x30
   1e920:	add	lr, r1, #56	; 0x38
   1e924:	add	r1, r1, #72	; 0x48
   1e928:	str	r2, [sp, #32]
   1e92c:	ldr	r2, [sp, #36]	; 0x24
   1e930:	str	r1, [sp, #28]
   1e934:	mov	r1, #0
   1e938:	str	r1, [sp, #52]	; 0x34
   1e93c:	str	r1, [sp, #48]	; 0x30
   1e940:	ldr	r8, [r2, #4]
   1e944:	str	r8, [r7]
   1e948:	adds	r8, r8, #123	; 0x7b
   1e94c:	str	r1, [r7, #4]
   1e950:	adc	r9, r1, #0
   1e954:	strd	r8, [r6]
   1e958:	ldr	r7, [r5, #148]	; 0x94
   1e95c:	ldr	r6, [r5, #24]
   1e960:	mul	r6, r7, r6
   1e964:	str	r7, [sp, #24]
   1e968:	add	r6, r6, #33	; 0x21
   1e96c:	adds	r6, r8, r6
   1e970:	adc	r7, r9, #0
   1e974:	strd	r6, [r4]
   1e978:	ldr	r4, [r5, #40]	; 0x28
   1e97c:	add	r4, r4, #21
   1e980:	adds	r4, r6, r4
   1e984:	adc	r7, r7, #0
   1e988:	stm	r0, {r4, r7}
   1e98c:	ldr	r0, [r5, #48]	; 0x30
   1e990:	add	r0, r0, #21
   1e994:	adds	r0, r4, r0
   1e998:	mov	r4, r2
   1e99c:	adc	r7, r7, #0
   1e9a0:	stm	r3, {r0, r7}
   1e9a4:	ldr	r2, [r5, #56]	; 0x38
   1e9a8:	add	r2, r2, #19
   1e9ac:	adds	r0, r0, r2
   1e9b0:	adc	r7, r7, #0
   1e9b4:	stm	ip, {r0, r7}
   1e9b8:	ldr	r2, [r5, #64]	; 0x40
   1e9bc:	add	r2, r2, #39	; 0x27
   1e9c0:	adds	r0, r0, r2
   1e9c4:	adc	r3, r7, #0
   1e9c8:	stm	lr, {r0, r3}
   1e9cc:	ldr	r2, [r5, #72]	; 0x48
   1e9d0:	add	r2, r2, #35	; 0x23
   1e9d4:	adds	r8, r0, r2
   1e9d8:	ldr	r0, [sp, #32]
   1e9dc:	str	r5, [sp, #32]
   1e9e0:	adc	r9, r3, #0
   1e9e4:	strd	r8, [r0]
   1e9e8:	ldr	r7, [r4, #52]	; 0x34
   1e9ec:	cmp	r7, #1
   1e9f0:	blt	1ea84 <dta_begin_data+0x7a8>
   1e9f4:	ldr	r0, [r5, #92]	; 0x5c
   1e9f8:	ldr	r1, [r5, #96]	; 0x60
   1e9fc:	ldr	r4, [r4, #48]	; 0x30
   1ea00:	add	r0, sl, r0
   1ea04:	add	r0, r0, r1, lsl #1
   1ea08:	add	r6, r0, #6
   1ea0c:	mov	r0, #0
   1ea10:	add	r5, r6, r0
   1ea14:	ldr	r0, [r4], #4
   1ea18:	bl	4bd4 <strlen@plt>
   1ea1c:	add	r0, r5, r0
   1ea20:	subs	r7, r7, #1
   1ea24:	bne	1ea10 <dta_begin_data+0x734>
   1ea28:	add	r0, r0, #35	; 0x23
   1ea2c:	mov	r1, #0
   1ea30:	b	1ea88 <dta_begin_data+0x7ac>
   1ea34:	mov	r6, r0
   1ea38:	b	1e354 <dta_begin_data+0x78>
   1ea3c:	ldr	r1, [pc, #1348]	; 1ef88 <dta_begin_data+0xcac>
   1ea40:	ldr	r0, [sp, #36]	; 0x24
   1ea44:	add	r1, pc, r1
   1ea48:	bl	4b2c <readstat_write_string@plt>
   1ea4c:	mov	r6, r0
   1ea50:	cmp	r0, #0
   1ea54:	bne	1e354 <dta_begin_data+0x78>
   1ea58:	ldrb	r0, [r8, #192]	; 0xc0
   1ea5c:	tst	r0, #4
   1ea60:	beq	1e4f8 <dta_begin_data+0x21c>
   1ea64:	ldr	r1, [pc, #1312]	; 1ef8c <dta_begin_data+0xcb0>
   1ea68:	ldr	r0, [sp, #36]	; 0x24
   1ea6c:	add	r1, pc, r1
   1ea70:	bl	4b2c <readstat_write_string@plt>
   1ea74:	mov	r6, r0
   1ea78:	cmp	r0, #0
   1ea7c:	bne	1e354 <dta_begin_data+0x78>
   1ea80:	b	1e4f8 <dta_begin_data+0x21c>
   1ea84:	mov	r0, #35	; 0x23
   1ea88:	adds	r4, r0, r8
   1ea8c:	ldr	r0, [sp, #28]
   1ea90:	ldr	r8, [sp, #32]
   1ea94:	add	r3, sp, #48	; 0x30
   1ea98:	adc	r6, r1, r9
   1ea9c:	add	r7, r3, #80	; 0x50
   1eaa0:	stm	r0, {r4, r6}
   1eaa4:	ldr	r0, [sp, #24]
   1eaa8:	cmp	r0, #1
   1eaac:	blt	1eb38 <dta_begin_data+0x85c>
   1eab0:	str	r6, [sp, #24]
   1eab4:	str	r7, [sp, #28]
   1eab8:	mov	r9, #0
   1eabc:	sub	r6, fp, #30
   1eac0:	add	r7, sp, #40	; 0x28
   1eac4:	mov	r5, #0
   1eac8:	ldr	r0, [sp, #36]	; 0x24
   1eacc:	mov	r1, r5
   1ead0:	str	r9, [sp, #40]	; 0x28
   1ead4:	bl	4d48 <readstat_get_variable@plt>
   1ead8:	strh	r9, [fp, #-30]	; 0xffffffe2
   1eadc:	mov	r2, r6
   1eae0:	ldrb	r1, [r8, #20]
   1eae4:	bl	1fff0 <dta_typecode_for_variable>
   1eae8:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   1eaec:	mov	r1, r8
   1eaf0:	mov	r2, r7
   1eaf4:	mov	r3, #0
   1eaf8:	bl	4bb0 <dta_type_info@plt>
   1eafc:	cmp	r0, #0
   1eb00:	bne	1eb14 <dta_begin_data+0x838>
   1eb04:	ldr	r0, [r8, #160]	; 0xa0
   1eb08:	ldr	r1, [sp, #40]	; 0x28
   1eb0c:	add	r0, r0, r1
   1eb10:	str	r0, [r8, #160]	; 0xa0
   1eb14:	ldr	r0, [r8, #148]	; 0x94
   1eb18:	add	r5, r5, #1
   1eb1c:	cmp	r5, r0
   1eb20:	blt	1eac8 <dta_begin_data+0x7ec>
   1eb24:	ldrb	r0, [r8, #192]	; 0xc0
   1eb28:	ldr	r7, [sp, #28]
   1eb2c:	ldr	r6, [sp, #24]
   1eb30:	add	r3, sp, #48	; 0x30
   1eb34:	and	sl, r0, #4
   1eb38:	ldr	r1, [r8, #152]	; 0x98
   1eb3c:	ldr	r2, [r8, #160]	; 0xa0
   1eb40:	cmp	sl, #0
   1eb44:	ldr	r5, [sp, #36]	; 0x24
   1eb48:	add	r0, r3, #88	; 0x58
   1eb4c:	mul	r1, r2, r1
   1eb50:	addne	r1, r1, #13
   1eb54:	adds	r2, r4, r1
   1eb58:	adc	r9, r6, #0
   1eb5c:	stm	r7, {r2, r9}
   1eb60:	ldr	r1, [r5, #64]	; 0x40
   1eb64:	cmp	r1, #1
   1eb68:	blt	1eba0 <dta_begin_data+0x8c4>
   1eb6c:	ldr	r7, [r8, #116]	; 0x74
   1eb70:	ldr	r4, [r5, #60]	; 0x3c
   1eb74:	mov	r6, #16
   1eb78:	cmp	r7, #4
   1eb7c:	mov	r7, #0
   1eb80:	movwhi	r6, #20
   1eb84:	ldr	r5, [r4], #4
   1eb88:	add	r7, r7, r6
   1eb8c:	subs	r1, r1, #1
   1eb90:	ldr	r5, [r5, #16]
   1eb94:	add	r7, r7, r5
   1eb98:	bne	1eb84 <dta_begin_data+0x8a8>
   1eb9c:	b	1eba4 <dta_begin_data+0x8c8>
   1eba0:	mov	r7, #0
   1eba4:	add	r1, r3, #96	; 0x60
   1eba8:	cmp	sl, #0
   1ebac:	ldr	r4, [sp, #36]	; 0x24
   1ebb0:	str	r1, [sp, #24]
   1ebb4:	add	r1, r3, #104	; 0x68
   1ebb8:	addne	r7, r7, #7
   1ebbc:	str	r1, [sp, #28]
   1ebc0:	add	r1, r7, sl, lsl #1
   1ebc4:	adds	r1, r2, r1
   1ebc8:	adc	r2, r9, #0
   1ebcc:	stm	r0, {r1, r2}
   1ebd0:	cmp	sl, #0
   1ebd4:	mov	r9, sl
   1ebd8:	str	r1, [sp, #20]
   1ebdc:	ldr	r0, [r4, #40]	; 0x28
   1ebe0:	movwne	r9, #14
   1ebe4:	str	r2, [sp, #16]
   1ebe8:	cmp	r0, #1
   1ebec:	blt	1ec7c <dta_begin_data+0x9a0>
   1ebf0:	mov	r6, #0
   1ebf4:	mov	r0, r4
   1ebf8:	mov	r1, r6
   1ebfc:	bl	4df0 <readstat_get_label_set@plt>
   1ec00:	ldr	sl, [r0, #264]	; 0x108
   1ec04:	mov	r8, #0
   1ec08:	cmp	sl, #1
   1ec0c:	blt	1ec40 <dta_begin_data+0x964>
   1ec10:	mov	r5, r0
   1ec14:	mov	r8, #0
   1ec18:	mov	r7, #0
   1ec1c:	mov	r0, r5
   1ec20:	mov	r1, r7
   1ec24:	bl	4e8c <readstat_get_value_label@plt>
   1ec28:	ldr	r0, [r0, #28]
   1ec2c:	add	r7, r7, #1
   1ec30:	cmp	sl, r7
   1ec34:	add	r0, r8, r0
   1ec38:	add	r8, r0, #1
   1ec3c:	bne	1ec1c <dta_begin_data+0x940>
   1ec40:	add	r0, r9, sl, lsl #3
   1ec44:	add	r6, r6, #1
   1ec48:	add	r0, r0, r8
   1ec4c:	ldr	r8, [sp, #32]
   1ec50:	ldrd	r2, [r8, #104]	; 0x68
   1ec54:	ldrb	r1, [r8, #192]	; 0xc0
   1ec58:	add	r0, r0, r2
   1ec5c:	ands	sl, r1, #4
   1ec60:	add	r0, r0, r3
   1ec64:	add	r9, r0, #17
   1ec68:	addeq	r9, r0, #12
   1ec6c:	ldr	r0, [r4, #40]	; 0x28
   1ec70:	addne	r9, r9, #6
   1ec74:	cmp	r6, r0
   1ec78:	blt	1ebf4 <dta_begin_data+0x918>
   1ec7c:	ldr	r0, [sp, #20]
   1ec80:	ldr	r1, [sp, #16]
   1ec84:	cmp	sl, #0
   1ec88:	ldr	r2, [sp, #24]
   1ec8c:	addne	r9, r9, #15
   1ec90:	adds	r0, r0, r9
   1ec94:	adc	r1, r1, #0
   1ec98:	strd	r0, [r2]
   1ec9c:	adds	r2, r0, #12
   1eca0:	adc	r3, r1, #0
   1eca4:	cmp	sl, #0
   1eca8:	moveq	r2, r0
   1ecac:	ldr	r0, [sp, #28]
   1ecb0:	moveq	r3, r1
   1ecb4:	mov	r1, #112	; 0x70
   1ecb8:	strd	r2, [r0]
   1ecbc:	add	r3, sp, #48	; 0x30
   1ecc0:	ldr	r0, [pc, #692]	; 1ef7c <dta_begin_data+0xca0>
   1ecc4:	str	r1, [sp]
   1ecc8:	mov	r1, r8
   1eccc:	add	r0, pc, r0
   1ecd0:	str	r0, [sp, #4]
   1ecd4:	mov	r0, r4
   1ecd8:	ldr	r2, [pc, #672]	; 1ef80 <dta_begin_data+0xca4>
   1ecdc:	add	r2, pc, r2
   1ece0:	bl	1ff78 <dta_write_chunk>
   1ece4:	mov	r6, r0
   1ece8:	cmp	r0, #0
   1ecec:	bne	1e354 <dta_begin_data+0x78>
   1ecf0:	ldrb	r0, [r8, #192]	; 0xc0
   1ecf4:	tst	r0, #4
   1ecf8:	beq	1e400 <dta_begin_data+0x124>
   1ecfc:	ldr	r1, [pc, #640]	; 1ef84 <dta_begin_data+0xca8>
   1ed00:	ldr	r0, [sp, #36]	; 0x24
   1ed04:	add	r1, pc, r1
   1ed08:	bl	4b2c <readstat_write_string@plt>
   1ed0c:	mov	r6, r0
   1ed10:	cmp	r0, #0
   1ed14:	bne	1e354 <dta_begin_data+0x78>
   1ed18:	b	1e400 <dta_begin_data+0x124>
   1ed1c:	ldr	r1, [pc, #620]	; 1ef90 <dta_begin_data+0xcb4>
   1ed20:	ldr	r0, [sp, #36]	; 0x24
   1ed24:	add	r1, pc, r1
   1ed28:	bl	4b2c <readstat_write_string@plt>
   1ed2c:	mov	r6, r0
   1ed30:	cmp	r0, #0
   1ed34:	bne	1e354 <dta_begin_data+0x78>
   1ed38:	ldrb	r0, [r8, #192]	; 0xc0
   1ed3c:	tst	r0, #4
   1ed40:	beq	1e568 <dta_begin_data+0x28c>
   1ed44:	ldr	r1, [pc, #584]	; 1ef94 <dta_begin_data+0xcb8>
   1ed48:	ldr	r0, [sp, #36]	; 0x24
   1ed4c:	add	r1, pc, r1
   1ed50:	bl	4b2c <readstat_write_string@plt>
   1ed54:	mov	r6, r0
   1ed58:	cmp	r0, #0
   1ed5c:	bne	1e354 <dta_begin_data+0x78>
   1ed60:	b	1e568 <dta_begin_data+0x28c>
   1ed64:	ldr	r0, [r4, #28]
   1ed68:	mov	r1, #2
   1ed6c:	strh	r0, [sp, #40]	; 0x28
   1ed70:	ldr	r0, [pc, #492]	; 1ef64 <dta_begin_data+0xc88>
   1ed74:	add	r0, pc, r0
   1ed78:	str	r1, [sp]
   1ed7c:	str	r0, [sp, #4]
   1ed80:	add	r3, sp, #40	; 0x28
   1ed84:	mov	r0, r4
   1ed88:	mov	r1, r8
   1ed8c:	ldr	r2, [pc, #468]	; 1ef68 <dta_begin_data+0xc8c>
   1ed90:	add	r2, pc, r2
   1ed94:	bl	1ff78 <dta_write_chunk>
   1ed98:	mov	r6, r0
   1ed9c:	cmp	r0, #0
   1eda0:	bne	1e354 <dta_begin_data+0x78>
   1eda4:	ldr	r0, [r4, #8]
   1eda8:	cmp	r0, #118	; 0x76
   1edac:	blt	1ee18 <dta_begin_data+0xb3c>
   1edb0:	ldr	r0, [r4, #80]	; 0x50
   1edb4:	mov	r1, #8
   1edb8:	str	r0, [sp, #40]	; 0x28
   1edbc:	asr	r0, r0, #31
   1edc0:	str	r0, [sp, #44]	; 0x2c
   1edc4:	ldr	r0, [pc, #416]	; 1ef6c <dta_begin_data+0xc90>
   1edc8:	add	r0, pc, r0
   1edcc:	b	1ee2c <dta_begin_data+0xb50>
   1edd0:	ldr	r1, [pc, #448]	; 1ef98 <dta_begin_data+0xcbc>
   1edd4:	ldr	r0, [sp, #36]	; 0x24
   1edd8:	add	r1, pc, r1
   1eddc:	bl	4b2c <readstat_write_string@plt>
   1ede0:	mov	r6, r0
   1ede4:	cmp	r0, #0
   1ede8:	bne	1e354 <dta_begin_data+0x78>
   1edec:	ldrb	r0, [r8, #192]	; 0xc0
   1edf0:	tst	r0, #4
   1edf4:	beq	1e5a0 <dta_begin_data+0x2c4>
   1edf8:	ldr	r1, [pc, #412]	; 1ef9c <dta_begin_data+0xcc0>
   1edfc:	ldr	r0, [sp, #36]	; 0x24
   1ee00:	add	r1, pc, r1
   1ee04:	bl	4b2c <readstat_write_string@plt>
   1ee08:	mov	r6, r0
   1ee0c:	cmp	r0, #0
   1ee10:	bne	1e354 <dta_begin_data+0x78>
   1ee14:	b	1e5a0 <dta_begin_data+0x2c4>
   1ee18:	ldr	r0, [r4, #80]	; 0x50
   1ee1c:	mov	r1, #4
   1ee20:	str	r0, [sp, #40]	; 0x28
   1ee24:	ldr	r0, [pc, #324]	; 1ef70 <dta_begin_data+0xc94>
   1ee28:	add	r0, pc, r0
   1ee2c:	str	r1, [sp]
   1ee30:	str	r0, [sp, #4]
   1ee34:	add	r3, sp, #40	; 0x28
   1ee38:	mov	r0, r4
   1ee3c:	mov	r1, r8
   1ee40:	ldr	r2, [pc, #300]	; 1ef74 <dta_begin_data+0xc98>
   1ee44:	add	r2, pc, r2
   1ee48:	bl	1ff78 <dta_write_chunk>
   1ee4c:	mov	r6, r0
   1ee50:	cmp	r0, #0
   1ee54:	bne	1e354 <dta_begin_data+0x78>
   1ee58:	mov	r0, r4
   1ee5c:	mov	r1, r8
   1ee60:	bl	1fc80 <dta_emit_header_data_label>
   1ee64:	mov	r6, r0
   1ee68:	cmp	r0, #0
   1ee6c:	bne	1e354 <dta_begin_data+0x78>
   1ee70:	mov	r0, r4
   1ee74:	mov	r1, r8
   1ee78:	bl	1fdc0 <dta_emit_header_time_stamp>
   1ee7c:	mov	r6, r0
   1ee80:	cmp	r0, #0
   1ee84:	bne	1e354 <dta_begin_data+0x78>
   1ee88:	ldrb	r0, [r8, #192]	; 0xc0
   1ee8c:	tst	r0, #4
   1ee90:	beq	1e3f4 <dta_begin_data+0x118>
   1ee94:	ldr	r1, [pc, #220]	; 1ef78 <dta_begin_data+0xc9c>
   1ee98:	ldr	r0, [sp, #36]	; 0x24
   1ee9c:	add	r1, pc, r1
   1eea0:	bl	4b2c <readstat_write_string@plt>
   1eea4:	mov	r6, r0
   1eea8:	cmp	r0, #0
   1eeac:	bne	1e354 <dta_begin_data+0x78>
   1eeb0:	b	1e3f4 <dta_begin_data+0x118>
   1eeb4:	ldr	r1, [pc, #248]	; 1efb4 <dta_begin_data+0xcd8>
   1eeb8:	ldr	r0, [sp, #36]	; 0x24
   1eebc:	add	r1, pc, r1
   1eec0:	bl	4b2c <readstat_write_string@plt>
   1eec4:	mov	r6, r0
   1eec8:	cmp	r0, #0
   1eecc:	bne	1e354 <dta_begin_data+0x78>
   1eed0:	ldrb	r0, [r8, #192]	; 0xc0
   1eed4:	tst	r0, #4
   1eed8:	beq	1e6a8 <dta_begin_data+0x3cc>
   1eedc:	ldr	r1, [pc, #212]	; 1efb8 <dta_begin_data+0xcdc>
   1eee0:	ldr	r0, [sp, #36]	; 0x24
   1eee4:	add	r1, pc, r1
   1eee8:	bl	4b2c <readstat_write_string@plt>
   1eeec:	mov	r6, r0
   1eef0:	cmp	r0, #0
   1eef4:	bne	1e354 <dta_begin_data+0x78>
   1eef8:	b	1e6a8 <dta_begin_data+0x3cc>
   1eefc:	ldr	r1, [pc, #184]	; 1efbc <dta_begin_data+0xce0>
   1ef00:	ldr	r0, [sp, #36]	; 0x24
   1ef04:	add	r1, pc, r1
   1ef08:	bl	4b2c <readstat_write_string@plt>
   1ef0c:	mov	r6, r0
   1ef10:	cmp	r0, #0
   1ef14:	bne	1e354 <dta_begin_data+0x78>
   1ef18:	ldrb	r0, [r8, #192]	; 0xc0
   1ef1c:	tst	r0, #4
   1ef20:	beq	1e730 <dta_begin_data+0x454>
   1ef24:	ldr	r1, [pc, #148]	; 1efc0 <dta_begin_data+0xce4>
   1ef28:	ldr	r0, [sp, #36]	; 0x24
   1ef2c:	add	r1, pc, r1
   1ef30:	bl	4b2c <readstat_write_string@plt>
   1ef34:	mov	r6, r0
   1ef38:	cmp	r0, #0
   1ef3c:	bne	1e354 <dta_begin_data+0x78>
   1ef40:	b	1e730 <dta_begin_data+0x454>
   1ef44:	.word	0x0000791b
   1ef48:	.word	0x000078fb
   1ef4c:	.word	0x00007ba5
   1ef50:	.word	0x000078ba
   1ef54:	.word	0x000078b3
   1ef58:	.word	0x000078b3
   1ef5c:	.word	0x00007892
   1ef60:	.word	0x0000787f
   1ef64:	.word	0x000073ff
   1ef68:	.word	0x000073df
   1ef6c:	.word	0x000073b4
   1ef70:	.word	0x00007354
   1ef74:	.word	0x00007334
   1ef78:	.word	0x00007289
   1ef7c:	.word	0x000074e5
   1ef80:	.word	0x000074cf
   1ef84:	.word	0x000074b4
   1ef88:	.word	0x00007785
   1ef8c:	.word	0x0000776f
   1ef90:	.word	0x000074c2
   1ef94:	.word	0x000074a6
   1ef98:	.word	0x00007425
   1ef9c:	.word	0x00007409
   1efa0:	.word	0x0000631a
   1efa4:	.word	0x00007ea8
   1efa8:	.word	0x00007e3d
   1efac:	.word	0x00007e4d
   1efb0:	.word	0x00007e33
   1efb4:	.word	0x00007357
   1efb8:	.word	0x0000733a
   1efbc:	.word	0x0000732e
   1efc0:	.word	0x0000731b
   1efc4:	.word	0x00007ab1
   1efc8:	.word	0x00007b2a

0001efcc <dta_end_data>:
   1efcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1efd0:	add	fp, sp, #28
   1efd4:	sub	sp, sp, #44	; 0x2c
   1efd8:	mov	r4, r0
   1efdc:	ldr	r0, [r0, #308]	; 0x134
   1efe0:	cmp	r0, #0
   1efe4:	beq	1f190 <dta_end_data+0x1c4>
   1efe8:	ldr	r0, [r4, #300]	; 0x12c
   1efec:	str	r0, [sp, #8]
   1eff0:	ldrb	r0, [r0, #192]	; 0xc0
   1eff4:	tst	r0, #4
   1eff8:	bne	1f198 <dta_end_data+0x1cc>
   1effc:	ldr	r5, [sp, #8]
   1f000:	ldr	r0, [r5, #100]	; 0x64
   1f004:	cmp	r0, #2
   1f008:	bne	1f2e0 <dta_end_data+0x314>
   1f00c:	ldr	r0, [r4, #40]	; 0x28
   1f010:	cmp	r0, #1
   1f014:	blt	1f5f4 <dta_end_data+0x628>
   1f018:	mov	r9, #8
   1f01c:	mov	sl, #0
   1f020:	mov	r5, #0
   1f024:	mov	r0, r4
   1f028:	mov	r1, sl
   1f02c:	bl	4df0 <readstat_get_label_set@plt>
   1f030:	mov	r6, r0
   1f034:	ldr	r0, [r0, #264]	; 0x108
   1f038:	mov	r8, #0
   1f03c:	cmp	r0, #1
   1f040:	blt	1f088 <dta_end_data+0xbc>
   1f044:	mov	r8, #0
   1f048:	mov	r7, #0
   1f04c:	mov	r0, r6
   1f050:	mov	r1, r7
   1f054:	bl	4e8c <readstat_get_value_label@plt>
   1f058:	ldrb	r1, [r0, #12]
   1f05c:	cmp	r1, #0
   1f060:	bne	1f5fc <dta_end_data+0x630>
   1f064:	ldr	r0, [r0, #8]
   1f068:	cmp	r0, #1024	; 0x400
   1f06c:	bhi	1f604 <dta_end_data+0x638>
   1f070:	cmp	r0, r8
   1f074:	add	r7, r7, #1
   1f078:	movgt	r8, r0
   1f07c:	ldr	r0, [r6, #264]	; 0x108
   1f080:	cmp	r7, r0
   1f084:	blt	1f04c <dta_end_data+0x80>
   1f088:	add	r0, r9, r8, lsl #3
   1f08c:	sub	r1, fp, #32
   1f090:	mov	r2, #2
   1f094:	strh	r0, [fp, #-32]	; 0xffffffe0
   1f098:	mov	r0, r4
   1f09c:	bl	4e20 <readstat_write_bytes@plt>
   1f0a0:	cmp	r0, #0
   1f0a4:	bne	1f698 <dta_end_data+0x6cc>
   1f0a8:	ldr	r7, [sp, #8]
   1f0ac:	mov	r0, #0
   1f0b0:	add	r8, sp, #16
   1f0b4:	add	r1, r6, #4
   1f0b8:	str	r0, [sp, #20]
   1f0bc:	str	r0, [sp, #16]
   1f0c0:	str	r0, [sp, #26]
   1f0c4:	str	r0, [sp, #22]
   1f0c8:	mov	r0, r8
   1f0cc:	ldr	r2, [r7, #104]	; 0x68
   1f0d0:	bl	4c94 <strncpy@plt>
   1f0d4:	ldrd	r0, [r7, #104]	; 0x68
   1f0d8:	add	r2, r1, r0
   1f0dc:	mov	r0, r4
   1f0e0:	mov	r1, r8
   1f0e4:	bl	4e20 <readstat_write_bytes@plt>
   1f0e8:	cmp	r0, #0
   1f0ec:	bne	1f698 <dta_end_data+0x6cc>
   1f0f0:	ldrsh	r1, [fp, #-32]	; 0xffffffe0
   1f0f4:	mov	r0, r5
   1f0f8:	bl	49dc <realloc@plt>
   1f0fc:	ldrsh	r7, [fp, #-32]	; 0xffffffe0
   1f100:	mov	r1, #0
   1f104:	mov	r5, r0
   1f108:	mov	r2, r7
   1f10c:	bl	4c70 <memset@plt>
   1f110:	ldr	r0, [r6, #264]	; 0x108
   1f114:	cmp	r0, #1
   1f118:	blt	1f160 <dta_end_data+0x194>
   1f11c:	mov	r7, #0
   1f120:	mov	r0, r6
   1f124:	mov	r1, r7
   1f128:	bl	4e8c <readstat_get_value_label@plt>
   1f12c:	ldrd	r2, [r0, #24]
   1f130:	ldr	r1, [r0, #8]
   1f134:	cmp	r3, #8
   1f138:	add	r0, r5, r1, lsl #3
   1f13c:	mov	r1, r2
   1f140:	movcs	r3, r9
   1f144:	mov	r2, r3
   1f148:	bl	4910 <memcpy@plt>
   1f14c:	ldr	r0, [r6, #264]	; 0x108
   1f150:	add	r7, r7, #1
   1f154:	cmp	r7, r0
   1f158:	blt	1f120 <dta_end_data+0x154>
   1f15c:	ldrsh	r7, [fp, #-32]	; 0xffffffe0
   1f160:	mov	r0, r4
   1f164:	mov	r1, r5
   1f168:	mov	r2, r7
   1f16c:	bl	4e20 <readstat_write_bytes@plt>
   1f170:	cmp	r0, #0
   1f174:	bne	1f698 <dta_end_data+0x6cc>
   1f178:	ldr	r0, [r4, #40]	; 0x28
   1f17c:	add	sl, sl, #1
   1f180:	cmp	sl, r0
   1f184:	blt	1f024 <dta_end_data+0x58>
   1f188:	mov	r7, #0
   1f18c:	b	1f69c <dta_end_data+0x6d0>
   1f190:	mov	r7, #14
   1f194:	b	1f6dc <dta_end_data+0x710>
   1f198:	ldr	r1, [pc, #1376]	; 1f700 <dta_end_data+0x734>
   1f19c:	mov	r0, r4
   1f1a0:	add	r1, pc, r1
   1f1a4:	bl	4b2c <readstat_write_string@plt>
   1f1a8:	mov	r7, r0
   1f1ac:	cmp	r0, #0
   1f1b0:	bne	1f6dc <dta_end_data+0x710>
   1f1b4:	ldr	r0, [sp, #8]
   1f1b8:	ldrb	r0, [r0, #192]	; 0xc0
   1f1bc:	tst	r0, #4
   1f1c0:	beq	1effc <dta_end_data+0x30>
   1f1c4:	ldr	r1, [pc, #1336]	; 1f704 <dta_end_data+0x738>
   1f1c8:	mov	r0, r4
   1f1cc:	add	r1, pc, r1
   1f1d0:	bl	4b2c <readstat_write_string@plt>
   1f1d4:	mov	r7, r0
   1f1d8:	cmp	r0, #0
   1f1dc:	bne	1f6dc <dta_end_data+0x710>
   1f1e0:	ldr	r0, [r4, #64]	; 0x40
   1f1e4:	cmp	r0, #1
   1f1e8:	blt	1f2c0 <dta_end_data+0x2f4>
   1f1ec:	ldr	r8, [pc, #1300]	; 1f708 <dta_end_data+0x73c>
   1f1f0:	add	r9, sp, #16
   1f1f4:	mov	r5, #0
   1f1f8:	add	r6, r9, #4
   1f1fc:	add	r8, pc, r8
   1f200:	ldr	r0, [r4, #60]	; 0x3c
   1f204:	mov	r1, r8
   1f208:	ldr	sl, [r0, r5, lsl #2]
   1f20c:	mov	r0, r4
   1f210:	bl	4b2c <readstat_write_string@plt>
   1f214:	cmp	r0, #0
   1f218:	bne	1f6d8 <dta_end_data+0x70c>
   1f21c:	ldr	r0, [sp, #8]
   1f220:	ldr	r0, [r0, #116]	; 0x74
   1f224:	cmp	r0, #5
   1f228:	bcc	1f25c <dta_end_data+0x290>
   1f22c:	ldr	r0, [sl]
   1f230:	mov	r2, #17
   1f234:	str	r0, [sp, #16]
   1f238:	ldr	r0, [sl, #8]
   1f23c:	ldr	r1, [sl, #12]
   1f240:	stm	r6, {r0, r1}
   1f244:	mov	r0, #130	; 0x82
   1f248:	mov	r1, r9
   1f24c:	strb	r0, [sp, #28]
   1f250:	ldr	r0, [sl, #16]
   1f254:	str	r0, [sp, #29]
   1f258:	b	1f284 <dta_end_data+0x2b8>
   1f25c:	ldr	r0, [sl]
   1f260:	mov	r1, #130	; 0x82
   1f264:	mov	r2, #13
   1f268:	str	r0, [sp, #16]
   1f26c:	ldr	r0, [sl, #8]
   1f270:	strb	r1, [sp, #24]
   1f274:	mov	r1, r9
   1f278:	str	r0, [sp, #20]
   1f27c:	ldr	r0, [sl, #16]
   1f280:	str	r0, [sp, #25]
   1f284:	mov	r0, r4
   1f288:	bl	4e20 <readstat_write_bytes@plt>
   1f28c:	mov	r7, r0
   1f290:	cmp	r0, #0
   1f294:	bne	1f6dc <dta_end_data+0x710>
   1f298:	ldr	r2, [sl, #16]
   1f29c:	add	r1, sl, #20
   1f2a0:	mov	r0, r4
   1f2a4:	bl	4e20 <readstat_write_bytes@plt>
   1f2a8:	cmp	r0, #0
   1f2ac:	bne	1f6d8 <dta_end_data+0x70c>
   1f2b0:	ldr	r0, [r4, #64]	; 0x40
   1f2b4:	add	r5, r5, #1
   1f2b8:	cmp	r5, r0
   1f2bc:	blt	1f200 <dta_end_data+0x234>
   1f2c0:	ldr	r1, [pc, #1092]	; 1f70c <dta_end_data+0x740>
   1f2c4:	mov	r0, r4
   1f2c8:	add	r1, pc, r1
   1f2cc:	bl	4b2c <readstat_write_string@plt>
   1f2d0:	mov	r7, r0
   1f2d4:	cmp	r0, #0
   1f2d8:	bne	1f6dc <dta_end_data+0x710>
   1f2dc:	b	1effc <dta_end_data+0x30>
   1f2e0:	ldrd	r0, [r5, #104]	; 0x68
   1f2e4:	add	r1, r1, r0
   1f2e8:	mov	r0, #1
   1f2ec:	bl	4778 <calloc@plt>
   1f2f0:	mov	r9, r0
   1f2f4:	ldrb	r0, [r5, #192]	; 0xc0
   1f2f8:	tst	r0, #4
   1f2fc:	beq	1f31c <dta_end_data+0x350>
   1f300:	ldr	r1, [pc, #1032]	; 1f710 <dta_end_data+0x744>
   1f304:	mov	r0, r4
   1f308:	add	r1, pc, r1
   1f30c:	bl	4b2c <readstat_write_string@plt>
   1f310:	mov	r7, r0
   1f314:	cmp	r0, #0
   1f318:	bne	1f688 <dta_end_data+0x6bc>
   1f31c:	ldr	r0, [r4, #40]	; 0x28
   1f320:	cmp	r0, #1
   1f324:	blt	1f60c <dta_end_data+0x640>
   1f328:	mov	r0, #0
   1f32c:	mov	r1, #0
   1f330:	mov	sl, #0
   1f334:	mov	r6, #0
   1f338:	str	r9, [sp]
   1f33c:	str	r0, [sp, #12]
   1f340:	mov	r0, r4
   1f344:	str	r1, [sp, #4]
   1f348:	bl	4df0 <readstat_get_label_set@plt>
   1f34c:	mov	r8, r0
   1f350:	ldr	r0, [r0, #264]	; 0x108
   1f354:	mov	r1, #0
   1f358:	str	r1, [fp, #-32]	; 0xffffffe0
   1f35c:	mov	r1, #0
   1f360:	cmp	r0, #1
   1f364:	str	r0, [sp, #16]
   1f368:	blt	1f3a0 <dta_end_data+0x3d4>
   1f36c:	mov	r7, #0
   1f370:	mov	r0, r8
   1f374:	mov	r1, r7
   1f378:	bl	4e8c <readstat_get_value_label@plt>
   1f37c:	ldr	r0, [r0, #28]
   1f380:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f384:	add	r7, r7, #1
   1f388:	add	r0, r0, r1
   1f38c:	add	r1, r0, #1
   1f390:	ldr	r0, [sp, #16]
   1f394:	str	r1, [fp, #-32]	; 0xffffffe0
   1f398:	cmp	r7, r0
   1f39c:	blt	1f370 <dta_end_data+0x3a4>
   1f3a0:	ldrb	r2, [r5, #192]	; 0xc0
   1f3a4:	tst	r2, #4
   1f3a8:	beq	1f3cc <dta_end_data+0x400>
   1f3ac:	ldr	r1, [pc, #864]	; 1f714 <dta_end_data+0x748>
   1f3b0:	mov	r0, r4
   1f3b4:	add	r1, pc, r1
   1f3b8:	bl	4b2c <readstat_write_string@plt>
   1f3bc:	cmp	r0, #0
   1f3c0:	bne	1f64c <dta_end_data+0x680>
   1f3c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f3c8:	ldr	r0, [sp, #16]
   1f3cc:	add	r0, r1, r0, lsl #3
   1f3d0:	add	r1, sp, #36	; 0x24
   1f3d4:	mov	r2, #4
   1f3d8:	add	r0, r0, #8
   1f3dc:	str	r0, [sp, #36]	; 0x24
   1f3e0:	mov	r0, r4
   1f3e4:	bl	4e20 <readstat_write_bytes@plt>
   1f3e8:	cmp	r0, #0
   1f3ec:	bne	1f64c <dta_end_data+0x680>
   1f3f0:	ldr	r2, [r5, #104]	; 0x68
   1f3f4:	add	r1, r8, #4
   1f3f8:	mov	r0, r9
   1f3fc:	bl	4c94 <strncpy@plt>
   1f400:	ldrd	r0, [r5, #104]	; 0x68
   1f404:	add	r2, r1, r0
   1f408:	mov	r0, r4
   1f40c:	mov	r1, r9
   1f410:	bl	4e20 <readstat_write_bytes@plt>
   1f414:	cmp	r0, #0
   1f418:	bne	1f64c <dta_end_data+0x680>
   1f41c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f420:	cmp	r0, #0
   1f424:	beq	1f584 <dta_end_data+0x5b8>
   1f428:	ldr	r0, [sp, #16]
   1f42c:	lsl	r1, r0, #2
   1f430:	mov	r0, sl
   1f434:	bl	49dc <realloc@plt>
   1f438:	mov	sl, r0
   1f43c:	ldr	r0, [sp, #16]
   1f440:	lsl	r1, r0, #2
   1f444:	ldr	r0, [sp, #12]
   1f448:	bl	49dc <realloc@plt>
   1f44c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f450:	str	r0, [sp, #12]
   1f454:	mov	r0, r6
   1f458:	bl	49dc <realloc@plt>
   1f45c:	ldr	r1, [pc, #696]	; 1f71c <dta_end_data+0x750>
   1f460:	mov	r6, r0
   1f464:	mov	r0, r8
   1f468:	add	r1, pc, r1
   1f46c:	bl	47c0 <readstat_sort_label_set@plt>
   1f470:	ldr	r0, [sp, #16]
   1f474:	cmp	r0, #1
   1f478:	blt	1f500 <dta_end_data+0x534>
   1f47c:	mov	r9, #0
   1f480:	mov	r7, #0
   1f484:	mov	r0, r8
   1f488:	mov	r1, r7
   1f48c:	bl	4e8c <readstat_get_value_label@plt>
   1f490:	ldr	r2, [r0, #24]
   1f494:	ldr	r5, [r0, #28]
   1f498:	str	r9, [sl, r7, lsl #2]
   1f49c:	ldrb	r1, [r0, #12]
   1f4a0:	cmp	r1, #0
   1f4a4:	beq	1f4c4 <dta_end_data+0x4f8>
   1f4a8:	ldr	r0, [r4, #8]
   1f4ac:	cmp	r0, #113	; 0x71
   1f4b0:	blt	1f630 <dta_end_data+0x664>
   1f4b4:	movw	r0, #65413	; 0xff85
   1f4b8:	movt	r0, #32767	; 0x7fff
   1f4bc:	add	r0, r1, r0
   1f4c0:	b	1f4c8 <dta_end_data+0x4fc>
   1f4c4:	ldr	r0, [r0, #8]
   1f4c8:	ldr	r1, [sp, #12]
   1f4cc:	str	r0, [r1, r7, lsl #2]
   1f4d0:	mov	r1, r2
   1f4d4:	add	r0, r6, r9
   1f4d8:	mov	r2, r5
   1f4dc:	bl	4910 <memcpy@plt>
   1f4e0:	add	r0, r5, r9
   1f4e4:	mov	r1, #0
   1f4e8:	add	r7, r7, #1
   1f4ec:	strb	r1, [r6, r0]
   1f4f0:	add	r9, r0, #1
   1f4f4:	ldr	r0, [sp, #16]
   1f4f8:	cmp	r7, r0
   1f4fc:	blt	1f484 <dta_end_data+0x4b8>
   1f500:	mov	r0, r4
   1f504:	add	r1, sp, #16
   1f508:	mov	r2, #4
   1f50c:	bl	4e20 <readstat_write_bytes@plt>
   1f510:	cmp	r0, #0
   1f514:	bne	1f6e8 <dta_end_data+0x71c>
   1f518:	mov	r0, r4
   1f51c:	sub	r1, fp, #32
   1f520:	mov	r2, #4
   1f524:	bl	4e20 <readstat_write_bytes@plt>
   1f528:	cmp	r0, #0
   1f52c:	bne	1f6e8 <dta_end_data+0x71c>
   1f530:	ldr	r0, [sp, #16]
   1f534:	mov	r1, sl
   1f538:	mov	r5, sl
   1f53c:	lsl	r2, r0, #2
   1f540:	mov	r0, r4
   1f544:	bl	4e20 <readstat_write_bytes@plt>
   1f548:	cmp	r0, #0
   1f54c:	bne	1f6f0 <dta_end_data+0x724>
   1f550:	ldr	r0, [sp, #16]
   1f554:	ldr	r1, [sp, #12]
   1f558:	lsl	r2, r0, #2
   1f55c:	mov	r0, r4
   1f560:	bl	4e20 <readstat_write_bytes@plt>
   1f564:	ldr	r5, [sp, #8]
   1f568:	ldr	r9, [sp]
   1f56c:	cmp	r0, #0
   1f570:	bne	1f64c <dta_end_data+0x680>
   1f574:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f578:	mov	r0, r4
   1f57c:	mov	r1, r6
   1f580:	b	1f5ac <dta_end_data+0x5e0>
   1f584:	sub	r8, fp, #32
   1f588:	mov	r0, r4
   1f58c:	mov	r2, #4
   1f590:	mov	r1, r8
   1f594:	bl	4e20 <readstat_write_bytes@plt>
   1f598:	cmp	r0, #0
   1f59c:	bne	1f64c <dta_end_data+0x680>
   1f5a0:	mov	r0, r4
   1f5a4:	mov	r1, r8
   1f5a8:	mov	r2, #4
   1f5ac:	bl	4e20 <readstat_write_bytes@plt>
   1f5b0:	cmp	r0, #0
   1f5b4:	bne	1f64c <dta_end_data+0x680>
   1f5b8:	ldrb	r0, [r5, #192]	; 0xc0
   1f5bc:	tst	r0, #4
   1f5c0:	beq	1f5dc <dta_end_data+0x610>
   1f5c4:	ldr	r1, [pc, #332]	; 1f718 <dta_end_data+0x74c>
   1f5c8:	mov	r0, r4
   1f5cc:	add	r1, pc, r1
   1f5d0:	bl	4b2c <readstat_write_string@plt>
   1f5d4:	cmp	r0, #0
   1f5d8:	bne	1f64c <dta_end_data+0x680>
   1f5dc:	ldr	r1, [sp, #4]
   1f5e0:	ldr	r0, [r4, #40]	; 0x28
   1f5e4:	add	r1, r1, #1
   1f5e8:	cmp	r1, r0
   1f5ec:	blt	1f340 <dta_end_data+0x374>
   1f5f0:	b	1f61c <dta_end_data+0x650>
   1f5f4:	mov	r7, #0
   1f5f8:	b	1f6ac <dta_end_data+0x6e0>
   1f5fc:	mov	r7, #23
   1f600:	b	1f69c <dta_end_data+0x6d0>
   1f604:	mov	r7, #20
   1f608:	b	1f69c <dta_end_data+0x6d0>
   1f60c:	mov	r0, #0
   1f610:	mov	r6, #0
   1f614:	mov	sl, #0
   1f618:	str	r0, [sp, #12]
   1f61c:	ldrb	r0, [r5, #192]	; 0xc0
   1f620:	tst	r0, #4
   1f624:	bne	1f63c <dta_end_data+0x670>
   1f628:	mov	r7, #0
   1f62c:	b	1f650 <dta_end_data+0x684>
   1f630:	mov	r7, #23
   1f634:	ldr	r9, [sp]
   1f638:	b	1f650 <dta_end_data+0x684>
   1f63c:	ldr	r1, [pc, #220]	; 1f720 <dta_end_data+0x754>
   1f640:	mov	r0, r4
   1f644:	add	r1, pc, r1
   1f648:	bl	4b2c <readstat_write_string@plt>
   1f64c:	mov	r7, r0
   1f650:	ldr	r8, [sp, #12]
   1f654:	mov	r5, sl
   1f658:	cmp	r5, #0
   1f65c:	beq	1f668 <dta_end_data+0x69c>
   1f660:	mov	r0, r5
   1f664:	bl	48bc <free@plt>
   1f668:	cmp	r8, #0
   1f66c:	beq	1f678 <dta_end_data+0x6ac>
   1f670:	mov	r0, r8
   1f674:	bl	48bc <free@plt>
   1f678:	cmp	r6, #0
   1f67c:	beq	1f688 <dta_end_data+0x6bc>
   1f680:	mov	r0, r6
   1f684:	bl	48bc <free@plt>
   1f688:	cmp	r9, #0
   1f68c:	beq	1f6ac <dta_end_data+0x6e0>
   1f690:	mov	r0, r9
   1f694:	b	1f6a8 <dta_end_data+0x6dc>
   1f698:	mov	r7, r0
   1f69c:	cmp	r5, #0
   1f6a0:	beq	1f6ac <dta_end_data+0x6e0>
   1f6a4:	mov	r0, r5
   1f6a8:	bl	48bc <free@plt>
   1f6ac:	cmp	r7, #0
   1f6b0:	bne	1f6dc <dta_end_data+0x710>
   1f6b4:	ldr	r0, [sp, #8]
   1f6b8:	mov	r7, #0
   1f6bc:	ldrb	r0, [r0, #192]	; 0xc0
   1f6c0:	tst	r0, #4
   1f6c4:	beq	1f6dc <dta_end_data+0x710>
   1f6c8:	ldr	r1, [pc, #84]	; 1f724 <dta_end_data+0x758>
   1f6cc:	mov	r0, r4
   1f6d0:	add	r1, pc, r1
   1f6d4:	bl	4b2c <readstat_write_string@plt>
   1f6d8:	mov	r7, r0
   1f6dc:	mov	r0, r7
   1f6e0:	sub	sp, fp, #28
   1f6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f6e8:	mov	r7, r0
   1f6ec:	b	1f634 <dta_end_data+0x668>
   1f6f0:	ldr	r9, [sp]
   1f6f4:	ldr	r8, [sp, #12]
   1f6f8:	mov	r7, r0
   1f6fc:	b	1f658 <dta_end_data+0x68c>
   1f700:	.word	0x00007179
   1f704:	.word	0x00007136
   1f708:	.word	0x0000710e
   1f70c:	.word	0x00007194
   1f710:	.word	0x0000704e
   1f714:	.word	0x00006fb1
   1f718:	.word	0x00006d9f
   1f71c:	.word	0x00000d18
   1f720:	.word	0x00006e21
   1f724:	.word	0x00006d6c

0001f728 <dta_module_ctx_free>:
   1f728:	b	4874 <dta_ctx_free@plt>

0001f72c <dta_validate_name>:
   1f72c:	push	{r4, r5, r6, r7, fp, lr}
   1f730:	add	fp, sp, #16
   1f734:	sub	sp, sp, #8
   1f738:	mov	r7, r2
   1f73c:	mov	r6, r1
   1f740:	mov	r5, r0
   1f744:	bl	4bd4 <strlen@plt>
   1f748:	mov	r4, #28
   1f74c:	cmp	r0, r7
   1f750:	bhi	1f9f0 <dta_validate_name+0x2c4>
   1f754:	cmp	r0, #0
   1f758:	beq	1f9e4 <dta_validate_name+0x2b8>
   1f75c:	mov	r0, r5
   1f760:	ldrb	r1, [r0]
   1f764:	cmp	r1, #95	; 0x5f
   1f768:	beq	1f798 <dta_validate_name+0x6c>
   1f76c:	cmp	r1, #0
   1f770:	beq	1f7a0 <dta_validate_name+0x74>
   1f774:	sub	r2, r1, #48	; 0x30
   1f778:	uxtb	r2, r2
   1f77c:	cmp	r2, #10
   1f780:	bcc	1f798 <dta_validate_name+0x6c>
   1f784:	and	r1, r1, #223	; 0xdf
   1f788:	sub	r1, r1, #65	; 0x41
   1f78c:	uxtb	r1, r1
   1f790:	cmp	r1, #25
   1f794:	bhi	1f9ec <dta_validate_name+0x2c0>
   1f798:	add	r0, r0, #1
   1f79c:	b	1f760 <dta_validate_name+0x34>
   1f7a0:	ldrb	r0, [r5]
   1f7a4:	cmp	r6, #0
   1f7a8:	movwne	r6, #1
   1f7ac:	and	r1, r0, #223	; 0xdf
   1f7b0:	sub	r1, r1, #65	; 0x41
   1f7b4:	uxtb	r1, r1
   1f7b8:	cmp	r1, #26
   1f7bc:	bcc	1f7dc <dta_validate_name+0xb0>
   1f7c0:	cmp	r0, #95	; 0x5f
   1f7c4:	beq	1f7dc <dta_validate_name+0xb0>
   1f7c8:	clz	r0, r0
   1f7cc:	mov	r4, #25
   1f7d0:	lsr	r0, r0, #5
   1f7d4:	ands	r0, r6, r0
   1f7d8:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f7dc:	ldr	r1, [pc, #536]	; 1f9fc <dta_validate_name+0x2d0>
   1f7e0:	mov	r0, r5
   1f7e4:	add	r1, pc, r1
   1f7e8:	bl	4808 <strcmp@plt>
   1f7ec:	mov	r4, #27
   1f7f0:	cmp	r0, #0
   1f7f4:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f7f8:	ldr	r1, [pc, #512]	; 1fa00 <dta_validate_name+0x2d4>
   1f7fc:	mov	r0, r5
   1f800:	add	r1, pc, r1
   1f804:	bl	4808 <strcmp@plt>
   1f808:	cmp	r0, #0
   1f80c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f810:	ldr	r1, [pc, #492]	; 1fa04 <dta_validate_name+0x2d8>
   1f814:	mov	r0, r5
   1f818:	add	r1, pc, r1
   1f81c:	bl	4808 <strcmp@plt>
   1f820:	cmp	r0, #0
   1f824:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f828:	ldr	r1, [pc, #472]	; 1fa08 <dta_validate_name+0x2dc>
   1f82c:	mov	r0, r5
   1f830:	add	r1, pc, r1
   1f834:	bl	4808 <strcmp@plt>
   1f838:	cmp	r0, #0
   1f83c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f840:	ldr	r1, [pc, #452]	; 1fa0c <dta_validate_name+0x2e0>
   1f844:	mov	r0, r5
   1f848:	add	r1, pc, r1
   1f84c:	bl	4808 <strcmp@plt>
   1f850:	cmp	r0, #0
   1f854:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f858:	ldr	r1, [pc, #432]	; 1fa10 <dta_validate_name+0x2e4>
   1f85c:	mov	r0, r5
   1f860:	add	r1, pc, r1
   1f864:	bl	4808 <strcmp@plt>
   1f868:	cmp	r0, #0
   1f86c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f870:	ldr	r1, [pc, #412]	; 1fa14 <dta_validate_name+0x2e8>
   1f874:	mov	r0, r5
   1f878:	add	r1, pc, r1
   1f87c:	bl	4808 <strcmp@plt>
   1f880:	cmp	r0, #0
   1f884:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f888:	ldr	r1, [pc, #392]	; 1fa18 <dta_validate_name+0x2ec>
   1f88c:	mov	r0, r5
   1f890:	add	r1, pc, r1
   1f894:	bl	4808 <strcmp@plt>
   1f898:	cmp	r0, #0
   1f89c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f8a0:	ldr	r1, [pc, #372]	; 1fa1c <dta_validate_name+0x2f0>
   1f8a4:	mov	r0, r5
   1f8a8:	add	r1, pc, r1
   1f8ac:	bl	4808 <strcmp@plt>
   1f8b0:	cmp	r0, #0
   1f8b4:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f8b8:	ldr	r1, [pc, #352]	; 1fa20 <dta_validate_name+0x2f4>
   1f8bc:	mov	r0, r5
   1f8c0:	add	r1, pc, r1
   1f8c4:	bl	4808 <strcmp@plt>
   1f8c8:	cmp	r0, #0
   1f8cc:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f8d0:	ldr	r1, [pc, #332]	; 1fa24 <dta_validate_name+0x2f8>
   1f8d4:	mov	r0, r5
   1f8d8:	add	r1, pc, r1
   1f8dc:	bl	4808 <strcmp@plt>
   1f8e0:	cmp	r0, #0
   1f8e4:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f8e8:	ldr	r1, [pc, #312]	; 1fa28 <dta_validate_name+0x2fc>
   1f8ec:	mov	r0, r5
   1f8f0:	add	r1, pc, r1
   1f8f4:	bl	4808 <strcmp@plt>
   1f8f8:	cmp	r0, #0
   1f8fc:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f900:	ldr	r1, [pc, #292]	; 1fa2c <dta_validate_name+0x300>
   1f904:	mov	r0, r5
   1f908:	add	r1, pc, r1
   1f90c:	bl	4808 <strcmp@plt>
   1f910:	cmp	r0, #0
   1f914:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f918:	ldr	r1, [pc, #272]	; 1fa30 <dta_validate_name+0x304>
   1f91c:	mov	r0, r5
   1f920:	add	r1, pc, r1
   1f924:	bl	4808 <strcmp@plt>
   1f928:	cmp	r0, #0
   1f92c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f930:	ldr	r1, [pc, #252]	; 1fa34 <dta_validate_name+0x308>
   1f934:	mov	r0, r5
   1f938:	add	r1, pc, r1
   1f93c:	bl	4808 <strcmp@plt>
   1f940:	cmp	r0, #0
   1f944:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f948:	ldr	r1, [pc, #232]	; 1fa38 <dta_validate_name+0x30c>
   1f94c:	mov	r0, r5
   1f950:	add	r1, pc, r1
   1f954:	bl	4808 <strcmp@plt>
   1f958:	cmp	r0, #0
   1f95c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f960:	ldr	r1, [pc, #212]	; 1fa3c <dta_validate_name+0x310>
   1f964:	mov	r0, r5
   1f968:	add	r1, pc, r1
   1f96c:	bl	4808 <strcmp@plt>
   1f970:	cmp	r0, #0
   1f974:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f978:	ldr	r1, [pc, #192]	; 1fa40 <dta_validate_name+0x314>
   1f97c:	mov	r0, r5
   1f980:	add	r1, pc, r1
   1f984:	bl	4808 <strcmp@plt>
   1f988:	cmp	r0, #0
   1f98c:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f990:	ldr	r1, [pc, #172]	; 1fa44 <dta_validate_name+0x318>
   1f994:	mov	r0, r5
   1f998:	add	r1, pc, r1
   1f99c:	bl	4808 <strcmp@plt>
   1f9a0:	cmp	r0, #0
   1f9a4:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f9a8:	ldr	r1, [pc, #152]	; 1fa48 <dta_validate_name+0x31c>
   1f9ac:	mov	r0, r5
   1f9b0:	add	r1, pc, r1
   1f9b4:	bl	4808 <strcmp@plt>
   1f9b8:	cmp	r0, #0
   1f9bc:	beq	1f9f0 <dta_validate_name+0x2c4>
   1f9c0:	ldr	r1, [pc, #132]	; 1fa4c <dta_validate_name+0x320>
   1f9c4:	add	r2, sp, #4
   1f9c8:	mov	r0, r5
   1f9cc:	add	r1, pc, r1
   1f9d0:	bl	4c58 <__isoc99_sscanf@plt>
   1f9d4:	cmp	r0, #1
   1f9d8:	mov	r4, #0
   1f9dc:	movweq	r4, #27
   1f9e0:	b	1f9f0 <dta_validate_name+0x2c4>
   1f9e4:	mov	r4, #38	; 0x26
   1f9e8:	b	1f9f0 <dta_validate_name+0x2c4>
   1f9ec:	mov	r4, #26
   1f9f0:	mov	r0, r4
   1f9f4:	sub	sp, fp, #16
   1f9f8:	pop	{r4, r5, r6, r7, fp, pc}
   1f9fc:	.word	0x00006bc4
   1fa00:	.word	0x00006bad
   1fa04:	.word	0x00006b98
   1fa08:	.word	0x00006b85
   1fa0c:	.word	0x00006b73
   1fa10:	.word	0x00006b61
   1fa14:	.word	0x00006b50
   1fa18:	.word	0x00006b3e
   1fa1c:	.word	0x00006b29
   1fa20:	.word	0x00006b14
   1fa24:	.word	0x00006b00
   1fa28:	.word	0x00006aed
   1fa2c:	.word	0x00006ad8
   1fa30:	.word	0x00006ac3
   1fa34:	.word	0x00006aaf
   1fa38:	.word	0x00006a9d
   1fa3c:	.word	0x00006a89
   1fa40:	.word	0x00006a77
   1fa44:	.word	0x00006a64
   1fa48:	.word	0x00006a52
   1fa4c:	.word	0x00006a3b

0001fa50 <dta_emit_characteristics>:
   1fa50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa54:	add	fp, sp, #28
   1fa58:	sub	sp, sp, #12
   1fa5c:	mov	r4, r0
   1fa60:	ldr	r0, [r1, #96]	; 0x60
   1fa64:	add	r0, r0, #7
   1fa68:	bic	r0, r0, #7
   1fa6c:	sub	r6, sp, r0
   1fa70:	mov	sp, r6
   1fa74:	ldr	r0, [r1, #92]	; 0x5c
   1fa78:	cmp	r0, #0
   1fa7c:	beq	1fc48 <dta_emit_characteristics+0x1f8>
   1fa80:	ldrb	r0, [r1, #192]	; 0xc0
   1fa84:	mov	r5, r1
   1fa88:	tst	r0, #4
   1fa8c:	beq	1faa8 <dta_emit_characteristics+0x58>
   1fa90:	ldr	r1, [pc, #464]	; 1fc68 <dta_emit_characteristics+0x218>
   1fa94:	mov	r0, r4
   1fa98:	add	r1, pc, r1
   1fa9c:	bl	4b2c <readstat_write_string@plt>
   1faa0:	cmp	r0, #0
   1faa4:	bne	1fc60 <dta_emit_characteristics+0x210>
   1faa8:	ldr	r1, [r4, #52]	; 0x34
   1faac:	ldrb	r0, [r5, #192]	; 0xc0
   1fab0:	ubfx	r0, r0, #2, #1
   1fab4:	cmp	r1, #1
   1fab8:	blt	1fc2c <dta_emit_characteristics+0x1dc>
   1fabc:	ldr	r7, [pc, #424]	; 1fc6c <dta_emit_characteristics+0x21c>
   1fac0:	mov	sl, #0
   1fac4:	add	r7, pc, r7
   1fac8:	tst	r0, #1
   1facc:	beq	1fae4 <dta_emit_characteristics+0x94>
   1fad0:	ldr	r1, [pc, #408]	; 1fc70 <dta_emit_characteristics+0x220>
   1fad4:	mov	r0, r4
   1fad8:	add	r1, pc, r1
   1fadc:	bl	4b2c <readstat_write_string@plt>
   1fae0:	b	1fafc <dta_emit_characteristics+0xac>
   1fae4:	mov	r0, #1
   1fae8:	sub	r1, fp, #33	; 0x21
   1faec:	mov	r2, #1
   1faf0:	strb	r0, [fp, #-33]	; 0xffffffdf
   1faf4:	mov	r0, r4
   1faf8:	bl	4e20 <readstat_write_bytes@plt>
   1fafc:	cmp	r0, #0
   1fb00:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fb04:	ldr	r0, [r4, #48]	; 0x30
   1fb08:	ldr	r0, [r0, sl, lsl #2]
   1fb0c:	bl	4bd4 <strlen@plt>
   1fb10:	mov	r9, r0
   1fb14:	ldr	r0, [r5, #92]	; 0x5c
   1fb18:	cmp	r0, #4
   1fb1c:	beq	1fb44 <dta_emit_characteristics+0xf4>
   1fb20:	cmp	r0, #2
   1fb24:	bne	1fb6c <dta_emit_characteristics+0x11c>
   1fb28:	ldr	r0, [r5, #96]	; 0x60
   1fb2c:	sub	r1, fp, #36	; 0x24
   1fb30:	mov	r2, #2
   1fb34:	add	r0, r9, r0, lsl #1
   1fb38:	add	r0, r0, #1
   1fb3c:	strh	r0, [fp, #-36]	; 0xffffffdc
   1fb40:	b	1fb5c <dta_emit_characteristics+0x10c>
   1fb44:	ldr	r0, [r5, #96]	; 0x60
   1fb48:	sub	r1, fp, #40	; 0x28
   1fb4c:	mov	r2, #4
   1fb50:	add	r0, r9, r0, lsl #1
   1fb54:	add	r0, r0, #1
   1fb58:	str	r0, [fp, #-40]	; 0xffffffd8
   1fb5c:	mov	r0, r4
   1fb60:	bl	4e20 <readstat_write_bytes@plt>
   1fb64:	cmp	r0, #0
   1fb68:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fb6c:	ldr	r2, [r5, #96]	; 0x60
   1fb70:	mov	r0, r6
   1fb74:	mov	r1, r7
   1fb78:	bl	4c94 <strncpy@plt>
   1fb7c:	ldr	r2, [r5, #96]	; 0x60
   1fb80:	mov	r0, r4
   1fb84:	mov	r1, r6
   1fb88:	bl	4e20 <readstat_write_bytes@plt>
   1fb8c:	cmp	r0, #0
   1fb90:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fb94:	ldr	r1, [r5, #96]	; 0x60
   1fb98:	ldr	r2, [pc, #212]	; 1fc74 <dta_emit_characteristics+0x224>
   1fb9c:	add	r8, sl, #1
   1fba0:	mov	r0, r6
   1fba4:	mov	r3, r8
   1fba8:	add	r2, pc, r2
   1fbac:	bl	4c4c <snprintf@plt>
   1fbb0:	ldr	r2, [r5, #96]	; 0x60
   1fbb4:	mov	r0, r4
   1fbb8:	mov	r1, r6
   1fbbc:	bl	4e20 <readstat_write_bytes@plt>
   1fbc0:	cmp	r0, #0
   1fbc4:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fbc8:	ldr	r0, [r4, #48]	; 0x30
   1fbcc:	add	r2, r9, #1
   1fbd0:	ldr	r1, [r0, sl, lsl #2]
   1fbd4:	mov	r0, r4
   1fbd8:	bl	4e20 <readstat_write_bytes@plt>
   1fbdc:	cmp	r0, #0
   1fbe0:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fbe4:	ldrb	r1, [r5, #192]	; 0xc0
   1fbe8:	mov	r0, #0
   1fbec:	tst	r1, #4
   1fbf0:	beq	1fc14 <dta_emit_characteristics+0x1c4>
   1fbf4:	ldr	r1, [pc, #124]	; 1fc78 <dta_emit_characteristics+0x228>
   1fbf8:	mov	r0, r4
   1fbfc:	add	r1, pc, r1
   1fc00:	bl	4b2c <readstat_write_string@plt>
   1fc04:	cmp	r0, #0
   1fc08:	bne	1fc60 <dta_emit_characteristics+0x210>
   1fc0c:	ldrb	r0, [r5, #192]	; 0xc0
   1fc10:	and	r0, r0, #4
   1fc14:	ldr	r1, [r4, #52]	; 0x34
   1fc18:	cmp	r0, #0
   1fc1c:	mov	sl, r8
   1fc20:	movwne	r0, #1
   1fc24:	cmp	r8, r1
   1fc28:	blt	1fac8 <dta_emit_characteristics+0x78>
   1fc2c:	cmp	r0, #0
   1fc30:	beq	1fc50 <dta_emit_characteristics+0x200>
   1fc34:	ldr	r1, [pc, #64]	; 1fc7c <dta_emit_characteristics+0x22c>
   1fc38:	mov	r0, r4
   1fc3c:	add	r1, pc, r1
   1fc40:	bl	4b2c <readstat_write_string@plt>
   1fc44:	b	1fc60 <dta_emit_characteristics+0x210>
   1fc48:	mov	r0, #0
   1fc4c:	b	1fc60 <dta_emit_characteristics+0x210>
   1fc50:	ldr	r0, [r5, #92]	; 0x5c
   1fc54:	add	r1, r0, #1
   1fc58:	mov	r0, r4
   1fc5c:	bl	4a00 <readstat_write_zeros@plt>
   1fc60:	sub	sp, fp, #28
   1fc64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc68:	.word	0x0000680e
   1fc6c:	.word	0x000067fe
   1fc70:	.word	0x000067e5
   1fc74:	.word	0x0000671f
   1fc78:	.word	0x000066d2
   1fc7c:	.word	0x0000680d

0001fc80 <dta_emit_header_data_label>:
   1fc80:	push	{r4, r5, r6, r7, fp, lr}
   1fc84:	add	fp, sp, #16
   1fc88:	sub	sp, sp, #8
   1fc8c:	mov	r4, r0
   1fc90:	ldrb	r0, [r1, #192]	; 0xc0
   1fc94:	mov	r5, r1
   1fc98:	tst	r0, #4
   1fc9c:	beq	1fcbc <dta_emit_header_data_label+0x3c>
   1fca0:	ldr	r1, [pc, #272]	; 1fdb8 <dta_emit_header_data_label+0x138>
   1fca4:	mov	r0, r4
   1fca8:	add	r1, pc, r1
   1fcac:	bl	4b2c <readstat_write_string@plt>
   1fcb0:	mov	r6, r0
   1fcb4:	cmp	r0, #0
   1fcb8:	bne	1fdac <dta_emit_header_data_label+0x12c>
   1fcbc:	ldr	r0, [r5, #8]
   1fcc0:	cmp	r0, #0
   1fcc4:	beq	1fcf4 <dta_emit_header_data_label+0x74>
   1fcc8:	cmp	r0, #2
   1fccc:	beq	1fd34 <dta_emit_header_data_label+0xb4>
   1fcd0:	cmp	r0, #1
   1fcd4:	bne	1fd5c <dta_emit_header_data_label+0xdc>
   1fcd8:	add	r0, r4, #88	; 0x58
   1fcdc:	bl	4bd4 <strlen@plt>
   1fce0:	strb	r0, [sp, #7]
   1fce4:	add	r1, sp, #7
   1fce8:	mov	r0, r4
   1fcec:	mov	r2, #1
   1fcf0:	b	1fd4c <dta_emit_header_data_label+0xcc>
   1fcf4:	ldr	r6, [r5, #4]
   1fcf8:	mov	r0, #1
   1fcfc:	mov	r1, r6
   1fd00:	bl	4778 <calloc@plt>
   1fd04:	add	r1, r4, #88	; 0x58
   1fd08:	mov	r2, r6
   1fd0c:	mov	r7, r0
   1fd10:	bl	4c94 <strncpy@plt>
   1fd14:	ldr	r2, [r5, #4]
   1fd18:	mov	r0, r4
   1fd1c:	mov	r1, r7
   1fd20:	bl	4e20 <readstat_write_bytes@plt>
   1fd24:	mov	r6, r0
   1fd28:	cmp	r0, #0
   1fd2c:	bne	1fd9c <dta_emit_header_data_label+0x11c>
   1fd30:	b	1fd78 <dta_emit_header_data_label+0xf8>
   1fd34:	add	r0, r4, #88	; 0x58
   1fd38:	bl	4bd4 <strlen@plt>
   1fd3c:	strh	r0, [sp, #4]
   1fd40:	add	r1, sp, #4
   1fd44:	mov	r0, r4
   1fd48:	mov	r2, #2
   1fd4c:	bl	4e20 <readstat_write_bytes@plt>
   1fd50:	mov	r6, r0
   1fd54:	cmp	r0, #0
   1fd58:	bne	1fdac <dta_emit_header_data_label+0x12c>
   1fd5c:	add	r1, r4, #88	; 0x58
   1fd60:	mov	r0, r4
   1fd64:	bl	4b2c <readstat_write_string@plt>
   1fd68:	mov	r6, r0
   1fd6c:	cmp	r0, #0
   1fd70:	bne	1fdac <dta_emit_header_data_label+0x12c>
   1fd74:	mov	r7, #0
   1fd78:	ldrb	r0, [r5, #192]	; 0xc0
   1fd7c:	mov	r6, #0
   1fd80:	tst	r0, #4
   1fd84:	beq	1fd9c <dta_emit_header_data_label+0x11c>
   1fd88:	ldr	r1, [pc, #44]	; 1fdbc <dta_emit_header_data_label+0x13c>
   1fd8c:	mov	r0, r4
   1fd90:	add	r1, pc, r1
   1fd94:	bl	4b2c <readstat_write_string@plt>
   1fd98:	mov	r6, r0
   1fd9c:	cmp	r7, #0
   1fda0:	beq	1fdac <dta_emit_header_data_label+0x12c>
   1fda4:	mov	r0, r7
   1fda8:	bl	48bc <free@plt>
   1fdac:	mov	r0, r6
   1fdb0:	sub	sp, fp, #16
   1fdb4:	pop	{r4, r5, r6, r7, fp, pc}
   1fdb8:	.word	0x000064d9
   1fdbc:	.word	0x000063f9

0001fdc0 <dta_emit_header_time_stamp>:
   1fdc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fdc4:	add	fp, sp, #28
   1fdc8:	sub	sp, sp, #76	; 0x4c
   1fdcc:	mov	sl, r1
   1fdd0:	ldr	r1, [r1, #16]
   1fdd4:	cmp	r1, #0
   1fdd8:	beq	1fea8 <dta_emit_header_time_stamp+0xe8>
   1fddc:	str	r0, [sp, #16]
   1fde0:	ldr	r0, [r0, #20]
   1fde4:	str	r0, [fp, #-32]	; 0xffffffe0
   1fde8:	sub	r0, fp, #32
   1fdec:	bl	4b38 <localtime@plt>
   1fdf0:	ldr	r8, [sl, #16]
   1fdf4:	mov	r9, r0
   1fdf8:	mov	r0, #1
   1fdfc:	mov	r1, r8
   1fe00:	bl	4778 <calloc@plt>
   1fe04:	ldr	r1, [pc, #348]	; 1ff68 <dta_emit_header_time_stamp+0x1a8>
   1fe08:	mov	lr, r0
   1fe0c:	add	ip, sp, #24
   1fe10:	cmp	r9, #0
   1fe14:	mov	r2, ip
   1fe18:	add	r1, pc, r1
   1fe1c:	ldm	r1!, {r0, r3, r4, r5, r6, r7}
   1fe20:	stmia	r2!, {r0, r3, r4, r5, r6, r7}
   1fe24:	ldm	r1, {r0, r3, r4, r5, r6, r7}
   1fe28:	stm	r2, {r0, r3, r4, r5, r6, r7}
   1fe2c:	beq	1feb0 <dta_emit_header_time_stamp+0xf0>
   1fe30:	cmp	lr, #0
   1fe34:	beq	1feb8 <dta_emit_header_time_stamp+0xf8>
   1fe38:	ldr	r2, [r9, #16]
   1fe3c:	ldr	r7, [r9, #20]
   1fe40:	ldmib	r9, {r0, r1, r3}
   1fe44:	movw	r6, #1900	; 0x76c
   1fe48:	mov	r4, lr
   1fe4c:	add	r2, ip, r2, lsl #2
   1fe50:	add	r7, r7, r6
   1fe54:	stm	sp, {r2, r7}
   1fe58:	str	r1, [sp, #8]
   1fe5c:	str	r0, [sp, #12]
   1fe60:	mov	r0, lr
   1fe64:	mov	r1, r8
   1fe68:	ldr	r2, [pc, #252]	; 1ff6c <dta_emit_header_time_stamp+0x1ac>
   1fe6c:	add	r2, pc, r2
   1fe70:	bl	4c4c <snprintf@plt>
   1fe74:	tst	r0, #255	; 0xff
   1fe78:	strb	r0, [sp, #23]
   1fe7c:	beq	1fec0 <dta_emit_header_time_stamp+0x100>
   1fe80:	ldrb	r0, [sl, #192]	; 0xc0
   1fe84:	tst	r0, #4
   1fe88:	bne	1fecc <dta_emit_header_time_stamp+0x10c>
   1fe8c:	ldr	r2, [sl, #16]
   1fe90:	ldr	r0, [sp, #16]
   1fe94:	mov	r1, r4
   1fe98:	bl	4e20 <readstat_write_bytes@plt>
   1fe9c:	mov	lr, r4
   1fea0:	mov	r7, r0
   1fea4:	b	1ff40 <dta_emit_header_time_stamp+0x180>
   1fea8:	mov	r7, #0
   1feac:	b	1ff48 <dta_emit_header_time_stamp+0x188>
   1feb0:	mov	r7, #39	; 0x27
   1feb4:	b	1ff40 <dta_emit_header_time_stamp+0x180>
   1feb8:	mov	r7, #3
   1febc:	b	1ff40 <dta_emit_header_time_stamp+0x180>
   1fec0:	mov	r7, #13
   1fec4:	mov	lr, r4
   1fec8:	b	1ff40 <dta_emit_header_time_stamp+0x180>
   1fecc:	ldr	r1, [pc, #156]	; 1ff70 <dta_emit_header_time_stamp+0x1b0>
   1fed0:	ldr	r5, [sp, #16]
   1fed4:	add	r1, pc, r1
   1fed8:	mov	r0, r5
   1fedc:	bl	4b2c <readstat_write_string@plt>
   1fee0:	mov	r7, r0
   1fee4:	cmp	r0, #0
   1fee8:	mov	lr, r4
   1feec:	bne	1ff40 <dta_emit_header_time_stamp+0x180>
   1fef0:	add	r1, sp, #23
   1fef4:	mov	r0, r5
   1fef8:	mov	r2, #1
   1fefc:	bl	4e20 <readstat_write_bytes@plt>
   1ff00:	mov	lr, r4
   1ff04:	mov	r7, r0
   1ff08:	cmp	r0, #0
   1ff0c:	bne	1ff40 <dta_emit_header_time_stamp+0x180>
   1ff10:	ldrb	r2, [sp, #23]
   1ff14:	mov	r0, r5
   1ff18:	mov	r1, lr
   1ff1c:	bl	4e20 <readstat_write_bytes@plt>
   1ff20:	mov	lr, r4
   1ff24:	mov	r7, r0
   1ff28:	cmp	r0, #0
   1ff2c:	bne	1ff40 <dta_emit_header_time_stamp+0x180>
   1ff30:	ldrb	r0, [sl, #192]	; 0xc0
   1ff34:	mov	r7, #0
   1ff38:	tst	r0, #4
   1ff3c:	bne	1ff54 <dta_emit_header_time_stamp+0x194>
   1ff40:	mov	r0, lr
   1ff44:	bl	48bc <free@plt>
   1ff48:	mov	r0, r7
   1ff4c:	sub	sp, fp, #28
   1ff50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff54:	ldr	r1, [pc, #24]	; 1ff74 <dta_emit_header_time_stamp+0x1b4>
   1ff58:	mov	r0, r5
   1ff5c:	add	r1, pc, r1
   1ff60:	bl	4b2c <readstat_write_string@plt>
   1ff64:	b	1fe9c <dta_emit_header_time_stamp+0xdc>
   1ff68:	.word	0x00006678
   1ff6c:	.word	0x000065b8
   1ff70:	.word	0x000062be
   1ff74:	.word	0x00006242

0001ff78 <dta_write_chunk>:
   1ff78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ff7c:	add	fp, sp, #24
   1ff80:	mov	r4, r0
   1ff84:	ldrb	r0, [r1, #192]	; 0xc0
   1ff88:	ldr	r8, [fp, #12]
   1ff8c:	ldr	r5, [fp, #8]
   1ff90:	mov	r7, r3
   1ff94:	mov	r6, r1
   1ff98:	tst	r0, #4
   1ff9c:	beq	1ffb4 <dta_write_chunk+0x3c>
   1ffa0:	mov	r0, r4
   1ffa4:	mov	r1, r2
   1ffa8:	bl	4b2c <readstat_write_string@plt>
   1ffac:	cmp	r0, #0
   1ffb0:	bne	1ffdc <dta_write_chunk+0x64>
   1ffb4:	mov	r0, r4
   1ffb8:	mov	r1, r7
   1ffbc:	mov	r2, r5
   1ffc0:	bl	4e20 <readstat_write_bytes@plt>
   1ffc4:	cmp	r0, #0
   1ffc8:	bne	1ffdc <dta_write_chunk+0x64>
   1ffcc:	ldrb	r1, [r6, #192]	; 0xc0
   1ffd0:	mov	r0, #0
   1ffd4:	tst	r1, #4
   1ffd8:	bne	1ffe0 <dta_write_chunk+0x68>
   1ffdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ffe0:	mov	r0, r4
   1ffe4:	mov	r1, r8
   1ffe8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ffec:	b	4b2c <readstat_write_string@plt>

0001fff0 <dta_typecode_for_variable>:
   1fff0:	push	{fp, lr}
   1fff4:	mov	fp, sp
   1fff8:	mov	lr, r0
   1fffc:	cmp	r1, #117	; 0x75
   20000:	beq	20050 <dta_typecode_for_variable+0x60>
   20004:	cmp	r1, #111	; 0x6f
   20008:	bne	20094 <dta_typecode_for_variable+0xa4>
   2000c:	ldr	ip, [lr]
   20010:	mov	r0, #0
   20014:	cmp	ip, #6
   20018:	bhi	20178 <dta_typecode_for_variable+0x188>
   2001c:	add	r1, pc, #8
   20020:	mov	r0, #33	; 0x21
   20024:	ldr	r3, [r1, ip, lsl #2]
   20028:	add	pc, r1, r3
   2002c:	.word	0x0000001c
   20030:	.word	0x000000b4
   20034:	.word	0x000000bc
   20038:	.word	0x000000c4
   2003c:	.word	0x000000cc
   20040:	.word	0x000000d4
   20044:	.word	0x00000124
   20048:	ldr	r0, [lr, #1596]	; 0x63c
   2004c:	b	20178 <dta_typecode_for_variable+0x188>
   20050:	ldr	r1, [lr]
   20054:	mov	r0, #0
   20058:	mov	ip, #0
   2005c:	cmp	r1, #6
   20060:	bhi	20144 <dta_typecode_for_variable+0x154>
   20064:	add	r3, pc, #4
   20068:	ldr	r1, [r3, r1, lsl #2]
   2006c:	add	pc, r3, r1
   20070:	.word	0x0000001c
   20074:	.word	0x00000098
   20078:	.word	0x000000a4
   2007c:	.word	0x000000b0
   20080:	.word	0x000000bc
   20084:	.word	0x000000c8
   20088:	.word	0x000000d0
   2008c:	ldr	ip, [lr, #1596]	; 0x63c
   20090:	b	20144 <dta_typecode_for_variable+0x154>
   20094:	ldr	r1, [lr]
   20098:	mov	r0, #0
   2009c:	cmp	r1, #6
   200a0:	bhi	20178 <dta_typecode_for_variable+0x188>
   200a4:	add	r3, pc, #8
   200a8:	mov	r0, #33	; 0x21
   200ac:	ldr	r1, [r3, r1, lsl #2]
   200b0:	add	pc, r3, r1
   200b4:	.word	0x0000001c
   200b8:	.word	0x000000a0
   200bc:	.word	0x000000a8
   200c0:	.word	0x000000b0
   200c4:	.word	0x000000b8
   200c8:	.word	0x000000c0
   200cc:	.word	0x0000009c
   200d0:	movw	r0, #1596	; 0x63c
   200d4:	ldrh	r0, [lr, r0]
   200d8:	add	r0, r0, #127	; 0x7f
   200dc:	b	20178 <dta_typecode_for_variable+0x188>
   200e0:	mov	r0, #251	; 0xfb
   200e4:	b	20178 <dta_typecode_for_variable+0x188>
   200e8:	mov	r0, #252	; 0xfc
   200ec:	b	20178 <dta_typecode_for_variable+0x188>
   200f0:	mov	r0, #253	; 0xfd
   200f4:	b	20178 <dta_typecode_for_variable+0x188>
   200f8:	mov	r0, #254	; 0xfe
   200fc:	b	20178 <dta_typecode_for_variable+0x188>
   20100:	mov	r0, #255	; 0xff
   20104:	b	20178 <dta_typecode_for_variable+0x188>
   20108:	mvn	r1, #9
   2010c:	add	ip, r1, #4
   20110:	b	20144 <dta_typecode_for_variable+0x154>
   20114:	mvn	r1, #9
   20118:	add	ip, r1, #3
   2011c:	b	20144 <dta_typecode_for_variable+0x154>
   20120:	mvn	r1, #9
   20124:	add	ip, r1, #2
   20128:	b	20144 <dta_typecode_for_variable+0x154>
   2012c:	mvn	r1, #9
   20130:	orr	ip, r1, #1
   20134:	b	20144 <dta_typecode_for_variable+0x154>
   20138:	movw	ip, #65526	; 0xfff6
   2013c:	b	20144 <dta_typecode_for_variable+0x154>
   20140:	mov	ip, #32768	; 0x8000
   20144:	cmp	r2, #0
   20148:	strhne	ip, [r2]
   2014c:	popne	{fp, pc}
   20150:	pop	{fp, pc}
   20154:	mov	r0, #98	; 0x62
   20158:	b	20178 <dta_typecode_for_variable+0x188>
   2015c:	mov	r0, #105	; 0x69
   20160:	b	20178 <dta_typecode_for_variable+0x188>
   20164:	mov	r0, #108	; 0x6c
   20168:	b	20178 <dta_typecode_for_variable+0x188>
   2016c:	mov	r0, #102	; 0x66
   20170:	b	20178 <dta_typecode_for_variable+0x188>
   20174:	mov	r0, #100	; 0x64
   20178:	cmp	r2, #0
   2017c:	strhne	r0, [r2]
   20180:	mov	r0, #0
   20184:	pop	{fp, pc}

00020188 <dta_compare_value_labels>:
   20188:	mov	r2, r0
   2018c:	ldrb	r0, [r0, #12]
   20190:	ldrb	r3, [r1, #12]
   20194:	cmp	r0, #0
   20198:	beq	201ac <dta_compare_value_labels+0x24>
   2019c:	cmp	r3, #0
   201a0:	moveq	r0, #1
   201a4:	subne	r0, r0, r3
   201a8:	bx	lr
   201ac:	mvn	r0, #0
   201b0:	cmp	r3, #0
   201b4:	bxne	lr
   201b8:	ldr	r0, [r1, #8]
   201bc:	ldr	r1, [r2, #8]
   201c0:	sub	r0, r1, r0
   201c4:	bx	lr

000201c8 <submit_value_label>:
   201c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201cc:	add	fp, sp, #28
   201d0:	sub	sp, sp, #20
   201d4:	ldr	r4, [r0, #20]
   201d8:	cmp	r4, #0
   201dc:	beq	202a8 <submit_value_label+0xe0>
   201e0:	ldr	r7, [fp, #32]
   201e4:	ldr	sl, [fp, #28]
   201e8:	mov	r5, r0
   201ec:	add	r0, r2, #1
   201f0:	mov	r8, r1
   201f4:	cmp	r0, #4
   201f8:	bhi	20234 <submit_value_label+0x6c>
   201fc:	add	r1, pc, #4
   20200:	ldr	r0, [r1, r0, lsl #2]
   20204:	add	pc, r1, r0
   20208:	.word	0x00000014
   2020c:	.word	0x0000003c
   20210:	.word	0x0000004c
   20214:	.word	0x00000084
   20218:	.word	0x000000a0
   2021c:	movw	r3, #0
   20220:	mov	r0, #0
   20224:	mov	r2, #5
   20228:	mov	r1, #0
   2022c:	movt	r3, #32760	; 0x7ff8
   20230:	b	20264 <submit_value_label+0x9c>
   20234:	mov	r0, #0
   20238:	mov	r3, #0
   2023c:	mov	r1, #0
   20240:	b	20260 <submit_value_label+0x98>
   20244:	vmov	r1, r3, d0
   20248:	mov	r0, #0
   2024c:	mov	r2, #5
   20250:	b	20264 <submit_value_label+0x9c>
   20254:	ldr	r1, [fp, #24]
   20258:	mov	r0, #0
   2025c:	mov	r3, #0
   20260:	mov	r2, #0
   20264:	str	r2, [sp]
   20268:	stmib	sp, {r0, sl}
   2026c:	orr	r2, r0, r1
   20270:	mov	r0, r8
   20274:	str	r7, [sp, #12]
   20278:	blx	r4
   2027c:	cmp	r0, #0
   20280:	mov	r4, #4
   20284:	moveq	r4, #0
   20288:	b	202ac <submit_value_label+0xe4>
   2028c:	ldr	r0, [fp, #16]
   20290:	ldr	r7, [fp, #8]
   20294:	ldr	r1, [fp, #20]
   20298:	ldr	r6, [fp, #12]
   2029c:	subs	r0, r0, r7
   202a0:	sbcs	r0, r1, r6
   202a4:	bge	202b8 <submit_value_label+0xf0>
   202a8:	mov	r4, #0
   202ac:	mov	r0, r4
   202b0:	sub	sp, fp, #28
   202b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202b8:	mov	r0, r7
   202bc:	mov	r1, r6
   202c0:	bl	23564 <__aeabi_l2d>
   202c4:	mov	r2, r0
   202c8:	mov	r0, #5
   202cc:	mov	r9, #0
   202d0:	mov	r3, r1
   202d4:	stm	sp, {r0, r9, sl}
   202d8:	ldr	r0, [fp, #32]
   202dc:	str	r0, [sp, #12]
   202e0:	mov	r0, r8
   202e4:	blx	r4
   202e8:	mov	r4, #4
   202ec:	cmp	r0, #0
   202f0:	bne	202ac <submit_value_label+0xe4>
   202f4:	ldr	r0, [fp, #16]
   202f8:	subs	r0, r7, r0
   202fc:	ldr	r0, [fp, #20]
   20300:	sbcs	r0, r6, r0
   20304:	bge	202a8 <submit_value_label+0xe0>
   20308:	adds	r7, r7, #1
   2030c:	adc	r6, r6, #0
   20310:	mov	r0, r7
   20314:	mov	r1, r6
   20318:	bl	23564 <__aeabi_l2d>
   2031c:	mov	r2, r0
   20320:	mov	r0, #5
   20324:	ldr	ip, [r5, #20]
   20328:	bfc	r9, #0, #10
   2032c:	mov	r3, r1
   20330:	stm	sp, {r0, r9, sl}
   20334:	ldr	r0, [fp, #32]
   20338:	str	r0, [sp, #12]
   2033c:	mov	r0, r8
   20340:	blx	ip
   20344:	b	202ec <submit_value_label+0x124>

00020348 <submit_columns>:
   20348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2034c:	add	fp, sp, #28
   20350:	push	{r2}		; (str r2, [sp, #-4]!)
   20354:	mov	r5, r1
   20358:	ldr	r1, [r1, #268]	; 0x10c
   2035c:	mov	sl, r0
   20360:	cmp	r1, #1
   20364:	blt	20394 <submit_columns+0x4c>
   20368:	ldr	r2, [r5, #256]	; 0x100
   2036c:	ldr	r0, [r5, #276]	; 0x114
   20370:	mov	r3, #0
   20374:	ldr	r7, [r0]
   20378:	add	r3, r3, #1
   2037c:	add	r0, r0, #2208	; 0x8a0
   20380:	cmp	r2, r7
   20384:	addle	r2, r7, #1
   20388:	strle	r2, [r5, #256]	; 0x100
   2038c:	cmp	r3, r1
   20390:	blt	20374 <submit_columns+0x2c>
   20394:	ldr	r2, [sl, #8]
   20398:	mov	r0, #0
   2039c:	cmp	r2, #0
   203a0:	beq	20440 <submit_columns+0xf8>
   203a4:	cmp	r1, #1
   203a8:	blt	20440 <submit_columns+0xf8>
   203ac:	mov	r4, #0
   203b0:	mov	r7, #0
   203b4:	mov	r8, #0
   203b8:	ldr	r0, [r5, #276]	; 0x114
   203bc:	add	r9, r0, r4
   203c0:	mov	r1, r9
   203c4:	ldr	r0, [r1, #16]!
   203c8:	str	r8, [r1, #2148]	; 0x864
   203cc:	str	r7, [r1, #4]
   203d0:	cmp	r0, #0
   203d4:	bne	203e0 <submit_columns+0x98>
   203d8:	ldr	r0, [r9, #8]
   203dc:	str	r0, [r9, #1612]	; 0x64c
   203e0:	mov	r2, r9
   203e4:	ldr	r6, [sl, #8]
   203e8:	ldr	r3, [sp]
   203ec:	ldrb	r0, [r2, #2168]!	; 0x878
   203f0:	cmp	r0, #0
   203f4:	moveq	r2, r0
   203f8:	mov	r0, r7
   203fc:	blx	r6
   20400:	cmp	r0, #2
   20404:	beq	20418 <submit_columns+0xd0>
   20408:	cmp	r0, #1
   2040c:	beq	2043c <submit_columns+0xf4>
   20410:	add	r8, r8, #1
   20414:	b	20420 <submit_columns+0xd8>
   20418:	mov	r0, #1
   2041c:	str	r0, [r9, #12]
   20420:	ldr	r0, [r5, #268]	; 0x10c
   20424:	add	r7, r7, #1
   20428:	add	r4, r4, #2208	; 0x8a0
   2042c:	cmp	r7, r0
   20430:	blt	203b8 <submit_columns+0x70>
   20434:	mov	r0, #0
   20438:	b	20440 <submit_columns+0xf8>
   2043c:	mov	r0, #4
   20440:	sub	sp, fp, #28
   20444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020448 <readstat_copy>:
   20448:	push	{r4, r5, fp, lr}
   2044c:	add	fp, sp, #8
   20450:	cmp	r3, r1
   20454:	mov	r4, r3
   20458:	mov	r5, r0
   2045c:	subcs	r4, r1, #1
   20460:	mov	r1, r2
   20464:	mov	r2, r4
   20468:	bl	4910 <memcpy@plt>
   2046c:	mov	r0, #0
   20470:	strb	r0, [r5, r4]
   20474:	pop	{r4, r5, fp, pc}

00020478 <readstat_copy_lower>:
   20478:	push	{r4, r5, r6, sl, fp, lr}
   2047c:	add	fp, sp, #16
   20480:	cmp	r3, r1
   20484:	mov	r6, r3
   20488:	mov	r4, r1
   2048c:	mov	r5, r0
   20490:	subcs	r6, r1, #1
   20494:	mov	r1, r2
   20498:	mov	r2, r6
   2049c:	bl	4910 <memcpy@plt>
   204a0:	mov	r0, #0
   204a4:	cmp	r4, #0
   204a8:	strb	r0, [r5, r6]
   204ac:	beq	204d4 <readstat_copy_lower+0x5c>
   204b0:	ldrb	r6, [r5]
   204b4:	cmp	r6, #0
   204b8:	beq	204d4 <readstat_copy_lower+0x5c>
   204bc:	bl	4b44 <__ctype_tolower_loc@plt>
   204c0:	ldr	r0, [r0]
   204c4:	subs	r4, r4, #1
   204c8:	ldr	r0, [r0, r6, lsl #2]
   204cc:	strb	r0, [r5], #1
   204d0:	bne	204b0 <readstat_copy_lower+0x38>
   204d4:	pop	{r4, r5, r6, sl, fp, pc}

000204d8 <readstat_copy_quoted>:
   204d8:	push	{r4, sl, fp, lr}
   204dc:	add	fp, sp, #8
   204e0:	cmp	r3, r1
   204e4:	mov	ip, #0
   204e8:	mov	lr, #0
   204ec:	subcs	r3, r1, #1
   204f0:	cmp	r3, #0
   204f4:	beq	2053c <readstat_copy_quoted+0x64>
   204f8:	mov	r1, #0
   204fc:	mov	lr, #0
   20500:	ldrb	r4, [r2]
   20504:	cmp	r1, #0
   20508:	bne	2051c <readstat_copy_quoted+0x44>
   2050c:	mov	r1, #1
   20510:	cmp	r4, #92	; 0x5c
   20514:	bne	20524 <readstat_copy_quoted+0x4c>
   20518:	b	20530 <readstat_copy_quoted+0x58>
   2051c:	cmp	r4, #116	; 0x74
   20520:	movweq	r4, #9
   20524:	strb	r4, [r0, lr]
   20528:	add	lr, lr, #1
   2052c:	mov	r1, #0
   20530:	add	r2, r2, #1
   20534:	subs	r3, r3, #1
   20538:	bne	20500 <readstat_copy_quoted+0x28>
   2053c:	strb	ip, [r0, lr]
   20540:	pop	{r4, sl, fp, pc}
   20544:	andeq	r0, r0, r0

00020548 <readstat_parse_sas_commands>:
   20548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2054c:	add	fp, sp, #28
   20550:	sub	sp, sp, #4
   20554:	vpush	{d8}
   20558:	sub	sp, sp, #232	; 0xe8
   2055c:	sub	sp, sp, #2048	; 0x800
   20560:	mov	r7, r0
   20564:	ldr	r0, [r0, #32]
   20568:	mov	r8, r3
   2056c:	str	r2, [sp, #48]	; 0x30
   20570:	mov	r2, r1
   20574:	ldr	r3, [r0]
   20578:	ldr	r1, [r0, #20]
   2057c:	mov	r0, r2
   20580:	blx	r3
   20584:	cmn	r0, #1
   20588:	beq	20bf4 <readstat_parse_sas_commands+0x6ac>
   2058c:	ldr	r0, [r7, #32]
   20590:	mov	r1, #2
   20594:	mov	sl, #0
   20598:	ldr	r3, [r0, #8]
   2059c:	ldr	r2, [r0, #20]
   205a0:	mov	r0, #0
   205a4:	blx	r3
   205a8:	cmn	r0, #1
   205ac:	beq	20c08 <readstat_parse_sas_commands+0x6c0>
   205b0:	mov	r4, r0
   205b4:	ldr	r0, [r7, #32]
   205b8:	mov	r1, #0
   205bc:	ldr	r3, [r0, #8]
   205c0:	ldr	r2, [r0, #20]
   205c4:	mov	r0, #0
   205c8:	blx	r3
   205cc:	mov	r0, r4
   205d0:	bl	4ae4 <malloc@plt>
   205d4:	mov	sl, r0
   205d8:	ldr	r0, [r7, #32]
   205dc:	mov	r1, r4
   205e0:	ldr	r3, [r0, #12]
   205e4:	ldr	r2, [r0, #20]
   205e8:	mov	r0, sl
   205ec:	blx	r3
   205f0:	mov	r0, #1
   205f4:	mov	r1, #280	; 0x118
   205f8:	mov	r5, #1
   205fc:	bl	4778 <calloc@plt>
   20600:	cmp	r0, #0
   20604:	beq	20c10 <readstat_parse_sas_commands+0x6c8>
   20608:	add	r1, sl, r4
   2060c:	cmp	r4, #0
   20610:	str	r7, [sp, #36]	; 0x24
   20614:	str	r0, [sp, #72]	; 0x48
   20618:	str	r5, [r0, #256]	; 0x100
   2061c:	str	r8, [sp, #32]
   20620:	str	sl, [sp, #28]
   20624:	str	r1, [sp, #64]	; 0x40
   20628:	beq	20c1c <readstat_parse_sas_commands+0x6d4>
   2062c:	mov	r1, #0
   20630:	vldr	d8, [pc, #984]	; 20a10 <readstat_parse_sas_commands+0x4c8>
   20634:	mov	r0, #0
   20638:	mov	r9, #0
   2063c:	mov	r8, sl
   20640:	str	r1, [sp, #44]	; 0x2c
   20644:	mov	r1, #0
   20648:	str	r0, [sp, #80]	; 0x50
   2064c:	mov	r0, #5
   20650:	str	r1, [sp, #40]	; 0x28
   20654:	mov	r1, #0
   20658:	str	r0, [sp, #56]	; 0x38
   2065c:	movw	r0, #1094	; 0x446
   20660:	str	r1, [sp, #92]	; 0x5c
   20664:	mov	r1, #0
   20668:	str	r1, [sp, #84]	; 0x54
   2066c:	mov	r1, #0
   20670:	str	r1, [sp, #76]	; 0x4c
   20674:	mov	r1, #0
   20678:	str	r1, [sp, #60]	; 0x3c
   2067c:	mov	r1, #0
   20680:	str	r1, [sp, #52]	; 0x34
   20684:	mov	r1, #0
   20688:	str	r1, [sp, #68]	; 0x44
   2068c:	mov	r1, #0
   20690:	str	r1, [sp, #88]	; 0x58
   20694:	ldr	r1, [pc, #1752]	; 20d74 <readstat_parse_sas_commands+0x82c>
   20698:	add	r1, pc, r1
   2069c:	ldrb	r2, [r1, r0]
   206a0:	ldr	r1, [pc, #1744]	; 20d78 <readstat_parse_sas_commands+0x830>
   206a4:	ldr	r3, [pc, #1744]	; 20d7c <readstat_parse_sas_commands+0x834>
   206a8:	add	r1, pc, r1
   206ac:	add	r3, pc, r3
   206b0:	cmp	r2, #0
   206b4:	add	r1, r1, r0, lsl #1
   206b8:	ldrsh	r1, [r1]
   206bc:	add	r7, r3, r1
   206c0:	ldr	r1, [pc, #1720]	; 20d80 <readstat_parse_sas_commands+0x838>
   206c4:	add	r1, pc, r1
   206c8:	add	r1, r1, r0, lsl #1
   206cc:	ldrsh	r3, [r1]
   206d0:	beq	20728 <readstat_parse_sas_commands+0x1e0>
   206d4:	add	ip, r7, r2
   206d8:	mov	lr, r3
   206dc:	sub	r6, ip, #1
   206e0:	cmp	r6, r7
   206e4:	bcc	2071c <readstat_parse_sas_commands+0x1d4>
   206e8:	ldrb	r5, [sl]
   206ec:	mov	r3, r7
   206f0:	sub	r4, r6, r3
   206f4:	mov	r1, r3
   206f8:	ldrb	r4, [r1, r4, asr #1]!
   206fc:	cmp	r5, r4
   20700:	bcs	2070c <readstat_parse_sas_commands+0x1c4>
   20704:	sub	r6, r1, #1
   20708:	b	20714 <readstat_parse_sas_commands+0x1cc>
   2070c:	bls	207a4 <readstat_parse_sas_commands+0x25c>
   20710:	add	r3, r1, #1
   20714:	cmp	r6, r3
   20718:	bcs	206f0 <readstat_parse_sas_commands+0x1a8>
   2071c:	mov	r3, lr
   20720:	add	r3, r2, lr
   20724:	b	2072c <readstat_parse_sas_commands+0x1e4>
   20728:	mov	ip, r7
   2072c:	ldr	r6, [pc, #1616]	; 20d84 <readstat_parse_sas_commands+0x83c>
   20730:	ldr	r1, [pc, #1616]	; 20d88 <readstat_parse_sas_commands+0x840>
   20734:	add	r1, pc, r1
   20738:	add	r6, pc, r6
   2073c:	ldrb	r0, [r1, r0]
   20740:	cmp	r0, #0
   20744:	beq	207c8 <readstat_parse_sas_commands+0x280>
   20748:	add	r1, ip, r0, lsl #1
   2074c:	sub	r2, r1, #2
   20750:	cmp	r2, ip
   20754:	bcc	207c4 <readstat_parse_sas_commands+0x27c>
   20758:	mov	r5, r3
   2075c:	ldrb	r3, [sl]
   20760:	mov	r4, ip
   20764:	sub	r1, r2, r4
   20768:	mvn	r7, #1
   2076c:	and	r7, r7, r1, asr #1
   20770:	mov	r1, r4
   20774:	ldrb	r7, [r1, r7]!
   20778:	cmp	r3, r7
   2077c:	bcs	20788 <readstat_parse_sas_commands+0x240>
   20780:	sub	r2, r1, #2
   20784:	b	20798 <readstat_parse_sas_commands+0x250>
   20788:	ldrb	r7, [r1, #1]
   2078c:	cmp	r3, r7
   20790:	bls	207b8 <readstat_parse_sas_commands+0x270>
   20794:	add	r4, r1, #2
   20798:	cmp	r2, r4
   2079c:	bcs	20764 <readstat_parse_sas_commands+0x21c>
   207a0:	b	207c0 <readstat_parse_sas_commands+0x278>
   207a4:	ldr	r6, [pc, #1536]	; 20dac <readstat_parse_sas_commands+0x864>
   207a8:	sub	r0, lr, r7
   207ac:	add	r3, r0, r1
   207b0:	add	r6, pc, r6
   207b4:	b	207c8 <readstat_parse_sas_commands+0x280>
   207b8:	sub	r0, r1, ip
   207bc:	asr	r0, r0, #1
   207c0:	mov	r3, r5
   207c4:	add	r3, r0, r3
   207c8:	ldr	r0, [pc, #1468]	; 20d8c <readstat_parse_sas_commands+0x844>
   207cc:	mov	r7, r3
   207d0:	add	r0, pc, r0
   207d4:	ldrb	r0, [r0, r3]
   207d8:	cmp	r0, #0
   207dc:	beq	20bc0 <readstat_parse_sas_commands+0x678>
   207e0:	ldrb	r4, [r6, r0]
   207e4:	cmp	r4, #0
   207e8:	beq	20bc0 <readstat_parse_sas_commands+0x678>
   207ec:	add	r0, r6, r0
   207f0:	add	r6, r0, #1
   207f4:	ldrb	r0, [r6]
   207f8:	cmp	r0, #34	; 0x22
   207fc:	bhi	20bb4 <readstat_parse_sas_commands+0x66c>
   20800:	add	r1, pc, #4
   20804:	ldr	r0, [r1, r0, lsl #2]
   20808:	add	pc, r1, r0
   2080c:	.word	0x0000010c
   20810:	.word	0x0000011c
   20814:	.word	0x0000014c
   20818:	.word	0x00000178
   2081c:	.word	0x0000018c
   20820:	.word	0x0000019c
   20824:	.word	0x000001a4
   20828:	.word	0x000001b0
   2082c:	.word	0x000001c0
   20830:	.word	0x000001c8
   20834:	.word	0x000001d0
   20838:	.word	0x000001e8
   2083c:	.word	0x0000020c
   20840:	.word	0x00000268
   20844:	.word	0x000000ac
   20848:	.word	0x00000298
   2084c:	.word	0x000000bc
   20850:	.word	0x000002bc
   20854:	.word	0x0000008c
   20858:	.word	0x00000094
   2085c:	.word	0x0000008c
   20860:	.word	0x00000094
   20864:	.word	0x00000318
   20868:	.word	0x0000008c
   2086c:	.word	0x00000094
   20870:	.word	0x00000324
   20874:	.word	0x00000338
   20878:	.word	0x000000e0
   2087c:	.word	0x00000354
   20880:	.word	0x000000a4
   20884:	.word	0x000000a4
   20888:	.word	0x0000035c
   2088c:	.word	0x00000368
   20890:	.word	0x000000f4
   20894:	.word	0x00000100
   20898:	str	sl, [sp, #88]	; 0x58
   2089c:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   208a0:	ldr	r0, [sp, #88]	; 0x58
   208a4:	sub	r0, sl, r0
   208a8:	str	r0, [sp, #80]	; 0x50
   208ac:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   208b0:	mov	r0, #1
   208b4:	b	20b6c <readstat_parse_sas_commands+0x624>
   208b8:	ldr	r0, [sp, #72]	; 0x48
   208bc:	sub	r1, fp, #76	; 0x4c
   208c0:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   208c4:	b	20a98 <readstat_parse_sas_commands+0x550>
   208c8:	ldr	r0, [sp, #72]	; 0x48
   208cc:	sub	r1, fp, #76	; 0x4c
   208d0:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   208d4:	movw	r1, #2168	; 0x878
   208d8:	sub	r2, fp, #140	; 0x8c
   208dc:	mov	r3, #32
   208e0:	add	r0, r0, r1
   208e4:	mov	r1, #32
   208e8:	b	209ec <readstat_parse_sas_commands+0x4a4>
   208ec:	ldr	r0, [sp, #92]	; 0x5c
   208f0:	str	r0, [sp, #44]	; 0x2c
   208f4:	ldr	r0, [sp, #84]	; 0x54
   208f8:	str	r0, [sp, #40]	; 0x28
   208fc:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20900:	ldr	r0, [sp, #92]	; 0x5c
   20904:	sub	r0, r0, #1
   20908:	b	20910 <readstat_parse_sas_commands+0x3c8>
   2090c:	mov	r0, #0
   20910:	str	r0, [sp, #60]	; 0x3c
   20914:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20918:	mov	r0, #0
   2091c:	str	r0, [sp, #92]	; 0x5c
   20920:	mov	r0, #0
   20924:	b	20bb0 <readstat_parse_sas_commands+0x668>
   20928:	ldr	r1, [sp, #92]	; 0x5c
   2092c:	ldr	r2, [sp, #84]	; 0x54
   20930:	mov	r0, #10
   20934:	umull	r0, r1, r1, r0
   20938:	add	r2, r2, r2, lsl #2
   2093c:	add	r1, r1, r2, lsl #1
   20940:	ldrb	r2, [sl]
   20944:	sub	r2, r2, #48	; 0x30
   20948:	adds	r0, r0, r2
   2094c:	str	r0, [sp, #92]	; 0x5c
   20950:	adc	r0, r1, r2, asr #31
   20954:	b	20bb0 <readstat_parse_sas_commands+0x668>
   20958:	ldrb	r1, [sl]
   2095c:	sub	r0, r1, #48	; 0x30
   20960:	uxtb	r2, r0
   20964:	cmp	r2, #9
   20968:	bls	20b94 <readstat_parse_sas_commands+0x64c>
   2096c:	sub	r0, r1, #65	; 0x41
   20970:	uxtb	r0, r0
   20974:	cmp	r0, #5
   20978:	bhi	20b80 <readstat_parse_sas_commands+0x638>
   2097c:	sub	r0, r1, #55	; 0x37
   20980:	b	20b94 <readstat_parse_sas_commands+0x64c>
   20984:	ldr	r0, [sp, #92]	; 0x5c
   20988:	sub	r0, r0, #1
   2098c:	str	r0, [sp, #52]	; 0x34
   20990:	mov	r0, #1
   20994:	b	20b78 <readstat_parse_sas_commands+0x630>
   20998:	ldr	r0, [sp, #92]	; 0x5c
   2099c:	ldr	r1, [sp, #52]	; 0x34
   209a0:	sub	r0, r0, r1
   209a4:	b	20b78 <readstat_parse_sas_commands+0x630>
   209a8:	mov	r0, #0
   209ac:	b	209b4 <readstat_parse_sas_commands+0x46c>
   209b0:	mov	r0, #5
   209b4:	str	r0, [sp, #56]	; 0x38
   209b8:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   209bc:	add	lr, sp, #1024	; 0x400
   209c0:	mov	r1, #1024	; 0x400
   209c4:	add	r0, lr, #100	; 0x64
   209c8:	b	209e4 <readstat_parse_sas_commands+0x49c>
   209cc:	sub	r0, fp, #140	; 0x8c
   209d0:	b	209e0 <readstat_parse_sas_commands+0x498>
   209d4:	sub	r0, fp, #172	; 0xac
   209d8:	b	209e0 <readstat_parse_sas_commands+0x498>
   209dc:	sub	r0, fp, #108	; 0x6c
   209e0:	mov	r1, #32
   209e4:	ldr	r2, [sp, #88]	; 0x58
   209e8:	ldr	r3, [sp, #80]	; 0x50
   209ec:	bl	4868 <readstat_copy@plt>
   209f0:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   209f4:	ldr	r2, [sp, #88]	; 0x58
   209f8:	ldr	r3, [sp, #80]	; 0x50
   209fc:	sub	r0, fp, #76	; 0x4c
   20a00:	mov	r1, #32
   20a04:	bl	4da8 <readstat_copy_lower@plt>
   20a08:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20a0c:	nop	{0}
   20a10:	.word	0x00000000
   20a14:	.word	0x7ff80000
   20a18:	ldr	r1, [pc, #880]	; 20d90 <readstat_parse_sas_commands+0x848>
   20a1c:	sub	r0, fp, #108	; 0x6c
   20a20:	add	r1, pc, r1
   20a24:	bl	4a0c <strcasecmp@plt>
   20a28:	cmp	r0, #0
   20a2c:	bne	20a3c <readstat_parse_sas_commands+0x4f4>
   20a30:	ldr	r0, [sp, #72]	; 0x48
   20a34:	ldr	r1, [sp, #92]	; 0x5c
   20a38:	str	r1, [r0, #264]	; 0x108
   20a3c:	ldr	r1, [pc, #848]	; 20d94 <readstat_parse_sas_commands+0x84c>
   20a40:	sub	r0, fp, #108	; 0x6c
   20a44:	add	r1, pc, r1
   20a48:	bl	4a0c <strcasecmp@plt>
   20a4c:	cmp	r0, #0
   20a50:	bne	20bb4 <readstat_parse_sas_commands+0x66c>
   20a54:	ldr	r1, [sp, #92]	; 0x5c
   20a58:	ldr	r0, [sp, #84]	; 0x54
   20a5c:	orrs	r0, r1, r0
   20a60:	ldrb	r0, [sp, #1124]	; 0x464
   20a64:	movne	r0, r1
   20a68:	ldr	r1, [sp, #72]	; 0x48
   20a6c:	strb	r0, [r1, #272]	; 0x110
   20a70:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20a74:	ldr	r0, [sp, #72]	; 0x48
   20a78:	sub	r1, fp, #76	; 0x4c
   20a7c:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   20a80:	ldr	r1, [sp, #56]	; 0x38
   20a84:	str	r1, [r0, #16]
   20a88:	ldr	r1, [sp, #60]	; 0x3c
   20a8c:	str	r1, [r0]
   20a90:	ldr	r1, [sp, #52]	; 0x34
   20a94:	str	r1, [r0, #4]
   20a98:	ldr	r1, [sp, #68]	; 0x44
   20a9c:	str	r1, [r0, #8]
   20aa0:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20aa4:	ldr	r0, [sp, #72]	; 0x48
   20aa8:	sub	r1, fp, #76	; 0x4c
   20aac:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   20ab0:	add	lr, sp, #1024	; 0x400
   20ab4:	add	r0, r0, #580	; 0x244
   20ab8:	mov	r1, #1024	; 0x400
   20abc:	mov	r3, #1024	; 0x400
   20ac0:	add	r2, lr, #100	; 0x64
   20ac4:	b	209ec <readstat_parse_sas_commands+0x4a4>
   20ac8:	ldr	r2, [sp, #44]	; 0x2c
   20acc:	add	lr, sp, #1024	; 0x400
   20ad0:	vorr	d0, d8, d8
   20ad4:	sub	r1, fp, #172	; 0xac
   20ad8:	add	r0, lr, #100	; 0x64
   20adc:	str	r1, [sp, #16]
   20ae0:	sub	r1, fp, #140	; 0x8c
   20ae4:	str	r0, [sp, #20]
   20ae8:	ldr	r0, [sp, #48]	; 0x30
   20aec:	str	r2, [sp]
   20af0:	ldr	r2, [sp, #40]	; 0x28
   20af4:	str	r0, [sp, #24]
   20af8:	ldr	r0, [sp, #36]	; 0x24
   20afc:	str	r2, [sp, #4]
   20b00:	ldr	r2, [sp, #92]	; 0x5c
   20b04:	str	r2, [sp, #8]
   20b08:	ldr	r2, [sp, #84]	; 0x54
   20b0c:	str	r2, [sp, #12]
   20b10:	ldr	r2, [sp, #76]	; 0x4c
   20b14:	bl	4a30 <submit_value_label@plt>
   20b18:	cmp	r0, #0
   20b1c:	beq	20bb4 <readstat_parse_sas_commands+0x66c>
   20b20:	b	20d18 <readstat_parse_sas_commands+0x7d0>
   20b24:	add	r9, r9, #1
   20b28:	mov	r8, sl
   20b2c:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20b30:	ldr	r0, [sp, #92]	; 0x5c
   20b34:	ldr	r1, [sp, #84]	; 0x54
   20b38:	rsbs	r0, r0, #0
   20b3c:	rsc	r1, r1, #0
   20b40:	b	20b4c <readstat_parse_sas_commands+0x604>
   20b44:	ldr	r0, [sp, #92]	; 0x5c
   20b48:	ldr	r1, [sp, #84]	; 0x54
   20b4c:	bl	23550 <__aeabi_ul2d>
   20b50:	mov	r2, #0
   20b54:	vmov	d8, r0, r1
   20b58:	str	r2, [sp, #76]	; 0x4c
   20b5c:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20b60:	mov	r0, #2
   20b64:	b	20b6c <readstat_parse_sas_commands+0x624>
   20b68:	mov	r0, #3
   20b6c:	str	r0, [sp, #76]	; 0x4c
   20b70:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20b74:	ldr	r0, [sp, #92]	; 0x5c
   20b78:	str	r0, [sp, #68]	; 0x44
   20b7c:	b	20bb4 <readstat_parse_sas_commands+0x66c>
   20b80:	sub	r0, r1, #97	; 0x61
   20b84:	uxtb	r2, r0
   20b88:	mov	r0, #0
   20b8c:	cmp	r2, #6
   20b90:	subcc	r0, r1, #87	; 0x57
   20b94:	ldr	r1, [sp, #84]	; 0x54
   20b98:	ldr	r2, [sp, #92]	; 0x5c
   20b9c:	lsl	r1, r1, #4
   20ba0:	orr	r1, r1, r2, lsr #28
   20ba4:	adds	r2, r0, r2, lsl #4
   20ba8:	adc	r0, r1, r0, asr #31
   20bac:	str	r2, [sp, #92]	; 0x5c
   20bb0:	str	r0, [sp, #84]	; 0x54
   20bb4:	subs	r4, r4, #1
   20bb8:	add	r6, r6, #1
   20bbc:	bne	207f4 <readstat_parse_sas_commands+0x2ac>
   20bc0:	ldr	r0, [pc, #464]	; 20d98 <readstat_parse_sas_commands+0x850>
   20bc4:	add	r0, pc, r0
   20bc8:	add	r0, r0, r7, lsl #1
   20bcc:	ldrsh	r0, [r0]
   20bd0:	uxth	r1, r0
   20bd4:	cmp	r1, #0
   20bd8:	beq	20c9c <readstat_parse_sas_commands+0x754>
   20bdc:	ldr	r7, [sp, #64]	; 0x40
   20be0:	add	sl, sl, #1
   20be4:	cmp	sl, r7
   20be8:	bne	20694 <readstat_parse_sas_commands+0x14c>
   20bec:	mov	sl, r7
   20bf0:	b	20c2c <readstat_parse_sas_commands+0x6e4>
   20bf4:	cmp	r8, #0
   20bf8:	mov	r4, #0
   20bfc:	movne	r0, #1
   20c00:	strne	r0, [r8]
   20c04:	b	20d60 <readstat_parse_sas_commands+0x818>
   20c08:	mov	r5, #15
   20c0c:	b	20c14 <readstat_parse_sas_commands+0x6cc>
   20c10:	mov	r5, #3
   20c14:	mov	r4, #0
   20c18:	b	20d2c <readstat_parse_sas_commands+0x7e4>
   20c1c:	ldr	r7, [sp, #64]	; 0x40
   20c20:	movw	r0, #1094	; 0x446
   20c24:	mov	r9, #0
   20c28:	mov	r8, sl
   20c2c:	ldr	r3, [pc, #360]	; 20d9c <readstat_parse_sas_commands+0x854>
   20c30:	ldr	r1, [pc, #360]	; 20da0 <readstat_parse_sas_commands+0x858>
   20c34:	add	r1, pc, r1
   20c38:	add	r3, pc, r3
   20c3c:	ldrb	r2, [r1, r0]
   20c40:	ldrb	r1, [r3, r2]
   20c44:	cmp	r1, #0
   20c48:	beq	20c6c <readstat_parse_sas_commands+0x724>
   20c4c:	add	r2, r2, r3
   20c50:	add	r2, r2, #1
   20c54:	ldrb	r3, [r2], #1
   20c58:	cmp	r3, #22
   20c5c:	moveq	r8, r7
   20c60:	addeq	r9, r9, #1
   20c64:	subs	r1, r1, #1
   20c68:	bne	20c54 <readstat_parse_sas_commands+0x70c>
   20c6c:	movw	r1, #1093	; 0x445
   20c70:	cmp	r0, r1
   20c74:	ble	20ca0 <readstat_parse_sas_commands+0x758>
   20c78:	ldr	r7, [sp, #36]	; 0x24
   20c7c:	ldr	r4, [sp, #72]	; 0x48
   20c80:	ldr	r2, [sp, #48]	; 0x30
   20c84:	mov	r0, r7
   20c88:	mov	r1, r4
   20c8c:	bl	4928 <submit_columns@plt>
   20c90:	ldr	sl, [sp, #28]
   20c94:	ldr	r8, [sp, #32]
   20c98:	b	20d28 <readstat_parse_sas_commands+0x7e0>
   20c9c:	ldr	r7, [sp, #64]	; 0x40
   20ca0:	cmp	sl, r7
   20ca4:	beq	20cd4 <readstat_parse_sas_commands+0x78c>
   20ca8:	ldrb	r0, [sl], -r8
   20cac:	add	r3, r9, #1
   20cb0:	add	r1, sl, #1
   20cb4:	str	r1, [sp]
   20cb8:	mov	r1, #1024	; 0x400
   20cbc:	str	r0, [sp, #4]
   20cc0:	add	r0, sp, #96	; 0x60
   20cc4:	ldr	r2, [pc, #220]	; 20da8 <readstat_parse_sas_commands+0x860>
   20cc8:	add	r2, pc, r2
   20ccc:	bl	4c4c <snprintf@plt>
   20cd0:	b	20ce8 <readstat_parse_sas_commands+0x7a0>
   20cd4:	ldr	r1, [pc, #200]	; 20da4 <readstat_parse_sas_commands+0x85c>
   20cd8:	add	r0, sp, #96	; 0x60
   20cdc:	mov	r2, #66	; 0x42
   20ce0:	add	r1, pc, r1
   20ce4:	bl	4910 <memcpy@plt>
   20ce8:	ldr	r7, [sp, #36]	; 0x24
   20cec:	ldr	r8, [sp, #32]
   20cf0:	ldr	sl, [sp, #28]
   20cf4:	ldr	r4, [sp, #72]	; 0x48
   20cf8:	ldr	r2, [r7, #24]
   20cfc:	cmp	r2, #0
   20d00:	beq	20d10 <readstat_parse_sas_commands+0x7c8>
   20d04:	ldr	r1, [sp, #48]	; 0x30
   20d08:	add	r0, sp, #96	; 0x60
   20d0c:	blx	r2
   20d10:	mov	r5, #5
   20d14:	b	20d2c <readstat_parse_sas_commands+0x7e4>
   20d18:	ldr	r8, [sp, #32]
   20d1c:	ldr	r7, [sp, #36]	; 0x24
   20d20:	ldr	sl, [sp, #28]
   20d24:	ldr	r4, [sp, #72]	; 0x48
   20d28:	mov	r5, r0
   20d2c:	ldr	r0, [r7, #32]
   20d30:	ldr	r1, [r0, #4]
   20d34:	ldr	r0, [r0, #20]
   20d38:	blx	r1
   20d3c:	mov	r0, sl
   20d40:	bl	48bc <free@plt>
   20d44:	cmp	r5, #0
   20d48:	beq	20d60 <readstat_parse_sas_commands+0x818>
   20d4c:	cmp	r8, #0
   20d50:	mov	r0, r4
   20d54:	strne	r5, [r8]
   20d58:	bl	4994 <readstat_schema_free@plt>
   20d5c:	mov	r4, #0
   20d60:	mov	r0, r4
   20d64:	sub	sp, fp, #40	; 0x28
   20d68:	vpop	{d8}
   20d6c:	add	sp, sp, #4
   20d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d74:	.word	0x000084da
   20d78:	.word	0x000073a2
   20d7c:	.word	0x00005e28
   20d80:	.word	0x00007c1a
   20d84:	.word	0x0000cbdd
   20d88:	.word	0x0000d0f0
   20d8c:	.word	0x0000b4d2
   20d90:	.word	0x0000d24e
   20d94:	.word	0x0000d233
   20d98:	.word	0x000083f8
   20d9c:	.word	0x0000c6dd
   20da0:	.word	0x0000c7a6
   20da4:	.word	0x0000cfe0
   20da8:	.word	0x0000cfb3
   20dac:	.word	0x0000cb65

00020db0 <readstat_parse_spss_commands>:
   20db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20db4:	add	fp, sp, #28
   20db8:	sub	sp, sp, #4
   20dbc:	vpush	{d8}
   20dc0:	sub	sp, sp, #216	; 0xd8
   20dc4:	sub	sp, sp, #2048	; 0x800
   20dc8:	mov	r7, r0
   20dcc:	ldr	r0, [r0, #32]
   20dd0:	mov	r8, r3
   20dd4:	str	r2, [sp, #52]	; 0x34
   20dd8:	mov	r2, r1
   20ddc:	ldr	r3, [r0]
   20de0:	ldr	r1, [r0, #20]
   20de4:	mov	r0, r2
   20de8:	blx	r3
   20dec:	cmn	r0, #1
   20df0:	beq	21444 <readstat_parse_spss_commands+0x694>
   20df4:	ldr	r0, [r7, #32]
   20df8:	mov	r1, #2
   20dfc:	mov	r6, #0
   20e00:	ldr	r3, [r0, #8]
   20e04:	ldr	r2, [r0, #20]
   20e08:	mov	r0, #0
   20e0c:	blx	r3
   20e10:	cmn	r0, #1
   20e14:	beq	21458 <readstat_parse_spss_commands+0x6a8>
   20e18:	mov	r4, r0
   20e1c:	ldr	r0, [r7, #32]
   20e20:	mov	r1, #0
   20e24:	ldr	r3, [r0, #8]
   20e28:	ldr	r2, [r0, #20]
   20e2c:	mov	r0, #0
   20e30:	blx	r3
   20e34:	mov	r0, r4
   20e38:	bl	4ae4 <malloc@plt>
   20e3c:	mov	r6, r0
   20e40:	ldr	r0, [r7, #32]
   20e44:	mov	r1, r4
   20e48:	ldr	r3, [r0, #12]
   20e4c:	ldr	r2, [r0, #20]
   20e50:	mov	r0, r6
   20e54:	blx	r3
   20e58:	mov	r0, #1
   20e5c:	mov	r1, #280	; 0x118
   20e60:	mov	r5, #1
   20e64:	bl	4778 <calloc@plt>
   20e68:	cmp	r0, #0
   20e6c:	beq	21460 <readstat_parse_spss_commands+0x6b0>
   20e70:	mov	sl, r0
   20e74:	add	r0, r6, r4
   20e78:	str	r7, [sp, #40]	; 0x28
   20e7c:	str	r8, [sp, #36]	; 0x24
   20e80:	cmp	r4, #0
   20e84:	str	r0, [sp, #80]	; 0x50
   20e88:	str	r5, [sl, #256]	; 0x100
   20e8c:	ldr	r1, [pc, #1940]	; 21628 <readstat_parse_spss_commands+0x878>
   20e90:	str	r6, [sp, #32]
   20e94:	add	r1, pc, r1
   20e98:	beq	2146c <readstat_parse_spss_commands+0x6bc>
   20e9c:	mov	r0, #0
   20ea0:	vldr	d8, [pc, #1008]	; 21298 <readstat_parse_spss_commands+0x4e8>
   20ea4:	mov	r5, #628	; 0x274
   20ea8:	mov	r8, r6
   20eac:	str	r6, [sp, #56]	; 0x38
   20eb0:	str	r0, [sp, #96]	; 0x60
   20eb4:	mov	r0, #5
   20eb8:	str	r0, [sp, #100]	; 0x64
   20ebc:	mov	r0, #0
   20ec0:	str	r0, [sp, #84]	; 0x54
   20ec4:	mov	r0, #0
   20ec8:	str	r0, [sp, #48]	; 0x30
   20ecc:	mov	r0, #0
   20ed0:	str	r0, [sp, #44]	; 0x2c
   20ed4:	mov	r0, #0
   20ed8:	str	r0, [sp, #108]	; 0x6c
   20edc:	mov	r0, #0
   20ee0:	str	r0, [sp, #92]	; 0x5c
   20ee4:	mov	r0, r6
   20ee8:	mov	r0, #0
   20eec:	str	r0, [sp, #68]	; 0x44
   20ef0:	mov	r0, #0
   20ef4:	str	r0, [sp, #60]	; 0x3c
   20ef8:	mov	r0, #0
   20efc:	str	r0, [sp, #72]	; 0x48
   20f00:	mov	r0, #0
   20f04:	str	r0, [sp, #76]	; 0x4c
   20f08:	mov	r0, #0
   20f0c:	str	r0, [sp, #88]	; 0x58
   20f10:	mov	r0, #0
   20f14:	str	r0, [sp, #64]	; 0x40
   20f18:	mov	r0, #0
   20f1c:	str	r0, [sp, #104]	; 0x68
   20f20:	ldr	r0, [pc, #1796]	; 2162c <readstat_parse_spss_commands+0x87c>
   20f24:	add	r0, pc, r0
   20f28:	ldrb	r1, [r0, r5]
   20f2c:	ldr	r0, [pc, #1788]	; 21630 <readstat_parse_spss_commands+0x880>
   20f30:	ldr	r2, [pc, #1788]	; 21634 <readstat_parse_spss_commands+0x884>
   20f34:	add	r0, pc, r0
   20f38:	add	r2, pc, r2
   20f3c:	cmp	r1, #0
   20f40:	add	r0, r0, r5, lsl #1
   20f44:	ldrsh	r0, [r0]
   20f48:	add	r7, r2, r0
   20f4c:	ldr	r0, [pc, #1764]	; 21638 <readstat_parse_spss_commands+0x888>
   20f50:	add	r0, pc, r0
   20f54:	add	r0, r0, r5, lsl #1
   20f58:	ldrsh	r9, [r0]
   20f5c:	beq	20fac <readstat_parse_spss_commands+0x1fc>
   20f60:	add	ip, r7, r1
   20f64:	sub	r3, ip, #1
   20f68:	cmp	r3, r7
   20f6c:	bcc	20fa4 <readstat_parse_spss_commands+0x1f4>
   20f70:	ldrb	r6, [r8]
   20f74:	mov	r2, r7
   20f78:	sub	r4, r3, r2
   20f7c:	mov	r0, r2
   20f80:	ldrb	r4, [r0, r4, asr #1]!
   20f84:	cmp	r6, r4
   20f88:	bcs	20f94 <readstat_parse_spss_commands+0x1e4>
   20f8c:	sub	r3, r0, #1
   20f90:	b	20f9c <readstat_parse_spss_commands+0x1ec>
   20f94:	bls	2101c <readstat_parse_spss_commands+0x26c>
   20f98:	add	r2, r0, #1
   20f9c:	cmp	r3, r2
   20fa0:	bcs	20f78 <readstat_parse_spss_commands+0x1c8>
   20fa4:	add	r9, r1, r9
   20fa8:	b	20fb0 <readstat_parse_spss_commands+0x200>
   20fac:	mov	ip, r7
   20fb0:	ldr	r0, [pc, #1668]	; 2163c <readstat_parse_spss_commands+0x88c>
   20fb4:	mvn	r6, #1
   20fb8:	add	r0, pc, r0
   20fbc:	ldrb	r1, [r0, r5]
   20fc0:	cmp	r1, #0
   20fc4:	beq	21034 <readstat_parse_spss_commands+0x284>
   20fc8:	add	r0, ip, r1, lsl #1
   20fcc:	sub	r2, r0, #2
   20fd0:	cmp	r2, ip
   20fd4:	bcc	21030 <readstat_parse_spss_commands+0x280>
   20fd8:	ldrb	r3, [r8]
   20fdc:	mov	r4, ip
   20fe0:	sub	r0, r2, r4
   20fe4:	and	r7, r6, r0, asr #1
   20fe8:	mov	r0, r4
   20fec:	ldrb	r7, [r0, r7]!
   20ff0:	cmp	r3, r7
   20ff4:	bcs	21000 <readstat_parse_spss_commands+0x250>
   20ff8:	sub	r2, r0, #2
   20ffc:	b	21010 <readstat_parse_spss_commands+0x260>
   21000:	ldrb	r7, [r0, #1]
   21004:	cmp	r3, r7
   21008:	bls	21028 <readstat_parse_spss_commands+0x278>
   2100c:	add	r4, r0, #2
   21010:	cmp	r2, r4
   21014:	bcs	20fe0 <readstat_parse_spss_commands+0x230>
   21018:	b	21030 <readstat_parse_spss_commands+0x280>
   2101c:	sub	r1, r9, r7
   21020:	add	r9, r1, r0
   21024:	b	21034 <readstat_parse_spss_commands+0x284>
   21028:	sub	r0, r0, ip
   2102c:	asr	r1, r0, #1
   21030:	add	r9, r1, r9
   21034:	ldr	r0, [pc, #1540]	; 21640 <readstat_parse_spss_commands+0x890>
   21038:	add	r0, pc, r0
   2103c:	ldrb	r0, [r0, r9]
   21040:	cmp	r0, #0
   21044:	beq	21408 <readstat_parse_spss_commands+0x658>
   21048:	ldr	r4, [pc, #1524]	; 21644 <readstat_parse_spss_commands+0x894>
   2104c:	add	r4, pc, r4
   21050:	ldrb	r6, [r4, r0]!
   21054:	cmp	r6, #0
   21058:	beq	21408 <readstat_parse_spss_commands+0x658>
   2105c:	ldrb	r0, [r4, #1]!
   21060:	cmp	r0, #35	; 0x23
   21064:	bhi	21400 <readstat_parse_spss_commands+0x650>
   21068:	add	r1, pc, #4
   2106c:	ldr	r0, [r1, r0, lsl #2]
   21070:	add	pc, r1, r0
   21074:	.word	0x000000bc
   21078:	.word	0x000000cc
   2107c:	.word	0x00000100
   21080:	.word	0x00000114
   21084:	.word	0x00000128
   21088:	.word	0x00000138
   2108c:	.word	0x00000150
   21090:	.word	0x00000158
   21094:	.word	0x0000016c
   21098:	.word	0x0000019c
   2109c:	.word	0x000001c4
   210a0:	.word	0x000001cc
   210a4:	.word	0x000001e0
   210a8:	.word	0x0000022c
   210ac:	.word	0x00000290
   210b0:	.word	0x00000098
   210b4:	.word	0x000000a0
   210b8:	.word	0x00000098
   210bc:	.word	0x000000a0
   210c0:	.word	0x00000308
   210c4:	.word	0x00000098
   210c8:	.word	0x000000a0
   210cc:	.word	0x000000b0
   210d0:	.word	0x000000b0
   210d4:	.word	0x00000090
   210d8:	.word	0x00000090
   210dc:	.word	0x000000b0
   210e0:	.word	0x00000320
   210e4:	.word	0x00000090
   210e8:	.word	0x00000090
   210ec:	.word	0x00000330
   210f0:	.word	0x00000338
   210f4:	.word	0x0000034c
   210f8:	.word	0x00000368
   210fc:	.word	0x0000037c
   21100:	.word	0x00000384
   21104:	mov	r0, #5
   21108:	b	21128 <readstat_parse_spss_commands+0x378>
   2110c:	str	r8, [sp, #104]	; 0x68
   21110:	b	21400 <readstat_parse_spss_commands+0x650>
   21114:	ldr	r0, [sp, #104]	; 0x68
   21118:	sub	r0, r8, r0
   2111c:	str	r0, [sp, #96]	; 0x60
   21120:	b	21400 <readstat_parse_spss_commands+0x650>
   21124:	mov	r0, #0
   21128:	str	r0, [sp, #100]	; 0x64
   2112c:	b	21400 <readstat_parse_spss_commands+0x650>
   21130:	mov	r0, #0
   21134:	str	r0, [sp, #108]	; 0x6c
   21138:	mov	r0, #0
   2113c:	b	2116c <readstat_parse_spss_commands+0x3bc>
   21140:	ldr	r1, [sp, #108]	; 0x6c
   21144:	ldr	r2, [sp, #92]	; 0x5c
   21148:	mov	r0, #10
   2114c:	umull	r0, r1, r1, r0
   21150:	add	r2, r2, r2, lsl #2
   21154:	add	r1, r1, r2, lsl #1
   21158:	ldrb	r2, [r8]
   2115c:	sub	r2, r2, #48	; 0x30
   21160:	adds	r0, r0, r2
   21164:	str	r0, [sp, #108]	; 0x6c
   21168:	adc	r0, r1, r2, asr #31
   2116c:	str	r0, [sp, #92]	; 0x5c
   21170:	b	21400 <readstat_parse_spss_commands+0x650>
   21174:	ldr	r0, [sp, #108]	; 0x6c
   21178:	sub	r0, r0, #1
   2117c:	str	r0, [sp, #68]	; 0x44
   21180:	mov	r0, #1
   21184:	b	21194 <readstat_parse_spss_commands+0x3e4>
   21188:	ldr	r0, [sp, #68]	; 0x44
   2118c:	ldr	r1, [sp, #108]	; 0x6c
   21190:	sub	r0, r1, r0
   21194:	str	r0, [sp, #72]	; 0x48
   21198:	b	21400 <readstat_parse_spss_commands+0x650>
   2119c:	add	lr, sp, #1024	; 0x400
   211a0:	mov	r1, #1024	; 0x400
   211a4:	add	r0, lr, #116	; 0x74
   211a8:	b	211b4 <readstat_parse_spss_commands+0x404>
   211ac:	sub	r0, fp, #140	; 0x8c
   211b0:	mov	r1, #32
   211b4:	ldr	r2, [sp, #104]	; 0x68
   211b8:	ldr	r3, [sp, #96]	; 0x60
   211bc:	bl	4a18 <readstat_copy_quoted@plt>
   211c0:	b	21400 <readstat_parse_spss_commands+0x650>
   211c4:	sub	r0, fp, #76	; 0x4c
   211c8:	b	211d0 <readstat_parse_spss_commands+0x420>
   211cc:	sub	r0, fp, #108	; 0x6c
   211d0:	ldr	r2, [sp, #104]	; 0x68
   211d4:	ldr	r3, [sp, #96]	; 0x60
   211d8:	mov	r1, #32
   211dc:	b	21230 <readstat_parse_spss_commands+0x480>
   211e0:	sub	r1, fp, #76	; 0x4c
   211e4:	mov	r0, sl
   211e8:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   211ec:	ldr	r1, [sp, #100]	; 0x64
   211f0:	str	r1, [r0, #16]
   211f4:	ldr	r1, [sp, #60]	; 0x3c
   211f8:	str	r1, [r0]
   211fc:	ldr	r1, [sp, #68]	; 0x44
   21200:	str	r1, [r0, #4]
   21204:	ldr	r1, [sp, #72]	; 0x48
   21208:	str	r1, [r0, #8]
   2120c:	b	21400 <readstat_parse_spss_commands+0x650>
   21210:	sub	r1, fp, #76	; 0x4c
   21214:	mov	r0, sl
   21218:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   2121c:	add	lr, sp, #1024	; 0x400
   21220:	add	r0, r0, #580	; 0x244
   21224:	mov	r1, #1024	; 0x400
   21228:	mov	r3, #1024	; 0x400
   2122c:	add	r2, lr, #116	; 0x74
   21230:	bl	4868 <readstat_copy@plt>
   21234:	b	21400 <readstat_parse_spss_commands+0x650>
   21238:	mov	r0, #0
   2123c:	b	2124c <readstat_parse_spss_commands+0x49c>
   21240:	ldr	r0, [sp, #76]	; 0x4c
   21244:	cmp	r0, #1024	; 0x400
   21248:	addcc	r0, r0, #1
   2124c:	str	r0, [sp, #76]	; 0x4c
   21250:	b	21400 <readstat_parse_spss_commands+0x650>
   21254:	ldr	r1, [pc, #1004]	; 21648 <readstat_parse_spss_commands+0x898>
   21258:	sub	r0, fp, #108	; 0x6c
   2125c:	add	r1, pc, r1
   21260:	bl	4a0c <strcasecmp@plt>
   21264:	cmp	r0, #0
   21268:	bne	21274 <readstat_parse_spss_commands+0x4c4>
   2126c:	ldr	r0, [sp, #108]	; 0x6c
   21270:	str	r0, [sl, #264]	; 0x108
   21274:	ldr	r1, [pc, #976]	; 2164c <readstat_parse_spss_commands+0x89c>
   21278:	sub	r0, fp, #108	; 0x6c
   2127c:	add	r1, pc, r1
   21280:	bl	4a0c <strcasecmp@plt>
   21284:	cmp	r0, #0
   21288:	bne	21400 <readstat_parse_spss_commands+0x650>
   2128c:	ldrb	r0, [sp, #1140]	; 0x474
   21290:	strb	r0, [sl, #272]	; 0x110
   21294:	b	21400 <readstat_parse_spss_commands+0x650>
   21298:	.word	0x00000000
   2129c:	.word	0x7ff80000
   212a0:	ldr	r2, [pc, #936]	; 21650 <readstat_parse_spss_commands+0x8a0>
   212a4:	ldr	r3, [sp, #64]	; 0x40
   212a8:	add	r0, sp, #112	; 0x70
   212ac:	mov	r1, #256	; 0x100
   212b0:	add	r2, pc, r2
   212b4:	bl	4c4c <snprintf@plt>
   212b8:	ldr	r0, [sp, #76]	; 0x4c
   212bc:	cmp	r0, #1
   212c0:	blt	212f4 <readstat_parse_spss_commands+0x544>
   212c4:	ldr	r5, [sp, #76]	; 0x4c
   212c8:	sub	r1, fp, #76	; 0x4c
   212cc:	mov	r0, sl
   212d0:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   212d4:	movw	r1, #2168	; 0x878
   212d8:	add	r2, sp, #112	; 0x70
   212dc:	mov	r3, #256	; 0x100
   212e0:	add	r0, r0, r1
   212e4:	mov	r1, #32
   212e8:	bl	4868 <readstat_copy@plt>
   212ec:	subs	r5, r5, #1
   212f0:	bne	212c8 <readstat_parse_spss_commands+0x518>
   212f4:	ldr	r0, [sp, #64]	; 0x40
   212f8:	add	r0, r0, #1
   212fc:	str	r0, [sp, #64]	; 0x40
   21300:	b	21400 <readstat_parse_spss_commands+0x650>
   21304:	ldr	r2, [pc, #840]	; 21654 <readstat_parse_spss_commands+0x8a4>
   21308:	ldr	r3, [sp, #64]	; 0x40
   2130c:	add	r5, sp, #112	; 0x70
   21310:	mov	r1, #256	; 0x100
   21314:	mov	r0, r5
   21318:	add	r2, pc, r2
   2131c:	bl	4c4c <snprintf@plt>
   21320:	ldr	r2, [sp, #48]	; 0x30
   21324:	add	lr, sp, #1024	; 0x400
   21328:	vorr	d0, d8, d8
   2132c:	sub	r1, fp, #140	; 0x8c
   21330:	add	r0, lr, #116	; 0x74
   21334:	str	r1, [sp, #16]
   21338:	mov	r1, r5
   2133c:	str	r0, [sp, #20]
   21340:	ldr	r0, [sp, #52]	; 0x34
   21344:	str	r2, [sp]
   21348:	ldr	r2, [sp, #44]	; 0x2c
   2134c:	str	r0, [sp, #24]
   21350:	ldr	r0, [sp, #40]	; 0x28
   21354:	str	r2, [sp, #4]
   21358:	ldr	r2, [sp, #108]	; 0x6c
   2135c:	str	r2, [sp, #8]
   21360:	ldr	r2, [sp, #92]	; 0x5c
   21364:	str	r2, [sp, #12]
   21368:	ldr	r2, [sp, #88]	; 0x58
   2136c:	bl	4a30 <submit_value_label@plt>
   21370:	cmp	r0, #0
   21374:	beq	21400 <readstat_parse_spss_commands+0x650>
   21378:	b	215d0 <readstat_parse_spss_commands+0x820>
   2137c:	ldr	r0, [sp, #84]	; 0x54
   21380:	str	r8, [sp, #56]	; 0x38
   21384:	add	r0, r0, #1
   21388:	str	r0, [sp, #84]	; 0x54
   2138c:	mov	r0, r8
   21390:	b	21400 <readstat_parse_spss_commands+0x650>
   21394:	ldr	r0, [sp, #108]	; 0x6c
   21398:	sub	r0, r0, #1
   2139c:	str	r0, [sp, #60]	; 0x3c
   213a0:	b	21400 <readstat_parse_spss_commands+0x650>
   213a4:	mvn	r0, #0
   213a8:	b	213fc <readstat_parse_spss_commands+0x64c>
   213ac:	ldr	r0, [sp, #108]	; 0x6c
   213b0:	ldr	r1, [sp, #92]	; 0x5c
   213b4:	rsbs	r0, r0, #0
   213b8:	rsc	r1, r1, #0
   213bc:	b	213c8 <readstat_parse_spss_commands+0x618>
   213c0:	ldr	r0, [sp, #108]	; 0x6c
   213c4:	ldr	r1, [sp, #92]	; 0x5c
   213c8:	bl	23550 <__aeabi_ul2d>
   213cc:	mov	r2, #0
   213d0:	vmov	d8, r0, r1
   213d4:	str	r2, [sp, #88]	; 0x58
   213d8:	b	21400 <readstat_parse_spss_commands+0x650>
   213dc:	ldr	r0, [sp, #108]	; 0x6c
   213e0:	str	r0, [sp, #48]	; 0x30
   213e4:	ldr	r0, [sp, #92]	; 0x5c
   213e8:	str	r0, [sp, #44]	; 0x2c
   213ec:	b	21400 <readstat_parse_spss_commands+0x650>
   213f0:	mov	r0, #2
   213f4:	b	213fc <readstat_parse_spss_commands+0x64c>
   213f8:	mov	r0, #1
   213fc:	str	r0, [sp, #88]	; 0x58
   21400:	subs	r6, r6, #1
   21404:	bne	2105c <readstat_parse_spss_commands+0x2ac>
   21408:	ldr	r0, [pc, #584]	; 21658 <readstat_parse_spss_commands+0x8a8>
   2140c:	add	r0, pc, r0
   21410:	add	r0, r0, r9, lsl #1
   21414:	ldrsh	r5, [r0]
   21418:	uxth	r0, r5
   2141c:	cmp	r0, #0
   21420:	beq	21534 <readstat_parse_spss_commands+0x784>
   21424:	ldr	r0, [sp, #80]	; 0x50
   21428:	add	r8, r8, #1
   2142c:	cmp	r8, r0
   21430:	bne	20f20 <readstat_parse_spss_commands+0x170>
   21434:	ldr	r8, [sp, #80]	; 0x50
   21438:	ldr	r1, [pc, #540]	; 2165c <readstat_parse_spss_commands+0x8ac>
   2143c:	add	r1, pc, r1
   21440:	b	214a0 <readstat_parse_spss_commands+0x6f0>
   21444:	cmp	r8, #0
   21448:	mov	sl, #0
   2144c:	movne	r0, #1
   21450:	strne	r0, [r8]
   21454:	b	21614 <readstat_parse_spss_commands+0x864>
   21458:	mov	r5, #15
   2145c:	b	21464 <readstat_parse_spss_commands+0x6b4>
   21460:	mov	r5, #3
   21464:	mov	sl, #0
   21468:	b	215e0 <readstat_parse_spss_commands+0x830>
   2146c:	mov	r0, #0
   21470:	mov	r5, #628	; 0x274
   21474:	mov	r8, r6
   21478:	str	r6, [sp, #56]	; 0x38
   2147c:	str	r0, [sp, #72]	; 0x48
   21480:	mov	r0, #5
   21484:	str	r0, [sp, #100]	; 0x64
   21488:	mov	r0, #0
   2148c:	str	r0, [sp, #60]	; 0x3c
   21490:	mov	r0, #0
   21494:	str	r0, [sp, #68]	; 0x44
   21498:	mov	r0, #0
   2149c:	str	r0, [sp, #84]	; 0x54
   214a0:	ldr	r0, [pc, #440]	; 21660 <readstat_parse_spss_commands+0x8b0>
   214a4:	add	r0, pc, r0
   214a8:	ldrb	r0, [r0, r5]
   214ac:	ldrb	r6, [r1, r0]
   214b0:	cmp	r6, #0
   214b4:	beq	2152c <readstat_parse_spss_commands+0x77c>
   214b8:	add	r0, r0, r1
   214bc:	sub	r9, fp, #76	; 0x4c
   214c0:	add	r4, r0, #1
   214c4:	ldrb	r0, [r4]
   214c8:	sub	r6, r6, #1
   214cc:	cmp	r0, #19
   214d0:	beq	2150c <readstat_parse_spss_commands+0x75c>
   214d4:	cmp	r0, #8
   214d8:	bne	21520 <readstat_parse_spss_commands+0x770>
   214dc:	mov	r0, sl
   214e0:	mov	r1, r9
   214e4:	bl	4ab4 <readstat_schema_find_or_create_entry@plt>
   214e8:	ldr	r1, [sp, #100]	; 0x64
   214ec:	str	r1, [r0, #16]
   214f0:	ldr	r1, [sp, #60]	; 0x3c
   214f4:	str	r1, [r0]
   214f8:	ldr	r1, [sp, #68]	; 0x44
   214fc:	str	r1, [r0, #4]
   21500:	ldr	r1, [sp, #72]	; 0x48
   21504:	str	r1, [r0, #8]
   21508:	b	21520 <readstat_parse_spss_commands+0x770>
   2150c:	ldr	r0, [sp, #84]	; 0x54
   21510:	add	r0, r0, #1
   21514:	str	r0, [sp, #84]	; 0x54
   21518:	ldr	r0, [sp, #80]	; 0x50
   2151c:	str	r0, [sp, #56]	; 0x38
   21520:	add	r4, r4, #1
   21524:	cmp	r6, #0
   21528:	bne	214c4 <readstat_parse_spss_commands+0x714>
   2152c:	cmp	r5, #628	; 0x274
   21530:	bge	21574 <readstat_parse_spss_commands+0x7c4>
   21534:	ldr	r0, [sp, #80]	; 0x50
   21538:	cmp	r8, r0
   2153c:	beq	21590 <readstat_parse_spss_commands+0x7e0>
   21540:	ldr	r0, [sp, #56]	; 0x38
   21544:	ldrb	r0, [r8], -r0
   21548:	add	r1, r8, #1
   2154c:	str	r1, [sp]
   21550:	mov	r1, #1024	; 0x400
   21554:	str	r0, [sp, #4]
   21558:	ldr	r0, [sp, #84]	; 0x54
   2155c:	ldr	r2, [pc, #260]	; 21668 <readstat_parse_spss_commands+0x8b8>
   21560:	add	r3, r0, #1
   21564:	add	r0, sp, #112	; 0x70
   21568:	add	r2, pc, r2
   2156c:	bl	4c4c <snprintf@plt>
   21570:	b	215a4 <readstat_parse_spss_commands+0x7f4>
   21574:	ldr	r7, [sp, #40]	; 0x28
   21578:	ldr	r2, [sp, #52]	; 0x34
   2157c:	mov	r1, sl
   21580:	mov	r0, r7
   21584:	bl	4928 <submit_columns@plt>
   21588:	ldr	r8, [sp, #36]	; 0x24
   2158c:	b	215d8 <readstat_parse_spss_commands+0x828>
   21590:	ldr	r1, [pc, #204]	; 21664 <readstat_parse_spss_commands+0x8b4>
   21594:	add	r0, sp, #112	; 0x70
   21598:	mov	r2, #67	; 0x43
   2159c:	add	r1, pc, r1
   215a0:	bl	4910 <memcpy@plt>
   215a4:	ldr	r7, [sp, #40]	; 0x28
   215a8:	ldr	r8, [sp, #36]	; 0x24
   215ac:	ldr	r6, [sp, #32]
   215b0:	ldr	r2, [r7, #24]
   215b4:	cmp	r2, #0
   215b8:	beq	215c8 <readstat_parse_spss_commands+0x818>
   215bc:	ldr	r1, [sp, #52]	; 0x34
   215c0:	add	r0, sp, #112	; 0x70
   215c4:	blx	r2
   215c8:	mov	r5, #5
   215cc:	b	215e0 <readstat_parse_spss_commands+0x830>
   215d0:	ldr	r8, [sp, #36]	; 0x24
   215d4:	ldr	r7, [sp, #40]	; 0x28
   215d8:	mov	r5, r0
   215dc:	ldr	r6, [sp, #32]
   215e0:	ldr	r0, [r7, #32]
   215e4:	ldr	r1, [r0, #4]
   215e8:	ldr	r0, [r0, #20]
   215ec:	blx	r1
   215f0:	mov	r0, r6
   215f4:	bl	48bc <free@plt>
   215f8:	cmp	r5, #0
   215fc:	beq	21614 <readstat_parse_spss_commands+0x864>
   21600:	cmp	r8, #0
   21604:	mov	r0, sl
   21608:	strne	r5, [r8]
   2160c:	bl	4994 <readstat_schema_free@plt>
   21610:	mov	sl, #0
   21614:	mov	r0, sl
   21618:	sub	sp, fp, #40	; 0x28
   2161c:	vpop	{d8}
   21620:	add	sp, sp, #4
   21624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21628:	.word	0x00010f9c
   2162c:	.word	0x0000e39a
   21630:	.word	0x0000d9aa
   21634:	.word	0x0000cdca
   21638:	.word	0x0000de7e
   2163c:	.word	0x0000e57e
   21640:	.word	0x00010122
   21644:	.word	0x00010de4
   21648:	.word	0x00010eef
   2164c:	.word	0x00010ed9
   21650:	.word	0x00003553
   21654:	.word	0x000034eb
   21658:	.word	0x0000e3a2
   2165c:	.word	0x000109f4
   21660:	.word	0x00010a2f
   21664:	.word	0x00010c04
   21668:	.word	0x00010bf8

0002166c <readstat_schema_free>:
   2166c:	cmp	r0, #0
   21670:	bxeq	lr
   21674:	push	{r4, sl, fp, lr}
   21678:	add	fp, sp, #8
   2167c:	mov	r4, r0
   21680:	ldr	r0, [r0, #276]	; 0x114
   21684:	bl	48bc <free@plt>
   21688:	mov	r0, r4
   2168c:	pop	{r4, sl, fp, lr}
   21690:	b	48bc <free@plt>

00021694 <readstat_schema_find_or_create_entry>:
   21694:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21698:	add	fp, sp, #24
   2169c:	ldr	r7, [r0, #268]	; 0x10c
   216a0:	mov	r5, r1
   216a4:	mov	r9, r0
   216a8:	cmp	r7, #0
   216ac:	ble	216e4 <readstat_schema_find_or_create_entry+0x50>
   216b0:	ldr	r8, [r9, #276]	; 0x114
   216b4:	mov	r4, #0
   216b8:	mov	r6, r8
   216bc:	add	r0, r6, #24
   216c0:	mov	r1, r5
   216c4:	bl	4808 <strcmp@plt>
   216c8:	cmp	r0, #0
   216cc:	beq	216ec <readstat_schema_find_or_create_entry+0x58>
   216d0:	add	r4, r4, #1
   216d4:	add	r6, r6, #2208	; 0x8a0
   216d8:	cmp	r4, r7
   216dc:	blt	216bc <readstat_schema_find_or_create_entry+0x28>
   216e0:	b	216f4 <readstat_schema_find_or_create_entry+0x60>
   216e4:	ldr	r8, [r9, #276]	; 0x114
   216e8:	b	216f4 <readstat_schema_find_or_create_entry+0x60>
   216ec:	cmp	r6, #0
   216f0:	bne	2175c <readstat_schema_find_or_create_entry+0xc8>
   216f4:	mov	r4, #2208	; 0x8a0
   216f8:	mul	r0, r7, r4
   216fc:	add	r1, r0, #2208	; 0x8a0
   21700:	mov	r0, r8
   21704:	bl	49dc <realloc@plt>
   21708:	str	r0, [r9, #276]	; 0x114
   2170c:	mov	r2, #2208	; 0x8a0
   21710:	ldr	r1, [r9, #268]	; 0x10c
   21714:	mla	r6, r1, r4, r0
   21718:	mov	r1, #0
   2171c:	mov	r0, r6
   21720:	bl	4c70 <memset@plt>
   21724:	mov	r0, r5
   21728:	add	r7, r6, #24
   2172c:	bl	4bd4 <strlen@plt>
   21730:	mov	r3, r0
   21734:	mov	r0, r7
   21738:	mov	r1, #300	; 0x12c
   2173c:	mov	r2, r5
   21740:	bl	4868 <readstat_copy@plt>
   21744:	mov	r0, #46	; 0x2e
   21748:	strb	r0, [r6, #2200]	; 0x898
   2174c:	ldr	r0, [r9, #268]	; 0x10c
   21750:	add	r1, r0, #1
   21754:	str	r1, [r9, #268]	; 0x10c
   21758:	str	r0, [r6, #20]
   2175c:	mov	r0, r6
   21760:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00021764 <readstat_parse_stata_dictionary>:
   21764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21768:	add	fp, sp, #28
   2176c:	sub	sp, sp, #244	; 0xf4
   21770:	sub	sp, sp, #3072	; 0xc00
   21774:	mov	r7, r0
   21778:	ldr	r0, [r0, #32]
   2177c:	mov	r9, r3
   21780:	mov	r5, r2
   21784:	mov	r2, r1
   21788:	ldr	r3, [r0]
   2178c:	ldr	r1, [r0, #20]
   21790:	mov	r0, r2
   21794:	blx	r3
   21798:	cmn	r0, #1
   2179c:	beq	21d18 <readstat_parse_stata_dictionary+0x5b4>
   217a0:	ldr	r0, [r7, #32]
   217a4:	mov	r1, #2
   217a8:	mov	r6, #0
   217ac:	ldr	r3, [r0, #8]
   217b0:	ldr	r2, [r0, #20]
   217b4:	mov	r0, #0
   217b8:	blx	r3
   217bc:	cmn	r0, #1
   217c0:	beq	21d2c <readstat_parse_stata_dictionary+0x5c8>
   217c4:	mov	r4, r0
   217c8:	ldr	r0, [r7, #32]
   217cc:	mov	r1, #0
   217d0:	ldr	r3, [r0, #8]
   217d4:	ldr	r2, [r0, #20]
   217d8:	mov	r0, #0
   217dc:	blx	r3
   217e0:	mov	r0, r4
   217e4:	bl	4ae4 <malloc@plt>
   217e8:	mov	r6, r0
   217ec:	ldr	r0, [r7, #32]
   217f0:	mov	r1, r4
   217f4:	ldr	r3, [r0, #12]
   217f8:	ldr	r2, [r0, #20]
   217fc:	mov	r0, r6
   21800:	blx	r3
   21804:	mov	r0, #1
   21808:	mov	r1, #280	; 0x118
   2180c:	mov	r8, #1
   21810:	bl	4778 <calloc@plt>
   21814:	cmp	r0, #0
   21818:	beq	21d34 <readstat_parse_stata_dictionary+0x5d0>
   2181c:	add	r1, r6, r4
   21820:	str	r8, [r0, #256]	; 0x100
   21824:	cmp	r4, #0
   21828:	mov	r8, r0
   2182c:	str	r5, [sp, #20]
   21830:	str	r7, [sp, #36]	; 0x24
   21834:	str	r9, [sp, #12]
   21838:	str	r6, [sp, #8]
   2183c:	str	r1, [sp, #56]	; 0x38
   21840:	beq	21d40 <readstat_parse_stata_dictionary+0x5dc>
   21844:	add	r0, sp, #1104	; 0x450
   21848:	mvn	r4, #1
   2184c:	mov	sl, r6
   21850:	mov	r9, #0
   21854:	str	r6, [sp, #32]
   21858:	str	r8, [sp, #40]	; 0x28
   2185c:	add	r1, r0, #16
   21860:	str	r1, [sp, #16]
   21864:	add	r1, r0, #24
   21868:	add	r0, r0, #580	; 0x244
   2186c:	str	r1, [sp, #28]
   21870:	mov	r1, #0
   21874:	str	r0, [sp, #24]
   21878:	mov	r0, #1
   2187c:	str	r1, [sp, #60]	; 0x3c
   21880:	mov	r1, #0
   21884:	str	r1, [sp, #48]	; 0x30
   21888:	mov	r1, #0
   2188c:	str	r1, [sp, #76]	; 0x4c
   21890:	mov	r1, #0
   21894:	str	r1, [sp, #72]	; 0x48
   21898:	mov	r1, #0
   2189c:	str	r1, [sp, #68]	; 0x44
   218a0:	mov	r1, #0
   218a4:	str	r1, [sp, #64]	; 0x40
   218a8:	mov	r1, #0
   218ac:	str	r1, [sp, #52]	; 0x34
   218b0:	ldr	r1, [pc, #1432]	; 21e50 <readstat_parse_stata_dictionary+0x6ec>
   218b4:	add	r1, pc, r1
   218b8:	ldrb	r2, [r1, r0]
   218bc:	ldr	r1, [pc, #1424]	; 21e54 <readstat_parse_stata_dictionary+0x6f0>
   218c0:	ldr	r3, [pc, #1424]	; 21e58 <readstat_parse_stata_dictionary+0x6f4>
   218c4:	add	r1, pc, r1
   218c8:	add	r3, pc, r3
   218cc:	cmp	r2, #0
   218d0:	add	r1, r1, r0, lsl #1
   218d4:	ldrsh	r1, [r1]
   218d8:	add	lr, r3, r1
   218dc:	ldr	r1, [pc, #1400]	; 21e5c <readstat_parse_stata_dictionary+0x6f8>
   218e0:	add	r1, pc, r1
   218e4:	add	r1, r1, r0, lsl #1
   218e8:	ldrsh	r5, [r1]
   218ec:	beq	21948 <readstat_parse_stata_dictionary+0x1e4>
   218f0:	add	ip, lr, r2
   218f4:	mov	r8, r5
   218f8:	sub	r6, ip, #1
   218fc:	cmp	r6, lr
   21900:	bcc	21938 <readstat_parse_stata_dictionary+0x1d4>
   21904:	ldrb	r7, [sl]
   21908:	mov	r3, lr
   2190c:	sub	r5, r6, r3
   21910:	mov	r1, r3
   21914:	ldrb	r5, [r1, r5, asr #1]!
   21918:	cmp	r7, r5
   2191c:	bcs	21928 <readstat_parse_stata_dictionary+0x1c4>
   21920:	sub	r6, r1, #1
   21924:	b	21930 <readstat_parse_stata_dictionary+0x1cc>
   21928:	bls	219d0 <readstat_parse_stata_dictionary+0x26c>
   2192c:	add	r3, r1, #1
   21930:	cmp	r6, r3
   21934:	bcs	2190c <readstat_parse_stata_dictionary+0x1a8>
   21938:	mov	r5, r8
   2193c:	add	r5, r2, r8
   21940:	ldr	r8, [sp, #40]	; 0x28
   21944:	b	2194c <readstat_parse_stata_dictionary+0x1e8>
   21948:	mov	ip, lr
   2194c:	ldr	r1, [pc, #1292]	; 21e60 <readstat_parse_stata_dictionary+0x6fc>
   21950:	ldr	r6, [pc, #1292]	; 21e64 <readstat_parse_stata_dictionary+0x700>
   21954:	add	r1, pc, r1
   21958:	add	r6, pc, r6
   2195c:	ldrb	r0, [r1, r0]
   21960:	cmp	r0, #0
   21964:	beq	21980 <readstat_parse_stata_dictionary+0x21c>
   21968:	add	r1, ip, r0, lsl #1
   2196c:	sub	r2, r1, #2
   21970:	cmp	r2, ip
   21974:	bcs	21988 <readstat_parse_stata_dictionary+0x224>
   21978:	mov	r4, r9
   2197c:	b	219fc <readstat_parse_stata_dictionary+0x298>
   21980:	mov	r4, r9
   21984:	b	21a00 <readstat_parse_stata_dictionary+0x29c>
   21988:	ldrb	r3, [sl]
   2198c:	mov	lr, r5
   21990:	mov	r5, ip
   21994:	sub	r1, r2, r5
   21998:	and	r7, r4, r1, asr #1
   2199c:	mov	r1, r5
   219a0:	ldrb	r7, [r1, r7]!
   219a4:	cmp	r3, r7
   219a8:	bcs	219b4 <readstat_parse_stata_dictionary+0x250>
   219ac:	sub	r2, r1, #2
   219b0:	b	219c4 <readstat_parse_stata_dictionary+0x260>
   219b4:	ldrb	r7, [r1, #1]
   219b8:	cmp	r3, r7
   219bc:	bls	219ec <readstat_parse_stata_dictionary+0x288>
   219c0:	add	r5, r1, #2
   219c4:	cmp	r2, r5
   219c8:	bcs	21994 <readstat_parse_stata_dictionary+0x230>
   219cc:	b	219f4 <readstat_parse_stata_dictionary+0x290>
   219d0:	ldr	r6, [pc, #1184]	; 21e78 <readstat_parse_stata_dictionary+0x714>
   219d4:	sub	r0, r8, lr
   219d8:	ldr	r8, [sp, #40]	; 0x28
   219dc:	mov	r4, r9
   219e0:	add	r5, r0, r1
   219e4:	add	r6, pc, r6
   219e8:	b	21a00 <readstat_parse_stata_dictionary+0x29c>
   219ec:	sub	r0, r1, ip
   219f0:	asr	r0, r0, #1
   219f4:	mov	r4, r9
   219f8:	mov	r5, lr
   219fc:	add	r5, r0, r5
   21a00:	ldr	r0, [pc, #1120]	; 21e68 <readstat_parse_stata_dictionary+0x704>
   21a04:	add	r0, pc, r0
   21a08:	ldrb	r0, [r0, r5]
   21a0c:	cmp	r0, #0
   21a10:	beq	21cd0 <readstat_parse_stata_dictionary+0x56c>
   21a14:	ldrb	r9, [r6, r0]
   21a18:	cmp	r9, #0
   21a1c:	beq	21cd0 <readstat_parse_stata_dictionary+0x56c>
   21a20:	add	r0, r6, r0
   21a24:	str	r5, [sp, #44]	; 0x2c
   21a28:	add	r6, r0, #1
   21a2c:	ldrb	r0, [r6]
   21a30:	cmp	r0, #28
   21a34:	bhi	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21a38:	add	r1, pc, #4
   21a3c:	ldr	r0, [r1, r0, lsl #2]
   21a40:	add	pc, r1, r0
   21a44:	.word	0x0000008c
   21a48:	.word	0x00000094
   21a4c:	.word	0x000000a8
   21a50:	.word	0x000000d0
   21a54:	.word	0x00000138
   21a58:	.word	0x00000144
   21a5c:	.word	0x00000150
   21a60:	.word	0x00000074
   21a64:	.word	0x0000007c
   21a68:	.word	0x00000074
   21a6c:	.word	0x0000007c
   21a70:	.word	0x00000074
   21a74:	.word	0x0000007c
   21a78:	.word	0x00000168
   21a7c:	.word	0x00000180
   21a80:	.word	0x00000188
   21a84:	.word	0x00000190
   21a88:	.word	0x0000019c
   21a8c:	.word	0x000001a8
   21a90:	.word	0x000001bc
   21a94:	.word	0x000001c4
   21a98:	.word	0x000001d0
   21a9c:	.word	0x000001d8
   21aa0:	.word	0x000001e0
   21aa4:	.word	0x000001e8
   21aa8:	.word	0x000000c8
   21aac:	.word	0x000001f0
   21ab0:	.word	0x0000020c
   21ab4:	.word	0x00000214
   21ab8:	str	sl, [sp, #76]	; 0x4c
   21abc:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21ac0:	ldr	r0, [sp, #76]	; 0x4c
   21ac4:	sub	r0, sl, r0
   21ac8:	str	r0, [sp, #72]	; 0x48
   21acc:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21ad0:	mov	r4, #0
   21ad4:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21ad8:	ldrb	r0, [sl]
   21adc:	add	r1, r4, r4, lsl #2
   21ae0:	add	r0, r0, r1, lsl #1
   21ae4:	sub	r4, r0, #48	; 0x30
   21ae8:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21aec:	add	r0, sp, #1104	; 0x450
   21af0:	mov	r1, #0
   21af4:	mov	r2, #2208	; 0x8a0
   21af8:	bl	4c70 <memset@plt>
   21afc:	mov	r0, #46	; 0x2e
   21b00:	strb	r0, [sp, #3304]	; 0xce8
   21b04:	ldr	r0, [sp, #60]	; 0x3c
   21b08:	str	r0, [sp, #1124]	; 0x464
   21b0c:	mov	r0, #5
   21b10:	b	21c3c <readstat_parse_stata_dictionary+0x4d8>
   21b14:	ldr	r0, [sp, #64]	; 0x40
   21b18:	mov	r5, r8
   21b1c:	str	r0, [sp, #1108]	; 0x454
   21b20:	ldr	r0, [sp, #68]	; 0x44
   21b24:	str	r0, [sp, #1104]	; 0x450
   21b28:	ldr	r0, [sp, #36]	; 0x24
   21b2c:	ldr	r8, [sp, #1112]	; 0x458
   21b30:	ldr	r7, [r0, #8]
   21b34:	cmp	r7, #0
   21b38:	beq	21b68 <readstat_parse_stata_dictionary+0x404>
   21b3c:	ldr	r0, [sp, #48]	; 0x30
   21b40:	ldr	r1, [sp, #16]
   21b44:	ldr	r3, [sp, #20]
   21b48:	mov	r2, #0
   21b4c:	str	r0, [sp, #3268]	; 0xcc4
   21b50:	ldr	r0, [sp, #60]	; 0x3c
   21b54:	blx	r7
   21b58:	cmp	r0, #2
   21b5c:	beq	21c64 <readstat_parse_stata_dictionary+0x500>
   21b60:	cmp	r0, #1
   21b64:	beq	21e38 <readstat_parse_stata_dictionary+0x6d4>
   21b68:	ldr	r0, [sp, #48]	; 0x30
   21b6c:	mov	r7, r4
   21b70:	add	r0, r0, #1
   21b74:	str	r0, [sp, #48]	; 0x30
   21b78:	b	21c70 <readstat_parse_stata_dictionary+0x50c>
   21b7c:	mov	r0, r8
   21b80:	mov	r1, #255	; 0xff
   21b84:	b	21b9c <readstat_parse_stata_dictionary+0x438>
   21b88:	ldr	r0, [sp, #28]
   21b8c:	mov	r1, #300	; 0x12c
   21b90:	b	21b9c <readstat_parse_stata_dictionary+0x438>
   21b94:	ldr	r0, [sp, #24]
   21b98:	mov	r1, #1024	; 0x400
   21b9c:	ldr	r2, [sp, #76]	; 0x4c
   21ba0:	ldr	r3, [sp, #72]	; 0x48
   21ba4:	bl	4868 <readstat_copy@plt>
   21ba8:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21bac:	ldr	r0, [sp, #52]	; 0x34
   21bb0:	str	sl, [sp, #32]
   21bb4:	add	r0, r0, #1
   21bb8:	str	r0, [sp, #52]	; 0x34
   21bbc:	mov	r0, sl
   21bc0:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21bc4:	str	r4, [r8, #256]	; 0x100
   21bc8:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21bcc:	sub	r0, r4, #1
   21bd0:	b	21bf8 <readstat_parse_stata_dictionary+0x494>
   21bd4:	sub	r0, r4, #1
   21bd8:	str	r0, [sp, #64]	; 0x40
   21bdc:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21be0:	ldr	r0, [sp, #68]	; 0x44
   21be4:	add	r0, r0, #1
   21be8:	b	21bf8 <readstat_parse_stata_dictionary+0x494>
   21bec:	ldr	r0, [sp, #68]	; 0x44
   21bf0:	add	r0, r4, r0
   21bf4:	sub	r0, r0, #1
   21bf8:	str	r0, [sp, #68]	; 0x44
   21bfc:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21c00:	str	r4, [r8, #260]	; 0x104
   21c04:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21c08:	sub	r0, r4, #1
   21c0c:	str	r0, [r8, #264]	; 0x108
   21c10:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21c14:	mov	r0, #1
   21c18:	b	21c3c <readstat_parse_stata_dictionary+0x4d8>
   21c1c:	mov	r0, #2
   21c20:	b	21c3c <readstat_parse_stata_dictionary+0x4d8>
   21c24:	mov	r0, #3
   21c28:	b	21c3c <readstat_parse_stata_dictionary+0x4d8>
   21c2c:	mov	r0, #4
   21c30:	b	21c3c <readstat_parse_stata_dictionary+0x4d8>
   21c34:	mov	r0, #0
   21c38:	str	r4, [sp, #2716]	; 0xa9c
   21c3c:	str	r0, [sp, #1120]	; 0x460
   21c40:	subs	r9, r9, #1
   21c44:	add	r6, r6, #1
   21c48:	bne	21a2c <readstat_parse_stata_dictionary+0x2c8>
   21c4c:	b	21cd0 <readstat_parse_stata_dictionary+0x56c>
   21c50:	str	r4, [sp, #1112]	; 0x458
   21c54:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21c58:	mov	r0, #44	; 0x2c
   21c5c:	strb	r0, [sp, #3304]	; 0xce8
   21c60:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21c64:	mov	r0, #1
   21c68:	mov	r7, r4
   21c6c:	str	r0, [sp, #1116]	; 0x45c
   21c70:	ldr	r0, [sp, #64]	; 0x40
   21c74:	ldr	r1, [r5, #268]	; 0x10c
   21c78:	mov	r4, #2208	; 0x8a0
   21c7c:	add	r0, r8, r0
   21c80:	mul	r1, r1, r4
   21c84:	mov	r8, r5
   21c88:	str	r0, [sp, #64]	; 0x40
   21c8c:	ldr	r0, [r5, #276]	; 0x114
   21c90:	add	r1, r1, #2208	; 0x8a0
   21c94:	bl	49dc <realloc@plt>
   21c98:	str	r0, [r5, #276]	; 0x114
   21c9c:	ldr	r1, [r5, #268]	; 0x10c
   21ca0:	mla	r0, r1, r4, r0
   21ca4:	add	r2, r1, #1
   21ca8:	add	r1, sp, #1104	; 0x450
   21cac:	str	r2, [r5, #268]	; 0x10c
   21cb0:	mov	r2, #2208	; 0x8a0
   21cb4:	bl	4910 <memcpy@plt>
   21cb8:	ldr	r0, [sp, #60]	; 0x3c
   21cbc:	ldr	r5, [sp, #44]	; 0x2c
   21cc0:	mov	r4, r7
   21cc4:	add	r0, r0, #1
   21cc8:	str	r0, [sp, #60]	; 0x3c
   21ccc:	b	21c40 <readstat_parse_stata_dictionary+0x4dc>
   21cd0:	ldr	r0, [pc, #404]	; 21e6c <readstat_parse_stata_dictionary+0x708>
   21cd4:	add	r0, pc, r0
   21cd8:	ldrb	r0, [r0, r5]
   21cdc:	cmp	r0, #0
   21ce0:	beq	21d50 <readstat_parse_stata_dictionary+0x5ec>
   21ce4:	ldr	r1, [sp, #56]	; 0x38
   21ce8:	add	sl, sl, #1
   21cec:	mov	r9, r4
   21cf0:	mvn	r4, #1
   21cf4:	cmp	sl, r1
   21cf8:	bne	218b0 <readstat_parse_stata_dictionary+0x14c>
   21cfc:	ldr	r7, [sp, #36]	; 0x24
   21d00:	ldr	r5, [sp, #20]
   21d04:	cmp	r0, #155	; 0x9b
   21d08:	bhi	21e28 <readstat_parse_stata_dictionary+0x6c4>
   21d0c:	ldr	r9, [sp, #12]
   21d10:	ldr	r6, [sp, #8]
   21d14:	b	21db4 <readstat_parse_stata_dictionary+0x650>
   21d18:	cmp	r9, #0
   21d1c:	mov	r8, #0
   21d20:	movne	r0, #1
   21d24:	strne	r0, [r9]
   21d28:	b	21e1c <readstat_parse_stata_dictionary+0x6b8>
   21d2c:	mov	r4, #15
   21d30:	b	21d38 <readstat_parse_stata_dictionary+0x5d4>
   21d34:	mov	r4, #3
   21d38:	mov	r8, #0
   21d3c:	b	21de8 <readstat_parse_stata_dictionary+0x684>
   21d40:	mov	r0, #0
   21d44:	mov	sl, r6
   21d48:	str	r6, [sp, #32]
   21d4c:	str	r0, [sp, #52]	; 0x34
   21d50:	ldr	r0, [sp, #56]	; 0x38
   21d54:	cmp	sl, r0
   21d58:	beq	21da4 <readstat_parse_stata_dictionary+0x640>
   21d5c:	ldr	r0, [sp, #32]
   21d60:	add	r4, sp, #80	; 0x50
   21d64:	ldrb	r0, [sl], -r0
   21d68:	add	r1, sl, #1
   21d6c:	str	r1, [sp]
   21d70:	mov	r1, #1024	; 0x400
   21d74:	str	r0, [sp, #4]
   21d78:	ldr	r0, [sp, #52]	; 0x34
   21d7c:	ldr	r2, [pc, #240]	; 21e74 <readstat_parse_stata_dictionary+0x710>
   21d80:	add	r3, r0, #1
   21d84:	mov	r0, r4
   21d88:	add	r2, pc, r2
   21d8c:	bl	4c4c <snprintf@plt>
   21d90:	ldr	r9, [sp, #12]
   21d94:	ldr	r7, [sp, #36]	; 0x24
   21d98:	ldr	r6, [sp, #8]
   21d9c:	ldr	r5, [sp, #20]
   21da0:	b	21dcc <readstat_parse_stata_dictionary+0x668>
   21da4:	ldr	r9, [sp, #12]
   21da8:	ldr	r7, [sp, #36]	; 0x24
   21dac:	ldr	r6, [sp, #8]
   21db0:	ldr	r5, [sp, #20]
   21db4:	add	r4, sp, #80	; 0x50
   21db8:	ldr	r1, [pc, #176]	; 21e70 <readstat_parse_stata_dictionary+0x70c>
   21dbc:	mov	r0, r4
   21dc0:	mov	r2, #59	; 0x3b
   21dc4:	add	r1, pc, r1
   21dc8:	bl	4910 <memcpy@plt>
   21dcc:	ldr	r2, [r7, #24]
   21dd0:	cmp	r2, #0
   21dd4:	beq	21de4 <readstat_parse_stata_dictionary+0x680>
   21dd8:	mov	r0, r4
   21ddc:	mov	r1, r5
   21de0:	blx	r2
   21de4:	mov	r4, #5
   21de8:	ldr	r0, [r7, #32]
   21dec:	ldr	r1, [r0, #4]
   21df0:	ldr	r0, [r0, #20]
   21df4:	blx	r1
   21df8:	mov	r0, r6
   21dfc:	bl	48bc <free@plt>
   21e00:	cmp	r4, #0
   21e04:	beq	21e1c <readstat_parse_stata_dictionary+0x6b8>
   21e08:	cmp	r9, #0
   21e0c:	mov	r0, r8
   21e10:	strne	r4, [r9]
   21e14:	bl	4994 <readstat_schema_free@plt>
   21e18:	mov	r8, #0
   21e1c:	mov	r0, r8
   21e20:	sub	sp, fp, #28
   21e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e28:	ldr	r9, [sp, #12]
   21e2c:	ldr	r6, [sp, #8]
   21e30:	mov	r4, #0
   21e34:	b	21de8 <readstat_parse_stata_dictionary+0x684>
   21e38:	ldr	r9, [sp, #12]
   21e3c:	ldr	r7, [sp, #36]	; 0x24
   21e40:	ldr	r6, [sp, #8]
   21e44:	mov	r4, #4
   21e48:	mov	r8, r5
   21e4c:	b	21de8 <readstat_parse_stata_dictionary+0x684>
   21e50:	.word	0x00010ede
   21e54:	.word	0x00010c5a
   21e58:	.word	0x0001091c
   21e5c:	.word	0x00010d78
   21e60:	.word	0x000115f6
   21e64:	.word	0x0001157b
   21e68:	.word	0x0001117d
   21e6c:	.word	0x00010b5b
   21e70:	.word	0x00011224
   21e74:	.word	0x000112a0
   21e78:	.word	0x000114ef

00021e7c <readstat_parse_txt>:
   21e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e80:	add	fp, sp, #28
   21e84:	sub	sp, sp, #60	; 0x3c
   21e88:	sub	sp, sp, #4096	; 0x1000
   21e8c:	ldr	r8, [r0, #32]
   21e90:	str	r0, [sp, #44]	; 0x2c
   21e94:	ldr	r0, [r0, #40]	; 0x28
   21e98:	mov	r4, r1
   21e9c:	mov	sl, #0
   21ea0:	mov	r9, #0
   21ea4:	str	r3, [sp, #36]	; 0x24
   21ea8:	str	r2, [sp, #40]	; 0x28
   21eac:	cmp	r0, #0
   21eb0:	beq	21ed8 <readstat_parse_txt+0x5c>
   21eb4:	ldr	r1, [sp, #44]	; 0x2c
   21eb8:	mov	r9, #0
   21ebc:	ldr	r1, [r1, #36]	; 0x24
   21ec0:	cmp	r1, #0
   21ec4:	beq	21ed8 <readstat_parse_txt+0x5c>
   21ec8:	bl	4b08 <iconv_open@plt>
   21ecc:	mov	r9, r0
   21ed0:	cmn	r0, #1
   21ed4:	beq	21fac <readstat_parse_txt+0x130>
   21ed8:	ldr	r2, [r8]
   21edc:	ldr	r1, [r8, #20]
   21ee0:	mov	r0, r4
   21ee4:	blx	r2
   21ee8:	cmn	r0, #1
   21eec:	beq	21fa4 <readstat_parse_txt+0x128>
   21ef0:	ldr	r0, [sp, #40]	; 0x28
   21ef4:	ldr	r4, [r0, #256]	; 0x100
   21ef8:	lsl	r0, r4, #2
   21efc:	bl	4ae4 <malloc@plt>
   21f00:	mov	r6, #3
   21f04:	cmp	r0, #0
   21f08:	beq	21fb4 <readstat_parse_txt+0x138>
   21f0c:	ldr	r3, [sp, #40]	; 0x28
   21f10:	mov	sl, r0
   21f14:	cmp	r4, #1
   21f18:	blt	21f34 <readstat_parse_txt+0xb8>
   21f1c:	ldr	r0, [r3, #260]	; 0x104
   21f20:	mov	r1, sl
   21f24:	mov	r2, r4
   21f28:	str	r0, [r1], #4
   21f2c:	subs	r2, r2, #1
   21f30:	bne	21f28 <readstat_parse_txt+0xac>
   21f34:	ldr	r0, [r3, #268]	; 0x10c
   21f38:	cmp	r0, #1
   21f3c:	blt	21f78 <readstat_parse_txt+0xfc>
   21f40:	ldr	r1, [sp, #40]	; 0x28
   21f44:	mov	r2, #0
   21f48:	ldr	r1, [r1, #276]	; 0x114
   21f4c:	add	r1, r1, #4
   21f50:	ldmda	r1, {r3, r7}
   21f54:	ldr	r6, [r1, #4]
   21f58:	add	r2, r2, #1
   21f5c:	add	r1, r1, #2208	; 0x8a0
   21f60:	ldr	r5, [sl, r3, lsl #2]
   21f64:	add	r7, r6, r7
   21f68:	cmp	r5, r7
   21f6c:	strcc	r7, [sl, r3, lsl #2]
   21f70:	cmp	r2, r0
   21f74:	blt	21f50 <readstat_parse_txt+0xd4>
   21f78:	cmp	r4, #1
   21f7c:	blt	21fc4 <readstat_parse_txt+0x148>
   21f80:	mov	r0, #0
   21f84:	mov	r1, sl
   21f88:	ldr	r2, [r1], #4
   21f8c:	cmp	r0, r2
   21f90:	movcc	r0, r2
   21f94:	subs	r4, r4, #1
   21f98:	bne	21f88 <readstat_parse_txt+0x10c>
   21f9c:	add	r0, r0, #2
   21fa0:	b	21fc8 <readstat_parse_txt+0x14c>
   21fa4:	mov	r6, #1
   21fa8:	b	21fb8 <readstat_parse_txt+0x13c>
   21fac:	mov	r6, #7
   21fb0:	mov	r9, #0
   21fb4:	mov	sl, #0
   21fb8:	mov	r4, #0
   21fbc:	mov	r5, #0
   21fc0:	b	22488 <readstat_parse_txt+0x60c>
   21fc4:	mov	r0, #2
   21fc8:	bl	4ae4 <malloc@plt>
   21fcc:	cmp	r0, #0
   21fd0:	beq	22208 <readstat_parse_txt+0x38c>
   21fd4:	ldr	r1, [sp, #40]	; 0x28
   21fd8:	mov	r6, r0
   21fdc:	ldr	r0, [r1, #264]	; 0x108
   21fe0:	cmp	r0, #2
   21fe4:	blt	2202c <readstat_parse_txt+0x1b0>
   21fe8:	mov	r1, #0
   21fec:	sub	r5, r0, #1
   21ff0:	add	r4, sp, #56	; 0x38
   21ff4:	strb	r1, [sp, #56]	; 0x38
   21ff8:	ldr	r3, [r8, #12]
   21ffc:	ldr	r2, [r8, #20]
   22000:	mov	r0, r4
   22004:	mov	r1, #1
   22008:	blx	r3
   2200c:	cmp	r0, #1
   22010:	bne	22020 <readstat_parse_txt+0x1a4>
   22014:	ldrb	r0, [sp, #56]	; 0x38
   22018:	cmp	r0, #10
   2201c:	bne	21ff8 <readstat_parse_txt+0x17c>
   22020:	subs	r5, r5, #1
   22024:	bne	21ff8 <readstat_parse_txt+0x17c>
   22028:	ldr	r1, [sp, #40]	; 0x28
   2202c:	ldrb	r0, [r1, #272]	; 0x110
   22030:	str	sl, [sp, #12]
   22034:	str	r9, [sp, #16]
   22038:	str	r6, [sp, #32]
   2203c:	cmp	r0, #0
   22040:	beq	22220 <readstat_parse_txt+0x3a4>
   22044:	mov	r0, #4096	; 0x1000
   22048:	mov	sl, #4096	; 0x1000
   2204c:	bl	4ae4 <malloc@plt>
   22050:	ldr	r1, [sp, #44]	; 0x2c
   22054:	ldr	r2, [sp, #40]	; 0x28
   22058:	mov	r9, r0
   2205c:	ldr	r1, [r1, #32]
   22060:	ldr	r0, [r2, #268]	; 0x10c
   22064:	str	r1, [sp, #48]	; 0x30
   22068:	mov	r1, #0
   2206c:	str	r1, [sp, #20]
   22070:	cmp	r0, #1
   22074:	blt	221dc <readstat_parse_txt+0x360>
   22078:	mov	r4, #0
   2207c:	sub	r0, r0, #1
   22080:	ldr	r6, [r2, #276]	; 0x114
   22084:	mov	r5, #10
   22088:	mov	r1, #1
   2208c:	cmp	r4, r0
   22090:	ldr	r0, [sp, #48]	; 0x30
   22094:	ldrbne	r5, [r2, #272]	; 0x110
   22098:	ldr	r3, [r0, #12]
   2209c:	ldr	r2, [r0, #20]
   220a0:	mov	r0, r9
   220a4:	blx	r3
   220a8:	cmp	r0, #1
   220ac:	bne	2212c <readstat_parse_txt+0x2b0>
   220b0:	str	r6, [sp, #24]
   220b4:	str	r4, [sp, #28]
   220b8:	mov	r6, #0
   220bc:	mov	r7, #1
   220c0:	mov	r4, r9
   220c4:	ldrb	r0, [r9]
   220c8:	cmp	r5, r0
   220cc:	beq	2213c <readstat_parse_txt+0x2c0>
   220d0:	add	r6, r6, #1
   220d4:	cmp	r7, sl
   220d8:	bne	220f0 <readstat_parse_txt+0x274>
   220dc:	lsl	sl, sl, #1
   220e0:	mov	r0, r4
   220e4:	mov	r1, sl
   220e8:	bl	49dc <realloc@plt>
   220ec:	mov	r4, r0
   220f0:	ldr	r1, [sp, #48]	; 0x30
   220f4:	add	r0, r4, r7
   220f8:	add	r9, r4, r6
   220fc:	ldr	r3, [r1, #12]
   22100:	ldr	r2, [r1, #20]
   22104:	mov	r1, #1
   22108:	blx	r3
   2210c:	add	r7, r7, #1
   22110:	cmp	r0, #1
   22114:	beq	220c4 <readstat_parse_txt+0x248>
   22118:	mov	r9, r4
   2211c:	ldr	r4, [sp, #28]
   22120:	ldr	r6, [sp, #24]
   22124:	sub	r7, r7, #1
   22128:	b	22130 <readstat_parse_txt+0x2b4>
   2212c:	mov	r7, #0
   22130:	cmn	r0, #1
   22134:	bne	22148 <readstat_parse_txt+0x2cc>
   22138:	b	22218 <readstat_parse_txt+0x39c>
   2213c:	mov	r9, r4
   22140:	ldr	r4, [sp, #28]
   22144:	ldr	r6, [sp, #24]
   22148:	cmn	r7, #1
   2214c:	beq	22218 <readstat_parse_txt+0x39c>
   22150:	cmp	r7, #0
   22154:	beq	223b0 <readstat_parse_txt+0x534>
   22158:	ldr	r0, [sp, #44]	; 0x2c
   2215c:	ldr	r0, [r0, #16]
   22160:	cmp	r0, #0
   22164:	beq	221c8 <readstat_parse_txt+0x34c>
   22168:	mov	r0, #2208	; 0x8a0
   2216c:	mla	r3, r4, r0, r6
   22170:	ldr	r0, [r3, #12]
   22174:	cmp	r0, #0
   22178:	bne	221c8 <readstat_parse_txt+0x34c>
   2217c:	sub	r0, r7, #1
   22180:	cmp	r0, #1
   22184:	blt	22198 <readstat_parse_txt+0x31c>
   22188:	sub	r1, r7, #2
   2218c:	ldrb	r2, [r9, r1]
   22190:	cmp	r2, #13
   22194:	moveq	r0, r1
   22198:	mov	r1, #0
   2219c:	str	r0, [sp, #4]
   221a0:	ldr	r2, [sp, #20]
   221a4:	str	r9, [sp]
   221a8:	strb	r1, [r9, r0]
   221ac:	ldr	r0, [sp, #36]	; 0x24
   221b0:	ldr	r1, [sp, #16]
   221b4:	str	r0, [sp, #8]
   221b8:	ldr	r0, [sp, #44]	; 0x2c
   221bc:	bl	224e0 <handle_value>
   221c0:	cmp	r0, #0
   221c4:	bne	224d0 <readstat_parse_txt+0x654>
   221c8:	ldr	r2, [sp, #40]	; 0x28
   221cc:	add	r4, r4, #1
   221d0:	ldr	r0, [r2, #268]	; 0x10c
   221d4:	cmp	r4, r0
   221d8:	blt	2207c <readstat_parse_txt+0x200>
   221dc:	ldr	r1, [sp, #44]	; 0x2c
   221e0:	ldr	r3, [sp, #20]
   221e4:	ldr	r5, [sp, #32]
   221e8:	ldr	r1, [r1, #44]	; 0x2c
   221ec:	add	r3, r3, #1
   221f0:	str	r3, [sp, #20]
   221f4:	cmp	r3, r1
   221f8:	bne	22070 <readstat_parse_txt+0x1f4>
   221fc:	ldr	sl, [sp, #12]
   22200:	mov	r6, #0
   22204:	b	223bc <readstat_parse_txt+0x540>
   22208:	mov	r5, #0
   2220c:	mov	r4, sl
   22210:	mov	r6, #3
   22214:	b	22488 <readstat_parse_txt+0x60c>
   22218:	mov	r6, #2
   2221c:	b	223b4 <readstat_parse_txt+0x538>
   22220:	ldr	r0, [r1, #256]	; 0x100
   22224:	ldr	r1, [sp, #44]	; 0x2c
   22228:	ldr	r7, [r1, #32]
   2222c:	mov	r1, #0
   22230:	str	r1, [sp, #20]
   22234:	cmp	r0, #1
   22238:	blt	2238c <readstat_parse_txt+0x510>
   2223c:	mov	r9, #0
   22240:	mov	sl, #0
   22244:	ldr	r4, [sp, #12]
   22248:	ldr	r3, [r7, #12]
   2224c:	ldr	r2, [r7, #20]
   22250:	ldr	r0, [sp, #32]
   22254:	ldr	r1, [r4, sl, lsl #2]
   22258:	blx	r3
   2225c:	cmp	r0, #0
   22260:	beq	223d0 <readstat_parse_txt+0x554>
   22264:	ldr	r1, [r4, sl, lsl #2]
   22268:	cmp	r0, r1
   2226c:	bcc	223dc <readstat_parse_txt+0x560>
   22270:	ldr	r3, [sp, #40]	; 0x28
   22274:	ldr	r0, [r3, #268]	; 0x10c
   22278:	cmp	r9, r0
   2227c:	bge	22338 <readstat_parse_txt+0x4bc>
   22280:	mov	r1, #2208	; 0x8a0
   22284:	mov	ip, #0
   22288:	mul	r4, r9, r1
   2228c:	ldr	r1, [r3, #276]	; 0x114
   22290:	mov	r6, r1
   22294:	ldr	r2, [r6, r4]!
   22298:	cmp	r2, sl
   2229c:	bne	2233c <readstat_parse_txt+0x4c0>
   222a0:	add	r1, r1, r4
   222a4:	ldr	r5, [r1, #8]
   222a8:	cmp	ip, r5, lsr #12
   222ac:	bne	22324 <readstat_parse_txt+0x4a8>
   222b0:	ldr	r2, [sp, #44]	; 0x2c
   222b4:	ldr	r2, [r2, #16]
   222b8:	cmp	r2, #0
   222bc:	beq	22324 <readstat_parse_txt+0x4a8>
   222c0:	ldr	r2, [r1, #12]
   222c4:	cmp	r2, #0
   222c8:	bne	22324 <readstat_parse_txt+0x4a8>
   222cc:	ldr	r0, [r1, #4]
   222d0:	ldr	r1, [sp, #32]
   222d4:	mov	r2, r5
   222d8:	add	r1, r1, r0
   222dc:	add	r0, sp, #56	; 0x38
   222e0:	bl	4910 <memcpy@plt>
   222e4:	add	r0, sp, #56	; 0x38
   222e8:	mov	r1, #0
   222ec:	ldr	r2, [sp, #20]
   222f0:	mov	r3, r6
   222f4:	strb	r1, [r0, r5]
   222f8:	stm	sp, {r0, r5}
   222fc:	ldr	r0, [sp, #36]	; 0x24
   22300:	ldr	r1, [sp, #16]
   22304:	str	r0, [sp, #8]
   22308:	ldr	r0, [sp, #44]	; 0x2c
   2230c:	bl	224e0 <handle_value>
   22310:	cmp	r0, #0
   22314:	bne	223e4 <readstat_parse_txt+0x568>
   22318:	ldr	r3, [sp, #40]	; 0x28
   2231c:	mov	ip, #0
   22320:	ldr	r0, [r3, #268]	; 0x10c
   22324:	add	r9, r9, #1
   22328:	add	r4, r4, #2208	; 0x8a0
   2232c:	cmp	r9, r0
   22330:	blt	2228c <readstat_parse_txt+0x410>
   22334:	b	2233c <readstat_parse_txt+0x4c0>
   22338:	mov	ip, #0
   2233c:	ldr	r0, [r3, #260]	; 0x104
   22340:	add	r4, sp, #55	; 0x37
   22344:	cmp	r0, #0
   22348:	bne	2237c <readstat_parse_txt+0x500>
   2234c:	strb	ip, [sp, #55]	; 0x37
   22350:	ldr	r3, [r7, #12]
   22354:	ldr	r2, [r7, #20]
   22358:	mov	r0, r4
   2235c:	mov	r1, #1
   22360:	blx	r3
   22364:	cmp	r0, #1
   22368:	bne	22378 <readstat_parse_txt+0x4fc>
   2236c:	ldrb	r0, [sp, #55]	; 0x37
   22370:	cmp	r0, #10
   22374:	bne	22350 <readstat_parse_txt+0x4d4>
   22378:	ldr	r3, [sp, #40]	; 0x28
   2237c:	ldr	r0, [r3, #256]	; 0x100
   22380:	add	sl, sl, #1
   22384:	cmp	sl, r0
   22388:	blt	22244 <readstat_parse_txt+0x3c8>
   2238c:	ldr	r1, [sp, #44]	; 0x2c
   22390:	ldr	r2, [sp, #20]
   22394:	ldr	r1, [r1, #44]	; 0x2c
   22398:	add	r2, r2, #1
   2239c:	str	r2, [sp, #20]
   223a0:	cmp	r2, r1
   223a4:	bne	22234 <readstat_parse_txt+0x3b8>
   223a8:	mov	r6, #0
   223ac:	b	223e8 <readstat_parse_txt+0x56c>
   223b0:	mov	r6, #0
   223b4:	ldr	sl, [sp, #12]
   223b8:	ldr	r5, [sp, #32]
   223bc:	cmp	r9, #0
   223c0:	beq	223f0 <readstat_parse_txt+0x574>
   223c4:	mov	r0, r9
   223c8:	bl	48bc <free@plt>
   223cc:	b	223f0 <readstat_parse_txt+0x574>
   223d0:	mov	r6, #0
   223d4:	mov	sl, r4
   223d8:	b	223ec <readstat_parse_txt+0x570>
   223dc:	mov	r6, #2
   223e0:	b	223e8 <readstat_parse_txt+0x56c>
   223e4:	mov	r6, r0
   223e8:	ldr	sl, [sp, #12]
   223ec:	ldr	r5, [sp, #32]
   223f0:	cmp	r6, #0
   223f4:	beq	22400 <readstat_parse_txt+0x584>
   223f8:	ldr	r9, [sp, #16]
   223fc:	b	22484 <readstat_parse_txt+0x608>
   22400:	ldr	r0, [sp, #44]	; 0x2c
   22404:	ldr	r9, [sp, #16]
   22408:	ldr	r2, [r0]
   2240c:	cmp	r2, #0
   22410:	beq	22480 <readstat_parse_txt+0x604>
   22414:	ldr	r0, [sp, #20]
   22418:	vmov.i32	q8, #0	; 0x00000000
   2241c:	str	r0, [sp, #56]	; 0x38
   22420:	asr	r0, r0, #31
   22424:	str	r0, [sp, #60]	; 0x3c
   22428:	ldr	r0, [sp, #40]	; 0x28
   2242c:	ldr	r1, [r0, #268]	; 0x10c
   22430:	add	r0, sp, #56	; 0x38
   22434:	add	r3, r0, #16
   22438:	vst1.64	{d16-d17}, [r3]
   2243c:	add	r3, r0, #32
   22440:	vst1.64	{d16-d17}, [r3]
   22444:	mov	r3, #0
   22448:	str	r3, [sp, #104]	; 0x68
   2244c:	ldrb	r3, [sp, #108]	; 0x6c
   22450:	and	r3, r3, #254	; 0xfe
   22454:	strb	r3, [sp, #108]	; 0x6c
   22458:	str	r1, [sp, #64]	; 0x40
   2245c:	asr	r1, r1, #31
   22460:	str	r1, [sp, #68]	; 0x44
   22464:	ldr	r1, [sp, #36]	; 0x24
   22468:	blx	r2
   2246c:	sub	r0, r0, #1
   22470:	clz	r0, r0
   22474:	lsr	r0, r0, #5
   22478:	lsl	r6, r0, #2
   2247c:	b	22484 <readstat_parse_txt+0x608>
   22480:	mov	r6, #0
   22484:	mov	r4, sl
   22488:	ldr	r1, [r8, #4]
   2248c:	ldr	r0, [r8, #20]
   22490:	blx	r1
   22494:	cmp	r5, #0
   22498:	beq	224a4 <readstat_parse_txt+0x628>
   2249c:	mov	r0, r5
   224a0:	bl	48bc <free@plt>
   224a4:	cmp	r4, #0
   224a8:	beq	224b4 <readstat_parse_txt+0x638>
   224ac:	mov	r0, sl
   224b0:	bl	48bc <free@plt>
   224b4:	cmp	r9, #0
   224b8:	beq	224c4 <readstat_parse_txt+0x648>
   224bc:	mov	r0, r9
   224c0:	bl	47d8 <iconv_close@plt>
   224c4:	mov	r0, r6
   224c8:	sub	sp, fp, #28
   224cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224d0:	ldr	sl, [sp, #12]
   224d4:	ldr	r5, [sp, #32]
   224d8:	mov	r6, r0
   224dc:	b	223c4 <readstat_parse_txt+0x548>

000224e0 <handle_value>:
   224e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   224e4:	add	fp, sp, #28
   224e8:	sub	sp, sp, #12
   224ec:	ldr	r6, [fp, #12]
   224f0:	mov	r7, r0
   224f4:	mov	r0, #1
   224f8:	mov	r4, r3
   224fc:	mov	r8, r1
   22500:	str	r2, [fp, #-40]	; 0xffffffd8
   22504:	orr	r9, r0, r6, lsl #2
   22508:	add	r0, r9, #7
   2250c:	bic	r0, r0, #4
   22510:	sub	r5, sp, r0
   22514:	mov	sp, r5
   22518:	ldr	sl, [r4, #16]!
   2251c:	mov	r0, sl
   22520:	bl	4820 <readstat_type_class@plt>
   22524:	ldr	r3, [fp, #8]
   22528:	cmp	r0, #0
   2252c:	beq	22568 <handle_value+0x88>
   22530:	mov	r6, #0
   22534:	sub	r1, fp, #36	; 0x24
   22538:	str	r6, [fp, #-36]	; 0xffffffdc
   2253c:	ldr	r0, [r4]
   22540:	cmp	r0, #4
   22544:	beq	225a0 <handle_value+0xc0>
   22548:	cmp	r0, #5
   2254c:	bne	225b8 <handle_value+0xd8>
   22550:	mov	r0, r3
   22554:	mov	r5, r3
   22558:	bl	4cd0 <strtod@plt>
   2255c:	mov	r3, r5
   22560:	vmov	r5, r6, d0
   22564:	b	225d8 <handle_value+0xf8>
   22568:	sub	sp, sp, #8
   2256c:	mov	r2, r3
   22570:	mov	r0, r5
   22574:	mov	r1, r9
   22578:	mov	r3, r6
   2257c:	str	r8, [sp]
   22580:	bl	4c04 <readstat_convert@plt>
   22584:	add	sp, sp, #8
   22588:	cmp	r0, #0
   2258c:	bne	22630 <handle_value+0x150>
   22590:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22594:	mov	r6, #0
   22598:	mov	r2, #0
   2259c:	b	225f4 <handle_value+0x114>
   225a0:	mov	r0, r3
   225a4:	mov	r5, r3
   225a8:	bl	4aa8 <strtof@plt>
   225ac:	mov	r3, r5
   225b0:	vmov	r5, s0
   225b4:	b	225d8 <handle_value+0xf8>
   225b8:	mov	r0, r3
   225bc:	mov	r2, #10
   225c0:	mov	r5, r3
   225c4:	bl	482c <strtol@plt>
   225c8:	mov	r3, r5
   225cc:	mov	r5, r0
   225d0:	mov	r6, #0
   225d4:	mov	sl, #3
   225d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   225dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   225e0:	mov	r2, #0
   225e4:	sub	r1, r1, r3
   225e8:	clz	r1, r1
   225ec:	lsr	r1, r1, #5
   225f0:	orr	r2, r2, r1, lsl #8
   225f4:	ldr	r1, [fp, #16]
   225f8:	ldr	r7, [r7, #16]
   225fc:	sub	sp, sp, #16
   22600:	str	r2, [sp, #4]
   22604:	str	r1, [sp, #8]
   22608:	mov	r1, r4
   2260c:	mov	r2, r5
   22610:	mov	r3, r6
   22614:	str	sl, [sp]
   22618:	blx	r7
   2261c:	add	sp, sp, #16
   22620:	sub	r0, r0, #1
   22624:	clz	r0, r0
   22628:	lsr	r0, r0, #5
   2262c:	lsl	r0, r0, #2
   22630:	sub	sp, fp, #28
   22634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022638 <zsav_ctx_init>:
   22638:	push	{r4, r5, r6, r7, fp, lr}
   2263c:	add	fp, sp, #16
   22640:	mov	r6, r0
   22644:	mov	r0, #1
   22648:	mov	r1, #40	; 0x28
   2264c:	mov	r4, r3
   22650:	mov	r5, r2
   22654:	bl	4778 <calloc@plt>
   22658:	mov	r7, r0
   2265c:	mov	r0, r6
   22660:	bl	4ae4 <malloc@plt>
   22664:	mov	r1, #10
   22668:	str	r1, [r7, #12]
   2266c:	str	r0, [r7]
   22670:	mov	r0, #10
   22674:	mov	r1, #4
   22678:	bl	4778 <calloc@plt>
   2267c:	movw	r2, #61440	; 0xf000
   22680:	mov	r1, #0
   22684:	mvn	r3, #0
   22688:	movt	r2, #63	; 0x3f
   2268c:	str	r1, [r7, #20]
   22690:	str	r2, [r7, #16]
   22694:	str	r5, [r7, #24]
   22698:	str	r4, [r7, #28]
   2269c:	str	r3, [r7, #32]
   226a0:	str	r0, [r7, #4]
   226a4:	mov	r0, r7
   226a8:	pop	{r4, r5, r6, r7, fp, pc}

000226ac <zsav_ctx_free>:
   226ac:	push	{r4, r5, r6, sl, fp, lr}
   226b0:	add	fp, sp, #16
   226b4:	mov	r4, r0
   226b8:	ldr	r0, [r0, #8]
   226bc:	cmp	r0, #1
   226c0:	blt	226f8 <zsav_ctx_free+0x4c>
   226c4:	mov	r6, #0
   226c8:	ldr	r0, [r4, #4]
   226cc:	ldr	r5, [r0, r6, lsl #2]
   226d0:	add	r0, r5, #8
   226d4:	bl	4ce8 <deflateEnd@plt>
   226d8:	ldr	r0, [r5, #64]	; 0x40
   226dc:	bl	48bc <free@plt>
   226e0:	mov	r0, r5
   226e4:	bl	48bc <free@plt>
   226e8:	ldr	r0, [r4, #8]
   226ec:	add	r6, r6, #1
   226f0:	cmp	r6, r0
   226f4:	blt	226c8 <zsav_ctx_free+0x1c>
   226f8:	ldr	r0, [r4, #4]
   226fc:	bl	48bc <free@plt>
   22700:	ldr	r0, [r4]
   22704:	bl	48bc <free@plt>
   22708:	mov	r0, r4
   2270c:	pop	{r4, r5, r6, sl, fp, lr}
   22710:	b	48bc <free@plt>

00022714 <zsav_add_block>:
   22714:	push	{r4, r5, r6, sl, fp, lr}
   22718:	add	fp, sp, #16
   2271c:	ldrd	r2, [r0, #8]
   22720:	mov	r4, r0
   22724:	cmp	r2, r3
   22728:	bne	22744 <zsav_add_block+0x30>
   2272c:	lsl	r0, r2, #1
   22730:	lsl	r1, r2, #3
   22734:	str	r0, [r4, #12]
   22738:	ldr	r0, [r4, #4]
   2273c:	bl	49dc <realloc@plt>
   22740:	str	r0, [r4, #4]
   22744:	mov	r0, #1
   22748:	mov	r1, #72	; 0x48
   2274c:	bl	4778 <calloc@plt>
   22750:	mov	r5, r0
   22754:	ldmib	r4, {r0, r1}
   22758:	add	r2, r1, #1
   2275c:	mov	r3, #56	; 0x38
   22760:	str	r2, [r4, #8]
   22764:	add	r6, r5, #8
   22768:	str	r5, [r0, r1, lsl #2]
   2276c:	mov	r0, r6
   22770:	ldr	r1, [r4, #32]
   22774:	ldr	r2, [pc, #36]	; 227a0 <zsav_add_block+0x8c>
   22778:	add	r2, pc, r2
   2277c:	bl	4afc <deflateInit_@plt>
   22780:	ldr	r1, [r4, #16]
   22784:	mov	r0, r6
   22788:	bl	4880 <deflateBound@plt>
   2278c:	str	r0, [r5, #68]	; 0x44
   22790:	bl	4ae4 <malloc@plt>
   22794:	str	r0, [r5, #64]	; 0x40
   22798:	mov	r0, r5
   2279c:	pop	{r4, r5, r6, sl, fp, pc}
   227a0:	.word	0x000108e7

000227a4 <zsav_current_block>:
   227a4:	ldr	r1, [r0, #8]
   227a8:	cmp	r1, #0
   227ac:	moveq	r0, #0
   227b0:	bxeq	lr
   227b4:	ldr	r0, [r0, #4]
   227b8:	add	r0, r0, r1, lsl #2
   227bc:	ldr	r0, [r0, #-4]
   227c0:	bx	lr

000227c4 <zsav_compress_row>:
   227c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   227c8:	add	fp, sp, #28
   227cc:	sub	sp, sp, #12
   227d0:	mov	r4, r0
   227d4:	ldr	r0, [r3, #8]
   227d8:	mov	r9, r3
   227dc:	mov	r6, r2
   227e0:	mov	sl, r1
   227e4:	cmp	r0, #0
   227e8:	beq	22800 <zsav_compress_row+0x3c>
   227ec:	ldr	r1, [r9, #4]
   227f0:	add	r0, r1, r0, lsl #2
   227f4:	ldr	r5, [r0, #-4]
   227f8:	cmp	r5, #0
   227fc:	bne	2280c <zsav_compress_row+0x48>
   22800:	mov	r0, r9
   22804:	bl	4af0 <zsav_add_block@plt>
   22808:	mov	r5, r0
   2280c:	str	r4, [r5, #8]
   22810:	str	sl, [r5, #12]
   22814:	mov	r7, r9
   22818:	mov	r3, r4
   2281c:	str	r6, [sp]
   22820:	ldr	r0, [r5, #4]
   22824:	ldr	r1, [r5, #64]	; 0x40
   22828:	ldr	r2, [r5, #68]	; 0x44
   2282c:	ldr	r8, [r5]
   22830:	add	r1, r1, r0
   22834:	sub	r0, r2, r0
   22838:	str	r1, [r5, #20]
   2283c:	str	r0, [r5, #24]
   22840:	ldr	r4, [r7, #16]!
   22844:	ldr	r1, [r7, #4]
   22848:	subs	r0, r4, r8
   2284c:	sbc	r1, r1, r8, asr #31
   22850:	subs	r2, r0, sl
   22854:	sbcs	r1, r1, #0
   22858:	bge	228f8 <zsav_compress_row+0x134>
   2285c:	mov	r6, #0
   22860:	stmib	sp, {r3, sl}
   22864:	str	r0, [r5, #12]
   22868:	add	r0, r5, #8
   2286c:	mov	r1, #4
   22870:	bl	4a24 <deflate@plt>
   22874:	cmp	r0, #1
   22878:	bne	22934 <zsav_compress_row+0x170>
   2287c:	ldr	r1, [r5, #24]
   22880:	ldr	r2, [r5, #68]	; 0x44
   22884:	sub	r0, r4, r8
   22888:	add	r6, r0, r6
   2288c:	ldr	r0, [r5, #12]
   22890:	sub	r1, r2, r1
   22894:	str	r1, [r5, #4]
   22898:	ldr	r1, [r7]
   2289c:	sub	r0, r1, r0
   228a0:	str	r0, [r5]
   228a4:	ldr	r0, [sp, #8]
   228a8:	sub	sl, r0, r6
   228ac:	mov	r0, r9
   228b0:	bl	4af0 <zsav_add_block@plt>
   228b4:	mov	r5, r0
   228b8:	ldr	r0, [sp, #4]
   228bc:	add	r0, r0, r6
   228c0:	str	r0, [r5, #8]
   228c4:	str	sl, [r5, #12]
   228c8:	ldr	r0, [r5, #64]	; 0x40
   228cc:	ldr	r1, [r5, #68]	; 0x44
   228d0:	ldr	r8, [r5]
   228d4:	str	r0, [r5, #20]
   228d8:	str	r1, [r5, #24]
   228dc:	ldr	r4, [r7]
   228e0:	ldr	r1, [r7, #4]
   228e4:	subs	r0, r4, r8
   228e8:	sbc	r1, r1, r8, asr #31
   228ec:	subs	r2, r0, sl
   228f0:	sbcs	r1, r1, #0
   228f4:	blt	22864 <zsav_compress_row+0xa0>
   228f8:	ldr	r1, [sp]
   228fc:	add	r0, r5, #8
   22900:	cmp	r1, #0
   22904:	movwne	r1, #1
   22908:	lsl	r1, r1, #2
   2290c:	bl	4a24 <deflate@plt>
   22910:	ldr	r2, [r5, #24]
   22914:	ldr	r3, [r5, #68]	; 0x44
   22918:	ldr	r1, [r5, #12]
   2291c:	sub	r2, r3, r2
   22920:	sub	r1, sl, r1
   22924:	str	r2, [r5, #4]
   22928:	ldr	r2, [r5]
   2292c:	add	r1, r1, r2
   22930:	str	r1, [r5]
   22934:	sub	sp, fp, #28
   22938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002293c <zsav_read_compressed_data>:
   2293c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22940:	add	fp, sp, #28
   22944:	sub	sp, sp, #148	; 0x94
   22948:	vmov.i32	q8, #0	; 0x00000000
   2294c:	mov	r4, r1
   22950:	mov	r5, r0
   22954:	ldr	r7, [r0, #36]	; 0x24
   22958:	ldr	r8, [r0, #344]	; 0x158
   2295c:	mov	r0, #0
   22960:	mov	r1, #32
   22964:	add	r2, sp, #88	; 0x58
   22968:	add	r6, sp, #64	; 0x40
   2296c:	str	r0, [fp, #-32]	; 0xffffffe0
   22970:	vst1.64	{d16-d17}, [r2], r1
   22974:	ldr	r1, [r5, #392]	; 0x188
   22978:	ldr	r3, [r5, #396]	; 0x18c
   2297c:	str	r3, [sp, #108]	; 0x6c
   22980:	str	r1, [sp, #104]	; 0x68
   22984:	vldr	d16, [r5, #416]	; 0x1a0
   22988:	str	r0, [r2]
   2298c:	str	r0, [r2, #4]
   22990:	str	r0, [sp, #128]	; 0x80
   22994:	vstr	d16, [sp, #112]	; 0x70
   22998:	ldrb	r1, [r5, #436]	; 0x1b4
   2299c:	str	r0, [sp, #136]	; 0x88
   229a0:	and	r0, r1, #1
   229a4:	mov	r1, #24
   229a8:	str	r0, [sp, #132]	; 0x84
   229ac:	mov	r0, r6
   229b0:	ldr	r3, [r7, #12]
   229b4:	ldr	r2, [r7, #20]
   229b8:	blx	r3
   229bc:	mov	r9, #2
   229c0:	cmp	r0, #24
   229c4:	bcc	22ed0 <zsav_read_compressed_data+0x594>
   229c8:	ldrb	r0, [r5, #436]	; 0x1b4
   229cc:	str	r4, [sp, #36]	; 0x24
   229d0:	add	r4, r6, #8
   229d4:	add	r6, r6, #16
   229d8:	str	r8, [sp, #32]
   229dc:	tst	r0, #1
   229e0:	bne	229ec <zsav_read_compressed_data+0xb0>
   229e4:	ldrd	r0, [r4]
   229e8:	b	22a10 <zsav_read_compressed_data+0xd4>
   229ec:	ldr	r0, [sp, #64]	; 0x40
   229f0:	ldr	r1, [sp, #68]	; 0x44
   229f4:	bl	479c <byteswap8@plt>
   229f8:	ldrb	r2, [r5, #436]	; 0x1b4
   229fc:	str	r1, [sp, #68]	; 0x44
   22a00:	str	r0, [sp, #64]	; 0x40
   22a04:	ldrd	r0, [r4]
   22a08:	tst	r2, #1
   22a0c:	bne	22acc <zsav_read_compressed_data+0x190>
   22a10:	strd	r0, [r4]
   22a14:	ldrd	r0, [r6]
   22a18:	strd	r0, [r6]
   22a1c:	mov	r0, #0
   22a20:	mov	r1, #1
   22a24:	ldr	r3, [r7, #8]
   22a28:	ldr	r2, [r7, #20]
   22a2c:	ldr	r8, [sp, #64]	; 0x40
   22a30:	ldr	sl, [sp, #68]	; 0x44
   22a34:	blx	r3
   22a38:	sub	r0, r0, #24
   22a3c:	eor	r0, r8, r0
   22a40:	orrs	r0, r0, sl
   22a44:	bne	22ac4 <zsav_read_compressed_data+0x188>
   22a48:	ldr	r0, [r4]
   22a4c:	ldr	r3, [r7, #8]
   22a50:	ldr	r2, [r7, #20]
   22a54:	ldm	r6, {r8, sl}
   22a58:	mov	r1, #0
   22a5c:	blx	r3
   22a60:	mov	r6, r0
   22a64:	subs	r0, r8, #24
   22a68:	mov	r2, #24
   22a6c:	mov	r3, #0
   22a70:	sbc	r1, sl, #0
   22a74:	bl	23698 <__aeabi_uldivmod>
   22a78:	cmn	r6, #1
   22a7c:	beq	22aec <zsav_read_compressed_data+0x1b0>
   22a80:	ldr	r3, [r7, #12]
   22a84:	ldr	r2, [r7, #20]
   22a88:	add	r6, sp, #40	; 0x28
   22a8c:	mov	sl, r0
   22a90:	mov	r1, #24
   22a94:	mov	r8, r7
   22a98:	mov	r0, r6
   22a9c:	blx	r3
   22aa0:	cmp	r0, #24
   22aa4:	bcc	22ed0 <zsav_read_compressed_data+0x594>
   22aa8:	ldrb	r0, [r5, #436]	; 0x1b4
   22aac:	tst	r0, #1
   22ab0:	bne	22af4 <zsav_read_compressed_data+0x1b8>
   22ab4:	ldr	r0, [sp, #48]	; 0x30
   22ab8:	ldr	r1, [sp, #52]	; 0x34
   22abc:	add	r4, r6, #8
   22ac0:	b	22b20 <zsav_read_compressed_data+0x1e4>
   22ac4:	mov	r9, #5
   22ac8:	b	22ed0 <zsav_read_compressed_data+0x594>
   22acc:	bl	479c <byteswap8@plt>
   22ad0:	ldrb	r2, [r5, #436]	; 0x1b4
   22ad4:	strd	r0, [r4]
   22ad8:	ldrd	r0, [r6]
   22adc:	tst	r2, #1
   22ae0:	beq	22a18 <zsav_read_compressed_data+0xdc>
   22ae4:	bl	479c <byteswap8@plt>
   22ae8:	b	22a18 <zsav_read_compressed_data+0xdc>
   22aec:	mov	r9, #15
   22af0:	b	22ed0 <zsav_read_compressed_data+0x594>
   22af4:	ldr	r0, [sp, #40]	; 0x28
   22af8:	ldr	r1, [sp, #44]	; 0x2c
   22afc:	bl	479c <byteswap8@plt>
   22b00:	ldrb	r2, [r5, #436]	; 0x1b4
   22b04:	str	r1, [sp, #44]	; 0x2c
   22b08:	str	r0, [sp, #40]	; 0x28
   22b0c:	add	r4, r6, #8
   22b10:	ldr	r0, [sp, #48]	; 0x30
   22b14:	ldr	r1, [sp, #52]	; 0x34
   22b18:	tst	r2, #1
   22b1c:	bne	22b70 <zsav_read_compressed_data+0x234>
   22b20:	strd	r0, [r4]
   22b24:	ldr	r0, [sp, #56]	; 0x38
   22b28:	str	r0, [sp, #56]	; 0x38
   22b2c:	ldr	r0, [sp, #60]	; 0x3c
   22b30:	cmp	r0, sl
   22b34:	mov	r9, #5
   22b38:	str	r0, [sp, #60]	; 0x3c
   22b3c:	bne	22ed0 <zsav_read_compressed_data+0x594>
   22b40:	cmp	sl, #0
   22b44:	beq	22ba8 <zsav_read_compressed_data+0x26c>
   22b48:	add	r0, sl, sl, lsl #1
   22b4c:	lsl	r6, r0, #3
   22b50:	mov	r0, r6
   22b54:	bl	4bf8 <readstat_malloc@plt>
   22b58:	cmp	r0, #0
   22b5c:	beq	22e50 <zsav_read_compressed_data+0x514>
   22b60:	mov	r4, r0
   22b64:	mov	r0, #0
   22b68:	mov	r7, r4
   22b6c:	b	22bb8 <zsav_read_compressed_data+0x27c>
   22b70:	bl	479c <byteswap8@plt>
   22b74:	ldrb	r2, [r5, #436]	; 0x1b4
   22b78:	strd	r0, [r4]
   22b7c:	ldr	r0, [sp, #56]	; 0x38
   22b80:	tst	r2, #1
   22b84:	beq	22b28 <zsav_read_compressed_data+0x1ec>
   22b88:	bl	47b4 <byteswap4@plt>
   22b8c:	ldrb	r1, [r5, #436]	; 0x1b4
   22b90:	str	r0, [sp, #56]	; 0x38
   22b94:	ldr	r0, [sp, #60]	; 0x3c
   22b98:	tst	r1, #1
   22b9c:	beq	22b30 <zsav_read_compressed_data+0x1f4>
   22ba0:	bl	47b4 <byteswap4@plt>
   22ba4:	b	22b30 <zsav_read_compressed_data+0x1f4>
   22ba8:	mov	r0, #0
   22bac:	mov	r6, #0
   22bb0:	mov	r4, #0
   22bb4:	mov	r7, #0
   22bb8:	str	r0, [sp, #28]
   22bbc:	ldr	r3, [r8, #12]
   22bc0:	ldr	r2, [r8, #20]
   22bc4:	mov	r0, r4
   22bc8:	mov	r1, r6
   22bcc:	blx	r3
   22bd0:	cmp	r0, r6
   22bd4:	mov	r9, #2
   22bd8:	mov	r6, #0
   22bdc:	bcc	22e9c <zsav_read_compressed_data+0x560>
   22be0:	cmp	sl, #1
   22be4:	str	r7, [sp, #20]
   22be8:	str	r4, [sp, #16]
   22bec:	blt	22c70 <zsav_read_compressed_data+0x334>
   22bf0:	ldr	r7, [sp, #20]
   22bf4:	mov	r6, #0
   22bf8:	ldrb	r2, [r5, #436]	; 0x1b4
   22bfc:	ldrd	r0, [r7]
   22c00:	tst	r2, #1
   22c04:	beq	22c0c <zsav_read_compressed_data+0x2d0>
   22c08:	bl	479c <byteswap8@plt>
   22c0c:	strd	r0, [r7]
   22c10:	mov	r4, r7
   22c14:	ldrb	r2, [r5, #436]	; 0x1b4
   22c18:	ldr	r1, [r7, #12]
   22c1c:	ldr	r0, [r4, #8]!
   22c20:	tst	r2, #1
   22c24:	beq	22c2c <zsav_read_compressed_data+0x2f0>
   22c28:	bl	479c <byteswap8@plt>
   22c2c:	strd	r0, [r4]
   22c30:	ldrb	r1, [r5, #436]	; 0x1b4
   22c34:	ldr	r0, [r7, #16]
   22c38:	tst	r1, #1
   22c3c:	beq	22c44 <zsav_read_compressed_data+0x308>
   22c40:	bl	47b4 <byteswap4@plt>
   22c44:	str	r0, [r7, #16]
   22c48:	ldrb	r1, [r5, #436]	; 0x1b4
   22c4c:	ldr	r0, [r7, #20]
   22c50:	tst	r1, #1
   22c54:	beq	22c5c <zsav_read_compressed_data+0x320>
   22c58:	bl	47b4 <byteswap4@plt>
   22c5c:	add	r6, r6, #1
   22c60:	str	r0, [r7, #20]
   22c64:	add	r7, r7, #24
   22c68:	cmp	r6, sl
   22c6c:	blt	22bf8 <zsav_read_compressed_data+0x2bc>
   22c70:	ldr	r0, [sp, #32]
   22c74:	mov	r6, #0
   22c78:	lsl	r4, r0, #3
   22c7c:	cmp	r0, #0
   22c80:	mov	r0, #0
   22c84:	beq	22c98 <zsav_read_compressed_data+0x35c>
   22c88:	mov	r0, r4
   22c8c:	bl	4bf8 <readstat_malloc@plt>
   22c90:	cmp	r0, #0
   22c94:	beq	22e68 <zsav_read_compressed_data+0x52c>
   22c98:	cmp	sl, #0
   22c9c:	str	r0, [sp, #32]
   22ca0:	beq	22e58 <zsav_read_compressed_data+0x51c>
   22ca4:	mov	r0, #0
   22ca8:	str	sl, [sp]
   22cac:	str	r8, [sp, #8]
   22cb0:	str	r4, [sp, #24]
   22cb4:	mov	r8, #0
   22cb8:	mov	r6, #0
   22cbc:	mov	sl, #0
   22cc0:	str	r0, [sp, #28]
   22cc4:	ldr	r1, [sp, #20]
   22cc8:	add	r0, r8, r8, lsl #1
   22ccc:	mov	r7, r6
   22cd0:	add	r6, r1, r0, lsl #3
   22cd4:	ldr	r1, [sp, #8]
   22cd8:	ldr	r0, [r6, #8]
   22cdc:	ldr	r3, [r1, #8]
   22ce0:	ldr	r2, [r1, #20]
   22ce4:	mov	r1, #0
   22ce8:	blx	r3
   22cec:	cmn	r0, #1
   22cf0:	beq	22edc <zsav_read_compressed_data+0x5a0>
   22cf4:	mov	r4, r6
   22cf8:	mov	r0, r7
   22cfc:	ldr	r1, [r4, #20]!
   22d00:	bl	4cb8 <readstat_realloc@plt>
   22d04:	mov	r9, #3
   22d08:	cmp	r0, #0
   22d0c:	beq	22ee8 <zsav_read_compressed_data+0x5ac>
   22d10:	ldr	r2, [sp, #8]
   22d14:	ldr	r1, [r4]
   22d18:	str	r0, [sp, #12]
   22d1c:	ldr	r3, [r2, #12]
   22d20:	ldr	r2, [r2, #20]
   22d24:	blx	r3
   22d28:	ldr	r1, [r4]
   22d2c:	cmp	r0, r1
   22d30:	bne	22ef0 <zsav_read_compressed_data+0x5b4>
   22d34:	ldr	r1, [r6, #16]!
   22d38:	ldr	r0, [sp, #28]
   22d3c:	str	r1, [fp, #-32]	; 0xffffffe0
   22d40:	bl	4cb8 <readstat_realloc@plt>
   22d44:	cmp	r0, #0
   22d48:	beq	22ef8 <zsav_read_compressed_data+0x5bc>
   22d4c:	ldr	r3, [r4]
   22d50:	ldr	r2, [sp, #12]
   22d54:	sub	r1, fp, #32
   22d58:	str	r0, [sp, #28]
   22d5c:	bl	497c <uncompress@plt>
   22d60:	cmp	r0, #0
   22d64:	mov	r9, #5
   22d68:	ldreq	r1, [r6]
   22d6c:	ldreq	r0, [fp, #-32]	; 0xffffffe0
   22d70:	cmpeq	r0, r1
   22d74:	bne	22e80 <zsav_read_compressed_data+0x544>
   22d78:	mov	r1, #1
   22d7c:	add	r8, r8, #1
   22d80:	str	r1, [sp, #136]	; 0x88
   22d84:	mov	r1, #0
   22d88:	str	r8, [sp, #4]
   22d8c:	ldr	r6, [sp, #24]
   22d90:	ldr	r7, [sp, #32]
   22d94:	sub	r0, r0, r1
   22d98:	sub	r2, r6, sl
   22d9c:	str	r2, [sp, #100]	; 0x64
   22da0:	add	r2, r7, sl
   22da4:	str	r2, [sp, #96]	; 0x60
   22da8:	str	r0, [sp, #92]	; 0x5c
   22dac:	ldr	r0, [sp, #28]
   22db0:	add	r0, r0, r1
   22db4:	str	r0, [sp, #88]	; 0x58
   22db8:	add	r0, sp, #88	; 0x58
   22dbc:	bl	4be0 <sav_decompress_row@plt>
   22dc0:	ldr	r0, [sp, #136]	; 0x88
   22dc4:	ldr	r8, [sp, #92]	; 0x5c
   22dc8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   22dcc:	cmp	r0, #2
   22dd0:	bne	22dfc <zsav_read_compressed_data+0x4c0>
   22dd4:	ldr	r3, [sp, #36]	; 0x24
   22dd8:	mov	r0, r7
   22ddc:	mov	r1, r6
   22de0:	mov	r2, r5
   22de4:	blx	r3
   22de8:	cmp	r0, #0
   22dec:	bne	22e7c <zsav_read_compressed_data+0x540>
   22df0:	ldr	r0, [sp, #136]	; 0x88
   22df4:	mov	sl, #0
   22df8:	b	22e04 <zsav_read_compressed_data+0x4c8>
   22dfc:	ldr	r1, [sp, #100]	; 0x64
   22e00:	sub	sl, r6, r1
   22e04:	mov	r9, #0
   22e08:	cmp	r0, #3
   22e0c:	beq	22e80 <zsav_read_compressed_data+0x544>
   22e10:	ldr	r1, [r5, #356]	; 0x164
   22e14:	cmp	r1, #1
   22e18:	blt	22e28 <zsav_read_compressed_data+0x4ec>
   22e1c:	ldr	r2, [r5, #364]	; 0x16c
   22e20:	cmp	r2, r1
   22e24:	beq	22e80 <zsav_read_compressed_data+0x544>
   22e28:	cmp	r0, #0
   22e2c:	beq	22e3c <zsav_read_compressed_data+0x500>
   22e30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e34:	sub	r1, r4, r8
   22e38:	b	22d8c <zsav_read_compressed_data+0x450>
   22e3c:	ldm	sp, {r0, r8}
   22e40:	ldr	r6, [sp, #12]
   22e44:	cmp	r8, r0
   22e48:	bne	22cc4 <zsav_read_compressed_data+0x388>
   22e4c:	b	22e84 <zsav_read_compressed_data+0x548>
   22e50:	mov	r9, #3
   22e54:	b	22ed0 <zsav_read_compressed_data+0x594>
   22e58:	mov	r0, #0
   22e5c:	mov	r9, #0
   22e60:	str	r0, [sp, #28]
   22e64:	b	22e84 <zsav_read_compressed_data+0x548>
   22e68:	mov	r0, #0
   22e6c:	mov	r9, #3
   22e70:	mov	r6, #0
   22e74:	str	r0, [sp, #28]
   22e78:	b	22e94 <zsav_read_compressed_data+0x558>
   22e7c:	mov	r9, r0
   22e80:	ldr	r6, [sp, #12]
   22e84:	ldr	r0, [sp, #32]
   22e88:	cmp	r0, #0
   22e8c:	beq	22e94 <zsav_read_compressed_data+0x558>
   22e90:	bl	48bc <free@plt>
   22e94:	ldr	r4, [sp, #16]
   22e98:	ldr	r7, [sp, #20]
   22e9c:	cmp	r7, #0
   22ea0:	beq	22eac <zsav_read_compressed_data+0x570>
   22ea4:	mov	r0, r4
   22ea8:	bl	48bc <free@plt>
   22eac:	ldr	r4, [sp, #28]
   22eb0:	cmp	r6, #0
   22eb4:	beq	22ec0 <zsav_read_compressed_data+0x584>
   22eb8:	mov	r0, r6
   22ebc:	bl	48bc <free@plt>
   22ec0:	cmp	r4, #0
   22ec4:	beq	22ed0 <zsav_read_compressed_data+0x594>
   22ec8:	mov	r0, r4
   22ecc:	bl	48bc <free@plt>
   22ed0:	mov	r0, r9
   22ed4:	sub	sp, fp, #28
   22ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22edc:	mov	r9, #15
   22ee0:	mov	r6, r7
   22ee4:	b	22e84 <zsav_read_compressed_data+0x548>
   22ee8:	mov	r6, #0
   22eec:	b	22e84 <zsav_read_compressed_data+0x548>
   22ef0:	mov	r9, #2
   22ef4:	b	22e80 <zsav_read_compressed_data+0x544>
   22ef8:	mov	r0, #0
   22efc:	str	r0, [sp, #28]
   22f00:	b	22e80 <zsav_read_compressed_data+0x544>

00022f04 <zsav_write_compressed_row>:
   22f04:	push	{r4, r5, fp, lr}
   22f08:	add	fp, sp, #8
   22f0c:	ldr	r5, [r0, #300]	; 0x12c
   22f10:	mov	r4, r0
   22f14:	mov	r3, r4
   22f18:	ldr	r0, [r5]
   22f1c:	bl	4e2c <sav_compress_row@plt>
   22f20:	ldr	r2, [r4, #80]	; 0x50
   22f24:	ldr	r3, [r4, #84]	; 0x54
   22f28:	mov	r1, r0
   22f2c:	ldr	r0, [r5]
   22f30:	sub	r2, r3, r2
   22f34:	mov	r3, r5
   22f38:	add	r2, r2, #1
   22f3c:	clz	r2, r2
   22f40:	lsr	r2, r2, #5
   22f44:	bl	4e74 <zsav_compress_row@plt>
   22f48:	cmp	r0, #1
   22f4c:	mov	r1, #0
   22f50:	movwhi	r1, #13
   22f54:	mov	r0, r1
   22f58:	pop	{r4, r5, fp, pc}

00022f5c <zsav_end_data>:
   22f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f60:	add	fp, sp, #28
   22f64:	sub	sp, sp, #52	; 0x34
   22f68:	ldr	r7, [r0, #300]	; 0x12c
   22f6c:	mov	r4, r0
   22f70:	mov	r6, #24
   22f74:	mov	r5, r7
   22f78:	ldr	r1, [r7, #28]
   22f7c:	ldr	r0, [r5, #24]!
   22f80:	str	r1, [sp, #44]	; 0x2c
   22f84:	str	r0, [sp, #40]	; 0x28
   22f88:	adds	r0, r0, #24
   22f8c:	adc	r1, r1, #0
   22f90:	str	r0, [sp, #32]
   22f94:	str	r1, [sp, #36]	; 0x24
   22f98:	ldr	r2, [r7, #8]
   22f9c:	add	r3, r2, r2, lsl #1
   22fa0:	cmp	r2, #1
   22fa4:	add	r3, r6, r3, lsl #3
   22fa8:	str	r3, [sp, #16]
   22fac:	asr	r3, r3, #31
   22fb0:	str	r3, [sp, #20]
   22fb4:	blt	22fdc <zsav_end_data+0x80>
   22fb8:	ldr	r3, [r7, #4]
   22fbc:	ldr	r6, [r3], #4
   22fc0:	ldr	r6, [r6, #4]
   22fc4:	adds	r0, r0, r6
   22fc8:	adc	r1, r1, r6, asr #31
   22fcc:	subs	r2, r2, #1
   22fd0:	bne	22fbc <zsav_end_data+0x60>
   22fd4:	str	r0, [sp, #32]
   22fd8:	str	r1, [sp, #36]	; 0x24
   22fdc:	add	r1, sp, #40	; 0x28
   22fe0:	mov	r0, r4
   22fe4:	mov	r2, #8
   22fe8:	bl	4e20 <readstat_write_bytes@plt>
   22fec:	cmp	r0, #0
   22ff0:	bne	2301c <zsav_end_data+0xc0>
   22ff4:	add	r1, sp, #32
   22ff8:	mov	r0, r4
   22ffc:	mov	r2, #8
   23000:	bl	4e20 <readstat_write_bytes@plt>
   23004:	cmp	r0, #0
   23008:	bne	2301c <zsav_end_data+0xc0>
   2300c:	add	r1, sp, #16
   23010:	mov	r0, r4
   23014:	mov	r2, #8
   23018:	bl	4e20 <readstat_write_bytes@plt>
   2301c:	cmp	r0, #0
   23020:	bne	230f0 <zsav_end_data+0x194>
   23024:	ldr	r0, [r7, #8]
   23028:	cmp	r0, #1
   2302c:	blt	23064 <zsav_end_data+0x108>
   23030:	mov	r6, #0
   23034:	ldr	r0, [r7, #4]
   23038:	ldr	r0, [r0, r6, lsl #2]
   2303c:	ldr	r2, [r0, #4]
   23040:	ldr	r1, [r0, #64]	; 0x40
   23044:	mov	r0, r4
   23048:	bl	4e20 <readstat_write_bytes@plt>
   2304c:	cmp	r0, #0
   23050:	bne	230f0 <zsav_end_data+0x194>
   23054:	ldr	r0, [r7, #8]
   23058:	add	r6, r6, #1
   2305c:	cmp	r6, r0
   23060:	blt	23034 <zsav_end_data+0xd8>
   23064:	mvn	r2, #0
   23068:	add	r1, r7, #16
   2306c:	str	r2, [sp, #44]	; 0x2c
   23070:	mvn	r2, #99	; 0x63
   23074:	str	r2, [sp, #40]	; 0x28
   23078:	mov	r2, #0
   2307c:	str	r2, [sp, #36]	; 0x24
   23080:	str	r2, [sp, #32]
   23084:	mov	r2, #8
   23088:	ldr	r1, [r1]
   2308c:	str	r0, [sp, #24]
   23090:	mov	r0, r4
   23094:	str	r1, [sp, #28]
   23098:	add	r1, sp, #40	; 0x28
   2309c:	bl	4e20 <readstat_write_bytes@plt>
   230a0:	cmp	r0, #0
   230a4:	bne	230f0 <zsav_end_data+0x194>
   230a8:	add	r1, sp, #32
   230ac:	mov	r0, r4
   230b0:	mov	r2, #8
   230b4:	bl	4e20 <readstat_write_bytes@plt>
   230b8:	cmp	r0, #0
   230bc:	bne	230f0 <zsav_end_data+0x194>
   230c0:	add	r1, sp, #28
   230c4:	mov	r0, r4
   230c8:	mov	r2, #4
   230cc:	bl	4e20 <readstat_write_bytes@plt>
   230d0:	cmp	r0, #0
   230d4:	bne	230f0 <zsav_end_data+0x194>
   230d8:	add	r1, sp, #24
   230dc:	mov	r0, r4
   230e0:	mov	r2, #4
   230e4:	bl	4e20 <readstat_write_bytes@plt>
   230e8:	cmp	r0, #0
   230ec:	beq	230f8 <zsav_end_data+0x19c>
   230f0:	sub	sp, fp, #28
   230f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   230f8:	ldrd	r0, [r5]
   230fc:	str	r0, [sp, #16]
   23100:	adds	r0, r0, #24
   23104:	str	r1, [sp, #20]
   23108:	str	r0, [sp, #8]
   2310c:	adc	r0, r1, #0
   23110:	str	r0, [sp, #12]
   23114:	ldr	r0, [r7, #8]
   23118:	cmp	r0, #1
   2311c:	blt	231fc <zsav_end_data+0x2a0>
   23120:	mov	r6, #0
   23124:	add	r5, sp, #16
   23128:	add	sl, sp, #8
   2312c:	add	r9, sp, #4
   23130:	mov	r8, sp
   23134:	ldr	r0, [r7, #4]
   23138:	mov	r2, #8
   2313c:	ldr	r0, [r0, r6, lsl #2]
   23140:	ldr	r1, [r0]
   23144:	str	r1, [sp, #4]
   23148:	mov	r1, r5
   2314c:	ldr	r0, [r0, #4]
   23150:	str	r0, [sp]
   23154:	mov	r0, r4
   23158:	bl	4e20 <readstat_write_bytes@plt>
   2315c:	cmp	r0, #0
   23160:	bne	230f0 <zsav_end_data+0x194>
   23164:	mov	r0, r4
   23168:	mov	r1, sl
   2316c:	mov	r2, #8
   23170:	bl	4e20 <readstat_write_bytes@plt>
   23174:	cmp	r0, #0
   23178:	bne	230f0 <zsav_end_data+0x194>
   2317c:	mov	r0, r4
   23180:	mov	r1, r9
   23184:	mov	r2, #4
   23188:	bl	4e20 <readstat_write_bytes@plt>
   2318c:	cmp	r0, #0
   23190:	bne	230f0 <zsav_end_data+0x194>
   23194:	mov	r0, r4
   23198:	mov	r1, r8
   2319c:	mov	r2, #4
   231a0:	bl	4e20 <readstat_write_bytes@plt>
   231a4:	cmp	r0, #0
   231a8:	bne	230f0 <zsav_end_data+0x194>
   231ac:	ldr	r0, [sp, #4]
   231b0:	ldr	r1, [sp, #16]
   231b4:	ldr	r2, [sp, #20]
   231b8:	ldr	r3, [sp, #12]
   231bc:	add	r6, r6, #1
   231c0:	adds	r1, r1, r0
   231c4:	adc	r0, r2, r0, asr #31
   231c8:	str	r1, [sp, #16]
   231cc:	ldr	r1, [sp]
   231d0:	ldr	r2, [sp, #8]
   231d4:	str	r0, [sp, #20]
   231d8:	adds	r2, r2, r1
   231dc:	adc	r0, r3, r1, asr #31
   231e0:	str	r2, [sp, #8]
   231e4:	str	r0, [sp, #12]
   231e8:	mov	r0, #0
   231ec:	ldr	r1, [r7, #8]
   231f0:	cmp	r6, r1
   231f4:	blt	23134 <zsav_end_data+0x1d8>
   231f8:	b	230f0 <zsav_end_data+0x194>
   231fc:	mov	r0, #0
   23200:	b	230f0 <zsav_end_data+0x194>

00023204 <__aeabi_drsub>:
   23204:	eor	r1, r1, #-2147483648	; 0x80000000
   23208:	b	23210 <__adddf3>

0002320c <__aeabi_dsub>:
   2320c:	eor	r3, r3, #-2147483648	; 0x80000000

00023210 <__adddf3>:
   23210:	push	{r4, r5, lr}
   23214:	lsl	r4, r1, #1
   23218:	lsl	r5, r3, #1
   2321c:	teq	r4, r5
   23220:	teqeq	r0, r2
   23224:	orrsne	ip, r4, r0
   23228:	orrsne	ip, r5, r2
   2322c:	mvnsne	ip, r4, asr #21
   23230:	mvnsne	ip, r5, asr #21
   23234:	beq	23420 <__adddf3+0x210>
   23238:	lsr	r4, r4, #21
   2323c:	rsbs	r5, r4, r5, lsr #21
   23240:	rsblt	r5, r5, #0
   23244:	ble	23264 <__adddf3+0x54>
   23248:	add	r4, r4, r5
   2324c:	eor	r2, r0, r2
   23250:	eor	r3, r1, r3
   23254:	eor	r0, r2, r0
   23258:	eor	r1, r3, r1
   2325c:	eor	r2, r0, r2
   23260:	eor	r3, r1, r3
   23264:	cmp	r5, #54	; 0x36
   23268:	pophi	{r4, r5, pc}
   2326c:	tst	r1, #-2147483648	; 0x80000000
   23270:	lsl	r1, r1, #12
   23274:	mov	ip, #1048576	; 0x100000
   23278:	orr	r1, ip, r1, lsr #12
   2327c:	beq	23288 <__adddf3+0x78>
   23280:	rsbs	r0, r0, #0
   23284:	rsc	r1, r1, #0
   23288:	tst	r3, #-2147483648	; 0x80000000
   2328c:	lsl	r3, r3, #12
   23290:	orr	r3, ip, r3, lsr #12
   23294:	beq	232a0 <__adddf3+0x90>
   23298:	rsbs	r2, r2, #0
   2329c:	rsc	r3, r3, #0
   232a0:	teq	r4, r5
   232a4:	beq	23408 <__adddf3+0x1f8>
   232a8:	sub	r4, r4, #1
   232ac:	rsbs	lr, r5, #32
   232b0:	blt	232cc <__adddf3+0xbc>
   232b4:	lsl	ip, r2, lr
   232b8:	adds	r0, r0, r2, lsr r5
   232bc:	adc	r1, r1, #0
   232c0:	adds	r0, r0, r3, lsl lr
   232c4:	adcs	r1, r1, r3, asr r5
   232c8:	b	232e8 <__adddf3+0xd8>
   232cc:	sub	r5, r5, #32
   232d0:	add	lr, lr, #32
   232d4:	cmp	r2, #1
   232d8:	lsl	ip, r3, lr
   232dc:	orrcs	ip, ip, #2
   232e0:	adds	r0, r0, r3, asr r5
   232e4:	adcs	r1, r1, r3, asr #31
   232e8:	and	r5, r1, #-2147483648	; 0x80000000
   232ec:	bpl	232fc <__adddf3+0xec>
   232f0:	rsbs	ip, ip, #0
   232f4:	rscs	r0, r0, #0
   232f8:	rsc	r1, r1, #0
   232fc:	cmp	r1, #1048576	; 0x100000
   23300:	bcc	23340 <__adddf3+0x130>
   23304:	cmp	r1, #2097152	; 0x200000
   23308:	bcc	23328 <__adddf3+0x118>
   2330c:	lsrs	r1, r1, #1
   23310:	rrxs	r0, r0
   23314:	rrx	ip, ip
   23318:	add	r4, r4, #1
   2331c:	lsl	r2, r4, #21
   23320:	cmn	r2, #4194304	; 0x400000
   23324:	bcs	23480 <__adddf3+0x270>
   23328:	cmp	ip, #-2147483648	; 0x80000000
   2332c:	lsrseq	ip, r0, #1
   23330:	adcs	r0, r0, #0
   23334:	adc	r1, r1, r4, lsl #20
   23338:	orr	r1, r1, r5
   2333c:	pop	{r4, r5, pc}
   23340:	lsls	ip, ip, #1
   23344:	adcs	r0, r0, r0
   23348:	adc	r1, r1, r1
   2334c:	tst	r1, #1048576	; 0x100000
   23350:	sub	r4, r4, #1
   23354:	bne	23328 <__adddf3+0x118>
   23358:	teq	r1, #0
   2335c:	moveq	r1, r0
   23360:	moveq	r0, #0
   23364:	clz	r3, r1
   23368:	addeq	r3, r3, #32
   2336c:	sub	r3, r3, #11
   23370:	subs	r2, r3, #32
   23374:	bge	23398 <__adddf3+0x188>
   23378:	adds	r2, r2, #12
   2337c:	ble	23394 <__adddf3+0x184>
   23380:	add	ip, r2, #20
   23384:	rsb	r2, r2, #12
   23388:	lsl	r0, r1, ip
   2338c:	lsr	r1, r1, r2
   23390:	b	233a8 <__adddf3+0x198>
   23394:	add	r2, r2, #20
   23398:	rsble	ip, r2, #32
   2339c:	lsl	r1, r1, r2
   233a0:	orrle	r1, r1, r0, lsr ip
   233a4:	lslle	r0, r0, r2
   233a8:	subs	r4, r4, r3
   233ac:	addge	r1, r1, r4, lsl #20
   233b0:	orrge	r1, r1, r5
   233b4:	popge	{r4, r5, pc}
   233b8:	mvn	r4, r4
   233bc:	subs	r4, r4, #31
   233c0:	bge	233fc <__adddf3+0x1ec>
   233c4:	adds	r4, r4, #12
   233c8:	bgt	233e4 <__adddf3+0x1d4>
   233cc:	add	r4, r4, #20
   233d0:	rsb	r2, r4, #32
   233d4:	lsr	r0, r0, r4
   233d8:	orr	r0, r0, r1, lsl r2
   233dc:	orr	r1, r5, r1, lsr r4
   233e0:	pop	{r4, r5, pc}
   233e4:	rsb	r4, r4, #12
   233e8:	rsb	r2, r4, #32
   233ec:	lsr	r0, r0, r2
   233f0:	orr	r0, r0, r1, lsl r4
   233f4:	mov	r1, r5
   233f8:	pop	{r4, r5, pc}
   233fc:	lsr	r0, r1, r4
   23400:	mov	r1, r5
   23404:	pop	{r4, r5, pc}
   23408:	teq	r4, #0
   2340c:	eor	r3, r3, #1048576	; 0x100000
   23410:	eoreq	r1, r1, #1048576	; 0x100000
   23414:	addeq	r4, r4, #1
   23418:	subne	r5, r5, #1
   2341c:	b	232a8 <__adddf3+0x98>
   23420:	mvns	ip, r4, asr #21
   23424:	mvnsne	ip, r5, asr #21
   23428:	beq	23490 <__adddf3+0x280>
   2342c:	teq	r4, r5
   23430:	teqeq	r0, r2
   23434:	beq	23448 <__adddf3+0x238>
   23438:	orrs	ip, r4, r0
   2343c:	moveq	r1, r3
   23440:	moveq	r0, r2
   23444:	pop	{r4, r5, pc}
   23448:	teq	r1, r3
   2344c:	movne	r1, #0
   23450:	movne	r0, #0
   23454:	popne	{r4, r5, pc}
   23458:	lsrs	ip, r4, #21
   2345c:	bne	23470 <__adddf3+0x260>
   23460:	lsls	r0, r0, #1
   23464:	adcs	r1, r1, r1
   23468:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2346c:	pop	{r4, r5, pc}
   23470:	adds	r4, r4, #4194304	; 0x400000
   23474:	addcc	r1, r1, #1048576	; 0x100000
   23478:	popcc	{r4, r5, pc}
   2347c:	and	r5, r1, #-2147483648	; 0x80000000
   23480:	orr	r1, r5, #2130706432	; 0x7f000000
   23484:	orr	r1, r1, #15728640	; 0xf00000
   23488:	mov	r0, #0
   2348c:	pop	{r4, r5, pc}
   23490:	mvns	ip, r4, asr #21
   23494:	movne	r1, r3
   23498:	movne	r0, r2
   2349c:	mvnseq	ip, r5, asr #21
   234a0:	movne	r3, r1
   234a4:	movne	r2, r0
   234a8:	orrs	r4, r0, r1, lsl #12
   234ac:	orrseq	r5, r2, r3, lsl #12
   234b0:	teqeq	r1, r3
   234b4:	orrne	r1, r1, #524288	; 0x80000
   234b8:	pop	{r4, r5, pc}

000234bc <__aeabi_ui2d>:
   234bc:	teq	r0, #0
   234c0:	moveq	r1, #0
   234c4:	bxeq	lr
   234c8:	push	{r4, r5, lr}
   234cc:	mov	r4, #1024	; 0x400
   234d0:	add	r4, r4, #50	; 0x32
   234d4:	mov	r5, #0
   234d8:	mov	r1, #0
   234dc:	b	23358 <__adddf3+0x148>

000234e0 <__aeabi_i2d>:
   234e0:	teq	r0, #0
   234e4:	moveq	r1, #0
   234e8:	bxeq	lr
   234ec:	push	{r4, r5, lr}
   234f0:	mov	r4, #1024	; 0x400
   234f4:	add	r4, r4, #50	; 0x32
   234f8:	ands	r5, r0, #-2147483648	; 0x80000000
   234fc:	rsbmi	r0, r0, #0
   23500:	mov	r1, #0
   23504:	b	23358 <__adddf3+0x148>

00023508 <__aeabi_f2d>:
   23508:	lsls	r2, r0, #1
   2350c:	asr	r1, r2, #3
   23510:	rrx	r1, r1
   23514:	lsl	r0, r2, #28
   23518:	andsne	r3, r2, #-16777216	; 0xff000000
   2351c:	teqne	r3, #-16777216	; 0xff000000
   23520:	eorne	r1, r1, #939524096	; 0x38000000
   23524:	bxne	lr
   23528:	bics	r2, r2, #-16777216	; 0xff000000
   2352c:	bxeq	lr
   23530:	teq	r3, #-16777216	; 0xff000000
   23534:	orreq	r1, r1, #524288	; 0x80000
   23538:	bxeq	lr
   2353c:	push	{r4, r5, lr}
   23540:	mov	r4, #896	; 0x380
   23544:	and	r5, r1, #-2147483648	; 0x80000000
   23548:	bic	r1, r1, #-2147483648	; 0x80000000
   2354c:	b	23358 <__adddf3+0x148>

00023550 <__aeabi_ul2d>:
   23550:	orrs	r2, r0, r1
   23554:	bxeq	lr
   23558:	push	{r4, r5, lr}
   2355c:	mov	r5, #0
   23560:	b	23580 <__aeabi_l2d+0x1c>

00023564 <__aeabi_l2d>:
   23564:	orrs	r2, r0, r1
   23568:	bxeq	lr
   2356c:	push	{r4, r5, lr}
   23570:	ands	r5, r1, #-2147483648	; 0x80000000
   23574:	bpl	23580 <__aeabi_l2d+0x1c>
   23578:	rsbs	r0, r0, #0
   2357c:	rsc	r1, r1, #0
   23580:	mov	r4, #1024	; 0x400
   23584:	add	r4, r4, #50	; 0x32
   23588:	lsrs	ip, r1, #22
   2358c:	beq	232fc <__adddf3+0xec>
   23590:	mov	r2, #3
   23594:	lsrs	ip, ip, #3
   23598:	addne	r2, r2, #3
   2359c:	lsrs	ip, ip, #3
   235a0:	addne	r2, r2, #3
   235a4:	add	r2, r2, ip, lsr #3
   235a8:	rsb	r3, r2, #32
   235ac:	lsl	ip, r0, r3
   235b0:	lsr	r0, r0, r2
   235b4:	orr	r0, r0, r1, lsl r3
   235b8:	lsr	r1, r1, r2
   235bc:	add	r4, r4, r2
   235c0:	b	232fc <__adddf3+0xec>

000235c4 <__aeabi_ldivmod>:
   235c4:	cmp	r3, #0
   235c8:	cmpeq	r2, #0
   235cc:	bne	235f0 <__aeabi_ldivmod+0x2c>
   235d0:	cmp	r1, #0
   235d4:	movlt	r1, #-2147483648	; 0x80000000
   235d8:	movlt	r0, #0
   235dc:	blt	235ec <__aeabi_ldivmod+0x28>
   235e0:	cmpeq	r0, #0
   235e4:	mvnne	r1, #-2147483648	; 0x80000000
   235e8:	mvnne	r0, #0
   235ec:	b	236d4 <__aeabi_idiv0>
   235f0:	sub	sp, sp, #8
   235f4:	push	{sp, lr}
   235f8:	cmp	r1, #0
   235fc:	blt	2361c <__aeabi_ldivmod+0x58>
   23600:	cmp	r3, #0
   23604:	blt	23650 <__aeabi_ldivmod+0x8c>
   23608:	bl	23750 <__udivmoddi4>
   2360c:	ldr	lr, [sp, #4]
   23610:	add	sp, sp, #8
   23614:	pop	{r2, r3}
   23618:	bx	lr
   2361c:	rsbs	r0, r0, #0
   23620:	sbc	r1, r1, r1, lsl #1
   23624:	cmp	r3, #0
   23628:	blt	23674 <__aeabi_ldivmod+0xb0>
   2362c:	bl	23750 <__udivmoddi4>
   23630:	ldr	lr, [sp, #4]
   23634:	add	sp, sp, #8
   23638:	pop	{r2, r3}
   2363c:	rsbs	r0, r0, #0
   23640:	sbc	r1, r1, r1, lsl #1
   23644:	rsbs	r2, r2, #0
   23648:	sbc	r3, r3, r3, lsl #1
   2364c:	bx	lr
   23650:	rsbs	r2, r2, #0
   23654:	sbc	r3, r3, r3, lsl #1
   23658:	bl	23750 <__udivmoddi4>
   2365c:	ldr	lr, [sp, #4]
   23660:	add	sp, sp, #8
   23664:	pop	{r2, r3}
   23668:	rsbs	r0, r0, #0
   2366c:	sbc	r1, r1, r1, lsl #1
   23670:	bx	lr
   23674:	rsbs	r2, r2, #0
   23678:	sbc	r3, r3, r3, lsl #1
   2367c:	bl	23750 <__udivmoddi4>
   23680:	ldr	lr, [sp, #4]
   23684:	add	sp, sp, #8
   23688:	pop	{r2, r3}
   2368c:	rsbs	r2, r2, #0
   23690:	sbc	r3, r3, r3, lsl #1
   23694:	bx	lr

00023698 <__aeabi_uldivmod>:
   23698:	cmp	r3, #0
   2369c:	cmpeq	r2, #0
   236a0:	bne	236b8 <__aeabi_uldivmod+0x20>
   236a4:	cmp	r1, #0
   236a8:	cmpeq	r0, #0
   236ac:	mvnne	r1, #0
   236b0:	mvnne	r0, #0
   236b4:	b	236d4 <__aeabi_idiv0>
   236b8:	sub	sp, sp, #8
   236bc:	push	{sp, lr}
   236c0:	bl	23750 <__udivmoddi4>
   236c4:	ldr	lr, [sp, #4]
   236c8:	add	sp, sp, #8
   236cc:	pop	{r2, r3}
   236d0:	bx	lr

000236d4 <__aeabi_idiv0>:
   236d4:	push	{r1, lr}
   236d8:	mov	r0, #8
   236dc:	bl	47a8 <raise@plt>
   236e0:	pop	{r1, pc}

000236e4 <__aeabi_d2lz>:
   236e4:	vmov	d7, r0, r1
   236e8:	vcmpe.f64	d7, #0.0
   236ec:	vmrs	APSR_nzcv, fpscr
   236f0:	bmi	236f8 <__aeabi_d2lz+0x14>
   236f4:	b	23710 <__aeabi_d2ulz>
   236f8:	push	{r4, lr}
   236fc:	eor	r1, r1, #-2147483648	; 0x80000000
   23700:	bl	23710 <__aeabi_d2ulz>
   23704:	rsbs	r0, r0, #0
   23708:	rsc	r1, r1, #0
   2370c:	pop	{r4, pc}

00023710 <__aeabi_d2ulz>:
   23710:	vmov	d6, r0, r1
   23714:	vldr	d7, [pc, #36]	; 23740 <__aeabi_d2ulz+0x30>
   23718:	vldr	d5, [pc, #40]	; 23748 <__aeabi_d2ulz+0x38>
   2371c:	vmul.f64	d7, d6, d7
   23720:	vcvt.u32.f64	s14, d7
   23724:	vcvt.f64.u32	d4, s14
   23728:	vmov	r1, s14
   2372c:	vmls.f64	d6, d4, d5
   23730:	vcvt.u32.f64	s15, d6
   23734:	vmov	r0, s15
   23738:	bx	lr
   2373c:	nop			; (mov r0, r0)
   23740:	.word	0x00000000
   23744:	.word	0x3df00000
   23748:	.word	0x00000000
   2374c:	.word	0x41f00000

00023750 <__udivmoddi4>:
   23750:	cmp	r1, r3
   23754:	cmpeq	r0, r2
   23758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2375c:	mov	r4, r0
   23760:	movcc	r0, #0
   23764:	mov	r5, r1
   23768:	ldr	lr, [sp, #36]	; 0x24
   2376c:	movcc	r1, r0
   23770:	bcc	2386c <__udivmoddi4+0x11c>
   23774:	cmp	r3, #0
   23778:	clzeq	ip, r2
   2377c:	clzne	ip, r3
   23780:	addeq	ip, ip, #32
   23784:	cmp	r5, #0
   23788:	clzeq	r1, r4
   2378c:	addeq	r1, r1, #32
   23790:	clzne	r1, r5
   23794:	sub	ip, ip, r1
   23798:	sub	sl, ip, #32
   2379c:	lsl	r9, r3, ip
   237a0:	rsb	fp, ip, #32
   237a4:	orr	r9, r9, r2, lsl sl
   237a8:	orr	r9, r9, r2, lsr fp
   237ac:	lsl	r8, r2, ip
   237b0:	cmp	r5, r9
   237b4:	cmpeq	r4, r8
   237b8:	movcc	r0, #0
   237bc:	movcc	r1, r0
   237c0:	bcc	237dc <__udivmoddi4+0x8c>
   237c4:	mov	r0, #1
   237c8:	subs	r4, r4, r8
   237cc:	lsl	r1, r0, sl
   237d0:	orr	r1, r1, r0, lsr fp
   237d4:	lsl	r0, r0, ip
   237d8:	sbc	r5, r5, r9
   237dc:	cmp	ip, #0
   237e0:	beq	2386c <__udivmoddi4+0x11c>
   237e4:	lsr	r6, r8, #1
   237e8:	orr	r6, r6, r9, lsl #31
   237ec:	lsr	r7, r9, #1
   237f0:	mov	r2, ip
   237f4:	b	23818 <__udivmoddi4+0xc8>
   237f8:	subs	r3, r4, r6
   237fc:	sbc	r8, r5, r7
   23800:	adds	r3, r3, r3
   23804:	adc	r8, r8, r8
   23808:	adds	r4, r3, #1
   2380c:	adc	r5, r8, #0
   23810:	subs	r2, r2, #1
   23814:	beq	23834 <__udivmoddi4+0xe4>
   23818:	cmp	r5, r7
   2381c:	cmpeq	r4, r6
   23820:	bcs	237f8 <__udivmoddi4+0xa8>
   23824:	adds	r4, r4, r4
   23828:	adc	r5, r5, r5
   2382c:	subs	r2, r2, #1
   23830:	bne	23818 <__udivmoddi4+0xc8>
   23834:	lsr	r3, r4, ip
   23838:	orr	r3, r3, r5, lsl fp
   2383c:	lsr	r2, r5, ip
   23840:	orr	r3, r3, r5, lsr sl
   23844:	adds	r0, r0, r4
   23848:	mov	r4, r3
   2384c:	lsl	r3, r2, ip
   23850:	orr	r3, r3, r4, lsl sl
   23854:	lsl	ip, r4, ip
   23858:	orr	r3, r3, r4, lsr fp
   2385c:	adc	r1, r1, r5
   23860:	subs	r0, r0, ip
   23864:	mov	r5, r2
   23868:	sbc	r1, r1, r3
   2386c:	cmp	lr, #0
   23870:	strdne	r4, [lr]
   23874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00023878 <_fini>:
   23878:	push	{r3, lr}
   2387c:	pop	{r3, pc}
