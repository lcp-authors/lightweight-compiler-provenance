
../repos/charybdis/extensions/.libs/extb_oper.so:     file format elf32-littlearm


Disassembly of section .init:

00000400 <_init>:
 400:	push	{r3, lr}
 404:	bl	450 <call_weak_fn>
 408:	pop	{r3, pc}

Disassembly of section .plt:

0000040c <.plt>:
 40c:	push	{lr}		; (str lr, [sp, #-4]!)
 410:	ldr	lr, [pc, #4]	; 41c <.plt+0x10>
 414:	add	lr, pc, lr
 418:	ldr	pc, [lr, #8]!
 41c:	.word	0x00010be4

00000420 <__cxa_finalize@plt>:
 420:	add	ip, pc, #0, 12
 424:	add	ip, ip, #16, 20	; 0x10000
 428:	ldr	pc, [ip, #3044]!	; 0xbe4

0000042c <privilegeset_get@plt>:
 42c:	add	ip, pc, #0, 12
 430:	add	ip, ip, #16, 20	; 0x10000
 434:	ldr	pc, [ip, #3036]!	; 0xbdc

00000438 <__gmon_start__@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3028]!	; 0xbd4

00000444 <privilegeset_in_set@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3020]!	; 0xbcc

Disassembly of section .text:

00000450 <call_weak_fn>:
 450:	ldr	r3, [pc, #20]	; 46c <call_weak_fn+0x1c>
 454:	ldr	r2, [pc, #20]	; 470 <call_weak_fn+0x20>
 458:	add	r3, pc, r3
 45c:	ldr	r2, [r3, r2]
 460:	cmp	r2, #0
 464:	bxeq	lr
 468:	b	438 <__gmon_start__@plt>
 46c:	.word	0x00010ba0
 470:	.word	0x00000024

00000474 <deregister_tm_clones>:
 474:	ldr	r0, [pc, #44]	; 4a8 <deregister_tm_clones+0x34>
 478:	ldr	r3, [pc, #44]	; 4ac <deregister_tm_clones+0x38>
 47c:	add	r0, pc, r0
 480:	add	r3, pc, r3
 484:	cmp	r3, r0
 488:	ldr	r3, [pc, #32]	; 4b0 <deregister_tm_clones+0x3c>
 48c:	add	r3, pc, r3
 490:	bxeq	lr
 494:	ldr	r2, [pc, #24]	; 4b4 <deregister_tm_clones+0x40>
 498:	ldr	r3, [r3, r2]
 49c:	cmp	r3, #0
 4a0:	bxeq	lr
 4a4:	bx	r3
 4a8:	.word	0x00010bd8
 4ac:	.word	0x00010bd4
 4b0:	.word	0x00010b6c
 4b4:	.word	0x00000020

000004b8 <register_tm_clones>:
 4b8:	ldr	r0, [pc, #56]	; 4f8 <register_tm_clones+0x40>
 4bc:	ldr	r3, [pc, #56]	; 4fc <register_tm_clones+0x44>
 4c0:	add	r0, pc, r0
 4c4:	add	r3, pc, r3
 4c8:	sub	r1, r3, r0
 4cc:	ldr	r3, [pc, #44]	; 500 <register_tm_clones+0x48>
 4d0:	asr	r1, r1, #2
 4d4:	add	r3, pc, r3
 4d8:	add	r1, r1, r1, lsr #31
 4dc:	asrs	r1, r1, #1
 4e0:	bxeq	lr
 4e4:	ldr	r2, [pc, #24]	; 504 <register_tm_clones+0x4c>
 4e8:	ldr	r3, [r3, r2]
 4ec:	cmp	r3, #0
 4f0:	bxeq	lr
 4f4:	bx	r3
 4f8:	.word	0x00010b94
 4fc:	.word	0x00010b90
 500:	.word	0x00010b24
 504:	.word	0x0000002c

00000508 <__do_global_dtors_aux>:
 508:	ldr	r3, [pc, #76]	; 55c <__do_global_dtors_aux+0x54>
 50c:	ldr	r2, [pc, #76]	; 560 <__do_global_dtors_aux+0x58>
 510:	add	r3, pc, r3
 514:	add	r2, pc, r2
 518:	ldrb	r3, [r3]
 51c:	cmp	r3, #0
 520:	bxne	lr
 524:	ldr	r3, [pc, #56]	; 564 <__do_global_dtors_aux+0x5c>
 528:	push	{r4, lr}
 52c:	ldr	r3, [r2, r3]
 530:	cmp	r3, #0
 534:	beq	544 <__do_global_dtors_aux+0x3c>
 538:	ldr	r3, [pc, #40]	; 568 <__do_global_dtors_aux+0x60>
 53c:	ldr	r0, [pc, r3]
 540:	bl	420 <__cxa_finalize@plt>
 544:	bl	474 <deregister_tm_clones>
 548:	ldr	r3, [pc, #28]	; 56c <__do_global_dtors_aux+0x64>
 54c:	mov	r2, #1
 550:	add	r3, pc, r3
 554:	strb	r2, [r3]
 558:	pop	{r4, pc}
 55c:	.word	0x00010b44
 560:	.word	0x00010ae4
 564:	.word	0x0000001c
 568:	.word	0x00010aec
 56c:	.word	0x00010b04

00000570 <frame_dummy>:
 570:	b	4b8 <register_tm_clones>

00000574 <_modinit>:
 574:	ldr	r0, [pc, #20]	; 590 <_modinit+0x1c>
 578:	ldr	r0, [pc, r0]
 57c:	ldr	r1, [pc, #16]	; 594 <_modinit+0x20>
 580:	add	r1, pc, r1
 584:	str	r1, [r0, #444]	; 0x1bc
 588:	mov	r0, #0
 58c:	bx	lr
 590:	.word	0x00010aa8
 594:	.word	0x00000028

00000598 <_moddeinit>:
 598:	ldr	r0, [pc, #12]	; 5ac <_moddeinit+0x14>
 59c:	mov	r1, #0
 5a0:	ldr	r0, [pc, r0]
 5a4:	str	r1, [r0, #444]	; 0x1bc
 5a8:	bx	lr
 5ac:	.word	0x00010a80

000005b0 <eb_oper>:
 5b0:	push	{r4, r5, fp, lr}
 5b4:	add	fp, sp, #8
 5b8:	mov	r5, r1
 5bc:	cmp	r0, #0
 5c0:	beq	614 <eb_oper+0x64>
 5c4:	mov	r4, r0
 5c8:	bl	42c <privilegeset_get@plt>
 5cc:	ldr	r1, [r5, #24]
 5d0:	cmp	r0, #0
 5d4:	beq	5e4 <eb_oper+0x34>
 5d8:	ldr	r2, [r1, #36]	; 0x24
 5dc:	cmp	r2, r0
 5e0:	beq	620 <eb_oper+0x70>
 5e4:	mov	r0, #0
 5e8:	cmp	r1, #0
 5ec:	beq	61c <eb_oper+0x6c>
 5f0:	ldr	r1, [r1, #36]	; 0x24
 5f4:	cmp	r1, #0
 5f8:	beq	61c <eb_oper+0x6c>
 5fc:	mov	r0, r1
 600:	mov	r1, r4
 604:	bl	444 <privilegeset_in_set@plt>
 608:	cmp	r0, #0
 60c:	movwne	r0, #1
 610:	pop	{r4, r5, fp, pc}
 614:	ldr	r0, [r5, #56]	; 0x38
 618:	ubfx	r0, r0, #12, #1
 61c:	pop	{r4, r5, fp, pc}
 620:	mov	r0, #1
 624:	pop	{r4, r5, fp, pc}

Disassembly of section .fini:

00000628 <_fini>:
 628:	push	{r3, lr}
 62c:	pop	{r3, pc}
