
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000006c8 <_init>:
 6c8:	push	{r3, lr}
 6cc:	bl	79c <call_weak_fn>
 6d0:	pop	{r3, pc}

Disassembly of section .plt:

000006d4 <.plt>:
 6d4:	push	{lr}		; (str lr, [sp, #-4]!)
 6d8:	ldr	lr, [pc, #4]	; 6e4 <.plt+0x10>
 6dc:	add	lr, pc, lr
 6e0:	ldr	pc, [lr, #8]!
 6e4:	.word	0x0001191c

000006e8 <__cxa_finalize@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2332]!	; 0x91c

000006f4 <sendto_one@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2324]!	; 0x914

00000700 <user_mode@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2316]!	; 0x90c

0000070c <sendto_realops_snomask@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2308]!	; 0x904

00000718 <find_umode_slot@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2300]!	; 0x8fc

00000724 <rb_free_rb_dlink_node@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2292]!	; 0x8f4

00000730 <__gmon_start__@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2284]!	; 0x8ec

0000073c <rb_make_rb_dlink_node@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2276]!	; 0x8e4

00000748 <sendto_one_numeric@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2268]!	; 0x8dc

00000754 <find_person@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2260]!	; 0x8d4

00000760 <sendto_one_notice@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2252]!	; 0x8cc

0000076c <find_named_person@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2244]!	; 0x8c4

00000778 <privilegeset_in_set@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2236]!	; 0x8bc

00000784 <__assert_fail@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2228]!	; 0x8b4

00000790 <construct_umodebuf@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2220]!	; 0x8ac

Disassembly of section .text:

0000079c <call_weak_fn>:
     79c:	ldr	r3, [pc, #20]	; 7b8 <call_weak_fn+0x1c>
     7a0:	ldr	r2, [pc, #20]	; 7bc <call_weak_fn+0x20>
     7a4:	add	r3, pc, r3
     7a8:	ldr	r2, [r3, r2]
     7ac:	cmp	r2, #0
     7b0:	bxeq	lr
     7b4:	b	730 <__gmon_start__@plt>
     7b8:	.word	0x00011854
     7bc:	.word	0x00000054

000007c0 <deregister_tm_clones>:
     7c0:	ldr	r0, [pc, #44]	; 7f4 <deregister_tm_clones+0x34>
     7c4:	ldr	r3, [pc, #44]	; 7f8 <deregister_tm_clones+0x38>
     7c8:	add	r0, pc, r0
     7cc:	add	r3, pc, r3
     7d0:	cmp	r3, r0
     7d4:	ldr	r3, [pc, #32]	; 7fc <deregister_tm_clones+0x3c>
     7d8:	add	r3, pc, r3
     7dc:	bxeq	lr
     7e0:	ldr	r2, [pc, #24]	; 800 <deregister_tm_clones+0x40>
     7e4:	ldr	r3, [r3, r2]
     7e8:	cmp	r3, #0
     7ec:	bxeq	lr
     7f0:	bx	r3
     7f4:	.word	0x00011960
     7f8:	.word	0x0001195c
     7fc:	.word	0x00011820
     800:	.word	0x0000004c

00000804 <register_tm_clones>:
     804:	ldr	r0, [pc, #56]	; 844 <register_tm_clones+0x40>
     808:	ldr	r3, [pc, #56]	; 848 <register_tm_clones+0x44>
     80c:	add	r0, pc, r0
     810:	add	r3, pc, r3
     814:	sub	r1, r3, r0
     818:	ldr	r3, [pc, #44]	; 84c <register_tm_clones+0x48>
     81c:	asr	r1, r1, #2
     820:	add	r3, pc, r3
     824:	add	r1, r1, r1, lsr #31
     828:	asrs	r1, r1, #1
     82c:	bxeq	lr
     830:	ldr	r2, [pc, #24]	; 850 <register_tm_clones+0x4c>
     834:	ldr	r3, [r3, r2]
     838:	cmp	r3, #0
     83c:	bxeq	lr
     840:	bx	r3
     844:	.word	0x0001191c
     848:	.word	0x00011918
     84c:	.word	0x000117d8
     850:	.word	0x0000005c

00000854 <__do_global_dtors_aux>:
     854:	ldr	r3, [pc, #76]	; 8a8 <__do_global_dtors_aux+0x54>
     858:	ldr	r2, [pc, #76]	; 8ac <__do_global_dtors_aux+0x58>
     85c:	add	r3, pc, r3
     860:	add	r2, pc, r2
     864:	ldrb	r3, [r3]
     868:	cmp	r3, #0
     86c:	bxne	lr
     870:	ldr	r3, [pc, #56]	; 8b0 <__do_global_dtors_aux+0x5c>
     874:	push	{r4, lr}
     878:	ldr	r3, [r2, r3]
     87c:	cmp	r3, #0
     880:	beq	890 <__do_global_dtors_aux+0x3c>
     884:	ldr	r3, [pc, #40]	; 8b4 <__do_global_dtors_aux+0x60>
     888:	ldr	r0, [pc, r3]
     88c:	bl	6e8 <__cxa_finalize@plt>
     890:	bl	7c0 <deregister_tm_clones>
     894:	ldr	r3, [pc, #28]	; 8b8 <__do_global_dtors_aux+0x64>
     898:	mov	r2, #1
     89c:	add	r3, pc, r3
     8a0:	strb	r2, [r3]
     8a4:	pop	{r4, pc}
     8a8:	.word	0x000118cc
     8ac:	.word	0x00011798
     8b0:	.word	0x00000048
     8b4:	.word	0x000117d4
     8b8:	.word	0x0001188c

000008bc <frame_dummy>:
     8bc:	b	804 <register_tm_clones>

000008c0 <h_hdl_whois>:
     8c0:	ldr	r2, [pc, #80]	; 918 <h_hdl_whois+0x58>
     8c4:	ldr	r1, [pc, #80]	; 91c <h_hdl_whois+0x5c>
     8c8:	ldr	r3, [r0, #4]
     8cc:	add	r2, pc, r2
     8d0:	ldr	r2, [r2, r1]
     8d4:	ldr	r1, [r3, #56]	; 0x38
     8d8:	ldr	r2, [r2, #288]	; 0x120
     8dc:	tst	r1, r2
     8e0:	bxeq	lr
     8e4:	ldr	r2, [r3, #24]
     8e8:	ldr	r2, [r2, #24]
     8ec:	cmp	r2, #0
     8f0:	beq	900 <h_hdl_whois+0x40>
     8f4:	ldrb	r2, [r2]
     8f8:	cmp	r2, #0
     8fc:	bxne	lr
     900:	add	r3, r3, #88	; 0x58
     904:	movw	r1, #310	; 0x136
     908:	ldr	r2, [pc, #16]	; 920 <h_hdl_whois+0x60>
     90c:	ldr	r0, [r0]
     910:	add	r2, pc, r2
     914:	b	748 <sendto_one_numeric@plt>
     918:	.word	0x0001172c
     91c:	.word	0x00000050
     920:	.word	0x00000824

00000924 <h_hdl_stats_request>:
     924:	ldr	r3, [r0, #8]
     928:	cmp	r3, #112	; 0x70
     92c:	bxne	lr
     930:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     934:	mov	r4, r0
     938:	mov	r6, #0
     93c:	ldr	r3, [pc, #124]	; 9c0 <h_hdl_stats_request+0x9c>
     940:	ldr	r7, [pc, #124]	; 9c4 <h_hdl_stats_request+0xa0>
     944:	add	r3, pc, r3
     948:	ldr	r5, [r3]
     94c:	add	r7, pc, r7
     950:	cmp	r5, #0
     954:	ldr	r0, [r4]
     958:	bne	980 <h_hdl_stats_request+0x5c>
     95c:	ldr	r2, [pc, #100]	; 9c8 <h_hdl_stats_request+0xa4>
     960:	mov	r3, r6
     964:	mov	r1, #249	; 0xf9
     968:	add	r2, pc, r2
     96c:	bl	748 <sendto_one_numeric@plt>
     970:	mov	r3, #1
     974:	str	r3, [r4, #12]
     978:	add	sp, sp, #12
     97c:	pop	{r4, r5, r6, r7, pc}
     980:	ldr	r3, [r5]
     984:	ldr	r2, [r3, #24]
     988:	ldr	r2, [r2, #24]
     98c:	cmp	r2, #0
     990:	bne	9b8 <h_hdl_stats_request+0x94>
     994:	add	r2, r3, #163	; 0xa3
     998:	mov	r1, #249	; 0xf9
     99c:	add	r6, r6, #1
     9a0:	str	r2, [sp, #4]
     9a4:	add	r2, r3, #152	; 0x98
     9a8:	add	r3, r3, #88	; 0x58
     9ac:	str	r2, [sp]
     9b0:	mov	r2, r7
     9b4:	bl	748 <sendto_one_numeric@plt>
     9b8:	ldr	r5, [r5, #8]
     9bc:	b	950 <h_hdl_stats_request+0x2c>
     9c0:	.word	0x000117e8
     9c4:	.word	0x00000803
     9c8:	.word	0x000007f5

000009cc <do_dehelper.part.2>:
     9cc:	ldr	r2, [pc, #116]	; a48 <do_dehelper.part.2+0x7c>
     9d0:	push	{r4, r5, r6, lr}
     9d4:	add	r5, r1, #88	; 0x58
     9d8:	sub	sp, sp, #24
     9dc:	mov	r4, r1
     9e0:	add	r6, r0, #88	; 0x58
     9e4:	mov	r1, #256	; 0x100
     9e8:	mov	r3, r6
     9ec:	mov	r0, r1
     9f0:	str	r5, [sp]
     9f4:	add	r2, pc, r2
     9f8:	bl	70c <sendto_realops_snomask@plt>
     9fc:	ldr	r1, [pc, #72]	; a4c <do_dehelper.part.2+0x80>
     a00:	mov	r2, r6
     a04:	mov	r0, r4
     a08:	add	r1, pc, r1
     a0c:	bl	760 <sendto_one_notice@plt>
     a10:	ldr	r3, [pc, #56]	; a50 <do_dehelper.part.2+0x84>
     a14:	mov	r2, #3
     a18:	mov	r1, r4
     a1c:	mov	r0, r4
     a20:	str	r5, [sp, #8]
     a24:	str	r5, [sp, #12]
     a28:	add	r3, pc, r3
     a2c:	str	r3, [sp, #16]
     a30:	mov	r3, #0
     a34:	str	r3, [sp, #20]
     a38:	add	r3, sp, #8
     a3c:	bl	700 <user_mode@plt>
     a40:	add	sp, sp, #24
     a44:	pop	{r4, r5, r6, pc}
     a48:	.word	0x0000077d
     a4c:	.word	0x00000784
     a50:	.word	0x00000785

00000a54 <mo_dehelper>:
     a54:	ldr	r3, [r2, #24]
     a58:	push	{r4, r5, r6, lr}
     a5c:	mov	r4, r2
     a60:	ldr	r5, [pc, #264]	; b70 <mo_dehelper+0x11c>
     a64:	cmp	r3, #0
     a68:	ldr	r6, [sp, #16]
     a6c:	add	r5, pc, r5
     a70:	bne	aa4 <mo_dehelper+0x50>
     a74:	ldr	r3, [pc, #248]	; b74 <mo_dehelper+0x120>
     a78:	mov	r0, r4
     a7c:	ldr	r1, [pc, #244]	; b78 <mo_dehelper+0x124>
     a80:	ldr	r2, [r5, r3]
     a84:	ldr	r3, [pc, #240]	; b7c <mo_dehelper+0x128>
     a88:	add	r1, pc, r1
     a8c:	add	r2, r2, #88	; 0x58
     a90:	add	r3, pc, r3
     a94:	str	r3, [sp, #16]
     a98:	add	r3, r4, #88	; 0x58
     a9c:	pop	{r4, r5, r6, lr}
     aa0:	b	6f4 <sendto_one@plt>
     aa4:	ldr	r0, [r3, #36]	; 0x24
     aa8:	cmp	r0, #0
     aac:	beq	a74 <mo_dehelper+0x20>
     ab0:	ldr	r1, [pc, #200]	; b80 <mo_dehelper+0x12c>
     ab4:	add	r1, pc, r1
     ab8:	bl	778 <privilegeset_in_set@plt>
     abc:	cmp	r0, #0
     ac0:	beq	a74 <mo_dehelper+0x20>
     ac4:	ldr	r0, [r6, #4]
     ac8:	bl	76c <find_named_person@plt>
     acc:	cmp	r0, #0
     ad0:	bne	af0 <mo_dehelper+0x9c>
     ad4:	ldr	r2, [pc, #168]	; b84 <mo_dehelper+0x130>
     ad8:	mov	r0, r4
     adc:	movw	r1, #401	; 0x191
     ae0:	ldr	r3, [r6, #4]
     ae4:	pop	{r4, r5, r6, lr}
     ae8:	add	r2, pc, r2
     aec:	b	748 <sendto_one_numeric@plt>
     af0:	ldr	r1, [r0, #64]	; 0x40
     af4:	mov	r3, #0
     af8:	and	r2, r1, #8192	; 0x2000
     afc:	orrs	r3, r2, r3
     b00:	beq	b38 <mo_dehelper+0xe4>
     b04:	ldrh	r3, [r0, #80]	; 0x50
     b08:	cmp	r3, #64	; 0x40
     b0c:	bne	b38 <mo_dehelper+0xe4>
     b10:	ldr	r3, [pc, #112]	; b88 <mo_dehelper+0x134>
     b14:	ldr	r2, [r0, #56]	; 0x38
     b18:	ldr	r3, [r5, r3]
     b1c:	ldr	r3, [r3, #288]	; 0x120
     b20:	tst	r2, r3
     b24:	popeq	{r4, r5, r6, pc}
     b28:	mov	r1, r0
     b2c:	mov	r0, r4
     b30:	pop	{r4, r5, r6, lr}
     b34:	b	9cc <do_dehelper.part.2>
     b38:	ldrb	r3, [r4, #396]	; 0x18c
     b3c:	ldrb	r1, [r0, #396]	; 0x18c
     b40:	cmp	r3, #0
     b44:	ldr	r3, [r0, #32]
     b48:	addne	r2, r4, #396	; 0x18c
     b4c:	addeq	r2, r4, #88	; 0x58
     b50:	cmp	r1, #0
     b54:	addne	r1, r0, #396	; 0x18c
     b58:	addeq	r1, r0, #88	; 0x58
     b5c:	str	r1, [sp, #16]
     b60:	add	r3, r3, #88	; 0x58
     b64:	ldr	r1, [pc, #32]	; b8c <mo_dehelper+0x138>
     b68:	add	r1, pc, r1
     b6c:	b	a9c <mo_dehelper+0x48>
     b70:	.word	0x0001158c
     b74:	.word	0x00000060
     b78:	.word	0x00000728
     b7c:	.word	0x0000074c
     b80:	.word	0x00000723
     b84:	.word	0x000006fd
     b88:	.word	0x00000050
     b8c:	.word	0x00000696

00000b90 <helper_delete>:
     b90:	subs	r2, r0, #0
     b94:	bne	bbc <helper_delete+0x2c>
     b98:	ldr	r3, [pc, #152]	; c38 <helper_delete+0xa8>
     b9c:	mov	r2, #288	; 0x120
     ba0:	push	{r4, lr}
     ba4:	ldr	r1, [pc, #144]	; c3c <helper_delete+0xac>
     ba8:	add	r3, pc, r3
     bac:	ldr	r0, [pc, #140]	; c40 <helper_delete+0xb0>
     bb0:	add	r1, pc, r1
     bb4:	add	r0, pc, r0
     bb8:	bl	784 <__assert_fail@plt>
     bbc:	ldr	r3, [pc, #128]	; c44 <helper_delete+0xb4>
     bc0:	ldr	r0, [pc, r3]
     bc4:	cmp	r0, #0
     bc8:	bxeq	lr
     bcc:	ldr	r1, [r0]
     bd0:	ldr	r3, [r0, #8]
     bd4:	cmp	r2, r1
     bd8:	bne	c30 <helper_delete+0xa0>
     bdc:	ldr	r2, [r0, #4]
     be0:	cmp	r3, #0
     be4:	strne	r2, [r3, #4]
     be8:	ldreq	r1, [pc, #88]	; c48 <helper_delete+0xb8>
     bec:	addeq	r1, pc, r1
     bf0:	streq	r2, [r1, #4]
     bf4:	ldr	r2, [r0, #4]
     bf8:	cmp	r2, #0
     bfc:	strne	r3, [r2, #8]
     c00:	ldreq	r2, [pc, #68]	; c4c <helper_delete+0xbc>
     c04:	addeq	r2, pc, r2
     c08:	streq	r3, [r2]
     c0c:	ldr	r2, [pc, #60]	; c50 <helper_delete+0xc0>
     c10:	mov	r3, #0
     c14:	str	r3, [r0, #4]
     c18:	str	r3, [r0, #8]
     c1c:	add	r2, pc, r2
     c20:	ldr	r3, [r2, #8]
     c24:	sub	r3, r3, #1
     c28:	str	r3, [r2, #8]
     c2c:	b	724 <rb_free_rb_dlink_node@plt>
     c30:	mov	r0, r3
     c34:	b	bc4 <helper_delete+0x34>
     c38:	.word	0x00000538
     c3c:	.word	0x00000667
     c40:	.word	0x0000067f
     c44:	.word	0x0001156c
     c48:	.word	0x00011540
     c4c:	.word	0x00011528
     c50:	.word	0x00011510

00000c54 <recurse_client_exit>:
     c54:	ldrh	r2, [r0, #80]	; 0x50
     c58:	push	{r4, r5, r6, lr}
     c5c:	mov	r4, r0
     c60:	ldr	r1, [pc, #124]	; ce4 <recurse_client_exit+0x90>
     c64:	cmp	r2, #64	; 0x40
     c68:	add	r1, pc, r1
     c6c:	bne	c9c <recurse_client_exit+0x48>
     c70:	ldr	r2, [r0, #24]
     c74:	cmp	r2, #0
     c78:	popeq	{r4, r5, r6, pc}
     c7c:	ldr	r2, [pc, #100]	; ce8 <recurse_client_exit+0x94>
     c80:	ldr	r1, [r1, r2]
     c84:	ldr	r2, [r0, #56]	; 0x38
     c88:	ldr	r3, [r1, #288]	; 0x120
     c8c:	tst	r2, r3
     c90:	popeq	{r4, r5, r6, pc}
     c94:	pop	{r4, r5, r6, lr}
     c98:	b	b90 <helper_delete>
     c9c:	cmp	r2, #32
     ca0:	ldreq	r3, [r0, #28]
     ca4:	ldreq	r5, [r3, #48]	; 0x30
     ca8:	popne	{r4, r5, r6, pc}
     cac:	cmp	r5, #0
     cb0:	bne	cd4 <recurse_client_exit+0x80>
     cb4:	ldr	r3, [r4, #28]
     cb8:	ldr	r4, [r3, #36]	; 0x24
     cbc:	cmp	r4, #0
     cc0:	popeq	{r4, r5, r6, pc}
     cc4:	ldr	r0, [r4]
     cc8:	bl	c54 <recurse_client_exit>
     ccc:	ldr	r4, [r4, #8]
     cd0:	b	cbc <recurse_client_exit+0x68>
     cd4:	ldr	r0, [r5]
     cd8:	bl	c54 <recurse_client_exit>
     cdc:	ldr	r5, [r5, #8]
     ce0:	b	cac <recurse_client_exit+0x58>
     ce4:	.word	0x00011390
     ce8:	.word	0x00000050

00000cec <h_hdl_client_exit>:
     cec:	ldr	r0, [r0, #4]
     cf0:	b	c54 <recurse_client_exit>

00000cf4 <_moddeinit>:
     cf4:	ldr	r3, [pc, #144]	; d8c <_moddeinit+0x98>
     cf8:	push	{r4, r5, r6, r7, r8, lr}
     cfc:	ldr	r2, [pc, #140]	; d90 <_moddeinit+0x9c>
     d00:	add	r3, pc, r3
     d04:	ldr	r4, [pc, #136]	; d94 <_moddeinit+0xa0>
     d08:	ldr	r3, [r3, r2]
     d0c:	mov	r2, #0
     d10:	add	r4, pc, r4
     d14:	str	r2, [r3, #288]	; 0x120
     d18:	bl	790 <construct_umodebuf@plt>
     d1c:	ldr	r0, [r4]
     d20:	cmp	r0, #0
     d24:	popeq	{r4, r5, r6, r7, r8, pc}
     d28:	ldr	r6, [pc, #104]	; d98 <_moddeinit+0xa4>
     d2c:	ldr	r7, [pc, #104]	; d9c <_moddeinit+0xa8>
     d30:	ldr	r5, [r0, #8]
     d34:	add	r6, pc, r6
     d38:	add	r7, pc, r7
     d3c:	ldrd	r2, [r0, #4]
     d40:	cmp	r3, #0
     d44:	strne	r2, [r3, #4]
     d48:	streq	r2, [r6, #4]
     d4c:	ldr	r2, [r0, #4]
     d50:	cmp	r2, #0
     d54:	strne	r3, [r2, #8]
     d58:	streq	r3, [r7]
     d5c:	mov	r3, #0
     d60:	str	r3, [r0, #4]
     d64:	str	r3, [r0, #8]
     d68:	ldr	r3, [r4, #8]
     d6c:	sub	r3, r3, #1
     d70:	str	r3, [r4, #8]
     d74:	bl	724 <rb_free_rb_dlink_node@plt>
     d78:	cmp	r5, #0
     d7c:	popeq	{r4, r5, r6, r7, r8, pc}
     d80:	mov	r0, r5
     d84:	ldr	r5, [r5, #8]
     d88:	b	d3c <_moddeinit+0x48>
     d8c:	.word	0x000112f8
     d90:	.word	0x00000050
     d94:	.word	0x0001141c
     d98:	.word	0x000113f8
     d9c:	.word	0x000113f4

00000da0 <helper_add>:
     da0:	push	{r4, r5, r6, lr}
     da4:	subs	r5, r0, #0
     da8:	bne	dd0 <helper_add+0x30>
     dac:	ldr	r3, [pc, #188]	; e70 <helper_add+0xd0>
     db0:	movw	r2, #311	; 0x137
     db4:	ldr	r1, [pc, #184]	; e74 <helper_add+0xd4>
     db8:	ldr	r0, [pc, #184]	; e78 <helper_add+0xd8>
     dbc:	add	r3, pc, r3
     dc0:	add	r3, r3, #20
     dc4:	add	r1, pc, r1
     dc8:	add	r0, pc, r0
     dcc:	bl	784 <__assert_fail@plt>
     dd0:	ldr	r3, [pc, #164]	; e7c <helper_add+0xdc>
     dd4:	ldr	r4, [pc, r3]
     dd8:	cmp	r4, #0
     ddc:	bne	e10 <helper_add+0x70>
     de0:	bl	73c <rb_make_rb_dlink_node@plt>
     de4:	cmp	r0, #0
     de8:	bne	e24 <helper_add+0x84>
     dec:	ldr	r3, [pc, #140]	; e80 <helper_add+0xe0>
     df0:	mov	r2, #144	; 0x90
     df4:	ldr	r1, [pc, #136]	; e84 <helper_add+0xe4>
     df8:	ldr	r0, [pc, #136]	; e88 <helper_add+0xe8>
     dfc:	add	r3, pc, r3
     e00:	add	r3, r3, #33	; 0x21
     e04:	add	r1, pc, r1
     e08:	add	r0, pc, r0
     e0c:	b	dcc <helper_add+0x2c>
     e10:	ldr	r3, [r4]
     e14:	cmp	r5, r3
     e18:	popeq	{r4, r5, r6, pc}
     e1c:	ldr	r4, [r4, #8]
     e20:	b	dd8 <helper_add+0x38>
     e24:	ldr	r3, [pc, #96]	; e8c <helper_add+0xec>
     e28:	str	r4, [r0, #4]
     e2c:	add	r3, pc, r3
     e30:	ldr	r2, [r3]
     e34:	str	r5, [r0]
     e38:	cmp	r2, #0
     e3c:	str	r2, [r0, #8]
     e40:	strne	r0, [r2, #4]
     e44:	bne	e54 <helper_add+0xb4>
     e48:	ldr	r2, [r3, #4]
     e4c:	cmp	r2, #0
     e50:	streq	r0, [r3, #4]
     e54:	ldr	r3, [pc, #52]	; e90 <helper_add+0xf0>
     e58:	add	r3, pc, r3
     e5c:	ldr	r2, [r3, #8]
     e60:	str	r0, [r3]
     e64:	add	r2, r2, #1
     e68:	str	r2, [r3, #8]
     e6c:	pop	{r4, r5, r6, pc}
     e70:	.word	0x00000324
     e74:	.word	0x00000453
     e78:	.word	0x0000046b
     e7c:	.word	0x00011358
     e80:	.word	0x000002e4
     e84:	.word	0x00000413
     e88:	.word	0x00000438
     e8c:	.word	0x00011300
     e90:	.word	0x000112d4

00000e94 <h_hdl_new_remote_user>:
     e94:	ldr	r3, [pc, #28]	; eb8 <h_hdl_new_remote_user+0x24>
     e98:	ldr	r2, [pc, #28]	; ebc <h_hdl_new_remote_user+0x28>
     e9c:	add	r3, pc, r3
     ea0:	ldr	r3, [r3, r2]
     ea4:	ldr	r2, [r0, #56]	; 0x38
     ea8:	ldr	r3, [r3, #288]	; 0x120
     eac:	tst	r2, r3
     eb0:	bxeq	lr
     eb4:	b	da0 <helper_add>
     eb8:	.word	0x0001115c
     ebc:	.word	0x00000050

00000ec0 <h_hdl_umode_changed>:
     ec0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     ec4:	ldr	r6, [pc, #236]	; fb8 <h_hdl_umode_changed+0xf8>
     ec8:	ldr	r3, [pc, #236]	; fbc <h_hdl_umode_changed+0xfc>
     ecc:	ldrd	r4, [r0]
     ed0:	add	r6, pc, r6
     ed4:	ldr	r7, [r6, r3]
     ed8:	ldr	r2, [r4, #56]	; 0x38
     edc:	ldr	r3, [r7, #288]	; 0x120
     ee0:	eor	r5, r5, r2
     ee4:	tst	r2, r3
     ee8:	and	r5, r5, r3
     eec:	beq	fa8 <h_hdl_umode_changed+0xe8>
     ef0:	ldr	r1, [r4, #64]	; 0x40
     ef4:	mov	r3, #0
     ef8:	and	r2, r1, #8192	; 0x2000
     efc:	orrs	r3, r2, r3
     f00:	beq	f90 <h_hdl_umode_changed+0xd0>
     f04:	ldrh	r3, [r4, #80]	; 0x50
     f08:	cmp	r3, #64	; 0x40
     f0c:	bne	f90 <h_hdl_umode_changed+0xd0>
     f10:	ldr	r3, [r4, #24]
     f14:	cmp	r3, #0
     f18:	bne	f70 <h_hdl_umode_changed+0xb0>
     f1c:	ldr	r3, [r4, #56]	; 0x38
     f20:	mov	r0, r4
     f24:	ldr	r2, [r7, #288]	; 0x120
     f28:	ldr	r1, [pc, #144]	; fc0 <h_hdl_umode_changed+0x100>
     f2c:	bic	r3, r3, r2
     f30:	str	r3, [r4, #56]	; 0x38
     f34:	add	r1, pc, r1
     f38:	ldr	r3, [pc, #132]	; fc4 <h_hdl_umode_changed+0x104>
     f3c:	ldr	r2, [r6, r3]
     f40:	ldr	r3, [pc, #128]	; fc8 <h_hdl_umode_changed+0x108>
     f44:	add	r2, r2, #88	; 0x58
     f48:	add	r3, pc, r3
     f4c:	str	r3, [sp]
     f50:	add	r3, r4, #88	; 0x58
     f54:	bl	6f4 <sendto_one@plt>
     f58:	cmp	r5, #0
     f5c:	bne	fb0 <h_hdl_umode_changed+0xf0>
     f60:	mov	r0, r4
     f64:	add	sp, sp, #12
     f68:	pop	{r4, r5, r6, r7, lr}
     f6c:	b	b90 <helper_delete>
     f70:	ldr	r0, [r3, #36]	; 0x24
     f74:	cmp	r0, #0
     f78:	beq	f1c <h_hdl_umode_changed+0x5c>
     f7c:	ldr	r1, [pc, #72]	; fcc <h_hdl_umode_changed+0x10c>
     f80:	add	r1, pc, r1
     f84:	bl	778 <privilegeset_in_set@plt>
     f88:	cmp	r0, #0
     f8c:	beq	f1c <h_hdl_umode_changed+0x5c>
     f90:	cmp	r5, #0
     f94:	beq	fb0 <h_hdl_umode_changed+0xf0>
     f98:	mov	r0, r4
     f9c:	add	sp, sp, #12
     fa0:	pop	{r4, r5, r6, r7, lr}
     fa4:	b	da0 <helper_add>
     fa8:	cmp	r5, #0
     fac:	bne	f60 <h_hdl_umode_changed+0xa0>
     fb0:	add	sp, sp, #12
     fb4:	pop	{r4, r5, r6, r7, pc}
     fb8:	.word	0x00011128
     fbc:	.word	0x00000050
     fc0:	.word	0x0000027c
     fc4:	.word	0x00000060
     fc8:	.word	0x00000302
     fcc:	.word	0x000002ca

00000fd0 <_modinit>:
     fd0:	push	{r4, r5, r6, lr}
     fd4:	ldr	r4, [pc, #104]	; 1044 <_modinit+0x74>
     fd8:	bl	718 <find_umode_slot@plt>
     fdc:	ldr	r3, [pc, #100]	; 1048 <_modinit+0x78>
     fe0:	add	r4, pc, r4
     fe4:	ldr	r5, [r4, r3]
     fe8:	str	r0, [r5, #288]	; 0x120
     fec:	bl	790 <construct_umodebuf@plt>
     ff0:	ldr	r3, [pc, #84]	; 104c <_modinit+0x7c>
     ff4:	ldr	r3, [r4, r3]
     ff8:	ldr	r4, [r3]
     ffc:	cmp	r4, #0
    1000:	bne	100c <_modinit+0x3c>
    1004:	mov	r0, r4
    1008:	pop	{r4, r5, r6, pc}
    100c:	ldr	r0, [r4]
    1010:	ldrh	r3, [r0, #80]	; 0x50
    1014:	cmp	r3, #64	; 0x40
    1018:	bne	103c <_modinit+0x6c>
    101c:	ldr	r3, [r0, #24]
    1020:	cmp	r3, #0
    1024:	beq	103c <_modinit+0x6c>
    1028:	ldr	r2, [r0, #56]	; 0x38
    102c:	ldr	r3, [r5, #288]	; 0x120
    1030:	tst	r2, r3
    1034:	beq	103c <_modinit+0x6c>
    1038:	bl	da0 <helper_add>
    103c:	ldr	r4, [r4, #8]
    1040:	b	ffc <_modinit+0x2c>
    1044:	.word	0x00011018
    1048:	.word	0x00000050
    104c:	.word	0x00000058

00001050 <me_dehelper>:
    1050:	push	{r4, r5, r6, lr}
    1054:	mov	r4, r2
    1058:	ldr	r6, [sp, #16]
    105c:	ldr	r5, [pc, #112]	; 10d4 <me_dehelper+0x84>
    1060:	ldr	r0, [r6, #4]
    1064:	bl	754 <find_person@plt>
    1068:	subs	r1, r0, #0
    106c:	add	r5, pc, r5
    1070:	bne	1090 <me_dehelper+0x40>
    1074:	ldr	r2, [pc, #92]	; 10d8 <me_dehelper+0x88>
    1078:	mov	r0, r4
    107c:	movw	r1, #401	; 0x191
    1080:	ldr	r3, [r6, #4]
    1084:	pop	{r4, r5, r6, lr}
    1088:	add	r2, pc, r2
    108c:	b	748 <sendto_one_numeric@plt>
    1090:	ldr	r0, [r1, #64]	; 0x40
    1094:	mov	r3, #0
    1098:	and	r2, r0, #8192	; 0x2000
    109c:	orrs	r3, r2, r3
    10a0:	popeq	{r4, r5, r6, pc}
    10a4:	ldrh	r3, [r1, #80]	; 0x50
    10a8:	cmp	r3, #64	; 0x40
    10ac:	popne	{r4, r5, r6, pc}
    10b0:	ldr	r3, [pc, #36]	; 10dc <me_dehelper+0x8c>
    10b4:	ldr	r2, [r1, #56]	; 0x38
    10b8:	ldr	r3, [r5, r3]
    10bc:	ldr	r3, [r3, #288]	; 0x120
    10c0:	tst	r2, r3
    10c4:	popeq	{r4, r5, r6, pc}
    10c8:	mov	r0, r4
    10cc:	pop	{r4, r5, r6, lr}
    10d0:	b	9cc <do_dehelper.part.2>
    10d4:	.word	0x00010f8c
    10d8:	.word	0x0000015d
    10dc:	.word	0x00000050

Disassembly of section .fini:

000010e0 <_fini>:
    10e0:	push	{r3, lr}
    10e4:	pop	{r3, pc}
