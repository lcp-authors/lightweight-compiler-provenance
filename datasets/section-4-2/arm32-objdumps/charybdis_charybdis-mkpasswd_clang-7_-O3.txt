
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010714 <.init>:
   10714:	push	{r3, lr}
   10718:	bl	10878 <sprintf@plt+0x48>
   1071c:	pop	{r3, pc}

Disassembly of section .plt:

00010720 <open@plt-0x14>:
   10720:	push	{lr}		; (str lr, [sp, #-4]!)
   10724:	ldr	lr, [pc, #4]	; 10730 <open@plt-0x4>
   10728:	add	lr, pc, lr
   1072c:	ldr	pc, [lr, #8]!
   10730:	ldrdeq	r1, [r1], -r0

00010734 <open@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010740 <abort@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2248]!	; 0x8c8

0001074c <srand@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2240]!	; 0x8c0

00010758 <__libc_start_main@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2232]!	; 0x8b8

00010764 <__gmon_start__@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010770 <getpass@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2216]!	; 0x8a8

0001077c <calloc@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2208]!	; 0x8a0

00010788 <free@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2200]!	; 0x898

00010794 <read@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2192]!	; 0x890

000107a0 <strlen@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2184]!	; 0x888

000107ac <getopt@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2176]!	; 0x880

000107b8 <strtol@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2168]!	; 0x878

000107c4 <printf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2160]!	; 0x870

000107d0 <fwrite@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2152]!	; 0x868

000107dc <time@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2144]!	; 0x860

000107e8 <strdup@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2136]!	; 0x858

000107f4 <rb_crypt@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2128]!	; 0x850

00010800 <puts@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2120]!	; 0x848

0001080c <rand@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2112]!	; 0x840

00010818 <strcmp@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2104]!	; 0x838

00010824 <exit@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2096]!	; 0x830

00010830 <sprintf@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #69632	; 0x11000
   10838:	ldr	pc, [ip, #2088]!	; 0x828

Disassembly of section .text:

0001083c <.text>:
   1083c:	mov	fp, #0
   10840:	mov	lr, #0
   10844:	pop	{r1}		; (ldr r1, [sp], #4)
   10848:	mov	r2, sp
   1084c:	push	{r2}		; (str r2, [sp, #-4]!)
   10850:	push	{r0}		; (str r0, [sp, #-4]!)
   10854:	ldr	ip, [pc, #16]	; 1086c <sprintf@plt+0x3c>
   10858:	push	{ip}		; (str ip, [sp, #-4]!)
   1085c:	ldr	r0, [pc, #12]	; 10870 <sprintf@plt+0x40>
   10860:	ldr	r3, [pc, #12]	; 10874 <sprintf@plt+0x44>
   10864:	bl	10758 <__libc_start_main@plt>
   10868:	bl	10740 <abort@plt>
   1086c:	andeq	r1, r1, r0, asr #2
   10870:	andeq	r0, r1, ip, lsr #18
   10874:	andeq	r1, r1, r0, ror #1
   10878:	ldr	r3, [pc, #20]	; 10894 <sprintf@plt+0x64>
   1087c:	ldr	r2, [pc, #20]	; 10898 <sprintf@plt+0x68>
   10880:	add	r3, pc, r3
   10884:	ldr	r2, [r3, r2]
   10888:	cmp	r2, #0
   1088c:	bxeq	lr
   10890:	b	10764 <__gmon_start__@plt>
   10894:	andeq	r1, r1, r8, ror r7
   10898:	andeq	r0, r0, r4, rrx
   1089c:	ldr	r0, [pc, #24]	; 108bc <sprintf@plt+0x8c>
   108a0:	ldr	r3, [pc, #24]	; 108c0 <sprintf@plt+0x90>
   108a4:	cmp	r3, r0
   108a8:	bxeq	lr
   108ac:	ldr	r3, [pc, #16]	; 108c4 <sprintf@plt+0x94>
   108b0:	cmp	r3, #0
   108b4:	bxeq	lr
   108b8:	bx	r3
   108bc:	andeq	r2, r2, r0, ror r0
   108c0:	andeq	r2, r2, r0, ror r0
   108c4:	andeq	r0, r0, r0
   108c8:	ldr	r0, [pc, #36]	; 108f4 <sprintf@plt+0xc4>
   108cc:	ldr	r1, [pc, #36]	; 108f8 <sprintf@plt+0xc8>
   108d0:	sub	r1, r1, r0
   108d4:	asr	r1, r1, #2
   108d8:	add	r1, r1, r1, lsr #31
   108dc:	asrs	r1, r1, #1
   108e0:	bxeq	lr
   108e4:	ldr	r3, [pc, #16]	; 108fc <sprintf@plt+0xcc>
   108e8:	cmp	r3, #0
   108ec:	bxeq	lr
   108f0:	bx	r3
   108f4:	andeq	r2, r2, r0, ror r0
   108f8:	andeq	r2, r2, r0, ror r0
   108fc:	andeq	r0, r0, r0
   10900:	push	{r4, lr}
   10904:	ldr	r4, [pc, #24]	; 10924 <sprintf@plt+0xf4>
   10908:	ldrb	r3, [r4]
   1090c:	cmp	r3, #0
   10910:	popne	{r4, pc}
   10914:	bl	1089c <sprintf@plt+0x6c>
   10918:	mov	r3, #1
   1091c:	strb	r3, [r4]
   10920:	pop	{r4, pc}
   10924:	andeq	r2, r2, ip, ror r0
   10928:	b	108c8 <sprintf@plt+0x98>
   1092c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10930:	add	fp, sp, #28
   10934:	sub	sp, sp, #12
   10938:	movw	r7, #4436	; 0x1154
   1093c:	movw	r9, #8312	; 0x2078
   10940:	mov	r5, r0
   10944:	mov	r0, #0
   10948:	mov	r4, r1
   1094c:	mov	r8, #0
   10950:	mov	r6, #0
   10954:	mov	sl, #0
   10958:	str	r0, [sp, #4]
   1095c:	mov	r0, #0
   10960:	movt	r7, #1
   10964:	movt	r9, #2
   10968:	str	r0, [sp]
   1096c:	b	1097c <sprintf@plt+0x14c>
   10970:	movw	r0, #4451	; 0x1163
   10974:	movt	r0, #1
   10978:	bl	107c4 <printf@plt>
   1097c:	mov	r0, r5
   10980:	mov	r1, r4
   10984:	mov	r2, r7
   10988:	bl	107ac <getopt@plt>
   1098c:	mov	r1, r0
   10990:	sub	r0, r0, #63	; 0x3f
   10994:	cmp	r0, #58	; 0x3a
   10998:	bhi	10a9c <sprintf@plt+0x26c>
   1099c:	add	r2, pc, #0
   109a0:	ldr	pc, [r2, r0, lsl #2]
   109a4:	andeq	r0, r1, r0, asr #28
   109a8:	andeq	r0, r1, r0, ror r9
   109ac:	andeq	r0, r1, r0, ror r9
   109b0:	andeq	r0, r1, r0, ror r9
   109b4:	andeq	r0, r1, r0, ror r9
   109b8:	andeq	r0, r1, r0, ror r9
   109bc:	andeq	r0, r1, r0, ror r9
   109c0:	andeq	r0, r1, r0, ror r9
   109c4:	andeq	r0, r1, r0, ror r9
   109c8:	andeq	r0, r1, r0, ror r9
   109cc:	andeq	r0, r1, r0, ror r9
   109d0:	andeq	r0, r1, r0, ror r9
   109d4:	andeq	r0, r1, r0, ror r9
   109d8:	andeq	r0, r1, r0, ror r9
   109dc:	andeq	r0, r1, r0, ror r9
   109e0:	andeq	r0, r1, r0, ror r9
   109e4:	andeq	r0, r1, r0, ror r9
   109e8:	andeq	r0, r1, r0, ror r9
   109ec:	andeq	r0, r1, r0, ror r9
   109f0:	andeq	r0, r1, r0, ror r9
   109f4:	andeq	r0, r1, r0, ror r9
   109f8:	andeq	r0, r1, r0, ror r9
   109fc:	andeq	r0, r1, r0, ror r9
   10a00:	andeq	r0, r1, r0, ror r9
   10a04:	andeq	r0, r1, r0, ror r9
   10a08:	andeq	r0, r1, r0, ror r9
   10a0c:	andeq	r0, r1, r0, ror r9
   10a10:	andeq	r0, r1, r0, ror r9
   10a14:	andeq	r0, r1, r0, ror r9
   10a18:	andeq	r0, r1, r0, ror r9
   10a1c:	andeq	r0, r1, r0, ror r9
   10a20:	andeq	r0, r1, r0, ror r9
   10a24:	andeq	r0, r1, r0, ror r9
   10a28:	andeq	r0, r1, r0, ror r9
   10a2c:	andeq	r0, r1, r0, ror r9
   10a30:	muleq	r1, r0, sl
   10a34:	andeq	r0, r1, r0, ror r9
   10a38:	andeq	r0, r1, r0, ror r9
   10a3c:	andeq	r0, r1, r0, ror r9
   10a40:	andeq	r0, r1, r0, ror r9
   10a44:	andeq	r0, r1, r0, ror r9
   10a48:	andeq	r0, r1, r4, asr #28
   10a4c:	andeq	r0, r1, r0, ror r9
   10a50:	andeq	r0, r1, r0, ror r9
   10a54:	andeq	r0, r1, r0, ror r9
   10a58:	andeq	r0, r1, r0, asr #21
   10a5c:			; <UNDEFINED> instruction: 0x00010ab8
   10a60:	andeq	r0, r1, r0, ror r9
   10a64:	andeq	r0, r1, r0, ror r9
   10a68:	ldrdeq	r0, [r1], -ip
   10a6c:	andeq	r0, r1, r0, ror r9
   10a70:	andeq	r0, r1, ip, ror #21
   10a74:	andeq	r0, r1, r8, lsr #21
   10a78:	andeq	r0, r1, r0, ror r9
   10a7c:	andeq	r0, r1, r0, ror r9
   10a80:	andeq	r0, r1, r0, ror r9
   10a84:	andeq	r0, r1, r0, ror r9
   10a88:	andeq	r0, r1, r8, lsl #22
   10a8c:	andeq	r0, r1, r0, lsl fp
   10a90:	orr	r8, r8, #16
   10a94:	mov	sl, #4
   10a98:	b	1097c <sprintf@plt+0x14c>
   10a9c:	cmn	r1, #1
   10aa0:	beq	10b18 <sprintf@plt+0x2e8>
   10aa4:	b	10970 <sprintf@plt+0x140>
   10aa8:	ldr	r0, [r9]
   10aac:	orr	r8, r8, #2
   10ab0:	str	r0, [sp]
   10ab4:	b	1097c <sprintf@plt+0x14c>
   10ab8:	orr	r8, r8, #1
   10abc:	b	1097c <sprintf@plt+0x14c>
   10ac0:	ldr	r0, [r9]
   10ac4:	mov	r1, #0
   10ac8:	mov	r2, #10
   10acc:	bl	107b8 <strtol@plt>
   10ad0:	mov	r6, r0
   10ad4:	orr	r8, r8, #8
   10ad8:	b	1097c <sprintf@plt+0x14c>
   10adc:	ldr	r0, [r9]
   10ae0:	orr	r8, r8, #4
   10ae4:	str	r0, [sp, #4]
   10ae8:	b	1097c <sprintf@plt+0x14c>
   10aec:	ldr	r0, [r9]
   10af0:	mov	r1, #0
   10af4:	mov	r2, #10
   10af8:	bl	107b8 <strtol@plt>
   10afc:	mov	sl, r0
   10b00:	orr	r8, r8, #32
   10b04:	b	1097c <sprintf@plt+0x14c>
   10b08:	orr	r8, r8, #64	; 0x40
   10b0c:	b	1097c <sprintf@plt+0x14c>
   10b10:	orr	r8, r8, #128	; 0x80
   10b14:	b	1097c <sprintf@plt+0x14c>
   10b18:	tst	r8, #1
   10b1c:	bne	10b60 <sprintf@plt+0x330>
   10b20:	tst	r8, #16
   10b24:	bne	10c20 <sprintf@plt+0x3f0>
   10b28:	cmp	r6, #0
   10b2c:	and	r0, r8, #2
   10b30:	movweq	r6, #16
   10b34:	tst	r8, #64	; 0x40
   10b38:	bne	10d04 <sprintf@plt+0x4d4>
   10b3c:	cmp	r0, #0
   10b40:	bne	10d88 <sprintf@plt+0x558>
   10b44:	cmp	r6, #17
   10b48:	bge	10e98 <sprintf@plt+0x668>
   10b4c:	movw	r7, #8317	; 0x207d
   10b50:	movw	r0, #13860	; 0x3624
   10b54:	movt	r7, #2
   10b58:	strh	r0, [r7, #105]!	; 0x69
   10b5c:	b	10b88 <sprintf@plt+0x358>
   10b60:	cmp	r6, #0
   10b64:	movweq	r6, #8
   10b68:	tst	r8, #2
   10b6c:	bne	10c94 <sprintf@plt+0x464>
   10b70:	cmp	r6, #17
   10b74:	bge	10e5c <sprintf@plt+0x62c>
   10b78:	movw	r7, #8317	; 0x207d
   10b7c:	movw	r0, #12580	; 0x3124
   10b80:	movt	r7, #2
   10b84:	strh	r0, [r7, #21]!
   10b88:	mov	r4, #36	; 0x24
   10b8c:	add	r0, r7, #3
   10b90:	mov	r1, r6
   10b94:	strb	r4, [r7, #2]
   10b98:	bl	10fc4 <sprintf@plt+0x794>
   10b9c:	add	r0, r7, r6
   10ba0:	strh	r4, [r0, #3]
   10ba4:	tst	r8, #4
   10ba8:	bne	10cd4 <sprintf@plt+0x4a4>
   10bac:	movw	r0, #4503	; 0x1197
   10bb0:	movt	r0, #1
   10bb4:	bl	10770 <getpass@plt>
   10bb8:	mov	r1, r7
   10bbc:	bl	107f4 <rb_crypt@plt>
   10bc0:	cmp	r0, #0
   10bc4:	beq	10df0 <sprintf@plt+0x5c0>
   10bc8:	bl	107e8 <strdup@plt>
   10bcc:	mov	r4, r0
   10bd0:	movw	r0, #4534	; 0x11b6
   10bd4:	movt	r0, #1
   10bd8:	bl	10770 <getpass@plt>
   10bdc:	mov	r1, r7
   10be0:	bl	107f4 <rb_crypt@plt>
   10be4:	cmp	r0, #0
   10be8:	beq	10df0 <sprintf@plt+0x5c0>
   10bec:	mov	r1, r0
   10bf0:	mov	r0, r4
   10bf4:	bl	10818 <strcmp@plt>
   10bf8:	cmp	r0, #0
   10bfc:	beq	10cec <sprintf@plt+0x4bc>
   10c00:	movw	r0, #8304	; 0x2070
   10c04:	mov	r4, #1
   10c08:	mov	r1, #23
   10c0c:	movt	r0, #2
   10c10:	ldr	r3, [r0]
   10c14:	movw	r0, #4542	; 0x11be
   10c18:	movt	r0, #1
   10c1c:	b	10e2c <sprintf@plt+0x5fc>
   10c20:	cmp	r6, #0
   10c24:	movweq	r6, #22
   10c28:	tst	r8, #2
   10c2c:	bne	10d28 <sprintf@plt+0x4f8>
   10c30:	cmp	r6, #23
   10c34:	bge	10e84 <sprintf@plt+0x654>
   10c38:	movw	r1, #4664	; 0x1238
   10c3c:	add	r4, sp, #9
   10c40:	mov	r2, sl
   10c44:	movt	r1, #1
   10c48:	mov	r0, r4
   10c4c:	bl	10830 <sprintf@plt>
   10c50:	movw	r5, #8443	; 0x20fb
   10c54:	movw	r1, #4680	; 0x1248
   10c58:	mov	r2, r4
   10c5c:	movt	r5, #2
   10c60:	movt	r1, #1
   10c64:	add	r7, r5, #31
   10c68:	mov	r0, r7
   10c6c:	bl	10830 <sprintf@plt>
   10c70:	add	r0, r5, #38	; 0x26
   10c74:	mov	r1, r6
   10c78:	bl	10fc4 <sprintf@plt+0x794>
   10c7c:	add	r0, r7, r6
   10c80:	mov	r1, #36	; 0x24
   10c84:	strh	r1, [r0, #7]
   10c88:	tst	r8, #4
   10c8c:	beq	10bac <sprintf@plt+0x37c>
   10c90:	b	10cd4 <sprintf@plt+0x4a4>
   10c94:	ldr	r4, [sp]
   10c98:	cmp	r4, #0
   10c9c:	beq	10e48 <sprintf@plt+0x618>
   10ca0:	mov	r0, r4
   10ca4:	bl	107a0 <strlen@plt>
   10ca8:	cmp	r0, #17
   10cac:	bcs	10e48 <sprintf@plt+0x618>
   10cb0:	movw	r7, #8317	; 0x207d
   10cb4:	movw	r1, #4566	; 0x11d6
   10cb8:	movt	r7, #2
   10cbc:	movt	r1, #1
   10cc0:	mov	r0, r7
   10cc4:	mov	r2, r4
   10cc8:	bl	10830 <sprintf@plt>
   10ccc:	tst	r8, #4
   10cd0:	beq	10bac <sprintf@plt+0x37c>
   10cd4:	ldr	r0, [sp, #4]
   10cd8:	cmp	r0, #0
   10cdc:	beq	10e10 <sprintf@plt+0x5e0>
   10ce0:	mov	r1, r7
   10ce4:	bl	107f4 <rb_crypt@plt>
   10ce8:	mov	r4, r0
   10cec:	mov	r0, r4
   10cf0:	bl	10800 <puts@plt>
   10cf4:	mov	r4, #0
   10cf8:	mov	r0, r4
   10cfc:	sub	sp, fp, #28
   10d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d04:	cmp	r0, #0
   10d08:	bne	10dbc <sprintf@plt+0x58c>
   10d0c:	cmp	r6, #17
   10d10:	bge	10eac <sprintf@plt+0x67c>
   10d14:	movw	r7, #8317	; 0x207d
   10d18:	movw	r0, #13604	; 0x3524
   10d1c:	movt	r7, #2
   10d20:	strh	r0, [r7, #84]!	; 0x54
   10d24:	b	10b88 <sprintf@plt+0x358>
   10d28:	ldr	r5, [sp]
   10d2c:	cmp	r5, #0
   10d30:	beq	10e70 <sprintf@plt+0x640>
   10d34:	mov	r0, r5
   10d38:	bl	107a0 <strlen@plt>
   10d3c:	cmp	r0, #23
   10d40:	bcs	10e70 <sprintf@plt+0x640>
   10d44:	movw	r1, #4664	; 0x1238
   10d48:	add	r4, sp, #9
   10d4c:	mov	r2, sl
   10d50:	movt	r1, #1
   10d54:	mov	r0, r4
   10d58:	bl	10830 <sprintf@plt>
   10d5c:	movw	r7, #8443	; 0x20fb
   10d60:	movw	r1, #4669	; 0x123d
   10d64:	mov	r2, r4
   10d68:	mov	r3, r5
   10d6c:	movt	r7, #2
   10d70:	movt	r1, #1
   10d74:	mov	r0, r7
   10d78:	bl	10830 <sprintf@plt>
   10d7c:	tst	r8, #4
   10d80:	beq	10bac <sprintf@plt+0x37c>
   10d84:	b	10cd4 <sprintf@plt+0x4a4>
   10d88:	ldr	r4, [sp]
   10d8c:	cmp	r4, #0
   10d90:	beq	10e48 <sprintf@plt+0x618>
   10d94:	mov	r0, r4
   10d98:	bl	107a0 <strlen@plt>
   10d9c:	cmp	r0, #17
   10da0:	bcs	10e48 <sprintf@plt+0x618>
   10da4:	movw	r0, #8317	; 0x207d
   10da8:	movw	r1, #4657	; 0x1231
   10dac:	movt	r0, #2
   10db0:	movt	r1, #1
   10db4:	add	r7, r0, #63	; 0x3f
   10db8:	b	10cc0 <sprintf@plt+0x490>
   10dbc:	ldr	r4, [sp]
   10dc0:	cmp	r4, #0
   10dc4:	beq	10e48 <sprintf@plt+0x618>
   10dc8:	mov	r0, r4
   10dcc:	bl	107a0 <strlen@plt>
   10dd0:	cmp	r0, #17
   10dd4:	bcs	10e48 <sprintf@plt+0x618>
   10dd8:	movw	r0, #8317	; 0x207d
   10ddc:	movw	r1, #4650	; 0x122a
   10de0:	movt	r0, #2
   10de4:	movt	r1, #1
   10de8:	add	r7, r0, #42	; 0x2a
   10dec:	b	10cc0 <sprintf@plt+0x490>
   10df0:	movw	r0, #8304	; 0x2070
   10df4:	mov	r4, #1
   10df8:	mov	r1, #18
   10dfc:	movt	r0, #2
   10e00:	ldr	r3, [r0]
   10e04:	movw	r0, #4515	; 0x11a3
   10e08:	movt	r0, #1
   10e0c:	b	10e2c <sprintf@plt+0x5fc>
   10e10:	movw	r0, #8304	; 0x2070
   10e14:	mov	r4, #1
   10e18:	mov	r1, #30
   10e1c:	movt	r0, #2
   10e20:	ldr	r3, [r0]
   10e24:	movw	r0, #4472	; 0x1178
   10e28:	movt	r0, #1
   10e2c:	mov	r2, #1
   10e30:	bl	107d0 <fwrite@plt>
   10e34:	mov	r0, r4
   10e38:	sub	sp, fp, #28
   10e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e40:	bl	10f60 <sprintf@plt+0x730>
   10e44:	bl	10ec0 <sprintf@plt+0x690>
   10e48:	movw	r0, #5840	; 0x16d0
   10e4c:	movt	r0, #1
   10e50:	bl	10800 <puts@plt>
   10e54:	mov	r0, #1
   10e58:	bl	10824 <exit@plt>
   10e5c:	movw	r0, #5664	; 0x1620
   10e60:	movt	r0, #1
   10e64:	bl	10800 <puts@plt>
   10e68:	mov	r0, #0
   10e6c:	bl	10824 <exit@plt>
   10e70:	movw	r0, #5696	; 0x1640
   10e74:	movt	r0, #1
   10e78:	bl	10800 <puts@plt>
   10e7c:	mov	r0, #1
   10e80:	bl	10824 <exit@plt>
   10e84:	movw	r0, #5776	; 0x1690
   10e88:	movt	r0, #1
   10e8c:	bl	10800 <puts@plt>
   10e90:	mov	r0, #0
   10e94:	bl	10824 <exit@plt>
   10e98:	movw	r0, #5920	; 0x1720
   10e9c:	movt	r0, #1
   10ea0:	bl	10800 <puts@plt>
   10ea4:	mov	r0, #0
   10ea8:	bl	10824 <exit@plt>
   10eac:	movw	r0, #5808	; 0x16b0
   10eb0:	movt	r0, #1
   10eb4:	bl	10800 <puts@plt>
   10eb8:	mov	r0, #0
   10ebc:	bl	10824 <exit@plt>
   10ec0:	push	{fp, lr}
   10ec4:	mov	fp, sp
   10ec8:	movw	r0, #4688	; 0x1250
   10ecc:	movt	r0, #1
   10ed0:	bl	10800 <puts@plt>
   10ed4:	movw	r0, #4768	; 0x12a0
   10ed8:	movt	r0, #1
   10edc:	bl	10800 <puts@plt>
   10ee0:	movw	r0, #4800	; 0x12c0
   10ee4:	movt	r0, #1
   10ee8:	bl	10800 <puts@plt>
   10eec:	movw	r0, #4832	; 0x12e0
   10ef0:	movt	r0, #1
   10ef4:	bl	10800 <puts@plt>
   10ef8:	movw	r0, #4864	; 0x1300
   10efc:	movt	r0, #1
   10f00:	bl	10800 <puts@plt>
   10f04:	movw	r0, #4896	; 0x1320
   10f08:	movt	r0, #1
   10f0c:	bl	10800 <puts@plt>
   10f10:	movw	r0, #4960	; 0x1360
   10f14:	movt	r0, #1
   10f18:	bl	10800 <puts@plt>
   10f1c:	movw	r0, #5024	; 0x13a0
   10f20:	movt	r0, #1
   10f24:	bl	10800 <puts@plt>
   10f28:	movw	r0, #5072	; 0x13d0
   10f2c:	movt	r0, #1
   10f30:	bl	10800 <puts@plt>
   10f34:	movw	r0, #5136	; 0x1410
   10f38:	movt	r0, #1
   10f3c:	bl	10800 <puts@plt>
   10f40:	movw	r0, #5168	; 0x1430
   10f44:	movt	r0, #1
   10f48:	bl	10800 <puts@plt>
   10f4c:	movw	r0, #5216	; 0x1460
   10f50:	movt	r0, #1
   10f54:	bl	10800 <puts@plt>
   10f58:	mov	r0, #0
   10f5c:	bl	10824 <exit@plt>
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	movw	r0, #5264	; 0x1490
   10f6c:	movt	r0, #1
   10f70:	bl	10800 <puts@plt>
   10f74:	movw	r0, #5312	; 0x14c0
   10f78:	movt	r0, #1
   10f7c:	bl	10800 <puts@plt>
   10f80:	movw	r0, #5392	; 0x1510
   10f84:	movt	r0, #1
   10f88:	bl	10800 <puts@plt>
   10f8c:	movw	r0, #5456	; 0x1550
   10f90:	movt	r0, #1
   10f94:	bl	10800 <puts@plt>
   10f98:	movw	r0, #5520	; 0x1590
   10f9c:	movt	r0, #1
   10fa0:	bl	10800 <puts@plt>
   10fa4:	movw	r0, #5584	; 0x15d0
   10fa8:	movt	r0, #1
   10fac:	bl	10800 <puts@plt>
   10fb0:	movw	r0, #5632	; 0x1600
   10fb4:	movt	r0, #1
   10fb8:	bl	10800 <puts@plt>
   10fbc:	mov	r0, #0
   10fc0:	bl	10824 <exit@plt>
   10fc4:	push	{r4, r5, r6, r7, fp, lr}
   10fc8:	add	fp, sp, #16
   10fcc:	mov	r5, r0
   10fd0:	movw	r0, #4573	; 0x11dd
   10fd4:	mov	r4, r1
   10fd8:	mov	r1, #0
   10fdc:	movt	r0, #1
   10fe0:	bl	10734 <open@plt>
   10fe4:	cmn	r0, #1
   10fe8:	ble	11050 <sprintf@plt+0x820>
   10fec:	mov	r7, r0
   10ff0:	mov	r0, #1
   10ff4:	mov	r1, r4
   10ff8:	bl	1077c <calloc@plt>
   10ffc:	mov	r6, r0
   11000:	mov	r0, r7
   11004:	mov	r2, r4
   11008:	mov	r1, r6
   1100c:	bl	10794 <read@plt>
   11010:	cmp	r0, r4
   11014:	bne	11094 <sprintf@plt+0x864>
   11018:	cmp	r4, #1
   1101c:	blt	11044 <sprintf@plt+0x814>
   11020:	movw	r0, #4585	; 0x11e9
   11024:	mov	r1, r6
   11028:	movt	r0, #1
   1102c:	ldrb	r2, [r1], #1
   11030:	subs	r4, r4, #1
   11034:	and	r2, r2, #63	; 0x3f
   11038:	ldrb	r2, [r0, r2]
   1103c:	strb	r2, [r5], #1
   11040:	bne	1102c <sprintf@plt+0x7fc>
   11044:	mov	r0, r6
   11048:	pop	{r4, r5, r6, r7, fp, lr}
   1104c:	b	10788 <free@plt>
   11050:	mov	r0, #0
   11054:	bl	107dc <time@plt>
   11058:	bl	1074c <srand@plt>
   1105c:	cmp	r4, #1
   11060:	blt	110dc <sprintf@plt+0x8ac>
   11064:	movw	r6, #4585	; 0x11e9
   11068:	movt	r6, #1
   1106c:	bl	1080c <rand@plt>
   11070:	asr	r1, r0, #31
   11074:	subs	r4, r4, #1
   11078:	add	r1, r0, r1, lsr #26
   1107c:	bic	r1, r1, #63	; 0x3f
   11080:	sub	r0, r0, r1
   11084:	ldrb	r0, [r6, r0]
   11088:	strb	r0, [r5], #1
   1108c:	bne	1106c <sprintf@plt+0x83c>
   11090:	b	110dc <sprintf@plt+0x8ac>
   11094:	mov	r0, r6
   11098:	bl	10788 <free@plt>
   1109c:	mov	r0, #0
   110a0:	bl	107dc <time@plt>
   110a4:	bl	1074c <srand@plt>
   110a8:	cmp	r4, #1
   110ac:	poplt	{r4, r5, r6, r7, fp, pc}
   110b0:	movw	r6, #4585	; 0x11e9
   110b4:	movt	r6, #1
   110b8:	bl	1080c <rand@plt>
   110bc:	asr	r1, r0, #31
   110c0:	subs	r4, r4, #1
   110c4:	add	r1, r0, r1, lsr #26
   110c8:	bic	r1, r1, #63	; 0x3f
   110cc:	sub	r0, r0, r1
   110d0:	ldrb	r0, [r6, r0]
   110d4:	strb	r0, [r5], #1
   110d8:	bne	110b8 <sprintf@plt+0x888>
   110dc:	pop	{r4, r5, r6, r7, fp, pc}
   110e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110e4:	mov	r7, r0
   110e8:	ldr	r6, [pc, #72]	; 11138 <sprintf@plt+0x908>
   110ec:	ldr	r5, [pc, #72]	; 1113c <sprintf@plt+0x90c>
   110f0:	add	r6, pc, r6
   110f4:	add	r5, pc, r5
   110f8:	sub	r6, r6, r5
   110fc:	mov	r8, r1
   11100:	mov	r9, r2
   11104:	bl	10714 <open@plt-0x20>
   11108:	asrs	r6, r6, #2
   1110c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11110:	mov	r4, #0
   11114:	add	r4, r4, #1
   11118:	ldr	r3, [r5], #4
   1111c:	mov	r2, r9
   11120:	mov	r1, r8
   11124:	mov	r0, r7
   11128:	blx	r3
   1112c:	cmp	r6, r4
   11130:	bne	11114 <sprintf@plt+0x8e4>
   11134:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11138:	strdeq	r0, [r1], -ip
   1113c:	strdeq	r0, [r1], -r4
   11140:	bx	lr

Disassembly of section .fini:

00011144 <.fini>:
   11144:	push	{r3, lr}
   11148:	pop	{r3, pc}
