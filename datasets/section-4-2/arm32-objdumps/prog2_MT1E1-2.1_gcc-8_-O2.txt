
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10f6c <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r1, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <free@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <memcpy@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <realloc@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fwrite@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <strcpy@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <puts@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <malloc@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <__libc_start_main@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <__gmon_start__@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <strlen@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <fprintf@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <sprintf@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <abort@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

Disassembly of section .text:

00010bd8 <main@@Base>:
   10bd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10bdc:	mov	r4, #0
   10be0:	strd	r6, [sp, #8]
   10be4:	strd	r8, [sp, #16]
   10be8:	strd	sl, [sp, #24]
   10bec:	str	lr, [sp, #32]
   10bf0:	sub	sp, sp, #12
   10bf4:	bl	11290 <vetor_novo@@Base>
   10bf8:	ldr	r3, [pc, #760]	; 10ef8 <main@@Base+0x320>
   10bfc:	mov	r5, r0
   10c00:	add	r3, pc, r3
   10c04:	mov	r2, r3
   10c08:	ldr	r3, [pc, #748]	; 10efc <main@@Base+0x324>
   10c0c:	str	r2, [sp]
   10c10:	ldr	r8, [r2, r3]
   10c14:	mov	r6, r8
   10c18:	mov	r2, r4
   10c1c:	mov	r0, r5
   10c20:	ldr	r1, [r6], #4
   10c24:	add	r4, r4, #1
   10c28:	bl	11434 <vetor_insere@@Base>
   10c2c:	cmp	r4, #4
   10c30:	bne	10c18 <main@@Base+0x40>
   10c34:	bl	1176c <lista_nova@@Base>
   10c38:	ldr	r3, [pc, #704]	; 10f00 <main@@Base+0x328>
   10c3c:	mov	r4, r0
   10c40:	ldr	r2, [sp]
   10c44:	ldr	r9, [r2, r3]
   10c48:	sub	r6, r9, #4
   10c4c:	add	r7, r9, #204	; 0xcc
   10c50:	ldr	r1, [r6, #4]!
   10c54:	mov	r0, r4
   10c58:	bl	111bc <insere_carta@@Base>
   10c5c:	cmp	r6, r7
   10c60:	bne	10c50 <main@@Base+0x78>
   10c64:	bl	1176c <lista_nova@@Base>
   10c68:	ldr	r3, [pc, #660]	; 10f04 <main@@Base+0x32c>
   10c6c:	mov	r6, r0
   10c70:	ldr	r2, [sp]
   10c74:	ldr	sl, [r2, r3]
   10c78:	sub	r7, sl, #4
   10c7c:	add	sl, sl, #48	; 0x30
   10c80:	ldr	r1, [r7, #4]!
   10c84:	mov	r2, #0
   10c88:	mov	r0, r6
   10c8c:	bl	11828 <lista_insere@@Base>
   10c90:	cmp	r7, sl
   10c94:	bne	10c80 <main@@Base+0xa8>
   10c98:	ldr	r3, [pc, #616]	; 10f08 <main@@Base+0x330>
   10c9c:	mov	r1, r6
   10ca0:	mov	r0, r4
   10ca4:	mov	r7, #0
   10ca8:	ldr	r2, [sp]
   10cac:	ldr	sl, [pc, #600]	; 10f0c <main@@Base+0x334>
   10cb0:	ldr	fp, [r2, r3]
   10cb4:	add	sl, pc, sl
   10cb8:	ldr	r3, [fp]
   10cbc:	str	r3, [sp, #4]
   10cc0:	bl	11020 <tira_carta@@Base>
   10cc4:	ldr	r1, [pc, #580]	; 10f10 <main@@Base+0x338>
   10cc8:	mov	r2, r0
   10ccc:	ldr	r3, [sp, #4]
   10cd0:	add	r1, pc, r1
   10cd4:	mov	r0, r3
   10cd8:	bl	10bb4 <fprintf@plt>
   10cdc:	ldr	r3, [fp]
   10ce0:	mov	r1, r6
   10ce4:	mov	r0, r4
   10ce8:	str	r3, [sp, #4]
   10cec:	bl	11020 <tira_carta@@Base>
   10cf0:	ldr	r1, [pc, #540]	; 10f14 <main@@Base+0x33c>
   10cf4:	mov	r2, r0
   10cf8:	ldr	r3, [sp, #4]
   10cfc:	add	r1, pc, r1
   10d00:	mov	r0, r3
   10d04:	bl	10bb4 <fprintf@plt>
   10d08:	ldr	r3, [fp]
   10d0c:	mov	r1, r6
   10d10:	mov	r0, r4
   10d14:	str	r3, [sp, #4]
   10d18:	bl	11020 <tira_carta@@Base>
   10d1c:	ldr	r1, [pc, #500]	; 10f18 <main@@Base+0x340>
   10d20:	mov	r2, r0
   10d24:	ldr	r3, [sp, #4]
   10d28:	add	r1, pc, r1
   10d2c:	mov	r0, r3
   10d30:	bl	10bb4 <fprintf@plt>
   10d34:	mov	r0, r4
   10d38:	ldr	r1, [r9, #196]	; 0xc4
   10d3c:	bl	111bc <insere_carta@@Base>
   10d40:	mov	r0, r4
   10d44:	ldr	r1, [r9, #200]	; 0xc8
   10d48:	bl	111bc <insere_carta@@Base>
   10d4c:	mov	r0, r4
   10d50:	ldr	r1, [r9, #204]	; 0xcc
   10d54:	bl	111bc <insere_carta@@Base>
   10d58:	bl	11290 <vetor_novo@@Base>
   10d5c:	mov	r9, r0
   10d60:	mov	r2, r6
   10d64:	mov	r1, r4
   10d68:	mov	r0, r5
   10d6c:	bl	1108c <faz_jogada@@Base>
   10d70:	subs	r1, r0, #0
   10d74:	mov	r2, r7
   10d78:	mov	r0, r9
   10d7c:	add	r7, r7, #1
   10d80:	beq	10d88 <main@@Base+0x1b0>
   10d84:	bl	11434 <vetor_insere@@Base>
   10d88:	mov	r0, r5
   10d8c:	bl	113f0 <vetor_tamanho@@Base>
   10d90:	cmp	r0, #4
   10d94:	mov	r2, #44	; 0x2c
   10d98:	mov	r1, #1
   10d9c:	mov	r0, sl
   10da0:	beq	10dac <main@@Base+0x1d4>
   10da4:	ldr	r3, [fp]
   10da8:	bl	10b60 <fwrite@plt>
   10dac:	cmp	r7, #13
   10db0:	bne	10d60 <main@@Base+0x188>
   10db4:	ldr	r0, [pc, #352]	; 10f1c <main@@Base+0x344>
   10db8:	add	r0, pc, r0
   10dbc:	bl	10b78 <puts@plt>
   10dc0:	ldr	r3, [r9]
   10dc4:	cmp	r3, #0
   10dc8:	ble	10e1c <main@@Base+0x244>
   10dcc:	ldr	r3, [pc, #332]	; 10f20 <main@@Base+0x348>
   10dd0:	mov	r1, #0
   10dd4:	str	r4, [sp, #4]
   10dd8:	add	r3, pc, r3
   10ddc:	mov	r4, r3
   10de0:	ldr	sl, [fp]
   10de4:	mov	r0, r9
   10de8:	add	r7, r1, #1
   10dec:	bl	11400 <vetor_elemento@@Base>
   10df0:	mov	r3, r0
   10df4:	mov	r1, r4
   10df8:	mov	r2, r7
   10dfc:	mov	r0, sl
   10e00:	bl	10bb4 <fprintf@plt>
   10e04:	ldr	r3, [r9]
   10e08:	mov	r1, r7
   10e0c:	cmp	r7, #2
   10e10:	cmple	r7, r3
   10e14:	blt	10de0 <main@@Base+0x208>
   10e18:	ldr	r4, [sp, #4]
   10e1c:	mov	r0, r9
   10e20:	mov	r9, #0
   10e24:	bl	112c4 <vetor_apaga@@Base>
   10e28:	bl	11290 <vetor_novo@@Base>
   10e2c:	ldr	r3, [pc, #240]	; 10f24 <main@@Base+0x34c>
   10e30:	mov	r7, r0
   10e34:	ldr	r2, [sp]
   10e38:	ldr	sl, [r2, r3]
   10e3c:	sub	sl, sl, #4
   10e40:	mov	r2, r9
   10e44:	mov	r0, r7
   10e48:	ldr	r1, [sl, #4]!
   10e4c:	add	r9, r9, #1
   10e50:	bl	11434 <vetor_insere@@Base>
   10e54:	cmp	r9, #13
   10e58:	bne	10e40 <main@@Base+0x268>
   10e5c:	ldr	r9, [pc, #196]	; 10f28 <main@@Base+0x350>
   10e60:	add	sl, r8, #16
   10e64:	ldr	r0, [pc, #192]	; 10f2c <main@@Base+0x354>
   10e68:	add	r9, pc, r9
   10e6c:	add	r0, pc, r0
   10e70:	bl	10b78 <puts@plt>
   10e74:	str	r5, [sp]
   10e78:	str	r4, [sp, #4]
   10e7c:	mov	r4, r9
   10e80:	ldr	r5, [r8], #4
   10e84:	mov	r0, r7
   10e88:	ldr	r9, [fp]
   10e8c:	mov	r1, r5
   10e90:	bl	11154 <numero_vitorias@@Base>
   10e94:	mov	r3, r0
   10e98:	mov	r2, r5
   10e9c:	mov	r1, r4
   10ea0:	mov	r0, r9
   10ea4:	bl	10bb4 <fprintf@plt>
   10ea8:	cmp	r8, sl
   10eac:	bne	10e80 <main@@Base+0x2a8>
   10eb0:	ldr	r5, [sp]
   10eb4:	ldr	r4, [sp, #4]
   10eb8:	mov	r0, r5
   10ebc:	bl	112c4 <vetor_apaga@@Base>
   10ec0:	mov	r0, r4
   10ec4:	bl	117a0 <lista_apaga@@Base>
   10ec8:	mov	r0, r6
   10ecc:	bl	117a0 <lista_apaga@@Base>
   10ed0:	mov	r0, r7
   10ed4:	bl	112c4 <vetor_apaga@@Base>
   10ed8:	mov	r0, #0
   10edc:	add	sp, sp, #12
   10ee0:	ldrd	r4, [sp]
   10ee4:	ldrd	r6, [sp, #8]
   10ee8:	ldrd	r8, [sp, #16]
   10eec:	ldrd	sl, [sp, #24]
   10ef0:	add	sp, sp, #32
   10ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef8:	strdeq	r1, [r1], -r8
   10efc:	andeq	r0, r0, r8, asr #32
   10f00:	andeq	r0, r0, r8, asr r0
   10f04:	andeq	r0, r0, ip, asr r0
   10f08:	andeq	r0, r0, ip, asr #32
   10f0c:	andeq	r0, r0, r0, ror pc
   10f10:	strdeq	r0, [r0], -r8
   10f14:	andeq	r0, r0, ip, ror #29
   10f18:	ldrdeq	r0, [r0], -ip
   10f1c:	muleq	r0, ip, lr
   10f20:	andeq	r0, r0, r4, lsr #29
   10f24:	andeq	r0, r0, r4, asr r0
   10f28:	andeq	r0, r0, r4, lsr #28
   10f2c:	andeq	r0, r0, r4, ror #27

00010f30 <_start@@Base>:
   10f30:	mov	fp, #0
   10f34:	mov	lr, #0
   10f38:	pop	{r1}		; (ldr r1, [sp], #4)
   10f3c:	mov	r2, sp
   10f40:	push	{r2}		; (str r2, [sp, #-4]!)
   10f44:	push	{r0}		; (str r0, [sp, #-4]!)
   10f48:	ldr	ip, [pc, #16]	; 10f60 <_start@@Base+0x30>
   10f4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f50:	ldr	r0, [pc, #12]	; 10f64 <_start@@Base+0x34>
   10f54:	ldr	r3, [pc, #12]	; 10f68 <_start@@Base+0x38>
   10f58:	bl	10b90 <__libc_start_main@plt>
   10f5c:	bl	10bcc <abort@plt>
   10f60:			; <UNDEFINED> instruction: 0x00011bb8
   10f64:	ldrdeq	r0, [r1], -r8
   10f68:	andeq	r1, r1, r8, asr fp
   10f6c:	ldr	r3, [pc, #20]	; 10f88 <_start@@Base+0x58>
   10f70:	ldr	r2, [pc, #20]	; 10f8c <_start@@Base+0x5c>
   10f74:	add	r3, pc, r3
   10f78:	ldr	r2, [r3, r2]
   10f7c:	cmp	r2, #0
   10f80:	bxeq	lr
   10f84:	b	10b9c <__gmon_start__@plt>
   10f88:	andeq	r1, r1, r4, lsl #1
   10f8c:	andeq	r0, r0, r0, asr r0
   10f90:	ldr	r0, [pc, #24]	; 10fb0 <_start@@Base+0x80>
   10f94:	ldr	r3, [pc, #24]	; 10fb4 <_start@@Base+0x84>
   10f98:	cmp	r3, r0
   10f9c:	bxeq	lr
   10fa0:	ldr	r3, [pc, #16]	; 10fb8 <_start@@Base+0x88>
   10fa4:	cmp	r3, #0
   10fa8:	bxeq	lr
   10fac:	bx	r3
   10fb0:			; <UNDEFINED> instruction: 0x000221b0
   10fb4:			; <UNDEFINED> instruction: 0x000221b0
   10fb8:	andeq	r0, r0, r0
   10fbc:	ldr	r0, [pc, #36]	; 10fe8 <_start@@Base+0xb8>
   10fc0:	ldr	r1, [pc, #36]	; 10fec <_start@@Base+0xbc>
   10fc4:	sub	r1, r1, r0
   10fc8:	asr	r1, r1, #2
   10fcc:	add	r1, r1, r1, lsr #31
   10fd0:	asrs	r1, r1, #1
   10fd4:	bxeq	lr
   10fd8:	ldr	r3, [pc, #16]	; 10ff0 <_start@@Base+0xc0>
   10fdc:	cmp	r3, #0
   10fe0:	bxeq	lr
   10fe4:	bx	r3
   10fe8:			; <UNDEFINED> instruction: 0x000221b0
   10fec:			; <UNDEFINED> instruction: 0x000221b0
   10ff0:	andeq	r0, r0, r0
   10ff4:	push	{r4, lr}
   10ff8:	ldr	r4, [pc, #24]	; 11018 <_start@@Base+0xe8>
   10ffc:	ldrb	r3, [r4]
   11000:	cmp	r3, #0
   11004:	popne	{r4, pc}
   11008:	bl	10f90 <_start@@Base+0x60>
   1100c:	mov	r3, #1
   11010:	strb	r3, [r4]
   11014:	pop	{r4, pc}
   11018:			; <UNDEFINED> instruction: 0x000221b0
   1101c:	b	10fbc <_start@@Base+0x8c>

00011020 <tira_carta@@Base>:
   11020:	ldr	r3, [r1]
   11024:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11028:	mov	r5, #0
   1102c:	ldr	r4, [r3, #4]
   11030:	strd	r6, [sp, #8]
   11034:	mov	r7, r0
   11038:	str	r8, [sp, #16]
   1103c:	ldr	r8, [r0]
   11040:	str	lr, [sp, #20]
   11044:	ldr	r0, [r3]
   11048:	ldr	r6, [r8]
   1104c:	b	11058 <tira_carta@@Base+0x38>
   11050:	ldm	r4, {r0, r4}
   11054:	add	r5, r5, #1
   11058:	mov	r1, r6
   1105c:	bl	10b30 <strcmp@plt>
   11060:	cmp	r0, #0
   11064:	bne	11050 <tira_carta@@Base+0x30>
   11068:	mov	r1, r8
   1106c:	mov	r0, r7
   11070:	bl	118f0 <lista_remove@@Base>
   11074:	mov	r0, r5
   11078:	ldrd	r4, [sp]
   1107c:	ldrd	r6, [sp, #8]
   11080:	ldr	r8, [sp, #16]
   11084:	add	sp, sp, #20
   11088:	pop	{pc}		; (ldr pc, [sp], #4)

0001108c <faz_jogada@@Base>:
   1108c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11090:	mov	r5, r0
   11094:	ldr	r4, [r0]
   11098:	strd	r6, [sp, #8]
   1109c:	strd	r8, [sp, #16]
   110a0:	mov	r9, r1
   110a4:	str	sl, [sp, #24]
   110a8:	mov	sl, r2
   110ac:	str	lr, [sp, #28]
   110b0:	lsl	r0, r4, #2
   110b4:	bl	10b84 <malloc@plt>
   110b8:	cmp	r4, #0
   110bc:	mov	r6, r0
   110c0:	subgt	r7, r0, #4
   110c4:	movgt	r4, #0
   110c8:	movgt	r8, r7
   110cc:	ble	1114c <faz_jogada@@Base+0xc0>
   110d0:	mov	r1, sl
   110d4:	mov	r0, r9
   110d8:	bl	11020 <tira_carta@@Base>
   110dc:	ldr	r1, [r5]
   110e0:	add	r4, r4, #1
   110e4:	str	r0, [r8, #4]!
   110e8:	cmp	r1, r4
   110ec:	bgt	110d0 <faz_jogada@@Base+0x44>
   110f0:	cmp	r1, #0
   110f4:	ble	1114c <faz_jogada@@Base+0xc0>
   110f8:	mvn	ip, #0
   110fc:	mov	r3, #0
   11100:	mov	r2, ip
   11104:	ldr	r0, [r7, #4]!
   11108:	cmp	r0, r2
   1110c:	movgt	ip, r3
   11110:	add	r3, r3, #1
   11114:	movgt	r2, r0
   11118:	cmp	r1, r3
   1111c:	bne	11104 <faz_jogada@@Base+0x78>
   11120:	lsl	r4, ip, #2
   11124:	mov	r0, r6
   11128:	bl	10b3c <free@plt>
   1112c:	ldr	r3, [r5, #8]
   11130:	ldrd	r6, [sp, #8]
   11134:	ldrd	r8, [sp, #16]
   11138:	ldr	r0, [r3, r4]
   1113c:	ldrd	r4, [sp]
   11140:	ldr	sl, [sp, #24]
   11144:	add	sp, sp, #28
   11148:	pop	{pc}		; (ldr pc, [sp], #4)
   1114c:	mvn	r4, #3
   11150:	b	11124 <faz_jogada@@Base+0x98>

00011154 <numero_vitorias@@Base>:
   11154:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11158:	ldr	r5, [r0]
   1115c:	strd	r6, [sp, #8]
   11160:	str	r8, [sp, #16]
   11164:	str	lr, [sp, #20]
   11168:	cmp	r5, #0
   1116c:	ble	111b4 <numero_vitorias@@Base+0x60>
   11170:	ldr	r4, [r0, #8]
   11174:	mov	r6, r1
   11178:	mov	r7, #0
   1117c:	add	r5, r4, r5, lsl #2
   11180:	ldr	r1, [r4], #4
   11184:	mov	r0, r6
   11188:	bl	10b30 <strcmp@plt>
   1118c:	cmp	r0, #0
   11190:	addeq	r7, r7, #1
   11194:	cmp	r4, r5
   11198:	bne	11180 <numero_vitorias@@Base+0x2c>
   1119c:	mov	r0, r7
   111a0:	ldrd	r4, [sp]
   111a4:	ldrd	r6, [sp, #8]
   111a8:	ldr	r8, [sp, #16]
   111ac:	add	sp, sp, #20
   111b0:	pop	{pc}		; (ldr pc, [sp], #4)
   111b4:	mov	r7, #0
   111b8:	b	1119c <numero_vitorias@@Base+0x48>

000111bc <insere_carta@@Base>:
   111bc:	cmp	r1, #7
   111c0:	strd	r4, [sp, #-12]!
   111c4:	mov	r4, r0
   111c8:	str	lr, [sp, #8]
   111cc:	sub	sp, sp, #12
   111d0:	ble	1124c <insere_carta@@Base+0x90>
   111d4:	cmp	r1, #8
   111d8:	beq	11268 <insere_carta@@Base+0xac>
   111dc:	cmp	r1, #9
   111e0:	moveq	r3, #74	; 0x4a
   111e4:	addeq	r5, sp, #4
   111e8:	strheq	r3, [sp, #4]
   111ec:	beq	1122c <insere_carta@@Base+0x70>
   111f0:	cmp	r1, #10
   111f4:	moveq	r3, #81	; 0x51
   111f8:	addeq	r5, sp, #4
   111fc:	strheq	r3, [sp, #4]
   11200:	beq	1122c <insere_carta@@Base+0x70>
   11204:	cmp	r1, #11
   11208:	moveq	r3, #75	; 0x4b
   1120c:	addeq	r5, sp, #4
   11210:	strheq	r3, [sp, #4]
   11214:	beq	1122c <insere_carta@@Base+0x70>
   11218:	cmp	r1, #12
   1121c:	moveq	r3, #65	; 0x41
   11220:	addne	r5, sp, #4
   11224:	addeq	r5, sp, #4
   11228:	strheq	r3, [sp, #4]
   1122c:	ldr	r2, [r4]
   11230:	mov	r1, r5
   11234:	mov	r0, r4
   11238:	bl	11828 <lista_insere@@Base>
   1123c:	add	sp, sp, #12
   11240:	ldrd	r4, [sp]
   11244:	add	sp, sp, #8
   11248:	pop	{pc}		; (ldr pc, [sp], #4)
   1124c:	add	r2, r1, #50	; 0x32
   11250:	ldr	r1, [pc, #48]	; 11288 <insere_carta@@Base+0xcc>
   11254:	add	r5, sp, #4
   11258:	mov	r0, r5
   1125c:	add	r1, pc, r1
   11260:	bl	10bc0 <sprintf@plt>
   11264:	b	1122c <insere_carta@@Base+0x70>
   11268:	ldr	r3, [pc, #28]	; 1128c <insere_carta@@Base+0xd0>
   1126c:	add	r5, sp, #4
   11270:	add	r3, pc, r3
   11274:	ldrh	r2, [r3]
   11278:	ldrb	r3, [r3, #2]
   1127c:	strh	r2, [sp, #4]
   11280:	strb	r3, [r5, #2]
   11284:	b	1122c <insere_carta@@Base+0x70>
   11288:	andeq	r0, r0, r4, ror #18
   1128c:	andeq	r0, r0, r4, asr r9

00011290 <vetor_novo@@Base>:
   11290:	mov	r0, #12
   11294:	str	r4, [sp, #-8]!
   11298:	str	lr, [sp, #4]
   1129c:	bl	10b84 <malloc@plt>
   112a0:	cmp	r0, #0
   112a4:	beq	112b8 <vetor_novo@@Base+0x28>
   112a8:	mov	r3, #0
   112ac:	str	r3, [r0]
   112b0:	str	r3, [r0, #4]
   112b4:	str	r3, [r0, #8]
   112b8:	ldr	r4, [sp]
   112bc:	add	sp, sp, #4
   112c0:	pop	{pc}		; (ldr pc, [sp], #4)

000112c4 <vetor_apaga@@Base>:
   112c4:	strd	r4, [sp, #-16]!
   112c8:	subs	r5, r0, #0
   112cc:	str	r6, [sp, #8]
   112d0:	str	lr, [sp, #12]
   112d4:	beq	11324 <vetor_apaga@@Base+0x60>
   112d8:	ldr	r3, [r5]
   112dc:	cmp	r3, #0
   112e0:	ble	11304 <vetor_apaga@@Base+0x40>
   112e4:	mov	r4, #0
   112e8:	ldr	r3, [r5, #8]
   112ec:	ldr	r0, [r3, r4, lsl #2]
   112f0:	add	r4, r4, #1
   112f4:	bl	10b3c <free@plt>
   112f8:	ldr	r3, [r5]
   112fc:	cmp	r3, r4
   11300:	bgt	112e8 <vetor_apaga@@Base+0x24>
   11304:	ldr	r0, [r5, #8]
   11308:	bl	10b3c <free@plt>
   1130c:	mov	r0, r5
   11310:	ldrd	r4, [sp]
   11314:	ldr	r6, [sp, #8]
   11318:	ldr	lr, [sp, #12]
   1131c:	add	sp, sp, #16
   11320:	b	10b3c <free@plt>
   11324:	ldrd	r4, [sp]
   11328:	ldr	r6, [sp, #8]
   1132c:	add	sp, sp, #12
   11330:	pop	{pc}		; (ldr pc, [sp], #4)

00011334 <vetor_atribui@@Base>:
   11334:	cmp	r0, #0
   11338:	lsrne	r3, r1, #31
   1133c:	moveq	r3, #1
   11340:	cmp	r3, #0
   11344:	bne	113e8 <vetor_atribui@@Base+0xb4>
   11348:	ldr	r3, [r0]
   1134c:	cmp	r3, r1
   11350:	ble	113e8 <vetor_atribui@@Base+0xb4>
   11354:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11358:	mov	r5, r0
   1135c:	mov	r0, r2
   11360:	mov	r4, r1
   11364:	strd	r6, [sp, #8]
   11368:	mov	r6, r2
   1136c:	strd	r8, [sp, #16]
   11370:	str	sl, [sp, #24]
   11374:	str	lr, [sp, #28]
   11378:	bl	10ba8 <strlen@plt>
   1137c:	ldr	r8, [r5, #8]
   11380:	mov	r9, r0
   11384:	ldr	r7, [r8, r4, lsl #2]
   11388:	mov	r0, r7
   1138c:	bl	10ba8 <strlen@plt>
   11390:	cmp	r0, r9
   11394:	bcc	113c0 <vetor_atribui@@Base+0x8c>
   11398:	mov	r1, r6
   1139c:	mov	r0, r7
   113a0:	bl	10b6c <strcpy@plt>
   113a4:	mov	r0, r4
   113a8:	ldrd	r4, [sp]
   113ac:	ldrd	r6, [sp, #8]
   113b0:	ldrd	r8, [sp, #16]
   113b4:	ldr	sl, [sp, #24]
   113b8:	add	sp, sp, #28
   113bc:	pop	{pc}		; (ldr pc, [sp], #4)
   113c0:	mov	r0, r7
   113c4:	add	r1, r9, #1
   113c8:	bl	10b54 <realloc@plt>
   113cc:	ldr	r3, [r5, #8]
   113d0:	str	r0, [r8, r4, lsl #2]
   113d4:	ldr	r7, [r3, r4, lsl #2]
   113d8:	cmp	r7, #0
   113dc:	bne	11398 <vetor_atribui@@Base+0x64>
   113e0:	mvn	r0, #0
   113e4:	b	113a8 <vetor_atribui@@Base+0x74>
   113e8:	mvn	r0, #0
   113ec:	bx	lr

000113f0 <vetor_tamanho@@Base>:
   113f0:	cmp	r0, #0
   113f4:	ldrne	r0, [r0]
   113f8:	mvneq	r0, #0
   113fc:	bx	lr

00011400 <vetor_elemento@@Base>:
   11400:	cmp	r0, #0
   11404:	lsrne	r3, r1, #31
   11408:	moveq	r3, #1
   1140c:	cmp	r3, #0
   11410:	bne	1142c <vetor_elemento@@Base+0x2c>
   11414:	ldr	r2, [r0]
   11418:	cmp	r2, r1
   1141c:	ble	1142c <vetor_elemento@@Base+0x2c>
   11420:	ldr	r3, [r0, #8]
   11424:	ldr	r0, [r3, r1, lsl #2]
   11428:	bx	lr
   1142c:	mov	r0, #0
   11430:	bx	lr

00011434 <vetor_insere@@Base>:
   11434:	cmp	r0, #0
   11438:	lsrne	r3, r2, #31
   1143c:	moveq	r3, #1
   11440:	cmp	r3, #0
   11444:	bne	11524 <vetor_insere@@Base+0xf0>
   11448:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1144c:	strd	r6, [sp, #8]
   11450:	ldr	r6, [r0]
   11454:	str	r8, [sp, #16]
   11458:	str	lr, [sp, #20]
   1145c:	cmp	r6, r2
   11460:	blt	1151c <vetor_insere@@Base+0xe8>
   11464:	ldmib	r0, {r3, r5}
   11468:	mov	r7, r0
   1146c:	mov	r8, r1
   11470:	mov	r4, r2
   11474:	cmp	r6, r3
   11478:	beq	114e4 <vetor_insere@@Base+0xb0>
   1147c:	cmp	r4, r6
   11480:	addlt	r3, r5, r6, lsl #2
   11484:	addlt	r2, r5, r4, lsl #2
   11488:	bge	1149c <vetor_insere@@Base+0x68>
   1148c:	ldr	ip, [r3, #-4]
   11490:	str	ip, [r3], #-4
   11494:	cmp	r2, r3
   11498:	bne	1148c <vetor_insere@@Base+0x58>
   1149c:	mov	r0, r8
   114a0:	bl	10ba8 <strlen@plt>
   114a4:	add	r0, r0, #1
   114a8:	mov	r1, #1
   114ac:	bl	10b24 <calloc@plt>
   114b0:	cmp	r0, #0
   114b4:	str	r0, [r5, r4, lsl #2]
   114b8:	beq	1151c <vetor_insere@@Base+0xe8>
   114bc:	mov	r1, r8
   114c0:	bl	10b6c <strcpy@plt>
   114c4:	add	r1, r6, #1
   114c8:	mov	r0, r4
   114cc:	str	r1, [r7]
   114d0:	ldrd	r4, [sp]
   114d4:	ldrd	r6, [sp, #8]
   114d8:	ldr	r8, [sp, #16]
   114dc:	add	sp, sp, #20
   114e0:	pop	{pc}		; (ldr pc, [sp], #4)
   114e4:	cmp	r6, #0
   114e8:	mov	r0, r5
   114ec:	lslne	r3, r6, #1
   114f0:	moveq	r3, #1
   114f4:	moveq	r1, #4
   114f8:	lslne	r1, r6, #3
   114fc:	str	r3, [r7, #4]
   11500:	bl	10b54 <realloc@plt>
   11504:	cmp	r0, #0
   11508:	mov	r5, r0
   1150c:	str	r0, [r7, #8]
   11510:	beq	1151c <vetor_insere@@Base+0xe8>
   11514:	ldr	r6, [r7]
   11518:	b	1147c <vetor_insere@@Base+0x48>
   1151c:	mvn	r0, #0
   11520:	b	114d0 <vetor_insere@@Base+0x9c>
   11524:	mvn	r0, #0
   11528:	bx	lr

0001152c <vetor_remove@@Base>:
   1152c:	cmp	r0, #0
   11530:	lsrne	r3, r1, #31
   11534:	moveq	r3, #1
   11538:	cmp	r3, #0
   1153c:	bne	115bc <vetor_remove@@Base+0x90>
   11540:	ldr	r3, [r0]
   11544:	cmp	r3, r1
   11548:	ble	115bc <vetor_remove@@Base+0x90>
   1154c:	ldr	r3, [r0, #8]
   11550:	strd	r4, [sp, #-16]!
   11554:	mov	r5, r0
   11558:	mov	r4, r1
   1155c:	ldr	r0, [r3, r1, lsl #2]
   11560:	str	r6, [sp, #8]
   11564:	lsl	r6, r1, #2
   11568:	str	lr, [sp, #12]
   1156c:	bl	10b3c <free@plt>
   11570:	ldr	r0, [r5]
   11574:	add	r1, r4, #1
   11578:	cmp	r1, r0
   1157c:	bge	115a0 <vetor_remove@@Base+0x74>
   11580:	ldr	r3, [r5, #8]
   11584:	sub	r1, r3, #4
   11588:	add	r3, r3, r6
   1158c:	add	r1, r1, r0, lsl #2
   11590:	ldr	r2, [r3, #4]
   11594:	str	r2, [r3], #4
   11598:	cmp	r3, r1
   1159c:	bne	11590 <vetor_remove@@Base+0x64>
   115a0:	sub	r3, r0, #1
   115a4:	ldr	r6, [sp, #8]
   115a8:	mov	r0, #0
   115ac:	str	r3, [r5]
   115b0:	ldrd	r4, [sp]
   115b4:	add	sp, sp, #12
   115b8:	pop	{pc}		; (ldr pc, [sp], #4)
   115bc:	mvn	r0, #0
   115c0:	bx	lr

000115c4 <vetor_pesquisa@@Base>:
   115c4:	cmp	r0, #0
   115c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115cc:	strd	r6, [sp, #8]
   115d0:	str	r8, [sp, #16]
   115d4:	str	lr, [sp, #20]
   115d8:	beq	11634 <vetor_pesquisa@@Base+0x70>
   115dc:	ldr	r7, [r0]
   115e0:	cmp	r7, #0
   115e4:	ble	11634 <vetor_pesquisa@@Base+0x70>
   115e8:	ldr	r5, [r0, #8]
   115ec:	mov	r6, r1
   115f0:	mov	r4, #0
   115f4:	sub	r5, r5, #4
   115f8:	b	11608 <vetor_pesquisa@@Base+0x44>
   115fc:	add	r4, r4, #1
   11600:	cmp	r7, r4
   11604:	beq	11634 <vetor_pesquisa@@Base+0x70>
   11608:	mov	r1, r6
   1160c:	ldr	r0, [r5, #4]!
   11610:	bl	10b30 <strcmp@plt>
   11614:	cmp	r0, #0
   11618:	bne	115fc <vetor_pesquisa@@Base+0x38>
   1161c:	mov	r0, r4
   11620:	ldrd	r4, [sp]
   11624:	ldrd	r6, [sp, #8]
   11628:	ldr	r8, [sp, #16]
   1162c:	add	sp, sp, #20
   11630:	pop	{pc}		; (ldr pc, [sp], #4)
   11634:	mvn	r4, #0
   11638:	b	1161c <vetor_pesquisa@@Base+0x58>

0001163c <vetor_ordena@@Base>:
   1163c:	cmp	r0, #0
   11640:	beq	116e4 <vetor_ordena@@Base+0xa8>
   11644:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11648:	strd	r6, [sp, #8]
   1164c:	strd	sl, [sp, #24]
   11650:	ldr	sl, [r0]
   11654:	strd	r8, [sp, #16]
   11658:	str	lr, [sp, #32]
   1165c:	sub	sp, sp, #12
   11660:	cmp	sl, #1
   11664:	ble	116c4 <vetor_ordena@@Base+0x88>
   11668:	ldr	r3, [r0, #8]
   1166c:	mov	r8, #1
   11670:	mov	r9, r3
   11674:	str	r3, [sp, #4]
   11678:	ldr	r7, [r9, #4]!
   1167c:	mov	r5, r8
   11680:	mov	r4, r9
   11684:	ldr	r6, [r4, #-4]
   11688:	mov	r0, r7
   1168c:	mov	fp, r4
   11690:	mov	r1, r6
   11694:	bl	10b30 <strcmp@plt>
   11698:	cmp	r0, #0
   1169c:	bge	116b4 <vetor_ordena@@Base+0x78>
   116a0:	subs	r5, r5, #1
   116a4:	str	r6, [r4]
   116a8:	sub	r4, fp, #4
   116ac:	bne	11684 <vetor_ordena@@Base+0x48>
   116b0:	ldr	fp, [sp, #4]
   116b4:	add	r8, r8, #1
   116b8:	str	r7, [fp]
   116bc:	cmp	r8, sl
   116c0:	bne	11678 <vetor_ordena@@Base+0x3c>
   116c4:	mov	r0, #0
   116c8:	add	sp, sp, #12
   116cc:	ldrd	r4, [sp]
   116d0:	ldrd	r6, [sp, #8]
   116d4:	ldrd	r8, [sp, #16]
   116d8:	ldrd	sl, [sp, #24]
   116dc:	add	sp, sp, #32
   116e0:	pop	{pc}		; (ldr pc, [sp], #4)
   116e4:	mvn	r0, #0
   116e8:	bx	lr

000116ec <novo_str@@Base>:
   116ec:	strd	r4, [sp, #-16]!
   116f0:	mov	r5, r0
   116f4:	mov	r0, #12
   116f8:	str	r6, [sp, #8]
   116fc:	str	lr, [sp, #12]
   11700:	bl	10b84 <malloc@plt>
   11704:	subs	r4, r0, #0
   11708:	beq	11748 <novo_str@@Base+0x5c>
   1170c:	mov	r0, r5
   11710:	bl	10ba8 <strlen@plt>
   11714:	add	r6, r0, #1
   11718:	mov	r0, r6
   1171c:	bl	10b84 <malloc@plt>
   11720:	cmp	r0, #0
   11724:	mov	r3, r0
   11728:	str	r0, [r4]
   1172c:	beq	1175c <novo_str@@Base+0x70>
   11730:	mov	r2, r6
   11734:	mov	r1, r5
   11738:	bl	10b48 <memcpy@plt>
   1173c:	mov	r3, #0
   11740:	str	r3, [r4, #4]
   11744:	str	r3, [r4, #8]
   11748:	mov	r0, r4
   1174c:	ldrd	r4, [sp]
   11750:	ldr	r6, [sp, #8]
   11754:	add	sp, sp, #12
   11758:	pop	{pc}		; (ldr pc, [sp], #4)
   1175c:	mov	r0, r4
   11760:	mov	r4, r3
   11764:	bl	10b3c <free@plt>
   11768:	b	11748 <novo_str@@Base+0x5c>

0001176c <lista_nova@@Base>:
   1176c:	mov	r0, #12
   11770:	str	r4, [sp, #-8]!
   11774:	str	lr, [sp, #4]
   11778:	bl	10b84 <malloc@plt>
   1177c:	cmp	r0, #0
   11780:	beq	11794 <lista_nova@@Base+0x28>
   11784:	mov	r3, #0
   11788:	str	r3, [r0]
   1178c:	str	r3, [r0, #4]
   11790:	str	r3, [r0, #8]
   11794:	ldr	r4, [sp]
   11798:	add	sp, sp, #4
   1179c:	pop	{pc}		; (ldr pc, [sp], #4)

000117a0 <lista_apaga@@Base>:
   117a0:	strd	r4, [sp, #-16]!
   117a4:	subs	r5, r0, #0
   117a8:	str	r6, [sp, #8]
   117ac:	str	lr, [sp, #12]
   117b0:	bne	117cc <lista_apaga@@Base+0x2c>
   117b4:	b	117f0 <lista_apaga@@Base+0x50>
   117b8:	ldm	r4, {r0, r3}
   117bc:	str	r3, [r5]
   117c0:	bl	10b3c <free@plt>
   117c4:	mov	r0, r4
   117c8:	bl	10b3c <free@plt>
   117cc:	ldr	r4, [r5]
   117d0:	cmp	r4, #0
   117d4:	bne	117b8 <lista_apaga@@Base+0x18>
   117d8:	mov	r0, r5
   117dc:	ldrd	r4, [sp]
   117e0:	ldr	r6, [sp, #8]
   117e4:	ldr	lr, [sp, #12]
   117e8:	add	sp, sp, #16
   117ec:	b	10b3c <free@plt>
   117f0:	ldrd	r4, [sp]
   117f4:	ldr	r6, [sp, #8]
   117f8:	add	sp, sp, #12
   117fc:	pop	{pc}		; (ldr pc, [sp], #4)

00011800 <lista_tamanho@@Base>:
   11800:	cmp	r0, #0
   11804:	ldrne	r0, [r0, #8]
   11808:	mvneq	r0, #0
   1180c:	bx	lr

00011810 <lista_inicio@@Base>:
   11810:	cmp	r0, #0
   11814:	ldrne	r0, [r0]
   11818:	bx	lr

0001181c <lista_fim@@Base>:
   1181c:	cmp	r0, #0
   11820:	ldrne	r0, [r0, #4]
   11824:	bx	lr

00011828 <lista_insere@@Base>:
   11828:	cmp	r1, #0
   1182c:	cmpne	r0, #0
   11830:	beq	118e8 <lista_insere@@Base+0xc0>
   11834:	strd	r4, [sp, #-16]!
   11838:	mov	r5, r0
   1183c:	mov	r0, r1
   11840:	mov	r4, r2
   11844:	str	r6, [sp, #8]
   11848:	str	lr, [sp, #12]
   1184c:	bl	116ec <novo_str@@Base>
   11850:	cmp	r0, #0
   11854:	beq	118ac <lista_insere@@Base+0x84>
   11858:	cmp	r4, #0
   1185c:	ldr	r2, [r5]
   11860:	ldr	r3, [r5, #8]
   11864:	add	r3, r3, #1
   11868:	str	r3, [r5, #8]
   1186c:	beq	118c0 <lista_insere@@Base+0x98>
   11870:	cmp	r4, r2
   11874:	streq	r4, [r0, #4]
   11878:	streq	r0, [r4, #8]
   1187c:	streq	r0, [r5]
   11880:	beq	1189c <lista_insere@@Base+0x74>
   11884:	ldr	r3, [r4, #8]
   11888:	str	r4, [r0, #4]
   1188c:	str	r3, [r0, #8]
   11890:	ldr	r3, [r4, #8]
   11894:	str	r0, [r3, #4]
   11898:	str	r0, [r4, #8]
   1189c:	ldrd	r4, [sp]
   118a0:	ldr	r6, [sp, #8]
   118a4:	add	sp, sp, #12
   118a8:	pop	{pc}		; (ldr pc, [sp], #4)
   118ac:	ldrd	r4, [sp]
   118b0:	mov	r0, #0
   118b4:	ldr	r6, [sp, #8]
   118b8:	add	sp, sp, #12
   118bc:	pop	{pc}		; (ldr pc, [sp], #4)
   118c0:	cmp	r2, #0
   118c4:	ldr	r6, [sp, #8]
   118c8:	ldrne	r3, [r5, #4]
   118cc:	streq	r0, [r5]
   118d0:	strne	r3, [r0, #8]
   118d4:	strne	r0, [r3, #4]
   118d8:	str	r0, [r5, #4]
   118dc:	ldrd	r4, [sp]
   118e0:	add	sp, sp, #12
   118e4:	pop	{pc}		; (ldr pc, [sp], #4)
   118e8:	mov	r0, #0
   118ec:	bx	lr

000118f0 <lista_remove@@Base>:
   118f0:	cmp	r1, #0
   118f4:	cmpne	r0, #0
   118f8:	strd	r4, [sp, #-16]!
   118fc:	moveq	r5, #0
   11900:	str	r6, [sp, #8]
   11904:	str	lr, [sp, #12]
   11908:	beq	11950 <lista_remove@@Base+0x60>
   1190c:	ldr	r3, [r0, #8]
   11910:	mov	r4, r1
   11914:	ldr	r2, [r1, #8]
   11918:	ldr	r5, [r1, #4]
   1191c:	sub	r3, r3, #1
   11920:	cmp	r2, #0
   11924:	str	r3, [r0, #8]
   11928:	strne	r5, [r2, #4]
   1192c:	ldrne	r5, [r1, #4]
   11930:	streq	r5, [r0]
   11934:	cmp	r5, #0
   11938:	streq	r2, [r0, #4]
   1193c:	strne	r2, [r5, #8]
   11940:	ldr	r0, [r1]
   11944:	bl	10b3c <free@plt>
   11948:	mov	r0, r4
   1194c:	bl	10b3c <free@plt>
   11950:	mov	r0, r5
   11954:	ldrd	r4, [sp]
   11958:	ldr	r6, [sp, #8]
   1195c:	add	sp, sp, #12
   11960:	pop	{pc}		; (ldr pc, [sp], #4)

00011964 <lista_pesquisa@@Base>:
   11964:	strd	r4, [sp, #-16]!
   11968:	clz	r4, r1
   1196c:	cmp	r0, #0
   11970:	lsr	r4, r4, #5
   11974:	moveq	r4, #1
   11978:	str	r6, [sp, #8]
   1197c:	str	lr, [sp, #12]
   11980:	cmp	r4, #0
   11984:	movne	r4, #0
   11988:	bne	119d0 <lista_pesquisa@@Base+0x6c>
   1198c:	cmp	r2, #1
   11990:	bhi	119d0 <lista_pesquisa@@Base+0x6c>
   11994:	cmp	r2, #0
   11998:	mov	r5, r1
   1199c:	bne	119e4 <lista_pesquisa@@Base+0x80>
   119a0:	ldr	r4, [r0]
   119a4:	cmp	r4, #0
   119a8:	bne	119bc <lista_pesquisa@@Base+0x58>
   119ac:	b	119d0 <lista_pesquisa@@Base+0x6c>
   119b0:	ldr	r4, [r4, #4]
   119b4:	cmp	r4, #0
   119b8:	beq	119d0 <lista_pesquisa@@Base+0x6c>
   119bc:	mov	r1, r5
   119c0:	ldr	r0, [r4]
   119c4:	bl	10b30 <strcmp@plt>
   119c8:	cmp	r0, #0
   119cc:	bne	119b0 <lista_pesquisa@@Base+0x4c>
   119d0:	mov	r0, r4
   119d4:	ldrd	r4, [sp]
   119d8:	ldr	r6, [sp, #8]
   119dc:	add	sp, sp, #12
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)
   119e4:	ldr	r4, [r0, #4]
   119e8:	cmp	r4, #0
   119ec:	bne	11a00 <lista_pesquisa@@Base+0x9c>
   119f0:	b	119d0 <lista_pesquisa@@Base+0x6c>
   119f4:	ldr	r4, [r4, #8]
   119f8:	cmp	r4, #0
   119fc:	beq	119d0 <lista_pesquisa@@Base+0x6c>
   11a00:	mov	r1, r5
   11a04:	ldr	r0, [r4]
   11a08:	bl	10b30 <strcmp@plt>
   11a0c:	cmp	r0, #0
   11a10:	bne	119f4 <lista_pesquisa@@Base+0x90>
   11a14:	b	119d0 <lista_pesquisa@@Base+0x6c>

00011a18 <lista_ordena@@Base>:
   11a18:	cmp	r0, #0
   11a1c:	beq	11aa8 <lista_ordena@@Base+0x90>
   11a20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a24:	strd	r6, [sp, #8]
   11a28:	ldr	r6, [r0]
   11a2c:	str	r8, [sp, #16]
   11a30:	str	lr, [sp, #20]
   11a34:	ldr	r7, [r6, #4]
   11a38:	cmp	r7, #0
   11a3c:	beq	11a90 <lista_ordena@@Base+0x78>
   11a40:	mov	r5, r6
   11a44:	mov	r4, r7
   11a48:	ldr	r0, [r4]
   11a4c:	ldr	r1, [r5]
   11a50:	bl	10b30 <strcmp@plt>
   11a54:	cmp	r0, #0
   11a58:	movlt	r5, r4
   11a5c:	ldr	r4, [r4, #4]
   11a60:	cmp	r4, #0
   11a64:	bne	11a48 <lista_ordena@@Base+0x30>
   11a68:	cmp	r6, r5
   11a6c:	beq	11a80 <lista_ordena@@Base+0x68>
   11a70:	ldr	r2, [r5]
   11a74:	ldr	r3, [r6]
   11a78:	str	r2, [r6]
   11a7c:	str	r3, [r5]
   11a80:	mov	r6, r7
   11a84:	ldr	r7, [r6, #4]
   11a88:	cmp	r7, #0
   11a8c:	bne	11a40 <lista_ordena@@Base+0x28>
   11a90:	mov	r0, r7
   11a94:	ldrd	r4, [sp]
   11a98:	ldrd	r6, [sp, #8]
   11a9c:	ldr	r8, [sp, #16]
   11aa0:	add	sp, sp, #20
   11aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa8:	mvn	r0, #0
   11aac:	bx	lr

00011ab0 <lista_inverte@@Base>:
   11ab0:	strd	r4, [sp, #-12]!
   11ab4:	subs	r5, r0, #0
   11ab8:	str	lr, [sp, #8]
   11abc:	beq	11b50 <lista_inverte@@Base+0xa0>
   11ac0:	ldr	r4, [r5, #8]
   11ac4:	cmp	r4, #1
   11ac8:	movle	r0, #0
   11acc:	ble	11b3c <lista_inverte@@Base+0x8c>
   11ad0:	ldr	r1, [r5]
   11ad4:	cmp	r4, #2
   11ad8:	ldr	r3, [r1, #4]
   11adc:	beq	11b48 <lista_inverte@@Base+0x98>
   11ae0:	sub	r4, r4, #2
   11ae4:	mov	ip, #0
   11ae8:	b	11af0 <lista_inverte@@Base+0x40>
   11aec:	mov	r3, r2
   11af0:	ldmib	r3, {r2, lr}
   11af4:	add	ip, ip, #1
   11af8:	cmp	r4, ip
   11afc:	str	r2, [lr, #4]
   11b00:	str	lr, [r2, #8]
   11b04:	str	r1, [r3, #4]
   11b08:	str	r3, [r1, #8]
   11b0c:	mov	r1, r3
   11b10:	bne	11aec <lista_inverte@@Base+0x3c>
   11b14:	ldr	r2, [r5, #4]
   11b18:	mov	r1, #0
   11b1c:	mov	r0, r1
   11b20:	ldr	ip, [r2, #8]
   11b24:	str	ip, [r5, #4]
   11b28:	str	r1, [ip, #4]
   11b2c:	str	r3, [r2, #4]
   11b30:	str	r1, [r2, #8]
   11b34:	str	r2, [r3, #8]
   11b38:	str	r2, [r5]
   11b3c:	ldrd	r4, [sp]
   11b40:	add	sp, sp, #8
   11b44:	pop	{pc}		; (ldr pc, [sp], #4)
   11b48:	mov	r3, r1
   11b4c:	b	11b14 <lista_inverte@@Base+0x64>
   11b50:	mvn	r0, #0
   11b54:	b	11b3c <lista_inverte@@Base+0x8c>

00011b58 <__libc_csu_init@@Base>:
   11b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b5c:	mov	r7, r0
   11b60:	ldr	r6, [pc, #72]	; 11bb0 <__libc_csu_init@@Base+0x58>
   11b64:	ldr	r5, [pc, #72]	; 11bb4 <__libc_csu_init@@Base+0x5c>
   11b68:	add	r6, pc, r6
   11b6c:	add	r5, pc, r5
   11b70:	sub	r6, r6, r5
   11b74:	mov	r8, r1
   11b78:	mov	r9, r2
   11b7c:	bl	10b04 <calloc@plt-0x20>
   11b80:	asrs	r6, r6, #2
   11b84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b88:	mov	r4, #0
   11b8c:	add	r4, r4, #1
   11b90:	ldr	r3, [r5], #4
   11b94:	mov	r2, r9
   11b98:	mov	r1, r8
   11b9c:	mov	r0, r7
   11ba0:	blx	r3
   11ba4:	cmp	r6, r4
   11ba8:	bne	11b8c <__libc_csu_init@@Base+0x34>
   11bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb0:	andeq	r0, r1, r4, lsr #7
   11bb4:	muleq	r1, ip, r3

00011bb8 <__libc_csu_fini@@Base>:
   11bb8:	bx	lr

Disassembly of section .fini:

00011bbc <.fini>:
   11bbc:	push	{r3, lr}
   11bc0:	pop	{r3, pc}
