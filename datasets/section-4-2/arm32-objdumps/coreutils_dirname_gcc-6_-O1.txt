
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010b08 <.init>:
   10b08:	push	{r3, lr}
   10b0c:	bl	10d80 <abort@plt+0x48>
   10b10:	pop	{r3, pc}

Disassembly of section .plt:

00010b14 <calloc@plt-0x14>:
   10b14:	push	{lr}		; (str lr, [sp, #-4]!)
   10b18:	ldr	lr, [pc, #4]	; 10b24 <calloc@plt-0x4>
   10b1c:	add	lr, pc, lr
   10b20:	ldr	pc, [lr, #8]!
   10b24:	ldrdeq	r5, [r1], -ip

00010b28 <calloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #86016	; 0x15000
   10b30:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b34 <fputs_unlocked@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #86016	; 0x15000
   10b3c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b40 <raise@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #86016	; 0x15000
   10b48:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b4c <strcmp@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #86016	; 0x15000
   10b54:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b58 <fflush@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #86016	; 0x15000
   10b60:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b64 <free@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #86016	; 0x15000
   10b6c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b70 <_exit@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #86016	; 0x15000
   10b78:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b7c <memcpy@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #86016	; 0x15000
   10b84:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b88 <mbsinit@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #86016	; 0x15000
   10b90:	ldr	pc, [ip, #1180]!	; 0x49c

00010b94 <fwrite_unlocked@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #86016	; 0x15000
   10b9c:	ldr	pc, [ip, #1172]!	; 0x494

00010ba0 <memcmp@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #86016	; 0x15000
   10ba8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bac <fputc_unlocked@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #86016	; 0x15000
   10bb4:	ldr	pc, [ip, #1156]!	; 0x484

00010bb8 <dcgettext@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #86016	; 0x15000
   10bc0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc4 <realloc@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #86016	; 0x15000
   10bcc:	ldr	pc, [ip, #1140]!	; 0x474

00010bd0 <textdomain@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #86016	; 0x15000
   10bd8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bdc <iswprint@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1124]!	; 0x464

00010be8 <fwrite@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1116]!	; 0x45c

00010bf4 <lseek64@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1108]!	; 0x454

00010c00 <__ctype_get_mb_cur_max@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1100]!	; 0x44c

00010c0c <__fpending@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1092]!	; 0x444

00010c18 <mbrtowc@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1084]!	; 0x43c

00010c24 <error@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1076]!	; 0x434

00010c30 <malloc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1068]!	; 0x42c

00010c3c <__libc_start_main@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1060]!	; 0x424

00010c48 <__freading@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #1052]!	; 0x41c

00010c54 <__gmon_start__@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #1044]!	; 0x414

00010c60 <getopt_long@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #1036]!	; 0x40c

00010c6c <__ctype_b_loc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #1028]!	; 0x404

00010c78 <exit@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c84 <strlen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c90 <__errno_location@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c9c <__cxa_atexit@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #996]!	; 0x3e4

00010ca8 <memset@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #988]!	; 0x3dc

00010cb4 <__printf_chk@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #980]!	; 0x3d4

00010cc0 <fileno@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #972]!	; 0x3cc

00010ccc <__fprintf_chk@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cd8 <fclose@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #956]!	; 0x3bc

00010ce4 <fseeko64@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #948]!	; 0x3b4

00010cf0 <__overflow@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cfc <setlocale@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #932]!	; 0x3a4

00010d08 <strrchr@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #924]!	; 0x39c

00010d14 <nl_langinfo@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #916]!	; 0x394

00010d20 <bindtextdomain@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #908]!	; 0x38c

00010d2c <strncmp@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #900]!	; 0x384

00010d38 <abort@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #892]!	; 0x37c

Disassembly of section .text:

00010d44 <.text>:
   10d44:	mov	fp, #0
   10d48:	mov	lr, #0
   10d4c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d50:	mov	r2, sp
   10d54:	push	{r2}		; (str r2, [sp, #-4]!)
   10d58:	push	{r0}		; (str r0, [sp, #-4]!)
   10d5c:	ldr	ip, [pc, #16]	; 10d74 <abort@plt+0x3c>
   10d60:	push	{ip}		; (str ip, [sp, #-4]!)
   10d64:	ldr	r0, [pc, #12]	; 10d78 <abort@plt+0x40>
   10d68:	ldr	r3, [pc, #12]	; 10d7c <abort@plt+0x44>
   10d6c:	bl	10c3c <__libc_start_main@plt>
   10d70:	bl	10d38 <abort@plt>
   10d74:	andeq	r4, r1, ip, lsl r7
   10d78:	andeq	r1, r1, r0, asr #3
   10d7c:			; <UNDEFINED> instruction: 0x000146bc
   10d80:	ldr	r3, [pc, #20]	; 10d9c <abort@plt+0x64>
   10d84:	ldr	r2, [pc, #20]	; 10da0 <abort@plt+0x68>
   10d88:	add	r3, pc, r3
   10d8c:	ldr	r2, [r3, r2]
   10d90:	cmp	r2, #0
   10d94:	bxeq	lr
   10d98:	b	10c54 <__gmon_start__@plt>
   10d9c:	andeq	r5, r1, r0, ror r2
   10da0:	andeq	r0, r0, r0, asr #1
   10da4:	ldr	r3, [pc, #28]	; 10dc8 <abort@plt+0x90>
   10da8:	ldr	r0, [pc, #28]	; 10dcc <abort@plt+0x94>
   10dac:	sub	r3, r3, r0
   10db0:	cmp	r3, #6
   10db4:	bxls	lr
   10db8:	ldr	r3, [pc, #16]	; 10dd0 <abort@plt+0x98>
   10dbc:	cmp	r3, #0
   10dc0:	bxeq	lr
   10dc4:	bx	r3
   10dc8:	andeq	r6, r2, r7, lsl r1
   10dcc:	andeq	r6, r2, r4, lsl r1
   10dd0:	andeq	r0, r0, r0
   10dd4:	ldr	r1, [pc, #36]	; 10e00 <abort@plt+0xc8>
   10dd8:	ldr	r0, [pc, #36]	; 10e04 <abort@plt+0xcc>
   10ddc:	sub	r1, r1, r0
   10de0:	asr	r1, r1, #2
   10de4:	add	r1, r1, r1, lsr #31
   10de8:	asrs	r1, r1, #1
   10dec:	bxeq	lr
   10df0:	ldr	r3, [pc, #16]	; 10e08 <abort@plt+0xd0>
   10df4:	cmp	r3, #0
   10df8:	bxeq	lr
   10dfc:	bx	r3
   10e00:	andeq	r6, r2, r4, lsl r1
   10e04:	andeq	r6, r2, r4, lsl r1
   10e08:	andeq	r0, r0, r0
   10e0c:	push	{r4, lr}
   10e10:	ldr	r4, [pc, #24]	; 10e30 <abort@plt+0xf8>
   10e14:	ldrb	r3, [r4]
   10e18:	cmp	r3, #0
   10e1c:	popne	{r4, pc}
   10e20:	bl	10da4 <abort@plt+0x6c>
   10e24:	mov	r3, #1
   10e28:	strb	r3, [r4]
   10e2c:	pop	{r4, pc}
   10e30:	andeq	r6, r2, r0, lsr r1
   10e34:	ldr	r0, [pc, #40]	; 10e64 <abort@plt+0x12c>
   10e38:	ldr	r3, [r0]
   10e3c:	cmp	r3, #0
   10e40:	bne	10e48 <abort@plt+0x110>
   10e44:	b	10dd4 <abort@plt+0x9c>
   10e48:	ldr	r3, [pc, #24]	; 10e68 <abort@plt+0x130>
   10e4c:	cmp	r3, #0
   10e50:	beq	10e44 <abort@plt+0x10c>
   10e54:	push	{r4, lr}
   10e58:	blx	r3
   10e5c:	pop	{r4, lr}
   10e60:	b	10dd4 <abort@plt+0x9c>
   10e64:	andeq	r5, r2, r4, lsl pc
   10e68:	andeq	r0, r0, r0
   10e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e70:	sub	sp, sp, #68	; 0x44
   10e74:	subs	r6, r0, #0
   10e78:	beq	10eb4 <abort@plt+0x17c>
   10e7c:	ldr	r3, [pc, #744]	; 1116c <abort@plt+0x434>
   10e80:	ldr	r4, [r3]
   10e84:	mov	r2, #5
   10e88:	ldr	r1, [pc, #736]	; 11170 <abort@plt+0x438>
   10e8c:	mov	r0, #0
   10e90:	bl	10bb8 <dcgettext@plt>
   10e94:	ldr	r3, [pc, #728]	; 11174 <abort@plt+0x43c>
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r2, r0
   10ea0:	mov	r1, #1
   10ea4:	mov	r0, r4
   10ea8:	bl	10ccc <__fprintf_chk@plt>
   10eac:	mov	r0, r6
   10eb0:	bl	10c78 <exit@plt>
   10eb4:	mov	r2, #5
   10eb8:	ldr	r1, [pc, #696]	; 11178 <abort@plt+0x440>
   10ebc:	mov	r0, #0
   10ec0:	bl	10bb8 <dcgettext@plt>
   10ec4:	ldr	r5, [pc, #680]	; 11174 <abort@plt+0x43c>
   10ec8:	ldr	r2, [r5]
   10ecc:	mov	r1, r0
   10ed0:	mov	r0, #1
   10ed4:	bl	10cb4 <__printf_chk@plt>
   10ed8:	mov	r2, #5
   10edc:	ldr	r1, [pc, #664]	; 1117c <abort@plt+0x444>
   10ee0:	mov	r0, #0
   10ee4:	bl	10bb8 <dcgettext@plt>
   10ee8:	ldr	r4, [pc, #656]	; 11180 <abort@plt+0x448>
   10eec:	ldr	r1, [r4]
   10ef0:	bl	10b34 <fputs_unlocked@plt>
   10ef4:	mov	r2, #5
   10ef8:	ldr	r1, [pc, #644]	; 11184 <abort@plt+0x44c>
   10efc:	mov	r0, #0
   10f00:	bl	10bb8 <dcgettext@plt>
   10f04:	ldr	r1, [r4]
   10f08:	bl	10b34 <fputs_unlocked@plt>
   10f0c:	mov	r2, #5
   10f10:	ldr	r1, [pc, #624]	; 11188 <abort@plt+0x450>
   10f14:	mov	r0, #0
   10f18:	bl	10bb8 <dcgettext@plt>
   10f1c:	ldr	r1, [r4]
   10f20:	bl	10b34 <fputs_unlocked@plt>
   10f24:	mov	r2, #5
   10f28:	ldr	r1, [pc, #604]	; 1118c <abort@plt+0x454>
   10f2c:	mov	r0, #0
   10f30:	bl	10bb8 <dcgettext@plt>
   10f34:	ldr	r1, [r4]
   10f38:	bl	10b34 <fputs_unlocked@plt>
   10f3c:	mov	r2, #5
   10f40:	ldr	r1, [pc, #584]	; 11190 <abort@plt+0x458>
   10f44:	mov	r0, #0
   10f48:	bl	10bb8 <dcgettext@plt>
   10f4c:	ldr	r2, [r5]
   10f50:	str	r2, [sp]
   10f54:	mov	r3, r2
   10f58:	mov	r1, r0
   10f5c:	mov	r0, #1
   10f60:	bl	10cb4 <__printf_chk@plt>
   10f64:	add	ip, sp, #8
   10f68:	ldr	lr, [pc, #548]	; 11194 <abort@plt+0x45c>
   10f6c:	ldm	lr!, {r0, r1, r2, r3}
   10f70:	stmia	ip!, {r0, r1, r2, r3}
   10f74:	ldm	lr!, {r0, r1, r2, r3}
   10f78:	stmia	ip!, {r0, r1, r2, r3}
   10f7c:	ldm	lr!, {r0, r1, r2, r3}
   10f80:	stmia	ip!, {r0, r1, r2, r3}
   10f84:	ldm	lr, {r0, r1}
   10f88:	stm	ip, {r0, r1}
   10f8c:	ldr	r1, [sp, #8]
   10f90:	cmp	r1, #0
   10f94:	addeq	r4, sp, #8
   10f98:	beq	10fc0 <abort@plt+0x288>
   10f9c:	add	r4, sp, #8
   10fa0:	ldr	r5, [pc, #496]	; 11198 <abort@plt+0x460>
   10fa4:	mov	r0, r5
   10fa8:	bl	10b4c <strcmp@plt>
   10fac:	cmp	r0, #0
   10fb0:	beq	10fc0 <abort@plt+0x288>
   10fb4:	ldr	r1, [r4, #8]!
   10fb8:	cmp	r1, #0
   10fbc:	bne	10fa4 <abort@plt+0x26c>
   10fc0:	ldr	r4, [r4, #4]
   10fc4:	cmp	r4, #0
   10fc8:	beq	110dc <abort@plt+0x3a4>
   10fcc:	mov	r2, #5
   10fd0:	ldr	r1, [pc, #452]	; 1119c <abort@plt+0x464>
   10fd4:	mov	r0, #0
   10fd8:	bl	10bb8 <dcgettext@plt>
   10fdc:	ldr	r3, [pc, #444]	; 111a0 <abort@plt+0x468>
   10fe0:	ldr	r2, [pc, #444]	; 111a4 <abort@plt+0x46c>
   10fe4:	mov	r1, r0
   10fe8:	mov	r0, #1
   10fec:	bl	10cb4 <__printf_chk@plt>
   10ff0:	mov	r1, #0
   10ff4:	mov	r0, #5
   10ff8:	bl	10cfc <setlocale@plt>
   10ffc:	cmp	r0, #0
   11000:	beq	11018 <abort@plt+0x2e0>
   11004:	mov	r2, #3
   11008:	ldr	r1, [pc, #408]	; 111a8 <abort@plt+0x470>
   1100c:	bl	10d2c <strncmp@plt>
   11010:	cmp	r0, #0
   11014:	bne	11078 <abort@plt+0x340>
   11018:	mov	r2, #5
   1101c:	ldr	r1, [pc, #392]	; 111ac <abort@plt+0x474>
   11020:	mov	r0, #0
   11024:	bl	10bb8 <dcgettext@plt>
   11028:	ldr	r5, [pc, #360]	; 11198 <abort@plt+0x460>
   1102c:	mov	r3, r5
   11030:	ldr	r2, [pc, #360]	; 111a0 <abort@plt+0x468>
   11034:	mov	r1, r0
   11038:	mov	r0, #1
   1103c:	bl	10cb4 <__printf_chk@plt>
   11040:	mov	r2, #5
   11044:	ldr	r1, [pc, #356]	; 111b0 <abort@plt+0x478>
   11048:	mov	r0, #0
   1104c:	bl	10bb8 <dcgettext@plt>
   11050:	mov	r1, r0
   11054:	ldr	r2, [pc, #344]	; 111b4 <abort@plt+0x47c>
   11058:	ldr	r3, [pc, #344]	; 111b8 <abort@plt+0x480>
   1105c:	cmp	r4, r5
   11060:	movne	r3, r2
   11064:	mov	r2, r4
   11068:	mov	r0, #1
   1106c:	bl	10cb4 <__printf_chk@plt>
   11070:	b	10eac <abort@plt+0x174>
   11074:	ldr	r4, [pc, #284]	; 11198 <abort@plt+0x460>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #312]	; 111bc <abort@plt+0x484>
   11080:	mov	r0, #0
   11084:	bl	10bb8 <dcgettext@plt>
   11088:	ldr	r3, [pc, #240]	; 11180 <abort@plt+0x448>
   1108c:	ldr	r1, [r3]
   11090:	bl	10b34 <fputs_unlocked@plt>
   11094:	b	11018 <abort@plt+0x2e0>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #264]	; 111ac <abort@plt+0x474>
   110a0:	mov	r0, #0
   110a4:	bl	10bb8 <dcgettext@plt>
   110a8:	ldr	r4, [pc, #232]	; 11198 <abort@plt+0x460>
   110ac:	mov	r3, r4
   110b0:	ldr	r2, [pc, #232]	; 111a0 <abort@plt+0x468>
   110b4:	mov	r1, r0
   110b8:	mov	r0, #1
   110bc:	bl	10cb4 <__printf_chk@plt>
   110c0:	mov	r2, #5
   110c4:	ldr	r1, [pc, #228]	; 111b0 <abort@plt+0x478>
   110c8:	mov	r0, #0
   110cc:	bl	10bb8 <dcgettext@plt>
   110d0:	mov	r1, r0
   110d4:	ldr	r3, [pc, #220]	; 111b8 <abort@plt+0x480>
   110d8:	b	11064 <abort@plt+0x32c>
   110dc:	mov	r2, #5
   110e0:	ldr	r1, [pc, #180]	; 1119c <abort@plt+0x464>
   110e4:	mov	r0, #0
   110e8:	bl	10bb8 <dcgettext@plt>
   110ec:	ldr	r3, [pc, #172]	; 111a0 <abort@plt+0x468>
   110f0:	ldr	r2, [pc, #172]	; 111a4 <abort@plt+0x46c>
   110f4:	mov	r1, r0
   110f8:	mov	r0, #1
   110fc:	bl	10cb4 <__printf_chk@plt>
   11100:	mov	r1, #0
   11104:	mov	r0, #5
   11108:	bl	10cfc <setlocale@plt>
   1110c:	cmp	r0, #0
   11110:	beq	11098 <abort@plt+0x360>
   11114:	mov	r2, #3
   11118:	ldr	r1, [pc, #136]	; 111a8 <abort@plt+0x470>
   1111c:	bl	10d2c <strncmp@plt>
   11120:	cmp	r0, #0
   11124:	bne	11074 <abort@plt+0x33c>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #120]	; 111ac <abort@plt+0x474>
   11130:	mov	r0, #0
   11134:	bl	10bb8 <dcgettext@plt>
   11138:	ldr	r4, [pc, #88]	; 11198 <abort@plt+0x460>
   1113c:	mov	r3, r4
   11140:	ldr	r2, [pc, #88]	; 111a0 <abort@plt+0x468>
   11144:	mov	r1, r0
   11148:	mov	r0, #1
   1114c:	bl	10cb4 <__printf_chk@plt>
   11150:	mov	r2, #5
   11154:	ldr	r1, [pc, #84]	; 111b0 <abort@plt+0x478>
   11158:	mov	r0, #0
   1115c:	bl	10bb8 <dcgettext@plt>
   11160:	mov	r1, r0
   11164:	ldr	r3, [pc, #76]	; 111b8 <abort@plt+0x480>
   11168:	b	11064 <abort@plt+0x32c>
   1116c:	andeq	r6, r2, r8, lsr #2
   11170:	andeq	r4, r1, r8, asr #15
   11174:	andeq	r6, r2, ip, lsr r1
   11178:	strdeq	r4, [r1], -r0
   1117c:	andeq	r4, r1, ip, lsl #16
   11180:	andeq	r6, r2, ip, lsr #2
   11184:	andeq	r4, r1, r4, lsr #17
   11188:	andeq	r4, r1, r4, ror #17
   1118c:	andeq	r4, r1, r4, lsl r9
   11190:	andeq	r4, r1, ip, asr #18
   11194:	andeq	r4, r1, r4, asr #14
   11198:	andeq	r4, r1, r0, asr #15
   1119c:	ldrdeq	r4, [r1], -r0
   111a0:	andeq	r4, r1, r8, ror #19
   111a4:	andeq	r4, r1, r0, lsl sl
   111a8:	andeq	r4, r1, r0, lsr #20
   111ac:	andeq	r4, r1, ip, ror #20
   111b0:	andeq	r4, r1, r8, lsl #21
   111b4:	andeq	r4, r1, r0, ror #17
   111b8:	andeq	r4, r1, r0, lsl fp
   111bc:	andeq	r4, r1, r4, lsr #20
   111c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111c4:	sub	sp, sp, #28
   111c8:	mov	r6, r0
   111cc:	mov	r4, r1
   111d0:	ldr	r0, [r1]
   111d4:	bl	115a0 <abort@plt+0x868>
   111d8:	ldr	r1, [pc, #412]	; 1137c <abort@plt+0x644>
   111dc:	mov	r0, #6
   111e0:	bl	10cfc <setlocale@plt>
   111e4:	ldr	r5, [pc, #404]	; 11380 <abort@plt+0x648>
   111e8:	ldr	r1, [pc, #404]	; 11384 <abort@plt+0x64c>
   111ec:	mov	r0, r5
   111f0:	bl	10d20 <bindtextdomain@plt>
   111f4:	mov	r0, r5
   111f8:	bl	10bd0 <textdomain@plt>
   111fc:	ldr	r0, [pc, #388]	; 11388 <abort@plt+0x650>
   11200:	bl	14720 <abort@plt+0x39e8>
   11204:	mov	r5, #0
   11208:	ldr	r9, [pc, #380]	; 1138c <abort@plt+0x654>
   1120c:	ldr	r8, [pc, #380]	; 11390 <abort@plt+0x658>
   11210:	mov	r7, r5
   11214:	mov	sl, #1
   11218:	str	r7, [sp]
   1121c:	mov	r3, r9
   11220:	mov	r2, r8
   11224:	mov	r1, r4
   11228:	mov	r0, r6
   1122c:	bl	10c60 <getopt_long@plt>
   11230:	cmn	r0, #1
   11234:	beq	112a0 <abort@plt+0x568>
   11238:	mov	r5, sl
   1123c:	cmn	r0, #2
   11240:	beq	1125c <abort@plt+0x524>
   11244:	cmp	r0, #122	; 0x7a
   11248:	beq	11218 <abort@plt+0x4e0>
   1124c:	cmn	r0, #3
   11250:	beq	11264 <abort@plt+0x52c>
   11254:	mov	r0, #1
   11258:	bl	10e6c <abort@plt+0x134>
   1125c:	mov	r0, #0
   11260:	bl	10e6c <abort@plt+0x134>
   11264:	mov	r4, #0
   11268:	str	r4, [sp, #8]
   1126c:	ldr	r3, [pc, #288]	; 11394 <abort@plt+0x65c>
   11270:	str	r3, [sp, #4]
   11274:	ldr	r3, [pc, #284]	; 11398 <abort@plt+0x660>
   11278:	str	r3, [sp]
   1127c:	ldr	r3, [pc, #280]	; 1139c <abort@plt+0x664>
   11280:	ldr	r3, [r3]
   11284:	ldr	r2, [pc, #276]	; 113a0 <abort@plt+0x668>
   11288:	ldr	r1, [pc, #276]	; 113a4 <abort@plt+0x66c>
   1128c:	ldr	r0, [pc, #276]	; 113a8 <abort@plt+0x670>
   11290:	ldr	r0, [r0]
   11294:	bl	135bc <abort@plt+0x2884>
   11298:	mov	r0, r4
   1129c:	bl	10c78 <exit@plt>
   112a0:	ldr	r3, [pc, #260]	; 113ac <abort@plt+0x674>
   112a4:	ldr	r3, [r3]
   112a8:	add	r3, r3, #1
   112ac:	cmp	r6, r3
   112b0:	blt	112dc <abort@plt+0x5a4>
   112b4:	sxtb	r5, r5
   112b8:	cmp	r5, #0
   112bc:	moveq	r5, #10
   112c0:	movne	r5, #0
   112c4:	str	r5, [sp, #20]
   112c8:	ldr	r8, [pc, #220]	; 113ac <abort@plt+0x674>
   112cc:	mov	sl, #1
   112d0:	ldr	fp, [pc, #216]	; 113b0 <abort@plt+0x678>
   112d4:	ldr	r9, [pc, #204]	; 113a8 <abort@plt+0x670>
   112d8:	b	11310 <abort@plt+0x5d8>
   112dc:	mov	r2, #5
   112e0:	ldr	r1, [pc, #204]	; 113b4 <abort@plt+0x67c>
   112e4:	mov	r0, #0
   112e8:	bl	10bb8 <dcgettext@plt>
   112ec:	mov	r2, r0
   112f0:	mov	r1, #0
   112f4:	mov	r0, r1
   112f8:	bl	10c24 <error@plt>
   112fc:	mov	r0, #1
   11300:	bl	10e6c <abort@plt+0x134>
   11304:	ldr	r3, [r8]
   11308:	add	r3, r3, #1
   1130c:	str	r3, [r8]
   11310:	ldr	r3, [r8]
   11314:	cmp	r6, r3
   11318:	ble	11370 <abort@plt+0x638>
   1131c:	ldr	r7, [r4, r3, lsl #2]
   11320:	mov	r0, r7
   11324:	bl	114cc <abort@plt+0x794>
   11328:	subs	r2, r0, #0
   1132c:	moveq	r2, sl
   11330:	moveq	r7, fp
   11334:	ldr	r3, [r9]
   11338:	mov	r1, sl
   1133c:	mov	r0, r7
   11340:	bl	10b94 <fwrite_unlocked@plt>
   11344:	ldr	r0, [r9]
   11348:	ldr	r3, [r0, #20]
   1134c:	ldr	r2, [r0, #24]
   11350:	cmp	r3, r2
   11354:	addcc	r2, r3, #1
   11358:	strcc	r2, [r0, #20]
   1135c:	strbcc	r5, [r3]
   11360:	bcc	11304 <abort@plt+0x5cc>
   11364:	ldr	r1, [sp, #20]
   11368:	bl	10cf0 <__overflow@plt>
   1136c:	b	11304 <abort@plt+0x5cc>
   11370:	mov	r0, #0
   11374:	add	sp, sp, #28
   11378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1137c:	andeq	r4, r1, r0, ror #17
   11380:	andeq	r4, r1, r4, lsl sl
   11384:			; <UNDEFINED> instruction: 0x00014abc
   11388:	ldrdeq	r1, [r1], -r8
   1138c:	andeq	r4, r1, r0, lsl #15
   11390:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11394:	ldrdeq	r4, [r1], -r8
   11398:	andeq	r4, r1, r8, ror #21
   1139c:	andeq	r6, r2, ip, asr #1
   113a0:	andeq	r4, r1, r0, lsl sl
   113a4:	andeq	r4, r1, r0, asr #15
   113a8:	andeq	r6, r2, ip, lsr #2
   113ac:	andeq	r6, r2, r0, lsr #2
   113b0:	andeq	r4, r1, ip, ror r7
   113b4:	strdeq	r4, [r1], -r8
   113b8:	ldr	r3, [pc, #4]	; 113c4 <abort@plt+0x68c>
   113bc:	str	r0, [r3]
   113c0:	bx	lr
   113c4:	andeq	r6, r2, r4, lsr r1
   113c8:	ldr	r3, [pc, #4]	; 113d4 <abort@plt+0x69c>
   113cc:	strb	r0, [r3, #4]
   113d0:	bx	lr
   113d4:	andeq	r6, r2, r4, lsr r1
   113d8:	push	{r4, r5, r6, lr}
   113dc:	sub	sp, sp, #8
   113e0:	ldr	r3, [pc, #200]	; 114b0 <abort@plt+0x778>
   113e4:	ldr	r0, [r3]
   113e8:	bl	13dfc <abort@plt+0x30c4>
   113ec:	cmp	r0, #0
   113f0:	beq	11414 <abort@plt+0x6dc>
   113f4:	ldr	r3, [pc, #184]	; 114b4 <abort@plt+0x77c>
   113f8:	ldrb	r3, [r3, #4]
   113fc:	cmp	r3, #0
   11400:	beq	11430 <abort@plt+0x6f8>
   11404:	bl	10c90 <__errno_location@plt>
   11408:	ldr	r3, [r0]
   1140c:	cmp	r3, #32
   11410:	bne	11430 <abort@plt+0x6f8>
   11414:	ldr	r3, [pc, #156]	; 114b8 <abort@plt+0x780>
   11418:	ldr	r0, [r3]
   1141c:	bl	13dfc <abort@plt+0x30c4>
   11420:	cmp	r0, #0
   11424:	bne	114a4 <abort@plt+0x76c>
   11428:	add	sp, sp, #8
   1142c:	pop	{r4, r5, r6, pc}
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #128]	; 114bc <abort@plt+0x784>
   11438:	mov	r0, #0
   1143c:	bl	10bb8 <dcgettext@plt>
   11440:	mov	r4, r0
   11444:	ldr	r3, [pc, #104]	; 114b4 <abort@plt+0x77c>
   11448:	ldr	r5, [r3]
   1144c:	cmp	r5, #0
   11450:	beq	11488 <abort@plt+0x750>
   11454:	bl	10c90 <__errno_location@plt>
   11458:	ldr	r6, [r0]
   1145c:	mov	r0, r5
   11460:	bl	12f68 <abort@plt+0x2230>
   11464:	str	r4, [sp]
   11468:	mov	r3, r0
   1146c:	ldr	r2, [pc, #76]	; 114c0 <abort@plt+0x788>
   11470:	mov	r1, r6
   11474:	mov	r0, #0
   11478:	bl	10c24 <error@plt>
   1147c:	ldr	r3, [pc, #64]	; 114c4 <abort@plt+0x78c>
   11480:	ldr	r0, [r3]
   11484:	bl	10b70 <_exit@plt>
   11488:	bl	10c90 <__errno_location@plt>
   1148c:	mov	r3, r4
   11490:	ldr	r2, [pc, #48]	; 114c8 <abort@plt+0x790>
   11494:	ldr	r1, [r0]
   11498:	mov	r0, #0
   1149c:	bl	10c24 <error@plt>
   114a0:	b	1147c <abort@plt+0x744>
   114a4:	ldr	r3, [pc, #24]	; 114c4 <abort@plt+0x78c>
   114a8:	ldr	r0, [r3]
   114ac:	bl	10b70 <_exit@plt>
   114b0:	andeq	r6, r2, ip, lsr #2
   114b4:	andeq	r6, r2, r4, lsr r1
   114b8:	andeq	r6, r2, r8, lsr #2
   114bc:	muleq	r1, ip, fp
   114c0:	andeq	r4, r1, r8, lsr #23
   114c4:	ldrdeq	r6, [r2], -r0
   114c8:	andeq	r4, r1, ip, lsr #23
   114cc:	push	{r4, r5, r6, lr}
   114d0:	mov	r5, r0
   114d4:	ldrb	r4, [r0]
   114d8:	cmp	r4, #47	; 0x2f
   114dc:	movne	r4, #0
   114e0:	moveq	r4, #1
   114e4:	bl	13d3c <abort@plt+0x3004>
   114e8:	sub	r0, r0, r5
   114ec:	cmp	r0, r4
   114f0:	bls	11528 <abort@plt+0x7f0>
   114f4:	sub	r3, r0, #1
   114f8:	add	r2, r5, r3
   114fc:	ldrb	r1, [r5, r3]
   11500:	cmp	r1, #47	; 0x2f
   11504:	bne	11530 <abort@plt+0x7f8>
   11508:	cmp	r4, r3
   1150c:	beq	1153c <abort@plt+0x804>
   11510:	sub	r0, r3, #1
   11514:	ldrb	r1, [r2, #-1]!
   11518:	cmp	r1, #47	; 0x2f
   1151c:	bne	11538 <abort@plt+0x800>
   11520:	mov	r3, r0
   11524:	b	11508 <abort@plt+0x7d0>
   11528:	mov	r4, r0
   1152c:	b	1153c <abort@plt+0x804>
   11530:	mov	r4, r0
   11534:	b	1153c <abort@plt+0x804>
   11538:	mov	r4, r3
   1153c:	mov	r0, r4
   11540:	pop	{r4, r5, r6, pc}
   11544:	push	{r4, r5, r6, r7, r8, lr}
   11548:	mov	r7, r0
   1154c:	bl	114cc <abort@plt+0x794>
   11550:	mov	r4, r0
   11554:	add	r6, r0, #1
   11558:	cmp	r0, #0
   1155c:	movne	r0, r6
   11560:	addeq	r0, r6, #1
   11564:	bl	13cbc <abort@plt+0x2f84>
   11568:	subs	r5, r0, #0
   1156c:	beq	11598 <abort@plt+0x860>
   11570:	mov	r2, r4
   11574:	mov	r1, r7
   11578:	mov	r0, r5
   1157c:	bl	10b7c <memcpy@plt>
   11580:	cmp	r4, #0
   11584:	moveq	r3, #46	; 0x2e
   11588:	strbeq	r3, [r5, r4]
   1158c:	moveq	r4, r6
   11590:	mov	r3, #0
   11594:	strb	r3, [r5, r4]
   11598:	mov	r0, r5
   1159c:	pop	{r4, r5, r6, r7, r8, pc}
   115a0:	push	{r4, r5, r6, lr}
   115a4:	subs	r4, r0, #0
   115a8:	beq	11620 <abort@plt+0x8e8>
   115ac:	mov	r1, #47	; 0x2f
   115b0:	mov	r0, r4
   115b4:	bl	10d08 <strrchr@plt>
   115b8:	cmp	r0, #0
   115bc:	addne	r5, r0, #1
   115c0:	moveq	r5, r4
   115c4:	sub	r3, r5, r4
   115c8:	cmp	r3, #6
   115cc:	ble	1160c <abort@plt+0x8d4>
   115d0:	mov	r2, #7
   115d4:	ldr	r1, [pc, #96]	; 1163c <abort@plt+0x904>
   115d8:	sub	r0, r5, #7
   115dc:	bl	10d2c <strncmp@plt>
   115e0:	cmp	r0, #0
   115e4:	bne	1160c <abort@plt+0x8d4>
   115e8:	mov	r2, #3
   115ec:	ldr	r1, [pc, #76]	; 11640 <abort@plt+0x908>
   115f0:	mov	r0, r5
   115f4:	bl	10d2c <strncmp@plt>
   115f8:	cmp	r0, #0
   115fc:	addeq	r4, r5, #3
   11600:	ldreq	r3, [pc, #60]	; 11644 <abort@plt+0x90c>
   11604:	streq	r4, [r3]
   11608:	movne	r4, r5
   1160c:	ldr	r3, [pc, #52]	; 11648 <abort@plt+0x910>
   11610:	str	r4, [r3]
   11614:	ldr	r3, [pc, #48]	; 1164c <abort@plt+0x914>
   11618:	str	r4, [r3]
   1161c:	pop	{r4, r5, r6, pc}
   11620:	ldr	r3, [pc, #40]	; 11650 <abort@plt+0x918>
   11624:	ldr	r3, [r3]
   11628:	mov	r2, #55	; 0x37
   1162c:	mov	r1, #1
   11630:	ldr	r0, [pc, #28]	; 11654 <abort@plt+0x91c>
   11634:	bl	10be8 <fwrite@plt>
   11638:	bl	10d38 <abort@plt>
   1163c:	andeq	r4, r1, r8, ror #23
   11640:	strdeq	r4, [r1], -r0
   11644:	andeq	r6, r2, r8, lsl r1
   11648:	andeq	r6, r2, ip, lsr r1
   1164c:	andeq	r6, r2, ip, lsl r1
   11650:	andeq	r6, r2, r8, lsr #2
   11654:			; <UNDEFINED> instruction: 0x00014bb0
   11658:	push	{r4, r5, r6, lr}
   1165c:	mov	r5, r0
   11660:	mov	r4, r1
   11664:	mov	r2, #48	; 0x30
   11668:	mov	r1, #0
   1166c:	bl	10ca8 <memset@plt>
   11670:	cmp	r4, #10
   11674:	beq	11684 <abort@plt+0x94c>
   11678:	str	r4, [r5]
   1167c:	mov	r0, r5
   11680:	pop	{r4, r5, r6, pc}
   11684:	bl	10d38 <abort@plt>
   11688:	push	{r4, r5, r6, lr}
   1168c:	mov	r4, r0
   11690:	mov	r5, r1
   11694:	mov	r2, #5
   11698:	mov	r1, r0
   1169c:	mov	r0, #0
   116a0:	bl	10bb8 <dcgettext@plt>
   116a4:	cmp	r4, r0
   116a8:	popne	{r4, r5, r6, pc}
   116ac:	bl	14080 <abort@plt+0x3348>
   116b0:	ldrb	r3, [r0]
   116b4:	bic	r3, r3, #32
   116b8:	cmp	r3, #85	; 0x55
   116bc:	beq	11738 <abort@plt+0xa00>
   116c0:	cmp	r3, #71	; 0x47
   116c4:	bne	11794 <abort@plt+0xa5c>
   116c8:	ldrb	r3, [r0, #1]
   116cc:	bic	r3, r3, #32
   116d0:	cmp	r3, #66	; 0x42
   116d4:	bne	11794 <abort@plt+0xa5c>
   116d8:	ldrb	r3, [r0, #2]
   116dc:	cmp	r3, #49	; 0x31
   116e0:	bne	11794 <abort@plt+0xa5c>
   116e4:	ldrb	r3, [r0, #3]
   116e8:	cmp	r3, #56	; 0x38
   116ec:	bne	11794 <abort@plt+0xa5c>
   116f0:	ldrb	r3, [r0, #4]
   116f4:	cmp	r3, #48	; 0x30
   116f8:	bne	11794 <abort@plt+0xa5c>
   116fc:	ldrb	r3, [r0, #5]
   11700:	cmp	r3, #51	; 0x33
   11704:	bne	11794 <abort@plt+0xa5c>
   11708:	ldrb	r3, [r0, #6]
   1170c:	cmp	r3, #48	; 0x30
   11710:	bne	11794 <abort@plt+0xa5c>
   11714:	ldrb	r3, [r0, #7]
   11718:	cmp	r3, #0
   1171c:	bne	11794 <abort@plt+0xa5c>
   11720:	ldrb	r2, [r4]
   11724:	ldr	r3, [pc, #124]	; 117a8 <abort@plt+0xa70>
   11728:	ldr	r0, [pc, #124]	; 117ac <abort@plt+0xa74>
   1172c:	cmp	r2, #96	; 0x60
   11730:	movne	r0, r3
   11734:	pop	{r4, r5, r6, pc}
   11738:	ldrb	r3, [r0, #1]
   1173c:	bic	r3, r3, #32
   11740:	cmp	r3, #84	; 0x54
   11744:	bne	11794 <abort@plt+0xa5c>
   11748:	ldrb	r3, [r0, #2]
   1174c:	bic	r3, r3, #32
   11750:	cmp	r3, #70	; 0x46
   11754:	bne	11794 <abort@plt+0xa5c>
   11758:	ldrb	r3, [r0, #3]
   1175c:	cmp	r3, #45	; 0x2d
   11760:	bne	11794 <abort@plt+0xa5c>
   11764:	ldrb	r3, [r0, #4]
   11768:	cmp	r3, #56	; 0x38
   1176c:	bne	11794 <abort@plt+0xa5c>
   11770:	ldrb	r3, [r0, #5]
   11774:	cmp	r3, #0
   11778:	bne	11794 <abort@plt+0xa5c>
   1177c:	ldrb	r2, [r4]
   11780:	ldr	r3, [pc, #40]	; 117b0 <abort@plt+0xa78>
   11784:	ldr	r0, [pc, #40]	; 117b4 <abort@plt+0xa7c>
   11788:	cmp	r2, #96	; 0x60
   1178c:	movne	r0, r3
   11790:	pop	{r4, r5, r6, pc}
   11794:	ldr	r3, [pc, #28]	; 117b8 <abort@plt+0xa80>
   11798:	ldr	r0, [pc, #28]	; 117bc <abort@plt+0xa84>
   1179c:	cmp	r5, #9
   117a0:	movne	r0, r3
   117a4:	pop	{r4, r5, r6, pc}
   117a8:	andeq	r4, r1, ip, asr #24
   117ac:	andeq	r4, r1, r8, asr ip
   117b0:	andeq	r4, r1, r8, asr #24
   117b4:	andeq	r4, r1, ip, asr ip
   117b8:	andeq	r4, r1, r0, asr ip
   117bc:	andeq	r4, r1, r4, asr ip
   117c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117c4:	sub	sp, sp, #116	; 0x74
   117c8:	str	r0, [sp, #36]	; 0x24
   117cc:	mov	sl, r1
   117d0:	str	r2, [sp, #52]	; 0x34
   117d4:	str	r3, [sp, #28]
   117d8:	ldr	r8, [sp, #152]	; 0x98
   117dc:	bl	10c00 <__ctype_get_mb_cur_max@plt>
   117e0:	str	r0, [sp, #84]	; 0x54
   117e4:	ldr	r3, [sp, #156]	; 0x9c
   117e8:	lsr	r3, r3, #1
   117ec:	and	r3, r3, #1
   117f0:	str	r3, [sp, #32]
   117f4:	mov	r3, #1
   117f8:	str	r3, [sp, #40]	; 0x28
   117fc:	mov	r3, #0
   11800:	str	r3, [sp, #80]	; 0x50
   11804:	str	r3, [sp, #44]	; 0x2c
   11808:	str	r3, [sp, #48]	; 0x30
   1180c:	str	r3, [sp, #60]	; 0x3c
   11810:	str	r3, [sp, #72]	; 0x48
   11814:	str	r3, [sp, #76]	; 0x4c
   11818:	mov	r7, sl
   1181c:	mov	sl, r8
   11820:	cmp	sl, #10
   11824:	ldrls	pc, [pc, sl, lsl #2]
   11828:	b	119e0 <abort@plt+0xca8>
   1182c:	muleq	r1, r0, r8
   11830:	andeq	r1, r1, r0, ror #16
   11834:			; <UNDEFINED> instruction: 0x000119bc
   11838:	andeq	r1, r1, r8, asr r8
   1183c:	andeq	r1, r1, r0, ror r9
   11840:	andeq	r1, r1, r0, lsr #17
   11844:	andeq	r2, r1, ip, lsl #18
   11848:	andeq	r1, r1, r4, ror #19
   1184c:	ldrdeq	r1, [r1], -ip
   11850:	ldrdeq	r1, [r1], -ip
   11854:	ldrdeq	r1, [r1], -ip
   11858:	mov	r3, #1
   1185c:	str	r3, [sp, #48]	; 0x30
   11860:	mov	r3, #1
   11864:	str	r3, [sp, #32]
   11868:	str	r3, [sp, #60]	; 0x3c
   1186c:	ldr	r3, [pc, #4068]	; 12858 <abort@plt+0x1b20>
   11870:	str	r3, [sp, #72]	; 0x48
   11874:	mov	fp, #0
   11878:	mov	sl, #2
   1187c:	mov	r6, #0
   11880:	ldr	r3, [sp, #48]	; 0x30
   11884:	eor	r3, r3, #1
   11888:	str	r3, [sp, #68]	; 0x44
   1188c:	b	12174 <abort@plt+0x143c>
   11890:	mov	r3, #0
   11894:	str	r3, [sp, #32]
   11898:	mov	fp, r3
   1189c:	b	1187c <abort@plt+0xb44>
   118a0:	ldr	r3, [sp, #32]
   118a4:	cmp	r3, #0
   118a8:	bne	119fc <abort@plt+0xcc4>
   118ac:	cmp	r7, #0
   118b0:	beq	11a1c <abort@plt+0xce4>
   118b4:	ldr	r3, [sp, #36]	; 0x24
   118b8:	mov	r2, #34	; 0x22
   118bc:	strb	r2, [r3]
   118c0:	mov	r3, #1
   118c4:	str	r3, [sp, #48]	; 0x30
   118c8:	str	r3, [sp, #60]	; 0x3c
   118cc:	ldr	r3, [pc, #3980]	; 12860 <abort@plt+0x1b28>
   118d0:	str	r3, [sp, #72]	; 0x48
   118d4:	mov	fp, #1
   118d8:	b	1187c <abort@plt+0xb44>
   118dc:	cmp	sl, #10
   118e0:	beq	11904 <abort@plt+0xbcc>
   118e4:	mov	r1, sl
   118e8:	ldr	r0, [pc, #3948]	; 1285c <abort@plt+0x1b24>
   118ec:	bl	11688 <abort@plt+0x950>
   118f0:	str	r0, [sp, #164]	; 0xa4
   118f4:	mov	r1, sl
   118f8:	ldr	r0, [pc, #3928]	; 12858 <abort@plt+0x1b20>
   118fc:	bl	11688 <abort@plt+0x950>
   11900:	str	r0, [sp, #168]	; 0xa8
   11904:	ldr	r3, [sp, #32]
   11908:	cmp	r3, #0
   1190c:	movne	fp, #0
   11910:	bne	11948 <abort@plt+0xc10>
   11914:	ldr	r3, [sp, #164]	; 0xa4
   11918:	ldrb	r3, [r3]
   1191c:	cmp	r3, #0
   11920:	beq	11968 <abort@plt+0xc30>
   11924:	ldr	r2, [sp, #164]	; 0xa4
   11928:	mov	fp, #0
   1192c:	ldr	r1, [sp, #36]	; 0x24
   11930:	cmp	r7, fp
   11934:	strbhi	r3, [r1, fp]
   11938:	add	fp, fp, #1
   1193c:	ldrb	r3, [r2, #1]!
   11940:	cmp	r3, #0
   11944:	bne	11930 <abort@plt+0xbf8>
   11948:	ldr	r0, [sp, #168]	; 0xa8
   1194c:	bl	10c84 <strlen@plt>
   11950:	str	r0, [sp, #60]	; 0x3c
   11954:	ldr	r3, [sp, #168]	; 0xa8
   11958:	str	r3, [sp, #72]	; 0x48
   1195c:	mov	r3, #1
   11960:	str	r3, [sp, #48]	; 0x30
   11964:	b	1187c <abort@plt+0xb44>
   11968:	mov	fp, #0
   1196c:	b	11948 <abort@plt+0xc10>
   11970:	ldr	r3, [sp, #32]
   11974:	cmp	r3, #0
   11978:	bne	11a38 <abort@plt+0xd00>
   1197c:	mov	r3, #1
   11980:	str	r3, [sp, #48]	; 0x30
   11984:	cmp	r7, #0
   11988:	beq	11a54 <abort@plt+0xd1c>
   1198c:	ldr	r3, [sp, #36]	; 0x24
   11990:	mov	r2, #39	; 0x27
   11994:	strb	r2, [r3]
   11998:	mov	r3, #0
   1199c:	str	r3, [sp, #32]
   119a0:	mov	r3, #1
   119a4:	str	r3, [sp, #60]	; 0x3c
   119a8:	ldr	r3, [pc, #3752]	; 12858 <abort@plt+0x1b20>
   119ac:	str	r3, [sp, #72]	; 0x48
   119b0:	mov	fp, #1
   119b4:	mov	sl, #2
   119b8:	b	1187c <abort@plt+0xb44>
   119bc:	ldr	r3, [sp, #32]
   119c0:	cmp	r3, #0
   119c4:	beq	11984 <abort@plt+0xc4c>
   119c8:	mov	r3, #1
   119cc:	str	r3, [sp, #60]	; 0x3c
   119d0:	ldr	r3, [pc, #3712]	; 12858 <abort@plt+0x1b20>
   119d4:	str	r3, [sp, #72]	; 0x48
   119d8:	mov	fp, #0
   119dc:	b	1187c <abort@plt+0xb44>
   119e0:	bl	10d38 <abort@plt>
   119e4:	mov	r3, #0
   119e8:	str	r3, [sp, #32]
   119ec:	mov	r3, #1
   119f0:	str	r3, [sp, #48]	; 0x30
   119f4:	mov	fp, #0
   119f8:	b	1187c <abort@plt+0xb44>
   119fc:	ldr	r3, [sp, #32]
   11a00:	str	r3, [sp, #48]	; 0x30
   11a04:	mov	r3, #1
   11a08:	str	r3, [sp, #60]	; 0x3c
   11a0c:	ldr	r3, [pc, #3660]	; 12860 <abort@plt+0x1b28>
   11a10:	str	r3, [sp, #72]	; 0x48
   11a14:	mov	fp, #0
   11a18:	b	1187c <abort@plt+0xb44>
   11a1c:	mov	r3, #1
   11a20:	str	r3, [sp, #48]	; 0x30
   11a24:	str	r3, [sp, #60]	; 0x3c
   11a28:	ldr	r3, [pc, #3632]	; 12860 <abort@plt+0x1b28>
   11a2c:	str	r3, [sp, #72]	; 0x48
   11a30:	mov	fp, #1
   11a34:	b	1187c <abort@plt+0xb44>
   11a38:	mov	r3, #1
   11a3c:	str	r3, [sp, #60]	; 0x3c
   11a40:	ldr	r3, [pc, #3600]	; 12858 <abort@plt+0x1b20>
   11a44:	str	r3, [sp, #72]	; 0x48
   11a48:	mov	fp, #0
   11a4c:	mov	sl, #2
   11a50:	b	1187c <abort@plt+0xb44>
   11a54:	mov	r3, #0
   11a58:	str	r3, [sp, #32]
   11a5c:	mov	r3, #1
   11a60:	str	r3, [sp, #60]	; 0x3c
   11a64:	ldr	r3, [pc, #3564]	; 12858 <abort@plt+0x1b20>
   11a68:	str	r3, [sp, #72]	; 0x48
   11a6c:	mov	fp, #1
   11a70:	mov	sl, #2
   11a74:	b	1187c <abort@plt+0xb44>
   11a78:	mov	r3, #0
   11a7c:	str	r3, [sp, #56]	; 0x38
   11a80:	ldr	r3, [sp, #52]	; 0x34
   11a84:	add	r2, r3, r6
   11a88:	str	r2, [sp, #64]	; 0x40
   11a8c:	ldrb	r4, [r3, r6]
   11a90:	cmp	r4, #126	; 0x7e
   11a94:	ldrls	pc, [pc, r4, lsl #2]
   11a98:	b	122d4 <abort@plt+0x159c>
   11a9c:			; <UNDEFINED> instruction: 0x00011cb4
   11aa0:	ldrdeq	r2, [r1], -r4
   11aa4:	ldrdeq	r2, [r1], -r4
   11aa8:	ldrdeq	r2, [r1], -r4
   11aac:	ldrdeq	r2, [r1], -r4
   11ab0:	ldrdeq	r2, [r1], -r4
   11ab4:	ldrdeq	r2, [r1], -r4
   11ab8:	andeq	r2, r1, r0, lsl r0
   11abc:	andeq	r1, r1, ip, lsr #25
   11ac0:	andeq	r1, r1, r8, asr #31
   11ac4:	andeq	r1, r1, r0, asr #31
   11ac8:	andeq	r1, r1, r0, lsr pc
   11acc:	andeq	r1, r1, r8, lsr #30
   11ad0:	andeq	r1, r1, r4, lsr #25
   11ad4:	ldrdeq	r2, [r1], -r4
   11ad8:	ldrdeq	r2, [r1], -r4
   11adc:	ldrdeq	r2, [r1], -r4
   11ae0:	ldrdeq	r2, [r1], -r4
   11ae4:	ldrdeq	r2, [r1], -r4
   11ae8:	ldrdeq	r2, [r1], -r4
   11aec:	ldrdeq	r2, [r1], -r4
   11af0:	ldrdeq	r2, [r1], -r4
   11af4:	ldrdeq	r2, [r1], -r4
   11af8:	ldrdeq	r2, [r1], -r4
   11afc:	ldrdeq	r2, [r1], -r4
   11b00:	ldrdeq	r2, [r1], -r4
   11b04:	ldrdeq	r2, [r1], -r4
   11b08:	ldrdeq	r2, [r1], -r4
   11b0c:	ldrdeq	r2, [r1], -r4
   11b10:	ldrdeq	r2, [r1], -r4
   11b14:	ldrdeq	r2, [r1], -r4
   11b18:	ldrdeq	r2, [r1], -r4
   11b1c:	andeq	r2, r1, r4, rrx
   11b20:	andeq	r2, r1, r0, rrx
   11b24:	andeq	r2, r1, r0, rrx
   11b28:	andeq	r2, r1, r8, lsr r0
   11b2c:	andeq	r2, r1, r0, rrx
   11b30:	andeq	r2, r1, r8, lsr #13
   11b34:	andeq	r2, r1, r0, rrx
   11b38:	andeq	r2, r1, r8, lsr r2
   11b3c:	andeq	r2, r1, r0, rrx
   11b40:	andeq	r2, r1, r0, rrx
   11b44:	andeq	r2, r1, r0, rrx
   11b48:	andeq	r2, r1, r8, lsr #13
   11b4c:	andeq	r2, r1, r8, lsr #13
   11b50:	andeq	r2, r1, r8, lsr #13
   11b54:	andeq	r2, r1, r8, lsr #13
   11b58:	andeq	r2, r1, r8, lsr #13
   11b5c:	andeq	r2, r1, r8, lsr #13
   11b60:	andeq	r2, r1, r8, lsr #13
   11b64:	andeq	r2, r1, r8, lsr #13
   11b68:	andeq	r2, r1, r8, lsr #13
   11b6c:	andeq	r2, r1, r8, lsr #13
   11b70:	andeq	r2, r1, r8, lsr #13
   11b74:	andeq	r2, r1, r8, lsr #13
   11b78:	andeq	r2, r1, r8, lsr #13
   11b7c:	andeq	r2, r1, r8, lsr #13
   11b80:	andeq	r2, r1, r8, lsr #13
   11b84:	andeq	r2, r1, r8, lsr #13
   11b88:	andeq	r2, r1, r0, rrx
   11b8c:	andeq	r2, r1, r0, rrx
   11b90:	andeq	r2, r1, r0, rrx
   11b94:	andeq	r2, r1, r0, rrx
   11b98:			; <UNDEFINED> instruction: 0x00011dbc
   11b9c:	ldrdeq	r2, [r1], -r4
   11ba0:	andeq	r2, r1, r8, lsr #13
   11ba4:	andeq	r2, r1, r8, lsr #13
   11ba8:	andeq	r2, r1, r8, lsr #13
   11bac:	andeq	r2, r1, r8, lsr #13
   11bb0:	andeq	r2, r1, r8, lsr #13
   11bb4:	andeq	r2, r1, r8, lsr #13
   11bb8:	andeq	r2, r1, r8, lsr #13
   11bbc:	andeq	r2, r1, r8, lsr #13
   11bc0:	andeq	r2, r1, r8, lsr #13
   11bc4:	andeq	r2, r1, r8, lsr #13
   11bc8:	andeq	r2, r1, r8, lsr #13
   11bcc:	andeq	r2, r1, r8, lsr #13
   11bd0:	andeq	r2, r1, r8, lsr #13
   11bd4:	andeq	r2, r1, r8, lsr #13
   11bd8:	andeq	r2, r1, r8, lsr #13
   11bdc:	andeq	r2, r1, r8, lsr #13
   11be0:	andeq	r2, r1, r8, lsr #13
   11be4:	andeq	r2, r1, r8, lsr #13
   11be8:	andeq	r2, r1, r8, lsr #13
   11bec:	andeq	r2, r1, r8, lsr #13
   11bf0:	andeq	r2, r1, r8, lsr #13
   11bf4:	andeq	r2, r1, r8, lsr #13
   11bf8:	andeq	r2, r1, r8, lsr #13
   11bfc:	andeq	r2, r1, r8, lsr #13
   11c00:	andeq	r2, r1, r8, lsr #13
   11c04:	andeq	r2, r1, r8, lsr #13
   11c08:	andeq	r2, r1, r0, rrx
   11c0c:	andeq	r1, r1, r8, lsr pc
   11c10:	andeq	r2, r1, r8, lsr #13
   11c14:	andeq	r2, r1, r0, rrx
   11c18:	andeq	r2, r1, r8, lsr #13
   11c1c:	andeq	r2, r1, r0, rrx
   11c20:	andeq	r2, r1, r8, lsr #13
   11c24:	andeq	r2, r1, r8, lsr #13
   11c28:	andeq	r2, r1, r8, lsr #13
   11c2c:	andeq	r2, r1, r8, lsr #13
   11c30:	andeq	r2, r1, r8, lsr #13
   11c34:	andeq	r2, r1, r8, lsr #13
   11c38:	andeq	r2, r1, r8, lsr #13
   11c3c:	andeq	r2, r1, r8, lsr #13
   11c40:	andeq	r2, r1, r8, lsr #13
   11c44:	andeq	r2, r1, r8, lsr #13
   11c48:	andeq	r2, r1, r8, lsr #13
   11c4c:	andeq	r2, r1, r8, lsr #13
   11c50:	andeq	r2, r1, r8, lsr #13
   11c54:	andeq	r2, r1, r8, lsr #13
   11c58:	andeq	r2, r1, r8, lsr #13
   11c5c:	andeq	r2, r1, r8, lsr #13
   11c60:	andeq	r2, r1, r8, lsr #13
   11c64:	andeq	r2, r1, r8, lsr #13
   11c68:	andeq	r2, r1, r8, lsr #13
   11c6c:	andeq	r2, r1, r8, lsr #13
   11c70:	andeq	r2, r1, r8, lsr #13
   11c74:	andeq	r2, r1, r8, lsr #13
   11c78:	andeq	r2, r1, r8, lsr #13
   11c7c:	andeq	r2, r1, r8, lsr #13
   11c80:	andeq	r2, r1, r8, lsr #13
   11c84:	andeq	r2, r1, r8, lsr #13
   11c88:	andeq	r2, r1, r8, lsl r0
   11c8c:	andeq	r2, r1, r0, rrx
   11c90:	andeq	r2, r1, r8, lsl r0
   11c94:	andeq	r2, r1, r8, lsr r0
   11c98:	mov	r3, #0
   11c9c:	str	r3, [sp, #56]	; 0x38
   11ca0:	b	11a80 <abort@plt+0xd48>
   11ca4:	mov	r3, #114	; 0x72
   11ca8:	b	11fcc <abort@plt+0x1294>
   11cac:	mov	r3, #98	; 0x62
   11cb0:	b	11fe4 <abort@plt+0x12ac>
   11cb4:	ldr	r3, [sp, #48]	; 0x30
   11cb8:	cmp	r3, #0
   11cbc:	beq	11da4 <abort@plt+0x106c>
   11cc0:	ldr	r3, [sp, #32]
   11cc4:	cmp	r3, #0
   11cc8:	bne	1282c <abort@plt+0x1af4>
   11ccc:	ldr	r3, [sp, #44]	; 0x2c
   11cd0:	eor	r3, r3, #1
   11cd4:	cmp	sl, #2
   11cd8:	movne	r3, #0
   11cdc:	andeq	r3, r3, #1
   11ce0:	cmp	r3, #0
   11ce4:	moveq	r2, fp
   11ce8:	beq	11d2c <abort@plt+0xff4>
   11cec:	cmp	r7, fp
   11cf0:	ldrhi	r2, [sp, #36]	; 0x24
   11cf4:	movhi	r1, #39	; 0x27
   11cf8:	strbhi	r1, [r2, fp]
   11cfc:	add	r2, fp, #1
   11d00:	cmp	r7, r2
   11d04:	ldrhi	r1, [sp, #36]	; 0x24
   11d08:	movhi	r0, #36	; 0x24
   11d0c:	strbhi	r0, [r1, r2]
   11d10:	add	r2, fp, #2
   11d14:	cmp	r7, r2
   11d18:	ldrhi	r1, [sp, #36]	; 0x24
   11d1c:	movhi	r0, #39	; 0x27
   11d20:	strbhi	r0, [r1, r2]
   11d24:	add	r2, fp, #3
   11d28:	str	r3, [sp, #44]	; 0x2c
   11d2c:	cmp	r7, r2
   11d30:	ldrhi	r3, [sp, #36]	; 0x24
   11d34:	movhi	r1, #92	; 0x5c
   11d38:	strbhi	r1, [r3, r2]
   11d3c:	add	fp, r2, #1
   11d40:	cmp	r5, #0
   11d44:	beq	126b0 <abort@plt+0x1978>
   11d48:	add	r3, r6, #1
   11d4c:	ldr	r1, [sp, #28]
   11d50:	cmp	r1, r3
   11d54:	bls	126c0 <abort@plt+0x1988>
   11d58:	ldr	r1, [sp, #52]	; 0x34
   11d5c:	ldrb	r3, [r1, r3]
   11d60:	sub	r3, r3, #48	; 0x30
   11d64:	uxtb	r3, r3
   11d68:	cmp	r3, #9
   11d6c:	bhi	126cc <abort@plt+0x1994>
   11d70:	cmp	r7, fp
   11d74:	movhi	r3, #48	; 0x30
   11d78:	ldrhi	r1, [sp, #36]	; 0x24
   11d7c:	strbhi	r3, [r1, fp]
   11d80:	add	r3, r2, #2
   11d84:	cmp	r7, r3
   11d88:	movhi	r1, #48	; 0x30
   11d8c:	ldrhi	r0, [sp, #36]	; 0x24
   11d90:	strbhi	r1, [r0, r3]
   11d94:	add	fp, r2, #3
   11d98:	ldr	r8, [sp, #32]
   11d9c:	mov	r4, #48	; 0x30
   11da0:	b	1207c <abort@plt+0x1344>
   11da4:	ldr	r3, [sp, #156]	; 0x9c
   11da8:	tst	r3, #1
   11dac:	bne	12170 <abort@plt+0x1438>
   11db0:	ldr	r5, [sp, #48]	; 0x30
   11db4:	mov	r8, r5
   11db8:	b	1207c <abort@plt+0x1344>
   11dbc:	cmp	sl, #2
   11dc0:	beq	11dd8 <abort@plt+0x10a0>
   11dc4:	cmp	sl, #5
   11dc8:	beq	11df0 <abort@plt+0x10b8>
   11dcc:	mov	r8, #0
   11dd0:	mov	r5, r8
   11dd4:	b	1207c <abort@plt+0x1344>
   11dd8:	ldr	r3, [sp, #32]
   11ddc:	cmp	r3, #0
   11de0:	bne	12840 <abort@plt+0x1b08>
   11de4:	mov	r8, r3
   11de8:	mov	r5, r3
   11dec:	b	1207c <abort@plt+0x1344>
   11df0:	ldr	r3, [sp, #156]	; 0x9c
   11df4:	tst	r3, #4
   11df8:	beq	126d8 <abort@plt+0x19a0>
   11dfc:	add	r3, r6, #2
   11e00:	ldr	r2, [sp, #28]
   11e04:	cmp	r2, r3
   11e08:	bls	126e4 <abort@plt+0x19ac>
   11e0c:	ldr	r2, [sp, #52]	; 0x34
   11e10:	add	r2, r2, r6
   11e14:	ldrb	r2, [r2, #1]
   11e18:	cmp	r2, #63	; 0x3f
   11e1c:	movne	r8, #0
   11e20:	movne	r5, r8
   11e24:	bne	1207c <abort@plt+0x1344>
   11e28:	ldr	r2, [sp, #52]	; 0x34
   11e2c:	ldrb	r2, [r2, r3]
   11e30:	sub	r1, r2, #33	; 0x21
   11e34:	cmp	r1, #29
   11e38:	ldrls	pc, [pc, r1, lsl #2]
   11e3c:	b	126f0 <abort@plt+0x19b8>
   11e40:			; <UNDEFINED> instruction: 0x00011eb8
   11e44:	strdeq	r2, [r1], -r0
   11e48:	strdeq	r2, [r1], -r0
   11e4c:	strdeq	r2, [r1], -r0
   11e50:	strdeq	r2, [r1], -r0
   11e54:	strdeq	r2, [r1], -r0
   11e58:			; <UNDEFINED> instruction: 0x00011eb8
   11e5c:			; <UNDEFINED> instruction: 0x00011eb8
   11e60:			; <UNDEFINED> instruction: 0x00011eb8
   11e64:	strdeq	r2, [r1], -r0
   11e68:	strdeq	r2, [r1], -r0
   11e6c:	strdeq	r2, [r1], -r0
   11e70:			; <UNDEFINED> instruction: 0x00011eb8
   11e74:	strdeq	r2, [r1], -r0
   11e78:			; <UNDEFINED> instruction: 0x00011eb8
   11e7c:	strdeq	r2, [r1], -r0
   11e80:	strdeq	r2, [r1], -r0
   11e84:	strdeq	r2, [r1], -r0
   11e88:	strdeq	r2, [r1], -r0
   11e8c:	strdeq	r2, [r1], -r0
   11e90:	strdeq	r2, [r1], -r0
   11e94:	strdeq	r2, [r1], -r0
   11e98:	strdeq	r2, [r1], -r0
   11e9c:	strdeq	r2, [r1], -r0
   11ea0:	strdeq	r2, [r1], -r0
   11ea4:	strdeq	r2, [r1], -r0
   11ea8:	strdeq	r2, [r1], -r0
   11eac:			; <UNDEFINED> instruction: 0x00011eb8
   11eb0:			; <UNDEFINED> instruction: 0x00011eb8
   11eb4:			; <UNDEFINED> instruction: 0x00011eb8
   11eb8:	ldr	r1, [sp, #32]
   11ebc:	cmp	r1, #0
   11ec0:	bne	12900 <abort@plt+0x1bc8>
   11ec4:	cmp	r7, fp
   11ec8:	movhi	r1, #63	; 0x3f
   11ecc:	ldrhi	r0, [sp, #36]	; 0x24
   11ed0:	strbhi	r1, [r0, fp]
   11ed4:	add	r1, fp, #1
   11ed8:	cmp	r7, r1
   11edc:	ldrhi	r0, [sp, #36]	; 0x24
   11ee0:	movhi	ip, #34	; 0x22
   11ee4:	strbhi	ip, [r0, r1]
   11ee8:	add	r1, fp, #2
   11eec:	cmp	r7, r1
   11ef0:	ldrhi	r0, [sp, #36]	; 0x24
   11ef4:	movhi	ip, #34	; 0x22
   11ef8:	strbhi	ip, [r0, r1]
   11efc:	add	r1, fp, #3
   11f00:	cmp	r7, r1
   11f04:	movhi	r0, #63	; 0x3f
   11f08:	ldrhi	ip, [sp, #36]	; 0x24
   11f0c:	strbhi	r0, [ip, r1]
   11f10:	add	fp, fp, #4
   11f14:	ldr	r5, [sp, #32]
   11f18:	mov	r8, r5
   11f1c:	mov	r4, r2
   11f20:	mov	r6, r3
   11f24:	b	1207c <abort@plt+0x1344>
   11f28:	mov	r3, #102	; 0x66
   11f2c:	b	11fe4 <abort@plt+0x12ac>
   11f30:	mov	r3, #118	; 0x76
   11f34:	b	11fe4 <abort@plt+0x12ac>
   11f38:	cmp	sl, #2
   11f3c:	beq	11fa8 <abort@plt+0x1270>
   11f40:	ldr	r3, [sp, #48]	; 0x30
   11f44:	ldr	r2, [sp, #32]
   11f48:	and	r3, r3, r2
   11f4c:	tst	r9, r3
   11f50:	moveq	r3, r4
   11f54:	beq	11fe4 <abort@plt+0x12ac>
   11f58:	mov	r8, #0
   11f5c:	mov	r5, r8
   11f60:	eor	r5, r5, #1
   11f64:	ldr	r3, [sp, #44]	; 0x2c
   11f68:	and	r5, r5, r3
   11f6c:	tst	r5, #255	; 0xff
   11f70:	beq	12150 <abort@plt+0x1418>
   11f74:	cmp	r7, fp
   11f78:	ldrhi	r3, [sp, #36]	; 0x24
   11f7c:	movhi	r2, #39	; 0x27
   11f80:	strbhi	r2, [r3, fp]
   11f84:	add	r3, fp, #1
   11f88:	cmp	r7, r3
   11f8c:	ldrhi	r2, [sp, #36]	; 0x24
   11f90:	movhi	r1, #39	; 0x27
   11f94:	strbhi	r1, [r2, r3]
   11f98:	add	fp, fp, #2
   11f9c:	mov	r3, #0
   11fa0:	str	r3, [sp, #44]	; 0x2c
   11fa4:	b	12150 <abort@plt+0x1418>
   11fa8:	ldr	r3, [sp, #32]
   11fac:	cmp	r3, #0
   11fb0:	bne	1284c <abort@plt+0x1b14>
   11fb4:	mov	r8, r3
   11fb8:	mov	r5, r3
   11fbc:	b	11f60 <abort@plt+0x1228>
   11fc0:	mov	r3, #110	; 0x6e
   11fc4:	b	11fcc <abort@plt+0x1294>
   11fc8:	mov	r3, #116	; 0x74
   11fcc:	ldr	r2, [sp, #32]
   11fd0:	cmp	sl, #2
   11fd4:	movne	r2, #0
   11fd8:	andeq	r2, r2, #1
   11fdc:	cmp	r2, #0
   11fe0:	bne	12004 <abort@plt+0x12cc>
   11fe4:	ldr	r2, [sp, #48]	; 0x30
   11fe8:	cmp	r2, #0
   11fec:	moveq	r8, r2
   11ff0:	moveq	r5, r2
   11ff4:	beq	1207c <abort@plt+0x1344>
   11ff8:	mov	r4, r3
   11ffc:	mov	r8, #0
   12000:	b	120d4 <abort@plt+0x139c>
   12004:	mov	r8, sl
   12008:	mov	sl, r7
   1200c:	b	12878 <abort@plt+0x1b40>
   12010:	mov	r3, #97	; 0x61
   12014:	b	11fe4 <abort@plt+0x12ac>
   12018:	ldr	r3, [sp, #28]
   1201c:	cmn	r3, #1
   12020:	beq	1204c <abort@plt+0x1314>
   12024:	ldr	r3, [sp, #28]
   12028:	subs	r3, r3, #1
   1202c:	movne	r3, #1
   12030:	cmp	r3, #0
   12034:	bne	126fc <abort@plt+0x19c4>
   12038:	cmp	r6, #0
   1203c:	beq	12064 <abort@plt+0x132c>
   12040:	mov	r8, #0
   12044:	mov	r5, r8
   12048:	b	1207c <abort@plt+0x1344>
   1204c:	ldr	r3, [sp, #52]	; 0x34
   12050:	ldrb	r3, [r3, #1]
   12054:	adds	r3, r3, #0
   12058:	movne	r3, #1
   1205c:	b	12030 <abort@plt+0x12f8>
   12060:	mov	r8, #0
   12064:	ldr	r5, [sp, #32]
   12068:	cmp	sl, #2
   1206c:	movne	r5, #0
   12070:	andeq	r5, r5, #1
   12074:	cmp	r5, #0
   12078:	bne	1222c <abort@plt+0x14f4>
   1207c:	ldr	r3, [sp, #68]	; 0x44
   12080:	cmp	sl, #2
   12084:	orreq	r3, r3, #1
   12088:	eor	r3, r3, #1
   1208c:	ldr	r2, [sp, #32]
   12090:	orr	r3, r2, r3
   12094:	tst	r3, #255	; 0xff
   12098:	beq	120c8 <abort@plt+0x1390>
   1209c:	ldr	r3, [sp, #160]	; 0xa0
   120a0:	cmp	r3, #0
   120a4:	beq	120c8 <abort@plt+0x1390>
   120a8:	lsr	r2, r4, #5
   120ac:	uxtb	r2, r2
   120b0:	and	r3, r4, #31
   120b4:	ldr	r1, [sp, #160]	; 0xa0
   120b8:	ldr	r2, [r1, r2, lsl #2]
   120bc:	lsr	r3, r2, r3
   120c0:	tst	r3, #1
   120c4:	bne	120d4 <abort@plt+0x139c>
   120c8:	ldr	r3, [sp, #56]	; 0x38
   120cc:	cmp	r3, #0
   120d0:	beq	11f60 <abort@plt+0x1228>
   120d4:	ldr	r3, [sp, #32]
   120d8:	cmp	r3, #0
   120dc:	bne	128e8 <abort@plt+0x1bb0>
   120e0:	ldr	r3, [sp, #44]	; 0x2c
   120e4:	eor	r3, r3, #1
   120e8:	cmp	sl, #2
   120ec:	movne	r3, #0
   120f0:	andeq	r3, r3, #1
   120f4:	cmp	r3, #0
   120f8:	beq	1213c <abort@plt+0x1404>
   120fc:	cmp	r7, fp
   12100:	ldrhi	r2, [sp, #36]	; 0x24
   12104:	movhi	r1, #39	; 0x27
   12108:	strbhi	r1, [r2, fp]
   1210c:	add	r2, fp, #1
   12110:	cmp	r7, r2
   12114:	ldrhi	r1, [sp, #36]	; 0x24
   12118:	movhi	r0, #36	; 0x24
   1211c:	strbhi	r0, [r1, r2]
   12120:	add	r2, fp, #2
   12124:	cmp	r7, r2
   12128:	ldrhi	r1, [sp, #36]	; 0x24
   1212c:	movhi	r0, #39	; 0x27
   12130:	strbhi	r0, [r1, r2]
   12134:	add	fp, fp, #3
   12138:	str	r3, [sp, #44]	; 0x2c
   1213c:	cmp	r7, fp
   12140:	ldrhi	r3, [sp, #36]	; 0x24
   12144:	movhi	r2, #92	; 0x5c
   12148:	strbhi	r2, [r3, fp]
   1214c:	add	fp, fp, #1
   12150:	cmp	fp, r7
   12154:	ldrcc	r3, [sp, #36]	; 0x24
   12158:	strbcc	r4, [r3, fp]
   1215c:	add	fp, fp, #1
   12160:	ldr	r3, [sp, #40]	; 0x28
   12164:	cmp	r8, #0
   12168:	moveq	r3, #0
   1216c:	str	r3, [sp, #40]	; 0x28
   12170:	add	r6, r6, #1
   12174:	ldr	r3, [sp, #28]
   12178:	cmn	r3, #1
   1217c:	beq	12708 <abort@plt+0x19d0>
   12180:	ldr	r3, [sp, #28]
   12184:	subs	r8, r3, r6
   12188:	movne	r8, #1
   1218c:	cmp	r8, #0
   12190:	beq	1271c <abort@plt+0x19e4>
   12194:	ldr	r5, [sp, #48]	; 0x30
   12198:	cmp	sl, #2
   1219c:	moveq	r5, #0
   121a0:	andne	r5, r5, #1
   121a4:	ldr	r3, [sp, #60]	; 0x3c
   121a8:	adds	r9, r3, #0
   121ac:	movne	r9, #1
   121b0:	ands	r2, r5, r9
   121b4:	str	r2, [sp, #56]	; 0x38
   121b8:	beq	11a80 <abort@plt+0xd48>
   121bc:	add	r4, r6, r3
   121c0:	ldr	r2, [sp, #28]
   121c4:	cmp	r3, #1
   121c8:	movls	r3, #0
   121cc:	movhi	r3, #1
   121d0:	cmn	r2, #1
   121d4:	movne	r3, #0
   121d8:	cmp	r3, #0
   121dc:	beq	121ec <abort@plt+0x14b4>
   121e0:	ldr	r0, [sp, #52]	; 0x34
   121e4:	bl	10c84 <strlen@plt>
   121e8:	str	r0, [sp, #28]
   121ec:	ldr	r3, [sp, #28]
   121f0:	cmp	r3, r4
   121f4:	bcc	11a78 <abort@plt+0xd40>
   121f8:	ldr	r2, [sp, #60]	; 0x3c
   121fc:	ldr	r1, [sp, #72]	; 0x48
   12200:	ldr	r3, [sp, #52]	; 0x34
   12204:	add	r0, r3, r6
   12208:	bl	10ba0 <memcmp@plt>
   1220c:	cmp	r0, #0
   12210:	bne	11c98 <abort@plt+0xf60>
   12214:	ldr	r3, [sp, #32]
   12218:	cmp	r3, #0
   1221c:	beq	11a80 <abort@plt+0xd48>
   12220:	mov	r8, sl
   12224:	mov	sl, r7
   12228:	b	12878 <abort@plt+0x1b40>
   1222c:	mov	r8, sl
   12230:	mov	sl, r7
   12234:	b	12878 <abort@plt+0x1b40>
   12238:	cmp	sl, #2
   1223c:	strne	r8, [sp, #80]	; 0x50
   12240:	movne	r5, #0
   12244:	bne	1207c <abort@plt+0x1344>
   12248:	ldr	r3, [sp, #32]
   1224c:	cmp	r3, #0
   12250:	bne	12864 <abort@plt+0x1b2c>
   12254:	ldr	r2, [sp, #76]	; 0x4c
   12258:	adds	r3, r7, #0
   1225c:	movne	r3, #1
   12260:	cmp	r2, #0
   12264:	movne	r3, #0
   12268:	cmp	r3, #0
   1226c:	movne	r3, #0
   12270:	bne	122a0 <abort@plt+0x1568>
   12274:	cmp	r7, fp
   12278:	ldrhi	r3, [sp, #36]	; 0x24
   1227c:	movhi	r2, #39	; 0x27
   12280:	strbhi	r2, [r3, fp]
   12284:	add	r3, fp, #1
   12288:	cmp	r7, r3
   1228c:	ldrhi	r2, [sp, #36]	; 0x24
   12290:	movhi	r1, #92	; 0x5c
   12294:	strbhi	r1, [r2, r3]
   12298:	mov	r3, r7
   1229c:	ldr	r7, [sp, #76]	; 0x4c
   122a0:	add	r2, fp, #2
   122a4:	cmp	r2, r3
   122a8:	ldrcc	r1, [sp, #36]	; 0x24
   122ac:	movcc	r0, #39	; 0x27
   122b0:	strbcc	r0, [r1, r2]
   122b4:	add	fp, fp, #3
   122b8:	ldr	r2, [sp, #32]
   122bc:	mov	r5, r2
   122c0:	str	r8, [sp, #80]	; 0x50
   122c4:	str	r2, [sp, #44]	; 0x2c
   122c8:	str	r7, [sp, #76]	; 0x4c
   122cc:	mov	r7, r3
   122d0:	b	1207c <abort@plt+0x1344>
   122d4:	ldr	r5, [sp, #84]	; 0x54
   122d8:	cmp	r5, #1
   122dc:	beq	1230c <abort@plt+0x15d4>
   122e0:	mov	r3, #0
   122e4:	str	r3, [sp, #104]	; 0x68
   122e8:	str	r3, [sp, #108]	; 0x6c
   122ec:	ldr	r3, [sp, #28]
   122f0:	cmn	r3, #1
   122f4:	beq	12340 <abort@plt+0x1608>
   122f8:	mov	r3, #0
   122fc:	str	r4, [sp, #88]	; 0x58
   12300:	str	fp, [sp, #92]	; 0x5c
   12304:	mov	fp, r3
   12308:	b	12468 <abort@plt+0x1730>
   1230c:	bl	10c6c <__ctype_b_loc@plt>
   12310:	ldr	r2, [r0]
   12314:	lsl	r3, r4, #1
   12318:	ldrh	r8, [r2, r3]
   1231c:	lsr	r8, r8, #14
   12320:	and	r8, r8, #1
   12324:	mov	r2, r5
   12328:	eor	r5, r8, #1
   1232c:	ldr	r3, [sp, #48]	; 0x30
   12330:	and	r5, r5, r3
   12334:	ands	r5, r5, #255	; 0xff
   12338:	beq	1207c <abort@plt+0x1344>
   1233c:	b	12500 <abort@plt+0x17c8>
   12340:	ldr	r0, [sp, #52]	; 0x34
   12344:	bl	10c84 <strlen@plt>
   12348:	str	r0, [sp, #28]
   1234c:	b	122f8 <abort@plt+0x15c0>
   12350:	mov	r2, fp
   12354:	mov	r1, r4
   12358:	ldr	r4, [sp, #88]	; 0x58
   1235c:	ldr	fp, [sp, #92]	; 0x5c
   12360:	ldr	r0, [sp, #28]
   12364:	cmp	r0, r5
   12368:	bls	12534 <abort@plt+0x17fc>
   1236c:	ldrb	r3, [r1]
   12370:	cmp	r3, #0
   12374:	beq	1253c <abort@plt+0x1804>
   12378:	mov	r3, r1
   1237c:	add	r2, r2, #1
   12380:	add	r1, r6, r2
   12384:	cmp	r0, r1
   12388:	bls	12544 <abort@plt+0x180c>
   1238c:	ldrb	r1, [r3, #1]!
   12390:	cmp	r1, #0
   12394:	bne	1237c <abort@plt+0x1644>
   12398:	mov	r8, #0
   1239c:	b	124f8 <abort@plt+0x17c0>
   123a0:	cmp	r4, r5
   123a4:	beq	12444 <abort@plt+0x170c>
   123a8:	ldrb	r3, [r4, #1]!
   123ac:	sub	r3, r3, #91	; 0x5b
   123b0:	cmp	r3, #33	; 0x21
   123b4:	ldrls	pc, [pc, r3, lsl #2]
   123b8:	b	123a0 <abort@plt+0x1668>
   123bc:	andeq	r2, r1, r0, ror r8
   123c0:	andeq	r2, r1, r0, ror r8
   123c4:	andeq	r2, r1, r0, lsr #7
   123c8:	andeq	r2, r1, r0, ror r8
   123cc:	andeq	r2, r1, r0, lsr #7
   123d0:	andeq	r2, r1, r0, ror r8
   123d4:	andeq	r2, r1, r0, lsr #7
   123d8:	andeq	r2, r1, r0, lsr #7
   123dc:	andeq	r2, r1, r0, lsr #7
   123e0:	andeq	r2, r1, r0, lsr #7
   123e4:	andeq	r2, r1, r0, lsr #7
   123e8:	andeq	r2, r1, r0, lsr #7
   123ec:	andeq	r2, r1, r0, lsr #7
   123f0:	andeq	r2, r1, r0, lsr #7
   123f4:	andeq	r2, r1, r0, lsr #7
   123f8:	andeq	r2, r1, r0, lsr #7
   123fc:	andeq	r2, r1, r0, lsr #7
   12400:	andeq	r2, r1, r0, lsr #7
   12404:	andeq	r2, r1, r0, lsr #7
   12408:	andeq	r2, r1, r0, lsr #7
   1240c:	andeq	r2, r1, r0, lsr #7
   12410:	andeq	r2, r1, r0, lsr #7
   12414:	andeq	r2, r1, r0, lsr #7
   12418:	andeq	r2, r1, r0, lsr #7
   1241c:	andeq	r2, r1, r0, lsr #7
   12420:	andeq	r2, r1, r0, lsr #7
   12424:	andeq	r2, r1, r0, lsr #7
   12428:	andeq	r2, r1, r0, lsr #7
   1242c:	andeq	r2, r1, r0, lsr #7
   12430:	andeq	r2, r1, r0, lsr #7
   12434:	andeq	r2, r1, r0, lsr #7
   12438:	andeq	r2, r1, r0, lsr #7
   1243c:	andeq	r2, r1, r0, lsr #7
   12440:	andeq	r2, r1, r0, ror r8
   12444:	ldr	r0, [sp, #100]	; 0x64
   12448:	bl	10bdc <iswprint@plt>
   1244c:	cmp	r0, #0
   12450:	moveq	r8, #0
   12454:	add	fp, fp, r9
   12458:	add	r0, sp, #104	; 0x68
   1245c:	bl	10b88 <mbsinit@plt>
   12460:	cmp	r0, #0
   12464:	bne	124d8 <abort@plt+0x17a0>
   12468:	add	r5, r6, fp
   1246c:	ldr	r3, [sp, #52]	; 0x34
   12470:	add	r4, r3, r5
   12474:	add	r3, sp, #104	; 0x68
   12478:	ldr	r2, [sp, #28]
   1247c:	sub	r2, r2, r5
   12480:	mov	r1, r4
   12484:	add	r0, sp, #100	; 0x64
   12488:	bl	140b4 <abort@plt+0x337c>
   1248c:	subs	r9, r0, #0
   12490:	beq	1254c <abort@plt+0x1814>
   12494:	cmn	r9, #1
   12498:	beq	124e8 <abort@plt+0x17b0>
   1249c:	cmn	r9, #2
   124a0:	beq	12350 <abort@plt+0x1618>
   124a4:	ldr	r3, [sp, #32]
   124a8:	cmp	sl, #2
   124ac:	movne	r3, #0
   124b0:	andeq	r3, r3, #1
   124b4:	cmp	r3, #0
   124b8:	beq	12444 <abort@plt+0x170c>
   124bc:	cmp	r9, #1
   124c0:	bls	12444 <abort@plt+0x170c>
   124c4:	sub	r3, r9, #1
   124c8:	add	r5, r3, r5
   124cc:	ldr	r3, [sp, #52]	; 0x34
   124d0:	add	r5, r3, r5
   124d4:	b	123a8 <abort@plt+0x1670>
   124d8:	ldr	r4, [sp, #88]	; 0x58
   124dc:	mov	r2, fp
   124e0:	ldr	fp, [sp, #92]	; 0x5c
   124e4:	b	124f8 <abort@plt+0x17c0>
   124e8:	ldr	r4, [sp, #88]	; 0x58
   124ec:	mov	r2, fp
   124f0:	ldr	fp, [sp, #92]	; 0x5c
   124f4:	mov	r8, #0
   124f8:	cmp	r2, #1
   124fc:	bls	12328 <abort@plt+0x15f0>
   12500:	add	r1, r6, r2
   12504:	ldr	ip, [sp, #64]	; 0x40
   12508:	mov	r5, #0
   1250c:	eor	r3, r8, #1
   12510:	ldr	r2, [sp, #48]	; 0x30
   12514:	and	r3, r3, r2
   12518:	uxtb	r3, r3
   1251c:	ldr	r9, [sp, #32]
   12520:	ldr	lr, [sp, #44]	; 0x2c
   12524:	ldr	r2, [sp, #56]	; 0x38
   12528:	str	r8, [sp, #56]	; 0x38
   1252c:	ldr	r0, [sp, #36]	; 0x24
   12530:	b	125cc <abort@plt+0x1894>
   12534:	mov	r8, #0
   12538:	b	124f8 <abort@plt+0x17c0>
   1253c:	mov	r8, #0
   12540:	b	124f8 <abort@plt+0x17c0>
   12544:	mov	r8, #0
   12548:	b	124f8 <abort@plt+0x17c0>
   1254c:	ldr	r4, [sp, #88]	; 0x58
   12550:	mov	r2, fp
   12554:	ldr	fp, [sp, #92]	; 0x5c
   12558:	b	124f8 <abort@plt+0x17c0>
   1255c:	cmp	r2, #0
   12560:	beq	12574 <abort@plt+0x183c>
   12564:	cmp	r7, fp
   12568:	movhi	r2, #92	; 0x5c
   1256c:	strbhi	r2, [r0, fp]
   12570:	add	fp, fp, #1
   12574:	add	r8, r6, #1
   12578:	cmp	r1, r8
   1257c:	bls	12684 <abort@plt+0x194c>
   12580:	eor	r2, r5, #1
   12584:	and	r2, r2, lr
   12588:	ands	r2, r2, #255	; 0xff
   1258c:	beq	126a0 <abort@plt+0x1968>
   12590:	cmp	r7, fp
   12594:	movhi	r2, #39	; 0x27
   12598:	strbhi	r2, [r0, fp]
   1259c:	add	r2, fp, #1
   125a0:	cmp	r7, r2
   125a4:	movhi	lr, #39	; 0x27
   125a8:	strbhi	lr, [r0, r2]
   125ac:	add	fp, fp, #2
   125b0:	mov	r6, r8
   125b4:	mov	r2, r3
   125b8:	mov	lr, r3
   125bc:	cmp	r7, fp
   125c0:	strbhi	r4, [r0, fp]
   125c4:	add	fp, fp, #1
   125c8:	ldrb	r4, [ip, #1]!
   125cc:	cmp	r3, #0
   125d0:	beq	1255c <abort@plt+0x1824>
   125d4:	cmp	r9, #0
   125d8:	bne	128dc <abort@plt+0x1ba4>
   125dc:	eor	r5, lr, #1
   125e0:	cmp	sl, #2
   125e4:	movne	r5, #0
   125e8:	andeq	r5, r5, #1
   125ec:	cmp	r5, #0
   125f0:	beq	12628 <abort@plt+0x18f0>
   125f4:	cmp	r7, fp
   125f8:	movhi	lr, #39	; 0x27
   125fc:	strbhi	lr, [r0, fp]
   12600:	add	lr, fp, #1
   12604:	cmp	r7, lr
   12608:	movhi	r8, #36	; 0x24
   1260c:	strbhi	r8, [r0, lr]
   12610:	add	lr, fp, #2
   12614:	cmp	r7, lr
   12618:	movhi	r8, #39	; 0x27
   1261c:	strbhi	r8, [r0, lr]
   12620:	add	fp, fp, #3
   12624:	mov	lr, r5
   12628:	cmp	r7, fp
   1262c:	movhi	r5, #92	; 0x5c
   12630:	strbhi	r5, [r0, fp]
   12634:	add	r5, fp, #1
   12638:	cmp	r7, r5
   1263c:	lsrhi	r8, r4, #6
   12640:	addhi	r8, r8, #48	; 0x30
   12644:	strbhi	r8, [r0, r5]
   12648:	add	r8, fp, #2
   1264c:	cmp	r7, r8
   12650:	lsrhi	r5, r4, #3
   12654:	andhi	r5, r5, #7
   12658:	addhi	r5, r5, #48	; 0x30
   1265c:	strbhi	r5, [r0, r8]
   12660:	add	fp, fp, #3
   12664:	and	r4, r4, #7
   12668:	add	r4, r4, #48	; 0x30
   1266c:	add	r5, r6, #1
   12670:	cmp	r1, r5
   12674:	bls	12690 <abort@plt+0x1958>
   12678:	mov	r6, r5
   1267c:	mov	r5, r3
   12680:	b	125bc <abort@plt+0x1884>
   12684:	str	lr, [sp, #44]	; 0x2c
   12688:	ldr	r8, [sp, #56]	; 0x38
   1268c:	b	11f60 <abort@plt+0x1228>
   12690:	str	lr, [sp, #44]	; 0x2c
   12694:	ldr	r8, [sp, #56]	; 0x38
   12698:	mov	r5, r3
   1269c:	b	11f60 <abort@plt+0x1228>
   126a0:	mov	r6, r8
   126a4:	b	125bc <abort@plt+0x1884>
   126a8:	mov	r5, #0
   126ac:	b	1207c <abort@plt+0x1344>
   126b0:	mov	r8, r5
   126b4:	ldr	r5, [sp, #48]	; 0x30
   126b8:	mov	r4, #48	; 0x30
   126bc:	b	1207c <abort@plt+0x1344>
   126c0:	ldr	r8, [sp, #32]
   126c4:	mov	r4, #48	; 0x30
   126c8:	b	1207c <abort@plt+0x1344>
   126cc:	ldr	r8, [sp, #32]
   126d0:	mov	r4, #48	; 0x30
   126d4:	b	1207c <abort@plt+0x1344>
   126d8:	mov	r8, #0
   126dc:	mov	r5, r8
   126e0:	b	1207c <abort@plt+0x1344>
   126e4:	mov	r8, #0
   126e8:	mov	r5, r8
   126ec:	b	1207c <abort@plt+0x1344>
   126f0:	mov	r8, #0
   126f4:	mov	r5, r8
   126f8:	b	1207c <abort@plt+0x1344>
   126fc:	mov	r8, #0
   12700:	mov	r5, r8
   12704:	b	1207c <abort@plt+0x1344>
   12708:	ldr	r3, [sp, #52]	; 0x34
   1270c:	ldrb	r8, [r3, r6]
   12710:	adds	r8, r8, #0
   12714:	movne	r8, #1
   12718:	b	1218c <abort@plt+0x1454>
   1271c:	cmp	sl, #2
   12720:	movne	r3, #0
   12724:	moveq	r3, #1
   12728:	ldr	r1, [sp, #32]
   1272c:	mov	r2, r1
   12730:	and	r2, r2, r3
   12734:	cmp	fp, #0
   12738:	movne	r2, #0
   1273c:	andeq	r2, r2, #1
   12740:	cmp	r2, #0
   12744:	bne	128f4 <abort@plt+0x1bbc>
   12748:	eor	r2, r1, #1
   1274c:	and	r3, r3, r2
   12750:	ldr	r1, [sp, #80]	; 0x50
   12754:	tst	r1, r3
   12758:	beq	127d0 <abort@plt+0x1a98>
   1275c:	ldr	r3, [sp, #40]	; 0x28
   12760:	cmp	r3, #0
   12764:	bne	1278c <abort@plt+0x1a54>
   12768:	ldr	r1, [sp, #76]	; 0x4c
   1276c:	clz	r3, r7
   12770:	lsr	r3, r3, #5
   12774:	cmp	r1, #0
   12778:	moveq	r3, #0
   1277c:	cmp	r3, #0
   12780:	beq	127d0 <abort@plt+0x1a98>
   12784:	ldr	r7, [sp, #76]	; 0x4c
   12788:	b	11820 <abort@plt+0xae8>
   1278c:	ldr	r3, [sp, #168]	; 0xa8
   12790:	str	r3, [sp, #16]
   12794:	ldr	r3, [sp, #164]	; 0xa4
   12798:	str	r3, [sp, #12]
   1279c:	ldr	r3, [sp, #160]	; 0xa0
   127a0:	str	r3, [sp, #8]
   127a4:	ldr	r3, [sp, #156]	; 0x9c
   127a8:	str	r3, [sp, #4]
   127ac:	mov	r3, #5
   127b0:	str	r3, [sp]
   127b4:	ldr	r3, [sp, #28]
   127b8:	ldr	r2, [sp, #52]	; 0x34
   127bc:	ldr	r1, [sp, #76]	; 0x4c
   127c0:	ldr	r0, [sp, #36]	; 0x24
   127c4:	bl	117c0 <abort@plt+0xa88>
   127c8:	mov	fp, r0
   127cc:	b	128d0 <abort@plt+0x1b98>
   127d0:	mov	sl, r7
   127d4:	ldr	r3, [sp, #72]	; 0x48
   127d8:	cmp	r3, #0
   127dc:	moveq	r2, #0
   127e0:	andne	r2, r2, #1
   127e4:	cmp	r2, #0
   127e8:	beq	12818 <abort@plt+0x1ae0>
   127ec:	mov	r2, r3
   127f0:	ldrb	r3, [r3]
   127f4:	cmp	r3, #0
   127f8:	beq	12818 <abort@plt+0x1ae0>
   127fc:	ldr	r1, [sp, #36]	; 0x24
   12800:	cmp	sl, fp
   12804:	strbhi	r3, [r1, fp]
   12808:	add	fp, fp, #1
   1280c:	ldrb	r3, [r2, #1]!
   12810:	cmp	r3, #0
   12814:	bne	12800 <abort@plt+0x1ac8>
   12818:	cmp	sl, fp
   1281c:	movhi	r3, #0
   12820:	ldrhi	r2, [sp, #36]	; 0x24
   12824:	strbhi	r3, [r2, fp]
   12828:	b	128d0 <abort@plt+0x1b98>
   1282c:	mov	r8, sl
   12830:	mov	sl, r7
   12834:	ldr	r3, [sp, #32]
   12838:	str	r3, [sp, #48]	; 0x30
   1283c:	b	12878 <abort@plt+0x1b40>
   12840:	mov	r8, sl
   12844:	mov	sl, r7
   12848:	b	12878 <abort@plt+0x1b40>
   1284c:	mov	r8, sl
   12850:	mov	sl, r7
   12854:	b	12878 <abort@plt+0x1b40>
   12858:	andeq	r4, r1, r0, asr ip
   1285c:	andeq	r4, r1, r0, ror #24
   12860:	andeq	r4, r1, r4, asr ip
   12864:	mov	r8, sl
   12868:	mov	sl, r7
   1286c:	b	12878 <abort@plt+0x1b40>
   12870:	mov	r8, sl
   12874:	mov	sl, r7
   12878:	ldr	r3, [sp, #48]	; 0x30
   1287c:	cmp	r8, #2
   12880:	movne	r3, #0
   12884:	andeq	r3, r3, #1
   12888:	cmp	r3, #0
   1288c:	movne	r8, #4
   12890:	ldr	r3, [sp, #168]	; 0xa8
   12894:	str	r3, [sp, #16]
   12898:	ldr	r3, [sp, #164]	; 0xa4
   1289c:	str	r3, [sp, #12]
   128a0:	mov	r3, #0
   128a4:	str	r3, [sp, #8]
   128a8:	ldr	r3, [sp, #156]	; 0x9c
   128ac:	bic	r3, r3, #2
   128b0:	str	r3, [sp, #4]
   128b4:	str	r8, [sp]
   128b8:	ldr	r3, [sp, #28]
   128bc:	ldr	r2, [sp, #52]	; 0x34
   128c0:	mov	r1, sl
   128c4:	ldr	r0, [sp, #36]	; 0x24
   128c8:	bl	117c0 <abort@plt+0xa88>
   128cc:	mov	fp, r0
   128d0:	mov	r0, fp
   128d4:	add	sp, sp, #116	; 0x74
   128d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128dc:	mov	r8, sl
   128e0:	mov	sl, r7
   128e4:	b	12878 <abort@plt+0x1b40>
   128e8:	mov	r8, sl
   128ec:	mov	sl, r7
   128f0:	b	12878 <abort@plt+0x1b40>
   128f4:	mov	r8, sl
   128f8:	mov	sl, r7
   128fc:	b	12878 <abort@plt+0x1b40>
   12900:	mov	r8, sl
   12904:	mov	sl, r7
   12908:	b	12890 <abort@plt+0x1b58>
   1290c:	mov	r3, #1
   12910:	str	r3, [sp, #32]
   12914:	str	r3, [sp, #48]	; 0x30
   12918:	str	r3, [sp, #60]	; 0x3c
   1291c:	ldr	r3, [pc, #-196]	; 12860 <abort@plt+0x1b28>
   12920:	str	r3, [sp, #72]	; 0x48
   12924:	mov	fp, #0
   12928:	mov	sl, #5
   1292c:	b	1187c <abort@plt+0xb44>
   12930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12934:	sub	sp, sp, #52	; 0x34
   12938:	mov	r5, r0
   1293c:	str	r1, [sp, #24]
   12940:	str	r2, [sp, #28]
   12944:	mov	r4, r3
   12948:	bl	10c90 <__errno_location@plt>
   1294c:	str	r0, [sp, #32]
   12950:	ldr	r3, [r0]
   12954:	str	r3, [sp, #36]	; 0x24
   12958:	ldr	r3, [pc, #396]	; 12aec <abort@plt+0x1db4>
   1295c:	ldr	r6, [r3]
   12960:	cmn	r5, #-2147483647	; 0x80000001
   12964:	movne	r3, #0
   12968:	moveq	r3, #1
   1296c:	orrs	r3, r3, r5, lsr #31
   12970:	bne	12ab0 <abort@plt+0x1d78>
   12974:	ldr	r3, [pc, #368]	; 12aec <abort@plt+0x1db4>
   12978:	ldr	r2, [r3, #4]
   1297c:	cmp	r5, r2
   12980:	blt	129e8 <abort@plt+0x1cb0>
   12984:	str	r2, [sp, #44]	; 0x2c
   12988:	add	r3, r3, #8
   1298c:	cmp	r6, r3
   12990:	beq	12ab4 <abort@plt+0x1d7c>
   12994:	sub	r2, r5, r2
   12998:	mov	r3, #8
   1299c:	str	r3, [sp]
   129a0:	mvn	r3, #-2147483648	; 0x80000000
   129a4:	add	r2, r2, #1
   129a8:	add	r1, sp, #44	; 0x2c
   129ac:	mov	r0, r6
   129b0:	bl	13834 <abort@plt+0x2afc>
   129b4:	mov	r6, r0
   129b8:	ldr	r3, [pc, #300]	; 12aec <abort@plt+0x1db4>
   129bc:	str	r0, [r3]
   129c0:	ldr	r7, [pc, #292]	; 12aec <abort@plt+0x1db4>
   129c4:	ldr	r0, [r7, #4]
   129c8:	ldr	r2, [sp, #44]	; 0x2c
   129cc:	sub	r2, r2, r0
   129d0:	lsl	r2, r2, #3
   129d4:	mov	r1, #0
   129d8:	add	r0, r6, r0, lsl #3
   129dc:	bl	10ca8 <memset@plt>
   129e0:	ldr	r3, [sp, #44]	; 0x2c
   129e4:	str	r3, [r7, #4]
   129e8:	add	fp, r6, r5, lsl #3
   129ec:	ldr	r8, [r6, r5, lsl #3]
   129f0:	ldr	r7, [fp, #4]
   129f4:	ldr	r9, [r4, #4]
   129f8:	orr	r9, r9, #1
   129fc:	add	sl, r4, #8
   12a00:	ldr	r3, [r4, #44]	; 0x2c
   12a04:	str	r3, [sp, #16]
   12a08:	ldr	r3, [r4, #40]	; 0x28
   12a0c:	str	r3, [sp, #12]
   12a10:	str	sl, [sp, #8]
   12a14:	str	r9, [sp, #4]
   12a18:	ldr	r3, [r4]
   12a1c:	str	r3, [sp]
   12a20:	ldr	r3, [sp, #28]
   12a24:	ldr	r2, [sp, #24]
   12a28:	mov	r1, r8
   12a2c:	mov	r0, r7
   12a30:	bl	117c0 <abort@plt+0xa88>
   12a34:	cmp	r8, r0
   12a38:	bhi	12a98 <abort@plt+0x1d60>
   12a3c:	add	r8, r0, #1
   12a40:	str	r8, [r6, r5, lsl #3]
   12a44:	ldr	r3, [pc, #164]	; 12af0 <abort@plt+0x1db8>
   12a48:	cmp	r7, r3
   12a4c:	beq	12a58 <abort@plt+0x1d20>
   12a50:	mov	r0, r7
   12a54:	bl	13f80 <abort@plt+0x3248>
   12a58:	mov	r0, r8
   12a5c:	bl	136b0 <abort@plt+0x2978>
   12a60:	mov	r7, r0
   12a64:	str	r0, [fp, #4]
   12a68:	ldr	r3, [r4, #44]	; 0x2c
   12a6c:	str	r3, [sp, #16]
   12a70:	ldr	r3, [r4, #40]	; 0x28
   12a74:	str	r3, [sp, #12]
   12a78:	str	sl, [sp, #8]
   12a7c:	str	r9, [sp, #4]
   12a80:	ldr	r3, [r4]
   12a84:	str	r3, [sp]
   12a88:	ldr	r3, [sp, #28]
   12a8c:	ldr	r2, [sp, #24]
   12a90:	mov	r1, r8
   12a94:	bl	117c0 <abort@plt+0xa88>
   12a98:	ldr	r3, [sp, #32]
   12a9c:	ldr	r2, [sp, #36]	; 0x24
   12aa0:	str	r2, [r3]
   12aa4:	mov	r0, r7
   12aa8:	add	sp, sp, #52	; 0x34
   12aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ab0:	bl	10d38 <abort@plt>
   12ab4:	sub	r2, r5, r2
   12ab8:	mov	r3, #8
   12abc:	str	r3, [sp]
   12ac0:	mvn	r3, #-2147483648	; 0x80000000
   12ac4:	add	r2, r2, #1
   12ac8:	add	r1, sp, #44	; 0x2c
   12acc:	mov	r0, #0
   12ad0:	bl	13834 <abort@plt+0x2afc>
   12ad4:	mov	r6, r0
   12ad8:	ldr	r3, [pc, #12]	; 12aec <abort@plt+0x1db4>
   12adc:	str	r0, [r3], #8
   12ae0:	ldm	r3, {r0, r1}
   12ae4:	stm	r6, {r0, r1}
   12ae8:	b	129c0 <abort@plt+0x1c88>
   12aec:	ldrdeq	r6, [r2], -r4
   12af0:	andeq	r6, r2, r0, asr #2
   12af4:	push	{r4, r5, r6, lr}
   12af8:	mov	r4, r0
   12afc:	bl	10c90 <__errno_location@plt>
   12b00:	mov	r5, r0
   12b04:	ldr	r6, [r0]
   12b08:	cmp	r4, #0
   12b0c:	ldr	r3, [pc, #20]	; 12b28 <abort@plt+0x1df0>
   12b10:	moveq	r4, r3
   12b14:	mov	r1, #48	; 0x30
   12b18:	mov	r0, r4
   12b1c:	bl	13b9c <abort@plt+0x2e64>
   12b20:	str	r6, [r5]
   12b24:	pop	{r4, r5, r6, pc}
   12b28:	andeq	r6, r2, r0, asr #4
   12b2c:	subs	r3, r0, #0
   12b30:	ldr	r2, [pc, #8]	; 12b40 <abort@plt+0x1e08>
   12b34:	moveq	r3, r2
   12b38:	ldr	r0, [r3]
   12b3c:	bx	lr
   12b40:	andeq	r6, r2, r0, asr #4
   12b44:	subs	r3, r0, #0
   12b48:	ldr	r2, [pc, #8]	; 12b58 <abort@plt+0x1e20>
   12b4c:	moveq	r3, r2
   12b50:	str	r1, [r3]
   12b54:	bx	lr
   12b58:	andeq	r6, r2, r0, asr #4
   12b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   12b60:	subs	r3, r0, #0
   12b64:	ldr	r0, [pc, #44]	; 12b98 <abort@plt+0x1e60>
   12b68:	moveq	r3, r0
   12b6c:	add	r3, r3, #8
   12b70:	lsr	lr, r1, #5
   12b74:	and	r1, r1, #31
   12b78:	ldr	ip, [r3, lr, lsl #2]
   12b7c:	lsr	r0, ip, r1
   12b80:	eor	r2, r2, r0
   12b84:	and	r2, r2, #1
   12b88:	eor	r1, ip, r2, lsl r1
   12b8c:	str	r1, [r3, lr, lsl #2]
   12b90:	and	r0, r0, #1
   12b94:	pop	{pc}		; (ldr pc, [sp], #4)
   12b98:	andeq	r6, r2, r0, asr #4
   12b9c:	subs	r3, r0, #0
   12ba0:	ldr	r2, [pc, #12]	; 12bb4 <abort@plt+0x1e7c>
   12ba4:	moveq	r3, r2
   12ba8:	ldr	r0, [r3, #4]
   12bac:	str	r1, [r3, #4]
   12bb0:	bx	lr
   12bb4:	andeq	r6, r2, r0, asr #4
   12bb8:	subs	r3, r0, #0
   12bbc:	ldr	r0, [pc, #40]	; 12bec <abort@plt+0x1eb4>
   12bc0:	moveq	r3, r0
   12bc4:	mov	r0, #10
   12bc8:	str	r0, [r3]
   12bcc:	cmp	r2, #0
   12bd0:	cmpne	r1, #0
   12bd4:	beq	12be4 <abort@plt+0x1eac>
   12bd8:	str	r1, [r3, #40]	; 0x28
   12bdc:	str	r2, [r3, #44]	; 0x2c
   12be0:	bx	lr
   12be4:	push	{r4, lr}
   12be8:	bl	10d38 <abort@plt>
   12bec:	andeq	r6, r2, r0, asr #4
   12bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bf4:	sub	sp, sp, #24
   12bf8:	mov	r7, r0
   12bfc:	mov	r8, r1
   12c00:	mov	r9, r2
   12c04:	mov	sl, r3
   12c08:	ldr	r4, [sp, #56]	; 0x38
   12c0c:	cmp	r4, #0
   12c10:	ldr	r3, [pc, #84]	; 12c6c <abort@plt+0x1f34>
   12c14:	moveq	r4, r3
   12c18:	bl	10c90 <__errno_location@plt>
   12c1c:	mov	r5, r0
   12c20:	ldr	r6, [r0]
   12c24:	ldr	r3, [r4, #44]	; 0x2c
   12c28:	str	r3, [sp, #16]
   12c2c:	ldr	r3, [r4, #40]	; 0x28
   12c30:	str	r3, [sp, #12]
   12c34:	add	r3, r4, #8
   12c38:	str	r3, [sp, #8]
   12c3c:	ldr	r3, [r4, #4]
   12c40:	str	r3, [sp, #4]
   12c44:	ldr	r3, [r4]
   12c48:	str	r3, [sp]
   12c4c:	mov	r3, sl
   12c50:	mov	r2, r9
   12c54:	mov	r1, r8
   12c58:	mov	r0, r7
   12c5c:	bl	117c0 <abort@plt+0xa88>
   12c60:	str	r6, [r5]
   12c64:	add	sp, sp, #24
   12c68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c6c:	andeq	r6, r2, r0, asr #4
   12c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c74:	sub	sp, sp, #44	; 0x2c
   12c78:	str	r0, [sp, #28]
   12c7c:	str	r1, [sp, #32]
   12c80:	mov	r6, r2
   12c84:	subs	r4, r3, #0
   12c88:	ldr	r3, [pc, #172]	; 12d3c <abort@plt+0x2004>
   12c8c:	moveq	r4, r3
   12c90:	bl	10c90 <__errno_location@plt>
   12c94:	mov	r7, r0
   12c98:	ldr	fp, [r0]
   12c9c:	ldr	r5, [r4, #4]
   12ca0:	cmp	r6, #0
   12ca4:	orreq	r5, r5, #1
   12ca8:	add	r9, r4, #8
   12cac:	ldr	r3, [r4, #44]	; 0x2c
   12cb0:	str	r3, [sp, #16]
   12cb4:	ldr	r3, [r4, #40]	; 0x28
   12cb8:	str	r3, [sp, #12]
   12cbc:	str	r9, [sp, #8]
   12cc0:	str	r5, [sp, #4]
   12cc4:	ldr	r3, [r4]
   12cc8:	str	r3, [sp]
   12ccc:	ldr	r3, [sp, #32]
   12cd0:	ldr	r2, [sp, #28]
   12cd4:	mov	r1, #0
   12cd8:	mov	r0, r1
   12cdc:	bl	117c0 <abort@plt+0xa88>
   12ce0:	mov	sl, r0
   12ce4:	add	r8, r0, #1
   12ce8:	mov	r0, r8
   12cec:	bl	136b0 <abort@plt+0x2978>
   12cf0:	str	r0, [sp, #36]	; 0x24
   12cf4:	ldr	r3, [r4, #44]	; 0x2c
   12cf8:	str	r3, [sp, #16]
   12cfc:	ldr	r3, [r4, #40]	; 0x28
   12d00:	str	r3, [sp, #12]
   12d04:	str	r9, [sp, #8]
   12d08:	str	r5, [sp, #4]
   12d0c:	ldr	r3, [r4]
   12d10:	str	r3, [sp]
   12d14:	ldr	r3, [sp, #32]
   12d18:	ldr	r2, [sp, #28]
   12d1c:	mov	r1, r8
   12d20:	bl	117c0 <abort@plt+0xa88>
   12d24:	str	fp, [r7]
   12d28:	cmp	r6, #0
   12d2c:	strne	sl, [r6]
   12d30:	ldr	r0, [sp, #36]	; 0x24
   12d34:	add	sp, sp, #44	; 0x2c
   12d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d3c:	andeq	r6, r2, r0, asr #4
   12d40:	push	{r4, lr}
   12d44:	mov	r3, r2
   12d48:	mov	r2, #0
   12d4c:	bl	12c70 <abort@plt+0x1f38>
   12d50:	pop	{r4, pc}
   12d54:	push	{r4, r5, r6, r7, r8, lr}
   12d58:	ldr	r3, [pc, #140]	; 12dec <abort@plt+0x20b4>
   12d5c:	ldr	r7, [r3]
   12d60:	ldr	r3, [r3, #4]
   12d64:	cmp	r3, #1
   12d68:	ble	12d94 <abort@plt+0x205c>
   12d6c:	mov	r5, r7
   12d70:	mov	r4, #1
   12d74:	ldr	r6, [pc, #112]	; 12dec <abort@plt+0x20b4>
   12d78:	ldr	r0, [r5, #12]
   12d7c:	bl	13f80 <abort@plt+0x3248>
   12d80:	add	r4, r4, #1
   12d84:	add	r5, r5, #8
   12d88:	ldr	r3, [r6, #4]
   12d8c:	cmp	r3, r4
   12d90:	bgt	12d78 <abort@plt+0x2040>
   12d94:	ldr	r0, [r7, #4]
   12d98:	ldr	r3, [pc, #80]	; 12df0 <abort@plt+0x20b8>
   12d9c:	cmp	r0, r3
   12da0:	beq	12dbc <abort@plt+0x2084>
   12da4:	bl	13f80 <abort@plt+0x3248>
   12da8:	ldr	r3, [pc, #60]	; 12dec <abort@plt+0x20b4>
   12dac:	mov	r2, #256	; 0x100
   12db0:	str	r2, [r3, #8]
   12db4:	ldr	r2, [pc, #52]	; 12df0 <abort@plt+0x20b8>
   12db8:	str	r2, [r3, #12]
   12dbc:	ldr	r3, [pc, #48]	; 12df4 <abort@plt+0x20bc>
   12dc0:	cmp	r7, r3
   12dc4:	beq	12ddc <abort@plt+0x20a4>
   12dc8:	mov	r0, r7
   12dcc:	bl	13f80 <abort@plt+0x3248>
   12dd0:	ldr	r3, [pc, #20]	; 12dec <abort@plt+0x20b4>
   12dd4:	add	r2, r3, #8
   12dd8:	str	r2, [r3]
   12ddc:	mov	r2, #1
   12de0:	ldr	r3, [pc, #4]	; 12dec <abort@plt+0x20b4>
   12de4:	str	r2, [r3, #4]
   12de8:	pop	{r4, r5, r6, r7, r8, pc}
   12dec:	ldrdeq	r6, [r2], -r4
   12df0:	andeq	r6, r2, r0, asr #2
   12df4:	ldrdeq	r6, [r2], -ip
   12df8:	push	{r4, lr}
   12dfc:	ldr	r3, [pc, #8]	; 12e0c <abort@plt+0x20d4>
   12e00:	mvn	r2, #0
   12e04:	bl	12930 <abort@plt+0x1bf8>
   12e08:	pop	{r4, pc}
   12e0c:	andeq	r6, r2, r0, asr #4
   12e10:	push	{r4, lr}
   12e14:	ldr	r3, [pc, #4]	; 12e20 <abort@plt+0x20e8>
   12e18:	bl	12930 <abort@plt+0x1bf8>
   12e1c:	pop	{r4, pc}
   12e20:	andeq	r6, r2, r0, asr #4
   12e24:	push	{r4, lr}
   12e28:	mov	r1, r0
   12e2c:	mov	r0, #0
   12e30:	bl	12df8 <abort@plt+0x20c0>
   12e34:	pop	{r4, pc}
   12e38:	push	{r4, lr}
   12e3c:	mov	r2, r1
   12e40:	mov	r1, r0
   12e44:	mov	r0, #0
   12e48:	bl	12e10 <abort@plt+0x20d8>
   12e4c:	pop	{r4, pc}
   12e50:	push	{r4, r5, lr}
   12e54:	sub	sp, sp, #52	; 0x34
   12e58:	mov	r4, r0
   12e5c:	mov	r5, r2
   12e60:	mov	r0, sp
   12e64:	bl	11658 <abort@plt+0x920>
   12e68:	mov	r3, sp
   12e6c:	mvn	r2, #0
   12e70:	mov	r1, r5
   12e74:	mov	r0, r4
   12e78:	bl	12930 <abort@plt+0x1bf8>
   12e7c:	add	sp, sp, #52	; 0x34
   12e80:	pop	{r4, r5, pc}
   12e84:	push	{r4, r5, r6, lr}
   12e88:	sub	sp, sp, #48	; 0x30
   12e8c:	mov	r4, r0
   12e90:	mov	r5, r2
   12e94:	mov	r6, r3
   12e98:	mov	r0, sp
   12e9c:	bl	11658 <abort@plt+0x920>
   12ea0:	mov	r3, sp
   12ea4:	mov	r2, r6
   12ea8:	mov	r1, r5
   12eac:	mov	r0, r4
   12eb0:	bl	12930 <abort@plt+0x1bf8>
   12eb4:	add	sp, sp, #48	; 0x30
   12eb8:	pop	{r4, r5, r6, pc}
   12ebc:	push	{r4, lr}
   12ec0:	mov	r2, r1
   12ec4:	mov	r1, r0
   12ec8:	mov	r0, #0
   12ecc:	bl	12e50 <abort@plt+0x2118>
   12ed0:	pop	{r4, pc}
   12ed4:	push	{r4, lr}
   12ed8:	mov	r3, r2
   12edc:	mov	r2, r1
   12ee0:	mov	r1, r0
   12ee4:	mov	r0, #0
   12ee8:	bl	12e84 <abort@plt+0x214c>
   12eec:	pop	{r4, pc}
   12ef0:	push	{r4, r5, r6, lr}
   12ef4:	sub	sp, sp, #48	; 0x30
   12ef8:	mov	r4, r0
   12efc:	mov	r5, r1
   12f00:	mov	r6, r2
   12f04:	mov	ip, sp
   12f08:	ldr	lr, [pc, #64]	; 12f50 <abort@plt+0x2218>
   12f0c:	ldm	lr!, {r0, r1, r2, r3}
   12f10:	stmia	ip!, {r0, r1, r2, r3}
   12f14:	ldm	lr!, {r0, r1, r2, r3}
   12f18:	stmia	ip!, {r0, r1, r2, r3}
   12f1c:	ldm	lr, {r0, r1, r2, r3}
   12f20:	stm	ip, {r0, r1, r2, r3}
   12f24:	mov	r2, #1
   12f28:	mov	r1, r6
   12f2c:	mov	r0, sp
   12f30:	bl	12b5c <abort@plt+0x1e24>
   12f34:	mov	r3, sp
   12f38:	mov	r2, r5
   12f3c:	mov	r1, r4
   12f40:	mov	r0, #0
   12f44:	bl	12930 <abort@plt+0x1bf8>
   12f48:	add	sp, sp, #48	; 0x30
   12f4c:	pop	{r4, r5, r6, pc}
   12f50:	andeq	r6, r2, r0, asr #4
   12f54:	push	{r4, lr}
   12f58:	mov	r2, r1
   12f5c:	mvn	r1, #0
   12f60:	bl	12ef0 <abort@plt+0x21b8>
   12f64:	pop	{r4, pc}
   12f68:	push	{r4, lr}
   12f6c:	mov	r1, #58	; 0x3a
   12f70:	bl	12f54 <abort@plt+0x221c>
   12f74:	pop	{r4, pc}
   12f78:	push	{r4, lr}
   12f7c:	mov	r2, #58	; 0x3a
   12f80:	bl	12ef0 <abort@plt+0x21b8>
   12f84:	pop	{r4, pc}
   12f88:	push	{r4, r5, lr}
   12f8c:	sub	sp, sp, #100	; 0x64
   12f90:	mov	r4, r0
   12f94:	mov	r5, r2
   12f98:	mov	r0, sp
   12f9c:	bl	11658 <abort@plt+0x920>
   12fa0:	add	lr, sp, #48	; 0x30
   12fa4:	mov	ip, sp
   12fa8:	ldm	ip!, {r0, r1, r2, r3}
   12fac:	stmia	lr!, {r0, r1, r2, r3}
   12fb0:	ldm	ip!, {r0, r1, r2, r3}
   12fb4:	stmia	lr!, {r0, r1, r2, r3}
   12fb8:	ldm	ip, {r0, r1, r2, r3}
   12fbc:	stm	lr, {r0, r1, r2, r3}
   12fc0:	mov	r2, #1
   12fc4:	mov	r1, #58	; 0x3a
   12fc8:	add	r0, sp, #48	; 0x30
   12fcc:	bl	12b5c <abort@plt+0x1e24>
   12fd0:	add	r3, sp, #48	; 0x30
   12fd4:	mvn	r2, #0
   12fd8:	mov	r1, r5
   12fdc:	mov	r0, r4
   12fe0:	bl	12930 <abort@plt+0x1bf8>
   12fe4:	add	sp, sp, #100	; 0x64
   12fe8:	pop	{r4, r5, pc}
   12fec:	push	{r4, r5, r6, r7, lr}
   12ff0:	sub	sp, sp, #52	; 0x34
   12ff4:	mov	r4, r0
   12ff8:	mov	r6, r1
   12ffc:	mov	r7, r2
   13000:	mov	r5, r3
   13004:	mov	ip, sp
   13008:	ldr	lr, [pc, #64]	; 13050 <abort@plt+0x2318>
   1300c:	ldm	lr!, {r0, r1, r2, r3}
   13010:	stmia	ip!, {r0, r1, r2, r3}
   13014:	ldm	lr!, {r0, r1, r2, r3}
   13018:	stmia	ip!, {r0, r1, r2, r3}
   1301c:	ldm	lr, {r0, r1, r2, r3}
   13020:	stm	ip, {r0, r1, r2, r3}
   13024:	mov	r2, r7
   13028:	mov	r1, r6
   1302c:	mov	r0, sp
   13030:	bl	12bb8 <abort@plt+0x1e80>
   13034:	mov	r3, sp
   13038:	ldr	r2, [sp, #72]	; 0x48
   1303c:	mov	r1, r5
   13040:	mov	r0, r4
   13044:	bl	12930 <abort@plt+0x1bf8>
   13048:	add	sp, sp, #52	; 0x34
   1304c:	pop	{r4, r5, r6, r7, pc}
   13050:	andeq	r6, r2, r0, asr #4
   13054:	push	{lr}		; (str lr, [sp, #-4]!)
   13058:	sub	sp, sp, #12
   1305c:	mvn	ip, #0
   13060:	str	ip, [sp]
   13064:	bl	12fec <abort@plt+0x22b4>
   13068:	add	sp, sp, #12
   1306c:	pop	{pc}		; (ldr pc, [sp], #4)
   13070:	push	{r4, lr}
   13074:	mov	r3, r2
   13078:	mov	r2, r1
   1307c:	mov	r1, r0
   13080:	mov	r0, #0
   13084:	bl	13054 <abort@plt+0x231c>
   13088:	pop	{r4, pc}
   1308c:	push	{lr}		; (str lr, [sp, #-4]!)
   13090:	sub	sp, sp, #12
   13094:	str	r3, [sp]
   13098:	mov	r3, r2
   1309c:	mov	r2, r1
   130a0:	mov	r1, r0
   130a4:	mov	r0, #0
   130a8:	bl	12fec <abort@plt+0x22b4>
   130ac:	add	sp, sp, #12
   130b0:	pop	{pc}		; (ldr pc, [sp], #4)
   130b4:	push	{r4, lr}
   130b8:	ldr	r3, [pc, #4]	; 130c4 <abort@plt+0x238c>
   130bc:	bl	12930 <abort@plt+0x1bf8>
   130c0:	pop	{r4, pc}
   130c4:	andeq	r6, r2, r4, ror #1
   130c8:	push	{r4, lr}
   130cc:	mov	r2, r1
   130d0:	mov	r1, r0
   130d4:	mov	r0, #0
   130d8:	bl	130b4 <abort@plt+0x237c>
   130dc:	pop	{r4, pc}
   130e0:	push	{r4, lr}
   130e4:	mvn	r2, #0
   130e8:	bl	130b4 <abort@plt+0x237c>
   130ec:	pop	{r4, pc}
   130f0:	push	{r4, lr}
   130f4:	mov	r1, r0
   130f8:	mov	r0, #0
   130fc:	bl	130e0 <abort@plt+0x23a8>
   13100:	pop	{r4, pc}
   13104:	push	{r4, r5, r6, lr}
   13108:	sub	sp, sp, #32
   1310c:	mov	r4, r0
   13110:	ldr	r5, [sp, #48]	; 0x30
   13114:	ldr	r6, [sp, #52]	; 0x34
   13118:	cmp	r1, #0
   1311c:	beq	131d4 <abort@plt+0x249c>
   13120:	str	r3, [sp, #4]
   13124:	str	r2, [sp]
   13128:	mov	r3, r1
   1312c:	ldr	r2, [pc, #940]	; 134e0 <abort@plt+0x27a8>
   13130:	mov	r1, #1
   13134:	bl	10ccc <__fprintf_chk@plt>
   13138:	mov	r2, #5
   1313c:	ldr	r1, [pc, #928]	; 134e4 <abort@plt+0x27ac>
   13140:	mov	r0, #0
   13144:	bl	10bb8 <dcgettext@plt>
   13148:	ldr	r3, [pc, #920]	; 134e8 <abort@plt+0x27b0>
   1314c:	str	r3, [sp]
   13150:	mov	r3, r0
   13154:	ldr	r2, [pc, #912]	; 134ec <abort@plt+0x27b4>
   13158:	mov	r1, #1
   1315c:	mov	r0, r4
   13160:	bl	10ccc <__fprintf_chk@plt>
   13164:	mov	r1, r4
   13168:	mov	r0, #10
   1316c:	bl	10bac <fputc_unlocked@plt>
   13170:	mov	r2, #5
   13174:	ldr	r1, [pc, #884]	; 134f0 <abort@plt+0x27b8>
   13178:	mov	r0, #0
   1317c:	bl	10bb8 <dcgettext@plt>
   13180:	ldr	r3, [pc, #876]	; 134f4 <abort@plt+0x27bc>
   13184:	mov	r2, r0
   13188:	mov	r1, #1
   1318c:	mov	r0, r4
   13190:	bl	10ccc <__fprintf_chk@plt>
   13194:	mov	r1, r4
   13198:	mov	r0, #10
   1319c:	bl	10bac <fputc_unlocked@plt>
   131a0:	cmp	r6, #9
   131a4:	ldrls	pc, [pc, r6, lsl #2]
   131a8:	b	13478 <abort@plt+0x2740>
   131ac:	andeq	r3, r1, r0, lsl r2
   131b0:	andeq	r3, r1, ip, ror #3
   131b4:	andeq	r3, r1, r8, lsl r2
   131b8:	andeq	r3, r1, r8, asr #4
   131bc:	andeq	r3, r1, r0, lsl #5
   131c0:	andeq	r3, r1, r0, asr #5
   131c4:	andeq	r3, r1, r8, lsl #6
   131c8:	andeq	r3, r1, r8, asr r3
   131cc:			; <UNDEFINED> instruction: 0x000133b0
   131d0:	andeq	r3, r1, r0, lsl r4
   131d4:	str	r3, [sp]
   131d8:	mov	r3, r2
   131dc:	ldr	r2, [pc, #788]	; 134f8 <abort@plt+0x27c0>
   131e0:	mov	r1, #1
   131e4:	bl	10ccc <__fprintf_chk@plt>
   131e8:	b	13138 <abort@plt+0x2400>
   131ec:	mov	r2, #5
   131f0:	ldr	r1, [pc, #772]	; 134fc <abort@plt+0x27c4>
   131f4:	mov	r0, #0
   131f8:	bl	10bb8 <dcgettext@plt>
   131fc:	ldr	r3, [r5]
   13200:	mov	r2, r0
   13204:	mov	r1, #1
   13208:	mov	r0, r4
   1320c:	bl	10ccc <__fprintf_chk@plt>
   13210:	add	sp, sp, #32
   13214:	pop	{r4, r5, r6, pc}
   13218:	mov	r2, #5
   1321c:	ldr	r1, [pc, #732]	; 13500 <abort@plt+0x27c8>
   13220:	mov	r0, #0
   13224:	bl	10bb8 <dcgettext@plt>
   13228:	ldr	r3, [r5]
   1322c:	ldr	r2, [r5, #4]
   13230:	str	r2, [sp]
   13234:	mov	r2, r0
   13238:	mov	r1, #1
   1323c:	mov	r0, r4
   13240:	bl	10ccc <__fprintf_chk@plt>
   13244:	b	13210 <abort@plt+0x24d8>
   13248:	mov	r2, #5
   1324c:	ldr	r1, [pc, #688]	; 13504 <abort@plt+0x27cc>
   13250:	mov	r0, #0
   13254:	bl	10bb8 <dcgettext@plt>
   13258:	ldr	r3, [r5]
   1325c:	ldr	r2, [r5, #8]
   13260:	str	r2, [sp, #4]
   13264:	ldr	r2, [r5, #4]
   13268:	str	r2, [sp]
   1326c:	mov	r2, r0
   13270:	mov	r1, #1
   13274:	mov	r0, r4
   13278:	bl	10ccc <__fprintf_chk@plt>
   1327c:	b	13210 <abort@plt+0x24d8>
   13280:	mov	r2, #5
   13284:	ldr	r1, [pc, #636]	; 13508 <abort@plt+0x27d0>
   13288:	mov	r0, #0
   1328c:	bl	10bb8 <dcgettext@plt>
   13290:	ldr	r3, [r5]
   13294:	ldr	r2, [r5, #12]
   13298:	str	r2, [sp, #8]
   1329c:	ldr	r2, [r5, #8]
   132a0:	str	r2, [sp, #4]
   132a4:	ldr	r2, [r5, #4]
   132a8:	str	r2, [sp]
   132ac:	mov	r2, r0
   132b0:	mov	r1, #1
   132b4:	mov	r0, r4
   132b8:	bl	10ccc <__fprintf_chk@plt>
   132bc:	b	13210 <abort@plt+0x24d8>
   132c0:	mov	r2, #5
   132c4:	ldr	r1, [pc, #576]	; 1350c <abort@plt+0x27d4>
   132c8:	mov	r0, #0
   132cc:	bl	10bb8 <dcgettext@plt>
   132d0:	ldr	r3, [r5]
   132d4:	ldr	r2, [r5, #16]
   132d8:	str	r2, [sp, #12]
   132dc:	ldr	r2, [r5, #12]
   132e0:	str	r2, [sp, #8]
   132e4:	ldr	r2, [r5, #8]
   132e8:	str	r2, [sp, #4]
   132ec:	ldr	r2, [r5, #4]
   132f0:	str	r2, [sp]
   132f4:	mov	r2, r0
   132f8:	mov	r1, #1
   132fc:	mov	r0, r4
   13300:	bl	10ccc <__fprintf_chk@plt>
   13304:	b	13210 <abort@plt+0x24d8>
   13308:	mov	r2, #5
   1330c:	ldr	r1, [pc, #508]	; 13510 <abort@plt+0x27d8>
   13310:	mov	r0, #0
   13314:	bl	10bb8 <dcgettext@plt>
   13318:	ldr	r3, [r5]
   1331c:	ldr	r2, [r5, #20]
   13320:	str	r2, [sp, #16]
   13324:	ldr	r2, [r5, #16]
   13328:	str	r2, [sp, #12]
   1332c:	ldr	r2, [r5, #12]
   13330:	str	r2, [sp, #8]
   13334:	ldr	r2, [r5, #8]
   13338:	str	r2, [sp, #4]
   1333c:	ldr	r2, [r5, #4]
   13340:	str	r2, [sp]
   13344:	mov	r2, r0
   13348:	mov	r1, #1
   1334c:	mov	r0, r4
   13350:	bl	10ccc <__fprintf_chk@plt>
   13354:	b	13210 <abort@plt+0x24d8>
   13358:	mov	r2, #5
   1335c:	ldr	r1, [pc, #432]	; 13514 <abort@plt+0x27dc>
   13360:	mov	r0, #0
   13364:	bl	10bb8 <dcgettext@plt>
   13368:	ldr	r3, [r5]
   1336c:	ldr	r2, [r5, #24]
   13370:	str	r2, [sp, #20]
   13374:	ldr	r2, [r5, #20]
   13378:	str	r2, [sp, #16]
   1337c:	ldr	r2, [r5, #16]
   13380:	str	r2, [sp, #12]
   13384:	ldr	r2, [r5, #12]
   13388:	str	r2, [sp, #8]
   1338c:	ldr	r2, [r5, #8]
   13390:	str	r2, [sp, #4]
   13394:	ldr	r2, [r5, #4]
   13398:	str	r2, [sp]
   1339c:	mov	r2, r0
   133a0:	mov	r1, #1
   133a4:	mov	r0, r4
   133a8:	bl	10ccc <__fprintf_chk@plt>
   133ac:	b	13210 <abort@plt+0x24d8>
   133b0:	mov	r2, #5
   133b4:	ldr	r1, [pc, #348]	; 13518 <abort@plt+0x27e0>
   133b8:	mov	r0, #0
   133bc:	bl	10bb8 <dcgettext@plt>
   133c0:	ldr	r3, [r5]
   133c4:	ldr	r2, [r5, #28]
   133c8:	str	r2, [sp, #24]
   133cc:	ldr	r2, [r5, #24]
   133d0:	str	r2, [sp, #20]
   133d4:	ldr	r2, [r5, #20]
   133d8:	str	r2, [sp, #16]
   133dc:	ldr	r2, [r5, #16]
   133e0:	str	r2, [sp, #12]
   133e4:	ldr	r2, [r5, #12]
   133e8:	str	r2, [sp, #8]
   133ec:	ldr	r2, [r5, #8]
   133f0:	str	r2, [sp, #4]
   133f4:	ldr	r2, [r5, #4]
   133f8:	str	r2, [sp]
   133fc:	mov	r2, r0
   13400:	mov	r1, #1
   13404:	mov	r0, r4
   13408:	bl	10ccc <__fprintf_chk@plt>
   1340c:	b	13210 <abort@plt+0x24d8>
   13410:	mov	r2, #5
   13414:	ldr	r1, [pc, #256]	; 1351c <abort@plt+0x27e4>
   13418:	mov	r0, #0
   1341c:	bl	10bb8 <dcgettext@plt>
   13420:	ldr	r3, [r5]
   13424:	ldr	r2, [r5, #32]
   13428:	str	r2, [sp, #28]
   1342c:	ldr	r2, [r5, #28]
   13430:	str	r2, [sp, #24]
   13434:	ldr	r2, [r5, #24]
   13438:	str	r2, [sp, #20]
   1343c:	ldr	r2, [r5, #20]
   13440:	str	r2, [sp, #16]
   13444:	ldr	r2, [r5, #16]
   13448:	str	r2, [sp, #12]
   1344c:	ldr	r2, [r5, #12]
   13450:	str	r2, [sp, #8]
   13454:	ldr	r2, [r5, #8]
   13458:	str	r2, [sp, #4]
   1345c:	ldr	r2, [r5, #4]
   13460:	str	r2, [sp]
   13464:	mov	r2, r0
   13468:	mov	r1, #1
   1346c:	mov	r0, r4
   13470:	bl	10ccc <__fprintf_chk@plt>
   13474:	b	13210 <abort@plt+0x24d8>
   13478:	mov	r2, #5
   1347c:	ldr	r1, [pc, #156]	; 13520 <abort@plt+0x27e8>
   13480:	mov	r0, #0
   13484:	bl	10bb8 <dcgettext@plt>
   13488:	ldr	r3, [r5]
   1348c:	ldr	r2, [r5, #32]
   13490:	str	r2, [sp, #28]
   13494:	ldr	r2, [r5, #28]
   13498:	str	r2, [sp, #24]
   1349c:	ldr	r2, [r5, #24]
   134a0:	str	r2, [sp, #20]
   134a4:	ldr	r2, [r5, #20]
   134a8:	str	r2, [sp, #16]
   134ac:	ldr	r2, [r5, #16]
   134b0:	str	r2, [sp, #12]
   134b4:	ldr	r2, [r5, #12]
   134b8:	str	r2, [sp, #8]
   134bc:	ldr	r2, [r5, #8]
   134c0:	str	r2, [sp, #4]
   134c4:	ldr	r2, [r5, #4]
   134c8:	str	r2, [sp]
   134cc:	mov	r2, r0
   134d0:	mov	r1, #1
   134d4:	mov	r0, r4
   134d8:	bl	10ccc <__fprintf_chk@plt>
   134dc:	b	13210 <abort@plt+0x24d8>
   134e0:	andeq	r4, r1, ip, asr #25
   134e4:	andeq	r4, r1, r0, ror #25
   134e8:	andeq	r0, r0, r6, ror #15
   134ec:			; <UNDEFINED> instruction: 0x00014fb8
   134f0:	andeq	r4, r1, r4, ror #25
   134f4:	muleq	r1, r0, sp
   134f8:	ldrdeq	r4, [r1], -r8
   134fc:			; <UNDEFINED> instruction: 0x00014db4
   13500:	andeq	r4, r1, r4, asr #27
   13504:	ldrdeq	r4, [r1], -ip
   13508:	strdeq	r4, [r1], -r8
   1350c:	andeq	r4, r1, r8, lsl lr
   13510:	andeq	r4, r1, ip, lsr lr
   13514:	andeq	r4, r1, r4, ror #28
   13518:	muleq	r1, r0, lr
   1351c:	andeq	r4, r1, r0, asr #29
   13520:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13524:	push	{r4, r5, lr}
   13528:	sub	sp, sp, #12
   1352c:	ldr	r5, [sp, #24]
   13530:	ldr	ip, [r5]
   13534:	cmp	ip, #0
   13538:	beq	13568 <abort@plt+0x2830>
   1353c:	mov	lr, r5
   13540:	mov	ip, #0
   13544:	add	ip, ip, #1
   13548:	ldr	r4, [lr, #4]!
   1354c:	cmp	r4, #0
   13550:	bne	13544 <abort@plt+0x280c>
   13554:	str	ip, [sp, #4]
   13558:	str	r5, [sp]
   1355c:	bl	13104 <abort@plt+0x23cc>
   13560:	add	sp, sp, #12
   13564:	pop	{r4, r5, pc}
   13568:	mov	ip, #0
   1356c:	b	13554 <abort@plt+0x281c>
   13570:	push	{r4, r5, lr}
   13574:	sub	sp, sp, #52	; 0x34
   13578:	ldr	r4, [sp, #64]	; 0x40
   1357c:	sub	r4, r4, #4
   13580:	add	r5, sp, #4
   13584:	mov	ip, #0
   13588:	ldr	lr, [r4, #4]!
   1358c:	str	lr, [r5, #4]!
   13590:	cmp	lr, #0
   13594:	beq	135a4 <abort@plt+0x286c>
   13598:	add	ip, ip, #1
   1359c:	cmp	ip, #10
   135a0:	bne	13588 <abort@plt+0x2850>
   135a4:	str	ip, [sp, #4]
   135a8:	add	ip, sp, #8
   135ac:	str	ip, [sp]
   135b0:	bl	13104 <abort@plt+0x23cc>
   135b4:	add	sp, sp, #52	; 0x34
   135b8:	pop	{r4, r5, pc}
   135bc:	push	{r3}		; (str r3, [sp, #-4]!)
   135c0:	push	{lr}		; (str lr, [sp, #-4]!)
   135c4:	sub	sp, sp, #16
   135c8:	add	r3, sp, #24
   135cc:	str	r3, [sp, #12]
   135d0:	str	r3, [sp]
   135d4:	ldr	r3, [sp, #20]
   135d8:	bl	13570 <abort@plt+0x2838>
   135dc:	add	sp, sp, #16
   135e0:	pop	{lr}		; (ldr lr, [sp], #4)
   135e4:	add	sp, sp, #4
   135e8:	bx	lr
   135ec:	push	{r4, lr}
   135f0:	ldr	r3, [pc, #112]	; 13668 <abort@plt+0x2930>
   135f4:	ldr	r1, [r3]
   135f8:	mov	r0, #10
   135fc:	bl	10bac <fputc_unlocked@plt>
   13600:	mov	r2, #5
   13604:	ldr	r1, [pc, #96]	; 1366c <abort@plt+0x2934>
   13608:	mov	r0, #0
   1360c:	bl	10bb8 <dcgettext@plt>
   13610:	ldr	r2, [pc, #88]	; 13670 <abort@plt+0x2938>
   13614:	mov	r1, r0
   13618:	mov	r0, #1
   1361c:	bl	10cb4 <__printf_chk@plt>
   13620:	mov	r2, #5
   13624:	ldr	r1, [pc, #72]	; 13674 <abort@plt+0x293c>
   13628:	mov	r0, #0
   1362c:	bl	10bb8 <dcgettext@plt>
   13630:	ldr	r3, [pc, #64]	; 13678 <abort@plt+0x2940>
   13634:	ldr	r2, [pc, #64]	; 1367c <abort@plt+0x2944>
   13638:	mov	r1, r0
   1363c:	mov	r0, #1
   13640:	bl	10cb4 <__printf_chk@plt>
   13644:	mov	r2, #5
   13648:	ldr	r1, [pc, #48]	; 13680 <abort@plt+0x2948>
   1364c:	mov	r0, #0
   13650:	bl	10bb8 <dcgettext@plt>
   13654:	ldr	r2, [pc, #40]	; 13684 <abort@plt+0x294c>
   13658:	mov	r1, r0
   1365c:	mov	r0, #1
   13660:	bl	10cb4 <__printf_chk@plt>
   13664:	pop	{r4, pc}
   13668:	andeq	r6, r2, ip, lsr #2
   1366c:	andeq	r4, r1, r0, lsr pc
   13670:	andeq	r4, r1, r4, asr #30
   13674:	andeq	r4, r1, ip, asr pc
   13678:	andeq	r4, r1, r8, ror #19
   1367c:	andeq	r4, r1, r0, lsl sl
   13680:	andeq	r4, r1, r0, ror pc
   13684:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13688:	push	{r4, lr}
   1368c:	bl	13cbc <abort@plt+0x2f84>
   13690:	cmp	r0, #0
   13694:	popne	{r4, pc}
   13698:	bl	13c2c <abort@plt+0x2ef4>
   1369c:	push	{r4, lr}
   136a0:	bl	13cbc <abort@plt+0x2f84>
   136a4:	cmp	r0, #0
   136a8:	popne	{r4, pc}
   136ac:	bl	13c2c <abort@plt+0x2ef4>
   136b0:	push	{r4, lr}
   136b4:	bl	13688 <abort@plt+0x2950>
   136b8:	pop	{r4, pc}
   136bc:	push	{r4, r5, r6, lr}
   136c0:	mov	r5, r0
   136c4:	mov	r4, r1
   136c8:	bl	13cec <abort@plt+0x2fb4>
   136cc:	cmp	r0, #0
   136d0:	popne	{r4, r5, r6, pc}
   136d4:	adds	r4, r4, #0
   136d8:	movne	r4, #1
   136dc:	cmp	r5, #0
   136e0:	orreq	r4, r4, #1
   136e4:	cmp	r4, #0
   136e8:	popeq	{r4, r5, r6, pc}
   136ec:	bl	13c2c <abort@plt+0x2ef4>
   136f0:	push	{r4, lr}
   136f4:	cmp	r1, #0
   136f8:	orreq	r1, r1, #1
   136fc:	bl	13cec <abort@plt+0x2fb4>
   13700:	cmp	r0, #0
   13704:	popne	{r4, pc}
   13708:	bl	13c2c <abort@plt+0x2ef4>
   1370c:	push	{r4, r5, r6, lr}
   13710:	mov	r6, r0
   13714:	mov	r5, r1
   13718:	mov	r4, r2
   1371c:	bl	1410c <abort@plt+0x33d4>
   13720:	cmp	r0, #0
   13724:	popne	{r4, r5, r6, pc}
   13728:	cmp	r6, #0
   1372c:	beq	1373c <abort@plt+0x2a04>
   13730:	cmp	r5, #0
   13734:	cmpne	r4, #0
   13738:	popeq	{r4, r5, r6, pc}
   1373c:	bl	13c2c <abort@plt+0x2ef4>
   13740:	push	{r4, lr}
   13744:	bl	1370c <abort@plt+0x29d4>
   13748:	pop	{r4, pc}
   1374c:	push	{r4, lr}
   13750:	mov	ip, r1
   13754:	mov	r3, r2
   13758:	cmp	r2, #0
   1375c:	cmpne	r1, #0
   13760:	moveq	r3, #1
   13764:	moveq	ip, r3
   13768:	mov	r2, r3
   1376c:	mov	r1, ip
   13770:	bl	1410c <abort@plt+0x33d4>
   13774:	cmp	r0, #0
   13778:	popne	{r4, pc}
   1377c:	bl	13c2c <abort@plt+0x2ef4>
   13780:	push	{r4, lr}
   13784:	mov	r2, r1
   13788:	mov	r1, r0
   1378c:	mov	r0, #0
   13790:	bl	1370c <abort@plt+0x29d4>
   13794:	pop	{r4, pc}
   13798:	push	{r4, lr}
   1379c:	mov	r2, r1
   137a0:	mov	r1, r0
   137a4:	mov	r0, #0
   137a8:	bl	1374c <abort@plt+0x2a14>
   137ac:	pop	{r4, pc}
   137b0:	push	{r4, r5, r6, r7, r8, lr}
   137b4:	mov	r5, r1
   137b8:	mov	r6, r2
   137bc:	ldr	r4, [r1]
   137c0:	subs	r7, r0, #0
   137c4:	beq	137e0 <abort@plt+0x2aa8>
   137c8:	lsr	r2, r4, #1
   137cc:	add	r3, r2, #1
   137d0:	mvn	r3, r3
   137d4:	cmp	r4, r3
   137d8:	bls	13804 <abort@plt+0x2acc>
   137dc:	bl	13c2c <abort@plt+0x2ef4>
   137e0:	cmp	r4, #0
   137e4:	bne	1380c <abort@plt+0x2ad4>
   137e8:	mov	r1, r2
   137ec:	mov	r0, #64	; 0x40
   137f0:	bl	14260 <abort@plt+0x3528>
   137f4:	cmp	r0, #0
   137f8:	movne	r4, r0
   137fc:	addeq	r4, r0, #1
   13800:	b	1380c <abort@plt+0x2ad4>
   13804:	add	r4, r4, #1
   13808:	add	r4, r4, r2
   1380c:	mov	r2, r6
   13810:	mov	r1, r4
   13814:	mov	r0, r7
   13818:	bl	1370c <abort@plt+0x29d4>
   1381c:	str	r4, [r5]
   13820:	pop	{r4, r5, r6, r7, r8, pc}
   13824:	push	{r4, lr}
   13828:	mov	r2, #1
   1382c:	bl	137b0 <abort@plt+0x2a78>
   13830:	pop	{r4, pc}
   13834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13838:	sub	sp, sp, #12
   1383c:	mov	fp, r0
   13840:	mov	sl, r1
   13844:	mov	r9, r2
   13848:	mov	r7, r3
   1384c:	ldr	r6, [sp, #48]	; 0x30
   13850:	ldr	r5, [r1]
   13854:	asrs	r4, r5, #1
   13858:	bmi	139b4 <abort@plt+0x2c7c>
   1385c:	cmp	r5, #0
   13860:	blt	139c8 <abort@plt+0x2c90>
   13864:	mvn	r3, #-2147483648	; 0x80000000
   13868:	sub	r3, r3, r4
   1386c:	cmp	r5, r3
   13870:	movle	r3, #0
   13874:	movgt	r3, #1
   13878:	cmp	r3, #0
   1387c:	addeq	r4, r4, r5
   13880:	mvnne	r4, #-2147483648	; 0x80000000
   13884:	mvn	r8, r7
   13888:	lsr	r8, r8, #31
   1388c:	cmp	r7, r4
   13890:	movge	r3, #0
   13894:	andlt	r3, r8, #1
   13898:	cmp	r3, #0
   1389c:	movne	r4, r7
   138a0:	cmp	r6, #0
   138a4:	blt	139dc <abort@plt+0x2ca4>
   138a8:	cmp	r6, #0
   138ac:	beq	13a88 <abort@plt+0x2d50>
   138b0:	cmp	r4, #0
   138b4:	blt	13a38 <abort@plt+0x2d00>
   138b8:	mov	r1, r6
   138bc:	mvn	r0, #-2147483648	; 0x80000000
   138c0:	bl	1446c <abort@plt+0x3734>
   138c4:	cmp	r0, r4
   138c8:	movge	r0, #0
   138cc:	movlt	r0, #1
   138d0:	cmp	r0, #0
   138d4:	mvnne	r3, #-2147483648	; 0x80000000
   138d8:	strne	r3, [sp, #4]
   138dc:	beq	13a70 <abort@plt+0x2d38>
   138e0:	mov	r1, r6
   138e4:	ldr	r0, [sp, #4]
   138e8:	bl	1446c <abort@plt+0x3734>
   138ec:	mov	r4, r0
   138f0:	mov	r1, r6
   138f4:	ldr	r0, [sp, #4]
   138f8:	bl	1468c <abort@plt+0x3954>
   138fc:	ldr	r3, [sp, #4]
   13900:	sub	r1, r3, r1
   13904:	cmp	fp, #0
   13908:	moveq	r3, #0
   1390c:	streq	r3, [sl]
   13910:	sub	r3, r4, r5
   13914:	cmp	r3, r9
   13918:	bge	139a0 <abort@plt+0x2c68>
   1391c:	cmp	r9, #0
   13920:	blt	13a94 <abort@plt+0x2d5c>
   13924:	cmp	r5, #0
   13928:	blt	13aa8 <abort@plt+0x2d70>
   1392c:	mvn	r3, #-2147483648	; 0x80000000
   13930:	sub	r3, r3, r9
   13934:	cmp	r5, r3
   13938:	movle	r3, #0
   1393c:	movgt	r3, #1
   13940:	cmp	r3, #0
   13944:	bne	13b50 <abort@plt+0x2e18>
   13948:	add	r5, r5, r9
   1394c:	mov	r4, r5
   13950:	cmp	r7, r5
   13954:	movge	r7, #0
   13958:	andlt	r7, r8, #1
   1395c:	cmp	r7, #0
   13960:	bne	13b50 <abort@plt+0x2e18>
   13964:	cmp	r6, #0
   13968:	blt	13abc <abort@plt+0x2d84>
   1396c:	cmp	r6, #0
   13970:	beq	1399c <abort@plt+0x2c64>
   13974:	cmp	r5, #0
   13978:	blt	13b18 <abort@plt+0x2de0>
   1397c:	mov	r1, r6
   13980:	mvn	r0, #-2147483648	; 0x80000000
   13984:	bl	1446c <abort@plt+0x3734>
   13988:	cmp	r5, r0
   1398c:	movle	r0, #0
   13990:	movgt	r0, #1
   13994:	cmp	r0, #0
   13998:	bne	13b50 <abort@plt+0x2e18>
   1399c:	mul	r1, r5, r6
   139a0:	mov	r0, fp
   139a4:	bl	136bc <abort@plt+0x2984>
   139a8:	str	r4, [sl]
   139ac:	add	sp, sp, #12
   139b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139b4:	rsb	r3, r4, #-2147483648	; 0x80000000
   139b8:	cmp	r5, r3
   139bc:	movge	r3, #0
   139c0:	movlt	r3, #1
   139c4:	b	13878 <abort@plt+0x2b40>
   139c8:	rsb	r3, r5, #-2147483648	; 0x80000000
   139cc:	cmp	r4, r3
   139d0:	movge	r3, #0
   139d4:	movlt	r3, #1
   139d8:	b	13878 <abort@plt+0x2b40>
   139dc:	cmp	r4, #0
   139e0:	blt	13a08 <abort@plt+0x2cd0>
   139e4:	cmn	r6, #1
   139e8:	beq	13a24 <abort@plt+0x2cec>
   139ec:	mov	r1, r6
   139f0:	mov	r0, #-2147483648	; 0x80000000
   139f4:	bl	1446c <abort@plt+0x3734>
   139f8:	cmp	r0, r4
   139fc:	movge	r0, #0
   13a00:	movlt	r0, #1
   13a04:	b	138d0 <abort@plt+0x2b98>
   13a08:	mov	r1, r6
   13a0c:	mvn	r0, #-2147483648	; 0x80000000
   13a10:	bl	1446c <abort@plt+0x3734>
   13a14:	cmp	r0, r4
   13a18:	movle	r0, #0
   13a1c:	movgt	r0, #1
   13a20:	b	138d0 <abort@plt+0x2b98>
   13a24:	add	r0, r4, #-2147483648	; 0x80000000
   13a28:	cmp	r0, #0
   13a2c:	movle	r0, #0
   13a30:	movgt	r0, #1
   13a34:	b	138d0 <abort@plt+0x2b98>
   13a38:	cmn	r4, #1
   13a3c:	beq	13a5c <abort@plt+0x2d24>
   13a40:	mov	r1, r4
   13a44:	mov	r0, #-2147483648	; 0x80000000
   13a48:	bl	1446c <abort@plt+0x3734>
   13a4c:	cmp	r6, r0
   13a50:	movle	r0, #0
   13a54:	movgt	r0, #1
   13a58:	b	138d0 <abort@plt+0x2b98>
   13a5c:	add	r0, r6, #-2147483648	; 0x80000000
   13a60:	cmp	r0, #0
   13a64:	movle	r0, #0
   13a68:	movgt	r0, #1
   13a6c:	b	138d0 <abort@plt+0x2b98>
   13a70:	mul	r1, r6, r4
   13a74:	cmp	r1, #63	; 0x3f
   13a78:	movle	r3, #64	; 0x40
   13a7c:	strle	r3, [sp, #4]
   13a80:	bgt	13904 <abort@plt+0x2bcc>
   13a84:	b	138e0 <abort@plt+0x2ba8>
   13a88:	mov	r3, #64	; 0x40
   13a8c:	str	r3, [sp, #4]
   13a90:	b	138e0 <abort@plt+0x2ba8>
   13a94:	rsb	r3, r9, #-2147483648	; 0x80000000
   13a98:	cmp	r5, r3
   13a9c:	movge	r3, #0
   13aa0:	movlt	r3, #1
   13aa4:	b	13940 <abort@plt+0x2c08>
   13aa8:	rsb	r3, r5, #-2147483648	; 0x80000000
   13aac:	cmp	r9, r3
   13ab0:	movge	r3, #0
   13ab4:	movlt	r3, #1
   13ab8:	b	13940 <abort@plt+0x2c08>
   13abc:	cmp	r5, #0
   13ac0:	blt	13ae8 <abort@plt+0x2db0>
   13ac4:	cmn	r6, #1
   13ac8:	beq	13b04 <abort@plt+0x2dcc>
   13acc:	mov	r1, r6
   13ad0:	mov	r0, #-2147483648	; 0x80000000
   13ad4:	bl	1446c <abort@plt+0x3734>
   13ad8:	cmp	r5, r0
   13adc:	movle	r0, #0
   13ae0:	movgt	r0, #1
   13ae4:	b	13994 <abort@plt+0x2c5c>
   13ae8:	mov	r1, r6
   13aec:	mvn	r0, #-2147483648	; 0x80000000
   13af0:	bl	1446c <abort@plt+0x3734>
   13af4:	cmp	r5, r0
   13af8:	movge	r0, #0
   13afc:	movlt	r0, #1
   13b00:	b	13994 <abort@plt+0x2c5c>
   13b04:	add	r0, r5, #-2147483648	; 0x80000000
   13b08:	cmp	r0, #0
   13b0c:	movle	r0, #0
   13b10:	movgt	r0, #1
   13b14:	b	13994 <abort@plt+0x2c5c>
   13b18:	cmn	r5, #1
   13b1c:	beq	13b3c <abort@plt+0x2e04>
   13b20:	mov	r1, r5
   13b24:	mov	r0, #-2147483648	; 0x80000000
   13b28:	bl	1446c <abort@plt+0x3734>
   13b2c:	cmp	r6, r0
   13b30:	movle	r0, #0
   13b34:	movgt	r0, #1
   13b38:	b	13994 <abort@plt+0x2c5c>
   13b3c:	add	r0, r6, #-2147483648	; 0x80000000
   13b40:	cmp	r0, #0
   13b44:	movle	r0, #0
   13b48:	movgt	r0, #1
   13b4c:	b	13994 <abort@plt+0x2c5c>
   13b50:	bl	13c2c <abort@plt+0x2ef4>
   13b54:	push	{r4, lr}
   13b58:	bl	13c6c <abort@plt+0x2f34>
   13b5c:	cmp	r0, #0
   13b60:	popne	{r4, pc}
   13b64:	bl	13c2c <abort@plt+0x2ef4>
   13b68:	push	{r4, lr}
   13b6c:	mov	r1, #1
   13b70:	bl	13b54 <abort@plt+0x2e1c>
   13b74:	pop	{r4, pc}
   13b78:	push	{r4, lr}
   13b7c:	bl	13c6c <abort@plt+0x2f34>
   13b80:	cmp	r0, #0
   13b84:	popne	{r4, pc}
   13b88:	bl	13c2c <abort@plt+0x2ef4>
   13b8c:	push	{r4, lr}
   13b90:	mov	r1, #1
   13b94:	bl	13b78 <abort@plt+0x2e40>
   13b98:	pop	{r4, pc}
   13b9c:	push	{r4, r5, r6, lr}
   13ba0:	mov	r5, r0
   13ba4:	mov	r4, r1
   13ba8:	mov	r0, r1
   13bac:	bl	13688 <abort@plt+0x2950>
   13bb0:	mov	r2, r4
   13bb4:	mov	r1, r5
   13bb8:	bl	10b7c <memcpy@plt>
   13bbc:	pop	{r4, r5, r6, pc}
   13bc0:	push	{r4, r5, r6, lr}
   13bc4:	mov	r5, r0
   13bc8:	mov	r4, r1
   13bcc:	mov	r0, r1
   13bd0:	bl	1369c <abort@plt+0x2964>
   13bd4:	mov	r2, r4
   13bd8:	mov	r1, r5
   13bdc:	bl	10b7c <memcpy@plt>
   13be0:	pop	{r4, r5, r6, pc}
   13be4:	push	{r4, r5, r6, lr}
   13be8:	mov	r5, r0
   13bec:	mov	r4, r1
   13bf0:	add	r0, r1, #1
   13bf4:	bl	1369c <abort@plt+0x2964>
   13bf8:	mov	r2, #0
   13bfc:	strb	r2, [r0, r4]
   13c00:	mov	r2, r4
   13c04:	mov	r1, r5
   13c08:	bl	10b7c <memcpy@plt>
   13c0c:	pop	{r4, r5, r6, pc}
   13c10:	push	{r4, lr}
   13c14:	mov	r4, r0
   13c18:	bl	10c84 <strlen@plt>
   13c1c:	add	r1, r0, #1
   13c20:	mov	r0, r4
   13c24:	bl	13b9c <abort@plt+0x2e64>
   13c28:	pop	{r4, pc}
   13c2c:	push	{r4, lr}
   13c30:	ldr	r3, [pc, #40]	; 13c60 <abort@plt+0x2f28>
   13c34:	ldr	r4, [r3]
   13c38:	mov	r2, #5
   13c3c:	ldr	r1, [pc, #32]	; 13c64 <abort@plt+0x2f2c>
   13c40:	mov	r0, #0
   13c44:	bl	10bb8 <dcgettext@plt>
   13c48:	mov	r3, r0
   13c4c:	ldr	r2, [pc, #20]	; 13c68 <abort@plt+0x2f30>
   13c50:	mov	r1, #0
   13c54:	mov	r0, r4
   13c58:	bl	10c24 <error@plt>
   13c5c:	bl	10d38 <abort@plt>
   13c60:	ldrdeq	r6, [r2], -r0
   13c64:	andeq	r4, r1, r8, ror #31
   13c68:	andeq	r4, r1, ip, lsr #23
   13c6c:	push	{r4, lr}
   13c70:	mov	r2, r0
   13c74:	mov	r3, r1
   13c78:	cmp	r1, #0
   13c7c:	cmpne	r0, #0
   13c80:	moveq	r3, #1
   13c84:	moveq	r2, r3
   13c88:	umull	r0, r1, r2, r3
   13c8c:	cmp	r0, #0
   13c90:	cmpge	r1, #0
   13c94:	bne	13ca8 <abort@plt+0x2f70>
   13c98:	mov	r1, r3
   13c9c:	mov	r0, r2
   13ca0:	bl	10b28 <calloc@plt>
   13ca4:	pop	{r4, pc}
   13ca8:	bl	10c90 <__errno_location@plt>
   13cac:	mov	r3, #12
   13cb0:	str	r3, [r0]
   13cb4:	mov	r0, #0
   13cb8:	pop	{r4, pc}
   13cbc:	push	{r4, lr}
   13cc0:	cmp	r0, #0
   13cc4:	moveq	r0, #1
   13cc8:	cmp	r0, #0
   13ccc:	blt	13cd8 <abort@plt+0x2fa0>
   13cd0:	bl	10c30 <malloc@plt>
   13cd4:	pop	{r4, pc}
   13cd8:	bl	10c90 <__errno_location@plt>
   13cdc:	mov	r3, #12
   13ce0:	str	r3, [r0]
   13ce4:	mov	r0, #0
   13ce8:	pop	{r4, pc}
   13cec:	push	{r4, lr}
   13cf0:	cmp	r0, #0
   13cf4:	beq	13d10 <abort@plt+0x2fd8>
   13cf8:	cmp	r1, #0
   13cfc:	beq	13d1c <abort@plt+0x2fe4>
   13d00:	cmp	r1, #0
   13d04:	blt	13d28 <abort@plt+0x2ff0>
   13d08:	bl	10bc4 <realloc@plt>
   13d0c:	pop	{r4, pc}
   13d10:	mov	r0, r1
   13d14:	bl	13cbc <abort@plt+0x2f84>
   13d18:	pop	{r4, pc}
   13d1c:	bl	13f80 <abort@plt+0x3248>
   13d20:	mov	r0, #0
   13d24:	pop	{r4, pc}
   13d28:	bl	10c90 <__errno_location@plt>
   13d2c:	mov	r3, #12
   13d30:	str	r3, [r0]
   13d34:	mov	r0, #0
   13d38:	pop	{r4, pc}
   13d3c:	ldrb	r3, [r0]
   13d40:	cmp	r3, #47	; 0x2f
   13d44:	bne	13d54 <abort@plt+0x301c>
   13d48:	ldrb	r3, [r0, #1]!
   13d4c:	cmp	r3, #47	; 0x2f
   13d50:	beq	13d48 <abort@plt+0x3010>
   13d54:	ldrb	r2, [r0]
   13d58:	cmp	r2, #0
   13d5c:	bxeq	lr
   13d60:	push	{lr}		; (str lr, [sp, #-4]!)
   13d64:	mov	r1, r0
   13d68:	mov	r3, #0
   13d6c:	mov	lr, #1
   13d70:	mov	ip, r3
   13d74:	b	13d84 <abort@plt+0x304c>
   13d78:	ldrb	r2, [r1, #1]!
   13d7c:	cmp	r2, #0
   13d80:	beq	13da0 <abort@plt+0x3068>
   13d84:	cmp	r2, #47	; 0x2f
   13d88:	moveq	r3, lr
   13d8c:	beq	13d78 <abort@plt+0x3040>
   13d90:	cmp	r3, #0
   13d94:	movne	r0, r1
   13d98:	movne	r3, ip
   13d9c:	b	13d78 <abort@plt+0x3040>
   13da0:	pop	{pc}		; (ldr pc, [sp], #4)
   13da4:	push	{r4, lr}
   13da8:	mov	r4, r0
   13dac:	bl	10c84 <strlen@plt>
   13db0:	cmp	r0, #1
   13db4:	popls	{r4, pc}
   13db8:	sub	r3, r0, #1
   13dbc:	add	r2, r4, r3
   13dc0:	ldrb	r1, [r4, r3]
   13dc4:	cmp	r1, #47	; 0x2f
   13dc8:	popne	{r4, pc}
   13dcc:	cmp	r3, #1
   13dd0:	beq	13df4 <abort@plt+0x30bc>
   13dd4:	sub	r0, r3, #1
   13dd8:	ldrb	r1, [r2, #-1]!
   13ddc:	cmp	r1, #47	; 0x2f
   13de0:	beq	13dec <abort@plt+0x30b4>
   13de4:	mov	r0, r3
   13de8:	pop	{r4, pc}
   13dec:	mov	r3, r0
   13df0:	b	13dcc <abort@plt+0x3094>
   13df4:	mov	r0, #1
   13df8:	pop	{r4, pc}
   13dfc:	push	{r4, r5, r6, lr}
   13e00:	mov	r5, r0
   13e04:	bl	10c0c <__fpending@plt>
   13e08:	mov	r6, r0
   13e0c:	ldr	r4, [r5]
   13e10:	and	r4, r4, #32
   13e14:	mov	r0, r5
   13e18:	bl	13e74 <abort@plt+0x313c>
   13e1c:	cmp	r4, #0
   13e20:	bne	13e48 <abort@plt+0x3110>
   13e24:	cmp	r0, #0
   13e28:	popeq	{r4, r5, r6, pc}
   13e2c:	cmp	r6, #0
   13e30:	bne	13e64 <abort@plt+0x312c>
   13e34:	bl	10c90 <__errno_location@plt>
   13e38:	ldr	r0, [r0]
   13e3c:	subs	r0, r0, #9
   13e40:	mvnne	r0, #0
   13e44:	pop	{r4, r5, r6, pc}
   13e48:	cmp	r0, #0
   13e4c:	bne	13e6c <abort@plt+0x3134>
   13e50:	bl	10c90 <__errno_location@plt>
   13e54:	mov	r3, #0
   13e58:	str	r3, [r0]
   13e5c:	mvn	r0, #0
   13e60:	pop	{r4, r5, r6, pc}
   13e64:	mvn	r0, #0
   13e68:	pop	{r4, r5, r6, pc}
   13e6c:	mvn	r0, #0
   13e70:	pop	{r4, r5, r6, pc}
   13e74:	push	{r4, r5, r6, lr}
   13e78:	sub	sp, sp, #8
   13e7c:	mov	r4, r0
   13e80:	bl	10cc0 <fileno@plt>
   13e84:	cmp	r0, #0
   13e88:	blt	13f00 <abort@plt+0x31c8>
   13e8c:	mov	r0, r4
   13e90:	bl	10c48 <__freading@plt>
   13e94:	cmp	r0, #0
   13e98:	beq	13ecc <abort@plt+0x3194>
   13e9c:	mov	r0, r4
   13ea0:	bl	10cc0 <fileno@plt>
   13ea4:	mov	r3, #1
   13ea8:	str	r3, [sp]
   13eac:	mov	r2, #0
   13eb0:	mov	r3, #0
   13eb4:	bl	10bf4 <lseek64@plt>
   13eb8:	mvn	r2, #0
   13ebc:	mvn	r3, #0
   13ec0:	cmp	r1, r3
   13ec4:	cmpeq	r0, r2
   13ec8:	beq	13f0c <abort@plt+0x31d4>
   13ecc:	mov	r0, r4
   13ed0:	bl	13f1c <abort@plt+0x31e4>
   13ed4:	cmp	r0, #0
   13ed8:	beq	13f0c <abort@plt+0x31d4>
   13edc:	bl	10c90 <__errno_location@plt>
   13ee0:	mov	r5, r0
   13ee4:	ldr	r6, [r0]
   13ee8:	mov	r0, r4
   13eec:	bl	10cd8 <fclose@plt>
   13ef0:	cmp	r6, #0
   13ef4:	strne	r6, [r5]
   13ef8:	mvnne	r0, #0
   13efc:	b	13f14 <abort@plt+0x31dc>
   13f00:	mov	r0, r4
   13f04:	bl	10cd8 <fclose@plt>
   13f08:	b	13f14 <abort@plt+0x31dc>
   13f0c:	mov	r0, r4
   13f10:	bl	10cd8 <fclose@plt>
   13f14:	add	sp, sp, #8
   13f18:	pop	{r4, r5, r6, pc}
   13f1c:	push	{r4, lr}
   13f20:	sub	sp, sp, #8
   13f24:	subs	r4, r0, #0
   13f28:	beq	13f3c <abort@plt+0x3204>
   13f2c:	mov	r0, r4
   13f30:	bl	10c48 <__freading@plt>
   13f34:	cmp	r0, #0
   13f38:	bne	13f4c <abort@plt+0x3214>
   13f3c:	mov	r0, r4
   13f40:	bl	10b58 <fflush@plt>
   13f44:	add	sp, sp, #8
   13f48:	pop	{r4, pc}
   13f4c:	ldr	r3, [r4]
   13f50:	tst	r3, #256	; 0x100
   13f54:	bne	13f64 <abort@plt+0x322c>
   13f58:	mov	r0, r4
   13f5c:	bl	10b58 <fflush@plt>
   13f60:	b	13f44 <abort@plt+0x320c>
   13f64:	mov	r3, #1
   13f68:	str	r3, [sp]
   13f6c:	mov	r2, #0
   13f70:	mov	r3, #0
   13f74:	mov	r0, r4
   13f78:	bl	13fd8 <abort@plt+0x32a0>
   13f7c:	b	13f58 <abort@plt+0x3220>
   13f80:	push	{r4, r5, lr}
   13f84:	sub	sp, sp, #12
   13f88:	mov	r5, r0
   13f8c:	bl	10c90 <__errno_location@plt>
   13f90:	mov	r4, r0
   13f94:	ldr	r3, [r0]
   13f98:	str	r3, [sp]
   13f9c:	str	r3, [sp, #4]
   13fa0:	mov	r3, #0
   13fa4:	str	r3, [r0]
   13fa8:	mov	r0, r5
   13fac:	bl	10b64 <free@plt>
   13fb0:	ldr	r3, [r4]
   13fb4:	cmp	r3, #0
   13fb8:	moveq	r3, #4
   13fbc:	movne	r3, #0
   13fc0:	add	r2, sp, #8
   13fc4:	add	r3, r2, r3
   13fc8:	ldr	r3, [r3, #-8]
   13fcc:	str	r3, [r4]
   13fd0:	add	sp, sp, #12
   13fd4:	pop	{r4, r5, pc}
   13fd8:	push	{r4, r5, r6, r7, lr}
   13fdc:	sub	sp, sp, #12
   13fe0:	mov	r4, r0
   13fe4:	mov	r6, r2
   13fe8:	mov	r7, r3
   13fec:	ldr	r5, [sp, #32]
   13ff0:	ldr	r2, [r0, #8]
   13ff4:	ldr	r3, [r0, #4]
   13ff8:	cmp	r2, r3
   13ffc:	beq	1401c <abort@plt+0x32e4>
   14000:	str	r5, [sp]
   14004:	mov	r2, r6
   14008:	mov	r3, r7
   1400c:	mov	r0, r4
   14010:	bl	10ce4 <fseeko64@plt>
   14014:	add	sp, sp, #12
   14018:	pop	{r4, r5, r6, r7, pc}
   1401c:	ldr	r2, [r0, #20]
   14020:	ldr	r3, [r0, #16]
   14024:	cmp	r2, r3
   14028:	bne	14000 <abort@plt+0x32c8>
   1402c:	ldr	r3, [r0, #36]	; 0x24
   14030:	cmp	r3, #0
   14034:	bne	14000 <abort@plt+0x32c8>
   14038:	bl	10cc0 <fileno@plt>
   1403c:	str	r5, [sp]
   14040:	mov	r2, r6
   14044:	mov	r3, r7
   14048:	bl	10bf4 <lseek64@plt>
   1404c:	mvn	r2, #0
   14050:	mvn	r3, #0
   14054:	cmp	r1, r3
   14058:	cmpeq	r0, r2
   1405c:	beq	14078 <abort@plt+0x3340>
   14060:	ldr	r3, [r4]
   14064:	bic	r3, r3, #16
   14068:	str	r3, [r4]
   1406c:	strd	r0, [r4, #80]	; 0x50
   14070:	mov	r0, #0
   14074:	b	14014 <abort@plt+0x32dc>
   14078:	mvn	r0, #0
   1407c:	b	14014 <abort@plt+0x32dc>
   14080:	push	{r4, lr}
   14084:	mov	r0, #14
   14088:	bl	10d14 <nl_langinfo@plt>
   1408c:	cmp	r0, #0
   14090:	beq	140a8 <abort@plt+0x3370>
   14094:	ldrb	r2, [r0]
   14098:	ldr	r3, [pc, #16]	; 140b0 <abort@plt+0x3378>
   1409c:	cmp	r2, #0
   140a0:	moveq	r0, r3
   140a4:	pop	{r4, pc}
   140a8:	ldr	r0, [pc]	; 140b0 <abort@plt+0x3378>
   140ac:	pop	{r4, pc}
   140b0:	strdeq	r4, [r1], -ip
   140b4:	push	{r4, r5, r6, r7, lr}
   140b8:	sub	sp, sp, #12
   140bc:	mov	r7, r1
   140c0:	mov	r5, r2
   140c4:	subs	r6, r0, #0
   140c8:	addeq	r6, sp, #4
   140cc:	mov	r0, r6
   140d0:	bl	10c18 <mbrtowc@plt>
   140d4:	mov	r4, r0
   140d8:	cmp	r5, #0
   140dc:	cmnne	r0, #3
   140e0:	bhi	140f0 <abort@plt+0x33b8>
   140e4:	mov	r0, r4
   140e8:	add	sp, sp, #12
   140ec:	pop	{r4, r5, r6, r7, pc}
   140f0:	mov	r0, #0
   140f4:	bl	14158 <abort@plt+0x3420>
   140f8:	cmp	r0, #0
   140fc:	ldrbeq	r3, [r7]
   14100:	streq	r3, [r6]
   14104:	moveq	r4, #1
   14108:	b	140e4 <abort@plt+0x33ac>
   1410c:	push	{r4, r5, r6, lr}
   14110:	mov	r6, r0
   14114:	mov	r5, r1
   14118:	subs	r4, r2, #0
   1411c:	beq	14148 <abort@plt+0x3410>
   14120:	mov	r1, r4
   14124:	mvn	r0, #0
   14128:	bl	14260 <abort@plt+0x3528>
   1412c:	cmp	r0, r5
   14130:	bcs	14148 <abort@plt+0x3410>
   14134:	bl	10c90 <__errno_location@plt>
   14138:	mov	r3, #12
   1413c:	str	r3, [r0]
   14140:	mov	r0, #0
   14144:	pop	{r4, r5, r6, pc}
   14148:	mul	r1, r5, r4
   1414c:	mov	r0, r6
   14150:	bl	13cec <abort@plt+0x2fb4>
   14154:	pop	{r4, r5, r6, pc}
   14158:	push	{lr}		; (str lr, [sp, #-4]!)
   1415c:	sub	sp, sp, #268	; 0x10c
   14160:	ldr	r2, [pc, #68]	; 141ac <abort@plt+0x3474>
   14164:	add	r1, sp, #4
   14168:	bl	141b8 <abort@plt+0x3480>
   1416c:	cmp	r0, #0
   14170:	movne	r0, #0
   14174:	bne	141a4 <abort@plt+0x346c>
   14178:	ldr	r1, [pc, #48]	; 141b0 <abort@plt+0x3478>
   1417c:	add	r0, sp, #4
   14180:	bl	10b4c <strcmp@plt>
   14184:	cmp	r0, #0
   14188:	moveq	r0, #0
   1418c:	beq	141a4 <abort@plt+0x346c>
   14190:	ldr	r1, [pc, #28]	; 141b4 <abort@plt+0x347c>
   14194:	add	r0, sp, #4
   14198:	bl	10b4c <strcmp@plt>
   1419c:	adds	r0, r0, #0
   141a0:	movne	r0, #1
   141a4:	add	sp, sp, #268	; 0x10c
   141a8:	pop	{pc}		; (ldr pc, [sp], #4)
   141ac:	andeq	r0, r0, r1, lsl #2
   141b0:	andeq	r5, r1, r4
   141b4:	andeq	r5, r1, r8
   141b8:	push	{r4, r5, r6, lr}
   141bc:	mov	r6, r1
   141c0:	mov	r4, r2
   141c4:	mov	r1, #0
   141c8:	bl	10cfc <setlocale@plt>
   141cc:	subs	r5, r0, #0
   141d0:	beq	141f4 <abort@plt+0x34bc>
   141d4:	mov	r0, r5
   141d8:	bl	10c84 <strlen@plt>
   141dc:	cmp	r4, r0
   141e0:	bhi	1420c <abort@plt+0x34d4>
   141e4:	cmp	r4, #0
   141e8:	bne	14224 <abort@plt+0x34ec>
   141ec:	mov	r0, #34	; 0x22
   141f0:	pop	{r4, r5, r6, pc}
   141f4:	cmp	r4, #0
   141f8:	beq	14248 <abort@plt+0x3510>
   141fc:	mov	r3, #0
   14200:	strb	r3, [r6]
   14204:	mov	r0, #22
   14208:	pop	{r4, r5, r6, pc}
   1420c:	add	r2, r0, #1
   14210:	mov	r1, r5
   14214:	mov	r0, r6
   14218:	bl	10b7c <memcpy@plt>
   1421c:	mov	r0, #0
   14220:	pop	{r4, r5, r6, pc}
   14224:	sub	r4, r4, #1
   14228:	mov	r2, r4
   1422c:	mov	r1, r5
   14230:	mov	r0, r6
   14234:	bl	10b7c <memcpy@plt>
   14238:	mov	r3, #0
   1423c:	strb	r3, [r6, r4]
   14240:	mov	r0, #34	; 0x22
   14244:	pop	{r4, r5, r6, pc}
   14248:	mov	r0, #22
   1424c:	pop	{r4, r5, r6, pc}
   14250:	push	{r4, lr}
   14254:	mov	r1, #0
   14258:	bl	10cfc <setlocale@plt>
   1425c:	pop	{r4, pc}
   14260:	subs	r2, r1, #1
   14264:	bxeq	lr
   14268:	bcc	14440 <abort@plt+0x3708>
   1426c:	cmp	r0, r1
   14270:	bls	14424 <abort@plt+0x36ec>
   14274:	tst	r1, r2
   14278:	beq	14430 <abort@plt+0x36f8>
   1427c:	clz	r3, r0
   14280:	clz	r2, r1
   14284:	sub	r3, r2, r3
   14288:	rsbs	r3, r3, #31
   1428c:	addne	r3, r3, r3, lsl #1
   14290:	mov	r2, #0
   14294:	addne	pc, pc, r3, lsl #2
   14298:	nop			; (mov r0, r0)
   1429c:	cmp	r0, r1, lsl #31
   142a0:	adc	r2, r2, r2
   142a4:	subcs	r0, r0, r1, lsl #31
   142a8:	cmp	r0, r1, lsl #30
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #30
   142b4:	cmp	r0, r1, lsl #29
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #29
   142c0:	cmp	r0, r1, lsl #28
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #28
   142cc:	cmp	r0, r1, lsl #27
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #27
   142d8:	cmp	r0, r1, lsl #26
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1, lsl #26
   142e4:	cmp	r0, r1, lsl #25
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #25
   142f0:	cmp	r0, r1, lsl #24
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #24
   142fc:	cmp	r0, r1, lsl #23
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #23
   14308:	cmp	r0, r1, lsl #22
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #22
   14314:	cmp	r0, r1, lsl #21
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #21
   14320:	cmp	r0, r1, lsl #20
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1, lsl #20
   1432c:	cmp	r0, r1, lsl #19
   14330:	adc	r2, r2, r2
   14334:	subcs	r0, r0, r1, lsl #19
   14338:	cmp	r0, r1, lsl #18
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #18
   14344:	cmp	r0, r1, lsl #17
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #17
   14350:	cmp	r0, r1, lsl #16
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #16
   1435c:	cmp	r0, r1, lsl #15
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #15
   14368:	cmp	r0, r1, lsl #14
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #14
   14374:	cmp	r0, r1, lsl #13
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #13
   14380:	cmp	r0, r1, lsl #12
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #12
   1438c:	cmp	r0, r1, lsl #11
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1, lsl #11
   14398:	cmp	r0, r1, lsl #10
   1439c:	adc	r2, r2, r2
   143a0:	subcs	r0, r0, r1, lsl #10
   143a4:	cmp	r0, r1, lsl #9
   143a8:	adc	r2, r2, r2
   143ac:	subcs	r0, r0, r1, lsl #9
   143b0:	cmp	r0, r1, lsl #8
   143b4:	adc	r2, r2, r2
   143b8:	subcs	r0, r0, r1, lsl #8
   143bc:	cmp	r0, r1, lsl #7
   143c0:	adc	r2, r2, r2
   143c4:	subcs	r0, r0, r1, lsl #7
   143c8:	cmp	r0, r1, lsl #6
   143cc:	adc	r2, r2, r2
   143d0:	subcs	r0, r0, r1, lsl #6
   143d4:	cmp	r0, r1, lsl #5
   143d8:	adc	r2, r2, r2
   143dc:	subcs	r0, r0, r1, lsl #5
   143e0:	cmp	r0, r1, lsl #4
   143e4:	adc	r2, r2, r2
   143e8:	subcs	r0, r0, r1, lsl #4
   143ec:	cmp	r0, r1, lsl #3
   143f0:	adc	r2, r2, r2
   143f4:	subcs	r0, r0, r1, lsl #3
   143f8:	cmp	r0, r1, lsl #2
   143fc:	adc	r2, r2, r2
   14400:	subcs	r0, r0, r1, lsl #2
   14404:	cmp	r0, r1, lsl #1
   14408:	adc	r2, r2, r2
   1440c:	subcs	r0, r0, r1, lsl #1
   14410:	cmp	r0, r1
   14414:	adc	r2, r2, r2
   14418:	subcs	r0, r0, r1
   1441c:	mov	r0, r2
   14420:	bx	lr
   14424:	moveq	r0, #1
   14428:	movne	r0, #0
   1442c:	bx	lr
   14430:	clz	r2, r1
   14434:	rsb	r2, r2, #31
   14438:	lsr	r0, r0, r2
   1443c:	bx	lr
   14440:	cmp	r0, #0
   14444:	mvnne	r0, #0
   14448:	b	146ac <abort@plt+0x3974>
   1444c:	cmp	r1, #0
   14450:	beq	14440 <abort@plt+0x3708>
   14454:	push	{r0, r1, lr}
   14458:	bl	14260 <abort@plt+0x3528>
   1445c:	pop	{r1, r2, lr}
   14460:	mul	r3, r2, r0
   14464:	sub	r1, r1, r3
   14468:	bx	lr
   1446c:	cmp	r1, #0
   14470:	beq	1467c <abort@plt+0x3944>
   14474:	eor	ip, r0, r1
   14478:	rsbmi	r1, r1, #0
   1447c:	subs	r2, r1, #1
   14480:	beq	14648 <abort@plt+0x3910>
   14484:	movs	r3, r0
   14488:	rsbmi	r3, r0, #0
   1448c:	cmp	r3, r1
   14490:	bls	14654 <abort@plt+0x391c>
   14494:	tst	r1, r2
   14498:	beq	14664 <abort@plt+0x392c>
   1449c:	clz	r2, r3
   144a0:	clz	r0, r1
   144a4:	sub	r2, r0, r2
   144a8:	rsbs	r2, r2, #31
   144ac:	addne	r2, r2, r2, lsl #1
   144b0:	mov	r0, #0
   144b4:	addne	pc, pc, r2, lsl #2
   144b8:	nop			; (mov r0, r0)
   144bc:	cmp	r3, r1, lsl #31
   144c0:	adc	r0, r0, r0
   144c4:	subcs	r3, r3, r1, lsl #31
   144c8:	cmp	r3, r1, lsl #30
   144cc:	adc	r0, r0, r0
   144d0:	subcs	r3, r3, r1, lsl #30
   144d4:	cmp	r3, r1, lsl #29
   144d8:	adc	r0, r0, r0
   144dc:	subcs	r3, r3, r1, lsl #29
   144e0:	cmp	r3, r1, lsl #28
   144e4:	adc	r0, r0, r0
   144e8:	subcs	r3, r3, r1, lsl #28
   144ec:	cmp	r3, r1, lsl #27
   144f0:	adc	r0, r0, r0
   144f4:	subcs	r3, r3, r1, lsl #27
   144f8:	cmp	r3, r1, lsl #26
   144fc:	adc	r0, r0, r0
   14500:	subcs	r3, r3, r1, lsl #26
   14504:	cmp	r3, r1, lsl #25
   14508:	adc	r0, r0, r0
   1450c:	subcs	r3, r3, r1, lsl #25
   14510:	cmp	r3, r1, lsl #24
   14514:	adc	r0, r0, r0
   14518:	subcs	r3, r3, r1, lsl #24
   1451c:	cmp	r3, r1, lsl #23
   14520:	adc	r0, r0, r0
   14524:	subcs	r3, r3, r1, lsl #23
   14528:	cmp	r3, r1, lsl #22
   1452c:	adc	r0, r0, r0
   14530:	subcs	r3, r3, r1, lsl #22
   14534:	cmp	r3, r1, lsl #21
   14538:	adc	r0, r0, r0
   1453c:	subcs	r3, r3, r1, lsl #21
   14540:	cmp	r3, r1, lsl #20
   14544:	adc	r0, r0, r0
   14548:	subcs	r3, r3, r1, lsl #20
   1454c:	cmp	r3, r1, lsl #19
   14550:	adc	r0, r0, r0
   14554:	subcs	r3, r3, r1, lsl #19
   14558:	cmp	r3, r1, lsl #18
   1455c:	adc	r0, r0, r0
   14560:	subcs	r3, r3, r1, lsl #18
   14564:	cmp	r3, r1, lsl #17
   14568:	adc	r0, r0, r0
   1456c:	subcs	r3, r3, r1, lsl #17
   14570:	cmp	r3, r1, lsl #16
   14574:	adc	r0, r0, r0
   14578:	subcs	r3, r3, r1, lsl #16
   1457c:	cmp	r3, r1, lsl #15
   14580:	adc	r0, r0, r0
   14584:	subcs	r3, r3, r1, lsl #15
   14588:	cmp	r3, r1, lsl #14
   1458c:	adc	r0, r0, r0
   14590:	subcs	r3, r3, r1, lsl #14
   14594:	cmp	r3, r1, lsl #13
   14598:	adc	r0, r0, r0
   1459c:	subcs	r3, r3, r1, lsl #13
   145a0:	cmp	r3, r1, lsl #12
   145a4:	adc	r0, r0, r0
   145a8:	subcs	r3, r3, r1, lsl #12
   145ac:	cmp	r3, r1, lsl #11
   145b0:	adc	r0, r0, r0
   145b4:	subcs	r3, r3, r1, lsl #11
   145b8:	cmp	r3, r1, lsl #10
   145bc:	adc	r0, r0, r0
   145c0:	subcs	r3, r3, r1, lsl #10
   145c4:	cmp	r3, r1, lsl #9
   145c8:	adc	r0, r0, r0
   145cc:	subcs	r3, r3, r1, lsl #9
   145d0:	cmp	r3, r1, lsl #8
   145d4:	adc	r0, r0, r0
   145d8:	subcs	r3, r3, r1, lsl #8
   145dc:	cmp	r3, r1, lsl #7
   145e0:	adc	r0, r0, r0
   145e4:	subcs	r3, r3, r1, lsl #7
   145e8:	cmp	r3, r1, lsl #6
   145ec:	adc	r0, r0, r0
   145f0:	subcs	r3, r3, r1, lsl #6
   145f4:	cmp	r3, r1, lsl #5
   145f8:	adc	r0, r0, r0
   145fc:	subcs	r3, r3, r1, lsl #5
   14600:	cmp	r3, r1, lsl #4
   14604:	adc	r0, r0, r0
   14608:	subcs	r3, r3, r1, lsl #4
   1460c:	cmp	r3, r1, lsl #3
   14610:	adc	r0, r0, r0
   14614:	subcs	r3, r3, r1, lsl #3
   14618:	cmp	r3, r1, lsl #2
   1461c:	adc	r0, r0, r0
   14620:	subcs	r3, r3, r1, lsl #2
   14624:	cmp	r3, r1, lsl #1
   14628:	adc	r0, r0, r0
   1462c:	subcs	r3, r3, r1, lsl #1
   14630:	cmp	r3, r1
   14634:	adc	r0, r0, r0
   14638:	subcs	r3, r3, r1
   1463c:	cmp	ip, #0
   14640:	rsbmi	r0, r0, #0
   14644:	bx	lr
   14648:	teq	ip, r0
   1464c:	rsbmi	r0, r0, #0
   14650:	bx	lr
   14654:	movcc	r0, #0
   14658:	asreq	r0, ip, #31
   1465c:	orreq	r0, r0, #1
   14660:	bx	lr
   14664:	clz	r2, r1
   14668:	rsb	r2, r2, #31
   1466c:	cmp	ip, #0
   14670:	lsr	r0, r3, r2
   14674:	rsbmi	r0, r0, #0
   14678:	bx	lr
   1467c:	cmp	r0, #0
   14680:	mvngt	r0, #-2147483648	; 0x80000000
   14684:	movlt	r0, #-2147483648	; 0x80000000
   14688:	b	146ac <abort@plt+0x3974>
   1468c:	cmp	r1, #0
   14690:	beq	1467c <abort@plt+0x3944>
   14694:	push	{r0, r1, lr}
   14698:	bl	14474 <abort@plt+0x373c>
   1469c:	pop	{r1, r2, lr}
   146a0:	mul	r3, r2, r0
   146a4:	sub	r1, r1, r3
   146a8:	bx	lr
   146ac:	push	{r1, lr}
   146b0:	mov	r0, #8
   146b4:	bl	10b40 <raise@plt>
   146b8:	pop	{r1, pc}
   146bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146c0:	mov	r7, r0
   146c4:	ldr	r6, [pc, #72]	; 14714 <abort@plt+0x39dc>
   146c8:	ldr	r5, [pc, #72]	; 14718 <abort@plt+0x39e0>
   146cc:	add	r6, pc, r6
   146d0:	add	r5, pc, r5
   146d4:	sub	r6, r6, r5
   146d8:	mov	r8, r1
   146dc:	mov	r9, r2
   146e0:	bl	10b08 <calloc@plt-0x20>
   146e4:	asrs	r6, r6, #2
   146e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   146ec:	mov	r4, #0
   146f0:	add	r4, r4, #1
   146f4:	ldr	r3, [r5], #4
   146f8:	mov	r2, r9
   146fc:	mov	r1, r8
   14700:	mov	r0, r7
   14704:	blx	r3
   14708:	cmp	r6, r4
   1470c:	bne	146f0 <abort@plt+0x39b8>
   14710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14714:	andeq	r1, r1, ip, lsr r8
   14718:	andeq	r1, r1, r4, lsr r8
   1471c:	bx	lr
   14720:	ldr	r3, [pc, #12]	; 14734 <abort@plt+0x39fc>
   14724:	mov	r1, #0
   14728:	add	r3, pc, r3
   1472c:	ldr	r2, [r3]
   14730:	b	10c9c <__cxa_atexit@plt>
   14734:	muleq	r1, r8, r9

Disassembly of section .fini:

00014738 <.fini>:
   14738:	push	{r3, lr}
   1473c:	pop	{r3, pc}
