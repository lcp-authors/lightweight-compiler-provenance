
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	108e0 <_start@@Base+0x3c>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <strcmp@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <strcmp@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r0, r1, r0, asr #17

00010744 <strcmp@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <__isoc99_fscanf@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <fopen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <free@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <realloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <fwrite@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <strcpy@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <malloc@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <__libc_start_main@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #16, 20	; 0x10000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <strlen@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #16, 20	; 0x10000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <fprintf@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #16, 20	; 0x10000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <fclose@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #16, 20	; 0x10000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <abort@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #16, 20	; 0x10000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107ec <main@@Base>:
   107ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   107f0:	sub	sp, sp, #12
   107f4:	ldr	r1, [pc, #148]	; 10890 <main@@Base+0xa4>
   107f8:	ldr	r0, [pc, #148]	; 10894 <main@@Base+0xa8>
   107fc:	bl	1075c <fopen@plt>
   10800:	add	r1, sp, #8
   10804:	mov	r5, #0
   10808:	str	r5, [r1, #-4]!
   1080c:	ldr	r6, [pc, #132]	; 10898 <main@@Base+0xac>
   10810:	mov	r8, r0
   10814:	bl	109cc <conta_vitorias@@Base>
   10818:	ldr	r3, [r6]
   1081c:	mov	r2, #12
   10820:	mov	r1, #1
   10824:	mov	r9, r0
   10828:	ldr	r0, [pc, #108]	; 1089c <main@@Base+0xb0>
   1082c:	bl	10780 <fwrite@plt>
   10830:	cmp	r9, r5
   10834:	beq	10874 <main@@Base+0x88>
   10838:	ldr	r3, [sp, #4]
   1083c:	cmp	r3, r5
   10840:	ble	10874 <main@@Base+0x88>
   10844:	ldr	r7, [pc, #84]	; 108a0 <main@@Base+0xb4>
   10848:	mov	r4, r9
   1084c:	ldr	r3, [r4, #16]
   10850:	mov	r2, r4
   10854:	mov	r1, r7
   10858:	ldr	r0, [r6]
   1085c:	bl	107c8 <fprintf@plt>
   10860:	ldr	r3, [sp, #4]
   10864:	add	r5, r5, #1
   10868:	cmp	r3, r5
   1086c:	add	r4, r4, #20
   10870:	bgt	1084c <main@@Base+0x60>
   10874:	mov	r0, r9
   10878:	bl	10768 <free@plt>
   1087c:	mov	r0, r8
   10880:	bl	107d4 <fclose@plt>
   10884:	mov	r0, #0
   10888:	add	sp, sp, #12
   1088c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10890:	andeq	r0, r1, r8, ror #23
   10894:	andeq	r0, r1, ip, ror #23
   10898:	andeq	r1, r2, r0, asr r0
   1089c:	strdeq	r0, [r1], -r4
   108a0:	andeq	r0, r1, r4, lsl #24

000108a4 <_start@@Base>:
   108a4:	mov	fp, #0
   108a8:	mov	lr, #0
   108ac:	pop	{r1}		; (ldr r1, [sp], #4)
   108b0:	mov	r2, sp
   108b4:	push	{r2}		; (str r2, [sp, #-4]!)
   108b8:	push	{r0}		; (str r0, [sp, #-4]!)
   108bc:	ldr	ip, [pc, #16]	; 108d4 <_start@@Base+0x30>
   108c0:	push	{ip}		; (str ip, [sp, #-4]!)
   108c4:	ldr	r0, [pc, #12]	; 108d8 <_start@@Base+0x34>
   108c8:	ldr	r3, [pc, #12]	; 108dc <_start@@Base+0x38>
   108cc:	bl	107a4 <__libc_start_main@plt>
   108d0:	bl	107e0 <abort@plt>
   108d4:	ldrdeq	r0, [r1], -r4
   108d8:	andeq	r0, r1, ip, ror #15
   108dc:	andeq	r0, r1, r4, ror fp
   108e0:	ldr	r3, [pc, #20]	; 108fc <_start@@Base+0x58>
   108e4:	ldr	r2, [pc, #20]	; 10900 <_start@@Base+0x5c>
   108e8:	add	r3, pc, r3
   108ec:	ldr	r2, [r3, r2]
   108f0:	cmp	r2, #0
   108f4:	bxeq	lr
   108f8:	b	107b0 <__gmon_start__@plt>
   108fc:	andeq	r0, r1, r0, lsl r7
   10900:	andeq	r0, r0, r4, asr #32
   10904:	ldr	r3, [pc, #28]	; 10928 <_start@@Base+0x84>
   10908:	ldr	r0, [pc, #28]	; 1092c <_start@@Base+0x88>
   1090c:	sub	r3, r3, r0
   10910:	cmp	r3, #6
   10914:	bxls	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <_start@@Base+0x8c>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r1, r2, r3, asr r0
   1092c:	andeq	r1, r2, r0, asr r0
   10930:	andeq	r0, r0, r0
   10934:	ldr	r1, [pc, #36]	; 10960 <_start@@Base+0xbc>
   10938:	ldr	r0, [pc, #36]	; 10964 <_start@@Base+0xc0>
   1093c:	sub	r1, r1, r0
   10940:	asr	r1, r1, #2
   10944:	add	r1, r1, r1, lsr #31
   10948:	asrs	r1, r1, #1
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <_start@@Base+0xc4>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r1, r2, r0, asr r0
   10964:	andeq	r1, r2, r0, asr r0
   10968:	andeq	r0, r0, r0
   1096c:	push	{r4, lr}
   10970:	ldr	r4, [pc, #24]	; 10990 <_start@@Base+0xec>
   10974:	ldrb	r3, [r4]
   10978:	cmp	r3, #0
   1097c:	popne	{r4, pc}
   10980:	bl	10904 <_start@@Base+0x60>
   10984:	mov	r3, #1
   10988:	strb	r3, [r4]
   1098c:	pop	{r4, pc}
   10990:	andeq	r1, r2, r4, asr r0
   10994:	ldr	r0, [pc, #40]	; 109c4 <_start@@Base+0x120>
   10998:	ldr	r3, [r0]
   1099c:	cmp	r3, #0
   109a0:	bne	109a8 <_start@@Base+0x104>
   109a4:	b	10934 <_start@@Base+0x90>
   109a8:	ldr	r3, [pc, #24]	; 109c8 <_start@@Base+0x124>
   109ac:	cmp	r3, #0
   109b0:	beq	109a4 <_start@@Base+0x100>
   109b4:	push	{r4, lr}
   109b8:	blx	r3
   109bc:	pop	{r4, lr}
   109c0:	b	10934 <_start@@Base+0x90>
   109c4:	andeq	r0, r2, r4, lsl pc
   109c8:	andeq	r0, r0, r0

000109cc <conta_vitorias@@Base>:
   109cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109d0:	mov	sl, r0
   109d4:	sub	sp, sp, #44	; 0x2c
   109d8:	mov	r0, #20
   109dc:	mov	r7, r1
   109e0:	bl	10798 <malloc@plt>
   109e4:	subs	r6, r0, #0
   109e8:	beq	10b60 <conta_vitorias@@Base+0x194>
   109ec:	ldr	r9, [pc, #380]	; 10b70 <conta_vitorias@@Base+0x1a4>
   109f0:	mov	r8, #0
   109f4:	str	r8, [r7]
   109f8:	add	r2, sp, #4
   109fc:	mov	r1, r9
   10a00:	mov	r0, sl
   10a04:	bl	10750 <__isoc99_fscanf@plt>
   10a08:	cmp	r0, #1
   10a0c:	bne	10abc <conta_vitorias@@Base+0xf0>
   10a10:	add	r0, sp, #4
   10a14:	bl	107bc <strlen@plt>
   10a18:	ldr	r5, [r7]
   10a1c:	add	r3, sp, #40	; 0x28
   10a20:	cmp	r5, #0
   10a24:	add	r0, r3, r0
   10a28:	strb	r8, [r0, #-36]	; 0xffffffdc
   10a2c:	ble	10a70 <conta_vitorias@@Base+0xa4>
   10a30:	mov	r4, r6
   10a34:	mov	fp, #0
   10a38:	b	10a48 <conta_vitorias@@Base+0x7c>
   10a3c:	cmp	fp, r5
   10a40:	add	r4, r4, #20
   10a44:	beq	10a74 <conta_vitorias@@Base+0xa8>
   10a48:	mov	r1, r4
   10a4c:	add	r0, sp, #4
   10a50:	bl	10744 <strcmp@plt>
   10a54:	add	fp, fp, #1
   10a58:	cmp	r0, #0
   10a5c:	bne	10a3c <conta_vitorias@@Base+0x70>
   10a60:	ldr	r3, [r4, #16]
   10a64:	add	r3, r3, #1
   10a68:	str	r3, [r4, #16]
   10a6c:	b	109f8 <conta_vitorias@@Base+0x2c>
   10a70:	mov	fp, #0
   10a74:	add	r5, r5, #1
   10a78:	mov	r0, r6
   10a7c:	add	r5, r5, r5, lsl #2
   10a80:	lsl	r1, r5, #2
   10a84:	bl	10774 <realloc@plt>
   10a88:	subs	r6, r0, #0
   10a8c:	beq	10b60 <conta_vitorias@@Base+0x194>
   10a90:	add	r3, fp, fp, lsl #2
   10a94:	add	r1, sp, #4
   10a98:	add	r3, r6, r3, lsl #2
   10a9c:	mov	r0, r3
   10aa0:	bl	1078c <strcpy@plt>
   10aa4:	ldr	r2, [r7]
   10aa8:	mov	r1, #1
   10aac:	add	r3, r2, r1
   10ab0:	str	r3, [r7]
   10ab4:	str	r1, [r0, #16]
   10ab8:	b	109f8 <conta_vitorias@@Base+0x2c>
   10abc:	ldr	sl, [r7]
   10ac0:	cmp	sl, #1
   10ac4:	ble	10b54 <conta_vitorias@@Base+0x188>
   10ac8:	add	r8, r6, #20
   10acc:	mov	r9, #1
   10ad0:	mov	fp, #0
   10ad4:	mov	lr, r8
   10ad8:	add	ip, sp, #20
   10adc:	ldm	lr!, {r0, r1, r2, r3}
   10ae0:	mov	r4, r8
   10ae4:	ldr	r7, [r8, #16]
   10ae8:	mov	r5, r9
   10aec:	stmia	ip!, {r0, r1, r2, r3}
   10af0:	str	r7, [ip]
   10af4:	ldr	r3, [r4, #-4]
   10af8:	sub	lr, r4, #20
   10afc:	cmp	r7, r3
   10b00:	mov	ip, r4
   10b04:	sub	r2, r4, r6
   10b08:	ble	10b2c <conta_vitorias@@Base+0x160>
   10b0c:	ldm	lr!, {r0, r1, r2, r3}
   10b10:	subs	r5, r5, #1
   10b14:	sub	r4, r4, #20
   10b18:	stmia	ip!, {r0, r1, r2, r3}
   10b1c:	ldr	r3, [lr]
   10b20:	str	r3, [ip]
   10b24:	bne	10af4 <conta_vitorias@@Base+0x128>
   10b28:	mov	r2, fp
   10b2c:	add	lr, sp, #20
   10b30:	add	ip, r6, r2
   10b34:	ldm	lr!, {r0, r1, r2, r3}
   10b38:	add	r9, r9, #1
   10b3c:	cmp	sl, r9
   10b40:	add	r8, r8, #20
   10b44:	ldr	lr, [lr]
   10b48:	stmia	ip!, {r0, r1, r2, r3}
   10b4c:	str	lr, [ip]
   10b50:	bne	10ad4 <conta_vitorias@@Base+0x108>
   10b54:	mov	r0, r6
   10b58:	add	sp, sp, #44	; 0x2c
   10b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b60:	mov	r6, #0
   10b64:	mov	r0, r6
   10b68:	add	sp, sp, #44	; 0x2c
   10b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b70:	andeq	r0, r1, r4, ror #23

00010b74 <__libc_csu_init@@Base>:
   10b74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b78:	mov	r7, r0
   10b7c:	ldr	r6, [pc, #72]	; 10bcc <__libc_csu_init@@Base+0x58>
   10b80:	ldr	r5, [pc, #72]	; 10bd0 <__libc_csu_init@@Base+0x5c>
   10b84:	add	r6, pc, r6
   10b88:	add	r5, pc, r5
   10b8c:	sub	r6, r6, r5
   10b90:	mov	r8, r1
   10b94:	mov	r9, r2
   10b98:	bl	10724 <strcmp@plt-0x20>
   10b9c:	asrs	r6, r6, #2
   10ba0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ba4:	mov	r4, #0
   10ba8:	add	r4, r4, #1
   10bac:	ldr	r3, [r5], #4
   10bb0:	mov	r2, r9
   10bb4:	mov	r1, r8
   10bb8:	mov	r0, r7
   10bbc:	blx	r3
   10bc0:	cmp	r6, r4
   10bc4:	bne	10ba8 <__libc_csu_init@@Base+0x34>
   10bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bcc:	andeq	r0, r1, r4, lsl #7
   10bd0:	andeq	r0, r1, ip, ror r3

00010bd4 <__libc_csu_fini@@Base>:
   10bd4:	bx	lr

Disassembly of section .fini:

00010bd8 <.fini>:
   10bd8:	push	{r3, lr}
   10bdc:	pop	{r3, pc}
