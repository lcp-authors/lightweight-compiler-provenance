
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	12108 <dcngettext@plt+0x1118>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <fdopen@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <fdopen@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000182b4

00010d50 <fdopen@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #24, 20	; 0x18000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #24, 20	; 0x18000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #24, 20	; 0x18000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #24, 20	; 0x18000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <__getdelim@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #24, 20	; 0x18000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <strcmp@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #24, 20	; 0x18000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <posix_fadvise64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #24, 20	; 0x18000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <fflush@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #24, 20	; 0x18000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #24, 20	; 0x18000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <_exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #24, 20	; 0x18000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #24, 20	; 0x18000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <mbsinit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #24, 20	; 0x18000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <fwrite_unlocked@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #24, 20	; 0x18000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <memcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #24, 20	; 0x18000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <fputc_unlocked@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #24, 20	; 0x18000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <dcgettext@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #24, 20	; 0x18000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <realloc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #24, 20	; 0x18000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <textdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #24, 20	; 0x18000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <iswprint@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #24, 20	; 0x18000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <fwrite@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #24, 20	; 0x18000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <lseek64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #24, 20	; 0x18000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <__ctype_get_mb_cur_max@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #24, 20	; 0x18000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <__fpending@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #24, 20	; 0x18000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <mbrtowc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #24, 20	; 0x18000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <error@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #24, 20	; 0x18000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <malloc@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #24, 20	; 0x18000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <__libc_start_main@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #24, 20	; 0x18000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <__freading@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #24, 20	; 0x18000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__ctype_tolower_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #24, 20	; 0x18000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__gmon_start__@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #24, 20	; 0x18000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <getopt_long@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #24, 20	; 0x18000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <__ctype_b_loc@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #24, 20	; 0x18000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <exit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #24, 20	; 0x18000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <strlen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #24, 20	; 0x18000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <strchr@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #24, 20	; 0x18000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <__errno_location@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #24, 20	; 0x18000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <__cxa_atexit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #24, 20	; 0x18000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <setvbuf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #24, 20	; 0x18000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <memset@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #24, 20	; 0x18000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__printf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #24, 20	; 0x18000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <fileno@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #24, 20	; 0x18000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #24, 20	; 0x18000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #24, 20	; 0x18000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #24, 20	; 0x18000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <fcntl64@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #24, 20	; 0x18000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <__overflow@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #24, 20	; 0x18000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <setlocale@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #24, 20	; 0x18000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <strrchr@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #24, 20	; 0x18000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <nl_langinfo@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <clearerr_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <fopen64@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

00010fc0 <fread_unlocked@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #276]!	; 0x114

00010fcc <strncmp@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #268]!	; 0x10c

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #260]!	; 0x104

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #252]!	; 0xfc

00010ff0 <dcngettext@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #244]!	; 0xf4

Disassembly of section .text:

00010ffc <.text>:
   10ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11000:	mov	r6, r0
   11004:	sub	sp, sp, #164	; 0xa4
   11008:	ldr	r0, [r1]
   1100c:	mov	r5, r1
   11010:	bl	13bcc <dcngettext@plt+0x2bdc>
   11014:	ldr	r1, [pc, #3952]	; 11f8c <dcngettext@plt+0xf9c>
   11018:	mov	r0, #6
   1101c:	bl	10f78 <setlocale@plt>
   11020:	ldr	r1, [pc, #3944]	; 11f90 <dcngettext@plt+0xfa0>
   11024:	ldr	r0, [pc, #3944]	; 11f94 <dcngettext@plt+0xfa4>
   11028:	bl	10fb4 <bindtextdomain@plt>
   1102c:	ldr	r0, [pc, #3936]	; 11f94 <dcngettext@plt+0xfa4>
   11030:	bl	10e1c <textdomain@plt>
   11034:	ldr	r0, [pc, #3932]	; 11f98 <dcngettext@plt+0xfa8>
   11038:	bl	17064 <dcngettext@plt+0x6074>
   1103c:	ldr	r2, [pc, #3928]	; 11f9c <dcngettext@plt+0xfac>
   11040:	mov	r3, #0
   11044:	ldr	r8, [pc, #3924]	; 11fa0 <dcngettext@plt+0xfb0>
   11048:	ldr	r7, [pc, #3924]	; 11fa4 <dcngettext@plt+0xfb4>
   1104c:	ldr	r9, [pc, #3924]	; 11fa8 <dcngettext@plt+0xfb8>
   11050:	ldr	fp, [pc, #3924]	; 11fac <dcngettext@plt+0xfbc>
   11054:	ldr	r0, [r2]
   11058:	mov	r1, r3
   1105c:	mov	r2, #1
   11060:	mov	sl, #1
   11064:	mov	r4, r3
   11068:	str	r3, [sp, #40]	; 0x28
   1106c:	bl	10f0c <setvbuf@plt>
   11070:	mvn	r3, #0
   11074:	str	r4, [sp, #20]
   11078:	str	r3, [sp, #24]
   1107c:	mov	r4, #0
   11080:	str	r4, [sp]
   11084:	mov	r3, r8
   11088:	mov	r2, r7
   1108c:	mov	r1, r5
   11090:	mov	r0, r6
   11094:	bl	10eb8 <getopt_long@plt>
   11098:	cmn	r0, #1
   1109c:	beq	111f0 <dcngettext@plt+0x200>
   110a0:	cmp	r0, #119	; 0x77
   110a4:	beq	111e0 <dcngettext@plt+0x1f0>
   110a8:	ble	110e0 <dcngettext@plt+0xf0>
   110ac:	cmp	r0, fp
   110b0:	beq	111d0 <dcngettext@plt+0x1e0>
   110b4:	ble	1111c <dcngettext@plt+0x12c>
   110b8:	ldr	r3, [pc, #3824]	; 11fb0 <dcngettext@plt+0xfc0>
   110bc:	cmp	r0, r3
   110c0:	beq	111c8 <dcngettext@plt+0x1d8>
   110c4:	blt	11178 <dcngettext@plt+0x188>
   110c8:	cmp	r0, #260	; 0x104
   110cc:	bne	111c0 <dcngettext@plt+0x1d0>
   110d0:	mov	r3, #1
   110d4:	str	sl, [sp, #40]	; 0x28
   110d8:	str	r3, [sp, #24]
   110dc:	b	1107c <dcngettext@plt+0x8c>
   110e0:	cmp	r0, #98	; 0x62
   110e4:	beq	11194 <dcngettext@plt+0x1a4>
   110e8:	bgt	11104 <dcngettext@plt+0x114>
   110ec:	cmn	r0, #3
   110f0:	beq	1113c <dcngettext@plt+0x14c>
   110f4:	cmn	r0, #2
   110f8:	bne	111c0 <dcngettext@plt+0x1d0>
   110fc:	mov	r0, r4
   11100:	bl	12594 <dcngettext@plt+0x15a4>
   11104:	cmp	r0, #99	; 0x63
   11108:	beq	11134 <dcngettext@plt+0x144>
   1110c:	cmp	r0, #116	; 0x74
   11110:	bne	111c0 <dcngettext@plt+0x1d0>
   11114:	str	r4, [sp, #24]
   11118:	b	1107c <dcngettext@plt+0x8c>
   1111c:	cmp	r0, #122	; 0x7a
   11120:	beq	11188 <dcngettext@plt+0x198>
   11124:	cmp	r0, #256	; 0x100
   11128:	bne	111c0 <dcngettext@plt+0x1d0>
   1112c:	strb	sl, [r9, #5]
   11130:	b	1107c <dcngettext@plt+0x8c>
   11134:	str	sl, [sp, #20]
   11138:	b	1107c <dcngettext@plt+0x8c>
   1113c:	ldr	ip, [pc, #3696]	; 11fb4 <dcngettext@plt+0xfc4>
   11140:	ldr	r1, [pc, #3696]	; 11fb8 <dcngettext@plt+0xfc8>
   11144:	ldr	r3, [pc, #3696]	; 11fbc <dcngettext@plt+0xfcc>
   11148:	ldr	r0, [pc, #3660]	; 11f9c <dcngettext@plt+0xfac>
   1114c:	ldr	r2, [pc, #3692]	; 11fc0 <dcngettext@plt+0xfd0>
   11150:	str	r4, [sp, #12]
   11154:	ldr	r0, [r0]
   11158:	ldr	r3, [r3]
   1115c:	stmib	sp, {r1, ip}
   11160:	str	r2, [sp]
   11164:	ldr	r1, [pc, #3672]	; 11fc4 <dcngettext@plt+0xfd4>
   11168:	ldr	r2, [pc, #3672]	; 11fc8 <dcngettext@plt+0xfd8>
   1116c:	bl	15ed4 <dcngettext@plt+0x4ee4>
   11170:	mov	r0, r4
   11174:	bl	10ed0 <exit@plt>
   11178:	strb	r4, [r9, #6]
   1117c:	strb	r4, [r9, #7]
   11180:	strb	sl, [r9, #8]
   11184:	b	1107c <dcngettext@plt+0x8c>
   11188:	ldr	r3, [pc, #3644]	; 11fcc <dcngettext@plt+0xfdc>
   1118c:	strb	r4, [r3]
   11190:	b	1107c <dcngettext@plt+0x8c>
   11194:	mov	r3, #1
   11198:	str	r3, [sp, #24]
   1119c:	b	1107c <dcngettext@plt+0x8c>
   111a0:	ldr	r1, [pc, #3624]	; 11fd0 <dcngettext@plt+0xfe0>
   111a4:	mov	r2, #5
   111a8:	mov	r0, r4
   111ac:	bl	10e04 <dcgettext@plt>
   111b0:	mov	r1, r4
   111b4:	mov	r2, r0
   111b8:	mov	r0, r4
   111bc:	bl	10e70 <error@plt>
   111c0:	mov	r0, #1
   111c4:	bl	12594 <dcngettext@plt+0x15a4>
   111c8:	strb	sl, [r9, #9]
   111cc:	b	1107c <dcngettext@plt+0x8c>
   111d0:	strb	sl, [r9, #6]
   111d4:	strb	r4, [r9, #7]
   111d8:	strb	r4, [r9, #8]
   111dc:	b	1107c <dcngettext@plt+0x8c>
   111e0:	strb	r4, [r9, #6]
   111e4:	strb	sl, [r9, #7]
   111e8:	strb	r4, [r9, #8]
   111ec:	b	1107c <dcngettext@plt+0x8c>
   111f0:	ldr	r9, [pc, #3504]	; 11fa8 <dcngettext@plt+0xfb8>
   111f4:	ldr	r3, [sp, #24]
   111f8:	ldr	r7, [sp, #40]	; 0x28
   111fc:	cmp	r3, r4
   11200:	movne	r7, #0
   11204:	andeq	r7, r7, #1
   11208:	mov	r3, #34	; 0x22
   1120c:	str	r3, [r9, #12]
   11210:	cmp	r7, r4
   11214:	mov	r3, #32
   11218:	str	r3, [r9]
   1121c:	bne	111a0 <dcngettext@plt+0x1b0>
   11220:	ldr	r3, [pc, #3492]	; 11fcc <dcngettext@plt+0xfdc>
   11224:	ldrb	r4, [r3]
   11228:	ldr	r3, [sp, #20]
   1122c:	cmp	r4, #10
   11230:	moveq	r3, #0
   11234:	andne	r3, r3, #1
   11238:	cmp	r3, #0
   1123c:	mov	r4, r3
   11240:	movne	r2, #5
   11244:	ldrne	r1, [pc, #3464]	; 11fd4 <dcngettext@plt+0xfe4>
   11248:	bne	120ac <dcngettext@plt+0x10bc>
   1124c:	ldr	r2, [sp, #40]	; 0x28
   11250:	ldr	r3, [sp, #20]
   11254:	ands	r7, r3, r2
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3444]	; 11fd8 <dcngettext@plt+0xfe8>
   11260:	bne	111a8 <dcngettext@plt+0x1b8>
   11264:	ldr	r2, [sp, #24]
   11268:	ldr	r3, [sp, #20]
   1126c:	cmp	r2, #0
   11270:	movlt	r3, #0
   11274:	andge	r3, r3, #1
   11278:	cmp	r3, #0
   1127c:	movne	r2, #5
   11280:	ldrne	r1, [pc, #3412]	; 11fdc <dcngettext@plt+0xfec>
   11284:	bne	120ac <dcngettext@plt+0x10bc>
   11288:	ldrb	r3, [r9, #5]
   1128c:	ldr	r2, [sp, #20]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3388]	; 11fe0 <dcngettext@plt+0xff0>
   112a0:	beq	111a8 <dcngettext@plt+0x1b8>
   112a4:	ldrb	r3, [r9, #6]
   112a8:	ldr	r2, [sp, #20]
   112ac:	eor	r3, r3, #1
   112b0:	orrs	r4, r2, r3
   112b4:	moveq	r2, #5
   112b8:	ldreq	r1, [pc, #3364]	; 11fe4 <dcngettext@plt+0xff4>
   112bc:	beq	111a8 <dcngettext@plt+0x1b8>
   112c0:	ldrb	r3, [r9, #7]
   112c4:	ldr	r2, [sp, #20]
   112c8:	eor	r3, r3, #1
   112cc:	orrs	r4, r2, r3
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #3340]	; 11fe8 <dcngettext@plt+0xff8>
   112d8:	beq	111a8 <dcngettext@plt+0x1b8>
   112dc:	ldrb	r3, [r9, #8]
   112e0:	ldr	r2, [sp, #20]
   112e4:	eor	r3, r3, #1
   112e8:	orrs	r3, r2, r3
   112ec:	str	r3, [sp, #48]	; 0x30
   112f0:	moveq	r2, #5
   112f4:	ldreq	r1, [pc, #3312]	; 11fec <dcngettext@plt+0xffc>
   112f8:	moveq	r4, r3
   112fc:	beq	111a8 <dcngettext@plt+0x1b8>
   11300:	ldrb	r2, [r9, #9]
   11304:	ldr	r3, [sp, #20]
   11308:	eor	r3, r3, #1
   1130c:	ands	r3, r2, r3
   11310:	str	r3, [sp, #44]	; 0x2c
   11314:	bne	120a4 <dcngettext@plt+0x10b4>
   11318:	ldr	r3, [pc, #3280]	; 11ff0 <dcngettext@plt+0x1000>
   1131c:	ldr	r1, [sp, #24]
   11320:	ldr	r3, [r3]
   11324:	cmn	r1, #1
   11328:	mov	r2, r1
   1132c:	moveq	r2, #0
   11330:	str	r2, [sp, #24]
   11334:	cmp	r6, r3
   11338:	add	r2, r5, r6, lsl #2
   1133c:	str	r2, [sp, #64]	; 0x40
   11340:	addeq	r2, r2, #4
   11344:	streq	r2, [sp, #64]	; 0x40
   11348:	ldreq	r2, [pc, #3236]	; 11ff4 <dcngettext@plt+0x1004>
   1134c:	streq	r2, [r5, r3, lsl #2]
   11350:	ldr	r2, [sp, #24]
   11354:	add	r3, r5, r3, lsl #2
   11358:	cmp	r2, #0
   1135c:	movne	r2, #42	; 0x2a
   11360:	moveq	r2, #32
   11364:	str	r3, [sp, #28]
   11368:	uxtb	r3, r2
   1136c:	str	r2, [sp, #100]	; 0x64
   11370:	str	r3, [sp, #96]	; 0x60
   11374:	str	r9, [sp, #24]
   11378:	ldr	r3, [sp, #64]	; 0x40
   1137c:	ldr	r2, [sp, #28]
   11380:	cmp	r3, r2
   11384:	bls	11cec <dcngettext@plt+0xcfc>
   11388:	ldr	r3, [sp, #20]
   1138c:	cmp	r3, #0
   11390:	ldr	r3, [sp, #28]
   11394:	ldr	r5, [r3], #4
   11398:	str	r3, [sp, #28]
   1139c:	beq	117e4 <dcngettext@plt+0x7f4>
   113a0:	ldr	r1, [pc, #3148]	; 11ff4 <dcngettext@plt+0x1004>
   113a4:	mov	r0, r5
   113a8:	bl	10d8c <strcmp@plt>
   113ac:	subs	r3, r0, #0
   113b0:	str	r3, [sp, #52]	; 0x34
   113b4:	bne	11a24 <dcngettext@plt+0xa34>
   113b8:	ldr	ip, [sp, #24]
   113bc:	mov	r3, #1
   113c0:	mov	r2, #5
   113c4:	ldr	r1, [pc, #3116]	; 11ff8 <dcngettext@plt+0x1008>
   113c8:	strb	r3, [ip, #4]
   113cc:	bl	10e04 <dcgettext@plt>
   113d0:	ldr	r3, [pc, #3108]	; 11ffc <dcngettext@plt+0x100c>
   113d4:	ldr	fp, [r3]
   113d8:	str	r0, [sp, #68]	; 0x44
   113dc:	add	sl, sp, #160	; 0xa0
   113e0:	mov	r3, #0
   113e4:	mov	r0, #0
   113e8:	mov	r1, #0
   113ec:	str	r3, [sl, #-44]!	; 0xffffffd4
   113f0:	str	r3, [sp, #112]	; 0x70
   113f4:	ldr	r3, [sp, #44]	; 0x2c
   113f8:	strd	r0, [sp, #80]	; 0x50
   113fc:	strd	r0, [sp, #72]	; 0x48
   11400:	strd	r0, [sp, #32]
   11404:	str	r3, [sp, #92]	; 0x5c
   11408:	str	r3, [sp, #88]	; 0x58
   1140c:	mov	r8, #1
   11410:	mov	r9, #0
   11414:	b	11434 <dcngettext@plt+0x444>
   11418:	ldr	r3, [fp]
   1141c:	ands	r3, r3, #48	; 0x30
   11420:	bne	11804 <dcngettext@plt+0x814>
   11424:	adds	r8, r8, #1
   11428:	adc	r9, r9, #0
   1142c:	orrs	r2, r8, r9
   11430:	beq	11dd8 <dcngettext@plt+0xde8>
   11434:	mov	r3, fp
   11438:	mov	r2, #10
   1143c:	mov	r1, sl
   11440:	add	r0, sp, #112	; 0x70
   11444:	bl	10d80 <__getdelim@plt>
   11448:	subs	r4, r0, #0
   1144c:	ble	11804 <dcngettext@plt+0x814>
   11450:	ldr	r3, [sp, #112]	; 0x70
   11454:	ldrb	r2, [r3]
   11458:	cmp	r2, #35	; 0x23
   1145c:	beq	11418 <dcngettext@plt+0x428>
   11460:	add	r2, r3, r4
   11464:	ldrb	r0, [r2, #-1]
   11468:	cmp	r0, #10
   1146c:	subeq	r4, r4, #1
   11470:	cmp	r4, #0
   11474:	movle	r2, r4
   11478:	subgt	r2, r4, #1
   1147c:	ldrb	r0, [r3, r2]
   11480:	cmp	r0, #13
   11484:	subeq	r4, r4, #1
   11488:	cmp	r4, #0
   1148c:	beq	11418 <dcngettext@plt+0x428>
   11490:	mov	r6, #0
   11494:	strb	r6, [r3, r4]
   11498:	ldr	r7, [sp, #112]	; 0x70
   1149c:	ldrb	r2, [r7]
   114a0:	cmp	r2, #32
   114a4:	cmpne	r2, #9
   114a8:	moveq	r1, #1
   114ac:	movne	r1, #0
   114b0:	bne	11ce4 <dcngettext@plt+0xcf4>
   114b4:	mov	r1, r7
   114b8:	ldrb	r2, [r1, #1]!
   114bc:	add	r6, r6, #1
   114c0:	cmp	r2, #9
   114c4:	cmpne	r2, #32
   114c8:	beq	114b8 <dcngettext@plt+0x4c8>
   114cc:	cmp	r2, #92	; 0x5c
   114d0:	addeq	r6, r6, #1
   114d4:	ldreq	r3, [sp, #20]
   114d8:	ldrne	r3, [sp, #44]	; 0x2c
   114dc:	add	r5, r7, r6
   114e0:	mov	r0, r5
   114e4:	mov	r2, #3
   114e8:	ldr	r1, [pc, #2832]	; 12000 <dcngettext@plt+0x1010>
   114ec:	str	r3, [sp, #60]	; 0x3c
   114f0:	bl	10fcc <strncmp@plt>
   114f4:	cmp	r0, #0
   114f8:	bne	11650 <dcngettext@plt+0x660>
   114fc:	add	r2, r6, #3
   11500:	ldrb	r1, [r7, r2]
   11504:	cmp	r1, #32
   11508:	addeq	r2, r6, #4
   1150c:	ldrb	r1, [r7, r2]
   11510:	cmp	r1, #40	; 0x28
   11514:	bne	115e8 <dcngettext@plt+0x5f8>
   11518:	add	r1, r2, #1
   1151c:	subs	r4, r4, r1
   11520:	beq	115e8 <dcngettext@plt+0x5f8>
   11524:	add	r3, r7, r1
   11528:	sub	r4, r4, #1
   1152c:	str	r3, [sp, #56]	; 0x38
   11530:	add	r2, r3, r4
   11534:	b	1154c <dcngettext@plt+0x55c>
   11538:	mov	r5, r2
   1153c:	sub	r2, r2, #1
   11540:	ldrb	r0, [r5]
   11544:	cmp	r0, #41	; 0x29
   11548:	beq	1156c <dcngettext@plt+0x57c>
   1154c:	cmp	r3, r2
   11550:	sub	r4, r2, r3
   11554:	bne	11538 <dcngettext@plt+0x548>
   11558:	ldrb	r3, [r7, r1]
   1155c:	cmp	r3, #41	; 0x29
   11560:	bne	115e8 <dcngettext@plt+0x5f8>
   11564:	ldr	r5, [sp, #56]	; 0x38
   11568:	mov	r4, #0
   1156c:	ldr	r3, [sp, #60]	; 0x3c
   11570:	cmp	r3, #0
   11574:	bne	115d4 <dcngettext@plt+0x5e4>
   11578:	mov	r3, #0
   1157c:	add	r4, r4, #1
   11580:	strb	r3, [r5]
   11584:	ldr	r2, [sp, #56]	; 0x38
   11588:	b	11590 <dcngettext@plt+0x5a0>
   1158c:	add	r4, r4, #1
   11590:	ldrb	r3, [r2, r4]
   11594:	cmp	r3, #9
   11598:	cmpne	r3, #32
   1159c:	beq	1158c <dcngettext@plt+0x59c>
   115a0:	cmp	r3, #61	; 0x3d
   115a4:	bne	115e8 <dcngettext@plt+0x5f8>
   115a8:	ldr	r3, [sp, #56]	; 0x38
   115ac:	add	r4, r4, #1
   115b0:	add	r3, r3, r4
   115b4:	mov	r5, r3
   115b8:	ldrb	r2, [r3], #1
   115bc:	cmp	r2, #9
   115c0:	cmpne	r2, #32
   115c4:	beq	115b4 <dcngettext@plt+0x5c4>
   115c8:	mov	r0, r5
   115cc:	bl	122b0 <dcngettext@plt+0x12c0>
   115d0:	b	11710 <dcngettext@plt+0x720>
   115d4:	mov	r1, r4
   115d8:	ldr	r0, [sp, #56]	; 0x38
   115dc:	bl	121f4 <dcngettext@plt+0x1204>
   115e0:	cmp	r0, #0
   115e4:	bne	11578 <dcngettext@plt+0x588>
   115e8:	ldr	r3, [sp, #24]
   115ec:	ldrd	r0, [sp, #32]
   115f0:	ldrb	r3, [r3, #7]
   115f4:	adds	r0, r0, #1
   115f8:	adc	r1, r1, #0
   115fc:	cmp	r3, #0
   11600:	strd	r0, [sp, #32]
   11604:	beq	11418 <dcngettext@plt+0x428>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #2544]	; 12004 <dcngettext@plt+0x1014>
   11610:	mov	r0, #0
   11614:	bl	10e04 <dcgettext@plt>
   11618:	ldr	r2, [sp, #68]	; 0x44
   1161c:	mov	r1, #3
   11620:	mov	r4, r0
   11624:	mov	r0, #0
   11628:	bl	15908 <dcngettext@plt+0x4918>
   1162c:	ldr	r3, [pc, #2508]	; 12000 <dcngettext@plt+0x1010>
   11630:	mov	r1, #0
   11634:	str	r3, [sp, #8]
   11638:	mov	r2, r4
   1163c:	strd	r8, [sp]
   11640:	mov	r3, r0
   11644:	mov	r0, r1
   11648:	bl	10e70 <error@plt>
   1164c:	b	11418 <dcngettext@plt+0x428>
   11650:	ldr	r3, [sp, #24]
   11654:	ldrb	r0, [r7, r6]
   11658:	sub	r1, r4, r6
   1165c:	ldr	r2, [r3, #12]
   11660:	cmp	r0, #92	; 0x5c
   11664:	addeq	r2, r2, #1
   11668:	cmp	r1, r2
   1166c:	bcc	115e8 <dcngettext@plt+0x5f8>
   11670:	ldr	r2, [r3]
   11674:	add	r6, r6, r2
   11678:	ldrb	r2, [r7, r6]
   1167c:	cmp	r2, #32
   11680:	cmpne	r2, #9
   11684:	movne	r2, #1
   11688:	moveq	r2, #0
   1168c:	bne	115e8 <dcngettext@plt+0x5f8>
   11690:	strb	r2, [r7, r6]
   11694:	mov	r0, r5
   11698:	bl	122b0 <dcngettext@plt+0x12c0>
   1169c:	cmp	r0, #0
   116a0:	beq	115e8 <dcngettext@plt+0x5f8>
   116a4:	add	r1, r6, #1
   116a8:	sub	r2, r4, r1
   116ac:	cmp	r2, #1
   116b0:	beq	116cc <dcngettext@plt+0x6dc>
   116b4:	ldrb	r2, [r7, r1]
   116b8:	cmp	r2, #32
   116bc:	cmpne	r2, #42	; 0x2a
   116c0:	movne	r2, #1
   116c4:	moveq	r2, #0
   116c8:	beq	11d44 <dcngettext@plt+0xd54>
   116cc:	ldr	r3, [pc, #2296]	; 11fcc <dcngettext@plt+0xfdc>
   116d0:	ldr	r2, [r3, #4]
   116d4:	cmp	r2, #0
   116d8:	movne	r2, #1
   116dc:	ldrne	r3, [pc, #2280]	; 11fcc <dcngettext@plt+0xfdc>
   116e0:	strne	r2, [r3, #4]
   116e4:	beq	115e8 <dcngettext@plt+0x5f8>
   116e8:	ldr	r3, [sp, #60]	; 0x3c
   116ec:	cmp	r3, #0
   116f0:	add	r3, r7, r1
   116f4:	str	r3, [sp, #56]	; 0x38
   116f8:	beq	11718 <dcngettext@plt+0x728>
   116fc:	sub	r1, r4, r1
   11700:	ldr	r0, [sp, #56]	; 0x38
   11704:	bl	121f4 <dcngettext@plt+0x1204>
   11708:	adds	r0, r0, #0
   1170c:	movne	r0, #1
   11710:	cmp	r0, #0
   11714:	beq	115e8 <dcngettext@plt+0x5f8>
   11718:	ldr	r3, [sp, #52]	; 0x34
   1171c:	cmp	r3, #0
   11720:	bne	11738 <dcngettext@plt+0x748>
   11724:	ldr	r1, [pc, #2248]	; 11ff4 <dcngettext@plt+0x1004>
   11728:	ldr	r0, [sp, #56]	; 0x38
   1172c:	bl	10d8c <strcmp@plt>
   11730:	cmp	r0, #0
   11734:	beq	115e8 <dcngettext@plt+0x5f8>
   11738:	ldr	r3, [sp, #24]
   1173c:	ldrb	r3, [r3, #6]
   11740:	cmp	r3, #0
   11744:	ldrne	r7, [sp, #44]	; 0x2c
   11748:	bne	11760 <dcngettext@plt+0x770>
   1174c:	mov	r1, #10
   11750:	ldr	r0, [sp, #56]	; 0x38
   11754:	bl	10ee8 <strchr@plt>
   11758:	adds	r7, r0, #0
   1175c:	movne	r7, #1
   11760:	add	r2, sp, #111	; 0x6f
   11764:	add	r1, sp, #140	; 0x8c
   11768:	ldr	r0, [sp, #56]	; 0x38
   1176c:	bl	12404 <dcngettext@plt+0x1414>
   11770:	and	r3, r7, #1
   11774:	str	r3, [sp, #60]	; 0x3c
   11778:	subs	r3, r0, #0
   1177c:	str	r3, [sp, #88]	; 0x58
   11780:	ldr	r3, [sp, #24]
   11784:	bne	11a70 <dcngettext@plt+0xa80>
   11788:	ldrd	r0, [sp, #72]	; 0x48
   1178c:	ldrb	r3, [r3, #6]
   11790:	adds	r0, r0, #1
   11794:	adc	r1, r1, #0
   11798:	cmp	r3, #0
   1179c:	strd	r0, [sp, #72]	; 0x48
   117a0:	bne	117d8 <dcngettext@plt+0x7e8>
   117a4:	cmp	r7, #0
   117a8:	bne	11d10 <dcngettext@plt+0xd20>
   117ac:	ldr	r1, [sp, #60]	; 0x3c
   117b0:	ldr	r0, [sp, #56]	; 0x38
   117b4:	bl	1230c <dcngettext@plt+0x131c>
   117b8:	ldr	r1, [pc, #2120]	; 12008 <dcngettext@plt+0x1018>
   117bc:	mov	r2, #5
   117c0:	mov	r0, #0
   117c4:	bl	10e04 <dcgettext@plt>
   117c8:	ldr	r1, [pc, #2108]	; 1200c <dcngettext@plt+0x101c>
   117cc:	mov	r2, r0
   117d0:	mov	r0, #1
   117d4:	bl	10f24 <__printf_chk@plt>
   117d8:	ldr	r3, [sp, #20]
   117dc:	str	r3, [sp, #88]	; 0x58
   117e0:	b	11418 <dcngettext@plt+0x428>
   117e4:	add	r2, sp, #140	; 0x8c
   117e8:	add	r1, sp, #120	; 0x78
   117ec:	mov	r0, r5
   117f0:	bl	12404 <dcngettext@plt+0x1414>
   117f4:	subs	r8, r0, #0
   117f8:	bne	11be0 <dcngettext@plt+0xbf0>
   117fc:	str	r8, [sp, #48]	; 0x30
   11800:	b	11378 <dcngettext@plt+0x388>
   11804:	ldr	r0, [sp, #112]	; 0x70
   11808:	bl	13ad4 <dcngettext@plt+0x2ae4>
   1180c:	ldr	r4, [fp]
   11810:	ldr	r3, [sp, #52]	; 0x34
   11814:	ands	r4, r4, #32
   11818:	mov	r0, fp
   1181c:	bne	11b7c <dcngettext@plt+0xb8c>
   11820:	cmp	r3, #0
   11824:	beq	11850 <dcngettext@plt+0x860>
   11828:	bl	1393c <dcngettext@plt+0x294c>
   1182c:	cmp	r0, #0
   11830:	beq	11854 <dcngettext@plt+0x864>
   11834:	bl	10ef4 <__errno_location@plt>
   11838:	ldr	r5, [r0]
   1183c:	cmp	r5, #0
   11840:	blt	11854 <dcngettext@plt+0x864>
   11844:	ldrne	r4, [pc, #1988]	; 12010 <dcngettext@plt+0x1020>
   11848:	bne	11ba0 <dcngettext@plt+0xbb0>
   1184c:	b	11b88 <dcngettext@plt+0xb98>
   11850:	bl	10f9c <clearerr_unlocked@plt>
   11854:	ldr	r3, [sp, #88]	; 0x58
   11858:	cmp	r3, #0
   1185c:	beq	11d98 <dcngettext@plt+0xda8>
   11860:	ldr	r3, [sp, #24]
   11864:	ldrb	r3, [r3, #6]
   11868:	cmp	r3, #0
   1186c:	bne	119dc <dcngettext@plt+0x9ec>
   11870:	ldrd	r0, [sp, #32]
   11874:	mov	r2, r0
   11878:	mov	r3, r1
   1187c:	orrs	r3, r2, r3
   11880:	beq	118e0 <dcngettext@plt+0x8f0>
   11884:	mov	r3, #0
   11888:	cmp	r1, r3
   1188c:	mvn	r2, #0
   11890:	cmpeq	r0, r2
   11894:	ldrls	r3, [sp, #32]
   11898:	bls	118b0 <dcngettext@plt+0x8c0>
   1189c:	ldr	r2, [pc, #1904]	; 12014 <dcngettext@plt+0x1024>
   118a0:	mov	r3, #0
   118a4:	bl	16e8c <dcngettext@plt+0x5e9c>
   118a8:	add	r3, r2, #999424	; 0xf4000
   118ac:	add	r3, r3, #576	; 0x240
   118b0:	mov	r2, #5
   118b4:	str	r2, [sp]
   118b8:	ldr	r1, [pc, #1880]	; 12018 <dcngettext@plt+0x1028>
   118bc:	ldr	r2, [pc, #1880]	; 1201c <dcngettext@plt+0x102c>
   118c0:	mov	r0, #0
   118c4:	bl	10ff0 <dcngettext@plt>
   118c8:	ldrd	r2, [sp, #32]
   118cc:	mov	r1, #0
   118d0:	strd	r2, [sp]
   118d4:	mov	r2, r0
   118d8:	mov	r0, r1
   118dc:	bl	10e70 <error@plt>
   118e0:	ldrd	r0, [sp, #72]	; 0x48
   118e4:	mov	r2, r0
   118e8:	mov	r3, r1
   118ec:	orrs	r3, r2, r3
   118f0:	beq	11950 <dcngettext@plt+0x960>
   118f4:	mov	r3, #0
   118f8:	cmp	r1, r3
   118fc:	mvn	r2, #0
   11900:	cmpeq	r0, r2
   11904:	ldrls	r3, [sp, #72]	; 0x48
   11908:	bls	11920 <dcngettext@plt+0x930>
   1190c:	ldr	r2, [pc, #1792]	; 12014 <dcngettext@plt+0x1024>
   11910:	mov	r3, #0
   11914:	bl	16e8c <dcngettext@plt+0x5e9c>
   11918:	add	r3, r2, #999424	; 0xf4000
   1191c:	add	r3, r3, #576	; 0x240
   11920:	mov	r2, #5
   11924:	str	r2, [sp]
   11928:	ldr	r1, [pc, #1776]	; 12020 <dcngettext@plt+0x1030>
   1192c:	ldr	r2, [pc, #1776]	; 12024 <dcngettext@plt+0x1034>
   11930:	mov	r0, #0
   11934:	bl	10ff0 <dcngettext@plt>
   11938:	ldrd	r2, [sp, #72]	; 0x48
   1193c:	mov	r1, #0
   11940:	strd	r2, [sp]
   11944:	mov	r2, r0
   11948:	mov	r0, r1
   1194c:	bl	10e70 <error@plt>
   11950:	ldrd	r0, [sp, #80]	; 0x50
   11954:	mov	r2, r0
   11958:	mov	r3, r1
   1195c:	orrs	r3, r2, r3
   11960:	beq	119c0 <dcngettext@plt+0x9d0>
   11964:	mov	r3, #0
   11968:	cmp	r1, r3
   1196c:	mvn	r2, #0
   11970:	cmpeq	r0, r2
   11974:	ldrls	r3, [sp, #80]	; 0x50
   11978:	bls	11990 <dcngettext@plt+0x9a0>
   1197c:	ldr	r2, [pc, #1680]	; 12014 <dcngettext@plt+0x1024>
   11980:	mov	r3, #0
   11984:	bl	16e8c <dcngettext@plt+0x5e9c>
   11988:	add	r3, r2, #999424	; 0xf4000
   1198c:	add	r3, r3, #576	; 0x240
   11990:	mov	r2, #5
   11994:	str	r2, [sp]
   11998:	ldr	r1, [pc, #1672]	; 12028 <dcngettext@plt+0x1038>
   1199c:	ldr	r2, [pc, #1672]	; 1202c <dcngettext@plt+0x103c>
   119a0:	mov	r0, #0
   119a4:	bl	10ff0 <dcngettext@plt>
   119a8:	ldrd	r2, [sp, #80]	; 0x50
   119ac:	mov	r1, #0
   119b0:	strd	r2, [sp]
   119b4:	mov	r2, r0
   119b8:	mov	r0, r1
   119bc:	bl	10e70 <error@plt>
   119c0:	ldr	r3, [sp, #24]
   119c4:	ldrb	r5, [r3, #5]
   119c8:	ldr	r3, [sp, #92]	; 0x5c
   119cc:	eor	r5, r5, #1
   119d0:	orr	r5, r3, r5
   119d4:	ands	r5, r5, #255	; 0xff
   119d8:	beq	11f50 <dcngettext@plt+0xf60>
   119dc:	ldr	r3, [sp, #92]	; 0x5c
   119e0:	cmp	r3, #0
   119e4:	beq	11a1c <dcngettext@plt+0xa2c>
   119e8:	ldrd	r2, [sp, #72]	; 0x48
   119ec:	ldrd	r0, [sp, #80]	; 0x50
   119f0:	orr	r2, r2, r0
   119f4:	orr	r3, r3, r1
   119f8:	orrs	r3, r2, r3
   119fc:	bne	11a1c <dcngettext@plt+0xa2c>
   11a00:	ldr	r3, [sp, #24]
   11a04:	ldrb	r4, [r3, #9]
   11a08:	ldrd	r2, [sp, #32]
   11a0c:	eor	r4, r4, #1
   11a10:	mov	r1, r2
   11a14:	orrs	r3, r1, r3
   11a18:	orreq	r4, r4, #1
   11a1c:	and	r4, r4, #1
   11a20:	b	11bc8 <dcngettext@plt+0xbd8>
   11a24:	ldr	r1, [pc, #1540]	; 12030 <dcngettext@plt+0x1040>
   11a28:	mov	r0, r5
   11a2c:	bl	13a3c <dcngettext@plt+0x2a4c>
   11a30:	subs	fp, r0, #0
   11a34:	strne	r5, [sp, #68]	; 0x44
   11a38:	bne	113dc <dcngettext@plt+0x3ec>
   11a3c:	bl	10ef4 <__errno_location@plt>
   11a40:	mov	r2, r5
   11a44:	mov	r1, #3
   11a48:	ldr	r4, [r0]
   11a4c:	mov	r0, fp
   11a50:	bl	15908 <dcngettext@plt+0x4918>
   11a54:	mov	r1, r4
   11a58:	ldr	r2, [pc, #1456]	; 12010 <dcngettext@plt+0x1020>
   11a5c:	mov	r3, r0
   11a60:	mov	r0, fp
   11a64:	bl	10e70 <error@plt>
   11a68:	ldr	r4, [sp, #44]	; 0x2c
   11a6c:	b	11bc8 <dcngettext@plt+0xbd8>
   11a70:	ldrb	r3, [r3, #5]
   11a74:	cmp	r3, #0
   11a78:	beq	11a88 <dcngettext@plt+0xa98>
   11a7c:	ldrb	r3, [sp, #111]	; 0x6f
   11a80:	cmp	r3, #0
   11a84:	bne	117d8 <dcngettext@plt+0x7e8>
   11a88:	ldr	r3, [sp, #24]
   11a8c:	ldr	r3, [r3]
   11a90:	lsrs	r6, r3, #1
   11a94:	beq	11e14 <dcngettext@plt+0xe24>
   11a98:	bl	10ea0 <__ctype_tolower_loc@plt>
   11a9c:	mov	r4, #0
   11aa0:	mov	r2, r5
   11aa4:	add	r1, sp, #140	; 0x8c
   11aa8:	ldr	r0, [r0]
   11aac:	b	11ae0 <dcngettext@plt+0xaf0>
   11ab0:	ldr	lr, [pc, #1404]	; 12034 <dcngettext@plt+0x1044>
   11ab4:	and	r3, r3, #15
   11ab8:	ldrb	ip, [r2, #1]
   11abc:	add	r3, lr, r3
   11ac0:	ldrb	r3, [r3, #264]	; 0x108
   11ac4:	ldr	ip, [r0, ip, lsl #2]
   11ac8:	cmp	ip, r3
   11acc:	bne	11b00 <dcngettext@plt+0xb10>
   11ad0:	add	r4, r4, #1
   11ad4:	cmp	r6, r4
   11ad8:	add	r2, r2, #2
   11adc:	beq	11e14 <dcngettext@plt+0xe24>
   11ae0:	ldrb	r3, [r1], #1
   11ae4:	ldr	ip, [pc, #1352]	; 12034 <dcngettext@plt+0x1044>
   11ae8:	ldrb	lr, [r5, r4, lsl #1]
   11aec:	add	ip, ip, r3, lsr #4
   11af0:	ldrb	ip, [ip, #264]	; 0x108
   11af4:	ldr	lr, [r0, lr, lsl #2]
   11af8:	cmp	lr, ip
   11afc:	beq	11ab0 <dcngettext@plt+0xac0>
   11b00:	cmp	r6, r4
   11b04:	beq	11e14 <dcngettext@plt+0xe24>
   11b08:	ldr	r3, [sp, #24]
   11b0c:	ldrd	r0, [sp, #80]	; 0x50
   11b10:	ldrb	r3, [r3, #6]
   11b14:	adds	r0, r0, #1
   11b18:	adc	r1, r1, #0
   11b1c:	cmp	r3, #0
   11b20:	strd	r0, [sp, #80]	; 0x50
   11b24:	bne	117d8 <dcngettext@plt+0x7e8>
   11b28:	cmp	r7, #0
   11b2c:	beq	11f28 <dcngettext@plt+0xf38>
   11b30:	ldr	r3, [pc, #1124]	; 11f9c <dcngettext@plt+0xfac>
   11b34:	ldr	r0, [r3]
   11b38:	ldr	r3, [r0, #20]
   11b3c:	ldr	r2, [r0, #24]
   11b40:	cmp	r3, r2
   11b44:	addcc	r1, r3, #1
   11b48:	movcc	r2, #92	; 0x5c
   11b4c:	strcc	r1, [r0, #20]
   11b50:	strbcc	r2, [r3]
   11b54:	bcs	1208c <dcngettext@plt+0x109c>
   11b58:	ldr	r1, [sp, #60]	; 0x3c
   11b5c:	ldr	r0, [sp, #56]	; 0x38
   11b60:	bl	1230c <dcngettext@plt+0x131c>
   11b64:	cmp	r6, r4
   11b68:	beq	11e5c <dcngettext@plt+0xe6c>
   11b6c:	mov	r2, #5
   11b70:	ldr	r1, [pc, #1216]	; 12038 <dcngettext@plt+0x1048>
   11b74:	mov	r0, #0
   11b78:	b	117c4 <dcngettext@plt+0x7d4>
   11b7c:	cmp	r3, #0
   11b80:	beq	11bd8 <dcngettext@plt+0xbe8>
   11b84:	bl	1393c <dcngettext@plt+0x294c>
   11b88:	mov	r2, #5
   11b8c:	ldr	r1, [pc, #1192]	; 1203c <dcngettext@plt+0x104c>
   11b90:	mov	r0, #0
   11b94:	bl	10e04 <dcgettext@plt>
   11b98:	mov	r5, #0
   11b9c:	mov	r4, r0
   11ba0:	ldr	r2, [sp, #68]	; 0x44
   11ba4:	mov	r1, #3
   11ba8:	mov	r0, #0
   11bac:	bl	15908 <dcngettext@plt+0x4918>
   11bb0:	mov	r2, r4
   11bb4:	mov	r1, r5
   11bb8:	mov	r3, r0
   11bbc:	mov	r0, #0
   11bc0:	bl	10e70 <error@plt>
   11bc4:	ldr	r4, [sp, #44]	; 0x2c
   11bc8:	ldr	r3, [sp, #48]	; 0x30
   11bcc:	and	r3, r3, r4
   11bd0:	str	r3, [sp, #48]	; 0x30
   11bd4:	b	11378 <dcngettext@plt+0x388>
   11bd8:	bl	10f9c <clearerr_unlocked@plt>
   11bdc:	b	11b88 <dcngettext@plt+0xb98>
   11be0:	ldr	r3, [pc, #996]	; 11fcc <dcngettext@plt+0xfdc>
   11be4:	ldrb	sl, [r3]
   11be8:	cmp	sl, #10
   11bec:	beq	11ee0 <dcngettext@plt+0xef0>
   11bf0:	ldr	r8, [sp, #20]
   11bf4:	ldr	r3, [sp, #40]	; 0x28
   11bf8:	cmp	r3, #0
   11bfc:	bne	11e78 <dcngettext@plt+0xe88>
   11c00:	ldr	r3, [sp, #24]
   11c04:	ldr	r3, [r3]
   11c08:	lsrs	r3, r3, #1
   11c0c:	beq	11c50 <dcngettext@plt+0xc60>
   11c10:	ldr	r7, [pc, #1064]	; 12040 <dcngettext@plt+0x1050>
   11c14:	add	fp, sp, #120	; 0x78
   11c18:	mov	r4, #0
   11c1c:	mov	r6, #1
   11c20:	ldrb	r2, [fp], #1
   11c24:	mov	r1, r7
   11c28:	mov	r0, r6
   11c2c:	bl	10f24 <__printf_chk@plt>
   11c30:	ldr	r3, [sp, #24]
   11c34:	add	r4, r4, #1
   11c38:	ldr	r3, [r3]
   11c3c:	cmp	r4, r3, lsr #1
   11c40:	bcc	11c20 <dcngettext@plt+0xc30>
   11c44:	ldr	r3, [sp, #40]	; 0x28
   11c48:	cmp	r3, #0
   11c4c:	bne	11cac <dcngettext@plt+0xcbc>
   11c50:	ldr	r3, [pc, #836]	; 11f9c <dcngettext@plt+0xfac>
   11c54:	ldr	r0, [r3]
   11c58:	ldr	r3, [r0, #20]
   11c5c:	ldr	r2, [r0, #24]
   11c60:	cmp	r3, r2
   11c64:	addcc	r1, r3, #1
   11c68:	movcc	r2, #32
   11c6c:	strcc	r1, [r0, #20]
   11c70:	strbcc	r2, [r3]
   11c74:	bcs	11f44 <dcngettext@plt+0xf54>
   11c78:	ldr	r3, [pc, #796]	; 11f9c <dcngettext@plt+0xfac>
   11c7c:	ldr	r0, [r3]
   11c80:	ldr	r2, [r0, #24]
   11c84:	ldr	r3, [r0, #20]
   11c88:	cmp	r3, r2
   11c8c:	addcc	r2, r3, #1
   11c90:	strcc	r2, [r0, #20]
   11c94:	ldrbcc	r2, [sp, #96]	; 0x60
   11c98:	strbcc	r2, [r3]
   11c9c:	bcs	11f38 <dcngettext@plt+0xf48>
   11ca0:	mov	r1, r8
   11ca4:	mov	r0, r5
   11ca8:	bl	1230c <dcngettext@plt+0x131c>
   11cac:	ldr	r3, [pc, #744]	; 11f9c <dcngettext@plt+0xfac>
   11cb0:	ldr	r0, [r3]
   11cb4:	ldr	r3, [r0, #20]
   11cb8:	ldr	r2, [r0, #24]
   11cbc:	cmp	r3, r2
   11cc0:	addcc	r2, r3, #1
   11cc4:	strcc	r2, [r0, #20]
   11cc8:	ldrcc	r8, [sp, #48]	; 0x30
   11ccc:	strbcc	sl, [r3]
   11cd0:	bcc	117fc <dcngettext@plt+0x80c>
   11cd4:	mov	r1, sl
   11cd8:	bl	10f6c <__overflow@plt>
   11cdc:	ldr	r8, [sp, #48]	; 0x30
   11ce0:	b	117fc <dcngettext@plt+0x80c>
   11ce4:	mov	r6, r1
   11ce8:	b	114cc <dcngettext@plt+0x4dc>
   11cec:	ldr	r9, [sp, #24]
   11cf0:	ldrb	r3, [r9, #4]
   11cf4:	cmp	r3, #0
   11cf8:	bne	11d5c <dcngettext@plt+0xd6c>
   11cfc:	ldr	r3, [sp, #48]	; 0x30
   11d00:	eor	r0, r3, #1
   11d04:	uxtb	r0, r0
   11d08:	add	sp, sp, #164	; 0xa4
   11d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d10:	ldr	r3, [pc, #644]	; 11f9c <dcngettext@plt+0xfac>
   11d14:	ldr	r0, [r3]
   11d18:	ldr	r3, [r0, #20]
   11d1c:	ldr	r2, [r0, #24]
   11d20:	cmp	r3, r2
   11d24:	addcc	r1, r3, #1
   11d28:	movcc	r2, #92	; 0x5c
   11d2c:	strcc	r1, [r0, #20]
   11d30:	strbcc	r2, [r3]
   11d34:	bcc	117ac <dcngettext@plt+0x7bc>
   11d38:	mov	r1, #92	; 0x5c
   11d3c:	bl	10f6c <__overflow@plt>
   11d40:	b	117ac <dcngettext@plt+0x7bc>
   11d44:	ldr	r3, [pc, #640]	; 11fcc <dcngettext@plt+0xfdc>
   11d48:	ldr	r0, [r3, #4]
   11d4c:	cmp	r0, #1
   11d50:	strne	r2, [r3, #4]
   11d54:	addne	r1, r6, #2
   11d58:	b	116e8 <dcngettext@plt+0x6f8>
   11d5c:	ldr	r3, [pc, #664]	; 11ffc <dcngettext@plt+0x100c>
   11d60:	ldr	r0, [r3]
   11d64:	bl	1393c <dcngettext@plt+0x294c>
   11d68:	cmn	r0, #1
   11d6c:	bne	11cfc <dcngettext@plt+0xd0c>
   11d70:	bl	10ef4 <__errno_location@plt>
   11d74:	mov	r2, #5
   11d78:	ldr	r1, [pc, #632]	; 11ff8 <dcngettext@plt+0x1008>
   11d7c:	ldr	r4, [r0]
   11d80:	mov	r0, #0
   11d84:	bl	10e04 <dcgettext@plt>
   11d88:	mov	r1, r4
   11d8c:	mov	r2, r0
   11d90:	mov	r0, #1
   11d94:	bl	10e70 <error@plt>
   11d98:	mov	r0, r3
   11d9c:	mov	r2, #5
   11da0:	ldr	r1, [pc, #668]	; 12044 <dcngettext@plt+0x1054>
   11da4:	mov	r6, r3
   11da8:	bl	10e04 <dcgettext@plt>
   11dac:	ldr	r2, [sp, #68]	; 0x44
   11db0:	mov	r1, #3
   11db4:	mov	r5, r0
   11db8:	mov	r0, r6
   11dbc:	bl	15908 <dcngettext@plt+0x4918>
   11dc0:	mov	r2, r5
   11dc4:	mov	r1, r6
   11dc8:	mov	r3, r0
   11dcc:	mov	r0, r6
   11dd0:	bl	10e70 <error@plt>
   11dd4:	b	11a1c <dcngettext@plt+0xa2c>
   11dd8:	mov	r0, r3
   11ddc:	mov	r2, #5
   11de0:	ldr	r1, [pc, #608]	; 12048 <dcngettext@plt+0x1058>
   11de4:	mov	r4, r3
   11de8:	bl	10e04 <dcgettext@plt>
   11dec:	ldr	r2, [sp, #68]	; 0x44
   11df0:	mov	r1, #3
   11df4:	mov	r5, r0
   11df8:	mov	r0, r4
   11dfc:	bl	15908 <dcngettext@plt+0x4918>
   11e00:	mov	r2, r5
   11e04:	mov	r1, r4
   11e08:	mov	r3, r0
   11e0c:	mov	r0, #1
   11e10:	bl	10e70 <error@plt>
   11e14:	ldr	r3, [sp, #24]
   11e18:	ldrb	r3, [r3, #6]
   11e1c:	cmp	r3, #0
   11e20:	str	r3, [sp, #92]	; 0x5c
   11e24:	bne	117d8 <dcngettext@plt+0x7e8>
   11e28:	ldr	r3, [sp, #24]
   11e2c:	mov	r4, r6
   11e30:	ldrb	r3, [r3, #8]
   11e34:	cmp	r3, #0
   11e38:	str	r3, [sp, #92]	; 0x5c
   11e3c:	bne	117d8 <dcngettext@plt+0x7e8>
   11e40:	cmp	r7, #0
   11e44:	bne	12098 <dcngettext@plt+0x10a8>
   11e48:	ldr	r1, [sp, #92]	; 0x5c
   11e4c:	ldr	r0, [sp, #56]	; 0x38
   11e50:	bl	1230c <dcngettext@plt+0x131c>
   11e54:	ldr	r3, [sp, #88]	; 0x58
   11e58:	str	r3, [sp, #92]	; 0x5c
   11e5c:	ldr	r3, [sp, #24]
   11e60:	ldrb	r0, [r3, #8]
   11e64:	cmp	r0, #0
   11e68:	bne	117d8 <dcngettext@plt+0x7e8>
   11e6c:	mov	r2, #5
   11e70:	ldr	r1, [pc, #468]	; 1204c <dcngettext@plt+0x105c>
   11e74:	b	117c4 <dcngettext@plt+0x7d4>
   11e78:	ldr	r3, [pc, #284]	; 11f9c <dcngettext@plt+0xfac>
   11e7c:	mov	r2, #3
   11e80:	mov	r1, #1
   11e84:	ldr	r3, [r3]
   11e88:	ldr	r0, [pc, #368]	; 12000 <dcngettext@plt+0x1010>
   11e8c:	bl	10de0 <fwrite_unlocked@plt>
   11e90:	ldr	r3, [pc, #260]	; 11f9c <dcngettext@plt+0xfac>
   11e94:	mov	r2, #2
   11e98:	mov	r1, #1
   11e9c:	ldr	r3, [r3]
   11ea0:	ldr	r0, [pc, #424]	; 12050 <dcngettext@plt+0x1060>
   11ea4:	bl	10de0 <fwrite_unlocked@plt>
   11ea8:	mov	r1, r8
   11eac:	mov	r0, r5
   11eb0:	bl	1230c <dcngettext@plt+0x131c>
   11eb4:	ldr	r3, [pc, #224]	; 11f9c <dcngettext@plt+0xfac>
   11eb8:	mov	r2, #4
   11ebc:	mov	r1, #1
   11ec0:	ldr	r3, [r3]
   11ec4:	ldr	r0, [pc, #392]	; 12054 <dcngettext@plt+0x1064>
   11ec8:	bl	10de0 <fwrite_unlocked@plt>
   11ecc:	ldr	r3, [sp, #24]
   11ed0:	ldr	r3, [r3]
   11ed4:	lsrs	r3, r3, #1
   11ed8:	bne	11c10 <dcngettext@plt+0xc20>
   11edc:	b	11cac <dcngettext@plt+0xcbc>
   11ee0:	mov	r1, #92	; 0x5c
   11ee4:	mov	r0, r5
   11ee8:	bl	10ee8 <strchr@plt>
   11eec:	cmp	r0, #0
   11ef0:	beq	12060 <dcngettext@plt+0x1070>
   11ef4:	ldr	r3, [pc, #160]	; 11f9c <dcngettext@plt+0xfac>
   11ef8:	ldr	r0, [r3]
   11efc:	ldr	r3, [r0, #20]
   11f00:	ldr	r2, [r0, #24]
   11f04:	cmp	r3, r2
   11f08:	addcc	r1, r3, #1
   11f0c:	movcc	r2, #92	; 0x5c
   11f10:	strcc	r1, [r0, #20]
   11f14:	strbcc	r2, [r3]
   11f18:	bcc	11bf4 <dcngettext@plt+0xc04>
   11f1c:	mov	r1, #92	; 0x5c
   11f20:	bl	10f6c <__overflow@plt>
   11f24:	b	11bf4 <dcngettext@plt+0xc04>
   11f28:	mov	r1, r7
   11f2c:	ldr	r0, [sp, #56]	; 0x38
   11f30:	bl	1230c <dcngettext@plt+0x131c>
   11f34:	b	11b6c <dcngettext@plt+0xb7c>
   11f38:	ldr	r1, [sp, #100]	; 0x64
   11f3c:	bl	10f6c <__overflow@plt>
   11f40:	b	11ca0 <dcngettext@plt+0xcb0>
   11f44:	mov	r1, #32
   11f48:	bl	10f6c <__overflow@plt>
   11f4c:	b	11c78 <dcngettext@plt+0xc88>
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #252]	; 12058 <dcngettext@plt+0x1068>
   11f58:	mov	r0, r5
   11f5c:	bl	10e04 <dcgettext@plt>
   11f60:	ldr	r2, [sp, #68]	; 0x44
   11f64:	mov	r1, #3
   11f68:	mov	r6, r0
   11f6c:	mov	r0, r5
   11f70:	bl	15908 <dcngettext@plt+0x4918>
   11f74:	mov	r2, r6
   11f78:	mov	r1, r5
   11f7c:	mov	r3, r0
   11f80:	mov	r0, r5
   11f84:	bl	10e70 <error@plt>
   11f88:	b	11a1c <dcngettext@plt+0xa2c>
   11f8c:	andeq	r7, r1, r0, asr r3
   11f90:	andeq	r7, r1, r8, ror #16
   11f94:	andeq	r7, r1, r0, asr #15
   11f98:	muleq	r1, r4, r9
   11f9c:	andeq	r9, r2, ip, ror #2
   11fa0:	andeq	r7, r1, r0, asr #1
   11fa4:			; <UNDEFINED> instruction: 0x000178b0
   11fa8:	andeq	r9, r2, r4, ror r1
   11fac:	andeq	r0, r0, r1, lsl #2
   11fb0:	andeq	r0, r0, r3, lsl #2
   11fb4:	andeq	r7, r1, r0, lsl #17
   11fb8:	muleq	r1, r0, r8
   11fbc:	andeq	r9, r2, r4, lsl #2
   11fc0:	andeq	r7, r1, r0, lsr #17
   11fc4:			; <UNDEFINED> instruction: 0x000171b4
   11fc8:			; <UNDEFINED> instruction: 0x000177bc
   11fcc:	strdeq	r9, [r2], -ip
   11fd0:			; <UNDEFINED> instruction: 0x000178b8
   11fd4:	ldrdeq	r7, [r1], -ip
   11fd8:	andeq	r7, r1, r8, lsl r9
   11fdc:	andeq	r7, r1, r4, asr r9
   11fe0:	andeq	r7, r1, r0, lsr #19
   11fe4:	andeq	r7, r1, r8, ror #19
   11fe8:	andeq	r7, r1, r8, lsr #20
   11fec:	andeq	r7, r1, r8, ror #20
   11ff0:	andeq	r9, r2, r8, asr r1
   11ff4:	andeq	r7, r1, ip, lsr #3
   11ff8:	andeq	r7, r1, r8, ror #21
   11ffc:	andeq	r9, r2, r8, ror #2
   12000:	andeq	r7, r1, r0, lsr r2
   12004:	andeq	r7, r1, r4, lsl fp
   12008:	andeq	r7, r1, r4, asr #22
   1200c:	andeq	r7, r1, r8, asr fp
   12010:	andeq	r7, r1, r4, ror #27
   12014:	andeq	r4, pc, r0, asr #4
   12018:	ldrdeq	r7, [r1], -ip
   1201c:	andeq	r7, r1, ip, lsr #23
   12020:	andeq	r7, r1, r8, lsr ip
   12024:	andeq	r7, r1, r8, lsl #24
   12028:	muleq	r1, r4, ip
   1202c:	andeq	r7, r1, r4, ror #24
   12030:			; <UNDEFINED> instruction: 0x000171b0
   12034:	andeq	r7, r1, r8, lsl #1
   12038:	andeq	r7, r1, r0, ror #22
   1203c:	andeq	r7, r1, ip, ror #22
   12040:	andeq	r7, r1, ip, ror #25
   12044:	andeq	r7, r1, ip, ror fp
   12048:	strdeq	r7, [r1], -r8
   1204c:	andeq	r7, r1, r8, ror #22
   12050:	andeq	r7, r1, r0, ror #25
   12054:	andeq	r7, r1, r4, ror #25
   12058:	andeq	r7, r1, r4, asr #25
   1205c:	andeq	r7, r1, r8, lsr #21
   12060:	mov	r1, sl
   12064:	mov	r0, r5
   12068:	bl	10ee8 <strchr@plt>
   1206c:	cmp	r0, #0
   12070:	bne	11ef4 <dcngettext@plt+0xf04>
   12074:	mov	r1, #13
   12078:	mov	r0, r5
   1207c:	bl	10ee8 <strchr@plt>
   12080:	cmp	r0, #0
   12084:	bne	11ef4 <dcngettext@plt+0xf04>
   12088:	b	11bf0 <dcngettext@plt+0xc00>
   1208c:	mov	r1, #92	; 0x5c
   12090:	bl	10f6c <__overflow@plt>
   12094:	b	11b58 <dcngettext@plt+0xb68>
   12098:	ldr	r3, [sp, #88]	; 0x58
   1209c:	str	r3, [sp, #92]	; 0x5c
   120a0:	b	11b30 <dcngettext@plt+0xb40>
   120a4:	ldr	r1, [pc, #-80]	; 1205c <dcngettext@plt+0x106c>
   120a8:	mov	r2, #5
   120ac:	mov	r0, #0
   120b0:	bl	10e04 <dcgettext@plt>
   120b4:	mov	r1, #0
   120b8:	mov	r2, r0
   120bc:	mov	r0, r1
   120c0:	bl	10e70 <error@plt>
   120c4:	mov	r0, #1
   120c8:	bl	12594 <dcngettext@plt+0x15a4>
   120cc:	mov	fp, #0
   120d0:	mov	lr, #0
   120d4:	pop	{r1}		; (ldr r1, [sp], #4)
   120d8:	mov	r2, sp
   120dc:	push	{r2}		; (str r2, [sp, #-4]!)
   120e0:	push	{r0}		; (str r0, [sp, #-4]!)
   120e4:	ldr	ip, [pc, #16]	; 120fc <dcngettext@plt+0x110c>
   120e8:	push	{ip}		; (str ip, [sp, #-4]!)
   120ec:	ldr	r0, [pc, #12]	; 12100 <dcngettext@plt+0x1110>
   120f0:	ldr	r3, [pc, #12]	; 12104 <dcngettext@plt+0x1114>
   120f4:	bl	10e88 <__libc_start_main@plt>
   120f8:	bl	10fd8 <abort@plt>
   120fc:	andeq	r7, r1, r0, rrx
   12100:	strdeq	r0, [r1], -ip
   12104:	andeq	r7, r1, r0
   12108:	ldr	r3, [pc, #20]	; 12124 <dcngettext@plt+0x1134>
   1210c:	ldr	r2, [pc, #20]	; 12128 <dcngettext@plt+0x1138>
   12110:	add	r3, pc, r3
   12114:	ldr	r2, [r3, r2]
   12118:	cmp	r2, #0
   1211c:	bxeq	lr
   12120:	b	10eac <__gmon_start__@plt>
   12124:	andeq	r6, r1, r8, ror #29
   12128:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1212c:	ldr	r3, [pc, #28]	; 12150 <dcngettext@plt+0x1160>
   12130:	ldr	r0, [pc, #28]	; 12154 <dcngettext@plt+0x1164>
   12134:	sub	r3, r3, r0
   12138:	cmp	r3, #6
   1213c:	bxls	lr
   12140:	ldr	r3, [pc, #16]	; 12158 <dcngettext@plt+0x1168>
   12144:	cmp	r3, #0
   12148:	bxeq	lr
   1214c:	bx	r3
   12150:	andeq	r9, r2, pc, asr #2
   12154:	andeq	r9, r2, ip, asr #2
   12158:	andeq	r0, r0, r0
   1215c:	ldr	r1, [pc, #36]	; 12188 <dcngettext@plt+0x1198>
   12160:	ldr	r0, [pc, #36]	; 1218c <dcngettext@plt+0x119c>
   12164:	sub	r1, r1, r0
   12168:	asr	r1, r1, #2
   1216c:	add	r1, r1, r1, lsr #31
   12170:	asrs	r1, r1, #1
   12174:	bxeq	lr
   12178:	ldr	r3, [pc, #16]	; 12190 <dcngettext@plt+0x11a0>
   1217c:	cmp	r3, #0
   12180:	bxeq	lr
   12184:	bx	r3
   12188:	andeq	r9, r2, ip, asr #2
   1218c:	andeq	r9, r2, ip, asr #2
   12190:	andeq	r0, r0, r0
   12194:	push	{r4, lr}
   12198:	ldr	r4, [pc, #24]	; 121b8 <dcngettext@plt+0x11c8>
   1219c:	ldrb	r3, [r4]
   121a0:	cmp	r3, #0
   121a4:	popne	{r4, pc}
   121a8:	bl	1212c <dcngettext@plt+0x113c>
   121ac:	mov	r3, #1
   121b0:	strb	r3, [r4]
   121b4:	pop	{r4, pc}
   121b8:	andeq	r9, r2, r0, ror r1
   121bc:	ldr	r0, [pc, #40]	; 121ec <dcngettext@plt+0x11fc>
   121c0:	ldr	r3, [r0]
   121c4:	cmp	r3, #0
   121c8:	bne	121d0 <dcngettext@plt+0x11e0>
   121cc:	b	1215c <dcngettext@plt+0x116c>
   121d0:	ldr	r3, [pc, #24]	; 121f0 <dcngettext@plt+0x1200>
   121d4:	cmp	r3, #0
   121d8:	beq	121cc <dcngettext@plt+0x11dc>
   121dc:	push	{r4, lr}
   121e0:	blx	r3
   121e4:	pop	{r4, lr}
   121e8:	b	1215c <dcngettext@plt+0x116c>
   121ec:	andeq	r8, r2, r4, lsl pc
   121f0:	andeq	r0, r0, r0
   121f4:	cmp	r1, #0
   121f8:	bxeq	lr
   121fc:	push	{r4, r5, r6, r7, lr}
   12200:	mov	ip, r0
   12204:	add	lr, r0, #1
   12208:	mov	r3, #0
   1220c:	sub	r4, r1, #1
   12210:	mov	r7, #10
   12214:	mov	r6, #13
   12218:	ldrb	r2, [r0, r3]
   1221c:	cmp	r2, #0
   12220:	beq	12254 <dcngettext@plt+0x1264>
   12224:	cmp	r2, #92	; 0x5c
   12228:	bne	1225c <dcngettext@plt+0x126c>
   1222c:	cmp	r4, r3
   12230:	beq	12254 <dcngettext@plt+0x1264>
   12234:	add	r3, r3, #1
   12238:	ldrb	r2, [r0, r3]
   1223c:	cmp	r2, #110	; 0x6e
   12240:	beq	122a4 <dcngettext@plt+0x12b4>
   12244:	cmp	r2, #114	; 0x72
   12248:	beq	1228c <dcngettext@plt+0x129c>
   1224c:	cmp	r2, #92	; 0x5c
   12250:	beq	12298 <dcngettext@plt+0x12a8>
   12254:	mov	r0, #0
   12258:	pop	{r4, r5, r6, r7, pc}
   1225c:	mov	r5, lr
   12260:	strb	r2, [ip]
   12264:	add	r3, r3, #1
   12268:	cmp	r1, r3
   1226c:	add	lr, lr, #1
   12270:	add	ip, ip, #1
   12274:	bhi	12218 <dcngettext@plt+0x1228>
   12278:	add	r1, r0, r1
   1227c:	cmp	r5, r1
   12280:	movcc	r3, #0
   12284:	strbcc	r3, [r5]
   12288:	pop	{r4, r5, r6, r7, pc}
   1228c:	strb	r6, [ip]
   12290:	mov	r5, lr
   12294:	b	12264 <dcngettext@plt+0x1274>
   12298:	strb	r2, [ip]
   1229c:	mov	r5, lr
   122a0:	b	12264 <dcngettext@plt+0x1274>
   122a4:	strb	r7, [ip]
   122a8:	mov	r5, lr
   122ac:	b	12264 <dcngettext@plt+0x1274>
   122b0:	ldr	r3, [pc, #80]	; 12308 <dcngettext@plt+0x1318>
   122b4:	push	{r4, r5, r6, lr}
   122b8:	mov	r5, r0
   122bc:	ldr	r4, [r3]
   122c0:	cmp	r4, #0
   122c4:	beq	122f8 <dcngettext@plt+0x1308>
   122c8:	bl	10ec4 <__ctype_b_loc@plt>
   122cc:	mov	r3, r5
   122d0:	add	r1, r5, r4
   122d4:	ldr	ip, [r0]
   122d8:	ldrb	r2, [r3], #1
   122dc:	mov	r5, r3
   122e0:	lsl	r2, r2, #1
   122e4:	ldrh	r0, [ip, r2]
   122e8:	ands	r0, r0, #4096	; 0x1000
   122ec:	popeq	{r4, r5, r6, pc}
   122f0:	cmp	r1, r3
   122f4:	bne	122d8 <dcngettext@plt+0x12e8>
   122f8:	ldrb	r0, [r5]
   122fc:	clz	r0, r0
   12300:	lsr	r0, r0, #5
   12304:	pop	{r4, r5, r6, pc}
   12308:	andeq	r9, r2, r4, ror r1
   1230c:	cmp	r1, #0
   12310:	beq	123dc <dcngettext@plt+0x13ec>
   12314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12318:	mov	r4, r0
   1231c:	ldrb	r1, [r0]
   12320:	cmp	r1, #0
   12324:	beq	123f0 <dcngettext@plt+0x1400>
   12328:	ldr	r5, [pc, #196]	; 123f4 <dcngettext@plt+0x1404>
   1232c:	ldr	sl, [pc, #196]	; 123f8 <dcngettext@plt+0x1408>
   12330:	ldr	r9, [pc, #196]	; 123fc <dcngettext@plt+0x140c>
   12334:	ldr	r8, [pc, #196]	; 12400 <dcngettext@plt+0x1410>
   12338:	mov	r7, #2
   1233c:	mov	r6, #1
   12340:	b	12380 <dcngettext@plt+0x1390>
   12344:	cmp	r1, #92	; 0x5c
   12348:	beq	123c4 <dcngettext@plt+0x13d4>
   1234c:	cmp	r1, #10
   12350:	beq	123ac <dcngettext@plt+0x13bc>
   12354:	ldr	r0, [r5]
   12358:	ldr	r3, [r0, #20]
   1235c:	ldr	r2, [r0, #24]
   12360:	add	ip, r3, #1
   12364:	cmp	r3, r2
   12368:	strcc	ip, [r0, #20]
   1236c:	strbcc	r1, [r3]
   12370:	bcs	123e8 <dcngettext@plt+0x13f8>
   12374:	ldrb	r1, [r4, #1]!
   12378:	cmp	r1, #0
   1237c:	beq	123a8 <dcngettext@plt+0x13b8>
   12380:	cmp	r1, #13
   12384:	bne	12344 <dcngettext@plt+0x1354>
   12388:	mov	r1, r6
   1238c:	ldr	r3, [r5]
   12390:	mov	r2, r7
   12394:	mov	r0, sl
   12398:	bl	10de0 <fwrite_unlocked@plt>
   1239c:	ldrb	r1, [r4, #1]!
   123a0:	cmp	r1, #0
   123a4:	bne	12380 <dcngettext@plt+0x1390>
   123a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ac:	ldr	r3, [r5]
   123b0:	mov	r2, r7
   123b4:	mov	r1, r6
   123b8:	mov	r0, r8
   123bc:	bl	10de0 <fwrite_unlocked@plt>
   123c0:	b	12374 <dcngettext@plt+0x1384>
   123c4:	ldr	r3, [r5]
   123c8:	mov	r2, r7
   123cc:	mov	r1, r6
   123d0:	mov	r0, r9
   123d4:	bl	10de0 <fwrite_unlocked@plt>
   123d8:	b	12374 <dcngettext@plt+0x1384>
   123dc:	ldr	r3, [pc, #16]	; 123f4 <dcngettext@plt+0x1404>
   123e0:	ldr	r1, [r3]
   123e4:	b	10d68 <fputs_unlocked@plt>
   123e8:	bl	10f6c <__overflow@plt>
   123ec:	b	12374 <dcngettext@plt+0x1384>
   123f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123f4:	andeq	r9, r2, ip, ror #2
   123f8:	andeq	r7, r1, r4, lsr #3
   123fc:	andeq	r7, r1, r8, lsr #3
   12400:	andeq	r7, r1, r0, lsr #3
   12404:	push	{r4, r5, r6, r7, r8, lr}
   12408:	mov	r4, r1
   1240c:	ldr	r1, [pc, #364]	; 12580 <dcngettext@plt+0x1590>
   12410:	mov	r5, r2
   12414:	mov	r6, r0
   12418:	bl	10d8c <strcmp@plt>
   1241c:	mov	r3, #0
   12420:	strb	r3, [r5]
   12424:	cmp	r0, r3
   12428:	bne	124d4 <dcngettext@plt+0x14e4>
   1242c:	ldr	r1, [pc, #336]	; 12584 <dcngettext@plt+0x1594>
   12430:	ldr	r3, [pc, #336]	; 12588 <dcngettext@plt+0x1598>
   12434:	mov	r2, #1
   12438:	ldr	r5, [r1]
   1243c:	mov	r1, #2
   12440:	mov	r0, r5
   12444:	strb	r2, [r3, #4]
   12448:	bl	13908 <dcngettext@plt+0x2918>
   1244c:	mov	r1, r4
   12450:	mov	r0, r5
   12454:	bl	12a78 <dcngettext@plt+0x1a88>
   12458:	subs	r4, r0, #0
   1245c:	beq	12468 <dcngettext@plt+0x1478>
   12460:	bl	10ef4 <__errno_location@plt>
   12464:	ldr	r4, [r0]
   12468:	mov	r0, r5
   1246c:	bl	10f9c <clearerr_unlocked@plt>
   12470:	cmp	r4, #0
   12474:	bne	124a4 <dcngettext@plt+0x14b4>
   12478:	mov	r4, #1
   1247c:	mov	r0, r4
   12480:	pop	{r4, r5, r6, r7, r8, pc}
   12484:	bl	10ef4 <__errno_location@plt>
   12488:	ldr	r4, [r0]
   1248c:	mov	r0, r7
   12490:	bl	1393c <dcngettext@plt+0x294c>
   12494:	cmp	r0, #0
   12498:	beq	12470 <dcngettext@plt+0x1480>
   1249c:	cmp	r4, #0
   124a0:	beq	12514 <dcngettext@plt+0x1524>
   124a4:	mov	r2, r6
   124a8:	mov	r1, #3
   124ac:	mov	r0, #0
   124b0:	bl	15908 <dcngettext@plt+0x4918>
   124b4:	mov	r1, r4
   124b8:	ldr	r2, [pc, #204]	; 1258c <dcngettext@plt+0x159c>
   124bc:	mov	r4, #0
   124c0:	mov	r3, r0
   124c4:	mov	r0, #0
   124c8:	bl	10e70 <error@plt>
   124cc:	mov	r0, r4
   124d0:	pop	{r4, r5, r6, r7, r8, pc}
   124d4:	ldr	r1, [pc, #180]	; 12590 <dcngettext@plt+0x15a0>
   124d8:	mov	r0, r6
   124dc:	bl	13a3c <dcngettext@plt+0x2a4c>
   124e0:	subs	r7, r0, #0
   124e4:	beq	12520 <dcngettext@plt+0x1530>
   124e8:	mov	r1, #2
   124ec:	bl	13908 <dcngettext@plt+0x2918>
   124f0:	mov	r1, r4
   124f4:	mov	r0, r7
   124f8:	bl	12a78 <dcngettext@plt+0x1a88>
   124fc:	cmp	r0, #0
   12500:	bne	12484 <dcngettext@plt+0x1494>
   12504:	mov	r0, r7
   12508:	bl	1393c <dcngettext@plt+0x294c>
   1250c:	cmp	r0, #0
   12510:	beq	12478 <dcngettext@plt+0x1488>
   12514:	bl	10ef4 <__errno_location@plt>
   12518:	ldr	r4, [r0]
   1251c:	b	12470 <dcngettext@plt+0x1480>
   12520:	ldr	r3, [pc, #96]	; 12588 <dcngettext@plt+0x1598>
   12524:	ldrb	r4, [r3, #5]
   12528:	cmp	r4, #0
   1252c:	beq	12574 <dcngettext@plt+0x1584>
   12530:	bl	10ef4 <__errno_location@plt>
   12534:	ldr	r7, [r0]
   12538:	cmp	r7, #2
   1253c:	moveq	r3, #1
   12540:	strbeq	r3, [r5]
   12544:	beq	1247c <dcngettext@plt+0x148c>
   12548:	mov	r2, r6
   1254c:	mov	r1, #3
   12550:	mov	r0, #0
   12554:	bl	15908 <dcngettext@plt+0x4918>
   12558:	mov	r1, r7
   1255c:	ldr	r2, [pc, #40]	; 1258c <dcngettext@plt+0x159c>
   12560:	mov	r4, #0
   12564:	mov	r3, r0
   12568:	mov	r0, #0
   1256c:	bl	10e70 <error@plt>
   12570:	b	1247c <dcngettext@plt+0x148c>
   12574:	bl	10ef4 <__errno_location@plt>
   12578:	ldr	r7, [r0]
   1257c:	b	12548 <dcngettext@plt+0x1558>
   12580:	andeq	r7, r1, ip, lsr #3
   12584:	andeq	r9, r2, r8, ror #2
   12588:	andeq	r9, r2, r4, ror r1
   1258c:	andeq	r7, r1, r4, ror #27
   12590:			; <UNDEFINED> instruction: 0x000171b0
   12594:	subs	r5, r0, #0
   12598:	push	{r7, lr}
   1259c:	sub	sp, sp, #56	; 0x38
   125a0:	beq	125dc <dcngettext@plt+0x15ec>
   125a4:	ldr	r3, [pc, #848]	; 128fc <dcngettext@plt+0x190c>
   125a8:	mov	r2, #5
   125ac:	ldr	r1, [pc, #844]	; 12900 <dcngettext@plt+0x1910>
   125b0:	mov	r0, #0
   125b4:	ldr	r4, [r3]
   125b8:	bl	10e04 <dcgettext@plt>
   125bc:	ldr	r3, [pc, #832]	; 12904 <dcngettext@plt+0x1914>
   125c0:	mov	r1, #1
   125c4:	ldr	r3, [r3]
   125c8:	mov	r2, r0
   125cc:	mov	r0, r4
   125d0:	bl	10f3c <__fprintf_chk@plt>
   125d4:	mov	r0, r5
   125d8:	bl	10ed0 <exit@plt>
   125dc:	mov	r2, #5
   125e0:	ldr	r1, [pc, #800]	; 12908 <dcngettext@plt+0x1918>
   125e4:	bl	10e04 <dcgettext@plt>
   125e8:	ldr	r3, [pc, #788]	; 12904 <dcngettext@plt+0x1914>
   125ec:	ldr	r7, [pc, #792]	; 1290c <dcngettext@plt+0x191c>
   125f0:	ldr	r4, [pc, #792]	; 12910 <dcngettext@plt+0x1920>
   125f4:	ldr	r2, [r3]
   125f8:	mov	r1, r0
   125fc:	mov	r0, #1
   12600:	bl	10f24 <__printf_chk@plt>
   12604:	mov	r2, #5
   12608:	ldr	r1, [pc, #772]	; 12914 <dcngettext@plt+0x1924>
   1260c:	mov	r0, r5
   12610:	bl	10e04 <dcgettext@plt>
   12614:	mov	r3, #128	; 0x80
   12618:	ldr	r2, [pc, #760]	; 12918 <dcngettext@plt+0x1928>
   1261c:	mov	r1, r0
   12620:	mov	r0, #1
   12624:	bl	10f24 <__printf_chk@plt>
   12628:	mov	r2, #5
   1262c:	ldr	r1, [pc, #744]	; 1291c <dcngettext@plt+0x192c>
   12630:	mov	r0, r5
   12634:	bl	10e04 <dcgettext@plt>
   12638:	ldr	r1, [r7]
   1263c:	bl	10d68 <fputs_unlocked@plt>
   12640:	mov	r2, #5
   12644:	ldr	r1, [pc, #724]	; 12920 <dcngettext@plt+0x1930>
   12648:	mov	r0, r5
   1264c:	bl	10e04 <dcgettext@plt>
   12650:	ldr	r1, [r7]
   12654:	bl	10d68 <fputs_unlocked@plt>
   12658:	mov	r2, #5
   1265c:	ldr	r1, [pc, #704]	; 12924 <dcngettext@plt+0x1934>
   12660:	mov	r0, r5
   12664:	bl	10e04 <dcgettext@plt>
   12668:	ldr	r1, [r7]
   1266c:	bl	10d68 <fputs_unlocked@plt>
   12670:	mov	r2, #5
   12674:	ldr	r1, [pc, #684]	; 12928 <dcngettext@plt+0x1938>
   12678:	mov	r0, r5
   1267c:	bl	10e04 <dcgettext@plt>
   12680:	ldr	r1, [r7]
   12684:	bl	10d68 <fputs_unlocked@plt>
   12688:	mov	r2, #5
   1268c:	ldr	r1, [pc, #664]	; 1292c <dcngettext@plt+0x193c>
   12690:	mov	r0, r5
   12694:	bl	10e04 <dcgettext@plt>
   12698:	ldr	r1, [r7]
   1269c:	bl	10d68 <fputs_unlocked@plt>
   126a0:	mov	r2, #5
   126a4:	ldr	r1, [pc, #644]	; 12930 <dcngettext@plt+0x1940>
   126a8:	mov	r0, r5
   126ac:	bl	10e04 <dcgettext@plt>
   126b0:	ldr	r1, [r7]
   126b4:	bl	10d68 <fputs_unlocked@plt>
   126b8:	mov	r2, #5
   126bc:	ldr	r1, [pc, #624]	; 12934 <dcngettext@plt+0x1944>
   126c0:	mov	r0, r5
   126c4:	bl	10e04 <dcgettext@plt>
   126c8:	ldr	r1, [r7]
   126cc:	bl	10d68 <fputs_unlocked@plt>
   126d0:	mov	r2, #5
   126d4:	ldr	r1, [pc, #604]	; 12938 <dcngettext@plt+0x1948>
   126d8:	mov	r0, r5
   126dc:	bl	10e04 <dcgettext@plt>
   126e0:	ldr	r1, [r7]
   126e4:	bl	10d68 <fputs_unlocked@plt>
   126e8:	mov	r2, #5
   126ec:	ldr	r1, [pc, #584]	; 1293c <dcngettext@plt+0x194c>
   126f0:	mov	r0, r5
   126f4:	bl	10e04 <dcgettext@plt>
   126f8:	ldr	r1, [r7]
   126fc:	bl	10d68 <fputs_unlocked@plt>
   12700:	mov	r2, #5
   12704:	ldr	r1, [pc, #564]	; 12940 <dcngettext@plt+0x1950>
   12708:	mov	r0, r5
   1270c:	bl	10e04 <dcgettext@plt>
   12710:	ldr	r2, [pc, #556]	; 12944 <dcngettext@plt+0x1954>
   12714:	mov	r1, r0
   12718:	mov	r0, #1
   1271c:	bl	10f24 <__printf_chk@plt>
   12720:	mov	r2, #5
   12724:	ldr	r1, [pc, #540]	; 12948 <dcngettext@plt+0x1958>
   12728:	mov	r0, r5
   1272c:	bl	10e04 <dcgettext@plt>
   12730:	ldr	r1, [r7]
   12734:	bl	10d68 <fputs_unlocked@plt>
   12738:	ldm	r4!, {r0, r1, r2, r3}
   1273c:	mov	lr, sp
   12740:	stmia	lr!, {r0, r1, r2, r3}
   12744:	ldm	r4!, {r0, r1, r2, r3}
   12748:	ldr	ip, [sp]
   1274c:	stmia	lr!, {r0, r1, r2, r3}
   12750:	cmp	ip, #0
   12754:	ldm	r4!, {r0, r1, r2, r3}
   12758:	stmia	lr!, {r0, r1, r2, r3}
   1275c:	ldm	r4, {r0, r1}
   12760:	moveq	r4, sp
   12764:	stm	lr, {r0, r1}
   12768:	beq	12798 <dcngettext@plt+0x17a8>
   1276c:	ldr	r6, [pc, #472]	; 1294c <dcngettext@plt+0x195c>
   12770:	mov	r4, sp
   12774:	b	12784 <dcngettext@plt+0x1794>
   12778:	ldr	ip, [r4, #8]!
   1277c:	cmp	ip, #0
   12780:	beq	12798 <dcngettext@plt+0x17a8>
   12784:	mov	r1, ip
   12788:	mov	r0, r6
   1278c:	bl	10d8c <strcmp@plt>
   12790:	cmp	r0, #0
   12794:	bne	12778 <dcngettext@plt+0x1788>
   12798:	ldr	r4, [r4, #4]
   1279c:	mov	r2, #5
   127a0:	cmp	r4, #0
   127a4:	ldr	r1, [pc, #420]	; 12950 <dcngettext@plt+0x1960>
   127a8:	beq	12850 <dcngettext@plt+0x1860>
   127ac:	mov	r0, #0
   127b0:	bl	10e04 <dcgettext@plt>
   127b4:	ldr	r3, [pc, #408]	; 12954 <dcngettext@plt+0x1964>
   127b8:	ldr	r2, [pc, #408]	; 12958 <dcngettext@plt+0x1968>
   127bc:	mov	r1, r0
   127c0:	mov	r0, #1
   127c4:	bl	10f24 <__printf_chk@plt>
   127c8:	mov	r1, #0
   127cc:	mov	r0, #5
   127d0:	bl	10f78 <setlocale@plt>
   127d4:	cmp	r0, #0
   127d8:	ldreq	r6, [pc, #364]	; 1294c <dcngettext@plt+0x195c>
   127dc:	beq	127f8 <dcngettext@plt+0x1808>
   127e0:	mov	r2, #3
   127e4:	ldr	r1, [pc, #368]	; 1295c <dcngettext@plt+0x196c>
   127e8:	bl	10fcc <strncmp@plt>
   127ec:	ldr	r6, [pc, #344]	; 1294c <dcngettext@plt+0x195c>
   127f0:	cmp	r0, #0
   127f4:	bne	128e0 <dcngettext@plt+0x18f0>
   127f8:	mov	r2, #5
   127fc:	ldr	r1, [pc, #348]	; 12960 <dcngettext@plt+0x1970>
   12800:	mov	r0, #0
   12804:	bl	10e04 <dcgettext@plt>
   12808:	ldr	r3, [pc, #316]	; 1294c <dcngettext@plt+0x195c>
   1280c:	ldr	r2, [pc, #320]	; 12954 <dcngettext@plt+0x1964>
   12810:	mov	r1, r0
   12814:	mov	r0, #1
   12818:	bl	10f24 <__printf_chk@plt>
   1281c:	mov	r2, #5
   12820:	ldr	r1, [pc, #316]	; 12964 <dcngettext@plt+0x1974>
   12824:	mov	r0, #0
   12828:	bl	10e04 <dcgettext@plt>
   1282c:	ldr	r2, [pc, #308]	; 12968 <dcngettext@plt+0x1978>
   12830:	cmp	r4, r6
   12834:	ldr	r3, [pc, #304]	; 1296c <dcngettext@plt+0x197c>
   12838:	movne	r3, r2
   1283c:	mov	r1, r0
   12840:	mov	r2, r4
   12844:	mov	r0, #1
   12848:	bl	10f24 <__printf_chk@plt>
   1284c:	b	125d4 <dcngettext@plt+0x15e4>
   12850:	mov	r0, r4
   12854:	bl	10e04 <dcgettext@plt>
   12858:	ldr	r3, [pc, #244]	; 12954 <dcngettext@plt+0x1964>
   1285c:	ldr	r2, [pc, #244]	; 12958 <dcngettext@plt+0x1968>
   12860:	mov	r1, r0
   12864:	mov	r0, #1
   12868:	bl	10f24 <__printf_chk@plt>
   1286c:	mov	r1, r4
   12870:	mov	r0, #5
   12874:	bl	10f78 <setlocale@plt>
   12878:	cmp	r0, #0
   1287c:	beq	12894 <dcngettext@plt+0x18a4>
   12880:	mov	r2, #3
   12884:	ldr	r1, [pc, #208]	; 1295c <dcngettext@plt+0x196c>
   12888:	bl	10fcc <strncmp@plt>
   1288c:	cmp	r0, #0
   12890:	bne	128d8 <dcngettext@plt+0x18e8>
   12894:	mov	r2, #5
   12898:	ldr	r1, [pc, #192]	; 12960 <dcngettext@plt+0x1970>
   1289c:	mov	r0, #0
   128a0:	bl	10e04 <dcgettext@plt>
   128a4:	ldr	r3, [pc, #160]	; 1294c <dcngettext@plt+0x195c>
   128a8:	ldr	r2, [pc, #164]	; 12954 <dcngettext@plt+0x1964>
   128ac:	mov	r4, r3
   128b0:	mov	r1, r0
   128b4:	mov	r0, #1
   128b8:	bl	10f24 <__printf_chk@plt>
   128bc:	ldr	r1, [pc, #160]	; 12964 <dcngettext@plt+0x1974>
   128c0:	mov	r2, #5
   128c4:	mov	r0, #0
   128c8:	bl	10e04 <dcgettext@plt>
   128cc:	ldr	r3, [pc, #152]	; 1296c <dcngettext@plt+0x197c>
   128d0:	mov	r1, r0
   128d4:	b	12840 <dcngettext@plt+0x1850>
   128d8:	ldr	r6, [pc, #108]	; 1294c <dcngettext@plt+0x195c>
   128dc:	mov	r4, r6
   128e0:	mov	r2, #5
   128e4:	ldr	r1, [pc, #132]	; 12970 <dcngettext@plt+0x1980>
   128e8:	mov	r0, #0
   128ec:	bl	10e04 <dcgettext@plt>
   128f0:	ldr	r1, [r7]
   128f4:	bl	10d68 <fputs_unlocked@plt>
   128f8:	b	127f8 <dcngettext@plt+0x1808>
   128fc:	andeq	r9, r2, r0, ror #2
   12900:			; <UNDEFINED> instruction: 0x000171bc
   12904:	andeq	r9, r2, ip, lsl #3
   12908:	andeq	r7, r1, r4, ror #3
   1290c:	andeq	r9, r2, ip, ror #2
   12910:	andeq	r7, r1, r8, lsl #1
   12914:	andeq	r7, r1, r8, lsl #4
   12918:	andeq	r7, r1, r0, lsr r2
   1291c:	andeq	r7, r1, r4, lsr r2
   12920:	andeq	r7, r1, ip, ror #4
   12924:	muleq	r1, ip, r2
   12928:	andeq	r7, r1, r4, ror #5
   1292c:	andeq	r7, r1, ip, lsl r3
   12930:	andeq	r7, r1, r4, asr r3
   12934:	ldrdeq	r7, [r1], -r4
   12938:	andeq	r7, r1, ip, lsl #11
   1293c:			; <UNDEFINED> instruction: 0x000175bc
   12940:	strdeq	r7, [r1], -r4
   12944:	andeq	r7, r1, r0, lsr #12
   12948:	andeq	r7, r1, ip, lsr #12
   1294c:			; <UNDEFINED> instruction: 0x000171b4
   12950:	andeq	r7, r1, ip, ror r7
   12954:	muleq	r1, r4, r7
   12958:			; <UNDEFINED> instruction: 0x000177bc
   1295c:	andeq	r7, r1, ip, asr #15
   12960:	andeq	r7, r1, r8, lsl r8
   12964:	andeq	r7, r1, r4, lsr r8
   12968:	andeq	r7, r1, r0, asr r3
   1296c:	strdeq	r7, [r1], -ip
   12970:	ldrdeq	r7, [r1], -r0
   12974:	ldr	r3, [pc, #4]	; 12980 <dcngettext@plt+0x1990>
   12978:	str	r0, [r3]
   1297c:	bx	lr
   12980:	andeq	r9, r2, r4, lsl #3
   12984:	ldr	r3, [pc, #4]	; 12990 <dcngettext@plt+0x19a0>
   12988:	strb	r0, [r3, #4]
   1298c:	bx	lr
   12990:	andeq	r9, r2, r4, lsl #3
   12994:	ldr	r3, [pc, #192]	; 12a5c <dcngettext@plt+0x1a6c>
   12998:	push	{r4, r5, r6, lr}
   1299c:	sub	sp, sp, #8
   129a0:	ldr	r0, [r3]
   129a4:	bl	16628 <dcngettext@plt+0x5638>
   129a8:	cmp	r0, #0
   129ac:	beq	129d0 <dcngettext@plt+0x19e0>
   129b0:	ldr	r4, [pc, #168]	; 12a60 <dcngettext@plt+0x1a70>
   129b4:	ldrb	r3, [r4, #4]
   129b8:	cmp	r3, #0
   129bc:	beq	129ec <dcngettext@plt+0x19fc>
   129c0:	bl	10ef4 <__errno_location@plt>
   129c4:	ldr	r3, [r0]
   129c8:	cmp	r3, #32
   129cc:	bne	129ec <dcngettext@plt+0x19fc>
   129d0:	ldr	r3, [pc, #140]	; 12a64 <dcngettext@plt+0x1a74>
   129d4:	ldr	r0, [r3]
   129d8:	bl	16628 <dcngettext@plt+0x5638>
   129dc:	cmp	r0, #0
   129e0:	bne	12a34 <dcngettext@plt+0x1a44>
   129e4:	add	sp, sp, #8
   129e8:	pop	{r4, r5, r6, pc}
   129ec:	mov	r2, #5
   129f0:	ldr	r1, [pc, #112]	; 12a68 <dcngettext@plt+0x1a78>
   129f4:	mov	r0, #0
   129f8:	bl	10e04 <dcgettext@plt>
   129fc:	ldr	r4, [r4]
   12a00:	cmp	r4, #0
   12a04:	mov	r5, r0
   12a08:	beq	12a40 <dcngettext@plt+0x1a50>
   12a0c:	bl	10ef4 <__errno_location@plt>
   12a10:	ldr	r6, [r0]
   12a14:	mov	r0, r4
   12a18:	bl	158f4 <dcngettext@plt+0x4904>
   12a1c:	mov	r1, r6
   12a20:	str	r5, [sp]
   12a24:	ldr	r2, [pc, #64]	; 12a6c <dcngettext@plt+0x1a7c>
   12a28:	mov	r3, r0
   12a2c:	mov	r0, #0
   12a30:	bl	10e70 <error@plt>
   12a34:	ldr	r3, [pc, #52]	; 12a70 <dcngettext@plt+0x1a80>
   12a38:	ldr	r0, [r3]
   12a3c:	bl	10dbc <_exit@plt>
   12a40:	bl	10ef4 <__errno_location@plt>
   12a44:	mov	r3, r5
   12a48:	ldr	r2, [pc, #36]	; 12a74 <dcngettext@plt+0x1a84>
   12a4c:	ldr	r1, [r0]
   12a50:	mov	r0, r4
   12a54:	bl	10e70 <error@plt>
   12a58:	b	12a34 <dcngettext@plt+0x1a44>
   12a5c:	andeq	r9, r2, ip, ror #2
   12a60:	andeq	r9, r2, r4, lsl #3
   12a64:	andeq	r9, r2, r0, ror #2
   12a68:	ldrdeq	r7, [r1], -r4
   12a6c:	andeq	r7, r1, r0, ror #27
   12a70:	andeq	r9, r2, r8, lsl #2
   12a74:	andeq	r7, r1, r4, ror #27
   12a78:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a7c:	mov	r5, r0
   12a80:	sub	sp, sp, #164	; 0xa4
   12a84:	ldr	r0, [pc, #200]	; 12b54 <dcngettext@plt+0x1b64>
   12a88:	mov	r8, r1
   12a8c:	bl	165a0 <dcngettext@plt+0x55b0>
   12a90:	subs	r6, r0, #0
   12a94:	moveq	r0, #1
   12a98:	beq	12b08 <dcngettext@plt+0x1b18>
   12a9c:	add	r0, sp, #4
   12aa0:	bl	12b58 <dcngettext@plt+0x1b68>
   12aa4:	mov	r7, #1
   12aa8:	mov	r9, #32768	; 0x8000
   12aac:	mov	r4, #0
   12ab0:	b	12acc <dcngettext@plt+0x1adc>
   12ab4:	bl	10fc0 <fread_unlocked@plt>
   12ab8:	add	r4, r4, r0
   12abc:	cmp	r4, #32768	; 0x8000
   12ac0:	beq	12b10 <dcngettext@plt+0x1b20>
   12ac4:	cmp	r0, #0
   12ac8:	beq	12b24 <dcngettext@plt+0x1b34>
   12acc:	ldr	ip, [r5]
   12ad0:	rsb	r2, r4, #32768	; 0x8000
   12ad4:	tst	ip, #16
   12ad8:	add	r0, r6, r4
   12adc:	mov	r3, r5
   12ae0:	mov	r1, r7
   12ae4:	beq	12ab4 <dcngettext@plt+0x1ac4>
   12ae8:	cmp	r4, #0
   12aec:	bne	12b40 <dcngettext@plt+0x1b50>
   12af0:	mov	r1, r8
   12af4:	add	r0, sp, #4
   12af8:	bl	13644 <dcngettext@plt+0x2654>
   12afc:	mov	r0, r6
   12b00:	bl	13ad4 <dcngettext@plt+0x2ae4>
   12b04:	mov	r0, #0
   12b08:	add	sp, sp, #164	; 0xa4
   12b0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12b10:	add	r2, sp, #4
   12b14:	mov	r1, r9
   12b18:	mov	r0, r6
   12b1c:	bl	12bcc <dcngettext@plt+0x1bdc>
   12b20:	b	12aac <dcngettext@plt+0x1abc>
   12b24:	ldr	r3, [r5]
   12b28:	tst	r3, #32
   12b2c:	beq	12ae8 <dcngettext@plt+0x1af8>
   12b30:	mov	r0, r6
   12b34:	bl	13ad4 <dcngettext@plt+0x2ae4>
   12b38:	mov	r0, #1
   12b3c:	b	12b08 <dcngettext@plt+0x1b18>
   12b40:	mov	r1, r4
   12b44:	add	r2, sp, #4
   12b48:	mov	r0, r6
   12b4c:	bl	136ec <dcngettext@plt+0x26fc>
   12b50:	b	12af0 <dcngettext@plt+0x1b00>
   12b54:	andeq	r8, r0, r8, asr #32
   12b58:	push	{lr}		; (str lr, [sp, #-4]!)
   12b5c:	mov	r3, #0
   12b60:	ldr	lr, [pc, #40]	; 12b90 <dcngettext@plt+0x1ba0>
   12b64:	ldr	ip, [pc, #40]	; 12b94 <dcngettext@plt+0x1ba4>
   12b68:	ldr	r1, [pc, #40]	; 12b98 <dcngettext@plt+0x1ba8>
   12b6c:	ldr	r2, [pc, #40]	; 12b9c <dcngettext@plt+0x1bac>
   12b70:	str	lr, [r0]
   12b74:	str	ip, [r0, #4]
   12b78:	str	r1, [r0, #8]
   12b7c:	str	r2, [r0, #12]
   12b80:	str	r3, [r0, #20]
   12b84:	str	r3, [r0, #16]
   12b88:	str	r3, [r0, #24]
   12b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b90:	strbvs	r2, [r5, -r1, lsl #6]
   12b94:	svc	0x00cdab89
   12b98:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12b9c:	eorsne	r5, r2, r6, ror r4
   12ba0:	ldr	r2, [r0]
   12ba4:	mov	r3, r0
   12ba8:	str	r2, [r1]
   12bac:	ldr	r2, [r3, #4]
   12bb0:	mov	r0, r1
   12bb4:	str	r2, [r1, #4]
   12bb8:	ldr	r2, [r3, #8]
   12bbc:	str	r2, [r1, #8]
   12bc0:	ldr	r3, [r3, #12]
   12bc4:	str	r3, [r1, #12]
   12bc8:	bx	lr
   12bcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bd0:	sub	sp, sp, #20
   12bd4:	ldr	r3, [r2, #16]
   12bd8:	mov	lr, r2
   12bdc:	str	r2, [sp, #12]
   12be0:	ldr	r2, [r2, #20]
   12be4:	add	r3, r1, r3
   12be8:	bic	ip, r1, #3
   12bec:	add	ip, r0, ip
   12bf0:	cmp	r1, r3
   12bf4:	movls	r1, r2
   12bf8:	addhi	r1, r2, #1
   12bfc:	str	r3, [lr, #16]
   12c00:	ldr	r3, [lr]
   12c04:	cmp	r0, ip
   12c08:	str	r1, [lr, #20]
   12c0c:	str	r3, [sp, #4]
   12c10:	str	ip, [sp, #8]
   12c14:	ldr	r3, [lr, #4]
   12c18:	ldr	r1, [lr, #8]
   12c1c:	ldr	r2, [lr, #12]
   12c20:	bcs	13554 <dcngettext@plt+0x2564>
   12c24:	mov	r9, r0
   12c28:	mov	lr, r3
   12c2c:	mov	r4, r1
   12c30:	mov	r6, r2
   12c34:	ldr	r3, [sp, #4]
   12c38:	ldr	r2, [r9]
   12c3c:	add	r3, r3, #-687865856	; 0xd7000000
   12c40:	add	r3, r3, #6946816	; 0x6a0000
   12c44:	eor	r8, r4, r6
   12c48:	add	r3, r3, #41984	; 0xa400
   12c4c:	and	r8, r8, lr
   12c50:	add	r3, r3, #120	; 0x78
   12c54:	add	r3, r3, r2
   12c58:	eor	r8, r8, r6
   12c5c:	add	r8, r8, r3
   12c60:	ldr	r5, [pc, #2296]	; 13560 <dcngettext@plt+0x2570>
   12c64:	add	r8, lr, r8, ror #25
   12c68:	ldr	r2, [r9, #4]
   12c6c:	eor	r7, lr, r4
   12c70:	and	r7, r7, r8
   12c74:	add	r5, r6, r5
   12c78:	add	r5, r5, r2
   12c7c:	eor	r7, r7, r4
   12c80:	add	r7, r7, r5
   12c84:	ldr	r0, [pc, #2264]	; 13564 <dcngettext@plt+0x2574>
   12c88:	add	r7, r8, r7, ror #20
   12c8c:	ldr	r2, [r9, #8]
   12c90:	eor	ip, r8, lr
   12c94:	and	ip, ip, r7
   12c98:	add	r0, r4, r0
   12c9c:	add	r0, r0, r2
   12ca0:	eor	ip, ip, lr
   12ca4:	add	ip, ip, r0
   12ca8:	ldr	r2, [pc, #2232]	; 13568 <dcngettext@plt+0x2578>
   12cac:	add	ip, r7, ip, ror #15
   12cb0:	ldr	r0, [r9, #12]
   12cb4:	eor	r1, r8, r7
   12cb8:	and	r1, r1, ip
   12cbc:	add	r2, lr, r2
   12cc0:	add	r2, r2, r0
   12cc4:	eor	r1, r1, r8
   12cc8:	ldr	r0, [r9, #16]
   12ccc:	add	r1, r1, r2
   12cd0:	ldr	r3, [pc, #2196]	; 1356c <dcngettext@plt+0x257c>
   12cd4:	add	r1, ip, r1, ror #10
   12cd8:	eor	r2, r7, ip
   12cdc:	add	r3, r0, r3
   12ce0:	ldr	r0, [r9, #20]
   12ce4:	and	r2, r2, r1
   12ce8:	add	r8, r3, r8
   12cec:	add	r0, r0, #1191182336	; 0x47000000
   12cf0:	eor	r3, r2, r7
   12cf4:	add	r3, r3, r8
   12cf8:	add	r0, r0, #8847360	; 0x870000
   12cfc:	add	r0, r0, #50688	; 0xc600
   12d00:	add	r3, r1, r3, ror #25
   12d04:	eor	r2, ip, r1
   12d08:	add	r0, r0, #42	; 0x2a
   12d0c:	and	r2, r2, r3
   12d10:	add	r7, r0, r7
   12d14:	ldr	r0, [r9, #24]
   12d18:	eor	r5, r2, ip
   12d1c:	add	r5, r5, r7
   12d20:	add	r0, r0, #-1476395008	; 0xa8000000
   12d24:	add	r0, r0, #3162112	; 0x304000
   12d28:	add	r5, r3, r5, ror #20
   12d2c:	eor	r2, r1, r3
   12d30:	add	r0, r0, #1552	; 0x610
   12d34:	and	r2, r2, r5
   12d38:	add	r0, r0, #3
   12d3c:	add	ip, r0, ip
   12d40:	eor	r0, r2, r1
   12d44:	ldr	r2, [r9, #28]
   12d48:	add	r0, r0, ip
   12d4c:	add	r2, r2, #-50331648	; 0xfd000000
   12d50:	add	r2, r2, #4587520	; 0x460000
   12d54:	add	r0, r5, r0, ror #15
   12d58:	eor	ip, r3, r5
   12d5c:	add	r2, r2, #38144	; 0x9500
   12d60:	and	ip, ip, r0
   12d64:	add	r2, r2, #1
   12d68:	add	r1, r2, r1
   12d6c:	eor	r2, ip, r3
   12d70:	ldr	ip, [r9, #32]
   12d74:	add	r2, r2, r1
   12d78:	add	ip, ip, #1761607680	; 0x69000000
   12d7c:	add	ip, ip, #8388608	; 0x800000
   12d80:	add	r2, r0, r2, ror #10
   12d84:	eor	r1, r5, r0
   12d88:	add	ip, ip, #38912	; 0x9800
   12d8c:	and	r1, r1, r2
   12d90:	add	ip, ip, #216	; 0xd8
   12d94:	add	r3, ip, r3
   12d98:	eor	sl, r1, r5
   12d9c:	add	sl, sl, r3
   12da0:	ldr	ip, [r9, #36]	; 0x24
   12da4:	ldr	r1, [pc, #1988]	; 13570 <dcngettext@plt+0x2580>
   12da8:	add	sl, r2, sl, ror #25
   12dac:	eor	r3, r0, r2
   12db0:	add	r1, ip, r1
   12db4:	and	r3, r3, sl
   12db8:	add	r5, r1, r5
   12dbc:	eor	r7, r3, r0
   12dc0:	ldr	r1, [r9, #40]	; 0x28
   12dc4:	add	r7, r7, r5
   12dc8:	sub	r1, r1, #41984	; 0xa400
   12dcc:	add	r7, sl, r7, ror #20
   12dd0:	eor	r3, r2, sl
   12dd4:	sub	r1, r1, #79	; 0x4f
   12dd8:	and	r3, r3, r7
   12ddc:	add	r0, r1, r0
   12de0:	ldr	r1, [r9, #44]	; 0x2c
   12de4:	eor	r3, r3, r2
   12de8:	add	r0, r3, r0
   12dec:	add	r1, r1, #-1996488704	; 0x89000000
   12df0:	add	r1, r1, #6029312	; 0x5c0000
   12df4:	add	ip, r7, r0, ror #15
   12df8:	eor	r3, sl, r7
   12dfc:	add	r1, r1, #55040	; 0xd700
   12e00:	and	r3, r3, ip
   12e04:	add	r1, r1, #190	; 0xbe
   12e08:	add	r2, r1, r2
   12e0c:	eor	r1, r3, sl
   12e10:	add	r1, r1, r2
   12e14:	ldr	r8, [r9, #48]	; 0x30
   12e18:	ldr	r0, [pc, #1876]	; 13574 <dcngettext@plt+0x2584>
   12e1c:	add	r1, ip, r1, ror #10
   12e20:	eor	r2, r7, ip
   12e24:	add	r0, r8, r0
   12e28:	and	r2, r2, r1
   12e2c:	add	sl, r0, sl
   12e30:	eor	r3, r2, r7
   12e34:	add	r3, r3, sl
   12e38:	ldr	r5, [r9, #52]	; 0x34
   12e3c:	ldr	r0, [pc, #1844]	; 13578 <dcngettext@plt+0x2588>
   12e40:	add	r3, r1, r3, ror #25
   12e44:	eor	r2, ip, r1
   12e48:	add	r0, r5, r0
   12e4c:	and	r2, r2, r3
   12e50:	add	r7, r0, r7
   12e54:	eor	r5, r2, ip
   12e58:	add	r5, r5, r7
   12e5c:	ldr	sl, [r9, #56]	; 0x38
   12e60:	ldr	r7, [pc, #1812]	; 1357c <dcngettext@plt+0x258c>
   12e64:	add	r5, r3, r5, ror #20
   12e68:	eor	r2, r1, r3
   12e6c:	add	r7, sl, r7
   12e70:	and	r2, r2, r5
   12e74:	add	ip, r7, ip
   12e78:	eor	r0, r2, r1
   12e7c:	add	r0, r0, ip
   12e80:	ldr	r7, [r9, #60]	; 0x3c
   12e84:	ldr	r2, [pc, #1780]	; 13580 <dcngettext@plt+0x2590>
   12e88:	add	r0, r5, r0, ror #15
   12e8c:	eor	ip, r3, r5
   12e90:	add	r2, r7, r2
   12e94:	and	ip, ip, r0
   12e98:	add	r1, r2, r1
   12e9c:	eor	r2, ip, r3
   12ea0:	add	r2, r2, r1
   12ea4:	ldr	ip, [pc, #1752]	; 13584 <dcngettext@plt+0x2594>
   12ea8:	ldr	r1, [r9, #4]
   12eac:	add	r2, r0, r2, ror #10
   12eb0:	add	ip, r1, ip
   12eb4:	eor	r1, r0, r2
   12eb8:	and	r1, r1, r5
   12ebc:	add	r3, ip, r3
   12ec0:	eor	fp, r1, r0
   12ec4:	add	fp, fp, r3
   12ec8:	ldr	ip, [r9, #24]
   12ecc:	add	fp, r2, fp, ror #27
   12ed0:	ldr	r1, [pc, #1712]	; 13588 <dcngettext@plt+0x2598>
   12ed4:	eor	r3, r2, fp
   12ed8:	add	r1, ip, r1
   12edc:	and	r3, r3, r0
   12ee0:	eor	r3, r3, r2
   12ee4:	add	r5, r1, r5
   12ee8:	add	r5, r3, r5
   12eec:	ldr	r1, [r9, #44]	; 0x2c
   12ef0:	add	r5, fp, r5, ror #23
   12ef4:	ldr	ip, [pc, #1680]	; 1358c <dcngettext@plt+0x259c>
   12ef8:	eor	r3, fp, r5
   12efc:	add	ip, r1, ip
   12f00:	and	r3, r3, r2
   12f04:	add	r0, ip, r0
   12f08:	eor	ip, r3, fp
   12f0c:	add	ip, ip, r0
   12f10:	ldr	r1, [pc, #1656]	; 13590 <dcngettext@plt+0x25a0>
   12f14:	add	ip, r5, ip, ror #18
   12f18:	ldr	r0, [r9]
   12f1c:	eor	r3, r5, ip
   12f20:	add	r1, r0, r1
   12f24:	and	r3, r3, fp
   12f28:	eor	r3, r3, r5
   12f2c:	add	r2, r1, r2
   12f30:	add	r2, r3, r2
   12f34:	ldr	r0, [r9, #20]
   12f38:	add	r2, ip, r2, ror #12
   12f3c:	ldr	r3, [pc, #1616]	; 13594 <dcngettext@plt+0x25a4>
   12f40:	eor	r1, ip, r2
   12f44:	add	r3, r0, r3
   12f48:	and	r1, r1, r5
   12f4c:	add	fp, r3, fp
   12f50:	eor	r3, r1, ip
   12f54:	add	r3, r3, fp
   12f58:	ldr	r1, [pc, #1592]	; 13598 <dcngettext@plt+0x25a8>
   12f5c:	add	r3, r2, r3, ror #27
   12f60:	ldr	fp, [r9, #40]	; 0x28
   12f64:	eor	r0, r2, r3
   12f68:	add	r1, fp, r1
   12f6c:	and	r0, r0, ip
   12f70:	add	r5, r1, r5
   12f74:	eor	r1, r0, r2
   12f78:	add	r1, r1, r5
   12f7c:	ldr	r0, [pc, #1560]	; 1359c <dcngettext@plt+0x25ac>
   12f80:	add	r1, r3, r1, ror #23
   12f84:	eor	r5, r3, r1
   12f88:	add	r0, r7, r0
   12f8c:	and	r5, r5, r2
   12f90:	add	ip, r0, ip
   12f94:	eor	r0, r5, r3
   12f98:	add	r0, r0, ip
   12f9c:	ldr	fp, [r9, #16]
   12fa0:	add	r0, r1, r0, ror #18
   12fa4:	ldr	r5, [pc, #1524]	; 135a0 <dcngettext@plt+0x25b0>
   12fa8:	eor	ip, r1, r0
   12fac:	add	r5, fp, r5
   12fb0:	and	ip, ip, r3
   12fb4:	eor	ip, ip, r1
   12fb8:	add	r2, r5, r2
   12fbc:	add	r2, ip, r2
   12fc0:	ldr	fp, [r9, #36]	; 0x24
   12fc4:	add	r2, r0, r2, ror #12
   12fc8:	ldr	r5, [pc, #1492]	; 135a4 <dcngettext@plt+0x25b4>
   12fcc:	eor	ip, r0, r2
   12fd0:	add	r5, fp, r5
   12fd4:	and	ip, ip, r1
   12fd8:	add	r3, r5, r3
   12fdc:	eor	fp, ip, r0
   12fe0:	add	fp, fp, r3
   12fe4:	ldr	ip, [pc, #1468]	; 135a8 <dcngettext@plt+0x25b8>
   12fe8:	add	fp, r2, fp, ror #27
   12fec:	eor	r3, r2, fp
   12ff0:	add	ip, sl, ip
   12ff4:	and	r3, r3, r0
   12ff8:	add	r1, ip, r1
   12ffc:	eor	r5, r3, r2
   13000:	add	r5, r5, r1
   13004:	ldr	ip, [pc, #1440]	; 135ac <dcngettext@plt+0x25bc>
   13008:	add	r5, fp, r5, ror #23
   1300c:	ldr	r1, [r9, #12]
   13010:	eor	r3, fp, r5
   13014:	add	ip, r1, ip
   13018:	and	r3, r3, r2
   1301c:	add	r0, ip, r0
   13020:	eor	ip, r3, fp
   13024:	add	ip, ip, r0
   13028:	ldr	r1, [pc, #1408]	; 135b0 <dcngettext@plt+0x25c0>
   1302c:	add	ip, r5, ip, ror #18
   13030:	ldr	r0, [r9, #32]
   13034:	eor	r3, r5, ip
   13038:	add	r1, r0, r1
   1303c:	and	r3, r3, fp
   13040:	eor	r3, r3, r5
   13044:	add	r2, r1, r2
   13048:	add	r2, r3, r2
   1304c:	ldr	r0, [r9, #52]	; 0x34
   13050:	add	r2, ip, r2, ror #12
   13054:	ldr	r3, [pc, #1368]	; 135b4 <dcngettext@plt+0x25c4>
   13058:	eor	r1, ip, r2
   1305c:	add	r3, r0, r3
   13060:	and	r1, r1, r5
   13064:	add	fp, r3, fp
   13068:	eor	r3, r1, ip
   1306c:	add	r3, r3, fp
   13070:	ldr	r1, [pc, #1344]	; 135b8 <dcngettext@plt+0x25c8>
   13074:	add	r3, r2, r3, ror #27
   13078:	ldr	fp, [r9, #8]
   1307c:	eor	r0, r2, r3
   13080:	add	r1, fp, r1
   13084:	and	r0, r0, ip
   13088:	add	r5, r1, r5
   1308c:	eor	r1, r0, r2
   13090:	add	r1, r1, r5
   13094:	ldr	fp, [r9, #28]
   13098:	add	r1, r3, r1, ror #23
   1309c:	ldr	r0, [pc, #1304]	; 135bc <dcngettext@plt+0x25cc>
   130a0:	eor	r5, r3, r1
   130a4:	add	r0, fp, r0
   130a8:	and	r5, r5, r2
   130ac:	add	ip, r0, ip
   130b0:	eor	r0, r5, r3
   130b4:	add	r0, r0, ip
   130b8:	ldr	r5, [pc, #1280]	; 135c0 <dcngettext@plt+0x25d0>
   130bc:	add	r0, r1, r0, ror #18
   130c0:	eor	fp, r1, r0
   130c4:	add	r5, r8, r5
   130c8:	and	ip, r3, fp
   130cc:	eor	ip, ip, r1
   130d0:	add	r2, r5, r2
   130d4:	add	r2, ip, r2
   130d8:	ldr	r5, [pc, #1252]	; 135c4 <dcngettext@plt+0x25d4>
   130dc:	ldr	ip, [r9, #20]
   130e0:	add	r2, r0, r2, ror #12
   130e4:	add	r5, ip, r5
   130e8:	eor	fp, fp, r2
   130ec:	add	r3, r5, r3
   130f0:	ldr	ip, [r9, #32]
   130f4:	add	r3, fp, r3
   130f8:	ldr	fp, [pc, #1224]	; 135c8 <dcngettext@plt+0x25d8>
   130fc:	add	r3, r2, r3, ror #28
   13100:	add	fp, ip, fp
   13104:	eor	ip, r0, r2
   13108:	eor	ip, ip, r3
   1310c:	add	r1, fp, r1
   13110:	add	r1, ip, r1
   13114:	ldr	r5, [pc, #1200]	; 135cc <dcngettext@plt+0x25dc>
   13118:	ldr	ip, [r9, #44]	; 0x2c
   1311c:	add	r1, r3, r1, ror #21
   13120:	add	r5, ip, r5
   13124:	eor	ip, r2, r3
   13128:	eor	ip, ip, r1
   1312c:	add	r0, r5, r0
   13130:	add	r0, ip, r0
   13134:	ldr	r5, [pc, #1172]	; 135d0 <dcngettext@plt+0x25e0>
   13138:	add	r0, r1, r0, ror #16
   1313c:	add	r5, sl, r5
   13140:	eor	fp, r3, r1
   13144:	eor	fp, fp, r0
   13148:	add	r2, r5, r2
   1314c:	ldr	ip, [r9, #4]
   13150:	add	r2, fp, r2
   13154:	ldr	fp, [pc, #1144]	; 135d4 <dcngettext@plt+0x25e4>
   13158:	add	r2, r0, r2, ror #9
   1315c:	add	fp, ip, fp
   13160:	eor	ip, r1, r0
   13164:	add	r3, fp, r3
   13168:	eor	fp, ip, r2
   1316c:	ldr	r5, [r9, #16]
   13170:	add	fp, fp, r3
   13174:	ldr	ip, [pc, #1116]	; 135d8 <dcngettext@plt+0x25e8>
   13178:	add	fp, r2, fp, ror #28
   1317c:	add	ip, r5, ip
   13180:	eor	r3, r0, r2
   13184:	eor	r3, r3, fp
   13188:	add	r1, ip, r1
   1318c:	ldr	r5, [r9, #28]
   13190:	add	r1, r3, r1
   13194:	ldr	ip, [pc, #1088]	; 135dc <dcngettext@plt+0x25ec>
   13198:	add	r1, fp, r1, ror #21
   1319c:	add	ip, r5, ip
   131a0:	eor	r3, r2, fp
   131a4:	eor	r3, r3, r1
   131a8:	add	r0, ip, r0
   131ac:	add	r0, r3, r0
   131b0:	ldr	ip, [r9, #40]	; 0x28
   131b4:	ldr	r5, [pc, #1060]	; 135e0 <dcngettext@plt+0x25f0>
   131b8:	add	r0, r1, r0, ror #16
   131bc:	eor	r3, fp, r1
   131c0:	add	r5, ip, r5
   131c4:	add	r2, r5, r2
   131c8:	eor	r5, r3, r0
   131cc:	ldr	ip, [r9, #52]	; 0x34
   131d0:	add	r5, r5, r2
   131d4:	ldr	r2, [pc, #1032]	; 135e4 <dcngettext@plt+0x25f4>
   131d8:	add	r5, r0, r5, ror #9
   131dc:	add	r2, ip, r2
   131e0:	eor	ip, r1, r0
   131e4:	add	fp, r2, fp
   131e8:	eor	r2, ip, r5
   131ec:	add	r2, r2, fp
   131f0:	ldr	ip, [pc, #1008]	; 135e8 <dcngettext@plt+0x25f8>
   131f4:	ldr	fp, [r9]
   131f8:	add	r2, r5, r2, ror #28
   131fc:	eor	r3, r0, r5
   13200:	add	ip, fp, ip
   13204:	add	r1, ip, r1
   13208:	eor	fp, r3, r2
   1320c:	add	fp, fp, r1
   13210:	ldr	ip, [pc, #980]	; 135ec <dcngettext@plt+0x25fc>
   13214:	ldr	r1, [r9, #12]
   13218:	add	fp, r2, fp, ror #21
   1321c:	eor	r3, r5, r2
   13220:	add	ip, r1, ip
   13224:	add	r0, ip, r0
   13228:	eor	ip, r3, fp
   1322c:	ldr	r1, [r9, #24]
   13230:	add	ip, ip, r0
   13234:	ldr	r3, [pc, #948]	; 135f0 <dcngettext@plt+0x2600>
   13238:	add	ip, fp, ip, ror #16
   1323c:	add	r3, r1, r3
   13240:	eor	r1, r2, fp
   13244:	add	r5, r3, r5
   13248:	eor	r3, r1, ip
   1324c:	add	r3, r3, r5
   13250:	ldr	r1, [r9, #36]	; 0x24
   13254:	ldr	r0, [pc, #920]	; 135f4 <dcngettext@plt+0x2604>
   13258:	add	r3, ip, r3, ror #9
   1325c:	add	r0, r1, r0
   13260:	eor	r1, fp, ip
   13264:	add	r2, r0, r2
   13268:	eor	r5, r1, r3
   1326c:	add	r5, r5, r2
   13270:	ldr	r0, [pc, #896]	; 135f8 <dcngettext@plt+0x2608>
   13274:	add	r5, r3, r5, ror #28
   13278:	eor	r2, ip, r3
   1327c:	add	r0, r8, r0
   13280:	add	fp, r0, fp
   13284:	eor	r0, r2, r5
   13288:	add	r0, r0, fp
   1328c:	ldr	r1, [pc, #872]	; 135fc <dcngettext@plt+0x260c>
   13290:	add	r0, r5, r0, ror #21
   13294:	eor	r2, r3, r5
   13298:	add	r1, r7, r1
   1329c:	add	ip, r1, ip
   132a0:	eor	r1, r2, r0
   132a4:	add	r1, r1, ip
   132a8:	ldr	r2, [r9, #8]
   132ac:	ldr	ip, [pc, #844]	; 13600 <dcngettext@plt+0x2610>
   132b0:	add	r1, r0, r1, ror #16
   132b4:	add	ip, r2, ip
   132b8:	eor	r2, r5, r0
   132bc:	add	r3, ip, r3
   132c0:	eor	ip, r2, r1
   132c4:	add	ip, ip, r3
   132c8:	ldr	fp, [r9]
   132cc:	ldr	r2, [pc, #816]	; 13604 <dcngettext@plt+0x2614>
   132d0:	add	ip, r1, ip, ror #9
   132d4:	mvn	r3, r0
   132d8:	add	r2, fp, r2
   132dc:	orr	r3, r3, ip
   132e0:	add	r5, r2, r5
   132e4:	eor	r2, r3, r1
   132e8:	add	r2, r2, r5
   132ec:	ldr	fp, [pc, #788]	; 13608 <dcngettext@plt+0x2618>
   132f0:	ldr	r5, [r9, #28]
   132f4:	add	r2, ip, r2, ror #26
   132f8:	mvn	r3, r1
   132fc:	add	fp, r5, fp
   13300:	orr	r3, r3, r2
   13304:	eor	r3, r3, ip
   13308:	add	r0, fp, r0
   1330c:	add	r0, r3, r0
   13310:	ldr	fp, [pc, #756]	; 1360c <dcngettext@plt+0x261c>
   13314:	add	r0, r2, r0, ror #22
   13318:	mvn	r5, ip
   1331c:	add	fp, sl, fp
   13320:	orr	r5, r5, r0
   13324:	eor	r5, r5, r2
   13328:	add	r1, fp, r1
   1332c:	add	r1, r5, r1
   13330:	ldr	r3, [pc, #728]	; 13610 <dcngettext@plt+0x2620>
   13334:	ldr	r5, [r9, #20]
   13338:	add	r1, r0, r1, ror #17
   1333c:	mvn	sl, r2
   13340:	add	r3, r5, r3
   13344:	orr	sl, sl, r1
   13348:	add	ip, r3, ip
   1334c:	eor	sl, sl, r0
   13350:	add	ip, sl, ip
   13354:	ldr	fp, [pc, #696]	; 13614 <dcngettext@plt+0x2624>
   13358:	add	ip, r1, ip, ror #11
   1335c:	mvn	r5, r0
   13360:	add	fp, r8, fp
   13364:	orr	r5, r5, ip
   13368:	eor	r5, r5, r1
   1336c:	add	r2, fp, r2
   13370:	add	r2, r5, r2
   13374:	ldr	r8, [pc, #668]	; 13618 <dcngettext@plt+0x2628>
   13378:	ldr	r5, [r9, #12]
   1337c:	add	r2, ip, r2, ror #26
   13380:	mvn	r3, r1
   13384:	add	r8, r5, r8
   13388:	orr	r3, r3, r2
   1338c:	eor	r3, r3, ip
   13390:	add	r0, r8, r0
   13394:	add	r0, r3, r0
   13398:	ldr	r8, [r9, #40]	; 0x28
   1339c:	ldr	fp, [pc, #632]	; 1361c <dcngettext@plt+0x262c>
   133a0:	add	r0, r2, r0, ror #22
   133a4:	mvn	r5, ip
   133a8:	add	fp, r8, fp
   133ac:	orr	r5, r5, r0
   133b0:	eor	r5, r5, r2
   133b4:	add	r1, fp, r1
   133b8:	add	r1, r5, r1
   133bc:	ldr	r8, [r9, #4]
   133c0:	ldr	r3, [pc, #600]	; 13620 <dcngettext@plt+0x2630>
   133c4:	add	r1, r0, r1, ror #17
   133c8:	mvn	r5, r2
   133cc:	add	r3, r8, r3
   133d0:	orr	r5, r5, r1
   133d4:	eor	r5, r5, r0
   133d8:	add	ip, r3, ip
   133dc:	add	ip, r5, ip
   133e0:	ldr	fp, [pc, #572]	; 13624 <dcngettext@plt+0x2634>
   133e4:	ldr	r5, [r9, #32]
   133e8:	add	ip, r1, ip, ror #11
   133ec:	mvn	r3, r0
   133f0:	add	fp, r5, fp
   133f4:	orr	r3, r3, ip
   133f8:	eor	r3, r3, r1
   133fc:	add	r2, fp, r2
   13400:	add	r2, r3, r2
   13404:	ldr	r8, [pc, #540]	; 13628 <dcngettext@plt+0x2638>
   13408:	add	r2, ip, r2, ror #26
   1340c:	mvn	r5, r1
   13410:	add	r8, r7, r8
   13414:	orr	r5, r5, r2
   13418:	eor	r5, r5, ip
   1341c:	add	r0, r8, r0
   13420:	add	r0, r5, r0
   13424:	ldr	fp, [pc, #512]	; 1362c <dcngettext@plt+0x263c>
   13428:	ldr	r5, [r9, #24]
   1342c:	add	r0, r2, r0, ror #22
   13430:	mvn	r3, ip
   13434:	add	fp, r5, fp
   13438:	orr	r3, r3, r0
   1343c:	eor	r3, r3, r2
   13440:	add	r1, fp, r1
   13444:	add	r1, r3, r1
   13448:	ldr	r8, [r9, #52]	; 0x34
   1344c:	ldr	r7, [pc, #476]	; 13630 <dcngettext@plt+0x2640>
   13450:	add	r1, r0, r1, ror #17
   13454:	mvn	r5, r2
   13458:	add	r7, r8, r7
   1345c:	orr	r5, r5, r1
   13460:	eor	r5, r5, r0
   13464:	add	ip, r7, ip
   13468:	add	ip, r5, ip
   1346c:	ldr	fp, [pc, #448]	; 13634 <dcngettext@plt+0x2644>
   13470:	ldr	r5, [r9, #16]
   13474:	add	ip, r1, ip, ror #11
   13478:	mvn	r3, r0
   1347c:	add	fp, r5, fp
   13480:	orr	r3, r3, ip
   13484:	eor	r3, r3, r1
   13488:	add	r2, fp, r2
   1348c:	add	r2, r3, r2
   13490:	ldr	r5, [r9, #44]	; 0x2c
   13494:	ldr	r8, [pc, #412]	; 13638 <dcngettext@plt+0x2648>
   13498:	add	r2, ip, r2, ror #26
   1349c:	mvn	r3, r1
   134a0:	add	r8, r5, r8
   134a4:	orr	r3, r3, r2
   134a8:	add	r8, r8, r0
   134ac:	eor	r0, r3, ip
   134b0:	add	r0, r0, r8
   134b4:	ldr	r5, [r9, #8]
   134b8:	ldr	fp, [pc, #380]	; 1363c <dcngettext@plt+0x264c>
   134bc:	add	r0, r2, r0, ror #22
   134c0:	mvn	r3, ip
   134c4:	add	fp, r5, fp
   134c8:	orr	r3, r3, r0
   134cc:	add	fp, fp, r1
   134d0:	eor	r1, r3, r2
   134d4:	add	r1, r1, fp
   134d8:	ldr	r5, [r9, #36]	; 0x24
   134dc:	ldr	r7, [pc, #348]	; 13640 <dcngettext@plt+0x2650>
   134e0:	add	r1, r0, r1, ror #17
   134e4:	mvn	r3, r2
   134e8:	add	r7, r5, r7
   134ec:	orr	r3, r3, r1
   134f0:	eor	r3, r3, r0
   134f4:	add	ip, r7, ip
   134f8:	add	ip, r3, ip
   134fc:	ldr	r5, [sp, #8]
   13500:	ldr	r3, [sp, #4]
   13504:	add	r9, r9, #64	; 0x40
   13508:	add	ip, r1, ip, ror #11
   1350c:	add	r3, r3, r2
   13510:	cmp	r5, r9
   13514:	str	r3, [sp, #4]
   13518:	add	r6, r6, r0
   1351c:	add	r4, r4, r1
   13520:	add	lr, lr, ip
   13524:	bhi	12c34 <dcngettext@plt+0x1c44>
   13528:	mov	ip, lr
   1352c:	mov	r1, r4
   13530:	mov	lr, r6
   13534:	ldr	r3, [sp, #12]
   13538:	ldr	r2, [sp, #4]
   1353c:	str	ip, [r3, #4]
   13540:	str	r2, [r3]
   13544:	str	r1, [r3, #8]
   13548:	str	lr, [r3, #12]
   1354c:	add	sp, sp, #20
   13550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13554:	mov	ip, r3
   13558:	mov	lr, r2
   1355c:	b	13534 <dcngettext@plt+0x2544>
   13560:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   13564:	strtcs	r7, [r0], #-219	; 0xffffff25
   13568:			; <UNDEFINED> instruction: 0xc1bdceee
   1356c:			; <UNDEFINED> instruction: 0xf57c0faf
   13570:	blhi	1151434 <stdout@@GLIBC_2.4+0x11282c8>
   13574:	blvs	fe417a04 <stdout@@GLIBC_2.4+0xfe3ee898>
   13578:	ldc2	1, cr7, [r8, #588]	; 0x24c
   1357c:	ldrbtge	r4, [r9], -lr, lsl #7
   13580:	ldmibmi	r4!, {r0, r5, fp}
   13584:			; <UNDEFINED> instruction: 0xf61e2562
   13588:	subgt	fp, r0, r0, asr #6
   1358c:			; <UNDEFINED> instruction: 0x265e5a51
   13590:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   13594:			; <UNDEFINED> instruction: 0xd62f105d
   13598:	subeq	r1, r4, #1392508928	; 0x53000000
   1359c:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   135a0:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   135a4:	mvncs	ip, r6, ror #27
   135a8:	teqgt	r7, #56098816	; 0x3580000
   135ac:			; <UNDEFINED> instruction: 0xf4d50d87
   135b0:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   135b4:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   135b8:	stc2l	3, cr10, [pc], #992	; 139a0 <dcngettext@plt+0x29b0>
   135bc:			; <UNDEFINED> instruction: 0x676f02d9
   135c0:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   135c4:			; <UNDEFINED> instruction: 0xfffa3942
   135c8:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   135cc:	ldfvss	f6, [sp, #136]	; 0x88
   135d0:	vcmla.f16	d19, d5, d12, #270
   135d4:	ldrtge	lr, [lr], #2628	; 0xa44
   135d8:	blmi	ff7c7484 <stdout@@GLIBC_2.4+0xff79e318>
   135dc:			; <UNDEFINED> instruction: 0xf6bb4b60
   135e0:	mrclt	12, 5, fp, cr15, cr0, {3}
   135e4:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   135e8:	b	fe85d5d8 <stdout@@GLIBC_2.4+0xfe83446c>
   135ec:	strbtle	r3, [pc], #133	; 135f4 <dcngettext@plt+0x2604>
   135f0:	streq	r1, [r8], #3333	; 0xd05
   135f4:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   135f8:	ldrb	r9, [fp], r5, ror #19
   135fc:	svcne	0x00a27cf8
   13600:	strtgt	r5, [ip], #1637	; 0x665
   13604:	vld1.16	{d2-d5}, [r9], r4
   13608:	msrmi	CPSR_fx, #604	; 0x25c
   1360c:	blge	fe51c4b0 <stdout@@GLIBC_2.4+0xfe4f3344>
   13610:	ldc2	0, cr10, [r3], {57}	; 0x39
   13614:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   13618:	svchi	0x000ccc92
   1361c:			; <UNDEFINED> instruction: 0xffeff47d
   13620:	strhi	r5, [r4, #3537]	; 0xdd1
   13624:	svcvs	0x00a87e4f
   13628:	cdp2	6, 2, cr14, cr12, cr0, {7}
   1362c:	movwge	r4, #4884	; 0x1314
   13630:	adfmi<illegal precision>p	f1, f0, f1
   13634:			; <UNDEFINED> instruction: 0xf7537e82
   13638:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   1363c:	bcs	ff608130 <stdout@@GLIBC_2.4+0xff5defc4>
   13640:	bl	fe1c848c <stdout@@GLIBC_2.4+0xfe19f320>
   13644:	push	{r4, r5, r6, r7, r8, lr}
   13648:	mov	r4, r0
   1364c:	ldr	r0, [r0, #24]
   13650:	ldr	r3, [r4, #16]
   13654:	cmp	r0, #55	; 0x37
   13658:	add	r3, r0, r3
   1365c:	mov	r5, r1
   13660:	movhi	r6, #128	; 0x80
   13664:	movls	r6, #64	; 0x40
   13668:	movhi	r2, #120	; 0x78
   1366c:	movls	r2, #56	; 0x38
   13670:	movhi	r1, #31
   13674:	movls	r1, #15
   13678:	movhi	lr, #30
   1367c:	movls	lr, #14
   13680:	cmp	r0, r3
   13684:	add	lr, r4, lr, lsl #2
   13688:	ldrhi	ip, [r4, #20]
   1368c:	ldrls	r7, [r4, #20]
   13690:	addhi	r7, ip, #1
   13694:	add	r1, r4, r1, lsl #2
   13698:	lsr	ip, r3, #29
   1369c:	strhi	r7, [r4, #20]
   136a0:	str	r3, [r4, #16]
   136a4:	orr	ip, ip, r7, lsl #3
   136a8:	lsl	r3, r3, #3
   136ac:	add	r7, r4, #28
   136b0:	str	r3, [lr, #28]
   136b4:	sub	r2, r2, r0
   136b8:	str	ip, [r1, #28]
   136bc:	add	r0, r7, r0
   136c0:	ldr	r1, [pc, #32]	; 136e8 <dcngettext@plt+0x26f8>
   136c4:	bl	10dc8 <memcpy@plt>
   136c8:	mov	r1, r6
   136cc:	mov	r0, r7
   136d0:	mov	r2, r4
   136d4:	bl	12bcc <dcngettext@plt+0x1bdc>
   136d8:	mov	r1, r5
   136dc:	mov	r0, r4
   136e0:	pop	{r4, r5, r6, r7, r8, lr}
   136e4:	b	12ba0 <dcngettext@plt+0x1bb0>
   136e8:	andeq	r7, r1, r8, ror #27
   136ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136f0:	mov	r6, r2
   136f4:	ldr	r4, [r2, #24]
   136f8:	mov	r8, r0
   136fc:	cmp	r4, #0
   13700:	mov	r5, r1
   13704:	bne	137f4 <dcngettext@plt+0x2804>
   13708:	cmp	r5, #63	; 0x3f
   1370c:	bls	137e4 <dcngettext@plt+0x27f4>
   13710:	tst	r8, #3
   13714:	beq	137c8 <dcngettext@plt+0x27d8>
   13718:	cmp	r5, #64	; 0x40
   1371c:	add	r7, r6, #28
   13720:	beq	137a0 <dcngettext@plt+0x27b0>
   13724:	mov	sl, r5
   13728:	mov	r4, r8
   1372c:	mov	r9, #64	; 0x40
   13730:	add	r2, r4, #64	; 0x40
   13734:	mov	r3, r7
   13738:	ldr	lr, [r4]
   1373c:	ldr	ip, [r4, #4]
   13740:	ldr	r0, [r4, #8]
   13744:	ldr	r1, [r4, #12]
   13748:	add	r4, r4, #16
   1374c:	cmp	r4, r2
   13750:	str	lr, [r3]
   13754:	str	ip, [r3, #4]
   13758:	str	r0, [r3, #8]
   1375c:	str	r1, [r3, #12]
   13760:	add	r3, r3, #16
   13764:	bne	13738 <dcngettext@plt+0x2748>
   13768:	sub	sl, sl, #64	; 0x40
   1376c:	mov	r2, r6
   13770:	mov	r1, r9
   13774:	mov	r0, r7
   13778:	bl	12bcc <dcngettext@plt+0x1bdc>
   1377c:	cmp	sl, #64	; 0x40
   13780:	bhi	13730 <dcngettext@plt+0x2740>
   13784:	sub	r3, r5, #65	; 0x41
   13788:	bic	r2, r3, #63	; 0x3f
   1378c:	mov	r3, r2
   13790:	sub	r5, r5, #64	; 0x40
   13794:	add	r2, r2, #64	; 0x40
   13798:	sub	r5, r5, r3
   1379c:	add	r8, r8, r2
   137a0:	ldr	r4, [r6, #24]
   137a4:	mov	r1, r8
   137a8:	add	r0, r7, r4
   137ac:	mov	r2, r5
   137b0:	add	r4, r4, r5
   137b4:	bl	10dc8 <memcpy@plt>
   137b8:	cmp	r4, #63	; 0x3f
   137bc:	bhi	13834 <dcngettext@plt+0x2844>
   137c0:	str	r4, [r6, #24]
   137c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137c8:	bic	r4, r5, #63	; 0x3f
   137cc:	mov	r0, r8
   137d0:	mov	r1, r4
   137d4:	mov	r2, r6
   137d8:	bl	12bcc <dcngettext@plt+0x1bdc>
   137dc:	and	r5, r5, #63	; 0x3f
   137e0:	add	r8, r8, r4
   137e4:	cmp	r5, #0
   137e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   137ec:	add	r7, r6, #28
   137f0:	b	137a0 <dcngettext@plt+0x27b0>
   137f4:	rsb	r7, r4, #128	; 0x80
   137f8:	cmp	r7, r1
   137fc:	movcs	r7, r1
   13800:	add	r9, r2, #28
   13804:	mov	r1, r8
   13808:	mov	r2, r7
   1380c:	add	r0, r9, r4
   13810:	bl	10dc8 <memcpy@plt>
   13814:	ldr	r1, [r6, #24]
   13818:	add	r1, r7, r1
   1381c:	cmp	r1, #64	; 0x40
   13820:	str	r1, [r6, #24]
   13824:	bhi	13860 <dcngettext@plt+0x2870>
   13828:	add	r8, r8, r7
   1382c:	sub	r5, r5, r7
   13830:	b	13708 <dcngettext@plt+0x2718>
   13834:	sub	r4, r4, #64	; 0x40
   13838:	mov	r2, r6
   1383c:	mov	r1, #64	; 0x40
   13840:	mov	r0, r7
   13844:	bl	12bcc <dcngettext@plt+0x1bdc>
   13848:	mov	r0, r7
   1384c:	mov	r2, r4
   13850:	add	r1, r6, #92	; 0x5c
   13854:	bl	10dc8 <memcpy@plt>
   13858:	str	r4, [r6, #24]
   1385c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13860:	mov	r2, r6
   13864:	mov	r0, r9
   13868:	bic	r1, r1, #63	; 0x3f
   1386c:	bl	12bcc <dcngettext@plt+0x1bdc>
   13870:	ldr	r2, [r6, #24]
   13874:	add	r1, r4, r7
   13878:	and	r2, r2, #63	; 0x3f
   1387c:	bic	r1, r1, #63	; 0x3f
   13880:	add	r1, r9, r1
   13884:	mov	r0, r9
   13888:	str	r2, [r6, #24]
   1388c:	bl	10dc8 <memcpy@plt>
   13890:	b	13828 <dcngettext@plt+0x2838>
   13894:	push	{r4, r5, lr}
   13898:	sub	sp, sp, #164	; 0xa4
   1389c:	ldr	r3, [pc, #72]	; 138ec <dcngettext@plt+0x28fc>
   138a0:	ldr	lr, [pc, #72]	; 138f0 <dcngettext@plt+0x2900>
   138a4:	ldr	ip, [pc, #72]	; 138f4 <dcngettext@plt+0x2904>
   138a8:	ldr	r5, [pc, #72]	; 138f8 <dcngettext@plt+0x2908>
   138ac:	mov	r4, r2
   138b0:	str	r3, [sp, #8]
   138b4:	add	r2, sp, #4
   138b8:	mov	r3, #0
   138bc:	str	lr, [sp, #12]
   138c0:	str	ip, [sp, #16]
   138c4:	str	r3, [sp, #24]
   138c8:	str	r3, [sp, #20]
   138cc:	str	r3, [sp, #28]
   138d0:	str	r5, [sp, #4]
   138d4:	bl	136ec <dcngettext@plt+0x26fc>
   138d8:	mov	r1, r4
   138dc:	add	r0, sp, #4
   138e0:	bl	13644 <dcngettext@plt+0x2654>
   138e4:	add	sp, sp, #164	; 0xa4
   138e8:	pop	{r4, r5, pc}
   138ec:	svc	0x00cdab89
   138f0:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   138f4:	eorsne	r5, r2, r6, ror r4
   138f8:	strbvs	r2, [r5, -r1, lsl #6]
   138fc:	push	{r4, r5}
   13900:	pop	{r4, r5}
   13904:	b	10d98 <posix_fadvise64@plt>
   13908:	cmp	r0, #0
   1390c:	bxeq	lr
   13910:	push	{r4, lr}
   13914:	sub	sp, sp, #16
   13918:	mov	r4, r1
   1391c:	bl	10f30 <fileno@plt>
   13920:	mov	r2, #0
   13924:	mov	r3, #0
   13928:	str	r4, [sp, #8]
   1392c:	strd	r2, [sp]
   13930:	bl	10d98 <posix_fadvise64@plt>
   13934:	add	sp, sp, #16
   13938:	pop	{r4, pc}
   1393c:	push	{r4, r5, lr}
   13940:	sub	sp, sp, #12
   13944:	mov	r4, r0
   13948:	bl	10f30 <fileno@plt>
   1394c:	cmp	r0, #0
   13950:	mov	r0, r4
   13954:	blt	139d0 <dcngettext@plt+0x29e0>
   13958:	bl	10e94 <__freading@plt>
   1395c:	cmp	r0, #0
   13960:	bne	1399c <dcngettext@plt+0x29ac>
   13964:	mov	r0, r4
   13968:	bl	139dc <dcngettext@plt+0x29ec>
   1396c:	cmp	r0, #0
   13970:	beq	139cc <dcngettext@plt+0x29dc>
   13974:	bl	10ef4 <__errno_location@plt>
   13978:	mov	r5, r0
   1397c:	mov	r0, r4
   13980:	ldr	r4, [r5]
   13984:	bl	10f48 <fclose@plt>
   13988:	cmp	r4, #0
   1398c:	mvnne	r0, #0
   13990:	strne	r4, [r5]
   13994:	add	sp, sp, #12
   13998:	pop	{r4, r5, pc}
   1399c:	mov	r0, r4
   139a0:	bl	10f30 <fileno@plt>
   139a4:	mov	r3, #1
   139a8:	str	r3, [sp]
   139ac:	mov	r2, #0
   139b0:	mov	r3, #0
   139b4:	bl	10e40 <lseek64@plt>
   139b8:	mvn	r3, #0
   139bc:	mvn	r2, #0
   139c0:	cmp	r1, r3
   139c4:	cmpeq	r0, r2
   139c8:	bne	13964 <dcngettext@plt+0x2974>
   139cc:	mov	r0, r4
   139d0:	add	sp, sp, #12
   139d4:	pop	{r4, r5, lr}
   139d8:	b	10f48 <fclose@plt>
   139dc:	push	{r4, lr}
   139e0:	subs	r4, r0, #0
   139e4:	sub	sp, sp, #8
   139e8:	beq	13a04 <dcngettext@plt+0x2a14>
   139ec:	bl	10e94 <__freading@plt>
   139f0:	cmp	r0, #0
   139f4:	beq	13a04 <dcngettext@plt+0x2a14>
   139f8:	ldr	r3, [r4]
   139fc:	tst	r3, #256	; 0x100
   13a00:	bne	13a14 <dcngettext@plt+0x2a24>
   13a04:	mov	r0, r4
   13a08:	add	sp, sp, #8
   13a0c:	pop	{r4, lr}
   13a10:	b	10da4 <fflush@plt>
   13a14:	mov	r3, #1
   13a18:	str	r3, [sp]
   13a1c:	mov	r2, #0
   13a20:	mov	r3, #0
   13a24:	mov	r0, r4
   13a28:	bl	13b2c <dcngettext@plt+0x2b3c>
   13a2c:	mov	r0, r4
   13a30:	add	sp, sp, #8
   13a34:	pop	{r4, lr}
   13a38:	b	10da4 <fflush@plt>
   13a3c:	push	{r4, r5, r6, lr}
   13a40:	mov	r5, r1
   13a44:	bl	10fa8 <fopen64@plt>
   13a48:	subs	r4, r0, #0
   13a4c:	beq	13a5c <dcngettext@plt+0x2a6c>
   13a50:	bl	10f30 <fileno@plt>
   13a54:	cmp	r0, #2
   13a58:	bls	13a64 <dcngettext@plt+0x2a74>
   13a5c:	mov	r0, r4
   13a60:	pop	{r4, r5, r6, pc}
   13a64:	bl	15aa4 <dcngettext@plt+0x4ab4>
   13a68:	subs	r6, r0, #0
   13a6c:	blt	13ab4 <dcngettext@plt+0x2ac4>
   13a70:	mov	r0, r4
   13a74:	bl	1393c <dcngettext@plt+0x294c>
   13a78:	cmp	r0, #0
   13a7c:	bne	13a94 <dcngettext@plt+0x2aa4>
   13a80:	mov	r1, r5
   13a84:	mov	r0, r6
   13a88:	bl	10d50 <fdopen@plt>
   13a8c:	subs	r4, r0, #0
   13a90:	bne	13a5c <dcngettext@plt+0x2a6c>
   13a94:	bl	10ef4 <__errno_location@plt>
   13a98:	mov	r4, #0
   13a9c:	mov	r5, r0
   13aa0:	mov	r0, r6
   13aa4:	ldr	r6, [r5]
   13aa8:	bl	10fe4 <close@plt>
   13aac:	str	r6, [r5]
   13ab0:	b	13a5c <dcngettext@plt+0x2a6c>
   13ab4:	bl	10ef4 <__errno_location@plt>
   13ab8:	mov	r5, r0
   13abc:	mov	r0, r4
   13ac0:	ldr	r6, [r5]
   13ac4:	mov	r4, #0
   13ac8:	bl	1393c <dcngettext@plt+0x294c>
   13acc:	str	r6, [r5]
   13ad0:	b	13a5c <dcngettext@plt+0x2a6c>
   13ad4:	push	{r4, r5, lr}
   13ad8:	sub	sp, sp, #12
   13adc:	mov	r5, r0
   13ae0:	bl	10ef4 <__errno_location@plt>
   13ae4:	mov	r2, #0
   13ae8:	mov	r4, r0
   13aec:	ldr	r3, [r0]
   13af0:	str	r2, [r4]
   13af4:	mov	r0, r5
   13af8:	str	r3, [sp]
   13afc:	str	r3, [sp, #4]
   13b00:	bl	10db0 <free@plt>
   13b04:	ldr	r3, [r4]
   13b08:	add	r2, sp, #8
   13b0c:	cmp	r3, #0
   13b10:	moveq	r3, #4
   13b14:	movne	r3, #0
   13b18:	add	r3, r2, r3
   13b1c:	ldr	r3, [r3, #-8]
   13b20:	str	r3, [r4]
   13b24:	add	sp, sp, #12
   13b28:	pop	{r4, r5, pc}
   13b2c:	push	{r4, r5, r6, r7, r8, lr}
   13b30:	sub	sp, sp, #8
   13b34:	ldmib	r0, {ip, lr}
   13b38:	mov	r4, r0
   13b3c:	ldr	r5, [sp, #32]
   13b40:	cmp	lr, ip
   13b44:	beq	13b5c <dcngettext@plt+0x2b6c>
   13b48:	str	r5, [sp, #32]
   13b4c:	mov	r0, r4
   13b50:	add	sp, sp, #8
   13b54:	pop	{r4, r5, r6, r7, r8, lr}
   13b58:	b	10f54 <fseeko64@plt>
   13b5c:	ldr	lr, [r0, #20]
   13b60:	ldr	ip, [r0, #16]
   13b64:	cmp	lr, ip
   13b68:	bne	13b48 <dcngettext@plt+0x2b58>
   13b6c:	ldr	r8, [r0, #36]	; 0x24
   13b70:	cmp	r8, #0
   13b74:	bne	13b48 <dcngettext@plt+0x2b58>
   13b78:	mov	r6, r2
   13b7c:	mov	r7, r3
   13b80:	bl	10f30 <fileno@plt>
   13b84:	mov	r2, r6
   13b88:	mov	r3, r7
   13b8c:	str	r5, [sp]
   13b90:	bl	10e40 <lseek64@plt>
   13b94:	mvn	r3, #0
   13b98:	mvn	r2, #0
   13b9c:	cmp	r1, r3
   13ba0:	cmpeq	r0, r2
   13ba4:	beq	13bc4 <dcngettext@plt+0x2bd4>
   13ba8:	ldr	r3, [r4]
   13bac:	strd	r0, [r4, #80]	; 0x50
   13bb0:	mov	r0, r8
   13bb4:	bic	r3, r3, #16
   13bb8:	str	r3, [r4]
   13bbc:	add	sp, sp, #8
   13bc0:	pop	{r4, r5, r6, r7, r8, pc}
   13bc4:	mvn	r0, #0
   13bc8:	b	13bbc <dcngettext@plt+0x2bcc>
   13bcc:	push	{r4, r5, r6, lr}
   13bd0:	subs	r4, r0, #0
   13bd4:	beq	13c48 <dcngettext@plt+0x2c58>
   13bd8:	mov	r1, #47	; 0x2f
   13bdc:	bl	10f84 <strrchr@plt>
   13be0:	subs	r5, r0, #0
   13be4:	beq	13c34 <dcngettext@plt+0x2c44>
   13be8:	add	r6, r5, #1
   13bec:	sub	r3, r6, r4
   13bf0:	cmp	r3, #6
   13bf4:	ble	13c34 <dcngettext@plt+0x2c44>
   13bf8:	mov	r2, #7
   13bfc:	ldr	r1, [pc, #96]	; 13c64 <dcngettext@plt+0x2c74>
   13c00:	sub	r0, r5, #6
   13c04:	bl	10fcc <strncmp@plt>
   13c08:	cmp	r0, #0
   13c0c:	bne	13c34 <dcngettext@plt+0x2c44>
   13c10:	mov	r2, #3
   13c14:	ldr	r1, [pc, #76]	; 13c68 <dcngettext@plt+0x2c78>
   13c18:	mov	r0, r6
   13c1c:	bl	10fcc <strncmp@plt>
   13c20:	cmp	r0, #0
   13c24:	movne	r4, r6
   13c28:	ldreq	r3, [pc, #60]	; 13c6c <dcngettext@plt+0x2c7c>
   13c2c:	addeq	r4, r5, #4
   13c30:	streq	r4, [r3]
   13c34:	ldr	r2, [pc, #52]	; 13c70 <dcngettext@plt+0x2c80>
   13c38:	ldr	r3, [pc, #52]	; 13c74 <dcngettext@plt+0x2c84>
   13c3c:	str	r4, [r2]
   13c40:	str	r4, [r3]
   13c44:	pop	{r4, r5, r6, pc}
   13c48:	ldr	r3, [pc, #40]	; 13c78 <dcngettext@plt+0x2c88>
   13c4c:	mov	r2, #55	; 0x37
   13c50:	mov	r1, #1
   13c54:	ldr	r3, [r3]
   13c58:	ldr	r0, [pc, #28]	; 13c7c <dcngettext@plt+0x2c8c>
   13c5c:	bl	10e34 <fwrite@plt>
   13c60:	bl	10fd8 <abort@plt>
   13c64:	andeq	r7, r1, r0, ror #28
   13c68:	andeq	r7, r1, r8, ror #28
   13c6c:	andeq	r9, r2, r0, asr r1
   13c70:	andeq	r9, r2, ip, lsl #3
   13c74:	andeq	r9, r2, r4, asr r1
   13c78:	andeq	r9, r2, r0, ror #2
   13c7c:	andeq	r7, r1, r8, lsr #28
   13c80:	push	{r4, r5, r6, lr}
   13c84:	mov	r2, #48	; 0x30
   13c88:	mov	r4, r1
   13c8c:	mov	r1, #0
   13c90:	mov	r5, r0
   13c94:	bl	10f18 <memset@plt>
   13c98:	cmp	r4, #10
   13c9c:	beq	13cac <dcngettext@plt+0x2cbc>
   13ca0:	str	r4, [r5]
   13ca4:	mov	r0, r5
   13ca8:	pop	{r4, r5, r6, pc}
   13cac:	bl	10fd8 <abort@plt>
   13cb0:	push	{r4, r5, r6, lr}
   13cb4:	mov	r4, r0
   13cb8:	mov	r5, r1
   13cbc:	bl	16878 <dcngettext@plt+0x5888>
   13cc0:	ldrb	r3, [r0]
   13cc4:	bic	r3, r3, #32
   13cc8:	cmp	r3, #85	; 0x55
   13ccc:	bne	13d2c <dcngettext@plt+0x2d3c>
   13cd0:	ldrb	r3, [r0, #1]
   13cd4:	bic	r3, r3, #32
   13cd8:	cmp	r3, #84	; 0x54
   13cdc:	bne	13d68 <dcngettext@plt+0x2d78>
   13ce0:	ldrb	r3, [r0, #2]
   13ce4:	bic	r3, r3, #32
   13ce8:	cmp	r3, #70	; 0x46
   13cec:	bne	13d68 <dcngettext@plt+0x2d78>
   13cf0:	ldrb	r3, [r0, #3]
   13cf4:	cmp	r3, #45	; 0x2d
   13cf8:	bne	13d68 <dcngettext@plt+0x2d78>
   13cfc:	ldrb	r3, [r0, #4]
   13d00:	cmp	r3, #56	; 0x38
   13d04:	bne	13d68 <dcngettext@plt+0x2d78>
   13d08:	ldrb	r3, [r0, #5]
   13d0c:	cmp	r3, #0
   13d10:	bne	13d68 <dcngettext@plt+0x2d78>
   13d14:	ldrb	r2, [r4]
   13d18:	ldr	r3, [pc, #152]	; 13db8 <dcngettext@plt+0x2dc8>
   13d1c:	ldr	r0, [pc, #152]	; 13dbc <dcngettext@plt+0x2dcc>
   13d20:	cmp	r2, #96	; 0x60
   13d24:	movne	r0, r3
   13d28:	pop	{r4, r5, r6, pc}
   13d2c:	cmp	r3, #71	; 0x47
   13d30:	bne	13d68 <dcngettext@plt+0x2d78>
   13d34:	ldrb	r3, [r0, #1]
   13d38:	bic	r3, r3, #32
   13d3c:	cmp	r3, #66	; 0x42
   13d40:	bne	13d68 <dcngettext@plt+0x2d78>
   13d44:	ldrb	r3, [r0, #2]
   13d48:	cmp	r3, #49	; 0x31
   13d4c:	bne	13d68 <dcngettext@plt+0x2d78>
   13d50:	ldrb	r3, [r0, #3]
   13d54:	cmp	r3, #56	; 0x38
   13d58:	bne	13d68 <dcngettext@plt+0x2d78>
   13d5c:	ldrb	r3, [r0, #4]
   13d60:	cmp	r3, #48	; 0x30
   13d64:	beq	13d7c <dcngettext@plt+0x2d8c>
   13d68:	ldr	r3, [pc, #80]	; 13dc0 <dcngettext@plt+0x2dd0>
   13d6c:	cmp	r5, #9
   13d70:	ldr	r0, [pc, #76]	; 13dc4 <dcngettext@plt+0x2dd4>
   13d74:	movne	r0, r3
   13d78:	pop	{r4, r5, r6, pc}
   13d7c:	ldrb	r3, [r0, #5]
   13d80:	cmp	r3, #51	; 0x33
   13d84:	bne	13d68 <dcngettext@plt+0x2d78>
   13d88:	ldrb	r3, [r0, #6]
   13d8c:	cmp	r3, #48	; 0x30
   13d90:	bne	13d68 <dcngettext@plt+0x2d78>
   13d94:	ldrb	r3, [r0, #7]
   13d98:	cmp	r3, #0
   13d9c:	bne	13d68 <dcngettext@plt+0x2d78>
   13da0:	ldrb	r2, [r4]
   13da4:	ldr	r3, [pc, #28]	; 13dc8 <dcngettext@plt+0x2dd8>
   13da8:	ldr	r0, [pc, #28]	; 13dcc <dcngettext@plt+0x2ddc>
   13dac:	cmp	r2, #96	; 0x60
   13db0:	movne	r0, r3
   13db4:	pop	{r4, r5, r6, pc}
   13db8:	andeq	r7, r1, r4, asr #29
   13dbc:	andeq	r7, r1, r0, asr #29
   13dc0:	ldrdeq	r7, [r1], -r4
   13dc4:	ldrdeq	r7, [r1], -r0
   13dc8:	andeq	r7, r1, ip, asr #29
   13dcc:	andeq	r7, r1, r8, asr #29
   13dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd4:	sub	sp, sp, #116	; 0x74
   13dd8:	mov	sl, r0
   13ddc:	str	r3, [sp, #24]
   13de0:	mov	r3, #1
   13de4:	mov	r8, r1
   13de8:	str	r2, [sp, #56]	; 0x38
   13dec:	str	r3, [sp, #36]	; 0x24
   13df0:	bl	10e4c <__ctype_get_mb_cur_max@plt>
   13df4:	ldr	r3, [sp, #156]	; 0x9c
   13df8:	mov	fp, r8
   13dfc:	mov	r2, #0
   13e00:	lsr	r3, r3, #1
   13e04:	and	r3, r3, #1
   13e08:	str	r2, [sp, #68]	; 0x44
   13e0c:	str	r3, [sp, #28]
   13e10:	str	r2, [sp, #40]	; 0x28
   13e14:	str	r2, [sp, #44]	; 0x2c
   13e18:	str	r2, [sp, #52]	; 0x34
   13e1c:	str	r2, [sp, #64]	; 0x40
   13e20:	str	r2, [sp, #72]	; 0x48
   13e24:	str	sl, [sp, #32]
   13e28:	str	r0, [sp, #76]	; 0x4c
   13e2c:	ldr	r3, [sp, #152]	; 0x98
   13e30:	cmp	r3, #10
   13e34:	ldrls	pc, [pc, r3, lsl #2]
   13e38:	b	14ff8 <dcngettext@plt+0x4008>
   13e3c:	andeq	r3, r1, r8, ror #28
   13e40:	andeq	r4, r1, r0, asr r1
   13e44:	andeq	r4, r1, r4, ror r1
   13e48:	muleq	r1, r8, r1
   13e4c:	andeq	r4, r1, r4, asr #5
   13e50:	muleq	r1, r8, r2
   13e54:	andeq	r4, r1, r0, ror r2
   13e58:	andeq	r4, r1, ip, lsr #3
   13e5c:	andeq	r4, r1, r4, asr #3
   13e60:	andeq	r4, r1, r4, asr #3
   13e64:	andeq	r4, r1, r4, asr #3
   13e68:	mov	r3, #0
   13e6c:	mov	r7, r3
   13e70:	str	r3, [sp, #28]
   13e74:	ldr	r3, [sp, #44]	; 0x2c
   13e78:	mov	sl, #0
   13e7c:	eor	r3, r3, #1
   13e80:	str	r3, [sp, #60]	; 0x3c
   13e84:	ldr	r3, [sp, #24]
   13e88:	cmn	r3, #1
   13e8c:	beq	143f0 <dcngettext@plt+0x3400>
   13e90:	ldr	r3, [sp, #24]
   13e94:	subs	r5, r3, sl
   13e98:	movne	r5, #1
   13e9c:	cmp	r5, #0
   13ea0:	beq	14408 <dcngettext@plt+0x3418>
   13ea4:	ldr	r3, [sp, #152]	; 0x98
   13ea8:	ldr	r8, [sp, #44]	; 0x2c
   13eac:	cmp	r3, #2
   13eb0:	moveq	r8, #0
   13eb4:	andne	r8, r8, #1
   13eb8:	ldr	r3, [sp, #52]	; 0x34
   13ebc:	adds	r9, r3, #0
   13ec0:	movne	r9, #1
   13ec4:	ands	r6, r9, r8
   13ec8:	beq	14870 <dcngettext@plt+0x3880>
   13ecc:	ldr	r2, [sp, #52]	; 0x34
   13ed0:	ldr	r1, [sp, #24]
   13ed4:	cmp	r2, #1
   13ed8:	mov	r3, r2
   13edc:	movls	r3, #0
   13ee0:	movhi	r3, #1
   13ee4:	cmn	r1, #1
   13ee8:	movne	r3, #0
   13eec:	cmp	r3, #0
   13ef0:	add	r4, sl, r2
   13ef4:	beq	13f04 <dcngettext@plt+0x2f14>
   13ef8:	ldr	r0, [sp, #56]	; 0x38
   13efc:	bl	10edc <strlen@plt>
   13f00:	str	r0, [sp, #24]
   13f04:	ldr	r3, [sp, #24]
   13f08:	cmp	r3, r4
   13f0c:	ldr	r3, [sp, #56]	; 0x38
   13f10:	add	r3, r3, sl
   13f14:	str	r3, [sp, #48]	; 0x30
   13f18:	bcc	1487c <dcngettext@plt+0x388c>
   13f1c:	mov	r0, r3
   13f20:	ldr	r2, [sp, #52]	; 0x34
   13f24:	ldr	r1, [sp, #64]	; 0x40
   13f28:	bl	10dec <memcmp@plt>
   13f2c:	cmp	r0, #0
   13f30:	bne	1487c <dcngettext@plt+0x388c>
   13f34:	ldr	r3, [sp, #28]
   13f38:	cmp	r3, #0
   13f3c:	bne	150f8 <dcngettext@plt+0x4108>
   13f40:	ldr	r3, [sp, #48]	; 0x30
   13f44:	ldrb	r4, [r3]
   13f48:	cmp	r4, #126	; 0x7e
   13f4c:	ldrls	pc, [pc, r4, lsl #2]
   13f50:	b	14810 <dcngettext@plt+0x3820>
   13f54:	andeq	r4, r1, r4, lsr r6
   13f58:	andeq	r4, r1, r0, lsl r8
   13f5c:	andeq	r4, r1, r0, lsl r8
   13f60:	andeq	r4, r1, r0, lsl r8
   13f64:	andeq	r4, r1, r0, lsl r8
   13f68:	andeq	r4, r1, r0, lsl r8
   13f6c:	andeq	r4, r1, r0, lsl r8
   13f70:	andeq	r4, r1, r8, lsl r6
   13f74:	strdeq	r4, [r1], -ip
   13f78:	strdeq	r4, [r1], -r8
   13f7c:	andeq	r4, r1, ip, asr r5
   13f80:	andeq	r4, r1, r0, asr #10
   13f84:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f88:			; <UNDEFINED> instruction: 0x000147b0
   13f8c:	andeq	r4, r1, r0, lsl r8
   13f90:	andeq	r4, r1, r0, lsl r8
   13f94:	andeq	r4, r1, r0, lsl r8
   13f98:	andeq	r4, r1, r0, lsl r8
   13f9c:	andeq	r4, r1, r0, lsl r8
   13fa0:	andeq	r4, r1, r0, lsl r8
   13fa4:	andeq	r4, r1, r0, lsl r8
   13fa8:	andeq	r4, r1, r0, lsl r8
   13fac:	andeq	r4, r1, r0, lsl r8
   13fb0:	andeq	r4, r1, r0, lsl r8
   13fb4:	andeq	r4, r1, r0, lsl r8
   13fb8:	andeq	r4, r1, r0, lsl r8
   13fbc:	andeq	r4, r1, r0, lsl r8
   13fc0:	andeq	r4, r1, r0, lsl r8
   13fc4:	andeq	r4, r1, r0, lsl r8
   13fc8:	andeq	r4, r1, r0, lsl r8
   13fcc:	andeq	r4, r1, r0, lsl r8
   13fd0:	andeq	r4, r1, r0, lsl r8
   13fd4:	strdeq	r4, [r1], -r0
   13fd8:	andeq	r4, r1, r4, lsr #14
   13fdc:	andeq	r4, r1, r4, lsr #14
   13fe0:	andeq	r4, r1, r4, lsr r3
   13fe4:	andeq	r4, r1, r4, lsr #14
   13fe8:			; <UNDEFINED> instruction: 0x000147bc
   13fec:	andeq	r4, r1, r4, lsr #14
   13ff0:	muleq	r1, r0, r7
   13ff4:	andeq	r4, r1, r4, lsr #14
   13ff8:	andeq	r4, r1, r4, lsr #14
   13ffc:	andeq	r4, r1, r4, lsr #14
   14000:			; <UNDEFINED> instruction: 0x000147bc
   14004:			; <UNDEFINED> instruction: 0x000147bc
   14008:			; <UNDEFINED> instruction: 0x000147bc
   1400c:			; <UNDEFINED> instruction: 0x000147bc
   14010:			; <UNDEFINED> instruction: 0x000147bc
   14014:			; <UNDEFINED> instruction: 0x000147bc
   14018:			; <UNDEFINED> instruction: 0x000147bc
   1401c:			; <UNDEFINED> instruction: 0x000147bc
   14020:			; <UNDEFINED> instruction: 0x000147bc
   14024:			; <UNDEFINED> instruction: 0x000147bc
   14028:			; <UNDEFINED> instruction: 0x000147bc
   1402c:			; <UNDEFINED> instruction: 0x000147bc
   14030:			; <UNDEFINED> instruction: 0x000147bc
   14034:			; <UNDEFINED> instruction: 0x000147bc
   14038:			; <UNDEFINED> instruction: 0x000147bc
   1403c:			; <UNDEFINED> instruction: 0x000147bc
   14040:	andeq	r4, r1, r4, lsr #14
   14044:	andeq	r4, r1, r4, lsr #14
   14048:	andeq	r4, r1, r4, lsr #14
   1404c:	andeq	r4, r1, r4, lsr #14
   14050:	andeq	r4, r1, r0, ror #14
   14054:	andeq	r4, r1, r0, lsl r8
   14058:			; <UNDEFINED> instruction: 0x000147bc
   1405c:			; <UNDEFINED> instruction: 0x000147bc
   14060:			; <UNDEFINED> instruction: 0x000147bc
   14064:			; <UNDEFINED> instruction: 0x000147bc
   14068:			; <UNDEFINED> instruction: 0x000147bc
   1406c:			; <UNDEFINED> instruction: 0x000147bc
   14070:			; <UNDEFINED> instruction: 0x000147bc
   14074:			; <UNDEFINED> instruction: 0x000147bc
   14078:			; <UNDEFINED> instruction: 0x000147bc
   1407c:			; <UNDEFINED> instruction: 0x000147bc
   14080:			; <UNDEFINED> instruction: 0x000147bc
   14084:			; <UNDEFINED> instruction: 0x000147bc
   14088:			; <UNDEFINED> instruction: 0x000147bc
   1408c:			; <UNDEFINED> instruction: 0x000147bc
   14090:			; <UNDEFINED> instruction: 0x000147bc
   14094:			; <UNDEFINED> instruction: 0x000147bc
   14098:			; <UNDEFINED> instruction: 0x000147bc
   1409c:			; <UNDEFINED> instruction: 0x000147bc
   140a0:			; <UNDEFINED> instruction: 0x000147bc
   140a4:			; <UNDEFINED> instruction: 0x000147bc
   140a8:			; <UNDEFINED> instruction: 0x000147bc
   140ac:			; <UNDEFINED> instruction: 0x000147bc
   140b0:			; <UNDEFINED> instruction: 0x000147bc
   140b4:			; <UNDEFINED> instruction: 0x000147bc
   140b8:			; <UNDEFINED> instruction: 0x000147bc
   140bc:			; <UNDEFINED> instruction: 0x000147bc
   140c0:	andeq	r4, r1, r4, lsr #14
   140c4:	andeq	r4, r1, r0, lsl #9
   140c8:			; <UNDEFINED> instruction: 0x000147bc
   140cc:	andeq	r4, r1, r4, lsr #14
   140d0:			; <UNDEFINED> instruction: 0x000147bc
   140d4:	andeq	r4, r1, r4, lsr #14
   140d8:			; <UNDEFINED> instruction: 0x000147bc
   140dc:			; <UNDEFINED> instruction: 0x000147bc
   140e0:			; <UNDEFINED> instruction: 0x000147bc
   140e4:			; <UNDEFINED> instruction: 0x000147bc
   140e8:			; <UNDEFINED> instruction: 0x000147bc
   140ec:			; <UNDEFINED> instruction: 0x000147bc
   140f0:			; <UNDEFINED> instruction: 0x000147bc
   140f4:			; <UNDEFINED> instruction: 0x000147bc
   140f8:			; <UNDEFINED> instruction: 0x000147bc
   140fc:			; <UNDEFINED> instruction: 0x000147bc
   14100:			; <UNDEFINED> instruction: 0x000147bc
   14104:			; <UNDEFINED> instruction: 0x000147bc
   14108:			; <UNDEFINED> instruction: 0x000147bc
   1410c:			; <UNDEFINED> instruction: 0x000147bc
   14110:			; <UNDEFINED> instruction: 0x000147bc
   14114:			; <UNDEFINED> instruction: 0x000147bc
   14118:			; <UNDEFINED> instruction: 0x000147bc
   1411c:			; <UNDEFINED> instruction: 0x000147bc
   14120:			; <UNDEFINED> instruction: 0x000147bc
   14124:			; <UNDEFINED> instruction: 0x000147bc
   14128:			; <UNDEFINED> instruction: 0x000147bc
   1412c:			; <UNDEFINED> instruction: 0x000147bc
   14130:			; <UNDEFINED> instruction: 0x000147bc
   14134:			; <UNDEFINED> instruction: 0x000147bc
   14138:			; <UNDEFINED> instruction: 0x000147bc
   1413c:			; <UNDEFINED> instruction: 0x000147bc
   14140:	andeq	r4, r1, r4, lsl r3
   14144:	andeq	r4, r1, r4, lsr #14
   14148:	andeq	r4, r1, r4, lsl r3
   1414c:	andeq	r4, r1, r4, lsr r3
   14150:	mov	r3, #1
   14154:	str	r3, [sp, #28]
   14158:	str	r3, [sp, #52]	; 0x34
   1415c:	ldr	r3, [pc, #4000]	; 15104 <dcngettext@plt+0x4114>
   14160:	mov	r7, #0
   14164:	str	r3, [sp, #64]	; 0x40
   14168:	mov	r3, #2
   1416c:	str	r3, [sp, #152]	; 0x98
   14170:	b	13e74 <dcngettext@plt+0x2e84>
   14174:	ldr	r3, [sp, #28]
   14178:	cmp	r3, #0
   1417c:	beq	142d8 <dcngettext@plt+0x32e8>
   14180:	mov	r3, #1
   14184:	str	r3, [sp, #52]	; 0x34
   14188:	ldr	r3, [pc, #3956]	; 15104 <dcngettext@plt+0x4114>
   1418c:	mov	r7, #0
   14190:	str	r3, [sp, #64]	; 0x40
   14194:	b	13e74 <dcngettext@plt+0x2e84>
   14198:	mov	r3, #1
   1419c:	str	r3, [sp, #44]	; 0x2c
   141a0:	str	r3, [sp, #52]	; 0x34
   141a4:	str	r3, [sp, #28]
   141a8:	b	1415c <dcngettext@plt+0x316c>
   141ac:	mov	r3, #0
   141b0:	str	r3, [sp, #28]
   141b4:	mov	r3, #1
   141b8:	str	r3, [sp, #44]	; 0x2c
   141bc:	mov	r7, #0
   141c0:	b	13e74 <dcngettext@plt+0x2e84>
   141c4:	ldr	r3, [sp, #152]	; 0x98
   141c8:	cmp	r3, #10
   141cc:	beq	14210 <dcngettext@plt+0x3220>
   141d0:	mov	r2, #5
   141d4:	ldr	r1, [pc, #3884]	; 15108 <dcngettext@plt+0x4118>
   141d8:	mov	r0, #0
   141dc:	bl	10e04 <dcgettext@plt>
   141e0:	ldr	r2, [pc, #3872]	; 15108 <dcngettext@plt+0x4118>
   141e4:	cmp	r0, r2
   141e8:	str	r0, [sp, #164]	; 0xa4
   141ec:	beq	151f4 <dcngettext@plt+0x4204>
   141f0:	mov	r2, #5
   141f4:	ldr	r1, [pc, #3848]	; 15104 <dcngettext@plt+0x4114>
   141f8:	mov	r0, #0
   141fc:	bl	10e04 <dcgettext@plt>
   14200:	ldr	r2, [pc, #3836]	; 15104 <dcngettext@plt+0x4114>
   14204:	cmp	r0, r2
   14208:	str	r0, [sp, #168]	; 0xa8
   1420c:	beq	151e4 <dcngettext@plt+0x41f4>
   14210:	ldr	r7, [sp, #28]
   14214:	cmp	r7, #0
   14218:	movne	r7, #0
   1421c:	bne	14250 <dcngettext@plt+0x3260>
   14220:	ldr	r3, [sp, #164]	; 0xa4
   14224:	ldrb	r3, [r3]
   14228:	cmp	r3, #0
   1422c:	beq	15204 <dcngettext@plt+0x4214>
   14230:	ldr	r2, [sp, #164]	; 0xa4
   14234:	ldr	r1, [sp, #32]
   14238:	cmp	fp, r7
   1423c:	strbhi	r3, [r1, r7]
   14240:	ldrb	r3, [r2, #1]!
   14244:	add	r7, r7, #1
   14248:	cmp	r3, #0
   1424c:	bne	14238 <dcngettext@plt+0x3248>
   14250:	ldr	r0, [sp, #168]	; 0xa8
   14254:	bl	10edc <strlen@plt>
   14258:	ldr	r3, [sp, #168]	; 0xa8
   1425c:	str	r3, [sp, #64]	; 0x40
   14260:	mov	r3, #1
   14264:	str	r3, [sp, #44]	; 0x2c
   14268:	str	r0, [sp, #52]	; 0x34
   1426c:	b	13e74 <dcngettext@plt+0x2e84>
   14270:	mov	r3, #1
   14274:	str	r3, [sp, #44]	; 0x2c
   14278:	str	r3, [sp, #52]	; 0x34
   1427c:	str	r3, [sp, #28]
   14280:	ldr	r3, [pc, #3716]	; 1510c <dcngettext@plt+0x411c>
   14284:	mov	r7, #0
   14288:	str	r3, [sp, #64]	; 0x40
   1428c:	mov	r3, #5
   14290:	str	r3, [sp, #152]	; 0x98
   14294:	b	13e74 <dcngettext@plt+0x2e84>
   14298:	ldr	r3, [sp, #28]
   1429c:	cmp	r3, #0
   142a0:	beq	14fa0 <dcngettext@plt+0x3fb0>
   142a4:	ldr	r3, [sp, #28]
   142a8:	mov	r7, #0
   142ac:	str	r3, [sp, #44]	; 0x2c
   142b0:	mov	r3, #1
   142b4:	str	r3, [sp, #52]	; 0x34
   142b8:	ldr	r3, [pc, #3660]	; 1510c <dcngettext@plt+0x411c>
   142bc:	str	r3, [sp, #64]	; 0x40
   142c0:	b	13e74 <dcngettext@plt+0x2e84>
   142c4:	ldr	r3, [sp, #28]
   142c8:	cmp	r3, #0
   142cc:	mov	r3, #1
   142d0:	streq	r3, [sp, #44]	; 0x2c
   142d4:	bne	14158 <dcngettext@plt+0x3168>
   142d8:	cmp	fp, #0
   142dc:	beq	14fd0 <dcngettext@plt+0x3fe0>
   142e0:	ldr	r3, [sp, #32]
   142e4:	mov	r2, #39	; 0x27
   142e8:	mov	r7, #1
   142ec:	strb	r2, [r3]
   142f0:	mov	r3, #0
   142f4:	str	r3, [sp, #28]
   142f8:	mov	r3, #1
   142fc:	str	r3, [sp, #52]	; 0x34
   14300:	ldr	r3, [pc, #3580]	; 15104 <dcngettext@plt+0x4114>
   14304:	str	r3, [sp, #64]	; 0x40
   14308:	mov	r3, #2
   1430c:	str	r3, [sp, #152]	; 0x98
   14310:	b	13e74 <dcngettext@plt+0x2e84>
   14314:	ldr	r3, [sp, #24]
   14318:	cmn	r3, #1
   1431c:	beq	14f34 <dcngettext@plt+0x3f44>
   14320:	ldr	r3, [sp, #24]
   14324:	subs	r3, r3, #1
   14328:	movne	r3, #1
   1432c:	cmp	r3, #0
   14330:	bne	1433c <dcngettext@plt+0x334c>
   14334:	cmp	sl, #0
   14338:	beq	14728 <dcngettext@plt+0x3738>
   1433c:	ldr	r3, [sp, #152]	; 0x98
   14340:	mov	r5, #0
   14344:	sub	r2, r3, #2
   14348:	mov	r8, r5
   1434c:	clz	r2, r2
   14350:	lsr	r2, r2, #5
   14354:	ldr	r3, [sp, #60]	; 0x3c
   14358:	ldr	r1, [sp, #28]
   1435c:	orr	r3, r2, r3
   14360:	eor	r3, r3, #1
   14364:	orr	r3, r1, r3
   14368:	tst	r3, #255	; 0xff
   1436c:	bne	14a98 <dcngettext@plt+0x3aa8>
   14370:	cmp	r6, #0
   14374:	bne	144c4 <dcngettext@plt+0x34d4>
   14378:	ldr	r3, [sp, #40]	; 0x28
   1437c:	eor	r8, r8, #1
   14380:	and	r8, r8, r3
   14384:	add	sl, sl, #1
   14388:	uxtb	r6, r8
   1438c:	cmp	r6, #0
   14390:	beq	143c4 <dcngettext@plt+0x33d4>
   14394:	cmp	fp, r7
   14398:	movhi	r2, #39	; 0x27
   1439c:	ldrhi	r3, [sp, #32]
   143a0:	strbhi	r2, [r3, r7]
   143a4:	add	r3, r7, #1
   143a8:	cmp	fp, r3
   143ac:	movhi	r1, #39	; 0x27
   143b0:	ldrhi	r2, [sp, #32]
   143b4:	add	r7, r7, #2
   143b8:	strbhi	r1, [r2, r3]
   143bc:	mov	r3, #0
   143c0:	str	r3, [sp, #40]	; 0x28
   143c4:	cmp	r7, fp
   143c8:	ldrcc	r3, [sp, #32]
   143cc:	strbcc	r4, [r3, r7]
   143d0:	ldr	r3, [sp, #36]	; 0x24
   143d4:	cmp	r5, #0
   143d8:	moveq	r3, #0
   143dc:	str	r3, [sp, #36]	; 0x24
   143e0:	ldr	r3, [sp, #24]
   143e4:	add	r7, r7, #1
   143e8:	cmn	r3, #1
   143ec:	bne	13e90 <dcngettext@plt+0x2ea0>
   143f0:	ldr	r3, [sp, #56]	; 0x38
   143f4:	ldrb	r5, [r3, sl]
   143f8:	adds	r5, r5, #0
   143fc:	movne	r5, #1
   14400:	cmp	r5, #0
   14404:	bne	13ea4 <dcngettext@plt+0x2eb4>
   14408:	ldr	r3, [sp, #152]	; 0x98
   1440c:	ldr	r1, [sp, #28]
   14410:	sub	r3, r3, #2
   14414:	clz	r3, r3
   14418:	lsr	r3, r3, #5
   1441c:	and	r9, r1, r3
   14420:	cmp	r7, #0
   14424:	movne	r2, #0
   14428:	andeq	r2, r9, #1
   1442c:	cmp	r2, #0
   14430:	bne	14e0c <dcngettext@plt+0x3e1c>
   14434:	eor	r2, r1, #1
   14438:	ands	r3, r3, r2
   1443c:	beq	152c8 <dcngettext@plt+0x42d8>
   14440:	ldr	r2, [sp, #68]	; 0x44
   14444:	cmp	r2, #0
   14448:	beq	152b4 <dcngettext@plt+0x42c4>
   1444c:	ldr	r3, [sp, #36]	; 0x24
   14450:	cmp	r3, #0
   14454:	bne	1526c <dcngettext@plt+0x427c>
   14458:	ldr	r2, [sp, #72]	; 0x48
   1445c:	clz	r3, fp
   14460:	cmp	r2, #0
   14464:	lsr	r3, r3, #5
   14468:	moveq	r3, #0
   1446c:	cmp	r3, #0
   14470:	beq	1520c <dcngettext@plt+0x421c>
   14474:	str	r3, [sp, #68]	; 0x44
   14478:	ldr	fp, [sp, #72]	; 0x48
   1447c:	b	13e2c <dcngettext@plt+0x2e3c>
   14480:	ldr	r3, [sp, #152]	; 0x98
   14484:	cmp	r3, #2
   14488:	beq	14adc <dcngettext@plt+0x3aec>
   1448c:	ldr	r3, [sp, #44]	; 0x2c
   14490:	ldr	r2, [sp, #28]
   14494:	and	r2, r3, r2
   14498:	ands	r2, r9, r2
   1449c:	bne	14ae8 <dcngettext@plt+0x3af8>
   144a0:	mov	r4, #92	; 0x5c
   144a4:	mov	r3, r4
   144a8:	ldr	r1, [sp, #44]	; 0x2c
   144ac:	cmp	r1, #0
   144b0:	moveq	r5, #0
   144b4:	moveq	r8, r1
   144b8:	beq	14354 <dcngettext@plt+0x3364>
   144bc:	mov	r4, r3
   144c0:	mov	r5, #0
   144c4:	ldr	r3, [sp, #28]
   144c8:	cmp	r3, #0
   144cc:	bne	14ad0 <dcngettext@plt+0x3ae0>
   144d0:	ldr	r3, [sp, #40]	; 0x28
   144d4:	eor	r9, r3, #1
   144d8:	and	r9, r9, r2
   144dc:	ands	r9, r9, #255	; 0xff
   144e0:	beq	14524 <dcngettext@plt+0x3534>
   144e4:	cmp	fp, r7
   144e8:	movhi	r2, #39	; 0x27
   144ec:	ldrhi	r3, [sp, #32]
   144f0:	str	r9, [sp, #40]	; 0x28
   144f4:	strbhi	r2, [r3, r7]
   144f8:	add	r3, r7, #1
   144fc:	cmp	fp, r3
   14500:	movhi	r1, #36	; 0x24
   14504:	ldrhi	r2, [sp, #32]
   14508:	strbhi	r1, [r2, r3]
   1450c:	add	r3, r7, #2
   14510:	cmp	fp, r3
   14514:	add	r7, r7, #3
   14518:	ldrhi	r2, [sp, #32]
   1451c:	movhi	r1, #39	; 0x27
   14520:	strbhi	r1, [r2, r3]
   14524:	cmp	fp, r7
   14528:	movhi	r2, #92	; 0x5c
   1452c:	ldrhi	r3, [sp, #32]
   14530:	add	sl, sl, #1
   14534:	strbhi	r2, [r3, r7]
   14538:	add	r7, r7, #1
   1453c:	b	143c4 <dcngettext@plt+0x33d4>
   14540:	ldr	r3, [sp, #152]	; 0x98
   14544:	mov	r4, #11
   14548:	sub	r2, r3, #2
   1454c:	mov	r3, #118	; 0x76
   14550:	clz	r2, r2
   14554:	lsr	r2, r2, #5
   14558:	b	144a8 <dcngettext@plt+0x34b8>
   1455c:	mov	r4, #10
   14560:	mov	r3, #110	; 0x6e
   14564:	ldr	r2, [sp, #152]	; 0x98
   14568:	ldr	r1, [sp, #28]
   1456c:	sub	r2, r2, #2
   14570:	clz	r2, r2
   14574:	lsr	r2, r2, #5
   14578:	ands	r1, r1, r2
   1457c:	beq	144a8 <dcngettext@plt+0x34b8>
   14580:	ldr	sl, [sp, #32]
   14584:	mov	r8, fp
   14588:	mov	r2, r1
   1458c:	mov	r3, #2
   14590:	str	r3, [sp, #152]	; 0x98
   14594:	ldr	r9, [sp, #44]	; 0x2c
   14598:	ldr	r3, [sp, #152]	; 0x98
   1459c:	and	r9, r9, r2
   145a0:	tst	r9, #255	; 0xff
   145a4:	movne	r3, #4
   145a8:	str	r3, [sp, #152]	; 0x98
   145ac:	ldr	r3, [sp, #156]	; 0x9c
   145b0:	mov	ip, #0
   145b4:	bic	r3, r3, #2
   145b8:	str	r3, [sp, #4]
   145bc:	ldr	r3, [sp, #168]	; 0xa8
   145c0:	ldr	r2, [sp, #56]	; 0x38
   145c4:	str	r3, [sp, #16]
   145c8:	ldr	r3, [sp, #164]	; 0xa4
   145cc:	mov	r1, r8
   145d0:	str	r3, [sp, #12]
   145d4:	ldr	r3, [sp, #152]	; 0x98
   145d8:	mov	r0, sl
   145dc:	str	r3, [sp]
   145e0:	str	ip, [sp, #8]
   145e4:	ldr	r3, [sp, #24]
   145e8:	bl	13dd0 <dcngettext@plt+0x2de0>
   145ec:	mov	fp, r0
   145f0:	mov	r0, fp
   145f4:	add	sp, sp, #116	; 0x74
   145f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145fc:	ldr	r3, [sp, #152]	; 0x98
   14600:	mov	r4, #8
   14604:	sub	r2, r3, #2
   14608:	mov	r3, #98	; 0x62
   1460c:	clz	r2, r2
   14610:	lsr	r2, r2, #5
   14614:	b	144a8 <dcngettext@plt+0x34b8>
   14618:	ldr	r3, [sp, #152]	; 0x98
   1461c:	mov	r4, #7
   14620:	sub	r2, r3, #2
   14624:	mov	r3, #97	; 0x61
   14628:	clz	r2, r2
   1462c:	lsr	r2, r2, #5
   14630:	b	144a8 <dcngettext@plt+0x34b8>
   14634:	ldr	r3, [sp, #44]	; 0x2c
   14638:	cmp	r3, #0
   1463c:	beq	14e20 <dcngettext@plt+0x3e30>
   14640:	ldr	r3, [sp, #28]
   14644:	cmp	r3, #0
   14648:	bne	150f8 <dcngettext@plt+0x4108>
   1464c:	ldr	r3, [sp, #152]	; 0x98
   14650:	sub	r2, r3, #2
   14654:	ldr	r3, [sp, #40]	; 0x28
   14658:	clz	r2, r2
   1465c:	eor	r3, r3, #1
   14660:	lsr	r2, r2, #5
   14664:	ands	r3, r2, r3
   14668:	moveq	r1, r7
   1466c:	beq	146b0 <dcngettext@plt+0x36c0>
   14670:	cmp	fp, r7
   14674:	movhi	r0, #39	; 0x27
   14678:	ldrhi	r1, [sp, #32]
   1467c:	str	r3, [sp, #40]	; 0x28
   14680:	strbhi	r0, [r1, r7]
   14684:	add	r1, r7, #1
   14688:	cmp	fp, r1
   1468c:	movhi	ip, #36	; 0x24
   14690:	ldrhi	r0, [sp, #32]
   14694:	strbhi	ip, [r0, r1]
   14698:	add	r1, r7, #2
   1469c:	cmp	fp, r1
   146a0:	movhi	ip, #39	; 0x27
   146a4:	ldrhi	r0, [sp, #32]
   146a8:	strbhi	ip, [r0, r1]
   146ac:	add	r1, r7, #3
   146b0:	cmp	fp, r1
   146b4:	movhi	r0, #92	; 0x5c
   146b8:	ldrhi	r3, [sp, #32]
   146bc:	add	r7, r1, #1
   146c0:	strbhi	r0, [r3, r1]
   146c4:	cmp	r8, #0
   146c8:	beq	1500c <dcngettext@plt+0x401c>
   146cc:	ldr	r0, [sp, #24]
   146d0:	add	r3, sl, #1
   146d4:	cmp	r3, r0
   146d8:	bcs	14f48 <dcngettext@plt+0x3f58>
   146dc:	ldr	r0, [sp, #56]	; 0x38
   146e0:	ldrb	r3, [r0, r3]
   146e4:	sub	r3, r3, #48	; 0x30
   146e8:	cmp	r3, #9
   146ec:	bhi	14f48 <dcngettext@plt+0x3f58>
   146f0:	cmp	fp, r7
   146f4:	movhi	r3, #48	; 0x30
   146f8:	ldrhi	r0, [sp, #32]
   146fc:	ldr	r5, [sp, #28]
   14700:	mov	r4, #48	; 0x30
   14704:	strbhi	r3, [r0, r7]
   14708:	add	r3, r1, #2
   1470c:	cmp	fp, r3
   14710:	movhi	r0, #48	; 0x30
   14714:	ldrhi	ip, [sp, #32]
   14718:	add	r7, r1, #3
   1471c:	strbhi	r0, [ip, r3]
   14720:	b	14354 <dcngettext@plt+0x3364>
   14724:	mov	r5, #0
   14728:	ldr	r3, [sp, #152]	; 0x98
   1472c:	sub	r2, r3, #2
   14730:	ldr	r3, [sp, #28]
   14734:	clz	r2, r2
   14738:	lsr	r2, r2, #5
   1473c:	ands	r8, r3, r2
   14740:	beq	14354 <dcngettext@plt+0x3364>
   14744:	mov	r3, r8
   14748:	mov	r2, r3
   1474c:	mov	r3, #2
   14750:	ldr	sl, [sp, #32]
   14754:	mov	r8, fp
   14758:	str	r3, [sp, #152]	; 0x98
   1475c:	b	14594 <dcngettext@plt+0x35a4>
   14760:	ldr	r3, [sp, #152]	; 0x98
   14764:	cmp	r3, #2
   14768:	beq	14e8c <dcngettext@plt+0x3e9c>
   1476c:	cmp	r3, #5
   14770:	beq	14e4c <dcngettext@plt+0x3e5c>
   14774:	mov	r5, #0
   14778:	sub	r2, r3, #2
   1477c:	mov	r8, r5
   14780:	clz	r2, r2
   14784:	mov	r4, #63	; 0x3f
   14788:	lsr	r2, r2, #5
   1478c:	b	14354 <dcngettext@plt+0x3364>
   14790:	ldr	r3, [sp, #152]	; 0x98
   14794:	cmp	r3, #2
   14798:	beq	14eac <dcngettext@plt+0x3ebc>
   1479c:	mov	r2, #0
   147a0:	str	r5, [sp, #68]	; 0x44
   147a4:	mov	r8, r2
   147a8:	mov	r4, #39	; 0x27
   147ac:	b	14354 <dcngettext@plt+0x3364>
   147b0:	mov	r4, #13
   147b4:	mov	r3, #114	; 0x72
   147b8:	b	14564 <dcngettext@plt+0x3574>
   147bc:	ldr	r3, [sp, #152]	; 0x98
   147c0:	mov	r8, #0
   147c4:	sub	r2, r3, #2
   147c8:	clz	r2, r2
   147cc:	lsr	r2, r2, #5
   147d0:	b	14354 <dcngettext@plt+0x3364>
   147d4:	ldr	r3, [sp, #152]	; 0x98
   147d8:	mov	r4, #12
   147dc:	sub	r2, r3, #2
   147e0:	mov	r3, #102	; 0x66
   147e4:	clz	r2, r2
   147e8:	lsr	r2, r2, #5
   147ec:	b	144a8 <dcngettext@plt+0x34b8>
   147f0:	mov	r5, r6
   147f4:	b	14728 <dcngettext@plt+0x3738>
   147f8:	ldr	r3, [sp, #152]	; 0x98
   147fc:	sub	r2, r3, #2
   14800:	mov	r3, #116	; 0x74
   14804:	clz	r2, r2
   14808:	lsr	r2, r2, #5
   1480c:	b	144a8 <dcngettext@plt+0x34b8>
   14810:	ldr	r8, [sp, #76]	; 0x4c
   14814:	cmp	r8, #1
   14818:	bne	14cc8 <dcngettext@plt+0x3cd8>
   1481c:	bl	10ec4 <__ctype_b_loc@plt>
   14820:	sxth	r3, r4
   14824:	mov	ip, r8
   14828:	lsl	r3, r3, #1
   1482c:	ldr	r2, [r0]
   14830:	ldrh	r3, [r2, r3]
   14834:	and	r3, r3, #16384	; 0x4000
   14838:	cmp	r3, #0
   1483c:	movne	r5, #1
   14840:	moveq	r5, #0
   14844:	moveq	r3, #1
   14848:	movne	r3, #0
   1484c:	ldr	r2, [sp, #44]	; 0x2c
   14850:	and	r3, r3, r2
   14854:	ands	r8, r3, #255	; 0xff
   14858:	bne	14b5c <dcngettext@plt+0x3b6c>
   1485c:	ldr	r3, [sp, #152]	; 0x98
   14860:	sub	r2, r3, #2
   14864:	clz	r2, r2
   14868:	lsr	r2, r2, #5
   1486c:	b	14354 <dcngettext@plt+0x3364>
   14870:	ldr	r3, [sp, #56]	; 0x38
   14874:	add	r3, r3, sl
   14878:	str	r3, [sp, #48]	; 0x30
   1487c:	ldr	r3, [sp, #48]	; 0x30
   14880:	mov	r6, #0
   14884:	ldrb	r4, [r3]
   14888:	cmp	r4, #126	; 0x7e
   1488c:	ldrls	pc, [pc, r4, lsl #2]
   14890:	b	14810 <dcngettext@plt+0x3820>
   14894:	andeq	r4, r1, r4, lsr r6
   14898:	andeq	r4, r1, r0, lsl r8
   1489c:	andeq	r4, r1, r0, lsl r8
   148a0:	andeq	r4, r1, r0, lsl r8
   148a4:	andeq	r4, r1, r0, lsl r8
   148a8:	andeq	r4, r1, r0, lsl r8
   148ac:	andeq	r4, r1, r0, lsl r8
   148b0:	andeq	r4, r1, r8, lsl r6
   148b4:	strdeq	r4, [r1], -ip
   148b8:	muleq	r1, r0, sl
   148bc:	andeq	r4, r1, ip, asr r5
   148c0:	andeq	r4, r1, r0, asr #10
   148c4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   148c8:			; <UNDEFINED> instruction: 0x000147b0
   148cc:	andeq	r4, r1, r0, lsl r8
   148d0:	andeq	r4, r1, r0, lsl r8
   148d4:	andeq	r4, r1, r0, lsl r8
   148d8:	andeq	r4, r1, r0, lsl r8
   148dc:	andeq	r4, r1, r0, lsl r8
   148e0:	andeq	r4, r1, r0, lsl r8
   148e4:	andeq	r4, r1, r0, lsl r8
   148e8:	andeq	r4, r1, r0, lsl r8
   148ec:	andeq	r4, r1, r0, lsl r8
   148f0:	andeq	r4, r1, r0, lsl r8
   148f4:	andeq	r4, r1, r0, lsl r8
   148f8:	andeq	r4, r1, r0, lsl r8
   148fc:	andeq	r4, r1, r0, lsl r8
   14900:	andeq	r4, r1, r0, lsl r8
   14904:	andeq	r4, r1, r0, lsl r8
   14908:	andeq	r4, r1, r0, lsl r8
   1490c:	andeq	r4, r1, r0, lsl r8
   14910:	andeq	r4, r1, r0, lsl r8
   14914:	andeq	r4, r1, r8, lsr #14
   14918:	andeq	r4, r1, r4, lsr #14
   1491c:	andeq	r4, r1, r4, lsr #14
   14920:	andeq	r4, r1, r4, lsr r3
   14924:	andeq	r4, r1, r4, lsr #14
   14928:			; <UNDEFINED> instruction: 0x000147bc
   1492c:	andeq	r4, r1, r4, lsr #14
   14930:	muleq	r1, r0, r7
   14934:	andeq	r4, r1, r4, lsr #14
   14938:	andeq	r4, r1, r4, lsr #14
   1493c:	andeq	r4, r1, r4, lsr #14
   14940:			; <UNDEFINED> instruction: 0x000147bc
   14944:			; <UNDEFINED> instruction: 0x000147bc
   14948:			; <UNDEFINED> instruction: 0x000147bc
   1494c:			; <UNDEFINED> instruction: 0x000147bc
   14950:			; <UNDEFINED> instruction: 0x000147bc
   14954:			; <UNDEFINED> instruction: 0x000147bc
   14958:			; <UNDEFINED> instruction: 0x000147bc
   1495c:			; <UNDEFINED> instruction: 0x000147bc
   14960:			; <UNDEFINED> instruction: 0x000147bc
   14964:			; <UNDEFINED> instruction: 0x000147bc
   14968:			; <UNDEFINED> instruction: 0x000147bc
   1496c:			; <UNDEFINED> instruction: 0x000147bc
   14970:			; <UNDEFINED> instruction: 0x000147bc
   14974:			; <UNDEFINED> instruction: 0x000147bc
   14978:			; <UNDEFINED> instruction: 0x000147bc
   1497c:			; <UNDEFINED> instruction: 0x000147bc
   14980:	andeq	r4, r1, r4, lsr #14
   14984:	andeq	r4, r1, r4, lsr #14
   14988:	andeq	r4, r1, r4, lsr #14
   1498c:	andeq	r4, r1, r4, lsr #14
   14990:	andeq	r4, r1, r0, ror #14
   14994:	andeq	r4, r1, r0, lsl r8
   14998:			; <UNDEFINED> instruction: 0x000147bc
   1499c:			; <UNDEFINED> instruction: 0x000147bc
   149a0:			; <UNDEFINED> instruction: 0x000147bc
   149a4:			; <UNDEFINED> instruction: 0x000147bc
   149a8:			; <UNDEFINED> instruction: 0x000147bc
   149ac:			; <UNDEFINED> instruction: 0x000147bc
   149b0:			; <UNDEFINED> instruction: 0x000147bc
   149b4:			; <UNDEFINED> instruction: 0x000147bc
   149b8:			; <UNDEFINED> instruction: 0x000147bc
   149bc:			; <UNDEFINED> instruction: 0x000147bc
   149c0:			; <UNDEFINED> instruction: 0x000147bc
   149c4:			; <UNDEFINED> instruction: 0x000147bc
   149c8:			; <UNDEFINED> instruction: 0x000147bc
   149cc:			; <UNDEFINED> instruction: 0x000147bc
   149d0:			; <UNDEFINED> instruction: 0x000147bc
   149d4:			; <UNDEFINED> instruction: 0x000147bc
   149d8:			; <UNDEFINED> instruction: 0x000147bc
   149dc:			; <UNDEFINED> instruction: 0x000147bc
   149e0:			; <UNDEFINED> instruction: 0x000147bc
   149e4:			; <UNDEFINED> instruction: 0x000147bc
   149e8:			; <UNDEFINED> instruction: 0x000147bc
   149ec:			; <UNDEFINED> instruction: 0x000147bc
   149f0:			; <UNDEFINED> instruction: 0x000147bc
   149f4:			; <UNDEFINED> instruction: 0x000147bc
   149f8:			; <UNDEFINED> instruction: 0x000147bc
   149fc:			; <UNDEFINED> instruction: 0x000147bc
   14a00:	andeq	r4, r1, r4, lsr #14
   14a04:	andeq	r4, r1, r0, lsl #9
   14a08:			; <UNDEFINED> instruction: 0x000147bc
   14a0c:	andeq	r4, r1, r4, lsr #14
   14a10:			; <UNDEFINED> instruction: 0x000147bc
   14a14:	andeq	r4, r1, r4, lsr #14
   14a18:			; <UNDEFINED> instruction: 0x000147bc
   14a1c:			; <UNDEFINED> instruction: 0x000147bc
   14a20:			; <UNDEFINED> instruction: 0x000147bc
   14a24:			; <UNDEFINED> instruction: 0x000147bc
   14a28:			; <UNDEFINED> instruction: 0x000147bc
   14a2c:			; <UNDEFINED> instruction: 0x000147bc
   14a30:			; <UNDEFINED> instruction: 0x000147bc
   14a34:			; <UNDEFINED> instruction: 0x000147bc
   14a38:			; <UNDEFINED> instruction: 0x000147bc
   14a3c:			; <UNDEFINED> instruction: 0x000147bc
   14a40:			; <UNDEFINED> instruction: 0x000147bc
   14a44:			; <UNDEFINED> instruction: 0x000147bc
   14a48:			; <UNDEFINED> instruction: 0x000147bc
   14a4c:			; <UNDEFINED> instruction: 0x000147bc
   14a50:			; <UNDEFINED> instruction: 0x000147bc
   14a54:			; <UNDEFINED> instruction: 0x000147bc
   14a58:			; <UNDEFINED> instruction: 0x000147bc
   14a5c:			; <UNDEFINED> instruction: 0x000147bc
   14a60:			; <UNDEFINED> instruction: 0x000147bc
   14a64:			; <UNDEFINED> instruction: 0x000147bc
   14a68:			; <UNDEFINED> instruction: 0x000147bc
   14a6c:			; <UNDEFINED> instruction: 0x000147bc
   14a70:			; <UNDEFINED> instruction: 0x000147bc
   14a74:			; <UNDEFINED> instruction: 0x000147bc
   14a78:			; <UNDEFINED> instruction: 0x000147bc
   14a7c:			; <UNDEFINED> instruction: 0x000147bc
   14a80:	andeq	r4, r1, r4, lsl r3
   14a84:	andeq	r4, r1, r4, lsr #14
   14a88:	andeq	r4, r1, r4, lsl r3
   14a8c:	andeq	r4, r1, r4, lsr r3
   14a90:	mov	r3, #116	; 0x74
   14a94:	b	14564 <dcngettext@plt+0x3574>
   14a98:	ldr	r3, [sp, #160]	; 0xa0
   14a9c:	cmp	r3, #0
   14aa0:	beq	14370 <dcngettext@plt+0x3380>
   14aa4:	lsr	r3, r4, #5
   14aa8:	ldr	r0, [sp, #160]	; 0xa0
   14aac:	uxtb	r3, r3
   14ab0:	and	r1, r4, #31
   14ab4:	ldr	r0, [r0, r3, lsl #2]
   14ab8:	lsr	r3, r0, r1
   14abc:	tst	r3, #1
   14ac0:	beq	14370 <dcngettext@plt+0x3380>
   14ac4:	ldr	r3, [sp, #28]
   14ac8:	cmp	r3, #0
   14acc:	beq	144d0 <dcngettext@plt+0x34e0>
   14ad0:	ldr	sl, [sp, #32]
   14ad4:	mov	r8, fp
   14ad8:	b	14594 <dcngettext@plt+0x35a4>
   14adc:	ldr	r3, [sp, #28]
   14ae0:	cmp	r3, #0
   14ae4:	bne	15038 <dcngettext@plt+0x4048>
   14ae8:	add	sl, sl, #1
   14aec:	ldr	r6, [sp, #40]	; 0x28
   14af0:	mov	r5, #0
   14af4:	mov	r4, #92	; 0x5c
   14af8:	b	1438c <dcngettext@plt+0x339c>
   14afc:	cmp	r9, r8
   14b00:	bne	14d70 <dcngettext@plt+0x3d80>
   14b04:	ldr	r0, [sp, #100]	; 0x64
   14b08:	bl	10e28 <iswprint@plt>
   14b0c:	add	r5, r5, r4
   14b10:	cmp	r0, #0
   14b14:	add	r0, sp, #104	; 0x68
   14b18:	moveq	r6, #0
   14b1c:	bl	10dd4 <mbsinit@plt>
   14b20:	cmp	r0, #0
   14b24:	beq	14d04 <dcngettext@plt+0x3d14>
   14b28:	mov	r2, r6
   14b2c:	mov	ip, r5
   14b30:	eor	r5, r2, #1
   14b34:	ldr	r4, [sp, #80]	; 0x50
   14b38:	ldr	r6, [sp, #84]	; 0x54
   14b3c:	ldr	r7, [sp, #88]	; 0x58
   14b40:	uxtb	r5, r5
   14b44:	cmp	ip, #1
   14b48:	bls	15048 <dcngettext@plt+0x4058>
   14b4c:	ldr	r3, [sp, #44]	; 0x2c
   14b50:	and	r8, r3, r5
   14b54:	mov	r5, r2
   14b58:	uxtb	r8, r8
   14b5c:	add	r2, sl, ip
   14b60:	ldr	r0, [sp, #48]	; 0x30
   14b64:	mov	r1, #0
   14b68:	str	r5, [sp, #48]	; 0x30
   14b6c:	ldr	r9, [sp, #28]
   14b70:	ldr	ip, [sp, #40]	; 0x28
   14b74:	ldr	r3, [sp, #32]
   14b78:	ldr	r5, [sp, #152]	; 0x98
   14b7c:	b	14c38 <dcngettext@plt+0x3c48>
   14b80:	cmp	r9, #0
   14b84:	bne	14f5c <dcngettext@plt+0x3f6c>
   14b88:	eor	r1, ip, #1
   14b8c:	cmp	r5, #2
   14b90:	movne	r1, #0
   14b94:	andeq	r1, r1, #1
   14b98:	cmp	r1, #0
   14b9c:	beq	14bd4 <dcngettext@plt+0x3be4>
   14ba0:	cmp	fp, r7
   14ba4:	movhi	ip, #39	; 0x27
   14ba8:	strbhi	ip, [r3, r7]
   14bac:	add	ip, r7, #1
   14bb0:	cmp	fp, ip
   14bb4:	movhi	lr, #36	; 0x24
   14bb8:	strbhi	lr, [r3, ip]
   14bbc:	add	ip, r7, #2
   14bc0:	cmp	fp, ip
   14bc4:	movhi	lr, #39	; 0x27
   14bc8:	strbhi	lr, [r3, ip]
   14bcc:	add	r7, r7, #3
   14bd0:	mov	ip, r1
   14bd4:	cmp	fp, r7
   14bd8:	movhi	r1, #92	; 0x5c
   14bdc:	strbhi	r1, [r3, r7]
   14be0:	add	r1, r7, #1
   14be4:	cmp	fp, r1
   14be8:	lsrhi	lr, r4, #6
   14bec:	addhi	lr, lr, #48	; 0x30
   14bf0:	strbhi	lr, [r3, r1]
   14bf4:	add	lr, r7, #2
   14bf8:	cmp	fp, lr
   14bfc:	lsrhi	r1, r4, #3
   14c00:	andhi	r1, r1, #7
   14c04:	addhi	r1, r1, #48	; 0x30
   14c08:	add	sl, sl, #1
   14c0c:	strbhi	r1, [r3, lr]
   14c10:	and	r4, r4, #7
   14c14:	cmp	r2, sl
   14c18:	add	r4, r4, #48	; 0x30
   14c1c:	add	r7, r7, #3
   14c20:	bls	14f80 <dcngettext@plt+0x3f90>
   14c24:	mov	r1, r8
   14c28:	cmp	fp, r7
   14c2c:	strbhi	r4, [r3, r7]
   14c30:	ldrb	r4, [r0, #1]!
   14c34:	add	r7, r7, #1
   14c38:	cmp	r8, #0
   14c3c:	bne	14b80 <dcngettext@plt+0x3b90>
   14c40:	cmp	r6, #0
   14c44:	bne	14c94 <dcngettext@plt+0x3ca4>
   14c48:	eor	r6, r1, #1
   14c4c:	and	r6, r6, ip
   14c50:	add	sl, sl, #1
   14c54:	cmp	r2, sl
   14c58:	uxtb	r6, r6
   14c5c:	bls	14cbc <dcngettext@plt+0x3ccc>
   14c60:	cmp	r6, #0
   14c64:	beq	14c28 <dcngettext@plt+0x3c38>
   14c68:	cmp	fp, r7
   14c6c:	movhi	ip, #39	; 0x27
   14c70:	strbhi	ip, [r3, r7]
   14c74:	add	ip, r7, #1
   14c78:	cmp	fp, ip
   14c7c:	movhi	lr, #39	; 0x27
   14c80:	strbhi	lr, [r3, ip]
   14c84:	add	r7, r7, #2
   14c88:	mov	r6, r8
   14c8c:	mov	ip, r8
   14c90:	b	14c28 <dcngettext@plt+0x3c38>
   14c94:	cmp	fp, r7
   14c98:	eor	r6, r1, #1
   14c9c:	movhi	lr, #92	; 0x5c
   14ca0:	and	r6, r6, ip
   14ca4:	add	sl, sl, #1
   14ca8:	strbhi	lr, [r3, r7]
   14cac:	cmp	r2, sl
   14cb0:	add	r7, r7, #1
   14cb4:	uxtb	r6, r6
   14cb8:	bhi	14c60 <dcngettext@plt+0x3c70>
   14cbc:	str	ip, [sp, #40]	; 0x28
   14cc0:	ldr	r5, [sp, #48]	; 0x30
   14cc4:	b	1438c <dcngettext@plt+0x339c>
   14cc8:	ldr	r3, [sp, #24]
   14ccc:	cmn	r3, #1
   14cd0:	mov	r3, #0
   14cd4:	str	r3, [sp, #104]	; 0x68
   14cd8:	str	r3, [sp, #108]	; 0x6c
   14cdc:	beq	14ffc <dcngettext@plt+0x400c>
   14ce0:	mov	r2, r5
   14ce4:	mov	r3, #0
   14ce8:	str	r7, [sp, #88]	; 0x58
   14cec:	ldr	r7, [sp, #152]	; 0x98
   14cf0:	str	r5, [sp, #92]	; 0x5c
   14cf4:	str	r6, [sp, #84]	; 0x54
   14cf8:	mov	r5, r3
   14cfc:	mov	r6, r2
   14d00:	str	r4, [sp, #80]	; 0x50
   14d04:	ldr	r3, [sp, #56]	; 0x38
   14d08:	add	r9, sl, r5
   14d0c:	add	r8, r3, r9
   14d10:	ldr	r3, [sp, #24]
   14d14:	mov	r1, r8
   14d18:	sub	r2, r3, r9
   14d1c:	add	r0, sp, #100	; 0x64
   14d20:	add	r3, sp, #104	; 0x68
   14d24:	bl	168ac <dcngettext@plt+0x58bc>
   14d28:	subs	r4, r0, #0
   14d2c:	beq	150d4 <dcngettext@plt+0x40e4>
   14d30:	cmn	r4, #1
   14d34:	beq	150b4 <dcngettext@plt+0x40c4>
   14d38:	cmn	r4, #2
   14d3c:	beq	15054 <dcngettext@plt+0x4064>
   14d40:	ldr	r2, [sp, #28]
   14d44:	cmp	r7, #2
   14d48:	movne	r2, #0
   14d4c:	andeq	r2, r2, #1
   14d50:	cmp	r2, #0
   14d54:	beq	14b04 <dcngettext@plt+0x3b14>
   14d58:	cmp	r4, #1
   14d5c:	beq	14b04 <dcngettext@plt+0x3b14>
   14d60:	sub	r3, r4, #1
   14d64:	add	r9, r3, r9
   14d68:	ldr	r3, [sp, #56]	; 0x38
   14d6c:	add	r9, r3, r9
   14d70:	ldrb	r3, [r8, #1]!
   14d74:	sub	r3, r3, #91	; 0x5b
   14d78:	cmp	r3, #33	; 0x21
   14d7c:	ldrls	pc, [pc, r3, lsl #2]
   14d80:	b	14afc <dcngettext@plt+0x3b0c>
   14d84:	andeq	r4, r1, ip, lsl #28
   14d88:	andeq	r4, r1, ip, lsl #28
   14d8c:	strdeq	r4, [r1], -ip
   14d90:	andeq	r4, r1, ip, lsl #28
   14d94:	strdeq	r4, [r1], -ip
   14d98:	andeq	r4, r1, ip, lsl #28
   14d9c:	strdeq	r4, [r1], -ip
   14da0:	strdeq	r4, [r1], -ip
   14da4:	strdeq	r4, [r1], -ip
   14da8:	strdeq	r4, [r1], -ip
   14dac:	strdeq	r4, [r1], -ip
   14db0:	strdeq	r4, [r1], -ip
   14db4:	strdeq	r4, [r1], -ip
   14db8:	strdeq	r4, [r1], -ip
   14dbc:	strdeq	r4, [r1], -ip
   14dc0:	strdeq	r4, [r1], -ip
   14dc4:	strdeq	r4, [r1], -ip
   14dc8:	strdeq	r4, [r1], -ip
   14dcc:	strdeq	r4, [r1], -ip
   14dd0:	strdeq	r4, [r1], -ip
   14dd4:	strdeq	r4, [r1], -ip
   14dd8:	strdeq	r4, [r1], -ip
   14ddc:	strdeq	r4, [r1], -ip
   14de0:	strdeq	r4, [r1], -ip
   14de4:	strdeq	r4, [r1], -ip
   14de8:	strdeq	r4, [r1], -ip
   14dec:	strdeq	r4, [r1], -ip
   14df0:	strdeq	r4, [r1], -ip
   14df4:	strdeq	r4, [r1], -ip
   14df8:	strdeq	r4, [r1], -ip
   14dfc:	strdeq	r4, [r1], -ip
   14e00:	strdeq	r4, [r1], -ip
   14e04:	strdeq	r4, [r1], -ip
   14e08:	andeq	r4, r1, ip, lsl #28
   14e0c:	mov	r3, #2
   14e10:	ldr	sl, [sp, #32]
   14e14:	mov	r8, fp
   14e18:	str	r3, [sp, #152]	; 0x98
   14e1c:	b	14594 <dcngettext@plt+0x35a4>
   14e20:	ldr	r3, [sp, #156]	; 0x9c
   14e24:	tst	r3, #1
   14e28:	bne	14f54 <dcngettext@plt+0x3f64>
   14e2c:	ldr	r3, [sp, #152]	; 0x98
   14e30:	ldr	r4, [sp, #44]	; 0x2c
   14e34:	sub	r2, r3, #2
   14e38:	mov	r5, #0
   14e3c:	clz	r2, r2
   14e40:	mov	r8, r4
   14e44:	lsr	r2, r2, #5
   14e48:	b	14354 <dcngettext@plt+0x3364>
   14e4c:	ldr	r3, [sp, #156]	; 0x9c
   14e50:	ands	r9, r3, #4
   14e54:	beq	14f8c <dcngettext@plt+0x3f9c>
   14e58:	ldr	r2, [sp, #24]
   14e5c:	add	r3, sl, #2
   14e60:	cmp	r3, r2
   14e64:	bcs	14e78 <dcngettext@plt+0x3e88>
   14e68:	ldr	r2, [sp, #48]	; 0x30
   14e6c:	ldrb	r4, [r2, #1]
   14e70:	cmp	r4, #63	; 0x3f
   14e74:	beq	15114 <dcngettext@plt+0x4124>
   14e78:	mov	r2, #0
   14e7c:	mov	r8, r2
   14e80:	mov	r5, r2
   14e84:	mov	r4, #63	; 0x3f
   14e88:	b	14354 <dcngettext@plt+0x3364>
   14e8c:	ldr	r3, [sp, #28]
   14e90:	cmp	r3, #0
   14e94:	bne	151b8 <dcngettext@plt+0x41c8>
   14e98:	mov	r2, r5
   14e9c:	mov	r8, r3
   14ea0:	mov	r5, #0
   14ea4:	mov	r4, #63	; 0x3f
   14ea8:	b	14354 <dcngettext@plt+0x3364>
   14eac:	ldr	r3, [sp, #28]
   14eb0:	cmp	r3, #0
   14eb4:	bne	151b8 <dcngettext@plt+0x41c8>
   14eb8:	ldr	r2, [sp, #72]	; 0x48
   14ebc:	adds	r3, fp, #0
   14ec0:	movne	r3, #1
   14ec4:	cmp	r2, #0
   14ec8:	movne	r3, #0
   14ecc:	cmp	r3, #0
   14ed0:	strne	fp, [sp, #72]	; 0x48
   14ed4:	movne	fp, #0
   14ed8:	bne	14f14 <dcngettext@plt+0x3f24>
   14edc:	cmp	fp, r7
   14ee0:	movhi	r2, #39	; 0x27
   14ee4:	ldrhi	r3, [sp, #32]
   14ee8:	strbhi	r2, [r3, r7]
   14eec:	add	r3, r7, #1
   14ef0:	cmp	fp, r3
   14ef4:	movhi	r1, #92	; 0x5c
   14ef8:	ldrhi	r2, [sp, #32]
   14efc:	strbhi	r1, [r2, r3]
   14f00:	add	r3, r7, #2
   14f04:	cmp	fp, r3
   14f08:	movhi	r1, #39	; 0x27
   14f0c:	ldrhi	r2, [sp, #32]
   14f10:	strbhi	r1, [r2, r3]
   14f14:	ldr	r3, [sp, #28]
   14f18:	add	r7, r7, #3
   14f1c:	mov	r2, r5
   14f20:	mov	r8, r3
   14f24:	str	r5, [sp, #68]	; 0x44
   14f28:	str	r3, [sp, #40]	; 0x28
   14f2c:	mov	r4, #39	; 0x27
   14f30:	b	14354 <dcngettext@plt+0x3364>
   14f34:	ldr	r3, [sp, #56]	; 0x38
   14f38:	ldrb	r3, [r3, #1]
   14f3c:	adds	r3, r3, #0
   14f40:	movne	r3, #1
   14f44:	b	1432c <dcngettext@plt+0x333c>
   14f48:	ldr	r5, [sp, #28]
   14f4c:	mov	r4, #48	; 0x30
   14f50:	b	14354 <dcngettext@plt+0x3364>
   14f54:	add	sl, sl, #1
   14f58:	b	13e84 <dcngettext@plt+0x2e94>
   14f5c:	mov	sl, r3
   14f60:	ldr	r3, [sp, #28]
   14f64:	mov	r8, fp
   14f68:	str	r3, [sp, #44]	; 0x2c
   14f6c:	ldr	r3, [sp, #152]	; 0x98
   14f70:	sub	r2, r3, #2
   14f74:	clz	r2, r2
   14f78:	lsr	r2, r2, #5
   14f7c:	b	14594 <dcngettext@plt+0x35a4>
   14f80:	str	ip, [sp, #40]	; 0x28
   14f84:	ldr	r5, [sp, #48]	; 0x30
   14f88:	b	143c4 <dcngettext@plt+0x33d4>
   14f8c:	mov	r2, r9
   14f90:	mov	r8, r9
   14f94:	mov	r5, #0
   14f98:	mov	r4, #63	; 0x3f
   14f9c:	b	14354 <dcngettext@plt+0x3364>
   14fa0:	cmp	fp, #0
   14fa4:	beq	1501c <dcngettext@plt+0x402c>
   14fa8:	ldr	r1, [sp, #32]
   14fac:	mov	r3, #34	; 0x22
   14fb0:	mov	r2, #1
   14fb4:	strb	r3, [r1]
   14fb8:	ldr	r3, [pc, #332]	; 1510c <dcngettext@plt+0x411c>
   14fbc:	str	r2, [sp, #52]	; 0x34
   14fc0:	mov	r7, r2
   14fc4:	str	r2, [sp, #44]	; 0x2c
   14fc8:	str	r3, [sp, #64]	; 0x40
   14fcc:	b	13e74 <dcngettext@plt+0x2e84>
   14fd0:	ldr	r3, [pc, #300]	; 15104 <dcngettext@plt+0x4114>
   14fd4:	str	r3, [sp, #64]	; 0x40
   14fd8:	mov	r3, #0
   14fdc:	str	r3, [sp, #28]
   14fe0:	mov	r3, #1
   14fe4:	str	r3, [sp, #52]	; 0x34
   14fe8:	mov	r7, r3
   14fec:	mov	r3, #2
   14ff0:	str	r3, [sp, #152]	; 0x98
   14ff4:	b	13e74 <dcngettext@plt+0x2e84>
   14ff8:	bl	10fd8 <abort@plt>
   14ffc:	ldr	r0, [sp, #56]	; 0x38
   15000:	bl	10edc <strlen@plt>
   15004:	str	r0, [sp, #24]
   15008:	b	14ce0 <dcngettext@plt+0x3cf0>
   1500c:	mov	r5, r8
   15010:	mov	r4, #48	; 0x30
   15014:	ldr	r8, [sp, #44]	; 0x2c
   15018:	b	14354 <dcngettext@plt+0x3364>
   1501c:	mov	r3, #1
   15020:	str	r3, [sp, #52]	; 0x34
   15024:	mov	r7, r3
   15028:	str	r3, [sp, #44]	; 0x2c
   1502c:	ldr	r3, [pc, #216]	; 1510c <dcngettext@plt+0x411c>
   15030:	str	r3, [sp, #64]	; 0x40
   15034:	b	13e74 <dcngettext@plt+0x2e84>
   15038:	ldr	sl, [sp, #32]
   1503c:	mov	r8, fp
   15040:	mov	r2, r3
   15044:	b	14594 <dcngettext@plt+0x35a4>
   15048:	mov	r3, r5
   1504c:	mov	r5, r2
   15050:	b	1484c <dcngettext@plt+0x385c>
   15054:	ldr	r1, [sp, #24]
   15058:	mov	r2, r5
   1505c:	cmp	r1, r9
   15060:	mov	ip, r5
   15064:	ldr	r4, [sp, #80]	; 0x50
   15068:	ldr	r5, [sp, #92]	; 0x5c
   1506c:	ldr	r6, [sp, #84]	; 0x54
   15070:	ldr	r7, [sp, #88]	; 0x58
   15074:	bls	150a8 <dcngettext@plt+0x40b8>
   15078:	ldrb	r3, [r8]
   1507c:	cmp	r3, #0
   15080:	bne	15094 <dcngettext@plt+0x40a4>
   15084:	b	150ac <dcngettext@plt+0x40bc>
   15088:	ldrb	r3, [r8, #1]!
   1508c:	cmp	r3, #0
   15090:	beq	151ac <dcngettext@plt+0x41bc>
   15094:	add	r2, r2, #1
   15098:	add	r3, sl, r2
   1509c:	cmp	r1, r3
   150a0:	bhi	15088 <dcngettext@plt+0x4098>
   150a4:	mov	ip, r2
   150a8:	mov	r3, #0
   150ac:	mov	r2, r3
   150b0:	b	14b44 <dcngettext@plt+0x3b54>
   150b4:	mov	r3, #0
   150b8:	mov	ip, r5
   150bc:	ldr	r4, [sp, #80]	; 0x50
   150c0:	ldr	r5, [sp, #92]	; 0x5c
   150c4:	ldr	r6, [sp, #84]	; 0x54
   150c8:	ldr	r7, [sp, #88]	; 0x58
   150cc:	mov	r2, r3
   150d0:	b	14b44 <dcngettext@plt+0x3b54>
   150d4:	mov	r3, r6
   150d8:	mov	ip, r5
   150dc:	eor	r5, r3, #1
   150e0:	mov	r2, r6
   150e4:	ldr	r4, [sp, #80]	; 0x50
   150e8:	ldr	r6, [sp, #84]	; 0x54
   150ec:	ldr	r7, [sp, #88]	; 0x58
   150f0:	uxtb	r5, r5
   150f4:	b	14b44 <dcngettext@plt+0x3b54>
   150f8:	ldr	sl, [sp, #32]
   150fc:	mov	r8, fp
   15100:	b	14f68 <dcngettext@plt+0x3f78>
   15104:	ldrdeq	r7, [r1], -r4
   15108:	ldrdeq	r7, [r1], -r8
   1510c:	ldrdeq	r7, [r1], -r0
   15110:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   15114:	ldr	r2, [sp, #56]	; 0x38
   15118:	ldrb	r1, [r2, r3]
   1511c:	sub	r2, r1, #33	; 0x21
   15120:	uxtb	r2, r2
   15124:	cmp	r2, #29
   15128:	bhi	151c8 <dcngettext@plt+0x41d8>
   1512c:	ldr	r0, [pc, #-36]	; 15110 <dcngettext@plt+0x4120>
   15130:	mov	ip, #1
   15134:	ands	r2, r0, ip, lsl r2
   15138:	beq	151d8 <dcngettext@plt+0x41e8>
   1513c:	ldr	r2, [sp, #28]
   15140:	cmp	r2, #0
   15144:	bne	152d8 <dcngettext@plt+0x42e8>
   15148:	cmp	fp, r7
   1514c:	ldr	r8, [sp, #28]
   15150:	ldrhi	r2, [sp, #32]
   15154:	mov	sl, r3
   15158:	mov	r5, r8
   1515c:	strbhi	r4, [r2, r7]
   15160:	add	r2, r7, #1
   15164:	cmp	fp, r2
   15168:	movhi	r0, #34	; 0x22
   1516c:	ldrhi	ip, [sp, #32]
   15170:	mov	r4, r1
   15174:	strbhi	r0, [ip, r2]
   15178:	add	r2, r7, #2
   1517c:	cmp	fp, r2
   15180:	movhi	r0, #34	; 0x22
   15184:	ldrhi	ip, [sp, #32]
   15188:	strbhi	r0, [ip, r2]
   1518c:	add	r2, r7, #3
   15190:	cmp	fp, r2
   15194:	movhi	r0, #63	; 0x3f
   15198:	ldrhi	ip, [sp, #32]
   1519c:	add	r7, r7, #4
   151a0:	strbhi	r0, [ip, r2]
   151a4:	mov	r2, r8
   151a8:	b	14354 <dcngettext@plt+0x3364>
   151ac:	mov	ip, r2
   151b0:	mov	r2, r3
   151b4:	b	14b44 <dcngettext@plt+0x3b54>
   151b8:	ldr	sl, [sp, #32]
   151bc:	mov	r8, fp
   151c0:	ldr	r2, [sp, #28]
   151c4:	b	14594 <dcngettext@plt+0x35a4>
   151c8:	mov	r2, #0
   151cc:	mov	r8, r2
   151d0:	mov	r5, r2
   151d4:	b	14354 <dcngettext@plt+0x3364>
   151d8:	mov	r8, r2
   151dc:	mov	r5, #0
   151e0:	b	14354 <dcngettext@plt+0x3364>
   151e4:	ldr	r1, [sp, #152]	; 0x98
   151e8:	bl	13cb0 <dcngettext@plt+0x2cc0>
   151ec:	str	r0, [sp, #168]	; 0xa8
   151f0:	b	14210 <dcngettext@plt+0x3220>
   151f4:	ldr	r1, [sp, #152]	; 0x98
   151f8:	bl	13cb0 <dcngettext@plt+0x2cc0>
   151fc:	str	r0, [sp, #164]	; 0xa4
   15200:	b	141f0 <dcngettext@plt+0x3200>
   15204:	ldr	r7, [sp, #28]
   15208:	b	14250 <dcngettext@plt+0x3260>
   1520c:	ldr	sl, [sp, #32]
   15210:	ldr	r2, [sp, #68]	; 0x44
   15214:	mov	r8, fp
   15218:	mov	fp, r7
   1521c:	ldr	r3, [sp, #64]	; 0x40
   15220:	cmp	r3, #0
   15224:	moveq	r2, #0
   15228:	andne	r2, r2, #1
   1522c:	cmp	r2, #0
   15230:	beq	1525c <dcngettext@plt+0x426c>
   15234:	mov	r2, r3
   15238:	ldrb	r3, [r3]
   1523c:	cmp	r3, #0
   15240:	beq	1525c <dcngettext@plt+0x426c>
   15244:	cmp	r8, fp
   15248:	strbhi	r3, [sl, fp]
   1524c:	ldrb	r3, [r2, #1]!
   15250:	add	fp, fp, #1
   15254:	cmp	r3, #0
   15258:	bne	15244 <dcngettext@plt+0x4254>
   1525c:	cmp	r8, fp
   15260:	movhi	r3, #0
   15264:	strbhi	r3, [sl, fp]
   15268:	b	145f0 <dcngettext@plt+0x3600>
   1526c:	ldr	r3, [sp, #168]	; 0xa8
   15270:	ldr	sl, [sp, #32]
   15274:	str	r3, [sp, #16]
   15278:	ldr	r3, [sp, #164]	; 0xa4
   1527c:	mov	ip, #5
   15280:	str	r3, [sp, #12]
   15284:	ldr	r3, [sp, #160]	; 0xa0
   15288:	ldr	r2, [sp, #56]	; 0x38
   1528c:	str	r3, [sp, #8]
   15290:	ldr	r3, [sp, #156]	; 0x9c
   15294:	ldr	r1, [sp, #72]	; 0x48
   15298:	str	r3, [sp, #4]
   1529c:	mov	r0, sl
   152a0:	ldr	r3, [sp, #24]
   152a4:	str	ip, [sp]
   152a8:	bl	13dd0 <dcngettext@plt+0x2de0>
   152ac:	mov	fp, r0
   152b0:	b	145f0 <dcngettext@plt+0x3600>
   152b4:	mov	r8, fp
   152b8:	ldr	sl, [sp, #32]
   152bc:	mov	fp, r7
   152c0:	mov	r2, r3
   152c4:	b	1521c <dcngettext@plt+0x422c>
   152c8:	mov	r8, fp
   152cc:	ldr	sl, [sp, #32]
   152d0:	mov	fp, r7
   152d4:	b	1521c <dcngettext@plt+0x422c>
   152d8:	ldr	sl, [sp, #32]
   152dc:	mov	r8, fp
   152e0:	b	145ac <dcngettext@plt+0x35bc>
   152e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e8:	sub	sp, sp, #52	; 0x34
   152ec:	mov	r4, r0
   152f0:	mov	r5, r3
   152f4:	mov	sl, r1
   152f8:	mov	fp, r2
   152fc:	bl	10ef4 <__errno_location@plt>
   15300:	ldr	r7, [pc, #412]	; 154a4 <dcngettext@plt+0x44b4>
   15304:	cmn	r4, #-2147483647	; 0x80000001
   15308:	ldr	r6, [r7]
   1530c:	mov	r8, r0
   15310:	movne	r0, #0
   15314:	moveq	r0, #1
   15318:	ldr	r3, [r8]
   1531c:	orrs	r0, r0, r4, lsr #31
   15320:	str	r3, [sp, #24]
   15324:	bne	154a0 <dcngettext@plt+0x44b0>
   15328:	ldr	r2, [r7, #4]
   1532c:	cmp	r4, r2
   15330:	blt	15390 <dcngettext@plt+0x43a0>
   15334:	add	r9, r7, #8
   15338:	cmp	r6, r9
   1533c:	str	r2, [sp, #44]	; 0x2c
   15340:	beq	15470 <dcngettext@plt+0x4480>
   15344:	mov	r3, #8
   15348:	sub	r2, r4, r2
   1534c:	mov	r0, r6
   15350:	str	r3, [sp]
   15354:	add	r2, r2, #1
   15358:	mvn	r3, #-2147483648	; 0x80000000
   1535c:	add	r1, sp, #44	; 0x2c
   15360:	bl	1615c <dcngettext@plt+0x516c>
   15364:	mov	r6, r0
   15368:	str	r0, [r7]
   1536c:	ldr	r0, [r7, #4]
   15370:	ldr	r2, [sp, #44]	; 0x2c
   15374:	mov	r1, #0
   15378:	sub	r2, r2, r0
   1537c:	add	r0, r6, r0, lsl #3
   15380:	lsl	r2, r2, #3
   15384:	bl	10f18 <memset@plt>
   15388:	ldr	r3, [sp, #44]	; 0x2c
   1538c:	str	r3, [r7, #4]
   15390:	add	r3, r6, r4, lsl #3
   15394:	ldr	r1, [r5, #4]
   15398:	ldr	r7, [r3, #4]
   1539c:	ldr	r9, [r6, r4, lsl #3]
   153a0:	ldr	r2, [r5, #40]	; 0x28
   153a4:	ldr	ip, [r5, #44]	; 0x2c
   153a8:	add	r0, r5, #8
   153ac:	str	r3, [sp, #28]
   153b0:	ldr	r3, [r5]
   153b4:	orr	r1, r1, #1
   153b8:	mov	lr, r0
   153bc:	str	r1, [sp, #32]
   153c0:	str	r0, [sp, #36]	; 0x24
   153c4:	str	r1, [sp, #4]
   153c8:	str	r2, [sp, #12]
   153cc:	str	r3, [sp]
   153d0:	mov	r0, r7
   153d4:	mov	r1, r9
   153d8:	str	ip, [sp, #16]
   153dc:	str	lr, [sp, #8]
   153e0:	mov	r3, fp
   153e4:	mov	r2, sl
   153e8:	bl	13dd0 <dcngettext@plt+0x2de0>
   153ec:	cmp	r9, r0
   153f0:	bhi	1545c <dcngettext@plt+0x446c>
   153f4:	ldr	r3, [pc, #172]	; 154a8 <dcngettext@plt+0x44b8>
   153f8:	add	r9, r0, #1
   153fc:	cmp	r7, r3
   15400:	str	r9, [r6, r4, lsl #3]
   15404:	beq	15410 <dcngettext@plt+0x4420>
   15408:	mov	r0, r7
   1540c:	bl	13ad4 <dcngettext@plt+0x2ae4>
   15410:	mov	r0, r9
   15414:	bl	15ff8 <dcngettext@plt+0x5008>
   15418:	ldr	lr, [sp, #28]
   1541c:	ldr	ip, [r5, #44]	; 0x2c
   15420:	ldr	r4, [r5, #40]	; 0x28
   15424:	mov	r3, fp
   15428:	mov	r2, sl
   1542c:	mov	r1, r9
   15430:	str	r0, [lr, #4]
   15434:	ldr	lr, [r5]
   15438:	ldr	r5, [sp, #36]	; 0x24
   1543c:	str	ip, [sp, #16]
   15440:	str	r5, [sp, #8]
   15444:	ldr	r5, [sp, #32]
   15448:	str	r4, [sp, #12]
   1544c:	str	r5, [sp, #4]
   15450:	str	lr, [sp]
   15454:	mov	r7, r0
   15458:	bl	13dd0 <dcngettext@plt+0x2de0>
   1545c:	ldr	r3, [sp, #24]
   15460:	mov	r0, r7
   15464:	str	r3, [r8]
   15468:	add	sp, sp, #52	; 0x34
   1546c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15470:	mov	r3, #8
   15474:	sub	r2, r4, r2
   15478:	str	r3, [sp]
   1547c:	add	r1, sp, #44	; 0x2c
   15480:	add	r2, r2, #1
   15484:	mvn	r3, #-2147483648	; 0x80000000
   15488:	bl	1615c <dcngettext@plt+0x516c>
   1548c:	mov	r6, r0
   15490:	ldm	r9, {r0, r1}
   15494:	str	r6, [r7]
   15498:	stm	r6, {r0, r1}
   1549c:	b	1536c <dcngettext@plt+0x437c>
   154a0:	bl	10fd8 <abort@plt>
   154a4:	andeq	r9, r2, ip, lsl #2
   154a8:	muleq	r2, r0, r1
   154ac:	push	{r4, r5, r6, lr}
   154b0:	mov	r5, r0
   154b4:	bl	10ef4 <__errno_location@plt>
   154b8:	cmp	r5, #0
   154bc:	mov	r1, #48	; 0x30
   154c0:	mov	r4, r0
   154c4:	ldr	r0, [pc, #16]	; 154dc <dcngettext@plt+0x44ec>
   154c8:	ldr	r6, [r4]
   154cc:	movne	r0, r5
   154d0:	bl	16458 <dcngettext@plt+0x5468>
   154d4:	str	r6, [r4]
   154d8:	pop	{r4, r5, r6, pc}
   154dc:	muleq	r2, r0, r2
   154e0:	ldr	r3, [pc, #12]	; 154f4 <dcngettext@plt+0x4504>
   154e4:	cmp	r0, #0
   154e8:	moveq	r0, r3
   154ec:	ldr	r0, [r0]
   154f0:	bx	lr
   154f4:	muleq	r2, r0, r2
   154f8:	ldr	r3, [pc, #12]	; 1550c <dcngettext@plt+0x451c>
   154fc:	cmp	r0, #0
   15500:	moveq	r0, r3
   15504:	str	r1, [r0]
   15508:	bx	lr
   1550c:	muleq	r2, r0, r2
   15510:	ldr	r3, [pc, #52]	; 1554c <dcngettext@plt+0x455c>
   15514:	cmp	r0, #0
   15518:	moveq	r0, r3
   1551c:	add	r3, r0, #8
   15520:	push	{lr}		; (str lr, [sp, #-4]!)
   15524:	lsr	lr, r1, #5
   15528:	and	r1, r1, #31
   1552c:	ldr	ip, [r3, lr, lsl #2]
   15530:	lsr	r0, ip, r1
   15534:	eor	r2, r2, r0
   15538:	and	r2, r2, #1
   1553c:	and	r0, r0, #1
   15540:	eor	r1, ip, r2, lsl r1
   15544:	str	r1, [r3, lr, lsl #2]
   15548:	pop	{pc}		; (ldr pc, [sp], #4)
   1554c:	muleq	r2, r0, r2
   15550:	ldr	r3, [pc, #16]	; 15568 <dcngettext@plt+0x4578>
   15554:	cmp	r0, #0
   15558:	movne	r3, r0
   1555c:	ldr	r0, [r3, #4]
   15560:	str	r1, [r3, #4]
   15564:	bx	lr
   15568:	muleq	r2, r0, r2
   1556c:	ldr	r3, [pc, #44]	; 155a0 <dcngettext@plt+0x45b0>
   15570:	cmp	r0, #0
   15574:	moveq	r0, r3
   15578:	mov	ip, #10
   1557c:	cmp	r2, #0
   15580:	cmpne	r1, #0
   15584:	str	ip, [r0]
   15588:	beq	15598 <dcngettext@plt+0x45a8>
   1558c:	str	r1, [r0, #40]	; 0x28
   15590:	str	r2, [r0, #44]	; 0x2c
   15594:	bx	lr
   15598:	push	{r4, lr}
   1559c:	bl	10fd8 <abort@plt>
   155a0:	muleq	r2, r0, r2
   155a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   155a8:	sub	sp, sp, #24
   155ac:	ldr	ip, [pc, #108]	; 15620 <dcngettext@plt+0x4630>
   155b0:	ldr	r4, [sp, #56]	; 0x38
   155b4:	mov	r9, r2
   155b8:	cmp	r4, #0
   155bc:	moveq	r4, ip
   155c0:	mov	sl, r3
   155c4:	mov	r7, r0
   155c8:	mov	r8, r1
   155cc:	bl	10ef4 <__errno_location@plt>
   155d0:	ldr	r3, [r4, #44]	; 0x2c
   155d4:	mov	r1, r8
   155d8:	ldr	r6, [r0]
   155dc:	str	r3, [sp, #16]
   155e0:	ldr	r2, [r4, #40]	; 0x28
   155e4:	add	r3, r4, #8
   155e8:	str	r3, [sp, #8]
   155ec:	str	r2, [sp, #12]
   155f0:	ldr	r2, [r4, #4]
   155f4:	mov	r5, r0
   155f8:	str	r2, [sp, #4]
   155fc:	ldr	ip, [r4]
   15600:	mov	r3, sl
   15604:	mov	r2, r9
   15608:	mov	r0, r7
   1560c:	str	ip, [sp]
   15610:	bl	13dd0 <dcngettext@plt+0x2de0>
   15614:	str	r6, [r5]
   15618:	add	sp, sp, #24
   1561c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15620:	muleq	r2, r0, r2
   15624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15628:	cmp	r3, #0
   1562c:	sub	sp, sp, #44	; 0x2c
   15630:	ldr	r4, [pc, #192]	; 156f8 <dcngettext@plt+0x4708>
   15634:	mov	r6, r2
   15638:	movne	r4, r3
   1563c:	mov	r9, r1
   15640:	mov	r8, r0
   15644:	bl	10ef4 <__errno_location@plt>
   15648:	ldr	r3, [r4, #44]	; 0x2c
   1564c:	ldr	r5, [r4, #4]
   15650:	add	sl, r4, #8
   15654:	cmp	r6, #0
   15658:	orreq	r5, r5, #1
   1565c:	mov	r1, #0
   15660:	ldr	r2, [r0]
   15664:	str	r3, [sp, #16]
   15668:	ldr	r3, [r4, #40]	; 0x28
   1566c:	stmib	sp, {r5, sl}
   15670:	str	r3, [sp, #12]
   15674:	ldr	r3, [r4]
   15678:	mov	r7, r0
   1567c:	str	r2, [sp, #28]
   15680:	str	r3, [sp]
   15684:	mov	r2, r8
   15688:	mov	r3, r9
   1568c:	mov	r0, r1
   15690:	bl	13dd0 <dcngettext@plt+0x2de0>
   15694:	add	r1, r0, #1
   15698:	mov	fp, r0
   1569c:	mov	r0, r1
   156a0:	str	r1, [sp, #36]	; 0x24
   156a4:	bl	15ff8 <dcngettext@plt+0x5008>
   156a8:	ldr	r3, [r4, #44]	; 0x2c
   156ac:	mov	r2, r8
   156b0:	str	r3, [sp, #16]
   156b4:	ldr	r3, [r4, #40]	; 0x28
   156b8:	str	r5, [sp, #4]
   156bc:	str	r3, [sp, #12]
   156c0:	str	sl, [sp, #8]
   156c4:	ldr	ip, [r4]
   156c8:	ldr	r1, [sp, #36]	; 0x24
   156cc:	mov	r3, r9
   156d0:	str	ip, [sp]
   156d4:	str	r0, [sp, #32]
   156d8:	bl	13dd0 <dcngettext@plt+0x2de0>
   156dc:	ldr	r2, [sp, #28]
   156e0:	cmp	r6, #0
   156e4:	str	r2, [r7]
   156e8:	ldr	r0, [sp, #32]
   156ec:	strne	fp, [r6]
   156f0:	add	sp, sp, #44	; 0x2c
   156f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156f8:	muleq	r2, r0, r2
   156fc:	mov	r3, r2
   15700:	mov	r2, #0
   15704:	b	15624 <dcngettext@plt+0x4634>
   15708:	push	{r4, r5, r6, r7, r8, lr}
   1570c:	ldr	r6, [pc, #116]	; 15788 <dcngettext@plt+0x4798>
   15710:	ldr	r3, [r6, #4]
   15714:	ldr	r7, [r6]
   15718:	cmp	r3, #1
   1571c:	movgt	r5, r7
   15720:	movgt	r4, #1
   15724:	ble	15744 <dcngettext@plt+0x4754>
   15728:	ldr	r0, [r5, #12]
   1572c:	bl	13ad4 <dcngettext@plt+0x2ae4>
   15730:	ldr	r3, [r6, #4]
   15734:	add	r4, r4, #1
   15738:	cmp	r3, r4
   1573c:	add	r5, r5, #8
   15740:	bgt	15728 <dcngettext@plt+0x4738>
   15744:	ldr	r0, [r7, #4]
   15748:	ldr	r4, [pc, #60]	; 1578c <dcngettext@plt+0x479c>
   1574c:	cmp	r0, r4
   15750:	beq	15764 <dcngettext@plt+0x4774>
   15754:	bl	13ad4 <dcngettext@plt+0x2ae4>
   15758:	mov	r3, #256	; 0x100
   1575c:	str	r4, [r6, #12]
   15760:	str	r3, [r6, #8]
   15764:	ldr	r4, [pc, #36]	; 15790 <dcngettext@plt+0x47a0>
   15768:	cmp	r7, r4
   1576c:	beq	1577c <dcngettext@plt+0x478c>
   15770:	mov	r0, r7
   15774:	bl	13ad4 <dcngettext@plt+0x2ae4>
   15778:	str	r4, [r6]
   1577c:	mov	r3, #1
   15780:	str	r3, [r6, #4]
   15784:	pop	{r4, r5, r6, r7, r8, pc}
   15788:	andeq	r9, r2, ip, lsl #2
   1578c:	muleq	r2, r0, r1
   15790:	andeq	r9, r2, r4, lsl r1
   15794:	ldr	r3, [pc, #4]	; 157a0 <dcngettext@plt+0x47b0>
   15798:	mvn	r2, #0
   1579c:	b	152e4 <dcngettext@plt+0x42f4>
   157a0:	muleq	r2, r0, r2
   157a4:	ldr	r3, [pc]	; 157ac <dcngettext@plt+0x47bc>
   157a8:	b	152e4 <dcngettext@plt+0x42f4>
   157ac:	muleq	r2, r0, r2
   157b0:	mov	r1, r0
   157b4:	ldr	r3, [pc, #8]	; 157c4 <dcngettext@plt+0x47d4>
   157b8:	mvn	r2, #0
   157bc:	mov	r0, #0
   157c0:	b	152e4 <dcngettext@plt+0x42f4>
   157c4:	muleq	r2, r0, r2
   157c8:	mov	r2, r1
   157cc:	ldr	r3, [pc, #8]	; 157dc <dcngettext@plt+0x47ec>
   157d0:	mov	r1, r0
   157d4:	mov	r0, #0
   157d8:	b	152e4 <dcngettext@plt+0x42f4>
   157dc:	muleq	r2, r0, r2
   157e0:	push	{r4, r5, lr}
   157e4:	sub	sp, sp, #52	; 0x34
   157e8:	mov	r5, r2
   157ec:	mov	r4, r0
   157f0:	mov	r0, sp
   157f4:	bl	13c80 <dcngettext@plt+0x2c90>
   157f8:	mov	r3, sp
   157fc:	mov	r1, r5
   15800:	mov	r0, r4
   15804:	mvn	r2, #0
   15808:	bl	152e4 <dcngettext@plt+0x42f4>
   1580c:	add	sp, sp, #52	; 0x34
   15810:	pop	{r4, r5, pc}
   15814:	push	{r4, r5, r6, lr}
   15818:	sub	sp, sp, #48	; 0x30
   1581c:	mov	r5, r2
   15820:	mov	r6, r3
   15824:	mov	r4, r0
   15828:	mov	r0, sp
   1582c:	bl	13c80 <dcngettext@plt+0x2c90>
   15830:	mov	r3, sp
   15834:	mov	r2, r6
   15838:	mov	r1, r5
   1583c:	mov	r0, r4
   15840:	bl	152e4 <dcngettext@plt+0x42f4>
   15844:	add	sp, sp, #48	; 0x30
   15848:	pop	{r4, r5, r6, pc}
   1584c:	mov	r2, r1
   15850:	mov	r1, r0
   15854:	mov	r0, #0
   15858:	b	157e0 <dcngettext@plt+0x47f0>
   1585c:	mov	r3, r2
   15860:	mov	r2, r1
   15864:	mov	r1, r0
   15868:	mov	r0, #0
   1586c:	b	15814 <dcngettext@plt+0x4824>
   15870:	push	{r4, r5, r6, r7, r8, lr}
   15874:	mov	r7, r0
   15878:	ldr	lr, [pc, #100]	; 158e4 <dcngettext@plt+0x48f4>
   1587c:	mov	r8, r1
   15880:	mov	r4, r2
   15884:	ldm	lr!, {r0, r1, r2, r3}
   15888:	sub	sp, sp, #48	; 0x30
   1588c:	mov	ip, sp
   15890:	lsr	r5, r4, #5
   15894:	stmia	ip!, {r0, r1, r2, r3}
   15898:	add	r6, sp, #8
   1589c:	ldm	lr!, {r0, r1, r2, r3}
   158a0:	and	r4, r4, #31
   158a4:	stmia	ip!, {r0, r1, r2, r3}
   158a8:	ldm	lr, {r0, r1, r2, r3}
   158ac:	stm	ip, {r0, r1, r2, r3}
   158b0:	mov	r2, r8
   158b4:	ldr	lr, [r6, r5, lsl #2]
   158b8:	mov	r1, r7
   158bc:	mov	r3, sp
   158c0:	lsr	ip, lr, r4
   158c4:	eor	ip, ip, #1
   158c8:	and	ip, ip, #1
   158cc:	mov	r0, #0
   158d0:	eor	r4, lr, ip, lsl r4
   158d4:	str	r4, [r6, r5, lsl #2]
   158d8:	bl	152e4 <dcngettext@plt+0x42f4>
   158dc:	add	sp, sp, #48	; 0x30
   158e0:	pop	{r4, r5, r6, r7, r8, pc}
   158e4:	muleq	r2, r0, r2
   158e8:	mov	r2, r1
   158ec:	mvn	r1, #0
   158f0:	b	15870 <dcngettext@plt+0x4880>
   158f4:	mov	r2, #58	; 0x3a
   158f8:	mvn	r1, #0
   158fc:	b	15870 <dcngettext@plt+0x4880>
   15900:	mov	r2, #58	; 0x3a
   15904:	b	15870 <dcngettext@plt+0x4880>
   15908:	push	{r4, r5, r6, r7, lr}
   1590c:	sub	sp, sp, #100	; 0x64
   15910:	mov	r6, r0
   15914:	mov	r0, sp
   15918:	mov	r7, r2
   1591c:	bl	13c80 <dcngettext@plt+0x2c90>
   15920:	mov	ip, sp
   15924:	add	lr, sp, #48	; 0x30
   15928:	ldm	ip!, {r0, r1, r2, r3}
   1592c:	stmia	lr!, {r0, r1, r2, r3}
   15930:	ldm	ip!, {r0, r1, r2, r3}
   15934:	ldr	r5, [sp, #60]	; 0x3c
   15938:	stmia	lr!, {r0, r1, r2, r3}
   1593c:	mvn	r4, r5
   15940:	ldm	ip, {r0, r1, r2, r3}
   15944:	and	ip, r4, #67108864	; 0x4000000
   15948:	eor	ip, ip, r5
   1594c:	str	ip, [sp, #60]	; 0x3c
   15950:	stm	lr, {r0, r1, r2, r3}
   15954:	mov	r1, r7
   15958:	mov	r0, r6
   1595c:	add	r3, sp, #48	; 0x30
   15960:	mvn	r2, #0
   15964:	bl	152e4 <dcngettext@plt+0x42f4>
   15968:	add	sp, sp, #100	; 0x64
   1596c:	pop	{r4, r5, r6, r7, pc}
   15970:	push	{r4, r5, r6, r7, r8, lr}
   15974:	mov	r5, r1
   15978:	ldr	lr, [pc, #100]	; 159e4 <dcngettext@plt+0x49f4>
   1597c:	mov	r4, r2
   15980:	mov	r7, r0
   15984:	mov	r8, r3
   15988:	ldm	lr!, {r0, r1, r2, r3}
   1598c:	sub	sp, sp, #48	; 0x30
   15990:	mov	ip, sp
   15994:	mov	r6, #10
   15998:	stmia	ip!, {r0, r1, r2, r3}
   1599c:	cmp	r4, #0
   159a0:	cmpne	r5, #0
   159a4:	ldm	lr!, {r0, r1, r2, r3}
   159a8:	str	r6, [sp]
   159ac:	stmia	ip!, {r0, r1, r2, r3}
   159b0:	ldm	lr, {r0, r1, r2, r3}
   159b4:	stm	ip, {r0, r1, r2, r3}
   159b8:	beq	159e0 <dcngettext@plt+0x49f0>
   159bc:	mov	r3, sp
   159c0:	mov	r1, r8
   159c4:	mov	r0, r7
   159c8:	ldr	r2, [sp, #72]	; 0x48
   159cc:	str	r5, [sp, #40]	; 0x28
   159d0:	str	r4, [sp, #44]	; 0x2c
   159d4:	bl	152e4 <dcngettext@plt+0x42f4>
   159d8:	add	sp, sp, #48	; 0x30
   159dc:	pop	{r4, r5, r6, r7, r8, pc}
   159e0:	bl	10fd8 <abort@plt>
   159e4:	muleq	r2, r0, r2
   159e8:	push	{lr}		; (str lr, [sp, #-4]!)
   159ec:	sub	sp, sp, #12
   159f0:	mvn	ip, #0
   159f4:	str	ip, [sp]
   159f8:	bl	15970 <dcngettext@plt+0x4980>
   159fc:	add	sp, sp, #12
   15a00:	pop	{pc}		; (ldr pc, [sp], #4)
   15a04:	push	{lr}		; (str lr, [sp, #-4]!)
   15a08:	sub	sp, sp, #12
   15a0c:	mvn	ip, #0
   15a10:	mov	r3, r2
   15a14:	str	ip, [sp]
   15a18:	mov	r2, r1
   15a1c:	mov	r1, r0
   15a20:	mov	r0, #0
   15a24:	bl	15970 <dcngettext@plt+0x4980>
   15a28:	add	sp, sp, #12
   15a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   15a30:	push	{lr}		; (str lr, [sp, #-4]!)
   15a34:	sub	sp, sp, #12
   15a38:	str	r3, [sp]
   15a3c:	mov	r3, r2
   15a40:	mov	r2, r1
   15a44:	mov	r1, r0
   15a48:	mov	r0, #0
   15a4c:	bl	15970 <dcngettext@plt+0x4980>
   15a50:	add	sp, sp, #12
   15a54:	pop	{pc}		; (ldr pc, [sp], #4)
   15a58:	ldr	r3, [pc]	; 15a60 <dcngettext@plt+0x4a70>
   15a5c:	b	152e4 <dcngettext@plt+0x42f4>
   15a60:	andeq	r9, r2, ip, lsl r1
   15a64:	mov	r2, r1
   15a68:	ldr	r3, [pc, #8]	; 15a78 <dcngettext@plt+0x4a88>
   15a6c:	mov	r1, r0
   15a70:	mov	r0, #0
   15a74:	b	152e4 <dcngettext@plt+0x42f4>
   15a78:	andeq	r9, r2, ip, lsl r1
   15a7c:	ldr	r3, [pc, #4]	; 15a88 <dcngettext@plt+0x4a98>
   15a80:	mvn	r2, #0
   15a84:	b	152e4 <dcngettext@plt+0x42f4>
   15a88:	andeq	r9, r2, ip, lsl r1
   15a8c:	mov	r1, r0
   15a90:	ldr	r3, [pc, #8]	; 15aa0 <dcngettext@plt+0x4ab0>
   15a94:	mvn	r2, #0
   15a98:	mov	r0, #0
   15a9c:	b	152e4 <dcngettext@plt+0x42f4>
   15aa0:	andeq	r9, r2, ip, lsl r1
   15aa4:	mov	r2, #3
   15aa8:	mov	r1, #0
   15aac:	b	166a4 <dcngettext@plt+0x56b4>
   15ab0:	push	{r4, r5, r6, lr}
   15ab4:	sub	sp, sp, #32
   15ab8:	cmp	r1, #0
   15abc:	mov	r4, r0
   15ac0:	ldr	r5, [sp, #48]	; 0x30
   15ac4:	ldr	r6, [sp, #52]	; 0x34
   15ac8:	beq	15de0 <dcngettext@plt+0x4df0>
   15acc:	stm	sp, {r2, r3}
   15ad0:	mov	r3, r1
   15ad4:	ldr	r2, [pc, #808]	; 15e04 <dcngettext@plt+0x4e14>
   15ad8:	mov	r1, #1
   15adc:	bl	10f3c <__fprintf_chk@plt>
   15ae0:	mov	r2, #5
   15ae4:	ldr	r1, [pc, #796]	; 15e08 <dcngettext@plt+0x4e18>
   15ae8:	mov	r0, #0
   15aec:	bl	10e04 <dcgettext@plt>
   15af0:	ldr	r3, [pc, #788]	; 15e0c <dcngettext@plt+0x4e1c>
   15af4:	ldr	r2, [pc, #788]	; 15e10 <dcngettext@plt+0x4e20>
   15af8:	str	r3, [sp]
   15afc:	mov	r1, #1
   15b00:	mov	r3, r0
   15b04:	mov	r0, r4
   15b08:	bl	10f3c <__fprintf_chk@plt>
   15b0c:	mov	r1, r4
   15b10:	mov	r0, #10
   15b14:	bl	10df8 <fputc_unlocked@plt>
   15b18:	mov	r2, #5
   15b1c:	ldr	r1, [pc, #752]	; 15e14 <dcngettext@plt+0x4e24>
   15b20:	mov	r0, #0
   15b24:	bl	10e04 <dcgettext@plt>
   15b28:	mov	r1, #1
   15b2c:	ldr	r3, [pc, #740]	; 15e18 <dcngettext@plt+0x4e28>
   15b30:	mov	r2, r0
   15b34:	mov	r0, r4
   15b38:	bl	10f3c <__fprintf_chk@plt>
   15b3c:	mov	r1, r4
   15b40:	mov	r0, #10
   15b44:	bl	10df8 <fputc_unlocked@plt>
   15b48:	cmp	r6, #9
   15b4c:	ldrls	pc, [pc, r6, lsl #2]
   15b50:	b	15df8 <dcngettext@plt+0x4e08>
   15b54:	ldrdeq	r5, [r1], -r8
   15b58:	andeq	r5, r1, r0, ror #23
   15b5c:	andeq	r5, r1, ip, lsl #24
   15b60:	andeq	r5, r1, r0, asr #24
   15b64:	andeq	r5, r1, ip, ror ip
   15b68:			; <UNDEFINED> instruction: 0x00015cb8
   15b6c:	strdeq	r5, [r1], -r4
   15b70:	andeq	r5, r1, r8, lsr sp
   15b74:	andeq	r5, r1, r8, lsl #27
   15b78:	andeq	r5, r1, ip, ror fp
   15b7c:	ldr	r1, [pc, #664]	; 15e1c <dcngettext@plt+0x4e2c>
   15b80:	mov	r2, #5
   15b84:	mov	r0, #0
   15b88:	bl	10e04 <dcgettext@plt>
   15b8c:	ldr	ip, [r5, #32]
   15b90:	ldr	r1, [r5, #28]
   15b94:	ldr	r2, [r5, #24]
   15b98:	ldr	r3, [r5]
   15b9c:	ldr	r6, [r5, #20]
   15ba0:	str	ip, [sp, #28]
   15ba4:	ldr	lr, [r5, #16]
   15ba8:	str	r1, [sp, #24]
   15bac:	ldr	ip, [r5, #12]
   15bb0:	str	r2, [sp, #20]
   15bb4:	ldr	r1, [r5, #8]
   15bb8:	ldr	r2, [r5, #4]
   15bbc:	str	r6, [sp, #16]
   15bc0:	stmib	sp, {r1, ip, lr}
   15bc4:	mov	r1, #1
   15bc8:	str	r2, [sp]
   15bcc:	mov	r2, r0
   15bd0:	mov	r0, r4
   15bd4:	bl	10f3c <__fprintf_chk@plt>
   15bd8:	add	sp, sp, #32
   15bdc:	pop	{r4, r5, r6, pc}
   15be0:	mov	r2, #5
   15be4:	ldr	r1, [pc, #564]	; 15e20 <dcngettext@plt+0x4e30>
   15be8:	mov	r0, #0
   15bec:	bl	10e04 <dcgettext@plt>
   15bf0:	ldr	r3, [r5]
   15bf4:	mov	r1, #1
   15bf8:	mov	r2, r0
   15bfc:	mov	r0, r4
   15c00:	add	sp, sp, #32
   15c04:	pop	{r4, r5, r6, lr}
   15c08:	b	10f3c <__fprintf_chk@plt>
   15c0c:	mov	r2, #5
   15c10:	ldr	r1, [pc, #524]	; 15e24 <dcngettext@plt+0x4e34>
   15c14:	mov	r0, #0
   15c18:	bl	10e04 <dcgettext@plt>
   15c1c:	ldr	r2, [r5, #4]
   15c20:	ldr	r3, [r5]
   15c24:	mov	r1, #1
   15c28:	str	r2, [sp, #48]	; 0x30
   15c2c:	mov	r2, r0
   15c30:	mov	r0, r4
   15c34:	add	sp, sp, #32
   15c38:	pop	{r4, r5, r6, lr}
   15c3c:	b	10f3c <__fprintf_chk@plt>
   15c40:	mov	r2, #5
   15c44:	ldr	r1, [pc, #476]	; 15e28 <dcngettext@plt+0x4e38>
   15c48:	mov	r0, #0
   15c4c:	bl	10e04 <dcgettext@plt>
   15c50:	ldr	r1, [r5, #8]
   15c54:	ldr	r2, [r5, #4]
   15c58:	ldr	r3, [r5]
   15c5c:	str	r1, [sp, #52]	; 0x34
   15c60:	str	r2, [sp, #48]	; 0x30
   15c64:	mov	r1, #1
   15c68:	mov	r2, r0
   15c6c:	mov	r0, r4
   15c70:	add	sp, sp, #32
   15c74:	pop	{r4, r5, r6, lr}
   15c78:	b	10f3c <__fprintf_chk@plt>
   15c7c:	mov	r2, #5
   15c80:	ldr	r1, [pc, #420]	; 15e2c <dcngettext@plt+0x4e3c>
   15c84:	mov	r0, #0
   15c88:	bl	10e04 <dcgettext@plt>
   15c8c:	ldr	r1, [r5, #8]
   15c90:	ldr	ip, [r5, #12]
   15c94:	ldr	r2, [r5, #4]
   15c98:	ldr	r3, [r5]
   15c9c:	stmib	sp, {r1, ip}
   15ca0:	str	r2, [sp]
   15ca4:	mov	r1, #1
   15ca8:	mov	r2, r0
   15cac:	mov	r0, r4
   15cb0:	bl	10f3c <__fprintf_chk@plt>
   15cb4:	b	15bd8 <dcngettext@plt+0x4be8>
   15cb8:	mov	r2, #5
   15cbc:	ldr	r1, [pc, #364]	; 15e30 <dcngettext@plt+0x4e40>
   15cc0:	mov	r0, #0
   15cc4:	bl	10e04 <dcgettext@plt>
   15cc8:	add	r1, r5, #8
   15ccc:	ldr	r2, [r5, #4]
   15cd0:	ldm	r1, {r1, ip, lr}
   15cd4:	ldr	r3, [r5]
   15cd8:	str	r2, [sp]
   15cdc:	stmib	sp, {r1, ip, lr}
   15ce0:	mov	r1, #1
   15ce4:	mov	r2, r0
   15ce8:	mov	r0, r4
   15cec:	bl	10f3c <__fprintf_chk@plt>
   15cf0:	b	15bd8 <dcngettext@plt+0x4be8>
   15cf4:	mov	r2, #5
   15cf8:	ldr	r1, [pc, #308]	; 15e34 <dcngettext@plt+0x4e44>
   15cfc:	mov	r0, #0
   15d00:	bl	10e04 <dcgettext@plt>
   15d04:	add	r1, r5, #8
   15d08:	ldr	r2, [r5, #4]
   15d0c:	ldm	r1, {r1, ip, lr}
   15d10:	ldr	r6, [r5, #20]
   15d14:	ldr	r3, [r5]
   15d18:	stmib	sp, {r1, ip, lr}
   15d1c:	mov	r1, #1
   15d20:	str	r2, [sp]
   15d24:	str	r6, [sp, #16]
   15d28:	mov	r2, r0
   15d2c:	mov	r0, r4
   15d30:	bl	10f3c <__fprintf_chk@plt>
   15d34:	b	15bd8 <dcngettext@plt+0x4be8>
   15d38:	mov	r2, #5
   15d3c:	ldr	r1, [pc, #244]	; 15e38 <dcngettext@plt+0x4e48>
   15d40:	mov	r0, #0
   15d44:	bl	10e04 <dcgettext@plt>
   15d48:	ldr	r2, [r5, #24]
   15d4c:	ldr	r3, [r5]
   15d50:	ldr	r6, [r5, #20]
   15d54:	ldr	lr, [r5, #16]
   15d58:	ldr	ip, [r5, #12]
   15d5c:	str	r2, [sp, #20]
   15d60:	ldr	r1, [r5, #8]
   15d64:	ldr	r2, [r5, #4]
   15d68:	str	r6, [sp, #16]
   15d6c:	stmib	sp, {r1, ip, lr}
   15d70:	mov	r1, #1
   15d74:	str	r2, [sp]
   15d78:	mov	r2, r0
   15d7c:	mov	r0, r4
   15d80:	bl	10f3c <__fprintf_chk@plt>
   15d84:	b	15bd8 <dcngettext@plt+0x4be8>
   15d88:	mov	r2, #5
   15d8c:	ldr	r1, [pc, #168]	; 15e3c <dcngettext@plt+0x4e4c>
   15d90:	mov	r0, #0
   15d94:	bl	10e04 <dcgettext@plt>
   15d98:	ldr	r1, [r5, #28]
   15d9c:	ldr	r2, [r5, #24]
   15da0:	ldr	r3, [r5]
   15da4:	ldr	r6, [r5, #20]
   15da8:	ldr	lr, [r5, #16]
   15dac:	str	r1, [sp, #24]
   15db0:	ldr	ip, [r5, #12]
   15db4:	str	r2, [sp, #20]
   15db8:	ldr	r1, [r5, #8]
   15dbc:	ldr	r2, [r5, #4]
   15dc0:	str	r6, [sp, #16]
   15dc4:	stmib	sp, {r1, ip, lr}
   15dc8:	mov	r1, #1
   15dcc:	str	r2, [sp]
   15dd0:	mov	r2, r0
   15dd4:	mov	r0, r4
   15dd8:	bl	10f3c <__fprintf_chk@plt>
   15ddc:	b	15bd8 <dcngettext@plt+0x4be8>
   15de0:	str	r3, [sp]
   15de4:	mov	r1, #1
   15de8:	mov	r3, r2
   15dec:	ldr	r2, [pc, #76]	; 15e40 <dcngettext@plt+0x4e50>
   15df0:	bl	10f3c <__fprintf_chk@plt>
   15df4:	b	15ae0 <dcngettext@plt+0x4af0>
   15df8:	mov	r2, #5
   15dfc:	ldr	r1, [pc, #64]	; 15e44 <dcngettext@plt+0x4e54>
   15e00:	b	15b84 <dcngettext@plt+0x4b94>
   15e04:	andeq	r7, r1, r4, asr #30
   15e08:	andeq	r7, r1, r8, asr pc
   15e0c:	andeq	r0, r0, r6, ror #15
   15e10:	andeq	r8, r1, r0, lsr r2
   15e14:	andeq	r7, r1, ip, asr pc
   15e18:	andeq	r8, r1, r8
   15e1c:	andeq	r8, r1, r8, lsr r1
   15e20:	andeq	r8, r1, ip, lsr #32
   15e24:	andeq	r8, r1, ip, lsr r0
   15e28:	andeq	r8, r1, r4, asr r0
   15e2c:	andeq	r8, r1, r0, ror r0
   15e30:	muleq	r1, r0, r0
   15e34:	strheq	r8, [r1], -r4
   15e38:	ldrdeq	r8, [r1], -ip
   15e3c:	andeq	r8, r1, r8, lsl #2
   15e40:	andeq	r7, r1, r0, asr pc
   15e44:	andeq	r8, r1, ip, ror #2
   15e48:	push	{r4, r5, lr}
   15e4c:	sub	sp, sp, #12
   15e50:	ldr	r5, [sp, #24]
   15e54:	ldr	ip, [r5]
   15e58:	cmp	ip, #0
   15e5c:	beq	15e78 <dcngettext@plt+0x4e88>
   15e60:	mov	lr, r5
   15e64:	mov	ip, #0
   15e68:	ldr	r4, [lr, #4]!
   15e6c:	add	ip, ip, #1
   15e70:	cmp	r4, #0
   15e74:	bne	15e68 <dcngettext@plt+0x4e78>
   15e78:	stm	sp, {r5, ip}
   15e7c:	bl	15ab0 <dcngettext@plt+0x4ac0>
   15e80:	add	sp, sp, #12
   15e84:	pop	{r4, r5, pc}
   15e88:	push	{r4, r5, lr}
   15e8c:	sub	sp, sp, #52	; 0x34
   15e90:	add	r5, sp, #4
   15e94:	ldr	r4, [sp, #64]	; 0x40
   15e98:	mov	ip, #0
   15e9c:	sub	r4, r4, #4
   15ea0:	ldr	lr, [r4, #4]!
   15ea4:	cmp	lr, #0
   15ea8:	str	lr, [r5, #4]!
   15eac:	beq	15ebc <dcngettext@plt+0x4ecc>
   15eb0:	add	ip, ip, #1
   15eb4:	cmp	ip, #10
   15eb8:	bne	15ea0 <dcngettext@plt+0x4eb0>
   15ebc:	add	lr, sp, #8
   15ec0:	str	ip, [sp, #4]
   15ec4:	str	lr, [sp]
   15ec8:	bl	15ab0 <dcngettext@plt+0x4ac0>
   15ecc:	add	sp, sp, #52	; 0x34
   15ed0:	pop	{r4, r5, pc}
   15ed4:	push	{r3}		; (str r3, [sp, #-4]!)
   15ed8:	push	{r4, lr}
   15edc:	sub	sp, sp, #60	; 0x3c
   15ee0:	add	lr, sp, #56	; 0x38
   15ee4:	add	r3, sp, #72	; 0x48
   15ee8:	str	r3, [lr, #-44]!	; 0xffffffd4
   15eec:	add	r4, sp, #68	; 0x44
   15ef0:	mov	r3, #0
   15ef4:	ldr	ip, [r4, #4]!
   15ef8:	cmp	ip, #0
   15efc:	str	ip, [lr, #4]!
   15f00:	beq	15f10 <dcngettext@plt+0x4f20>
   15f04:	add	r3, r3, #1
   15f08:	cmp	r3, #10
   15f0c:	bne	15ef4 <dcngettext@plt+0x4f04>
   15f10:	add	ip, sp, #16
   15f14:	str	r3, [sp, #4]
   15f18:	str	ip, [sp]
   15f1c:	ldr	r3, [sp, #68]	; 0x44
   15f20:	bl	15ab0 <dcngettext@plt+0x4ac0>
   15f24:	add	sp, sp, #60	; 0x3c
   15f28:	pop	{r4, lr}
   15f2c:	add	sp, sp, #4
   15f30:	bx	lr
   15f34:	ldr	r3, [pc, #116]	; 15fb0 <dcngettext@plt+0x4fc0>
   15f38:	push	{r4, lr}
   15f3c:	mov	r0, #10
   15f40:	ldr	r1, [r3]
   15f44:	bl	10df8 <fputc_unlocked@plt>
   15f48:	mov	r2, #5
   15f4c:	ldr	r1, [pc, #96]	; 15fb4 <dcngettext@plt+0x4fc4>
   15f50:	mov	r0, #0
   15f54:	bl	10e04 <dcgettext@plt>
   15f58:	ldr	r2, [pc, #88]	; 15fb8 <dcngettext@plt+0x4fc8>
   15f5c:	mov	r1, r0
   15f60:	mov	r0, #1
   15f64:	bl	10f24 <__printf_chk@plt>
   15f68:	mov	r2, #5
   15f6c:	ldr	r1, [pc, #72]	; 15fbc <dcngettext@plt+0x4fcc>
   15f70:	mov	r0, #0
   15f74:	bl	10e04 <dcgettext@plt>
   15f78:	ldr	r3, [pc, #64]	; 15fc0 <dcngettext@plt+0x4fd0>
   15f7c:	ldr	r2, [pc, #64]	; 15fc4 <dcngettext@plt+0x4fd4>
   15f80:	mov	r1, r0
   15f84:	mov	r0, #1
   15f88:	bl	10f24 <__printf_chk@plt>
   15f8c:	mov	r2, #5
   15f90:	ldr	r1, [pc, #48]	; 15fc8 <dcngettext@plt+0x4fd8>
   15f94:	mov	r0, #0
   15f98:	bl	10e04 <dcgettext@plt>
   15f9c:	ldr	r2, [pc, #40]	; 15fcc <dcngettext@plt+0x4fdc>
   15fa0:	pop	{r4, lr}
   15fa4:	mov	r1, r0
   15fa8:	mov	r0, #1
   15fac:	b	10f24 <__printf_chk@plt>
   15fb0:	andeq	r9, r2, ip, ror #2
   15fb4:	andeq	r8, r1, r8, lsr #3
   15fb8:			; <UNDEFINED> instruction: 0x000181bc
   15fbc:	ldrdeq	r8, [r1], -r4
   15fc0:	muleq	r1, r4, r7
   15fc4:			; <UNDEFINED> instruction: 0x000177bc
   15fc8:	andeq	r8, r1, r8, ror #3
   15fcc:	andeq	r8, r1, r0, lsl r2
   15fd0:	push	{r4, lr}
   15fd4:	bl	165a0 <dcngettext@plt+0x55b0>
   15fd8:	cmp	r0, #0
   15fdc:	popne	{r4, pc}
   15fe0:	bl	16518 <dcngettext@plt+0x5528>
   15fe4:	push	{r4, lr}
   15fe8:	bl	165a0 <dcngettext@plt+0x55b0>
   15fec:	cmp	r0, #0
   15ff0:	popne	{r4, pc}
   15ff4:	bl	16518 <dcngettext@plt+0x5528>
   15ff8:	push	{r4, lr}
   15ffc:	bl	165a0 <dcngettext@plt+0x55b0>
   16000:	cmp	r0, #0
   16004:	popne	{r4, pc}
   16008:	bl	16518 <dcngettext@plt+0x5528>
   1600c:	push	{r4, r5, r6, lr}
   16010:	mov	r5, r0
   16014:	mov	r4, r1
   16018:	bl	165cc <dcngettext@plt+0x55dc>
   1601c:	cmp	r0, #0
   16020:	popne	{r4, r5, r6, pc}
   16024:	adds	r4, r4, #0
   16028:	movne	r4, #1
   1602c:	cmp	r5, #0
   16030:	orreq	r4, r4, #1
   16034:	cmp	r4, #0
   16038:	popeq	{r4, r5, r6, pc}
   1603c:	bl	16518 <dcngettext@plt+0x5528>
   16040:	push	{r4, lr}
   16044:	cmp	r1, #0
   16048:	orreq	r1, r1, #1
   1604c:	bl	165cc <dcngettext@plt+0x55dc>
   16050:	cmp	r0, #0
   16054:	popne	{r4, pc}
   16058:	bl	16518 <dcngettext@plt+0x5528>
   1605c:	push	{r4, r5, r6, lr}
   16060:	mov	r6, r0
   16064:	mov	r5, r1
   16068:	mov	r4, r2
   1606c:	bl	16900 <dcngettext@plt+0x5910>
   16070:	cmp	r0, #0
   16074:	popne	{r4, r5, r6, pc}
   16078:	cmp	r6, #0
   1607c:	beq	1608c <dcngettext@plt+0x509c>
   16080:	cmp	r5, #0
   16084:	cmpne	r4, #0
   16088:	popeq	{r4, r5, r6, pc}
   1608c:	bl	16518 <dcngettext@plt+0x5528>
   16090:	b	1605c <dcngettext@plt+0x506c>
   16094:	cmp	r2, #0
   16098:	cmpne	r1, #0
   1609c:	moveq	r2, #1
   160a0:	moveq	r1, r2
   160a4:	push	{r4, lr}
   160a8:	bl	16900 <dcngettext@plt+0x5910>
   160ac:	cmp	r0, #0
   160b0:	popne	{r4, pc}
   160b4:	bl	16518 <dcngettext@plt+0x5528>
   160b8:	mov	r2, r1
   160bc:	mov	r1, r0
   160c0:	mov	r0, #0
   160c4:	b	1605c <dcngettext@plt+0x506c>
   160c8:	mov	r2, r1
   160cc:	mov	r1, r0
   160d0:	mov	r0, #0
   160d4:	b	16094 <dcngettext@plt+0x50a4>
   160d8:	push	{r4, r5, r6, lr}
   160dc:	subs	r6, r0, #0
   160e0:	sub	sp, sp, #8
   160e4:	mov	r5, r1
   160e8:	ldr	r4, [r1]
   160ec:	beq	16128 <dcngettext@plt+0x5138>
   160f0:	lsr	r1, r4, #1
   160f4:	add	r3, r1, #1
   160f8:	mvn	r3, r3
   160fc:	cmp	r4, r3
   16100:	bhi	16124 <dcngettext@plt+0x5134>
   16104:	add	r4, r4, #1
   16108:	add	r4, r4, r1
   1610c:	mov	r0, r6
   16110:	mov	r1, r4
   16114:	bl	1605c <dcngettext@plt+0x506c>
   16118:	str	r4, [r5]
   1611c:	add	sp, sp, #8
   16120:	pop	{r4, r5, r6, pc}
   16124:	bl	16518 <dcngettext@plt+0x5528>
   16128:	cmp	r4, #0
   1612c:	bne	1610c <dcngettext@plt+0x511c>
   16130:	mov	r1, r2
   16134:	mov	r0, #64	; 0x40
   16138:	str	r2, [sp, #4]
   1613c:	bl	16a40 <dcngettext@plt+0x5a50>
   16140:	ldr	r2, [sp, #4]
   16144:	cmp	r0, #0
   16148:	movne	r4, r0
   1614c:	addeq	r4, r0, #1
   16150:	b	1610c <dcngettext@plt+0x511c>
   16154:	mov	r2, #1
   16158:	b	160d8 <dcngettext@plt+0x50e8>
   1615c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16160:	sub	sp, sp, #12
   16164:	ldr	r6, [r1]
   16168:	mov	sl, r1
   1616c:	mov	r9, r0
   16170:	asrs	r4, r6, #1
   16174:	mov	r5, r2
   16178:	mov	fp, r3
   1617c:	ldr	r7, [sp, #48]	; 0x30
   16180:	bmi	162ec <dcngettext@plt+0x52fc>
   16184:	mvn	r3, #-2147483648	; 0x80000000
   16188:	sub	r3, r3, r4
   1618c:	cmp	r6, r3
   16190:	movle	r3, #0
   16194:	movgt	r3, #1
   16198:	mvn	r8, fp
   1619c:	cmp	r3, #0
   161a0:	addeq	r4, r4, r6
   161a4:	mvnne	r4, #-2147483648	; 0x80000000
   161a8:	lsr	r8, r8, #31
   161ac:	cmp	fp, r4
   161b0:	movge	r3, #0
   161b4:	andlt	r3, r8, #1
   161b8:	cmp	r3, #0
   161bc:	beq	162a4 <dcngettext@plt+0x52b4>
   161c0:	cmp	r7, #0
   161c4:	blt	16374 <dcngettext@plt+0x5384>
   161c8:	bne	1636c <dcngettext@plt+0x537c>
   161cc:	mov	r2, #64	; 0x40
   161d0:	mov	r1, r7
   161d4:	mov	r0, r2
   161d8:	str	r2, [sp, #4]
   161dc:	bl	16c4c <dcngettext@plt+0x5c5c>
   161e0:	ldr	r2, [sp, #4]
   161e4:	mov	r1, r7
   161e8:	mov	r4, r0
   161ec:	mov	r0, r2
   161f0:	bl	16e6c <dcngettext@plt+0x5e7c>
   161f4:	ldr	r2, [sp, #4]
   161f8:	sub	r1, r2, r1
   161fc:	cmp	r9, #0
   16200:	sub	r3, r4, r6
   16204:	streq	r9, [sl]
   16208:	cmp	r3, r5
   1620c:	bge	16290 <dcngettext@plt+0x52a0>
   16210:	cmp	r5, #0
   16214:	blt	16300 <dcngettext@plt+0x5310>
   16218:	cmp	r6, #0
   1621c:	blt	1623c <dcngettext@plt+0x524c>
   16220:	mvn	r3, #-2147483648	; 0x80000000
   16224:	sub	r3, r3, r5
   16228:	cmp	r6, r3
   1622c:	movle	r3, #0
   16230:	movgt	r3, #1
   16234:	cmp	r3, #0
   16238:	bne	163fc <dcngettext@plt+0x540c>
   1623c:	add	r5, r6, r5
   16240:	cmp	fp, r5
   16244:	movge	r8, #0
   16248:	andlt	r8, r8, #1
   1624c:	cmp	r8, #0
   16250:	mov	r4, r5
   16254:	bne	163fc <dcngettext@plt+0x540c>
   16258:	cmp	r7, #0
   1625c:	blt	16314 <dcngettext@plt+0x5324>
   16260:	beq	1628c <dcngettext@plt+0x529c>
   16264:	cmp	r5, #0
   16268:	blt	163bc <dcngettext@plt+0x53cc>
   1626c:	mov	r1, r7
   16270:	mvn	r0, #-2147483648	; 0x80000000
   16274:	bl	16c4c <dcngettext@plt+0x5c5c>
   16278:	cmp	r5, r0
   1627c:	movle	r0, #0
   16280:	movgt	r0, #1
   16284:	cmp	r0, #0
   16288:	bne	163fc <dcngettext@plt+0x540c>
   1628c:	mul	r1, r5, r7
   16290:	mov	r0, r9
   16294:	bl	1600c <dcngettext@plt+0x501c>
   16298:	str	r4, [sl]
   1629c:	add	sp, sp, #12
   162a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162a4:	cmp	r7, #0
   162a8:	blt	16340 <dcngettext@plt+0x5350>
   162ac:	beq	161cc <dcngettext@plt+0x51dc>
   162b0:	cmp	r4, #0
   162b4:	blt	1637c <dcngettext@plt+0x538c>
   162b8:	mov	r1, r7
   162bc:	mvn	r0, #-2147483648	; 0x80000000
   162c0:	bl	16c4c <dcngettext@plt+0x5c5c>
   162c4:	cmp	r0, r4
   162c8:	movge	r0, #0
   162cc:	movlt	r0, #1
   162d0:	cmp	r0, #0
   162d4:	mvnne	r2, #-2147483648	; 0x80000000
   162d8:	bne	161d0 <dcngettext@plt+0x51e0>
   162dc:	mul	r1, r7, r4
   162e0:	cmp	r1, #63	; 0x3f
   162e4:	bgt	161fc <dcngettext@plt+0x520c>
   162e8:	b	161cc <dcngettext@plt+0x51dc>
   162ec:	rsb	r3, r4, #-2147483648	; 0x80000000
   162f0:	cmp	r6, r3
   162f4:	movge	r3, #0
   162f8:	movlt	r3, #1
   162fc:	b	16198 <dcngettext@plt+0x51a8>
   16300:	rsb	r3, r5, #-2147483648	; 0x80000000
   16304:	cmp	r6, r3
   16308:	movge	r3, #0
   1630c:	movlt	r3, #1
   16310:	b	16234 <dcngettext@plt+0x5244>
   16314:	cmp	r5, #0
   16318:	blt	163a0 <dcngettext@plt+0x53b0>
   1631c:	cmn	r7, #1
   16320:	beq	1628c <dcngettext@plt+0x529c>
   16324:	mov	r1, r7
   16328:	mov	r0, #-2147483648	; 0x80000000
   1632c:	bl	16c4c <dcngettext@plt+0x5c5c>
   16330:	cmp	r5, r0
   16334:	movle	r0, #0
   16338:	movgt	r0, #1
   1633c:	b	16284 <dcngettext@plt+0x5294>
   16340:	cmp	r4, #0
   16344:	blt	163e0 <dcngettext@plt+0x53f0>
   16348:	cmn	r7, #1
   1634c:	beq	162dc <dcngettext@plt+0x52ec>
   16350:	mov	r1, r7
   16354:	mov	r0, #-2147483648	; 0x80000000
   16358:	bl	16c4c <dcngettext@plt+0x5c5c>
   1635c:	cmp	r0, r4
   16360:	movge	r0, #0
   16364:	movlt	r0, #1
   16368:	b	162d0 <dcngettext@plt+0x52e0>
   1636c:	mov	r4, fp
   16370:	b	162b8 <dcngettext@plt+0x52c8>
   16374:	mov	r4, fp
   16378:	b	16348 <dcngettext@plt+0x5358>
   1637c:	cmn	r4, #1
   16380:	beq	162dc <dcngettext@plt+0x52ec>
   16384:	mov	r1, r4
   16388:	mov	r0, #-2147483648	; 0x80000000
   1638c:	bl	16c4c <dcngettext@plt+0x5c5c>
   16390:	cmp	r7, r0
   16394:	movle	r0, #0
   16398:	movgt	r0, #1
   1639c:	b	162d0 <dcngettext@plt+0x52e0>
   163a0:	mov	r1, r7
   163a4:	mvn	r0, #-2147483648	; 0x80000000
   163a8:	bl	16c4c <dcngettext@plt+0x5c5c>
   163ac:	cmp	r5, r0
   163b0:	movge	r0, #0
   163b4:	movlt	r0, #1
   163b8:	b	16284 <dcngettext@plt+0x5294>
   163bc:	cmn	r5, #1
   163c0:	beq	1628c <dcngettext@plt+0x529c>
   163c4:	mov	r1, r5
   163c8:	mov	r0, #-2147483648	; 0x80000000
   163cc:	bl	16c4c <dcngettext@plt+0x5c5c>
   163d0:	cmp	r7, r0
   163d4:	movle	r0, #0
   163d8:	movgt	r0, #1
   163dc:	b	16284 <dcngettext@plt+0x5294>
   163e0:	mov	r1, r7
   163e4:	mvn	r0, #-2147483648	; 0x80000000
   163e8:	bl	16c4c <dcngettext@plt+0x5c5c>
   163ec:	cmp	r0, r4
   163f0:	movle	r0, #0
   163f4:	movgt	r0, #1
   163f8:	b	162d0 <dcngettext@plt+0x52e0>
   163fc:	bl	16518 <dcngettext@plt+0x5528>
   16400:	push	{r4, lr}
   16404:	mov	r1, #1
   16408:	bl	16558 <dcngettext@plt+0x5568>
   1640c:	cmp	r0, #0
   16410:	popne	{r4, pc}
   16414:	bl	16518 <dcngettext@plt+0x5528>
   16418:	push	{r4, lr}
   1641c:	mov	r1, #1
   16420:	bl	16558 <dcngettext@plt+0x5568>
   16424:	cmp	r0, #0
   16428:	popne	{r4, pc}
   1642c:	bl	16518 <dcngettext@plt+0x5528>
   16430:	push	{r4, lr}
   16434:	bl	16558 <dcngettext@plt+0x5568>
   16438:	cmp	r0, #0
   1643c:	popne	{r4, pc}
   16440:	bl	16518 <dcngettext@plt+0x5528>
   16444:	push	{r4, lr}
   16448:	bl	16558 <dcngettext@plt+0x5568>
   1644c:	cmp	r0, #0
   16450:	popne	{r4, pc}
   16454:	bl	16518 <dcngettext@plt+0x5528>
   16458:	push	{r4, r5, r6, lr}
   1645c:	mov	r6, r0
   16460:	mov	r0, r1
   16464:	mov	r4, r1
   16468:	bl	165a0 <dcngettext@plt+0x55b0>
   1646c:	subs	r5, r0, #0
   16470:	beq	16488 <dcngettext@plt+0x5498>
   16474:	mov	r2, r4
   16478:	mov	r1, r6
   1647c:	bl	10dc8 <memcpy@plt>
   16480:	mov	r0, r5
   16484:	pop	{r4, r5, r6, pc}
   16488:	bl	16518 <dcngettext@plt+0x5528>
   1648c:	push	{r4, r5, r6, lr}
   16490:	mov	r6, r0
   16494:	mov	r0, r1
   16498:	mov	r4, r1
   1649c:	bl	165a0 <dcngettext@plt+0x55b0>
   164a0:	subs	r5, r0, #0
   164a4:	beq	164bc <dcngettext@plt+0x54cc>
   164a8:	mov	r2, r4
   164ac:	mov	r1, r6
   164b0:	bl	10dc8 <memcpy@plt>
   164b4:	mov	r0, r5
   164b8:	pop	{r4, r5, r6, pc}
   164bc:	bl	16518 <dcngettext@plt+0x5528>
   164c0:	push	{r4, r5, r6, lr}
   164c4:	mov	r6, r0
   164c8:	add	r0, r1, #1
   164cc:	mov	r4, r1
   164d0:	bl	165a0 <dcngettext@plt+0x55b0>
   164d4:	subs	r5, r0, #0
   164d8:	beq	164f8 <dcngettext@plt+0x5508>
   164dc:	mov	r3, #0
   164e0:	mov	r1, r6
   164e4:	strb	r3, [r5, r4]
   164e8:	mov	r2, r4
   164ec:	bl	10dc8 <memcpy@plt>
   164f0:	mov	r0, r5
   164f4:	pop	{r4, r5, r6, pc}
   164f8:	bl	16518 <dcngettext@plt+0x5528>
   164fc:	push	{r4, lr}
   16500:	mov	r4, r0
   16504:	bl	10edc <strlen@plt>
   16508:	add	r1, r0, #1
   1650c:	mov	r0, r4
   16510:	pop	{r4, lr}
   16514:	b	16458 <dcngettext@plt+0x5468>
   16518:	ldr	r3, [pc, #44]	; 1654c <dcngettext@plt+0x555c>
   1651c:	push	{r4, lr}
   16520:	mov	r2, #5
   16524:	ldr	r1, [pc, #36]	; 16550 <dcngettext@plt+0x5560>
   16528:	mov	r0, #0
   1652c:	ldr	r4, [r3]
   16530:	bl	10e04 <dcgettext@plt>
   16534:	ldr	r2, [pc, #24]	; 16554 <dcngettext@plt+0x5564>
   16538:	mov	r1, #0
   1653c:	mov	r3, r0
   16540:	mov	r0, r4
   16544:	bl	10e70 <error@plt>
   16548:	bl	10fd8 <abort@plt>
   1654c:	andeq	r9, r2, r8, lsl #2
   16550:	andeq	r8, r1, r0, ror #4
   16554:	andeq	r7, r1, r4, ror #27
   16558:	cmp	r1, #0
   1655c:	cmpne	r0, #0
   16560:	moveq	r1, #1
   16564:	moveq	r0, r1
   16568:	umull	r2, r3, r0, r1
   1656c:	adds	r3, r3, #0
   16570:	movne	r3, #1
   16574:	cmp	r2, #0
   16578:	blt	16588 <dcngettext@plt+0x5598>
   1657c:	cmp	r3, #0
   16580:	bne	16588 <dcngettext@plt+0x5598>
   16584:	b	10d5c <calloc@plt>
   16588:	push	{r4, lr}
   1658c:	bl	10ef4 <__errno_location@plt>
   16590:	mov	r3, #12
   16594:	str	r3, [r0]
   16598:	mov	r0, #0
   1659c:	pop	{r4, pc}
   165a0:	cmp	r0, #0
   165a4:	moveq	r0, #1
   165a8:	cmp	r0, #0
   165ac:	blt	165b4 <dcngettext@plt+0x55c4>
   165b0:	b	10e7c <malloc@plt>
   165b4:	push	{r4, lr}
   165b8:	bl	10ef4 <__errno_location@plt>
   165bc:	mov	r3, #12
   165c0:	str	r3, [r0]
   165c4:	mov	r0, #0
   165c8:	pop	{r4, pc}
   165cc:	cmp	r0, #0
   165d0:	beq	165f4 <dcngettext@plt+0x5604>
   165d4:	cmp	r1, #0
   165d8:	push	{lr}		; (str lr, [sp, #-4]!)
   165dc:	sub	sp, sp, #12
   165e0:	beq	165fc <dcngettext@plt+0x560c>
   165e4:	blt	16614 <dcngettext@plt+0x5624>
   165e8:	add	sp, sp, #12
   165ec:	pop	{lr}		; (ldr lr, [sp], #4)
   165f0:	b	10e10 <realloc@plt>
   165f4:	mov	r0, r1
   165f8:	b	165a0 <dcngettext@plt+0x55b0>
   165fc:	str	r1, [sp, #4]
   16600:	bl	13ad4 <dcngettext@plt+0x2ae4>
   16604:	ldr	r3, [sp, #4]
   16608:	mov	r0, r3
   1660c:	add	sp, sp, #12
   16610:	pop	{pc}		; (ldr pc, [sp], #4)
   16614:	bl	10ef4 <__errno_location@plt>
   16618:	mov	r2, #12
   1661c:	mov	r3, #0
   16620:	str	r2, [r0]
   16624:	b	16608 <dcngettext@plt+0x5618>
   16628:	push	{r4, r5, r6, lr}
   1662c:	mov	r4, r0
   16630:	bl	10e58 <__fpending@plt>
   16634:	ldr	r5, [r4]
   16638:	and	r5, r5, #32
   1663c:	mov	r6, r0
   16640:	mov	r0, r4
   16644:	bl	1393c <dcngettext@plt+0x294c>
   16648:	cmp	r5, #0
   1664c:	mov	r4, r0
   16650:	bne	16670 <dcngettext@plt+0x5680>
   16654:	cmp	r0, #0
   16658:	beq	16668 <dcngettext@plt+0x5678>
   1665c:	cmp	r6, #0
   16660:	beq	1668c <dcngettext@plt+0x569c>
   16664:	mvn	r4, #0
   16668:	mov	r0, r4
   1666c:	pop	{r4, r5, r6, pc}
   16670:	cmp	r0, #0
   16674:	bne	16664 <dcngettext@plt+0x5674>
   16678:	bl	10ef4 <__errno_location@plt>
   1667c:	str	r4, [r0]
   16680:	mvn	r4, #0
   16684:	mov	r0, r4
   16688:	pop	{r4, r5, r6, pc}
   1668c:	bl	10ef4 <__errno_location@plt>
   16690:	ldr	r4, [r0]
   16694:	subs	r4, r4, #9
   16698:	mvnne	r4, #0
   1669c:	mov	r0, r4
   166a0:	pop	{r4, r5, r6, pc}
   166a4:	push	{r1, r2, r3}
   166a8:	push	{r4, r5, r6, r7, lr}
   166ac:	sub	sp, sp, #8
   166b0:	add	r3, sp, #32
   166b4:	ldr	r1, [sp, #28]
   166b8:	str	r3, [sp, #4]
   166bc:	cmp	r1, #0
   166c0:	beq	16758 <dcngettext@plt+0x5768>
   166c4:	ldr	r2, [pc, #412]	; 16868 <dcngettext@plt+0x5878>
   166c8:	mov	r5, r0
   166cc:	cmp	r1, r2
   166d0:	bne	1671c <dcngettext@plt+0x572c>
   166d4:	ldr	r6, [pc, #400]	; 1686c <dcngettext@plt+0x587c>
   166d8:	ldr	r7, [r3]
   166dc:	add	r2, sp, #36	; 0x24
   166e0:	ldr	r3, [r6]
   166e4:	str	r2, [sp, #4]
   166e8:	cmp	r3, #0
   166ec:	mov	r2, r7
   166f0:	blt	1681c <dcngettext@plt+0x582c>
   166f4:	bl	10f60 <fcntl64@plt>
   166f8:	subs	r4, r0, #0
   166fc:	blt	167a0 <dcngettext@plt+0x57b0>
   16700:	mov	r3, #1
   16704:	str	r3, [r6]
   16708:	mov	r0, r4
   1670c:	add	sp, sp, #8
   16710:	pop	{r4, r5, r6, r7, lr}
   16714:	add	sp, sp, #12
   16718:	bx	lr
   1671c:	cmp	r1, #11
   16720:	beq	16748 <dcngettext@plt+0x5758>
   16724:	bgt	16768 <dcngettext@plt+0x5778>
   16728:	cmp	r1, #3
   1672c:	beq	16748 <dcngettext@plt+0x5758>
   16730:	ble	1685c <dcngettext@plt+0x586c>
   16734:	cmp	r1, #8
   16738:	beq	16788 <dcngettext@plt+0x5798>
   1673c:	ble	16788 <dcngettext@plt+0x5798>
   16740:	cmp	r1, #9
   16744:	bne	16788 <dcngettext@plt+0x5798>
   16748:	mov	r0, r5
   1674c:	bl	10f60 <fcntl64@plt>
   16750:	mov	r4, r0
   16754:	b	16708 <dcngettext@plt+0x5718>
   16758:	ldr	r2, [sp, #32]
   1675c:	bl	10f60 <fcntl64@plt>
   16760:	mov	r4, r0
   16764:	b	16708 <dcngettext@plt+0x5718>
   16768:	ldr	r3, [pc, #256]	; 16870 <dcngettext@plt+0x5880>
   1676c:	cmp	r1, r3
   16770:	bgt	1683c <dcngettext@plt+0x584c>
   16774:	cmp	r1, r2
   16778:	bge	16788 <dcngettext@plt+0x5798>
   1677c:	sub	r3, r3, #6
   16780:	cmp	r1, r3
   16784:	beq	16748 <dcngettext@plt+0x5758>
   16788:	ldr	r3, [sp, #4]
   1678c:	mov	r0, r5
   16790:	ldr	r2, [r3]
   16794:	bl	10f60 <fcntl64@plt>
   16798:	mov	r4, r0
   1679c:	b	16708 <dcngettext@plt+0x5718>
   167a0:	bl	10ef4 <__errno_location@plt>
   167a4:	ldr	r3, [r0]
   167a8:	cmp	r3, #22
   167ac:	bne	16700 <dcngettext@plt+0x5710>
   167b0:	mov	r2, r7
   167b4:	mov	r0, r5
   167b8:	mov	r1, #0
   167bc:	bl	10f60 <fcntl64@plt>
   167c0:	subs	r4, r0, #0
   167c4:	blt	16708 <dcngettext@plt+0x5718>
   167c8:	mvn	r3, #0
   167cc:	str	r3, [r6]
   167d0:	mov	r1, #1
   167d4:	mov	r0, r4
   167d8:	bl	10f60 <fcntl64@plt>
   167dc:	subs	r2, r0, #0
   167e0:	blt	167fc <dcngettext@plt+0x580c>
   167e4:	orr	r2, r2, #1
   167e8:	mov	r1, #2
   167ec:	mov	r0, r4
   167f0:	bl	10f60 <fcntl64@plt>
   167f4:	cmn	r0, #1
   167f8:	bne	16708 <dcngettext@plt+0x5718>
   167fc:	bl	10ef4 <__errno_location@plt>
   16800:	mov	r5, r0
   16804:	mov	r0, r4
   16808:	ldr	r6, [r5]
   1680c:	mvn	r4, #0
   16810:	bl	10fe4 <close@plt>
   16814:	str	r6, [r5]
   16818:	b	16708 <dcngettext@plt+0x5718>
   1681c:	mov	r1, #0
   16820:	bl	10f60 <fcntl64@plt>
   16824:	subs	r4, r0, #0
   16828:	blt	16708 <dcngettext@plt+0x5718>
   1682c:	ldr	r3, [r6]
   16830:	cmn	r3, #1
   16834:	beq	167d0 <dcngettext@plt+0x57e0>
   16838:	b	16708 <dcngettext@plt+0x5718>
   1683c:	ldr	r3, [pc, #48]	; 16874 <dcngettext@plt+0x5884>
   16840:	cmp	r1, r3
   16844:	beq	16788 <dcngettext@plt+0x5798>
   16848:	blt	16748 <dcngettext@plt+0x5758>
   1684c:	add	r3, r3, #1
   16850:	cmp	r1, r3
   16854:	bne	16788 <dcngettext@plt+0x5798>
   16858:	b	16748 <dcngettext@plt+0x5758>
   1685c:	cmp	r1, #1
   16860:	bne	16788 <dcngettext@plt+0x5798>
   16864:	b	16748 <dcngettext@plt+0x5758>
   16868:	andeq	r0, r0, r6, lsl #8
   1686c:	andeq	r9, r2, r0, asr #5
   16870:	andeq	r0, r0, r7, lsl #8
   16874:	andeq	r0, r0, r9, lsl #8
   16878:	push	{r4, lr}
   1687c:	mov	r0, #14
   16880:	bl	10f90 <nl_langinfo@plt>
   16884:	cmp	r0, #0
   16888:	beq	168a0 <dcngettext@plt+0x58b0>
   1688c:	ldrb	r2, [r0]
   16890:	ldr	r3, [pc, #16]	; 168a8 <dcngettext@plt+0x58b8>
   16894:	cmp	r2, #0
   16898:	moveq	r0, r3
   1689c:	pop	{r4, pc}
   168a0:	ldr	r0, [pc]	; 168a8 <dcngettext@plt+0x58b8>
   168a4:	pop	{r4, pc}
   168a8:	andeq	r8, r1, r4, ror r2
   168ac:	push	{r4, r5, r6, r7, lr}
   168b0:	subs	r6, r0, #0
   168b4:	sub	sp, sp, #12
   168b8:	addeq	r6, sp, #4
   168bc:	mov	r0, r6
   168c0:	mov	r5, r2
   168c4:	mov	r7, r1
   168c8:	bl	10e64 <mbrtowc@plt>
   168cc:	cmp	r5, #0
   168d0:	cmnne	r0, #3
   168d4:	mov	r4, r0
   168d8:	bls	168f4 <dcngettext@plt+0x5904>
   168dc:	mov	r0, #0
   168e0:	bl	1694c <dcngettext@plt+0x595c>
   168e4:	cmp	r0, #0
   168e8:	moveq	r4, #1
   168ec:	ldrbeq	r3, [r7]
   168f0:	streq	r3, [r6]
   168f4:	mov	r0, r4
   168f8:	add	sp, sp, #12
   168fc:	pop	{r4, r5, r6, r7, pc}
   16900:	push	{r4, r5, r6, lr}
   16904:	subs	r4, r2, #0
   16908:	mov	r6, r0
   1690c:	mov	r5, r1
   16910:	beq	1693c <dcngettext@plt+0x594c>
   16914:	mov	r1, r4
   16918:	mvn	r0, #0
   1691c:	bl	16a40 <dcngettext@plt+0x5a50>
   16920:	cmp	r0, r5
   16924:	bcs	1693c <dcngettext@plt+0x594c>
   16928:	bl	10ef4 <__errno_location@plt>
   1692c:	mov	r3, #12
   16930:	str	r3, [r0]
   16934:	mov	r0, #0
   16938:	pop	{r4, r5, r6, pc}
   1693c:	mul	r1, r5, r4
   16940:	mov	r0, r6
   16944:	pop	{r4, r5, r6, lr}
   16948:	b	165cc <dcngettext@plt+0x55dc>
   1694c:	push	{lr}		; (str lr, [sp, #-4]!)
   16950:	sub	sp, sp, #268	; 0x10c
   16954:	add	r1, sp, #4
   16958:	ldr	r2, [pc, #60]	; 1699c <dcngettext@plt+0x59ac>
   1695c:	bl	169a8 <dcngettext@plt+0x59b8>
   16960:	cmp	r0, #0
   16964:	movne	r0, #0
   16968:	bne	16994 <dcngettext@plt+0x59a4>
   1696c:	ldr	r1, [pc, #44]	; 169a0 <dcngettext@plt+0x59b0>
   16970:	add	r0, sp, #4
   16974:	bl	10d8c <strcmp@plt>
   16978:	cmp	r0, #0
   1697c:	beq	16994 <dcngettext@plt+0x59a4>
   16980:	add	r0, sp, #4
   16984:	ldr	r1, [pc, #24]	; 169a4 <dcngettext@plt+0x59b4>
   16988:	bl	10d8c <strcmp@plt>
   1698c:	adds	r0, r0, #0
   16990:	movne	r0, #1
   16994:	add	sp, sp, #268	; 0x10c
   16998:	pop	{pc}		; (ldr pc, [sp], #4)
   1699c:	andeq	r0, r0, r1, lsl #2
   169a0:	andeq	r8, r1, ip, ror r2
   169a4:	andeq	r8, r1, r0, lsl #5
   169a8:	push	{r4, r5, r6, lr}
   169ac:	mov	r5, r1
   169b0:	mov	r1, #0
   169b4:	mov	r4, r2
   169b8:	bl	10f78 <setlocale@plt>
   169bc:	subs	r6, r0, #0
   169c0:	beq	16a1c <dcngettext@plt+0x5a2c>
   169c4:	bl	10edc <strlen@plt>
   169c8:	cmp	r4, r0
   169cc:	bhi	16a04 <dcngettext@plt+0x5a14>
   169d0:	cmp	r4, #0
   169d4:	bne	169e0 <dcngettext@plt+0x59f0>
   169d8:	mov	r0, #34	; 0x22
   169dc:	pop	{r4, r5, r6, pc}
   169e0:	sub	r4, r4, #1
   169e4:	mov	r1, r6
   169e8:	mov	r2, r4
   169ec:	mov	r0, r5
   169f0:	bl	10dc8 <memcpy@plt>
   169f4:	mov	r3, #0
   169f8:	strb	r3, [r5, r4]
   169fc:	mov	r0, #34	; 0x22
   16a00:	pop	{r4, r5, r6, pc}
   16a04:	add	r2, r0, #1
   16a08:	mov	r1, r6
   16a0c:	mov	r0, r5
   16a10:	bl	10dc8 <memcpy@plt>
   16a14:	mov	r0, #0
   16a18:	pop	{r4, r5, r6, pc}
   16a1c:	cmp	r4, #0
   16a20:	beq	16a30 <dcngettext@plt+0x5a40>
   16a24:	strb	r6, [r5]
   16a28:	mov	r0, #22
   16a2c:	pop	{r4, r5, r6, pc}
   16a30:	mov	r0, #22
   16a34:	pop	{r4, r5, r6, pc}
   16a38:	mov	r1, #0
   16a3c:	b	10f78 <setlocale@plt>
   16a40:	subs	r2, r1, #1
   16a44:	bxeq	lr
   16a48:	bcc	16c20 <dcngettext@plt+0x5c30>
   16a4c:	cmp	r0, r1
   16a50:	bls	16c04 <dcngettext@plt+0x5c14>
   16a54:	tst	r1, r2
   16a58:	beq	16c10 <dcngettext@plt+0x5c20>
   16a5c:	clz	r3, r0
   16a60:	clz	r2, r1
   16a64:	sub	r3, r2, r3
   16a68:	rsbs	r3, r3, #31
   16a6c:	addne	r3, r3, r3, lsl #1
   16a70:	mov	r2, #0
   16a74:	addne	pc, pc, r3, lsl #2
   16a78:	nop			; (mov r0, r0)
   16a7c:	cmp	r0, r1, lsl #31
   16a80:	adc	r2, r2, r2
   16a84:	subcs	r0, r0, r1, lsl #31
   16a88:	cmp	r0, r1, lsl #30
   16a8c:	adc	r2, r2, r2
   16a90:	subcs	r0, r0, r1, lsl #30
   16a94:	cmp	r0, r1, lsl #29
   16a98:	adc	r2, r2, r2
   16a9c:	subcs	r0, r0, r1, lsl #29
   16aa0:	cmp	r0, r1, lsl #28
   16aa4:	adc	r2, r2, r2
   16aa8:	subcs	r0, r0, r1, lsl #28
   16aac:	cmp	r0, r1, lsl #27
   16ab0:	adc	r2, r2, r2
   16ab4:	subcs	r0, r0, r1, lsl #27
   16ab8:	cmp	r0, r1, lsl #26
   16abc:	adc	r2, r2, r2
   16ac0:	subcs	r0, r0, r1, lsl #26
   16ac4:	cmp	r0, r1, lsl #25
   16ac8:	adc	r2, r2, r2
   16acc:	subcs	r0, r0, r1, lsl #25
   16ad0:	cmp	r0, r1, lsl #24
   16ad4:	adc	r2, r2, r2
   16ad8:	subcs	r0, r0, r1, lsl #24
   16adc:	cmp	r0, r1, lsl #23
   16ae0:	adc	r2, r2, r2
   16ae4:	subcs	r0, r0, r1, lsl #23
   16ae8:	cmp	r0, r1, lsl #22
   16aec:	adc	r2, r2, r2
   16af0:	subcs	r0, r0, r1, lsl #22
   16af4:	cmp	r0, r1, lsl #21
   16af8:	adc	r2, r2, r2
   16afc:	subcs	r0, r0, r1, lsl #21
   16b00:	cmp	r0, r1, lsl #20
   16b04:	adc	r2, r2, r2
   16b08:	subcs	r0, r0, r1, lsl #20
   16b0c:	cmp	r0, r1, lsl #19
   16b10:	adc	r2, r2, r2
   16b14:	subcs	r0, r0, r1, lsl #19
   16b18:	cmp	r0, r1, lsl #18
   16b1c:	adc	r2, r2, r2
   16b20:	subcs	r0, r0, r1, lsl #18
   16b24:	cmp	r0, r1, lsl #17
   16b28:	adc	r2, r2, r2
   16b2c:	subcs	r0, r0, r1, lsl #17
   16b30:	cmp	r0, r1, lsl #16
   16b34:	adc	r2, r2, r2
   16b38:	subcs	r0, r0, r1, lsl #16
   16b3c:	cmp	r0, r1, lsl #15
   16b40:	adc	r2, r2, r2
   16b44:	subcs	r0, r0, r1, lsl #15
   16b48:	cmp	r0, r1, lsl #14
   16b4c:	adc	r2, r2, r2
   16b50:	subcs	r0, r0, r1, lsl #14
   16b54:	cmp	r0, r1, lsl #13
   16b58:	adc	r2, r2, r2
   16b5c:	subcs	r0, r0, r1, lsl #13
   16b60:	cmp	r0, r1, lsl #12
   16b64:	adc	r2, r2, r2
   16b68:	subcs	r0, r0, r1, lsl #12
   16b6c:	cmp	r0, r1, lsl #11
   16b70:	adc	r2, r2, r2
   16b74:	subcs	r0, r0, r1, lsl #11
   16b78:	cmp	r0, r1, lsl #10
   16b7c:	adc	r2, r2, r2
   16b80:	subcs	r0, r0, r1, lsl #10
   16b84:	cmp	r0, r1, lsl #9
   16b88:	adc	r2, r2, r2
   16b8c:	subcs	r0, r0, r1, lsl #9
   16b90:	cmp	r0, r1, lsl #8
   16b94:	adc	r2, r2, r2
   16b98:	subcs	r0, r0, r1, lsl #8
   16b9c:	cmp	r0, r1, lsl #7
   16ba0:	adc	r2, r2, r2
   16ba4:	subcs	r0, r0, r1, lsl #7
   16ba8:	cmp	r0, r1, lsl #6
   16bac:	adc	r2, r2, r2
   16bb0:	subcs	r0, r0, r1, lsl #6
   16bb4:	cmp	r0, r1, lsl #5
   16bb8:	adc	r2, r2, r2
   16bbc:	subcs	r0, r0, r1, lsl #5
   16bc0:	cmp	r0, r1, lsl #4
   16bc4:	adc	r2, r2, r2
   16bc8:	subcs	r0, r0, r1, lsl #4
   16bcc:	cmp	r0, r1, lsl #3
   16bd0:	adc	r2, r2, r2
   16bd4:	subcs	r0, r0, r1, lsl #3
   16bd8:	cmp	r0, r1, lsl #2
   16bdc:	adc	r2, r2, r2
   16be0:	subcs	r0, r0, r1, lsl #2
   16be4:	cmp	r0, r1, lsl #1
   16be8:	adc	r2, r2, r2
   16bec:	subcs	r0, r0, r1, lsl #1
   16bf0:	cmp	r0, r1
   16bf4:	adc	r2, r2, r2
   16bf8:	subcs	r0, r0, r1
   16bfc:	mov	r0, r2
   16c00:	bx	lr
   16c04:	moveq	r0, #1
   16c08:	movne	r0, #0
   16c0c:	bx	lr
   16c10:	clz	r2, r1
   16c14:	rsb	r2, r2, #31
   16c18:	lsr	r0, r0, r2
   16c1c:	bx	lr
   16c20:	cmp	r0, #0
   16c24:	mvnne	r0, #0
   16c28:	b	16ec8 <dcngettext@plt+0x5ed8>
   16c2c:	cmp	r1, #0
   16c30:	beq	16c20 <dcngettext@plt+0x5c30>
   16c34:	push	{r0, r1, lr}
   16c38:	bl	16a40 <dcngettext@plt+0x5a50>
   16c3c:	pop	{r1, r2, lr}
   16c40:	mul	r3, r2, r0
   16c44:	sub	r1, r1, r3
   16c48:	bx	lr
   16c4c:	cmp	r1, #0
   16c50:	beq	16e5c <dcngettext@plt+0x5e6c>
   16c54:	eor	ip, r0, r1
   16c58:	rsbmi	r1, r1, #0
   16c5c:	subs	r2, r1, #1
   16c60:	beq	16e28 <dcngettext@plt+0x5e38>
   16c64:	movs	r3, r0
   16c68:	rsbmi	r3, r0, #0
   16c6c:	cmp	r3, r1
   16c70:	bls	16e34 <dcngettext@plt+0x5e44>
   16c74:	tst	r1, r2
   16c78:	beq	16e44 <dcngettext@plt+0x5e54>
   16c7c:	clz	r2, r3
   16c80:	clz	r0, r1
   16c84:	sub	r2, r0, r2
   16c88:	rsbs	r2, r2, #31
   16c8c:	addne	r2, r2, r2, lsl #1
   16c90:	mov	r0, #0
   16c94:	addne	pc, pc, r2, lsl #2
   16c98:	nop			; (mov r0, r0)
   16c9c:	cmp	r3, r1, lsl #31
   16ca0:	adc	r0, r0, r0
   16ca4:	subcs	r3, r3, r1, lsl #31
   16ca8:	cmp	r3, r1, lsl #30
   16cac:	adc	r0, r0, r0
   16cb0:	subcs	r3, r3, r1, lsl #30
   16cb4:	cmp	r3, r1, lsl #29
   16cb8:	adc	r0, r0, r0
   16cbc:	subcs	r3, r3, r1, lsl #29
   16cc0:	cmp	r3, r1, lsl #28
   16cc4:	adc	r0, r0, r0
   16cc8:	subcs	r3, r3, r1, lsl #28
   16ccc:	cmp	r3, r1, lsl #27
   16cd0:	adc	r0, r0, r0
   16cd4:	subcs	r3, r3, r1, lsl #27
   16cd8:	cmp	r3, r1, lsl #26
   16cdc:	adc	r0, r0, r0
   16ce0:	subcs	r3, r3, r1, lsl #26
   16ce4:	cmp	r3, r1, lsl #25
   16ce8:	adc	r0, r0, r0
   16cec:	subcs	r3, r3, r1, lsl #25
   16cf0:	cmp	r3, r1, lsl #24
   16cf4:	adc	r0, r0, r0
   16cf8:	subcs	r3, r3, r1, lsl #24
   16cfc:	cmp	r3, r1, lsl #23
   16d00:	adc	r0, r0, r0
   16d04:	subcs	r3, r3, r1, lsl #23
   16d08:	cmp	r3, r1, lsl #22
   16d0c:	adc	r0, r0, r0
   16d10:	subcs	r3, r3, r1, lsl #22
   16d14:	cmp	r3, r1, lsl #21
   16d18:	adc	r0, r0, r0
   16d1c:	subcs	r3, r3, r1, lsl #21
   16d20:	cmp	r3, r1, lsl #20
   16d24:	adc	r0, r0, r0
   16d28:	subcs	r3, r3, r1, lsl #20
   16d2c:	cmp	r3, r1, lsl #19
   16d30:	adc	r0, r0, r0
   16d34:	subcs	r3, r3, r1, lsl #19
   16d38:	cmp	r3, r1, lsl #18
   16d3c:	adc	r0, r0, r0
   16d40:	subcs	r3, r3, r1, lsl #18
   16d44:	cmp	r3, r1, lsl #17
   16d48:	adc	r0, r0, r0
   16d4c:	subcs	r3, r3, r1, lsl #17
   16d50:	cmp	r3, r1, lsl #16
   16d54:	adc	r0, r0, r0
   16d58:	subcs	r3, r3, r1, lsl #16
   16d5c:	cmp	r3, r1, lsl #15
   16d60:	adc	r0, r0, r0
   16d64:	subcs	r3, r3, r1, lsl #15
   16d68:	cmp	r3, r1, lsl #14
   16d6c:	adc	r0, r0, r0
   16d70:	subcs	r3, r3, r1, lsl #14
   16d74:	cmp	r3, r1, lsl #13
   16d78:	adc	r0, r0, r0
   16d7c:	subcs	r3, r3, r1, lsl #13
   16d80:	cmp	r3, r1, lsl #12
   16d84:	adc	r0, r0, r0
   16d88:	subcs	r3, r3, r1, lsl #12
   16d8c:	cmp	r3, r1, lsl #11
   16d90:	adc	r0, r0, r0
   16d94:	subcs	r3, r3, r1, lsl #11
   16d98:	cmp	r3, r1, lsl #10
   16d9c:	adc	r0, r0, r0
   16da0:	subcs	r3, r3, r1, lsl #10
   16da4:	cmp	r3, r1, lsl #9
   16da8:	adc	r0, r0, r0
   16dac:	subcs	r3, r3, r1, lsl #9
   16db0:	cmp	r3, r1, lsl #8
   16db4:	adc	r0, r0, r0
   16db8:	subcs	r3, r3, r1, lsl #8
   16dbc:	cmp	r3, r1, lsl #7
   16dc0:	adc	r0, r0, r0
   16dc4:	subcs	r3, r3, r1, lsl #7
   16dc8:	cmp	r3, r1, lsl #6
   16dcc:	adc	r0, r0, r0
   16dd0:	subcs	r3, r3, r1, lsl #6
   16dd4:	cmp	r3, r1, lsl #5
   16dd8:	adc	r0, r0, r0
   16ddc:	subcs	r3, r3, r1, lsl #5
   16de0:	cmp	r3, r1, lsl #4
   16de4:	adc	r0, r0, r0
   16de8:	subcs	r3, r3, r1, lsl #4
   16dec:	cmp	r3, r1, lsl #3
   16df0:	adc	r0, r0, r0
   16df4:	subcs	r3, r3, r1, lsl #3
   16df8:	cmp	r3, r1, lsl #2
   16dfc:	adc	r0, r0, r0
   16e00:	subcs	r3, r3, r1, lsl #2
   16e04:	cmp	r3, r1, lsl #1
   16e08:	adc	r0, r0, r0
   16e0c:	subcs	r3, r3, r1, lsl #1
   16e10:	cmp	r3, r1
   16e14:	adc	r0, r0, r0
   16e18:	subcs	r3, r3, r1
   16e1c:	cmp	ip, #0
   16e20:	rsbmi	r0, r0, #0
   16e24:	bx	lr
   16e28:	teq	ip, r0
   16e2c:	rsbmi	r0, r0, #0
   16e30:	bx	lr
   16e34:	movcc	r0, #0
   16e38:	asreq	r0, ip, #31
   16e3c:	orreq	r0, r0, #1
   16e40:	bx	lr
   16e44:	clz	r2, r1
   16e48:	rsb	r2, r2, #31
   16e4c:	cmp	ip, #0
   16e50:	lsr	r0, r3, r2
   16e54:	rsbmi	r0, r0, #0
   16e58:	bx	lr
   16e5c:	cmp	r0, #0
   16e60:	mvngt	r0, #-2147483648	; 0x80000000
   16e64:	movlt	r0, #-2147483648	; 0x80000000
   16e68:	b	16ec8 <dcngettext@plt+0x5ed8>
   16e6c:	cmp	r1, #0
   16e70:	beq	16e5c <dcngettext@plt+0x5e6c>
   16e74:	push	{r0, r1, lr}
   16e78:	bl	16c54 <dcngettext@plt+0x5c64>
   16e7c:	pop	{r1, r2, lr}
   16e80:	mul	r3, r2, r0
   16e84:	sub	r1, r1, r3
   16e88:	bx	lr
   16e8c:	cmp	r3, #0
   16e90:	cmpeq	r2, #0
   16e94:	bne	16eac <dcngettext@plt+0x5ebc>
   16e98:	cmp	r1, #0
   16e9c:	cmpeq	r0, #0
   16ea0:	mvnne	r1, #0
   16ea4:	mvnne	r0, #0
   16ea8:	b	16ec8 <dcngettext@plt+0x5ed8>
   16eac:	sub	sp, sp, #8
   16eb0:	push	{sp, lr}
   16eb4:	bl	16ed8 <dcngettext@plt+0x5ee8>
   16eb8:	ldr	lr, [sp, #4]
   16ebc:	add	sp, sp, #8
   16ec0:	pop	{r2, r3}
   16ec4:	bx	lr
   16ec8:	push	{r1, lr}
   16ecc:	mov	r0, #8
   16ed0:	bl	10d74 <raise@plt>
   16ed4:	pop	{r1, pc}
   16ed8:	cmp	r1, r3
   16edc:	push	{r4, r5, r6, r7, r8, r9, lr}
   16ee0:	cmpeq	r0, r2
   16ee4:	mov	r4, r0
   16ee8:	mov	r5, r1
   16eec:	ldr	r9, [sp, #28]
   16ef0:	movcc	r0, #0
   16ef4:	movcc	r1, #0
   16ef8:	bcc	16ff0 <dcngettext@plt+0x6000>
   16efc:	cmp	r3, #0
   16f00:	clzeq	ip, r2
   16f04:	clzne	ip, r3
   16f08:	addeq	ip, ip, #32
   16f0c:	cmp	r5, #0
   16f10:	clzeq	r1, r4
   16f14:	addeq	r1, r1, #32
   16f18:	clzne	r1, r5
   16f1c:	sub	ip, ip, r1
   16f20:	sub	lr, ip, #32
   16f24:	lsl	r7, r3, ip
   16f28:	rsb	r8, ip, #32
   16f2c:	orr	r7, r7, r2, lsl lr
   16f30:	orr	r7, r7, r2, lsr r8
   16f34:	lsl	r6, r2, ip
   16f38:	cmp	r5, r7
   16f3c:	cmpeq	r4, r6
   16f40:	movcc	r0, #0
   16f44:	movcc	r1, #0
   16f48:	bcc	16f64 <dcngettext@plt+0x5f74>
   16f4c:	mov	r3, #1
   16f50:	subs	r4, r4, r6
   16f54:	lsl	r1, r3, lr
   16f58:	lsl	r0, r3, ip
   16f5c:	orr	r1, r1, r3, lsr r8
   16f60:	sbc	r5, r5, r7
   16f64:	cmp	ip, #0
   16f68:	beq	16ff0 <dcngettext@plt+0x6000>
   16f6c:	lsrs	r3, r7, #1
   16f70:	rrx	r2, r6
   16f74:	mov	r6, ip
   16f78:	b	16f9c <dcngettext@plt+0x5fac>
   16f7c:	subs	r4, r4, r2
   16f80:	sbc	r5, r5, r3
   16f84:	adds	r4, r4, r4
   16f88:	adc	r5, r5, r5
   16f8c:	adds	r4, r4, #1
   16f90:	adc	r5, r5, #0
   16f94:	subs	r6, r6, #1
   16f98:	beq	16fb8 <dcngettext@plt+0x5fc8>
   16f9c:	cmp	r5, r3
   16fa0:	cmpeq	r4, r2
   16fa4:	bcs	16f7c <dcngettext@plt+0x5f8c>
   16fa8:	adds	r4, r4, r4
   16fac:	adc	r5, r5, r5
   16fb0:	subs	r6, r6, #1
   16fb4:	bne	16f9c <dcngettext@plt+0x5fac>
   16fb8:	lsr	r6, r4, ip
   16fbc:	lsr	r7, r5, ip
   16fc0:	orr	r6, r6, r5, lsl r8
   16fc4:	adds	r2, r0, r4
   16fc8:	orr	r6, r6, r5, lsr lr
   16fcc:	adc	r3, r1, r5
   16fd0:	lsl	r1, r7, ip
   16fd4:	orr	r1, r1, r6, lsl lr
   16fd8:	lsl	r0, r6, ip
   16fdc:	orr	r1, r1, r6, lsr r8
   16fe0:	subs	r0, r2, r0
   16fe4:	mov	r4, r6
   16fe8:	mov	r5, r7
   16fec:	sbc	r1, r3, r1
   16ff0:	cmp	r9, #0
   16ff4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16ff8:	strd	r4, [r9]
   16ffc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17000:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17004:	mov	r7, r0
   17008:	ldr	r6, [pc, #72]	; 17058 <dcngettext@plt+0x6068>
   1700c:	ldr	r5, [pc, #72]	; 1705c <dcngettext@plt+0x606c>
   17010:	add	r6, pc, r6
   17014:	add	r5, pc, r5
   17018:	sub	r6, r6, r5
   1701c:	mov	r8, r1
   17020:	mov	r9, r2
   17024:	bl	10d30 <fdopen@plt-0x20>
   17028:	asrs	r6, r6, #2
   1702c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17030:	mov	r4, #0
   17034:	add	r4, r4, #1
   17038:	ldr	r3, [r5], #4
   1703c:	mov	r2, r9
   17040:	mov	r1, r8
   17044:	mov	r0, r7
   17048:	blx	r3
   1704c:	cmp	r6, r4
   17050:	bne	17034 <dcngettext@plt+0x6044>
   17054:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17058:	strdeq	r1, [r1], -r8
   1705c:	strdeq	r1, [r1], -r0
   17060:	bx	lr
   17064:	ldr	r3, [pc, #12]	; 17078 <dcngettext@plt+0x6088>
   17068:	mov	r1, #0
   1706c:	add	r3, pc, r3
   17070:	ldr	r2, [r3]
   17074:	b	10f00 <__cxa_atexit@plt>
   17078:	andeq	r2, r1, r4, lsl #1

Disassembly of section .fini:

0001707c <.fini>:
   1707c:	push	{r3, lr}
   17080:	pop	{r3, pc}
