
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	111b0 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <raise@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <__isoc99_fscanf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <fopen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <memcpy@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <strcpy@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <strlen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <main@@Base>:
   10fa8:	push	{r4, r5, r6, r7, r8, lr}
   10fac:	sub	sp, sp, #376	; 0x178
   10fb0:	ldr	lr, [pc, #404]	; 1114c <main@@Base+0x1a4>
   10fb4:	add	ip, sp, #76	; 0x4c
   10fb8:	add	lr, pc, lr
   10fbc:	mov	r7, ip
   10fc0:	ldm	lr!, {r0, r1, r2, r3}
   10fc4:	mov	r4, ip
   10fc8:	add	r6, sp, #128	; 0x80
   10fcc:	stmia	ip!, {r0, r1, r2, r3}
   10fd0:	ldm	lr!, {r0, r1, r2, r3}
   10fd4:	stmia	ip!, {r0, r1, r2, r3}
   10fd8:	ldm	lr!, {r0, r1, r2, r3}
   10fdc:	stmia	ip!, {r0, r1, r2, r3}
   10fe0:	ldr	r0, [pc, #360]	; 11150 <main@@Base+0x1a8>
   10fe4:	ldr	lr, [lr]
   10fe8:	add	r0, pc, r0
   10fec:	str	lr, [ip]
   10ff0:	bl	10f48 <puts@plt>
   10ff4:	bl	1143c <avl_nova@@Base>
   10ff8:	mov	r5, r0
   10ffc:	mov	r1, r4
   11000:	mov	r0, r5
   11004:	add	r4, r4, #4
   11008:	bl	11740 <avl_insere@@Base>
   1100c:	cmp	r6, r4
   11010:	bne	10ffc <main@@Base+0x54>
   11014:	ldr	r0, [pc, #312]	; 11154 <main@@Base+0x1ac>
   11018:	ldr	r4, [pc, #312]	; 11158 <main@@Base+0x1b0>
   1101c:	add	r0, pc, r0
   11020:	bl	10ef4 <printf@plt>
   11024:	ldr	r0, [r5]
   11028:	bl	11a58 <avl_imprime@@Base>
   1102c:	ldr	r0, [pc, #296]	; 1115c <main@@Base+0x1b4>
   11030:	add	r4, pc, r4
   11034:	add	r0, pc, r0
   11038:	bl	10ef4 <printf@plt>
   1103c:	mov	r1, #1
   11040:	mov	r0, r5
   11044:	bl	11314 <avl_imprime_ord@@Base>
   11048:	ldr	r0, [pc, #272]	; 11160 <main@@Base+0x1b8>
   1104c:	add	r0, pc, r0
   11050:	bl	10f48 <puts@plt>
   11054:	add	r1, r4, #52	; 0x34
   11058:	mov	r2, #300	; 0x12c
   1105c:	mov	r0, r7
   11060:	bl	10f24 <memcpy@plt>
   11064:	add	r1, r4, #352	; 0x160
   11068:	mov	r2, #75	; 0x4b
   1106c:	mov	r0, sp
   11070:	bl	10f24 <memcpy@plt>
   11074:	ldr	r0, [pc, #232]	; 11164 <main@@Base+0x1bc>
   11078:	add	r0, pc, r0
   1107c:	bl	10f48 <puts@plt>
   11080:	ldr	r1, [pc, #224]	; 11168 <main@@Base+0x1c0>
   11084:	ldr	r0, [pc, #224]	; 1116c <main@@Base+0x1c4>
   11088:	add	r1, pc, r1
   1108c:	add	r0, pc, r0
   11090:	bl	10f0c <fopen@plt>
   11094:	subs	r8, r0, #0
   11098:	beq	11138 <main@@Base+0x190>
   1109c:	bl	11ae0 <lista_nova@@Base>
   110a0:	mov	r1, r7
   110a4:	mov	r2, #0
   110a8:	mov	r5, r0
   110ac:	bl	11b6c <lista_insere@@Base>
   110b0:	mov	r2, #0
   110b4:	add	r1, sp, #176	; 0xb0
   110b8:	mov	r0, r5
   110bc:	bl	11b6c <lista_insere@@Base>
   110c0:	mov	r2, #0
   110c4:	add	r1, sp, #276	; 0x114
   110c8:	mov	r0, r5
   110cc:	bl	11b6c <lista_insere@@Base>
   110d0:	bl	11ae0 <lista_nova@@Base>
   110d4:	mov	r2, #0
   110d8:	mov	r1, sp
   110dc:	mov	r4, r0
   110e0:	bl	11b6c <lista_insere@@Base>
   110e4:	mov	r2, #0
   110e8:	add	r1, sp, #25
   110ec:	mov	r0, r4
   110f0:	bl	11b6c <lista_insere@@Base>
   110f4:	add	r1, sp, #50	; 0x32
   110f8:	mov	r2, #0
   110fc:	mov	r0, r4
   11100:	bl	11b6c <lista_insere@@Base>
   11104:	mov	r2, r4
   11108:	mov	r1, r5
   1110c:	mov	r0, r8
   11110:	bl	11328 <valida_passwds@@Base>
   11114:	mov	r0, r5
   11118:	bl	11b04 <lista_apaga@@Base>
   1111c:	mov	r0, r4
   11120:	bl	11b04 <lista_apaga@@Base>
   11124:	mov	r0, r8
   11128:	bl	10f90 <fclose@plt>
   1112c:	mov	r0, #0
   11130:	add	sp, sp, #376	; 0x178
   11134:	pop	{r4, r5, r6, r7, r8, pc}
   11138:	ldr	r0, [pc, #48]	; 11170 <main@@Base+0x1c8>
   1113c:	add	r0, pc, r0
   11140:	bl	10f48 <puts@plt>
   11144:	mvn	r0, #0
   11148:	b	11130 <main@@Base+0x188>
   1114c:			; <UNDEFINED> instruction: 0x000016b0
   11150:	andeq	r1, r0, r4, lsl #17
   11154:	andeq	r1, r0, r4, ror #16
   11158:	andeq	r1, r0, r8, lsr r6
   1115c:	andeq	r1, r0, r0, ror #16
   11160:	andeq	r1, r0, r8, ror #16
   11164:	andeq	r1, r0, r0, asr #16
   11168:	andeq	r1, r0, r4, asr #16
   1116c:	andeq	r1, r0, r4, asr #16
   11170:	andeq	r1, r0, r4, lsr #15

00011174 <_start@@Base>:
   11174:	mov	fp, #0
   11178:	mov	lr, #0
   1117c:	pop	{r1}		; (ldr r1, [sp], #4)
   11180:	mov	r2, sp
   11184:	push	{r2}		; (str r2, [sp, #-4]!)
   11188:	push	{r0}		; (str r0, [sp, #-4]!)
   1118c:	ldr	ip, [pc, #16]	; 111a4 <_start@@Base+0x30>
   11190:	push	{ip}		; (str ip, [sp, #-4]!)
   11194:	ldr	r0, [pc, #12]	; 111a8 <_start@@Base+0x34>
   11198:	ldr	r3, [pc, #12]	; 111ac <_start@@Base+0x38>
   1119c:	bl	10f60 <__libc_start_main@plt>
   111a0:	bl	10f9c <abort@plt>
   111a4:	andeq	r2, r1, r0, ror #12
   111a8:	andeq	r0, r1, r8, lsr #31
   111ac:	andeq	r2, r1, r0, lsl #12
   111b0:	ldr	r3, [pc, #20]	; 111cc <_start@@Base+0x58>
   111b4:	ldr	r2, [pc, #20]	; 111d0 <_start@@Base+0x5c>
   111b8:	add	r3, pc, r3
   111bc:	ldr	r2, [r3, r2]
   111c0:	cmp	r2, #0
   111c4:	bxeq	lr
   111c8:	b	10f6c <__gmon_start__@plt>
   111cc:	andeq	r1, r1, r0, asr #28
   111d0:	andeq	r0, r0, r8, asr r0
   111d4:	ldr	r3, [pc, #28]	; 111f8 <_start@@Base+0x84>
   111d8:	ldr	r0, [pc, #28]	; 111fc <_start@@Base+0x88>
   111dc:	sub	r3, r3, r0
   111e0:	cmp	r3, #6
   111e4:	bxls	lr
   111e8:	ldr	r3, [pc, #16]	; 11200 <_start@@Base+0x8c>
   111ec:	cmp	r3, #0
   111f0:	bxeq	lr
   111f4:	bx	r3
   111f8:	andeq	r3, r2, r7, rrx
   111fc:	andeq	r3, r2, r4, rrx
   11200:	andeq	r0, r0, r0
   11204:	ldr	r1, [pc, #36]	; 11230 <_start@@Base+0xbc>
   11208:	ldr	r0, [pc, #36]	; 11234 <_start@@Base+0xc0>
   1120c:	sub	r1, r1, r0
   11210:	asr	r1, r1, #2
   11214:	add	r1, r1, r1, lsr #31
   11218:	asrs	r1, r1, #1
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0xc4>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, r4, rrx
   11234:	andeq	r3, r2, r4, rrx
   11238:	andeq	r0, r0, r0
   1123c:	push	{r4, lr}
   11240:	ldr	r4, [pc, #24]	; 11260 <_start@@Base+0xec>
   11244:	ldrb	r3, [r4]
   11248:	cmp	r3, #0
   1124c:	popne	{r4, pc}
   11250:	bl	111d4 <_start@@Base+0x60>
   11254:	mov	r3, #1
   11258:	strb	r3, [r4]
   1125c:	pop	{r4, pc}
   11260:	andeq	r3, r2, r4, rrx
   11264:	ldr	r0, [pc, #40]	; 11294 <_start@@Base+0x120>
   11268:	ldr	r3, [r0]
   1126c:	cmp	r3, #0
   11270:	bne	11278 <_start@@Base+0x104>
   11274:	b	11204 <_start@@Base+0x90>
   11278:	ldr	r3, [pc, #24]	; 11298 <_start@@Base+0x124>
   1127c:	cmp	r3, #0
   11280:	beq	11274 <_start@@Base+0x100>
   11284:	push	{r4, lr}
   11288:	blx	r3
   1128c:	pop	{r4, lr}
   11290:	b	11204 <_start@@Base+0x90>
   11294:	andeq	r2, r2, r4, lsl pc
   11298:	andeq	r0, r0, r0

0001129c <crescente@@Base>:
   1129c:	push	{r4, r5, r6, lr}
   112a0:	subs	r4, r0, #0
   112a4:	popeq	{r4, r5, r6, pc}
   112a8:	ldr	r5, [pc, #36]	; 112d4 <crescente@@Base+0x38>
   112ac:	add	r5, pc, r5
   112b0:	ldr	r0, [r4, #4]
   112b4:	bl	1129c <crescente@@Base>
   112b8:	ldr	r1, [r4]
   112bc:	mov	r0, r5
   112c0:	bl	10ef4 <printf@plt>
   112c4:	ldr	r4, [r4, #8]
   112c8:	cmp	r4, #0
   112cc:	bne	112b0 <crescente@@Base+0x14>
   112d0:	pop	{r4, r5, r6, pc}
   112d4:	andeq	r1, r0, r8, ror #10

000112d8 <decrescente@@Base>:
   112d8:	push	{r4, r5, r6, lr}
   112dc:	subs	r4, r0, #0
   112e0:	popeq	{r4, r5, r6, pc}
   112e4:	ldr	r5, [pc, #36]	; 11310 <decrescente@@Base+0x38>
   112e8:	add	r5, pc, r5
   112ec:	ldr	r0, [r4, #8]
   112f0:	bl	112d8 <decrescente@@Base>
   112f4:	ldr	r1, [r4]
   112f8:	mov	r0, r5
   112fc:	bl	10ef4 <printf@plt>
   11300:	ldr	r4, [r4, #4]
   11304:	cmp	r4, #0
   11308:	bne	112ec <decrescente@@Base+0x14>
   1130c:	pop	{r4, r5, r6, pc}
   11310:	andeq	r1, r0, ip, lsr #10

00011314 <avl_imprime_ord@@Base>:
   11314:	cmp	r1, #0
   11318:	ldr	r0, [r0]
   1131c:	blt	11324 <avl_imprime_ord@@Base+0x10>
   11320:	b	1129c <crescente@@Base>
   11324:	b	112d8 <decrescente@@Base>

00011328 <valida_passwds@@Base>:
   11328:	ldr	r3, [pc, #244]	; 11424 <valida_passwds@@Base+0xfc>
   1132c:	ldr	ip, [pc, #244]	; 11428 <valida_passwds@@Base+0x100>
   11330:	add	r3, pc, r3
   11334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11338:	mov	r8, r0
   1133c:	sub	sp, sp, #56	; 0x38
   11340:	mov	sl, r1
   11344:	mov	r0, #10
   11348:	ldr	r1, [r3, ip]
   1134c:	mov	r9, r2
   11350:	bl	11e50 <tabela_nova@@Base>
   11354:	ldr	r7, [pc, #208]	; 1142c <valida_passwds@@Base+0x104>
   11358:	add	r5, sp, #28
   1135c:	mov	r4, sp
   11360:	add	r7, pc, r7
   11364:	mov	r6, r0
   11368:	b	11370 <valida_passwds@@Base+0x48>
   1136c:	bl	11f20 <tabela_adiciona@@Base>
   11370:	mov	r2, r4
   11374:	mov	r1, r7
   11378:	mov	r3, r5
   1137c:	mov	r0, r8
   11380:	bl	10f00 <__isoc99_fscanf@plt>
   11384:	mov	r2, r5
   11388:	mov	r1, r4
   1138c:	cmp	r0, #2
   11390:	mov	r0, r6
   11394:	beq	1136c <valida_passwds@@Base+0x44>
   11398:	ldr	r4, [sl]
   1139c:	ldr	r5, [r9]
   113a0:	cmp	r4, #0
   113a4:	cmpne	r5, #0
   113a8:	beq	1140c <valida_passwds@@Base+0xe4>
   113ac:	ldr	r8, [pc, #124]	; 11430 <valida_passwds@@Base+0x108>
   113b0:	ldr	r7, [pc, #124]	; 11434 <valida_passwds@@Base+0x10c>
   113b4:	ldr	r9, [pc, #124]	; 11438 <valida_passwds@@Base+0x110>
   113b8:	add	r8, pc, r8
   113bc:	add	r7, pc, r7
   113c0:	add	r9, pc, r9
   113c4:	ldr	r2, [r5]
   113c8:	ldr	r1, [r4]
   113cc:	mov	r0, r8
   113d0:	bl	10ef4 <printf@plt>
   113d4:	ldr	r1, [r4]
   113d8:	mov	r0, r6
   113dc:	bl	120a8 <tabela_valor@@Base>
   113e0:	ldr	r1, [r5]
   113e4:	bl	10ee8 <strcmp@plt>
   113e8:	cmp	r0, #0
   113ec:	mov	r0, r7
   113f0:	moveq	r0, r9
   113f4:	bl	10f48 <puts@plt>
   113f8:	ldr	r4, [r4, #4]
   113fc:	ldr	r5, [r5, #4]
   11400:	cmp	r4, #0
   11404:	cmpne	r5, #0
   11408:	bne	113c4 <valida_passwds@@Base+0x9c>
   1140c:	mov	r0, r6
   11410:	bl	1213c <tabela_esvazia@@Base>
   11414:	mov	r0, r6
   11418:	bl	10f18 <free@plt>
   1141c:	add	sp, sp, #56	; 0x38
   11420:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11424:	andeq	r1, r1, r8, asr #25
   11428:	andeq	r0, r0, r4, asr r0
   1142c:			; <UNDEFINED> instruction: 0x000014b8
   11430:	andeq	r1, r0, r8, ror #8
   11434:	muleq	r0, r8, r4
   11438:	andeq	r1, r0, r8, ror r4

0001143c <avl_nova@@Base>:
   1143c:	push	{r4, lr}
   11440:	mov	r0, #4
   11444:	bl	10f54 <malloc@plt>
   11448:	cmp	r0, #0
   1144c:	movne	r3, #0
   11450:	strne	r3, [r0]
   11454:	pop	{r4, pc}

00011458 <avl_altura@@Base>:
   11458:	cmp	r0, #0
   1145c:	ldrne	r0, [r0, #12]
   11460:	mvneq	r0, #0
   11464:	bx	lr

00011468 <max@@Base>:
   11468:	cmp	r1, r0
   1146c:	movge	r0, r1
   11470:	bx	lr

00011474 <avl_novo_no@@Base>:
   11474:	push	{r4, r5, r6, lr}
   11478:	mov	r5, r0
   1147c:	mov	r0, #16
   11480:	bl	10f54 <malloc@plt>
   11484:	mov	r4, r0
   11488:	mov	r0, r5
   1148c:	bl	10f78 <strlen@plt>
   11490:	add	r6, r0, #1
   11494:	mov	r0, r6
   11498:	bl	10f54 <malloc@plt>
   1149c:	mov	r2, r6
   114a0:	mov	r1, r5
   114a4:	str	r0, [r4]
   114a8:	bl	10f24 <memcpy@plt>
   114ac:	mov	r3, #0
   114b0:	str	r3, [r4, #4]
   114b4:	str	r3, [r4, #8]
   114b8:	str	r3, [r4, #12]
   114bc:	mov	r0, r4
   114c0:	pop	{r4, r5, r6, pc}

000114c4 <roda_direita@@Base>:
   114c4:	push	{r4, r5, r6, lr}
   114c8:	mov	r5, r0
   114cc:	ldr	r4, [r0, #4]
   114d0:	ldr	r3, [r4, #8]
   114d4:	str	r0, [r4, #8]
   114d8:	str	r3, [r5, #4]
   114dc:	mov	r0, r3
   114e0:	bl	11458 <avl_altura@@Base>
   114e4:	mov	r6, r0
   114e8:	ldr	r0, [r5, #8]
   114ec:	bl	11458 <avl_altura@@Base>
   114f0:	mov	r1, r0
   114f4:	mov	r0, r6
   114f8:	bl	11468 <max@@Base>
   114fc:	add	r0, r0, #1
   11500:	str	r0, [r5, #12]
   11504:	ldr	r0, [r4, #4]
   11508:	bl	11458 <avl_altura@@Base>
   1150c:	mov	r5, r0
   11510:	ldr	r0, [r4, #8]
   11514:	bl	11458 <avl_altura@@Base>
   11518:	mov	r1, r0
   1151c:	mov	r0, r5
   11520:	bl	11468 <max@@Base>
   11524:	add	r0, r0, #1
   11528:	str	r0, [r4, #12]
   1152c:	mov	r0, r4
   11530:	pop	{r4, r5, r6, pc}

00011534 <roda_esquerda@@Base>:
   11534:	push	{r4, r5, r6, lr}
   11538:	mov	r5, r0
   1153c:	ldr	r4, [r0, #8]
   11540:	ldr	r3, [r4, #4]
   11544:	str	r0, [r4, #4]
   11548:	str	r3, [r0, #8]
   1154c:	ldr	r0, [r0, #4]
   11550:	bl	11458 <avl_altura@@Base>
   11554:	mov	r6, r0
   11558:	ldr	r0, [r5, #8]
   1155c:	bl	11458 <avl_altura@@Base>
   11560:	mov	r1, r0
   11564:	mov	r0, r6
   11568:	bl	11468 <max@@Base>
   1156c:	add	r0, r0, #1
   11570:	str	r0, [r5, #12]
   11574:	ldr	r0, [r4, #4]
   11578:	bl	11458 <avl_altura@@Base>
   1157c:	mov	r5, r0
   11580:	ldr	r0, [r4, #8]
   11584:	bl	11458 <avl_altura@@Base>
   11588:	mov	r1, r0
   1158c:	mov	r0, r5
   11590:	bl	11468 <max@@Base>
   11594:	add	r0, r0, #1
   11598:	str	r0, [r4, #12]
   1159c:	mov	r0, r4
   115a0:	pop	{r4, r5, r6, pc}

000115a4 <calc_balanceamento@@Base>:
   115a4:	push	{r4, r5, r6, lr}
   115a8:	subs	r4, r0, #0
   115ac:	beq	115cc <calc_balanceamento@@Base+0x28>
   115b0:	ldr	r0, [r4, #8]
   115b4:	bl	11458 <avl_altura@@Base>
   115b8:	mov	r5, r0
   115bc:	ldr	r0, [r4, #4]
   115c0:	bl	11458 <avl_altura@@Base>
   115c4:	sub	r0, r5, r0
   115c8:	pop	{r4, r5, r6, pc}
   115cc:	mov	r0, r4
   115d0:	pop	{r4, r5, r6, pc}

000115d4 <avl_pesquisa_impl@@Base>:
   115d4:	push	{r4, r5, r6, lr}
   115d8:	subs	r4, r0, #0
   115dc:	beq	1160c <avl_pesquisa_impl@@Base+0x38>
   115e0:	mov	r5, r1
   115e4:	ldr	r1, [r4]
   115e8:	mov	r0, r5
   115ec:	bl	10ee8 <strcmp@plt>
   115f0:	cmp	r0, #0
   115f4:	ldrlt	r4, [r4, #4]
   115f8:	blt	11604 <avl_pesquisa_impl@@Base+0x30>
   115fc:	beq	1160c <avl_pesquisa_impl@@Base+0x38>
   11600:	ldr	r4, [r4, #8]
   11604:	cmp	r4, #0
   11608:	bne	115e4 <avl_pesquisa_impl@@Base+0x10>
   1160c:	mov	r0, r4
   11610:	pop	{r4, r5, r6, pc}

00011614 <avl_pesquisa@@Base>:
   11614:	cmp	r1, #0
   11618:	cmpne	r0, #0
   1161c:	beq	11628 <avl_pesquisa@@Base+0x14>
   11620:	ldr	r0, [r0]
   11624:	b	115d4 <avl_pesquisa_impl@@Base>
   11628:	mov	r0, #0
   1162c:	bx	lr

00011630 <avl_insere_impl@@Base>:
   11630:	push	{r4, r5, r6, lr}
   11634:	subs	r4, r0, #0
   11638:	beq	11734 <avl_insere_impl@@Base+0x104>
   1163c:	mov	r5, r1
   11640:	mov	r0, r5
   11644:	ldr	r1, [r4]
   11648:	bl	10ee8 <strcmp@plt>
   1164c:	cmp	r0, #0
   11650:	blt	116f8 <avl_insere_impl@@Base+0xc8>
   11654:	beq	116c8 <avl_insere_impl@@Base+0x98>
   11658:	mov	r1, r5
   1165c:	ldr	r0, [r4, #8]
   11660:	bl	11630 <avl_insere_impl@@Base>
   11664:	ldr	r3, [r4, #4]
   11668:	str	r0, [r4, #8]
   1166c:	mov	r0, r3
   11670:	bl	11458 <avl_altura@@Base>
   11674:	mov	r5, r0
   11678:	ldr	r0, [r4, #8]
   1167c:	bl	11458 <avl_altura@@Base>
   11680:	mov	r1, r0
   11684:	mov	r0, r5
   11688:	bl	11468 <max@@Base>
   1168c:	add	r0, r0, #1
   11690:	str	r0, [r4, #12]
   11694:	mov	r0, r4
   11698:	bl	115a4 <calc_balanceamento@@Base>
   1169c:	cmp	r0, #1
   116a0:	ble	116c0 <avl_insere_impl@@Base+0x90>
   116a4:	ldr	r0, [r4, #8]
   116a8:	bl	115a4 <calc_balanceamento@@Base>
   116ac:	cmp	r0, #0
   116b0:	blt	11710 <avl_insere_impl@@Base+0xe0>
   116b4:	mov	r0, r4
   116b8:	pop	{r4, r5, r6, lr}
   116bc:	b	11534 <roda_esquerda@@Base>
   116c0:	cmn	r0, #1
   116c4:	blt	116d0 <avl_insere_impl@@Base+0xa0>
   116c8:	mov	r0, r4
   116cc:	pop	{r4, r5, r6, pc}
   116d0:	ldr	r0, [r4, #4]
   116d4:	bl	115a4 <calc_balanceamento@@Base>
   116d8:	cmp	r0, #0
   116dc:	ble	11728 <avl_insere_impl@@Base+0xf8>
   116e0:	ldr	r0, [r4, #4]
   116e4:	bl	11534 <roda_esquerda@@Base>
   116e8:	str	r0, [r4, #4]
   116ec:	mov	r0, r4
   116f0:	pop	{r4, r5, r6, lr}
   116f4:	b	114c4 <roda_direita@@Base>
   116f8:	mov	r1, r5
   116fc:	ldr	r0, [r4, #4]
   11700:	bl	11630 <avl_insere_impl@@Base>
   11704:	mov	r3, r0
   11708:	str	r0, [r4, #4]
   1170c:	b	1166c <avl_insere_impl@@Base+0x3c>
   11710:	ldr	r0, [r4, #8]
   11714:	bl	114c4 <roda_direita@@Base>
   11718:	str	r0, [r4, #8]
   1171c:	mov	r0, r4
   11720:	pop	{r4, r5, r6, lr}
   11724:	b	11534 <roda_esquerda@@Base>
   11728:	mov	r0, r4
   1172c:	pop	{r4, r5, r6, lr}
   11730:	b	114c4 <roda_direita@@Base>
   11734:	mov	r0, r1
   11738:	pop	{r4, r5, r6, lr}
   1173c:	b	11474 <avl_novo_no@@Base>

00011740 <avl_insere@@Base>:
   11740:	cmp	r1, #0
   11744:	cmpne	r0, #0
   11748:	push	{r4, r5, r6, lr}
   1174c:	moveq	r5, #1
   11750:	movne	r5, #0
   11754:	beq	11770 <avl_insere@@Base+0x30>
   11758:	mov	r4, r0
   1175c:	ldr	r0, [r0]
   11760:	bl	11630 <avl_insere_impl@@Base>
   11764:	str	r0, [r4]
   11768:	mov	r0, r5
   1176c:	pop	{r4, r5, r6, pc}
   11770:	mvn	r5, #0
   11774:	b	11768 <avl_insere@@Base+0x28>

00011778 <avl_no_valormin@@Base>:
   11778:	b	11780 <avl_no_valormin@@Base+0x8>
   1177c:	mov	r0, r3
   11780:	ldr	r3, [r0, #4]
   11784:	cmp	r3, #0
   11788:	bne	1177c <avl_no_valormin@@Base+0x4>
   1178c:	bx	lr

00011790 <avl_min@@Base>:
   11790:	subs	r3, r0, #0
   11794:	beq	117a8 <avl_min@@Base+0x18>
   11798:	push	{r4, lr}
   1179c:	bl	11778 <avl_no_valormin@@Base>
   117a0:	ldr	r0, [r0]
   117a4:	pop	{r4, pc}
   117a8:	mov	r0, r3
   117ac:	bx	lr

000117b0 <avl_no_valormax@@Base>:
   117b0:	b	117b8 <avl_no_valormax@@Base+0x8>
   117b4:	mov	r0, r3
   117b8:	ldr	r3, [r0, #8]
   117bc:	cmp	r3, #0
   117c0:	bne	117b4 <avl_no_valormax@@Base+0x4>
   117c4:	bx	lr

000117c8 <avl_max@@Base>:
   117c8:	subs	r3, r0, #0
   117cc:	beq	117e0 <avl_max@@Base+0x18>
   117d0:	push	{r4, lr}
   117d4:	bl	117b0 <avl_no_valormax@@Base>
   117d8:	ldr	r0, [r0]
   117dc:	pop	{r4, pc}
   117e0:	mov	r0, r3
   117e4:	bx	lr

000117e8 <avl_remove_impl@@Base>:
   117e8:	push	{r4, r5, r6, lr}
   117ec:	subs	r4, r0, #0
   117f0:	beq	118dc <avl_remove_impl@@Base+0xf4>
   117f4:	ldr	r6, [r4]
   117f8:	mov	r0, r1
   117fc:	mov	r5, r1
   11800:	mov	r1, r6
   11804:	bl	10ee8 <strcmp@plt>
   11808:	cmp	r0, #0
   1180c:	blt	11910 <avl_remove_impl@@Base+0x128>
   11810:	beq	1187c <avl_remove_impl@@Base+0x94>
   11814:	mov	r1, r5
   11818:	ldr	r0, [r4, #8]
   1181c:	bl	117e8 <avl_remove_impl@@Base>
   11820:	ldr	r3, [r4, #4]
   11824:	str	r0, [r4, #8]
   11828:	mov	r0, r3
   1182c:	bl	11458 <avl_altura@@Base>
   11830:	mov	r5, r0
   11834:	ldr	r0, [r4, #8]
   11838:	bl	11458 <avl_altura@@Base>
   1183c:	mov	r1, r0
   11840:	mov	r0, r5
   11844:	bl	11468 <max@@Base>
   11848:	add	r0, r0, #1
   1184c:	str	r0, [r4, #12]
   11850:	mov	r0, r4
   11854:	bl	115a4 <calc_balanceamento@@Base>
   11858:	cmp	r0, #1
   1185c:	ble	118d4 <avl_remove_impl@@Base+0xec>
   11860:	ldr	r0, [r4, #8]
   11864:	bl	115a4 <calc_balanceamento@@Base>
   11868:	cmp	r0, #0
   1186c:	blt	11968 <avl_remove_impl@@Base+0x180>
   11870:	mov	r0, r4
   11874:	pop	{r4, r5, r6, lr}
   11878:	b	11534 <roda_esquerda@@Base>
   1187c:	ldr	r5, [r4, #4]
   11880:	cmp	r5, #0
   11884:	beq	1198c <avl_remove_impl@@Base+0x1a4>
   11888:	ldr	r0, [r4, #8]
   1188c:	cmp	r0, #0
   11890:	beq	11928 <avl_remove_impl@@Base+0x140>
   11894:	bl	11778 <avl_no_valormin@@Base>
   11898:	mov	r5, r0
   1189c:	ldr	r0, [r0]
   118a0:	bl	10f78 <strlen@plt>
   118a4:	add	r1, r0, #1
   118a8:	ldr	r0, [r4]
   118ac:	bl	10f30 <realloc@plt>
   118b0:	str	r0, [r4]
   118b4:	ldr	r1, [r5]
   118b8:	bl	10f3c <strcpy@plt>
   118bc:	ldr	r1, [r5]
   118c0:	ldr	r0, [r4, #8]
   118c4:	bl	117e8 <avl_remove_impl@@Base>
   118c8:	ldr	r3, [r4, #4]
   118cc:	str	r0, [r4, #8]
   118d0:	b	11828 <avl_remove_impl@@Base+0x40>
   118d4:	cmn	r0, #1
   118d8:	blt	118e8 <avl_remove_impl@@Base+0x100>
   118dc:	mov	r5, r4
   118e0:	mov	r0, r5
   118e4:	pop	{r4, r5, r6, pc}
   118e8:	ldr	r0, [r4, #4]
   118ec:	bl	115a4 <calc_balanceamento@@Base>
   118f0:	cmp	r0, #0
   118f4:	ble	11980 <avl_remove_impl@@Base+0x198>
   118f8:	ldr	r0, [r4, #4]
   118fc:	bl	11534 <roda_esquerda@@Base>
   11900:	str	r0, [r4, #4]
   11904:	mov	r0, r4
   11908:	pop	{r4, r5, r6, lr}
   1190c:	b	114c4 <roda_direita@@Base>
   11910:	mov	r1, r5
   11914:	ldr	r0, [r4, #4]
   11918:	bl	117e8 <avl_remove_impl@@Base>
   1191c:	mov	r3, r0
   11920:	str	r0, [r4, #4]
   11924:	b	11828 <avl_remove_impl@@Base+0x40>
   11928:	ldr	r0, [r5]
   1192c:	bl	10f78 <strlen@plt>
   11930:	add	r1, r0, #1
   11934:	mov	r0, r6
   11938:	bl	10f30 <realloc@plt>
   1193c:	str	r0, [r4]
   11940:	ldr	r1, [r5]
   11944:	bl	10f3c <strcpy@plt>
   11948:	ldmib	r5, {r1, r2, r3}
   1194c:	ldr	r0, [r5]
   11950:	stmib	r4, {r1, r2, r3}
   11954:	bl	10f18 <free@plt>
   11958:	mov	r0, r5
   1195c:	bl	10f18 <free@plt>
   11960:	ldr	r3, [r4, #4]
   11964:	b	11828 <avl_remove_impl@@Base+0x40>
   11968:	ldr	r0, [r4, #8]
   1196c:	bl	114c4 <roda_direita@@Base>
   11970:	str	r0, [r4, #8]
   11974:	mov	r0, r4
   11978:	pop	{r4, r5, r6, lr}
   1197c:	b	11534 <roda_esquerda@@Base>
   11980:	mov	r0, r4
   11984:	pop	{r4, r5, r6, lr}
   11988:	b	114c4 <roda_direita@@Base>
   1198c:	ldr	r5, [r4, #8]
   11990:	cmp	r5, #0
   11994:	bne	11928 <avl_remove_impl@@Base+0x140>
   11998:	mov	r0, r6
   1199c:	bl	10f18 <free@plt>
   119a0:	mov	r0, r4
   119a4:	bl	10f18 <free@plt>
   119a8:	b	118e0 <avl_remove_impl@@Base+0xf8>

000119ac <avl_apaga@@Base>:
   119ac:	push	{r4, lr}
   119b0:	subs	r4, r0, #0
   119b4:	popeq	{r4, pc}
   119b8:	ldr	r0, [r4]
   119bc:	cmp	r0, #0
   119c0:	beq	119d8 <avl_apaga@@Base+0x2c>
   119c4:	ldr	r1, [r0]
   119c8:	bl	117e8 <avl_remove_impl@@Base>
   119cc:	cmp	r0, #0
   119d0:	str	r0, [r4]
   119d4:	bne	119c4 <avl_apaga@@Base+0x18>
   119d8:	mov	r0, r4
   119dc:	pop	{r4, lr}
   119e0:	b	10f18 <free@plt>

000119e4 <avl_remove@@Base>:
   119e4:	cmp	r1, #0
   119e8:	cmpne	r0, #0
   119ec:	push	{r4, r5, r6, lr}
   119f0:	moveq	r5, #1
   119f4:	movne	r5, #0
   119f8:	beq	11a14 <avl_remove@@Base+0x30>
   119fc:	mov	r4, r0
   11a00:	ldr	r0, [r0]
   11a04:	bl	117e8 <avl_remove_impl@@Base>
   11a08:	str	r0, [r4]
   11a0c:	mov	r0, r5
   11a10:	pop	{r4, r5, r6, pc}
   11a14:	mvn	r5, #0
   11a18:	b	11a0c <avl_remove@@Base+0x28>

00011a1c <avl_preordem_impl@@Base>:
   11a1c:	push	{r4, r5, r6, lr}
   11a20:	subs	r4, r0, #0
   11a24:	popeq	{r4, r5, r6, pc}
   11a28:	ldr	r5, [pc, #36]	; 11a54 <avl_preordem_impl@@Base+0x38>
   11a2c:	add	r5, pc, r5
   11a30:	ldr	r1, [r4]
   11a34:	mov	r0, r5
   11a38:	bl	10ef4 <printf@plt>
   11a3c:	ldr	r0, [r4, #4]
   11a40:	bl	11a1c <avl_preordem_impl@@Base>
   11a44:	ldr	r4, [r4, #8]
   11a48:	cmp	r4, #0
   11a4c:	bne	11a30 <avl_preordem_impl@@Base+0x14>
   11a50:	pop	{r4, r5, r6, pc}
   11a54:	andeq	r0, r0, r8, ror #27

00011a58 <avl_imprime@@Base>:
   11a58:	cmp	r0, #0
   11a5c:	bxeq	lr
   11a60:	push	{r4, lr}
   11a64:	bl	11a1c <avl_preordem_impl@@Base>
   11a68:	mov	r0, #10
   11a6c:	pop	{r4, lr}
   11a70:	b	10f84 <putchar@plt>

00011a74 <novo_str@@Base>:
   11a74:	push	{r4, r5, r6, r7, r8, lr}
   11a78:	mov	r5, r0
   11a7c:	mov	r0, #12
   11a80:	bl	10f54 <malloc@plt>
   11a84:	subs	r4, r0, #0
   11a88:	beq	11ac8 <novo_str@@Base+0x54>
   11a8c:	mov	r0, r5
   11a90:	bl	10f78 <strlen@plt>
   11a94:	add	r7, r0, #1
   11a98:	mov	r0, r7
   11a9c:	bl	10f54 <malloc@plt>
   11aa0:	cmp	r0, #0
   11aa4:	mov	r6, r0
   11aa8:	str	r0, [r4]
   11aac:	beq	11ad0 <novo_str@@Base+0x5c>
   11ab0:	mov	r2, r7
   11ab4:	mov	r1, r5
   11ab8:	bl	10f24 <memcpy@plt>
   11abc:	mov	r3, #0
   11ac0:	str	r3, [r4, #4]
   11ac4:	str	r3, [r4, #8]
   11ac8:	mov	r0, r4
   11acc:	pop	{r4, r5, r6, r7, r8, pc}
   11ad0:	mov	r0, r4
   11ad4:	bl	10f18 <free@plt>
   11ad8:	mov	r4, r6
   11adc:	b	11ac8 <novo_str@@Base+0x54>

00011ae0 <lista_nova@@Base>:
   11ae0:	push	{r4, lr}
   11ae4:	mov	r0, #12
   11ae8:	bl	10f54 <malloc@plt>
   11aec:	cmp	r0, #0
   11af0:	movne	r3, #0
   11af4:	strne	r3, [r0]
   11af8:	strne	r3, [r0, #4]
   11afc:	strne	r3, [r0, #8]
   11b00:	pop	{r4, pc}

00011b04 <lista_apaga@@Base>:
   11b04:	push	{r4, r5, r6, lr}
   11b08:	subs	r5, r0, #0
   11b0c:	bne	11b28 <lista_apaga@@Base+0x24>
   11b10:	b	11b40 <lista_apaga@@Base+0x3c>
   11b14:	ldm	r4, {r0, r3}
   11b18:	str	r3, [r5]
   11b1c:	bl	10f18 <free@plt>
   11b20:	mov	r0, r4
   11b24:	bl	10f18 <free@plt>
   11b28:	ldr	r4, [r5]
   11b2c:	cmp	r4, #0
   11b30:	bne	11b14 <lista_apaga@@Base+0x10>
   11b34:	mov	r0, r5
   11b38:	pop	{r4, r5, r6, lr}
   11b3c:	b	10f18 <free@plt>
   11b40:	pop	{r4, r5, r6, pc}

00011b44 <lista_tamanho@@Base>:
   11b44:	cmp	r0, #0
   11b48:	ldrne	r0, [r0, #8]
   11b4c:	mvneq	r0, #0
   11b50:	bx	lr

00011b54 <lista_inicio@@Base>:
   11b54:	cmp	r0, #0
   11b58:	ldrne	r0, [r0]
   11b5c:	bx	lr

00011b60 <lista_fim@@Base>:
   11b60:	cmp	r0, #0
   11b64:	ldrne	r0, [r0, #4]
   11b68:	bx	lr

00011b6c <lista_insere@@Base>:
   11b6c:	cmp	r1, #0
   11b70:	cmpne	r0, #0
   11b74:	beq	11c00 <lista_insere@@Base+0x94>
   11b78:	push	{r4, r5, r6, lr}
   11b7c:	mov	r5, r0
   11b80:	mov	r0, r1
   11b84:	mov	r4, r2
   11b88:	bl	11a74 <novo_str@@Base>
   11b8c:	cmp	r0, #0
   11b90:	beq	11bd8 <lista_insere@@Base+0x6c>
   11b94:	ldr	r3, [r5, #8]
   11b98:	cmp	r4, #0
   11b9c:	add	r3, r3, #1
   11ba0:	str	r3, [r5, #8]
   11ba4:	ldr	r3, [r5]
   11ba8:	beq	11be0 <lista_insere@@Base+0x74>
   11bac:	cmp	r4, r3
   11bb0:	streq	r4, [r0, #4]
   11bb4:	ldrne	r3, [r4, #8]
   11bb8:	streq	r0, [r4, #8]
   11bbc:	strne	r3, [r0, #8]
   11bc0:	ldrne	r3, [r4, #8]
   11bc4:	strne	r4, [r0, #4]
   11bc8:	streq	r0, [r5]
   11bcc:	strne	r0, [r3, #4]
   11bd0:	strne	r0, [r4, #8]
   11bd4:	pop	{r4, r5, r6, pc}
   11bd8:	mov	r0, #0
   11bdc:	pop	{r4, r5, r6, pc}
   11be0:	cmp	r3, #0
   11be4:	streq	r0, [r5, #4]
   11be8:	ldrne	r3, [r5, #4]
   11bec:	streq	r0, [r5]
   11bf0:	strne	r3, [r0, #8]
   11bf4:	strne	r0, [r3, #4]
   11bf8:	strne	r0, [r5, #4]
   11bfc:	pop	{r4, r5, r6, pc}
   11c00:	mov	r0, #0
   11c04:	bx	lr

00011c08 <lista_remove@@Base>:
   11c08:	cmp	r1, #0
   11c0c:	cmpne	r0, #0
   11c10:	push	{r4, r5, r6, lr}
   11c14:	beq	11c68 <lista_remove@@Base+0x60>
   11c18:	ldr	r2, [r1, #8]
   11c1c:	ldr	r3, [r0, #8]
   11c20:	cmp	r2, #0
   11c24:	sub	r3, r3, #1
   11c28:	str	r3, [r0, #8]
   11c2c:	ldrne	r3, [r1, #4]
   11c30:	ldreq	r5, [r1, #4]
   11c34:	strne	r3, [r2, #4]
   11c38:	ldrne	r5, [r1, #4]
   11c3c:	streq	r5, [r0]
   11c40:	cmp	r5, #0
   11c44:	streq	r2, [r0, #4]
   11c48:	mov	r4, r1
   11c4c:	ldr	r0, [r1]
   11c50:	strne	r2, [r5, #8]
   11c54:	bl	10f18 <free@plt>
   11c58:	mov	r0, r4
   11c5c:	bl	10f18 <free@plt>
   11c60:	mov	r0, r5
   11c64:	pop	{r4, r5, r6, pc}
   11c68:	mov	r5, #0
   11c6c:	mov	r0, r5
   11c70:	pop	{r4, r5, r6, pc}

00011c74 <lista_pesquisa@@Base>:
   11c74:	cmp	r1, #0
   11c78:	cmpne	r0, #0
   11c7c:	push	{r4, r5, r6, lr}
   11c80:	moveq	r4, #1
   11c84:	movne	r4, #0
   11c88:	beq	11d10 <lista_pesquisa@@Base+0x9c>
   11c8c:	cmp	r2, #1
   11c90:	bhi	11cd0 <lista_pesquisa@@Base+0x5c>
   11c94:	cmp	r2, #0
   11c98:	mov	r5, r1
   11c9c:	bne	11cd8 <lista_pesquisa@@Base+0x64>
   11ca0:	ldr	r4, [r0]
   11ca4:	cmp	r4, #0
   11ca8:	bne	11cbc <lista_pesquisa@@Base+0x48>
   11cac:	b	11cd0 <lista_pesquisa@@Base+0x5c>
   11cb0:	ldr	r4, [r4, #4]
   11cb4:	cmp	r4, #0
   11cb8:	beq	11cd0 <lista_pesquisa@@Base+0x5c>
   11cbc:	mov	r1, r5
   11cc0:	ldr	r0, [r4]
   11cc4:	bl	10ee8 <strcmp@plt>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11cb0 <lista_pesquisa@@Base+0x3c>
   11cd0:	mov	r0, r4
   11cd4:	pop	{r4, r5, r6, pc}
   11cd8:	ldr	r4, [r0, #4]
   11cdc:	cmp	r4, #0
   11ce0:	bne	11cf4 <lista_pesquisa@@Base+0x80>
   11ce4:	b	11cd0 <lista_pesquisa@@Base+0x5c>
   11ce8:	ldr	r4, [r4, #8]
   11cec:	cmp	r4, #0
   11cf0:	beq	11cd0 <lista_pesquisa@@Base+0x5c>
   11cf4:	mov	r1, r5
   11cf8:	ldr	r0, [r4]
   11cfc:	bl	10ee8 <strcmp@plt>
   11d00:	cmp	r0, #0
   11d04:	bne	11ce8 <lista_pesquisa@@Base+0x74>
   11d08:	mov	r0, r4
   11d0c:	pop	{r4, r5, r6, pc}
   11d10:	mov	r4, #0
   11d14:	mov	r0, r4
   11d18:	pop	{r4, r5, r6, pc}

00011d1c <lista_ordena@@Base>:
   11d1c:	cmp	r0, #0
   11d20:	beq	11da0 <lista_ordena@@Base+0x84>
   11d24:	ldr	r3, [r0, #8]
   11d28:	cmp	r3, #0
   11d2c:	beq	11d98 <lista_ordena@@Base+0x7c>
   11d30:	push	{r4, r5, r6, r7, r8, lr}
   11d34:	ldr	r6, [r0]
   11d38:	ldr	r7, [r6, #4]
   11d3c:	cmp	r7, #0
   11d40:	beq	11d90 <lista_ordena@@Base+0x74>
   11d44:	mov	r5, r6
   11d48:	mov	r4, r7
   11d4c:	ldr	r1, [r5]
   11d50:	ldr	r0, [r4]
   11d54:	bl	10ee8 <strcmp@plt>
   11d58:	cmp	r0, #0
   11d5c:	movlt	r5, r4
   11d60:	ldr	r4, [r4, #4]
   11d64:	cmp	r4, #0
   11d68:	bne	11d4c <lista_ordena@@Base+0x30>
   11d6c:	cmp	r6, r5
   11d70:	ldrne	r2, [r5]
   11d74:	ldrne	r3, [r6]
   11d78:	strne	r2, [r6]
   11d7c:	mov	r6, r7
   11d80:	strne	r3, [r5]
   11d84:	ldr	r7, [r6, #4]
   11d88:	cmp	r7, #0
   11d8c:	bne	11d44 <lista_ordena@@Base+0x28>
   11d90:	mov	r0, #0
   11d94:	pop	{r4, r5, r6, r7, r8, pc}
   11d98:	mov	r0, #0
   11d9c:	bx	lr
   11da0:	mvn	r0, #0
   11da4:	bx	lr

00011da8 <lista_inverte@@Base>:
   11da8:	push	{r4, r5, lr}
   11dac:	subs	r5, r0, #0
   11db0:	beq	11e48 <lista_inverte@@Base+0xa0>
   11db4:	ldr	r4, [r5, #8]
   11db8:	cmp	r4, #1
   11dbc:	ble	11e38 <lista_inverte@@Base+0x90>
   11dc0:	ldr	r2, [r5]
   11dc4:	cmp	r4, #2
   11dc8:	ldr	r3, [r2, #4]
   11dcc:	beq	11e40 <lista_inverte@@Base+0x98>
   11dd0:	sub	r4, r4, #2
   11dd4:	mov	r1, #0
   11dd8:	b	11de0 <lista_inverte@@Base+0x38>
   11ddc:	mov	r3, lr
   11de0:	ldr	ip, [r3, #8]
   11de4:	ldr	lr, [r3, #4]
   11de8:	add	r1, r1, #1
   11dec:	str	lr, [ip, #4]
   11df0:	ldr	lr, [r3, #4]
   11df4:	cmp	r1, r4
   11df8:	str	ip, [lr, #8]
   11dfc:	str	r2, [r3, #4]
   11e00:	str	r3, [r2, #8]
   11e04:	mov	r2, r3
   11e08:	bne	11ddc <lista_inverte@@Base+0x34>
   11e0c:	ldr	r2, [r5, #4]
   11e10:	mov	r1, #0
   11e14:	mov	r0, r1
   11e18:	ldr	ip, [r2, #8]
   11e1c:	str	ip, [r5, #4]
   11e20:	str	r1, [ip, #4]
   11e24:	str	r1, [r2, #8]
   11e28:	str	r3, [r2, #4]
   11e2c:	str	r2, [r3, #8]
   11e30:	str	r2, [r5]
   11e34:	pop	{r4, r5, pc}
   11e38:	mov	r0, #0
   11e3c:	pop	{r4, r5, pc}
   11e40:	mov	r3, r2
   11e44:	b	11e0c <lista_inverte@@Base+0x64>
   11e48:	mvn	r0, #0
   11e4c:	pop	{r4, r5, pc}

00011e50 <tabela_nova@@Base>:
   11e50:	cmp	r1, #0
   11e54:	cmpne	r0, #0
   11e58:	push	{r4, r5, r6, r7, r8, lr}
   11e5c:	ble	11ea4 <tabela_nova@@Base+0x54>
   11e60:	mov	r5, r0
   11e64:	mov	r0, #12
   11e68:	mov	r6, r1
   11e6c:	bl	10f54 <malloc@plt>
   11e70:	subs	r4, r0, #0
   11e74:	beq	11ea4 <tabela_nova@@Base+0x54>
   11e78:	mov	r1, #4
   11e7c:	mov	r0, r5
   11e80:	bl	10ed0 <calloc@plt>
   11e84:	cmp	r0, #0
   11e88:	mov	r7, r0
   11e8c:	str	r0, [r4, #4]
   11e90:	strne	r5, [r4, #8]
   11e94:	strne	r6, [r4]
   11e98:	beq	11eb0 <tabela_nova@@Base+0x60>
   11e9c:	mov	r0, r4
   11ea0:	pop	{r4, r5, r6, r7, r8, pc}
   11ea4:	mov	r4, #0
   11ea8:	mov	r0, r4
   11eac:	pop	{r4, r5, r6, r7, r8, pc}
   11eb0:	mov	r0, r4
   11eb4:	bl	10f18 <free@plt>
   11eb8:	mov	r4, r7
   11ebc:	b	11e9c <tabela_nova@@Base+0x4c>

00011ec0 <tabela_apaga@@Base>:
   11ec0:	push	{r4, r5, r6, r7, r8, lr}
   11ec4:	subs	r7, r0, #0
   11ec8:	popeq	{r4, r5, r6, r7, r8, pc}
   11ecc:	ldmib	r7, {r0, r3}
   11ed0:	cmp	r3, #0
   11ed4:	ble	11f10 <tabela_apaga@@Base+0x50>
   11ed8:	mov	r6, #0
   11edc:	ldr	r4, [r0, r6, lsl #2]
   11ee0:	cmp	r4, #0
   11ee4:	beq	11f04 <tabela_apaga@@Base+0x44>
   11ee8:	ldm	r4, {r0, r5}
   11eec:	bl	10f18 <free@plt>
   11ef0:	mov	r0, r4
   11ef4:	bl	10f18 <free@plt>
   11ef8:	subs	r4, r5, #0
   11efc:	bne	11ee8 <tabela_apaga@@Base+0x28>
   11f00:	ldmib	r7, {r0, r3}
   11f04:	add	r6, r6, #1
   11f08:	cmp	r3, r6
   11f0c:	bgt	11edc <tabela_apaga@@Base+0x1c>
   11f10:	bl	10f18 <free@plt>
   11f14:	mov	r0, r7
   11f18:	pop	{r4, r5, r6, r7, r8, lr}
   11f1c:	b	10f18 <free@plt>

00011f20 <tabela_adiciona@@Base>:
   11f20:	cmp	r2, #0
   11f24:	cmpne	r1, #0
   11f28:	moveq	r3, #1
   11f2c:	movne	r3, #0
   11f30:	cmp	r0, #0
   11f34:	orreq	r3, r3, #1
   11f38:	cmp	r3, #0
   11f3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f40:	bne	12004 <tabela_adiciona@@Base+0xe4>
   11f44:	mov	r6, r1
   11f48:	mov	r4, r0
   11f4c:	ldr	r3, [r0]
   11f50:	ldr	r1, [r0, #8]
   11f54:	mov	r0, r6
   11f58:	mov	r8, r2
   11f5c:	blx	r3
   11f60:	ldr	sl, [r4, #4]
   11f64:	ldr	r4, [sl, r0, lsl #2]
   11f68:	mov	r9, r0
   11f6c:	cmp	r4, #0
   11f70:	bne	11f84 <tabela_adiciona@@Base+0x64>
   11f74:	b	11fb0 <tabela_adiciona@@Base+0x90>
   11f78:	ldr	r4, [r4, #4]
   11f7c:	cmp	r4, #0
   11f80:	beq	11fb0 <tabela_adiciona@@Base+0x90>
   11f84:	ldr	r5, [r4]
   11f88:	mov	r1, r6
   11f8c:	mov	r0, r5
   11f90:	bl	10ee8 <strcmp@plt>
   11f94:	subs	r7, r0, #0
   11f98:	bne	11f78 <tabela_adiciona@@Base+0x58>
   11f9c:	mov	r1, r8
   11fa0:	add	r0, r5, #25
   11fa4:	bl	10f3c <strcpy@plt>
   11fa8:	mov	r0, r7
   11fac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fb0:	mov	r0, #8
   11fb4:	bl	10f54 <malloc@plt>
   11fb8:	subs	r4, r0, #0
   11fbc:	beq	12004 <tabela_adiciona@@Base+0xe4>
   11fc0:	mov	r0, #125	; 0x7d
   11fc4:	bl	10f54 <malloc@plt>
   11fc8:	cmp	r0, #0
   11fcc:	mov	r5, r0
   11fd0:	str	r0, [r4]
   11fd4:	beq	12004 <tabela_adiciona@@Base+0xe4>
   11fd8:	mov	r1, r6
   11fdc:	bl	10f3c <strcpy@plt>
   11fe0:	mov	r1, r8
   11fe4:	add	r0, r5, #25
   11fe8:	bl	10f3c <strcpy@plt>
   11fec:	ldr	r3, [sl, r9, lsl #2]
   11ff0:	mov	r7, #0
   11ff4:	str	r3, [r4, #4]
   11ff8:	mov	r0, r7
   11ffc:	str	r4, [sl, r9, lsl #2]
   12000:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12004:	mvn	r7, #1
   12008:	b	11fa8 <tabela_adiciona@@Base+0x88>

0001200c <tabela_remove@@Base>:
   1200c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12010:	subs	r4, r0, #0
   12014:	beq	120a0 <tabela_remove@@Base+0x94>
   12018:	mov	r6, r1
   1201c:	ldr	r3, [r4]
   12020:	ldr	r1, [r4, #8]
   12024:	mov	r0, r6
   12028:	blx	r3
   1202c:	ldr	sl, [r4, #4]
   12030:	ldr	r4, [sl, r0, lsl #2]
   12034:	mov	r9, r0
   12038:	cmp	r4, #0
   1203c:	beq	12094 <tabela_remove@@Base+0x88>
   12040:	mov	r8, #0
   12044:	b	12054 <tabela_remove@@Base+0x48>
   12048:	mov	r8, r4
   1204c:	subs	r4, r3, #0
   12050:	beq	12094 <tabela_remove@@Base+0x88>
   12054:	ldr	r5, [r4]
   12058:	mov	r1, r6
   1205c:	mov	r0, r5
   12060:	bl	10ee8 <strcmp@plt>
   12064:	ldr	r3, [r4, #4]
   12068:	subs	r7, r0, #0
   1206c:	bne	12048 <tabela_remove@@Base+0x3c>
   12070:	cmp	r8, #0
   12074:	strne	r3, [r8, #4]
   12078:	streq	r3, [sl, r9, lsl #2]
   1207c:	mov	r0, r5
   12080:	bl	10f18 <free@plt>
   12084:	mov	r0, r4
   12088:	bl	10f18 <free@plt>
   1208c:	mov	r0, r7
   12090:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12094:	mvn	r7, #2
   12098:	mov	r0, r7
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120a0:	mvn	r7, #1
   120a4:	b	12098 <tabela_remove@@Base+0x8c>

000120a8 <tabela_valor@@Base>:
   120a8:	push	{r4, r5, r6, lr}
   120ac:	subs	r4, r0, #0
   120b0:	beq	12108 <tabela_valor@@Base+0x60>
   120b4:	mov	r6, r1
   120b8:	ldr	r3, [r4]
   120bc:	ldr	r1, [r4, #8]
   120c0:	mov	r0, r6
   120c4:	blx	r3
   120c8:	ldr	r3, [r4, #4]
   120cc:	ldr	r4, [r3, r0, lsl #2]
   120d0:	cmp	r4, #0
   120d4:	bne	120e8 <tabela_valor@@Base+0x40>
   120d8:	b	12108 <tabela_valor@@Base+0x60>
   120dc:	ldr	r4, [r4, #4]
   120e0:	cmp	r4, #0
   120e4:	beq	12108 <tabela_valor@@Base+0x60>
   120e8:	ldr	r5, [r4]
   120ec:	mov	r1, r6
   120f0:	mov	r0, r5
   120f4:	bl	10ee8 <strcmp@plt>
   120f8:	cmp	r0, #0
   120fc:	bne	120dc <tabela_valor@@Base+0x34>
   12100:	add	r0, r5, #25
   12104:	pop	{r4, r5, r6, pc}
   12108:	mov	r0, #0
   1210c:	pop	{r4, r5, r6, pc}

00012110 <tabela_existe@@Base>:
   12110:	cmp	r0, #0
   12114:	cmpne	r1, #0
   12118:	beq	12134 <tabela_existe@@Base+0x24>
   1211c:	push	{r4, lr}
   12120:	bl	120a8 <tabela_valor@@Base>
   12124:	cmp	r0, #0
   12128:	mvneq	r0, #2
   1212c:	movne	r0, #1
   12130:	pop	{r4, pc}
   12134:	mvn	r0, #1
   12138:	bx	lr

0001213c <tabela_esvazia@@Base>:
   1213c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12140:	subs	r8, r0, #0
   12144:	beq	121b0 <tabela_esvazia@@Base+0x74>
   12148:	ldr	r1, [r8, #8]
   1214c:	cmp	r1, #0
   12150:	ble	121a8 <tabela_esvazia@@Base+0x6c>
   12154:	mov	r6, #0
   12158:	ldr	r3, [r8, #4]
   1215c:	mov	r9, r6
   12160:	ldr	r4, [r3, r6, lsl #2]
   12164:	lsl	r7, r6, #2
   12168:	cmp	r4, #0
   1216c:	add	r2, r3, r7
   12170:	beq	12198 <tabela_esvazia@@Base+0x5c>
   12174:	ldm	r4, {r0, r5}
   12178:	bl	10f18 <free@plt>
   1217c:	mov	r0, r4
   12180:	bl	10f18 <free@plt>
   12184:	subs	r4, r5, #0
   12188:	bne	12174 <tabela_esvazia@@Base+0x38>
   1218c:	ldr	r3, [r8, #4]
   12190:	ldr	r1, [r8, #8]
   12194:	add	r2, r3, r7
   12198:	add	r6, r6, #1
   1219c:	cmp	r1, r6
   121a0:	str	r9, [r2]
   121a4:	bgt	12160 <tabela_esvazia@@Base+0x24>
   121a8:	mov	r0, #0
   121ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121b0:	mvn	r0, #1
   121b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000121b8 <tabela_numelementos@@Base>:
   121b8:	cmp	r0, #0
   121bc:	beq	12208 <tabela_numelementos@@Base+0x50>
   121c0:	ldr	r1, [r0, #8]
   121c4:	cmp	r1, #0
   121c8:	ble	12200 <tabela_numelementos@@Base+0x48>
   121cc:	ldr	r2, [r0, #4]
   121d0:	mov	r0, #0
   121d4:	add	r1, r2, r1, lsl #2
   121d8:	ldr	r3, [r2], #4
   121dc:	cmp	r3, #0
   121e0:	beq	121f4 <tabela_numelementos@@Base+0x3c>
   121e4:	ldr	r3, [r3, #4]
   121e8:	add	r0, r0, #1
   121ec:	cmp	r3, #0
   121f0:	bne	121e4 <tabela_numelementos@@Base+0x2c>
   121f4:	cmp	r2, r1
   121f8:	bne	121d8 <tabela_numelementos@@Base+0x20>
   121fc:	bx	lr
   12200:	mov	r0, #0
   12204:	bx	lr
   12208:	mvn	r0, #1
   1220c:	bx	lr

00012210 <tabela_elementos@@Base>:
   12210:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12214:	mov	r5, r1
   12218:	mov	r4, r0
   1221c:	bl	121b8 <tabela_numelementos@@Base>
   12220:	cmp	r0, #0
   12224:	str	r0, [r5]
   12228:	ble	122a8 <tabela_elementos@@Base+0x98>
   1222c:	rsb	r3, r0, r0, lsl #5
   12230:	add	r0, r0, r3, lsl #2
   12234:	bl	10f54 <malloc@plt>
   12238:	subs	r8, r0, #0
   1223c:	beq	122a8 <tabela_elementos@@Base+0x98>
   12240:	ldr	r7, [r4, #8]
   12244:	cmp	r7, #0
   12248:	ble	122a0 <tabela_elementos@@Base+0x90>
   1224c:	ldr	r6, [r4, #4]
   12250:	mov	r9, #0
   12254:	add	r7, r6, r7, lsl #2
   12258:	mov	r5, #125	; 0x7d
   1225c:	ldr	r4, [r6], #4
   12260:	cmp	r4, #0
   12264:	beq	12298 <tabela_elementos@@Base+0x88>
   12268:	rsb	r3, r9, r9, lsl #5
   1226c:	add	r3, r9, r3, lsl #2
   12270:	add	r3, r8, r3
   12274:	ldr	r1, [r4]
   12278:	mov	r0, r3
   1227c:	mov	r2, r5
   12280:	bl	10f24 <memcpy@plt>
   12284:	ldr	r4, [r4, #4]
   12288:	add	r9, r9, #1
   1228c:	cmp	r4, #0
   12290:	add	r3, r0, #125	; 0x7d
   12294:	bne	12274 <tabela_elementos@@Base+0x64>
   12298:	cmp	r6, r7
   1229c:	bne	1225c <tabela_elementos@@Base+0x4c>
   122a0:	mov	r0, r8
   122a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122a8:	mov	r8, #0
   122ac:	mov	r0, r8
   122b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000122b4 <hash_krm@@Base>:
   122b4:	push	{r4, lr}
   122b8:	ldrb	r3, [r0]
   122bc:	cmp	r3, #0
   122c0:	beq	122e8 <hash_krm@@Base+0x34>
   122c4:	mov	r2, r0
   122c8:	mov	r0, #7
   122cc:	add	r0, r0, r3
   122d0:	ldrb	r3, [r2, #1]!
   122d4:	cmp	r3, #0
   122d8:	bne	122cc <hash_krm@@Base+0x18>
   122dc:	bl	125d0 <mostraTabela@@Base+0x2a4>
   122e0:	mov	r0, r1
   122e4:	pop	{r4, pc}
   122e8:	mov	r0, #7
   122ec:	b	122dc <hash_krm@@Base+0x28>

000122f0 <hash_djbm@@Base>:
   122f0:	push	{r4, lr}
   122f4:	ldrb	r2, [r0]
   122f8:	ldr	r3, [pc, #40]	; 12328 <hash_djbm@@Base+0x38>
   122fc:	cmp	r2, #0
   12300:	beq	12318 <hash_djbm@@Base+0x28>
   12304:	rsb	r3, r3, r3, lsl #5
   12308:	eor	r3, r3, r2
   1230c:	ldrb	r2, [r0, #1]!
   12310:	cmp	r2, #0
   12314:	bne	12304 <hash_djbm@@Base+0x14>
   12318:	mov	r0, r3
   1231c:	bl	125d0 <mostraTabela@@Base+0x2a4>
   12320:	mov	r0, r1
   12324:	pop	{r4, pc}
   12328:	andeq	r1, r0, r3, ror #9

0001232c <mostraTabela@@Base>:
   1232c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12330:	mov	r7, r0
   12334:	bl	121b8 <tabela_numelementos@@Base>
   12338:	mov	r1, r0
   1233c:	ldr	r0, [pc, #148]	; 123d8 <mostraTabela@@Base+0xac>
   12340:	add	r0, pc, r0
   12344:	bl	10ef4 <printf@plt>
   12348:	ldr	r2, [r7, #8]
   1234c:	cmp	r2, #0
   12350:	ble	123cc <mostraTabela@@Base+0xa0>
   12354:	ldr	r9, [pc, #128]	; 123dc <mostraTabela@@Base+0xb0>
   12358:	ldr	r5, [pc, #128]	; 123e0 <mostraTabela@@Base+0xb4>
   1235c:	add	r9, pc, r9
   12360:	add	r5, pc, r5
   12364:	mov	r6, #0
   12368:	mov	r8, #10
   1236c:	ldr	r3, [r7, #4]
   12370:	ldr	r3, [r3, r6, lsl #2]
   12374:	cmp	r3, #0
   12378:	beq	123c0 <mostraTabela@@Base+0x94>
   1237c:	mov	r1, r6
   12380:	mov	r0, r9
   12384:	bl	10ef4 <printf@plt>
   12388:	ldr	r3, [r7, #4]
   1238c:	ldr	r4, [r3, r6, lsl #2]
   12390:	cmp	r4, #0
   12394:	beq	123b4 <mostraTabela@@Base+0x88>
   12398:	ldr	r1, [r4]
   1239c:	mov	r0, r5
   123a0:	add	r2, r1, #25
   123a4:	bl	10ef4 <printf@plt>
   123a8:	ldr	r4, [r4, #4]
   123ac:	cmp	r4, #0
   123b0:	bne	12398 <mostraTabela@@Base+0x6c>
   123b4:	mov	r0, r8
   123b8:	bl	10f84 <putchar@plt>
   123bc:	ldr	r2, [r7, #8]
   123c0:	add	r6, r6, #1
   123c4:	cmp	r2, r6
   123c8:	bgt	1236c <mostraTabela@@Base+0x40>
   123cc:	mov	r0, #10
   123d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   123d4:	b	10f84 <putchar@plt>
   123d8:	andeq	r0, r0, r4, asr #11
   123dc:	andeq	r0, r0, ip, asr #11
   123e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   123e4:	subs	r2, r1, #1
   123e8:	bxeq	lr
   123ec:	bcc	125c4 <mostraTabela@@Base+0x298>
   123f0:	cmp	r0, r1
   123f4:	bls	125a8 <mostraTabela@@Base+0x27c>
   123f8:	tst	r1, r2
   123fc:	beq	125b4 <mostraTabela@@Base+0x288>
   12400:	clz	r3, r0
   12404:	clz	r2, r1
   12408:	sub	r3, r2, r3
   1240c:	rsbs	r3, r3, #31
   12410:	addne	r3, r3, r3, lsl #1
   12414:	mov	r2, #0
   12418:	addne	pc, pc, r3, lsl #2
   1241c:	nop			; (mov r0, r0)
   12420:	cmp	r0, r1, lsl #31
   12424:	adc	r2, r2, r2
   12428:	subcs	r0, r0, r1, lsl #31
   1242c:	cmp	r0, r1, lsl #30
   12430:	adc	r2, r2, r2
   12434:	subcs	r0, r0, r1, lsl #30
   12438:	cmp	r0, r1, lsl #29
   1243c:	adc	r2, r2, r2
   12440:	subcs	r0, r0, r1, lsl #29
   12444:	cmp	r0, r1, lsl #28
   12448:	adc	r2, r2, r2
   1244c:	subcs	r0, r0, r1, lsl #28
   12450:	cmp	r0, r1, lsl #27
   12454:	adc	r2, r2, r2
   12458:	subcs	r0, r0, r1, lsl #27
   1245c:	cmp	r0, r1, lsl #26
   12460:	adc	r2, r2, r2
   12464:	subcs	r0, r0, r1, lsl #26
   12468:	cmp	r0, r1, lsl #25
   1246c:	adc	r2, r2, r2
   12470:	subcs	r0, r0, r1, lsl #25
   12474:	cmp	r0, r1, lsl #24
   12478:	adc	r2, r2, r2
   1247c:	subcs	r0, r0, r1, lsl #24
   12480:	cmp	r0, r1, lsl #23
   12484:	adc	r2, r2, r2
   12488:	subcs	r0, r0, r1, lsl #23
   1248c:	cmp	r0, r1, lsl #22
   12490:	adc	r2, r2, r2
   12494:	subcs	r0, r0, r1, lsl #22
   12498:	cmp	r0, r1, lsl #21
   1249c:	adc	r2, r2, r2
   124a0:	subcs	r0, r0, r1, lsl #21
   124a4:	cmp	r0, r1, lsl #20
   124a8:	adc	r2, r2, r2
   124ac:	subcs	r0, r0, r1, lsl #20
   124b0:	cmp	r0, r1, lsl #19
   124b4:	adc	r2, r2, r2
   124b8:	subcs	r0, r0, r1, lsl #19
   124bc:	cmp	r0, r1, lsl #18
   124c0:	adc	r2, r2, r2
   124c4:	subcs	r0, r0, r1, lsl #18
   124c8:	cmp	r0, r1, lsl #17
   124cc:	adc	r2, r2, r2
   124d0:	subcs	r0, r0, r1, lsl #17
   124d4:	cmp	r0, r1, lsl #16
   124d8:	adc	r2, r2, r2
   124dc:	subcs	r0, r0, r1, lsl #16
   124e0:	cmp	r0, r1, lsl #15
   124e4:	adc	r2, r2, r2
   124e8:	subcs	r0, r0, r1, lsl #15
   124ec:	cmp	r0, r1, lsl #14
   124f0:	adc	r2, r2, r2
   124f4:	subcs	r0, r0, r1, lsl #14
   124f8:	cmp	r0, r1, lsl #13
   124fc:	adc	r2, r2, r2
   12500:	subcs	r0, r0, r1, lsl #13
   12504:	cmp	r0, r1, lsl #12
   12508:	adc	r2, r2, r2
   1250c:	subcs	r0, r0, r1, lsl #12
   12510:	cmp	r0, r1, lsl #11
   12514:	adc	r2, r2, r2
   12518:	subcs	r0, r0, r1, lsl #11
   1251c:	cmp	r0, r1, lsl #10
   12520:	adc	r2, r2, r2
   12524:	subcs	r0, r0, r1, lsl #10
   12528:	cmp	r0, r1, lsl #9
   1252c:	adc	r2, r2, r2
   12530:	subcs	r0, r0, r1, lsl #9
   12534:	cmp	r0, r1, lsl #8
   12538:	adc	r2, r2, r2
   1253c:	subcs	r0, r0, r1, lsl #8
   12540:	cmp	r0, r1, lsl #7
   12544:	adc	r2, r2, r2
   12548:	subcs	r0, r0, r1, lsl #7
   1254c:	cmp	r0, r1, lsl #6
   12550:	adc	r2, r2, r2
   12554:	subcs	r0, r0, r1, lsl #6
   12558:	cmp	r0, r1, lsl #5
   1255c:	adc	r2, r2, r2
   12560:	subcs	r0, r0, r1, lsl #5
   12564:	cmp	r0, r1, lsl #4
   12568:	adc	r2, r2, r2
   1256c:	subcs	r0, r0, r1, lsl #4
   12570:	cmp	r0, r1, lsl #3
   12574:	adc	r2, r2, r2
   12578:	subcs	r0, r0, r1, lsl #3
   1257c:	cmp	r0, r1, lsl #2
   12580:	adc	r2, r2, r2
   12584:	subcs	r0, r0, r1, lsl #2
   12588:	cmp	r0, r1, lsl #1
   1258c:	adc	r2, r2, r2
   12590:	subcs	r0, r0, r1, lsl #1
   12594:	cmp	r0, r1
   12598:	adc	r2, r2, r2
   1259c:	subcs	r0, r0, r1
   125a0:	mov	r0, r2
   125a4:	bx	lr
   125a8:	moveq	r0, #1
   125ac:	movne	r0, #0
   125b0:	bx	lr
   125b4:	clz	r2, r1
   125b8:	rsb	r2, r2, #31
   125bc:	lsr	r0, r0, r2
   125c0:	bx	lr
   125c4:	cmp	r0, #0
   125c8:	mvnne	r0, #0
   125cc:	b	125f0 <mostraTabela@@Base+0x2c4>
   125d0:	cmp	r1, #0
   125d4:	beq	125c4 <mostraTabela@@Base+0x298>
   125d8:	push	{r0, r1, lr}
   125dc:	bl	123e4 <mostraTabela@@Base+0xb8>
   125e0:	pop	{r1, r2, lr}
   125e4:	mul	r3, r2, r0
   125e8:	sub	r1, r1, r3
   125ec:	bx	lr
   125f0:	push	{r1, lr}
   125f4:	mov	r0, #8
   125f8:	bl	10edc <raise@plt>
   125fc:	pop	{r1, pc}

00012600 <__libc_csu_init@@Base>:
   12600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12604:	mov	r7, r0
   12608:	ldr	r6, [pc, #72]	; 12658 <__libc_csu_init@@Base+0x58>
   1260c:	ldr	r5, [pc, #72]	; 1265c <__libc_csu_init@@Base+0x5c>
   12610:	add	r6, pc, r6
   12614:	add	r5, pc, r5
   12618:	sub	r6, r6, r5
   1261c:	mov	r8, r1
   12620:	mov	r9, r2
   12624:	bl	10eb0 <calloc@plt-0x20>
   12628:	asrs	r6, r6, #2
   1262c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12630:	mov	r4, #0
   12634:	add	r4, r4, #1
   12638:	ldr	r3, [r5], #4
   1263c:	mov	r2, r9
   12640:	mov	r1, r8
   12644:	mov	r0, r7
   12648:	blx	r3
   1264c:	cmp	r6, r4
   12650:	bne	12634 <__libc_csu_init@@Base+0x34>
   12654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12658:	strdeq	r0, [r1], -r8
   1265c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00012660 <__libc_csu_fini@@Base>:
   12660:	bx	lr

Disassembly of section .fini:

00012664 <.fini>:
   12664:	push	{r3, lr}
   12668:	pop	{r3, pc}
